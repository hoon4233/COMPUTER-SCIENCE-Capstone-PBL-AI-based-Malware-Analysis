xor
add
add
mov
sti
push
pop
push
dec
imul
add
sti
add
in
data16
add
add
dec
push
inc
push
add
adc
add
sbb
adc
add
cli
mov
push
test
and
cs
adc
cmc
add
pusha
add
arpl
add
lds
inc
jl
aas
add
call
add
jecxz
in
add
scas
add
sbb
sub
sti
add
add
or
add
sti
hlt
add
or
sub
add
or
add
push
inc
add
mov
std
adc
add
(bad)
add
add
push
xchg
or
or
pop
sub
jecxz
add
adc
add
sub
add
add
dec
ins
or
es
sbb
add
add
push
add
add
pop
loop
add
pop
jmp
or
add
add
mov
xor
add
(bad)
dec
add
arpl
or
cmc
add
adc
retf
std
add
add
and
push
and
add
push
leave
fild
add
sbb
cmp
add
repz
sti
add
add
dec
adc
add
test
std
add
add
xchg
in
add
jns
or
retf
add
inc
mov
add
outs
fnstsw
pop
xchg
aaa
mov
icebp
add
arpl
sbb
add
jmp
and
imul
pop
add
dec
std
pop
adc
hlt
or
add
stos
add
add
std
imul
sbb
jb
rcl
add
cmc
int3
sbb
add
out
jmp
adc
fiadd
add
arpl
add
or
pop
scas
test
out
imul
add
add
sti
add
(bad)
jne
stc
add
add
push
stc
add
mov
cld
icebp
add
add
dec
add
push
add
aad
cld
add
ret
add
sub
std
adc
or
cli
leave
test
add
std
adc
add
xor
add
mov
inc
imul
test
std
add
repz
xor
or
push
add
es
in
add
push
sti
sub
add
add
add
xchg
fidivr
inc
add
add
icebp
in
out
add
add
fmul
rol
outs
fiadd
jns
sbb
add
add
sar
add
aas
add
add
xor
add
add
fild
stc
clc
test
add
test
add
pop
add
outs
inc
imul
inc
pusha
or
add
shr
push
add
(bad)
cmp
add
fstp
xor
or
test
test
add
std
add
cld
pop
jmp
fild
add
fld
add
loop
inc
xchg
jmp
xchg
add
into
cmp
add
add
or
sbb
add
pop
add
in
add
or
add
add
mov
and
add
add
dec
rcr
add
add
inc
sbb
add
jne
arpl
mov
or
test
add
or
push
aad
mov
add
or
add
std
ins
jmp
jb
sbb
add
or
add
pop
sti
inc
add
add
ror
call
push
xlat
rol
or
hlt
dec
add
ins
add
repz
mov
(bad)
(bad)
fiadd
or
into
into
inc
add
add
add
sbb
mov
or
pop
xor
add
sub
add
xchg
xchg
add
std
aas
add
aaa
add
cld
pop
inc
in
(bad)
and
stos
add
cli
add
and
rol
xor
leave
add
repz
cli
add
add
cld
dec
fbstp
lds
add
add
pop
stc
cmp
fist
cld
push
out
out
mov
adc
adc
mov
xchg
dec
or
add
jne
xchg
or
add
sbb
add
mov
add
sub
push
add
add
or
or
or
repz
add
add
add
mov
add
jb
sti
out
add
add
sbb
add
cmp
add
in
add
add
add
inc
jne
or
add
add
test
jmp
add
adc
repz
arpl
jmp
add
inc
fcom
dec
(bad)
mov
inc
fdivr
add
(bad)
scas
(bad)
call
mov
add
adc
or
add
shl
add
scas
add
pop
pop
dec
test
mov
add
or
lds
add
add
add
lds
outs
sub
in
or
out
xor
ins
add
push
add
add
mov
cld
sub
add
add
add
add
xor
add
aas
add
mov
add
int3
sti
neg
push
dec
and
repnz
sar
arpl
clc
sub
add
add
push
inc
add
add
add
mov
lds
dec
add
add
add
in
add
add
jecxz
clc
add
mov
sub
stc
data16
add
xlat
add
mov
int3
add
add
add
jecxz
inc
sub
fiadd
add
out
imul
or
dec
add
std
mov
scas
xlat
cmp
add
fild
jmp
add
push
rol
add
add
sub
add
or
fild
int3
out
add
add
adc
add
add
add
add
pop
add
add
aas
fild
add
add
ins
mov
mov
or
sbb
add
mov
sti
out
loop
push
add
adc
add
add
inc
dec
sub
push
(bad)
inc
cmps
jmp
arpl
cmp
std
sub
add
add
push
add
shl
xchg
or
add
std
jmp
stos
mov
add
(bad)
clc
add
std
xor
add
add
dec
mov
inc
aas
add
mov
rol
add
stc
aas
std
xor
or
pop
mov
sub
add
and
add
push
jmp
and
sbb
add
add
mov
xchg
call
add
loope
out
add
adc
add
add
mov
add
repnz
add
add
add
add
ficom
arpl
add
cmp
xor
adc
dec
add
add
call
add
loop
jmp
repz
add
add
call
push
add
adc
xor
add
inc
and
add
dec
into
jmp
sti
test
repnz
cli
jb
push
xchg
add
add
add
add
add
pop
rol
retf
shl
rcr
add
add
and
push
add
or
in
not
popf
adc
add
and
and
inc
add
xor
mov
add
xor
cld
mov
fucomp
arpl
and
dec
add
add
add
and
cmps
add
add
add
adc
add
add
add
add
xor
add
add
shl
loop
add
cmps
add
mov
or
sbb
xor
hlt
rol
cmp
add
xchg
add
add
(bad)
in
loope
add
std
add
inc
add
mov
cli
in
leave
sub
aas
clc
pop
push
call
sti
push
add
add
inc
add
add
add
std
add
add
test
pop
int3
add
mov
call
add
sbb
mov
add
and
add
add
add
or
add
fld
xor
add
rol
add
add
ins
stos
rol
add
fadd
add
add
adc
icebp
or
add
add
data16
add
rol
add
add
out
add
add
add
push
cmp
add
add
std
push
add
sub
xor
cmp
add
add
jb
add
std
loope
add
mov
cmc
add
(bad)
fild
sbb
and
push
ret
or
repnz
neg
add
xchg
div
add
add
add
sbb
add
add
add
add
jne
add
out
(bad)
inc
out
dec
cmps
add
out
(bad)
add
into
es
add
add
add
inc
sub
add
add
out
in
inc
add
add
jne
fild
or
add
add
cli
add
xchg
sbb
neg
add
retf
inc
add
and
add
adc
sub
popf
add
(bad)
in
stc
add
add
popf
and
add
add
add
stos
add
or
and
retf
int3
adc
jns
test
pop
fstp
sbb
loope
pop
add
inc
sbb
into
stc
add
add
xchg
cmps
add
call
std
add
add
cli
xchg
data16
push
add
add
add
add
or
cld
rol
mov
mov
add
add
mov
add
add
add
clc
dec
add
add
adc
call
add
add
add
popf
or
push
cli
cmc
add
add
fbstp
sbb
stc
add
add
jl
xlat
out
jmp
push
not
adc
push
add
or
stos
cld
add
sbb
add
(bad)
or
jmp
add
xor
add
cld
inc
cli
add
jne
add
cs
sbb
jne
add
add
ret
add
add
std
call
add
idiv
pop
loope
sbb
sti
add
in
dec
sar
add
inc
add
add
add
lock
add
and
cmc
add
add
add
adc
add
add
mov
or
jmp
pop
stos
cld
xlat
add
add
add
clc
add
clc
add
add
add
push
add
add
rol
cld
adc
xor
add
sbb
idiv
add
add
add
add
outs
add
add
mov
scas
mov
add
adc
add
add
and
add
add
stc
mov
jmp
add
add
cld
shr
adc
or
retf
add
add
pop
add
cld
add
div
sbb
fiadd
popf
in
add
add
call
add
adc
cld
rol
add
inc
xlat
push
add
add
add
clc
push
adc
mov
push
dec
cmc
push
jb
xchg
(bad)
std
add
loope
add
call
sbb
add
mov
add
add
jmp
out
add
scas
add
test
shl
and
loope
cli
add
jl
add
add
add
inc
add
add
add
rcl
(bad)
jl
xor
or
add
rol
add
scas
dec
add
add
add
push
xchg
sti
add
sbb
add
add
aad
add
inc
add
add
add
adc
add
idiv
add
add
mov
add
mov
(bad)
xor
inc
mov
adc
rol
cmp
std
mov
cmc
(bad)
stos
add
add
inc
add
add
xor
push
cs
sub
pop
ror
add
jmp
inc
push
and
add
add
dec
popf
add
popf
dec
add
push
add
add
add
stos
add
and
add
push
jecxz
or
jmp
add
mov
test
add
add
in
add
add
call
add
cld
add
add
or
add
or
push
add
add
add
test
jecxz
or
add
jns
jmp
push
add
add
int3
clc
xor
dec
pusha
inc
fld
out
xchg
std
test
xor
add
xchg
and
cli
push
mov
outs
add
cli
add
cmps
add
add
or
inc
cld
add
jmp
or
add
test
add
inc
(bad)
out
or
jne
sti
mov
jmp
sub
add
add
fdivr
add
sub
sar
jmp
cmp
jmp
cli
or
push
jmp
push
test
add
add
cld
pop
pop
(bad)
add
or
add
hlt
inc
add
imul
inc
sbb
add
loop
inc
add
jecxz
jecxz
add
add
icebp
xor
loope
jl
icebp
scas
add
add
repnz
(bad)
(bad)
stos
add
add
add
xchg
cmp
scas
int3
push
add
inc
add
and
add
rol
inc
push
push
mov
in
add
repz
imul
lock
add
add
add
add
call
jmp
or
add
mov
add
out
sub
pusha
add
add
add
inc
dec
add
add
out
mov
(bad)
std
add
add
int3
add
out
(bad)
push
push
aaa
add
add
pop
adc
aad
jmp
rol
call
or
inc
add
add
sbb
out
sub
std
inc
ins
add
add
sub
xor
retf
add
cld
fidivr
add
add
inc
or
aas
(bad)
std
add
add
add
std
cmps
pop
add
dec
or
es
push
add
stos
cmc
add
in
(bad)
mov
dec
sti
pop
xchg
aad
add
add
add
push
or
adc
repz
or
add
add
add
xor
add
sub
pop
or
add
es
jmp
sub
add
clc
push
jecxz
pop
add
or
mov
jmp
add
into
add
add
sbb
out
call
clc
and
sbb
add
and
add
add
mov
(bad)
jl
cld
add
cmps
sti
fadd
add
mov
add
inc
add
std
icebp
or
retf
push
fadd
add
add
mov
push
add
add
add
outs
cmps
mov
add
sar
dec
cmc
mov
add
add
push
sbb
push
sub
adc
pop
into
add
mov
clc
in
stc
add
pop
rol
add
sti
add
add
loop
or
add
out
mov
mov
inc
add
mov
add
or
arpl
outs
cmc
and
push
add
mov
dec
pop
out
jne
push
or
add
idiv
dec
add
xchg
add
cmc
pop
or
test
add
add
add
cmps
add
add
add
add
or
add
fnstsw
out
add
add
sbb
add
std
dec
add
add
mov
add
pop
es
(bad)
sub
add
pop
sub
sbb
sub
add
out
xchg
pop
add
push
pop
in
std
add
mov
xchg
adc
out
fdivrp
add
arpl
adc
add
adc
add
add
stos
sbb
inc
sub
cmc
add
mov
cmps
sbb
cs
cmp
aaa
add
fild
call
mov
loop
call
jb
add
add
jmp
or
add
mov
add
push
add
add
add
mov
or
cld
(bad)
out
add
add
aad
add
mov
cli
add
add
add
add
icebp
sub
ret
outs
add
add
push
out
imul
add
sbb
cld
popf
inc
add
(bad)
cmc
cld
in
mov
dec
adc
add
dec
call
cs
push
xlat
or
cld
test
add
mov
xor
dec
(bad)
out
add
add
sub
loope
add
jmp
push
push
stos
into
test
(bad)
inc
add
icebp
mov
jmp
xor
sti
imul
add
pop
rol
inc
inc
cmp
icebp
push
cmp
sub
cs
xlat
popf
add
add
or
add
out
jns
add
or
adc
inc
and
add
add
or
shr
or
jmp
fild
add
inc
add
inc
add
test
add
push
push
or
adc
stos
dec
xchg
add
test
inc
push
out
add
add
add
aad
xor
add
add
or
mov
cld
imul
and
or
add
add
sbb
std
cmp
adc
jb
add
mov
clc
add
pop
fidiv
lock
mov
aaa
add
add
mov
repz
data16
add
add
or
and
fucomip
lds
add
clc
add
and
ret
add
add
std
jmp
out
(bad)
loope
add
add
in
loop
add
mov
or
out
mov
pop
popf
add
scas
add
mov
test
add
add
dec
and
push
add
lock
sbb
clc
add
add
xchg
out
add
mov
add
imul
and
pop
std
jmp
add
out
fisubr
mov
add
cmp
imul
or
repnz
add
adc
add
ret
add
call
add
add
push
add
add
test
(bad)
fcomp
ins
or
or
add
clc
adc
add
cli
aad
aaa
clc
ficom
and
xchg
add
or
add
test
cmc
pop
fisub
add
rol
mov
clc
push
or
jmp
out
lds
pop
add
data16
out
cs
add
adc
add
add
add
add
add
out
icebp
add
add
out
data16
or
push
add
in
add
add
test
add
add
test
leave
add
(bad)
cld
and
mul
std
add
or
add
add
adc
add
fild
add
and
add
add
add
add
cmp
dec
add
call
aad
inc
add
test
sbb
mov
fild
add
add
sar
sbb
rcr
or
sti
jb
nop
sub
add
and
and
add
loope
sbb
jb
sti
adc
add
add
sti
sbb
add
add
and
add
call
lock
inc
add
add
sbb
neg
and
stc
and
pop
pop
add
add
hlt
std
add
mov
add
add
add
sbb
push
fdivr
add
fcomi
add
add
cmc
sbb
test
add
mov
int3
in
add
add
mov
outs
hlt
ror
add
or
inc
add
add
add
repz
xor
add
inc
fld
add
add
repz
add
add
or
add
add
add
or
add
into
jl
or
(bad)
out
(bad)
std
leave
push
add
std
data16
add
mov
add
add
add
add
inc
add
fild
add
add
add
add
adc
cld
cli
add
fucomp
repz
jmp
dec
add
add
or
xor
add
jne
jl
or
add
add
(bad)
jns
add
leave
fild
cmps
add
stc
add
add
pop
mov
inc
xor
add
cld
cli
add
add
dec
xor
fadd
sti
add
mov
out
cmp
fiadd
rcr
pop
add
or
fistp
ficom
xor
add
add
mov
add
and
add
mov
add
pusha
add
add
adc
outs
pop
jmp
adc
rol
add
repz
mov
dec
rcr
add
mov
pop
add
or
jb
sub
add
sbb
cmp
stc
mov
add
add
add
pop
add
int3
or
arpl
imul
dec
add
loop
or
push
std
shl
test
inc
add
or
pop
or
sbb
or
add
or
add
imul
leave
aaa
dec
add
push
add
add
and
cli
sbb
inc
or
push
(bad)
jmp
add
add
add
add
add
sub
add
cmp
cli
adc
pusha
inc
adc
aaa
add
sbb
test
add
add
xor
sbb
pop
add
push
(bad)
inc
cmc
cld
and
inc
add
or
add
add
push
add
add
sub
add
or
jmp
test
adc
add
inc
add
fdivr
cmc
add
or
add
scas
outs
cmp
add
add
push
or
jmp
add
std
shl
add
or
(bad)
scas
cld
add
call
add
mov
in
cmp
add
add
adc
add
and
add
cmp
add
in
push
cld
add
sti
loop
lds
test
or
shr
add
sub
test
sti
sbb
add
adc
adc
push
add
shl
loope
hlt
or
sbb
add
add
add
sbb
or
add
add
pop
(bad)
cmp
fist
outs
aaa
std
stos
add
xchg
test
add
call
add
add
out
cli
add
add
add
or
aad
inc
add
or
sti
test
inc
add
jns
(bad)
or
cld
jl
push
inc
add
add
fucomip
inc
in
add
pop
add
add
add
lock
xor
mov
add
(bad)
out
repz
fild
add
add
outs
clc
out
popf
sub
mov
add
cmps
add
cmp
add
outs
add
add
out
out
fsubrp
add
add
jmp
add
add
std
add
lock
add
add
add
pop
scas
inc
add
push
adc
add
loop
inc
out
add
or
dec
cld
(bad)
push
add
out
(bad)
jmp
add
add
add
or
add
sbb
adc
push
or
aad
(bad)
push
test
out
mov
out
add
add
int3
test
(bad)
aad
mov
add
(bad)
and
jb
jns
add
in
add
or
add
(bad)
sub
inc
add
stc
mov
into
add
inc
not
sbb
(bad)
pop
add
cli
adc
add
xor
xor
mov
retf
add
ret
loope
add
arpl
and
add
add
add
(bad)
xchg
add
add
inc
add
add
add
out
sbb
add
out
stc
fisttp
add
add
std
add
sub
mov
xor
dec
push
xchg
idiv
(bad)
add
std
jmp
push
add
mov
add
mov
add
or
mov
add
add
fdiv
mov
imul
jmp
add
fild
add
add
retf
(bad)
adc
jne
sub
in
add
cs
pop
outs
pop
add
xor
add
add
cmp
fdiv
jl
cmc
repz
or
cld
add
add
out
or
dec
or
or
add
add
repz
or
add
add
push
outs
add
mov
cmp
std
cli
(bad)
std
xor
add
aad
add
add
add
or
add
sbb
adc
rol
add
std
jl
in
add
add
pop
pop
add
sti
out
(bad)
cs
adc
sbb
sti
imul
inc
add
add
hlt
stos
add
add
idiv
clc
add
aas
or
inc
sti
adc
xchg
xchg
add
cmp
and
jmp
add
sbb
adc
and
add
xchg
dec
call
sbb
in
add
or
dec
mul
add
sti
add
add
out
add
adc
(bad)
or
clc
call
push
test
xchg
add
call
pusha
add
push
add
mov
cmp
add
imul
mov
call
add
inc
add
or
cli
out
jnp
push
icebp
(bad)
stos
add
fld
ret
retf
or
add
add
adc
push
push
add
add
(bad)
sbb
imul
std
or
and
sbb
sub
add
add
add
add
cmps
repz
sub
and
add
push
(bad)
push
mov
add
or
aas
adc
add
mov
or
add
icebp
add
cli
std
aaa
add
add
mov
mov
stc
add
add
arpl
and
add
add
xlat
pusha
cmc
add
add
add
aad
add
inc
sbb
add
add
add
adc
sbb
sbb
add
add
push
add
adc
cmp
aas
and
std
add
add
pusha
add
jmp
add
mov
jne
shl
(bad)
mov
xor
add
call
cmp
jne
clc
adc
aaa
int3
jmp
outs
add
cmp
sub
mov
add
pop
loop
shr
add
or
out
mov
add
add
or
clc
test
sti
adc
add
add
or
into
popf
imul
or
add
add
sub
pop
out
aaa
std
add
mov
sub
add
call
add
add
std
add
sub
jmp
fist
in
(bad)
in
pusha
add
(bad)
push
sbb
es
add
add
mov
inc
add
add
add
cld
repz
cmps
xlat
add
icebp
jns
add
add
(bad)
sub
test
add
adc
adc
push
add
inc
rol
and
fld
inc
xchg
(bad)
out
dec
mov
add
out
add
(bad)
jmp
add
std
add
mov
outs
add
jmp
jne
add
add
(bad)
add
sti
sar
add
arpl
add
add
imul
add
xor
or
cmps
add
add
add
add
loope
int3
add
add
add
mov
add
(bad)
std
jb
sbb
test
aas
add
push
add
add
pusha
scas
sti
test
cli
add
pop
or
adc
std
add
add
inc
add
xor
test
repnz
adc
fnstsw
retf
sub
cmc
mov
adc
add
cld
call
add
test
or
push
std
or
mov
xchg
and
cld
inc
add
add
push
add
cmps
lock
or
mov
xor
add
add
mov
add
xchg
add
in
add
fdivr
stc
mov
adc
push
int3
add
add
mov
cli
sbb
cmp
pusha
cmp
add
arpl
out
repnz
fild
pop
or
add
pop
add
mov
add
(bad)
out
add
push
add
push
add
add
and
add
jl
inc
jecxz
pusha
ret
add
push
pop
cld
rcl
fistp
cmp
cmp
or
add
add
cmc
(bad)
inc
std
in
es
and
add
repz
idiv
out
pop
add
add
push
or
jl
stc
mov
push
add
add
add
or
add
add
cmps
add
add
or
out
add
add
stc
add
out
inc
hlt
xchg
repnz
or
add
call
add
test
push
xor
or
cmp
(bad)
mov
pop
pop
or
clc
or
xor
or
cmc
test
push
sti
(bad)
out
add
add
add
test
adc
add
xchg
cli
(bad)
inc
clc
xor
sub
or
add
std
add
sub
add
add
sbb
cmp
add
jmp
test
jne
add
sti
add
add
push
mul
add
dec
test
call
arpl
dec
cld
fiadd
push
add
pop
add
mov
fiadd
add
mov
push
(bad)
cmc
add
cmc
add
icebp
push
add
inc
or
xchg
std
add
add
stc
xchg
mov
add
pop
dec
add
sub
out
add
add
pop
cmp
adc
add
jmp
jmp
pop
loope
add
loop
loope
out
rol
xor
add
pop
cld
push
jecxz
data16
cld
inc
add
lock
push
std
add
icebp
repz
add
pop
add
add
sbb
add
cli
repz
add
add
cmc
add
pop
add
sti
imul
sbb
add
add
cld
add
dec
add
add
or
loope
add
add
add
std
add
cmp
push
add
out
fild
sub
imul
add
in
retf
lock
add
add
mov
stc
mov
es
add
ret
repz
xor
test
mov
stc
add
xor
push
dec
sti
add
dec
in
add
add
add
adc
and
test
push
add
push
fidiv
add
add
rol
leave
pop
add
dec
cmp
add
(bad)
icebp
test
add
add
add
fisttp
add
sbb
add
mov
add
cld
test
add
jmp
add
add
add
mov
push
adc
add
loope
add
not
sub
jns
aad
or
mov
add
xor
std
and
sar
add
outs
add
fdivr
std
add
add
add
add
push
leave
dec
mov
add
or
add
add
pop
out
add
fistp
add
aaa
cmc
add
add
or
pushw
add
out
xor
cmc
loop
shl
jmp
add
dec
icebp
idiv
rep
jmp
add
add
fsubp
int3
sbb
add
push
add
mov
add
fisttp
jmp
add
aad
add
push
inc
or
push
and
fistp
mov
sub
test
jns
fild
sub
std
and
add
add
add
xor
add
sub
rcl
add
push
dec
scas
add
stos
xor
idiv
jns
add
add
sub
sbb
test
add
add
add
repz
add
mov
not
ror
add
pop
add
add
or
or
add
and
jns
add
add
inc
add
add
adc
add
add
cli
shr
fcom
add
mov
int3
add
std
cli
inc
ficom
add
add
xor
add
add
add
aaa
or
adc
add
pop
aas
pop
idiv
add
add
std
xor
mov
adc
idiv
pusha
std
adc
inc
add
dec
or
stos
add
mov
add
add
aad
dec
add
repz
add
add
push
add
stc
add
in
(bad)
cld
xchg
aad
and
add
add
add
fsubrp
add
add
add
(bad)
mov
or
add
ltr
pop
cmp
rol
pop
aaa
jb
ud0
add
add
mov
add
add
std
sub
add
push
add
add
add
or
add
(bad)
aad
push
mov
int3
fiadd
sti
jmp
add
popf
add
add
or
icebp
mov
sbb
hlt
or
or
add
add
sti
cs
sti
pop
jne
int3
hlt
sbb
add
loope
add
pusha
adc
(bad)
repz
jb
or
add
cld
mov
or
std
inc
push
add
loop
add
add
rcl
add
sti
pop
add
(bad)
jecxz
add
xlat
shr
add
add
call
dec
xor
std
shr
add
or
add
inc
jmp
add
clc
add
and
add
or
rol
or
outs
out
add
(bad)
inc
add
fucom
aaa
and
add
xchg
out
add
add
add
add
add
stc
sub
add
rol
sub
ins
jmp
popf
sub
mov
add
adc
or
inc
cli
add
add
add
add
cmp
ror
sbb
leave
fiadd
ret
adc
add
or
out
push
add
adc
push
adc
add
adc
or
adc
test
xor
sti
aaa
std
add
inc
add
fistp
cmps
out
add
add
add
ror
pop
arpl
cld
aas
push
add
rol
add
inc
add
aas
fld
add
cmp
add
lock
cmps
add
mov
add
shr
fcmovne
popf
cmp
add
pusha
cmp
fiadd
cld
(bad)
adc
mov
add
cmp
inc
add
add
jns
add
inc
add
add
fbstp
cmp
push
dec
retf
dec
add
add
cmp
in
dec
add
jmp
sub
add
adc
add
inc
add
add
pop
add
adc
inc
add
scas
xchg
add
add
call
stc
add
adc
xchg
test
or
std
push
add
add
xlat
jmp
xchg
xchg
add
add
add
add
add
add
push
call
rol
add
repz
pop
add
sub
or
add
add
add
add
add
pop
sti
add
add
add
jns
add
repz
pusha
xlat
push
add
mov
or
cmp
add
out
cmp
sub
push
fisub
add
add
cmps
push
dec
add
idiv
call
add
add
std
cld
add
inc
pop
add
add
or
repz
add
aaa
stc
push
add
add
add
add
add
add
add
rol
add
loop
xlat
or
add
cld
rcl
mov
or
(bad)
inc
rol
adc
or
add
lds
cli
sbb
add
add
sub
add
sti
add
add
or
(bad)
fisubr
cli
or
(bad)
inc
pop
test
or
sti
inc
inc
into
add
outs
add
(bad)
sti
ins
jmp
add
fst
xlat
add
pop
int3
sbb
add
cld
call
dec
add
add
add
add
add
aas
add
test
sub
xor
add
add
repz
add
pusha
add
fisttp
push
repz
imul
add
outs
add
out
add
test
mov
mov
add
add
add
neg
call
(bad)
aas
add
lds
add
(bad)
sbb
add
cmc
add
or
push
pop
sbb
add
add
call
add
sbb
and
add
add
add
rol
mov
add
push
inc
add
add
fdivr
add
div
sub
retf
add
add
loop
add
mov
add
xchg
mov
cli
ret
inc
stc
add
add
popf
aaa
pop
jmp
sub
call
cmc
add
(bad)
(bad)
add
add
adc
idiv
add
sbb
add
fild
out
test
push
add
aad
(bad)
mov
add
or
(bad)
mov
sti
jb
lock
in
inc
xchg
std
add
push
add
and
inc
ret
add
add
test
add
mov
adc
add
add
add
or
cli
or
add
or
xor
std
mov
add
add
in
mov
add
add
add
add
mov
std
mov
into
add
repnz
add
sti
adc
add
add
mov
fiadd
dec
add
aas
add
std
sbb
add
cmps
mov
inc
call
add
adc
lock
cmp
push
add
pop
(bad)
(bad)
add
and
add
stc
inc
and
add
dec
add
add
std
xor
mov
cmc
add
add
jmp
imul
add
mov
fiadd
add
mov
add
add
add
(bad)
or
inc
movups
pop
add
add
add
jmp
add
add
jecxz
inc
cmp
add
add
add
lgs
std
add
add
xchg
sbb
clc
sub
add
add
push
add
sti
or
adc
icebp
cmp
add
xor
inc
dec
call
push
push
out
ret
idiv
fimul
add
out
and
add
popf
sbb
std
test
test
add
out
add
outs
add
or
add
mul
add
push
add
pop
add
dec
and
sub
test
xchg
add
add
and
add
jmp
add
pop
repnz
mov
add
xor
add
std
add
add
xchg
add
sti
sbb
push
arpl
jmp
(bad)
push
push
(bad)
std
sub
sti
mov
add
stos
lds
icebp
pop
add
icebp
add
or
test
sub
adc
div
jne
std
add
stos
add
dec
lds
sbb
add
jne
ins
add
call
inc
add
loope
cs
add
mov
sub
add
or
add
or
inc
add
popf
add
cmp
int3
xchg
retf
or
(bad)
xor
jb
or
cld
add
add
call
mov
cmps
test
cld
push
add
add
xchg
sub
pop
add
add
add
pop
xchg
add
add
dec
cmps
call
cmp
rol
add
ror
add
or
add
add
add
mov
mov
mov
in
sub
or
add
data16
jl
inc
add
stc
mov
add
inc
fsubp
inc
jl
std
aad
out
push
add
pusha
add
stc
add
stc
or
add
popf
add
pop
leave
icebp
jne
mov
pop
add
add
add
add
mov
adc
add
std
pop
add
inc
add
retf
in
mov
add
add
stc
add
push
mov
add
(bad)
aas
add
or
clc
add
arpl
cld
retf
mov
add
add
push
mov
hlt
inc
add
not
std
fiadd
out
sub
call
aad
mov
add
add
add
pusha
cmp
add
add
add
add
add
leave
add
add
add
add
hlt
rol
mov
shr
add
add
add
add
retf
add
std
cmps
jb
sub
sub
pop
lock
add
arpl
stc
cs
outs
add
jne
add
xchg
mov
std
xor
repnz
data16
or
add
add
push
std
cmps
out
pop
add
sbb
sbb
add
cld
add
call
add
mov
add
sub
add
sub
inc
adc
add
jmp
div
mov
cmps
test
add
add
add
add
cld
neg
add
add
add
mov
fcomip
cmps
add
shl
arpl
lds
leave
add
test
idiv
xor
add
or
jmp
add
add
in
and
add
stos
aad
imul
add
mov
cmps
out
add
add
add
call
add
add
inc
ret
add
adc
add
add
add
cli
out
add
pop
adc
add
push
cld
stos
add
or
add
add
add
add
stos
add
mov
fld
add
pop
mov
std
add
dec
add
add
mov
add
add
add
mov
adc
inc
dec
loop
in
cmc
idiv
add
std
add
rol
in
std
add
out
dec
add
add
add
add
inc
add
xor
sbb
dec
add
add
add
mov
inc
add
add
inc
(bad)
mov
sti
add
add
sub
mov
xchg
xlat
adc
loop
and
sti
add
jmp
pop
out
add
std
push
push
test
add
out
jmp
ins
jmp
clc
add
sti
cld
add
xor
add
sub
add
pop
call
adc
add
sbb
fadd
fild
add
inc
popf
adc
add
add
mov
fisttp
in
scas
pop
mul
sti
xor
aaa
out
add
add
fcomp
cli
cld
inc
xchg
add
sbb
xlat
call
(bad)
sti
add
add
sbb
add
xor
imul
sti
or
add
add
xor
repnz
add
icebp
fdivrp
and
add
add
ins
add
xor
lds
cmp
stos
add
add
jne
call
add
jns
xor
add
sbb
or
add
sbb
icebp
add
add
loop
mov
xchg
cld
icebp
sub
add
add
add
mov
out
stos
jb
add
out
add
add
or
and
sbb
add
add
add
in
add
push
add
div
add
call
pop
xlat
cmps
adc
adc
add
clc
add
xor
add
xchg
aaa
cmc
add
or
add
(bad)
div
rol
in
sub
clc
test
stc
mov
mov
or
add
add
or
or
push
add
add
and
pop
add
jmp
add
fcmovne
cmc
or
add
imul
add
add
stc
in
aad
inc
add
test
test
arpl
out
icebp
add
add
mov
popf
pop
inc
add
ret
retf
(bad)
out
sti
add
(bad)
cmps
dec
aad
hlt
add
jmp
push
jmp
add
or
xor
std
add
sbb
adc
push
std
add
fild
add
add
add
add
sbb
add
sti
xchg
(bad)
add
or
add
xor
add
push
add
add
fcom
sbb
fcomp
add
cmc
mov
add
add
imul
sbb
in
inc
cld
push
add
fbstp
add
jmp
or
add
outs
mov
add
add
call
or
jecxz
push
mov
scas
int3
add
xchg
inc
rcl
loope
pop
add
std
add
out
add
cli
jecxz
stc
xchg
sbb
add
sbb
test
rol
in
int3
add
adc
add
or
add
add
cs
out
lock
retf
test
adc
inc
cmc
(bad)
test
pusha
cmc
sar
add
sti
cld
xchg
cld
leave
cld
add
add
cli
xchg
add
xor
jns
push
or
add
aad
add
adc
push
add
inc
out
test
outs
add
(bad)
add
into
push
add
add
or
push
mov
add
sti
add
push
stos
sbb
clc
dec
add
out
push
push
(bad)
add
leave
add
sti
jecxz
add
push
clc
pop
add
adc
mov
add
leave
add
add
xchg
test
jecxz
clc
add
test
add
add
add
inc
add
add
std
cmc
or
add
add
pop
scas
pop
loope
add
sti
add
aad
push
add
mov
sti
mov
popf
add
or
dec
fimul
add
sub
add
clc
add
adc
pusha
jmp
inc
(bad)
(bad)
inc
mov
add
call
inc
imul
add
sub
adc
add
add
arpl
retf
cli
add
adc
ret
data16
lock
into
data16
fadd
sbb
mov
add
pop
add
repnz
outs
or
arpl
pop
or
and
fild
inc
add
(bad)
repz
add
push
push
add
jmp
add
add
add
cmp
inc
mov
inc
cld
xlat
add
inc
adc
adc
or
add
add
add
inc
push
loope
sti
int3
std
or
add
std
repnz
add
or
test
test
mov
jns
add
or
or
and
outs
arpl
add
dec
add
(bad)
in
add
(bad)
jl
add
fiadd
add
add
and
or
inc
add
std
std
or
out
pop
add
call
add
sti
sbb
cli
and
add
sbb
jb
jb
inc
add
cmc
sbb
(bad)
push
sbb
mov
hlt
call
sub
pop
aaa
mov
inc
adc
xchg
add
in
add
push
frstor
pusha
adc
add
adc
sub
add
xchg
add
pop
pop
add
std
pop
cld
in
add
add
add
dec
or
cmp
add
push
repnz
add
std
add
push
jmp
push
arpl
or
add
int3
add
cli
sti
push
adc
add
fild
int3
add
sub
in
lds
xor
out
rol
std
add
std
cmp
push
add
add
sbb
add
call
inc
add
add
(bad)
out
out
cmp
add
add
add
popf
add
pop
inc
add
xor
add
add
add
add
mov
add
mov
(bad)
push
ror
pusha
out
repz
add
cli
hlt
repnz
add
jb
add
std
add
mov
repnz
or
add
cld
push
add
pusha
add
repnz
add
or
into
es
in
into
sbb
add
add
or
mov
or
or
shr
sub
stos
imul
add
adc
pop
push
add
or
add
add
add
stc
pusha
push
add
jmp
xor
cs
xlat
test
not
add
add
fiadd
add
cmp
add
outs
stc
or
call
cmp
sti
mov
call
fdiv
sub
stc
mov
popf
add
std
ficom
add
std
add
add
add
pop
add
add
dec
leave
or
test
add
(bad)
lds
out
add
add
add
and
mov
test
mov
add
add
add
add
call
repz
add
add
dec
jl
add
cld
add
add
push
inc
call
and
or
xchg
or
or
xor
ror
in
frstor
sbb
add
call
add
add
or
jne
adc
adc
arpl
imul
adc
lock
add
add
ficom
push
inc
inc
inc
or
or
out
ud2
loop
add
inc
add
push
loope
(bad)
frstor
psubb
std
inc
add
add
or
or
sbb
xor
add
xlat
jmp
add
add
cld
add
pop
cmp
arpl
jmp
ror
scas
(bad)
add
arpl
add
out
sti
mov
sbb
unpckhps
xor
add
add
jmp
add
cld
scas
pop
xor
add
add
mov
add
add
add
jl
add
add
mov
add
dec
add
mov
inc
retf
cmp
or
or
add
mov
pop
cmp
add
inc
into
add
sub
jl
popf
add
add
add
mov
into
add
pusha
add
test
pop
aad
add
(bad)
fimul
add
sbb
mov
add
inc
add
push
add
jmp
add
add
add
add
in
add
(bad)
add
add
clc
in
add
repz
add
add
add
or
adc
stc
or
cld
add
add
hlt
cld
aad
mov
fild
out
rol
add
test
out
add
sub
test
int3
div
sub
jns
rcl
add
add
dec
add
add
sub
add
or
adc
cld
cmp
add
add
cmp
add
pop
add
pop
jmp
pusha
pop
add
push
ins
icebp
or
add
cs
pop
push
add
add
xchg
or
sbb
arpl
sub
add
add
push
out
call
rcr
or
call
add
add
out
add
or
xor
add
add
call
add
int3
add
mov
add
jmp
not
adc
add
jns
mov
pop
add
inc
xor
sbb
shl
add
icebp
and
loop
sbb
pop
sub
push
cli
hlt
or
sti
or
add
out
mov
sbb
inc
mov
add
add
sub
pop
loop
add
stc
adc
add
add
push
or
add
(bad)
add
sbb
push
out
hlt
cmc
add
add
ins
ror
cmc
add
cld
add
cmc
pop
add
add
test
jb
add
and
jb
fisttp
add
add
add
test
add
add
adc
push
sar
add
mov
add
ins
mov
add
add
adc
add
add
pop
pusha
dec
add
out
add
add
stc
add
add
leave
add
or
push
add
retf
fdivp
add
add
add
add
out
outs
inc
(bad)
add
fcom
add
add
fisttp
sar
jns
xor
sti
ins
add
cld
or
test
add
cmp
icebp
add
inc
test
retf
xchg
or
std
or
(bad)
and
imul
add
fisubr
add
in
jmp
(bad)
(bad)
aas
fld
push
loope
cli
sub
fdivr
xor
add
cli
out
add
add
xchg
call
add
add
push
add
jmp
add
adc
sub
push
and
add
or
std
add
in
add
mov
out
cld
sbb
cld
add
fidiv
add
fdiv
add
popf
test
inc
clc
jmp
push
call
add
add
out
mov
cmc
inc
push
adc
or
sub
mov
arpl
add
lds
add
retf
or
add
cli
add
add
sbb
mov
mov
rcr
pop
add
mov
add
hlt
mov
xor
sub
sub
std
jns
sub
xchg
add
add
add
push
add
jb
add
and
xchg
rol
push
scas
out
add
mov
add
add
push
add
add
adc
adc
add
dec
in
data16
add
and
popf
sbb
outs
pop
add
fild
add
pop
add
add
add
add
sti
add
clc
add
add
jl
std
mov
add
fstp
inc
add
call
add
jmp
or
xor
add
add
shl
sub
add
aaa
adc
fld
dec
cli
add
add
stos
xor
push
in
add
add
add
add
and
add
and
add
dec
add
cli
sub
clc
jecxz
fcmovu
add
add
sub
cmp
pop
push
dec
and
add
shl
lds
fisttp
add
mov
repz
xor
pop
std
sub
jne
or
repz
call
cld
xchg
fiadd
add
add
es
add
add
add
pop
ins
data16
fdivr
push
add
inc
fsubp
(bad)
inc
add
div
add
out
add
(bad)
push
jb
fidiv
or
add
add
inc
sbb
aaa
add
dec
add
outs
add
call
add
popf
add
test
add
push
in
xor
mov
mov
lock
mov
adc
add
add
add
mov
mov
add
into
ror
add
add
add
clc
add
add
add
mov
sub
add
fcmovnb
mul
fidiv
pop
dec
cli
add
cld
adc
add
repz
test
mov
or
or
mov
add
clc
idiv
fistp
xchg
int3
pop
inc
or
add
out
jb
push
add
add
add
add
and
imul
sti
leave
add
add
adc
sbb
push
add
mov
inc
or
and
add
add
add
ins
add
shr
call
add
add
into
and
mov
std
out
add
adc
ret
add
sub
call
add
push
add
pushw
into
mov
add
add
dec
std
int3
sub
mov
xor
cmp
jmp
add
add
push
sbb
sub
push
outs
adc
shl
pop
out
outs
add
add
xchg
add
add
or
retf
jecxz
add
jmp
sti
add
push
in
out
add
shr
add
add
push
pop
(bad)
out
cmc
add
add
popf
and
inc
sub
add
std
add
add
add
out
dec
add
mov
sub
in
mov
cli
out
or
ins
test
jmp
add
add
add
add
int3
add
leave
add
cld
add
adc
or
sbb
and
add
aas
add
add
sti
mov
mov
add
adc
std
push
fiadd
sub
add
add
imul
add
and
or
mov
sbb
or
mov
aaa
arpl
add
add
add
sub
push
psadbw
adc
mov
cmp
or
adc
add
clc
add
outs
cli
retf
aad
add
fisttp
fild
or
ret
add
test
arpl
std
std
add
add
add
fimul
clc
leave
mov
cmp
(bad)
repz
fadd
sub
dec
xchg
sub
loop
clc
cmps
or
sbb
push
xchg
cmp
cmc
jl
pop
(bad)
add
mov
add
sti
add
add
add
add
add
repnz
or
fist
out
std
cmps
add
push
push
int3
push
adc
xchg
add
mov
push
xor
xchg
call
aad
lock
add
add
repz
add
add
add
add
add
leave
pop
add
mov
jns
adc
add
push
fadd
pop
retf
adc
push
icebp
add
xchg
or
add
add
add
arpl
sub
add
push
std
or
mov
add
add
int3
add
(bad)
(bad)
add
add
fmul
sbb
add
stos
add
pop
inc
or
fbld
inc
into
push
add
add
jns
xchg
add
rol
xchg
std
add
add
cmp
xor
push
aad
hlt
std
test
add
out
sti
sbb
cli
add
div
add
aad
loop
add
add
repz
cli
icebp
rol
add
call
add
sub
or
mov
clc
add
add
add
ins
add
into
(bad)
dec
aas
sar
add
add
add
repz
out
add
add
out
add
add
or
add
clc
add
add
sbb
add
(bad)
inc
mov
add
mov
cmc
add
shl
add
inc
pop
sti
jmp
std
out
(bad)
(bad)
sti
add
sbb
add
ret
add
into
fidivr
outs
add
repz
sti
add
add
jns
out
add
aaa
or
ret
add
add
add
add
add
add
leave
xor
xchg
and
arpl
(bad)
add
or
add
fld
sti
mov
push
add
sldt
add
add
add
sti
stc
mov
sub
std
mov
add
test
inc
jne
fisttp
add
sbb
dec
fiadd
xor
add
clc
or
add
add
stc
lock
dec
add
push
adc
fild
add
cmp
sar
cld
dec
or
add
add
inc
cmp
add
push
xlat
add
icebp
sbb
or
mov
mov
xchg
xchg
sbb
add
cli
add
out
imul
repz
add
or
sti
arpl
add
ror
add
es
sti
add
add
add
not
sti
sub
mov
pusha
add
push
ins
sbb
add
out
sar
imul
add
add
cmp
repz
add
call
add
inc
add
add
xchg
inc
dec
(bad)
sbb
inc
mov
fiadd
(bad)
and
add
add
add
add
cld
push
pop
out
stos
jmp
cmp
add
add
movaps
adc
add
add
pop
lds
add
push
sbb
lds
add
add
mov
mov
in
mov
ins
fdivrp
rol
add
fild
dec
add
stos
(bad)
std
xchg
mov
add
std
test
aas
rol
or
add
add
cmp
add
cld
add
cld
mov
out
add
xlat
push
add
add
add
hlt
idiv
mov
inc
push
cli
mov
cld
add
add
add
aaa
add
add
add
int3
jne
add
add
(bad)
cld
add
leave
add
(bad)
cmp
dec
jmp
add
xchg
or
add
repz
mov
add
xlat
add
add
cmp
cmc
mov
or
cli
push
(bad)
jecxz
add
inc
add
out
test
jns
(bad)
adc
xchg
out
add
add
or
push
repz
add
cmp
and
add
add
add
inc
std
lds
add
pop
add
add
inc
add
std
clc
mov
or
jne
sub
(bad)
imul
inc
or
leave
jecxz
xchg
dec
cld
jl
push
adc
sub
repz
add
push
push
stc
scas
int3
dec
add
cmc
icebp
sub
add
add
add
jne
add
add
and
call
maskmovq
not
mov
clc
add
add
std
add
or
or
data16
cmps
rcl
inc
clc
add
add
sbb
or
add
add
repz
add
test
out
cld
std
add
and
test
add
add
add
add
(bad)
cmc
add
jmp
add
add
fisttp
data16
(bad)
mov
ret
add
add
push
adc
pop
std
add
inc
or
add
rol
sub
repnz
add
adc
add
ficom
add
call
std
sub
cld
and
inc
add
std
popf
sub
mov
adc
or
out
cmps
cmps
add
fnsave
cli
add
cmc
xchg
rcl
add
(bad)
jns
add
add
add
sbb
in
mov
pop
mov
or
add
(bad)
std
add
jne
add
into
mov
add
add
add
leave
idiv
clc
test
call
add
xchg
dec
mov
add
inc
cmc
or
test
repnz
ret
add
or
add
rol
add
add
xchg
add
add
add
add
add
add
add
add
add
add
leave
add
sub
add
add
std
out
fimul
(bad)
jl
pop
adc
add
add
popf
and
add
add
add
stos
xor
scas
pop
std
add
xchg
add
push
add
inc
add
jl
push
add
add
std
scas
in
or
add
sub
add
mov
push
add
in
es
icebp
add
add
add
cli
add
jne
adc
xor
lds
add
push
pop
add
rol
aas
add
outs
xchg
add
add
std
cli
loope
add
mov
loope
retf
add
add
add
add
test
add
fiadd
xchg
add
popf
and
add
add
add
sti
add
sbb
xchg
sbb
cli
leave
add
add
add
adc
lock
add
sub
mov
shl
jmp
sbb
add
add
sub
test
and
jecxz
(bad)
es
add
add
in
mov
add
add
pop
add
sbb
or
cmp
push
add
add
inc
add
add
or
add
(bad)
mov
add
sti
add
push
add
test
adc
inc
retf
add
add
cmp
mov
sti
dec
cmps
sbb
or
or
es
add
repz
cld
add
inc
or
call
xor
inc
stc
xchg
xchg
add
add
or
stc
or
add
add
add
data16
add
hlt
inc
cld
xchg
out
add
add
mov
aaa
cmc
add
sar
or
push
clc
sbb
test
clc
sbb
sti
add
push
add
inc
add
push
xor
add
cli
add
lock
push
test
inc
jb
add
or
xchg
add
leave
add
sbb
inc
div
in
in
xchg
aas
or
xchg
add
pop
rol
and
add
sti
cld
inc
add
test
inc
add
add
add
add
add
clc
push
loope
mov
or
inc
push
jmp
inc
push
into
adc
call
pop
loope
add
test
cmp
add
add
xor
lds
test
sbb
add
aas
add
test
and
add
push
add
stos
adc
xchg
xor
add
sub
jmp
add
cld
push
add
sti
add
and
repz
out
(bad)
jns
add
dec
xor
jmp
add
add
or
push
mul
mov
add
data16
add
add
cmc
pop
push
stos
mov
add
(bad)
fdivrp
mov
add
add
xchg
inc
jmp
jecxz
add
push
push
add
add
add
add
mov
add
stc
mov
sub
mov
add
(bad)
lds
clc
jmp
or
es
add
sbb
test
add
cld
mov
aaa
sbb
call
dec
int3
cmps
push
cmps
sti
or
add
repz
cmp
test
(bad)
inc
add
add
add
adc
xchg
add
add
ins
popf
add
add
aad
jecxz
add
jns
add
mov
icebp
and
sbb
rcl
std
add
add
ret
sbb
repz
xchg
push
pop
sbb
popw
add
cmc
ror
add
(bad)
in
add
out
and
add
ror
pop
sbb
add
cli
add
test
add
add
jne
std
cmps
add
add
add
mov
add
sbb
add
loope
jecxz
add
mov
add
add
std
imul
fidiv
or
fiadd
push
imul
jecxz
xor
add
add
adc
add
cld
inc
or
std
add
icebp
sub
sub
add
xchg
push
add
or
or
or
mov
or
call
sar
or
popf
add
add
push
push
add
cmp
add
cmp
and
pmaxsw
sub
cmc
or
repz
repz
add
lock
std
jns
test
int3
cmps
or
add
div
add
push
push
add
add
add
test
adc
cld
add
add
jmp
add
ret
ins
mov
std
add
cmc
mov
or
es
or
push
or
or
add
add
push
add
xlat
or
inc
jmp
push
in
inc
add
add
push
cmp
add
(bad)
cmp
xor
add
sub
shl
push
retf
add
add
ins
push
or
add
add
add
add
sti
ins
adc
add
sbb
std
add
add
in
add
pop
jne
ret
add
fisub
add
leave
jmp
inc
out
repz
xlat
add
idiv
adc
add
add
add
add
add
sbb
add
or
jns
jns
add
add
jne
add
int3
push
stc
jmp
inc
sar
add
push
out
retf
fiadd
sbb
add
jmp
outs
inc
outs
hlt
stc
jmp
xchg
stos
test
shl
out
add
pop
inc
or
add
push
add
add
pop
std
mov
add
or
mov
add
add
push
add
inc
cmp
xchg
add
adc
add
std
and
add
add
add
add
inc
xlat
add
arpl
cmp
call
add
pop
add
push
stc
std
add
clc
and
lds
cld
add
sbb
or
adc
add
loope
add
add
add
lds
inc
(bad)
out
add
(bad)
inc
call
add
add
add
ret
and
cli
mov
add
add
add
leave
add
add
add
add
add
add
add
ret
jmp
add
dec
idiv
add
add
add
add
inc
add
inc
add
or
repz
or
add
add
out
add
sub
add
stc
inc
cmp
mov
not
int3
push
clc
sbb
and
idiv
push
add
adc
sub
push
stc
jb
add
adc
add
and
add
dec
sti
loop
test
mov
xlat
push
add
(bad)
pusha
(bad)
std
pop
(bad)
dec
add
mov
add
add
sub
mov
add
adc
adc
dec
psubq
(bad)
out
add
add
pop
mov
add
add
xor
jmp
test
add
add
inc
dec
inc
jl
rol
or
clc
jmp
add
xchg
or
or
mov
add
add
add
or
add
sbb
adc
sti
aaa
add
or
add
add
cli
or
push
aad
rcr
cmc
push
icebp
fld
sbb
adc
dec
adc
or
add
test
call
std
adc
add
es
aaa
xor
(bad)
xlat
aaa
add
xchg
add
add
or
(bad)
pusha
jmp
or
scas
out
xlat
sbb
add
xchg
jl
in
or
add
inc
es
or
add
add
add
add
add
mov
add
xor
rol
(bad)
call
call
sbb
sbb
dec
sti
div
in
out
add
or
add
add
add
add
push
pop
fucomip
sbb
xlat
push
leave
adc
dec
add
add
jecxz
add
adc
dec
fnstsw
xlat
std
inc
add
hlt
add
out
or
add
sbb
add
add
sub
cli
add
or
add
repz
push
cli
retf
dec
dec
or
add
sti
add
inc
inc
push
add
and
or
pusha
inc
or
loop
add
loope
add
and
mov
stos
add
or
fst
push
add
jl
add
cld
add
sti
jmp
aad
call
fadd
inc
repz
add
fstp
mov
add
pusha
stos
or
add
add
int3
into
mov
add
add
or
fild
in
dec
sub
inc
push
xor
in
add
xor
xor
add
add
(bad)
push
add
cld
cmc
or
popf
inc
repz
out
add
mov
add
mov
fiadd
add
add
jns
es
popf
mov
mov
retf
or
add
add
push
push
and
add
(bad)
cmps
jmp
lock
out
dec
leave
pop
add
vpsadbw
data16
add
stc
mov
(bad)
out
into
jmp
adc
sbb
neg
add
fiadd
inc
add
or
add
aaa
(bad)
cmp
add
inc
add
add
add
add
sti
sbb
add
repnz
add
jmp
sbb
add
add
cli
cmc
add
push
fld
inc
add
add
add
mov
pop
add
push
add
pop
add
add
fadd
add
or
(bad)
(bad)
push
add
add
fild
add
adc
cld
std
jb
add
aaa
add
jecxz
adc
add
adc
mov
ret
out
add
add
mov
pop
xchg
add
inc
add
add
repz
sub
aad
or
add
add
add
push
fiadd
std
add
cmc
xchg
add
add
rol
inc
xchg
or
add
(bad)
or
push
inc
add
add
mov
add
xchg
(bad)
dec
add
mov
(bad)
xlat
add
push
add
mov
cmc
add
sti
xor
add
add
adc
add
outs
test
pop
in
add
call
jl
aad
xor
add
push
add
jmp
push
add
add
add
in
jmp
add
jecxz
add
popf
add
aad
add
add
add
mov
add
jmp
adc
shl
call
cmp
adc
into
add
add
add
cmps
xchg
add
aaa
ret
sub
xor
add
adc
lock
or
ret
or
icebp
sbb
adc
add
or
xchg
call
fstp
inc
dec
std
inc
xchg
shr
jmp
xor
imul
sub
add
outs
add
test
data16
add
add
add
sti
adc
rol
fisttp
or
or
add
add
rol
sub
add
out
add
add
add
mov
add
mov
and
push
mov
add
add
push
push
add
ins
add
or
add
add
in
add
jmp
aas
xchg
outs
popf
pop
add
lock
add
adc
or
add
or
std
fstp
call
add
cmc
arpl
retf
inc
add
push
test
icebp
aaa
xchg
sti
cmc
add
fiadd
add
add
push
test
xlat
add
add
add
add
jmp
std
int3
add
push
sbb
test
mov
add
shl
sbb
cmp
add
sub
repnz
add
sbb
aas
push
add
add
jb
arpl
loope
adc
add
sbb
add
add
add
add
push
add
arpl
add
add
sbb
cmc
in
add
add
test
add
jl
in
adc
seta
jmp
repz
imul
add
rcl
adc
jmp
cli
mov
cmc
or
(bad)
repz
int3
sti
and
in
rol
jmp
xor
xor
sbb
add
(bad)
cmp
add
sar
idiv
arpl
sar
mov
add
repz
add
sti
inc
scas
call
inc
jmp
ret
std
sbb
imul
add
add
add
add
add
sar
add
add
data16
repnz
add
out
jmp
add
shr
add
inc
add
add
add
xor
test
add
out
add
jns
std
add
cli
push
sbb
add
pop
pop
sbb
int3
inc
mov
(bad)
jb
add
push
add
add
xor
adc
mov
aad
in
add
std
add
jmp
add
cli
add
scas
and
fadd
add
aad
add
fld
add
inc
add
add
(bad)
(bad)
test
(bad)
mov
xchg
pop
cld
jmp
pop
or
add
leave
add
add
jmp
adc
ret
xor
dec
sbb
add
xor
in
jmp
jb
clc
add
test
push
xor
mov
ins
test
aas
jmp
add
add
add
add
icebp
clc
aaa
add
test
sbb
(bad)
add
add
cli
mov
dec
add
inc
sbb
add
add
call
cld
pusha
sub
add
add
push
loope
add
hlt
add
add
in
add
add
add
push
add
or
add
adc
std
inc
push
(bad)
dec
push
(bad)
aad
fisttp
out
test
loop
add
jmp
std
pop
imul
add
(bad)
loop
not
loop
leave
add
out
add
cmc
aas
sbb
popf
add
add
sbb
mov
add
adc
sbb
out
push
add
retf
in
add
cmp
in
sti
mov
add
add
add
add
xor
add
add
std
add
xor
fisttp
pop
add
add
jmp
xchg
add
adc
add
rol
add
add
jns
cmp
inc
or
add
push
fiadd
add
sbb
add
xchg
add
pop
pop
add
into
(bad)
(bad)
xchg
add
jmp
add
clc
fiadd
add
add
add
and
xor
add
adc
xor
pop
push
aad
adc
mov
xchg
test
hlt
ins
shl
call
add
inc
stos
add
cld
add
add
add
mov
sti
add
add
add
out
add
mov
out
cld
shl
add
add
pusha
sbb
pop
or
xor
add
test
arpl
stc
imul
xchg
call
or
push
add
cmp
add
inc
inc
dec
out
add
adc
clc
or
imul
mov
add
inc
add
adc
adc
jmp
or
and
sbb
add
push
add
push
push
add
mov
add
adc
add
dec
or
add
retf
add
inc
in
xor
add
jns
in
sti
sub
pop
add
sbb
add
mov
inc
fiadd
add
add
xchg
push
xor
lock
out
clc
dec
push
add
adc
add
add
(bad)
mov
add
add
add
add
and
add
call
add
or
rcr
or
xor
push
or
mov
pop
push
adc
dec
and
pop
sti
push
add
mov
add
and
cmps
jl
add
or
add
adc
adc
add
or
add
add
add
add
adc
push
add
xchg
cmc
add
inc
clc
add
pop
adc
cmp
adc
ficomp
rcl
add
(bad)
cld
pusha
pop
add
add
and
clc
add
add
fdivr
fild
out
cli
mov
fimul
cmc
add
xchg
pop
add
adc
add
into
add
inc
push
mov
add
add
add
test
add
ret
aas
push
pop
call
mov
sub
mov
ror
or
add
stc
add
jecxz
add
mov
push
inc
inc
add
push
add
add
add
cmp
in
add
and
xor
add
pop
inc
cld
call
add
add
push
add
add
push
sub
fild
add
inc
sub
mul
inc
mov
in
add
add
mov
add
ins
test
or
add
or
or
jmp
sbb
pop
leave
add
add
add
add
add
push
data16
ins
sbb
std
out
adc
add
xor
ficomp
inc
hlt
aas
add
add
adc
add
add
int3
cli
pop
loop
add
pop
or
add
inc
add
add
add
add
add
cmp
or
xor
add
rol
push
add
arpl
add
push
add
cmps
(bad)
icebp
add
push
inc
or
jl
adc
imul
adc
add
add
sub
lds
add
mov
add
or
test
add
icebp
or
(bad)
mov
xchg
fisubr
ret
push
sub
add
sti
(bad)
inc
jb
jmp
add
push
std
pop
add
mov
add
jmp
mov
mov
pop
add
outs
loop
or
pop
add
stc
leave
push
std
loop
add
add
add
add
retf
add
sub
call
add
or
or
adc
sti
dec
add
adc
out
or
jmp
(bad)
add
add
aaa
retf
test
adc
add
mov
add
add
(bad)
fiadd
sti
retf
push
add
mov
sti
add
mov
cli
add
call
add
ror
in
add
adc
cmp
or
add
push
fnsave
imul
add
dec
cmps
syscall
imul
add
push
add
out
push
or
add
add
repz
add
out
add
jmp
pop
adc
adc
adc
(bad)
cli
inc
add
shl
loope
add
add
inc
xor
add
add
add
add
add
dec
jns
add
add
or
sub
ins
sub
mov
jb
add
add
imul
add
add
cli
add
add
add
xor
cs
sbb
sti
add
add
inc
cld
add
push
add
add
add
mov
shl
add
aad
jns
or
icebp
fst
jmp
add
add
add
sbb
shr
cmp
sti
cmp
dec
icebp
add
or
std
or
loop
mov
add
out
cli
add
add
mov
aas
aas
inc
add
inc
or
or
add
cmps
add
mov
sbb
add
add
add
add
add
cmc
loop
cs
dec
repz
add
add
xchg
push
fild
push
add
adc
test
cld
fild
test
test
sbb
add
add
add
add
pop
jmp
sar
sbb
add
inc
aaa
add
test
push
add
rol
add
retf
add
add
div
and
add
adc
neg
add
push
fiadd
adc
xchg
cld
clc
add
add
add
add
adc
or
sbb
out
push
jecxz
push
add
add
sbb
into
cmc
adc
add
cmp
add
add
add
add
sar
add
std
add
cs
add
clc
out
dec
add
add
mov
xor
add
sub
add
inc
stos
mov
div
add
mov
add
out
cmc
call
add
imul
rol
sti
add
xchg
adc
add
add
inc
clc
add
cli
pop
inc
add
in
mov
out
pop
pop
adc
add
add
in
add
add
add
adc
sbb
mov
inc
pop
add
add
inc
add
fiadd
adc
add
push
call
add
add
cmps
sbb
add
mov
add
adc
test
repz
add
idiv
arpl
add
inc
jmp
add
add
add
sbb
jmp
fnsave
idiv
add
sti
add
add
add
cmc
sub
add
pop
add
inc
add
add
sti
add
fild
add
xchg
push
add
jns
sub
repz
cmps
add
add
add
(bad)
aas
add
mov
rol
adc
cld
add
jecxz
loope
dec
add
loope
stc
in
cmp
int3
icebp
jecxz
add
and
test
(bad)
jb
fistp
inc
xchg
cmp
sub
jl
add
aas
or
repz
add
fiadd
and
push
stos
(bad)
in
add
add
dec
add
cmc
add
jl
pop
xor
add
mov
add
pusha
ror
jecxz
add
rol
or
sti
add
repz
add
sub
add
add
or
std
cmps
push
add
arpl
push
or
add
add
add
test
pusha
add
jmp
out
loope
sub
mov
xor
test
xchg
or
and
xchg
out
dec
(bad)
jl
add
add
scas
cmp
add
ficomp
mov
leave
add
jecxz
or
out
add
idiv
arpl
add
sub
push
dec
rcr
add
jne
ret
add
add
adc
add
pop
sbb
cs
add
add
std
pop
jb
add
add
sub
std
add
retf
sbb
add
cli
out
xor
xchg
mov
add
add
aad
out
push
add
add
xor
add
jl
add
stos
add
inc
leave
fild
loope
xor
adc
in
sbb
add
or
pusha
xor
test
add
std
add
(bad)
and
add
add
add
cmp
std
add
sub
jecxz
sbb
add
lds
add
add
int3
pop
adc
clc
pop
or
fcom
cmps
sub
jmp
add
rcr
push
cld
xor
imul
add
add
push
out
dec
mov
repz
push
add
shl
sti
pusha
add
arpl
add
add
loope
add
imul
cmp
add
add
mov
push
std
add
adc
push
pop
xor
add
and
pop
and
or
jl
add
mov
std
pop
xlat
cli
fild
add
sub
repnz
inc
add
mov
dec
add
add
mov
xor
add
push
add
add
sbb
clc
add
stos
adc
data16
cmps
clc
mov
add
clc
cli
add
arpl
mov
add
adc
leave
pop
add
sub
add
pop
outs
add
int3
adc
push
(bad)
cmp
sbb
fsub
jne
not
aas
imul
(bad)
fld
call
add
adc
jns
add
sbb
add
add
add
mov
pop
ins
jmp
xchg
cld
inc
push
out
stc
sbb
add
cld
pop
sti
dec
add
test
fisubr
adc
jmp
inc
add
sub
add
repnz
aad
add
out
add
add
xor
add
add
add
loop
add
add
add
cli
add
imul
add
inc
and
mov
mov
pop
add
loop
add
pop
and
add
add
push
(bad)
mov
mov
outs
add
add
idiv
in
cld
rol
jl
push
jne
clc
jns
add
test
inc
add
add
xchg
std
clc
out
or
add
cmp
add
jmp
adc
inc
fiadd
out
push
std
add
add
add
xor
out
out
add
add
add
in
inc
and
add
add
out
(bad)
jns
add
add
scas
xchg
xor
add
adc
call
cld
fld
stc
sub
or
or
div
fdivrp
add
sbb
inc
popf
add
sbb
add
outs
scas
add
mov
xchg
jns
stc
add
add
adc
jmp
out
mov
add
add
mov
jne
push
add
ret
stos
clc
out
xor
call
add
test
add
add
or
add
or
xor
add
dec
hlt
in
loop
add
aaa
pusha
inc
fiadd
rcr
add
pop
std
add
push
add
add
jne
or
add
add
adc
clc
cld
sar
or
add
sbb
mov
xlat
jecxz
inc
add
inc
mov
add
out
add
std
test
pop
cld
jmp
popf
std
out
aaa
or
cmp
into
pop
add
pop
add
or
popf
xchg
add
inc
add
add
sti
add
add
stc
add
add
and
sbb
cmc
add
add
mov
sar
idiv
mov
repz
add
add
cmp
aad
jmp
push
add
add
stc
out
clc
add
cs
pop
add
mov
dec
push
test
add
push
call
in
leave
or
pop
add
mul
add
add
or
xor
add
add
fcomp
and
xor
add
adc
neg
add
add
add
add
mov
add
add
or
add
std
rol
sbb
add
inc
sub
push
fild
add
add
add
ret
into
add
repz
and
add
add
add
jns
mov
scas
clc
mov
test
add
jns
add
jmp
jecxz
add
dec
xor
cld
push
add
sub
repnz
add
push
inc
add
or
adc
(bad)
sub
add
add
add
xchg
add
add
jns
test
inc
add
add
cld
add
push
adc
loop
sub
add
std
add
xor
test
add
add
add
add
jb
aaa
add
add
add
jecxz
push
add
xlat
repnz
aas
add
inc
push
add
add
or
add
dec
in
clc
sub
push
sti
add
std
sub
add
xor
push
aaa
add
repz
add
cli
add
sar
add
add
add
aaa
sub
add
add
add
in
aas
add
add
mov
add
lds
std
loop
pusha
add
push
mov
fild
mov
loop
add
adc
add
shl
add
pop
jecxz
add
add
add
add
inc
sbb
inc
add
add
push
sbb
int3
add
repz
or
jmp
jl
sbb
add
or
jmp
add
or
test
add
in
add
and
mov
add
inc
add
add
jmp
sbb
cli
add
adc
add
retf
lock
fisubr
and
test
or
add
add
add
mov
add
adc
sub
inc
push
aaa
inc
xor
cld
add
adc
cs
sti
add
std
in
xchg
inc
arpl
add
xor
jl
sub
sti
ins
add
add
add
cmp
add
xor
mov
dec
add
add
xor
std
and
add
clc
icebp
add
add
sub
add
add
sub
add
add
clc
add
and
neg
add
pop
add
test
(bad)
icebp
and
dec
pop
fiadd
jb
out
add
mov
add
std
test
inc
mov
push
xlat
add
pop
add
adc
call
inc
and
add
mov
mov
out
(bad)
out
sub
add
fild
add
add
add
add
add
clc
add
add
add
xor
or
leave
add
add
add
or
sub
test
mov
cli
cmc
add
out
add
aas
dec
mov
and
repz
add
test
add
push
cmc
out
add
add
out
add
add
cld
add
xor
movzx
test
jne
mov
add
push
push
mov
mov
add
push
push
mov
xor
xor
div
mov
xor
jmp
add
add
mov
ret
mov
mov
ret
mov
mov
add
mov
mov
mov
mov
add
inc
mov
inc
cmp
jl
sub
xor
cmp
jne
dec
jne
mov
mov
add
mov
add
mov
mov
add
mov
mov
add
add
mov
mov
add
add
mov
mov
add
add
mov
mov
add
jmp
mov
add
mov
mov
add
add
mov
mov
xor
je
cmp
jne
inc
inc
jmp
mov
add
mov
sub
shr
sub
mov
add
mov
add
movzx
shl
mov
add
mov
add
mov
add
mov
ret
mov
add
call
mov
add
call
mov
add
call
mov
add
call
mov
add
inc
xor
jne
mov
add
push
mov
add
call
push
pop
mov
add
mov
mov
add
inc
xor
jne
mov
add
push
mov
add
push
mov
add
call
push
pop
mov
add
mov
mov
add
inc
xor
jne
mov
add
push
mov
add
push
mov
add
call
push
pop
mov
add
mov
mov
add
inc
xor
jne
mov
add
push
mov
add
push
mov
add
call
push
pop
mov
add
mov
mov
add
inc
xor
jne
mov
add
push
mov
add
push
mov
add
call
push
pop
mov
add
mov
mov
add
inc
xor
jne
mov
add
push
mov
add
push
mov
add
call
push
pop
mov
add
mov
xor
push
push
push
mov
add
push
push
push
mov
add
mov
add
push
push
ret
mov
add
call
push
push
push
mov
add
call
push
mov
add
call
mov
add
push
call
jmp
ret
mov
add
mov
push
mov
add
mov
push
mov
add
mov
push
mov
add
mov
push
mov
add
jmp
xor
push
mov
add
call
nop
nop
nop
or
or
dec
add
or
nop
nop
and
add
push
adc
pop
add
nop
nop
xor
xchg
nop
and
adc
or
xor
adc
pop
add
add
sub
add
xor
adc
pop
add
xor
or
xor
adc
pop
add
push
ret
outs
pop
dec
inc
movzx
add
add
mov
mov
mov
add
cmp
jne
mov
add
jmp
nop
nop
nop
add
mov
fwait
sahf
imul
sub
mov
pop
xchg
mov
mov
dec
ja
iret
or
loopne
(bad)
and
and
mov
sbb
mov
aam
stos
push
ins
jb
xor
inc
ss
add
das
arpl
loop
dec
(bad)
mov
test
cmps
rcl
in
movs
out
popf
sbb
movs
pushf
and
sbb
dec
push
push
mov
mul
xchg
adc
imul
push
mov
lock
jecxz
enter
fiadd
out
ret
fsub
fpatan
(bad)
sub
outs
push
adc
std
inc
pop
xchg
xor
pop
out
aad
clc
mov
ds
cmps
push
add
lahf
fild
mov
dec
xchg
cmp
ins
inc
cli
inc
sbb
pop
sbb
xor
retf
or
adc
call
or
inc
add
add
jae
stos
add
add
mov
add
add
add
add
add
add
jge
rcl
mov
lods
add
add
add
ret
rcr
fmul
in
test
add
rcl
mov
cs
mov
add
add
ret
rcr
fmul
in
test
add
rcl
mov
aas
mov
add
xchg
jle
dec
add
cwde
adc
loop
ret
rcr
fmul
in
test
mov
mov
add
push
mul
mov
lahf
ss
lahf
fdiv
vmread
xchg
lods
push
sub
sub
dec
or
inc
call
stos
(bad)
js
xchg
sub
dec
jmp
xchg
dec
and
push
pop
mov
jp
mov
jmp
stos
ud0
xchg
aaa
(bad)
lahf
movs
lods
cmp
fldcw
sbb
pop
mov
sti
add
add
sbb
add
mov
mov
jecxz
add
mov
jle
sbb
pop
shl
popa
hlt
mov
add
repnz
xchg
dec
add
call
hlt
shl
xchg
xor
mov
arpl
cld
gs
mov
movs
movs
mov
add
mov
stos
jmp
out
jmp
inc
jnp
add
add
add
adc
repnz
add
test
inc
sbb
pop
clc
lahf
xchg
xchg
js
fld
mov
jnp
loopne
add
add
cmp
add
and
jp
add
cmp
(bad)
add
movs
dec
mov
dec
mov
add
add
inc
fild
add
sub
add
stos
mov
sbb
sbb
inc
add
fld
hlt
add
jecxz
inc
mov
repz
sti
xor
dec
dec
mov
mov
inc
add
retf
jne
add
movs
add
fld
ins
xchg
mov
jp
add
(bad)
cmp
test
add
add
add
add
mov
arpl
sbb
inc
aaa
shr
add
sti
loopne
inc
das
shl
xchg
add
inc
inc
mov
mov
add
mov
xchg
sar
add
mov
fcmove
sbb
(bad)
jecxz
add
(bad)
mov
movs
fwait
pop
mov
add
(bad)
mov
dec
sbb
mov
add
add
add
nop
mov
aas
xchg
pop
add
rol
inc
out
add
mov
jmp
inc
xor
xchg
rol
aaa
hlt
dec
add
sbb
dec
add
test
add
pushf
(bad)
mov
nop
call
retf
add
jle
add
add
add
jecxz
add
dec
adc
hlt
ss
jp
jecxz
add
add
(bad)
jmp
add
aas
add
add
add
add
mov
add
adc
fadd
add
lea
sbb
xchg
rcl
add
add
inc
sbb
std
add
and
ds
(bad)
dec
xor
add
add
mov
inc
add
inc
add
mov
add
hlt
jne
inc
jp
add
nop
pop
add
arpl
add
mov
ror
pop
mov
ins
dec
mov
jmp
lahf
add
dec
rol
mov
add
add
dec
add
loopne
add
add
js
add
add
and
inc
add
add
dec
test
pop
add
add
jle
test
pop
add
(bad)
repz
fadd
jmp
out
inc
add
mov
add
rol
dec
inc
add
dec
add
inc
test
aad
cmp
clc
(bad)
test
out
add
test
mov
add
lods
add
std
arpl
dec
mov
add
mov
jp
add
add
inc
jnp
add
xchg
dec
add
sbb
jp
add
dec
test
call
mov
pop
add
dec
stos
rol
mov
pop
mov
mov
loope
mov
add
dec
add
test
add
inc
add
mov
add
push
stc
in
mov
jmp
movs
(bad)
mov
scas
mov
int3
sar
add
fsubr
or
push
stc
and
add
retf
cmp
loope
jecxz
sbb
jmp
add
sbb
add
sbb
add
dec
lods
and
ret
dec
int
ss
(bad)
cmp
fiadd
ss
enter
test
push
repnz
lea
lahf
cmp
add
inc
mov
adc
dec
dec
jg
add
mov
jp
cld
add
add
mov
cmps
out
add
dec
hlt
add
add
add
xchg
out
add
mov
jg
dec
mov
mov
add
add
add
mov
jmp
push
in
pop
jle
add
add
add
xor
push
add
add
add
loopne
dec
add
(bad)
dec
pop
test
xor
repnz
dec
add
or
(bad)
mov
jmp
mov
jmp
add
les
sbb
test
mov
add
add
pop
lahf
push
dec
push
dec
mov
add
add
xchg
jmp
add
sbb
add
add
add
mov
jmp
adc
test
les
hlt
add
mov
jg
xchg
idiv
(bad)
or
les
jmp
inc
lods
add
add
(bad)
xchg
pop
fistp
add
add
js
xchg
aas
movs
xlat
add
dec
add
rol
or
add
jecxz
add
lods
xor
stc
sbb
loope
ret
and
cmp
in
add
add
pop
test
add
mov
add
add
push
pop
inc
sbb
sub
inc
test
add
imul
sbb
xor
mov
add
(bad)
hlt
inc
add
add
add
pop
movs
out
jecxz
data16
add
jmp
div
js
jecxz
add
or
sub
repnz
lea
add
dec
jg
add
add
add
jle
inc
add
ins
jecxz
and
jg
push
test
dec
add
dec
jecxz
mov
add
inc
test
mov
pop
add
dec
gs
inc
dec
jecxz
xlat
(bad)
jg
add
ins
jnp
clc
jecxz
adc
adc
ins
hlt
ins
add
xchg
add
aas
add
jg
mov
mov
add
push
mov
add
cmc
add
cmc
add
add
xor
add
int3
dec
add
add
add
add
imul
mov
add
dec
add
(bad)
fdiv
add
mov
jp
add
movs
cmps
add
add
dec
das
mov
jmp
pop
cmp
push
add
push
fwait
jne
lahf
mov
add
add
(bad)
mov
les
mov
mov
test
push
add
add
add
out
call
int3
jmp
std
push
jnp
sbb
mov
popf
add
shr
add
mov
add
dec
sbb
inc
dec
test
lahf
test
add
add
in
gs
jp
jmp
xor
hlt
add
jp
add
dec
repnz
add
sbb
dec
add
add
dec
add
add
ins
xor
add
fnstsw
mov
add
mov
jecxz
add
add
push
hlt
mov
add
mov
add
mov
mov
mov
sbb
push
hlt
popa
std
fwait
add
push
inc
add
inc
int3
ret
ret
add
jle
mov
add
cld
add
jmp
fmul
add
jp
aas
ret
dec
jecxz
test
hlt
add
or
ins
add
xchg
push
add
add
push
add
pop
retf
add
mov
add
cmp
add
imul
add
movs
dec
add
mov
add
enter
aaa
add
xchg
les
mov
xor
add
push
add
dec
sub
mov
clc
add
sub
lahf
xor
rcr
jmp
das
add
pop
inc
push
add
(bad)
ins
add
add
add
cmc
pop
add
pop
ror
add
lahf
add
add
stos
fwait
setnp
inc
loope
cmc
scas
add
data16
sar
add
fsub
add
test
add
mov
add
add
add
add
jg
pop
add
iret
jecxz
sub
js
out
les
ret
jp
add
dec
jmp
ror
popf
(bad)
fwait
add
xchg
mov
pop
(bad)
clc
add
mov
clc
inc
add
das
loopne
dec
jg
cmps
mov
push
add
add
das
test
ds
nop
aad
cmp
inc
add
(bad)
jg
pushw
pop
iret
dec
ror
test
add
nop
dec
test
add
dec
add
(bad)
sti
add
int
ret
xor
or
(bad)
jmp
adc
jnp
inc
dec
jnp
test
xlat
jne
add
cs
sbb
pop
or
add
test
add
sbb
add
rol
add
add
add
dec
add
push
test
int
add
add
shl
call
out
inc
add
gs
dec
inc
cmps
add
xchg
pop
jp
adc
cld
js
test
jg
xchg
add
add
add
push
add
das
add
add
add
jmp
arpl
repnz
add
add
add
inc
sti
dec
xchg
add
add
(bad)
cld
add
jp
arpl
inc
lods
add
mov
mov
add
movs
jmp
jg
xor
xchg
mov
test
add
jecxz
adc
add
test
pop
(bad)
jp
sti
mov
cwde
mov
add
aad
and
add
add
add
xchg
pop
pop
lahf
add
(bad)
out
pop
add
add
jp
pop
mov
xchg
mov
sti
jp
add
cld
movs
dec
(bad)
(bad)
mov
mov
mov
add
inc
jecxz
add
jne
dec
or
call
mov
stos
add
add
add
arpl
lods
movs
add
sbb
ret
inc
add
add
inc
add
pop
mov
add
dec
add
dec
add
add
ins
mov
add
ins
mov
std
add
add
nop
mov
jp
jecxz
enter
add
mov
dec
lahf
cmps
push
sti
add
dec
pop
add
imul
add
sbb
nop
jnp
add
add
jp
popf
or
test
inc
pop
push
test
dec
enter
cmps
inc
jecxz
add
xchg
inc
xor
add
int
add
add
iret
aas
hlt
pop
cmc
jg
push
jmp
jnp
inc
movs
mov
lea
add
add
mov
test
out
mov
(bad)
jnp
add
fwait
add
add
sbb
shr
xchg
add
jecxz
aaa
repnz
xor
add
jle
inc
rcr
pop
mov
sbb
mov
repnz
mov
pop
push
jle
ret
add
fadd
push
add
inc
inc
aas
fwait
repnz
sbb
ret
mov
mov
imul
xchg
jp
pop
jp
jnp
adc
add
or
mov
and
add
jecxz
movs
ret
fld
dec
lods
xchg
cld
popf
dec
mov
jmp
xor
sti
add
add
add
xchg
fadd
pop
mov
add
mov
inc
cmc
call
add
(bad)
jg
sub
js
add
push
jp
rol
ss
add
push
push
(bad)
(bad)
push
gs
add
lahf
add
jg
gs
sbb
test
in
neg
(bad)
ret
xchg
add
jp
dec
add
cmovp
jmp
add
adc
xchg
xlat
add
pop
add
dec
repnz
mov
adc
arpl
cmps
aad
mov
retf
add
add
jmp
js
mov
shr
dec
sti
add
jmp
inc
add
add
mov
fstp
enter
test
ret
test
cs
fstp
sbb
jmp
test
dec
add
inc
jmp
inc
dec
add
add
jp
xchg
in
mov
rol
out
add
pop
add
std
rol
mov
popa
mov
add
lods
inc
cmc
add
sti
(bad)
jle
jp
pop
inc
test
dec
add
push
js
test
sbb
aaa
add
and
test
add
mov
ret
test
jnp
jle
add
jne
mov
jmp
scas
rcr
inc
(bad)
(bad)
movs
in
xchg
jmp
lahf
cmc
xor
dec
(bad)
fdivr
or
inc
(bad)
sbb
movs
xchg
jmp
loope
jmp
(bad)
out
repz
inc
add
add
jne
shl
add
xchg
dec
dec
call
add
add
loope
ror
lods
movs
fld
push
mov
lods
(bad)
mov
rol
test
mov
xchg
add
(bad)
jnp
inc
add
mov
mov
imul
add
dec
add
add
repz
add
mov
repnz
dec
mov
loope
jmp
add
pop
adc
inc
dec
jne
add
jp
popa
cbw
add
jg
pop
test
dec
jle
retf
sbb
test
inc
adc
imul
sbb
cmp
xchg
add
loope
add
add
add
push
inc
mov
mov
dec
push
mov
inc
pop
add
rcr
mov
jg
imul
repz
les
dec
mov
(bad)
data16
add
dec
add
add
add
gs
imul
add
(bad)
mov
add
test
jmp
jnp
add
sar
add
add
jmp
clc
test
iret
test
or
add
retf
add
stc
add
add
inc
inc
test
iret
add
cmc
dec
loope
call
inc
test
inc
js
ins
jp
pop
(bad)
jecxz
mov
add
pop
add
jp
jecxz
jmp
mov
xchg
loope
add
add
add
xchg
pop
retf
add
ins
mov
shr
dec
mov
add
(bad)
movs
dec
add
les
jp
add
aad
mov
(bad)
in
mov
mov
gs
jecxz
jmp
jmp
fild
add
test
dec
jecxz
fwait
add
add
add
and
push
sbb
dec
add
retf
test
add
data16
add
jle
mov
idiv
fadd
fwait
pop
dec
(bad)
mov
add
popf
test
xchg
lea
inc
call
mov
add
add
sub
(bad)
mov
in
hlt
aad
sti
call
test
add
inc
lods
dec
jmp
xchg
and
dec
aaa
neg
mov
inc
call
adc
in
pop
and
dec
and
mov
push
(bad)
mov
pusha
call
add
dec
add
int3
js
les
jmp
push
(bad)
mov
in
test
add
add
and
add
sti
fdivr
dec
in
pop
mul
push
pop
sbb
les
lea
mov
add
scas
or
aad
popf
scas
jecxz
mov
push
push
in
sbb
jecxz
dec
(bad)
test
add
cmp
push
loopne
add
lahf
cmp
add
scas
dec
add
iret
pusha
call
mov
jecxz
inc
(bad)
dec
in
sti
dec
dec
xchg
lods
(bad)
mov
jecxz
or
outs
(bad)
mov
mov
aaa
not
jp
add
dec
push
mul
add
add
sti
jge
sbb
les
mov
lods
rcl
popf
add
(bad)
xchg
dec
or
sti
stos
dec
cmp
add
xchg
push
add
dec
push
aaa
inc
xchg
mov
add
add
sahf
sti
add
les
aad
scas
scas
mov
add
scas
or
push
cmp
scas
jecxz
cmp
lods
mov
dec
or
lods
sar
(bad)
dec
fistp
sar
jp
popa
xchg
dec
js
or
jecxz
outs
scas
cmp
sbb
and
jmp
popf
stc
and
xor
add
dec
or
sbb
add
pop
dec
push
neg
xchg
sti
xchg
scas
mov
jecxz
pusha
(bad)
in
int
xchg
les
lea
jmp
xchg
aad
xchg
scas
popf
inc
xchg
dec
not
add
add
add
scas
pop
dec
inc
scas
push
mov
stos
fmul
movs
test
call
test
test
(bad)
in
pusha
push
aaa
addr16
jnp
in
sahf
mov
xor
mov
add
sti
dec
mov
xchg
inc
dec
mov
int
jecxz
aaa
pop
jnp
dec
or
fcmovnb
dec
js
push
sahf
scas
sub
jmp
pop
jecxz
mov
lods
xor
add
dec
div
add
add
lahf
sub
cmp
xor
cmp
jp
fild
add
xchg
les
int3
dec
in
sti
dec
mov
lods
mov
lods
rcl
(bad)
lahf
jecxz
inc
(bad)
stos
outs
mov
stos
dec
cmp
add
fmul
cmps
test
dec
lods
dec
push
xchg
mov
sbb
dec
add
sti
in
call
test
call
dec
add
js
les
pop
sub
test
add
(bad)
in
int
inc
lods
mov
add
mov
fistp
add
addr16
cmp
dec
add
js
(bad)
(bad)
in
lods
dec
cmp
in
sti
div
dec
add
sti
lods
sub
(bad)
repz
add
repz
cmp
sbb
jecxz
lods
cmp
jl
jecxz
lods
cmp
lds
jecxz
lods
cmp
sbb
add
(bad)
(bad)
in
lods
dec
cmp
in
sti
test
sti
lods
sub
imul
dec
dec
sahf
mov
dec
inc
fadd
aaa
inc
xchg
cwde
add
add
ja
add
fdivr
fadd
(bad)
in
sti
dec
call
add
in
sahf
mov
mov
or
jno
outs
loop
lods
test
jp
cmc
aad
sti
sub
add
scas
jecxz
push
dec
sti
inc
(bad)
adc
pusha
in
sahf
mov
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
idiv
cmp
lods
sub
xchg
dec
mov
shr
dec
add
scas
or
push
cmp
popf
lods
mov
dec
or
lods
shr
dec
mov
dec
popa
or
popf
jecxz
jecxz
popf
stos
cmp
sbb
jecxz
psadbw
(bad)
(bad)
dec
scas
or
popf
lods
sub
add
pop
jge
push
in
sahf
sti
add
les
popf
cmp
xchg
dec
mov
mov
scas
mov
add
scas
dec
cmp
lods
scas
jecxz
in
lods
dec
add
retf
fdivr
jecxz
dec
idiv
in
popf
dec
add
add
dec
(bad)
(bad)
call
test
call
mov
jecxz
aaa
(bad)
dec
sub
mov
jecxz
inc
(bad)
dec
js
dec
jecxz
xchg
and
add
add
dec
jp
add
dec
int3
pop
sbb
les
cmp
stos
dec
inc
imul
ss
(bad)
mov
sahf
mov
(bad)
mov
add
les
inc
aaa
ss
(bad)
mov
add
dec
call
add
sahf
mov
(bad)
in
sti
dec
inc
test
dec
add
ss
(bad)
mov
sahf
mov
dec
sti
lods
les
in
mul
mul
out
add
(bad)
in
int
inc
lods
mov
add
mov
xchg
(bad)
push
addr16
cmp
dec
add
fcomp
mov
add
xchg
call
inc
mov
and
int
jecxz
push
pop
jnp
dec
cli
xchg
xchg
push
fcmovnb
dec
js
push
sahf
scas
popf
fadd
pop
jecxz
(bad)
sbb
inc
dec
fadd
stos
imul
mov
dec
cmp
xchg
lea
add
test
(bad)
(bad)
mov
fwait
push
xchg
add
dec
in
sti
dec
sbb
lods
mov
lods
jmp
dec
mov
lahf
jecxz
mov
(bad)
in
popf
stos
outs
inc
dec
stos
cmp
pushf
add
add
fmul
sbb
retf
add
add
in
popf
dec
sbb
xchg
idiv
add
add
dec
adc
sahf
sti
add
imul
inc
dec
fmul
sti
add
add
mul
sbb
add
js
les
mov
inc
call
dec
lods
mov
(bad)
xchg
dec
or
popf
xchg
fsubr
add
push
mov
add
dec
call
add
add
xchg
add
add
sbb
les
dec
mov
inc
dec
add
rcl
dec
call
(bad)
call
add
scas
or
push
mov
stos
fmul
call
call
sti
xchg
dec
call
add
pusha
push
aaa
addr16
jge
(bad)
sbb
(bad)
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
test
lods
sub
stc
xchg
lods
dec
cmp
xchg
scas
mov
jecxz
dec
(bad)
push
(bad)
dec
add
sahf
mov
xchg
dec
mov
test
dec
pusha
call
mov
jecxz
inc
(bad)
(bad)
in
popf
or
xchg
dec
dec
call
call
in
popf
dec
call
dec
pusha
call
lods
mov
jecxz
inc
(bad)
(bad)
in
popf
xchg
and
jmp
popf
dec
call
dec
jge
sbb
les
sti
outs
stos
dec
cmp
xchg
fmulp
pop
in
ror
(bad)
in
sti
idiv
(bad)
(bad)
call
sahf
mov
dec
inc
fadd
aaa
inc
xchg
cwde
add
add
aam
(bad)
(bad)
(bad)
in
sti
dec
call
dec
in
sahf
mov
aam
add
inc
mov
dec
add
les
(bad)
in
sti
test
add
mov
in
test
add
add
popa
sar
dec
push
int3
js
(bad)
in
test
add
add
jmp
(bad)
(bad)
(bad)
in
sti
dec
div
add
dec
push
sbb
les
(bad)
(bad)
in
sti
in
pop
idiv
jnp
call
sahf
mov
shr
dec
add
mov
jecxz
push
(bad)
outs
mov
dec
fimul
dec
inc
scas
push
ficom
jg
fdivr
dec
ret
mov
test
add
mul
pop
int3
js
les
shr
(bad)
lahf
jecxz
pusha
(bad)
and
sti
stos
dec
cmp
add
sahf
sti
add
les
lods
xor
add
test
add
add
js
(bad)
(bad)
(bad)
in
popf
dec
cmp
dec
neg
push
neg
fwait
jae
(bad)
mov
add
sti
fadd
test
dec
add
xchg
lahf
jp
pusha
xchg
lods
xor
add
pop
add
outs
or
cmp
dec
xchg
(bad)
dec
dec
xchg
dec
test
xor
dec
push
test
dec
add
les
jae
fadd
mov
add
stos
lods
les
dec
xchg
jl
mov
stos
outs
cmp
pop
outs
xor
add
add
in
popf
dec
mov
scas
not
mov
xchg
xchg
sub
dec
mov
dec
movs
xchg
sub
add
sub
dec
cmp
mov
pusha
cwde
iret
jns
add
in
(bad)
in
pusha
aaa
cmp
or
xchg
sub
add
popf
outs
call
add
add
jnp
(bad)
jmp
sub
stos
outs
call
add
add
xlat
sar
(bad)
cmp
iret
sub
add
add
call
stos
outs
cmp
sub
jno
add
dec
sti
dec
faddp
xchg
fmul
jb
xchg
xchg
sub
neg
inc
(bad)
call
sub
mul
inc
(bad)
call
sub
inc
(bad)
jmp
sub
lods
pusha
xor
sub
xchg
add
add
icebp
sbb
fwait
jae
(bad)
mov
add
sti
lods
xor
add
das
add
inc
adc
dec
add
add
les
xchg
(bad)
in
lods
dec
mov
test
add
xchg
xchg
lea
outs
mov
cmp
idiv
add
iret
pusha
in
xchg
dec
dec
mov
dec
popf
test
add
iret
pusha
in
(bad)
dec
add
dec
rcl
lea
les
dec
cmp
in
lods
xchg
(bad)
pop
neg
fwait
cmp
(bad)
mov
add
(bad)
test
dec
add
sti
in
pop
mov
xchg
xchg
in
popf
dec
inc
lods
or
popf
fdiv
jbe
jnp
xchg
xchg
xchg
push
int3
call
aam
call
in
dec
test
div
mov
jge
outs
in
and
arpl
sti
dec
or
popf
cmp
in
popf
(bad)
in
sti
and
in
les
std
div
ins
add
lods
sub
aaa
not
dec
add
sti
test
add
in
pop
cmp
mul
pop
dec
add
dec
dec
(bad)
idiv
inc
not
clc
dec
add
les
and
dec
mov
retf
add
popf
dec
inc
lods
or
fdiv
jbe
jnp
xchg
jmp
pusha
in
popf
dec
aaa
not
loope
add
dec
mov
dec
jge
or
fdiv
jbe
jnp
dec
xchg
aad
jmp
jo
inc
lods
dec
or
xchg
add
mov
mov
inc
lods
or
popf
fdiv
jbe
jnp
xchg
jecxz
popf
lahf
cld
and
in
(bad)
in
pusha
lahf
repnz
mov
or
fdiv
jbe
jnp
aad
jmp
mov
pop
fisttp
popf
xchg
xor
out
dec
movs
cmp
out
mul
add
mov
add
hlt
call
lods
imul
add
call
popf
test
dec
add
inc
popf
fdiv
jbe
jnp
in
test
push
dec
call
iret
pusha
call
popf
inc
test
add
xchg
pop
test
inc
lods
or
popf
fdiv
jbe
jnp
aad
sti
mov
add
sti
xchg
jecxz
popf
sbb
les
xchg
dec
mov
imul
(bad)
in
inc
lahf
jg
mov
or
fdiv
jbe
jnp
dec
lea
lods
dec
int3
or
fdiv
jbe
jnp
push
push
scas
lods
(bad)
in
sti
fmul
div
add
xchg
in
mov
mov
mov
in
mov
in
sti
stos
dec
aaa
imul
in
neg
and
repnz
dec
add
and
(bad)
dec
add
or
push
rcl
or
pusha
popf
int3
cmp
pop
aad
in
mov
add
(bad)
or
not
dec
sar
or
lahf
jp
xchg
dec
dec
or
xchg
(bad)
lahf
xchg
dec
or
push
sar
in
xacquire
dec
faddp
or
xchg
dec
push
pop
int3
dec
and
(bad)
push
mov
or
mov
jnp
addr16
fmulp
(bad)
out
div
dec
add
fmul
pop
xor
pop
test
fmul
jnp
test
in
js
les
popf
outs
sar
dec
lods
(bad)
and
in
inc
or
dec
dec
popf
dec
dec
in
sti
push
mov
add
sbb
les
and
test
loop
cwde
lock
and
sahf
cwde
lods
or
add
or
aad
popf
pop
stc
in
inc
inc
or
popf
outs
stc
(bad)
jecxz
xchg
dec
and
(bad)
ds
dec
cwde
lahf
jp
sbb
loop
dec
jmp
movs
and
inc
lods
dec
cmp
cwde
or
adc
call
in
inc
and
dec
js
dec
dec
sti
dec
push
test
add
and
pop
dec
push
or
push
mov
xchg
dec
dec
jmp
in
lahf
sub
(bad)
dec
cwde
lahf
jp
sbb
or
push
mov
(bad)
jge
pop
neg
les
dec
shr
ror
push
lods
sar
jecxz
idiv
dec
stos
xchg
xchg
outs
(bad)
(bad)
lods
(bad)
ds
dec
ss
jp
push
outs
mov
dec
cmp
cwde
or
hlt
dec
dec
sti
in
int
dec
aaa
test
call
(bad)
dec
ss
jp
push
push
mov
lahf
cmps
lods
mov
dec
inc
dec
aaa
or
push
mov
(bad)
jge
pop
neg
pop
lahf
popa
dec
inc
xor
int3
call
int3
in
jecxz
in
aad
xor
repz
dec
shr
fwait
aad
call
dec
add
ret
jge
int3
call
add
in
pop
int3
js
les
(bad)
pusha
dec
xchg
xchg
mov
inc
xor
fisttp
xchg
(bad)
in
popf
fmul
movs
(bad)
in
sti
div
add
dec
cmp
repz
inc
xchg
dec
add
outs
mov
xchg
(bad)
not
pusha
call
popf
lods
dec
popf
idiv
dec
add
iret
pusha
cwde
iret
popf
dec
add
dec
dec
scas
lahf
es
inc
xchg
xchg
mov
jecxz
mov
xchg
(bad)
not
call
sti
dec
dec
popf
lods
pusha
popf
idiv
dec
add
iret
pusha
cwde
iret
cmp
add
(bad)
in
popf
dec
inc
xchg
dec
sar
fadd
repz
dec
mov
dec
aaa
not
add
iret
pusha
call
mov
in
mov
adc
(bad)
lods
pusha
popf
dec
sbb
and
add
iret
pusha
call
sti
or
add
fadd
repz
(bad)
dec
scas
fmul
ins
(bad)
(bad)
dec
scas
lods
pusha
popf
dec
sbb
mov
add
iret
pusha
call
mov
cmp
dec
inc
xchg
xchg
mov
jecxz
in
mov
pop
jmp
jmp
lea
div
jmp
dec
pusha
in
popa
dec
dec
jmp
cmp
add
add
iret
pusha
call
sti
or
add
in
popf
dec
movs
in
(bad)
fmul
es
(bad)
(bad)
in
popf
cmp
sbb
test
dec
dec
sti
xchg
dec
faddp
xchg
(bad)
dec
dec
jge
pop
neg
les
dec
mov
dec
dec
(bad)
mov
inc
popf
idiv
pusha
call
xchg
jmp
inc
or
cmp
call
(bad)
dec
mov
in
sahf
mov
std
mov
xchg
dec
sub
mov
cmp
lods
stos
dec
push
test
xchg
neg
dec
add
xor
mov
lods
stc
xchg
sti
xchg
dec
stc
scas
mov
jecxz
dec
(bad)
and
scas
not
mul
pusha
cwde
push
jns
jge
js
les
xchg
dec
mov
mov
or
fdiv
jbe
jnp
and
mov
pop
outs
in
mov
add
lods
and
mov
mov
add
scas
or
jmp
xor
jnp
xchg
jmp
in
scas
dec
sbb
in
lods
(bad)
in
popf
neg
jge
outs
in
(bad)
test
add
lea
mov
retf
mov
(bad)
in
xor
mov
test
jecxz
push
jno
pop
pop
and
call
cwde
lahf
mov
popf
scas
mov
add
sti
jge
(bad)
(bad)
in
xchg
pop
neg
les
xchg
dec
mov
in
div
mov
jge
outs
in
(bad)
imul
fild
add
mov
in
mov
add
les
(bad)
test
add
dec
cmp
push
cmp
mov
add
jmp
dec
mov
dec
call
cwde
add
mov
(bad)
test
jge
pop
test
test
sub
test
imul
call
add
xchg
xchg
scas
adc
dec
les
lea
dec
imul
arpl
jmp
sti
in
jle
sbb
popf
and
hlt
inc
test
(bad)
(bad)
inc
neg
lods
sbb
lods
sub
and
jmp
(bad)
in
jmp
in
popf
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
div
cmp
sub
sahf
popf
add
les
cmp
dec
mov
into
scas
scas
mov
add
scas
or
push
cmp
popf
dec
mov
or
scas
push
aaa
inc
sbb
scas
outs
popf
or
neg
inc
dec
shr
dec
push
xchg
dec
pusha
call
mov
jecxz
into
(bad)
dec
inc
xchg
lods
mov
dec
(bad)
lahf
jecxz
dec
(bad)
dec
or
dec
outs
mov
stos
outs
(bad)
push
stos
dec
cmp
dec
jmp
sbb
(bad)
(bad)
jge
push
pop
neg
les
scas
push
int3
pop
mov
add
pop
inc
or
dec
shr
push
not
(bad)
dec
pusha
call
scas
cmp
call
add
dec
push
mul
(bad)
(bad)
jge
push
sbb
dec
movs
cmp
call
add
iret
pusha
call
mov
jecxz
inc
(bad)
or
xchg
push
ret
push
idiv
fadd
dec
push
div
(bad)
(bad)
dec
pusha
call
sti
mov
jecxz
inc
(bad)
cmp
stos
dec
aaa
neg
(bad)
jmp
dec
push
mul
(bad)
(bad)
dec
jge
int3
js
les
in
sti
dec
inc
xchg
xchg
dec
pop
mov
dec
cmp
mov
(bad)
call
cmp
dec
inc
lahf
jecxz
jmp
add
add
jmp
xchg
jb
or
imul
lea
div
and
call
sti
fmul
dec
jmp
cmp
stos
idiv
add
add
dec
faddp
xchg
xchg
push
inc
sti
dec
lahf
mov
(bad)
neg
mov
dec
in
sti
dec
dec
popf
outs
mov
div
jmp
dec
pusha
call
mov
lea
push
inc
sti
add
int3
in
sahf
sti
add
les
fimul
xchg
dec
add
cmp
mov
xchg
mov
repnz
call
mov
mov
in
scas
xchg
mov
inc
jnp
dec
pusha
call
(bad)
dec
add
jmp
xchg
(bad)
dec
inc
xchg
lods
dec
xor
xchg
dec
inc
xchg
xchg
sti
dec
inc
xchg
dec
sti
dec
cmp
xchg
(bad)
dec
repnz
lahf
push
dec
cmp
popf
xchg
mov
(bad)
(bad)
in
mov
stos
cmp
jp
add
outs
mov
div
pusha
call
lods
dec
xchg
(bad)
jge
pop
neg
fwait
imul
mov
add
xchg
shl
push
sub
ds
mov
(bad)
jmp
cmp
stos
outs
dec
push
test
ins
mov
stos
mul
dec
add
in
lods
dec
inc
xchg
stos
xchg
stos
mul
inc
xor
dec
inc
xchg
push
mov
(bad)
dec
inc
xchg
xchg
mov
mov
xchg
or
lahf
sub
inc
xchg
push
pop
sti
in
jecxz
mov
dec
ret
(bad)
repz
add
dec
sti
dec
and
push
sbb
inc
dec
psubq
test
add
in
sti
dec
dec
shl
add
dec
mov
push
fidivr
dec
dec
mov
dec
faddp
push
fidivr
add
(bad)
dec
rol
dec
mul
add
lahf
push
dec
popa
or
push
loop
dec
push
fdivr
dec
dec
sti
dec
push
(bad)
push
loop
add
dec
pop
(bad)
lahf
cmps
push
aad
sti
dec
dec
shl
add
dec
mov
push
fidivr
dec
dec
mov
dec
faddp
push
fidivr
add
(bad)
dec
rol
dec
idiv
add
outs
mov
dec
sti
or
cmp
cwde
iret
fdivr
(bad)
dec
xchg
dec
faddp
push
fidivr
dec
dec
cmp
dec
sub
sti
div
leave
dec
add
les
pop
sub
xor
not
dec
add
(bad)
in
int
inc
lods
mov
add
mov
cmps
arpl
push
addr16
cmp
dec
add
fsubr
mov
add
sti
dec
movs
dec
sub
cmp
in
(bad)
in
call
or
fdiv
jbe
jnp
dec
mov
push
or
fdiv
jbe
jnp
pop
push
sub
test
or
lods
fisttp
mov
add
dec
push
fstp
add
push
test
sbb
jp
mov
dec
fisttp
div
(bad)
dec
dec
cmp
jbe
jnp
(bad)
in
lods
xor
lods
xor
add
dec
xchg
push
xchg
adc
push
stos
not
in
lods
dec
sub
pop
dec
add
add
(bad)
sbb
add
adc
dec
lods
fadd
aaa
cmp
add
add
aad
add
dec
sub
dec
fdiv
jbe
jnp
dec
lea
neg
dec
dec
test
(bad)
jmp
dec
add
push
xchg
mov
scas
xchg
repz
add
hlt
dec
dec
adc
div
jecxz
and
popa
(bad)
(bad)
in
inc
aad
pop
rcl
dec
xchg
jecxz
push
xchg
xor
dec
push
and
movs
sar
(bad)
in
push
div
iret
dec
add
jbe
add
or
lods
fdiv
jbe
jnp
(bad)
in
lods
mov
add
add
cmc
mul
(bad)
fdivr
xchg
jmp
dec
lods
jmp
idiv
jmp
dec
sub
dec
or
lods
fdiv
jge
jnp
in
int
or
mov
push
sar
xchg
jmp
into
lods
dec
pop
lods
dec
mov
lahf
lods
fdivr
xchg
in
pop
outs
cmp
neg
(bad)
jmp
in
les
cmc
repz
add
dec
cmp
pusha
xor
pusha
xor
jb
(bad)
(bad)
fadd
fadd
repz
(bad)
(bad)
jmp
push
mul
(bad)
push
cmp
mov
scas
lods
outs
sar
dec
cmps
dec
sbb
inc
sti
add
xchg
dec
cmp
adc
lods
jle
outs
mov
dec
in
add
push
ret
dec
cmp
push
push
call
outs
cmp
mul
aaa
xor
test
les
push
fadd
fmul
jae
(bad)
push
loop
dec
add
pop
aad
in
mov
add
(bad)
or
dec
fdivrp
xchg
or
lahf
mov
sti
or
lahf
jp
xchg
dec
loop
or
xchg
(bad)
lahf
sub
(bad)
push
sti
in
xacquire
dec
faddp
or
dec
or
or
mul
add
dec
push
pop
int3
js
les
scas
lods
stc
xchg
sti
mov
jecxz
dec
mov
sti
mov
jecxz
dec
(bad)
lods
mov
mov
inc
xchg
dec
dec
sti
cwde
or
dec
sahf
dec
push
lods
repnz
push
rep
sbb
test
dec
les
call
(bad)
lods
test
ds
dec
lods
lahf
jp
cmc
aad
sti
ds
lods
test
ds
add
scas
outs
(bad)
rcr
cmp
inc
(bad)
adc
pusha
in
sahf
mov
loop
mov
add
scas
or
cmp
call
outs
dec
cmc
test
jmp
cmp
stos
outs
dec
pop
mul
inc
add
jae
ins
mov
stos
not
in
lods
test
(bad)
dec
or
dec
into
sti
lahf
out
inc
sti
or
add
popf
dec
cmp
aad
int3
in
test
jmp
(bad)
in
jecxz
pop
(bad)
dec
dec
sti
dec
loop
aad
(bad)
in
mov
repnz
in
mov
xchg
aad
in
xor
jmp
dec
call
dec
sbb
dec
or
add
cmp
dec
stos
xchg
aad
sti
cwde
and
add
add
jmp
dec
call
sti
dec
sbb
loop
or
add
lahf
xor
xchg
dec
lea
add
(bad)
in
jecxz
pop
mov
sti
xchg
(bad)
dec
dec
sti
dec
push
xchg
aad
(bad)
in
mov
sub
out
mov
mov
push
dec
call
jns
shr
or
cmp
and
add
repz
add
add
jmp
inc
add
dec
sub
dec
or
or
cmp
in
cmp
sti
push
loop
dec
dec
call
imul
or
or
cmp
cwde
and
add
add
or
dec
in
test
sti
or
dec
call
cmp
or
in
sti
push
fidivr
dec
push
loop
add
mov
add
sti
jns
cmp
in
sti
shl
cmp
cmp
loop
dec
call
imul
add
add
xor
add
or
cmp
in
scas
(bad)
in
sti
push
loop
dec
dec
call
not
sub
in
or
or
dec
in
imul
pop
cmp
fist
cmp
dec
test
(bad)
dec
cmp
dec
ficom
and
(bad)
(bad)
call
pop
cmp
or
(bad)
in
sti
push
fidivr
dec
push
loop
add
sldt
add
jns
cmp
in
sti
shl
cmp
cmp
dec
dec
call
idiv
add
add
cmp
into
popf
div
(bad)
(bad)
cmp
push
jmp
sti
mov
test
dec
lods
dec
cmp
lods
xchg
(bad)
test
add
les
sti
dec
lods
xchg
sti
dec
lods
or
xchg
dec
and
xchg
dec
setno
push
(bad)
in
mov
sub
sbb
mov
xchg
(bad)
sbb
les
dec
stos
sti
xchg
dec
stos
sti
or
xchg
dec
and
xchg
dec
setno
push
(bad)
in
mov
cwde
dec
and
push
push
sti
in
mov
jp
jp
sar
xchg
(bad)
sbb
imul
dec
add
int
push
sahf
call
push
out
call
push
out
call
dec
shr
fwait
pop
mov
mov
add
shl
sub
add
mov
xchg
and
call
scas
(bad)
in
popf
(bad)
in
sti
neg
add
add
idiv
out
add
(bad)
test
add
not
js
les
cmp
sbb
or
cmp
dec
xchg
dec
movs
in
pop
xchg
inc
dec
dec
jmp
and
(bad)
dec
outs
into
popf
test
stos
ror
sar
mov
jge
pop
neg
fwait
xchg
or
mov
add
dec
cmp
xchg
mov
dec
cmp
mov
xchg
sti
test
(bad)
jmp
int3
xor
and
call
cmp
push
mov
add
test
dec
add
mov
fwait
loope
(bad)
mov
add
inc
fadd
xchg
(bad)
idiv
ror
push
push
call
lahf
jp
pusha
xchg
add
and
div
repz
outs
cmp
stos
fwait
iret
mov
mov
dec
add
add
push
mov
add
adc
(bad)
(bad)
in
add
jns
dec
add
sti
mov
add
js
les
and
popf
xchg
jmp
cmp
test
add
sti
neg
les
and
in
popf
lods
xor
add
in
sti
neg
add
dec
cmp
fcomp
fwait
sub
(bad)
mov
add
in
popf
lods
xor
not
in
lods
lods
xor
add
add
sti
stos
mul
retf
fadd
fmul
in
cmp
dec
and
dec
sti
test
fstp
imul
mov
add
sti
lods
xor
add
dec
jnp
mov
mul
mov
jmp
dec
in
(bad)
in
pop
inc
xchg
(bad)
not
jg
add
pusha
in
addr16
pop
mov
mov
neg
xchg
jmp
or
add
dec
aaa
not
mov
add
fcomp
fwait
sub
(bad)
mov
add
in
popf
lods
xor
imul
(bad)
dec
dec
cmp
(bad)
fadd
neg
(bad)
dec
sti
stos
neg
add
dec
outs
in
cmp
adc
cmp
test
add
fcomp
fwait
xor
(bad)
mov
add
sti
lods
xor
add
xchg
test
(bad)
jmp
dec
(bad)
in
pop
inc
dec
test
sub
in
addr16
pop
mov
mov
test
add
stos
xchg
jmp
and
add
dec
push
idiv
mov
add
fcomp
fwait
sub
(bad)
mov
add
in
popf
lods
xor
neg
lea
lods
lods
xor
add
(bad)
fadd
idiv
(bad)
dec
sti
stos
test
fmul
in
cmp
sbb
(bad)
dec
sti
imul
or
sti
xchg
dec
stc
scas
mov
jecxz
dec
(bad)
and
scas
not
add
jnp
addr16
fidivr
fdivr
fwait
ins
or
or
mov
jecxz
loop
dec
push
scas
outs
popf
rol
cmp
mov
dec
les
scas
add
iret
pusha
in
xor
pop
mov
mov
test
jmp
stos
neg
add
dec
cmp
add
fcomp
fwait
xor
(bad)
mov
add
sti
lods
xor
add
dec
jnp
mov
test
jmp
dec
in
(bad)
in
pop
inc
xchg
(bad)
not
sub
in
addr16
pop
mov
mov
mul
mov
add
sbb
mul
mov
dec
les
sti
xchg
dec
ror
xor
jnp
dec
lea
push
mov
retf
push
stos
dec
aaa
mul
icebp
(bad)
jmp
sti
in
arpl
push
in
sbb
js
les
xchg
in
pusha
outs
mov
jmp
in
popf
(bad)
in
popf
(bad)
in
sti
idiv
adc
add
sahf
sti
add
les
xchg
in
pusha
outs
mov
jmp
in
sti
(bad)
in
sti
imul
add
lods
sbb
js
les
popf
outs
sar
dec
lods
(bad)
and
in
inc
or
cmp
in
popf
push
mov
sti
div
jecxz
add
sahf
sti
add
scas
fwait
scas
mov
mov
add
pop
shr
inc
mov
inc
mov
test
xor
inc
mov
mov
ins
fiadd
mov
mov
mov
in
call
dec
add
cmp
or
sbb
rcr
not
sbb
push
cmp
dec
aad
sti
call
scas
dec
(bad)
xchg
xchg
lea
outs
cmp
and
bound
ret
add
xor
dec
aaa
idiv
fcomp
fwait
repz
mov
add
in
sti
test
in
sti
xchg
les
xor
test
(bad)
in
pop
push
int3
call
aaa
cmp
or
sbb
rcr
not
sbb
xchg
jmp
in
sti
outs
cmp
add
xchg
fisubr
xacquire
mov
outs
dec
and
cmp
jb
mov
add
dec
outs
in
fwait
rcr
jmp
cmp
(bad)
(bad)
jl
inc
mov
neg
mov
stos
dec
cmp
xchg
outs
js
imul
dec
add
outs
mov
not
push
mul
mov
dec
mov
and
push
lods
jmp
dec
cli
(bad)
cmp
(bad)
ror
dec
xchg
jmp
repnz
fmul
scas
sti
xchg
test
add
dec
add
cli
sti
dec
cmp
dec
xchg
mov
in
call
scas
test
dec
add
mov
int3
fdiv
fwait
add
(bad)
mov
add
(bad)
test
sti
mov
call
pusha
xchg
xchg
in
pop
outs
mov
xchg
scas
xchg
xchg
xchg
xor
jmp
idiv
add
popf
dec
in
jecxz
xchg
outs
mov
add
dec
in
outs
mov
add
(bad)
in
(bad)
(bad)
in
idiv
in
std
(bad)
in
and
in
mov
in
sti
(bad)
in
sti
imul
add
dec
cmp
test
dec
add
sti
test
(bad)
(bad)
in
mul
and
push
daa
dec
add
js
les
inc
dec
shr
dec
inc
dec
cmps
push
jnp
jp
sbb
mov
jecxz
pusha
(bad)
dec
dec
sti
div
add
and
lods
push
jnp
mov
mov
cwde
and
js
les
dec
cmp
(bad)
lods
jmp
dec
mov
(bad)
in
inc
lahf
cmp
scas
dec
(bad)
out
pusha
call
lahf
(bad)
lods
xor
add
jmp
out
lahf
sub
(bad)
aad
popf
in
hlt
dec
cmp
ret
iret
pusha
in
hlt
lahf
test
int
pop
(bad)
push
enter
inc
and
dec
cmp
xchg
lahf
ss
cmp
lods
fld
dec
cmp
in
neg
les
xor
xchg
jecxz
xchg
inc
dec
dec
in
cwde
lods
pusha
jp
not
inc
scas
pop
mov
add
xchg
jecxz
xor
scas
dec
aaa
push
neg
xchg
pop
jp
dec
dec
fimul
lods
dec
nop
jp
mov
add
sub
pop
dec
add
(bad)
repnz
inc
lods
dec
(bad)
xchg
lods
mov
and
call
xchg
mov
inc
jge
pop
sbb
jecxz
add
les
dec
mov
dec
call
dec
pusha
call
mov
jecxz
inc
(bad)
or
cmp
call
(bad)
(bad)
call
or
scas
push
int3
inc
sbb
scas
outs
popf
xchg
push
xchg
scas
mov
add
pop
inc
fmul
scas
jecxz
fadd
dec
push
test
call
sti
mov
jecxz
dec
(bad)
dec
or
dec
stos
outs
(bad)
push
stos
dec
int3
idiv
(bad)
jmp
dec
push
neg
mov
dec
jge
sbb
les
xchg
jmp
cmp
and
mov
mov
bound
sub
jle
dec
add
xor
idiv
inc
add
fisubr
add
mov
inc
(bad)
mov
add
scas
mov
(bad)
call
mov
xchg
xchg
jae
add
test
jmp
cmp
outs
dec
out
xchg
or
ins
mov
stos
not
jns
add
push
rep
sar
jecxz
sti
mov
or
push
sahf
pop
jecxz
dec
lea
xchg
dec
dec
lea
jecxz
in
push
dec
dec
dec
and
neg
in
dec
add
dec
mov
outs
scas
mov
dec
or
and
mov
dec
or
and
ficom
push
or
xchg
imul
aad
mov
dec
test
test
and
inc
xchg
dec
mov
jb
xchg
(bad)
in
int
inc
lods
mov
add
mov
push
addr16
cmp
dec
dec
nop
jp
(bad)
repnz
add
dec
js
mov
movs
outs
(bad)
aad
idiv
add
mov
mov
in
pusha
movs
sbb
inc
lods
and
mov
dec
add
inc
lods
dec
cmp
jl
dec
add
lods
sub
and
dec
inc
xchg
push
int3
pop
test
xor
xchg
push
movs
inc
mov
add
xchg
aaa
int3
js
les
fcomp
out
(bad)
mov
or
push
mov
hlt
push
js
scas
popf
outs
jno
lods
idiv
or
jecxz
lahf
jp
mov
dec
push
xchg
test
loopne
mov
jmp
add
sbb
dec
faddp
and
mov
dec
add
and
sti
dec
xchg
dec
shr
xchg
test
(bad)
jmp
mov
sti
dec
test
stos
cs
add
inc
loop
xchg
sti
dec
out
push
repz
push
dec
xchg
outs
cmp
ds
cmp
dec
add
call
mov
call
dec
add
(bad)
dec
cli
scas
outs
(bad)
xchg
lahf
mov
jecxz
add
jge
neg
les
lods
xor
add
jmp
(bad)
in
jmp
cmp
(bad)
in
popf
idiv
lods
add
dec
cmp
add
cs
mov
(bad)
mov
add
in
sti
outs
in
xchg
test
add
dec
mov
jne
add
mov
mov
stos
not
dec
add
fdivr
fwait
loope
(bad)
mov
add
sti
lods
xor
add
popf
add
(bad)
in
lods
dec
dec
sti
neg
dec
popf
lods
cmp
xor
lahf
sbb
dec
not
(bad)
jmp
push
in
sti
in
jle
add
jmp
dec
add
dec
outs
dec
add
dec
mov
and
ins
or
test
call
outs
(bad)
sti
test
jmp
call
(bad)
test
dec
add
cmp
pop
push
int3
in
(bad)
pop
sar
sar
neg
scas
dec
add
int3
call
push
mov
dec
pop
int3
or
dec
cmp
dec
outs
(bad)
sti
div
mov
test
pop
int3
js
les
lods
xor
add
in
sti
dec
(bad)
div
mov
in
int3
fadd
fwait
xor
(bad)
mov
add
idiv
pop
(bad)
dec
cmp
dec
faddp
lods
push
sti
xchg
sti
xchg
lea
cmp
add
add
call
jmp
xor
pusha
call
test
push
daa
dec
add
fwait
test
(bad)
mov
add
mov
mov
jae
push
sti
dec
ret
(bad)
idiv
(bad)
(bad)
dec
(bad)
lods
aaa
sti
xchg
cmp
add
add
call
cmp
dec
les
xor
jmp
dec
inc
(bad)
lods
dec
mov
in
lea
test
push
mov
mov
dec
add
xchg
sti
not
add
dec
in
sti
xchg
lea
inc
in
(bad)
imul
dec
add
js
les
popf
and
pop
aad
test
test
mov
popf
rol
sti
push
dec
call
call
xchg
or
in
repz
(bad)
in
int
inc
lods
mov
add
mov
movs
(bad)
push
addr16
cmp
dec
add
dec
dec
inc
dec
inc
pop
aaa
ss
adc
faddp
aaa
cmp
pop
fwait
add
dec
faddp
outs
sar
not
jp
add
inc
out
pop
loopne
mov
fwait
and
mov
add
xchg
les
mov
aaa
inc
pop
add
pop
loopne
mov
aaa
cmp
(bad)
in
sti
dec
call
add
pop
aaa
ss
adc
faddp
aaa
cmp
pop
fwait
add
dec
faddp
lods
outs
out
sub
dec
push
test
add
(bad)
fwait
dec
jecxz
mov
add
xchg
lea
sti
xchg
test
add
in
pusha
xchg
jmp
mov
scas
outs
shr
mov
add
ss
(bad)
mov
(bad)
mov
jns
add
les
dec
mov
test
add
lods
out
mov
inc
popf
dec
mov
xchg
jge
push
in
sahf
mov
dec
inc
imul
test
inc
dec
call
add
sahf
mov
dec
inc
div
dec
add
inc
cmp
dec
call
add
sahf
mov
(bad)
in
int
pop
(bad)
dec
mov
outs
(bad)
mov
or
out
dec
dec
int3
dec
hlt
xchg
xchg
dec
add
fdivr
fwait
and
dec
add
xchg
lea
jmp
and
(bad)
in
sti
mul
and
add
les
jae
push
(bad)
mov
add
stos
xchg
les
aas
mov
xchg
sub
add
cmp
aas
mov
stos
outs
iret
sub
add
add
add
add
outs
cmp
scas
stos
idiv
iret
sub
iret
sub
add
add
sub
add
add
add
in
pop
xchg
fiadd
add
dec
xchg
sub
outs
iret
sub
add
add
out
xchg
sub
add
cmp
popa
div
lods
add
outs
daa
sub
add
add
add
xchg
sub
dec
dec
xchg
sub
popf
xchg
sub
stos
sub
in
inc
lods
daa
sub
add
add
outs
cmp
scas
neg
int3
dec
daa
sub
add
add
jg
add
add
pusha
add
add
add
xchg
stos
dec
add
sbb
mov
aaa
outs
or
(bad)
mov
(bad)
mov
add
lods
out
mov
bound
fdivr
fwait
mov
(bad)
mov
add
fdivr
not
stos
dec
add
xor
add
pusha
call
cmp
in
lea
cmc
(bad)
in
(bad)
mul
add
lahf
jp
pusha
and
sbb
pop
dec
push
(bad)
outs
cmp
mul
dec
add
js
les
cmc
fmul
outs
dec
add
lods
mov
push
xor
stos
idiv
js
les
jae
rol
mov
add
stos
xchg
les
add
add
mov
iret
sub
add
add
mov
iret
sub
add
add
add
add
outs
cmp
xor
mov
sub
add
xchg
sub
iret
sub
add
xchg
sub
add
add
pop
xchg
test
add
push
movs
dec
push
mov
cmp
lods
outs
iret
sub
add
fsubr
xchg
sub
lods
add
cmp
fcomip
mov
mov
sar
daa
sub
add
xchg
sub
cmp
lods
dec
dec
xchg
sub
scas
xchg
sub
add
add
(bad)
popf
add
iret
pusha
in
inc
lods
daa
sub
add
add
outs
cmp
xor
int
add
jns
dec
daa
sub
add
add
jg
add
add
sub
add
add
add
xchg
cmp
sbb
mov
push
jae
add
add
div
dec
add
xchg
(bad)
(bad)
jmp
add
out
cmp
outs
cmp
xchg
(bad)
in
pop
xchg
jmp
xchg
sti
(bad)
(bad)
dec
mov
fsubr
xchg
lods
(bad)
(bad)
push
inc
(bad)
inc
(bad)
push
and
xchg
test
dec
dec
xchg
scas
(bad)
(bad)
call
(bad)
inc
repnz
iret
pusha
in
adc
and
hlt
add
add
imul
dec
add
mov
icebp
repz
add
dec
dec
lea
imul
add
dec
aaa
ss
(bad)
mov
add
fwait
cmp
(bad)
mov
add
dec
in
sti
lods
xor
add
pop
loopne
mov
in
push
mov
(bad)
inc
pop
aaa
ss
aaa
dec
adc
faddp
aaa
cmp
pop
fwait
add
dec
faddp
outs
stos
mov
and
call
in
dec
neg
jo
add
div
add
fwait
xchg
(bad)
mov
add
push
dec
faddp
aaa
cmp
push
rol
jmp
outs
jno
dec
call
add
jmp
faddp
aaa
cmp
jmp
loopne
mov
add
dec
dec
inc
inc
inc
fimul
ss
(bad)
mov
lods
(bad)
out
not
dec
add
pusha
xchg
or
xchg
or
xchg
or
sub
xchg
sbb
xchg
dec
call
add
js
les
and
fdivrp
xchg
call
and
fisttp
mov
sahf
scas
pop
dec
sar
inc
outs
(bad)
pop
xchg
dec
or
or
push
mov
sbb
fwait
(bad)
inc
add
in
pusha
repz
add
sub
and
call
dec
sbb
cmc
scas
adc
test
sub
outs
loop
xchg
add
cmovs
add
jp
sbb
repz
add
(bad)
in
(bad)
in
pop
lahf
lods
dec
inc
dec
dec
inc
lods
jecxz
or
jecxz
push
ret
push
rep
rcr
mov
(bad)
and
inc
hlt
fwait
(bad)
(bad)
(bad)
jmp
scas
(bad)
push
repz
inc
and
call
idiv
sbb
dec
dec
inc
lods
dec
lods
xchg
and
inc
scas
ud0
jmp
int3
xchg
test
mov
pop
in
dec
scas
xchg
mov
xchg
or
jecxz
push
mov
lods
inc
inc
faddp
xchg
xchg
xchg
add
add
lahf
cld
dec
inc
mov
push
mov
inc
mov
sub
or
push
mov
inc
scas
dec
xchg
or
push
ret
jge
xchg
dec
inc
sub
jecxz
or
dec
or
jecxz
push
mov
faddp
call
dec
inc
fldcw
out
push
inc
or
dec
test
sub
dec
in
or
push
shr
or
xchg
dec
rcr
xchg
push
mov
fimul
mov
dec
add
or
dec
(bad)
sti
dec
inc
sub
outs
loop
xchg
or
add
sahf
mov
loop
dec
lods
dec
fwait
(bad)
inc
add
int
inc
dec
jno
push
xchg
inc
or
xchg
dec
mov
call
ss
loop
jp
mov
and
(bad)
jp
and
lods
jp
sbb
call
add
jp
pusha
in
sahf
mov
dec
or
fwait
(bad)
inc
add
cmp
dec
jno
dec
mov
outs
xor
enter
dec
mov
faddp
in
dec
dec
and
dec
popa
and
call
stc
mov
aad
mov
dec
lods
dec
loop
or
push
mov
(bad)
or
mov
add
pop
jge
js
les
sub
and
sti
aad
mov
inc
cmp
cwde
iret
mov
loop
dec
or
add
lods
jp
adc
(bad)
mov
mov
dec
in
xchg
inc
cmp
retf
lods
or
dec
in
popf
push
ret
lahf
jg
mov
dec
test
popf
and
dec
loop
dec
add
mov
push
ret
jmp
or
push
mov
dec
and
jecxz
dec
jp
cmp
add
add
sub
and
iret
pop
add
dec
mov
dec
addr16
inc
outs
(bad)
mov
aam
push
dec
push
mov
dec
test
scas
jp
outs
dec
popa
and
call
pop
rol
dec
mov
mov
dec
mov
lods
or
dec
in
popf
push
ret
lahf
repnz
mov
in
jecxz
in
popf
and
dec
loop
dec
add
mov
push
ret
jmp
and
push
mov
dec
push
sub
pusha
dec
dec
lahf
sbb
lahf
ss
inc
rol
sti
jge
test
xchg
lods
pop
sbb
les
popf
dec
js
dec
outs
(bad)
jp
loop
dec
lods
xchg
and
call
xchg
mov
rol
cwde
iret
mov
add
inc
cmp
dec
cmp
mov
and
dec
popa
and
call
loop
dec
add
mov
push
ret
jmp
and
push
mov
dec
and
jecxz
dec
jp
cmp
jp
mov
jp
pusha
call
(bad)
dec
inc
outs
(bad)
mov
aam
push
dec
push
mov
inc
cmp
jp
ins
dec
lods
and
call
loop
dec
add
mov
push
ret
jmp
and
push
mov
dec
push
sub
pusha
dec
dec
lahf
jp
jnp
dec
cmp
in
idiv
out
xchg
sti
xchg
popf
xchg
lods
in
sahf
fld
js
les
lods
les
push
call
lahf
rcl
retf
jne
push
sbb
or
or
sbb
in
mov
sti
dec
add
not
test
cmp
dec
add
add
mov
in
mov
add
mov
jp
addr16
int3
js
les
jno
dec
push
imul
(bad)
inc
dec
call
add
sahf
mov
dec
inc
imul
(bad)
inc
dec
call
add
sahf
mov
rol
mov
add
sti
lods
xor
retf
aaa
inc
jb
loopne
mov
dec
ss
faddp
aaa
(bad)
ss
(bad)
mov
(bad)
outs
rol
jecxz
aaa
cmp
not
jp
xchg
jmp
sub
xchg
aaa
(bad)
sub
neg
add
add
div
dec
add
fwait
hlt
xor
mov
add
sti
dec
test
add
in
popf
lods
or
(bad)
mov
add
neg
dec
add
(bad)
(bad)
mov
add
imul
add
dec
cmp
xchg
in
sti
dec
aaa
xchg
div
xchg
add
stos
xchg
jmp
fwait
ins
add
lods
dec
jmp
mov
(bad)
imul
imul
dec
ss
dec
call
xchg
in
cwde
dec
mov
lods
xchg
(bad)
cmp
dec
xchg
div
mov
add
ror
mov
jp
mov
add
sti
outs
cli
(bad)
aaa
mov
test
add
pop
fadd
xchg
jmp
ret
xor
mov
dec
(bad)
not
add
lahf
jp
pusha
xchg
xchg
fldcw
xor
sti
xchg
xchg
out
outs
mov
xchg
xchg
inc
xchg
xchg
dec
mov
xchg
xchg
dec
mov
xchg
ror
mov
dec
fimul
fisubr
call
idiv
(bad)
(bad)
in
sti
dec
mov
test
(bad)
jmp
lods
sbb
popf
or
pop
dec
dec
lods
xchg
dec
dec
fld
dec
cmc
push
fld
inc
sahf
jp
inc
inc
sahf
lods
in
jp
sbb
scas
xchg
dec
dec
sub
xchg
dec
or
jecxz
push
mov
fldcw
dec
inc
lods
xchg
fld
dec
inc
out
push
inc
dec
jge
sbb
les
sti
in
pusha
inc
dec
dec
in
jecxz
(bad)
mov
dec
jp
jecxz
xchg
jp
dec
sti
call
(bad)
call
mov
les
cmp
dec
lea
xor
in
xchg
outs
mov
(bad)
dec
xchg
outs
mov
(bad)
(bad)
(bad)
in
jmp
in
mov
in
(bad)
(bad)
in
sti
div
cmp
jge
pop
neg
les
(bad)
in
sti
lods
xor
add
idiv
inc
scas
aas
loopne
mov
lods
xor
lods
sbb
lods
or
push
ss
(bad)
mov
add
int3
js
les
(bad)
in
sti
lods
xor
add
sub
add
dec
cmp
test
aad
mov
add
dec
cmp
xchg
les
in
sti
call
adc
popf
xor
dec
in
les
jmp
jmp
push
in
popf
in
jle
add
leave
pop
dec
add
popf
idiv
add
fdiv
fwait
retf
mov
add
pop
dec
fucomp
pusha
dec
inc
xchg
cmp
mov
sbb
add
push
cmp
dec
push
in
sti
call
sbb
xchg
test
call
add
add
dec
in
xchg
lahf
sbb
dec
not
push
xor
add
in
add
jle
add
sub
dec
add
dec
outs
in
cmc
test
neg
cld
dec
add
fsubr
mov
add
sti
dec
in
outs
mov
(bad)
dec
lods
and
mov
mov
add
scas
or
les
dec
fimul
xor
xchg
les
xchg
or
and
mov
mov
add
xor
cmp
cwde
iret
push
dec
add
push
xchg
cwde
lods
aas
add
add
cmp
push
cmp
call
dec
cmp
aad
xor
test
dec
faddp
xchg
std
outs
cmp
stos
dec
aaa
xchg
not
dec
add
outs
in
xchg
idiv
jp
add
dec
in
les
and
call
scas
dec
stos
xchg
jecxz
push
fst
(bad)
lods
cs
add
xchg
xor
(bad)
lods
cs
add
bound
ds
test
or
les
pop
inc
scas
outs
(bad)
xchg
dec
stos
dec
aaa
mul
fadd
repz
add
stos
lahf
inc
aaa
cmp
jp
add
dec
cmp
push
cmp
call
dec
cmp
aad
xor
test
dec
faddp
xchg
std
outs
cmp
stos
dec
aaa
xchg
neg
(bad)
jmp
xchg
mul
add
lahf
xor
js
lahf
hlt
dec
shl
and
call
(bad)
lods
cs
add
stos
xor
jmp
sbb
scas
dec
(bad)
in
les
cmp
xlat
add
add
pop
xor
(bad)
in
(bad)
idiv
add
add
pop
xor
aaa
div
add
add
xor
add
les
sti
cmp
dec
(bad)
(bad)
xchg
dec
or
div
dec
faddp
dec
dec
sti
xchg
mov
(bad)
add
(bad)
in
mov
(bad)
out
dec
push
xchg
(bad)
in
sti
mul
mov
adc
mov
dec
dec
lea
dec
xchg
in
hlt
dec
inc
xor
ficom
aad
scas
pop
mov
dec
xchg
and
in
mov
pop
sub
push
test
inc
lods
dec
mov
add
sub
cs
add
(bad)
cwde
dec
inc
lods
dec
(bad)
or
dec
outs
(bad)
xchg
and
jg
dec
sti
dec
hlt
xchg
(bad)
inc
jge
in
in
sbb
les
dec
lea
xchg
xchg
outs
mov
(bad)
dec
sti
dec
sbb
ret
cmp
cmp
add
xchg
outs
cmp
add
push
call
lods
xchg
pusha
(bad)
push
dec
call
out
xchg
mov
ret
jge
pop
neg
dec
lea
(bad)
xchg
dec
mov
fimul
push
jle
pusha
in
repnz
dec
add
and
(bad)
dec
sti
lahf
jp
mul
pusha
call
pusha
dec
fidiv
jecxz
xchg
aad
(bad)
mov
add
and
dec
ss
jp
pusha
aad
scas
pop
jg
inc
call
pusha
or
scas
and
dec
inc
lahf
jp
inc
dec
inc
lods
dec
(bad)
fwait
jge
outs
(bad)
ficomp
dec
and
repnz
outs
dec
add
and
(bad)
dec
sti
lahf
jp
mul
pusha
call
pusha
dec
fidiv
jecxz
xchg
aad
(bad)
mov
add
inc
(bad)
dec
push
int3
fadd
fwait
cmp
(bad)
mov
add
dec
in
sti
lods
xor
add
pop
loopne
mov
in
push
mov
(bad)
inc
pop
aaa
ss
aaa
dec
adc
faddp
aaa
cmp
pop
fwait
add
dec
faddp
outs
stos
mov
and
call
in
dec
mul
xor
add
idiv
pop
dec
add
fwait
mov
dec
add
add
div
add
lods
xor
add
out
stos
dec
add
dec
test
pushf
lods
add
iret
pusha
call
add
iret
pusha
in
ror
(bad)
repz
add
add
add
mov
dec
call
add
jmp
dec
cmp
xchg
and
call
div
or
ss
call
mov
outs
cmp
not
add
cmp
sar
enter
add
mov
xchg
mov
mov
scas
sub
test
jns
push
cmp
jmp
sar
int
cmp
lods
inc
mov
test
dec
add
jb
add
iret
pusha
in
ja
repnz
add
inc
mov
ror
(bad)
fadd
fmul
dec
cmp
xchg
push
(bad)
jmp
add
cmc
fild
add
idiv
pop
dec
add
fdiv
fwait
lea
(bad)
mov
add
lods
inc
lods
test
sti
lods
fld
dec
inc
lods
aad
popf
cwde
rcl
or
sub
dec
add
sub
dec
add
dec
sub
cwde
or
imul
xchg
inc
lods
test
add
adc
add
outs
cli
dec
add
dec
test
xchg
cwde
add
iret
pusha
call
add
jns
outs
dec
add
cli
fild
add
repz
add
outs
cmp
stos
idiv
sbb
add
mov
dec
call
add
jmp
dec
cmp
xchg
xchg
and
iret
fwait
add
add
jmp
cmp
les
add
add
dec
call
jmp
outs
cmp
not
sub
dec
sub
push
sub
fmul
dec
cmp
jne
(bad)
jmp
add
enter
adc
add
jns
enter
lods
dec
add
in
jp
add
pusha
call
dec
inc
lods
adc
in
inc
aad
popf
call
dec
int
push
xchg
scas
jecxz
cmp
cwde
adc
int
cmp
imul
add
jns
sar
enter
test
lods
push
inc
popf
scas
adc
fmul
dec
cmp
arpl
rep
(bad)
(bad)
dec
test
fmul
dec
cmp
not
(bad)
push
inc
test
push
dec
add
fdivr
fwait
repz
(bad)
mov
add
add
div
xor
add
inc
or
dec
xchg
dec
test
push
sub
call
add
iret
pusha
in
ror
sti
repz
add
add
add
add
mov
dec
call
add
jmp
dec
cmp
xchg
pusha
and
test
jmp
cmp
(bad)
jg
add
or
ss
call
mov
xchg
sub
idiv
jg
add
sar
int
cmp
or
mov
xchg
push
mov
cmp
mul
add
int
iret
pusha
shl
cmp
jns
int
inc
sti
test
cmp
dec
inc
sti
add
movs
test
in
or
nop
dec
add
iret
pusha
in
ror
sti
fadd
fmul
dec
cmp
add
(bad)
jmp
add
cmp
test
dec
les
sti
lods
les
xchg
outs
cmp
add
in
popf
in
inc
(bad)
in
scas
dec
out
(bad)
in
lods
dec
pop
(bad)
(bad)
in
xor
in
xchg
imul
add
lods
sub
(bad)
in
lods
test
add
dec
in
sti
lods
sub
call
dec
or
test
in
popf
(bad)
in
scas
(bad)
in
lods
(bad)
in
xor
in
xchg
div
jecxz
add
xchg
(bad)
in
scas
(bad)
in
lods
imul
jecxz
add
dec
cmp
lods
sub
cmp
jge
pop
neg
les
and
out
xchg
dec
pop
(bad)
and
mul
and
dec
ss
ss
sub
dec
fidiv
dec
js
jecxz
xchg
jecxz
push
mov
call
pusha
push
pop
xchg
scas
mov
add
mov
mov
(bad)
(bad)
jge
neg
les
or
add
cwde
xchg
stc
(bad)
jbe
jbe
pop
lods
xor
add
dec
add
add
jmp
dec
dec
jno
xchg
dec
dec
loop
xchg
cwde
or
jle
dec
xchg
cwde
je
sub
lods
or
call
add
fldcw
jnp
push
push
or
lods
out
dec
push
lods
test
sti
dec
out
dec
lahf
jp
pusha
jge
pop
test
idiv
(bad)
(bad)
dec
pusha
call
inc
lods
push
inc
popf
scas
repz
int3
dec
dec
dec
xchg
fcomp
in
int
jnp
lods
loop
test
(bad)
xchg
and
sbb
in
int
inc
jge
xchg
mul
pusha
cwde
or
sti
test
add
sbb
inc
(bad)
inc
sbb
sub
add
inc
test
repnz
xchg
jge
(bad)
in
pusha
fmulp
in
pusha
int3
js
les
(bad)
in
sti
dec
dec
lods
xor
add
stos
popf
dec
cmp
neg
inc
inc
aaa
ss
add
dec
add
inc
lods
not
mov
scas
mul
sbb
mov
loop
int3
or
int3
js
les
lods
xor
add
jno
dec
in
sti
imul
int3
(bad)
dec
in
sahf
mov
lods
xor
add
jno
dec
in
sti
not
push
in
sahf
mov
dec
inc
test
sti
dec
call
add
sahf
mov
and
dec
mov
dec
add
xchg
call
mov
jecxz
inc
(bad)
(bad)
in
lods
or
push
call
dec
push
imul
dec
add
repz
dec
add
aad
scas
scas
mov
add
scas
dec
xchg
or
push
dec
sti
scas
jecxz
dec
sti
dec
mov
lods
idiv
or
push
xchg
pop
mov
add
scas
or
or
sti
xchg
mov
ret
dec
sub
sar
(bad)
dec
aam
jp
(bad)
dec
popa
xchg
dec
js
jecxz
outs
scas
xchg
dec
mov
dec
js
or
and
ret
outs
popf
push
and
sbb
sbb
mov
xchg
add
dec
inc
scas
or
sti
fadd
jecxz
xchg
jmp
mov
ja
dec
pusha
call
lods
scas
or
sub
lods
mov
hlt
lahf
jp
push
lods
mov
test
test
test
dec
js
or
or
stos
outs
(bad)
xchg
outs
(bad)
loop
dec
cmp
jmp
xchg
lods
mov
sub
lahf
jecxz
sub
(bad)
in
popf
or
stos
outs
(bad)
jno
dec
cmp
dec
dec
jmp
sbb
(bad)
dec
jge
neg
les
popf
and
jp
int3
dec
dec
sti
lods
shr
hlt
and
call
imul
cmp
mov
les
lea
repnz
cmp
cmp
dec
add
scas
dec
dec
or
push
cmp
scas
jecxz
cmp
dec
cmp
cmp
scas
mov
mov
xchg
dec
push
dec
pop
mov
add
scas
dec
out
or
sti
dec
sahf
or
or
sti
jecxz
xchg
jmp
dec
mov
push
scas
sub
dec
int3
mul
(bad)
dec
scas
push
sbb
add
dec
sub
mov
jecxz
cmp
lods
sar
mov
jecxz
inc
mov
(bad)
fsubr
and
scas
outs
mov
dec
cmp
test
dec
popf
lods
sbb
mov
jecxz
rol
dec
inc
xchg
lods
mov
cmp
lahf
jecxz
cmp
xchg
dec
js
or
outs
popf
and
stos
dec
cmp
outs
(bad)
bound
ja
push
sar
add
sti
push
mov
xchg
lods
mov
sub
lahf
jecxz
sub
lods
mov
cmp
lahf
jecxz
cmp
xchg
dec
js
or
outs
popf
and
stos
dec
cmp
dec
aaa
mul
(bad)
dec
xchg
lods
sbb
dec
sub
lahf
jecxz
sub
lods
mov
cmp
lahf
jecxz
cmp
xchg
dec
js
or
jecxz
or
outs
popf
and
stos
dec
cmp
stos
dec
cmp
repz
dec
add
dec
sub
pop
lods
sar
mov
jecxz
cmp
lods
sar
mov
jecxz
inc
mov
(bad)
fsubr
and
scas
outs
mov
dec
cmp
not
mov
dec
xchg
lods
sbb
dec
sub
lahf
jecxz
sub
lods
mov
cmp
lahf
jecxz
cmp
xchg
dec
js
outs
popf
and
and
(bad)
bound
dec
add
jecxz
xchg
popf
push
cmp
mov
jecxz
inc
(bad)
lods
sar
mov
jecxz
cmp
xchg
dec
js
outs
(bad)
stos
stos
or
or
and
scas
outs
mov
dec
cmp
neg
(bad)
dec
xchg
lods
sbb
dec
cmp
lahf
jecxz
cmp
lods
mov
sub
lahf
jecxz
sub
xchg
dec
dec
lods
or
sti
jecxz
outs
popf
push
or
and
inc
(bad)
(bad)
jmp
dec
inc
(bad)
lahf
jecxz
inc
(bad)
lods
sar
mov
jecxz
cmp
xchg
dec
js
outs
(bad)
stos
stos
dec
cmp
bound
stos
dec
cmp
not
pop
(bad)
dec
xchg
lods
sbb
dec
cmp
lahf
jecxz
cmp
lods
mov
sub
lahf
jecxz
sub
xchg
dec
dec
sti
jecxz
jecxz
or
xchg
jecxz
or
and
scas
stos
outs
mov
dec
cmp
idiv
(bad)
dec
xchg
lods
sbb
dec
inc
(bad)
lahf
jecxz
inc
mov
inc
(bad)
lahf
jecxz
inc
(bad)
dec
js
xchg
popf
jecxz
dec
aaa
dec
mov
or
or
sti
outs
scas
xchg
cmovns
and
mov
or
mov
sbb
(bad)
(bad)
jge
int3
in
sahf
lods
add
lods
fwait
sbb
cmp
sti
dec
cmp
dec
lods
dec
mov
aaa
cmp
xchg
std
xchg
and
(bad)
push
int3
call
dec
sbb
mov
xchg
imul
lea
jecxz
cmp
dec
add
rcl
xchg
movs
in
in
pusha
mov
inc
lods
xchg
xchg
jmp
dec
scas
dec
mov
dec
dec
lods
xchg
std
xchg
push
ficomp
call
aad
neg
not
(bad)
call
in
idiv
in
sti
dec
mul
jp
add
test
add
scas
fwait
loope
(bad)
mov
add
add
(bad)
test
jmp
dec
pop
fwait
mov
mov
mov
frstor
dec
cmp
not
add
dec
lea
inc
in
sub
call
inc
(bad)
in
sti
outs
mov
add
mov
addr16
mov
mov
sbb
dec
add
ins
mov
stos
div
or
in
lea
xchg
mov
mov
add
clc
fmul
mov
outs
dec
(bad)
not
push
not
jae
add
add
mul
fmul
in
pop
xchg
lea
ret
rol
add
aad
cwde
and
add
add
xchg
test
add
mov
sbb
inc
and
outs
cmp
stos
dec
cmp
neg
and
(bad)
call
sbb
stos
xchg
(bad)
test
add
lods
add
fsub
mov
cmp
aaa
ss
add
add
lahf
jp
inc
aaa
cmp
mov
lea
or
mov
and
(bad)
jmp
add
sbb
cmp
dec
cmc
not
mov
(bad)
fadd
mov
xchg
int3
fsubr
mov
add
sti
div
jne
add
in
pusha
xchg
xchg
xchg
xchg
jmp
push
cmp
dec
mov
div
jecxz
add
cmp
xchg
imul
imul
mov
fstp
add
idiv
dec
add
imul
mov
cli
jp
add
mov
lahf
inc
dec
add
imul
les
add
add
adc
add
imul
js
cwde
adc
stos
not
dec
add
add
dec
add
mul
add
xchg
imul
dec
add
imul
(bad)
test
add
add
dec
add
and
std
test
add
inc
sub
add
sti
inc
div
and
inc
mul
and
inc
test
dec
add
stos
stos
idiv
js
les
mov
xchg
jmp
cmp
push
dec
call
(bad)
dec
test
imul
fisttp
imul
in
les
imul
scas
xchg
dec
jno
xchg
scas
dec
stos
xchg
jge
bound
pop
dec
dec
jmp
adc
pop
cli
dec
add
sahf
mov
or
jae
add
sti
lods
pusha
jecxz
jecxz
lahf
jp
pusha
lods
xor
push
cmp
add
xlat
add
cmp
outs
mov
call
lods
aaa
sti
dec
jnp
in
les
jmp
and
(bad)
in
imul
(bad)
dec
mov
cmp
dec
mul
xchg
dec
mov
outs
cmp
(bad)
jmp
addr16
mov
fisubr
mov
jmp
std
stos
xchg
dec
push
outs
js
test
add
lods
test
and
mov
mov
add
scas
push
cmp
cwde
and
mov
(bad)
push
mov
add
jmp
repz
repz
xchg
(bad)
dec
jmp
or
(bad)
jmp
xchg
(bad)
dec
jmp
dec
and
jmp
xchg
(bad)
(bad)
js
les
and
in
popf
lods
xor
add
cmp
cmp
stos
outs
cmp
stos
test
cmp
lods
sub
lods
les
in
inc
xchg
xchg
mov
ror
lods
fmulp
int
ror
pop
dec
dec
cmp
dec
retf
mov
(bad)
in
popf
outs
cmp
mov
imul
dec
add
rcr
cmp
pop
pop
pop
inc
in
neg
jp
dec
push
jnp
cwde
mov
jnp
repnz
and
das
push
dec
add
fidivr
mov
in
popf
outs
cmp
sti
cmp
fiadd
add
rcr
cmp
or
and
jge
pusha
add
pop
test
outs
stos
dec
jns
fmulp
imul
ror
bound
test
xchg
lahf
mov
hlt
loop
and
jge
int3
dec
dec
lea
shr
dec
add
mov
jecxz
push
(bad)
outs
mov
les
scas
push
out
scas
jp
push
dec
out
push
enter
add
mov
jecxz
pusha
(bad)
dec
xchg
dec
mov
pusha
movs
pop
jge
call
and
lods
push
enter
xchg
call
enter
sbb
fwait
inc
out
(bad)
mov
add
lods
xor
ss
aaa
imul
add
lods
xor
add
scas
in
pop
inc
jae
add
neg
(bad)
jmp
pusha
call
push
test
add
dec
lea
cmp
aaa
aaa
cmp
imul
add
aaa
cmp
jp
add
lods
rcl
cmp
mov
jecxz
push
(bad)
dec
stos
scas
dec
div
(bad)
jmp
pusha
call
dec
inc
cmp
xor
dec
outs
dec
cmp
sub
(bad)
inc
jp
lods
lods
xor
dec
outs
dec
fwait
idiv
add
inc
dec
call
dec
push
fadd
(bad)
(bad)
jns
div
dec
add
dec
fisubr
dec
sti
xchg
add
int3
js
les
lods
ret
add
sub
add
jmp
fst
dec
add
jmp
jl
sub
mov
jmp
sti
push
dec
add
test
popf
scas
sti
dec
loop
dec
(bad)
adc
and
xchg
or
mul
bound
sti
dec
(bad)
adc
js
les
inc
imul
cmp
dec
call
add
sahf
mov
shr
(bad)
mov
lods
mul
(bad)
dec
add
(bad)
mov
les
in
lods
(bad)
in
popf
(bad)
in
sti
mul
cmp
lods
sub
les
in
popf
xchg
dec
rcr
adc
sbb
psubq
pusha
in
mov
lods
in
mov
sbb
les
in
popf
idiv
inc
dec
add
mov
and
dec
les
in
popf
xchg
dec
rcr
adc
sbb
psubq
pusha
call
in
mov
sbb
les
in
sti
push
in
popf
call
or
xchg
stos
not
fmul
add
push
in
popf
in
jmp
sti
add
les
in
sti
idiv
fmul
mov
add
les
in
sti
push
in
popf
call
or
xchg
stos
imul
dec
add
mov
in
jmp
sti
add
les
in
sti
neg
loop
add
add
les
popf
or
sti
dec
dec
ud0
lods
(bad)
in
popf
(bad)
in
sti
jmp
add
les
sbb
add
add
js
les
and
pusha
xchg
stos
outs
cmp
cmp
stos
outs
cmp
stos
not
fimul
lods
sub
add
cld
(bad)
cwde
or
jmp
sahf
mov
cmp
sti
or
dec
movs
aad
scas
scas
mov
add
in
popf
call
adc
stos
dec
int3
test
(bad)
inc
mov
in
popf
in
jmp
sahf
lods
add
les
popf
or
sti
dec
dec
push
fisttp
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
jmp
add
(bad)
(bad)
in
popf
(bad)
in
sti
and
mov
sti
add
les
mov
xchg
jmp
cmp
lods
xor
stos
outs
cmp
outs
cmp
dec
add
dec
jns
lods
in
jecxz
cmp
adc
xchg
push
dec
add
sahf
popf
add
les
popf
cmp
dec
in
sti
or
push
mov
xchg
scas
mov
add
in
popf
call
in
lods
cwde
or
stos
cmp
sar
(bad)
inc
shl
in
repz
push
in
sbb
les
cmp
pop
dec
add
sti
dec
lea
sti
imul
neg
dec
call
add
add
int
(bad)
dec
int3
fadd
fwait
ss
dec
add
sti
fadd
dec
sbb
cmp
dec
add
pop
(bad)
div
(bad)
(bad)
jmp
fdecstp
dec
(bad)
(bad)
jmp
mov
pop
(bad)
(bad)
jmp
mov
adc
(bad)
(bad)
(bad)
in
popf
push
cmp
(bad)
xchg
test
dec
add
leave
push
dec
add
les
dec
add
sti
lods
xor
add
adc
sti
neg
fwait
ss
dec
add
sti
dec
aaa
cmp
mov
aad
add
outs
or
fadd
fmul
or
(bad)
fadd
fmul
or
idiv
(bad)
(bad)
fadd
fmul
or
not
adc
jmp
call
add
imul
sahf
mov
add
test
sti
in
inc
cwde
iret
pop
add
add
ret
cwde
and
fdecstp
jns
dec
add
mov
mov
mov
cmp
stos
dec
cmp
jmp
(bad)
call
jmp
stos
aaa
cmp
neg
test
jmp
pusha
stos
aaa
cmp
xchg
(bad)
aaa
jecxz
loopne
mov
dec
outs
into
sti
imul
dec
add
sti
xchg
xchg
in
call
cmp
jp
add
inc
cmp
lods
lods
xor
(bad)
(bad)
jmp
inc
dec
call
cmc
div
(bad)
(bad)
fdivr
test
dec
add
fsubr
mov
add
add
(bad)
neg
xor
add
sbb
sub
mov
neg
(bad)
dec
dec
cmp
neg
lea
inc
in
dec
and
call
in
sti
outs
cmp
(bad)
(bad)
mov
in
addr16
mov
mov
inc
ror
jae
ins
mov
stos
idiv
pop
dec
add
lea
xchg
mov
mov
add
mov
lods
dec
jmp
outs
dec
(bad)
test
dec
add
test
dec
add
fadd
fwait
sbb
mov
add
sti
dec
call
add
in
popf
outs
or
(bad)
mov
dec
not
sti
add
dec
(bad)
out
mov
add
inc
fadd
fmul
or
(bad)
mov
dec
in
pop
ror
js
les
inc
aaa
ss
out
mov
inc
dec
call
add
sahf
mov
(bad)
in
sti
dec
inc
div
add
add
ss
out
mov
sahf
mov
dec
inc
mul
(bad)
(bad)
inc
dec
call
add
sahf
mov
dec
(bad)
mov
add
xchg
lea
sti
xchg
mul
xor
add
or
(bad)
mov
dec
mul
dec
add
les
jae
loop
mov
add
stos
xchg
les
jl
mov
stos
outs
iret
sub
add
add
add
add
dec
cmp
lods
xlat
adc
popf
dec
dec
cwde
iret
int3
add
add
pop
or
cmp
idiv
(bad)
call
outs
jb
or
jmp
sub
stos
outs
cmp
lods
stos
xchg
pop
add
add
mov
(bad)
push
cmp
popf
(bad)
out
mov
mov
stos
lahf
xor
int3
call
outs
jb
or
jmp
sub
stos
outs
cmp
lods
stos
aaa
iret
sub
add
dec
add
add
dec
test
push
cmp
popf
(bad)
out
mov
mov
lahf
ja
xor
sub
mul
cmp
pop
stos
outs
cmp
(bad)
stos
xchg
pop
add
add
xchg
test
push
cmp
stos
(bad)
out
mov
mov
lahf
iret
dec
daa
sub
add
add
jg
add
add
sahf
sti
add
les
dec
dec
inc
fadd
outs
dec
jmp
cs
dec
add
(bad)
lods
mov
xchg
outs
dec
jmp
call
test
add
dec
add
imul
(bad)
dec
int3
and
pop
dec
cmp
in
test
aaa
mov
dec
jp
add
mov
add
add
xor
test
(bad)
fadd
not
dec
add
dec
(bad)
not
in
pusha
in
mov
pop
mov
dec
dec
inc
test
sti
dec
call
add
sahf
mov
add
inc
add
dec
dec
inc
dec
jmp
add
dec
push
sbb
in
(bad)
dec
dec
in
dec
inc
out
(bad)
sti
dec
inc
(bad)
outs
and
lods
cwde
or
int3
js
les
lods
xor
add
dec
rol
cmp
sbb
dec
dec
mov
lods
or
cli
out
dec
mov
inc
ror
lods
mov
(bad)
out
dec
push
(bad)
in
popf
cmp
in
(bad)
dec
out
cmps
out
dec
mov
dec
in
jmp
in
lods
outs
popf
inc
lods
sbb
mov
mov
scas
cwde
or
(bad)
inc
add
add
jmp
dec
lods
lods
mov
in
dec
cmp
jge
sahf
popf
add
les
lods
xor
add
dec
rol
cmp
sbb
dec
dec
mov
lods
or
cli
dec
lahf
jp
mul
test
dec
inc
mov
cmp
(bad)
out
dec
push
idiv
mov
cmps
out
dec
mov
dec
in
jmp
in
popf
outs
popf
inc
lods
sbb
ins
cwde
or
dec
adc
(bad)
pop
(bad)
inc
add
inc
inc
(bad)
cmp
dec
lods
mov
in
dec
cmp
jge
sahf
sti
add
les
dec
xchg
dec
rcr
outs
dec
jmp
push
mov
dec
mov
and
test
rol
(bad)
jnp
addr16
jnp
outs
dec
jmp
jnp
stos
mov
jge
push
in
int3
aaa
dec
stos
add
int3
dec
test
neg
(bad)
jmp
pusha
call
xchg
jmp
js
les
inc
imul
(bad)
(bad)
inc
dec
call
add
sahf
mov
or
(bad)
mov
fmul
out
(bad)
(bad)
jmp
(bad)
in
push
mov
js
les
jno
outs
inc
(bad)
dec
shr
dec
push
(bad)
aaa
cmp
out
(bad)
mov
loopne
mov
add
dec
mov
cmps
loop
add
sahf
mov
faddp
aaa
cmp
jmp
loopne
mov
dec
or
dec
dec
jmp
jecxz
pop
add
mov
jmp
int3
fdivr
fwait
popf
jecxz
mov
add
xor
add
(bad)
and
call
ud0
push
cmp
dec
idiv
(bad)
(bad)
call
jmp
dec
dec
les
neg
stos
lods
iret
pusha
call
mov
xchg
dec
mov
xchg
dec
mov
xchg
outs
scas
(bad)
outs
cmp
jmp
dec
lea
neg
stos
lods
mul
dec
lods
mov
pusha
in
mov
add
lods
pop
xchg
sti
mov
jecxz
rol
dec
fisubr
inc
(bad)
mov
add
push
int3
dec
lods
mov
pusha
call
loope
dec
add
(bad)
or
(bad)
jnp
addr16
fmulp
dec
lods
mov
pusha
in
mov
add
lods
pop
xchg
sti
mov
jecxz
rol
dec
fisubr
inc
(bad)
mov
add
(bad)
int3
cmp
dec
inc
lods
rcl
mov
jecxz
inc
(bad)
dec
or
add
add
jge
pop
int3
lods
sub
and
and
call
(bad)
lods
(bad)
ds
dec
sti
lahf
jp
xchg
push
add
hlt
lods
(bad)
ds
add
scas
outs
(bad)
rcr
fiadd
imul
dec
add
dec
aaa
int3
cmp
dec
inc
lods
rcl
mov
jecxz
in
neg
(bad)
dec
jge
pop
int3
js
les
sti
cmp
xchg
outs
cmp
div
(bad)
dec
dec
faddp
xchg
dec
dec
sti
xchg
mov
cmp
not
(bad)
dec
dec
faddp
xchg
xchg
jmp
pop
lahf
and
in
mov
call
dec
enter
dec
jmp
pop
stc
or
test
jmp
lea
mov
dec
pusha
call
test
ss
loopne
mov
neg
stos
lods
iret
pusha
call
int3
aaa
dec
pop
loopne
mov
inc
cmp
dec
dec
dec
inc
aaa
ss
loopne
mov
sbb
add
sahf
mov
pop
loopne
mov
sub
dec
dec
jmp
jecxz
pop
add
js
les
inc
xchg
dec
mov
loopne
mov
or
and
call
dec
mov
xchg
dec
mov
xchg
dec
mov
xchg
jge
push
in
sahf
mov
mov
mov
inc
and
mov
call
int3
das
cmp
sbb
pop
(bad)
jecxz
aaa
dec
lods
out
mov
add
les
inc
aaa
lods
out
mov
add
dec
call
add
sahf
mov
mov
jae
mov
mov
fimul
dec
cmp
xchg
dec
cmp
lods
out
mov
sti
add
dec
xchg
add
repz
dec
add
js
les
in
sti
dec
inc
imul
ss
add
dec
push
in
sahf
mov
dec
inc
aaa
ss
add
not
cmp
dec
call
add
sahf
mov
(bad)
in
sti
dec
inc
neg
add
add
ss
add
dec
push
in
sahf
mov
(bad)
mov
add
les
in
sti
dec
inc
idiv
add
aaa
ss
add
dec
push
in
sahf
mov
dec
(bad)
mov
add
xchg
lea
sti
xchg
idiv
xor
add
or
(bad)
mov
dec
imul
dec
add
fwait
push
dec
(bad)
mov
add
xchg
(bad)
test
dec
add
in
sti
outs
or
(bad)
mov
dec
div
mov
dec
inc
imul
cmp
dec
call
add
sahf
mov
add
dec
outs
or
(bad)
mov
dec
in
or
dec
les
inc
aaa
ss
add
test
(bad)
inc
dec
call
add
sahf
mov
ds
dec
loop
int3
outs
loop
int3
js
les
in
sti
dec
inc
test
(bad)
push
ss
add
dec
push
in
sahf
mov
cwde
or
push
mov
repnz
loop
push
in
inc
in
pusha
in
cwde
or
sbb
in
pusha
lods
and
scas
push
mov
xchg
call
neg
dec
pusha
call
pop
(bad)
(bad)
jge
js
les
pop
lods
pop
xchg
lods
mov
jecxz
pusha
(bad)
shr
pop
xchg
lods
mov
jecxz
pusha
(bad)
(bad)
in
sti
cwde
loope
pavgw
imul
jns
add
mov
xchg
dec
scas
push
int3
pop
mov
add
pop
inc
or
dec
pop
scas
fadd
jecxz
dec
dec
sbb
push
imul
xchg
jns
sti
dec
cli
scas
cmp
aaa
not
(bad)
(bad)
dec
sbb
xchg
pop
(bad)
jmp
dec
aaa
sbb
fwait
ins
or
js
add
mov
jecxz
loop
dec
push
scas
outs
popf
rol
cmp
mov
dec
les
jp
add
pusha
in
xor
pusha
mov
mov
test
jmp
imul
dec
cmp
add
fcomp
fwait
stos
loop
mov
add
in
popf
lods
xor
idiv
pop
(bad)
dec
dec
cmp
(bad)
fadd
div
dec
sti
stos
not
fmul
dec
cmp
imul
lock
add
fcomp
fwait
xchg
mov
add
in
popf
lods
xor
idiv
jl
dec
dec
dec
lods
lods
xor
add
dec
jns
loop
pusha
in
ror
(bad)
in
lods
dec
push
not
sti
add
dec
dec
sti
stos
imul
add
dec
outs
dec
cmp
jb
(bad)
dec
sti
test
dec
add
fcomp
fwait
xchg
mov
add
in
popf
lods
xor
neg
jl
dec
dec
cmp
(bad)
fadd
idiv
dec
sti
stos
mul
add
dec
outs
dec
cmp
dec
fs
dec
sti
not
dec
add
js
les
and
xchg
lods
xchg
mov
jecxz
in
outs
mov
add
dec
dec
mov
xchg
dec
dec
jmp
xchg
(bad)
pop
test
and
xchg
lods
xchg
mov
jecxz
inc
(bad)
dec
in
jecxz
outs
mov
add
dec
dec
mov
xchg
dec
dec
jmp
xchg
(bad)
pop
test
jmp
pop
and
mov
add
lods
pop
xchg
lods
mov
jecxz
rol
dec
fisubr
(bad)
mov
add
inc
(bad)
int3
dec
lods
mov
pusha
in
mov
add
lods
pop
xchg
lods
mov
jecxz
rol
dec
fisubr
(bad)
mov
add
(bad)
int3
js
les
fnstcw
mov
cmp
xor
mov
jecxz
loop
dec
push
scas
outs
popf
rol
cmp
(bad)
movd
sub
xchg
xor
call
xor
pusha
cwde
and
dec
add
sbb
js
les
lods
les
push
call
lahf
push
xchg
cwde
or
fmul
jne
push
sbb
or
or
sbb
in
mov
sti
dec
add
mul
add
push
cmp
add
mov
in
mov
add
mov
jecxz
jnp
in
int3
js
les
lods
les
(bad)
xchg
push
call
repz
add
pop
xchg
les
aad
retf
jne
push
sbb
or
fmul
mov
sti
dec
add
les
add
sbb
aaa
cmp
dec
add
add
and
dec
add
or
dec
dec
lea
(bad)
aam
call
or
sbb
(bad)
push
enter
dec
lahf
jp
pusha
dec
in
sti
jnp
pop
add
xchg
sub
js
dec
in
(bad)
aam
call
jmp
lods
test
pop
(bad)
adc
pusha
dec
dec
sti
xchg
pop
neg
fwait
lea
(bad)
mov
add
lods
inc
popf
test
(bad)
in
test
cwde
sar
add
cwde
or
sub
dec
add
sub
dec
add
dec
sub
lods
pusha
cmc
add
outs
in
add
add
jmp
mul
xchg
dec
test
cwde
lahf
(bad)
dec
pusha
call
add
jns
outs
dec
add
add
(bad)
(bad)
jns
repz
add
outs
cmp
stos
idiv
icebp
(bad)
dec
mov
dec
call
call
jmp
dec
cmp
xchg
xchg
and
iret
fwait
add
add
jmp
cmp
pminsw
dec
or
add
add
dec
call
jmp
outs
cmp
imul
jmp
popf
test
sub
scas
mov
add
dec
outs
dec
cmp
pusha
aas
(bad)
jmp
add
aad
(bad)
call
add
jns
enter
lods
dec
add
jecxz
add
iret
pusha
call
dec
inc
popf
adc
in
inc
aad
sti
call
dec
int
push
xchg
scas
jecxz
cmp
cwde
adc
int
cmp
imul
repz
(bad)
jns
sar
enter
test
popf
push
inc
sti
scas
adc
fmul
dec
cmp
cmp
(bad)
push
(bad)
dec
imul
add
add
dec
outs
dec
cmp
test
(bad)
push
inc
test
push
dec
add
fdiv
fwait
lea
(bad)
mov
add
lods
inc
xchg
test
lods
in
inc
dec
inc
xchg
aad
scas
cwde
shl
add
cwde
or
sub
dec
add
sub
dec
add
dec
sub
out
jbe
dec
xchg
(bad)
lods
inc
xchg
test
add
loop
(bad)
inc
cmps
dec
add
dec
test
and
(bad)
dec
pusha
call
add
jns
outs
dec
add
or
(bad)
(bad)
jns
repz
add
outs
cmp
stos
neg
std
(bad)
dec
mov
dec
call
call
jmp
dec
cmp
xchg
xchg
and
iret
fwait
add
add
jmp
cmp
xchg
idiv
dec
or
add
add
dec
call
jmp
outs
cmp
not
dec
sub
enter
scas
mov
add
dec
outs
dec
cmp
inc
leave
(bad)
jmp
add
je
(bad)
call
add
jns
enter
lods
dec
int3
not
add
iret
pusha
call
dec
inc
xchg
adc
in
inc
aad
scas
call
dec
int
push
xchg
scas
jecxz
cmp
cwde
adc
int
cmp
neg
idiv
(bad)
jns
sar
enter
test
xchg
push
inc
scas
scas
adc
fmul
dec
cmp
test
dec
test
add
fadd
fmul
dec
cmp
neg
inc
test
push
dec
add
js
les
cmp
pop
dec
xchg
or
jbe
add
sbb
jp
jecxz
pop
inc
cwde
or
dec
and
shl
add
outs
pop
cmc
cwde
or
xchg
mov
sub
lods
aam
scas
inc
sub
iret
pop
in
jo
or
jmp
(bad)
inc
add
ret
push
ds
loop
mov
inc
add
sbb
mov
jge
pop
test
imul
pusha
call
inc
popf
push
inc
sti
scas
repz
int3
js
les
dec
lea
ret
add
popf
jbe
jbe
pop
hlt
test
jbe
pop
lods
xor
add
dec
add
add
jmp
add
sbb
inc
popf
shl
inc
idiv
rcl
popf
cwde
or
or
lods
imul
jbe
xchg
(bad)
(bad)
in
lea
sti
and
sub
dec
add
les
jne
lods
inc
aam
(bad)
dec
cmp
aam
mov
(bad)
in
mov
sbb
(bad)
in
lea
dec
add
dec
popf
mov
mov
jo
dec
lods
dec
sbb
test
cmp
push
fadd
ds
pop
(bad)
push
sbb
popa
dec
inc
lods
dec
cmp
dec
ss
cmp
hlt
inc
(bad)
adc
pusha
jge
pop
test
push
neg
(bad)
(bad)
dec
pusha
call
inc
xchg
push
inc
scas
scas
repz
pusha
mov
and
and
call
(bad)
lods
(bad)
jp
xchg
push
add
lods
lods
(bad)
or
inc
mov
add
dec
aaa
int3
js
les
cmp
sbb
mov
push
cmp
scas
mov
add
scas
or
sti
push
int3
scas
mov
popf
lods
xchg
dec
sbb
scas
outs
popf
xchg
push
xchg
scas
mov
add
pop
inc
mov
inc
scas
jecxz
fadd
stos
dec
call
es
dec
pusha
call
mov
jecxz
aaa
(bad)
dec
inc
xchg
lods
mov
dec
(bad)
lahf
jecxz
dec
(bad)
(bad)
in
popf
dec
or
ret
xchg
stos
jecxz
and
movs
push
jmp
jmp
call
(bad)
jge
push
pop
neg
les
sbb
sti
dec
lea
jbe
dec
pusha
call
mov
jecxz
inc
(bad)
or
cmp
dec
push
mul
jge
xchg
dec
sbb
scas
outs
popf
xchg
push
xchg
scas
mov
add
pop
inc
fimul
scas
fadd
jecxz
xchg
dec
call
dec
pusha
call
lods
mov
jecxz
dec
(bad)
dec
or
or
stos
jecxz
and
pop
push
jmp
call
dec
jge
pop
sbb
lea
div
aaa
ss
(bad)
mov
add
fmul
rol
(bad)
fwait
sub
(bad)
mov
add
(bad)
outs
pop
(bad)
test
neg
dec
call
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
dec
aaa
neg
dec
dec
lea
mov
idiv
dec
add
fwait
pop
loop
mov
add
sti
dec
jnp
fwait
push
jmp
pop
xor
push
push
jmp
or
jmp
(bad)
imul
(bad)
jmp
(bad)
idiv
or
add
add
cdq
idiv
jmp
pop
add
add
shr
fadd
push
cmp
outs
or
ins
mov
add
xchg
lahf
jp
pusha
xchg
lods
sbb
lods
sub
add
not
push
dec
neg
sub
sahf
mov
fadd
inc
cmp
or
add
add
jbe
(bad)
jmp
xchg
add
add
call
inc
test
add
or
add
neg
(bad)
(bad)
fadd
cmp
and
add
add
mov
(bad)
(bad)
fadd
cmp
pop
(bad)
idiv
(bad)
(bad)
fadd
cmp
pop
(bad)
test
(bad)
(bad)
fadd
cmp
pop
or
(bad)
fadd
cmp
pop
xor
ret
mov
cmp
jnp
(bad)
mov
int3
dec
dec
jnp
sbb
jmp
xor
push
add
jmp
or
dec
in
dec
fadd
fmul
pop
or
(bad)
fadd
fmul
pop
xor
jmp
(bad)
(bad)
fadd
fmul
jnp
inc
adc
jmp
int3
dec
dec
(bad)
imul
add
inc
clc
out
dec
add
les
lods
or
popf
fadd
jbe
jnp
aad
sti
mov
add
sti
xchg
jecxz
popf
sbb
les
xchg
dec
mov
imul
(bad)
in
inc
lahf
jg
mov
or
fadd
jbe
jnp
dec
lea
lods
dec
int3
or
fadd
jbe
jnp
push
push
scas
lods
(bad)
in
sti
fmul
imul
mov
lahf
xor
mov
out
pop
add
(bad)
in
mov
in
mov
in
sti
stos
dec
aaa
div
in
neg
les
lods
or
popf
pop
(bad)
dec
add
jbe
rcl
sti
mov
add
sti
push
pusha
(bad)
dec
add
jecxz
popf
sbb
les
xchg
dec
mov
(bad)
dec
add
and
in
mov
jg
mov
or
jbe
xchg
jnp
xchg
mov
int3
or
jbe
test
cmp
sti
fmul
test
add
xchg
in
mov
in
add
(bad)
in
mov
in
mov
in
sti
stos
dec
aaa
test
add
pop
neg
popf
and
hlt
inc
imul
inc
popf
test
dec
add
popf
add
sub
add
dec
inc
lods
or
popf
dec
mov
mov
add
sti
dec
and
sahf
mov
or
and
in
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
dec
sbb
mov
(bad)
in
sti
fmul
not
mov
lods
lahf
addr16
sbb
imul
dec
add
xchg
stos
(bad)
in
sti
outs
cmp
mov
neg
fwait
jae
(bad)
mov
add
sti
fadd
imul
in
neg
dec
call
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
dec
push
mul
ror
sahf
mov
or
and
in
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
dec
sbb
jp
cmc
scas
popf
dec
jecxz
mov
shr
not
dec
dec
ss
stos
cmp
cmp
jle
add
jge
int3
fdivr
fwait
aas
jb
mov
add
sti
lods
xor
das
(bad)
mov
retf
aaa
inc
mov
(bad)
mov
outs
rcr
dec
add
add
out
add
dec
inc
sti
dec
faddp
aaa
cmp
sti
out
(bad)
mov
(bad)
aaa
(bad)
ss
cmp
mov
dec
faddp
fsub
xchg
aaa
(bad)
ss
das
(bad)
mov
dec
not
mov
add
fwait
gs
mov
add
push
dec
faddp
aaa
cmp
push
push
das
(bad)
mov
outs
jno
dec
call
dec
div
add
add
adc
loop
dec
faddp
aaa
cmp
mov
das
(bad)
mov
faddp
aaa
cmp
jmp
loopne
mov
faddp
aaa
cmp
mov
retf
int3
or
aam
in
test
add
or
add
and
call
push
add
or
call
outs
pop
(bad)
not
mov
call
add
int3
cmp
dec
shr
or
xchg
call
(bad)
and
(bad)
(bad)
call
dec
outs
pop
(bad)
not
(bad)
call
mov
lahf
jg
xchg
call
mov
add
dec
aaa
jge
int3
or
aad
call
(bad)
int3
push
add
int3
or
add
and
call
push
add
or
add
stos
mul
add
push
ss
or
add
int3
js
les
jno
dec
push
idiv
(bad)
inc
dec
call
add
sahf
mov
xchg
outs
stc
mov
pop
popf
dec
call
dec
ss
(bad)
mov
add
dec
mov
rdmsr
dec
add
sbb
les
xchg
dec
mov
mov
or
fadd
jbe
jnp
and
mov
pop
outs
in
mov
add
lods
and
mov
mov
add
scas
or
jmp
(bad)
jbe
jnp
xchg
jmp
in
scas
dec
sbb
in
lods
(bad)
in
popf
idiv
add
dec
jge
outs
in
(bad)
idiv
mov
dec
retf
mov
(bad)
in
xor
ja
dec
add
test
jecxz
push
jno
pop
pop
and
call
cwde
lahf
mov
popf
scas
mov
add
sti
jge
(bad)
(bad)
in
xchg
pop
neg
lea
jecxz
mov
add
not
mov
(bad)
jecxz
xchg
xchg
scas
adc
inc
popf
and
hlt
inc
neg
inc
popf
div
dec
add
lods
sub
js
les
xchg
in
pusha
outs
mov
jmp
in
popf
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
neg
sub
add
popf
xchg
lods
sub
sahf
popf
add
les
xchg
dec
mov
mov
or
jbe
(bad)
dec
add
jnp
and
mov
jo
in
mov
add
lods
and
mov
mov
add
scas
or
jmp
(bad)
dec
add
jbe
rol
dec
sbb
in
lods
(bad)
in
popf
test
add
popf
outs
in
(bad)
div
jg
add
lea
mov
retf
mov
(bad)
in
mov
jns
dec
add
test
dec
add
jecxz
push
jno
pop
pop
and
call
cwde
lahf
std
in
call
pop
popf
scas
mov
add
sti
jge
(bad)
(bad)
in
xchg
pop
neg
lea
add
div
add
dec
call
add
inc
(bad)
dec
add
jecxz
xchg
xchg
scas
adc
inc
popf
and
hlt
inc
div
inc
popf
test
mov
lods
sub
js
les
and
jmp
(bad)
in
jmp
in
popf
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
not
dec
add
dec
cmp
add
lods
sub
sahf
popf
add
les
dec
lea
lods
xchg
dec
rcr
dec
and
(bad)
(bad)
in
(bad)
in
pop
lahf
dec
push
mov
dec
dec
add
ss
div
sbb
mov
in
lods
(bad)
in
popf
dec
mul
rcr
idiv
inc
xchg
mov
inc
in
out
pop
dec
dec
add
pusha
dec
nop
mov
lods
pop
pop
and
dec
inc
lahf
ss
ss
jmp
mov
add
sti
dec
dec
mov
in
sti
pop
neg
les
and
jmp
(bad)
in
jmp
in
popf
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
test
add
dec
cmp
and
neg
les
dec
push
and
inc
hlt
xchg
dec
mov
or
and
pop
inc
jge
(bad)
mov
sahf
mov
jb
mov
add
sti
lods
xor
faddp
(bad)
in
popf
aaa
(bad)
ss
(bad)
mov
mov
call
dec
test
dec
add
les
neg
aaa
(bad)
push
mov
sbb
add
add
test
dec
add
sti
dec
inc
dec
or
(bad)
inc
jmp
imul
(bad)
in
pop
lahf
jg
inc
scas
or
fadd
jbe
jnp
dec
fimul
lods
dec
aaa
or
fadd
jbe
jnp
pop
int3
out
popf
jecxz
push
or
lods
fisttp
mov
add
dec
push
mov
add
push
test
add
jp
ficomp
mov
add
ret
jp
add
dec
cmp
jbe
jnp
inc
out
(bad)
(bad)
jmp
inc
lods
xor
add
dec
xchg
xor
(bad)
inc
inc
stos
mul
jmp
dec
popf
xchg
(bad)
in
lods
aaa
and
dec
add
test
(bad)
(bad)
(bad)
dec
lods
fiadd
stos
inc
aaa
and
(bad)
jp
add
mul
or
dec
fadd
jbe
jnp
dec
mov
pop
inc
dec
dec
neg
inc
popf
idiv
sub
add
(bad)
inc
(bad)
jecxz
jecxz
xchg
scas
xchg
lods
xchg
repz
add
dec
adc
(bad)
(bad)
(bad)
dec
xor
(bad)
inc
and
mov
(bad)
(bad)
in
inc
aad
pop
(bad)
(bad)
inc
push
dec
and
(bad)
(bad)
jmp
dec
xchg
jecxz
xor
(bad)
inc
xor
(bad)
jmp
div
test
(bad)
inc
xor
(bad)
push
(bad)
sub
add
push
dec
add
or
lods
fadd
jbe
jnp
dec
outs
out
(bad)
(bad)
jmp
lock
add
mov
test
add
fdivr
xchg
jmp
dec
lods
outs
loop
stos
inc
not
hlt
add
push
cmp
jecxz
or
dec
or
lods
fadd
jge
jnp
in
int
or
mov
dec
ret
xchg
jmp
shr
dec
in
lods
lahf
sti
imul
push
add
lods
push
(bad)
outs
mov
inc
repz
and
(bad)
(bad)
dec
lods
lods
pusha
(bad)
stos
dec
cmp
mov
(bad)
fadd
fadd
repz
(bad)
(bad)
jmp
or
div
add
aaa
cmp
mov
shr
add
outs
lods
add
xchg
dec
cmp
call
int3
call
jmp
dec
out
(bad)
(bad)
jmp
xchg
dec
ret
push
add
push
data16
(bad)
(bad)
(bad)
in
icebp
dec
cmp
push
int3
call
push
test
push
(bad)
push
movs
in
outs
sub
scas
sar
push
jp
dec
add
les
pop
sub
(bad)
and
cs
dec
add
(bad)
in
int
inc
lods
mov
add
mov
inc
outs
(bad)
push
addr16
cmp
dec
add
js
les
test
call
add
mov
sbb
jp
add
not
inc
dec
add
sti
dec
ror
xchg
add
cmp
dec
add
and
in
(bad)
in
pop
lahf
popf
dec
mov
or
jbe
xchg
jnp
dec
fimul
lods
or
jbe
call
cwde
jmp
dec
push
or
lods
fisttp
mov
add
dec
push
mov
add
push
test
add
jp
ficomp
mov
add
fstp
add
dec
lods
or
popf
dec
call
add
mov
jmp
inc
lods
xor
add
dec
xchg
add
(bad)
dec
add
jecxz
cmc
mov
jmp
(bad)
inc
cmc
mov
dec
popf
(bad)
in
lods
aaa
and
add
add
int
add
dec
and
mov
dec
lods
fiadd
pusha
(bad)
dec
add
jecxz
cmc
mov
push
and
add
add
xchg
ins
add
dec
cli
popf
dec
mov
or
jbe
test
inc
and
call
not
(bad)
(bad)
call
popf
idiv
dec
add
(bad)
inc
pop
(bad)
dec
add
push
inc
(bad)
dec
add
jecxz
jecxz
xchg
xchg
lods
xchg
add
lods
sub
rcr
outs
add
cmc
mov
inc
test
xchg
and
inc
test
(bad)
in
inc
aad
xchg
mov
inc
sub
and
mov
jmp
dec
push
pusha
(bad)
dec
add
jecxz
cmc
mov
inc
test
outs
cmc
mov
jmp
idiv
test
(bad)
inc
cmc
mov
push
sbb
mov
or
lods
or
lods
dec
call
cmp
dec
cwde
lods
xchg
add
add
and
mov
xchg
jmp
dec
lods
outs
xchg
(bad)
dec
add
stos
call
lods
div
add
push
cmp
jecxz
mov
or
lods
outs
outs
and
call
loop
xchg
and
pop
lods
imul
sbb
dec
pop
lods
dec
jmp
test
dec
lods
xchg
cmp
call
push
mov
test
sub
mov
(bad)
in
lahf
outs
sub
test
push
sub
add
dec
and
mov
dec
lods
mov
stos
dec
cmp
neg
(bad)
(bad)
fadd
fadd
repz
and
mov
jmp
add
cmp
mov
jge
cmp
dec
jmp
(bad)
(bad)
cmp
outs
cmp
retf
add
cmp
in
lods
xchg
mov
push
fidivr
add
lods
mov
dec
add
xchg
mov
dec
push
dec
call
push
cmc
ins
add
jecxz
push
sub
mov
(bad)
in
lahf
outs
sub
mov
push
inc
inc
(bad)
push
mov
add
les
pop
hlt
in
test
add
test
int3
lods
xchg
(bad)
in
int
inc
pop
(bad)
dec
add
scas
nop
fadd
outs
dec
mov
test
pop
addr16
cmp
dec
add
js
les
cmp
call
mov
(bad)
(bad)
inc
out
imul
push
fldcw
jmp
push
cmp
in
mul
sbb
fwait
mov
(bad)
mov
add
sti
dec
cmp
and
in
(bad)
in
call
or
dec
jmp
dec
or
mov
(bad)
jmp
test
dec
scas
mov
add
dec
push
test
add
push
test
call
test
sbb
or
dec
in
scas
or
popf
(bad)
in
popf
lods
xor
add
test
mov
and
div
js
(bad)
(bad)
(bad)
in
sti
dec
sub
cmp
dec
add
add
pop
popf
add
dec
dec
scas
inc
dec
pushf
mov
cmp
jp
add
dec
jmp
add
dec
sub
or
dec
test
cwde
and
add
(bad)
(bad)
jmp
dec
add
mov
pushf
mov
scas
xchg
repz
dec
add
lods
mov
dec
dec
test
dec
xlat
mov
push
inc
aad
(bad)
cmp
outs
ror
xlat
mov
and
neg
(bad)
(bad)
(bad)
in
sti
neg
dec
not
dec
scas
dec
mov
lods
ror
xchg
add
add
xchg
mul
jp
add
jp
xchg
jmp
dec
scas
outs
loop
stos
jmp
add
push
cmp
jecxz
inc
lods
outs
dec
xchg
and
or
scas
in
int
shl
test
inc
lods
(bad)
lods
dec
cmp
outs
sbb
add
inc
(bad)
in
add
dec
fisubr
cmp
popf
test
(bad)
fadd
fadd
repz
(bad)
jmp
pop
imul
dec
add
aaa
cmp
mov
scas
lods
dec
outs
shl
dec
sbb
lea
add
(bad)
in
scas
xchg
dec
call
repnz
dec
cmp
and
pop
not
sbb
add
add
(bad)
(bad)
(bad)
in
push
div
test
add
les
pop
sub
mov
dec
add
(bad)
in
int
inc
lods
mov
add
mov
mov
pop
addr16
cmp
dec
add
fdivr
fwait
and
dec
add
mov
add
inc
call
xor
call
dec
idiv
mov
dec
(bad)
mov
add
dec
mov
idiv
(bad)
jmp
inc
xor
mov
(bad)
jmp
pop
or
mul
(bad)
dec
mul
aad
add
fwait
sbb
mov
add
sti
cmp
jnp
add
jmp
outs
inc
xor
sbb
or
push
cmp
dec
not
jmp
(bad)
stos
outs
pop
(bad)
push
cmp
jp
push
(bad)
jmp
bound
cmp
jecxz
daa
xchg
(bad)
jmp
daa
add
add
add
push
cmp
(bad)
test
pop
add
add
add
push
cmp
mov
call
jmp
dec
lods
add
add
add
xchg
add
add
add
stos
div
add
outs
lods
and
add
stos
outs
or
add
add
jmp
imul
(bad)
dec
jmp
add
xchg
jmp
add
jns
add
add
rol
dec
add
dec
aaa
imul
mov
outs
mov
stos
outs
inc
(bad)
stos
div
add
jns
xor
inc
xor
ins
rol
dec
push
mov
icebp
cmp
mov
add
(bad)
idiv
mov
dec
mov
push
int3
call
pusha
xchg
in
popf
dec
inc
lods
or
popf
fadd
jbe
jnp
xchg
xchg
xchg
push
int3
call
aam
call
in
dec
test
div
fld
add
dec
jge
outs
in
and
jle
add
dec
in
sti
dec
or
popf
cmp
in
popf
(bad)
in
sti
and
in
les
std
not
and
add
lods
dec
test
neg
sti
add
sti
div
pop
cmp
mul
mov
add
fsubr
mov
add
(bad)
mul
mov
push
int3
call
pusha
xchg
in
popf
dec
inc
lods
or
popf
pop
(bad)
dec
add
jbe
rol
xchg
push
int3
call
aam
call
in
dec
test
div
dec
add
add
popf
outs
in
and
fadd
add
dec
in
sti
dec
or
popf
cmp
in
popf
(bad)
in
sti
and
in
les
std
idiv
add
lods
sub
aaa
div
or
sahf
sti
add
sti
neg
test
cmp
mul
dec
add
lods
pop
add
call
pop
mov
mov
add
xchg
xchg
(bad)
dec
push
int3
fdiv
fwait
sbb
and
dec
add
sti
dec
cmp
les
dec
jns
fmulp
int
ror
fimul
dec
faddp
dec
cmp
repnz
int3
shl
lahf
jecxz
in
imul
fisubr
add
mov
cmp
mov
dec
add
dec
mov
aaa
outs
in
std
test
cmp
jp
sub
outs
dec
std
dec
lea
jmp
div
movs
(bad)
dec
dec
faddp
dec
cmp
add
lods
mov
mov
dec
mov
aaa
cwde
or
dec
xchg
mul
add
cwde
or
(bad)
inc
add
lods
dec
(bad)
(bad)
lods
mov
and
rcr
cmp
and
in
and
dec
call
or
dec
mov
jb
pop
div
add
inc
add
aaa
cmp
mov
cmp
neg
add
pop
dec
mov
aaa
cwde
or
dec
xchg
imul
test
add
inc
add
lods
dec
(bad)
(bad)
dec
mov
aaa
lods
cs
add
in
dec
lahf
loope
dec
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
imul
sub
mov
dec
mov
sbb
call
div
dec
jmp
outs
cmp
stos
not
add
dec
aaa
div
dec
add
fadd
fwait
or
cmp
dec
add
xchg
lea
sti
xchg
mul
jmp
lods
mul
dec
add
cmp
dec
and
repnz
cli
xor
add
inc
xor
not
dec
sahf
mov
dec
(bad)
mov
add
sti
idiv
xor
add
lods
div
mov
cmp
dec
and
call
lahf
jp
pusha
xchg
dec
push
test
add
add
test
dec
add
sti
lods
xor
add
xor
call
mov
xchg
dec
add
not
cmp
add
fwait
fwait
pop
(bad)
mov
add
in
sti
outs
dec
cmp
dec
(bad)
(bad)
dec
lods
xor
add
sbb
or
(bad)
jmp
xor
xor
xchg
call
mov
jmp
cmp
dec
not
mov
cmp
mov
add
dec
push
outs
sbb
popf
add
lods
xor
add
stos
dec
sbb
(bad)
repnz
dec
mov
jae
cmp
mov
fmul
(bad)
dec
cmp
cmp
stos
push
cmp
dec
idiv
jp
add
cmc
(bad)
mov
mov
jp
je
add
fadd
fmul
in
xchg
div
cld
(bad)
dec
not
fsubr
fwait
pop
cmp
mov
add
sti
lods
xor
dec
inc
idiv
cmp
call
cwde
repnz
shl
outs
cli
(bad)
push
add
mov
outs
in
xchg
div
aaa
mul
in
dec
add
fwait
sbb
mov
add
add
fidiv
cmp
idiv
lods
(bad)
dec
sti
lods
xor
add
fisubr
stc
popf
add
mov
dec
outs
dec
(bad)
fnstenv
(bad)
push
(bad)
in
dec
add
js
les
in
sti
dec
(bad)
mul
lods
(bad)
(bad)
fsubr
xchg
outs
inc
(bad)
neg
(bad)
dec
in
sahf
sti
add
pop
fwait
mov
(bad)
mov
add
in
popf
lods
xor
add
add
std
dec
add
lods
xor
add
or
pusha
(bad)
lahf
jecxz
cmp
pop
into
(bad)
jmp
add
push
lahf
(bad)
dec
div
dec
add
les
aas
adc
mov
outs
bound
dec
lods
(bad)
and
in
inc
or
push
mov
sahf
(bad)
mov
adc
mov
jp
dec
or
(bad)
in
inc
or
xorps
outs
(bad)
cmp
dec
mov
cmp
jmp
imul
lods
sub
dec
dec
out
xchg
dec
rcr
div
inc
xchg
(bad)
jge
in
dec
int3
in
dec
dec
out
xchg
dec
shr
and
add
xchg
(bad)
jge
in
dec
int3
in
dec
and
repnz
ins
dec
add
and
(bad)
dec
add
or
push
shr
dec
add
js
les
sti
dec
outs
and
or
loop
and
(bad)
in
sti
or
push
ror
shr
(bad)
jnp
addr16
jge
in
int3
fcomp
fwait
xor
(bad)
mov
add
sti
lods
xor
add
dec
jnp
mov
mul
xor
jmp
in
(bad)
in
pop
inc
xchg
(bad)
test
add
iret
pusha
in
addr16
pop
mov
mov
idiv
xchg
jmp
loope
(bad)
dec
mul
mov
int3
js
les
in
sti
outs
in
mov
add
or
pusha
(bad)
lahf
jecxz
cmp
sahf
sti
add
dec
push
xor
lods
dec
jnp
jp
test
and
call
in
test
dec
test
lahf
jp
test
fsubr
test
add
sti
lods
xor
add
sub
(bad)
jmp
adc
std
jnp
addr16
xchg
jae
add
in
div
mov
push
add
not
out
dec
add
fwait
test
xor
dec
add
sti
lods
xor
add
and
(bad)
jmp
adc
std
jnp
addr16
xchg
jae
add
in
div
cwde
sub
push
add
mul
mov
mov
mov
add
sti
lods
xor
add
jbe
(bad)
jmp
adc
std
jnp
addr16
xchg
jae
add
in
div
xor
add
lahf
jecxz
add
neg
out
dec
add
fwait
adc
mov
add
inc
xchg
(bad)
neg
xor
add
push
div
xchg
add
mov
jae
adc
mov
mov
out
(bad)
jmp
inc
mov
neg
js
les
xchg
in
pusha
outs
mov
jmp
in
popf
(bad)
in
popf
(bad)
in
sti
test
add
lods
sub
dec
les
cmp
fimul
sti
pop
(bad)
dec
add
jbe
ror
popf
xchg
push
pusha
(bad)
dec
add
or
aad
sti
call
xchg
popf
lahf
jecxz
cmp
add
outs
mov
add
sbb
in
jmp
sbb
js
les
xchg
in
pusha
outs
mov
jmp
in
popf
(bad)
in
popf
(bad)
in
sti
mul
sub
dec
les
dec
xchg
push
cmp
call
xor
xchg
idiv
inc
xor
mov
mov
lods
aaa
fldcw
std
push
cmp
in
das
jge
mov
les
and
fimul
or
sti
dec
dec
dec
frstor
sahf
dec
xchg
xchg
mov
inc
xchg
jmp
dec
jmp
stc
xor
lods
jle
xchg
outs
mov
test
jns
or
ins
shl
in
sbb
in
test
cmp
dec
dec
mov
xlat
jp
(bad)
hlt
and
sub
and
not
sub
add
stos
not
scas
dec
add
call
mov
call
in
pusha
dec
faddp
lods
pusha
jb
inc
call
in
test
mov
jp
test
lahf
jp
pusha
dec
faddp
xchg
shr
aaa
in
fdivr
fwait
xchg
ins
(bad)
mov
add
fsubr
add
sti
mov
pusha
xchg
jmp
test
xchg
popf
dec
or
outs
in
xchg
push
ficomp
dec
rcr
dec
add
neg
test
idiv
scas
dec
add
sti
mov
(bad)
in
int
inc
lods
mov
add
std
test
push
addr16
cmp
stos
div
pop
dec
add
pusha
xchg
cmc
dec
cmp
cmp
mov
cmp
dec
push
movs
call
in
pusha
dec
faddp
dec
fidiv
dec
call
in
pusha
xchg
lea
movs
call
(bad)
push
push
call
pusha
stos
test
(bad)
mul
dec
add
aad
(bad)
in
mov
push
test
pop
call
in
pusha
dec
stos
(bad)
and
call
in
test
and
mov
jp
jmp
pusha
not
jecxz
add
pusha
call
in
test
dec
sbb
call
in
pusha
push
pop
(bad)
in
sahf
outs
cmp
dec
cmp
lods
pusha
test
dec
add
and
call
in
pop
dec
inc
popf
dec
in
sti
xchg
lods
mov
(bad)
in
cmc
test
push
div
mov
dec
(bad)
mov
add
inc
xchg
jmp
sbb
lods
int3
test
xchg
call
in
pusha
dec
faddp
dec
fidiv
push
call
call
in
pusha
push
(bad)
(bad)
call
call
in
(bad)
fadd
dec
call
add
sub
dec
add
dec
cmp
jmp
not
popa
dec
add
add
and
call
in
test
mov
jp
test
mov
add
sti
lods
xor
add
rcr
in
pop
in
call
shr
call
cmp
add
lods
call
hlt
dec
add
xlat
lods
rcr
lods
div
dec
add
add
fwait
or
mul
ror
dec
inc
lods
dec
or
xchg
div
popa
dec
add
lods
dec
dec
scas
lods
xor
add
or
call
repnz
lods
dec
jmp
inc
dec
inc
(bad)
mov
push
xchg
in
xchg
dec
inc
lods
outs
(bad)
push
dec
xchg
or
dec
shl
stos
dec
idiv
out
add
or
add
sti
dec
shr
call
add
div
pop
dec
add
js
les
(bad)
idiv
add
and
jg
dec
sti
test
dec
add
and
outs
inc
jnp
jp
pusha
dec
rol
dec
cmp
lods
dec
mov
pusha
call
in
pusha
dec
faddp
dec
test
lods
xlat
dec
lods
push
test
push
cmp
lods
xchg
dec
push
mul
add
dec
sbb
mul
pusha
call
in
test
mov
jp
pusha
dec
faddp
lods
pusha
mov
lods
push
dec
repnz
xchg
inc
jnp
jp
pusha
dec
faddp
dec
(bad)
and
mov
jp
dec
div
dec
add
and
mov
jp
test
mov
jp
pusha
dec
faddp
xchg
fisub
inc
call
in
pusha
dec
faddp
dec
fidivr
and
mov
jp
dec
test
call
in
test
mov
jp
pusha
dec
faddp
xchg
cmp
lods
dec
sub
dec
mov
dec
repz
add
dec
sti
dec
faddp
outs
bound
jmp
dec
mov
lods
and
push
test
cmc
xchg
test
mov
push
dec
cmp
add
add
pusha
call
in
test
push
dec
dec
jmp
dec
mov
in
sub
movs
test
hlt
aad
sti
in
popf
dec
dec
sti
jnp
test
cmp
in
not
rcr
in
ss
js
xchg
aad
cmp
ss
cmp
xchg
cmp
mov
cmp
and
(bad)
(bad)
jge
in
sahf
sti
add
pop
xchg
in
(bad)
dec
fidiv
int3
dec
shr
dec
bound
dec
dec
jbe
sahf
push
mov
aam
popf
outs
ds
lods
out
dec
dec
xchg
and
jmp
in
lods
pop
mov
sti
test
add
mov
jp
pusha
dec
faddp
dec
fimul
(bad)
lods
pusha
or
pusha
int3
and
call
in
pusha
dec
faddp
lods
pusha
mov
call
in
pusha
dec
faddp
lods
pusha
mov
call
in
pusha
dec
faddp
and
mov
jp
int
neg
lahf
jp
pusha
dec
faddp
xchg
mov
jp
pusha
dec
faddp
and
mov
jp
int
neg
lahf
jp
pusha
dec
faddp
xchg
fwait
sub
(bad)
mov
add
sti
dec
int3
dec
inc
imul
add
iret
pusha
call
dec
add
cmp
add
cmp
in
dec
xchg
add
xor
aaa
call
in
pusha
push
aaa
call
in
pusha
dec
faddp
dec
dec
cmc
push
xchg
in
lods
fadd
fmul
in
cmp
mov
(bad)
dec
lahf
pop
cmp
dec
xor
xchg
(bad)
(bad)
dec
lahf
nop
js
les
dec
mov
jge
(bad)
inc
xchg
outs
inc
(bad)
imul
adc
dec
sub
fld
test
cmp
sti
dec
faddp
xchg
mov
test
call
inc
call
dec
mov
outs
scas
fst
imul
dec
int3
in
int3
fcomp
fwait
test
(bad)
mov
add
sti
(bad)
in
lods
outs
cmp
(bad)
in
popf
stos
idiv
add
lods
sbb
dec
div
ss
(bad)
mov
outs
dec
ficom
jmp
not
(bad)
(bad)
fdiv
aaa
ss
retf
div
xchg
popf
push
cmp
jecxz
pusha
call
pushf
add
lahf
jp
pusha
xchg
dec
push
mul
sub
add
add
add
mul
pop
dec
add
in
sti
outs
add
push
cs
add
mov
dec
dec
popf
xchg
dec
lods
xchg
or
xchg
mov
jae
(bad)
jmp
add
pop
and
push
cmp
dec
test
add
lods
sbb
outs
cmp
test
mov
daa
cmp
mov
add
sti
xchg
cmp
(bad)
dec
popf
dec
inc
xchg
xor
(bad)
dec
dec
faddp
dec
cld
out
pop
in
pop
and
cwde
mov
and
(bad)
(bad)
dec
and
lea
pusha
call
inc
pusha
xchg
fcos
(bad)
jmp
add
(bad)
(bad)
jmp
fcos
(bad)
(bad)
cmp
add
inc
cmp
(bad)
jmp
add
cmp
dec
add
add
dec
faddp
lods
cld
out
sti
add
(bad)
mov
(bad)
push
xchg
(bad)
inc
xor
(bad)
jmp
mov
outs
and
test
jmp
jmp
div
add
push
cmp
jecxz
in
dec
add
stos
div
hlt
add
outs
and
(bad)
jmp
add
push
cmp
mov
add
pop
cmc
fcmovb
mov
add
xchg
(bad)
(bad)
(bad)
jns
sub
(bad)
inc
call
shr
(bad)
(bad)
inc
inc
dec
or
lahf
mov
(bad)
(bad)
jns
sub
(bad)
call
and
(bad)
(bad)
(bad)
jns
sub
(bad)
inc
call
and
(bad)
(bad)
jmp
or
sub
test
jmp
imul
add
(bad)
jmp
and
add
(bad)
(bad)
call
add
(bad)
(bad)
inc
div
and
(bad)
(bad)
inc
dec
xor
(bad)
inc
call
add
(bad)
(bad)
inc
neg
lods
dec
add
fcos
(bad)
inc
jmp
cmp
jb
(bad)
jmp
(bad)
jmp
mov
(bad)
jmp
(bad)
(bad)
(bad)
inc
push
mov
add
in
pop
mov
(bad)
(bad)
call
add
call
add
cmp
mov
cmp
(bad)
dec
dec
push
test
xor
xchg
push
dec
call
xchg
call
jmp
div
add
outs
and
(bad)
jmp
test
add
aad
xor
(bad)
call
(bad)
(bad)
push
(bad)
sbb
mov
(bad)
inc
inc
inc
push
xchg
sbb
mov
add
jae
dec
add
jae
cmp
mov
mov
add
push
fcmovb
mov
dec
xor
(bad)
dec
push
and
(bad)
(bad)
inc
test
add
fcos
(bad)
dec
outs
add
xchg
cmp
ss
cwde
add
dec
add
(bad)
(bad)
call
add
(bad)
(bad)
inc
idiv
cwde
dec
add
mov
(bad)
dec
popf
xchg
(bad)
(bad)
dec
lods
in
dec
push
inc
call
dec
mov
fcomp
push
in
movs
inc
xor
(bad)
jmp
and
test
push
add
push
cmp
sti
jae
dec
add
repz
fwait
test
repz
cmp
lods
xor
add
cdq
jle
jmp
adc
std
jnp
addr16
xchg
jae
add
in
div
je
add
lahf
jecxz
add
idiv
dec
dec
add
les
loope
xor
cmp
xchg
(bad)
jmp
test
sahf
xchg
(bad)
(bad)
(bad)
in
mov
in
mov
sbb
in
imul
add
dec
cmp
imul
cmp
dec
cmp
mov
fimul
add
cmp
xchg
and
cmp
and
fiadd
aaa
(bad)
dec
pusha
in
sub
in
les
xchg
cmp
les
imul
popf
outs
in
lea
imul
add
pop
test
lods
xor
add
jmp
(bad)
in
jmp
in
popf
(bad)
in
sti
imul
cmp
add
popf
fwait
sub
(bad)
mov
add
in
(bad)
mul
(bad)
dec
lea
xchg
(bad)
test
jmp
(bad)
div
(bad)
jmp
dec
or
xor
xchg
mul
(bad)
(bad)
(bad)
in
popf
dec
dec
sti
neg
add
outs
dec
(bad)
test
popf
not
push
dec
add
fwait
cmp
(bad)
mov
add
sti
dec
inc
jns
iret
neg
call
cmp
mov
xor
add
pop
arpl
jmp
cmp
or
div
arpl
call
add
call
push
imul
aaa
cmp
dec
add
add
or
cmp
lods
dec
jmp
stos
not
(bad)
push
pop
push
dec
add
fwait
sub
(bad)
mov
add
in
(bad)
div
sahf
(bad)
dec
lea
xchg
(bad)
not
dec
(bad)
mul
cmp
lods
xor
add
dec
or
xor
xchg
test
popf
dec
dec
sti
div
cwde
add
outs
dec
(bad)
test
popf
neg
push
dec
add
fwait
push
sbb
add
sti
lods
xor
add
popf
add
(bad)
in
sti
dec
dec
lods
mul
mov
lods
cmp
(bad)
lahf
pushf
dec
mov
jg
(bad)
jmp
sti
in
movs
fadd
fadd
neg
aaa
(bad)
int3
fdivr
fwait
sbb
(bad)
dec
cmp
lods
xor
add
popf
add
(bad)
in
sti
dec
sbb
dec
xchg
cmp
(bad)
dec
add
lahf
nop
dec
mov
imul
dec
add
push
mov
add
add
xchg
add
(bad)
(bad)
int3
fdivr
fwait
and
loope
dec
add
sti
lods
xor
add
popf
add
dec
mov
neg
mov
lods
cmp
fstp
lahf
pop
outs
pop
(bad)
mul
(bad)
(bad)
inc
push
ss
add
mov
add
add
cwde
addr16
add
scas
(bad)
int3
fadd
fwait
xor
test
add
dec
in
sti
xchg
lea
inc
call
jmp
or
push
cmp
dec
neg
mov
fsubr
idiv
dec
add
sti
outs
jge
in
pusha
xchg
xchg
lea
jmp
push
lods
add
xchg
fadd
aaa
cmp
dec
add
add
lods
test
neg
dec
call
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
outs
jge
aaa
cmp
jecxz
add
dec
movs
xchg
(bad)
idiv
(bad)
(bad)
jmp
xor
mov
(bad)
jmp
or
mov
(bad)
fadd
push
cmp
outs
scas
mov
arpl
neg
dec
call
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
dec
aaa
test
add
fwait
xor
or
sti
lods
xor
add
pop
stos
test
add
imul
mov
dec
add
aaa
test
xor
xor
div
or
test
dec
int3
dec
xchg
dec
int3
div
and
xor
xor
mul
or
not
and
(bad)
outs
inc
(bad)
and
dec
and
bound
bound
test
(bad)
(bad)
fdivr
fadd
outs
lods
daa
add
add
add
idiv
xchg
jmp
pop
add
add
pop
add
add
imul
(bad)
dec
add
add
add
xchg
add
add
xchg
add
add
mov
and
add
add
and
add
and
in
(bad)
dec
jmp
add
xchg
jmp
add
jns
add
add
rol
dec
add
dec
aaa
in
js
les
inc
dec
not
cmp
dec
call
add
sahf
mov
dec
(bad)
mov
add
sti
outs
pop
mov
cmp
dec
add
add
ds
add
or
(bad)
(bad)
fadd
fmul
pop
xor
sub
(bad)
(bad)
fadd
fmul
jnp
xor
ins
dec
add
les
and
dec
mov
xlat
add
add
popf
dec
inc
lods
or
fadd
jbe
jnp
xchg
jmp
pusha
in
popf
dec
aaa
not
pusha
add
add
lods
dec
jge
or
fadd
jbe
jnp
dec
xchg
aad
jmp
jo
inc
popf
cmp
inc
lods
mul
add
mov
mul
mov
dec
lods
or
popf
fadd
jbe
jnp
xchg
jecxz
popf
lahf
shl
in
(bad)
in
pusha
lahf
repnz
mov
or
fadd
jbe
jnp
aad
jmp
xor
popf
xchg
(bad)
call
popf
jecxz
dec
movs
cmp
neg
call
lods
dec
add
and
hlt
call
lods
mul
pop
popf
test
inc
lods
or
popf
fadd
jbe
jnp
in
test
push
dec
call
iret
pusha
call
popf
inc
mul
mov
dec
aaa
jge
test
mov
mov
add
sti
xchg
sti
xchg
lea
pusha
call
push
je
dec
add
les
and
dec
mov
inc
add
add
popf
dec
inc
lods
or
ja
dec
add
jbe
add
xchg
jmp
pusha
in
popf
dec
aaa
idiv
add
add
dec
cli
popf
dec
mov
or
jbe
add
dec
xchg
xchg
aad
jmp
dec
call
popf
dec
inc
popf
inc
test
pop
lods
neg
(bad)
dec
lods
or
popf
jbe
ret
(bad)
dec
add
jecxz
popf
rep
add
add
popf
and
in
(bad)
in
pusha
lahf
jg
mov
or
jbe
add
dec
dec
mov
mov
inc
popf
push
test
pop
popf
jecxz
dec
movs
cmp
sbb
mov
add
and
hlt
call
lods
test
(bad)
call
popf
test
dec
add
inc
popf
in
div
ret
popf
xchg
lods
xchg
scas
push
dec
call
iret
pusha
call
popf
inc
idiv
mov
dec
aaa
jge
test
mov
mov
add
sti
xchg
sti
xchg
lea
pusha
call
push
cld
addr16
add
fwait
(bad)
or
mov
add
xchg
lea
jmp
and
div
push
(bad)
push
cmp
dec
add
fdivr
fwait
and
dec
add
mov
add
neg
test
(bad)
call
dec
mul
dec
add
lea
xor
ss
xchg
(bad)
mov
(bad)
mov
push
adc
lods
pop
add
jge
push
jge
inc
mov
add
xchg
xchg
(bad)
dec
push
pop
int3
fadd
fwait
add
(bad)
mov
add
cmp
dec
add
add
sti
dec
in
lods
push
lods
push
in
inc
mov
add
lods
aad
popf
inc
scas
div
jg
in
sti
lods
aaa
jmp
cwde
div
cdq
add
push
ret
not
dec
jmp
dec
cmp
lods
pusha
(bad)
stos
test
add
rcr
dec
add
popf
and
mov
dec
add
popf
add
sub
add
(bad)
ins
(bad)
mov
add
jmp
dec
call
add
jmp
dec
cmp
xchg
dec
cmp
cmp
ss
inc
cmp
fadd
fmul
dec
lods
test
pop
fisttp
sahf
sub
dec
dec
inc
fadd
fmul
or
(bad)
mov
push
ss
(bad)
mov
cmp
add
int3
js
les
jae
sub
mov
add
stos
xchg
les
add
jl
mov
xchg
sub
add
add
aas
mov
stos
outs
iret
sub
xor
add
add
sub
(bad)
jmp
sub
iret
sub
add
add
sub
add
add
add
in
pop
dec
outs
jb
xchg
xchg
sbb
add
imul
add
iret
pusha
in
inc
lods
daa
sub
outs
cmp
scas
test
dec
daa
sub
xchg
add
add
aas
add
add
add
imul
add
sbb
dec
iret
sub
add
add
iret
sub
add
xchg
sub
mul
add
in
sub
add
outs
cmp
scas
neg
sub
(bad)
jns
lahf
imul
mov
aas
mov
xchg
sub
dec
cmp
dec
add
sub
outs
jb
cmps
xchg
sub
dec
dec
xchg
out
outs
jb
mov
aaa
cmp
lods
out
add
add
out
add
outs
jb
cmps
xchg
sub
xchg
sub
dec
dec
xchg
out
xchg
sub
dec
call
mul
jb
dec
pusha
cwde
and
add
dec
icebp
sbb
js
les
inc
dec
push
test
inc
dec
call
add
sahf
mov
(bad)
js
les
inc
neg
test
inc
dec
call
add
sahf
mov
cmp
mov
add
sti
lods
xor
add
dec
cli
sti
dec
lods
xchg
push
push
in
mov
repnz
(bad)
(bad)
outs
sbb
add
mov
test
add
not
adc
sahf
mov
les
cmp
xchg
dec
mov
in
div
pushf
and
dec
popf
outs
in
(bad)
test
(bad)
dec
mov
in
mov
dec
les
(bad)
imul
(bad)
dec
mov
push
cmp
jecxz
add
mov
cmp
call
lods
test
add
mov
dec
(bad)
neg
pop
lods
jge
pop
test
les
cmp
xchg
dec
mov
in
div
pop
and
dec
popf
outs
in
(bad)
idiv
sbb
mov
sbb
outs
in
(bad)
test
dec
mov
push
cmp
jecxz
add
mov
cmp
call
lods
idiv
add
mov
dec
(bad)
idiv
lods
jge
pop
test
faddp
mov
add
loopne
mov
dec
mov
jmp
outs
cmp
stos
outs
dec
adc
push
ins
mov
stos
test
dec
add
aaa
dec
xor
dec
les
dec
dec
dec
inc
aaa
xor
dec
test
push
in
sahf
mov
fidiv
and
mov
jp
pusha
and
mov
jp
idiv
test
dec
retf
call
not
(bad)
dec
pusha
in
mov
ficomp
and
lods
push
sbb
in
movs
push
ret
dec
cmp
(bad)
(bad)
dec
pusha
call
xchg
sahf
sti
add
add
add
test
add
sti
lods
xor
cmp
add
jmp
sti
dec
faddp
outs
scas
(bad)
mov
mov
cmp
adc
call
shr
and
inc
(bad)
in
pusha
and
in
push
add
stos
aaa
cmp
mov
cmps
or
add
cmp
ss
int3
xchg
(bad)
test
add
pusha
in
mov
jmp
push
stos
outs
cmp
test
add
push
cmp
dec
cwde
adc
cmc
jnp
addr16
xchg
jae
add
adc
not
(bad)
jmp
cmc
neg
call
fmul
in
push
imul
in
dec
adc
add
cmc
push
cmp
add
ins
call
mov
mov
std
xor
(bad)
cmp
cmp
stos
outs
and
push
cmp
jp
out
arpl
push
add
add
movs
(bad)
mov
mov
jecxz
pop
gs
inc
js
les
and
lea
call
jmp
not
mov
(bad)
jge
test
inc
(bad)
mov
add
push
dec
cmp
test
add
dec
mov
mov
cmp
div
(bad)
call
stos
push
cmp
dec
div
daa
sbb
mov
push
cmp
jp
or
(bad)
jmp
dec
outs
dec
cmp
pop
dec
(bad)
dec
dec
outs
dec
fwait
not
dec
(bad)
dec
dec
outs
dec
push
xor
(bad)
dec
sti
test
dec
add
js
les
(bad)
in
sti
lods
xor
add
neg
add
aaa
inc
xor
loopne
mov
lods
cmp
lods
or
aaa
ss
xchg
(bad)
mov
xchg
(bad)
mov
jae
dec
add
fwait
sub
mov
add
in
sti
outs
add
test
push
rcr
mov
dec
dec
popf
stos
aaa
fidivr
aaa
fisub
cmp
mov
and
idiv
outs
(bad)
(bad)
(bad)
jmp
dec
xchg
push
cmp
dec
mul
dec
add
lods
sbb
outs
and
(bad)
jmp
add
jae
add
add
idiv
in
sti
outs
add
cmp
add
mov
dec
dec
popf
xchg
or
ror
xchg
fisubr
push
(bad)
(bad)
jmp
add
aas
and
push
cmp
dec
not
add
lods
sbb
outs
cmp
stos
neg
fcomp
mov
add
in
(bad)
mul
(bad)
dec
lea
xchg
(bad)
neg
dec
(bad)
div
adc
jmp
dec
or
xor
xchg
mul
(bad)
(bad)
(bad)
in
popf
dec
dec
sti
div
dec
(bad)
neg
cmp
add
les
popf
xchg
lea
lods
dec
xchg
xchg
mov
push
dec
dec
sti
dec
dec
push
loop
call
test
xchg
xchg
mov
mov
pop
(bad)
call
fwait
(bad)
inc
mov
or
push
outs
mov
not
or
dec
pusha
call
sti
push
loop
call
or
jmp
scas
outs
in
(bad)
neg
(bad)
dec
pusha
call
xchg
xchg
xchg
xchg
popf
xchg
(bad)
jge
int3
in
sahf
scas
add
lea
xchg
dec
cmp
xchg
dec
cmp
xchg
lahf
retf
les
(bad)
in
sti
dec
cmp
idiv
mov
popf
neg
fwait
or
(bad)
mov
add
in
sti
lods
xor
add
popf
stos
idiv
mov
popf
neg
add
dec
sti
div
popa
dec
add
fwait
or
(bad)
mov
add
in
sti
lods
xor
add
popf
stos
test
popf
test
sti
div
hlt
dec
add
fwait
dec
pop
(bad)
mov
add
dec
cmp
xchg
les
in
sti
call
div
mov
jmp
push
(bad)
lahf
test
lahf
sti
mul
aaa
(bad)
push
mov
add
add
clc
popf
dec
add
popf
not
hlt
dec
add
js
les
popf
cmp
sbb
sti
dec
int3
or
dec
mov
cwde
(bad)
movs
add
add
lods
and
cmp
cmp
scas
xchg
stos
div
cmps
add
dec
jb
xor
jbe
sahf
push
mov
sahf
push
mov
or
sub
or
lods
sbb
mov
lods
call
loopne
(bad)
dec
sub
lahf
sub
xor
sar
(bad)
dec
sub
dec
int3
or
dec
mov
lods
mov
mov
add
add
or
xchg
sub
dec
xchg
sub
sahf
dec
lea
and
outs
xor
scas
jmp
(bad)
sub
or
dec
sbb
push
stos
add
mov
std
dec
cmp
popf
lods
mov
call
or
mov
and
mov
pusha
dec
sbb
and
sti
dec
push
dec
mov
mov
popf
lods
mov
imul
cmps
add
mov
icebp
sbb
js
les
dec
mov
aaa
fadd
jbe
jnp
dec
fiadd
popf
push
mov
cmp
cmp
popf
outs
dec
jmp
sti
in
arpl
jge
int3
pop
sbb
js
les
cmp
fimul
sti
or
jbe
(bad)
dec
add
jnp
dec
xchg
dec
lea
inc
(bad)
dec
add
jecxz
popf
push
sbb
call
xchg
popf
lahf
jecxz
cmp
sbb
call
add
sbb
in
jmp
sbb
js
les
xchg
in
pusha
outs
mov
jmp
in
popf
(bad)
in
popf
(bad)
in
sti
mul
add
sahf
sti
add
les
dec
inc
lods
rcl
add
cmp
mov
jecxz
inc
(bad)
dec
in
jecxz
outs
mov
(bad)
jmp
test
test
add
(bad)
in
mov
in
(bad)
jmp
(bad)
out
dec
cmp
div
add
jge
adc
fcomp
mov
add
or
mov
jg
or
mov
inc
mov
inc
mov
(bad)
mov
add
jae
mov
not
rol
add
mov
in
jmp
test
(bad)
outs
pop
(bad)
test
neg
dec
call
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
lahf
jp
jmp
jnp
lds
inc
mov
cmp
xchg
and
sbb
int
pusha
(bad)
fmul
cmp
push
int3
call
xchg
xchg
dec
inc
mov
neg
je
add
test
add
idiv
dec
add
dec
dec
inc
dec
inc
fidiv
ss
inc
xor
mov
(bad)
aaa
cmp
fiadd
inc
fimul
(bad)
outs
sar
dec
push
test
push
inc
rcr
(bad)
mov
fwait
inc
or
mov
add
xchg
les
mov
aaa
inc
fdivp
mov
rcr
(bad)
mov
aaa
cmp
(bad)
in
sti
dec
call
add
fidiv
ss
inc
xor
mov
(bad)
aaa
cmp
fiadd
inc
fimul
(bad)
lods
outs
out
mov
dec
push
not
sti
add
(bad)
fwait
inc
or
mov
add
xchg
lea
sti
xchg
test
add
in
pusha
xchg
jmp
mov
xor
xor
push
(bad)
push
ss
xchg
(bad)
mov
(bad)
mov
jg
add
fwait
xor
(bad)
mov
add
xchg
lea
sti
xchg
imul
add
add
pusha
xchg
jmp
ss
retf
dec
cli
pop
push
xchg
call
xchg
dec
push
mul
jg
add
les
in
sti
dec
inc
test
push
ss
(bad)
mov
sahf
mov
(bad)
js
les
inc
test
(bad)
inc
dec
call
add
sahf
mov
(bad)
in
sti
lods
xor
add
sbb
mov
js
les
lods
xor
add
mov
retf
enter
aaa
jge
sahf
mov
add
test
dec
add
popf
lods
xor
(bad)
(bad)
jmp
add
pop
outs
cmp
inc
xchg
jmp
dec
sti
stos
dec
and
(bad)
dec
(bad)
outs
mov
push
add
add
sti
imul
adc
sti
stos
outs
and
(bad)
jmp
add
jae
(bad)
dec
(bad)
iret
push
(bad)
(bad)
(bad)
(bad)
in
jg
and
(bad)
jmp
add
(bad)
dec
(bad)
dec
iret
mov
pop
ss
out
dec
idiv
int3
in
cmps
outs
and
(bad)
jmp
add
inc
add
outs
inc
(bad)
push
add
pusha
call
ror
add
jae
(bad)
inc
jmp
idiv
add
dec
push
neg
sti
add
add
add
imul
dec
add
popf
lods
xor
(bad)
(bad)
jmp
add
pop
outs
cmp
inc
xchg
jmp
dec
sti
stos
dec
and
(bad)
(bad)
dec
(bad)
outs
mov
push
pushf
jecxz
add
sti
idiv
(bad)
jmp
les
(bad)
jmp
add
cs
(bad)
dec
(bad)
iret
push
jae
(bad)
(bad)
in
jg
and
(bad)
(bad)
jmp
add
(bad)
dec
(bad)
dec
iret
mov
pop
ss
out
dec
idiv
int3
in
cmps
outs
and
(bad)
(bad)
jmp
add
inc
add
outs
inc
(bad)
push
add
pusha
call
ror
add
cs
(bad)
inc
jmp
mul
jp
add
imul
add
fwait
rol
div
in
sti
lods
xor
add
popf
outs
in
aaa
ss
mov
nop
(bad)
dec
test
dec
add
fnstenv
mov
mov
(bad)
mov
add
fdiv
test
add
mov
xor
add
pusha
call
idiv
call
int3
sbb
int3
fdivr
fwait
daa
inc
(bad)
mov
add
fdiv
inc
inc
add
mov
xor
add
pusha
call
cmp
in
lea
fwait
(bad)
in
(bad)
idiv
jecxz
add
pusha
call
(bad)
outs
cmp
test
add
js
les
fmul
outs
dec
push
neg
jmp
push
mov
stos
not
mov
dec
lea
outs
aaa
mov
dec
mul
adc
push
add
in
outs
or
aaa
lea
jmp
(bad)
mov
dec
repz
fwait
test
test
outs
in
add
test
jmp
es
add
dec
xchg
dec
test
call
pusha
call
add
iret
pusha
in
ror
(bad)
repz
add
add
add
add
mov
dec
call
call
jmp
dec
cmp
xchg
xchg
and
and
cmp
fistp
add
cs
ss
call
cmp
cmp
in
inc
test
(bad)
jns
sar
int
cmp
or
push
in
xchg
scas
adc
outs
cmp
not
add
int
iret
pusha
shl
cmp
jns
int
sub
jns
push
sar
enter
sar
test
dec
add
hlt
jecxz
add
pusha
in
loope
repnz
add
(bad)
jecxz
add
pusha
in
ror
(bad)
fadd
fmul
dec
cmp
inc
mov
jmp
add
sbb
dec
int3
test
lea
idiv
aaa
ss
(bad)
mov
add
les
dec
rcr
fmul
pop
(bad)
div
cmp
dec
aaa
mov
call
add
sbb
les
inc
dec
push
imul
cmp
dec
call
add
sahf
mov
dec
inc
idiv
test
inc
dec
call
add
sahf
mov
dec
sti
lods
les
xchg
outs
cmp
add
in
popf
in
inc
(bad)
in
scas
dec
out
(bad)
in
lods
dec
pop
(bad)
(bad)
in
xor
in
xchg
test
lods
stos
xchg
dec
(bad)
in
scas
(bad)
in
lods
idiv
sti
lods
sub
lahf
aad
in
popf
dec
or
(bad)
in
popf
(bad)
in
scas
(bad)
in
lods
(bad)
in
xor
in
xchg
test
add
lods
sub
(bad)
in
lods
mul
mov
lods
sub
cmp
jge
pop
neg
dec
inc
lods
rcl
mov
jecxz
in
idiv
(bad)
dec
jge
pop
int3
fdivr
fwait
xlat
jp
mov
add
dec
mov
xor
idiv
lds
add
sub
lea
add
and
call
idiv
add
outs
dec
(bad)
imul
sbb
dec
sti
not
mov
add
xchg
fwait
jno
(bad)
mov
add
sti
fmul
pop
dec
outs
cmp
xchg
test
add
xchg
jmp
sbb
in
mov
add
dec
dec
ss
faddp
dec
jb
pop
neg
add
cwde
or
or
add
aaa
cmp
jecxz
add
lahf
jecxz
inc
mov
dec
dec
faddp
jecxz
dec
sar
in
pop
lods
test
jecxz
test
push
(bad)
xchg
jmp
xchg
dec
add
dec
mov
ss
stos
(bad)
jecxz
aad
neg
div
or
dec
jmp
dec
cmp
(bad)
dec
cmp
push
int3
call
mov
aaa
neg
ss
add
fwait
ret
mov
add
dec
in
sti
lods
xor
cmc
mov
rcr
(bad)
mov
in
push
mov
(bad)
inc
fidiv
ss
or
aaa
dec
sbb
(bad)
aaa
cmp
fiadd
inc
fimul
(bad)
outs
stos
mov
and
call
in
dec
idiv
push
test
dec
add
dec
xchg
fcomp
in
int
jnp
call
(bad)
dec
jno
xchg
jp
popf
rcl
int
inc
jge
xchg
mul
pusha
cwde
or
fwait
iret
dec
(bad)
mov
add
dec
mov
add
mov
aaa
mov
(bad)
loopne
mov
outs
mov
in
inc
stos
inc
xchg
xchg
(bad)
div
sahf
(bad)
inc
dec
faddp
outs
pop
sti
dec
aaa
(bad)
mov
xchg
div
(bad)
lock
call
jmp
aaa
ss
(bad)
mov
dec
inc
scas
xchg
les
mov
jecxz
int3
(bad)
lods
or
sar
inc
les
pusha
call
dec
test
dec
add
fwait
imul
dec
add
adc
cmp
adc
lods
xor
add
fwait
dec
call
dec
mov
cmp
mov
neg
dec
add
js
les
jno
dec
push
mul
(bad)
inc
dec
call
add
sahf
mov
cmp
sbb
lea
test
(bad)
dec
pusha
call
mov
jecxz
mov
(bad)
in
lods
or
cmp
(bad)
in
sti
test
add
ss
add
aad
scas
scas
mov
add
scas
dec
xchg
or
push
dec
sti
scas
jecxz
dec
sti
or
sti
lods
idiv
or
lods
push
xchg
pop
mov
add
scas
dec
cmp
or
or
aad
lods
scas
or
cli
(bad)
lods
mov
hlt
lahf
jp
push
lods
mov
test
or
lods
jecxz
jecxz
sti
cmp
stos
dec
dec
jecxz
jecxz
lods
xchg
stos
div
stos
(bad)
jmp
aad
lods
pop
test
dec
sti
cwde
lock
add
dec
mov
or
sti
and
cmp
jmp
sbb
(bad)
dec
pusha
call
lods
scas
in
dec
mov
outs
cli
(bad)
lods
mov
hlt
lahf
jp
push
lods
mov
test
cmps
jecxz
sti
cmp
push
or
lods
pavgw
jecxz
lods
stos
and
xchg
stos
(bad)
jmp
xchg
lods
mov
cli
(bad)
lahf
jecxz
cli
(bad)
(bad)
in
lods
or
(bad)
in
popf
jecxz
stos
and
sbb
(bad)
jmp
jmp
sbb
mov
dec
jge
pop
neg
les
popf
and
jp
int3
dec
dec
sti
lods
shr
hlt
and
call
imul
jle
add
popf
or
scas
sbb
fdiv
fwait
or
(bad)
mov
add
sti
in
pop
cmp
outs
cmp
stos
xchg
div
ja
add
xchg
jmp
sbb
add
dec
mov
faddp
jecxz
outs
in
and
push
data16
jmp
neg
add
mov
(bad)
idiv
(bad)
call
jmp
dec
mov
aaa
dec
rcr
outs
sbb
cmp
sbb
cmp
cwde
mov
dec
(bad)
in
cmp
pusha
stos
sar
(bad)
in
add
and
xchg
stos
dec
call
pop
xchg
jmp
out
dec
dec
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
aam
(bad)
jmp
pop
push
mov
cmp
jp
or
outs
rol
add
or
dec
dec
popf
xchg
(bad)
lods
dec
idiv
mov
sbb
test
in
div
popf
aaa
add
lods
dec
jmp
dec
cmp
dec
sti
dec
push
(bad)
dec
cmp
push
int3
call
sbb
idiv
jp
add
fwait
dec
sub
mov
add
sti
in
pop
cmp
outs
cmp
stos
xchg
(bad)
idiv
jl
add
std
cwde
iret
sub
add
dec
mov
aaa
outs
in
div
test
jmp
div
outs
dec
test
sbb
in
popf
push
cmp
jp
mov
aaa
dec
rcr
outs
sbb
cmp
cwde
mov
dec
(bad)
in
mov
js
(bad)
in
cmp
and
cmc
stos
dec
call
pop
xchg
jmp
out
dec
dec
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
dec
mov
jmp
fwait
inc
push
add
in
pop
dec
mov
sbb
test
in
(bad)
imul
dec
jmp
dec
cmp
dec
sti
dec
push
(bad)
dec
cmp
push
int3
call
cmps
add
dec
aaa
div
dec
add
fwait
cdq
jp
mov
add
sti
dec
inc
in
inc
lea
or
not
(bad)
inc
popf
dec
ss
dec
call
add
add
stos
dec
or
add
test
add
les
and
pop
scas
ds
cmp
cmp
add
dec
cli
scas
dec
dec
or
push
cmp
scas
jecxz
cmp
dec
cmp
cmp
xchg
scas
or
sti
lods
xchg
dec
scas
push
dec
pop
mov
add
scas
cmp
xchg
or
sti
dec
(bad)
dec
scas
or
or
sti
xchg
xchg
jmp
dec
scas
sbb
add
dec
sbb
aad
(bad)
call
mov
mov
lods
mov
xchg
(bad)
lahf
jecxz
xchg
(bad)
lods
mov
cli
(bad)
lahf
jecxz
cli
(bad)
jecxz
jecxz
sti
cmp
push
or
scas
pavgw
jecxz
scas
stos
and
hlt
dec
(bad)
dec
popf
lods
sub
dec
stos
(bad)
lahf
jecxz
stos
(bad)
dec
mov
lods
mov
cli
(bad)
lahf
jecxz
cli
(bad)
(bad)
in
scas
dec
sbb
stos
jecxz
and
sub
(bad)
push
xlat
dec
add
dec
cmp
outs
jge
aad
scas
pop
dec
dec
mov
lods
mov
repnz
jp
add
dec
pop
xchg
lahf
jecxz
sbb
js
jecxz
or
and
push
stos
test
xchg
lods
sub
repnz
jp
add
dec
addr16
in
jmp
call
push
or
scas
jecxz
jecxz
scas
xrelease
add
in
lods
pop
dec
dec
mov
lods
mov
repnz
jp
add
dec
pop
xchg
lahf
jecxz
sbb
push
or
scas
jecxz
jecxz
sti
and
push
jecxz
scas
stos
imul
(bad)
dec
xchg
lods
sub
repnz
jp
add
dec
addr16
js
jecxz
(bad)
in
scas
or
jecxz
repz
add
jecxz
push
cmp
lods
mov
repnz
jp
add
dec
pop
xchg
lahf
jecxz
sbb
push
or
scas
jecxz
jecxz
sti
and
push
jecxz
scas
stos
imul
sub
dec
xchg
lods
sub
repnz
jp
add
dec
addr16
sti
jecxz
lods
jecxz
scas
lahf
mov
mov
repnz
jp
add
dec
pop
xchg
lahf
jecxz
sbb
js
jecxz
or
and
push
stos
test
(bad)
dec
xchg
lods
sub
repnz
jp
add
dec
pop
xchg
lahf
jecxz
sbb
push
or
scas
jecxz
jecxz
sti
and
push
jecxz
scas
stos
div
sub
dec
xchg
lods
sub
repnz
jp
add
dec
addr16
js
or
sti
or
or
sti
cmovns
jecxz
jecxz
scas
jecxz
jecxz
sti
and
(bad)
jmp
mov
or
dec
pop
neg
fwait
test
cmp
dec
sbb
lods
dec
adc
dec
cmp
xchg
pop
dec
cmp
xchg
out
inc
lods
xchg
add
add
dec
ror
iret
xor
in
push
not
loopne
(bad)
in
jmp
loope
(bad)
(bad)
mov
adc
(bad)
in
pop
in
pusha
inc
aaa
cmp
mov
xchg
fwait
xchg
xchg
add
outs
cmp
stos
xchg
jmp
cmp
call
cmp
jp
test
call
rcr
jmp
out
(bad)
call
loopne
(bad)
dec
adc
test
add
fdivr
xchg
push
cmp
jecxz
pop
mov
outs
in
cmp
sbb
neg
mov
fwait
scas
jecxz
cmp
stos
outs
cmp
add
lods
dec
jmp
lods
sbb
push
xchg
adc
call
add
aas
test
push
and
add
add
lods
cmp
cmp
popf
outs
dec
cmc
mul
sub
cmp
stos
test
lods
dec
jmp
lods
sub
xor
cmp
aad
fs
sti
lods
test
jecxz
in
adc
sbb
add
pusha
dec
cmp
jecxz
sti
dec
lods
mov
lods
sti
jp
sti
dec
dec
out
and
dec
cmp
sti
dec
dec
lods
xchg
(bad)
imul
jmp
add
fwait
add
mov
add
sti
dec
mov
add
fld
sub
pusha
dec
aaa
dec
movs
not
xor
add
lods
stos
xchg
outs
cmp
popf
outs
dec
cmc
imul
mov
jmp
lods
sub
lods
aas
(bad)
dec
mov
push
call
add
sub
(bad)
in
add
xchg
mov
lods
outs
mov
dec
(bad)
idiv
add
pusha
dec
cmp
dec
dec
dec
add
dec
push
call
xchg
xchg
test
inc
add
lods
or
xchg
dec
cmp
jecxz
sti
jp
dec
popf
dec
cmp
xchg
dec
dec
lods
xchg
(bad)
not
fld
fcomp
fwait
add
mov
add
sti
dec
mov
add
fld
sub
pusha
dec
aaa
dec
movs
imul
xor
add
lods
stos
xchg
outs
cmp
popf
outs
dec
cmc
idiv
add
lods
dec
jmp
lods
sub
mov
(bad)
dec
mov
push
call
add
sub
(bad)
in
add
fadd
add
lods
sub
dec
(bad)
not
xchg
add
iret
pusha
dec
cmp
dec
dec
dec
add
dec
push
call
scas
lods
test
pop
cwde
or
xchg
dec
cmp
lods
sti
jp
dec
popf
dec
cmp
xchg
dec
dec
lods
xchg
(bad)
test
add
fwait
leave
inc
(bad)
mov
add
sti
dec
mov
add
fld
sub
fwait
dec
aaa
dec
movs
test
jmp
dec
jmp
and
stos
cmp
js
outs
dec
cmc
test
add
cmp
stos
mul
dec
jmp
lods
sub
xchg
add
scas
outs
sbb
add
pusha
dec
cmp
dec
outs
dec
cmc
aad
sbb
in
mov
out
lahf
jecxz
sti
jp
dec
popf
dec
cmp
sti
dec
dec
lods
xchg
(bad)
not
fld
add
fwait
leave
inc
(bad)
mov
add
sti
dec
mov
add
fld
sub
fwait
dec
aaa
dec
movs
test
(bad)
jmp
jmp
and
stos
cmp
js
outs
dec
cmc
neg
mov
stos
outs
cmp
stos
test
add
lods
dec
jmp
lods
sub
fs
jmp
scas
outs
sbb
add
pusha
dec
cmp
dec
outs
dec
cmc
aad
sbb
in
mov
out
lahf
jecxz
sti
jp
dec
popf
dec
cmp
sti
dec
dec
lods
xchg
(bad)
mul
rol
sahf
fld
fdivr
fwait
ds
(bad)
mov
add
sti
dec
mov
add
fld
sub
sbb
dec
movs
test
jmp
jmp
and
stos
cmp
js
outs
dec
cmc
mul
add
lods
sub
cmp
stos
div
add
lods
dec
jmp
lods
sub
js
mul
(bad)
jmp
scas
outs
sbb
add
pusha
dec
cmp
dec
outs
dec
cmc
aad
sbb
in
jg
cmp
out
xchg
(bad)
lahf
jecxz
sti
jp
dec
popf
dec
cmp
sti
dec
dec
lods
xchg
(bad)
imul
rol
sahf
fld
fdivr
fwait
ds
(bad)
mov
add
sti
dec
mov
add
fld
sub
sbb
dec
movs
idiv
sub
jmp
jmp
and
stos
cmp
js
outs
dec
cmc
test
add
lods
sub
cmp
stos
mul
dec
jmp
lods
sub
js
div
mov
div
add
iret
pusha
dec
cmp
dec
outs
dec
cmc
aad
sbb
in
jg
cmp
out
xchg
(bad)
lahf
jecxz
sti
jp
dec
popf
dec
cmp
sti
dec
dec
lods
xchg
(bad)
div
add
sahf
fld
fcom
cmp
mov
add
sti
lods
xor
dec
fld
sub
xor
out
dec
neg
xor
add
adc
scas
stos
outs
cmp
dec
sbb
sub
sbb
outs
cmp
stos
neg
mov
push
dec
jmp
lods
sub
jmp
scas
outs
sbb
add
pusha
dec
cmp
lods
sti
dec
outs
dec
push
aad
pop
call
sbb
movs
xchg
lahf
jecxz
sti
jp
dec
popf
dec
cmp
xchg
dec
dec
lods
xchg
(bad)
not
add
sahf
fld
fsubr
fwait
xchg
inc
(bad)
mov
add
sti
lods
xor
dec
fld
sub
xor
aas
xchg
mul
(bad)
jmp
dec
adc
scas
stos
outs
cmp
dec
sbb
push
mov
popf
stos
outs
cmp
outs
cmp
stos
div
mov
mov
lods
sub
jmp
scas
outs
sbb
add
pusha
dec
cmp
lods
sti
dec
outs
dec
push
aad
pop
call
sbb
cmp
xchg
lahf
jecxz
sti
jp
dec
popf
dec
cmp
dec
dec
lods
xchg
(bad)
test
add
sahf
fld
fsubr
fwait
xchg
inc
(bad)
mov
add
sti
lods
xor
dec
fld
sub
xor
aas
xchg
imul
xor
add
adc
scas
stos
outs
cmp
dec
sbb
cmp
add
lods
sbb
outs
cmp
stos
not
sbb
lods
sub
jmp
scas
outs
sbb
add
pusha
dec
cmp
lods
sti
dec
outs
dec
push
aad
pop
call
sbb
cmp
xchg
lahf
jecxz
sti
jp
dec
popf
dec
cmp
dec
dec
lods
xchg
(bad)
test
add
sahf
fld
fdivr
fwait
ds
(bad)
mov
add
sti
dec
movs
dec
dec
fld
sub
xor
jmp
sbb
add
pusha
and
jmp
add
scas
stos
cmp
js
outs
dec
cmc
xchg
add
sub
stc
jbe
jmp
add
stos
outs
cmp
stos
imul
add
xchg
mov
dec
(bad)
test
dec
cmp
dec
outs
dec
cmc
aad
sbb
in
mov
out
lahf
jecxz
sti
jp
dec
popf
dec
cmp
sti
dec
dec
lods
xchg
(bad)
test
add
les
(bad)
in
sti
dec
dec
lods
xor
add
stos
lods
dec
cmp
neg
les
(bad)
in
sti
dec
dec
lods
xor
add
stos
scas
dec
cmp
neg
fwait
test
test
add
dec
cmp
xchg
push
cmp
cmp
stos
xchg
rol
sar
dec
mov
dec
sbb
call
cmp
aad
add
sbb
stos
sti
cwde
or
cmp
dec
cmp
pusha
sti
stos
fsubr
xchg
mov
dec
mov
or
mov
in
neg
popa
add
iret
pusha
in
push
(bad)
in
mov
daa
(bad)
(bad)
mov
dec
int3
div
push
aaa
in
mov
mov
in
mov
daa
(bad)
(bad)
mov
dec
int3
test
add
push
ss
inc
xchg
fs
movs
not
sti
add
dec
cmp
pop
add
add
in
test
cmp
lahf
fistp
sti
add
in
test
cmp
lahf
sbb
addr16
lods
and
xchg
adc
cmp
add
or
not
add
pusha
cwde
and
add
add
mul
add
sbb
push
test
movs
push
cmp
dec
test
aas
dec
xchg
div
hlt
add
iret
pusha
in
(bad)
(bad)
in
mov
dec
(bad)
(bad)
mov
dec
push
imul
mov
aaa
call
neg
or
dec
push
neg
push
aaa
in
mov
lods
mov
aaa
cmp
push
cmp
add
add
lods
mov
aaa
cmp
lods
mov
lods
mov
in
pusha
lods
mov
pusha
shr
xchg
xchg
push
mov
add
add
in
out
push
xchg
mov
ror
mov
sbb
lods
xor
lods
pusha
mov
cmp
dec
xchg
iret
test
add
iret
pusha
cwde
and
cmp
imul
mov
mov
dec
or
stos
outs
cmp
stos
rcr
je
sbb
test
je
in
fs
in
push
ss
loope
stos
jae
mov
mov
add
call
or
out
call
inc
xchg
fs
cmp
dec
dec
mov
push
cmp
dec
mul
or
cmp
not
(bad)
inc
pop
outs
cmp
idiv
(bad)
dec
aad
daa
call
add
sbb
daa
in
or
in
pop
inc
outs
mov
(bad)
(bad)
(bad)
cmp
in
aas
mul
add
dec
mov
(bad)
lods
add
iret
pusha
cwde
iret
aad
(bad)
(bad)
in
pop
aad
pop
call
cmp
add
dec
cmp
mov
jp
pop
lods
mov
sbb
or
dec
mov
inc
or
jmp
mov
cmp
imul
(bad)
(bad)
jns
aam
in
retf
push
ret
outs
cmp
test
aam
cld
outs
inc
dec
or
lea
in
hlt
dec
cmp
fs
add
lahf
ss
cmp
xchg
fs
cmp
dec
outs
dec
cmp
xchg
imul
loop
(bad)
cmp
dec
outs
dec
fwait
mul
loop
dec
adc
add
fsub
mov
mov
add
sti
dec
sbb
cmp
xchg
stos
and
(bad)
mov
dec
xchg
xchg
shl
out
(bad)
jmp
push
sti
dec
fsubr
xchg
mov
sub
push
cwde
or
xchg
xchg
xchg
push
cmp
mul
add
iret
pusha
in
dec
(bad)
in
mov
or
ret
(bad)
mov
dec
push
not
mov
aaa
in
sti
dec
cmp
push
add
push
(bad)
in
mov
retf
neg
sar
(bad)
mov
dec
push
neg
add
sbb
in
cwde
dec
cmp
push
add
fiadd
mov
(bad)
pop
lods
mov
or
mov
fimul
or
dec
add
lods
mov
fisubr
or
dec
add
dec
dec
ror
jmp
in
(bad)
cmp
outs
in
fwait
xchg
iret
test
add
dec
in
push
dec
mov
dec
xchg
push
cmp
dec
neg
sub
cwde
and
jp
movs
dec
push
mul
add
dec
sbb
push
ficom
push
dec
push
test
add
test
dec
jmp
sub
or
mov
jo
push
test
int3
in
lods
mov
dec
push
idiv
out
jo
jp
dec
dec
adc
cmp
dec
mov
not
or
cmp
inc
out
cmp
dec
or
lods
mov
dec
push
imul
push
cmp
in
pop
in
pop
fadd
inc
outs
mov
(bad)
(bad)
(bad)
cmp
mul
mov
imul
pusha
cwde
iret
aam
(bad)
jmp
out
mov
mul
(bad)
dec
or
cmp
lahf
(bad)
push
cmp
lods
mov
fisubr
or
mov
push
or
jmp
mov
cmp
(bad)
jns
aam
in
mov
(bad)
in
sub
sub
(bad)
(bad)
jns
aam
cld
popf
outs
inc
dec
or
ficomp
dec
fadd
fmul
dec
fwait
push
cmp
add
pop
ret
(bad)
push
and
add
dec
mov
movs
popf
add
iret
pusha
cwde
and
add
add
push
dec
push
test
cmp
dec
dec
push
test
add
or
dec
test
dec
jmp
sub
mov
xor
neg
push
cmp
lods
mov
dec
push
imul
jp
add
out
jo
push
dec
dec
dec
adc
cmp
push
cmp
dec
not
jp
add
aas
dec
xchg
not
add
iret
pusha
call
cwde
lods
mov
dec
cmp
add
dec
mov
test
add
iret
pusha
in
dec
dec
dec
ror
jmp
dec
int3
mul
add
sbb
in
xchg
imul
add
dec
add
adc
adc
idiv
mov
lahf
push
dec
in
push
dec
push
imul
push
cmp
(bad)
dec
mov
mul
add
dec
mov
das
repnz
iret
pusha
call
popf
dec
cmp
cmp
sbb
dec
in
push
dec
push
test
add
adc
push
sub
neg
jp
add
or
dec
test
dec
jmp
sub
jp
add
out
jo
push
dec
dec
dec
adc
cmp
push
cmp
dec
test
mov
add
iret
pusha
call
iret
mov
in
push
dec
mov
stos
repnz
iret
pusha
cwde
and
add
(bad)
in
mov
xor
mov
or
dec
push
test
add
sbb
call
test
(bad)
(bad)
mov
dec
push
mul
dec
add
sbb
cwde
and
add
dec
cmp
add
test
aas
lods
xor
cmp
add
mul
add
iret
pusha
in
jb
in
mov
or
ret
(bad)
mov
dec
push
not
dec
add
sbb
in
sti
dec
cmp
push
(bad)
in
mov
retf
neg
iret
(bad)
(bad)
mov
dec
push
neg
add
sbb
in
sub
add
(bad)
cmp
add
aas
div
pusha
in
inc
dec
in
push
dec
push
div
push
cmp
adc
or
jp
add
dec
mov
and
pusha
call
test
adc
add
dec
sbb
dec
in
push
dec
push
neg
aad
push
sub
test
add
cwde
or
cwde
or
dec
test
dec
jmp
sti
mov
in
add
adc
jo
push
dec
dec
dec
adc
cmp
push
cmp
dec
not
add
add
dec
mov
add
iret
pusha
call
in
mov
ss
dec
daa
xchg
dec
dec
adc
dec
outs
dec
cmp
out
(bad)
dec
mov
add
js
(bad)
fadd
dec
call
add
add
inc
mov
jmp
div
xor
xchg
dec
call
dec
pusha
call
test
call
mov
dec
sbb
lea
rol
in
mov
add
int3
dec
sub
idiv
xchg
add
inc
add
push
inc
mov
add
(bad)
dec
dec
push
int3
dec
sub
test
add
cwde
or
(bad)
inc
add
add
pop
add
inc
(bad)
dec
int3
js
les
(bad)
in
popf
dec
dec
sti
lods
xor
add
mov
cmp
test
(bad)
in
sti
lods
xor
add
ret
jg
add
sti
test
inc
(bad)
mov
add
sti
in
pop
outs
in
test
xchg
xchg
jmp
stc
cmc
(bad)
(bad)
(bad)
in
xor
in
xchg
(bad)
in
scas
(bad)
in
lods
jmp
(bad)
out
(bad)
in
sti
xchg
not
in
add
sahf
xchg
add
sti
dec
inc
popf
in
pop
push
int3
call
add
popf
xchg
lods
xchg
scas
imul
add
js
les
(bad)
in
sti
lods
xor
add
div
outs
aas
loopne
mov
lods
cmp
lods
or
mov
outs
mul
test
les
dec
sti
dec
faddp
xchg
jmp
cmp
cmp
xchg
std
outs
cmp
jecxz
cmp
cmp
xchg
not
add
(bad)
in
sti
idiv
add
outs
in
popf
imul
and
dec
cmp
push
jecxz
mov
add
jmp
inc
(bad)
in
(bad)
adc
pusha
dec
dec
mov
jmp
inc
xchg
(bad)
cwde
dec
shl
sar
sti
dec
aaa
in
int3
js
les
(bad)
in
sti
lods
xor
add
not
repnz
aaa
inc
out
aas
loopne
mov
lods
or
lods
or
push
lea
out
jmp
(bad)
mov
fadd
fwait
or
(bad)
mov
add
in
sti
lods
xor
add
popf
stos
div
add
outs
dec
popf
imul
(bad)
dec
sti
mul
sti
add
bound
test
xor
xor
imul
dec
cmp
xchg
fwait
outs
cmp
sbb
cmp
in
neg
dec
call
lahf
jp
pusha
xchg
iret
xchg
xchg
xchg
xchg
xchg
ja
xor
test
push
and
jmp
and
idiv
(bad)
jmp
push
outs
in
imul
(bad)
dec
pusha
cwde
and
add
add
in
pop
outs
cmp
(bad)
in
fs
in
std
(bad)
in
and
in
(bad)
(bad)
in
imul
inc
pop
add
dec
cmp
dec
dec
aas
dec
mov
dec
cmp
cmp
cmp
dec
mov
mov
add
iret
dec
stos
(bad)
in
out
outs
cmp
(bad)
in
fwait
(bad)
in
push
stos
neg
add
outs
cmp
dec
add
jmp
in
cmp
sti
(bad)
in
cmc
outs
sbb
in
adc
mov
outs
mov
imul
test
push
xor
cwde
and
(bad)
dec
scas
xchg
push
dec
cmp
mov
(bad)
jmp
cmc
dec
add
retf
(bad)
(bad)
(bad)
(bad)
in
cmp
(bad)
in
cmc
(bad)
in
std
(bad)
in
and
in
(bad)
(bad)
in
imul
dec
sub
add
aas
and
in
dec
outs
cmp
dec
add
test
(bad)
(bad)
in
cmp
cmc
(bad)
in
cmc
(bad)
in
mov
dec
int3
neg
sub
add
outs
scas
dec
xchg
push
sahf
inc
repnz
cmp
add
aas
dec
cmp
mov
cmp
push
dec
inc
mov
add
iret
outs
cmp
dec
add
je
(bad)
(bad)
(bad)
in
les
(bad)
in
mov
in
mov
in
out
test
add
in
pusha
aad
aas
call
dec
in
inc
xchg
push
in
out
call
or
adc
(bad)
out
test
add
mov
aad
mov
mov
add
mov
neg
adc
add
add
js
les
and
sbb
lods
dec
aaa
or
dec
mov
push
mov
mov
stos
dec
dec
int3
idiv
add
mov
xchg
push
xchg
scas
xchg
dec
xchg
outs
inc
mov
pop
sti
ds
lea
xchg
arpl
jmp
sbb
dec
jp
xchg
pop
popf
sbb
jmp
sbb
xchg
mov
dec
repnz
xchg
pop
lods
or
lods
cmp
sti
dec
int3
test
sti
push
retf
dec
cmp
sub
mov
aaa
mov
pop
sub
sti
dec
aaa
dec
call
add
popf
mov
dec
mov
imul
call
call
add
lods
cmp
sti
dec
call
sti
lods
int3
sti
lahf
push
lods
repz
xchg
push
retf
lods
gs
push
call
not
add
lods
fucomi
sti
dec
cmp
dec
call
add
pop
(bad)
(bad)
dec
dec
add
mov
cmp
dec
dec
jmp
xchg
in
rol
pop
test
and
push
outs
xchg
sti
lahf
cmovns
jne
dec
test
mov
push
fstp
dec
mov
mov
xchg
lahf
imul
push
dec
scas
xchg
dec
out
mov
mov
dec
arpl
jmp
ss
(bad)
lods
sahf
sti
push
js
in
xchg
in
test
push
(bad)
mov
add
dec
ss
faddp
jecxz
dec
sar
fadd
stos
aaa
ficomp
div
lock
dec
sti
lods
xor
add
out
dec
neg
add
dec
push
(bad)
dec
cmp
dec
or
xchg
dec
or
inc
fcmovu
pusha
xchg
test
sti
fwait
mov
mov
das
icebp
add
sahf
mov
les
mov
inc
lods
or
popf
xchg
jmp
(bad)
call
aad
popf
inc
mov
add
dec
fiadd
in
inc
imul
pusha
push
pop
popf
pop
mov
add
in
dec
test
push
pop
lods
mov
add
lods
dec
mov
popf
jnp
jmp
(bad)
call
xchg
lods
lahf
mov
lahf
pusha
dec
jecxz
cmp
popf
and
in
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
dec
pop
popf
xchg
jecxz
repz
imul
sti
add
jmp
pop
test
jecxz
mov
add
in
imul
outs
dec
(bad)
not
or
add
dec
dec
les
outs
cmp
add
cmp
dec
stos
test
jmp
dec
cmp
dec
jg
inc
mov
mov
mov
dec
les
popf
outs
cmp
xchg
inc
mov
add
ja
add
int3
fsubr
mov
add
add
(bad)
imul
pop
add
lods
xor
add
mov
mov
mov
and
(bad)
dec
dec
cmp
neg
(bad)
dec
and
and
call
in
sti
outs
cmp
add
mov
in
addr16
mov
mov
jge
add
jae
ins
mov
stos
neg
add
dec
in
lea
xchg
inc
mov
dec
pushf
mov
add
outs
dec
(bad)
imul
add
dec
push
imul
add
int3
fcomp
fwait
rol
idiv
add
sti
dec
sbb
popf
xchg
push
cwde
or
in
int
cmp
and
call
xchg
in
jecxz
cmp
cmp
and
in
gs
mov
in
cmp
dec
jnp
jmp
cmp
test
(bad)
push
cmp
in
inc
in
call
enter
pusha
aad
sbb
cwde
or
scas
and
call
dec
call
and
in
inc
outs
cmp
div
or
cmp
idiv
loope
jecxz
lahf
test
in
xchg
xchg
sbb
scas
cwde
or
sbb
call
dec
mov
not
in
or
pop
jnp
inc
push
cmp
dec
dec
sbb
lods
ret
jecxz
jmp
outs
cmp
div
xchg
lahf
xlat
dec
cmp
cmp
push
dec
ds
dec
add
pusha
outs
cmp
div
(bad)
(bad)
jns
add
sti
xchg
mov
pusha
push
mov
(bad)
(bad)
dec
mov
dec
in
fwait
dec
mov
retf
add
add
pusha
in
scas
(bad)
cmp
jmp
sbb
fadd
fmul
dec
cmp
aaa
mov
dec
add
sbb
add
or
mov
movs
idiv
inc
(bad)
dec
jmp
dec
jnp
adc
in
pusha
in
jecxz
mov
int3
aad
call
dec
inc
dec
inc
pop
aaa
ss
mov
outs
lods
mov
(bad)
aaa
cmp
pop
xchg
mov
pop
dec
faddp
outs
sar
dec
push
div
lock
add
pop
loopne
mov
fwait
lock
mov
add
xchg
les
mov
aaa
inc
pop
sub
or
add
pop
loopne
mov
aaa
cmp
(bad)
in
sti
dec
call
add
pop
aaa
ss
mov
outs
lods
mov
(bad)
aaa
cmp
pop
xchg
mov
pop
dec
faddp
lods
outs
out
call
add
sahf
sti
add
(bad)
fwait
jb
(bad)
mov
add
xchg
lea
sti
xchg
test
add
in
pusha
xchg
jmp
mov
outs
outs
shr
sbb
xchg
sar
push
mov
mov
dec
push
mul
xlat
add
sahf
mov
(bad)
in
sti
dec
inc
idiv
add
aaa
ss
retf
dec
push
in
sahf
mov
mov
mov
add
xchg
lea
sti
xchg
imul
xor
add
pop
stos
outs
or
pop
retf
test
jmp
cmp
cmp
dec
test
dec
xchg
dec
push
neg
xlat
add
sahf
mov
inc
cmp
ss
mov
out
mov
(bad)
aaa
cmp
cmp
mov
cmp
(bad)
outs
sar
test
jb
loopne
mov
fwait
test
neg
retf
dec
inc
xchg
les
mov
aaa
inc
cmp
inc
jb
loopne
mov
aaa
cmp
(bad)
in
sti
dec
call
add
cmp
ss
mov
out
mov
(bad)
aaa
cmp
cmp
mov
cmp
(bad)
lods
outs
out
fiadd
dec
push
imul
sti
add
(bad)
fwait
int
(bad)
mov
add
xchg
lea
sti
xchg
test
add
in
pusha
xchg
jmp
mov
out
outs
shr
dec
sbb
test
(bad)
push
lea
jmp
(bad)
mov
and
add
les
inc
neg
(bad)
inc
dec
call
add
sahf
mov
dec
inc
div
test
inc
dec
call
add
sahf
mov
push
(bad)
mov
add
sti
outs
cmp
in
pop
stos
xchg
(bad)
idiv
xchg
add
xchg
jmp
sbb
cwde
iret
add
dec
faddp
jecxz
outs
in
div
jae
(bad)
jmp
mul
add
mov
(bad)
test
(bad)
(bad)
in
popf
push
cmp
jp
cwde
dec
loop
dec
push
(bad)
jecxz
dec
and
ficomp
mov
jecxz
stos
ud0
fisubr
fisubr
(bad)
in
pop
or
aaa
cmp
mov
jmp
out
dec
dec
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
jmp
xor
add
int3
dec
mov
mov
sbb
test
in
(bad)
mul
add
lods
dec
jmp
outs
cmp
stos
test
test
add
sahf
sti
add
lods
mov
pusha
in
mov
add
lods
pop
xchg
sti
mov
jecxz
rol
dec
dec
(bad)
cmp
mov
outs
popf
mov
push
push
pop
popa
lods
pop
xchg
sti
mov
jecxz
pusha
(bad)
push
cmc
scas
mov
add
inc
dec
inc
(bad)
dec
push
int3
fadd
fwait
je
(bad)
mov
add
xchg
lea
sti
xchg
test
add
lods
xor
add
ss
mov
xchg
dec
mov
lods
aaa
scas
xchg
outs
or
xor
dec
idiv
mov
push
(bad)
mov
add
dec
in
sti
lods
xor
cmc
mov
rcr
(bad)
mov
in
push
mov
(bad)
inc
fidiv
ss
or
aaa
dec
sbb
(bad)
aaa
cmp
fiadd
inc
fimul
(bad)
outs
stos
mov
and
call
in
dec
test
(bad)
dec
mul
add
sahf
mov
add
test
add
dec
in
popf
lods
xor
(bad)
(bad)
jmp
(bad)
in
pop
outs
cmp
inc
xchg
jmp
dec
sti
stos
dec
and
(bad)
(bad)
dec
(bad)
outs
mov
push
xchg
mov
sti
test
(bad)
jmp
imul
(bad)
jmp
add
cs
(bad)
dec
(bad)
iret
push
jae
(bad)
(bad)
in
jg
and
(bad)
(bad)
jmp
add
(bad)
dec
(bad)
dec
iret
mov
pop
ss
inc
dec
idiv
int3
in
dec
outs
and
(bad)
(bad)
jmp
call
inc
add
outs
inc
sti
push
add
pusha
call
dec
dec
les
lahf
jecxz
add
cs
(bad)
inc
jmp
not
enter
push
neg
das
add
sahf
sti
add
les
sti
(bad)
(bad)
inc
xchg
inc
mov
dec
popf
and
in
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
scas
stos
dec
dec
sti
div
add
dec
fimul
lods
xchg
mov
inc
popf
inc
mov
add
popf
xchg
mov
mov
add
pusha
outs
mov
jmp
cmp
enter
imul
add
dec
inc
popf
dec
shr
(bad)
jp
pusha
call
add
(bad)
lods
xchg
outs
(bad)
ja
inc
lods
xchg
popf
jge
neg
les
popf
lods
les
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
dec
sbb
jp
cmc
scas
popf
dec
jecxz
mov
shr
test
xchg
stos
cmp
cmp
jmp
add
jge
int3
jae
add
add
imul
add
sti
in
inc
cwde
iret
mov
add
aad
cwde
and
add
add
lods
test
add
dec
lea
mov
loop
cmp
stos
dec
cmp
jmp
(bad)
call
jmp
stos
aaa
cmp
imul
(bad)
push
cmp
xchg
(bad)
aaa
ss
das
(bad)
mov
add
popf
lahf
jp
inc
dec
dec
sti
fdivr
xchg
jmp
mov
cmp
lea
(bad)
jmp
inc
dec
call
cmc
idiv
mov
in
add
int3
fdivr
fwait
daa
inc
(bad)
mov
add
jae
add
add
xchg
dec
add
mov
xor
add
pusha
call
cmp
in
lea
or
in
(bad)
div
add
pusha
call
(bad)
outs
cmp
imul
js
les
add
and
cld
(bad)
(bad)
push
pop
mov
mov
mov
(bad)
jmp
add
fdivr
fwait
mov
(bad)
mov
add
fsubr
add
xor
add
pusha
call
cmp
in
lea
push
(bad)
in
(bad)
idiv
jp
pusha
and
sbb
cmp
(bad)
outs
cmp
test
dec
les
push
fmul
outs
dec
adc
push
fldenv
stos
div
add
add
pop
lahf
popa
dec
inc
xor
int3
call
int3
in
jecxz
in
aad
xor
repz
dec
shr
fwait
aad
call
add
mov
ret
jge
int3
call
add
scas
xchg
lods
test
int3
js
les
dec
lea
lods
xchg
dec
rcr
dec
jmp
(bad)
(bad)
in
(bad)
in
pop
lahf
dec
push
mov
push
lods
add
call
test
add
scas
or
dec
ret
in
scas
dec
cmp
call
add
popf
push
shr
add
xchg
mov
inc
in
adc
dec
push
outs
mov
push
pop
lods
pop
pop
and
dec
inc
lahf
ss
ss
(bad)
in
inc
push
rcr
add
dec
cmp
dec
dec
mov
in
sti
pop
neg
fwait
mov
sub
add
dec
movs
dec
in
sti
lods
xor
sub
or
add
pop
loopne
mov
in
push
mov
(bad)
inc
pop
aaa
ss
mov
outs
aaa
dec
lods
mov
(bad)
aaa
cmp
pop
xchg
mov
pop
dec
faddp
outs
stos
mov
and
call
in
dec
not
(bad)
dec
idiv
sti
add
dec
dec
lea
mov
outs
shr
dec
(bad)
(bad)
jge
mov
and
(bad)
mov
add
dec
in
sti
lods
xor
stos
mov
jb
loopne
mov
in
push
mov
(bad)
inc
cmp
ss
mov
out
aaa
dec
mov
(bad)
aaa
cmp
cmp
mov
cmp
(bad)
outs
stos
mov
and
call
in
dec
mul
(bad)
dec
not
add
sahf
sti
add
stos
fwait
lods
inc
(bad)
mov
add
scas
jnp
lods
add
add
dec
in
sti
xchg
xchg
in
xor
dec
ud0
xchg
xchg
(bad)
in
lods
(bad)
in
popf
dec
jmp
mov
add
outs
in
cmc
dec
aaa
imul
jno
(bad)
in
pop
stos
xchg
jmp
lds
dec
cmc
dec
(bad)
mul
into
(bad)
(bad)
in
pusha
aaa
cmp
mov
sbb
add
aaa
cmp
dec
add
add
stos
or
test
jmp
lahf
test
push
push
(bad)
call
jmp
fdivr
outs
dec
cmp
in
pop
idiv
fcos
(bad)
cmp
dec
outs
in
fs
cmp
dec
imul
mov
and
jg
cmp
inc
sti
or
test
xor
add
lods
and
dec
add
lods
mov
in
add
pusha
(bad)
in
xchg
(bad)
in
lods
(bad)
in
popf
neg
add
dec
sti
xchg
dec
faddp
lods
sub
lods
lods
mov
fisubr
dec
cmp
dec
dec
popf
dec
in
lods
xchg
cmc
xchg
and
sub
or
and
dec
call
add
inc
add
push
cmp
dec
inc
inc
lods
mov
(bad)
in
add
pusha
(bad)
in
xchg
lods
mov
in
lods
dec
in
xchg
stos
xchg
popf
neg
lods
fadd
fmul
in
cmp
inc
fcos
dec
xchg
imul
cmps
add
sahf
xchg
add
les
push
jl
mov
xchg
sub
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
(bad)
in
xor
cmp
xor
add
add
stos
outs
cmp
out
fcomp
stos
not
test
stos
(bad)
in
xchg
outs
(bad)
sub
call
call
popf
add
dec
jb
cld
dec
cmp
pop
lods
adc
mul
sbb
add
sbb
les
push
jl
mov
xchg
sub
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
(bad)
in
xor
cmp
xor
fild
cmp
out
fcomp
stos
imul
test
stos
(bad)
in
xchg
outs
(bad)
sub
call
call
popf
add
dec
jb
cld
dec
cmp
pop
lods
adc
div
ja
add
sbb
les
push
jl
mov
xchg
sub
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
(bad)
in
fld
in
xor
mov
add
stos
outs
cmp
(bad)
fcomp
stos
mul
sub
(bad)
sub
call
call
repnz
dec
jb
cld
dec
cmp
pop
lods
adc
div
add
dec
icebp
sbb
les
push
jl
mov
xchg
sub
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
(bad)
in
fld
in
xor
popa
mov
cmp
(bad)
fcomp
stos
div
scas
stos
(bad)
in
xchg
outs
(bad)
sub
call
call
repnz
dec
jb
cld
dec
cmp
pop
lods
adc
not
icebp
sbb
les
mov
aas
mov
xchg
sub
cmp
cmp
xchg
dec
mov
xor
scas
xchg
sub
add
imul
sti
and
ss
mov
sub
jmp
(bad)
lods
or
sub
lods
outs
sub
add
xchg
push
add
add
push
cmc
cwde
and
add
add
cmp
das
mov
(bad)
das
repz
cmp
dec
push
add
add
inc
and
and
add
add
dec
movs
and
sbb
das
cmp
fcomp
das
mov
mov
pop
add
ficom
retf
movs
das
mov
inc
and
mov
(bad)
sub
dec
call
xor
cmp
fimul
dec
call
fimul
inc
and
inc
push
xchg
cld
mov
mov
mov
inc
or
aad
sub
xor
dec
call
xor
cmp
cwde
add
test
(bad)
dec
cld
sub
popf
das
cmp
movs
and
sbb
lahf
jp
(bad)
in
lods
das
cmp
mov
(bad)
in
popf
outs
call
sub
call
add
fdivr
add
lods
adc
sub
sub
dec
sbb
in
xchg
call
sub
add
sub
add
dec
cmp
mov
pop
in
add
mov
add
sbb
les
mov
aas
mov
xchg
sub
cmp
cmp
xchg
dec
mov
xor
scas
xchg
sub
add
imul
sti
and
ss
mov
sub
jmp
(bad)
lods
or
sub
lods
outs
sub
add
xchg
push
add
add
push
cmc
cwde
and
add
add
and
cwde
and
add
add
cmp
push
cmp
cwde
dec
movs
and
sbb
das
cmp
fcomp
das
mov
mov
pop
add
ficom
retf
movs
das
mov
inc
and
mov
(bad)
sub
dec
call
xor
cmp
fimul
dec
call
fimul
inc
and
(bad)
push
xchg
cld
out
das
mov
mov
inc
or
aad
sub
xor
dec
call
xor
cwde
add
cld
(bad)
(bad)
dec
cld
sub
sti
das
cmp
movs
and
sbb
(bad)
in
lods
das
cmp
adc
outs
call
sub
call
add
fdivr
add
lods
adc
sub
sub
dec
sbb
in
xchg
call
sub
add
sub
add
dec
cmp
mov
pop
in
add
mov
add
dec
icebp
sbb
les
jb
aas
mov
xchg
sub
dec
cmp
cmp
dec
in
sti
xchg
(bad)
in
lods
dec
mov
dec
movs
stos
jae
xchg
(bad)
mov
fcomp
stos
not
add
lods
sub
sub
dec
cmp
sbb
jge
add
dec
jb
cmp
dec
push
in
in
add
cmps
or
add
sbb
les
dec
dec
dec
inc
aaa
ss
add
call
add
sahf
mov
push
(bad)
mov
add
sti
in
pop
cmp
outs
cmp
stos
xchg
(bad)
imul
add
std
cwde
iret
sub
add
dec
mov
aaa
outs
in
div
loopne
(bad)
jmp
test
dec
test
xor
popf
push
cmp
jp
mov
aaa
dec
rcr
outs
sbb
cmp
cwde
mov
dec
(bad)
in
mov
js
(bad)
in
cmp
and
cmc
stos
dec
call
pop
xchg
jmp
out
dec
dec
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
adc
jmp
adc
mov
in
pop
dec
mov
sbb
test
in
(bad)
idiv
dec
jmp
dec
cmp
dec
sti
dec
push
(bad)
dec
cmp
push
int3
call
imul
sub
add
sahf
sti
add
les
xchg
dec
ror
dec
lea
imul
mov
repnz
mov
or
dec
mov
dec
jge
dec
int3
or
pop
(bad)
(bad)
inc
mov
cmc
lods
fisttp
mov
dec
jmp
push
cmc
cwde
lods
rol
add
push
jmp
lods
xor
add
aad
jmp
jecxz
cmp
dec
dec
jmp
add
add
dec
sbb
int
ret
outs
(bad)
out
xchg
mov
(bad)
(bad)
in
popf
dec
in
mov
cmps
neg
repnz
call
lods
outs
mov
in
repnz
dec
mov
dec
jge
or
dec
ret
and
mov
add
mov
(bad)
lock
xchg
repz
add
dec
cmp
dec
sar
ror
dec
sub
xchg
idiv
pop
lods
outs
cmp
stos
dec
push
or
popf
in
int
mov
div
daa
(bad)
jmp
jmp
outs
mov
lahf
sti
dec
js
xchg
lods
dec
(bad)
push
xchg
in
mov
inc
dec
outs
scas
jmp
dec
enter
idiv
add
popf
or
dec
test
inc
rcl
and
not
add
dec
cmp
rol
lahf
sti
dec
js
xchg
in
mov
in
neg
movs
push
ss
or
int3
fstp
loop
int3
lods
call
dec
ins
loop
dec
jo
iret
pusha
call
out
add
dec
mov
add
(bad)
sbb
es
add
outs
(bad)
popa
xor
hlt
push
loop
add
pop
int3
fsub
es
(bad)
mov
add
sti
dec
movs
xchg
push
dec
(bad)
ror
xchg
pop
xchg
jmp
mul
(bad)
jmp
dec
lea
rol
jno
jmp
fwait
stos
dec
call
push
cmp
dec
add
add
dec
call
or
add
cmp
les
xor
cmp
sti
stos
fsubr
push
cmp
jp
inc
xor
call
fs
mov
sbb
xor
add
dec
add
add
sbb
add
dec
add
in
fnstcw
fdiv
xchg
sar
adc
push
cmp
add
jmp
add
lods
sbb
cwde
loope
adc
pusha
add
lods
sbb
in
jecxz
cmp
lods
mov
sbb
or
dec
add
lods
mov
sbb
or
add
add
in
fldcw
cmp
jmp
inc
in
cwde
dec
sbb
fsubr
outs
mov
(bad)
call
add
hlt
dec
sbb
cmp
inc
(bad)
jmp
out
(bad)
in
xor
or
push
outs
in
cmp
cmc
into
add
dec
sbb
fsubr
and
in
jg
sbb
scas
inc
(bad)
call
(bad)
in
xchg
outs
into
dec
outs
in
cmp
xchg
into
add
fsubr
(bad)
in
scas
dec
ret
into
add
lods
xor
add
sbb
scas
jecxz
sbb
outs
cmp
cmp
mul
xor
jmp
add
pop
iret
pusha
shl
or
out
loope
push
dec
scas
mov
add
cmp
and
add
outs
inc
dec
or
fidivr
mov
in
int
jmp
cmp
mov
mov
xchg
push
dec
cmp
dec
mov
dec
dec
xchg
dec
cmp
xor
xchg
jecxz
fldenv
test
mov
push
lahf
(bad)
lods
xor
add
lods
and
dec
add
lods
mov
add
add
out
lods
mov
dec
dec
push
fmul
in
pop
dec
aaa
(bad)
in
sub
push
imul
add
dec
sbb
sbb
(bad)
mov
dec
fld
push
outs
in
push
in
lods
(bad)
in
pop
(bad)
in
sub
xor
sti
xchg
dec
faddp
lods
sub
pop
cwde
loope
adc
xchg
test
lods
sbb
add
add
in
pop
or
(bad)
in
sub
(bad)
in
mov
jmp
(bad)
in
push
dec
aaa
test
add
dec
sti
(bad)
in
scas
xchg
dec
rol
(bad)
in
xchg
jmp
outs
in
push
out
test
add
xchg
dec
faddp
dec
dec
mov
cmp
lods
sbb
cwde
or
dec
stos
(bad)
in
pop
outs
in
daa
(bad)
in
sub
xor
add
dec
sti
(bad)
in
xchg
xchg
dec
rol
(bad)
in
xchg
jmp
outs
in
daa
(bad)
out
imul
sti
xchg
dec
faddp
jecxz
lods
sbb
sbb
dec
sbb
cmp
(bad)
xor
add
cwde
iret
daa
add
add
in
pop
or
(bad)
in
sub
(bad)
in
mov
stos
outs
cmp
stos
(bad)
in
push
dec
aaa
idiv
add
dec
sti
(bad)
in
xor
(bad)
(bad)
in
xchg
jmp
outs
in
iret
(bad)
out
imul
add
dec
sti
lods
xor
add
(bad)
lods
sbb
mov
mov
mov
(bad)
outs
sbb
(bad)
out
dec
dec
dec
dec
push
not
dec
sbb
dec
sub
mov
jecxz
cmps
cmp
(bad)
in
pop
outs
cmp
(bad)
in
sub
in
mov
(bad)
in
push
dec
aaa
test
add
dec
sti
(bad)
in
xor
(bad)
(bad)
in
xchg
jmp
outs
in
push
out
test
(bad)
in
push
dec
in
popf
(bad)
in
lods
xchg
dec
faddp
stos
in
jmp
xchg
pop
xchg
xchg
test
xchg
fmul
dec
cmp
(bad)
(bad)
call
fwait
test
div
out
add
int3
fdivr
fwait
add
(bad)
mov
add
sti
dec
movs
xchg
sbb
adc
fwait
dec
(bad)
ror
jmp
test
jmp
mov
pusha
test
(bad)
dec
pusha
outs
cmp
stos
mul
mul
xchg
jns
mov
imul
in
scas
jns
dec
mov
(bad)
mov
jp
add
lahf
test
jecxz
dec
cmc
lods
mov
fimul
scas
jecxz
cmp
or
mov
scas
jecxz
cmp
or
mov
xchg
lahf
outs
cmp
xchg
xchg
dec
in
scas
lahf
fmulp
pusha
sar
call
loope
push
dec
scas
aad
lea
scas
or
fisubr
stos
outs
cmp
dec
stos
mul
cmp
cmp
or
cmp
cmp
in
or
xchg
and
push
in
scas
inc
mov
jp
inc
dec
inc
lods
and
dec
add
lods
mov
add
add
lods
outs
in
push
(bad)
in
xor
in
xchg
not
(bad)
in
cmc
dec
dec
sbb
in
xor
(bad)
in
xchg
outs
sbb
add
lods
sbb
(bad)
dec
(bad)
in
lods
xchg
jmp
dec
dec
cmc
(bad)
out
cmps
dec
scas
outs
in
add
shl
add
add
fwait
dec
sti
xchg
dec
faddp
lods
sub
dec
pusha
dec
dec
jmp
cwde
or
in
xchg
stos
(bad)
in
scas
outs
cmp
stos
(bad)
in
sbb
test
dec
(bad)
in
lods
dec
in
popf
xchg
dec
faddp
lods
dec
xchg
add
not
add
add
fmul
dec
cmp
or
push
imul
add
js
les
imul
and
call
mov
add
inc
add
push
cmp
dec
dec
in
xchg
dec
cmp
xchg
dec
cmp
push
sbb
js
les
dec
lea
xchg
dec
shr
xchg
stos
test
(bad)
(bad)
mov
cwde
or
and
call
pop
(bad)
inc
add
push
cmp
dec
dec
inc
lods
mov
jge
cmp
xchg
dec
cmp
int3
in
int3
js
les
xchg
dec
mov
fadd
xchg
imul
mov
add
call
dec
sti
dec
(bad)
in
xor
(bad)
in
xchg
outs
sbb
dec
xchg
dec
rol
lods
sbb
xchg
call
call
outs
in
(bad)
jmp
(bad)
out
neg
sti
xchg
dec
faddp
lods
sub
lods
lahf
adc
dec
dec
popf
dec
faddp
jge
xchg
mov
fwait
aas
inc
mov
add
xchg
dec
dec
lods
dec
mov
xchg
xchg
imul
and
(bad)
push
dec
call
or
push
test
dec
in
sti
test
add
lods
xor
add
xchg
outs
in
lods
div
pusha
in
mov
cmps
xchg
call
sti
in
pop
stos
inc
imul
(bad)
jmp
lods
div
(bad)
call
in
call
cwde
(bad)
call
add
imul
push
add
sahf
xchg
add
les
(bad)
in
popf
dec
dec
sti
lods
xor
add
mov
(bad)
dec
sti
test
(bad)
in
sti
lods
xor
add
adc
add
sti
test
(bad)
in
popf
dec
dec
sti
lods
xor
add
sahf
icebp
(bad)
dec
sti
test
(bad)
in
sti
lods
xor
add
mov
cmp
test
push
(bad)
mov
add
dec
cmp
xchg
(bad)
add
push
sbb
call
cmp
dec
popf
jecxz
lahf
les
les
mov
(bad)
dec
add
imul
test
mov
add
add
ja
add
dec
cmp
add
fcomp
mov
add
dec
cmp
xchg
les
mov
dec
popf
test
popf
fldcw
dec
mov
pop
(bad)
neg
(bad)
(bad)
inc
bound
add
mov
add
add
in
add
dec
cmp
add
js
les
sbb
dec
int3
or
dec
mov
sar
jbe
push
mov
jecxz
xchg
dec
and
dec
xlat
(bad)
outs
dec
dec
mov
in
mov
test
in
sti
dec
cmp
dec
test
out
or
mul
mov
dec
movs
or
jmp
ret
mov
add
mov
xchg
dec
in
sti
test
add
pop
test
out
(bad)
mov
add
add
(bad)
mul
add
pop
fiadd
mov
mov
or
(bad)
dec
dec
cmp
test
(bad)
dec
and
and
call
in
sti
outs
cmp
add
mov
in
addr16
mov
mov
(bad)
push
add
jae
ins
mov
stos
idiv
in
lea
xchg
inc
mov
dec
add
mov
outs
dec
(bad)
div
add
dec
push
div
add
int3
js
les
xchg
in
pusha
outs
mov
jmp
cmp
in
sti
mul
add
lods
sbb
js
les
dec
lea
call
(bad)
jmp
(bad)
out
(bad)
in
lods
(bad)
in
popf
idiv
(bad)
(bad)
(bad)
in
lods
dec
mov
in
xchg
(bad)
in
scas
neg
cmp
jmp
ds
jmp
mov
jecxz
inc
(bad)
outs
xor
mov
(bad)
dec
jge
pop
neg
in
xchg
dec
mov
aad
xchg
call
sub
dec
pusha
call
pop
repz
(bad)
(bad)
jge
int3
fadd
fwait
mov
add
dec
in
sti
lods
xor
sub
or
add
pop
loopne
mov
in
push
mov
(bad)
inc
pop
aaa
ss
mov
outs
aaa
dec
lods
mov
(bad)
aaa
cmp
pop
xchg
mov
pop
dec
faddp
outs
stos
mov
and
call
in
dec
imul
mov
mul
add
sahf
mov
inc
mov
add
dec
in
sti
lods
xor
stos
mov
jb
loopne
mov
in
push
mov
(bad)
inc
cmp
ss
mov
out
aaa
dec
mov
(bad)
aaa
cmp
cmp
mov
cmp
(bad)
outs
stos
mov
and
call
in
dec
test
dec
mul
add
sahf
mov
add
test
sti
in
inc
cwde
iret
mov
add
aad
cwde
and
add
add
lods
mul
lea
mov
loop
cmp
stos
dec
cmp
jmp
(bad)
call
jmp
stos
aaa
cmp
not
(bad)
push
cmp
xchg
(bad)
aaa
sbb
(bad)
mov
add
popf
lahf
jp
inc
dec
dec
sti
fdivr
xchg
jmp
mov
cmp
lea
(bad)
jmp
inc
dec
call
cmc
idiv
(bad)
(bad)
fadd
mov
nop
dec
add
int3
js
les
xchg
outs
mov
imul
(bad)
dec
pusha
cwde
and
in
sti
dec
or
dec
push
mov
cmp
xchg
mov
add
(bad)
call
add
repnz
in
xchg
test
sti
cwde
or
mov
lods
xchg
jmp
rcr
add
dec
ss
stos
outs
cmp
dec
call
add
xchg
div
(bad)
jmp
(bad)
neg
(bad)
dec
sti
iret
pusha
call
popf
dec
sbb
outs
popf
mov
dec
add
dec
inc
popf
dec
or
add
dec
inc
popf
dec
or
add
jge
pop
neg
les
fimul
scas
xchg
les
xchg
xchg
lea
popf
xchg
mov
cmp
lahf
mov
mov
test
(bad)
dec
pusha
in
cmps
not
cmp
dec
movs
dec
mov
add
mov
jecxz
add
mov
mov
into
xor
in
xchg
lods
into
xor
outs
in
mov
fld
scas
neg
pusha
call
sti
xchg
dec
dec
fstp
dec
sbb
(bad)
in
mov
in
fcos
in
xor
in
xchg
(bad)
in
scas
test
add
lahf
dec
outs
in
mov
pop
xor
jmp
jp
add
add
(bad)
dec
dec
mov
add
mov
jp
add
mov
pop
xor
jmp
xor
js
(bad)
dec
pusha
call
sti
xchg
dec
dec
mov
in
neg
push
mov
dec
call
add
push
ss
test
dec
add
mov
add
dec
ss
mov
dec
call
add
js
les
xchg
outs
cmp
lahf
mov
dec
push
cld
dec
mov
mov
mov
cld
dec
mov
jp
sahf
cld
xchg
in
popa
dec
cmp
xchg
inc
dec
cmp
xchg
inc
(bad)
outs
dec
sti
outs
inc
call
scas
fisttp
dec
xchg
mov
sahf
push
mov
dec
cmp
xchg
inc
(bad)
in
sbb
push
dec
call
call
mov
add
in
js
les
movs
dec
sub
and
in
mov
sbb
scas
or
push
mov
into
lods
dec
aaa
or
pop
(bad)
(bad)
(bad)
jmp
or
lods
fisttp
mov
dec
jmp
push
cmc
cwde
lods
and
add
push
jmp
lods
xor
add
aad
jmp
jecxz
cmp
dec
dec
jmp
ficomp
(bad)
dec
popf
or
popf
in
int
dec
(bad)
pop
fadd
dec
add
dec
in
mov
cmp
mov
popf
dec
inc
lods
outs
jb
jp
and
popf
dec
into
lods
or
push
push
stos
idiv
dec
cmp
outs
mov
rol
repz
add
dec
cmp
push
shr
or
sar
dec
aaa
mul
mov
lods
dec
aaa
or
popf
in
not
loop
xchg
call
dec
sahf
dec
push
lods
repnz
push
rep
sbb
test
lods
dec
dec
popf
outs
inc
test
loop
push
xchg
in
jnp
mov
or
xchg
mov
dec
sbb
idiv
mov
lods
dec
cmp
and
outs
popf
inc
and
imul
cmp
sar
test
xchg
movs
jge
pop
neg
les
and
xor
aaa
push
mov
xchg
add
dec
xchg
mov
mov
add
jge
int3
dec
shl
and
call
xchg
dec
dec
bound
test
cs
add
xchg
xor
(bad)
lods
cs
add
js
les
xor
xchg
jecxz
xchg
inc
dec
mov
sti
dec
mul
aad
scas
pop
mov
add
xchg
jecxz
xor
scas
dec
aaa
dec
mul
push
xchg
pop
jp
dec
dec
fimul
lods
dec
nop
jp
mov
add
sub
sub
(bad)
dec
lods
xchg
repnz
inc
lods
dec
(bad)
xchg
lods
mov
and
call
add
xor
pop
sbb
les
dec
push
and
inc
popa
xchg
dec
mov
add
not
lea
(bad)
dec
sbb
fwait
and
(bad)
mov
add
scas
mov
(bad)
call
mov
xchg
xchg
jae
add
neg
jg
jmp
cmp
outs
dec
out
leave
xor
push
ins
mov
stos
imul
add
dec
xchg
push
rep
sar
jecxz
sti
mov
or
push
sahf
pop
jecxz
dec
lea
xchg
dec
dec
lea
jecxz
xchg
in
push
dec
dec
dec
and
not
xor
add
dec
mov
outs
scas
mov
dec
or
and
test
dec
or
and
ficom
push
or
xchg
imul
aad
sbb
dec
dec
test
test
and
inc
xchg
dec
mov
jb
xchg
(bad)
in
int
inc
lods
mov
add
mov
push
addr16
cmp
dec
dec
nop
jp
(bad)
repnz
les
movs
outs
(bad)
aad
idiv
jp
add
mov
in
pusha
movs
sbb
inc
lods
and
mov
add
mov
inc
lods
dec
cmp
loope
add
int3
cmp
dec
lea
(bad)
xchg
dec
mov
fimul
dec
jle
and
repnz
and
(bad)
dec
sti
lahf
jp
mul
pusha
call
pusha
dec
fidiv
jecxz
xchg
aad
(bad)
mov
add
and
dec
ss
jp
pusha
aad
scas
pop
jg
inc
call
pusha
or
scas
and
dec
inc
lahf
jp
inc
dec
inc
lods
dec
(bad)
fwait
jge
outs
(bad)
mov
int3
js
les
popf
dec
cmp
xchg
dec
mov
jmp
mov
js
xchg
les
mov
dec
mov
dec
dec
faddp
xchg
xchg
and
shl
mov
in
les
jmp
add
int3
in
int3
fcomp
mov
add
sti
dec
rcl
push
mov
pop
add
lods
mov
call
mul
pop
add
dec
cmp
dec
or
or
dec
mov
dec
dec
popf
or
xchg
les
dec
lods
cwde
iret
ja
add
push
mov
jmp
dec
cmp
or
dec
push
imul
add
lods
cmp
in
sti
dec
mov
push
neg
(bad)
call
shl
mov
add
add
cmp
add
dec
inc
xor
dec
call
jecxz
xchg
mul
in
pusha
lahf
mov
in
cmp
jp
add
dec
cmp
ins
stos
dec
push
idiv
jmp
jmp
jmp
lahf
hlt
dec
shl
and
call
(bad)
lods
cs
add
stos
xor
jmp
cmp
aaa
dec
call
add
inc
xor
dec
call
add
inc
xor
dec
call
add
ficomp
add
fwait
stc
jp
mov
add
lods
pop
add
lods
test
add
mov
in
mul
xchg
mov
mov
popf
lahf
jp
pusha
xchg
dec
push
imul
pop
add
sahf
mov
call
test
(bad)
call
add
test
dec
les
sti
dec
dec
mov
xlat
jp
(bad)
hlt
and
sub
and
test
add
lods
sub
dec
les
xor
ss
inc
xchg
sub
cmp
scas
outs
push
sub
test
add
dec
inc
popf
dec
xchg
dec
faddp
dec
mov
xor
sub
mul
add
lods
or
cmp
jb
xor
xchg
in
rol
pop
dec
icebp
sbb
js
les
sti
dec
push
mov
(bad)
sti
call
and
(bad)
jl
add
in
sahf
mov
dec
dec
lea
mov
inc
xor
jecxz
inc
scas
pop
mov
dec
xchg
and
in
ss
in
dec
nop
jecxz
dec
int3
dec
mul
dec
mov
mov
add
sub
mov
(bad)
dec
lods
xchg
cwde
dec
inc
lods
dec
(bad)
or
mov
pusha
call
test
xor
in
in
sbb
les
dec
inc
dec
fimul
xor
aaa
push
mov
add
dec
xchg
cmp
retf
xchg
outs
cmp
add
cmp
cmp
add
push
call
xchg
add
push
retf
jge
pop
neg
stc
popf
and
call
dec
data16
call
add
dec
les
xchg
dec
faddp
dec
dec
in
sti
xchg
xchg
outs
into
lods
xchg
mov
idiv
(bad)
(bad)
jge
int3
in
sahf
mov
cmp
dec
dec
dec
inc
aaa
ss
retf
call
add
sahf
mov
and
out
xchg
dec
pop
(bad)
and
idiv
xor
add
mul
inc
call
sub
dec
fidiv
dec
js
jecxz
xchg
jecxz
push
mov
call
pusha
push
pop
xchg
scas
mov
add
mov
mov
(bad)
(bad)
jge
neg
fwait
retf
mov
add
inc
inc
mov
dec
in
mov
mov
(bad)
mov
mov
mov
add
mov
dec
faddp
lahf
jp
pusha
push
push
in
xchg
fcomp
data16
mov
in
jmp
push
call
add
std
idiv
add
in
sti
aaa
cmp
dec
add
add
stos
test
jmp
dec
lea
div
mov
imul
add
int3
js
les
popf
dec
sti
xchg
dec
rol
xchg
dec
sti
dec
faddp
cmp
cmp
dec
xchg
xchg
test
and
cmps
dec
inc
popf
dec
dec
mov
sti
dec
dec
mov
mov
stos
outs
mov
dec
dec
sbb
mov
add
mov
cld
test
sti
xchg
dec
lahf
and
inc
popf
dec
dec
les
sti
xchg
dec
dec
lea
popf
outs
and
movd
popf
dec
imul
add
mov
neg
fwait
jp
(bad)
mov
add
sti
in
pop
xchg
jmp
(bad)
aaa
mov
outs
pop
(bad)
neg
push
int3
call
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
outs
pop
fld
xchg
les
dec
lea
jmp
neg
lods
dec
or
xchg
xchg
outs
cmp
add
and
add
jmp
dec
ss
inc
mov
outs
inc
mov
and
in
imul
sti
loop
cwde
dec
sti
jl
inc
mov
dec
xchg
lods
pusha
sti
lods
out
dec
mov
sti
xchg
inc
mov
add
add
fwait
xsavec
add
popf
dec
pop
popf
dec
sbb
outs
shr
lods
lods
int3
(bad)
dec
mov
xchg
dec
aaa
xchg
push
neg
stos
dec
int3
test
add
idiv
aad
call
add
dec
add
pop
add
add
test
jg
in
popf
test
add
xchg
popf
lahf
jecxz
in
popf
dec
cmp
mov
xchg
aaa
cmp
dec
add
add
movs
dec
add
push
dec
movs
imul
add
dec
dec
popf
xchg
dec
dec
div
sti
add
les
and
sti
cmp
dec
movs
outs
scas
(bad)
xchg
dec
pop
popf
dec
inc
lods
or
popf
xchg
aaa
inc
or
lahf
dec
add
dec
or
xchg
not
add
add
add
cmc
dec
add
in
test
fldcw
mov
int3
call
xchg
dec
inc
mov
neg
add
jge
in
pusha
pop
neg
add
mov
pusha
call
lahf
hlt
outs
loop
dec
mov
lea
call
repz
or
jge
lods
rol
call
xchg
dec
push
int3
fadd
fwait
mov
arpl
add
dec
rol
aaa
cmp
dec
add
add
push
mov
outs
pop
(bad)
imul
jbe
inc
dec
aaa
mov
call
add
mov
add
fwait
mov
pop
add
dec
in
sti
in
pop
aaa
cmp
sti
add
add
jb
and
call
push
cmp
mov
neg
jmp
or
dec
dec
cmp
lods
push
cmp
mov
neg
jmp
or
and
call
push
cmp
jecxz
or
and
call
push
cmp
jp
or
and
call
rcr
jmp
or
dec
dec
cmp
lods
push
cmp
add
popf
and
call
lods
dec
jmp
dec
or
and
call
test
add
sahf
mov
or
and
in
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
dec
sbb
jp
cmc
scas
jg
cmp
xchg
shr
imul
ss
stos
outs
cmp
stos
outs
cmp
pop
sub
sahf
mov
inc
popf
dec
mov
mov
add
popf
outs
(bad)
fwait
int3
jae
jp
add
not
cmp
dec
shr
xchg
rol
(bad)
(bad)
inc
sti
xchg
jmp
and
mov
outs
mov
xchg
sbb
outs
mov
xchg
cmp
outs
mov
xchg
test
mov
xchg
cmc
test
inc
out
xchg
fiadd
outs
mov
xchg
pusha
test
inc
fiadd
inc
rol
inc
xor
jmp
dec
add
push
pop
(bad)
mov
jmp
outs
(bad)
(bad)
push
mov
add
lods
les
push
cmp
sbb
xchg
(bad)
(bad)
push
pop
(bad)
mov
jmp
lods
(bad)
(bad)
push
ret
add
jmp
dec
add
push
pop
(bad)
mov
jmp
sar
(bad)
push
sbb
les
push
cmp
popf
dec
add
push
pop
(bad)
mov
jmp
or
adc
add
push
cmp
jg
les
dec
add
push
pop
(bad)
mov
jmp
push
sbb
sub
popf
(bad)
(bad)
push
pop
(bad)
mov
jmp
fwait
neg
les
push
cmp
cwde
dec
add
push
pop
(bad)
mov
jmp
cmp
cmp
add
lods
les
push
cmp
lods
dec
add
push
pop
(bad)
mov
jmp
xor
(bad)
push
dec
popf
add
outs
and
add
test
call
jmp
imul
lods
add
xchg
jmp
(bad)
dec
mov
cmp
popa
xchg
sti
(bad)
(bad)
dec
cmp
(bad)
(bad)
jmp
outs
(bad)
(bad)
jmp
(bad)
jmp
stos
test
push
iret
cwde
add
dec
outs
jmp
(bad)
jmp
(bad)
jmp
idiv
hlt
add
dec
(bad)
fcom
push
cmp
scas
not
sbb
call
jmp
push
int3
call
pop
add
lahf
jp
pusha
push
cmp
scas
dec
cli
mov
fmul
lods
in
inc
cmp
dec
outs
outs
cmp
inc
push
mov
push
sub
dec
outs
outs
mov
(bad)
push
dec
inc
push
(bad)
call
jmp
test
add
(bad)
jmp
sar
(bad)
jmp
outs
sti
(bad)
(bad)
jmp
stos
test
inc
call
sti
(bad)
(bad)
(bad)
mov
(bad)
push
pusha
sub
jmp
dec
outs
sbb
(bad)
(bad)
jmp
sti
(bad)
(bad)
jmp
daa
test
call
popf
(bad)
(bad)
push
idiv
cwde
add
push
cmp
adc
jmp
(bad)
jmp
mov
(bad)
call
sti
(bad)
(bad)
(bad)
mov
add
(bad)
call
jmp
xchg
(bad)
(bad)
jmp
sti
(bad)
(bad)
jmp
push
mov
call
sti
(bad)
(bad)
dec
test
add
mov
push
cmp
out
mov
(bad)
cmp
xchg
outs
outs
cmp
test
popf
test
push
test
xchg
outs
outs
push
(bad)
push
sub
xchg
outs
outs
mov
(bad)
call
jmp
div
add
test
jmp
cmp
(bad)
push
inc
lods
add
xchg
popf
(bad)
(bad)
jmp
jecxz
(bad)
jmp
cmp
fild
(bad)
call
jecxz
(bad)
call
mul
and
(bad)
(bad)
dec
fiadd
xchg
mov
(bad)
dec
jmp
(bad)
inc
jmp
push
outs
outs
mov
(bad)
jmp
stos
test
push
(bad)
jg
add
(bad)
call
jmp
dec
outs
add
(bad)
jmp
add
(bad)
mov
call
jmp
dec
sbb
lods
add
lods
sbb
cmp
mov
adc
and
cmp
mov
int3
call
pop
add
lahf
jp
pusha
push
cmp
mov
sbb
xchg
(bad)
push
add
jmp
mov
push
sbb
outs
outs
push
mov
push
mov
test
cmp
outs
outs
mov
jmp
(bad)
cmp
outs
outs
cmp
jmp
(bad)
cmp
outs
outs
push
mov
push
cmps
jmp
(bad)
cmp
outs
outs
mov
(bad)
push
imul
test
cmp
outs
outs
push
(bad)
push
sbb
test
cmp
outs
outs
popf
test
call
jmp
neg
test
dec
sub
test
jmp
or
(bad)
jmp
stos
test
call
mov
(bad)
call
xchg
mov
rcr
jmp
dec
outs
test
(bad)
jmp
mov
(bad)
jmp
daa
test
call
mov
not
jg
add
jmp
xchg
mov
outs
and
sub
and
test
add
(bad)
call
jmp
xchg
test
jmp
mov
(bad)
jmp
push
mov
call
mov
(bad)
call
pop
jg
add
cmp
jmp
neg
add
in
(bad)
cmp
xchg
outs
outs
cmp
ret
cmp
outs
outs
popf
test
push
push
ret
cmp
outs
outs
push
(bad)
push
mov
xchg
outs
outs
mov
(bad)
call
jmp
test
cmc
test
jmp
cmp
(bad)
push
jg
add
dec
(bad)
fsubr
push
cmp
sub
sub
add
mov
(bad)
call
jmp
push
int3
call
add
lahf
jp
pusha
push
cmp
sub
test
fadd
push
add
jmp
test
call
jmp
mul
ret
fwait
lea
fimul
and
mov
test
test
inc
dec
fimul
add
sub
imul
call
xchg
test
dec
fimul
mov
add
sub
jmp
fiadd
test
(bad)
fdivr
xchg
outs
add
jmp
out
(bad)
jmp
test
inc
(bad)
mov
(bad)
inc
dec
mov
sbb
out
(bad)
jmp
mov
add
(bad)
jmp
daa
test
jmp
and
test
dec
cmp
daa
test
jmp
cmp
inc
push
lahf
clc
add
mov
fcomp
outs
add
test
push
add
das
(bad)
mov
in
pusha
dec
xor
push
mov
fmul
lods
pop
pusha
pop
(bad)
mov
(bad)
push
sub
add
push
cmp
pop
lods
pop
xchg
sti
mov
jecxz
pusha
(bad)
stos
outs
and
test
jmp
add
(bad)
jmp
not
jg
add
pop
add
mov
(bad)
call
jmp
not
cmp
cmps
lods
pop
xchg
sti
mov
jecxz
pusha
(bad)
stos
outs
and
idiv
stos
outs
and
(bad)
jmp
mul
sub
jmp
dec
xchg
outs
add
test
call
jmp
neg
jg
add
out
(bad)
call
jmp
neg
add
jmp
jns
jecxz
(bad)
call
outs
jecxz
(bad)
(bad)
fmul
test
(bad)
fcom
mov
test
dec
test
(bad)
(bad)
jns
jecxz
(bad)
call
outs
sub
and
test
(bad)
out
outs
add
(bad)
(bad)
jmp
pushf
test
jmp
imul
xchg
(bad)
(bad)
dec
test
(bad)
call
ss
(bad)
dec
outs
add
(bad)
(bad)
jmp
and
and
(bad)
jmp
outs
jp
(bad)
jmp
and
test
inc
(bad)
push
in
add
mov
push
cmp
ins
imul
mov
add
(bad)
(bad)
in
pop
push
cmp
dec
push
int3
call
lods
add
lahf
jp
pusha
dec
and
jmp
dec
push
mov
fmul
lods
outs
and
test
jmp
idiv
jecxz
add
out
(bad)
jmp
idiv
add
outs
and
test
jmp
test
add
outs
and
(bad)
jmp
neg
jecxz
add
mov
cmp
cmps
not
add
cmp
dec
outs
add
dec
test
sbb
sub
jbe
add
outs
and
test
call
jmp
idiv
add
cmp
dec
outs
add
(bad)
call
jmp
imul
test
add
lea
mov
(bad)
call
mov
test
int3
call
lea
add
(bad)
mov
pusha
dec
sbb
push
mov
fmul
lods
inc
xchg
test
jmp
xor
(bad)
jmp
(bad)
push
rol
out
outs
outs
jecxz
(bad)
jmp
mov
and
(bad)
(bad)
call
fcomi
add
pop
cmp
(bad)
mov
dec
shl
out
ret
pop
(bad)
mov
fucomip
ret
les
test
inc
inc
jmp
les
test
jmp
imul
jmp
call
mov
inc
push
retf
repnz
dec
(bad)
fmul
not
pop
add
(bad)
(bad)
in
pop
push
cmp
in
push
int3
call
lods
add
lahf
jp
pusha
dec
add
push
mov
fmul
lods
cmp
dec
outs
outs
popf
test
push
add
cmp
dec
outs
outs
push
(bad)
push
loope
test
cmp
dec
outs
outs
mov
(bad)
call
jmp
not
call
pop
(bad)
mov
(bad)
push
test
add
jmp
lods
pop
xchg
sti
mov
jecxz
pusha
(bad)
stos
outs
and
test
add
(bad)
(bad)
jmp
push
cmp
inc
stos
outs
add
test
inc
push
data16
add
jmp
dec
outs
mov
(bad)
inc
jmp
(bad)
(bad)
(bad)
jmp
outs
data16
(bad)
(bad)
(bad)
in
xchg
popf
(bad)
(bad)
push
outs
sbb
add
push
cmp
or
xor
add
mov
(bad)
(bad)
in
pop
push
cmp
or
stos
dec
call
add
adc
push
(bad)
in
push
add
jmp
call
jmp
div
add
outs
and
test
call
jmp
neg
add
outs
and
cmp
(bad)
imul
add
outs
add
(bad)
push
mov
xchg
outs
outs
xor
(bad)
push
jl
test
cmp
outs
dec
cmp
loopne
test
cmp
outs
dec
fwait
imul
test
cmp
outs
dec
push
lods
rol
or
stc
rol
sar
(bad)
push
cmp
xchg
outs
outs
lods
(bad)
(bad)
push
jge
test
cmp
outs
outs
outs
(bad)
(bad)
push
psrlw
(bad)
push
cmp
add
(bad)
and
call
lods
int3
dec
dec
out
and
dec
div
test
jp
add
mov
fmul
dec
lods
imul
fadd
fmul
dec
xchg
mul
fadd
fmul
dec
fdecstp
fnsave
add
dec
lods
dec
sti
mul
test
int3
repz
add
dec
dec
(bad)
fadd
fmul
or
neg
mov
push
or
add
in
js
les
repz
add
lods
pusha
popf
stos
test
add
dec
lods
dec
(bad)
mul
mov
dec
fadd
fmul
dec
xor
imul
inc
add
fadd
fmul
or
mov
(bad)
fadd
fmul
or
test
test
int3
fadd
fwait
jmp
shl
dec
in
sti
lods
xor
add
popf
test
add
lods
dec
jmp
outs
inc
(bad)
neg
cmp
add
fisubr
add
les
mov
dec
mov
int3
or
popf
dec
mov
inc
cmps
outs
in
(bad)
neg
stos
(bad)
(bad)
(bad)
in
lea
lods
(bad)
in
les
popf
outs
cmp
dec
sar
dec
sbb
je
add
lahf
outs
scas
push
outs
in
mov
rcr
(bad)
dec
popf
outs
in
(bad)
imul
(bad)
dec
les
lea
mul
pop
in
fcomip
push
mov
add
pusha
dec
dec
sti
outs
dec
pop
and
call
jecxz
repz
pop
push
scas
popf
scas
mov
add
in
mov
in
mov
(bad)
in
std
stos
dec
aaa
not
in
neg
fwait
daa
retf
(bad)
mov
add
cmp
stos
dec
call
(bad)
fadd
fmul
dec
sti
imul
push
not
add
sahf
xor
js
les
dec
lea
lods
xchg
dec
rcr
dec
jmp
(bad)
(bad)
in
(bad)
in
pop
lahf
dec
push
mov
mov
add
ss
test
or
dec
ret
in
scas
dec
cmp
call
add
popf
push
shr
add
xchg
mov
inc
in
adc
xchg
and
add
pusha
outs
mov
push
pop
lods
pop
pop
and
dec
inc
lahf
ss
ss
(bad)
in
inc
push
rcr
add
dec
cmp
dec
dec
mov
in
sti
pop
neg
les
sbb
dec
mov
dec
xchg
outs
in
mov
push
(bad)
dec
sti
dec
jecxz
pusha
call
imul
and
add
(bad)
push
js
call
mov
xchg
dec
xlat
jp
(bad)
hlt
and
sub
and
neg
daa
add
lods
sub
int3
pop
neg
les
dec
inc
dec
or
imul
mov
repnz
inc
scas
or
dec
mov
and
cwde
iret
call
dec
int3
or
pop
(bad)
(bad)
inc
mov
cmc
push
sbb
dec
(bad)
dec
jmp
aaa
push
cmc
cwde
lods
add
add
push
jmp
lods
xor
add
aad
jmp
jecxz
cmp
dec
dec
jmp
test
or
popf
xchg
mov
ret
mov
and
inc
pop
dec
js
dec
popa
dec
xchg
lods
dec
(bad)
lods
mov
inc
dec
cmc
dec
cmp
(bad)
in
lods
outs
(bad)
push
dec
sbb
inc
lods
idiv
inc
popf
dec
or
jecxz
and
mov
add
mov
(bad)
lods
xchg
outs
(bad)
ja
inc
lods
xchg
popf
repz
dec
lods
dec
int3
or
dec
mov
cmp
dec
add
dec
aaa
dec
and
cmp
outs
scas
sti
and
idiv
scas
(bad)
dec
lods
dec
sahf
or
lods
dec
mov
test
mov
movs
sbb
cmp
dec
inc
lods
dec
inc
lods
or
dec
cmp
xchg
lods
pusha
(bad)
push
push
in
mov
and
dec
and
ret
xchg
sti
xchg
dec
enter
and
lods
dec
cmp
and
rcl
and
idiv
jns
add
lods
lods
sub
sti
dec
js
xchg
in
mov
in
neg
les
(bad)
and
call
outs
js
ud0
jecxz
xchg
inc
sahf
mov
inc
mov
add
in
pop
lods
xor
add
in
sub
pusha
(bad)
in
fld
in
xor
cmc
(bad)
in
add
cmp
mov
not
xor
add
xor
or
ret
(bad)
(bad)
in
lods
dec
out
(bad)
in
popf
dec
pop
(bad)
(bad)
in
xchg
(bad)
in
scas
mul
dec
(bad)
in
lods
xchg
add
in
popf
idiv
(bad)
jmp
fadd
outs
dec
cmc
and
in
add
pop
out
(bad)
(bad)
fadd
fmul
in
cmc
idiv
jmp
aas
add
sahf
sub
fdivr
fwait
push
retf
(bad)
mov
add
(bad)
in
sti
lods
xor
neg
xor
add
xchg
adc
cmp
outs
cmp
stos
outs
dec
fwait
neg
les
mov
outs
dec
cmp
adc
test
xchg
ss
cmp
xchg
outs
cmp
idiv
add
clc
jle
dec
imul
mov
retf
(bad)
mov
add
in
sti
lods
xor
add
add
outs
les
outs
cmp
stos
outs
dec
adc
(bad)
fadd
fmul
dec
add
stos
jle
push
cmp
dec
add
add
push
shl
outs
cmp
imul
les
outs
dec
adc
dec
imul
mov
dec
hlt
lods
xor
add
xchg
(bad)
dec
sti
xchg
sti
dec
rol
lods
pusha
sti
xchg
popf
stos
outs
or
dec
push
test
dec
sti
lods
xor
add
dec
xchg
outs
pop
sti
div
aaa
in
int3
js
les
dec
hlt
lods
xor
add
xchg
(bad)
dec
sti
xchg
sti
dec
rol
dec
lods
pusha
sti
outs
pop
lods
xchg
popf
not
add
dec
aaa
in
int3
fadd
fwait
mov
(bad)
mov
add
fdivp
pop
lock
mov
xor
add
pusha
call
jecxz
add
lahf
jp
pusha
lods
dec
jmp
dec
or
xchg
and
call
lods
dec
push
test
add
fwait
pop
retf
(bad)
mov
add
in
sti
lods
xor
test
test
lods
xor
add
popf
jns
sar
adc
outs
dec
push
div
add
dec
outs
dec
cmc
mul
test
aaa
cmp
dec
add
add
adc
push
stos
outs
or
test
test
fadd
fmul
dec
push
idiv
test
dec
push
mul
add
add
imul
ror
dec
in
sti
dec
sti
lods
xor
rol
lods
pusha
sti
xchg
(bad)
stos
outs
or
test
test
lods
xor
add
lods
aaa
(bad)
xchg
outs
or
sub
mov
push
mul
add
cmp
test
add
(bad)
in
sti
lods
xor
imul
jmp
xor
add
cmc
stos
outs
dec
push
test
test
fadd
fmul
dec
cmc
div
arpl
add
add
adc
push
stos
outs
or
idiv
jmp
outs
dec
push
mul
arpl
add
add
(bad)
fwait
jmp
mov
add
dec
in
sti
lods
xor
test
add
mov
outs
or
xchg
idiv
repz
dec
push
div
data16
int3
fdivr
fwait
push
push
(bad)
mov
add
lods
xor
in
(bad)
mul
jmp
pop
inc
xchg
lea
or
not
jns
iret
pusha
in
gs
push
test
add
int3
js
les
(bad)
in
popf
lods
xor
add
in
sti
idiv
cmp
test
push
(bad)
mov
add
sti
(bad)
in
popf
lods
xor
repnz
(bad)
in
lods
lods
xor
add
sti
stos
neg
add
neg
add
int3
js
les
lods
xor
add
loop
add
dec
cmp
jns
rol
dec
push
test
lods
xor
add
sbb
and
add
jns
lods
rol
dec
push
test
lods
xor
add
dec
lea
imul
scas
popf
dec
dec
sbb
jmp
add
jns
lods
rol
jge
int3
in
int3
js
les
jns
lods
xor
add
sub
mov
test
dec
les
lods
xor
add
fsub
ret
jns
shr
scas
dec
rol
lods
pusha
sti
xchg
xchg
stos
outs
sub
div
dec
int3
in
int3
js
les
(bad)
in
sti
lods
xor
add
jge
add
dec
cmp
sti
dec
push
neg
les
lods
xor
add
dec
lea
test
add
dec
inc
sti
dec
in
sti
xchg
outs
into
popf
imul
test
inc
mov
add
dec
sbb
lods
xor
add
jecxz
das
(bad)
mov
mov
mov
stos
outs
or
xchg
(bad)
neg
test
mov
lods
aaa
pop
xchg
outs
or
sub
and
test
dec
int3
neg
mov
outs
pop
(bad)
aaa
mov
imul
inc
(bad)
push
mov
jge
int3
js
les
dec
xchg
dec
mov
popf
outs
jno
stos
dec
aaa
dec
call
add
sub
lods
push
sub
call
add
sub
outs
popf
xchg
dec
cmp
xchg
lahf
ss
cmp
lods
sti
(bad)
jge
pop
dec
icebp
sbb
fwait
mov
(bad)
mov
add
fcom
not
add
mov
xor
add
pusha
call
lods
(bad)
(bad)
call
fadd
add
aaa
dec
or
add
test
add
dec
cmp
xor
add
mov
dec
sti
xchg
(bad)
dec
rol
xchg
sti
dec
sar
xchg
popf
dec
rcr
pop
scas
xchg
lods
div
aaa
imul
add
sahf
sti
add
inc
fadd
fmul
or
aaa
ss
das
(bad)
mov
push
or
js
les
in
popf
dec
sbb
outs
loop
test
add
dec
int3
pop
sbb
fwait
mov
(bad)
mov
add
fcomp
div
add
mov
xor
add
pusha
call
not
jp
pusha
not
fadd
fwait
gs
(bad)
mov
add
dec
sbb
lods
xor
add
(bad)
dec
aaa
jecxz
das
(bad)
mov
hlt
add
push
cmp
dec
dec
mov
lods
aaa
rcl
inc
cmp
xchg
pushf
test
dec
int3
test
add
dec
rcr
outs
pop
(bad)
fmul
or
aaa
mov
test
mov
push
mov
jge
int3
js
les
sbb
(bad)
dec
int3
outs
mov
add
dec
mov
xor
cmp
popf
mul
popf
and
sbb
or
sti
lahf
ss
cmp
lods
sti
(bad)
jge
pop
sbb
fwait
mov
(bad)
mov
add
fdiv
jmp
xchg
lea
pusha
call
imul
call
xchg
jbe
add
fadd
fwait
int3
in
(bad)
mov
add
popf
dec
in
sti
lods
xor
add
ss
das
(bad)
mov
mov
icebp
test
dec
push
not
jbe
add
inc
fadd
fmul
or
aaa
ss
das
(bad)
mov
push
or
js
les
sti
cmp
sbb
push
add
dec
cmp
pop
sbb
fwait
mov
(bad)
mov
add
fsubr
imul
jmp
cmp
and
popf
lods
push
(bad)
dec
stos
mul
jp
pusha
mul
add
int3
js
les
mov
and
pop
add
dec
cmp
jge
sahf
sti
add
dec
mul
jmp
pusha
call
push
(bad)
outs
pop
(bad)
aaa
add
das
(bad)
mov
int3
in
pusha
in
fadd
fwait
dec
mov
mov
add
sti
lods
xor
add
(bad)
aaa
jecxz
das
(bad)
mov
imul
pop
popf
xchg
dec
call
add
lods
shl
xor
add
sahf
mov
ret
(bad)
mov
add
xchg
lea
ss
das
(bad)
mov
outs
inc
lods
stos
imul
or
out
add
js
les
dec
xchg
outs
cmp
stos
dec
cmp
imul
add
dec
mov
outs
cmp
stos
outs
inc
sbb
int3
lods
add
dec
cmp
and
(bad)
jecxz
lahf
jecxz
sbb
and
cld
push
outs
cmp
lods
push
popf
dec
test
add
dec
cmp
outs
popf
or
sti
lahf
ss
cmp
lods
sti
(bad)
jge
neg
fwait
mov
(bad)
mov
add
fsubr
not
rol
mov
xor
add
pusha
call
rol
not
add
int3
js
les
scas
cmp
dec
in
popf
xchg
dec
mov
xchg
dec
push
xchg
xchg
imul
lods
add
lods
inc
add
dec
cmp
lods
dec
mov
xchg
dec
faddp
dec
jb
scas
xchg
sub
outs
cmp
lods
stos
dec
push
div
add
lods
cld
sub
dec
inc
popf
dec
cmp
xor
dec
aaa
jge
pop
dec
icebp
sbb
lods
dec
inc
not
mov
pusha
call
add
(bad)
mov
imul
in
fadd
fwait
aas
in
(bad)
mov
add
sti
lods
xor
add
(bad)
aaa
jecxz
das
(bad)
mov
test
jns
scas
rcl
scas
dec
push
xchg
lods
sahf
xor
shl
mul
test
dec
int3
imul
mov
add
inc
fadd
fmul
or
aaa
ss
test
aaa
ss
(bad)
mov
les
and
inc
popf
dec
xchg
dec
faddp
xchg
xchg
jmp
cmp
xchg
dec
push
mul
add
dec
cmp
dec
dec
sti
xchg
xchg
dec
inc
popf
dec
dec
jmp
in
sti
xchg
aaa
scas
dec
push
test
add
dec
cmp
jge
pop
neg
fwait
mov
(bad)
mov
add
fmul
add
xor
add
pusha
call
ins
(bad)
(bad)
call
(bad)
mov
add
aaa
dec
mov
(bad)
mov
jae
(bad)
mov
add
dec
sbb
lods
xor
add
into
(bad)
xchg
aaa
jecxz
das
(bad)
mov
add
sti
xchg
lods
aaa
popf
imul
mov
add
fwait
div
(bad)
mov
add
xchg
lea
ss
das
(bad)
mov
outs
inc
sti
imul
inc
add
aaa
ss
(bad)
mov
add
js
les
in
sti
dec
in
popf
lods
dec
(bad)
and
mov
add
dec
cmp
in
sahf
sti
add
(bad)
fwait
mov
(bad)
mov
add
fdiv
not
cld
add
mov
xor
add
pusha
call
or
(bad)
call
clc
add
les
inc
idiv
sar
inc
cmp
dec
call
add
sahf
mov
cmp
dec
dec
dec
inc
aaa
or
dec
idiv
into
add
mov
sahf
mov
dec
inc
div
(bad)
inc
dec
call
add
sahf
mov
dec
inc
div
cmp
dec
call
add
sahf
mov
dec
inc
neg
(bad)
inc
dec
call
add
sahf
mov
dec
inc
not
jmp
inc
dec
call
add
sahf
mov
dec
inc
not
(bad)
inc
dec
call
add
sahf
mov
cmp
dec
dec
dec
inc
aaa
ss
(bad)
mov
mov
dec
push
in
sahf
mov
dec
inc
idiv
sti
dec
call
add
sahf
mov
in
(bad)
mov
add
dec
in
sti
dec
mov
mov
sti
idiv
test
lods
xor
add
sub
or
sub
push
and
mov
add
xchg
or
dec
sar
xchg
sti
dec
rcr
or
imul
test
dec
push
int3
fadd
fwait
cmp
adc
add
dec
in
sti
xchg
dec
neg
add
lods
xor
add
inc
sti
stos
neg
add
dec
push
test
add
sahf
mov
dec
dec
scas
popf
xchg
outs
into
lods
imul
jmp
dec
scas
popf
neg
or
stos
xchg
jmp
stos
rol
add
dec
scas
popf
not
dec
add
dec
cmp
outs
js
div
cmp
lahf
sbb
sti
lods
sti
call
mov
mov
and
sti
dec
xchg
dec
mov
test
add
and
outs
cmp
stos
outs
mov
dec
mov
add
dec
cmp
and
ss
xchg
lahf
jecxz
repnz
jge
int3
in
sahf
mov
std
mov
dec
ror
mov
(bad)
jmp
dec
inc
popf
jmp
lods
aaa
(bad)
(bad)
out
lods
les
dec
add
neg
retf
not
add
jge
push
in
icebp
sbb
js
les
popf
dec
sti
cmp
dec
out
xchg
dec
rol
outs
cmp
xchg
dec
movs
dec
dec
sti
stos
dec
aaa
div
add
dec
dec
jmp
idiv
out
xchg
ficomp
in
jmp
adc
dec
jmp
idiv
mov
sti
lahf
mov
mov
dec
dec
mov
in
popf
xchg
dec
dec
mov
cmp
dec
fidiv
xchg
test
(bad)
dec
in
neg
les
and
popf
cmp
mov
xchg
dec
or
(bad)
in
sti
dec
call
add
and
cld
mov
sti
lahf
addr16
inc
popf
dec
dec
sti
(bad)
in
popf
xchg
dec
popf
dec
push
test
add
dec
cmp
sti
add
(bad)
fwait
mov
(bad)
mov
add
xchg
mul
add
dec
lea
xor
add
inc
call
dec
div
add
lahf
jp
inc
(bad)
in
sti
lods
dec
jmp
dec
test
mov
add
sti
div
sti
add
and
repnz
mov
and
(bad)
dec
add
or
push
shr
add
lods
inc
(bad)
jp
push
int3
fcomp
mov
add
xchg
dec
dec
lods
dec
in
xor
scas
xchg
test
(bad)
push
dec
call
or
dec
push
dec
in
sti
test
(bad)
jmp
dec
lods
and
call
neg
add
dec
cmp
dec
outs
cmp
cwde
or
in
pop
stos
inc
div
test
dec
dec
lods
and
in
popf
imul
mov
lods
and
call
int
neg
jp
pusha
dec
fidiv
jecxz
xchg
aad
scas
ds
neg
dec
lods
(bad)
cmp
sti
in
call
mov
daa
add
neg
clc
add
sahf
xchg
add
ss
add
add
push
faddp
add
neg
add
int3
js
les
popf
jns
dec
sar
dec
lods
xchg
xchg
dec
stos
mov
outs
in
mov
mov
sar
dec
hlt
dec
push
mov
outs
mov
imul
sti
outs
in
imul
xchg
movs
imul
cmp
outs
cmp
xchg
neg
adc
add
popf
and
outs
cmp
outs
dec
cmc
div
add
popf
mov
jecxz
lahf
jecxz
call
xor
in
sti
outs
cmp
div
xchg
add
dec
cmp
jecxz
xchg
lahf
jecxz
repnz
jge
int3
in
int3
fadd
fwait
out
(bad)
mov
add
lods
pop
add
lods
test
pusha
call
mov
pop
(bad)
mov
jp
pusha
xchg
dec
push
mul
mov
neg
dec
jmp
add
sbb
add
js
les
xchg
dec
mov
movs
dec
sti
dec
faddp
xchg
mov
in
jmp
dec
mov
hlt
gs
dec
jmp
idiv
mov
sti
lahf
xor
popf
dec
dec
mov
in
sti
xchg
dec
dec
mov
inc
(bad)
xchg
div
arpl
dec
lods
or
jmp
lods
int3
sti
dec
lods
les
dec
add
stc
pop
test
imul
dec
add
jge
pop
neg
les
dec
aaa
mul
adc
dec
pusha
call
mov
dec
mov
jmp
lods
sub
cmp
lods
les
lods
pusha
(bad)
dec
add
inc
pop
test
test
add
add
popf
fwait
call
add
dec
cmp
lods
xor
add
xchg
lea
dec
aaa
xchg
div
mov
in
(bad)
test
add
lods
xor
add
les
add
cld
popf
dec
cmp
test
not
add
sahf
mov
std
mov
dec
dec
lea
popf
dec
xchg
dec
faddp
dec
sbb
xchg
sub
add
and
cld
mov
sti
lahf
addr16
mov
dec
jb
popf
xchg
or
dec
in
sti
dec
aaa
mul
push
in
dec
icebp
sbb
les
popf
cmp
fisubr
sub
dec
call
add
cld
ins
cmp
or
outs
(bad)
sub
add
and
sbb
sub
jecxz
xchg
dec
pop
dec
icebp
sbb
jae
add
add
test
add
lods
xor
add
sti
dec
add
(bad)
pop
outs
add
(bad)
(bad)
(bad)
in
sub
add
outs
add
(bad)
(bad)
call
jmp
not
outs
dec
aas
and
push
cmp
jp
mov
(bad)
jmp
aas
aaa
(bad)
sub
fldenv
rol
add
js
les
xchg
(bad)
in
sti
dec
mov
out
dec
faddp
outs
sbb
repz
add
dec
xchg
and
cld
ins
outs
cmp
stos
dec
cmp
lods
pusha
sti
stos
dec
aaa
imul
add
dec
cmp
and
(bad)
jecxz
lahf
jecxz
add
and
cld
adc
sti
stos
dec
aaa
test
add
sti
and
mov
jecxz
idiv
and
cld
mov
sti
lahf
hlt
dec
mov
dec
dec
jmp
out
xchg
(bad)
dec
cmp
in
neg
les
dec
fimul
popf
xchg
outs
into
lods
mul
test
dec
inc
popf
dec
rol
dec
out
dec
faddp
(bad)
in
sti
xchg
dec
call
int3
outs
mov
neg
add
jmp
(bad)
cld
push
dec
inc
popf
outs
dec
mov
mov
outs
cmp
stos
dec
cmp
lods
pusha
sti
not
pop
add
lods
mov
aad
jmp
or
dec
cmp
mov
cmp
dec
cmp
cmp
dec
dec
cmp
in
mov
cmp
add
cmp
dec
bound
repz
dec
cmp
sahf
sti
add
les
and
mov
mov
and
outs
cli
(bad)
outs
cmp
test
(bad)
dec
jmp
pusha
cld
sbb
out
dec
cmp
xchg
lahf
ss
cmp
lods
sti
jmp
pop
neg
fwait
(bad)
aam
mov
add
sti
lods
xor
add
dec
scas
popf
xchg
lea
popf
outs
into
lods
xchg
(bad)
not
push
test
(bad)
in
(bad)
(bad)
in
(bad)
neg
mov
jmp
dec
in
les
test
add
sub
inc
lods
dec
sti
test
div
sti
add
les
xchg
dec
fisubr
mov
test
add
and
outs
cmp
xchg
dec
add
xor
add
dec
add
pusha
cld
sbb
out
dec
cmp
xchg
lahf
ss
cmp
lods
sti
(bad)
jge
pop
neg
mov
mov
adc
(bad)
mov
add
(bad)
test
dec
in
sti
mov
call
pusha
xchg
xchg
dec
sbb
into
popf
xchg
popf
dec
(bad)
jp
or
call
iret
pusha
call
ret
lods
outs
in
div
jb
(bad)
dec
popf
outs
in
and
loop
(bad)
dec
sti
dec
or
popf
cmp
in
popf
dec
dec
(bad)
in
sti
dec
dec
std
(bad)
in
(bad)
test
popf
xchg
dec
push
div
dec
add
sahf
sti
add
sti
dec
inc
popf
in
call
aaa
call
add
popf
xchg
lods
xchg
scas
test
add
add
and
repnz
and
(bad)
dec
add
or
push
shr
add
dec
inc
(bad)
int3
dec
push
popf
and
call
stos
(bad)
int3
js
les
sar
test
popf
jns
dec
sar
inc
(bad)
in
sti
add
inc
mov
hlt
dec
push
mov
outs
mov
outs
in
lea
and
imul
jmp
outs
cmp
div
in
jmp
inc
cld
(bad)
popf
dec
idiv
sar
cwde
outs
cmp
stos
dec
cmp
neg
add
dec
cmp
and
(bad)
jecxz
lahf
jecxz
call
out
cmp
test
add
popf
and
ss
xchg
lahf
jecxz
repnz
jge
int3
in
int3
js
les
and
aaa
div
adc
dec
pusha
in
dec
dec
pop
popf
div
(bad)
(bad)
call
sti
cwde
loope
xchg
jmp
or
dec
in
scas
dec
pop
popf
not
js
dec
int3
test
(bad)
call
push
inc
mov
sahf
mov
fisttp
dec
movs
test
(bad)
dec
add
push
add
xor
(bad)
dec
shl
pusha
mov
push
or
popf
jnp
jmp
(bad)
call
xchg
lods
jge
int3
pop
mov
lods
les
outs
cmp
dec
shr
add
lods
mov
outs
cli
sti
outs
mov
add
dec
add
pusha
cld
test
jmp
dec
xchg
lahf
jecxz
sub
pop
test
and
lea
test
(bad)
dec
cmp
lods
mov
add
out
cli
(bad)
outs
loop
stos
test
call
(bad)
mul
add
lods
ret
add
(bad)
(bad)
lods
aaa
sti
(bad)
out
lods
les
dec
add
jmp
test
test
push
in
int3
fsubr
test
lods
xor
mov
sbb
test
jmp
lods
push
add
cmp
mov
jmp
lods
push
(bad)
(bad)
out
lods
les
dec
add
pop
cmp
dec
imul
add
sahf
mov
std
mov
dec
fimul
popf
dec
xchg
dec
ror
faddp
xchg
sub
dec
int3
xchg
xchg
imul
inc
popf
dec
sti
dec
faddp
xchg
sub
call
neg
(bad)
dec
sub
dec
pop
popf
jmp
jge
call
sub
idiv
lods
add
dec
cmp
xchg
lahf
push
dec
inc
popf
dec
jb
xchg
(bad)
in
sti
xchg
dec
jb
fldcw
(bad)
xchg
dec
int3
not
sti
jge
pop
dec
icebp
sbb
les
scas
cmp
xchg
(bad)
in
sti
dec
mov
out
dec
faddp
outs
push
sub
xchg
sub
dec
and
(bad)
dec
lea
dec
jb
scas
xchg
xchg
(bad)
in
inc
and
outs
cmp
lods
stos
dec
cmp
lods
pusha
jp
dec
aaa
test
sub
popf
out
dec
cmp
dec
cmp
in
dec
icebp
sbb
les
xchg
(bad)
in
sti
dec
mov
out
dec
faddp
outs
sbb
xchg
mov
dec
and
cld
xchg
outs
cmp
stos
dec
aaa
test
add
dec
cmp
and
(bad)
jecxz
lahf
jecxz
add
and
cld
mov
xchg
lahf
hlt
dec
mov
dec
dec
jmp
out
xchg
(bad)
dec
cmp
in
neg
les
xchg
dec
lea
inc
dec
shl
adc
dec
mov
xchg
mov
or
pusha
neg
(bad)
jns
sti
dec
cli
(bad)
sar
mov
dec
mov
jg
inc
mov
cwde
ror
outs
in
and
lea
imul
imul
sar
test
outs
cmp
idiv
pop
add
dec
aaa
jge
pop
test
dec
dec
scas
popf
xchg
outs
into
lods
test
test
iret
pusha
in
in
dec
scas
popf
mul
call
sti
cwde
loope
xchg
jmp
or
dec
in
xchg
dec
scas
popf
idiv
mov
dec
popf
outs
js
neg
(bad)
dec
popf
lahf
sbb
popf
lods
sti
call
mov
sti
add
les
dec
dec
scas
popf
xchg
outs
into
lods
neg
test
iret
pusha
in
inc
dec
scas
popf
div
(bad)
call
sti
dec
test
imul
add
pusha
call
mov
dec
popf
outs
js
test
(bad)
dec
popf
lahf
sbb
popf
lods
sti
call
mov
sti
add
cmp
mov
mov
mov
mov
sti
lahf
pop
fcom
sub
dec
lahf
(bad)
imul
lods
imul
(bad)
call
test
jp
sbb
in
pop
inc
div
test
in
int3
fsubr
mov
add
sti
lods
xor
add
dec
scas
popf
xchg
and
popf
outs
into
lods
xchg
(bad)
mul
in
lea
int3
mul
jecxz
add
pop
inc
lods
ret
add
dec
inc
sti
fwait
(bad)
inc
add
xchg
imul
les
jecxz
cmp
dec
add
and
(bad)
stos
imul
xlat
test
dec
in
lea
neg
add
sahf
sti
add
les
jns
(bad)
sar
jmp
js
cmp
sar
les
cmp
xchg
mov
dec
fiadd
les
and
outs
cmp
stos
dec
cmp
mul
lods
add
dec
in
jmp
inc
cld
mov
popf
outs
sbb
jg
add
dec
cmp
jecxz
dec
cmp
xchg
lahf
ss
cmp
lods
sti
dec
sti
jge
pop
neg
fwait
mov
(bad)
mov
add
inc
dec
enter
mov
(bad)
jmp
inc
add
cmp
mov
jmp
lods
push
sti
(bad)
out
lods
les
dec
add
in
cmc
test
div
inc
(bad)
dec
div
add
int3
js
les
scas
cmp
xchg
dec
(bad)
mul
sbb
dec
popf
dec
sti
dec
xchg
xchg
lods
dec
rol
dec
dec
xchg
sub
outs
cmp
popf
stos
dec
cmp
dec
test
stos
test
add
sub
dec
mov
mov
popf
dec
jb
xor
in
popf
xchg
cmp
lods
pusha
scas
stos
neg
popf
lods
inc
add
addr16
inc
popf
inc
dec
sbb
inc
int3
xor
call
div
popf
add
dec
aaa
jge
pop
dec
icebp
sbb
les
xchg
(bad)
in
sti
dec
mov
out
dec
faddp
outs
sbb
add
sti
and
cld
mov
sti
lahf
cmp
popf
dec
dec
jmp
sbb
xchg
xchg
(bad)
outs
cmp
imul
out
and
outs
cmp
stos
dec
aaa
test
sti
and
test
popf
jecxz
xchg
ss
cmp
cmp
sahf
sti
add
les
scas
cmp
xchg
dec
mov
div
add
dec
add
sti
xchg
pusha
cld
aam
mov
dec
out
dec
faddp
outs
push
sub
inc
mov
sub
mov
add
pusha
cld
mov
dec
lahf
int
jmp
xor
dec
cmp
jge
pop
dec
icebp
sbb
les
fimul
popf
dec
sti
dec
faddp
xchg
mov
stos
xchg
div
mov
and
dec
inc
popf
outs
dec
mov
inc
add
add
cmp
stos
dec
cmp
test
add
mov
popa
dec
pop
popf
dec
cmp
mov
or
in
aaa
pop
neg
call
(bad)
xchg
dec
or
mov
in
js
(bad)
(bad)
in
sti
imul
add
dec
cmp
mov
js
les
jae
inc
(bad)
mov
add
stos
xchg
les
dec
xchg
jl
mov
stos
outs
iret
sub
add
add
add
add
dec
sbb
dec
repnz
loop
dec
stos
lods
or
popf
jnp
jmp
(bad)
(bad)
in
adc
sub
sub
add
push
loop
add
dec
add
sub
dec
add
mov
sub
dec
jecxz
les
lods
pusha
xor
xchg
(bad)
stos
idiv
out
test
lods
daa
sub
add
add
outs
sbb
push
add
imul
mov
mov
sub
and
aaa
iret
sub
add
add
div
mov
sub
push
iret
sub
add
jp
dec
cmp
xchg
outs
call
add
lods
pusha
xor
cmp
sub
add
add
cmp
add
lods
daa
sub
add
dec
stos
idiv
add
add
lods
push
mov
push
sub
add
sti
dec
add
cmp
add
dec
daa
sub
add
add
jg
add
add
icebp
sbb
fwait
xchg
or
mov
add
sti
lods
xor
add
xor
(bad)
fadd
fmul
in
out
test
div
or
add
les
sti
lods
les
dec
xchg
outs
cmp
dec
dec
pop
(bad)
dec
dec
sti
outs
cmp
idiv
(bad)
call
(bad)
out
outs
cmp
stos
dec
cmp
test
neg
les
and
lea
rcr
add
dec
ss
outs
in
mov
mov
add
dec
sti
dec
(bad)
(bad)
and
in
adc
js
add
in
neg
jno
mov
add
push
in
int3
dec
test
dec
or
and
in
(bad)
in
pusha
lahf
sti
dec
inc
scas
or
dec
mov
dec
sbb
jp
cmc
scas
popf
dec
jecxz
mov
shr
idiv
add
dec
ss
stos
cmp
cmp
jecxz
add
jge
int3
js
les
dec
lea
lods
xchg
dec
rcr
dec
jmp
(bad)
(bad)
in
(bad)
in
pop
lahf
dec
push
mov
xchg
add
ss
test
scas
or
dec
ret
in
scas
dec
cmp
call
add
popf
push
shr
add
xchg
mov
xchg
add
dec
dec
sti
dec
faddp
jge
xchg
mov
js
les
xchg
dec
ror
dec
lea
imul
mov
repnz
mov
or
dec
mov
dec
jge
dec
int3
or
pop
(bad)
(bad)
inc
mov
cmc
lods
fisttp
mov
dec
jmp
push
cmc
cwde
lods
rol
add
push
jmp
lods
xor
add
aad
jmp
jecxz
cmp
dec
dec
jmp
ins
add
dec
sbb
int
ret
outs
(bad)
out
xchg
mov
dec
mov
cmp
stos
(bad)
(bad)
(bad)
in
popf
dec
mov
outs
mov
dec
popf
dec
jge
or
dec
ret
and
mov
add
mov
(bad)
lock
xchg
repz
add
popf
dec
add
dec
sar
dec
scas
inc
dec
sub
dec
int3
xchg
test
(bad)
dec
lods
outs
cmp
stos
dec
push
or
popf
in
int
mov
mul
mov
(bad)
dec
jmp
outs
mov
lahf
sti
dec
js
xchg
lods
dec
(bad)
push
xchg
in
mov
ror
xchg
mov
dec
enter
sbb
(bad)
inc
popf
or
dec
test
inc
rcl
and
test
popf
lods
sub
js
xchg
in
mov
in
neg
les
and
repnz
push
add
dec
and
(bad)
dec
lods
lahf
jp
int
or
xchg
dec
mov
jecxz
push
push
lods
pop
cwde
and
(bad)
dec
add
rcr
push
add
dec
rol
push
jge
sahf
mov
and
aaa
test
(bad)
dec
pusha
in
mov
pop
popf
not
or
dec
dec
sti
dec
test
idiv
mov
scas
dec
pop
popf
mul
(bad)
jmp
jmp
int3
idiv
lods
bnd
mov
sahf
mov
std
mov
dec
xchg
(bad)
in
sti
dec
mov
out
dec
faddp
outs
push
sub
xchg
sub
dec
and
cld
mov
sti
lahf
popa
dec
mov
dec
jb
scas
xchg
xchg
(bad)
dec
cmp
in
dec
icebp
sbb
les
dec
dec
aaa
mul
(bad)
dec
pusha
in
retf
dec
pop
popf
div
(bad)
call
cmp
not
jno
add
dec
pop
popf
test
(bad)
jmp
jmp
int3
idiv
lahf
(bad)
call
push
inc
mov
int3
js
les
dec
dec
scas
popf
xchg
outs
into
lods
test
in
pop
dec
scas
popf
mul
or
dec
scas
popf
xchg
jmp
dec
jmp
js
idiv
lahf
(bad)
dec
sti
lahf
sbb
sti
lods
sti
call
mov
mov
in
sti
test
add
dec
cmp
sbb
fdivr
fwait
inc
in
(bad)
mov
add
mov
stos
dec
jnp
cmp
jp
add
imul
cmp
stos
outs
cli
xor
jmp
imul
mov
(bad)
in
pusha
(bad)
add
cmp
jmp
sub
idiv
aaa
neg
add
fadd
fwait
xchg
or
mov
add
dec
in
sti
xchg
imul
test
lods
xor
add
or
neg
push
test
add
sahf
mov
and
xor
outs
sar
jp
idiv
in
sti
dec
push
(bad)
and
mov
add
dec
cmp
neg
les
and
call
lahf
jp
inc
(bad)
in
lods
outs
cmp
add
jns
jmp
js
iret
pop
call
mov
lahf
jp
pusha
dec
dec
popf
push
rol
call
(bad)
lahf
jp
pusha
and
call
in
test
rol
(bad)
(bad)
dec
or
xchg
xchg
mov
sti
jge
shl
sahf
popf
add
les
and
in
pusha
push
cmp
outs
mov
mov
(bad)
in
popf
outs
in
test
jmp
mov
and
call
in
pusha
dec
faddp
and
mov
jp
int
neg
lahf
jp
test
mov
sti
inc
push
faddp
dec
lahf
mov
faddp
add
sahf
sti
add
les
fimul
popf
dec
sti
xchg
dec
rol
xchg
dec
sti
dec
faddp
dec
xchg
mov
in
jmp
dec
mov
add
and
mov
dec
dec
mov
sti
dec
dec
mov
cmp
stos
outs
inc
(bad)
stos
dec
jnp
in
add
add
jmp
idiv
mov
sti
lahf
mov
mov
dec
dec
(bad)
(bad)
in
sti
xchg
dec
dec
lea
jnp
rol
test
sti
in
neg
les
sub
pusha
(bad)
dec
mov
xchg
sub
cmp
popf
outs
push
sub
dec
stos
(bad)
in
popf
dec
cmp
neg
add
dec
cmp
sahf
sti
add
les
and
aaa
mul
jl
dec
pusha
in
mov
popf
idiv
jle
call
jmp
push
jecxz
mov
xchg
dec
pop
popf
not
(bad)
dec
sti
outs
js
test
dec
sti
lahf
sbb
sti
lods
sti
call
mov
add
les
xchg
dec
mov
fld
dec
mov
dec
out
dec
faddp
outs
sbb
fsubr
(bad)
dec
mov
call
pusha
cld
mov
dec
lahf
cmps
dec
mov
dec
dec
lea
rol
dec
cmp
pop
neg
les
(bad)
cmp
xchg
dec
dec
or
dec
xchg
xchg
xchg
mov
movs
call
lods
xchg
jmp
cmp
bound
dec
pusha
in
inc
dec
mov
test
(bad)
call
add
xchg
in
(bad)
popf
inc
test
mov
mov
dec
sti
xchg
cmp
jge
pop
neg
sti
lods
sti
call
lods
les
cmp
xchg
dec
mov
dec
int3
or
popf
xchg
jmp
(bad)
call
add
div
enter
dec
jge
outs
in
(bad)
not
in
mov
dec
les
lea
xchg
mov
sar
or
dec
dec
jbe
sahf
push
mov
aad
scas
popf
outs
ds
lods
out
dec
dec
xchg
and
jmp
dec
mov
xchg
jmp
in
div
cld
loop
dec
outs
in
mov
add
pusha
call
or
adc
pop
sbb
(bad)
adc
mov
outs
in
div
shl
(bad)
dec
outs
in
mov
add
pusha
call
dec
(bad)
neg
arpl
inc
aad
pop
repnz
jp
mov
ss
pusha
lahf
jp
pusha
jge
pop
neg
les
and
popf
xchg
outs
into
lods
div
test
iret
pusha
in
ins
lods
xor
add
cmp
stos
test
add
mov
pop
dec
dec
mov
js
test
add
dec
cmp
lahf
sbb
sti
lods
sti
call
mov
sahf
mov
add
test
(bad)
xchg
(bad)
(bad)
in
stos
mul
add
jecxz
les
lods
pusha
xor
xchg
les
jmp
sub
std
(bad)
jmp
adc
cmp
dec
add
add
jo
(bad)
call
jmp
dec
jecxz
pusha
mov
jbe
(bad)
dec
outs
dec
adc
test
jmp
adc
dec
test
jmp
dec
aaa
stos
test
lods
pusha
xor
(bad)
(bad)
in
imul
inc
(bad)
push
mov
lods
add
add
add
mul
add
(bad)
in
scas
lods
xor
add
in
lods
in
pusha
(bad)
in
popf
add
outs
cmp
(bad)
in
scas
aaa
cmp
mov
test
add
(bad)
(bad)
xchg
les
cmc
and
add
jmp
dec
jecxz
les
lods
pusha
xor
xchg
lea
jmp
mov
(bad)
call
jmp
neg
or
xchg
push
cmp
jp
js
(bad)
call
jmp
dec
jecxz
pusha
mov
adc
dec
outs
dec
mov
neg
(bad)
jmp
mov
jp
(bad)
(bad)
dec
stos
push
cmp
add
(bad)
sar
jmp
add
dec
outs
in
cmc
idiv
xor
lods
pusha
xor
(bad)
(bad)
in
test
push
fld
add
les
cmp
dec
fimul
popf
dec
out
xchg
dec
pop
(bad)
outs
cmp
stos
idiv
dec
jmp
idiv
out
xchg
dec
scas
popf
outs
into
lods
idiv
test
in
test
push
dec
cmp
jge
xchg
pop
neg
les
lods
xor
add
dec
scas
popf
outs
into
lods
div
add
sbb
add
dec
scas
popf
test
(bad)
call
jnp
lods
gs
test
add
xchg
imul
add
cwde
or
outs
ror
sub
or
mov
dec
in
hlt
lods
jg
inc
mov
xor
inc
mov
inc
mov
mov
jg
inc
mov
xrelease
jg
inc
mov
aam
rcl
dec
sbb
(bad)
or
xchg
push
xchg
pop
cmps
jecxz
dec
scas
popf
(bad)
cmp
xchg
test
dec
popf
inc
lods
mov
fdivr
(bad)
jmp
pusha
fidivr
test
xchg
outs
sar
push
faddp
add
neg
hlt
push
faddp
dec
int3
fadd
fwait
push
(bad)
call
in
popf
test
jmp
fsubr
dec
mov
push
cmp
dec
and
call
lahf
jp
pusha
xchg
dec
push
imul
add
sahf
sti
add
les
lods
xor
add
scas
popf
xchg
outs
into
lods
test
test
iret
pusha
in
ins
dec
scas
popf
mul
(bad)
inc
cwde
dec
scas
popf
div
push
(bad)
push
cmp
dec
add
add
popf
div
out
test
iret
pusha
in
out
scas
popf
neg
lods
or
scas
popf
idiv
cmp
dec
dec
jmp
cmp
jge
and
call
sti
push
sahf
mov
les
mov
movs
dec
sti
dec
faddp
xchg
lea
xchg
outs
in
mov
push
int
dec
mov
dec
mov
outs
dec
(bad)
idiv
inc
(bad)
jmp
sbb
dec
and
(bad)
push
push
mov
dec
cmp
xchg
mov
dec
cmp
xchg
lahf
ss
cmp
lods
sti
(bad)
jge
pop
neg
les
add
dec
mov
dec
cmp
dec
jecxz
mov
dec
sti
dec
faddp
xchg
mov
stos
xchg
not
mov
add
cmp
mov
dec
int3
in
int3
js
les
(bad)
in
sti
outs
in
mov
mov
and
outs
cmp
cmp
sbb
test
(bad)
dec
and
ss
xchg
jmp
dec
aaa
pop
neg
les
and
pop
call
in
pusha
dec
xchg
dec
pop
(bad)
dec
int3
neg
push
(bad)
dec
adc
cmp
dec
call
adc
dec
inc
ficomp
and
lods
push
sbb
in
movs
in
test
xchg
and
call
in
inc
(bad)
in
lods
dec
mov
sti
idiv
add
add
xchg
sti
push
sahf
in
dec
and
call
in
pusha
dec
faddp
and
mov
jp
mul
int
mov
jp
pusha
(bad)
in
mov
add
add
in
sahf
popf
add
popf
fwait
inc
mov
mov
add
xchg
dec
dec
lods
dec
in
xor
scas
xchg
test
(bad)
push
dec
call
or
push
test
dec
in
sti
idiv
(bad)
jmp
cmp
cmp
in
add
scas
push
cmp
call
mov
add
sti
in
pop
stos
inc
neg
lods
not
(bad)
call
in
call
ja
call
add
idiv
add
sahf
xchg
add
(bad)
fwait
cmps
mov
mov
add
popf
fsubr
add
sti
lods
xor
add
and
dec
mov
add
sahf
popf
add
popf
(bad)
out
div
add
imul
add
add
les
in
xor
in
repnz
aad
mov
aad
popa
push
and
in
lods
xchg
(bad)
lahf
repnz
sti
push
and
in
jecxz
loop
dec
or
fld
add
test
add
mov
dec
les
cmp
fadd
in
pop
dec
aaa
inc
repz
add
dec
sub
dec
lods
iret
enter
add
add
sbb
push
(bad)
in
pop
dec
push
sti
and
call
(bad)
sti
in
repnz
in
sti
dec
(bad)
idiv
dec
ss
aaa
test
dec
add
or
sti
dec
aaa
dec
add
enter
lahf
cmp
push
(bad)
and
call
xchg
test
dec
ss
aaa
dec
add
or
dec
out
dec
jnp
mov
(bad)
(bad)
in
repnz
in
sti
dec
(bad)
test
add
mov
test
dec
add
or
sti
dec
aaa
dec
add
mov
add
mov
add
lea
dec
sti
dec
add
xchg
jge
pop
sbb
js
les
sti
dec
and
xchg
xchg
and
call
repnz
in
lods
lods
push
dec
in
lods
xchg
dec
js
dec
aam
mov
repnz
aam
mov
aam
popa
dec
lods
lods
push
test
fadd
in
mov
jecxz
push
sti
xchg
(bad)
dec
lods
lods
push
dec
repnz
xchg
les
(bad)
dec
and
xchg
xchg
and
call
repnz
in
lods
lods
push
dec
in
lods
xchg
dec
js
dec
aam
mov
repnz
aam
mov
aam
popa
dec
lods
lods
push
test
fdivr
in
mov
jecxz
push
mov
push
xchg
les
xor
cld
sub
sti
lods
pop
add
dec
cmp
scas
xchg
sub
dec
cmp
xchg
xchg
sub
lahf
ss
cmp
popf
dec
ss
inc
popf
dec
sti
dec
faddp
xchg
sub
stos
dec
int3
outs
cld
sub
iret
(bad)
(bad)
jmp
mov
dec
cmp
lods
xchg
dec
cmp
scas
xchg
jge
push
in
dec
icebp
sbb
js
les
and
dec
mov
mov
dec
and
cld
fldcw
popf
stos
dec
cmp
test
cmp
outs
popf
or
sti
lahf
ss
cmp
lods
sti
(bad)
jge
neg
les
sbb
xchg
dec
mov
xchg
not
idiv
dec
and
cld
addr16
dec
sti
outs
mov
outs
mov
add
dec
cmp
and
ss
xchg
lahf
jecxz
sub
pop
neg
les
add
dec
faddp
sar
lea
lea
mov
jmp
mov
xchg
dec
faddp
xchg
lea
jmp
dec
push
outs
dec
mov
sub
add
lods
mov
dec
inc
popf
dec
cmp
(bad)
in
aaa
pop
test
std
mov
dec
fimul
sti
lods
fld
dec
xchg
dec
inc
popf
dec
rol
dec
or
cmp
scas
xchg
sub
sub
jb
scas
idiv
cld
sub
add
call
and
dec
inc
popf
outs
jb
lods
div
(bad)
jmp
sub
jle
(bad)
jmp
cld
ss
sub
popf
dec
jb
lods
xchg
dec
jb
scas
xchg
(bad)
lahf
jecxz
call
mov
out
lahf
lock
pop
popf
dec
cmp
sub
(bad)
dec
cmp
in
dec
icebp
sbb
les
fimul
popf
dec
dec
inc
dec
sti
dec
faddp
xchg
lea
dec
faddp
xchg
xchg
and
lods
dec
lods
cmp
dec
mov
cmpxchg8b
lahf
jecxz
sbb
and
cld
or
popf
outs
dec
(bad)
idiv
(bad)
jmp
mov
lods
push
(bad)
dec
neg
pushf
(bad)
dec
and
(bad)
push
aaa
mov
dec
cmp
xchg
dec
cmp
cmp
xchg
sti
lods
sti
(bad)
jge
pop
neg
jmp
push
sub
jmp
outs
(bad)
dec
jmp
enter
lods
rep
repz
outs
(bad)
dec
jmp
in
(bad)
dec
(bad)
(bad)
jmp
repz
add
repz
daa
(bad)
jmp
daa
(bad)
dec
jmp
repz
pusha
jge
dec
jmp
pushf
clc
(bad)
dec
jmp
sbb
(bad)
jmp
(bad)
(bad)
jmp
jge
jmp
outs
(bad)
dec
jmp
dec
push
(bad)
dec
jmp
repz
adc
(bad)
dec
jno
and
imul
dec
xor
add
mov
sahf
mov
ret
(bad)
mov
add
lods
pop
add
lods
imul
add
mov
in
mul
xchg
mov
and
mov
jp
pusha
xchg
dec
push
not
add
sahf
mov
inc
call
dec
test
add
not
mov
(bad)
fwait
imul
add
dec
in
sti
xchg
lods
add
lods
xor
add
into
(bad)
(bad)
dec
dec
or
xchg
xchg
outs
cmp
add
sti
add
lods
sbb
add
sahf
mov
inc
mov
dec
imul
dec
add
xchg
xchg
outs
(bad)
fwait
xchg
adc
les
and
dec
faddp
dec
fdivr
outs
in
mov
cmp
neg
sti
dec
faddp
xchg
aaa
in
int3
dec
and
repnz
xchg
add
dec
and
(bad)
dec
add
or
push
rcr
xchg
add
lods
inc
(bad)
jmp
push
int3
cwde
or
and
(bad)
in
int
(bad)
rcr
loop
xchg
pop
(bad)
inc
add
sbb
jge
(bad)
ficomp
dec
jp
test
in
pusha
fmulp
in
pusha
int3
or
push
lods
dec
push
ds
cmc
or
xchg
lods
lods
dec
jp
push
hlt
ds
xchg
or
xchg
int3
dec
and
(bad)
push
mov
dec
add
dec
inc
(bad)
in
neg
mov
cwde
or
les
xchg
outs
in
lods
imul
dec
popf
idiv
(bad)
fmul
mov
sbb
add
lahf
dec
outs
in
mov
jmp
lods
dec
mov
dec
dec
xchg
neg
(bad)
(bad)
dec
pusha
call
jmp
cmp
xchg
les
pusha
cwde
and
add
mul
dec
add
in
pusha
push
bound
add
lods
push
mov
(bad)
jmp
lods
dec
mov
dec
imul
(bad)
(bad)
dec
sti
dec
jge
outs
in
(bad)
imul
in
(bad)
dec
outs
in
mov
dec
pusha
in
xchg
fmul
mov
neg
jp
add
dec
faddp
dec
mov
in
lea
in
(bad)
dec
jmp
in
div
aam
(bad)
dec
outs
in
(bad)
div
(bad)
(bad)
dec
pusha
call
lods
dec
cmp
dec
js
dec
ror
mov
dec
call
xor
pusha
(bad)
push
dec
in
mov
shr
add
repz
(bad)
(bad)
js
les
pop
lods
in
test
test
int3
lods
xchg
(bad)
in
int
inc
lods
mov
add
mov
push
or
mov
idiv
add
js
les
mov
test
lods
pusha
(bad)
lods
mov
sbb
js
les
xchg
in
pusha
outs
mov
jmp
int3
(bad)
in
sti
(bad)
in
sti
dec
not
(bad)
jmp
mov
sahf
mov
sub
dec
hlt
xchg
(bad)
push
dec
sti
in
arpl
int3
js
les
xchg
in
pusha
outs
mov
jmp
cmp
in
sti
imul
(bad)
(bad)
jmp
sahf
sti
add
scas
fwait
jmp
(bad)
mov
add
dec
fisttp
popf
and
in
mov
repnz
mov
or
dec
mov
dec
jge
dec
int3
or
pop
(bad)
(bad)
inc
mov
cmc
lods
fisttp
mov
jmp
dec
dec
cmp
push
sahf
cwde
lods
adc
test
dec
les
add
aad
les
dec
dec
(bad)
imul
test
dec
popf
or
popf
lods
xor
add
sar
outs
xor
inc
xchg
test
(bad)
dec
test
cmp
in
popf
not
(bad)
(bad)
dec
std
dec
dec
popf
outs
cmp
lods
imul
(bad)
dec
lods
dec
mov
dec
inc
or
dec
test
and
popa
lahf
jecxz
pusha
(bad)
push
dec
in
sar
popf
idiv
or
add
(bad)
lods
xchg
xchg
repz
add
add
in
div
and
add
mov
mul
add
dec
dec
popf
dec
int3
or
dec
mov
dec
ss
push
xchg
imul
(bad)
stos
cmp
sbb
jp
add
dec
jge
outs
cmp
stos
dec
int3
or
popf
in
inc
dec
mov
neg
(bad)
jmp
jmp
outs
mov
lahf
sti
dec
js
xchg
lods
dec
(bad)
push
xchg
in
mov
loop
outs
scas
jmp
dec
call
bound
xchg
xchg
call
dec
lods
xchg
mov
dec
popf
outs
and
dec
dec
push
out
call
lods
pusha
(bad)
push
sahf
in
mov
iret
mov
add
les
and
dec
faddp
dec
(bad)
in
sti
outs
in
mov
cmp
not
sti
dec
faddp
xchg
aaa
in
sahf
mov
les
mov
mov
or
xchg
jmp
(bad)
(bad)
in
lods
xor
add
test
dec
lods
and
mov
mov
add
scas
or
jmp
mov
(bad)
in
scas
dec
dec
popf
(bad)
in
lods
dec
sbb
dec
popf
outs
in
(bad)
test
dec
mov
cmp
dec
jge
pop
neg
les
xchg
dec
mov
imul
(bad)
in
pusha
lahf
sti
dec
mov
or
dec
mov
dec
enter
fnstsw
cmc
scas
lods
(bad)
in
sti
in
inc
inc
mul
(bad)
inc
outs
in
mov
fs
(bad)
(bad)
(bad)
in
mov
in
mov
in
sti
stos
dec
aaa
div
in
neg
les
sti
lods
les
cmp
mov
dec
add
popf
dec
xchg
jnp
jmp
(bad)
call
add
outs
in
std
idiv
(bad)
dec
popf
outs
in
mov
(bad)
dec
(bad)
dec
mov
mov
sar
xchg
in
jmp
test
cwde
or
sahf
push
mov
aad
scas
popa
lods
sahf
mov
or
jecxz
lahf
jp
xchg
and
jmp
dec
mov
xchg
mov
inc
ins
(bad)
dec
outs
in
mov
sahf
(bad)
dec
pusha
call
or
dec
popf
sbb
pop
sub
sbb
jp
lods
movs
add
add
sti
dec
jge
outs
in
std
neg
ins
(bad)
dec
outs
in
mov
rcr
(bad)
dec
pusha
call
test
div
inc
popf
sbb
pop
sub
sbb
jp
lods
cdq
add
add
sti
dec
jge
outs
in
std
test
dec
outs
in
mov
(bad)
(bad)
dec
pusha
call
test
(bad)
dec
test
(bad)
dec
popf
dec
xchg
neg
pusha
call
sar
(bad)
in
mov
in
popf
lahf
inc
dec
mov
outs
in
std
neg
dec
outs
in
mov
mov
(bad)
dec
pusha
call
dec
in
popf
dec
xchg
test
(bad)
dec
pusha
call
les
in
sti
neg
mov
in
jmp
cmp
(bad)
in
(bad)
(bad)
in
popf
stos
dec
cmp
imul
sti
(bad)
in
popf
idiv
(bad)
(bad)
jge
pop
neg
les
add
test
jmp
(bad)
in
sti
test
push
sahf
mov
and
dec
mov
mov
and
mov
or
mov
sub
or
mov
and
call
cmp
stos
(bad)
in
add
(bad)
call
aas
(bad)
(bad)
call
inc
in
aaa
lahf
ins
(bad)
in
mul
(bad)
(bad)
(bad)
fmul
mov
xchg
jmp
xchg
test
jmp
(bad)
in
mul
(bad)
(bad)
jge
test
cli
(bad)
mov
add
sti
in
(bad)
fcom
pop
push
add
dec
lea
mov
mov
(bad)
imul
add
mov
xchg
lahf
jp
pusha
xchg
xchg
popf
xchg
lods
xchg
scas
dec
test
neg
(bad)
dec
popf
aaa
cmp
jp
add
test
cmp
add
int3
js
les
in
sti
dec
inc
test
add
aaa
ss
(bad)
mov
sahf
mov
push
(bad)
mov
add
sti
dec
mov
cmp
and
add
lods
xor
add
dec
xchg
outs
cmp
add
lods
xor
add
mov
data16
add
dec
faddp
jecxz
outs
in
std
div
push
cmp
dec
neg
dec
call
ss
call
jmp
dec
mov
jb
pop
idiv
add
add
pusha
pop
(bad)
inc
add
lods
dec
test
dec
pop
stos
fcom
dec
add
psubq
pusha
in
lods
xor
add
faddp
dec
call
add
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
xor
(bad)
jmp
inc
xor
int3
dec
mov
stos
(bad)
jecxz
lods
mov
fadd
(bad)
in
div
ins
sub
add
cmp
(bad)
dec
cmp
and
sti
outs
rol
mul
aaa
idiv
dec
loop
lods
or
loop
dec
add
pusha
rcr
loop
(bad)
sti
dec
push
(bad)
outs
stos
jp
hlt
cwde
or
int3
dec
dec
jmp
int3
dec
loop
lods
or
and
dec
popa
lahf
jp
int
int
ss
add
dec
jmp
int3
dec
or
in
pusha
aad
call
lods
mov
inc
out
(bad)
sti
dec
inc
fldcw
(bad)
cwde
or
int3
dec
call
call
inc
add
sbb
in
jecxz
dec
int3
dec
call
call
(bad)
fwait
jmp
(bad)
mov
add
sti
dec
mov
aaa
dec
sar
and
cwde
and
fidiv
and
mov
and
add
mov
out
add
add
dec
rol
dec
jb
lods
inc
dec
dec
cwde
iret
fwait
add
add
(bad)
jecxz
outs
in
popf
idiv
xor
add
(bad)
mov
imul
mov
jmp
add
add
dec
faddp
dec
jb
pop
neg
(bad)
(bad)
call
pusha
pop
(bad)
inc
add
dec
mov
aaa
dec
sar
lods
test
jecxz
test
out
(bad)
call
fcom
dec
add
psubq
pusha
in
lods
dec
jmp
lahf
ret
dec
mov
call
call
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
and
jmp
hlt
mov
mov
faddp
jecxz
lods
pop
sti
add
(bad)
adc
sar
lods
idiv
pop
pop
add
jecxz
test
xor
push
add
sahf
sti
add
add
neg
cmp
ss
sti
dec
push
(bad)
dec
cmp
and
sti
outs
rol
idiv
in
lods
lods
xor
add
inc
idiv
inc
(bad)
dec
push
test
add
push
cwde
call
and
sti
dec
lods
fmul
xchg
jmp
cwde
xchg
dec
int3
js
les
dec
ror
lahf
cwde
inc
xchg
(bad)
in
sti
dec
dec
inc
lods
sbb
in
sahf
mov
jp
mov
add
inc
xchg
jmp
in
lea
sub
dec
cmp
xchg
test
(bad)
inc
sub
cmp
imul
dec
dec
add
data16
(bad)
dec
sti
div
mov
aam
mov
add
ror
mov
test
lods
xor
add
sti
in
pop
inc
xchg
les
jmp
sar
(bad)
(bad)
in
lea
fiadd
cwde
or
and
in
retf
test
add
int3
js
les
lods
xor
add
mov
jecxz
pusha
(bad)
dec
dec
sti
stos
imul
(bad)
dec
sti
mov
call
lods
int3
dec
dec
out
and
outs
inc
(bad)
lods
idiv
lea
dec
ss
call
inc
sti
lods
idiv
lea
dec
ss
call
in
aaa
dec
fcmove
(bad)
mov
add
les
inc
aaa
ss
(bad)
mov
add
dec
call
add
sahf
mov
add
les
inc
imul
cmp
dec
call
add
sahf
mov
inc
scas
aaa
ss
retf
and
sbb
inc
lods
div
add
lahf
sbb
add
add
mov
(bad)
mov
les
in
sti
push
in
popf
call
adc
xchg
stos
div
or
inc
mov
in
les
push
in
sahf
sti
add
les
dec
sti
and
add
add
les
in
sti
push
in
popf
call
adc
xchg
stos
imul
ss
mov
in
les
push
in
sahf
sti
add
les
dec
sti
and
add
add
les
popf
or
sti
dec
dec
ud0
lods
(bad)
in
popf
(bad)
in
sti
jmp
add
les
in
popf
or
sti
aad
scas
scas
mov
add
in
sti
(bad)
in
scas
(bad)
in
lods
test
add
popf
lods
sub
dec
les
popf
or
sti
dec
dec
ud0
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
jmp
add
les
sti
sbb
les
in
popf
or
sti
aad
xchg
scas
mov
add
in
sti
(bad)
in
xchg
(bad)
in
scas
idiv
inc
add
dec
cmp
sbb
add
add
test
add
dec
in
sti
in
inc
cwde
iret
add
add
aad
cwde
and
add
add
xchg
test
mov
mov
dec
outs
cmp
stos
dec
cmp
jmp
(bad)
call
jmp
stos
aaa
cmp
test
test
outs
cmp
aaa
cmp
xchg
(bad)
aaa
jecxz
retf
test
dec
lea
imul
lahf
jp
pop
aaa
cmp
jp
add
inc
cmp
lods
lods
xor
(bad)
(bad)
jmp
inc
dec
call
cmc
test
test
fdivr
mul
fsubr
mov
add
add
(bad)
div
xor
add
cmp
mov
mov
ds
test
dec
lea
sti
div
test
dec
lea
inc
in
dec
and
call
in
sti
outs
cmp
(bad)
(bad)
mov
in
addr16
mov
mov
or
add
jae
ins
mov
stos
mul
xchg
add
dec
in
lea
xchg
inc
mov
dec
mov
lods
dec
jmp
outs
dec
(bad)
test
add
dec
push
test
add
int3
js
les
sti
sbb
fwait
aam
(bad)
mov
add
sti
in
inc
xchg
lea
dec
faddp
aaa
(bad)
jecxz
xchg
(bad)
mov
(bad)
dec
pop
(bad)
jecxz
idiv
cmp
pop
xor
popf
dec
aaa
neg
test
stos
aaa
cmp
dec
add
add
test
(bad)
(bad)
mov
lea
jmp
neg
inc
dec
call
inc
shl
in
cwde
dec
mov
lods
xchg
(bad)
dec
xchg
dec
xchg
test
xchg
(bad)
dec
int3
not
add
add
neg
mov
aaa
mov
div
add
in
pop
fadd
xchg
jmp
xchg
fadd
add
dec
(bad)
test
test
lahf
jp
pusha
xchg
xchg
fldcw
xor
sti
xchg
xchg
out
outs
mov
xchg
xchg
inc
xchg
xchg
dec
mov
xchg
xchg
dec
mov
xchg
pop
add
sahf
mov
cli
(bad)
mov
add
sti
lods
xor
das
(bad)
mov
retf
aaa
inc
(bad)
pop
xchg
(bad)
mov
outs
rcr
dec
add
add
es
dec
sti
dec
faddp
aaa
cmp
sti
adc
faddp
aaa
(bad)
add
jmp
add
add
dec
faddp
xchg
aaa
(bad)
lods
retf
neg
mov
fiadd
aaa
mov
dec
push
mul
add
sahf
mov
xchg
outs
stc
push
outs
pop
(bad)
dec
call
add
ss
(bad)
mov
add
dec
mov
xor
add
mov
sbb
les
outs
stc
mov
pop
popf
dec
call
add
ss
(bad)
mov
add
dec
mov
mov
add
mov
sbb
les
jno
outs
inc
sti
dec
sar
cmp
sbb
add
(bad)
mov
add
dec
mov
jnp
add
mov
sahf
mov
faddp
aaa
cmp
mov
int3
js
les
jno
outs
inc
(bad)
dec
shr
dec
push
(bad)
aaa
cmp
adc
jb
(bad)
mov
add
dec
mov
je
add
mov
sahf
mov
faddp
aaa
cmp
mov
xchg
(bad)
mov
faddp
aaa
cmp
jmp
xchg
(bad)
mov
faddp
aaa
cmp
mov
xchg
(bad)
mov
dec
dec
inc
div
cmp
dec
call
add
sahf
mov
and
inc
inc
inc
fdivrp
xchg
call
and
call
scas
lods
dec
inc
dec
jecxz
xchg
dec
or
or
xchg
cmp
lods
mov
pusha
repz
dec
sub
cmp
call
dec
out
sbb
scas
hlt
inc
sub
xchg
rep
dec
add
inc
inc
fidivr
aad
(bad)
in
(bad)
in
pop
lahf
popf
dec
inc
dec
lods
dec
xchg
or
jecxz
dec
int3
push
imul
fcomp
mov
(bad)
and
hlt
pop
(bad)
(bad)
(bad)
jmp
scas
(bad)
push
imul
inc
and
sti
lods
xchg
push
repz
add
int3
fadd
stos
xchg
jmp
imul
inc
lods
dec
lods
mov
and
inc
pop
cmp
(bad)
in
jmp
test
test
dec
js
lods
sub
scas
dec
dec
jmp
ror
xchg
sti
dec
inc
lods
inc
inc
faddp
xchg
cmp
aaa
add
add
lahf
push
dec
or
dec
inc
mov
sub
dec
retf
or
dec
out
or
jecxz
xchg
sbb
jecxz
jmp
inc
inc
(bad)
call
dec
inc
fldcw
out
xchg
sub
dec
inc
(bad)
dec
in
or
jecxz
xchg
dec
rcr
xchg
xchg
xchg
inc
inc
fimul
mov
add
mov
or
dec
(bad)
sti
dec
inc
sub
outs
loop
xchg
dec
cmp
ror
jge
neg
les
(bad)
and
or
jp
mov
sti
lods
(bad)
call
inc
loop
jp
mov
out
inc
dec
loop
(bad)
sti
lods
(bad)
call
shr
pusha
lahf
jecxz
xchg
call
sahf
mov
dec
or
lods
xchg
(bad)
jge
dec
and
cmp
fisttp
jnp
xchg
push
movs
scas
mov
inc
inc
loop
(bad)
in
retf
dec
jno
dec
inc
and
push
jnp
mov
addr16
mov
dec
out
dec
loop
or
xchg
loop
dec
add
lods
xchg
jmp
pop
jge
js
les
sub
and
sti
aad
mov
inc
cmp
cwde
iret
loopne
add
dec
loop
dec
or
jns
add
lods
mov
rol
dec
mov
mov
inc
cmp
retf
lods
or
dec
in
popf
jecxz
lahf
jg
mov
dec
test
popf
and
dec
loop
dec
add
mov
push
movs
jmp
or
jecxz
cmps
jp
and
dec
jp
cmp
add
add
sub
and
cwde
iret
lods
add
add
(bad)
dec
loop
dec
add
int3
xchg
dec
push
dec
xchg
cmp
inc
cmp
popa
and
call
pop
rol
dec
mov
mov
dec
mov
lods
or
dec
in
popf
jecxz
lahf
repnz
mov
in
jecxz
in
popf
and
dec
loop
dec
add
mov
push
movs
jmp
and
jecxz
cmps
jp
push
sub
lahf
sbb
lahf
ss
inc
rol
sti
jge
test
xchg
lods
pop
sbb
les
popf
dec
js
dec
outs
(bad)
jp
loop
dec
lods
xchg
and
call
xchg
mov
rol
cwde
iret
rol
add
inc
cmp
dec
cmp
cli
dec
and
dec
popa
and
call
loop
dec
add
mov
push
movs
jmp
and
jecxz
cmps
jp
and
dec
jp
cmp
jp
stos
dec
and
dec
fbld
pop
call
dec
loop
dec
add
int3
xchg
dec
push
dec
xchg
out
inc
cmp
jp
pop
dec
lods
and
call
loop
dec
add
mov
push
movs
jmp
and
jecxz
cmps
jp
push
sub
lahf
jp
jnp
dec
cmp
in
idiv
out
xchg
sti
xchg
popf
xchg
lods
in
sahf
fld
js
les
inc
div
dec
add
inc
cmp
dec
call
add
sahf
mov
mov
in
popf
dec
dec
fdivr
(bad)
in
sti
jmp
add
dec
inc
dec
jmp
in
(bad)
repnz
in
dec
inc
out
(bad)
sti
dec
inc
(bad)
outs
and
lods
cwde
adc
in
js
les
lods
xor
add
dec
rol
cmp
sbb
dec
dec
mov
lods
or
cli
out
dec
mov
inc
ror
in
lods
dec
(bad)
out
(bad)
in
popf
cmp
fsub
dec
mov
cmps
out
dec
mov
dec
in
jmp
in
lods
lods
sub
dec
mov
scas
lods
mov
jecxz
(bad)
cmp
dec
lods
mov
in
dec
cmp
jge
sahf
popf
add
les
sti
dec
jg
add
xchg
in
test
sbb
les
sti
dec
jg
add
xchg
in
test
sbb
sahf
sti
add
inc
dec
or
(bad)
mov
fmul
add
or
in
cwde
cmps
add
dec
dec
inc
inc
inc
fimul
cmp
dec
inc
lods
(bad)
out
neg
dec
or
or
xchg
or
xchg
or
sub
xchg
sbb
xchg
dec
call
(bad)
(bad)
fadd
fwait
out
(bad)
mov
add
push
dec
faddp
aaa
cmp
push
lods
retf
lods
xor
add
fwait
dec
call
dec
neg
(bad)
push
xor
add
js
les
inc
dec
aaa
ss
(bad)
mov
add
dec
mov
push
aad
add
sahf
mov
loopne
mov
add
lods
push
(bad)
dec
call
dec
ss
(bad)
mov
add
les
jb
aas
mov
xchg
sub
dec
cmp
dec
(bad)
in
lods
dec
in
sti
(bad)
in
popf
stos
jae
xchg
(bad)
mov
fcomp
stos
neg
add
scas
lods
sub
sub
add
dec
jb
lods
sub
idiv
icebp
sbb
les
mov
aas
mov
xchg
sub
cmp
cmp
xchg
dec
mov
xchg
sub
fwait
add
add
and
jmp
in
jecxz
ss
mov
sub
jmp
(bad)
lods
or
sub
lods
outs
sub
xchg
add
xchg
push
add
add
push
cmc
cwde
and
add
add
and
cwde
and
add
add
cmp
push
cmp
pop
dec
movs
and
sbb
das
cmp
fcomp
das
mov
mov
pop
add
ficom
retf
movs
das
mov
inc
and
mov
(bad)
sub
xor
sub
xor
cmp
fimul
dec
call
fimul
inc
and
(bad)
push
xchg
cld
out
das
mov
mov
inc
or
aad
sub
xor
dec
call
xor
pop
add
cld
(bad)
(bad)
dec
cld
sub
add
ficomp
movs
and
sbb
(bad)
in
lods
das
cmp
adc
outs
call
sub
call
jmp
fdivr
add
lods
adc
pop
outs
(bad)
sub
dec
sbb
in
xchg
call
add
add
sub
add
add
sub
in
in
add
xor
add
dec
icebp
sbb
les
aad
scas
scas
mov
add
scas
push
cmp
pop
mov
add
push
cmp
in
jecxz
sti
fadd
cmp
call
dec
pusha
call
(bad)
lods
mov
hlt
xchg
lahf
jecxz
dec
jmp
mov
test
scas
or
cmovns
or
or
sti
jecxz
pavgw
jecxz
sti
stos
and
mov
(bad)
jns
popf
lods
sub
push
mul
dec
call
call
push
neg
fwait
leave
aad
mov
add
dec
mov
daa
dec
aaa
xchg
mov
test
lods
xor
add
add
dec
lea
daa
xchg
mov
jmp
push
stos
dec
call
push
cmp
dec
add
add
dec
call
add
cmc
sar
push
cmp
cwde
add
add
hlt
aas
test
push
cmp
jp
jecxz
or
sbb
xor
add
dec
add
add
pop
inc
add
dec
add
in
xor
fdiv
cmp
cmp
cdq
xor
(bad)
add
outs
inc
add
lods
sbb
cwde
loope
push
stos
cmp
and
add
pop
and
jecxz
cmp
dec
cmp
fwait
or
dec
add
lods
mov
fwait
scas
jecxz
cmp
pop
add
add
in
xor
cmc
cmp
jl
(bad)
jmp
inc
in
popa
dec
sbb
cmc
neg
rol
lods
mov
dec
sbb
idiv
test
lods
xor
out
(bad)
in
xchg
dec
test
outs
in
cmc
imul
test
dec
pop
fsubr
and
jg
sbb
mov
(bad)
in
scas
or
outs
pop
dec
outs
in
cmc
xchg
pop
neg
test
dec
pop
fsubr
(bad)
in
lods
div
xor
add
sbb
fwait
outs
cmp
jmp
cmc
idiv
mov
mov
add
mov
pop
iret
pusha
shl
or
out
loope
push
dec
scas
mov
add
cmc
not
mov
jmp
dec
or
fidivr
mov
in
int
jmp
cmc
test
call
xchg
dec
mov
dec
cmp
dec
sbb
dec
scas
dec
cmp
dec
cli
xchg
jecxz
xor
test
mov
adc
adc
and
dec
add
lods
mov
add
add
retf
lods
mov
fmul
in
sub
(bad)
in
fldcw
test
dec
mov
xchg
dec
faddp
inc
dec
xchg
sub
in
adc
in
popf
(bad)
in
sub
in
fdecstp
and
add
dec
sti
xchg
dec
faddp
lods
sub
sub
in
xor
add
lods
sbb
add
add
in
sub
(bad)
in
(bad)
(bad)
in
push
mov
outs
cmp
int3
mul
sbb
add
lods
sub
(bad)
mov
in
fs
out
imul
sbb
add
xchg
dec
faddp
dec
dec
mov
dec
lods
sub
cmp
in
fs
in
sub
in
fdecstp
clc
sbb
add
(bad)
in
scas
xchg
dec
rol
xchg
fsubr
jmp
outs
in
mov
out
neg
sti
xchg
dec
faddp
jecxz
lods
sbb
mov
xchg
sub
in
xor
xor
cmp
add
lods
sbb
add
add
in
sub
(bad)
in
(bad)
(bad)
in
push
cmp
shr
test
add
lods
sub
(bad)
mov
in
sar
out
neg
sti
lods
xor
dec
rol
lods
sub
sub
xchg
(bad)
mov
xchg
(bad)
mov
(bad)
outs
mov
dec
imul
sti
dec
mov
dec
faddp
xchg
sub
mov
fisub
sub
mov
in
fcos
in
push
in
xor
test
add
lods
sub
(bad)
mov
in
fs
out
test
(bad)
in
adc
in
popf
xchg
dec
faddp
stos
in
pop
and
xchg
test
add
lods
sbb
fmul
dec
cmc
not
add
(bad)
cmp
dec
outs
dec
push
idiv
imul
js
les
mov
aas
mov
xchg
sub
cmp
cmp
xchg
dec
mov
xchg
sub
fwait
add
add
and
jmp
in
jecxz
ss
mov
sub
jmp
(bad)
lods
or
sub
lods
outs
sub
xchg
add
xchg
push
add
add
push
cmc
cwde
and
add
add
cmp
das
mov
(bad)
das
repz
cmp
dec
push
add
add
inc
and
and
add
add
dec
movs
and
sbb
das
cmp
fcomp
das
mov
mov
pop
add
ficom
retf
movs
das
mov
inc
and
mov
(bad)
sub
xor
sub
xor
cmp
fimul
dec
call
fimul
inc
and
inc
push
xchg
cld
mov
mov
mov
inc
or
aad
sub
xor
dec
call
xor
cmp
pop
add
test
(bad)
dec
cld
sub
add
ficomp
movs
and
sbb
lahf
jp
(bad)
in
lods
das
cmp
mov
(bad)
in
popf
outs
call
sub
call
jmp
fdivr
add
lods
adc
pop
outs
(bad)
sub
dec
sbb
in
xchg
call
(bad)
dec
sub
add
add
sub
in
in
add
xchg
out
add
dec
icebp
sbb
les
(bad)
jl
mov
xchg
sub
dec
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
cmp
xchg
(bad)
in
xor
scas
test
add
fcomp
stos
neg
add
lods
sub
(bad)
sub
sub
dec
call
add
sub
cmp
fldcw
pop
in
add
retf
out
add
dec
icebp
sbb
les
(bad)
jl
mov
xchg
sub
dec
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
cmp
xchg
(bad)
in
xor
jnp
add
stos
outs
cmp
xor
fisubr
add
in
xchg
outs
(bad)
sub
sub
dec
call
add
sub
cmp
fldcw
pop
in
add
adc
add
sbb
les
(bad)
jl
mov
xchg
sub
dec
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
cmp
xchg
test
add
stos
outs
cmp
pop
fcomp
stos
test
lods
stos
(bad)
in
xchg
outs
(bad)
sub
sub
dec
call
add
sub
cmp
fldcw
pop
in
add
or
icebp
sbb
fwait
push
aad
mov
add
scas
jnp
lods
add
add
dec
in
sti
xchg
sub
cwde
adc
xor
ud0
xchg
xchg
(bad)
in
lods
(bad)
in
popf
dec
jmp
add
outs
in
cmc
dec
aaa
mul
push
test
in
pop
stos
xchg
jmp
fcmovnb
add
mov
add
dec
les
aaa
cmp
cwde
add
add
dec
out
dec
add
inc
inc
outs
cmp
xchg
jmp
or
idiv
(bad)
call
jmp
lahf
test
pop
cmp
call
jmp
fdivr
cmp
outs
dec
cmp
adc
dec
outs
dec
aas
push
cmp
dec
test
xchg
push
int3
sar
test
cmp
xchg
cmc
lahf
jecxz
sbb
dec
mov
and
dec
add
lods
mov
in
cmc
outs
in
sbb
in
xchg
(bad)
in
lods
(bad)
in
popf
idiv
add
dec
sti
xchg
dec
faddp
lods
sub
lods
mov
fisubr
dec
dec
popf
dec
in
lods
xchg
xchg
dec
cmp
xchg
add
inc
sub
xchg
jns
push
movs
call
add
lods
mov
cmp
dec
dec
(bad)
cmp
mov
cmp
(bad)
in
xchg
xchg
lods
dec
dec
in
sub
xchg
not
add
lods
sub
test
dec
idiv
add
sahf
xchg
add
add
add
test
add
dec
cmp
in
inc
cwde
iret
mov
add
aad
cwde
and
add
add
lods
imul
ins
add
dec
lea
mov
loop
cmp
stos
dec
cmp
jmp
(bad)
call
jmp
stos
aaa
cmp
div
cmp
xchg
(bad)
aaa
ss
(bad)
mov
add
popf
lahf
jp
inc
dec
dec
sti
fdivr
xchg
jmp
mov
cmp
lea
(bad)
jmp
inc
dec
call
cmc
not
mov
(bad)
fadd
mov
cmps
mov
add
fsubr
mov
add
add
(bad)
not
xor
add
rol
mov
mov
xor
lea
sti
neg
and
and
call
in
sti
outs
cmp
(bad)
(bad)
mov
in
addr16
mov
mov
adc
jae
ins
mov
stos
neg
add
dec
in
lea
xchg
inc
mov
dec
(bad)
ins
add
mov
outs
dec
(bad)
test
add
test
add
js
les
inc
imul
cmp
dec
call
add
sahf
mov
inc
sti
aaa
ss
retf
div
lods
imul
inc
scas
not
retf
add
lods
sbb
mov
popf
int3
js
les
push
dec
dec
sti
lods
xor
add
fwait
mov
dec
sti
neg
les
push
dec
dec
sti
lods
xor
add
add
cmp
neg
fwait
cmp
mov
add
sti
mul
mov
sti
xchg
xchg
xchg
jmp
pop
mov
add
sti
mul
xchg
test
xchg
not
test
test
xchg
div
mov
add
not
das
test
lods
dec
jmp
xchg
test
jns
rol
idiv
mov
add
(bad)
jns
rol
neg
out
loopne
mov
inc
mov
add
popf
ins
neg
mov
add
jg
test
add
sahf
mov
inc
sti
idiv
inc
lods
mul
xor
add
inc
scas
not
xor
add
stos
stos
test
add
jae
add
add
not
pop
xchg
lea
ret
rol
add
aad
cwde
and
add
add
xchg
not
add
mov
sbb
inc
and
outs
cmp
stos
dec
cmp
neg
push
test
stos
outs
and
(bad)
call
sbb
stos
xchg
(bad)
not
xlat
test
lods
add
fsub
mov
cmp
aaa
ss
retf
not
(bad)
call
cmp
mov
lea
or
mov
and
(bad)
jmp
dec
sbb
cmp
dec
cmc
not
adc
sub
add
int3
fsubr
mov
add
add
(bad)
div
add
lods
xor
add
jb
mov
mov
pop
xchg
test
dec
lea
sti
idiv
xchg
test
dec
lea
inc
in
sub
call
inc
(bad)
in
sti
outs
mov
(bad)
(bad)
mov
addr16
mov
mov
or
bound
mov
not
in
lea
xchg
inc
mov
dec
xor
lods
dec
jmp
outs
dec
(bad)
test
dec
push
test
int3
js
les
push
dec
dec
sti
lods
xor
add
ds
sti
neg
les
lea
jns
and
call
lods
mov
cmp
dec
dec
inc
lods
mov
dec
cmp
xchg
mov
dec
aaa
in
int3
js
les
xchg
dec
fimul
popf
dec
fadd
cmp
inc
inc
add
lods
sbb
int3
dec
lea
in
xchg
dec
int3
(bad)
in
scas
outs
mov
(bad)
dec
xchg
dec
rol
lods
sbb
xchg
call
(bad)
dec
(bad)
in
lods
outs
in
(bad)
jmp
(bad)
out
div
add
add
xchg
dec
faddp
lods
sub
popf
lahf
loopne
lods
dec
dec
sti
dec
faddp
jge
xchg
mov
jg
js
les
ins
dec
dec
popf
and
call
mov
(bad)
in
(bad)
push
cmp
dec
dec
in
nop
dec
cmp
xchg
dec
cmp
push
sbb
fcomp
fwait
nop
pop
(bad)
mov
add
outs
in
xchg
dec
aaa
xchg
mov
jmp
stos
mul
dec
jmp
mov
sbb
inc
pushf
test
dec
dec
sbb
cmp
(bad)
in
mul
xchg
jns
mov
imul
in
scas
jns
dec
mov
(bad)
mov
jp
add
lahf
test
jecxz
dec
cmc
lods
mov
fimul
scas
jecxz
cmp
or
mov
scas
jecxz
cmp
or
mov
xchg
lahf
outs
cmp
xchg
or
lahf
fmulp
pusha
sar
call
loope
push
dec
scas
aad
lea
lods
or
fisubr
stos
outs
cmp
dec
stos
test
dec
cmp
cmp
or
cmp
cmp
in
or
xchg
and
push
in
lods
inc
mov
jp
inc
dec
mov
and
dec
add
lods
mov
add
add
popf
outs
in
push
(bad)
in
xchg
(bad)
in
scas
mul
(bad)
call
dec
int3
(bad)
in
xchg
outs
mov
test
(bad)
dec
lods
sbb
(bad)
dec
(bad)
in
popf
xchg
jmp
dec
dec
cmc
(bad)
out
cmps
dec
lods
outs
in
add
movs
idiv
mov
dec
scas
dec
faddp
lods
sub
dec
sbb
jmp
sar
xchg
(bad)
in
scas
outs
cmp
(bad)
in
xchg
(bad)
in
lods
stos
dec
int3
idiv
mov
dec
lods
sub
in
sti
xchg
dec
faddp
lods
mov
xchg
xchg
neg
sub
cmp
jo
test
dec
push
neg
loop
add
push
mov
inc
sahf
fstp
loop
sahf
sti
call
jecxz
jb
(bad)
ror
repnz
dec
push
loop
dec
inc
loop
dec
dec
test
add
loop
test
mov
and
add
add
call
pusha
push
jecxz
int
push
(bad)
out
mov
hlt
push
loop
add
in
js
les
(bad)
jl
mov
xchg
sub
dec
dec
in
scas
dec
dec
lods
xchg
(bad)
in
lods
ja
xchg
(bad)
mov
cld
sub
cmp
xchg
imul
(bad)
(bad)
jmp
fcomp
stos
neg
add
lods
sub
sub
sub
dec
call
dec
sub
cmp
fldcw
pop
in
add
fistp
add
sbb
fwait
adc
mov
add
sti
outs
cmp
in
pop
stos
xchg
div
rol
jmp
sbb
add
dec
mov
aaa
outs
in
std
idiv
movs
test
stos
push
cmp
dec
test
(bad)
(bad)
mov
(bad)
neg
test
(bad)
in
popf
push
cmp
jp
cwde
dec
loop
dec
push
(bad)
jecxz
dec
and
cmc
jns
out
ror
(bad)
in
and
aaa
stos
ud0
cmc
outs
cmp
stos
dec
ss
call
sbb
call
add
xchg
jmp
out
dec
dec
sti
dec
dec
dec
faddp
jecxz
dec
sar
in
pop
lods
test
jecxz
test
loope
test
xchg
jmp
xor
dec
mov
in
pop
dec
mov
sbb
test
in
div
adc
dec
jmp
outs
cmp
stos
idiv
sti
add
dec
aaa
idiv
inc
add
sahf
sti
add
scas
fwait
jmp
add
dec
mov
in
pop
stos
xchg
div
add
add
xchg
jmp
sbb
cwde
iret
mov
mov
aaa
dec
rcl
(bad)
in
inc
lahf
jecxz
jno
push
cmp
dec
dec
fisubr
lods
mov
sbb
cwde
and
movs
ror
faddp
jecxz
jns
out
dec
ficomp
imul
mov
cmp
mov
cmc
dec
mov
jb
pop
jns
popf
test
add
lods
mov
cmp
mov
imul
mov
dec
mov
aaa
jns
out
dec
ficomp
not
(bad)
in
mov
add
add
lahf
cmp
sti
dec
dec
dec
faddp
jecxz
dec
sar
in
pop
lods
test
jecxz
test
jbe
test
xchg
jmp
xchg
xchg
int3
dec
mov
jecxz
sbb
dec
mov
aaa
xchg
(bad)
jecxz
aad
neg
div
cld
jp
add
cmp
stos
not
mov
imul
xor
mul
pop
add
dec
in
sti
dec
cmp
ss
faddp
dec
cmp
xchg
in
pop
push
int3
xchg
test
dec
inc
mov
std
lahf
jecxz
sbb
outs
cmp
stos
dec
test
inc
mov
jmp
mov
aaa
cmp
mov
add
add
jmp
dec
ss
faddp
dec
cmp
lods
and
dec
add
lods
mov
sbb
inc
push
dec
ss
faddp
jecxz
jns
out
dec
ficomp
not
call
add
sbb
in
cmp
call
mov
ss
faddp
dec
push
out
pop
dec
cmp
(bad)
jns
dec
add
inc
dec
add
lods
mov
dec
test
pop
aad
imul
imul
std
inc
ins
dec
ss
faddp
jecxz
jns
out
dec
ficomp
test
add
lods
dec
test
ss
faddp
jecxz
xchg
ss
stos
(bad)
jecxz
aad
neg
div
mov
add
lods
dec
jmp
outs
cmp
stos
imul
add
dec
push
test
add
int3
dec
repz
(bad)
(bad)
push
(bad)
(bad)
(bad)
dec
lahf
sub
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
mov
xor
add
int3
dec
in
sti
in
pop
lahf
and
dec
sti
dec
push
(bad)
dec
cmp
and
sti
outs
rol
repz
and
dec
faddp
jecxz
inc
fdivrp
ss
mov
ficomp
dec
xchg
dec
out
lods
mov
ss
stos
(bad)
fadd
fadd
jecxz
test
add
dec
push
mov
and
mov
rol
cmp
sbb
dec
dec
mov
lods
or
cli
dec
lahf
jp
mul
test
dec
inc
mov
dec
cmp
(bad)
out
not
mov
cmps
out
dec
mov
dec
in
jmp
in
popf
lods
sub
cwde
adc
dec
adc
(bad)
lods
mov
(bad)
cmp
dec
lods
mov
in
dec
cmp
jge
sahf
sti
add
sub
dec
loop
dec
add
pusha
rcl
loop
(bad)
sti
dec
push
sub
dec
outs
bound
mov
lods
cwde
adc
in
dec
dec
cwde
adc
ud0
les
sti
repnz
lods
test
add
jecxz
xchg
(bad)
(bad)
in
popf
dec
xchg
psadbw
pop
test
sbb
fwait
or
(bad)
mov
add
sti
dec
cmp
imul
dec
jns
fmulp
int
ror
lea
dec
faddp
dec
cmp
sti
push
push
rol
push
dec
fisubr
and
add
mov
aaa
cmp
mov
push
cmp
dec
dec
mov
cmp
add
lods
mov
pop
shr
dec
faddp
jecxz
jns
out
dec
ficomp
imul
(bad)
(bad)
jmp
lods
dec
test
mov
dec
mov
jb
pop
dec
dec
dec
(bad)
in
popf
jmp
shl
cmp
mov
dec
faddp
jecxz
lods
cs
add
mov
sbb
call
idiv
(bad)
(bad)
jmp
cmp
stos
idiv
jecxz
add
imul
add
int3
sub
into
(bad)
(bad)
jmp
pop
shl
dec
faddp
jecxz
jns
out
dec
ficomp
test
(bad)
jmp
lods
dec
test
push
lahf
mov
sti
dec
dec
dec
faddp
jecxz
dec
sar
lods
test
in
jecxz
test
clc
mov
fwait
push
outs
dec
mov
repz
(bad)
(bad)
(bad)
fcomp
fwait
bound
aad
add
sti
dec
stos
fsubrp
inc
jp
dec
sub
aad
retf
dec
test
mov
push
ds
out
dec
fisubr
and
mov
dec
add
and
inc
sahf
(bad)
in
or
(bad)
aam
out
dec
shr
dec
test
lods
jecxz
dec
add
and
pushf
jecxz
add
inc
outs
cmp
inc
stos
dec
add
and
cmp
fwait
aaa
cmp
cwde
add
add
rol
stos
dec
add
cmp
jp
add
mul
test
outs
dec
fwait
xchg
fmul
in
test
dec
int3
div
mov
lods
xor
add
stos
mul
int3
pop
test
add
idiv
or
lods
xor
add
outs
(bad)
(bad)
jmp
(bad)
in
push
shr
xchg
(bad)
mov
xchg
lods
mov
jecxz
push
(bad)
outs
and
stos
idiv
(bad)
jmp
mov
and
in
lods
outs
and
fcomp
mov
(bad)
jmp
loope
(bad)
(bad)
mov
(bad)
(bad)
mov
outs
and
jae
xchg
(bad)
mov
(bad)
jmp
add
(bad)
(bad)
mov
outs
and
(bad)
push
push
(bad)
(bad)
jmp
fwait
xchg
test
fwait
stos
aaa
cmp
div
popf
add
dec
cmp
mov
add
fadd
fmul
or
aaa
ss
retf
div
add
dec
outs
or
rol
(bad)
mov
sbb
les
inc
imul
(bad)
(bad)
inc
dec
call
add
sahf
mov
cmp
mov
add
sti
dec
dec
lods
xchg
(bad)
in
popf
outs
cmp
stos
neg
sbb
dec
idiv
ss
(bad)
mov
outs
dec
ficom
jmp
test
popf
outs
or
pop
retf
imul
lods
test
(bad)
in
lods
outs
or
push
cmp
jecxz
arpl
cs
ss
retf
dec
push
imul
or
add
les
inc
test
sti
dec
call
add
sahf
mov
dec
inc
aaa
ss
(bad)
mov
inc
dec
call
add
sahf
mov
(bad)
mov
(bad)
js
les
dec
dec
dec
inc
aaa
ss
(bad)
mov
jne
add
mov
sahf
mov
(bad)
mov
aaa
ss
retf
and
call
lods
aaa
ss
(bad)
mov
cmps
test
dec
loop
lods
or
loop
dec
add
pusha
rcl
dec
push
sub
dec
outs
bound
mov
sahf
in
dec
dec
ud0
int3
fadd
fwait
movs
inc
(bad)
mov
add
lods
xor
add
dec
faddp
inc
cmp
lods
jp
mov
push
cmps
inc
add
int3
fwait
aam
dec
mov
jnp
(bad)
mov
add
sti
lods
xor
add
in
add
iret
pusha
in
mov
(bad)
(bad)
jmp
ss
sti
dec
push
(bad)
dec
cmp
and
sti
outs
rol
test
add
mul
inc
add
sahf
mov
push
(bad)
mov
add
sti
xchg
dec
mov
cmp
sti
outs
rol
mul
add
mov
aaa
lods
pop
sti
add
sub
pusha
call
(bad)
dec
dec
faddp
lods
cld
or
pusha
rol
dec
int3
test
add
sahf
mov
outs
jno
outs
inc
sti
dec
sar
cmp
fxch
(bad)
mov
loopne
mov
add
dec
mov
jle
add
mov
sahf
mov
faddp
aaa
cmp
mov
int3
js
(bad)
fadd
dec
call
add
add
cdq
and
call
xor
push
sbb
les
(bad)
in
div
inc
xchg
mov
mov
cmp
adc
push
in
sahf
sti
add
xor
mul
inc
add
sti
fadd
mul
xor
add
inc
mov
xchg
xchg
pusha
aaa
cmp
xchg
les
cmp
stos
(bad)
in
popf
push
cmp
dec
xchg
test
dec
outs
in
(bad)
rol
test
dec
aaa
neg
inc
add
sahf
sti
add
(bad)
fwait
adc
(bad)
mov
add
sti
in
pop
xchg
xchg
xchg
aad
popf
call
mov
call
int3
call
jmp
in
popf
call
popf
div
mov
div
popf
add
sti
neg
mov
(bad)
in
pop
cmp
mul
fcomp
fwait
cmp
(bad)
mov
add
ror
mov
test
lods
xor
add
sti
in
pop
inc
xchg
(bad)
imul
add
iret
pusha
in
addr16
pop
mov
mov
test
test
stos
xchg
jmp
sti
lds
inc
add
jae
add
add
neg
and
mul
push
test
outs
cmp
xchg
imul
pushf
xchg
les
inc
(bad)
dec
ss
outs
xchg
(bad)
(bad)
push
sldt
add
pusha
in
pop
lods
dec
jmp
dec
int3
test
test
mov
div
add
int3
dec
cmp
xchg
lods
(bad)
(bad)
dec
les
call
(bad)
push
in
test
iret
pusha
in
xor
outs
and
loope
test
jns
lahf
int3
mov
repz
les
dec
mov
add
add
(bad)
jmp
mov
dec
dec
sti
jnp
dec
aaa
lods
cmc
add
lahf
mov
aaa
fsubr
xchg
mov
xchg
outs
dec
lea
cmp
add
test
and
jmp
mov
rcr
retf
sar
xchg
xchg
adc
sti
add
les
dec
dec
cmp
dec
xchg
dec
repz
xchg
and
jmp
into
jecxz
add
pusha
aad
jmp
cwde
and
add
fsubr
mov
add
dec
mov
mov
lea
jecxz
add
(bad)
in
pop
push
int3
call
aaa
cmp
lods
inc
mov
sbb
rcr
rep
in
and
mov
std
lods
pusha
sti
push
int3
call
lods
pusha
(bad)
push
int3
call
mov
repz
mul
cmp
stos
dec
aaa
outs
dec
and
cli
dec
add
dec
out
lods
push
sti
aad
std
call
xchg
add
mov
mov
add
jl
inc
mov
lods
pop
scas
inc
mov
jg
inc
mov
dec
ss
sti
stos
xchg
add
jg
inc
mov
pusha
in
repz
inc
mov
xchg
add
lods
and
inc
mov
inc
mov
lods
fwait
cli
xor
mov
add
sti
dec
sti
stos
xchg
and
lea
neg
jp
add
(bad)
in
pop
push
int3
call
outs
mov
push
int3
call
xchg
std
xchg
not
sbb
rcr
arpl
std
xchg
jmp
mov
cmp
lods
pusha
sti
push
int3
call
lods
pusha
(bad)
push
int3
call
fisubr
arpl
mov
cmp
stos
dec
cmp
xchg
outs
js
div
out
lods
push
sti
aad
neg
imul
adc
add
mov
add
scas
and
inc
lods
sar
call
mov
dec
mov
cwde
div
add
dec
sti
dec
mov
les
inc
scas
div
sub
mov
and
mov
(bad)
xchg
dec
pop
lods
inc
mov
dec
jg
inc
mov
jecxz
pusha
in
push
outs
(bad)
pop
dec
lods
xchg
jmp
int
jg
fadd
in
int
jnp
cmp
xchg
clc
xchg
dec
sti
xchg
xchg
dec
jecxz
out
dec
cmp
jmp
jge
out
in
neg
les
and
(bad)
lods
push
mov
dec
xchg
(bad)
xchg
dec
into
(bad)
in
int
jnp
scas
scas
xchg
mov
dec
cmp
outs
(bad)
lock
lods
xchg
mov
dec
fadd
in
int
in
jmp
cmp
mov
lahf
ss
add
xchg
dec
cmp
xchg
pop
neg
les
lods
pop
fld
mov
in
push
test
add
aad
lods
inc
mov
cmp
mov
mov
dec
add
lahf
or
mov
inc
dec
dec
sub
push
repz
push
dec
xchg
outs
cmp
ds
cmp
dec
add
add
add
push
mov
call
add
neg
les
and
sti
xchg
dec
shr
xchg
mul
cli
mov
sti
dec
test
or
add
inc
xor
sti
dec
out
push
repz
push
dec
xchg
outs
cmp
ds
cmp
dec
add
call
mov
call
ss
add
sahf
mov
dec
cmp
dec
dec
inc
lods
inc
mov
lods
pop
scas
inc
mov
in
(bad)
in
neg
mov
pusha
call
lahf
(bad)
lods
xor
add
jmp
sti
lahf
mov
(bad)
aad
sti
in
popf
dec
cmp
sti
call
inc
push
sbb
and
in
xchg
xchg
lahf
jecxz
dec
add
int3
in
sahf
sti
add
les
dec
cmp
dec
dec
jno
in
int
inc
lods
stc
sti
add
in
neg
dec
(bad)
fwait
and
mov
jmp
(bad)
lods
xor
add
jmp
sti
lahf
mov
(bad)
aad
sti
in
popf
dec
cmp
sti
call
inc
push
sbb
and
in
xchg
xchg
lahf
jecxz
dec
add
int3
in
sahf
sti
add
mov
fld
mov
mov
ins
dec
mov
(bad)
in
int
inc
lods
inc
mov
mov
or
sti
dec
call
xchg
dec
lods
dec
popa
xchg
lods
aad
in
adc
int3
js
les
xchg
jmp
cmp
and
mov
mov
mov
sub
(bad)
add
xor
imul
test
fisubr
jmp
fsubr
mov
add
in
pop
aaa
cmp
cwde
inc
mov
sbb
xchg
std
outs
cmp
cli
dec
stos
outs
in
and
mov
inc
mov
int3
call
mov
(bad)
loope
inc
fld
mov
add
mov
mov
movs
mov
xchg
(bad)
mov
inc
(bad)
mov
das
xor
test
sub
mov
test
mov
pusha
xor
inc
mov
add
and
dec
mov
add
(bad)
dec
cli
scas
outs
popf
xchg
lahf
cmps
dec
mov
(bad)
in
int
pop
(bad)
dec
mov
outs
(bad)
mov
or
sti
dec
call
xchg
dec
lods
dec
popa
xchg
lods
aad
in
int
in
int3
fsubr
mov
add
outs
mov
xchg
and
pusha
xchg
les
std
xchg
jmp
cmp
sub
outs
in
and
mov
mov
dec
in
std
and
popa
dec
cli
(bad)
dec
(bad)
rol
scas
test
add
mov
pop
scas
and
movs
mov
xchg
lea
cmp
mov
mov
das
xor
idiv
add
das
xor
imul
cmp
in
pusha
xchg
add
int3
cmp
pop
aad
(bad)
in
(bad)
lods
shl
sti
shl
test
jl
add
mov
int3
call
push
inc
sti
dec
pop
int3
or
shl
test
jmp
push
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
add
mov
add
add
outs
dec
(bad)
jp
test
lods
xor
add
fisubr
cmp
ins
mov
stos
not
add
add
cmp
mul
out
add
outs
dec
(bad)
out
cld
test
lods
xor
add
fisubr
arpl
test
jae
ins
mov
stos
mul
add
add
js
les
repz
popa
add
dec
(bad)
js
les
in
sti
xchg
fadd
dec
call
dec
xor
pusha
call
hlt
add
mov
in
inc
dec
inc
fldcw
pusha
call
hlt
add
mov
in
inc
lods
sbb
jge
sbb
dec
(bad)
js
les
in
sti
lods
rol
inc
or
test
(bad)
sub
mov
fwait
(bad)
sub
mov
test
(bad)
mov
neg
mov
test
in
int3
dec
call
mov
mov
(bad)
mov
dec
loope
sub
mov
add
lods
push
xchg
xchg
test
mov
dec
aaa
jge
jae
aas
mov
mov
mov
sub
mov
add
lods
push
xchg
xchg
test
mov
int3
dec
(bad)
js
les
sti
lods
mov
xchg
mov
mov
stos
test
add
sahf
mov
(bad)
mov
mov
stos
test
add
mov
fcom
hlt
add
stos
xchg
test
dec
push
in
dec
dec
inc
inc
inc
lods
add
inc
pop
lods
add
mov
mov
(bad)
lods
add
mov
push
lods
add
mov
dec
(bad)
(bad)
in
sti
idiv
add
mov
sbb
aaa
jo
add
int3
dec
push
(bad)
not
adc
dec
lods
fmul
xchg
jmp
dec
(bad)
js
les
inc
not
cmp
dec
call
add
sahf
mov
les
sti
dec
sti
and
call
and
sti
dec
lods
fmul
xchg
jmp
int3
dec
(bad)
js
les
fadd
outs
dec
jmp
mov
(bad)
push
sub
mov
jmp
mov
jmp
repnz
(bad)
push
int3
jl
sub
mov
dec
les
pop
les
mov
movs
dec
mov
mov
add
mov
xchg
sub
mov
fwait
xor
(bad)
mov
add
add
(bad)
test
dec
sti
lods
xor
add
popf
lahf
mov
mov
or
adc
pop
dec
sti
test
jmp
pusha
call
xchg
jmp
inc
pop
das
call
sti
mul
dec
jmp
mov
jmp
xchg
cmps
add
int3
dec
(bad)
js
les
fadd
outs
dec
jmp
loop
(bad)
call
add
dec
xor
sub
mov
(bad)
jl
sub
mov
outs
dec
jmp
inc
test
push
int3
dec
(bad)
js
les
mov
add
fdivr
test
pusha
call
mov
sti
xchg
(bad)
lahf
jp
pusha
xor
sub
mov
js
les
sti
lods
pop
stos
add
lods
pop
(bad)
lods
mov
jecxz
pusha
fisubr
aam
add
(bad)
fwait
rol
(bad)
mov
add
xchg
lea
inc
(bad)
dec
add
add
pusha
xchg
jmp
inc
sti
xchg
xchg
jns
sti
jae
add
aaa
ss
(bad)
mov
inc
stc
test
dec
push
test
add
sahf
mov
add
mov
add
xchg
lea
ss
(bad)
mov
dec
add
add
out
(bad)
(bad)
mov
outs
or
push
ss
add
imul
pop
add
int3
dec
(bad)
js
les
inc
not
(bad)
inc
dec
call
add
sahf
mov
add
mov
add
mov
in
into
stos
outs
dec
(bad)
idiv
(bad)
(bad)
jl
sub
mov
lea
pusha
in
mov
(bad)
idiv
dec
xchg
xchg
push
cmp
dec
and
call
dec
lahf
jp
inc
dec
push
cmp
add
pop
mov
jmp
xchg
aaa
inc
lods
inc
add
add
(bad)
sub
(bad)
mov
dec
xchg
sub
mov
(bad)
jl
sub
mov
mov
outs
dec
(bad)
imul
(bad)
dec
imul
add
int3
dec
(bad)
js
les
popf
lods
pop
xchg
lods
dec
xchg
mov
jecxz
(bad)
(bad)
fadd
fadd
not
mov
fwait
out
loopne
mov
outs
cli
mov
pop
pop
test
and
dec
fadd
mul
add
mov
mov
mov
div
test
jge
sbb
mul
std
sub
mov
dec
les
scas
dec
xchg
and
hlt
imul
ret
add
dec
(bad)
sti
imul
add
dec
mov
dec
pop
(bad)
and
or
pop
inc
add
sbb
pop
inc
dec
dec
sti
ror
pusha
ficomp
add
add
fadd
stos
neg
stos
(bad)
in
sti
outs
cmp
add
(bad)
mov
lods
mov
idiv
add
add
lods
xchg
(bad)
jge
sbb
dec
dec
xchg
ret
add
dec
(bad)
sti
div
pop
add
dec
cmc
dec
push
in
dec
(bad)
js
les
in
popf
and
mul
fdivrp
xchg
mov
sahf
pop
add
lahf
sti
dec
xchg
mov
inc
(bad)
lods
mov
(bad)
in
adc
sti
outs
shl
rcl
pusha
fpatan
pusha
add
add
sbb
xchg
xor
push
retf
and
cmp
mov
pusha
in
popa
xrelease
add
sti
inc
(bad)
mov
call
sbb
test
dec
mov
and
or
add
xchg
mov
dec
cmp
add
neg
pusha
call
sar
popf
rcr
jg
cmp
in
pusha
rcr
popf
push
cmp
(bad)
dec
(bad)
in
lea
jmp
jecxz
stos
outs
cmp
mov
add
sti
loop
add
in
(bad)
dec
int3
lahf
popa
lods
mov
jmp
test
and
repnz
jge
in
int3
dec
(bad)
js
les
lea
(bad)
dec
in
sti
xchg
imul
mov
add
jp
add
add
cmp
add
and
mov
add
add
inc
fiadd
add
addr16
add
popf
dec
add
add
add
lods
sbb
push
in
int3
dec
(bad)
js
les
mov
xchg
jmp
sbb
mov
cmp
stos
fadd
(bad)
in
sti
push
cmp
add
outs
cmp
xchg
add
jmp
adc
sbb
add
int3
dec
(bad)
js
les
dec
cmp
cmp
xchg
fadd
in
int
jnp
in
inc
outs
mov
cmp
dec
or
call
sti
call
test
fcomp
add
mov
dec
sbb
cmp
xchg
(bad)
(bad)
mov
pusha
call
(bad)
in
jmp
ret
inc
push
aaa
in
adc
in
test
inc
test
add
mov
add
lahf
push
dec
not
popa
add
mov
dec
(bad)
cmp
xchg
ja
sub
mov
and
(bad)
mov
call
neg
cmps
add
dec
test
add
mov
(bad)
in
imul
mul
mov
pop
int3
jae
xor
mov
add
addr16
mov
dec
(bad)
js
les
and
call
hlt
or
in
pop
dec
cmp
and
mov
sti
in
pusha
jge
pop
sbb
dec
cmp
div
(bad)
sti
test
add
lahf
mov
mov
sti
and
mov
add
push
(bad)
in
popf
neg
(bad)
dec
scas
lods
ret
add
jns
cmp
inc
dec
not
dec
mov
aad
sti
cwde
and
jp
fadd
add
(bad)
mov
lods
pop
add
cld
aam
add
jmp
inc
add
aaa
add
add
lods
xchg
push
jge
(bad)
jmp
pop
in
pop
div
ret
add
cwde
adc
cwde
or
shl
or
add
dec
sub
cwde
adc
dec
ins
lods
and
and
pop
cmp
mov
add
mov
popf
jns
fadd
(bad)
(bad)
(bad)
cmp
out
add
lods
mov
in
pusha
aad
sti
cwde
and
test
add
(bad)
in
popf
inc
and
and
(bad)
(bad)
dec
jmp
jge
(bad)
push
cmp
(bad)
in
pusha
aad
sti
cwde
and
dec
xchg
fadd
add
(bad)
mov
gs
push
fdivr
(bad)
dec
js
les
dec
dec
in
sti
cwde
or
(bad)
inc
add
inc
call
and
in
ins
xchg
xor
sbb
jge
hlt
outs
or
sub
push
and
push
outs
cmp
fmul
fmul
cmp
stos
jae
jp
add
fadd
imul
cmp
add
cwde
or
sti
call
int3
dec
(bad)
js
les
xchg
dec
mov
pop
(bad)
inc
add
rcr
dec
mov
add
add
inc
in
fistp
movs
sbb
pop
scas
hlt
outs
cli
xor
pop
ins
lods
aaa
fstp
(bad)
ds
outs
cmp
fmul
fmul
cmp
stos
and
add
mov
add
lods
sbb
pusha
cwde
or
sti
call
test
les
popf
(bad)
out
jmp
outs
cmp
cmp
stos
fmul
add
out
add
cwde
xor
xor
addr16
dec
dec
sbb
dec
(bad)
js
les
scas
(bad)
out
jmp
dec
cmp
cmp
push
mov
fmul
add
icebp
inc
add
dec
cmp
int3
repz
add
dec
(bad)
js
les
in
popf
and
test
add
dec
fdivrp
xchg
mov
inc
or
dec
xchg
mov
inc
(bad)
lods
mov
(bad)
in
adc
sti
outs
ror
lods
shl
rcl
add
add
add
add
sbb
xchg
ret
add
scas
push
and
cmp
jno
add
mov
repz
add
dec
inc
sti
inc
(bad)
mov
cwde
iret
xchg
add
add
inc
in
xchg
mov
div
mov
add
or
shl
or
add
xchg
mov
dec
cmp
add
neg
pusha
call
sar
popf
rcr
jg
cmp
in
pusha
rcr
popf
push
cmp
(bad)
dec
(bad)
in
lea
jmp
jecxz
stos
outs
cmp
add
(bad)
in
mov
add
adc
add
lods
sub
pusha
in
(bad)
dec
int3
lahf
popa
lods
mov
jmp
test
and
repnz
pop
in
int3
dec
(bad)
js
les
scas
lods
les
xchg
push
int3
call
cwde
adc
dec
jnp
mov
adc
add
mov
jns
mov
call
cmp
or
(bad)
sar
inc
cmp
dec
add
lods
mov
dec
add
lods
mov
dec
add
push
int3
adc
rcl
or
inc
dec
mov
ins
mov
sub
lods
sbb
add
lahf
ins
jns
dec
mov
jg
mov
test
cmp
test
cmp
inc
xchg
lea
call
lods
xchg
mov
xchg
mov
fldcw
xor
xchg
test
add
lods
sbb
dec
mov
fimul
jo
dec
dec
cwde
je
lods
xchg
cwde
loope
jecxz
xchg
mov
stos
div
cli
add
mov
popa
add
lods
sbb
jecxz
sbb
aad
(bad)
in
sub
pusha
call
lahf
fisttp
lods
cwde
loope
rol
or
or
les
and
xchg
dec
cmp
sahf
aad
mov
jnp
push
cmp
mov
add
add
add
dec
cmp
aaa
add
add
lods
dec
mov
or
mov
jnp
mov
pusha
call
lahf
repnz
cmp
xchg
pop
test
les
and
in
jecxz
mov
cwde
adc
dec
movs
lahf
mov
jmp
add
mov
jns
mov
call
cmp
cmp
(bad)
in
lods
xchg
dec
mul
test
jmp
in
jp
mov
(bad)
(bad)
(bad)
jmp
and
adc
mov
push
push
pop
jg
mov
pop
add
add
inc
and
push
mov
add
add
add
dec
cmp
aaa
add
add
in
pusha
or
jecxz
lahf
jp
fidivr
pop
sbb
dec
(bad)
js
les
and
in
jecxz
mov
cwde
adc
dec
movs
lahf
mov
xchg
cwde
add
mov
jns
mov
call
cmp
cmp
(bad)
in
lods
xchg
dec
not
add
add
in
jp
mov
add
add
push
mov
ss
xchg
repnz
in
and
mov
xchg
(bad)
(bad)
(bad)
jmp
lods
mov
mov
push
cmps
ds
pop
(bad)
and
ins
div
out
add
aaa
add
add
dec
cmp
aaa
add
add
or
pusha
dec
cmps
lahf
hlt
lods
xchg
dec
lahf
mov
add
jge
pop
sbb
dec
(bad)
js
les
scas
lods
les
in
inc
xchg
push
push
call
cwde
adc
dec
ret
mov
adc
stos
div
and
inc
jns
mov
call
cmp
or
(bad)
sar
push
push
cwde
daa
imul
cwde
iret
push
add
lods
mov
dec
add
push
push
adc
rcl
or
mov
mov
ins
mov
cwde
call
add
lahf
ins
jns
dec
mov
jg
mov
test
cmp
test
cmp
mov
mov
or
loope
(bad)
in
lods
xchg
imul
mov
xchg
std
push
cmp
add
(bad)
mov
add
dec
xchg
lods
sbb
cmp
js
(bad)
in
les
idiv
in
test
(bad)
in
mov
in
fidivr
dec
push
jo
rcr
test
in
dec
add
(bad)
in
lods
dec
xchg
dec
sahf
xchg
mov
jecxz
dec
cmp
les
xchg
neg
add
mov
cwde
add
dec
xchg
lods
sbb
sbb
aad
mov
sbb
popf
and
add
add
dec
sbb
(bad)
mov
or
lea
and
mov
in
test
jbe
lea
aad
les
ins
pop
mov
xchg
dec
int3
jbe
stos
and
jmp
cmp
in
mov
sub
lds
aaa
add
add
dec
cmp
aaa
add
add
lods
dec
idiv
lods
dec
(bad)
call
dec
mov
dec
cmp
dec
dec
les
lods
push
add
xchg
test
and
jp
or
js
lahf
jg
cmp
xchg
jge
pop
test
les
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
div
add
add
lods
sub
les
and
ins
ins
add
dec
out
not
in
popf
lods
fld
(bad)
in
sti
not
or
add
sbb
retf
add
dec
add
scas
xchg
test
mov
xchg
dec
cmp
mov
sbb
mov
das
cmp
mov
das
cmp
js
les
repz
(bad)
(bad)
dec
js
(bad)
(bad)
in
sti
inc
sbb
dec
(bad)
js
(bad)
(bad)
in
sti
inc
sbb
dec
(bad)
js
(bad)
(bad)
in
sti
inc
sbb
dec
(bad)
js
(bad)
(bad)
in
sti
inc
sbb
dec
(bad)
js
les
mov
ss
xor
add
dec
dec
sti
shl
aas
mov
sti
pop
mov
dec
popf
and
pop
mov
mov
popf
jmp
mov
mov
xchg
int3
push
jg
mov
movs
int3
repz
add
js
les
repz
add
dec
(bad)
js
les
in
scas
xchg
in
call
jnp
(bad)
in
pusha
lahf
xor
mov
movs
xor
add
xchg
in
out
xchg
xchg
xchg
xchg
xchg
imul
add
lods
sub
mov
in
popf
ds
dec
(bad)
in
lods
(bad)
in
sti
test
add
lods
sbb
xchg
(bad)
in
sti
idiv
add
lods
sbb
aad
popf
scas
sub
add
imul
cdq
fcom
int3
dec
dec
dec
jae
aas
mov
xchg
add
add
ss
(bad)
mov
dec
(bad)
js
les
(bad)
in
sti
mul
and
cwde
(bad)
in
sti
not
add
mov
test
mov
mov
ficomp
mov
xor
(bad)
push
jne
mov
add
mul
test
jae
addr16
cmp
add
add
js
les
repz
mov
aaa
add
dec
(bad)
js
les
sbb
dec
xchg
dec
shl
popf
mov
and
pop
stos
div
lea
test
xchg
popa
(bad)
in
dec
stos
neg
add
lods
sbb
add
mov
dec
add
add
jge
pop
sbb
js
les
dec
dec
sti
aaa
add
test
rol
sbb
js
les
sbb
dec
dec
inc
aaa
ss
mov
sti
xchg
and
inc
(bad)
xchg
call
test
add
dec
mov
sbb
add
and
xchg
jmp
xor
add
lods
add
lahf
jecxz
inc
(bad)
jge
push
in
sbb
sti
add
dec
popf
mov
push
not
add
mov
and
mov
mov
dec
les
cmp
stos
dec
inc
idiv
test
push
xor
in
sahf
mov
les
in
sti
dec
inc
test
(bad)
push
xor
in
sahf
mov
(bad)
mov
dec
js
les
inc
idiv
(bad)
inc
dec
call
(bad)
mov
sahf
mov
les
inc
aaa
xor
(bad)
(bad)
inc
dec
call
(bad)
mov
sahf
mov
dec
or
loope
add
mov
dec
les
inc
not
cmp
dec
call
(bad)
mov
sahf
mov
les
sti
lods
dec
test
lods
pusha
test
add
mov
sbb
js
les
scas
dec
xchg
in
call
aaa
call
neg
xchg
in
out
xchg
xchg
xchg
xchg
xchg
not
scas
dec
push
lahf
cmps
aad
lods
call
imul
cmps
add
fsubr
xchg
dec
inc
lahf
sbb
(bad)
in
sti
imul
add
jge
sbb
dec
(bad)
js
les
cmp
xchg
inc
push
mov
add
inc
(bad)
push
mov
jmp
xlat
stos
add
dec
lea
xor
xchg
or
outs
inc
(bad)
lods
mov
div
js
add
outs
inc
(bad)
mov
fwait
add
add
push
mov
jecxz
push
aaa
ds
stos
(bad)
in
jmp
add
mov
xchg
outs
mov
push
aaa
fisubr
inc
add
mov
jp
outs
(bad)
out
jmp
add
mov
mov
gs
add
xchg
lods
push
(bad)
dec
not
xor
push
mov
lahf
jp
pusha
jge
pop
test
(bad)
fcomp
test
add
dec
lea
sbb
add
lods
sbb
xor
push
mov
fcom
pop
add
pusha
in
fcomp
mov
add
fmul
add
in
sti
idiv
xchg
std
aaa
cmp
test
(bad)
push
test
add
dec
cmp
div
add
int3
not
dec
add
int3
dec
(bad)
js
(bad)
(bad)
in
sti
test
(bad)
(bad)
jnp
addr16
jnp
mov
(bad)
js
les
sti
xor
pop
mov
js
les
add
mov
cmp
lods
imul
cmp
jb
and
add
add
(bad)
(bad)
inc
jmp
out
mov
jmp
xor
and
mov
sbb
cmp
cmc
mov
inc
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
jmp
and
cmp
outs
dec
(bad)
aaa
and
mov
dec
dec
add
inc
dec
jmp
outs
std
mov
push
and
jmp
call
mov
jmp
dec
add
xchg
std
jmp
(bad)
inc
fadd
dec
(bad)
xor
mov
jmp
(bad)
mov
and
in
sti
fdivr
push
add
mov
pusha
inc
stos
inc
dec
dec
jmp
adc
ins
(bad)
push
int3
dec
(bad)
js
(bad)
inc
pop
mov
add
sbb
and
jp
sbb
repz
(bad)
in
pusha
stos
stos
stos
stos
stos
imul
(bad)
(bad)
jmp
add
add
add
add
add
mov
pop
add
lods
(bad)
sti
cwde
(bad)
push
sub
dec
cmp
(bad)
and
mov
add
mov
add
cwde
movs
mov
or
sub
jmp
cwde
and
pop
add
lahf
add
mov
cwde
pop
xchg
sbb
cmc
inc
cwde
(bad)
mov
sbb
out
xchg
add
add
in
jb
jmp
add
cld
mov
pop
mov
add
jmp
jb
(bad)
das
cmp
(bad)
int3
sbb
arpl
add
lods
les
cmp
sub
xchg
sub
xchg
add
lods
sub
cwde
sar
mov
cwde
sahf
dec
dec
pop
push
add
cld
push
pop
mov
add
jmp
mov
test
cwde
cmps
jb
(bad)
das
cmp
(bad)
int3
movs
gs
sbb
mov
ins
bound
(bad)
ins
mov
cmps
push
sub
das
cmp
(bad)
int3
add
add
add
add
add
add
add
add
mov
pop
add
lods
(bad)
sti
cwde
(bad)
push
sub
dec
cmp
(bad)
and
mov
add
mov
add
cwde
movs
mov
or
sub
jmp
cwde
and
add
mov
cwde
pop
xchg
sbb
cmc
inc
cwde
(bad)
mov
sbb
out
xchg
add
add
call
cld
mov
pop
mov
add
jmp
jb
(bad)
das
cmp
(bad)
int3
sbb
(bad)
lods
les
cmp
sub
xchg
sub
xchg
add
lods
sub
cwde
sar
mov
cwde
sahf
dec
ss
jmp
add
cld
and
mov
add
jmp
mov
test
cwde
cmps
jb
(bad)
das
cmp
(bad)
int3
das
mov
int3
sbb
mov
ins
mov
(bad)
mov
sub
das
cmp
(bad)
int3
inc
retf
mov
add
push
fsub
div
add
fmul
add
retf
add
hlt
add
fcomp
mov
add
sti
and
lods
pop
xor
mov
(bad)
test
add
dec
mul
add
mov
pusha
call
add
mov
test
(bad)
push
repnz
add
or
in
sti
lahf
sbb
(bad)
imul
add
mov
inc
retf
mov
(bad)
mov
mul
(bad)
inc
stos
mul
mov
add
imul
dec
add
dec
sar
mov
jg
mov
in
mov
add
mov
js
les
sti
dec
dec
inc
push
inc
popf
add
pusha
in
dec
idiv
inc
sti
dec
sar
jae
or
dec
sub
mov
jg
mov
in
mov
add
push
mov
call
mul
and
(bad)
in
sti
not
add
xchg
dec
inc
sti
inc
fisub
in
scas
lods
shl
push
inc
popf
dec
lahf
sbb
xchg
inc
(bad)
dec
push
in
sahf
mov
les
popf
outs
dec
(bad)
test
lea
add
pop
outs
cmp
in
sti
test
add
lods
sbb
add
add
sti
cwde
or
shr
jmp
call
bound
js
les
mov
cmp
dec
jg
imul
sbb
fadd
(bad)
in
sti
mul
(bad)
(bad)
(bad)
mov
(bad)
js
les
popf
outs
dec
(bad)
idiv
cmp
add
dec
rcr
cmp
in
sti
div
add
lods
sbb
add
add
sti
cwde
or
shr
jmp
call
bound
js
les
mov
cmp
dec
jg
imul
sbb
fadd
(bad)
in
sti
mul
(bad)
(bad)
(bad)
mov
(bad)
js
les
popf
outs
dec
(bad)
div
(bad)
dec
lea
add
pop
outs
cmp
in
sti
not
and
popf
lahf
lods
dec
or
dec
sti
cwde
or
shr
jmp
call
bound
js
les
mov
cmp
dec
jg
imul
sbb
fadd
(bad)
in
sti
mul
(bad)
(bad)
(bad)
mov
(bad)
js
les
popf
outs
dec
(bad)
div
mov
dec
lea
add
pop
outs
cmp
in
sti
test
add
lods
sbb
add
add
sti
cwde
or
shr
jmp
call
bound
js
les
mov
cmp
dec
jg
imul
sbb
fadd
(bad)
in
sti
mul
(bad)
(bad)
(bad)
mov
(bad)
js
les
popf
outs
dec
(bad)
neg
mov
dec
lea
add
xchg
outs
cmp
add
(bad)
in
sti
test
add
lods
sbb
add
add
sti
cwde
or
shl
dec
add
or
dec
mov
test
les
mov
cmp
dec
jg
imul
add
sbb
fadd
(bad)
in
sti
test
(bad)
(bad)
mov
popf
jae
scas
mov
add
lods
xor
add
sti
push
inc
popf
push
mov
imul
lods
xor
add
xchg
outs
add
mov
cmp
test
(bad)
push
test
add
dec
cmp
div
and
add
fadd
imul
pop
add
mov
dec
les
in
sti
lods
test
cwde
sar
add
dec
pop
sti
push
(bad)
mov
mov
es
add
mov
add
add
add
das
dec
add
mov
mov
sub
dec
push
lahf
jecxz
pusha
fisubr
jecxz
repnz
idiv
(bad)
(bad)
mov
and
inc
lods
push
cwde
lods
pushf
lea
add
inc
sti
retf
mov
and
in
ins
fcomp
ins
mov
sti
test
pusha
call
(bad)
(bad)
push
lea
div
mov
add
pop
lahf
scas
dec
mul
add
mov
add
add
pusha
in
int3
dec
(bad)
js
les
scas
stos
fadd
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
div
bound
add
add
add
add
sub
cmovns
sub
in
pop
jns
sub
add
call
mov
call
jnp
jecxz
add
in
jmp
dec
ret
sti
jecxz
dec
ret
lods
jecxz
lahf
addr16
pusha
(bad)
call
mov
call
pop
int3
lods
test
icebp
dec
sbb
add
jecxz
lods
inc
(bad)
in
sbb
add
xchg
call
call
rep
mov
call
xchg
jge
fdivr
pop
int3
outs
fadd
mov
pop
int3
outs
fsubr
jge
int3
add
add
les
pusha
stos
stos
stos
stos
stos
stos
stos
stos
dec
js
outs
push
add
sbb
test
(bad)
sub
lods
idiv
outs
push
add
sbb
test
(bad)
sub
sbb
test
les
popf
outs
dec
(bad)
mul
(bad)
call
dec
lea
xchg
add
add
add
add
or
dec
mov
test
(bad)
fadd
(bad)
in
sti
neg
(bad)
(bad)
mov
(bad)
js
(bad)
fadd
(bad)
in
sti
idiv
and
sbb
dec
(bad)
js
(bad)
fdivr
(bad)
in
sti
not
add
mov
(bad)
js
les
dec
xchg
lods
les
cwde
iret
in
add
cmp
in
popf
outs
dec
(bad)
test
dec
les
scas
in
pop
push
enter
cmp
outs
shl
pop
jecxz
pusha
fstp
dec
fwait
add
add
adc
sti
in
cmps
outs
cmp
stos
fmul
in
sti
not
stos
add
lods
sbb
sti
call
add
add
sbb
push
outs
dec
jmp
dec
and
dec
outs
dec
sti
and
stos
test
fldenv
pusha
cwde
or
sti
call
sbb
mov
mov
int3
dec
(bad)
js
(bad)
fadd
(bad)
in
sti
test
sbb
fcomp
mov
add
inc
xchg
std
in
pusha
dec
sbb
push
xchg
cwde
and
(bad)
ins
add
aaa
add
dec
dec
dec
dec
mul
(bad)
jmp
lahf
into
in
pusha
dec
mov
and
pusha
adc
cwde
and
jns
add
xchg
sti
push
push
in
jg
popa
ins
add
aaa
add
test
mov
add
aaa
add
test
lea
mov
add
stos
(bad)
in
lods
xchg
cmp
and
add
std
aaa
cmp
test
(bad)
push
test
add
dec
cmp
neg
dec
add
int3
(bad)
in
sti
test
add
dec
(bad)
fcomp
(bad)
in
popf
(bad)
in
sti
neg
jmp
fcom
mov
add
sti
xchg
and
push
int3
in
sub
sbb
xor
add
add
cmp
cmp
neg
sub
add
in
pusha
aad
popf
cwde
pushaw
push
int3
call
push
movs
cwde
and
sbb
mov
add
mov
inc
popf
fsubrp
inc
dec
test
add
lods
mov
cmc
dec
frstor
mov
xlat
ss
and
mov
mov
in
cmps
lods
mov
mov
xchg
dec
shl
ss
outs
and
mov
cdq
mov
or
add
aaa
add
cmp
cmp
test
jmp
std
aad
std
call
popf
call
dec
sub
xchg
jns
add
mov
mov
mov
sbb
lahf
popf
shl
mov
in
not
mov
cmp
test
(bad)
push
popf
add
add
std
imul
sub
add
dec
in
mov
add
mov
dec
les
in
jmp
in
xor
aam
add
xchg
xchg
xchg
xchg
xchg
aaa
add
enter
lods
sub
inc
popf
lods
call
add
(bad)
push
stc
add
dec
test
add
stos
not
pop
add
lods
sub
call
push
aaa
call
(bad)
mov
rcr
sbb
fcomp
mov
add
pusha
dec
in
sti
in
call
jnp
and
or
add
aaa
add
xchg
xchg
xchg
xchg
imul
sub
inc
inc
popf
ficomp
dec
cmp
neg
dec
idiv
xchg
(bad)
(bad)
mov
cmp
test
(bad)
push
mov
mov
div
add
dec
les
mov
adc
add
(bad)
in
sti
mul
stos
add
jae
add
add
sub
sbb
fdiv
imul
add
in
inc
xchg
jmp
cmp
stos
inc
fadd
dec
jne
add
add
add
mov
add
in
sub
repnz
add
adc
xchg
add
mov
call
in
not
adc
cwde
or
xchg
std
in
pop
inc
cmp
push
cmp
add
fdiv
div
or
add
and
sti
fsubr
mov
add
scas
add
and
sti
fsub
sbb
add
add
push
mov
add
pop
mov
add
pusha
mov
loopne
add
mov
add
pusha
mov
lock
add
mov
add
mov
stos
neg
not
add
iret
sbb
dec
xchg
lahf
jecxz
sbb
add
add
add
std
in
ss
test
add
mul
mov
cmp
dec
sti
dec
test
imul
add
mov
test
xchg
and
ss
mul
rol
add
fwait
rol
add
cmp
test
(bad)
dec
and
int3
dec
xor
aaa
cmp
test
(bad)
call
not
push
add
int3
mul
stc
test
inc
add
add
add
add
dec
jb
(bad)
jnp
jecxz
add
call
iret
pusha
call
add
jle
add
add
outs
sub
add
add
sub
add
add
mov
test
(bad)
in
sahf
lods
dec
(bad)
xchg
add
xchg
call
call
add
inc
call
call
dec
jb
(bad)
or
int3
outs
loop
dec
jb
(bad)
or
int3
outs
loop
dec
jb
(bad)
or
int3
outs
loop
dec
jb
(bad)
or
int3
dec
(bad)
js
les
sti
dec
xchg
fdivr
mov
mov
imul
jmp
and
popf
inc
add
call
jbe
outs
cmp
(bad)
in
std
(bad)
in
and
xor
sti
add
js
les
cmp
cmp
cmp
outs
dec
ins
add
add
dec
jecxz
xor
add
add
sti
dec
sbb
dec
jmp
and
sahf
sti
add
and
js
les
and
add
add
xchg
jmp
cmp
fadd
(bad)
in
popf
(bad)
in
mov
adc
add
popf
dec
faddp
lods
and
loop
outs
dec
pop
add
add
dec
sbb
xchg
outs
xchg
add
add
pop
neg
les
xchg
jmp
cmp
in
pusha
stos
stos
stos
(bad)
in
jmp
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
test
fld
pop
dec
cmp
dec
(bad)
js
les
dec
in
popf
dec
or
in
call
(bad)
fadd
dec
inc
inc
fadd
(bad)
in
lods
inc
(bad)
in
sti
test
add
int3
dec
(bad)
js
les
mov
add
popa
fwait
mov
dec
popf
xchg
pusha
fdivp
adc
xor
add
cmp
jl
mov
(bad)
dec
xchg
and
xchg
xchg
std
dec
cmp
cmp
xchg
les
fld
mov
lods
xor
add
mov
add
xchg
fisubr
fisubr
add
add
aaa
cmp
dec
cmp
xchg
add
lods
xchg
cmc
neg
inc
add
dec
or
add
add
add
out
(bad)
js
mov
add
adc
ins
add
add
dec
jecxz
sbb
xchg
outs
xchg
add
add
outs
xor
add
add
xchg
pop
test
les
cmp
dec
cmp
dec
popf
neg
cmp
dec
faddp
lods
and
popf
aaa
fisubr
dec
add
add
pusha
ficomp
dec
dec
cmp
cmp
cmp
add
in
lods
dec
cmp
in
sti
neg
mov
add
popf
lods
pop
sub
in
repnz
in
sti
(bad)
in
popf
imul
mov
(bad)
fadd
fadd
fadd
fadd
fadd
outs
cmp
stos
jae
dec
add
idiv
jmp
jmp
sbb
xchg
jmp
in
pusha
ficomp
int3
dec
(bad)
js
les
cmp
xchg
dec
mov
dec
pop
popf
xchg
jmp
xchg
lahf
retf
lods
test
in
mov
add
jmp
dec
push
xchg
jecxz
dec
dec
lods
aad
(bad)
mov
shl
dec
dec
sbb
xchg
sti
lods
mov
dec
cmp
cmp
popf
pop
(bad)
push
movs
inc
mov
add
xchg
jecxz
jmp
in
test
les
popf
dec
dec
in
sti
xchg
idiv
or
add
add
ret
add
xchg
dec
push
in
int3
dec
(bad)
js
(bad)
test
add
dec
or
add
add
dec
sti
call
in
test
pusha
sbb
dec
(bad)
js
les
xchg
ret
add
dec
in
sti
push
adc
in
hlt
div
ret
add
dec
or
xchg
out
add
in
int3
not
pop
add
dec
or
add
add
push
inc
call
add
inc
in
repz
add
mov
les
mov
test
dec
imul
dec
dec
dec
sti
xchg
lea
popf
xchg
mov
cmp
fild
mov
jl
add
add
imul
add
add
(bad)
in
xchg
and
in
lods
div
test
add
dec
cmp
outs
xor
add
add
test
add
add
outs
cmp
popf
or
sub
pop
dec
idiv
mov
(bad)
in
jmp
cmp
(bad)
(bad)
(bad)
jmp
mov
xor
add
add
stos
outs
inc
add
add
sub
cmp
xchg
xchg
jl
mov
stos
xchg
(bad)
(bad)
in
jmp
cmp
(bad)
(bad)
(bad)
jmp
mov
xor
add
add
stos
outs
inc
add
add
sub
cmp
xchg
xchg
jl
mov
stos
xchg
(bad)
(bad)
in
jmp
cmp
(bad)
(bad)
(bad)
jmp
mov
xor
add
add
stos
outs
inc
add
add
sub
cmp
xchg
xchg
jl
mov
stos
xchg
les
jmp
cmp
(bad)
(bad)
(bad)
jmp
mov
xor
add
add
dec
dec
mov
xchg
add
add
dec
icebp
sbb
int3
dec
dec
(bad)
in
adc
div
(bad)
push
das
(bad)
(bad)
dec
(bad)
in
adc
mov
(bad)
push
call
(bad)
js
les
add
mov
cmp
inc
mov
dec
dec
call
add
mov
add
pusha
call
add
mov
mov
out
add
add
inc
inc
inc
inc
inc
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
inc
(bad)
jmp
and
in
(bad)
outs
cmp
xchg
mov
(bad)
push
and
mov
dec
dec
add
dec
jmp
stos
xchg
std
mov
jmp
(bad)
(bad)
(bad)
fadd
stos
not
add
outs
and
jmp
jmp
pop
mov
jmp
out
mov
(bad)
fadd
aaa
and
jmp
inc
add
jmp
inc
(bad)
inc
outs
and
jmp
(bad)
mov
loop
add
dec
(bad)
js
les
popf
jl
jl
mov
js
jnp
dec
xchg
repnz
xchg
jl
mov
js
les
lock
add
in
pop
xchg
push
int3
call
call
add
int3
call
lock
add
add
int3
call
not
adc
add
add
cld
xor
add
add
add
int3
call
test
(bad)
(bad)
call
add
add
jb
add
mov
add
add
and
(bad)
(bad)
call
add
add
iret
(bad)
(bad)
(bad)
mov
add
add
int3
call
lock
add
test
add
stos
test
dec
add
add
xor
or
stos
imul
lock
add
add
stos
neg
(bad)
(bad)
(bad)
call
add
add
or
(bad)
jmp
cmp
add
dec
mov
mov
push
add
add
cwde
stos
neg
add
dec
imul
outs
shr
add
xchg
jmp
mov
push
int3
call
neg
aad
jmp
popa
dec
mov
push
int3
call
idiv
lahf
(bad)
(bad)
mov
dec
sti
in
aaa
dec
imul
(bad)
(bad)
mov
int3
dec
(bad)
js
les
(bad)
mov
xchg
jmp
add
and
jecxz
jmp
add
and
jecxz
jmp
add
and
jecxz
jmp
add
and
jecxz
jmp
cmp
add
add
mov
jecxz
pusha
call
jmp
call
call
lods
dec
in
cmps
dec
sar
add
add
stos
jmp
int3
dec
(bad)
js
les
call
add
(bad)
mov
rcl
pusha
call
fwait
add
add
pusha
call
push
add
add
pusha
call
pusha
add
add
pusha
call
stos
aaa
cmp
add
add
mov
jecxz
pusha
call
jmp
call
call
lods
dec
in
cmps
dec
sar
add
add
stos
jmp
jge
int3
dec
dec
inc
and
and
adc
push
call
mov
add
(bad)
mov
call
in
dec
dec
out
push
jnp
pop
xchg
xchg
(bad)
mov
dec
div
ret
add
mov
mov
(bad)
(bad)
mov
in
pusha
int3
fcomp
mov
add
mov
add
dec
lea
mov
call
xor
out
or
cmp
fcomp
test
add
mov
inc
add
int3
fcomp
add
outs
inc
cmp
mov
(bad)
inc
jmp
(bad)
(bad)
push
jp
add
lahf
dec
fcomp
add
jl
imul
mov
jg
ins
mov
add
xchg
imul
jg
(bad)
mov
add
add
mov
add
xchg
mov
push
add
add
(bad)
mov
jae
and
add
sti
and
outs
add
add
jg
imul
xor
add
(bad)
and
xor
(bad)
mov
dec
inc
(bad)
pop
and
mov
and
(bad)
(bad)
mov
(bad)
(bad)
push
pop
add
add
fcomp
add
add
add
inc
not
mov
(bad)
mov
call
pop
mov
mov
(bad)
(bad)
mov
(bad)
(bad)
push
pop
add
add
xchg
xchg
dec
div
idiv
(bad)
mov
add
dec
in
sti
fdivr
inc
rol
add
fcomp
add
dec
les
dec
mov
ret
dec
outs
in
lods
lods
push
(bad)
inc
in
popf
(bad)
in
sti
mul
xchg
add
lods
sbb
cmp
cmp
idiv
sub
pop
sbb
dec
(bad)
js
les
jae
add
add
pop
cmp
neg
add
popf
jns
lods
sbb
pusha
repz
ins
in
(bad)
outs
inc
dec
or
cwde
stos
outs
ror
add
add
lods
stos
idiv
xchg
add
lods
sub
cmp
cmp
out
std
(bad)
jmp
and
add
lahf
dec
jae
push
(bad)
mov
test
(bad)
call
int3
repz
add
add
mov
jns
in
lods
mov
add
add
ret
iret
dec
add
add
in
sti
lahf
push
lods
mov
lods
mov
ret
ds
dec
cmp
dec
fcomp
lods
pusha
ficomp
jp
lods
mov
pop
call
stos
dec
cmp
dec
fsubr
pop
xchg
add
lods
sub
stos
stos
stos
stos
stos
mul
nop
(bad)
jmp
xor
dec
pop
cwde
iret
mov
(bad)
(bad)
(bad)
cmp
add
(bad)
mov
(bad)
jmp
pusha
mov
(bad)
(bad)
jmp
pop
sbb
dec
(bad)
js
les
(bad)
in
popf
(bad)
in
sti
test
popf
in
pop
and
jg
cmp
cmp
test
(bad)
jmp
fimul
jae
push
(bad)
mov
popf
(bad)
in
sti
mul
test
jmp
or
add
or
xchg
stos
jae
pop
(bad)
mov
popf
(bad)
in
sti
test
jmp
dec
(bad)
js
les
pop
inc
jae
jecxz
add
adc
add
pusha
cwde
iret
js
add
xchg
outs
pop
(bad)
push
mov
sbb
inc
sar
out
xchg
mov
popf
push
(bad)
mov
(bad)
mov
jecxz
add
dec
mov
adc
jmp
jae
mov
mov
add
add
call
stos
stos
idiv
sub
mov
out
mul
add
(bad)
lods
xor
dec
cmp
dec
and
outs
xor
outs
inc
sar
out
xchg
mov
cmp
jae
push
(bad)
mov
jae
jecxz
add
jmp
jmp
jae
mov
lea
in
push
dec
inc
stos
dec
ins
adc
pusha
call
in
test
inc
stos
idiv
icebp
(bad)
(bad)
mov
pusha
call
in
test
inc
(bad)
imul
icebp
(bad)
(bad)
mov
add
lods
xor
inc
stos
xchg
ror
lahf
or
in
(bad)
test
(bad)
dec
stos
dec
pop
adc
pop
mov
stos
call
inc
test
(bad)
(bad)
mov
int3
call
in
test
inc
(bad)
test
(bad)
(bad)
mov
in
xchg
jb
in
xchg
sar
test
les
add
mov
cmp
dec
cmp
sti
xchg
dec
mov
(bad)
(bad)
dec
xchg
xchg
push
(bad)
(bad)
inc
push
inc
in
add
mov
outs
rcr
(bad)
(bad)
(bad)
jmp
xor
fldenv
xchg
(bad)
(bad)
inc
jmp
inc
cwde
iret
fwait
dec
add
lods
sub
(bad)
inc
cwde
iret
sbb
add
lods
mov
jl
add
or
inc
in
xchg
or
dec
add
and
add
(bad)
in
lods
inc
outs
(bad)
(bad)
push
fmul
add
and
jg
dec
dec
dec
dec
not
(bad)
jmp
call
add
(bad)
dec
and
(bad)
(bad)
call
push
call
(bad)
(bad)
push
mov
add
dec
neg
(bad)
(bad)
push
mov
(bad)
call
aaa
scas
xor
add
(bad)
push
dec
or
add
iret
adc
inc
mov
(bad)
push
sbb
add
mov
iret
in
add
lods
imul
and
stos
neg
ret
mov
and
add
add
cmp
cmp
div
iret
add
lods
sbb
add
add
outs
(bad)
(bad)
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
push
xor
(bad)
jmp
add
(bad)
(bad)
call
aaa
ds
and
(bad)
jmp
out
loopne
mov
inc
mov
(bad)
push
fidivr
and
hlt
in
inc
dec
dec
dec
dec
dec
test
scas
lahf
jp
inc
aad
push
(bad)
(bad)
call
inc
push
(bad)
(bad)
push
retf
add
cs
(bad)
call
add
(bad)
(bad)
(bad)
inc
cs
(bad)
push
dec
lods
add
lods
sbb
(bad)
(bad)
in
lods
inc
outs
(bad)
(bad)
push
pop
cmps
add
lods
sbb
dec
dec
dec
dec
idiv
sub
call
dec
jmp
in
adc
add
(bad)
push
int3
dec
(bad)
js
les
add
mov
cmp
cmp
dec
movs
test
add
in
sti
dec
mov
(bad)
jmp
(bad)
jmp
add
pop
(bad)
(bad)
jmp
dec
add
div
mov
jmp
in
mov
jp
add
sti
dec
and
outs
xor
jmp
(bad)
(bad)
jmp
add
iret
pop
jp
add
pop
(bad)
(bad)
jmp
jmp
and
or
add
mov
test
jmp
pusha
call
sti
xchg
push
test
jmp
(bad)
popf
lods
dec
ss
xchg
cmp
add
jmp
mov
ss
xchg
outs
test
jmp
mov
cwde
add
dec
inc
(bad)
outs
outs
pop
(bad)
(bad)
jmp
dec
outs
call
test
dec
bound
lods
pusha
(bad)
and
add
call
stos
stos
test
(bad)
jmp
bound
test
jmp
rcr
(bad)
inc
and
inc
outs
test
push
in
cwde
add
lods
sbb
and
add
dec
and
(bad)
jmp
inc
xchg
dec
mov
dec
cli
fld
dec
dec
dec
(bad)
push
lods
call
test
inc
test
inc
dec
mov
lods
pusha
sti
lods
sub
xchg
cld
push
call
xchg
outs
(bad)
aaa
dec
lods
xchg
dec
stos
mov
(bad)
inc
call
fmul
inc
scas
outs
and
(bad)
(bad)
inc
stos
fsubr
jae
jae
mov
test
add
call
add
adc
pop
test
(bad)
fisubr
jae
add
add
inc
sub
outs
and
(bad)
jmp
add
addr16
fiadd
lods
mov
mov
add
lods
mov
dec
and
(bad)
inc
sti
xchg
dec
push
mov
dec
and
(bad)
(bad)
inc
bound
idiv
dec
mov
(bad)
(bad)
mov
(bad)
inc
test
inc
mov
call
dec
retf
dec
cmp
lods
pusha
mov
mov
dec
inc
and
cmp
idiv
scas
(bad)
mul
and
jmp
mov
and
(bad)
jmp
(bad)
aaa
add
add
xchg
mov
ror
jmp
in
adc
jbe
(bad)
push
int3
dec
(bad)
js
les
add
mov
cmp
dec
cmp
cmp
in
pop
dec
test
(bad)
(bad)
call
int3
call
test
(bad)
(bad)
mov
add
(bad)
dec
cmp
shl
aaa
dec
add
aaa
and
(bad)
dec
add
xchg
(bad)
(bad)
call
add
add
aad
cwde
and
dec
add
or
dec
inc
cwde
and
add
or
jp
cwde
and
dec
add
dec
shl
(bad)
mov
add
dec
fidivr
iret
inc
add
or
xchg
(bad)
(bad)
(bad)
call
add
push
push
cwde
iret
test
add
and
add
add
cmp
mov
(bad)
(bad)
(bad)
jmp
xor
sbb
inc
test
(bad)
mov
(bad)
call
(bad)
(bad)
jmp
call
jae
push
(bad)
mov
(bad)
dec
in
inc
mov
test
push
push
cwde
and
sub
jmp
and
(bad)
push
add
add
add
call
mul
sub
dec
jae
(bad)
jmp
pop
(bad)
(bad)
call
pop
pop
(bad)
(bad)
inc
test
pusha
call
jmp
ret
add
add
(bad)
in
pusha
aad
call
add
add
jae
(bad)
call
inc
cmp
cmp
lods
add
add
pop
(bad)
(bad)
jmp
(bad)
jmp
call
call
(bad)
(bad)
jmp
add
out
outs
outs
pop
(bad)
(bad)
push
and
(bad)
(bad)
mov
push
and
(bad)
call
(bad)
(bad)
inc
aaa
lods
lods
ret
pusha
in
pusha
aad
(bad)
(bad)
(bad)
(bad)
in
sti
aad
call
cmp
dec
jmp
in
adc
sar
(bad)
js
les
xchg
pop
sub
mov
push
les
mov
hlt
idiv
jp
add
add
pusha
jge
sbb
xchg
jae
add
add
xchg
sub
xchg
and
test
or
(bad)
(bad)
mov
fnstcw
add
push
sub
xchg
and
lods
inc
jbe
(bad)
dec
adc
(bad)
(bad)
mov
pop
mov
arpl
sti
dec
dec
popf
dec
xchg
idiv
(bad)
(bad)
mov
inc
push
test
not
(bad)
dec
in
(bad)
jmp
inc
dec
jmp
not
add
mov
dec
inc
test
(bad)
(bad)
inc
mov
inc
neg
dec
jo
(bad)
jmp
lahf
sbb
mov
repz
(bad)
(bad)
(bad)
fsubr
mov
add
pop
xchg
and
mov
mov
add
aaa
add
cmp
cmp
test
jmp
repz
add
jmp
add
dec
lea
test
bound
jae
add
add
sub
add
mov
iret
les
add
fcomp
add
add
add
cmp
inc
(bad)
inc
add
add
in
sti
dec
dec
popf
dec
sbb
(bad)
mov
int3
cwde
iret
add
add
sbb
mov
not
mov
aaa
mov
dec
add
add
popf
idiv
add
add
add
cmp
inc
(bad)
call
(bad)
mov
in
mov
mov
dec
in
cmps
dec
push
fwait
cmc
imul
jl
imul
mov
add
test
jmp
not
retf
dec
mov
in
pop
fcomp
add
fcomp
add
mul
(bad)
(bad)
call
(bad)
mov
test
(bad)
push
popf
add
add
and
imul
add
int3
dec
in
std
lods
and
dec
(bad)
js
les
sti
in
neg
(bad)
adc
mov
ror
inc
outs
shl
shl
sub
int3
dec
(bad)
adc
jl
mov
(bad)
(bad)
(bad)
fsubr
pusha
dec
dec
lods
pusha
sti
sbb
mul
pusha
in
ss
mov
mov
sti
int3
div
pusha
in
ss
mov
lods
pusha
popf
int3
dec
(bad)
js
les
push
(bad)
(bad)
dec
sti
and
(bad)
(bad)
mov
(bad)
(bad)
inc
dec
(bad)
js
les
mov
xchg
jmp
in
pop
dec
dec
in
sti
xchg
xchg
cmp
and
mov
sbb
iret
xchg
jecxz
add
(bad)
aad
in
fldcw
jae
lods
add
stos
outs
cmp
cmp
not
add
lods
sub
jp
add
(bad)
mul
jp
or
add
repnz
fmul
xchg
std
div
add
fmul
xchg
and
(bad)
repnz
fmul
dec
dec
add
xchg
(bad)
jmp
sub
cmp
iret
cld
jp
add
sbb
cwde
iret
scas
jp
add
int3
cwde
iret
xchg
add
sbb
cwde
iret
push
jp
add
sbb
cwde
iret
mov
cmp
xchg
mov
pop
add
add
test
inc
inc
and
iret
dec
jp
add
shl
add
cwde
or
imul
cmc
ror
sbb
pop
outs
cmp
sti
aam
call
adc
lahf
repnz
dec
mov
cwde
adc
mov
rol
(bad)
or
dec
cmp
cmp
inc
mov
stos
jae
dec
add
(bad)
in
mov
dec
cmp
xlat
adc
add
cwde
iret
pusha
dec
add
dec
dec
and
mov
xor
xchg
xchg
dec
xchg
add
add
xchg
fisubr
add
inc
scas
cmp
fdiv
add
lods
sub
pusha
cwde
iret
outs
dec
add
dec
cmp
cmp
inc
(bad)
mov
xchg
stos
dec
cmp
add
add
inc
scas
cmp
pop
add
lods
sub
pusha
cwde
iret
cs
add
dec
cmp
dec
mov
add
add
int
mov
hlt
dec
js
xchg
outs
and
add
add
jge
shl
shl
xchg
outs
jns
add
add
sar
dec
jle
dec
std
jns
aam
call
adc
push
out
xchg
jmp
add
add
(bad)
cmp
mov
or
add
xchg
dec
dec
std
cwde
adc
aad
and
push
dec
dec
std
loop
xchg
or
jae
add
add
add
add
stos
neg
jmp
add
stos
xchg
div
cmp
fsubr
outs
rol
dec
add
and
add
pusha
add
add
call
(bad)
mov
dec
lock
add
test
add
stos
test
(bad)
dec
add
add
xor
or
stos
test
dec
cmc
add
add
stos
not
(bad)
(bad)
call
add
add
pop
(bad)
jmp
cmp
add
add
xchg
pusha
add
add
pusha
xchg
xchg
add
add
add
dec
cmp
xchg
add
add
dec
cmp
add
dec
cmp
xchg
push
add
add
in
mov
(bad)
mov
(bad)
in
cmp
repz
std
not
sbb
and
movs
sbb
(bad)
push
sbb
lods
sub
add
add
push
int3
call
(bad)
mov
add
add
lock
add
add
lock
add
aas
stos
(bad)
mov
add
fldenv
mov
add
dec
add
add
pusha
dec
dec
jmp
in
adc
(bad)
call
test
dec
loop
push
mov
call
mov
mov
dec
push
add
add
dec
(bad)
js
les
sti
and
ss
push
add
push
add
add
int3
imul
xchg
dec
loop
push
mov
call
mov
mov
dec
(bad)
int3
div
add
dec
xchg
dec
loop
push
mov
call
mov
mov
jmp
(bad)
js
les
sti
and
popa
lods
idiv
xchg
or
in
mov
(bad)
(bad)
mov
js
les
mov
xchg
jmp
dec
in
pop
xchg
dec
inc
aad
push
pop
mov
in
push
(bad)
mov
add
cmp
(bad)
mov
xchg
pop
mov
cmp
pop
in
sbb
mov
jp
add
aad
scas
shr
scas
dec
cmp
ficomp
add
inc
lods
idiv
dec
cmp
cmp
cmp
mov
iret
push
dec
add
push
int3
cwde
iret
fs
add
lods
mov
dec
add
xchg
mov
sti
dec
ss
faddp
xchg
(bad)
add
(bad)
mov
sub
(bad)
in
scas
cwde
and
push
stos
(bad)
in
fcos
cmps
dec
mov
and
add
inc
fsub
in
int
jnp
lods
mov
cmp
pop
add
add
pop
pop
imul
adc
add
push
int3
call
add
movs
(bad)
(bad)
mov
aaa
add
das
add
lods
pusha
sti
xchg
mov
jecxz
sbb
iret
ret
dec
add
xchg
(bad)
in
mov
in
scas
(bad)
in
lods
fmul
in
fcos
cmps
and
iret
nop
add
add
std
mov
xchg
(bad)
in
mov
in
popf
(bad)
in
sti
jmp
mov
sahf
add
add
popf
add
add
call
adc
dec
xor
add
in
xor
in
xchg
xchg
(bad)
in
mov
in
popf
(bad)
in
sti
jmp
add
add
cmp
and
int
jnp
lods
mov
cmp
add
pop
xchg
neg
mov
movs
call
add
stos
test
(bad)
(bad)
mov
aaa
add
das
add
lods
pusha
sti
dec
lea
movs
call
(bad)
in
mov
in
popf
(bad)
in
sti
inc
and
imul
sbb
in
(bad)
cmp
lahf
ss
in
xor
in
xchg
(bad)
in
mov
fcos
adc
mov
(bad)
(bad)
mov
je
(bad)
dec
mov
add
xchg
mov
sbb
sti
dec
ss
fisubr
sbb
in
sti
dec
ss
faddp
xchg
fcos
in
sti
test
add
mov
mov
pusha
repz
dec
add
push
cmp
cwde
iret
pop
add
add
outs
dec
scas
and
in
lods
stos
(bad)
in
fdecstp
repz
add
mov
int3
call
mov
scas
stos
(bad)
in
popf
(bad)
in
sti
jmp
int3
in
mov
add
add
pop
lods
mov
pusha
sti
pop
add
add
pop
xchg
mul
clc
add
dec
jmp
ret
aaa
mov
lods
aaa
sti
lahf
fild
(bad)
mov
aaa
add
das
add
lods
pusha
sti
dec
mov
push
ret
(bad)
in
mov
out
add
mov
(bad)
in
mov
in
popf
(bad)
in
sti
jmp
int3
in
(bad)
in
inc
lahf
and
in
xor
mov
xchg
(bad)
in
fcos
in
(bad)
test
xchg
lea
addr16
dec
in
mov
(bad)
(bad)
mov
xor
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
inc
dec
(bad)
aad
mov
test
in
mov
mov
(bad)
(bad)
mov
int3
call
stos
idiv
enter
dec
push
outs
xor
jge
pop
dec
dec
jmp
adc
mov
(bad)
push
int3
dec
(bad)
js
les
sti
outs
dec
(bad)
mul
(bad)
(bad)
(bad)
in
pop
outs
dec
(bad)
(bad)
in
sub
in
fcos
in
xor
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
neg
jmp
jmp
call
bound
fld
add
dec
loop
push
mov
call
mov
mov
dec
xchg
add
add
add
add
add
add
add
js
les
dec
dec
lods
dec
mov
push
jecxz
push
test
push
mov
add
xchg
rol
add
ds
pop
sub
mov
dec
lods
mov
push
test
jge
sti
in
sbb
cld
mov
add
jecxz
add
in
or
lods
push
jecxz
sar
jo
imul
dec
mov
jecxz
add
lods
repz
ds
lods
and
jecxz
jmp
and
dec
mov
icebp
dec
mov
idiv
dec
mov
mov
xchg
std
dec
mov
shl
mov
jns
jp
repz
mov
lods
push
jecxz
aaa
jecxz
sar
add
(bad)
icebp
dec
mov
push
jns
shl
repz
mov
lods
push
jp
aaa
jp
sar
pop
movs
imul
dec
mov
shl
repz
aaa
dec
lods
sar
shl
(bad)
icebp
dec
mov
icebp
dec
mov
out
icebp
dec
mov
fyl2x
dec
mov
lods
icebp
dec
mov
dec
cmp
std
dec
cmp
test
les
cmp
lea
(bad)
mov
cmp
mov
cmp
mov
xchg
and
outs
(bad)
outs
add
add
jecxz
jecxz
jmp
add
jmp
dec
mov
pop
icebp
dec
mov
dec
cmp
in
test
mov
jge
int3
mov
shl
mov
dec
cmp
in
test
shl
mov
jns
jp
mov
dec
cmp
in
test
jmp
cld
aad
jnp
jecxz
add
in
sub
jp
push
jecxz
sar
jg
movs
imul
pushf
dec
mov
jmp
outs
aas
pushf
dec
mov
aaa
mov
add
add
lods
and
or
jmp
and
sub
pushf
dec
mov
mov
stos
pushf
dec
mov
push
shl
dec
repz
jle
lods
sar
es
imul
pushf
dec
mov
inc
jecxz
push
shl
dec
repz
mov
lods
gs
jle
lods
sar
shl
sub
mov
inc
jecxz
push
shl
shl
dec
repz
mov
lods
gs
jle
lods
sar
xor
(bad)
push
sub
outs
push
add
mov
push
pushf
dec
mov
sbb
cmp
mov
xchg
and
dec
cmp
xchg
dec
cmp
scas
dec
cmp
lods
dec
cmp
popf
dec
cmp
sti
dec
cmp
(bad)
outs
(bad)
outs
add
add
jecxz
jecxz
jmp
or
mov
xchg
mov
dec
mov
jge
int3
mov
inc
jecxz
mov
dec
cmp
in
test
inc
jecxz
mov
jns
jp
mov
dec
cmp
in
test
shl
shl
shl
in
test
les
in
inc
(bad)
in
sti
neg
(bad)
dec
mov
aad
cs
mov
sbb
(bad)
mov
add
push
mov
inc
jecxz
xchg
dec
lods
mov
aaa
jge
sbb
dec
(bad)
js
les
in
inc
fadd
(bad)
in
popf
(bad)
in
sti
neg
lods
sbb
mov
inc
mov
inc
outs
lock
add
push
mov
inc
jecxz
xchg
dec
lods
mov
aaa
jge
sbb
dec
(bad)
js
les
in
inc
(bad)
in
popf
(bad)
in
sti
test
mov
xor
cmp
cs
mov
sbb
(bad)
mov
add
push
mov
inc
jecxz
xchg
dec
lods
mov
aaa
jge
sbb
dec
(bad)
js
les
cmp
dec
inc
in
pop
push
movs
in
mov
gs
in
cmp
cmp
xchg
not
add
jmp
repz
add
add
mov
out
test
in
cmp
cmp
xchg
imul
(bad)
jmp
repz
add
add
not
sbb
loop
dec
sti
pop
test
push
(bad)
(bad)
fsubr
cmc
dec
dec
popf
lods
dec
test
xchg
jmp
call
cwde
push
ss
outs
or
cmp
dec
add
add
dec
shr
jnp
popf
lods
fld
xchg
lahf
jecxz
sahf
out
shl
loop
cmp
in
pop
push
int3
inc
sti
dec
js
aad
jmp
mov
jmp
cmp
ds
ror
push
jns
jns
shl
push
shl
test
pop
neg
js
les
cmp
in
sbb
pusha
mov
sbb
in
scas
(bad)
in
lods
dec
dec
popf
test
(bad)
call
int3
dec
(bad)
js
les
pop
dec
push
ret
idiv
xchg
in
out
cmp
cmp
cmp
xchg
out
(bad)
jmp
repz
add
sbb
sbb
pusha
(bad)
cmp
(bad)
(bad)
fsubr
add
scas
lods
pusha
test
dec
js
dec
cmp
jnp
sbb
pop
int3
push
mov
aaa
cmp
dec
add
add
xchg
xchg
xchg
popf
(bad)
in
popf
(bad)
in
scas
stos
psadbw
and
add
dec
cmc
dec
int3
lods
rol
lahf
jecxz
dec
out
shr
loop
dec
jmp
pusha
pop
(bad)
and
inc
sti
push
dec
lods
ds
dec
dec
jmp
dec
lods
ds
push
mov
(bad)
(bad)
fsubr
xchg
dec
inc
in
pop
repz
(bad)
call
add
dec
cmp
rcl
xchg
xchg
push
push
ds
in
pusha
in
neg
js
les
add
in
xchg
(bad)
in
scas
(bad)
in
popf
(bad)
in
sti
test
(bad)
(bad)
jge
int3
dec
(bad)
js
les
sti
outs
dec
(bad)
neg
xchg
and
xchg
dec
dec
scas
dec
cmc
push
sub
loop
int
movs
lods
out
dec
sar
in
fcos
in
xor
in
lods
(bad)
in
popf
inc
or
dec
mov
test
les
sti
outs
dec
(bad)
mul
add
jmp
(bad)
in
pusha
lahf
popa
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
inc
or
dec
mov
test
les
cmp
stos
dec
inc
div
ss
jno
mov
sahf
mov
(bad)
mov
dec
js
les
inc
aaa
ss
jno
mov
inc
dec
call
(bad)
mov
sahf
mov
les
dec
mov
and
mov
stos
sti
or
add
dec
or
push
dec
call
imul
add
mov
(bad)
in
pusha
lahf
sub
call
dec
cmp
mov
std
pop
jp
mov
pop
in
pusha
fidivr
sbb
dec
(bad)
js
les
sti
dec
add
pop
dec
cli
inc
and
(bad)
in
or
mov
aas
mov
add
add
in
add
test
lods
fwait
mov
add
add
popf
div
xchg
add
mov
(bad)
sti
in
pusha
sbb
fsubr
mul
mov
add
lods
dec
sbb
xchg
jmp
add
ss
loope
sti
lahf
jecxz
scas
sti
xchg
std
not
xchg
add
mov
inc
lods
xor
add
in
scas
call
push
pop
(bad)
cld
mov
add
dec
and
dec
cli
sti
jecxz
dec
mov
jmp
add
add
add
add
cmp
cli
sti
call
js
add
(bad)
in
(bad)
test
(bad)
(bad)
mov
lods
xor
add
lods
dec
sbb
dec
in
and
aaa
cmp
test
(bad)
push
out
add
push
in
scas
call
xchg
add
int3
dec
sbb
dec
in
std
mul
add
lods
fwait
mov
add
add
popf
test
add
mov
(bad)
sti
int3
dec
add
and
or
in
mov
shr
adc
call
out
sti
xchg
shr
out
adc
hlt
not
add
in
mul
xchg
popf
jp
add
int3
in
pusha
int3
fdivr
jae
and
add
sti
and
call
and
imul
and
addr16
faddp
and
scas
lods
xor
add
in
(bad)
push
cmp
test
(bad)
push
stos
mov
add
in
pusha
or
pusha
int3
dec
xor
not
add
add
js
les
popf
dec
dec
dec
dec
in
sti
jecxz
lods
stc
mov
(bad)
dec
push
sti
dec
(bad)
mov
popf
sub
in
int3
idiv
adc
add
not
shl
or
js
les
in
sbb
cmp
imul
xor
push
cmp
add
cmp
dec
dec
cmp
dec
fidiv
dec
ficomp
(bad)
and
shr
cmp
cmp
jno
dec
ss
dec
mov
jecxz
mov
div
(bad)
jmp
in
sbb
lods
push
(bad)
and
jmp
cmp
dec
(bad)
cmp
mov
jns
push
int3
fadd
fwait
test
(bad)
mov
push
in
add
lods
fwait
mov
call
lods
xor
add
mov
add
lods
dec
jmp
imul
sldt
imul
xchg
add
dec
dec
sti
fadd
fadd
xchg
mov
sahf
cmp
inc
fdiv
jae
xchg
mov
add
dec
movs
dec
mov
xchg
std
lods
xor
add
jmp
cmp
cmp
(bad)
(bad)
mov
test
add
add
xchg
add
dec
or
add
add
xchg
add
xchg
test
add
dec
dec
lods
xchg
daa
add
add
pusha
fiadd
jmp
in
xor
in
xchg
cmp
in
scas
xchg
neg
sub
jmp
lahf
and
call
dec
xor
test
add
add
dec
in
scas
dec
mov
or
add
jmp
sti
lahf
jecxz
cli
sti
dec
in
lods
xor
add
and
inc
popf
scas
xchg
xchg
jecxz
dec
stos
(bad)
push
out
rcr
sar
jmp
dec
jb
sti
and
add
jmp
std
add
in
sti
aaa
cmp
test
(bad)
push
cmp
scas
add
add
std
mul
xor
add
(bad)
cmp
lahf
lds
popf
dec
in
sti
dec
cmp
in
(bad)
jg
(bad)
(bad)
mov
add
cmp
add
fild
cmc
xchg
daa
add
add
and
fsubr
mov
scas
pop
fldenv
pop
push
mov
pop
imul
mov
lods
mov
inc
mul
cmps
(bad)
(bad)
mov
(bad)
in
lods
dec
mul
(bad)
(bad)
mov
jae
xchg
mov
add
in
int
js
dec
cmp
cwde
iret
mov
add
or
cli
dec
add
dec
sar
push
out
in
popf
jnp
add
add
cwde
iret
mov
add
dec
in
popf
and
(bad)
outs
call
pop
inc
cmp
sti
call
xchg
div
xchg
add
iret
test
dec
test
add
mov
iret
xlat
add
add
xchg
xchg
dec
dec
scas
lods
dec
sti
and
(bad)
mov
add
add
dec
mov
jmp
iret
mov
shl
not
add
mov
iret
cmp
add
cmp
neg
mov
jbe
add
call
scas
dec
cmp
jmp
dec
imul
jg
add
scas
(bad)
cwde
and
add
add
and
cld
lods
aaa
sti
xchg
lahf
push
xchg
xchg
in
or
add
mov
rol
add
(bad)
call
scas
lods
aaa
sti
xchg
dec
cmp
jmp
div
(bad)
(bad)
mov
stc
jg
add
idiv
rol
add
cmps
cmp
test
add
mov
xor
pop
xchg
mul
and
cwde
inc
mov
cwde
and
mov
add
cmp
test
(bad)
dec
std
lahf
sub
dec
xor
mul
cli
add
in
pusha
mul
fild
add
fdivr
jae
xchg
mov
add
dec
cmp
or
lahf
sbb
sti
dec
js
outs
push
hlt
popf
lods
xor
add
scas
dec
stos
(bad)
in
popf
dec
mov
test
jmp
mov
in
(bad)
fmul
inc
sti
stos
call
xchg
not
ret
mov
xchg
cmp
push
push
(bad)
call
stos
call
xchg
idiv
ret
mov
xchg
cmp
push
push
(bad)
push
cmp
test
(bad)
push
sbb
add
int3
in
pusha
fmulp
dec
xor
mul
cli
add
add
js
les
lods
(bad)
in
xchg
cmp
(bad)
in
sti
test
jmp
fld
(bad)
in
sti
in
jecxz
lahf
jecxz
in
fdecstp
fcom
(bad)
dec
(bad)
in
scas
(bad)
in
lods
dec
test
dec
(bad)
jae
dec
add
(bad)
in
xor
(bad)
in
scas
xchg
(bad)
in
popf
dec
sub
not
ret
lods
sbb
mov
cmc
(bad)
call
int3
dec
(bad)
js
les
and
in
sti
xchg
ret
jecxz
add
cwde
iret
mov
add
xchg
div
add
lods
fwait
or
add
add
add
outs
fwait
or
add
neg
cwde
add
aad
call
and
(bad)
in
fcos
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
dec
test
xor
pusha
cwde
and
add
dec
mov
add
mov
add
xor
mov
stos
dec
(bad)
in
fst
dec
dec
cmp
lods
sub
cmp
or
mov
pop
(bad)
jmp
dec
cli
lods
dec
and
jecxz
dec
shl
or
sti
add
jo
mov
inc
jecxz
in
imul
sub
popf
(bad)
in
(bad)
add
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
sti
test
(bad)
dec
xor
jmp
cmp
lods
aaa
scas
push
cmp
in
int3
dec
(bad)
js
les
popf
cmp
sbb
or
add
dec
xchg
push
cmp
add
ss
loope
sti
lahf
jecxz
push
sti
lods
sar
dec
mov
cld
mov
add
sti
xor
aad
cwde
and
shr
cwde
and
inc
scas
push
int3
call
call
cwde
and
add
add
and
add
add
enter
lods
fwait
rol
add
add
add
dec
lods
add
dec
adc
xchg
sti
test
daa
add
add
dec
dec
xchg
lods
imul
and
add
mov
add
ret
in
pop
lods
shr
push
int3
call
call
in
repnz
shl
in
mov
add
jae
add
lods
fwait
mov
call
dec
fwait
mov
cli
lods
add
(bad)
in
sti
in
inc
xchg
mul
sar
mov
in
pop
aad
shr
(bad)
dec
jb
(bad)
jae
mov
sbb
dec
pusha
in
jg
lods
int3
lods
push
or
nop
imul
jb
add
dec
(bad)
in
sti
mul
mov
jae
jno
mov
sub
jae
xchg
mov
stos
not
(bad)
dec
sti
xor
aad
cwde
and
dec
add
lods
shr
add
scas
push
int3
call
call
cwde
and
dec
add
dec
mov
add
add
std
stos
outs
cmp
(bad)
in
fst
jmp
dec
cmp
lods
loopne
add
dec
cmp
xchg
add
add
mov
jmp
xchg
mov
mov
xchg
mul
pusha
sar
popf
outs
mov
dec
add
ror
dec
jecxz
(bad)
in
mov
cmp
mul
sar
jmp
in
(bad)
dec
les
(bad)
jmp
lods
cmp
add
loope
pop
(bad)
in
sub
mov
in
fst
dec
in
and
in
xchg
(bad)
in
scas
(bad)
in
lods
dec
dec
in
popf
imul
jmp
dec
sti
lods
xor
cmp
sbb
(bad)
dec
xchg
or
dec
dec
imul
(bad)
(bad)
mov
add
add
and
(bad)
push
out
xor
add
dec
jmp
iret
clc
add
add
xchg
(bad)
mov
xor
add
idiv
add
push
add
mul
sub
rol
add
mul
sub
sub
dec
dec
lods
xchg
daa
add
add
mov
jecxz
in
sub
cmp
(bad)
dec
xchg
fdivr
dec
(bad)
in
scas
(bad)
in
popf
not
sub
(bad)
dec
xchg
lods
into
popf
add
or
test
(bad)
(bad)
in
sub
in
fcos
in
mov
(bad)
in
lods
(bad)
in
popf
dec
mul
ret
lods
sbb
mov
add
lods
fwait
mov
call
jge
pop
test
les
in
sti
dec
inc
idiv
(bad)
push
ss
jno
mov
sahf
mov
les
add
lods
fwait
popf
jp
add
dec
cmp
dec
scas
(bad)
loope
(bad)
push
out
(bad)
push
sbb
pop
add
or
cmps
push
enter
fcompp
dec
cwde
and
add
add
sbb
cwde
iret
lods
add
add
mov
in
scas
(bad)
in
popf
div
(bad)
jmp
lods
pop
popf
add
popa
dec
lods
dec
cmps
xchg
fst
adc
ds
pop
xor
call
stc
lods
jecxz
xor
mov
and
dec
psubq
int
ins
cwde
adc
sub
in
fcos
in
xor
in
lods
(bad)
in
popf
and
int
sbb
mov
in
fcos
in
xor
in
sub
in
lods
(bad)
in
popf
and
dec
ret
lods
sbb
pusha
fidivr
pop
sbb
dec
(bad)
js
les
(bad)
in
popf
outs
dec
div
lods
xor
sti
loope
dec
add
push
xchg
scas
(bad)
dec
dec
imul
add
scas
outs
cmp
stos
fmul
not
dec
imul
dec
xchg
xchg
add
add
and
pusha
call
add
xor
add
or
cmp
dec
int3
repz
add
dec
cmp
lods
fwait
push
add
add
mov
sti
sti
outs
cmp
stos
dec
cmp
and
add
add
(bad)
mov
popa
jns
sti
fdivr
cmp
rcr
mov
cmp
adc
push
add
add
in
not
sbb
push
cmp
neg
dec
jmp
outs
js
fsub
mov
dec
jmp
dec
jmp
outs
cmp
stos
not
sub
pusha
cwde
iret
and
mov
mov
dec
ror
repnz
or
dec
lea
pop
test
les
mov
cmp
outs
shl
hlt
lods
pusha
fstp
int3
fadd
(bad)
in
sti
test
(bad)
(bad)
mov
add
add
add
add
add
add
repnz
in
xchg
dec
jb
scas
dec
cmp
lods
in
int
inc
dec
fimul
sub
lahf
loop
xchg
dec
push
sub
dec
cmp
popf
push
repz
pop
push
jmp
jnp
dec
lea
sub
sub
ds
pop
sti
mov
inc
dec
or
int
push
in
sahf
lods
add
add
add
add
add
sub
dec
jb
lods
repnz
dec
jb
popf
in
test
sub
jnp
sahf
lods
add
xlat
dec
fimul
sub
jnp
sub
sub
jnp
jecxz
pop
sahf
lods
add
xor
(bad)
mov
(bad)
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
(bad)
div
idiv
add
jae
mov
jns
add
push
sbb
dec
(bad)
js
les
sbb
dec
xchg
(bad)
in
lods
outs
dec
test
test
(bad)
dec
popf
and
call
retf
not
add
pusha
stos
stos
stos
stos
stos
imul
sub
dec
cmp
movs
gs
cmp
lods
fwait
push
add
add
scas
outs
cmp
stos
cwde
adc
fdivr
stos
imul
ins
add
lods
sbb
dec
or
or
shr
call
imul
dec
neg
aaa
(bad)
(bad)
mov
dec
stos
test
add
and
call
xchg
jp
add
sbb
xchg
call
and
mov
and
add
call
retf
cmp
lods
das
sbb
push
add
add
lahf
sti
das
fisubr
loop
das
sbb
call
bound
in
test
(bad)
fadd
(bad)
in
popf
(bad)
in
sti
neg
test
jmp
dec
(bad)
js
les
add
sub
mov
mov
mov
mov
mov
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
sub
mov
cld
sub
mov
or
mov
daa
sub
mov
(bad)
push
mov
dec
add
jl
sub
mov
mov
mov
aaa
mov
dec
add
add
mov
jmp
(bad)
jl
mov
mov
add
(bad)
mov
mov
hlt
add
mov
mov
(bad)
mov
mov
(bad)
mov
mov
dec
imul
jae
mov
mov
sub
add
add
add
add
add
add
dec
(bad)
sub
and
call
sti
iret
pusha
in
xchg
xchg
fld
dec
add
ds
mov
xchg
add
(bad)
mov
lods
xlat
jecxz
popf
or
shl
repz
in
inc
dec
xchg
dec
and
jecxz
dec
xchg
dec
and
push
jecxz
repz
movs
sbb
int
sbb
mov
jmp
sti
jge
dec
cmp
(bad)
int3
dec
(bad)
js
les
sti
xor
cmps
mov
js
(bad)
inc
cmps
mov
add
(bad)
in
sti
push
mov
in
pusha
ficomp
int3
in
pusha
sbb
dec
(bad)
js
les
sti
cmp
pop
dec
xchg
push
add
push
ret
test
(bad)
(bad)
fcom
cmp
cmp
not
adc
jmp
lahf
out
dec
in
lods
push
movs
in
(bad)
shl
lahf
mov
jns
sar
inc
aam
call
in
lods
shl
mul
das
(bad)
(bad)
fsubr
xchg
dec
inc
lahf
dec
in
pusha
jge
pop
sbb
fcomp
mov
add
sub
add
dec
in
sti
dec
or
and
call
mov
cmps
mov
pusha
call
rol
xchg
stos
test
(bad)
(bad)
mov
sahf
fwait
(bad)
(bad)
mov
aaa
cmp
test
(bad)
push
sbb
add
imul
jg
add
dec
cmc
lahf
push
xchg
add
mov
add
add
dec
(bad)
sub
dec
jb
sti
jnp
jecxz
add
in
mov
aam
in
ins
sbb
pop
aam
dec
in
and
std
call
jp
out
pusha
call
lods
dec
(bad)
lods
sahf
(bad)
sbb
in
int
(bad)
in
pusha
int3
mov
pusha
push
and
sahf
dec
add
add
sahf
dec
aam
in
mov
pusha
call
add
lods
sahf
jp
dec
in
call
aam
dec
in
push
lods
dec
jp
rol
add
add
add
add
les
dec
dec
lods
dec
mov
push
jecxz
push
test
push
mov
add
xchg
rol
add
ds
pop
sub
mov
dec
lods
mov
push
test
jge
sti
in
sbb
mov
aaa
jecxz
add
in
or
lods
push
jecxz
sar
jo
imul
dec
mov
jecxz
add
lods
repz
ds
lods
and
jecxz
jmp
and
dec
jmp
outs
mov
sub
dec
mov
dec
cmp
dec
mov
dec
push
jns
shl
mov
jns
jp
repz
mov
lods
push
jecxz
aaa
jecxz
sar
add
mov
dec
mov
push
jns
shl
repz
mov
lods
push
jp
aaa
jp
sar
pop
movs
imul
dec
mov
shl
repz
aaa
dec
lods
sar
shl
mov
dec
mov
dec
(bad)
dec
mov
xchg
dec
pusha
dec
fwait
dec
adc
dec
dec
cmp
std
dec
cmp
test
les
cmp
lea
(bad)
mov
cmp
mov
cmp
mov
xchg
and
outs
(bad)
outs
add
add
jecxz
jecxz
jmp
xor
mov
xchg
add
xor
jp
dec
cmp
in
test
mov
jge
int3
mov
shl
mov
dec
cmp
in
test
shl
mov
jns
jp
mov
dec
cmp
in
test
jmp
cld
aad
jnp
jecxz
add
in
sub
jp
push
jecxz
sar
jg
movs
imul
dec
jp
dec
(bad)
jnp
jmp
outs
fimul
mov
aaa
mov
add
add
lods
and
or
jmp
and
sub
dec
jp
mov
add
xchg
add
lea
jp
jns
jecxz
push
shl
dec
repz
jle
lods
sar
es
imul
dec
jp
outs
push
add
jecxz
push
shl
dec
repz
mov
lods
gs
jle
lods
sar
shl
sub
mov
inc
jecxz
push
shl
shl
dec
repz
mov
lods
gs
jle
lods
sar
xor
(bad)
push
sub
outs
push
add
dec
jp
jb
jp
(bad)
dec
jp
push
dec
jp
outs
dec
jp
cmp
dec
jp
ror
mov
xchg
and
dec
cmp
xchg
dec
cmp
scas
dec
cmp
lods
dec
cmp
popf
dec
cmp
sti
dec
cmp
(bad)
outs
(bad)
outs
add
add
jecxz
jecxz
jmp
xor
mov
fwait
dec
jp
add
mov
jge
int3
mov
inc
jecxz
mov
dec
cmp
in
test
inc
jecxz
mov
jns
jp
mov
dec
cmp
in
test
shl
shl
shl
in
test
les
inc
mov
mov
mov
and
push
jl
mov
call
mov
mov
cmc
and
sti
dec
or
sub
outs
jno
mov
cs
mov
dec
test
add
jae
jno
mov
mov
call
xchg
sti
dec
cmp
in
int3
fadd
not
(bad)
(bad)
(bad)
mov
dec
les
inc
mov
mov
mov
and
push
jl
mov
call
mov
mov
cmc
and
sti
dec
or
dec
add
lahf
sub
outs
jno
mov
cs
mov
dec
test
add
jae
jno
mov
mov
call
xchg
sti
dec
cmp
in
int3
inc
sahf
mov
inc
mov
mov
mov
and
inc
cmps
mov
(bad)
mov
inc
mov
mov
mov
in
jl
mov
call
push
cmps
mov
(bad)
mov
lea
mov
mov
call
(bad)
mov
mov
popa
add
fcomp
mov
add
outs
jno
mov
cs
mov
dec
test
add
mov
in
sti
aaa
inc
push
pop
stc
(bad)
mov
shr
(bad)
jno
mov
mov
xchg
mov
or
mov
enter
dec
add
xchg
bound
xchg
add
add
lock
add
inc
jae
imul
mov
inc
inc
aaa
cmp
test
(bad)
push
ret
add
add
popf
test
mov
cmp
pusha
in
sti
jl
imul
pusha
push
(bad)
(bad)
mov
(bad)
(bad)
push
add
add
dec
mov
push
jg
xchg
hlt
add
mov
mov
int3
dec
dec
inc
inc
mov
idiv
test
(bad)
push
dec
lea
inc
in
or
jp
add
dec
div
nop
(bad)
dec
mov
aam
inc
mov
pop
cmps
mov
(bad)
mov
call
test
(bad)
mov
cs
mov
xchg
lahf
test
jmp
xchg
inc
jge
push
in
dec
dec
jmp
lea
inc
in
sti
fsubr
mov
fdivr
jae
xchg
mov
add
dec
in
sti
and
mov
inc
sub
pusha
call
(bad)
mov
pusha
call
(bad)
mov
pusha
call
(bad)
mov
pusha
call
(bad)
mov
pusha
call
(bad)
mov
pusha
call
(bad)
mov
pusha
call
(bad)
mov
pop
stc
(bad)
mov
or
fdivr
xchg
add
mov
dec
shl
call
(bad)
mov
xchg
jmp
imul
(bad)
mov
(bad)
(bad)
push
xchg
add
add
popf
imul
aaa
cmp
dec
add
add
cmp
xchg
mul
push
pop
cmc
imul
mov
add
mov
(bad)
(bad)
mov
(bad)
(bad)
push
mov
add
dec
test
add
add
sti
fdivr
mov
add
mov
fcomp
add
xchg
loope
jno
mov
cs
mov
dec
not
dec
mov
in
add
dec
inc
sbb
jno
mov
fs
mov
mov
jno
mov
mov
jno
mov
mov
aas
cmps
mov
mov
cmps
mov
cmps
mov
pop
pop
cmps
mov
pusha
in
sub
(bad)
mov
mov
mov
mov
xchg
cmps
mov
mov
(bad)
mov
mov
iret
add
add
inc
cmps
mov
pusha
cwde
iret
ja
add
not
mov
cmps
mov
(bad)
inc
cmps
mov
mov
(bad)
inc
cmps
mov
mov
(bad)
inc
cmps
mov
mov
jmp
cmps
mov
add
pusha
call
inc
cmps
mov
(bad)
mov
mov
call
add
fmul
or
(bad)
dec
mov
dec
inc
lea
pop
cmps
mov
(bad)
mov
call
ret
mov
cs
mov
xchg
in
pusha
ficomp
(bad)
(bad)
in
pusha
jge
int3
fsubr
test
add
in
pusha
dec
sbb
in
call
retf
pusha
push
aaa
in
ins
test
(bad)
push
add
xchg
xchg
xchg
xchg
imul
(bad)
jmp
call
push
mov
(bad)
test
mov
cwde
add
mov
aaa
call
test
dec
in
std
aaa
cmp
test
(bad)
push
and
add
aad
and
lods
cmp
inc
retf
mov
(bad)
mov
imul
jecxz
add
in
dec
sti
dec
in
std
fadd
not
int3
dec
(bad)
js
les
add
(bad)
mov
and
(bad)
mov
add
xchg
jmp
jmp
call
js
(bad)
imul
in
sti
neg
add
inc
mov
sar
jae
add
add
cmc
lods
sbb
dec
les
jno
mov
(bad)
mov
jae
jno
mov
mov
call
sbb
dec
(bad)
js
(bad)
(bad)
in
sti
not
(bad)
in
sti
inc
add
sti
not
int3
fdivr
test
add
dec
les
lea
pusha
call
push
in
sti
ds
in
int3
dec
(bad)
js
les
in
sti
in
pusha
lahf
cwde
and
lods
dec
sub
call
push
(bad)
push
in
popf
ds
in
int3
dec
(bad)
js
les
mov
fidiv
mov
add
(bad)
in
sti
inc
mov
add
dec
(bad)
mov
mov
(bad)
mov
fdiv
fidivr
test
fwait
xor
mov
dec
(bad)
mov
jmp
mov
jae
push
mov
add
fadd
fdivr
add
sbb
mov
fcom
mov
add
sti
idiv
jg
add
in
pop
inc
aad
and
push
ins
mov
cmp
lods
mov
data16
add
inc
or
mov
dec
mov
call
push
mov
(bad)
mov
mov
in
and
mov
idiv
mov
call
inc
test
(bad)
dec
imul
inc
inc
or
pop
mov
inc
push
mov
jmp
std
in
mov
sub
mov
dec
lea
ficomp
(bad)
mov
mov
(bad)
mov
mov
mov
(bad)
mov
(bad)
(bad)
push
mov
add
lods
mov
xchg
cmps
mov
repnz
mov
jmp
(bad)
(bad)
in
pop
inc
lods
mov
fdivr
not
repnz
mov
add
int3
dec
(bad)
js
(bad)
fadd
fadd
(bad)
in
sti
test
(bad)
jmp
dec
(bad)
js
(bad)
fadd
fmul
in
sti
neg
sbb
add
add
data16
jmp
dec
fmul
add
pop
int3
dec
dec
fidivr
dec
dec
div
(bad)
dec
aaa
cld
add
dec
imul
div
neg
add
dec
div
idiv
mov
dec
push
inc
add
jae
sbb
imul
inc
(bad)
jmp
mov
add
add
bnd
outs
inc
add
add
sub
cmp
cmp
xchg
jl
mov
jmp
push
(bad)
in
mov
cmp
test
(bad)
inc
lea
add
add
int3
dec
dec
lea
jg
add
add
dec
icebp
sbb
int3
add
add
add
add
js
les
sbb
in
inc
aas
mov
ss
cmp
add
cmp
outs
into
lods
lods
mov
or
jecxz
in
popf
or
dec
popf
dec
inc
sti
jecxz
in
popf
or
dec
sti
inc
faddp
sbb
dec
dec
lods
outs
js
xchg
dec
pop
popf
xchg
test
call
pop
dec
jb
scas
outs
cmp
lods
xchg
lea
xchg
mov
dec
sbb
add
dec
pusha
cld
fsubrp
mov
cmp
test
call
call
call
in
popf
or
dec
popf
dec
dec
sti
jecxz
in
popf
aam
bound
dec
cmp
icebp
sbb
aaa
cmp
lahf
test
scas
(bad)
in
cmps
lods
pop
fnstenv
mov
fnstenv
mov
add
call
ud0
lods
cmp
dec
popf
neg
sub
add
popf
aad
popf
call
xchg
dec
enter
xchg
sub
add
popf
dec
dec
mov
lods
mov
or
jecxz
in
popf
or
dec
popf
dec
dec
sti
jecxz
in
popf
aam
das
aas
(bad)
dec
lea
sti
dec
sbb
add
aad
popf
cwde
iret
ud0
push
mov
add
dec
pop
add
repz
(bad)
jmp
mov
js
les
cmp
sbb
xchg
dec
mov
sar
rcl
fst
cmp
sar
jmp
cmp
cmp
aad
std
cmps
mov
pop
push
mov
(bad)
mov
cli
jp
dec
dec
scas
mov
add
push
out
cwde
and
iret
pop
dec
add
lods
shl
and
iret
repz
add
fdivr
or
cwde
iret
adc
add
push
cwde
iret
sub
add
lods
jmp
add
iret
lock
add
push
call
cmp
add
cmp
jecxz
add
aaa
cmp
das
mov
sbb
and
jecxz
sbb
das
ss
sbb
pusha
cwde
and
add
idiv
add
push
add
add
repz
add
cmp
das
mov
sbb
and
jecxz
cmp
mov
imul
ss
sbb
fmul
add
cmp
jecxz
add
aaa
cmp
lahf
jbe
cmp
das
mov
jecxz
sbb
das
repz
xchg
aaa
cmp
repz
(bad)
push
cmp
lahf
sbb
cmp
repz
(bad)
push
cmp
lahf
lock
repz
push
call
ins
call
ret
add
cmp
lahf
in
cmp
lahf
clc
aaa
cmp
das
mov
aaa
cmp
repz
(bad)
(bad)
push
cmp
jp
add
repz
(bad)
jmp
add
cmp
jecxz
add
aaa
cmp
repz
test
call
jmp
add
add
jmp
outs
cmc
cwde
jp
aaa
cmp
lahf
xchg
aaa
cmp
lahf
aas
aaa
cmp
lahf
loopne
cmp
lahf
(bad)
aaa
cmp
lahf
and
cmp
repz
(bad)
(bad)
push
cmp
repz
(bad)
push
cmp
lahf
lods
aaa
cmp
lahf
mov
ds
mov
mov
das
sbb
das
jecxz
sbb
outs
dec
fisubr
sbb
dec
add
add
cmc
mov
mul
add
add
das
cmp
pop
test
ficomp
jp
sets
pop
cwde
jp
outs
cwde
jp
jle
jp
bound
jp
cmc
sub
jp
and
jp
lods
and
push
mov
add
xor
push
mov
(bad)
js
les
and
add
inc
jmp
mov
add
das
cmp
mov
dec
ficomp
dec
xchg
and
das
xor
sbb
in
js
sti
or
add
retf
lods
mov
mov
cmp
cmp
and
xor
fdiv
idiv
add
lods
sub
xchg
add
das
cmp
mov
cmp
cmp
mov
lods
les
cmp
das
xor
fdiv
fdivr
lahf
inc
imul
sbb
mov
and
test
dec
cmp
cmp
add
das
cmp
inc
int3
fldln2
arpl
cmp
das
push
sub
das
cmp
das
xor
fdiv
fsubr
lods
xor
pop
test
les
and
add
inc
add
mov
add
cmp
mov
dec
ficomp
dec
xchg
and
das
xor
sbb
in
js
in
jmp
and
retf
lods
mov
mov
cmp
cmp
and
xor
fcomp
add
dec
cmp
loop
add
das
cmp
mov
cmp
cmp
mov
lods
les
cmp
das
xor
fcomp
test
mov
mov
and
test
dec
cmp
(bad)
jmp
mov
inc
int3
fldln2
arpl
cmp
das
push
sub
das
cmp
das
xor
fcomp
mov
xor
pop
test
les
and
sbb
dec
xchg
in
inc
in
inc
mov
xor
mov
mov
ds
call
cwde
lods
pop
dec
add
fsub
idiv
lods
mov
dec
add
fsub
idiv
and
jg
pop
lods
jl
mov
dec
add
xchg
ret
add
cwde
iret
loop
add
jae
pop
(bad)
mov
add
xchg
idiv
jmp
pusha
call
div
(bad)
jmp
dec
add
loope
jo
mov
mov
add
add
in
pop
jae
pop
(bad)
mov
add
sub
(bad)
jmp
call
stos
stos
not
sub
(bad)
fidivr
or
(bad)
jmp
fsub
pop
jmp
mov
mov
idiv
pop
add
lods
sub
inc
dec
dec
dec
dec
dec
test
(bad)
jmp
in
inc
jae
pop
(bad)
mov
mov
add
call
div
jmp
jmp
(bad)
push
cmp
div
sbb
dec
dec
dec
dec
idiv
(bad)
jmp
(bad)
jae
pop
(bad)
mov
add
lods
sbb
or
(bad)
mov
call
fadd
outs
cmp
popf
xor
mov
je
(bad)
mov
inc
jge
pop
test
or
add
sbb
mul
and
mov
pop
lods
jl
mov
jmp
add
mul
inc
add
div
mov
dec
les
add
mov
cmp
dec
cmp
cmp
dec
in
xchg
in
pop
lods
mov
and
add
and
or
add
outs
sub
(bad)
(bad)
dec
and
in
scas
xchg
(bad)
(bad)
(bad)
(bad)
in
lods
stos
not
xchg
add
dec
lea
in
fdivr
cmp
(bad)
mov
and
add
add
cmp
in
scas
(bad)
in
lods
inc
call
add
lods
adc
call
int3
call
not
(bad)
dec
mov
dec
cmp
add
(bad)
inc
call
in
lods
inc
call
add
dec
lea
call
enter
mov
(bad)
inc
push
aad
pop
(bad)
(bad)
call
jl
(bad)
mov
dec
jmp
in
adc
xchg
jbe
push
int3
outs
or
and
push
add
lods
sub
cmp
cmp
std
data16
jmp
pop
(bad)
(bad)
call
jl
(bad)
mov
aad
popf
in
adc
fadd
xor
xchg
(bad)
in
scas
(bad)
in
lods
stos
div
adc
mov
cwde
adc
stos
test
pusha
call
repz
xor
mov
xchg
inc
retf
mov
lahf
adc
js
les
sti
xor
retf
mov
js
(bad)
in
pusha
aad
sti
fadd
cwde
mov
add
stos
inc
xor
retf
mov
sbb
in
pusha
fidiv
push
mov
dec
xchg
in
inc
xor
lods
mov
add
mov
(bad)
rcl
or
add
out
lods
aaa
xchg
neg
add
mov
popf
inc
lods
test
cld
int
pusha
fidivr
int3
lods
sub
xchg
xor
mov
inc
dec
(bad)
cmp
ins
mov
loope
xor
mov
call
dec
call
mov
(bad)
jmp
push
sti
xchg
test
mov
xchg
xor
mov
pusha
call
jecxz
dec
lods
push
sti
xchg
test
mov
pop
int3
dec
(bad)
js
les
sti
(bad)
(bad)
push
inc
sbb
fcomp
mov
(bad)
in
push
pop
aad
sti
retf
mov
mov
(bad)
fmul
push
add
add
jne
(bad)
(bad)
mov
outs
(bad)
rcl
mov
stos
fcom
(bad)
mov
in
cwde
not
cmp
aaa
add
pusha
lahf
and
sbb
mov
xchg
jmp
mov
xor
cwde
add
xchg
idiv
mov
xchg
not
leave
(bad)
(bad)
mov
push
add
sbb
lahf
repnz
lahf
mov
(bad)
(bad)
mov
(bad)
(bad)
push
test
add
dec
cmp
neg
mov
dec
fcomp
neg
(bad)
mov
dec
les
sti
dec
outs
(bad)
push
lods
ret
add
pop
stos
imul
(bad)
(bad)
mov
fdiv
test
(bad)
(bad)
mov
call
dec
(bad)
js
les
(bad)
push
mov
mov
xchg
lahf
hlt
dec
js
or
popf
xchg
fld
add
scas
push
dec
ds
in
pusha
sbb
dec
(bad)
js
les
sti
dec
loop
dec
dec
in
popf
xchg
dec
test
popf
lods
push
jmp
jle
dec
sbb
test
daa
dec
cmp
add
push
xchg
inc
dec
dec
cwde
and
jp
add
xor
dec
dec
jmp
js
dec
js
xchg
popf
inc
sahf
dec
in
call
inc
inc
jecxz
inc
jne
sub
push
sub
in
fdiv
add
or
dec
out
enter
jp
jnp
push
push
fwait
cmp
sti
push
out
xor
and
lahf
outs
jb
(bad)
jnp
push
push
add
add
sti
push
mov
dec
cmp
dec
pop
(bad)
dec
dec
jmp
dec
mov
jne
dec
js
dec
jne
dec
psubq
jmp
push
dec
ffree
push
lods
fld
jecxz
inc
jne
sbb
sbb
add
or
mov
ret
inc
xchg
popf
sub
push
xchg
inc
jp
xchg
jecxz
mov
(bad)
push
xchg
push
cmps
inc
jp
cmps
push
mov
dec
jno
push
jno
in
push
loope
add
or
dec
add
gs
push
call
in
push
dec
dec
sti
push
mov
enter
push
push
fwait
add
add
dec
dec
sti
push
jno
dec
dec
popf
dec
jno
dec
push
mov
dec
push
sti
xchg
sti
dec
in
popf
lahf
jecxz
sbb
lods
mov
push
mov
add
lea
push
dec
mov
xchg
mov
dec
or
push
or
in
cs
jp
ror
test
jb
(bad)
lods
fstp
scas
and
mov
dec
out
ja
add
or
lahf
dec
dec
sti
test
ja
add
or
enter
fwait
cmp
mov
outs
push
and
add
or
lahf
dec
dec
sti
test
mov
add
or
jmp
add
xchg
xchg
out
jmp
cmp
movs
add
add
mov
fiadd
add
dec
jg
push
mov
(bad)
mov
add
cwde
jecxz
popf
ja
or
add
jmp
mov
mov
or
jmp
mov
jg
push
mov
add
add
jl
ins
mov
rol
cs
mov
stc
inc
add
test
cs
mov
in
xor
add
bound
ins
mov
add
inc
sti
retf
mov
(bad)
mov
mov
mov
cmp
mov
hlt
les
outs
shr
std
(bad)
dec
sti
lods
sbb
mov
mov
sti
scas
jl
push
mov
mov
cs
mov
mov
int3
jl
push
mov
push
mov
(bad)
in
(bad)
lods
pusha
lods
xchg
stos
inc
push
mov
retf
mov
(bad)
mov
in
pusha
lahf
pop
lods
mov
lods
dec
inc
(bad)
push
mov
mov
inc
sti
push
mov
add
sti
inc
retf
mov
(bad)
mov
aaa
call
add
jae
add
mov
popf
push
aaa
in
popa
inc
xchg
inc
retf
mov
(bad)
mov
sti
inc
jmp
dec
inc
lods
lods
sti
dec
jge
int3
dec
(bad)
js
les
and
sti
dec
loop
cmp
dec
jno
xchg
in
pop
lahf
jecxz
pusha
inc
and
ror
pusha
(bad)
jp
add
out
cmp
add
inc
xchg
mov
xchg
(bad)
lods
pusha
sti
push
in
mov
(bad)
dec
ret
lods
add
dec
mov
jae
or
add
(bad)
mov
lods
xchg
push
data16
add
add
add
pop
inc
dec
out
or
dec
repz
outs
mov
loop
sar
cwde
add
jmp
jmp
add
xchg
push
fsubrp
lea
(bad)
aaa
or
cwde
add
lea
lods
add
push
in
add
jmp
cmp
add
popf
xchg
mov
xchg
(bad)
lods
outs
add
mov
sbb
jns
inc
jns
test
pusha
dec
cmp
ror
inc
in
jecxz
pop
(bad)
mov
add
or
enter
push
stos
sti
dec
int3
jge
pop
test
les
sti
dec
loop
cmp
dec
in
lods
xchg
dec
mov
and
jmp
jp
add
dec
cmp
add
jmp
pushf
lea
push
inc
outs
cld
aad
dec
mov
dec
lods
xchg
jmp
(bad)
js
add
inc
int3
dec
cwde
and
dec
add
jecxz
push
movs
cwde
and
dec
add
dec
dec
jmp
rol
xchg
lods
rol
fadd
xchg
dec
jge
push
jge
in
inc
ja
add
or
enter
mov
jnp
push
push
mov
test
sti
push
out
mov
dec
and
lahf
dec
dec
mov
jnp
push
push
add
add
sti
push
mov
dec
jge
xchg
dec
jmp
dec
dec
lods
or
dec
dec
jmp
mov
imul
jmp
dec
popf
dec
inc
cli
outs
jb
jmp
inc
jecxz
inc
jge
sbb
sbb
(bad)
dec
sbb
(bad)
dec
mov
dec
mov
in
xchg
jns
mov
test
jb
(bad)
lods
(bad)
fldcw
add
sub
add
or
lahf
dec
dec
sti
test
outs
cmp
(bad)
mov
outs
cli
and
add
or
lahf
dec
dec
sti
test
add
add
and
enter
dec
js
dec
dec
jmp
cmp
jb
jmp
jecxz
js
outs
inc
dec
xchg
jmp
cmp
add
in
pusha
repz
outs
dec
dec
add
dec
sbb
or
sub
outs
push
in
jmp
in
lods
dec
test
or
jmp
test
jecxz
inc
in
cmp
dec
cwde
and
add
add
jmp
test
or
fadd
dec
cli
(bad)
push
cli
sti
in
fdiv
add
or
dec
call
ss
jnp
push
push
mov
test
sti
push
out
xor
and
lahf
outs
jb
(bad)
jnp
push
push
add
add
sti
push
mov
dec
cli
sti
dec
pop
mov
xchg
dec
in
lods
jecxz
jmp
in
lods
dec
test
or
fadd
dec
dec
mov
popf
inc
dec
stc
mov
dec
sub
xchg
push
sub
in
xchg
jns
ss
ror
test
jb
(bad)
lods
test
scas
xor
mov
dec
call
or
jle
dec
sti
test
outs
cmp
(bad)
mov
outs
or
xor
enter
sti
test
(bad)
outs
iret
mov
add
add
and
enter
dec
cmp
jmp
pusha
fidivr
pop
test
les
push
mov
pusha
scas
jecxz
sti
push
mov
xlat
lea
(bad)
cmp
lods
rcr
xchg
mov
enter
mov
dec
and
enter
mov
mov
dec
cmp
dec
push
dec
js
dec
test
sbb
scas
xchg
sti
push
fidivr
neg
(bad)
jmp
mov
(bad)
dec
push
dec
js
dec
test
sbb
scas
xchg
sti
push
movs
neg
movs
in
pop
lahf
popf
lods
into
sti
add
sbb
sti
push
fidivr
lea
(bad)
mov
sti
push
mov
sti
add
sbb
sti
push
movs
lea
movs
in
xor
(bad)
dec
xchg
sti
and
in
mov
jp
add
aam
(bad)
(bad)
mov
dec
dec
inc
lods
lods
or
ins
lods
push
mov
lods
xchg
lods
(bad)
call
add
dec
cld
mov
dec
dec
mov
in
cmps
lods
xor
add
add
add
cmp
dec
js
dec
test
sbb
jmp
clc
iret
add
add
dec
js
dec
out
push
test
daa
dec
cmp
add
mov
in
dec
popa
dec
daa
mov
add
add
fcomp
jge
jecxz
div
dec
dec
mov
mov
dec
sbb
lea
dec
test
or
mov
in
jnp
iret
dec
dec
add
dec
push
(bad)
push
push
sti
in
push
lods
(bad)
fnstenv
add
or
dec
dec
jmp
cld
or
sbb
dec
push
sar
xchg
cmp
les
sti
push
repnz
xor
and
lahf
dec
dec
jmp
daa
rol
cld
or
out
cwde
xchg
(bad)
in
repnz
sbb
dec
dec
les
(bad)
lahf
jecxz
sbb
lods
mov
sti
dec
test
xchg
(bad)
dec
push
(bad)
dec
test
xchg
sti
cwde
iret
outs
add
add
mov
popf
inc
dec
stc
mov
dec
push
mov
in
in
jb
(bad)
ror
test
test
shl
(bad)
mov
add
repnz
dec
call
dec
call
or
jle
dec
jmp
cld
sar
lahf
cmps
or
or
xor
enter
(bad)
dec
dec
jmp
sbb
add
add
and
add
add
enter
dec
dec
mov
xchg
xchg
jmp
jecxz
dec
mov
push
outs
or
sbb
in
mov
sub
ret
and
in
fistp
ins
cs
mov
jmp
jg
push
mov
cs
mov
xchg
outs
fadd
jge
pop
test
add
call
rcr
fwait
mov
popa
mov
sti
add
int3
fwait
hlt
mov
dec
xchg
dec
lea
dec
add
in
jmp
xor
(bad)
(bad)
in
pusha
cwde
or
mov
repnz
outs
shr
mov
outs
inc
xor
xor
jns
dec
shr
lock
dec
add
loope
dec
add
jns
sti
shr
in
dec
(bad)
js
les
add
mov
cmp
cmp
outs
and
(bad)
jmp
add
(bad)
mov
add
pusha
cwde
iret
ret
add
pusha
ror
mov
ficomp
aaa
ds
and
(bad)
call
jmp
(bad)
(bad)
fxch
pusha
call
call
jecxz
xchg
pop
xchg
or
fisubr
test
(bad)
fcomp
psadbw
movs
(bad)
jmp
jecxz
iret
pusha
in
fcmovu
add
inc
popf
outs
and
(bad)
(bad)
inc
stos
xchg
outs
and
test
jmp
idiv
add
pop
cmp
inc
(bad)
outs
and
mov
call
jmp
(bad)
jmp
cmp
pop
pusha
(bad)
jmp
inc
(bad)
outs
and
jmp
call
jmp
(bad)
jmp
add
inc
popf
cmp
xchg
pusha
(bad)
jmp
cwde
or
cmp
(bad)
inc
call
jns
mov
lahf
hlt
inc
dec
jp
or
ss
fnstcw
mov
shl
ss
dec
add
lahf
sti
push
iret
ss
dec
add
add
push
aaa
ds
dec
outs
lock
dec
add
aaa
and
(bad)
dec
(bad)
(bad)
(bad)
in
mul
dec
std
(bad)
jmp
sub
jecxz
outs
jne
lods
ret
popf
or
ins
lods
jns
or
fucom
pop
sub
fnstcw
or
fnop
lods
lahf
jecxz
add
loop
sbb
sahf
dec
dec
jmp
in
adc
dec
jns
push
int3
fcomp
mov
push
add
mov
mov
ins
lods
jmp
dec
pop
jae
inc
in
sti
fcomp
imul
push
mul
fdivr
mov
lods
xor
add
jae
in
std
push
inc
sti
cmp
inc
call
(bad)
mov
xchg
test
imul
(bad)
mov
mov
inc
sti
cmp
dec
inc
aaa
cmp
test
(bad)
push
mov
(bad)
fdivr
mov
int3
dec
(bad)
js
les
pop
cmp
dec
(bad)
div
sub
inc
mov
mov
mov
dec
add
add
or
(bad)
mov
cmp
mov
lahf
mov
aaa
mov
dec
add
add
or
(bad)
mov
jmp
popa
dec
cmp
mov
dec
add
add
call
bound
int3
dec
(bad)
js
les
mov
xchg
jmp
dec
sbb
xchg
imul
(bad)
dec
in
inc
xchg
dec
int3
test
(bad)
(bad)
in
pusha
repz
add
xchg
std
in
pusha
aad
lods
cmp
add
add
cmp
lods
pusha
out
pop
lea
add
ds
add
cwde
iret
bound
add
add
add
cmp
(bad)
mov
cmovs
add
imul
mov
cwde
iret
in
dec
add
jae
dec
add
outs
inc
xor
idiv
cmps
(bad)
(bad)
in
int
lods
sbb
popf
aad
neg
add
mov
sbb
add
outs
in
jle
sub
sahf
add
add
adc
repz
add
add
dec
add
outs
inc
xor
idiv
dec
std
lods
sbb
and
fnstcw
mov
lahf
jo
inc
dec
iret
pusha
call
pusha
lahf
popa
dec
cmp
jns
popf
cmp
ins
cwde
adc
dec
mov
mov
sti
inc
inc
or
add
push
dec
in
std
(bad)
cmp
lods
push
sti
lods
mov
std
ds
aaa
xchg
(bad)
aaa
inc
sti
dec
add
add
mov
xchg
outs
inc
lods
outs
xchg
or
add
in
movs
dec
movs
neg
or
ins
(bad)
ficomp
dec
inc
inc
inc
inc
or
inc
cwde
and
(bad)
(bad)
jmp
mov
add
add
sti
sti
ficom
in
ror
mul
(bad)
inc
sti
lahf
jecxz
scas
sti
in
pusha
cwde
or
lods
repnz
outs
into
lods
sbb
sbb
pop
aad
iret
ins
mov
(bad)
jmp
jmp
in
adc
jmp
(bad)
push
int3
fsubr
mov
jmp
sub
xchg
dec
jae
in
sti
imul
mov
inc
(bad)
cwde
iret
xchg
dec
add
jae
jp
add
jecxz
(bad)
(bad)
mov
cwde
iret
inc
dec
add
pop
rol
add
dec
pop
jae
ret
lods
dec
add
in
sti
neg
mov
pusha
cwde
and
add
add
mov
adc
in
hlt
dec
inc
jae
and
mov
ror
in
cmp
pop
mov
(bad)
mov
bound
and
add
add
mov
das
add
add
jg
dec
jle
(bad)
mov
dec
inc
(bad)
xor
ins
mov
out
mov
push
mov
std
lods
mov
dec
jb
lods
add
mov
pusha
xchg
std
pop
dec
dec
add
mov
xor
rol
pop
mov
in
pusha
xchg
std
pop
add
add
dec
add
rcl
sti
xchg
mov
inc
cmp
mov
in
pop
jl
cmp
mov
test
ins
sti
cmp
aaa
cmp
test
(bad)
push
jp
add
lahf
out
fdivr
push
(bad)
(bad)
mov
mov
ret
mov
div
(bad)
(bad)
(bad)
mov
push
add
(bad)
lods
xor
add
and
sbb
pop
mov
mov
mov
dec
test
(bad)
mov
mov
in
pusha
int3
dec
(bad)
js
les
in
lods
outs
dec
div
fisttp
sti
outs
inc
dec
pop
add
add
cwde
dec
cmp
dec
or
or
mov
in
xchg
sti
dec
mov
imul
inc
add
stos
imul
mov
jns
sti
fdivr
cmp
cmp
add
rcr
mov
loop
cmp
fmul
bound
cmp
stos
and
mov
fmul
div
add
lods
sbb
pusha
in
lods
or
dec
cmp
in
pusha
lahf
scas
cwde
or
jmp
cmp
call
bound
(bad)
js
les
dec
dec
in
popf
dec
div
sub
popf
dec
inc
popf
mov
test
test
add
lods
or
repz
dec
add
pop
ficomp
(bad)
push
add
add
lahf
nop
cmp
pop
pop
dec
call
cwde
iret
rol
add
dec
or
lods
and
dec
inc
popf
lods
and
xchg
jp
inc
popf
xchg
mov
xor
aam
add
lods
pusha
fstp
lea
add
lods
pusha
ficomp
(bad)
in
jg
in
popf
mul
and
mov
add
mov
dec
add
xchg
cwde
iret
or
add
dec
inc
sti
dec
ret
outs
ror
sub
mov
or
shr
(bad)
in
popf
test
add
jmp
dec
lods
xchg
fld
call
lods
sar
lods
rol
mov
push
dec
frstor
mov
cdq
mov
fstp
cmp
test
add
dec
sahf
lods
sub
inc
sti
jns
sti
sar
lahf
xchg
in
push
stos
(bad)
in
popf
mul
sbb
jmp
test
xchg
call
and
add
add
in
int3
dec
(bad)
js
les
pop
aad
scas
in
fdecstp
mov
cmp
cmp
add
mov
sub
add
add
in
popf
xchg
dec
mov
push
push
movs
in
ins
neg
cmp
cmp
aaa
add
imul
scas
lods
xchg
call
(bad)
jmp
mov
std
(bad)
in
xor
and
in
xchg
aaa
cmp
fadd
add
(bad)
in
scas
xchg
imul
js
lods
sub
(bad)
push
int3
cld
imul
std
pop
mov
xchg
lahf
hlt
outs
cmp
stos
cmp
jle
(bad)
(bad)
mov
call
in
pusha
aad
std
rcl
call
jge
pop
test
les
pop
aad
lods
in
ins
imul
cmp
cmp
aaa
add
popf
sar
jmp
call
sti
push
movs
call
not
je
push
add
out
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
dec
jae
mov
test
jmp
mov
mov
adc
aaa
add
add
cmp
cmp
cmp
adc
sub
sbb
dec
(bad)
js
les
lods
les
in
lods
xor
add
add
adc
sti
scas
fistp
jg
mov
(bad)
loop
dec
cmp
cmp
lahf
fdivrp
in
lods
outs
dec
(bad)
not
cmp
jmp
jmp
outs
cmp
stos
fmul
cmp
stos
outs
cmp
fmul
idiv
loope
jmp
in
jecxz
cmp
or
cmp
cwde
or
jmp
or
dec
dec
test
les
fwait
(bad)
inc
add
(bad)
in
pusha
test
add
xchg
cwde
or
sti
dec
jg
mov
(bad)
loop
or
dec
dec
test
mov
inc
popf
imul
mov
outs
cmp
stos
fmul
fisubr
mov
jmp
(bad)
in
popf
(bad)
in
sti
mul
sbb
mov
push
mov
and
mov
add
mov
push
mov
in
mov
(bad)
mov
mov
fadd
dec
xchg
push
mov
(bad)
mov
mov
fcomp
mov
int3
in
int
sti
sbb
mov
or
jp
dec
fldcw
rcr
fadd
sbb
mov
mov
and
mov
mov
mov
lods
mov
push
call
mov
rcr
mov
pusha
in
imul
pop
fisub
mov
add
inc
and
sar
(bad)
mov
dec
les
in
sti
fwait
sti
sbb
mov
xchg
test
mov
call
mov
test
(bad)
call
add
mov
(bad)
sbb
int3
dec
(bad)
js
les
sti
lods
mov
pusha
lods
stos
not
idiv
dec
popf
xchg
rcr
mov
popf
lods
pusha
fldcw
(bad)
mov
js
les
sti
pop
sti
sbb
mov
pop
jae
mov
cs
(bad)
jmp
dec
mov
stos
div
mov
int3
lods
pusha
fldcw
(bad)
mov
js
les
sti
lods
shr
xchg
cs
(bad)
jmp
lods
and
inc
mov
int3
lods
pusha
fldcw
(bad)
mov
js
les
mov
mov
popf
xchg
in
inc
mov
mov
lahf
jp
inc
sub
or
lods
mov
mov
mov
ss
(bad)
call
aaa
add
leave
iret
(bad)
jmp
repz
add
ja
jecxz
add
dec
jmp
lahf
test
dec
add
lods
dec
jmp
in
mul
inc
inc
cwde
or
sbb
cwde
iret
pop
dec
add
mov
fiadd
add
sbb
add
cmp
and
add
add
add
jnp
add
lods
div
call
xchg
call
lods
test
and
(bad)
(bad)
call
mov
add
add
cmp
lods
add
xchg
add
add
add
pop
add
add
cwde
and
add
add
add
add
cmp
repz
add
inc
int3
jp
and
add
dec
cmp
lods
nop
test
jp
or
add
xchg
jmp
mov
ds
cmp
lods
add
lahf
cmp
mov
imul
dec
lods
div
call
jmp
pusha
add
in
inc
repnz
in
aam
xor
push
mov
add
add
in
and
js
aaa
cmp
lahf
mov
int3
add
add
hlt
xchg
add
or
add
add
and
call
fiadd
cwde
or
sbb
cwde
and
test
call
mov
add
add
lods
ret
fstp
jae
pop
(bad)
mov
add
cwde
and
test
(bad)
fcomp
lods
push
ss
jp
inc
adc
call
and
inc
adc
call
(bad)
mov
add
lods
sbb
push
sbb
add
add
(bad)
mov
add
lods
sbb
push
lods
xchg
add
add
lahf
and
mov
mov
add
lods
sbb
mov
jmp
add
dec
add
lods
ret
fstp
cwde
and
mov
push
dec
add
(bad)
in
lods
outs
cmp
stos
div
and
add
cwde
and
(bad)
dec
scas
jmp
dec
dec
jmp
rcr
pop
mov
shr
fsubr
test
(bad)
in
pop
in
inc
imul
icebp
(bad)
(bad)
mov
inc
xchg
and
inc
add
mov
add
jl
or
adc
dec
add
popf
pop
lods
in
rcl
loop
inc
mov
mov
inc
lods
stos
imul
(bad)
mov
jbe
add
jl
or
adc
(bad)
(bad)
mov
mov
ficomp
dec
not
jmp
(bad)
mov
dec
mov
jae
pushf
jp
or
(bad)
mov
mov
and
aad
call
dec
add
xor
add
mov
and
(bad)
(bad)
div
iret
(bad)
(bad)
mov
mov
addr16
(bad)
lods
pusha
fldcw
(bad)
mov
mov
mov
push
ret
xchg
mov
add
sti
xchg
cli
lods
push
cmp
test
(bad)
push
repnz
add
idiv
dec
mov
pop
nop
(bad)
(bad)
mov
xchg
dec
(bad)
sub
jb
xchg
js
stos
and
jae
in
jp
outs
inc
add
add
mov
cmp
sti
outs
xchg
add
add
sub
dec
mov
dec
jb
xor
out
bound
push
dec
(bad)
sub
lods
fld
ins
outs
inc
push
mov
lods
into
mov
dec
add
dec
inc
sti
idiv
dec
add
add
sti
test
add
lahf
adc
add
add
pop
int3
dec
jb
(bad)
jnp
(bad)
add
add
call
sar
in
xchg
test
(bad)
(bad)
js
jae
jmp
jmp
jmp
test
(bad)
jmp
cmp
sti
dec
(bad)
sub
add
int3
js
jb
sti
dec
cmps
push
push
push
test
popf
sbb
xchg
cmp
jmp
in
inc
in
(bad)
call
jge
sbb
dec
jmp
idiv
and
add
pusha
in
pop
in
imul
int
(bad)
call
xchg
fadd
fadd
jae
(bad)
jp
and
sbb
pop
sbb
js
cmp
call
test
jmp
sti
add
js
les
in
sti
xchg
in
call
jnp
ins
mul
xchg
xchg
xchg
xchg
aaa
add
daa
jmp
scas
repz
add
dec
inc
popf
pop
lods
cwde
iret
les
add
pop
ficomp
add
call
popf
repz
xchg
dec
xchg
xchg
popf
dec
add
in
test
adc
mov
inc
inc
dec
test
mul
sbb
cwde
iret
xchg
add
lods
mov
add
add
xor
cli
dec
test
add
mov
ins
dec
test
add
mov
imul
jp
add
mov
and
mov
add
and
jecxz
mov
cdq
mov
sub
mov
in
mov
fld
add
add
in
or
pop
sti
call
in
mov
lods
add
dec
sub
adc
loop
sub
addr16
lods
and
popf
xchg
(bad)
lods
xchg
(bad)
jge
sbb
fadd
jae
adc
(bad)
(bad)
in
inc
push
inc
aaa
cmp
test
(bad)
(bad)
fcomp
fcomp
in
neg
es
(bad)
mov
iret
scas
jp
add
or
mov
mov
add
lahf
out
push
faddp
add
mov
push
fisubr
add
and
push
ficomp
xchg
push
fdivrp
add
and
mov
add
push
dec
add
iret
sbb
add
cmc
push
aaa
cwde
iret
inc
add
dec
or
(bad)
push
xchg
std
loope
sti
add
push
test
jp
test
cmp
dec
add
add
fdecstp
and
(bad)
(bad)
mov
dec
dec
dec
and
outs
and
mov
or
mov
sti
add
lahf
jo
faddp
add
mov
add
sub
push
fisub
push
ficomp
lods
cs
add
jecxz
push
sahf
ds
cmp
aad
or
mov
dec
pop
or
mov
and
rcr
cmp
dec
sti
lods
sar
dec
lods
rol
call
inc
and
mov
and
dec
mov
dec
pushf
ss
and
or
mov
add
inc
(bad)
jae
cwde
add
outs
inc
popf
stos
not
and
add
iret
test
sti
(bad)
cmp
inc
lods
cmp
(bad)
aad
and
adc
pop
dec
movs
dec
pushf
ss
and
mov
call
call
ds
inc
(bad)
xchg
and
in
mov
sbb
sar
addr16
lods
pusha
shr
(bad)
mov
call
inc
xchg
inc
and
inc
add
lods
mov
or
ficomp
in
(bad)
or
(bad)
sti
jae
cwde
add
outs
inc
popf
stos
div
add
mov
or
inc
sti
lahf
sbb
or
fidiv
ss
(bad)
inc
ret
daa
mov
inc
or
mov
(bad)
mov
in
pusha
fmulp
dec
xor
aaa
cmp
test
(bad)
jmp
cmp
dec
dec
(bad)
js
les
sti
dec
in
inc
push
push
in
ins
imul
xor
dec
dec
dec
dec
aaa
add
sub
sub
dec
fisubr
js
les
in
sti
xchg
dec
div
xchg
add
stos
jl
or
mov
test
add
add
repnz
test
xor
dec
call
add
fmul
mov
add
xor
xchg
xchg
add
cs
mov
inc
dec
mov
dec
mul
push
dec
mov
and
mov
pushf
ss
add
call
mov
xchg
call
in
int3
fsubr
div
int
dec
sti
lods
mov
add
add
in
(bad)
push
add
xchg
push
pop
add
in
call
aaa
cld
sti
push
mov
ds
mul
mov
idiv
mov
test
add
xchg
xchg
xchg
xchg
xchg
div
into
(bad)
jmp
dec
xchg
dec
shl
mov
mov
pushf
ss
repnz
loope
mov
lods
xlat
dec
call
add
jecxz
cmp
(bad)
dec
call
test
(bad)
mov
cwde
not
mov
test
add
lods
dec
std
push
cmp
test
(bad)
push
test
add
dec
cmp
not
int
dec
(bad)
in
sti
not
dec
(bad)
js
les
in
sti
dec
inc
popf
pop
lods
call
inc
sti
div
sbb
pusha
mov
sti
xchg
in
int3
dec
(bad)
js
les
inc
popf
dec
xchg
or
jecxz
pop
or
jp
ficom
aad
inc
sti
xchg
dec
ret
or
and
shl
stos
dec
test
(bad)
(bad)
mov
add
lods
sbb
inc
popf
iret
pusha
stc
cwde
lods
and
mov
lods
add
jge
inc
sti
lods
add
xchg
in
int3
pop
sbb
dec
(bad)
js
les
in
sti
and
dec
test
add
cld
(bad)
(bad)
(bad)
mov
lods
xchg
call
add
add
call
jmp
add
pusha
lahf
jp
pusha
in
int3
fsubr
mov
(bad)
in
inc
mov
mov
mov
in
and
inc
add
mov
add
jl
or
adc
dec
add
lods
call
(bad)
(bad)
mov
xchg
jl
or
adc
dec
lods
call
stos
not
(bad)
(bad)
mov
mov
cmp
lahf
out
mov
dec
jp
cwde
stos
test
(bad)
mov
jecxz
cmp
sti
add
add
iret
in
dec
and
mov
neg
int3
aaa
cmp
test
(bad)
push
popa
add
add
cmp
call
cmc
(bad)
dec
fmul
scas
pop
(bad)
(bad)
mov
mov
(bad)
(bad)
mov
dec
les
sti
dec
add
and
jo
pop
lods
jecxz
sub
scas
pop
fldenv
pop
push
mov
pop
imul
add
jbe
in
mov
add
pusha
sbb
aam
mov
(bad)
mov
(bad)
js
les
and
movs
xchg
(bad)
dec
and
inc
dec
add
dec
dec
push
jl
cdq
mov
sti
dec
out
cmp
aad
sub
popf
lods
dec
popf
jecxz
push
add
xchg
jecxz
push
xchg
scas
sti
aad
in
(bad)
dec
dec
lahf
jp
pusha
and
sbb
sti
xchg
jmp
pop
in
mov
add
add
lods
cs
add
pusha
fdivp
jmp
cwde
iret
xchg
add
add
xchg
dec
dec
popf
xchg
cs
rol
lods
sar
and
jg
cdq
mov
cdq
mov
rcr
mov
dec
rcl
aad
add
xchg
cdq
mov
cdq
mov
lods
dec
popf
push
enter
sbb
dec
add
outs
pop
pop
add
test
inc
outs
lods
add
add
add
test
inc
outs
xchg
add
add
add
test
inc
outs
iret
add
add
add
test
inc
outs
and
add
lahf
ins
pop
outs
add
pusha
in
test
inc
outs
xor
add
lahf
mov
add
pusha
in
test
inc
outs
lock
add
add
mov
add
add
inc
outs
fdivr
dec
mov
mov
and
enter
mov
xchg
call
in
int3
jl
push
mov
in
mov
mov
lods
rcr
test
and
call
test
mul
int
mov
ficomp
fst
sbb
ficomp
imul
(bad)
int3
dec
dec
inc
stos
pop
mov
inc
in
fild
add
add
dec
mov
mul
call
and
pushf
cmp
(bad)
mov
neg
(bad)
dec
mov
cmps
mov
lods
xchg
call
pop
mov
jl
add
dec
mov
pop
mov
xchg
neg
(bad)
mov
pusha
call
rol
add
call
stos
stos
test
lods
sub
rol
inc
pop
mov
jmp
mov
aaa
mov
dec
add
add
pusha
mov
inc
cmps
mov
jmp
mov
lahf
std
dec
(bad)
js
les
dec
in
int
dec
mov
inc
aaa
mov
aad
sti
call
sti
mov
mov
int
mov
fimul
mov
and
or
xchg
sti
(bad)
and
call
lods
rcr
sub
inc
call
test
int
aad
cwde
iret
int3
add
add
rcr
sub
ficomp
mov
xor
add
aad
sti
call
sti
mov
lahf
jecxz
(bad)
sub
lods
or
sahf
dec
in
fldcw
jg
sar
lods
aad
in
(bad)
dec
dec
lahf
jg
imul
call
dec
jmp
mov
push
jmp
sti
fcom
add
and
in
arpl
neg
in
popf
sub
lods
rol
repnz
add
(bad)
lahf
xor
inc
call
inc
inc
jmp
dec
mov
(bad)
dec
sti
push
sahf
call
in
int3
dec
(bad)
js
les
and
add
loope
ins
mov
pop
cmp
xor
out
mov
(bad)
mov
mov
mov
dec
mov
jp
test
jmp
cmp
sbb
imul
test
dec
jmp
mov
inc
push
dec
dec
mov
(bad)
jmp
mov
push
dec
ds
stos
neg
mov
outs
cmp
stos
outs
popf
add
dec
aaa
test
jmp
mov
mov
cmps
mov
lods
xchg
(bad)
jge
pop
test
xor
mov
push
inc
in
(bad)
in
pusha
in
adc
call
in
rcr
adc
in
test
fimul
xchg
cmp
inc
(bad)
dec
mov
jg
inc
dec
aaa
jge
in
cmp
xchg
mul
xor
jmp
jmp
cs
mov
popf
pop
mov
mov
push
push
scas
cwde
dec
mov
push
lods
aaa
(bad)
push
test
inc
jge
int3
dec
dec
scas
pop
mov
mov
push
push
scas
cwde
dec
mov
push
lods
aaa
(bad)
push
test
inc
jge
int3
dec
(bad)
js
les
mov
mov
add
xor
ja
add
call
aaa
call
cmc
xor
mov
dec
outs
cmp
mov
jmp
in
mov
(bad)
mov
cld
cs
mov
stos
cs
mov
lea
(bad)
mov
cmp
in
mov
ja
repnz
dec
and
mov
xchg
mov
pop
test
xchg
mov
(bad)
push
daa
int3
(bad)
dec
pop
and
xchg
lods
xor
add
cmc
lahf
mov
dec
xor
aaa
cmp
test
(bad)
push
mov
in
(bad)
dec
idiv
(bad)
dec
cld
and
jp
cmc
repz
(bad)
(bad)
(bad)
fdivr
jae
xchg
mov
(bad)
(bad)
inc
out
mov
(bad)
mov
lods
xor
add
cmc
lahf
mov
dec
xor
aaa
cmp
test
(bad)
push
mov
jae
loop
mov
(bad)
mov
mov
add
add
add
add
add
les
dec
cmp
cmp
dec
cmp
js
in
lods
dec
dec
lods
dec
fucomi
mul
xchg
push
jge
dec
das
sbb
lods
js
lahf
xchg
rol
add
in
mov
add
not
mov
add
js
les
sti
xor
out
mov
mov
mov
mov
js
les
sti
dec
jg
cdq
mov
(bad)
call
jecxz
sti
lods
pusha
popf
push
push
les
sti
in
dec
scas
mov
jp
pusha
sbb
inc
out
mov
(bad)
mov
rcl
xchg
(bad)
(bad)
in
inc
fimul
sti
lods
ret
jb
or
jp
or
call
dec
call
dec
(bad)
dec
xchg
lods
xchg
push
mov
fwait
out
mov
mov
push
dec
enter
(bad)
dec
lods
push
sti
dec
ss
jne
int3
lods
neg
ss
out
push
add
pusha
stos
stos
stos
stos
stos
idiv
(bad)
(bad)
jmp
loope
out
mov
mov
out
mov
mov
out
mov
mov
add
add
inc
pusha
lods
mov
fiadd
add
aad
and
mov
aaa
(bad)
call
cmp
call
(bad)
mov
jmp
ret
sbb
lods
ret
addr16
cli
xchg
xchg
in
fimul
outs
xchg
aaa
mov
daa
add
add
dec
jg
cdq
mov
dec
jg
cdq
mov
cdq
mov
dec
mov
mov
xchg
push
xchg
hlt
sti
(bad)
cmp
loope
inc
test
(bad)
push
add
add
call
outs
cmp
js
mov
sti
dec
mov
add
sub
(bad)
(bad)
mov
and
sbb
lods
ret
hlt
dec
cmp
xchg
in
ss
cmp
xchg
out
(bad)
dec
dec
(bad)
js
les
rcr
cwde
or
xchg
and
lods
xchg
push
int3
lods
xor
cmp
fmul
cmp
sbb
dec
outs
inc
sti
stos
fdiv
cmp
sbb
push
mov
fsubr
(bad)
in
jmp
cmp
sbb
push
mov
fdivr
(bad)
in
jmp
cmp
sbb
jmp
outs
inc
scas
stos
fadd
in
jmp
cmp
sbb
push
mov
fadd
in
jmp
cmp
call
or
in
jmp
mov
stos
not
mov
fdiv
in
jmp
cmp
call
stos
repnz
fmul
in
jmp
cmp
call
outs
inc
pop
stos
fdiv
(bad)
in
jmp
cmp
call
outs
inc
xor
jmp
cmp
call
outs
inc
out
stos
fsubr
jmp
cmp
call
stos
repnz
fmul
in
jmp
cmp
call
outs
inc
xor
jmp
cmp
call
outs
inc
or
in
jmp
cmp
call
outs
inc
mov
jmp
cmp
call
stos
repnz
fadd
in
jmp
cmp
call
outs
inc
cmp
jmp
cmp
adc
push
mov
fcom
(bad)
in
jmp
cmp
adc
push
mov
fcom
(bad)
in
jmp
cmp
adc
jmp
outs
inc
stos
stos
fcom
in
jmp
cmp
adc
push
mov
fsubr
(bad)
in
jmp
cmp
adc
push
mov
fdiv
in
jmp
cmp
adc
push
mov
fmul
in
jmp
cmp
adc
jmp
outs
inc
cs
fmul
(bad)
in
jmp
cmp
adc
push
mov
fdivr
(bad)
in
jmp
cmp
adc
push
mov
fmul
cmp
adc
push
mov
fcom
(bad)
in
jmp
cmp
adc
jmp
outs
inc
bound
jmp
cmp
add
push
mov
fcomp
(bad)
in
jmp
cmp
add
push
mov
fmul
cmp
add
push
mov
fcomp
in
jmp
cmp
add
jmp
outs
lock
add
stos
fadd
(bad)
in
jmp
cmp
add
push
mov
add
stos
fadd
in
jmp
cmp
add
push
mov
add
stos
fcomp
(bad)
in
jmp
outs
cmp
(bad)
push
mov
add
stos
fsub
(bad)
in
jmp
cmp
add
jmp
outs
lock
add
stos
fcomp
(bad)
in
jmp
cmp
add
push
mov
add
stos
fadd
in
jmp
cmp
add
push
mov
add
stos
fcomp
jmp
cmp
add
push
mov
add
stos
fsub
cmp
add
jmp
outs
lock
add
add
mov
stos
not
mov
add
stos
fcomp
(bad)
in
mov
stos
not
(bad)
push
mov
add
stos
jae
lods
add
(bad)
in
mov
stos
neg
(bad)
push
mov
add
stos
jae
lods
add
dec
sbb
fadd
stos
test
stos
repnz
add
pop
test
les
in
sti
and
xchg
dec
add
inc
idiv
stos
(bad)
(bad)
inc
neg
(bad)
(bad)
inc
test
(bad)
inc
test
(bad)
(bad)
inc
mul
(bad)
(bad)
inc
imul
(bad)
(bad)
inc
xchg
stos
(bad)
(bad)
inc
imul
inc
sub
ss
(bad)
(bad)
inc
test
test
inc
mul
(bad)
(bad)
inc
neg
xor
xchg
(bad)
(bad)
inc
mul
inc
mov
call
sbb
inc
fdivp
int3
(bad)
(bad)
inc
div
(bad)
(bad)
inc
test
jb
sbb
(bad)
(bad)
inc
div
(bad)
(bad)
inc
test
(bad)
inc
not
(bad)
(bad)
inc
test
(bad)
inc
imul
inc
outs
test
(bad)
(bad)
inc
imul
inc
cmp
(bad)
inc
test
(bad)
inc
neg
(bad)
(bad)
inc
idiv
(bad)
(bad)
inc
imul
(bad)
jmp
or
add
neg
(bad)
(bad)
call
add
add
mov
(bad)
(bad)
call
add
add
sub
(bad)
(bad)
call
add
add
xor
(bad)
(bad)
call
add
add
hlt
(bad)
(bad)
call
add
add
ss
(bad)
call
add
add
ret
(bad)
call
add
add
lea
aas
add
add
icebp
cmp
add
add
mov
pop
add
add
sbb
xor
sbb
dec
(bad)
js
les
lods
jmp
cdq
mov
fwait
add
add
dec
idiv
data16
dec
mov
mov
cmp
neg
(bad)
jmp
pusha
call
dec
lods
cmp
lahf
and
lock
add
add
add
lahf
jp
movs
xchg
aaa
cmp
add
dec
mov
mov
stos
inc
xchg
in
pusha
jge
pop
sbb
dec
(bad)
js
les
in
sti
and
dec
ss
mov
call
(bad)
mov
mov
call
(bad)
mov
inc
mov
mov
(bad)
(bad)
mov
(bad)
js
les
sbb
dec
in
inc
xchg
xchg
test
in
adc
scas
xchg
in
popa
xchg
jmp
in
mov
aas
mov
add
fsubr
fmul
enter
dec
mov
sti
push
test
sti
in
pusha
fdivp
pop
dec
add
dec
mov
add
add
popf
mov
test
(bad)
(bad)
in
inc
mov
push
in
repnz
in
sti
div
(bad)
(bad)
mov
aad
xor
add
(bad)
neg
push
(bad)
mov
push
in
xor
inc
inc
(bad)
in
sti
div
(bad)
(bad)
(bad)
in
mov
(bad)
mov
fisttp
add
cwde
or
ret
dec
fsubr
fmul
mul
cmp
fcomp
fmul
test
(bad)
inc
sti
stos
fsubr
cmp
fmul
not
xchg
(bad)
jmp
mov
popf
dec
imul
test
(bad)
mov
(bad)
dec
add
shr
popa
or
aad
jg
repz
sar
fimul
or
or
rcr
movs
dec
lea
dec
jns
shr
add
test
cmp
mov
xchg
dec
jg
aas
mov
dec
jg
aas
mov
xchg
sti
dec
cmp
sti
dec
cmp
and
jp
sti
dec
lods
push
add
add
adc
pusha
call
adc
pusha
call
in
xchg
dec
mul
(bad)
(bad)
dec
div
fdivr
(bad)
mov
xchg
dec
cmp
add
dec
cmp
xchg
in
pusha
jge
pop
test
les
in
sti
and
dec
inc
popf
push
mov
call
(bad)
mov
mov
call
(bad)
mov
mov
call
(bad)
mov
mov
call
(bad)
mov
mov
call
(bad)
mov
mov
call
(bad)
mov
inc
mov
mov
(bad)
(bad)
mov
(bad)
js
les
dec
in
sti
xchg
in
inc
lea
xchg
in
adc
xor
lods
xchg
cmp
mov
add
fsubr
fmul
test
(bad)
dec
mov
sti
in
pusha
fdivp
in
jp
add
(bad)
test
cmp
cmp
clts
(bad)
(bad)
mov
aad
xchg
cwde
iret
pop
dec
add
fadd
test
(bad)
(bad)
mov
aaa
in
hlt
cmp
dec
push
(bad)
(bad)
(bad)
in
mov
(bad)
mov
cwde
or
outs
inc
popf
stos
fadd
fmul
test
dec
outs
inc
lods
stos
fsubr
fmul
not
push
(bad)
push
mov
fcom
fmul
mul
push
(bad)
push
mov
fcom
dec
outs
cmp
jle
(bad)
jmp
outs
inc
xor
cmp
fisubr
push
mov
fsubr
fmul
test
outs
inc
sub
cmp
adc
mov
fcomp
dec
outs
cmp
push
(bad)
jmp
outs
inc
cmps
stos
fsub
dec
fadd
outs
cmp
(bad)
push
mov
fadd
dec
outs
cmp
jno
(bad)
push
mov
fdivr
outs
cmp
sbb
push
mov
fmul
outs
cmp
push
push
stos
repnz
fcom
fadd
stos
div
mov
fmul
dec
outs
cmp
mov
push
mov
fdivr
add
jmp
call
(bad)
cmp
fisub
mov
(bad)
(bad)
in
jmp
xchg
mov
lods
repz
lahf
popa
jns
or
out
cld
popa
or
aad
jg
repz
sar
fimul
or
dec
or
push
in
movs
dec
lea
dec
jns
shr
add
test
mov
mov
dec
cmp
dec
in
sti
mov
dec
sti
dec
test
push
mov
dec
mov
pusha
fsubrp
inc
call
dec
lock
add
add
aaa
call
(bad)
mov
add
push
aaa
call
(bad)
mov
call
add
add
out
(bad)
(bad)
call
sub
mov
lock
add
add
mov
add
xchg
in
pusha
jge
pop
test
(bad)
js
les
sti
cmp
pop
dec
xchg
push
int3
call
pop
addr16
dec
(bad)
(bad)
fcom
cmp
cmp
mul
sub
in
lods
push
movs
in
(bad)
rcl
or
cli
in
mov
jns
rcr
fadd
add
push
ret
rcl
(bad)
fsubr
xchg
dec
inc
lahf
add
pusha
jge
pop
sbb
dec
(bad)
js
les
pop
xchg
aad
scas
in
lods
push
movs
in
lods
aad
popf
in
popa
in
pusha
jge
pop
sbb
push
movs
call
pop
addr16
jns
(bad)
fcom
cmp
cmp
test
(bad)
jmp
lahf
mov
(bad)
ror
lods
push
enter
mov
dec
in
cwde
jns
sar
(bad)
aam
call
jns
sar
(bad)
aam
call
scas
in
gs
scas
in
jp
xchg
push
ret
lods
mov
dec
cmp
push
ror
(bad)
fsubr
xchg
dec
inc
lahf
xor
js
(bad)
in
pusha
cmp
pop
(bad)
sbb
and
ret
dec
cmp
sahf
dec
lea
sti
push
test
(bad)
dec
dec
cmp
add
mov
sbb
lods
lods
aaa
mov
popf
lahf
jecxz
in
push
sbb
in
mul
pusha
cwde
mov
sbb
dec
(bad)
js
les
mov
xchg
jmp
dec
inc
and
or
add
(bad)
mov
(bad)
(bad)
mov
pop
jae
xor
mov
(bad)
(bad)
mov
xchg
fdivr
outs
cmp
pop
xor
cmp
(bad)
mov
outs
in
mov
div
in
add
mov
adc
neg
push
(bad)
push
int3
fdivr
outs
cmp
add
call
xor
cmp
(bad)
mov
in
pusha
lahf
sbb
add
(bad)
mov
(bad)
(bad)
mov
pop
inc
lahf
ja
(bad)
js
(bad)
in
pusha
or
sbb
out
(bad)
mov
lods
mov
pusha
ficomp
int3
in
pusha
sbb
dec
dec
inc
lahf
dec
jns
xor
mov
bnd
xor
mov
rcr
outs
call
in
sbb
in
pusha
jns
fmul
shl
mov
sti
or
mov
jecxz
lahf
test
(bad)
js
les
mov
xchg
jmp
xchg
dec
mov
(bad)
dec
dec
sbb
add
div
(bad)
(bad)
dec
fcomp
cmp
stos
dec
inc
scas
jnp
addr16
and
(bad)
(bad)
jmp
stos
xchg
inc
and
ss
inc
sti
ficomp
stos
inc
neg
add
mov
adc
mov
lods
or
mov
dec
idiv
cmc
lods
and
dec
jmp
in
adc
mul
sahf
mov
les
mov
xchg
jmp
fcomp
cmp
stos
dec
cmp
and
jecxz
add
dec
jg
mov
inc
and
(bad)
in
pusha
lahf
ins
outs
js
neg
test
call
cmp
call
xchg
dec
inc
xchg
dec
cmps
idiv
(bad)
dec
mov
(bad)
mov
push
in
pusha
fimul
jmp
adc
test
dec
(bad)
js
les
mov
xchg
jmp
dec
xchg
dec
mov
(bad)
dec
dec
sbb
add
idiv
test
dec
(bad)
mov
fcomp
cmp
stos
dec
inc
scas
jnp
addr16
and
(bad)
(bad)
jmp
stos
xchg
dec
and
popf
lods
cmp
in
pusha
fdivp
push
dec
add
outs
cmp
stos
inc
test
add
and
add
add
pop
outs
cmp
stos
dec
inc
lods
jnp
addr16
and
(bad)
(bad)
jmp
stos
xchg
dec
and
xor
inc
dec
scas
add
mov
popf
xchg
or
(bad)
jecxz
add
inc
inc
sti
jp
cli
dec
inc
popf
and
xor
inc
in
add
lods
sbb
inc
lods
or
jp
shl
dec
stos
(bad)
(bad)
mov
push
xchg
xchg
lahf
xor
sti
inc
sahf
dec
in
scas
xchg
test
pusha
call
sti
xchg
xor
sti
fwait
add
add
dec
xchg
push
xchg
cwde
iret
add
pop
outs
cmp
stos
dec
inc
lods
jnp
addr16
and
(bad)
(bad)
jmp
stos
xchg
dec
and
iret
xchg
(bad)
(bad)
jmp
iret
stos
inc
sar
add
mov
pusha
in
dec
xchg
or
add
add
sti
aad
lods
call
xchg
lahf
mov
in
call
(bad)
(bad)
mov
ins
fmul
xor
in
in
(bad)
aad
popf
call
inc
test
and
mov
dec
call
(bad)
mov
cwde
xchg
or
add
add
in
in
jecxz
rcl
jp
cmc
lods
and
dec
jmp
in
adc
nop
mov
push
sahf
mov
les
mov
xchg
jmp
xchg
dec
mov
(bad)
dec
dec
sbb
add
neg
(bad)
dec
fcomp
cmp
stos
dec
inc
lods
jnp
addr16
and
(bad)
(bad)
jmp
stos
xchg
inc
and
ss
inc
sti
ficomp
stos
inc
add
add
mov
test
inc
lods
in
out
fmul
mov
out
lods
rcr
iret
stos
inc
in
jno
add
out
xchg
dec
call
(bad)
mov
sbb
rcl
sti
dec
idiv
cmc
lods
and
dec
jmp
in
adc
imul
(bad)
push
sahf
mov
cmp
(bad)
lods
mul
jnp
addr16
fiadd
cmp
jecxz
fisub
lods
adc
add
call
dec
xchg
test
jae
cmp
mov
sub
(bad)
mov
add
add
add
call
cmp
int3
inc
(bad)
cmp
jecxz
fisub
fidivr
mov
mov
ret
fmul
ins
js
mov
sub
(bad)
mov
in
(bad)
lods
cmp
int3
dec
(bad)
js
les
(bad)
dec
sti
dec
lea
add
pop
in
popf
xchg
or
(bad)
dec
add
repz
add
outs
inc
fisubr
mov
or
fcom
mov
jmp
lods
cmp
and
cmp
or
mov
or
movs
test
call
(bad)
jmp
and
add
add
fidiv
jmp
sar
lods
sbb
inc
and
call
mul
test
call
(bad)
call
call
call
jmp
mov
fidiv
(bad)
mov
sub
(bad)
mov
in
out
cmp
lahf
pop
aaa
inc
sti
(bad)
dec
add
inc
xchg
xchg
lods
sar
cwde
iret
jle
add
dec
add
test
sar
dec
mov
call
add
add
add
add
add
cmp
(bad)
mov
pop
add
add
dec
inc
inc
and
iret
adc
add
dec
cmp
or
add
add
(bad)
dec
sbb
pop
(bad)
mov
sti
add
adc
in
and
push
xor
mov
ret
jmp
call
stos
stos
imul
jne
jmp
fcomp
cmp
dec
lods
add
inc
call
fcomp
outs
inc
fisubr
add
inc
xor
sbb
fcomp
fsubr
in
sti
test
lods
in
pusha
ficomp
in
sbb
dec
(bad)
js
les
dec
mov
test
iret
icebp
add
rcr
add
cwde
iret
out
add
rcr
add
cwde
iret
pop
scas
add
dec
dec
popf
dec
cmp
cmp
fnstenv
mov
mov
cwde
adc
or
call
leave
int3
outs
push
dec
and
push
mov
dec
cwde
adc
dec
or
call
leave
int3
outs
push
dec
and
rol
add
cwde
adc
jp
adc
jp
movs
call
leave
int3
outs
push
dec
and
sub
add
cwde
adc
jecxz
adc
jecxz
movs
call
leave
int3
outs
push
dec
lahf
jp
inc
and
jp
add
dec
(bad)
(bad)
push
jno
call
adc
(bad)
or
call
leave
int3
outs
push
dec
and
movs
jecxz
add
adc
mov
in
pop
and
int3
outs
push
dec
and
fwait
jecxz
add
adc
ss
call
leave
int3
outs
push
dec
and
loopne
add
cwde
adc
mov
or
call
leave
int3
outs
push
dec
lahf
jp
inc
and
ds
add
sti
push
jno
call
adc
sti
or
call
leave
int3
outs
push
dec
and
push
jecxz
add
adc
test
and
int3
outs
push
dec
and
pop
jecxz
add
adc
sbb
and
int3
outs
push
dec
and
mov
adc
repnz
adc
repnz
call
leave
int3
outs
push
dec
lahf
jp
inc
and
push
jp
add
popf
push
jno
call
adc
popf
or
call
leave
int3
outs
push
dec
and
pop
jp
add
adc
jg
movs
call
leave
int3
outs
push
dec
and
out
add
cwde
adc
sub
or
call
leave
int3
outs
push
dec
and
pop
jp
add
adc
cwde
or
call
leave
int3
outs
push
dec
lahf
jp
inc
and
(bad)
add
dec
bound
cwde
adc
lods
cwde
adc
lods
or
call
leave
int3
outs
push
dec
and
cmps
jp
add
adc
hlt
or
call
leave
int3
outs
push
dec
and
sti
jp
add
adc
popa
or
call
leave
int3
outs
push
dec
and
mov
adc
pop
cwde
adc
pop
or
call
leave
int3
outs
push
dec
lahf
jp
inc
and
sahf
dec
add
dec
bound
rcr
mov
sub
and
int3
outs
push
dec
and
jbe
add
cwde
adc
sbb
call
leave
int3
outs
push
dec
and
pop
dec
add
cwde
adc
xchg
cwde
adc
xchg
or
call
leave
int3
outs
push
dec
and
xchg
dec
add
cwde
adc
adc
movs
call
leave
int3
outs
push
dec
lahf
jp
inc
and
mov
add
dec
bound
rcr
mov
sub
and
int3
outs
push
dec
and
test
add
adc
out
movs
call
leave
int3
outs
push
dec
and
test
add
adc
fisttp
and
int3
outs
push
dec
and
aaa
add
add
adc
addr16
call
leave
int3
outs
push
dec
lahf
jp
inc
and
mov
bound
push
jno
call
adc
xor
and
int3
outs
push
dec
and
cwde
adc
ins
cwde
adc
ins
or
call
leave
int3
outs
push
dec
and
cwde
adc
mov
movs
call
leave
int3
outs
push
dec
and
cwde
adc
mov
adc
mov
movs
call
leave
int3
outs
push
dec
lahf
jp
inc
and
jecxz
jecxz
or
push
fstp
jmp
aaa
jecxz
lods
push
add
jmp
sub
stos
jp
dec
push
repz
stos
std
push
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
cwde
adc
icebp
cwde
adc
icebp
or
call
leave
sahf
outs
(bad)
popa
dec
and
cwde
adc
pushf
cwde
adc
pushf
or
call
leave
sahf
outs
(bad)
popa
dec
and
cwde
adc
mov
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
inc
(bad)
(bad)
dec
neg
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
or
(bad)
call
adc
repz
call
leave
sahf
outs
(bad)
popa
dec
and
retf
(bad)
(bad)
call
adc
jmp
and
sahf
outs
(bad)
popa
dec
and
popf
(bad)
(bad)
call
adc
lahf
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
mov
stos
les
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
xor
adc
arpl
test
and
sahf
outs
(bad)
popa
dec
and
add
adc
gs
adc
gs
call
leave
sahf
outs
(bad)
popa
dec
and
mov
adc
jle
adc
jle
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
mov
(bad)
dec
lea
and
test
or
call
leave
sahf
outs
(bad)
popa
dec
and
out
test
call
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
and
cwde
test
call
adc
test
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
gs
call
adc
movs
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
div
mov
and
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
aas
mov
call
adc
ror
call
leave
sahf
outs
(bad)
popa
dec
and
jmp
adc
inc
cwde
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
and
in
(bad)
call
adc
jnp
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
aad
(bad)
dec
mov
mov
adc
mov
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
hlt
mov
call
adc
ror
sub
and
sahf
outs
(bad)
popa
dec
and
(bad)
jmp
call
adc
fisttp
call
leave
sahf
outs
(bad)
popa
dec
and
sbb
(bad)
call
adc
ret
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
cmp
(bad)
dec
jmp
and
call
and
or
call
leave
sahf
outs
(bad)
popa
jmp
int
inc
cwde
adc
mov
adc
mov
test
and
sahf
outs
(bad)
popa
jmp
int
addr16
adc
test
test
and
sahf
outs
(bad)
popa
jmp
int
(bad)
dec
sahf
lahf
ins
cwde
adc
call
dec
call
leave
dec
outs
jb
dec
lahf
jp
pusha
and
jp
pusha
pop
repz
add
dec
stos
nop
push
and
test
or
call
leave
sahf
outs
(bad)
popa
dec
and
mov
(bad)
call
adc
std
or
call
leave
sahf
outs
(bad)
popa
dec
and
mov
adc
icebp
cwde
adc
icebp
or
call
leave
sahf
outs
(bad)
popa
dec
and
ja
(bad)
call
adc
pushf
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
mov
(bad)
dec
mov
mov
adc
mov
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
stos
ret
cwde
adc
neg
test
and
sahf
outs
(bad)
popa
dec
and
dec
ret
cwde
adc
repz
adc
repz
call
leave
sahf
outs
(bad)
popa
dec
and
xor
(bad)
call
adc
jmp
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
mov
stos
lahf
push
and
test
or
call
leave
sahf
outs
(bad)
popa
dec
and
retf
call
adc
les
call
leave
sahf
outs
(bad)
popa
dec
and
loope
(bad)
call
adc
arpl
call
leave
sahf
outs
(bad)
popa
dec
and
data16
call
adc
gs
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
pop
(bad)
dec
jle
and
mov
adc
jle
test
and
sahf
outs
(bad)
popa
dec
and
stos
(bad)
call
adc
lea
call
leave
sahf
outs
(bad)
popa
dec
and
dec
(bad)
call
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
and
sub
adc
test
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
repz
dec
stos
movs
push
and
test
or
call
leave
sahf
outs
(bad)
popa
dec
and
dec
sar
cwde
adc
mov
adc
mov
test
and
sahf
outs
(bad)
popa
dec
and
aas
sar
cwde
adc
rcr
test
and
sahf
outs
(bad)
popa
dec
and
jmp
adc
inc
cwde
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
jne
(bad)
dec
jnp
and
rcr
bound
test
and
sahf
outs
(bad)
popa
dec
and
mov
(bad)
call
adc
mov
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
lods
sar
cwde
adc
rcr
call
leave
sahf
outs
(bad)
popa
dec
and
jle
(bad)
call
adc
fisttp
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
out
mov
ret
ret
cwde
adc
cwde
adc
ret
call
leave
sahf
outs
(bad)
popa
dec
and
mov
adc
jmp
adc
jmp
test
and
sahf
outs
(bad)
popa
dec
and
xchg
mov
bound
or
call
leave
sahf
outs
(bad)
popa
dec
and
cs
bound
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
push
mov
push
call
dec
cwde
iret
add
(bad)
(bad)
in
mul
pusha
cwde
leave
dec
outs
jb
dec
repz
dec
stos
push
push
and
mov
adc
push
or
call
leave
sahf
outs
(bad)
popa
dec
and
inc
jnp
call
adc
nop
or
call
leave
sahf
outs
(bad)
popa
dec
and
cmc
jnp
call
adc
std
or
call
leave
sahf
outs
(bad)
popa
dec
and
je
(bad)
call
adc
icebp
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
jns
(bad)
dec
pushf
push
and
cwde
adc
pushf
or
call
leave
sahf
outs
(bad)
popa
dec
and
push
jnp
call
adc
mov
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
loop
(bad)
call
adc
test
sub
and
sahf
outs
(bad)
popa
dec
and
fnstcw
call
adc
repz
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
ret
dec
jmp
adc
cwde
adc
jmp
and
sahf
outs
(bad)
popa
dec
and
enter
cwde
adc
lahf
cwde
adc
lahf
or
call
leave
sahf
outs
(bad)
popa
dec
and
es
(bad)
call
adc
les
call
leave
sahf
outs
(bad)
popa
dec
and
clc
inc
(bad)
call
adc
arpl
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
cmp
stos
gs
and
mov
adc
gs
call
leave
sahf
outs
(bad)
popa
dec
and
cmp
cwde
adc
jle
adc
jle
test
and
sahf
outs
(bad)
popa
dec
and
dec
inc
(bad)
call
adc
lea
call
leave
sahf
outs
(bad)
popa
dec
and
jp
(bad)
call
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
das
sar
dec
test
mov
adc
test
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
add
(bad)
call
adc
movs
or
call
leave
sahf
outs
(bad)
popa
dec
and
mov
adc
mov
adc
mov
test
and
sahf
outs
(bad)
popa
dec
and
scas
sar
call
adc
ror
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
or
(bad)
dec
inc
push
and
cwde
adc
inc
cwde
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
and
and
(bad)
call
adc
jnp
test
and
sahf
outs
(bad)
popa
dec
and
(bad)
sar
call
adc
mov
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
nop
mov
call
adc
ror
hlt
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
loope
(bad)
dec
fstp
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
mov
(bad)
call
adc
ret
call
leave
sahf
outs
(bad)
popa
dec
and
in
mov
call
adc
jmp
test
and
sahf
outs
(bad)
popa
dec
and
(bad)
mov
call
adc
mov
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
dec
mov
inc
push
and
call
adc
test
cwde
iret
cmps
ret
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
jmp
int
and
mov
(bad)
dec
xlat
push
and
call
adc
xlat
or
call
leave
sahf
outs
(bad)
popa
dec
and
cmc
movs
(bad)
call
adc
push
or
call
leave
sahf
outs
(bad)
popa
dec
and
je
(bad)
call
adc
nop
or
call
leave
sahf
outs
(bad)
popa
dec
and
(bad)
movs
(bad)
call
adc
std
or
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
push
movs
(bad)
dec
icebp
push
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
loop
(bad)
call
adc
pushf
or
call
leave
sahf
outs
(bad)
popa
dec
and
fldenv
bound
or
call
leave
sahf
outs
(bad)
popa
dec
and
jmp
(bad)
neg
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
mov
repz
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
es
(bad)
jmp
call
leave
sahf
outs
(bad)
popa
dec
and
clc
test
bound
or
call
leave
sahf
outs
(bad)
popa
dec
and
bound
(bad)
les
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
sub
arpl
and
mov
adc
arpl
call
leave
sahf
outs
(bad)
popa
dec
and
dec
test
bound
adc
gs
call
leave
sahf
outs
(bad)
popa
dec
and
jp
(bad)
call
adc
jle
test
and
sahf
outs
(bad)
popa
dec
and
xlat
inc
(bad)
call
adc
lea
call
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
sbb
dec
inc
push
and
rcr
bound
test
and
sahf
outs
(bad)
popa
dec
and
adc
call
adc
test
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
and
ds
(bad)
call
adc
movs
or
call
leave
sahf
outs
(bad)
popa
dec
and
and
call
adc
mov
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
xor
dec
rcr
and
call
and
or
call
leave
sahf
outs
(bad)
popa
dec
and
mov
inc
cwde
adc
inc
or
call
leave
sahf
outs
(bad)
popa
dec
and
nop
(bad)
(bad)
call
adc
jnp
test
and
sahf
outs
(bad)
popa
dec
and
sahf
(bad)
(bad)
call
adc
mov
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
data16
(bad)
dec
rcr
rcr
adc
ror
sub
and
sahf
outs
(bad)
popa
dec
and
in
(bad)
(bad)
call
adc
fisttp
call
leave
sahf
outs
(bad)
popa
dec
and
(bad)
(bad)
(bad)
call
adc
ret
call
leave
sahf
outs
(bad)
popa
dec
and
in
(bad)
(bad)
call
adc
jmp
test
and
sahf
outs
(bad)
popa
dec
lahf
jp
inc
and
sub
adc
mov
adc
mov
test
(bad)
(bad)
in
int
inc
cwde
leave
sahf
outs
(bad)
popa
jmp
int
iret
out
ret
dec
sahf
repz
movs
(bad)
dec
sti
dec
in
popf
cwde
adc
cwde
adc
or
call
leave
sahf
outs
(bad)
popa
dec
and
and
add
cwde
adc
dec
cwde
adc
dec
or
call
leave
sahf
outs
(bad)
popa
dec
and
and
add
add
adc
jp
sahf
call
leave
sahf
outs
(bad)
popa
dec
and
and
add
cwde
adc
jecxz
adc
jecxz
dec
cwde
iret
add
add
in
mul
pusha
cwde
leave
dec
outs
jb
dec
xrelease
add
dec
dec
sti
dec
in
popf
cwde
adc
cwde
adc
or
call
leave
sahf
outs
(bad)
popa
dec
and
jae
adc
dec
cwde
adc
dec
or
call
leave
sahf
outs
(bad)
popa
dec
and
sub
adc
jp
add
in
popf
cwde
adc
cwde
adc
or
call
leave
sahf
outs
(bad)
popa
dec
and
fstp
adc
dec
repz
(bad)
(bad)
dec
sti
dec
dec
popf
cwde
adc
cwde
adc
repz
(bad)
(bad)
in
pusha
jge
sbb
pop
mov
jp
hlt
push
jp
mov
jp
mov
jp
inc
outs
jp
xor
mov
mov
dec
jp
test
cmp
jp
xchg
dec
jp
dec
mov
jp
mul
jp
xchg
push
jp
cmp
jp
mov
push
jp
cmp
jp
out
sbb
cmp
jp
sbb
sbb
addr16
jp
mov
jp
dec
(bad)
js
les
and
mov
cmp
jl
out
mov
xchg
dec
rcr
in
aam
cmp
dec
jae
push
(bad)
mov
mov
call
mov
cmp
pop
in
sbb
jp
xor
out
mov
out
mov
iret
sbb
add
push
int3
cwde
iret
aaa
add
add
test
add
xchg
in
sti
dec
mov
cmp
(bad)
mov
fnstcw
(bad)
in
lods
cwde
and
push
stos
(bad)
in
xchg
jmp
cwde
iret
sbb
add
ror
jmp
inc
sti
pop
add
add
pop
pop
div
sbb
call
add
push
(bad)
(bad)
mov
aaa
add
das
add
lods
pusha
sti
dec
fisub
pop
call
add
stos
daa
(bad)
jmp
(bad)
in
lods
(bad)
in
popf
fmul
in
xchg
jmp
(bad)
in
scas
stos
cmp
in
sti
inc
xchg
mov
(bad)
dec
mov
inc
aad
xor
sti
dec
mov
cmp
aad
xchg
in
sti
dec
mov
cmp
lds
add
(bad)
in
pusha
lahf
mov
cmp
outs
dec
lods
and
in
popf
stos
(bad)
in
xchg
neg
dec
add
dec
lea
call
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
(bad)
in
xor
sbb
dec
mov
dec
test
aaa
outs
xor
jge
pop
dec
dec
jmp
adc
cvtps2pd
push
int3
dec
(bad)
js
les
sti
outs
dec
(bad)
idiv
inc
(bad)
(bad)
(bad)
in
sub
(bad)
(bad)
in
fcos
in
xor
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
not
xor
mov
dec
dec
mov
test
les
lods
xor
add
sbb
pusha
repz
add
xchg
lods
ret
in
outs
into
jmp
inc
dec
dec
popf
dec
cmp
jns
lods
pusha
(bad)
lods
dec
(bad)
iret
int
paddq
jmp
dec
jns
mov
int
mov
and
test
int
pop
aam
test
push
jns
dec
int
lods
aam
(bad)
in
repnz
cmp
(bad)
aad
jmp
sahf
lahf
inc
cwde
adc
call
inc
cwde
adc
test
mov
adc
mov
mov
adc
jmp
adc
jmp
pop
dec
dec
popf
dec
cmp
lahf
cwde
jns
iret
int
scas
aam
in
lods
fsubp
(bad)
cmp
aad
jmp
(bad)
in
pusha
jge
test
adc
or
lahf
test
les
pusha
stos
stos
stos
stos
stos
stos
stos
stos
dec
js
outs
push
add
sbb
test
(bad)
sub
dec
(bad)
jns
sbb
popf
lods
push
dec
cwde
xor
sub
lods
sbb
test
les
mov
xchg
jmp
outs
cmp
add
(bad)
in
sti
push
cmp
add
cmp
(bad)
mov
lods
xchg
call
stos
test
add
adc
push
int3
dec
(bad)
js
les
mov
xchg
jmp
cmp
fimul
scas
cmp
cmp
dec
add
cmp
in
inc
and
popf
cwde
iret
jge
add
dec
inc
les
mul
stos
jmp
(bad)
mov
lods
mov
outs
cmp
stos
(bad)
in
popf
jmp
lods
mov
dec
in
mov
add
add
(bad)
in
(bad)
pusha
cli
(bad)
dec
mov
pop
xchg
test
cmp
cmp
pop
add
add
pop
dec
imul
push
aaa
call
add
in
mov
dec
(bad)
in
sti
dec
dec
lea
jnp
int3
in
pusha
repz
add
add
(bad)
mov
aaa
add
das
add
lods
pusha
sti
xchg
std
lahf
jecxz
mov
call
(bad)
in
std
neg
jmp
in
std
(bad)
in
mov
dec
(bad)
in
sti
dec
and
jmp
retf
xchg
xchg
(bad)
in
xor
(bad)
in
popf
inc
and
xchg
and
cs
mov
scas
xchg
xchg
xchg
xchg
dec
(bad)
in
std
xchg
(bad)
in
popf
dec
dec
lea
jnp
mov
dec
idiv
(bad)
(bad)
mov
push
aaa
call
(bad)
in
std
xchg
(bad)
in
popf
dec
push
aaa
in
sub
neg
(bad)
(bad)
mov
repnz
mov
dec
dec
cmc
xchg
in
std
test
(bad)
(bad)
mov
xor
in
dec
dec
jmp
adc
hlt
aam
push
int3
add
add
outs
jb
sti
or
lods
xlat
cwde
jecxz
addr16
dec
mov
add
outs
jb
sti
or
lods
xlat
mov
repnz
mov
add
les
jmp
in
mov
mov
dec
repz
add
add
sbb
or
sbb
jmp
cli
lods
sbb
jmp
and
and
and
and
jmp
jmp
jmp
jmp
or
add
outs
xor
push
in
xor
in
mov
icebp
sbb
js
les
mov
in
mov
sbb
xchg
dec
cmp
in
out
or
lods
xlat
cwde
in
out
or
jbe
mov
lods
mov
fisttp
repnz
lods
dec
call
dec
neg
inc
call
imul
(bad)
jmp
sti
dec
dec
mul
neg
dec
js
jecxz
or
xchg
jecxz
or
xchg
lea
les
lea
mul
lahf
cmp
sbb
inc
jnp
lods
dec
lods
xchg
dec
in
popf
dec
mov
movs
fs
dec
sti
jecxz
std
dec
js
jecxz
std
dec
cmp
and
jb
(bad)
jmp
sti
lahf
fisttp
popf
dec
mov
dec
push
dec
repz
imul
fs
cmp
dec
sbb
dec
in
mov
icebp
sbb
fcomp
mov
dec
sti
in
call
sbb
fsub
mov
int
inc
push
cmp
mov
pop
xor
push
add
xchg
xchg
xchg
xchg
div
ret
(bad)
jmp
repz
je
popf
dec
inc
xchg
sti
push
jnp
jecxz
inc
inc
in
pop
xchg
std
lods
test
pop
push
lods
pop
xor
mov
push
cwde
lods
pushf
lea
sti
push
mov
pop
or
(bad)
mul
mov
test
(bad)
(bad)
mov
cmp
test
(bad)
push
jge
add
dec
sbb
push
retf
(bad)
in
sti
xchg
cmp
xor
(bad)
jmp
in
mov
inc
sti
retf
mov
(bad)
mov
in
jb
pop
aas
ins
mov
dec
lock
(bad)
mov
ds
(bad)
dec
lods
push
aaa
cwde
iret
stos
(bad)
(bad)
push
add
cmp
(bad)
(bad)
in
dec
popf
fadd
idiv
push
retf
dec
cmp
add
int3
idiv
(bad)
dec
fsubr
not
sbb
and
in
sub
cmp
(bad)
mov
add
popf
and
cmp
add
(bad)
mov
add
mov
dec
add
in
inc
and
add
(bad)
neg
mov
aas
(bad)
(bad)
mov
aaa
cwde
iret
add
inc
popf
push
mov
stos
test
jmp
call
dec
mul
(bad)
(bad)
mov
aaa
call
push
ds
push
stos
cmp
in
std
imul
cmp
xor
cmp
cmp
div
leave
(bad)
jmp
std
in
rcr
jnp
ss
inc
inc
xchg
popf
lods
push
cwde
lods
pushf
lea
inc
retf
mov
(bad)
mov
aaa
call
push
ds
push
stos
cmp
in
std
test
(bad)
(bad)
cmp
in
and
out
(bad)
jmp
jmp
(bad)
(bad)
push
ins
add
add
mov
inc
in
dec
inc
lods
push
cwde
lods
pushf
lea
fadd
inc
retf
mov
(bad)
mov
dec
in
popf
dec
sbb
fadd
not
add
dec
mov
and
pop
aas
ins
mov
retf
(bad)
mov
int
(bad)
push
cwde
dec
(bad)
call
mov
(bad)
inc
stos
test
ss
jge
call
add
jmp
call
add
dec
inc
dec
cmp
add
inc
sti
retf
mov
(bad)
mov
in
dec
aad
aas
ins
mov
inc
iret
(bad)
(bad)
mov
lods
test
inc
adc
or
(bad)
mov
push
add
pusha
neg
test
push
cld
(bad)
(bad)
jmp
(bad)
in
xchg
idiv
inc
stos
test
(bad)
inc
lahf
int
dec
dec
cmp
scas
repnz
in
pop
dec
jb
lods
dec
cmp
popf
in
int
inc
dec
fimul
sub
jnp
dec
lea
jnp
sub
outs
sub
xchg
dec
push
sub
cmp
sti
push
repz
pop
push
jmp
jnp
dec
lea
sub
sub
sub
pop
sti
ds
push
cmp
sti
inc
test
or
sub
pop
or
sub
addr16
sub
lods
mov
dec
out
dec
enter
xchg
dec
push
in
lods
add
js
(bad)
in
pusha
fisubr
jp
pusha
sbb
dec
(bad)
js
les
in
popf
outs
dec
(bad)
mul
(bad)
dec
sti
cwde
loope
stos
test
lahf
popf
inc
cwde
adc
stos
test
(bad)
jmp
pusha
mov
ss
imul
lods
mov
inc
dec
dec
lea
sbb
add
dec
test
jns
shr
ss
jns
inc
iret
imul
movs
in
dec
jmp
mov
bound
js
les
in
popf
outs
dec
(bad)
test
dec
sti
jns
dec
in
(bad)
iret
neg
add
add
jns
aam
call
in
sar
fmulp
neg
shl
popf
or
cmp
iret
imul
jle
cmc
ror
or
(bad)
sbb
add
dec
test
xchg
aam
pop
in
dec
sar
(bad)
sar
iret
imul
inc
or
dec
cmp
test
les
xchg
retf
and
mov
int3
in
pusha
sbb
dec
(bad)
js
les
and
in
scas
(bad)
in
lods
call
xchg
or
add
mov
sti
dec
dec
jmp
rol
lahf
hlt
outs
cmp
stos
test
popf
dec
dec
sti
xchg
lods
sbb
dec
(bad)
fadd
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
not
lods
sbb
dec
dec
lea
call
mov
(bad)
fisubr
imul
lods
(bad)
jmp
dec
(bad)
js
(bad)
fadd
(bad)
in
sti
div
test
(bad)
mov
(bad)
js
(bad)
fadd
(bad)
in
sti
imul
(bad)
(bad)
mov
(bad)
js
les
xchg
(bad)
in
xor
lea
neg
mov
(bad)
in
inc
push
xchg
in
or
lahf
jge
(bad)
fcom
dec
dec
xchg
jmp
jmp
call
bound
dec
add
aad
sti
inc
cmc
aad
popf
shl
in
pusha
lods
pusha
test
cmp
pop
test
lds
(bad)
fsubr
mov
mov
dec
js
in
pusha
aad
popf
cwde
leave
pusha
in
imul
dec
dec
mov
div
(bad)
(bad)
dec
scas
lods
inc
retf
dec
movs
in
ss
jecxz
outs
scas
dec
lods
mov
outs
inc
dec
jns
shr
lea
sbb
add
dec
add
shl
in
pusha
or
pusha
jecxz
popf
jecxz
lods
mov
lods
add
lahf
mov
sti
jae
xor
mov
xchg
(bad)
jmp
and
jg
cmp
cmp
div
sub
lods
call
popf
inc
or
mov
sar
mov
retf
inc
lods
mov
fsubr
jnp
add
dec
sahf
inc
lods
mov
fcomp
jge
inc
ss
sahf
add
inc
mov
dec
call
fsub
outs
loop
stos
and
cwde
xor
jmp
jmp
call
bound
pop
test
les
mov
xchg
jmp
cmp
cmp
xchg
dec
mov
dec
outs
dec
std
and
cmp
jmp
(bad)
out
imul
pop
lods
sub
cs
(bad)
cmp
cmp
cmp
out
div
sub
cmp
in
scas
lods
mov
xchg
call
mov
dec
or
in
neg
movs
cwde
leave
dec
or
outs
dec
cmp
outs
or
stos
in
pusha
lods
mov
pusha
in
neg
movs
cwde
leave
dec
jecxz
jecxz
and
jae
add
lods
sub
lahf
out
in
xor
cmp
(bad)
in
xchg
dec
aaa
dec
(bad)
in
lods
test
(bad)
jmp
jmp
in
adc
pop
out
(bad)
push
int3
dec
(bad)
js
(bad)
fadd
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
test
xchg
sbb
dec
(bad)
js
les
(bad)
in
xor
mov
jecxz
add
push
cmp
out
add
add
add
mov
mov
push
jnp
or
inc
sbb
(bad)
fcom
xchg
xchg
xchg
imul
scas
or
cmp
lods
bound
jecxz
add
mov
cmp
ss
cmp
(bad)
(bad)
fsubr
pusha
dec
mov
cmp
xchg
dec
repz
mov
mov
out
in
pop
push
out
cwde
and
pop
cwde
and
add
add
lods
lods
mov
pusha
lahf
jecxz
pusha
test
add
in
scas
outs
in
stos
cmp
div
(bad)
(bad)
jmp
call
add
add
std
lods
mov
jp
add
push
retf
in
(bad)
push
ss
inc
push
ss
inc
lods
mov
cwde
mov
and
pop
shl
inc
dec
mul
push
add
mov
iret
jb
add
lods
mov
dec
test
or
and
dec
(bad)
sar
push
fsubp
add
mov
add
and
add
or
div
xchg
call
sbb
and
cwde
mov
and
pop
shl
dec
cli
mov
nop
and
jmp
sub
int
dec
in
push
push
ss
dec
cli
(bad)
dec
mov
cwde
add
dec
in
mov
jg
cmp
test
add
lahf
(bad)
push
mov
push
inc
xchg
popf
aad
scas
in
(bad)
shr
dec
xchg
add
add
jns
sar
dec
cli
(bad)
dec
mov
cwde
add
push
sahf
cwde
lock
add
xchg
aaa
cmp
lods
mov
dec
xchg
(bad)
dec
js
dec
mov
dec
cmp
cwde
add
adc
add
sub
sub
int3
dec
dec
mov
shl
dec
cmp
dec
xrelease
mov
mov
dec
mov
mov
dec
xchg
(bad)
dec
js
dec
mov
dec
cmp
cwde
add
int3
dec
add
sub
inc
(bad)
jns
or
sbb
ss
add
rcr
call
in
mov
xchg
lahf
test
test
jmp
hlt
(bad)
in
scas
fsubr
dec
neg
(bad)
jmp
scas
dec
cmp
jp
lea
(bad)
cwde
mov
and
(bad)
shl
dec
mov
idiv
dec
add
in
pop
and
mov
or
les
addr16
pop
popf
jmp
ss
ss
lahf
sbb
retf
inc
jnp
pop
enter
enter
ss
cld
sub
jecxz
add
(bad)
push
dec
ds
and
stos
div
add
(bad)
out
shl
inc
xchg
dec
dec
dec
enter
repnz
cld
mov
mov
adc
add
outs
bts
(bad)
jb
add
out
shl
xchg
inc
dec
dec
dec
enter
repnz
cld
mov
mov
xchg
fadd
fcomp
bts
xchg
sub
add
out
shl
xchg
inc
dec
dec
xchg
(bad)
(bad)
out
shl
push
inc
dec
add
mov
dec
cmp
lods
bound
in
int3
dec
(bad)
js
les
xchg
(bad)
in
scas
dec
fimul
(bad)
dec
shr
or
mov
(bad)
jmp
(bad)
in
retf
test
in
out
in
pusha
stos
stos
stos
stos
stos
neg
sub
mov
bound
add
add
adc
mov
push
in
popf
in
pop
in
pusha
lods
push
retf
cwde
mov
aaa
push
add
push
fimul
lods
push
retf
dec
jnp
ss
mov
dec
inc
(bad)
in
push
dec
push
div
out
inc
lahf
jp
lea
cmp
test
dec
lea
sbb
add
dec
add
shl
dec
pop
mov
pop
or
sbb
popf
dec
mov
popa
sar
xchg
fsubr
dec
test
popf
or
cmp
in
pusha
jge
pop
test
les
mov
xchg
jmp
cmp
cmp
xchg
dec
mov
dec
outs
dec
std
and
cmp
jmp
(bad)
out
test
in
pop
lods
sub
ss
cmp
cmp
out
div
(bad)
jmp
lahf
jne
cmp
mov
pusha
lahf
repnz
imul
mov
in
scas
outs
dec
cmp
dec
dec
(bad)
call
lods
mov
pusha
jecxz
stos
div
sub
lahf
cmp
xchg
outs
cmp
cmp
(bad)
in
lods
dec
sbb
cs
jmp
jmp
in
adc
mov
int3
dec
(bad)
js
les
mov
xchg
jmp
cmp
cmp
dec
in
popf
xchg
fcom
std
and
cmc
and
(bad)
(bad)
(bad)
out
neg
push
add
in
pop
lods
sub
sub
cmp
xchg
jmp
repz
add
dec
dec
lods
push
add
dec
cmp
rol
lods
mov
pusha
outs
mov
lods
sar
(bad)
repnz
cmp
stos
(bad)
in
scas
and
add
call
cmp
rcl
cmp
cwde
push
lods
mov
cmp
call
in
rcl
test
in
xor
cmc
fmul
in
scas
dec
call
iret
mov
jmp
(bad)
in
xor
cmc
fmul
(bad)
in
xchg
dec
push
(bad)
in
scas
(bad)
in
lods
idiv
adc
in
adc
mov
int3
dec
(bad)
js
les
scas
lods
mov
mov
mov
in
fcos
in
xchg
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
neg
test
jmp
lods
mov
mov
in
fcos
in
xor
in
xchg
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
test
(bad)
call
(bad)
in
xor
in
xchg
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
not
sar
lahf
adc
in
fcos
in
xor
in
xchg
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
imul
adc
dec
(bad)
fadd
(bad)
in
xor
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
div
(bad)
jmp
dec
dec
in
jmp
adc
inc
div
aaa
(bad)
mov
pop
idiv
int3
dec
dec
add
jecxz
jae
add
in
inc
dec
imul
push
add
lods
sbb
dec
dec
dec
dec
div
sub
dec
les
fidiv
(bad)
mov
mov
das
sbb
das
cmp
mov
lea
mov
mov
mov
fdivp
int3
in
pusha
test
mov
(bad)
mov
jae
xor
mov
mov
call
repz
(bad)
inc
add
add
add
add
add
dec
(bad)
js
les
mov
xchg
jmp
cmp
dec
dec
popf
cmp
dec
in
sti
xchg
stos
in
call
outs
cmp
stos
xchg
in
pop
imul
add
lods
sbb
cmp
pop
(bad)
call
xchg
out
outs
cmp
stos
outs
cmp
add
inc
cmp
jp
mov
dec
in
mov
add
dec
in
mov
ss
add
dec
add
dec
cmp
dec
jmp
inc
(bad)
dec
cmp
xchg
dec
cmp
xchg
jge
mov
in
adc
xchg
pop
(bad)
push
int3
js
les
jmp
mov
dec
repz
lahf
sti
outs
sub
add
add
sbb
jmp
jmp
jmp
jmp
jmp
jmp
or
add
push
in
cmc
dec
mov
int3
js
les
jmp
cmp
jbe
mov
lods
mov
frstor
(bad)
in
mov
lods
dec
push
lods
push
jmp
out
call
scas
(bad)
(bad)
jmp
sti
dec
js
and
call
xchg
mov
mov
cmp
sti
lahf
ins
jnp
lods
aaa
lods
xchg
sti
dec
dec
lea
dec
dec
sti
dec
js
jecxz
or
psubusb
and
sar
jmp
sti
dec
mov
int3
add
add
js
les
sti
fwait
dec
jne
add
in
pusha
sbb
dec
loop
jecxz
xchg
or
in
jle
int
repnz
add
adc
xchg
cwde
mov
int3
add
add
add
add
add
add
js
les
sti
dec
ror
loop
cmp
cwde
or
in
int
outs
cmp
xchg
and
dec
mov
push
sar
dec
mov
jecxz
push
ret
fsubr
ds
pusha
jge
pop
sbb
add
add
add
add
add
add
dec
(bad)
js
(bad)
fadd
jae
bnd
outs
jl
add
add
dec
xchg
jl
mov
mov
cmp
add
xchg
div
cmp
add
add
jae
add
mov
jmp
call
add
mov
add
jmp
call
mov
cmc
lods
and
cmp
test
(bad)
dec
lea
jg
add
add
icebp
sbb
dec
cmp
dec
sti
dec
dec
in
int
mov
mov
dec
xor
aaa
cmp
test
(bad)
(bad)
in
pusha
dec
dec
lea
jg
add
add
icebp
sbb
dec
(bad)
js
les
sti
xor
mov
mov
js
les
sti
xor
mov
mov
jae
out
mov
jmp
in
popf
(bad)
in
sti
inc
xchg
std
lahf
dec
dec
cmp
dec
add
xchg
and
neg
add
pusha
cwde
mov
dec
xor
xchg
mov
pusha
in
sti
fdivr
inc
lods
xor
add
cmp
test
(bad)
dec
std
imul
lods
(bad)
dec
fcomp
mov
jmp
cwde
pop
dec
aaa
cmp
dec
add
add
dec
add
pop
mov
sbb
add
pusha
call
fmulp
dec
xor
lods
xor
add
cmp
test
(bad)
dec
std
test
(bad)
dec
dec
(bad)
js
les
cmp
cmp
xchg
mov
cmp
xchg
inc
add
fld
stos
pushw
or
call
mov
sbb
xchg
xchg
fwait
dec
add
add
xchg
mov
add
add
call
and
mov
jp
pusha
pop
test
push
push
mov
(bad)
js
les
sti
jns
lods
cmp
xchg
in
inc
sti
in
pop
xchg
dec
cmp
inc
xchg
inc
dec
lods
call
(bad)
aaa
cmp
dec
jp
sub
rol
jp
cmp
add
lods
rol
(bad)
aaa
cmp
dec
(bad)
call
(bad)
sti
aaa
cmp
dec
sti
call
(bad)
lods
aaa
cmp
in
popf
dec
sub
xlat
(bad)
jnp
in
sar
lods
xlat
lods
mov
sti
dec
sub
idiv
in
sar
lods
xlat
sti
mov
sti
dec
sub
repz
in
sar
lods
xlat
(bad)
mov
sti
dec
sub
repz
push
in
sar
lods
xlat
jp
sar
dec
sub
repz
sti
dec
add
add
iret
int3
call
popf
lods
pop
(bad)
call
popf
sti
pop
sti
call
popf
(bad)
pop
lods
call
popf
jp
fstp
test
popf
add
dec
dec
call
call
call
cmp
lods
sti
jecxz
push
dec
cmp
dec
sti
lods
xlat
test
lahf
popa
dec
cmp
dec
sti
lods
xlat
mov
add
lods
fldpi
dec
ss
add
add
dec
dec
call
call
cmp
lods
fst
sti
dec
sti
lods
xlat
mov
repnz
cmp
dec
sti
lods
xlat
lahf
lods
idiv
xchg
dec
cmp
dec
dec
scas
dec
xlat
mov
and
dec
add
mov
aad
(bad)
sti
dec
mov
cs
dec
cmp
sti
movs
mov
dec
cmp
test
cs
movs
mov
mov
lahf
dec
fldcw
jp
rcr
dec
cmp
sti
das
mov
dec
cmp
test
shr
lods
xlat
nop
lods
idiv
shr
das
mov
mov
idiv
add
outs
cmp
stos
cmp
add
in
lods
inc
dec
dec
sti
inc
loop
lods
call
sti
sti
call
sti
(bad)
call
sti
jp
jecxz
pop
jle
mov
pop
retf
lods
and
in
pop
or
mov
movs
(bad)
call
rcr
xchg
sub
lahf
(bad)
and
ret
jg
sti
add
xchg
lahf
lods
dec
ss
jnp
(bad)
jg
mov
xchg
dec
dec
dec
idiv
and
rcr
push
xchg
lahf
xchg
dec
ss
sahf
jg
jp
add
sahf
jg
jecxz
add
call
lahf
mov
mov
in
sbb
dec
(bad)
js
(bad)
fadd
(bad)
in
xor
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
div
mov
jmp
dec
(bad)
js
les
sti
cmp
in
pop
dec
lea
in
jmp
sti
call
cmp
mov
lods
pushf
jnp
mov
add
pop
(bad)
call
lods
fadd
test
add
inc
dec
add
iret
int3
cwde
iret
in
add
inc
cmp
add
fdivr
mul
mov
lods
mov
add
(bad)
pop
add
add
call
call
gs
dec
popf
mov
mov
inc
and
gs
dec
popf
mov
and
je
mov
dec
dec
popf
mov
and
je
mov
dec
dec
popf
mov
and
je
mov
fidiv
movs
and
out
pushf
test
cmp
add
pop
jp
iret
add
add
inc
cmp
add
in
inc
pop
lods
call
dec
mov
and
cwde
dec
clc
add
add
mov
and
das
xor
neg
add
dec
dec
mov
dec
add
(bad)
jmp
call
jg
cmp
dec
movs
mov
mov
mov
inc
and
(bad)
dec
enter
int
cmp
xchg
lods
add
(bad)
call
xchg
mov
sbb
call
movs
push
fcmovnb
iret
sbb
les
add
or
(bad)
shr
and
int
sti
das
cmp
movs
and
sbb
das
cmp
das
mov
jp
movs
jge
inc
call
add
mov
dec
in
jmp
cmp
lods
call
repnz
not
add
mov
pusha
and
mov
dec
(bad)
js
les
add
lods
mov
imul
add
add
sbb
mul
add
add
sbb
dec
(bad)
js
les
sti
pop
fstp
adc
call
pop
(bad)
call
dec
call
cwde
adc
lods
and
pusha
sbb
dec
(bad)
js
les
dec
popf
push
push
dec
popf
call
gs
pusha
xchg
std
and
in
cmp
scas
xchg
les
xchg
xchg
lea
xor
in
sti
xchg
mov
cmp
xchg
mov
(bad)
inc
add
in
pop
xchg
and
jp
add
and
jmp
in
mov
(bad)
(bad)
mov
test
(bad)
mov
(bad)
inc
add
in
pop
neg
add
(bad)
in
sti
mul
cmp
lods
sbb
dec
les
mov
in
scas
das
cmp
push
sub
sti
das
cmp
in
sti
fmul
dec
(bad)
(bad)
jmp
test
inc
add
in
scas
aaa
add
add
not
add
das
cmp
dec
(bad)
cmp
mov
lea
xchg
xchg
xchg
les
add
add
mov
cmp
jmp
stos
jmp
(bad)
jmp
in
imul
xchg
stos
outs
inc
lods
stos
jmp
jmp
or
jmp
sti
mul
(bad)
jmp
not
mov
and
sub
scas
fldcw
inc
xchg
lods
les
movs
gs
push
sub
das
inc
lods
das
xor
jmp
test
jmp
stos
div
test
push
(bad)
sub
inc
add
scas
fdecstp
mov
add
das
inc
xchg
mov
in
adc
rep
(bad)
dec
sbb
pop
int3
dec
(bad)
js
les
and
cmp
movs
jmp
sbb
int3
dec
(bad)
js
les
and
lods
das
cmp
dec
dec
sub
test
add
dec
and
xchg
xlat
cwde
or
add
dec
add
test
(bad)
in
int
mov
jmp
sti
in
xchg
in
pusha
ficomp
int3
xchg
mov
(bad)
in
sbb
js
in
mov
int3
dec
dec
sub
add
push
xchg
in
(bad)
fsub
lahf
jmp
push
xchg
in
popa
jnp
popf
(bad)
jmp
js
call
pusha
sbb
dec
(bad)
js
les
and
test
in
int
in
add
dec
js
in
idiv
(bad)
jmp
jnp
popf
(bad)
call
dec
sti
call
jmp
dec
and
in
mov
xchg
in
pusha
lahf
scas
push
xor
add
or
dec
push
xor
push
inc
cmp
loope
inc
add
push
dec
call
add
and
and
xor
div
test
jmp
and
fisubr
cmp
and
das
xor
idiv
test
dec
(bad)
xchg
push
jmp
popf
xchg
jmp
lods
xchg
dec
les
add
mov
jmp
int3
dec
(bad)
js
les
das
mov
xor
dec
(bad)
js
les
add
mov
dec
dec
sti
dec
dec
popf
jnp
dec
cmp
repnz
cwde
or
cmp
xor
dec
(bad)
js
les
and
sti
inc
dec
dec
call
mov
inc
dec
sti
call
add
mov
inc
dec
lods
call
mov
inc
dec
(bad)
call
inc
das
fiadd
dec
fstp
sbb
sti
jae
out
mov
(bad)
in
pusha
aad
sub
mov
sti
ficomp
adc
xchg
jmp
(bad)
js
lahf
ins
dec
cmp
dec
add
pop
mov
sbb
add
pusha
call
fmulp
dec
xor
lods
and
adc
xor
xor
aaa
cmp
test
(bad)
call
xor
div
dec
(bad)
js
les
xchg
mul
(bad)
jmp
pop
scas
mov
mov
and
les
mov
(bad)
mov
cwde
iret
jo
add
dec
inc
sbb
jns
mov
pusha
cwde
iret
scas
dec
add
stos
neg
and
sub
jns
mov
mov
shr
sub
jns
mov
mov
and
sub
jns
mov
mov
add
sub
scas
jae
jns
mov
test
(bad)
mov
aad
sub
div
and
sub
(bad)
and
dec
mov
and
call
out
dec
mov
dec
les
fmul
call
inc
cmp
dec
lods
add
fld
lahf
aad
xchg
mov
mov
stos
test
(bad)
mov
push
xchg
jmp
pusha
call
push
int3
call
(bad)
mov
(bad)
in
jmp
cmc
xchg
jmp
inc
scas
mov
mov
(bad)
mov
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
(bad)
in
jmp
cmc
lahf
jp
pusha
jge
pop
test
les
sti
dec
in
inc
push
call
jp
popf
lods
shl
scas
jl
pop
mov
pop
mov
mov
mov
dec
dec
dec
dec
aaa
add
add
sub
int3
dec
(bad)
js
les
sti
outs
dec
(bad)
mul
(bad)
(bad)
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
inc
or
dec
mov
test
les
and
mov
cmp
jl
mov
mov
mov
in
(bad)
in
inc
mov
push
in
xor
xchg
dec
dec
and
sti
xchg
mov
mov
cmp
pop
in
sbb
jp
xor
mov
mov
mov
mov
iret
loope
add
push
push
cwde
iret
adc
add
push
aaa
in
dec
aad
xor
repnz
cmp
dec
add
mov
in
popf
dec
dec
xchg
xchg
push
call
repz
add
sar
and
int
jnp
lods
mov
cmp
add
pop
xchg
div
xchg
(bad)
dec
push
test
add
add
stos
not
(bad)
(bad)
mov
aaa
add
das
add
lods
pusha
sti
dec
mov
push
test
xchg
(bad)
in
lods
(bad)
in
popf
dec
and
(bad)
aad
xchg
in
(bad)
dec
dec
lahf
ss
in
xchg
(bad)
in
scas
fdivr
xchg
dec
(bad)
in
xor
adc
xchg
test
push
lahf
popa
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
inc
outs
xor
jge
pop
dec
dec
jmp
adc
stos
xchg
(bad)
push
int3
dec
(bad)
js
les
sti
outs
dec
(bad)
imul
in
xor
(bad)
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
stos
div
adc
mov
mov
dec
(bad)
js
les
and
popf
dec
dec
in
sti
xchg
mov
dec
xchg
jmp
pusha
or
add
aaa
in
hlt
div
cmp
push
add
aaa
dec
sbb
scas
outs
dec
jmp
(bad)
in
mov
mov
mov
inc
and
test
(bad)
mov
dec
mov
and
mov
pushf
outs
cmp
(bad)
or
mov
cmp
in
int3
fsubr
mov
jmp
mov
cmp
lods
mov
pop
cmp
jmp
cmp
push
add
push
dec
cmps
repz
add
add
call
aaa
cld
sti
push
mov
ds
test
(bad)
inc
(bad)
push
add
xchg
xchg
xchg
xchg
div
sub
shl
mov
mov
pushf
ss
repnz
loope
mov
lods
xlat
dec
in
pop
neg
(bad)
inc
(bad)
push
add
xchg
xchg
xchg
xchg
neg
xor
jmp
dec
lahf
pop
stos
div
or
add
jecxz
cmp
(bad)
dec
call
lods
(bad)
in
popf
(bad)
in
sti
not
lods
xchg
mov
fcomip
mov
add
das
inc
(bad)
inc
jmp
cmp
test
(bad)
push
popf
add
add
mov
sub
(bad)
dec
(bad)
in
sti
idiv
int3
dec
(bad)
js
les
not
mov
add
mov
cmp
dec
cmp
and
icebp
(bad)
inc
inc
call
in
lods
in
mov
add
push
push
in
sub
xchg
inc
(bad)
dec
dec
dec
dec
aaa
add
jmp
lods
xchg
push
loope
add
cmp
dec
mov
mov
and
mov
mov
mov
mov
jp
cmc
ret
pop
icebp
(bad)
call
data16
(bad)
dec
ret
mov
out
dec
dec
lods
jnp
inc
dec
dec
in
pop
idiv
(bad)
(bad)
in
inc
xchg
neg
dec
dec
dec
aaa
add
jmp
sub
inc
faddp
fstp
add
add
in
sti
test
(bad)
jmp
sti
test
add
mov
data16
add
inc
cmp
mov
add
mul
cmp
cmp
scas
outs
and
icebp
(bad)
call
ss
(bad)
mov
(bad)
(bad)
inc
and
iret
cs
add
not
outs
fyl2x
(bad)
call
iret
stos
jp
add
sub
icebp
(bad)
inc
(bad)
in
pusha
xchg
mov
(bad)
call
cmp
add
(bad)
jns
sub
(bad)
dec
pusha
cwde
and
repnz
add
(bad)
in
pusha
or
sbb
fyl2x
(bad)
dec
jecxz
lods
pop
or
stos
(bad)
sar
ror
lods
cs
cmp
loope
stos
test
(bad)
(bad)
mov
dec
outs
(bad)
icebp
(bad)
dec
jecxz
lods
in
pusha
ficomp
xchg
cwde
lock
and
icebp
(bad)
(bad)
cmp
test
add
call
add
and
icebp
(bad)
call
outs
and
icebp
(bad)
jmp
add
call
add
pusha
stos
stos
fsub
fmul
outs
fdivp
(bad)
jmp
stos
inc
xor
(bad)
inc
and
icebp
(bad)
(bad)
inc
dec
lea
inc
cwde
iret
push
mov
and
dec
outs
cmp
icebp
(bad)
dec
(bad)
(bad)
mov
(bad)
mov
cmps
mov
icebp
(bad)
dec
out
icebp
(bad)
jmp
dec
aad
mov
(bad)
inc
call
add
inc
cwde
iret
adc
add
fadd
outs
and
fmul
cmp
icebp
(bad)
dec
push
cmp
inc
and
iret
cmc
jecxz
add
dec
daa
sbb
add
jmp
out
icebp
(bad)
(bad)
jmp
or
lods
add
add
jp
push
cwde
or
in
test
lods
and
icebp
(bad)
(bad)
jp
add
icebp
(bad)
inc
dec
jp
ud0
fdivp
(bad)
push
jmp
and
icebp
(bad)
call
add
(bad)
jp
sub
icebp
(bad)
inc
call
and
icebp
(bad)
push
sub
add
mov
icebp
(bad)
call
add
and
and
icebp
(bad)
dec
lods
aad
cmp
(bad)
call
push
sub
add
dec
sub
or
(bad)
cwde
dec
xchg
cwde
or
add
test
(bad)
or
add
(bad)
icebp
(bad)
inc
dec
pop
cwde
and
add
add
call
dec
lods
cwde
lock
add
lahf
ss
add
dec
mov
(bad)
jmp
inc
or
(bad)
icebp
(bad)
jmp
shl
(bad)
call
dec
lods
scas
aad
or
(bad)
jns
loop
fstp
in
lods
jmp
out
icebp
(bad)
call
jg
jmp
cmp
(bad)
call
lods
fdivrp
and
icebp
(bad)
call
(bad)
call
add
ds
dec
fisubr
shl
(bad)
dec
fadd
outs
and
icebp
(bad)
jmp
icebp
(bad)
jmp
mov
(bad)
mov
fdivr
add
xor
(bad)
dec
or
int3
cwde
daa
aam
add
dec
and
and
icebp
(bad)
call
cmp
push
fnstcw
add
dec
ret
and
add
aad
lods
cwde
lock
jp
add
icebp
(bad)
dec
cmp
(bad)
jmp
inc
or
(bad)
icebp
(bad)
jmp
shl
(bad)
call
dec
lods
scas
inc
dec
cmp
and
icebp
(bad)
(bad)
jp
or
loop
lods
fstp
in
xchg
lods
and
icebp
(bad)
(bad)
jp
jg
add
mov
(bad)
(bad)
jp
and
add
mov
(bad)
inc
dec
fisubr
shl
(bad)
dec
fadd
outs
and
icebp
(bad)
jmp
icebp
(bad)
jmp
mov
(bad)
mov
push
dec
add
dec
and
icebp
(bad)
dec
or
int3
cwde
daa
jne
add
dec
and
icebp
(bad)
dec
(bad)
icebp
(bad)
call
cmp
push
fimul
add
dec
lods
cwde
lock
dec
add
dec
outs
cmp
(bad)
jmp
inc
or
(bad)
icebp
(bad)
(bad)
fdivr
and
sar
in
dec
lods
scas
mov
cmp
(bad)
call
cmp
(bad)
jmp
call
in
sub
xchg
mov
(bad)
dec
mov
(bad)
inc
xchg
sub
add
ds
jae
jg
add
lea
outs
rol
(bad)
dec
jbe
sahf
push
mov
dec
jae
mov
add
adc
push
xchg
cwde
iret
loopne
add
fadd
outs
and
icebp
(bad)
jmp
stos
outs
iret
inc
lea
and
dec
(bad)
(bad)
mov
(bad)
mov
jecxz
xor
(bad)
call
xchg
jmp
cmp
(bad)
mov
(bad)
call
xchg
jmp
icebp
(bad)
dec
(bad)
icebp
(bad)
inc
call
cmp
call
outs
xor
(bad)
jmp
(bad)
in
lods
inc
(bad)
icebp
(bad)
(bad)
(bad)
out
inc
and
or
icebp
(bad)
jmp
inc
xchg
or
popf
inc
xchg
fdivp
(bad)
jmp
inc
in
cmp
(bad)
inc
call
fdivp
(bad)
(bad)
in
scas
mul
test
add
not
mov
inc
add
icebp
(bad)
push
icebp
mov
(bad)
mov
pop
icebp
(bad)
dec
inc
cmp
dec
and
icebp
(bad)
dec
or
pusha
lahf
sub
jbe
(bad)
push
add
add
add
jl
(bad)
jmp
call
icebp
(bad)
dec
out
icebp
(bad)
(bad)
jge
dec
dec
jmp
adc
neg
cwde
(bad)
push
int3
fsubr
mul
cmp
sti
lods
mov
xor
add
push
mov
push
add
xchg
push
data16
add
call
aaa
cld
sti
push
mov
ds
test
imul
(bad)
push
add
xchg
xchg
xchg
xchg
div
(bad)
jmp
dec
xchg
dec
shl
mov
mov
pushf
ss
repnz
loope
mov
lods
xlat
dec
call
add
jecxz
cmp
(bad)
dec
call
popf
(bad)
in
sti
imul
jmp
std
lahf
xchg
div
add
aaa
push
(bad)
inc
push
cmp
test
(bad)
push
test
add
dec
cmp
not
(bad)
in
sti
not
add
mov
dec
(bad)
jmp
jae
lods
add
mul
mov
(bad)
mov
loop
and
jg
push
popf
sti
aaa
loop
add
push
popf
(bad)
outs
loop
xchg
sti
aaa
loop
jp
add
dec
loop
lods
mov
sbb
dec
(bad)
js
les
sti
lods
mov
(bad)
push
(bad)
push
add
pusha
sbb
dec
in
inc
push
push
cld
sti
push
mov
ds
xchg
push
(bad)
dec
dec
dec
dec
aaa
add
je
(bad)
jmp
lahf
fisttp
lods
and
popf
outs
and
mov
loope
dec
(bad)
lods
and
in
int3
jl
mov
dec
in
not
mov
cwde
mov
dec
(bad)
js
les
dec
in
popf
in
pop
xchg
dec
mov
scas
push
ret
dec
cmp
push
int3
call
lods
add
add
sti
push
int3
call
(bad)
(bad)
(bad)
jmp
aam
(bad)
fcom
cmp
xchg
imul
pop
(bad)
jmp
lahf
dec
(bad)
in
xchg
outs
dec
(bad)
idiv
(bad)
aad
scas
cwde
and
add
or
pop
inc
add
sbb
inc
inc
push
movs
call
cmp
neg
(bad)
jmp
aam
push
add
add
div
aam
dec
or
dec
dec
mov
jge
pop
test
push
ret
neg
imul
cmp
cmp
xchg
neg
(bad)
jmp
jmp
iret
stc
(bad)
(bad)
dec
mov
repz
(bad)
call
ss
cmp
push
int3
call
add
and
(bad)
dec
mov
repz
(bad)
jmp
popf
and
dec
fmul
dec
scas
and
sbb
adc
call
in
(bad)
dec
sti
push
add
pop
inc
lods
mov
(bad)
(bad)
call
movs
cwde
iret
mov
ret
jge
(bad)
call
jne
jmp
(bad)
(bad)
dec
js
(bad)
fadd
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
idiv
test
jmp
inc
loop
ficomp
add
pop
repnz
hlt
sar
dec
cwde
adc
lahf
popf
cwde
loope
and
(bad)
mov
in
jecxz
ss
push
int3
dec
(bad)
js
les
lea
jns
sti
dec
test
(bad)
jmp
lods
mov
in
int3
dec
(bad)
js
les
fidivr
call
xor
sti
dec
ss
or
jecxz
dec
sti
dec
sbb
mov
lods
ret
(bad)
in
pop
test
(bad)
jmp
dec
sbb
(bad)
jmp
mov
dec
(bad)
js
les
add
mov
cmp
cmp
sbb
in
pusha
xchg
dec
mov
outs
outs
adc
add
mov
inc
inc
inc
inc
inc
inc
inc
inc
push
push
scas
(bad)
jmp
inc
in
inc
test
(bad)
push
add
pusha
stos
stos
stos
stos
stos
test
scas
or
sbb
sbb
fwait
mov
jmp
xchg
push
call
add
inc
inc
popf
fsubrp
in
div
(bad)
(bad)
mov
mov
lods
mov
xchg
lods
xlat
mov
lea
mov
popf
add
or
mov
inc
loop
jmp
call
call
dec
shl
outs
and
mov
inc
fisubr
or
(bad)
in
pusha
push
ficomp
(bad)
jns
xchg
fidiv
and
pusha
mov
inc
call
cmp
cwde
iret
stos
sbb
add
pusha
aad
fidiv
xor
sbb
add
or
(bad)
shl
adc
fidivr
mov
outs
pusha
mov
inc
iret
sti
mov
sti
dec
test
xchg
pusha
mov
call
push
cwde
iret
std
test
(bad)
fsub
rcr
sub
aam
jp
in
pusha
lods
outs
div
and
and
(bad)
inc
inc
inc
inc
push
call
lods
neg
call
or
call
mul
cwde
and
add
test
lea
test
add
inc
repz
test
add
dec
in
test
add
dec
add
add
sub
lea
xchg
test
add
fnsave
xor
mov
jmp
mov
jmp
call
add
inc
jnp
add
sti
add
dec
and
mov
inc
out
outs
cmp
cmc
xchg
add
sti
add
lods
imul
repz
sti
add
or
jo
pop
lods
aaa
mov
xchg
div
cwde
outs
jl
add
lods
outs
div
cmp
div
sbb
sti
cmc
xchg
div
sti
add
or
push
call
or
cmp
pop
cwde
and
add
xchg
outs
lea
add
repz
add
or
cmp
outs
lea
add
xchg
mov
push
or
outs
lea
xor
add
lods
outs
lea
fsincos
add
jns
mov
ins
or
dec
(bad)
in
adc
xchg
outs
lea
add
xchg
mov
push
mov
add
mov
in
ins
or
dec
mov
adc
xchg
imul
xor
add
mov
iret
cmp
cwde
iret
add
cwde
iret
and
iret
sbb
cwde
iret
push
mov
cwde
iret
push
mov
pusha
mov
inc
lods
imul
(bad)
jmp
neg
xchg
(bad)
(bad)
mov
jle
(bad)
(bad)
mov
aas
mov
jmp
fidiv
ret
jns
inc
xchg
mov
dec
pusha
cwde
iret
daa
jmp
dec
aas
mov
jmp
fidiv
ret
repz
mov
sahf
lods
mov
dec
add
cwde
iret
pop
jp
add
movs
add
add
add
rcl
call
rcr
add
sahf
fnstenv
and
add
add
cmp
lea
sub
mov
inc
outs
data16
(bad)
call
xchg
mov
inc
call
add
and
mov
push
add
add
xor
add
jnp
lea
add
cwde
and
add
add
inc
sti
add
xrelease
add
jnp
lea
add
in
sbb
inc
sti
add
dec
outs
div
(bad)
in
mov
jmp
and
sti
add
xchg
mov
jmp
mov
call
add
(bad)
in
bnd
sbb
mov
(bad)
dec
std
mov
push
and
add
add
into
mov
cwde
iret
mov
rcr
iret
pop
(bad)
(bad)
call
rcr
add
lea
add
xchg
mov
out
cwde
or
jp
add
mov
(bad)
jmp
(bad)
jmp
jmp
call
dec
add
lahf
pop
jns
jmp
and
and
mov
dec
add
outs
and
and
mov
push
mov
add
dec
mov
sub
pusha
call
call
inc
sti
add
cwde
xor
mov
call
push
mov
(bad)
dec
add
repz
lods
imul
add
mov
mov
jmp
(bad)
mov
add
ror
add
add
or
add
lods
mov
test
jmp
lods
mov
mov
jecxz
add
mov
dec
xchg
and
xchg
outs
lea
add
lahf
js
or
mov
jno
(bad)
jmp
pusha
cwde
iret
out
(bad)
inc
mov
(bad)
fstp
fidiv
ss
sti
dec
and
mov
inc
mov
dec
add
repz
lea
and
mov
call
add
add
lea
add
add
cwde
iret
lds
add
test
mov
enter
in
hlt
or
mov
div
add
lahf
jne
and
mov
inc
xchg
div
div
add
rcr
add
mov
call
add
call
cmp
and
(bad)
fdivr
and
lods
xchg
std
mov
inc
dec
lahf
sbb
and
mov
push
add
in
test
mov
(bad)
dec
jmp
and
mov
jmp
adc
inc
mov
loope
inc
div
mov
inc
push
(bad)
jmp
shl
inc
(bad)
mov
(bad)
(bad)
mov
lea
xor
add
mov
inc
in
xchg
outs
and
cmp
inc
cmp
mov
(bad)
(bad)
mov
or
jle
(bad)
jmp
in
xchg
outs
and
cmp
inc
cmc
(bad)
mov
(bad)
(bad)
mov
or
retf
in
hlt
xchg
outs
lea
add
inc
xchg
mov
(bad)
cmp
mov
add
mov
inc
call
cwde
iret
ja
(bad)
call
rcr
jmp
or
add
and
jmp
add
inc
and
aaa
and
mov
jmp
xchg
mov
inc
and
cmp
and
and
mov
(bad)
jp
add
repz
(bad)
(bad)
jnp
add
test
jmp
fstp
mov
inc
call
(bad)
cwde
or
dec
mov
inc
dec
ficomp
in
int
sub
dec
ficomp
adc
(bad)
and
hlt
jnp
lods
int
jnp
xchg
outs
lea
add
jnp
lea
add
dec
mov
in
jp
pop
lods
sub
mov
inc
mov
mov
dec
add
lahf
fild
(bad)
jnp
add
add
and
mov
inc
xchg
div
repnz
in
ss
and
mov
jmp
movs
dec
and
mov
(bad)
jmp
mov
jmp
pusha
jmp
int3
call
push
stos
cmp
mul
adc
jmp
aad
pushw
(bad)
dec
dec
mov
ss
fs
call
sub
cmp
and
jp
add
inc
call
mov
out
call
dec
std
mov
call
out
ficomp
or
fisub
imul
movs
or
std
mov
call
lahf
pop
and
in
bnd
sbb
mov
(bad)
dec
std
mov
call
add
in
ror
std
mov
inc
jmp
inc
cwde
and
add
dec
and
ficomp
add
call
dec
lahf
xchg
pop
dec
call
dec
repnz
jp
hlt
push
and
mov
(bad)
fnstenv
and
mov
dec
add
dec
add
and
cmc
mov
inc
mov
call
aas
mov
jmp
fidiv
fdecstp
pop
sar
jmp
cmc
mov
dec
aas
mov
jmp
fidiv
cmp
sar
inc
mov
(bad)
sti
mov
lea
popa
xchg
cmp
out
outs
and
mov
push
out
(bad)
jmp
xchg
mov
inc
dec
and
mov
call
push
dec
add
mov
inc
call
push
(bad)
jmp
mov
outs
and
stos
inc
test
lods
and
pop
aad
mov
(bad)
call
mov
jmp
fidiv
mov
mov
sub
(bad)
inc
mov
lods
outs
fidiv
pop
dec
outs
std
mov
jmp
(bad)
push
add
sub
mov
inc
cld
addr16
and
call
and
mov
push
(bad)
popf
lods
sub
inc
call
push
push
sti
(bad)
jmp
inc
mov
(bad)
(bad)
jns
shl
jle
(bad)
dec
pusha
call
(bad)
jns
repz
(bad)
(bad)
in
inc
aad
pusha
mov
call
mov
jmp
retf
(bad)
dec
dec
dec
aaa
add
repz
(bad)
dec
sub
mov
inc
call
jmp
and
mov
dec
jmp
in
adc
push
inc
sub
mov
js
jp
adc
mov
jp
test
mov
jmp
lods
jae
out
mov
(bad)
in
pop
xchg
std
fmul
stos
jae
(bad)
mov
jecxz
xchg
mov
dec
pushf
jp
and
aad
call
lods
call
(bad)
mov
jecxz
cmp
lods
jmp
or
lods
pusha
fldcw
(bad)
mov
mov
fwait
mov
and
ss
add
(bad)
(bad)
push
test
add
dec
cmp
not
(bad)
dec
fmul
cwde
mov
dec
(bad)
js
les
pop
inc
cmp
xchg
and
sbb
add
xchg
cmc
call
jmp
dec
add
add
sbb
outs
cmp
stos
idiv
or
add
cmp
cmp
cmp
jge
(bad)
jmp
lods
fwait
add
add
and
add
mov
cmp
call
dec
lods
and
or
mov
add
pusha
xor
call
pop
test
lods
sub
(bad)
(bad)
fcom
cmp
xchg
imul
(bad)
(bad)
jmp
mov
mov
sti
call
add
gs
cmp
lahf
jecxz
mov
fsubr
or
call
dec
call
aad
mov
cmp
(bad)
jecxz
add
lahf
xor
lea
add
lahf
popf
aaa
cmp
lahf
jecxz
sbb
add
pop
add
add
push
dec
xor
jmp
int3
call
add
add
add
jecxz
add
push
cmp
jp
add
lahf
dec
aaa
cmp
mov
aaa
cmp
jecxz
add
lahf
ins
pop
add
pop
add
add
call
(bad)
(bad)
push
cmp
dec
add
add
lods
aaa
cmp
and
call
mov
xchg
iret
neg
aaa
cmp
pop
ficomp
add
add
xchg
dec
mov
lods
dec
(bad)
(bad)
xchg
add
mov
popa
xchg
dec
mov
add
sti
lahf
scas
aaa
cmp
mov
pop
pop
lods
call
add
xchg
lods
mov
push
jo
inc
test
(bad)
push
add
pop
add
dec
cmp
dec
pop
out
(bad)
mov
aaa
add
add
(bad)
in
les
add
in
mov
sbb
mov
dec
mov
pusha
dec
xchg
push
xchg
in
or
cmp
mov
cmp
in
mov
cmp
(bad)
in
les
in
mov
sbb
mov
inc
dec
push
dec
mov
and
mov
pushf
outs
cmp
(bad)
or
test
cmp
(bad)
mov
(bad)
(bad)
mov
dec
repz
mov
inc
push
int3
in
cmp
dec
push
dec
mov
and
mov
pushf
outs
cmp
(bad)
or
test
cmp
(bad)
mov
pop
cmps
(bad)
(bad)
mov
xor
(bad)
mov
test
push
add
add
lahf
xor
mov
dec
(bad)
ficomp
in
(bad)
or
sti
(bad)
in
std
inc
push
sub
dec
cmc
lods
and
scas
and
dec
and
mov
test
ss
cmc
lods
and
scas
and
and
outs
cmp
or
or
dec
mov
xor
cwde
and
dec
or
add
jp
fdivr
sbb
xchg
inc
and
add
lods
sbb
in
out
adc
(bad)
call
add
pop
and
push
fld
cmp
sbb
add
in
sub
in
scas
dec
cmp
jbe
stos
inc
push
mov
add
call
aaa
mov
add
call
iret
out
jp
add
pop
add
add
and
and
mov
jecxz
cmp
push
dec
call
call
call
call
call
call
in
ins
push
cmp
lods
fwait
dec
jecxz
add
xchg
in
test
test
jecxz
sbb
mov
dec
add
inc
cmp
fiadd
pop
dec
add
dec
cmp
pusha
dec
dec
pop
add
add
cwde
iret
or
add
pop
add
add
call
dec
add
dec
cmp
push
int3
cwde
lock
dec
add
lods
mov
mov
mov
dec
add
cwde
loope
test
call
cwde
iret
pop
dec
add
rcr
add
cmp
inc
jp
add
repz
add
jp
cmp
inc
div
push
(bad)
jmp
call
neg
xlat
(bad)
dec
sub
test
(bad)
fsub
outs
cmp
stos
inc
jnp
add
lods
sbb
call
call
cdq
add
add
xor
cmp
add
les
int3
cwde
lock
add
add
push
(bad)
(bad)
jmp
stos
(bad)
(bad)
(bad)
fdivr
cmp
inc
test
jmp
cwde
iret
inc
(bad)
(bad)
(bad)
cmp
cmp
inc
test
jmp
lods
mov
add
add
mov
add
inc
add
out
inc
div
imul
xchg
in
out
dec
push
rep
dec
add
pop
inc
fdivr
inc
mul
popf
lods
mov
mov
call
test
loop
cmp
inc
mul
out
add
lods
sbb
jle
xor
jecxz
add
dec
cmp
or
stos
outs
cmp
stos
inc
ja
(bad)
jmp
call
jmp
mov
pop
dec
ss
xchg
dec
shl
mov
and
outs
cmp
jns
mov
test
xlat
jmp
dec
xchg
dec
shl
mov
and
outs
cmp
dec
dec
lods
jns
dec
rep
pusha
xlat
mov
out
sar
or
inc
cmp
dec
xchg
lods
and
popf
outs
and
mov
cmp
or
(bad)
mov
pusha
dec
sbb
xchg
in
cld
inc
cmp
std
inc
cmp
in
mov
cmp
fsub
stos
(bad)
in
lea
jmp
inc
lods
mov
cmp
(bad)
mov
(bad)
dec
dec
xchg
lods
and
popf
outs
and
mov
cmp
or
test
inc
test
add
mov
dec
dec
call
popf
outs
and
mov
pushf
ss
sub
pop
test
out
mov
(bad)
in
inc
xchg
std
in
pusha
dec
mov
and
jmp
xchg
dec
test
test
lods
sub
cwde
(bad)
in
pusha
aad
sti
cwde
and
in
xor
and
test
(bad)
jnp
addr16
ficomp
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
outs
cmp
stos
dec
aaa
test
(bad)
jmp
and
cmp
test
(bad)
push
add
add
and
push
call
(bad)
(bad)
dec
in
inc
dec
mov
call
dec
mov
mov
and
dec
popf
outs
and
mov
or
test
or
mov
add
mov
dec
(bad)
fmul
in
sti
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
mul
(bad)
(bad)
jmp
dec
(bad)
js
les
in
inc
in
pusha
xchg
aad
lods
cwde
iret
adc
add
dec
sbb
push
xchg
in
imul
dec
(bad)
dec
dec
dec
dec
aaa
add
loopne
test
lods
sub
repz
add
popf
push
test
outs
dec
(bad)
not
cmp
inc
cwde
or
sub
lods
mov
pusha
fstp
mov
test
jecxz
pusha
fld
mov
dec
cwde
or
fadd
sbb
call
stos
cwde
or
stos
neg
mov
lea
lea
test
jmp
mov
dec
cwde
or
sbb
sbb
call
push
or
or
dec
mov
jge
pop
test
les
inc
xchg
aad
mov
mov
aad
lods
cwde
iret
lock
add
sti
push
test
mov
lods
dec
(bad)
dec
dec
dec
dec
aaa
add
xchg
ret
lods
sub
lahf
cs
js
push
cmps
call
mov
lods
mov
pusha
fstp
jp
lods
mov
lods
mov
pusha
fnstenv
dec
lods
cwde
or
sbb
sbb
call
dec
or
lahf
popa
dec
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
not
test
jmp
sbb
dec
(bad)
js
les
(bad)
in
pusha
sbb
dec
js
dec
dec
sti
dec
call
pusha
call
loop
(bad)
lahf
neg
sbb
sbb
js
les
fadd
jae
fwait
jp
(bad)
in
sti
mul
add
sbb
pop
dec
icebp
sbb
dec
jb
(bad)
jnp
(bad)
add
add
call
shr
in
xchg
test
jae
dec
stos
pop
cmovns
add
add
cmp
sti
dec
(bad)
sub
add
int3
cmp
xchg
dec
cmp
lods
js
fadd
outs
inc
add
add
mov
outs
cmp
(bad)
outs
xor
add
add
sub
sti
dec
bound
aam
cld
sub
call
xor
outs
inc
popf
mov
rcr
add
adc
dec
add
dec
cmp
add
dec
cmp
add
lahf
or
sub
outs
xchg
add
add
pop
int3
in
pusha
outs
dec
jg
add
add
jp
in
lods
dec
and
and
in
mov
add
cmp
ja
adc
cmp
ja
adc
sub
inc
mov
mov
push
int3
dec
(bad)
js
les
lods
dec
dec
in
sti
fadd
js
push
(bad)
in
not
jmp
fcos
push
add
xchg
push
shl
pop
push
movs
cld
sti
push
inc
or
mov
fcos
inc
(bad)
(bad)
cmp
cmp
cmp
add
xchg
test
lods
sub
mov
dec
mov
and
or
mov
mov
pushf
ss
jns
mov
fcos
inc
(bad)
push
add
fcom
jmp
lea
enter
mov
jp
and
mov
call
cmc
mov
loope
rcr
(bad)
mov
sub
pop
dec
call
lods
dec
cmp
xchg
add
add
jnp
pop
dec
in
push
not
fcos
inc
(bad)
push
add
cmp
cmp
neg
test
lods
sub
test
jecxz
cmp
xor
(bad)
mov
int3
in
mov
div
popf
add
add
lea
sti
add
add
mov
cmp
in
sti
not
mov
dec
xchg
sub
lods
sub
jecxz
inc
loop
rcr
or
sbb
call
dec
aaa
cmp
push
cmp
test
jb
and
rcr
inc
aad
lods
call
dec
or
jp
add
push
cmp
dec
cwde
jns
sub
call
sar
dec
cwde
fdivrp
dec
lods
aaa
cmp
push
cmp
dec
mul
(bad)
in
lods
stos
dec
mov
or
(bad)
mov
into
jecxz
add
neg
add
add
dec
lods
cwde
shl
mov
cmp
mov
add
or
jp
add
add
or
sbb
mov
jecxz
fld
dec
sbb
int3
xchg
lods
xchg
lea
ficomp
add
lods
jns
mov
cwde
iret
(bad)
add
add
jecxz
loop
dec
lods
repz
add
dec
cmp
adc
dec
or
loop
dec
lods
push
jecxz
lahf
in
xchg
lods
lahf
(bad)
cmp
stos
fmul
cmp
stos
dec
mov
or
(bad)
mov
inc
and
cmp
inc
dec
mov
rcr
sbb
dec
mov
jb
mov
mov
or
dec
fdivr
fdivr
(bad)
in
sti
not
sub
push
jecxz
inc
dec
cmp
xor
or
cmp
mov
jp
mov
inc
dec
int3
or
mov
mov
lea
add
pusha
cwde
iret
xchg
add
add
jns
iret
neg
inc
xrelease
add
pusha
ficomp
lods
mov
sbb
adc
fimul
pop
out
adc
idiv
cwde
adc
cwde
loope
out
adc
in
jg
adc
push
add
add
lahf
test
push
xchg
in
(bad)
jecxz
lahf
fimul
jecxz
inc
loop
rcr
jp
and
dec
cwde
rol
sub
jecxz
test
dec
cwde
rol
sub
lahf
popa
jnp
jbe
dec
bts
in
sti
test
lods
dec
cmp
or
mov
imul
(bad)
in
mov
add
mov
add
add
(bad)
mov
pusha
in
(bad)
inc
stos
test
dec
(bad)
dec
mov
cmp
jge
test
mov
mov
dec
add
dec
cmp
add
lea
in
neg
int3
cwde
or
xchg
out
lahf
push
push
add
sub
sti
(bad)
lahf
jecxz
fld
dec
sbb
int3
xchg
lods
xchg
lea
ficomp
add
lods
cwde
or
sub
add
add
cwde
add
xchg
lods
repz
add
add
lea
scas
mov
jp
lods
aad
in
jg
pusha
mov
add
add
add
add
imul
mov
(bad)
inc
and
sbb
cmp
(bad)
mov
lods
mov
dec
mov
rcr
mov
jg
add
mov
dec
mov
jb
and
mov
sbb
in
mov
sbb
(bad)
fadd
cmps
(bad)
jmp
mov
fdivr
add
(bad)
aad
lods
cwde
xor
(bad)
call
call
mov
sti
or
xchg
inc
inc
or
mov
sbb
(bad)
inc
fsub
adc
daa
addr16
push
add
mov
out
repz
test
jmp
mov
sbb
repz
test
(bad)
in
pusha
jge
in
int3
fsubr
mul
sub
dec
sti
lods
mov
push
addr16
jmp
addr16
push
add
xchg
push
loope
add
in
inc
push
push
cld
sti
push
mov
ds
imul
addr16
inc
(bad)
push
add
dec
dec
dec
dec
mul
movs
test
lods
sub
shl
mov
mov
mov
loope
aad
lods
xlat
dec
call
push
dec
lods
addr16
in
scas
div
(bad)
inc
(bad)
push
add
adc
add
mov
jecxz
cmp
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
test
(bad)
jmp
std
lahf
xchg
test
test
add
mul
(bad)
inc
push
cmp
test
(bad)
push
test
add
dec
cmp
mul
(bad)
dec
(bad)
in
sti
neg
jp
add
dec
les
sti
dec
xchg
and
mov
mov
dec
shl
outs
mov
or
mov
lods
mov
pop
lods
jl
mov
popf
in
mov
rcr
cmp
mov
sti
cmp
rcr
inc
dec
mov
pusha
pop
lahf
xchg
test
(bad)
push
add
dec
(bad)
jmp
(bad)
jge
sbb
dec
(bad)
js
les
sti
cmp
pop
push
add
cld
pop
push
jg
or
mov
dec
mov
mov
and
mov
mov
pushf
ss
inc
faddp
dec
call
lods
pop
lods
jl
mov
add
push
in
pop
cmp
mov
sti
cmp
rcr
inc
dec
mov
in
pusha
lahf
xor
out
push
add
into
out
inc
jge
pop
sbb
dec
(bad)
js
les
sti
lods
mov
jge
(bad)
jmp
out
push
add
xchg
call
int3
dec
in
inc
push
push
cld
imul
or
mov
lods
and
popf
outs
and
mov
dec
inc
faddp
dec
in
sub
mov
(bad)
inc
(bad)
dec
dec
dec
dec
aaa
add
inc
test
lods
sub
dec
add
sbb
fcomp
mov
dec
sti
dec
aaa
dec
mov
pushf
mov
pushf
ss
and
or
mov
add
add
pop
aad
sti
in
inc
fcomp
div
(bad)
(bad)
mov
in
in
fbstp
cwde
add
outs
inc
popf
stos
idiv
mov
xchg
std
inc
aaa
cmp
test
(bad)
push
out
add
add
sbb
call
lods
mov
dec
(bad)
and
or
mov
stos
inc
dec
cmp
idiv
sar
dec
in
pop
dec
mov
pop
cmp
(bad)
mov
dec
les
sti
dec
xchg
lods
and
popf
outs
and
mov
cmp
stos
inc
sbb
fcom
mov
jmp
inc
neg
ud0
mov
lods
xchg
push
push
dec
add
fdiv
not
mov
lods
(bad)
ficomp
add
sub
or
mov
mov
add
xchg
and
sub
or
mov
add
lea
add
dec
in
push
lods
sar
in
aad
sbb
cs
(bad)
mov
sbb
lods
sar
in
xor
cwde
add
outs
inc
popf
stos
imul
cmp
mov
mov
jecxz
inc
sti
lods
xor
add
pop
add
add
adc
popf
cmp
sbb
(bad)
dec
call
(bad)
mov
xor
fimul
and
sbb
and
(bad)
(bad)
mov
add
pushf
push
inc
(bad)
dec
lods
sub
and
mov
aaa
dec
and
std
lods
mov
mov
or
(bad)
(bad)
fcomp
fcomp
div
(bad)
(bad)
mov
and
mov
or
mov
or
mov
sahf
add
add
push
sahf
scas
adc
mov
fisub
add
and
xchg
mov
mov
xlat
ss
(bad)
and
or
mov
dec
xchg
not
(bad)
(bad)
mov
lods
dec
std
push
cmp
test
(bad)
push
test
add
dec
cmp
imul
fdiv
mul
int3
fsubr
test
sti
lods
mov
fist
test
add
lods
xchg
push
cmp
add
in
pop
push
int3
cld
sti
push
mov
ds
jb
(bad)
push
add
cmp
cmp
div
gs
lods
sub
shl
mov
mov
pushf
ss
cwde
cwde
loope
sub
call
(bad)
mov
mov
dec
call
jmp
(bad)
mov
mov
in
repnz
xchg
std
lahf
jecxz
sbb
aad
std
call
dec
dec
std
xchg
imul
cmp
aaa
add
dec
std
push
cmp
test
(bad)
push
test
add
dec
cmp
imul
dec
(bad)
in
sti
imul
mov
(bad)
mov
dec
les
sti
cmp
xchg
in
call
sbb
popf
push
retf
not
cmp
fcom
xchg
xchg
xchg
xchg
imul
test
lods
sub
sbb
dec
in
lods
push
jnp
mov
jp
cmp
cwde
or
add
sbb
call
push
retf
add
(bad)
fsubr
xchg
dec
inc
lahf
mov
js
les
sti
or
fiadd
or
sti
push
mov
(bad)
js
les
popf
dec
dec
in
sti
xchg
cwde
adc
outs
shl
pop
jecxz
pusha
fstp
xor
pop
jecxz
dec
fldenv
pusha
call
or
in
int3
dec
(bad)
js
les
in
lods
outs
dec
(bad)
not
pop
aad
sti
in
ins
test
(bad)
(bad)
cmp
cmp
cmp
add
push
arpl
sbb
call
bound
jmp
add
ret
imul
(bad)
(bad)
cmp
cmp
cmp
add
pop
arpl
sbb
call
bound
jmp
(bad)
aad
scas
in
jg
(bad)
in
sti
not
(bad)
(bad)
(bad)
mov
dec
cmp
cwde
adc
outs
dec
lea
stos
imul
out
(bad)
(bad)
(bad)
cmp
dec
lea
lea
stos
neg
(bad)
jmp
movs
call
lea
in
sbb
call
bound
dec
(bad)
js
les
inc
aad
mov
mov
sti
in
mov
mov
(bad)
dec
dec
dec
dec
aaa
add
outs
les
(bad)
(bad)
(bad)
jmp
popf
call
(bad)
dec
in
popf
(bad)
in
sti
test
(bad)
jmp
int3
dec
(bad)
js
(bad)
fcomp
fadd
(bad)
in
sti
neg
add
lods
sbb
dec
les
pop
dec
xchg
aad
lods
cwde
iret
mov
in
scas
outs
dec
(bad)
div
test
aad
sti
in
ins
test
(bad)
(bad)
cmp
cmp
cmp
add
scas
les
sbb
call
bound
jmp
add
popf
push
ret
loope
(bad)
(bad)
jmp
pop
test
cmp
cmp
add
mov
sub
dec
cmp
dec
push
lahf
cs
cmp
ins
(bad)
in
lods
xchg
(bad)
in
sti
mul
add
lods
sbb
dec
dec
mov
lahf
push
dec
cmp
cwde
adc
outs
dec
lea
stos
imul
dec
(bad)
(bad)
(bad)
cmp
dec
lea
lea
stos
test
(bad)
jmp
dec
lods
call
lea
push
lahf
pop
in
pusha
jge
pop
test
les
inc
aad
mov
mov
sti
in
mov
in
(bad)
dec
dec
dec
dec
aaa
add
in
lahf
test
lods
sub
lahf
sub
in
popf
call
(bad)
jmp
repz
mov
add
in
lods
(bad)
in
popf
(bad)
in
sti
not
(bad)
jmp
int3
add
add
add
add
add
add
add
add
outs
jb
(bad)
or
addr16
jnp
dec
xchg
dec
and
(bad)
call
xchg
sbb
mov
(bad)
sub
retf
add
repz
add
add
les
pusha
lods
idiv
test
jnp
lods
jle
jns
popf
mov
(bad)
lods
aaa
dec
or
pusha
lahf
jp
aaa
jmp
test
les
mov
xchg
jmp
dec
dec
in
sti
xchg
(bad)
in
lods
dec
mov
neg
arpl
in
pop
cmp
cmp
xchg
outs
cmp
stos
outs
cmp
add
xchg
les
lea
mul
mov
inc
cmp
jecxz
or
mov
sbb
call
bound
dec
lods
mov
sbb
call
bound
inc
cmp
dec
in
jmp
or
dec
cmp
lods
bound
jmp
in
adc
out
test
test
les
mov
xchg
jmp
dec
dec
in
sti
xchg
(bad)
in
lods
dec
mov
imul
arpl
in
pop
cmp
cmp
xchg
outs
cmp
stos
outs
cmp
add
xchg
les
lea
neg
add
(bad)
lods
mov
sbb
call
bound
dec
lods
mov
sbb
call
bound
inc
cmp
dec
in
jmp
or
dec
cmp
lods
bound
jmp
in
adc
jno
test
test
les
scas
cmp
dec
in
sti
in
pop
xchg
dec
stc
popf
push
movs
in
mov
shr
out
cmp
cmp
cmp
xchg
repz
lods
sub
add
aad
popf
inc
das
dec
js
push
enter
(bad)
dec
sahf
lahf
jp
pusha
(bad)
cmp
lods
(bad)
(bad)
fsubr
xchg
dec
inc
lahf
sbb
push
ss
outs
inc
dec
rcr
cwde
aam
call
jecxz
out
mov
push
enter
dec
scas
push
enter
popa
or
cld
jg
jecxz
add
ror
or
add
ret
mov
mov
sub
xchg
div
stos
xchg
dec
test
(bad)
jmp
jge
pop
sbb
dec
(bad)
js
les
dec
js
cwde
or
ss
xchg
dec
xchg
dec
repz
and
or
add
dec
sbb
(bad)
dec
popa
cwde
or
and
call
and
call
dec
add
xor
lahf
sub
pop
push
int3
in
popa
push
enter
cmp
or
xchg
xchg
dec
dec
mov
add
ror
repz
repnz
repnz
jmp
cmp
dec
push
repnz
mov
stos
(bad)
dec
movs
jecxz
dec
lahf
mov
enter
aaa
(bad)
inc
add
and
popf
repnz
add
dec
(bad)
js
les
mov
xchg
jmp
cmp
dec
xchg
cmc
xchg
outs
cmp
stos
outs
cmp
(bad)
(bad)
mov
stos
fadd
fdiv
lods
les
jmp
imul
cmc
xchg
cwde
loope
cmps
xchg
cwde
xor
(bad)
outs
cmp
stos
(bad)
in
xchg
dec
idiv
sub
pusha
call
stos
stos
neg
test
lods
sub
scas
popf
in
int3
in
adc
xor
test
test
add
add
in
arpl
sub
mov
dec
(bad)
sub
fiadd
xchg
sub
dec
cmp
xor
pusha
mov
sub
lods
fiadd
xchg
sub
xchg
sub
dec
jb
xchg
dec
cmp
scas
in
int
inc
dec
fimul
sub
int3
jnp
sub
jnp
sub
dec
fimul
sub
dec
cmp
lods
push
lahf
push
movs
push
jmp
jnp
dec
lea
sub
dec
xchg
dec
cmp
xchg
jnp
jecxz
ds
pop
sti
ds
push
cmp
lods
inc
test
or
sub
in
pop
or
sub
stc
mov
lods
mov
dec
out
dec
enter
xchg
dec
push
cli
in
mov
lods
mov
sbb
jge
lods
add
or
fisubr
scas
ss
cdq
cmc
enter
sahf
in
int
xlat
mov
test
pusha
in
int
fdivr
je
(bad)
(bad)
mov
dec
les
lods
dec
dec
popf
and
(bad)
jnp
dec
xchg
dec
jnp
and
(bad)
jmp
mov
inc
push
test
jle
add
mov
push
jg
(bad)
fcom
dec
dec
xchg
jmp
jge
ins
dec
in
sti
stos
(bad)
in
popf
and
div
ss
mov
add
sbb
dec
(bad)
js
les
sti
cwde
or
sbb
movs
xchg
xlat
add
add
xchg
dec
shl
xchg
dec
sar
or
xchg
nop
(bad)
jmp
inc
add
lods
xchg
xchg
xchg
not
(bad)
in
sub
pop
in
pusha
aad
and
in
jg
lods
mov
pusha
repz
outs
mov
jp
mov
add
sti
add
in
and
cmp
imul
or
dec
dec
dec
jbe
push
mov
sahf
dec
mov
push
mov
add
xchg
lea
push
lods
out
and
outs
cld
and
fdiv
out
fmulp
and
cwde
iret
outs
add
add
mov
out
dec
push
jnp
and
and
lahf
mov
add
sti
fisubr
lahf
stos
dec
push
jbe
mov
dec
push
jecxz
dec
mov
add
or
mov
inc
lods
xor
add
in
int
enter
and
dec
mov
test
mov
in
sti
ds
sti
lahf
addr16
call
jb
and
outs
ds
xchg
sti
push
test
dec
scas
mov
add
add
dec
js
xchg
dec
dec
jmp
push
xchg
dec
dec
mov
and
dec
cmp
mov
outs
cld
and
or
in
pusha
movs
sbb
mov
inc
jl
adc
jg
adc
jg
pusha
outs
mov
repz
add
push
ficomp
add
lea
cmp
outs
mov
push
mov
sahf
imul
push
mov
add
imul
and
lods
xor
add
enter
jmp
add
add
dec
sbb
outs
push
and
dec
call
lea
enter
jmp
in
mov
in
dec
in
(bad)
enter
sti
lods
mov
mov
enter
jp
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
adc
dec
dec
dec
jbe
push
mov
sahf
dec
mov
push
mov
add
xchg
mov
mov
(bad)
mov
or
in
int
enter
and
xchg
and
cwde
iret
xor
add
lods
out
dec
push
jnp
and
and
lahf
mov
add
sti
fisubr
lahf
or
fdiv
sahf
dec
mov
add
or
mov
inc
lods
xor
add
int
call
jb
and
outs
mov
push
(bad)
dec
add
add
lahf
mov
neg
and
outs
ds
in
call
test
dec
scas
jecxz
push
sar
xchg
dec
dec
lea
push
jecxz
cmp
mov
outs
cld
and
or
in
pusha
movs
sbb
jg
adc
jbe
push
mov
sahf
dec
push
dec
mov
add
or
mov
fsubr
xor
add
enter
jmp
add
add
dec
sbb
outs
push
and
dec
call
lea
enter
jmp
in
mov
in
dec
in
(bad)
enter
sti
lods
mov
mov
enter
jp
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
pop
mov
jne
add
push
ins
and
mov
adc
add
add
pusha
outs
mov
xchg
dec
and
add
or
jbe
push
mov
sahf
dec
push
dec
mov
add
or
mov
fsubr
xor
add
enter
jmp
add
add
dec
sbb
outs
push
and
dec
call
lea
enter
jmp
in
mov
in
dec
in
(bad)
enter
sti
lods
mov
mov
enter
jp
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
mov
adc
in
pusha
fdivp
add
add
jl
adc
(bad)
(bad)
(bad)
jmp
jbe
push
mov
sahf
dec
push
dec
mov
add
or
mov
fsubr
xor
add
enter
jmp
add
add
dec
dec
sti
dec
cld
outs
and
dec
call
out
enter
sti
repnz
and
lea
jmp
mov
mov
mov
cmc
dec
(bad)
fdivr
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
fdiv
adc
dec
les
not
add
or
movs
dec
jg
adc
lods
rcr
jg
dec
popf
dec
js
xchg
sbb
dec
dec
popf
xchg
jge
test
les
sti
cwde
or
sbb
movs
xchg
xlat
add
add
xchg
dec
shl
xchg
dec
sar
or
xchg
nop
(bad)
jmp
inc
add
lods
xchg
xchg
xchg
not
(bad)
in
sub
pop
in
pusha
aad
and
in
jg
lods
mov
pusha
repz
outs
mov
jp
mov
add
sti
add
in
and
cmp
imul
or
dec
dec
dec
jbe
push
mov
sahf
dec
mov
push
mov
add
xchg
lea
push
lods
out
and
outs
cld
and
fdiv
out
fmulp
and
cwde
iret
outs
add
add
mov
out
dec
push
jnp
and
and
lahf
mov
add
sti
fisubr
lahf
stos
dec
push
jbe
mov
dec
push
jecxz
dec
mov
add
or
mov
inc
lods
xor
add
in
int
enter
and
dec
mov
test
mov
in
sti
ds
sti
lahf
addr16
call
jb
and
outs
ds
xchg
sti
push
test
dec
scas
mov
add
add
dec
js
xchg
dec
dec
jmp
push
xchg
dec
dec
mov
and
dec
cmp
mov
outs
cld
and
or
in
pusha
movs
sbb
mov
inc
jl
adc
jg
mov
jg
pusha
outs
mov
repz
add
push
ficomp
add
lea
cmp
outs
mov
push
mov
sahf
imul
push
mov
add
imul
and
lods
xor
add
enter
jmp
add
add
dec
sbb
outs
push
and
dec
call
lea
enter
jmp
in
mov
in
dec
in
(bad)
enter
sti
lods
mov
mov
enter
jp
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
mov
dec
dec
dec
jbe
push
mov
sahf
dec
mov
push
mov
add
xchg
mov
mov
(bad)
mov
or
in
int
enter
and
xchg
and
cwde
iret
xor
add
lods
out
dec
push
jnp
and
and
lahf
mov
add
sti
fisubr
lahf
or
fdiv
sahf
dec
mov
add
or
mov
inc
lods
xor
add
int
call
jb
and
outs
mov
push
(bad)
dec
add
add
lahf
mov
neg
and
outs
ds
in
call
test
dec
scas
jecxz
push
sar
xchg
dec
dec
lea
push
jecxz
cmp
mov
outs
cld
and
or
in
pusha
movs
sbb
jg
mov
jbe
push
mov
sahf
dec
push
dec
mov
add
or
mov
fsubr
xor
add
enter
jmp
add
add
dec
sbb
outs
push
and
dec
call
lea
enter
jmp
in
mov
in
dec
in
(bad)
enter
sti
lods
mov
mov
enter
jp
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
pop
mov
jne
add
push
ins
mov
jg
mov
add
add
pusha
outs
mov
xchg
dec
and
add
or
jbe
push
mov
sahf
dec
push
dec
mov
add
or
mov
fsubr
xor
add
enter
jmp
add
add
dec
sbb
outs
push
and
dec
call
lea
enter
jmp
in
mov
in
dec
in
(bad)
enter
sti
lods
mov
mov
enter
jp
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
mov
mov
in
pusha
fdivp
add
add
jl
mov
(bad)
(bad)
(bad)
jmp
jbe
push
mov
sahf
dec
push
dec
mov
add
or
mov
fsubr
xor
add
enter
jmp
add
add
dec
dec
sti
dec
cld
outs
and
dec
call
out
enter
sti
repnz
and
lea
jmp
mov
mov
mov
cmc
dec
(bad)
fdivr
pushf
jp
dec
div
call
dec
mov
mov
add
repz
and
mov
fdiv
mov
dec
les
not
add
or
movs
dec
jg
mov
lods
rcr
jg
dec
popf
dec
js
xchg
sbb
dec
dec
popf
xchg
jge
test
les
mov
xchg
jmp
cmp
cmp
pop
dec
in
inc
xchg
ror
popf
inc
in
not
mov
xchg
out
sbb
xchg
pop
xchg
xchg
aas
xchg
push
sbb
sbb
in
mov
push
jp
(bad)
cmp
cmp
cmp
add
cmp
scas
in
pusha
repz
add
dec
js
xchg
jns
mov
call
sbb
jecxz
lahf
lahf
mov
jns
fsubr
dec
jp
add
sub
retf
jns
or
mov
sar
ss
mov
dec
sub
dec
xchg
add
add
aam
in
mov
aaa
cwde
loope
lods
test
rcl
call
dec
dec
add
dec
call
mov
or
add
add
jp
lahf
jbe
xchg
or
mov
sti
inc
xchg
dec
dec
sub
dec
xchg
add
add
aam
in
(bad)
fadd
lahf
cdq
mov
pop
mov
call
inc
cwde
(bad)
mov
add
dec
cwde
(bad)
out
dec
add
mov
cwde
and
add
ss
xchg
push
fdiv
repz
(bad)
(bad)
(bad)
jns
or
mov
sar
lock
dec
sub
dec
xchg
add
add
aam
cwde
iret
(bad)
(bad)
(bad)
call
int3
cwde
iret
cmp
dec
push
repz
dec
add
xchg
pop
lahf
fisttp
mov
(bad)
cmp
jo
shl
cmp
int3
mov
dec
test
sbb
add
dec
test
dec
cwde
iret
sbb
(bad)
dec
retf
call
lods
mov
pop
xchg
fs
pop
lahf
dec
jns
(bad)
int3
call
mov
scas
repnz
cmp
jo
shl
jns
(bad)
int3
mov
int3
xchg
mov
(bad)
(bad)
fadd
repz
push
test
or
mov
sar
mov
test
call
or
(bad)
rcr
cwde
and
(bad)
(bad)
(bad)
fdivr
repz
(bad)
fsub
(bad)
(bad)
fsub
inc
jns
(bad)
int3
call
fwait
push
lahf
pop
jns
or
mov
sar
sbb
int3
lahf
sub
mov
loope
lods
test
inc
rcl
call
add
mov
lods
cwde
iret
movs
jecxz
add
xchg
mov
cmp
inc
lods
or
cmp
(bad)
cmp
mov
xchg
jecxz
add
push
lods
rcr
and
mov
call
in
neg
fld
lea
mov
xchg
shr
jns
(bad)
int3
mov
and
push
repnz
cwde
and
(bad)
(bad)
jns
(bad)
int3
mov
(bad)
(bad)
dec
(bad)
cmp
call
in
push
outs
cmp
stos
test
push
int
sbb
jnp
jecxz
adc
jecxz
cmp
jecxz
cmp
pop
stos
scas
add
cwde
and
add
pop
adc
daa
ins
jecxz
add
mov
xchg
push
push
sahf
cwde
iret
repz
add
mov
lods
repz
scas
in
ss
pusha
add
cwde
iret
push
jp
add
in
int
cmp
push
jecxz
dec
(bad)
lods
and
sahf
cwde
iret
data16
add
dec
ficomp
adc
ds
fwait
imul
sbb
in
pusha
xchg
adc
cmp
xchg
mov
inc
mov
jmp
dec
sahf
dec
out
xchg
pushf
add
add
xor
outs
scas
dec
xchg
mov
or
sbb
cwde
lods
push
jp
add
xchg
jp
add
sbb
cwde
rcr
jp
add
xor
push
cmps
pop
jg
pusha
xchg
xchg
xchg
xor
jp
add
inc
sbb
in
mov
jnp
add
(bad)
(bad)
jmp
xchg
in
lods
aad
sub
in
pusha
add
add
sbb
in
push
fdivr
sti
(bad)
(bad)
(bad)
jmp
(bad)
in
popa
aad
in
sub
in
xchg
xchg
xor
dec
add
xchg
out
mov
mov
cmp
dec
dec
pop
jecxz
xchg
and
ror
cmp
outs
inc
sti
xchg
aas
dec
cmp
dec
dec
fs
or
xor
add
jmp
dec
inc
ds
push
lea
dec
add
add
pop
jmp
jecxz
jmp
lods
fstp
jp
dec
push
mov
mov
(bad)
cmp
dec
lods
mov
xchg
sahf
jp
add
and
ror
mov
or
in
fimul
cmp
cmp
mov
call
dec
repz
mov
inc
add
mov
call
dec
xchg
sahf
(bad)
inc
add
dec
sahf
jnp
cwde
or
cmp
jecxz
cmp
mov
push
(bad)
jle
mov
xlat
mov
div
dec
or
cmp
push
aad
adc
dec
cmp
add
add
dec
xchg
adc
cmp
hlt
dec
dec
cmp
add
add
(bad)
lods
mov
lods
xor
(bad)
in
xor
(bad)
inc
add
mov
fcomp
xchg
lahf
sti
(bad)
cmp
cmps
fwait
(bad)
jmp
cmc
ds
in
pusha
in
test
dec
xchg
adc
xlat
add
add
xchg
dec
add
(bad)
jmp
push
or
bnd
add
xchg
push
dec
cmp
xchg
lahf
mov
pusha
and
cwde
mov
add
and
add
or
lods
xor
lods
mov
mov
add
in
push
dec
js
dec
imul
mov
in
inc
fwait
(bad)
jmp
add
or
div
cmp
lahf
cwde
aaa
cmp
in
imul
pusha
in
int
inc
dec
mov
add
dec
cmp
xchg
ss
dec
jmp
in
adc
add
test
test
mov
and
mov
mov
jp
mov
dec
jp
push
pop
jp
in
jp
jg
jp
dec
(bad)
js
les
mov
xchg
jmp
in
inc
aad
lods
mov
pop
fiadd
mov
not
xchg
add
jl
add
in
mov
add
lea
fmul
dec
sti
and
(bad)
mov
lods
pop
lods
mov
inc
lods
mov
inc
lods
mov
mov
fmul
cmp
stos
dec
inc
stos
inc
dec
jg
add
call
stos
outs
cmp
add
call
dec
jmp
adc
not
adc
lods
mov
add
dec
les
dec
in
popf
in
pop
push
movs
call
or
cmp
push
int3
call
in
pusha
in
test
dec
(bad)
not
(bad)
aad
scas
in
mov
cmp
push
int3
call
xchg
or
dec
cmp
in
pusha
ficomp
stos
cwde
adc
stos
not
mov
dec
cmp
add
lods
ror
aad
lods
cld
fldlg2
int
sbb
cwde
sbb
jmp
inc
and
cmp
lods
push
rcl
add
(bad)
dec
or
add
xor
(bad)
dec
mov
repz
mov
add
add
or
dec
cmp
lods
xchg
push
aam
(bad)
(bad)
in
pusha
aad
sti
cwde
and
cmp
test
(bad)
(bad)
inc
and
and
(bad)
(bad)
call
dec
(bad)
fadd
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
idiv
test
jmp
dec
(bad)
js
les
(bad)
in
sti
outs
dec
(bad)
imul
test
dec
cmp
push
aaa
call
xor
jno
test
xchg
xchg
xchg
xchg
xchg
aaa
add
sbb
test
lods
sub
mov
bound
dec
add
aad
scas
call
imul
int3
dec
dec
les
mov
dec
lods
pop
push
add
add
adc
les
sti
stos
neg
(bad)
dec
les
dec
clc
xchg
add
add
(bad)
fsubr
call
or
retf
in
lods
dec
xchg
jp
mov
jecxz
mov
dec
cmp
sub
add
fmul
add
aad
add
and
jo
ret
test
cmp
lahf
(bad)
jns
mov
jg
mov
test
cmp
lahf
push
aaa
cmp
lahf
sbb
or
out
in
sub
call
jns
mov
adc
(bad)
(bad)
(bad)
(bad)
in
int
in
scas
cwde
adc
cwde
or
call
out
lahf
addr16
jecxz
add
call
or
out
loope
pop
jecxz
repz
scas
scas
out
dec
xchg
sti
aad
jmp
sub
(bad)
push
out
inc
push
lods
dec
xchg
(bad)
lods
mov
dec
cmp
fldcw
jecxz
mov
add
cwde
je
scas
jecxz
xchg
jmp
mov
lahf
dec
loope
(bad)
(bad)
jmp
pop
dec
in
pop
lods
and
test
add
pop
test
pusha
in
or
in
jmp
pop
div
jnp
inc
dec
aaa
add
add
call
cwde
inc
cmp
cwde
and
dec
cmp
or
call
mov
cmp
dec
cmp
lahf
xchg
dec
cmp
out
or
cmp
in
pusha
pop
jge
test
(bad)
in
pusha
stos
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
aad
mov
mov
imul
jmp
dec
(bad)
js
les
xchg
in
pop
fmul
cmp
in
sti
xchg
lea
adc
inc
lods
sub
call
in
sti
test
(bad)
dec
dec
out
lods
sub
in
popf
dec
mov
fstp
add
sti
push
movs
cwde
lock
add
ja
lods
add
cmp
sti
inc
stos
inc
xchg
jmp
pusha
in
adc
dec
inc
test
aaa
add
adc
test
dec
add
pop
test
add
in
sti
idiv
add
mov
and
cld
sbb
(bad)
push
movs
ds
dec
int3
lahf
jp
push
stos
(bad)
in
jmp
in
sti
not
sbb
jbe
lea
pop
ss
sbb
(bad)
(bad)
in
mov
inc
dec
add
mov
fadd
inc
stos
inc
in
pop
xrelease
add
and
lods
or
inc
aaa
add
add
lods
call
lahf
sub
ret
cld
(bad)
push
movs
scas
xchg
in
lods
(bad)
in
popf
(bad)
in
sti
not
(bad)
dec
sub
(bad)
(bad)
(bad)
(bad)
in
sti
div
(bad)
(bad)
mov
cs
mov
jnp
shl
cmp
mov
mov
mov
add
add
imul
rol
cmp
dec
in
lea
lods
test
cwde
iret
inc
test
(bad)
cmp
in
(bad)
(bad)
in
idiv
in
sti
test
lods
sub
test
(bad)
in
pusha
rep
test
dec
js
les
in
sti
dec
neg
mov
mov
scas
rol
add
lods
xchg
call
lods
fadd
(bad)
in
popf
stos
inc
dec
mov
sti
inc
lahf
jp
pusha
and
popf
stos
test
(bad)
mov
addr16
push
dec
mov
and
mov
pushf
outs
cmp
(bad)
or
mov
aaa
jge
sbb
dec
(bad)
js
les
sbb
dec
push
dec
mov
and
mov
mov
pushf
outs
popf
out
jns
sub
xchg
cwde
adc
(bad)
cwde
loope
xchg
mov
push
mov
add
call
add
add
call
add
add
add
pop
or
(bad)
or
outs
jb
sub
or
or
dec
shl
lahf
sub
push
(bad)
or
outs
jb
sub
or
or
jp
test
(bad)
jmp
(bad)
or
outs
jb
sub
push
or
(bad)
jge
pop
in
mov
add
int3
jnp
addr16
and
pusha
add
mov
sbb
dec
(bad)
js
les
sti
dec
in
inc
push
push
in
ins
not
mov
dec
dec
dec
dec
aaa
add
xlat
add
xchg
mov
sbb
jmp
mov
in
int3
add
add
add
add
add
add
js
les
lods
repnz
dec
mov
jne
fldcw
add
sbb
jns
call
push
dec
lods
aaa
dec
aam
ds
pop
jp
pushf
aam
ds
pop
jp
push
aam
in
repnz
repz
in
push
in
not
and
(bad)
(bad)
ds
movs
dec
dec
pop
in
test
les
mov
xchg
jmp
dec
sbb
dec
xchg
outs
in
sti
outs
mov
imul
add
add
dec
xchg
xchg
push
(bad)
jmp
aas
push
cmp
add
push
add
int
push
cmp
add
cmp
push
cmp
add
sbb
add
movs
add
mov
push
cmp
inc
aaa
cmp
dec
add
add
neg
retf
lahf
(bad)
push
inc
jp
dec
in
mov
mov
in
dec
and
and
in
sub
int
push
xchg
cwde
and
fld
jp
inc
jecxz
push
inc
(bad)
out
sar
in
pusha
fdivp
mov
add
fwait
(bad)
jmp
cmc
cwde
and
add
add
pusha
fiadd
add
or
(bad)
in
(bad)
and
call
fsubrp
mov
mov
neg
add
pusha
in
repnz
in
push
jae
dec
(bad)
mov
in
out
and
in
xor
dec
(bad)
mov
xchg
stos
div
scas
(bad)
jmp
and
jg
dec
dec
dec
dec
neg
out
test
lods
sub
jo
mov
inc
(bad)
fcom
(bad)
jmp
and
jg
dec
dec
dec
dec
not
sub
pusha
repz
add
cwde
or
dec
movs
push
imul
sti
dec
push
dec
not
pusha
dec
outs
iret
sti
popf
arpl
les
lods
cwde
or
neg
dec
and
mov
xrelease
push
add
xchg
pop
cwde
iret
push
add
mov
mov
imul
xchg
push
pop
cwde
iret
and
add
add
jecxz
neg
add
push
dec
xchg
pop
add
add
adc
ds
dec
lea
sub
cmp
xchg
sbb
test
xchg
dec
dec
jmp
add
add
xchg
fwait
loope
jmp
dec
cmps
outs
(bad)
sbb
jmp
call
add
sbb
cwde
lods
xor
add
loope
xor
test
add
xor
push
test
lods
in
inc
xchg
test
repz
in
inc
sbb
in
mov
jnp
idiv
(bad)
(bad)
jmp
std
in
lods
aad
and
repnz
pusha
add
add
sbb
in
pop
mov
fdivrp
(bad)
(bad)
(bad)
jmp
(bad)
in
(bad)
aad
call
mov
cmp
add
add
pop
dec
js
jecxz
xchg
and
sar
jg
lods
pusha
sti
xchg
xchg
out
cmp
cmp
cwde
or
dec
dec
jmp
je
lods
xor
(bad)
sbb
sahf
ds
push
dec
scas
mov
add
add
inc
jmp
jecxz
push
lods
cmp
jp
dec
adc
jmp
inc
inc
(bad)
cmp
dec
pusha
lods
mov
xchg
aaa
jp
add
and
rcr
cmp
in
retf
dec
cmp
xor
dec
repz
dec
xchg
mov
cmp
pusha
repnz
xchg
aaa
(bad)
inc
add
(bad)
jmp
jmp
inc
add
dec
aaa
jnp
cwde
or
mov
call
mov
js
push
fstp
gs
dec
dec
lea
mov
repz
rol
(bad)
in
push
aad
push
call
fwait
add
add
dec
xchg
adc
lea
hlt
dec
dec
lea
add
add
(bad)
lods
mov
lods
xor
(bad)
in
xor
(bad)
inc
add
mov
mov
sub
lahf
sti
(bad)
cmp
(bad)
cmp
add
sbb
add
in
pusha
in
test
dec
xchg
and
xchg
xlat
add
add
xchg
dec
add
(bad)
jmp
inc
push
xchg
cwde
and
mov
dec
test
mov
inc
add
fwait
(bad)
jmp
out
cwde
xor
add
(bad)
cmp
in
int
js
xchg
xchg
xchg
dec
js
cwde
or
dec
mov
movs
dec
xchg
dec
cmc
xchg
nop
add
add
dec
mov
sbb
inc
sbb
cwde
lods
jb
add
sbb
cwde
lods
inc
jp
add
sbb
cwde
rol
add
fwait
xor
push
lea
sub
pusha
xchg
std
xchg
and
aad
add
or
repnz
and
mov
cmp
cmp
xchg
(bad)
in
pusha
in
inc
adc
fwait
cwde
mov
add
or
xchg
div
push
mov
(bad)
in
pusha
sbb
in
ins
inc
jnp
idiv
(bad)
(bad)
jmp
std
in
sub
test
mov
add
inc
jnp
(bad)
(bad)
(bad)
jmp
cmp
test
cmp
cwde
iret
inc
(bad)
(bad)
inc
mov
cmp
add
add
pop
dec
dec
pusha
jecxz
xchg
and
rcl
fiadd
mov
cwde
or
sbb
cwde
je
dec
xchg
jmp
xor
push
mov
(bad)
push
movs
scas
mov
add
add
jge
call
fwait
jp
fdivrp
dec
push
lods
mov
mov
(bad)
cmp
dec
pusha
lods
mov
xchg
push
jp
add
and
ror
mov
or
cmp
xor
dec
repz
dec
xchg
mov
jmp
xchg
push
(bad)
inc
add
inc
jmp
jmp
inc
add
dec
push
jnp
cwde
or
lea
dec
call
mov
js
push
fstp
jle
ror
dec
push
mov
repz
rol
(bad)
in
push
aad
adc
dec
lea
add
add
dec
xchg
adc
lea
hlt
dec
dec
lea
add
add
(bad)
lods
mov
lods
xor
(bad)
in
xor
(bad)
inc
add
mov
inc
lahf
sub
lahf
sti
(bad)
cmp
(bad)
cmp
add
in
pusha
in
test
dec
xchg
and
xchg
xlat
add
add
xchg
dec
add
(bad)
jmp
push
or
repnz
add
xchg
push
dec
cmp
xchg
jmp
pop
cwde
mov
add
and
add
or
lods
xor
add
xchg
dec
dec
js
dec
cmp
dec
mov
call
jmp
xchg
add
add
adc
mov
fsub
dec
cwde
and
fnop
fdivr
fadd
out
push
fsub
(bad)
jmp
fadd
dec
lods
xchg
test
add
pusha
add
sti
add
add
and
std
dec
dec
std
push
xor
dec
div
dec
cmp
dec
repz
pusha
repnz
dec
xchg
std
xchg
imul
fisub
inc
mov
pushf
inc
add
rcr
dec
sbb
dec
dec
std
push
fcomi
dec
and
dec
cmp
dec
xlat
mov
div
dec
or
and
inc
jmp
outs
jne
xchg
pusha
xchg
push
and
pop
add
add
and
std
outs
in
and
sub
push
xor
dec
mov
dec
jmp
dec
js
dec
lea
mov
int
cmps
dec
dec
outs
inc
popf
popa
dec
js
dec
jle
repnz
dec
cmp
bnd
mov
mov
scas
xchg
outs
inc
dec
in
int
push
mov
jecxz
int
dec
lea
int
dec
loop
cmp
js
push
cmps
ds
push
cmc
scas
dec
loop
dec
add
mov
div
out
outs
inc
in
and
sbb
xchg
jecxz
or
dec
aaa
dec
div
inc
dec
lods
mov
std
push
cmp
(bad)
(bad)
jmp
jns
sub
dec
pusha
lahf
cmp
push
aad
test
out
sub
sbb
test
sbb
mov
jo
or
shl
add
daa
dec
dec
jmp
in
adc
pop
sub
out
in
mov
inc
dec
cmp
push
movs
scas
adc
int
xchg
adc
mov
fsubp
dec
cwde
sbb
shr
push
fisub
(bad)
(bad)
in
pusha
inc
int3
lods
call
jecxz
xchg
mov
sti
inc
int3
jp
jecxz
xchg
lods
inc
int3
dec
call
add
sti
add
dec
add
dec
out
dec
loope
jp
add
dec
add
call
out
in
pop
jg
popf
add
lahf
popf
jg
sti
add
lahf
mov
add
xchg
xlat
add
jecxz
call
add
ss
lahf
jp
sahf
in
int3
add
mov
lods
add
int3
in
pusha
inc
sahf
lods
call
cmp
xchg
ja
jp
add
call
call
inc
sahf
jp
mov
add
call
xor
jnp
add
sti
add
out
loope
jecxz
add
mov
sbb
repnz
call
add
lahf
popf
jg
fiadd
add
add
pop
add
add
jge
push
in
xchg
fld
add
dec
call
jp
sbb
push
in
cwde
jg
or
add
lods
xchg
fmulp
jg
or
add
dec
(bad)
js
les
xchg
add
mov
in
int
int3
dec
call
(bad)
call
sti
call
lods
call
fstp
inc
int3
jp
ss
out
add
sti
add
loope
popf
add
dec
push
xor
call
call
call
sbb
add
add
dec
add
dec
sbb
jp
add
sub
dec
add
add
jnp
add
out
add
mov
dec
sti
dec
aaa
jnp
dec
sahf
dec
sbb
dec
xchg
popf
push
sahf
cwde
iret
(bad)
add
add
neg
test
call
jmp
fucomi
add
mov
in
int
int3
dec
call
(bad)
call
sti
call
lods
call
fstp
inc
int3
jp
ss
out
add
sti
add
dec
push
call
call
call
out
add
add
lahf
sub
add
lahf
ss
out
add
add
add
jp
add
sub
dec
add
add
jnp
add
out
add
mov
sahf
in
inc
aad
sub
mov
add
xchg
mov
xchg
dec
cmp
fsubr
add
xchg
add
add
call
sti
add
call
lods
add
call
dec
add
call
add
ja
add
dec
add
fld
add
fiadd
add
xchg
xchg
call
lahf
sub
add
lahf
ss
call
xor
dec
aaa
lods
neg
call
call
xchg
call
lahf
sub
add
lahf
ss
call
dec
cmp
dec
cmc
dec
cmp
jnp
dec
cmps
repnz
push
cmps
in
mov
add
add
xchg
mov
jmp
jmp
(bad)
mov
dec
dec
mov
int
idiv
jecxz
lods
jne
dec
add
add
jnp
add
add
call
add
add
call
add
out
dec
loope
dec
add
and
call
add
dec
int3
call
call
call
out
add
add
lahf
sbb
add
sbb
xchg
repz
jmp
lods
repz
xchg
xchg
out
add
add
sub
add
lahf
ss
out
add
add
sahf
dec
xchg
in
dec
popf
repnz
sti
add
add
jge
pop
test
les
mov
xchg
jmp
cmp
aaa
cmp
or
add
xchg
xchg
xchg
aad
popf
cwde
lock
dec
add
dec
lods
dec
mov
dec
lea
lea
imul
mov
scas
addr16
dec
sar
dec
movs
dec
gs
div
call
jnp
xor
add
dec
lahf
mov
test
sbb
repnz
out
xchg
push
test
(bad)
push
ret
aaa
cmp
dec
add
add
pop
xchg
fild
dec
push
test
dec
scas
jecxz
pop
inc
xchg
and
call
rol
dec
js
outs
xor
in
inc
push
movs
ds
push
mov
xchg
(bad)
fdivrp
dec
dec
mov
xor
add
inc
dec
sbb
mov
fisttp
sti
dec
movs
dec
gs
xor
js
repnz
xchg
xchg
xchg
(bad)
hlt
xchg
push
inc
ds
push
test
les
add
lods
mov
call
push
sbb
mov
jecxz
int
xchg
(bad)
and
call
dec
popf
(bad)
cmp
lods
mov
std
test
(bad)
in
inc
lahf
pop
dec
rol
dec
push
dec
jmp
dec
fisttp
lods
dec
jle
repnz
lods
xchg
cmp
(bad)
inc
add
aad
sti
call
and
dec
pop
(bad)
xchg
cmp
(bad)
inc
add
jecxz
dec
repz
out
outs
inc
inc
dec
sar
dec
sbb
div
out
xchg
xchg
sti
and
call
xchg
sbb
jmp
in
adc
in
test
test
fsub
stos
fsub
jae
add
fidiv
dec
(bad)
mov
(bad)
mov
mov
mov
imul
(bad)
mov
sti
lods
mov
jmp
mov
sti
lods
mov
jmp
add
outs
fdivr
pop
int3
outs
sub
add
add
sub
in
pusha
jns
sub
cmp
fimul
sti
dec
(bad)
sub
jnp
jecxz
add
call
aam
call
sahf
jecxz
add
in
lahf
repnz
lods
dec
repnz
xor
dec
dec
dec
jnp
add
(bad)
jecxz
lods
inc
jmp
in
push
lods
sahf
(bad)
xchg
xlat
add
xchg
in
xor
dec
dec
xchg
call
in
sti
xchg
pushf
add
add
in
and
pop
in
pusha
int3
dec
fsubr
aam
call
nop
call
imul
pusha
call
std
call
fdivr
pop
int3
outs
fadd
fdiv
outs
fsubr
in
pop
int3
add
dec
(bad)
js
les
sti
fadd
stos
inc
sbb
add
add
add
add
add
dec
dec
inc
dec
inc
sti
aaa
sbb
mov
dec
sti
dec
and
stos
dec
dec
inc
popf
and
dec
inc
in
add
add
add
dec
(bad)
js
les
sti
dec
dec
popf
jae
fbld
getsec
cmp
xchg
mov
dec
mov
add
add
add
test
add
add
add
add
add
add
add
add
dec
(bad)
js
les
sti
dec
dec
inc
aaa
sbb
mov
or
dec
stos
sti
dec
sahf
xchg
aaa
inc
popf
add
add
and
sti
dec
sti
dec
and
stos
dec
dec
push
in
sahf
mov
add
add
js
les
inc
dec
inc
sti
aaa
sbb
mov
dec
sti
dec
and
stos
dec
dec
inc
popf
and
mov
mov
sti
dec
call
jmp
in
sahf
mov
mov
mov
ror
(bad)
and
cmp
rcr
jecxz
out
and
mul
and
jmp
inc
int3
xchg
(bad)
repz
xchg
out
repz
(bad)
dec
dec
dec
fsubrp
int3
cmp
loope
(bad)
mov
hlt
inc
stos
inc
dec
ins
shr
(bad)
mov
push
xor
(bad)
mov
(bad)
mov
xchg
fcom
mov
dec
lea
jp
inc
dec
aaa
inc
lods
sbb
add
enter
(bad)
mov
(bad)
mov
fidiv
int3
xchg
xor
dec
faddp
int3
js
les
jl
inc
mov
pusha
in
xor
mov
stos
aaa
cmp
(bad)
fdiv
test
dec
and
and
in
mov
int3
stos
ud0
test
faddp
and
xor
mov
stos
aaa
cmp
adc
inc
test
lods
xlat
mov
push
push
(bad)
mov
js
les
mov
(bad)
mov
(bad)
mov
cmp
fsubr
jmp
idiv
add
lods
sub
les
(bad)
and
xor
mov
stos
aaa
cmp
idiv
in
popf
(bad)
in
sti
stos
not
mov
popf
sbb
les
jl
(bad)
mov
pusha
in
xor
mov
stos
aaa
cmp
xchg
rol
mov
jmp
add
int3
js
les
inc
mov
cmp
stos
inc
div
mov
outs
cmp
stos
not
pop
add
outs
cmp
stos
idiv
add
mov
stos
not
and
add
jg
add
mul
dec
lahf
jp
pusha
in
int3
js
les
dec
faddp
and
xor
mov
stos
aaa
cmp
lods
rol
mov
(bad)
fmul
div
mov
les
cmp
popf
dec
stos
push
inc
fadd
fmul
in
sti
neg
xchg
mov
in
sahf
xor
js
les
dec
cmp
xchg
in
cmps
outs
dec
sti
idiv
test
and
ins
outs
dec
sti
mul
faddp
lods
pop
sti
add
popf
fadd
inc
in
pusha
lahf
cld
outs
dec
sti
div
test
and
in
dec
sti
test
dec
(bad)
outs
cmp
outs
pop
scas
outs
sbb
dec
call
jmp
mov
popf
stos
dec
test
repnz
(bad)
(bad)
in
scas
lods
pusha
(bad)
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
jmp
xchg
jmp
ret
call
lods
(bad)
in
popf
(bad)
in
sti
call
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
inc
jge
pop
neg
les
outs
dec
sti
div
test
and
repnz
dec
sti
div
faddp
mov
les
and
dec
mov
(bad)
in
sti
lods
aaa
scas
outs
sbb
dec
sbb
pop
push
jmp
(bad)
mov
lahf
hlt
outs
cmp
stos
test
dec
popf
xchg
(bad)
adc
sahf
sti
add
les
mov
dec
rcr
mov
mov
mov
idiv
push
test
dec
cmp
xchg
les
scas
jecxz
xchg
lea
sti
jnp
addr16
and
add
fiadd
popf
outs
cmp
stos
xchg
sbb
add
dec
int3
or
test
dec
std
xchg
mov
cmp
dec
cmc
or
std
or
or
std
or
mov
dec
mov
mov
dec
js
or
mov
js
dec
dec
scas
or
xchg
dec
js
xchg
lods
dec
cmp
sbb
dec
out
xchg
inc
out
(bad)
mov
inc
sti
(bad)
in
scas
(bad)
in
lods
cmp
(bad)
in
popf
(bad)
in
sti
inc
(bad)
in
xchg
inc
outs
rol
mov
aaa
cmp
sub
(bad)
jmp
hlt
jae
ret
fsubr
dec
push
neg
inc
lods
dec
sbb
xchg
test
fadd
dec
xchg
mul
jmp
dec
jge
neg
les
pop
or
mov
mov
dec
aaa
cmp
out
add
add
cmp
ret
xchg
fiadd
out
(bad)
mov
cmp
cmp
cmp
inc
xchg
test
xchg
les
add
cmp
xchg
mov
add
xchg
test
mov
aaa
cmp
push
push
sahf
popf
add
add
neg
test
in
idiv
push
mov
movs
mul
xchg
xchg
xor
pop
xchg
jmp
ret
(bad)
in
lods
aaa
inc
popf
sti
mov
mov
imul
(bad)
push
inc
lods
sub
jp
lahf
ss
popf
xchg
lods
xchg
sti
xchg
mov
call
push
inc
mov
jg
inc
mov
cs
mov
inc
mov
push
loop
aad
add
xor
inc
mov
inc
add
sahf
dec
mov
add
int3
js
les
cmp
xchg
in
inc
jae
fld
add
data16
dec
fidiv
(bad)
sub
add
test
push
(bad)
sub
lods
add
cmp
mov
(bad)
mov
jae
dec
add
xchg
cmp
sbb
mov
dec
dec
dec
dec
outs
cmp
stos
dec
dec
xchg
inc
cmp
scas
je
call
dec
jmp
mov
int3
js
les
and
stos
cmp
mov
fiadd
add
add
int3
call
add
pop
mov
mov
lods
xchg
call
setnp
add
cwde
mov
mov
mov
dec
les
sti
sbb
js
les
(bad)
mov
(bad)
mov
cmps
cmp
and
mov
outs
bound
inc
add
xchg
aaa
cmp
fld
add
dec
cmp
jp
cmp
je
jbe
dec
les
jmp
sbb
dec
retf
mov
dec
xchg
cwde
adc
call
jnp
jp
cwde
adc
cwde
je
jmp
ror
dec
jnp
dec
xchg
dec
cmp
cwde
je
les
ret
dec
cmp
(bad)
out
cwde
je
les
sbb
lods
push
(bad)
dec
xchg
cwde
adc
mov
je
jmp
jnp
jp
dec
ror
mov
and
(bad)
(bad)
dec
mov
rcl
push
(bad)
(bad)
(bad)
jge
pop
test
(bad)
mov
add
dec
les
movs
and
ror
pusha
mov
add
jecxz
sti
dec
jecxz
popf
xchg
dec
fisttp
(bad)
in
lods
xchg
dec
test
test
jecxz
lods
lods
sbb
add
in
mov
int3
pop
ror
jecxz
dec
hlt
add
shr
lods
dec
jecxz
pusha
(bad)
xchg
rcl
(bad)
mov
dec
les
mov
dec
sti
fadd
jae
lods
add
fadd
(bad)
in
sti
inc
(bad)
mov
sbb
js
les
mov
(bad)
in
sti
dec
sti
inc
(bad)
mov
sbb
dec
xchg
in
(bad)
in
inc
aad
scas
inc
mov
int3
dec
pushf
(bad)
not
xchg
mov
cwde
or
outs
shl
sub
or
call
leave
sub
or
call
xor
pop
mov
call
ds
jge
push
in
js
les
lea
outs
rol
(bad)
dec
mov
fadd
stos
neg
test
xchg
mov
cmp
mul
in
jmp
dec
fidivr
jp
inc
cmp
in
mov
mov
pusha
call
cmp
stos
outs
cmp
(bad)
mov
test
and
xchg
lods
mov
dec
cmp
cmp
push
push
test
or
sti
cmp
xchg
push
test
in
pusha
mov
int3
js
les
lods
pop
xchg
sti
mov
jecxz
pusha
(bad)
cmp
pop
cmp
dec
jmp
cmp
add
cmp
cmp
(bad)
in
sti
inc
and
mov
int3
(bad)
in
popf
inc
lods
rcl
mov
jecxz
inc
(bad)
and
in
popf
fmul
stos
(bad)
in
jmp
add
(bad)
mov
(bad)
in
jmp
sbb
lahf
pusha
mov
jle
dec
les
cmp
in
pop
xchg
xor
or
mov
adc
mov
mov
call
inc
mov
jg
inc
mov
or
(bad)
mov
mov
dec
cmp
jecxz
cmp
(bad)
mov
and
in
xor
mov
cmp
stos
fmul
(bad)
mov
mov
mov
cmps
xchg
inc
cmp
dec
outs
dec
sti
not
mov
jge
pop
test
mov
popf
scas
jecxz
cmp
xor
(bad)
mov
sti
pop
lods
call
pop
fadd
fmul
in
sti
div
int3
pop
sbb
js
les
cmp
popf
cmp
stos
inc
lods
mov
lods
in
(bad)
mov
jp
pop
fadd
fmul
in
sti
div
jns
pop
sbb
fadd
fwait
pop
mov
int3
test
lods
xor
add
test
sti
mul
mov
mov
xor
fadd
fmul
in
sti
neg
mul
add
mov
sahf
sub
call
lahf
enter
(bad)
mov
xchg
sub
call
lahf
mov
test
sti
div
iret
pusha
call
lahf
jl
and
sti
not
sub
call
lahf
shr
call
dec
cmp
mov
outs
cmp
mov
pop
cmp
and
sub
call
sti
neg
jg
(bad)
cmp
dec
outs
in
sub
or
push
int3
aad
or
mov
dec
cmp
outs
cmp
outs
dec
mov
cmp
(bad)
in
mov
(bad)
mov
rcr
(bad)
(bad)
in
mov
(bad)
mov
in
sti
div
fmul
in
sub
repz
mov
jns
call
dec
lahf
cmps
fadd
fwait
push
mov
sahf
test
lods
xor
add
cmp
popf
stos
not
int
add
outs
in
sti
div
push
xor
test
int3
js
les
cmp
in
inc
xchg
dec
fiadd
dec
test
neg
scas
mov
sub
int3
imul
scas
mov
sub
int3
idiv
mov
sub
int3
test
inc
ss
aad
scas
jmp
lahf
dec
imul
inc
sub
int3
not
mov
sub
int3
imul
lods
or
int3
mul
lods
or
push
jnp
aaa
and
dec
inc
scas
rcr
mov
sti
cmp
jne
mov
lahf
cwde
or
mov
cmp
xchg
dec
in
sti
mul
scas
mov
jge
push
in
test
and
in
pusha
dec
xor
inc
mov
(bad)
in
lods
(bad)
in
popf
div
aaa
(bad)
jmp
sub
popf
repnz
xchg
jmp
js
in
mov
dec
in
sti
imul
push
in
test
lods
xor
add
inc
in
test
mov
mov
jge
jnp
sahf
out
add
in
arpl
scas
pop
mov
jge
push
in
int3
js
les
lods
xor
add
mov
dec
inc
in
neg
jp
cmp
jp
jnp
cwde
mov
jnp
repnz
and
xchg
add
scas
mov
(bad)
lahf
jecxz
cli
(bad)
jecxz
stos
and
pop
das
test
dec
jmp
in
pusha
cmp
xchg
into
inc
cmp
cdq
popa
mov
cmp
lds
in
test
mov
dec
test
dec
cmp
dec
inc
add
(bad)
mov
(bad)
in
lods
xchg
add
popf
stos
cmp
repz
add
sbb
jmp
int3
in
hlt
dec
in
add
clc
(bad)
mov
dec
lahf
jne
neg
jp
jnp
cwde
mov
jnp
repnz
and
push
add
(bad)
in
lods
(bad)
in
cmp
cmps
(bad)
in
xchg
outs
cmp
(bad)
in
cmc
imul
in
cmc
xchg
jmp
push
lds
outs
cmp
stos
test
dec
outs
in
cmp
mov
mov
dec
cmp
div
fadd
fwait
mov
(bad)
mov
jmp
xor
add
stos
add
not
test
lods
mov
dec
cmp
cmp
add
cs
mov
mov
mov
xchg
neg
fadd
fmul
in
sti
neg
test
(bad)
pusha
test
int3
js
les
test
mov
xchg
jmp
imul
add
outs
and
retf
stos
fadd
dec
inc
inc
outs
and
retf
stos
not
dec
jmp
push
in
adc
test
push
int3
fcom
fwait
push
ss
mov
dec
sti
dec
inc
in
imul
cmp
xchg
outs
rol
(bad)
dec
mov
dec
ins
fwait
cs
mov
dec
xchg
push
and
scas
dec
in
push
jae
clc
(bad)
mov
dec
repz
add
add
neg
jp
jnp
cwde
mov
jnp
repnz
and
retf
jmp
xchg
adc
lahf
jp
aaa
dec
in
push
in
call
stos
dec
and
or
dec
(bad)
in
adc
lods
jns
(bad)
(bad)
in
adc
or
jmp
cmp
mov
ficom
cs
mov
lea
inc
in
cwde
dec
in
push
jae
clc
(bad)
mov
call
jp
dec
push
jnp
cwde
mov
jnp
repnz
and
dec
adc
dec
fimul
fidivr
fimul
stos
call
or
outs
cmp
(bad)
cmp
cmp
dec
div
in
push
mov
mul
fmul
in
fwait
idiv
fmul
in
cmp
jno
mov
dec
cmp
test
dec
les
lods
xor
add
mov
in
xor
add
imul
sub
mov
add
inc
stos
inc
mov
dec
in
int3
fcomp
test
mov
dec
sti
xchg
les
popf
in
pop
xchg
test
or
popf
fdiv
jbe
jnp
xchg
lea
pusha
inc
and
in
lea
not
scas
mov
dec
fisubr
dec
mov
or
popf
fdiv
jbe
jnp
(bad)
cmp
pop
dec
in
(bad)
div
cwde
mov
lods
xor
add
aaa
cmp
test
mov
dec
mov
or
popf
fdiv
jbe
jnp
in
pop
and
jb
in
test
imul
mov
stos
outs
cmp
stos
test
mov
lods
sbb
dec
add
add
(bad)
fadd
test
fmul
in
add
jmp
imul
mov
or
popf
fdiv
jbe
jnp
inc
push
fidivr
push
dec
in
les
scas
and
sti
ror
test
dec
test
test
int3
jae
add
add
mul
sub
cmp
add
cmp
(bad)
(bad)
in
pop
stos
xchg
out
lods
pop
mov
xor
xchg
stos
outs
cmp
stos
xchg
jmp
hlt
sub
jmp
dec
outs
add
cmp
jp
gs
lods
les
outs
cmp
dec
mov
xor
stos
test
mov
div
mov
xor
int3
in
scas
dec
in
mov
test
dec
repz
jp
add
out
dec
aaa
aaa
cmp
ins
add
add
std
scas
mov
fsub
in
test
sbb
xchg
adc
push
cmp
(bad)
in
pop
lods
mov
fdivr
outs
cmp
les
movs
(bad)
mov
test
mov
repz
add
(bad)
in
out
add
mul
sub
outs
dec
fwait
and
pop
push
cmp
mov
(bad)
cmp
dec
push
cmp
(bad)
test
dec
out
call
(bad)
push
cmp
outs
and
lods
movs
(bad)
mov
neg
sbb
and
pop
push
cmp
mov
(bad)
cmp
dec
outs
add
les
dec
outs
add
(bad)
(bad)
call
jmp
test
sbb
mov
div
mov
aaa
cmp
dec
add
add
out
outs
or
pop
(bad)
dec
jae
add
outs
and
(bad)
(bad)
jmp
neg
and
jmp
fwait
and
(bad)
jmp
div
stos
outs
and
push
cmp
sbb
iret
and
jmp
push
stos
outs
and
(bad)
(bad)
jmp
mul
sub
jmp
cmp
in
pop
push
cmp
popf
imul
mov
cmp
dec
outs
add
(bad)
(bad)
push
inc
mov
dec
outs
add
mov
dec
outs
add
(bad)
(bad)
push
dec
mov
dec
outs
add
(bad)
(bad)
push
and
outs
add
cmp
(bad)
mul
mov
xor
cmp
xchg
(bad)
(bad)
jmp
push
out
(bad)
jmp
call
out
dec
add
cwde
daa
sub
add
mov
and
div
sub
in
mov
div
adc
outs
add
add
cmp
in
push
mov
cmp
in
fwait
idiv
mov
xchg
cmp
in
cmp
or
mov
dec
cmp
dec
dec
in
mov
div
mov
cmp
dec
outs
in
push
cs
mov
cmp
dec
outs
in
fwait
idiv
mov
repz
mov
(bad)
fsubr
fwait
out
(bad)
mov
dec
sti
in
inc
cmc
xchg
les
mov
ficom
jmp
in
pop
xchg
lahf
xchg
dec
cmp
or
stos
outs
cmp
mov
outs
dec
cmp
stos
outs
cmp
(bad)
neg
sub
fdivr
xchg
outs
in
cmp
jmp
not
xchg
mov
xchg
fmul
in
mov
call
adc
div
jecxz
dec
mov
cmc
outs
xor
cmp
cmp
imul
repnz
xchg
cmc
outs
in
adc
sub
jmp
popf
stos
test
mov
stos
outs
cmp
stos
(bad)
in
add
jmp
idiv
jmp
xchg
inc
cmp
lock
call
idiv
jecxz
call
idiv
jecxz
call
div
mov
xchg
cmp
in
cmp
in
mov
dec
cmp
mul
test
int3
fcomp
mov
jmp
inc
xchg
div
call
xor
add
pop
fdivr
inc
mov
sbb
neg
inc
mov
aaa
cmp
dec
cmp
sti
dec
aaa
dec
test
or
cmp
inc
(bad)
mov
mov
lods
mov
mov
stos
idiv
(bad)
stc
sbb
imul
test
int3
fcom
mov
dec
in
inc
imul
pop
inc
xchg
jmp
jmp
cmp
xchg
(bad)
sbb
div
mov
sar
lea
sti
neg
and
dec
test
or
(bad)
mov
in
and
neg
push
mov
dec
mov
neg
mov
cwde
adc
lods
and
(bad)
mov
in
std
dec
test
sbb
mov
(bad)
cmp
cmp
cld
cdq
fadd
cmp
dec
sti
imul
sti
mov
dec
push
div
pop
test
int3
fcomp
mov
jmp
pop
inc
dec
rol
or
mov
xor
mov
mov
mov
fwait
test
(bad)
mov
(bad)
mov
test
add
les
inc
scas
or
mov
(bad)
in
int
inc
fwait
add
mov
test
dec
in
lea
(bad)
dec
in
cmp
imul
js
les
test
(bad)
(bad)
jl
mov
xchg
jmp
dec
xchg
in
inc
or
mov
sub
jo
jg
or
mov
lds
or
add
add
mov
mov
(bad)
mov
mov
mov
jmp
(bad)
jmp
xchg
inc
and
jg
and
retf
stos
cmp
push
mov
cmp
xchg
add
jge
push
in
adc
and
test
fst
add
jbe
(bad)
(bad)
jl
mov
xchg
jmp
cmp
cmp
pop
inc
mov
dec
dec
xchg
xchg
std
xchg
(bad)
inc
(bad)
in
jo
jg
or
mov
mov
(bad)
mov
mov
xchg
or
mov
mov
(bad)
mov
mov
mov
add
outs
and
xchg
(bad)
jmp
mov
xchg
(bad)
jmp
cmp
(bad)
mov
and
xchg
(bad)
jmp
jmp
(bad)
jmp
addr16
cmp
and
pusha
mov
mov
mov
outs
and
retf
stos
xchg
imul
mov
jae
(bad)
(bad)
mov
mov
lods
les
dec
mov
imul
idiv
push
inc
(bad)
jmp
in
bnd
clc
(bad)
mov
mov
dec
add
xchg
(bad)
call
dec
jmp
dec
push
in
adc
push
push
push
int3
fsubr
mov
dec
sti
in
pop
aad
lods
xor
xchg
cmc
xchg
add
dec
push
mov
adc
aaa
cmp
jb
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
mov
aad
popf
pop
xchg
popf
xchg
lods
aad
lods
loope
mov
mov
(bad)
popf
outs
dec
fs
movs
(bad)
call
xchg
jmp
ror
rep
add
add
sbb
add
cld
ins
xor
shr
add
scas
push
cmp
(bad)
in
lods
(bad)
in
popf
idiv
cmp
push
enter
xchg
jmp
mov
dec
(bad)
in
lods
(bad)
in
popf
imul
dec
(bad)
in
lods
dec
mov
les
add
mul
add
bts
sub
test
cmp
bts
or
add
outs
dec
cmp
mov
imul
dec
fsubr
aaa
cmp
dec
add
add
mov
call
outs
in
cmp
mov
pop
push
ret
xchg
int
in
xchg
in
pop
inc
outs
in
cmp
(bad)
cmp
dec
xchg
fcomp
in
int
jnp
dec
xchg
int
pop
dec
cmp
call
cmp
dec
mov
lods
sbb
test
dec
cmc
test
dec
fdiv
fwait
sbb
mov
dec
sti
in
inc
xchg
xchg
dec
cmp
dec
inc
xchg
cs
mov
(bad)
in
fnstenv
mov
add
xchg
xchg
push
aaa
in
cwde
dec
dec
cmc
jae
loopne
mov
call
rol
xchg
add
lods
mov
lods
xchg
xchg
(bad)
in
xchg
(bad)
in
add
in
fldcw
(bad)
in
xchg
outs
in
cmp
in
add
sbb
test
(bad)
in
add
jmp
test
(bad)
mov
push
stos
neg
mov
xchg
fmul
call
call
popf
div
mov
dec
cmc
div
fsubr
fwait
jmp
(bad)
mov
jmp
cmp
fadd
stos
idiv
add
mov
mov
cmp
fdivr
stos
neg
and
sub
mov
(bad)
mov
lahf
jge
lods
mul
rol
in
cmc
neg
xor
popf
and
popa
cmp
popa
in
(bad)
(bad)
in
cmc
test
add
mov
lods
cmp
in
cmp
dec
rol
test
(bad)
(bad)
in
cmc
idiv
add
mov
dec
sbb
inc
(bad)
jmp
fadd
fmul
call
dec
div
mov
mov
mov
fwait
outs
cmp
stos
xchg
jmp
dec
pusha
add
mov
imul
fdivr
stos
test
and
hlt
jae
loopne
mov
(bad)
mov
repz
add
add
sbb
pop
xor
and
hlt
(bad)
in
pusha
mul
xor
sub
loopne
mov
popf
fsubr
jecxz
cmp
(bad)
in
sbb
xchg
xor
popf
and
scas
(bad)
in
sbb
mov
add
(bad)
in
pusha
neg
add
mov
outs
cmp
stos
fdivr
in
sbb
xchg
cs
mov
pusha
call
(bad)
in
pusha
not
xor
aad
fwait
cwde
and
outs
cmp
stos
outs
in
xor
mov
xor
dec
add
cmp
dec
mul
jmp
dec
sbb
inc
(bad)
jmp
dec
dec
call
(bad)
cmp
dec
outs
dec
sti
neg
aaa
not
es
int3
fsubr
idiv
adc
in
pop
inc
dec
inc
xchg
std
iret
ins
cld
or
mov
cld
or
mov
mov
mov
lods
jecxz
push
mov
push
(bad)
mov
jmp
sbb
aaa
cmp
dec
pop
call
(bad)
(bad)
in
int
jnp
or
mov
push
mov
jns
sar
idiv
in
test
pusha
pop
mov
dec
in
push
dec
push
div
es
int3
fdivr
fwait
mov
(bad)
mov
jmp
rol
xchg
jmp
mov
popf
scas
jecxz
cmp
mov
test
mov
and
cmps
jae
clc
(bad)
mov
jp
(bad)
fadd
cmp
in
sti
test
cmp
in
sub
pop
ret
dec
aaa
repz
add
lods
les
outs
cmp
dec
mov
xor
sub
jmp
outs
cmp
stos
imul
jmp
jmp
jmp
lods
mov
test
xchg
push
scas
jecxz
sbb
jecxz
xor
xchg
xchg
pop
xchg
mov
jmp
fwait
xchg
push
aaa
(bad)
sub
clc
(bad)
mov
call
jmp
rep
add
add
push
jns
mov
(bad)
mov
in
jecxz
lahf
movs
dec
push
outs
stos
dec
jns
fmulp
imul
ror
cmc
outs
cmp
sar
or
sbb
(bad)
push
rcr
outs
(bad)
mov
js
push
add
cld
loop
dec
mov
or
or
push
xchg
xchg
fs
ret
pop
push
js
call
in
jecxz
lahf
inc
(bad)
cmp
push
xchg
shl
cmp
aad
aas
in
pop
dec
sbb
add
(bad)
in
adc
test
test
lods
sbb
(bad)
(bad)
call
lahf
mov
and
(bad)
dec
test
jmp
outs
dec
fwait
and
pop
push
cmp
(bad)
mul
shr
cmp
dec
outs
add
(bad)
call
jmp
idiv
shr
(bad)
in
push
idiv
adc
dec
out
mov
div
shr
in
(bad)
in
pop
xchg
inc
cmp
in
fwait
test
jmp
xchg
cmp
dec
cmp
and
cmp
in
sti
not
shr
xchg
cmp
in
sub
xchg
jmp
dec
cmp
imul
fsubr
mov
dec
in
inc
mov
mov
popf
scas
jecxz
cmp
fadd
sub
call
call
sti
test
jmp
dec
int3
repz
xchg
xchg
xchg
xchg
xchg
outs
cmp
stos
outs
cmp
stos
xchg
xchg
xchg
(bad)
in
lea
std
inc
and
repnz
in
(bad)
inc
lahf
pop
dec
cmp
in
neg
jp
jne
push
cwde
mov
jnp
repnz
and
xchg
in
les
pusha
stos
test
dec
in
pop
aad
les
dec
cmp
xchg
xchg
xchg
ficom
cmp
stos
(bad)
in
fidivr
in
(bad)
inc
and
inc
(bad)
in
and
fs
in
(bad)
leave
stc
test
xchg
mov
push
cmp
jp
es
mov
stos
dec
cmp
call
fs
cmp
dec
neg
jmp
inc
push
sbb
ds
in
(bad)
inc
outs
cmp
(bad)
in
div
add
jmp
pusha
not
in
pusha
test
dec
outs
in
sti
mul
mov
div
mov
test
int3
(bad)
in
(bad)
inc
(bad)
in
div
add
add
add
not
test
dec
shr
xchg
cmp
jp
add
or
mov
inc
push
mov
dec
outs
cmp
fisubr
mov
lods
xor
mov
sub
mov
xor
outs
in
sti
div
fmul
in
sub
push
jnp
jmp
fdivp
aam
mov
(bad)
in
fdivp
js
test
dec
aaa
repz
jecxz
add
cmp
jecxz
cmp
test
call
jmp
dec
add
int3
call
pusha
dec
dec
push
dec
hlt
outs
in
pop
dec
cmp
cmp
cmp
stos
and
setge
aas
dec
lea
jmp
idiv
movs
mov
dec
sti
stos
jmp
sti
(bad)
in
adc
push
lock
add
fsub
fsub
cmp
fcomp
(bad)
in
pop
inc
push
int3
mov
dec
sti
stos
jmp
sti
lahf
xchg
jae
test
push
xchg
neg
cmp
stos
dec
push
stos
outs
cmp
stos
push
cmp
(bad)
test
jmp
dec
call
cmp
mov
(bad)
cmp
dec
outs
in
cmc
push
cmp
(bad)
not
jmp
lods
mov
fwait
scas
jecxz
cmp
not
jmp
dec
lea
test
aas
push
cmp
ss
shr
call
jmp
dec
sub
dec
test
add
int3
call
int
cmp
out
outs
mov
out
and
stos
dec
outs
mov
pop
shr
jmp
mov
test
mov
dec
sti
stos
jmp
sti
dec
cmp
stos
jmp
sti
(bad)
in
adc
push
iret
dec
add
outs
and
xchg
push
push
outs
mov
push
cmp
sti
repz
dec
cmp
outs
dec
push
outs
dec
out
fmul
(bad)
(bad)
in
jmp
cwde
iret
repnz
add
dec
cmp
xor
jnp
in
jmp
pusha
cwde
lock
add
add
pusha
aaa
cmp
mov
sbb
add
ficom
jmp
test
mov
lods
pop
xchg
sti
mov
jecxz
pusha
(bad)
dec
dec
out
hlt
cmp
outs
in
iret
dec
cmp
and
shrd
in
bound
mov
mov
mov
fisubr
sbb
in
mov
mov
in
daa
outs
cmp
stos
idiv
mov
in
daa
outs
outs
stos
(bad)
(bad)
push
ins
test
jmp
cmc
and
pop
push
cmp
sbb
fidiv
dec
outs
add
cmp
test
or
jmp
outs
cmp
stos
inc
outs
cmp
stos
outs
and
mov
fmul
in
cmc
push
cmp
sti
neg
jmp
dec
cmp
xor
jnp
mov
mov
(bad)
dec
out
sti
stos
jmp
sti
aad
fs
and
cmp
sti
stos
jmp
sti
dec
cmp
stos
jmp
sti
dec
cmp
stos
jmp
sti
outs
and
(bad)
in
adc
jmp
cmp
mov
mov
inc
cmp
(bad)
clc
test
mov
in
push
test
dec
outs
in
sti
neg
jmp
cmp
dec
outs
in
sub
data16
jmp
fdivp
dec
mov
fdivp
ret
clc
test
dec
cmp
test
int3
jae
add
add
mul
test
dec
cmp
xchg
xchg
dec
cmp
xchg
pusha
xchg
add
test
inc
xlat
(bad)
jmp
xchg
cmc
xchg
sbb
outs
cmp
test
outs
outs
cmp
push
inc
(bad)
jmp
les
dec
mov
xor
fadd
outs
cmp
stos
xchg
jmp
test
dec
shl
pop
inc
(bad)
jmp
cmp
stos
push
cmp
dec
mul
js
jmp
cmp
dec
outs
dec
shl
sahf
shr
cmp
outs
outs
cmp
cmp
(bad)
not
shr
lods
les
dec
add
cmp
stos
neg
mov
lods
sbb
inc
(bad)
jmp
cmp
outs
dec
cmp
jmp
div
jmp
cmp
dec
sbb
jmp
imul
les
dec
add
outs
dec
cmp
stos
mul
mov
lods
sbb
inc
(bad)
jmp
(bad)
in
xchg
push
cmp
ss
(bad)
mov
lods
sbb
sbb
inc
shr
cmp
outs
dec
cmp
xor
jmp
dec
cmp
dec
fdiv
neg
(bad)
in
inc
inc
mov
dec
xchg
(bad)
in
jo
jg
or
mov
fidivr
out
mov
xchg
or
mov
mov
(bad)
mov
mov
inc
(bad)
mov
inc
fucomp
push
inc
(bad)
mov
in
jmp
in
fucomp
jmp
outs
dec
fwait
xchg
lea
stos
outs
dec
cmp
jmp
div
(bad)
(bad)
mov
neg
xor
push
or
mov
jmp
neg
dec
dec
dec
jnp
pop
test
dec
outs
dec
cmp
fstp
jmp
cmp
dec
outs
dec
fwait
mul
mov
sti
jae
or
mov
dec
imul
xchg
test
int3
fmul
mov
jmp
aas
inc
(bad)
mov
imul
jmp
jae
inc
(bad)
mov
mov
cmp
outs
dec
cmp
jmp
test
fadd
fmul
dec
cmp
fnstsw
(bad)
fadd
fmul
dec
fwait
mul
jmp
dec
cmp
neg
pop
test
int3
fsubr
fwait
and
(bad)
mov
dec
sti
in
pop
in
dec
xchg
push
mov
mov
dec
xchg
lea
test
or
mov
(bad)
mov
add
or
mov
jmp
mov
xchg
jmp
fwait
stos
xchg
call
jmp
lods
pop
or
mov
(bad)
mov
daa
daa
dec
add
neg
jmp
dec
push
stos
outs
cmp
div
mov
(bad)
cmp
push
cmp
jp
mov
xor
cmc
not
push
stos
outs
cmp
not
push
cmp
jp
dec
inc
jmp
lods
les
push
outs
dec
mov
ret
lods
les
push
cmp
mov
adc
or
xor
xchg
les
movs
(bad)
mov
mul
jmp
outs
dec
cmp
jmp
div
mov
stos
dec
lea
fwait
push
cmp
mov
jmp
cmp
jmp
imul
jecxz
(bad)
(bad)
in
cmp
in
test
dec
cmp
fdiv
jbe
jnp
xchg
les
pusha
cwde
lock
add
dec
sbb
xchg
cmp
in
fwait
not
jmp
jmp
imul
mov
lods
sbb
sti
dec
in
(bad)
fadd
mul
jecxz
(bad)
fadd
fmul
in
cmc
push
cmp
jp
sub
outs
in
fwait
idiv
jmp
jmp
mov
test
not
retf
dec
fidivr
add
call
pop
movs
(bad)
mov
add
inc
call
lahf
mov
mov
push
mov
xchg
lahf
mov
mov
daa
popa
mov
dec
cmp
xor
jnp
lods
cmp
jp
cmp
cwde
xor
(bad)
(bad)
push
mov
add
not
jnp
jmp
cmc
stos
outs
cmp
test
(bad)
cmp
outs
in
cmc
push
cmp
jp
arpl
push
movs
(bad)
mov
lock
dec
stos
outs
cmp
mul
jmp
(bad)
cmp
push
cmp
jp
push
jle
push
movs
(bad)
mov
jge
jmp
dec
push
stos
outs
cmp
imul
xchg
push
cmp
jp
leave
jle
jmp
xchg
adc
stos
imul
shr
lods
les
push
cmp
popf
dec
mov
xor
(bad)
in
(bad)
div
gs
lods
les
dec
mov
xor
jae
movs
(bad)
mov
test
cmp
jmp
div
sub
push
cmp
sub
jmp
cmp
jmp
not
in
cmp
nop
dec
test
dec
cmp
fdiv
jbe
jnp
and
lock
add
fdivr
xor
xchg
outs
inc
test
jo
jmp
stos
outs
cmp
stos
test
popf
fdivr
push
cmp
cwde
dec
in
(bad)
fadd
imul
dec
mov
fadd
fmul
in
cmc
push
cmp
jp
pop
gs
outs
inc
push
test
in
fwait
test
jmp
not
mov
mov
jae
movs
(bad)
mov
test
jmp
out
fucomp
push
mov
iret
pusha
call
lahf
mov
mov
imul
(bad)
mov
test
scas
mov
mov
jae
movs
(bad)
mov
test
in
fwait
imul
fucomp
push
push
scas
mov
mov
jae
movs
(bad)
mov
xchg
(bad)
mov
data16
mov
xchg
(bad)
in
(bad)
idiv
cmp
xor
jnp
lods
int3
jecxz
sub
(bad)
(bad)
(bad)
in
pop
dec
mov
push
int3
call
inc
jmp
outs
in
fwait
test
fwait
not
in
mov
(bad)
(bad)
in
mov
(bad)
mov
fs
int3
fadd
fwait
dec
xchg
(bad)
mov
dec
sti
dec
in
popf
in
pop
xchg
sub
xchg
mov
jecxz
pusha
(bad)
outs
js
psubusb
stos
and
sub
call
dec
jnp
or
aaa
repz
dec
add
lods
rcl
(bad)
dec
mov
outs
dec
xchg
and
dec
pusha
and
(bad)
in
add
sub
ins
(bad)
in
add
sbb
cmc
jae
clc
(bad)
mov
dec
repz
add
pusha
aaa
cmp
mov
sbb
add
lods
mov
lods
mov
sub
lods
rcl
outs
cmp
stos
cmp
xchg
(bad)
in
add
sub
ins
outs
cmp
not
(bad)
mov
cmp
in
pop
push
cmp
dec
idiv
jmp
cmp
dec
outs
in
rcr
jmp
movs
(bad)
jmp
lahf
jae
in
add
sbb
cmc
jae
clc
(bad)
mov
call
dec
call
mov
neg
jp
jnp
cwde
mov
jnp
repnz
and
mov
test
lods
rcl
ds
inc
outs
dec
xchg
and
in
add
sub
fs
in
sub
stos
idiv
shr
(bad)
in
add
sbb
cmc
outs
cmp
stos
idiv
lahf
jmp
cmp
dec
outs
in
cmp
cli
(bad)
jmp
dec
cmp
not
jae
dec
add
fwait
icebp
xchg
(bad)
mov
jmp
inc
dec
inc
xchg
mov
(bad)
(bad)
in
pop
inc
xchg
jmp
cmp
jmp
sti
xchg
or
outs
or
and
(bad)
(bad)
inc
push
add
cmp
lods
pusha
test
lahf
jp
pusha
dec
faddp
xchg
or
and
(bad)
(bad)
call
and
iret
adc
add
dec
mov
push
clc
(bad)
mov
(bad)
call
jmp
idiv
pusha
push
cmp
jecxz
sub
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
jmp
pusha
test
push
adc
mov
dec
stos
outs
and
(bad)
jmp
outs
dec
mov
test
mov
in
call
test
push
mov
cmp
add
test
call
jmp
test
call
mov
jp
add
clc
(bad)
mov
(bad)
push
nop
test
push
cmp
sti
outs
sub
(bad)
cmp
add
jmp
out
(bad)
push
test
mov
dec
push
stos
outs
and
test
jmp
outs
dec
mov
not
call
test
push
inc
jmp
(bad)
(bad)
(bad)
call
jmp
mul
jmp
iret
and
add
clc
(bad)
mov
(bad)
push
fld
push
cmp
jg
sub
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
jmp
pusha
test
push
test
mov
dec
push
stos
outs
and
(bad)
jmp
(bad)
jmp
cmp
sub
(bad)
in
call
test
push
pop
jmp
test
mul
mov
cmp
outs
outs
push
(bad)
(bad)
jmp
stos
outs
and
(bad)
(bad)
jmp
add
fdivrp
(bad)
dec
xchg
(bad)
(bad)
jmp
idiv
repz
outs
and
(bad)
jmp
jmp
jmp
aad
daa
cwde
iret
loopne
add
dec
sub
pop
test
jmp
push
dec
mov
imul
test
jmp
(bad)
(bad)
(bad)
push
dec
mov
add
fadd
dec
jnp
cmp
scas
idiv
add
outs
(bad)
(bad)
(bad)
call
jmp
imul
jle
(bad)
fcomp
jmp
mov
lods
les
outs
and
(bad)
dec
xchg
(bad)
(bad)
jmp
jmp
(bad)
(bad)
(bad)
push
mov
xor
(bad)
in
call
test
call
(bad)
(bad)
push
sub
call
(bad)
(bad)
push
ret
jle
call
(bad)
(bad)
push
jge
jmp
xchg
cmp
add
(bad)
push
psllq
call
not
repz
xchg
cmp
in
push
test
jmp
outs
cmp
test
mov
outs
and
(bad)
(bad)
push
out
scas
mov
repz
mov
jmp
sti
stos
push
cmp
add
inc
xchg
(bad)
(bad)
push
movs
leave
test
int3
fcomp
mov
(bad)
in
pop
dec
inc
xchg
std
xchg
add
test
jmp
cmp
mov
in
popf
in
(bad)
(bad)
in
sti
xchg
jmp
xchg
(bad)
fadd
fmul
xchg
xchg
add
ss
(bad)
fadd
fcom
xchg
fiadd
xor
inc
xchg
xchg
cmp
outs
cmp
neg
fadd
(bad)
sub
(bad)
mov
stos
imul
mov
popf
fdivr
push
cmp
jp
in
std
in
pop
cmp
jb
jmp
cmp
outs
in
push
jge
jmp
cmp
outs
in
or
sbb
test
jmp
dec
in
fimul
cmc
xchg
jp
pop
repnz
cmp
popf
aad
(bad)
cld
ds
inc
dec
outs
cmp
stos
outs
dec
push
dec
fadd
add
add
(bad)
sub
outs
cmp
stos
imul
sbb
(bad)
dec
in
std
cmp
xchg
fucomp
(bad)
cmp
outs
in
or
inc
mov
outs
in
push
sbb
idiv
mov
test
hlt
sbb
aad
les
add
sbb
ror
add
add
in
mov
(bad)
cld
mov
test
cmp
stos
outs
dec
push
and
test
aaa
cmp
mov
(bad)
sub
outs
cmp
stos
test
fdivr
push
cmp
ss
in
std
cmp
push
fucomp
(bad)
cmp
outs
in
or
in
mov
outs
in
push
sbb
div
jmp
dec
mov
aad
(bad)
jmp
mov
dec
cmp
popf
aad
(bad)
cld
(bad)
jmp
ds
outs
cmp
div
push
test
aaa
cmp
mov
(bad)
sub
(bad)
(bad)
mov
stos
idiv
mov
lods
sbb
sti
dec
in
std
cmp
gs
cmp
outs
in
or
dec
mov
outs
in
push
sbb
div
in
std
dec
inc
scas
ror
not
push
mul
data16
int3
js
(bad)
jmp
sbb
and
push
(bad)
mov
mov
(bad)
mov
lods
add
mov
mov
add
les
dec
scas
dec
rep
pop
dec
add
pop
and
pop
inc
mov
add
push
out
cld
xchg
dec
sub
jp
add
add
xchg
jl
inc
mov
inc
mov
mov
push
(bad)
mov
mov
jmp
mov
jmp
mov
inc
in
mov
(bad)
mov
dec
les
mov
xchg
jmp
dec
in
sti
outs
cmp
jae
(bad)
mov
mov
add
jecxz
add
mov
inc
(bad)
(bad)
mov
stos
stos
fmul
jae
add
add
inc
outs
cmp
iret
push
(bad)
mov
adc
pusha
in
xor
js
les
mov
xchg
jmp
dec
in
sti
outs
cmp
jae
(bad)
mov
sti
(bad)
mov
mov
stos
fcomp
fcomp
stos
stos
(bad)
in
fwait
inc
outs
cmp
iret
push
(bad)
mov
adc
pusha
in
xor
push
sahf
lods
add
les
mov
xchg
jmp
dec
in
sti
outs
cmp
jae
(bad)
mov
inc
stos
in
pusha
stos
inc
(bad)
mov
mov
mov
fwait
inc
outs
cmp
iret
push
(bad)
mov
adc
pusha
in
je
test
neg
jae
add
jae
add
inc
(bad)
mov
(bad)
mov
popf
inc
(bad)
mov
(bad)
mov
add
les
scas
lods
pop
sti
test
lods
(bad)
in
popf
(bad)
in
sti
inc
lahf
popf
lods
pusha
cld
stos
test
pusha
sbb
les
scas
dec
imul
sbb
ds
lods
pop
mov
mov
lods
pop
push
xor
shl
fwait
shl
jmp
add
mov
push
(bad)
mov
les
cmp
outs
sbb
inc
mov
jmp
jmp
sbb
not
jae
jmp
les
mov
add
iret
pusha
in
ins
idiv
test
fadd
fadd
dec
lea
add
add
inc
imul
add
lods
sub
pusha
rol
outs
in
mov
sbb
int3
jge
pop
test
les
cmp
outs
sbb
inc
mov
jmp
jmp
sbb
imul
mov
outs
mov
test
ins
imul
test
fadd
fadd
dec
lea
add
add
inc
imul
lds
add
fcmovu
pusha
test
inc
xor
mov
and
int3
jge
pop
test
std
mov
aas
mov
xchg
sub
dec
xchg
dec
mov
call
mov
outs
cmp
sti
stos
xchg
inc
jae
add
add
add
add
inc
xor
inc
(bad)
inc
fadd
fadd
call
fisubr
(bad)
mov
stos
xchg
inc
dec
jb
jb
in
add
pusha
idiv
icebp
sbb
fwait
pop
ss
mov
dec
xchg
outs
in
cmp
adc
lods
xor
add
add
add
add
not
inc
jmp
lods
mov
call
jmp
cmp
scas
jecxz
cmp
dec
inc
(bad)
push
(bad)
mov
jmp
mov
jecxz
aaa
(bad)
xchg
jmp
cmc
outs
cmp
stos
fmul
inc
dec
inc
or
dec
mov
cmc
jmp
outs
in
cmp
add
aaa
test
fstp
neg
out
(bad)
in
inc
aad
mov
cld
xor
cmp
out
(bad)
mov
mov
lods
les
jae
test
in
jmp
int3
dec
mov
dec
jg
inc
mov
mov
fmul
in
cmp
pop
push
jmp
mul
js
les
jae
repnz
mov
add
stos
xchg
(bad)
ror
add
mov
outs
iret
sub
add
add
dec
cmp
pusha
cwde
and
add
(bad)
in
scas
idiv
add
dec
in
pop
mov
sti
mov
xor
mov
iret
mov
neg
cwde
iret
mov
call
add
div
push
mov
popf
add
add
inc
cmp
mov
(bad)
mov
add
xchg
test
xchg
xchg
cmp
mov
xchg
sub
mov
or
inc
fdiv
fnstcw
neg
test
jl
(bad)
mov
xchg
sub
fwait
add
xchg
sub
xchg
sub
cmp
xor
aaa
cmp
xor
call
aaa
cmp
(bad)
jp
rol
inc
and
iret
scas
dec
add
jae
(bad)
mov
(bad)
mov
mov
gs
outs
cmp
lods
stos
dec
aaa
aaa
cmp
scas
push
add
add
adc
jmp
or
add
fdivr
outs
mov
xchg
outs
push
sub
dec
add
div
repz
xchg
sub
call
dec
add
mov
imul
jmp
sub
dec
xchg
push
iret
sub
add
mov
(bad)
mov
dec
add
call
iret
sub
add
add
jmp
xchg
push
iret
sub
add
mov
(bad)
in
(bad)
cmp
xchg
outs
push
sub
add
add
and
jmp
cmp
outs
push
sub
dec
add
test
(bad)
cmp
outs
call
jmp
add
(bad)
cmp
outs
push
sub
dec
add
imul
jmp
dec
call
jae
xor
arpl
push
jecxz
(bad)
(bad)
inc
(bad)
mov
mov
add
xor
cld
test
mov
div
repz
add
fsubr
mov
add
jp
add
ja
(bad)
jmp
sub
add
add
mov
add
daa
xchg
(bad)
(bad)
mov
sub
add
xor
xchg
in
pop
idiv
jmp
lods
daa
sub
dec
add
(bad)
cmp
cmp
push
sub
add
add
ror
jmp
mov
daa
sub
sbb
(bad)
(bad)
fdivr
xchg
outs
dec
add
xchg
in
pop
div
xchg
jmp
lods
daa
sub
dec
add
(bad)
cmp
dec
outs
push
sub
add
add
loop
jmp
outs
iret
sub
dec
sbb
mov
(bad)
(bad)
mov
pop
aaa
iret
sub
add
jp
add
idiv
daa
sub
dec
add
(bad)
cmp
dec
outs
push
sub
add
add
mov
iret
sub
dec
add
xchg
stos
div
(bad)
mov
aaa
iret
sub
add
jecxz
add
div
jmp
cmp
dec
outs
push
sub
dec
add
test
jmp
repz
mov
jmp
les
add
out
dec
add
lods
mov
add
add
push
dec
add
jl
inc
mov
mov
adc
jl
inc
mov
mov
jp
int3
inc
or
lea
mov
(bad)
jl
inc
mov
dec
not
mov
mov
inc
dec
mov
xchg
jl
inc
mov
mov
jp
int3
inc
jo
lea
mov
(bad)
jl
inc
mov
idiv
(bad)
(bad)
jl
inc
mov
mov
push
lea
retf
inc
mov
mov
mov
cmps
dec
add
loope
inc
mov
mov
or
xchg
idiv
mov
cmp
out
inc
jl
inc
mov
mov
push
mov
add
add
mov
mov
mov
loope
inc
mov
mov
or
xchg
imul
mov
push
push
(bad)
mov
mov
mov
push
mov
inc
mov
mov
jp
int3
inc
or
lea
mov
(bad)
jl
inc
mov
dec
test
(bad)
(bad)
jl
inc
mov
mov
push
lea
xchg
jl
inc
mov
mov
adc
mov
mov
in
inc
dec
mov
cmp
lea
mov
(bad)
jl
inc
mov
imul
(bad)
(bad)
jl
inc
mov
mov
push
lea
retf
idiv
xor
inc
(bad)
(bad)
mov
mov
(bad)
mov
sub
jg
add
add
icebp
sbb
les
cmp
pop
dec
aad
sti
inc
mov
xor
xchg
jmp
inc
add
mov
mov
(bad)
dec
sti
inc
mov
pop
push
(bad)
call
ins
add
mov
aad
xchg
in
mov
lahf
jp
pusha
stos
jl
inc
mov
(bad)
jl
inc
mov
aad
add
mov
aad
xchg
in
mov
lahf
jp
mul
mul
cmp
aad
lods
inc
mov
xor
xchg
jmp
cld
xor
pop
jmp
dec
jg
inc
mov
push
mov
pop
test
std
mov
scas
(bad)
mov
add
stos
xchg
(bad)
(bad)
add
mov
iret
sub
dec
xchg
jl
mov
stos
outs
iret
sub
dec
add
outs
xor
add
add
sti
fsub
jae
in
add
jae
jmp
stos
neg
rol
add
add
add
(bad)
dec
mov
outs
sub
stos
test
jmp
outs
cld
sub
out
iret
add
outs
cmp
out
stos
dec
sbb
jl
add
push
iret
sub
call
inc
lods
cld
sub
lods
xchg
sub
(bad)
outs
cmp
(bad)
call
call
(bad)
mov
test
lods
sbb
in
call
xchg
sub
inc
outs
cmp
scas
stos
call
xor
push
aaa
cwde
and
add
add
outs
aas
add
outs
scas
fld
ret
in
sbb
call
jmp
sub
xchg
call
outs
test
fadd
inc
fadd
fcomp
fmul
or
inc
inc
stos
call
(bad)
cs
mov
stos
call
outs
test
outs
cmp
sub
cwde
adc
dec
cmc
xchg
dec
add
add
dec
jmp
int
imul
dec
xlat
sti
jecxz
and
sbb
(bad)
dec
inc
add
add
call
imul
outs
test
dec
inc
add
add
call
mul
outs
test
call
outs
test
call
outs
test
call
outs
test
in
(bad)
call
push
cs
mov
dec
inc
adc
cmps
outs
cmp
lods
stos
call
(bad)
mov
jmp
in
aam
jecxz
sub
xchg
out
test
(bad)
dec
dec
sub
xchg
(bad)
imul
jecxz
jb
xchg
jae
retf
jecxz
xchg
xor
fcomp
dec
fmul
mov
(bad)
call
retf
xchg
fmul
scas
(bad)
not
jmp
cmp
jno
test
mov
jb
or
jmp
sub
jp
add
in
pusha
dec
daa
sub
dec
add
outs
xchg
add
add
daa
sub
add
jo
test
dec
icebp
sbb
les
jae
scas
(bad)
mov
add
stos
xchg
(bad)
(bad)
add
mov
iret
sub
dec
xchg
jl
mov
stos
outs
iret
sub
dec
add
outs
xor
add
add
fsub
jae
in
add
jae
jmp
stos
neg
and
add
add
add
xchg
xor
xor
(bad)
jmp
sub
aam
add
outs
jb
scas
dec
aaa
push
iret
sub
add
dec
idiv
or
add
push
xor
push
iret
sub
dec
add
dec
test
jmp
shr
or
call
sub
imul
jmp
inc
(bad)
mov
(bad)
mov
stos
outs
jb
stos
neg
adc
add
xor
ds
jmp
xchg
sbb
add
add
or
sbb
add
add
ror
add
out
cmp
scas
stos
outs
jb
stos
imul
adc
add
xor
inc
xchg
jmp
outs
jb
scas
outs
cmp
jb
cmps
or
add
sub
xchg
lods
aad
scas
in
hlt
outs
cmp
jb
fimul
add
iret
pusha
in
(bad)
mov
lahf
jp
dec
xchg
fmul
call
dec
add
mul
pop
call
repz
dec
add
jae
(bad)
mov
(bad)
mov
test
add
push
sbb
push
aaa
inc
repnz
in
mov
mov
mov
outs
sub
jae
push
(bad)
mov
jmp
sub
outs
jb
stos
not
add
push
iret
sub
dec
call
mov
test
push
(bad)
mov
sub
dec
lods
ret
iret
and
add
lods
int3
test
outs
cmp
out
or
stos
retf
sub
cmp
out
idiv
jmp
sub
dec
test
sub
test
inc
cwde
outs
cmp
out
test
jmp
sub
or
inc
dec
outs
cmp
(bad)
stos
outs
call
(bad)
fdivr
jae
xor
push
iret
sub
dec
add
(bad)
idiv
cmps
jmp
cmp
dec
push
iret
sub
dec
add
jecxz
imul
mov
in
push
xchg
(bad)
push
(bad)
mov
(bad)
mov
add
sub
jmp
sub
push
rol
in
pusha
dec
daa
sub
dec
add
outs
xchg
add
add
daa
sub
add
jno
test
dec
icebp
sbb
dec
add
fwait
cmp
outs
test
in
inc
xchg
lea
out
in
add
jae
jmp
(bad)
jmp
adc
pusha
aaa
cmp
mov
in
test
jmp
or
cwde
dec
add
fmul
and
loope
xor
dec
call
(bad)
inc
add
neg
call
aaa
cwde
iret
pop
add
add
outs
add
test
push
lock
jmp
stos
outs
and
test
push
push
cmp
jecxz
mov
sbb
stos
outs
and
(bad)
jmp
idiv
shr
jmp
pusha
mov
fwait
test
jmp
test
jmp
lods
sbb
in
pop
push
cmp
neg
jmp
in
call
fwait
test
push
enter
xchg
cmp
add
(bad)
push
push
mov
outs
add
test
push
pop
mov
outs
add
test
call
jmp
neg
jmp
lahf
ret
jae
pusha
mov
test
push
push
cmp
lods
sbb
in
pop
push
cmp
mov
(bad)
cmp
dec
outs
add
test
call
jmp
test
inc
lods
pop
(bad)
pusha
mov
xor
fwait
lea
xor
xchg
test
jmp
jmp
mov
(bad)
add
lods
les
dec
add
outs
dec
cmp
outs
dec
sti
and
jmp
stos
not
and
test
jmp
mov
add
inc
dec
cmp
outs
cmp
jmp
outs
outs
cmp
push
cld
add
aad
scas
call
call
add
(bad)
call
test
inc
dec
cmp
add
test
push
cmp
dec
sub
(bad)
inc
cwde
iret
add
pop
fldenv
mov
mov
popf
pusha
mov
dec
mov
imul
jmp
mov
xor
fisubr
mov
outs
and
test
jmp
jmp
push
cmp
sti
xchg
test
jmp
cmp
stos
and
mov
sbb
mov
xchg
cmp
add
test
call
jmp
neg
cmp
jmp
cmp
mov
inc
and
add
test
push
movs
jmp
outs
outs
cmp
test
push
cmp
add
aad
scas
xchg
cmp
add
test
call
(bad)
push
mov
jmp
or
jnp
(bad)
inc
cwde
iret
call
les
dec
add
mov
imul
outs
outs
fwait
test
push
xor
add
dec
jmp
cmp
test
jmp
mov
cmp
dec
mov
imul
jmp
push
(bad)
push
or
add
and
test
push
push
cmp
sbb
mov
sbb
(bad)
jmp
test
popf
stos
xchg
push
cmp
popf
div
(bad)
mov
lods
sbb
lods
xor
inc
dec
cmp
outs
cmp
jmp
dec
cmp
outs
or
jmp
dec
cmp
outs
push
(bad)
push
mov
cmp
outs
fwait
test
push
lahf
(bad)
(bad)
fadd
cmp
in
cmp
sub
sub
pop
test
add
add
in
sti
idiv
sahf
xchg
call
test
in
inc
dec
lods
les
dec
add
and
push
in
jmp
mov
sbb
lods
sbb
fmul
in
sti
test
xchg
loopne
(bad)
mov
jmp
lods
jae
push
push
inc
lods
les
outs
cmp
dec
mov
xor
jmp
not
xor
add
and
mov
fs
mov
dec
sti
outs
sbb
outs
dec
fiadd
mov
jmp
dec
add
sti
stos
jae
cmc
(bad)
mov
mov
lods
sbb
lods
dec
jmp
lods
xor
(bad)
cmp
xchg
outs
dec
(bad)
mov
cmp
cmp
outs
dec
iret
xchg
sti
neg
stos
outs
cmp
jae
cmc
(bad)
mov
neg
jmp
lods
sbb
stos
outs
cmp
stos
push
cmp
jp
push
inc
jmp
lods
les
jecxz
xor
jae
pusha
mov
int
jmp
lods
sbb
lods
sbb
xchg
outs
in
sbb
je
jmp
cmp
outs
in
aas
imul
jmp
lods
dec
jmp
cmp
outs
in
iret
mul
push
jmp
not
loopne
add
pusha
test
call
les
jae
addr16
mov
add
stos
xchg
les
aas
mov
xchg
sub
jp
add
mov
outs
iret
sub
jp
add
add
add
dec
sbb
lods
les
outs
lods
pop
add
add
xchg
out
stos
xchg
mov
pop
cmc
jmp
lods
sub
lods
les
dec
mov
outs
sub
mov
jmp
xor
xchg
pop
xchg
push
iret
sub
add
dec
test
jmp
add
jmp
sub
add
add
jmp
iret
sub
jp
add
add
imul
(bad)
jmp
add
(bad)
fadd
fmul
call
jmp
xchg
out
call
sbb
jmp
sub
jp
add
add
add
xchg
stos
jae
sbb
mov
jmp
xchg
pop
xchg
push
iret
sub
add
(bad)
mul
sbb
jmp
add
jmp
sub
add
add
jmp
iret
sub
jp
add
jg
jmp
lods
daa
sub
fadd
fmul
call
jmp
xchg
out
stos
div
mov
xchg
aaa
iret
sub
jp
add
add
add
xchg
stos
jae
sbb
mov
jmp
xchg
pop
xchg
push
iret
sub
add
mov
jmp
add
jmp
sub
add
add
jmp
iret
sub
jp
add
add
add
dec
sbb
sub
fadd
fmul
call
dec
jmp
add
push
pusha
mul
add
stos
inc
lods
les
outs
inc
or
sub
stos
mul
xor
iret
sub
jp
add
mov
outs
sub
jmp
lods
les
dec
mov
outs
sub
push
iret
sub
add
sbb
pop
call
sub
add
outs
sbb
sti
dec
add
test
add
bound
iret
sub
add
add
xchg
out
stos
xchg
sub
imul
jb
idiv
add
dec
add
sub
xchg
out
stos
jae
sbb
mov
mov
lods
sbb
lods
xor
(bad)
fadd
mov
outs
jb
jb
iret
sub
adc
call
sub
add
add
sbb
mov
jmp
lods
sbb
stos
outs
cmp
stos
stos
push
iret
sub
jp
add
out
jmp
lods
les
bound
add
call
test
popf
div
sbb
add
idiv
call
xchg
outs
push
sub
add
add
sub
push
call
in
lods
or
inc
shr
adc
add
sbb
(bad)
mov
add
add
add
lods
add
add
pusha
call
add
add
cwde
and
jp
add
mov
mov
add
sub
outs
sub
outs
jb
outs
test
xor
mov
mov
outs
sub
call
sub
jp
add
jmp
sub
add
sbb
add
lods
xor
outs
iret
sub
mov
push
iret
sub
jp
add
lods
sbb
add
add
jp
add
not
ins
mov
lods
sbb
stos
push
iret
sub
jp
add
lods
dec
mov
lods
sbb
pop
jp
add
imul
mov
lods
sbb
lods
xor
pop
cmp
outs
jb
jb
cmps
enter
xchg
outs
daa
sub
add
add
addr16
xchg
outs
daa
sub
add
add
jg
jmp
cmp
outs
jb
jae
jp
jmp
cmp
outs
jb
out
push
iret
sub
jle
jmp
xchg
outs
jb
outs
outs
iret
sub
lock
sub
jp
add
aas
add
add
sbb
mov
jmp
lods
sbb
stos
outs
iret
sub
add
add
jp
add
jmp
sub
sub
outs
cmp
stos
stos
div
(bad)
jmp
lods
sbb
stos
outs
cmp
(bad)
stos
push
iret
sub
jp
add
div
(bad)
jmp
lods
les
mov
call
jp
add
(bad)
jmp
lods
sbb
lods
sbb
xchg
outs
call
(bad)
cmp
outs
call
(bad)
cmp
outs
push
sub
add
add
cmp
jmp
cmp
outs
push
sub
add
add
cmp
jmp
cmp
outs
call
jp
add
div
jb
cld
outs
iret
sub
add
add
push
add
dec
(bad)
call
sub
jae
sbb
mov
push
jp
add
neg
jmp
lods
sbb
stos
outs
cmp
out
stos
push
iret
sub
add
fcomip
xchg
lahf
jmp
lods
les
or
iret
sub
add
addr16
jmp
lods
sbb
lods
xor
xchg
outs
call
(bad)
cmp
outs
call
(bad)
cmp
outs
push
sub
add
add
sub
in
jmp
repz
add
dec
mov
outs
sub
call
out
jmp
outs
jb
cmp
jne
add
dec
add
sub
xchg
out
stos
jae
sbb
mov
mov
lods
sbb
lods
xor
add
push
iret
sub
xchg
push
jmp
xchg
call
sub
sti
cmc
(bad)
mov
jmp
lods
sbb
stos
outs
cmp
(bad)
stos
push
iret
sub
jp
add
xor
jmp
lods
les
bound
add
call
mul
sbb
lods
sbb
add
not
jmp
fadd
xchg
outs
call
jp
add
imul
out
jmp
lods
into
jae
cwde
iret
imul
sub
in
pusha
dec
call
cld
add
add
in
(bad)
inc
mov
dec
add
stos
dec
in
pop
outs
call
call
sub
dec
push
sub
sub
inc
outs
push
sub
add
add
add
jmp
fcom
fmul
cmp
xchg
stos
push
iret
sub
pusha
outs
jb
jae
call
dec
outs
cmp
scas
stos
outs
cmp
outs
xchg
(bad)
inc
(bad)
call
add
sbb
aaa
cwde
lock
add
xchg
outs
cmp
outs
stos
in
pop
outs
call
jmp
sub
outs
cmp
cs
mov
outs
sub
stos
test
jmp
div
ja
jmp
sub
xor
add
dec
cmp
xchg
or
stos
outs
cmp
outs
outs
jge
stos
outs
push
sub
add
add
mov
iret
sub
dec
push
sub
sub
stos
outs
call
jmp
add
sti
dec
daa
sub
add
scas
mov
add
add
call
outs
iret
sub
add
add
movs
pop
(bad)
(bad)
mov
dec
outs
call
(bad)
fadd
fmul
push
sub
add
add
mov
jmp
fadd
fmul
call
(bad)
fadd
fmul
push
sub
add
add
push
imul
(bad)
fadd
fmul
call
jp
add
neg
jmp
dec
push
sub
in
push
add
add
dec
xchg
add
xchg
add
add
lods
or
popf
fadd
jbe
jnp
xchg
cwde
iret
push
jecxz
add
daa
add
add
jae
sahf
(bad)
mov
mov
lods
sbb
add
dec
dec
inc
lods
or
popf
fadd
jbe
jnp
lods
outs
sub
add
pusha
cwde
lock
add
lahf
(bad)
dec
call
neg
(bad)
mov
lods
pusha
xor
mov
jecxz
pusha
(bad)
call
sub
xchg
sub
jmp
call
add
add
add
sub
outs
iret
sub
add
add
xchg
out
stos
test
jmp
outs
iret
sub
add
add
jmp
push
iret
sub
aad
sub
add
cmps
dec
xchg
outs
daa
sub
add
add
mov
xchg
outs
push
sub
add
add
sub
lods
xchg
jmp
repz
retf
outs
cld
sub
loop
mov
call
sub
imul
les
dec
mov
outs
sub
stos
div
jb
cmp
adc
add
lods
xor
(bad)
fadd
dec
jnp
iret
sub
(bad)
mov
in
pop
fadd
inc
cmp
jb
out
push
iret
sub
rcl
(bad)
fcomp
imul
jmp
sub
add
add
xchg
out
stos
idiv
jb
cmp
inc
call
(bad)
in
call
jp
add
lock
mov
xchg
cmp
jb
out
test
outs
daa
sub
add
add
jo
jmp
xchg
cmp
push
sub
add
add
sub
fdiv
jmp
dec
push
sub
mov
jb
xchg
dec
loop
or
popf
fadd
jbe
jnp
(bad)
cmp
(bad)
cmp
fstp
(bad)
fsub
jae
in
add
jae
jmp
dec
add
stos
div
les
push
iret
sub
lods
ja
add
add
dec
mov
outs
sub
and
add
cmp
out
push
jmp
outs
sbb
or
add
repnz
add
pop
repz
add
add
pusha
mov
jmp
outs
sbb
or
add
gs
sub
add
add
imul
add
jae
cmc
(bad)
mov
iret
add
add
jp
add
jmp
sub
push
iret
sub
jp
add
outs
cmp
jb
div
pushf
jmp
lods
sbb
stos
outs
cmp
out
stos
push
iret
sub
add
or
push
icebp
jmp
lods
les
or
mov
sub
add
xor
push
pushf
jmp
lods
sbb
and
in
(bad)
cmp
xchg
outs
call
(bad)
cmp
outs
call
(bad)
cmp
outs
push
sub
add
add
sti
push
jmp
cmp
outs
push
sub
add
add
sub
test
les
xchg
or
xor
sub
add
add
xchg
(bad)
stos
mul
jmp
dec
call
add
sub
stos
outs
daa
sub
dec
add
neg
fmul
jb
out
test
jmp
outs
sbb
outs
dec
add
idiv
fmul
jb
jae
iret
sub
in
jmp
neg
add
outs
sbb
push
add
add
and
jp
add
jg
add
add
daa
sub
jp
add
add
ret
dec
sbb
les
jae
xor
mov
add
stos
xchg
les
aas
mov
xchg
sub
add
add
mov
iret
sub
add
add
add
add
dec
cmp
in
mov
mov
(bad)
mov
mov
or
in
pop
lods
mov
cmp
or
add
add
inc
sub
mov
add
add
inc
pusha
in
mov
(bad)
jmp
sub
xchg
in
mov
mov
add
retf
in
mov
mov
push
inc
(bad)
mov
add
retf
pusha
in
mov
mov
xchg
rcr
adc
fwait
adc
sub
mov
add
outs
cmp
popf
stos
outs
jb
mov
cdq
std
jmp
push
iret
sub
aaa
(bad)
sub
call
cmp
push
stos
test
jmp
lods
sbb
stos
outs
cmp
sub
add
add
retf
std
jmp
lods
les
(bad)
jae
test
iret
sub
mul
jg
inc
mov
adc
dec
outs
call
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
call
add
add
test
sub
mov
stos
outs
daa
sub
add
sti
std
jmp
mov
sub
inc
in
mov
add
add
inc
xchg
in
mov
(bad)
jmp
cmp
call
push
iret
sub
add
add
jmp
sbb
mov
sub
add
add
neg
sbb
push
stos
push
iret
sub
add
add
jmp
call
cmp
fisubr
add
add
div
sbb
sub
add
add
sub
test
jmp
cmp
dec
outs
call
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
push
sub
out
sahf
jmp
cmp
dec
outs
push
sub
push
mov
push
sahf
jmp
cmp
call
add
inc
fdivrp
mov
add
call
jmp
xor
sub
add
add
xchg
(bad)
stos
not
dec
jmp
dec
jg
in
mov
dec
sub
push
sub
add
add
inc
mov
call
test
add
jg
add
add
sub
add
add
add
pop
in
dec
sbb
fsub
and
(bad)
mov
dec
sti
dec
out
outs
inc
popf
stos
outs
dec
(bad)
or
dec
mov
dec
outs
dec
sbb
ja
jmp
mov
jae
push
cmp
dec
neg
jmp
lods
sbb
stos
outs
cmp
stos
push
cmp
jp
sub
jmp
lods
les
xchg
stos
and
jmp
neg
xlat
jmp
lods
sbb
add
les
jae
xor
mov
add
stos
lods
(bad)
out
cmp
xchg
jl
mov
stos
outs
cmp
fisubr
add
add
inc
dec
ins
sub
mov
mov
inc
mov
or
jl
inc
mov
cld
sti
push
pop
pop
inc
mov
xor
inc
mov
mov
mov
neg
sbb
dec
movs
lea
scas
xchg
sub
mov
mov
and
mov
inc
(bad)
mov
inc
mov
(bad)
mov
mov
mov
mov
(bad)
mov
cdq
add
lahf
jp
pusha
(bad)
jg
mov
mov
call
inc
mov
xchg
sub
retf
scas
xchg
scas
mov
mov
and
mov
inc
(bad)
mov
inc
mov
(bad)
mov
mov
mov
mov
(bad)
mov
cdq
add
lahf
jp
pusha
in
inc
dec
stos
xor
inc
mov
stos
idiv
(bad)
jmp
xchg
out
jae
push
xchg
retf
dec
jg
in
mov
mov
jb
sar
dec
fmul
call
(bad)
jl
in
mov
mov
call
mov
sub
mov
fadd
or
packuswb
and
add
int
les
dec
add
stos
neg
dec
jg
in
mov
dec
sub
xchg
inc
mov
mov
outs
xchg
add
add
icebp
sbb
dec
add
fwait
nop
xor
mov
(bad)
in
pop
fsub
xchg
(bad)
(bad)
(bad)
inc
jae
cli
jecxz
inc
fadd
or
(bad)
mov
add
(bad)
push
adc
mov
(bad)
(bad)
jmp
xchg
xchg
sti
(bad)
(bad)
inc
jmp
popf
(bad)
(bad)
jmp
les
(bad)
(bad)
push
mov
test
fdivr
cmp
cs
mov
not
mov
lods
dec
jmp
cmp
dec
outs
outs
les
jmp
cmp
and
xchg
inc
sti
(bad)
(bad)
(bad)
inc
scas
(bad)
(bad)
(bad)
inc
aad
popf
(bad)
(bad)
(bad)
in
inc
sti
(bad)
(bad)
push
pop
pop
test
mov
in
add
jae
jmp
(bad)
jmp
add
scas
(bad)
(bad)
dec
lods
les
dec
add
push
ja
mov
add
add
add
push
cdq
add
lods
xor
sub
movs
mov
xor
xchg
(bad)
(bad)
push
add
imul
push
jmp
dec
aaa
stos
div
mov
xor
dec
lods
les
dec
add
push
pusha
mov
jmp
dec
call
add
les
idiv
fmul
outs
les
jmp
outs
outs
les
ret
add
mov
call
dec
sbb
call
(bad)
cmp
dec
outs
add
test
push
jg
jmp
or
call
add
scas
(bad)
(bad)
dec
lods
les
dec
add
push
sbb
jmp
mul
xor
xchg
(bad)
(bad)
push
mov
les
dec
mov
imul
idiv
jmp
dec
aaa
stos
mul
add
lods
les
xchg
(bad)
(bad)
dec
lods
les
dec
add
push
pusha
mov
jmp
dec
call
add
cmc
test
jmp
inc
add
cmp
dec
outs
outs
cmc
test
push
pop
int3
jmp
cmp
and
mov
and
sti
dec
in
inc
xchg
in
mov
mov
add
pusha
call
add
dec
dec
sti
idiv
bound
add
cmps
xor
in
mov
mov
push
push
scas
cwde
in
pusha
in
int
xchg
in
mov
mov
idiv
(bad)
jmp
mov
mov
imul
jp
add
inc
(bad)
mov
add
jp
fcom
lods
sub
(bad)
mov
imul
stos
jl
(bad)
mov
imul
jae
mov
(bad)
mov
add
dec
mul
sub
dec
faddp
jae
cli
jecxz
jae
jecxz
add
jp
inc
xor
in
mov
sbb
js
les
jae
fld
mov
add
stos
xchg
les
dec
add
jl
mov
xchg
sub
dec
add
cmp
xchg
jl
mov
stos
outs
iret
sub
xor
add
add
sti
fsub
jae
mov
sub
jae
sub
add
sub
add
add
add
add
add
sub
idiv
outs
cmp
fisubr
dec
add
dec
div
(bad)
mov
push
xor
pop
push
iret
sub
add
jp
dec
ja
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
call
dec
add
div
les
dec
mov
outs
sub
xchg
test
jmp
not
(bad)
(bad)
dec
xchg
out
jae
xor
les
mov
jmp
outs
sbb
test
add
pusha
outs
add
lods
les
dec
mov
outs
sub
jae
xor
mov
dec
stos
test
add
fdiv
cmp
iret
sub
dec
add
jnp
jecxz
aaa
iret
sub
add
sub
add
add
add
add
add
(bad)
mov
add
add
(bad)
mov
add
add
add
add
add
add
(bad)
mov
add
add
(bad)
mov
add
add
movs
mov
aaa
iret
sub
add
add
ret
xchg
sub
or
iret
sub
add
stos
in
push
sub
add
add
(bad)
mov
(bad)
(bad)
mov
stos
outs
daa
sub
add
add
or
add
cmp
outs
jb
pop
imul
jmp
outs
iret
sub
add
add
test
mov
mov
idiv
(bad)
jmp
mov
mov
xor
(bad)
cmp
add
add
inc
(bad)
mov
add
(bad)
push
(bad)
mov
inc
mov
mov
mov
in
mov
mov
jmp
mov
outs
sub
jae
add
mov
mov
dec
(bad)
mov
call
mov
adc
(bad)
mov
jmp
sub
outs
iret
sub
add
add
xor
add
aad
scas
cmp
outs
call
sub
aaa
pop
jmp
or
iret
test
add
lods
pop
mov
mov
jg
add
or
mov
add
imul
jg
(bad)
mov
xchg
and
and
lods
les
dec
mov
outs
sub
jae
add
mov
dec
(bad)
mov
(bad)
cmp
add
(bad)
jl
in
mov
(bad)
(bad)
jl
in
mov
(bad)
jl
in
mov
(bad)
call
inc
stos
inc
jl
in
mov
and
(bad)
mov
add
mov
mov
outs
xor
and
add
lods
mov
fsubr
jae
add
mov
mov
(bad)
mov
mov
(bad)
call
outs
iret
sub
add
add
in
add
push
iret
sub
dec
add
(bad)
lods
les
dec
add
jae
add
mov
jmp
lods
sbb
outs
call
add
mov
mov
outs
xor
sub
mov
fsubr
jae
add
mov
mov
(bad)
mov
mov
(bad)
call
outs
iret
sub
add
add
out
add
push
iret
sub
dec
add
jecxz
test
(bad)
jmp
mov
sbb
std
add
add
xchg
out
jae
xor
or
push
aad
(bad)
(bad)
jl
xor
xor
mov
fwait
xor
jmp
xchg
sub
rcr
jecxz
add
xor
cmp
dec
push
movs
call
(bad)
mov
mov
mov
(bad)
mov
mov
(bad)
call
sub
neg
push
(bad)
jmp
xchg
(bad)
stos
push
iret
sub
jae
add
mov
(bad)
jl
inc
mov
(bad)
dec
sub
fdivp
mov
les
dec
add
push
iret
sub
jae
add
mov
jmp
lods
sbb
outs
call
add
pop
pop
(bad)
jmp
mov
cmp
xor
dec
call
mov
xor
fwait
fwait
xor
and
(bad)
mov
in
add
inc
pop
push
xor
sub
dec
push
movs
call
(bad)
mov
mov
mov
(bad)
mov
mov
(bad)
call
sub
div
sbb
jmp
xchg
(bad)
stos
push
iret
sub
jae
adc
mov
(bad)
jl
inc
mov
(bad)
dec
sub
fdivp
mov
les
dec
add
push
iret
sub
jae
adc
mov
(bad)
jl
in
mov
cmp
lea
add
stos
mul
test
add
cwde
iret
xor
xor
jg
(bad)
mov
xchg
and
and
jl
in
mov
(bad)
jl
in
mov
(bad)
jl
in
mov
(bad)
call
inc
stos
inc
jl
in
mov
and
(bad)
mov
add
mov
add
add
mov
mov
push
stos
idiv
add
mov
lods
mov
dec
add
pop
cmc
xor
int
dec
push
movs
call
(bad)
mov
mov
mov
(bad)
mov
mov
(bad)
call
sub
and
dec
add
jae
adc
mov
std
dec
add
test
cmps
jmp
lods
sbb
outs
call
add
mov
(bad)
dec
sub
pop
div
(bad)
jmp
xchg
(bad)
stos
jae
adc
mov
std
dec
add
sbb
cmp
popf
idiv
xchg
(bad)
jmp
sub
stos
pop
cmc
xor
push
(bad)
dec
push
movs
call
(bad)
mov
mov
mov
(bad)
mov
mov
(bad)
call
sub
cmps
xchg
(bad)
jmp
xchg
(bad)
stos
jae
call
iret
sub
dec
add
repnz
jmp
lods
sbb
outs
push
sub
sbb
xchg
shr
pusha
dec
add
div
cmp
jp
inc
cmp
mov
add
xchg
dec
(bad)
mov
add
sub
add
add
xor
pusha
dec
daa
sub
xchg
add
add
daa
sub
dec
add
in
add
mov
icebp
sbb
add
add
idiv
fadd
in
popf
xchg
dec
dec
lods
xchg
dec
dec
scas
xchg
dec
dec
xchg
xchg
dec
dec
xor
sti
jnp
div
xchg
mov
push
xchg
mov
xor
add
dec
faddp
xchg
pop
push
cmp
add
cmp
add
mov
cmp
jp
mov
push
outs
and
(bad)
push
out
(bad)
mov
dec
pop
outs
and
(bad)
jmp
(bad)
call
jmp
test
mov
outs
dec
sbb
jmp
mul
adc
jnp
addr16
and
dec
test
test
(bad)
fadd
fmul
add
(bad)
call
jmp
neg
mov
(bad)
in
push
outs
cmp
or
jmp
dec
cmp
scas
add
out
mov
push
cmp
add
sbb
xor
pusha
repz
add
in
pusha
outs
mov
push
outs
and
(bad)
push
push
(bad)
mov
dec
pop
outs
and
(bad)
jmp
(bad)
call
jmp
test
mov
outs
dec
sbb
jmp
idiv
imul
fisub
and
dec
test
sub
fadd
fmul
add
(bad)
call
jmp
mul
mov
(bad)
in
mov
adc
outs
mov
push
outs
and
(bad)
push
push
(bad)
mov
dec
pop
outs
and
(bad)
jmp
cmp
mov
dec
outs
cmp
idiv
mov
cwde
adc
jnp
addr16
and
cwde
cmp
add
add
add
dec
outs
add
(bad)
call
jmp
div
jmp
or
cmp
dec
dec
mov
dec
in
pusha
outs
mov
push
outs
and
(bad)
push
push
(bad)
mov
dec
pop
outs
and
(bad)
jmp
cmp
sti
idiv
or
outs
cmp
mul
mov
cwde
adc
jnp
addr16
and
cwde
cmp
add
add
add
dec
outs
add
(bad)
call
jmp
idiv
jmp
or
cmp
dec
dec
out
dec
in
pusha
outs
mov
push
outs
and
(bad)
push
out
(bad)
mov
dec
pop
outs
and
(bad)
jmp
cmp
test
xchg
or
cmp
idiv
add
addr16
and
cwde
cmp
add
add
add
dec
outs
add
(bad)
call
jmp
div
adc
dec
mov
dec
cmp
dec
dec
push
dec
in
pusha
outs
mov
push
outs
and
(bad)
push
out
(bad)
mov
dec
pop
outs
and
(bad)
jmp
cmp
sbb
fisttp
mov
dec
xchg
outs
cmp
neg
adc
jnp
addr16
and
cwde
cmp
add
add
add
dec
outs
add
(bad)
call
jmp
test
ja
call
xchg
pusha
outs
mov
push
outs
and
(bad)
push
push
(bad)
mov
dec
pop
outs
and
(bad)
jmp
(bad)
call
jmp
neg
or
call
mov
mov
mov
and
cwde
or
(bad)
inc
call
inc
fadd
fmul
add
(bad)
push
out
jmp
iret
pop
call
or
cmp
add
mov
mov
dec
in
mov
sbb
iret
mov
(bad)
push
out
(bad)
mov
inc
mov
mov
cwde
or
cmp
rcr
test
mov
pusha
aaa
cmp
jg
add
aad
push
call
mov
jecxz
aaa
(bad)
stos
stos
(bad)
in
push
lahf
mov
cmp
xchg
push
aaa
cmp
popf
add
add
pusha
call
xor
mul
push
call
dec
jmp
dec
fimul
div
out
dec
push
rcr
sti
mov
jecxz
inc
(bad)
dec
dec
out
add
mov
mov
mov
aas
dec
stos
dec
cmp
dec
movs
imul
in
call
mov
test
dec
mov
jg
pop
(bad)
test
jmp
dec
in
mov
outs
mov
stos
dec
push
imul
cmp
mov
add
out
add
aas
dec
add
in
pusha
stos
stos
stos
stos
dec
cmp
jae
clc
(bad)
mov
in
(bad)
in
pusha
stos
stos
xchg
jae
inc
jecxz
stos
stos
xchg
xor
sub
mov
cs
mov
xor
add
fwait
fwait
sub
mov
dec
in
pop
xchg
sti
mov
call
data16
(bad)
inc
jmp
(bad)
(bad)
fsub
cmp
aas
add
in
pusha
xchg
sbb
cmp
jecxz
pop
daa
push
(bad)
mov
dec
xchg
xchg
mov
(bad)
call
(bad)
jmp
push
addr16
(bad)
mov
(bad)
call
jmp
push
int3
call
out
(bad)
mov
push
(bad)
mov
add
mov
(bad)
in
push
retf
add
call
cmp
jecxz
mov
sub
mov
(bad)
cmp
add
mov
jmp
xor
(bad)
mov
jmp
sub
dec
push
cmp
mov
jmp
(bad)
call
jmp
neg
inc
mov
or
call
jmp
(bad)
cmp
dec
outs
in
adc
jecxz
retf
(bad)
jmp
cwde
adc
sar
(bad)
(bad)
jnp
addr16
xchg
jae
add
jae
(bad)
jmp
call
in
pusha
dec
ficomp
pusha
scas
lahf
jp
pusha
dec
mov
mov
xchg
(bad)
mov
(bad)
in
pusha
outs
sub
mov
(bad)
cmp
add
mov
jmp
xor
(bad)
mov
jmp
(bad)
mov
jmp
cmp
mov
(bad)
jmp
(bad)
cmp
dec
outs
in
add
push
cmp
jecxz
add
cld
xor
cmp
(bad)
push
test
call
popf
jae
test
scas
jmp
jmp
mul
sbb
pop
xchg
sti
mov
jecxz
pusha
(bad)
dec
inc
sub
mov
(bad)
dec
xchg
mov
inc
dec
(bad)
jmp
dec
or
jbe
sahf
push
mov
(bad)
push
add
outs
xchg
dec
test
jmp
jnp
dec
inc
mov
dec
add
or
dec
xchg
dec
and
mov
push
add
add
add
shl
loopne
(bad)
cmp
dec
outs
add
cmp
mov
(bad)
cmp
dec
outs
add
jmp
call
jmp
test
jmp
jl
inc
mov
mov
loopne
(bad)
jl
inc
mov
mov
add
cli
loopne
(bad)
fcom
neg
push
test
mov
(bad)
call
jmp
push
int3
call
test
(bad)
call
cmp
jecxz
xchg
xor
(bad)
mov
dec
mov
mov
ror
add
add
lods
cmp
in
fdiv
mov
push
add
lods
cmp
dec
mov
(bad)
mov
add
shl
(bad)
push
test
lods
sub
call
jmp
push
int3
call
push
(bad)
mov
inc
call
mov
call
jmp
dec
add
call
(bad)
cmp
or
add
add
add
lods
cmp
adc
pusha
mov
jmp
xor
add
dec
xor
in
mov
(bad)
mov
xchg
xchg
(bad)
mov
(bad)
in
pusha
fisubr
mov
fdivr
mov
xchg
aaa
mov
aaa
mov
mov
add
aaa
mov
or
add
xchg
idiv
in
push
and
add
dec
repz
cwde
adc
cwde
adc
dec
imul
cwde
adc
dec
xlat
sti
jecxz
jl
(bad)
mov
add
rcr
inc
test
mov
xchg
xchg
(bad)
mov
jmp
loope
mov
fsubr
fdivr
mov
adc
mov
jmp
jae
add
add
pusha
mov
inc
jbe
(bad)
jns
test
call
or
adc
stos
cwde
adc
dec
dec
dec
jp
test
(bad)
jmp
sti
xchg
aaa
cmp
test
loope
mov
xchg
mov
push
or
mov
jmp
mov
push
jo
mov
add
dec
inc
in
mov
(bad)
mov
in
mov
(bad)
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
dec
and
mov
sub
add
fwait
out
add
add
push
(bad)
mov
inc
cmp
mov
xor
mov
test
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
dec
mov
fcom
fmul
add
dec
xchg
fwait
out
add
add
test
div
mov
in
mov
xor
mov
and
cmp
sub
cmp
stos
xor
test
dec
lahf
jp
inc
dec
call
test
(bad)
(bad)
cmp
adc
sub
add
lods
fwait
out
add
add
push
(bad)
mov
call
inc
xor
add
add
mov
(bad)
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
dec
(bad)
in
mov
dec
dec
add
jae
add
lods
jae
clc
(bad)
mov
ror
mov
test
test
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
dec
(bad)
in
mov
dec
dec
add
jae
add
lods
fwait
and
add
jae
clc
(bad)
mov
or
(bad)
(bad)
fcom
imul
inc
test
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
dec
std
in
mov
dec
dec
add
jae
add
lods
jae
clc
(bad)
mov
rcr
neg
adc
(bad)
fcom
imul
cmp
mov
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
call
(bad)
dec
cmp
mov
and
xchg
mov
sub
dec
add
and
add
sti
jg
add
lods
stos
jae
test
add
add
(bad)
fcom
test
test
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
call
cmp
jecxz
xchg
xor
in
mov
dec
(bad)
mov
ror
add
add
lods
jae
test
fdiv
mov
(bad)
fcom
neg
cmp
mov
call
jmp
push
int3
call
push
(bad)
mov
dec
lahf
jp
inc
dec
call
test
jmp
mov
xchg
out
(bad)
mov
div
cmp
fwait
cmp
sub
add
or
lods
stos
fmul
mov
repnz
(bad)
fcom
idiv
test
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
dec
lahf
jp
inc
dec
call
test
(bad)
cmp
sub
add
lods
jae
out
(bad)
mov
repnz
(bad)
fcom
test
and
cmp
xchg
push
int3
call
push
(bad)
mov
dec
lahf
jp
inc
dec
call
imul
(bad)
(bad)
(bad)
cmp
sub
add
lods
jae
out
(bad)
mov
add
add
(bad)
fcom
test
test
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
dec
lahf
jp
inc
dec
call
imul
(bad)
(bad)
cmp
sub
add
lods
jae
out
(bad)
mov
repnz
call
ins
mov
push
add
add
(bad)
imul
inc
test
mov
(bad)
call
jmp
push
int3
call
mov
add
add
mov
jmp
xchg
mov
push
xor
imul
mov
dec
dec
add
push
add
lahf
jp
pusha
push
cmp
jecxz
lods
cmp
xchg
xor
inc
mov
inc
jl
inc
mov
mov
add
cmp
mov
jecxz
jae
jp
add
mov
(bad)
(bad)
jl
inc
mov
mov
add
cmp
inc
mov
mov
mov
(bad)
in
pusha
outs
sub
mov
(bad)
cmp
add
mov
jmp
xor
(bad)
mov
jmp
adc
out
outs
sti
mov
jmp
(bad)
push
cld
pop
mov
stos
outs
outs
jmp
(bad)
call
jmp
test
mov
(bad)
call
jmp
(bad)
cmp
dec
outs
in
adc
jecxz
dec
imul
jmp
(bad)
(bad)
jnp
addr16
xor
and
cwde
iret
xchg
dec
add
outs
and
(bad)
(bad)
inc
jmp
xor
popf
mov
push
add
mov
dec
and
(bad)
(bad)
jmp
call
in
pusha
dec
(bad)
(bad)
dec
and
push
cwde
iret
cmps
add
add
outs
fcos
(bad)
push
mov
mov
jae
push
(bad)
mov
push
cmp
addr16
es
jae
clc
(bad)
mov
aaa
and
mov
call
add
aaa
and
jmp
jmp
data16
xchg
mov
push
and
mov
inc
add
lods
not
adc
jmp
fcos
(bad)
inc
call
lods
mov
dec
and
outs
and
mov
jmp
(bad)
jmp
(bad)
jmp
outs
and
outs
fnstenv
daa
push
cmp
xor
inc
jle
jmp
lods
mov
call
mov
jmp
fcos
(bad)
jmp
test
jmp
popf
mov
push
lds
repz
(bad)
call
(bad)
(bad)
jnp
addr16
and
cwde
iret
repnz
fcom
not
loop
(bad)
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
dec
lahf
jp
inc
dec
call
test
jp
xor
add
jae
add
lods
jae
clc
(bad)
mov
add
div
test
(bad)
call
data16
(bad)
jmp
jb
(bad)
call
jmp
xchg
(bad)
mov
jmp
(bad)
mov
jmp
xor
cmps
mov
dec
and
(bad)
jmp
call
in
pusha
dec
faddp
xchg
cs
push
and
add
add
xor
cs
call
add
outs
fcos
(bad)
push
sub
mov
outs
and
test
jmp
idiv
pusha
push
cmp
fldcw
call
call
jmp
push
xchg
(bad)
mov
jmp
iret
jmp
jmp
fcos
(bad)
call
jmp
test
sub
test
push
dec
and
(bad)
cmp
dec
outs
add
jmp
call
jmp
imul
jmp
jae
push
(bad)
mov
div
adc
mov
and
mov
inc
dec
popf
mov
inc
push
clc
(bad)
mov
aaa
and
mov
push
add
add
and
mov
jmp
add
lods
test
jmp
outs
and
(bad)
(bad)
inc
call
mov
(bad)
dec
and
outs
and
mov
jmp
(bad)
jmp
(bad)
jmp
outs
and
outs
outs
fnstenv
daa
push
cmp
imul
arpl
jmp
jmp
dec
lea
call
jmp
dec
(bad)
cmp
dec
jae
add
add
add
out
jmp
push
ds
mov
push
cmp
dec
dec
inc
mov
(bad)
mov
neg
je
jmp
call
mov
(bad)
push
and
mov
(bad)
stc
dec
add
aaa
and
jmp
(bad)
jg
add
aaa
and
mov
inc
add
lods
test
jmp
in
pusha
push
cmp
sub
cmp
inc
cmp
and
push
out
(bad)
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
test
(bad)
fdivr
outs
dec
pop
and
pop
push
cmp
pop
test
jmp
in
call
mov
(bad)
push
cmp
xchg
fmul
add
push
inc
jl
call
cmp
(bad)
call
jmp
imul
jl
jmp
call
(bad)
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
and
(bad)
(bad)
jmp
(bad)
jmp
daa
not
xchg
outs
and
test
inc
jmp
xchg
mov
jmp
(bad)
mov
push
push
pop
mov
dec
and
test
jmp
call
in
pusha
dec
faddp
xchg
xchg
mov
dec
(bad)
mov
call
and
iret
jnp
add
lods
pusha
xor
(bad)
push
xor
jmp
jmp
dec
jmp
imul
adc
(bad)
jmp
pusha
test
push
xor
dec
push
cmp
pop
xchg
mov
push
xchg
(bad)
mov
(bad)
jmp
stos
imul
sbb
push
pop
xor
jmp
and
(bad)
jmp
(bad)
jmp
test
popf
fadd
fmul
sbb
jmp
idiv
imul
mov
jmp
push
clc
(bad)
mov
(bad)
call
jmp
mul
(bad)
in
pusha
push
cmp
retf
outs
sub
add
push
jmp
push
xchg
(bad)
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
imul
mov
fdivr
outs
outs
sub
pop
push
cmp
dec
neg
leave
jmp
cmp
dec
outs
add
outs
leave
jmp
cmp
dec
outs
add
push
jmp
fmul
add
jmp
call
jmp
neg
leave
jmp
aad
or
iret
pop
add
jae
clc
(bad)
mov
(bad)
push
jnp
jmp
in
pusha
push
cmp
out
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
push
jmp
push
xchg
(bad)
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
test
mov
fdivr
outs
outs
fidiv
cmp
mov
call
fmul
add
les
dec
outs
add
push
xchg
add
dec
outs
add
jmp
call
jmp
test
jmp
jae
clc
(bad)
mov
(bad)
push
push
pop
jmp
in
pusha
push
cmp
in
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
push
jmp
push
xchg
(bad)
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
not
jmp
push
mov
jmp
push
cmp
inc
test
jmp
in
call
mov
(bad)
push
xchg
add
dec
outs
add
push
push
add
jmp
xchg
fmul
add
jmp
push
or
clc
(bad)
mov
(bad)
push
adc
(bad)
in
pusha
push
cmp
inc
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
push
jmp
push
xchg
(bad)
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
neg
sbb
xchg
outs
outs
pop
mov
jmp
push
cmp
or
(bad)
cmp
dec
outs
add
sahf
data16
cmp
dec
outs
add
push
push
data16
cmp
dec
outs
add
jmp
call
jmp
idiv
bound
outs
and
stos
outs
and
(bad)
call
mov
jmp
(bad)
push
and
mov
dec
add
test
jmp
xchg
push
aaa
in
xchg
outs
and
outs
and
mov
(bad)
in
pop
not
push
call
outs
and
mov
jmp
(bad)
push
lock
mov
in
pop
push
cmp
aad
xor
jmp
cmp
dec
push
cmp
xor
mov
jmp
jae
clc
(bad)
mov
(bad)
push
add
in
pusha
push
cmp
aam
sub
jmp
(bad)
cmp
add
jmp
jmp
push
jmp
push
xchg
(bad)
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
idiv
fnstenv
outs
mov
imul
push
(bad)
in
call
mov
(bad)
push
pop
push
call
push
jmp
push
in
jmp
xchg
fmul
add
jmp
call
jmp
not
push
(bad)
fdivr
xchg
outs
and
jmp
(bad)
push
retf
aas
jmp
lods
les
outs
and
dec
xchg
mov
jmp
jmp
mov
(bad)
push
or
add
lods
xor
jmp
add
cmp
pop
test
jmp
cmp
dec
dec
jnp
mov
jmp
rcr
xchg
in
pusha
push
cmp
ret
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
push
jmp
push
push
(bad)
mov
call
jmp
outs
and
jmp
(bad)
jmp
cmp
lods
mov
jmp
cmp
fdivp
push
out
mov
or
call
jmp
(bad)
cmp
dec
outs
add
call
jmp
test
jmp
cwde
adc
xchg
jnp
addr16
xchg
jae
add
add
outs
cmp
xchg
fnstenv
fnstenv
(bad)
jmp
push
or
dec
imul
call
in
pusha
dec
faddp
xchg
fnstenv
(bad)
jmp
call
and
mov
call
add
outs
mov
arpl
mov
in
pusha
outs
add
(bad)
push
and
(bad)
jmp
data16
inc
(bad)
push
out
mov
iret
test
push
xor
(bad)
(bad)
mov
(bad)
call
jmp
mul
mov
push
cmp
inc
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
push
jmp
push
adc
mov
dec
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
test
outs
outs
jb
(bad)
jmp
in
pop
push
cmp
cmp
aad
jmp
in
call
mov
(bad)
push
adc
jmp
xchg
fmul
add
push
xor
jmp
xchg
fmul
add
jmp
call
jmp
idiv
in
call
sub
test
call
add
clc
(bad)
mov
(bad)
push
addr16
push
cmp
inc
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
push
jmp
push
test
mov
dec
push
stos
outs
and
jmp
(bad)
jmp
(bad)
call
jmp
imul
outs
outs
jae
(bad)
jmp
push
cmp
shl
out
jmp
in
call
mov
(bad)
push
lods
in
call
push
jmp
push
jp
jmp
xchg
fmul
add
jmp
call
jmp
test
cld
test
call
add
clc
(bad)
mov
(bad)
push
test
jmp
in
pusha
push
cmp
push
outs
sub
inc
scas
mov
jmp
(bad)
jae
test
mov
dec
push
stos
outs
and
ret
stos
outs
and
ret
stos
outs
outs
mov
cmp
push
mul
jmp
iret
test
jmp
push
cmp
sub
jnp
jmp
in
call
cmc
ret
mul
fmul
add
ret
idiv
fmul
add
cmp
fdiv
cli
jbe
jmp
jb
(bad)
jmp
(bad)
push
lock
jb
(bad)
push
ins
mov
mov
push
cmp
ret
neg
addr16
outs
and
mov
in
pop
repz
and
mov
jmp
(bad)
push
movs
mov
jmp
or
outs
cmp
stos
neg
sbb
(bad)
push
mov
mov
cmp
dec
outs
outs
fs
push
mov
fmul
outs
pusha
test
push
mov
and
push
cmp
dec
test
mov
outs
and
mov
push
push
dec
mov
repz
(bad)
jmp
out
jmp
jmp
mov
jmp
(bad)
jmp
push
mov
mov
inc
(bad)
jmp
push
xor
(bad)
mov
(bad)
jmp
idiv
mov
outs
and
(bad)
(bad)
jmp
imul
and
mov
push
test
pop
repz
(bad)
(bad)
cmp
dec
outs
in
pop
neg
jmp
cmp
dec
outs
in
daa
div
sbb
or
call
(bad)
(bad)
jmp
call
data16
(bad)
jmp
data16
(bad)
call
(bad)
(bad)
jmp
push
aaa
or
add
fwait
fs
(bad)
mov
dec
sti
fsub
(bad)
call
inc
in
pusha
xchg
push
in
out
xchg
rol
fwait
xchg
push
add
jae
(bad)
mov
inc
dec
dec
inc
daa
push
(bad)
mov
xchg
cmc
jmp
(bad)
jmp
(bad)
(bad)
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
test
mov
(bad)
jmp
add
and
mov
outs
and
outs
and
test
call
jmp
dec
outs
sub
jmp
inc
(bad)
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
iret
test
push
push
(bad)
mov
(bad)
inc
add
mul
mov
outs
and
test
call
jmp
dec
outs
sub
jmp
inc
(bad)
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
lods
(bad)
(bad)
push
push
(bad)
mov
(bad)
inc
add
mov
outs
and
outs
and
jmp
dec
outs
sub
jmp
push
clc
(bad)
mov
(bad)
inc
push
rol
push
cmp
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
push
(bad)
mov
dec
stos
outs
cmp
stos
outs
and
sbb
dec
outs
sub
jmp
(bad)
fdivr
outs
dec
aas
and
pop
push
cmp
sti
not
sub
mov
outs
add
cmp
outs
in
sbb
push
mov
(bad)
cmp
outs
add
ins
mov
(bad)
cmp
outs
add
mov
(bad)
cmp
outs
add
test
push
scas
mov
(bad)
cmp
outs
add
test
call
jmp
mul
mov
(bad)
fcom
imul
xchg
and
(bad)
call
jmp
push
int3
call
out
(bad)
mov
push
(bad)
mov
add
jmp
(bad)
in
push
push
xor
dec
lahf
jp
inc
push
cmp
jp
mov
xchg
inc
mov
fs
sub
(bad)
inc
dec
cmp
(bad)
dec
jbe
sahf
push
mov
(bad)
dec
cmc
jmp
dec
add
(bad)
push
add
xchg
inc
add
(bad)
push
add
jmp
dec
inc
push
jmp
dec
dec
and
jmp
call
test
xor
mov
mov
mov
jmp
inc
mov
mov
jmp
inc
mov
mov
add
int3
jmp
inc
mov
mov
add
je
(bad)
inc
mov
and
(bad)
(bad)
cmp
add
jmp
jmp
sbb
push
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
test
cmc
outs
cmp
div
(bad)
mov
or
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
neg
jmp
jae
push
(bad)
mov
idiv
jmp
fsubr
mov
jb
mov
mov
mov
aaa
and
jmp
jmp
add
aaa
and
jmp
inc
add
aaa
and
jmp
inc
add
lods
div
jl
jmp
cmc
jmp
jmp
(bad)
jmp
mov
mov
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
idiv
(bad)
jmp
inc
sar
mov
jb
mov
push
(bad)
mov
cs
mov
push
(bad)
mov
mov
jae
or
mov
mul
sar
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
sub
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
nop
xchg
mov
dec
cmc
outs
cmp
idiv
mov
or
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
imul
jmp
jae
push
(bad)
mov
mul
mov
cmp
stos
aaa
and
jmp
dec
add
aaa
and
(bad)
call
add
add
and
jmp
jmp
and
jmp
(bad)
stc
add
add
and
jmp
dec
dec
lods
test
cmc
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
imul
xchg
(bad)
jmp
call
add
jmp
inc
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
push
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
lea
outs
cmp
neg
jp
dec
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
not
clc
(bad)
mov
test
jmp
jae
push
(bad)
mov
aaa
and
jmp
dec
add
aaa
and
(bad)
call
add
add
and
jmp
jmp
and
jmp
(bad)
stc
add
add
and
jmp
dec
dec
lods
mul
jmp
outs
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
imul
das
(bad)
jmp
call
add
jmp
inc
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
push
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
mov
mov
dec
cmc
outs
cmp
imul
mov
or
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
not
jmp
jae
push
(bad)
mov
idiv
jmp
jae
push
(bad)
mov
aaa
and
jmp
dec
add
aaa
and
(bad)
call
add
add
and
jmp
jmp
add
add
and
jmp
(bad)
stc
add
add
and
jmp
inc
add
not
add
cmc
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
idiv
(bad)
jmp
call
add
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
push
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
pop
scas
mov
dec
cmc
outs
cmp
neg
mov
or
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
test
jmp
jae
push
(bad)
mov
test
jae
push
(bad)
mov
aaa
and
jmp
dec
add
aaa
and
(bad)
call
add
add
and
jmp
call
add
aaa
and
jmp
(bad)
stc
add
add
and
jmp
inc
add
lods
not
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
idiv
(bad)
jmp
push
jmp
call
int3
call
add
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
aaa
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
dec
pop
mov
dec
cmc
outs
cmp
test
dec
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
mul
push
push
(bad)
mov
imul
data16
jae
clc
(bad)
mov
aaa
and
jmp
(bad)
fisttp
add
and
(bad)
jmp
and
jmp
dec
add
add
and
jmp
jmp
add
and
jmp
inc
fiadd
lods
mul
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
imul
(bad)
jmp
inc
mov
(bad)
call
neg
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
aaa
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
dec
popa
mov
dec
cmc
outs
cmp
idiv
data16
jmp
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
div
(bad)
jmp
jae
push
(bad)
mov
test
(bad)
jl
in
mov
mov
(bad)
(bad)
fisttp
add
and
(bad)
jmp
and
jmp
dec
add
add
and
jmp
call
add
aaa
and
jmp
inc
add
lods
in
xchg
jmp
push
clc
(bad)
mov
test
jmp
outs
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
not
sti
inc
mov
xchg
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
aaa
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
or
cmc
outs
cmp
not
jmp
or
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
test
push
push
(bad)
mov
not
add
(bad)
fdivr
outs
cmp
stos
in
pop
fwait
out
mov
jmp
(bad)
fisttp
add
and
(bad)
jmp
and
jmp
dec
add
add
and
jmp
jmp
add
add
and
jmp
inc
fiadd
lods
not
outs
jmp
outs
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
cmp
stos
outs
outs
(bad)
(bad)
jmp
iret
imul
jmp
clc
(bad)
mov
(bad)
push
add
push
cmp
popa
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
aaa
(bad)
mov
dec
stos
outs
cmp
stos
outs
and
cmp
pop
dec
outs
sub
jmp
(bad)
fdivr
outs
dec
iret
and
jmp
div
daa
jmp
cmp
dec
outs
add
add
(bad)
cmp
dec
outs
in
sbb
shl
jmp
cmp
dec
outs
add
cmp
jp
nop
daa
jmp
jae
adc
mov
aaa
hlt
mov
mov
aad
add
fcom
neg
jo
(bad)
mov
(bad)
call
jmp
xor
push
int3
call
stc
(bad)
dec
lahf
jp
inc
dec
call
div
(bad)
(bad)
cmp
sub
add
add
lods
jae
aaa
(bad)
mov
cwde
mov
(bad)
fmul
mul
shl
dec
cmps
test
mov
(bad)
call
jmp
push
int3
call
pop
(bad)
dec
lahf
jp
inc
dec
call
mul
fsubr
add
lods
jae
aaa
(bad)
mov
cmp
(bad)
fcom
neg
test
mov
(bad)
call
jmp
push
int3
call
pop
(bad)
call
cmp
jp
xchg
xor
inc
mov
(bad)
jl
in
mov
mov
add
lods
lahf
jp
pusha
dec
inc
popf
inc
mov
retf
lods
xchg
jp
jae
aaa
(bad)
mov
cmp
(bad)
fcom
div
cmps
test
mov
(bad)
call
jmp
push
int3
call
pop
(bad)
dec
lahf
jp
inc
dec
call
test
(bad)
(bad)
cmp
sub
add
lods
jae
aaa
(bad)
mov
cmp
(bad)
fcom
not
xchg
adc
cmp
out
int3
call
pop
(bad)
dec
lahf
jp
inc
dec
call
imul
fsubr
add
add
lods
jae
aaa
(bad)
mov
add
add
push
clc
(bad)
mov
(bad)
push
int3
sub
(bad)
in
pusha
push
cmp
fild
and
(bad)
(bad)
cmp
add
jmp
jmp
sbb
xchg
(bad)
mov
dec
stos
outs
cmp
stos
outs
and
cmp
addr16
outs
sub
jmp
(bad)
fdivr
outs
dec
iret
and
pop
push
cmp
xor
mov
jmp
in
call
mov
(bad)
push
xor
fmul
in
sbb
push
jns
call
or
cmp
jp
mov
mov
cmp
div
cwde
mov
mov
inc
add
add
shl
movs
sub
(bad)
mov
(bad)
call
jmp
push
int3
call
push
(bad)
mov
dec
xchg
push
jmp
call
add
jmp
dec
push
cmp
jp
stos
ds
(bad)
cmp
fnstcw
xchg
jae
add
lods
jae
xchg
(bad)
mov
add
add
(bad)
fdiv
cmp
sti
(bad)
mov
(bad)
in
pusha
lods
sbb
add
mov
pop
add
add
mov
mov
mov
(bad)
mov
mov
(bad)
mov
mov
add
(bad)
int
dec
lahf
sti
dec
xlat
sti
dec
imul
cwde
adc
dec
pushf
sti
jecxz
dec
pop
(bad)
(bad)
mov
xchg
fld
mov
pop
pop
(bad)
dec
push
jmp
push
or
mov
call
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
xchg
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
jmp
cmc
outs
cmp
not
fwait
jmp
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
test
cmp
jnp
addr16
xchg
jae
add
add
outs
and
(bad)
jmp
jmp
lea
jmp
neg
jmp
jl
inc
mov
and
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
push
(bad)
mov
jmp
mov
outs
cmp
push
cmp
push
dec
dec
imul
(bad)
cmp
dec
outs
in
sbb
inc
mov
not
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
xchg
(bad)
mov
call
jmp
dec
dec
imul
sbb
or
mov
stos
outs
sub
(bad)
push
push
sbb
outs
in
sbb
jmp
neg
shr
(bad)
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
xchg
(bad)
mov
call
jmp
dec
dec
imul
sbb
icebp
sbb
lea
mov
cmp
dec
outs
in
sbb
jmp
imul
shr
dec
xchg
and
(bad)
jmp
and
(bad)
jmp
mov
and
jmp
dec
imul
(bad)
(bad)
jmp
call
in
pusha
dec
faddp
xchg
and
(bad)
dec
mov
and
jmp
call
add
outs
xchg
(bad)
(bad)
push
mov
mov
jae
push
(bad)
mov
push
cmp
sub
out
jmp
jae
clc
(bad)
mov
aaa
and
jmp
call
add
aaa
and
(bad)
jmp
cmp
(bad)
inc
inc
push
icebp
mov
xchg
(bad)
(bad)
inc
call
push
jmp
dec
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
and
jmp
(bad)
jmp
iret
push
cmp
and
ror
(bad)
jmp
push
cmp
sub
dec
call
jmp
dec
call
inc
mov
add
add
add
(bad)
jmp
push
jmp
jmp
push
mov
(bad)
jnp
(bad)
(bad)
inc
mov
jmp
dec
jae
add
add
add
xchg
(bad)
(bad)
jmp
test
mov
outs
and
cmp
mov
in
pop
repz
test
jmp
outs
(bad)
(bad)
inc
jmp
and
(bad)
jmp
mov
and
jmp
dec
pop
popf
mov
dec
cmp
lods
pusha
test
int3
call
in
pusha
dec
faddp
xchg
and
(bad)
dec
mov
and
jmp
call
add
outs
xchg
(bad)
(bad)
push
mov
iret
push
(bad)
mov
push
cmp
pop
mul
jmp
jae
clc
(bad)
mov
aaa
and
jmp
call
add
aaa
and
(bad)
jmp
cmp
(bad)
inc
push
and
jmp
inc
add
lods
div
adc
jmp
xchg
(bad)
(bad)
inc
call
push
jmp
dec
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
and
jmp
(bad)
jmp
iret
push
cmp
sub
in
push
(bad)
jmp
push
cmp
pop
xchg
push
jmp
dec
call
jmp
dec
call
inc
mov
add
add
add
(bad)
jmp
push
jmp
jmp
iret
inc
mov
(bad)
jnp
(bad)
(bad)
inc
mov
jmp
dec
jae
add
add
add
xchg
(bad)
(bad)
jmp
neg
mov
outs
and
enter
in
pop
repz
(bad)
jmp
lea
jmp
not
mov
outs
(bad)
(bad)
jmp
mul
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
xchg
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
mov
mov
dec
cmc
outs
cmp
test
fwait
jmp
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
neg
adc
std
jnp
addr16
xchg
jae
add
add
dec
in
imul
and
(bad)
jmp
mov
add
jmp
push
push
sbb
outs
inc
test
int3
call
in
pusha
dec
(bad)
(bad)
dec
and
push
cwde
iret
cmps
add
add
outs
xchg
(bad)
(bad)
push
xlat
mov
push
(bad)
mov
push
cmp
cmps
idiv
(bad)
(bad)
mov
aaa
and
jmp
call
add
aaa
and
(bad)
jmp
cmp
(bad)
inc
push
and
jmp
inc
add
lods
neg
clc
jmp
outs
and
and
and
dec
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
and
jmp
(bad)
jmp
iret
push
cmp
jo
test
(bad)
jmp
push
jmp
call
jmp
jmp
xchg
(bad)
(bad)
jmp
neg
and
out
sub
(bad)
(bad)
(bad)
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
sbb
xchg
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
out
test
outs
in
sbb
jmp
idiv
lods
jmp
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
lods
(bad)
(bad)
push
xchg
(bad)
mov
jmp
lods
(bad)
(bad)
call
jmp
dec
outs
sub
jmp
(bad)
push
pushf
sti
mov
cmp
dec
outs
add
jmp
idiv
jmp
in
pusha
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
(bad)
jae
xchg
(bad)
mov
jmp
(bad)
push
cmp
mov
sub
jmp
(bad)
push
and
mov
cmp
dec
outs
add
ret
push
cmp
in
idiv
xor
call
(bad)
(bad)
jnp
addr16
xchg
jae
add
outs
(bad)
(bad)
(bad)
(bad)
jnp
neg
add
cwde
adc
cmp
mul
xchg
call
mov
and
(bad)
push
movs
xchg
jmp
fdivr
jae
xor
rol
jmp
dec
and
inc
mov
and
(bad)
(bad)
cmp
add
jmp
jmp
sbb
sahf
(bad)
mov
jmp
sbb
jmp
dec
outs
sub
jmp
(bad)
push
dec
mov
outs
cmp
idiv
data16
jmp
call
jmp
(bad)
cmp
dec
outs
in
sbb
jmp
div
xchg
jmp
cwde
adc
std
jnp
addr16
xchg
jae
add
add
dec
in
imul
mov
and
jmp
inc
push
push
mov
xor
test
int3
call
in
pusha
dec
faddp
xchg
cmp
and
jmp
call
and
iret
ja
add
lods
pusha
xor
(bad)
push
popa
jecxz
jmp
daa
test
jmp
test
(bad)
in
pusha
push
cmp
inc
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
sbb
xchg
(bad)
mov
jmp
sbb
xchg
(bad)
(bad)
call
jmp
idiv
jecxz
jmp
(bad)
push
jns
mov
cmp
dec
outs
in
sbb
jmp
test
jae
push
(bad)
mov
imul
jg
xchg
add
(bad)
inc
push
clc
(bad)
mov
xchg
jmp
inc
push
and
jmp
jmp
add
add
mov
jmp
outs
and
and
jmp
call
fwait
jmp
dec
and
jmp
jmp
(bad)
jmp
(bad)
jmp
(bad)
jmp
outs
and
outs
outs
(bad)
(bad)
jmp
iret
push
cmp
or
jmp
jmp
dec
lea
call
jmp
dec
(bad)
cmp
dec
jae
add
add
add
lea
jmp
push
cmp
aad
inc
mov
jmp
dec
xor
dec
shl
jg
(bad)
(bad)
in
hlt
aad
scas
inc
mov
dec
push
mul
jae
jmp
daa
test
inc
jmp
mov
and
mov
mov
and
jmp
push
aaa
mov
sub
call
and
jmp
call
add
outs
xchg
test
push
ds
mov
lods
les
push
cmp
aam
jmp
imul
outs
outs
or
(bad)
(bad)
dec
push
cmp
push
xchg
jmp
push
xchg
(bad)
mov
(bad)
jmp
stos
mul
popf
outs
sub
cld
xor
jmp
and
outs
and
jmp
test
popf
cmp
dec
dec
sbb
jmp
neg
and
jmp
std
jmp
jmp
push
clc
(bad)
mov
(bad)
call
jmp
idiv
jmp
in
pusha
push
cmp
fisubr
mov
(bad)
(bad)
cmp
add
push
(bad)
(bad)
push
xchg
(bad)
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
idiv
jp
jmp
std
jmp
jmp
push
cmp
fdiv
loope
jmp
cmp
dec
outs
add
test
(bad)
cmp
dec
outs
add
(bad)
push
mov
jmp
cmp
dec
outs
add
cmp
inc
not
mov
call
add
clc
(bad)
mov
(bad)
push
(bad)
jmp
in
pusha
push
cmp
inc
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
push
(bad)
(bad)
push
xchg
(bad)
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
div
outs
add
cmp
cmp
push
lock
cmp
dec
outs
add
sub
jmp
cmp
dec
outs
add
(bad)
push
pop
shr
cmp
dec
outs
add
cmp
inc
test
push
clc
(bad)
mov
(bad)
push
dec
and
(bad)
in
pusha
push
cmp
inc
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
push
(bad)
(bad)
push
xchg
(bad)
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
not
mov
outs
outs
xor
cmp
shl
mov
jmp
cmp
dec
outs
add
mov
outs
add
(bad)
push
push
mov
dec
outs
add
cmp
inc
mul
mov
clc
(bad)
mov
(bad)
push
out
and
(bad)
in
pusha
push
cmp
push
outs
sub
inc
stos
jmp
jmp
push
(bad)
(bad)
push
xchg
(bad)
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
mul
mov
outs
outs
or
push
cmp
sub
dec
jmp
cmp
dec
outs
add
cmps
mov
dec
outs
add
(bad)
push
addr16
dec
outs
add
cmp
inc
test
out
mov
call
mov
jmp
(bad)
push
or
jmp
repz
add
outs
and
outs
and
jmp
push
and
add
add
mov
mov
and
mov
jmp
(bad)
push
jmp
inc
outs
mov
fdivr
outs
and
jmp
jmp
(bad)
push
pushf
iret
jmp
outs
outs
(bad)
mov
jmp
push
cmp
jb
dec
iret
jmp
fadd
fmul
cmp
inc
not
pop
fmul
and
in
pusha
outs
outs
(bad)
mov
push
and
add
add
les
call
mov
push
jb
jmp
jae
clc
(bad)
mov
(bad)
push
icebp
lods
jmp
in
pusha
push
cmp
dec
outs
sub
(bad)
(bad)
cmp
add
(bad)
jmp
push
(bad)
(bad)
push
xchg
(bad)
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
test
xor
jmp
test
jmp
cmp
dec
outs
add
xchg
into
jmp
cmp
dec
outs
add
(bad)
push
cmc
into
jmp
cmp
dec
outs
add
cmp
inc
mul
into
jmp
fdivr
cmp
and
jmp
(bad)
push
dec
jmp
xor
push
test
dec
xchg
jmp
jmp
jmp
call
add
lods
xor
outs
daa
mov
jmp
push
cmp
stos
test
dec
dec
jnp
fmul
jmp
rcr
pusha
in
pusha
push
cmp
and
jb
(bad)
(bad)
cmp
add
(bad)
jmp
push
(bad)
(bad)
push
push
(bad)
mov
jmp
push
(bad)
(bad)
jmp
(bad)
jmp
xchg
test
call
jmp
not
test
jmp
cmp
cmp
std
cwde
mov
or
call
jmp
(bad)
cmp
dec
outs
add
(bad)
call
jmp
test
jmp
cwde
adc
pusha
jnp
addr16
xchg
jae
add
add
outs
cmp
(bad)
jmp
mov
and
jmp
push
and
outs
mov
and
(bad)
push
lods
add
jmp
call
and
(bad)
call
add
outs
outs
(bad)
(bad)
push
ins
jmp
jmp
les
pushf
jmp
jae
clc
(bad)
mov
(bad)
call
jmp
test
in
pusha
push
cmp
dec
outs
sub
jmp
(bad)
cmp
add
jmp
jmp
scas
jmp
push
adc
mov
dec
stos
outs
and
outs
and
outs
outs
outs
(bad)
(bad)
call
jmp
not
outs
les
cmp
mov
test
fmul
add
xor
dec
outs
add
sub
fmul
add
cmp
js
jmp
jmp
aad
add
dec
add
jae
clc
(bad)
mov
(bad)
push
lock
jmp
in
pusha
push
cmp
mov
(bad)
(bad)
cmp
add
(bad)
jmp
scas
jmp
push
test
jmp
dec
push
stos
outs
and
outs
and
outs
outs
outs
(bad)
(bad)
call
jmp
test
jmp
outs
outs
sti
test
jmp
push
cmp
pop
idiv
jmp
cmp
dec
outs
add
jmp
fmul
add
jno
jmp
cmp
dec
outs
add
cmp
js
jge
jmp
aad
xor
add
add
clc
(bad)
mov
(bad)
push
repz
(bad)
in
pusha
push
cmp
push
outs
sub
inc
adc
and
scas
test
jmp
dec
push
stos
outs
and
outs
and
outs
outs
outs
(bad)
(bad)
call
jmp
not
outs
sub
jmp
neg
fmul
add
push
pop
jmp
cmp
dec
outs
add
cmp
(bad)
cmp
dec
outs
add
cmp
js
sahf
pop
jmp
outs
and
mov
jmp
(bad)
push
sar
jmp
les
std
jmp
outs
and
(bad)
jmp
test
jmp
outs
and
jmp
push
retf
jecxz
push
xchg
mov
jmp
std
jmp
jmp
(bad)
push
or
jmp
outs
in
pusha
push
cmp
inc
mul
imul
jmp
std
jmp
push
adc
fmul
outs
push
test
push
fld
jmp
cmp
dec
outs
outs
or
popa
shr
outs
and
push
cmp
aad
stos
fucomp
jmp
sub
push
xchg
jp
push
mov
(bad)
jmp
lea
inc
mov
jmp
lea
jmp
outs
and
test
jmp
imul
and
push
cmp
in
test
jmp
outs
and
jmp
push
cld
jp
push
in
inc
(bad)
push
lods
add
push
(bad)
mov
(bad)
mov
(bad)
call
(bad)
(bad)
jmp
cmp
jmp
outs
sub
(bad)
push
adc
dec
outs
in
aas
test
dec
outs
in
iret
idiv
jmp
test
test
int3
jae
jp
add
idiv
test
inc
fsub
xchg
add
cs
mov
mov
(bad)
mov
add
push
dec
(bad)
mov
push
xor
lods
xor
mov
mov
(bad)
mov
cmp
sub
inc
inc
dec
cmp
sub
(bad)
mov
add
xor
(bad)
mov
(bad)
mov
(bad)
cmp
and
(bad)
jmp
mov
(bad)
inc
inc
inc
push
push
add
mov
imul
les
xchg
jmp
or
imul
add
mov
stos
mul
add
add
jmp
xchg
test
jmp
mov
jmp
lods
sbb
lods
xor
fmul
dec
mov
mov
jmp
lods
dec
jmp
cmp
dec
test
jmp
xchg
outs
in
push
div
shr
lods
les
aaa
cmp
jp
add
dec
or
imul
add
mov
stos
imul
pop
(bad)
jmp
push
cmp
jecxz
imul
mov
jmp
lods
sbb
lods
xor
fmul
dec
mov
pop
into
jmp
lods
dec
jmp
cmp
dec
div
outs
in
push
mul
mov
xor
cmp
mov
dec
call
(bad)
jmp
stos
mul
mov
mul
pop
(bad)
jmp
push
cmp
mov
(bad)
jmp
mov
jmp
lods
sbb
lods
xor
fmul
dec
mov
and
dec
jmp
cmp
dec
idiv
in
jmp
xchg
outs
in
push
imul
jmp
jmp
add
add
dec
add
and
add
stos
div
inc
(bad)
jmp
push
cmp
mov
(bad)
jmp
mov
jmp
lods
sbb
lods
xor
fmul
dec
mov
jecxz
jmp
lods
dec
jmp
cmp
dec
mul
in
push
neg
les
aaa
cmp
sti
add
add
dec
call
(bad)
jmp
stos
not
add
mov
stos
idiv
inc
(bad)
jmp
push
cmp
test
jmp
mov
jmp
lods
sbb
lods
xor
fmul
dec
mov
loopne
jmp
lods
dec
jmp
cmp
dec
neg
jmp
xchg
outs
in
push
test
jmp
jmp
add
add
dec
call
(bad)
jmp
stos
test
add
mov
stos
idiv
(bad)
jmp
push
cmp
xacquire
test
jmp
mov
jmp
lods
sbb
lods
xor
fmul
dec
mov
or
jmp
lods
dec
jmp
cmp
dec
test
jmp
mov
cmp
(bad)
push
dec
(bad)
mov
stos
aaa
cmp
popf
add
add
push
jmp
lods
sbb
mov
jecxz
pusha
(bad)
stos
inc
cmp
dec
outs
in
push
neg
dec
jmp
cmp
dec
outs
in
mov
mov
jmp
jae
add
add
mov
test
mov
(bad)
push
cmp
jg
add
push
int3
call
add
jae
pop
add
stos
div
mov
add
call
test
(bad)
cmp
outs
scas
(bad)
(bad)
push
and
(bad)
(bad)
call
cmp
xor
cmp
sub
add
push
ja
mov
jmp
xchg
test
add
lods
xor
push
xor
push
cmp
cwde
imul
ds
cmp
dec
dec
jnp
cmp
sub
jmp
mov
mov
lea
xor
xchg
test
jmp
dec
fiadd
add
outs
cmp
cmp
push
cmp
lods
lods
mov
mov
les
dec
add
push
sbb
jmp
outs
mov
add
lods
xor
push
pusha
mov
cmp
hlt
not
jmp
cmp
dec
dec
jnp
cmp
lods
mul
pop
fldenv
mov
mov
popf
pusha
mov
dec
mov
imul
dec
fiadd
add
outs
cmp
sbb
add
fdivr
cmp
outs
dec
mov
cmp
popa
div
jmp
cmp
dec
outs
dec
xchg
push
cmp
lods
idiv
jmp
aad
fs
out
outs
outs
push
test
dec
not
fild
add
jmp
dec
add
jmp
mov
jmp
lods
sbb
fwait
sti
pusha
mov
les
jae
pusha
mov
push
jno
jmp
xchg
test
push
dec
(bad)
mov
(bad)
inc
fiadd
idiv
call
jmp
aad
pusha
cwde
iret
ins
dec
add
lods
les
xchg
test
dec
lods
les
xchg
test
dec
jae
dec
(bad)
mov
cmp
xchg
test
jmp
jmp
iret
test
push
imul
cmp
xor
int
jmp
call
mov
add
lods
xor
push
xchg
in
pop
push
cmp
xchg
test
cmp
in
xchg
div
jno
(bad)
fadd
cmp
outs
iret
test
call
jmp
test
push
sahf
(bad)
mov
mov
imul
jmp
push
test
push
out
mov
add
cmp
mov
adc
pop
int
jmp
and
test
jmp
idiv
jmp
lods
sbb
stos
outs
outs
scas
(bad)
(bad)
call
jmp
test
jmp
dec
cmp
outs
iret
test
push
cmps
inc
jmp
dec
cmp
dec
xchg
test
jmp
dec
cmp
outs
push
test
call
jmp
div
jmp
in
call
outs
and
test
jmp
(bad)
mov
test
push
sahf
(bad)
mov
fcomip
cmp
jmp
xchg
outs
add
cmp
div
movs
jmp
xchg
cmp
outs
push
test
push
and
cmp
outs
iret
test
call
jmp
mul
inc
jmp
outs
and
mov
jmp
jmp
jmp
outs
cmp
lea
scas
jmp
outs
outs
push
test
push
repnz
add
jmp
lods
pop
xchg
lods
mov
jecxz
pusha
(bad)
stos
outs
and
mov
jmp
(bad)
mov
outs
push
test
call
jmp
neg
in
jmp
outs
and
test
jmp
outs
and
outs
and
mov
jmp
idiv
movs
jmp
mov
(bad)
mov
cmp
mov
add
test
push
cmp
imul
test
(bad)
cmp
add
and
(bad)
push
sahf
(bad)
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
idiv
jmp
fdivr
jae
xor
push
cmp
sub
popa
and
dec
outs
add
push
daa
and
dec
outs
add
(bad)
push
shl
outs
in
xchg
push
cmp
mov
and
ins
call
les
dec
mov
imul
idiv
fucomp
(bad)
(bad)
in
pusha
outs
sub
inc
lea
test
push
sahf
(bad)
mov
(bad)
inc
push
mov
aas
test
jmp
outs
or
cmp
and
cs
dec
pusha
sti
lahf
outs
and
test
dec
dec
faddp
cmp
dec
outs
add
test
inc
mov
mov
neg
stos
jmp
jae
sahf
(bad)
mov
jno
jmp
in
pusha
push
cmp
pop
outs
sub
inc
lea
test
push
adc
mov
dec
stos
outs
and
(bad)
jmp
(bad)
jmp
(bad)
call
jmp
test
jae
xor
push
cmp
pop
mul
jmp
cmp
dec
outs
add
push
jae
jmp
cmp
dec
outs
add
(bad)
push
jne
jmp
cmp
dec
outs
in
xchg
push
cmp
mov
sub
test
outs
sub
inc
lea
test
push
sahf
(bad)
mov
jmp
pop
test
jmp
or
cmp
cmps
neg
(bad)
(bad)
xchg
test
jmp
jmp
push
test
push
adc
sbb
(bad)
cmp
add
cmp
jo
inc
cmps
jmp
in
(bad)
cmp
xchg
outs
outs
push
test
push
xor
jmp
cmp
outs
add
(bad)
push
sbb
jmp
or
push
cmp
xor
cmp
jmp
fidiv
jmp
test
jmp
cmp
outs
in
push
test
(bad)
cmp
outs
dec
mov
cmp
sub
jmp
xchg
test
push
pusha
mov
jmp
outs
outs
push
test
push
push
fild
add
push
cmp
or
imul
mov
jmp
lods
sbb
lods
xor
xchg
outs
outs
push
test
call
jmp
div
scas
jmp
lods
les
dec
mov
imul
neg
outs
push
test
push
inc
out
add
push
cmp
xor
jmp
mov
jmp
lods
sbb
lods
xor
xchg
outs
outs
push
test
call
jmp
test
jmp
cmp
fimul
jecxz
not
and
test
jmp
and
and
add
and
test
inc
pusha
add
imul
ins
add
mov
(bad)
mov
(bad)
inc
jmp
mov
(bad)
jmp
jmp
lea
mov
cmp
retf
test
(bad)
mov
jmp
dec
sub
test
jmp
iret
test
dec
div
add
jae
sahf
(bad)
mov
test
jmp
div
les
out
xchg
test
dec
and
push
daa
jmp
lods
sbb
add
dec
outs
add
push
sub
dec
outs
add
test
push
xchg
cmp
dec
outs
in
mov
cmp
retf
mul
les
xchg
test
dec
lods
les
outs
and
add
jmp
dec
imul
add
lods
xor
cmp
sbb
jle
add
push
cmp
mov
sbb
sub
outs
push
test
dec
imul
les
push
cmp
mov
add
jmp
mov
jmp
fidiv
sbb
xor
jmp
outs
cmp
xchg
test
jmp
jmp
push
test
push
mov
add
lods
xor
cmp
(bad)
lods
pop
xchg
lods
mov
jecxz
pusha
(bad)
stos
outs
and
mov
jmp
(bad)
mov
outs
outs
push
test
push
hlt
jno
jmp
mov
(bad)
jmp
(bad)
jmp
imul
jmp
mov
in
add
add
(bad)
mov
add
inc
(bad)
(bad)
mov
(bad)
mov
(bad)
jmp
(bad)
mov
(bad)
call
jmp
test
(bad)
cmp
dec
outs
dec
push
neg
jmp
cmp
dec
xchg
aaa
cmp
cwde
add
add
bound
call
jmp
jl
inc
mov
mov
(bad)
dec
mov
sub
add
test
push
dec
jnp
data16
jmp
dec
xchg
dec
loop
or
lods
lods
dec
(bad)
jbe
(bad)
dec
add
jnp
and
lock
add
add
int3
(bad)
mov
(bad)
dec
inc
test
dec
lods
push
(bad)
mul
jmp
lods
les
lods
pusha
bound
xchg
test
jmp
jmp
iret
test
push
fst
add
lods
xor
outs
and
jmp
div
add
jmp
cmp
in
xchg
push
cmp
aam
mov
jmp
cmp
dec
outs
outs
push
test
push
xlat
and
dec
outs
outs
iret
test
call
jmp
neg
and
test
(bad)
dec
neg
sbb
dec
loop
or
lods
lods
dec
(bad)
jbe
(bad)
dec
add
jnp
aad
fiadd
(bad)
(bad)
(bad)
jl
inc
mov
mov
(bad)
dec
mov
(bad)
call
call
mov
add
push
dec
pop
jg
jmp
cmps
cmp
cmp
fimul
outs
mov
jmp
in
pop
xor
lods
les
dec
add
outs
dec
xchg
and
int3
(bad)
mov
jmp
lods
sbb
lods
xor
fmul
dec
xchg
push
cmp
retf
neg
and
inc
mov
and
push
jb
(bad)
(bad)
inc
inc
mov
mov
add
mov
test
(bad)
in
and
xchg
test
push
int3
(bad)
mov
push
cmc
mov
xor
dec
lods
les
dec
mov
imul
imul
cwde
sub
jmp
inc
lea
cs
mov
cs
mov
mov
cs
mov
(bad)
push
fmul
add
sbb
mov
(bad)
(bad)
inc
jae
mov
mov
xchg
add
xchg
test
push
cmp
mov
sbb
add
push
cmp
push
xchg
test
jmp
mov
and
test
push
movs
(bad)
jmp
dec
int3
xchg
les
test
jmp
cmp
jmp
dec
add
test
jmp
cmp
jmp
iret
pusha
cwde
and
dec
add
neg
pop
xor
pop
(bad)
dec
add
in
call
or
popf
in
pop
jbe
shl
cwde
lock
(bad)
mov
mov
jmp
lods
pusha
bound
(bad)
jmp
jmp
fadd
outs
add
cmp
mov
xor
jmp
fadd
fmul
add
call
jmp
neg
mov
or
popf
pop
(bad)
dec
add
jbe
rol
ds
add
add
(bad)
dec
inc
lods
or
popf
in
push
shl
inc
test
cld
(bad)
(bad)
(bad)
fcomp
dec
and
test
call
out
jmp
lods
and
test
dec
add
add
ss
jmp
mov
add
enter
xchg
add
add
mov
or
xor
outs
add
dec
inc
lods
or
popf
pop
(bad)
dec
add
jbe
sar
test
lock
add
test
push
push
lahf
jmp
repz
test
(bad)
inc
dec
outs
cmc
test
inc
div
jecxz
add
dec
xchg
mov
cmp
in
pop
push
int3
call
(bad)
push
aaa
stos
jmp
lods
les
outs
and
mov
imul
mul
sub
outs
outs
push
test
push
and
add
dec
add
jmp
xchg
test
jmp
mov
jmp
lods
sbb
lods
xor
fmul
outs
push
test
call
jmp
idiv
cmp
outs
sub
test
(bad)
cmp
add
test
jmp
out
(bad)
(bad)
push
int3
(bad)
mov
jmp
out
(bad)
(bad)
jmp
(bad)
jmp
mov
(bad)
call
jmp
div
add
addr16
xchg
jae
add
test
dec
call
test
(bad)
cmp
dec
outs
add
(bad)
(bad)
call
jmp
mul
add
mov
dec
outs
outs
mov
(bad)
push
sub
(bad)
inc
stos
jae
(bad)
jecxz
not
and
test
(bad)
jl
inc
mov
mov
call
add
dec
xchg
aaa
cmp
cwde
add
add
mov
jmp
push
cmp
inc
jl
inc
mov
mov
(bad)
dec
mov
cwde
dec
add
inc
fiadd
mov
(bad)
push
lahf
int
dec
dec
loop
or
lods
lods
dec
(bad)
xor
jbe
sbb
and
lock
add
jae
int3
(bad)
mov
(bad)
jmp
cmp
add
test
push
mov
jmp
dec
lea
push
jmp
lods
les
lods
pusha
bound
xchg
test
jmp
jmp
iret
test
push
mov
add
lods
xor
outs
and
jmp
not
push
jmp
lods
sbb
xchg
push
cmp
loop
ss
dec
outs
outs
push
test
push
add
jmp
cmp
dec
outs
outs
iret
test
call
jmp
div
jmp
inc
fiadd
test
jmp
cmp
ins
int
dec
dec
loop
or
lods
lods
dec
(bad)
jbe
sbb
aad
les
(bad)
(bad)
(bad)
jl
inc
mov
mov
(bad)
dec
mov
(bad)
call
dec
mov
outs
loop
push
dec
pop
jg
jmp
adc
cmp
fimul
outs
mov
jmp
in
pop
lods
les
dec
add
outs
dec
xchg
and
int3
(bad)
mov
jmp
lods
sbb
lods
xor
fmul
dec
xchg
push
cmp
push
mul
mov
ds
push
xor
(bad)
inc
cmps
and
(bad)
in
pusha
lahf
cwde
dec
and
int
mul
add
jnp
in
div
and
(bad)
jmp
cmp
inc
(bad)
call
jmp
lods
pop
mov
cwde
iret
jnp
add
dec
jg
inc
mov
mov
(bad)
call
add
jmp
fiadd
test
push
and
test
(bad)
cmp
fcomip
jmp
dec
int3
xchg
les
test
jmp
mov
dec
les
mul
(bad)
jmp
iret
pusha
cwde
and
dec
add
div
pop
xor
pop
(bad)
dec
add
in
call
or
popf
in
pop
jbe
shl
cwde
lock
(bad)
mov
das
sbb
jmp
and
jmp
jmp
fadd
outs
add
jmp
imul
in
jmp
fadd
fmul
add
call
jmp
div
mov
or
popf
pop
(bad)
dec
add
jbe
rol
ds
add
add
(bad)
dec
inc
lods
or
popf
in
push
shl
inc
test
int3
cli
(bad)
(bad)
fcomp
dec
and
outs
xor
cs
jmp
dec
add
add
dec
sbb
jmp
mov
add
sbb
call
add
imul
dec
add
add
test
(bad)
inc
lods
or
popf
pop
(bad)
dec
add
jbe
sar
test
lock
add
test
push
jg
jmp
repz
test
dec
cmp
pusha
call
(bad)
push
sub
jmp
lods
les
outs
and
xchg
test
jmp
jmp
push
test
push
icebp
sub
push
cmp
cmp
jmp
mov
jmp
lods
sbb
lods
xor
add
dec
outs
outs
push
test
call
jmp
mul
(bad)
in
pop
lahf
cmp
mov
xor
xchg
test
push
int3
(bad)
mov
push
and
(bad)
jmp
lods
les
dec
mov
imul
out
(bad)
mov
push
cmp
lods
sbb
add
test
push
ficomp
inc
cmc
test
dec
imul
(bad)
mov
les
mov
ins
xchg
xor
lods
pop
add
fwait
xor
fwait
fwait
xor
xor
mov
(bad)
mov
mov
(bad)
mov
mov
dec
(bad)
push
(bad)
mov
in
mov
mov
in
mov
mov
jmp
jo
dec
lods
les
dec
add
outs
outs
call
int3
(bad)
mov
jmp
lods
sbb
lods
sbb
cmp
call
les
dec
add
outs
outs
mov
(bad)
jmp
jae
add
stos
not
jmp
lods
sbb
lods
sbb
add
test
(bad)
inc
test
add
add
test
push
or
sbb
test
(bad)
inc
inc
lea
les
dec
add
push
int3
(bad)
mov
push
retf
and
jmp
(bad)
(bad)
mov
push
test
(bad)
dec
cs
dec
jmp
dec
add
jmp
jmp
push
test
push
adc
add
push
cmp
or
xchg
test
jmp
mov
dec
outs
test
dec
jmp
dec
add
jmp
jmp
push
test
push
movs
mov
jmp
dec
add
jmp
mov
(bad)
js
les
push
add
add
mov
iret
sub
add
cmp
xchg
inc
stos
outs
push
sub
add
neg
mov
add
dec
push
imul
iret
pusha
call
loope
add
dec
outs
iret
sub
add
mul
std
jmp
mov
test
(bad)
jmp
sub
div
(bad)
(bad)
in
pusha
outs
cld
sub
sbb
sbb
add
sub
cmp
scas
stos
outs
cmp
xor
dec
add
add
cmp
(bad)
popf
add
add
and
(bad)
mov
sub
fadd
stos
imul
test
dec
ins
or
(bad)
mov
sub
sbb
sbb
sbb
xchg
sub
cmp
popf
fdiv
dec
lods
sbb
mov
dec
daa
sub
add
add
cmp
push
add
add
or
add
outs
cmp
scas
stos
outs
cmp
(bad)
stos
in
pusha
stos
stos
stos
fmul
stos
dec
and
xor
sub
(bad)
mov
sub
sub
outs
cmp
(bad)
fadd
stos
div
pusha
outs
cld
sub
sbb
sbb
sbb
fcom
xchg
sub
xchg
sub
enter
mov
xchg
sub
iret
sub
add
add
cmp
push
add
add
or
add
outs
jb
scas
and
jmp
sub
and
xchg
xchg
jae
add
stos
inc
call
call
call
xchg
inc
add
pop
add
add
pusha
in
jecxz
pusha
int3
fdivr
stos
inc
call
xor
(bad)
mov
add
add
outs
or
add
dec
ss
pop
push
int3
call
(bad)
mov
dec
outs
or
add
add
xor
fmul
pop
(bad)
test
jmp
cmp
dec
outs
pop
(bad)
not
dec
outs
pop
or
(bad)
cmp
dec
outs
pop
xor
adc
jmp
cmp
dec
dec
jnp
xchg
jmp
in
int3
js
les
lods
xor
add
daa
add
add
stos
mul
jmp
dec
push
in
int3
jae
add
add
test
dec
dec
or
inc
out
outs
cmp
in
neg
jp
jnp
cwde
mov
jnp
repnz
and
mov
dec
fcmovu
imul
sti
dec
inc
jae
mov
jecxz
or
inc
jp
test
dec
jae
sbb
jb
jp
inc
jae
fnstcw
(bad)
lods
sar
mov
jecxz
or
dec
inc
jae
outs
cmp
stos
inc
fdivr
outs
cmp
fadd
stos
neg
mov
(bad)
in
pusha
outs
mov
lods
sbb
mov
loope
add
add
mov
mov
xchg
aaa
cmp
cmp
add
push
cmp
or
call
dec
inc
mov
jecxz
inc
mov
js
movd
mov
stos
div
add
and
pop
neg
add
outs
outs
cs
(bad)
push
aaa
stos
(bad)
jmp
outs
and
(bad)
(bad)
push
dec
(bad)
mov
jmp
lods
sbb
add
cmp
dec
neg
outs
jmp
fadd
xchg
outs
add
(bad)
(bad)
push
(bad)
push
jmp
fadd
xchg
outs
add
(bad)
(bad)
push
pop
push
jmp
push
cmp
in
std
inc
dec
cmp
xchg
pop
add
add
pop
mov
movs
mov
dec
fmul
mov
inc
jmp
dec
jnp
pop
dec
jmp
outs
pop
xor
and
pop
or
jmp
(bad)
idiv
jmp
outs
pop
(bad)
not
or
add
add
jb
jmp
fdivr
xchg
in
pop
outs
cmp
push
cmp
sti
neg
pop
jmp
fdivr
outs
mov
stos
outs
cmp
mul
jmp
aad
(bad)
in
mov
dec
fwait
test
push
pusha
(bad)
mov
stos
push
cmp
test
mov
sbb
cmp
sbb
mov
jmp
cmp
dec
outs
in
cmp
jge
jmp
cmp
dec
outs
in
fwait
push
cmp
sti
imul
lods
fdivr
outs
mov
stos
in
pop
outs
cmp
not
clc
(bad)
mov
add
stos
imul
jae
(bad)
cmp
dec
outs
in
sti
xchg
pop
add
add
xor
(bad)
cmp
dec
outs
in
sub
hlt
pop
jmp
cmp
dec
outs
in
fdivp
ss
jmp
dec
aaa
test
add
dec
add
fwait
repz
not
hlt
test
fsub
add
jmp
(bad)
dec
stos
xchg
(bad)
(bad)
push
pushf
add
outs
inc
or
(bad)
jmp
(bad)
in
inc
jmp
mov
test
(bad)
cld
add
add
(bad)
fmul
and
dec
aaa
dec
add
mov
jmp
lods
(bad)
(bad)
dec
xchg
(bad)
(bad)
jmp
stos
lahf
jecxz
aaa
stos
cmp
retf
push
jmp
outs
sub
jbe
add
outs
and
jle
(bad)
(bad)
inc
sti
(bad)
(bad)
call
jmp
imul
in
(bad)
cmp
xchg
outs
add
sbb
imul
jne
(bad)
inc
jmp
(bad)
jmp
mov
add
(bad)
(bad)
jmp
jmp
(bad)
(bad)
(bad)
call
jmp
not
jmp
cmp
outs
add
sbb
test
jmp
lods
les
dec
mov
imul
add
(bad)
(bad)
push
in
mov
xchg
(bad)
(bad)
jmp
add
mov
outs
outs
xchg
(bad)
(bad)
push
retf
add
outs
outs
mov
jns
jmp
outs
outs
mov
and
bound
add
mov
cmp
outs
add
mov
push
mov
jmp
or
(bad)
in
push
dec
and
dec
xchg
(bad)
(bad)
jmp
dec
popfw
(bad)
(bad)
dec
repz
xchg
(bad)
(bad)
push
add
add
imul
test
int3
outs
outs
pusha
test
jmp
xchg
(bad)
(bad)
push
sbb
add
(bad)
push
dec
(bad)
mov
jecxz
retf
jmp
popf
(bad)
(bad)
call
add
push
cmp
(bad)
test
outs
add
mov
xchg
outs
add
(bad)
push
mov
clc
js
les
dec
dec
sti
mul
(bad)
dec
pusha
call
ret
iret
pusha
cwde
and
dec
or
add
add
aaa
or
add
add
aaa
or
add
add
jecxz
int3
push
or
add
dec
int3
jns
pusha
add
add
cmp
dec
imul
in
pop
fadd
inc
cmp
or
add
outs
mov
(bad)
fadd
cmp
or
add
add
jmp
add
pop
push
neg
add
pop
fdivp
push
mov
(bad)
fadd
cmp
pop
sub
in
jmp
fadd
cmp
pop
sti
idiv
jmp
in
int3
js
les
lods
xor
add
pusha
fimul
stos
mul
xchg
jmp
dec
push
in
int3
js
les
lods
xor
add
rol
add
dec
inc
stos
div
jmp
dec
push
in
int3
js
les
lods
xor
add
pusha
push
dec
inc
stos
div
in
int3
fcomp
fwait
pop
ss
mov
jmp
mov
dec
jnp
sbb
test
jmp
sti
xchg
les
std
stos
outs
cmp
xchg
and
pop
pop
jmp
outs
cmp
stos
outs
cmp
neg
pop
jmp
mov
lods
mov
pusha
call
test
dec
neg
cmp
std
mul
jmp
sbb
stos
dec
jnp
popa
xchg
jmp
std
not
dec
fadd
cmp
dec
sti
not
sbb
dec
div
test
int3
js
les
(bad)
out
outs
in
std
idiv
jmp
fsub
xchg
jae
pusha
(bad)
mov
outs
jmp
fadd
lods
mov
or
jmp
jns
pop
test
ss
mov
dec
sti
lods
xor
add
fdivr
stos
in
pop
outs
cmp
(bad)
cmp
dec
outs
in
popf
mul
sub
call
fwait
push
(bad)
mov
dec
sti
lods
xor
add
stos
in
pop
outs
cmp
(bad)
cmp
dec
outs
in
popf
not
jmp
not
jg
call
fwait
test
(bad)
mov
(bad)
fsub
in
in
pop
jae
sub
mov
sti
xchg
jmp
mov
jmp
lods
mov
mov
lods
xor
add
pusha
xchg
(bad)
aaa
cmp
mov
xchg
sbb
dec
outs
cmp
stos
push
cmp
dec
dec
int3
outs
dec
sti
aaa
cmp
dec
add
add
ret
inc
cmp
stos
outs
cmp
stos
idiv
(bad)
fdivr
outs
dec
fwait
and
pop
push
cmp
jp
pusha
js
(bad)
cmp
dec
push
cmp
dec
test
sub
mov
not
dec
jmp
lahf
xchg
or
stos
outs
cmp
stos
div
jmp
fdivr
outs
dec
fwait
and
pop
push
cmp
jecxz
sar
(bad)
cmp
dec
outs
in
cmp
jmp
test
jmp
dec
sbb
fdivr
outs
cmp
stos
outs
in
cmp
or
jmp
outs
cli
push
and
jmp
idiv
sbb
(bad)
fadd
fmul
cmp
dec
idiv
dec
outs
cmp
stos
in
pusha
outs
dec
fwait
aaa
cmp
fiadd
add
imul
dec
jmp
xchg
push
lods
mov
(bad)
(bad)
mov
stos
neg
outs
mov
stos
idiv
jmp
repz
add
div
cmp
mov
xchg
stos
outs
cmp
in
out
cmp
mov
(bad)
fdivr
outs
dec
cmp
push
cmp
imul
(bad)
jmp
cmp
dec
push
cmp
mov
dec
push
fdivr
outs
cmp
out
and
jmp
fdivr
outs
dec
fwait
and
pop
push
cmp
mov
(bad)
cmp
dec
push
cmp
mov
(bad)
fmul
cmp
stos
in
pusha
outs
dec
cmp
cmp
aam
add
idiv
push
jmp
xchg
push
lods
mov
outs
mov
stos
outs
cmp
test
push
clc
(bad)
mov
idiv
jmp
lahf
cli
stos
outs
cmp
stos
outs
in
out
cmps
sbb
jmp
sti
and
jmp
imul
jmp
fadd
fmul
cmp
mov
dec
push
fdivr
outs
cmp
inc
stos
outs
in
out
mov
jmp
outs
cli
sub
push
cmp
test
bound
(bad)
fadd
fmul
leave
(bad)
jmp
fadd
fmul
in
cmp
jmp
mul
(bad)
jmp
fmul
cmp
stos
in
pusha
outs
dec
fwait
aaa
cmp
aam
add
mul
pop
xchg
push
lods
mov
outs
mov
stos
outs
cmp
(bad)
fsubr
pop
lahf
and
outs
in
out
adc
jmp
fisub
push
cmp
sbb
ss
jmp
fadd
fmul
cmp
dec
test
fdivr
outs
cmp
out
mov
xchg
push
cmp
repnz
fmul
xchg
jmp
fadd
fmul
in
fwait
test
jmp
fadd
fmul
in
sti
idiv
jmp
neg
test
sahf
xor
fadd
fwait
mov
loope
test
dec
mov
test
(bad)
in
pop
outs
pop
sub
pop
jmp
outs
pop
fdivp
or
jmp
push
test
jmp
rol
add
neg
pop
jmp
outs
or
add
out
pop
jmp
dec
cmp
xchg
xchg
iret
add
add
(bad)
(bad)
mov
add
add
push
fiadd
add
sub
xchg
add
add
dec
scas
xchg
add
add
rcl
add
add
add
add
leave
pusha
add
add
leave
dec
add
add
add
not
test
fstp
neg
sti
test
lods
xor
in
imul
pop
inc
xchg
jmp
mov
jmp
les
sti
xchg
mov
dec
les
lea
les
sti
imul
(bad)
jmp
dec
cmp
xchg
cmp
lea
cmp
and
clc
(bad)
jmp
iret
pusha
in
mov
pop
(bad)
jmp
cwde
or
iret
std
in
test
imul
jmp
and
aad
jmp
lahf
int
add
in
sti
div
jmp
dec
cmp
div
test
int3
fcomp
popf
(bad)
mov
jmp
rol
dec
jnp
sbb
mul
jmp
outs
cmp
xchg
les
std
stos
outs
cmp
xchg
mov
jmp
cmc
stos
outs
cmp
div
jmp
mov
lods
mov
pusha
call
not
mov
dec
cmp
push
cmp
call
push
jmp
jns
cwde
adc
dec
sar
(bad)
not
mov
mov
or
mov
fsub
fsub
jmp
dec
push
dec
test
or
pusha
(bad)
mov
in
(bad)
xor
jmp
lods
pushf
cwde
jns
std
pusha
(bad)
mov
in
and
neg
es
outs
in
std
idiv
jmp
repz
(bad)
(bad)
(bad)
fadd
cmp
dec
sti
idiv
jmp
dec
aaa
idiv
fdivr
fwait
inc
popf
(bad)
mov
dec
sti
in
inc
add
outs
in
cmp
mov
jmp
jae
pusha
(bad)
mov
outs
cmp
dec
not
sbb
outs
mov
dec
outs
in
adc
and
jmp
dec
in
cmc
jae
clc
(bad)
mov
call
outs
push
jecxz
fdivr
xor
mov
cmp
loope
jmp
dec
in
cmc
or
stos
outs
cmp
stos
neg
mov
dec
outs
in
cmp
adc
jmp
xchg
fmul
in
popf
neg
cmp
test
test
sahf
fld
js
les
jae
jg
mov
add
stos
xchg
les
add
add
mov
outs
iret
sub
xor
add
add
dec
test
mov
jecxz
inc
cs
call
add
add
in
sti
test
add
in
pop
lods
sbb
int3
in
jno
cmp
(bad)
mov
mul
(bad)
jmp
jae
loope
mov
add
add
dec
jno
jmp
rol
add
dec
push
iret
sub
add
add
xor
outs
call
(bad)
cmp
dec
outs
call
(bad)
in
pusha
in
int
daa
sub
xchg
add
add
icebp
sbb
xchg
lods
dec
xchg
scas
mov
jecxz
aaa
(bad)
dec
cmp
dec
shr
(bad)
lahf
jecxz
pusha
(bad)
setae
stos
call
adc
add
in
(bad)
inc
outs
jb
mov
cmp
(bad)
jmp
jae
loope
mov
add
add
add
not
sbb
add
iret
sub
add
add
test
jmp
cmp
dec
outs
call
jmp
add
(bad)
cmp
dec
outs
call
(bad)
call
xchg
add
mov
dec
outs
cmp
(bad)
stos
outs
cmp
mov
sub
add
add
fcom
xchg
shl
sub
add
dec
lock
add
lods
sub
dec
push
mov
pop
jae
loope
mov
add
dec
imul
jmp
in
inc
call
xchg
add
mov
xrelease
cmp
cmp
out
stos
outs
cmp
out
stos
jae
add
fcos
call
xchg
inc
cld
sub
mul
xchg
add
lods
sub
cmp
(bad)
mov
test
cmp
push
jae
loope
mov
add
add
mov
sbb
add
mov
sub
or
add
or
pop
xchg
add
add
mov
rcr
jmp
jae
xor
iret
sub
add
add
inc
and
popf
push
iret
sub
xchg
push
rol
add
dec
imul
dec
jmp
cmp
dec
outs
call
jmp
add
(bad)
cmp
dec
outs
call
dec
sub
dec
push
sub
repz
(bad)
call
add
add
clc
jae
fld
add
adc
mov
mov
dec
add
add
add
cmps
add
add
sub
push
add
add
sub
dec
lock
add
add
push
sub
push
int3
call
mov
mov
add
sub
cwde
iret
sub
add
cmp
cmp
(bad)
stos
and
or
call
cmp
xchg
call
mov
add
add
sbb
(bad)
jmp
jae
loope
mov
add
add
add
add
mov
jmp
lods
sbb
add
iret
sub
add
add
idiv
js
(bad)
cmp
dec
outs
call
jmp
sub
daa
sub
cmp
dec
idiv
test
mov
mov
dec
lods
and
jmp
sub
sub
xchg
sub
sub
and
and
cmp
(bad)
mov
idiv
loop
jmp
jae
xor
iret
sub
add
add
je
jmp
lods
sbb
add
iret
sub
add
add
(bad)
cmp
dec
outs
call
jmp
sub
push
xor
rol
add
dec
test
repz
(bad)
(bad)
fdivr
fwait
pop
sub
jecxz
jmp
xchg
add
pusha
(bad)
mov
(bad)
jmp
xchg
outs
dec
cmc
mul
(bad)
(bad)
in
inc
xchg
jmp
in
std
in
scas
lods
add
dec
ret
dec
outs
in
cmc
test
dec
lahf
or
xchg
outs
dec
cmc
push
cmp
dec
imul
pusha
in
xor
pusha
mov
mov
idiv
push
cmp
jp
call
dec
sbb
lahf
mov
int3
fadd
fmul
in
cmc
mul
add
dec
int3
dec
enter
test
int3
jae
add
add
idiv
cmp
in
pop
dec
rol
jae
clc
(bad)
mov
add
dec
aaa
cmp
dec
add
add
dec
mov
in
test
neg
cmp
push
int3
in
inc
outs
dec
iret
imul
(bad)
jmp
(bad)
push
sub
mov
jp
jge
jmp
lods
sbb
test
dec
outs
add
(bad)
push
mov
jmp
cmp
dec
outs
in
iret
push
cmp
dec
not
out
loopne
mov
xor
shl
add
outs
dec
cmp
fdivr
div
pop
add
lods
sbb
mov
xor
sbb
ss
in
add
(bad)
pop
add
lods
sbb
mov
jecxz
xchg
pop
lods
jmp
dec
cli
popf
lahf
jecxz
cli
popf
lods
jmp
dec
mov
lahf
jecxz
mov
mov
or
pop
and
inc
pop
add
lods
sub
in
push
inc
outs
outs
jae
(bad)
push
cmp
jmp
les
(bad)
mov
(bad)
idiv
jmp
lods
sbb
idiv
por
cmp
dec
outs
in
iret
mul
push
jmp
cmp
dec
outs
add
(bad)
call
jmp
not
(bad)
(bad)
in
add
cdq
pop
add
aaa
(bad)
sub
loopne
mov
(bad)
cmp
dec
cmp
cmp
cwde
add
add
push
and
jmp
cmp
ss
fwait
add
add
add
add
add
mov
jecxz
pusha
(bad)
cmp
or
add
fdivr
cmp
add
add
stos
inc
xchg
xchg
lods
mov
add
add
cmp
(bad)
mov
(bad)
push
xchg
(bad)
jmp
scas
loope
mov
mov
jmp
cmp
sti
idiv
fmul
in
iret
idiv
jmp
in
(bad)
cmp
xchg
outs
add
(bad)
call
jmp
mul
jmp
(bad)
in
xor
popa
add
mov
pushf
popa
add
dec
dec
cmc
aaa
(bad)
sub
loopne
mov
(bad)
cmp
outs
dec
cmp
mov
jmp
cmp
outs
in
popf
test
rep
dec
add
fmul
in
xchg
outs
cmp
stos
outs
cmp
outs
dec
pop
dec
sbb
dec
dec
sbb
sbb
push
jmp
inc
push
or
add
add
enter
dec
add
jmp
lock
dec
add
dec
ror
add
add
outs
jbe
jnp
lods
mov
dec
add
push
in
push
xchg
push
cwde
and
add
cld
popf
dec
cmp
lods
adc
add
in
sbb
out
(bad)
(bad)
(bad)
(bad)
in
fwait
stos
imul
pop
(bad)
jmp
jae
loope
mov
outs
and
(bad)
jmp
neg
sbb
(bad)
(bad)
jmp
test
jmp
lods
sbb
stos
outs
cmp
stos
push
cmp
repnz
jae
jmp
in
xchg
outs
dec
cmp
stos
(bad)
in
sub
dec
sbb
mul
jnp
(bad)
cmp
dec
outs
in
iret
xchg
aas
xchg
not
shr
(bad)
cmp
dec
outs
add
(bad)
push
aas
shr
(bad)
cmp
dec
outs
add
(bad)
push
sub
jmp
cmp
dec
outs
add
(bad)
(bad)
call
jmp
test
jmp
dec
in
fs
movs
jmp
sbb
pop
addr16
cmp
(bad)
cmp
push
rcl
cmp
jecxz
add
sbb
(bad)
mov
clc
(bad)
mov
add
stos
neg
jmp
dec
cmp
dec
cmp
in
sbb
sbb
cmp
jnp
(bad)
(bad)
jmp
aad
fwait
cwde
xor
test
jmp
test
in
xchg
inc
(bad)
in
xor
hlt
add
mov
test
add
mov
cmp
stos
imul
push
jmp
cmp
dec
outs
dec
cmp
mov
(bad)
cmp
dec
outs
in
popf
imul
mov
(bad)
cmp
dec
outs
dec
pop
mul
dec
cmc
div
mov
sahf
fiadd
fdivr
fwait
pop
cwde
(bad)
mov
jmp
inc
xchg
les
cmp
jp
add
dec
rol
cmp
dec
cld
aaa
cmp
dec
add
add
pusha
add
add
lahf
stc
dec
cmp
les
outs
cmp
dec
add
inc
push
jmp
lods
les
outs
cmp
dec
mov
xor
stos
push
cmp
jecxz
adc
cmp
cmp
jp
inc
ret
fdivr
in
inc
dec
push
cmp
(bad)
dec
dec
les
dec
dec
outs
dec
adc
jp
jp
jmp
aad
push
add
call
add
outs
jbe
jnp
lods
mov
leave
iret
add
add
xchg
fadd
fmul
in
sti
push
shl
add
dec
idiv
add
dec
outs
dec
sub
loope
jmp
dec
cmp
test
mov
sahf
or
add
fwait
push
popa
(bad)
mov
dec
sti
in
pop
dec
inc
xchg
add
cmp
push
(bad)
jmp
cmp
(bad)
push
pusha
(bad)
mov
stos
aaa
lock
add
fidiv
(bad)
lods
sbb
stos
outs
and
push
cmp
jp
push
(bad)
lods
sbb
outs
and
push
cmp
jecxz
rol
jmp
lods
sbb
stos
outs
cmp
(bad)
div
(bad)
lods
sbb
outs
and
cmp
mov
jmp
push
cmp
xchg
xchg
jae
xor
test
jmp
xchg
cmc
jae
pusha
(bad)
mov
xor
outs
js
dec
add
push
cmp
mov
push
mov
(bad)
jmp
cmp
sti
jae
pusha
(bad)
mov
(bad)
jmp
jmp
cmp
stos
push
cmp
test
inc
xor
jmp
add
push
cmp
repnz
(bad)
in
(bad)
cmp
xchg
outs
add
(bad)
(bad)
push
pop
cmp
(bad)
cmp
outs
in
push
test
outs
outs
mov
(bad)
push
dec
sub
(bad)
cmp
outs
dec
mov
mov
xchg
outs
outs
call
jmp
cmp
outs
outs
mov
(bad)
push
inc
sub
(bad)
cmp
outs
outs
(bad)
(bad)
(bad)
push
mov
jmp
cmp
outs
dec
cmp
pop
sub
(bad)
cmp
outs
dec
popf
test
add
pop
jmp
call
fwait
stc
popa
(bad)
mov
dec
lods
xor
dec
add
loopne
mov
add
add
jb
jmp
les
dec
mov
xor
jae
clc
(bad)
mov
dec
sti
lods
dec
jmp
div
(bad)
dec
sti
mul
call
fwait
push
(bad)
mov
dec
lods
xor
dec
add
loopne
mov
add
xor
jmp
lods
xor
add
xchg
les
clc
(bad)
mov
dec
sti
lods
dec
jmp
neg
jmp
dec
sti
not
ret
sahf
mov
dec
sti
dec
in
imul
int
mov
dec
sahf
and
add
add
shl
mov
sti
inc
repz
jecxz
sti
loop
rol
add
cld
cmp
int3
fsubr
fwait
enter
imul
fnsave
inc
xchg
in
jmp
in
xor
xor
loopne
mov
dec
dec
outs
dec
sti
test
dec
repz
add
dec
outs
dec
cmp
cmp
cwde
add
add
jl
jmp
in
pop
inc
rcr
jmp
cmp
xchg
adc
in
cmp
push
xor
(bad)
in
jmp
sti
neg
adc
call
test
(bad)
call
sbb
cmc
shr
mov
div
adc
jns
pusha
mov
mov
mov
(bad)
in
xchg
mul
cmp
dec
cmp
push
cmp
add
cmp
(bad)
fadd
cmp
dec
cmp
cs
jmp
fadd
cmp
dec
sti
idiv
jmp
dec
cmp
not
mov
int3
fdiv
fwait
sti
lods
(bad)
mov
dec
in
inc
add
xor
xor
loopne
mov
call
sti
mul
push
jmp
dec
push
repz
add
xchg
outs
dec
cmp
cmp
cwde
add
add
not
jmp
in
pop
inc
rcr
jmp
cmp
xchg
add
outs
in
cmp
sar
(bad)
call
cmp
cwde
adc
xchg
stos
test
(bad)
(bad)
mov
dec
test
fidiv
dec
add
inc
sar
mov
div
sub
(bad)
jns
cmc
cwde
adc
test
adc
in
xchg
jns
pusha
mov
mov
in
add
cmp
test
(bad)
(bad)
cmp
aad
cmc
cld
add
xchg
outs
cmp
stos
idiv
cmp
(bad)
fadd
cmp
dec
cmp
stc
shr
(bad)
fadd
cmp
dec
sti
imul
cmp
dec
fwait
dec
fiadd
or
fiadd
or
sahf
sti
add
sahf
scas
add
sahf
popf
add
sahf
sti
add
sahf
scas
add
sahf
mov
or
fiadd
or
fiadd
or
fiadd
or
fiadd
or
fiadd
or
fiadd
or
fiadd
or
sahf
sti
add
pusha
sahf
mov
or
les
repnz
mov
fiadd
or
add
sbb
fiadd
or
fiadd
or
fiadd
or
fiadd
or
les
sti
lods
lods
add
pusha
sbb
jno
dec
and
pop
aad
xor
jp
int3
dec
push
xor
dec
and
stos
popf
dec
ss
in
pusha
sahf
sti
add
sahf
popf
add
les
sti
dec
rcr
in
int
xchg
dec
in
lods
xchg
dec
pop
fld
xchg
(bad)
dec
pop
pop
xchg
sti
dec
fidiv
dec
mov
dec
cmp
imul
mov
in
pusha
in
sahf
xchg
add
pusha
sahf
mov
dec
in
sti
xchg
fadd
fmul
inc
scas
inc
dec
inc
scas
dec
sti
outs
rcl
mov
inc
dec
cwde
outs
inc
fldcw
xor
pusha
in
sahf
mov
add
sahf
sti
add
les
sti
dec
ficomp
dec
in
pusha
sbb
les
sti
call
popf
dec
ficomp
js
les
sti
(bad)
ficomp
sahf
mov
dec
in
popf
xchg
fadd
mov
mov
in
sbb
sti
dec
dec
lods
xchg
sub
popf
fadd
mov
mov
in
ins
dec
cmp
and
mov
jp
test
sti
stos
jmp
(bad)
in
pusha
lahf
mov
or
sbb
fwait
jecxz
(bad)
mov
(bad)
in
inc
xchg
jmp
mov
popf
scas
jecxz
cmp
not
cmp
push
(bad)
mov
dec
cmp
aaa
cmp
jp
add
push
push
call
test
dec
dec
outs
mov
dec
xor
stos
inc
outs
mov
jmp
dec
fmul
in
sti
div
inc
jmp
test
mov
sahf
xor
js
les
fisub
pop
call
in
pusha
dec
xchg
outs
scas
xchg
dec
stos
cmp
add
dec
jae
xor
mov
mov
(bad)
mov
jae
and
mov
lahf
inc
jmp
jae
addr16
cmp
stos
test
dec
dec
sti
cmp
jmp
popf
inc
dec
dec
add
dec
inc
xchg
mov
mov
lea
jmp
cmp
fadd
fadd
imul
jge
and
mov
mov
xchg
dec
sti
lods
int3
fnstcw
call
pop
and
mov
mov
fadd
fwait
fs
mov
dec
pop
dec
sbb
jecxz
cmovns
jecxz
bts
inc
cmp
mov
stos
aaa
jecxz
and
mov
and
mov
and
mov
sbb
xchg
div
inc
(bad)
fdivr
stos
(bad)
clc
lea
add
aad
fstp
outs
cmp
lea
push
xchg
test
call
popf
idiv
ret
jmp
dec
int3
mul
shl
jl
mov
mov
jae
and
mov
(bad)
mov
mov
mov
jae
pop
mov
(bad)
mov
mov
mov
jae
pop
mov
(bad)
mov
mov
mov
jae
pop
mov
(bad)
mov
mov
mov
jae
pop
mov
(bad)
mov
mov
mov
jae
pop
mov
(bad)
mov
mov
mov
jae
pop
mov
(bad)
mov
mov
jl
mov
mov
jae
pop
mov
jmp
(bad)
mov
mov
cmc
sbb
js
les
mov
jae
pop
mov
jmp
(bad)
mov
mov
sti
push
sbb
js
les
mov
jae
pop
mov
jmp
(bad)
mov
mov
lods
(bad)
in
sti
push
sbb
js
les
mov
jae
pop
mov
jmp
(bad)
mov
mov
cmc
sbb
js
les
mov
jae
pop
mov
jmp
(bad)
mov
mov
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
pop
mov
jmp
(bad)
mov
mov
add
add
or
add
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
dec
fadd
fadd
(bad)
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
fadd
(bad)
in
sti
jae
sub
mov
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
add
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
cmc
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
in
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
in
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
cmc
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
cmc
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
in
sti
push
sbb
js
les
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
fadd
(bad)
in
sti
push
sbb
jl
mov
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
int3
jl
mov
mov
jae
outs
(bad)
mov
jmp
(bad)
mov
mov
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
sti
push
sbb
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
(bad)
in
sti
push
sbb
jl
mov
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
int3
jl
mov
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
(bad)
in
popf
(bad)
in
sti
push
sbb
jl
mov
mov
(bad)
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
cmc
in
js
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
sti
push
sbb
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
(bad)
in
popf
(bad)
in
sti
fadd
fadd
push
sbb
les
mov
push
in
xchg
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
in
scas
(bad)
in
lods
dec
dec
dec
dec
dec
(bad)
in
popf
(bad)
in
sti
push
in
sahf
scas
add
mov
inc
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
add
push
in
js
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
add
add
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
daa
(bad)
mov
jmp
(bad)
mov
mov
fsub
(bad)
in
xchg
(bad)
in
scas
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
dec
(bad)
mov
jmp
(bad)
mov
mov
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
jl
mov
mov
jae
dec
(bad)
mov
jmp
(bad)
mov
mov
fadd
fadd
jae
sub
mov
dec
les
mov
jae
dec
(bad)
mov
jmp
(bad)
mov
mov
add
fadd
fadd
fadd
(bad)
in
lods
(bad)
in
popf
(bad)
in
sti
push
sbb
js
les
mov
jae
dec
(bad)
mov
jmp
(bad)
mov
mov
cmc
sbb
fdivr
fwait
in
(bad)
mov
dec
popf
dec
in
sti
lods
xor
add
push
jge
dec
outs
cmp
stos
in
pusha
dec
add
add
jmp
xchg
cmc
outs
cmp
stos
dec
int3
xchg
jmp
mov
add
lods
(bad)
call
add
mov
add
add
in
cmc
outs
in
cmp
pop
neg
jmp
push
sbb
lods
les
outs
cmp
dec
mov
xor
stos
imul
jmp
imul
jmp
add
pusha
in
mov
clc
(bad)
mov
cmps
pop
jmp
fadd
fmul
in
cmp
sub
dec
xchg
lahf
in
les
dec
mov
xor
(bad)
(bad)
in
sub
test
jmp
push
cmp
dec
dec
cmp
lods
les
or
dec
mov
xor
xchg
(bad)
in
sub
test
dec
add
jmp
test
or
adc
mov
clc
(bad)
mov
(bad)
(bad)
mov
dec
test
dec
fcomp
fwait
sbb
lahf
mov
(bad)
in
popf
in
pop
outs
in
cmp
pop
jmp
dec
push
stos
xchg
jmp
sbb
lods
dec
jmp
cmp
cmp
and
jmp
(bad)
in
hlt
dec
in
sti
jae
clc
(bad)
mov
dec
lahf
and
in
lods
outs
cmp
mov
xchg
jmp
xchg
(bad)
jmp
fadd
cmp
in
fwait
test
jmp
dec
cmp
test
dec
fsubr
popa
sti
(bad)
mov
(bad)
in
inc
inc
mov
in
jo
jg
inc
mov
ret
mov
mov
mov
xchg
inc
mov
mov
(bad)
mov
mov
add
outs
cmp
mov
fs
neg
xchg
jne
push
cwde
mov
jnp
repnz
and
call
cmp
xchg
mov
fdiv
xchg
(bad)
idiv
pusha
call
dec
sti
aaa
(bad)
sub
clc
(bad)
mov
push
pop
add
aad
xchg
(bad)
dec
jecxz
dec
push
neg
adc
mov
stos
xchg
jmp
xchg
loope
inc
mov
div
fmul
in
cmc
idiv
dec
jmp
xchg
fmul
in
push
not
jmp
(bad)
cmp
int3
xchg
push
cmp
dec
sbb
cmp
std
cmc
mov
jl
inc
mov
repnz
inc
mov
dec
sti
jae
inc
mov
dec
imul
mov
int3
js
les
jae
sti
(bad)
mov
add
stos
and
mul
test
jl
mov
xchg
sub
add
cmp
xchg
jl
mov
stos
outs
iret
sub
fld
add
add
add
dec
in
sti
outs
iret
sub
add
add
lods
add
xchg
sub
inc
and
hlt
jae
clc
(bad)
mov
dec
repz
jp
add
pusha
xchg
scas
aaa
iret
sub
add
add
add
add
add
add
adc
sub
add
add
add
dec
cmp
scas
pop
add
dec
add
outs
iret
cmp
add
add
add
add
fcmovbe
jmp
push
iret
sub
fld
add
iret
sub
add
push
int3
cwde
iret
push
dec
add
lods
sbb
push
add
add
dec
jb
scas
outs
cmp
xchg
sub
add
add
out
add
stos
inc
lods
mov
add
add
add
sti
dec
iret
sub
add
add
push
sub
scas
mov
add
add
sub
and
stos
inc
and
iret
lds
add
call
sub
sub
stos
neg
lea
add
add
stos
push
iret
sub
idiv
jmp
dec
stos
outs
iret
sub
add
add
push
add
jecxz
stc
por
xchg
stos
outs
cmp
cmp
lods
push
add
(bad)
test
out
fdivr
cmp
push
sub
iret
sub
fld
add
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
push
sub
add
add
imul
outs
call
(bad)
cmp
dec
outs
call
(bad)
cmp
dec
outs
push
sub
add
shr
neg
add
div
cmp
scas
adc
cmp
add
add
call
outs
push
sub
add
shr
neg
add
imul
mov
dec
sub
int3
call
add
add
je
jmp
dec
call
add
add
(bad)
cmp
dec
outs
push
sub
sub
xchg
dec
daa
sub
fld
add
jg
add
add
daa
sub
add
in
add
lods
call
sbb
fsubr
fwait
imul
mov
popf
lods
xor
add
sti
lods
les
dec
mov
xor
stos
div
sbb
idiv
(bad)
jmp
cmp
xchg
cmc
in
pop
stos
xchg
jmp
into
out
jmp
test
jmp
aam
in
mov
mov
adc
mov
(bad)
cmp
dec
outs
in
cmp
dec
mov
dec
div
mov
sub
not
mov
popf
lods
xor
add
sti
lods
les
dec
mov
xor
stos
mul
jmp
outs
sbb
test
(bad)
jmp
cmp
xchg
cmc
in
pop
stos
xchg
jmp
sbb
jmp
test
jmp
aam
in
mov
mov
adc
mov
(bad)
cmp
dec
outs
in
cmp
mov
jmp
dec
aaa
div
rcr
not
mov
lods
xor
add
dec
outs
cmp
stos
in
pusha
dec
sbb
push
cld
add
add
pushf
pop
jmp
xchg
push
lods
mov
(bad)
(bad)
mov
dec
rep
add
add
xchg
push
stos
xchg
in
pop
not
or
fwait
neg
and
jmp
jmp
dec
sbb
fdivr
inc
xchg
outs
in
cmp
mov
les
push
cmp
dec
outs
cmp
dec
mov
xor
jb
jmp
lods
les
push
cmp
jp
cmp
push
stos
test
jmp
dec
dec
adc
test
or
outs
in
cmp
add
(bad)
fadd
fmul
in
fwait
mul
jmp
dec
cmp
dec
js
les
jae
pop
(bad)
mov
add
stos
lods
les
cmp
xchg
jl
mov
stos
outs
cmp
bound
add
add
outs
cmp
fldlg2
pop
stos
xchg
xchg
test
jmp
outs
cmp
or
cld
neg
jmp
jae
adc
mov
push
cmp
cld
dec
test
jmp
dec
push
stos
outs
cmp
mov
sub
jp
clc
push
jmp
cmp
dec
push
iret
sub
add
add
aad
jmp
lods
les
sub
outs
jb
stos
and
jmp
sub
add
dec
mov
outs
sub
push
adc
mov
jmp
xchg
cmp
mov
add
add
test
sub
add
add
sub
not
(bad)
jmp
outs
cmp
fst
sub
div
call
dec
not
loop
(bad)
call
add
dec
sub
mov
jnp
in
jmp
pusha
inc
js
outs
call
jmp
sub
(bad)
(bad)
mov
xchg
push
cmp
cld
ss
aam
jmp
test
(bad)
cmp
dec
outs
call
add
add
jne
jmp
dec
cmp
out
or
sub
fdiv
jbe
jnp
mov
mov
adc
mov
test
jmp
dec
push
stos
(bad)
in
sti
outs
cld
sub
sub
add
add
(bad)
mov
not
call
(bad)
call
out
mov
mov
fsubrp
(bad)
call
out
mov
dec
cmp
mov
outs
xchg
add
add
icebp
sbb
js
les
cmp
fcomp
in
outs
cmp
popf
fadd
stos
not
test
lods
sbb
xchg
mov
(bad)
mov
dec
in
sti
jae
clc
(bad)
mov
dec
lahf
hlt
dec
dec
sti
outs
cmp
lods
stos
idiv
jmp
dec
cmp
mov
int3
fcom
cmps
xchg
(bad)
mov
dec
sti
dec
mov
fmul
cmp
in
sub
dec
sbb
cmp
mul
aam
(bad)
in
test
add
dec
cmp
pop
xchg
jmp
mov
xchg
outs
in
out
call
dec
cmc
and
jmp
test
dec
test
jmp
dec
sbb
outs
in
out
push
inc
jmp
dec
xchg
push
cmp
jecxz
xchg
or
(bad)
fadd
fmul
cmp
jmp
inc
lahf
mov
xor
add
int3
fdivr
outs
cmp
stos
dec
aaa
neg
xor
inc
or
add
fsub
dec
fsub
or
cmc
dec
mov
xor
jmp
outs
sbb
test
jmp
xchg
sti
mov
jecxz
pusha
(bad)
stos
inc
in
call
out
(bad)
in
xor
jmp
dec
in
add
clc
(bad)
mov
call
add
outs
mov
sbb
cmp
sub
mov
sti
inc
lahf
xchg
inc
dec
cmp
dec
sbb
add
and
push
pop
test
dec
lea
jecxz
lods
mov
sub
dec
dec
add
sub
mov
push
stos
inc
dec
cmp
add
and
stc
pop
test
or
xchg
jecxz
push
push
dec
in
add
(bad)
mov
clc
(bad)
mov
(bad)
fadd
fmul
in
cmc
test
add
mov
mov
int3
fsubr
fwait
dec
xchg
(bad)
mov
jmp
outs
sub
mov
aam
jmp
dec
dec
sti
lods
xor
add
stos
idiv
aad
(bad)
mov
test
jmp
dec
cmp
imul
dec
fsubr
fwait
stc
xchg
(bad)
mov
jmp
mov
(bad)
mov
ret
dec
sti
lods
xor
add
stos
imul
aad
(bad)
mov
test
sti
idiv
mov
int3
fsubr
fwait
push
(bad)
mov
jmp
xchg
sub
mov
sbb
sti
lods
xor
add
stos
div
fadd
fmul
mov
jmp
dec
cmp
not
jae
dec
add
fwait
scas
adc
mov
dec
sti
in
pop
jae
dec
add
outs
and
test
(bad)
cmp
xchg
xchg
test
inc
push
xchg
add
cmc
test
jmp
(bad)
push
dec
add
inc
test
inc
fiadd
test
dec
cmp
test
(bad)
in
jmp
add
rol
test
push
push
push
jmp
mov
add
fs
inc
push
jmp
mov
test
push
clc
(bad)
mov
jp
test
sbb
stos
outs
and
test
jmp
imul
push
jmp
lods
sbb
test
jmp
test
popf
fdivr
push
cmp
mov
(bad)
(bad)
cmp
xchg
mov
(bad)
cmp
outs
add
cmps
jmp
cmp
outs
add
test
push
xlat
cmps
jmp
cmp
outs
add
cmp
outs
add
push
aaa
cmps
jmp
cmp
outs
add
test
call
sbb
test
jmp
cwde
or
pushf
xchg
add
std
xchg
add
(bad)
jmp
(bad)
push
jmp
outs
and
outs
outs
inc
add
add
call
stos
outs
and
(bad)
clc
(bad)
mov
mov
jmp
clc
(bad)
mov
test
jmp
mul
shr
jmp
outs
and
test
jmp
test
jmp
lods
sbb
sbb
xchg
test
(bad)
cmp
test
jmp
cmp
outs
add
test
push
sub
xchg
outs
add
push
dec
cmps
jmp
cmp
outs
add
mov
jmp
cmp
outs
add
test
push
mov
xchg
outs
add
sbb
neg
or
test
outs
and
test
jmp
(bad)
push
scas
push
jmp
mov
test
push
clc
(bad)
mov
repnz
add
js
jmp
lods
sbb
popf
dec
add
mul
xchg
outs
add
test
push
jmp
xchg
outs
add
call
sbb
mul
adc
jmp
outs
and
test
jmp
(bad)
push
push
shr
(bad)
mov
test
push
sub
mov
jg
add
mul
jmp
lods
sbb
sub
(bad)
(bad)
cmp
mov
xchg
outs
add
test
push
adc
cmp
outs
add
push
sbb
dec
and
call
jae
add
add
neg
xchg
mov
dec
cmp
in
pop
xchg
xchg
xchg
add
pusha
aaa
cmp
mov
sbb
add
add
xchg
jmp
mov
mov
jp
add
mov
loope
lods
add
dec
xchg
xchg
cmc
inc
and
iret
mov
add
jae
dec
add
(bad)
in
cmc
xchg
inc
and
iret
xor
add
dec
xchg
outs
cmp
stos
cmp
cmp
(bad)
in
cmc
inc
outs
cmp
stos
outs
outs
mov
(bad)
push
fbstp
ficom
cmp
dec
div
mov
outs
and
push
cmp
jp
(bad)
inc
jmp
lods
sbb
stos
push
cmp
jecxz
pop
mov
jmp
outs
dec
cmp
in
pop
push
cmp
(bad)
not
pop
jmp
cmp
dec
outs
in
push
imul
dec
outs
add
jp
jmp
cmp
dec
outs
in
mov
jnp
jmp
cmp
dec
outs
add
jmp
pushf
pop
jmp
xchg
idiv
int3
mov
mov
ror
mov
lods
mov
fidivr
fimul
xchg
stos
mul
fmul
in
cmp
adc
jmp
dec
cmp
dec
js
les
jae
ins
(bad)
mov
add
stos
xchg
les
mov
xchg
sub
dec
add
cmp
xchg
jl
mov
stos
outs
iret
sub
dec
add
outs
xor
add
add
sti
dec
js
in
jmp
sub
add
add
cld
sub
outs
cmp
mov
xchg
sub
dec
add
imul
push
mov
sub
push
iret
sub
dec
add
dec
div
retf
jmp
dec
push
stos
outs
cmp
push
push
iret
sub
dec
add
jp
in
jmp
xchg
fmul
iret
sub
dec
add
dec
div
pop
jmp
jae
mov
sub
test
stos
outs
cmp
push
push
iret
sub
dec
add
jecxz
xor
dec
push
iret
sub
dec
add
dec
idiv
and
(bad)
fadd
not
mov
mov
outs
jb
sub
pusha
xchg
sub
xchg
sub
xchg
sub
xchg
sub
dec
add
mov
outs
call
dec
add
or
or
jmp
outs
push
sub
add
or
pop
adc
dec
sub
or
sub
in
pop
dec
mov
xor
pusha
cwde
lock
jp
add
sub
cmp
outs
fdiv
jbe
jnp
xchg
xchg
and
lock
dec
add
call
sub
push
mov
jmp
xchg
xor
dec
sub
dec
call
lea
mov
dec
sub
(bad)
adc
sub
lods
xor
iret
sub
add
dec
cmp
jb
cmp
rcr
xor
jnp
xchg
lods
and
lock
add
jae
mov
sub
push
add
xor
sub
push
iret
sub
dec
add
mov
jmp
add
add
jmp
push
iret
sub
add
call
sub
test
jmp
stos
outs
iret
sub
stos
idiv
cmp
jmp
dec
cld
sub
push
iret
sub
add
or
sub
dec
mov
mov
dec
sub
outs
jb
bound
outs
(bad)
fwait
dec
sti
dec
outs
mov
add
xor
(bad)
mov
daa
sub
add
add
sub
add
test
(bad)
(bad)
cmp
outs
iret
sub
dec
add
neg
xor
jmp
cmp
adc
(bad)
cmp
xchg
outs
push
sub
(bad)
sub
(bad)
cmp
outs
push
sub
inc
dec
jmp
cmp
outs
push
sub
add
add
test
xchg
outs
push
sub
add
add
mov
cmp
outs
call
dec
add
div
dec
jmp
or
and
add
add
sub
cmp
rcr
xor
jnp
(bad)
cmp
lods
aad
sub
jmp
sub
dec
add
mov
(bad)
call
pusha
mov
dec
cmp
cmp
mov
jnp
(bad)
cmp
xchg
aad
sub
(bad)
dec
sub
or
sub
(bad)
cmp
xor
jp
cmp
xor
dec
sub
jae
clc
(bad)
mov
call
push
sub
call
icebp
xor
call
xchg
or
neg
xor
call
(bad)
call
xor
fmul
push
sub
dec
add
test
jmp
dec
cmp
(bad)
sub
dec
add
outs
xchg
add
add
daa
sub
dec
add
in
add
stc
xor
sbb
dec
call
mov
jmp
sub
(bad)
call
xor
push
sub
call
(bad)
xor
call
xchg
or
test
mov
mov
div
inc
jmp
call
xor
xchg
repz
(bad)
push
add
add
div
dec
sti
dec
mov
(bad)
(bad)
jmp
pop
(bad)
(bad)
jmp
xchg
call
(bad)
(bad)
(bad)
cld
add
add
(bad)
out
jmp
fsub
and
(bad)
inc
adc
xchg
jmp
dec
(bad)
in
test
jmp
fdivr
lods
mov
mov
xchg
outs
add
(bad)
(bad)
push
loop
jmp
fdivr
outs
dec
push
in
pop
push
cmp
jp
cs
jmp
cmp
dec
push
cmp
dec
mul
add
(bad)
jmp
(bad)
(bad)
(bad)
call
(bad)
fdivr
outs
dec
cmp
push
cmp
jecxz
in
push
jmp
cmp
dec
push
cmp
dec
div
call
stos
in
pop
dec
aaa
not
push
in
dec
outs
and
(bad)
jmp
cmp
push
hlt
dec
jmp
dec
fisubr
pop
(bad)
(bad)
jmp
data16
(bad)
(bad)
inc
push
aas
dec
jmp
dec
mov
iret
pop
dec
add
lods
(bad)
call
add
ret
or
cmp
or
iret
cmps
jmp
lods
les
outs
cmp
dec
mov
imul
neg
ss
(bad)
jmp
call
xor
cld
(bad)
(bad)
push
clc
(bad)
mov
(bad)
cmp
dec
outs
in
or
jnp
jmp
cmp
dec
outs
in
cmp
(bad)
fldpi
(bad)
cmp
or
add
jmp
cmp
dec
stos
outs
add
fbld
pop
(bad)
(bad)
dec
(bad)
(bad)
(bad)
dec
outs
cmp
stos
outs
add
(bad)
(bad)
call
jmp
not
pop
jmp
dec
outs
call
inc
pop
(bad)
(bad)
jmp
fwait
stos
not
(bad)
(bad)
mov
(bad)
cmp
xchg
div
fldpi
(bad)
cmp
outs
add
cmp
test
in
fldpi
call
sbb
in
inc
dec
add
(bad)
(bad)
push
clc
(bad)
mov
(bad)
cmp
outs
in
fwait
test
(bad)
cmp
outs
in
or
jb
jmp
cmp
outs
in
cmp
(bad)
jmp
cmp
repz
outs
cmp
inc
sbb
dec
outs
in
fwait
div
jmp
dec
mov
fwait
imul
lods
or
mov
outs
in
fwait
not
fldpi
jmp
xchg
(bad)
(bad)
jmp
push
outs
dec
fwait
and
jmp
hlt
(bad)
dec
cld
(bad)
(bad)
jmp
in
popa
jae
clc
(bad)
mov
(bad)
in
push
jmp
fwait
stos
idiv
mov
call
(bad)
(bad)
push
clc
(bad)
mov
(bad)
fadd
fmul
in
cmp
in
jmp
fadd
fmul
in
push
(bad)
mov
dec
cld
(bad)
(bad)
push
(bad)
mov
int3
fdivr
mov
dec
popf
dec
in
sti
lods
xor
fmul
cmp
stos
in
pusha
dec
add
pusha
xchg
inc
xchg
stos
dec
int3
xchg
jmp
mov
add
lods
(bad)
call
add
mov
add
add
in
cmc
outs
in
cmp
pop
not
jmp
push
sbb
lods
les
outs
cmp
dec
mov
xor
jmp
not
(bad)
jmp
and
in
ins
dec
in
add
clc
(bad)
mov
(bad)
cmp
dec
outs
in
cmp
movs
mov
dec
add
in
pusha
outs
jge
outs
in
shl
popf
sub
inc
jmp
dec
cmp
or
xchg
(bad)
in
pusha
outs
mov
outs
in
test
dec
or
push
cmp
jp
in
xchg
stos
neg
mov
dec
idiv
jmp
xchg
fmul
in
shl
jmp
lahf
jbe
(bad)
(bad)
mov
dec
not
mov
outs
jp
add
imul
cmp
lods
imul
(bad)
inc
xchg
stos
test
(bad)
in
pusha
aaa
and
(bad)
jmp
xchg
outs
(bad)
(bad)
jmp
push
test
jmp
stos
ja
sub
mov
(bad)
mov
dec
add
add
jmp
dec
inc
jb
(bad)
mov
and
(bad)
(bad)
jmp
(bad)
jmp
pusha
in
addr16
and
sub
mov
mov
(bad)
jmp
(bad)
in
neg
jp
jnp
cwde
mov
jnp
repnz
and
jae
mov
mov
(bad)
jmp
push
test
jmp
(bad)
(bad)
cmp
fdivr
add
cmps
inc
cs
jmp
pusha
call
aaa
and
mov
inc
(bad)
sub
addr16
and
mov
call
imul
jmp
outs
and
(bad)
(bad)
jmp
jmp
not
dec
cmc
outs
outs
jmp
(bad)
call
jmp
test
outs
outs
cs
(bad)
jmp
in
pop
push
cmp
mov
(bad)
in
(bad)
cmp
xchg
outs
add
mov
push
(bad)
ins
jmp
cmp
outs
add
(bad)
(bad)
push
sub
jmp
cmp
outs
in
push
imul
jmp
inc
cs
push
int3
pop
mov
mov
xor
inc
fadd
inc
dec
outs
outs
popf
(bad)
(bad)
push
adc
inc
mov
mov
and
jmp
(bad)
in
pusha
aaa
cmp
xchg
push
add
sti
aad
call
mov
add
add
add
aaa
and
mov
dec
add
xchg
cmp
test
dec
push
test
jmp
add
outs
cmp
outs
and
mov
jmp
(bad)
push
push
jns
jmp
xchg
mov
push
sub
mov
test
dec
outs
js
not
(bad)
jmp
outs
and
mov
call
jmp
test
jmp
outs
in
cmp
int3
ins
jmp
(bad)
in
cmp
xchg
fwait
mov
aaa
cmp
test
add
dec
data16
mov
(bad)
mov
(bad)
jmp
mov
(bad)
push
enter
dec
and
and
rol
mov
jmp
mov
test
push
cmp
dec
mov
test
dec
fiadd
test
dec
mov
push
add
test
call
mov
dec
sub
jb
(bad)
call
add
inc
cwde
and
add
add
in
loope
(bad)
in
pusha
push
pop
lods
mov
call
int
jmp
lods
xor
cmp
add
(bad)
mov
(bad)
call
jmp
mul
dec
jmp
outs
cmp
stos
xor
outs
and
(bad)
(bad)
call
hlt
idiv
jmp
lods
sbb
cs
jmp
(bad)
call
jmp
not
retf
(bad)
(bad)
mov
outs
cld
(bad)
(bad)
jmp
in
pop
push
cmp
pop
test
cmp
add
jecxz
jmp
fadd
cmp
add
(bad)
(bad)
push
rcr
jmp
fadd
cmp
add
mov
push
mov
cmp
cwde
add
add
ins
fadd
cmp
add
(bad)
(bad)
push
add
jmp
fadd
cmp
pop
jecxz
add
repz
(bad)
(bad)
jmp
push
stos
outs
and
jmp
(bad)
fdivr
stos
in
pop
outs
and
(bad)
(bad)
push
sbb
call
std
in
pusha
aaa
cmp
mov
xchg
cmp
clc
(bad)
mov
(bad)
call
jmp
div
cmp
stos
outs
and
test
call
adc
xchg
push
jmp
lods
sbb
stos
outs
and
push
cmp
xchg
neg
sbb
cs
jmp
(bad)
call
jmp
mul
xor
(bad)
mov
dec
cmc
and
jmp
div
(bad)
cmp
xchg
outs
add
(bad)
(bad)
push
sub
xchg
outs
add
dec
fucomip
(bad)
cmp
outs
add
test
push
mov
jmp
cmp
outs
add
mov
push
mov
cmp
add
add
sbb
in
mov
outs
in
cmc
not
jmp
cmp
outs
add
(bad)
(bad)
push
and
(bad)
cmp
repz
jp
add
pop
in
jmp
cmc
idiv
jmp
sub
mov
cmc
neg
jmp
sub
cmp
lods
pusha
test
pop
stos
inc
outs
add
test
push
adc
fdivr
outs
dec
cmc
and
pop
push
cmp
xor
nop
xchg
jmp
cmp
dec
push
cmp
xor
out
(bad)
in
push
cmp
dec
mov
imul
push
inc
sbb
jmp
cwde
iret
sbb
(bad)
jmp
cmc
mul
or
or
push
int3
call
cmp
(bad)
push
scas
jg
jmp
(bad)
push
adc
mov
ins
test
jmp
lods
sbb
stos
outs
and
jmp
neg
jmp
dec
xchg
fdivr
dec
push
cmp
inc
imul
or
(bad)
cmp
outs
add
test
push
adc
outs
add
(bad)
(bad)
call
jmp
neg
xchg
jmp
outs
and
(bad)
(bad)
jmp
repnz
(bad)
(bad)
mov
xor
mov
in
jg
(bad)
fdivr
outs
dec
cmc
and
pop
push
cmp
fdecstp
jp
jmp
cmp
dec
outs
add
test
push
cld
xchg
jmp
cmp
dec
outs
add
(bad)
(bad)
call
jmp
neg
xchg
jmp
lods
mov
cmp
dec
mov
(bad)
(bad)
jmp
(bad)
push
out
jmp
and
lods
fdivr
outs
cmp
stos
in
pop
outs
cmp
neg
add
dec
outs
in
cmc
mul
add
dec
outs
add
(bad)
(bad)
push
fist
jmp
add
add
add
dec
outs
in
push
push
cmp
test
jecxz
jmp
dec
and
test
jmp
pusha
cwde
and
add
mul
mov
outs
mov
(bad)
call
shr
mov
lods
and
mov
add
dec
outs
outs
lea
jmp
aaa
cmp
add
add
int3
in
call
cmc
not
dec
outs
add
(bad)
(bad)
push
add
jmp
xchg
lahf
retf
fadd
fmul
outs
cmp
jmp
aaa
cmp
cwde
add
add
int3
fadd
fmul
add
(bad)
(bad)
push
fist
jmp
fadd
fmul
in
push
idiv
cmp
test
js
(bad)
(bad)
fadd
fmul
outs
push
(bad)
push
ins
jmp
aaa
cmp
jg
add
fwait
mov
jecxz
int3
dec
add
mov
(bad)
(bad)
fadd
fmul
outs
outs
test
push
mov
cmp
test
add
fwait
loop
jecxz
int3
outs
add
mov
call
jmp
mul
cmps
jmp
inc
cmp
mov
test
(bad)
mov
(bad)
call
sbb
fisttp
add
clc
(bad)
mov
cmp
imul
mov
push
sub
mov
(bad)
call
jmp
test
jmp
outs
cmp
stos
dec
push
stos
pop
dec
add
or
xor
sub
out
pop
(bad)
(bad)
mov
dec
out
in
pop
push
cmp
and
jg
jmp
in
call
xor
jmp
xchg
fmul
add
mov
push
pop
xchg
jmp
xchg
fmul
in
push
idiv
cmp
sti
add
add
and
add
jae
clc
(bad)
mov
cmp
sub
lea
push
sub
mov
(bad)
call
jmp
mul
cmp
stos
dec
push
stos
pop
jp
add
outs
xor
cmp
cmps
neg
(bad)
(bad)
mov
dec
out
in
pop
push
cmp
jo
or
xchg
fmul
add
test
push
mov
fmul
add
mov
push
jmp
outs
in
push
test
jmp
aaa
cmp
sti
add
add
iret
lea
add
dec
and
and
test
dec
push
mov
inc
jmp
out
outs
and
outs
and
jmp
jmp
mov
pop
imul
iret
pusha
cwde
iret
and
add
fmul
and
test
jmp
out
and
test
jmp
add
(bad)
jmp
stos
outs
cmp
stos
in
pop
outs
add
test
push
add
jmp
out
push
cmp
xor
xor
fmul
cmp
sti
neg
sub
fdivr
outs
cmp
stos
lahf
or
add
dec
outs
outs
fwait
test
push
inc
fucomip
push
cmp
sti
add
add
int3
fadd
fmul
outs
or
jmp
aaa
cmp
sti
add
add
int3
outs
cmp
stos
outs
and
jmp
(bad)
fdivr
outs
dec
out
in
pop
test
dec
stos
test
jmp
out
div
and
outs
push
mov
(bad)
in
pop
xchg
jb
(bad)
dec
inc
test
test
inc
inc
inc
push
clc
add
add
mov
dec
xchg
outs
add
push
int
jmp
lods
aaa
xor
(bad)
call
jmp
div
push
stos
outs
and
test
push
adc
mov
ins
div
inc
jmp
lods
sbb
dec
dec
add
call
call
test
push
in
scas
jmp
xchg
cmp
add
(bad)
(bad)
call
jmp
imul
jmp
xchg
cmp
add
push
sub
test
push
std
fldpi
jmp
rol
test
push
fst
dec
pusha
cwde
iret
dec
(bad)
(bad)
(bad)
fadd
cmp
in
out
pushf
pop
jmp
outs
and
jmp
mov
(bad)
fadd
cmp
add
(bad)
(bad)
push
neg
jmp
dec
and
push
mov
int3
add
add
mov
dec
les
mov
cwde
xor
sub
int3
lods
pop
sub
mov
(bad)
(bad)
movs
mov
mov
lods
and
sub
dec
les
lea
retf
lods
retf
lods
dec
(bad)
sub
and
mov
mov
xchg
inc
add
add
xchg
dec
(bad)
(bad)
(bad)
jmp
(bad)
sub
xor
xchg
dec
(bad)
(bad)
(bad)
jmp
(bad)
sub
scas
dec
(bad)
sub
(bad)
jmp
sub
test
add
cmp
scas
repnz
in
xchg
dec
jb
lods
dec
cmp
popf
in
int
inc
dec
cmp
sti
jnp
dec
sahf
in
int
stos
dec
xchg
dec
push
sub
cmp
sti
push
repz
pop
push
jmp
jnp
dec
xchg
jnp
sub
lods
jecxz
ds
pop
sti
ds
inc
sti
or
sub
cmp
sti
addr16
sub
lods
mov
pop
sahf
lods
add
add
add
add
add
add
cmp
in
dec
sub
dec
(bad)
sub
lods
fiadd
xchg
sub
cmp
xchg
repnz
mov
scas
jnp
jnp
lods
fiadd
xchg
sub
repnz
in
addr16
jb
scas
dec
cmp
lods
in
int
inc
dec
cmp
popf
jnp
dec
sahf
in
int
stc
or
jb
scas
dec
(bad)
sub
lahf
push
movs
push
jmp
jnp
dec
xchg
jnp
sub
scas
jecxz
ds
pop
sti
ds
inc
sti
or
sub
or
sub
cli
stc
mov
lods
mov
jge
sahf
lods
add
add
add
add
add
add
add
add
dec
cmp
scas
repnz
mov
sub
fiadd
xchg
sub
dec
cmp
xor
pusha
mov
sub
lods
fiadd
xchg
sub
xchg
sub
dec
jb
xchg
dec
cmp
scas
in
int
inc
dec
fimul
sub
loop
fimul
sub
dec
cmp
lods
push
lahf
push
movs
push
jmp
jnp
dec
lea
sub
dec
xchg
dec
cmp
xchg
jnp
jecxz
ds
pop
sti
mov
inc
dec
or
int
push
cli
in
mov
lods
mov
pop
in
sahf
lods
add
(bad)
enter
dec
(bad)
sub
outs
fcomp
xchg
not
pop
mov
mov
outs
dec
(bad)
repz
push
dec
sub
outs
fcomp
xchg
div
cdq
mov
fwait
jb
mov
mov
dec
dec
(bad)
repz
sub
outs
fcomp
xchg
test
call
repz
mov
dec
dec
(bad)
repz
dec
lea
pop
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
call
repz
int3
mov
outs
dec
(bad)
repz
push
(bad)
(bad)
in
(bad)
div
mov
mov
sti
outs
fcomp
xchg
idiv
cdq
mov
fwait
and
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
mul
mov
fwait
test
mov
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
sbb
mov
mov
dec
cmp
repz
fnstenv
lods
pusha
sti
repz
mov
dec
cmp
lods
pusha
lods
repz
mov
dec
cmp
lods
pusha
xchg
repz
fnstenv
lods
pusha
fpatan
or
mov
dec
cmp
lods
pusha
pop
repz
fnstenv
lods
pusha
out
repz
mov
dec
cmp
lods
pusha
or
dec
sti
lods
pusha
fdivp
(bad)
fnstenv
sti
outs
fcomp
xchg
not
pop
push
mov
mov
(bad)
in
(bad)
test
mov
mov
sti
outs
fcomp
xchg
div
(bad)
push
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
not
push
mov
fwait
push
push
mov
mov
dec
cmp
lods
pusha
(bad)
repz
(bad)
sub
outs
fcomp
xchg
test
call
repz
dec
sub
outs
fcomp
xchg
mul
out
imul
dec
sti
lods
dec
(bad)
xrelease
sti
outs
fcomp
xchg
not
push
imul
jmp
and
or
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
mov
fwait
mov
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
idiv
sbb
call
rep
dec
mov
dec
cmp
iret
popf
add
add
dec
sti
repz
push
jmp
int3
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
scas
dec
mov
mov
dec
cmp
iret
popf
add
add
dec
sti
repz
dec
dec
(bad)
sub
outs
fcomp
xchg
neg
sbb
call
repz
jmp
(bad)
repz
(bad)
repz
sub
outs
fcomp
xchg
test
mov
fwait
call
mov
dec
dec
(bad)
repz
cmp
sub
outs
fcomp
xchg
neg
cmp
mov
mov
dec
cmp
iret
cwde
add
add
dec
les
xchg
dec
dec
(bad)
sub
outs
fcomp
xchg
mul
cmp
mov
mov
dec
dec
(bad)
repz
in
lea
xchg
jmp
dec
(bad)
sub
outs
fcomp
xchg
not
add
mov
mov
outs
cmp
repz
dec
sub
outs
fcomp
xchg
idiv
cmp
mov
mov
dec
dec
sti
repz
jbe
dec
sti
lods
dec
(bad)
repz
lods
jmp
dec
dec
sti
lods
dec
fpatan
and
jmp
dec
dec
sti
lods
dec
mov
fild
lods
dec
mov
cwde
lods
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
xchg
mov
fwait
pop
sub
mov
dec
cmp
iret
cwde
add
add
dec
sti
lods
dec
out
repz
jmp
int3
dec
in
sti
repz
push
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
mov
fwait
push
sub
mov
dec
dec
lea
mov
sub
outs
fcomp
xchg
test
mov
fisubr
mov
mov
(bad)
in
(bad)
idiv
dec
(bad)
sub
outs
fcomp
xchg
neg
mov
fwait
(bad)
and
mov
jmp
xchg
repz
aam
dec
sub
outs
fcomp
xchg
test
and
mov
dec
sub
outs
fcomp
xchg
imul
mov
fwait
sbb
mov
jmp
sti
rep
inc
jmp
outs
mov
jmp
outs
cmp
jmp
int3
dec
(bad)
sub
outs
fcomp
xchg
div
pop
mov
fwait
mov
push
loope
jmp
sti
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
mov
fwait
sub
mov
jmp
sti
repz
inc
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
stos
pop
mov
mov
dec
in
sti
lods
push
scas
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
idiv
pop
mov
fwait
cld
pop
mov
mov
outs
in
cmp
or
in
pusha
repz
inc
jmp
dec
(bad)
sub
outs
fcomp
xchg
mul
pop
mov
dec
push
jmp
xchg
div
adc
and
mov
outs
in
cmp
jecxz
jmp
outs
in
fwait
repz
dec
sub
outs
fcomp
xchg
div
pop
mov
fwait
std
pop
mov
mov
outs
in
cmp
(bad)
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
idiv
mov
fwait
lods
sub
mov
jmp
sti
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
mov
mov
jmp
cmp
shr
jmp
outs
in
fwait
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
dec
jmp
xchg
mul
lds
mov
mov
outs
in
cmp
cmp
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
push
jmp
xchg
neg
lds
mov
mov
outs
dec
sti
repz
jmp
dec
cmp
lods
and
popf
lods
xor
test
cmp
popa
in
jmp
int3
dec
(bad)
sub
outs
fcomp
xchg
div
cmc
sub
mov
jmp
popf
repz
outs
fcomp
xchg
neg
jmp
mov
mov
outs
in
popf
repz
sub
outs
fcomp
xchg
test
mov
fwait
pop
pop
mov
mov
outs
in
sti
repz
call
aas
call
out
jmp
outs
in
cmp
mov
jmp
outs
in
cmp
rcr
cmp
or
out
pop
call
bound
out
jae
jmp
outs
in
out
cs
mov
jmp
outs
in
out
stos
call
outs
fcomp
xchg
div
mov
dec
push
jmp
xchg
mul
jb
mov
mov
dec
in
sti
lods
push
sti
repz
sti
lods
push
sub
sbb
lods
push
fdivp
sbb
sti
lods
push
push
repz
sti
xchg
push
rol
add
repz
scas
jmp
dec
in
sti
xchg
push
add
add
nop
scas
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
add
ja
jmp
push
repz
scas
jmp
outs
in
cmc
repz
scas
jmp
dec
(bad)
sub
outs
fcomp
xchg
mul
cmps
mov
mov
outs
add
retf
repz
adc
shr
fmulp
(bad)
push
cld
scas
jmp
outs
add
(bad)
push
jno
jmp
outs
add
sub
retf
repz
scas
jmp
dec
(bad)
sub
outs
xor
retf
dec
jns
retf
in
xchg
test
jmp
mov
imul
ja
jmp
cmp
and
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
dec
jmp
xchg
test
cmps
mov
mov
outs
in
cmp
mov
(bad)
sub
outs
fcomp
xchg
mul
imul
imul
mov
lods
and
iret
popf
add
add
in
(bad)
repz
jmp
int3
outs
in
add
es
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
scas
jo
mov
jmp
call
jmp
outs
in
cmp
iret
ds
outs
in
fwait
repz
ds
outs
in
push
call
(bad)
(bad)
push
push
ds
outs
add
(bad)
(bad)
push
in
jmp
outs
add
cmp
jmp
outs
add
sar
jmp
outs
add
(bad)
(bad)
push
pop
ds
outs
add
(bad)
(bad)
push
mov
jmp
outs
add
sub
jmp
outs
add
(bad)
(bad)
push
xor
jmp
outs
add
hlt
ds
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
dec
jmp
xchg
mul
mov
fwait
pop
jo
mov
jmp
cmp
xlat
jno
jmp
pop
rep
jno
jmp
popf
repz
jno
jmp
cmp
div
jmp
adc
jmp
mov
jmp
adc
dec
sub
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
not
(bad)
or
mov
dec
les
popf
add
add
in
div
call
sub
outs
fcomp
xchg
idiv
out
or
mov
jmp
sti
repz
jmp
dec
cmp
lods
and
iret
popf
add
add
dec
mov
dec
dec
(bad)
sub
outs
fcomp
xchg
div
or
mov
(bad)
jl
or
mov
xor
mov
lods
and
iret
popf
add
add
in
(bad)
repz
(bad)
jmp
int3
dec
(bad)
sub
outs
fcomp
xchg
not
out
mov
mov
outs
in
fs
jmp
outs
in
cmp
out
(bad)
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
push
jmp
xchg
not
mov
or
mov
jmp
cmp
data16
jmp
dec
(bad)
sub
outs
fcomp
xchg
mul
mov
or
mov
jmp
fwait
repz
jmp
outs
add
(bad)
jmp
outs
in
cmp
mov
add
(bad)
(bad)
push
push
(bad)
jmp
outs
in
or
(bad)
(bad)
jmp
outs
add
(bad)
(bad)
push
push
(bad)
jmp
outs
add
(bad)
push
ret
(bad)
jmp
outs
in
push
inc
(bad)
jmp
dec
(bad)
sub
outs
xor
dec
pop
test
(bad)
in
xchg
mul
mov
xor
mov
outs
add
(bad)
(bad)
push
sbb
jmp
cld
(bad)
(bad)
push
jmp
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
mov
fwait
mov
mov
mov
outs
in
fdivp
movs
and
sub
push
and
sti
repz
(bad)
repz
and
lea
and
lea
and
lea
and
lea
and
lea
add
shl
fwait
repz
in
cmp
pop
and
sub
outs
fcomp
xchg
mul
jl
call
repz
or
repz
and
mov
iret
popf
add
add
dec
div
shl
(bad)
sub
outs
fcomp
xchg
not
mov
fmulp
mov
mov
outs
dec
sti
repz
mov
mov
iret
popf
add
add
dec
add
sub
(bad)
sub
outs
fcomp
xchg
neg
jl
call
repz
jmp
popf
repz
in
cmp
cmp
sub
outs
fcomp
xchg
not
aas
mov
dec
push
jmp
xchg
neg
pop
retf
mov
mov
outs
in
push
lds
or
leave
stos
jmp
outs
in
or
loopne
jmp
outs
in
push
and
or
shr
push
jmp
in
or
pop
stos
jmp
outs
in
push
and
in
cmp
mov
in
fwait
repz
jmp
outs
in
or
xchg
stos
jmp
outs
in
push
cli
stos
jmp
dec
(bad)
sub
outs
xor
(bad)
(bad)
dec
stos
(bad)
(bad)
(bad)
in
xchg
neg
aas
mov
fwait
add
mov
mov
outs
in
popf
repz
stos
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
mov
mov
mov
outs
in
popf
repz
jmp
outs
dec
cmp
inc
ss
dec
(bad)
sub
outs
fcomp
xchg
div
aas
mov
dec
push
jmp
xchg
mul
mov
fwait
daa
ins
mov
mov
outs
dec
cmp
out
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
mov
dec
push
jmp
xchg
div
leave
mov
fwait
fwait
ins
mov
mov
outs
dec
sti
repz
xor
mov
sub
outs
fcomp
xchg
test
jmp
xchg
not
les
repz
mov
jl
or
mov
cld
or
mov
lods
and
iret
popf
add
add
dec
std
repz
jmp
int3
dec
(bad)
sub
outs
fcomp
xchg
imul
(bad)
mov
jmp
cmc
repz
jmp
outs
dec
push
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
dec
mov
leave
mov
fwait
ror
mov
jmp
pop
repz
popf
repz
iret
repz
cmp
jae
(bad)
push
mov
jae
(bad)
push
sbb
iret
repz
cmp
cmp
sbb
jae
(bad)
push
push
cmp
iret
repz
cmp
out
(bad)
(bad)
push
jl
jmp
outs
add
(bad)
push
mov
jmp
outs
add
(bad)
push
dec
cmp
iret
rep
cmp
sub
outs
fcomp
(bad)
(bad)
in
xchg
idiv
dec
jmp
xchg
mul
add
dec
mov
mov
outs
dec
sub
add
in
sti
repz
imul
popf
add
add
dec
(bad)
repz
dec
dec
dec
and
in
(bad)
jmp
outs
dec
xor
(bad)
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
call
repz
push
mov
outs
dec
sti
repz
(bad)
jmp
outs
dec
cmp
fadd
jmp
dec
(bad)
sub
outs
fcomp
xchg
not
push
jmp
xchg
imul
mov
les
sti
repz
jmp
cmp
jg
jmp
dec
(bad)
sub
outs
fcomp
xchg
not
push
jmp
xchg
mul
out
mov
mov
outs
in
sub
add
jmp
outs
dec
cmp
cmc
jecxz
jmp
fwait
repz
add
(bad)
push
ds
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
div
push
jmp
xchg
div
data16
fwait
scas
mov
mov
outs
in
sti
repz
pusha
repz
bnd
outs
in
fs
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
mov
fwait
stos
mov
mov
outs
cmp
repz
bnd
outs
in
sub
mov
in
sti
repz
fsubr
jmp
aas
rep
inc
jmp
push
repz
jmp
outs
in
cmc
repz
mov
ret
mov
ret
and
inc
bnd
outs
in
cmc
repz
jmp
stos
(bad)
(bad)
push
pop
fsubr
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
neg
push
jmp
xchg
not
push
call
repz
mov
outs
outs
cmp
push
jp
jmp
shl
idiv
jmp
cmp
dec
jp
jmp
fs
jp
jmp
repz
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
mov
dec
push
jmp
xchg
imul
pop
mov
mov
jmp
fwait
repz
jp
jmp
cmp
stc
jp
jmp
push
pop
fsubr
dec
sub
outs
fcomp
xchg
div
outs
mov
mov
jmp
fwait
repz
jmp
cmp
inc
jp
dec
sub
outs
fcomp
xchg
div
push
call
repz
mov
outs
dec
popf
repz
jp
jmp
cmp
addr16
jmp
(bad)
(bad)
(bad)
push
lods
jp
jmp
mov
(bad)
push
mov
outs
call
jmp
outs
dec
mov
test
outs
mov
(bad)
push
mov
dec
xchg
repz
jmp
push
repz
push
jmp
outs
add
(bad)
(bad)
push
xchg
push
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
mov
dec
push
jmp
xchg
test
mov
mov
dec
(bad)
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
add
call
rep
adc
repz
dec
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
add
call
repz
adc
repz
jmp
outs
in
cmp
jecxz
jmp
dec
in
push
repz
dec
sub
outs
fcomp
xchg
div
add
dec
jmp
xchg
mul
mov
fwait
adc
lea
fs
test
jmp
sbb
bound
cmp
loope
jmp
dec
cmp
repz
dec
push
(bad)
jae
jmp
cmp
stos
test
jmp
cmp
add
in
cmp
mov
jmp
dec
(bad)
sub
outs
fdivr
xchg
test
mov
fwait
cmp
mov
mov
dec
cmp
dec
cwde
iret
popf
add
add
in
(bad)
repz
jae
dec
outs
cmp
jmp
fwait
repz
jmp
outs
in
cmc
repz
jae
jmp
cmc
repz
dec
push
repz
sti
jmp
dec
in
adc
jmp
cmp
cmp
jmp
outs
in
cmc
repz
outs
in
cmc
repz
jmp
cmc
repz
jae
jmp
cmc
repz
dec
adc
dec
push
repz
cmp
push
jmp
outs
in
cmc
repz
sti
outs
fcomp
xchg
div
in
call
repz
jmp
lods
(bad)
(bad)
push
push
fs
jmp
mov
(bad)
push
mov
sub
outs
xor
test
dec
cmc
test
(bad)
in
xchg
idiv
jbe
jmp
mov
jbe
call
repz
(bad)
push
jae
(bad)
jmp
fiadd
jmp
dec
and
test
jmp
popa
add
add
inc
push
(bad)
mov
add
shl
fiadd
jmp
dec
(bad)
sub
outs
xor
test
dec
cmc
test
(bad)
in
xchg
div
popf
dec
push
mov
jbe
call
repz
je
jmp
sti
repz
sub
std
xor
jmp
cmp
mov
jmp
outs
add
test
push
repz
outs
add
test
push
xchg
sub
outs
add
(bad)
push
enter
outs
add
xchg
sub
outs
add
test
push
sub
cmp
jmp
outs
outs
fwait
test
push
test
outs
push
(bad)
push
mov
outs
or
ret
outs
cmp
ret
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
dec
jmp
xchg
mul
out
call
repz
(bad)
mov
outs
in
sti
repz
sub
dec
(bad)
sub
outs
fcomp
xchg
not
out
call
repz
mov
outs
in
sti
repz
sub
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
xor
mov
jmp
xchg
(bad)
(bad)
push
sar
mov
jp
jmp
outs
add
jnp
jmp
outs
add
(bad)
push
les
jmp
outs
add
xlat
xor
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
idiv
loopne
dec
jmp
xchg
not
loopne
call
repz
outs
in
cmc
repz
jmp
outs
in
out
xchg
xor
jmp
out
jl
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
push
mov
loopne
call
repz
mov
outs
in
cmp
call
sti
outs
fcomp
xchg
test
or
mov
outs
in
cmp
and
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
loopne
call
rep
cdq
mov
outs
in
cmp
ins
xor
dec
sub
outs
fcomp
xchg
idiv
loopne
call
repz
cdq
mov
dec
and
(bad)
jmp
popa
add
add
inc
push
test
outs
add
test
push
pushf
outs
jmp
outs
add
push
pop
outs
jmp
outs
add
cmc
outs
jmp
outs
add
test
push
push
add
mov
jmp
cmp
je
jmp
outs
add
test
push
outs
jmp
outs
add
jbe
jmp
outs
add
push
(bad)
outs
jmp
outs
add
test
push
lods
outs
jmp
outs
add
push
pop
outs
jmp
outs
add
test
push
fld
jmp
fs
push
push
outs
jmp
outs
add
test
push
xchg
outs
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
mov
dec
jmp
xchg
test
or
mov
outs
in
cmp
sub
jmp
outs
add
outs
jmp
outs
in
mov
scas
outs
jmp
outs
add
test
jmp
push
repz
outs
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
div
push
jmp
xchg
test
or
sbb
jmp
cmp
push
dec
jmp
outs
in
repz
sti
outs
fcomp
xchg
imul
xor
xor
sbb
jmp
sti
stos
imul
into
jmp
int3
dec
and
(bad)
(bad)
jmp
popa
add
add
inc
push
add
dec
outs
cmp
jmp
int3
outs
add
test
push
dec
dec
jmp
outs
add
(bad)
push
mov
jmp
outs
in
push
rep
dec
jmp
outs
add
(bad)
(bad)
push
cmp
jmp
out
(bad)
push
aam
jmp
outs
in
cmc
repz
jmp
outs
add
test
push
sub
jmp
outs
add
(bad)
push
xor
jmp
push
(bad)
(bad)
push
hlt
dec
jmp
outs
add
(bad)
(bad)
push
ss
jmp
outs
outs
pop
(bad)
(bad)
push
inc
ret
outs
outs
(bad)
(bad)
(bad)
push
push
ret
outs
outs
(bad)
(bad)
(bad)
push
out
ret
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
xor
mov
or
cmp
lods
and
iret
popf
add
add
in
std
repz
or
push
jmp
outs
in
push
mov
in
push
daa
push
jmp
outs
in
or
iret
push
jmp
outs
in
push
cld
push
jmp
outs
in
or
call
repz
in
or
outs
push
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
div
mov
aad
mov
jmp
(bad)
xchg
ret
in
iret
repz
push
jmp
outs
in
aas
rep
push
jmp
outs
in
sbb
pop
push
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
jmp
mov
mov
dec
add
(bad)
push
add
dec
xor
jmp
outs
add
jmp
mov
push
retf
dec
xor
jmp
outs
add
idiv
pusha
mov
push
loope
jmp
dec
add
mov
lea
mov
pusha
mov
push
mov
dec
add
sub
cs
push
mov
jmp
lea
rol
outs
add
push
jno
jmp
outs
add
cmp
mov
push
pop
rol
outs
outs
popf
test
push
add
ret
outs
cmp
ret
outs
pop
test
push
and
ret
outs
lea
rol
outs
add
sub
cmp
jmp
outs
add
push
sub
add
jecxz
jmp
outs
add
mov
push
mov
add
push
arpl
jmp
outs
add
push
cs
outs
add
mov
push
sbb
outs
cmp
rol
outs
add
dec
cs
outs
add
mov
push
adc
jmp
outs
add
sbb
jmp
outs
add
test
push
aas
cs
outs
add
sub
pop
test
push
jns
jmp
outs
outs
popf
test
push
out
mov
pop
test
push
call
test
push
push
mov
cmp
mov
cmp
mov
lods
(bad)
(bad)
push
out
data16
jmp
cmp
jmp
outs
add
push
mov
jmp
outs
add
sub
jmp
outs
add
mov
push
xor
jmp
dec
(bad)
sub
outs
xor
mov
dec
fwait
mov
(bad)
in
xchg
test
mov
lods
pusha
popf
dec
push
mov
sub
mov
mov
outs
in
cmc
repz
jge
jmp
cmp
(bad)
push
pop
jge
jmp
cs
(bad)
push
cmc
jge
jmp
pop
(bad)
(bad)
push
push
in
push
repz
jmp
out
add
jmp
cld
(bad)
(bad)
push
cmp
jmp
pop
(bad)
(bad)
push
leave
jge
jmp
cs
(bad)
push
mov
add
(bad)
(bad)
push
xchg
dec
sub
outs
xor
(bad)
(bad)
dec
xchg
(bad)
(bad)
(bad)
in
xchg
mul
jmp
mov
clc
mov
fwait
push
push
mov
mov
outs
in
(bad)
cmp
jmp
outs
in
sbb
sub
jmp
aas
repz
jge
jmp
iret
repz
jge
dec
sub
outs
fcomp
xchg
not
mov
fimul
lds
repz
jge
dec
sub
outs
fadd
xchg
not
clc
mov
fwait
cmp
adc
mov
outs
outs
les
ret
sub
sbb
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
push
jmp
xchg
test
mov
fwait
aas
mov
mov
outs
in
cmc
repz
jmp
outs
and
(bad)
(bad)
push
dec
inc
jmp
lods
(bad)
(bad)
push
jl
jmp
outs
add
in
jmp
mov
sbb
jmp
mov
inc
mov
jmp
lods
(bad)
(bad)
push
mov
ret
add
(bad)
(bad)
push
fsub
jmp
outs
in
push
repz
in
jmp
out
jne
jmp
outs
add
(bad)
(bad)
push
cli
in
dec
sub
outs
xor
test
dec
and
fdiv
popf
dec
push
mov
mov
call
repz
pop
mov
outs
in
push
out
jmp
outs
in
cmp
hlt
in
jmp
(bad)
(bad)
(bad)
push
ss
jmp
(bad)
(bad)
(bad)
push
ret
jmp
or
movs
sbb
jmp
or
neg
jmp
outs
add
(bad)
(bad)
push
das
sbb
jmp
fwait
repz
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
push
jmp
xchg
div
and
mov
mov
outs
in
cmp
imul
shl
data16
jmp
repz
sub
outs
fcomp
xchg
not
mov
dec
push
jmp
xchg
not
call
repz
mov
outs
add
(bad)
(bad)
push
xor
jmp
outs
in
push
repz
jmp
outs
add
(bad)
(bad)
push
(bad)
jmp
outs
add
mov
push
mov
jmp
outs
and
jmp
dec
outs
in
out
mov
jmp
outs
and
mov
push
push
mov
jmp
cmp
div
push
repz
jmp
outs
add
(bad)
(bad)
push
popf
sbb
jmp
jmp
(bad)
push
dec
sbb
jmp
cmp
(bad)
push
inc
push
jmp
outs
add
lahf
push
jmp
outs
in
cmc
pause
push
jmp
outs
add
mov
push
ficom
jmp
xor
jmp
outs
add
sahf
push
jmp
outs
add
(bad)
(bad)
push
or
jmp
xor
jmp
outs
add
(bad)
(bad)
push
jl
jmp
outs
add
test
push
mov
jmp
outs
add
(bad)
(bad)
push
dec
push
jmp
outs
add
test
push
or
jmp
push
repz
push
jmp
outs
add
mov
push
fist
jmp
xor
jmp
outs
in
push
repz
jmp
outs
add
mov
push
cli
push
jmp
outs
add
test
push
cmp
jmp
xor
jmp
dec
and
and
iret
popa
add
add
inc
push
xchg
push
jmp
int3
outs
add
push
popf
push
jmp
outs
sub
push
mov
add
test
push
inc
pop
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
push
mov
(bad)
mov
fwait
cmp
div
jmp
lods
(bad)
(bad)
push
sbb
(bad)
jmp
outs
test
push
fwait
pop
jmp
outs
add
test
push
cdq
pop
jmp
outs
add
(bad)
push
mov
add
(bad)
push
loopne
jmp
outs
add
(bad)
push
daa
pop
jmp
outs
add
test
push
xchg
pop
jmp
outs
add
(bad)
push
inc
pop
jmp
outs
add
test
push
xchg
jmp
push
(bad)
push
cs
jmp
outs
add
js
jmp
outs
add
test
push
push
pop
jmp
dec
(bad)
sub
outs
xor
test
dec
stos
test
(bad)
in
xchg
div
outs
mov
lods
pusha
popf
dec
push
mov
outs
mov
fwait
(bad)
fisub
mov
outs
mov
jmp
outs
cmp
repz
mov
jmp
jae
(bad)
push
shl
outs
sub
(bad)
(bad)
push
sar
jmp
jae
(bad)
push
nop
jne
jmp
fdivrp
(bad)
push
retf
jmp
jae
(bad)
push
adc
jmp
jae
(bad)
push
sahf
jne
jmp
jae
(bad)
push
or
jmp
jae
(bad)
push
push
jne
jmp
jae
(bad)
push
jl
jmp
(bad)
in
push
test
(bad)
in
push
div
daa
mov
mov
sti
outs
fcomp
(bad)
(bad)
in
xchg
neg
mov
dec
push
jmp
xchg
idiv
call
repz
add
(bad)
(bad)
push
xlat
jge
jmp
jmp
(bad)
push
cmps
jge
jmp
daa
repz
jmp
outs
in
pop
repz
jne
(bad)
inc
xor
daa
mov
mov
repz
jmp
outs
and
fwait
jge
jmp
xor
jne
jmp
cmp
(bad)
push
popf
jne
jmp
scas
jmp
push
dec
jne
(bad)
inc
scas
mov
push
or
mov
mov
mov
push
jo
mov
mov
mov
push
ins
daa
mov
mov
mov
push
lods
daa
mov
mov
mov
push
jecxz
mov
mov
mov
push
inc
dec
mov
mov
mov
push
repz
mov
mov
mov
push
mov
int3
inc
scas
mov
push
sbb
(bad)
mov
mov
push
sahf
dec
mov
mov
mov
push
add
(bad)
mov
mov
push
pop
dec
mov
mov
mov
push
add
mov
mov
mov
push
(bad)
mov
mov
push
xchg
dec
mov
mov
repz
mov
mov
(bad)
push
and
jmp
fcos
(bad)
jmp
dec
outs
and
in
(bad)
inc
scas
mov
push
push
dec
mov
mov
(bad)
(bad)
push
mov
and
(bad)
(bad)
jmp
dec
outs
and
test
jmp
dec
outs
add
jmp
push
cmps
mov
jmp
mov
(bad)
push
outs
in
jmp
out
jmp
push
add
cmp
(bad)
push
add
jmp
push
cmp
jmp
push
leave
mov
jmp
cmp
test
dec
outs
outs
pusha
test
push
int
ret
outs
mov
(bad)
push
aaa
(bad)
ret
outs
fs
push
sbb
sub
mov
cmp
(bad)
push
pop
mov
jmp
push
jmp
push
stos
mov
jmp
mov
(bad)
push
cmp
jmp
push
aam
jmp
outs
add
push
dec
mov
jmp
mov
(bad)
push
sub
jmp
push
out
jmp
outs
add
push
sub
add
jecxz
jmp
outs
add
jmp
push
mov
add
push
arpl
mov
(bad)
push
push
xchg
jmp
outs
add
sbb
add
jmp
push
add
push
jmp
push
dec
xchg
jmp
outs
add
adc
jmp
outs
add
sbb
jmp
outs
in
xchg
repz
jmp
outs
add
push
out
jmp
outs
and
pop
sbb
jmp
mov
test
jb
(bad)
push
lea
jmp
push
fcom
push
jmp
push
jge
jmp
outs
add
(bad)
xchg
jmp
outs
add
jmp
push
push
xchg
jmp
outs
add
push
ret
xchg
jmp
outs
add
in
xchg
jmp
outs
add
pop
xchg
jmp
outs
add
ret
rep
xchg
jmp
outs
add
ret
repz
xchg
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
xchg
in
xchg
neg
mov
fwait
sti
cmp
mov
outs
in
iret
repz
dec
jmp
outs
in
aas
xrelease
jmp
std
xrelease
jmp
test
jmp
iret
test
push
sbb
jmp
lods
(bad)
(bad)
push
adc
jmp
or
pop
dec
jmp
outs
in
sbb
add
add
adc
(bad)
inc
and
(bad)
push
not
mov
mov
repz
outs
in
sbb
inc
dec
jmp
outs
in
sbb
stos
dec
jmp
outs
in
sbb
or
outs
in
sbb
in
jmp
outs
in
sbb
dec
dec
jmp
outs
in
sbb
or
jmp
sbb
inc
dec
jmp
outs
add
push
dec
jmp
outs
in
sbb
in
dec
jmp
outs
add
pop
dec
jmp
inc
adc
in
mov
mov
jmp
push
and
mov
mov
jmp
push
cmp
mov
mov
jmp
push
or
mov
mov
jmp
push
jo
mov
mov
(bad)
(bad)
push
mov
in
sbb
cmp
jmp
mov
(bad)
push
idiv
(bad)
inc
adc
call
mov
mov
repz
js
jmp
outs
(bad)
(bad)
jmp
dec
outs
and
imul
fucomi
dec
outs
in
sbb
sub
jmp
sbb
jns
jmp
outs
in
sbb
xor
jmp
xchg
(bad)
(bad)
jmp
dec
outs
and
push
jecxz
jmp
outs
and
imul
outs
and
push
lahf
jne
jmp
sbb
push
js
jmp
xchg
(bad)
(bad)
jmp
dec
outs
and
push
add
jmp
sbb
jo
jmp
outs
sub
(bad)
push
pop
jne
jmp
lods
(bad)
(bad)
push
scas
js
jmp
cmp
jmp
outs
add
ret
repz
jmp
outs
and
(bad)
(bad)
push
daa
jne
jmp
sbb
lahf
(bad)
jmp
outs
and
mul
cmp
and
test
jmp
dec
outs
in
sbb
test
fwait
jmp
push
xchg
jne
jmp
lea
jmp
outs
and
not
outs
outs
or
pushf
(bad)
outs
mov
(bad)
push
pop
(bad)
outs
push
test
push
cmc
(bad)
sub
jmp
push
in
jmp
outs
add
and
add
(bad)
push
outs
(bad)
jmp
outs
add
mov
add
or
jmp
outs
add
(bad)
push
inc
(bad)
jmp
outs
add
or
add
retf
(bad)
jmp
outs
add
(bad)
push
imul
jmp
call
jmp
outs
add
popf
(bad)
jmp
outs
add
(bad)
push
dec
(bad)
jmp
outs
add
inc
cmp
jmp
call
jmp
outs
add
and
jmp
push
(bad)
(bad)
push
mov
add
out
cmp
jmp
call
jmp
outs
in
pusha
repz
mov
push
(bad)
(bad)
push
push
cmp
jmp
mov
(bad)
push
aam
jmp
outs
and
(bad)
jmp
dec
outs
sub
mov
push
(bad)
js
jmp
mov
(bad)
push
sar
outs
add
scas
cmp
jmp
call
jmp
outs
add
sbb
jmp
scas
jmp
push
(bad)
jmp
outs
add
mov
jmp
outs
add
mov
jmp
scas
jmp
push
mov
jmp
call
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
idiv
and
in
xchg
not
and
mov
mov
outs
in
push
repz
por
outs
dec
mov
aad
ret
in
push
repz
por
outs
dec
mov
cmps
lahf
ret
in
push
repz
por
outs
dec
mov
out
ret
in
push
repz
por
outs
dec
mov
test
push
repz
jmp
outs
dec
mov
shr
jmp
push
repz
por
outs
dec
mov
repz
mov
jmp
inc
lea
mov
mov
(bad)
(bad)
push
imul
ret
in
xchg
repz
por
outs
dec
mov
pop
jmp
or
jmp
xchg
repz
jmp
(bad)
push
cmp
jmp
outs
in
push
repz
jmp
outs
outs
iret
test
push
dec
jmp
or
outs
push
test
push
pop
jmp
(bad)
jmp
(bad)
push
xor
ret
outs
iret
test
push
jne
ret
outs
push
test
push
cli
jmp
(bad)
push
das
and
jmp
push
test
push
aad
ret
and
imul
push
jmp
int3
outs
in
xchg
rep
and
jmp
pop
test
push
call
add
push
int3
and
jmp
aas
test
push
fwait
and
jmp
xchg
repz
add
(bad)
push
imul
push
test
push
in
jmp
outs
add
(bad)
push
and
jmp
outs
outs
push
test
push
sbb
ret
outs
push
test
push
xor
jmp
push
test
push
pop
repz
and
mul
jmp
int3
outs
in
mov
mov
add
test
push
or
jmp
outs
add
push
inc
and
jmp
push
repz
add
push
out
and
jmp
fidiv
and
jmp
push
test
push
xor
ret
dec
xchg
repz
ret
outs
iret
test
push
psllq
jmp
push
test
push
mov
ret
add
inc
stos
jmp
outs
add
push
pushf
stos
jmp
outs
outs
push
test
push
pop
repz
add
(bad)
(bad)
push
cmc
stos
jmp
outs
dec
xchg
repz
repz
outs
iret
test
push
sti
repz
outs
push
test
push
mov
ret
add
stos
jmp
outs
add
push
push
jmp
outs
outs
push
test
push
mov
add
push
lock
jmp
outs
add
push
into
stos
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
div
mov
dec
push
mov
xor
mov
mov
dec
cmp
repz
dec
sub
outs
fcomp
xchg
idiv
std
push
mov
mov
dec
dec
lea
xor
outs
fcomp
xchg
test
call
repz
mov
dec
in
sti
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
fwait
mov
mov
dec
lea
(bad)
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
jae
mov
mov
dec
dec
sti
repz
dec
(bad)
sub
outs
fcomp
xchg
test
push
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
div
fldcw
mov
mov
outs
cmp
repz
dec
sub
outs
fcomp
xchg
imul
mov
fwait
jb
mov
mov
outs
cmp
repz
(bad)
sub
outs
fcomp
xchg
idiv
xchg
mov
fwait
pop
sub
mov
dec
dec
lea
loop
dec
sub
outs
fcomp
xchg
idiv
mov
fwait
sub
mov
dec
in
sti
repz
cli
jmp
(bad)
in
popf
not
xchg
mov
mov
sti
outs
fcomp
xchg
neg
mov
fisubr
mov
mov
dec
dec
(bad)
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
mul
xchg
mov
fwait
(bad)
jb
mov
jmp
cmc
repz
adc
dec
sub
outs
fcomp
xchg
neg
or
mov
mov
outs
dec
add
retf
jmp
push
repz
shr
dec
sub
outs
fcomp
xchg
neg
cmp
dec
mov
jmp
cmp
push
pushf
ret
dec
adc
dec
sub
outs
fcomp
xchg
div
or
mov
mov
outs
dec
sti
xrelease
sti
outs
fcomp
xchg
idiv
mov
fwait
add
mov
dec
(bad)
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
test
jb
mov
dec
(bad)
repz
or
dec
sub
outs
fcomp
xchg
mul
or
mov
mov
dec
cmp
iret
cwde
add
add
dec
les
fsubrp
dec
dec
(bad)
sub
outs
fcomp
xchg
not
mov
fwait
stos
dec
mov
mov
outs
dec
lods
repz
ret
dec
(bad)
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
iret
dec
mov
mov
(bad)
in
sti
(bad)
in
(bad)
div
inc
mov
mov
(bad)
repz
dec
sub
outs
fcomp
xchg
div
jmp
dec
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
test
or
mov
dec
cmp
lods
pusha
sti
repz
dec
(bad)
sub
outs
fcomp
xchg
idiv
jmp
or
mov
dec
cmp
lods
pusha
(bad)
repz
jle
jmp
pusha
stos
test
dec
outs
cmp
dec
sub
outs
fcomp
xchg
idiv
mov
fwait
pop
or
mov
dec
in
sti
repz
(bad)
(bad)
in
(bad)
idiv
mov
mov
sti
outs
fcomp
xchg
mul
shl
mov
dec
(bad)
repz
jmp
(bad)
in
sti
idiv
int3
dec
(bad)
sub
outs
fcomp
xchg
test
or
mov
dec
in
sti
repz
in
sti
lods
push
xor
outs
jb
dec
sub
outs
fcomp
xchg
mul
shl
mov
jmp
cmp
daa
std
ret
(bad)
sub
outs
fcomp
xchg
not
mov
fdivrp
mov
mov
dec
dec
(bad)
rep
or
sti
outs
fcomp
xchg
test
call
rep
mov
sti
repz
or
sti
outs
fcomp
xchg
div
shl
mov
dec
lea
popf
add
add
dec
push
pop
std
ret
dec
cmp
iret
popf
add
add
dec
repz
cmp
iret
popf
add
add
dec
cmp
xlat
nop
ret
dec
(bad)
sub
outs
fcomp
xchg
not
mov
fwait
cmp
mov
mov
(bad)
in
(bad)
test
dec
cmp
iret
popf
add
add
dec
cmc
repz
ret
dec
cmp
iret
lods
add
add
and
(bad)
jmp
dec
dec
dec
(bad)
repz
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
pop
stos
mov
mov
outs
dec
(bad)
rep
cmp
sub
outs
fcomp
xchg
test
mov
fwait
(bad)
stos
mov
mov
outs
dec
add
add
jmp
outs
dec
cmp
xor
sub
outs
fcomp
xchg
idiv
mov
dec
push
jmp
xchg
idiv
shr
sub
repz
jmp
outs
dec
cmp
jnp
ret
(bad)
sub
outs
fcomp
xchg
not
cld
mov
dec
push
jmp
xchg
test
mov
fwait
sbb
sub
(bad)
in
(bad)
div
mov
sti
outs
fcomp
xchg
mul
cld
mov
fwait
imul
sub
(bad)
in
std
test
mov
mov
sub
outs
fcomp
xchg
div
mov
fwait
scas
and
mov
(bad)
in
sti
(bad)
in
(bad)
idiv
mov
sti
outs
fcomp
xchg
not
cld
mov
fisub
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
out
mov
mov
outs
mov
jmp
outs
in
fwait
repz
push
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
mov
fwait
add
mov
mov
dec
mov
jmp
outs
mov
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
add
mov
mov
(bad)
in
(bad)
(bad)
in
div
sti
mov
(bad)
mov
sub
outs
fcomp
xchg
not
into
mov
fwait
cs
mov
jmp
cmp
add
ret
dec
cmp
cdq
xlat
ret
dec
fwait
repz
sub
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
div
mov
fwait
push
mov
mov
(bad)
in
(bad)
imul
int3
dec
cmp
iret
popf
add
add
dec
cmc
repz
ret
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
into
mov
fimul
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
test
cmp
mov
dec
sub
outs
fcomp
xchg
neg
test
call
repz
sub
dec
outs
in
sti
repz
shr
dec
(bad)
repz
dec
lea
popf
add
add
in
(bad)
test
(bad)
sub
outs
fcomp
xchg
not
call
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
idiv
test
call
repz
dec
sti
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
stos
(bad)
mov
mov
dec
dec
sti
repz
outs
fcomp
xchg
imul
test
call
repz
mov
dec
sti
repz
sub
outs
fcomp
xchg
neg
call
repz
dec
sti
repz
mov
(bad)
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
mov
pop
and
repz
jmp
dec
dec
(bad)
repz
dec
sub
outs
fcomp
xchg
test
mov
fwait
lods
js
mov
jmp
cmc
repz
mov
dec
sub
outs
fcomp
xchg
div
dec
jmp
xchg
imul
mov
fwait
mov
mov
dec
lea
cwde
add
add
dec
sti
lods
dec
jb
pop
aam
dec
dec
in
sti
repz
xchg
dec
sub
outs
fcomp
xchg
test
js
mov
dec
sub
outs
fcomp
xchg
imul
stc
mov
fwait
xchg
js
mov
jmp
adc
jmp
cmp
push
retf
dec
(bad)
sub
outs
fcomp
xchg
neg
stc
mov
dec
push
jmp
xchg
not
jmp
mov
mov
outs
dec
cmc
repz
jmp
cmp
out
inc
jmp
outs
in
fs
inc
jmp
outs
in
xrelease
dec
sub
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
not
mov
fimul
mov
(bad)
(bad)
in
(bad)
imul
pop
mov
mov
lods
and
iret
popf
add
add
dec
cmc
repz
ret
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
div
cld
dec
mov
mov
outs
dec
cmp
loopne
ret
(bad)
sub
outs
fcomp
xchg
neg
pop
mov
dec
push
jmp
xchg
test
call
repz
mov
outs
dec
cmp
fcom
fwait
repz
xchg
ret
(bad)
sub
outs
fcomp
xchg
test
jmp
xchg
imul
call
repz
(bad)
mov
outs
dec
fwait
repz
xchg
ret
dec
cmp
retf
xchg
ret
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
mov
dec
push
jmp
xchg
test
fwait
lods
xchg
mov
mov
outs
dec
aas
repz
sti
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
div
pop
mov
fwait
mov
outs
mov
outs
dec
out
jae
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
mov
dec
push
jmp
xchg
imul
mov
fwait
jae
mov
mov
outs
dec
sbb
push
inc
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
pop
mov
dec
push
jmp
xchg
mul
mov
dec
outs
mov
outs
dec
fwait
repz
(bad)
sub
outs
fcomp
xchg
div
mov
dec
push
jmp
xchg
neg
pop
mov
fwait
pusha
xchg
mov
mov
outs
dec
pusha
repz
(bad)
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
push
jmp
xchg
test
xchg
mov
mov
dec
dec
sti
repz
mov
sub
outs
fcomp
xchg
imul
xchg
mov
mov
dec
(bad)
repz
sub
outs
fcomp
xchg
neg
inc
mov
fwait
cmp
mov
dec
in
(bad)
repz
mov
sub
outs
fcomp
xchg
not
call
repz
mov
dec
cmp
iret
cwde
add
add
dec
les
or
dec
dec
(bad)
sub
outs
fcomp
xchg
imul
inc
mov
fwait
push
mov
mov
outs
add
cmp
jmp
outs
add
(bad)
push
aam
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
inc
mov
fwait
cmc
mov
mov
dec
sub
outs
fcomp
xchg
neg
mov
fwait
pop
mov
daa
mov
outs
dec
add
push
dec
cmp
and
ret
(bad)
sub
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
test
call
repz
jmp
pusha
repz
or
dec
sub
outs
fcomp
xchg
imul
in
mov
dec
push
jmp
xchg
test
mov
dec
mov
(bad)
in
(bad)
test
(bad)
mov
lods
and
iret
popf
add
add
dec
cmc
repz
ret
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
xchg
mov
dec
mov
outs
mov
jmp
(bad)
in
(bad)
(bad)
in
div
push
or
(bad)
mov
sub
outs
fcomp
xchg
test
mov
fwait
add
mov
dec
sti
repz
jnp
dec
sub
outs
fcomp
xchg
test
call
repz
mov
outs
in
cmc
repz
fsubr
dec
sub
outs
fcomp
xchg
neg
push
mov
in
mov
fwait
mov
and
dec
sub
outs
fcomp
xchg
idiv
les
mov
jmp
cmp
xor
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
pop
mov
mov
outs
dec
cmc
repz
mov
jmp
cmp
int3
mov
jmp
aas
repz
ret
dec
aas
repz
sub
outs
fcomp
xchg
test
jmp
xchg
imul
call
mov
jmp
daa
repz
push
repz
repz
mov
dec
sub
outs
fcomp
xchg
div
mov
dec
push
jmp
xchg
neg
call
mov
jmp
(bad)
repz
dec
sub
outs
fcomp
xchg
div
cmc
pop
mov
mov
dec
cmp
lods
and
iret
popf
add
add
dec
div
xchg
mov
dec
dec
(bad)
sub
outs
fcomp
xchg
neg
add
mov
jmp
cmc
repz
(bad)
(bad)
in
(bad)
idiv
mov
and
out
popf
mov
int3
outs
cmp
mov
int3
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
mov
fwait
rcl
mov
(bad)
(bad)
in
(bad)
div
mov
and
mul
popf
mov
int3
outs
cmp
mov
int3
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
rcl
mov
dec
std
lods
and
iret
popf
add
add
cmp
dec
dec
(bad)
sub
outs
fcomp
xchg
imul
scas
mov
fwait
fwait
push
mov
mov
dec
cmp
lods
and
iret
popf
add
add
cmp
repz
dec
dec
(bad)
sub
outs
fcomp
xchg
idiv
ds
fwait
not
mov
jmp
sti
rep
ret
outs
(bad)
(bad)
(bad)
push
lahf
ds
outs
add
(bad)
(bad)
push
sbb
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
mov
fwait
pop
sbb
mov
dec
cmp
iret
popf
add
add
in
(bad)
repz
dec
(bad)
sub
outs
fcomp
xchg
mul
ds
fwait
mov
mov
mov
dec
in
sti
repz
pushf
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
rcr
mov
mov
outs
dec
shl
repnz
jmp
outs
dec
fwait
repz
ret
dec
cmp
dec
fcmovb
dec
sub
outs
fcomp
xchg
not
ds
dec
push
jmp
xchg
test
call
repz
mov
dec
cmp
iret
cwde
add
add
dec
sti
lods
dec
shl
data16
dec
dec
cmp
repz
(bad)
sub
outs
fcomp
xchg
test
in
mov
dec
(bad)
repz
(bad)
mov
dec
dec
lea
sbb
sub
outs
fcomp
xchg
neg
or
aas
shl
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
jae
mov
mov
dec
cmp
iret
popa
add
add
dec
les
add
sbb
(bad)
sub
outs
fcomp
xchg
div
jno
call
repz
shl
repz
dec
jmp
outs
in
push
repz
jmp
outs
in
cmp
hlt
inc
jmp
outs
in
cmp
test
jmp
aas
repz
ins
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
mov
dec
push
jmp
xchg
not
mul
mov
mov
outs
dec
add
or
outs
dec
cmp
adc
sub
outs
fcomp
xchg
mul
mov
dec
push
jmp
xchg
not
fnstcw
mov
dec
sub
outs
fcomp
xchg
not
cld
jge
mov
jmp
pop
(bad)
(bad)
push
cmp
jae
(bad)
push
leave
and
sub
outs
fcomp
(bad)
(bad)
in
xchg
idiv
adc
ds
dec
cmp
iret
popf
add
add
dec
(bad)
repz
cmps
ret
outs
dec
(bad)
mov
dec
sub
outs
fcomp
xchg
div
jge
mov
jmp
cmp
dec
dec
(bad)
sub
outs
fcomp
xchg
imul
bound
mov
mov
outs
dec
xchg
repz
jmp
outs
dec
cmp
mov
ret
(bad)
sub
outs
fcomp
xchg
idiv
bound
in
xchg
test
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
not
push
mov
mov
dec
cmp
iret
popf
add
add
cmp
repz
jmp
int3
dec
(bad)
sub
outs
fcomp
xchg
div
call
rep
and
lods
and
iret
popf
add
add
cmp
repz
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
sti
mov
and
repz
ret
(bad)
sub
outs
fcomp
xchg
div
mov
and
repz
arpl
dec
sub
outs
fcomp
xchg
test
call
repz
and
repz
dec
cmp
repz
ret
in
sti
lods
push
(bad)
rep
jmp
dec
cmp
lods
pusha
(bad)
repz
cmps
mov
dec
cmp
lods
pusha
fpatan
lock
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
stos
mov
fwait
idiv
iret
mov
outs
dec
pusha
repz
ret
(bad)
sub
outs
fcomp
xchg
not
mov
fwait
xchg
push
mov
mov
dec
cmp
iret
popa
add
add
dec
sti
xchg
dec
or
add
repz
dec
dec
cmp
repz
shr
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
stos
push
mov
mov
(bad)
in
(bad)
not
int3
dec
(bad)
sub
outs
fcomp
xchg
idiv
mov
fwait
or
mov
jmp
or
jmp
outs
and
ss
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
call
repz
mov
outs
dec
push
mov
ret
dec
fwait
repz
ret
dec
cmp
imul
dec
sub
outs
fcomp
xchg
idiv
mov
cmps
lods
mov
outs
dec
(bad)
dec
ret
(bad)
sub
outs
fcomp
xchg
idiv
pop
dec
mov
mov
outs
cmp
stos
neg
cmp
dec
outs
cmp
stos
test
dec
dec
(bad)
sub
outs
fcomp
xchg
neg
mov
fwait
cs
mov
mov
outs
dec
(bad)
cdq
enter
dec
sti
repz
popf
not
(bad)
(bad)
sub
outs
fcomp
xchg
div
mov
fwait
pop
dec
mov
mov
outs
mov
jmp
outs
sub
mov
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
neg
(bad)
in
xchg
test
call
repz
lods
mov
dec
in
sti
repz
in
sti
lods
push
xor
mov
in
sti
lods
push
or
dec
sti
lods
push
(bad)
repz
aam
dec
sti
lods
push
(bad)
push
aam
dec
sti
xchg
dec
daa
add
add
jecxz
ret
in
sti
xchg
push
pop
add
add
cmp
jmp
dec
cmp
dec
sub
outs
fcomp
xchg
test
mov
fwait
adc
jl
mov
dec
cmp
dec
sub
outs
fcomp
xchg
idiv
cmp
outs
mov
mov
outs
dec
cmp
vcmppd
(bad)
sub
outs
fcomp
xchg
idiv
xor
mov
outs
dec
mov
iret
int
jmp
mov
cld
int
jmp
cmp
call
sti
outs
xor
jns
(bad)
(bad)
(bad)
in
xchg
idiv
cmp
xor
mov
outs
dec
cmc
repz
ret
(bad)
sub
outs
fcomp
xchg
not
mov
fwait
or
mov
mov
outs
in
cmc
repz
aad
jmp
push
repz
(bad)
sub
outs
fcomp
xchg
test
dec
push
mov
xchg
mov
mov
outs
dec
cmp
movs
push
ret
(bad)
sub
outs
fcomp
xchg
div
xchg
mov
mov
dec
cmp
repz
mov
sub
outs
fcomp
xchg
neg
mov
fwait
push
and
dec
sti
repz
mov
sub
outs
fcomp
xchg
imul
and
xchg
mov
outs
in
push
inc
aad
jmp
fwait
repz
jmp
outs
mov
ret
(bad)
sub
outs
fsub
dec
push
shr
xchg
imul
fldenv
xchg
mov
dec
(bad)
sub
outs
fcomp
xchg
test
call
repz
xchg
mov
dec
cmp
repz
pop
ret
in
(bad)
repz
sub
outs
fcomp
xchg
neg
xchg
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
idiv
mov
fidiv
mov
(bad)
inc
call
jmp
int3
outs
cmp
stos
mul
outs
and
(bad)
jmp
dec
dec
(bad)
sub
outs
xor
(bad)
dec
cs
(bad)
(bad)
in
xchg
neg
mov
fwait
or
mov
dec
les
popf
add
add
cmp
repz
(bad)
sub
outs
fcomp
xchg
not
fdiv
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
not
mov
fiadd
mov
mov
outs
in
iret
repz
(bad)
sub
outs
fcomp
xchg
not
fdiv
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
test
push
mov
mov
(bad)
in
(bad)
mul
mov
mov
repz
(bad)
sub
outs
fcomp
xchg
test
call
repz
mov
outs
in
push
repz
or
jmp
cmc
repz
mov
jmp
cmp
neg
ret
add
shl
dec
sub
outs
fcomp
(bad)
(bad)
in
xchg
not
push
jmp
xchg
neg
mov
fwait
rcr
mov
mov
dec
cmp
repz
sub
outs
fcomp
xchg
imul
pop
fsub
mov
dec
cmp
lods
pusha
(bad)
stos
idiv
xchg
dec
dec
in
sti
lods
push
lods
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
adc
ins
jmp
sti
mul
dec
(bad)
sub
outs
fcomp
xchg
div
push
mov
fwait
and
mov
mov
dec
cmp
dec
sti
lods
pusha
(bad)
stos
test
cmp
repz
dec
dec
in
(bad)
repz
inc
jmp
dec
in
lea
inc
jmp
dec
cmp
neg
jmp
int3
dec
cmp
repz
sti
outs
fcomp
xchg
test
mov
fwait
rol
shl
jmp
(bad)
sub
outs
fcomp
xchg
idiv
jae
dec
jmp
xchg
div
pop
xchg
mov
outs
in
xchg
repz
dec
sub
outs
fcomp
xchg
imul
push
jmp
xchg
test
mov
fwait
pop
xchg
mov
outs
in
xchg
repz
jmp
outs
dec
push
repz
ret
in
or
repnz
sti
outs
fcomp
(bad)
(bad)
in
xchg
imul
jae
dec
jmp
xchg
mul
test
mov
dec
cmp
repz
ret
(bad)
sub
outs
fcomp
xchg
div
jae
call
repz
mov
sti
repz
inc
jmp
dec
in
sti
lods
push
xor
or
dec
sti
lods
push
or
dec
sti
lods
push
(bad)
repz
jmp
dec
in
sti
lods
push
(bad)
dec
sti
xchg
dec
daa
add
add
enter
dec
in
sti
xchg
push
pop
add
add
test
jmp
dec
cmp
mov
repz
(bad)
sub
outs
fcomp
xchg
test
cmp
mov
sub
outs
fcomp
xchg
imul
(bad)
mov
mov
dec
cmp
repz
fcmovb
dec
sub
outs
fcomp
xchg
imul
(bad)
mov
outs
cmp
repz
int
dec
sub
outs
fcomp
xchg
test
mov
fwait
cmc
(bad)
mov
dec
(bad)
sub
outs
fcomp
xchg
mul
mov
fwait
xor
cld
mov
outs
dec
popf
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
mov
fwait
daa
stos
mov
mov
dec
cmp
lods
pusha
(bad)
repz
(bad)
sub
outs
fcomp
xchg
div
xor
mov
dec
sti
repz
pop
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
mov
fwait
imul
cld
mov
dec
dec
sti
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
xchg
and
cld
mov
dec
dec
sti
repz
icebp
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
xor
mov
(bad)
(bad)
in
sti
(bad)
in
(bad)
idiv
xor
dec
(bad)
sub
outs
fcomp
xchg
test
mov
fwait
pop
and
cld
mov
dec
(bad)
sub
outs
fcomp
xchg
div
xor
mov
jmp
std
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
test
mov
dec
push
jmp
xchg
idiv
mov
fwait
add
mov
jmp
add
es
sub
outs
fcomp
xchg
test
mov
fwait
out
bound
mov
outs
dec
sti
xrelease
dec
(bad)
sub
outs
fcomp
xchg
not
bound
mov
dec
cmp
iret
cwde
add
add
dec
sti
lods
dec
jb
xor
sti
lods
dec
(bad)
repz
dec
jmp
dec
(bad)
sub
outs
fcomp
xchg
mul
aas
bound
mov
outs
and
fld
ret
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
test
mov
dec
push
jmp
xchg
idiv
xor
mov
mov
outs
and
(bad)
(bad)
push
arpl
sub
outs
xor
(bad)
(bad)
dec
fcos
(bad)
(bad)
in
xchg
idiv
xor
dec
push
mov
outs
mov
fwait
add
mov
jmp
or
push
mov
sub
outs
xor
(bad)
(bad)
dec
out
(bad)
(bad)
(bad)
in
xchg
neg
outs
mov
lods
pusha
(bad)
dec
push
mov
outs
mov
fwait
out
jno
mov
dec
les
popf
add
add
in
div
stos
mov
dec
outs
dec
cmp
add
dec
sub
outs
fcomp
xchg
div
outs
mov
fwait
jae
mov
mov
outs
and
inc
mov
sub
outs
fcomp
(bad)
(bad)
in
xchg
neg
outs
mov
dec
push
jmp
xchg
idiv
mov
fwait
out
mov
mov
dec
cmp
iret
popf
add
add
in
(bad)
repz
(bad)
push
and
dec
sub
outs
fcomp
xchg
not
outs
mov
fwait
cmc
jno
mov
dec
sti
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
div
add
mov
mov
outs
cmp
jmp
std
repz
push
jmp
dec
(bad)
sub
outs
fcomp
xchg
div
dec
mov
fwait
cmp
(bad)
(bad)
(bad)
in
(bad)
not
mov
mov
sti
outs
fcomp
xchg
mul
call
repz
mov
dec
cmp
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
not
xchg
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
test
scas
mov
mov
outs
cmp
repz
mov
outs
dec
div
mov
jmp
dec
(bad)
sub
outs
fcomp
xchg
neg
dec
mov
fwait
daa
scas
mov
mov
outs
cmp
stos
idiv
inc
mov
int3
outs
dec
div
cmc
fldpi
dec
sub
outs
fcomp
xchg
imul
mov
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
mul
jb
mov
mov
outs
cmp
repz
fidiv
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
not
push
call
jmp
(bad)
or
mov
outs
dec
and
jge
jmp
dec
(bad)
sub
outs
fcomp
xchg
mul
mov
fwait
xor
mov
mov
outs
cmp
dec
sub
outs
fcomp
xchg
imul
cld
in
mov
mov
outs
and
inc
ret
(bad)
sub
outs
xor
(bad)
(bad)
dec
stos
(bad)
(bad)
(bad)
in
xchg
test
mov
lods
pusha
(bad)
dec
push
mov
push
mov
fwait
pop
in
mov
mov
outs
cmp
stos
neg
mov
int3
outs
dec
std
repz
mov
dec
sub
outs
fcomp
xchg
imul
scas
inc
mov
mov
dec
cmp
repz
(bad)
sub
outs
fcomp
xchg
test
call
repz
mov
outs
sub
test
push
(bad)
out
jmp
outs
sub
mov
push
lods
out
jmp
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
imul
mov
mov
mov
pop
mov
mov
dec
(bad)
sub
outs
fcomp
xchg
mul
mov
pop
mov
mov
dec
cmp
iret
cwde
add
add
dec
sti
lods
dec
(bad)
repz
pop
mov
int3
dec
dec
sti
lods
dec
sti
repz
mov
dec
dec
sti
lods
dec
popf
pause
in
jmp
dec
(bad)
sub
outs
fcomp
xchg
imul
mov
pop
mov
mov
outs
cmp
stos
div
cmp
sub
outs
fcomp
xchg
neg
mov
fwait
mov
mov
mov
outs
cmp
stos
neg
cmp
sub
outs
fcomp
xchg
test
call
repz
jmp
fisubr
dec
outs
dec
std
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
idiv
cs
fwait
sbb
mov
jmp
popf
repz
mov
dec
sub
outs
fcomp
xchg
not
cs
fwait
lea
mov
dec
lea
cwde
add
add
dec
sti
lods
dec
stos
repz
mov
int3
dec
dec
sti
lods
dec
sti
repz
cmp
repz
dec
sub
outs
fcomp
xchg
mul
out
stc
mov
mov
outs
and
(bad)
(bad)
push
cli
jno
dec
lea
popf
add
add
cmp
dec
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
mov
fwait
jae
mov
mov
outs
and
(bad)
push
jg
jmp
dec
cmp
iret
popf
add
add
cmp
dec
dec
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
not
aas
stc
mov
mov
outs
dec
popf
repz
sub
outs
fcomp
xchg
mul
mov
fwait
cmc
stc
mov
mov
(bad)
in
(bad)
(bad)
in
(bad)
test
(bad)
mov
sub
outs
fcomp
xchg
mul
jge
call
repz
in
mov
dec
(bad)
sub
outs
fcomp
xchg
idiv
jge
call
repz
mov
outs
dec
(bad)
repz
cmp
sub
outs
fcomp
xchg
idiv
shr
in
mov
outs
cmp
stos
div
dec
(bad)
sub
outs
fcomp
xchg
idiv
jge
call
repz
in
mov
dec
(bad)
sub
outs
fcomp
xchg
mul
jge
call
repz
mov
outs
cmp
jmp
pop
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
mul
mov
fwait
and
mov
mov
dec
cmp
iret
cwde
add
add
dec
sti
lods
dec
(bad)
repz
sti
lods
dec
sti
repz
mov
lods
dec
popf
repz
(bad)
repz
mov
dec
(bad)
sub
outs
fcomp
xchg
div
mov
fwait
or
pop
call
(bad)
push
stos
and
dec
les
popf
add
add
dec
sti
repz
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
not
(bad)
cld
mov
mov
(bad)
in
(bad)
test
mov
mov
repz
call
sti
repz
(bad)
sub
outs
fcomp
xchg
imul
mov
fwait
adc
add
rol
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
dec
and
test
jmp
push
jmp
outs
outs
outs
(bad)
(bad)
push
data16
ret
outs
lods
(bad)
(bad)
push
sub
ret
outs
sar
(bad)
push
ror
ret
dec
or
jmp
dec
push
pop
int3
ret
dec
fwait
repz
dec
cmp
mov
outs
xor
(bad)
push
push
int3
ret
outs
out
(bad)
push
cmp
jmp
stos
test
push
outs
push
jmp
outs
add
push
adc
inc
popf
(bad)
(bad)
push
pop
sbb
outs
stos
test
push
loop
jmp
outs
outs
daa
test
push
cwde
push
jmp
outs
outs
mov
(bad)
push
hlt
push
jmp
outs
outs
push
mov
push
pop
push
jmp
outs
outs
sti
test
push
stos
push
jmp
outs
outs
out
(bad)
push
cmp
jmp
stos
test
push
push
jmp
outs
add
push
dec
push
jmp
outs
and
mov
push
ret
(bad)
inc
popf
(bad)
(bad)
push
adc
mov
mov
test
push
push
cmc
jmp
outs
outs
daa
test
push
leave
cmc
jmp
outs
outs
mov
(bad)
push
jl
jmp
outs
outs
push
mov
push
xor
jmp
outs
outs
out
(bad)
push
and
jmp
inc
popf
(bad)
(bad)
push
ds
mov
mov
test
push
sub
jmp
add
jmp
outs
and
add
jmp
outs
add
jecxz
jmp
outs
and
adc
jmp
outs
and
(bad)
jmp
dec
outs
and
test
jmp
dec
outs
and
mov
jmp
dec
outs
and
test
push
cs
jmp
inc
popf
(bad)
(bad)
push
jmp
mov
mov
test
push
pmaddwd
jmp
mov
popf
cmc
jmp
outs
outs
lea
cmc
jmp
inc
popf
(bad)
(bad)
push
call
int3
outs
add
(bad)
push
or
mov
(bad)
push
in
cmc
jmp
outs
and
test
push
pop
cmc
jmp
outs
and
test
push
ins
cmc
jmp
inc
popf
(bad)
(bad)
push
sbb
(bad)
sub
outs
fcomp
(bad)
(bad)
in
xchg
mul
mov
dec
push
jmp
xchg
test
shl
(bad)
(bad)
in
div
dec
pop
mov
mov
repz
jmp
dec
(bad)
sub
outs
fcomp
xchg
not
pop
mov
fcmovb
mov
mov
(bad)
in
(bad)
test
(bad)
mov
repz
sbb
dec
sub
outs
fcomp
xchg
neg
lods
jmp
bound
repz
dec
ret
dec
sti
repz
pop
mov
dec
dec
sti
lods
dec
pop
repz
dec
sub
outs
fcomp
xchg
mul
mov
mov
mov
outs
and
(bad)
(bad)
push
mov
add
(bad)
(bad)
push
push
jne
jmp
mov
and
outs
add
test
push
xor
mov
outs
and
(bad)
jmp
dec
outs
and
(bad)
jmp
dec
outs
outs
add
jmp
cs
push
scas
xor
outs
fcomp
(bad)
(bad)
in
xchg
not
mov
dec
push
mov
jne
call
repz
bound
repz
(bad)
sub
outs
fcomp
xchg
test
call
repz
mov
outs
cmp
repz
add
outs
mov
ret
(bad)
sub
outs
fmul
dec
push
adc
jne
call
repz
and
les
jae
cmp
mov
add
stos
lods
les
dec
xchg
jl
mov
stos
outs
cmp
stos
outs
xor
add
add
sub
stos
neg
lea
fwait
out
(bad)
mov
outs
cmp
popf
pop
sbb
jb
scas
not
push
ret
aas
mov
mov
outs
cmp
popf
pop
sub
jecxz
stos
dec
push
xchg
scas
test
ret
push
mov
mov
outs
cmp
popf
pop
div
jecxz
stos
dec
push
xchg
scas
imul
push
ret
lea
xchg
icebp
jecxz
dec
fwait
add
pop
ret
stos
fwait
and
pop
ret
lea
xchg
sub
pop
xor
jecxz
stos
dec
push
xchg
scas
test
inc
jecxz
dec
fwait
add
(bad)
mov
dec
fwait
scas
clc
(bad)
mov
outs
cmp
popf
pop
mul
mov
jb
scas
mul
clc
(bad)
mov
outs
cmp
popf
pop
int
jecxz
stos
dec
push
xchg
scas
div
ret
fdivrp
(bad)
mov
outs
cmp
popf
pop
mov
dec
push
xchg
scas
mul
ret
stos
clc
(bad)
mov
mov
outs
cmp
popf
stos
dec
push
xchg
scas
imul
xlat
ret
push
clc
(bad)
mov
outs
cmp
popf
pop
daa
mov
mov
jb
scas
idiv
sbb
fwait
call
ret
lea
xchg
sub
pop
cdq
jmp
jb
scas
test
(bad)
mov
outs
cmp
popf
pop
cld
nop
jecxz
stos
dec
push
xchg
scas
neg
xlat
ret
and
jecxz
dec
fwait
adc
cmp
fwait
cmp
mov
outs
cmp
popf
pop
and
xchg
scas
not
cmp
scas
stos
dec
idiv
mov
jmp
sub
dec
not
test
addr16
outs
call
(bad)
call
xchg
mov
aaa
(bad)
sub
push
mov
mov
outs
xchg
add
add
sbb
movs
neg
inc
and
movs
ins
stos
inc
mov
mov
push
mov
mov
(bad)
mov
mov
push
mov
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
mov
push
mov
mov
(bad)
mov
mov
push
mov
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
add
fadd
inc
xor
inc
mov
add
fadd
inc
xor
inc
mov
mov
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
(bad)
mov
and
(bad)
mov
test
jns
(bad)
mov
test
pusha
mov
ret
sar
jne
(bad)
mov
mov
ret
div
inc
mov
mov
inc
mov
mov
mov
mov
jne
(bad)
mov
mov
push
mov
jne
(bad)
mov
(bad)
mov
(bad)
mov
mov
push
jne
mov
(bad)
mov
(bad)
mov
(bad)
mov
inc
mov
(bad)
jge
dec
fadd
fmul
and
mov
jmp
int3
dec
loope
inc
mov
jmp
int3
dec
loope
inc
mov
jmp
int3
dec
fadd
fmul
(bad)
loope
mov
jmp
int3
dec
fadd
fmul
popf
xor
fwait
ret
int3
dec
loope
inc
mov
jmp
int3
dec
loope
inc
mov
jmp
int3
dec
fadd
fmul
pop
xor
fwait
ret
int3
dec
fadd
fmul
cmp
fwait
ret
int3
dec
fadd
fmul
cs
fwait
ret
int3
dec
fadd
fmul
cld
xor
fwait
ret
int3
dec
fadd
fmul
out
mov
ret
int3
dec
fadd
fmul
push
xor
fwait
ret
int3
dec
fadd
fmul
cmc
xor
fwait
ret
int3
dec
fadd
fmul
les
fwait
ret
int3
dec
fadd
fmul
sti
pusha
mov
ret
int3
dec
fadd
fmul
sub
mov
jmp
int3
dec
fadd
fmul
fisub
mov
jmp
int3
fwait
cmp
inc
cwde
mov
jl
inc
mov
dec
xchg
lods
pusha
sti
lods
out
dec
mov
sti
int3
fadd
fmul
cs
mov
ret
dec
fadd
fmul
fimul
mov
jmp
int3
dec
fadd
fmul
(bad)
mov
jmp
int3
dec
fadd
fmul
add
mov
jmp
int3
fadd
fmul
or
mov
dec
dec
fadd
fmul
or
mov
jmp
int3
repz
push
mov
pop
pusha
sub
mov
call
sub
mov
call
pop
mov
call
pop
mov
push
mov
mov
(bad)
mov
mov
jmp
daa
mov
add
daa
mov
add
daa
mov
add
add
add
daa
mov
add
add
jns
add
mov
add
mov
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
shl
add
mov
add
mov
add
shl
add
mov
add
shl
add
shl
add
shl
add
mov
add
lock
add
mov
add
(bad)
mov
add
mov
add
sub
add
clc
mov
add
mov
add
clc
mov
add
mov
add
add
clc
mov
add
mov
add
mov
add
and
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
mov
add
and
add
mov
add
iret
mov
add
iret
mov
add
sub
add
and
add
and
add
and
add
and
add
and
add
mov
add
(bad)
mov
add
mov
add
add
add
add
or
add
or
add
add
add
push
outs
mov
add
add
or
add
push
daa
mov
add
add
add
dec
mov
add
shl
add
shl
add
xchg
add
shl
add
xchg
add
mov
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
(bad)
mov
add
jns
add
mov
add
dec
mov
add
dec
mov
add
add
dec
mov
add
add
add
mov
add
outs
mov
add
mov
add
mov
add
(bad)
mov
and
(bad)
mov
jp
(bad)
mov
cmovge
mov
pop
dec
(bad)
mov
jbe
(bad)
mov
ja
(bad)
mov
das
dec
(bad)
mov
jmp
(bad)
mov
fist
(bad)
mov
ret
xchg
(bad)
mov
dec
xchg
(bad)
mov
stos
xchg
(bad)
mov
mov
xchg
(bad)
mov
and
mov
push
jp
out
retf
jp
jg
jp
push
mov
xor
retf
jp
test
push
hlt
cdq
mov
pusha
cli
fidiv
mov
ror
cmp
sub
mov
xchg
push
hlt
(bad)
pop
add
adc
(bad)
pop
popa
mov
ror
cmp
sub
mov
sbb
xor
add
add
popa
mov
ror
cmp
sub
pop
and
xchg
scas
sbb
ror
cmp
sub
mov
jp
sbb
add
add
add
pop
push
cmp
div
hlt
aas
cld
add
adc
fstp
div
hlt
aas
cld
add
adc
fldenv
mov
xor
hlt
cdq
stc
add
fidiv
mov
mov
in
xchg
fs
mov
rcr
(bad)
test
fnstenv
mov
or
hlt
and
add
xchg
mov
sar
mov
ins
pop
mov
push
xchg
push
hlt
(bad)
pop
add
adc
fnop
sahf
mov
hlt
mov
add
mov
xchg
push
hlt
(bad)
pop
add
adc
fxtract
mov
cmc
hlt
xchg
ins
sub
sub
sub
hlt
cdq
jno
pusha
cli
fidiv
push
dec
adc
stc
add
fidiv
in
adc
hlt
add
add
loopne
fisttp
ins
int
(bad)
test
fldcw
xlat
rcr
(bad)
test
fst
add
hlt
and
add
add
cdq
rol
pusha
cli
fidiv
outs
(bad)
iret
mov
lds
add
shr
cmp
lods
jne
and
shl
hlt
jl
add
loopne
fisttp
ins
int
(bad)
test
fldenv
add
add
add
pusha
add
add
add
inc
mov
(bad)
cmc
hlt
xchg
xchg
pusha
cli
sbb
(bad)
mov
popa
adc
(bad)
mov
repz
mov
and
repz
mov
mov
add
stos
mov
fnstcw
push
stos
inc
mov
scas
call
and
and
(bad)
jmp
mov
std
inc
(bad)
mov
inc
add
add
mov
or
outs
xor
xchg
jno
scas
call
add
add
add
push
xor
jg
repnz
test
sti
sti
sti
sti
sti
sti
mov
mov
mov
add
mov
or
outs
xor
xchg
jno
scas
call
add
add
add
loop
push
xor
adc
popa
hlt
hlt
hlt
lods
lods
lods
cwde
cwde
cwde
cwde
sub
sub
jg
jg
sub
out
jnp
mov
popa
adc
xchg
xor
xor
push
and
cmp
mov
popa
adc
(bad)
mov
add
lea
add
add
add
add
add
add
mov
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
jmp
lea
add
add
add
add
add
add
mov
add
mov
add
dec
scas
(bad)
dec
add
add
add
add
mov
add
add
add
jb
jge
push
dec
cmp
jb
jge
js
cmp
push
inc
add
jb
jge
cli
or
(bad)
loop
mov
inc
(bad)
mov
add
jb
jge
cli
jb
loop
cmp
add
jge
jb
add
out
jae
mov
in
jp
sub
mov
in
jp
xchg
jae
mov
bound
dec
mov
lea
cmp
mov
lea
cld
push
jp
mov
mov
mov
mov
sbb
popf
jg
cwde
lods
hlt
popa
pop
scas
adc
xor
mov
push
imul
sub
cmps
jo
xor
ins
dec
out
mov
or
pop
ret
inc
fsubp
fadd
cmp
rcl
push
sub
or
stos
and
cmp
js
xchg
mov
jne
push
sbb
jge
mov
and
fld
scas
call
into
cld
mov
ins
xor
jge
add
push
add
add
add
pop
push
add
fld
fld
fld
fld
fld
fld
fld
fld
fld
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
lods
add
lods
add
iret
add
add
add
add
add
add
add
add
add
add
lods
add
xchg
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lods
add
lods
add
xor
xor
xor
xor
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
lods
add
fld
add
fld
fld
fld
fld
fld
fld
fld
fld
fld
jae
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
lods
add
lods
add
iret
add
add
add
add
add
add
add
add
add
add
lods
add
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lods
add
lods
add
xor
dec
xor
dec
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
lods
add
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
fld
rol
lods
add
lods
add
lods
add
lods
add
lods
add
add
lods
add
add
lods
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lods
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
lods
add
jp
jp
jp
jp
jp
jp
jp
dec
dec
add
add
or
lock
xchg
daa
outs
(bad)
and
xor
leave
aas
jl
xor
imul
push
cdq
(bad)
je
adc
mov
add
fwait
pop
mov
sub
xor
sub
xchg
imul
add
adc
sbb
push
int
cmp
mov
mov
xlat
push
nop
std
icebp
pushf
mov
les
jle
inc
test
jnp
rcr
jmp
test
add
jecxz
mov
sbb
popf
jg
cwde
lods
hlt
popa
pop
scas
adc
xor
mov
push
imul
sub
cmps
jo
xor
ins
dec
out
mov
or
pop
ret
inc
fidivr
and
fld
scas
call
pop
push
sbb
jge
mov
and
fld
scas
call
into
cld
mov
xor
rol
(bad)
and
xor
leave
aas
jl
xor
imul
push
cdq
(bad)
je
adc
mov
add
fwait
pop
mov
sub
xor
sub
xchg
imul
add
adc
sbb
push
int
cmp
mov
mov
xlat
push
nop
std
icebp
pushf
mov
les
jle
inc
test
jnp
rcr
jmp
test
or
lock
xchg
daa
outs
(bad)
and
xor
leave
aas
jl
xor
imul
push
cdq
(bad)
je
adc
mov
add
fwait
pop
mov
sub
xor
sub
xchg
imul
add
adc
sbb
push
int
cmp
mov
mov
xlat
push
nop
std
icebp
pushf
mov
les
jle
inc
test
jnp
rcr
jmp
test
add
jecxz
mov
sbb
popf
jg
cwde
lods
hlt
popa
pop
scas
adc
xor
mov
push
imul
sub
cmps
jo
xor
ins
dec
out
mov
or
pop
ret
inc
fsubp
fadd
cmp
rcl
push
sub
or
stos
and
cmp
js
xchg
mov
jne
push
sbb
jge
loop
inc
cmp
inc
mov
push
push
sub
or
stos
and
cmp
js
xchg
mov
jne
cld
mov
xor
rol
(bad)
and
xor
leave
aas
jl
xor
imul
push
cdq
(bad)
je
adc
mov
add
fwait
pop
mov
sub
xor
sub
xchg
imul
add
adc
sbb
push
int
cmp
mov
mov
xlat
push
nop
std
icebp
pushf
mov
les
jle
inc
test
jnp
rcr
jmp
test
rol
dec
mov
add
dec
mov
xor
xor
push
and
mov
dec
mov
fsubr
mov
xchg
pop
mov
outs
xor
xor
add
add
add
add
add
add
add
in
add
add
jb
add
add
cmp
dec
and
push
stos
call
cmp
xor
inc
cmp
dec
mov
inc
cmp
dec
mov
inc
cmp
and
add
cmp
call
scas
add
fild
scas
add
and
add
add
add
add
add
add
add
add
add
jmp
add
fld
add
add
add
or
add
or
add
pusha
jmp
add
add
add
add
out
test
push
inc
fdivr
outs
mov
stos
imul
stos
imul
scas
push
stos
add
and
add
cmp
add
push
cmp
mov
add
add
pop
bound
add
scas
add
add
mov
add
add
and
add
xor
add
pop
add
in
stos
call
ds
jg
add
(bad)
jb
cmp
fnstenv
ds
add
cmp
or
and
add
add
cli
dec
loop
or
xor
ds
add
inc
out
in
(bad)
jg
loop
fnstcw
dec
mov
fnstenv
scas
(bad)
mov
stos
fnstcw
bound
cmp
call
in
stos
call
push
ds
stos
dec
and
call
xor
and
call
bound
push
dec
mov
sub
fldcw
ds
and
xor
push
stos
and
and
add
add
add
cmovbe
in
in
jg
retf
(bad)
call
call
dec
cmp
jb
dec
and
ds
push
scas
fnstcw
push
cmp
ds
stos
mov
push
inc
xor
dec
and
stos
push
call
call
push
scas
fld
stos
outs
push
dec
mov
mov
fld
stos
fyl2xp1
and
bound
push
dec
mov
ins
fst
call
scas
call
stc
fstp
xor
and
cmp
fnstcw
push
jb
dec
and
xor
pop
dec
dec
cmp
in
stos
dec
call
and
stos
mov
(bad)
stos
scas
call
fldenv
and
cmp
ins
jg
add
cmovbe
in
mov
sbb
fldcw
stos
and
scas
bound
and
dec
mov
stos
and
and
add
add
add
inc
out
in
mov
retf
(bad)
call
call
push
mov
fstp
shufps
and
jae
stos
fldenv
sbb
jae
scas
fld
stos
outs
push
dec
mov
mov
fld
stos
fyl2xp1
and
bound
push
dec
mov
ins
jg
add
cmovbe
in
out
jg
retf
fld
(bad)
fldcw
stos
push
call
outs
jg
add
cmovbe
mov
jg
retf
fldln2
stos
mov
call
push
mov
fnstenv
mov
add
add
inc
out
mov
jg
retf
fldcw
stos
and
scas
bound
and
pop
push
and
call
call
add
add
inc
out
mov
jg
retf
fldcw
stos
and
scas
bound
and
outs
push
and
call
call
add
add
inc
out
mov
jg
retf
fldenv
ds
inc
push
ds
stos
dec
call
cmp
add
cmovbe
mov
jg
retf
fldcw
stos
and
scas
bound
and
stos
xor
call
call
jg
add
add
cmovbe
mov
jg
retf
fldln2
stos
mov
call
(bad)
stos
scas
and
xor
dec
xor
add
add
cmovbe
mov
in
stos
xor
xor
xor
jae
mov
ds
add
add
inc
out
mov
jg
retf
fldln2
stos
xor
xor
xor
fucomi
cmp
xor
dec
xchg
xor
ds
add
add
inc
out
mov
sbb
fldcw
stos
and
scas
bound
and
xor
call
(bad)
jae
scas
fnstcw
dec
mov
fnstenv
scas
fnstcw
xor
xor
call
call
fstp
stos
mov
call
fldln2
stos
in
scas
in
mov
stc
ins
sbb
xor
dec
and
call
bound
push
dec
mov
sub
fldcw
ds
and
xor
push
stos
and
and
add
add
inc
out
out
aad
sbb
fldcw
stos
and
scas
bound
and
inc
push
ds
call
out
or
stos
and
and
scas
bound
and
mov
call
cmovbe
out
mov
sbb
fld
push
stos
mov
stos
call
ds
and
jg
add
add
dec
push
dec
ds
(bad)
scas
in
mov
or
paddsw
fnstenv
push
ds
add
sbb
add
ins
ins
ins
add
ds
(bad)
fldln2
stos
xchg
add
paddsw
fnstcw
ds
stos
ds
aam
add
add
add
add
add
add
add
cmp
add
add
add
add
add
jp
(bad)
cmp
cmp
inc
out
add
pop
(bad)
add
out
out
xchg
stos
mov
sti
add
add
sti
cs
cs
pop
bound
pop
pop
sti
mov
add
sti
sti
add
sti
add
add
dec
add
scas
add
add
mov
add
add
add
add
retf
add
cmp
add
add
js
or
push
add
cli
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
sti
add
add
add
add
add
add
add
add
add
pusha
sti
add
add
add
add
add
pusha
sti
add
add
add
add
add
pusha
sti
add
add
add
add
rcl
fcmovnu
aam
scas
add
add
outs
outs
outs
outs
xor
dec
dec
dec
dec
fldcw
xor
stc
stc
stc
stc
add
dec
outs
outs
dec
stc
stc
add
add
stos
dec
add
loop
add
cmp
dec
xor
push
xor
add
add
or
xor
add
add
cli
dec
call
xor
xor
push
xor
add
add
in
mov
add
cmp
add
stos
xor
add
add
bound
push
cmp
mov
add
inc
xor
in
mov
add
push
mov
stc
add
xor
or
call
in
mov
add
stos
add
stc
add
bound
add
add
push
add
stos
add
call
add
add
push
outs
mov
jae
ds
outs
mov
add
scas
outs
mov
(bad)
in
xor
dec
and
add
cmp
stos
outs
mov
mov
push
add
jae
add
in
xor
dec
and
stos
add
stos
push
call
call
stos
push
call
mov
add
outs
mov
call
add
scas
and
xchg
scas
and
mov
mov
scas
and
xchg
scas
and
mov
mov
scas
cmp
add
(bad)
in
xor
call
add
retf
dec
jae
stos
mov
bound
(bad)
push
stos
mov
stos
test
add
xor
add
stos
mov
mov
and
outs
add
fst
push
call
xor
outs
add
xor
add
add
push
stos
mov
ds
call
xor
push
dec
mov
add
scas
add
in
xchg
add
add
add
scas
jae
add
cmp
scas
bound
retf
inc
xor
cmp
scas
bound
retf
in
ds
mov
scas
bound
retf
(bad)
in
xor
call
add
scas
jae
bound
ds
add
add
scas
bound
retf
bound
mov
add
scas
jae
bound
add
scas
bound
retf
stos
push
dec
mov
mov
bound
retf
(bad)
add
scas
bound
retf
(bad)
pop
push
dec
mov
mov
retf
jae
stos
outs
in
ds
add
scas
jae
mov
fstp
add
scas
jae
xor
inc
mov
scas
bound
retf
xor
mov
scas
bound
retf
outs
and
dec
mov
(bad)
in
push
cmp
scas
bound
retf
dec
and
ds
dec
mov
mov
retf
dec
and
push
mov
scas
bound
retf
dec
jae
cmp
scas
bound
retf
push
and
mov
stos
push
scas
jae
mov
call
bound
in
xor
mov
mov
add
mov
stos
stc
stos
and
add
stos
and
push
mov
xchg
mov
add
mov
add
push
call
scas
pop
push
scas
scas
add
add
ds
scas
jae
xor
jae
add
mov
stos
retf
scas
pop
push
scas
scas
add
add
mov
stos
retf
cmp
push
and
add
mov
stos
retf
cmp
xor
stos
add
stos
retf
mov
push
mov
xor
pop
push
scas
scas
add
add
cmp
stos
dec
jae
cmp
push
and
add
cmp
stos
dec
jae
dec
mov
mov
xor
xor
add
xor
jae
in
scas
mov
cmp
in
scas
add
xor
jae
in
xchg
add
stos
mov
retf
call
outs
fyl2xp1
fstp
and
stos
mov
retf
scas
and
mov
mov
xor
jae
stos
test
add
stos
mov
retf
fdivr
mov
cmp
push
xor
xor
jae
dec
mov
xor
xor
jae
dec
mov
mov
retf
push
xor
add
stos
mov
retf
mov
stos
mov
retf
mov
dec
mov
add
call
mov
add
dec
jae
stos
xor
mov
and
dec
jae
stos
xor
stos
mov
xor
add
dec
jae
stos
xor
(bad)
push
add
outs
add
dec
jae
stos
xor
stos
mov
add
add
dec
jae
stos
xor
push
add
jae
dec
mov
mov
add
cmp
add
mov
add
mov
dec
mov
mov
add
add
mov
dec
mov
mov
add
add
mov
dec
mov
add
add
add
or
push
jmp
js
aas
jmp
js
mov
or
add
jmp
fadd
or
(bad)
mov
cld
jmp
rol
pop
jmp
push
add
(bad)
mov
push
jmp
rol
shr
(bad)
mov
(bad)
jmp
push
add
jmp
mov
jmp
fadd
jmp
(bad)
mov
(bad)
rol
cmp
loop
and
(bad)
mov
cmp
(bad)
mov
pusha
rol
cmp
fadd
push
rol
cmp
push
add
mov
out
(bad)
mov
or
(bad)
mov
outs
rol
cmp
mov
rol
cmp
mov
jb
(bad)
mov
faddp
(bad)
mov
out
rol
inc
paddusb
fld
(bad)
mov
popf
rol
inc
(bad)
add
mov
cmp
les
add
mov
inc
add
cmp
push
mov
cmp
fs
push
add
(bad)
cmp
sar
add
cli
verw
mov
or
sar
add
mov
cmp
sub
add
cmp
add
mov
cli
add
cld
(bad)
mov
cmc
cld
(bad)
mov
pusha
cld
(bad)
mov
push
cld
(bad)
mov
out
(bad)
mov
iret
cld
(bad)
mov
call
add
(bad)
mov
stos
cld
(bad)
mov
fdivrp
(bad)
mov
xor
(bad)
mov
xor
(bad)
mov
sti
cld
(bad)
mov
mov
cmp
add
into
(bad)
mov
cmp
(bad)
mov
add
(bad)
mov
xchg
into
(bad)
mov
or
mov
pusha
into
(bad)
mov
fwait
into
(bad)
mov
adc
fmul
add
(bad)
mov
aas
into
(bad)
mov
out
(bad)
mov
ror
(bad)
mov
or
(bad)
mov
call
add
(bad)
mov
outs
into
(bad)
mov
mov
(bad)
mov
jb
(bad)
mov
fmulp
(bad)
mov
or
dec
sub
pop
into
(bad)
mov
xor
(bad)
mov
popf
into
(bad)
mov
add
(bad)
mov
les
cli
add
fmul
add
fmul
add
test
mov
or
mov
popf
popf
fistp
popf
sti
retf
(bad)
jecxz
popf
lods
lods
sti
ins
sti
cli
inc
stos
add
inc
stos
add
and
push
mov
stos
and
add
xor
out
out
add
add
add
pusha
ror
add
add
(bad)
push
ds
and
call
scas
xor
sub
(bad)
cmp
mov
add
add
inc
and
call
dec
call
and
add
inc
cmp
rol
xor
mov
fnstcw
xor
call
add
fdivr
cmp
loop
ds
(bad)
mov
cmp
cmp
scas
dec
ds
bound
call
bound
fnstcw
xor
call
cs
fldcw
dec
fstp
outs
fldenv
sub
fstp
outs
fld
dec
call
stc
(bad)
stos
scas
call
fld
call
sub
add
inc
xor
and
mov
and
and
in
dec
call
ds
add
add
cs
xor
and
(bad)
stc
(bad)
stos
scas
call
fld
call
sub
add
outs
stc
stos
mov
mov
call
in
dec
call
fldcw
add
add
outs
stc
stos
mov
push
stos
push
call
fld
add
xor
inc
xor
and
mov
and
and
in
dec
call
ds
add
xor
inc
xor
and
(bad)
stc
(bad)
stos
scas
call
fld
call
sub
add
fstp
outs
fld
dec
call
call
fld
call
sub
add
add
fstp
outs
fld
dec
call
scas
call
fld
call
sub
add
bound
xor
cmp
sbb
dec
cmp
xor
add
add
bound
xor
cmp
dec
cmp
xor
add
and
dec
mov
mov
outs
xor
sbb
add
fldcw
add
cs
fld
call
and
in
dec
call
scas
in
xor
cs
fld
call
cs
add
add
cmp
add
in
outs
call
stos
push
stos
mov
and
and
in
dec
call
scas
in
xor
add
xor
inc
xor
and
mov
and
in
dec
call
ds
add
xor
inc
xor
and
scas
call
fld
call
sub
xor
inc
xor
and
stos
scas
call
fld
call
sub
add
add
inc
push
ds
scas
bound
xor
bound
add
inc
xor
and
mov
and
in
dec
call
ds
add
inc
xor
and
scas
call
fld
call
sub
add
add
inc
xor
and
stos
scas
call
fld
call
sub
add
cs
dec
mov
outs
xor
mov
call
sub
add
add
outs
xor
(bad)
stos
scas
call
(bad)
and
sub
add
cs
xor
and
cmp
mov
call
sub
add
add
inc
push
mov
xor
call
scas
call
add
add
cmp
fldcw
dec
fldenv
sub
add
add
call
add
add
cs
dec
mov
cs
push
call
add
cs
sbb
add
add
pop
add
cld
pop
add
pop
pop
add
mov
pop
add
add
dec
pop
add
retf
pop
add
or
add
jo
add
cld
cld
add
pop
pop
add
cld
add
add
add
add
add
add
add
pop
add
ret
add
add
add
add
add
dec
add
add
ret
jo
or
add
or
add
retf
ret
add
and
call
pop
sbb
add
add
pop
pop
add
push
add
add
ret
add
fldcw
cmp
fldcw
add
jge
in
stos
mov
xor
jge
xor
call
ds
inc
jge
dec
cmp
cmp
jge
mov
cmp
jge
jae
scas
dec
mov
jge
scas
call
add
jge
bound
add
add
jge
dec
outs
xor
add
push
mov
or
(bad)
mov
cmp
rol
mov
rcl
(bad)
mov
(bad)
rol
mov
xor
(bad)
mov
call
mov
sub
(bad)
mov
popf
rol
mov
sti
rol
mov
add
(bad)
mov
mov
rol
mov
std
rol
mov
and
(bad)
mov
cmc
pop
(bad)
mov
(bad)
sahf
(bad)
mov
cmp
(bad)
mov
add
(bad)
mov
adc
mov
fxch
(bad)
mov
fwait
rol
mov
adc
rol
mov
fs
mov
push
(bad)
mov
mov
rol
mov
rcl
(bad)
mov
or
(bad)
mov
jae
(bad)
mov
(bad)
rol
mov
out
rol
mov
jmp
(bad)
mov
sbb
(bad)
mov
cld
lock
mov
mov
(bad)
mov
mov
and
mov
fs
mov
out
(bad)
mov
outs
and
mov
stos
and
mov
sub
(bad)
mov
mov
iret
(bad)
mov
cs
(bad)
mov
fxch
(bad)
mov
cmc
lods
(bad)
mov
shr
(bad)
mov
call
add
and
add
stos
add
mov
jge
out
add
add
add
add
add
stc
bound
dec
mov
add
add
add
add
add
add
add
add
add
add
add
scas
jae
add
add
add
add
and
xchg
push
stos
outs
and
call
call
fdiv
dec
call
mov
loop
add
mov
call
call
in
bound
add
call
outs
and
scas
scas
mov
pop
loop
js
cmp
in
mov
cmp
add
or
lock
jecxz
or
xor
scas
mov
and
and
or
add
stos
xchg
or
mov
stos
stos
rol
add
fstp
or
add
add
jae
jae
jae
sti
mov
bound
sti
add
sti
add
add
cmp
stos
dec
and
xchg
xor
jae
inc
ds
cmp
call
inc
xor
mov
dec
mov
push
in
cmp
xor
dec
call
add
add
mov
loop
add
mov
inc
add
add
add
mov
loop
add
inc
cli
or
js
sub
mov
jp
push
stos
call
cmp
mov
add
call
rdpmc
jno
xor
add
push
stos
call
bound
stos
xchg
add
add
stos
call
xor
and
push
stos
call
and
call
call
rdpmc
jno
xor
add
rcr
xor
stc
push
stos
and
call
xor
xor
add
add
(bad)
mov
add
add
xor
and
xchg
add
inc
xor
xor
add
xor
fild
stos
mov
xor
push
call
mov
fdiv
dec
call
and
call
fdiv
dec
call
jb
scas
call
add
add
pop
push
call
add
dec
and
cmp
add
stos
outs
and
mov
xor
and
mov
xor
mov
outs
xchg
push
stos
outs
and
call
and
call
xor
push
mov
xor
xchg
add
add
(bad)
ds
call
mov
add
push
scas
bound
xor
xchg
add
add
stos
and
scas
scas
mov
add
add
stos
outs
dec
xor
xchg
add
add
rdpmc
mov
ds
cmp
pop
xchg
add
add
loop
fsubr
scas
call
rdpmc
dec
call
mov
push
stos
outs
and
add
xor
dec
in
call
ds
bound
push
xor
stos
call
add
inc
ds
bound
mov
stos
call
stc
bound
call
inc
ds
bound
cmp
add
stc
bound
ds
jae
add
add
stc
bound
mov
add
cli
cmp
inc
and
stos
xor
push
fdiv
dec
call
call
inc
and
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
cmp
mov
fld
outs
add
cmp
pop
cli
jb
push
dec
cmp
fdivr
or
loop
(bad)
push
dec
loop
cmp
cmp
in
xor
stc
push
stos
call
pop
push
xchg
xor
ds
cmps
fld
outs
add
mov
cmc
jecxz
adc
jecxz
lods
cmc
jecxz
scas
sbb
mov
or
jecxz
push
sbb
mov
mov
jecxz
lds
jecxz
or
add
call
cmc
jecxz
mov
cmc
jecxz
sub
jecxz
imul
mov
add
jecxz
push
sbb
mov
dec
sbb
mov
into
sbb
mov
sbb
mov
ficomp
add
xor
jecxz
sub
jecxz
xor
jecxz
scas
sbb
mov
(bad)
sbb
mov
mov
jecxz
(bad)
call
jecxz
mov
call
jecxz
aaa
call
add
add
add
pusha
add
add
add
inc
out
add
add
add
pusha
add
add
add
inc
pusha
add
add
add
inc
mov
adc
hlt
jns
add
not
scas
add
add
add
add
cmp
add
add
cli
add
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
xor
and
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fild
xor
fild
and
add
add
add
mov
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
push
add
add
add
add
add
call
add
add
bound
stc
add
add
add
add
in
add
call
add
add
add
add
add
add
add
in
add
call
add
add
add
call
add
add
ds
call
xor
fst
and
fnstcw
jae
add
add
ds
call
xor
fst
and
add
add
add
add
and
add
add
add
inc
add
add
add
cmp
call
add
xor
stos
add
add
add
add
add
add
add
add
and
add
add
add
inc
add
add
add
cmp
call
add
xor
stos
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
add
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
cmp
cli
add
mov
add
add
add
add
xchg
add
add
add
add
add
xor
push
add
push
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
add
mov
add
add
add
add
dec
add
add
add
add
add
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fstp
call
and
mov
mov
fstp
call
xor
mov
outs
xor
xor
and
stos
mov
dec
mov
mov
pusha
cmp
mov
xchg
cmp
mov
out
dec
mov
xlat
fadd
mov
add
repnz
jae
add
jmp
add
pop
ret
add
pusha
test
mov
lods
test
mov
cs
(bad)
mov
div
add
in
add
sti
add
add
(bad)
mov
je
add
fxch
dec
mov
cmp
mov
xor
add
call
add
add
push
and
scas
xor
aam
mov
fldcw
add
push
and
scas
xor
aam
mov
call
add
and
scas
xor
aam
and
fldcw
add
push
mov
scas
call
outs
fnstcw
mov
scas
call
dec
xor
call
cmp
and
stos
and
fld
stos
call
xor
mov
mov
hlt
add
add
add
and
add
inc
add
add
add
cli
add
add
add
add
add
dec
dec
add
and
add
jecxz
add
add
mov
popf
add
mov
out
add
hlt
add
mov
or
mov
add
add
popf
add
add
add
add
add
dec
mov
add
ss
add
popf
mov
add
out
mov
add
pusha
ret
inc
add
add
dec
call
call
mov
(bad)
mov
fidiv
dec
mov
inc
add
mov
add
pop
fadd
mov
out
dec
mov
xlat
fadd
mov
gs
dec
mov
in
jp
jae
add
(bad)
cmp
(bad)
mov
(bad)
jmp
mov
sbb
mov
fwait
ret
jmp
add
or
push
add
adc
mov
popf
dec
add
cli
dec
add
sub
mov
arpl
mov
cli
outs
add
add
(bad)
mov
repz
mov
push
and
add
xchg
jecxz
dec
xchg
sbb
sbb
sbb
jecxz
add
xchg
xchg
xchg
mov
sbb
sbb
arpl
fldenv
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
sbb
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
fldenv
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
retf
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
push
retf
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
push
retf
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
push
retf
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
retf
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
retf
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
pop
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
test
stos
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sub
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
jp
popf
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
pop
dec
dec
dec
dec
dec
dec
dec
dec
jp
sbb
dec
jp
jp
add
add
dec
jecxz
dec
dec
dec
dec
sbb
jecxz
test
mov
jp
pop
push
push
pop
pop
push
arpl
retf
mov
sbb
dec
dec
dec
popf
push
test
mov
pop
sbb
dec
dec
dec
dec
dec
dec
pop
add
pop
fmul
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
fmul
dec
dec
dec
dec
dec
dec
dec
dec
jp
test
test
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
(bad)
cwde
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
add
jp
jp
add
fldcw
(bad)
(bad)
xchg
xor
xor
add
cwde
test
mov
pop
push
push
shr
cmp
add
sbb
popf
jp
dec
popf
pop
push
arpl
add
add
sub
pop
sbb
pop
sbb
push
popf
dec
dec
jp
arpl
add
sub
sbb
dec
dec
popf
push
pop
jp
dec
dec
dec
dec
push
add
add
sbb
dec
dec
dec
dec
xchg
jp
dec
dec
dec
dec
dec
sbb
add
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
push
add
add
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
pop
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
add
add
adc
dec
dec
dec
popf
add
jp
jp
jp
add
add
add
add
arpl
arpl
add
popf
popf
pop
push
push
arpl
add
add
add
sbb
sbb
pop
jp
dec
jp
add
add
add
xchg
jp
sbb
pop
dec
dec
dec
dec
dec
sbb
add
sbb
dec
dec
dec
jp
pop
jp
dec
dec
dec
popf
pop
add
add
popf
dec
dec
dec
dec
dec
dec
jp
dec
dec
dec
jp
push
add
add
popf
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
add
dec
dec
dec
dec
dec
dec
dec
dec
xchg
dec
jp
dec
dec
dec
dec
xchg
add
add
jp
xchg
add
jp
add
push
pop
push
push
add
add
add
add
add
add
sbb
dec
sbb
push
add
sbb
xchg
dec
popf
pop
dec
dec
dec
jp
push
add
add
add
sbb
pop
jp
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
jp
dec
dec
dec
dec
dec
dec
popf
push
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
pop
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
push
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
pop
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
jp
popf
sbb
dec
dec
dec
dec
dec
dec
popf
add
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
jp
add
popf
xchg
dec
popf
xchg
dec
dec
dec
jp
add
add
dec
dec
xchg
add
xchg
popf
jp
dec
xchg
jp
dec
jp
add
push
push
add
sbb
pop
popf
dec
dec
dec
dec
jp
push
push
add
dec
dec
dec
dec
dec
dec
dec
xchg
pop
push
add
add
add
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
push
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
pop
add
add
add
popf
pop
jp
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
sbb
dec
dec
dec
dec
dec
dec
sbb
add
add
add
add
pop
jp
dec
dec
jp
xchg
jp
dec
dec
xchg
sbb
dec
xchg
add
xchg
dec
dec
dec
sbb
dec
dec
popf
add
add
jp
dec
dec
dec
dec
popf
jp
jp
dec
dec
dec
popf
add
dec
dec
dec
jp
add
add
dec
jp
add
add
push
add
pop
sbb
push
push
add
pop
popf
dec
dec
dec
jp
push
push
add
add
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
push
add
add
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
sbb
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
popf
sbb
dec
dec
dec
dec
dec
sbb
add
add
popf
dec
sbb
dec
dec
dec
popf
pop
add
add
add
add
dec
dec
sbb
sbb
pop
popf
jp
dec
dec
xchg
sbb
add
sbb
jp
add
xchg
jp
dec
xchg
xchg
dec
dec
xchg
xchg
dec
dec
popf
dec
dec
dec
popf
add
dec
popf
add
jp
jp
dec
xchg
jp
jp
add
jp
add
push
add
pop
sbb
push
push
add
pop
popf
dec
dec
dec
jp
push
push
add
add
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
push
add
add
pop
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
xchg
popf
pop
sbb
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
popf
dec
dec
popf
sbb
xchg
dec
dec
dec
sbb
add
add
sbb
dec
dec
dec
jp
push
dec
dec
popf
pop
add
add
add
add
jp
dec
dec
dec
dec
xchg
sbb
pop
add
dec
pop
jp
sbb
add
jp
dec
jp
add
add
popf
dec
xchg
add
dec
popf
add
jp
jp
dec
popf
add
jp
jp
dec
xchg
jp
jp
add
jp
pop
push
add
sbb
sbb
dec
popf
pop
push
arpl
add
add
dec
dec
dec
dec
dec
dec
xchg
pop
push
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
sbb
xchg
jp
dec
dec
dec
dec
jp
sbb
xchg
sbb
pop
sbb
pop
pop
jle
add
add
dec
dec
dec
dec
jp
popf
sbb
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
xchg
push
add
add
add
sbb
dec
dec
dec
dec
dec
pop
popf
dec
dec
dec
dec
dec
jp
sbb
dec
dec
dec
popf
add
xchg
dec
dec
dec
dec
sbb
add
sbb
add
xchg
dec
dec
xchg
xchg
dec
dec
popf
xchg
jp
popf
add
jp
add
pop
add
sbb
add
xchg
dec
dec
dec
sbb
add
add
add
sbb
pop
sbb
dec
jp
push
add
add
add
sbb
pop
sbb
dec
dec
jp
push
add
add
pop
sbb
pop
sbb
dec
dec
dec
jp
add
add
pop
dec
dec
dec
sbb
dec
dec
dec
jp
sbb
add
sbb
dec
sbb
dec
sbb
pop
add
add
add
sbb
dec
dec
popf
sbb
add
xchg
pop
add
dec
dec
dec
dec
dec
jp
add
dec
xchg
pop
sbb
dec
dec
dec
jp
popf
jp
dec
dec
dec
xchg
pop
add
sbb
add
sbb
add
jp
jp
xchg
dec
xchg
add
jp
add
pop
add
sbb
add
popf
dec
dec
jp
pop
sbb
dec
jp
pop
add
add
add
sbb
jp
sbb
dec
xchg
pop
push
add
add
add
dec
dec
dec
popf
sbb
dec
dec
popf
pop
add
add
sbb
pop
xchg
dec
dec
dec
dec
sbb
add
add
dec
dec
dec
dec
xchg
pop
xchg
dec
dec
sbb
add
sbb
dec
dec
dec
ja
xchg
sbb
add
add
add
popf
dec
dec
dec
dec
dec
xchg
sbb
add
add
add
add
dec
dec
popf
pop
xchg
dec
dec
dec
dec
dec
dec
popf
pop
add
add
add
add
dec
dec
dec
sbb
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
xchg
xchg
popf
xchg
popf
xchg
jp
sbb
popf
popf
popf
add
add
add
sbb
add
sbb
dec
sbb
sbb
pop
add
sbb
dec
dec
xchg
pop
add
popf
dec
dec
dec
dec
xchg
pop
add
dec
dec
dec
dec
dec
jp
sbb
dec
jp
popf
dec
dec
dec
dec
dec
dec
jp
add
add
add
add
dec
dec
dec
jp
add
add
add
add
dec
dec
dec
xchg
pop
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
xchg
pop
add
add
add
dec
dec
dec
dec
dec
popf
add
add
add
add
dec
dec
dec
jp
add
popf
popf
xchg
dec
dec
sbb
popf
xchg
add
sbb
pop
jp
jp
pop
pop
add
xchg
dec
dec
dec
dec
jp
pop
push
add
add
add
add
dec
dec
dec
pop
pop
add
add
add
sbb
dec
dec
dec
dec
dec
dec
sbb
add
add
dec
dec
dec
dec
dec
sbb
add
add
dec
dec
dec
dec
dec
dec
pop
push
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
pop
add
jp
jp
xchg
popf
popf
popf
sbb
popf
jp
popf
pop
add
jp
sbb
add
add
xchg
popf
add
add
add
sbb
add
dec
dec
dec
dec
xchg
sbb
add
add
add
add
dec
dec
sbb
add
add
add
add
dec
dec
dec
dec
sbb
add
add
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
dec
jp
xchg
sbb
sbb
popf
dec
xchg
add
add
dec
jp
add
dec
dec
dec
dec
popf
sbb
add
add
add
add
dec
dec
dec
popf
dec
popf
add
add
add
add
dec
dec
je
add
dec
jp
popf
jp
add
dec
pop
add
pop
jp
pop
pop
add
add
dec
dec
dec
xchg
sbb
add
add
add
add
dec
dec
popf
pop
pop
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
add
add
adc
dec
dec
dec
dec
dec
dec
jp
jp
add
add
dec
dec
dec
dec
xchg
xchg
sbb
sbb
popf
popf
pop
add
add
dec
add
sbb
dec
dec
popf
sbb
add
dec
add
add
dec
dec
dec
dec
dec
xchg
sbb
add
add
add
add
jp
dec
dec
dec
jp
add
dec
dec
je
add
dec
jp
xchg
jp
add
dec
add
sbb
add
xchg
xchg
popf
popf
popf
sbb
add
popf
dec
dec
dec
dec
popf
pop
pop
xchg
dec
dec
dec
dec
dec
dec
xchg
pop
pop
add
jp
dec
dec
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
dec
dec
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
popf
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
popf
add
add
add
dec
dec
jp
jp
xchg
popf
sbb
sbb
add
add
add
add
dec
dec
dec
dec
dec
jp
sbb
add
dec
dec
dec
dec
dec
jp
add
add
dec
dec
dec
jp
add
dec
jp
dec
sbb
pop
pop
pop
pop
add
add
dec
jp
sbb
add
xchg
pop
pop
xchg
dec
dec
dec
dec
dec
dec
xchg
pop
pop
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
jp
jp
dec
dec
dec
dec
dec
dec
dec
popf
pop
jp
jp
popf
sbb
popf
jp
dec
popf
pop
add
dec
dec
dec
xchg
popf
sbb
add
add
add
add
dec
dec
dec
dec
dec
dec
xchg
sbb
add
dec
dec
dec
dec
dec
jp
popf
add
jp
dec
dec
dec
jp
popf
add
jp
dec
add
sbb
sbb
sbb
add
add
dec
dec
jp
popf
add
xchg
popf
dec
jp
dec
dec
dec
dec
jp
add
add
dec
dec
dec
dec
sbb
add
sbb
sbb
pop
sbb
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
jp
pop
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
sbb
jp
dec
dec
dec
dec
dec
dec
dec
popf
jp
jp
dec
dec
dec
dec
dec
dec
dec
popf
add
jp
dec
dec
dec
dec
dec
dec
xchg
xchg
add
dec
dec
dec
dec
dec
jp
xchg
dec
dec
dec
jp
dec
sbb
sbb
sbb
add
popf
dec
dec
dec
sbb
dec
jp
sbb
add
dec
dec
dec
dec
dec
xchg
pop
pop
xchg
dec
jp
dec
dec
jp
popf
sbb
sbb
jp
popf
xchg
sbb
popf
xchg
xchg
jp
sbb
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
popf
sbb
add
add
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
jp
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
sbb
jp
dec
dec
dec
dec
dec
dec
dec
popf
dec
add
dec
dec
dec
dec
dec
dec
xchg
popf
add
jp
dec
dec
dec
dec
xchg
xchg
dec
dec
dec
dec
jp
add
add
add
dec
add
popf
dec
jp
sbb
add
add
add
sbb
xchg
sbb
add
popf
popf
jp
popf
jp
dec
dec
dec
dec
xchg
pop
add
popf
dec
dec
dec
dec
jp
dec
xchg
sbb
sbb
sbb
add
popf
dec
dec
dec
dec
sbb
popf
jp
jp
sbb
add
add
dec
dec
jp
dec
dec
dec
dec
dec
dec
sbb
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
jp
dec
dec
dec
dec
dec
dec
dec
popf
dec
add
add
add
dec
dec
dec
dec
dec
dec
xchg
xchg
add
add
add
add
dec
dec
dec
jp
add
dec
jp
dec
add
add
add
add
sbb
sbb
add
add
add
add
add
pop
popf
dec
dec
dec
xchg
sbb
add
add
add
popf
xchg
dec
sbb
dec
dec
jp
add
add
dec
popf
xchg
xchg
sbb
add
popf
dec
dec
dec
dec
dec
dec
xchg
sbb
sbb
add
dec
dec
dec
dec
dec
dec
dec
jp
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
inc
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
dec
popf
dec
movs
add
add
jp
dec
dec
dec
dec
dec
dec
dec
popf
movs
add
add
add
dec
dec
dec
dec
dec
dec
xchg
xchg
add
add
add
add
dec
dec
dec
dec
dec
add
dec
dec
add
rol
add
sbb
add
sbb
xchg
popf
popf
sbb
add
xchg
dec
dec
dec
dec
popf
jp
pop
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
dec
jp
add
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
dec
xchg
pop
add
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
dec
sbb
add
dec
dec
dec
dec
dec
dec
sbb
add
jp
dec
dec
dec
dec
dec
dec
popf
add
add
dec
dec
dec
dec
jp
popf
add
add
dec
dec
dec
jp
xchg
add
add
add
dec
xor
js
shl
mov
pop
mov
add
add
jb
or
push
dec
push
mov
add
add
dec
and
inc
dec
jp
arpl
add
cld
(bad)
(bad)
imul
add
pushf
xor
dec
popf
push
add
mov
dec
xchg
sbb
jno
dec
dec
jp
popf
sbb
pop
add
inc
dec
dec
dec
jp
(bad)
and
add
mov
add
mov
add
add
add
(bad)
jecxz
ret
add
add
add
add
sub
mov
mov
leave
leave
sub
mov
jecxz
mov
jecxz
ret
mov
mov
jecxz
mov
mov
jp
dec
cmp
add
(bad)
mov
(bad)
sub
dec
dec
jp
dec
sub
add
(bad)
dec
mov
dec
dec
jp
jp
jp
jp
sub
add
jecxz
mov
dec
jp
jp
jp
jp
dec
sub
add
jecxz
dec
mov
mov
jp
jp
jp
jp
jp
sub
add
jecxz
dec
pop
mov
jecxz
jp
jp
jp
jp
dec
sub
add
jecxz
dec
pop
pop
mov
or
jp
jp
jp
dec
sub
add
jecxz
dec
pop
pop
pop
pop
jecxz
dec
dec
jp
jp
adc
(bad)
hlt
jecxz
add
jecxz
dec
xchg
test
test
dec
dec
dec
dec
dec
dec
jp
dec
sub
add
jecxz
fst
dec
dec
dec
dec
dec
dec
jp
dec
sub
add
jecxz
fst
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
in
jecxz
add
add
test
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
in
jecxz
add
add
test
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
add
jecxz
fldenv
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
dec
jecxz
add
add
test
mov
dec
dec
dec
dec
dec
dec
dec
jp
popf
in
jecxz
add
add
test
mov
dec
dec
dec
dec
dec
dec
fs
xchg
sub
add
jecxz
retf
mov
dec
dec
dec
dec
dec
je
jp
in
xor
add
add
jecxz
retf
mov
dec
dec
dec
dec
jp
popf
dec
(bad)
lahf
mov
add
add
cwde
test
mov
dec
dec
dec
dec
loop
ja
fsqrt
xor
add
add
cwde
test
mov
dec
dec
dec
dec
dec
jp
lods
test
xor
cwde
test
mov
dec
dec
dec
dec
jp
(bad)
cli
cli
cli
xor
cwde
test
mov
xchg
sub
xor
xor
xor
cwde
test
mov
push
in
xchg
fcomp
xor
cmp
cwde
add
add
cwde
mov
stos
fcomp
fdivr
hlt
sub
cwde
sub
sub
stos
lods
lods
hlt
sub
add
add
add
out
xchg
in
and
add
dec
data16
imul
fidiv
add
out
(bad)
wbinvd
dec
xor
mov
mov
sub
out
addr16
out
sysenter
xor
cmps
mov
mov
out
scas
scas
scas
fucomip
int3
push
inc
imul
add
mov
sub
push
pop
pop
pop
xchg
mov
ss
mov
add
push
pop
pop
scas
cmc
scas
(bad)
addr16
sbb
sub
sub
add
add
add
add
push
scas
fild
dec
push
push
mov
xor
repnz
add
add
add
jg
sti
or
out
out
sahf
(bad)
mov
sti
adc
adc
add
add
add
jg
sti
xor
push
adc
popa
popa
popa
popa
adc
adc
add
add
sti
sti
sti
mov
psrld
xor
repnz
popa
popa
popa
adc
sti
pop
jg
add
add
sti
mov
dec
push
sub
call
push
repnz
and
add
jg
adc
xchg
mov
push
push
ss
mov
and
and
add
add
push
cdq
cmp
mov
or
jo
jo
dec
push
inc
ss
repnz
add
add
or
xchg
mov
aad
aad
jo
inc
ss
repnz
push
(bad)
push
pop
push
add
add
outs
or
clc
inc
inc
inc
inc
inc
cmp
stc
inc
ss
or
fisubr
jmp
or
clc
inc
mov
inc
inc
cmp
stc
inc
ss
jg
or
js
pop
add
add
cmp
enter
sbb
ins
ins
jl
inc
inc
cmp
xor
js
rol
add
add
bound
outs
add
repnz
pop
mov
add
cmp
cmp
retf
test
push
dec
bound
add
sub
or
fiadd
add
add
sar
int
nop
push
push
das
push
ins
ins
push
dec
ins
aam
mov
lods
xor
dec
and
add
add
cmp
rcr
mov
push
dec
ins
aam
iret
mov
jmp
add
add
pop
pop
jno
loop
dec
ins
xchg
in
lock
aam
iret
mov
mov
add
add
add
add
scas
pop
jae
or
loop
ins
in
lock
aam
mov
and
xor
or
pop
ror
(bad)
fcmovnu
ins
mov
aam
mov
xor
inc
shl
jno
mov
pop
dec
aas
mov
lods
jge
(bad)
inc
add
cld
rol
dec
(bad)
in
outs
mov
rol
inc
push
cld
or
mov
lods
jge
add
in
fwait
into
in
jns
lea
jmp
sbb
es
test
shr
fiadd
inc
and
lahf
jnp
adc
fwait
xchg
aad
xchg
neg
mov
push
idiv
push
mov
idiv
push
in
mov
retf
cmp
pop
sbb
jnp
jnp
push
cmp
or
movs
jmp
ret
sbb
xchg
call
and
out
cmp
or
push
xchg
inc
inc
mov
lock
or
jmp
or
mov
pop
not
out
lock
fwait
(bad)
dec
xor
dec
sahf
push
fsub
in
push
push
push
push
(bad)
repz
adc
jns
xor
cmp
fild
push
rol
iret
aad
fstp
jae
jbe
sub
outs
cli
lock
adc
(bad)
or
pop
push
or
jmp
or
xor
jne
push
aad
imul
in
mov
xor
pushf
push
jno
jno
sub
aaa
mov
lods
sub
sub
(bad)
sub
xchg
lock
xor
idiv
pop
dec
dec
ffree
jno
cmp
stc
aad
adc
pop
push
mov
and
int3
lds
add
adc
test
dec
stos
push
cmp
cmp
js
mov
push
movs
mov
cmc
arpl
or
add
dec
mov
inc
jns
lea
mov
or
pop
mov
jnp
cmp
mov
ins
cld
aam
jb
ins
or
imul
and
pop
sub
push
loop
xor
(bad)
inc
push
xlat
pop
js
xchg
pop
aaa
push
jle
dec
(bad)
sbb
xlat
push
jbe
(bad)
fwait
std
jmp
daa
dec
mul
int
push
pop
xchg
inc
sub
cmc
ja
mov
lea
ds
xor
xor
enter
cmc
pusha
in
push
(bad)
rcl
pop
xchg
and
rcl
and
out
in
lahf
or
mov
mov
mov
or
lds
ja
ins
add
cdq
inc
and
fadd
add
sub
addr16
xor
adc
ins
aaa
dec
cdq
test
xor
es
sbb
ror
add
sahf
xor
mov
mov
movs
cdq
inc
mov
push
add
xchg
movs
clc
(bad)
mov
sub
(bad)
and
or
pop
shr
add
clc
je
aad
pop
scas
lods
sar
mov
ror
aam
pop
xor
xchg
aas
fs
dec
xor
in
jno
jbe
push
jl
add
add
add
dec
add
add
add
cmp
and
add
add
xor
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
in
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
xor
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
push
add
add
mov
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
xor
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
retf
jg
add
add
jg
retf
retf
add
add
jg
inc
and
call
scas
push
call
and
mov
stos
mov
outs
mov
sbb
add
add
retf
add
jg
sbb
inc
add
add
add
add
add
add
xor
aam
fld
fild
in
add
add
mov
add
add
add
add
add
add
mov
add
add
add
and
add
mov
add
add
add
aam
fld
add
add
inc
add
add
add
add
xor
stos
add
add
add
add
and
add
add
add
add
add
xor
aam
fld
call
add
add
add
mov
or
cmp
inc
add
add
ins
add
add
xor
add
add
outs
add
add
add
fld
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
and
stos
call
pop
add
mov
(bad)
stc
pop
mov
add
add
mov
add
inc
push
outs
xor
xor
and
aam
jne
and
add
add
xor
stos
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
out
push
aad
scas
cmp
xchg
dec
cli
jb
ds
fdiv
ds
mov
jae
add
add
pop
add
add
scas
jae
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
fld
in
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
xor
dec
add
add
add
ds
add
jae
add
outs
add
add
add
add
dec
add
add
add
add
add
add
add
mov
add
add
add
add
mov
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
and
scas
pop
add
add
and
add
dec
add
add
add
push
add
add
add
add
xor
add
in
stos
dec
jae
dec
xchg
outs
pop
add
dec
add
xor
dec
add
add
add
and
scas
mov
add
in
stos
dec
jae
dec
xchg
outs
mov
add
and
add
dec
add
add
add
push
add
add
add
scas
add
add
and
add
mov
add
dec
add
add
add
add
xchg
xor
outs
add
push
add
add
add
bound
add
add
call
add
add
in
add
add
add
xchg
xor
outs
add
push
add
add
add
bound
add
add
call
add
add
cmp
add
add
push
add
add
add
add
add
add
add
scas
add
add
(bad)
loop
inc
(bad)
fld
cmp
out
(bad)
aad
push
(bad)
sub
add
jo
ins
add
add
add
add
mov
fadd
mov
inc
(bad)
pop
(bad)
out
(bad)
fld
or
out
(bad)
in
(bad)
faddp
inc
(bad)
or
aam
or
(bad)
out
(bad)
aad
push
(bad)
out
mov
(bad)
fld
inc
inc
(bad)
aad
loop
fadd
mov
or
(bad)
push
(bad)
jb
pop
mov
mov
(bad)
fadd
inc
(bad)
fld
inc
(bad)
faddp
inc
(bad)
faddp
mov
out
(bad)
fadd
jb
fld
or
out
(bad)
in
(bad)
faddp
inc
(bad)
or
aam
inc
mov
dec
add
mov
add
add
add
add
add
dec
add
add
call
add
add
add
(bad)
mov
aam
out
mov
(bad)
rol
or
(bad)
out
(bad)
aam
fld
cmp
out
(bad)
aad
push
(bad)
fld
pop
mov
out
(bad)
aad
inc
inc
(bad)
pop
mov
add
add
add
xor
add
add
add
add
add
cmp
add
add
add
add
pop
add
add
cmp
add
add
add
add
pop
add
add
add
add
xor
pop
add
imul
add
ds
and
fldcw
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
scas
add
add
add
push
add
and
add
add
mov
add
add
add
add
add
push
add
and
add
add
add
add
fadd
js
mov
add
add
add
add
add
(bad)
faddp
sub
fadd
jb
add
outs
add
add
add
add
add
push
(bad)
aam
out
(bad)
mov
out
(bad)
fadd
jb
add
scas
add
add
add
add
ret
(bad)
cmp
faddp
out
(bad)
pop
(bad)
or
mov
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
ret
(bad)
cmp
faddp
out
(bad)
pop
(bad)
or
(bad)
fld
or
(bad)
fld
ret
(bad)
fadd
aam
faddp
sub
fadd
jb
fld
dec
(bad)
fadd
ret
(bad)
fadd
fld
cmp
out
(bad)
aad
push
mov
xchg
(bad)
mov
cli
(bad)
aam
add
add
fld
out
(bad)
or
mov
inc
(bad)
faddp
aam
add
xchg
(bad)
or
aam
add
push
mov
(bad)
out
(bad)
pop
(bad)
cli
(bad)
aad
fadd
inc
(bad)
fld
dec
(bad)
fadd
ret
(bad)
fadd
fld
cmp
out
(bad)
aad
push
(bad)
fld
fadd
ret
(bad)
push
(bad)
jb
aam
ret
(bad)
fld
inc
(bad)
loop
push
(bad)
or
(bad)
sub
fld
inc
ret
(bad)
mov
inc
(bad)
faddp
cli
mov
fld
inc
(bad)
in
mov
(bad)
loop
fadd
ret
(bad)
mov
pop
(bad)
or
(bad)
push
add
add
add
add
push
add
add
add
add
jae
push
add
add
add
add
add
bound
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
in
add
add
add
mov
add
add
add
dec
add
add
add
mov
add
add
add
jae
xor
push
add
add
add
add
aad
xor
stc
mov
add
mov
add
add
add
add
cmp
add
add
add
xor
add
add
dec
add
add
add
add
mov
add
add
imul
add
(bad)
out
(bad)
in
(bad)
faddp
inc
(bad)
or
aam
out
(bad)
fld
cmp
out
(bad)
aad
push
(bad)
out
(bad)
fld
imul
add
add
add
add
add
add
add
add
add
(bad)
fadd
aam
faddp
sub
fadd
jb
fld
inc
(bad)
out
mov
add
add
add
adc
out
(bad)
aam
faddp
sub
fadd
jb
fld
inc
or
mov
(bad)
mov
ret
mov
aam
pop
mov
mov
mov
out
(bad)
mov
inc
(bad)
faddp
rol
inc
(bad)
pop
(bad)
or
add
(bad)
out
(bad)
in
(bad)
faddp
inc
(bad)
or
aam
or
(bad)
out
(bad)
in
(bad)
faddp
inc
(bad)
or
or
(bad)
fld
mov
aam
add
add
popa
(bad)
faddp
inc
(bad)
mov
inc
(bad)
pop
(bad)
pop
(bad)
out
(bad)
cli
(bad)
fld
inc
(bad)
out
mov
add
push
(bad)
aam
ret
(bad)
faddp
ret
(bad)
loop
fadd
jb
fld
inc
mov
inc
out
(bad)
mov
or
add
add
(bad)
out
(bad)
push
mov
(bad)
fld
mov
faddp
inc
(bad)
mov
inc
(bad)
pop
(bad)
or
add
(bad)
out
(bad)
in
(bad)
faddp
inc
mov
ret
(bad)
aam
add
add
xor
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loop
mov
cmp
add
adc
out
(bad)
in
(bad)
faddp
inc
(bad)
or
aam
out
(bad)
fld
imul
add
add
idiv
mov
add
add
in
je
add
add
ret
(bad)
cmp
faddp
out
(bad)
pop
mov
fld
mov
aam
add
add
mov
rol
or
(bad)
out
(bad)
aam
fld
pop
mov
inc
out
(bad)
push
mov
(bad)
fld
or
out
(bad)
in
(bad)
faddp
inc
(bad)
or
or
(bad)
fld
cmp
out
(bad)
aad
push
mov
add
add
add
add
add
add
add
add
add
add
outs
add
add
add
pop
add
xor
scas
add
add
add
add
mov
rol
or
(bad)
out
(bad)
fld
inc
(bad)
faddp
or
mov
(bad)
out
(bad)
pop
mov
or
(bad)
out
(bad)
aad
push
(bad)
out
(bad)
aam
add
add
mov
rol
or
(bad)
out
(bad)
aam
fld
pop
mov
inc
out
(bad)
push
mov
(bad)
fld
ret
(bad)
fadd
aam
faddp
sub
fadd
jb
fld
cmp
out
(bad)
aad
push
mov
add
add
add
add
add
add
add
add
add
and
add
add
xor
stos
add
add
add
add
add
outs
add
add
add
add
add
dec
add
add
add
xor
add
add
add
add
add
and
add
add
add
add
add
add
mov
rol
or
(bad)
out
(bad)
aam
fld
pop
mov
inc
out
(bad)
push
mov
(bad)
fld
loop
ret
(bad)
cmp
faddp
out
(bad)
pop
(bad)
or
(bad)
fld
cmp
out
(bad)
aad
push
mov
add
add
add
add
add
add
add
add
add
add
fild
and
add
and
add
add
add
add
add
outs
add
add
add
add
add
dec
add
add
add
xor
add
add
add
add
add
fild
and
add
outs
add
add
add
add
add
dec
add
add
add
xor
add
add
add
add
add
and
add
add
add
or
and
add
add
add
add
add
outs
add
add
add
add
add
dec
add
add
add
xor
add
add
add
add
add
and
add
add
add
pop
add
xor
scas
add
add
add
add
mov
rol
or
(bad)
out
(bad)
aam
fld
pop
mov
inc
out
(bad)
push
mov
(bad)
fld
ret
(bad)
fadd
aam
faddp
sub
fadd
jb
fld
inc
(bad)
out
mov
dec
add
add
add
xor
add
add
add
add
add
and
add
add
add
add
add
outs
add
add
add
add
and
fld
retf
add
add
(bad)
out
(bad)
in
(bad)
faddp
inc
(bad)
or
aam
out
(bad)
fld
cmp
out
(bad)
aad
push
(bad)
out
(bad)
fld
imul
add
add
cmps
add
add
add
add
add
add
add
add
add
add
add
jge
rol
loop
cmp
rol
add
rol
loop
cmp
rol
add
add
sub
jge
jge
dec
add
add
push
stos
scas
call
add
pop
add
mov
add
add
add
dec
add
add
jae
jge
push
add
add
add
stos
add
add
add
add
cmps
add
add
pop
add
xor
ds
pop
add
add
add
add
add
dec
add
add
add
push
add
add
add
xor
add
add
add
add
add
mov
add
add
add
add
add
add
add
scas
scas
pop
add
add
dec
add
add
add
push
add
add
add
stos
add
add
add
pop
add
jae
xor
dec
add
add
cmp
push
(bad)
pop
add
outs
add
add
add
call
add
push
dec
fdivr
mov
dec
(bad)
scas
jae
xor
push
and
push
and
bound
and
stc
jge
xor
dec
outs
xor
bound
push
(bad)
xor
xor
and
bound
add
add
add
dec
cmp
push
and
aam
ds
stc
jge
xor
aam
push
mov
bound
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
mov
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
call
cmp
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fld
fld
fstp
jge
jae
scas
dec
mov
and
aam
ds
stc
jge
xor
aam
push
mov
bound
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
mov
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
call
cmp
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fld
fld
aam
mov
jae
cmp
stos
scas
call
fst
and
bound
and
stc
jge
xor
aam
scas
call
mov
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
call
aam
bound
and
stc
jge
xor
aam
push
outs
jge
ds
call
scas
scas
fldcw
push
mov
scas
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fld
fld
fstp
add
or
jae
stos
and
add
add
add
push
dec
fdivr
mov
dec
(bad)
scas
jae
xor
push
and
push
and
bound
and
stc
jge
xor
dec
outs
xor
fsubr
mov
jge
xor
bound
add
inc
and
jge
outs
xor
fst
and
bound
and
stc
jge
xor
aam
fsubr
mov
aam
xor
and
call
dec
cmp
push
and
aam
ds
stc
jge
xor
aam
push
mov
bound
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
mov
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
call
cmp
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fld
fld
ret
pop
dec
cmp
scas
call
push
dec
jge
scas
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
fld
fstp
dec
cmp
push
and
aam
ds
stc
jge
xor
aam
push
mov
bound
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
mov
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
call
cmp
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fld
fld
fstp
dec
and
dec
cmp
scas
call
push
dec
jge
call
jae
xor
call
dec
jae
ds
ds
dec
jae
ds
xor
mov
call
and
mov
mov
fstp
add
add
xor
ds
dec
add
dec
jo
add
add
scas
stc
stos
call
and
add
cli
cli
cmp
jge
stos
push
movlhps
jge
jb
cmp
push
inc
jge
cmp
aam
mov
jge
ds
push
dec
fdivr
mov
dec
(bad)
scas
jae
xor
push
and
push
and
bound
and
stc
jge
xor
dec
scas
call
mov
bound
add
add
add
dec
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fnstcw
call
cmp
scas
call
xor
call
aam
scas
call
mov
cmp
scas
call
push
dec
jge
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
xor
call
aam
bound
and
stc
jge
xor
aam
push
outs
jge
ds
call
scas
scas
fldcw
push
mov
scas
call
dec
jae
ds
xor
call
dec
jae
ds
ds
pop
dec
jae
ds
ret
xor
mov
call
and
mov
dec
jae
ds
ret
fld
fld
fld
aam
xor
dec
xor
push
outs
cmps
add
add
stos
mov
stc
stos
call
and
out
mov
or
outs
xor
cmp
add
pop
bound
dec
call
xor
fldenv
ds
add
pop
bound
dec
call
fldenv
(bad)
in
call
xor
xor
sub
sub
and
sub
xor
xor
xor
sub
sub
and
sub
xor
xor
xor
and
call
add
add
pop
bound
dec
call
add
add
xor
xor
xor
inc
mov
add
stos
inc
mov
xor
fldcw
stos
dec
xor
stos
in
cmp
add
or
add
cmp
add
add
add
add
add
add
add
imul
add
dec
push
sub
add
popa
mov
mov
mov
pop
dec
mov
mov
mov
add
mov
lods
mov
mov
shl
sar
(bad)
(bad)
sti
add
add
mov
mov
stos
cwde
mov
mov
imul
adc
mov
sbb
(bad)
(bad)
sti
add
add
lods
dec
mov
mov
pop
dec
mov
(bad)
sub
dec
mov
popf
sub
dec
mov
sbb
mov
jge
dec
mov
sbb
mov
xor
mov
fstp
add
popf
popf
mov
mov
arpl
mov
cwde
pop
dec
mov
sti
add
add
repnz
mov
cmc
repnz
mov
outs
xor
add
aam
dec
mov
and
dec
mov
lods
repnz
mov
mov
dec
mov
nop
mov
mov
fild
pop
sbb
mov
sbb
xor
mov
mov
popf
dec
dec
mov
push
in
dec
mov
hlt
out
dec
mov
fs
mov
je
dec
mov
fsubrp
dec
mov
(bad)
mov
jmp
mov
mov
and
mov
mov
movs
sahf
add
stos
add
add
xchg
add
mov
add
mov
ds
add
aam
add
mov
add
out
inc
add
mov
inc
add
pop
push
add
sbb
mov
jb
add
pushf
add
mov
fadd
add
xchg
mov
mov
push
mov
mov
sbb
mov
daa
mov
mov
mov
stos
scas
bound
dec
push
add
outs
fld
add
aam
add
cmp
in
add
jb
add
jb
add
and
add
cmp
add
xor
add
mov
mov
mov
mov
dec
mov
pop
scas
dec
mov
retf
scas
dec
mov
out
dec
mov
mov
mov
gs
dec
mov
in
jp
jae
add
nop
fisttp
out
mov
dec
mov
je
dec
mov
and
dec
mov
in
jp
mov
dec
mov
out
dec
mov
mov
mov
jo
dec
mov
in
jp
jae
add
into
fisttp
add
add
jb
add
and
mov
mov
mov
dec
mov
adc
dec
mov
cmps
push
dec
mov
test
fmul
inc
fmul
push
fmul
cmp
mov
mov
cs
dec
mov
mov
mov
dec
mov
out
ror
jecxz
mov
repz
mov
push
mov
mov
sti
jecxz
mov
sbb
mov
mov
mov
mov
and
mov
repz
mov
cld
lods
dec
mov
mov
adc
mov
fwait
jp
mov
popa
adc
mov
mov
ret
mov
mov
dec
mov
cld
lods
dec
mov
mov
pop
dec
mov
dec
dec
dec
sbb
and
and
imul
out
(bad)
fbld
cwde
cwde
cwde
dec
dec
dec
dec
sbb
add
ins
ins
ins
ins
pop
pop
pop
pop
adc
adc
and
and
mov
sbb
jnp
xchg
jns
add
ins
add
add
dec
dec
dec
cmc
ficomp
mov
add
push
inc
out
cmp
mov
int
mov
(bad)
nop
push
push
(bad)
out
out
out
shr
push
add
add
add
add
add
test
enter
pop
inc
cdq
retf
lds
push
leave
(bad)
fistp
cmp
cmp
cmp
(bad)
sub
add
aam
add
pop
push
push
push
int
xlat
xlat
jmp
sbb
pop
push
pushf
inc
ja
(bad)
mov
ja
call
sub
(bad)
cmp
(bad)
loopne
call
cmp
mov
add
add
add
pop
mov
fidiv
js
gs
mov
jl
call
add
mov
call
es
call
jnp
ret
add
dec
div
shl
add
pop
xchg
xchg
xchg
sub
add
rol
mov
(bad)
cmp
(bad)
out
mov
(bad)
dec
and
dec
mov
aam
sar
fmul
jnp
fdiv
(bad)
in
adc
call
cmps
inc
(bad)
add
add
add
add
aas
aas
les
xor
(bad)
in
data16
jo
jle
ins
sar
hlt
iret
test
(bad)
cmp
push
push
scas
inc
cmp
pop
(bad)
inc
loope
inc
mov
push
ja
mov
adc
add
dec
add
add
push
push
push
aaa
std
nop
nop
(bad)
fdivr
inc
call
(bad)
fld
sar
lods
and
cmp
or
push
dec
jmp
fisttp
dec
sahf
mov
call
mov
jmp
ja
sbb
mov
pop
sub
pop
pop
mov
pop
cmc
dec
adc
and
jmp
jmp
int
ins
addr16
jo
mov
cmp
pop
(bad)
cmp
outs
dec
xor
jnp
fsub
dec
adc
jmp
cmc
push
dec
or
retf
add
add
add
cmp
add
leave
and
fnstcw
jle
imul
repnz
dec
repz
jmp
sbb
inc
push
pop
call
iret
jmp
dec
ja
(bad)
cmp
mov
jmp
xlat
(bad)
fadd
inc
div
fstp
(bad)
push
add
add
add
jp
add
jge
int3
int3
mov
sub
push
(bad)
push
jns
jmp
into
repz
(bad)
(bad)
sti
call
sbb
dec
mov
(bad)
in
sbb
call
adc
(bad)
fisubr
inc
(bad)
fsubp
jnp
push
or
(bad)
in
je
dec
and
push
add
jge
add
jp
add
cwde
push
push
push
ja
icebp
std
(bad)
in
add
test
push
lock
inc
cld
repz
jmp
int3
jmp
push
dec
out
in
call
inc
inc
jmp
call
jnp
inc
je
call
adc
dec
push
sar
inc
je
dec
lds
(bad)
out
out
out
fnsave
add
hlt
add
add
mov
mov
jmp
leave
(bad)
jmp
(bad)
jg
(bad)
inc
cld
repz
jmp
mov
addr16
popf
dec
retf
or
and
(bad)
(bad)
cs
ins
in
push
movs
push
je
(bad)
(bad)
cdq
movs
push
data16
cmp
mov
cmp
cmp
add
out
sti
sti
sti
jne
pop
pop
les
lds
mov
(bad)
jmp
iret
(bad)
inc
mov
sar
popf
outs
call
and
inc
aad
mov
jmp
test
call
inc
push
test
dec
(bad)
jmp
xor
aaa
aaa
xchg
call
sbb
add
add
mov
mov
xchg
mov
retf
or
(bad)
cmp
jmp
jmp
shl
add
sar
popf
mov
ss
fbld
dec
mov
or
xchg
sbb
jle
scas
and
adc
fnstcw
jle
dec
adc
imul
inc
fwait
sbb
xor
add
jno
add
add
xor
pushf
test
inc
call
jnp
cmp
jmp
jle
mov
mov
sar
jg
add
jmp
mov
jmp
mov
jecxz
arpl
sbb
arpl
sub
lock
jmp
lock
lods
(bad)
jmp
adc
enter
add
add
in
in
in
je
mov
and
fnstenv
mov
jmp
sar
mov
jmp
inc
(bad)
jg
loopne
add
inc
(bad)
mov
jmp
jb
add
mov
push
mov
mov
jmp
stc
mov
inc
(bad)
dec
enter
add
loopne
add
add
in
in
je
mul
xchg
mov
call
sar
push
mov
call
(bad)
sti
adc
(bad)
inc
adc
call
add
inc
add
push
add
inc
inc
push
inc
pop
jmp
scas
icebp
push
scas
std
call
jno
jmp
outs
xchg
dec
enter
add
in
add
add
in
in
je
test
popa
or
call
inc
mov
inc
jnp
xchg
add
(bad)
jg
movs
jmp
(bad)
out
sub
inc
inc
add
(bad)
jg
mov
add
repz
jno
inc
and
nop
(bad)
jg
push
call
push
mov
dec
enter
add
data16
add
in
in
in
je
mov
jle
pop
xchg
(bad)
inc
out
sar
call
mov
(bad)
(bad)
loope
call
(bad)
(bad)
fisub
call
cmp
(bad)
cmp
cmp
out
retf
pop
jmp
inc
inc
pop
pop
inc
test
dec
icebp
jmp
bound
inc
push
xchg
jmp
fs
enter
add
push
add
add
in
in
je
mov
jle
jo
(bad)
cmp
(bad)
scas
fcmovb
dec
movs
ret
mov
(bad)
cmp
(bad)
(bad)
jge
cdq
(bad)
fdiv
mov
jne
push
mov
call
mov
inc
lock
dec
outs
jle
mov
xor
repnz
nop
inc
mov
das
push
xchg
cmp
cmp
add
add
add
add
in
in
je
std
arpl
pop
push
ret
enter
das
jmp
push
test
mov
nop
test
lock
(bad)
(bad)
jmp
shl
(bad)
in
call
inc
push
jb
mov
adc
call
sar
push
pop
std
inc
push
push
inc
push
pop
(bad)
fsubr
(bad)
cmp
cmp
add
add
add
add
in
in
je
les
call
push
inc
inc
xchg
mov
(bad)
(bad)
(bad)
jmp
(bad)
dec
inc
(bad)
call
add
inc
js
inc
or
test
gs
sti
(bad)
shl
inc
mov
and
add
int3
jmp
adc
jmp
add
jbe
add
add
jg
jmp
jmp
mov
sar
not
call
out
push
jmp
fisubr
call
(bad)
push
movs
push
jle
sub
repz
sti
add
(bad)
inc
daa
(bad)
inc
cld
das
(bad)
jp
adc
sub
sahf
jmp
enter
enter
imul
add
add
sbb
sbb
pusha
pusha
pusha
mov
inc
rol
pop
repz
pushf
call
sar
jmp
inc
mov
push
out
ret
or
test
jmp
(bad)
idiv
add
cmc
push
add
es
add
fcmovu
(bad)
loope
loope
clc
clc
clc
push
jmp
imul
add
mov
add
adc
add
mov
and
xor
or
sbb
jle
les
call
cmps
pushf
(bad)
jns
inc
push
mov
mov
jmp
imul
mov
push
inc
add
test
sbb
mov
or
sahf
pop
pop
pop
bound
add
pop
add
add
add
xor
mov
xor
push
jnp
dec
ja
inc
cmp
inc
sbb
(bad)
cmp
int
stos
stos
stos
push
add
add
add
pop
add
add
inc
inc
fs
xchg
das
mov
scas
adc
jge
xchg
dec
sbb
jmp
pop
pop
arpl
(bad)
and
add
ins
sti
sti
sti
ins
lods
lods
lods
cmp
adc
adc
sbb
cmp
jmp
sub
jnp
test
movs
add
add
add
out
mov
mov
sub
sub
dec
dec
sahf
pop
pop
pop
stos
add
add
push
mov
cmp
push
and
add
mov
add
(bad)
hlt
mov
(bad)
hlt
mov
(bad)
hlt
mov
(bad)
hlt
mov
(bad)
hlt
mov
(bad)
hlt
mov
(bad)
fld
add
fld
mov
fld
add
fld
mov
or
add
add
add
mov
add
push
add
add
add
add
scas
add
add
inc
inc
add
or
or
add
add
cmp
cmp
inc
add
add
sub
jb
dec
add
add
add
add
mov
add
xchg
add
mov
add
xor
add
add
push
add
add
add
add
add
add
pop
add
stc
add
add
mov
or
cmp
inc
mov
push
push
sub
or
stos
and
cmp
js
xchg
mov
jne
push
dec
outs
xor
xchg
jno
scas
call
add
out
mov
or
outs
xor
out
add
inc
inc
add
or
or
add
dec
add
xor
add
add
add
stos
pop
fcom
paddsw
js
inc
cli
call
mov
(bad)
xchg
js
xchg
stc
or
add
add
mov
call
mov
inc
cmp
fsub
mov
jae
fild
fstp
add
add
jae
jae
inc
inc
aad
inc
add
xor
or
mov
inc
mov
out
mov
or
or
or
add
cmp
cmp
jb
cmp
inc
add
add
add
fld
inc
add
add
add
fld
add
add
xchg
add
add
add
call
add
add
add
add
add
add
add
add
add
loop
cmp
cmp
cmp
cmp
jge
(bad)
cli
add
add
add
add
add
add
add
add
str
add
add
add
add
js
cmp
cmp
sldt
add
add
add
add
add
add
loop
jb
jge
dec
add
add
rol
push
add
add
add
add
add
add
add
add
add
cmp
(bad)
cmp
add
add
rol
sub
cmp
mov
add
str
add
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
cmp
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
dec
add
add
add
mov
add
add
add
add
add
add
add
add
call
add
add
add
add
add
add
add
cmp
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
and
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
outs
add
add
jae
push
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
xor
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
jle
add
add
add
(bad)
loop
test
or
cmp
jge
jp
xor
ds
add
inc
add
xchg
fadd
add
cmp
add
add
add
inc
in
jbe
jbe
pop
inc
in
in
in
in
in
in
enter
add
add
and
add
inc
add
or
xchg
aas
mov
mov
add
add
jp
add
sti
jnp
mov
out
(bad)
mov
xchg
aas
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
adc
mov
or
inc
mov
adc
jnp
mov
add
add
dec
add
add
jnp
mov
add
add
adc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
mov
jp
add
cmp
cmc
jnp
mov
add
add
push
mov
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
jnp
mov
(bad)
or
mov
add
add
jp
add
lods
mov
(bad)
mov
add
add
not
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
sar
(bad)
mov
(bad)
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
sti
add
add
add
add
add
mov
mov
add
jmp
mov
mov
jmp
mov
mov
mov
add
add
ffree
mov
scas
ffree
mov
jae
(bad)
mov
mov
mov
add
add
mov
sti
add
add
(bad)
(bad)
inc
add
add
add
add
ffree
mov
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
sub
(bad)
mov
jae
(bad)
mov
bound
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
ffree
mov
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
rol
jecxz
add
adc
rol
pusha
rol
jae
(bad)
mov
rol
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
(bad)
rol
pusha
rol
jae
(bad)
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
rol
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
ffree
mov
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
mov
add
add
jp
add
push
ffree
mov
jae
(bad)
mov
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
ffree
mov
add
add
dec
add
add
ffree
mov
jmp
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
mov
fs
mov
mov
out
mov
mov
add
add
jecxz
add
(bad)
ffree
mov
test
mov
add
add
out
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
ffree
mov
(bad)
mov
mov
add
add
jecxz
add
faddp
(bad)
mov
rol
(bad)
mov
add
add
(bad)
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
ret
jp
add
cld
ret
rol
(bad)
mov
add
add
fimul
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
or
mov
or
ret
jp
add
mov
ret
xor
add
or
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
ret
mov
mov
mov
add
add
jecxz
add
pop
jmp
mov
cmp
(bad)
mov
add
add
mov
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
ja
mov
jecxz
add
pop
jmp
mov
cmp
(bad)
mov
add
add
sbb
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
mov
pop
ja
mov
jp
add
xchg
jmp
mov
xor
add
pop
ja
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
pop
mov
mov
iret
pop
mov
mov
mov
add
lods
fwait
mov
mov
fs
mov
mov
fimul
mov
mov
sbb
mov
mov
or
mov
mov
add
add
jp
add
daa
mov
mov
out
(bad)
mov
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
mov
add
add
dec
add
add
mov
mov
or
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
mov
out
add
add
add
add
mov
mov
scas
add
add
add
add
mov
mov
mov
mov
jecxz
add
mov
test
mov
cmp
(bad)
mov
push
(bad)
mov
lods
inc
mov
add
add
(bad)
pop
mov
add
add
add
add
add
add
test
mov
add
add
dec
add
add
test
mov
add
add
(bad)
pop
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
test
mov
scas
add
add
add
add
mov
mov
and
(bad)
mov
dec
add
add
test
mov
cs
mov
xor
(bad)
mov
iret
pop
mov
add
(bad)
(bad)
inc
add
add
add
add
inc
mov
add
add
dec
add
add
inc
mov
iret
pop
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
mov
jp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
mov
add
add
jecxz
add
daa
inc
mov
push
(bad)
mov
add
add
or
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
xchg
inc
mov
xor
add
and
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
test
mov
jb
add
add
add
stos
fwait
mov
mov
add
add
mov
add
mov
add
mov
add
add
lods
fwait
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
mov
mov
cmp
add
add
or
add
add
add
add
add
add
add
add
add
dec
mov
mov
mov
add
jmp
mov
mov
mov
add
pusha
add
add
add
add
add
add
add
mov
xchg
dec
mov
add
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
popf
dec
mov
mov
add
add
aas
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
mov
add
add
add
add
cmp
mov
add
add
aas
or
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fwait
mov
mov
add
add
jp
add
or
(bad)
jp
mov
add
add
fs
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
mov
add
add
add
add
jmp
mov
mov
neg
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
mov
add
pusha
mov
mov
add
add
jp
add
cmp
mov
fwait
popa
mov
add
pusha
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
jp
mov
lea
mov
jp
add
mov
mov
mov
add
add
lea
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
jp
mov
sbb
mov
popf
xchg
mov
pop
mov
mov
mov
mov
fwait
sti
mov
out
mov
jae
mov
lods
dec
mov
mov
add
add
jp
add
jae
mov
mov
add
add
lods
dec
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
outs
dec
mov
mov
add
add
jecxz
add
push
jecxz
mov
rol
(bad)
mov
add
add
outs
dec
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
sti
add
add
add
add
mov
add
add
mov
add
add
add
dec
mov
mov
jecxz
add
sbb
add
xchg
(bad)
mov
mov
fisub
mov
mov
mov
mov
mov
mov
or
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
mov
add
dec
mov
mov
add
add
jp
add
iret
(bad)
mov
mov
add
add
cmc
dec
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
sahf
mov
mov
jecxz
add
test
add
cmc
(bad)
mov
mov
sbb
mov
mov
sbb
mov
mov
push
sahf
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
mov
mov
add
add
mov
mov
mov
rol
mov
mov
push
sahf
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
sti
add
add
add
add
sahf
mov
mov
add
add
mov
mov
mov
rol
mov
mov
lods
int3
mov
add
add
add
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
cmp
mov
add
add
add
add
xchg
mov
mov
cmp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
mov
add
add
add
add
add
mov
mov
xchg
dec
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
mov
mov
adc
sub
add
xor
add
add
add
mov
popf
mov
add
popf
mov
add
int3
mov
mov
add
add
jp
add
add
mov
mov
ror
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
int3
mov
mov
add
add
jp
add
jb
mov
mov
add
add
aas
int3
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
mov
add
jecxz
add
sbb
add
out
mov
mov
aas
sti
mov
mov
cmp
sti
mov
mov
cmp
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
stos
add
add
add
add
mov
add
add
add
mov
sti
mov
mov
add
mov
add
add
stos
and
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
and
add
add
jecxz
add
test
add
push
sti
mov
mov
add
mov
iret
sti
mov
mov
cmp
add
add
add
sti
add
add
(bad)
(bad)
inc
add
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
sti
mov
add
add
add
add
add
sti
mov
mov
rol
mov
mov
and
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
push
mov
add
add
add
add
fld
mov
mov
fldcw
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
fiadd
mov
mov
add
add
jp
add
cmp
test
mov
fiadd
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
mov
mov
add
add
jp
add
fwait
test
mov
add
add
bound
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
mov
mov
add
add
add
add
(bad)
sbb
mov
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
sbb
add
add
add
add
stos
sbb
mov
add
add
mov
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
sbb
add
nop
mov
mov
add
add
jp
add
push
mov
mov
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
add
repz
mov
add
add
jp
add
neg
mov
mov
add
add
and
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
sbb
add
mov
add
add
add
add
(bad)
repnz
mov
add
add
lods
inc
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
repnz
add
mov
add
add
add
add
or
mov
mov
add
add
lods
dec
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
dec
mov
fimul
and
add
outs
add
add
add
add
push
mov
ficom
mov
add
add
rol
add
mov
mov
add
add
xor
add
add
add
bound
mov
add
mov
add
add
jecxz
add
sti
add
add
popf
mov
mov
neg
mov
mov
add
mov
add
pop
mov
add
add
add
add
add
add
add
test
mov
mov
add
add
(bad)
(bad)
inc
add
add
add
add
popf
mov
add
add
add
add
popf
mov
mov
test
mov
add
add
iret
pop
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
mov
jecxz
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
jg
mov
add
add
mov
mov
mov
test
mov
add
add
bound
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
popf
mov
add
sti
mov
jp
add
jae
mov
mov
add
add
fwait
sti
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
aas
jg
mov
add
add
and
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
fiadd
mov
add
add
add
add
idiv
mov
add
add
fiadd
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
jg
mov
cs
mov
dec
add
add
sub
mov
add
jg
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
sub
add
fisub
mov
jp
add
pop
sub
mov
mov
adc
add
add
add
add
(bad)
(bad)
inc
add
add
add
aas
sub
add
add
add
dec
add
add
sub
add
adc
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
sub
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
adc
mov
jp
add
scas
cwde
mov
mov
add
add
aas
adc
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
cwde
mov
add
add
mov
mov
add
add
out
add
add
add
add
imul
pop
cwde
mov
add
imul
pop
cwde
mov
add
add
add
cwde
mov
mov
sub
mov
sti
lods
mov
mov
(bad)
pop
mov
add
add
add
add
add
add
add
test
mov
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
cwde
mov
add
add
mov
cwde
mov
mov
lods
mov
mov
add
add
iret
pop
mov
add
add
add
(bad)
(bad)
inc
add
add
add
add
inc
mov
jp
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
lods
mov
add
add
add
add
add
lods
mov
mov
add
add
sbb
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
lods
mov
add
add
add
add
daa
lods
mov
mov
add
add
shr
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
push
mov
add
add
outs
add
add
add
add
push
mov
ficom
mov
add
add
jecxz
add
test
add
add
mov
mov
push
hlt
mov
mov
test
mov
mov
mov
mov
(bad)
pop
mov
add
add
add
add
mov
add
bound
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
hlt
mov
add
add
mov
hlt
mov
mov
(bad)
hlt
mov
mov
xor
mov
add
pop
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
inc
mov
mov
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
hlt
mov
mov
out
popa
mov
mov
add
add
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
popa
mov
mov
test
mov
add
add
jae
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
mov
mov
xor
add
ficom
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
popa
mov
add
add
add
add
push
popa
mov
mov
add
add
popf
xchg
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
popa
mov
add
add
add
add
std
popa
mov
mov
or
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
(bad)
(bad)
call
add
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
mov
dec
add
add
pop
mov
add
add
(bad)
(bad)
(bad)
dec
add
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
sbb
(bad)
mov
jp
add
push
mov
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
movs
add
mov
jp
add
cmc
pop
mov
add
add
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
cld
es
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
das
adc
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
jns
dec
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
xchg
dec
mov
test
(bad)
inc
add
add
add
add
add
div
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
sbb
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
dec
mov
test
(bad)
(bad)
fistp
dec
mov
add
add
cmp
(bad)
inc
add
add
add
loope
dec
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
aaa
adc
test
(bad)
inc
add
add
adc
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
das
mov
add
dec
mov
add
add
push
mov
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
and
dec
mov
and
dec
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
dec
mov
fiadd
add
mov
dec
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
add
add
and
jp
add
add
add
and
dec
add
add
add
add
add
push
(bad)
(bad)
inc
add
add
add
fdivr
mov
mov
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
dec
mov
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
dec
mov
add
add
shr
dec
mov
iret
xchg
mov
add
addr16
add
add
mov
(bad)
(bad)
(bad)
inc
add
add
inc
dec
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
and
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
addr16
jp
test
(bad)
inc
add
add
jp
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
das
mov
(bad)
inc
add
add
mov
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
scas
sti
jp
add
add
test
(bad)
inc
add
add
add
add
add
cdq
sbb
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
sbb
add
add
add
cmp
(bad)
inc
add
add
add
sub
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
dec
pop
jp
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
xor
add
add
add
daa
(bad)
(bad)
inc
add
add
jp
dec
or
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
dec
aad
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
lahf
aam
mov
add
add
or
jp
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jp
in
loop
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jp
lods
loop
mov
test
(bad)
inc
add
add
(bad)
inc
add
add
add
add
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
add
cmc
(bad)
(bad)
inc
add
add
add
push
pop
jp
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jp
xor
add
add
add
cmc
(bad)
(bad)
inc
add
add
jp
in
sar
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
jp
mov
add
add
add
(bad)
(bad)
inc
add
add
jp
in
jp
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
jmp
add
add
add
cmc
(bad)
(bad)
inc
add
add
add
(bad)
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
jp
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
es
mov
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
fwait
pusha
jp
add
add
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
int
jp
add
add
test
(bad)
inc
add
add
add
add
add
out
jp
cmp
jp
test
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
pop
push
add
and
mov
cld
fbld
add
fbld
add
add
add
(bad)
(bad)
inc
add
add
jp
add
add
xchg
adc
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
scas
add
outs
adc
mov
(bad)
(bad)
(bad)
inc
add
add
add
mov
add
push
mov
add
(bad)
(bad)
inc
add
add
add
sbb
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
add
mov
mov
mov
mov
mov
add
add
add
add
not
mov
(bad)
(bad)
(bad)
inc
add
add
je
mov
(bad)
or
add
(bad)
(bad)
inc
add
add
add
jp
add
stos
addr16
addr16
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
adc
add
add
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
mov
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
addr16
addr16
add
add
add
add
mov
add
(bad)
(bad)
inc
add
add
add
add
add
add
mov
add
(bad)
(bad)
inc
add
add
add
add
add
mov
(bad)
(bad)
(bad)
inc
add
add
pop
add
iret
pop
mov
add
(bad)
(bad)
inc
add
add
stos
add
(bad)
pop
mov
add
add
add
add
add
add
add
mov
xor
mov
(bad)
addr16
xor
mov
mov
add
add
xor
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
add
pop
ja
mov
(bad)
(bad)
(bad)
inc
add
add
add
bound
mov
cmc
xor
mov
add
add
outs
and
add
sti
ins
mov
add
ja
mov
(bad)
(bad)
(bad)
inc
add
add
add
mov
add
pop
ins
mov
mov
add
add
loopne
add
cmp
mov
shl
mov
add
add
jne
dec
mov
outs
ins
mov
add
ja
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
or
mov
(bad)
addr16
add
add
add
add
mov
add
mov
(bad)
(bad)
(bad)
inc
add
add
add
aaa
pop
add
mov
add
add
(bad)
(bad)
inc
add
add
add
add
add
out
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
mov
jae
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
add
pop
mov
add
(bad)
(bad)
inc
add
add
stos
add
(bad)
pop
mov
add
add
add
add
add
add
add
add
sbb
mov
mov
mov
mov
(bad)
addr16
mov
mov
daa
pop
add
outs
mov
add
push
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
icebp
add
ficom
mov
(bad)
(bad)
(bad)
inc
add
add
add
jb
add
pop
mov
mov
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
pushf
add
iret
pop
mov
add
(bad)
(bad)
inc
add
add
stos
add
(bad)
pop
mov
add
add
mov
add
adc
add
out
mov
mov
les
mov
mov
sti
mov
mov
add
add
data16
add
fidiv
add
shr
mov
(bad)
(bad)
(bad)
inc
add
add
mov
add
fimul
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
cmc
mov
mov
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
ins
mov
(bad)
(bad)
(bad)
inc
add
add
outs
dec
mov
iret
pop
mov
add
(bad)
(bad)
inc
add
add
stos
add
(bad)
pop
mov
add
add
add
add
add
add
add
add
pop
mov
mov
adc
mov
mov
div
mov
add
add
(bad)
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
stos
fldenv
mov
cmp
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
add
add
add
out
mov
out
add
add
fldenv
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
dec
mov
mov
mov
mov
(bad)
mov
cmovs
mov
sbb
mov
jae
(bad)
mov
scas
dec
(bad)
mov
ror
mov
dec
(bad)
mov
test
add
and
mov
add
add
(bad)
(bad)
(bad)
push
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
add
dec
add
add
add
rcl
mov
jp
add
pop
push
mov
add
push
mov
add
add
(bad)
(bad)
(bad)
(bad)
jle
(bad)
mov
dec
add
add
push
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
dec
add
add
mov
add
jmp
mov
add
imul
dec
add
add
(bad)
(bad)
(bad)
out
jp
mov
dec
add
add
imul
dec
add
add
(bad)
(bad)
dec
(bad)
mov
add
add
imul
add
imul
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
sub
add
add
add
dec
add
add
add
sub
imul
add
imul
cmp
mov
dec
add
add
(bad)
(bad)
(bad)
mov
mov
add
popf
dec
mov
add
add
(bad)
(bad)
(bad)
call
mov
add
or
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
mov
(bad)
jecxz
mov
jp
add
outs
dec
mov
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
dec
mov
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
mov
add
lea
dec
add
add
(bad)
(bad)
push
mov
dec
add
add
sub
add
add
(bad)
(bad)
(bad)
dec
jecxz
mov
mov
(bad)
mov
icebp
jecxz
mov
(bad)
jecxz
mov
ret
mov
mov
sub
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
pop
mov
out
add
add
mov
add
add
(bad)
(bad)
(bad)
jmp
mov
out
add
add
sub
add
add
(bad)
(bad)
(bad)
push
mov
out
add
add
sub
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
add
add
add
add
add
adc
mov
imul
add
jecxz
add
dec
add
add
add
add
add
add
add
add
add
iret
and
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
push
mov
add
(bad)
mov
rol
mov
jecxz
add
and
mov
dec
add
add
(bad)
(bad)
dec
mov
add
xor
mov
dec
add
add
(bad)
(bad)
jmp
mov
adc
dec
add
add
pop
mov
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
jns
(bad)
mov
sub
adc
jp
add
aas
pop
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
push
mov
adc
jp
add
cmp
mov
dec
add
add
(bad)
(bad)
(bad)
jmp
out
add
add
sub
mov
dec
add
add
(bad)
(bad)
call
ss
mov
dec
add
add
sub
mov
dec
add
add
(bad)
(bad)
call
ss
mov
fdiv
(bad)
mov
jp
add
cs
mov
dec
add
add
(bad)
(bad)
jmp
mov
add
mov
add
add
add
(bad)
(bad)
(bad)
jmp
mov
push
(bad)
mov
jp
add
pusha
sub
mov
dec
add
add
(bad)
(bad)
(bad)
cmp
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
jnp
(bad)
mov
dec
add
add
pop
mov
add
add
imul
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
fbld
add
imul
add
(bad)
mov
mov
(bad)
mov
aam
(bad)
mov
fsub
add
push
mov
add
bt
mov
jne
(bad)
mov
push
mov
add
fsub
add
mov
(bad)
dec
mov
add
cmp
add
add
add
pusha
mov
add
add
add
movs
mov
adc
add
add
pop
mov
add
add
(bad)
(bad)
(bad)
(bad)
jp
(bad)
mov
sbb
(bad)
mov
jp
add
sub
add
dec
add
add
(bad)
(bad)
dec
sti
(bad)
mov
or
add
add
(bad)
mov
or
(bad)
mov
mov
add
add
(bad)
mov
add
add
add
dec
add
add
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
mov
dec
add
add
(bad)
(bad)
(bad)
out
sti
(bad)
mov
dec
add
add
cmps
mov
add
add
(bad)
(bad)
(bad)
(bad)
jnp
(bad)
mov
lods
test
mov
jp
add
(bad)
jo
mov
dec
add
add
(bad)
(bad)
(bad)
in
test
mov
ret
test
mov
ret
test
mov
inc
test
mov
or
add
dec
test
mov
mov
add
add
add
add
test
mov
xor
add
outs
test
mov
out
(bad)
mov
xor
(bad)
mov
(bad)
test
mov
sub
jo
mov
dec
add
add
(bad)
(bad)
call
test
mov
repz
mov
inc
test
mov
rol
add
(bad)
mov
test
(bad)
mov
hlt
sbb
mov
mov
jo
mov
dec
add
add
(bad)
(bad)
inc
sbb
mov
dec
add
add
mov
dec
add
add
(bad)
(bad)
jmp
add
add
sbb
mov
jp
add
(bad)
or
mov
dec
add
add
(bad)
(bad)
call
sbb
mov
(bad)
sbb
mov
jp
add
ror
mov
dec
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
mov
add
sbb
mov
dec
add
add
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
add
add
add
imul
add
xor
add
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
mov
xchg
repnz
mov
daa
repnz
mov
shl
(bad)
mov
stos
repnz
mov
pop
repnz
mov
dec
repnz
mov
add
(bad)
mov
pusha
repnz
mov
jp
add
or
mov
add
add
imul
add
xor
add
add
(bad)
(bad)
(bad)
push
repnz
mov
inc
repnz
mov
shl
mov
dec
popf
(bad)
mov
test
add
scas
popf
(bad)
mov
mov
(bad)
mov
jo
(bad)
mov
inc
popf
(bad)
mov
inc
popf
(bad)
mov
sub
(bad)
inc
(bad)
mov
stos
popf
(bad)
mov
jp
add
out
retf
mov
add
add
(bad)
(bad)
(bad)
jmp
popf
(bad)
mov
cmp
adc
jp
add
outs
retf
mov
add
add
(bad)
(bad)
(bad)
call
add
gs
(bad)
mov
jp
add
out
mov
add
add
imul
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
jg
mov
or
(bad)
mov
in
jg
mov
push
jg
mov
inc
jg
mov
sub
mov
cmp
(bad)
mov
xchg
mov
scas
jg
mov
pop
jg
mov
dec
jg
mov
push
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
push
add
add
jg
mov
jp
add
cld
ins
mov
add
add
(bad)
(bad)
(bad)
push
mov
add
adc
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
cmps
sub
adc
jp
add
mov
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
sub
adc
jp
add
lods
dec
mov
add
add
(bad)
(bad)
(bad)
jmp
sub
add
add
add
dec
add
add
sub
add
not
mov
mov
jecxz
dec
add
add
add
jecxz
add
dec
add
add
mov
out
add
add
dec
mov
add
add
add
add
imul
add
dec
mov
add
add
(bad)
(bad)
(bad)
call
sub
add
mov
add
add
sub
add
icebp
sub
add
lea
add
ret
mov
jecxz
(bad)
mov
repnz
(bad)
mov
xchg
cwde
(bad)
mov
mov
add
cmps
cwde
(bad)
mov
(bad)
cwde
(bad)
mov
inc
cwde
(bad)
mov
jmp
add
add
add
add
cwde
(bad)
mov
out
(bad)
mov
aas
cwde
(bad)
mov
mov
out
mov
add
add
(bad)
(bad)
(bad)
dec
cwde
(bad)
mov
add
adc
jp
add
iret
out
mov
add
add
(bad)
(bad)
(bad)
(bad)
mov
add
add
lods
(bad)
mov
jp
add
fwait
out
mov
add
add
(bad)
(bad)
(bad)
dec
lods
(bad)
mov
inc
lods
(bad)
mov
pop
lods
(bad)
mov
cmp
add
(bad)
mov
mov
out
mov
add
add
(bad)
(bad)
(bad)
dec
lods
(bad)
mov
shr
add
mov
add
or
add
add
add
imul
add
mov
add
add
(bad)
(bad)
(bad)
dec
add
add
(bad)
mov
int3
lods
(bad)
mov
add
add
lods
(bad)
mov
pop
lods
(bad)
mov
nop
lods
(bad)
mov
lahf
lods
(bad)
mov
movs
lods
(bad)
mov
test
add
hlt
(bad)
mov
aad
(bad)
mov
cmp
(bad)
mov
jb
(bad)
mov
jb
(bad)
mov
jb
(bad)
mov
(bad)
hlt
(bad)
mov
push
hlt
(bad)
mov
mov
mov
add
add
(bad)
(bad)
(bad)
jmp
hlt
(bad)
mov
mov
add
add
(bad)
mov
jecxz
add
jb
mov
add
add
(bad)
(bad)
(bad)
push
add
add
hlt
(bad)
mov
jp
add
shl
add
dec
add
add
adc
popf
add
add
mov
mov
dec
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
hlt
(bad)
mov
mov
add
add
add
addr16
(bad)
mov
dec
popa
(bad)
mov
ins
popa
(bad)
mov
inc
popa
(bad)
mov
ret
popa
(bad)
mov
inc
popa
(bad)
mov
ret
popa
(bad)
mov
jno
(bad)
mov
dec
add
add
in
mov
add
add
(bad)
(bad)
(bad)
(bad)
mov
mov
add
cmp
add
add
add
(bad)
(bad)
(bad)
dec
popa
(bad)
mov
xor
add
add
popa
(bad)
mov
jecxz
add
out
mov
add
add
imul
add
add
add
add
(bad)
(bad)
(bad)
push
add
add
popa
(bad)
mov
(bad)
pop
(bad)
mov
popf
pop
(bad)
mov
scas
pop
(bad)
mov
xor
(bad)
mov
sub
(bad)
mov
xor
(bad)
mov
cli
pop
(bad)
mov
jae
(bad)
mov
bound
(bad)
mov
pop
pop
(bad)
mov
or
(bad)
mov
rcr
(bad)
mov
mov
(bad)
mov
out
(bad)
mov
aas
pop
(bad)
mov
pop
pop
(bad)
mov
adc
add
add
add
add
(bad)
mov
xchg
pop
(bad)
mov
cmc
pop
(bad)
mov
ficomp
(bad)
mov
lods
add
add
add
add
add
(bad)
(bad)
(bad)
inc
pop
(bad)
mov
ss
(bad)
mov
jp
add
mov
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
push
scas
(bad)
mov
js
(bad)
mov
pop
scas
(bad)
mov
xor
adc
mov
inc
mov
add
add
imul
add
inc
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
int3
scas
(bad)
mov
call
add
add
add
add
scas
(bad)
mov
les
add
jnp
(bad)
mov
jp
(bad)
mov
jg
(bad)
mov
xchg
add
test
add
dec
add
sbb
add
ins
add
repnz
add
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
add
test
dec
add
add
(bad)
(bad)
jmp
add
imul
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
sub
add
xchg
add
add
add
enter
jecxz
add
xchg
add
imul
add
inc
mov
add
add
(bad)
(bad)
(bad)
push
xchg
(bad)
mov
out
(bad)
mov
add
add
jp
add
push
xchg
(bad)
mov
not
mov
pop
std
jecxz
jp
add
jecxz
add
mov
add
push
inc
mov
out
add
add
inc
mov
add
add
add
add
(bad)
(bad)
(bad)
dec
xchg
(bad)
mov
dec
add
add
inc
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
dec
add
add
mov
dec
add
add
(bad)
(bad)
(bad)
mov
mov
add
(bad)
or
add
add
(bad)
(bad)
(bad)
dec
xchg
(bad)
mov
movs
xchg
(bad)
mov
std
xchg
(bad)
mov
jle
(bad)
mov
fst
add
mov
add
add
add
addr16
mov
pop
adc
mov
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
movups
mov
sbb
(bad)
mov
jae
(bad)
mov
cwde
add
add
or
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
xor
(bad)
mov
(bad)
adc
mov
adc
(bad)
mov
dec
adc
mov
mov
or
add
dec
add
add
(bad)
(bad)
inc
(bad)
mov
rcl
mov
jp
add
jae
mov
add
add
imul
add
mov
add
add
(bad)
(bad)
(bad)
(bad)
out
xchg
(bad)
mov
pop
xchg
(bad)
mov
setno
mov
push
xchg
(bad)
mov
mov
add
add
xchg
(bad)
mov
ds
(bad)
mov
ds
(bad)
mov
test
(bad)
mov
and
add
mov
(bad)
mov
mov
(bad)
mov
mov
(bad)
mov
out
(bad)
mov
xor
(bad)
mov
(bad)
xchg
(bad)
mov
(bad)
xchg
(bad)
mov
(bad)
xchg
(bad)
mov
pop
xchg
(bad)
mov
adc
add
xchg
(bad)
mov
mov
(bad)
(bad)
jg
(bad)
mov
pop
out
mov
ins
out
mov
inc
out
mov
ret
out
mov
inc
out
mov
or
(bad)
mov
dec
out
mov
in
(bad)
mov
test
add
(bad)
aad
mov
dec
add
add
(bad)
(bad)
dec
out
mov
daa
out
mov
mov
add
add
(bad)
mov
mov
mov
add
add
(bad)
(bad)
(bad)
push
add
add
out
mov
mov
(bad)
(bad)
jmp
out
mov
lahf
out
mov
inc
out
mov
dec
ffreep
mov
popf
ffreep
mov
adc
(bad)
mov
imul
mov
retf
ffreep
mov
or
add
add
(bad)
mov
or
(bad)
mov
mov
add
add
(bad)
mov
and
add
add
add
add
ffreep
mov
mov
(bad)
mov
add
(bad)
mov
pop
ffreep
mov
adc
(bad)
mov
sbb
(bad)
mov
aaa
ffreep
mov
int
(bad)
mov
das
ffreep
mov
neg
(bad)
mov
movs
ffreep
mov
test
(bad)
mov
test
mov
scas
addr16
mov
mov
(bad)
mov
jo
(bad)
mov
inc
addr16
mov
fisub
mov
sub
mov
dec
addr16
mov
mov
add
add
add
add
addr16
mov
xor
mov
outs
addr16
mov
out
(bad)
mov
xor
(bad)
mov
retf
add
add
aam
mov
dec
add
add
adc
sbb
add
cmc
push
mov
add
add
(bad)
(bad)
(bad)
jmp
add
add
addr16
mov
jle
(bad)
mov
frstor
mov
mov
add
add
(bad)
mov
xor
mov
fnstenv
(bad)
mov
or
(bad)
mov
inc
xor
mov
and
add
add
xor
mov
jmp
add
add
xor
mov
mov
mov
add
add
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
call
xor
mov
fidiv
(bad)
mov
jp
add
mov
mov
add
add
imul
add
mov
add
add
(bad)
(bad)
(bad)
push
ins
(bad)
mov
pop
ins
(bad)
mov
mov
mov
cmps
ins
(bad)
mov
(bad)
ins
(bad)
mov
inc
ins
(bad)
mov
push
ins
(bad)
mov
js
(bad)
mov
cs
(bad)
mov
jae
(bad)
mov
bound
mov
xchg
ins
(bad)
mov
adc
mov
pop
ins
(bad)
mov
sub
dec
add
add
ins
(bad)
mov
sbb
add
add
(bad)
mov
arpl
mov
arpl
mov
arpl
mov
sbb
add
ficomp
mov
dec
add
add
(bad)
(bad)
jmp
(bad)
mov
and
(bad)
mov
retf
mov
mov
jecxz
add
push
pop
mov
add
add
(bad)
(bad)
(bad)
(bad)
clc
mov
mov
jne
(bad)
mov
add
add
jp
add
xor
add
fisttp
add
pop
mov
mov
add
add
dec
add
add
add
add
add
add
mov
mov
add
add
sbb
add
xor
(bad)
mov
add
add
test
add
sbb
(bad)
mov
add
add
sub
mov
mov
add
add
lods
add
add
mov
mov
test
(bad)
mov
add
add
cwde
add
add
mov
mov
add
add
xchg
add
add
add
add
add
add
add
add
mov
mov
add
add
add
add
mov
mov
mov
add
cmps
mov
mov
(bad)
mov
mov
inc
mov
mov
add
add
sti
add
add
add
add
add
push
mov
mov
cmpxchg
mov
sbb
add
add
add
sti
add
add
add
add
add
jae
(bad)
mov
bound
add
into
mov
mov
add
add
sti
add
add
mov
mov
mov
add
loope
(bad)
mov
div
add
xchg
adc
mov
or
add
xchg
adc
mov
and
jecxz
add
add
xchg
adc
mov
sahf
shl
add
add
xchg
adc
mov
rol
jecxz
add
add
xchg
adc
mov
jp
jecxz
add
add
xchg
adc
mov
sub
jecxz
add
add
xchg
adc
mov
inc
jmp
mov
mov
add
add
add
bound
mov
repnz
add
add
add
inc
mov
add
add
add
add
add
add
add
add
add
add
dec
add
add
inc
mov
add
add
add
add
dec
add
add
add
add
add
pop
add
add
add
pusha
inc
mov
add
add
or
add
dec
add
add
inc
mov
out
add
add
add
add
inc
mov
add
add
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
mov
mov
add
add
(bad)
mov
pop
fld
mov
ins
fld
mov
in
fld
mov
ret
fld
mov
push
fld
mov
(bad)
fld
mov
jge
(bad)
mov
fcomp
(bad)
mov
in
fld
mov
popf
add
add
add
add
add
imul
add
add
add
add
(bad)
(bad)
(bad)
call
fld
mov
adc
(bad)
mov
loope
(bad)
mov
push
fld
mov
push
fld
mov
mov
add
add
add
add
add
add
add
add
push
(bad)
mov
pop
push
(bad)
mov
mov
mov
in
push
(bad)
mov
cmps
push
(bad)
mov
xor
mov
bound
mov
into
push
(bad)
mov
lods
push
(bad)
mov
dec
push
(bad)
mov
out
(bad)
mov
aas
push
(bad)
mov
sbb
(bad)
mov
mov
mov
loope
(bad)
mov
not
mov
cmps
push
(bad)
mov
nop
push
(bad)
mov
lea
mov
mov
(bad)
mov
sbb
mov
adc
mov
sub
mov
mov
mov
ret
imul
jecxz
add
sub
mov
mov
(bad)
mov
xor
mov
ds
jecxz
add
jmp
add
add
imul
out
add
mov
add
add
imul
add
add
mov
or
mov
sub
mov
add
sbb
mov
mov
add
add
imul
fld
add
mov
(bad)
mov
jmp
mov
sbb
sub
add
or
add
add
dec
(bad)
mov
or
(bad)
mov
or
add
add
(bad)
mov
or
pop
add
add
dec
(bad)
mov
mov
add
add
(bad)
mov
and
add
add
add
add
dec
(bad)
mov
mov
(bad)
mov
add
(bad)
mov
pop
dec
(bad)
mov
adc
inc
add
sbb
xor
add
aaa
dec
(bad)
mov
int
(bad)
mov
das
dec
(bad)
mov
test
add
add
add
add
add
test
(bad)
mov
scas
sub
mov
mov
(bad)
mov
sub
(bad)
mov
mov
(bad)
mov
pop
sub
mov
push
sub
mov
js
(bad)
mov
cs
mov
xchg
(bad)
mov
inc
sub
mov
xchg
sub
mov
daa
sub
mov
loopne
(bad)
mov
mov
add
add
mov
add
pop
loop
mov
dec
add
add
adc
jge
add
stos
cmp
add
add
(bad)
(bad)
(bad)
jmp
sub
mov
imul
(bad)
mov
lea
(bad)
mov
mov
add
add
and
mov
sub
add
add
and
mov
sub
mov
xor
mov
or
mov
cmp
mov
jb
(bad)
mov
(bad)
and
mov
push
and
mov
outs
and
mov
cmp
add
add
add
add
and
mov
iret
and
mov
and
mov
loopne
(bad)
mov
mov
add
add
mov
sbb
mov
mul
mov
cmps
and
mov
nop
and
mov
gs
mov
inc
and
mov
dec
pop
(bad)
mov
sub
add
add
add
add
mov
out
pop
(bad)
mov
or
add
add
pop
(bad)
mov
rcr
mov
js
(bad)
mov
cs
(bad)
mov
fistp
mov
pop
pop
(bad)
mov
or
mov
outs
pop
(bad)
mov
out
(bad)
mov
aas
pop
(bad)
mov
aas
pop
(bad)
mov
sbb
(bad)
mov
adc
(bad)
mov
adc
(bad)
mov
dec
pop
(bad)
mov
add
mov
add
mov
sbb
add
add
pop
(bad)
mov
les
mov
rcr
inc
add
add
(bad)
mov
popf
sub
mov
adc
mov
sub
mov
dec
sub
mov
aam
(bad)
mov
aam
(bad)
mov
cmp
mov
stos
sub
mov
pop
sub
mov
sub
inc
add
add
(bad)
mov
cld
sub
mov
shr
mov
sub
mov
data16
mov
pop
sub
mov
mov
mov
loope
(bad)
mov
imul
mov
cmp
mov
retf
mov
jmp
add
sub
mov
add
inc
add
add
pop
(bad)
mov
pop
pop
(bad)
mov
mov
and
add
cmps
pop
(bad)
mov
inc
pop
(bad)
mov
loop
(bad)
mov
jb
(bad)
mov
xchg
pop
(bad)
mov
push
pop
(bad)
mov
fistp
jne
add
pop
pop
(bad)
mov
lods
pop
(bad)
mov
(bad)
pop
(bad)
mov
jbe
(bad)
mov
add
add
add
cmp
(bad)
(bad)
(bad)
jmp
add
add
pop
(bad)
mov
les
mov
(bad)
mov
jmp
(bad)
mov
(bad)
cmps
(bad)
mov
popf
cmps
(bad)
mov
scas
cmps
(bad)
mov
xor
add
sub
(bad)
push
cmps
(bad)
mov
(bad)
cmps
(bad)
mov
loop
(bad)
mov
jb
(bad)
mov
(bad)
cmps
(bad)
mov
push
cmps
(bad)
mov
outs
cmps
(bad)
mov
cmp
add
add
cmps
(bad)
mov
jmp
add
add
(bad)
mov
sub
add
cmps
(bad)
mov
imul
(bad)
mov
ja
(bad)
mov
push
cmps
(bad)
mov
push
cmps
(bad)
mov
mov
add
add
add
add
add
add
add
add
or
mov
repz
(bad)
mov
inc
cmps
(bad)
mov
jmp
(bad)
mov
mov
add
add
(bad)
mov
fbstp
mov
and
(bad)
mov
out
jo
mov
push
jo
mov
inc
jo
mov
and
mov
push
jo
mov
push
jo
mov
jno
(bad)
mov
cld
jo
mov
shl
mov
and
mov
in
(bad)
mov
imul
add
add
add
add
add
add
add
add
aad
(bad)
mov
adc
add
add
add
add
jo
mov
call
add
add
add
std
jo
mov
jle
(bad)
mov
fnsave
mov
jp
(bad)
mov
jg
(bad)
mov
xchg
or
mov
dec
or
mov
ins
or
mov
not
mov
xchg
adc
mov
not
mov
out
jecxz
mov
add
mov
add
push
add
add
add
bound
mov
add
add
or
add
dec
add
add
push
mov
out
add
add
mov
mov
mov
mov
add
add
(bad)
(bad)
(bad)
call
or
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
or
mov
dec
add
add
push
mov
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
push
mov
add
add
(bad)
(bad)
(bad)
call
mov
add
cs
mov
add
add
(bad)
(bad)
(bad)
inc
mov
add
daa
push
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
add
add
add
add
add
pop
add
mov
add
add
add
jecxz
add
dec
add
add
push
mov
add
add
add
add
add
add
not
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
push
mov
add
cmp
mov
add
add
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
dec
add
add
(bad)
mov
jp
add
xchg
sub
add
add
(bad)
(bad)
(bad)
jmp
xor
mov
dec
add
add
sub
add
add
(bad)
(bad)
(bad)
jmp
retf
(bad)
mov
repnz
(bad)
mov
jp
add
pop
jb
mov
dec
add
add
(bad)
(bad)
jmp
mov
inc
retf
(bad)
mov
jp
add
push
jb
mov
dec
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
mov
mov
add
mov
mov
add
add
(bad)
(bad)
(bad)
dec
retf
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
inc
retf
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
out
retf
(bad)
mov
dec
add
add
dec
mov
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
dec
mov
add
add
(bad)
(bad)
(bad)
jmp
ins
(bad)
mov
xor
imul
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cli
ins
(bad)
mov
sbb
imul
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
push
mov
add
add
dec
add
add
add
les
mov
jp
add
mov
add
add
dec
mov
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
or
add
add
(bad)
(bad)
(bad)
dec
(bad)
mov
add
add
add
cmps
ins
(bad)
mov
jecxz
add
or
add
add
(bad)
(bad)
(bad)
inc
ins
(bad)
mov
dec
dec
(bad)
mov
jp
add
push
mov
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
ins
dec
(bad)
mov
jp
add
cmc
or
add
add
(bad)
(bad)
(bad)
(bad)
cmp
(bad)
mov
pop
dec
(bad)
mov
jp
add
(bad)
cli
mov
add
add
(bad)
(bad)
(bad)
call
mov
add
or
add
add
add
(bad)
(bad)
(bad)
jmp
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
push
dec
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
jmp
add
out
(bad)
mov
xor
(bad)
mov
jecxz
add
sbb
mov
add
add
(bad)
(bad)
(bad)
jmp
add
add
(bad)
mov
scas
out
(bad)
mov
mov
(bad)
mov
jne
(bad)
mov
scas
out
(bad)
mov
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
jmp
add
xlat
out
(bad)
mov
jp
add
pop
stos
mov
add
add
(bad)
(bad)
(bad)
jmp
add
add
mov
add
push
stos
mov
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
stos
mov
add
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
add
popf
and
add
add
(bad)
(bad)
(bad)
inc
mov
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
dec
add
add
mov
add
outs
and
add
and
add
add
(bad)
(bad)
(bad)
jmp
add
xlat
mov
mov
jp
add
sbb
mov
add
add
(bad)
(bad)
(bad)
inc
mov
mov
popf
mov
mov
jp
add
lea
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
(bad)
mov
add
add
fiadd
add
pop
dec
add
dec
add
add
add
dec
add
add
mov
add
sub
mov
add
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
jmp
mov
mov
jae
(bad)
mov
jecxz
add
iret
push
mov
dec
add
add
(bad)
(bad)
inc
add
add
mov
mov
leave
mov
mov
jecxz
add
pusha
push
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
dec
dec
mov
add
add
dec
add
add
add
popf
cmp
mov
jp
add
jmp
mov
add
cmp
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
dec
add
add
mov
out
add
add
cmp
mov
call
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
popf
in
(bad)
mov
xchg
in
(bad)
mov
mov
(bad)
mov
mov
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
dec
add
add
(bad)
mov
out
add
add
add
add
add
dec
add
add
(bad)
(bad)
(bad)
in
in
(bad)
mov
dec
add
add
(bad)
mov
add
add
(bad)
(bad)
(bad)
jmp
in
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
dec
add
add
(bad)
mov
add
add
(bad)
(bad)
(bad)
call
add
add
adc
jp
add
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
inc
mov
jp
add
add
mov
dec
add
add
(bad)
(bad)
(bad)
(bad)
inc
mov
dec
add
add
js
mov
dec
add
add
(bad)
(bad)
(bad)
mov
add
add
adc
jp
add
cs
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
dec
dec
mov
add
add
dec
add
add
add
fs
mov
jp
add
mov
add
add
js
mov
dec
add
add
(bad)
(bad)
push
(bad)
mov
int3
inc
mov
jp
add
les
mov
dec
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
inc
(bad)
mov
sti
inc
(bad)
mov
mov
mov
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
inc
inc
(bad)
mov
inc
inc
(bad)
mov
jecxz
add
outs
dec
mov
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
dec
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
sbb
(bad)
mov
jp
add
add
mov
dec
add
add
(bad)
(bad)
(bad)
fiadd
mov
and
mov
jp
add
add
add
dec
add
add
(bad)
(bad)
jmp
adc
dec
add
add
xchg
mov
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
xchg
mov
add
add
(bad)
(bad)
(bad)
(bad)
fadd
mov
dec
add
add
xchg
mov
add
add
(bad)
(bad)
(bad)
jmp
inc
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
add
std
xchg
mov
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
add
dec
add
add
(bad)
(bad)
jmp
mov
add
mov
add
add
(bad)
(bad)
(bad)
dec
or
mov
dec
add
add
mov
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
clc
or
mov
push
(bad)
mov
jp
add
pusha
mov
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
add
dec
add
add
add
(bad)
mov
adc
jp
add
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
or
mov
test
mov
jp
add
jb
mov
add
add
(bad)
(bad)
(bad)
inc
mov
add
or
add
dec
add
add
add
add
(bad)
(bad)
(bad)
fmul
add
jb
(bad)
mov
jb
(bad)
mov
jecxz
add
adc
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
(bad)
mov
jp
add
lea
add
dec
add
add
add
add
(bad)
(bad)
dec
or
adc
dec
add
add
mov
dec
add
add
add
add
(bad)
(bad)
call
add
add
add
add
sub
mov
dec
add
add
add
dec
add
add
mov
out
add
add
add
or
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
sub
mov
add
add
dec
add
add
add
xchg
jne
mov
jp
add
fwait
jne
mov
fidiv
mov
dec
add
add
(bad)
(bad)
push
mov
add
lods
pop
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
push
aad
mov
pmullw
mov
jne
(bad)
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
call
aad
mov
and
(bad)
mov
loopne
(bad)
mov
jecxz
add
rcr
mov
dec
add
add
add
add
(bad)
(bad)
inc
mov
add
xchg
pop
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
mov
mov
add
mov
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
aam
mov
xor
(bad)
mov
aad
(bad)
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
fcom
(bad)
mov
pop
aam
mov
jecxz
add
bound
mov
dec
add
add
add
add
(bad)
(bad)
dec
aam
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
dec
aam
mov
dec
add
add
push
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
push
(bad)
mov
jecxz
add
lods
sbb
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
push
(bad)
mov
dec
add
add
sbb
add
add
add
add
(bad)
(bad)
(bad)
jmp
push
(bad)
mov
mov
add
add
push
(bad)
mov
jecxz
add
adc
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
mov
add
lea
mov
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
mov
add
pop
in
mov
dec
add
add
add
add
(bad)
(bad)
(bad)
cmp
adc
dec
add
add
in
mov
dec
add
add
add
add
(bad)
(bad)
jmp
mov
add
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
jl
(bad)
mov
xchg
mov
mov
adc
add
pop
mov
mov
dec
mov
mov
mov
in
mov
dec
add
add
add
add
(bad)
(bad)
jmp
(bad)
mov
inc
mov
mov
jp
add
lods
jge
mov
dec
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
dec
add
add
add
mov
mov
out
add
add
jge
mov
jae
mov
add
add
(bad)
(bad)
(bad)
inc
pop
(bad)
mov
push
pop
(bad)
mov
jp
add
aas
jge
mov
dec
add
add
add
add
(bad)
(bad)
(bad)
ds
(bad)
mov
dec
pop
(bad)
mov
jp
add
fidivr
mov
dec
add
add
add
add
(bad)
(bad)
call
pop
(bad)
mov
dec
add
add
add
dec
add
add
add
add
(bad)
(bad)
dec
pop
(bad)
mov
pop
pop
(bad)
mov
jp
add
fisubr
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
dec
mov
add
add
dec
add
add
add
shr
mov
out
add
add
mov
add
mov
add
add
(bad)
(bad)
(bad)
dec
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
call
mov
add
add
add
dec
add
add
add
add
(bad)
(bad)
dec
(bad)
mov
fiadd
add
jg
dec
mov
dec
add
add
add
dec
add
add
mov
adc
jecxz
add
out
mov
add
mov
mov
add
add
(bad)
(bad)
(bad)
call
ret
(bad)
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
movs
ret
(bad)
mov
xlat
ret
(bad)
mov
(bad)
jp
add
jnp
(bad)
mov
mov
mov
add
dec
add
add
add
add
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
add
dec
add
add
add
add
(bad)
(bad)
(bad)
fiadd
mov
jge
(bad)
mov
jp
add
ficom
mov
dec
add
add
add
add
(bad)
(bad)
push
inc
(bad)
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
inc
(bad)
mov
es
(bad)
mov
jp
add
pop
push
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
inc
(bad)
mov
nop
inc
(bad)
mov
lahf
inc
(bad)
mov
jecxz
add
and
mov
dec
add
add
add
add
(bad)
(bad)
jmp
mov
add
(bad)
mov
dec
add
add
add
add
(bad)
(bad)
dec
(bad)
call
faddp
mov
jp
add
stos
dec
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
faddp
mov
jae
(bad)
mov
jae
(bad)
mov
(bad)
faddp
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
adc
add
(bad)
rol
mov
add
add
dec
add
add
add
add
mov
jecxz
add
mov
add
lods
outs
mov
out
add
add
dec
mov
add
outs
mov
add
add
add
add
(bad)
(bad)
(bad)
push
faddp
mov
fcmovu
(bad)
mov
nop
faddp
mov
gs
mov
rcr
mov
(bad)
loop
mov
popa
loop
mov
(bad)
(bad)
mov
sti
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
outs
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
mov
add
sti
xor
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
clc
loop
mov
jbe
(bad)
mov
jecxz
add
or
add
add
add
add
add
(bad)
(bad)
(bad)
call
mov
add
pop
xor
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
push
loop
mov
add
add
jp
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
jl
add
push
jo
mov
add
add
dec
add
add
add
fidiv
mov
add
add
add
add
add
add
div
mov
out
add
add
mov
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
dec
add
add
and
dec
add
add
add
add
(bad)
(bad)
call
(bad)
mov
fiadd
add
push
xor
mov
dec
add
add
add
dec
add
add
mov
add
pop
and
aas
and
dec
add
add
(bad)
(bad)
jmp
fadd
mov
dec
add
add
and
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
mov
adc
(bad)
mov
jecxz
add
sti
mov
add
dec
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
adc
dec
add
add
add
mov
mov
out
add
add
mov
add
jae
mov
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
movs
fadd
mov
jp
add
aas
mov
add
dec
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
jecxz
add
dec
add
add
jae
mov
mov
mov
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
inc
(bad)
mov
dec
inc
(bad)
mov
retf
inc
(bad)
mov
jecxz
add
jae
mov
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
dec
mov
test
add
add
add
add
add
dec
add
add
add
add
add
jecxz
add
dec
add
add
push
mov
out
add
add
jae
mov
xchg
push
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
dec
add
add
mov
out
add
add
push
mov
add
add
add
add
(bad)
(bad)
(bad)
push
inc
(bad)
mov
test
mov
add
lea
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
mov
and
(bad)
mov
retf
cmp
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
cmp
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
mov
add
aas
fsub
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
fsub
add
add
add
add
(bad)
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
mov
jle
(bad)
mov
jnp
(bad)
mov
add
(bad)
mov
sti
cmp
mov
pop
cmp
mov
fnstcw
(bad)
mov
sti
add
add
xchg
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
dec
add
add
xchg
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
imul
add
cdq
cmp
mov
jecxz
add
cmc
xchg
add
add
add
add
(bad)
(bad)
(bad)
jmp
cmp
mov
fiadd
add
cs
mov
dec
add
add
add
dec
add
add
mov
jecxz
add
lods
cmp
add
or
add
add
add
(bad)
(bad)
(bad)
inc
inc
(bad)
mov
sti
inc
(bad)
mov
pop
inc
(bad)
mov
mov
mov
cmps
inc
(bad)
mov
inc
mov
fadd
mov
stos
inc
(bad)
mov
sti
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
jb
mov
inc
dec
add
add
add
dec
add
add
add
mov
add
add
add
jecxz
add
dec
add
add
(bad)
out
add
add
cmp
add
xchg
(bad)
add
add
add
add
(bad)
(bad)
(bad)
call
inc
(bad)
mov
fiadd
add
xchg
inc
add
dec
add
add
add
dec
add
add
(bad)
out
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
call
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
clc
dec
mov
add
add
dec
add
add
add
sti
stos
mov
out
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
dec
add
add
add
dec
add
add
mov
out
add
add
add
add
mov
add
add
(bad)
(bad)
(bad)
call
mov
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
stos
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
mov
mov
dec
add
add
add
dec
add
add
add
add
(bad)
(bad)
jmp
mov
add
fisub
add
dec
add
add
add
add
(bad)
(bad)
call
(bad)
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
lds
mov
add
add
dec
add
add
add
adc
mov
add
aas
and
add
pusha
and
add
dec
add
add
(bad)
(bad)
(bad)
jmp
out
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
rol
mov
dec
add
add
mov
dec
add
add
add
add
(bad)
(bad)
call
rol
mov
dec
add
add
add
dec
add
add
add
add
(bad)
(bad)
call
rol
mov
stc
rol
mov
jecxz
add
shl
mov
dec
add
add
add
add
(bad)
(bad)
dec
rol
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
dec
rol
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
push
push
(bad)
mov
dec
add
add
mov
dec
add
add
add
add
(bad)
(bad)
(bad)
cmp
(bad)
mov
sbb
(bad)
mov
jp
add
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
dec
push
(bad)
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
push
(bad)
mov
jp
add
pusha
jno
mov
dec
add
add
add
add
(bad)
(bad)
(bad)
jle
(bad)
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
fist
mov
fiadd
add
repnz
jp
add
jp
add
jecxz
add
dec
add
add
mov
out
add
add
mov
mov
mov
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
dec
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
mov
add
add
dec
add
add
add
add
adc
jp
add
lea
mov
add
add
dec
add
add
(bad)
(bad)
(bad)
aas
push
(bad)
mov
pop
push
(bad)
mov
fiadd
add
lock
mov
jp
add
jecxz
add
dec
add
add
mov
out
add
add
scas
mov
add
mov
add
add
(bad)
(bad)
(bad)
inc
push
(bad)
mov
mov
add
add
add
add
add
add
add
jecxz
add
dec
add
add
scas
mov
out
add
add
add
add
scas
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
ja
mov
or
add
add
add
dec
add
add
add
pop
call
jp
add
xchg
call
or
add
add
add
(bad)
(bad)
(bad)
call
sub
mov
addr16
mov
fiadd
add
scas
push
add
jp
add
jecxz
add
dec
add
add
mov
add
bound
add
aas
call
dec
add
add
(bad)
(bad)
inc
sub
mov
inc
sub
mov
fiadd
add
mov
add
jp
add
jecxz
add
dec
add
add
mov
add
ficomp
add
sti
in
mov
add
add
(bad)
(bad)
(bad)
inc
sub
mov
fiadd
add
arpl
mov
dec
add
add
add
dec
add
add
adc
jecxz
add
fsubrp
mov
add
mov
add
add
(bad)
(bad)
(bad)
jmp
sub
mov
dec
add
add
in
mov
add
add
add
add
(bad)
(bad)
(bad)
jmp
(bad)
mov
add
add
dec
add
add
sub
mov
add
add
fiadd
add
sub
add
jp
add
jecxz
add
dec
add
add
mov
add
cmc
in
mov
add
inc
mov
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
dec
add
add
add
dec
add
add
mov
add
or
add
add
inc
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
fnstenv
mov
das
xchg
mov
push
jns
mov
add
add
dec
add
add
add
xchg
inc
mov
add
add
add
add
add
add
fiadd
mov
add
add
inc
mov
add
inc
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
jns
(bad)
mov
xor
out
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
push
(bad)
mov
fiadd
add
inc
dec
dec
mov
dec
add
add
add
dec
add
add
pop
mov
out
add
add
add
add
pop
mov
add
add
(bad)
(bad)
(bad)
jmp
jb
mov
fiadd
add
data16
dec
add
add
add
jp
add
dec
add
add
pop
mov
out
add
add
add
add
pop
mov
add
add
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
mov
jp
add
jecxz
add
dec
add
add
pop
mov
out
add
add
mov
add
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
and
mov
dec
add
add
add
add
(bad)
(bad)
(bad)
js
(bad)
mov
jno
(bad)
mov
cld
dec
(bad)
mov
jecxz
add
xchg
stc
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
cmp
mov
leave
dec
(bad)
mov
jp
add
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
inc
dec
(bad)
mov
xlat
dec
(bad)
mov
jp
add
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
dec
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
(bad)
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
dec
add
add
mov
add
pop
test
mov
shr
add
dec
add
add
(bad)
(bad)
(bad)
jns
(bad)
mov
dec
add
add
test
mov
dec
add
add
add
add
(bad)
(bad)
call
add
add
add
add
dec
mov
dec
add
add
add
dec
add
add
mov
add
adc
add
add
test
mov
dec
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
jp
mov
add
add
dec
add
add
add
fxch
mov
out
add
add
add
out
into
mov
add
add
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
jmp
(bad)
mov
add
add
jp
add
add
add
(bad)
(bad)
(bad)
call
or
mov
mov
add
add
add
add
add
add
add
dec
add
add
into
mov
add
add
add
add
add
add
pop
into
mov
out
add
add
mov
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
add
add
add
(bad)
cli
(bad)
mov
inc
cli
(bad)
mov
push
cli
(bad)
mov
add
add
cld
mov
add
add
add
add
(bad)
(bad)
(bad)
call
(bad)
mov
(bad)
(bad)
mov
jp
add
cs
mov
add
add
add
add
(bad)
(bad)
(bad)
push
mov
pop
cli
(bad)
mov
dec
cli
(bad)
mov
jecxz
add
out
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
std
cli
(bad)
mov
jle
(bad)
mov
mov
(bad)
mov
repnz
(bad)
mov
out
(bad)
mov
sub
(bad)
mov
inc
stos
(bad)
mov
inc
stos
(bad)
mov
and
add
jge
(bad)
mov
fld
add
pop
stos
(bad)
mov
lods
stos
(bad)
mov
(bad)
stos
(bad)
mov
mov
(bad)
mov
add
add
add
(bad)
mov
(bad)
stos
(bad)
mov
pop
stos
(bad)
mov
sub
add
stos
(bad)
mov
mov
add
mov
add
add
add
add
add
add
and
mov
pop
and
mov
mov
(bad)
mov
cmps
and
mov
(bad)
and
mov
inc
and
mov
push
and
mov
xchg
and
mov
push
and
mov
(bad)
(bad)
mov
pop
and
mov
lods
and
mov
(bad)
and
mov
add
(bad)
mov
pop
and
mov
adc
(bad)
mov
sbb
(bad)
mov
aaa
and
mov
int
(bad)
mov
retf
mov
les
(bad)
mov
shl
mov
(bad)
xsavec
hlt
xsavec
xor
(bad)
mov
sub
(bad)
mov
mov
(bad)
mov
inc
xsavec
push
xsavec
js
(bad)
mov
xsavec
xchg
(bad)
mov
aad
add
(bad)
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
aas
xsavec
cmp
(bad)
mov
jp
add
xchg
shl
dec
add
add
add
add
(bad)
(bad)
call
xsavec
sbb
mov
add
add
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
fisttp
(bad)
mov
jp
(bad)
mov
jp
(bad)
mov
sbb
mov
mov
mov
add
add
add
add
(bad)
(bad)
(bad)
(bad)
out
cmp
mov
push
cmp
mov
inc
cmp
mov
and
mov
push
cmp
mov
add
add
mov
cmp
mov
add
add
mov
cmp
mov
push
cmp
mov
cmc
mov
mov
pcmpgtb
mov
add
add
add
add
add
cmc
jmp
adc
sbb
add
or
mov
add
jmp
add
dec
add
add
(bad)
(bad)
dec
cmp
mov
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
cmp
mov
jp
add
ror
mov
add
add
cmc
xchg
mov
add
add
add
mov
inc
jns
add
push
mov
add
add
mov
cmc
dec
mov
add
add
add
add
add
dec
mov
add
add
daa
mov
add
xchg
mov
add
add
add
mov
add
lods
mov
add
add
add
add
push
mov
push
mov
add
lods
mov
add
add
add
mov
add
add
outs
mov
add
iret
mov
add
add
add
push
mov
sub
mov
add
daa
mov
add
daa
mov
add
add
add
daa
mov
add
add
jns
add
mov
add
mov
add
mov
add
lock
add
lock
add
lock
add
lock
add
lock
add
shl
add
mov
add
mov
add
shl
add
mov
add
shl
add
shl
add
shl
add
mov
add
lock
add
mov
add
(bad)
mov
add
mov
add
sub
add
clc
mov
add
mov
add
clc
mov
add
mov
add
add
clc
mov
add
mov
add
mov
add
and
add
and
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
and
add
mov
add
and
add
mov
add
iret
mov
add
iret
mov
add
sub
add
and
add
and
add
and
add
and
add
and
add
mov
add
(bad)
mov
add
mov
add
add
add
add
or
add
or
add
add
add
push
outs
mov
add
add
or
add
push
daa
mov
add
add
add
dec
mov
add
shl
add
shl
add
xchg
add
shl
add
xchg
add
mov
add
xchg
add
xchg
add
xchg
add
mov
add
mov
add
mov
add
add
add
add
(bad)
mov
add
jns
add
mov
add
dec
mov
add
dec
mov
add
add
dec
mov
add
add
add
mov
add
outs
mov
add
mov
add
mov
add
add
add
jp
xor
loop
outs
xor
jp
and
push
ds
add
jp
stos
call
xor
xor
xor
xor
jp
xor
xor
cmp
xor
and
mov
dec
and
stos
mov
(bad)
xchg
add
stc
jp
xor
(bad)
push
stos
and
and
jp
xor
push
and
add
add
xor
cmp
dec
mov
call
(bad)
add
inc
cmp
mov
add
jp
xor
xor
mov
xor
scas
inc
push
cmp
xor
sub
cmp
dec
xor
and
mov
pop
add
les
xor
dec
mov
inc
xor
ds
stos
mov
dec
mov
call
stc
bound
xchg
add
mov
call
xor
cmp
mov
xchg
add
jp
xor
xor
push
stos
and
call
ds
(bad)
cmp
xor
bound
outs
(bad)
xchg
ds
call
outs
(bad)
xchg
mov
ds
stos
mov
fdiv
dec
call
mov
xchg
in
stos
call
call
and
add
xor
stos
outs
cmp
dec
xor
push
and
call
stos
push
call
inc
ds
call
dec
call
inc
xor
xor
shl
xor
xor
call
ds
ds
add
int3
add
xor
push
cmp
jecxz
xor
xor
dec
cmp
call
scas
add
ds
ds
call
dec
call
jp
xor
push
call
dec
call
dec
mov
call
call
push
outs
add
push
jp
xor
mov
add
jae
rdpmc
mov
xor
add
mov
call
outs
jb
stos
xor
xor
bound
add
loopne
inc
xor
and
xchg
add
enter
call
add
dec
mov
call
sar
xchg
add
xor
inc
xor
xor
jecxz
and
cmp
add
jp
cmp
loop
cmp
jp
cmp
jb
dec
xchg
add
jp
cmp
js
cmp
add
jp
cmp
inc
xor
add
adc
cmp
xor
dec
mov
call
call
add
test
jb
stos
mov
or
add
dec
mov
call
inc
push
cmp
xor
cmp
mov
inc
push
ds
call
scas
xchg
add
xor
mov
in
cmp
call
cmp
call
xor
mov
mov
call
call
scas
xchg
add
call
ds
push
and
cmp
or
jb
mov
outs
cmp
jp
xor
add
outs
inc
in
ds
and
dec
sub
cmp
xor
add
add
xor
xchg
push
stos
outs
and
cmp
and
outs
and
add
xor
and
dec
xchg
add
dec
xor
fsub
add
xor
push
stos
call
mov
stos
cmp
add
dec
mov
call
and
scas
jae
add
stos
mov
add
ds
outs
and
dec
mov
call
dec
xor
add
sbb
outs
push
dec
and
dec
jb
mov
mov
stc
jp
xor
scas
add
add
mov
xor
add
push
add
stos
mov
push
stos
outs
and
add
mov
stos
outs
and
loop
call
xor
in
call
inc
in
ds
and
inc
jae
ds
pop
xor
xchg
add
jae
inc
xor
stos
outs
and
add
stos
mov
add
xor
and
call
and
push
call
xor
lds
xor
and
add
js
cmp
in
mov
outs
cmp
jp
xor
call
push
dec
xor
popa
add
push
call
add
xor
(bad)
call
add
pop
add
xor
call
jp
xor
push
fdiv
dec
call
call
xchg
add
mov
mov
call
push
fdiv
dec
call
xor
stos
call
dec
call
mov
outs
cmp
mov
push
bound
xor
ds
scas
jae
xor
mov
push
bound
xor
cmp
cmp
mov
push
bound
push
scas
bound
mov
pop
add
xor
and
add
bound
xor
ds
scas
add
icebp
add
push
cmp
call
add
fwait
add
ds
mov
call
outs
push
bound
mov
mov
fstp
xor
mov
push
bound
mov
outs
call
push
bound
mov
push
mov
in
jp
outs
push
bound
mov
add
call
in
scas
cmp
in
call
outs
push
bound
cmp
loop
scas
and
ds
cmp
ds
stos
mov
cmp
ds
(bad)
stc
xchg
add
jb
loop
push
ins
outs
cmp
mov
call
cmp
xor
dec
cmp
in
mov
outs
cmp
add
stc
bound
mov
ds
rdpmc
mov
sub
stc
cmp
add
rdpmc
mov
stc
dec
mov
pop
xchg
add
jo
rdpmc
mov
xor
xor
add
jp
xor
call
xchg
add
rdpmc
mov
mov
pop
xchg
add
push
jp
xor
stc
push
stos
and
add
jp
xor
sub
stc
cmp
add
cmp
stos
push
in
mov
outs
cmp
add
cli
bound
stos
inc
and
loop
outs
cmp
cmp
call
add
mov
call
stos
mov
add
cmp
in
mov
outs
cmp
cli
cmp
mov
add
cmp
xchg
in
stos
stos
push
stos
mov
inc
and
push
mov
cmp
add
xor
scas
call
xchg
inc
and
push
call
add
and
inc
xor
xor
mov
and
mov
shl
cmp
cmp
xor
add
cmp
call
cmp
call
ins
outs
cmp
cmp
js
in
mov
outs
cmp
add
cmp
and
stos
and
and
cli
xchg
bts
cli
inc
ins
outs
cmp
add
cmp
scas
push
and
and
xchg
add
inc
push
cmp
scas
push
and
and
dec
xor
and
xor
stc
dec
mov
add
dec
cmp
cmp
cli
or
cmp
stos
call
xor
stos
dec
ds
xor
jp
stos
call
xor
and
xor
pop
dec
jae
stos
mov
jp
stos
call
xor
pop
dec
jae
stos
mov
cmp
cmp
ds
call
dec
call
(bad)
xor
fild
stos
mov
and
add
xchg
dec
mov
call
call
scas
add
(bad)
js
jae
stos
outs
cmp
dec
xor
push
and
call
push
scas
cmp
push
in
mov
xor
jl
shl
mov
xor
add
shl
mov
and
mov
call
bound
stos
and
mov
pop
dec
xor
push
and
jecxz
call
outs
add
mov
call
add
jp
inc
dec
mov
push
stos
mov
jp
inc
dec
mov
push
stos
mov
jp
xor
stos
mov
xchg
add
inc
(bad)
cmp
dec
mov
mov
(bad)
cmp
and
mov
call
in
mov
xor
add
jecxz
xor
cmp
ds
jp
xor
xor
add
dec
and
inc
push
cmp
xor
add
leave
jp
xor
mov
xchg
(bad)
dec
push
ds
xor
mov
push
ds
and
jp
xor
cmp
cmovs
stos
add
pop
jp
xor
stos
add
pop
jp
scas
dec
mov
and
mov
cmp
call
inc
and
add
inc
push
cmp
xor
aad
mov
call
bound
stos
and
xor
cmp
stos
(bad)
stos
call
scas
xchg
add
mov
call
stos
(bad)
stos
call
scas
xchg
add
(bad)
jecxz
in
xor
stc
stos
xor
and
xor
in
stos
call
xor
xor
dec
xor
fstp
xor
cmp
cmp
push
cmp
add
dec
mov
call
push
stos
and
cmp
scas
call
cmp
add
jp
scas
dec
mov
and
add
mov
call
(bad)
stc
bound
loop
add
xor
cmp
outs
cmp
inc
jp
and
push
ds
add
jp
stos
push
call
inc
ds
call
dec
call
cmp
push
stos
inc
and
jmp
dec
mov
and
cmp
call
push
stos
call
mov
call
xor
add
or
stos
scas
and
outs
xor
add
jecxz
xor
mov
add
loop
inc
cmp
push
cmp
xor
scas
add
xor
xchg
ds
call
cmp
dec
mov
call
xor
in
call
add
(bad)
xchg
ds
call
cmp
jecxz
xor
add
xor
add
xor
xor
bound
add
inc
xor
cmp
jp
and
xor
add
(bad)
(bad)
mov
xor
add
(bad)
(bad)
(bad)
push
(bad)
(bad)
mov
add
add
ins
inc
loop
jge
and
fidivr
xor
scas
call
add
(bad)
(bad)
mov
sbb
add
inc
and
mov
dec
cmps
(bad)
out
out
(bad)
fst
fldcw
stos
cmp
ds
cmp
scas
xor
push
stc
fnstcw
push
stos
xchg
fist
mov
jb
outs
ins
(bad)
jb
(bad)
push
mov
(bad)
cmp
(bad)
cmp
dec
cmp
ins
add
xor
(bad)
mov
or
add
add
dec
call
and
add
add
add
ins
add
add
aas
mov
mov
rcr
mov
rcr
mov
rcr
mov
rcr
mov
jmp
aas
mov
add
add
add
add
jecxz
add
xor
add
xchg
add
add
add
jp
add
jecxz
add
jp
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
hlt
add
add
add
popa
add
add
add
push
add
add
add
inc
add
add
add
loop
add
jg
add
inc
add
add
add
stos
add
add
add
add
add
add
add
cmp
add
jg
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
add
add
add
add
add
jl
add
jp
add
add
add
add
add
add
add
add
or
add
hlt
add
add
add
add
add
sbb
add
add
add
add
add
add
cmp
fidiv
out
cmp
(bad)
(bad)
mov
add
add
ins
inc
loop
push
mov
dec
xor
push
and
outs
(bad)
add
add
add
out
add
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
sbb
inc
adc
add
add
add
add
jp
add
and
(bad)
mov
push
pop
(bad)
mov
rcl
(bad)
mov
lea
mov
add
hlt
add
add
add
add
(bad)
mov
cmp
mov
popf
inc
(bad)
mov
std
in
(bad)
mov
push
in
(bad)
mov
call
add
(bad)
mov
xor
(bad)
mov
xchg
call
mov
(bad)
mov
out
(bad)
mov
mov
add
add
ds
mov
fidivr
(bad)
mov
xchg
ds
mov
cmp
mov
push
ds
mov
dec
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
test
(bad)
inc
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
aas
mov
add
add
add
stos
(bad)
mov
and
mov
add
imul
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
add
mov
and
fld
scas
call
add
add
add
loop
inc
cmp
inc
mov
push
push
sub
or
stos
and
cmp
js
xchg
mov
jne
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
add
and
fld
scas
call
add
add
add
loop
inc
cmp
inc
mov
push
push
sub
or
stos
and
cmp
js
xchg
mov
jne
and
mov
fs
add
xor
xor
add
add
add
pop
retf
add
add
jl
add
add
add
xchg
leave
and
add
add
faddp
or
add
add
pop
jecxz
add
mov
add
add
add
add
test
add
add
add
jecxz
add
mov
add
add
add
add
test
add
add
add
add
sbb
icebp
mov
xchg
test
add
add
add
sar
add
and
in
fld
jge
fmul
add
xchg
enter
rol
mov
xchg
test
add
add
pop
(bad)
mov
add
mov
add
mov
add
add
add
dec
add
add
add
jp
add
(bad)
(bad)
(bad)
dec
sbb
add
add
add
add
add
add
add
test
mov
sbb
(bad)
mov
adc
test
mov
out
(bad)
mov
or
(bad)
mov
jae
(bad)
mov
cs
mov
mov
(bad)
mov
stos
test
mov
shr
(bad)
mov
mov
(bad)
mov
fldcw
(bad)
mov
lods
test
mov
add
(bad)
mov
and
(bad)
mov
cmc
stc
(bad)
mov
pusha
stc
(bad)
mov
aas
stc
(bad)
mov
dec
add
add
add
add
cdq
mov
add
add
add
leave
adc
leave
adc
leave
adc
leave
adc
leave
adc
leave
adc
leave
adc
leave
adc
leave
adc
leave
adc
add
(bad)
jmp
add
add
scas
add
add
mov
adc
add
add
ds
mov
fs
mov
or
mov
pop
jns
mov
bound
mov
out
(bad)
mov
mov
(bad)
mov
call
add
(bad)
mov
cs
mov
mov
(bad)
mov
(bad)
ds
mov
stos
ds
mov
cmp
add
add
(bad)
mov
mov
(bad)
mov
push
ds
mov
stos
jns
mov
sar
mov
fidivr
mov
or
add
add
jns
mov
xor
mov
pop
jns
mov
sub
mov
xor
mov
lods
jns
mov
add
(bad)
jmp
add
mov
(bad)
(bad)
(bad)
jle
add
add
add
lods
or
add
add
add
or
add
add
add
add
add
dec
add
add
mov
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jp
jp
jp
jp
jp
jp
jp
jp
jecxz
jecxz
jecxz
jecxz
or
add
add
lea
inc
add
add
add
add
add
add
adc
mov
(bad)
(bad)
(bad)
inc
mov
inc
add
repnz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
dec
add
add
add
pop
add
add
add
add
add
add
add
add
dec
add
out
dec
add
or
add
dec
add
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
dec
add
dec
dec
add
dec
dec
add
cmp
aas
jp
add
add
add
add
add
sti
fiadd
add
add
add
add
push
fiadd
add
add
add
add
add
add
add
add
mov
fiadd
add
add
add
or
add
add
add
fstp
loope
fiadd
add
add
(bad)
xor
fiadd
add
jl
add
addr16
enter
lea
cdq
push
sbb
cli
out
lods
fidiv
sbb
outs
cmps
je
faddp
xor
popa
and
mov
mov
sahf
enter
and
repz
mov
adc
sbb
xchg
aad
jnp
and
fcomp
das
(bad)
xchg
shl
sar
inc
jl
inc
nop
add
pop
cmp
cmp
sbb
lahf
lds
movs
jnp
xlat
push
test
sbb
xor
aaa
clc
sub
nop
xor
jg
adc
inc
not
dec
mov
std
lds
aad
inc
fwait
arpl
(bad)
pop
push
sub
sbb
jl
pusha
(bad)
imul
dec
jne
fisub
xchg
pop
mov
sub
mov
stos
jb
add
fnstcw
ucomiss
add
adc
adc
add
add
add
ret
pop
sbb
sbb
outs
push
retf
loopne
popa
lods
rol
enter
push
mov
or
inc
cmc
cwde
dec
iret
mov
mov
push
pop
adc
cmp
lock
inc
in
pop
sbb
test
mov
inc
sahf
mov
call
add
xlat
dec
and
sbb
scas
loope
je
xchg
mov
cdq
mov
sbb
push
sbb
test
mov
adc
popa
ja
inc
sbb
loope
and
inc
imul
jmp
push
jl
sbb
inc
cmc
das
js
dec
into
add
lods
(bad)
clc
xchg
pop
clc
fst
out
dec
and
mov
mov
push
or
add
mov
addr16
nop
lock
jecxz
push
iret
cmp
mov
pop
ins
aam
jno
int
pop
mov
push
mov
aad
shl
pusha
xchg
mov
pop
mov
es
lds
leave
cmp
push
std
retf
inc
(bad)
cli
cmp
call
(bad)
fs
xchg
sahf
mov
add
clc
mov
or
xor
lods
and
mov
leave
call
pop
ficomp
test
(bad)
inc
add
lods
mov
(bad)
mov
ins
inc
loop
jge
and
ds
add
add
add
add
js
cmp
and
(bad)
add
or
add
add
js
cli
cmp
outs
and
add
add
add
add
js
cli
cmp
cmp
push
call
or
add
add
js
js
xchg
fiadd
add
add
add
js
cli
cmp
xor
xor
fiadd
add
add
add
add
dec
fdivr
and
(bad)
add
add
add
add
add
add
dec
inc
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
add
add
add
add
dec
inc
sub
call
mov
inc
sub
mov
cmp
scas
call
outs
(bad)
add
add
add
add
dec
jge
call
mov
call
mov
add
ins
inc
loop
jge
and
stos
xor
jge
mov
xor
ds
scas
call
add
add
add
dec
xor
xor
push
and
outs
(bad)
add
add
add
dec
push
mov
cmp
call
(bad)
mov
ins
inc
loop
inc
sub
stc
bound
fidivr
fisubr
add
add
or
add
add
js
call
scas
xor
scas
call
add
add
add
dec
cmp
and
fisubr
add
or
add
add
dec
inc
sub
stos
dec
call
outs
(bad)
add
add
add
dec
inc
sub
and
fisubr
add
add
add
dec
push
and
scas
xor
scas
call
mov
add
ins
inc
loop
inc
sub
scas
push
dec
jge
and
js
sub
mov
mov
jge
fisubr
fisubr
add
add
add
dec
inc
sub
scas
push
dec
jge
scas
call
xchg
js
sub
mov
mov
jge
fisubr
fisubr
add
add
add
add
add
dec
inc
sub
scas
push
dec
jge
scas
call
xor
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
add
add
add
dec
inc
sub
scas
push
dec
jge
call
sbb
xchg
js
sub
mov
mov
jge
fisubr
fisubr
add
add
add
add
add
add
dec
inc
sub
scas
push
dec
jge
call
sbb
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
add
add
add
dec
push
mov
scas
call
add
or
add
add
dec
dec
cmp
push
mov
pop
dec
xor
push
and
call
and
add
add
add
dec
xor
xor
push
and
and
add
add
add
add
dec
push
mov
pop
push
dec
mov
scas
call
(bad)
add
add
or
add
add
cmp
add
add
add
add
mov
add
add
add
add
add
add
add
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
add
add
or
add
add
add
add
add
add
add
add
dec
inc
sub
and
(bad)
fidivr
sub
ds
and
dec
call
outs
jge
xor
dec
mov
scas
call
(bad)
fidiv
pop
dec
xor
push
and
call
and
fidiv
pop
dec
xor
push
and
call
and
add
add
add
add
add
js
sub
ds
and
dec
call
outs
jge
xor
dec
mov
scas
call
(bad)
fidiv
pop
dec
xor
push
and
call
and
add
add
or
add
add
dec
ds
stos
call
ds
outs
(bad)
add
add
add
dec
and
cmp
stos
mov
outs
(bad)
add
or
add
add
dec
cmp
jge
ds
outs
(bad)
add
add
add
add
dec
cmp
fiadd
and
scas
xor
scas
call
mov
add
ins
inc
loop
cmp
jae
xor
ds
outs
(bad)
add
add
add
xor
(bad)
mov
aam
dec
and
bound
and
outs
scas
retf
scas
call
dec
mov
scas
and
push
pop
(bad)
pop
outs
push
outs
pop
mov
out
out
mov
xor
jge
mov
ds
outs
pop
pop
add
xor
outs
pop
mov
out
out
aad
mov
add
add
jae
call
ds
xor
retf
cmp
retf
scas
call
dec
mov
scas
and
push
pop
(bad)
pop
outs
push
outs
pop
mov
out
out
mov
xor
jge
mov
ds
outs
pop
pop
add
xor
outs
pop
mov
out
out
aad
mov
add
add
add
add
add
mov
mov
lea
add
add
add
adc
popf
test
mov
mov
cmc
es
mov
pop
adc
mov
mov
(bad)
mov
shl
ret
mov
sub
or
sub
pop
dec
scas
cwde
ficomp
mov
cmc
cmp
mov
xchg
xchg
(bad)
mov
and
mov
fcmovb
(bad)
mov
pusha
pop
(bad)
mov
pop
imul
scas
out
fs
mov
out
(bad)
mov
add
int3
mov
mov
mov
mov
mov
out
add
mov
pusha
jbe
mov
xchg
out
mov
xor
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
ins
mov
add
add
add
add
add
add
add
add
dec
inc
sub
in
stos
call
cmp
inc
sub
scas
push
dec
jge
jae
xor
dec
cmp
dec
fisubr
call
(bad)
fisubr
call
and
add
add
add
dec
inc
sub
stos
dec
call
(bad)
add
or
add
add
dec
inc
sub
in
call
scas
call
cmp
xor
mov
cmp
sub
mov
mov
cmp
scas
call
outs
(bad)
fisubr
add
add
add
add
dec
inc
sub
stc
bound
fidivr
fisubr
add
add
add
dec
inc
sub
scas
push
dec
jge
call
xor
inc
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
add
add
add
dec
inc
sub
scas
push
dec
jge
call
sbb
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
add
add
or
add
add
dec
inc
sub
scas
push
dec
jge
and
mov
inc
sub
mov
mov
cmp
scas
call
outs
(bad)
add
or
add
add
dec
inc
sub
scas
push
dec
jge
scas
call
js
sub
mov
mov
cmp
scas
call
outs
(bad)
add
add
add
add
dec
inc
sub
scas
push
dec
jge
scas
call
js
sub
mov
mov
cmp
scas
call
outs
(bad)
add
add
add
add
dec
inc
sub
scas
push
dec
jge
call
sbb
js
sub
mov
mov
cmp
scas
call
outs
(bad)
add
add
add
dec
inc
sub
scas
push
dec
jge
and
inc
sub
mov
mov
cmp
scas
call
outs
(bad)
add
add
add
add
dec
inc
sub
xor
inc
sub
scas
call
cmp
xor
mov
jge
js
sub
mov
mov
jge
fisubr
fisubr
fisubr
add
add
or
add
add
dec
inc
sub
in
call
and
mov
jge
call
fidivr
js
sub
mov
mov
jge
fisubr
fisubr
fisubr
add
add
or
add
add
dec
inc
sub
scas
push
dec
jge
call
xor
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
add
add
add
or
add
add
dec
inc
sub
scas
push
dec
jge
scas
call
xor
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
add
add
add
dec
inc
sub
scas
push
dec
jge
scas
call
xchg
js
sub
mov
mov
jge
fisubr
fisubr
add
add
add
dec
inc
sub
scas
push
dec
jge
and
mov
js
sub
mov
mov
jge
fisubr
fisubr
add
add
or
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
mov
fimul
sub
stos
fimul
sub
scas
xor
dec
cmp
dec
fisubr
call
(bad)
js
jge
scas
dec
mov
sub
stos
call
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
dec
xor
js
sub
cmp
fimul
mov
fisubr
call
(bad)
dec
inc
sub
stos
fidivr
sub
push
stos
call
fisubr
sub
fsub
fisubr
out
in
sub
in
fimul
mov
fisubr
call
(bad)
js
jge
stos
push
dec
and
sub
stos
call
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
mov
(bad)
(bad)
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
stos
and
bound
ds
call
stos
jge
and
fimul
sub
bound
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
or
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
mov
fimul
sub
stos
fidivr
sub
add
xor
js
sub
add
xor
js
stos
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
dec
inc
sub
call
in
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
call
in
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
jge
jae
fiadd
dec
and
call
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
dec
xor
js
sub
cmp
fimul
mov
fisubr
call
(bad)
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
stos
and
bound
ds
call
stos
jge
and
fimul
sub
bound
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
stos
and
bound
ds
call
stos
jge
and
fimul
sub
bound
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
or
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
scas
push
call
sub
stos
call
fidivr
sub
stos
add
jge
mov
fidivr
sub
cmp
fimul
mov
fisubr
call
(bad)
js
sub
xor
call
ds
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
stos
and
bound
ds
call
stos
jge
and
fimul
sub
bound
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
and
pop
xor
xor
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
dec
xor
js
sub
stos
dec
xor
js
sub
stos
dec
xor
js
sub
stos
mov
sub
cmp
fimul
mov
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
sub
stos
mov
fidivr
sub
cmp
fimul
mov
fisubr
call
(bad)
js
sub
stos
dec
xor
js
sub
mov
jge
fimul
mov
fisubr
call
(bad)
js
sub
xor
call
mov
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
(bad)
(bad)
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
mov
sub
stos
dec
xor
js
sub
cmp
fimul
mov
fisubr
call
(bad)
js
sub
scas
push
call
push
mov
mov
fimul
mov
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
mov
sub
stos
dec
xor
js
sub
stos
dec
xor
dec
inc
sub
scas
xor
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
mov
sub
scas
xor
dec
cmp
dec
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
sub
scas
push
call
push
mov
mov
fimul
mov
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fimul
sub
stos
fimul
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
xor
or
in
in
or
(bad)
mov
dec
aad
in
mov
add
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
or
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
dec
xor
js
sub
stos
dec
xor
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
stos
fimul
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
jge
mov
sub
stos
call
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
js
sub
cmp
fimul
mov
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
dec
xor
dec
inc
sub
stos
fidivr
sub
cmp
fimul
mov
fisubr
call
(bad)
js
jge
push
fdiv
dec
call
and
call
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
mov
fimul
sub
stos
fidivr
sub
cmp
fimul
mov
fisubr
call
(bad)
js
jge
push
fdiv
dec
call
and
call
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
dec
xor
js
sub
bound
fimul
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
cmp
fidiv
stos
and
call
xchg
stos
fidiv
bound
bound
jge
mov
ds
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
stos
fidivr
sub
cmp
fimul
mov
fisubr
call
(bad)
js
jge
push
fdiv
dec
call
and
call
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
(bad)
dec
cmp
dec
fisubr
call
(bad)
fidiv
mov
(bad)
(bad)
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
add
add
add
js
sub
stos
dec
xor
ds
xor
fidivr
sub
stos
dec
xor
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
js
sub
stos
mov
fimul
sub
in
cmp
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
fidivr
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
dec
mov
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
sub
call
ds
xor
fimul
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
js
stos
outs
jge
mov
fimul
mov
fisubr
call
(bad)
fidiv
dec
cmp
dec
fisubr
call
(bad)
dec
inc
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
stos
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
or
add
add
dec
bound
and
fidivr
and
fiadd
add
add
or
add
add
dec
inc
sub
cmp
sub
inc
fmul
sub
mov
jae
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
js
sub
outs
jge
ds
call
push
mov
scas
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fisub
and
stc
jge
xor
ficom
and
fisub
and
stc
jge
xor
ficom
and
fidivr
and
fiadd
add
add
or
add
add
js
sub
mov
mov
fimul
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
stos
and
bound
ds
call
stos
jge
and
fimul
sub
bound
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
add
add
js
sub
mov
mov
fimul
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
(bad)
js
push
cmp
in
(bad)
(bad)
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
add
js
sub
mov
cmp
push
mov
inc
sub
mov
sub
scas
and
mov
fimul
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
ficom
and
js
sub
ds
xor
jge
and
call
call
push
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
mov
fisubr
call
(bad)
fiadd
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
add
add
add
js
sub
mov
cmp
js
sub
mov
sub
scas
and
mov
fimul
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
ficom
and
js
sub
ds
xor
jge
and
call
call
push
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
mov
fisubr
call
(bad)
js
sub
scas
and
mov
fimul
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
fimul
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
push
(bad)
fimul
mov
fisubr
call
(bad)
add
add
add
add
dec
inc
sub
in
stos
call
cmp
inc
sub
call
push
outs
jge
mov
in
bound
stc
ficom
fiadd
(bad)
fimul
mov
fisubr
call
(bad)
fisubr
call
and
add
or
add
add
dec
scas
bound
and
outs
jge
mov
xor
push
and
fiadd
add
add
add
dec
inc
sub
in
stos
call
cmp
inc
sub
mov
cmp
js
sub
mov
sub
scas
and
mov
fimul
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
ficom
and
js
sub
ds
xor
jge
and
call
call
push
dec
fisubr
call
(bad)
fimul
mov
fisubr
call
mov
fisubr
call
(bad)
js
sub
scas
and
mov
fimul
sub
scas
push
dec
jge
call
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
dec
mov
cmp
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fidiv
and
stc
jge
xor
ficom
and
(bad)
scas
and
ds
xor
fisub
and
stc
jge
xor
fdivrp
fimul
sub
xor
fimul
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fisubr
js
sub
xor
jge
and
xor
scas
xchg
bound
mov
jge
call
stos
jge
and
fidivr
sub
stos
mov
fidivr
sub
stos
mov
fidivr
bound
mov
fimul
mov
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
inc
sub
stos
mov
fidivr
and
ds
xor
fimul
mov
fisubr
call
(bad)
js
stos
outs
jge
mov
fidiv
mov
(bad)
fidivr
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
sub
stos
add
jge
mov
fimul
sub
call
cmp
dec
fisubr
call
(bad)
js
sub
xor
call
stc
dec
jae
ds
mov
fimul
mov
fisubr
call
(bad)
fidiv
mov
in
stos
mov
mov
jge
mov
ds
fidiv
stos
and
scas
call
fidivr
scas
jge
xor
(bad)
fidiv
mov
(bad)
(bad)
dec
cmp
dec
fisubr
call
(bad)
js
call
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
js
mov
bound
fidiv
mov
stos
jge
and
fidiv
dec
cmp
dec
fisubr
call
(bad)
fidiv
push
(bad)
fimul
mov
fisubr
call
(bad)
fisubr
call
and
add
add
add
add
dec
bound
jge
ds
scas
xor
dec
cmp
dec
fisubr
call
(bad)
add
add
or
add
add
dec
add
xor
mov
jge
ds
and
stc
jge
xor
ficom
and
add
add
add
dec
fsubr
mov
jge
ds
and
ds
xor
fisub
and
stc
jge
xor
ficom
and
add
add
add
dec
bound
xor
ds
and
stc
jge
xor
ficom
and
add
add
add
add
dec
bound
push
mov
call
xor
call
ficom
and
add
add
jecxz
add
or
add
add
js
sub
ds
xor
jge
ds
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fidiv
mov
fisubr
call
(bad)
add
or
add
add
dec
inc
sub
and
(bad)
fidivr
sub
ds
and
dec
call
xor
jge
mov
call
xor
call
ficom
and
fidiv
pop
dec
xor
push
and
call
and
fidiv
pop
dec
xor
push
and
call
and
add
add
add
js
sub
ds
and
dec
call
xor
jge
mov
call
xor
call
ficom
and
fidiv
pop
dec
xor
push
and
call
and
or
add
add
dec
inc
sub
mov
jae
dec
inc
sub
scas
push
dec
jge
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
js
sub
outs
jge
ds
call
push
mov
scas
call
xchg
js
sub
mov
mov
jge
fisubr
dec
inc
sub
mov
jge
fidiv
outs
(bad)
fisub
and
stc
jge
xor
ficom
and
fisub
and
stc
jge
xor
ficom
and
add
add
add
add
add
add
dec
inc
sub
and
(bad)
fidivr
sub
ds
and
dec
call
and
ds
xor
jge
ds
and
ds
xor
fisub
and
stc
jge
xor
ficom
and
fidiv
pop
dec
xor
push
and
call
and
fidiv
pop
dec
xor
push
and
call
and
add
or
add
add
js
sub
ds
and
dec
call
and
ds
xor
jge
ds
and
ds
xor
fisub
and
stc
jge
xor
ficom
and
fidiv
pop
dec
xor
push
and
call
and
add
add
add
dec
inc
sub
and
(bad)
fidivr
sub
ds
and
dec
call
bound
jge
ds
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fidiv
mov
fisubr
call
(bad)
fidiv
pop
dec
xor
push
and
call
and
fidiv
pop
dec
xor
push
and
call
and
add
add
add
add
js
sub
ds
and
dec
call
bound
jge
ds
sub
scas
push
dec
jge
call
js
sub
mov
mov
cmp
scas
call
mov
mov
cmp
mov
fisubr
dec
inc
sub
xor
and
xor
mov
jge
dec
inc
sub
mov
jge
fisubr
fidiv
mov
fisubr
call
(bad)
fidiv
pop
dec
xor
push
and
call
and
add
or
add
add
jge
add
add
and
data16
data16
push
dec
data16
data16
data16
add
sub
pop
add
(bad)
adc
adc
daa
data16
adc
adc
add
add
push
movlps
adc
add
xor
adc
adc
or
or
or
cld
outs
test
add
test
(bad)
dec
add
dec
cmps
add
add
stc
or
jb
add
add
dec
add
ret
xor
loop
shl
push
add
add
or
cld
in
sti
add
repz
or
add
adc
add
in
jb
aas
(bad)
push
add
add
add
add
test
cmps
mov
or
add
mov
cmp
xchg
pop
inc
dec
ins
or
add
jecxz
add
inc
add
mov
add
repz
adc
(bad)
fstp
cmp
fidiv
add
add
adc
adc
repnz
add
repnz
es
stc
test
imul
inc
add
fdiv
add
cli
cli
std
jb
pop
add
add
add
push
xor
add
add
cmc
adc
into
in
add
ror
push
int3
add
mov
add
sub
xchg
or
add
cmp
add
adc
adc
add
inc
ret
cmp
cmp
call
add
add
pop
push
add
test
or
call
add
add
add
add
push
inc
push
mov
adc
add
int3
outs
inc
rol
lock
add
add
add
xor
and
add
fidivr
and
loop
adc
(bad)
sbb
sub
pop
std
dec
mov
out
add
xor
add
xchg
add
int3
clc
sub
xchg
add
cld
adc
add
add
(bad)
fst
(bad)
(bad)
or
in
cld
(bad)
add
adc
push
sti
sub
jmp
fiadd
sbb
add
(bad)
cld
add
in
adc
add
jecxz
add
sbb
add
add
sti
add
or
jne
dec
add
sti
test
add
rol
dec
cmp
mov
add
div
leave
inc
cmp
or
adc
add
fdivr
add
mov
add
and
pop
push
(bad)
inc
pusha
add
add
repz
add
inc
add
add
xlat
or
add
push
add
aaa
or
retf
add
(bad)
push
xor
sti
add
add
mov
std
std
in
lds
inc
adc
jmp
push
sub
in
add
pop
push
dec
adc
ficomp
or
jmp
fiadd
lock
push
mov
add
add
add
push
fisub
sbb
jl
add
pop
add
add
add
stos
add
add
inc
sbb
icebp
fsubr
or
push
std
add
push
add
or
inc
cmp
mov
stos
ins
inc
mov
dec
xchg
std
and
add
or
or
add
fiadd
jmp
clc
mov
pavgw
jecxz
es
cmp
or
xchg
add
add
add
clc
add
add
mov
stos
icebp
add
mov
push
add
add
or
add
add
add
add
add
add
fiadd
icebp
xlat
pop
add
add
add
add
add
add
add
add
mov
test
add
repz
add
and
push
into
imul
or
adc
mov
add
es
add
sar
add
add
clc
pop
not
add
ins
or
add
add
pop
add
pop
add
add
cmp
cmp
call
adc
repz
cmps
or
mov
fnsave
add
add
retf
cs
add
add
add
add
cmps
pop
add
mov
repnz
sub
sbb
push
fild
add
add
add
add
fiadd
out
add
sar
add
add
mov
pop
cmps
xchg
ret
dec
inc
add
pop
add
add
push
add
loop
pop
cmp
add
and
add
add
(bad)
cmp
add
outs
call
data16
add
add
rol
mov
cmps
add
int3
jl
(bad)
xchg
add
hlt
add
add
mov
repz
hlt
push
(bad)
std
and
add
or
cld
fild
jne
clc
(bad)
mov
push
add
add
sbb
or
add
in
or
cmps
mov
sbb
add
sbb
fadd
add
add
out
add
add
add
add
add
jb
(bad)
idiv
or
fld
add
out
add
add
add
repz
pop
mov
add
lldt
add
add
or
dec
fld
push
(bad)
fld
push
add
popf
add
imul
add
rol
in
add
cli
test
fld
add
std
pop
add
adc
add
push
push
add
rol
popf
add
sbb
add
stos
(bad)
cld
pop
add
mov
add
dec
repz
add
mov
add
call
add
or
or
mov
add
fisttp
neg
popf
rcl
add
std
inc
clc
add
mov
icebp
or
add
push
add
fsubr
fucomp
sti
adc
pusha
std
add
add
mov
test
add
add
add
cmc
icebp
clc
adc
add
or
stc
inc
out
or
retf
push
dec
mov
std
inc
fimul
add
pop
xor
call
add
neg
add
add
mov
or
out
adc
add
add
(bad)
stc
adc
sub
and
popf
add
add
sar
mov
add
add
call
inc
adc
add
inc
push
add
add
add
clc
add
xor
leave
test
add
add
inc
add
add
add
add
outs
add
cmp
add
xchg
adc
add
mov
imul
sub
sti
test
rol
cmp
add
push
sub
mov
add
add
add
inc
mov
pop
pop
add
mov
std
push
arpl
add
out
add
push
or
sti
add
out
fdivr
add
jb
adc
ins
add
cli
add
inc
data16
inc
add
add
add
sub
std
loop
stc
std
mov
jne
mov
icebp
add
or
std
std
sbb
mov
add
adc
inc
push
add
in
add
sub
add
or
mov
adc
add
std
add
sbb
add
cs
jmp
add
call
add
add
(bad)
idiv
(bad)
mul
add
dec
add
in
jl
mov
cld
add
add
add
add
stc
fld
clc
hlt
xchg
aad
add
std
mov
add
out
sbb
dec
sbb
cld
(bad)
xlat
add
add
jmp
repnz
int3
add
add
lock
clc
adc
cmp
add
cld
inc
call
mov
add
in
out
add
test
repz
add
or
add
in
add
add
add
call
clc
rcr
add
cli
mov
xchg
shr
add
push
add
add
add
cmp
adc
(bad)
shr
add
add
add
jmp
cmp
push
rol
add
add
fld
std
stos
add
add
or
cli
push
add
arpl
mov
arpl
sar
jb
add
or
add
pop
add
es
pop
div
leave
push
xlat
mov
add
add
jns
add
add
add
aaa
inc
test
add
add
dec
sbb
test
mov
pop
add
in
mov
push
stos
and
add
pusha
(bad)
mov
add
inc
adc
add
jne
jb
mov
add
add
add
cmc
cmp
arpl
into
add
cld
add
and
add
add
pop
add
pop
fimul
call
mov
add
jmp
add
fdiv
add
add
add
retf
add
or
add
clc
add
aad
or
add
xor
pop
and
mov
add
jns
add
add
add
lds
add
call
mov
add
add
call
sti
add
add
inc
add
mov
sub
clc
sub
mov
add
jmp
call
add
sbb
cmps
push
imul
clc
jb
add
add
fiadd
add
pusha
add
adc
push
arpl
jl
out
jmp
int3
add
add
dec
or
xchg
cmc
std
add
out
add
scas
or
adc
adc
add
(bad)
and
sub
add
add
xor
es
push
sbb
popw
add
imul
add
out
(bad)
jmp
in
add
aad
add
mov
push
int3
add
add
xor
add
aaa
cmc
adc
cld
add
add
mov
inc
add
add
add
sub
add
add
add
hlt
add
adc
cmps
add
add
add
inc
into
add
add
push
sti
cmp
add
out
jne
aad
dec
cmp
fild
add
cmps
add
(bad)
jl
sti
add
add
loop
test
add
add
xchg
cmps
add
fdivr
add
add
dec
ins
leave
test
jmp
mov
fld
add
add
add
add
inc
add
or
add
call
mov
(bad)
add
mov
add
or
add
or
clc
add
add
dec
pop
mov
mov
add
fiadd
aad
stc
popf
xor
std
add
aaa
fadd
add
sbb
pop
or
mov
test
inc
repz
imul
add
add
imul
sti
add
leave
dec
adc
pusha
add
add
push
icebp
add
or
add
xor
add
add
add
cmc
loop
add
push
add
inc
xchg
sbb
cld
add
add
imul
test
or
adc
xor
pop
add
sti
jmp
add
mul
add
add
stc
pusha
sbb
add
push
stos
push
sbb
pop
arpl
add
icebp
inc
push
jl
jmp
imul
in
add
add
add
pop
sti
add
dec
and
in
aas
int3
add
stc
aaa
add
(bad)
mov
test
add
add
mov
add
or
add
out
add
or
mov
add
int3
fild
xchg
add
sub
add
sar
cmps
(bad)
sbb
aas
sbb
add
add
int3
jecxz
add
mov
in
jecxz
add
add
add
add
dec
add
adc
mov
cld
add
ins
add
add
add
out
xchg
call
mov
into
add
into
inc
int3
(bad)
fisttp
aad
sub
pop
in
add
clc
out
add
sbb
test
add
add
push
icebp
icebp
sbb
add
fiadd
outs
mov
add
add
add
push
cli
arpl
or
add
add
add
jmp
test
add
pop
add
add
sbb
add
dec
jecxz
xchg
sbb
add
adc
push
add
add
add
adc
jecxz
add
add
std
cli
add
add
sbb
xor
add
and
add
add
aas
add
mov
add
xchg
add
add
add
push
sub
add
inc
mov
add
add
sti
xchg
xor
fisttp
outs
add
xlat
add
mov
add
adc
adc
add
add
add
add
add
add
cmp
xor
sub
add
add
add
pop
inc
add
adc
loope
test
add
add
leave
xor
or
jecxz
in
mov
add
add
sub
inc
inc
sub
or
add
fld
add
or
add
dec
jecxz
add
add
add
rol
std
add
in
add
add
add
(bad)
sti
adc
sti
add
frstor
or
add
rol
inc
pop
sar
add
add
add
add
add
inc
pop
jmp
inc
add
add
neg
sbb
sub
popf
add
add
mov
add
add
add
add
or
add
sbb
(bad)
adc
rcr
add
unpcklps
sub
add
adc
call
xlat
std
add
out
add
jne
mov
out
or
stos
xor
out
fbstp
add
sbb
xchg
add
add
and
add
add
sbb
repz
push
(bad)
aas
retf
push
test
aas
add
add
jb
add
fild
add
sub
add
and
repz
adc
jmp
hlt
hlt
mov
add
sti
add
add
rol
add
stc
aas
aaa
push
dec
aas
retf
or
sub
cld
add
or
cmc
loop
es
fsubr
sti
add
xor
fisubr
xor
add
mov
(bad)
stc
add
add
add
add
add
add
push
add
icebp
sbb
fstp
add
add
add
add
add
out
inc
add
and
adc
rol
pop
clc
aas
cmp
add
add
icebp
add
test
add
sti
call
add
in
into
aas
add
cli
jb
add
pop
add
ins
adc
imul
add
xlat
add
mov
inc
add
(bad)
cld
push
add
test
add
add
std
add
fild
sub
mov
add
stos
push
stc
add
sub
add
sbb
add
push
rcl
clc
xchg
pusha
std
clc
push
or
add
add
add
inc
add
add
xchg
add
lock
and
loope
add
add
add
(bad)
sti
add
retf
or
sub
add
add
add
add
inc
add
add
clc
test
cli
sti
add
push
add
sbb
test
adc
add
mov
lds
adc
inc
add
xor
mov
jne
fcomip
xchg
add
rol
mov
dec
add
dec
add
or
add
adc
pop
xlat
test
add
xchg
pop
scas
ret
stos
add
std
add
repz
fiadd
add
dec
dec
add
idiv
clc
add
fld
add
push
outs
out
cld
fld
icebp
add
add
add
and
call
add
cmp
push
loope
add
or
add
or
(bad)
arpl
add
add
mov
popf
jmp
add
popf
div
add
aaa
mov
sti
inc
add
es
add
add
cld
fst
(bad)
sub
cmc
push
add
arpl
add
add
and
push
or
push
add
ins
pop
jmp
mov
xchg
rcr
mov
dec
add
add
xlat
jne
push
xor
call
add
sbb
repz
adc
cmps
add
add
clc
add
fimul
mov
add
sldt
stc
add
jns
add
add
sub
add
add
pop
add
add
lock
or
cs
push
pop
add
std
add
leave
imul
popw
loope
(bad)
add
inc
add
and
sbb
add
inc
test
add
mov
fcmovb
add
lock
add
add
(bad)
clc
add
xchg
out
add
inc
add
sbb
sti
add
add
test
sti
or
or
push
add
cs
test
pop
and
add
adc
push
add
add
add
int3
add
loope
add
loope
mov
and
std
inc
and
mov
add
jne
fild
push
add
xor
add
leave
and
hlt
stos
add
xchg
call
mov
(bad)
adc
aaa
inc
cld
std
mov
push
mov
retf
add
add
ins
push
jl
(bad)
fsubp
add
stc
jl
xor
aas
pop
mov
jmp
int3
sbb
jecxz
stc
add
cld
and
add
or
add
in
mov
or
add
inc
dec
add
shl
(bad)
fisttp
add
add
or
test
sbb
add
(bad)
loope
or
add
cld
pop
repnz
out
in
shl
adc
add
xchg
add
mov
adc
add
test
cmp
add
add
push
stos
test
mov
mov
add
cmp
add
lock
add
xchg
add
in
add
sub
add
add
rol
sub
(bad)
add
add
add
cmp
xor
add
add
test
mov
and
mov
call
add
add
xor
add
add
popf
mov
or
sti
neg
inc
out
cli
cmp
out
int3
cmp
and
cmp
imul
sar
adc
adc
add
add
inc
repnz
jmp
inc
(bad)
jns
cmps
rol
add
add
call
add
pusha
push
add
dec
jmp
cmc
add
xor
or
or
add
cmp
and
adc
add
out
add
add
add
push
sti
add
fstp
add
sti
push
cmp
imul
inc
test
add
fiadd
xchg
mov
add
pop
add
push
loope
add
add
add
sti
lock
add
add
idiv
aad
push
dec
in
and
fiadd
inc
xor
pop
cld
test
xchg
and
xchg
adc
add
or
add
dec
sbb
icebp
std
xor
es
leave
add
arpl
add
add
or
add
repz
add
mov
add
lds
add
sbb
jecxz
pusha
stc
test
fsubp
jb
add
add
add
(bad)
jb
xor
sbb
inc
or
sub
stc
inc
add
inc
jmp
repz
data16
add
add
ins
repz
add
pop
add
jecxz
mov
add
add
jne
jmp
cld
(bad)
cmps
add
xchg
add
mov
lds
add
add
xor
add
in
rcr
pop
add
or
xor
add
jmp
sbb
add
add
and
sub
push
cs
std
(bad)
inc
pusha
add
add
sbb
into
add
add
repz
xchg
add
sbb
add
adc
push
xchg
xor
call
add
add
out
std
hlt
add
sub
stc
or
arpl
add
add
add
out
aas
test
add
xchg
add
push
add
add
add
lock
add
add
jne
cld
stc
call
sti
cmps
add
into
add
add
mov
out
stc
mov
(bad)
mov
call
add
add
inc
add
add
cmp
inc
dec
out
adc
and
test
add
arpl
add
add
add
add
add
in
mov
xchg
add
sub
or
add
in
imul
add
sub
add
rol
push
pop
adc
xor
add
jne
jns
std
test
push
stc
add
push
cmc
add
sti
add
ins
add
add
mov
add
fld
add
idiv
inc
add
sub
sti
sub
add
add
cmc
cmp
cld
adc
xor
in
sti
add
(bad)
sub
adc
sub
out
add
and
push
test
cld
add
add
jl
fimul
loop
push
lock
push
add
jmp
cli
add
add
or
add
add
clc
inc
imul
pop
cmp
mov
ror
add
add
add
(bad)
std
add
aad
adc
add
hlt
cld
cld
std
test
xchg
sbb
or
add
add
mov
aaa
add
or
es
add
sbb
add
leave
add
leave
call
add
adc
add
add
mov
jmp
add
fild
mov
or
adc
cmp
xor
add
out
xor
add
adc
xor
call
sbb
ins
cmps
add
out
push
out
add
stc
sbb
leave
add
leave
and
mul
adc
aad
add
dec
sub
xor
add
add
add
loope
sti
add
shr
add
add
mov
in
push
std
mov
add
add
add
add
sub
idiv
inc
add
in
add
add
or
add
scas
add
push
cmp
cmc
add
sbb
add
sbb
inc
add
mov
add
cli
add
outs
pop
cli
add
add
add
xor
add
add
pusha
add
xor
or
clc
sbb
imul
call
add
add
push
add
push
add
add
add
or
not
dec
add
jmp
rcl
aas
push
or
stc
add
or
out
add
add
sbb
out
add
out
(bad)
push
aad
aas
xor
fstp
and
pop
add
xchg
add
add
adc
jecxz
add
push
call
cli
or
add
cmp
push
out
(bad)
or
mov
pop
idiv
add
add
aas
add
pop
unpckhps
aaa
popf
dec
loop
pusha
add
imul
xchg
cld
cmps
add
sti
into
add
pop
add
add
or
add
jmp
pop
xor
mov
add
mul
rol
mov
cld
add
adc
add
out
dec
call
add
add
(bad)
add
loope
pusha
out
call
push
push
add
jne
sbb
cli
add
mov
add
add
mov
add
cmc
popf
mov
pop
dec
add
cld
add
add
loop
mov
add
add
mov
(bad)
(bad)
mov
rol
adc
xor
add
sub
mov
add
fadd
mov
xchg
mov
add
add
add
add
add
dec
verw
shr
sub
push
add
inc
add
or
pop
cmps
xchg
xlat
call
add
add
add
add
add
adc
inc
add
add
or
add
inc
jns
jne
push
add
psubw
or
add
jecxz
add
xor
(bad)
test
sbb
hlt
aas
xchg
call
adc
add
aaa
add
cmp
xor
pusha
push
add
add
sbb
pusha
add
adc
add
call
popf
loope
add
add
add
clc
add
in
add
xchg
add
add
add
hlt
into
adc
add
and
add
psllq
add
or
jmp
loop
add
int3
repnz
es
add
xchg
aad
sti
pop
add
xchg
mov
xchg
add
or
rol
cld
add
add
fcomip
add
jmp
add
push
or
or
mov
adc
inc
add
jb
jl
add
dec
add
mov
cmc
add
xor
push
call
jmp
aas
add
inc
sbb
adc
lds
test
add
add
add
and
add
mov
or
fiadd
xchg
loop
or
repz
push
inc
imul
add
sbb
jns
add
add
out
add
push
add
out
cli
push
dec
add
cmp
shl
add
data16
add
add
add
sbb
sub
pop
add
add
add
int3
push
mov
mov
add
add
in
add
cld
add
add
add
or
mov
stos
psrld
(bad)
clc
add
add
std
add
add
add
add
add
add
add
jb
add
add
aas
add
clc
leave
add
adc
stc
mov
es
clc
add
std
in
push
add
aaa
or
icebp
add
add
add
add
repz
stc
add
dec
cmc
add
push
(bad)
xor
add
add
add
adc
xlat
add
add
add
xchg
dec
jmp
leave
adc
or
stos
add
xor
aad
pop
add
inc
repz
dec
stc
mov
cli
add
dec
std
loope
add
xor
add
xchg
stc
add
adc
add
add
mov
out
add
add
lock
loop
add
call
add
adc
mov
add
fild
add
add
add
out
jmp
add
repz
xchg
add
add
add
add
add
add
add
xlat
pop
add
sub
int3
add
add
add
add
add
adc
pop
add
fild
add
adc
std
add
or
add
cld
es
add
add
dec
add
jmp
xchg
add
lock
add
add
xor
arpl
add
cmc
(bad)
out
icebp
stc
add
repnz
add
scas
sbb
add
add
add
test
fiadd
outs
aaa
add
std
add
cld
add
add
add
call
and
jns
add
adc
adc
sub
and
(bad)
jb
leave
rol
out
add
std
mov
int3
add
cmp
jb
ret
fcomip
out
call
sub
std
outs
rol
xor
add
add
xlat
inc
add
add
push
add
mov
cld
inc
inc
(bad)
cmp
sbb
test
add
add
scas
xlat
add
add
add
fidiv
jne
fistp
fdiv
adc
rep
fisub
add
stos
neg
add
mov
add
add
inc
out
or
add
cmp
mov
add
jmp
call
add
cmp
add
adc
stos
and
jmp
add
and
mov
rcr
add
add
add
(bad)
rol
add
add
out
into
add
stc
add
or
xor
std
add
std
idiv
jmp
push
push
add
add
inc
add
add
dec
loope
sub
add
or
add
add
or
in
add
adc
inc
pop
sbb
or
inc
call
inc
ins
std
test
add
or
add
or
add
add
add
add
add
mov
adc
add
adc
add
add
sbb
jmp
(bad)
in
lock
test
add
inc
mov
add
add
lds
out
cs
int3
mov
add
sti
add
push
fdivrp
jb
pop
add
push
leave
out
add
add
sbb
retf
add
add
add
add
add
test
add
jns
push
cld
add
idiv
add
std
add
add
jb
and
or
add
aaa
add
cmc
xor
ins
dec
or
or
cmp
cld
imul
add
shr
add
push
add
and
inc
add
fiadd
sub
add
std
sti
stos
xchg
jns
add
sti
sbb
inc
add
adc
xchg
push
add
add
(bad)
loope
add
add
lock
cmp
ins
popf
add
add
loop
add
sti
or
xchg
(bad)
cld
or
adc
mov
or
add
add
xor
add
add
add
pop
add
and
sti
add
add
shl
jmp
lock
add
stc
call
in
or
add
add
jb
add
inc
mov
jmp
std
add
mov
fimul
add
pop
cmc
add
popf
add
add
add
add
dec
add
add
mul
adc
add
and
sysexit
add
add
int3
into
add
mov
add
in
dec
add
add
add
or
add
(bad)
mov
add
adc
add
imul
pusha
cld
(bad)
retf
sub
clc
xor
add
hlt
mov
add
add
mov
add
lds
add
add
cmp
loop
jne
cli
inc
test
cmp
add
adc
xor
add
cld
(bad)
out
add
mov
lds
sar
add
inc
xchg
xor
loope
add
add
push
add
or
add
add
pop
retf
add
sbb
add
in
test
or
add
(bad)
xor
ins
std
cmp
inc
add
stos
add
pop
shr
inc
sub
std
or
cmp
add
stc
inc
or
add
push
sti
sbb
add
add
xchg
add
clc
add
inc
add
add
add
add
ins
fucomi
add
inc
(bad)
mov
int3
add
cli
add
mov
add
add
popf
add
add
add
pop
leave
add
data16
int3
add
mov
jne
xchg
cld
arpl
sub
outs
and
adc
sub
cld
add
cmps
mov
jmp
test
push
add
add
std
cld
add
cmp
cli
push
stc
add
add
add
or
cmp
sbb
cmp
fdiv
cld
mov
add
add
(bad)
std
add
add
jl
outs
add
xor
add
inc
inc
add
pop
add
std
jmp
cli
add
xchg
test
std
shr
dec
add
push
adc
cld
repz
xor
or
and
mov
add
cli
stc
(bad)
mov
xchg
or
jmp
xlat
add
and
or
sbb
and
add
scas
pop
scas
add
mov
push
add
sti
dec
pop
cmp
(bad)
inc
add
lds
add
or
out
ret
or
add
inc
add
test
xchg
out
add
mov
int3
adc
sar
add
or
clc
add
add
add
add
add
inc
fild
jne
add
jb
xor
add
sub
call
add
in
cmp
push
sub
add
or
or
or
int3
data16
fiadd
(bad)
retf
add
add
into
add
add
(bad)
repz
test
inc
cld
add
es
push
pop
or
jb
and
add
push
add
(bad)
jb
add
loope
pusha
add
sub
add
jne
loop
add
add
add
jb
shl
inc
scas
clc
add
sub
cld
loop
ret
and
repz
sti
add
jns
(bad)
mul
sar
add
rcl
add
push
cld
hlt
add
jb
add
add
add
add
pop
adc
add
add
into
sub
push
sti
dec
add
std
mov
hlt
cld
add
(bad)
test
and
push
add
mov
add
inc
cmp
or
out
add
add
add
xchg
add
fcmovnb
fadd
out
add
add
std
in
add
add
add
add
add
add
sbb
add
std
add
repnz
add
mov
cmc
out
jne
and
dec
hlt
add
add
inc
rol
mov
cmc
add
add
adc
fld
stos
add
lock
add
add
add
sbb
push
call
add
add
inc
aas
add
dec
add
add
(bad)
fild
add
leave
sti
clc
push
stc
inc
add
sbb
cmp
add
add
pop
call
pop
mov
mov
add
add
retf
call
std
div
in
adc
adc
or
icebp
push
pop
add
or
fist
add
call
push
add
sub
add
leave
cmp
cmp
add
not
sbb
cld
add
add
dec
inc
cmp
add
add
add
add
out
or
sbb
call
add
fucomp
cli
sbb
aad
(bad)
into
add
out
jns
test
std
add
add
add
call
add
dec
adc
add
rol
push
call
pop
add
clc
mov
add
add
(bad)
or
leave
add
push
add
mov
xchg
inc
add
dec
mov
out
inc
test
mov
mov
std
or
push
div
adc
add
cli
jmp
xchg
and
xchg
inc
jns
add
jmp
adc
add
add
sub
jb
cmp
imul
add
cli
and
add
add
add
sbb
es
add
add
call
add
stos
add
adc
xchg
dec
or
add
add
push
add
add
hlt
std
retf
cmp
std
add
add
lds
cmc
xor
add
add
adc
add
or
inc
or
add
mov
add
lds
sar
push
add
add
add
add
add
add
or
(bad)
inc
cmp
mov
pop
(bad)
stc
retf
sbb
sbb
add
adc
call
add
cmp
and
cld
add
add
add
add
(bad)
inc
add
fiadd
rcl
sbb
std
(bad)
cld
aad
add
add
dec
fimul
add
add
add
cmp
repnz
add
mov
repz
adc
or
imul
cld
add
sbb
outs
test
add
add
(bad)
cmp
cmp
in
aaa
aas
add
jmp
add
cli
add
in
add
fiadd
add
add
add
rol
add
add
mov
push
sub
cmps
sbb
sbb
cmp
xchg
mov
xchg
add
loop
sbb
sti
xchg
xor
add
jmp
mov
cld
test
push
add
add
fadd
add
add
push
add
loope
adc
push
xchg
add
stos
dec
clc
add
(bad)
add
add
out
or
retf
or
arpl
xor
cmp
add
add
and
add
add
add
stc
test
xlat
cli
add
push
add
out
adc
add
mov
mov
or
xchg
setno
add
stos
add
push
into
add
cmc
inc
cmp
or
test
add
icebp
add
add
push
cmc
arpl
sub
add
xchg
add
sbb
int3
shl
add
add
test
add
add
sbb
add
xlat
jmp
in
add
(bad)
and
add
add
add
add
scas
mov
add
adc
cmp
add
add
add
into
add
push
add
add
inc
dec
pop
pusha
(bad)
jl
sub
push
xchg
cli
test
imul
not
std
out
add
add
add
add
add
and
into
stos
or
add
add
add
fidivr
add
xlat
add
inc
add
push
arpl
sti
cld
push
add
adc
(bad)
mov
mov
add
adc
mov
add
xor
push
add
loop
hlt
sar
or
push
sbb
mov
push
inc
into
xor
add
add
out
add
inc
clc
adc
add
add
pop
add
or
lds
leave
jmp
dec
jl
add
add
push
add
out
cmp
add
lock
clc
dec
jb
xor
add
add
fisttp
add
add
sbb
add
add
add
or
add
stc
add
add
push
xor
add
and
jmp
push
mov
jns
add
int3
add
add
inc
add
push
or
add
or
or
xchg
add
add
adc
add
or
call
add
add
sti
test
cmp
test
jmp
add
xchg
test
add
add
add
push
fdivrp
add
sbb
std
add
(bad)
cmc
stc
sub
out
cld
repz
add
adc
sti
call
and
xor
test
stc
add
or
add
add
test
sbb
add
cli
add
add
add
fbstp
inc
add
call
or
(bad)
add
mov
add
repz
add
add
add
sub
mov
add
add
push
push
add
add
clc
jmp
mov
adc
lar
xchg
add
cld
aas
inc
add
rcr
call
cmps
add
data16
add
add
add
add
pusha
add
loope
add
fucomip
stc
cld
mov
idiv
ins
inc
sub
clc
push
jne
and
jl
add
inc
add
xchg
add
sbb
idiv
add
add
add
add
add
cs
push
ins
adc
sbb
add
push
add
add
in
add
rcr
into
dec
stc
add
add
or
hlt
or
add
pop
pusha
add
dec
add
add
or
adc
add
add
add
jmp
add
data16
test
push
inc
add
add
add
sub
dec
cld
add
inc
mov
add
add
add
add
loope
push
push
add
rol
in
sar
add
jb
add
into
aas
hlt
add
data16
dec
adc
dec
out
add
loope
ins
add
sti
mov
add
adc
add
(bad)
stc
(bad)
adc
push
add
add
test
call
stos
xor
add
add
add
add
aad
sub
push
add
(bad)
or
xor
jmp
add
cmp
add
cmp
dec
cmp
push
mov
dec
or
or
xlat
add
add
pop
jl
ficomp
mov
(bad)
outs
mov
sbb
add
xchg
repz
inc
or
aad
cld
add
add
cmc
test
test
add
add
add
add
add
dec
add
rcr
push
add
std
retf
add
cli
sar
xor
sub
pop
add
push
loop
add
into
adc
add
add
add
add
or
push
add
jb
add
inc
stc
add
mov
(bad)
clc
sbb
add
add
add
call
xchg
add
add
rcl
add
mov
sbb
adc
or
mov
add
call
data16
add
add
fist
adc
add
stc
in
sbb
add
mov
scas
add
add
sbb
add
add
add
sub
(bad)
fiadd
cmp
sub
loop
add
add
mov
xchg
fisttp
add
fidiv
add
add
jmp
add
add
add
or
adc
pop
add
fiadd
cmp
jne
add
clc
add
or
jns
cld
add
fsubp
sub
add
ins
jl
or
add
add
add
add
add
frstor
xchg
aaa
sbb
dec
add
add
lds
add
clc
cs
inc
fst
add
dec
(bad)
add
and
add
pop
add
xor
clc
add
sub
add
add
add
(bad)
cli
cld
imul
add
jne
(bad)
stos
outs
arpl
jns
retf
sub
sbb
cli
mov
rol
fiadd
add
add
xor
ret
pop
inc
add
call
add
and
or
std
jns
add
add
aas
idiv
or
sbb
es
rol
push
add
add
add
add
lds
add
push
add
test
mov
test
dec
push
push
push
jb
xchg
mov
mov
add
add
add
(bad)
add
fadd
test
add
jecxz
mov
stc
pop
pop
add
add
jl
ins
add
or
add
pop
add
and
add
mov
add
div
add
fld
or
add
add
repz
add
or
add
ret
fild
mov
jne
stc
add
lds
or
cmp
add
scas
add
sub
adc
mov
add
(bad)
arpl
add
add
add
jmp
add
xchg
stc
or
call
add
sbb
add
(bad)
sar
xlat
call
mov
add
add
push
clc
stc
sti
test
add
xchg
add
add
sub
std
mov
adc
add
clc
add
push
add
cld
test
mov
add
add
add
add
push
add
inc
rol
add
add
xor
aas
fdivr
in
add
(bad)
sbb
or
add
test
test
imul
add
repz
or
pop
add
add
add
add
or
push
mov
pop
dec
mov
jmp
dec
adc
add
cld
jns
cmps
add
add
std
add
add
and
test
(bad)
adc
cmp
add
add
inc
inc
repz
add
add
push
mov
add
dec
outs
add
add
add
mov
mov
add
add
test
stos
and
inc
std
add
loop
ror
add
add
add
add
std
add
add
add
or
inc
aaa
retf
or
cmp
add
jne
(bad)
and
loope
and
add
add
loope
add
repnz
call
outs
sub
fiadd
add
stc
add
scas
add
add
adc
add
sub
push
add
mov
xlat
in
(bad)
mov
add
imul
cmps
aas
cli
aad
or
jb
shr
add
sti
inc
inc
adc
call
not
add
popf
jecxz
fisub
(bad)
in
add
std
(bad)
jl
cmc
add
add
cli
es
add
add
add
add
jns
jne
add
xchg
dec
adc
mov
inc
out
rol
adc
fild
jb
or
add
popf
clc
adc
add
pop
mov
add
es
add
push
xor
add
inc
aas
or
popf
or
jl
add
call
into
(bad)
push
mov
cmc
pop
sbb
sar
idiv
cli
retf
add
inc
mov
leave
into
data16
popf
inc
mov
pop
inc
call
add
mov
loop
cmp
jmp
or
adc
push
inc
fld
aas
add
repz
add
stc
out
sub
pop
fdivr
push
add
add
add
add
add
xchg
add
jmp
add
add
inc
loop
fiadd
stc
retf
shl
loop
jl
or
add
add
add
and
add
or
add
cmp
clc
cmp
jne
mov
jmp
popf
(bad)
cmc
test
hlt
xchg
add
cld
leave
add
adc
add
pop
ror
add
call
inc
arpl
add
or
repz
add
inc
or
inc
add
sub
std
add
add
std
inc
add
add
sub
(bad)
cli
repnz
add
cli
inc
mov
repz
add
adc
cmp
or
xor
imul
jmp
add
idiv
xor
out
xor
or
push
sbb
cmp
add
add
or
add
inc
add
dec
add
add
add
xlat
push
add
add
(bad)
aas
cli
xor
cld
aaa
add
add
add
mov
rol
mov
cmp
div
add
repz
adc
dec
add
repz
mov
pop
add
add
add
jns
push
add
add
imul
add
mov
add
mov
psrad
jmp
in
call
add
or
pop
or
mov
(bad)
sbb
add
add
pop
add
add
adc
fist
add
(bad)
fadd
adc
add
mov
(bad)
jne
dec
add
add
cmps
add
add
push
leave
and
jmp
inc
fist
ret
leave
add
(bad)
add
loop
fadd
add
push
sub
mov
cli
scas
push
add
sbb
add
dec
scas
sbb
push
hlt
and
mov
sbb
mov
add
adc
loop
add
shl
or
dec
aaa
sti
add
pop
push
sub
add
add
add
add
data16
clc
add
clc
shl
popf
sti
add
std
add
add
(bad)
mov
stc
inc
add
add
add
dec
icebp
jmp
add
cld
or
add
pop
add
add
ret
add
mov
sbb
inc
out
add
(bad)
in
cld
xlat
xchg
xor
add
icebp
or
sbb
scas
int3
cmp
or
add
xor
sub
add
add
call
add
push
xchg
add
inc
pusha
div
mov
repz
sar
add
pusha
ror
sub
add
mov
inc
add
add
or
add
or
lds
out
sbb
add
add
cld
adc
pop
add
or
pusha
add
adc
add
test
std
add
inc
add
add
cli
adc
jns
mov
mov
or
pop
scas
push
loop
stc
std
xchg
add
add
add
xchg
inc
mov
leave
inc
add
jb
sbb
jmp
add
add
add
mov
add
add
inc
rol
std
add
or
mov
inc
cmp
push
hlt
add
sub
add
arpl
add
add
add
pusha
idiv
add
pop
clc
add
dec
add
or
add
lock
stc
mov
add
cli
sbb
jecxz
cld
cmp
push
stos
(bad)
ins
xlat
dec
add
add
push
add
icebp
add
sti
add
add
adc
sub
sti
fiadd
cmc
fadd
mov
or
add
or
add
or
or
add
test
cli
pusha
add
data16
inc
add
jecxz
inc
or
add
sbb
add
cmp
(bad)
call
call
stos
inc
add
test
icebp
add
add
add
adc
push
add
lock
xor
add
add
add
add
add
test
adc
add
or
(bad)
and
cs
add
or
(bad)
out
add
mov
add
jns
add
outs
cmc
clc
cld
or
inc
add
add
or
add
sub
clc
add
add
jb
add
add
inc
add
and
lock
add
or
push
add
adc
add
rcr
int3
add
clc
out
add
std
(bad)
jmp
add
cli
add
add
push
add
(bad)
(bad)
jns
icebp
call
(bad)
inc
inc
add
cmps
xor
ficom
adc
mov
add
mov
add
into
and
cmc
add
add
hlt
icebp
add
mov
add
int3
or
add
sbb
add
adc
adc
(bad)
sub
arpl
add
add
add
call
add
sbb
idiv
in
pop
rol
loop
push
div
xchg
xor
add
(bad)
std
add
add
add
icebp
mov
add
add
fild
xchg
or
sub
sti
xchg
xor
add
add
or
or
ins
add
pop
add
add
icebp
add
cmc
cmp
(bad)
pop
out
add
add
add
into
add
add
add
in
add
add
xlat
add
xor
add
push
adc
add
add
or
or
mov
sti
retf
or
sub
dec
repz
pop
inc
in
rcr
adc
leave
sub
sbb
mov
xor
add
add
or
jb
add
add
add
or
cld
mov
pusha
in
add
add
cli
inc
shl
repz
std
add
and
dec
xchg
fiadd
add
jmp
imul
es
add
mov
add
pop
fdivr
cli
into
add
add
or
mov
mov
sub
push
out
or
sub
mov
inc
add
call
out
sub
sbb
jl
inc
mov
mov
fild
clc
(bad)
(bad)
scas
sub
add
pusha
add
add
(bad)
retf
dec
fidiv
xchg
xchg
scas
(bad)
add
push
add
adc
add
or
ret
sub
std
call
or
adc
add
adc
add
scas
add
or
call
xchg
inc
add
add
add
jmp
aad
or
xor
xor
out
xor
mov
add
test
and
add
add
add
and
popf
add
in
add
cmc
dec
pop
add
or
ror
add
add
jl
sbb
add
mov
imul
.byte
