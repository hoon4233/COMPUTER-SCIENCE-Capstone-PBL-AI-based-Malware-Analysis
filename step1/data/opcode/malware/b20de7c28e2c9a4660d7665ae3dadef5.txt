loopne
or
add
add
dec
add
add
add
add
add
add
add
add
push
or
add
and
pop
add
or
add
add
sub
add
sub
push
add
pop
add
or
adc
add
mov
add
adc
add
add
sub
jno
add
es
outs
or
add
pop
inc
sub
add
outs
or
add
cmp
push
add
add
push
add
cmp
add
sub
add
or
push
outs
or
add
pop
adc
sub
bound
add
and
sub
add
push
or
add
add
dec
add
cmp
add
pop
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
pop
sub
add
jae
add
or
add
or
sub
or
sub
sbb
pop
add
add
add
add
adc
add
add
add
imul
add
add
jecxz
add
add
push
pop
pop
sbb
and
add
push
cmp
add
add
or
add
add
add
pop
adc
pop
pop
pop
pop
bound
or
sldt
add
or
jnp
add
add
pop
aas
push
add
add
push
cmp
add
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
dec
(bad)
cmp
add
adc
push
cmp
adc
pop
pop
adc
and
push
(bad)
cmp
add
push
or
add
add
dec
(bad)
cmp
or
add
jnp
add
add
push
sahf
and
add
dec
(bad)
cmp
add
add
jnp
add
add
jnp
add
add
pop
pop
jno
add
add
pop
add
dec
(bad)
cmp
add
add
pop
pop
or
add
add
stos
(bad)
(bad)
inc
lea
add
add
pop
pop
push
sahf
push
pop
pop
adc
add
sbb
add
adc
add
or
add
dec
(bad)
cmp
stos
add
add
pop
pop
pop
pop
jno
add
add
pop
add
add
sbb
add
adc
add
adc
(bad)
dec
cmp
xor
jnp
add
add
pop
adc
add
add
add
or
pop
and
in
(bad)
(bad)
inc
jnp
add
add
or
and
add
pop
add
add
or
pop
and
add
add
add
pop
add
and
push
(bad)
dec
add
add
add
(bad)
(bad)
(bad)
clc
std
(bad)
call
(bad)
push
(bad)
jmp
std
(bad)
call
(bad)
(bad)
jmp
add
add
add
or
add
mov
(bad)
(bad)
call
add
add
add
add
push
cmp
cmp
jnp
add
add
or
pop
xchg
adc
cmp
(bad)
(bad)
call
add
or
xchg
pop
adc
adc
pop
xchg
adc
inc
jnp
add
add
adc
adc
rcr
or
add
add
dec
(bad)
cmp
(bad)
call
pop
pop
adc
add
add
add
or
or
add
dec
(bad)
cmp
(bad)
call
add
add
push
adc
add
add
add
or
add
add
add
add
push
or
pop
or
add
sbb
add
add
adc
adc
and
or
(bad)
call
add
add
push
add
add
push
(bad)
cmp
(bad)
(bad)
call
or
cmp
(bad)
(bad)
fnsave
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
add
add
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
adc
add
add
add
adc
push
lea
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
add
sub
xor
add
add
add
add
and
inc
add
add
mov
add
sub
add
adc
add
sub
and
add
dec
push
add
push
add
add
adc
and
add
add
adc
add
adc
cmp
(bad)
(bad)
jmp
add
push
push
add
or
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
add
add
dec
push
add
int
(bad)
inc
and
add
push
outs
or
mov
(bad)
jmp
add
add
dec
push
add
stos
(bad)
(bad)
push
add
or
jae
add
or
pop
add
add
or
outs
adc
add
push
outs
adc
add
pop
xor
adc
outs
adc
add
push
adc
pop
and
adc
add
push
outs
adc
adc
and
adc
adc
add
jae
add
or
adc
outs
pop
add
or
add
add
or
adc
sub
add
or
add
or
adc
imul
das
add
add
pop
adc
adc
and
add
add
cmp
add
add
pop
adc
push
outs
pop
add
or
or
movs
add
add
add
add
dec
or
add
add
add
add
add
add
add
add
ret
dec
add
ja
add
lods
add
add
add
aad
(bad)
call
adc
adc
push
outs
adc
add
push
adc
push
pop
adc
adc
add
push
outs
adc
add
pop
adc
pop
push
pop
adc
adc
add
pop
adc
push
outs
pop
add
or
or
add
add
dec
or
(bad)
dec
adc
push
adc
mov
sbb
add
or
or
adc
mov
sbb
add
and
add
add
push
or
(bad)
inc
push
outs
adc
outs
pop
add
or
or
sbb
add
or
adc
mov
pop
sub
add
or
add
or
add
add
dec
or
(bad)
dec
adc
push
adc
mov
sbb
add
fstp
add
add
and
add
add
js
add
adc
add
adc
fld
add
add
push
outs
sbb
add
pop
jae
add
or
mov
sbb
add
or
add
or
outs
push
add
or
or
push
add
add
or
mov
add
sub
add
adc
outs
pop
add
or
and
add
adc
add
adc
push
cmp
add
add
outs
and
add
pop
cmp
add
add
outs
and
add
or
push
add
add
outs
and
add
or
push
add
add
outs
and
add
fcom
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lahf
add
add
add
add
add
add
add
add
xor
add
add
add
sbb
add
or
push
add
add
and
add
add
js
add
sub
fld
add
add
sub
add
add
add
add
or
add
sbb
add
push
add
int
add
sub
xor
add
add
add
add
adc
rol
add
sub
add
sub
add
and
add
add
js
add
sub
add
sub
add
sub
push
and
add
add
js
add
sub
add
and
add
add
js
add
sub
add
sub
add
sub
or
rol
add
sub
add
sub
add
and
add
sub
add
sub
add
sub
add
sub
pop
and
add
add
js
add
sub
add
and
js
add
sub
add
sub
add
adc
add
js
add
adc
cld
add
add
js
add
or
rol
add
sub
add
sub
add
and
js
add
sub
add
sub
or
dec
add
add
js
add
or
add
js
add
or
jo
add
sub
add
or
add
add
push
sub
add
and
js
add
sub
add
sub
add
sub
or
push
lar
add
add
outs
cmp
add
cmp
add
add
add
or
pop
push
outs
inc
add
push
es
inc
adc
pop
adc
cmp
or
add
adc
or
add
cmp
add
add
add
or
or
add
pop
inc
add
add
add
add
add
add
add
leave
add
add
adc
adc
add
add
or
add
add
add
inc
add
push
es
add
add
or
push
adc
adc
jl
add
add
cmp
add
add
add
add
add
add
or
add
add
add
outs
inc
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
cmp
add
cmp
add
and
and
add
add
add
or
add
add
add
outs
inc
add
push
cmp
add
adc
lar
add
add
add
inc
add
add
or
add
push
and
add
add
push
adc
cmp
add
add
nop
add
add
and
xor
add
and
add
add
push
adc
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
adc
cmp
(bad)
(bad)
call
or
add
add
add
add
inc
add
add
or
add
push
fisttp
add
or
mov
add
add
and
or
add
add
add
add
inc
add
add
or
add
push
adc
lar
add
add
add
inc
add
add
or
add
push
sub
add
or
add
add
push
adc
and
and
or
add
add
add
push
outs
xor
inc
adc
add
and
add
add
js
add
jae
add
or
add
add
add
or
add
add
add
outs
inc
add
push
cmp
add
add
add
add
add
or
add
add
add
outs
inc
add
push
sub
add
or
or
int3
std
(bad)
call
mov
add
add
sub
add
and
add
add
dec
add
add
mov
add
add
sub
add
sub
add
or
add
or
add
add
dec
adc
add
lar
add
add
sub
sub
add
cmp
(bad)
(bad)
jmp
add
add
dec
adc
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
dec
adc
(bad)
call
mov
add
add
sub
add
fst
add
add
or
adc
daa
add
or
add
add
(bad)
add
add
push
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
mov
add
add
adc
mov
adc
adc
pop
or
add
add
adc
mov
add
add
adc
mov
adc
mov
adc
mov
add
mov
adc
mov
add
add
add
sbb
add
mov
add
adc
pop
adc
add
mov
add
push
(bad)
sbb
inc
dec
add
add
add
xor
add
add
add
add
add
add
add
add
jns
add
xchg
add
add
add
add
add
add
add
es
add
add
add
add
add
add
add
lea
add
sub
add
sub
add
xor
add
add
add
add
stos
add
add
add
add
add
or
add
add
sub
sbb
add
add
add
add
add
adc
add
sbb
add
sbb
pop
add
add
adc
sbb
add
add
inc
add
add
add
add
dec
add
cmp
add
add
mov
cmps
add
push
cmp
add
push
cmp
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
add
mov
jnp
add
add
add
add
add
push
or
pop
add
and
add
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
and
add
push
mov
add
add
mov
add
add
mov
add
add
mov
add
add
cdq
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
or
cmp
add
or
add
add
add
and
add
cmp
add
add
add
sbb
add
add
add
add
add
add
dec
add
cmp
add
cmp
add
add
add
jnp
add
add
add
(bad)
jg
add
add
add
pop
or
push
ds
add
add
add
add
add
sub
add
or
pop
adc
push
adc
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
call
add
add
(bad)
jmp
add
add
add
and
mov
sar
(bad)
jmp
add
add
cmp
add
add
push
add
add
push
add
cmp
jnp
add
add
add
add
sub
add
or
add
pop
jge
add
add
add
add
dec
add
cmp
add
or
or
add
mov
mov
mov
add
add
mov
xchg
add
push
(bad)
sbb
sub
add
sgdtd
add
add
add
add
add
add
sbb
add
add
add
adc
or
sub
add
push
cmp
add
and
add
add
push
add
cmp
add
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
and
add
add
push
add
cmp
(bad)
(bad)
(bad)
fnsave
add
pop
pop
(bad)
or
sbb
pushf
(bad)
(bad)
jmp
add
add
dec
add
cmp
or
adc
add
push
mov
add
add
mov
sub
sbb
sub
add
add
add
add
add
jnp
add
add
add
xor
add
add
add
add
adc
or
mov
and
add
add
push
or
cmp
add
add
jbe
add
add
add
add
pop
or
mov
add
adc
or
add
pop
add
add
pop
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
push
or
cmp
(bad)
(bad)
(bad)
cmp
jnp
add
add
sbb
adc
add
and
add
dec
or
cmp
or
jnp
add
add
push
pop
sub
add
or
add
push
or
cmp
or
add
add
push
jge
add
add
or
pop
cmp
add
add
add
add
cmp
(bad)
inc
jnp
add
add
add
push
add
push
jge
add
add
or
add
sub
cmp
cmp
(bad)
inc
jnp
add
add
push
cmp
jnp
add
add
push
add
add
add
pop
push
inc
push
inc
adc
add
add
add
pop
push
inc
push
inc
adc
adc
adc
adc
sub
add
push
cmp
(bad)
inc
jnp
add
add
adc
add
add
pop
pop
adc
add
jnp
add
add
adc
ud0
call
add
add
add
movs
add
push
gs
and
add
add
cmp
adc
cmp
add
adc
add
add
add
add
dec
or
cmp
jmp
(bad)
dec
pop
pop
adc
add
mov
mov
mov
mov
add
add
add
xchg
add
push
(bad)
sbb
add
add
mov
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
adc
add
add
cmp
jne
add
add
push
add
jle
add
add
enter
sub
add
sub
add
or
push
add
add
add
add
pop
cmp
add
add
aas
add
add
add
push
add
cmp
add
sub
add
add
push
outs
pop
add
push
and
add
add
push
add
cmp
add
add
pop
add
push
add
add
outs
pop
add
push
cmp
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
adc
add
add
add
adc
sbb
or
push
add
push
sub
add
sub
sbb
add
add
add
add
adc
add
add
add
add
add
push
cmp
add
add
add
jge
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
sar
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
add
mov
mov
or
add
add
sub
sbb
add
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
sbb
add
sub
push
or
or
add
add
sub
sbb
sub
add
add
add
add
(bad)
str
sbb
add
adc
add
fwait
add
add
add
adc
add
add
dec
add
cmp
add
add
cmp
add
add
dec
add
cmp
add
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
inc
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
xor
add
add
push
pop
add
push
jae
add
or
add
or
inc
pop
add
push
jae
add
or
xor
add
push
add
cmp
adc
push
add
add
and
add
add
push
add
cmp
add
add
add
or
pop
sub
add
push
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
dec
push
ds
add
add
add
or
adc
adc
pop
sub
add
push
es
cmp
add
and
add
add
push
add
cmp
or
add
add
sub
xchg
(bad)
(bad)
jmp
push
or
add
push
add
cmp
(bad)
inc
jae
add
or
cmp
add
sub
sbb
or
in
add
add
add
adc
daa
add
or
adc
adc
and
add
add
js
add
sub
cmp
add
and
add
add
js
add
sub
and
add
or
adc
and
add
add
js
add
and
add
add
js
add
sub
cmp
add
and
add
sub
add
sub
sub
add
js
add
sub
add
or
adc
sub
add
or
sbb
push
push
or
or
imul
add
sub
jp
add
sub
add
and
add
sub
add
sub
cmp
add
push
sub
add
or
add
adc
pop
or
or
or
add
fucom
add
add
fld
add
pop
or
push
pop
or
cwde
add
add
js
add
sub
add
or
cmp
add
pop
push
adc
sub
add
or
and
js
add
sub
add
or
cmp
popf
add
add
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
call
(bad)
(bad)
call
(bad)
call
call
jmp
(bad)
jmp
(bad)
push
(bad)
push
dec
(bad)
(bad)
jmp
cmp
push
adc
add
add
add
add
and
sbb
add
adc
add
add
inc
pop
adc
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
add
add
daa
add
or
and
pop
or
mov
add
add
add
add
add
add
push
mov
xchg
add
push
(bad)
sbb
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
sldt
adc
jnp
add
add
cli
inc
add
xchg
add
add
add
add
cmp
add
add
sub
add
and
add
add
push
add
cmp
add
add
jnp
add
add
jnp
add
add
mov
add
add
add
add
aas
test
add
push
add
add
mov
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
jnp
add
add
push
sub
add
or
and
add
pop
jge
add
add
and
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
push
add
add
(bad)
(bad)
jmp
add
push
add
cmp
add
cmp
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
or
add
add
add
jnp
add
add
ds
(bad)
inc
jnp
add
add
jnp
add
add
or
push
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
add
jge
add
fisttp
add
add
mov
sub
sbb
add
add
add
inc
add
add
add
push
add
add
add
or
add
add
add
add
and
add
jnp
add
add
pop
pop
pop
pop
fs
add
add
and
add
clc
pop
jge
add
add
or
add
add
xchg
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
cmp
add
cli
add
add
sub
add
push
sub
adc
add
add
add
adc
add
add
sub
add
or
add
inc
add
or
add
xor
add
add
add
add
adc
pop
or
mov
or
aas
cmp
add
and
add
add
push
pop
add
inc
add
add
jnp
add
add
xchg
and
add
add
add
add
sub
daa
add
add
fstp
adc
fst
outs
test
add
adc
add
push
pop
add
inc
add
add
pop
maxps
mov
add
pop
sbb
push
frstor
add
pop
sbb
or
pop
maxps
add
push
and
add
add
jnp
add
add
push
pop
or
xchg
or
pop
pop
maxps
mov
add
and
add
dec
pop
add
lods
add
add
sbb
push
fstp
outs
test
add
adc
adc
mov
add
add
add
push
pop
or
xchg
or
push
add
add
push
pop
add
jne
add
add
add
push
or
jnp
add
add
xchg
or
push
aas
mov
pop
maxps
add
add
pop
pop
maxps
mov
add
and
inc
add
add
sbb
push
and
add
add
mov
sub
pop
pop
maxps
add
add
(bad)
inc
pop
pop
maxps
mov
add
pop
sbb
push
cmp
(bad)
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
(bad)
(bad)
call
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
pop
add
add
push
pop
add
sar
(bad)
fnsave
add
add
add
add
mov
mov
mov
mov
add
add
add
add
add
pop
add
push
(bad)
sbb
push
sub
add
add
lods
add
add
add
sbb
add
sbb
or
cmp
add
add
adc
mov
add
push
add
add
add
add
or
add
cmp
add
add
push
add
add
mov
add
pop
add
add
mov
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
sub
add
and
add
add
cmps
add
add
add
inc
adc
add
mov
add
push
add
add
add
add
cmp
add
and
add
add
push
or
cmp
add
add
mov
add
aas
pop
add
add
mov
add
es
pop
pop
and
add
add
add
pop
jge
add
add
and
add
pop
jge
add
add
push
jge
add
add
sbb
add
add
sldt
add
push
or
cmp
add
add
jnp
add
add
pop
jge
add
add
xchg
(bad)
(bad)
jmp
or
add
dec
or
dec
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
sar
(bad)
(bad)
stc
add
add
or
add
dec
or
cmp
sub
or
fadd
add
add
mov
add
pop
and
jle
add
and
add
dec
or
cmp
inc
mov
add
pop
add
mov
add
or
or
adc
push
adc
sub
add
add
jnp
add
add
pop
jge
add
add
or
add
dec
or
cmp
(bad)
(bad)
dec
pop
pop
or
add
add
mov
add
push
add
add
mov
add
inc
cmp
add
add
adc
jnp
add
add
push
and
add
add
push
or
cmp
(bad)
(bad)
dec
add
scas
add
push
cmp
add
add
mov
add
cmp
add
mov
add
inc
push
add
add
mov
add
jnp
add
add
and
adc
add
pop
add
add
jge
add
add
sbb
(bad)
(bad)
inc
mov
add
cmp
add
mov
or
mov
add
pop
push
pop
adc
pop
adc
adc
sub
add
push
and
add
add
push
or
cmp
inc
sbb
add
jnp
add
add
pop
jge
add
add
push
add
add
fs
(bad)
inc
jge
add
add
or
push
or
cmp
(bad)
inc
mov
push
add
mov
add
pop
add
mov
add
or
mov
add
jnp
add
add
adc
adc
adc
add
push
adc
sub
add
add
jnp
add
add
mov
add
adc
add
push
or
cmp
std
(bad)
(bad)
fnsave
add
add
mov
add
cli
inc
add
push
add
add
ins
add
push
add
mov
add
add
mov
add
add
mov
add
aas
or
(bad)
jmp
or
add
dec
or
cmp
pop
jge
add
add
add
add
pop
cmp
add
jnp
add
add
pop
jge
add
add
and
add
pop
jge
add
add
jnp
add
add
push
add
push
cmp
cld
(bad)
inc
mov
add
jnp
add
add
or
add
sub
(bad)
jmp
push
add
add
mov
push
std
(bad)
jmp
add
mov
(bad)
call
adc
add
mov
add
inc
(bad)
(bad)
inc
mov
add
retf
inc
mov
jnp
add
add
jnp
add
add
pop
xchg
and
add
add
sub
add
and
cmp
std
(bad)
jmp
pop
adc
add
mov
mov
mov
mov
add
add
add
add
mov
add
add
mov
add
add
pop
add
push
(bad)
sbb
add
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
adc
call
push
add
add
cmp
add
add
sbb
mov
add
and
add
add
push
add
cmp
add
add
data16
call
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
dec
add
and
add
add
fcos
(bad)
inc
add
add
add
add
add
add
push
add
cmp
jnp
add
add
add
push
add
call
add
and
add
dec
add
cmp
cmp
add
fstp
add
add
add
mov
add
add
add
sub
sbb
add
adc
add
add
add
add
add
xor
add
add
adc
add
outs
inc
add
or
pusha
add
push
adc
push
sub
add
or
inc
add
or
outs
inc
add
or
inc
add
or
add
add
lea
add
adc
adc
push
pop
sub
adc
outs
inc
add
or
or
add
adc
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
pop
sbb
pop
adc
or
sar
(bad)
call
add
dec
add
or
pop
add
add
add
add
add
dec
add
or
dec
add
add
inc
add
or
add
add
add
inc
add
or
inc
add
or
adc
cmp
add
add
adc
call
cmp
adc
pop
pop
call
add
or
pop
adc
adc
or
sar
(bad)
call
add
dec
add
or
ds
add
outs
dec
add
or
pop
inc
dec
add
add
add
pop
outs
dec
add
or
or
add
adc
pop
pop
outs
dec
add
or
or
or
jp
dec
add
or
inc
inc
adc
outs
dec
add
or
inc
inc
adc
adc
or
pop
outs
dec
add
or
add
pop
add
add
adc
dec
add
or
add
add
add
dec
add
or
adc
add
jle
add
add
add
dec
add
or
adc
popf
add
add
or
add
adc
push
add
or
or
or
jae
add
adc
outs
push
add
or
or
or
sbb
add
adc
push
adc
push
add
or
adc
add
or
push
adc
push
cmp
add
add
or
or
push
fst
add
add
pop
adc
fisttp
add
add
pop
adc
fld
add
add
push
cmp
add
add
add
jo
push
add
or
add
push
add
or
mov
add
add
push
pop
add
je
add
adc
adc
sub
add
and
add
add
push
pop
add
pop
add
add
movaps
add
adc
adc
jnp
add
add
push
add
jo
push
add
or
adc
adc
pop
add
or
test
add
adc
sub
add
adc
and
add
dec
pop
add
sbb
add
adc
adc
imul
cmp
add
and
add
add
push
pop
add
or
add
add
add
(bad)
dec
add
add
add
add
(bad)
(bad)
mov
(bad)
(bad)
jmp
add
add
dec
pop
add
int
(bad)
call
adc
add
or
adc
sub
add
and
push
pop
add
scas
(bad)
(bad)
call
adc
pop
add
or
push
fld
add
add
fld
add
add
add
add
add
push
outs
pop
add
or
push
adc
fst
or
add
adc
pop
add
or
adc
push
fst
add
add
adc
push
ffree
add
add
pop
lea
add
adc
mov
adc
adc
adc
adc
adc
add
add
mov
push
mov
add
add
pop
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
adc
adc
push
(bad)
sbb
push
sub
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
rol
add
push
add
add
add
add
add
add
add
add
add
cli
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
add
add
add
add
add
add
add
add
add
add
jp
sub
add
cmp
add
add
sub
add
add
add
add
sub
add
xor
add
add
adc
add
and
add
jge
add
add
push
add
add
mov
sub
sbb
add
add
add
add
adc
add
add
xor
add
add
adc
or
xor
add
add
add
add
add
pushf
and
cmp
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jle
add
push
jge
add
add
pop
add
add
cmp
add
add
fs
add
add
and
add
pop
jge
add
add
pop
pop
adc
and
add
add
push
add
cmp
add
fisttp
add
add
jnp
add
add
jnp
add
add
or
add
pop
adc
add
add
add
jnp
add
add
add
sub
add
or
and
add
pop
jge
add
add
inc
add
add
add
push
add
dec
add
add
add
(bad)
(bad)
cmp
add
adc
add
mov
(bad)
jmp
(bad)
call
(bad)
(bad)
cmp
add
add
add
add
add
sub
int3
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
jnp
add
add
pop
pop
cmp
add
add
add
add
sub
movs
(bad)
(bad)
jmp
push
pop
pop
or
jnp
add
add
ds
add
add
(bad)
inc
inc
or
add
mov
jne
(bad)
jmp
push
add
add
add
mov
mov
mov
add
add
mov
xchg
add
push
(bad)
sbb
sub
inc
sbb
add
add
outs
add
add
add
add
add
sbb
push
add
add
add
add
adc
jnp
add
add
ds
add
and
add
add
push
add
cmp
add
jae
add
or
and
add
ds
add
add
add
add
sub
inc
add
add
and
add
adc
add
add
add
add
add
or
add
mov
push
add
add
add
add
adc
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
jmp
(bad)
(bad)
(bad)
jg
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
add
mov
mov
pop
add
(bad)
sbb
add
add
adc
add
add
add
add
add
xor
add
add
adc
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
add
sub
add
xor
add
add
add
add
add
add
or
pop
jge
add
add
add
add
cmp
and
add
inc
inc
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
add
add
sub
fdivr
(bad)
jmp
jae
add
or
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
and
add
dec
add
cmp
and
add
(bad)
jg
add
add
add
add
mov
mov
add
pop
add
(bad)
sbb
add
add
add
add
movs
movs
add
sbb
add
xor
jle
add
or
dec
add
push
sub
add
sbb
add
add
jnp
add
add
jnp
add
add
popf
and
add
add
sub
add
add
add
add
and
add
or
pop
jge
add
add
add
pushf
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmps
add
add
(bad)
xor
add
and
add
pop
push
add
add
add
dec
add
cmp
sub
add
or
adc
add
push
mov
add
cmps
add
push
(bad)
sbb
sub
add
adc
add
add
add
add
sbb
or
jno
add
push
add
adc
jnp
add
add
jnp
add
add
push
add
sub
leave
add
add
add
add
add
cmps
add
add
(bad)
xor
add
and
add
pop
push
add
add
add
dec
add
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
pop
rcr
xor
add
or
jnp
add
add
cmps
add
add
(bad)
xor
add
and
add
pop
push
add
add
add
dec
add
cmp
add
and
add
add
and
add
push
and
push
add
add
and
add
and
sbb
jge
add
add
add
pop
sub
add
or
inc
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
call
add
add
(bad)
(bad)
inc
push
add
add
dec
add
cmp
(bad)
(bad)
inc
sbb
and
add
add
add
sbb
pop
pop
jge
add
add
push
add
add
push
add
cmp
sub
add
or
add
mov
mov
mov
add
add
mov
aas
add
push
(bad)
sbb
sub
add
inc
sbb
add
add
dec
add
add
add
add
add
sbb
push
add
add
add
add
adc
add
or
outs
pop
add
or
add
add
pop
cmp
or
add
or
push
add
add
add
add
dec
add
cmp
add
and
js
add
or
mov
add
sub
add
and
add
add
js
add
sub
add
sub
add
or
add
js
add
and
add
add
js
add
sub
add
sub
add
or
add
push
add
cmp
add
or
add
or
sahf
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
push
call
(bad)
push
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
movs
add
add
js
add
or
or
add
push
pop
or
sub
sbb
add
adc
add
add
add
fild
or
add
adc
add
add
add
and
add
add
sbb
add
sub
add
xlat
add
push
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
add
or
mov
(bad)
jmp
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
push
outs
bound
add
and
push
add
cmp
add
add
xor
add
add
sbb
add
add
add
add
add
and
add
add
cmp
push
adc
pop
pop
jno
add
add
pop
adc
add
pop
pop
pop
bound
add
pop
pop
or
add
push
add
add
push
or
add
jnp
add
add
xchg
adc
add
ds
(bad)
inc
jnp
add
add
push
adc
pop
xchg
sub
add
popf
and
add
dec
add
add
pop
add
add
add
xchg
pop
invd
pop
pop
pop
pop
bound
or
pop
or
add
add
add
imul
add
sahf
(bad)
(bad)
jmp
add
add
dec
add
add
add
add
add
add
add
add
add
add
(bad)
cmp
(bad)
jmp
jmp
add
add
add
push
add
(bad)
call
or
add
add
add
imul
add
or
add
add
cmp
(bad)
(bad)
inc
or
sahf
and
add
add
mov
xchg
(bad)
(bad)
(bad)
cmp
add
add
add
sbb
(bad)
(bad)
frstor
add
add
pop
mov
mov
mov
add
add
sub
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
add
push
or
sub
add
add
push
ins
and
cdq
icebp
aas
pop
sub
add
or
or
fld
add
add
add
add
push
sub
sub
add
sbb
add
add
add
das
add
sbb
add
add
add
(bad)
verw
sbb
add
sbb
add
push
add
add
add
adc
add
or
fst
add
add
and
add
add
push
or
add
add
push
sub
add
adc
add
add
add
or
adc
add
sbb
add
add
add
add
inc
add
inc
sbb
add
and
add
add
push
add
cmp
add
add
sbb
fst
add
add
or
push
add
add
sbb
and
add
dec
add
cmp
add
add
pop
arpl
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
jmp
add
add
sub
aam
(bad)
jmp
add
cmp
(bad)
(bad)
jmp
add
push
add
cmp
add
fst
add
push
mov
add
cmps
add
push
(bad)
sbb
sub
add
add
add
add
add
mov
add
add
xor
add
add
adc
jnp
add
add
sbb
add
or
add
add
sub
sub
add
add
add
add
jnp
add
add
push
add
add
add
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
adc
sbb
sub
add
add
add
add
add
jbe
add
sbb
add
sbb
or
out
add
sbb
add
jae
add
push
or
rol
add
sub
add
sub
add
and
js
add
sub
add
sub
add
sub
add
rol
add
sub
add
sub
add
and
add
add
push
sub
add
sub
add
sub
or
rol
add
sub
add
sub
add
and
add
sub
add
sub
add
sub
add
sub
adc
rol
add
sub
add
sub
add
and
js
add
sub
add
sub
add
sub
push
and
js
add
sub
add
and
add
add
push
sub
add
sub
add
sub
push
and
js
add
sub
add
and
push
add
sub
add
sub
add
sub
add
adc
and
add
add
js
add
sub
add
and
add
sub
add
sub
add
sub
adc
add
add
push
sub
add
and
js
add
sub
add
sub
add
sub
or
pop
add
add
pop
call
add
add
add
jno
add
add
add
add
jno
add
add
add
call
or
adc
js
add
sub
add
adc
sub
or
or
paddd
push
jl
add
add
adc
adc
rcr
add
add
add
or
data16
or
add
or
add
add
std
add
push
adc
adc
push
jge
add
add
add
add
pop
cmp
add
adc
(bad)
sub
add
adc
adc
push
cmp
add
adc
pop
ficom
(bad)
lea
add
add
and
add
push
adc
mov
or
hlt
add
add
add
add
dec
daa
add
or
add
add
add
(bad)
jmp
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
mov
add
add
sub
add
es
add
add
adc
adc
add
sbb
add
and
add
push
adc
add
add
or
adc
add
jae
add
or
add
or
and
and
outs
imul
or
sldt
add
push
daa
add
dec
(bad)
(bad)
dec
sub
or
pop
add
add
or
add
dec
daa
add
xor
mov
add
lea
push
adc
push
and
add
add
or
add
sbb
add
push
outs
and
inc
add
add
or
add
sub
cld
(bad)
(bad)
jmp
adc
push
jl
add
add
sbb
add
pop
push
(bad)
adc
adc
and
add
cmp
add
add
add
add
sub
int3
(bad)
(bad)
jmp
jae
add
or
push
pop
sub
adc
push
jl
add
add
sbb
add
pop
push
(bad)
adc
sbb
push
add
add
add
or
sbb
adc
add
or
jl
add
add
sbb
add
adc
push
push
cmp
add
add
add
or
add
(bad)
sub
add
adc
adc
adc
(bad)
sub
add
jge
add
add
adc
adc
adc
jl
add
add
sbb
add
sbb
push
and
xor
add
inc
outs
xor
add
jge
add
add
cmp
adc
add
add
inc
mov
add
pop
adc
or
add
sub
(bad)
std
(bad)
jmp
adc
and
js
add
or
push
add
or
or
add
or
or
add
or
add
or
sbb
add
or
clts
jl
add
add
sbb
add
cmp
add
add
push
add
add
push
daa
add
scas
std
(bad)
call
adc
sbb
add
add
push
pop
sub
adc
add
add
adc
sahf
adc
push
jl
add
add
sbb
add
push
outs
sub
add
outs
push
push
push
add
add
add
or
cmp
std
(bad)
call
adc
add
jae
add
or
add
or
add
or
mov
add
add
sub
add
and
add
add
push
daa
add
cmp
(bad)
call
sbb
sbb
fidivr
adc
add
adc
jnp
add
add
outs
add
or
sbb
or
add
dec
daa
add
adc
adc
jl
add
add
sbb
add
adc
add
add
and
adc
adc
mov
add
push
cmp
add
add
add
or
sbb
sbb
adc
and
push
daa
add
retf
cld
(bad)
push
add
or
add
(bad)
sub
add
adc
adc
or
(bad)
jmp
add
add
dec
daa
add
mov
adc
adc
jl
add
add
sbb
add
adc
and
xor
add
inc
outs
xor
add
jge
add
add
adc
add
add
inc
push
add
add
add
or
adc
jl
add
add
sbb
add
adc
add
add
add
add
add
or
and
add
cmp
add
add
add
or
sbb
clc
add
add
adc
sbb
sub
add
adc
push
adc
cmp
(bad)
(bad)
call
add
(bad)
sub
add
adc
adc
(bad)
sub
add
adc
and
add
add
push
daa
add
hlt
sti
(bad)
push
add
or
add
add
or
sbb
add
(bad)
sub
add
adc
and
push
daa
add
(bad)
sti
(bad)
call
and
outs
add
or
adc
add
sub
add
or
adc
sub
add
or
sldt
add
sub
adc
fnsave
add
adc
adc
(bad)
add
pop
lea
add
adc
mov
mov
add
add
mov
mov
add
add
add
adc
adc
adc
add
add
mov
or
adc
mov
adc
mov
adc
mov
adc
add
adc
mov
adc
mov
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
adc
adc
adc
push
(bad)
sbb
sub
inc
xor
add
add
add
add
dec
push
add
adc
add
sbb
add
ja
add
ja
add
ins
add
add
add
sbb
or
xor
add
sbb
mov
add
add
add
add
dec
or
cmp
mov
jo
adc
jno
add
add
add
or
push
add
push
adc
add
push
or
cmp
outs
dec
add
or
fiadd
add
add
or
add
pop
(bad)
or
adc
ds
add
add
add
dec
or
cmp
add
or
add
add
(bad)
lea
add
add
jb
add
je
add
sbb
push
add
add
push
or
cmp
add
add
mov
adc
adc
push
or
test
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
jmp
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
(bad)
mov
add
add
add
add
dec
or
cmp
(bad)
(bad)
dec
adc
frstor
add
add
pop
or
mov
add
add
add
add
push
mov
add
sub
add
(bad)
sbb
pop
sub
add
add
or
add
or
add
daa
add
add
add
sbb
add
add
add
adc
sub
add
or
add
add
cmp
add
add
or
add
add
push
cmp
add
es
mov
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
sub
fdivr
(bad)
jmp
fst
add
add
or
sldt
add
pop
mov
add
add
sub
sbb
sub
adc
add
add
add
add
sbb
add
or
add
sbb
add
add
add
add
jge
add
add
push
jge
add
add
or
add
add
xchg
add
push
(bad)
sbb
add
add
add
add
adc
add
sbb
add
sbb
add
and
add
or
add
add
push
add
push
add
push
add
push
pop
adc
or
or
add
add
xchg
add
push
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
sbb
add
add
add
adc
daa
add
or
adc
sbb
or
int
add
sub
add
sub
cmp
add
and
add
add
js
add
sub
and
add
or
adc
and
add
add
js
add
sub
cmp
add
and
add
sub
add
sub
and
add
or
and
js
add
sub
add
or
sub
or
adc
and
js
add
or
or
and
push
add
sub
add
sub
sub
add
push
inc
je
add
sbb
push
add
sub
add
adc
push
adc
and
push
add
sub
add
sub
add
push
cmp
add
pop
or
or
and
add
sub
add
sub
jmp
add
sub
add
sub
add
jae
add
or
pop
pop
or
or
pop
pop
outs
ja
add
pop
or
or
pop
pop
outs
js
add
pop
or
or
pop
sub
add
es
movlps
sbb
add
and
add
sub
add
or
adc
or
push
and
pop
add
sub
add
sub
add
adc
adc
or
add
add
or
adc
or
and
add
sub
add
sub
and
add
adc
or
lods
add
add
or
pop
push
adc
inc
adc
add
add
(bad)
(bad)
jmp
(bad)
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fdivr
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
jmp
(bad)
(bad)
jnp
(bad)
call
cmp
or
or
or
add
add
add
add
and
sbb
add
adc
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
or
add
daa
add
or
data16
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
add
push
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
sbb
add
xor
jnp
add
add
or
add
sub
add
adc
add
add
add
adc
sbb
or
add
or
push
add
push
sbb
add
push
sbb
add
push
mov
add
sub
add
xor
sbb
add
add
add
add
jnp
add
add
push
add
push
fisttp
add
add
add
adc
sbb
add
adc
add
add
add
adc
or
add
sbb
push
add
add
add
add
adc
jnp
add
add
imul
add
push
pop
add
mov
jnp
add
add
adc
pop
pop
sbb
adc
xchg
xchg
adc
add
adc
adc
adc
add
nop
add
add
or
or
add
dec
pop
add
jl
add
push
or
cmp
add
add
add
add
add
adc
add
add
add
push
pop
add
push
add
add
adc
or
add
dec
pop
add
add
add
add
pop
adc
add
aas
mov
add
add
dec
pop
add
and
add
cmp
add
adc
or
adc
cmp
add
add
push
add
add
push
pop
add
or
add
add
add
add
test
(bad)
(bad)
out
(bad)
(bad)
dec
add
add
add
add
add
test
(bad)
dec
add
add
(bad)
(bad)
jmp
(bad)
jmp
add
add
add
add
add
add
add
add
(bad)
(bad)
call
(bad)
(bad)
inc
add
mov
add
and
add
add
mov
adc
pop
pop
pop
adc
adc
or
sub
add
and
add
push
cmp
push
lea
and
add
add
je
(bad)
call
adc
pop
adc
cmp
(bad)
(bad)
call
adc
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
and
add
add
push
pop
add
es
(bad)
(bad)
cmp
add
add
adc
pop
adc
xchg
sahf
and
push
pop
add
or
(bad)
call
or
adc
sahf
adc
adc
add
push
xchg
push
bound
add
push
pop
add
jecxz
(bad)
call
adc
adc
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
or
cmp
and
add
add
push
pop
add
test
(bad)
(bad)
cmp
add
add
adc
pop
or
add
add
or
adc
xchg
xchg
adc
pop
adc
pop
pop
xchg
xchg
ds
add
add
adc
pop
adc
pop
adc
pop
adc
xchg
sahf
adc
adc
adc
sbb
pop
adc
adc
or
mov
or
adc
add
pop
adc
pop
adc
xchg
sahf
adc
and
adc
or
adc
pop
pop
sbb
adc
xchg
xchg
adc
cmp
pop
adc
adc
sahf
pop
push
xchg
adc
or
pop
pop
adc
adc
or
adc
pop
adc
sahf
adc
sbb
adc
pop
adc
adc
adc
xchg
and
add
add
or
adc
and
add
add
jnp
add
adc
adc
adc
xchg
adc
adc
pop
adc
adc
sahf
and
add
add
retf
std
(bad)
call
or
adc
(bad)
inc
push
xchg
adc
pop
or
pop
and
push
adc
pop
adc
and
add
add
cmp
or
push
cmp
add
add
adc
pop
adc
xchg
sahf
and
add
add
jg
(bad)
call
pop
adc
adc
push
ds
(bad)
jmp
add
add
dec
pop
add
popa
std
(bad)
(bad)
cmp
sbb
push
add
add
cmp
pop
pop
and
or
or
(bad)
(bad)
inc
or
pop
add
add
add
jl
add
jge
add
add
adc
sbb
pop
sbb
add
or
or
pop
lea
or
or
or
adc
add
push
pop
add
hlt
cld
(bad)
inc
adc
sub
add
push
fld
add
pop
pop
lea
add
adc
adc
push
push
mov
adc
pop
pop
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
add
adc
pop
adc
add
add
add
add
push
(bad)
sbb
add
add
add
call
add
add
add
sbb
add
and
pop
jge
add
add
add
add
add
add
cli
add
add
pusha
add
push
sub
sbb
add
add
add
push
or
adc
add
push
sbb
and
add
add
cmp
add
add
add
cmp
(bad)
(bad)
jmp
add
add
cmp
add
add
pop
arpl
add
in
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
add
fst
add
push
mov
add
cmps
add
push
(bad)
sbb
sub
add
add
add
add
add
outs
outs
add
add
add
add
jge
add
add
add
add
xor
add
add
adc
add
add
dec
(bad)
cmp
add
add
add
and
add
add
push
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
dec
(bad)
cmp
(bad)
(bad)
call
add
sub
(bad)
(bad)
(bad)
jmp
push
or
jae
add
or
add
cmp
add
add
or
mov
add
add
dec
or
cmp
add
add
adc
cmp
adc
call
add
or
ds
add
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
pop
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
outs
jle
add
sbb
adc
adc
push
pop
or
pop
or
add
or
add
add
or
add
add
push
cmp
or
pop
or
or
pop
adc
and
push
or
cmp
or
or
(bad)
(bad)
fisttp
add
add
adc
add
or
add
or
add
add
add
add
pop
cmp
add
add
or
outs
jg
add
pop
pop
outs
add
or
push
cmp
add
and
add
add
push
or
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
push
add
add
add
add
dec
or
(bad)
call
push
outs
add
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
add
sub
mov
(bad)
jmp
adc
outs
add
or
fld
add
add
fld
add
add
add
or
add
push
adc
and
add
add
push
push
add
and
outs
test
add
and
pop
add
sub
add
adc
outs
test
add
cmp
add
add
add
add
dec
push
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
push
add
sar
(bad)
(bad)
cmp
add
add
add
or
and
add
sub
add
outs
xchg
add
je
add
sbb
or
add
cmp
add
add
or
and
add
sub
add
outs
xchg
add
cmp
mov
add
adc
and
add
sub
js
(bad)
jmp
adc
adc
outs
mov
add
fld
add
add
fld
add
add
add
sub
add
add
inc
add
or
add
add
dec
add
add
add
add
add
mov
add
fiadd
and
pop
add
sub
add
outs
or
and
add
add
push
pop
add
sub
add
outs
or
add
cmp
add
add
gs
add
sub
add
sub
sub
xor
add
add
adc
scas
pop
add
sub
add
adc
and
add
add
icebp
add
add
mov
add
adc
outs
inc
add
or
adc
sub
adc
adc
adc
or
or
or
pop
push
pop
outs
lea
add
adc
jae
add
or
adc
adc
outs
mov
add
and
add
add
push
adc
add
and
pop
add
sub
add
adc
adc
add
push
adc
add
adc
adc
adc
or
add
adc
adc
or
jae
add
or
push
mov
lea
add
add
sysret
adc
push
adc
mov
or
or
add
or
outs
and
add
and
push
adc
add
and
pop
add
sub
add
adc
and
add
add
pop
sub
or
add
or
add
jmp
push
add
add
push
adc
add
add
add
(bad)
(bad)
dec
(bad)
push
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
dec
add
add
add
movs
(bad)
(bad)
dec
add
add
add
dec
adc
(bad)
jmp
inc
add
or
movhps
outs
xchg
add
or
push
and
add
add
push
adc
(bad)
jmp
mov
add
sub
add
adc
and
add
add
mov
nop
(bad)
(bad)
(bad)
cmp
push
adc
pop
adc
or
add
adc
adc
push
push
mov
mov
mov
adc
sbb
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
add
add
push
(bad)
sbb
adc
add
add
test
add
test
add
lahf
add
add
add
adc
add
in
add
or
add
and
add
dec
add
cmp
pop
jge
add
add
pop
jge
add
add
outs
dec
add
or
or
add
add
sub
outs
xchg
add
or
push
add
add
push
add
cmp
add
add
jge
add
add
add
add
dec
add
cmp
add
add
add
add
or
cmp
and
pop
add
sub
add
cmp
add
add
test
add
push
sub
adc
add
cmp
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
outs
xchg
add
or
add
push
add
cmp
add
add
xor
add
or
add
add
adc
sbb
add
dec
add
cmp
add
jnp
add
add
outs
xchg
add
or
jnp
add
add
cmp
js
add
and
add
pop
sbb
jae
add
or
add
or
jnp
add
add
adc
jl
cdq
add
or
add
or
jnp
add
add
jge
add
pop
adc
add
or
add
or
jnp
add
add
pop
or
add
js
add
and
js
add
sub
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
lahf
add
or
add
add
cmp
jnp
add
add
outs
lahf
add
or
jnp
add
add
push
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
mov
and
add
add
add
or
add
or
jnp
add
add
outs
mov
jnp
add
add
cdq
or
add
js
add
outs
popf
add
or
jnp
add
add
inc
test
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
movs
add
or
jnp
add
add
outs
lahf
add
or
jnp
add
add
imul
add
outs
pushf
add
or
adc
add
cmp
add
add
jnp
add
add
sbb
nop
add
add
jo
add
pop
adc
add
or
jnp
add
add
outs
sahf
add
or
jnp
add
add
adc
mov
js
and
add
or
or
add
push
cmp
add
add
add
or
or
jnp
add
add
add
add
sub
add
outs
popf
add
or
jnp
add
add
inc
xchg
add
jae
add
or
add
or
jnp
add
add
push
outs
sahf
add
or
adc
add
sub
dec
add
add
add
add
add
adc
inc
jae
add
or
add
or
jnp
add
add
jge
add
pop
or
or
add
or
jnp
add
add
or
add
or
gs
(bad)
jmp
sbb
add
dec
add
dec
add
add
add
add
add
les
add
(bad)
(bad)
call
add
(bad)
call
add
add
add
inc
push
add
xor
add
add
add
add
add
add
std
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
and
add
add
mov
jo
(bad)
jmp
add
add
add
outs
xor
add
add
add
add
outs
xor
add
and
add
add
cmp
jmp
add
add
add
cmps
add
or
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
add
push
outs
test
add
add
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
mov
push
add
add
mov
mov
(bad)
jmp
add
add
add
outs
sahf
add
or
or
add
dec
add
cmp
jnp
add
add
dec
pop
sbb
add
or
add
or
jnp
add
add
nop
add
add
jnp
add
add
mov
and
add
add
add
or
add
or
push
add
add
mov
push
(bad)
(bad)
jmp
add
add
add
jnp
add
add
test
jnp
add
add
mov
sbb
and
add
add
add
or
add
or
jnp
add
add
push
outs
mov
jnp
add
add
mov
js
add
outs
popf
add
or
jnp
add
add
outs
stos
add
or
jnp
add
add
inc
pop
add
jae
add
or
add
or
jnp
add
add
push
outs
sahf
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
adc
mov
add
jae
add
or
add
or
jnp
add
add
jge
add
pop
aaa
jae
add
or
add
or
jnp
add
add
(bad)
or
add
js
add
and
js
add
sub
or
add
or
add
add
sub
fs
(bad)
jmp
add
add
add
stos
add
or
adc
dec
std
(bad)
inc
push
sub
add
add
push
add
cmp
jnp
add
add
lods
add
or
sub
or
add
dec
add
cmp
std
(bad)
inc
jnp
add
add
or
add
or
jnp
add
add
outs
lahf
add
or
jnp
add
add
imul
add
outs
pushf
add
or
jnp
add
add
jnp
add
add
test
jnp
add
add
mov
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
mov
jnp
add
add
movs
or
add
js
add
outs
popf
add
or
jnp
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
or
add
or
push
add
add
cmp
(bad)
jmp
add
sub
push
sub
pop
sub
and
or
add
js
add
outs
popf
add
or
outs
mov
add
outs
dec
add
or
adc
add
add
retf
add
js
add
outs
popf
add
or
pop
sub
push
add
add
fld
add
add
jnp
add
add
outs
mov
add
add
add
add
outs
mov
add
add
sub
adc
add
dec
add
cmp
sti
(bad)
inc
jnp
add
add
cmps
add
or
or
or
push
add
add
add
pop
pop
add
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
jnp
add
add
pop
sbb
add
pop
push
add
add
add
pop
pop
or
jnp
add
add
pop
outs
test
add
and
add
add
push
add
cmp
inc
jnp
add
add
lods
add
or
adc
add
dec
add
cmp
(bad)
inc
jnp
add
add
outs
mov
add
add
dec
add
cmp
sti
(bad)
inc
jnp
add
add
outs
lahf
add
or
jnp
add
add
push
pop
bound
add
or
add
or
jnp
add
add
loop
add
pop
adc
add
or
add
or
add
add
push
cmp
cli
(bad)
jmp
add
add
add
jnp
add
add
mov
add
outs
call
add
add
jnp
add
add
mov
add
outs
pushf
add
or
jnp
add
add
outs
mov
jnp
add
add
mov
add
sub
add
outs
popf
add
or
jnp
add
add
outs
stos
add
or
jnp
add
add
inc
add
push
jae
add
or
add
or
jnp
add
add
push
and
cdq
add
or
add
or
jnp
add
add
outs
stos
add
or
jnp
add
add
sbb
dec
and
add
pop
adc
add
or
jnp
add
add
sbb
pusha
and
add
pop
adc
add
or
jnp
add
add
sbb
js
jo
add
pop
adc
add
or
add
push
add
cmp
cli
(bad)
inc
pop
sub
sbb
cmp
stc
(bad)
jmp
add
add
add
outs
lahf
add
or
jnp
add
add
inc
pop
sbb
add
or
add
or
adc
add
cmp
stc
(bad)
inc
jnp
add
add
or
or
or
add
cmp
jnp
add
add
xchg
or
add
js
add
outs
popf
add
or
jnp
add
add
inc
test
add
jae
add
or
add
or
pop
add
add
push
add
cmp
(bad)
inc
push
sub
sub
lea
add
add
push
add
add
add
or
add
add
add
or
add
add
add
or
add
or
sbb
add
dec
add
cmp
stc
(bad)
inc
jnp
add
add
popf
add
add
lock
add
add
or
add
or
jnp
add
add
outs
mov
jnp
add
add
outs
stos
add
or
sbb
or
or
add
or
and
call
fwait
add
or
mov
add
add
dec
add
cmp
clc
(bad)
inc
jnp
add
add
stos
add
or
and
or
add
jae
add
or
mov
jnp
add
add
outs
mov
jnp
add
add
outs
mov
push
add
add
cmp
add
add
add
jnp
add
add
test
jnp
add
add
mov
sbb
and
add
add
add
or
add
or
jnp
add
add
outs
mov
jnp
add
add
cmps
or
add
js
add
outs
popf
add
or
jnp
add
add
inc
xchg
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
lahf
add
or
jnp
add
add
jnp
add
add
mov
add
outs
call
add
add
jnp
add
add
mov
add
outs
pushf
add
or
jnp
add
add
outs
mov
jnp
add
add
stos
or
add
js
add
outs
popf
add
or
jnp
add
add
outs
stos
add
or
jnp
add
add
inc
lea
add
jae
add
or
add
or
jnp
add
add
or
add
or
jnp
add
add
outs
lahf
add
or
or
cmp
add
add
add
sub
push
or
add
sbb
push
add
add
add
add
sub
or
add
or
pop
cmp
add
push
pop
sub
add
cmp
add
add
pop
frstor
jae
add
push
or
lea
add
add
add
adc
add
push
dec
add
clc
add
add
sub
add
push
push
add
push
adc
or
push
add
push
adc
adc
push
dec
add
sbb
add
adc
add
add
push
cmp
add
add
pop
push
cmp
add
add
add
jo
mov
or
cmp
add
or
cmp
add
or
cmp
add
or
cmp
add
adc
or
push
add
push
adc
or
push
add
push
adc
adc
push
ds
or
adc
or
or
adc
outs
push
add
or
adc
push
ds
or
adc
adc
adc
outs
push
add
or
or
add
or
outs
mov
aam
sbb
add
adc
adc
add
or
adc
push
adc
adc
lea
add
add
push
push
or
jle
add
es
or
add
add
sbb
movups
nop
bound
add
add
jnp
jge
inc
cmp
add
adc
pop
inc
add
add
sub
add
push
adc
adc
lea
add
add
inc
add
add
sub
add
push
adc
or
cmp
add
adc
adc
lea
add
add
adc
adc
add
or
adc
push
adc
adc
adc
adc
sub
add
adc
adc
pop
adc
adc
adc
aas
mov
(bad)
call
prefetchnta
add
add
lea
add
add
add
mov
push
push
lea
add
add
add
mov
pop
pop
adc
adc
sub
sbb
sbb
sbb
mov
pop
outs
rol
or
sbb
sbb
dec
add
push
or
add
sbb
pop
add
add
sbb
add
or
adc
sbb
add
add
adc
and
add
mov
sbb
adc
and
add
mov
sbb
adc
adc
sub
sbb
sbb
sbb
mov
pop
outs
rol
or
sbb
add
push
or
add
sbb
pop
add
add
sbb
rol
or
jb
add
jo
mov
or
add
or
or
pop
fstp
add
add
pop
lea
add
adc
adc
push
push
mov
mov
mov
mov
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
adc
pop
or
push
pop
push
adc
mov
adc
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
push
pop
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
sbb
push
pop
push
add
add
push
(bad)
sbb
pop
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
sbb
add
sbb
add
sbb
add
pop
add
and
jnp
add
add
xchg
pop
inc
or
add
push
pop
add
dec
add
add
add
add
or
outs
dec
add
or
pop
or
xor
add
push
cmp
add
or
cmp
add
add
dec
pop
add
sbb
add
add
outs
dec
add
or
enter
and
push
pop
add
or
add
add
add
add
mov
(bad)
inc
add
add
add
imul
add
cmp
add
mov
add
in
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
or
cmp
push
cmp
(bad)
inc
push
outs
dec
add
or
and
pusha
(bad)
(bad)
jmp
add
add
dec
pop
add
xchg
(bad)
(bad)
(bad)
cmp
add
adc
add
imul
adc
outs
add
add
add
add
dec
pop
add
data16
(bad)
inc
cmp
outs
dec
add
or
or
(bad)
inc
cmp
push
add
add
push
pop
add
inc
(bad)
(bad)
call
adc
inc
jnp
add
add
add
(bad)
(bad)
inc
add
add
add
imul
adc
pop
add
add
cmp
(bad)
(bad)
jmp
adc
add
add
pop
pop
or
push
cmp
(bad)
(bad)
jmp
or
add
sub
out
(bad)
(bad)
jmp
pop
adc
fisttp
add
add
adc
add
add
push
sub
inc
sbb
add
add
add
add
add
add
or
add
inc
add
add
add
add
sub
fstp
add
add
add
or
sub
add
outs
sub
add
sub
add
or
add
add
and
pop
add
sub
sub
add
cmp
(bad)
(bad)
inc
mov
xchg
add
push
(bad)
sbb
add
sbb
add
add
add
add
sbb
add
add
add
cmp
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
and
add
add
adc
jnp
add
add
add
add
add
inc
or
or
add
add
xchg
add
push
(bad)
sbb
sub
adc
add
add
add
push
add
sbb
add
adc
add
add
add
adc
pop
or
or
push
add
push
sbb
add
push
sbb
add
push
mov
mov
mov
mov
or
add
sub
xor
add
add
adc
add
push
add
add
add
or
mov
or
push
mov
sbb
add
or
fwait
add
push
and
add
add
push
add
add
push
sub
sbb
push
pop
add
add
add
push
add
add
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
cmp
pop
jle
add
add
mov
add
add
cmp
and
js
add
jae
add
push
or
jnp
add
add
push
(bad)
(bad)
dec
add
add
add
cmp
add
push
add
add
push
add
(bad)
inc
sub
fst
add
jle
add
add
mov
adc
push
and
or
add
js
add
sub
add
push
or
add
add
dec
add
(bad)
dec
jnp
add
add
adc
add
add
adc
add
add
add
add
sbb
add
add
add
sbb
add
ins
add
push
or
or
add
add
add
cmps
add
push
(bad)
sbb
sub
add
add
add
add
(bad)
str
sbb
add
sbb
add
pop
add
add
add
adc
outs
ret
or
outs
ret
or
bound
fisttp
add
add
sub
sbb
sub
add
add
add
add
adc
add
add
xor
add
add
add
add
adc
outs
ret
add
or
add
or
and
add
push
cmp
add
add
ffree
add
add
cmp
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
add
or
add
dec
add
add
add
and
add
add
cmp
(bad)
(bad)
jmp
add
add
or
add
or
pop
adc
add
adc
add
mov
or
add
scas
(bad)
(bad)
call
or
and
add
pop
or
adc
add
and
xchg
(bad)
(bad)
call
or
add
pop
pop
or
pop
mov
xlat
(bad)
(bad)
jmp
push
add
add
push
add
cmp
call
or
add
pop
or
add
cdq
add
push
(bad)
sbb
sub
add
add
add
add
int3
int3
add
sbb
add
sbb
push
add
add
add
adc
add
cmps
add
add
add
add
(bad)
xor
add
and
add
pop
push
add
or
add
cmp
add
push
adc
add
add
dec
or
cmp
add
add
adc
add
add
add
cmps
add
add
add
add
add
adc
cmp
add
add
or
add
dec
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
sti
add
add
add
xor
add
mov
add
mov
(bad)
(bad)
js
(bad)
(bad)
cmp
add
and
add
add
mov
sub
add
push
and
add
add
push
or
cmp
and
add
or
add
cmps
add
add
add
jle
add
add
add
pop
pop
or
adc
add
push
add
add
aam
(bad)
jmp
or
add
dec
or
cmp
(bad)
(bad)
jle
add
add
or
add
add
or
or
pop
adc
sub
add
push
add
add
pop
jle
add
add
or
add
add
or
or
pop
adc
sub
add
push
add
push
and
add
add
push
or
cmp
(bad)
inc
sbb
sbb
adc
add
add
add
and
add
(bad)
add
add
or
add
add
add
add
push
add
add
cmp
add
add
pop
sbb
mov
add
add
add
pop
and
leave
(bad)
(bad)
(bad)
fnstsw
jnp
add
add
add
push
add
add
cmp
add
add
pop
sbb
mov
add
add
add
add
push
and
cmp
add
add
inc
add
push
add
add
inc
add
push
add
add
jnp
add
add
lods
add
push
add
add
jnp
add
add
lods
add
push
add
add
inc
add
push
sbb
pop
adc
and
add
add
mov
cmp
(bad)
jmp
adc
std
(bad)
dec
or
add
add
or
push
aas
and
(bad)
jmp
add
add
dec
or
cmp
push
push
sbb
add
add
cwde
add
push
pop
add
add
cwde
add
push
pop
add
add
cwde
add
push
pop
add
add
or
jnp
add
add
and
add
sub
leave
std
(bad)
jmp
cmp
add
add
add
cmps
add
add
cwde
add
add
xchg
xchg
push
ds
add
pop
pop
pop
or
pop
pop
or
push
cmp
and
add
add
mov
mov
(bad)
jmp
add
push
fnstsw
add
pop
or
adc
adc
push
push
mov
adc
pop
pop
mov
adc
sbb
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
mov
add
adc
push
add
adc
pop
or
mov
adc
pop
or
add
add
mov
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
sbb
add
sbb
add
adc
add
adc
or
add
or
or
add
es
fld
add
add
sub
add
add
add
add
add
or
add
or
add
sbb
or
inc
add
add
add
adc
jnp
add
add
and
add
add
push
pop
add
mov
and
jnp
add
add
adc
mov
add
add
jge
add
add
jnp
add
add
adc
mov
pop
push
cmp
add
add
or
add
dec
pop
add
jg
add
push
adc
fucom
add
add
jnp
add
add
adc
mov
add
add
jge
add
add
add
add
dec
pop
add
push
add
add
mov
add
add
add
add
inc
add
add
pop
or
jo
add
or
add
cmp
add
add
sub
fst
adc
and
sbb
add
(bad)
call
adc
cmp
(bad)
jmp
or
add
dec
pop
add
or
add
add
add
add
adc
add
add
(bad)
push
add
cmps
(bad)
(bad)
inc
(bad)
inc
(bad)
jmp
(bad)
push
add
inc
(bad)
(bad)
push
add
add
add
add
add
add
sub
mov
(bad)
jmp
add
add
add
jnp
add
add
jnp
add
add
imul
add
add
push
cmp
cmp
add
add
jae
add
push
jge
add
add
sbb
jo
add
adc
fstp
add
add
add
add
add
adc
mov
adc
add
add
push
pop
add
dec
(bad)
(bad)
dec
sbb
or
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
out
(bad)
(bad)
jmp
or
add
pop
cmp
push
adc
(bad)
add
add
add
add
sub
push
push
cmp
add
add
adc
fst
add
add
add
add
sub
pop
pop
cmp
add
add
pop
jge
add
add
pop
arpl
add
add
add
add
mov
add
add
(bad)
(bad)
jmp
or
add
cmp
and
add
pop
jge
add
add
jnp
add
add
sldt
add
sbb
add
add
adc
fucomp
add
add
jnp
add
add
xchg
add
push
inc
adc
fstp
add
add
jnp
add
add
jnp
add
add
movs
add
push
cmp
add
add
adc
fnstsw
add
add
add
add
push
jge
add
add
add
add
add
xor
jp
add
sbb
add
add
add
dec
pop
add
adc
pushf
(bad)
(bad)
inc
jnp
add
add
sbb
add
add
jge
add
add
test
(bad)
inc
jle
add
add
jns
add
jle
add
add
jp
add
sbb
add
add
add
sub
sar
(bad)
jmp
fnsave
add
add
adc
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
sub
sbb
push
sub
add
add
adc
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
and
add
add
js
add
or
or
add
push
sub
sbb
add
add
adc
add
add
add
adc
or
add
adc
push
add
add
and
add
add
push
add
cmp
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
jae
add
push
outs
or
add
and
push
add
cmp
rol
add
and
add
add
push
add
cmp
adc
add
jg
add
or
add
and
add
add
cmp
add
add
add
jge
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
outs
xchg
add
or
add
push
add
cmp
jnp
add
add
outs
xchg
add
or
add
add
dec
add
cmp
add
xor
add
daa
add
or
adc
sbb
or
push
or
add
js
add
or
adc
and
add
add
js
add
sub
cmp
add
and
add
add
js
add
sub
and
add
or
adc
pop
and
push
add
sub
add
sub
sub
add
push
inc
sub
add
sbb
or
sub
add
js
add
and
add
add
js
add
sub
cmp
add
and
add
sub
add
sub
sub
add
js
add
sub
add
or
push
sbb
or
add
or
or
add
js
add
or
sub
add
js
add
and
add
sub
add
sub
cmp
add
and
js
add
sub
add
adc
pop
or
or
mov
js
add
sub
add
and
add
sub
add
sub
cmp
add
adc
or
or
dec
or
add
or
pop
or
or
add
push
cmp
add
pop
or
or
add
or
pop
push
adc
adc
jp
add
sub
add
adc
add
js
add
sub
add
or
mov
or
pop
movlps
and
add
sub
add
or
pop
adc
or
dec
or
add
or
(bad)
or
pop
push
adc
inc
adc
add
add
add
adc
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
call
push
(bad)
push
(bad)
dec
(bad)
(bad)
(bad)
std
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
cmp
(bad)
dec
(bad)
call
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
cmp
or
or
or
add
add
add
add
add
add
add
add
add
or
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
or
add
daa
add
or
popa
add
add
or
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
pop
or
or
adc
pop
or
or
adc
sub
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
sbb
add
add
add
adc
sub
add
or
add
add
or
add
add
push
cmp
add
adc
or
sub
add
push
or
push
add
add
add
sub
add
add
add
or
add
sbb
add
add
mov
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
add
add
add
(bad)
(bad)
call
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
(bad)
inc
pop
sub
or
cmp
add
add
outs
rol
or
fld
add
add
fld
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
loop
add
add
add
or
add
xor
add
add
add
add
adc
add
add
dec
add
cmp
add
add
lods
add
or
add
add
pop
cmp
add
add
add
add
add
or
add
or
jnp
add
add
outs
lahf
add
or
jnp
add
add
fs
sbb
add
or
add
or
add
add
cmp
add
add
jnp
add
add
int3
or
add
js
add
outs
popf
add
or
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
add
add
sub
retf
add
add
add
add
add
cwde
add
add
jnp
add
add
mov
and
add
or
add
or
jnp
add
add
outs
mov
add
mov
mov
add
cmp
sub
add
add
push
add
cmp
add
add
sub
pop
add
add
mov
pop
add
add
push
add
add
push
sub
or
add
dec
add
cmp
add
add
jnp
add
add
or
add
or
jnp
add
add
outs
lahf
add
or
jnp
add
add
fs
sbb
add
or
add
or
push
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jl
(bad)
dec
(bad)
inc
(bad)
push
(bad)
call
call
add
add
(bad)
jmp
add
and
add
add
mov
mov
add
add
add
jnp
add
add
test
jnp
add
add
mov
sbb
and
add
or
add
or
jnp
add
add
outs
mov
jnp
add
add
aad
add
sub
add
outs
popf
add
or
jnp
add
add
inc
xchg
add
push
jae
add
or
add
or
jnp
add
add
outs
sahf
add
or
jnp
add
add
and
js
and
add
or
jnp
add
add
outs
xor
add
add
add
add
or
or
jnp
add
add
adc
dec
jae
add
or
add
or
jnp
add
add
jle
add
pop
or
or
add
or
sbb
or
or
add
or
and
loopne
add
jae
add
or
mov
push
sub
sub
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
sbb
jnp
add
add
push
outs
test
add
add
sub
push
sub
push
sub
or
add
dec
add
cmp
(bad)
jmp
add
xor
add
add
add
mov
push
add
add
fld
add
add
pop
add
add
or
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
add
adc
add
add
add
add
aas
xlat
add
add
add
push
add
cmp
add
add
jge
add
add
push
jge
add
add
cmp
add
and
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
retf
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
jnp
add
add
jnp
add
add
add
sub
add
or
add
add
cmp
and
add
pop
jge
add
add
push
add
add
push
add
cmp
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
add
add
fs
add
add
and
add
pop
jge
add
add
add
add
add
jnp
add
add
ds
(bad)
inc
jnp
add
add
jnp
add
add
adc
add
add
add
jnp
add
add
add
sub
add
or
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
push
mov
add
add
mov
cdq
add
push
(bad)
sbb
sub
add
inc
sbb
add
add
sub
add
sbb
add
sbb
add
sbb
add
int3
add
add
add
adc
add
or
jae
add
outs
retf
add
or
and
add
add
mov
jno
add
cmp
add
cmp
add
add
add
or
je
add
outs
retf
add
or
push
cmp
add
add
add
add
pop
cmp
add
es
outs
int3
add
or
add
push
add
cmp
add
adc
frstor
add
push
and
or
add
js
add
adc
int
add
je
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
(bad)
push
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
or
add
es
fld
add
add
sub
adc
add
add
add
ret
or
add
sbb
add
add
add
adc
add
add
pop
maxps
cdq
add
add
sbb
maxps
cdq
add
add
push
arpl
maxps
cdq
add
add
pop
or
xchg
pusha
push
add
add
xchg
add
push
(bad)
sbb
sub
adc
add
add
add
add
add
xor
add
add
adc
add
add
add
push
and
add
and
add
and
add
jge
add
add
sbb
add
push
mov
mov
mov
sub
sbb
add
add
add
add
add
daa
daa
add
sbb
add
add
jle
add
or
mov
add
sbb
pop
add
add
or
and
add
add
add
add
sub
add
add
add
push
sub
add
adc
and
add
add
mov
rol
add
push
pop
inc
cmp
add
push
add
jnp
add
add
add
pop
sub
add
push
pop
or
and
add
add
jnp
add
add
jnp
add
add
sub
add
push
or
add
add
dec
add
cmp
add
add
jnp
add
add
pop
and
jg
add
add
jnp
add
add
pop
jge
add
add
push
add
add
mov
dec
add
add
dec
add
add
add
add
and
add
dec
add
cmp
add
add
ds
(bad)
inc
add
add
add
jnp
add
add
sub
add
push
or
dec
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
call
add
add
add
mov
sar
(bad)
jmp
push
or
sbb
add
push
mov
mov
add
add
cdq
add
push
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
pop
add
add
add
add
adc
xchg
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
and
xchg
pushf
and
add
add
push
add
cmp
add
add
and
jg
add
add
add
add
sub
and
add
add
(bad)
jg
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
cmp
frstor
add
add
mov
add
mov
mov
cdq
add
push
(bad)
sbb
add
add
add
add
add
lods
lods
add
sbb
add
or
add
and
add
add
add
xchg
add
add
pop
adc
xchg
add
fisttp
add
add
add
adc
sbb
add
add
adc
add
add
add
push
add
sbb
add
sbb
pop
add
push
add
xor
add
jae
add
push
or
cmp
xchg
add
push
or
into
add
or
add
iret
add
or
mov
pop
jg
pop
sbb
add
rol
add
pop
adc
sub
add
or
adc
adc
sub
add
or
or
adc
sub
add
or
bound
add
aam
add
pop
fs
outs
or
add
and
add
mov
add
adc
push
adc
add
sbb
add
push
add
pop
and
xchg
popa
and
add
add
xchg
adc
push
fs
adc
adc
pop
pop
and
(bad)
(bad)
(bad)
call
push
adc
and
add
imul
push
push
pop
adc
xchg
add
push
push
sub
push
sub
or
imul
push
push
adc
sub
add
push
outs
mov
or
push
sub
add
push
add
add
sub
add
jb
add
jo
inc
add
or
or
adc
mov
xchg
add
push
push
sub
adc
push
adc
mov
sbb
add
add
sub
add
cmp
add
add
add
add
lea
add
add
or
or
sub
add
push
adc
or
ds
add
add
adc
push
adc
sbb
add
pop
outs
cwde
add
push
cmp
(bad)
(bad)
inc
sub
add
cmp
add
add
add
add
lea
add
add
or
adc
add
adc
adc
push
ds
add
add
adc
sbb
add
pop
outs
xchg
add
push
cmp
(bad)
(bad)
inc
outs
xchg
add
push
adc
push
and
add
sub
add
push
pop
adc
xchg
add
push
pop
adc
xchg
add
push
push
sub
push
sub
or
imul
push
push
adc
sub
add
push
adc
imul
push
add
add
push
adc
mov
xchg
add
push
push
sub
push
sub
push
sub
push
sub
push
sub
add
push
push
sub
add
push
adc
push
adc
mov
sbb
add
push
and
add
add
push
push
sub
push
sub
pop
sub
pop
sub
pop
adc
mov
sub
add
push
pop
push
adc
mov
push
addps
imul
push
push
push
sub
adc
push
outs
aad
add
es
adc
imul
cmp
add
add
pop
inc
add
add
and
jge
sub
add
push
add
add
push
adc
cmp
add
add
(bad)
call
add
mov
adc
jnp
add
lea
add
add
adc
adc
adc
push
adc
mov
adc
add
push
outs
mov
adc
push
sub
add
push
adc
mov
imul
push
jae
add
push
adc
adc
adc
sub
add
cmp
add
add
add
add
lea
add
add
adc
adc
adc
adc
add
adc
pop
add
add
adc
adc
or
adc
add
push
cmp
(bad)
(bad)
call
adc
ja
add
cmp
add
add
add
add
lea
add
add
push
adc
adc
sub
add
push
adc
adc
push
ds
add
add
adc
push
adc
outs
sbb
add
adc
outs
xchg
add
push
cmp
(bad)
(bad)
inc
outs
mov
sbb
adc
outs
(bad)
add
or
adc
outs
xchg
add
push
imul
push
adc
outs
(bad)
add
or
adc
adc
adc
add
(bad)
(bad)
cmp
sbb
add
add
and
jge
sub
add
pop
add
sub
push
adc
push
add
add
adc
adc
adc
push
adc
mov
rol
or
sbb
adc
push
adc
mov
sbb
add
frstor
add
adc
cmp
add
add
sbb
add
or
add
inc
push
add
add
and
jge
sub
add
pop
add
sub
push
adc
add
add
adc
push
adc
imul
push
push
adc
push
adc
mov
sbb
add
fisttp
add
add
sbb
add
sbb
or
push
outs
xlat
add
or
outs
and
add
push
outs
push
add
or
and
sbb
add
adc
jb
add
jo
pop
outs
pop
add
or
and
add
sub
add
sbb
and
and
push
add
add
and
add
and
and
push
mov
mov
mov
add
mov
add
add
adc
sbb
add
add
push
mov
add
add
pop
mov
adc
push
adc
mov
adc
pop
or
or
adc
pop
or
or
adc
mov
adc
add
adc
pop
or
and
push
adc
mov
adc
pop
movups
mov
add
adc
mov
adc
pop
adc
adc
adc
mov
add
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
mov
adc
pop
sbb
sbb
adc
pop
sbb
sbb
adc
mov
adc
mov
adc
adc
pop
sbb
and
push
adc
mov
adc
mov
adc
mov
add
add
adc
pop
and
adc
pop
and
mov
add
push
(bad)
sbb
and
add
inc
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
and
add
jl
add
sldt
add
add
sbb
add
sbb
add
mov
add
add
add
sbb
pop
add
add
or
add
add
add
add
add
mov
add
and
add
sub
add
or
add
add
dec
add
cmp
add
sbb
add
add
add
add
xchg
and
inc
add
and
add
sub
inc
add
add
add
add
add
pop
and
add
cmp
add
add
cmp
add
add
and
add
pop
push
or
and
add
aas
scas
add
add
or
movs
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
dec
add
add
add
add
(bad)
call
add
aad
(bad)
inc
jnp
add
add
or
add
add
add
cmp
add
add
and
add
pop
push
or
push
add
add
push
add
cmp
and
add
add
mov
add
and
add
add
mov
add
and
add
add
mov
add
or
inc
(bad)
(bad)
inc
jnp
add
add
xchg
and
inc
add
and
add
add
cmp
(bad)
jmp
or
add
(bad)
(bad)
(bad)
frstor
add
add
mov
mov
mov
mov
sub
sbb
add
add
add
pop
add
add
add
and
add
sbb
add
sbb
add
add
add
adc
outs
fadd
add
rcr
add
sub
add
inc
sbb
add
and
add
add
cmp
add
add
add
or
add
outs
add
add
add
dec
add
push
and
add
dec
add
cmp
add
add
outs
pop
add
or
jmp
add
sub
add
sub
add
or
sar
(bad)
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
and
add
add
mov
fdivr
(bad)
(bad)
cmp
(bad)
(bad)
jmp
pop
add
push
add
push
outs
pop
add
push
fld
add
add
fld
add
add
outs
pop
add
or
add
or
add
or
add
add
adc
add
add
add
add
add
xor
add
add
adc
daa
add
or
adc
adc
sub
add
or
sbb
push
and
or
add
js
add
adc
sbb
push
and
or
add
js
add
adc
sbb
push
adc
adc
push
sub
add
push
cmp
fadd
add
push
adc
and
add
add
js
add
sub
cmp
add
and
add
sub
add
sub
and
add
adc
and
add
add
js
add
sub
cmp
add
and
add
add
js
add
sub
and
add
adc
or
push
and
or
add
js
add
sub
cmp
add
cmp
add
add
or
push
and
and
or
or
add
js
add
sub
add
or
add
or
nop
adc
push
mov
add
add
sub
add
es
movlps
push
adc
pop
adc
push
push
mov
add
add
sub
add
es
adc
push
push
mov
add
add
sub
add
es
adc
push
push
mov
add
add
sub
add
es
adc
push
push
mov
add
add
sub
add
es
adc
push
push
mov
add
add
sub
add
es
adc
add
add
sub
add
or
pop
push
adc
push
mov
add
add
sub
add
es
pop
adc
push
adc
add
js
add
sub
jp
add
sub
add
and
add
sub
add
sub
cmp
add
push
sub
add
or
mov
add
add
sub
add
or
inc
add
add
sbb
push
push
mov
add
add
sub
add
es
sbb
push
push
mov
add
add
sub
add
es
sbb
push
push
mov
add
add
sub
add
es
sbb
push
push
mov
add
add
sub
add
es
sbb
push
pop
adc
pop
push
adc
and
add
sub
add
sub
ret
or
add
js
add
sub
add
or
add
or
and
add
js
add
or
aaa
add
push
adc
pop
and
push
push
mov
add
add
sub
add
es
and
push
adc
cmp
add
add
and
push
pop
and
add
add
sub
add
or
pop
adc
push
adc
add
js
add
sub
add
or
sub
add
or
add
add
add
pop
sub
push
pop
sub
push
and
add
add
js
add
adc
pop
sub
push
and
add
sub
add
sub
cmp
add
and
js
add
sub
fisttp
add
js
add
sub
push
add
or
adc
sub
or
add
js
add
sub
add
or
or
adc
pop
pop
sub
add
or
pop
das
adc
push
or
xor
push
jle
add
or
pop
xor
push
push
mov
add
add
sub
add
es
xor
push
adc
and
add
sub
add
adc
or
or
xor
push
adc
and
js
add
outs
fild
add
je
add
sbb
adc
xor
push
and
or
add
push
sub
adc
aaa
add
push
adc
pop
xor
es
aaa
adc
pop
mov
add
add
sub
add
es
cmp
push
adc
add
or
cmp
add
pop
cmp
push
adc
adc
pop
sub
add
or
cmp
push
sbb
adc
adc
push
jle
add
or
adc
mov
add
add
mov
add
add
or
add
push
es
cmp
push
and
daa
add
sub
fadd
add
fisttp
add
adc
adc
add
add
add
cli
(bad)
(bad)
(bad)
cli
(bad)
dec
sti
(bad)
call
sti
(bad)
jmp
sti
(bad)
(bad)
ds
(bad)
(bad)
ds
(bad)
(bad)
ds
(bad)
jmp
(bad)
call
sti
(bad)
inc
sti
(bad)
inc
sti
(bad)
(bad)
fdivrp
(bad)
(bad)
out
sti
(bad)
push
sti
(bad)
inc
cld
(bad)
jmp
cld
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
push
cld
(bad)
call
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
push
cld
(bad)
push
cld
(bad)
call
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
call
(bad)
call
(bad)
call
(bad)
jmp
(bad)
dec
(bad)
call
std
(bad)
call
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
cmp
(bad)
call
(bad)
push
(bad)
jnp
(bad)
(bad)
jnp
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
sti
(bad)
(bad)
(bad)
fnstsw
push
adc
add
add
add
add
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
adc
inc
pop
adc
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
adc
add
daa
add
or
lds
add
pop
sbb
adc
adc
push
push
mov
mov
mov
add
add
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
pop
pop
push
adc
mov
add
add
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
add
adc
pop
adc
add
add
adc
mov
adc
pop
pop
add
add
push
(bad)
sbb
add
add
add
add
add
add
add
es
add
sldt
add
add
add
add
add
addr16
add
lds
add
sbb
add
sbb
or
add
add
xor
add
adc
and
add
add
cmp
add
add
add
adc
movs
add
push
and
sti
add
add
jnp
add
add
call
sbb
mov
add
cmp
pop
adc
movs
add
push
add
add
add
call
pop
sbb
push
and
add
add
mov
and
cmp
cmp
add
or
add
add
and
add
add
cmp
sbb
cmp
add
add
and
add
add
push
push
add
jle
add
sbb
or
add
add
or
add
dec
push
add
data16
add
adc
push
push
or
add
pop
adc
adc
add
adc
pop
adc
pop
pop
and
add
add
add
jnp
add
add
sldt
add
add
add
add
add
cmp
(bad)
(bad)
dec
pop
cmp
(bad)
(bad)
(bad)
cmp
(bad)
inc
or
movs
add
push
cmp
(bad)
jmp
add
add
dec
push
add
or
add
add
add
add
ss
(bad)
push
(bad)
(bad)
dec
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
inc
(bad)
(bad)
dec
add
adc
(bad)
jmp
(bad)
push
add
and
add
add
cmp
(bad)
(bad)
jmp
add
adc
movs
add
push
add
add
add
call
sbb
mov
add
cmp
add
or
or
and
add
dec
push
add
mov
(bad)
(bad)
cmp
add
add
or
jnp
add
add
add
adc
(bad)
(bad)
jmp
mov
add
or
add
add
sub
pop
(bad)
(bad)
jmp
adc
jnp
add
add
leave
(bad)
(bad)
(bad)
(bad)
add
add
mov
mov
mov
mov
add
add
add
add
add
pop
add
push
(bad)
sbb
add
add
rol
add
rol
add
das
add
add
add
sbb
pop
add
add
sldt
adc
jnp
add
add
jnp
add
add
adc
add
and
add
add
push
add
cmp
add
jae
add
or
add
add
add
aaa
add
add
add
adc
add
add
cmp
push
add
add
jae
add
or
pop
pop
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
dec
add
add
(bad)
(bad)
cmp
add
imul
add
add
push
add
cmp
(bad)
(bad)
inc
and
add
pop
jge
add
add
add
add
add
add
jl
add
push
add
add
push
add
cmp
and
add
add
pop
pop
adc
xchg
and
add
add
jnp
add
add
pop
pop
bound
jle
add
add
add
pop
cmp
(bad)
jmp
add
jge
add
add
sbb
add
push
mov
add
add
mov
cdq
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
outs
fadd
add
rcr
add
sub
add
inc
outs
add
add
add
add
dec
add
cmp
add
add
outs
pop
add
or
jmp
add
sub
add
sub
add
or
inc
add
add
outs
fld
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
add
dec
add
push
and
add
dec
add
cmp
pop
add
push
add
pop
outs
pop
add
push
fld
add
add
fld
add
add
add
add
adc
add
add
add
add
add
xor
add
add
add
add
cmp
add
and
or
add
add
loop
add
or
add
add
pop
cmp
add
add
add
or
add
push
adc
pop
add
add
add
push
add
add
add
add
add
add
add
movs
(bad)
(bad)
(bad)
mov
add
add
add
and
add
add
aad
(bad)
call
add
push
add
adc
add
jae
add
or
add
push
add
cmp
add
test
add
or
add
inc
add
push
es
outs
in
add
and
add
add
push
add
(bad)
call
add
add
add
add
add
add
sub
adc
add
call
adc
add
add
dec
add
cmp
add
add
and
add
sub
add
sub
adc
add
push
add
add
add
add
dec
add
dec
add
add
add
(bad)
jmp
add
sub
add
or
add
inc
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
add
add
outs
xchg
add
or
add
add
sub
mov
mov
(bad)
inc
pop
jge
add
add
outs
xchg
add
or
add
push
add
cmp
add
adc
add
scas
add
add
add
adc
add
add
sub
sbb
add
add
jge
add
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
add
dec
add
add
add
xor
add
(bad)
(bad)
(bad)
jmp
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
or
add
add
outs
xchg
add
or
pop
adc
xchg
add
or
push
add
add
push
add
cmp
jnp
add
add
outs
xchg
add
or
add
add
sub
xchg
(bad)
(bad)
jmp
add
and
push
add
cmp
(bad)
jmp
add
add
jge
add
add
add
add
xor
sbb
add
add
and
add
or
jge
add
add
or
add
add
xchg
add
push
(bad)
sbb
add
add
adc
add
add
add
add
sbb
add
adc
add
jge
add
add
adc
add
add
dec
add
cmp
jnp
add
add
and
add
add
push
add
cmp
add
add
add
outs
in
add
push
and
cmp
add
add
push
cmp
add
add
loope
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
sub
aam
(bad)
jmp
sub
add
sbb
add
sbb
add
sbb
add
and
add
add
js
add
or
or
add
push
sub
sbb
add
add
adc
add
add
add
adc
or
add
sbb
add
cmp
add
aaa
add
adc
add
or
jae
add
outs
retf
add
or
pop
cmp
add
add
or
sbb
add
outs
int
add
or
or
cmp
add
add
outs
rol
or
push
sub
sub
adc
add
add
add
sub
or
sbb
or
jmp
add
cmp
add
sub
add
or
adc
sbb
or
int
add
sub
add
sub
cmp
add
and
add
sub
add
sub
and
add
or
adc
and
add
sub
add
sub
cmp
add
and
js
add
sub
add
or
adc
and
add
add
js
add
sub
cmp
add
and
add
add
js
add
sub
and
add
or
adc
pop
and
add
sub
add
sub
jmp
add
sub
add
sub
add
sub
add
sbb
or
out
add
sub
add
sub
add
push
cmp
add
add
pop
add
add
add
mov
imul
add
sub
adc
add
sub
add
mov
jg
add
sub
add
sub
adc
add
sub
add
mov
add
or
add
or
add
adc
adc
outs
call
or
or
add
lea
add
push
sub
jmp
or
or
add
jmp
add
pop
or
or
add
scas
or
add
push
outs
jmp
or
or
add
jmp
add
pop
or
and
or
add
push
sub
jmp
push
adc
adc
jmp
add
pop
movlps
adc
push
push
add
sub
add
sub
jmp
adc
or
add
jmp
add
pop
adc
or
add
jbe
add
sub
add
outs
jmp
adc
or
add
jmp
add
pop
adc
or
jg
add
sub
add
and
js
add
sub
jg
add
sub
add
sub
push
add
or
adc
jmp
add
pop
adc
and
add
sub
add
sub
jmp
push
adc
adc
jmp
add
pop
pop
adc
adc
jmp
js
add
outs
jmp
sbb
or
add
jmp
add
pop
sbb
or
lea
add
add
add
mov
imul
add
sub
adc
add
sub
add
mov
jg
add
sub
add
sub
adc
add
sub
add
mov
add
or
push
adc
or
(bad)
add
add
pop
pop
pop
push
adc
inc
sbb
add
add
add
cwde
cld
(bad)
jmp
cld
(bad)
push
cld
(bad)
call
std
(bad)
inc
(bad)
call
(bad)
(bad)
mov
std
(bad)
jmp
std
(bad)
push
std
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
(bad)
in
(bad)
(bad)
(bad)
cld
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jg
(bad)
(bad)
jg
(bad)
(bad)
fnstsw
or
pop
adc
inc
add
add
add
add
ins
(bad)
(bad)
(bad)
frstor
sbb
add
adc
add
push
push
inc
pop
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
pop
cmp
daa
add
or
and
add
push
pop
or
adc
add
add
add
pop
mov
or
sub
add
(bad)
sbb
add
add
add
add
add
add
test
add
fwait
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
push
add
add
add
add
add
add
add
add
jnp
add
add
sbb
jnp
add
add
jnp
add
add
pop
xchg
popa
jge
add
add
or
add
add
xchg
add
push
(bad)
sbb
add
adc
add
add
add
sub
or
add
sbb
or
add
add
or
or
jnp
add
add
or
jp
add
and
push
add
cmp
add
add
pop
pop
or
call
add
dec
add
dec
add
add
add
add
(bad)
(bad)
jmp
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
ja
add
adc
add
or
pop
adc
and
add
add
push
add
cmp
or
jbe
add
add
pop
add
push
cmp
(bad)
inc
jnp
add
add
popf
add
push
push
xor
add
add
add
add
or
(bad)
(bad)
jmp
push
add
add
push
add
cmp
(bad)
inc
pop
pop
adc
add
mov
add
add
pop
cmp
(bad)
jmp
push
or
and
add
push
mov
mov
add
add
add
aas
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
add
sbb
add
adc
add
jnp
add
cmp
add
and
add
add
cmp
add
add
add
add
add
and
add
add
push
add
cmp
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
add
add
or
add
or
add
mov
add
xor
add
add
add
add
add
ds
add
and
add
dec
add
cmp
add
add
jnp
add
add
ds
add
add
xor
add
and
add
dec
add
dec
add
add
add
add
(bad)
dec
add
add
add
add
add
outs
add
add
add
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
add
add
mov
mov
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
add
push
add
cmp
(bad)
inc
push
jge
add
add
adc
add
push
mov
mov
sub
sbb
add
add
adc
add
add
add
rol
adc
add
add
xor
add
add
add
add
add
jnp
add
add
sub
add
or
add
pop
jge
add
add
adc
add
mov
mov
pop
add
(bad)
sbb
add
add
adc
add
add
add
daa
add
sbb
push
add
add
sbb
add
add
add
add
sbb
add
or
add
add
push
cmp
add
add
add
add
add
push
push
add
add
add
add
or
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jae
add
push
or
or
add
push
add
adc
sbb
sub
adc
add
add
add
add
sbb
add
sbb
pop
add
add
cmp
add
jae
add
or
add
or
add
outs
lock
or
or
add
push
add
outs
icebp
add
or
fisttp
cmp
add
add
outs
rol
or
pop
or
adc
add
push
pop
add
add
cdq
add
push
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
or
add
xor
add
add
add
add
and
add
add
outs
sbb
add
add
push
arpl
inc
add
pop
shr
add
or
push
add
add
add
adc
sbb
add
add
add
add
add
and
add
sbb
add
and
push
jge
add
add
add
add
xor
add
add
adc
or
add
and
push
add
sub
add
add
sub
add
sub
add
sub
add
outs
push
add
or
and
add
add
cmp
add
add
push
cmp
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
sar
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
push
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
add
adc
add
add
add
or
add
sbb
push
add
add
sldt
adc
jnp
add
add
and
add
or
pop
jge
add
add
add
pushf
add
add
add
and
add
or
pop
jge
add
add
add
arpl
pushf
fstp
add
add
mov
mov
add
pop
add
(bad)
sbb
add
add
add
add
add
cmp
add
sbb
add
sbb
or
mov
add
adc
add
push
add
or
add
add
dec
add
cmp
add
add
add
add
repz
or
add
add
dec
add
cmp
add
add
add
cmp
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
sub
fdivr
(bad)
jmp
add
add
add
push
add
push
add
push
outs
sbb
and
add
or
xor
add
sub
add
pop
outs
pop
add
or
and
add
outs
sbb
add
add
sub
add
add
add
add
add
xchg
xchg
add
sbb
add
sbb
pop
add
add
add
add
add
add
add
add
add
pop
pop
bound
rol
add
add
add
dec
add
cmp
add
add
add
pop
jge
add
add
jnp
add
add
adc
mov
add
add
add
add
and
add
or
pop
jge
add
add
add
add
add
pushf
and
add
cmp
add
add
jnp
add
add
and
add
or
pop
jge
add
add
add
add
add
rcr
and
add
add
push
add
dec
add
add
add
dec
add
add
add
add
push
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
adc
add
add
add
cmp
add
add
adc
ret
add
and
add
push
mov
mov
add
mov
cdq
add
push
(bad)
sbb
add
add
add
add
div
add
sbb
add
push
add
add
add
sbb
add
add
add
pop
add
sub
push
or
or
add
add
xchg
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
data16
add
add
add
add
push
sub
jnp
add
add
rol
add
sub
add
xor
add
add
adc
sbb
or
push
add
push
sbb
add
push
sub
add
sub
xor
add
add
adc
cmp
add
jle
add
or
and
add
add
push
or
add
adc
and
add
sub
add
sub
add
or
fnsave
add
add
add
add
xchg
add
add
adc
and
add
add
mov
and
adc
add
js
add
sub
add
or
cmp
add
add
or
add
dec
or
add
add
add
add
add
add
add
(bad)
inc
add
cmps
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
or
add
dec
or
(bad)
inc
movs
add
adc
and
add
sub
add
sub
add
or
(bad)
add
add
jne
add
add
test
add
and
add
add
cmp
adc
and
add
sub
add
sub
add
or
frstor
jne
add
add
pop
add
add
movs
sub
add
adc
add
inc
sldt
sub
add
sub
add
or
fnsave
add
add
add
add
sti
add
add
movs
add
and
add
add
push
or
(bad)
(bad)
fst
add
add
add
add
ja
(bad)
jmp
add
cmp
(bad)
(bad)
jmp
add
or
add
inc
sldt
sub
add
sub
add
or
fstp
add
add
add
add
jo
(bad)
inc
movs
xor
add
or
add
push
or
(bad)
call
or
inc
sldt
sub
add
sub
add
or
fucom
add
add
jne
add
add
sub
add
add
adc
adc
sub
add
or
or
or
inc
sldt
sub
add
sub
add
or
fnsave
jne
add
add
xchg
add
add
movs
test
add
adc
adc
sub
add
or
or
or
inc
sldt
sub
add
sub
add
or
and
add
add
push
or
(bad)
(bad)
fnsave
add
add
add
add
xor
add
add
adc
adc
and
add
sub
add
sub
add
or
and
add
add
mov
or
or
(bad)
(bad)
fnsave
add
add
jne
add
add
mov
(bad)
inc
movs
sbb
add
adc
and
add
add
out
(bad)
(bad)
fst
add
add
push
add
add
fld
add
add
add
or
push
sub
add
add
pushf
add
add
add
or
add
sbb
add
add
add
adc
dec
sldt
sub
add
or
add
cmp
add
and
js
add
or
add
push
adc
add
sbb
adc
fld
add
sub
add
or
add
add
adc
sub
outs
inc
add
or
or
mov
add
or
add
or
or
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
dec
adc
(bad)
call
adc
add
or
movups
push
push
jae
add
or
or
adc
(bad)
lea
add
add
or
or
or
adc
mov
or
pop
adc
outs
and
add
adc
and
add
sub
add
adc
push
adc
outs
xchg
add
or
add
add
cmp
jmp
add
mov
add
adc
and
add
add
mov
push
(bad)
(bad)
jmp
or
or
add
or
add
add
adc
pop
outs
lea
add
adc
jae
add
or
or
or
outs
mov
add
adc
adc
adc
outs
pop
add
or
add
add
dec
adc
(bad)
jmp
rol
add
sub
add
adc
and
add
add
push
adc
(bad)
call
add
add
add
adc
or
add
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
adc
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
adc
push
adc
mov
adc
mov
adc
mov
adc
pop
adc
adc
adc
pop
adc
adc
add
add
push
(bad)
sbb
adc
add
add
add
add
add
add
add
add
adc
add
add
add
adc
pop
lea
add
or
push
add
add
sub
bound
add
add
or
add
add
jnp
add
add
outs
add
or
add
add
xor
add
add
adc
inc
add
or
push
sub
sub
push
or
and
add
sub
add
sub
add
or
test
add
sub
add
push
and
js
add
sub
add
sub
add
or
add
add
add
adc
add
add
add
add
jle
add
or
add
or
sbb
add
fst
add
add
or
add
push
sub
add
fld
add
add
add
add
add
add
add
add
test
add
add
add
imul
sbb
add
and
add
add
add
add
add
xor
add
add
adc
sbb
add
push
push
add
push
sbb
add
push
sbb
add
push
mov
mov
add
sub
sbb
add
add
or
or
add
add
dec
add
cmp
add
pop
add
add
add
imul
and
add
dec
add
cmp
add
add
(bad)
(bad)
inc
add
add
add
xchg
add
add
add
xchg
pop
pop
or
pop
pop
or
ret
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
adc
add
push
mov
mov
sub
sbb
sub
add
add
add
add
add
mov
add
adc
add
add
add
adc
sbb
or
push
add
push
sbb
add
push
sbb
add
add
push
sub
add
sbb
add
add
add
add
int
add
or
sub
fisttp
add
add
adc
fld
add
add
and
or
add
js
add
sub
add
push
or
sub
add
or
or
cmps
sldt
sub
add
outs
inc
add
or
add
adc
adc
imul
or
or
add
or
add
or
adc
add
push
adc
add
push
adc
add
add
add
add
add
add
or
add
add
add
outs
outs
add
test
add
add
add
outs
js
or
add
sbb
add
cmp
add
inc
add
adc
jnp
add
add
stc
add
add
add
push
or
jnp
add
add
push
add
add
add
add
dec
add
cmp
add
add
add
add
dec
add
or
adc
add
and
sldt
sub
add
jae
add
or
jnp
add
add
add
add
sub
add
sub
add
or
jp
add
and
cmp
add
add
add
add
data16
push
jge
add
add
mov
add
add
dec
add
dec
add
add
add
add
mov
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
push
cmp
(bad)
(bad)
jmp
push
add
add
add
repz
or
add
add
cmp
(bad)
(bad)
inc
jle
add
add
cmp
add
or
and
js
add
pop
outs
pop
add
or
and
add
outs
sbb
xor
add
add
add
push
adc
add
js
add
outs
or
sldt
add
and
add
sub
add
cmp
add
add
jnp
add
add
sbb
add
add
add
add
or
fsub
add
sbb
add
push
add
add
add
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
inc
add
adc
add
or
add
or
add
outs
lock
or
or
add
push
add
outs
icebp
add
or
fisttp
cmp
add
add
outs
rol
or
pop
or
adc
add
push
pop
add
add
cdq
add
push
(bad)
sbb
sub
add
sbb
add
add
add
daa
add
add
add
cmp
add
sbb
add
adc
add
add
add
adc
add
mov
ins
add
add
sub
pop
add
push
add
push
outs
pop
add
push
and
add
add
cmp
add
add
loope
(bad)
jmp
add
add
pop
cmp
add
es
add
add
enter
sub
add
sub
add
or
mov
pop
add
push
add
add
outs
pop
add
push
cmp
mov
add
push
add
dec
add
add
add
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jne
add
add
pop
(bad)
(bad)
jmp
add
add
dec
add
cmp
add
sbb
or
push
add
add
jnp
add
add
cmp
add
add
add
add
cmp
jnp
add
add
jnp
add
add
adc
add
and
add
add
push
add
cmp
loop
add
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
jnp
add
add
and
add
or
pop
jge
add
add
xchg
and
add
add
bound
jnp
add
add
pop
pop
bound
jle
add
and
add
adc
jg
add
add
cmp
adc
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
call
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
pop
add
pop
pop
bound
pop
push
imul
add
pop
mov
add
pop
add
(bad)
sbb
sub
add
add
add
add
add
add
sbb
add
sbb
add
sbb
add
add
add
add
add
add
xor
add
and
add
add
push
add
cmp
add
add
pop
sub
add
add
add
add
and
add
dec
add
cmp
add
add
jnp
add
add
sbb
sub
or
and
add
add
add
add
jnp
add
add
cmps
add
add
cwde
add
add
xchg
xchg
sbb
mov
add
push
pop
pop
or
add
(bad)
(bad)
(bad)
inc
jnp
add
add
and
add
add
mov
add
add
add
add
xor
add
add
add
add
xor
add
add
add
add
jnp
add
add
test
add
add
pop
sbb
mov
add
add
add
add
jnp
add
add
test
pop
sbb
mov
add
and
push
add
cmp
add
add
jnp
add
add
and
add
add
push
add
cmp
jnp
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
dec
pop
sub
add
fst
add
push
mov
add
cmps
add
push
(bad)
sbb
add
inc
sbb
add
add
dec
add
add
add
sbb
add
cmp
add
inc
add
or
pop
add
push
sub
sbb
pop
add
add
add
adc
adc
or
or
add
sub
add
add
jge
add
adc
pop
pop
adc
and
add
add
push
adc
cmp
add
adc
adc
xchg
pop
adc
push
pop
pop
pop
pop
bound
add
push
pop
or
sar
(bad)
inc
adc
xchg
and
adc
adc
cmp
add
or
add
pop
pop
adc
push
pop
pop
pop
pop
arpl
add
add
sbb
add
adc
pop
(bad)
sbb
add
cmp
add
and
add
add
push
adc
dec
add
add
add
add
cmps
add
add
add
add
add
add
add
add
(bad)
push
add
add
add
jbe
add
pop
add
add
(bad)
(bad)
cmp
add
xor
add
and
add
add
mov
mov
(bad)
jmp
adc
add
or
add
push
adc
cmp
add
add
add
push
xchg
adc
adc
cmp
adc
xchg
adc
add
data16
push
adc
adc
pop
or
add
add
add
adc
push
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
add
add
aas
xlat
(bad)
(bad)
(bad)
cmp
add
add
add
add
adc
inc
add
pop
xchg
adc
pop
adc
pop
maxps
pop
pop
bound
adc
adc
arpl
adc
jnp
add
add
adc
adc
or
adc
sbb
punpcklbw
adc
pop
adc
pop
pop
pop
bound
adc
adc
adc
aam
(bad)
inc
adc
adc
pop
adc
mulps
pop
pop
bound
adc
pop
pop
adc
and
add
add
push
adc
cmp
(bad)
(bad)
inc
adc
add
add
add
add
add
adc
pop
movlps
cmp
add
add
add
cmp
add
or
add
adc
xchg
pop
adc
or
pop
pop
bound
add
add
push
adc
cmp
(bad)
call
or
add
add
or
pop
adc
adc
pop
or
(bad)
(bad)
jmp
add
add
cmp
(bad)
call
adc
or
or
or
add
dec
adc
cmp
(bad)
(bad)
cmp
add
add
or
and
add
push
or
and
add
pop
add
push
cmp
(bad)
(bad)
jmp
or
pop
or
add
(bad)
call
adc
add
add
adc
(bad)
(bad)
inc
adc
adc
and
add
dec
adc
cmp
std
(bad)
call
adc
and
add
add
push
adc
cmp
std
(bad)
call
add
cmp
add
or
or
or
inc
jnp
add
add
or
push
adc
sbb
or
popf
adc
pop
adc
pop
or
pop
pop
bound
or
add
add
dec
adc
cmp
push
add
(bad)
(bad)
fucomp
add
add
adc
add
adc
adc
push
mov
mov
mov
adc
sbb
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
or
add
adc
pop
or
add
add
adc
mov
adc
pop
movups
mov
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
adc
adc
pop
adc
mov
add
add
push
(bad)
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
or
add
add
add
add
jnp
add
add
call
add
add
xchg
and
inc
add
jnp
add
add
xchg
sub
push
add
add
add
adc
sbb
add
add
add
add
add
sub
add
sbb
add
sbb
or
push
add
add
add
add
add
add
add
add
add
push
cmp
add
add
jge
add
add
sbb
add
add
pop
add
add
sbb
mov
push
push
cmp
add
add
adc
fstp
add
add
sbb
mov
add
add
add
add
xchg
add
add
jnp
add
add
push
rcr
add
pop
jge
add
add
adc
add
and
add
add
push
or
dec
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
mov
add
les
add
test
add
dec
add
add
add
add
add
add
dec
or
cmp
jle
add
add
jnp
add
add
pop
or
add
jnp
add
add
and
add
adc
pop
pop
jge
add
add
pop
add
add
add
or
cmp
add
add
add
jnp
add
add
mov
add
pop
adc
and
add
add
push
or
cmp
call
adc
fucom
add
add
pop
adc
pop
add
add
push
jge
add
add
pop
pop
adc
nop
add
add
sbb
add
add
add
add
dec
or
cmp
(bad)
(bad)
(bad)
(bad)
and
add
pop
jge
add
add
sldt
add
cmp
(bad)
(bad)
jmp
add
jge
add
add
sbb
add
add
mov
jnp
add
add
and
add
adc
add
add
add
adc
jge
add
add
push
pushf
add
add
add
jnp
add
add
test
add
and
add
cmp
pop
jge
add
add
add
sub
lea
add
jnp
add
add
cmp
(bad)
(bad)
call
adc
and
add
add
push
or
cmp
(bad)
inc
sbb
mov
add
add
jnp
add
add
jnp
add
add
jge
add
add
add
add
add
sbb
add
jge
add
add
or
add
sub
xor
(bad)
jmp
add
sub
or
cmp
add
add
adc
fnstsw
sub
add
add
dec
or
cmp
(bad)
(bad)
call
add
push
add
add
(bad)
(bad)
jmp
add
out
add
add
add
add
add
cmp
(bad)
inc
add
sub
mov
add
jnp
add
add
cmp
add
add
adc
frstor
add
add
add
add
add
pop
jge
add
add
sbb
mov
add
and
add
add
push
or
cmp
xchg
add
jnp
add
add
or
push
add
add
mov
jle
(bad)
jmp
add
sbb
mov
mov
add
jnp
add
add
cmp
add
add
adc
(bad)
add
add
and
add
pop
jge
add
add
sbb
mov
add
add
adc
jge
add
add
pop
add
add
push
or
cmp
std
(bad)
call
adc
ffree
add
add
jnp
add
add
sub
add
push
and
cmp
(bad)
(bad)
inc
push
cmp
std
(bad)
jmp
or
add
dec
or
cmp
cld
(bad)
inc
jnp
add
add
jnp
add
add
xchg
cld
(bad)
inc
add
add
add
mov
add
jge
add
add
adc
mov
add
or
push
or
cmp
sbb
add
add
add
add
dec
or
cmp
dec
add
add
sbb
add
add
and
(bad)
inc
mov
mov
mov
mov
add
add
add
add
push
mov
add
add
pop
mov
add
push
add
push
(bad)
sbb
or
add
inc
sbb
add
add
add
add
add
add
add
xor
add
add
or
add
add
add
pop
and
add
add
add
dec
add
cmp
add
add
push
cmp
and
add
add
push
add
cmp
add
or
add
add
add
add
or
jnp
add
add
pop
and
jg
add
and
add
add
sbb
add
and
add
add
cmp
add
and
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
dec
add
cmp
(bad)
(bad)
inc
pop
cmp
add
add
add
cmp
add
add
add
pop
(bad)
(bad)
inc
jnp
add
add
add
add
add
jnp
add
add
sub
add
or
and
add
pop
jge
add
add
jae
add
add
add
add
and
add
or
add
add
add
add
add
and
pushf
and
mov
pop
(bad)
(bad)
jmp
fnstsw
add
add
push
add
push
add
(bad)
add
push
mov
mov
mov
mov
add
mov
xchg
add
push
(bad)
sbb
add
add
add
cmp
add
cmp
add
sub
add
sbb
add
adc
add
add
add
adc
sbb
or
push
add
push
sbb
add
push
sub
sbb
or
movs
add
add
add
push
or
inc
add
add
jnp
add
add
xchg
and
add
add
and
add
add
push
push
add
add
jnp
add
add
xchg
or
and
mov
add
add
sub
add
or
add
push
push
add
fadd
add
push
add
add
add
scas
(bad)
(bad)
jmp
pop
add
add
push
push
add
ret
add
jnp
add
add
sub
add
sbb
add
add
ds
add
and
add
dec
push
add
xchg
add
add
add
adc
add
sub
add
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
add
cmp
add
add
add
add
sub
pop
or
push
add
add
mov
dec
add
add
dec
add
add
add
cmp
add
add
add
pop
adc
pop
pop
bound
pop
pop
adc
mov
add
add
sub
add
adc
add
add
push
cmp
jmp
add
add
dec
push
add
or
add
add
add
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
(bad)
sti
(bad)
(bad)
dec
add
add
add
add
dec
push
add
leave
(bad)
(bad)
inc
jnp
add
add
add
add
sub
add
add
mov
mov
mov
mov
add
add
add
add
sub
sbb
inc
sbb
add
add
jne
add
add
add
add
sbb
push
add
add
adc
sub
add
outs
add
add
outs
add
add
or
add
add
outs
add
add
je
add
add
pop
outs
add
push
add
or
outs
or
or
add
pop
outs
pop
add
or
fnsave
add
add
outs
or
add
cmp
(bad)
(bad)
(bad)
fst
add
add
jne
add
add
or
add
or
add
add
add
or
jle
add
or
add
or
add
mov
add
pop
or
sub
sbb
sub
add
sbb
add
add
add
add
jl
add
sbb
add
sbb
push
add
add
and
adc
add
js
add
sub
add
or
mov
add
push
push
mov
cmp
add
pop
call
dec
add
add
pop
call
and
add
add
add
add
add
inc
pusha
inc
inc
sub
add
push
pop
call
sbb
sub
add
or
outs
pop
add
or
or
add
sub
add
or
add
add
pop
pop
(bad)
or
or
popf
(bad)
(bad)
(bad)
fst
pop
mov
or
pop
add
(bad)
sbb
add
add
add
popa
add
add
add
mov
add
sbb
or
or
add
xor
add
adc
and
add
cmp
add
add
add
add
add
add
cmp
cmp
add
add
jnp
add
add
(bad)
xor
add
and
add
push
add
add
test
add
or
and
add
add
add
add
adc
and
add
pop
push
add
pop
add
add
pop
or
add
add
add
adc
and
add
pop
push
add
aaa
add
add
jnp
add
add
adc
and
add
pop
push
add
or
add
dec
push
add
jno
add
adc
pop
adc
and
add
adc
pop
adc
pop
add
add
mov
push
add
add
or
pop
and
(bad)
(bad)
call
add
jnp
add
add
es
(bad)
jmp
add
add
cmp
add
add
jnp
add
add
add
add
add
pop
push
add
or
cwde
(bad)
(bad)
jmp
add
add
dec
push
add
or
add
add
add
add
add
add
add
add
movs
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
call
(bad)
jmp
add
or
add
dec
push
add
sar
(bad)
cmp
add
pop
or
jnp
add
add
add
adc
add
add
mov
add
or
or
push
add
add
push
push
add
xchg
(bad)
(bad)
(bad)
cmp
(bad)
call
sbb
and
add
add
push
push
add
jnp
(bad)
dec
adc
jmp
add
mov
push
adc
jnp
add
add
call
add
push
mov
mov
mov
mov
add
add
add
add
add
pop
add
push
(bad)
sbb
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
sub
add
or
out
push
add
sub
add
add
dec
adc
add
js
add
sub
add
outs
push
add
or
and
add
add
sbb
add
push
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
sub
fdivr
(bad)
jmp
push
jae
add
or
add
add
adc
fisttp
add
add
adc
fld
add
add
sub
adc
add
add
add
add
or
add
sbb
add
add
add
and
and
and
add
add
iret
add
add
jnp
add
add
adc
pop
pop
pop
xchg
adc
inc
outs
add
add
or
add
dec
or
add
push
pop
pop
and
add
add
push
add
add
add
jnp
add
jge
add
add
or
add
dec
or
add
add
pop
adc
sbb
add
add
add
pop
pop
and
mov
add
add
pop
and
je
add
add
add
add
pop
pop
and
mov
add
add
pop
and
push
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
pop
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
clc
add
add
jnp
add
add
pop
pop
and
mov
add
add
pop
and
fld
add
add
add
add
pop
pop
and
mov
add
add
pop
and
mov
jnp
add
add
pop
pop
and
mov
add
add
pop
and
fwait
add
add
adc
aas
add
(bad)
jmp
add
push
or
add
add
add
add
add
or
jnp
add
add
add
jnp
add
add
or
and
jg
add
and
inc
add
adc
adc
ds
(bad)
(bad)
jmp
push
add
add
cmp
add
add
add
add
add
xchg
add
add
add
xchg
inc
(bad)
(bad)
(bad)
(bad)
cmp
add
add
add
add
dec
or
add
add
add
add
add
std
(bad)
dec
add
add
std
(bad)
inc
add
add
(bad)
(bad)
inc
(bad)
jmp
add
add
jmp
add
add
add
add
dec
or
(bad)
inc
jnp
add
add
add
add
add
add
add
add
jnp
add
add
adc
add
sub
or
push
add
add
add
cli
jle
add
sub
or
pop
add
add
add
add
add
pop
pop
pop
adc
add
add
add
add
or
jnp
add
add
add
push
push
aas
xor
add
and
add
add
inc
(bad)
(bad)
inc
jnp
add
add
pop
pop
xchg
add
add
add
pop
pop
xchg
inc
(bad)
(bad)
jmp
pop
add
add
push
or
(bad)
inc
add
add
add
pop
add
add
jnp
add
add
add
add
add
adc
pop
xchg
adc
inc
test
(bad)
jmp
add
add
dec
or
(bad)
dec
adc
inc
add
add
add
adc
add
add
adc
adc
pop
cmp
std
(bad)
jmp
or
add
dec
or
(bad)
inc
sbb
and
add
add
push
or
(bad)
inc
jnp
add
add
inc
inc
adc
pop
or
add
or
or
push
mov
adc
pop
pop
mov
adc
sbb
mov
mov
adc
sbb
add
add
adc
sbb
add
add
push
mov
adc
sbb
add
add
or
adc
pop
or
or
adc
pop
or
or
adc
pop
or
mov
add
adc
sub
add
(bad)
sbb
or
add
inc
sbb
add
add
push
add
add
add
add
xor
icebp
add
add
add
add
add
add
push
adc
add
js
add
jae
add
push
adc
outs
fadd
add
or
push
sub
add
push
and
add
add
push
or
outs
pop
add
or
fld
add
add
fld
add
add
jnp
add
add
arpl
add
sub
add
pop
outs
or
add
add
add
or
add
or
jnp
add
add
jo
add
sub
add
or
add
or
pop
and
add
or
outs
dec
add
or
and
js
add
outs
push
add
or
add
add
push
or
add
or
jnp
add
add
xchg
adc
add
js
add
or
add
or
add
jae
add
push
sub
add
push
fld
add
add
fld
add
add
sldt
add
add
pop
add
add
add
rol
or
sub
add
add
add
add
xor
or
add
or
add
add
pop
add
add
add
add
add
loope
sldt
add
or
add
sbb
add
add
add
push
fld
add
add
fld
add
add
pop
add
add
or
sbb
add
add
sbb
add
add
add
or
push
sbb
add
add
add
adc
add
add
xor
add
or
add
add
sub
add
or
adc
sub
add
js
add
and
add
add
js
add
sub
cmp
add
and
add
sub
add
sub
sub
add
js
add
sub
add
or
or
adc
and
add
add
js
add
sub
cmp
add
and
add
add
js
add
sub
and
add
adc
sbb
pop
and
add
add
js
add
sub
cmp
add
and
add
add
js
add
sub
nop
push
add
sub
add
sub
jg
add
sub
add
sub
cmp
add
or
adc
adc
imul
add
sub
and
add
sub
add
es
pop
sub
add
or
sbb
add
or
push
push
adc
sbb
pop
add
add
adc
adc
and
add
add
js
add
mov
int
add
sub
add
sub
cmp
add
mov
sub
add
sub
add
sub
adc
sbb
imul
add
sub
adc
sbb
jp
add
sub
add
mov
jg
add
sub
add
sub
adc
sub
add
or
nop
adc
adc
outs
sgdtd
or
fwait
adc
add
js
add
outs
adc
add
pop
or
pop
adc
outs
sgdtd
or
outs
adc
add
pop
or
pop
adc
outs
sgdtd
or
outs
js
add
pop
or
pop
adc
outs
sgdtd
or
outs
adc
add
pop
or
outs
sgdtd
or
outs
adc
add
pop
push
adc
adc
outs
sgdtd
or
outs
adc
add
pop
movlps
adc
outs
adc
pop
adc
pop
adc
outs
push
add
or
add
adc
pop
push
mov
add
add
sub
add
es
adc
pop
and
js
add
or
adc
pop
push
mov
add
add
sub
add
es
adc
pop
and
js
add
adc
pop
adc
add
add
sub
add
or
pop
push
adc
and
js
add
adc
pop
pop
adc
sbb
adc
adc
push
and
or
add
js
add
sub
add
or
jp
add
sub
add
mov
imul
add
sub
adc
sbb
jp
add
sub
add
mov
jg
add
sub
add
sub
adc
sub
add
or
pop
add
or
or
sbb
pop
push
sub
add
or
adc
adc
push
and
or
add
js
add
sub
add
or
jp
add
sub
add
mov
imul
add
sub
adc
sbb
jp
add
sub
add
mov
jg
add
sub
add
sub
adc
sbb
mov
js
add
mov
add
or
sbb
add
pop
sbb
pop
adc
lea
add
add
adc
adc
and
adc
add
js
add
mov
or
imul
add
sub
adc
sbb
jp
add
sub
add
mov
jg
add
sub
add
sub
adc
sbb
rcl
add
sub
add
mov
jg
add
sub
add
sub
adc
sbb
or
add
or
add
or
sbb
pop
and
adc
add
js
add
adc
adc
add
adc
adc
and
adc
add
js
add
sub
adc
pop
adc
adc
sbb
imul
add
sub
adc
sbb
jp
add
sub
add
mov
jg
add
sub
add
sub
adc
sbb
cmp
add
sub
add
sub
adc
sbb
jmp
sub
add
or
add
or
sbb
sbb
pop
add
add
adc
adc
and
adc
add
js
add
sub
adc
pop
adc
mov
nop
push
add
sub
add
sub
adc
sbb
jg
add
sub
add
sub
adc
sbb
cmp
add
sub
add
sub
adc
sbb
jmp
sub
add
or
add
or
push
adc
adc
jns
add
sub
add
sub
add
or
and
add
outs
jmp
pop
adc
adc
outs
pop
add
or
and
pop
adc
outs
pop
add
or
sub
add
pop
and
pop
push
mov
add
add
sub
add
es
and
pop
adc
outs
sub
add
pop
and
pop
push
mov
add
add
sub
add
es
and
outs
sbb
add
pop
adc
and
add
add
js
add
adc
pop
daa
adc
adc
and
add
add
js
add
sub
add
sub
add
adc
pop
sub
pop
adc
and
add
add
js
add
sub
add
sub
add
adc
pop
sub
pop
and
or
add
js
add
adc
adc
adc
adc
add
js
add
pop
lea
add
adc
adc
adc
adc
xchg
adc
add
js
add
pop
lea
add
adc
adc
push
sbb
adc
adc
push
adc
or
jp
add
sub
add
mov
imul
add
sub
adc
sbb
jp
add
sub
add
mov
jg
add
sub
add
sub
adc
sub
add
or
adc
sbb
add
sub
add
mov
sub
add
or
sub
pop
adc
adc
adc
add
js
add
pop
lea
add
adc
adc
push
adc
adc
xchg
adc
add
js
add
pop
lea
add
adc
adc
adc
imul
add
sub
jp
add
sub
add
and
add
sub
add
sub
cmp
add
mov
adc
sbb
add
sub
add
mov
sub
add
or
sub
pop
adc
adc
mov
add
sub
add
pop
lea
add
adc
adc
sbb
adc
adc
sbb
add
pop
sub
adc
lds
add
sub
add
push
lea
add
adc
adc
sub
add
es
adc
adc
adc
lds
add
sub
add
push
lea
add
adc
adc
sub
add
fstp
add
add
push
pop
pop
push
adc
inc
xor
add
add
add
icebp
idiv
(bad)
stc
idiv
(bad)
cmp
(bad)
jmp
(bad)
push
clc
(bad)
(bad)
fprem
(bad)
jmp
clc
(bad)
jmp
(bad)
jle
(bad)
dec
stc
(bad)
push
stc
(bad)
call
stc
(bad)
(bad)
(bad)
(bad)
(bad)
in
stc
(bad)
(bad)
cld
stc
(bad)
dec
cli
(bad)
call
cli
(bad)
jmp
cli
(bad)
(bad)
cmp
(bad)
dec
(bad)
(bad)
mov
sti
(bad)
dec
sti
(bad)
dec
sti
(bad)
(bad)
(bad)
(bad)
call
(bad)
call
cld
(bad)
push
cld
(bad)
(bad)
cld
cld
(bad)
dec
(bad)
jmp
std
(bad)
push
std
(bad)
push
std
(bad)
inc
(bad)
call
(bad)
jmp
(bad)
dec
std
(bad)
inc
inc
(bad)
(bad)
(bad)
in
(bad)
(bad)
dec
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
fnstsw
pop
adc
adc
add
add
add
(bad)
(bad)
frstor
sbb
add
adc
add
adc
adc
push
inc
pop
(bad)
adc
add
sub
add
or
ret
(bad)
(bad)
jmp
xor
or
or
push
cmp
daa
add
or
mov
sbb
adc
adc
push
push
mov
mov
mov
mov
add
adc
sbb
add
adc
mov
pop
mov
or
adc
mov
adc
mov
adc
mov
adc
adc
pop
or
sbb
push
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
mov
adc
adc
pop
adc
add
add
adc
mov
adc
pop
pop
adc
mov
adc
sub
add
(bad)
sbb
add
inc
xor
add
add
add
add
add
add
inc
or
add
add
add
add
ins
or
add
add
mov
add
add
xor
aam
add
dec
add
adc
add
add
dec
add
cmp
add
add
add
repnz
add
sbb
and
mov
js
add
add
add
add
outs
push
add
or
dec
add
add
add
add
dec
add
cmp
add
jnp
add
add
add
add
add
pop
add
or
jnp
add
add
pop
outs
and
add
and
add
add
push
add
cmp
add
add
jnp
add
add
outs
and
add
sub
jnp
add
add
and
add
or
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
inc
(bad)
inc
(bad)
(bad)
push
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
sub
xor
add
add
or
add
and
add
add
add
add
or
or
add
add
xchg
add
push
(bad)
sbb
sub
adc
add
add
add
adc
or
add
sbb
or
inc
add
dec
add
adc
jnp
add
add
mov
add
or
add
mov
pop
add
add
cmp
add
jnp
add
add
add
add
add
sub
add
add
cmp
add
add
cmp
add
add
add
add
sub
add
push
and
add
add
loop
add
push
pop
pop
and
add
cmp
add
add
adc
add
jnp
add
add
jnp
add
add
and
add
and
(bad)
call
mov
(bad)
inc
and
add
add
add
add
or
add
cmp
add
pop
inc
add
add
mov
(bad)
inc
add
cmc
add
add
add
and
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
jnp
add
add
jnp
add
add
mov
and
add
add
push
push
add
cmp
add
(bad)
add
add
jle
add
add
xchg
jge
add
add
jle
add
add
xchg
jge
add
add
add
add
dec
push
add
push
add
add
push
cmp
add
add
adc
add
jnp
add
add
jnp
add
add
mov
add
add
add
pop
jge
add
add
jnp
add
add
jnp
add
add
jnp
add
add
cmps
add
push
push
add
add
add
or
sbb
add
and
add
add
(bad)
(bad)
jmp
or
add
dec
push
add
mov
push
cmp
(bad)
(bad)
call
adc
add
nop
add
add
push
cmp
add
add
adc
add
adc
jp
add
adc
jns
add
sbb
add
add
adc
add
jle
add
add
and
add
add
jge
add
add
jle
add
add
and
add
add
jge
add
add
jnp
add
add
mov
push
jge
add
add
jnp
add
add
jnp
add
add
mov
or
cmp
add
add
push
add
add
add
push
push
add
or
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
std
(bad)
call
push
(bad)
(bad)
jmp
std
(bad)
push
(bad)
(bad)
push
(bad)
(bad)
jmp
std
(bad)
dec
add
add
add
and
add
add
push
push
add
mov
(bad)
call
adc
add
jnp
add
add
jnp
add
add
mov
add
add
add
pop
jge
add
add
pop
or
add
add
jnp
add
add
jnp
add
add
and
add
or
add
add
cmp
(bad)
call
adc
add
mov
mov
mov
mov
add
add
sub
add
push
(bad)
sbb
add
sbb
add
add
add
add
add
add
add
add
sbb
add
sub
add
dec
add
adc
xor
add
outs
and
add
or
pop
add
add
pop
lea
add
add
pop
push
sub
add
mov
add
add
sub
add
add
add
add
add
adc
add
or
add
or
add
add
add
add
and
add
pop
pop
pop
fs
add
add
and
add
pop
jge
add
add
push
add
add
add
adc
sbb
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
add
bound
jnp
add
add
jnp
add
add
pop
xchg
popa
and
jg
add
and
add
add
mov
pop
add
add
push
add
add
jnp
add
add
add
add
add
popf
add
jge
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
jnp
add
add
(bad)
jg
add
jnp
add
add
xchg
and
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
inc
add
fst
add
push
mov
add
add
mov
sub
sbb
sub
adc
add
add
add
add
add
xor
add
add
add
add
xor
add
adc
push
and
add
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
or
sbb
add
add
add
add
add
sbb
push
or
add
add
add
es
sbb
add
or
sub
or
sub
push
add
add
or
sbb
add
add
add
add
adc
add
or
jae
add
or
and
add
add
rol
push
cmp
jae
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
iret
(bad)
(bad)
call
add
and
add
add
ret
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
push
add
or
fld
add
add
or
sbb
add
add
add
add
js
add
sbb
add
sbb
add
sbb
add
push
add
adc
add
add
sub
add
or
or
add
push
sub
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
push
add
adc
add
add
sub
add
or
or
add
push
sub
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
push
add
adc
add
add
sub
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
push
add
adc
add
add
add
or
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
adc
add
popa
add
or
das
add
or
fisttp
add
add
mov
add
add
add
cmps
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
sldt
adc
sub
add
or
fisttp
add
add
mov
sub
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
push
add
adc
pop
add
add
add
or
fisttp
add
add
add
adc
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
add
xor
add
or
or
add
push
add
adc
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
push
add
adc
mov
add
cmp
add
add
push
add
sub
fstp
add
add
or
adc
add
push
mov
add
add
adc
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
or
add
add
mov
add
add
jno
add
sbb
cmps
add
push
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
xor
add
sub
pop
sub
or
sub
sbb
add
xor
add
pop
add
adc
add
or
or
add
sub
add
sub
jle
add
or
fisttp
add
add
mov
add
sbb
sub
sbb
sub
adc
add
add
add
add
sbb
add
push
add
xor
add
sub
xor
mov
add
adc
add
cmp
add
add
sub
add
or
and
add
cmp
outs
or
add
pop
adc
sub
add
cmp
dec
add
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
call
or
add
add
dec
add
cmp
cmp
add
add
outs
or
add
pop
inc
sub
add
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
or
pop
sub
add
jae
add
or
add
or
sub
or
sub
push
add
xor
add
sub
xor
add
add
sub
add
add
sub
add
jae
add
push
or
sub
add
fstp
add
add
lea
add
or
push
push
mov
or
adc
add
fld
add
add
add
adc
add
add
add
and
sbb
add
or
sub
or
sub
push
add
(bad)
add
push
sub
add
xor
add
sub
xor
mov
add
adc
add
add
dec
add
cmp
or
add
and
outs
or
add
pop
adc
sub
add
cmp
dec
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
call
add
add
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
jmp
or
add
or
add
add
cmp
(bad)
(bad)
inc
cmp
add
add
outs
or
add
pop
inc
sub
add
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
or
pop
sub
add
jae
add
or
or
sub
or
sub
push
add
pop
add
or
push
add
add
or
sbb
add
js
add
or
add
jae
add
or
jae
add
or
and
add
add
push
add
cmp
add
add
add
or
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
push
add
or
fld
add
add
or
sbb
add
add
add
add
jo
add
sbb
add
sbb
add
sbb
add
pop
add
adc
add
add
cmp
add
or
or
add
push
sub
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
pop
add
adc
add
add
cmp
add
or
or
add
push
sub
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
push
add
adc
add
add
cmp
add
or
or
add
push
sub
sbb
sub
add
adc
add
add
add
adc
or
add
sbb
add
sbb
add
pop
add
adc
add
add
cmp
add
or
or
add
push
sub
sbb
sub
add
adc
add
add
add
adc
or
add
or
sub
or
sub
sbb
add
add
adc
add
popa
add
or
das
add
or
fisttp
add
add
mov
add
add
add
cmps
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
sbb
add
sldt
adc
sub
add
or
fisttp
add
add
mov
sub
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
push
add
adc
adc
add
sub
add
or
or
add
push
add
adc
sbb
sub
add
add
add
add
adc
add
sbb
add
sbb
add
pop
add
add
add
add
xor
add
or
or
add
push
add
adc
sbb
sub
add
add
add
add
or
add
sbb
add
sbb
add
xor
add
push
add
adc
mov
add
cmp
add
add
push
add
sub
fstp
add
add
or
adc
add
push
mov
add
add
adc
sbb
sub
add
adc
add
add
add
add
add
xor
add
add
add
add
adc
push
or
add
add
mov
add
add
jno
add
sbb
cmps
add
push
(bad)
sbb
add
add
add
add
add
adc
add
sbb
add
push
add
xor
add
sub
xor
les
add
add
add
and
add
dec
add
cmp
add
push
outs
or
add
pop
inc
sub
add
outs
or
add
cmp
push
add
add
push
add
cmp
add
sub
add
or
and
push
add
cmp
add
add
or
add
add
dec
add
cmp
add
add
outs
or
add
pop
adc
sub
add
cmp
add
cmp
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
jmp
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
cmp
pop
sub
add
jae
add
or
or
sub
or
sub
sbb
push
add
add
add
add
add
or
add
or
pop
mov
add
sbb
adc
add
sub
add
sub
add
add
or
outs
aas
add
or
or
add
mov
add
sbb
mov
add
sbb
mov
add
sbb
sub
sbb
sub
adc
add
add
add
xor
sbb
add
or
add
pop
add
add
add
add
sub
add
or
jae
add
or
add
or
or
add
add
xchg
add
push
(bad)
sbb
add
adc
add
add
add
push
add
sbb
add
or
sub
or
sub
or
add
sbb
add
add
add
add
inc
add
or
outs
repz
push
fisttp
add
add
sub
sbb
add
add
add
add
push
add
adc
or
add
or
add
cmp
add
add
cmp
add
add
jnp
add
add
or
add
add
add
add
rol
or
or
add
add
sub
add
(bad)
push
add
add
add
adc
sbb
add
add
sbb
add
add
add
and
or
add
add
add
add
add
sbb
add
sbb
pop
add
add
add
add
add
add
or
adc
and
add
inc
and
add
sub
add
pop
outs
inc
add
or
add
add
cmp
add
add
pop
outs
inc
add
or
add
add
dec
add
cmp
add
add
adc
and
add
and
fwait
add
or
outs
mov
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
dec
add
add
(bad)
(bad)
cmp
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
and
adc
add
js
add
outs
inc
add
or
and
adc
add
js
add
outs
inc
add
or
add
cmp
add
outs
mov
add
frstor
add
add
mov
mov
mov
add
or
sub
sbb
add
adc
add
add
add
retf
sbb
add
or
sub
or
sub
sbb
add
add
add
verw
test
sub
add
push
ror
add
sub
add
sub
add
movs
or
add
or
sldt
add
mov
add
add
sub
sbb
sub
adc
add
add
add
daa
add
sbb
add
sbb
pop
add
add
pusha
add
adc
sub
sub
add
push
or
ror
add
sub
add
sub
add
or
movs
or
add
or
add
mov
add
pop
or
add
cdq
add
push
(bad)
sbb
sub
add
adc
add
add
add
sub
push
sbb
add
push
add
xor
add
sub
add
xor
add
sub
xor
mov
add
popa
add
adc
dec
add
or
outs
imul
or
add
add
dec
add
cmp
add
add
add
add
or
add
add
add
add
or
jnp
add
add
and
add
add
mov
add
add
sub
add
and
add
add
cmp
add
add
push
mov
add
add
sub
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
sub
add
push
fisttp
add
add
sub
sbb
add
add
adc
add
add
add
add
or
add
and
add
add
add
add
add
add
or
add
sbb
add
sub
add
fisttp
add
add
sub
sbb
add
add
add
add
sbb
add
sbb
add
or
sub
or
sub
sbb
add
add
add
add
add
adc
add
or
sbb
add
push
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
adc
add
or
sbb
add
push
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
adc
sub
add
sub
fstp
add
add
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
adc
add
or
sbb
add
push
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
adc
add
or
sbb
add
push
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
adc
fstp
add
add
mov
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
push
add
sub
fstp
add
add
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
pop
add
sub
fstp
add
add
mov
add
add
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
add
sbb
add
or
sbb
add
push
mov
add
add
jno
add
add
adc
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
pop
add
add
imul
adc
or
add
sub
add
sub
add
or
add
or
jnp
add
add
pop
or
dec
add
or
ror
add
sub
add
sub
or
popa
add
or
sub
add
or
adc
push
mov
add
pop
mov
add
or
mov
jno
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
add
add
dec
dec
add
or
sub
or
sub
adc
add
rol
add
add
adc
add
add
dec
add
cmp
add
add
or
add
or
add
add
sub
add
cmp
add
add
push
outs
or
add
pop
adc
sub
jnp
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
and
add
cmp
(bad)
(bad)
call
or
add
cmp
(bad)
(bad)
jmp
pop
cmp
add
add
outs
or
add
pop
inc
sub
add
outs
or
add
cmp
add
add
push
add
add
push
add
cmp
or
pop
sub
add
jae
add
or
or
sub
or
sub
push
add
xor
add
sub
xor
ins
add
add
adc
sub
add
outs
dec
add
or
add
or
add
or
push
jb
add
jo
xor
add
cmp
add
add
or
sub
add
push
jb
add
jo
xor
add
cmp
add
add
or
adc
add
fld
add
add
fld
add
add
or
adc
or
push
add
add
pop
mov
add
add
adc
sbb
sub
sbb
add
add
add
add
or
add
add
add
pop
pop
add
sbb
add
push
add
xor
add
sub
xor
add
add
add
add
add
add
or
fld
add
add
or
sbb
add
adc
add
add
add
sldt
sbb
add
or
sub
or
sub
sbb
add
add
add
jae
add
or
push
add
add
add
push
add
or
and
add
add
popa
add
push
cmp
add
es
jb
add
jo
push
add
or
push
add
add
add
push
add
or
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
adc
add
xor
add
mov
(bad)
push
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
sbb
add
add
add
add
sub
add
cmp
add
add
add
scas
(bad)
(bad)
inc
jb
add
jo
push
add
or
and
add
add
popa
add
push
cmp
push
add
add
add
dec
add
or
or
add
add
add
add
add
jmp
add
es
jb
add
jo
push
add
or
push
add
add
add
dec
add
or
or
add
add
add
add
add
push
add
jo
push
add
or
and
add
add
push
add
cmp
(bad)
(bad)
inc
outs
xor
add
or
sbb
add
push
add
add
add
mov
add
add
cmps
add
push
(bad)
sbb
sub
inc
sbb
add
add
add
add
add
add
add
add
sbb
or
rol
add
outs
add
adc
adc
pop
add
add
add
push
add
add
add
push
outs
dec
add
or
add
or
add
add
bound
add
pop
jb
add
jo
or
cdq
add
add
bound
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
(bad)
inc
jb
add
jo
or
xchg
(bad)
(bad)
jmp
add
add
dec
add
(bad)
inc
pop
push
outs
dec
add
or
add
add
jnp
add
add
jmp
add
cmp
add
add
jle
add
or
add
add
mov
jb
add
jo
or
xchg
add
add
pop
pop
movq
or
add
add
jnp
add
add
push
add
jo
xor
add
cmp
jle
add
or
add
add
pop
add
add
xor
(bad)
inc
jle
add
or
add
add
jle
add
or
add
add
jle
add
or
add
add
pop
lea
add
or
push
pop
sub
or
add
or
dec
add
add
adc
or
outs
or
and
add
dec
add
(bad)
(bad)
cmp
pop
jge
add
add
add
add
dec
add
(bad)
call
add
pop
adc
or
add
dec
add
(bad)
call
add
mov
scas
(bad)
(bad)
(bad)
fstp
add
add
pop
or
adc
add
jno
add
add
sub
sbb
inc
sbb
add
add
add
add
add
add
or
sub
or
sub
push
add
push
add
or
push
add
xor
add
sub
xor
add
add
add
add
xor
add
adc
push
add
push
jae
add
or
add
or
push
add
add
fld
add
add
pop
add
add
or
sbb
add
add
add
add
add
sbb
push
sbb
add
add
add
es
sbb
add
sbb
pop
add
add
add
add
jle
add
add
add
add
add
or
dec
add
or
add
jo
push
add
or
and
add
add
cmp
jle
add
add
inc
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jle
add
add
pop
add
or
fld
add
add
sub
or
add
add
or
push
or
xor
add
jle
add
add
call
cmp
add
sub
add
cmp
add
add
add
add
add
(bad)
add
add
pop
pop
or
jle
add
add
imul
adc
fst
add
add
pop
mov
add
sub
sbb
sub
add
sbb
add
add
add
add
(bad)
add
sbb
add
sbb
push
add
add
jo
add
jae
add
or
add
or
sbb
cmp
add
add
pop
call
or
add
or
add
or
or
add
inc
pop
add
add
or
add
pop
pop
or
push
mov
into
(bad)
(bad)
call
or
add
pop
or
add
adc
push
pop
mov
or
pop
add
(bad)
sbb
add
add
sbb
add
add
add
add
or
add
add
add
pop
pop
add
push
add
xor
add
sub
xor
add
add
add
add
add
pusha
add
add
lea
add
add
fld
add
add
or
sbb
add
add
add
add
add
push
push
add
sbb
add
or
sub
or
sub
xchg
and
adc
add
js
add
and
js
add
sub
add
mov
pop
add
or
add
add
xor
add
add
add
add
and
adc
add
js
add
jae
add
or
push
outs
pop
add
or
add
and
adc
add
js
add
sub
add
xor
add
sub
pop
sub
or
sub
push
add
xor
add
sub
stc
adc
add
js
add
sub
push
sub
add
or
add
push
and
adc
add
js
add
sub
push
sub
add
or
add
push
add
xor
add
sub
pop
sub
or
sub
sbb
or
inc
add
add
add
add
add
add
adc
jle
add
add
sbb
add
jle
add
add
adc
outs
pop
add
or
push
cmp
add
add
adc
fst
or
or
add
add
and
or
add
pop
cmp
add
or
pop
cmp
add
jle
add
or
pop
fucom
add
add
pop
inc
pop
cmp
add
add
pop
aas
pop
push
bound
add
add
and
pop
or
xor
add
or
pop
pop
pop
sbb
add
add
and
pop
adc
jle
add
add
and
push
bound
add
add
and
pop
or
inc
add
or
add
add
pop
outs
xchg
add
or
mov
add
adc
inc
add
or
add
adc
imul
pusha
add
or
add
add
sbb
add
jle
add
add
adc
or
push
add
add
fld
add
add
add
add
add
adc
push
fld
add
add
push
adc
frstor
add
add
pop
mov
mov
mov
add
add
add
pop
add
push
(bad)
sbb
pop
sub
inc
dec
add
add
add
jmp
add
adc
add
std
add
add
add
add
add
add
add
mov
add
pop
add
add
add
or
add
or
add
push
add
add
add
add
add
add
add
sbb
push
add
add
add
add
jb
add
jo
add
add
add
jo
data16
add
and
add
sub
add
sub
add
add
add
std
add
jo
xor
add
cmp
add
add
sub
add
bound
add
sub
add
data16
add
arpl
add
sub
add
or
add
or
jb
add
jo
push
add
or
pop
outs
push
add
or
add
or
add
add
sub
add
cmp
add
or
dec
add
push
and
add
or
add
xor
add
or
or
add
push
add
cmp
add
add
or
or
add
or
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
call
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
and
add
fisttp
cmp
add
add
outs
rol
or
fst
add
add
pop
or
sub
sbb
inc
xor
add
add
add
add
call
add
add
add
add
add
add
add
add
add
add
push
add
xor
add
sub
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
sbb
add
add
add
adc
sub
add
or
jae
add
push
jge
add
add
add
add
pop
cmp
add
add
add
jge
add
add
add
add
dec
add
cmp
add
add
jae
add
push
jge
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
push
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
fisttp
add
add
add
adc
sbb
add
add
adc
add
add
add
add
add
xor
mov
add
adc
sbb
add
add
mov
ins
add
add
add
add
cmp
add
add
sbb
add
add
mov
ins
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
sub
fdivr
(bad)
jmp
pop
push
lea
ror
add
add
mov
outs
add
add
add
add
sub
mov
(bad)
jmp
pop
push
lea
ror
add
add
mov
outs
add
add
pop
add
add
or
sbb
add
add
add
add
add
mov
add
sbb
add
or
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
add
add
add
adc
jnp
add
add
jnp
add
add
add
add
add
arpl
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
push
add
add
add
adc
jnp
add
add
jnp
add
add
add
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
push
add
xor
add
sub
pop
sub
or
sub
pop
add
add
add
add
add
add
sub
add
or
or
sub
or
sub
sbb
add
add
adc
and
add
lea
add
add
and
add
add
push
add
cmp
add
add
and
or
or
or
add
push
pop
and
pushf
pop
pop
and
lock
(bad)
jmp
pop
add
add
push
add
cmp
jae
add
push
add
add
sub
xchg
add
add
cmp
add
add
pop
and
pushf
and
pop
add
cmp
add
es
or
push
add
add
push
add
cmp
add
pop
and
int
(bad)
(bad)
cmp
add
add
pop
and
or
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
(bad)
cmp
add
add
pop
and
pushf
pop
and
add
add
in
(bad)
(bad)
(bad)
cmp
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
inc
(bad)
(bad)
jmp
(bad)
jmp
(bad)
(bad)
dec
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
inc
jae
add
push
add
add
add
pop
mov
adc
sbb
add
inc
sbb
add
add
add
add
add
add
add
add
or
add
sbb
add
add
add
add
xor
add
add
sub
or
add
add
sub
sbb
add
add
add
push
add
add
sbb
add
or
sub
or
sub
push
add
xor
add
sub
xor
xchg
add
add
add
adc
lea
ror
add
add
mov
xchg
add
add
add
sub
sub
add
sbb
and
add
mov
xchg
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
adc
and
add
mov
xchg
add
add
pop
add
add
or
sbb
add
add
adc
add
add
add
add
add
pop
sub
or
sub
sbb
add
mov
add
or
add
and
add
add
sbb
add
add
xor
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
and
add
dec
add
cmp
(bad)
(bad)
inc
pop
adc
add
add
add
add
dec
add
cmp
jae
add
push
jge
add
add
add
add
add
mov
xchg
add
add
or
add
add
xchg
add
push
(bad)
sbb
add
add
adc
add
add
and
add
sbb
add
push
add
add
add
add
add
add
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
jo
add
jbe
add
add
add
add
push
inc
push
add
add
add
add
sub
pop
add
add
add
add
add
cmps
add
push
or
sub
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
fisttp
add
add
or
or
add
add
xchg
add
push
(bad)
sbb
sub
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
add
adc
jnp
add
add
push
add
push
or
or
add
add
xchg
add
push
(bad)
sbb
sub
add
add
add
add
adc
add
sbb
add
or
sub
or
sub
sbb
add
add
add
adc
adc
and
add
mov
cwde
add
add
pop
add
add
push
add
cmp
add
add
sbb
or
add
dec
add
cmp
mov
and
pushf
push
and
add
add
add
add
push
lea
add
add
pop
push
lea
add
add
push
or
mov
add
jle
add
add
push
pop
or
data16
push
popf
and
add
dec
add
cmp
add
push
and
add
add
cli
add
add
add
add
dec
add
cmp
pop
add
add
add
add
and
(bad)
(bad)
inc
pop
pop
or
data16
push
popf
jle
add
add
and
pushf
cmp
add
add
pop
add
add
push
add
dec
add
add
add
add
add
add
push
add
add
(bad)
(bad)
push
(bad)
(bad)
dec
add
add
add
add
add
push
add
cmp
(bad)
(bad)
call
adc
and
add
mov
cdq
add
add
push
add
add
and
add
add
and
add
add
push
add
cmp
(bad)
call
or
push
add
add
add
add
pop
xor
pop
push
bound
data16
push
popf
jle
add
add
and
pushf
push
and
xlat
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
(bad)
jle
add
add
and
add
add
pop
sbb
add
popf
jle
add
add
and
or
dec
add
cmp
(bad)
(bad)
inc
and
add
add
fdivrp
(bad)
(bad)
cmp
(bad)
(bad)
jle
add
add
pop
test
pop
push
bound
data16
push
popf
and
add
add
sahf
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
pop
push
aas
outs
(bad)
(bad)
(bad)
fisttp
mov
xchg
add
push
(bad)
sbb
add
add
add
or
add
or
add
or
add
add
xor
add
add
add
add
adc
sub
add
or
add
add
add
add
add
sub
xor
add
add
pop
push
pop
pop
(bad)
lahf
add
push
jge
add
add
add
adc
sbb
push
jge
add
add
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
push
add
add
add
push
add
add
add
add
sub
aam
(bad)
(bad)
cmp
(bad)
(bad)
inc
and
inc
add
lea
add
add
add
add
add
cmp
add
push
add
add
add
add
pop
(bad)
lahf
add
push
jge
add
add
add
add
dec
add
cmp
and
inc
add
lea
add
add
add
add
or
add
add
sub
sbb
add
add
add
add
push
add
fadd
or
add
or
sub
or
sub
sbb
pop
add
add
adc
sub
add
or
add
add
add
add
add
pop
cmp
add
add
add
add
push
add
lods
add
add
xor
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
add
add
(bad)
(bad)
jmp
add
and
add
add
(bad)
(bad)
inc
add
xor
add
jge
add
add
add
add
dec
add
cmp
push
add
add
stos
add
add
sbb
add
add
add
add
mov
add
add
cdq
add
push
(bad)
sbb
add
add
add
add
push
add
add
add
pop
sub
or
sub
sbb
add
add
add
adc
sub
add
or
add
add
add
add
add
sub
inc
add
add
add
add
add
add
add
add
add
push
add
cmp
add
add
and
add
lea
add
add
add
add
int
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
sar
call
add
sar
jmp
add
add
add
add
sub
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
add
add
push
jge
add
add
and
add
add
jge
add
add
add
add
dec
add
cmp
add
and
add
jge
add
add
sldt
add
mov
add
cmps
add
push
(bad)
sbb
add
add
adc
add
add
add
int
nop
add
or
sub
or
sub
sbb
add
push
add
add
add
adc
jnp
add
add
fisttp
add
add
sub
sbb
sub
add
adc
add
add
add
add
sbb
add
sbb
add
sbb
add
add
adc
jnp
add
add
inc
or
or
add
add
xchg
add
push
(bad)
sbb
sub
add
add
add
add
add
(bad)
str
sbb
add
pop
add
add
add
lea
add
add
add
add
sub
add
or
or
sub
or
sub
push
add
push
add
or
add
push
sub
add
sub
add
pop
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
push
add
or
push
add
xor
add
sub
xor
lahf
add
add
add
and
add
add
imul
rol
add
pop
sub
add
sub
push
pop
inc
and
push
add
add
push
add
cmp
add
add
add
add
and
add
add
mov
add
cmp
add
add
push
or
add
add
dec
add
cmp
add
add
add
add
or
add
or
movs
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
push
(bad)
dec
add
add
add
aad
(bad)
jmp
add
xor
cmps
add
add
add
and
cmp
add
push
pop
inc
and
push
add
add
mov
add
cmp
add
add
add
add
and
add
add
push
add
cmp
add
add
or
add
push
jo
add
or
add
add
sub
and
add
add
add
pop
sub
add
sub
cmp
add
push
add
dec
add
add
add
(bad)
(bad)
(bad)
mov
(bad)
(bad)
push
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
sub
pop
sub
or
sub
adc
add
pushf
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
add
aad
add
push
add
add
sbb
add
add
add
xlat
add
add
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
pop
jge
add
add
add
push
add
cmp
xor
add
add
jge
add
add
add
add
dec
add
cmp
adc
pop
add
add
adc
pop
add
add
push
or
cmp
add
add
add
add
rol
add
sbb
jae
add
push
outs
or
add
add
jge
add
add
or
add
dec
or
cmp
add
sub
add
and
js
add
outs
inc
add
or
push
mov
jnp
add
add
imul
or
pop
push
mov
imul
aad
add
pop
push
mov
jnp
add
add
imul
and
add
add
push
or
cmp
add
add
jnp
add
add
fld
add
push
add
add
add
fiadd
add
pop
or
push
mov
sbb
add
adc
pop
adc
adc
adc
add
add
push
add
jnp
add
add
fadd
add
add
add
push
or
cmp
add
add
and
add
sub
add
sub
add
or
(bad)
(bad)
jmp
add
add
sub
push
add
add
add
add
add
rol
add
or
(bad)
jmp
add
add
push
cmp
add
add
add
add
mov
add
add
add
add
jnp
add
add
fadd
add
add
jmp
pop
add
add
push
or
dec
add
add
add
add
xchg
(bad)
dec
(bad)
(bad)
push
(bad)
(bad)
inc
(bad)
call
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
add
add
sub
add
and
add
add
mov
(bad)
jmp
add
pop
sub
or
sub
cmp
sub
add
or
add
add
add
add
xor
add
add
adc
add
add
dec
add
cmp
add
add
jge
add
add
push
add
add
push
add
cmp
add
add
add
add
add
mov
add
add
dec
add
cmp
add
add
push
adc
add
js
add
outs
or
push
add
add
add
add
dec
add
cmp
add
add
push
jge
add
add
add
add
add
jle
add
or
sub
push
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
push
(bad)
(bad)
call
(bad)
(bad)
call
add
and
mov
sar
(bad)
(bad)
cmp
(bad)
(bad)
jmp
add
pop
sub
or
sub
adc
add
jge
add
or
add
and
add
add
cmp
add
add
add
jge
add
add
xor
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
fld
add
add
push
add
cmp
sub
add
or
add
add
dec
add
cmp
add
add
add
add
add
push
add
add
add
push
add
add
add
cmp
adc
rol
push
sbb
add
add
pop
sub
or
sub
adc
add
add
add
and
add
add
push
add
cmp
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
dec
add
cmp
add
add
add
or
add
add
add
add
sub
add
push
cmp
add
add
add
add
or
add
add
sub
add
add
add
pop
add
add
pop
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
call
add
add
(bad)
dec
add
add
add
add
add
push
add
cmp
(bad)
(bad)
inc
push
lea
add
jge
add
add
push
add
add
push
add
cmp
add
fild
add
add
add
cmp
add
sub
add
outs
sbb
or
jp
add
push
and
adc
add
js
add
sub
add
or
push
add
add
and
add
js
add
sub
add
or
sub
add
sub
pop
lea
add
and
add
mov
loope
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
cmp
and
add
mov
loope
add
or
add
sub
add
push
cmp
(bad)
(bad)
jmp
sub
xor
xor
add
jp
add
and
add
add
push
adc
cmp
add
adc
or
add
or
add
or
and
add
add
push
adc
cmp
add
adc
outs
dec
add
or
sbb
add
jae
add
or
or
add
push
adc
cmp
add
add
sti
add
add
outs
xor
add
adc
cmp
add
add
add
jo
add
cmp
add
add
add
jno
add
add
jb
add
outs
jno
add
cmp
add
add
add
add
dec
adc
cmp
add
add
push
or
add
add
add
add
add
add
dec
adc
cmp
add
add
or
mov
add
sub
add
outs
push
add
or
adc
adc
outs
push
add
or
adc
pop
sub
add
or
adc
outs
xor
add
adc
and
add
add
push
adc
cmp
je
add
cmp
add
add
add
sldt
add
push
adc
add
js
add
cmp
add
add
pop
adc
add
js
add
or
jnp
add
add
or
mov
jnp
add
add
jae
add
push
adc
add
pop
add
add
jne
add
cmp
add
add
push
add
add
fiadd
add
add
add
add
arpl
add
sub
add
and
add
add
js
add
outs
or
add
and
push
push
add
lods
add
add
jbe
add
or
add
push
push
add
cwde
add
add
or
add
or
int3
add
push
or
add
or
pop
add
add
jnp
add
add
ins
adc
add
js
add
and
add
add
js
add
outs
or
add
or
add
or
pop
add
add
jnp
add
add
jne
add
sub
add
and
add
add
js
add
outs
or
add
or
add
or
xchg
add
add
add
add
dec
push
add
pop
add
add
cmp
add
or
add
or
jo
add
cmp
(bad)
jmp
push
add
add
push
push
add
or
add
add
add
add
add
(bad)
(bad)
(bad)
aas
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
std
(bad)
(bad)
call
add
and
add
add
aad
add
cmp
(bad)
(bad)
jmp
add
add
add
adc
add
js
add
or
add
or
or
or
jge
add
outs
or
add
cmp
add
add
or
int3
add
push
push
cmp
add
add
push
sub
add
push
and
add
add
aad
add
cmp
(bad)
jmp
add
add
add
mov
add
sub
add
and
add
add
js
add
outs
or
add
fisttp
add
add
or
pop
add
add
or
add
or
sub
jnp
add
add
jb
add
adc
adc
add
ja
add
adc
and
js
add
outs
push
add
or
adc
adc
and
add
sub
add
sub
add
or
add
or
adc
pop
sub
add
or
adc
outs
xor
add
adc
or
add
add
or
outs
xor
add
outs
push
add
or
push
adc
cmp
add
add
sub
or
(bad)
cld
(bad)
jmp
add
add
dec
adc
dec
add
add
add
add
add
cld
(bad)
dec
(bad)
call
cld
(bad)
push
std
(bad)
dec
add
add
(bad)
call
cld
(bad)
(bad)
jns
(bad)
call
add
fdivrp
(bad)
(bad)
clc
add
add
or
add
dec
adc
cmp
xchg
adc
add
js
add
adc
add
add
add
jle
add
cmp
add
add
jne
add
add
or
add
or
add
add
push
(bad)
call
add
jg
add
adc
add
push
adc
cmp
(bad)
call
or
daa
outs
jae
add
adc
or
outs
jae
add
adc
and
js
add
outs
push
add
or
and
add
add
push
adc
cmp
(bad)
(bad)
call
add
jg
add
adc
add
jae
add
push
adc
add
push
adc
cmp
(bad)
inc
test
(bad)
jmp
push
add
add
cmp
(bad)
(bad)
jmp
or
add
add
mov
(bad)
dec
movs
inc
add
add
pop
jae
add
or
or
pop
pop
and
pop
(bad)
(bad)
jmp
or
add
pop
cmp
(bad)
(bad)
jmp
add
cmp
add
add
jne
add
cmp
push
add
add
push
(bad)
cmp
jnp
add
add
arpl
add
sub
add
and
add
add
js
add
outs
or
add
adc
add
adc
int3
add
push
and
add
add
cmp
add
add
jbe
add
sub
add
push
add
sub
add
push
push
cmp
add
and
add
add
push
(bad)
cmp
add
add
sub
add
push
adc
add
or
or
add
or
add
or
push
or
add
add
jne
add
cmp
add
push
add
add
push
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
inc
(bad)
call
add
add
dec
(bad)
cmp
(bad)
(bad)
inc
cmp
add
add
dec
(bad)
cmp
test
add
sub
add
or
mov
js
add
sub
add
adc
adc
cmp
add
and
js
add
or
mov
js
add
sub
add
adc
add
add
add
rcl
add
js
add
adc
sub
add
outs
or
add
cmp
add
add
add
(bad)
jmp
add
dec
(bad)
(bad)
inc
push
sub
add
push
fisttp
add
add
or
add
or
or
sub
add
add
add
xor
add
lahf
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
xor
or
add
jnp
add
and
add
add
push
add
cmp
or
or
dec
add
add
jnp
add
add
outs
add
add
add
sub
das
add
add
or
add
add
pop
cmp
add
add
add
add
outs
add
or
add
add
sub
add
push
cmp
add
cmp
pop
pop
or
add
add
add
test
add
aas
mov
adc
add
jnp
add
add
test
add
or
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
call
add
or
add
dec
(bad)
(bad)
inc
add
add
push
add
add
cmp
(bad)
(bad)
jmp
add
add
add
retf
add
js
add
adc
sub
add
outs
or
add
and
add
add
push
add
cmp
jnp
add
add
and
cmp
sub
adc
add
cmps
add
add
add
adc
add
add
cmp
add
add
add
add
iret
adc
add
js
add
adc
sub
add
outs
or
add
sub
jnp
add
add
fcom
add
sub
add
add
add
or
add
push
add
cmp
add
add
add
dec
add
push
or
add
add
dec
add
cmp
adc
(bad)
cmp
add
add
dec
add
dec
add
add
add
(bad)
dec
(bad)
(bad)
push
(bad)
dec
(bad)
(bad)
push
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
add
adc
add
jmp
adc
add
add
cmp
add
add
add
outs
add
or
(bad)
(bad)
inc
pop
pop
pop
or
add
jge
add
jge
add
add
jl
add
and
add
dec
add
dec
add
add
add
add
add
add
dec
add
add
add
push
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
fiadd
add
or
add
add
sub
add
push
cmp
cmp
add
outs
test
add
and
adc
add
js
add
outs
xchg
add
cmp
add
and
xchg
(bad)
(bad)
inc
outs
test
add
or
add
outs
xchg
add
outs
mov
add
or
adc
add
js
add
sub
outs
or
add
jae
add
push
jge
add
add
push
add
add
push
(bad)
(bad)
inc
sub
add
xor
add
add
add
add
add
sub
sub
add
push
or
add
add
dec
or
cmp
add
add
or
ds
add
add
js
add
sub
rol
add
adc
pop
outs
jae
add
and
add
add
dec
add
add
add
outs
jae
add
add
add
or
or
add
add
add
or
add
and
add
sub
add
outs
mov
add
adc
adc
push
cmps
add
add
adc
outs
dec
add
or
pop
adc
adc
outs
dec
add
or
dec
add
or
dec
adc
add
js
add
and
add
sub
add
outs
mov
add
adc
and
add
add
push
or
cmp
add
add
push
outs
dec
add
or
ds
(bad)
call
add
push
outs
push
add
or
and
add
add
push
or
cmp
outs
test
add
outs
ret
add
or
add
or
add
add
push
or
cmp
outs
mov
add
adc
and
add
add
push
or
cmp
add
adc
or
add
or
adc
outs
je
add
outs
push
add
or
add
add
add
pop
add
or
jnp
add
add
add
xor
add
outs
nop
add
or
jnp
add
add
or
add
or
or
add
pop
cmp
add
add
adc
add
or
adc
pop
outs
jae
add
cmp
add
add
dec
or
dec
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
call
(bad)
call
(bad)
inc
(bad)
(bad)
jmp
add
add
pop
cmp
(bad)
(bad)
jmp
adc
sub
add
push
cmp
add
jnp
add
add
and
add
sub
add
adc
jnp
add
add
or
add
add
sub
pop
push
ds
add
add
add
add
xor
add
sub
add
adc
sub
add
outs
or
add
cmp
add
add
add
or
add
outs
push
add
or
adc
add
add
add
add
outs
and
add
or
adc
push
add
or
add
or
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
push
adc
add
js
add
adc
sub
add
outs
or
add
fld
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
add
add
sbb
push
add
add
jle
add
and
add
add
push
cmp
cmp
or
add
jnp
add
add
xor
add
and
add
cmp
or
add
jnp
add
add
popa
adc
add
js
add
jae
add
push
adc
add
add
add
adc
add
js
add
and
js
add
outs
sbb
or
add
add
add
add
xchg
adc
add
js
add
sub
add
or
sbb
sbb
mov
js
add
sub
or
add
add
add
add
loop
add
sub
add
sub
add
push
outs
or
add
add
add
add
xchg
add
or
xchg
add
or
add
add
jnp
add
add
movs
adc
add
js
add
add
add
add
sbb
sbb
push
adc
add
js
add
sub
or
add
add
add
add
scas
adc
add
js
add
sub
adc
add
js
add
sub
or
add
add
add
add
and
add
push
or
add
add
add
add
xchg
add
or
jnp
add
add
cmps
sldt
sub
add
jle
add
or
add
push
outs
pop
add
or
jnp
add
add
xchg
add
or
or
add
add
add
add
xchg
add
or
jnp
add
add
cmps
sldt
sub
add
push
outs
and
add
add
add
add
mov
js
add
jae
add
push
adc
sub
add
or
sub
pop
push
adc
cmp
adc
call
add
jnp
add
add
xor
add
sub
add
jae
add
push
adc
add
add
add
fcom
add
sub
add
pop
outs
or
add
outs
or
add
add
add
add
int3
adc
add
js
add
pop
outs
cwde
add
or
add
or
push
inc
pop
add
add
jnp
add
add
fst
add
sub
add
and
add
add
js
add
outs
or
add
fld
add
add
fld
add
add
sldt
add
and
pop
add
add
and
add
or
adc
pop
pop
adc
adc
adc
mov
push
(bad)
(bad)
(bad)
fisttp
add
add
push
cmp
add
add
push
outs
rol
or
add
add
add
loop
add
sub
add
jae
add
push
adc
add
add
add
dec
add
add
jnp
add
add
cdq
add
or
cmp
add
add
add
add
call
add
adc
cmp
and
pushf
add
or
jnp
add
add
sti
adc
add
js
add
jae
add
push
adc
jnp
add
add
fcom
add
sub
add
or
add
or
add
add
cmp
add
add
jnp
add
add
outs
popf
add
or
add
or
add
cmp
add
and
add
add
push
aaa
add
or
add
add
add
add
add
add
add
add
add
add
add
dec
aaa
add
aad
(bad)
inc
jnp
add
add
mov
add
sub
add
and
add
add
js
add
outs
or
add
and
add
dec
aaa
add
test
(bad)
(bad)
cmp
add
add
jnp
add
add
rcl
add
js
add
and
js
add
or
mov
js
add
sub
add
outs
or
add
fisttp
add
add
and
pop
add
add
and
rol
or
adc
sub
out
(bad)
(bad)
(bad)
fisttp
add
add
and
push
sbb
add
outs
rol
or
fisttp
add
add
and
pop
add
add
and
add
or
add
add
add
rol
add
jnp
add
add
lahf
add
or
ds
add
add
add
add
adc
add
js
add
jae
add
push
adc
add
mov
mov
cmp
add
adc
sub
add
jnp
add
add
and
js
add
jae
add
push
adc
add
add
add
ss
add
js
add
adc
or
add
and
add
dec
cmp
cmp
add
add
add
add
push
adc
add
js
add
adc
add
or
add
and
push
cmp
cmp
add
add
add
add
dec
adc
add
js
add
adc
add
sub
sub
jge
add
outs
or
add
adc
add
dec
add
or
ds
add
cmp
add
add
dec
cmp
dec
add
add
add
add
add
(bad)
(bad)
push
(bad)
dec
add
add
add
and
add
add
push
cmp
cmp
(bad)
(bad)
inc
jnp
add
add
add
mov
add
add
cmp
add
js
add
adc
add
or
add
and
add
add
cmp
cmp
add
add
add
add
pop
adc
add
js
add
adc
add
or
add
fisttp
add
add
daa
cmp
add
add
daa
outs
rol
or
adc
sub
(bad)
(bad)
(bad)
fisttp
add
add
es
push
sbb
add
outs
rol
or
fisttp
add
add
and
add
and
or
add
add
add
arpl
add
js
add
jae
add
push
adc
add
add
add
jl
add
sub
add
sub
xor
add
outs
cmps
add
or
jnp
add
add
lea
add
js
add
sub
test
add
outs
xor
add
outs
cmps
add
or
jnp
add
add
call
add
sub
test
cmps
add
add
add
or
add
or
jnp
add
add
stos
adc
add
js
add
sub
add
outs
cmps
add
or
jnp
add
add
mov
js
add
sub
add
cmp
add
add
leave
adc
add
js
add
cmp
add
add
enter
sub
add
outs
cmps
add
or
jnp
add
add
into
adc
add
js
add
sub
push
cmp
add
add
leave
adc
add
js
add
cmp
add
add
enter
sub
add
outs
cmps
add
or
jnp
add
add
rcl
add
js
add
sub
add
cmp
add
add
leave
adc
add
js
add
cmp
add
add
enter
sub
add
outs
cmps
add
or
push
add
add
fld
add
add
sldt
add
sub
pop
add
add
sub
add
or
jae
add
or
push
add
add
add
pop
cmp
add
add
push
adc
outs
stos
add
or
pop
outs
fld
add
adc
adc
cmp
(bad)
(bad)
call
push
outs
lods
add
or
jnp
add
add
in
add
sub
add
jae
add
push
adc
adc
outs
lods
add
or
sub
mov
sub
scas
add
or
or
adc
sub
or
add
or
and
add
sub
add
outs
xchg
add
cmp
or
add
or
and
add
sub
add
outs
xchg
add
je
add
add
or
or
add
or
or
adc
adc
outs
mov
add
adc
and
add
adc
add
add
adc
or
jb
add
adc
adc
adc
pop
fs
add
add
or
or
fs
inc
dec
add
add
jnp
add
add
cmc
adc
add
js
add
jae
add
push
adc
add
or
add
push
adc
sub
add
outs
or
add
fisttp
add
add
sub
add
sub
or
(bad)
or
fs
add
adc
adc
pop
fs
cmp
fisttp
or
add
js
add
outs
mov
add
adc
mov
add
movs
add
push
adc
add
js
add
outs
mov
add
adc
mov
add
movs
add
movups
add
js
add
outs
mov
add
adc
mov
add
movs
add
adc
or
add
js
add
outs
mov
add
adc
mov
add
je
add
sbb
adc
or
push
adc
adc
sub
add
push
cmp
add
add
jnp
add
add
addr16
add
push
jae
add
push
adc
add
add
add
and
add
push
adc
sub
add
outs
or
add
add
add
add
cmp
js
add
adc
sub
add
outs
or
add
add
adc
mov
add
adc
adc
push
ds
add
add
add
add
xor
add
sub
add
adc
sub
add
outs
or
add
adc
adc
add
jnp
add
add
xor
add
push
adc
sub
add
outs
or
add
adc
adc
push
adc
cmp
add
add
das
adc
call
jae
add
push
adc
enter
fld
add
add
fld
add
add
xor
pop
adc
adc
adc
mov
into
(bad)
(bad)
(bad)
fisttp
add
add
cmp
add
add
outs
rol
or
fld
add
add
fld
add
add
sub
or
add
cmp
std
(bad)
(bad)
fstp
add
add
sub
jo
add
adc
adc
cmp
add
add
xor
add
or
fld
add
add
fld
add
add
sub
mov
add
cmp
std
(bad)
(bad)
fisttp
add
add
sub
push
sbb
rol
or
fisttp
add
add
sub
pop
add
add
sub
add
or
add
into
add
push
add
add
add
js
add
sub
add
jae
add
push
adc
add
add
add
test
add
push
add
add
add
pop
add
adc
adc
sub
add
outs
or
add
push
adc
add
jnp
add
add
adc
or
add
or
push
frstor
add
add
pop
pop
and
pop
outs
pop
add
or
and
pop
add
or
push
fld
add
add
jnp
add
add
push
adc
add
js
add
adc
outs
cmps
add
or
adc
adc
add
pop
add
aas
xchg
(bad)
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
add
or
add
add
add
mov
add
push
jae
add
push
adc
jnp
add
add
test
add
push
add
add
add
and
add
adc
add
or
add
or
adc
cmp
add
add
jnp
add
add
adc
add
js
add
jae
add
push
adc
add
add
add
sbb
add
or
sbb
add
add
dec
cmp
cmp
add
add
jnp
add
add
retf
add
js
add
adc
jnp
add
add
or
add
cmp
add
add
add
add
dec
cmp
dec
add
add
add
add
add
add
add
add
add
add
add
cmp
(bad)
(bad)
call
sbb
add
add
dec
add
or
sub
add
and
add
dec
cmp
cmp
jnp
add
add
lahf
adc
add
push
adc
jnp
add
add
or
add
fisttp
add
add
cmp
add
add
outs
rol
or
adc
pop
pop
adc
adc
add
add
add
and
add
aas
adc
(bad)
(bad)
fisttp
add
add
xor
pop
add
add
xor
rol
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
add
add
add
mov
add
add
add
add
mov
add
add
add
add
xlat
add
or
add
add
add
push
add
or
add
add
pop
add
add
add
add
jnp
add
add
mov
add
add
cmp
add
add
add
add
add
jae
add
or
add
or
add
add
iret
(bad)
(bad)
jmp
push
add
add
push
cmp
dec
add
add
add
repnz
push
repnz
push
(bad)
(bad)
call
add
popf
(bad)
(bad)
(bad)
fdiv
(bad)
push
add
and
(bad)
add
push
cmp
(bad)
(bad)
(bad)
cmp
(bad)
(bad)
inc
jnp
add
add
add
add
or
add
add
add
add
dec
cmp
cmp
jnp
add
add
add
add
add
add
add
rol
add
popa
add
add
add
add
add
add
add
add
add
rol
add
ins
add
add
add
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
jle
add
sldt
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
daa
add
add
add
add
xlat
add
add
or
add
push
add
add
add
add
add
xlat
add
add
adc
add
add
add
add
add
add
add
and
add
inc
or
add
add
add
add
add
or
add
add
add
add
add
add
sbb
add
int
add
call
add
add
pop
add
adc
add
cld
or
add
add
add
add
add
add
fild
add
cmp
add
adc
add
sbb
add
xchg
add
stos
add
add
or
add
add
add
add
add
add
js
add
iret
add
add
add
push
add
add
add
add
add
add
add
jmp
add
pop
or
add
add
add
add
add
or
add
add
add
add
add
add
xchg
add
mov
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
jo
add
sldt
add
add
add
add
add
add
add
add
test
add
add
add
add
add
xor
add
add
add
add
add
pop
adc
add
push
jae
add
push
adc
push
or
xor
add
add
add
add
outs
add
jnp
add
add
pop
jnp
add
add
add
add
add
lods
adc
add
push
jae
add
push
adc
add
add
add
retf
add
js
add
adc
sub
add
outs
or
add
adc
add
adc
add
js
add
pop
lea
add
adc
adc
push
pop
sub
adc
outs
inc
add
or
adc
adc
cmp
adc
adc
adc
adc
and
add
add
js
add
sub
sbb
add
or
add
or
push
outs
or
or
add
push
adc
add
adc
pop
adc
adc
adc
(bad)
dec
pop
outs
mov
adc
push
add
add
adc
adc
add
adc
adc
outs
jb
add
outs
je
add
adc
adc
and
js
add
sub
push
add
add
or
ficom
add
push
sub
or
add
push
adc
add
push
pop
pop
adc
adc
adc
(bad)
(bad)
call
add
add
outs
xor
add
adc
add
add
dec
sbb
cmp
add
adc
outs
jg
add
sub
add
or
sbb
add
and
add
sub
add
push
cmp
add
cmp
add
adc
add
mov
add
or
add
or
sbb
add
or
and
adc
add
push
sub
cmp
jne
add
add
imul
add
add
add
add
add
dec
sbb
dec
add
add
add
(bad)
push
(bad)
dec
add
or
add
fwait
(bad)
(bad)
push
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
and
add
push
adc
mov
js
add
sub
add
adc
add
push
sbb
cmp
sbb
mov
js
add
adc
mov
js
add
sub
add
adc
fld
add
add
add
sbb
add
add
add
add
rcl
add
js
add
adc
dec
add
push
outs
or
add
or
add
or
add
add
or
add
or
int3
add
push
or
add
or
pop
add
add
jnp
add
add
ins
adc
add
js
add
and
add
add
js
add
outs
or
add
or
add
or
pop
add
add
jnp
add
add
jne
add
sub
add
and
add
add
js
add
outs
or
add
or
add
or
inc
add
add
je
add
add
or
jnp
add
add
adc
add
js
add
adc
outs
mov
pop
adc
sub
add
outs
or
add
jae
add
or
or
adc
cmp
add
add
or
or
add
adc
pop
sub
jae
add
adc
adc
adc
outs
mov
mov
adc
pop
pop
adc
adc
adc
outs
mov
leave
(bad)
(bad)
inc
jnp
add
add
dec
adc
add
js
add
adc
outs
xor
add
outs
or
add
adc
outs
mov
inc
cmps
add
add
or
add
or
or
adc
add
or
add
add
or
adc
push
add
add
or
pop
adc
or
or
jae
add
push
adc
enter
fld
add
add
fld
add
add
or
adc
(bad)
(bad)
(bad)
cmp
add
add
sub
add
push
pop
jnp
add
add
add
add
add
add
jne
add
add
adc
add
add
add
add
add
add
sub
add
jae
add
push
adc
push
adc
or
add
outs
mov
add
adc
cmp
sbb
add
or
mov
add
add
push
sbb
cmp
add
adc
pop
adc
sub
add
and
add
add
inc
add
add
jnp
add
add
adc
add
sub
add
jle
add
or
add
or
ins
add
add
adc
push
jae
add
push
adc
enter
cmp
add
add
add
add
dec
sbb
dec
add
add
add
(bad)
(bad)
dec
add
nop
(bad)
(bad)
dec
add
and
add
and
add
push
cmp
(bad)
(bad)
jmp
adc
pop
pop
adc
and
aad
add
cmp
(bad)
(bad)
jmp
adc
outs
or
add
cmp
(bad)
(bad)
fstp
add
add
sbb
add
add
sbb
sbb
pop
add
add
sbb
add
or
fisttp
add
add
sbb
pop
add
add
sbb
add
or
fld
add
add
fld
add
add
pop
sub
add
push
fisttp
add
add
adc
pop
add
add
adc
add
or
push
pop
pop
or
add
add
add
test
add
aas
mov
sldt
add
adc
pop
add
add
adc
add
or
sub
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
push
add
add
add
add
xor
jle
add
add
adc
add
push
or
cmp
add
cmp
add
adc
add
ret
or
rol
add
add
add
dec
or
cmp
or
adc
add
adc
pop
pop
adc
adc
adc
mov
pop
add
add
cmp
add
add
push
add
add
push
or
cmp
add
add
adc
cmp
add
and
add
add
push
or
dec
add
add
add
add
add
add
push
add
add
(bad)
(bad)
call
add
add
add
add
dec
or
cmp
(bad)
(bad)
(bad)
cmp
push
adc
call
or
add
or
add
or
ficom
add
push
sub
add
or
push
add
push
or
cmp
pop
add
add
outs
jne
add
cmp
add
add
outs
ret
add
or
add
inc
add
add
or
pop
outs
mov
push
and
add
dec
or
cmp
(bad)
(bad)
frstor
add
add
add
add
add
mov
add
push
jae
add
push
pop
sub
add
push
fld
add
add
fld
add
add
add
adc
aas
sar
(bad)
cmp
add
add
push
or
dec
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
or
cmp
(bad)
(bad)
inc
jnp
add
add
outs
les
add
or
push
add
add
push
or
cmp
jnp
add
add
jnp
add
add
lds
add
add
add
add
jecxz
add
adc
add
add
add
adc
add
and
add
sub
add
push
cmp
(bad)
jmp
sub
jnp
add
add
push
adc
add
js
add
jae
add
push
adc
add
sbb
add
sub
add
sub
add
push
add
add
add
retf
add
js
add
add
add
add
test
add
adc
adc
sub
add
outs
or
add
fisttp
add
add
or
pop
add
add
or
add
or
add
add
add
outs
add
or
pop
add
add
push
or
cmp
(bad)
(bad)
inc
adc
adc
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
add
sbb
add
and
add
cmp
add
push
add
add
add
add
add
add
add
add
add
add
sldt
add
add
add
xor
add
add
add
pop
sub
add
add
int
add
or
mov
add
or
add
or
add
push
or
cmp
add
or
outs
jg
add
pop
pop
outs
add
or
add
add
add
cmp
add
add
outs
jg
add
push
ds
add
add
aad
(bad)
jmp
add
add
dec
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
dec
add
add
add
add
dec
or
cmp
(bad)
(bad)
call
add
add
or
fld
add
add
pop
and
push
add
sub
add
pop
outs
pop
add
or
mov
push
add
or
mov
adc
fst
add
and
add
add
js
add
and
add
js
add
and
add
sub
add
jae
add
push
adc
sub
add
adc
frstor
add
add
push
adc
fst
add
add
push
add
push
jae
add
push
sub
add
push
adc
fld
add
add
pop
sub
add
add
add
add
add
add
add
add
add
add
add
cld
add
test
add
add
add
cld
add
add
adc
add
fwait
add
add
add
add
pop
cmp
add
push
pop
inc
pop
add
add
push
add
add
push
add
add
jnp
add
add
and
add
add
push
add
cmp
add
add
or
add
push
add
cmp
add
add
add
add
or
add
or
jl
add
add
pop
sub
add
sub
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jl
(bad)
push
add
add
add
add
cmp
(bad)
(bad)
jmp
add
xor
movs
add
add
add
aad
add
cmp
add
add
pop
add
push
imul
add
add
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
pop
sub
add
sub
push
pop
inc
or
add
and
add
add
cmp
push
or
add
add
push
cmp
add
add
add
and
add
add
push
add
cmp
add
add
xor
mov
add
adc
add
add
dec
add
cmp
add
push
pop
inc
jg
add
and
add
add
cmp
add
add
add
add
and
add
add
aad
add
cmp
add
add
pop
add
add
or
add
or
jl
add
add
pop
sub
add
sub
cmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
or
add
(bad)
jmp
add
add
xor
lahf
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
and
add
add
cmp
add
add
pop
add
push
push
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
cmp
add
cmp
(bad)
(bad)
jmp
push
or
add
add
dec
add
cmp
jl
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
jmp
push
add
add
cmp
sub
or
sub
or
sub
sbb
add
add
add
add
fld
add
cmp
add
add
add
add
or
add
add
jle
add
or
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
jge
add
add
add
push
add
(bad)
inc
jle
add
or
add
add
add
add
dec
add
(bad)
inc
jae
add
or
add
sub
add
or
add
add
push
outs
enter
imul
jnp
add
add
sbb
add
or
sbb
sbb
leave
add
or
pop
push
add
add
add
push
add
or
or
add
or
or
cmp
add
add
outs
rol
or
pop
sub
fisttp
add
add
adc
fld
add
add
or
inc
add
or
add
add
adc
add
adc
adc
pop
add
or
add
add
add
add
sub
add
sub
add
add
add
fild
or
add
in
add
add
or
add
add
pop
adc
adc
add
add
pop
sub
or
sub
add
jge
add
add
add
repz
add
or
sub
or
sub
add
add
add
dec
add
or
inc
sub
inc
add
or
add
or
add
or
add
push
sub
add
add
add
add
add
jae
add
push
jge
add
add
add
or
sub
or
sub
outs
add
add
push
add
add
push
add
add
outs
jb
add
add
jecxz
add
sub
xor
add
add
adc
add
add
dec
add
cmp
add
add
jge
add
add
add
test
add
cmp
add
and
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
add
add
sub
add
push
cmp
(bad)
(bad)
jmp
add
add
add
push
add
cmp
sub
add
or
add
add
sub
add
push
cmp
sub
push
add
add
add
or
sub
or
sub
push
add
add
add
cmp
sub
add
or
add
add
add
add
pop
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
jnp
add
add
or
add
add
add
add
xchg
add
push
sub
xor
add
add
adc
add
add
sub
add
push
cmp
add
add
and
add
add
push
add
cmp
add
add
pop
jge
add
add
add
add
pop
cmp
add
add
add
jge
add
add
add
pop
add
add
sub
add
or
add
add
add
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
or
sub
or
sub
push
add
push
add
or
push
add
push
add
or
push
add
xor
add
sub
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
and
add
add
add
add
add
xor
add
add
adc
add
add
dec
add
cmp
add
add
jle
add
or
add
add
add
add
dec
add
cmp
pop
jge
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
add
or
add
add
add
add
push
add
cmp
add
add
sub
add
add
sub
add
add
or
add
add
add
add
add
or
sub
or
sub
push
add
add
add
push
add
add
add
push
add
add
add
push
add
add
add
add
jle
add
or
adc
add
sub
add
add
add
inc
add
or
adc
add
sub
adc
add
rol
add
add
adc
add
push
add
cmp
add
add
add
or
add
add
add
add
dec
add
cmp
add
jle
add
or
add
add
add
add
push
cmp
add
add
retf
or
add
add
add
add
push
add
add
dec
add
or
inc
cmp
add
add
jge
add
add
add
pop
add
add
cmp
add
and
push
add
dec
add
add
add
(bad)
jmp
(bad)
call
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
push
add
add
push
add
cmp
pop
sub
or
sub
sbb
pop
add
add
add
add
add
pop
cmp
add
lahf
push
add
sub
add
add
add
add
add
add
add
or
add
or
and
push
add
sub
add
add
add
add
add
add
add
or
add
or
add
add
cmp
add
and
add
sub
add
add
add
add
add
add
add
or
add
or
add
sbb
add
cmp
add
add
pop
push
aas
add
add
and
add
add
cmp
add
add
add
call
add
add
push
cmp
add
adc
or
add
sub
add
outs
retf
add
or
sub
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
(bad)
cmp
or
jnp
add
add
call
push
pop
add
sub
add
add
add
add
call
pop
add
add
add
or
add
or
push
add
add
fld
add
add
pop
pop
or
add
add
dec
add
cmp
add
add
add
add
or
jnp
add
add
imul
push
or
and
push
add
sub
add
push
mov
add
add
or
add
or
or
stc
(bad)
(bad)
jmp
es
add
sub
add
pop
mov
add
or
icebp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
push
(bad)
push
(bad)
jmp
(bad)
jmp
(bad)
(bad)
(bad)
mov
add
add
push
add
add
sar
(bad)
jmp
add
add
add
test
fwait
inc
add
sbb
add
sbb
push
add
add
adc
add
and
add
add
push
add
cmp
sub
add
or
add
add
dec
add
cmp
add
add
pop
add
add
jnp
add
add
add
es
add
sub
add
pop
mov
add
or
pop
add
add
add
or
add
or
add
add
add
add
and
add
sub
add
mov
add
pop
pop
or
add
cmp
pop
push
aas
lahf
(bad)
(bad)
jmp
pop
add
add
push
add
cmp
add
add
and
add
sub
add
outs
int
add
jge
add
add
add
lahf
push
add
sub
add
outs
int
add
jge
add
add
add
les
add
sub
add
outs
int
add
jge
add
add
and
push
add
sub
add
outs
int
add
or
add
add
dec
add
cmp
add
add
lea
add
jge
add
add
or
sbb
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
(bad)
(bad)
mov
(bad)
(bad)
call
(bad)
inc
(bad)
jmp
(bad)
(bad)
call
add
add
push
add
add
sbb
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
add
daa
add
pop
add
sbb
add
adc
add
cdq
add
add
add
adc
add
pop
add
add
add
sgdtd
add
push
add
add
push
add
cmp
add
add
xor
add
and
add
add
push
add
cmp
add
add
add
add
add
add
add
dec
add
cmp
push
add
adc
add
add
add
scas
(bad)
(bad)
jmp
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
(bad)
mov
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
add
add
pop
sub
or
sub
push
add
xor
add
sub
add
xor
add
sub
add
sub
add
or
sub
add
sub
cmp
add
iret
add
or
sub
add
sub
cmp
add
rol
add
add
pop
add
push
sub
adc
add
jl
add
or
add
and
add
add
push
add
cmp
sbb
xchg
add
or
dec
add
add
add
add
dec
add
dec
add
add
add
add
retf
dec
add
retf
jmp
add
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
rol
add
and
add
add
push
add
cmp
push
sub
add
or
add
add
push
cmp
sub
pop
sub
or
sub
push
add
mov
add
sub
add
sub
outs
xchg
add
or
add
xor
add
add
add
add
add
add
add
add
mov
add
add
add
sub
add
or
jnp
add
add
rol
add
add
mov
add
mov
add
add
add
sub
add
or
sub
add
or
jnp
add
add
rol
add
pop
outs
movs
add
or
add
iret
add
or
add
add
xor
add
add
add
adc
add
add
pop
cmp
add
add
jge
add
add
add
add
dec
add
cmp
add
add
jle
add
or
add
or
add
push
add
cmp
add
sbb
add
add
aad
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
adc
push
add
add
push
add
cmp
add
add
and
add
sub
add
sub
adc
add
pop
jge
add
add
and
add
and
add
add
push
add
dec
add
add
add
add
add
add
cmp
add
or
add
cmp
add
lods
(bad)
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
xlat
add
or
fild
add
and
push
add
cmp
add
(bad)
add
or
add
add
dec
add
cmp
outs
fadd
add
add
add
add
push
and
add
add
add
sub
add
or
add
add
sbb
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fld
add
add
add
add
dec
add
add
jnp
add
add
jnp
add
add
dec
add
or
cmp
add
mov
add
cmp
sub
test
add
sub
add
add
add
add
jmp
js
add
sub
add
or
add
or
add
add
add
inc
add
or
add
or
pop
add
add
jmp
jnp
add
add
cmp
inc
jnp
add
add
js
(bad)
jmp
add
add
cmp
(bad)
(bad)
jmp
adc
add
sbb
add
or
add
and
add
dec
add
cmp
add
add
add
or
add
add
push
add
add
cmp
add
add
add
or
add
add
and
add
add
and
add
add
sub
add
or
scas
add
add
add
add
dec
add
dec
add
add
add
add
add
add
mov
(bad)
(bad)
dec
add
add
add
cdq
add
add
add
sar
(bad)
inc
jnp
add
add
inc
das
add
push
jae
add
or
add
or
jnp
add
add
outs
xchg
add
or
sub
jnp
add
add
fadd
add
add
adc
add
pop
sub
add
or
push
sub
add
or
pop
add
add
push
add
cmp
(bad)
inc
jae
add
or
add
add
pop
jge
add
add
add
add
push
cmp
(bad)
jmp
add
add
add
cli
add
add
add
or
add
add
push
cmp
(bad)
jmp
sub
jbe
sub
add
add
add
add
push
add
and
add
sub
add
adc
add
stos
add
add
add
adc
add
add
dec
add
cmp
add
add
sub
add
or
push
add
add
push
add
cmp
add
add
in
(bad)
jmp
add
push
add
cmp
add
add
jnp
add
add
sbb
add
add
add
add
loop
add
and
add
sub
add
push
cmp
add
add
add
add
add
jecxz
add
cmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
push
(bad)
inc
(bad)
(bad)
call
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
add
pop
add
jnp
add
add
inc
jge
add
add
outs
xchg
add
or
add
pop
sub
or
sub
push
add
add
add
adc
add
fiadd
add
xchg
add
and
add
add
push
add
cmp
and
add
add
xchg
pop
add
sub
add
sub
sbb
pop
add
add
adc
sbb
outs
xchg
add
or
push
add
add
pop
add
add
add
add
add
add
push
add
cmp
add
add
jnp
add
add
push
pop
pop
inc
add
add
add
(bad)
(bad)
(bad)
cmp
and
js
add
sub
sbb
jg
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
push
(bad)
(bad)
call
add
and
add
cmp
(bad)
(bad)
inc
jnp
add
add
cmp
add
add
add
add
cmp
add
xor
jnp
add
add
mov
add
sub
add
add
add
add
outs
popf
add
or
add
push
add
add
add
cmp
add
add
add
outs
xchg
add
or
add
xor
add
add
add
add
adc
push
add
add
push
add
cmp
add
add
add
add
loop
add
add
add
sub
add
or
pop
add
add
push
add
cmp
add
add
jnp
add
add
in
add
add
add
add
add
push
add
add
jnp
add
add
loop
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
add
add
add
add
(bad)
(bad)
(bad)
add
add
add
add
add
and
add
add
sar
(bad)
inc
adc
sbb
add
jnp
add
add
jo
(bad)
jmp
add
add
dec
add
cmp
cmp
jmp
add
push
add
cmp
jnp
add
add
push
(bad)
jmp
add
add
dec
add
cmp
add
or
add
add
add
add
jnp
add
add
add
push
inc
add
add
add
sub
add
or
add
jo
add
add
add
sub
add
or
sub
add
mov
jnp
add
add
sub
add
or
sub
add
or
add
nop
inc
add
add
add
sub
add
or
movs
add
or
add
iret
add
or
add
add
xor
jge
add
or
add
and
add
add
push
add
cmp
add
add
add
aad
add
add
add
or
add
or
add
sbb
add
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
cmp
(bad)
(bad)
jmp
add
add
xor
add
add
add
push
add
add
push
or
cmp
add
add
add
(bad)
add
or
add
add
sub
add
cmp
add
add
add
add
add
sgdtd
add
add
add
dec
or
cmp
outs
fadd
add
sub
add
or
add
out
add
adc
add
inc
add
or
pop
add
out
add
adc
add
or
sub
add
or
push
adc
sub
add
pop
pop
outs
call
add
sub
add
or
pop
adc
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
xor
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
in
add
cmp
(bad)
jmp
push
add
add
push
or
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
fld
add
adc
(bad)
dec
add
add
(bad)
(bad)
(bad)
cld
(bad)
(bad)
jmp
add
add
add
push
or
cmp
(bad)
(bad)
inc
outs
fadd
add
add
add
add
push
push
pop
and
and
add
or
outs
fld
add
sub
jnp
add
add
out
add
add
outs
fadd
add
add
add
add
outs
jmp
jnp
add
add
rol
add
add
add
or
jnp
add
add
add
jmp
inc
inc
add
add
add
sub
add
or
add
jmp
add
and
add
add
add
add
sub
add
or
add
add
pop
add
add
sub
add
or
add
add
and
add
sub
add
or
add
or
push
pop
adc
adc
add
or
outs
fld
add
and
add
add
push
or
cmp
(bad)
(bad)
inc
outs
fadd
add
sub
add
or
add
out
add
or
add
inc
add
or
pop
add
out
add
or
add
out
add
add
out
add
or
add
or
pop
outs
call
add
add
dec
or
cmp
add
add
xor
sub
add
add
add
add
add
add
outs
enter
pop
jae
add
or
add
or
add
in
add
or
push
add
add
fld
add
add
add
add
add
add
add
and
add
or
add
sbb
add
xor
add
or
add
and
add
add
push
add
cmp
add
add
and
sub
add
sub
add
or
int3
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
and
add
add
and
add
add
sub
add
or
jnp
add
add
outs
xchg
add
or
jnp
add
add
outs
enter
pop
jae
add
or
add
or
push
add
add
fld
add
add
sub
jnp
add
add
fadd
add
add
out
add
or
add
or
push
sub
add
or
pop
outs
mov
pop
cmp
xchg
add
or
push
add
add
aas
add
push
cmp
(bad)
jmp
add
or
add
jge
add
add
add
cmp
(bad)
(bad)
jmp
add
add
or
add
add
add
add
dec
add
cmp
jle
add
or
add
or
pop
add
add
cmp
(bad)
(bad)
jmp
sub
add
add
add
jnp
sub
add
dec
add
cmp
jnp
add
add
outs
popf
add
or
or
sub
or
sub
(bad)
add
add
loopne
add
add
add
sub
add
or
add
add
jnp
add
add
sub
add
or
add
or
pushf
add
or
add
iret
add
or
add
adc
add
jg
add
or
add
and
add
add
sbb
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
add
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
aad
add
add
add
or
add
or
add
push
add
cmp
add
xor
add
add
adc
add
add
cmp
add
add
add
add
or
add
add
add
add
jecxz
add
add
sub
add
or
push
add
add
push
add
cmp
add
add
jnp
add
add
retf
jmp
add
add
dec
add
cmp
add
add
jnp
add
add
jecxz
add
cmp
add
add
push
add
dec
add
add
add
(bad)
(bad)
call
add
add
(bad)
(bad)
(bad)
jle
(bad)
(bad)
jle
(bad)
jmp
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
jle
(bad)
jmp
add
push
add
cmp
add
add
xor
add
add
add
add
and
add
push
sub
add
or
fld
add
add
fld
add
add
add
add
add
add
adc
add
add
xor
add
add
adc
or
add
cmp
add
add
add
add
inc
inc
add
push
jae
add
or
add
or
jnp
add
add
inc
inc
add
push
jae
add
or
add
or
add
push
inc
add
push
jae
add
or
mov
cwde
add
add
or
add
dec
add
dec
add
add
add
add
add
add
add
add
jge
(bad)
(bad)
fld
add
sub
add
jge
(bad)
dec
add
add
add
fld
add
and
add
add
push
add
cmp
jae
add
or
add
add
add
cmp
add
add
add
pop
or
add
or
add
or
jnp
add
add
ds
sbb
add
or
add
or
add
add
dec
add
cmp
(bad)
inc
sub
add
or
add
or
push
sub
add
or
add
add
dec
add
cmp
(bad)
inc
jnp
add
add
and
js
add
outs
repz
or
jnp
add
add
jnp
add
add
mov
js
add
outs
repz
or
jnp
add
add
jnp
add
add
mov
js
add
outs
repz
or
pop
sub
or
add
push
cmp
(bad)
(bad)
jmp
add
add
or
add
add
jae
add
or
add
add
and
add
add
and
add
add
sub
add
or
sub
jnp
add
add
outs
xchg
add
or
add
add
dec
add
cmp
pop
jo
and
add
or
pushf
add
or
sub
lea
add
add
push
push
add
add
add
push
pop
add
add
add
push
outs
test
add
and
add
add
push
add
cmp
(bad)
inc
jnp
add
add
xchg
add
sub
add
outs
popf
add
or
jnp
add
add
xchg
sbb
add
js
add
sub
test
or
jnp
add
add
dec
push
jae
add
or
add
or
jnp
add
add
and
and
add
or
add
or
jnp
add
add
outs
test
add
add
push
add
cmp
std
(bad)
jmp
add
pop
sub
or
sub
adc
add
mov
add
or
add
and
add
dec
add
cmp
add
add
sub
add
or
jo
add
cmp
add
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
stc
add
or
pop
add
push
and
dec
add
push
cmp
add
sub
add
or
add
add
sub
add
cmp
sub
add
add
add
jp
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
pushf
add
or
add
iret
add
or
add
adc
add
test
add
or
add
and
add
dec
add
cmp
add
add
add
add
add
add
add
dec
add
cmp
add
das
add
add
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
dec
add
or
add
mov
(bad)
jmp
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
add
add
aad
add
add
add
or
add
or
add
cmp
sub
add
adc
add
mov
add
adc
add
add
cmp
add
add
jnp
add
add
jecxz
add
add
sub
add
or
push
add
add
cmp
add
add
add
add
add
loop
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
jmp
add
and
push
add
cmp
(bad)
(bad)
inc
jnp
add
add
mov
(bad)
jmp
add
add
dec
add
cmp
cmp
jmp
add
add
dec
add
cmp
add
adc
or
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
add
or
jnp
add
add
jnp
add
add
pop
imul
add
add
sub
add
or
add
add
das
add
add
sub
add
or
add
and
jnp
add
add
sub
add
or
add
inc
inc
add
add
add
sub
add
or
add
or
push
pop
sub
or
outs
cli
add
or
push
add
add
push
add
cmp
add
add
add
(bad)
add
or
add
add
dec
add
cmp
add
add
jnp
add
add
dec
add
add
outs
fadd
add
add
add
add
push
and
add
add
add
add
sub
add
or
add
sub
jnp
add
add
sub
add
or
add
or
push
and
add
add
sub
add
or
outs
fld
add
add
add
add
fwait
add
add
add
add
cmp
add
add
add
add
test
add
add
add
or
add
cmp
jnp
add
add
sub
add
or
and
add
add
add
sub
add
or
add
or
jnp
add
add
sub
add
or
add
or
add
or
mov
add
add
dec
add
dec
add
add
add
(bad)
(bad)
(bad)
jge
(bad)
call
(bad)
dec
(bad)
dec
add
and
push
add
cmp
(bad)
(bad)
jmp
add
add
xor
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
add
or
add
push
add
cmp
add
add
add
or
sub
add
add
add
dec
add
cmp
jnp
add
add
mov
add
mov
push
jge
add
add
mov
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
dec
add
cmp
(bad)
(bad)
jmp
adc
add
add
add
add
adc
add
add
dec
add
cmp
add
add
jae
add
or
add
add
repnz
add
add
add
dec
add
dec
add
add
add
add
push
add
add
add
add
add
pop
add
add
add
add
add
add
push
add
add
push
add
cmp
(bad)
(bad)
inc
and
sbb
add
js
add
sub
sub
add
and
sbb
add
js
add
sub
sub
add
add
add
dec
add
cmp
pop
arpl
add
add
add
add
dec
add
cmp
(bad)
inc
and
add
add
sub
add
or
jnp
add
add
push
outs
loopne
add
add
add
add
inc
dec
add
push
jae
add
or
add
or
and
add
add
sub
add
or
pushf
add
or
push
sub
add
or
and
sub
add
sub
add
or
pop
add
add
sbb
(bad)
inc
and
add
add
add
push
(bad)
(bad)
jmp
add
or
sub
or
sub
adc
add
lahf
add
add
add
cmp
add
add
add
add
and
add
add
push
add
add
jl
add
add
pop
sub
add
sub
push
pop
inc
push
add
add
push
add
add
push
add
cmp
or
add
add
sub
push
cmp
add
add
pop
add
add
or
add
or
mov
add
push
add
dec
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
jp
(bad)
dec
add
and
add
pop
cmp
(bad)
(bad)
jmp
sub
adc
add
lahf
add
add
add
add
cmp
add
push
or
add
add
dec
add
cmp
add
add
pop
inc
jmp
push
add
add
push
add
cmp
add
add
add
push
push
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
add
add
push
cmp
(bad)
(bad)
jmp
add
add
add
and
push
add
cmp
add
xor
movs
add
add
add
and
add
add
push
add
cmp
add
add
pop
inc
arpl
add
and
add
add
add
push
cmp
and
add
add
add
pop
sub
add
sub
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
cmp
add
and
add
dec
add
cmp
(bad)
(bad)
inc
or
add
add
or
add
or
add
add
cmp
jnp
add
add
and
cmp
sub
add
adc
add
fwait
add
add
add
and
add
dec
add
cmp
add
add
add
push
jo
add
or
pop
add
add
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
add
add
add
aad
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
and
add
add
cmp
add
add
pop
sub
add
sub
push
pop
inc
(bad)
(bad)
jmp
push
add
add
xchg
(bad)
(bad)
jmp
add
xor
add
add
mov
add
and
add
add
push
add
cmp
add
add
pop
mov
ret
add
add
pop
add
add
cmp
add
add
push
outs
lds
add
sar
add
sub
add
inc
push
add
push
pop
sub
add
or
add
xor
add
add
add
cmp
add
jle
add
add
cmp
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
fnsave
push
add
add
fld
add
add
pop
pop
or
add
add
dec
add
cmp
add
sub
add
or
add
or
push
or
add
add
sub
push
cmp
add
add
sub
add
cmp
(bad)
inc
or
(bad)
(bad)
inc
outs
lds
add
cmp
das
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
(bad)
std
(bad)
(bad)
(bad)
call
(bad)
(bad)
dec
add
add
add
push
add
cmp
(bad)
(bad)
(bad)
jle
add
add
push
add
add
push
add
add
push
add
cmp
xor
add
add
add
add
add
cmp
fs
add
or
add
sbb
add
add
outs
inc
add
or
add
add
cmp
add
jle
add
add
enter
sub
add
sub
add
or
rol
add
add
jne
add
add
pop
add
push
cmp
add
add
add
push
add
cmp
and
js
add
outs
mov
add
push
outs
mov
add
je
add
add
push
jne
add
add
mov
add
cmp
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
outs
fadd
add
or
outs
je
add
and
sbb
add
js
add
sub
add
or
xchg
(bad)
(bad)
inc
outs
mov
add
and
sbb
add
js
add
sub
add
or
jge
(bad)
jmp
add
add
dec
add
cmp
adc
add
add
pop
push
sub
add
fld
add
add
fld
add
add
inc
sbb
add
add
add
add
add
add
add
add
sbb
add
add
add
adc
inc
add
jne
add
add
adc
add
add
sub
add
cmp
add
(bad)
outs
inc
add
jne
add
add
pop
add
and
add
dec
add
cmp
xor
add
enter
sub
add
sub
add
or
leave
(bad)
(bad)
inc
add
inc
add
jne
add
add
pop
add
push
cmp
test
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
add
and
add
add
cmp
(bad)
(bad)
jmp
add
inc
add
je
add
add
add
add
push
inc
push
sub
add
fld
add
add
fld
add
add
add
add
add
add
leave
leave
add
or
add
sbb
add
or
add
xor
add
add
adc
add
add
sub
add
cmp
add
add
add
push
or
add
add
dec
add
cmp
add
add
add
add
and
add
add
push
add
cmp
add
add
jnp
add
add
add
add
push
sub
jnp
add
add
push
add
add
sar
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
push
outs
push
add
push
and
push
add
cmp
sub
xor
inc
add
mov
add
and
add
add
push
or
cmp
add
and
js
add
outs
mov
add
add
add
or
add
adc
pop
or
cmp
add
add
jne
add
add
add
add
sub
outs
pop
add
push
add
jnp
add
add
mov
add
push
pusha
add
push
jae
add
push
outs
mov
add
or
inc
pop
add
push
jae
add
or
add
push
or
inc
pop
add
push
jae
add
push
outs
rol
add
or
jae
add
push
or
push
cmp
add
add
pop
jge
add
add
cmp
add
add
push
jge
add
add
push
jge
add
add
push
add
add
add
add
add
push
add
add
push
jge
add
add
pop
jge
add
add
or
add
push
or
add
add
inc
or
sbb
add
fst
add
adc
adc
call
push
add
push
fld
add
add
cmp
add
add
add
add
push
cmp
add
sub
add
or
add
or
or
adc
cmp
add
add
or
or
outs
or
add
adc
and
add
add
push
or
cmp
add
adc
and
sbb
add
js
add
outs
or
add
cmp
xor
add
and
add
add
push
or
dec
add
add
add
add
add
add
mov
add
add
add
add
pop
cmp
(bad)
(bad)
jmp
adc
and
add
sub
add
outs
or
popa
add
add
add
add
js
add
outs
xchg
add
and
js
add
outs
add
add
outs
add
add
adc
outs
add
add
adc
and
add
dec
or
cmp
pop
outs
jb
add
and
js
add
push
lea
add
add
or
pop
adc
add
add
fld
add
add
fld
add
add
or
pop
adc
adc
adc
mov
add
(bad)
jmp
pop
add
add
push
or
cmp
add
add
outs
mov
add
and
sbb
add
js
add
sub
add
or
xlat
std
(bad)
(bad)
cmp
add
add
dec
or
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
push
add
add
sar
(bad)
inc
outs
je
add
and
sbb
add
js
add
sub
add
or
jl
(bad)
jmp
add
lods
(bad)
(bad)
inc
outs
fadd
add
or
add
add
dec
or
cmp
inc
inc
loopne
push
add
or
add
add
fstp
add
add
and
inc
loopne
pop
add
or
push
add
add
fld
add
add
add
add
sub
add
inc
add
add
aas
add
add
add
add
add
add
add
add
push
or
add
add
jecxz
pslld
push
or
add
add
into
add
add
or
add
and
add
push
add
push
sub
add
adc
add
jge
add
cmp
add
and
add
add
push
add
cmp
add
push
cmp
add
cmp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
jmp
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
and
add
add
push
add
cmp
add
out
add
or
add
push
add
cmp
add
add
xor
jnp
add
sub
add
and
add
add
inc
add
add
add
or
add
and
push
add
cmp
add
add
jnp
add
add
and
add
dec
add
cmp
add
push
cmp
add
add
retf
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
dec
(bad)
(bad)
call
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
sub
push
add
xor
add
sub
add
js
add
sub
add
or
and
add
add
js
add
xor
add
add
add
pop
sub
or
sub
adc
add
cdq
add
add
add
adc
add
add
dec
add
cmp
add
add
or
add
and
add
dec
add
cmp
add
add
add
add
add
add
add
mov
js
add
sub
add
or
or
add
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
sub
add
cmp
(bad)
(bad)
jmp
add
xor
add
or
add
and
cmp
sub
add
adc
push
add
add
add
add
add
fstp
add
sub
add
pop
lea
add
or
push
add
add
push
call
adc
add
test
add
mov
add
and
add
add
push
add
cmp
add
add
sub
and
add
cmp
add
add
outs
push
add
or
outs
lar
or
add
cmp
add
add
push
jne
add
add
pop
cmp
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
sub
pop
sub
or
sub
adc
add
xchg
add
or
add
and
add
add
push
add
cmp
and
mov
add
or
add
push
add
cmp
add
add
and
sbb
add
js
add
sub
add
or
or
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
(bad)
(bad)
inc
sub
add
or
add
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
adc
and
sbb
add
js
add
sbb
or
push
add
push
sbb
add
push
sbb
add
add
or
call
add
adc
add
nop
add
add
add
add
push
add
cmp
jne
add
add
cmp
add
add
add
dec
add
dec
add
add
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
jmp
add
add
add
add
add
and
add
add
push
add
cmp
(bad)
(bad)
inc
add
or
and
add
add
outs
add
push
cmp
mov
cmp
add
add
outs
push
add
or
outs
lar
or
add
push
add
cmp
sub
pop
sub
or
sub
cmp
sub
add
or
add
add
add
add
adc
add
sub
add
xor
add
add
add
pop
sub
or
sub
sbb
add
out
add
sldt
adc
add
add
dec
add
cmp
add
add
add
add
enter
and
add
add
cmp
add
add
jg
add
add
adc
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
push
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
(bad)
jg
add
add
add
add
add
or
data16
or
add
add
add
add
dec
add
cmp
add
add
add
add
pop
add
push
cmp
add
add
add
add
dec
add
dec
add
add
add
(bad)
(bad)
dec
add
add
(bad)
(bad)
dec
add
add
add
add
dec
add
cmp
(bad)
(bad)
call
cmp
add
fld
add
add
add
add
add
add
add
add
push
push
or
add
sbb
add
sub
add
lea
add
adc
(bad)
adc
adc
sub
add
add
add
or
add
fisttp
add
add
push
or
add
add
pop
sub
add
adc
add
add
add
and
or
add
sbb
add
sbb
add
adc
pop
sub
inc
push
inc
or
or
add
es
or
add
add
push
sub
add
add
add
add
add
adc
add
or
add
cmp
jae
add
jnp
add
add
inc
sub
sub
add
jnp
add
add
push
add
xor
add
sub
pop
sub
or
sub
adc
add
cwde
add
add
add
adc
add
add
dec
add
cmp
add
add
add
adc
add
jge
add
add
add
add
dec
add
cmp
add
add
add
jmp
add
jge
add
add
(bad)
sub
add
or
add
add
add
push
add
cmp
add
add
(bad)
sub
add
or
add
add
(bad)
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
call
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
jmp
or
sub
or
sub
adc
add
test
add
or
add
and
add
add
add
push
cmp
add
add
add
xor
add
and
add
add
push
add
cmp
add
add
add
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
dec
(bad)
(bad)
push
add
add
add
add
add
add
sub
aam
(bad)
jmp
add
add
add
outs
adc
add
and
push
add
cmp
add
add
add
add
add
adc
add
sub
add
or
sub
or
sub
adc
add
rol
add
mov
add
and
add
add
cmp
add
add
jae
add
or
and
add
add
cmp
add
add
push
outs
adc
inc
movs
add
add
jp
add
and
add
add
push
add
dec
add
add
add
add
add
(bad)
(bad)
dec
add
(bad)
(bad)
dec
add
add
and
push
add
cmp
(bad)
(bad)
inc
and
add
push
outs
push
add
or
and
add
sub
add
outs
pop
add
or
and
add
sub
add
outs
sbb
add
and
add
dec
add
cmp
jnp
add
add
outs
sbb
add
sub
add
sbb
add
and
add
add
push
add
cmp
(bad)
jmp
sbb
add
pushf
add
add
add
adc
jnp
add
add
outs
stos
add
or
add
add
pop
cmp
add
add
add
add
add
outs
stos
add
or
jnp
add
add
outs
stos
add
or
xor
add
and
add
add
push
add
dec
add
add
add
add
add
add
add
add
add
add
add
dec
add
cmp
(bad)
(bad)
inc
jnp
add
add
sbb
add
and
add
cmp
(bad)
(bad)
inc
inc
mov
add
jae
add
or
sub
add
add
fld
add
add
add
add
add
add
xchg
xchg
add
or
add
push
add
sbb
add
sub
xor
add
add
add
add
add
jnp
add
add
or
add
add
add
add
sbb
add
fld
add
add
fld
add
add
sub
add
or
add
add
add
add
sbb
add
or
add
push
add
sbb
add
sub
jnp
add
add
jnp
add
add
sbb
add
jge
add
add
sbb
push
add
add
add
add
adc
add
push
mov
add
jae
add
push
sbb
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
xor
add
sbb
push
add
add
add
add
adc
add
push
mov
add
jae
add
or
lea
add
or
push
add
push
sub
fld
add
add
fld
add
add
add
adc
add
add
add
sub
push
xor
add
adc
add
xchg
add
add
add
adc
add
add
dec
add
cmp
add
add
add
add
adc
add
and
add
add
xchg
add
push
cmp
add
add
sub
add
or
add
push
add
cmp
add
add
jnp
add
add
pop
add
or
(bad)
(bad)
inc
jnp
add
add
sbb
add
cmp
(bad)
(bad)
jmp
add
add
dec
add
dec
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
add
add
add
add
cmp
(bad)
(bad)
jmp
add
xor
add
add
add
add
add
cmp
add
add
add
push
add
add
lods
add
add
jnp
add
add
jnp
add
add
dec
add
push
cmp
add
add
dec
add
dec
add
add
add
add
add
add
add
add
daa
add
add
add
and
add
test
add
mov
add
pushf
(bad)
(bad)
inc
add
ret
add
or
add
dec
add
cmp
jnp
add
add
mov
pop
add
add
push
add
cmp
outs
and
add
sub
jnp
add
add
je
add
and
add
add
cmp
push
pop
outs
stos
add
or
outs
and
add
sub
jnp
add
add
sub
add
add
add
add
je
add
sub
push
add
add
sub
add
add
add
add
outs
stos
add
or
jnp
add
add
jnp
add
add
dec
add
push
push
pop
outs
stos
add
or
outs
and
add
sub
jnp
add
add
sub
add
add
add
add
je
add
and
add
add
push
add
cmp
(bad)
(bad)
jmp
dec
add
or
add
or
or
add
add
add
add
push
add
add
jnp
add
add
add
add
pop
pop
pop
inc
add
add
add
add
xchg
(bad)
(bad)
jmp
(bad)
(bad)
jg
add
sub
push
add
add
sbb
(bad)
jmp
add
add
dec
add
cmp
jnp
add
add
and
add
add
add
add
outs
movs
add
or
or
add
pop
cmp
add
add
add
outs
stos
add
or
push
add
add
push
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
dec
add
push
push
pop
outs
stos
add
or
add
add
dec
add
cmp
(bad)
jmp
add
add
add
outs
stos
add
or
jnp
add
add
sub
add
add
add
add
sub
add
add
add
add
outs
movs
add
or
add
push
add
cmp
add
add
add
sbb
add
sub
xor
add
add
add
add
adc
add
push
add
cmp
add
add
pop
jge
add
add
add
add
dec
add
cmp
add
add
jnp
add
add
jne
add
cmp
add
and
push
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
push
add
add
add
add
add
add
sub
sar
(bad)
jmp
add
add
add
outs
stos
add
or
jnp
add
add
jne
add
and
add
add
scas
(bad)
(bad)
inc
jnp
add
add
jne
add
add
add
add
and
add
add
push
mov
add
jae
add
or
sub
add
add
push
add
cmp
jmp
add
add
add
add
add
mov
add
sub
add
add
pop
add
add
jnp
add
add
push
test
push
jae
add
or
sub
xor
add
add
adc
or
add
push
cmp
add
add
add
inc
add
add
add
jnp
add
add
outs
stos
add
or
add
add
add
aam
add
pop
or
or
add
sub
stos
add
add
movs
add
add
add
aam
add
ds
add
add
push
sub
jnp
add
add
mov
add
and
add
sub
js
add
add
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
add
add
dec
add
cmp
add
and
sbb
add
js
add
jae
add
push
jge
add
add
jae
add
or
add
add
jae
add
or
add
add
jae
add
or
add
add
std
add
add
or
add
dec
add
dec
add
add
add
add
add
add
add
add
mov
add
add
(bad)
call
add
sbb
(bad)
jmp
(bad)
(bad)
dec
(bad)
call
add
ja
(bad)
jmp
(bad)
(bad)
(bad)
aas
add
add
add
add
sub
mov
(bad)
jmp
add
add
push
jge
add
add
pop
add
add
call
add
or
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
add
add
sub
push
(bad)
jmp
add
stos
sbb
add
js
add
jae
add
push
jge
add
add
and
sbb
add
js
add
jae
add
push
jge
add
add
and
sbb
add
js
add
jae
add
push
jge
add
add
or
add
dec
add
cmp
(bad)
(bad)
inc
add
push
mov
add
jae
add
or
add
push
add
add
add
outs
stos
add
or
jnp
add
add
test
jnp
add
add
and
add
cmp
add
add
jnp
add
add
outs
stos
add
or
std
add
add
sub
add
add
add
add
outs
movs
add
or
jnp
add
add
and
or
add
add
add
add
and
add
add
inc
mov
add
jae
add
push
outs
push
add
push
and
add
add
mov
(bad)
inc
jae
add
or
add
add
jae
add
or
add
add
add
xchg
add
push
cmp
(bad)
jmp
add
add
or
add
add
or
add
dec
add
cmp
(bad)
inc
jnp
add
add
jnp
add
add
pop
add
or
add
or
add
add
add
aam
add
add
daa
add
or
or
or
push
add
cmp
(bad)
inc
and
sbb
add
js
add
and
or
add
js
add
sub
or
add
push
jge
add
add
and
js
add
and
or
add
js
add
and
js
add
sub
add
jae
add
push
jge
add
add
jae
add
push
jge
add
add
jae
add
or
add
add
sub
add
add
dec
add
push
add
aam
add
or
add
pop
add
add
add
add
dec
add
cmp
jmp
add
pop
sub
or
sub
push
add
xor
add
sub
jnp
add
add
jge
add
add
sub
add
or
dec
add
add
add
jge
add
add
sub
add
or
adc
add
inc
add
add
or
add
pop
cmp
add
add
add
or
add
sub
add
or
and
or
add
js
add
outs
popf
add
or
outs
mov
add
outs
dec
add
or
adc
add
add
pop
sbb
add
js
add
outs
popf
add
or
add
add
add
jnp
add
add
cmp
add
add
add
add
outs
stos
add
or
add
add
sub
pop
add
add
push
add
add
add
pop
add
or
add
or
add
add
add
outs
xor
add
outs
popf
add
or
jnp
add
add
sub
add
pop
cmp
or
add
add
dec
add
cmp
add
add
jnp
add
add
mov
(bad)
(bad)
cmp
add
and
add
add
push
add
dec
add
add
add
(bad)
(bad)
jmp
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
add
add
add
add
(bad)
(bad)
(bad)
add
add
pop
add
add
xchg
add
push
cmp
(bad)
(bad)
jmp
push
and
js
add
outs
push
add
or
and
add
add
push
add
cmp
and
add
jge
add
add
jae
add
or
add
add
and
sbb
add
js
add
and
or
add
js
add
sub
or
add
push
jge
add
add
jae
add
push
jge
add
add
sub
add
add
popa
add
push
and
add
add
xchg
add
push
cmp
(bad)
jmp
add
add
add
dec
add
or
ds
add
add
jnp
add
add
jnp
add
add
popf
add
or
fdivrp
(bad)
push
add
or
push
and
add
sub
add
and
or
add
js
add
sub
or
add
or
and
add
add
call
add
sub
add
or
add
inc
add
or
inc
add
add
add
sub
add
or
add
or
jae
add
or
mov
or
add
sub
stos
(bad)
(bad)
jmp
add
add
push
jge
add
add
add
push
add
cmp
add
or
sub
or
sub
sbb
add
and
add
xchg
add
adc
jae
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
rol
or
sub
add
add
add
add
pop
add
add
sbb
add
and
add
xchg
add
adc
add
add
push
or
outs
sub
add
fisttp
cmp
add
add
outs
rol
or
sub
add
adc
add
add
add
add
mov
add
xor
add
and
add
sub
add
and
or
add
js
add
sub
or
pop
adc
sub
add
sub
sbb
pop
add
add
adc
add
push
sub
add
push
pop
or
add
shl
add
add
add
or
jl
add
sub
add
and
add
add
adc
sub
fld
add
add
fld
add
add
xchg
push
add
sub
add
and
or
add
js
add
sub
or
push
push
jae
add
push
jae
add
push
or
pop
outs
lods
add
or
outs
sub
add
(bad)
add
add
outs
xor
add
and
add
sub
add
and
or
add
js
add
sub
or
pop
adc
sub
add
fld
add
add
or
add
sub
sub
add
add
add
cmp
push
rol
add
add
adc
addr16
cs
add
add
add
adc
add
push
add
popa
add
push
sub
pop
sub
or
sub
push
add
push
add
or
inc
push
dec
inc
add
add
add
add
or
add
jbe
xor
xor
add
add
add
add
add
and
add
add
movs
aas
add
and
jb
outs
addr16
add
add
cmps
add
pop
add
add
push
push
add
add
add
add
inc
push
dec
inc
add
add
add
and
add
inc
ins
outs
bound
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
add
dec
add
add
add
add
add
add
add
add
add
push
add
push
add
add
cmp
push
add
add
add
add
add
add
add
add
sub
sub
cmp
add
push
add
push
add
add
lea
or
rol
fadd
push
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
push
add
add
add
add
and
push
add
and
adc
xchg
add
add
add
lods
add
add
add
add
call
add
push
ss
push
add
ss
push
add
push
push
add
cmps
push
ss
push
add
push
push
add
add
push
push
add
add
push
mov
push
add
pop
push
add
add
ss
push
add
ss
push
add
add
add
pop
push
add
add
pop
fild
or
repnz
inc
push
add
push
add
add
mov
sbb
popa
or
add
add
or
add
add
or
add
add
push
add
add
push
add
add
add
add
or
add
add
or
or
pop
push
add
mov
push
add
ror
pop
push
add
or
or
or
add
add
mov
push
add
add
add
jle
push
add
add
or
pop
push
add
push
add
add
mov
push
add
mov
push
add
add
or
add
add
or
add
add
cmp
push
add
add
add
add
or
add
push
add
add
push
fild
or
arpl
inc
push
add
retf
push
sub
sbb
cli
push
sub
push
add
push
add
add
test
push
add
add
movaps
sbb
aad
jle
push
add
adc
lods
add
add
pop
adc
add
add
rcl
ss
push
add
adc
add
add
adc
add
add
add
pop
push
add
lods
pop
push
add
pop
push
add
mov
add
adc
add
add
adc
add
or
add
in
adc
add
add
adc
add
add
push
add
add
add
add
adc
add
add
add
add
adc
pusha
adc
mov
add
add
adc
daa
push
push
add
add
lods
pop
push
add
add
push
push
add
add
push
mov
or
not
mov
push
add
ss
adc
mov
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
fild
push
add
push
add
add
sbb
add
add
sbb
add
sbb
add
add
sbb
add
add
add
retf
sbb
sbb
pop
or
xchg
sbb
pop
push
add
sbb
push
add
sbb
add
add
lea
push
add
sbb
add
add
sbb
sbb
add
pop
sbb
and
push
add
add
push
push
add
add
add
add
add
add
and
add
add
stos
or
add
and
fild
push
add
sub
add
add
sub
pop
adc
add
add
add
inc
add
add
push
add
add
sub
add
add
sub
adc
add
sub
daa
sub
(bad)
sub
adc
mov
push
add
mov
push
add
add
mov
push
add
add
xor
xor
xor
xor
add
add
xor
push
add
and
push
add
xor
xor
pop
push
add
lods
pop
push
add
lods
pop
push
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
in
fild
push
add
ss
add
add
lods
add
add
out
lods
add
add
aaa
test
sbb
cmp
push
add
add
bndldx
fs
test
push
add
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
pop
push
add
cmp
add
add
cmp
add
add
cmp
add
add
cmp
add
add
add
cmp
sbb
repnz
add
cmp
and
cmp
push
cmp
test
lahf
cmp
mov
push
add
add
cmp
in
push
add
add
cmp
adc
sub
push
add
sub
push
add
add
add
sub
push
add
add
add
popf
ds
add
add
add
ds
sbb
pop
sbb
pop
sbb
pop
sbb
retf
add
lods
add
add
mov
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
jp
xor
add
add
add
add
add
add
add
add
add
add
add
cmp
add
mov
add
add
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
push
add
add
add
add
add
add
add
add
add
add
add
adc
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
or
clc
add
add
add
add
cld
add
add
add
add
add
add
sbb
xor
adc
add
add
add
pop
add
add
adc
add
or
add
popa
add
add
sbb
add
or
add
outs
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
add
inc
add
add
add
add
add
add
inc
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
push
add
add
add
add
adc
add
add
scas
add
add
pop
add
add
add
add
add
sbb
add
add
mov
add
inc
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
add
add
add
pop
add
add
add
fild
add
inc
add
inc
add
add
add
add
add
pop
add
add
add
out
add
inc
add
dec
add
add
add
add
add
add
push
add
add
add
add
add
pop
add
add
adc
repz
add
add
pop
add
add
add
add
add
add
pop
add
add
add
pop
add
add
adc
add
pop
add
pusha
add
add
adc
adc
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
add
add
add
add
jb
add
adc
sub
and
xor
bound
jae
add
add
das
add
add
bound
js
add
add
xor
aaa
add
add
js
add
adc
cmp
aaa
add
imul
add
add
add
add
add
imul
add
add
add
inc
add
imul
add
add
xor
imul
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
xor
xchg
add
add
add
xor
cwde
add
add
add
xor
cmps
add
add
add
xor
scas
add
add
add
xor
mov
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
into
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
repnz
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
std
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
or
push
add
and
add
and
xor
push
add
add
add
add
scas
add
add
add
add
add
add
scas
add
adc
sbb
add
adc
xor
scas
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
adc
jo
push
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
adc
jl
and
popa
add
add
add
adc
fiadd
add
add
add
add
adc
out
add
add
add
add
add
adc
push
add
add
or
add
add
cmp
jnp
or
add
add
inc
add
or
adc
sti
add
add
dec
add
add
adc
inc
add
add
jle
add
add
add
push
add
add
add
pop
add
add
add
add
add
add
add
pop
add
add
add
jno
xchg
add
add
add
add
jno
xchg
add
add
add
add
ja
cdq
add
add
add
add
ja
mov
sbb
sbb
sbb
sbb
sbb
adc
add
adc
add
xchg
adc
add
call
adc
add
sbb
adc
add
push
adc
add
mov
add
rcr
adc
push
add
jge
push
or
adc
nop
pop
xchg
adc
push
pop
xchg
adc
sbb
xchg
adc
push
pop
xchg
adc
and
xchg
adc
es
xchg
adc
sub
xchg
adc
add
pop
jmp
push
push
add
pop
ret
adc
add
pop
ret
adc
add
pop
ret
adc
add
clc
add
add
clc
add
add
clc
add
adc
(bad)
adc
add
jmp
push
add
pop
pop
jmp
push
push
add
int
push
add
jge
push
add
jge
push
adc
(bad)
adc
push
add
jge
push
add
push
or
adc
dec
and
adc
push
and
adc
push
and
adc
pop
and
adc
pop
and
adc
pusha
and
adc
fs
adc
push
add
ret
adc
push
sub
push
add
jmp
push
push
add
or
push
add
adc
add
add
mov
ret
adc
add
push
push
add
nop
and
adc
adc
cwde
and
adc
add
add
mov
add
test
pop
adc
add
pushf
and
push
push
add
add
mov
add
lods
and
push
push
add
jo
jmp
push
push
add
add
je
jmp
adc
add
add
les
ret
adc
add
and
adc
add
and
adc
add
add
inc
and
add
add
clc
add
add
add
push
add
jge
push
sub
test
test
clc
add
add
and
add
add
and
adc
add
and
and
adc
jge
push
add
clc
add
add
rcl
rcl
rcl
rcl
jge
add
pop
and
bound
and
add
push
jge
add
outs
and
cli
or
adc
fcom
loope
add
jbe
out
add
jp
out
add
lods
and
mov
jge
add
mov
jge
add
inc
or
adc
add
add
sbb
jge
add
and
jge
add
imul
adc
out
add
out
xor
mov
rcl
rcl
(bad)
adc
add
pop
push
out
add
pop
and
cwde
es
add
pushf
es
add
mov
add
test
jge
add
lods
es
adc
jge
xor
mov
rcl
jge
add
in
add
add
call
add
or
xor
mov
rcl
(bad)
adc
add
es
add
cmp
sbb
add
jp
sbb
add
pop
push
sbb
add
cmp
repz
(bad)
adc
add
adc
add
jge
xor
dec
daa
repz
(bad)
adc
add
adc
(bad)
adc
add
test
push
add
add
cwde
daa
repz
rcl
jge
add
movs
daa
daa
push
add
in
daa
jge
add
lock
repz
repz
jge
add
cld
daa
jge
add
add
cwde
adc
jge
add
or
jge
add
or
jge
add
lods
and
adc
(bad)
adc
add
jge
add
sbb
jge
add
sbb
jge
add
call
add
sub
push
add
adc
add
sbb
add
dec
sub
add
push
sub
adc
add
adc
add
sub
push
adc
(bad)
sub
push
adc
retf
sub
sub
sub
adc
xlat
sub
adc
fld
inc
push
adc
fild
dec
push
adc
jecxz
dec
push
adc
out
push
push
adc
jmp
push
push
adc
out
sub
adc
repz
adc
imul
cmp
and
sti
sub
add
jmp
pusha
push
and
ins
sub
sub
adc
add
push
and
js
mov
sub
sub
sub
sub
sub
add
add
sub
add
add
sub
add
add
sub
push
and
enter
and
shr
icebp
push
and
aad
cmc
push
and
fldcw
(bad)
push
add
(bad)
or
and
loope
push
pop
and
in
sbb
and
jmp
add
sub
pop
and
icebp
sub
pop
add
cmc
sub
pop
add
stc
sub
adc
add
sub
pop
add
add
cmp
add
push
push
clc
add
add
add
or
adc
add
clc
add
add
clc
add
add
add
add
sbb
add
add
and
lock
cs
adc
call
sub
sbb
add
add
mov
add
test
cwde
adc
cwde
adc
inc
sbb
add
add
add
pop
xor
xor
adc
sbb
add
xor
adc
add
add
clc
add
push
add
jge
push
sbb
sbb
arpl
ja
push
and
sbb
imul
sbb
add
jge
add
mov
xor
add
add
xor
sbb
add
xor
sbb
add
xor
xor
sbb
add
xor
xor
add
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
add
(bad)
and
add
ins
add
sbb
add
xor
sbb
add
xor
sbb
push
add
jge
push
cmp
add
cmp
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
xor
sbb
add
jge
and
arpl
addr16
jecxz
jmp
sbb
add
xor
sbb
add
shl
xor
sti
sub
add
add
cmp
add
jmp
pusha
push
xor
cli
aaa
clc
add
add
aaa
clc
add
add
cmp
add
add
add
cmp
cmp
cmp
push
add
add
add
add
cmp
push
add
cmp
adc
add
cmp
adc
add
cmp
adc
add
cmp
adc
adc
cmp
add
add
cmp
adc
add
cmp
adc
add
cmp
adc
add
cmp
adc
(bad)
adc
pop
adc
add
cmp
adc
add
cmp
adc
add
cmp
push
push
add
cmp
push
push
add
cmp
push
push
add
cmp
adc
add
cmp
adc
add
cmp
adc
add
cmp
adc
add
pop
adc
add
sub
pop
adc
mov
add
clc
add
sbb
add
add
mov
loope
add
mov
repz
add
add
add
adc
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
add
cmp
sbb
pop
sbb
pop
sbb
pop
sbb
pop
sbb
repz
add
cmp
sbb
add
cmp
sbb
add
cmp
or
add
std
cmp
sbb
repz
add
add
dec
sbb
adc
repz
add
repz
add
or
add
clc
adc
sbb
and
add
add
sbb
inc
add
add
add
add
sbb
add
add
add
add
sbb
inc
add
add
and
add
add
add
add
add
add
xchg
add
add
cmp
add
or
nop
add
add
xor
nop
add
add
jo
add
or
nop
add
push
mov
or
mov
add
add
add
add
add
add
add
add
pop
push
add
add
or
add
or
nop
add
or
adc
pop
add
or
nop
add
or
add
or
nop
add
or
das
add
or
nop
add
or
xor
add
add
add
or
add
or
nop
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
or
nop
add
or
and
add
add
add
add
xor
nop
add
or
add
add
add
or
adc
or
add
cmp
add
add
add
add
add
or
nop
add
daa
add
add
add
add
or
add
add
cmp
add
add
add
add
cmp
add
add
add
add
cmp
add
add
add
add
add
add
or
xor
add
nop
add
cdq
add
add
add
or
nop
add
or
inc
add
or
nop
add
add
add
inc
add
or
nop
add
or
add
add
or
nop
add
or
add
add
or
nop
add
or
add
add
or
nop
add
or
add
add
or
nop
add
or
and
add
or
nop
add
or
add
add
add
add
add
or
nop
add
or
add
add
add
and
or
call
add
add
add
or
adc
sub
mov
add
add
add
add
or
nop
add
or
pop
add
add
push
pop
add
push
add
or
nop
add
add
add
add
push
pop
add
add
or
nop
add
add
adc
sahf
or
in
add
or
adc
dec
push
cli
push
pop
add
add
or
adc
jae
pop
add
add
add
and
add
pop
add
or
nop
add
add
nop
add
push
pop
add
or
adc
mov
add
pusha
add
or
nop
add
(bad)
pop
add
add
add
cvtps2pd
add
or
nop
add
test
data16
add
add
jbe
pusha
add
or
nop
add
xchg
pop
jno
mov
add
or
nop
add
or
jb
enter
or
nop
add
mov
add
or
nop
add
xor
add
add
or
nop
add
xor
je
mov
add
add
pop
jne
add
add
add
and
xchg
data16
or
nop
add
add
nop
add
add
imul
add
add
add
or
nop
add
or
or
add
add
or
clc
ja
add
add
or
and
or
nop
add
adc
jle
fdivr
add
add
add
adc
jg
dec
jle
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
pop
nop
add
nop
add
adc
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
adc
or
add
add
or
add
add
or
add
add
add
inc
add
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
adc
add
add
add
or
or
nop
add
adc
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
or
nop
add
sbb
add
add
or
nop
add
add
add
add
add
adc
int3
cmps
add
or
nop
add
push
stos
or
add
add
or
add
add
add
add
add
add
add
stos
add
or
nop
add
mov
mov
add
add
add
add
or
nop
add
fisttp
mov
add
add
or
add
add
or
add
add
add
add
add
add
push
dec
mov
add
add
or
add
add
add
add
mov
add
add
add
add
add
or
nop
add
pop
xor
add
add
add
or
add
mov
add
add
or
add
mov
add
add
or
add
add
or
nop
add
pop
cmp
leave
add
add
add
pop
imul
add
pop
jno
retf
mov
add
add
or
add
add
or
nop
add
fimul
rol
nop
mov
add
add
pop
rol
pushf
mov
add
add
or
add
add
or
nop
add
mov
add
or
nop
add
mov
nop
add
pop
ror
add
mov
nop
add
pop
fmul
add
mov
nop
add
adc
add
nop
add
pop
in
fld
sbb
add
or
nop
add
pop
in
or
add
add
or
nop
add
pop
test
add
add
add
and
sbb
mov
adc
push
sbb
add
add
add
add
or
add
or
nop
add
sbb
jmp
add
or
add
add
or
nop
add
pop
or
add
or
nop
add
gs
add
or
nop
add
jb
hlt
add
add
or
nop
add
jns
hlt
add
nop
add
test
add
or
nop
add
fwait
or
add
or
nop
add
movs
les
add
add
or
add
or
nop
add
push
lds
add
add
add
add
add
or
nop
add
add
add
add
or
add
or
nop
add
jecxz
add
or
add
or
nop
add
add
int
add
add
push
add
add
add
push
push
add
rol
add
add
push
pop
add
add
or
nop
add
add
add
pop
or
add
sbb
or
add
add
add
sbb
push
add
add
or
adc
jp
inc
add
add
(bad)
add
or
nop
add
adc
add
or
nop
add
add
add
push
adc
rcr
add
or
nop
add
sbb
fiadd
add
add
add
add
add
or
adc
repz
adc
lods
call
nop
add
add
nop
add
sbb
jmp
nop
add
sbb
in
add
or
nop
add
sbb
adc
xor
add
or
nop
add
sbb
adc
test
add
or
nop
add
sbb
out
add
or
nop
add
sbb
adc
add
add
add
add
add
add
add
add
sbb
add
add
add
sbb
inc
add
add
add
or
(bad)
unpckhps
lods
out
add
or
adc
arpl
out
adc
add
add
or
repz
add
add
or
adc
imul
push
lock
add
xchg
add
add
add
add
add
add
add
sahf
sbb
or
add
add
test
bound
add
lock
or
add
sbb
push
add
add
or
inc
add
add
add
or
adc
mov
add
add
add
sbb
pop
add
icebp
add
or
push
sbb
add
add
icebp
add
add
xchg
add
sbb
sbb
call
add
add
add
icebp
add
or
add
pusha
sbb
prefetchnta
cmp
add
or
push
sbb
add
add
add
add
sbb
inc
add
add
repz
add
xchg
add
sbb
add
add
add
add
xchg
add
sbb
add
add
repz
or
push
sbb
add
add
repz
or
push
add
add
add
add
xchg
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
inc
add
add
add
add
xchg
add
pop
add
add
add
add
add
add
add
or
push
sbb
add
add
add
or
push
sbb
add
add
add
or
adc
dec
add
add
add
or
adc
pop
sbb
adc
add
adc
arpl
aam
sbb
je
add
or
adc
sbb
prefetchnta
lods
cmc
add
or
adc
imul
in
add
add
xchg
add
add
cmc
add
add
xchg
add
in
cmc
add
or
inc
add
add
add
or
inc
add
add
add
add
or
add
inc
add
add
test
or
adc
mov
add
test
add
sbb
sbb
ins
test
sbb
add
add
add
add
sbb
inc
add
add
add
add
add
add
add
add
xchg
add
sbb
add
add
add
add
or
loop
sbb
mov
add
or
push
sbb
add
add
clc
add
add
xchg
add
add
clc
add
add
xchg
add
sbb
clc
clc
add
or
push
sbb
add
add
stc
add
or
inc
add
in
sbb
cwde
stc
add
or
add
jne
retf
add
mov
add
add
movs
cli
add
add
xchg
add
sbb
test
add
or
adc
lock
cld
cli
add
or
adc
and
inc
adc
add
add
add
add
sbb
add
add
add
add
add
inc
push
bound
and
add
add
add
inc
add
add
add
add
add
push
pop
je
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
or
push
retf
add
add
add
or
push
or
push
retf
add
add
add
add
add
xchg
add
push
pop
add
add
add
or
aad
daa
add
cld
add
or
push
or
out
daa
add
std
add
or
push
or
not
daa
add
add
add
or
or
daa
add
add
or
add
std
add
or
push
or
add
inc
add
add
or
add
add
add
or
add
add
or
add
inc
add
add
add
add
add
add
add
xchg
add
pop
pop
add
add
add
add
add
sbb
add
add
add
add
add
inc
push
and
sub
add
add
add
inc
add
add
add
add
add
push
pop
cmp
xor
add
add
add
push
sbb
add
add
add
inc
push
inc
adc
add
add
add
add
xchg
push
xor
add
add
add
add
push
pop
push
adc
add
add
add
push
sbb
add
add
add
add
inc
add
pop
adc
add
add
add
inc
add
add
add
add
add
push
pop
adc
add
add
add
add
sbb
add
add
add
add
inc
add
xchg
adc
add
add
add
inc
add
add
add
add
add
push
pop
mov
ins
add
add
add
add
sbb
add
add
add
add
inc
add
mov
add
add
add
xchg
push
int3
adc
add
add
add
inc
add
pop
aad
jl
add
add
add
push
sbb
add
add
add
inc
push
loopne
add
add
add
add
xchg
push
ins
adc
add
add
push
pop
in
adc
add
add
sbb
add
add
add
inc
push
loopne
mov
add
add
add
inc
add
add
add
add
add
push
pop
sti
adc
add
add
sbb
add
add
add
inc
push
add
add
add
xchg
push
push
adc
add
add
add
add
push
pop
adc
add
add
add
sbb
add
add
inc
add
sbb
add
add
add
add
xchg
push
push
adc
add
add
add
add
push
pop
sub
add
add
add
add
sbb
add
add
add
inc
push
xor
add
add
xchg
push
inc
adc
add
add
add
add
push
pop
dec
adc
add
add
add
add
sbb
add
add
add
inc
push
push
adc
add
add
add
add
xchg
push
ins
adc
add
add
push
pop
pop
adc
add
add
add
add
sbb
add
add
inc
add
pusha
adc
add
add
add
add
xchg
push
outs
adc
add
add
add
add
push
pop
js
les
add
add
add
push
sbb
add
add
add
add
add
inc
push
bound
enter
add
add
inc
add
add
add
add
add
push
pop
je
int3
add
add
add
add
sbb
add
add
add
add
add
inc
push
adc
add
add
add
inc
add
add
add
add
add
push
pop
lea
add
add
sbb
add
add
add
add
add
inc
push
xchg
adc
add
add
add
add
xchg
push
ins
adc
add
add
add
add
push
pop
mov
add
add
add
sbb
add
add
add
add
add
inc
push
stos
adc
add
add
add
add
xchg
push
xor
in
add
add
add
add
push
pop
mov
add
add
add
sbb
add
add
add
add
add
inc
push
(bad)
adc
add
add
add
add
xchg
push
hlt
adc
add
add
add
add
push
pop
rcl
add
add
sbb
inc
add
add
add
add
add
add
add
add
xchg
add
and
cli
add
add
add
add
sbb
add
add
add
add
add
inc
push
(bad)
adc
add
add
add
add
xchg
push
loopne
inc
add
add
add
inc
add
pop
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
and
inc
cmp
add
add
xchg
add
and
inc
cmp
add
or
xchg
dec
and
adc
add
or
xchg
pop
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
or
xchg
add
add
push
add
or
xchg
pop
add
add
add
push
add
or
xchg
sbb
inc
add
add
add
add
xchg
add
add
pop
add
add
xchg
add
and
add
add
add
or
xchg
or
add
add
add
adc
add
or
xchg
or
and
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
add
add
xchg
or
movs
pop
add
or
xchg
or
add
sbb
add
les
add
add
xchg
add
enter
add
xchg
add
add
pop
add
or
xchg
add
and
ins
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
or
add
xchg
sbb
inc
add
add
add
add
add
xchg
add
add
add
add
add
or
add
add
add
add
or
xchg
les
inc
or
xchg
pop
add
add
add
add
add
add
add
add
add
xchg
add
and
push
or
xchg
pop
add
add
add
add
add
add
add
add
add
xchg
add
es
add
add
add
add
add
add
push
add
or
xchg
pop
add
sgdtd
add
xchg
add
pop
add
sbb
add
add
xchg
add
add
and
add
or
xchg
pop
add
add
sub
add
or
xchg
sbb
inc
add
fmul
add
add
xchg
add
add
sgdtd
add
xchg
add
es
add
in
add
or
xchg
pop
add
add
mov
add
or
xchg
lock
add
or
xchg
hlt
es
add
dec
adc
add
add
add
add
add
xchg
add
es
add
mov
add
add
xchg
add
pop
add
mov
add
or
xchg
sbb
inc
add
rcl
add
or
xchg
pop
add
push
add
rcl
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xchg
pop
add
push
or
mov
add
add
add
xchg
add
sub
or
test
add
or
xchg
pop
sub
or
fcom
add
or
xchg
pop
sub
add
add
or
xchg
pop
add
add
add
add
add
xchg
add
pop
add
add
pop
add
add
xchg
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
pop
add
add
xchg
add
add
add
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
pop
add
add
add
add
or
xchg
add
gs
or
and
add
or
xchg
and
gs
or
fcomp
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
xchg
add
sub
adc
dec
sbb
add
add
add
add
add
or
xchg
pop
add
push
adc
pusha
sbb
add
add
add
add
sbb
add
add
add
xor
add
add
xchg
add
sub
adc
cmp
add
add
push
adc
les
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
add
add
sbb
add
add
pop
pop
add
add
pop
sbb
cld
and
add
add
pop
sbb
adc
add
or
add
sbb
add
add
pop
push
add
daa
add
or
add
sub
pop
pop
add
add
add
add
add
or
add
and
jo
add
or
add
and
xor
add
add
add
add
or
xchg
lods
sub
cmp
add
add
sbb
add
inc
add
or
xchg
mov
out
and
pushf
inc
add
or
xchg
mov
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
pop
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
add
dec
add
or
xchg
mov
out
sub
fmul
add
add
sbb
add
dec
add
or
sbb
sub
or
add
add
xchg
add
adc
add
add
add
add
add
or
xchg
pop
add
sbb
add
dec
add
or
xchg
pop
add
sbb
add
add
add
add
add
xchg
add
das
pop
add
add
dec
add
add
xchg
add
das
pop
add
add
dec
add
or
xchg
ds
push
or
add
dec
add
or
sbb
add
pop
xor
in
dec
add
add
xchg
add
pop
add
add
dec
add
add
xchg
add
pop
add
add
add
add
add
add
add
add
add
add
add
pop
sbb
xor
add
add
add
mov
push
and
xor
add
add
add
add
dec
add
or
xchg
jb
push
or
add
dec
add
or
xchg
mov
out
cmp
add
add
or
xchg
mov
out
cmp
or
add
or
xchg
mov
add
add
or
xchg
mov
add
add
or
xchg
shr
add
add
or
xchg
les
in
cmp
xor
add
add
add
add
add
or
sbb
add
sbb
add
dec
add
add
xchg
add
das
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xchg
pusha
xor
add
add
or
xchg
xor
add
add
or
xchg
mov
add
add
or
xchg
shr
add
add
or
xchg
les
in
add
dec
add
or
xchg
push
add
add
or
xchg
ins
xor
push
aas
add
add
add
sbb
loopne
add
or
xchg
pop
add
inc
add
dec
add
or
xchg
pop
add
inc
add
dec
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
mov
pop
popa
sbb
add
add
add
mov
push
imul
add
add
mov
push
loopne
dec
add
dec
add
or
xchg
jmp
dec
add
or
xchg
out
xor
add
add
or
xchg
repnz
dec
add
dec
add
or
xchg
div
dec
add
xor
or
sbb
add
dec
add
or
sbb
add
dec
add
or
sbb
add
dec
add
add
xchg
add
add
dec
add
add
xchg
add
xor
push
add
mov
xor
add
or
sbb
add
add
or
sbb
add
sbb
dec
push
add
add
xchg
add
xor
pop
add
add
add
add
push
add
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
pop
jecxz
pop
add
add
add
add
add
rcr
pop
add
add
add
add
add
add
add
or
xchg
pop
add
add
pusha
push
add
or
les
push
add
add
or
les
jp
fistp
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
xchg
add
add
push
add
or
(bad)
or
xor
data16
push
add
or
(bad)
or
xor
add
cmp
add
add
add
fistp
add
add
add
add
xor
adc
xor
add
add
add
add
add
add
fcom
add
add
add
clc
push
add
or
les
outs
sbb
mov
add
or
add
ins
add
push
add
add
xchg
add
add
push
add
add
xchg
add
add
push
add
or
xchg
fbstp
sub
outs
add
push
add
or
xchg
jecxz
xor
outs
add
push
add
or
(bad)
or
xor
jo
aam
add
or
(bad)
or
xor
add
in
add
or
xchg
out
aas
sbb
in
push
add
or
xchg
jmp
inc
sbb
cld
push
add
or
les
outs
sbb
hlt
pop
add
or
les
jp
fistp
jae
push
add
add
xor
adc
pop
add
or
les
adc
add
add
or
les
push
add
xchg
pop
add
add
aam
add
or
xchg
pop
add
add
call
add
add
in
pop
add
add
xchg
add
add
pop
add
or
les
jp
fistp
jns
sub
add
add
add
xor
adc
mov
add
or
les
outs
sbb
je
add
or
add
jge
lods
pop
add
or
xchg
pop
add
add
and
add
add
xchg
add
xor
sub
add
add
add
sub
add
or
les
imul
bound
add
add
add
fistp
add
bound
add
add
add
xor
adc
add
add
add
in
add
add
or
les
adc
add
add
or
add
test
and
or
xchg
pop
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
push
mov
enter
or
xchg
and
gs
mov
add
add
add
les
mov
add
add
add
les
mov
add
add
add
les
lea
jo
add
or
xchg
or
xor
loopne
add
or
add
xor
sbb
add
add
sbb
add
add
or
les
push
ss
add
add
or
add
cmp
add
outs
add
or
add
xor
xchg
add
add
or
add
xchg
add
jb
add
add
or
add
add
call
add
pushf
add
add
or
xchg
sbb
inc
add
add
xchg
add
add
add
add
xchg
add
ss
add
or
xchg
pop
add
add
or
xchg
or
or
pushf
add
add
or
les
and
xchg
sbb
add
je
add
add
add
add
add
add
add
add
add
add
add
sbb
add
les
and
xchg
sbb
add
add
add
xchg
add
aaa
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
sbb
add
add
or
out
outs
sbb
cmp
add
xchg
add
pop
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
cmp
lods
add
add
or
add
cmp
scas
add
add
or
add
cmp
mov
jo
add
or
add
cmp
mov
mov
add
add
sbb
add
add
or
add
jl
add
add
add
add
jl
add
add
sbb
add
add
or
add
jg
add
add
or
add
jg
add
add
add
add
jg
add
add
or
add
add
or
xchg
pop
add
ret
add
add
xchg
add
pop
add
add
add
add
add
xchg
pop
add
add
add
add
cmp
les
mov
add
or
add
cmp
mov
add
or
xchg
pop
add
sbb
add
add
add
xchg
add
add
xchg
add
add
add
add
add
or
les
shl
pop
xchg
add
add
add
xor
pushf
xchg
add
add
add
xor
int3
xchg
add
add
add
add
add
add
add
add
add
add
xchg
add
cmp
add
add
xchg
add
add
sbb
add
add
add
add
add
test
add
inc
add
add
add
add
add
push
add
pop
add
push
add
or
adc
add
or
push
push
add
add
push
push
add
add
and
add
add
retf
pop
add
add
into
pop
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
sub
add
add
test
add
inc
inc
or
add
add
add
add
dec
or
add
add
add
add
js
add
add
jge
add
add
mov
add
lods
or
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
push
or
add
add
add
or
add
add
or
add
add
add
add
cmp
add
add
cmp
add
add
inc
or
add
add
add
add
pop
or
add
add
call
add
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
cli
add
inc
add
add
add
add
add
push
add
pop
add
push
add
or
adc
add
or
push
push
add
or
push
or
push
or
sbb
add
add
add
add
add
add
add
add
add
add
add
add
es
lock
add
add
add
lods
or
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
push
push
add
add
mov
add
add
add
add
add
add
add
add
cli
add
inc
add
add
add
add
add
push
add
pop
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
or
add
add
add
or
add
add
add
add
nop
sldt
add
cwde
sldt
add
pushf
sldt
add
mov
add
or
add
add
or
add
add
add
adc
add
add
add
add
(bad)
adc
add
add
adc
add
add
add
cli
add
inc
add
add
add
add
add
push
add
pop
add
push
add
or
adc
add
or
push
push
add
or
push
or
ficom
add
add
out
add
add
into
add
add
add
add
add
dec
or
add
add
add
add
call
add
add
add
add
add
add
add
cmp
add
add
cmp
add
add
inc
or
add
add
add
add
add
clc
adc
add
add
add
add
push
add
add
mov
add
or
add
add
or
add
add
or
add
add
or
and
add
add
and
add
add
and
add
add
and
add
add
add
add
adc
add
add
add
add
cli
or
add
add
or
add
add
adc
lock
add
add
or
and
add
add
inc
or
add
add
dec
or
add
dec
or
add
add
add
sub
add
add
pop
push
add
add
pop
push
add
add
and
add
add
lock
add
add
add
sub
add
add
lods
or
add
add
add
add
or
add
add
add
add
add
mov
add
add
(bad)
push
add
add
xchg
push
add
add
cmps
push
add
add
stos
push
add
add
pop
push
add
add
in
or
add
add
or
add
add
add
or
add
add
or
add
add
pop
add
add
cwde
sldt
add
mov
add
add
aas
pop
add
add
inc
pop
add
add
add
add
add
add
dec
or
add
add
add
add
add
or
add
add
add
add
mov
add
add
push
push
add
add
nop
pop
add
add
xchg
pop
add
add
cwde
pop
add
add
add
add
pop
add
add
enter
add
inc
or
add
add
add
cli
add
inc
add
add
add
add
add
add
add
and
add
add
and
add
add
and
add
add
add
add
add
add
cli
add
and
add
add
nop
sldt
add
test
add
inc
add
add
add
add
add
push
add
pop
add
push
add
or
adc
add
add
test
add
inc
add
add
add
add
add
push
add
add
movs
or
add
add
dec
or
add
add
add
add
jmp
add
add
test
sbb
add
add
pop
adc
add
add
adc
add
add
lods
sbb
add
add
or
add
add
or
add
add
or
test
add
inc
add
add
add
les
add
add
fcomp
add
add
pop
push
add
add
dec
or
add
add
add
sbb
add
add
add
add
add
cmp
add
sbb
add
add
sbb
add
add
add
sbb
add
add
sbb
add
add
add
add
repz
neg
mov
add
push
add
add
es
add
add
xor
add
add
pop
push
add
add
jb
add
add
sbb
add
add
add
add
add
es
add
add
xor
add
add
int3
and
add
add
and
add
add
and
add
jmp
push
add
push
add
add
and
add
add
add
and
add
add
and
add
add
and
add
jmp
push
add
add
xor
add
add
stc
and
add
add
and
add
add
add
add
frstor
add
add
add
add
add
pop
add
add
and
add
add
add
and
add
add
and
add
add
add
add
frstor
add
add
add
add
push
add
add
xor
add
add
adc
add
add
and
add
add
and
add
inc
and
add
add
add
add
pop
add
add
or
jp
add
or
mov
add
or
xchg
and
add
add
add
or
sbb
add
add
add
add
add
and
add
add
and
add
add
and
add
inc
and
add
add
add
add
pop
add
add
or
jp
add
or
mov
add
or
xchg
and
add
add
push
add
add
xor
add
add
stos
and
add
add
add
add
and
add
add
add
add
pop
add
add
add
and
add
add
add
add
add
add
and
add
add
add
push
add
add
xor
add
add
stos
and
add
add
add
add
and
add
add
add
add
pop
add
add
and
add
add
add
add
add
add
and
add
add
add
push
add
add
xor
add
add
out
add
add
out
and
add
add
add
add
sbb
add
add
add
and
add
add
and
add
add
push
add
add
xor
add
add
out
add
add
out
and
add
add
add
add
sbb
add
add
add
and
add
add
and
add
add
push
add
add
xor
add
add
stos
and
add
add
add
add
add
sbb
add
add
add
add
add
push
add
add
xor
add
add
mul
add
add
std
and
add
add
add
add
add
add
add
add
pop
add
add
add
and
add
add
and
add
add
add
add
add
add
add
push
add
add
xor
add
add
mul
add
add
sbb
add
add
jb
add
add
sbb
add
add
and
add
add
add
and
add
add
and
add
add
push
add
add
xor
add
add
and
add
add
add
add
sbb
add
add
add
and
add
add
push
add
add
xor
add
add
xor
add
add
aas
and
add
add
add
add
sbb
add
add
and
add
add
add
and
add
add
and
add
add
push
add
add
xor
add
add
pop
push
add
add
jb
add
add
sbb
add
add
add
add
add
es
add
add
xor
add
add
and
add
add
add
add
pop
and
add
jb
add
add
add
add
add
and
add
add
add
add
pop
and
add
add
push
add
add
xor
add
add
push
add
add
jno
add
add
test
add
add
jb
add
add
add
add
add
add
add
jno
add
add
test
add
add
es
add
add
xor
add
add
push
add
add
jno
add
add
test
add
add
cdq
and
add
add
add
add
pop
add
add
add
add
add
add
jno
add
add
test
add
add
cdq
and
add
add
add
push
add
add
xor
add
add
mov
add
add
jb
add
add
sbb
add
add
add
add
push
add
add
xor
add
add
jb
add
add
sbb
add
add
add
add
add
jbe
add
add
pop
and
jle
add
add
push
add
add
pop
daa
add
add
test
add
add
stos
daa
add
add
mov
add
add
mov
add
add
add
add
or
add
add
or
add
add
add
add
add
ret
add
add
add
sub
add
add
sub
add
add
sub
add
add
add
add
add
add
add
add
sbb
add
add
add
add
sub
add
add
add
add
add
add
sub
add
add
sub
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
jp
add
add
jbe
add
add
mov
add
add
add
jbe
add
add
clc
add
add
cli
add
add
clc
add
add
add
add
add
add
inc
das
add
add
jns
add
add
sub
add
add
add
add
add
add
add
add
add
cdq
das
add
add
and
add
add
sub
add
add
das
add
add
inc
xor
add
add
or
add
add
or
add
add
add
add
jo
add
add
xor
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
cdq
das
add
add
cli
xor
add
add
xor
add
add
xor
add
add
xor
add
add
xor
add
add
add
add
fidiv
add
add
out
and
add
add
xor
add
add
and
add
add
xor
add
add
xor
add
add
xor
add
sbb
add
add
jns
add
add
sub
add
add
add
add
data16
add
add
add
add
add
cdq
das
add
add
pop
or
add
add
add
add
pop
or
add
add
or
add
add
add
add
add
add
add
pop
xor
add
add
add
add
cdq
xor
add
add
add
add
dec
or
add
add
add
add
and
add
add
and
add
add
and
add
add
jb
add
add
pop
or
add
add
xor
add
add
xor
add
add
add
add
pop
or
add
add
add
add
add
add
add
add
pop
xor
add
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
add
add
add
pop
xor
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
or
add
add
or
add
add
or
add
add
or
add
add
add
add
pop
or
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
test
add
pop
xor
add
add
add
add
dec
or
add
add
add
add
add
add
add
movs
add
add
dec
or
add
add
add
add
sbb
add
add
inc
aaa
add
add
scas
aaa
add
add
sbb
add
add
(bad)
aaa
add
add
int3
aaa
add
add
cmp
add
add
add
add
add
add
sbb
add
add
mov
add
add
add
push
cmp
add
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
dec
or
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
push
cmp
add
add
add
add
pop
or
add
add
add
add
pop
or
add
add
add
add
add
pop
or
add
add
jae
leave
add
add
add
add
add
add
add
pop
add
add
pop
add
add
pop
add
add
pop
add
add
add
dec
add
add
dec
add
add
push
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
push
retf
add
add
push
mov
adc
fild
mov
push
mov
mov
add
add
push
mov
iret
add
add
pop
aam
and
push
pop
fld
or
and
loope
stc
add
add
add
retf
add
add
add
dec
add
add
hlt
add
add
add
add
add
add
in
pop
add
and
add
add
add
dec
or
jno
pop
or
jns
imul
jnp
retf
add
or
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
in
mov
add
add
sti
add
add
or
add
add
or
add
(bad)
popa
add
adc
or
loope
jecxz
pop
add
add
or
icebp
add
add
add
or
add
add
or
add
add
or
add
add
or
add
add
or
cmp
out
or
add
add
or
add
add
or
add
adc
push
add
and
leave
add
or
add
xor
ss
ds
loope
cmp
imul
add
push
add
pop
add
pop
add
add
mov
ins
add
adc
retf
add
cs
cmp
dec
or
fs
ja
ins
add
daa
push
cmp
imul
or
repnz
stc
or
or
add
add
pop
add
push
pop
add
push
in
cmp
sub
pop
add
jmp
add
ror
push
jns
inc
push
repz
adc
push
push
fild
add
adc
jns
ja
sub
xor
push
or
rol
push
pop
pop
cdq
add
add
pop
cdq
add
add
push
ins
pop
leave
add
pcmpeqw
test
pop
test
pop
mov
pop
loope
loop
dec
add
add
add
adc
adc
fld
sub
bound
add
adc
loope
inc
adc
or
add
add
add
sub
and
pop
add
add
js
das
or
add
add
add
or
add
or
or
retf
or
add
adc
add
or
add
ss
mov
mov
add
add
add
add
add
or
or
add
or
or
add
or
or
add
or
add
add
mov
fadd
inc
add
add
or
push
mov
or
in
adc
or
or
pop
adc
or
add
add
adc
push
mov
add
dec
adc
push
mov
add
push
in
jns
jp
in
jns
mov
add
mov
add
mov
in
mov
push
mov
or
or
fst
adc
adc
push
jns
or
fmul
jns
and
fmul
jns
ja
fmul
mov
or
add
push
add
pop
add
add
add
xor
or
add
add
add
adc
leave
add
adc
or
add
pop
or
add
add
push
dec
or
or
or
ja
ins
add
movs
or
or
add
or
or
add
add
adc
xor
bound
add
inc
adc
push
adc
pop
adc
imul
adc
xchg
mov
retf
adc
pop
add
popa
add
adc
pop
add
adc
or
sahf
or
add
or
add
add
add
aam
fld
push
push
aam
rol
pop
add
or
add
or
add
and
add
add
add
add
pop
jecxz
loope
fst
loope
jmp
add
or
add
or
add
pop
push
or
add
add
add
jl
or
ficom
jl
dec
add
or
add
pop
int3
or
add
pop
or
or
pop
or
sub
clc
pop
or
add
push
add
pop
or
and
clc
pop
or
sbb
pop
or
mov
add
adc
or
sub
sub
loope
sub
cmp
hlt
add
aas
push
push
or
jecxz
jns
cmc
sbb
push
add
sbb
inc
add
sbb
cmp
sbb
cmp
pop
sbb
cmp
sbb
or
jno
out
jns
jle
xor
jbe
imul
add
sbb
sbb
cmp
stc
or
push
jns
neg
out
push
cdq
add
add
sbb
push
cdq
add
sbb
push
cdq
add
in
cdq
add
in
jns
aas
push
out
jns
jne
hlt
push
jns
clc
pop
test
hlt
or
add
add
retf
add
push
add
add
sbb
(bad)
add
add
or
add
push
sysenter
add
ins
add
and
cmp
into
sbb
xchg
add
sbb
xchg
add
add
add
(bad)
add
add
add
add
add
add
add
add
add
add
sbb
cmovl
pusha
sbb
andps
pusha
sbb
subps
pusha
sbb
punpcklwd
mov
add
add
pop
dec
add
adc
pop
add
add
sbb
adc
add
add
mov
pop
add
add
jl
pusha
sbb
je
jl
sete
pusha
sbb
setl
aad
sti
adc
movs
add
sbb
pop
add
add
pop
add
add
mov
add
adc
adc
adc
add
adc
add
stc
sbb
enter
jno
call
or
pop
test
jno
mov
mov
jns
repz
adc
add
add
add
add
add
add
and
adc
sbb
and
jecxz
cdq
add
add
bswap
add
add
ret
and
mov
add
adc
popa
adc
addr16
ins
adc
bound
add
and
pop
and
ja
ins
add
retf
add
add
add
add
push
stc
add
sub
leave
add
sbb
mov
sbb
hlt
or
push
sub
pop
add
add
pop
add
add
mov
add
pop
add
add
pop
add
add
xor
add
and
popa
add
add
and
dec
add
add
or
popa
add
dec
or
outs
sub
add
out
popa
add
add
add
add
pop
dec
add
mov
out
popa
add
dec
add
lds
out
mov
and
add
sub
or
into
sbb
popa
add
and
leave
add
add
sub
icebp
add
sub
pop
add
cmp
push
add
sub
push
cmp
daa
sub
pop
mov
cdq
or
popa
add
sub
add
mov
pop
add
pop
or
add
add
add
cmp
add
into
sbb
xor
add
outs
sub
add
into
sbb
sub
jnp
nop
sbb
add
sbb
loop
sub
and
add
out
adc
into
sbb
adc
jnp
nop
sbb
add
sbb
loop
adc
and
add
out
loope
test
sbb
nop
sub
push
loope
mov
add
xor
in
pop
add
add
add
push
pmulhuw
fldcw
add
add
sbb
sbb
add
sbb
movups
inc
add
popa
add
sub
sbb
add
in
add
out
mov
pop
cmp
and
add
sub
add
js
retf
add
pop
sub
pop
add
push
push
add
fld
cmp
imul
sub
push
sub
popa
and
add
or
sbb
fist
sbb
add
or
popa
add
add
pop
add
add
add
test
add
leave
add
fistp
test
add
sbb
sbb
push
mov
ins
xor
sbb
sbb
sbb
add
push
sub
or
or
mov
adc
sbb
add
gs
add
(bad)
sbb
add
add
out
push
add
push
sbb
sbb
push
add
pop
add
add
add
mov
add
test
add
mov
add
mov
or
add
and
sbb
add
jns
rol
xor
add
xor
add
add
mov
sbb
add
sbb
add
mov
sbb
add
mov
sbb
add
fld
loope
pop
add
add
add
fld
mov
sbb
add
retf
sbb
add
rcr
adc
add
xor
(bad)
xor
sub
addr16
or
inc
ss
mov
mov
add
data16
push
ja
ins
sbb
add
pop
jae
popa
add
adc
loope
(bad)
ss
add
add
pop
add
add
push
clc
ss
and
add
fadd
rol
pop
mov
add
aaa
xchg
sbb
push
push
aaa
cmps
sbb
push
jno
in
rol
sub
bound
add
cmp
jno
push
cmp
add
push
push
pop
add
add
sub
push
inc
cmp
add
dec
cmp
add
pop
cmp
add
cmp
jns
xchg
retf
add
cmp
add
mov
out
mov
sbb
sub
pop
add
cmp
add
out
pop
add
cmp
add
add
pop
add
add
add
add
cmp
add
retf
add
add
add
add
xor
add
add
wbinvd
jns
sub
add
sbb
popa
add
cmp
add
add
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
add
push
pop
add
loope
pop
add
push
jmp
add
push
pop
add
add
push
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
add
pop
pop
add
jecxz
inc
pop
pop
add
add
pop
add
add
pop
add
push
pop
pop
pop
add
imul
jno
pop
add
add
pop
add
add
add
adc
add
fwait
adc
add
adc
add
movs
adc
add
adc
add
scas
adc
add
adc
add
mov
add
add
adc
add
mov
add
rol
adc
add
add
adc
add
add
add
adc
add
add
adc
add
add
add
add
add
add
adc
add
fwait
adc
add
add
adc
add
repz
add
add
nop
add
adc
add
add
adc
xor
sub
add
add
repz
add
add
add
add
add
add
add
add
add
fwait
adc
sbb
test
adc
adc
sbb
repz
xchg
adc
adc
sbb
test
adc
adc
adc
adc
sbb
cdq
sbb
pop
push
jmp
sbb
fld
add
jae
cdq
sbb
out
and
mov
xchg
adc
add
add
test
adc
adc
adc
adc
adc
adc
adc
adc
push
and
jae
cdq
sbb
fld
inc
add
adc
adc
adc
adc
adc
adc
adc
adc
push
or
adc
push
or
sbb
cdq
sbb
xchg
adc
mov
pop
jmp
jno
dec
pop
adc
push
dec
pop
sbb
cdq
sbb
mov
adc
adc
lds
mov
adc
push
mov
push
ret
or
adc
push
jecxz
repz
push
mov
pop
jecxz
or
pusha
pop
add
or
pusha
pop
and
or
pusha
pop
arpl
or
pusha
pop
or
adc
ret
mov
ja
jecxz
and
sub
ret
adc
adc
adc
arpl
or
pusha
pop
pusha
pop
jae
cdq
sbb
xchg
adc
adc
pop
adc
adc
pop
adc
adc
sbb
sbb
cdq
sbb
xchg
adc
adc
sbb
cdq
sbb
xchg
adc
sbb
cdq
sbb
xchg
adc
sbb
sbb
sbb
cdq
sbb
xchg
adc
adc
sbb
xchg
adc
ret
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
pusha
dec
sub
mov
add
xor
shl
and
add
add
daa
add
adc
adc
sbb
add
add
add
add
add
add
loope
add
add
add
add
add
add
add
int
add
add
mov
into
sbb
add
and
add
add
add
sbb
add
add
add
sbb
add
adc
add
push
add
add
add
add
add
je
add
pop
add
add
add
pop
add
add
add
pop
add
add
add
add
jl
add
xchg
add
je
add
mov
inc
add
mov
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadd
sub
inc
push
dec
push
add
push
pop
inc
pop
call
or
or
or
or
or
or
sub
cmp
pop
or
or
or
mov
leave
or
or
adc
inc
or
or
or
or
or
or
movs
or
test
xchg
push
mov
leave
push
cmp
pop
(bad)
jp
psubw
pop
adc
adc
adc
adc
adc
adc
int
fst
in
add
and
pop
adc
std
adc
adc
adc
push
adc
jnp
nop
adc
adc
adc
dec
adc
mov
push
adc
ins
push
mov
dec
pop
ins
pop
call
pop
adc
push
sbb
cmp
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
addr16
popa
add
add
add
jge
add
add
push
sub
add
add
sub
hlt
sub
hlt
sub
push
sub
add
add
add
add
add
add
add
add
add
adc
inc
add
add
sbb
dec
add
add
add
and
add
sub
ins
add
add
das
add
xor
js
cmp
jns
cmp
jge
cmp
add
rol
push
adc
add
or
adc
add
sbb
add
xchg
sbb
adc
add
sbb
adc
add
add
adc
add
or
adc
add
sbb
add
xchg
sbb
adc
add
sbb
adc
add
add
call
add
pop
mov
and
adc
add
and
adc
add
and
adc
add
and
adc
add
and
adc
add
jecxz
add
sub
std
adc
add
jge
add
jae
adc
les
and
adc
jmp
add
(bad)
and
or
add
daa
pop
push
add
sub
out
adc
out
adc
jmp
add
xchg
sub
adc
in
add
cmps
sub
push
add
mov
in
add
in
out
adc
cli
sbb
add
das
out
adc
pop
sbb
add
add
(bad)
das
out
adc
out
adc
out
adc
out
adc
out
adc
pop
sbb
add
xor
push
add
sub
out
adc
out
adc
out
adc
call
adc
in
add
push
xor
push
add
retf
push
add
scas
xor
sbb
add
xor
push
add
fnstenv
mov
test
add
enter
jle
std
adc
add
(bad)
cmp
adc
add
add
mov
add
add
mov
add
add
or
rol
add
add
mov
add
add
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
or
adc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
ins
add
add
add
sub
add
add
add
xor
add
je
xor
add
test
xor
add
add
add
add
add
add
add
add
add
add
add
ret
add
add
add
add
fld
dec
add
add
add
add
in
dec
add
add
add
add
out
add
add
lock
add
icebp
add
add
repnz
add
repz
add
cmc
add
add
hlt
add
add
std
add
add
inc
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
lar
add
adc
outs
add
add
add
add
sub
jno
add
xor
jae
add
xor
jae
add
xor
jne
add
xor
add
add
add
aaa
add
add
pop
add
add
jae
jnp
add
je
jge
add
jne
jg
add
jbe
add
add
add
add
add
mov
add
add
add
adc
int3
add
adc
in
test
ja
inc
add
add
inc
add
add
inc
add
add
dec
add
add
push
add
add
push
add
add
push
add
add
push
add
add
pop
add
add
push
add
cmp
jns
jo
ret
add
jb
lahf
add
je
stos
add
jbe
lods
add
js
fild
jnp
add
jnp
test
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
or
push
inc
shrd
push
pop
adc
push
and
jp
inc
cmovp
mov
bswap
cmovne
imul
adc
adc
adc
adc
adc
pushf
sbb
sbb
sbb
sbb
add
add
add
add
push
or
add
pop
add
add
xchg
push
add
inc
add
ss
add
add
add
pop
mov
add
add
retf
add
add
add
add
add
add
add
pop
add
and
xchg
or
add
push
add
sbb
add
add
inc
or
les
adc
add
add
inc
or
mov
inc
or
mov
enter
or
leave
add
inc
or
retf
inc
or
retf
add
inc
or
int3
add
or
int
and
add
add
add
add
add
inc
or
push
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
nop
rol
add
add
add
add
add
add
add
add
add
add
add
or
adc
lldt
add
add
adc
adc
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
bound
popa
add
popa
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
add
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
add
add
sbb
add
out
add
out
add
out
add
out
add
out
add
out
add
push
out
add
push
out
add
push
out
add
adc
jne
push
add
adc
add
adc
add
adc
add
adc
add
adc
add
push
add
push
add
push
add
int
mov
int
leave
sbb
jb
push
add
outs
ins
gs
outs
add
jae
gs
add
arpl
ins
imul
imul
popa
je
bound
imul
bound
add
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
je
jb
push
outs
imul
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
je
xor
inc
jae
gs
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
gs
cs
gs
arpl
outs
add
jb
outs
add
jne
jb
ins
push
gs
jne
arpl
dec
popa
outs
addr16
addr16
je
jb
bound
add
jae
gs
cs
gs
jne
arpl
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
jae
gs
cs
imul
imul
jne
imul
jae
jb
push
cs
add
gs
xor
inc
push
xor
arpl
inc
pop
inc
dec
dec
push
arpl
bound
and
inc
jo
ins
imul
inc
popa
jae
add
arpl
jae
data16
push
imul
jae
arpl
inc
jo
ins
imul
push
gs
imul
arpl
jae
data16
push
imul
jae
arpl
and
add
add
ins
jo
je
jb
dec
imul
je
push
imul
jae
arpl
inc
gs
arpl
add
ins
add
ja
and
and
and
and
and
and
and
and
and
inc
outs
jb
add
jae
gs
cs
imul
inc
outs
jb
jae
and
and
add
ins
je
arpl
je
gs
gs
je
add
push
arpl
and
add
add
push
jne
add
ins
bound
push
popa
ins
jne
push
jns
add
ja
add
dec
bound
and
add
pop
bound
and
bound
and
arpl
and
and
add
arpl
and
add
jo
add
jae
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
arpl
and
add
inc
arpl
and
and
add
inc
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
dec
arpl
and
add
pop
arpl
and
add
cmp
and
add
data16
add
je
imul
push
add
add
ins
add
outs
add
outs
add
je
add
ja
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
push
add
ins
add
js
add
data16
dec
add
xor
and
add
inc
data16
dec
add
imul
and
add
ins
outs
jb
push
je
gs
ins
add
jae
gs
cs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
push
add
push
add
push
add
pop
add
bound
and
add
ins
push
add
popa
imul
and
add
push
push
add
outs
imul
je
jb
jae
and
add
inc
imul
and
and
add
dec
imul
and
add
popa
jb
push
je
arpl
jb
ins
add
popa
jb
inc
jae
gs
bound
push
ins
popa
jb
inc
js
gs
imul
add
bound
and
add
push
add
imul
popa
bound
add
inc
push
inc
outs
outs
je
outs
ins
add
dec
push
and
add
push
push
and
add
aaa
push
push
jo
outs
popa
fs
gs
jb
dec
outs
imul
arpl
push
outs
popa
jo
je
jo
ins
imul
je
arpl
add
jae
gs
cs
bound
push
gs
imul
outs
je
arpl
jae
push
jns
je
ins
cs
bound
push
gs
imul
jo
jb
imul
imul
add
push
imul
aaa
imul
imul
ins
ins
add
outs
ins
add
pop
ins
add
pop
ins
add
je
add
ja
add
jns
add
ja
jb
fs
jns
je
jb
bound
add
popa
jb
inc
jae
gs
bound
inc
je
jb
bound
gs
arpl
outs
jb
inc
jae
gs
bound
addr16
inc
jne
ins
dec
popa
ins
add
fs
imul
js
arpl
imul
ins
bound
addr16
dec
outs
arpl
imul
jne
imul
je
outs
outs
add
jae
gs
cs
arpl
imul
inc
jae
push
ja
jne
ins
inc
inc
jo
inc
add
jb
ins
cmp
push
push
ins
push
xor
dec
outs
jns
and
add
push
data16
je
add
arpl
je
outs
outs
add
jns
add
jo
add
pop
imul
and
imul
and
imul
and
imul
and
add
push
add
push
fs
gs
dec
popa
outs
popa
gs
jae
gs
cs
arpl
imul
je
addr16
jo
jns
push
push
inc
inc
jb
jo
outs
push
gs
imul
imul
jo
outs
push
je
gs
ins
add
popa
jb
jae
imul
ins
gs
imul
imul
ins
pop
ins
ins
push
je
imul
ins
gs
imul
imul
gs
je
dec
gs
inc
outs
gs
je
dec
push
add
je
dec
gs
inc
jne
data16
inc
ins
outs
arpl
outs
jo
add
jb
jns
addr16
dec
push
add
arpl
jo
add
jb
popa
ins
add
imul
inc
outs
outs
jbe
jb
add
jns
add
imul
je
inc
outs
arpl
jo
outs
jb
dec
inc
jb
jo
outs
push
jb
outs
jae
outs
jb
add
jns
je
push
je
gs
ins
dec
outs
fs
jne
push
ins
inc
ins
outs
arpl
push
outs
inc
jb
popa
jns
addr16
dec
gs
popa
add
outs
arpl
add
gs
jb
inc
ins
outs
jae
add
jns
je
addr16
jo
imul
je
outs
outs
add
outs
add
outs
outs
add
jae
gs
cs
jb
ja
outs
add
inc
outs
add
xor
push
dec
outs
je
xor
and
and
and
add
gs
add
jae
gs
cs
push
imul
gs
push
jb
push
arpl
je
add
arpl
jae
data16
push
imul
jae
arpl
inc
outs
ins
jo
ins
gs
gs
imul
je
jb
push
arpl
jb
jb
inc
ins
gs
jb
jb
push
arpl
jb
jb
inc
inc
add
ins
ins
arpl
outs
outs
jbe
jb
imul
add
outs
arpl
jae
inc
gs
jne
jb
outs
je
jb
arpl
jae
dec
imul
jb
arpl
jae
jns
add
xor
add
jb
outs
addr16
popa
ins
gs
imul
gs
gs
imul
outs
outs
inc
js
ins
jae
outs
jb
imul
ins
ins
add
xor
and
and
add
push
data16
je
add
outs
add
addr16
push
ins
add
jne
add
inc
add
imul
outs
jo
add
jbe
ins
imul
imul
jo
imul
add
xor
and
add
push
ins
add
jne
add
dec
outs
add
popa
push
outs
jo
inc
jno
popa
ins
imul
and
outs
add
push
add
pop
outs
add
dec
add
dec
add
xor
inc
jo
inc
outs
ins
popa
imul
inc
jne
jb
outs
je
outs
ins
popa
imul
outs
fs
gs
js
gs
imul
je
popa
outs
fs
gs
dec
outs
je
je
add
fs
push
outs
push
gs
js
gs
imul
gs
fs
js
gs
imul
je
popa
outs
fs
gs
inc
jo
ins
imul
add
fs
push
push
inc
js
gs
imul
add
je
inc
js
arpl
popa
bound
popa
je
add
outs
ins
dec
popa
outs
fs
add
dec
outs
add
je
jb
arpl
outs
add
jbe
jb
outs
add
gs
je
jb
add
outs
imul
outs
ins
jo
jb
dec
bound
arpl
jne
ins
add
ins
add
gs
add
jbe
add
gs
je
push
jb
push
arpl
jb
jb
and
outs
add
dec
outs
add
dec
imul
gs
jns
je
ins
dec
gs
imul
jb
xor
fs
ins
add
push
outs
add
inc
add
xor
add
xor
add
dec
imul
inc
imul
jb
jo
imul
add
outs
je
and
add
jp
add
popa
jae
jb
push
je
imul
gs
add
imul
je
dec
imul
jo
and
add
imul
ja
add
js
add
jns
add
jp
add
inc
imul
js
jb
arpl
outs
outs
inc
js
jae
gs
ins
xor
add
jo
add
je
add
inc
data16
inc
data16
inc
data16
inc
data16
dec
ins
add
arpl
push
gs
ins
jbe
inc
jbe
outs
je
jb
jae
and
arpl
inc
imul
ins
add
popa
jb
inc
imul
jb
pusha
xor
push
jns
je
ins
cs
outs
ins
ins
arpl
outs
jae
inc
outs
gs
arpl
addr16
dec
popa
ins
add
arpl
imul
je
ins
cs
gs
add
je
push
push
inc
cmp
inc
gs
jns
gs
push
outs
inc
popa
jae
ss
je
imul
imul
add
je
dec
outs
addr16
add
je
inc
push
dec
outs
fs
data16
bound
jb
outs
add
outs
imul
gs
inc
outs
outs
je
imul
addr16
dec
je
ins
add
je
popa
outs
imul
jae
jne
arpl
je
gs
ins
add
je
xor
push
gs
add
add
je
add
je
gs
jo
popa
je
add
jb
popa
je
inc
imul
jns
inc
jb
popa
je
inc
imul
jns
inc
imul
jns
outs
outs
add
imul
outs
push
jb
je
add
fs
imul
dec
je
ins
add
imul
outs
popa
fs
js
gs
imul
dec
ins
popa
addr16
outs
jb
popa
je
js
gs
imul
add
jp
add
outs
add
jbe
add
gs
and
add
jp
add
aaa
imul
and
add
push
outs
add
arpl
and
add
push
outs
add
inc
add
dec
outs
add
imul
je
addr16
dec
popa
jae
js
je
add
gs
je
dec
bound
arpl
jne
je
ins
gs
gs
jo
jb
add
je
bound
arpl
ins
jne
add
push
ins
add
add
pop
outs
add
pop
outs
add
outs
je
xor
inc
outs
jne
ins
add
ins
outs
add
jb
add
xor
ins
add
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
jb
push
jns
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jp
dec
data16
dec
outs
je
xor
inc
imul
je
jb
push
push
push
je
jb
add
je
dec
jae
popa
arpl
jb
jne
add
dec
jne
ins
dec
jb
ins
jo
jns
pop
gs
add
popa
jb
add
outs
je
add
inc
jb
and
and
gs
inc
gs
jne
je
push
je
ins
jae
inc
outs
jo
inc
jb
popa
jns
and
add
je
jb
arpl
jae
jae
jns
popa
ins
add
inc
outs
add
xor
and
push
jb
arpl
fs
jae
add
jb
gs
xor
cs
ins
add
pop
outs
add
jne
add
inc
jb
inc
imul
bound
gs
push
jb
arpl
jae
je
jb
dec
outs
outs
add
ins
jo
jb
push
je
imul
pop
push
imul
jns
add
outs
arpl
jae
imul
jns
add
je
inc
jb
popa
je
dec
outs
push
imul
gs
je
jb
bound
gs
and
add
push
add
gs
inc
imul
gs
xor
add
inc
outs
add
bound
and
add
inc
outs
add
je
add
outs
add
js
and
add
outs
add
dec
outs
add
jns
add
jbe
add
bound
outs
js
add
jae
gs
cs
gs
and
add
outs
outs
add
inc
imul
inc
imul
gs
arpl
push
arpl
imul
ins
add
popa
outs
add
cmp
push
je
arpl
jb
arpl
push
je
arpl
jb
ins
add
imul
imul
gs
push
je
arpl
jb
arpl
addr16
inc
jb
ins
gs
outs
jne
je
inc
gs
jb
ins
add
je
gs
outs
add
je
outs
fs
popa
jae
add
ins
bound
dec
outs
outs
add
je
dec
gs
fs
je
push
outs
imul
inc
gs
dec
dec
data16
je
addr16
inc
popa
je
add
imul
jb
add
jae
gs
cs
outs
ins
ins
arpl
outs
jae
inc
outs
outs
je
imul
dec
popa
jae
add
imul
imul
pusha
xor
and
add
outs
add
inc
add
arpl
cmp
cmp
imul
jae
addr16
inc
push
inc
dec
dec
add
outs
ins
inc
popa
jae
ss
je
imul
pop
dec
outs
fs
jo
gs
outs
fs
gs
je
inc
arpl
jo
outs
jb
inc
gs
je
imul
add
je
dec
imul
data16
jae
add
gs
jae
je
inc
outs
popa
bound
add
dec
ins
add
je
inc
ins
popa
je
je
ins
add
popa
je
je
ins
add
outs
ins
add
outs
je
je
ins
add
popa
jo
imul
add
je
inc
outs
outs
je
push
outs
imul
pop
dec
outs
arpl
imul
pop
push
imul
pop
push
gs
add
je
inc
outs
arpl
jb
inc
outs
arpl
jb
je
ins
gs
inc
jne
je
outs
inc
popa
jae
add
je
push
imul
pop
push
popa
bound
fs
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
ins
imul
inc
outs
jne
fs
inc
push
outs
js
popa
fs
inc
push
fs
push
add
je
inc
outs
outs
je
outs
ins
jae
inc
outs
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
fs
popa
outs
add
je
dec
gs
jae
je
push
imul
inc
jb
outs
addr16
outs
inc
jb
outs
je
jae
je
push
push
push
popa
jae
bound
add
jae
outs
fs
popa
jns
jne
add
je
dec
imul
inc
outs
js
jae
je
dec
popa
js
ins
imul
jae
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
push
gs
add
je
push
outs
jo
outs
jae
add
jae
ins
gs
popa
jns
jne
add
je
push
imul
pop
inc
outs
jb
inc
outs
jb
gs
je
ins
add
jb
inc
outs
jb
gs
je
ins
add
je
inc
outs
outs
je
outs
ins
inc
outs
js
jae
je
inc
jne
outs
push
arpl
gs
popa
jae
push
imul
pop
inc
ins
imul
add
je
inc
outs
arpl
inc
outs
arpl
je
ins
add
jno
add
je
popa
ins
ins
imul
ins
bound
inc
outs
jb
popa
je
js
gs
imul
pop
push
outs
jae
je
outs
outs
add
imul
inc
jb
popa
jns
push
jne
je
ins
gs
imul
fs
add
outs
jae
outs
jb
inc
imul
arpl
dec
inc
imul
ins
add
jo
jae
add
imul
and
add
xor
and
add
cmp
and
add
cmp
and
add
xor
add
xor
and
add
popa
fs
jns
add
jb
add
dec
add
dec
add
je
popa
ins
add
jae
ins
bound
popa
ins
add
je
jne
ins
imul
push
outs
add
inc
ins
add
dec
ins
add
popa
jo
and
and
inc
gs
gs
imul
gs
gs
xor
cs
ins
ins
add
dec
ins
add
cmp
and
add
data16
add
pop
push
and
add
push
outs
add
gs
je
inc
jb
jo
imul
pop
inc
outs
outs
je
and
and
add
addr16
and
add
inc
outs
add
imul
jns
dec
imul
je
push
imul
imul
outs
arpl
dec
popa
arpl
outs
add
outs
push
jne
dec
gs
inc
gs
popa
ins
jne
add
ss
add
outs
add
js
add
cmp
and
add
jae
add
inc
add
xor
and
add
cmp
inc
popa
je
push
imul
pop
dec
outs
ja
addr16
pop
gs
jb
addr16
dec
outs
outs
je
add
je
inc
popa
jns
addr16
dec
outs
jne
add
je
dec
imul
gs
push
arpl
add
imul
gs
imul
push
outs
jae
je
outs
outs
add
jne
push
add
inc
outs
add
je
jns
add
je
dec
outs
outs
gs
js
gs
imul
push
jne
ins
imul
ins
add
jae
gs
cs
ins
ins
add
popa
jo
js
gs
imul
jbe
jb
popa
jne
je
outs
fs
cmp
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
fs
jo
add
ins
jo
jb
dec
bound
arpl
jne
ins
add
je
bound
arpl
pop
outs
add
push
add
push
add
ja
add
addr16
outs
je
jne
dec
push
popa
outs
addr16
js
gs
imul
add
inc
ins
add
je
arpl
push
outs
dec
outs
outs
je
push
arpl
ins
add
ins
gs
jae
dec
arpl
and
add
inc
ins
add
arpl
and
add
inc
ins
add
dec
outs
add
cmp
and
arpl
and
arpl
and
add
jbe
inc
imul
outs
add
jb
add
jae
add
dec
jb
push
je
gs
ins
push
jb
je
jb
jae
je
inc
jne
outs
inc
ins
jne
push
imul
je
addr16
dec
gs
imul
je
jb
je
jb
push
push
inc
jo
push
imul
add
dec
outs
add
imul
jno
add
jbe
imul
xor
and
and
add
push
ins
add
jbe
add
dec
imul
gs
jns
je
ins
dec
outs
outs
add
push
outs
add
inc
imul
inc
imul
inc
imul
jb
ja
gs
add
gs
xor
and
add
inc
jb
jo
outs
push
gs
imul
imul
add
inc
ins
add
xor
and
add
outs
add
xor
and
and
add
jns
add
imul
je
jo
bound
imul
je
arpl
add
je
push
jb
js
add
inc
outs
add
jno
add
jb
add
outs
add
jne
add
push
ins
add
cmp
push
dec
outs
je
xor
push
dec
outs
je
add
jns
add
outs
je
je
add
je
imul
outs
je
xor
push
outs
push
dec
outs
je
xor
and
add
dec
jb
and
add
cmp
and
add
outs
add
je
gs
jo
imul
inc
outs
ins
bound
add
gs
fs
bound
je
js
gs
imul
add
xor
and
add
push
outs
add
inc
ins
add
pop
ins
add
jo
imul
inc
js
gs
imul
add
dec
outs
add
aaa
ins
add
xor
and
add
inc
outs
add
jp
add
jp
add
dec
add
outs
outs
add
dec
data16
dec
outs
add
aaa
outs
add
jns
add
dec
outs
add
inc
outs
add
push
add
fs
imul
add
jae
add
xor
push
jb
arpl
jae
outs
fs
add
outs
jne
gs
je
jb
addr16
dec
outs
fs
gs
push
jb
arpl
jae
outs
fs
gs
outs
ins
ins
arpl
outs
add
popa
fs
outs
ins
jns
outs
ins
ins
arpl
outs
inc
popa
jae
add
je
outs
jne
gs
je
jb
addr16
inc
jne
jb
outs
je
addr16
dec
outs
fs
gs
popa
ins
add
outs
ja
jb
addr16
inc
popa
jae
inc
fs
jae
add
jbe
dec
gs
add
pop
ins
add
je
push
outs
jb
imul
xor
dec
gs
popa
addr16
outs
js
push
push
imul
jae
ins
je
and
add
push
ins
add
je
popa
jo
and
add
push
outs
add
xor
pop
ins
ins
push
jb
je
jb
push
jb
je
inc
je
jb
bound
gs
je
imul
ins
add
inc
outs
add
dec
jb
addr16
push
je
jb
dec
outs
outs
add
je
inc
imul
jae
je
push
jae
push
push
js
arpl
add
je
push
gs
popa
outs
fs
jb
dec
jne
jo
je
jae
je
push
gs
popa
outs
fs
jb
dec
outs
jo
je
jae
je
push
gs
popa
outs
fs
jb
inc
jb
outs
jb
addr16
push
je
outs
fs
jb
dec
outs
jo
je
inc
outs
outs
jbe
jb
imul
ja
popa
je
inc
imul
dec
popa
je
inc
gs
dec
popa
je
push
gs
dec
popa
je
inc
popa
ins
ins
add
bound
push
outs
push
jo
gs
dec
imul
gs
inc
outs
jne
je
and
add
push
add
dec
ins
add
je
jae
gs
bound
jae
and
add
outs
outs
add
ins
outs
add
jae
ins
jbe
inc
jbe
outs
je
popa
outs
fs
gs
popa
fs
inc
jae
gs
bound
gs
ins
jbe
add
outs
inc
inc
inc
imul
fs
dec
dec
jo
outs
add
jbe
push
pop
inc
pop
pop
outs
inc
outs
ss
jns
pop
add
add
data16
add
gs
and
and
and
and
and
and
xor
dec
ja
gs
imul
add
dec
jns
jbe
gs
ja
dec
push
dec
imul
push
gs
imul
add
jne
ins
jae
and
inc
gs
popa
jae
inc
outs
fs
jno
and
and
and
and
arpl
popa
je
jb
inc
jb
popa
je
dec
outs
jae
popa
outs
arpl
and
jo
pop
pop
push
inc
jns
inc
push
dec
inc
jno
dec
xor
add
jns
imul
dec
jae
jne
aaa
xor
and
inc
gs
outs
jae
popa
outs
arpl
inc
dec
dec
jno
xor
inc
jne
push
inc
ins
push
push
push
add
xor
dec
jb
pop
cmp
inc
aaa
pop
outs
ja
add
push
dec
pop
je
dec
inc
push
dec
cmp
jae
inc
je
inc
dec
xor
bound
inc
dec
dec
push
imul
dec
push
addr16
push
dec
xor
je
dec
jb
inc
bound
push
xor
inc
jae
inc
push
popa
jbe
je
add
cmp
cmp
jno
pop
addr16
push
push
inc
xor
add
cmp
js
inc
push
imul
pop
dec
xor
pop
outs
dec
push
fs
xor
data16
inc
cmp
push
pop
add
push
js
inc
push
js
popa
dec
xor
push
jno
cmp
and
outs
outs
je
js
push
popa
ins
jne
pusha
xor
dec
imul
je
push
imul
jae
arpl
dec
jns
gs
imul
je
jb
popa
ins
add
je
push
popa
ins
jne
add
je
push
popa
ins
jne
add
dec
push
push
je
dec
dec
ja
arpl
xor
ja
push
jo
jne
ss
je
push
inc
dec
push
ss
and
dec
inc
outs
outs
je
imul
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
add
dec
add
dec
add
push
add
outs
je
imul
je
outs
ins
add
je
inc
jne
outs
push
arpl
gs
imul
outs
jae
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
je
push
arpl
gs
outs
fs
je
dec
popa
ins
add
dec
push
dec
popa
addr16
popa
push
push
dec
dec
push
cmp
jne
jne
push
je
gs
push
xor
and
and
inc
gs
gs
gs
je
inc
outs
jb
jne
arpl
outs
push
outs
imul
gs
gs
je
add
push
add
pop
add
addr16
bound
arpl
popa
jb
gs
gs
outs
add
imul
add
jae
outs
arpl
jae
ins
je
dec
imul
je
inc
jae
outs
arpl
ins
ins
bound
imul
gs
gs
je
inc
popa
ins
ins
bound
imul
gs
gs
je
inc
jae
outs
arpl
popa
je
add
fs
outs
jbe
imul
gs
gs
je
inc
jae
outs
arpl
jae
ins
je
and
add
push
arpl
and
add
push
arpl
and
add
je
inc
jne
jb
outs
je
push
add
push
arpl
ins
jne
pop
arpl
jb
pop
ja
inc
arpl
push
jae
dec
push
fs
outs
push
push
fs
pop
jo
xor
ins
jne
pop
pop
add
cmp
and
add
popa
bound
and
add
arpl
and
and
add
bound
and
add
imul
and
add
ins
bound
and
add
outs
bound
and
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
bound
and
add
inc
bound
and
and
add
inc
bound
and
add
dec
bound
and
add
dec
bound
and
add
ins
outs
arpl
ins
outs
bound
add
jb
outs
push
je
jne
je
jb
add
gs
inc
ins
outs
bound
add
gs
pop
push
inc
dec
xor
outs
inc
inc
dec
push
ins
push
add
jae
imul
outs
push
ins
ins
push
imul
je
push
push
add
gs
je
push
jb
arpl
jae
outs
outs
add
imul
add
imul
jae
dec
outs
popa
fs
ins
ins
add
ins
outs
popa
fs
ins
ins
add
jne
push
je
imul
dec
outs
outs
add
dec
bound
and
add
dec
bound
and
add
push
bound
and
add
push
bound
and
and
add
push
bound
and
add
pop
bound
and
bound
and
bound
and
bound
and
add
bound
and
bound
and
bound
and
bound
and
add
arpl
and
add
push
arpl
and
add
ins
arpl
and
add
outs
arpl
and
add
jno
add
jb
add
je
add
jne
add
fs
jae
add
imul
gs
jb
je
arpl
jo
ins
dec
ins
fs
jb
je
arpl
push
jb
arpl
jae
fs
fs
jae
add
imul
ins
imul
dec
popa
ins
add
ins
ins
popa
outs
fs
imul
arpl
jae
je
jb
bound
gs
je
jb
popa
fs
je
jb
bound
gs
imul
dec
popa
outs
fs
gs
arpl
popa
je
outs
outs
inc
ins
popa
addr16
outs
jbe
jb
outs
ins
outs
je
arpl
jb
outs
je
imul
jns
jae
popa
jb
jne
dec
outs
outs
add
outs
arpl
jae
outs
outs
jb
popa
je
outs
outs
add
outs
arpl
jae
bound
gs
fs
jae
add
data16
bound
data16
imul
gs
gs
add
je
jae
jb
je
outs
add
gs
add
outs
je
js
add
outs
fs
add
fs
jae
add
addr16
add
add
outs
je
arpl
jne
jo
outs
fs
outs
jne
je
fs
jb
arpl
jae
add
bound
inc
jbe
outs
je
fs
imul
outs
fs
fs
push
dec
add
outs
outs
je
outs
jne
push
je
je
jae
dec
popa
outs
fs
add
arpl
imul
ins
popa
je
outs
outs
add
arpl
imul
imul
dec
outs
addr16
add
dec
outs
addr16
dec
gs
push
push
popa
jb
ins
gs
jb
xor
jbe
inc
outs
inc
xor
outs
push
arpl
jbe
jno
outs
push
inc
dec
inc
je
xor
js
je
add
xor
and
je
dec
popa
imul
add
push
pop
inc
cmp
cmp
push
ins
outs
inc
push
jae
popa
ja
jbe
bound
outs
xor
je
arpl
dec
jae
bound
jo
imul
add
jb
imul
add
bound
arpl
fs
jb
outs
addr16
jne
ins
fs
inc
jo
outs
add
pop
dec
outs
gs
popa
ins
imul
ins
bound
jne
ins
dec
popa
ins
add
dec
xor
inc
jae
jo
data16
ja
inc
push
push
jns
fs
xor
pop
arpl
xor
jb
jns
popa
fs
push
gs
jne
arpl
gs
ins
jbe
add
je
popa
outs
imul
jae
jne
arpl
popa
ins
gs
inc
gs
jb
ins
gs
addr16
dec
outs
fs
add
fs
add
je
inc
jae
gs
bound
jb
jb
jo
inc
pop
pop
outs
ins
imul
inc
add
push
xor
inc
cmp
imul
inc
popa
add
push
add
imul
je
dec
popa
push
jb
and
popa
ja
push
inc
inc
jno
jne
xor
push
inc
js
inc
push
dec
imul
js
xor
js
dec
push
cmp
inc
jo
dec
popa
ins
add
push
jb
gs
imul
dec
popa
ins
gs
imul
jae
outs
outs
add
jo
add
jno
add
push
pop
gs
inc
pop
dec
xor
outs
xor
push
dec
jno
jae
ja
xor
push
inc
jne
dec
inc
jno
push
push
add
bound
jns
jo
ins
imul
add
ja
jne
imul
jo
ins
imul
add
jne
add
jbe
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
gs
popa
ins
jne
add
je
jb
add
inc
push
push
push
inc
dec
jbe
push
je
pop
push
ins
dec
inc
push
add
jne
xor
bound
imul
dec
add
dec
add
xor
add
xor
add
aaa
add
cmp
cmp
popa
add
bound
and
add
fs
add
push
add
je
jae
inc
js
jne
dec
inc
dec
dec
arpl
je
jb
ja
add
jbe
outs
js
xor
inc
dec
dec
push
inc
jne
pop
add
ins
add
outs
add
outs
add
jo
add
jb
add
jae
add
je
add
pop
dec
pop
addr16
push
inc
jae
dec
push
pop
dec
push
xor
push
push
jne
inc
arpl
dec
xor
push
push
jbe
imul
je
add
popa
imul
je
jae
dec
jae
gs
je
and
add
inc
add
jo
push
xor
inc
imul
inc
dec
xor
dec
inc
add
fs
xor
inc
xor
inc
inc
outs
xor
push
push
xor
add
dec
add
dec
add
fs
outs
addr16
jae
js
xor
inc
inc
pop
push
push
push
outs
jno
inc
push
push
push
imul
push
push
jbe
pop
inc
ins
inc
popa
push
add
push
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
push
add
pop
add
pop
add
pop
add
xor
push
xor
dec
push
jae
dec
outs
xor
jbe
inc
inc
xor
push
inc
jo
pop
ins
xor
jbe
xor
ins
add
cmp
and
add
popa
data16
bound
and
add
data16
je
ja
inc
push
push
pop
push
jns
jbe
gs
jno
add
imul
push
pop
push
dec
pop
xor
push
outs
je
ins
dec
jne
add
inc
imul
add
outs
data16
outs
data16
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
outs
imul
inc
inc
ins
inc
push
jno
inc
inc
jo
addr16
ja
add
gs
ins
xor
je
ins
push
inc
aaa
gs
add
inc
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
dec
data16
gs
gs
jae
ins
imul
add
js
outs
addr16
add
inc
fs
jp
dec
dec
outs
bound
dec
inc
jb
push
jns
inc
inc
dec
push
inc
dec
xor
bound
data16
xor
and
data16
xor
and
add
xor
data16
aaa
data16
cmp
and
data16
popa
add
bound
and
add
add
add
push
jno
inc
push
inc
push
dec
ss
push
inc
inc
dec
popa
ins
aaa
add
inc
dec
push
ja
push
jo
dec
jo
dec
je
push
push
dec
add
imul
ins
add
ins
add
jo
add
jae
add
imul
push
outs
dec
inc
push
dec
pop
jns
inc
outs
ins
jb
dec
inc
inc
jns
arpl
fs
dec
push
inc
inc
jbe
inc
xor
inc
imul
dec
jae
ins
jne
push
xor
xor
bound
dec
push
push
js
pop
inc
addr16
bound
inc
jo
aaa
dec
push
pop
pop
dec
jns
add
ja
add
js
add
jns
add
jp
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
dec
add
dec
add
dec
add
xor
and
add
add
je
jb
outs
arpl
add
ins
jo
jb
inc
js
push
add
aaa
add
ins
outs
jbe
add
arpl
jo
xor
ja
cmp
push
jbe
dec
inc
dec
inc
push
push
inc
dec
ins
jo
arpl
jae
jb
push
outs
imul
jb
inc
gs
imul
arpl
and
and
add
pushw
addr16
outs
jb
push
outs
fs
outs
arpl
jo
gs
popa
je
add
jb
imul
je
imul
outs
outs
inc
ins
popa
imul
addr16
and
add
imul
push
dec
push
pop
dec
js
js
push
push
cmp
dec
add
dec
arpl
push
jne
pop
imul
je
add
imul
ins
push
push
aaa
dec
push
popa
pop
jb
inc
dec
pop
push
inc
dec
add
dec
push
ja
imul
inc
push
jae
inc
add
outs
push
add
jo
add
jno
add
popa
imul
jae
popa
jo
inc
jb
outs
fs
jns
popa
ins
add
imul
fs
jns
jne
bound
add
jb
add
jae
add
je
add
aaa
push
cmp
jae
dec
addr16
xor
push
jns
inc
imul
cmp
push
imul
imul
fs
jns
jne
bound
add
jo
jb
outs
fs
jns
popa
ins
add
popa
imul
jae
and
add
inc
push
add
inc
push
add
inc
push
add
inc
push
add
dec
push
add
dec
push
add
dec
push
add
dec
push
jb
add
jb
outs
je
js
gs
imul
js
add
push
push
ins
fs
outs
outs
add
push
push
pop
dec
jae
popa
ins
jne
push
jns
add
je
dec
jae
je
je
arpl
addr16
inc
imul
add
je
ins
gs
outs
je
jns
add
je
dec
jae
jns
data16
je
dec
jae
outs
imul
gs
dec
jae
jb
popa
jns
addr16
dec
popa
jae
ins
gs
outs
je
jns
add
je
jb
popa
jns
popa
outs
imul
gs
dec
jae
jb
ins
imul
je
dec
jae
outs
jne
add
push
push
gs
outs
arpl
jno
popa
ins
jae
and
and
add
push
push
pop
dec
popa
outs
imul
fs
add
je
dec
outs
fs
gs
gs
imul
pop
push
je
outs
fs
data16
jo
popa
arpl
addr16
dec
popa
ins
gs
popa
arpl
and
add
outs
ins
ins
arpl
outs
add
jne
gs
je
jb
dec
gs
outs
ins
ins
arpl
outs
add
ja
jne
add
je
inc
outs
fs
popa
jae
add
je
dec
gs
add
je
push
gs
imul
je
inc
ins
gs
outs
je
je
imul
pop
dec
push
push
gs
imul
jb
je
outs
addr16
jns
je
ins
add
je
push
ins
popa
je
outs
jb
add
popa
je
outs
jb
dec
inc
add
jbe
jb
add
outs
jne
gs
bound
inc
gs
imul
imul
arpl
outs
je
push
jb
je
push
je
jb
inc
outs
arpl
outs
je
push
push
inc
cmp
arpl
imul
push
gs
push
jb
je
jb
and
push
inc
jne
je
ins
inc
je
jb
bound
gs
addr16
push
popa
outs
imul
gs
outs
addr16
add
xor
and
push
pop
dec
jae
imul
gs
dec
jae
outs
imul
gs
imul
imul
ins
popa
addr16
addr16
inc
popa
jae
push
jns
add
xor
push
add
cmp
and
push
inc
imul
data16
arpl
arpl
jbe
inc
push
arpl
jns
ins
jno
ins
inc
imul
popa
je
ins
inc
js
gs
imul
jne
addr16
popa
jne
arpl
add
bound
imul
add
ins
gs
outs
outs
add
je
imul
dec
jo
outs
add
ins
gs
outs
fs
ins
gs
arpl
jae
add
ins
gs
push
fs
jne
push
dec
push
dec
ins
push
push
dec
je
push
push
jns
add
push
inc
addr16
ins
jbe
push
fs
jo
aaa
jb
add
pop
add
imul
ins
bound
inc
add
xor
dec
push
push
jno
inc
inc
push
addr16
add
pop
xor
inc
popa
pop
jns
inc
push
xor
add
imul
imul
imul
jbe
push
push
inc
jb
push
add
dec
jae
jo
dec
inc
jno
ins
aaa
dec
inc
dec
inc
jns
add
inc
ins
jo
jns
and
add
push
add
imul
add
jb
je
gs
ins
add
ins
imul
popa
je
dec
popa
jne
push
push
imul
imul
ss
xor
xor
inc
dec
xor
imul
gs
add
ins
imul
ins
inc
js
gs
imul
dec
dec
aaa
push
push
push
dec
push
pop
push
xor
push
je
outs
dec
push
arpl
jae
push
inc
xor
inc
add
push
arpl
gs
outs
add
outs
fs
add
ins
ins
bound
imul
gs
ins
je
and
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
imul
jo
imul
imul
push
dec
addr16
pop
add
bound
push
push
xor
jns
imul
add
outs
inc
bound
add
outs
push
outs
fs
gs
jb
add
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
inc
popa
outs
inc
outs
outs
je
outs
jne
add
push
outs
inc
outs
outs
je
outs
jne
add
popa
je
jb
dec
popa
ins
add
inc
imul
and
add
dec
imul
and
add
dec
imul
jae
arpl
imul
je
outs
outs
add
outs
inc
outs
outs
je
outs
jne
add
arpl
imul
add
inc
inc
arpl
inc
xor
xor
fs
add
push
push
ins
push
xor
ins
push
push
push
jo
ja
xor
push
arpl
imul
add
jo
jb
inc
js
gs
imul
add
push
imul
and
add
push
imul
add
jb
jb
gs
popa
add
jo
jb
dec
add
inc
fs
outs
push
push
push
push
inc
inc
arpl
xor
ins
push
addr16
dec
push
jne
ins
je
outs
inc
inc
imul
je
jo
inc
popa
imul
outs
jb
gs
popa
add
jo
jb
dec
inc
add
push
imul
and
add
xor
gs
outs
fs
inc
add
push
arpl
dec
dec
dec
data16
je
inc
js
gs
imul
imul
push
dec
bound
arpl
je
add
jb
popa
ins
imul
dec
outs
outs
add
jae
gs
cs
jne
je
ins
gs
gs
popa
ins
imul
add
outs
add
jb
popa
ins
imul
gs
add
fs
popa
ins
jne
add
je
outs
je
xor
ins
gs
outs
fs
inc
add
push
arpl
imul
add
arpl
je
outs
outs
push
je
arpl
gs
push
xor
jae
inc
jae
pop
ins
imul
add
jb
ss
outs
push
ja
je
imul
push
jbe
add
gs
popa
ins
imul
jae
and
add
inc
outs
outs
je
push
add
push
push
gs
jp
add
imul
js
inc
push
add
je
push
jae
dec
outs
gs
outs
outs
imul
jo
outs
inc
xor
cmp
inc
push
xor
xor
outs
inc
js
bound
gs
push
popa
xor
and
and
add
popa
add
outs
push
and
add
jo
add
jno
add
jb
add
jae
add
je
add
jne
add
jbe
add
ja
add
js
add
popa
ins
gs
outs
jb
add
jns
add
imul
je
jb
jae
dec
outs
push
popa
imul
jo
outs
outs
je
addr16
inc
gs
outs
dec
outs
fs
je
inc
jb
jo
imul
ja
ins
popa
add
fs
push
imul
push
je
ins
add
outs
je
outs
ins
push
je
ins
gs
jae
je
push
popa
bound
outs
jo
jae
je
dec
outs
je
jb
popa
ins
add
je
and
add
ins
push
jae
outs
xor
data16
dec
imul
outs
dec
push
cmp
ins
outs
push
imul
outs
imul
push
add
je
and
add
inc
push
and
and
add
inc
push
and
add
dec
push
and
add
jae
gs
push
outs
jae
addr16
inc
outs
outs
je
outs
ins
dec
imul
push
outs
add
je
inc
ins
imul
add
ja
imul
ja
arpl
add
je
push
imul
je
inc
outs
je
outs
ins
add
je
inc
outs
outs
je
outs
ins
inc
popa
jb
add
jae
gs
inc
outs
ins
outs
jb
add
je
push
imul
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
push
imul
inc
pop
xor
push
dec
push
inc
cmp
outs
jbe
xor
push
push
outs
outs
push
je
je
add
dec
push
and
add
push
push
push
imul
outs
js
and
add
ins
push
imul
inc
jne
jae
jb
add
je
dec
popa
outs
add
jb
outs
jb
jae
je
inc
jne
jae
jb
push
gs
outs
outs
ins
push
imul
dec
ins
popa
add
je
push
imul
add
arpl
gs
outs
js
imul
add
ja
push
jae
outs
dec
push
xor
dec
fs
inc
add
outs
dec
push
pop
outs
dec
ins
push
arpl
dec
dec
jno
push
jns
and
and
add
push
push
and
add
push
imul
push
add
je
push
imul
push
gs
ins
imul
je
outs
je
dec
bound
imul
dec
dec
outs
inc
push
xor
jno
imul
pop
jne
and
push
and
push
and
push
and
add
xor
push
and
push
inc
gs
jns
gs
and
push
push
push
inc
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
add
push
gs
js
gs
imul
je
jb
jae
addr16
inc
js
gs
imul
arpl
gs
dec
jae
gs
imul
add
bound
and
add
imul
gs
jb
jo
jb
jns
push
jb
jo
jb
jns
outs
outs
add
je
gs
gs
outs
add
je
outs
fs
outs
outs
add
je
inc
js
je
outs
fs
imul
imul
imul
push
inc
outs
outs
ins
gs
outs
add
jbe
push
jo
js
je
jbe
arpl
je
inc
jbe
outs
outs
bound
outs
dec
ins
dec
pop
inc
jns
cmp
dec
popa
outs
fs
gs
push
bound
imul
je
arpl
add
je
push
jb
add
je
push
imul
inc
gs
gs
gs
push
dec
add
outs
jae
dec
inc
add
je
bound
jno
gs
add
bound
jno
gs
add
imul
dec
je
jo
bound
jno
gs
add
je
push
gs
imul
je
push
gs
imul
je
jae
je
inc
js
arpl
xor
outs
je
outs
jne
add
aaa
push
outs
jae
xor
dec
jae
jb
xor
inc
gs
push
push
outs
aaa
push
bound
xor
pop
add
jb
gs
jb
add
ins
outs
popa
fs
gs
jb
xor
fs
je
add
popa
imul
jae
push
inc
push
js
push
gs
dec
xor
inc
dec
inc
push
jno
outs
xor
popa
push
jne
pop
dec
imul
and
add
pop
add
push
add
xor
inc
push
outs
xor
imul
dec
dec
xor
add
xor
bound
push
jne
xor
outs
inc
dec
dec
fs
push
add
jne
add
jbe
add
dec
imul
dec
imul
dec
imul
dec
imul
dec
imul
push
fs
outs
pop
gs
gs
inc
inc
jae
push
ins
add
dec
cmp
outs
cmp
js
pop
inc
gs
ss
push
gs
imul
add
pop
ss
dec
jae
gs
gs
xor
dec
jae
outs
jb
jae
popa
je
outs
outs
add
jb
imul
add
push
imul
push
imul
push
imul
push
imul
arpl
ins
add
je
push
outs
jo
dec
push
push
push
push
outs
jno
dec
je
pop
xor
je
aaa
add
cmp
push
outs
js
bound
push
jbe
dec
popa
xor
add
push
imul
pop
imul
pop
imul
pop
imul
xor
and
imul
xor
and
imul
xor
add
xor
imul
cmp
and
imul
popa
ins
add
bound
arpl
fs
add
gs
add
data16
add
ins
add
push
ins
push
jb
je
jb
outs
popa
ins
add
imul
inc
ins
gs
outs
je
push
jb
je
inc
outs
fs
ins
gs
outs
je
fs
dec
push
dec
ja
ja
jae
push
inc
aaa
imul
inc
js
push
xor
push
ss
ins
push
ins
cmp
inc
push
add
imul
ins
add
outs
ins
add
jo
add
jno
add
jb
add
je
outs
outs
add
jae
add
je
add
outs
gs
add
jne
add
jbe
add
ja
add
js
add
jns
add
jp
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
inc
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
dec
ins
add
jbe
inc
imul
add
ins
ins
outs
outs
inc
imul
push
popa
ins
outs
add
ins
gs
imul
gs
push
imul
pop
inc
gs
jne
je
js
add
je
inc
imul
je
inc
imul
and
and
add
dec
ins
add
outs
jb
add
dec
ins
add
push
ins
add
je
inc
push
add
push
ins
add
push
ins
add
push
ins
add
outs
arpl
inc
jbe
outs
je
jb
jae
dec
outs
inc
ins
outs
jae
outs
add
je
dec
jae
ins
imul
add
arpl
add
je
inc
jo
jb
ins
outs
je
je
je
add
popa
jb
ins
outs
je
je
je
add
push
ins
add
push
ins
add
push
ins
add
push
gs
js
gs
imul
ins
gs
jb
jo
jb
inc
js
gs
imul
je
jb
jae
addr16
inc
popa
outs
inc
outs
arpl
add
je
inc
outs
outs
je
imul
inc
dec
outs
push
outs
cmp
cmp
imul
addr16
add
jo
inc
outs
gs
push
outs
addr16
add
outs
ins
add
outs
ins
add
jne
add
jbe
add
arpl
imul
je
outs
outs
inc
jbe
outs
je
jb
jae
jae
je
dec
arpl
add
dec
cmp
dec
xor
jae
inc
dec
push
jo
push
push
ins
dec
outs
ss
inc
push
pop
ins
inc
push
push
dec
add
jae
popa
addr16
outs
js
jne
je
outs
jae
dec
gs
popa
addr16
outs
js
arpl
add
js
add
jbe
imul
ins
bound
add
outs
fs
dec
imul
gs
outs
fs
js
gs
imul
addr16
push
outs
push
push
xor
push
inc
outs
inc
push
inc
dec
dec
add
jo
inc
dec
outs
arpl
push
xor
popa
jae
dec
push
add
push
and
jb
jae
jne
arpl
add
xor
xor
aaa
sub
cmp
sub
sub
sub
xor
xor
jge
jnp
xor
bound
cmp
sub
sub
sub
sub
xor
cmp
inc
imul
jae
bound
je
jb
bound
add
imul
jae
bound
je
je
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jae
gs
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
inc
bound
addr16
imul
jb
bound
add
popa
outs
fs
jb
dec
outs
fs
gs
je
jb
bound
add
fs
outs
fs
gs
popa
ins
gs
je
jb
bound
add
ins
jo
gs
outs
jb
inc
je
jb
bound
add
jae
gs
cs
outs
ins
jo
outs
outs
je
outs
fs
cs
gs
outs
add
inc
jb
jne
inc
outs
ins
ins
arpl
outs
inc
je
jb
bound
add
ins
push
imul
je
jb
bound
add
gs
fs
je
je
arpl
je
imul
outs
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
inc
push
push
inc
je
jb
bound
add
imul
outs
gs
je
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
je
jo
push
push
imul
ins
popa
addr16
je
jb
bound
add
jne
addr16
imul
je
jb
bound
add
je
imul
popa
addr16
je
jb
bound
add
je
imul
jb
gs
add
jae
ins
gs
inc
je
jb
bound
add
arpl
imul
arpl
inc
je
jb
bound
add
imul
je
outs
jb
inc
je
jb
bound
add
outs
ja
popa
bound
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
inc
je
jb
bound
add
imul
jb
popa
ins
imul
push
imul
je
add
bound
jb
imul
imul
imul
outs
popa
jo
outs
arpl
outs
je
gs
outs
fs
je
jb
bound
add
ins
inc
ins
gs
outs
je
je
jb
bound
add
jae
gs
cs
ins
ins
cs
gs
popa
ins
imul
add
add
add
imul
pop
add
pop
add
pop
add
dec
add
add
dec
add
inc
add
add
add
dec
add
xor
imul
inc
add
add
add
xor
dec
add
add
add
push
add
push
add
imul
add
add
add
dec
add
dec
add
add
dec
add
xor
arpl
ins
add
cmp
bound
ins
add
xor
add
dec
add
bound
inc
add
add
dec
add
imul
ins
add
push
add
add
xor
add
add
pop
add
xor
cmp
dec
add
add
xor
dec
add
dec
add
add
inc
add
xor
add
xor
dec
add
push
add
add
push
add
add
jp
pop
add
xor
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
arpl
xor
data16
jge
sub
add
inc
add
pop
add
add
jp
pop
add
pop
add
dec
add
add
dec
add
inc
add
add
add
dec
add
xor
imul
inc
add
add
add
xor
dec
add
add
add
push
add
push
add
imul
add
add
add
add
pop
add
xor
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
arpl
xor
data16
jge
add
jnp
xor
jge
jnp
xor
jge
pop
add
or
add
add
sub
outs
add
add
add
add
add
jb
and
push
add
add
popa
add
add
add
sbb
imul
add
ja
outs
add
add
add
add
jb
add
popa
add
add
add
push
add
add
add
add
add
add
add
add
adc
xor
ja
jo
add
js
add
sbb
jae
jo
outs
add
je
pop
add
jo
add
js
add
adc
push
add
jb
jae
imul
cmp
add
add
jne
ins
add
add
add
add
jne
je
jb
popa
add
and
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
ins
add
adc
jne
ins
add
add
add
add
jb
jae
imul
cmp
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
jnp
xor
bound
arpl
data16
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
add
popa
add
xor
add
add
sub
and
push
add
bound
ins
add
arpl
dec
add
jns
push
add
imul
add
cmp
add
add
add
add
add
aaa
add
add
add
add
add
add
add
add
add
add
add
aaa
add
add
add
add
xor
sub
add
add
sub
add
add
add
add
add
add
add
cmp
data16
add
add
add
add
push
das
pop
mov
sbb
stos
add
add
add
xchg
add
add
add
add
and
add
inc
xor
add
add
add
add
inc
shld
cmps
pop
mov
xor
jns
repnz
fstp
loop
sub
jmp
xchg
cs
add
sbb
xor
and
and
inc
popf
adc
ror
xchg
retf
enter
or
in
aad
test
rcr
mov
sbb
mov
out
jb
outs
int
mov
jge
and
jp
push
sbb
mov
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
and
add
add
or
add
add
add
add
or
add
add
push
or
add
dec
add
or
add
aaa
xor
xor
xor
add
add
and
ja
jb
and
and
popa
jb
inc
jae
gs
bound
ss
xor
xor
xor
add
add
add
add
add
add
sub
jg
aad
cmp
add
add
pop
add
add
add
add
add
add
push
add
add
add
add
or
add
adc
pop
adc
or
or
or
or
or
sbb
or
adc
sbb
sbb
sbb
sbb
pop
add
sbb
push
pop
movlps
jns
push
adc
add
sbb
add
sbb
and
sbb
add
or
or
and
sbb
add
add
add
or
and
add
and
adc
add
adc
popf
add
push
add
movs
add
movs
pop
add
sbb
pop
add
add
or
sub
push
push
push
push
push
push
adc
adc
les
adc
adc
jno
jno
jo
jl
sbb
or
enter
adc
adc
adc
adc
adc
add
add
jno
add
sbb
add
mov
cmp
pop
add
add
add
add
add
add
sbb
add
add
or
add
or
add
sbb
xor
or
or
add
sbb
pop
add
or
or
add
or
push
pop
or
or
or
or
or
add
adc
add
sbb
pop
add
add
push
pop
add
add
jno
sbb
add
add
or
add
add
add
add
xor
add
cs
arpl
imul
imul
cs
arpl
imul
jae
imul
imul
ins
jae
outs
jb
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
add
push
outs
ins
popa
outs
popa
addr16
outs
fs
leave
add
sbb
and
add
or
add
add
adc
pop
add
or
or
add
push
push
add
adc
pop
sbb
push
add
or
add
add
push
pop
add
push
push
push
push
push
add
add
add
add
push
add
push
add
or
add
add
or
push
add
add
sub
or
add
push
push
adc
or
or
sub
sub
pop
add
xor
and
adc
in
or
add
adc
add
add
or
add
adc
or
or
or
or
or
or
add
or
or
adc
or
add
adc
adc
or
add
add
add
gs
cmp
pop
sbb
xor
push
sbb
or
or
adc
adc
push
adc
add
push
adc
sbb
or
or
push
add
add
push
sbb
add
add
or
add
add
or
add
or
add
sbb
adc
push
adc
and
add
add
and
adc
adc
push
and
adc
add
pop
and
or
add
adc
add
push
sbb
push
add
adc
add
push
push
push
add
add
push
push
add
adc
add
gs
pop
and
add
add
add
add
add
xor
or
add
adc
or
add
or
xor
add
add
jno
sbb
sbb
sbb
sbb
pop
add
add
xor
or
or
add
add
and
adc
add
add
or
add
or
add
or
add
or
add
mov
add
add
push
or
add
push
adc
add
sbb
adc
add
add
or
or
or
add
or
sub
adc
or
pop
add
or
add
xor
add
or
adc
add
sub
add
cmp
adc
adc
add
xor
sbb
or
sbb
or
sbb
lods
sbb
or
adc
adc
adc
adc
adc
adc
adc
add
sbb
add
adc
push
add
or
xor
or
add
or
add
adc
add
add
sbb
or
add
push
sbb
add
sysret
or
add
sbb
add
or
lea
pop
add
adc
pop
add
sbb
add
push
push
add
add
add
adc
push
push
push
adc
dec
or
or
add
add
add
or
push
add
and
add
adc
mov
add
add
adc
sbb
or
pop
add
jno
sbb
sbb
sbb
add
add
push
pop
sbb
sbb
or
or
or
or
or
or
or
or
add
or
push
add
add
xor
add
add
sbb
sbb
add
add
jno
sbb
pop
adc
or
adc
adc
adc
sbb
add
or
add
jno
and
adc
add
sub
jno
and
add
add
add
push
adc
sbb
and
add
and
adc
adc
adc
and
adc
adc
sbb
push
push
push
adc
add
jne
sbb
or
push
pop
and
add
sbb
add
add
adc
adc
add
sbb
push
sbb
add
add
and
add
and
add
adc
adc
adc
push
and
add
add
lea
adc
add
or
and
add
adc
and
add
sbb
and
or
or
add
test
sbb
add
adc
adc
adc
add
xor
add
sbb
pop
and
adc
adc
or
or
sbb
add
or
or
adc
add
cdq
sbb
add
add
or
add
adc
or
add
or
add
or
adc
add
or
add
or
push
add
add
or
add
add
add
jno
sbb
sbb
sbb
sbb
sbb
add
add
adc
sbb
add
or
adc
pop
add
or
or
lds
add
adc
pop
or
or
or
or
sbb
add
add
gs
add
add
sub
or
or
or
or
add
push
adc
or
add
adc
push
push
push
pop
add
add
add
xor
push
push
sbb
push
push
push
push
or
or
adc
add
adc
adc
sub
or
jmp
sub
add
add
sbb
adc
add
add
sub
add
add
adc
or
pop
add
or
push
adc
adc
add
sbb
add
push
or
pop
add
or
add
adc
or
add
adc
or
add
adc
pop
add
add
adc
add
add
and
adc
ror
sbb
or
sbb
sbb
sbb
cmp
add
or
sbb
sbb
add
add
rol
and
or
adc
add
or
add
jno
jno
sbb
and
adc
adc
push
adc
add
adc
add
xor
pop
sbb
add
sbb
push
push
push
add
and
add
or
add
adc
add
sbb
sbb
add
add
push
add
add
push
add
add
add
add
or
or
or
or
add
sbb
or
or
push
adc
sbb
add
add
add
add
sbb
add
add
sbb
add
adc
add
adc
or
add
add
push
or
sbb
pop
add
or
push
push
push
push
adc
or
add
push
or
add
push
adc
add
or
sub
add
add
adc
adc
and
add
push
push
add
add
or
add
pop
add
add
adc
or
push
or
adc
add
sbb
or
add
cmp
sbb
movs
push
or
add
adc
and
add
adc
adc
add
aam
add
push
or
add
cmp
and
add
sbb
or
xor
add
add
xor
sbb
add
add
sbb
pop
push
push
or
push
or
pop
add
or
add
add
push
add
add
and
cdq
push
push
push
adc
or
sbb
add
push
adc
or
or
add
add
jno
or
add
adc
push
pop
add
push
adc
add
adc
add
add
sbb
or
adc
sbb
sbb
sbb
push
add
or
add
sbb
sbb
sbb
add
add
adc
add
add
add
adc
pop
add
cmp
add
sbb
and
add
add
cdq
pop
add
or
sub
adc
add
adc
or
add
add
add
xor
or
or
or
or
or
or
or
or
or
add
adc
add
adc
or
or
or
or
or
add
add
xor
add
adc
sbb
add
add
push
add
add
push
or
add
adc
sbb
and
and
and
sbb
pop
add
adc
or
add
adc
add
xor
adc
add
add
adc
or
sbb
or
or
or
add
add
adc
push
or
adc
add
add
push
and
sbb
push
sbb
sub
sbb
push
push
push
adc
push
sbb
sbb
or
sbb
adc
adc
sbb
adc
sbb
xor
add
xor
push
sbb
add
sbb
adc
sbb
xor
add
adc
add
or
adc
push
or
adc
adc
add
add
pop
pop
or
or
or
or
add
sbb
xchg
or
add
gs
gs
add
add
sub
adc
push
or
or
and
add
or
adc
adc
push
adc
or
push
adc
or
adc
sbb
adc
adc
adc
or
adc
or
adc
add
sbb
add
adc
pop
add
adc
adc
and
adc
add
add
or
pop
add
or
or
add
adc
adc
add
add
sbb
pop
add
sbb
sbb
or
adc
or
adc
dec
add
add
sbb
pop
add
add
pop
add
xor
pop
add
push
pop
adc
add
add
add
pop
add
add
add
push
add
add
add
add
xor
add
adc
add
add
add
push
adc
push
pop
add
add
add
adc
add
adc
add
add
add
add
add
pop
add
sub
sbb
jno
sbb
push
adc
cmp
push
adc
xor
push
adc
or
adc
inc
push
adc
cmp
adc
xor
adc
or
adc
inc
add
add
cmp
pop
add
cmp
cmp
add
xor
pop
add
xor
xor
add
adc
pop
add
inc
adc
or
adc
add
add
xor
or
adc
push
adc
adc
or
add
add
add
add
add
adc
add
adc
adc
add
adc
adc
adc
or
or
and
add
xor
and
add
and
add
push
add
push
or
add
and
xor
sbb
add
add
and
adc
ins
sbb
and
add
sub
add
add
push
adc
or
push
adc
add
or
or
lods
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
push
sbb
add
adc
push
push
add
and
adc
add
jl
jl
or
adc
add
js
pop
add
js
js
or
adc
and
adc
adc
add
cwde
add
test
pop
add
add
adc
adc
adc
add
mov
xchg
or
add
adc
adc
adc
adc
add
mov
nop
or
add
adc
add
adc
pushf
or
add
sbb
adc
add
add
pop
add
or
add
add
or
add
sbb
pop
add
sbb
adc
add
add
add
jl
sub
adc
sub
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
push
adc
adc
add
push
invd
add
push
pop
push
and
adc
adc
adc
add
adc
adc
add
or
adc
mov
adc
or
or
sub
and
or
or
and
sub
sbb
add
sbb
adc
push
sub
and
add
adc
adc
imul
push
sbb
add
sbb
adc
push
and
adc
or
adc
adc
add
adc
adc
adc
add
or
or
adc
adc
pop
adc
add
sub
and
add
or
sub
add
add
and
sub
or
sub
and
add
sbb
or
sub
add
sbb
adc
sub
and
or
sub
add
sbb
push
and
adc
or
adc
add
or
or
add
sub
or
sub
and
or
or
sub
add
sbb
or
and
adc
ins
sbb
and
add
or
imul
sub
and
add
adc
imul
adc
and
or
adc
add
or
or
imul
sub
and
add
or
adc
add
sub
and
add
and
adc
ins
sbb
and
or
or
add
sub
ins
sbb
and
add
sub
adc
push
adc
pop
add
add
add
sbb
add
adc
push
add
pop
add
xor
push
and
adc
add
xor
add
add
xor
jno
pop
push
push
push
sbb
or
push
adc
push
sbb
push
or
add
add
sbb
adc
and
sbb
and
adc
adc
add
push
sbb
sbb
add
or
jno
or
push
add
add
add
adc
add
or
adc
or
add
add
add
or
pop
or
or
or
pop
adc
or
or
add
adc
adc
add
pop
add
xchg
or
add
push
add
add
or
push
sbb
sub
add
adc
xor
sub
add
push
sbb
sbb
push
add
push
adc
or
pop
add
or
sub
or
adc
add
or
and
adc
push
and
add
adc
sbb
push
adc
sub
add
adc
add
adc
adc
adc
add
push
add
push
add
add
add
ror
add
and
adc
add
nop
push
and
adc
add
adc
or
aam
or
add
adc
or
and
add
add
add
add
adc
push
adc
add
push
adc
push
sbb
push
adc
push
adc
cmp
push
adc
adc
adc
push
adc
push
or
push
adc
adc
push
add
adc
and
jno
sbb
or
adc
add
or
add
adc
pop
pop
adc
push
sbb
xor
push
or
xor
xor
adc
adc
push
and
adc
add
adc
sbb
or
add
or
sbb
add
adc
or
add
or
add
xor
adc
add
xor
and
or
or
push
adc
gs
push
push
adc
inc
add
jno
jno
jno
or
xor
or
sbb
or
push
adc
adc
adc
adc
sbb
adc
adc
adc
adc
adc
push
adc
or
adc
adc
adc
adc
adc
adc
or
adc
adc
or
or
add
adc
add
or
adc
pop
adc
push
sbb
and
adc
adc
adc
pop
adc
push
sbb
adc
push
adc
or
add
jno
add
adc
adc
adc
add
jno
and
adc
adc
pop
adc
adc
and
adc
sbb
and
add
adc
sbb
sbb
xor
dec
push
adc
or
or
sbb
adc
adc
add
or
adc
adc
and
sbb
add
adc
and
or
push
and
adc
add
sbb
or
adc
add
dec
sbb
sbb
adc
or
or
add
sub
adc
adc
adc
or
and
add
sub
adc
add
sub
adc
add
and
adc
jno
sldt
cmp
adc
adc
sbb
adc
xor
and
add
or
add
sbb
xor
adc
and
add
sub
sub
xchg
or
add
adc
push
adc
and
adc
and
add
imul
imul
push
add
add
imul
adc
adc
les
sub
push
adc
adc
add
or
adc
add
adc
sub
adc
sbb
and
add
add
add
pop
add
or
and
add
sbb
xor
push
adc
add
sbb
and
adc
ins
sbb
and
add
push
add
adc
push
adc
add
push
and
add
adc
and
adc
adc
add
pop
pop
and
add
sbb
add
adc
xor
add
call
adc
adc
add
or
and
add
or
pop
or
sub
xor
xor
xor
xor
xor
xor
add
loope
and
or
or
or
add
adc
or
add
adc
add
jmp
adc
adc
adc
sub
push
adc
adc
add
cmp
and
add
pop
push
push
and
add
cmp
and
add
or
sub
adc
add
sub
hlt
push
and
add
xor
and
add
cmp
adc
xor
or
pop
add
sbb
xor
sbb
and
add
add
pop
add
jno
xor
add
add
imul
mov
add
jno
add
pop
or
xor
adc
gs
sbb
adc
or
push
and
adc
add
or
sbb
adc
xor
xor
sbb
sbb
adc
or
add
adc
and
adc
push
push
sbb
add
adc
adc
adc
add
or
add
cmp
add
adc
and
push
adc
sub
add
adc
sbb
sub
adc
and
in
push
adc
adc
add
xor
and
sbb
and
push
and
add
cmp
pop
add
and
and
adc
add
xor
push
adc
adc
icebp
adc
add
adc
adc
adc
adc
add
inc
or
add
adc
or
adc
sbb
sbb
add
add
add
add
push
and
add
adc
add
dec
jns
gs
jo
popa
je
pop
cmp
xor
xor
xor
add
add
or
cs
outs
ins
jo
je
jb
add
add
push
dec
jns
inc
jo
ins
imul
add
or
add
dec
jns
push
jae
jb
add
add
push
dec
jns
push
bound
jb
imul
add
xor
jns
je
ins
cs
bound
push
gs
imul
outs
je
arpl
jae
push
outs
popa
jo
je
jo
ins
imul
je
arpl
adc
gs
je
pop
pop
dec
outs
jae
popa
outs
arpl
pop
adc
jo
jae
pop
pop
dec
outs
jae
popa
outs
arpl
pop
add
add
and
push
push
push
push
xor
add
cmp
outs
gs
je
and
je
outs
fs
push
push
add
jns
adc
outs
gs
je
and
je
outs
fs
add
add
add
and
add
sbb
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
jbe
add
jae
and
outs
ja
outs
outs
je
outs
jne
inc
push
outs
js
imul
sub
popa
jae
je
imul
outs
ja
popa
ins
jae
and
ins
jae
and
outs
and
and
imul
jae
arpl
jae
outs
and
je
je
and
outs
ja
je
and
arpl
outs
js
add
or
add
add
add
or
add
outs
fs
add
add
and
add
xor
push
push
add
popa
ins
adc
imul
arpl
outs
popa
jo
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
ins
outs
popa
fs
gs
jb
dec
outs
imul
gs
gs
push
dec
add
pusha
add
add
push
push
add
popa
ins
gs
gs
jb
imul
imul
push
push
or
ins
gs
popa
arpl
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
inc
push
das
das
ja
ja
jae
popa
jb
popa
jae
gs
bound
arpl
das
ja
bound
jb
imul
jo
jb
imul
outs
popa
fs
gs
jb
xor
add
add
add
inc
popa
je
push
jns
gs
popa
jae
ss
imul
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
aam
pop
add
jge
pop
in
push
into
add
cmp
js
sbb
xlat
ret
les
inc
das
rol
pop
test
aad
mov
out
jns
imul
add
fild
fldcw
inc
dec
push
push
cli
into
imul
adc
xlat
in
outs
jmp
out
push
push
aaa
sbb
xchg
(bad)
outs
and
neg
push
lahf
cli
lahf
push
and
mov
mov
mov
xor
mov
movs
pushf
loop
ds
and
mov
fs
ds
outs
outs
mov
inc
inc
mov
jns
cmps
stos
div
adc
add
adc
pop
xchg
cmp
push
mov
jns
xor
(bad)
mov
mov
add
push
mov
mov
retf
and
shl
and
dec
ins
cmp
pop
or
sti
or
pop
into
bound
shl
ret
bnd
(bad)
cwde
jle
sub
sbb
or
int
int3
mov
mov
xor
cdq
aam
jnp
adc
ret
xchg
or
adc
pop
mov
pop
add
fdivr
loope
dec
add
and
aad
mov
mov
and
adc
sbb
inc
rcl
push
aaa
cmc
sub
pop
leave
mov
add
stos
jp
xor
and
cli
je
or
jne
pop
mov
in
xchg
mov
jb
mov
sub
out
cdq
addr16
adc
in
add
jl
rcr
fld
(bad)
nop
push
inc
cmp
imul
test
xchg
lods
mov
mov
test
push
adc
fld
pop
pushf
or
iret
pop
and
imul
sar
add
adc
sub
retf
add
jnp
aaa
dec
mov
mov
xor
sbb
leave
icebp
(bad)
aam
imul
ss
out
imul
inc
cwde
arpl
pop
adc
cmc
pop
mov
(bad)
cwde
mov
sar
clc
cmp
ins
pop
imul
and
loop
jne
pop
mov
pop
mov
bsf
cmp
jnp
ret
loopne
stos
mov
pushf
jp
lds
mov
aaa
aam
inc
jae
adc
and
pushf
mov
pusha
test
lea
aam
lods
mov
not
ror
(bad)
and
xor
pushf
sub
daa
push
mov
lods
or
push
retf
stos
or
pop
test
mov
cmps
sti
jae
xor
fidivr
push
imul
dec
pop
arpl
add
mov
xchg
xor
inc
jno
mov
cmps
xchg
pop
(bad)
(bad)
sub
pop
iret
jle
push
push
popf
shr
inc
cmp
mov
jg
dec
xchg
(bad)
sub
mov
movs
pop
push
sub
ins
mov
add
fldcw
mov
clc
dec
mov
cmp
or
(bad)
popf
outs
jb
xchg
ror
push
call
fsubr
mov
mov
in
xrelease
pop
pop
adc
mov
icebp
pop
pushf
dec
pop
cmp
enter
test
dec
es
fisttp
jl
xchg
js
or
shr
pop
nop
pusha
mov
call
push
jge
pop
and
dec
movs
das
xchg
ins
lock
fild
push
add
(bad)
shl
(bad)
lods
arpl
adc
sub
out
mov
mov
gs
jne
cmp
inc
mov
test
push
and
lock
(bad)
lods
lds
xor
stos
sub
lods
mov
mov
xor
mov
aam
clc
out
rol
ss
jl
dec
cmps
xchg
fst
or
mov
sub
arpl
sbb
(bad)
fdivr
shl
inc
in
adc
pop
fldcw
mov
std
xor
sbb
icebp
retf
rcl
cld
push
mov
dec
dec
pop
jae
test
lock
ins
mov
sub
into
lahf
dec
jg
cmps
pusha
mov
xlat
fs
inc
and
pusha
test
add
inc
aad
(bad)
xor
xchg
sub
loop
push
fcmovne
mov
pop
sbb
or
dec
ds
jns
div
inc
pop
jae
sahf
outs
xor
bound
push
dec
mov
clc
jno
pop
outs
push
test
(bad)
mov
retf
int3
sbb
add
mov
mov
adc
loopne
sub
clc
das
popa
push
pop
movs
inc
loopne
(bad)
cmp
in
push
fist
test
fisttp
mov
adc
or
fs
sub
mov
dec
in
or
in
push
out
ja
xchg
cmp
test
loopne
xor
arpl
(bad)
mov
adc
xor
mov
cdq
push
fbld
jecxz
hlt
jns
push
push
xchg
lea
out
jge
mov
pop
cmps
lods
sub
add
push
sub
xchg
xchg
jecxz
ja
sub
xor
cmp
cmp
loopne
shl
test
hlt
nop
mov
inc
rol
sub
out
retf
inc
push
mov
mov
pop
(bad)
pop
les
cdq
lods
pushf
jno
outs
cmp
cs
jp
xchg
and
das
or
les
pop
inc
scas
xchg
push
imul
xchg
lock
and
push
outs
xchg
addr16
popf
jo
xchg
sub
cmp
jmp
mov
mov
jmp
mov
scas
cmp
cmps
scas
sbb
xchg
add
or
imul
xor
test
loope
jle
ins
ss
xor
ror
mov
addr16
clc
loopne
xlat
jnp
in
mov
mov
xchg
lea
ffreep
mov
imul
leave
bound
fld
std
jmp
mov
into
dec
mov
mov
fs
loopne
mov
sbb
cs
jno
int
shl
and
sahf
dec
cld
or
jge
inc
iret
mov
ret
sub
dec
lock
inc
repz
xor
and
pop
test
lods
mov
mov
xor
addr16
call
call
xor
jbe
sbb
mov
cwde
stc
(bad)
mov
shr
inc
xchg
jne
aas
div
(bad)
sub
add
lods
jnp
lods
xor
or
xor
stc
dec
cmp
popa
xchg
iret
adc
hlt
int3
mov
jno
dec
jno
xor
cld
test
(bad)
xor
pop
mov
in
mov
cmp
jg
ds
fidivr
inc
dec
mov
xchg
ds
cs
jae
cdq
fist
push
shl
cmps
cwd
add
xor
and
inc
cmp
dec
jmp
scas
pop
dec
dec
mov
jg
mov
ror
mov
and
cli
test
add
inc
movs
fwait
jae
mov
and
ja
fs
push
shr
or
test
ret
std
cmc
leave
jp
int
pop
fwait
scas
and
outs
dec
push
add
push
inc
inc
in
outs
add
fsub
add
mov
sbb
or
loopne
or
and
or
cdq
xor
xchg
jl
frstor
dec
js
jns
(bad)
ficomp
data16
aas
popf
inc
add
pop
(bad)
adc
sar
adc
loope
dec
das
xchg
aam
shl
jmp
mov
(bad)
aas
bound
mov
sub
and
arpl
inc
fstp
sub
sti
jbe
inc
mov
fs
sub
bnd
int
test
enter
mov
cdq
rcl
jne
jae
fs
xlat
fstp
in
call
jmp
xchg
out
leave
inc
jns
mov
int3
ret
outs
jmp
adc
push
mov
into
pop
push
add
in
mov
ins
ret
sbb
inc
mov
or
gs
ror
push
out
push
push
call
iret
or
jmp
iret
ss
sbb
das
imul
sbb
retf
jecxz
mov
aad
mov
loope
test
mov
mov
fst
mov
ins
popa
adc
das
mov
popa
xchg
lods
dec
movs
jg
jbe
ds
dec
loop
and
mov
sbb
stos
jl
out
sub
das
lods
inc
aam
cmp
fistp
pop
in
outs
gs
xchg
xor
(bad)
idiv
aad
xchg
or
mov
fwait
push
inc
jle
pop
push
mov
mov
push
xchg
fsubr
cs
ffree
inc
sub
sub
pusha
lea
and
pushf
dec
test
shr
pop
mov
retf
and
mov
jp
push
daa
inc
ds
cmp
frstor
mov
xchg
jmp
mov
adc
jl
sbb
arpl
fadd
in
jbe
(bad)
cli
mov
pop
outs
jae
outs
adc
sub
and
inc
push
outs
sahf
stos
test
aad
and
inc
mov
repz
adc
pop
loope
xor
rol
outs
pop
ret
mov
inc
(bad)
leave
sbb
call
push
ja
adc
mov
icebp
es
loopne
sbb
out
adc
inc
ret
inc
into
in
cmp
pop
push
outs
lahf
leave
mov
and
push
jp
push
sub
push
dec
inc
push
jmp
add
(bad)
or
ret
cmp
mov
loop
dec
in
pushf
cs
xlat
xchg
dec
mov
cmp
(bad)
cmp
ja
jb
mov
in
add
repnz
shr
mov
das
outs
stc
rcl
pop
clc
iret
xlat
inc
jns
ret
add
ss
or
push
mov
not
mov
or
jge
xchg
ficomp
in
jnp
int3
test
cmp
pop
cmp
add
sahf
clc
mov
fwait
cs
jae
push
jle
cmc
push
mov
add
or
jp
mov
or
icebp
mov
fldcw
adc
mov
xor
or
jg
sti
add
xchg
dec
fdivr
cmp
jmp
hlt
jae
retf
leave
add
and
xchg
(bad)
cmp
lds
mov
call
push
inc
mov
jl
aas
ja
shl
pop
scas
push
enter
movs
aam
and
rol
dec
repnz
dec
shl
cmps
ja
test
mov
and
out
int
pop
and
and
aad
cld
fadd
xchg
pop
fdiv
jmp
cmp
aam
cdq
push
int
adc
in
fs
pop
call
icebp
push
imul
dec
add
ror
shr
push
dec
jo
(bad)
fnstenv
es
clc
mov
dec
daa
sti
popf
stc
inc
push
ret
adc
push
sbb
or
ins
mov
pop
imul
pop
shl
out
jnp
mov
mov
(bad)
add
repz
sahf
mov
mov
xchg
popf
dec
pop
jo
mov
pop
pop
leave
fs
pop
cmc
dec
pop
lahf
rcl
not
stos
fnstenv
jg
aad
sub
popf
and
fst
cmps
and
push
aad
inc
pop
pop
jb
or
dec
pushf
out
or
sbb
call
add
jg
mov
leave
adc
out
cmp
sub
mov
xchg
pop
cmc
fbstp
push
jge
xchg
aam
mov
dec
or
(bad)
jp
(bad)
jle
push
push
jb
enter
jno
sbb
mov
retf
pop
repz
lahf
and
pop
lds
test
cli
pop
sbb
outs
sub
dec
lock
jp
add
shr
popa
cmps
cmp
jecxz
adc
test
dec
inc
imul
iret
dec
cmps
push
adc
cld
jle
inc
call
mov
inc
pop
fs
xlat
bound
ffree
and
jo
cdq
sahf
aad
adc
inc
mov
imul
adc
inc
outs
loop
ss
mov
js
jbe
sub
leave
jbe
es
sub
fnsave
movs
(bad)
retf
fadd
fwait
(bad)
repnz
push
inc
mov
or
dec
(bad)
dec
and
movs
rcl
pop
scas
fwait
mov
mov
int
test
dec
push
cmp
cmp
lahf
and
pop
jne
in
or
adc
fwait
push
push
imul
inc
sbb
xchg
ss
int3
xchg
sub
lds
mov
pop
pop
fcmovnbe
pop
jle
dec
xchg
fld
call
aaa
sub
das
xor
rcl
add
pop
adc
add
daa
test
push
hlt
retf
push
lods
xor
jmp
rcr
mov
lods
out
in
pop
ds
or
jge
add
push
outs
mov
call
xchg
sub
mov
out
(bad)
adc
sbb
imul
cmps
and
cmp
mov
(bad)
repz
inc
pop
push
adc
or
xchg
jg
outs
xor
retf
xor
movs
lods
js
jle
stos
jmp
aaa
ins
jmp
in
mov
mov
cmc
sbb
out
cmp
mov
dec
ja
sub
je
rol
or
mov
aad
cmp
test
cdq
gs
dec
fldcw
rcr
sti
and
pop
adc
jb
dec
das
pop
test
xor
retf
adc
out
inc
ins
out
or
rol
jp
stc
das
ret
ja
ja
stos
std
xchg
jl
jl
xor
inc
out
add
xchg
pop
adc
js
cdq
test
cmp
mov
scas
or
and
mov
outs
call
or
cmps
bts
pop
iret
mov
in
jecxz
add
pusha
inc
aad
mov
ret
mov
add
lds
xor
jecxz
mov
shl
movs
jmp
pop
xor
mov
mov
sub
pop
popf
pop
adc
call
loopne
inc
sbb
in
xor
mov
sbb
outs
or
outs
xlat
and
test
shl
jmp
mov
shl
ret
pushf
fimul
outs
mov
popa
mov
pop
retf
mov
push
loop
cld
into
cdq
jle
das
xor
and
sub
add
mov
mov
jb
jle
not
shrd
hlt
je
xor
xor
mov
sub
push
(bad)
(bad)
loop
or
dec
adc
pop
pop
inc
mov
rol
dec
jmp
mov
shl
repnz
shr
or
mov
inc
mov
aam
pop
data16
jo
pop
test
aaa
push
imul
and
cs
jp
add
ss
mov
xchg
ins
das
fnstcw
jmp
inc
addr16
stos
pop
xor
(bad)
xchg
(bad)
jo
fild
fwait
xchg
(bad)
adc
adc
sub
adc
mov
sbb
movs
ja
stc
jge
mov
stos
inc
sub
in
mov
inc
pop
int3
outs
mov
and
dec
mov
cmp
outs
push
aam
mov
in
mov
call
dec
rcr
scas
mov
jmp
mov
mov
cwde
stos
and
outs
call
mov
inc
shl
cmp
cmp
das
xor
dec
mov
clc
sub
fidiv
or
inc
clc
ret
dec
pop
cld
pop
xlat
sbb
(bad)
mov
inc
into
rcl
adc
xchg
cwde
jmp
and
cmp
(bad)
xchg
retf
enter
ret
push
dec
push
xchg
rol
and
mov
cli
das
xchg
sbb
sbb
cmp
jb
push
cld
sub
jmp
xchg
rol
cs
or
cdq
or
xor
shl
adc
sub
or
mov
inc
call
adc
cmp
cmp
mov
jne
stc
or
outs
int3
xor
dec
jl
and
mov
test
mov
div
sbb
cmp
test
pushf
sbb
jno
and
test
call
ja
pop
mov
mov
fld
xlat
enter
xchg
inc
in
fnsave
cli
int
sti
jmp
adc
push
push
xchg
inc
gs
and
test
in
xor
push
into
fnstsw
mov
xchg
push
cmc
lock
daa
sbb
adc
mov
jne
cmp
in
ficom
push
cmc
out
inc
lods
cli
jge
fdivr
das
call
jae
cli
imul
sbb
sti
out
cmp
mov
in
out
dec
or
pop
out
and
and
dec
push
fstp
dec
xor
xor
call
cli
jmp
mov
mov
add
mov
pop
dec
add
sbb
and
std
dec
xor
pop
call
pop
push
ins
daa
adc
xor
xor
jg
and
inc
cmp
cmp
add
and
adc
dec
add
fmul
retf
sub
arpl
lods
pop
jae
std
sahf
mov
sbb
inc
pop
ss
mul
jp
imul
mul
mov
xchg
dec
mov
push
jne
js
stc
imul
cdq
les
mov
test
and
pop
xor
iret
jg
idiv
xchg
mov
jg
mov
inc
retf
cmp
or
add
mov
mov
push
xor
xchg
and
adc
jecxz
jno
pusha
mov
push
mov
mov
adc
cmp
sahf
stos
cmp
xchg
mov
mov
sbb
push
outs
fwait
jg
cs
push
mov
(bad)
pop
sub
push
mul
mov
add
stc
dec
sub
arpl
aad
jne
jge
lods
or
sbb
aam
pushf
or
sbb
ret
xchg
or
addr16
daa
imul
mov
je
lods
cmp
loopne
xchg
mov
and
cmp
jg
add
and
mov
pusha
cwde
rcl
dec
jae
cmps
popa
inc
ret
fidiv
je
ror
retf
xchg
aam
mov
cmp
sub
mov
jmp
js
cmp
jmp
mov
es
cmp
push
adc
jb
inc
(bad)
ret
push
sub
jge
(bad)
lock
dec
adc
fiadd
(bad)
xlat
mov
pop
ficomp
mov
jecxz
jne
jp
inc
fdiv
dec
cs
pop
movs
sbb
(bad)
std
fsub
xor
icebp
sub
push
xor
arpl
je
or
mov
adc
(bad)
cdq
call
sub
jecxz
jo
and
mov
sbb
retf
sub
into
scas
(bad)
fsub
retf
mov
repnz
aam
jb
push
fs
push
sub
enter
xchg
aas
fild
pop
add
pop
lahf
in
sub
mov
loop
sub
gs
push
out
pusha
cwde
fisttp
sbb
lds
ret
les
lahf
aaa
sub
call
jnp
mov
ret
jne
stos
push
popa
jmp
sub
lahf
mov
or
in
and
sbb
push
int
cli
rcr
js
neg
pop
push
aam
pop
sub
xor
pushf
push
jg
cld
pusha
pop
xchg
cs
push
shl
ret
mov
mov
dec
in
mov
call
out
adc
mov
dec
fcom
dec
in
ret
xchg
pushf
xor
jmp
sub
and
jae
sub
popa
xchg
clc
paddd
in
push
mov
and
jnp
dec
test
xor
jp
lds
test
outs
inc
imul
cmp
fist
push
pop
sub
mov
or
mov
inc
idiv
adc
stc
(bad)
sti
fld
jmp
pop
sub
mov
mov
ficomp
pop
and
sahf
es
inc
add
or
test
pop
fdivr
xchg
inc
cmps
jne
aaa
sbb
shr
int
aaa
js
out
push
adc
or
mov
inc
push
test
mov
rcl
xor
pop
mov
clc
mov
pop
retf
push
ret
and
mov
dec
mov
arpl
mov
jnp
fldenv
and
loopne
fsub
lds
xchg
add
push
inc
pop
bound
mov
repz
fwait
sbb
sbb
jg
scas
std
cmp
sbb
test
dec
jl
fsubr
imul
mov
mov
js
(bad)
test
out
gs
mov
cmp
es
jl
jge
add
mov
inc
jbe
push
pushf
add
jno
lea
push
adc
sub
js
fbstp
rcr
out
(bad)
mov
xchg
xor
push
and
cs
mov
cmp
mov
xor
pop
push
ja
sar
cmc
call
in
mov
add
mov
es
gs
adc
xchg
jp
push
push
(bad)
pop
mov
jno
imul
idiv
int3
add
mov
test
or
int
je
add
jle
cmp
addr16
dec
(bad)
add
xchg
dec
ds
mov
mov
fwait
cmps
shl
inc
out
add
mov
xchg
push
jne
enter
cld
rol
inc
leave
test
pop
sub
rol
test
push
(bad)
mov
jmp
xor
mov
sub
jg
mov
ins
xchg
sub
ror
sti
rcr
dec
lods
les
cmp
xchg
xor
addr16
or
push
fs
add
bound
dec
push
jl
push
jo
adc
dec
mov
xchg
jne
inc
fiadd
xchg
xlat
push
jmp
push
shr
leave
mov
sub
fiadd
scas
inc
jnp
je
scas
cmp
fdivr
xlat
mov
mov
push
sub
shl
push
out
movs
(bad)
mov
xor
push
pop
repz
jmp
xor
in
into
bound
mov
mov
adc
lds
add
jl
dec
mov
aaa
xchg
shl
cmp
fild
int
aas
xchg
or
movs
out
sub
je
clc
std
cmps
xor
lds
xor
pop
fld
aam
fsubp
aad
retf
push
or
mov
xchg
jecxz
leave
cmp
dec
cli
jmp
xchg
(bad)
dec
shl
mov
loope
jns
mov
jmp
das
pop
dec
mov
fnstsw
test
iret
xchg
(bad)
hlt
mov
(bad)
pushf
push
ja
jp
sub
mov
arpl
jl
adc
and
popf
fisttp
mov
push
mov
sub
call
jmp
imul
cmp
dec
jne
or
add
retf
pushf
jno
push
jo
dec
push
iret
adc
ins
out
pop
ror
dec
imul
pop
dec
mov
push
scas
xor
jecxz
mov
mov
adc
cmp
mov
push
xchg
cmp
mov
push
shl
or
xlat
cmp
je
(bad)
mov
dec
retf
imul
lds
xor
jae
ins
imul
ficomp
dec
jmp
and
pop
sbb
jo
ret
fst
jmp
mov
dec
push
xchg
sub
imul
inc
mov
jle
add
xchg
jl
aam
loop
sub
repnz
cmp
jmp
mov
xchg
arpl
adc
popa
leave
xor
lea
push
into
pop
iret
push
xchg
dec
(bad)
test
setno
ins
add
xchg
loopne
or
and
sub
xchg
sbb
lods
sbb
and
push
mov
rcr
inc
add
or
inc
xchg
or
add
pop
jo
adc
and
stos
shr
jp
int3
sub
(bad)
fisubr
mov
sub
out
jns
loopne
sahf
pop
fbld
lods
fcmovb
ja
xchg
cld
add
iret
mov
mov
and
xor
push
ins
push
jge
inc
jae
ds
inc
jg
pop
or
pop
cmp
and
pop
mov
sbb
adc
mov
xor
mov
in
lods
into
sub
push
cmp
add
lods
pop
(bad)
ins
add
jmp
aam
in
and
add
adc
lds
gs
sub
push
imul
out
adc
movsx
xlat
cwde
dec
shl
pop
aad
push
inc
fmul
or
or
jae
mov
(bad)
mov
js
retf
outs
out
je
push
cmp
inc
inc
pop
mov
loope
dec
mov
pop
popf
sub
mov
cmp
mov
int3
mov
push
xchg
cli
push
jbe
pop
arpl
jecxz
sbb
mov
xlat
push
sahf
cmc
mov
cmp
enter
mov
push
inc
xor
pop
mov
out
lods
and
mov
bnd
cmps
dec
gs
lods
jns
cwde
sti
jp
pop
xchg
pusha
cwde
dec
cwde
aaa
shl
or
inc
and
lods
retf
es
daa
push
test
sub
aas
push
pop
jp
call
aad
call
fldenv
jmp
inc
cmp
inc
mov
imul
cmp
pop
lock
inc
inc
push
pop
sti
and
push
mov
lods
scas
shr
add
mov
adc
xchg
mov
sub
ins
add
push
ja
(bad)
iret
int
mov
daa
pop
sub
fisttp
adc
outs
cmp
clc
inc
adc
mov
push
adc
rcl
push
pop
mov
lds
push
mov
les
int3
inc
fs
(bad)
jle
out
repnz
lds
xor
stos
std
and
iret
fisttp
outs
imul
loope
pop
pop
ins
mov
jbe
neg
xor
xchg
cmp
push
cmps
aad
(bad)
mov
sbb
xchg
ds
pusha
popa
xor
and
gs
pop
ss
ret
add
sahf
pushf
dec
das
cmc
cmps
scas
jl
sub
push
loop
xor
repnz
fstp
ds
push
ds
iret
rcl
stc
out
popf
ins
sbb
ins
ss
mov
data16
xlat
(bad)
mov
cwde
daa
fisubr
loop
dec
cmp
cmp
jne
sub
nop
cmp
inc
jp
sub
shl
cmp
lsl
sub
pop
aas
jne
cmp
clc
sahf
sbb
movs
addr16
xor
pusha
push
xor
mov
and
push
inc
outs
loop
jns
jno
repz
cmp
sbb
inc
push
pop
push
xor
mov
test
mov
add
ja
js
jmp
rol
adc
xchg
jnp
je
out
add
jo
fs
in
mov
fstp
mov
mov
aas
loop
jno
mov
push
in
cmps
icebp
mov
bound
ja
and
sbb
mov
mov
push
out
loope
sub
jg
pop
arpl
dec
mov
xchg
jl
sub
xor
retf
call
sbb
cmp
loop
cmc
cdq
sbb
fistp
adc
sbb
xchg
(bad)
jmp
gs
call
or
and
(bad)
pusha
dec
and
lods
scas
ret
jmp
xchg
dec
loopne
cmps
sahf
inc
loop
in
ds
icebp
xchg
sub
test
iret
jmp
adc
cmp
fisub
aaa
pusha
mov
dec
ret
jmp
mov
xchg
call
mov
xlat
pushf
into
push
lods
push
into
adc
cli
mov
loop
sub
rcr
scas
popf
push
sahf
sbb
xchg
and
jl
xor
cs
xchg
loop
cdq
mov
jle
jl
scas
loop
adc
out
ret
pop
push
fwait
pop
call
push
xchg
loopne
hlt
xchg
rcl
sbb
add
fcom
and
mov
mov
mov
in
pop
in
vphaddbw
aam
cmp
push
push
arpl
shl
pmovmskb
mov
mov
sbb
clc
in
or
mov
loop
cmps
sbb
xchg
inc
mov
enter
leave
or
mov
imul
add
(bad)
pop
rcr
mov
jbe
push
adc
mov
sbb
in
push
fistp
cmps
mov
clc
add
and
sub
push
out
mov
pop
ins
sub
mov
cwde
aad
xchg
dec
dec
test
int
or
push
sbb
call
js
das
dec
pmuludq
push
xchg
push
test
jae
push
adc
pop
fist
and
dec
stos
fild
aam
loop
lock
inc
aad
data16
or
sub
adc
or
mov
mov
ds
push
xor
xchg
div
push
mov
mov
into
cmp
and
pop
fidivr
imul
inc
test
mov
sub
xor
data16
std
inc
cmp
cmp
std
or
jmp
loopne
(bad)
push
(bad)
movs
or
jae
push
jl
add
dec
sub
add
sub
mov
cmp
fs
sub
jmp
(bad)
scas
mov
xor
xor
jp
or
bound
dec
dec
pop
hlt
jne
xor
popf
push
lock
mov
cmps
xor
jecxz
aas
and
fwait
ret
cmp
loope
pop
xor
leave
mov
repnz
xchg
test
leave
xchg
push
loope
pop
mov
ret
in
jmp
in
cli
push
idiv
pop
cmps
loopne
ds
cli
jmp
data16
sub
adc
push
xchg
jp
ds
sub
mov
mov
sbb
cmc
push
jae
enter
dec
cmps
mov
xor
jne
dec
pop
(bad)
aaa
dec
into
push
sbb
loope
push
sub
popf
into
jnp
mov
aam
cmpxchg
loope
sbb
ins
fs
pop
add
(bad)
jno
xchg
adc
aaa
mov
push
retf
or
push
xor
jmp
aad
and
stos
push
mov
les
ret
iret
xor
jl
ins
xlat
jp
sbb
sub
sbb
call
out
pop
or
inc
push
jno
sti
xlat
stc
sub
mov
ret
mov
jb
jmp
aam
jle
sub
daa
stos
(bad)
xchg
mov
pop
add
ins
sub
(bad)
xchg
mov
jne
cmps
and
or
sub
mov
inc
cmc
pop
pop
rcl
inc
lods
jmp
sub
rcl
xchg
xor
mov
add
(bad)
out
jae
jl
ins
out
cmp
sub
inc
or
add
fstp
imul
repnz
sbb
loopne
xor
mov
adc
shr
mov
sub
mov
inc
pop
jg
adc
daa
dec
popf
and
ss
(bad)
movs
mov
xor
or
test
mov
push
cwde
ror
arpl
shl
cmp
adc
adc
pop
push
xor
dec
int
or
int3
adc
sbb
mov
mov
inc
outs
jne
push
cmp
mov
xor
sub
(bad)
mov
adc
scas
bnd
pop
cdq
stos
retf
shl
movs
loope
mov
mov
or
repnz
or
leave
rcl
jns
mov
inc
xor
push
loop
sbb
clc
pop
(bad)
mov
rcl
add
jg
and
mov
or
in
jp
jae
fisttp
push
in
pop
in
push
xor
jl
dec
stc
jne
mov
inc
adc
adc
ficomp
ins
pop
pushf
xchg
adc
call
out
mov
jns
cmp
int3
cwde
test
outs
(bad)
cmp
out
or
or
xchg
test
loop
jp
test
call
(bad)
adc
sahf
out
mov
in
retf
jne
dec
icebp
movs
nop
loop
add
pusha
test
pusha
aas
inc
mov
cmp
ret
cmp
sbb
addr16
imul
jnp
bound
je
sahf
xchg
ds
mov
mov
sbb
mov
or
lock
jns
outs
jecxz
pop
dec
sbb
dec
arpl
stos
mov
sbb
(bad)
not
xor
out
add
dec
js
push
mov
pop
push
pop
push
retf
mul
xchg
xchg
xchg
mov
jmp
icebp
and
cmp
cs
or
jmp
adc
dec
hlt
jbe
dec
pusha
push
jle
adc
jecxz
xchg
out
jne
pop
xchg
and
fs
aaa
movs
movs
rol
mov
ds
vpunpckldq
outs
pop
push
xchg
jbe
pop
sahf
imul
neg
jo
popa
push
in
push
jge
sbb
daa
shl
pop
cdq
or
rcr
pushf
mov
jle
jb
cld
push
adc
aam
cmp
ja
repz
in
rol
xchg
je
in
or
sub
nop
lea
xor
jle
daa
and
(bad)
cmc
sub
cmovne
stc
inc
cmps
pop
cmc
jge
jae
mov
fdivr
inc
dec
push
cdq
aam
ret
aaa
xchg
(bad)
mov
push
shl
repz
lock
mov
les
jl
sub
int3
or
push
sbb
adc
sub
or
idiv
lahf
sub
jecxz
icebp
xor
mov
aaa
cmp
mov
fs
cmp
sbb
retf
enter
mov
jnp
mov
mov
les
xchg
dec
push
out
inc
icebp
adc
js
out
stos
enter
mov
push
mov
out
jp
inc
mov
and
rcr
and
add
mov
pop
sahf
mul
or
stos
xor
fild
loopne
mov
or
enter
cld
test
retf
dec
push
xor
cld
sbb
cld
ss
push
pop
push
or
cs
sbb
aaa
dec
pop
jns
ins
jnp
add
clc
mov
jecxz
popf
inc
scas
cmovae
push
sar
fadd
dec
adc
icebp
retf
loope
out
mov
sbb
lahf
(bad)
mov
arpl
sub
nop
(bad)
leave
mov
xchg
je
leave
push
out
xlat
shl
das
or
adc
leave
jp
ror
xchg
dec
or
jb
inc
(bad)
xchg
das
ror
fwait
nop
in
movs
stos
mov
pop
pop
mov
pop
into
out
imul
adc
or
and
mov
sbb
xor
pop
stc
call
inc
inc
cdq
addr16
sahf
aad
mov
jnp
or
adc
inc
dec
mov
es
lods
pop
ss
clc
xlat
jge
jl
je
xchg
out
in
loope
pop
ins
fdivr
out
xor
icebp
out
cmp
add
outs
call
adc
xchg
aam
xor
aaa
xor
daa
mov
pushf
fisubr
out
test
adc
inc
arpl
push
shl
xor
call
iret
sub
cmp
add
push
lahf
and
loopne
outs
add
and
fcom
jl
add
jmp
mov
mov
or
test
push
xchg
and
cs
aam
test
add
lea
and
adc
jmp
fisub
shr
sub
cmp
(bad)
fisttp
dec
out
mov
outs
and
cmc
jno
sub
pop
jp
ss
mov
arpl
nop
aad
(bad)
pop
jle
mov
xor
out
inc
mov
cmp
sbb
fild
icebp
sbb
dec
xchg
enter
sbb
mov
dec
adc
mov
and
rcl
xchg
call
jmp
fbld
lods
xor
stos
and
xchg
xor
test
mov
add
fdivr
mov
and
xor
sbb
sahf
jl
nop
push
pop
in
(bad)
jecxz
xor
mov
push
inc
out
mov
mov
xchg
ret
out
sbb
stos
push
scas
dec
jp
push
inc
pop
les
rcl
es
loopne
out
push
out
push
push
push
xchg
imul
(bad)
xchg
stos
mov
jge
pop
(bad)
and
and
or
and
and
rcr
mov
fwait
rcr
fcmovb
shl
xchg
retf
call
mov
xchg
push
scas
not
fild
push
mov
frstor
out
jecxz
mov
(bad)
xor
pushf
cmp
add
adc
loop
dec
(bad)
jp
scas
pusha
jecxz
cmc
mov
scas
xchg
jo
and
lea
sbb
icebp
xchg
jp
sahf
mov
inc
(bad)
push
sbb
mov
mov
pusha
cmps
add
aad
push
leave
xor
out
and
movs
push
push
cmp
mov
std
lds
or
call
(bad)
ficomp
in
pushf
mov
or
mov
jbe
fs
(bad)
xchg
sti
mov
cld
and
mov
and
add
std
push
retf
sub
fidiv
jnp
jbe
std
jecxz
jp
aas
sbb
push
jg
mov
scas
cli
mov
push
dec
daa
push
in
popa
pop
lods
xchg
dec
test
adc
iret
push
ja
adc
jge
ret
inc
push
xlat
ficomp
test
xor
out
iret
mov
or
jo
ja
jecxz
inc
xchg
add
inc
inc
mov
jbe
fwait
jbe
pop
aad
std
rol
mov
and
jmp
scas
jmp
ins
push
in
xchg
and
mov
push
push
ins
(bad)
sub
and
xor
bound
xor
push
push
or
mov
sub
mov
xchg
adc
pop
mov
repnz
(bad)
sub
call
mov
mov
cmp
fcomp
cmp
inc
sbb
xchg
xor
outs
setno
sahf
dec
cmp
daa
adc
imul
mov
sub
lods
cmp
add
mov
xchg
sub
movs
data16
adc
das
aas
push
add
mov
or
push
mov
hlt
fmul
gs
cmc
add
repz
(bad)
femms
jnp
test
xchg
mov
hlt
push
mov
ss
pop
nop
je
inc
adc
jmp
pop
mov
fsubr
shr
lods
mov
mov
xor
cli
scas
and
pop
ror
in
shr
lods
ror
je
ja
sti
out
outs
mov
xor
xchg
add
lock
inc
pop
mov
pop
pop
dec
es
jmp
add
fisub
fild
ret
gs
sbb
frstor
push
fwait
inc
xor
arpl
inc
sbb
fnstsw
fst
fs
bound
movs
aaa
cld
ret
shl
rol
(bad)
shl
push
jle
inc
sub
sub
mov
jl
mov
sub
in
xor
mov
mov
xlat
in
aaa
daa
bound
adc
adc
cli
ds
pop
(bad)
jmp
adc
in
sbb
mov
fsub
rcl
sbb
jae
popf
xor
stos
sbb
dec
push
lea
push
pop
nop
sub
cmc
adc
loop
popf
scas
ja
add
xchg
mov
dec
stos
mov
ins
daa
fidiv
aas
into
bound
mov
in
cmc
or
test
inc
clc
and
xchg
icebp
jae
(bad)
fadd
add
mov
shl
cmps
leave
xor
cmp
popf
and
fistp
imul
mov
fidiv
jecxz
jbe
(bad)
dec
ffreep
or
and
jae
pop
test
push
sbb
jl
cmc
mov
fdivr
mov
mov
je
stos
cld
fwait
cmp
sbb
mov
div
pop
mov
mov
mov
outs
jno
or
mov
dec
jns
aad
pushf
(bad)
xchg
outs
jb
je
xchg
imul
cdq
jecxz
js
sub
dec
mov
mov
jne
popf
test
pop
fmul
mov
cwde
mov
sahf
in
call
dec
stos
push
jl
jne
shl
pop
mov
das
mov
out
lds
or
and
push
mov
push
ins
ret
loopne
int
jl
je
xor
jmp
or
and
inc
leave
sbb
js
hlt
loope
jg
rcr
repnz
repz
ja
cmp
fcom
xchg
or
iret
mov
in
lock
jne
adc
cdq
xchg
xor
ror
mov
test
bound
pop
(bad)
adc
and
in
inc
addr16
paddb
clc
call
xchg
sbb
pop
(bad)
out
stos
inc
mov
cdq
daa
sub
scas
int3
es
bound
or
or
loope
je
fist
bound
ja
outs
jg
leave
pop
cwde
aam
jmp
loop
adc
inc
arpl
inc
dec
rcr
(bad)
int3
addr16
(bad)
shr
in
jg
cld
pop
aam
push
mov
or
imul
xchg
fcomp
lea
pop
retf
and
dec
pop
mov
and
call
pop
dec
mov
jb
movs
xor
sub
out
mov
in
call
mov
or
out
cld
lahf
arpl
call
sbb
jae
data16
sub
jecxz
daa
push
enter
sub
xor
fs
lods
mov
lds
shl
rcr
mov
jl
cmp
and
stc
stos
jmp
pop
in
mov
mov
sbb
xor
push
push
xlat
lahf
add
sbb
mov
xor
mov
push
pop
inc
jmp
int
aaa
pop
test
jmp
xrelease
test
and
aad
and
add
xor
adc
add
pop
test
rol
scas
or
call
xchg
ss
gs
out
in
jge
stos
adc
xchg
pop
xor
cld
fimul
les
fdiv
mov
dec
stos
popf
loope
sub
imul
lods
inc
adc
mov
or
ficom
jae
int
xchg
push
mov
bound
adc
in
repz
push
xchg
cld
das
mov
loopne
fwait
ss
or
adc
fmulp
aad
les
mov
push
cld
jae
imul
fdiv
icebp
test
push
daa
push
sub
test
retf
cmps
add
int
fs
pop
jmp
push
bound
test
inc
fdivr
scas
outs
in
jmp
push
cmp
and
mov
in
jb
cmp
or
xchg
sbb
test
mov
scas
sbb
mov
and
leave
inc
inc
adc
sbb
inc
pusha
popa
jmp
push
mov
jns
or
pop
adc
das
mov
scas
inc
test
dec
jmp
ror
lea
cdq
inc
enter
pusha
mov
test
xchg
mov
mov
loopne
or
cli
sub
inc
not
sahf
jb
cmp
arpl
cmp
cmp
mov
popa
mov
rcl
mov
out
adc
cmp
cmc
pop
dec
imul
sahf
inc
xchg
retfw
nop
jg
mov
inc
mov
enter
or
aas
enter
aas
sub
repnz
dec
shl
adc
mov
in
add
dec
dec
jp
adc
mov
aam
lock
inc
sbb
pop
movs
(bad)
cli
loopne
jl
fidiv
lds
lods
push
push
fs
out
rcl
or
call
mov
out
cli
inc
ins
(bad)
or
(bad)
jecxz
adc
push
mov
into
daa
sti
inc
lods
xchg
je
fsubr
scas
sub
ret
add
(bad)
call
jle
call
call
mov
pop
push
adc
ror
jecxz
xor
fiadd
pusha
or
pusha
pop
test
sbb
cmp
xchg
ins
stos
lods
rol
imul
daa
into
sbb
js
push
mov
sub
add
pop
stos
in
rol
jl
out
mov
in
cli
hlt
mov
dec
aad
(bad)
lahf
mov
data16
jmp
icebp
into
or
data16
push
push
mov
dec
xchg
dec
sbb
jb
addr16
xchg
inc
cmps
mov
ins
aam
and
arpl
cdq
std
lahf
dec
mov
pop
and
shl
fs
xor
out
adc
sti
mov
stos
mov
sbb
push
inc
pop
xchg
inc
jno
and
mov
aas
sbb
mov
push
retf
jae
mov
sbb
mov
or
pop
jg
xchg
pop
pusha
aad
in
lea
xor
les
add
jns
cmps
int
lahf
(bad)
iret
(bad)
cmp
fcomp
cli
add
sub
push
ins
retf
xchg
sub
jge
xchg
test
or
movs
js
xchg
enter
lahf
mov
or
mov
mov
mov
hlt
mov
call
mov
lods
push
scas
push
jae
adc
movs
cmp
xchg
jne
icebp
or
out
cs
jg
cdq
outs
pop
aad
aad
out
les
jmp
and
jb
test
mov
stos
ret
ja
pushf
inc
add
and
jne
retf
mov
mov
dec
add
mov
cwde
dec
adc
repnz
or
inc
lock
xchg
push
gs
mov
dec
fadd
or
nop
add
enter
sbb
scas
xor
stos
dec
ins
dec
xor
js
loope
pop
fiadd
inc
mov
push
mov
ja
xor
shl
pop
add
fisub
cmp
xor
mov
sbb
hlt
xchg
jp
xchg
push
mov
loope
mov
arpl
mov
push
xor
movs
sti
jecxz
mov
cmp
xchg
inc
popf
jmp
div
mov
test
inc
lods
stc
fisub
in
push
std
push
aam
add
cmc
or
xor
vmwrite
stos
cld
add
sub
jno
dec
adc
sub
lods
outs
std
mov
xor
or
dec
pop
aad
pop
jle
push
jnp
pop
dec
sub
(bad)
cld
shl
cli
jg
pushf
xlat
mov
sbb
cmp
in
loop
inc
mov
repz
cmc
repz
jne
pop
add
cmp
sbb
fisttp
cmps
das
inc
lods
int3
aam
mov
in
stc
pusha
pop
xor
xlat
and
push
sub
jge
ins
dec
in
push
mov
pop
mov
popf
mov
gs
lahf
jb
mov
and
pop
cmps
cmp
xlat
adc
xlat
push
movs
mov
push
pop
in
loop
aaa
fild
inc
mul
push
popf
push
pop
ins
dec
or
inc
test
(bad)
sbb
in
cmp
dec
mov
or
sub
nop
in
scas
out
sbb
call
std
and
xchg
mov
mov
push
movs
loop
xor
and
aaa
pop
cli
imul
push
xchg
dec
adc
xchg
cmp
sbb
sbb
xchg
jnp
mov
xor
and
cmp
pop
pop
test
adc
idiv
mov
mov
sbb
xor
mov
les
add
jae
pop
dec
daa
adc
add
sub
push
xchg
arpl
mov
xor
xchg
mov
test
adc
test
shl
std
ins
xor
pop
mov
adc
pop
fisttp
pop
fs
shl
sub
popf
adc
ret
sahf
pop
ret
sub
outs
call
bound
fs
lea
pop
sti
xchg
pop
jb
popf
jns
and
xlat
shl
xor
cmp
mov
(bad)
jne
stos
mov
cmc
mov
(bad)
and
inc
(bad)
xor
jnp
dec
sbb
sti
fisttp
inc
xor
mov
sbb
(bad)
xor
dec
pop
adc
xchg
mov
inc
add
adc
cld
outs
cdq
les
or
or
add
cmps
gs
iret
fcmovbe
adc
aaa
js
add
add
adc
cs
pop
inc
lods
scas
pusha
ret
mov
mov
cli
fs
ret
rcr
add
mov
fidiv
or
cwde
nop
in
mov
(bad)
and
pop
adc
cmp
je
(bad)
cmp
jae
scas
add
sahf
inc
jbe
sar
jne
push
ins
xlat
cmc
(bad)
sub
add
cmps
pop
sub
push
xchg
test
cmps
xchg
jne
cmps
repz
inc
push
mov
cdq
xor
daa
dec
call
mov
int
popa
shl
xchg
xor
(bad)
jg
push
add
or
rcl
xor
sbb
int
and
mov
pushf
mov
out
mov
stc
sbb
xor
push
icebp
adc
mov
daa
lods
ins
adc
fcom
in
xchg
ror
mov
cs
pop
or
mov
or
imul
sbb
cdq
je
in
cmc
popa
push
pop
mov
fisub
aad
adc
or
int
enter
jge
mov
pop
adc
pushf
mov
mov
dec
movs
(bad)
shl
push
outs
pop
jnp
dec
imul
sub
mov
or
leave
and
push
push
les
retf
add
pop
ins
pop
mov
or
lods
sub
xchg
ret
adc
cmc
js
sbb
das
movs
add
or
cmp
sahf
add
outs
scas
inc
mov
push
inc
mov
pop
out
cs
lea
test
cld
jns
cmps
out
rol
mov
nop
push
mov
adc
xor
pop
push
(bad)
int
pop
pop
daa
lahf
cmc
loop
cmps
lahf
nop
aam
hlt
fcomp
adc
sbb
mov
or
mov
jp
or
lock
add
push
sub
mov
popa
mov
push
and
dec
in
(bad)
xor
xchg
xor
call
bound
cmp
lods
pop
mov
(bad)
xchg
inc
stos
out
sbb
loop
stos
aad
mov
daa
inc
movs
sahf
outs
jecxz
dec
ret
(bad)
fld
and
cdq
jne
sahf
test
lea
xor
mov
adc
cmps
and
jae
test
(bad)
push
cmp
add
das
pop
repz
xlat
scas
fdivr
fst
loop
bound
aas
out
into
mov
(bad)
into
and
test
pop
push
dec
data16
sti
popf
and
pop
lahf
adc
iret
fimul
(bad)
adc
push
fistp
repnz
cmp
or
mov
jo
mov
stc
call
inc
mov
and
mov
inc
iret
pop
in
dec
in
lahf
(bad)
and
movs
(bad)
div
xchg
push
jmp
xchg
(bad)
or
pop
add
(bad)
pop
jmp
aad
(bad)
jae
xor
mov
outs
outs
imul
push
test
inc
adc
div
jle
gs
inc
xor
push
lods
adc
or
imul
loop
dec
cmp
inc
mov
lahf
popf
adc
int
push
outs
dec
out
idiv
and
push
frstor
cmp
das
adc
test
mov
lods
std
test
xor
xor
sbb
dec
les
sub
pusha
stos
(bad)
sbb
loope
inc
ja
adc
dec
add
rcl
cmp
sti
jb
aad
push
mov
adc
and
mov
add
(bad)
cmps
dec
or
test
test
sub
add
sbb
and
xor
mov
aam
rol
ins
(bad)
mov
mov
in
push
jno
and
jbe
cmps
in
aam
adc
push
gs
movs
mov
pop
out
xchg
loope
loopne
mov
out
call
add
hlt
inc
(bad)
daa
adc
push
cld
rol
stos
add
sbb
gs
cmp
loop
sbb
mov
jae
das
inc
out
sub
in
mov
ins
int3
out
out
cmp
xchg
ss
fwait
test
shr
sbb
movs
push
jmp
add
or
xor
sahf
push
loopne
add
(bad)
out
pop
pop
dec
mov
nop
push
aaa
mov
jge
push
pop
loope
es
inc
push
enter
into
xor
pop
cmp
pusha
pop
mov
(bad)
jg
mov
inc
cld
xor
int
lds
jno
out
jmp
inc
sbb
repnz
lahf
xor
(bad)
out
adc
(bad)
cmp
cmc
pop
xlat
in
out
call
fmul
lods
int3
cmp
shl
push
and
outs
xchg
retf
in
cmp
adc
lods
adc
mov
stos
add
inc
xlat
int
cwde
repz
cmp
push
sub
or
mov
sbb
pushf
xor
int3
stos
push
jnp
pop
rcr
sbb
jae
pushf
inc
sbb
sbb
lock
in
aad
and
(bad)
adc
sub
sbb
ret
dec
lods
ret
sub
mov
or
addr16
hlt
dec
call
pop
xor
daa
and
mov
mov
jns
scas
dec
aam
ret
cmp
add
mov
xchg
mov
inc
out
in
popf
adc
xchg
(bad)
mov
ja
push
fldcw
cwde
in
xor
inc
xor
jne
push
ja
iret
mov
inc
ins
adc
lods
dec
pusha
nop
mov
sub
ret
mov
aaa
leave
(bad)
leave
lock
shl
xor
add
lahf
sub
test
sbb
movs
xchg
cmp
pushf
inc
mov
fadd
les
jl
mov
add
xchg
not
or
out
jecxz
pop
(bad)
(bad)
jns
cdq
(bad)
fsub
outs
and
lahf
add
arpl
es
repnz
cs
jmp
leave
pop
cli
mov
mov
pop
popa
jmp
xor
xchg
iret
aas
adc
dec
or
sbb
or
cmp
cmp
jne
pop
xchg
inc
xchg
addr16
mov
and
sbb
xor
and
dec
dec
jo
mov
cmp
jae
imul
test
xchg
sti
test
push
into
mov
cmp
inc
jae
adc
cwde
inc
xor
adc
mov
dec
test
sbb
pop
rcl
outs
and
js
repz
jns
and
mov
test
out
jnp
cmp
rol
into
dec
sti
clc
clc
cmps
push
sbb
fsub
test
cwde
xchg
stc
lods
jl
out
fadd
daa
xchg
ss
jnp
sahf
retf
xor
sti
stos
push
pop
xchg
imul
ss
inc
es
(bad)
scas
into
fistp
cmp
mov
push
das
ret
push
jno
pushf
inc
lds
or
ficomp
nop
ins
adc
inc
icebp
fstp
push
cmps
lods
dec
dec
xchg
lock
xlat
mov
aaa
mov
addps
mov
pop
xchg
xor
mov
jbe
call
in
int3
movs
jmp
retf
inc
mov
mov
(bad)
ds
mov
dec
sub
pop
mov
add
call
stc
sti
inc
and
adc
xor
lahf
fld
mov
(bad)
outs
mov
stos
xchg
(bad)
mov
out
out
inc
adc
xor
leave
adc
test
rcl
jl
sbb
arpl
mov
push
(bad)
cld
add
popf
cmc
mov
aas
push
js
js
xor
repnz
mov
ficom
popf
dec
inc
sbb
cmp
or
sahf
push
pop
push
sub
cmp
cmp
je
adc
jnp
(bad)
dec
xchg
add
in
mov
inc
lock
cmp
xlat
push
popf
out
add
jbe
pop
jp
or
fsub
cmp
mov
pop
jp
mov
mov
sti
in
dec
add
cmp
ret
add
ss
rol
js
add
sub
sbb
cld
mov
dec
movs
call
xor
outs
test
mov
test
xor
test
loop
lahf
imul
add
jmp
les
(bad)
push
jl
sahf
ss
lahf
sub
rcr
sar
ret
dec
rol
sub
ja
in
leave
sbb
je
repz
sbb
ins
ss
push
hlt
aaa
loope
pop
pop
adc
xchg
inc
push
stc
dec
imul
leave
mov
pop
and
cwde
aaa
mov
xchg
inc
or
add
or
xchg
das
xor
(bad)
imul
lahf
in
push
imul
push
pop
pop
fxch
sub
xor
nop
add
mov
xchg
pushf
pop
push
stos
xchg
or
xor
fs
in
mul
fs
add
xchg
cli
adc
gs
daa
ficomp
cmps
das
mov
dec
aas
xor
jbe
push
fcomp
adc
(bad)
or
dec
jnp
add
retf
pop
mov
pop
mov
xor
int3
pop
hlt
mov
outs
and
pmaddwd
daa
jbe
xchg
out
scas
jl
sahf
mov
pusha
out
jg
xor
push
fcmovne
(bad)
test
inc
sub
popa
jae
mov
test
fs
mov
pop
(bad)
rcr
in
jge
lea
lods
in
out
mov
add
sbb
mov
pop
mov
xchg
adc
sub
repz
pop
pop
and
jmp
push
cmp
(bad)
jbe
fxch
dec
jmp
fild
push
mov
xor
fwait
arpl
jle
sub
je
or
adc
in
stc
loope
xchg
repnz
movs
adc
jmp
std
rol
push
in
push
bound
bound
scas
leave
add
movs
lea
jp
fnstcw
std
int
pop
mov
adc
sub
cwde
mov
sub
out
sahf
fcom
push
inc
mov
push
(bad)
xchg
cmc
xchg
scas
ins
out
inc
sbb
ins
cdq
push
in
aad
in
mov
cmp
enter
js
sub
lds
inc
and
push
icebp
adc
rcr
fs
aas
pop
mov
ret
(bad)
or
push
movs
ins
xchg
sbb
adc
call
imul
push
mov
nop
mov
xchg
das
ror
std
jnp
inc
test
add
in
ret
pop
cmp
test
mov
ja
mov
in
and
pop
pop
inc
sbb
popf
or
push
add
ret
xchg
jmp
mov
adc
pop
add
pusha
jp
jb
mov
shl
neg
out
adc
mov
mov
clc
xchg
in
repnz
arpl
lods
(bad)
push
cmp
push
mov
mov
adc
(bad)
movs
ja
mov
les
clc
stos
push
xor
stc
shr
or
jne
cs
lods
mov
mov
mov
add
mov
jnp
xchg
(bad)
sub
fist
test
lods
shl
mov
imul
sbb
les
loopne
popa
jmp
mov
xor
pop
shl
push
and
jo
retf
hlt
call
xchg
mov
or
add
jl
adc
cmp
rol
fs
mov
(bad)
das
mov
xor
inc
rcl
jmp
jb
dec
mov
push
in
sbb
mov
adc
es
and
(bad)
jns
gs
leave
xchg
cs
into
cdq
in
in
and
call
jp
add
cmp
arpl
push
push
int
fnsave
jg
inc
mov
pop
out
add
fbld
mov
iret
test
adc
inc
xor
test
(bad)
dec
add
or
push
xchg
pusha
push
retf
inc
retf
addr16
push
pop
std
dec
stos
xchg
pop
or
xor
inc
dec
add
out
mov
aam
mov
aam
(bad)
adc
inc
scas
(bad)
jge
inc
jmp
int
jns
stos
xor
adc
out
inc
ja
in
sub
pop
std
fwait
in
cmp
sbb
mov
sub
mov
adc
jns
nop
inc
sbb
xchg
fs
idiv
(bad)
sub
cdq
icebp
out
mov
clc
push
jb
ds
jno
ret
es
nop
inc
jp
cld
mov
neg
inc
gs
xor
or
mov
pop
pop
int3
pop
stos
shr
cli
mov
xchg
test
mov
and
mov
push
push
sub
push
sub
js
jle
xchg
mov
je
mov
inc
das
xor
std
ret
sbb
stc
aaa
pop
mul
or
mov
add
lds
pop
ins
imul
pop
dec
ret
dec
jle
fisub
mov
lds
sbb
mov
jg
add
cdq
adc
cmps
stos
lods
push
push
jno
shl
dec
call
vmwrite
test
mov
imul
xor
test
cwde
sar
dec
cmp
cld
inc
xchg
pop
mov
fucomi
pop
rol
pop
imul
movs
jno
shr
fsub
pop
mov
sub
xchg
lahf
in
into
in
hlt
jne
add
add
pop
or
adc
cmps
push
retf
hlt
ss
adc
call
cmp
lock
jb
pushf
jne
push
mov
shl
cmp
adc
shr
or
jo
mov
jo
adc
cmp
mov
sub
jbe
mov
xor
les
cmp
retf
stos
fiadd
pop
or
push
sahf
sub
mov
je
mov
repnz
adc
mov
or
inc
mov
ror
inc
sbb
jg
and
mov
in
push
les
add
add
lods
add
or
xchg
mov
sbb
inc
sar
scas
xchg
in
in
mov
mov
cmp
or
popa
leave
(bad)
fnstsw
popa
push
fist
lds
sub
ret
aam
sbb
stc
pop
dec
jg
pop
fldl2t
push
test
js
pop
and
sbb
and
push
(bad)
pop
aam
sbb
xor
and
jb
stc
push
sub
cwde
pop
scas
scas
retf
addr16
and
fstp
mov
out
movs
repz
fdivr
imul
pop
cmp
push
ret
dec
cmc
fdivr
cmps
out
mov
mov
pusha
sbb
sbb
daa
adc
cmp
in
sub
jecxz
lahf
dec
mov
mov
outs
jae
mov
std
(bad)
out
retf
push
jne
fwait
je
gs
sbb
fs
xchg
adc
aam
pop
push
pop
mov
mov
mov
xchg
xor
fisub
fld
in
xchg
mov
push
fdiv
aam
dec
xchg
mov
int
jns
pop
dec
call
xor
or
add
pop
push
pop
inc
fs
data16
or
icebp
int
test
mov
enter
or
pop
inc
inc
pusha
ror
cmp
cmp
or
fmul
jl
stos
mov
(bad)
and
sbb
outs
and
ret
mov
sub
push
movs
push
jmp
out
bound
pop
pop
push
dec
loopne
mov
retf
aam
xchg
adc
mov
jnp
in
inc
aas
aad
fadd
pop
inc
aaa
mov
jl
fcomp
test
cwde
mov
daa
mov
sbb
add
arpl
lahf
jmp
shl
fdivr
push
dec
inc
js
push
dec
pop
ror
call
add
mov
push
pop
stc
inc
push
jmp
push
cmc
push
mov
call
sub
jl
pushf
dec
cli
js
push
dec
mov
mov
adc
jecxz
mov
mov
fs
jb
mov
inc
mov
dec
fwait
push
popf
xor
in
lea
jne
cli
(bad)
scas
mov
add
out
cli
stos
ret
call
cmps
push
rcl
jno
test
mul
adc
sub
(bad)
jp
ficom
jp
mov
test
pop
mov
mov
fcom
lahf
mov
inc
cmp
pop
(bad)
fld
cwde
in
daa
loop
sbb
adc
lods
push
cmp
xor
scas
rcl
(bad)
jbe
enter
mov
es
int
xchg
and
fisubr
scas
ror
mov
movs
mov
popf
daa
add
inc
mov
int
shl
mov
xor
dec
adc
mov
inc
shr
ss
mov
in
fst
cwde
out
lods
or
fdiv
pushf
fsub
mov
fild
in
lock
int3
icebp
xchg
iret
lods
leave
mov
aam
or
retf
lods
lea
in
mov
pop
jle
hlt
gs
xchg
mov
shl
jo
mov
das
popa
pushf
into
pop
push
ins
sahf
mov
ss
sahf
mov
cdq
bswap
jge
sbb
cwde
mov
mov
ret
lods
arpl
in
lods
mov
mov
mov
pop
repnz
cmps
xor
jne
jmp
mov
dec
add
or
jbe
cmps
add
test
fmul
dec
add
sub
(bad)
jmp
pop
xor
sbb
dec
rol
(bad)
leave
lods
dec
int
mov
shr
sbb
lea
test
fidiv
mov
pop
mov
jb
cmp
aas
inc
adc
sub
mov
pusha
enter
aad
add
push
adc
jge
mov
jle
sti
loopne
fs
pop
sahf
jbe
(bad)
(bad)
add
cmp
cmp
mov
add
retf
xchg
cmp
adc
sbb
push
push
loope
inc
or
inc
sahf
stc
dec
(bad)
dec
xchg
jg
sub
setne
inc
add
dec
mov
(bad)
xlat
imul
aas
mov
xor
fmul
jne
js
jae
aas
call
int3
fcmovbe
dec
mov
(bad)
leave
fwait
js
(bad)
jmp
push
int3
inc
lods
inc
rcl
and
in
stos
stos
fist
out
or
imul
cwde
and
pusha
pop
cmp
sti
retf
in
jmp
dec
aas
xchg
lock
pop
inc
cmp
scas
mov
aas
dec
fsubp
out
adc
adc
out
cdq
and
pushf
jmp
dec
mov
add
xor
mov
inc
cmps
xor
fidivr
test
add
mov
in
jo
std
loop
jl
push
dec
(bad)
cmps
adc
jnp
push
fisub
xor
scas
jl
cmp
push
mov
inc
push
in
add
mov
inc
fwait
ror
popf
jg
clc
stc
neg
mov
mov
ins
or
out
push
hlt
mov
mov
lods
mov
fst
mov
in
pop
pusha
add
je
mov
push
cmp
and
push
hlt
xchg
mov
or
xor
cld
and
and
outs
fsubp
in
jp
into
ins
cmp
pop
je
shl
xor
sar
mov
xor
pop
push
push
outs
mov
push
add
std
in
test
leave
or
mov
test
icebp
bnd
adc
in
ret
jp
sub
or
ret
pop
fisub
mov
adc
sub
and
jecxz
aas
out
shl
int
push
into
ins
inc
cwde
mov
pop
sbb
cmp
dec
xchg
pop
ror
sbb
inc
mov
mov
sti
sahf
dec
mov
mov
xchg
xchg
std
cmp
jmp
fwait
mov
int
mov
lods
enter
out
sbb
or
xor
push
cwde
(bad)
or
fwait
push
cmp
rol
pop
lds
in
mov
mov
inc
in
mov
fistp
icebp
inc
xor
xor
rcl
in
or
lods
lods
sub
xchg
aas
dec
int
or
cmp
add
inc
mov
and
fcmovne
data16
loopne
ret
mov
dec
inc
sti
mov
push
sub
and
neg
inc
xor
loope
jmp
(bad)
adc
les
inc
(bad)
push
pop
cmp
fwait
cld
jle
mov
jne
call
shl
test
or
imul
jmp
cdq
cmp
lahf
dec
les
pop
retf
push
dec
mov
mov
jmp
call
push
fmul
sub
mov
pop
mov
xor
inc
push
test
call
dec
je
fdiv
xchg
jbe
ins
xlat
mov
mov
mov
loop
cli
mov
popa
fadd
pop
or
test
sub
scas
dec
dec
lods
lods
cmp
imul
and
lock
jmp
and
cmp
aam
add
mov
jle
dec
xor
pop
push
(bad)
loop
loope
lods
mov
hlt
bound
xor
stos
mov
add
fistp
inc
loope
dec
dec
movs
xlat
mov
mov
inc
push
ret
adc
pop
fidiv
or
push
sub
movs
addr16
mov
mov
xchg
cmp
stc
js
imul
test
sti
cdq
mov
sub
lds
mov
shr
call
pop
jae
test
aaa
xchg
mov
and
in
xor
inc
sar
outs
dec
stc
jge
int3
sbb
lods
sbb
push
pop
jle
(bad)
sti
cld
adc
xchg
dec
mov
mov
out
loope
fbstp
xchg
or
adc
sbb
jo
stos
sar
add
rcl
or
cld
shl
gs
adc
pop
cmp
pop
cmps
inc
mov
jmp
jmp
inc
mov
xchg
dec
pushf
adc
mov
imul
mov
repz
les
fcom
(bad)
scas
push
das
rol
lods
mov
jbe
push
enter
push
jne
sbb
call
push
out
movs
aas
fdiv
mov
push
xor
js
packuswb
test
adc
xchg
jnp
mov
sbb
je
mul
jbe
pop
jmp
les
shr
cmc
push
adc
xchg
pcmpeqw
fdiv
jb
or
inc
dec
cmp
loop
lea
mov
(bad)
pop
mov
and
cmp
punpcklbw
mov
pmulhuw
pop
jmp
sub
mov
repnz
mov
retf
jbe
rcr
push
into
retf
lds
leave
repnz
fcmovnb
rcr
xchg
mov
add
shl
and
sbb
or
imul
in
pop
pop
loope
and
in
std
mov
xchg
push
mov
pop
hlt
movs
outs
inc
gs
sbb
add
mov
xor
jne
lock
psubb
movs
dec
(bad)
and
(bad)
jmp
sar
dec
jnp
xchg
jb
sbb
rcr
xchg
ja
push
aam
jmp
push
fdivr
hlt
outs
sbb
pop
mov
push
mov
in
ins
jp
out
jg
cwde
leave
fcomp
dec
jl
sub
ret
mov
or
sbb
mov
xchg
test
dec
js
out
(bad)
test
inc
lock
push
dec
aam
enter
jmp
pop
xor
jo
sbb
pop
or
inc
outs
xor
or
(bad)
mov
mov
mov
in
test
shl
(bad)
mov
mov
xchg
adc
cld
mov
test
test
push
daa
cdq
xchg
dec
out
xchg
mov
cs
jo
mov
sub
sbb
ret
jle
call
and
test
iret
clc
adc
hlt
popa
iret
fldenv
ins
push
add
jmp
sub
mov
mov
iret
sbb
pop
jge
ins
ror
and
push
adc
and
cmp
shl
jl
fs
out
push
push
(bad)
std
outs
mov
fmulp
loop
out
mov
and
sbb
ins
xor
in
sbb
jnp
push
sbb
xchg
cmp
les
das
outs
cmp
push
pop
xchg
call
clc
jg
xchg
cmps
add
add
(bad)
add
mov
cmps
add
jne
fidivr
jl
retf
mov
fwait
in
std
xchg
enter
das
inc
cmp
aaa
xchg
mov
(bad)
stos
xchg
dec
dec
cld
ds
shl
fidiv
inc
shr
add
sahf
jno
inc
jmp
mov
neg
pusha
xchg
mov
retf
in
mov
push
(bad)
int
gs
shl
jle
mov
inc
sub
mov
dec
sub
dec
mov
jo
test
xchg
cmp
fmul
aas
mov
jge
fadd
test
(bad)
gs
sub
push
push
repnz
(bad)
in
and
pusha
cld
xchg
xacquire
adc
out
fsub
adc
inc
push
and
inc
adc
sbb
mov
jle
out
jns
rol
inc
fnstenv
xor
dec
cs
gs
jno
mov
sub
lods
mov
dec
arpl
mov
test
pop
lods
inc
add
popf
mov
cmp
inc
rcl
lahf
clc
inc
jno
shl
push
daa
ins
push
sbb
pop
(bad)
aaa
pop
scas
inc
repz
sbb
cli
cdq
sub
mov
mov
ss
mov
mov
lahf
jno
xchg
cmps
inc
out
jp
inc
movs
xor
adc
xchg
lods
arpl
push
loop
lods
jle
inc
mov
cmp
mov
fst
out
retf
test
sbb
jnp
sub
test
inc
sbb
test
add
(bad)
ss
lock
test
call
jp
(bad)
push
adc
mov
push
in
jno
les
xchg
inc
adc
sbb
les
lea
test
ret
xor
movs
or
cmp
test
pop
mov
in
jnp
std
and
cmp
jae
ins
push
and
cmps
scas
or
jg
daa
jb
or
adc
sub
(bad)
bound
imul
int
and
cs
addr16
push
or
gs
xlat
adc
mul
xor
mov
jmp
jns
es
mov
adc
jle
push
in
es
mov
hlt
adc
mov
push
mov
addr16
jbe
dec
and
icebp
in
stos
sbb
hlt
push
fsubr
pop
and
sub
test
mov
bound
xchg
xchg
mov
pop
scas
int3
xchg
add
jecxz
adc
idiv
sar
mov
je
test
jb
mov
mov
adc
jb
and
adc
shr
inc
and
data16
std
jb
xchg
and
cmp
or
fld
ds
sub
pop
sub
loope
sar
loopne
cmp
nop
xchg
push
mov
and
xchg
xor
jecxz
(bad)
mov
push
ret
in
inc
or
adc
pop
out
cmp
or
lods
(bad)
jle
ins
fidivr
cmp
sbb
lods
fisttp
dec
outs
cmp
test
test
rdmsr
(bad)
mov
les
pop
add
mov
xchg
loop
inc
addr16
pop
pop
lods
jne
lahf
imul
inc
dec
call
ss
shl
aas
adc
int
inc
and
adc
fnsave
sub
or
dec
sub
xor
aas
inc
sbb
mov
sbb
dec
push
xor
cmp
cdq
ss
pop
mov
cmps
mov
aas
iret
jnp
fnsave
and
push
mov
rcl
add
ins
jb
rcl
cmp
movs
stos
dec
mov
xchg
push
into
retf
pop
aas
mov
adc
or
jbe
mov
out
(bad)
fs
push
and
xchg
lods
test
stc
mov
pop
sar
jmp
xchg
xor
and
js
fs
pop
jecxz
inc
jb
call
imul
jno
add
pop
fcmovne
popf
lea
andnps
jl
pop
in
push
jbe
inc
pop
ja
xchg
movs
jge
mov
shl
dec
inc
popf
lods
aam
cmc
sub
lock
sub
jmp
sub
dec
in
aam
push
inc
(bad)
adc
pop
mov
mov
cmps
pop
mov
push
or
sub
or
xor
call
inc
sub
bound
adc
sbb
dec
(bad)
gs
xchg
xchg
cdq
add
or
fstp
pushf
test
and
push
leave
sbb
call
push
cmps
or
aad
daa
out
mov
pop
jmp
mov
ja
add
lahf
pushf
jl
pop
mov
das
repz
xlat
add
shl
stos
sub
movs
stos
aas
fadd
inc
sub
inc
jmp
dec
in
inc
jl
jns
outs
xchg
repnz
xchg
xor
std
clc
aad
aaa
loope
in
jle
or
aad
cs
aaa
xchg
cmps
out
mov
sbb
enter
inc
aad
add
mov
jno
and
xchg
(bad)
inc
and
pop
popa
aad
stos
push
jo
mov
sahf
inc
out
sub
(bad)
rep
mov
pop
sub
call
and
out
(bad)
jmp
(bad)
ffree
(bad)
dec
jo
mov
fidiv
cs
mov
out
and
shr
cwde
xchg
jo
sub
cmp
or
push
pop
inc
sbb
xor
adc
test
out
and
push
add
add
add
sub
sahf
inc
ss
aaa
push
cs
jecxz
inc
jbe
ins
fistp
mov
aas
mov
xor
js
xchg
xchg
fist
xor
das
sub
sahf
adc
data16
xchg
loopne
imul
movs
jo
add
lods
add
fistp
fwait
(bad)
pusha
adc
xor
jmp
xor
lods
imul
mov
cmps
mov
int3
xchg
mov
imul
gs
inc
test
or
lds
in
jl
dec
mov
test
gs
call
inc
cmp
retf
or
xchg
xchg
in
adc
xor
into
movs
addr16
pop
mov
ficomp
push
movs
sub
jae
shl
ja
jno
mov
sub
sub
mov
add
sub
jns
jl
or
mov
mov
outs
inc
hlt
adc
int
sub
or
enter
dec
and
pop
loop
jae
jle
sbb
cwde
jmp
dec
inc
jb
adc
clc
cmp
xchg
mov
in
std
push
adc
dec
into
clc
out
jns
ss
mul
test
jmp
movs
sbb
inc
rcr
adc
xchg
adc
dec
mov
sbb
mov
xor
rep
sahf
shl
sub
sti
je
and
mov
je
lods
jg
js
loope
adc
imul
mov
fldcw
dec
repz
inc
xor
push
loope
fild
add
lea
(bad)
mov
push
inc
arpl
xchg
add
add
and
mov
movs
cmps
mov
add
(bad)
jg
fstp
mov
pop
dec
cli
cli
leave
mov
leave
mov
fwait
js
mov
and
push
mov
jnp
mov
and
xchg
cmp
fst
cmp
int3
jl
mul
push
xor
inc
movs
sbb
mov
sbb
and
nop
(bad)
xchg
dec
test
jae
cli
mov
sub
xlat
cdq
sbb
mov
(bad)
xchg
pop
or
push
test
pop
push
inc
ffree
inc
pushf
std
add
inc
(bad)
ret
pop
xchg
xchg
adc
test
sbb
xchg
inc
dec
mov
das
int
add
adc
mov
pop
div
xor
cmp
mov
out
mov
(bad)
sbb
dec
sbb
mov
xor
pushf
std
push
imul
xor
push
add
dec
lea
loop
shl
mov
pop
mov
ins
mov
cli
add
in
xor
lock
sbb
adc
mov
lods
inc
arpl
or
call
idiv
hlt
iret
dec
pop
dec
outs
nop
jno
add
test
scas
mov
data16
out
cmps
stos
in
add
pop
cmps
pusha
inc
call
cmp
lea
out
in
movs
movs
sub
jge
sbb
sub
aaa
daa
outs
ret
(bad)
retf
mov
gs
jns
mov
out
push
pushf
mov
sub
dec
push
scas
pop
mov
xchg
mov
sbb
ret
dec
or
pop
mov
inc
loopne
loope
cmp
rcr
ins
sub
xchg
and
popa
(bad)
scas
aam
mov
ins
mov
mov
and
jle
cmps
add
jl
aaa
addr16
mov
add
pop
cmp
or
dec
inc
call
pusha
lahf
sub
lahf
dec
push
jb
test
jl
aas
and
push
mov
xchg
fs
aad
xchg
test
jno
int3
cmps
xchg
cmp
out
bound
dec
cmp
pop
sbb
jge
mov
ror
mov
pop
add
inc
iret
and
mov
pushw
lock
ss
stos
in
jp
mov
inc
std
or
sti
and
sub
fidivr
xchg
enter
mov
mov
jle
sub
pop
in
xor
and
lods
mov
mov
mov
sbb
pop
dec
push
in
jge
and
stc
push
sbb
pop
scas
in
bound
push
fs
cld
fcomp
push
iret
clc
ins
xchg
icebp
jl
in
hlt
sbb
lds
cmp
ins
into
cmp
xlat
clc
aam
sub
push
mov
add
clc
stos
stc
stos
add
sub
xchg
cdq
cmp
fwait
cli
dec
ret
es
add
mov
xchg
fist
fld
fisttp
call
jl
fwait
dec
daa
sub
psraw
icebp
pop
mov
dec
cmp
or
cmps
fnsave
and
sub
xor
cld
xlat
mul
sub
jp
leave
ret
sar
mov
push
stos
pop
push
cmp
out
inc
aaa
sbb
lods
or
ja
ret
hlt
jae
xor
out
in
xchg
pop
push
xchg
scas
push
int
or
in
or
into
inc
add
sti
or
sahf
sti
lahf
push
push
out
sub
add
inc
mov
stos
test
cmp
mov
test
in
add
xchg
or
enter
push
(bad)
adc
pop
mov
outs
add
iret
ja
sub
in
lods
das
pushf
lods
into
in
add
pop
adc
xor
xchg
(bad)
or
cli
aad
push
dec
sub
and
cmp
sbb
stos
mov
ret
dec
cmp
cmp
std
repnz
or
mov
xchg
js
mov
retf
pop
mov
or
xchg
clc
bound
sbb
outs
int
cmp
push
mov
jg
idiv
pop
(bad)
xchg
ds
inc
in
sub
imul
xchg
addr16
and
mov
je
or
xchg
jno
popa
test
push
pushf
dec
push
xor
sub
(bad)
and
jmp
mov
stos
mov
lock
cmp
adc
cdq
cwde
inc
jae
fsub
and
sub
xor
jge
mov
(bad)
mov
cmp
mov
mov
inc
in
mov
add
fiadd
sbb
jmp
mov
cli
and
and
lods
add
mov
movs
dec
pop
sub
stos
pop
cmp
fild
mov
lock
mov
ror
fadd
sub
xor
mov
xchg
jg
pop
mov
in
add
mov
jmp
sar
push
test
ret
movs
sbb
addr16
jo
stos
mov
mov
adc
pop
jge
mov
push
pushaw
inc
cmps
mov
mov
sbb
jnp
xchg
cmc
or
test
mov
out
push
iret
lock
jmp
sbb
pop
dec
jecxz
ss
out
repnz
aaa
pop
ins
aas
jae
retf
popa
inc
cli
leave
sub
nop
and
lea
lock
mov
mov
fisubr
push
adc
sub
mov
or
adc
aam
scas
jns
push
in
adc
bound
(bad)
push
cwde
xlat
out
pop
sbb
pop
movs
mov
pop
pushf
out
pop
rol
scas
je
cld
push
(bad)
and
outs
xchg
adc
mov
sbb
sub
cdq
jns
call
push
test
sbb
outs
inc
inc
mov
push
loop
pop
scas
ja
fist
popa
out
push
mov
stos
call
sub
sub
add
repnz
xor
mov
out
pushf
out
out
ror
arpl
push
retf
scas
ds
mov
popf
sti
add
xor
sub
dec
fwait
jmp
pop
mov
std
test
aaa
mov
in
mov
in
mov
mov
and
fstp
xor
out
push
shr
test
sbb
test
adc
ins
lock
sbb
push
dec
imul
mov
js
mov
and
xchg
sahf
sub
inc
xor
loop
mov
inc
cwde
es
lods
scas
push
into
lea
imul
sub
lahf
jl
dec
adc
mov
pushf
shl
ja
popa
(bad)
or
call
pop
inc
cwde
dec
and
push
dec
jle
ret
out
push
call
loop
rol
push
push
mov
aas
cmp
out
jecxz
xchg
pop
leave
out
repz
ss
stos
pop
sub
std
adc
mov
push
jge
inc
repnz
pop
adc
neg
(bad)
sbb
adc
dec
loope
jns
sub
inc
and
adc
push
push
pop
cmp
pop
xlat
outs
mov
mov
test
mov
xchg
mov
pusha
xor
sar
stos
or
ficomp
int
jecxz
cwde
scas
inc
pop
mov
test
sub
adc
dec
jmp
aam
mov
jge
sbb
out
call
sub
int3
test
stos
mov
ret
mov
fst
into
or
push
mov
loop
mov
push
xor
sub
je
pop
nop
sbb
imul
add
pop
in
iret
xchg
or
bound
inc
push
ret
push
mov
mov
loopne
and
add
scas
es
add
cmp
stos
add
data16
cmp
pop
aas
push
xchg
lds
fld
ficomp
fild
xchg
mov
pop
xchg
ret
test
xor
mov
out
sbb
xor
fild
push
adc
dec
or
fild
mov
clc
in
add
ret
fdiv
mov
std
adc
adc
and
dec
shl
icebp
pushf
mov
xchg
push
les
icebp
push
mov
cdq
or
int
aaa
adc
add
je
mov
push
pushf
ja
(bad)
and
or
xor
adc
sbb
jne
gs
mov
das
rol
out
lock
push
xchg
fidiv
adc
call
sbb
sbb
mov
add
adc
stos
addr16
jno
cmps
mov
fwait
imul
pop
aad
pop
jecxz
div
aas
sti
mov
shl
cwde
retf
cdq
leave
cmps
(bad)
out
sub
adc
adc
popa
ret
aaa
sbb
cmp
sub
ficomp
mov
adc
jg
outs
or
out
mov
adc
aam
addr16
repz
ret
and
inc
sub
jg
adc
scas
or
mov
cmps
add
push
xor
sbb
in
push
mov
mov
and
push
inc
jecxz
dec
sub
popf
mov
mov
loope
mov
xchg
and
jbe
imul
or
cmovnp
loop
mov
add
adc
in
rcl
ds
aas
(bad)
cli
cmc
adc
retf
push
xchg
add
cld
xor
xchg
test
push
cwde
pop
xchg
add
mov
mov
mov
jle
test
inc
inc
mov
add
inc
jbe
ret
aaa
cmc
movs
sti
cli
les
les
jmp
lods
mov
adc
into
sbb
xchg
sub
push
mov
test
popf
sbb
test
mov
cwde
mov
(bad)
jo
fsubrp
sbb
add
lods
xor
fwait
jg
adc
ret
and
rcr
(bad)
ins
mov
(bad)
cmp
jmp
(bad)
cmp
push
cs
mov
mov
outs
inc
xchg
push
add
mov
(bad)
int
sbb
int
push
sbb
test
pop
sbb
imul
or
inc
xor
stos
imul
add
sahf
dec
dec
sti
add
test
sar
lahf
mov
mov
outs
clc
outs
or
(bad)
mov
pop
adc
jae
cld
sahf
pop
inc
mov
mov
sbb
xchg
pop
mov
adc
fcom
mov
leave
sbb
add
adc
pusha
cld
imul
xchg
sti
enter
icebp
pop
stos
xor
xor
ins
popf
inc
stos
mov
outs
repz
mov
add
sbb
pop
jmp
cmp
xchg
push
(bad)
push
push
xchg
into
lds
retf
mov
pop
sbb
mov
inc
xchg
aad
mov
gs
pusha
mov
sub
ret
push
xor
cs
imul
scas
jae
int3
mov
shl
ss
jnp
loope
xor
int3
in
in
adc
and
cmp
push
daa
das
or
stc
add
mov
shl
add
xchg
test
dec
scas
inc
in
adc
sbb
(bad)
pop
jl
push
push
cmps
xchg
dec
mov
add
push
push
mov
mov
mov
mov
xchg
cmp
jns
fdiv
test
xchg
stos
mov
adc
mov
xchg
inc
push
and
das
out
pop
pushf
out
je
mov
repz
sbb
out
cmp
mov
mov
loope
adc
cmp
sbb
shl
dec
imul
jno
call
cmp
pop
cmp
cli
mov
xor
into
or
ins
pop
dec
and
arpl
sar
dec
inc
jno
mov
out
jbe
lods
fld
fwait
cmp
xchg
out
dec
adc
dec
push
sti
mov
adc
cmp
mov
mov
mov
ret
xchg
in
gs
in
dec
fisttp
jns
lods
pop
clc
add
ss
inc
and
xchg
imul
imul
(bad)
push
cmps
and
sbb
xchg
stos
jmp
sub
(bad)
sbb
movs
dec
xchg
(bad)
fsub
inc
addr16
(bad)
rcr
xchg
mov
inc
movs
mov
lock
mov
cmc
push
call
lds
ja
shl
or
pusha
(bad)
scas
imul
arpl
and
rcr
xchg
in
sti
mov
jecxz
adc
push
ins
sar
ret
jg
call
mov
cli
sbb
lea
add
gs
loopne
dec
adc
lea
mov
mov
das
jge
jno
retf
mov
jle
dec
and
lods
scas
aad
mov
sbb
imul
push
sbb
fisttp
or
out
jmp
mov
lods
mov
mov
sub
lds
and
test
push
cmp
jge
test
out
push
and
outs
arpl
pushf
adc
add
pop
cmp
scas
cmps
pop
ss
mov
dec
dec
rol
jno
push
ror
dec
loop
imul
in
(bad)
push
std
(bad)
leave
cli
add
shl
jae
mov
sub
dec
xor
mov
pop
sub
int3
mov
sbb
add
push
inc
hlt
leave
push
cmp
sub
xchg
out
jns
dec
jp
scas
sbb
push
dec
fcomp
dec
jl
repz
mov
push
call
inc
aad
xchg
or
stos
jne
or
sbb
cmp
repnz
jo
mov
fst
(bad)
test
push
clc
(bad)
bound
jns
jle
and
dec
sub
stos
mov
(bad)
mov
js
test
ss
int
mov
mov
(bad)
std
pop
call
shl
push
neg
push
jne
pop
in
hlt
iret
cli
arpl
jle
jmp
ins
push
add
cdq
rcr
mov
ret
daa
inc
push
pop
inc
push
xchg
dec
push
inc
mov
fcomp
lods
lds
jge
call
mov
test
icebp
in
mov
dec
dec
jge
mov
sub
lfs
test
sub
dec
call
xlat
jnp
repz
in
movs
arpl
jp
cdq
xor
aam
mov
data16
xor
mov
cli
lds
scas
add
pop
pop
and
xor
in
lds
ret
out
xchg
push
nop
test
adc
repnz
xor
adc
mov
jmp
retf
inc
sbb
push
add
sbb
(bad)
add
loop
es
test
fucomi
ret
inc
mov
jg
(bad)
fld
jae
lea
mov
popf
cmp
add
dec
movs
cs
(bad)
xlat
mov
popa
aaa
xchg
jmp
lea
or
or
dec
push
mov
xchg
jo
lahf
xor
mov
outs
sub
cmps
sbb
outs
(bad)
add
and
inc
push
lea
retf
pop
sbb
xchg
fcomp
test
fidivr
pop
jecxz
pop
out
push
jcxz
inc
push
(bad)
cmp
movs
call
fisubr
adc
aam
sbb
pop
int
jmp
jb
pop
mov
inc
and
mov
jle
jo
adc
pop
or
sti
in
out
dec
shr
sub
pop
push
and
xor
pop
pop
mov
pop
push
push
fwait
das
sbb
jne
jae
xor
mov
add
int3
jl
dec
dec
xchg
(bad)
cmp
(bad)
push
repz
or
jno
add
rcr
push
and
xchg
or
xchg
aam
mov
addr16
or
sahf
repz
aam
push
shr
mov
or
pop
fcomp
cwde
in
adc
(bad)
retf
jbe
ds
cld
lods
lea
fisttp
or
(bad)
add
int
mov
cdq
mov
aaa
adc
cmp
or
maskmovq
imul
cmps
cmps
lock
mov
cmps
div
push
dec
arpl
xor
(bad)
jl
or
mov
call
neg
inc
fst
sbb
push
mov
test
jecxz
jb
movs
call
mov
mov
or
pop
movs
adc
aas
dec
mov
mov
fwait
idiv
das
rcr
push
xor
push
dec
cwde
les
in
jno
cwde
cdq
xor
in
add
out
jg
cmp
sub
add
stos
aas
and
add
ret
dec
shl
scas
and
sbb
into
and
mov
fidivr
les
enter
and
pop
inc
adc
shl
leave
enter
adc
push
lods
into
(bad)
out
or
mov
in
push
xchg
inc
add
inc
(bad)
dec
mov
jae
es
and
data16
mov
push
fstp
fmulp
xor
pop
xor
cmp
jns
retf
pop
jge
inc
jnp
adc
icebp
jge
dec
lods
pop
loop
stc
or
pop
in
or
xchg
rol
scas
xchg
mov
scas
movs
dec
popa
stc
pop
(bad)
jle
and
std
pop
fcomp
add
test
add
mov
mov
int
cli
xchg
inc
jp
nop
call
das
push
xor
cmp
pop
inc
hlt
inc
inc
sbb
inc
mov
test
cld
mov
dec
dec
push
out
xor
cmp
mov
xchg
(bad)
dec
lea
xor
add
std
or
jge
mov
das
(bad)
mov
adc
add
lods
pop
add
inc
loop
test
xchg
shl
or
aaa
push
xor
leave
fcomp
push
jmp
mov
dec
xor
ds
stos
pop
(bad)
in
(bad)
lock
xchg
sbb
(bad)
push
adc
adc
int3
cmps
imul
retf
retf
cmps
fwait
aam
xchg
or
loopne
jae
rol
sbb
pop
xor
sahf
inc
xchg
cmp
ficomp
cmps
xchg
or
cmp
mov
ja
ins
and
mov
xchg
push
dec
sub
inc
mov
mov
retf
pop
xchg
rcl
inc
(bad)
jae
in
or
mov
int
cmc
popa
adc
ins
(bad)
stos
popf
pop
push
std
mov
add
in
sub
jecxz
in
iret
repnz
sbb
movs
pop
(bad)
mov
mov
je
(bad)
xchg
rcl
fsubr
xchg
push
pop
jb
inc
adc
out
xchg
cmp
jo
cmc
push
adc
clc
sbb
pop
and
test
push
push
nop
mov
sar
inc
or
inc
lods
dec
int
xor
sahf
je
cmp
lahf
push
outs
or
ins
retf
js
xchg
fcmovb
sbb
xchg
jg
dec
cbw
add
push
stos
loopne
repnz
jbe
imul
aaa
push
xchg
stos
or
xor
xor
sbb
mov
cli
jp
xchg
mov
daa
sbb
dec
(bad)
retf
mov
mov
stos
add
nop
ficom
out
mov
jmp
cli
retf
mov
lods
mov
xchg
inc
xor
and
xchg
mov
inc
sar
aam
xchg
bound
mov
in
sbb
pop
mov
aaa
cmps
inc
into
or
cmc
mov
mov
popa
dec
cmp
sti
mov
xchg
cmc
sub
dec
pop
les
xor
or
retf
mov
fs
into
sub
inc
xchg
sti
mov
loopne
std
sahf
pusha
scas
int
ror
leave
xor
pop
push
bswap
cmp
fsub
jmp
(bad)
pop
add
imul
sub
nop
xor
xchg
pop
cmc
stos
fld
lods
test
lsl
lahf
xor
fcom
pop
jae
icebp
sbb
jle
daa
lahf
push
ins
sub
and
scas
out
add
jo
out
xchg
adc
jge
das
mov
inc
and
lods
dec
adc
push
add
push
leave
xlat
cmp
int3
xchg
xor
xchg
pop
mov
dec
rcl
rol
sbb
and
test
sbb
fdivr
push
out
add
mov
push
in
jno
push
sbb
mov
fist
cmp
push
nop
in
and
mov
aaa
int3
mov
in
xchg
or
add
retf
sub
ficom
outs
push
xchg
ds
pop
arpl
out
ja
pop
pop
ins
in
xchg
adc
jae
push
mov
push
test
ret
data16
add
cmps
mov
mov
mov
pop
movs
lock
aam
popa
clc
jg
mov
loop
inc
jecxz
test
sahf
mov
loope
jbe
cmp
bound
std
xor
push
out
pop
mov
mov
sbb
mov
stos
and
sbb
push
mov
lahf
pushf
mov
call
call
xchg
fcomp
mov
pop
sar
mov
(bad)
mov
and
(bad)
cmp
mov
sahf
pusha
fnstenv
pop
and
mov
sbb
mov
ficomp
int
ja
outs
jns
inc
jg
ret
push
or
sahf
(bad)
in
retf
push
mov
int
aam
pop
aaa
lahf
imul
mov
add
ret
sbb
mov
ret
cld
push
std
test
neg
cmp
in
and
mov
adc
push
pop
hlt
arpl
ret
(bad)
loope
xor
lods
lahf
inc
int
dec
lds
mov
cwde
mov
mov
test
or
outs
lock
lods
leave
add
mov
cli
sbb
mov
ret
icebp
cmp
push
jmp
jbe
int3
sbb
sub
fadd
dec
movs
sti
push
cli
mov
mov
jecxz
div
(bad)
mov
mov
dec
cmp
cmc
or
pop
pop
and
aas
pop
fstp
nop
jnp
stos
in
jb
retf
mov
mov
cli
mov
xlat
bound
sar
mov
adc
cmps
ret
cmp
pop
cmp
sar
fld
mov
lds
push
je
push
ja
popa
and
gs
out
inc
aas
xor
cmp
push
xor
dec
jl
mov
push
inc
xchg
test
test
pop
inc
or
jns
arpl
sbb
push
(bad)
adc
icebp
pop
dec
mov
adc
lods
inc
enter
and
ficom
in
pushf
mov
enter
xchg
imul
sub
push
es
push
xor
sub
cmc
push
mov
add
mov
pop
dec
xchg
xchg
mov
arpl
test
mov
fnsave
movs
stos
shl
mov
pop
leave
push
imul
test
add
cld
adc
add
xor
movs
stos
jp
mov
sub
aas
xchg
dec
dec
sub
sbb
mov
daa
in
les
xor
fimul
push
jb
sbb
addr16
ins
adc
fsubr
ror
sahf
fwait
xchg
jns
pop
xchg
add
mov
and
call
imul
add
arpl
vaddsubpd
test
inc
test
cmp
pop
add
xchg
add
xchg
mov
or
and
mov
inc
jmp
cld
jbe
aas
in
fist
cmp
jmp
retf
or
push
jo
nop
cmp
push
mov
sbb
xchg
lahf
inc
ins
xor
popa
sbb
imul
adc
stos
lods
sar
stos
outs
(bad)
dec
inc
gs
ins
cld
idiv
(bad)
cmp
ins
ret
xchg
mov
js
sahf
mov
pop
lds
mov
sbb
js
jne
push
popa
iret
arpl
push
inc
xchg
pop
xor
sahf
dec
mov
push
inc
push
in
hlt
fnstcw
sbb
adc
jae
push
and
adc
or
mov
nop
mov
out
xor
out
xchg
inc
scas
out
test
jle
push
adc
dec
cwde
or
dec
push
inc
ffreep
sub
xchg
ins
xor
sub
and
imul
rcl
pushf
daa
ret
jecxz
call
adc
div
mov
dec
leave
mov
push
scas
daa
add
mov
retf
or
outs
fild
jb
pop
stos
test
popf
inc
test
imul
in
jmp
inc
movs
das
int
lods
addr16
cmp
jne
adc
fs
add
jb
cmp
sbb
outs
jl
and
jbe
repnz
inc
pop
or
fsubr
and
daa
sbb
jg
jmp
push
mov
std
adc
jmp
loop
mov
ja
jecxz
pop
stos
push
adc
add
push
jmp
rol
or
(bad)
inc
push
(bad)
and
cmp
sbb
in
sbb
push
or
jg
sahf
jg
imul
cmp
pop
fdivr
outs
popa
icebp
dec
in
pop
adc
iret
xchg
mov
fs
les
and
dec
push
jae
push
aaa
into
repnz
lea
jnp
dec
int
pop
dec
and
xor
mov
mov
stos
xor
pop
int
jno
fwait
mov
adc
or
sti
popf
shr
into
xchg
stc
pop
mov
jno
fldenv
test
das
clc
test
mov
dec
cmp
xor
push
mov
(bad)
pop
push
cmps
jbe
jmp
sub
and
mov
mov
adc
call
push
jecxz
in
sub
xchg
movs
sbb
jecxz
mov
cdq
dec
mov
jg
int3
retf
sbb
or
(bad)
stc
pushf
out
addr16
mov
inc
stos
jbe
scas
sub
mov
or
(bad)
nop
int
jb
sbb
popf
bound
inc
and
arpl
sbb
adc
jo
and
sub
and
rol
xor
pop
rol
and
adc
shr
add
xchg
jae
xchg
add
mov
cs
inc
sub
cmp
inc
sub
icebp
retf
inc
push
(bad)
cmp
in
inc
out
fcomp
xchg
xchg
ins
ins
and
push
or
je
repnz
jmp
jb
and
push
not
adc
fld
imul
imul
pop
cmps
mov
pop
enter
mov
xlat
sbb
pop
loopne
movs
ficom
in
nop
movs
dec
clc
push
and
cmp
scas
inc
inc
cmps
mov
outs
jge
sub
clc
out
xor
ins
int
mov
movs
fsub
mov
rol
inc
mov
jmp
nop
add
xor
call
jle
leave
cmp
push
dec
arpl
in
rcl
jmp
or
cmp
sub
retf
imul
xrelease
dec
adc
repz
data16
rcr
mov
push
sbb
xchg
jns
jae
jne
sbb
jbe
pop
xor
xor
aas
(bad)
sbb
and
test
jnp
mov
mov
fbld
fistp
ret
jg
dec
shl
mov
xchg
(bad)
sbb
adc
xchg
es
cmp
nop
outs
mov
arpl
mov
sti
mov
jae
stc
mov
iret
scas
icebp
mov
mov
inc
clc
mov
movs
adc
(bad)
sub
arpl
outs
nop
test
iret
pushf
push
cmc
jmp
xchg
pop
and
in
arpl
(bad)
sub
jmp
pop
aad
push
dec
pop
jnp
inc
imul
push
aaa
jecxz
jmp
retf
push
push
imul
push
std
enter
inc
cmp
xlat
mov
jl
cmp
(bad)
in
dec
pop
into
(bad)
stos
sub
dec
add
(bad)
ret
dec
jge
jbe
adc
icebp
scas
call
div
je
movs
ins
and
jne
push
rcl
sbb
jmp
inc
push
imul
call
cmp
(bad)
jo
imul
or
push
cmp
es
sti
xor
mov
xchg
or
jmp
push
iret
ins
fidivr
sub
xchg
hlt
sbb
dec
out
dec
clc
cmp
call
dec
(bad)
cmps
ds
add
mov
mov
mov
(bad)
sti
int3
or
test
cmp
outs
dec
jnp
(bad)
and
lods
dec
iret
out
push
inc
xchg
fsubr
mov
dec
idiv
shl
inc
mov
mov
fs
iret
(bad)
ret
mov
ret
xor
lahf
fdivr
lahf
pop
cmp
xlat
pusha
or
cs
neg
xadd
pop
int3
push
pusha
stos
fcmovnu
adc
dec
js
adc
xor
jnp
mov
outs
repnz
data16
ror
test
mov
sub
push
mov
movs
or
(bad)
cwde
add
pop
jo
jae
sbb
inc
hlt
nop
xchg
mov
pop
dec
pop
dec
aam
mov
out
pop
std
push
inc
outs
sahf
movs
cs
xor
jns
lahf
add
ficom
jae
mov
das
sub
data16
sub
mov
sub
nop
sub
xchg
lods
or
sub
sub
dec
mov
stos
jg
(bad)
and
fcomp
stc
cli
sar
push
das
jmp
mov
xchg
jae
cmp
cmp
dec
stos
inc
(bad)
pop
ss
jns
in
pusha
or
iret
push
jg
retf
imul
adc
sbb
jns
dec
out
ret
clc
repz
sub
ret
bound
pop
sub
push
js
(bad)
mov
or
bound
sbb
pop
aaa
sub
sub
inc
int
enter
pushf
inc
add
push
lahf
pop
sbb
and
outs
mov
dec
sbb
add
cmc
in
mov
mov
adc
outs
mov
(bad)
je
mov
xchg
adc
pop
xchg
jbe
inc
sahf
xchg
mov
adc
shr
jbe
iret
pop
adc
rep
pop
mov
sub
loop
sar
cs
lods
std
test
lods
ss
mov
push
sub
in
inc
jg
in
push
scas
pop
outs
out
int3
sbb
hlt
xor
fwait
pusha
retf
xor
imul
pusha
mov
addr16
sub
aad
in
daa
fucomip
pop
adc
mov
mov
rcr
movs
loope
mov
lods
adc
xchg
adc
cmp
dec
call
push
aas
or
mov
test
iret
push
test
int
icebp
cmp
outs
sub
cmps
les
xchg
retf
fild
push
mov
rol
sbb
mov
cmp
retf
cmp
sub
jecxz
rcl
dec
mov
js
out
or
retf
sub
adc
jo
cmp
dec
fild
sbb
ret
sahf
pop
std
lock
data16
jecxz
mov
dec
(bad)
sub
into
(bad)
mov
sbb
stos
lods
loop
mov
int3
mov
jl
dec
les
and
push
mov
jmp
rcl
stos
das
test
fwait
add
ds
push
sbb
adc
daa
dec
sti
add
cdq
std
les
inc
jl
jg
icebp
mov
jnp
sub
cmp
stos
fistp
shl
into
ds
retf
pop
popf
or
ja
rcr
test
out
out
jecxz
scas
inc
sahf
inc
adc
popa
dec
inc
lock
pop
sbb
mov
(bad)
dec
outs
ins
hlt
xchg
xchg
int
fbld
inc
or
push
or
fcmovb
into
jbe
outs
sub
ja
fs
and
gs
push
lahf
cmp
mov
sbb
das
std
dec
outs
add
imul
inc
push
push
call
adc
xchg
cdq
adc
shr
shl
iret
or
mov
cld
pop
arpl
das
in
test
add
pop
mov
shl
add
cmp
cmps
mov
aam
adc
outs
sub
mov
cmp
inc
or
and
mov
pop
or
(bad)
(bad)
fs
and
es
fild
jno
cdq
pop
mov
adc
sub
test
jmp
mov
inc
imul
xor
lods
jno
int3
push
leave
mov
and
jecxz
mov
mov
iret
je
jno
ror
pop
dec
int3
cmps
push
jnp
ror
sub
inc
mov
cld
pop
push
lods
movs
mov
(bad)
rol
and
arpl
icebp
mov
push
inc
leave
jge
out
les
test
gs
loope
movs
lock
adc
push
popa
idiv
jmp
mov
mov
or
inc
jg
cmp
je
std
ss
(bad)
jp
loop
int3
ret
or
das
push
mov
push
sub
jno
idiv
pop
out
inc
or
dec
mov
jmp
xor
cmp
xchg
add
pop
xchg
lea
cmps
dec
xchg
push
dec
inc
pop
or
shl
out
paddsw
inc
or
jge
loop
push
inc
pop
jp
or
jno
or
jge
adc
test
adc
jo
mov
dec
xchg
xchg
test
fild
mov
iret
sbb
mov
ror
ss
mov
or
adc
aad
(bad)
mov
inc
jl
fimul
mov
out
aam
inc
lods
imul
dec
pop
bound
pop
sub
lock
pop
push
mov
test
into
sbb
add
mov
mov
or
mov
leave
or
cli
rcl
rol
push
popa
rol
xlat
repnz
cwde
fld
fcomp
stc
push
xor
sbb
test
fstp
cli
push
pop
mov
xchg
mov
pop
sbb
cmps
mov
pop
xchg
cmp
shl
sbb
push
mov
sahf
(bad)
call
adc
in
lock
jecxz
inc
cli
lods
adc
add
outs
and
mov
mov
fidivr
loopne
loopne
push
cmp
cmps
movs
jl
or
mov
popf
mov
sbb
dec
shr
retf
in
inc
lahf
add
pop
mov
or
pushf
andps
rep
dec
mov
add
test
jmp
gs
rcl
cmp
jne
mov
in
dec
mov
loop
arpl
jg
js
dec
xchg
push
push
jo
adc
xchg
mov
mov
xlat
pop
idiv
push
int
(bad)
sub
mov
sub
mov
mov
sub
and
pop
or
xor
in
sbb
add
cli
push
and
into
sbb
fldcw
test
pop
(bad)
mov
enter
lods
jne
cdq
icebp
rep
hlt
cli
es
fwait
mov
mov
xchg
mov
cmp
mov
jmp
stc
jecxz
lods
imul
cmps
hlt
cmp
dec
mov
in
aam
fstp
push
pop
push
ret
retf
cmp
adc
aad
lods
jae
or
outs
mov
jbe
jg
or
addr16
aas
leave
add
in
icebp
nop
or
and
dec
inc
or
mov
ror
pop
pop
or
mov
xchg
sti
das
push
or
out
jbe
cs
das
sti
out
xor
(bad)
jg
ins
jo
jg
add
push
in
add
out
xor
jns
lods
mov
dec
cmp
push
loope
mov
and
and
sar
icebp
imul
sbb
mul
xchg
loop
xchg
mov
xor
and
or
or
jp
mov
js
gs
jmp
xor
int
idiv
jb
push
int3
sahf
cld
aad
xchg
jbe
and
(bad)
hlt
sub
mov
xchg
in
pop
mov
lahf
sti
in
rcr
fstp
or
cwde
cdq
xlat
sahf
pop
dec
out
rcl
ret
dec
bnd
std
cmps
xchg
les
leave
popf
scas
test
in
inc
cmp
inc
out
outs
cdq
jmp
icebp
and
outs
loop
adc
sub
movs
fucomi
clc
inc
or
adc
cmps
mov
cmp
and
loop
add
sbb
aam
enter
sbb
pop
hlt
stos
mov
rol
cdq
in
sar
push
mov
push
ins
retf
xchg
loope
jg
cld
in
addr16
mov
jb
jbe
jb
cwde
dec
push
push
fcom
in
out
in
sti
mov
mov
lods
int
xlat
push
call
pop
xchg
jecxz
jb
sbb
pop
inc
xor
loope
jmp
sub
jne
and
fsubr
stos
stos
mov
sbb
jl
(bad)
jae
inc
adc
outs
sbb
cmp
adc
gs
cmp
dec
inc
loopne
mov
xor
sbb
xlat
(bad)
sbb
adc
dec
into
stos
add
and
pmuludq
scas
mov
outs
push
and
sar
cli
adc
or
dec
out
and
je
arpl
mov
movs
(bad)
retf
cs
cs
dec
mov
mov
mov
mov
fs
and
xchg
dec
sbb
cmps
movs
xchg
in
push
pusha
pop
mov
pop
not
xor
out
xchg
push
int3
pop
sub
bound
call
or
xchg
xor
stc
jg
xor
or
mov
jae
hlt
das
mov
cmp
jb
retf
ins
loope
enter
xchg
repnz
jb
sub
jmp
lods
push
ds
jae
cwde
out
push
push
outs
jecxz
xlat
movs
or
(bad)
cdq
pop
mov
pop
test
jl
fs
icebp
ror
movs
push
sbb
xor
dec
inc
mov
shl
pushf
add
mov
xchg
popa
repz
sbb
xor
xor
add
push
movs
repnz
sub
(bad)
mov
xor
push
sbb
sub
push
cmc
fisttp
xchg
push
push
loopne
xor
fcomp
pop
push
sub
bound
xlat
jne
ret
inc
icebp
repz
dec
pushf
out
in
jbe
and
repz
enter
push
add
cld
mov
pop
jbe
hlt
ds
clc
pop
mov
loope
jo
int
xor
xor
iret
outs
enter
adc
mov
popf
stos
lods
retf
mov
jb
cmps
mov
aad
mov
das
sbb
ss
add
xchg
cld
mov
push
test
jns
xchg
imul
lds
sbb
sub
test
add
mov
sub
fcomp
sar
xor
cli
pop
loop
hlt
xchg
mov
popa
jae
jl
dec
mov
lahf
(bad)
dec
cmc
retf
mov
fld
fmul
xchg
and
push
jle
or
int3
(bad)
popf
jl
xor
(bad)
sub
adc
std
data16
out
or
aam
mov
js
cmp
out
push
int3
pop
and
imul
inc
stos
cmp
pop
std
push
in
jmp
mov
inc
push
or
sbb
inc
(bad)
sbb
cmp
cdq
mov
rcr
movs
sti
imul
outs
dec
add
cdq
dec
cmc
dec
sahf
sub
out
push
ds
(bad)
sar
imul
and
dec
or
fisubr
or
or
xchg
shl
inc
jecxz
pop
shl
data16
push
pop
in
movs
pop
(bad)
fmul
mov
clc
nop
mov
and
(bad)
sub
xchg
aas
jl
jns
cmc
and
cwde
std
pop
jbe
nop
sub
sub
jne
xchg
push
mov
je
jle
push
dec
adc
jmp
adc
fmul
sub
add
cmp
sti
mov
push
lds
leave
pop
rcr
(bad)
movs
(bad)
pop
out
icebp
nop
mov
jl
mov
push
xor
dec
out
inc
retf
add
mov
imul
add
dec
clc
xchg
(bad)
mov
int3
xor
mov
lea
xchg
mov
retf
cld
je
cli
in
cs
pop
dec
mov
daa
pop
jne
sub
out
lock
pop
add
dec
sbb
and
enter
xor
aad
sti
pop
xor
into
pop
jnp
add
mov
out
loope
das
dec
out
in
dec
cmp
(bad)
fsub
shl
push
mov
in
mov
push
daa
xchg
fwait
jno
jle
mov
dec
pop
lock
lahf
dec
mov
sub
ins
imul
cmps
push
fadd
cmp
shl
dec
lods
adc
or
cmps
mov
mov
fstp
inc
sti
push
and
or
nop
xor
loope
aaa
adc
sub
inc
sub
mov
sub
jb
retf
cmc
adc
call
cld
dec
es
push
cmps
(bad)
in
call
mov
lods
xor
je
outs
sbb
add
aam
pop
sub
xlat
pop
jp
f2xm1
adc
jmp
dec
loopne
scas
sbb
cmp
aaa
add
mov
fsub
mov
push
sub
loopne
pushf
data16
lock
rcr
inc
int3
lahf
or
outs
xor
bound
push
sbb
mov
out
imul
movs
xor
pusha
sub
in
xchg
sbb
xor
scas
mov
ins
cmp
cmp
adc
daa
cmps
and
cmp
stc
inc
jo
mul
in
iret
add
clc
xlat
inc
aad
outs
fadd
pop
test
xlat
les
pop
or
out
cmp
lea
retf
loopne
aaa
js
jmp
lock
push
or
ins
loopne
xchg
lea
int
inc
xor
push
xchg
sub
cmp
mov
ret
imul
gs
adc
pop
das
sub
jbe
bound
ins
aam
or
sub
sub
or
or
cmps
xchg
adc
xchg
fiadd
jg
lods
arpl
in
mov
dec
push
pop
int
sbb
fwait
test
(bad)
repnz
pushf
iret
fs
jne
xchg
aad
adc
repz
fild
movs
pop
pop
in
push
pop
mov
dec
loopne
xor
and
push
imul
push
or
jnp
add
jmp
icebp
mov
mov
ins
or
arpl
dec
cs
push
shl
pop
mov
fucomp
sub
sahf
sbb
push
cmp
test
pop
sahf
cmp
repnz
pop
and
loope
repnz
cmp
pop
fcmovnbe
rcl
mov
pusha
(bad)
lahf
push
sub
jl
adc
imul
mov
fcmove
jmp
rol
cli
rcr
stos
and
adc
(bad)
push
scas
push
cmp
cs
jo
sbb
test
add
cli
mov
push
jmp
mov
jb
cmp
pushf
movs
iret
outs
push
in
jns
dec
gs
cmp
sbb
push
xlat
das
int
adc
mov
cld
pop
or
add
push
shr
mov
movs
adc
xchg
mov
xchg
mov
adc
or
xor
imul
xor
mov
lock
mov
(bad)
mov
and
mov
lds
js
das
mul
push
or
push
(bad)
scas
pop
shl
enter
mov
imul
(bad)
mov
or
add
cmp
(bad)
jl
scas
enter
mov
iret
mov
and
mov
out
jmp
or
mov
(bad)
cdq
sbb
cmps
sahf
shl
mov
fisub
js
mov
fsubr
es
fnstenv
xlat
xchg
mov
call
shl
xor
xchg
iret
sub
xor
xor
data16
mov
inc
in
shr
xchg
mov
sbb
stc
leave
jno
icebp
dec
dec
ror
pop
nop
add
test
loope
and
xchg
push
sbb
loop
or
sub
into
or
mov
popa
jg
sbb
ins
sub
cld
popf
ret
repnz
rcr
cmc
es
sbb
ret
mov
pushfw
jbe
cs
test
jg
fs
fsub
loopne
xlat
push
mul
adc
add
push
fld
mov
push
shr
cmp
inc
push
dec
dec
jmp
add
xchg
fs
lds
adc
aas
jmp
test
call
cmp
movs
fsubr
jbe
adc
push
call
das
push
push
imul
scas
(bad)
dec
icebp
jbe
pop
call
fldenv
jmp
cmps
mov
(bad)
mov
lds
sub
fdivr
add
stc
sub
inc
clc
add
mov
push
mov
cmps
adc
or
in
(bad)
fimul
pushf
dec
jno
mov
daa
xchg
jp
sbb
xchg
loopne
cmps
inc
xor
dec
jl
mov
aad
adc
dec
into
xor
or
push
ret
or
pop
iret
mov
jp
jmp
out
cmp
mov
add
and
loop
and
push
jp
xor
lock
and
sub
outs
mov
push
inc
adc
inc
add
mov
and
xchg
dec
ror
push
adc
xchg
sar
and
stos
cs
and
cmp
je
sub
(bad)
or
jp
sbb
mov
mov
aas
cdq
add
and
mov
sub
imul
xchg
cwde
jmp
push
cmc
popa
cmps
jo
lods
fmul
mov
mov
mov
es
dec
lahf
xchg
scas
je
sub
in
mov
ds
sbb
pushf
(bad)
cmp
push
pop
sti
rcl
cmp
aam
adc
jns
push
out
mov
(bad)
adc
mov
call
popf
mov
mov
in
sbb
sbb
stos
rcl
repnz
pop
pop
fadd
fldcw
dec
imul
mov
push
fwait
out
dec
inc
std
sub
mov
ret
sub
mov
imul
jbe
(bad)
fld
or
hlt
add
in
dec
stos
push
sub
push
aaa
inc
xchg
stc
add
sbb
jae
nop
fucomi
xchg
popa
ret
or
xor
xchg
and
push
or
(bad)
adc
mov
sub
(bad)
les
cdq
in
cmp
sbb
ins
jg
pop
ror
xchg
push
mov
and
cmp
xor
shr
and
add
push
jl
cli
dec
arpl
push
sbb
outs
jmp
push
xor
adc
sbb
in
fnstenv
in
out
push
jbe
aad
or
pop
in
jmp
and
inc
pop
dec
sbb
xchg
pop
enter
(bad)
push
test
lods
repnz
idiv
loop
shr
push
leave
add
push
dec
dec
cmp
add
in
push
fsub
pop
jbe
out
mov
ror
sub
(bad)
cmps
aam
ss
outs
xchg
movs
clc
or
push
out
xchg
mov
sbb
lods
mov
jmp
inc
jmp
test
repnz
push
fist
call
and
jno
leave
inc
repnz
sbb
or
jae
jg
lds
fimul
dec
adc
or
scas
rol
mov
sbb
or
(bad)
sahf
in
jns
in
outs
and
sub
mov
rcr
jbe
test
add
xchg
mov
pop
adc
mov
push
fwait
sbb
jg
data16
dec
mov
mov
xchg
inc
int
add
icebp
les
jb
pushf
xchg
jg
data16
icebp
popf
mov
retf
arpl
cmp
loop
pop
sub
popa
inc
hlt
pushf
xor
in
pop
sub
and
(bad)
arpl
pop
mov
aam
pop
cmp
mov
or
sbb
push
stos
add
sub
inc
(bad)
aaa
out
es
js
outs
pushf
inc
(bad)
jle
inc
loop
mov
pop
fild
mov
prefetchnta
mov
movs
push
mov
bound
pop
sub
into
jge
sub
or
mov
cmc
pushf
jb
rcr
shl
jmp
sbb
sti
aad
pop
sub
xor
ins
dec
ja
jbe
out
out
xchg
hlt
add
jbe
cmp
xlat
cwde
adc
nop
or
in
retf
outs
into
adc
pop
inc
or
xchg
inc
dec
(bad)
and
adc
inc
jb
dec
ds
mov
sub
xor
or
enter
xchg
rcr
std
or
mov
mov
retf
lock
or
xor
int3
xor
cmp
in
test
ja
xlat
jne
sub
cmp
cmp
fadd
sub
jno
mov
loopne
adc
pusha
push
pop
adc
jp
sbb
sar
mov
add
mov
sbb
fisub
(bad)
mov
out
mov
aam
mov
fs
stc
rol
sti
mov
sbb
data16
sub
pop
dec
ins
or
or
loopne
dec
frstor
jns
adc
sbb
mov
(bad)
out
jmp
or
sar
jns
and
lods
int
cmp
daa
cld
xchg
push
das
dec
fild
xor
mov
jl
push
adc
sub
dec
stc
inc
out
ror
xchg
sbb
push
cmp
xor
push
lds
(bad)
pop
pop
imul
push
aas
idiv
sub
xor
cmp
cmp
outs
daa
jns
push
fwait
push
pop
(bad)
mov
add
xchg
cmc
fstp
ja
xor
rcr
or
sbb
or
imul
xchg
sbb
in
xchg
(bad)
ret
add
jne
inc
sub
aam
sti
jno
add
cdq
add
jp
pop
sbb
jp
loopne
sar
cmp
test
pop
jne
or
lahf
sub
sub
dec
loopne
xor
cmc
xor
es
xchg
mov
or
movs
test
popa
es
jp
push
jae
and
(bad)
clc
add
arpl
pop
movs
mov
lods
rcr
xchg
mov
pop
adc
lock
xchg
jmp
pop
pushf
jmp
jg
not
sub
lods
aas
adc
jb
cmp
push
pop
xchg
mov
int3
sbb
cmps
push
lahf
mov
sti
mov
cs
xor
or
push
bnd
mov
ja
inc
push
adc
mov
sub
jecxz
jbe
or
rcr
loopne
es
in
rol
clc
fidiv
out
inc
lahf
(bad)
cdq
ja
and
push
das
pop
rcl
or
xor
and
dec
iret
jne
pop
mov
and
sub
dec
aaa
rsm
sub
sbb
fadd
push
in
pop
mov
mov
mov
and
mov
sub
push
push
cld
sbb
ja
loop
inc
jp
loope
add
mov
xchg
push
and
retf
or
pop
xchg
jnp
dec
jmp
getsec
or
add
lock
cmps
out
mov
es
and
les
inc
add
shl
xor
jno
inc
dec
and
sbb
sub
sub
xchg
es
sub
adc
mov
jnp
call
js
jle
xor
fistp
aam
int
jmp
xchg
inc
fmul
mov
enter
adc
neg
call
shl
mov
sub
xlat
popa
outs
(bad)
sbb
and
jmp
fistp
lds
cmp
aaa
mov
cmps
test
(bad)
aaa
push
and
ss
clc
popf
mov
stos
xchg
lahf
add
mov
ror
or
cli
dec
or
mov
jae
je
sbb
(bad)
fdivr
push
shl
xor
cmp
pop
mov
shl
mov
push
loopne
adc
pop
test
mov
ss
xor
sbb
fs
xchg
outs
dec
push
lock
mov
js
xor
mul
push
mov
mov
sar
mov
jns
and
pusha
lock
jbe
push
push
sbb
movs
inc
(bad)
cli
cmps
push
xlat
inc
(bad)
mov
sete
mov
(bad)
sub
sbb
mov
sbb
jno
mov
jmp
and
lds
test
and
lea
retf
dec
mov
pop
ret
fcom
add
adc
jns
mov
imul
js
push
mov
xchg
sub
jnp
or
cmc
or
jle
or
ret
push
sub
add
pusha
test
mov
iret
lock
add
pop
jp
int
mov
popf
push
add
mov
dec
rcl
pop
js
sub
cmps
cmp
aaa
dec
call
movs
inc
(bad)
and
mov
rcl
and
nop
jle
ret
into
outs
xchg
aaa
movs
cmp
in
nop
hlt
imul
loope
scas
inc
mov
and
push
int3
pushf
mov
xchg
es
xlat
dec
jb
sub
push
cli
movs
jmp
xchg
cmps
fwait
adc
icebp
mov
mov
sbb
ret
pop
cwde
lds
push
cwde
ds
jp
out
adc
jmp
push
xchg
test
out
aam
imul
xchg
rep
push
pushf
mov
sub
dec
clc
das
inc
or
cmps
stc
dec
sbb
dec
inc
jne
cdq
mov
lock
xchg
mov
push
add
xor
(bad)
mov
pop
mov
in
test
rcr
in
fadd
mov
in
cdq
test
xor
lods
jo
push
mov
or
hlt
lock
push
rol
inc
cmp
mov
lods
imul
cmps
loopne
repnz
fisubr
jl
rcl
pop
les
mov
loope
dec
pop
mov
scas
adc
jl
xor
leave
xor
xchg
sub
jnp
mov
dec
int3
call
pop
mov
(bad)
scas
push
jge
mov
and
jle
test
dec
sbb
lds
cli
pop
repz
outs
movs
mul
leave
(bad)
xor
inc
or
xlat
mov
ret
enter
je
std
ins
mov
cs
mov
fucomp
dec
lods
dec
int3
aas
and
push
dec
std
jno
pop
js
or
icebp
js
jge
(bad)
push
or
jg
fidiv
loope
fs
mov
jl
rol
cwde
mov
repnz
xchg
aas
and
jecxz
sub
scas
sub
adc
test
mov
push
inc
mov
dec
retf
push
outs
xor
sub
bound
sub
pop
call
into
push
and
inc
out
push
outs
cwde
push
or
sub
push
adc
ret
sahf
or
jns
je
retf
cmc
mov
dec
inc
cld
fcmovnu
stos
cmp
add
sbb
jb
fimul
inc
inc
xor
adc
(bad)
inc
(bad)
mov
loop
xchg
xchg
stos
jno
out
mov
and
fwait
cmp
(bad)
sbb
mov
xor
push
adc
bound
and
sub
adc
je
xor
jbe
call
pop
in
adc
fwait
nop
lahf
jns
call
mov
clc
inc
(bad)
retf
ret
or
sbb
ins
add
and
inc
sub
add
movs
out
scas
and
fdivp
fs
cmp
inc
in
mov
lea
cmp
xor
ins
icebp
sbb
rcr
mov
icebp
and
movs
mov
add
loopne
test
jb
sbb
cmp
scas
jecxz
hlt
jge
sbb
cmp
jg
sub
repnz
jae
ficomp
jle
mov
test
xor
mov
xchg
cmc
inc
cmp
pop
mov
sbb
xor
mov
aaa
inc
imul
adc
out
adc
sub
push
push
mov
or
stos
pop
sbb
jmp
xor
pop
push
mov
cmp
retf
jno
nop
ins
hlt
adc
sub
or
mov
ror
inc
retf
fwait
pop
das
cmp
aam
mov
mov
call
jbe
sbb
mov
xlat
pop
inc
retf
mov
mov
aaa
cmc
xor
mov
repnz
retf
mov
mov
inc
sub
and
mov
mov
sbb
in
jo
das
inc
jbe
jmp
loop
shr
xlat
pop
sahf
jp
and
add
mov
sbb
sbb
dec
aam
mov
xor
imul
stc
enter
xchg
enter
jge
jmp
sbb
xor
popa
adc
mov
mov
fild
push
and
inc
fs
cmp
ins
pop
nop
push
and
ror
jno
xchg
idiv
dec
outs
pop
neg
adc
cwde
pop
dec
and
out
mov
add
mov
in
or
mov
ds
repz
inc
aas
pop
je
xlat
inc
fist
xor
out
mov
ds
popf
in
push
sbb
out
add
(bad)
fadd
push
(bad)
sti
push
pushf
(bad)
outs
jge
mov
dec
es
ret
ins
xchg
pushf
sub
mov
fucomp
dec
pop
push
dec
sti
pusha
movs
gs
cs
clc
jle
dec
cwde
call
popf
and
adc
mov
(bad)
adc
stos
mov
repz
jae
push
pushf
into
shl
cli
mov
cs
shl
movs
imul
in
out
xchg
jo
jnp
cwde
les
xchg
and
pop
test
mov
test
push
ins
std
cmp
dec
mov
pushf
cmp
xor
rol
imul
cmp
mov
test
dec
mov
inc
lock
fisubr
into
stos
aad
pop
pop
push
mov
and
mov
sti
jg
pop
arpl
xor
std
ficomp
hlt
je
test
push
pop
mov
into
sbb
mov
jne
scas
mov
xchg
pop
fwait
and
add
push
(bad)
and
inc
sti
cwde
clc
dec
lock
xchg
push
fsubr
in
out
jo
je
dec
xchg
xchg
clc
xor
sub
nop
mov
and
js
sbb
inc
cld
mov
mov
and
push
ds
and
fdivr
jo
mov
shl
inc
jb
sahf
test
push
cmovne
popf
sar
mov
nop
inc
add
rol
jns
sbb
cld
idiv
pop
inc
sbb
jecxz
mov
adc
sub
mov
and
cmp
mov
test
jns
cmp
shl
in
xlat
add
pop
test
xor
out
cmp
out
adc
repz
mov
mov
mov
add
jp
jmp
push
rcl
out
pushf
mov
leave
lods
inc
data16
push
es
and
cmp
test
repnz
add
not
je
mov
in
mov
mov
mov
scas
lods
sub
cmp
out
gs
idiv
nop
cs
xor
jmp
sub
dec
xchg
sar
imul
jbe
add
push
ret
out
shl
sar
rcr
xchg
scas
int
outs
mov
test
lods
fsubr
gs
cld
cmp
mov
mov
xor
dec
(bad)
xor
fisub
nop
mov
inc
sbb
dec
push
mov
fisubr
add
mov
cmp
fild
mov
dec
int3
add
mov
mov
xchg
imul
sub
les
call
mov
stc
stos
fdiv
mov
idiv
popf
or
cwde
and
jp
ins
jecxz
lea
aam
sbb
jns
es
das
std
subps
xor
outs
and
adc
movs
ds
jo
jl
stos
lods
add
arpl
inc
adc
stos
es
sti
mov
outs
inc
inc
mov
jp
les
xchg
push
hlt
pop
in
cmps
sahf
mov
fdivr
dec
jmp
add
add
push
sub
and
cs
rol
fsub
cwde
sbb
mov
out
movs
pop
add
add
enter
cli
test
outs
(bad)
cli
(bad)
mul
into
repnz
rcr
jae
js
int
nop
ins
out
fisub
push
mov
retf
push
mov
add
mov
fwait
xchg
inc
or
xor
out
repnz
enter
jmp
out
sbb
add
repnz
mov
inc
(bad)
mov
mov
sub
jg
in
es
or
xor
arpl
jmp
idiv
sti
xor
icebp
mov
push
int3
imul
add
mov
call
xor
bound
sub
mov
pop
daa
icebp
mov
pop
arpl
loopne
scas
mov
push
push
mov
push
sbb
sar
xchg
ds
pop
icebp
in
cmc
or
test
cmpxchg8b
or
loope
mov
adc
mov
mov
add
sar
jle
jne
mov
(bad)
out
clc
retf
loop
mov
stos
leave
mov
aad
xchg
dec
jp
retf
mov
loope
mov
les
icebp
ins
call
js
ror
push
lock
push
mov
out
xchg
push
out
xchg
das
shl
test
stc
out
cmps
push
fimul
shr
mov
jl
push
mov
das
or
jg
mov
outs
addr16
popf
addr16
inc
ins
xchg
dec
or
aam
and
in
cmps
stos
stos
pop
adc
movs
sbb
shl
in
xchg
(bad)
mov
jmp
(bad)
fwait
imul
cmp
mov
fsub
addr16
mov
repz
mov
sub
jae
or
cmp
and
inc
xchg
inc
aad
enter
adc
movs
test
pushf
push
cmp
cmp
stc
loope
inc
(bad)
fs
jmp
sub
xchg
hlt
fsub
jae
stc
jne
xchg
call
(bad)
and
mov
fmul
jo
inc
aam
inc
dec
pop
retf
rol
aam
aaa
aam
xchg
pop
or
or
lahf
xor
jge
fs
pop
push
repnz
cmp
aas
jbe
movs
(bad)
call
or
fcmovnu
push
sbb
or
push
je
xchg
cwde
sbb
unpckhps
popa
xchg
inc
pop
ror
pushf
adc
das
mov
inc
mov
cli
ins
mov
cmp
adc
jae
push
and
adc
ins
mov
sahf
mov
int3
push
lods
mov
adc
xchg
aad
sub
xchg
scas
xchg
push
mov
out
mov
sti
cmp
jmp
xchg
out
outs
stc
xchg
aaa
test
scas
imul
sti
ret
dec
sub
mov
adc
jmp
mov
mov
mov
loopne
es
fdivrp
cmp
mov
jne
ins
gs
sbb
push
js
cmp
jle
adc
pop
fist
test
or
lock
and
xor
clc
xchg
into
sub
inc
lahf
jl
cdq
dec
adc
sbb
lods
in
and
mov
jge
icebp
push
outs
mov
mov
outs
stos
add
rcr
(bad)
repnz
shl
aam
(bad)
repz
mov
ret
and
daa
aad
out
mov
jns
repz
iret
sbb
ins
rcl
and
jecxz
jbe
stos
cdq
jg
push
or
xchg
and
test
mov
xchg
test
cs
push
push
and
or
fbstp
in
xor
mov
(bad)
pop
add
push
xor
lods
pop
mov
enter
push
shl
lods
mov
cmp
bound
jl
cmp
fdivr
mov
data16
adc
arpl
jb
mov
push
cld
popf
adc
ins
(bad)
int
js
adc
add
in
adc
sbb
rcr
xchg
movs
addr16
cwde
push
inc
jbe
xor
sbb
jne
mov
(bad)
popf
and
ins
jp
std
add
dec
dec
or
mov
out
add
movs
jge
mov
jge
push
daa
int
hlt
(bad)
mov
gs
sti
ins
retf
dec
add
lds
adc
xlat
out
mov
clc
push
cmp
sti
cdq
xor
or
gs
push
sar
aad
cmp
push
fidivr
retf
jmp
jg
mov
xchg
mov
mov
xor
adc
outs
mov
mov
fld
push
push
imul
pop
add
jmp
stc
sub
aad
pop
push
push
(bad)
mov
jmp
and
sbb
jle
outs
inc
les
jle
fnsave
pop
dec
and
cmp
js
adc
mov
jns
sub
mov
aas
mov
out
(bad)
in
add
cmovle
mov
cmc
in
out
retf
push
push
fist
into
inc
inc
xor
int
or
push
out
retf
aad
(bad)
enter
pop
lods
or
stos
ss
mov
mov
xor
xchg
mov
lods
add
dec
sub
nop
repnz
pop
xor
in
xor
add
mov
pop
(bad)
in
outs
pop
push
adc
fild
shl
pop
shr
fild
lahf
dec
retf
sbb
mov
mov
jl
daa
inc
push
mov
stos
iret
xchg
jo
and
mov
mov
cmps
arpl
pop
or
push
xchg
push
jp
xchg
lock
dec
xchg
iret
add
push
and
mov
pop
and
rcl
xor
popf
xchg
mov
adc
pop
lock
enter
ins
cmp
fimul
and
lods
mov
sub
dec
jle
push
lahf
sub
fsubr
cmp
push
aas
(bad)
cmp
dec
inc
inc
adc
aaa
pop
cmc
jp
das
pop
(bad)
jg
mov
mov
loope
or
pop
sbb
clc
inc
or
nop
stos
and
xchg
in
add
sbb
ror
xchg
imul
sbb
out
fiadd
fnstenv
or
sbb
fdiv
fsub
arpl
ds
xchg
ins
xor
jb
xor
sub
dec
add
neg
arpl
pop
int
jo
fs
jl
mov
mov
push
jmp
sub
sub
xor
xor
lock
jb
mov
arpl
fprem1
dec
les
movs
icebp
in
call
cmp
mov
pop
xor
fcomip
or
jbe
mov
scas
ret
mov
jae
leave
in
out
fsub
push
ror
jbe
std
pushf
pop
(bad)
xor
lea
mov
movs
cmp
fwait
(bad)
ror
seta
fimul
ds
sub
jbe
mov
xchg
push
or
inc
test
imul
sbb
xlat
shr
push
push
mov
sub
mov
or
adc
sub
shr
sbb
pop
mov
ins
fsub
jge
inc
sbb
icebp
sub
cmp
and
out
cmp
int
outs
cmps
and
add
in
cmp
fsubr
je
rol
fild
inc
dec
sbb
mov
popa
xlat
dec
and
imul
imul
inc
xchg
imul
aaa
ficom
shr
out
scas
ja
outs
push
push
dec
adc
out
inc
push
(bad)
movs
or
ds
retf
(bad)
fnstenv
retf
mov
int
jne
call
aam
hlt
and
add
mov
sub
imul
ror
in
leave
or
cli
test
add
in
push
push
into
jbe
sbb
fsubr
fwait
(bad)
fs
mov
jmp
fild
add
loopne
jno
mov
and
add
pushf
and
adc
pop
fnstcw
das
outs
scas
pop
cmp
jae
bound
ins
dec
jns
cmp
clc
sub
push
mov
pop
loopne
ror
js
push
mov
mov
popf
cwde
push
fimul
jns
ret
bound
jmp
out
and
mov
fmul
jbe
jp
jmp
dec
fstp
sti
repnz
enter
shl
cmp
out
cmps
jle
jmp
xchg
int3
adc
adc
mul
mov
sub
in
xor
mov
dec
gs
sub
ss
jae
js
inc
push
xchg
mov
sbb
jnp
inc
test
loop
xchg
push
sahf
shr
pop
dec
sub
aad
dec
add
ror
or
and
shr
jle
jb
test
dec
sbb
inc
repnz
lahf
outs
addr16
js
mov
(bad)
dec
inc
and
into
jmp
xchg
and
call
(bad)
add
push
int3
push
movs
test
iret
sub
xchg
sahf
xor
jecxz
fld
jmp
xchg
cmps
cdq
in
mov
loop
jbe
in
pop
jb
jg
mov
iret
call
adc
pop
loop
hlt
aad
dec
sbb
mov
call
loope
shl
mov
loopne
pop
xchg
ins
mov
dec
bound
xor
je
and
test
xchg
adc
jmp
jbe
pop
dec
xchg
call
movs
sub
call
in
call
cmp
pop
dec
jge
ret
jo
mov
push
push
cld
or
mov
cmc
push
jmp
scas
push
jmp
lods
push
fcom
ror
and
aam
outs
fs
outs
sti
mov
mov
ret
jns
and
push
sbb
inc
ja
xchg
sbb
iret
in
call
lss
arpl
shl
mov
mov
adc
les
inc
test
aad
nop
es
xchg
rcl
pop
hlt
add
pop
mov
jno
fwait
sub
mov
ins
mov
int3
cs
out
in
sub
jmp
cdq
clc
jg
int3
jp
mov
push
mov
xor
test
pop
iret
pop
(bad)
(bad)
scas
jecxz
aad
stc
jle
xchg
mov
jbe
xlat
xchg
aad
lea
mov
mov
pusha
jne
cmps
push
sbb
test
sbb
and
mov
adc
(bad)
sub
enter
bound
add
(bad)
jae
inc
hlt
mov
sbb
ins
imul
imul
xor
out
(bad)
(bad)
mov
inc
cmp
push
pop
mov
mov
lods
out
dec
mov
mov
mov
mov
adc
xor
lock
inc
adc
out
jnp
xor
popa
xchg
fdiv
mov
in
ins
sbb
push
push
or
addr16
lahf
pop
jmp
xor
mov
sti
movs
(bad)
stos
xor
lock
cwde
cmc
mov
sbb
xchg
sti
cmp
inc
call
pop
jmp
sbb
mov
add
sbb
mov
das
movs
aaa
or
lds
enter
cli
gs
in
xchg
push
mov
dec
xchg
mov
mov
push
repnz
loop
or
pop
out
test
out
inc
hlt
sbb
(bad)
stos
test
sub
mov
mov
div
pop
sbb
xor
push
pop
mov
mov
movs
in
popf
ficom
aas
xchg
pop
(bad)
jge
(bad)
jno
retf
sbb
xchg
arpl
push
sahf
mov
loop
xor
jge
(bad)
dec
cdq
sar
jle
jmp
mov
jg
mov
test
call
xchg
ret
sahf
out
movs
aaa
stos
outs
sbb
or
and
outs
sbb
stos
mov
or
inc
test
xor
fmul
ror
mov
push
call
lahf
je
adc
imul
jns
pusha
dec
or
dec
pop
leave
es
(bad)
ins
pop
fistp
push
sti
lea
cdq
mov
call
jb
xchg
cmp
scas
jae
and
repnz
out
aaa
add
and
lock
push
sbb
add
out
sbb
(bad)
sbb
fwait
dec
mov
cmps
pop
call
add
popa
cwde
sub
dec
in
test
aaa
mov
test
pop
push
rol
pop
aas
outs
std
imul
sbb
cwde
test
mov
xor
and
clc
push
call
out
mov
sub
in
ror
sub
jnp
ret
loopne
mov
xchg
daa
(bad)
jns
fwait
cmp
and
imul
pop
mov
popf
sbb
test
(bad)
in
jp
mov
(bad)
int3
ret
test
inc
adc
sub
cli
ins
mov
std
fld
dec
pop
outs
fnsave
cmp
add
cmp
xlat
cmp
dec
retf
in
lahf
push
fdiv
mov
clc
add
and
adc
inc
cmp
ds
popf
add
sub
das
dec
mov
cld
sbb
(bad)
xor
ins
add
pop
lea
jno
push
ins
pop
add
das
scas
(bad)
shr
jp
fucomp
cld
out
push
jle
fidiv
xor
ja
retf
out
sbb
pop
sbb
inc
adc
popa
pop
in
pop
dec
popf
jae
jne
mov
dec
scas
cwde
xor
ss
les
jge
sbb
push
add
rol
out
shl
xchg
lahf
retf
xor
pcmpeqw
stos
push
ss
adc
cmp
or
stos
out
imul
inc
in
mov
pop
jecxz
repz
test
add
fwait
adc
cmc
cmp
lds
xor
adc
fcmovb
(bad)
repnz
inc
pop
xchg
inc
cmp
ret
or
ret
punpcklbw
adc
sbb
add
mov
dec
test
cmp
push
fiadd
aam
or
jb
das
leave
xchg
pusha
pop
xchg
push
mov
sub
(bad)
pop
mov
out
aad
in
push
repnz
loopne
int3
adc
mov
jb
mov
jmp
ja
fld
mov
push
addr16
add
inc
push
mov
cs
std
fcomp
push
ffreep
inc
sbb
daa
movs
fdiv
or
fcomp
or
dec
test
push
jnp
adc
fild
mov
dec
sub
inc
cmp
cdq
movs
daa
adc
adc
push
fisubr
pushf
mov
cli
mov
pusha
mov
xchg
aaa
pop
je
hlt
xchg
fcmovb
push
mov
leave
ret
mov
jecxz
push
shl
retf
or
bound
sbb
adc
sub
inc
mov
inc
jno
dec
(bad)
xchg
add
pop
cmps
(bad)
jbe
add
adc
jge
inc
(bad)
cli
ins
std
popa
xchg
std
push
push
sar
jl
dec
mov
mov
inc
fisttp
repnz
jne
ins
fsub
adc
mov
push
sub
lods
movs
in
adc
add
(bad)
jmp
test
sub
dec
retf
inc
sbb
mov
jmp
loop
fbstp
lea
das
mov
jl
cdq
(bad)
inc
mov
movs
(bad)
mov
add
push
xchg
xchg
sub
sub
lods
and
pop
sub
push
and
adc
ficomp
popa
out
add
sbb
retf
scas
inc
bound
xchg
sub
enter
sbb
gs
xchg
cmp
dec
in
mov
add
dec
adc
rol
pop
das
imul
xchg
jno
ror
retf
cwde
or
lahf
js
out
push
push
gs
popa
cmps
clc
icebp
add
add
ret
mov
cmp
mov
(bad)
in
loop
xchg
cmp
test
xchg
mov
inc
maskmovq
not
int
mov
cld
cwde
xor
xor
std
sbb
dec
fdivr
call
cdq
mov
mov
jg
mov
mov
cmps
jmp
mov
mov
xrelease
(bad)
aad
cmp
shl
mov
cs
stos
fidivr
imul
arpl
pop
in
ror
xchg
jnp
inc
test
in
cli
and
das
sbb
mov
(bad)
call
arpl
sbb
inc
or
mov
jbe
pop
pushf
fistp
out
fsub
movs
sbb
aad
imul
ret
lods
cmps
adc
inc
xor
xor
xchg
addr16
jmp
fadd
xor
mov
jne
or
mov
and
xor
xlat
jno
cmp
hlt
loop
ins
(bad)
jecxz
push
(bad)
retf
ja
mov
adc
fistp
or
aaa
out
scas
jns
push
add
add
mov
lds
js
pop
cmp
mov
xchg
pusha
jmp
(bad)
repz
adc
repnz
or
int
jae
push
xchg
xchg
cmp
sub
mov
clc
add
sbb
mov
cmps
mov
add
mov
sub
jnp
sbb
shl
(bad)
addr16
(bad)
push
shl
(bad)
xchg
cs
xchg
inc
fistp
into
add
std
pop
wbinvd
cmp
sub
loope
data16
jle
cli
into
sbb
ror
inc
popa
add
dec
jnp
cmp
xor
xchg
push
je
(bad)
fiadd
repz
lea
mov
xchg
repnz
pusha
shl
dec
mov
pop
inc
jg
inc
rol
pop
(bad)
iret
jl
iret
mov
aaa
adc
ret
jle
mov
sub
adc
les
clc
and
xchg
mov
cmp
pop
inc
sahf
pop
mov
ja
(bad)
sbb
pop
cs
jecxz
adc
sub
aas
xchg
sub
bound
cmp
pop
rol
into
gs
lds
mov
add
les
mov
(bad)
sahf
cmp
add
jns
and
daa
ror
mov
pop
push
arpl
dec
xchg
shl
in
aas
aam
and
ss
push
dec
adc
int
or
fisub
jo
xchg
xor
jmp
mov
lea
mov
(bad)
mov
or
daa
jmp
call
sub
jne
jp
fnstenv
adc
call
adc
jns
adc
xor
mov
dec
test
mov
cli
in
ror
push
or
loope
or
stos
retf
xchg
pop
mov
sbb
stos
dec
cmps
add
pop
icebp
mov
ds
cmp
jne
xchg
pop
adc
or
call
lock
fs
dec
xor
push
xchg
in
push
sub
inc
retf
es
cmps
sbb
lock
dec
imul
pop
mov
push
leave
std
lahf
daa
pop
enter
xchg
cld
aam
(bad)
in
push
ret
adc
ja
ja
movs
add
div
adc
pop
or
leave
(bad)
xor
and
aaa
cmp
dec
push
push
xchg
stos
xor
lahf
test
adc
call
xor
cld
lods
retf
and
fistp
sahf
out
mov
jp
xor
(bad)
gs
leave
add
je
in
lea
je
mov
neg
push
inc
imul
xchg
mov
and
cmp
sbb
test
iret
scas
mov
lds
xchg
and
inc
lahf
pop
add
and
test
shl
lods
pop
inc
in
mov
test
and
(bad)
rcr
xchg
mov
inc
sub
sbb
mov
cld
aaa
cmp
adc
mov
xor
mov
stos
icebp
xchg
cdq
xchg
jmp
in
cmp
pop
call
inc
ds
pop
push
popa
std
ret
je
leave
xchg
ret
mov
sub
sti
jle
xchg
aad
sub
mov
add
sub
mov
or
shl
cmps
int3
cmp
cwde
jmp
push
aad
lods
ror
sar
repz
es
push
daa
cmp
add
push
pop
mov
push
lea
loop
cmp
inc
and
mov
fstp
mov
inc
pop
push
mov
mov
jge
leave
imul
in
or
pop
mov
or
jnp
pop
stc
mov
jno
cmps
inc
adc
sbb
sahf
loope
push
imul
cmp
(bad)
movs
adc
imul
mov
mov
mov
add
retf
movq
fstp
sub
scas
jbe
jecxz
mov
dec
cmc
daa
dec
or
dec
push
jecxz
stc
mov
push
dec
mov
outs
retf
test
adc
jae
push
push
mov
xor
nop
xchg
adc
cmpxchg
sbb
jmp
loop
sub
fidivr
loope
lods
push
dec
bound
fs
scas
clc
sahf
mov
or
sub
outs
push
dec
push
mov
jecxz
(bad)
dec
in
sahf
and
push
shl
xchg
mov
imul
ds
(bad)
arpl
cmp
sbb
mov
in
sbb
fwait
sub
call
std
inc
mov
cmps
loopne
cmp
psrld
push
hlt
ret
or
push
dec
(bad)
xchg
inc
dec
cli
jp
jne
out
jp
jge
sbb
ret
pop
mov
mov
sbb
je
xchg
sbb
lds
inc
xchg
stc
fadd
pop
pop
sub
and
pusha
and
lods
lods
adc
cmp
daa
aas
retf
sub
daa
ins
push
sub
add
nop
mov
xor
or
(bad)
add
fsincos
ret
jle
paddq
jp
int
jmp
dec
mov
fs
inc
movs
xchg
xchg
inc
jle
fiadd
shl
jg
retf
mov
mov
cli
fisub
inc
(bad)
shl
dec
call
addr16
iret
in
frstor
in
cmps
and
cmps
fs
add
jmp
shl
adc
push
sti
sbb
fdivr
mov
aam
rcr
adc
xchg
pop
popa
push
out
mov
(bad)
in
pop
xchg
inc
fs
jmp
ins
aas
sahf
inc
push
(bad)
cmp
cdq
add
scas
daa
inc
daa
ret
(bad)
repnz
mov
mov
cli
aas
mov
sbb
loope
fistp
dec
push
popf
dec
test
mov
jo
lds
adc
pushf
sbb
mov
mov
std
mov
ret
cdq
add
sbb
(bad)
jge
mov
adc
pop
stos
psrad
lock
jl
adc
dec
cli
retf
pop
or
mov
fbstp
mov
mov
xor
out
cmp
mov
push
xchg
cmp
movs
shl
and
fld
sbb
inc
fistp
out
and
cmp
mul
sbb
push
sbb
std
push
nop
xchg
les
scas
enter
cs
call
popa
push
rol
arpl
mov
dec
mov
push
shl
data16
loopne
sub
lahf
xchg
jnp
adc
retf
mov
sbb
fnstcw
lahf
fcom
mov
push
adc
shl
xorps
ss
fisttp
jae
ja
test
mov
cmp
cmp
xor
adc
leave
add
jg
test
xchg
or
xchg
cmp
add
pop
loopne
shl
ds
psubq
cmps
stos
pop
icebp
repnz
lds
(bad)
jnp
dec
cmp
call
push
xchg
mov
imul
mov
ret
mov
retf
jecxz
pop
leave
inc
cmp
ja
pop
(bad)
xchg
pop
xchg
xchg
push
mov
in
imul
sub
xor
mov
inc
sub
nop
sub
ret
call
cmp
fcomp
and
mov
loopne
dec
dec
fbstp
sbb
(bad)
push
std
mov
jne
and
and
push
cld
push
outs
inc
aam
cld
add
jnp
das
out
movs
inc
add
xchg
xchg
retf
retf
cs
(bad)
mov
es
sti
mov
mov
hlt
ja
cmc
add
push
iret
fcomip
mov
clc
jmp
sbb
pop
les
pop
fwait
stc
sti
xor
jb
js
les
lahf
ret
jg
adc
adc
out
cmps
add
jo
add
(bad)
(bad)
jnp
mov
adc
ins
dec
jae
mov
jl
cmp
push
ins
push
outs
xchg
sub
pusha
daa
cmp
xchg
call
xor
fisub
push
cmps
js
popf
cli
mov
sub
dec
ret
leave
fcmovbe
icebp
aas
inc
push
xchg
scas
rol
sbb
cmps
push
inc
das
jg
adc
dec
daa
inc
mov
or
(bad)
fnsave
push
lea
nop
or
or
repnz
sub
daa
lods
sbb
cs
cmp
dec
adc
push
add
out
scas
punpckhwd
xchg
clc
adc
repnz
fs
pop
sub
inc
and
mov
fldenv
inc
imul
(bad)
fnsave
inc
jl
test
stos
and
dec
out
iret
push
jbe
lds
call
(bad)
mul
ret
xchg
icebp
bound
push
pop
int
out
lods
dec
jecxz
adc
cwde
adc
cmps
sbb
shr
xlat
fbstp
push
and
sub
sbb
inc
fcom
mov
xchg
jne
cmp
xchg
cmp
sub
or
jmp
(bad)
out
pushf
jns
imul
cmp
xor
test
jge
mov
test
and
into
jae
mov
shl
mov
pop
push
fimul
mov
cmp
in
push
xchg
push
retf
mov
sub
movs
call
(bad)
adc
dec
mov
loope
cmp
pushf
push
je
out
call
push
shl
les
pop
adc
out
inc
scas
sbb
js
push
ret
cmp
mov
jbe
add
ficom
mov
aaa
enter
pop
jo
repz
or
clc
test
add
stos
push
mov
jo
or
pop
jp
pop
movs
pop
push
push
pop
iret
sub
out
mov
xchg
pop
xchg
or
sub
jns
jno
pop
adc
lahf
imul
in
leave
bound
fdivr
or
xor
stos
mov
jp
mov
sub
pop
and
push
push
jmp
xchg
sub
adc
jae
jecxz
test
aaa
add
enter
stc
repz
pop
jl
gs
in
cld
cmp
test
xchg
pusha
mov
imul
xchg
fistp
nop
lds
fdivr
mov
in
ins
sbb
loop
mov
cwde
popa
repnz
fld
outs
push
and
mov
xchg
aaa
mov
or
add
icebp
daa
mov
inc
in
lds
mov
dec
outs
jno
scas
or
nop
sub
jae
dec
dec
inc
das
popa
adc
xchg
cmp
mov
dec
cs
repnz
(bad)
test
(bad)
(bad)
mov
jl
pop
jno
pushf
movs
imul
jg
xor
and
fidivr
mov
fwait
xor
repnz
aaa
cld
mov
fild
outs
loop
clc
icebp
mov
das
mov
dec
(bad)
cmp
ret
xchg
pushf
add
out
pusha
jb
repz
or
jns
xor
xchg
mov
clc
loop
jno
push
cmp
cwde
pusha
je
adc
popf
test
int3
mov
adc
pop
add
mov
scas
data16
daa
call
push
xchg
jle
ret
xchg
int
inc
nop
loop
mov
pop
cld
cmc
xchg
fnstsw
push
fbld
call
inc
jl
not
rcl
dec
pushf
inc
xor
daa
inc
and
sub
fidiv
aad
fidivr
aam
pop
ret
ret
lock
jecxz
adc
xor
mov
arpl
xor
pop
aas
dec
out
loop
sar
push
leave
add
xlat
stos
xlat
sub
(bad)
loopne
iret
pop
es
add
jns
dec
mov
test
xlat
adc
cmp
test
daa
xor
cmps
ja
xor
fcom
outs
lock
rcl
retf
inc
inc
ror
mov
dec
push
xor
rol
mov
in
aam
lea
shr
push
(bad)
xor
add
pusha
xchg
cmp
retf
mov
sar
jge
inc
cmp
fsubr
pop
sbb
jno
shl
test
mov
sbb
xchg
dec
add
out
loop
popf
mov
cmps
sub
push
scas
enter
push
fnstsw
add
inc
jecxz
stos
jecxz
jmp
push
push
pop
or
add
jne
or
and
sbb
jp
imul
mov
movs
(bad)
cmp
or
adc
js
retf
or
hlt
adc
ds
lea
and
sub
fwait
adc
dec
xlat
cmp
and
adc
jmp
mov
jg
(bad)
adc
sbb
(bad)
sbb
xchg
jmp
and
sbb
ret
jno
inc
or
xor
out
clc
sub
xor
sahf
mov
dec
xor
loope
pop
xchg
mov
fistp
dec
lods
std
cdq
sbb
mov
iret
sbb
inc
cmp
out
lea
das
clc
cmp
push
adc
cmp
fstp
sub
adc
add
or
rol
sub
add
xchg
mov
mov
ret
cmps
cmp
sub
xor
(bad)
jp
ins
and
scas
and
shr
mul
xchg
sbb
mov
ror
pop
add
sub
movs
retf
popa
push
jno
mov
push
pop
fcmovne
(bad)
sbb
mov
push
inc
and
fsub
or
push
sbb
or
retf
dec
cmps
push
push
dec
lea
test
aaa
inc
(bad)
std
dec
xchg
fistp
shl
jge
jl
inc
and
sub
and
jo
loopne
xchg
mov
add
xchg
scas
cli
popf
fsub
mov
cmc
xchg
out
xchg
push
scas
cdq
push
and
push
mov
mov
fwait
ja
mov
rcl
lea
and
outs
jae
push
cmp
movs
pop
out
in
and
std
xlat
pop
test
xchg
jbe
sub
mov
shl
add
pop
movs
test
(bad)
sub
in
stos
in
mov
dec
das
ins
rcr
dec
jno
icebp
cs
and
mov
(bad)
enter
add
pop
scas
fiadd
cmc
add
outs
scas
iret
fldenv
(bad)
mov
aad
fst
or
cli
jmp
test
xor
hlt
add
and
dec
(bad)
inc
loope
mov
mov
js
mov
shl
into
ins
sub
xchg
fsub
js
mov
push
push
or
push
ins
pop
add
call
dec
adc
iret
pusha
jp
sub
icebp
enter
(bad)
jmp
cmp
dec
sar
sti
leave
add
hlt
pop
out
dec
jl
in
jns
pop
adc
pop
push
int3
push
ds
push
mov
jnp
mov
cld
sub
lods
movs
in
xor
mov
lods
aad
mov
rol
int3
cmc
dec
jecxz
ror
sbb
pusha
lods
lahf
sti
mov
mov
pop
or
es
outs
jmp
imul
jbe
push
cmps
mov
leave
xchg
test
pop
lods
xor
mov
mov
(bad)
and
jecxz
imul
push
push
jno
(bad)
fdiv
add
pop
in
and
aam
xchg
dec
fsubr
mov
call
repz
sbb
rol
ss
repz
dec
mov
iret
(bad)
sub
pop
fwait
cmc
mov
and
and
in
pop
pop
xor
fisubr
ins
or
cmp
add
cdq
(bad)
cli
jmp
adc
add
xor
push
in
movs
adc
push
mov
test
mov
pop
sub
add
or
in
lock
es
add
dec
ror
add
aad
mov
push
pop
xchg
cmp
scas
mov
lock
mov
icebp
sub
aad
cdq
dec
mov
push
gs
cmp
xchg
outs
fadd
jle
popa
cmps
shr
in
mov
ret
aam
adc
in
push
dec
push
hlt
out
add
ret
push
mov
cmp
sbb
cmc
dec
xchg
sub
enter
and
in
push
jnp
xor
sbb
mov
inc
stos
xchg
imul
dec
outs
cs
pop
jmp
leave
sbb
in
or
test
push
sub
jl
in
cld
repz
xlat
scas
daa
mov
lea
imul
mov
aad
mov
pop
push
mov
fisttp
or
xor
dec
fild
fwait
jmp
lds
shl
fdiv
into
dec
jne
mov
call
hlt
pop
add
sti
push
mov
jmp
nop
loop
xor
fsubp
rol
mov
mov
ret
sub
inc
jo
adc
xchg
sbb
cmp
pusha
lock
mov
cli
mov
pop
xchg
adc
push
cwde
mov
mov
dec
pop
mov
xchg
jecxz
push
adc
ret
ret
or
rsqrtps
mov
dec
out
mov
fnstcw
mov
fwait
xchg
je
jns
lock
push
xor
popf
sbb
sbb
rcl
mov
cmp
or
push
in
imul
jae
and
mov
cmp
add
test
das
cwde
mov
ja
mov
ins
je
not
or
mov
stc
scas
adc
xor
jmp
push
mov
addr16
mov
and
test
mov
repnz
xor
and
test
dec
fimul
xchg
mov
imul
push
cmps
popa
inc
or
stc
sub
add
lock
sub
in
jnp
inc
in
(bad)
lea
lock
and
shl
xchg
test
xchg
mov
fisubr
fsub
ins
push
aam
bnd
fisttp
mov
loop
imul
arpl
int3
fiadd
sub
cwde
rcr
sub
sbb
push
or
dec
scas
push
inc
int3
stos
fwait
cmp
xchg
dec
push
or
outs
ss
call
std
push
fcmovnbe
push
push
sub
and
and
outs
repnz
adc
push
aaa
aam
sbb
inc
push
bound
add
cmp
jmp
mov
test
push
fdivrp
test
aam
cmp
mov
pushf
cmp
and
fldcw
or
mov
test
cwde
jmp
mov
sub
outs
ins
call
cmp
stos
jo
push
cmps
repnz
pop
in
cmps
jmp
cwd
mov
adc
lock
xchg
outs
daa
(bad)
cmp
mov
pusha
ins
mov
sub
rol
mov
cwde
jo
adc
inc
xor
cmps
and
jne
ror
sub
loop
call
mov
outs
neg
pop
xchg
(bad)
fimul
rol
mov
es
or
ds
mov
sbb
sahf
test
push
xchg
clts
ud1
js
repz
out
test
aam
jae
shl
pusha
dec
adc
cmp
add
aas
in
push
iret
dec
sahf
test
fdivr
rcl
jecxz
xlat
fmulp
leave
add
je
adc
cmp
and
push
pop
cmps
fidiv
mov
mov
fimul
icebp
xchg
call
mov
push
(bad)
test
mov
js
int
push
sahf
jb
sub
jmp
and
fiadd
inc
sub
cmp
push
cdq
fild
ins
and
pop
into
xor
or
xchg
pop
test
sbb
xchg
ret
jns
stc
clc
and
loop
add
mov
cmp
mov
stos
aaa
push
fisub
(bad)
lods
jmp
dec
and
mov
jno
ss
cmps
fisub
add
dec
or
inc
pop
fnstenv
fs
repz
mov
sbb
lods
cld
ja
adc
(bad)
inc
jne
cdq
add
mov
add
fs
xchg
iret
mov
inc
rcl
add
data16
and
push
push
mov
jmp
or
xchg
cwde
sub
rcr
jmp
pop
sbb
xor
leave
push
or
ja
sub
or
pop
push
sbb
loope
jo
aam
pop
mov
vpavgw
mov
mov
add
sub
jnp
xchg
xchg
into
in
inc
call
mov
xchg
out
jg
clc
lods
in
dec
sub
sbb
sub
aas
out
mov
dec
inc
add
and
push
jle
js
mov
sbb
aas
lds
mov
sti
sub
jg
push
int3
in
jmp
aam
ror
mov
nop
mov
in
pop
ss
mov
ror
push
sbb
and
(bad)
jp
or
sub
repz
(bad)
jmp
loop
out
sub
jmp
mov
sbb
es
mov
popf
popf
adc
jl
dec
fisubr
inc
test
loope
jge
outs
inc
ss
repnz
popa
in
int3
add
shl
call
add
mov
out
pusha
movs
div
js
push
pusha
jecxz
bound
ins
or
and
and
inc
sbb
les
in
and
movs
test
mov
repnz
mov
(bad)
cmp
push
je
in
dec
push
dec
imul
push
push
sbb
je
mov
inc
push
cdq
pop
call
cmp
lods
inc
loopne
ins
dec
enter
clc
sub
lds
sub
pop
pop
retf
dec
pop
mov
xchg
mov
fdiv
jmp
jns
xchg
jp
or
les
jmp
sti
push
mov
xchg
jne
xchg
ins
jp
and
adc
call
or
add
stos
scas
icebp
paddsb
pusha
ins
retf
jecxz
dec
clc
cs
mov
mov
aas
or
mov
xchg
fwait
cld
cmps
add
mov
push
fcomp
sbb
xor
outs
sub
mov
xchg
mov
mov
pop
shl
adc
jb
stos
sbb
int3
mov
or
ret
jne
movs
retf
sub
pop
sbb
cld
or
mov
pop
arpl
sub
in
cs
cmps
push
cmp
xchg
bound
in
xlat
sub
mov
cdq
scas
and
jb
cmps
in
adc
ffree
push
dec
aaa
das
inc
jae
outs
rcr
or
mov
inc
cmp
(bad)
push
sbb
cli
neg
ss
frstor
cdq
cmp
test
ret
xchg
stos
mov
jns
addr16
stos
mov
cmp
(bad)
sub
out
ret
retf
pop
cmc
(bad)
or
aaa
and
cdq
xchg
popf
in
lock
push
scas
dec
stc
dec
cmps
in
and
push
sub
dec
stos
cmovle
mov
pop
in
out
rcr
loope
std
mov
js
out
pop
in
sbb
rcr
cs
sub
loope
sub
lahf
shl
clc
mov
sub
mov
ins
retf
sub
or
pop
inc
and
ja
and
repz
xor
rcr
in
sub
imul
mov
inc
inc
test
push
sbb
(bad)
dec
fstp
mov
aaa
gs
mov
push
loop
inc
aas
and
fmul
jmp
arpl
or
stc
mov
xchg
stos
mov
daa
mov
les
add
xchg
pushf
pop
lea
xor
mov
mov
sbb
lds
xchg
push
sar
jb
xchg
lea
out
retf
ror
mov
jbe
test
jns
js
aas
aas
inc
not
or
ficom
xor
stc
(bad)
add
call
lods
add
jbe
rcr
js
inc
dec
push
pop
push
sar
add
mov
out
push
pusha
das
push
and
hlt
pop
mov
jge
jae
int3
imul
daa
js
ret
frstor
je
and
sahf
cmps
mov
ss
dec
out
mov
jo
mov
dec
push
mov
(bad)
jecxz
mov
cmp
push
popf
xlat
sbb
and
or
xor
scas
int
sahf
loope
pop
push
xchg
inc
clc
ins
movs
out
int3
outs
inc
jl
and
sbb
ret
addr16
cmp
test
dec
xchg
mov
mov
mov
add
xor
mov
stc
mov
in
rol
mov
repz
gs
test
stos
fsubr
movs
pop
pop
xchg
jecxz
aam
cmp
pop
lahf
pop
cwde
int3
adc
inc
sub
or
lea
xor
xchg
mov
sbb
add
retf
in
pop
add
push
sbb
push
dec
rol
adc
dec
imul
xchg
pop
sub
mov
xchg
pop
aaa
mov
sar
add
mov
push
cmp
or
mov
jl
push
mov
jb
inc
aaa
test
(bad)
mov
shr
xchg
mov
jnp
push
ror
(bad)
cmp
push
dec
sbb
fstp
rol
aam
stos
ja
push
and
lock
scas
add
jmp
pop
(bad)
iret
push
cmc
push
ficomp
mov
ja
(bad)
add
dec
pop
lds
cmps
cmp
fbld
xor
jae
xor
inc
adc
test
loopne
ds
popf
out
out
add
add
inc
icebp
sub
les
iret
mov
icebp
jl
cmp
sbb
sub
iret
mov
inc
lea
cmp
or
jecxz
fld
sbb
mov
push
in
and
jmp
cmp
push
sub
enter
xor
pop
mov
(bad)
or
sbb
cmp
xlat
test
lea
xchg
pop
ds
cmps
and
loope
pop
push
push
nop
xchg
jmp
das
inc
push
fbstp
inc
fsubr
fdivr
popa
clc
mov
shr
lods
jnp
jl
adc
push
mov
cwde
inc
xor
ret
lock
jge
je
adc
inc
mov
fcomp
test
sbb
sub
popf
adc
cs
sub
sbb
jb
scas
popa
mov
sub
dec
retf
outs
push
enter
pusha
adc
and
movs
xchg
inc
retf
repz
mov
jle
pop
sub
scas
cld
push
mov
cli
mov
jb
call
(bad)
sbb
mov
not
cmp
pop
push
pop
mov
xlat
mov
pop
mov
or
jo
aas
loopne
call
aad
pop
call
fdivrp
jmp
ss
push
mov
call
ss
fwait
pop
fs
outs
pop
inc
jne
lock
sub
push
sbb
push
dec
ja
push
or
xchg
cwde
inc
cdq
inc
xor
or
das
fidiv
stos
jnp
outs
test
dec
jp
iret
adc
es
xor
aam
jns
out
cs
adc
dec
ret
(bad)
movs
(bad)
outs
fimul
out
fst
je
cmp
hlt
push
in
enter
movs
pop
jle
mov
ret
pop
(bad)
hlt
add
ss
adc
mov
repz
xor
and
jmp
mov
mov
js
add
or
stos
push
stos
sbb
(bad)
retf
or
fwait
cmp
jp
repz
into
aam
and
mov
lods
loop
sbb
jnp
shl
cmp
into
mov
mov
sub
cmp
ret
xchg
loopne
cmp
idiv
pop
jb
pop
mov
out
push
fistp
shl
mov
push
cdq
test
xor
sub
jl
mov
push
ja
jecxz
dec
lods
cld
bound
push
rcl
jp
xor
inc
out
lods
rol
or
out
int
mov
adc
push
loop
lock
mov
stos
sub
shl
xchg
inc
jne
jbe
(bad)
scas
add
ins
inc
sar
pop
call
outs
clc
ror
inc
shl
push
aas
add
outs
mov
(bad)
(bad)
bound
aas
pushf
push
add
pop
jg
in
pop
inc
cmc
adc
lea
mov
push
shl
cli
in
addr16
xchg
and
iret
xor
mov
inc
mov
xor
test
icebp
mov
rcl
add
mov
inc
xchg
mov
jecxz
xchg
jo
xchg
or
pop
and
(bad)
mov
iret
jb
and
adc
rep
aas
mov
(bad)
fcomp
xor
test
sbb
inc
retf
hlt
aam
cs
jmp
and
stos
pop
mov
push
popf
in
jno
sub
aam
xchg
cmps
es
jmp
sub
je
xor
daa
xor
jnp
pop
mov
mov
out
pusha
(bad)
data16
(bad)
jae
xor
test
pop
pop
add
mov
nop
fiadd
gs
jl
retf
inc
mov
lea
or
and
xor
mov
xchg
int3
test
lods
xchg
and
push
fstp
xchg
and
cmp
cmp
add
dec
inc
xchg
(bad)
shl
mov
lahf
push
xchg
les
daa
(bad)
outs
not
ja
test
stc
movs
jge
inc
pop
pop
test
or
rcl
stos
xor
cmps
mov
mov
sub
mov
in
jo
adc
(bad)
rcl
mov
cmps
sub
retf
das
fisttp
lods
fsubr
das
mov
lea
jno
jno
test
mov
xchg
mov
sbb
xchg
dec
and
mov
lock
mov
jmp
sbb
mov
jecxz
in
mov
cmps
add
jg
scas
xor
sub
pop
jmp
pop
icebp
xchg
sbb
adc
cli
pop
push
loop
mov
and
leave
arpl
mov
jb
pusha
ret
and
pop
xor
aam
mov
cmp
out
fisttp
xor
stos
jae
sub
jno
sbb
lock
inc
out
bound
dec
and
dec
inc
jno
inc
jmp
movs
mov
movs
mov
pop
xchg
jge
outs
dec
jno
fdivr
int
or
cdq
inc
aam
imul
mov
or
out
cmp
out
push
inc
sub
sti
mov
xchg
imul
dec
and
inc
adc
push
sbb
push
test
(bad)
push
(bad)
cmp
ret
add
rcr
shl
xor
lock
push
(bad)
fsubr
xchg
jmp
mov
sbb
int3
(bad)
scas
clc
rcr
aam
bound
or
pop
xor
inc
mov
mov
lock
xchg
or
mov
int
xchg
or
inc
dec
sbb
jle
in
xchg
add
pop
out
pop
enter
in
hlt
retf
jns
sub
push
iret
and
inc
push
adc
lea
pop
cmp
or
jmp
into
in
in
jl
xchg
sub
in
addr16
mov
xchg
inc
adc
lock
or
mov
mov
addr16
cmp
jecxz
or
inc
in
mov
pop
outs
mov
aad
mov
loopne
into
mov
mov
outs
push
push
cmc
je
sbb
jp
stc
xchg
mov
cmc
add
popf
cmps
fbstp
cmovp
sbb
jmp
lods
(bad)
je
mov
jne
lock
(bad)
sub
xchg
(bad)
imul
sub
and
aam
rcl
vpaddw
imul
mov
and
aad
xor
mov
pop
aad
xchg
and
mov
sbb
or
push
(bad)
fidivr
pop
cmps
inc
pop
cmps
shr
fsub
cdq
(bad)
aam
test
jb
push
cmps
add
adc
xor
shl
(bad)
push
scas
pop
and
cmp
adc
sbb
cmps
pop
mov
or
out
ds
mov
call
out
jmp
pop
ds
dec
and
fs
xlat
sbb
add
lods
sub
test
(bad)
call
out
pop
mov
pop
mov
(bad)
fnstcw
pop
push
cmp
shl
dec
add
mov
cmps
dec
aas
push
outs
sbb
push
cmp
pop
sub
push
test
(bad)
mov
jbe
or
xchg
out
add
prefetcht2
jo
sbb
mov
mov
(bad)
lds
ja
outs
je
dec
jl
out
jmp
mov
out
sub
scas
add
shr
hlt
jne
jp
adc
jb
cmp
fwait
repnz
fs
sbb
pop
xchg
jge
mov
push
sub
inc
jp
les
les
fs
sbb
inc
fmul
test
lock
mov
hlt
jnp
in
cmp
inc
test
pop
(bad)
pop
popa
add
xchg
out
dec
fimul
or
adc
inc
mov
mov
xor
cmp
test
mov
in
mov
pop
xchg
adc
sar
mov
jae
fbstp
or
inc
cwde
addps
iret
mov
cmps
jne
shl
mov
ss
je
cld
cmp
adc
(bad)
pusha
sahf
ret
int
adc
xor
push
xor
nop
push
fidiv
ja
mov
xor
lea
mov
popa
shl
jne
js
ret
xchg
push
and
push
jbe
in
sub
xadd
sbb
ret
sub
lods
inc
or
std
push
dec
sti
mov
aad
imul
nop
jo
pop
or
jmp
loopne
ins
inc
xor
mov
add
pop
sbb
ss
repnz
pop
in
jns
daa
mov
push
adc
movs
mov
xor
xchg
dec
cmp
ret
add
xor
punpckhdq
lds
lds
out
into
in
mov
movs
sbb
cmc
sub
movs
mov
call
sti
jo
push
mov
jp
sub
mov
scas
(bad)
add
xchg
inc
mov
sub
leave
outs
push
jnp
std
retf
cld
into
pop
push
(bad)
adc
ins
adc
clc
jae
xchg
and
enter
popa
push
push
imul
les
stos
mov
nop
sub
outs
and
enter
ret
enter
in
inc
and
jno
mov
dec
add
sub
xchg
xor
pop
js
out
push
jl
push
addr16
adc
pop
cdq
jnp
mov
xchg
popf
pop
or
mov
ins
or
pop
push
sub
xor
lods
mov
movs
pop
xchg
pop
mov
aas
ins
cmp
or
sbb
push
mov
pop
addr16
sbb
sub
inc
push
xchg
(bad)
loop
dec
add
sub
outs
inc
ja
push
scas
into
xchg
mov
add
sub
inc
(bad)
lea
and
or
cmp
pusha
jecxz
jl
jnp
mov
dec
xlat
ins
mov
lods
and
std
mov
or
lds
and
cmp
fisub
mov
int
cmp
jp
cmp
xchg
cmp
outs
ficomp
ficomp
mov
aas
loopne
mov
lods
add
pop
and
cbw
inc
push
(bad)
in
push
jp
addr16
js
lods
sub
fnstcw
jl
sub
call
loopne
loope
les
mov
jb
push
sar
out
sti
test
mov
add
cmp
dec
mov
pop
jb
mov
lds
sti
(bad)
mov
dec
icebp
leave
cmps
imul
sub
jmp
(bad)
mov
scas
out
lods
ja
into
or
inc
adc
shl
ins
popf
dec
cwde
stos
mov
sub
pop
rol
out
ret
add
in
mov
es
add
inc
mov
cmp
pop
shr
adc
in
into
cmp
xchg
mov
ins
dec
daa
mov
push
jmp
or
into
cmp
in
jmp
cmp
xchg
mov
jo
jl
jl
mov
inc
ins
aad
mov
and
mov
cmp
lock
pop
lods
stc
mov
jge
(bad)
jns
or
jns
imul
inc
cwde
jns
add
icebp
in
pop
outs
inc
retf
adc
lods
sub
pop
push
inc
xor
mov
pop
xlat
push
push
ss
enter
mov
or
dec
xor
or
jmp
cmp
imul
(bad)
push
addr16
and
add
xchg
sbb
rcr
dec
xchg
xor
dec
xor
inc
dec
(bad)
in
fmul
pop
fild
fld
ret
retf
jns
mov
out
cmp
jmp
in
xchg
retf
and
push
jae
pop
jne
int
add
sub
push
cld
mov
mov
bound
adc
jns
xor
add
cmp
add
mov
push
mov
outs
push
lock
cdq
test
jmp
pusha
jns
jle
not
mov
inc
(bad)
fucom
je
pop
push
cs
and
mov
and
xchg
ins
mov
aaa
daa
pop
repz
adc
ror
jnp
xchg
stos
shr
popa
mov
call
int
hlt
xchg
sbb
pop
test
rol
int
dec
int3
or
add
loopne
mov
push
cmc
mov
ins
fidivr
shl
push
(bad)
xchg
cmc
in
sbb
out
inc
cwde
imul
in
fwait
ds
test
enter
retf
xor
sbb
mov
adc
mov
scas
cdq
repz
mov
sub
stos
mov
cmps
push
cmp
sbb
add
mov
dec
jl
and
sahf
pop
mov
push
inc
daa
fcmovnbe
mov
icebp
movs
adc
inc
das
xchg
push
pushf
daa
mov
pop
cmp
cmp
ja
scas
in
jo
xchg
sti
dec
mov
mov
outs
fwait
int
inc
in
popa
retf
mov
xchg
es
or
dec
and
xchg
adc
adc
int
cmp
imul
in
or
in
adc
cmps
mov
into
leave
mov
test
add
push
into
adc
inc
push
cmps
daa
aaa
xor
(bad)
jno
out
xchg
jecxz
sub
pmaxsw
and
pop
mov
or
cld
add
adc
fcomp
es
imul
inc
es
pop
ins
loopne
xor
je
shl
adc
adc
cwde
es
jg
lea
icebp
cmp
mov
ss
pusha
xor
(bad)
addr16
icebp
jge
pop
push
bound
cli
test
jbe
cmp
rcr
or
fnstsw
je
mov
and
push
fucomp
es
xchg
dec
jl
cs
jns
sahf
pop
xor
push
adc
inc
mov
dec
inc
pop
out
retf
mul
xor
sbb
and
jge
ss
cmp
ror
mov
xchg
add
(bad)
cmps
pop
test
push
inc
push
or
es
sbb
sbb
je
or
jmp
(bad)
adc
xor
sub
pop
sub
ror
sbb
mov
int3
jg
add
das
dec
sbb
mul
pop
and
cmc
ret
jo
sub
je
xor
xchg
mov
sbb
dec
in
pop
xor
push
push
loope
fdivrp
mov
imul
rcl
into
inc
fisub
and
ss
mov
test
in
repnz
add
push
xor
mov
xor
shl
xor
cs
ds
adc
sar
jnp
(bad)
stc
push
in
xchg
mov
adc
iret
sub
call
jo
emms
or
sahf
popa
jp
sub
adc
cmc
add
dec
jbe
add
cs
and
mov
sub
adc
ins
call
add
mov
(bad)
retf
adc
add
ret
jge
inc
add
rol
push
add
mov
in
xor
frstor
(bad)
adc
inc
jecxz
jp
clc
pop
jge
rcr
or
jg
(bad)
fdivr
cs
pop
xchg
and
push
xor
js
xchg
xchg
pop
mov
retf
xor
fmul
aas
fldcw
push
and
iret
inc
outs
gs
js
ret
aas
cli
sub
add
inc
add
loopne
loopne
and
xchg
shl
jg
in
enter
mov
mov
shl
push
stos
(bad)
(bad)
sub
sbb
sbb
add
mov
jns
pusha
je
pop
push
sub
pop
enter
fidiv
sub
lods
jbe
(bad)
jno
add
and
push
(bad)
adc
jg
mov
sub
xchg
ja
and
push
fcomp
pause
ins
out
push
mov
test
call
retf
loop
in
pushf
mov
mov
or
adc
xchg
retf
sar
pop
lds
jecxz
pop
imul
or
imul
adc
(bad)
and
fmul
test
cdq
mov
scas
lahf
inc
push
jg
mov
xor
loopne
lock
(bad)
pop
enter
and
push
std
push
push
xor
retf
xchg
nop
jmp
(bad)
inc
data16
mov
addr16
xor
adc
cmp
pusha
stos
jb
out
data16
mov
ja
mov
enter
retf
sub
add
arpl
mov
or
xchg
call
dec
lods
add
dec
popa
push
call
adc
rcr
test
push
sahf
or
dec
mov
jbe
mul
cmp
mov
fimul
cmp
movs
imul
fidivr
fdivr
loop
mov
xchg
pop
mov
push
jns
add
loop
push
rcr
shl
xor
cmp
mov
xchg
mov
pushf
sbb
sub
in
or
addr16
adc
(bad)
fisub
mov
jnp
popa
mov
pop
sub
hlt
daa
mov
icebp
int3
fcomp
xchg
dec
pusha
xchg
mov
pusha
or
inc
inc
xchg
sbb
ror
in
mov
jo
(bad)
stos
cmp
add
or
ret
add
test
scas
adc
jbe
sbb
jbe
stc
loopne
aas
sahf
jns
iret
ss
pop
outs
jge
jbe
mov
out
sti
add
rcl
rcr
mov
jo
mov
pop
push
jb
sahf
cmp
rol
jl
mov
test
xor
retf
mov
mov
jae
and
xor
cmp
push
add
mov
ffreep
mov
sub
pop
repz
push
popf
fst
jae
(bad)
not
push
sub
fiadd
sub
mov
test
arpl
sbb
pop
mov
loop
cmp
dec
pop
ficom
xor
xor
push
and
cmp
pop
cli
cmp
aam
lods
cmps
movs
(bad)
mov
sub
fcom
int
and
pop
sar
lds
and
push
jbe
adc
shr
jne
or
inc
and
dec
mov
inc
xor
test
mov
cmp
clc
les
push
pop
mov
dec
add
in
mov
mov
test
push
inc
fdivr
loope
jb
out
les
ror
int
mov
mov
jbe
xchg
test
mov
das
inc
mov
xlat
sbb
jmp
jb
and
fsub
mov
hlt
mov
retf
mov
pop
scas
inc
sahf
inc
call
in
add
adc
cmp
cmp
add
cmp
pcmpgtd
add
or
(bad)
sbb
sbb
mov
shl
or
data16
jle
loop
dec
lods
test
push
push
push
mov
ficom
dec
mov
pop
ja
xchg
sbb
out
movs
test
retf
sub
addr16
and
xchg
sub
sbb
adc
inc
inc
adc
sbb
mov
jmp
imul
scas
or
scas
cld
jp
shr
into
mov
inc
inc
cmps
es
out
fst
mov
dec
add
shr
pop
pop
push
or
jmp
pop
dec
popf
js
out
imul
and
fisubr
jl
imul
xchg
(bad)
repnz
xor
mov
lea
sbb
jg
sbb
jno
nop
pop
ins
frstor
push
xlat
clc
adc
into
cmp
pop
xor
mov
retf
dec
sbb
and
(bad)
not
mov
shl
dec
cld
fiadd
(bad)
sub
cmps
xchg
das
test
mov
mov
cwde
scas
data16
out
sbb
sub
mov
lods
xchg
rol
xchg
mov
stos
add
daa
(bad)
pop
sbb
das
sbb
sar
int
xor
in
cmp
add
outs
retf
rcl
mov
pushfw
(bad)
jecxz
sub
fild
cs
mov
adc
scas
daa
stos
in
sbb
pusha
and
es
xchg
sahf
and
jl
(bad)
pop
or
pop
(bad)
(bad)
inc
jb
bnd
fdivr
mov
(bad)
push
js
mov
jge
std
fistp
fld
shl
jl
mov
sub
ins
xlat
or
inc
rcr
andnps
scas
dec
imul
addr16
xchg
pop
sub
mov
pop
dec
lea
inc
jns
mov
inc
xlat
dec
inc
fisttp
adc
jle
in
mov
mov
jns
push
pop
push
mov
les
clc
ds
mov
add
mov
pop
mov
pop
cmp
ret
enter
lea
add
fdivr
int
pusha
sbb
test
retf
fimul
inc
test
sbb
jecxz
push
mov
adc
push
push
neg
jp
out
sbb
jnp
mov
icebp
xchg
mov
xchg
repnz
or
fwait
lahf
mov
cli
mov
outs
lahf
jmp
scas
inc
lods
inc
push
fdivrp
lock
inc
arpl
fild
sbb
xchg
and
(bad)
push
xor
sub
jp
movs
movs
cli
and
mov
ins
popa
inc
int3
or
dec
ret
mov
sub
cli
push
ins
aam
push
push
pop
aad
mov
push
imul
fldenv
fwait
stos
int3
fld
cmp
xchg
dec
sub
ret
dec
pusha
popa
sbb
sbb
add
movs
cmp
pop
inc
ds
lods
imul
int
aam
ja
cmp
lahf
pop
or
in
or
pop
xor
jg
sbb
xor
ins
mov
push
cmps
xlat
mov
xchg
jns
push
push
jl
cmp
inc
or
jnp
repnz
mov
sar
sub
jne
xor
adc
inc
call
inc
test
sub
call
pop
shl
adc
sub
sbb
mov
mov
pusha
sahf
dec
aad
and
ja
test
push
inc
dec
or
sbb
stc
add
mov
pop
rol
sahf
xor
lods
js
pop
dec
fs
mov
nop
add
add
sub
mov
(bad)
xor
outs
int
sub
dec
dec
jne
mov
jne
and
jp
xor
ficomp
test
enter
(bad)
adc
mov
cmp
scas
mov
movs
push
cmps
push
std
loopne
in
and
into
or
jns
jnp
rcl
dec
fdivr
pop
das
aad
xor
fiadd
call
fstp
sbb
std
loop
sub
loopne
cmp
xor
and
ja
shl
sbb
inc
je
add
xchg
mov
pop
stos
retf
imul
sbb
push
iret
and
inc
movs
cmp
cmp
loope
not
jo
and
xchg
sub
in
pop
je
adc
xchg
and
xor
(bad)
jl
push
add
retf
icebp
adc
les
xor
or
arpl
leave
push
fild
jnp
enter
sub
stc
jmp
add
mov
ret
sub
pop
add
push
sbb
gs
aas
and
push
hlt
les
sub
mov
sub
or
or
sbb
cmp
loope
cli
or
cld
clc
pushf
addr16
out
mov
jns
fiadd
push
pop
fs
or
push
jecxz
mov
ror
add
fmul
fisub
aam
retf
inc
jmp
ja
pop
arpl
ficom
cwde
push
lock
sub
or
int3
std
and
sub
push
out
xchg
sbb
cmp
jmp
repz
mov
cdq
pop
xchg
stos
adc
mov
aaa
out
add
pop
dec
adc
(bad)
mov
inc
iret
je
scas
sar
fwait
mov
adc
aaa
inc
lods
clc
ret
cli
push
and
adc
jbe
shr
mov
(bad)
pop
cmp
mov
into
std
sbb
fcom
jge
mov
and
or
and
stos
cmp
adc
sub
inc
imul
jb
sub
in
aam
test
push
(bad)
icebp
outs
ret
or
ss
inc
std
arpl
add
pop
data16
outs
scas
mov
push
adc
bound
xor
jo
adc
push
sub
push
call
xchg
xchg
cdq
dec
fdiv
and
mov
push
stos
arpl
add
inc
mov
addr16
rcr
xlat
add
idiv
jne
and
sub
push
mov
inc
cmp
cdq
retf
repz
jo
shl
mov
int
mov
addr16
and
and
mov
mov
(bad)
mov
sbb
pop
ficom
adc
or
pop
(bad)
dec
push
jmp
les
movs
mov
sbb
idiv
bound
movs
mov
mov
clc
call
movs
(bad)
sbb
call
in
pop
dec
mov
cmp
rcr
in
cli
jbe
dec
push
repnz
dec
fnstenv
outs
cmps
jae
xor
daa
and
mov
stos
mov
cmp
and
(bad)
in
sahf
test
cmp
inc
jno
or
mov
pop
neg
push
(bad)
pusha
ins
xor
ret
jno
test
pusha
fst
enter
shr
call
cmps
mov
out
pop
enter
cld
popf
inc
mov
jnp
mov
jo
adc
push
in
push
test
aaa
pop
jnp
jne
sub
cmps
scas
int
out
dec
sub
imul
into
movs
cmp
je
lea
mov
psrlq
pop
fsubr
jmp
and
mov
js
ds
in
fnsave
pushf
pusha
fcmovu
jb
fldenv
loop
fist
out
outs
sub
dec
mov
leave
rol
(bad)
mov
cmp
ret
sub
mov
dec
loop
and
inc
in
lea
dec
xchg
cs
int
sbb
addr16
rol
inc
xor
push
clc
xor
cld
sbb
cdq
sbb
fidivr
lds
xor
popa
dec
lds
add
js
jno
setne
sbb
jns
inc
ficomp
sub
xor
mov
daa
aaa
shr
mov
mov
inc
jecxz
cld
ret
cmp
pop
inc
pop
and
mov
xchg
mov
jmp
adc
lds
addr16
ja
mov
sbb
fs
out
xor
push
mov
xchg
movs
adc
call
je
ret
icebp
pop
loop
pop
lahf
xor
in
lock
xor
sub
daa
ret
int3
shr
dec
pop
xchg
xor
call
dec
add
pop
aaa
adc
cmc
not
loopne
popf
cli
ret
retf
test
pop
jge
sub
leave
sbb
lea
mov
inc
dec
pop
cwde
jecxz
sub
sbb
jno
lods
jmp
sti
sub
xchg
fdivr
test
stos
addr16
cli
cmp
cmp
mov
data16
sub
mov
in
stc
lock
outs
sbb
sti
je
sub
dec
fwait
xchg
push
dec
jae
mov
or
mov
(bad)
movs
(bad)
into
sbb
inc
fs
mov
movs
inc
sbb
into
pop
xchg
lea
lahf
and
fwait
add
ror
adc
cmp
xchg
cmps
cmp
pop
dec
retf
mov
aaa
xchg
pop
outs
sub
shr
cmp
enter
cmp
(bad)
sti
dec
sub
(bad)
mov
jmp
(bad)
push
nop
xor
add
sbb
stos
jne
push
mov
pop
js
test
or
movs
shl
sbb
test
mov
jbe
rcr
xchg
pop
jle
retf
xchg
inc
stos
or
jne
cmp
imul
add
stos
leave
inc
xor
mov
shl
rcr
dec
mov
ins
(bad)
ror
rol
ins
mov
jg
int3
mov
fcmovnb
sub
jmp
test
jnp
icebp
icebp
into
sahf
(bad)
into
and
lahf
sub
cdq
mov
push
jnp
mov
std
pop
dec
in
push
and
lock
inc
in
ret
cmp
xor
push
xor
movzx
mov
push
sahf
jle
sub
int
mov
xchg
loope
not
pusha
jmp
cs
fsubr
sbb
xchg
add
idiv
pop
shr
dec
lock
pop
mov
popf
retf
push
(bad)
cmp
mov
or
dec
hlt
mov
cmp
(bad)
jg
xchg
push
xchg
(bad)
pop
outs
xor
cmc
cmp
rcr
aaa
jg
cmp
cdq
adc
sar
dec
idiv
lock
dec
and
fadd
xlat
mov
xchg
mov
mov
add
adc
mov
sbb
test
or
out
aas
ja
and
adc
jl
outs
mov
add
jmp
cmps
pop
sbb
dec
out
loope
inc
mov
adc
cmps
enter
add
lea
mov
pop
xor
sbb
shl
jl
(bad)
(bad)
je
shl
(bad)
js
adc
xor
xchg
xchg
push
jmp
sub
out
push
mov
gs
pushf
cmp
push
jb
push
in
inc
imul
mov
(bad)
jl
(bad)
sbb
and
shr
add
ds
jae
jge
aad
aaa
cmp
data16
ret
stos
leave
ror
or
test
cmps
xor
mov
mov
aas
push
mov
cmps
cmps
xchg
jmp
xchg
mov
enter
inc
lds
jo
out
dec
dec
ins
inc
inc
pop
repz
jae
mov
rcl
into
cmp
pop
mov
cmp
faddp
mov
cmps
mov
in
(bad)
shl
cmc
cmp
jmp
cmp
cs
mov
cld
nop
fdivrp
sub
mov
or
call
pop
pop
push
inc
adc
dec
push
test
mov
pop
imul
repnz
mov
adc
fmul
jne
fstp
ja
lock
sbb
cli
sub
add
and
in
jmp
pop
fst
fistp
and
sti
lahf
mov
clc
cli
push
sub
adc
xor
dec
cwde
icebp
cld
(bad)
push
adc
cmp
sbb
add
dec
xor
mov
pop
sbb
ds
add
addr16
lods
mov
ins
push
inc
int3
pop
neg
xchg
pop
test
test
adc
inc
repz
inc
shl
icebp
push
jns
xchg
push
in
cmp
mov
repz
in
pop
add
inc
cmp
adc
ja
stc
mov
out
fiadd
loop
js
pop
jle
mov
mov
imul
fadd
js
(bad)
adc
or
fiadd
out
mov
add
sub
test
jl
pop
scas
fs
ret
rol
in
nop
adc
adc
cmp
stos
mov
or
cli
clc
fcom
xchg
addr16
clc
pusha
scas
cmp
mov
outs
ret
js
pop
loope
xor
mov
dec
mov
test
rol
(bad)
jmp
fs
mov
cdq
hlt
es
adc
fadd
push
popa
rol
ss
rcr
js
loopne
pushf
test
dec
movs
jmp
fstp
jae
scas
lods
or
dec
movs
fnstsw
lahf
cmp
pop
mov
adc
ficomp
out
fcmove
jo
lods
xor
pop
xchg
push
ret
sbb
and
stos
cmp
mov
adc
les
loope
out
or
aaa
or
or
shl
dec
adc
mov
gs
(bad)
xor
push
mov
das
out
cmp
or
stos
adc
pop
jnp
mov
mov
sub
sub
(bad)
sub
xor
mov
loopne
adc
xor
pop
pop
mov
push
aad
push
es
or
fst
dec
aaa
cli
jp
cli
sub
pop
pop
fisttp
xor
cmp
push
dec
jl
mov
pop
and
aam
adc
pushf
push
jno
int3
push
loope
daa
mov
mov
and
lock
cmp
push
cmp
xchg
push
sub
mov
inc
pop
icebp
clc
mov
jb
or
dec
jno
adc
xchg
mov
icebp
bound
imul
mov
add
mov
sti
mov
mov
call
cmc
push
imul
mov
mov
xor
(bad)
xor
movs
cmp
mov
mov
cli
mov
jns
and
or
push
popa
enter
out
or
adc
push
cmp
test
push
stos
out
pop
(bad)
xor
xor
loop
sub
sub
daa
(bad)
jmp
cmp
aam
int3
mov
mov
sub
add
xchg
inc
push
mov
and
test
rol
int3
pop
lea
out
idiv
sbb
lahf
rol
mov
mov
sub
(bad)
ds
jp
or
in
stos
arpl
imul
xlat
jmp
cmps
fcom
sub
es
mov
in
test
or
fist
and
in
repnz
xor
inc
add
imul
push
data16
mov
fcomi
outs
sbb
adc
jmp
push
adc
lahf
lods
inc
in
dec
jl
push
lds
sub
jo
pop
sbb
test
sub
aam
jle
xchg
rsm
mov
or
pop
int
inc
or
adc
or
(bad)
jmp
or
adc
loope
xchg
ret
cmp
jno
jne
sti
fist
inc
xor
dec
cmp
add
mov
mov
out
sbb
mov
xor
je
xchg
jmp
jbe
clc
sbb
mov
cmps
movs
push
cmp
dec
repnz
es
or
dec
mov
ret
test
pop
cli
ss
push
neg
imul
and
cld
mov
and
add
icebp
dec
iret
dec
pop
xchg
clc
repnz
scas
pop
in
xor
inc
movs
ret
mov
xchg
adc
int
sbb
cdq
push
xchg
mov
dec
movs
fldl2e
mul
and
inc
mov
inc
cwde
sbb
jno
mov
in
cmp
mov
das
jb
jo
and
jb
lea
mov
int
xchg
add
or
rcl
gs
scas
dec
rcr
inc
inc
push
mov
or
aaa
dec
push
inc
dec
adc
sub
inc
mov
fimul
out
inc
xchg
inc
xlat
or
mov
adc
mov
inc
imul
cmp
ins
mov
call
fsub
popa
ins
lea
retf
jae
push
fxtract
dec
cmp
mov
mov
push
mov
push
in
push
daa
test
mov
xchg
in
(bad)
(bad)
ret
xor
pushf
push
and
jecxz
mov
repnz
rol
jb
inc
in
mov
or
popa
movs
adc
cmp
movs
mov
sbb
cmp
mov
ins
rol
out
xlat
and
in
arpl
in
shr
(bad)
ror
ds
popf
(bad)
aas
cmp
dec
jmp
mov
loope
sub
dec
push
aam
test
data16
js
popf
pop
dec
fucomi
sahf
test
lods
xchg
imul
jl
add
xchg
xor
add
xchg
inc
mov
fs
aam
mov
and
xchg
out
adc
lea
xor
inc
sbb
mov
leave
cmp
arpl
test
ss
cmp
pusha
jle
out
mov
jo
or
bound
aam
repnz
pop
mov
sub
mov
(bad)
mov
loop
or
leave
repnz
(bad)
popf
test
cmps
aad
(bad)
xor
lods
mov
lock
push
outs
sbb
loope
daa
inc
fild
mov
inc
jmp
xor
cdq
or
xchg
add
xor
xchg
std
mov
stos
aas
cmp
push
xor
cmps
push
jecxz
arpl
xchg
push
int3
xchg
cmp
sub
data16
inc
or
clc
mov
mov
jge
adc
shl
push
sti
test
mov
push
or
add
xor
test
fisubr
stc
or
xchg
sub
mov
cmp
sub
cli
inc
rcl
ret
rcl
cmp
xchg
sub
dec
aaa
test
jb
rcr
push
pusha
xlat
push
dec
and
or
mov
ret
push
icebp
xor
and
xor
push
lods
add
jnp
movmskps
mov
xchg
ret
dec
ret
scas
pusha
pop
arpl
ja
sbb
scas
jnp
loopne
or
sti
push
mov
xchg
cmps
stos
inc
mov
inc
mov
test
cmp
pop
and
out
xchg
push
jle
pop
lds
adc
pop
cmp
loop
push
fmul
aad
aam
or
mul
jns
jno
cmps
xor
dec
sub
sbb
mov
mov
fcom
in
pop
xchg
adc
in
push
add
sbb
sub
mov
xchg
xor
ds
pop
imul
and
out
fxch
xchg
sbb
xchg
xchg
push
pop
outs
inc
bound
aaa
mov
push
mov
mov
push
sub
ins
icebp
pop
xchg
and
popf
lds
jmp
in
or
rcl
in
push
dec
push
add
cld
in
out
idiv
stos
je
or
mov
or
movs
scas
ror
sbb
dec
daa
xchg
cmps
mov
sbb
(bad)
push
sahf
adc
add
div
or
push
cmp
jmp
push
add
pop
test
sbb
pop
or
sub
xor
retf
mov
loop
mov
mov
push
jnp
ins
js
adc
add
hlt
sbb
and
inc
push
xchg
push
xor
cs
push
or
dec
(bad)
inc
retf
mov
cli
fadd
sbb
retf
cmp
inc
in
sub
jo
xchg
pop
ds
test
cld
cdq
bound
xor
retf
or
sbb
fnstcw
push
mov
retf
enter
mov
jnp
repnz
xor
or
jne
repz
pop
popa
fwait
cmp
in
inc
mov
arpl
icebp
mov
xchg
sub
sub
sub
retf
ret
inc
jecxz
xor
mov
inc
(bad)
inc
pop
dec
and
cli
(bad)
pop
push
mov
add
cmc
ds
cs
xchg
ret
pop
mov
(bad)
or
loop
cmps
jg
(bad)
out
out
lds
nop
dec
adc
hlt
mov
cld
(bad)
mov
jne
(bad)
cmp
dec
fdivr
xlat
lods
gs
mov
inc
jno
and
xchg
sbb
repnz
stc
push
fsub
jl
mov
dec
(bad)
outs
psubusw
sbb
ins
jne
outs
iret
jl
cli
adc
or
add
and
int
sub
cs
aas
mov
lods
sti
lock
adc
mov
sbb
pop
and
or
enter
ror
add
cmc
lods
pop
imul
adc
push
add
and
ins
xor
xchg
xor
lods
mov
hlt
sub
xchg
cmp
and
icebp
out
dec
icebp
fnsave
das
cs
mov
pop
add
clc
shl
(bad)
mov
mov
jp
jns
dec
sar
mov
fs
out
pop
scas
cmp
(bad)
es
mov
es
push
push
test
scas
pop
or
les
mov
int
(bad)
out
xlat
(bad)
xor
rep
scas
shl
repnz
add
dec
mov
cmps
mov
retf
or
xor
loop
loope
mov
sbb
jno
inc
enter
jmp
mov
inc
pop
mov
paddb
loope
lods
dec
dec
push
inc
adc
mov
jecxz
and
xchg
fsub
adc
ins
mov
shr
mov
nop
mov
sub
mov
pop
xor
add
mov
push
lods
rol
popf
pop
adc
hlt
add
(bad)
outs
out
and
adc
imul
addr16
sub
enter
sti
inc
retf
bound
loope
lock
pop
xor
cld
in
push
adc
mov
pop
ror
mul
xchg
(bad)
(bad)
cs
jae
cdq
outs
adc
inc
add
test
(bad)
loope
loopne
not
test
ret
push
mov
jnp
push
adc
push
and
xchg
leave
add
pop
inc
or
imul
pop
mov
mov
push
test
out
lods
mov
pushf
movs
sbb
pop
ror
mov
pusha
outs
(bad)
jnp
ins
mov
(bad)
push
lds
(bad)
mov
mov
scas
push
push
mov
xchg
(bad)
icebp
fdivr
mov
jne
and
rcl
icebp
xor
(bad)
dec
mov
(bad)
jp
adc
rol
dec
or
push
add
cmps
in
inc
call
test
ret
add
and
es
xchg
xchg
xchg
imul
stos
addr16
sub
ret
jmp
or
adc
mov
fwait
mov
and
pushf
jl
push
retf
sbb
shl
sahf
dec
pop
dec
stc
test
leave
out
repz
out
test
lods
stos
bound
pop
daa
ja
fisttp
cmc
das
adc
jnp
in
mov
pushf
cld
mov
xchg
mov
lods
push
imul
hlt
rol
mov
inc
add
inc
test
in
je
mov
sub
iret
xlat
xchg
or
or
ror
aam
pop
fdiv
mov
xor
cmc
mov
or
lea
rcr
push
in
cmps
xor
mov
fwait
enter
leave
push
jb
popa
xor
out
inc
in
adc
jmp
int3
inc
in
outs
sbb
aam
imul
enter
in
jmp
push
(bad)
jbe
sub
ret
mov
outs
adc
repnz
xlat
test
jbe
mov
stc
sub
shl
icebp
cmp
xchg
dec
out
mov
push
xor
popf
adc
stos
out
inc
fstp
adc
mov
inc
mov
movs
mov
push
or
mov
push
mov
ds
fdivr
out
icebp
jno
dec
cmp
sub
or
mov
dec
shr
cmp
fcom
loop
push
into
cmps
add
adc
sbb
test
sbb
mov
inc
(bad)
in
mov
enter
push
or
test
cmp
push
jo
pop
jmp
(bad)
and
or
repnz
aaa
js
pop
aaa
and
inc
cmp
outs
xor
fbstp
or
rcl
fiadd
(bad)
fisub
sub
and
mov
or
mov
cmp
out
mul
mov
or
pop
fwait
mov
jp
out
xchg
mov
sbb
aas
push
mov
xchg
inc
mov
repz
mov
jmp
and
mov
inc
xchg
inc
push
scas
jge
lahf
cmp
xor
mov
repnz
sbb
pop
cmp
sbb
add
pushf
lea
jno
xor
pusha
and
cmps
and
and
int3
pushf
sbb
sbb
cwde
pop
test
int
repnz
sbb
mov
test
mov
xchg
sbb
mov
sub
ss
in
inc
sub
ja
and
data16
mov
xchg
cdq
clc
xor
xor
outs
or
and
cmp
vpaddusb
mov
push
call
xchg
mov
rol
and
retf
push
or
out
jae
push
enter
ret
icebp
arpl
sub
aam
pop
scas
out
test
adc
daa
fisub
(bad)
cmp
imul
push
cmc
mov
test
dec
dec
mov
sti
inc
shr
cmp
push
xchg
adc
dec
ja
or
out
adc
imul
out
add
jnp
cmps
(bad)
dec
sbb
ret
cli
add
sub
jmp
adc
loope
mov
mov
cmp
mov
cld
fiadd
fbstp
xor
mov
movs
gs
push
call
xor
jne
push
dec
outs
outs
jb
fadd
lock
cmps
into
sbb
cmps
sub
sub
out
test
fidivr
std
xchg
ss
mov
in
adc
out
lock
sub
pop
clc
hlt
xchg
leave
in
mov
test
mov
inc
jmp
repz
rcr
xor
fdiv
sub
and
inc
out
sbb
aas
inc
push
(bad)
mov
cld
mov
(bad)
dec
lods
cmp
inc
add
xor
push
not
test
push
cld
outs
mov
in
dec
int
adc
(bad)
jnp
call
pop
sbb
sbb
xor
adc
add
xor
clc
je
sbb
xchg
fadd
fwait
adc
pop
pop
les
dec
dec
lods
sub
int
xchg
fcmovu
bound
adc
mov
sub
jl
test
idiv
aaa
jne
pop
xchg
psadbw
and
xchg
sub
mov
sbb
aas
jmp
adc
loope
push
lods
dec
imul
mov
scas
or
dec
inc
jmp
cmp
sbb
dec
mov
je
inc
sbb
jo
add
hlt
push
xchg
aas
or
test
shl
ins
mov
cwde
nop
out
sbb
push
aad
mov
jge
push
in
jle
or
jae
push
jne
les
fcom
pop
imul
jns
push
dec
test
push
mov
xor
aaa
sub
dec
int
int3
stc
mov
cmps
(bad)
dec
mov
in
cmp
cmp
xchg
jge
cmp
ficom
clc
adc
jns
pop
sbb
sub
adc
jmp
sar
mov
dec
fnstsw
ss
mov
cmp
adc
mov
inc
retf
or
call
xchg
or
cmps
mov
out
push
push
icebp
adc
int
dec
iret
sti
mov
mov
or
clc
ret
(bad)
sbb
lods
sti
push
ja
hlt
mov
enter
cli
mov
and
jmp
repnz
movs
mov
lss
pop
jne
push
sbb
dec
(bad)
add
push
mov
and
vfmaddpd
cmp
sub
and
add
mov
rcl
fisub
inc
add
pop
inc
mov
cld
inc
push
adc
mov
mov
pushf
pop
test
call
les
stos
lea
xor
cmp
add
fldcw
shl
jle
xchg
sub
aas
int
addr16
out
mov
(bad)
jo
mov
xor
out
adc
jns
and
dec
lock
jns
sbb
adc
(bad)
pop
and
pop
xchg
stos
add
icebp
jno
sbb
dec
mov
ds
mov
push
xchg
data16
aam
xchg
clc
cmp
cmp
pop
inc
or
nop
rcr
push
mov
ss
pop
ret
inc
dec
mov
js
push
xor
inc
jo
mov
inc
(bad)
jmp
push
push
movs
outs
push
imul
lods
xlat
xchg
loopne
push
dec
ins
xchg
or
rcr
cmp
std
div
mov
lea
fmul
xlat
data16
retf
iret
dec
enter
retf
xor
ss
pop
and
gs
fimul
xor
sbb
aam
fs
outs
adc
les
stos
fst
or
mov
push
frstor
aad
inc
clc
jb
popa
jbe
xor
iret
retf
or
lock
sahf
jle
imul
fsubr
add
fnsave
add
cmp
test
loope
push
mov
mov
mov
in
add
hlt
popf
lods
clc
clc
cli
adc
mov
sbb
pop
pop
imul
jbe
cmp
inc
xor
fist
push
loopne
bound
das
add
paddsw
pop
add
cmps
pop
push
or
jmp
lds
cmp
movs
imul
and
cld
mov
stc
ficomp
xor
pusha
fsubr
js
dec
inc
adc
jle
outs
jb
leave
movs
cli
inc
fidivr
imul
pop
(bad)
call
cmp
test
sbb
or
movs
mov
aad
mov
push
dec
jbe
adc
sbb
sbb
jge
mov
das
call
out
add
and
stos
popfw
mov
inc
push
ror
stos
pop
mov
jb
das
add
ds
lock
or
jecxz
or
pusha
iret
or
test
mov
add
add
push
bound
idiv
inc
cmpxchg
add
out
mov
in
jnp
retf
xor
mov
cmp
daa
gs
and
lds
lea
xor
xor
mov
cmp
add
outs
jle
mov
mov
stos
(bad)
xchg
mov
jb
xchg
inc
scas
mov
dec
or
sub
pop
mov
push
movs
hlt
loope
xor
ja
(bad)
sub
dec
lods
dec
pop
pop
or
aam
gs
sti
pop
add
jnp
sahf
sub
test
jecxz
sar
pop
push
push
pop
push
inc
es
jmp
push
cmp
cli
mov
xlat
hlt
or
(bad)
test
inc
test
xchg
data16
pop
dec
pxor
jmp
and
arpl
or
pop
cmp
xlat
cmp
clc
aas
loope
ds
test
sbb
and
push
ds
push
loope
mov
(bad)
jmp
fsubr
jmp
mov
call
ins
jmp
and
mov
cmps
add
adc
fbld
stc
stc
lea
repz
sbb
popf
test
mov
mov
push
push
push
cwde
ret
stos
mov
psadbw
mov
and
bswap
xchg
xor
mov
inc
cdq
clc
and
loope
push
jmp
scas
ror
or
les
ins
test
xor
mov
mov
or
ja
or
cmp
pop
add
add
in
sbb
retf
xchg
sbb
movs
arpl
hlt
and
pop
mov
(bad)
ret
mov
lea
cmp
(bad)
and
mov
cwde
(bad)
mov
dec
mov
jmp
pop
stos
in
shl
mov
xor
push
mov
push
icebp
pop
jo
(bad)
fisttp
inc
and
mov
mov
mov
sti
dec
movs
mov
cmp
jo
into
je
jae
outs
jno
dec
cmp
xor
sbb
pop
and
call
leave
xor
jp
sbb
inc
arpl
push
je
rol
mov
frstor
jmp
jb
fist
xor
inc
je
inc
and
mov
mul
pop
stos
test
retf
arpl
out
xchg
sub
mov
cmp
pop
clc
sbb
ins
mov
shl
ja
imul
jle
pushf
adc
cwde
jb
and
ins
das
lods
sub
fst
mov
js
ficom
xchg
xchg
mov
or
in
lods
mov
aas
aad
push
add
adc
imul
shr
push
push
and
cmps
adc
popf
in
push
cmps
cdq
mov
xchg
jmp
ja
push
jae
pop
std
mov
sub
or
and
pop
push
in
mov
jecxz
aas
dec
mov
test
push
mov
cmp
cmp
dec
and
inc
aaa
call
es
xchg
in
in
jnp
cmp
pop
shr
loopne
push
cmp
cdq
mov
sub
jb
retf
pop
and
cmp
imul
fucom
mov
rcl
retf
scas
idiv
push
imul
push
imul
clc
out
mov
les
jg
push
scas
sbb
inc
mov
lds
xor
aam
dec
sbb
mov
fld
or
xchg
mov
or
pop
adc
mov
retf
pop
add
and
sub
std
and
add
xor
or
jae
test
je
mov
pop
in
jle
add
mov
mov
div
in
jae
or
xlat
lea
mov
mov
cmps
mov
out
sahf
lods
repz
gs
pop
movs
(bad)
arpl
or
(bad)
fwait
mov
push
add
je
mov
inc
sbb
aam
mov
fild
stc
dec
scas
repnz
fiadd
and
mov
scas
dec
cwde
rcr
aad
xchg
jnp
aaa
cmp
loope
ss
xor
ficomp
adc
push
fdivr
cli
sbb
fisub
call
mov
jns
mov
xlat
jg
jge
and
sbb
xor
sbb
stos
mov
enter
mov
or
out
sbb
sbb
fwait
fs
mov
dec
xchg
cli
cs
sbb
retf
jmp
pusha
sub
fsubp
sbb
adc
test
cmp
stos
das
pop
(bad)
xor
fs
mov
repz
daa
push
or
js
cwde
lds
imul
(bad)
and
xchg
sbb
loop
pop
(bad)
push
or
push
inc
arpl
cdq
or
dec
dec
mov
inc
dec
mov
fdiv
fldenv
add
push
movs
aas
xchg
cmps
ror
popa
nop
xchg
iret
punpckhdq
ss
in
in
mov
jg
sub
stos
dec
lods
jecxz
cmp
shl
inc
(bad)
scas
or
jnp
cmp
push
sub
fs
xchg
loopne
ss
or
rcl
(bad)
stos
inc
retf
rcl
sti
jb
jecxz
fwait
rol
ja
xchg
pop
push
sbb
add
nop
rol
adc
mov
jle
push
(bad)
mov
cdq
jb
aaa
es
add
mov
adc
sub
cmp
xchg
out
pushf
es
adc
loopne
fucom
shl
push
add
sub
cmp
mov
mov
pop
push
sub
int3
sub
sti
clc
dec
out
ins
mov
xchg
mov
sbb
inc
arpl
cmp
retf
outs
xor
arpl
pop
dec
aam
bound
push
ds
(bad)
mov
repz
cmp
cmp
rcr
loopne
dec
ss
sar
mov
ins
int3
or
jne
push
movs
out
mov
mov
scas
sbb
cmc
adc
aam
sbb
dec
movs
mov
outs
ret
mov
sar
or
rol
daa
push
xlat
push
icebp
cld
gs
mov
sub
in
cwde
fistp
mov
or
fucomip
jmp
jg
fisub
mov
jmp
pop
dec
ror
(bad)
or
test
scas
push
push
push
stc
pusha
ja
mov
cmp
mov
stos
add
test
push
(bad)
retf
fdivp
pop
sbb
sub
xchg
push
cli
popf
mov
fstp
arpl
and
(bad)
xchg
mov
or
and
aaa
sbb
ins
dec
(bad)
fbld
and
xor
lods
or
test
ins
std
arpl
mov
test
arpl
pop
pop
call
mov
arpl
push
ds
daa
or
cmp
push
push
ins
mov
(bad)
loopne
jns
add
mov
fcom
icebp
ja
stc
xchg
sub
addr16
(bad)
mov
sub
push
mov
out
fwait
cwde
ins
(bad)
fstp
in
mov
inc
jnp
repz
out
out
mov
retf
cli
enter
sbb
and
inc
mov
ret
ja
pop
cmp
lods
jmp
in
inc
enter
push
mov
mov
dec
ins
addr16
fcom
out
inc
push
popa
push
and
cli
call
hlt
ret
push
mov
and
loope
cmp
ins
add
xor
leave
das
data16
mov
fidivr
push
ins
and
cmps
xchg
das
pop
das
or
cld
mov
and
add
ds
sbb
xchg
loopne
inc
in
jecxz
and
or
mov
jnp
and
mov
mov
int
loop
fimul
push
add
jns
adc
cmps
int3
or
push
jp
sbb
data16
jl
jmp
pop
or
xchg
or
repnz
mov
push
pop
inc
sub
jne
cmp
je
jo
sub
ja
push
cmps
cmps
dec
mov
xchg
out
sub
lods
hlt
xor
(bad)
shr
in
enter
and
lods
xor
xchg
sahf
inc
cmp
cmp
push
jo
jne
cli
mov
(bad)
and
call
cmc
mov
pop
mov
mov
lea
mov
push
jne
mov
(bad)
jmp
daa
and
add
les
adc
mov
into
xor
outs
lods
js
push
test
scas
outs
shl
cli
dec
outs
dec
mov
pop
sar
sbb
jecxz
mov
add
int3
inc
pop
mov
iret
push
out
fs
dec
mov
pop
pop
mov
in
das
stc
(bad)
jmp
iret
pop
movs
and
imul
add
sub
jg
sbb
add
cli
mov
scas
jmp
(bad)
rol
jge
add
fnstsw
outs
cs
mov
push
ja
mov
movs
stos
dec
pop
arpl
mul
lds
mov
push
sub
jmp
cmp
jne
dec
inc
pop
scas
cld
cld
stos
ins
jg
mov
out
movs
lods
and
clc
outs
mov
imul
int
sub
cmp
xchg
jl
fst
aaa
cmp
mov
inc
shl
loopne
cmp
pushf
mov
stos
inc
aad
push
xor
add
retf
aad
call
xor
mov
adc
add
pushf
push
jecxz
xchg
and
adc
in
cwde
stos
jb
(bad)
cmp
push
cld
push
pop
jnp
bnd
pusha
cli
adc
push
aad
dec
jne
adc
dec
adc
popf
(bad)
stc
xchg
aad
push
xchg
sbb
(bad)
xlat
cmp
out
call
sub
xabort
ja
lds
dec
aam
fcmovbe
or
xor
add
adc
push
xchg
fs
(bad)
iret
xchg
xchg
add
test
retf
ficomp
call
pop
xchg
pop
push
into
mov
sbb
jmp
jl
(bad)
stos
fs
mov
and
and
lds
outs
mov
inc
inc
mov
push
aad
inc
xchg
push
jno
add
sub
test
test
mov
test
popf
rol
pop
mov
or
xor
dec
rcr
mov
and
sub
in
sbb
pop
repnz
inc
in
repnz
pusha
in
scas
loop
fdiv
js
inc
test
(bad)
das
push
sub
and
mov
push
mov
mov
cld
or
inc
or
xchg
shl
mov
movs
fsubr
rol
stc
cld
test
add
push
cdq
imul
test
call
cmp
add
je
inc
call
clc
jo
ss
cld
pop
mov
cmp
inc
cmp
cwde
aas
sub
test
scas
mov
or
mov
push
pop
sbb
dec
lahf
(bad)
stos
add
lods
iret
sub
pop
adc
adc
popf
lds
(bad)
lea
sti
cmp
jl
adc
xor
add
pop
cmp
mov
jnp
sbb
sub
aam
pop
enter
inc
cli
dec
fnstenv
xor
fstp
push
pop
adc
popf
mov
mov
aam
sbb
sub
and
icebp
ja
pop
pop
xor
xchg
inc
or
xchg
aam
std
scas
aas
and
(bad)
jmp
and
adc
ja
xchg
push
or
shl
cmps
xor
add
lahf
jae
popa
mov
or
mov
cmc
mov
pop
inc
xor
jg
sti
cmc
sbb
ficom
push
xchg
xlat
imul
push
dec
ret
mov
xchg
lods
mov
jg
sbb
scas
fistp
jmp
ficom
dec
lods
fst
cmp
jg
adc
repnz
stos
add
xadd
cmp
sar
sub
xchg
mov
pop
cmc
jp
inc
xchg
adc
stos
add
push
push
in
dec
push
adc
sti
stos
popf
in
fist
retf
xor
out
jo
mov
je
push
icebp
mov
fnstsw
in
cmp
ret
cmc
(bad)
inc
adc
mov
cs
rcl
jl
or
inc
xchg
mov
iret
dec
out
mov
push
cmp
in
inc
popf
pop
pop
sar
stos
mov
mov
stos
xchg
lods
inc
(bad)
(bad)
add
mov
sbb
lods
or
ins
jg
mov
aaa
mov
int
mov
xchg
pop
jmp
xor
jg
pop
scas
dec
dec
pop
es
loop
inc
stos
sub
dec
mov
call
mov
jle
repnz
mov
aas
push
add
or
ins
add
cmps
push
or
add
shl
adc
mul
sbb
cmp
repnz
xchg
sbb
iret
mov
daa
xchg
rol
adc
mov
sbb
aad
jbe
and
(bad)
arpl
xchg
mov
gs
and
dec
jmp
(bad)
ror
int
sub
cmps
cmp
arpl
pop
retf
popf
jecxz
lods
add
imul
or
inc
or
out
shl
mov
add
ror
push
retf
or
lahf
dec
ins
leave
lock
xor
xchg
(bad)
out
jecxz
and
xor
jo
into
push
mov
in
adc
lds
mov
lahf
push
fs
sub
sub
xchg
adc
push
mov
out
mov
arpl
xor
xor
xor
lea
xor
pop
sbb
rol
test
int
pushf
fstp
jle
je
or
sti
push
cli
or
in
mov
xor
adc
pop
mov
sbb
pop
jae
div
dec
fs
lds
int3
mov
inc
inc
xor
fwait
jl
cmp
das
ds
sub
sub
jge
test
xchg
sub
ins
ins
pop
cwde
xchg
shl
xor
mov
add
mov
loope
retf
mov
xor
add
lock
adc
cmp
add
dec
out
sub
xchg
jmp
mov
fdivr
jl
movs
push
adc
xchg
sar
sbb
retf
in
add
mov
mov
adc
dec
mov
sbb
das
xchg
jg
repnz
dec
iret
fwait
push
lds
out
mov
and
or
mov
sbb
subps
inc
jmp
sbb
jle
scas
test
(bad)
sbb
mov
push
sahf
or
adc
mov
rcr
dec
dec
dec
xchg
icebp
and
fadd
sbb
movs
mov
popf
mov
ror
adc
dec
xchg
and
fiadd
inc
lea
sbb
pop
shr
xor
fmul
cmp
inc
sub
jb
mov
movs
jo
and
cmps
add
mov
aad
push
xor
hlt
call
pushf
sbb
pop
push
imul
adc
push
fisub
fbstp
mov
loopne
out
xchg
inc
and
mov
into
xchg
or
add
les
sbb
repz
push
movs
mov
dec
movs
mov
cmps
fnstsw
loopne
xchg
(bad)
mov
shr
inc
fadd
mov
aas
xcrypt-ctr
cmps
(bad)
adc
push
popf
test
and
fld
pop
or
cmp
sbb
inc
cli
mov
or
inc
xchg
push
fmul
fidiv
inc
mov
xchg
xor
mov
mov
or
xchg
(bad)
sub
or
je
jns
mov
js
mov
sbb
lods
cs
(bad)
aam
mov
int
or
aaa
mov
cmps
loope
and
popf
(bad)
lods
push
lock
call
push
cdq
cmp
push
sub
cmp
mov
jbe
mov
adc
xchg
pop
jo
push
(bad)
xchg
loope
fist
sub
call
mov
out
pop
icebp
pop
push
(bad)
mov
inc
dec
pcmpgtb
not
cmp
push
arpl
clc
add
sbb
push
out
dec
into
movs
dec
jo
pop
pusha
adc
xchg
sub
jns
lahf
into
or
dec
xor
outs
fild
pusha
cwde
mov
sahf
pop
xchg
arpl
jg
bound
popf
loopne
xor
mov
lea
cld
mov
cld
pop
jbe
shr
test
mov
or
nop
and
rcl
out
pushf
fstp
cmove
retf
data16
xor
pop
pop
mov
dec
int
neg
hlt
push
push
pop
stc
sub
jo
idiv
data16
call
inc
lea
push
inc
pusha
adc
data16
add
inc
adc
loopne
push
push
xchg
xchg
pop
ins
(bad)
nop
or
xor
sbb
not
or
inc
dec
(bad)
enter
retf
mov
sti
ret
mov
scas
cwde
dec
jno
in
adc
ja
retf
xor
scas
mov
pusha
inc
or
adc
sbb
fdivr
cmp
mov
jge
lea
ror
aad
loopne
fucomi
movs
xchg
dec
push
xchg
enter
lds
sbb
mov
ins
inc
lds
xchg
lgs
xor
inc
jg
(bad)
cmp
sti
popa
push
movs
mov
mov
inc
cmps
cmp
pop
sub
sbb
or
pusha
and
rcl
push
imul
inc
pop
mov
mov
test
std
and
fs
cmp
inc
xchg
movs
adc
loope
scas
fmul
retf
or
or
fsubr
cmp
into
sbb
out
pop
into
stos
add
xchg
push
dec
push
mov
popa
xchg
ins
ror
jne
mov
pop
xchg
stos
(bad)
aad
mov
inc
sub
clc
outs
out
aam
jns
(bad)
retf
stos
mov
xor
in
xchg
int
or
xchg
and
lahf
inc
repnz
nop
mov
xchg
inc
mov
sbb
mov
into
xchg
test
popf
mov
fnstenv
adc
sbb
mov
push
ret
int
sbb
(bad)
inc
(bad)
sub
cmc
sub
xor
push
ss
pop
ins
ins
sahf
loope
movs
inc
xor
mov
sub
scas
mov
and
fdiv
pop
jno
xlat
cmp
xor
xchg
shr
(bad)
cdq
and
sbb
inc
dec
xchg
dec
imul
lea
int3
lds
jecxz
movs
inc
jno
mov
push
and
sub
movs
or
cmc
rcr
dec
mov
mov
inc
into
push
push
xchg
in
push
xor
xor
fcmovnbe
xchg
adc
push
xchg
mov
pop
adc
or
mov
mov
mov
sbb
mov
shr
cs
push
mov
xor
lods
xchg
es
xchg
push
jns
stc
cmp
mov
push
test
or
fsubr
hlt
xchg
mov
mov
xor
mov
push
arpl
push
jne
dec
push
push
pop
dec
cwde
cwde
xor
cmp
or
dec
cmp
(bad)
jg
jle
lods
lock
push
adc
pop
xor
xchg
cld
xchg
call
mov
mov
out
jo
or
cmc
add
jbe
nop
or
jle
lock
addr16
out
ds
in
stos
dec
gs
push
xor
test
mov
fidiv
call
and
add
or
call
sti
inc
mov
ret
clc
loopne
les
sbb
ins
data16
stos
out
push
in
shl
push
jno
sub
js
xchg
stos
bound
add
arpl
dec
cmp
std
into
in
test
jl
sbb
sbb
repz
rol
mov
inc
sub
sbb
pop
pusha
mov
lods
push
addr16
cmps
retf
movs
and
cld
mov
mov
jnp
inc
add
dec
aad
pop
movs
icebp
inc
push
xor
xor
les
mov
fisttp
hlt
(bad)
mov
adc
or
into
imul
into
or
push
jae
je
and
or
pop
and
(bad)
out
jmp
fsub
pop
les
push
call
je
pop
mov
pop
ror
xchg
cld
cwde
adc
lea
or
test
and
leave
test
retf
leave
lea
and
push
outs
jl
stc
nop
pop
mov
jge
and
int
fist
fucomip
push
lahf
in
daa
ret
jmp
icebp
pushf
pop
push
lea
(bad)
mov
dec
and
push
pop
sub
mov
pop
xor
hlt
cmp
cmps
out
fldcw
setb
in
pop
ret
outs
jle
clc
cmps
jno
mov
adc
add
out
loopne
das
adc
hlt
arpl
pop
cmp
fwait
jnp
shl
sbb
sub
pop
test
ins
inc
pushf
mov
loop
(bad)
lds
jle
pop
ss
imul
dec
je
adc
mov
ficom
jb
aas
ss
dec
imul
(bad)
je
sar
add
ja
pusha
push
pusha
push
aam
test
or
int3
cdq
iret
mov
xchg
jle
xlat
cpuid
inc
ret
fsub
sar
rcr
aas
sub
cmc
pop
rol
dec
xchg
mov
sub
lock
popa
xlat
sub
dec
sbb
(bad)
rcr
enter
dec
dec
inc
shl
ret
jp
pop
jle
cmp
ror
inc
or
cmp
push
sub
test
xchg
mov
fld
into
aad
xlat
sub
leave
mov
nop
push
fcmovnbe
sar
out
out
xor
mov
fstp
mov
fmul
mul
jp
and
jbe
pop
push
(bad)
ret
loopne
test
je
or
into
xchg
add
hlt
xchg
pop
jle
jb
mov
call
mov
adc
mov
fisubr
imul
stc
sbb
dec
jmp
jmp
pop
sbb
push
jge
mov
fldenv
das
mov
rol
test
or
or
sub
push
adc
add
cmps
jge
fimul
ja
inc
fadd
test
scas
in
push
enter
add
in
lock
fistp
mov
mov
mov
mov
pusha
lahf
cwde
fldenvw
data16
dec
mov
push
adc
sti
cmc
fst
push
add
push
aas
mov
adc
shl
fldenv
jne
test
std
test
lea
pop
jno
fcmovb
imul
ins
cli
push
stos
mov
mov
div
pusha
mov
das
pop
mov
sbb
(bad)
dec
loope
jne
xor
out
xor
idiv
mov
mov
fnsave
imul
add
lods
jle
fistp
into
xor
popf
cli
sti
(bad)
mov
jmp
mov
xchg
or
mov
mov
test
out
and
outs
sub
loopne
popa
pop
xor
and
push
push
or
push
adc
pop
pop
sahf
jo
xlat
mov
shl
sbb
call
test
rol
test
mov
dec
push
mov
or
mov
or
jne
pop
mov
add
jbe
push
arpl
push
rol
ja
xchg
(bad)
jg
mov
push
dec
lods
push
cmp
shr
out
push
sub
daa
lds
stos
std
and
sahf
push
scas
pop
xchg
(bad)
lods
daa
addr16
sbb
xor
jmp
pop
and
cmp
push
mov
shl
pusha
div
(bad)
cmc
or
push
cmp
adc
push
dec
add
loop
das
and
adc
pop
and
inc
push
mov
jl
add
pop
(bad)
call
adc
add
push
clc
test
mov
inc
out
call
mov
fistp
jmp
movs
adc
scas
scas
enter
sti
xchg
push
test
pop
push
clc
out
adc
test
dec
fwait
cmp
add
iret
mov
call
sbb
and
ret
mov
cmp
dec
les
not
sub
pop
dec
fcomi
sti
les
cmp
into
adc
(bad)
xor
cmc
cwde
or
fld
enter
aas
push
cwde
mov
dec
rcl
movs
fwait
pop
jae
xchg
mov
xchg
test
jg
inc
mov
out
xchg
inc
push
jmp
fisub
loop
std
(bad)
mov
dec
das
jne
xor
mov
aam
sub
aam
ret
cmp
and
test
(bad)
pop
daa
mov
sahf
mov
movs
pop
cmp
aad
xchg
popf
and
jnp
inc
push
mov
and
cmp
jb
sahf
sbb
mov
icebp
adc
mov
adc
pop
ja
ret
push
sub
and
jmp
pop
dec
push
(bad)
mov
mov
jmp
inc
sbb
and
mov
add
lock
mov
mov
add
cmps
inc
xor
xor
(bad)
ficom
inc
dec
xor
cmp
neg
aad
xchg
jp
lahf
cld
mov
scas
in
mov
aaa
add
inc
sub
pop
mov
sub
int3
rol
pop
and
lea
bnd
fdivr
inc
outs
popf
das
call
popa
shr
outs
xor
pop
enter
pop
idiv
in
xchg
cmps
int
fld
outs
pop
aaa
dec
xor
stos
or
sbb
sbb
aas
das
add
movs
add
xor
cmps
and
pop
adc
(bad)
xor
cwde
and
mov
clc
out
and
dec
ret
push
int
jl
int3
mov
jle
push
push
jnp
cmp
test
push
ss
shr
out
sub
mov
mov
in
ja
loope
jmp
lds
sbb
fstp
mov
fdivr
xchg
jne
xor
push
imul
xchg
jp
sbb
cmp
stos
fndisi(8087
hlt
sbb
adc
imul
push
bound
xor
xchg
or
and
ja
gs
sbb
inc
inc
(bad)
adc
push
in
xor
les
std
mov
gs
mov
xor
scas
sbb
es
cmp
nop
jmp
xor
pop
xor
adc
loope
mov
js
js
aas
out
sub
repz
int
mov
enter
adc
leave
mov
rol
outs
jg
daa
das
sar
mov
fld
cmp
pusha
xor
fadd
cvtps2pd
push
cmc
sar
sbb
jne
fsub
push
fsub
jg
stc
mov
mov
sbb
mov
jp
push
mov
in
push
jne
xchg
sub
inc
sahf
xchg
outs
inc
movs
lds
sar
fs
push
shl
out
sub
pusha
mov
push
outs
inc
je
pop
popf
mov
jge
loopne
and
addr16
inc
iret
mov
push
rol
xchg
repz
out
aaa
cwde
movs
mov
(bad)
popa
call
jns
mov
aaa
clc
sub
cmc
loop
repnz
add
sub
xchg
imul
movs
xlat
lahf
jecxz
pop
push
sub
and
inc
mov
sbb
lahf
arpl
out
add
cmc
es
rcl
push
ins
fbstp
xlat
cmps
int3
bound
sub
movs
jle
jno
rcl
jmp
stc
addr16
sahf
scas
sub
mov
mov
xor
jmp
test
xchg
out
repnz
cmp
jnp
retf
imul
push
aaa
(bad)
cld
cdq
xor
and
shr
mov
dec
adc
ret
aad
inc
xlat
or
sbb
adc
push
and
daa
mov
clc
jno
sub
cli
xor
cmp
retf
aas
loopne
loop
add
test
push
test
aas
xlat
shl
xor
jns
fld
jns
mov
mov
sar
xor
inc
loop
mov
xchg
cwde
pop
mov
jae
push
pop
push
mov
cwde
fs
dec
test
or
fwait
aam
xchg
push
cdq
sbb
cmps
add
fwait
imul
std
ins
xchg
sbb
or
outs
cmp
fnstenv
or
(bad)
jmp
cmp
xor
cmp
cmp
pop
lods
xchg
ins
fldl2t
mov
adc
dec
xchg
cmp
cwde
mov
sahf
mov
shl
in
adc
scas
xlat
sbb
push
push
mov
call
cmp
in
xor
push
les
xchg
(bad)
mov
push
repz
inc
xor
mov
dec
sbb
or
shl
dec
push
js
jmp
fist
xchg
xchg
gs
xor
jge
fwait
iret
push
push
test
fnstsw
jle
push
pop
dec
aam
test
cs
ss
cmps
test
mov
div
dec
and
inc
dec
pop
push
sbb
test
push
fwait
xchg
enter
icebp
dec
dec
ins
mov
test
mov
xchg
sysenter
jmp
jne
sbb
icebp
test
test
pop
add
cwde
and
(bad)
jecxz
std
aas
call
mov
add
es
aaa
(bad)
lods
fadd
push
stc
or
mov
jge
(bad)
in
jmp
repz
adc
punpckhbw
pop
mov
hlt
out
pop
xchg
push
pop
pop
and
in
loope
sti
or
jl
jp
pop
icebp
fidiv
xchg
repz
jge
jo
ss
jl
inc
js
and
pusha
pushf
inc
pop
inc
dec
cmps
and
out
int
adc
mov
sub
das
push
cli
push
push
leave
xor
xor
dec
in
push
in
xor
fcomp
mov
jmp
lahf
(bad)
push
mov
fisttp
cmps
pop
jae
int
xor
inc
push
adc
xor
in
in
sub
cmp
(bad)
retf
cmp
mov
lahf
and
mov
frstor
dec
dec
or
or
(bad)
ds
sbb
cmc
gs
ss
and
ror
mov
mov
cs
sub
cmps
add
fisttp
int
jp
push
into
gs
pop
cmp
addr16
mov
je
fwait
push
mov
xchg
shl
cmp
(bad)
pusha
or
movs
pop
xor
xchg
movs
stc
lahf
cmps
xor
test
xor
cmp
int
outs
test
aaa
dec
cld
(bad)
mov
dec
scas
sub
stos
mov
push
or
dec
jg
pop
adc
inc
pop
mov
xlat
test
or
in
retf
movs
sbb
pop
in
rcr
jg
dec
sahf
aad
mov
out
mov
push
jmp
push
jmp
xor
loopne
push
mov
out
call
add
sbb
jnp
clc
mov
pop
mov
test
fld
int3
clc
shl
dec
adc
push
mov
add
jmp
pusha
es
push
iret
mov
stos
fld
fstp
push
mov
mov
sub
mov
movs
fucomp
mul
mov
iret
and
lds
lahf
mov
cmp
xchg
pop
call
loopne
sbb
push
inc
mov
pop
mov
mov
rol
pop
jno
push
int
push
cmp
cld
xor
add
xchg
mov
hlt
mov
pop
dec
pop
popf
jle
or
bsf
sbb
sti
cmps
push
pop
xor
sub
fwait
mov
ja
xchg
sti
es
push
ss
mov
and
adc
sbb
add
loop
cld
pop
test
mov
inc
loopne
mul
sbb
xchg
xchg
sub
jmp
mov
mov
jbe
out
hlt
cmp
push
popa
pop
mov
jp
repnz
(bad)
(bad)
and
mov
mov
cmp
or
jg
ins
sbb
retf
aas
and
imul
jne
std
xlat
cs
in
in
or
(bad)
movs
push
dec
push
scas
es
fwait
cs
cmps
enter
fwait
dec
scas
dec
inc
in
jbe
ins
scas
push
sub
add
scas
push
mov
inc
sub
(bad)
fnsave
arpl
jno
or
cmp
xor
nop
std
lods
or
mov
cli
iret
test
sub
jmp
inc
das
jae
fstp
ret
push
jae
mov
mov
xchg
es
pop
push
sub
jle
fisub
pop
xchg
and
retf
jg
mov
mov
ror
mov
mov
fld
ja
fisub
jb
jecxz
out
outs
cld
call
jge
push
and
nop
fisub
leave
add
(bad)
xchg
and
xor
mov
es
aaa
in
xor
jp
push
sbb
push
pop
mov
dec
xor
icebp
(bad)
jne
sbb
cwde
test
or
in
push
adc
sbb
sub
pop
xchg
pop
add
(bad)
push
retf
inc
sub
inc
dec
xchg
mov
xor
push
neg
or
or
sar
ror
out
jge
push
aas
fs
outs
imul
popf
mov
pop
rol
clc
(bad)
push
dec
lahf
mov
cmps
mov
clc
jnp
data16
or
xor
dec
mov
cs
aam
mov
adc
push
mov
or
mov
aaa
push
mov
pop
or
pop
adc
(bad)
loopne
and
xchg
dec
sub
stos
ss
outs
push
inc
adc
fwait
mov
aaa
sub
sbb
xchg
mov
push
ja
mov
dec
je
cmp
inc
mov
(bad)
cmp
inc
lods
sbb
jae
mov
call
push
sbb
sbb
push
adc
sbb
pop
clc
or
mov
cdq
adc
mov
or
aas
leave
dec
mov
push
repnz
iret
bound
dec
pushf
jmp
inc
and
sub
jl
cmp
mov
xor
jnp
xor
add
rol
out
test
adc
fs
push
pop
rcr
mov
push
dec
mov
pop
(bad)
xor
or
popf
mov
dec
and
test
jmp
int3
mov
in
and
test
or
cmps
jecxz
or
in
mov
cli
loope
retf
iret
mov
inc
repnz
pop
das
add
bnd
mov
les
push
pop
aaa
xlat
clc
test
in
push
pop
(bad)
lods
push
dec
mul
enter
je
pop
mov
jae
jno
add
(bad)
in
mov
dec
aam
dec
mov
jp
dec
or
repnz
fcom
shl
sbb
call
cmps
test
js
popf
das
in
in
pusha
mov
jb
clc
adc
sub
call
sbb
imul
inc
in
mov
(bad)
jno
cld
test
mov
shl
cmp
(bad)
sbb
dec
cmp
adc
adc
call
(bad)
bound
sti
rcr
das
es
inc
cwde
or
mov
or
push
sbb
bnd
dec
mov
fisub
dec
jnp
std
pop
aas
loop
shr
jnp
cs
(bad)
pop
or
js
in
mov
sub
fs
repnz
lahf
pop
enter
mov
mov
ins
in
mov
(bad)
mov
stc
jb
in
push
jne
sahf
push
push
pop
lods
mov
xor
xchg
outs
inc
aas
pop
xor
pop
or
lea
mov
mov
aas
icebp
dec
adc
dec
mov
call
iret
repnz
fistp
std
add
mov
push
and
or
int3
jo
in
(bad)
and
div
push
mov
add
cmps
mov
mov
repnz
shr
xchg
aam
mov
mov
push
add
mov
clc
sbb
fadd
dec
into
and
lds
aas
pop
imul
adc
out
test
mov
test
call
fdivr
add
test
js
dec
jnp
or
sbb
sub
movs
mul
push
(bad)
retf
push
push
test
es
imul
mov
jl
jbe
dec
test
jne
addr16
push
or
(bad)
and
rcl
fs
sub
sub
jnp
aas
pusha
retf
xchg
or
cmp
xor
imul
les
and
xchg
scas
mov
rcl
movs
xor
sub
add
xor
push
(bad)
sub
outs
dec
cmp
sub
rol
mov
mov
mov
and
inc
pop
and
movs
push
push
dec
mov
cmp
xchg
sub
daa
ins
sahf
outs
jg
pop
dec
sub
cmp
inc
mov
mov
pop
or
fs
sub
stc
xor
xor
mov
aaa
cmp
cmps
fs
xchg
aam
push
sub
jne
dec
cli
in
outs
pop
(bad)
xchg
bound
or
ss
xchg
cmps
xor
fisubr
repz
push
cmps
add
dec
mov
cs
sti
test
xchg
retf
lods
pop
ja
and
mov
les
dec
(bad)
pop
pop
movs
sar
(bad)
ins
push
cs
cmps
and
cmps
or
mov
push
xchg
pop
push
cdq
add
add
jmp
shl
pushf
jge
das
aas
mov
xchg
test
ret
imul
jp
sbb
xor
inc
outs
xchg
out
ffreep
das
test
xsha1
cmps
dec
or
fxtract
mov
shl
cli
in
lea
or
push
inc
std
jmp
pop
jp
icebp
xor
aas
pop
in
xchg
popf
sbb
retf
les
scas
xchg
(bad)
not
sub
in
pushf
pop
scas
pusha
or
inc
sub
mov
add
jge
push
mov
sub
inc
pop
popa
fdivr
(bad)
pusha
pusha
inc
pop
pop
adc
dec
jo
lods
(bad)
retf
and
mov
call
xchg
lds
(bad)
lods
xchg
cdq
ins
jns
sub
rcl
dec
add
test
outs
(bad)
mov
inc
mov
mov
sbb
mov
sahf
push
ja
mov
or
pop
sub
ss
mov
mov
repnz
mov
xor
inc
pusha
lods
sbb
mov
imul
hlt
add
or
and
cmp
xchg
mov
push
dec
mov
jns
or
stos
sub
cld
cmp
pop
leave
add
stos
in
inc
imul
in
jnp
and
pop
xlat
inc
out
mov
mov
inc
add
aas
adc
pop
aad
cmp
mov
and
in
in
or
cmps
dec
mov
retf
mov
out
push
rcr
sbb
add
mov
loop
scas
xchg
pop
xchg
test
add
mov
fld
jge
push
pop
(bad)
mov
xor
push
push
pusha
ret
mov
push
sar
mov
outs
retf
dec
jns
sub
jecxz
test
cmp
mov
add
mov
rcl
dec
aaa
lds
mov
in
ja
fs
add
aad
xchg
scas
xchg
loope
outs
int
mov
inc
loopne
pop
fisttp
mov
adc
jns
nop
jecxz
add
adc
jno
inc
sub
pop
cs
fisttp
std
sar
out
lds
loope
mov
and
add
not
add
push
imul
es
retf
add
ror
push
and
(bad)
test
mov
lds
sahf
cdq
out
cmps
xchg
div
push
mov
out
push
ins
xchg
add
call
scas
pop
std
das
push
or
sti
mov
sbb
sub
je
cmp
test
sbb
pop
jl
fdecstp
mov
in
pop
(bad)
mov
xchg
pcmpeqd
shl
sbb
xchg
loope
jns
xor
xor
add
(bad)
pop
adc
sub
mov
push
ins
addr16
mov
movs
dec
inc
push
mov
push
je
ret
mov
mov
ss
sub
not
push
fs
sbb
fnstsw
in
pop
sti
cs
push
sbb
xor
xchg
add
cmp
repz
fmul
ja
dec
fs
out
mov
dec
imul
movs
pop
ficom
and
popa
stc
pop
dec
movs
lock
inc
cdq
inc
shr
pop
jge
ins
cmp
add
es
outs
lock
ret
mov
pop
sub
mov
pop
mov
retf
adc
jmp
add
stos
dec
loop
xchg
out
std
mov
inc
dec
jae
cmp
mov
and
cmpxchg
bound
add
push
hlt
add
pop
cs
xchg
ret
stos
or
in
xchg
jo
cmp
outs
stc
arpl
dec
repnz
add
mov
mov
jmp
sub
call
jl
and
jg
out
jmp
(bad)
je
ja
or
(bad)
in
out
or
jg
aaa
pop
push
fs
cmp
mov
pop
pop
std
jno
push
in
jmp
fcmovnu
push
int3
hlt
mov
and
push
and
sub
(bad)
mov
and
sbb
push
sub
mov
push
jbe
jmp
ins
data16
test
mov
push
adc
in
jo
gs
imul
in
mov
mov
add
pop
add
jbe
fs
popf
pop
in
cmp
cmp
shr
inc
inc
jno
out
call
jae
or
mov
shr
psrad
aam
stc
out
cmp
mov
or
int3
loop
and
fdivr
or
(bad)
and
retf
or
test
jmp
adc
cmp
cmp
inc
push
fisttp
jbe
xchg
test
mov
sahf
scas
imul
jnp
xlat
push
rol
cdq
cmp
jbe
test
sub
or
fwait
out
push
out
sbb
push
test
lea
dec
pop
mov
cmp
fiadd
inc
jbe
hlt
(bad)
sahf
adc
mov
mov
loop
cli
sti
rcl
mov
sbb
jnp
xchg
popf
cdq
dec
mov
cmp
int
fwait
mov
arpl
je
cli
leave
je
or
jl
cs
push
in
dec
mov
ins
add
ret
test
push
hlt
test
dec
jo
and
dec
add
jl
shr
sbb
movs
mov
bound
in
mov
out
jle
movs
jmp
or
popa
or
xchg
mov
pusha
adc
adc
sar
xor
mov
inc
cld
cmp
cwde
pop
inc
cmps
cmp
retf
cmp
mov
in
loope
add
nop
cmp
or
sbb
mov
out
outs
sub
mov
jne
mov
movs
ror
add
dec
pop
sbb
pop
add
(bad)
add
jl
in
add
inc
movs
inc
mov
retf
stos
push
(bad)
push
in
jg
cmp
cdq
pop
stc
in
int3
inc
lahf
cmps
mov
pop
add
and
js
shl
or
jbe
iret
stos
movs
nop
pop
jmp
call
add
xor
(bad)
rcl
bnd
mov
mov
nop
cmc
outs
add
scas
jne
daa
mov
imul
add
xor
sub
push
push
add
nop
hlt
scas
(bad)
(bad)
sti
jmp
in
es
jno
xchg
call
loop
xor
iret
icebp
cmp
les
jmp
popf
adc
xchg
int3
and
mov
scas
or
pop
mov
push
adc
cmp
cmp
lods
call
arpl
and
mov
and
jg
push
addr16
inc
sub
sub
cmp
shl
fs
mov
stc
mov
ror
mov
xor
int
add
gs
dec
loop
and
fadd
push
pop
clc
mul
popf
xor
iret
mov
jb
jnp
cmp
mov
inc
clc
mov
nop
test
and
jno
sub
inc
imul
lods
addr16
imul
pop
pusha
(bad)
not
pushf
cmc
lea
add
or
retf
mov
pop
leave
xchg
xchg
nop
dec
sub
fild
ja
xor
push
add
dec
lods
and
cmc
aam
stos
ins
add
leave
pop
outs
mov
stc
pop
pop
es
sub
fs
ret
inc
scas
dec
jle
aas
or
sti
in
inc
jg
(bad)
xchg
push
xor
lahf
cmp
out
into
lods
sub
xchg
xchg
movs
sub
sbb
stos
sub
push
add
nop
cmp
mov
fcom
scas
aas
aas
push
cmp
or
popa
jno
je
icebp
cli
sbb
arpl
test
pop
ret
sub
rcr
jmp
jne
mov
sar
mov
leave
scas
sub
jl
pushf
enter
daa
imul
daa
add
retf
inc
cs
lds
je
call
pop
bound
cmc
clc
xchg
push
push
repz
push
out
sti
fsub
stos
lock
div
outs
ror
push
out
add
fcom
add
fucomi
add
loope
aas
popf
dec
test
add
pop
imul
arpl
sbb
cmp
jbe
cwde
cs
adc
mov
(bad)
je
sbb
ret
loopne
and
sti
jae
fidiv
adc
stos
imul
data16
adc
push
mov
inc
sbb
into
ret
and
les
fmulp
jbe
mov
mov
in
sub
inc
cmp
ins
inc
fbstp
lea
jg
adc
mov
xor
xchg
inc
cmp
lock
mov
jge
aad
add
inc
into
push
aad
cmp
fcmovne
rcr
jo
mov
rol
imul
jmp
into
pop
jnp
imul
xor
cmp
push
test
out
fwait
int3
mov
push
test
or
jle
cs
ins
outs
xor
ja
addr16
adc
mov
push
lods
pop
sbb
js
ret
(bad)
push
loopne
push
das
and
ror
jle
mov
and
adc
add
push
mov
fwait
test
mov
dec
arpl
mov
sub
idiv
into
ja
jge
fmul
aad
clc
push
fst
dec
ret
ja
int3
ja
add
loopne
dec
jae
xchg
xchg
pop
out
dec
repnz
jle
repnz
imul
xor
fisttp
ret
jl
mov
jb
mov
mov
popa
js
cdq
rcr
imul
jae
xor
into
sbb
and
not
inc
sbb
ret
in
adc
test
daa
lea
mov
cmc
enter
loope
std
mov
xlat
and
data16
movs
sbb
in
jno
int
lea
jp
fldcw
imul
rcr
aas
adc
jne
jmp
and
ins
call
jo
inc
sar
fldenv
fisub
shl
pop
jnp
cmp
mov
pop
out
mov
imul
push
out
dec
cld
lods
add
cmp
mov
ja
inc
mov
xor
div
push
and
in
mov
push
mov
dec
mov
xlat
shl
pop
xor
call
retf
and
cmp
inc
jg
sar
daa
cld
aam
xor
lods
mov
clc
in
stos
cdq
stos
mov
sahf
sub
sub
cdq
cmc
jb
cld
pop
scas
inc
das
jnp
xchg
aas
cld
adc
push
dec
jb
aaa
cmps
pushf
xor
clc
rol
(bad)
lods
mov
mov
xor
cld
xchg
dec
std
int
sub
ja
mov
cld
push
add
icebp
arpl
nop
cmc
mov
call
mov
outs
cmc
xor
xchg
cwde
fs
lea
fiadd
icebp
icebp
mov
or
xchg
push
lock
jmp
pop
cmp
pop
xchg
sbb
mov
repnz
push
add
xor
mov
jnp
xchg
pop
lea
or
addr16
push
leave
rol
mov
dec
sbb
sbb
aaa
inc
fwait
and
nop
stos
add
cmp
adc
fstp
mov
jle
(bad)
repnz
adc
mov
mov
iret
add
addr16
test
repz
hlt
in
mov
push
xor
adc
inc
sahf
bound
les
cs
retf
cmp
jmp
push
xchg
ja
and
(bad)
and
push
jl
ds
in
mov
iret
rcl
scas
cdq
test
xor
mov
rep
dec
xor
leave
mov
scas
ins
jmp
inc
dec
xor
in
jmp
jp
or
xchg
dec
sbb
loopne
pop
ss
test
mov
lock
fld
mov
hlt
cs
mov
push
retf
jb
dec
mov
sbb
push
fsubr
inc
dec
sbb
push
jno
mov
popa
jo
fld
mov
add
icebp
sub
repz
imul
or
sahf
cmps
fwait
aas
hlt
mov
pop
call
mov
jmp
ret
mov
test
out
mov
sub
aas
mov
sbb
pop
ficom
lods
mov
into
pusha
push
pop
push
loop
data16
cmc
pop
cli
jle
fild
mov
or
in
icebp
enter
pop
inc
dec
in
xor
adc
daa
sbb
das
and
sahf
movs
jnp
pushf
add
jge
mov
push
jne
pop
xchg
outs
or
dec
loope
mov
test
lock
xor
sbb
xchg
aaa
cmp
add
stc
jmp
lea
xor
add
pop
push
mov
pusha
ins
sar
adc
ss
inc
push
inc
cmp
pop
imul
inc
mov
or
push
and
mov
(bad)
in
arpl
add
jbe
mov
sbb
ror
mov
call
cdq
cs
iret
dec
and
inc
fadd
push
and
fdiv
mov
push
add
das
out
push
retf
lea
and
pop
or
test
xchg
add
shl
xchg
cmovs
xor
scas
add
int3
std
test
jmp
int3
xchg
push
pop
lods
js
stos
inc
daa
nop
lds
xor
ja
jae
out
cmp
mov
test
es
push
pusha
mov
inc
sub
nop
lods
mov
lahf
adc
dec
add
loop
pop
int3
sti
nop
in
adc
nop
mov
in
cld
clc
dec
mov
jge
ret
ins
and
sbb
cmp
out
push
or
imul
inc
icebp
adc
and
ins
add
movs
int3
inc
(bad)
fimul
mov
rcr
loope
dec
push
repz
scas
and
dec
in
ja
or
outs
fwait
and
push
arpl
jecxz
dec
and
or
add
fs
ins
pushf
retf
add
mov
jg
outs
add
mov
icebp
(bad)
xchg
ins
inc
stos
dec
call
cmps
imul
lea
xor
or
sub
push
sti
out
cmps
jmp
and
sbb
cmp
adc
jnp
stos
sub
pop
mov
mov
sbb
xchg
cmp
scas
ins
cmps
and
mul
push
jecxz
jae
add
mov
xchg
sti
mov
lds
dec
and
xor
add
adc
or
mov
jbe
sub
iret
xor
jmp
pcmpeqw
or
ficomp
pop
pop
inc
inc
sbb
xchg
cmp
sub
pop
(bad)
dec
sbb
pop
xchg
(bad)
pop
imul
xchg
icebp
or
jae
(bad)
cmp
xchg
xor
jno
movs
nop
hlt
inc
outs
cmp
hlt
mov
push
pop
fidiv
push
dec
repz
push
xor
test
imul
inc
lahf
cmps
fwait
outs
cmp
dec
mov
cmp
leave
clc
pop
nop
mov
push
neg
mov
cmp
mov
push
(bad)
into
pop
cmps
fdiv
mov
dec
inc
sbb
stos
das
push
(bad)
sbb
mov
jle
cmp
pop
std
cmp
inc
test
loopne
mov
je
cmp
sbb
pop
inc
dec
es
cld
aaa
cs
sbb
mov
xchg
dec
sbb
daa
cmps
shl
pushf
test
(bad)
das
mov
retf
ror
inc
cli
xchg
ret
ja
int3
dec
iret
mov
arpl
sbb
pop
imul
mov
outs
ja
dec
int3
mov
iret
pop
test
pop
cmp
ins
and
cmp
dec
cdq
leave
push
adc
aaa
xchg
push
int3
pop
push
inc
mov
daa
pusha
loopne
or
retf
cmp
les
xchg
pop
jno
xor
dec
sub
stos
and
xchg
sbb
sub
inc
retf
push
sbb
aad
(bad)
mov
and
cwde
add
dec
xor
dec
mov
xchg
test
adc
push
out
jno
sub
inc
mov
dec
leave
cmp
jmp
jae
cmp
das
(bad)
ror
pop
dec
push
outs
xor
shr
jnp
dec
add
push
imul
xchg
stos
sbb
mov
test
inc
test
in
rcl
sbb
idiv
(bad)
test
and
loope
pop
or
jp
loop
lods
pop
ins
pushf
aam
aad
xlat
repnz
in
push
aad
int3
and
jecxz
test
popa
xchg
into
pop
fldcw
enter
inc
xchg
arpl
mov
xchg
int3
cld
scas
cmc
mov
arpl
inc
movs
movs
xchg
cmc
add
lods
cwde
dec
mov
ret
outs
pusha
cmp
and
aas
pop
push
or
sar
call
mov
mov
adc
imul
shl
xchg
imul
gs
push
jp
cli
pop
push
sbb
clc
cmp
mov
push
adc
rcr
xchg
push
inc
aas
dec
in
outs
inc
sub
xchg
icebp
jb
out
sbb
jmp
repz
mov
mov
xor
or
rol
adc
pushf
aam
add
cmc
jl
cmp
lods
jg
rcl
xor
mov
cmp
pop
fcom
enter
sar
femms
inc
gs
push
mov
mov
fistp
outs
sbb
clc
loope
gs
es
(bad)
repnz
shl
or
(bad)
pop
ja
sub
shl
pop
or
mov
cmp
stos
jno
fiadd
test
arpl
xchg
pop
ins
movs
pop
push
pop
xor
or
mov
pop
into
or
lea
mov
aaa
stos
(bad)
jecxz
jp
cmp
ret
leave
in
addr16
jbe
xchg
xchg
repz
das
adc
inc
mov
mov
fbstp
xor
xor
mov
mov
add
jmp
(bad)
dec
ins
pop
jmp
add
mov
rol
push
jne
popa
dec
cwde
jns
push
retf
adc
mov
cmps
and
imul
jmp
and
(bad)
add
dec
mov
jl
inc
(bad)
jnp
pop
iret
xor
popf
mov
inc
mov
or
loopne
mov
ins
cmp
jne
mov
jmp
add
scas
jmp
in
repz
sub
add
jns
mov
jge
jp
je
ins
test
push
mov
cmp
jo
ins
push
jmp
inc
mov
mov
jge
and
mov
cmps
inc
loope
daa
xor
fs
lea
retf
not
adc
mov
mov
or
out
push
jge
sub
inc
out
loope
pop
lds
shr
mov
or
call
mov
inc
das
push
scas
xchg
jecxz
add
retf
clc
sbb
mov
mov
sub
sahf
pusha
rol
xchg
test
sub
add
mov
frstor
jmp
cmps
cmp
xchg
mov
adc
enter
add
in
add
scas
ror
jmp
out
mov
mov
aas
dec
xor
jp
mov
adc
add
into
xor
cmp
test
daa
xor
push
lea
cli
add
fnstcw
(bad)
mov
sub
iret
jl
inc
inc
shl
and
cmp
in
jo
repz
in
stc
scas
cmp
int
xchg
inc
jmp
out
pop
dec
ret
sbb
lods
fiadd
xor
rcl
xor
clc
leave
movs
jbe
pop
dec
and
fidivr
ins
vcvtps2pd
sbb
mov
add
ss
jnp
aad
xor
bound
or
das
aaa
dec
cmp
(bad)
xlat
and
dec
fnstsw
or
in
mov
adc
out
adc
mov
stos
sub
enter
mov
xchg
leave
loope
or
pop
xchg
adc
xor
call
cmp
shr
call
gs
scas
lods
popa
icebp
mov
fcom
leave
xchg
addr16
ret
cmp
hlt
sub
adc
nop
inc
push
imul
inc
mov
dec
fcom
jmp
lds
ret
add
pop
push
sbb
push
xor
das
cmp
mov
add
push
pop
sub
xchg
std
mov
dec
mov
cmp
lds
xchg
push
das
jno
mov
fwait
int
xchg
inc
xchg
out
sbb
outs
rol
or
repz
imul
stc
or
dec
jo
inc
add
jle
jnp
not
mov
jne
mov
cmp
(bad)
fsub
xor
test
lds
mov
ds
push
lods
inc
cmp
and
pop
icebp
sbb
int3
or
pop
rol
hlt
mov
xor
loop
and
ror
mov
push
in
push
loopne
shl
scas
push
or
setnp
das
popa
aad
push
popf
push
pushf
sbb
sar
jno
je
adc
repz
aad
fs
ins
outs
ds
and
or
sbb
pand
and
lods
icebp
pusha
imul
loope
dec
inc
pop
push
mov
int
std
add
add
test
cmp
ins
bound
outs
in
xlat
mov
cmp
clc
adc
mov
and
cmps
pop
adc
pop
int
mov
push
and
fcomp
xor
movs
sbb
sub
leave
bound
mov
stos
lods
cmp
add
repnz
or
mov
shl
mov
dec
in
sbb
cmp
mov
mov
fcomp
dec
pop
mov
jp
cmps
(bad)
push
mov
pop
pop
cs
sub
sub
add
push
inc
mov
dec
jp
into
popf
and
or
dec
jmp
and
ror
add
cli
sub
sub
cmp
scas
scas
mov
dec
jb
cmp
enter
sub
push
jb
mov
fdivr
mov
ja
add
aas
jle
or
(bad)
std
js
xor
std
shr
mov
loop
push
mov
lahf
cmc
rol
or
or
fsub
loope
cmc
icebp
jb
jmp
imul
jno
push
xchg
jb
jns
or
or
sub
movs
scas
arpl
into
xchg
retfw
loopne
loope
cmp
pop
movs
(bad)
pop
out
fisub
xchg
mov
mov
push
sub
and
adc
in
cmp
inc
dec
or
adc
dec
ret
sbb
push
test
int
pop
les
jne
and
add
mov
iret
xchg
jno
sar
popf
dec
outs
mov
or
jnp
push
push
fmul
xchg
sbb
aam
push
inc
cmp
test
sar
jno
jb
xchg
imul
inc
stos
rol
sub
test
pusha
bound
and
adc
cs
and
mov
jbe
inc
jbe
lods
dec
and
mov
jl
mov
imul
cld
xchg
fistp
(bad)
and
jae
rcr
(bad)
aam
adc
call
cmp
push
push
jns
inc
in
lds
xor
mov
add
jbe
push
sbb
push
fsub
push
jle
(bad)
loop
inc
mov
xchg
repz
jl
shl
leave
loope
jb
dec
cmc
adc
mov
adc
pop
push
test
dec
jne
daa
(bad)
jle
rcr
cld
dec
push
punpckhdq
xlat
jno
fnstsw
adc
mov
and
scas
pop
loope
enter
or
enter
push
jle
das
sbb
out
sbb
jecxz
lods
sub
sub
nop
fdivr
aad
jnp
xchg
call
cmp
cmp
mov
mov
xor
dec
cmp
(bad)
gs
icebp
pop
sbb
ficomp
xchg
nop
enter
add
mov
sbb
cmp
sti
call
xchg
mov
rcr
(bad)
fld
push
xor
and
dec
mov
adc
cs
sbb
sub
clc
jge
and
rcr
xlat
lods
call
imul
(bad)
in
push
imul
not
sbb
(bad)
sub
enter
div
fst
sub
ins
aad
and
stc
cmp
aad
xor
dec
xchg
xchg
ds
ffreep
push
inc
daa
and
cmp
test
outs
addps
int
pop
test
pop
and
outs
retf
or
xor
js
in
push
adc
fisttp
adc
les
xor
or
jbe
ret
ins
clc
lock
cdq
inc
sbb
jnp
push
mov
scas
xor
(bad)
dec
xor
dec
dec
pushf
mov
aam
or
cmps
and
xchg
jb
fs
inc
clc
add
iret
xchg
popf
ficom
nop
inc
or
adc
or
ds
out
push
call
ins
push
mov
into
mov
pop
in
(bad)
adc
add
push
cmp
xchg
in
mov
dec
iret
cmps
jmp
and
in
loope
(bad)
stc
fldenv
sahf
jbe
aad
int3
(bad)
cmp
sbb
mov
jns
out
pop
cli
retf
mov
mov
inc
stc
push
sub
and
jns
mov
fld
and
inc
dec
xchg
sub
icebp
fstp
push
dec
push
fidivr
xchg
inc
movs
jmp
xor
cmps
sahf
jne
popa
loope
jge
ss
aad
leave
pop
or
test
sti
int3
mov
ins
pusha
dec
ins
js
jno
mov
mov
aas
and
test
cmp
lds
fsub
and
dec
and
ins
pop
inc
add
cld
clc
xchg
and
les
xchg
retf
xchg
or
or
rcl
sbb
xchg
dec
push
fldenv
call
ret
sub
test
mov
lods
retf
mov
(bad)
mov
(bad)
(bad)
mov
push
dec
call
pop
ds
cdq
adc
jno
test
mov
and
pop
or
pop
loopne
pop
dec
inc
loope
ja
pop
sbb
out
hlt
mov
popf
out
jnp
dec
xchg
movs
fadd
pop
out
sar
ror
neg
cmps
xchg
xchg
shr
icebp
sub
das
sbb
ins
cmp
mov
pop
mov
mov
xchg
xchg
cmp
stos
loop
xor
push
push
(bad)
sbb
pop
movs
xor
in
jbe
add
sbb
add
icebp
and
pop
xor
adc
test
dec
xor
imul
dec
mov
pop
(bad)
into
add
mov
fimul
ficomp
and
arpl
imul
stos
and
push
pop
add
jae
add
out
xor
and
fcomp
and
mov
mov
into
jae
(bad)
inc
xlat
adc
popa
mov
shr
(bad)
jecxz
out
dec
repnz
push
mov
in
mov
fisubr
aam
jae
adc
pop
and
mov
movs
ss
(bad)
jl
lock
out
ds
sbb
dec
repnz
out
xor
imul
cmp
jae
retf
dec
pop
addr16
pop
inc
xchg
repz
push
xchg
sbb
mov
xchg
sar
fisub
cmps
scas
(bad)
lods
mov
movs
xchg
push
jnp
adc
push
inc
je
lock
and
(bad)
jge
jb
rcl
sbb
call
lock
pusha
xchg
jge
or
cdq
cmp
add
sub
jae
xor
push
retf
pushw
jl
shl
cmp
into
(bad)
adc
dec
aad
xchg
mov
or
call
push
cmp
in
pop
out
mov
shl
and
ja
out
imul
and
iret
daa
mov
mov
xchg
mov
cmp
je
(bad)
inc
inc
inc
push
and
loop
ret
(bad)
or
sub
cs
sub
fwait
xor
into
aad
aam
mov
jo
xlat
add
fadd
pop
ror
jl
or
sbb
cmc
inc
push
cmps
aad
pop
mov
dec
or
ins
dec
push
xchg
or
sub
scas
jb
stos
out
dec
sub
cmps
add
or
cwde
jnp
cwde
pop
sbb
pop
dec
inc
arpl
jae
push
or
mov
sub
out
xchg
jne
retf
ficom
jmp
dec
fisttp
sub
pop
inc
adc
push
and
popa
inc
dec
loopne
fidivr
(bad)
lods
fld
xchg
pop
and
inc
cmps
inc
data16
les
pop
cdq
dec
or
sbb
stos
sahf
jg
jmp
cmp
pminsw
adc
mov
mov
and
leave
lea
xchg
jle
xor
mov
push
js
add
cmp
in
enter
cmp
inc
mov
mov
sbb
or
shr
jecxz
or
int3
jbe
and
push
(bad)
ss
outs
or
push
ds
sub
inc
sub
sub
mov
sbb
inc
es
lods
pop
inc
mov
push
jmp
add
mov
pop
dec
mov
fwait
sub
ja
out
(bad)
outs
sbb
push
ficomp
hlt
mov
push
adc
cmps
and
lahf
xchg
fs
fwait
or
popf
push
jl
xchg
dec
dec
push
jno
jle
arpl
cs
sbb
(bad)
and
and
or
sub
jne
or
mov
(bad)
ss
and
jg
idiv
and
dec
add
and
imul
mov
lods
and
js
popf
test
or
in
mov
pop
mov
jl
repnz
mov
cld
(bad)
lock
push
(bad)
shl
sub
push
cld
ins
adc
icebp
inc
mov
jle
ret
imul
and
jmp
enter
sub
xchg
sbb
mov
sub
rol
arpl
cmp
enter
dec
gs
enter
pop
jecxz
xchg
add
xor
imul
lahf
push
and
cld
mov
mov
pop
pop
mov
imul
rcl
cdq
pop
leave
dec
cmp
xor
sbb
pop
fist
ficom
xchg
outs
pop
mov
rcr
sub
pop
mov
xchg
shr
xor
dec
add
int
mov
daa
icebp
imul
sub
das
std
leave
sub
add
sti
jb
(bad)
and
pushf
and
out
and
inc
sahf
mov
push
into
mov
xor
sbb
push
or
pop
mov
sbb
inc
add
xor
or
jae
push
in
or
leave
cmp
adc
ret
cmp
enter
es
xor
shl
pop
push
pop
in
test
cmp
ror
lea
jge
lods
xor
jb
mov
scas
xlat
les
rol
pop
cmp
cmp
bnd
cli
ss
sbb
loopne
outs
inc
stos
int
fidivr
sbb
call
js
xor
stc
inc
test
lods
fxch
pop
sbb
lock
add
les
mov
jmp
out
dec
aad
push
xchg
inc
retf
and
mov
stos
aam
jge
fsub
shrd
in
fucomip
(bad)
mov
add
mov
fdivr
xor
outs
fwait
pushf
ds
dec
or
sub
cmp
fdivr
xor
adc
and
sti
movs
add
es
dec
dec
mul
inc
pop
push
test
imul
(bad)
test
jnp
(bad)
jmp
cmp
loopne
mov
jne
fisubr
clc
sbb
push
enter
mov
mov
jo
xchg
xchg
les
and
and
dec
mov
or
sahf
push
mov
sub
inc
sti
or
mov
out
mov
xchg
lods
adc
push
outs
iret
sahf
into
pusha
adc
pop
cwde
inc
or
mov
adc
dec
fsubr
push
jno
pop
adc
test
sub
mov
mov
xlat
sub
out
xor
xchg
stos
push
test
mov
xor
adc
scas
pop
fbld
cmc
in
inc
imul
ins
mov
aas
fs
add
(bad)
ror
dec
mov
cs
add
mov
mov
jmp
bswap
mov
pop
and
mov
xor
rol
popf
mov
jp
cmp
push
loopne
pusha
mov
rcl
pop
sbb
dec
mov
mov
call
jecxz
mov
jb
sub
add
mov
push
sbb
out
pusha
sbb
sar
mov
and
aam
jns
daa
retf
loop
jl
push
test
imul
sbb
mov
in
inc
push
ins
ja
or
jo
mov
leave
xor
outs
jl
inc
(bad)
ss
jb
test
xor
stc
ins
inc
and
pop
pop
mov
and
in
inc
cmp
push
and
xchg
call
sar
push
or
ja
daa
mov
mov
scas
stos
mov
inc
in
xchg
ror
movs
retf
xchg
inc
pop
sbb
clc
addr16
outs
mov
shr
or
push
sbb
jg
das
xor
xor
mov
inc
loopne
sub
int3
test
sub
pop
add
in
das
dec
inc
jecxz
out
mov
pusha
movs
aas
adc
adc
retf
inc
sub
shr
mov
repz
ds
sbb
sub
inc
fwait
rcr
in
mov
stos
and
xor
in
pushf
mov
in
xchg
xchg
in
mov
lock
or
and
and
and
sbb
data16
bound
lea
fidivr
test
in
adc
(bad)
je
leave
push
pop
cs
xchg
sub
stos
fist
test
cs
add
jp
ss
push
lock
and
dec
adc
sub
fstp
mov
xor
pop
or
dec
fs
dec
pop
add
jbe
in
or
cmc
add
bound
lahf
(bad)
mov
movs
mov
push
mov
or
mov
ja
sbb
and
pop
loopne
or
push
mov
imul
push
out
mov
scas
jle
cmp
xor
pop
scas
(bad)
mov
retf
push
test
icebp
cdq
cmp
cmps
fs
xchg
jns
aam
and
jecxz
or
sbb
call
inc
xor
(bad)
push
add
mov
xchg
loope
sub
pusha
xor
in
lds
div
xor
dec
push
mov
jnp
xor
ins
mov
imul
out
pop
jmp
jmp
adc
pop
in
and
es
aas
es
push
ja
or
cmc
jbe
lahf
or
add
inc
mov
cli
jbe
dec
xlat
mov
scas
xor
lods
js
lock
fcomp
mov
mov
or
ss
(bad)
imul
inc
push
mov
mov
dec
div
fisttp
call
test
xchg
imul
out
xchg
scas
xchg
pop
in
fidiv
adc
xchg
test
imul
repnz
call
lods
sbb
arpl
jecxz
hlt
(bad)
(bad)
pop
sbb
jmp
aas
cwde
push
fsubr
or
sub
sti
(bad)
std
dec
in
inc
jecxz
imul
mov
dec
adc
dec
or
add
fwait
(bad)
push
xor
cmc
or
jecxz
addr16
xor
daa
add
out
push
sub
cmps
mov
or
imul
add
out
loopne
mov
jle
dec
inc
inc
into
nop
mov
dec
add
or
xor
cmps
dec
adc
pop
shl
dec
je
or
sub
mov
sbb
rcl
js
jp
adc
pop
sti
sub
addr16
and
jbe
lods
movs
push
ret
mov
sbb
cmp
xlat
loopne
mov
xor
shr
adc
xor
fisttp
call
xchg
xor
inc
pop
mov
push
pushf
and
mov
add
jb
push
gs
jge
jle
inc
or
fist
dec
popa
imul
adc
mov
mov
retf
xchg
adc
scas
mov
pop
setl
mov
adc
ror
push
xchg
les
stos
aad
adc
shl
add
repz
sbb
out
mov
jg
xor
inc
xor
mov
cli
out
(bad)
loop
pop
xor
in
in
dec
loope
mov
mov
xchg
xor
push
ret
call
xchg
xlat
mov
fcmove
pop
mov
jae
sar
dec
je
mov
fs
out
xchg
sub
sub
sbb
mov
add
sti
nop
repnz
xor
mov
outs
icebp
mov
fxch
cmp
sub
mov
pop
(bad)
bound
lea
mov
sbb
push
nop
mov
rol
mov
imul
sar
cmp
je
aam
mov
(bad)
(bad)
hlt
test
add
sub
dec
inc
lods
movs
scas
stc
ins
aas
es
add
adc
xchg
sbb
or
mov
cs
sub
fcom
sbb
jmp
imul
fcom
xor
rcl
inc
pop
pop
cmp
jmp
adc
lods
aam
inc
adc
mov
loopne
add
sbb
or
xchg
push
loop
ret
mov
push
jmp
es
std
out
je
add
xchg
popf
xor
push
push
outs
jle
jle
dec
pop
push
adc
stos
dec
pop
(bad)
xor
cld
scas
inc
lds
pop
xor
push
imul
xchg
(bad)
int3
push
jp
pop
fld
jle
js
lods
jle
mov
dec
pusha
test
inc
mov
cwde
sub
icebp
ficom
cdq
in
lds
inc
mov
cmp
sub
xchg
pop
xor
xchg
ret
push
in
jl
adc
sahf
inc
stos
cmp
xor
xchg
stc
jno
daa
std
xchg
mov
test
sbb
or
ds
rcl
pop
fistp
leave
inc
ficom
sub
mov
adc
push
lods
ror
inc
cmp
rcl
shl
lds
repz
adc
xor
inc
cmc
adc
out
movs
sbb
xor
or
adc
inc
sbb
popa
jbe
inc
sbb
pop
mov
jge
xchg
cld
fwait
es
daa
inc
or
ud1
jecxz
lea
sbb
pushf
inc
inc
imul
mov
mov
xlat
je
ror
popa
not
aaa
push
idiv
retf
sub
gs
mov
and
add
call
enter
imul
mov
or
clc
popa
sbb
sub
push
mov
iret
mov
cs
shrd
sub
dec
or
fcom
ror
test
sbb
imul
cmp
push
stc
sbb
movs
std
mov
add
lahf
pop
js
cmp
xor
jno
repnz
sub
and
ficom
jecxz
mov
push
and
add
out
fsub
enter
adc
adc
int3
out
pop
add
hlt
inc
mov
(bad)
pop
inc
add
fimul
push
jmp
jp
in
bound
mov
push
sti
cs
lods
sbb
pop
sti
pop
cmp
sbb
mov
outs
adc
js
add
push
add
nop
cli
int
cs
pop
(bad)
jmp
push
mov
nop
adc
je
jge
xchg
shr
fs
mov
mov
sbb
or
bound
mov
mov
cmps
mov
in
xchg
or
xchg
xlat
inc
or
push
aam
(bad)
xchg
(bad)
in
dec
push
inc
mov
(bad)
jns
ja
push
je
pop
and
jecxz
fst
xlat
lahf
xor
nop
ret
push
xchg
sahf
(bad)
adc
into
pop
sub
loop
adc
xchg
outs
fisttp
(bad)
xlat
out
and
jnp
test
ins
inc
xor
ja
movs
xchg
out
or
mov
stc
jmp
fcom
dec
dec
cwde
hlt
clc
sub
repz
or
adc
(bad)
iret
repnz
movs
sub
jno
add
cmps
pop
mov
jg
ds
data16
js
imul
and
xchg
setge
sub
mov
ds
sbb
mov
iret
or
mov
rcr
mov
xchg
gs
push
sti
jb
imul
sbb
pop
enter
ficom
adc
fbld
cmp
push
outs
ror
into
fisttp
lahf
pop
imul
mov
inc
adc
cmps
dec
arpl
xor
nop
pop
cmp
retf
or
in
and
std
jmp
xchg
add
daa
(bad)
fcmove
sti
mov
fisttp
fisttp
rcl
add
(bad)
imul
and
cmps
and
rcl
inc
iret
imul
push
adc
mov
shl
push
pop
icebp
loopne
shl
(bad)
pop
push
sbb
add
mov
mov
sbb
cs
pop
std
cs
push
movs
cdq
push
in
ds
popf
ins
fstp
mov
leave
into
aaa
sub
int3
(bad)
sbb
stos
call
test
repz
mov
sbb
jle
mov
inc
pop
push
mov
sub
jmp
ret
mov
sub
mov
mov
scas
pop
mov
push
add
cmp
xor
xchg
pop
test
pop
jb
cmp
or
sub
cmp
jne
into
movs
mov
sub
in
imul
fwait
mov
dec
cmps
push
adc
call
outs
addr16
jne
adc
cmps
outs
adc
push
jg
or
into
add
jg
inc
out
(bad)
sub
jge
or
ins
sub
outs
(bad)
dec
sbb
inc
xor
int
mov
xchg
mov
xchg
ins
push
jg
push
stc
inc
adc
adc
movs
xchg
xchg
xchg
cmp
lods
imul
add
mov
jne
sub
push
ins
pushf
in
sbb
fcomp
outs
push
loope
imul
aam
sar
cmps
lahf
push
aad
ds
std
data16
push
xchg
mov
dec
sub
sub
push
jle
dec
pop
sbb
or
call
mov
retf
xor
jge
pop
gs
stc
mov
(bad)
stc
and
push
jmp
mov
and
xchg
and
dec
retf
push
cmp
pop
jbe
and
push
and
and
out
stos
cld
je
xchg
and
push
(bad)
cmc
pop
inc
jg
adc
(bad)
pop
push
pop
test
aas
daa
lea
push
add
lds
sbb
and
mov
inc
inc
jmp
sub
data16
jle
or
mov
cmps
cmc
and
and
or
in
push
rol
je
sbb
cmps
jb
mov
push
test
ficomp
xchg
std
(bad)
aam
xchg
(bad)
mov
in
push
jno
pop
mov
xor
sub
and
inc
inc
xor
pop
lods
(bad)
mov
popa
sub
out
mov
push
arpl
stc
jbe
mov
(bad)
or
(bad)
mov
mov
sahf
cdq
mov
por
ret
not
inc
ins
js
xchg
push
loop
mov
mov
xor
outs
jae
jne
outs
sbb
inc
out
add
cld
pop
push
or
into
adc
mov
push
outs
loop
scas
xchg
jge
sti
shr
pusha
push
dec
arpl
xor
jne
(bad)
gs
int3
add
inc
dec
repz
jno
jb
fld
fcom
mov
mov
mov
xchg
iret
retf
ret
sub
lods
repz
rcl
mov
scas
cmp
push
jmp
xchg
fistp
repz
jb
pushf
cmp
fstp
ja
(bad)
push
mov
xchg
dec
adc
into
inc
dec
mov
daa
cdq
scas
sub
dec
adc
sub
xchg
enter
pusha
lods
add
unpckhps
outs
xchg
xchg
push
call
xchg
mov
ss
ins
and
jmp
cmp
and
lods
jns
(bad)
fsub
ret
adc
dec
xchg
mov
adc
cmp
loope
push
xchg
test
mov
xchg
or
sar
xchg
adc
gs
sub
aad
xchg
push
sbb
cmc
mov
mov
ins
popf
sbb
dec
cmp
adc
xor
js
mov
ror
xchg
int
mov
fisttp
test
loopne
adc
mov
jno
lahf
in
inc
jnp
test
dec
push
repz
ja
adc
fisubr
(bad)
xor
dec
dec
add
and
xlat
ret
or
push
movs
pop
add
sti
lods
mov
ins
jmp
pop
inc
stc
mov
push
cmp
mov
jae
pusha
push
cli
cmp
rol
pop
sub
icebp
adc
pop
leave
test
je
mov
add
push
jmp
outs
inc
dec
(bad)
mov
imul
cmp
rol
(bad)
repz
lea
push
cmp
mov
sbb
sbb
(bad)
dec
nop
arpl
(bad)
sbb
into
cmp
in
mov
or
shl
daa
jno
or
dec
or
xchg
sbb
or
ins
scas
push
xor
lods
xchg
imul
push
(bad)
push
add
lds
mov
and
loope
xchg
mov
stos
lds
ja
in
cmp
scas
leave
cmp
push
mov
fucomp
cmp
call
in
pop
ror
and
push
mov
xor
cmps
adc
fdiv
stc
(bad)
mov
jo
int3
mov
dec
je
add
int
fild
xlat
mov
sbb
std
sub
dec
jp
push
jbe
int3
inc
xor
in
cmps
mov
div
xchg
pop
and
sub
sub
mov
pop
fsubrp
mov
sbb
out
je
jno
mov
add
and
sub
mov
shl
xchg
sti
out
push
aam
cmp
outs
xchg
adc
sbb
add
inc
ja
aad
mov
fwait
inc
mov
jae
popf
adc
icebp
mov
jecxz
fbld
push
into
ret
cmp
stos
scas
mov
iret
ins
lahf
push
add
sub
mov
addr16
fnstcw
in
aas
push
cli
add
retf
dec
pop
jae
inc
xchg
adc
nop
cmp
dec
push
nop
ds
ret
cmp
push
push
cli
vpshufd
xchg
xchg
xchg
cmp
pop
mov
pop
cmc
(bad)
pop
mov
inc
fs
sub
mov
xchg
push
mov
fst
dec
dec
cwde
pop
(bad)
es
mov
mov
and
inc
in
xchg
mov
hlt
aam
call
mov
fwait
xchg
xor
call
bound
fwait
mov
mov
cmp
xchg
test
pop
mov
pop
xor
cmps
scas
or
es
jle
fidiv
ret
push
loopne
shl
int3
xor
jp
and
dec
icebp
mov
mov
cmps
lods
pop
pop
mov
xor
jbe
sbb
xor
xchg
mov
movs
mov
fmul
shl
xchg
pushf
daa
fnstcw
bound
and
sub
stc
lods
jg
mov
xor
add
in
mov
in
dec
or
add
pop
mov
stos
sbb
sub
(bad)
mov
daa
push
and
xlat
movs
imul
shr
out
jne
xchg
ins
mov
pop
or
div
xchg
int
jno
lahf
fucomip
push
mov
lds
repnz
pop
out
sub
xchg
or
push
sub
in
mov
dec
pop
jae
fcom
std
fs
mov
imul
popa
xchg
cmps
jno
sti
repnz
cmp
add
test
xor
bound
pop
retf
sub
sub
loop
or
jge
fstp
mov
push
cmps
inc
not
mov
ror
cmp
(bad)
movs
xchg
out
(bad)
pop
or
imul
in
adc
rcl
push
mov
push
retf
add
aam
js
xchg
adc
mov
sbb
adc
in
popf
push
xchg
aaa
inc
cmovg
mov
jns
and
nop
int3
mov
and
mul
mov
xchg
loop
add
or
ins
inc
mov
or
call
pushf
jmp
push
(bad)
cmps
jmp
pop
mov
inc
(bad)
cmp
jmp
xor
add
cs
or
mov
sbb
jns
js
xchg
sbb
push
pop
cmc
xor
push
in
std
in
xor
xchg
lea
popf
or
popa
mov
sbb
sbb
mov
jnp
stos
pop
mov
sbb
outs
jne
cdq
ret
std
mov
sbb
mov
fisttp
inc
jnp
lahf
in
lea
dec
xor
and
test
pop
(bad)
sub
test
add
pop
arpl
das
xchg
sub
fcom
lahf
mov
jmp
add
mov
pushf
adc
ds
push
(bad)
std
push
fisub
imul
rcl
stos
pop
dec
pop
xchg
xor
retf
push
add
mov
(bad)
cli
fs
add
cli
iret
stos
nop
inc
pop
sub
cmp
mov
pop
mov
jno
dec
(bad)
sbb
sbb
push
mov
and
test
add
mov
cmp
fld
ror
cwde
mov
jns
or
sub
sbb
xchg
adc
pop
call
retf
mov
or
scas
ins
retf
ret
stc
mov
sbb
into
xchg
mov
mov
daa
scas
sub
inc
and
das
mov
dec
add
mov
mov
push
sub
int
pop
dec
mov
sub
mov
imul
sbb
or
ins
stos
jmp
jecxz
(bad)
outs
imul
xchg
jo
mov
imul
add
ret
jecxz
inc
pop
call
lds
mov
loope
push
stos
inc
cdq
in
int
mov
inc
fwait
gs
jb
js
ret
cmp
cmc
shl
fcmovne
pushf
outs
loope
or
mov
push
in
or
cld
sub
sbb
ins
adc
stos
stc
movs
add
test
arpl
neg
lods
ins
jb
push
into
inc
nop
cld
mov
ret
mov
popf
rcl
bnd
fs
add
jecxz
(bad)
cmp
call
adc
add
xor
shr
cmp
rcr
call
sti
pusha
sbb
movups
inc
rcl
loope
sar
imul
and
js
jmp
retf
fdiv
and
iret
mov
cmp
lea
mov
test
cs
pusha
stc
mov
jl
movs
or
pop
jge
push
jbe
ret
push
fmul
jno
dec
mov
ss
shl
or
xor
sub
ins
sub
mov
add
sub
wbinvd
test
add
adc
shr
jo
jmp
and
pop
std
ret
jle
adc
cld
sahf
sub
mov
xor
bound
jp
mov
or
sbb
js
xor
dec
sbb
frstor
pop
inc
jmp
add
adc
ss
fwait
cmp
mov
pop
std
push
icebp
mov
clc
xor
int
or
push
cmp
dec
xchg
retf
and
jle
aam
add
pop
and
cs
je
aad
enter
or
xchg
inc
or
call
bound
inc
aad
lds
add
lock
arpl
xchg
inc
xchg
jp
shl
jbe
adc
push
ds
out
pop
aad
push
jle
adc
movs
add
inc
add
mov
dec
mov
in
jb
xor
into
rol
repz
in
ins
jge
repz
xchg
(bad)
popf
jno
inc
mov
out
pop
fs
mov
or
add
loop
shr
mov
adc
push
in
mov
mov
mov
adc
xor
mov
mov
pushf
scas
xchg
ins
dec
rol
out
inc
cmp
adc
jae
mov
icebp
mov
mov
mov
test
stc
arpl
stos
dec
loope
push
or
mov
loopne
idiv
xchg
dec
inc
or
fcmove
push
movs
jecxz
inc
(bad)
(bad)
mov
add
clc
js
ror
std
pushf
sub
fs
mov
scas
out
sar
(bad)
pop
neg
loop
ror
loope
add
stc
je
sub
gs
outs
mov
stos
sbb
pop
sbb
inc
cmp
jne
les
jnp
enter
sub
lahf
clc
ret
fiadd
sub
push
pop
pop
cwde
push
pushf
js
and
push
ja
mov
pusha
(bad)
cmp
std
aas
add
imul
out
sub
adc
hlt
and
lahf
and
sbb
test
xor
jno
pusha
and
inc
cmps
and
or
stos
push
stc
pop
frstor
pop
hlt
sbb
cmp
push
pop
adc
mov
xchg
inc
jae
enter
(bad)
sub
stc
jae
(bad)
sbb
pop
jae
jb
in
retf
fst
xchg
mov
push
mov
add
xor
mov
pop
shl
dec
jmp
sbb
jae
sub
push
dec
cmp
mov
jl
inc
je
jecxz
jae
jmp
aad
fbld
sti
cmp
pushf
mov
movs
push
ret
sbb
cmc
sub
mov
mov
mov
pushf
je
push
imul
jmp
test
sub
add
inc
out
push
fbld
xchg
les
daa
(bad)
sub
lods
out
iret
icebp
js
adc
aam
cmpxchg
iret
sub
aas
icebp
inc
jmp
mov
add
add
test
fidiv
add
cwde
mov
xlat
out
movs
scas
mov
sub
pop
mov
mov
mov
or
in
add
int3
mov
xlat
inc
add
mov
aam
push
ror
mov
or
test
xchg
(bad)
iret
cmp
xor
movs
lea
shl
mov
pop
lahf
push
mov
lods
sti
daa
hlt
mov
add
or
xchg
ss
test
rcl
pop
push
ja
inc
mov
inc
pop
jnp
loope
pop
adc
mov
add
repnz
mov
out
ror
das
loop
leave
add
pop
add
je
in
dec
dec
or
push
xchg
mov
push
xor
or
rol
jmp
pushf
ja
iret
adc
sti
cmp
mov
imul
hlt
pop
mov
xchg
pop
out
stos
jmp
fild
and
leave
das
pop
inc
lea
mov
mov
mov
pop
add
cmp
es
loop
pop
push
test
jecxz
cmc
sub
push
mov
cmps
or
fcmovbe
cwde
mov
cwde
out
cmps
imul
adc
jns
loop
sub
mov
sahf
jb
pop
add
retf
mov
aaa
cmp
icebp
hlt
inc
push
lods
xor
xchg
stos
movs
sub
arpl
mov
xchg
fcmovnb
mov
jg
add
inc
lds
js
sti
in
push
int
imul
das
or
into
pop
push
jge
add
push
or
cmc
push
add
test
cdq
js
xchg
sbb
add
pop
je
repz
xchg
and
cs
mov
dec
push
push
xchg
and
push
mov
ror
sub
clc
mov
(bad)
fs
cmp
pop
(bad)
int3
movs
xlat
jno
or
sub
cmp
daa
sub
xchg
cld
addr16
retf
dec
push
push
jge
xchg
adc
mov
out
pop
or
dec
(bad)
icebp
sar
push
sti
or
vpmuludq
fldcw
mov
shl
mov
int
std
mov
retf
mov
fnstcw
add
ins
push
sbb
push
cmp
or
push
fdivr
cli
mov
add
pop
or
dec
mov
pop
sahf
aas
pushf
jb
(bad)
and
and
shr
cmc
cdq
push
cmp
pushf
pop
das
xor
mov
out
pop
mov
pushf
dec
mov
bound
mov
leave
jmp
or
sub
xchg
and
add
rol
sbb
lock
fcomp
aaa
or
mov
mov
push
lds
mov
push
test
test
pop
fdivr
adc
mov
das
pushf
mov
cmp
and
dec
imul
cmp
mov
fisub
fs
call
sub
inc
push
xor
call
mov
xchg
mov
ins
push
inc
fwait
xchg
ins
cdq
std
out
je
retf
mov
test
popa
nop
xor
sub
sbb
adc
push
je
cdq
xlat
mov
adc
dec
inc
pop
or
mov
les
sub
test
mov
scas
out
inc
push
aam
stos
aaa
inc
sub
retf
inc
cdq
movs
jo
(bad)
adc
fucom
and
cmps
out
xchg
jb
in
and
call
pop
mov
cdq
adc
add
test
jae
cmps
or
js
aas
es
pop
push
mov
popa
ja
add
scas
dec
xchg
fwait
xchg
inc
call
dec
(bad)
es
gs
xchg
shr
out
enter
xchg
inc
scas
push
inc
daa
jmp
mov
sar
test
cmp
clc
jl
je
sub
mov
(bad)
jecxz
ret
inc
ret
jle
pop
add
fwait
lods
test
shr
mul
sbb
aas
dec
fisttp
add
mov
sub
fldcw
cmp
call
mov
les
iret
stos
cld
imul
sbb
and
(bad)
fiadd
ret
in
imul
scas
push
lods
repnz
mov
std
or
lea
test
inc
sbb
mov
pop
mov
mov
cdq
inc
xlat
inc
push
sbb
mov
add
aad
inc
push
out
sub
test
dec
(bad)
pop
pop
lods
mov
jmp
or
fcom
jg
or
sub
mov
xchg
mov
stos
rcr
shl
jg
ja
arpl
pop
pop
cmp
pop
aaa
mov
movs
nop
and
push
gs
inc
jne
or
pop
dec
sar
pop
lods
fwait
lea
imul
mov
ja
mov
push
aas
push
add
das
or
inc
sbb
int3
nop
sub
in
xlat
sahf
int3
pop
aaa
cmp
mov
scas
and
pop
imul
xor
imul
mov
jns
cmp
in
mov
pop
xchg
adc
inc
(bad)
push
ror
(bad)
or
nop
js
and
iret
push
retf
pop
into
mov
mov
or
cld
xchg
sub
and
cld
in
repz
mov
stos
sbb
sbb
arpl
sub
fs
jg
fmul
xchg
or
mov
das
cmp
fild
xor
adc
cwde
add
loop
and
jb
xor
xchg
int
(bad)
rol
fdivr
dec
jmp
pmulhw
lods
mov
das
(bad)
sub
push
sub
imul
push
jnp
cs
popa
out
dec
dec
sbb
aaa
sbb
push
ja
inc
iret
sub
mov
jge
(bad)
mov
into
arpl
jecxz
pop
mov
adc
cmps
xchg
inc
pushf
sbb
jge
ja
adc
jb
adc
int
xor
lds
sub
es
(bad)
mov
or
mov
add
jno
mov
push
and
in
jae
mov
adc
jb
inc
jge
xlat
add
adc
or
mov
xchg
outs
push
jnp
add
or
rol
scas
daa
cmp
jnp
outs
call
fs
call
fcmovnu
push
fisub
mov
xchg
dec
mov
xchg
fiadd
out
mov
add
mov
(bad)
(bad)
push
push
or
mov
xchg
mov
cdq
jbe
add
add
push
mov
sub
aaa
imul
data16
shl
psraw
in
pop
sahf
loope
les
sbb
ja
into
outs
jp
inc
fisttp
mov
mov
icebp
mov
stc
ds
xchg
push
sbb
stos
mov
dec
shr
cmps
xchg
adc
dec
js
(bad)
xchg
ror
xchg
call
leave
jb
fistp
inc
into
mov
cmp
inc
xchg
ins
sub
or
shl
stc
mov
dec
mov
adc
sbb
add
jp
sub
outs
inc
in
xchg
dec
(bad)
shr
and
lock
out
ds
(bad)
cmps
cmps
dec
add
(bad)
clc
popf
leave
out
jne
cdq
jno
aaa
push
retf
mov
push
outs
xlat
add
xchg
imul
xor
ja
dec
dec
cld
out
(bad)
gs
pop
push
sub
mov
cmp
lods
cmp
lds
imul
mov
inc
imul
sub
mov
retf
xor
out
out
repz
sub
addr16
mov
out
jo
sbb
jmp
and
fsub
push
xor
loope
ret
and
sub
or
fnstsw
xor
mov
daa
in
retf
(bad)
xchg
imul
mov
jnp
or
std
movs
cmps
int3
pop
mov
jl
push
mov
loope
(bad)
and
mov
jmp
or
and
cmp
lods
jmp
xor
outs
pop
(bad)
rol
jnp
loope
push
cs
ror
dec
test
adc
sbb
fs
repnz
imul
add
jns
sbb
ror
cld
loop
pop
iret
adc
sbb
inc
fwait
(bad)
jbe
or
sub
(bad)
sti
pop
add
or
int3
mov
jmp
cmp
cmps
jno
popa
inc
mov
sbb
push
shl
add
xor
loopne
mov
loop
fwait
cmp
fimul
pop
jbe
add
pop
in
pop
add
jge
pop
add
bound
inc
jns
xchg
sub
or
cmps
in
xlat
nop
mov
retf
cmps
pop
sti
fstp
sub
lods
sbb
jmp
out
sub
clc
out
sbb
pop
push
movs
dec
icebp
pop
std
aaa
inc
sbb
movs
mov
add
dec
mov
mov
inc
mov
pushf
imul
sahf
mov
inc
dec
pop
pop
movs
cmp
test
cld
lea
cmps
iret
out
push
dec
je
aaa
mov
or
xchg
(bad)
jmp
adc
dec
nop
retf
or
dec
sar
jmp
bound
pop
repz
iret
jne
(bad)
adc
popa
xor
out
ret
xchg
lds
nop
dec
iret
sahf
dec
cmp
es
stc
xchg
shr
xor
push
(bad)
sti
or
sub
(bad)
cmp
push
and
pop
and
not
test
jbe
push
xchg
cmp
hlt
into
dec
mov
clc
sub
pop
repz
pop
or
push
out
push
xor
pop
retf
outs
pusha
pop
popf
cs
enter
push
loope
xchg
pushf
push
leave
stos
inc
and
test
pop
lods
scas
pop
jne
adc
in
std
sub
cmp
xchg
ds
jmp
inc
fild
sbb
aaa
stc
pop
in
mov
jmp
or
xor
aad
pop
pop
cmp
imul
push
ss
cmp
int
ficom
mov
pusha
call
enter
push
movs
pusha
push
es
gs
int
add
mov
adc
call
dec
ins
jmp
sbb
cmps
imul
pop
clc
ret
or
xchg
dec
out
jmp
jno
xchg
add
test
mov
mov
mov
xchg
pop
xor
ds
mov
push
imul
fisub
inc
pop
in
call
arpl
or
popa
adc
mov
jg
gs
movs
mov
repz
mov
jb
iret
or
sbb
push
out
clc
inc
xchg
add
js
inc
mov
dec
pop
aaa
imul
or
(bad)
movs
pop
fbld
inc
jns
and
rcr
in
xor
std
jp
jle
push
sbb
out
jmp
pop
xor
aas
pop
jae
mov
and
push
mov
out
aas
push
sbb
je
fdivr
or
sbb
das
sub
push
es
add
xchg
pop
inc
xchg
das
adc
dec
ds
mov
sbb
mov
test
arpl
enter
jge
jge
shr
stc
addr16
fs
jge
int3
jmp
mov
adc
cs
xlat
ins
out
push
mov
dec
xchg
cld
(bad)
jns
inc
jmp
retf
cdq
in
js
pop
fwait
ins
xchg
daa
xor
cmps
call
add
test
out
outs
cld
jmp
(bad)
xchg
ins
fistp
or
loopne
stos
push
shl
loopne
sbb
inc
sub
fs
loope
inc
cmp
push
add
dec
inc
mov
or
fidiv
mov
dec
pop
sbb
mov
repz
cdq
cmp
movs
scas
int
cmc
adc
hlt
aaa
scas
loopne
add
and
lahf
mov
push
push
adc
test
mov
inc
(bad)
cld
iret
or
aas
mov
mov
(bad)
sti
ins
or
mov
hlt
dec
cmc
mov
sbb
test
mov
inc
xchg
push
ret
add
shr
sub
push
sbb
pop
ins
pop
fnstenv
xchg
test
int
ror
mov
out
test
mov
rcl
mov
aas
push
add
push
ret
leave
fwait
bound
pop
jbe
cmps
cmp
pop
imul
mov
xchg
adc
daa
push
push
add
arpl
pusha
sub
cmp
leave
aaa
inc
jnp
(bad)
call
cmc
ja
xor
ret
adc
imul
(bad)
push
arpl
aad
sbb
ins
cmp
dec
cmp
dec
leave
es
rol
lds
mov
jo
mov
lods
pop
xlat
pop
xchg
mov
push
pop
pop
jge
jnp
cmp
jns
add
test
dec
jg
jae
inc
jnp
data16
loopne
sub
push
sti
mov
add
pop
imul
pop
push
shl
outs
pop
pusha
outs
fsubr
xor
pop
jo
into
cdq
dec
jno
push
imul
or
js
jno
std
xchg
mov
dec
jmp
cs
inc
cdq
pop
mov
(bad)
jge
and
xchg
sbb
jb
(bad)
pop
das
(bad)
ficomp
les
fdivr
jns
mov
test
shr
cmp
inc
push
cmp
sbb
jbe
retf
and
ins
ret
jg
add
out
test
hlt
scas
cmp
pop
movs
push
dec
mov
xchg
dec
data16
xchg
mov
icebp
call
rcr
mov
lea
(bad)
std
xchg
ret
jnp
add
mov
push
inc
loop
ret
adc
xchg
cmp
shl
popa
inc
enter
pusha
sub
or
jp
add
dec
gs
andnps
(bad)
cmc
cmp
mov
(bad)
cmp
adc
mov
sub
sahf
mov
dec
fsubr
sbb
jbe
and
mov
enter
iret
add
add
mov
scas
dec
(bad)
push
aas
cmps
push
in
fucomi
mov
popf
fld
jmp
add
inc
out
push
js
test
clts
xor
or
mov
lods
(bad)
shl
xchg
test
(bad)
shl
mov
add
mov
mov
cmp
(bad)
cwde
fdivp
mov
into
sub
sbb
loopne
push
mov
or
ret
dec
loope
cmp
mov
std
cld
jmp
mov
sub
shl
ja
pushw
dec
and
push
loop
and
mov
ins
(bad)
in
das
outs
test
pop
fwait
add
and
jns
stos
dec
jno
xchg
mov
jb
dec
je
mov
jg
ficomp
call
jns
cmps
pop
popa
and
js
inc
xor
addr16
jmp
out
popf
stos
mov
enter
dec
and
jmp
mov
mov
and
cli
adc
jl
bts
xor
ret
and
sbb
jmp
test
lds
add
add
xchg
and
xlat
js
dec
cld
jg
or
cdq
xchg
push
add
inc
adc
lock
(bad)
call
dec
mov
inc
or
mov
jmp
std
mov
or
out
mov
jnp
jno
iret
pop
aad
sbb
inc
movs
mov
stos
inc
or
std
dec
mov
inc
jb
dec
sub
in
movs
rol
outs
mov
push
ss
add
push
in
xchg
sub
and
dec
dec
fcom
jae
cmp
dec
(bad)
in
loope
xor
hlt
jecxz
punpcklwd
outs
out
jne
or
data16
stc
shl
jmp
repnz
fucomp
pop
and
push
test
sub
enter
lahf
into
sub
test
dec
imul
cmp
add
pop
mov
dec
in
nop
add
addr16
(bad)
sub
cmps
fsubr
jnp
jp
iret
(bad)
iret
or
nop
imul
call
(bad)
aam
jge
loop
mov
addr16
add
int
xor
bound
stc
scas
pop
inc
call
fidiv
cmp
mov
sti
pop
dec
inc
pop
ret
inc
psrld
in
fild
mul
into
pop
repnz
test
push
repnz
and
int
adc
push
jp
xchg
adc
cmps
in
mov
jbe
(bad)
mov
sar
retf
js
pop
imul
add
mov
call
or
add
and
das
jge
lea
jmp
scas
cmps
mov
into
sub
mov
fs
cli
aam
xchg
push
push
scas
sbb
(bad)
mov
into
movs
mov
ret
sar
nop
mov
pop
sbb
xchg
js
xor
hlt
icebp
retf
std
pushf
enter
mov
sahf
cmps
arpl
out
lock
stos
mov
ins
es
cmp
(bad)
outs
push
sbb
retf
pop
dec
sub
add
xchg
push
or
and
arpl
xchg
fdivr
int3
retf
add
lds
or
xor
ss
ror
loopne
push
imul
addr16
call
dec
inc
mov
sub
dec
sahf
pop
add
xchg
pop
or
xor
lods
jbe
scas
add
mov
nop
add
adc
jns
dec
xchg
stos
xchg
xor
and
xchg
sahf
and
add
sbb
pushf
jne
xor
shr
push
shl
sar
or
ficomp
ja
test
loopne
xchg
cld
pop
ins
movs
ja
arpl
gs
mov
test
or
lds
mov
jmp
ret
out
in
push
les
or
fwait
aas
mov
mov
and
xchg
mov
out
inc
or
push
popa
fidivr
and
in
test
or
imul
call
mov
retf
pop
fldlg2
jp
xchg
jg
fdiv
or
dec
push
outs
sahf
sbb
jp
or
jnp
sbb
mov
mov
pop
arpl
rcr
addr16
enter
inc
or
xchg
shr
mov
fiadd
test
xacquire
outs
push
add
adc
retf
popa
nop
retf
or
adc
js
mov
retf
mov
and
xchg
push
dec
pop
jl
outs
push
dec
dec
jo
jae
mov
mov
dec
test
xor
repz
ins
dec
addr16
popa
xchg
aaa
fs
or
push
and
inc
pushf
out
or
jnp
xor
lds
xor
ins
jmp
scas
mov
sbb
push
pop
ret
loopne
inc
in
loope
out
out
inc
mov
sub
adc
jle
aaa
into
cmp
sub
pop
in
aam
cmc
and
hlt
pop
(bad)
pop
mov
push
mov
sbb
iret
cmp
mov
popa
mov
push
dec
out
rcl
inc
icebp
cmps
push
repz
jmp
mov
jl
out
cmp
imul
in
call
inc
add
jbe
out
(bad)
and
out
xchg
(bad)
pop
hlt
jne
iret
mov
cli
adc
std
in
shl
push
lods
(bad)
push
fsub
sub
mov
(bad)
gs
call
xchg
pop
ret
sti
or
jmp
and
pop
ret
push
sar
mov
mov
cmp
js
add
popa
pop
xor
jmp
mov
and
out
popa
out
mov
sub
add
rcr
pop
ins
mov
push
mov
outs
shrd
and
stc
movs
cmp
mov
call
lock
fstp
adc
jnp
sub
mov
test
mov
rol
mov
ficomp
dec
(bad)
retf
push
push
test
jae
in
ret
cwde
adc
ins
or
(bad)
out
call
(bad)
sti
adc
pop
(bad)
call
jle
and
ins
jbe
jmp
xor
fwait
mov
xor
xchg
(bad)
sub
cmps
sub
push
aaa
mov
test
mov
and
stos
jmp
push
ins
add
xor
inc
icebp
jl
ret
sbb
cmp
mov
xchg
mov
ror
jns
int3
sbb
cmp
inc
xchg
push
mov
xchg
mov
cmps
leave
mov
sbb
movs
(bad)
push
in
inc
push
mov
inc
pop
sub
jmp
ds
dec
and
call
enter
lods
pop
mov
dec
and
mov
mov
push
add
bound
jecxz
dec
test
push
push
int
sti
jae
push
inc
test
in
sub
test
sub
xlat
sbb
add
mov
add
pop
ins
stos
call
xchg
out
outs
test
stos
popa
cmp
jge
and
mov
sbb
retf
xchg
(bad)
pop
ss
xor
outs
shl
jmp
mov
loope
inc
xchg
dec
shr
cmps
(bad)
add
cdq
mov
adc
cmp
cmp
outs
mov
pusha
push
sbb
loop
add
adc
sub
xchg
lods
cmp
outs
xor
xlat
mov
mov
outs
push
push
(bad)
fstp
pop
mov
sub
loopne
pop
fwait
int3
movs
sahf
lods
aam
add
push
in
sar
jns
scas
popa
dec
lahf
sbb
stos
test
scas
mov
repz
push
imul
leave
pop
cmp
stc
ds
cmp
daa
or
in
xchg
dec
or
jnp
int3
sti
pop
adc
popf
rcr
xchg
in
dec
out
jns
pushf
jle
out
call
(bad)
cld
mov
push
in
xor
cmp
mov
call
rol
outs
or
lods
adc
cmc
loopne
jno
cmp
inc
test
mov
and
push
call
inc
loope
jno
jae
jae
mov
fstp
adc
sub
js
cmp
aas
test
jg
xchg
imul
add
push
les
sub
jmp
les
jo
retf
adc
(bad)
mov
lahf
jmp
push
dec
mov
mov
xchg
xor
jp
fdiv
jns
fld
ret
stos
aad
xor
shl
fbld
fcmovne
push
dec
dec
stos
pop
mov
daa
mov
adc
or
imul
pop
nop
cmp
stos
push
and
(bad)
aad
leave
stos
or
(bad)
call
sub
add
add
xchg
sbb
dec
xchg
push
movs
in
sbb
ror
xor
fidivr
ja
fs
movs
adc
out
rcl
mov
sar
push
mov
mov
push
dec
ss
inc
adc
fisub
fsub
nop
sub
jno
inc
in
sbb
pop
mov
cdq
mov
aas
push
outs
jle
xchg
ins
(bad)
pop
sub
cli
dec
dec
aaa
and
xchg
sub
cdq
popa
shl
pop
adc
sbb
and
dec
repnz
into
shl
jno
js
pop
(bad)
(bad)
adc
mov
or
int
repnz
(bad)
jns
sar
out
stos
cmps
or
ret
and
and
and
mov
mov
cmc
add
and
test
mov
jno
mov
fcom
rcl
sbb
movs
push
push
xchg
xor
mov
fstp
jbe
add
ret
adc
adc
adc
aas
(bad)
popa
imul
dec
xor
mov
xchg
cmp
jmp
cmc
test
or
add
nop
mov
repz
pop
imul
cmp
jae
mov
retf
enter
sbb
dec
bound
movs
xchg
retf
inc
dec
cmps
test
outs
ins
cmp
lods
mov
clc
xchg
stc
sub
jae
in
and
push
dec
inc
mov
(bad)
or
ja
out
lds
das
jmp
ins
push
icebp
int3
movs
sbb
fbstp
jmp
icebp
fsubr
jae
lock
adc
int
mov
test
pop
mov
xor
cmc
nop
or
push
xor
es
cmp
jns
jbe
and
dec
inc
hlt
das
movs
jg
sbb
jg
mov
cmp
xchg
inc
mov
adc
cdq
sar
mov
rcr
fmul
lds
xchg
es
fs
and
mov
add
cwde
loopne
and
cmp
sub
ret
lods
push
popa
cmp
test
mov
xchg
pop
inc
mov
jno
sar
cmc
sbb
adc
fs
sbb
jo
int
aas
sbb
clc
ret
add
dec
push
das
popf
jp
repz
dec
push
popa
pop
jmp
jg
adc
pop
icebp
inc
xlat
xor
dec
fdivr
shr
mov
adc
push
in
push
call
cli
jns
jle
test
mov
fldenv
push
(bad)
inc
xchg
inc
add
pop
les
mov
iret
inc
mul
mov
add
push
stos
fbstp
push
mov
mov
adc
cmps
lods
xchg
jmp
pop
sbb
add
(bad)
and
or
mov
add
adc
xchg
dec
and
pushf
pop
pop
xchg
jo
sbb
or
shl
inc
sub
pushf
inc
scas
xchg
and
add
mov
xchg
rol
jmp
jp
daa
js
sbb
mov
ret
cli
inc
jno
adc
xchg
inc
in
loop
mov
out
jl
add
jb
call
lahf
xor
xchg
or
xor
push
popf
mov
shl
dec
adc
loopne
push
dec
mov
inc
mov
mov
fsubr
adc
pop
xchg
sar
cmp
inc
idiv
xor
xchg
add
or
(bad)
fwait
pop
add
retf
jne
push
inc
in
and
mov
lods
push
xor
outs
jl
movs
shr
ins
xchg
call
push
cmp
pop
cwde
mov
js
jns
pop
xchg
ds
cmp
adc
cmp
sub
mov
pop
adc
or
jae
mov
jl
mov
aas
push
imul
mov
mov
xor
push
or
fnsave
sti
movs
cmp
sbb
pop
fcmovne
stc
lock
sub
rol
retf
sub
(bad)
cmp
push
cdq
or
cmp
loop
or
in
jp
retf
ds
sahf
fisttp
sbb
mov
jp
arpl
jae
lods
pop
sbb
fcomp
jnp
and
test
out
mov
neg
cs
out
cli
mov
imul
pushf
ret
sub
inc
mov
out
push
inc
mov
dec
cdq
pop
jp
cmps
cs
scas
frstor
push
lea
in
push
popa
mov
int
sbb
push
cld
push
in
inc
fsub
inc
mov
cmps
outs
out
pop
rcl
call
inc
mov
stc
push
mov
daa
jb
arpl
arpl
mov
sbb
add
xchg
ins
aad
sub
movs
ret
jmp
repz
scas
pop
imul
lods
and
push
pop
ins
sub
inc
dec
test
mov
mov
push
(bad)
or
dec
loopne
scas
inc
xchg
xchg
xchg
or
sbb
or
and
test
stos
rcr
add
adc
mov
or
loop
and
cmp
xchg
jmp
int
dec
xchg
out
scas
cld
jg
clc
jmp
xor
cmp
addr16
jmp
(bad)
gs
push
mov
xchg
mov
sbb
arpl
xor
call
and
jbe
or
sysret
sbb
nop
int3
dec
inc
sub
dec
test
test
pop
popf
mov
js
(bad)
jo
push
inc
ins
xlat
cmp
ret
popa
sub
mov
loop
test
add
leave
xor
mov
jmp
arpl
mov
cld
jb
xor
in
mov
mov
retf
push
popf
xor
test
test
pop
mov
mov
dec
mov
and
mov
inc
and
inc
adc
xor
popf
push
in
jae
dec
ret
sbb
iret
add
repnz
retf
mov
sahf
pop
test
mov
jae
xor
mov
sub
into
add
mov
test
cmp
daa
popa
push
push
mov
cmp
jmp
data16
add
les
pop
push
sbb
sub
les
cmp
mov
aam
add
jo
outs
iret
lods
int3
push
lods
add
mov
mov
xor
stc
cmps
(bad)
push
icebp
daa
cdq
stos
push
sbb
adc
aad
ja
movs
xlat
adc
jle
xor
lahf
je
sbb
lods
jae
aad
outs
xchg
push
inc
sti
jo
pushf
ja
sbb
mov
add
dec
adc
xchg
fsub
or
cmps
adc
loope
inc
pop
loop
sahf
xchg
sar
dec
jbe
test
das
push
ins
pop
out
(bad)
mov
xchg
test
mov
push
jmp
cmp
(bad)
retf
lea
int
dec
dec
stos
js
dec
(bad)
std
sbb
mov
(bad)
addr16
xchg
gs
mov
cmp
pop
jmp
sbb
lea
les
aaa
jns
sbb
fwait
(bad)
mov
mov
sub
mov
sahf
add
js
jnp
cmp
ds
into
cli
shl
inc
xor
jmp
sbb
mov
mov
popa
add
xchg
xor
or
inc
ds
dec
xor
pop
inc
les
or
cwde
ins
xor
mov
imul
test
push
xor
jmp
xor
mov
imul
mov
pusha
addr16
inc
sbb
popa
je
xor
sbb
mov
fwait
fwait
mov
jp
push
mov
mov
mov
fwait
(bad)
pop
xor
push
aaa
dec
inc
xchg
out
(bad)
imul
je
jnp
arpl
in
fistp
xor
retf
adc
xchg
not
adc
js
mov
leave
(bad)
scas
enter
jne
xchg
mov
lods
scas
clc
fs
xor
sbb
cmp
test
popf
dec
test
inc
clc
and
sub
int3
adc
pop
adc
cmp
loop
cmp
lock
ins
push
cmp
arpl
and
cmp
ja
cmps
sub
daa
adc
or
lds
xchg
pushf
in
pop
push
sbb
inc
and
enter
lock
and
outs
add
or
cmp
loop
popf
ins
scas
outs
popf
test
sub
pop
xor
test
into
dec
iret
std
mov
mov
icebp
icebp
and
sbb
mov
test
dec
adc
pushf
and
add
idiv
(bad)
out
mov
push
cwde
aad
pusha
sbb
lds
loop
mov
dec
and
mov
mov
xor
sti
dec
imul
lahf
shr
nop
sar
inc
lds
inc
cmp
(bad)
and
dec
cmp
ss
scas
add
call
scas
arpl
adc
jl
dec
retf
leave
cmc
int3
pop
ss
push
jo
cmp
in
pop
pushf
jecxz
jb
sub
jnp
stos
scas
sub
inc
aad
jne
leave
iret
mov
xchg
pop
popf
retf
and
aam
lods
jae
dec
mov
repz
xor
push
mov
pop
pushf
ins
loope
jecxz
jmp
ins
pushf
adc
adc
fstp
je
sbb
pop
stos
dec
push
cld
inc
jp
jne
sub
aad
pop
push
or
cmp
inc
call
pop
and
outs
movs
dec
jae
or
mov
adc
add
add
std
shl
stos
in
out
cmps
das
push
add
in
cmp
bound
xchg
stos
push
out
push
inc
lods
jmp
or
outs
stos
push
idiv
add
mov
fisttp
out
call
loope
ins
push
push
cmp
and
sub
xlat
add
mov
inc
out
leave
dec
jbe
inc
hlt
hlt
call
adc
lods
jmp
loope
xor
jl
leave
pop
imul
mov
jle
aam
aas
test
adc
jmp
add
fs
jmp
mov
ss
std
cmc
adc
pushf
and
(bad)
xlat
cmp
add
(bad)
in
pop
stc
jmp
mov
mov
push
call
aam
push
mov
xor
or
mov
and
fs
pushf
jle
bnd
push
scas
jmp
mov
ins
adc
cmps
inc
push
rcl
xor
pusha
xor
(bad)
setle
mov
xor
outs
es
sbb
movs
stc
sub
aas
cmp
push
cs
pop
(bad)
dec
repnz
leave
fisttp
mov
jl
lds
js
or
sub
jbe
mov
lea
shl
adc
out
dec
pop
dec
cmps
sub
push
mov
mov
cmps
pushf
and
dec
shl
iret
cli
pushf
adc
ficomp
mov
sahf
xor
inc
dec
pop
push
xchg
jp
or
popf
or
push
mov
jbe
jae
add
cmp
(bad)
xor
mov
sbb
daa
cmc
repz
test
mov
jl
sub
int3
pop
jle
xor
jns
sbb
pop
jg
movs
imul
cmp
ss
adc
(bad)
idiv
lahf
jmp
xlat
xchg
xor
in
push
(bad)
out
loop
cmp
or
cmp
lods
jge
clc
jg
xchg
xchg
pushf
mov
sbb
or
popa
xor
into
jp
imul
jbe
jle
sub
js
in
dec
aaa
enter
mov
pop
mov
pop
arpl
dec
xchg
inc
jns
xchg
or
test
lods
test
push
stos
cmp
push
enter
jmp
jo
out
xchg
imul
inc
pop
mov
mov
push
jne
and
(bad)
in
dec
aas
and
mov
sbb
inc
out
int
js
mov
adc
es
(bad)
push
sub
pop
xchg
sti
mov
xchg
cmp
jbe
sub
call
test
mov
out
xchg
ins
retf
out
xchg
sub
jecxz
(bad)
outs
mov
icebp
icebp
xor
stos
and
mov
mov
mov
mov
xchg
add
js
gs
mov
test
cmp
sti
add
sbb
mov
outs
mov
cdq
mov
adc
mov
(bad)
pop
repnz
aas
mov
es
adc
pop
push
jg
into
mov
adc
nop
fiadd
push
and
ja
inc
or
add
ds
punpcklbw
aad
and
test
pop
in
mov
into
jb
sbb
enter
push
test
xchg
movs
test
jnp
ret
sti
shl
ror
inc
cmps
data16
fnstcw
push
dec
push
arpl
addr16
test
sub
pop
adc
cmp
mov
mov
mov
ror
mov
sti
aad
outs
cmp
and
repnz
cdq
cmp
mov
jl
sti
inc
call
cmp
inc
dec
fld
cmp
lahf
and
dec
je
xor
pushf
popa
sar
cmp
mov
call
ins
movs
pop
and
sbb
jmp
lods
fidivr
push
test
test
mov
add
or
pop
ror
nop
lds
sar
and
pop
xor
mov
inc
fs
test
pop
inc
loop
inc
jecxz
(bad)
scas
movs
scas
ret
push
loop
aam
inc
mov
pop
or
fiadd
sub
jo
(bad)
xchg
push
adc
mov
movs
cmps
pop
mov
ins
mov
stos
pop
ja
outs
pop
test
mov
pop
dec
pop
mov
mov
dec
adc
mov
rol
push
or
pop
push
jno
jmp
add
fcmovu
ss
jns
mov
cmp
cmps
sbb
out
sub
dec
sub
daa
test
add
test
ins
and
xor
add
or
push
or
test
pop
xor
sti
jmp
rcr
mov
dec
pop
sahf
idiv
and
mov
xchg
dec
xor
cwde
pushf
pop
fwait
push
adc
stc
cmp
add
(bad)
xor
jne
dec
out
fwait
sbb
aam
sub
(bad)
pop
xchg
lock
fs
arpl
pop
bnd
mov
ret
mov
adc
sub
pop
and
in
out
ror
push
arpl
prefetch
aam
inc
je
or
or
jns
add
mov
pusha
mov
mov
sbb
aam
pushf
and
cmp
add
dec
add
or
jle
cld
jbe
mov
enter
sub
ror
scas
xchg
arpl
mov
adc
push
call
adc
repnz
adc
lds
push
dec
mov
xor
loopne
xor
mov
dec
jb
mov
push
inc
scas
fisub
cmp
sub
mov
sbb
out
jo
retf
mov
dec
loope
adc
dec
jne
push
jp
mov
cmp
repnz
lods
popf
xor
shl
outs
jmp
repz
mov
lea
rcr
push
ja
loop
mov
test
fcom
xor
cmc
fwait
adc
rcr
cmps
data16
mov
jmp
or
or
jmp
js
pop
adc
sar
and
rcr
icebp
pop
scas
mov
(bad)
mov
and
pop
loopne
popa
cmc
xchg
rol
jle
add
pop
lock
mov
sub
mov
aad
add
jl
or
(bad)
push
lds
cmp
jne
icebp
cs
ror
into
add
fcom
adc
lds
jp
sbb
and
int
sahf
scas
lods
fnsave
xchg
les
mov
and
cmc
mov
mov
outs
sub
bound
stos
jmp
mov
mov
xchg
popa
stc
lahf
inc
aaa
into
sbb
rcl
add
push
mov
(bad)
sub
sub
aam
xlat
inc
inc
fs
xor
bswap
pop
imul
or
xor
loop
mov
call
movs
sbb
fmul
adc
mov
jle
rcl
cmp
out
cmp
dec
push
imul
sub
and
push
sahf
xchg
xchg
inc
pop
int3
pusha
test
and
jae
popf
push
pop
(bad)
xor
sahf
fisttp
jns
add
aad
jg
dec
shr
sbb
push
loop
call
jne
jl
clc
sbb
sub
lahf
push
mov
call
imul
pop
ds
jl
cli
and
bound
and
and
mov
or
or
repnz
call
lds
scas
mov
std
pop
iret
xchg
sub
dec
neg
mov
leave
cmp
(bad)
out
push
fwait
pop
jg
dec
mov
mov
adc
call
ret
shr
pop
mov
hlt
dec
push
std
movzx
cmp
xor
sub
push
mov
and
test
test
cli
dec
cmp
mov
int3
mov
retf
push
loope
sahf
sahf
and
pop
mov
mov
push
jne
(bad)
mov
pop
sub
and
mov
les
adc
mov
sbb
jbe
cmp
mov
shl
and
sub
scas
retf
mov
enter
push
leave
sbb
xchg
cli
test
cmps
push
cmp
or
out
out
and
adc
adc
lods
inc
jp
dec
call
imul
mov
cmps
in
xor
fnstcw
stos
sar
inc
lds
shl
lahf
pop
mov
push
add
or
sbb
loopne
arpl
out
fsubr
pop
push
fcom
pop
push
push
adc
push
je
outs
sbb
pusha
cs
sbb
dec
fcom
loopne
sub
xchg
xor
enter
mov
or
sti
mov
andps
cli
call
ret
fisub
adc
fild
jbe
idiv
fsub
jo
loopne
push
rcl
add
scas
cmp
and
pop
mov
fwait
cmp
in
ja
add
jae
sahf
and
imul
dec
stc
xchg
ror
fild
paddd
mov
xor
lods
popf
ss
push
cmc
xlat
fisub
mov
sub
mov
je
and
cmp
dec
dec
aam
mov
and
(bad)
jbe
cli
mov
inc
je
fmul
cld
and
cmp
js
push
stc
retf
or
aam
push
mov
mov
pusha
cli
sar
cmps
cmp
mov
int3
(bad)
imul
mov
cmp
jmp
(bad)
out
out
sub
jo
loop
lds
or
pop
jb
jne
out
pop
lahf
idiv
div
push
retf
xor
add
imul
aad
stos
lock
ret
inc
enter
into
adc
das
xor
and
in
push
jns
or
sub
cmp
push
mov
icebp
je
shl
mov
ss
push
lds
nop
dec
mov
adc
lods
icebp
cmp
mov
jne
lods
jge
and
dec
mov
retf
test
mov
movs
sbb
xchg
xor
sbb
lock
adc
and
dec
sub
mov
in
pusha
push
mov
sbb
and
sbb
mov
or
test
cmc
push
cmp
stc
dec
je
test
jle
mov
xor
fcmovnb
shr
cmp
cmps
(bad)
lods
sub
movs
hlt
jecxz
imul
stos
push
xchg
into
xchg
sub
es
fidivr
jl
mov
pop
push
cmp
addr16
cs
adc
rol
stos
and
inc
xor
or
pop
pop
std
mov
sti
inc
sbb
mov
addr16
das
mov
jecxz
push
mov
mov
(bad)
dec
jo
inc
mov
std
scas
pop
mov
mov
outs
xor
adc
outs
pop
test
inc
lock
pop
jne
add
push
sub
xchg
or
xor
inc
into
cmp
into
add
idiv
(bad)
lods
nop
in
push
adc
enter
repz
mov
jmp
enter
push
arpl
retf
xlat
out
pop
into
dec
xlat
xor
mov
inc
jecxz
inc
scas
(bad)
cmp
loop
ss
mov
jp
xor
adc
push
dec
fucomi
xchg
cld
popa
test
(bad)
ficom
pop
sbb
mov
pop
add
ja
mov
add
scas
add
dec
es
mov
jp
xchg
scas
push
pop
mov
retf
test
scas
push
pop
fcomi
cmp
dec
mov
adc
call
xor
and
outs
es
mov
out
outs
dec
inc
repnz
pop
mov
pop
push
sahf
cmp
rcr
mov
xlat
sub
adc
jno
mov
sub
push
imul
ja
ss
mov
fist
cs
sbb
and
jge
mov
int3
xor
mov
and
outs
sub
retf
inc
mov
mov
dec
jge
iret
cmc
int3
sub
inc
lahf
je
hlt
pop
inc
fcomp
pop
cs
(bad)
lahf
mov
mov
std
jnp
loope
xchg
sahf
xor
adc
push
out
jg
or
adc
push
sub
mov
cmp
jnp
adc
adc
hlt
mov
mov
(bad)
xchg
mov
out
push
ret
cmp
into
ret
pop
jb
sub
or
adc
movs
sbb
(bad)
repz
mov
or
test
cwde
xor
adc
lahf
cli
sti
out
shl
xchg
cmp
adc
jecxz
cmp
(bad)
(bad)
int3
xor
movs
pushf
fbld
fdiv
lock
adc
icebp
in
sub
jge
popa
and
xchg
xchg
ja
and
shl
sub
fcmovu
enter
(bad)
fstp
dec
nop
(bad)
jle
dec
or
in
leave
dec
push
and
dec
jne
cmps
xchg
in
rol
jnp
lods
ja
ret
call
and
clc
add
mov
bound
cs
stos
fimul
adc
jno
lods
push
inc
push
sbb
(bad)
dec
or
data16
rcl
test
sub
ret
ins
mov
jmp
mov
js
not
mov
into
lea
mov
stos
sbb
aad
add
jge
pop
inc
out
push
sub
lods
retf
fs
adc
shl
popf
addr16
sub
test
mov
lea
xchg
in
mov
adc
pop
push
pop
inc
jl
mov
xor
cld
add
dec
mov
scas
xchg
mov
js
outs
stc
xchg
push
dec
popa
inc
ins
cmc
call
add
es
mov
bound
mov
pop
aam
out
repz
mov
mov
dec
call
cmp
pop
push
pop
int3
dec
retf
jo
stos
adc
inc
inc
inc
pusha
add
sub
xor
sub
xor
jl
(bad)
and
mov
cmp
js
arpl
arpl
pop
inc
push
push
test
xor
cld
in
cmp
cmc
retf
mov
es
lea
pop
fwait
push
lods
xor
in
xchg
mul
adc
push
ror
xchg
jne
mov
aad
and
and
add
jle
and
ror
inc
push
ins
in
sar
mov
push
out
cmp
shr
inc
sbb
or
aaa
sbb
jg
mov
mov
pop
lods
pop
xchg
icebp
jecxz
out
sbb
pop
xchg
pop
sti
fwait
dec
jg
pop
adc
cmc
repz
lods
stc
and
leave
les
inc
in
pushf
mov
jne
mov
mov
jl
inc
add
fscale
les
add
cmp
jmp
neg
jb
add
dec
test
adc
mov
jae
push
fld
nop
clc
push
and
cmp
mov
dec
test
stc
xor
mov
sub
and
mov
dec
mov
mov
out
sahf
xor
mov
lock
and
add
out
jl
lods
hlt
clc
dec
xchg
lock
mov
mov
ins
or
sub
rcr
mov
in
xor
push
dec
nop
add
scas
repz
sbb
add
outs
cmps
xor
aam
mov
xlat
push
std
pop
cmp
inc
stos
mov
cmp
ss
pop
adc
xchg
sbb
movs
gs
xchg
cmp
xchg
dec
jb
dec
pxor
add
or
jp
cld
ret
inc
rep
in
call
jge
shl
out
mov
rep
or
jmp
scas
push
in
pushf
ins
scas
mov
inc
pushw
gs
dec
mov
cdq
in
mov
repnz
clc
mov
or
(bad)
adc
pop
push
cld
iret
out
cmp
loopne
stc
std
(bad)
loope
in
pop
xchg
fsub
mov
jp
int
fidiv
xchg
div
imul
fist
cmp
fs
pop
or
ret
sub
int3
mov
stos
pop
jmp
mov
and
mov
mov
sub
or
int
sub
pusha
dec
push
int
rcr
pop
int3
adc
and
lods
retf
push
pushf
add
inc
(bad)
dec
int3
mov
inc
and
clc
sbb
mov
push
jp
jae
loopne
ficom
xchg
xchg
mov
cwde
xor
add
sbb
cmp
out
ins
repz
dec
fst
add
xchg
dec
movs
mov
rcl
dec
clc
inc
int
lahf
enter
xlat
sbb
mov
js
cwde
mov
call
mov
or
sbb
ds
add
(bad)
cmps
push
pop
jb
pop
sar
xchg
cwde
pop
inc
pop
xchg
dec
aad
psadbw
es
jae
(bad)
repz
fwait
mov
jbe
sub
mov
adc
mov
cmp
(bad)
push
in
pusha
jns
retf
rcr
sub
shl
leave
mov
and
loopne
pop
ror
test
adc
xlat
dec
lock
xchg
retf
pop
retf
or
repz
ins
stc
fsubr
cmps
pop
je
and
pop
ds
(bad)
fadd
adc
inc
or
ins
popf
les
mov
ret
pop
xor
leave
push
pop
movs
repnz
jno
addr16
jecxz
mov
push
inc
jns
xchg
xchg
scas
lea
ss
fcmovnu
lea
xor
or
push
dec
or
mov
mov
or
mov
fdiv
(bad)
mov
sbb
mov
and
sub
push
mov
aad
cmp
imul
movs
aas
or
adc
dec
xor
ja
fld
push
loop
ror
adc
add
(bad)
fucomi
shl
xor
inc
jg
not
imul
into
xchg
std
sbb
inc
sub
dec
or
mov
stos
shr
stos
icebp
adc
add
shr
mov
fwait
js
test
(bad)
sar
xor
outs
lock
and
adc
push
outs
dec
int3
lahf
aam
push
mov
xor
cmp
push
mov
jecxz
cmp
in
mov
sbb
adc
lods
or
arpl
out
xor
cs
nop
mov
stc
sub
pop
cmc
mov
int
bound
pop
jecxz
pop
call
or
sub
mov
loop
xor
mov
cmp
dec
push
dec
or
mov
push
sbb
stc
mov
mov
jb
repnz
out
pop
add
jo
and
fwait
add
mov
cmp
mov
std
adc
aad
mov
fstp
mov
inc
aad
jecxz
retf
pop
imul
pop
push
sub
xchg
(bad)
jnp
mov
xor
mov
adc
sbb
loope
sbb
daa
jp
inc
push
inc
dec
push
xchg
js
imul
lods
cmps
pop
stos
lods
aaa
fwait
mov
repnz
cmps
outs
in
sub
push
inc
push
xor
jb
mov
aaa
push
adc
pop
dec
dec
cmc
in
cmp
xchg
scas
call
sbb
data16
int
sub
mov
fld
and
push
loop
or
mov
and
and
cmp
inc
pop
mov
lahf
sbb
mov
inc
sub
cmp
les
mov
pusha
adc
jle
add
pop
or
pop
enter
shl
pop
es
jecxz
imul
js
jmp
mov
dec
adc
xor
pop
mov
fdivr
movs
cdq
pop
mov
xor
rcr
push
mov
nop
into
lods
sbb
clc
and
cmc
div
mov
jmp
je
or
iret
push
pop
cmps
push
push
repz
scas
scas
xchg
cli
lock
pop
retf
xor
add
cmp
xor
fcomp
iret
push
fwait
mul
mov
push
bnd
mov
int
inc
sbb
sbb
or
test
push
std
ins
ret
jno
push
cmp
mov
sbb
pushf
scas
arpl
fidiv
mov
ja
jmp
push
jns
mov
jmp
sbb
xlat
mov
or
pop
jp
iret
or
push
cmp
out
cmp
outs
push
inc
lods
out
sub
adc
mov
xlat
mov
jnp
fdivr
icebp
push
jle
pop
scas
sub
jecxz
jmp
out
inc
sbb
xacquire
mov
xchg
xor
jp
pop
mov
nop
sub
aas
jne
sar
adc
mov
gs
mov
in
pop
shl
jp
jae
mov
or
mov
pop
lds
popa
imul
mov
sbb
xchg
xchg
pop
and
xchg
daa
adc
in
cmc
push
pushf
stos
push
pop
or
(bad)
ficom
push
push
xchg
jp
push
inc
cmp
mov
out
fs
xchg
fnsave
adc
add
imul
call
inc
mov
push
lds
adc
xchg
hlt
ficom
(bad)
stc
push
inc
outs
mov
fidivr
dec
dec
repnz
ins
cmp
in
jl
xchg
outs
inc
and
sbb
cdq
inc
sbb
jns
cmps
cmps
(bad)
sahf
fdivr
movs
jp
jmp
inc
je
mov
int
jmp
cmp
jg
cmp
push
lahf
sti
cmp
and
push
and
and
sar
mov
mov
jno
jp
xchg
xchg
sbb
cmps
jl
push
mov
dec
and
inc
gs
push
fistp
mov
and
or
jno
in
or
inc
mov
push
aam
or
popa
sti
fsubr
scas
push
jmp
in
out
daa
push
das
pop
dec
pop
xchg
push
dec
test
cmc
scas
repz
add
ret
mov
mov
retf
test
sub
sbb
icebp
rol
sar
push
loopne
test
in
cmp
sub
out
cmps
jg
aam
retf
add
push
or
inc
in
push
and
push
adc
imul
xchg
push
jne
cmp
cmp
sbb
inc
je
imul
addr16
mov
fisub
inc
mov
dec
sub
add
add
outs
(bad)
lea
pop
into
or
std
test
pop
out
lahf
fwait
dec
fisttp
sbb
adc
xchg
pop
lock
mov
dec
jecxz
mov
ret
sub
out
xchg
cdq
ss
cmp
jae
sar
fild
loope
dec
cdq
pop
ins
fcmovne
test
pop
push
pushf
sahf
jle
xchg
push
pop
enter
mov
jae
into
lea
xor
fidiv
mov
push
push
xchg
fidiv
(bad)
fcmovb
shl
xchg
sub
(bad)
dec
cmp
sahf
add
cmps
mov
mov
(bad)
mov
pushf
cld
xor
test
adc
retf
stos
xor
xor
or
sbb
jne
std
imul
(bad)
sbb
push
mov
daa
ins
mov
pop
arpl
fcmovbe
pop
(bad)
cdq
js
scas
inc
mov
cmps
inc
mov
xlat
and
(bad)
push
in
jmp
lods
je
ins
dec
mov
test
cmp
jmp
mov
loopne
push
int3
pop
cdq
jmp
call
arpl
aas
cli
push
lahf
cmp
and
cmp
ins
pop
stc
mov
das
mov
fmul
mov
jmp
call
cmp
(bad)
shr
popf
cmp
ja
leave
xor
pop
enter
cmp
adc
fst
addr16
clc
sub
mov
sub
or
xchg
adc
clc
and
xchg
or
mov
fisub
xlat
test
cmps
push
push
mov
add
cmc
mov
mov
nop
adc
movs
sbb
movs
outs
lahf
out
sub
jnp
adc
in
lods
ja
hlt
jg
sub
mov
and
xchg
and
pop
sub
js
xor
xchg
gs
push
lahf
leave
ror
push
das
jp
dec
or
dec
fst
lea
mov
call
repnz
add
and
hlt
sbb
xor
jae
sub
out
inc
inc
ins
test
sbb
mov
mov
mov
loope
push
and
jns
stos
mov
(bad)
xor
add
repz
fsubr
jmp
mov
jl
sub
inc
aas
sahf
push
lods
jle
xchg
dec
or
sbb
jle
cmp
cmp
ret
stos
xchg
xor
out
stos
fld
outs
lea
repnz
pop
sahf
mov
adc
in
push
retf
jmp
and
sahf
aam
jmp
inc
lods
pop
dec
pop
mov
aas
jae
or
popf
mov
(bad)
outs
push
and
mov
xor
push
in
shl
rcl
shl
pop
(bad)
pushf
sbb
mov
lods
mov
push
cmp
cmps
ins
cmps
or
stc
(bad)
push
push
iret
aas
mov
xchg
(bad)
fwait
or
out
shl
cdq
push
dec
fst
push
mov
dec
pushf
dec
inc
cmp
movs
fst
push
mov
shl
test
pop
inc
jg
cmc
mov
je
jae
addr16
cmp
jl
ffree
mov
sub
cs
scas
(bad)
fsubr
xchg
mov
mov
jmp
repz
cmp
popa
fnstcw
fucomp
inc
out
cmp
imul
pop
jo
inc
aaa
xor
out
mov
dec
and
stos
addr16
inc
retf
iret
jb
add
fsub
test
mov
jne
arpl
add
add
jo
cmp
mov
jl
jmp
shl
push
daa
jno
mov
inc
xor
outs
sub
sbb
sbb
mov
ins
call
hlt
sub
xchg
(bad)
shl
mov
les
jns
push
pop
inc
push
xor
push
mov
out
add
inc
mov
outs
xchg
out
retf
push
xchg
test
(bad)
test
in
sbb
pop
and
idiv
imul
sub
pop
cmp
xchg
xor
inc
js
adc
sub
xchg
loope
pop
scas
mov
push
push
movs
(bad)
dec
mov
sbb
icebp
fisttp
push
sbb
leave
pushf
sub
je
mov
(bad)
in
mov
fs
jmp
add
fld
daa
xor
ror
mov
inc
sbb
mov
xor
pop
mov
sahf
dec
ins
mov
add
dec
ins
pop
xor
lods
jb
mov
inc
lock
fnstenv
sub
sub
int
mov
sub
inc
xchg
add
lods
fiadd
mov
test
fwait
push
lds
ins
mov
lahf
movs
sub
and
and
in
sub
mov
sub
les
in
mov
and
pop
js
pop
push
sub
gs
adc
mov
loope
jp
aad
scas
imul
xor
ror
adc
(bad)
adc
inc
sub
shl
cmc
mov
lods
or
or
jb
in
repz
cmp
and
push
or
fiadd
adc
mov
lds
aad
cmpxchg
dec
inc
int
rcr
mul
xchg
clc
mov
or
sbb
test
ins
das
and
and
or
(bad)
pop
xchg
clc
ja
xchg
ss
int
fucomip
test
inc
or
and
mov
pop
in
and
push
push
inc
xchg
cmc
mov
mov
mov
fadd
jns
stos
shl
and
xor
xchg
jno
aad
push
push
mov
ins
sahf
sub
push
add
retf
imul
cmps
cmps
mov
mov
mov
test
shr
xor
xchg
sub
movs
inc
inc
sub
push
pop
cmp
out
pushf
cwde
(bad)
outs
cwde
inc
es
inc
ffreep
and
mov
jecxz
outs
sahf
adc
cwde
inc
sub
jg
sbb
inc
outs
jg
into
scas
test
mul
fiadd
xchg
(bad)
repnz
jns
fst
mov
mov
sub
stc
lds
dec
jo
fs
leave
fnstsw
pxor
sbb
test
mov
pusha
lahf
int3
ror
fneni(8087
bnd
adc
xchg
xor
xchg
dec
int3
mov
adc
daa
and
or
sub
repnz
sub
pop
mov
in
jae
bound
hlt
mov
mov
movs
into
mov
call
cwde
pop
mov
cs
out
pop
or
cld
cli
loope
fmul
and
ss
jge
dec
shl
fistp
aam
or
repz
pop
enter
mov
xor
neg
fiadd
cli
outs
in
std
(bad)
fiadd
pop
push
div
stc
pop
cmp
sbb
into
inc
leave
lods
in
adc
pusha
and
leave
cmp
js
lock
nop
push
sub
or
inc
or
jb
dec
lds
mov
mov
pop
jmp
(bad)
std
test
leave
popa
add
hlt
ja
sahf
inc
and
sbb
sti
sbb
ins
lea
lahf
mov
(bad)
rcl
push
sar
mov
or
mov
in
aad
or
cwde
popa
push
sbb
cdq
adc
and
imul
loope
shl
mov
and
xlat
int
mov
and
xor
outs
sti
adc
sbb
out
or
iret
sub
inc
cmp
add
jns
xor
mov
scas
out
addr16
scas
out
add
sub
pop
mul
rcl
jmp
mov
cmp
pop
loop
xor
and
mov
dec
or
mov
arpl
jmp
jecxz
sbb
scas
test
push
inc
es
repnz
and
sub
fmul
aas
xor
loopne
mov
pop
xchg
push
inc
jg
push
ror
xchg
lods
sbb
ss
jns
clc
retf
mov
xchg
pop
pop
ins
inc
nop
bound
or
xor
cmc
mov
movs
bound
call
iret
aas
popa
or
mov
add
push
retf
setae
scas
retf
or
jecxz
dec
add
test
in
popw
jg
lds
cmps
mov
fwait
(bad)
pop
adc
sahf
stos
loop
adc
inc
xchg
dec
test
in
ss
js
mov
repnz
hlt
mov
sbb
and
inc
clc
dec
xlat
or
or
mov
pop
lods
dec
leave
or
movs
or
inc
ja
adc
loopne
dec
sar
add
mov
adc
addr16
test
loop
inc
inc
ja
rol
and
push
dec
les
pop
sub
into
pop
sub
mov
mov
ja
push
mov
mov
ficom
in
mov
in
leave
and
data16
popf
gs
ins
in
xchg
loope
in
outs
jmp
int3
adc
or
adc
retf
or
adc
add
mov
in
mov
imul
test
inc
gs
xor
pop
mov
xor
cwde
dec
jmp
add
mov
or
test
ins
adc
in
pop
mov
mov
cmp
leave
fst
jg
repz
jecxz
and
inc
xlat
int
sub
cld
xor
sar
mov
sbb
xchg
adc
pop
iret
(bad)
push
loope
ret
add
cwde
mov
aam
cmp
inc
push
fbld
ins
jns
or
sub
sbb
or
inc
inc
ret
cmp
xor
call
adc
mov
jmp
mov
xlat
add
jns
mov
shl
sbb
xchg
xchg
dec
pop
or
sub
dec
push
xor
sbb
test
jge
and
in
jg
xchg
add
mov
cmp
pushf
or
mov
fcom
adc
(bad)
pop
lds
mov
iret
jmp
jns
imul
aaa
ss
cmps
(bad)
xchg
(bad)
push
scas
xor
push
push
jae
loope
jb
add
(bad)
sbb
mov
push
cmp
iret
outs
lds
or
enter
out
and
cdq
sub
pop
mov
lods
pop
inc
data16
push
test
jbe
lock
lds
mov
cmps
cmp
(bad)
icebp
mov
or
mov
cmp
sbb
retf
adc
shr
stos
push
aam
cmp
(bad)
pop
bound
jbe
leave
push
mov
lods
mov
call
jns
jmp
inc
xlat
mov
and
aad
mov
mov
lea
jecxz
dec
lock
(bad)
pop
fsub
idiv
jno
mov
mov
jns
jns
and
jae
mov
pop
or
ds
mov
mov
add
sbb
rcl
dec
or
clc
and
push
stc
or
ficomp
mov
popa
xor
ins
mov
push
mov
xor
outs
mov
retf
aad
pop
adc
mov
pop
inc
xchg
xchg
jno
ja
jge
leave
mov
movs
loope
lods
mov
pop
(bad)
fstp
ins
js
mov
mov
mov
adc
clc
jns
mov
out
jne
inc
dec
mov
loope
push
push
out
in
cmp
das
or
jp
jns
jg
dec
or
cmp
adc
es
jp
jo
je
xor
loopne
push
in
inc
cmps
xchg
scas
call
ret
mov
adc
out
clc
and
cld
rol
inc
call
jnp
inc
test
adc
loope
xchg
push
xchg
mov
(bad)
shl
loope
xchg
loop
ret
out
pop
and
lods
lds
and
rcr
cdq
pop
repz
push
test
fsubr
cmp
int
fcomp
push
movs
outs
ror
add
popf
fwait
pop
lea
cmp
imul
add
shr
mov
mov
and
pop
sbb
jb
dec
inc
inc
fisttp
jge
add
jo
cdq
js
loopne
adc
mov
aad
push
cmc
sub
in
jg
adc
ret
fidivr
or
cmp
mov
cmovs
lods
mov
js
rcr
xor
ins
rcl
stos
mov
push
mov
sbb
sub
mov
mov
test
clc
loope
xor
jnp
repnz
mov
and
repz
retf
call
mov
dec
sub
ss
cmp
mov
popa
mov
fiadd
xchg
jmp
hlt
outs
add
and
push
and
sbb
sbb
xchg
(bad)
fbld
and
adc
loope
xchg
cmp
jge
loop
lods
dec
adc
int3
jl
cmp
retf
(bad)
gs
lds
jmp
imul
xchg
test
call
sbb
into
pop
xchg
test
movs
mov
stos
dec
cmp
jmp
push
scas
addr16
cmp
imul
jae
pop
mov
add
jo
mov
mov
ret
pop
lahf
jns
sbb
repz
sti
(bad)
(bad)
out
push
into
(bad)
enter
stc
lods
xchg
pushf
sub
(bad)
cmp
mov
aad
and
push
test
lea
into
adc
mov
and
fnstcw
movs
stos
jb
or
in
sbb
xor
dec
jbe
fs
adc
xor
jg
ret
and
pop
loopne
xchg
mov
lahf
into
call
or
sti
jmp
nop
aaa
test
xor
push
xchg
sub
sbb
or
mov
loope
out
pop
fmulp
mov
stc
loopne
retf
scas
xor
dec
pushf
out
jl
dec
(bad)
stc
jo
dec
stos
fwait
mov
dec
jle
lahf
xor
pop
mov
jbe
jb
out
adc
xlat
mov
push
stc
cmps
pusha
xor
xchg
sti
leave
daa
stos
fwait
inc
scas
or
cs
inc
nop
mov
ror
dec
es
sbb
add
push
mov
mov
jb
les
popa
push
neg
popa
pop
(bad)
popf
stos
lahf
sbb
dec
lods
or
xchg
movs
xor
fild
xchg
inc
lods
dec
aad
mov
sub
test
xchg
inc
ss
fcomp
(bad)
cli
fcmove
aaa
inc
cli
cmp
cld
fld
and
inc
pusha
xchg
and
shr
sbb
sti
paddw
or
mov
int3
inc
push
retf
sbb
sub
jne
pop
add
call
int
icebp
loope
push
jp
outs
sbb
pushf
aam
xchg
shl
inc
jbe
jo
test
inc
and
and
(bad)
sar
add
push
push
mov
xchg
add
inc
xchg
pop
mov
fld
sbb
mov
xchg
or
ss
das
shl
cmp
fistp
mov
or
sub
dec
push
stos
add
mov
add
jnp
lahf
inc
fcom
jge
mov
imul
gs
test
jmp
mov
in
sub
add
pop
stos
iret
pop
jo
pop
int
cmp
mov
and
fucom
sar
(bad)
sahf
sub
sbb
pop
inc
lock
jae
and
mov
(bad)
xchg
sub
inc
mov
(bad)
fidivr
mov
cmp
push
sbb
and
fxch
enter
repnz
je
xor
(bad)
scas
outs
movs
cmps
pop
add
xchg
and
movs
cmc
inc
mov
cs
or
jecxz
arpl
add
jne
retf
sbb
jp
inc
mov
add
sti
jns
xor
pushf
sub
ja
bound
inc
lods
loopne
xor
mov
retf
sub
imul
adc
dec
das
and
ss
cmp
rcr
push
cli
(bad)
pop
push
push
pop
dec
cld
ins
das
add
inc
int
pushaw
cli
repz
add
retf
gs
call
add
jecxz
loope
stos
into
call
push
dec
jge
jmp
pushf
movs
mov
mov
aas
add
shl
mov
mov
ja
xchg
out
icebp
iret
and
enter
mov
(bad)
out
pop
ffreep
icebp
div
jne
add
sub
inc
inc
nop
mov
lock
mov
sar
rcr
add
pop
loop
sbb
in
pop
xchg
mov
adc
lahf
pop
jbe
fcmovbe
frstor
mov
and
mov
dec
and
push
sahf
mov
bound
dec
(bad)
push
pop
adc
dec
sbb
inc
pop
(bad)
in
or
mov
xchg
or
lea
or
dec
rcr
test
ins
add
mov
shl
les
les
or
fisttp
js
add
xor
jno
pop
or
xchg
cmp
sbb
push
loopne
dec
inc
mov
shl
fnstcw
xor
outs
cli
lahf
jmp
lea
add
in
in
jb
jecxz
fld
dec
pusha
push
(bad)
push
inc
or
iret
bound
jb
pop
jecxz
mov
jecxz
ins
sti
pop
cmp
test
sbb
retf
add
aad
or
into
and
dec
pop
js
lea
aad
push
or
inc
ss
inc
mov
adc
fadd
shl
xchg
mov
(bad)
aaa
jl
inc
mov
cmps
add
sbb
aaa
jns
mov
je
inc
pusha
cmps
mov
add
cmp
sub
andnps
std
inc
push
das
lods
outs
xor
adc
adc
scas
jp
rcr
and
mov
xor
rcr
and
pop
std
push
push
xor
jmp
stos
rcr
mov
out
or
push
sub
ds
js
arpl
sub
jmp
ds
iret
out
jae
adc
push
ja
jne
(bad)
in
lea
pop
outs
xor
or
cmp
push
pop
xor
clc
push
in
mov
push
ja
inc
jne
jns
in
xor
pop
mov
dec
mov
stos
push
popa
jnp
(bad)
push
cmp
call
inc
sub
or
push
and
mov
mov
push
fwait
mov
sub
sbb
push
inc
cs
pop
fstp
loope
ins
push
jmp
movs
shl
push
call
sbb
inc
mov
dec
mov
xchg
adc
out
aas
aam
out
mov
xchg
pop
fsubr
cld
xor
mov
dec
test
(bad)
sbb
mov
fidiv
fisubr
or
js
mov
aas
iret
fidiv
add
pushf
mov
icebp
retf
sbb
mov
loope
lds
(bad)
leave
jg
jo
movs
dec
pusha
inc
mov
(bad)
call
mov
push
dec
mov
ret
dec
dec
jo
ja
xlat
test
in
inc
jnp
fbld
pop
sbb
ficomp
shr
pop
xor
mov
ret
icebp
les
hlt
pop
mov
jg
dec
daa
in
pushf
pop
push
add
in
xor
in
cmp
lock
(bad)
(bad)
push
mov
iret
cmp
repz
ja
mov
adc
and
push
lds
movs
push
mov
and
cmps
into
mov
inc
fldenv
xor
(bad)
add
sar
int3
xor
pop
mov
cmps
push
xchg
sbb
inc
mov
fcomp
mov
dec
sbb
mov
mov
cwde
stos
cwde
sti
pop
or
outs
pusha
jmp
lds
cmc
icebp
sti
sti
jae
push
lods
dec
loop
sub
fwait
cmp
mov
ret
ds
add
and
das
sub
jbe
inc
fsub
pop
and
pop
dec
outs
stc
inc
pop
pop
sub
jp
push
fsubr
stos
sub
jnp
sub
adc
cmp
rol
fwait
sub
jg
or
in
cmp
(bad)
xlat
(bad)
jno
pop
lahf
out
fistp
hlt
nop
icebp
call
xchg
fwait
fs
movs
outs
jbe
fild
pusha
adc
mov
or
add
inc
sbb
pop
mov
mov
pushf
mov
xor
jbe
gs
jb
into
cmp
fisub
mov
pop
mov
adc
aaa
jo
pop
popf
jae
retf
pop
pop
jne
leave
aad
mov
popa
sub
in
and
lahf
data16
xchg
inc
xor
int
dec
mov
sub
loopne
inc
outs
xchg
pop
mov
cli
popa
or
sar
push
stos
sub
cmps
sub
loope
mov
dec
ficom
xchg
fnstenv
mov
adc
fs
dec
mov
mov
jl
popa
fdivr
in
mov
sub
sub
frstor
pop
cmp
je
pop
pop
gs
in
ja
test
sbb
daa
nop
sub
jmp
pop
or
fwait
popf
je
add
cdq
fs
push
sbb
inc
lods
mov
psubusw
xor
nop
test
push
psraw
ror
cdq
add
adc
dec
jg
pop
call
inc
rol
xchg
out
aam
and
and
adc
(bad)
int3
xor
shl
cmp
xchg
sbb
pop
mov
push
mov
xchg
pushf
push
mov
dec
sub
fisub
fld
or
popa
mov
inc
pop
push
cld
xchg
test
cs
xchg
jmp
imul
int3
xchg
hlt
push
xor
retf
ins
jge
ja
movs
pop
xor
jae
mov
or
lods
lds
adc
push
out
repz
fbld
sbb
add
push
dec
jge
mov
mov
xor
out
fidiv
add
les
out
movs
mov
fwait
jbe
jp
cmps
rcl
lds
lods
or
fsub
add
push
inc
shl
inc
aas
push
and
push
sub
pop
mov
mov
ror
sti
sti
jno
shl
or
inc
dec
ret
ret
(bad)
ja
outs
mov
xor
in
les
cdq
int3
stc
pop
sub
mov
jo
inc
lods
mov
mov
mov
mov
pop
mov
loopne
mov
jmp
jmp
test
into
sbb
mov
test
push
lahf
add
jae
and
enter
jo
adc
mov
pop
jnp
jle
add
fnstcw
and
push
push
test
rcl
inc
xchg
in
jae
mov
rcl
dec
inc
xchg
stos
push
add
mov
xchg
jmp
and
adc
enter
fsubr
or
cld
dec
je
or
push
adc
imul
fldenv
outs
clc
ds
jmp
out
int
ins
cli
inc
mov
xchg
sbb
xchg
inc
adc
sbb
sahf
xchg
xor
ds
aad
je
(bad)
cdq
aam
(bad)
mov
mov
cdq
inc
sbb
call
lock
inc
mov
mov
cmp
mov
xor
pop
or
cli
ins
mov
(bad)
sar
mov
cmc
and
jl
add
add
cmps
or
push
in
test
pop
leave
mov
pop
gs
retf
push
clc
adc
pop
dec
lock
cdq
(bad)
sti
call
fldcw
add
daa
xchg
jle
out
jg
ret
mov
stos
add
stc
cli
jns
(bad)
xchg
movs
add
add
fs
add
pop
xor
(bad)
cld
jo
retf
leave
pushf
and
fst
jge
inc
out
or
jle
sbb
pop
pop
mov
fiadd
retf
sbb
loope
push
cmp
and
es
sub
cwde
test
pop
cmp
pop
sub
mov
push
xor
jae
movs
inc
add
push
fsubr
pop
sub
cmps
cmp
jl
jg
mov
pop
sub
out
add
or
sahf
sti
test
jmp
int3
inc
mov
loop
jo
imul
jl
cs
pop
data16
inc
addr16
into
pushf
sar
and
bound
push
push
sbb
push
jge
das
xor
cmp
call
es
popa
(bad)
pop
in
and
sub
xor
loop
dec
aam
cmp
ja
ins
mov
es
std
outs
cmp
cs
mov
xor
add
mov
push
pop
xchg
jmp
jns
aaa
mov
or
xchg
and
dec
repz
call
cmps
push
test
popa
or
sbb
mov
test
imul
mov
push
ror
xor
push
mov
ss
or
jns
hlt
arpl
test
out
iret
das
aaa
sub
xchg
or
out
nop
ds
or
or
xchg
cmp
mov
push
out
sub
test
pop
pop
int
dec
ja
int
add
stc
and
cli
mov
xor
xor
xchg
(bad)
lock
sbb
aaa
mov
push
arpl
ds
cmp
cli
inc
push
dec
jbe
retf
iret
shl
cmc
out
push
shl
pop
jo
sub
or
out
(bad)
mov
sub
or
nop
ins
dec
jge
xchg
jp
jl
mov
jbe
inc
or
push
mov
mov
mov
sahf
(bad)
bound
ror
mov
dec
xchg
add
mov
loopne
jmp
push
(bad)
and
jp
add
and
scas
lahf
cwde
int3
das
cmp
fldenv
add
fcmovnu
mov
shr
or
movs
fcmovnb
dec
xor
aad
(bad)
push
add
sub
pushf
sub
and
and
movs
push
fdivrp
gs
outs
rcr
inc
inc
push
imul
xor
arpl
pop
sub
mov
hlt
imul
jns
mov
jb
ret
push
or
sub
sub
pop
xor
add
jg
ds
mov
push
inc
lds
jne
xlat
addr16
sub
loope
xchg
test
inc
(bad)
sub
inc
add
mov
test
int3
test
add
test
loope
jo
mov
push
les
jbe
pop
test
lock
mov
push
mov
emms
dec
pop
inc
hlt
adc
mov
movs
(bad)
mov
xchg
inc
lea
in
loop
mov
inc
mov
and
rol
mov
out
movs
push
or
sbb
shl
(bad)
fsub
ja
cmp
mov
pop
jge
mov
ret
adc
or
pusha
test
fcomip
movs
adc
ins
test
loop
je
clc
shl
out
jnp
jl
js
mov
jmp
inc
retf
aam
dec
fidiv
jmp
push
aaa
popa
fcomp
jne
cld
rcl
jecxz
pop
mov
adc
sub
sub
sbb
xchg
js
pop
mov
popa
pop
add
scas
jmp
enter
xchg
cmp
neg
dec
(bad)
push
inc
sbb
cli
jbe
xor
shr
dec
jb
pop
mov
imul
xor
in
stos
sbb
clc
cmp
dec
sub
xchg
out
mov
adc
mov
cmp
sti
mov
xor
lock
scas
vcvtsi2ss
mov
rcl
fnsave
out
push
rcr
ret
pop
xchg
pop
sbb
xor
nop
lods
mov
movs
scas
mov
pop
adc
jne
movs
xrelease
call
add
outs
cmp
fidiv
out
popa
mov
clc
dec
dec
call
push
inc
sbb
fcmovnbe
sbb
cmps
ror
push
scas
cmp
xor
(bad)
pop
scas
mov
or
imul
fisttp
lods
nop
pop
or
popf
sub
mov
jmp
push
pop
push
jo
outs
out
(bad)
icebp
pop
push
xchg
dec
or
fnsetpm(287
leave
dec
add
and
gs
out
adc
xor
dec
xchg
(bad)
sbb
push
lods
add
mov
clc
push
(bad)
pop
ja
test
push
mov
sub
cmps
adc
push
adc
enter
js
sub
test
arpl
and
loope
popa
or
push
push
push
mov
xchg
dec
jg
fcomip
xor
jno
sub
data16
ror
in
js
je
retf
imul
icebp
aad
out
ins
pusha
ins
mov
push
adc
adc
push
int3
int3
cli
push
sbb
adc
push
add
imul
or
push
jecxz
pop
nop
stc
outs
popa
jo
mov
fimul
dec
int
mov
mov
push
lds
int
int
jb
add
jge
push
jl
xchg
sbb
call
sbb
jmp
inc
ja
stos
jecxz
jb
test
pop
je
in
mov
cmp
jmp
add
adc
mov
dec
(bad)
jb
jecxz
fs
xor
xchg
push
xor
lea
adc
push
js
rcl
adc
mov
lock
mov
mov
es
fwait
adc
xlat
jg
loop
push
test
xchg
js
jp
dec
ss
push
retf
int3
int3
add
(bad)
jo
pop
dec
jmp
outs
xchg
push
sub
ffree
jle
or
les
pop
fsubr
inc
(bad)
jo
sub
popf
xchg
mov
inc
cmp
xchg
cmps
pop
cmc
fadd
jmp
call
pop
cmc
fstp
not
and
stos
push
test
(bad)
in
cmp
push
and
lds
rcr
loop
xchg
inc
ds
enter
dec
pop
out
out
mov
sbb
hlt
dec
sub
pop
add
sub
popa
mov
sbb
imul
rol
popf
dec
xor
push
mov
sbb
fmul
iret
std
jno
dec
int3
jb
(bad)
add
loopne
mov
lock
adc
repz
jp
push
add
mov
stos
cdq
imul
or
loop
iret
hlt
push
add
icebp
xchg
inc
dec
out
push
jb
xor
call
out
push
out
call
pop
push
add
cdq
and
jl
ficomp
scas
xor
ficom
ins
clc
jb
adc
int3
adc
ins
aas
jmp
in
mov
out
push
push
ins
sub
jmp
cli
sti
fdivr
stos
mov
sub
fwait
out
test
dec
push
and
inc
jmp
mov
sbb
dec
dec
js
jbe
dec
xlat
dec
cmps
retf
mov
pop
scas
sahf
mov
dec
je
(bad)
repnz
retf
jge
push
bound
xor
mov
cmp
inc
xchg
sub
and
cmp
pop
fstp
inc
cmp
ins
mov
dec
cmp
inc
sub
fwait
out
add
gs
rcr
jmp
and
(bad)
movs
mov
push
dec
repz
les
dec
mov
cmp
or
push
retf
gs
sti
push
popa
scas
(bad)
inc
sub
loope
ror
push
inc
sbb
xchg
jmp
mov
or
stc
leave
sub
out
sahf
mov
xor
jo
jo
retf
sub
aas
iret
and
movs
scas
inc
jns
mov
pop
jp
into
dec
pop
stos
aaa
repz
jns
int3
pop
cli
jb
shl
scas
cmps
int3
push
jns
adc
pop
push
out
(bad)
not
push
inc
mov
lds
adc
push
cdq
fstp
or
mov
(bad)
jl
jae
and
test
jns
push
mov
and
into
fsubr
aaa
sub
ror
data16
scas
bswap
sub
dec
ins
xchg
aaa
int3
cmc
jp
jg
mov
loope
sub
dec
mov
clc
arpl
cmp
push
mov
mov
cmp
pop
jb
add
mov
cmp
loop
aas
jmp
scas
cmp
(bad)
inc
lea
movs
jbe
scas
push
mov
jo
dec
dec
jmp
mov
jb
push
loop
lahf
pop
or
mov
cs
inc
or
jbe
jo
std
jnp
out
aam
aas
outs
shl
fucomp
and
mov
movs
in
jo
inc
mov
xchg
xor
lds
push
pop
sbb
or
fnsave
mov
retf
sbb
xchg
add
seta
leave
stos
cdq
add
pusha
push
or
sbb
cli
dec
jmp
xlat
xchg
jb
fiadd
fst
inc
jbe
fdivr
xchg
push
popa
pop
inc
in
stos
fldcw
adc
fdiv
pop
jae
cli
repnz
mov
pushf
shl
mov
jp
sub
dec
pop
sub
fcom
mov
xlat
shl
sbb
ja
sub
outs
xchg
cs
cmp
popa
out
jns
push
outs
jl
pop
inc
test
das
leave
inc
sar
out
and
(bad)
jl
rol
std
ins
test
hlt
sbb
jmp
stc
jle
xor
int
and
pop
pop
scas
add
push
fcmove
pop
inc
adc
jbe
inc
pop
and
and
sub
xor
cmps
out
sbb
and
and
adc
mov
es
int3
jl
pushf
add
push
add
jg
popf
lods
sub
and
scas
stc
sbb
dec
xchg
cmp
ret
mov
xchg
or
test
jns
push
pop
ss
pop
mov
(bad)
adc
es
pusha
adc
aaa
inc
cmc
das
popa
stos
dec
pop
fwait
push
loope
out
mov
(bad)
out
dec
test
stos
aam
loop
adc
into
push
adc
xchg
dec
aaa
inc
jge
jmp
loope
xchg
scas
mov
mov
mov
cwde
xchg
add
mov
hlt
mov
pop
test
pop
sub
pop
mov
gs
hlt
ficomp
mov
fs
cmp
cdq
mov
push
cwde
addr16
add
mov
cmps
sbb
sub
dec
fcomi
je
jecxz
es
loopne
out
ins
sbb
xor
add
gs
jmp
add
and
jno
xchg
(bad)
jle
xchg
cmc
sbb
ins
repnz
pop
fidiv
dec
mov
sbb
aad
pop
jns
pop
mov
jmp
test
aaa
xor
and
call
std
and
repnz
js
ins
popf
push
mov
jle
fisttp
sbb
bound
je
pop
mov
test
cli
cmp
mov
ror
pushf
mov
jb
fst
pop
inc
imul
and
int3
mov
ds
retf
cmp
lock
jmp
rcr
or
fild
in
data16
daa
into
jmp
adc
jmp
cli
retf
sti
xchg
mul
outs
or
jl
jle
test
nop
je
mov
adc
mov
xor
loop
(bad)
vpperm
das
mov
imul
in
add
mov
xor
scas
jl
xchg
sbb
pop
hlt
pop
and
call
cs
xchg
shl
cmp
fs
xor
imul
outs
mov
popf
sub
inc
mov
xchg
mov
dec
push
sbb
mov
stc
retf
bound
push
outs
hlt
clc
pop
sysenter
dec
sahf
cmc
xchg
pop
adc
rcr
cmp
mov
icebp
(bad)
xor
stc
dec
rcl
mov
pop
xor
inc
cli
mov
sahf
aad
out
jne
jl
repnz
(bad)
ins
jmp
and
(bad)
cmp
sub
xor
es
shl
jmp
popf
mov
pop
int
add
cmps
adc
cld
jecxz
in
mov
xchg
(bad)
jns
in
xchg
popf
mov
xchg
aam
jno
pushf
addr16
lahf
lds
mov
push
in
add
xor
(bad)
out
or
loopne
or
imul
lahf
js
jbe
push
ret
cmp
rcl
cmp
mov
xor
sub
sub
int3
pusha
jo
and
retf
mov
jge
pop
in
sub
aaa
mov
cmp
fcom
test
push
mov
clc
push
pop
out
xor
cmp
or
and
mov
loopne
xor
push
in
frndint
fistp
jmp
fbld
jns
jle
ja
jl
mov
xchg
ins
add
and
shl
adc
ret
psrld
scas
jmp
dec
loopne
popa
out
xor
push
in
sbb
dec
clc
jbe
xor
and
int
icebp
xlat
ins
(bad)
mul
mov
mov
xor
adc
sub
push
pop
cdq
cdq
or
sbb
shr
test
cmp
xchg
pop
loope
out
xor
fisubr
dec
aaa
mov
hlt
adc
adc
mov
pop
add
dec
pop
mov
shr
repnz
adc
cmp
mov
imul
push
fisubr
cs
mov
jno
nop
mul
clc
das
mov
mov
sbb
sar
mov
out
fsub
mov
(bad)
repz
inc
enter
ja
mov
adc
imul
push
mov
aaa
pop
dec
or
push
retf
adc
int3
inc
fild
pop
sbb
sbb
movs
iret
movs
jne
shl
shl
pop
pop
push
push
adc
sub
mov
jmp
mov
ret
mov
ja
adc
pop
repnz
test
dec
sub
mov
pushf
sub
jl
sbb
popf
xor
das
stos
dec
jge
sub
js
jle
and
imul
adc
sub
jl
xchg
loop
psubw
(bad)
int3
and
into
aas
xchg
mov
repz
fdecstp
sbb
jae
dec
aad
or
fisubr
and
mov
push
jge
inc
nop
mov
(bad)
cmovp
push
mov
xchg
mov
stos
loop
mov
jmp
das
movs
xchg
add
add
mov
push
stos
lods
fwait
arpl
pusha
bound
push
ins
xlat
push
mov
pop
iret
cmp
out
or
(bad)
sbb
imul
push
lahf
jne
mov
out
data16
dec
sti
add
in
jp
push
jg
add
pop
xor
aam
pushf
dec
add
fdivr
hlt
mov
sbb
outs
mov
mov
(bad)
jb
inc
pushf
cmp
leave
cmc
aaa
ret
imul
pop
mov
shr
and
cmp
inc
or
inc
pushf
inc
retf
or
pop
lock
lahf
pop
jmp
gs
mov
(bad)
add
xor
int3
mov
aam
(bad)
xor
leave
lahf
into
jno
mov
fdivr
mov
jg
sub
push
loop
fwait
out
sub
mov
add
jp
imul
ds
ins
ret
cmp
outs
ins
jecxz
sbb
cs
sahf
mov
ret
test
mov
sub
mov
(bad)
dec
add
cli
lds
sbb
sar
movs
pop
mov
idiv
ffreep
cmovne
push
inc
dec
gs
mov
test
sbb
rcl
jecxz
(bad)
and
mov
rcl
into
stos
adc
ins
and
mov
xlat
dec
fnstcw
fdivp
fnstenv
sbb
fnstenv
pop
add
inc
and
fld
gs
add
jle
imul
mov
aaa
adc
inc
das
repz
add
sti
dec
push
mov
inc
sbb
xor
mov
xchg
jnp
sti
(bad)
dec
sbb
fs
xchg
cmp
cmp
pop
mov
inc
mov
ret
sti
xchg
stc
faddp
das
mov
mov
inc
mov
push
pop
pop
pop
mov
or
fnsave
sbb
sti
int3
push
xchg
mov
cld
mov
leave
xchg
lods
cmp
hlt
add
sbb
jecxz
je
xchg
jb
inc
mov
in
dec
fistp
add
and
gs
mov
jnp
dec
jmp
mov
test
mov
nop
scas
setge
mov
nop
add
cli
inc
push
mov
femms
fld
gs
mov
shr
xchg
xor
adc
je
lods
shl
aaa
xchg
call
cmps
lahf
out
pop
test
push
sub
add
fcom
jno
sti
call
mov
in
push
aas
mov
imul
movs
and
mov
(bad)
outs
pop
dec
cmp
add
ja
jl
ror
outs
ror
shl
dec
mov
mov
pop
lods
inc
lds
(bad)
and
jno
in
mov
sub
icebp
inc
rcl
and
repnz
mov
mov
repnz
add
cmp
(bad)
sub
xor
retf
mov
add
outs
or
dec
in
jae
movs
scas
iret
aam
ss
push
jo
jno
retf
arpl
aam
cmp
and
pop
dec
and
mov
ins
aam
push
push
cld
fnstenv
adc
sub
repnz
cwde
shr
push
push
jl
adc
shl
or
xor
jl
sbb
repnz
jae
add
mov
add
out
fs
push
iret
xchg
adc
ror
fist
data16
mov
mov
pop
out
mov
cmp
sub
popa
or
jb
sbb
call
aam
xlat
jmp
mov
push
xor
or
jecxz
inc
repz
into
imul
out
mov
test
xor
dec
xchg
and
jl
iret
push
adc
mov
or
pop
dec
inc
pushf
test
ins
sub
out
xchg
pop
fnstenv
inc
popa
lahf
push
(bad)
lock
sbb
dec
xchg
dec
push
sub
dec
push
push
lahf
in
mov
lahf
icebp
xor
sbb
xchg
sub
arpl
inc
or
call
retf
xor
retf
fstp
inc
data16
outs
pop
add
add
mov
scas
adc
sti
xor
pop
push
add
sub
xor
cmp
int3
ror
and
lods
mov
bound
adc
ins
sbb
push
fbld
les
or
std
jl
pop
xor
es
loope
xor
xchg
(bad)
mov
mov
fisub
enter
add
dec
xor
lods
sub
jbe
and
aaa
aas
or
dec
jmp
cs
sub
js
(bad)
dec
cmp
jmp
arpl
push
(bad)
sahf
(bad)
cli
mov
adc
mov
stc
push
adc
mov
adc
sub
mov
leave
adc
jnp
jge
mov
out
mov
cmp
fdivr
mov
or
ins
push
sti
ret
pushf
xchg
mov
scas
inc
jnp
(bad)
(bad)
mov
psraw
ja
mov
push
(bad)
inc
pop
inc
pop
mov
pop
fs
adc
in
jle
jecxz
mov
nop
rol
sbb
dec
jle
jge
push
outs
inc
call
(bad)
push
jno
mov
sub
and
lock
push
clc
je
repnz
out
xor
shr
push
stos
mov
mov
adc
sub
inc
adc
xor
mov
mov
sub
hlt
mov
sbb
mov
ficom
inc
inc
inc
repnz
loopne
test
adc
pusha
pop
jnp
stc
loop
push
test
inc
nop
out
stos
ss
ds
out
retf
call
les
(bad)
xchg
jno
popa
xchg
shr
fdiv
mov
adc
inc
and
stos
jecxz
push
ret
fst
les
xchg
scas
push
imul
jle
outs
jb
push
test
sbb
cmp
outs
pusha
(bad)
cli
pop
test
inc
jne
adc
stos
cwde
mov
or
in
les
sub
iret
dec
inc
xor
cli
sti
dec
(bad)
in
jl
sbb
fcomp
xchg
repnz
out
sub
pop
into
cmp
in
fcmove
push
sbb
mov
call
sub
sar
adc
push
xlat
cmp
push
adc
aaa
mov
fistp
int
fwait
aaa
cmp
mov
out
ja
jne
les
or
pusha
and
xor
xchg
por
xor
jle
pop
cmp
xchg
and
test
sub
cmps
push
das
enter
arpl
aad
cmp
fstp
lea
push
leave
jnp
test
add
iret
pop
xor
xor
cmps
mov
jb
sbb
jbe
xchg
mov
pop
cmp
cmp
arpl
sub
jge
add
xor
cmp
xor
adc
push
add
js
ds
fldcw
fmul
dec
xchg
adc
xchg
test
adc
or
adc
cmps
xchg
lea
sbb
test
jg
outs
sbb
mov
add
fs
jecxz
mov
mov
and
clc
adc
xor
jnp
(bad)
imul
xchg
je
pop
mov
paddb
inc
aad
jl
and
adc
loop
sbb
je
and
fidivr
mov
and
pop
mov
adc
(bad)
cwde
push
and
jb
fild
shl
sahf
mov
fs
add
in
outs
jo
lods
pop
int
adc
and
in
cld
jbe
cli
ja
daa
or
call
popa
xchg
xchg
in
lahf
xchg
cmp
pop
clc
mov
fdiv
xchg
mov
or
jns
push
loopne
and
pop
push
mov
push
mov
aad
loopne
(bad)
sti
sbb
mov
push
mov
ss
and
sub
das
push
retf
inc
inc
in
rcl
mov
jne
push
outs
retf
call
in
hlt
adc
sub
les
out
inc
pop
cdq
pop
cmc
pop
call
out
adc
leave
out
sub
push
mov
xor
xchg
sar
xchg
out
push
pop
mov
jmp
iret
add
mov
jmp
dec
fs
sbb
cdq
jecxz
push
lea
dec
dec
sub
in
mov
out
int
(bad)
sbb
sbb
push
jo
mov
push
aam
ret
dec
fxtract
(bad)
lods
mov
pop
popf
cmp
dec
push
bound
fwait
jp
idiv
icebp
test
dec
xor
and
lahf
xor
aad
pop
mov
mov
xchg
mov
test
xchg
jmp
test
sbb
sub
sub
xor
(bad)
retf
dec
sbb
add
mov
and
scas
ins
loopne
lods
and
loop
pop
out
jg
idiv
pop
out
cmps
xchg
jge
cmc
dec
mov
xchg
mov
call
push
fisubr
ret
push
or
lea
jo
aad
jl
sbb
or
jo
test
pop
jo
and
sti
add
pop
pmaddwd
out
and
cdq
int3
loop
(bad)
cwde
mov
pcmpeqd
adc
in
or
sbb
pop
jbe
xor
sub
jns
ins
jecxz
sti
hlt
and
scas
xor
cmp
(bad)
aas
out
pop
jno
fistp
mov
int
xchg
fmul
jp
or
inc
push
sahf
or
or
jle
xchg
retf
mov
gs
movs
popf
call
div
pop
clc
fs
push
shr
fs
loopne
sti
cmp
inc
dec
int3
cmp
stos
pop
push
enter
in
repnz
mov
cs
ins
push
aad
lods
adc
inc
pop
mov
pop
or
in
pop
sub
dec
test
jns
shl
xor
out
repnz
ins
sahf
mov
jmp
out
in
mov
sti
fdiv
adc
pop
shl
(bad)
sub
mul
add
mov
inc
push
push
push
imul
xor
mov
cmove
je
(bad)
in
add
movs
clc
shr
sub
pusha
mov
pop
neg
mov
jmp
adc
inc
xlat
fs
out
jns
mov
clc
sti
cmp
js
dec
sub
mov
in
mov
sti
cmps
jo
sub
rol
add
stos
cwde
dec
mov
add
es
pop
push
adc
mov
mov
test
loope
jg
popf
(bad)
fadd
pop
sbb
adc
jmp
loopne
xor
pop
jno
mov
or
mov
stc
sti
dec
out
arpl
test
mov
pop
fidivr
repz
out
cwde
cmp
call
stc
sahf
test
xchg
mul
rsm
xchg
dec
inc
adc
mov
(bad)
jge
es
jno
pop
adc
dec
ret
out
stos
and
sub
mov
daa
sub
mov
mov
cmps
aas
stos
fisub
lahf
sbb
enter
mov
lahf
lods
(bad)
xor
mov
out
cmp
pop
mov
or
pop
push
mov
fisub
mov
mov
sub
imul
push
fsubr
push
push
or
sub
and
in
and
pop
out
sub
sbb
mov
into
in
jmp
outs
fs
jl
sub
(bad)
scas
push
fwait
call
sahf
call
mov
dec
aaa
stos
mov
adc
push
in
xor
dec
adc
adc
ret
movs
js
je
cmp
xor
(bad)
out
mov
aam
and
push
cmps
daa
shr
inc
sbb
cmp
mov
jmp
imul
dec
add
lahf
call
xchg
das
mov
pop
jl
push
lods
enter
sbb
leave
test
dec
outs
mov
sbb
mov
mov
es
js
xchg
daa
into
adc
(bad)
std
jecxz
pushf
sbb
aam
sbb
sbb
pop
jle
or
nop
cmp
xor
ins
pop
cdq
es
jecxz
mov
call
int
(bad)
fst
lahf
adc
clc
fdiv
xlat
fdivp
sub
jae
pop
pop
sub
gs
mov
or
out
push
or
xor
popf
(bad)
fs
cld
movs
inc
fist
mov
dec
ret
adc
sub
in
fs
(bad)
lods
aas
shr
fidiv
mov
xchg
mov
adc
mov
repz
dec
sub
push
sbb
lods
retf
les
pop
push
out
sbb
or
mov
adc
(bad)
test
scas
add
cmp
mov
neg
movs
popa
lods
aas
xchg
adc
add
pusha
fild
out
inc
in
mov
xor
xor
adc
xchg
pop
and
xlat
jmp
popf
jecxz
sbb
sbb
sub
mov
push
fisttp
push
pop
popf
dec
stos
retf
jbe
(bad)
nop
pop
imul
das
ficom
push
nop
cmc
mov
sub
cmp
cmc
pop
fcmovnu
add
nop
loop
inc
or
xor
je
adc
xchg
jp
ror
xchg
jge
stc
xor
push
ficom
dec
lock
push
push
mov
xor
push
sub
xor
cdq
mov
fwait
ins
mov
fsub
xchg
inc
enter
arpl
adc
cmps
cmp
lods
fnstcw
pusha
cmps
je
mov
inc
sbb
ror
jecxz
pop
sbb
in
cmps
pop
lea
int3
xchg
in
mov
dec
push
xor
jae
xchg
sub
mov
fdiv
mov
jg
lds
xlat
int
mov
test
mov
sub
adc
sbb
and
jb
fcmovu
push
inc
xor
dec
and
inc
lods
(bad)
sub
dec
aaa
fnsave
in
aaa
xchg
pop
call
adc
dec
adc
imul
jl
outs
int
data16
sub
outs
push
retf
(bad)
pop
pop
repnz
xchg
sub
add
(bad)
in
adc
cmc
xchg
popa
xchg
lods
and
aam
push
test
inc
sbb
inc
xchg
xchg
(bad)
cmp
push
and
sub
mov
sub
mov
inc
ja
add
push
adc
fcomp
retf
lea
out
rcl
idiv
pop
je
lds
pushf
jmp
cmp
cmp
and
loop
jp
mov
fst
(bad)
loope
mov
inc
pop
scas
xchg
movs
inc
iret
fcom
call
cmp
mov
and
inc
cld
hlt
and
aaa
adc
cld
xor
jl
xchg
dec
add
xor
test
stos
sahf
fwait
ds
ins
je
dec
cmp
sub
add
out
push
xchg
add
test
sbb
mov
inc
mov
cdq
xchg
pop
mov
push
sbb
push
xchg
pop
mov
scas
mov
pop
lods
dec
cmp
(bad)
aaa
cmc
or
adc
lds
xchg
pop
fwait
rcr
es
mov
pop
adc
sub
push
ins
push
outs
xchg
or
push
sti
ja
js
movs
(bad)
jl
loope
jle
mov
(bad)
sbb
and
xadd
dec
mov
cmps
adc
cmps
cmps
lock
mov
out
inc
dec
retf
iret
fstp
loopne
retf
dec
mov
js
rol
jae
les
popa
loop
sahf
jno
icebp
jmp
pusha
pop
dec
add
mov
hlt
sub
dec
mov
adc
sub
or
clc
gs
sti
imul
jmp
dec
sbb
mov
pop
jae
sub
lds
in
push
mov
push
cs
sbb
pop
xor
add
inc
dec
adc
pop
cld
dec
mov
fwait
adc
inc
jle
mov
mov
jno
or
stc
mov
cdq
test
mov
data16
sub
push
mov
imul
sub
dec
ss
push
imul
push
loop
mov
jno
or
out
mov
movs
xchg
or
xchg
push
(bad)
pop
cmp
add
(bad)
out
ret
inc
(bad)
or
mov
cwde
cmp
stc
aas
leave
or
or
leave
ret
aaa
popa
xchg
mov
or
jl
fcmovnu
sub
cs
xchg
loope
test
adc
pop
(bad)
retf
jo
in
xor
rcl
inc
(bad)
out
cli
jge
cmc
jecxz
popa
fcom
(bad)
iret
mov
arpl
push
mov
cdq
arpl
mov
pop
mov
jg
fdivrp
xor
std
jne
jns
jl
outs
stos
push
fcomp
cmp
cdq
mov
mov
ins
out
ds
dec
stc
jmp
cmp
sbb
jp
outs
add
sahf
mov
loope
pop
sub
or
or
clc
push
cli
jb
and
mov
mov
and
int
mov
rcl
and
dec
jle
mov
push
cdq
aaa
popf
jmp
and
pop
sub
xor
dec
gs
data16
sbb
mov
jecxz
addr16
fs
mov
out
sbb
push
xchg
sub
(bad)
enter
xor
cmp
mov
cmp
mov
(bad)
mov
inc
cwde
pop
pop
xchg
or
js
xchg
ds
movs
mov
jbe
mov
jge
xor
fnsave
mov
aas
sbb
enter
leave
xchg
mov
or
test
push
xlat
push
xchg
dec
sbb
jmp
adc
pop
cmps
mov
add
repz
out
add
mov
inc
popa
push
clc
pop
mov
push
fbld
cmps
sbb
lahf
sbb
mov
adc
push
fdiv
pop
and
cmps
fs
cld
fcom
call
sub
(bad)
sub
nop
push
mov
jo
jo
sti
dec
sub
test
dec
sti
dec
mov
adc
add
dec
not
or
aam
dec
and
push
lds
fild
mov
call
lahf
and
adc
pop
pop
pop
in
or
cmp
out
fmul
add
jnp
and
push
adc
xchg
push
or
xor
jl
jl
sub
fadd
mov
xor
cwde
ret
pand
aam
jnp
int
aad
cmp
push
idiv
data16
(bad)
mov
repz
pop
or
je
push
not
pop
cmp
fwait
aas
pusha
inc
inc
and
pop
pusha
mov
dec
and
call
in
aad
icebp
mov
dec
outs
inc
fs
adc
out
push
push
sbb
cwde
or
xchg
ret
adc
test
mov
icebp
or
xor
(bad)
es
movs
sbb
test
mov
push
ins
pop
or
cmp
inc
in
es
jne
out
shl
cmp
adc
jb
retf
or
inc
mov
fmul
das
mov
xchg
xchg
mov
(bad)
sub
rcr
inc
fs
imul
ss
enter
jl
nop
add
shl
sbb
sub
xchg
mov
in
jecxz
lds
in
xor
(bad)
scas
(bad)
dec
push
stc
push
hlt
cmc
jmp
fs
mov
and
int3
stc
xchg
and
push
jp
and
mov
sbb
or
ds
sub
out
pushf
fldlg2
cmps
push
pop
sub
mov
loopne
push
pop
stos
or
adc
out
imul
or
enter
and
and
popf
out
push
popf
xchg
fwait
xchg
jmp
scas
cmp
leave
xchg
aam
fdivr
adc
inc
aam
scas
inc
mov
out
push
ja
arpl
into
outs
inc
inc
mov
mov
mov
sub
mov
sub
xchg
mov
add
pop
mul
xchg
and
xor
mov
add
loopne
pop
and
cmps
push
les
cmp
and
sbb
sub
pop
cmp
add
sbb
adc
inc
xchg
dec
aam
mov
out
cmp
fbstp
jle
ins
aaa
jne
mov
shr
inc
imul
xor
mov
mov
pushf
pop
cli
xor
in
stc
into
ins
or
pop
repz
xor
int3
sbb
inc
adc
imul
inc
out
out
pop
jmp
sub
cmp
call
mov
movs
ja
ss
mov
mov
fst
add
push
jns
int3
(bad)
pop
inc
retf
adc
and
pop
xchg
not
nop
stos
mov
xor
pop
pop
(bad)
cmps
xchg
out
or
inc
dec
inc
pop
test
add
dec
das
push
pushf
sub
ins
nop
jmp
das
out
sub
adc
lods
xchg
(bad)
dec
test
mov
mov
adc
enter
cmps
fisubr
sub
push
xchg
or
add
or
(bad)
cwde
mov
loop
ret
xchg
push
adc
xchg
mov
xor
push
dec
xlat
sub
mov
fwait
pop
pop
jnp
cmp
int
push
ja
int3
push
into
sbb
not
pop
setae
dec
sub
imul
pop
lock
popa
xor
pop
jne
ss
imul
xchg
jl
xchg
icebp
mov
rcl
lahf
test
dec
mov
dec
adc
lea
sti
stos
mov
dec
movs
iret
sbb
dec
cli
xchg
rcl
pop
mov
(bad)
mov
mov
aam
inc
mov
lahf
lock
pushf
in
add
dec
or
sahf
pop
mov
jno
sub
adc
mov
pop
jge
xchg
fs
retf
xchg
cwde
into
add
cmp
sbb
test
or
shl
ds
dec
pop
outs
mov
frndint
mov
xchg
push
pop
mov
nop
xchg
xchg
dec
retf
jbe
dec
enter
or
xchg
xor
inc
push
ins
inc
mov
shl
sbb
add
mov
cmps
xchg
(bad)
cmp
in
push
xor
jb
dec
scas
jns
sbb
xchg
mov
xor
push
in
add
sbb
repnz
and
and
fwait
sahf
xor
sbb
add
sub
push
sub
pop
xchg
stos
mov
inc
(bad)
arpl
addr16
push
inc
xor
xor
sbb
adc
jecxz
test
add
sub
iret
clc
jp
and
xchg
daa
retf
leave
pusha
std
idiv
push
cs
(bad)
leave
lahf
pop
movs
daa
loope
xor
mov
xor
dec
cmp
js
or
ret
dec
dec
nop
in
jmp
(bad)
cmps
inc
iret
adc
inc
mov
mov
adc
mov
and
loop
jmp
fwait
lods
idiv
xchg
das
add
adc
pusha
cmp
cwde
nop
fmulp
cmp
pop
push
jnp
pop
nop
fisttp
mov
add
sbb
cwde
shl
push
inc
fcmove
mov
push
(bad)
jg
sub
movs
sub
fidivr
test
aad
jne
cld
mov
lods
pop
icebp
cld
inc
jge
imul
push
sub
daa
cld
xor
xchg
fisttp
cmps
jne
pop
xchg
jb
daa
cmp
fld
xor
js
push
loope
cli
fs
dec
sbb
test
dec
lock
adc
test
in
cdq
out
jmp
push
sbb
xchg
ficom
bsf
call
mov
mov
mov
test
jae
or
sub
push
sub
adc
jmp
mov
xchg
addr16
cli
cwde
sahf
mov
je
les
jo
test
jne
cmp
mov
jnp
sub
movs
sbb
mov
leave
mov
mov
mov
int3
or
xchg
xor
xchg
sbb
sub
cmc
jmp
push
outs
pusha
mov
pop
and
(bad)
loop
iret
adc
jecxz
sub
dec
cmc
cmps
outs
cmp
(bad)
leave
add
inc
mov
jo
not
and
jmp
enter
ja
and
jne
pop
push
jns
cmps
add
jne
cmp
cwde
jge
data16
sbb
cmovl
(bad)
mov
ss
(bad)
aaa
(bad)
ja
or
sbb
sub
(bad)
int3
outs
inc
retf
ss
pop
in
mov
add
sti
lock
lods
cwde
rep
mov
push
cmc
neg
push
loopne
es
repz
mov
push
ds
movs
sbb
shl
(bad)
retf
std
cmps
fild
pop
add
cmp
mul
xor
add
cmps
das
popf
jo
push
push
cmps
jnp
sub
jns
and
xor
push
mov
push
push
inc
adc
into
cli
ja
jmp
sub
xor
icebp
loop
xor
and
lods
and
xchg
ss
gs
cmp
call
push
retf
aas
int
inc
mov
xlat
mov
aad
jne
cmovl
inc
fld
xchg
pop
imul
or
sub
adc
pop
call
repz
sub
pop
cmps
cmp
in
mov
or
sbb
mov
lds
pop
repz
mov
mov
ss
pop
in
dec
iret
in
mov
push
jbe
test
cmps
xor
dec
(bad)
fisttp
pop
movs
ror
cdq
mov
dec
sbb
mov
mov
pop
inc
faddp
mov
lods
jbe
je
inc
popa
adc
mov
mov
mov
call
jbe
aad
add
mov
push
test
mov
cmp
cmp
test
stos
mov
push
inc
les
dec
pushw
push
rcl
xor
xor
push
mov
mov
dec
jns
rcl
leave
mov
inc
adc
lea
shl
jo
(bad)
mov
ficom
movs
and
dec
cmp
cwde
cmc
fnop
in
lds
jae
daa
scas
and
push
(bad)
mov
xchg
fdiv
adc
enter
aaa
cmp
mov
jge
add
push
movs
pop
sbb
pop
loope
and
and
xchg
jge
mov
loop
lahf
cmp
or
leave
jg
cdq
jb
mov
push
fild
enter
mov
mov
mov
sar
and
fimul
fidivr
adc
jo
push
jge
fbstp
cli
shl
cmps
mov
pop
jns
xchg
fsubr
rcl
sbb
inc
out
push
inc
popa
imul
pop
and
jl
xor
jnp
pop
lods
inc
mov
mov
stos
outs
fcmovnbe
rcr
sub
add
pop
mov
std
ror
push
pop
sti
or
fstp
push
(bad)
loope
add
cwde
xor
fidiv
mov
jge
mov
inc
sbb
stc
push
or
les
dec
enter
loope
pop
jns
cdq
fsub
loope
rcr
mov
add
xor
call
stc
out
cmp
add
or
sub
loop
jae
fcom
xor
push
push
sbb
xor
mov
iret
pushf
sub
inc
mov
jge
jmp
je
out
les
jmp
push
mov
mov
adc
jp
icebp
jge
mov
or
adc
cmp
in
dec
inc
clc
pop
push
xlat
cmp
cmp
loopne
test
inc
mov
mov
jb
sub
cmps
out
and
add
jmp
enter
push
adc
scas
jmp
sbb
push
push
and
mov
inc
inc
jne
mov
outs
loope
ins
pushf
shl
data16
sub
adc
mov
push
loop
dec
out
and
movs
push
or
xor
mov
lds
sub
cdq
(bad)
in
pop
jb
pushf
aas
add
test
cdq
sub
in
jl
sub
shl
pop
sub
clc
imul
or
test
dec
pushf
loop
dec
jmp
movs
xor
arpl
push
jbe
enter
outs
sbb
in
xlat
add
jmp
sub
mov
push
inc
push
add
cmp
dec
dec
aam
dec
std
adc
sub
add
jmp
sbb
cmp
dec
cmps
jecxz
pop
push
sub
lods
(bad)
pop
call
into
repnz
pop
cmp
pop
xor
mov
xchg
sbb
jle
std
pop
int
cmp
mov
aad
inc
outs
shl
outs
fs
int3
inc
daa
cmps
lock
push
lds
jmp
push
mov
xchg
jbe
lock
les
mov
in
inc
retf
sbb
adc
sbb
push
and
push
scas
inc
xor
stos
pop
imul
or
jecxz
mov
xchg
jbe
pop
sbb
icebp
stc
mov
sub
and
mov
mov
stc
mov
inc
push
mov
mov
mov
sahf
scas
dec
jae
push
rol
ins
sbb
cmp
sub
xchg
pop
and
test
mov
xor
cld
xchg
stos
bound
retf
push
in
fbstp
cmps
data16
retf
and
xor
push
test
add
imul
retf
xchg
les
xchg
mov
ret
in
push
mov
cmc
(bad)
out
aad
sub
add
sbb
cmp
jg
mov
inc
sbb
xor
aad
adc
dec
mov
imul
mov
push
inc
cld
inc
enter
mov
cmovp
dec
inc
cmp
mov
jecxz
mov
jne
add
lods
and
js
loop
(bad)
pop
mov
mov
scas
inc
push
push
fisttp
pusha
test
movs
or
aad
mov
push
pop
pop
xchg
pop
sub
mov
leave
xor
repz
imul
cdq
mov
xchg
arpl
push
pop
adc
out
test
and
aaa
das
xor
ret
pop
dec
adc
mov
mov
(bad)
fs
inc
dec
test
jge
ds
out
in
mov
dec
mov
addr16
(bad)
es
sahf
ss
mov
imul
imul
jl
loopne
ret
push
mov
push
pushf
xor
xor
cdq
je
jns
adc
xlat
xor
xchg
ret
xlat
push
and
mov
ins
dec
aad
pop
test
sub
cmp
mov
or
cmp
push
push
dec
pop
ds
rcr
pushf
add
xchg
jle
ja
xchg
repz
jmp
(bad)
sub
popa
les
sahf
fidiv
std
jecxz
repnz
into
and
xor
test
cmps
mov
and
push
pop
push
mov
shr
pop
xchg
sbb
loope
(bad)
sbb
inc
rol
xor
cs
pop
cdq
push
out
add
lock
mov
movs
mov
aas
movq
jo
ins
pop
mov
sbb
push
cmp
xor
xchg
sub
stos
adc
sub
sti
jns
fidiv
iret
mov
icebp
xchg
jmp
inc
xchg
das
inc
imul
add
lock
or
mov
sbb
jmp
xor
pop
(bad)
iret
data16
push
mov
sar
inc
shl
push
(bad)
jmp
dec
nop
fcom
test
out
popf
mov
sub
icebp
addr16
arpl
das
mov
iret
sub
stc
push
and
ds
cmps
xchg
test
cmp
sub
ret
mov
mov
push
dec
xor
jp
push
cmp
fdivr
pop
mov
mov
dec
aaa
test
cmp
retf
fsub
daa
lods
and
cmp
add
cld
adc
out
push
push
adc
jp
jae
push
and
push
ss
jg
imul
out
inc
inc
cmp
xchg
sti
cli
or
arpl
(bad)
into
push
arpl
imul
fiadd
ja
rcl
test
inc
pop
jmp
sbb
call
and
imul
xor
add
loop
push
lds
inc
test
out
dec
and
out
jo
sbb
or
std
mov
in
or
in
adc
mov
dec
arpl
in
sbb
mov
mov
loope
sbb
ss
adc
les
xor
cdq
mov
nop
jl
jnp
mov
lds
ins
mov
jo
fstp
mov
push
iret
loop
push
sub
push
adc
jns
ret
sbb
sbb
imul
or
jbe
out
mov
sub
pop
mov
loopne
cmp
enter
das
sbb
aam
mov
aaa
aad
jmp
xchg
test
icebp
adc
pop
aam
sub
jmp
pushf
pop
mov
stc
mov
xchg
push
ret
iret
xchg
xor
stos
mov
aas
or
jle
sub
sar
xor
and
adc
sar
pop
sub
xchg
int3
shl
pop
pop
aad
and
repz
ins
xchg
push
jg
mov
jbe
and
repz
mov
cmc
sub
jle
out
jge
or
add
cmp
sbb
jmp
adc
aas
sbb
jle
xor
cmp
retf
pop
js
movs
mov
xchg
push
adc
cmp
dec
stos
rol
retf
sbb
mov
nop
cmp
mov
pop
mov
sbb
into
pop
inc
dec
pop
repz
sub
imul
and
(bad)
repnz
sbb
xchg
neg
and
loop
ja
iret
xor
jg
ret
movs
push
pop
cmc
outs
jnp
rcl
jmp
xor
je
popa
es
jo
jb
je
shl
cmc
fdiv
inc
sbb
jmp
push
xchg
cmp
stos
pop
cmp
ja
out
push
mov
push
scas
lods
cmps
ins
cwde
push
adc
and
hlt
pop
mov
imul
shl
(bad)
jl
or
and
add
bound
dec
pop
cmp
ins
add
lds
div
(bad)
lea
cli
push
in
scas
ins
les
enter
cmp
sub
mov
sub
xor
outs
xchg
das
mov
jne
out
mov
fst
cmp
push
repnz
inc
das
call
and
les
cmc
dec
adc
ins
repz
ret
or
int
xchg
stos
test
push
mov
xor
sbb
and
pop
and
jae
and
push
inc
dec
(bad)
jbe
mov
mov
mov
and
out
cmps
loope
sbb
les
push
xchg
neg
cmps
fdiv
adc
scas
and
add
add
inc
mov
popf
shl
popa
cdq
inc
nop
aas
mov
pushf
and
pop
scas
add
sbb
push
push
sti
mov
stos
add
push
lea
mov
xlat
nop
fcomp
sbb
jp
in
dec
jno
stos
pusha
sub
sbb
ins
addr16
or
xchg
(bad)
call
fst
fwait
movs
dec
xlat
popf
call
or
fbstp
jge
push
fcom
add
les
mov
pushf
gs
fidiv
jns
scas
fnstcw
sahf
shl
div
loop
xchg
js
pop
jb
(bad)
aam
mov
and
cmc
test
push
(bad)
rdtsc
xor
jb
cmp
dec
stos
mov
ins
hlt
mov
add
inc
sbb
cmp
(bad)
xchg
or
in
scas
jmp
cmp
mov
in
sbb
add
xor
jb
add
xor
retf
(bad)
jns
sbb
jns
jns
test
jg
pop
mov
movs
push
aam
dec
push
loop
jg
loopne
mov
jb
mov
ss
mov
or
sbb
enter
cmp
dec
movups
mov
iret
pusha
out
inc
mov
inc
cmp
(bad)
jecxz
mov
mov
cdq
cmp
jns
inc
retf
xor
ds
sub
iret
mov
dec
iret
ins
mov
sub
xor
div
ds
popa
dec
mov
xchg
push
adc
shl
dec
xor
mov
movs
outs
stc
mov
retf
iret
mov
fsubr
scas
in
ret
mov
mov
out
addr16
fidiv
adc
in
dec
hlt
das
mov
pop
push
fstp
mov
ins
test
into
add
add
iret
xor
inc
mov
out
pushf
push
ficomp
lods
jno
fs
jl
lods
dec
mov
nop
pop
xchg
rcl
mov
mov
(bad)
fcom
out
mov
mul
mov
mov
lods
xor
out
push
int
mov
inc
jae
pop
stos
out
dec
ds
dec
jle
cmp
gs
loop
call
pop
sti
pop
sti
cmp
out
mov
jae
cmps
sbb
dec
inc
pop
jmp
sahf
call
cmc
sbb
jb
shr
push
push
add
movs
jg
pop
and
pop
add
sar
xchg
xchg
stos
lahf
inc
shl
push
stos
pop
in
mov
cmps
fisub
mov
or
fldcw
cmc
dec
jl
and
jbe
mov
sbb
test
ds
(bad)
mov
leave
dec
loopne
xchg
push
ret
adc
retf
jb
mov
inc
sub
mov
aas
or
iret
call
xchg
test
pop
pop
shrd
jne
cli
ret
cld
sbb
sub
cmp
pop
mov
aam
mov
inc
mov
icebp
jbe
adc
call
add
js
xor
jg
int3
jb
inc
sahf
dec
cs
sbb
rol
sub
dec
ret
daa
pop
mov
inc
add
ins
mov
or
nop
cmps
cmp
cld
pop
fld
sti
mul
fidivr
cwde
xor
mov
inc
push
ins
imul
test
lods
xchg
out
mov
jecxz
jb
add
dec
xor
inc
mov
retf
jmp
mul
or
and
call
jbe
jl
scas
lea
imul
push
scas
and
icebp
cmp
pop
adc
fbld
cs
leave
mov
xchg
aad
int3
ss
test
fwait
or
or
mov
fnstsw
fbstp
add
scas
mov
cmp
(bad)
mov
test
push
test
xchg
inc
jnp
inc
dec
sar
js
pop
popa
jmp
mov
in
push
mov
shr
xchg
xor
mov
enter
loopne
imul
lds
mov
pop
bound
push
fbstp
aad
push
cmp
nop
and
xlat
jp
nop
jecxz
pop
xchg
sahf
xor
push
jp
sbb
call
cld
adc
gs
adc
jnp
mov
push
es
cmp
je
int
and
pusha
mov
in
jge
shl
jl
int3
out
imul
scas
nop
movs
jno
sahf
cld
aam
retf
cmp
stos
xchg
fisttp
xor
sbb
loope
add
lods
int3
std
sub
cs
(bad)
and
jl
mov
(bad)
sub
repnz
xor
out
cmp
stos
mov
add
mov
dec
or
jnp
clc
and
dec
xor
ficom
jge
or
cmp
icebp
pop
pop
xchg
test
jnp
inc
push
arpl
fst
outs
sbb
mov
push
fs
jb
mul
fst
dec
mov
pop
mov
rcl
aas
sbb
cs
call
popf
jb
repnz
pop
fsub
icebp
fucomp
ja
jnp
or
call
and
pop
xchg
jmp
out
jle
rcl
pop
call
push
pop
movs
or
mov
mov
data16
cmps
mov
pop
fst
cmp
or
js
mov
mov
sub
jp
call
into
gs
mov
in
xor
add
adc
push
sub
mov
lds
or
mov
(bad)
cmp
add
add
hlt
and
les
mov
out
sti
add
ret
enter
lods
jl
inc
push
sbb
cdq
lods
jno
rcr
adc
fimul
shr
(bad)
dec
fsubr
ja
push
(bad)
add
cmps
fldl2t
mov
and
push
jno
mov
mov
dec
add
ja
movs
mov
scas
jmp
push
leave
sub
hlt
popf
int3
mov
adc
hlt
push
xchg
aas
push
mov
dec
not
cli
in
lock
je
shr
xchg
pop
xor
xor
inc
xor
shl
mov
ret
adc
nop
push
clc
outs
int
fisttp
mov
(bad)
ds
and
test
(bad)
in
std
jg
add
inc
stos
sti
push
icebp
repz
dec
dec
sbb
add
push
pop
clc
cs
pop
inc
arpl
pop
push
push
shl
fwait
push
sub
push
xchg
mov
int
or
scas
xor
jo
jbe
xor
inc
out
xchg
add
sbb
lahf
mov
sub
rol
cmps
dec
fisttp
mov
mov
imul
jmp
mov
nop
lods
es
fild
sahf
stos
mul
leave
pushf
xor
imul
mov
clc
cmps
xlat
fld
cmps
popa
loop
mov
ret
add
jbe
cs
imul
mov
stos
mov
movs
jmp
pop
add
ss
sub
popf
outs
gs
fdivr
nop
mov
icebp
inc
and
mov
aad
js
pop
sar
jge
js
pop
push
xor
es
sub
mov
mov
jp
mov
pop
mov
cmp
push
add
fdivr
xchg
cdq
jnp
xchg
and
ret
ins
sbb
shl
data16
retf
xchg
lds
and
jecxz
jmp
xchg
and
inc
mov
popa
outs
lahf
xor
jbe
cmp
push
mov
pop
scas
mov
push
fisubr
lods
or
and
sbb
ror
shl
jns
lds
retf
dec
pushf
xor
mov
push
xchg
(bad)
call
inc
cdq
sbb
fdivr
inc
fwait
retf
std
lds
mov
(bad)
in
data16
mov
push
push
xchg
or
fs
mov
out
lds
aam
mov
enter
leave
sahf
adc
sub
or
out
jmp
pop
mov
push
std
inc
push
ficomp
add
add
call
arpl
sbb
enter
add
sti
add
xor
push
xchg
loopne
hlt
ins
outs
mov
xchg
inc
in
adc
lock
outs
stos
fmul
cmps
mov
push
pop
add
das
jl
inc
out
cld
call
push
outs
mov
dec
jnp
imul
cmc
cmp
jmp
lahf
adc
das
sbb
cmp
mov
pop
(bad)
inc
cmp
sub
xchg
inc
pop
mov
je
aam
jl
fwait
dec
push
sbb
sbb
leave
sti
cmps
lods
lds
mov
mov
adc
test
sti
jne
push
sbb
mov
pop
jp
mov
jp
movs
xchg
cmc
dec
int3
or
mov
fxch
rcl
retf
inc
loope
and
or
xor
push
mov
dec
push
dec
fwait
cmps
sub
iret
fidivr
add
dec
out
inc
add
adc
mov
mov
fidiv
or
jp
(bad)
push
xor
loopne
pop
push
mov
or
mov
mov
jge
inc
add
mov
stos
scas
xchg
lods
out
sbb
mov
pop
sbb
pop
mov
dec
pop
mov
pop
xchg
arpl
clc
add
push
mov
lods
push
sti
jecxz
cmp
sub
mov
or
data16
out
inc
inc
sbb
or
mov
sbb
dec
mov
cmp
outs
dec
mov
inc
or
mov
repz
adc
xchg
or
mov
dec
jp
or
cmp
pop
inc
xchg
ins
inc
out
xchg
push
sub
test
into
jp
in
fwait
mov
adc
jmp
pop
pop
or
xor
stos
scas
sbb
inc
fisttp
mov
xchg
(bad)
clc
mov
xor
fmul
leave
mov
stos
bound
aam
jle
adc
ror
xchg
pop
and
test
dec
sahf
push
adc
mov
or
loop
ins
movs
jo
pop
xor
cli
pop
daa
nop
mov
xchg
loope
fstp
gs
popf
xchg
dec
fnstsw
cmps
ds
mov
adc
(bad)
cmp
aaa
bound
icebp
test
retf
test
aam
adc
rcr
sbb
mov
pop
ja
jb
mov
shl
lahf
fnstenv
sub
and
sbb
inc
(bad)
icebp
inc
and
add
add
ror
(bad)
lods
out
xchg
adc
pop
mov
jo
sahf
mov
sahf
test
xor
fisttp
popf
adc
(bad)
ficomp
adc
jl
or
aam
ss
loope
pop
dec
mov
bound
add
bt
mov
adc
js
ss
or
xor
(bad)
bound
and
mov
cmp
dec
neg
add
push
out
pop
push
xor
test
push
fs
aas
loop
fcomp
push
xchg
jbe
inc
and
mov
popa
rol
sub
mov
pusha
popf
pushf
xchg
xchg
jle
das
call
inc
xchg
mov
js
pop
jecxz
call
push
push
lahf
or
mov
daa
mov
inc
out
push
mov
popa
outs
mov
push
es
and
jg
gs
es
movs
les
sub
sar
sbb
out
js
pop
fild
mov
mov
cmp
mov
cmp
ds
mov
mov
mov
cdq
jns
les
add
iret
dec
cld
fidivr
or
gs
imul
outs
je
xor
jge
sar
adc
(bad)
ror
je
dec
pop
ins
cmc
or
into
dec
push
fadd
xor
shl
daa
pop
adc
dec
lea
push
ror
inc
mov
pop
enter
pop
adc
lock
sub
push
lds
test
mov
into
pop
sbb
mov
add
inc
mov
(bad)
push
mov
mov
sbb
xor
test
loope
jecxz
and
adc
jp
pop
push
loope
add
dec
into
loop
and
(bad)
cmp
mov
sub
cmp
cmp
mov
pop
sub
sub
push
ret
dec
add
scas
xor
pop
pop
sbb
movs
xor
fimul
xchg
ins
icebp
ins
into
outs
mov
test
stos
sbb
inc
or
xor
sbb
xchg
mov
add
mov
fst
mov
(bad)
pusha
jnp
adc
(bad)
(bad)
adc
adc
dec
push
repz
ins
cmovge
retf
push
lock
xchg
in
lods
push
jecxz
and
test
test
outs
ror
retf
popf
mov
xchg
dec
je
pop
xlat
cmp
and
sub
jp
ins
fisttp
xor
lods
adc
adc
mov
clc
jns
jnp
call
mov
cmp
pop
loopne
ss
mov
jmp
leave
(bad)
(bad)
mov
pushf
fst
(bad)
mov
xchg
xchg
lods
add
jge
(bad)
imul
adc
mov
stc
imul
frstor
inc
nop
rcr
jae
arpl
call
xor
xor
scas
leave
iret
fwait
icebp
cmc
push
sti
(bad)
cwde
out
retf
pushf
dec
mov
sti
retf
push
inc
jmp
in
aad
dec
mov
ror
cli
int
mov
ret
or
aas
aam
fwait
pop
repnz
shl
call
inc
cwde
push
js
add
push
rcl
or
pop
cwde
mov
fsub
xchg
mov
dec
pop
ret
adc
rcl
cli
mov
adc
es
les
sbb
js
mov
pop
mov
gs
mov
sti
cmp
mov
mov
test
jo
cli
jg
and
adc
pop
imul
pop
pushf
add
sub
nop
sahf
xchg
loop
jge
cmp
push
dec
sbb
cld
ror
je
mov
push
inc
iret
popf
aam
xor
jmp
inc
push
aas
call
push
lock
push
int
into
xor
ret
adc
mov
and
jp
mov
pop
push
icebp
inc
and
sub
and
sbb
inc
cli
pop
mov
bound
ds
xor
stos
xor
movs
rol
ret
adc
xchg
(bad)
out
in
ret
jno
cld
jnp
je
mov
or
lods
fidivr
mov
mov
ret
stos
push
pop
stc
sahf
pop
loopne
xchg
sub
mov
sub
push
mov
jb
and
inc
fnsave
or
mov
xchg
test
lea
adc
loopne
ins
rcr
cmp
mov
jno
push
mov
jmp
mov
or
xor
jecxz
lods
in
xor
lods
ja
or
adc
rol
fistp
fcmovb
jp
and
ss
std
ins
daa
sar
cmps
mov
sbb
pop
mov
sbb
popa
pop
cmp
jecxz
les
mov
ins
xchg
js
clc
cwde
fstp
adc
cmps
inc
fst
retf
into
or
inc
test
(bad)
xor
add
lea
jge
push
xchg
fs
and
dec
inc
xor
jno
or
popa
xor
es
ret
sbb
mov
cmps
movs
xchg
cdq
jle
aad
jg
imul
rcl
mov
jo
ss
ret
ficom
gs
pop
dec
lahf
jno
mov
cld
pop
dec
sbb
mov
mov
sbb
retf
cmp
push
je
mov
mov
pop
test
xor
mov
cmp
fstp
mov
gs
ror
or
mov
mov
sub
push
aad
sbb
out
sub
adc
add
je
or
fild
cmp
les
retf
push
aam
dec
jns
iret
pop
scas
and
stos
fnstcw
mov
xchg
retf
push
push
cmps
in
rcr
jecxz
sub
mov
addr16
ins
push
xor
outs
retf
(bad)
inc
enter
inc
and
pushf
in
icebp
and
int3
adc
jg
test
jmp
mov
mov
sbb
lods
jmp
sub
xchg
cmc
jmp
imul
mov
pop
imul
sbb
push
aaa
int
sbb
jnp
jmp
or
xchg
cmp
dec
cmp
pop
xor
inc
dec
dec
sbb
or
scas
xchg
push
jmp
std
xlat
or
push
rcr
(bad)
xor
in
scas
dec
adc
in
movaps
inc
call
dec
adc
retf
sub
push
pop
adc
or
int3
pop
dec
mov
mov
in
loop
fwait
cmps
mov
xchg
adc
ja
jbe
imul
jl
or
jno
xchg
dec
sbb
lods
jge
pusha
retf
(bad)
pop
dec
in
mov
aad
inc
mov
sbb
and
shr
push
nop
or
xchg
lds
es
adc
int
std
jl
dec
jno
push
repz
sub
scas
nop
scas
add
mov
ficom
ja
popa
sub
jle
jg
inc
xchg
push
ret
call
jns
lods
stos
jmp
jno
push
dec
jle
(bad)
fsubr
out
mov
xor
inc
sar
or
rol
dec
ja
es
adc
add
and
repnz
clc
sub
(bad)
push
jecxz
mov
mov
call
xchg
out
lods
xchg
push
adc
ds
jne
popa
mov
call
jnp
rcl
and
lods
stc
aam
xchg
mov
inc
adc
jp
mov
xchg
call
arpl
popa
mov
ret
xor
mov
push
xchg
ret
bound
push
push
(bad)
cld
les
inc
gs
mov
push
jae
push
pop
inc
(bad)
cli
adc
pop
or
scas
aad
or
neg
push
popa
and
dec
dec
add
push
pop
and
cmp
fdiv
pop
fwait
add
xor
call
sbb
dec
retf
gs
mov
scas
sub
outs
lds
mov
push
ins
cmps
(bad)
mov
pusha
cmp
repnz
sbb
iret
xor
adc
popf
fdivp
stos
dec
shl
lea
(bad)
cmc
in
adc
xor
push
out
adc
mov
jg
cmp
js
mov
or
jp
cli
test
jno
lahf
pop
sbb
mov
sbb
xchg
jnp
mov
lods
adc
pop
jg
sub
fsincos
lods
inc
jmp
mov
outs
cmp
mov
(bad)
retf
sahf
sub
xchg
push
xchg
clc
adc
(bad)
push
push
in
inc
pop
jmp
pop
or
aad
ds
mov
mov
sti
cmps
test
daa
mov
add
enter
xchg
sub
rcl
lods
inc
mov
sub
sti
and
lds
mov
sar
loope
pop
ret
inc
jge
pop
push
retf
xor
mov
dec
arpl
jae
jmp
push
push
aas
adc
xchg
dec
sub
ja
(bad)
call
imul
push
and
(bad)
jno
pop
sahf
mov
jle
stc
mov
add
int
cmp
in
mov
sbb
cdq
pop
adc
xor
test
mov
jnp
pop
je
pop
jnp
aas
inc
shl
jge
rcr
cmp
jb
cmp
inc
sar
pop
fwait
jmp
adc
addr16
test
dec
adc
(bad)
and
and
lock
push
or
mov
cmps
pop
fcom
jnp
shr
je
ret
sub
dec
mov
and
xor
jmp
xchg
cmps
(bad)
out
scas
sub
push
xor
mov
pop
fdivp
in
dec
getsec
mov
mov
jns
test
and
(bad)
ins
xor
add
ins
push
add
loope
sub
xchg
gs
sub
sub
sub
bound
and
stos
nop
adc
test
(bad)
jno
loopne
adc
or
xchg
not
test
pop
adc
pop
sub
push
daa
xchg
dec
popf
mov
sub
test
jno
jae
fsub
adc
arpl
mov
jno
and
and
jmp
sbb
mov
mov
jns
rol
xor
ins
repz
mov
js
xor
push
and
adc
out
sbb
(bad)
rcr
or
xor
add
pop
add
ja
mov
xor
popa
mov
mov
fisttp
pusha
xor
enter
test
rol
inc
mov
dec
push
mov
and
(bad)
and
xor
aad
fwait
test
push
or
or
pop
cmp
adc
xor
pushf
les
push
or
shl
and
jo
sub
(bad)
ja
stos
(bad)
stc
loop
ror
cdq
jae
dec
jle
in
sahf
inc
dec
jbe
aad
lea
cli
arpl
sbb
push
lock
mov
enter
inc
lock
(bad)
mov
cmp
mov
scas
or
neg
rol
test
enter
xor
xchg
nop
xor
dec
into
adc
inc
xchg
int
cmp
push
push
mov
aam
test
cdq
ja
fwait
and
push
in
mov
adc
lds
xchg
add
add
mov
and
aad
test
jo
cli
push
or
out
sub
jl
cmc
jle
add
jns
out
or
lahf
lods
in
xchg
shl
aas
xchg
jle
pop
fnstsw
push
ror
adc
jnp
or
adc
inc
xchg
inc
sar
inc
jge
aaa
shl
sub
and
ror
xchg
adc
xor
or
js
lea
push
loopne
and
dec
test
xor
xchg
or
pop
fcmovnb
mov
das
(bad)
cmc
mov
daa
ins
pop
cmp
xchg
jae
xchg
repz
sub
outs
jmp
js
sbb
mov
retf
and
sti
xchg
sti
(bad)
pop
sti
in
imul
popa
adc
rcr
push
mov
jecxz
jmp
stos
(bad)
ftst
shl
or
sbb
inc
xchg
test
push
cmp
or
cmp
call
push
sbb
(bad)
mov
pop
dec
pop
test
sub
fdiv
xchg
mov
(bad)
aas
and
or
sub
inc
xor
mov
sub
xchg
xchg
mov
leave
pop
push
jle
sub
lock
rcr
or
ret
mov
inc
inc
test
ss
mov
cld
mov
sub
ins
xchg
jl
add
jle
jg
pop
jbe
loopne
shr
cmp
dec
add
inc
in
xor
xlat
imul
jl
aad
cld
test
mov
jg
scas
inc
xchg
scas
mov
out
repnz
test
and
bound
je
mov
pop
sbb
loop
into
xchg
imul
xor
and
test
enter
jle
aaa
push
aam
ds
repnz
mov
shl
adc
rcr
popa
push
mov
dec
mov
or
and
lahf
mov
popa
add
cld
push
loop
popa
dec
pop
cwde
mov
push
mov
jg
pop
or
shl
xchg
pop
aaa
cdq
push
cmp
(bad)
js
push
xor
stc
and
and
mov
ins
xor
out
xor
xchg
mov
jecxz
in
lock
(bad)
lds
xor
jle
ss
cmc
fisttp
sub
ret
sar
inc
outs
js
sbb
mov
mov
inc
adc
mov
call
adc
loop
xchg
pop
enter
inc
loopne
jno
pop
pop
inc
(bad)
cmp
nop
mov
std
pop
repnz
int
mov
sbb
adc
outs
adc
add
cmps
add
jmp
adc
imul
add
push
inc
int
cmps
int
lock
fnstsw
xchg
fwait
out
aam
inc
inc
pop
dec
pop
dec
lea
int3
xchg
out
or
push
cs
aaa
xor
and
pop
jp
cwde
xor
pushf
pop
sub
mov
movs
pusha
sub
in
push
add
stos
nop
leave
pop
icebp
cmp
xchg
sar
in
in
mov
cmp
mov
cmovae
loopne
rep
retf
xchg
jbe
cmp
cmp
adc
and
cmps
pushf
cs
or
add
mov
push
dec
dec
sbb
xor
movd
xchg
(bad)
sub
cwde
jecxz
xchg
cli
imul
push
xor
adc
popf
scas
jmp
enter
push
pop
leave
out
ja
adc
push
mov
adc
into
adc
push
adc
test
xor
inc
sub
lods
ret
movs
test
cmp
outs
icebp
fs
dec
jno
cmp
sub
and
push
int
dec
pop
jle
int3
lea
pop
pop
push
xchg
mov
enter
out
ss
pop
lahf
mov
inc
cdq
push
mov
mov
pop
hlt
cmps
outs
xchg
(bad)
push
mov
mov
rcr
cmp
sub
pop
mov
das
rol
retf
in
mov
sub
js
add
adc
mul
jmp
call
or
jne
jne
dec
idiv
xchg
dec
add
xchg
xchg
out
loope
jl
test
xlat
mov
imul
stos
xor
loope
rcl
imul
sub
xchg
add
push
or
inc
out
not
mov
add
mov
or
sub
xor
jae
sti
les
stos
sbb
dec
aaa
push
dec
cdq
pop
jae
or
cmp
mov
push
lahf
cdq
cmc
test
or
and
mov
mov
out
pop
xor
xlat
hlt
lods
cmp
retf
xor
jl
addr16
mov
aad
jb
pop
div
int3
add
mov
test
fsubr
and
or
jmp
iret
adc
lahf
fcmovu
or
push
lods
test
(bad)
aas
cs
fcmovb
aas
in
loope
sub
push
mov
sub
fcom
int
cmps
push
fstp
inc
sbb
or
cmc
mov
or
test
or
push
test
(bad)
mov
inc
sar
jl
inc
daa
mov
jae
sar
push
inc
xchg
sahf
mov
push
outs
xchg
loope
fisttp
mov
div
popf
pop
xor
fs
or
dec
mov
mov
pop
xchg
push
cmp
mov
rcr
jge
gs
or
mov
mov
(bad)
pop
es
(bad)
loopne
jne
cmp
sahf
xchg
cmp
mov
add
add
xor
and
test
or
pop
add
sub
cwde
cli
imul
loop
dec
push
and
sahf
xchg
xchg
es
das
add
xchg
xchg
pop
int3
test
les
bound
gs
sbb
stos
(bad)
mov
sbb
pop
stos
int3
sbb
add
xor
(bad)
jb
inc
sbb
mov
pushf
pop
icebp
adc
aad
cmp
mov
jno
leave
push
mov
mul
jecxz
xor
ins
xor
inc
call
jbe
pop
mov
daa
jle
pop
sahf
ret
jne
jg
push
imul
adc
xchg
push
sbb
loope
ss
mov
dec
fnstenv
mov
in
jnp
mov
(bad)
cwde
push
cmp
popf
pop
mov
mov
sub
or
stc
loope
lock
shl
fsub
lods
scas
xchg
xor
loope
sub
mov
mov
and
dec
scas
push
nop
repnz
mov
jl
xchg
xor
xchg
ja
ffree
into
mul
dec
mov
jb
pop
sub
jno
loope
jmp
in
gs
(bad)
outs
push
xor
shl
adc
es
mov
or
cmps
push
mov
jg
jl
ror
cmps
dec
add
test
fidiv
sub
jl
xacquire
sub
cmp
xor
xchg
pop
adc
js
xchg
or
cdq
sub
out
je
aas
mov
dec
push
cld
dec
popa
scas
mov
inc
jbe
dec
xchg
mov
xchg
jae
pop
ror
dec
jo
and
cmp
pop
sbb
dec
xor
inc
(bad)
sub
loope
test
adc
sbb
fsubr
ins
add
push
lds
add
sbb
and
(bad)
out
sub
pop
loopne
mov
xchg
or
mov
pop
out
nop
pop
add
int
and
adc
fcom
test
stos
pop
add
int
jmp
(bad)
inc
xor
pop
xor
pusha
inc
sbb
shr
xchg
sbb
loope
mov
or
adc
xchg
push
iret
pop
fimul
inc
xchg
pop
xchg
push
pop
icebp
mov
jp
mov
scas
cmp
xor
adc
imul
mov
iret
int
fild
cmps
into
call
ss
in
div
scas
jo
add
inc
int3
ret
pusha
mov
fstp
cmps
jmp
xchg
adc
push
or
xchg
fidiv
adc
sbb
enter
sbb
stos
sbb
lods
push
cdq
jno
xor
cli
jae
std
xchg
popf
imul
int3
not
inc
or
test
aam
xchg
push
addr16
leave
adc
call
das
xchg
add
inc
and
mov
ud1
sbb
jmp
es
mov
dec
ret
xchg
and
lea
jo
or
aaa
mov
(bad)
add
and
div
cli
test
int
pusha
pop
dec
adc
stos
push
mov
outs
add
xchg
test
ret
sub
jno
into
call
add
jae
ror
adc
ret
dec
xor
mov
mov
sub
nop
(bad)
(bad)
jmp
cwde
stc
clc
and
pop
retf
and
pop
inc
mov
ret
call
popf
cld
xor
pop
pop
mov
or
loope
add
cmp
jmp
push
cmps
push
mov
mov
pop
int
jns
or
out
add
xchg
pop
sbb
or
ret
(bad)
cmp
xchg
sub
cmps
jo
push
lods
loopne
les
or
ins
dec
mov
or
push
sub
fst
push
jmp
mov
dec
cli
test
mov
fsubr
and
jno
arpl
ret
sub
ret
or
loope
mov
lea
sbb
add
add
bound
jmp
cmp
int3
call
inc
jb
add
lahf
and
sbb
(bad)
call
aas
stc
test
sbb
dec
cs
xor
pop
mov
xchg
push
rcl
push
repnz
jne
xor
stc
sub
inc
sub
mov
mov
std
inc
pop
sbb
pop
inc
bound
ins
sub
mov
dec
fs
jnp
dec
daa
and
cs
mov
mov
fs
xor
fistp
mov
sbb
ja
cdq
lods
or
or
aam
(bad)
mov
cmp
push
pop
or
sub
in
imul
pop
imul
fwait
and
xor
or
mul
xor
adc
fsubr
(bad)
jo
sahf
push
cmp
ds
inc
paddsb
sub
jg
mov
add
inc
iret
mov
test
pop
scas
inc
shl
(bad)
sbb
dec
sbb
int3
cdq
cmp
into
fwait
iret
xchg
addr16
or
jns
jmp
into
movs
push
xchg
fld
xchg
loopne
or
in
fstp
lds
adc
inc
push
push
xor
loop
sbb
shl
fisubr
mov
xor
push
xchg
shl
aaa
inc
pushf
nop
push
and
leave
pop
loope
pop
pop
inc
jno
xor
jg
idiv
sbb
xor
pop
jo
cmp
into
xor
dec
lods
adc
inc
arpl
pop
outs
sub
pop
pushf
and
std
pushf
mov
xor
jg
push
mov
cwde
sbb
cmp
and
jnp
mov
dec
inc
push
loope
and
push
scas
dec
jle
adc
out
aaa
test
jmp
sahf
enter
sbb
sbb
pushf
scas
stc
sub
mov
hlt
xchg
jns
mov
rcr
int3
out
or
push
sar
mov
sbb
fs
sahf
or
mov
mov
and
iret
jne
test
and
sub
xchg
pop
xlat
push
fs
dec
xor
jmp
sbb
mov
das
pop
lds
(bad)
pop
lods
mov
fimul
jnp
cs
std
cmp
aad
inc
out
pop
mov
leave
mov
mov
push
js
cld
push
icebp
mov
pop
test
and
movs
neg
ins
jle
lods
outs
lods
out
int3
adc
push
shr
xchg
push
adc
mov
cmc
inc
daa
inc
les
(bad)
xor
ss
inc
mov
call
(bad)
fild
call
outs
dec
add
in
or
icebp
xor
imul
enter
cmp
aad
sub
jle
xchg
sbb
add
push
jbe
push
ss
mov
xchg
fs
pop
push
mov
push
icebp
enter
addr16
push
imul
mov
mov
pop
int3
fst
mov
out
mov
imul
add
aas
cmps
lods
dec
jnp
jge
bswap
inc
adc
mov
adc
adc
xchg
pop
mov
push
test
ja
jb
fcmovb
add
dec
xchg
jnp
lea
pop
cmps
mov
test
cwde
call
iret
sar
repnz
push
sub
ret
push
adc
and
bound
inc
sub
mov
mov
jl
test
jnp
mov
cs
sar
push
lods
or
pushf
xchg
ss
sbb
lods
dec
push
ret
sets
add
es
dec
dec
sbb
adc
mov
arpl
and
loope
xor
cmp
ss
pusha
mov
xchg
dec
sar
mov
scas
cld
mov
es
push
movs
xchg
dec
sub
inc
xor
movs
jne
sti
out
xor
mov
mov
push
sbb
push
sub
in
mov
cvtpi2ps
fimul
dec
into
jle
out
(bad)
idiv
(bad)
add
out
stc
xchg
mov
pop
inc
cs
mov
out
dec
test
sub
push
or
popf
mov
movs
loopne
stos
imul
shld
mov
shl
sub
sbb
cmps
fisubr
and
out
push
jne
cmps
mov
test
jb
cmps
cmps
arpl
dec
push
into
inc
sub
and
dec
push
imul
(bad)
imul
sub
mov
repnz
cmp
sbb
mov
jge
push
mov
cs
and
in
adc
xchg
stc
test
dec
xchg
inc
out
sahf
cmp
nop
jge
fstp
and
popf
xor
ins
dec
push
inc
ins
mov
xlat
(bad)
ins
scas
jg
gs
mov
xor
loopne
cli
stc
cvttps2pi
and
es
int
xor
xor
imul
xor
mov
sahf
adc
(bad)
push
mov
mov
mov
in
xchg
enter
bound
lea
popa
push
jno
popa
push
fidivr
outs
std
push
jge
frndint
loopne
jbe
add
jb
shl
jl
pop
stos
arpl
mov
lahf
into
in
repnz
icebp
lds
cmps
movs
xchg
cmp
pop
cdq
inc
or
jb
inc
sbb
pop
ss
fcmovb
int3
adc
pop
xchg
int
stos
inc
repnz
cli
(bad)
mov
cmp
sub
mov
hlt
repz
jg
mov
outs
call
xor
(bad)
jo
cmp
jne
int3
pop
push
loope
push
out
mov
mov
fnstsw
(bad)
out
sbb
cmps
mov
dec
dec
cli
or
stos
fimul
mov
jge
hlt
xor
adc
cmps
and
mov
pop
outs
jno
cdq
lods
xor
rcr
adc
sub
mov
pop
or
cmc
add
adc
and
push
and
scas
inc
jnp
lods
dec
sub
jmp
cmp
xor
jmp
or
out
mul
shl
fwait
and
cld
cmp
sub
loop
cmp
cdq
mov
pop
mov
in
stos
dec
inc
mov
retf
sub
or
xchg
push
mov
test
pop
sbb
pop
std
fdivr
inc
fsub
xchg
sti
jmp
or
stos
mov
xor
scas
sub
pushf
pop
pop
mov
gs
(bad)
std
test
loopne
call
push
fstp
cmp
icebp
fcmovnbe
(bad)
in
imul
pop
seto
arpl
sub
fwait
jecxz
push
lahf
ins
dec
(bad)
cmps
ret
sbb
xchg
shl
adc
push
xchg
adc
out
mov
stos
outs
pop
mov
jmp
cwde
in
push
out
ror
mov
pop
stc
xlat
fwait
loop
hlt
call
add
jl
cs
sbb
mov
jl
movs
inc
mov
pop
sbb
xor
and
stos
sbb
and
inc
aas
cmp
clc
repz
call
mov
mov
dec
mov
lock
call
sar
jecxz
push
enter
es
dec
icebp
aas
sub
mov
rol
imul
test
(bad)
cld
cli
enter
out
sbb
ins
js
mov
adc
pop
sbb
xor
cdq
mov
xor
push
push
cmp
mov
push
cmp
(bad)
cmp
push
sub
and
leave
cmp
push
loop
out
mov
aad
ds
mov
mov
imul
cmp
test
dec
imul
leave
mov
xchg
data16
in
mov
sub
dec
dec
adc
xchg
and
bound
daa
inc
xchg
fimul
adc
sub
jno
std
ret
and
dec
ins
adc
aas
or
jg
mov
outs
fadd
pop
hlt
fimul
lock
mov
fmul
stos
stc
push
int
cmp
fcom
pop
movs
(bad)
cmc
push
jnp
nop
mov
push
sbb
push
xor
xlat
imul
addr16
loopne
mov
lock
mov
jmp
stc
pop
pushf
nop
push
inc
out
xchg
jle
cwde
jmp
xchg
test
es
push
gs
dec
add
ins
aaa
inc
cmps
call
das
pop
jno
xor
add
push
mov
dec
push
out
fs
push
pop
test
jmp
loop
push
scas
fs
fidiv
xor
mov
jno
push
pusha
ret
cmp
mov
mov
rcr
popf
add
and
mov
dec
inc
mov
hlt
mov
dec
retf
adc
xchg
sar
jmp
jle
sub
or
mov
int3
mov
test
icebp
dec
xchg
adc
imul
push
shr
lock
add
sub
pusha
xchg
je
mov
movs
test
(bad)
adc
xchg
(bad)
xchg
pop
mov
aam
ins
push
mov
pop
add
out
retf
daa
add
loope
sar
xchg
data16
sub
es
test
mov
jp
inc
mov
repnz
int
adc
aam
in
inc
xchg
test
mov
xchg
outs
(bad)
sti
jnp
add
sbb
ja
outs
cmc
mov
sar
lahf
mov
dec
in
push
xchg
ins
clc
out
and
mov
jb
push
mov
xchg
adc
pop
ror
retf
xlat
cmp
sub
icebp
cmp
jns
je
icebp
mov
sub
pushf
call
push
into
push
sbb
xchg
cmp
mov
add
imul
dec
out
arpl
scas
mov
gs
shl
fdiv
jno
aam
rol
sahf
sti
out
dec
push
mov
adc
inc
inc
xchg
or
scas
out
and
movs
push
xor
pop
and
fidiv
inc
cmc
pop
js
push
pop
push
aad
sbb
ja
add
fisubr
or
mov
and
repz
and
addr16
push
mov
in
push
leave
in
ja
(bad)
aas
push
pop
or
adc
outs
in
hlt
pop
(bad)
sbb
mov
jmp
and
jle
and
cmp
jno
sbb
aas
mov
cmps
sub
in
out
repz
dec
int3
test
mov
icebp
jnp
xor
push
ret
sub
add
adc
xchg
mov
mov
(bad)
adc
mov
pop
cs
jmp
data16
leave
adc
sbb
adc
jl
cwde
jnp
in
add
xchg
adc
xor
out
cmp
xchg
test
add
pop
lea
rol
or
imul
inc
mov
add
in
dec
sub
aas
mov
add
mov
and
xor
sbb
cmp
xor
sub
retf
retf
inc
mov
xor
jb
call
or
lods
ret
pop
sti
lahf
(bad)
int
xor
les
adc
dec
add
cmps
mov
in
mov
push
fild
or
dec
shr
pop
int3
hlt
ret
std
xor
pop
(bad)
fwait
adc
js
push
and
dec
jmp
loop
shl
add
mov
mov
mov
(bad)
jb
push
dec
pop
pushf
push
xor
hlt
push
push
push
aas
setb
shr
xor
xchg
jmp
repz
call
aaa
or
mov
ds
sahf
cmp
sub
xchg
sbb
xor
and
sub
mov
int3
scas
xor
(bad)
cld
mov
xchg
stos
jns
sti
jp
and
push
int3
out
add
lods
add
retf
ret
es
sub
jl
dec
and
inc
xlat
push
pop
popa
es
(bad)
pop
arpl
out
fcom
sub
push
adc
ret
mov
pop
imul
ins
pop
pop
pop
add
and
mov
and
scas
mov
cmp
adc
and
in
pop
(bad)
jp
retf
push
dec
mov
aas
data16
pushf
stos
push
ja
mov
std
xrelease
retf
cdq
int3
cmps
dec
pop
push
and
inc
mov
push
mov
(bad)
(bad)
mov
ficom
popa
sub
mov
xchg
pop
(bad)
shl
sahf
mov
sub
adc
cmps
cmps
mov
cmp
lods
add
sar
xor
mov
mov
sub
push
or
out
cmps
mov
lods
int3
out
mov
mov
rol
cmc
mov
lds
cmp
dec
(bad)
mov
scas
fs
jmp
and
outs
push
int
pop
sahf
push
cli
add
sbb
adc
push
push
xchg
xchg
enter
mov
arpl
push
dec
les
inc
pop
dec
test
jmp
nop
cmp
call
mov
jne
xor
or
cwde
fwait
call
mov
imul
jmp
(bad)
data16
js
scas
sub
repnz
pop
clc
jne
push
out
cmps
imul
xchg
dec
pop
frstor
es
sub
ins
mov
jne
mov
dec
pop
jg
xchg
pop
cs
popa
pop
pop
test
dec
mov
outs
xchg
dec
pop
xor
enter
idiv
(bad)
es
xchg
cmps
push
xor
les
sar
clc
cdq
cmp
mov
jecxz
movs
shr
xchg
nop
mov
out
add
in
jno
arpl
mov
cmp
pop
lods
dec
call
jnp
or
mov
ins
xor
cmp
std
mov
mov
mov
cmp
push
int3
pop
pop
sbb
and
fwait
and
mov
jp
sbb
jl
dec
retf
rcl
adc
push
mov
in
mov
sbb
sti
test
scas
push
push
and
ja
dec
sahf
pusha
(bad)
or
pop
lds
ret
push
mov
icebp
hlt
add
mov
lock
push
and
adc
mov
mov
std
cmp
fldenv
or
push
xchg
mov
das
mov
and
adc
push
retf
adc
fmul
jmp
mov
xor
movs
jl
fimul
inc
jl
ins
push
fsubr
aam
cmps
jge
xor
sbb
push
push
xchg
popf
inc
cmp
test
mov
ins
jecxz
sahf
fs
sahf
sahf
push
push
pop
mov
xor
inc
mov
loopne
pusha
loopne
pop
pop
push
imul
sbb
repnz
mov
sub
mov
mov
push
pop
mov
ins
je
sar
test
xor
shl
adc
adc
xchg
cmp
sub
ret
std
mov
dec
jge
inc
movs
mov
add
xchg
retf
sub
rol
aaa
daa
(bad)
mov
fs
call
mov
add
push
and
cmp
and
cmp
mov
inc
fstp
lods
jle
add
jne
pop
scas
js
sub
icebp
push
push
(bad)
mov
test
or
out
xchg
js
mov
push
movs
js
xchg
push
das
sbb
pop
inc
jge
adc
jo
in
gs
push
xchg
sbb
or
mov
dec
inc
jecxz
shl
and
sub
jo
hlt
or
sbb
repnz
leave
enter
aas
outs
mov
dec
shr
ss
lods
jbe
pushf
sub
mov
cmc
(bad)
in
xor
inc
xor
dec
cmp
int3
inc
push
cmp
fldcw
fcom
cmps
lds
out
push
sub
lock
cs
int3
mov
cmps
jmp
fisubr
add
jmp
lea
xchg
hlt
adc
sar
pop
ss
cwde
dec
shr
mov
push
xchg
dec
cmp
add
cwde
jns
lock
sub
cli
lods
mov
sbb
push
imul
test
mov
test
ror
push
dec
mov
inc
fcom
cmp
xor
cmp
dec
je
nop
mov
imul
les
and
in
das
dec
xlat
mov
cmp
lods
movs
pushf
adc
repnz
add
sbb
adc
ret
pop
loope
repz
scas
fstp
call
mov
pushf
xor
sbb
add
pop
cdq
(bad)
bound
sub
jae
and
xor
pop
dec
mov
jecxz
into
adc
and
dec
mov
shl
add
int3
rol
fcomp
mov
cmc
sbb
pop
fidivr
sub
pop
fistp
cdq
lods
or
loop
xchg
ret
dec
jnp
adc
(bad)
(bad)
fisub
shl
out
ja
(bad)
int3
ins
test
js
adc
xchg
jns
mov
shr
shl
out
pop
xadd
popa
das
sar
jge
retf
cmp
mov
xchg
adc
repnz
and
lea
mov
mov
and
mov
ret
fwait
repz
adc
cmc
js
addr16
inc
fist
rcr
sbb
jecxz
xchg
cmp
dec
ss
inc
inc
dec
dec
push
lds
enter
pop
push
adc
push
mov
dec
fsub
push
mov
bnd
sbb
adc
pop
xchg
hlt
pop
(bad)
ss
adc
jo
ja
push
pop
cmp
fs
cmp
mov
and
push
addr16
mov
nop
push
fcomp
sub
and
dec
xchg
jge
dec
dec
adc
stc
popa
xchg
pushf
pop
gs
add
mov
es
mov
fistp
pop
inc
dec
cwde
mov
mov
xchg
mov
mov
xor
and
add
jne
fdivp
sbb
bound
add
mov
cmp
ins
cmc
aam
lock
loop
stos
push
dec
test
push
push
add
jne
jge
or
rcr
pop
fisttp
inc
add
dec
test
pop
sbb
sub
and
cmc
hlt
retf
mov
pop
sbb
(bad)
in
mov
xchg
mov
loope
test
cwde
dec
lock
int3
std
cmp
es
test
sub
ja
inc
mov
mov
pop
sub
loop
and
xchg
int3
push
das
xchg
(bad)
fisttp
retf
mov
sub
mov
push
nop
stos
inc
mov
sub
xchg
ja
inc
(bad)
sbb
pop
pop
mov
sub
mov
inc
xor
mov
cmps
std
cmp
adc
es
push
test
addr16
ins
mov
repz
aad
fpatan
mov
in
or
pop
xchg
in
jb
inc
jns
lahf
fs
les
push
jbe
sbb
fstp
(bad)
jmp
(bad)
cmp
jne
push
enter
push
push
dec
adc
xor
mov
dec
pop
lahf
aad
call
adc
fs
pop
dec
cmp
push
jne
cli
mov
push
out
cs
ret
imul
push
xchg
lock
and
push
in
adc
shr
in
push
(bad)
hlt
rol
les
hlt
(bad)
stc
pop
pop
data16
pushf
xor
stc
in
add
pop
and
dec
addr16
mov
lock
out
and
add
xchg
jl
int
sub
cmps
das
mov
fdivrp
sub
fisubr
call
test
pop
sub
xchg
imul
mov
or
inc
xchg
in
ins
addr16
xchg
cmp
rcl
std
in
jge
ret
lds
(bad)
adc
test
outs
lods
mov
repnz
jmp
mov
jnp
jo
jg
pop
and
nop
mov
inc
pop
xor
jbe
sar
mov
pop
mov
addr16
inc
movs
fcmovb
mov
dec
xchg
xor
cmc
or
div
inc
sbb
sahf
add
aaa
pop
or
shr
adc
es
jnp
jo
icebp
sub
xor
leave
cmp
push
test
clc
lock
sar
push
xchg
push
lods
jecxz
clc
dec
jne
fwait
lahf
(bad)
fcomip
jmp
aaa
or
int3
dec
xor
dec
stos
test
xchg
ins
jo
jae
sub
cs
pop
(bad)
cmp
popf
or
or
fist
sar
bound
push
xchg
fdivr
fild
ss
fidiv
mov
hlt
push
je
jmp
std
or
outs
add
rcl
mov
in
sub
shl
sub
ja
sar
leave
push
mov
jl
cmp
cld
mov
mov
fisttp
xchg
loope
inc
fimul
cmps
mov
fisub
and
xchg
cmovg
xchg
repz
inc
mov
ja
cs
or
inc
xor
iret
(bad)
ficomp
(bad)
mov
aaa
pop
div
int3
xchg
push
movs
add
cmp
jmp
pop
enter
leave
inc
or
int
xor
(bad)
jecxz
cdq
xchg
xlat
mov
or
xchg
xor
mov
push
sub
mov
pusha
xor
cmp
jbe
shr
dec
mov
xor
out
jnp
jno
xchg
ror
pop
rcl
into
push
lea
pop
(bad)
adc
mov
cmp
pusha
adc
scas
mov
leave
dec
imul
loope
repnz
and
dec
mov
lods
mov
(bad)
mov
loopne
repnz
inc
xchg
mov
jb
shr
sub
sbb
jae
nop
dec
cmp
fld
test
ror
and
mov
out
jbe
and
xor
xor
(bad)
jmp
push
in
stos
ret
je
jge
hlt
imul
scas
rcr
js
jge
lds
data16
(bad)
pop
mov
loope
daa
int
pushf
ja
lock
pushf
retf
jbe
stos
movs
jg
mov
push
add
out
cmp
mov
lahf
and
fs
ja
shl
push
ins
popa
in
cld
jbe
loopne
inc
jo
push
mov
xchg
loope
adc
xchg
mov
dec
inc
call
addr16
or
icebp
ror
ret
jge
fst
dec
inc
or
xchg
and
cmp
push
rcr
pop
pop
sbb
cmps
mov
or
rcl
sub
dec
or
sbb
jne
xor
ret
loope
(bad)
pop
lods
mov
add
(bad)
repnz
dec
loop
lods
mov
push
xor
fs
or
cli
nop
cmp
out
outs
jo
jns
aam
xchg
or
lock
retf
ds
scas
jecxz
ret
mov
sti
mov
(bad)
sbb
(bad)
repz
cmp
mov
cmp
cwde
sub
fdiv
stos
in
sbb
lods
xor
int3
push
mov
movs
addr16
cmp
test
jle
mov
mov
shl
mov
adc
push
mov
lea
in
stc
jne
inc
push
jmp
cdq
stc
mov
je
addr16
push
push
add
xor
pop
frstor
or
ror
pop
jne
sahf
push
push
imul
add
and
cld
push
xchg
mov
ret
movs
movs
aaa
inc
add
imul
test
mov
stc
movs
cdq
lock
aas
mov
das
mul
sbb
mov
xor
aad
shl
sub
rcr
push
and
cmp
sbb
inc
or
sub
push
mov
fsub
push
inc
adc
shl
adc
dec
push
pop
mov
test
adc
push
leave
icebp
mov
cmp
pushw
xchg
ins
inc
mov
sahf
dec
(bad)
(bad)
jmp
ret
cmp
jecxz
pop
pop
xor
xor
(bad)
adc
cmp
addr16
xor
and
ror
push
cmp
test
int
not
enter
cmp
jecxz
ret
jbe
jnp
mov
gs
fisub
pop
xchg
fdivr
iret
or
xchg
loope
call
sub
cmc
out
stos
ret
mov
push
call
(bad)
xor
test
pushf
in
sbb
inc
jp
or
ficomp
repz
xchg
fadd
addr16
add
(bad)
out
popf
jle
push
retf
mov
adc
mov
shl
test
xor
xor
xchg
mov
stc
loop
cli
mov
loope
gs
jns
add
hlt
pusha
adc
push
xor
or
rol
xchg
dec
cld
jecxz
movs
mov
imul
xchg
mov
jbe
stos
push
jnp
and
stos
lahf
inc
cmps
pop
popf
out
jmp
mov
mov
pushf
stc
xchg
jnp
add
push
test
in
call
cld
(bad)
enter
(bad)
dec
push
mov
cmp
or
cmp
mov
add
(bad)
movs
mov
dec
outs
in
fild
and
cli
mov
stc
dec
xchg
adc
data16
imul
cmp
adc
frstor
push
sbb
pop
dec
adc
sti
mov
ror
xchg
dec
dec
test
scas
fidiv
clc
repz
test
push
sbb
inc
rcl
leave
push
mov
movs
clc
jecxz
and
shr
enter
xlat
jnp
cmp
fdiv
in
adc
push
sub
(bad)
sti
xchg
sbb
test
rol
mov
xor
jp
jns
xor
mov
cmp
pop
imul
jae
clc
xor
aaa
mov
stc
jne
outs
frstor
and
pop
rol
cmc
popa
call
mov
rcr
add
lock
cmp
jmp
pop
inc
cmp
jmp
test
fs
push
add
int3
mov
pop
mov
mov
cmp
jmp
dec
cmp
add
rol
scas
les
scas
add
mov
cdq
mov
imul
dec
outs
xor
rcr
cmp
xchg
pop
mov
sub
icebp
ret
jo
sbb
jmp
out
out
cmp
repnz
rcl
sub
add
(bad)
fcmovnu
mov
js
or
pop
shl
je
push
jp
cmp
xor
fistp
loopne
xchg
jge
push
mov
mov
mov
and
jb
shl
loop
jp
add
dec
ins
sbb
outs
in
data16
stos
dec
ins
lds
mov
mov
seta
and
jno
pop
data16
push
hlt
jno
stc
std
outs
ds
jl
sub
clc
add
inc
int3
in
loope
inc
icebp
repnz
shl
(bad)
mov
pop
jl
mov
mov
push
das
mov
mov
inc
mov
fs
je
in
cmp
adc
bound
ss
adc
add
ins
cld
push
pop
popf
mov
or
in
cmp
fwait
into
cmp
lds
add
out
hlt
add
outs
xor
mov
mov
mov
cmc
mov
mov
dec
jbe
ss
jmp
call
xor
gs
sub
dec
sub
push
pop
mov
(bad)
fbld
mov
push
in
xor
daa
rol
mov
jle
sbb
test
sbb
xor
scas
jl
inc
fiadd
cmc
call
clc
fsubrp
mov
daa
mov
xchg
std
enter
aam
cmp
iret
xchg
sub
scas
fwait
sbb
push
in
leave
jp
xor
imul
add
mov
and
inc
add
xlat
sub
mov
pusha
mov
ins
outs
and
mov
cmps
xor
pop
and
call
jge
add
or
push
push
sbb
mov
lods
xchg
cld
mov
ror
xchg
jno
jbe
adc
inc
in
retf
cld
lea
inc
lahf
cdq
leave
mov
aam
outs
xchg
push
mov
dec
and
jae
pop
test
ret
ret
sub
lds
or
xor
jns
gs
imul
inc
push
xchg
jnp
les
out
mov
ficomp
inc
and
cmova
retf
pop
mov
xchg
inc
push
movs
or
pop
sub
xor
pop
movs
dec
in
xchg
mov
outs
xor
pop
rcl
jns
jmp
and
add
ror
dec
dec
(bad)
mov
movs
jb
std
jno
outs
ss
adc
pop
ret
loop
leave
jecxz
mov
jns
push
mov
cs
fnstenv
jmp
fs
push
rol
fwait
dec
and
test
int3
lods
mov
(bad)
dec
mov
sahf
sahf
rol
ss
jmp
jb
leave
ja
pop
mov
mov
mov
int3
dec
sbb
push
pop
sbb
bound
cmp
shl
cmp
out
adc
mov
mov
push
jae
jno
xchg
or
pop
es
out
sti
ror
popf
repz
push
std
sbb
xchg
stc
enter
sbb
add
popa
not
add
fisub
pop
aam
cmc
jne
dec
fs
mov
push
mov
pop
xadd
movs
arpl
sbb
or
sub
lock
mov
xchg
xchg
mov
mov
fwait
sub
mov
push
pop
sub
push
inc
cld
xchg
push
add
int3
nop
rcl
add
sub
xor
inc
lock
ja
or
push
ss
push
jo
fcmove
ins
adc
inc
dec
cmc
leave
sbb
sub
jmp
mov
xchg
add
fistp
xor
lock
ss
or
sub
cmps
sub
ds
mov
adc
rcr
dec
sbb
jl
fldcw
push
ret
mov
mov
pop
sub
mov
rcl
mov
mov
les
xor
aad
sti
scas
or
push
xchg
push
cmp
xor
or
das
jle
or
pop
bound
xor
je
dec
cmp
fld
test
loop
repz
xor
mov
(bad)
fist
xchg
lods
add
inc
inc
dec
push
jge
inc
dec
mov
in
push
xor
call
push
shr
ret
pop
dec
cmc
add
jg
hlt
test
add
retf
(bad)
(bad)
inc
shr
push
cli
fisttp
lods
mov
jnp
jbe
fbld
add
jno
sub
je
daa
mov
mov
mov
xor
jnp
adc
gs
rol
mov
je
clc
inc
jmp
jg
repz
call
dec
in
jle
lock
pusha
xor
mov
fwait
cmps
ja
and
sub
movs
aas
das
frstor
pop
inc
dec
jl
leave
and
jp
retf
repnz
neg
mov
xchg
sub
ds
jp
adc
sub
cmp
inc
cmc
ss
push
loop
or
sbb
pop
or
pop
cmc
call
js
and
ss
ret
mov
mov
nop
out
push
jge
jmp
xor
outs
clc
jbe
pop
push
push
push
cmp
pop
adc
imul
inc
(bad)
loopne
xor
add
mov
and
fisttp
xchg
dec
ins
mov
inc
pop
in
adc
popf
pop
xor
test
sar
loope
cmp
or
je
add
sar
sbb
stos
dec
mov
rcr
mov
adc
pop
div
xchg
stos
mov
scas
and
(bad)
enter
in
push
pop
mov
mov
push
push
cmp
(bad)
popf
(bad)
iret
cmp
(bad)
ror
mov
inc
out
jnp
mov
mov
jne
enter
pop
in
ins
sahf
fcos
xchg
shl
mov
ss
movs
or
push
(bad)
and
push
arpl
retf
imul
and
sbb
js
test
push
mov
mov
cld
scas
cmp
and
fmulp
xor
(bad)
nop
sub
mov
mov
sub
inc
sbb
(bad)
xchg
xchg
aaa
push
aas
mov
ret
fistp
fisubr
(bad)
pop
por
test
(bad)
ins
movs
in
adc
(bad)
dec
add
xchg
mov
inc
or
cwde
nop
push
ins
pop
mov
mov
outs
xor
inc
jne
cmps
mov
movs
lahf
das
add
pop
or
popa
inc
jo
adc
and
and
or
pop
stos
pop
pop
scas
xor
int
gs
aaa
ins
add
punpckldq
and
scas
lods
jmp
retf
jo
call
pop
clc
retf
popa
cmp
out
cmp
dec
or
add
cli
fs
je
scas
add
outs
jle
jmp
movs
mov
adc
clc
test
sti
sub
das
push
xchg
jmp
add
mov
and
fdiv
fsubr
push
sti
hlt
sbb
jl
xchg
shr
mov
movs
call
dec
stc
fs
sub
repz
pop
push
sbb
popf
jae
jecxz
je
cli
popf
test
imul
jnp
sub
scas
nop
push
popa
retf
jge
cli
mov
xchg
pop
popf
outs
pusha
cmps
ror
movs
mov
mov
sub
lods
add
xor
and
rcl
cli
test
das
mov
bound
outs
pop
repnz
jb
ins
(bad)
pop
pusha
and
(bad)
call
cmps
sub
dec
mov
inc
adc
out
fiadd
fstp
dec
inc
ss
cli
andps
push
jg
or
dec
push
ja
sbb
call
call
dec
push
bound
in
aaa
dec
adc
sub
push
hlt
cs
(bad)
aaa
mov
jbe
xchg
pusha
inc
data16
pop
(bad)
in
push
mov
fisub
pop
push
jno
adc
out
sbb
sbb
push
cmp
mov
cmp
adc
loopne
(bad)
fcomp
sub
jg
push
dec
mov
and
add
and
sub
mov
test
push
test
mov
loope
loop
aas
pusha
adc
enter
sbb
xchg
xchg
stos
fwait
push
icebp
pop
push
xor
sahf
jl
daa
sahf
fcmovb
call
adc
mov
push
push
xor
add
ss
call
icebp
add
add
sbb
cmp
xlat
int3
mov
jae
ret
dec
sub
loopne
mov
in
adc
rcr
dec
cmp
and
push
push
mov
jb
popa
lds
cmp
je
pop
jecxz
and
in
stos
aam
sbb
mov
sub
mov
mov
aad
or
sub
cmp
adc
cmp
leave
jns
push
stos
shr
arpl
mov
xchg
test
push
(bad)
jne
inc
rol
xchg
jo
push
aaa
inc
(bad)
mov
ret
outs
retf
in
(bad)
rcr
push
mov
adc
mov
sbb
pop
mov
sar
fcomp
sti
xchg
push
xor
pop
xlat
or
sahf
loope
cmps
push
jmp
cmp
xor
stos
mov
adc
cmp
pop
icebp
enter
rcl
and
mov
mov
push
test
add
arpl
jae
in
movs
adc
aam
ficomp
pop
lods
bound
mov
fsub
pop
push
mov
cs
jmp
push
je
out
inc
mov
xchg
sub
arpl
pop
ja
xchg
pop
adc
xchg
arpl
fcmovnbe
xchg
dec
jge
iret
mov
mov
aaa
stc
pop
cmp
fistp
push
xchg
test
push
inc
sbb
les
dec
adc
mov
lods
int3
mov
xchg
mov
sbb
cld
sbb
(bad)
movs
adc
iret
push
out
dec
nop
inc
sbb
sub
inc
jle
fimul
ficomp
pop
pushf
out
dec
xor
mov
dec
jne
iret
ror
push
bound
jmp
pop
ja
adc
sbb
aam
movs
out
mov
movs
mov
mov
mov
pusha
(bad)
mov
test
mov
sahf
mov
(bad)
or
aam
mov
jge
jge
je
std
retf
retf
sti
ins
movs
clc
mov
jns
mov
(bad)
std
xor
adc
xlat
jmp
rcr
pop
popf
inc
(bad)
push
jp
ins
or
retf
loope
fcomp
pop
jle
adc
cmc
or
mov
sahf
jb
jmp
dec
imul
loop
shl
adc
jns
push
outs
cmp
push
xchg
aam
aaa
xchg
je
xor
jb
adc
or
xor
div
shl
cli
cmp
sub
sub
cmp
jae
ins
mov
mov
mov
pop
inc
and
pushf
adc
ffree
inc
push
adc
hlt
xchg
sti
cmp
stos
pop
xor
and
sub
loopne
pop
add
jl
sbb
scas
dec
sub
adc
sbb
inc
and
xor
jecxz
int3
out
pop
repnz
sub
adc
jo
movs
adc
or
mov
fs
add
mov
add
xor
jmp
pop
sbb
sahf
xor
mov
imul
dec
and
pop
mov
aas
aam
(bad)
inc
popa
aam
inc
mov
fsubr
movs
sbb
(bad)
cld
dec
cmps
lahf
xchg
cmp
cmp
aad
sti
dec
sbb
in
push
add
aam
or
cmc
pop
cmp
pop
sbb
or
int3
cmc
xchg
std
sbb
sbb
push
xchg
push
cmps
int3
jmp
fwait
adc
xchg
cmps
mov
dec
cmp
push
inc
cdq
and
push
add
out
jns
test
fist
add
and
sbb
cmc
mov
mov
push
fstp
adc
mov
dec
inc
scas
rcr
fs
jo
daa
das
jle
adc
and
out
pop
out
clc
data16
in
and
xchg
fdiv
push
mov
mov
mov
popa
inc
cmp
es
xor
mov
stos
ret
xchg
dec
adc
push
sub
adc
sub
xchg
adc
and
scas
popa
push
push
pop
fbld
cs
mov
aaa
pop
cli
xor
mov
ret
in
(bad)
lea
into
pop
adc
mov
push
pop
js
out
xchg
sbb
adc
and
mov
mov
push
out
pop
sbb
dec
ds
fmul
mov
ja
adc
xor
movs
sub
nop
inc
cmp
outs
gs
mov
imul
mov
mov
push
arpl
xor
(bad)
cdq
inc
cdq
ds
sbb
xchg
shl
adc
jmp
je
popa
aas
int3
or
pop
and
add
loopne
jnp
data16
dec
aas
dec
mov
into
in
cmp
sub
add
hlt
ror
clc
test
les
or
leave
add
pop
test
mov
adc
cs
mov
push
adc
mov
xor
outs
sub
push
cwde
xchg
cwde
sub
jns
jle
fld
mov
xor
or
lods
add
inc
(bad)
adc
jb
mov
movs
push
jo
addr16
dec
inc
shl
and
mov
call
sbb
pop
stos
lea
inc
fidiv
sbb
test
movs
push
cmp
mov
push
or
scas
into
xchg
pop
inc
push
pop
mov
icebp
pop
dec
cld
fmul
lahf
sub
push
popf
iret
dec
dec
call
sahf
(bad)
cdq
push
es
sbb
mov
inc
mov
mov
add
xchg
pop
push
push
jmp
adc
mov
sub
ds
adc
xor
imul
outs
lds
mov
pop
add
stos
jp
jmp
xor
pushf
push
pop
retf
icebp
and
repz
stc
and
je
adc
jne
push
loope
push
jp
mov
sub
pop
test
les
inc
loop
and
xchg
loop
fild
sub
or
adc
fsub
pop
sbb
mov
dec
pop
sub
lods
ror
repnz
test
rcr
adc
pop
jns
jne
stc
and
mov
mov
push
cdq
outs
and
fiadd
rcr
dec
shl
push
gs
cmp
fcmovu
loop
adc
and
lods
(bad)
cmp
cs
dec
jno
pop
mov
repz
dec
push
or
dec
fisubr
into
mov
stos
add
out
frstor
in
sbb
lods
sub
xchg
pop
(bad)
or
mov
add
jnp
and
dec
shr
stos
inc
mov
jne
jle
cmp
fisttp
clc
or
lds
(bad)
ins
inc
xor
loope
into
ins
packuswb
pop
or
scas
xchg
pop
retf
dec
fnstcw
dec
fs
ror
jmp
loope
(bad)
aad
xor
stos
xchg
and
in
in
push
push
xchg
repnz
in
pop
imul
mov
sbb
and
out
pop
sbb
xchg
jne
clc
(bad)
sti
pop
mov
fbld
xchg
dec
add
shr
in
outs
mov
scas
xor
test
loope
cmp
out
xchg
retf
sbb
das
push
jle
ror
movs
or
cli
arpl
fwait
xchg
repnz
sbb
mov
push
popa
jmp
ins
popa
and
sbb
jl
mov
shr
and
jo
pop
sub
sbb
stos
and
jmp
loop
xor
sub
(bad)
mov
cmp
inc
leave
popf
xchg
setb
push
pop
fld
push
mov
sub
in
xor
lods
sbb
sbb
push
dec
pop
push
ja
sbb
dec
add
test
bound
jno
ror
adc
mov
inc
rcr
pop
mul
mov
cld
leave
inc
cmps
mov
call
dec
xchg
jae
sbb
sbb
mov
dec
in
movs
into
out
fnstcw
(bad)
aaa
sbb
add
xor
ins
xor
xchg
leave
dec
lods
xor
test
adc
push
xor
push
mov
sar
push
rcl
in
mov
cwde
aad
rcl
popf
dec
loopne
jb
mov
add
sahf
mov
add
sbb
mov
js
jl
sub
adc
add
pop
xor
and
cld
and
in
aaa
and
cmp
jo
sbb
inc
std
xchg
outs
or
ret
inc
out
int
mov
out
xchg
adc
fcom
cmp
scas
or
dec
popa
mov
fcmovbe
std
sub
and
xchg
in
sbb
xor
cmp
xchg
sub
iret
aaa
sub
fcomp
xlat
sub
pop
pop
adc
push
cld
push
ror
xchg
pop
jle
push
fwait
stos
or
mov
jmp
cmc
add
cmp
movs
bound
pop
test
loope
dec
int3
scas
loopne
arpl
(bad)
xchg
xor
pop
push
repz
sbb
mov
in
xchg
fdiv
pushf
es
rcl
mov
sbb
popa
sub
sbb
pushf
sar
and
(bad)
sbb
call
aas
fstp
and
(bad)
jb
jae
jb
into
cmp
jmp
gs
sub
lods
push
mov
out
mov
stc
ins
or
pop
test
cmp
cmp
xchg
popf
shl
(bad)
jg
lds
movs
test
xor
push
or
pop
jno
cdq
sub
mov
mov
xchg
test
mov
dec
sub
pop
add
mov
icebp
push
popf
xchg
out
sub
je
adc
inc
cli
fcomp
xor
test
jmp
sub
xor
mov
xchg
nop
in
inc
addr16
inc
cmp
clc
(bad)
sbb
mov
fisub
(bad)
cli
aad
inc
xchg
inc
leave
clc
pop
aad
mov
lods
cld
xchg
adc
ja
jmp
pushf
jae
dec
js
or
jmp
ret
repz
xchg
push
enter
icebp
xchg
cmp
mov
mov
pop
xchg
repz
les
retf
mov
inc
cmp
and
cmp
out
shl
pop
retf
cmps
push
mov
adc
mov
(bad)
xchg
push
add
je
aam
lods
xor
aaa
test
and
xor
pop
dec
bnd
add
mov
(bad)
popa
cmp
cmp
std
mov
sbb
xlat
push
add
or
into
das
in
fbld
cld
pop
cmp
cmp
cdq
outs
push
jle
and
xor
or
call
pop
out
xchg
xchg
sub
sbb
xchg
adc
int
and
jns
ds
mov
cmp
and
xchg
repnz
mov
std
ret
mov
repz
(bad)
mov
pusha
sbb
lods
add
cmp
fs
mov
in
cmp
inc
les
cld
popa
xlat
out
pushf
jns
and
test
loopne
jecxz
clc
stos
ret
adc
aad
xchg
add
popa
dec
push
add
mov
mov
jmp
ret
cdq
mov
mov
inc
jno
and
ss
pop
mov
cmp
mov
sbb
test
pop
dec
repz
xchg
scas
jecxz
add
or
xchg
adc
inc
inc
fidiv
push
or
js
test
push
dec
xlat
sar
loopne
adc
cmp
in
ds
cmps
pop
test
cdq
cmc
lock
int3
dec
cmp
pop
push
and
ds
(bad)
and
test
popa
jnp
int3
push
arpl
jp
and
(bad)
xor
xchg
jle
fwait
es
pop
out
or
std
jge
xchg
push
jo
push
adc
loope
in
jmp
push
jmp
add
add
and
sahf
dec
mov
mov
add
xor
jle
sbb
das
or
or
enter
jge
mov
rcl
lds
inc
(bad)
mov
inc
test
repz
and
mov
push
sti
pop
mov
or
jp
fisubr
mov
sbb
hlt
(bad)
(bad)
and
inc
xchg
xchg
rol
mov
or
push
xor
out
dec
ror
sbb
cmp
ret
and
outs
cmp
outs
int
(bad)
and
push
mov
mov
retf
mov
pop
jecxz
lds
jmp
call
mov
push
jge
jecxz
(bad)
shl
enter
mov
add
fnstcw
mov
push
mov
xor
xlat
push
rol
out
xor
fisub
mov
dec
dec
sub
ins
or
sbb
jmp
retf
out
mov
imul
jae
add
aad
in
stos
cmc
sub
cmps
retf
cmp
cld
cld
push
pop
gs
arpl
pop
lds
test
jmp
jmp
dec
int
imul
inc
mov
sbb
dec
jl
pop
inc
(bad)
repnz
enter
and
jmp
enter
jmp
mov
int3
cmp
nop
shr
add
ins
pop
test
push
(bad)
mov
sbb
in
mov
gs
mov
sub
(bad)
int3
add
aam
sub
xchg
ret
rol
adc
ds
mov
sbb
retf
xor
mov
dec
sub
dec
dec
mov
out
aam
cmp
mov
clc
aad
xor
push
push
mov
xchg
out
aam
rol
inc
rcl
scas
cmp
pusha
test
and
sub
div
scas
push
or
(bad)
(bad)
adc
push
adc
stc
ror
cli
mov
sub
xchg
mov
jl
inc
clc
pop
mov
sbb
cmps
fstp
(bad)
pusha
jg
loope
inc
movs
xlat
scas
stc
popf
std
pop
adc
pop
imul
inc
je
inc
add
push
lea
int3
mov
aam
push
mov
popf
call
mov
sbb
xchg
push
int3
test
add
movs
adc
pop
jmp
and
call
xor
pusha
mov
jne
mov
iret
mov
xor
ret
pop
out
add
adc
xchg
and
stos
jae
call
les
and
xchg
imul
sub
lods
cmps
mov
xchg
mov
pop
invd
inc
in
dec
outs
sti
loopne
xor
ins
shr
mov
adc
fsubrp
sub
adc
lods
dec
scas
mov
dec
cs
push
mov
or
imul
pop
jo
add
push
shr
xchg
mov
retf
test
inc
pushf
jecxz
in
mov
in
push
pop
dec
fst
(bad)
add
fisttp
mov
ret
call
adc
mov
dec
ins
or
mov
sub
cdq
je
mov
push
std
pop
pop
fisttp
sub
inc
mov
jnp
adc
out
sbb
mul
cmps
sar
xor
add
dec
adc
mov
in
jae
xchg
fwait
xor
(bad)
sub
fadd
fcomp
or
and
cwde
fistp
sub
iret
cmps
lahf
fcmove
mov
xor
jecxz
or
inc
push
push
and
mov
test
rep
adc
pop
pop
push
int
cmps
pop
test
mov
pop
in
mov
mov
fucomip
jnp
neg
je
into
jo
ins
dec
push
fs
mov
clc
mov
cmps
or
xchg
jne
jecxz
pop
and
outs
div
fdivr
push
xchg
mov
or
aam
mov
mov
or
xor
sub
sahf
jmp
jmp
push
div
psubusb
mov
cmps
fimul
loop
jg
fidiv
and
nop
or
adc
or
xor
mov
pmaxub
adc
stos
fild
icebp
aad
addr16
xor
mov
pop
jae
push
(bad)
adc
sub
push
and
imul
cmp
add
sbb
or
inc
jb
mov
pop
hlt
mov
xchg
retf
mov
jl
lahf
scas
dec
mov
jbe
daa
mov
sub
popa
adc
mov
out
in
cmp
shl
rol
cdq
pop
xchg
mov
xchg
(bad)
adc
rcr
iret
movs
imul
js
and
int
push
(bad)
shr
lahf
repnz
sub
in
pop
sbb
push
clc
fidivr
xchg
(bad)
push
jb
mov
push
cmps
adc
jno
gs
out
out
mov
ret
(bad)
fnstcw
xchg
cmp
push
adc
in
shl
pop
push
add
(bad)
iret
xchg
mov
jns
jecxz
mov
in
test
ror
cmp
or
shr
aam
rcl
cld
stos
addr16
xlat
jb
aad
and
imul
jns
stc
pop
xchg
iret
or
xchg
pop
dec
cdq
in
mov
cmp
ins
pop
dec
dec
mov
push
push
mov
and
js
add
xor
in
mov
jns
mov
ret
lea
mov
pop
div
mov
je
pop
cmc
cmp
jmp
adc
in
lods
stos
pusha
xchg
fimul
sar
in
cli
leave
outs
dec
mov
push
mov
mov
jns
jl
pop
dec
ret
pop
les
sbb
addr16
out
xchg
jmp
or
aad
dec
sbb
mov
push
adc
(bad)
fucomp
out
pusha
lea
mov
gs
jmp
cli
and
and
pusha
ja
and
aam
mov
push
cmc
mov
popa
jge
pop
dec
in
pop
pop
cmps
pop
xor
pop
imul
jnp
cli
ret
scas
adc
dec
cmc
cmp
push
clc
imul
mov
sti
fs
lea
imul
in
rol
pop
test
enter
(bad)
jg
dec
or
sar
(bad)
dec
mov
loopne
icebp
jle
leave
sub
scas
(bad)
mov
push
xlat
lea
jl
mov
jno
in
scas
inc
cmp
sbb
stos
hlt
scas
mov
or
push
jae
mov
add
and
mov
mov
mov
cli
pop
mov
xchg
sub
push
add
aad
mov
out
sub
xchg
mov
loopne
pop
adc
cmps
pop
sbb
adc
mov
dec
jno
sub
(bad)
(bad)
inc
push
scas
dec
add
adc
inc
adc
(bad)
data16
sub
(bad)
jns
daa
sub
fcomp
(bad)
cmps
pop
and
push
jp
repnz
pop
pop
push
sbb
adc
rol
jb
icebp
fsub
cmp
daa
out
dec
test
imul
bnd
lock
xlat
mov
pop
dec
or
push
mov
mov
cmp
jae
cmps
and
retf
xor
xor
in
sub
clc
bnd
ins
push
ret
sahf
jno
iret
stos
pushf
retf
jo
pop
xor
sub
cmps
mov
bnd
sub
push
xchg
in
pop
or
das
inc
pushf
mov
shl
cmps
mov
loope
xor
cmps
inc
and
rcr
sub
jb
pop
pusha
cmp
mov
jg
aam
aad
cwde
or
pop
rcl
cmp
and
cmp
cmc
and
xchg
xor
repz
dec
fld
out
int3
mov
and
int
icebp
adc
iret
adc
jne
push
lahf
arpl
dec
sub
mov
out
pop
xchg
mov
je
jo
enter
xchg
in
and
push
inc
push
and
inc
xor
xchg
js
sbb
or
cmp
frstor
shr
out
xor
or
(bad)
jae
clc
and
imul
test
mov
fdiv
mov
cmps
ror
gs
mov
inc
sar
sbb
out
xchg
ret
sti
dec
or
dec
shr
sbb
jbe
cmps
adc
nop
ins
cmps
gs
adc
or
mov
cmp
aam
add
shl
rcr
xchg
scas
xlat
neg
popa
popf
xor
imul
add
jl
test
and
xchg
out
push
call
jl
sbb
(bad)
call
dec
cmp
sub
into
sahf
sbb
push
hlt
out
outs
pushf
into
jl
pop
std
push
faddp
fwait
les
xchg
jmp
jl
dec
xor
fsubp
lods
sbb
adc
lahf
enter
aam
or
dec
inc
pop
cmc
adc
jp
mov
bswap
cmc
and
push
test
cli
cmp
mov
push
mov
lods
jbe
dec
add
fnstenv
pusha
adc
aad
out
cmp
pop
mov
mov
inc
aas
jle
add
ja
pop
les
call
les
sbb
imul
and
les
lea
fistp
jb
icebp
mov
outs
xchg
xchg
xor
in
arpl
xlat
leave
(bad)
leave
and
les
or
mov
pushf
pop
xchg
add
add
add
adc
jno
add
cmp
loopne
cdq
retf
push
ret
and
cmp
fwait
and
pop
jp
sub
in
lods
ds
pop
clc
loopne
and
push
push
sbb
dec
(bad)
into
aas
push
gs
call
cmp
mov
std
js
sub
sub
sahf
mov
add
sub
scas
int
jae
not
test
popa
pushf
xchg
mov
xchg
jno
test
jge
add
imul
add
fstp
cld
inc
xchg
pop
aaa
stc
jne
push
loope
inc
xchg
and
dec
mov
repnz
pop
fst
sub
aad
pop
adc
push
imul
shr
xor
xchg
(bad)
lock
int3
adc
add
cwde
stos
pop
pop
adc
cmp
push
popf
jne
push
xchg
shl
mov
jae
add
mov
call
fwait
inc
inc
fbld
int
xchg
push
sbb
out
pushf
clc
mov
aas
stc
cmp
sub
(bad)
mov
jecxz
xor
inc
jmp
outs
inc
sub
and
stc
gs
popa
fnstenv
es
es
cmps
jae
push
cmp
(bad)
push
ss
push
push
mov
cmc
ret
shr
jno
test
mov
push
popf
out
adc
in
adc
and
js
fcmovnu
pop
and
iret
mov
mov
jge
pop
jnp
add
clc
fiadd
jns
outs
push
fst
mov
ins
shl
or
outs
dec
repz
mov
jecxz
pop
(bad)
addr16
call
call
or
arpl
jl
adc
repnz
add
movs
inc
aam
jne
mov
push
das
out
dec
test
dec
push
jae
test
xchg
jl
add
mov
jp
cmp
inc
(bad)
loope
sbb
arpl
cmp
xchg
sbb
push
ja
jae
int
scas
clc
pmulhw
fsubrp
movs
sub
ss
cmc
stos
jns
out
cmp
das
ret
xchg
(bad)
lods
lods
and
daa
pop
xlat
or
mov
outs
xchg
or
mov
mov
pop
jge
cmp
ret
into
xor
push
push
adc
std
or
movs
or
sub
adc
mov
sti
(bad)
jmp
push
iret
popa
xchg
into
or
mov
jno
arpl
push
cmp
bound
add
call
fisub
jl
push
ja
jo
test
cmps
test
nop
mov
mov
clc
cdq
pop
(bad)
(bad)
dec
mov
sbb
push
neg
pop
lods
les
loop
or
push
push
mov
or
sub
xchg
mov
jmp
lods
aam
mov
daa
rcr
aad
lods
js
lods
imul
nop
mov
jo
je
icebp
xor
push
(bad)
lock
call
push
mov
rcr
rcr
js
mov
jae
mov
pop
repnz
cmps
leave
lahf
cmp
xor
out
or
mov
pop
jmp
dec
lea
xchg
aas
cmps
sbb
pusha
ret
loop
stos
(bad)
adc
dec
test
(bad)
js
jae
mov
mov
adc
lock
test
rol
(bad)
lahf
arpl
pop
adc
inc
stos
jns
adc
lea
stos
mov
cs
(bad)
jecxz
and
cmp
xor
cld
retf
or
pop
jb
push
(bad)
in
or
loope
retf
mov
cld
and
dec
das
in
sub
aad
pop
push
in
add
jmp
xor
out
push
in
fsubr
xchg
loope
adc
sub
or
adc
les
pushf
sub
mov
aam
add
pushf
into
in
stos
mov
xchg
sub
fild
mov
mov
push
popa
mov
or
popa
ror
fs
fdivr
lds
cmp
xchg
nop
pop
jb
mov
and
fistp
and
inc
push
stos
ss
push
inc
mov
dec
repnz
dec
popa
push
(bad)
mov
dec
mov
xor
or
scas
loopne
test
fistp
dec
out
fdivr
nop
mov
mov
retf
ret
xor
xor
jp
rcr
sub
mov
pop
or
outs
xor
mov
xchg
adc
outs
cwde
cmp
les
out
out
lock
(bad)
call
push
data16
sub
pop
fiadd
gs
pop
jle
jmp
pop
lock
leave
jmp
stos
mov
lock
adc
dec
fnstenv
inc
shr
adc
cmp
push
nop
pop
adc
xchg
out
sub
not
cmps
jns
scas
rol
mov
push
movs
cdq
xlat
pop
shr
inc
jp
test
dec
lahf
xchg
or
retf
mov
outs
les
cs
add
xchg
in
jbe
dec
and
loope
pop
mov
dec
inc
jmp
out
or
pop
mov
iret
mov
das
fwait
jg
hlt
and
lds
or
fimul
sar
push
dec
inc
test
daa
inc
cmp
jne
jae
aad
sti
dec
icebp
sub
adc
in
(bad)
mov
inc
ins
and
ss
bound
js
adc
pushf
sub
(bad)
imul
int3
gs
jecxz
or
push
ss
jbe
jns
lods
push
ds
movs
mov
xor
lods
ret
jnp
inc
or
mov
sub
inc
push
in
xlat
das
or
in
stc
dec
fisubr
(bad)
(bad)
(bad)
pop
ss
lahf
popf
dec
out
aaa
ror
mov
in
or
inc
pushf
lds
mov
lea
push
test
call
outs
fs
cmp
and
or
or
adc
jae
out
enter
repnz
test
jl
stos
jne
clc
call
call
jge
xor
(bad)
lea
sahf
cmp
jnp
xchg
adc
jl
fwait
lock
loop
push
jns
add
push
aam
clc
mov
fwait
jns
lock
ins
sub
mov
ds
xor
cmp
std
jl
sar
loopne
and
pushf
and
jno
je
jns
sti
movs
ret
mov
mov
in
and
(bad)
add
inc
jle
xchg
imul
jno
mov
int
and
dec
(bad)
jp
cmp
dec
call
and
paddusb
xor
test
dec
lahf
dec
je
inc
xor
pushf
jmp
and
pop
sbb
adc
xor
test
ret
pop
mov
rcl
push
sbb
pop
mov
lods
pop
sub
sub
outs
(bad)
lods
pop
mov
and
inc
pop
sbb
aaa
and
icebp
and
push
aaa
es
lods
call
inc
ret
outs
lods
ds
pop
inc
ins
(bad)
loope
jae
inc
mov
std
pop
xor
lock
add
sbb
popf
imul
adc
mov
dec
or
mov
mov
mov
jge
inc
xchg
add
arpl
mov
push
add
jnp
cmp
mov
stc
sti
jle
jp
mov
mov
pop
add
pushf
sbb
cs
push
nop
test
int3
jecxz
cmp
push
in
jl
lods
inc
inc
mov
(bad)
inc
push
jecxz
repz
cdq
cmp
dec
mov
mov
or
pop
int
scas
and
ficom
mov
push
xor
dec
jecxz
popf
jle
push
xor
adc
mov
jns
pusha
adc
xor
xchg
js
popf
jmp
call
adc
push
cmp
scas
fstp
fndisi(8087
inc
ins
ret
sub
add
js
sub
push
mov
in
out
jns
pusha
(bad)
mov
xchg
imul
pusha
mov
mov
mov
in
aad
pop
loopne
xchg
scas
popf
scas
or
(bad)
jmp
(bad)
stc
sti
out
mov
xor
es
jge
pop
ret
xchg
or
test
mov
jl
js
push
shl
cdq
and
adc
jecxz
mov
fidivr
in
mov
mov
push
inc
and
jg
adc
mov
movs
call
fs
out
repnz
das
xchg
adc
movs
mov
daa
repz
cli
mov
popf
mov
adc
dec
stos
into
mov
addr16
jle
xchg
ror
cmps
das
push
icebp
inc
inc
adc
dec
out
push
nop
mov
outs
mov
(bad)
scas
sub
and
nop
xchg
jns
push
inc
test
push
push
pop
sub
(bad)
(bad)
cmps
or
inc
in
lods
dec
push
outs
cmp
in
leave
mov
repnz
inc
mov
or
inc
imul
adc
ins
nop
cld
dec
(bad)
in
cmp
ficom
(bad)
dec
stos
jb
iret
push
fisttp
mov
pop
test
xchg
pop
rcl
loopne
jmp
and
icebp
ret
inc
cmp
sar
mov
stc
ss
aas
retf
aas
mov
jl
call
emms
add
mov
or
or
xchg
add
mov
popa
mov
or
adc
out
sub
jp
xchg
pop
sbb
jge
pop
dec
loopne
jle
out
push
mov
push
mov
loope
pop
push
xchg
fsubrp
les
jle
pop
fidiv
jo
jle
mov
cmp
aas
fldenv
fidiv
fwait
sub
out
xchg
mov
imul
cmc
and
mov
jbe
inc
cli
ror
loopne
sbb
imul
retf
cdq
cmc
xchg
xlat
xor
mov
and
rcr
hlt
fmul
cmp
cmc
(bad)
inc
lds
cmp
arpl
dec
push
bound
out
(bad)
hlt
xchg
mov
sbb
mov
test
adc
and
cwde
out
cmps
lea
mov
dec
mov
shr
inc
xchg
inc
shl
and
out
(bad)
push
sbb
fsubp
stos
jmp
inc
repz
pop
call
inc
and
inc
jnp
cmps
jb
cmc
xor
hlt
jmp
repnz
cmp
shl
mov
mov
xor
retf
cmp
add
mov
sub
dec
cmps
repz
fsub
imul
push
add
pop
sub
imul
test
sahf
mov
xchg
(bad)
(bad)
mov
inc
xchg
popa
jl
and
add
out
sub
mov
sbb
or
pop
xor
mov
mov
sub
xor
push
and
loop
gs
jmp
jbe
aam
cmps
imul
cmps
mov
push
adc
add
xchg
mov
mov
fsub
(bad)
sub
loope
jl
mov
mov
outs
lds
add
xlat
cmp
and
sar
repz
(bad)
xor
sub
mov
or
fs
sbb
rol
xor
xchg
xor
ins
add
lods
aaa
fwait
and
jge
and
inc
dec
pushf
mov
push
je
icebp
mov
(bad)
jbe
dec
js
inc
push
dec
js
inc
fprem
push
(bad)
sar
dec
xchg
fst
dec
repnz
pusha
sub
loope
mov
add
adc
pop
hlt
push
shr
or
xchg
loope
fsubrp
jb
mov
mov
xor
call
jbe
loop
cdq
or
(bad)
fnop
mov
push
test
shr
and
ret
add
retf
jmp
cmp
dec
lods
sbb
sahf
popa
ror
mov
inc
or
mov
sbb
(bad)
sub
cli
jmp
push
cwde
cmp
out
xor
out
aas
ins
push
mov
jmp
hlt
dec
clc
mov
scas
mov
pop
das
mov
dec
dec
or
xor
out
cmps
imul
inc
ror
mov
hlt
enter
dec
cmc
push
pop
ds
fidiv
inc
add
push
pop
lods
sbb
(bad)
cmp
mov
and
xchg
cdq
fs
mov
jmp
ror
xor
and
dec
cmp
adc
push
jmp
cdq
mov
xor
(bad)
inc
repnz
adc
xchg
loope
aad
out
gs
lods
adc
mov
mov
es
add
out
mov
out
in
pop
(bad)
cmp
clc
sbb
std
xor
lds
mov
outs
(bad)
pop
imul
pop
call
loop
bound
dec
add
jae
mov
sbb
sahf
std
retf
fstp
xor
and
mov
jecxz
xchg
jl
loopne
or
xchg
js
jbe
aam
jb
pop
js
mov
mov
jb
jno
mov
test
push
test
cmp
in
pop
dec
pop
pushf
mov
push
out
lahf
(bad)
mov
dec
repnz
cmps
sub
adc
mov
push
fnstcw
inc
xor
xor
add
call
fbstp
sbb
inc
push
push
or
(bad)
stos
or
into
xor
call
mov
jo
add
add
cli
stos
xor
or
lea
pop
clc
inc
test
mov
test
dec
imul
pop
inc
mov
outs
mov
jle
pop
sub
jb
adc
sub
sbb
cmp
(bad)
sbb
dec
push
call
je
pop
dec
movs
cmps
test
and
inc
stos
cld
pop
pusha
xchg
and
test
add
bound
adc
out
dec
leave
fsub
adc
out
and
push
xor
out
ror
(bad)
hlt
ret
xchg
and
pop
dec
fwait
cmp
adc
lahf
jnp
clc
and
in
outs
jmp
pop
into
adc
push
inc
idiv
sub
jno
leave
add
mov
ins
fsubr
ret
in
cmp
lods
bound
push
cld
dec
xor
pop
(bad)
ficom
xor
mov
cmp
xchg
(bad)
push
xchg
mov
popf
pushf
adc
mov
push
outs
xor
mov
fild
sbb
and
repnz
movs
pop
sub
xchg
test
or
lods
in
ret
cmc
xchg
mov
xchg
cmps
into
and
test
(bad)
in
inc
adc
mov
or
sub
jae
in
(bad)
fs
repnz
(bad)
lahf
and
or
mov
stc
jae
outs
and
add
adc
inc
in
fmul
inc
call
retf
jle
pop
pop
test
fucomi
sbb
add
fist
xchg
xchg
adc
dec
call
dec
jbe
xchg
mov
aaa
std
ins
cld
jle
lods
push
pop
ror
ins
popa
ins
sbb
(bad)
cli
dec
leave
ja
outs
pop
jecxz
and
ret
sbb
rol
pop
sti
jnp
lock
lods
(bad)
test
sub
test
retf
clc
dec
push
mov
scas
inc
std
mov
push
pop
push
inc
ficomp
jnp
push
(bad)
jnp
(bad)
adc
dec
ret
fdecstp
dec
stos
xchg
pop
shl
les
mov
mov
add
push
or
inc
xor
icebp
sub
xchg
div
mov
xchg
or
call
aad
push
push
inc
ds
addr16
das
in
pop
inc
push
fcmovnu
or
stos
pushf
inc
cld
gs
les
sti
jecxz
inc
add
test
outs
adc
repz
das
in
call
push
jbe
inc
push
add
movs
sbb
cmp
adc
cmp
push
into
mov
xor
(bad)
and
div
or
neg
mov
or
jmp
cmc
movs
sub
xchg
fcom
fnstsw
ins
mov
cmp
adc
jno
mov
add
jnp
cmc
out
loop
test
popa
fdiv
xchg
jge
imul
dec
outs
sbb
add
(bad)
in
(bad)
jae
jne
stos
rcl
mov
sbb
push
arpl
pop
aaa
jmp
(bad)
(bad)
mov
loop
in
je
sbb
ret
push
dec
sbb
sub
mov
retf
test
inc
clc
push
mov
xchg
add
and
stos
fsubr
je
sti
adc
inc
cmps
jl
push
mov
pop
mov
and
inc
pop
out
xlat
sbb
scas
jmp
outs
scas
xchg
adc
mov
int3
jmp
adc
pop
cmp
daa
outs
test
test
test
aaa
inc
(bad)
(bad)
push
sub
retf
sub
and
inc
das
sub
sub
xchg
scas
lea
ds
push
and
fldenv
xchg
mov
and
les
out
bound
push
int
adc
mov
stos
ror
(bad)
aam
dec
test
dec
mov
sub
mov
and
inc
ja
ds
sbb
xor
and
pop
adc
mov
out
out
call
stos
jmp
outs
xchg
into
mov
test
clc
(bad)
push
sbb
ret
ror
sbb
jne
inc
mov
cmp
push
ret
std
shl
in
mov
cdq
imul
jg
or
push
add
adc
or
test
lods
pop
daa
adc
inc
scas
call
shl
add
stos
loopne
test
add
mov
mov
or
dec
popf
jp
aam
cmps
adc
gs
aas
je
cmp
(bad)
fld
adc
outs
dec
mov
push
sbb
mul
xchg
inc
movs
add
iret
dec
sbb
or
in
aad
das
xchg
test
ret
hlt
es
dec
adc
call
mov
sti
aaa
push
test
inc
cmp
cdq
clc
xchg
pop
mov
push
shr
cmp
pushf
push
mov
daa
sbb
or
out
shl
or
mov
call
push
and
in
ins
call
inc
stos
jns
and
mov
rcl
test
jge
or
and
push
dec
xchg
inc
in
mov
cs
push
arpl
dec
xchg
mov
stos
and
dec
retf
jl
shl
(bad)
and
add
fldcw
pop
sti
push
popa
movs
ins
rcl
mov
xchg
mov
pop
adc
mov
pop
pop
inc
mov
and
jecxz
push
sbb
std
dec
or
cmp
lea
enter
jle
inc
out
cdq
and
or
jnp
push
pop
test
loopne
lds
or
adc
push
mov
cmp
ret
cmps
ror
mov
cwde
add
out
inc
out
push
fild
add
movs
ds
xchg
int
pop
and
xor
xchg
call
jo
dec
push
div
bound
fs
icebp
mov
cmp
mov
iret
cmp
outs
hlt
popf
mov
pop
repz
inc
or
cmp
sbb
scas
ins
mov
mov
inc
repnz
xor
dec
aaa
enter
mov
mov
out
jecxz
and
jmp
or
add
inc
test
mov
mov
jne
dec
mov
mov
sar
push
(bad)
xor
inc
add
pop
xchg
adc
push
cmps
dec
push
adc
stc
push
and
push
cmps
and
pusha
mov
shl
push
lods
jmp
jb
enter
ds
cld
xchg
lods
pop
aad
push
push
or
cmps
xchg
clc
adc
enter
mov
pop
das
imul
cmps
jle
inc
inc
psubb
fst
push
data16
inc
and
jmp
add
dec
int
add
push
mov
dec
ret
jp
pop
push
popf
jle
test
dec
fwait
dec
fldenv
push
int3
out
aaa
push
or
call
lock
xchg
xor
not
add
mov
mov
outs
or
hlt
test
popf
call
jne
pushw
das
xlat
adc
out
nop
call
push
xlat
enter
jg
inc
sub
cmp
jb
sub
jl
mov
mov
sahf
sbb
outs
cdq
rcl
jae
(bad)
aaa
inc
jb
pop
stos
pop
fadd
jl
sti
or
fisub
cmp
mov
aas
and
cmp
rcl
(bad)
out
test
test
jl
add
(bad)
mov
js
mov
jmp
sbb
(bad)
inc
mov
sbb
out
cli
mov
daa
sbb
sub
in
pop
loop
sbb
jg
jmp
sahf
fucomi
dec
cwde
lods
and
cmp
sbb
es
pushf
pop
jmp
push
popa
inc
in
pop
aaa
ins
xor
(bad)
addr16
stc
xchg
mov
jge
jns
adc
dec
adc
int
push
jns
mov
fild
xchg
movs
(bad)
fdivr
lds
movs
add
repnz
mov
mov
mov
pop
enter
xchg
dec
mov
mov
pop
js
aam
adc
call
push
sbb
sub
sti
test
xchg
and
mov
cmps
jl
je
dec
inc
pop
and
push
add
mov
sar
shr
cmc
loopne
lods
xor
fucomp
xor
mov
cdq
mov
mov
adc
and
lock
cwde
(bad)
sti
xor
data16
hlt
cmovge
mov
mov
enter
sbb
mov
ret
test
fadd
adc
cmp
xchg
mov
sub
sbb
inc
dec
push
pop
outs
jle
dec
retf
push
mov
and
out
lds
push
and
inc
add
fsubr
(bad)
std
fisubr
push
fldcw
mov
inc
inc
inc
cmps
pop
inc
test
arpl
push
lock
add
sub
mov
push
add
fisub
xchg
adc
scas
shl
mov
(bad)
pushf
fxch
jp
add
les
or
outs
fisttp
mov
jnp
loope
push
xlat
(bad)
aad
mov
inc
ror
mov
mov
jle
gs
fistp
sbb
(bad)
push
xchg
cmovae
jb
out
pop
test
out
data16
(bad)
(bad)
outs
xchg
test
ret
dec
add
call
daa
cmps
sti
clc
popa
aaa
pushf
cmps
jns
inc
mov
fsub
leave
xlat
xchg
pop
out
loope
push
out
push
addr16
das
fidiv
ds
xor
aaa
jae
mov
and
repnz
aas
fisubr
leave
mov
loope
sub
ret
popa
dec
push
outs
pop
in
sti
loopne
outs
dec
sbb
arpl
jge
pop
in
mov
scas
cmps
xor
pushf
mov
aam
and
sbb
push
or
lock
cwde
or
sti
dec
xor
jo
mov
dec
xlat
(bad)
cmp
jecxz
clc
js
shl
adc
mov
ret
adc
retf
in
inc
push
sbb
ficomp
scas
imul
adc
mov
mov
xor
xor
ror
xor
push
ret
push
aam
test
lahf
mov
dec
mov
jbe
jl
and
xchg
mov
sub
gs
lods
inc
jns
or
inc
icebp
pop
push
mov
inc
push
repnz
sub
push
clc
test
stos
pop
fcomip
dec
bound
ja
mov
xor
sub
mov
inc
(bad)
ror
jmp
repz
xchg
cmp
add
adc
push
lock
push
cdq
jne
nop
int
aam
dec
sub
sbb
hlt
rcr
btc
inc
pusha
xchg
push
cld
and
cmp
imul
push
(bad)
fimul
fisttp
js
icebp
imul
sbb
push
push
jns
mov
jne
pushf
call
retf
add
add
mov
(bad)
jmp
mov
mov
mov
push
lds
clc
cdq
jecxz
cmps
in
mov
outs
jg
push
cmp
sti
sub
push
mov
mov
adc
add
pop
ds
dec
stc
xor
jmp
(bad)
push
jmp
dec
or
mov
enter
fs
pop
push
test
(bad)
lods
pop
mov
inc
fld
and
mov
mov
mov
std
cmc
mov
push
pop
mov
xor
out
or
ja
mov
mov
or
inc
fadd
xchg
cli
data16
xor
sahf
sar
jnp
stc
xchg
ret
xchg
test
sub
popf
pop
inc
mov
push
xchg
ins
call
inc
in
es
rcl
scas
xlat
neg
and
les
test
push
push
xchg
icebp
dec
jmp
xor
jo
push
mov
std
fsub
addr16
and
cmp
jl
pushf
cmc
clc
inc
out
xchg
jg
cwde
lds
ret
movs
lea
jae
call
ins
dec
stc
or
arpl
ins
mov
repnz
pop
daa
ror
imul
jno
mov
rol
cmp
sub
jmp
aaa
mov
call
or
jecxz
pushf
sbb
xor
mov
cdq
and
pop
pop
sub
mov
loop
fucomi
cmp
add
mov
ss
arpl
cmp
sub
(bad)
jg
sbb
mov
int3
clc
test
cdq
clc
mov
push
xor
ja
mov
or
mov
dec
push
cmp
inc
sbb
xchg
mov
sbb
or
pop
xor
or
frstor
jmp
or
jmp
dec
push
loop
pop
sbb
ja
test
mov
or
shr
cmps
outs
scas
xchg
movs
and
outs
mov
pop
cwde
jb
rol
sbb
repz
jb
cwde
xchg
jecxz
pop
lea
cmp
outs
xchg
jecxz
jns
das
js
cmp
mov
mov
rcr
jl
fdivr
clc
pop
aam
push
jne
mov
sbb
popf
mov
adc
lahf
or
es
sbb
pop
xchg
arpl
aad
mov
loope
xchg
sub
cmp
call
pop
call
ret
adc
bound
ror
mov
fadd
sub
rcl
inc
fbstp
lods
cmp
arpl
fisubr
mov
pop
je
loope
push
mov
out
mov
ror
in
push
jb
add
and
cdq
jl
jmp
xor
ja
xor
xor
fld
pop
jg
fwait
or
inc
dec
pop
pop
ja
jno
es
stos
mov
popf
mov
fs
mov
movs
cmp
inc
pop
hlt
sbb
cld
jo
lea
sar
ret
push
ja
sub
ds
push
mov
repnz
pop
push
scas
cdq
call
inc
into
adc
outs
mov
xlat
cmp
or
jp
xchg
or
adc
ss
and
clc
aaa
daa
stos
inc
pop
es
xor
mov
mov
add
jns
(bad)
daa
stc
(bad)
jp
dec
mov
pop
push
push
inc
mov
pop
mov
cwde
popf
icebp
adc
mov
adc
jmp
sub
mov
mov
sbb
jb
cli
out
pop
cmc
dec
adc
scas
inc
jp
mov
repnz
scas
mov
cdq
fcomp
pop
sub
xor
out
jl
loopne
aam
ret
hlt
adc
cmp
addps
repz
mov
pop
js
dec
mov
call
and
imul
adc
push
sahf
pop
retf
imul
fucomip
loop
aad
out
or
add
cli
bound
push
ss
pop
cmc
xchg
push
sbb
in
stos
mov
movs
ss
adc
xlat
test
(bad)
jle
add
mov
mov
inc
dec
bound
(bad)
pop
call
jns
and
pop
test
jl
dec
jae
icebp
arpl
pop
or
and
cmp
dec
out
dec
mov
sbb
scas
ret
ja
or
cmp
dec
mov
jge
aaa
xor
into
jmp
test
cld
fistp
(bad)
mov
adc
(bad)
div
hlt
push
in
cmp
loop
loopne
xchg
push
call
mov
pop
dec
jns
sbb
sub
ror
cmc
icebp
ficomp
loop
jmp
imul
std
mov
(bad)
fild
mov
mov
mov
pushf
pop
mov
pop
(bad)
shl
pusha
sbb
adc
mov
sahf
jae
cli
mov
pop
clc
stc
pusha
add
in
adc
loop
hlt
clc
mov
nop
ja
cdq
jnp
aam
(bad)
fisttp
and
mov
mov
es
push
call
dec
adc
jae
(bad)
ins
addr16
cmp
mov
jl
ss
xchg
sub
sub
push
push
xor
rcr
inc
inc
xchg
adc
clc
lock
aam
ficom
in
aad
out
or
fs
retf
push
aam
pusha
cmc
mov
scas
add
xchg
ret
mov
and
inc
mov
jbe
sub
and
jmp
mov
sbb
enter
ja
sti
fld
aam
aam
les
imul
adc
arpl
(bad)
popf
push
cmp
cmp
inc
sbb
or
ror
mov
sahf
lods
sub
jne
dec
ror
daa
(bad)
lock
ret
outs
rcl
lods
shl
add
aad
js
retf
ds
or
adc
fisttp
and
sub
adc
cmps
mov
outs
jb
inc
enter
rcr
or
addr16
movs
dec
add
out
cmp
mov
inc
outs
pop
pusha
or
neg
jg
retf
or
cmp
inc
pop
shr
adc
fdiv
mov
out
add
push
loope
mov
(bad)
mov
cli
bound
scas
and
rol
inc
cmp
cmps
and
sahf
mov
add
pop
retf
loope
inc
lds
sbb
mov
aad
mov
jmp
adc
mov
cmps
sub
xchg
pop
pop
mov
xchg
cmc
test
inc
ins
jmp
div
popf
xlat
mov
or
call
rol
out
jae
push
xor
and
push
mov
dec
mov
push
fiadd
mov
aam
leave
daa
cmps
div
mov
cmp
jl
rcr
daa
pop
mov
adc
gs
add
test
xor
and
mov
adc
push
xor
sub
(bad)
cmp
xor
xor
xlat
cli
enter
(bad)
jae
aam
pop
or
out
fs
mov
inc
lds
jp
daa
(bad)
sbb
sti
push
inc
call
(bad)
mov
pop
shr
scas
xor
mov
mov
rep
lahf
dec
add
push
and
jne
sbb
cmp
scas
xor
sbb
mov
cmps
and
leave
sbb
pop
adc
stos
outs
outs
aad
push
fs
mov
gs
adc
aad
cmps
loope
jns
out
loopne
je
dec
pushf
adc
(bad)
ins
dec
jp
jns
mov
fisttp
sub
mov
and
push
(bad)
fisub
push
adc
int
into
push
loop
xlat
xlat
jo
test
and
imul
pop
shl
mov
movs
adc
retf
sar
shl
xchg
mov
add
jnp
push
sbb
xchg
cld
adc
add
pop
outs
add
mulps
mov
sar
mov
enter
mov
pop
aaa
mov
jp
jmp
fcomi
jecxz
or
test
mov
(bad)
adc
aam
pop
mov
cdq
mov
pop
or
xor
xchg
aas
movs
xor
daa
mov
mov
jle
dec
sbb
scas
push
xchg
call
outs
push
xor
xor
mov
sbb
mov
inc
xor
xor
mov
int3
(bad)
mov
daa
cmp
lods
xor
idiv
std
cli
cmps
call
test
out
inc
xor
xchg
sbb
ds
fstp
stc
push
fucomp
loop
add
mov
xor
adc
jb
adc
and
or
jbe
push
inc
fs
lods
cmps
shl
loopne
xchg
fild
push
inc
(bad)
call
aas
fdivp
pop
and
movs
inc
mov
imul
retf
sub
adc
push
int
or
push
mov
sbb
sub
mov
xchg
cmc
test
add
gs
das
(bad)
adc
xchg
mov
inc
arpl
or
aas
sahf
int3
push
in
pop
sub
jnp
adc
out
cmp
mov
dec
xor
jle
fwait
sbb
mov
leave
(bad)
scas
sbb
pop
jne
stc
daa
dec
lahf
mov
jmp
push
std
outs
mov
cmp
lds
jmp
xor
cmc
test
ret
cmp
inc
adc
jecxz
cld
dec
cli
push
mov
imul
(bad)
mov
and
cmp
xor
vmwrite
inc
and
cmp
clc
xor
rol
sub
shl
adc
loop
cs
gs
inc
push
pop
lds
lods
dec
add
dec
call
scas
in
repnz
cmp
jmp
outs
and
and
push
leave
adc
dec
sub
out
xor
inc
cli
xor
out
fild
and
pop
lea
xor
xchg
les
fiadd
call
push
mov
push
shl
cmp
xchg
mov
jl
pop
out
lds
pop
and
rcl
sub
sbb
iret
xor
add
(bad)
mov
addr16
and
movs
gs
dec
out
add
pop
nop
int
jns
out
sti
xor
outs
int
push
pop
mov
pop
leave
test
aaa
push
rcr
(bad)
sahf
lahf
pop
repnz
(bad)
cs
mov
cmp
mov
sub
rep
std
into
in
jge
mov
xchg
jno
movs
ja
xchg
inc
push
cld
sub
sbb
outs
push
push
push
stc
lock
rcr
jle
jle
fwait
pop
pop
xor
jmp
jge
cwde
repnz
adc
popf
cdq
ins
xchg
cmps
call
test
adc
lahf
ret
pop
ds
push
in
es
les
lock
push
push
push
inc
xchg
out
iret
fwait
adc
lock
repnz
or
xor
es
in
in
aas
outs
xchg
add
dec
stc
dec
(bad)
cmp
aad
inc
add
je
dec
jge
jbe
mov
pop
sahf
ins
call
sub
xchg
mov
outs
or
jno
push
scas
mov
push
retf
jno
shl
xchg
(bad)
adc
push
mov
cld
pop
mov
and
dec
cmp
and
xor
lods
ins
imul
fcom
(bad)
sbb
neg
mov
cs
pop
or
adc
fs
retf
cmp
push
out
dec
sub
aad
loopne
into
es
or
mov
clc
inc
fnstcw
pop
pop
neg
mov
(bad)
push
in
adc
call
cmp
in
xchg
adc
aam
idiv
dec
fst
loop
push
jb
xor
popa
xchg
es
jg
push
dec
jmp
mov
in
pop
cdq
push
jmp
add
jae
loop
lods
xlat
daa
inc
xor
dec
cli
xlat
add
nop
mov
lahf
out
bt
xor
movs
lods
sahf
mov
jno
test
adc
std
pop
test
lds
sbb
add
cmp
pop
pop
hlt
out
push
adc
not
test
pop
cs
fsubr
test
jbe
mov
adc
stos
jns
lahf
call
lds
sub
adc
push
jecxz
bound
pop
add
push
mov
mov
dec
std
aad
cmp
pop
imul
push
sub
lock
inc
iret
sbb
stos
push
pop
dec
adc
add
inc
inc
sti
into
push
int
push
ja
mov
lea
sub
loopne
jb
jge
and
repnz
xor
lods
cmp
mov
outs
or
mov
dec
out
lock
xor
not
mov
pop
das
or
push
bound
sahf
dec
(bad)
cmovs
cmps
(bad)
call
fdiv
mov
mov
add
push
jne
in
cmp
icebp
sbb
pop
mul
movs
mov
mov
jno
mov
adc
popf
dec
lock
add
stos
inc
jbe
dec
out
(bad)
repz
icebp
sub
outs
outs
xchg
add
push
and
pop
ins
mov
push
pop
inc
clc
push
rcr
push
fdivr
cdq
iret
(bad)
xchg
loopne
mov
cmps
rep
shl
shl
data16
push
xor
fcomp
sti
mov
cmc
cmps
test
sub
fs
daa
pop
in
jae
test
mov
cmp
fs
dec
ret
in
fadd
pop
push
inc
jge
lods
lods
fstp
pop
std
jp
jae
inc
jmp
or
call
std
cmps
pop
movzx
(bad)
mov
adc
shl
jmp
in
pop
pop
pop
cmp
ret
loop
xor
xchg
movs
test
or
and
jmp
push
jmp
push
in
push
cmps
xchg
sbb
push
enter
ds
lds
mov
call
retf
inc
dec
cmps
cld
(bad)
sbb
jae
scas
cmps
sub
mov
dec
jg
sub
pushf
fnsave
cli
stos
outs
out
jns
push
mov
or
stos
mov
pop
adc
mov
mov
mov
call
test
arpl
in
mov
aaa
icebp
add
push
inc
pop
out
inc
adc
pusha
and
xchg
ds
in
push
adc
jmp
adc
iret
fwait
or
clc
retf
out
es
push
xchg
mov
scas
mov
push
stos
jg
hlt
xchg
out
stos
aas
adc
rcl
lds
jmp
mov
mov
sub
cld
cli
fwait
inc
pop
(bad)
push
and
pop
push
inc
or
cld
pop
repnz
push
aas
retf
mov
sbb
push
cs
push
add
in
ds
adc
push
mov
jo
cld
icebp
mov
aaa
dec
or
aas
mov
jns
mov
inc
jnp
ins
add
sbb
and
sub
inc
xchg
jmp
mov
sub
ins
dec
test
lea
add
jne
or
pop
jbe
int
add
push
ror
jo
sub
repz
sbb
inc
imul
sub
sbb
out
mov
enter
hlt
retf
xor
jns
mov
xchg
aad
push
mov
shl
loop
cmp
pop
aam
enter
sbb
mov
outs
dec
mov
fsubr
xchg
lds
movs
lock
cli
fld
sar
push
call
push
jbe
call
shl
push
(bad)
xchg
cmps
push
iret
jne
inc
or
aaa
in
adc
stos
push
xor
jmp
mov
adc
xchg
les
lock
xchg
ret
std
and
and
loope
cmp
xlat
or
mov
aaa
jge
stos
or
outs
cmp
pop
loope
mov
adc
inc
sbb
repz
not
pop
retf
sti
pop
mov
imul
dec
(bad)
lahf
mov
add
mov
mov
inc
mul
inc
(bad)
into
xor
test
(bad)
enter
(bad)
mov
dec
je
xchg
push
jecxz
dec
int
mov
inc
sbb
lock
pushf
jg
or
sub
test
xor
dec
jg
mov
pop
sti
mov
or
idiv
xchg
shl
sbb
pop
fwait
out
mov
inc
or
sbb
push
shl
call
inc
dec
push
xchg
in
icebp
mov
arpl
mov
or
adc
pop
imul
sbb
std
xchg
pop
push
(bad)
imul
cmp
adc
(bad)
or
push
cld
sbb
push
scas
inc
jmp
retf
mov
sti
xchg
cli
jo
push
(bad)
iret
pop
outs
mov
cmp
xor
imul
push
lods
test
nop
dec
inc
pushf
mov
mov
jbe
lods
inc
sar
mov
or
mov
add
sub
fdivp
pop
fs
push
cwde
pop
hlt
jb
inc
stos
mov
xchg
imul
sub
aaa
ror
stos
stos
inc
and
scas
dec
mov
pshufw
test
cmp
mov
sahf
inc
cs
xchg
xchg
movs
pushf
sbb
mov
inc
xor
je
inc
mov
mov
test
mov
adc
mov
int
lock
xor
or
cli
pop
sbb
out
jmp
daa
push
inc
call
out
pushf
mov
dec
and
pop
loopne
pop
mov
push
ja
add
(bad)
ror
push
shl
or
xlat
(bad)
imul
xor
inc
pop
ja
cli
mov
pushf
mov
mov
shr
mov
cmps
or
das
push
sub
mov
mov
dec
bnd
cmp
aaa
pop
in
push
outs
pop
faddp
adc
and
js
or
pop
retf
cmp
popa
xchg
push
leave
dec
(bad)
mov
xor
stos
inc
xchg
jge
out
ret
jmp
les
push
ret
push
(bad)
mov
stos
in
aaa
push
stos
repnz
test
xchg
ret
jbe
sub
(bad)
(bad)
lock
div
(bad)
xor
sbb
fwait
sahf
test
adc
sbb
xor
cmp
inc
movs
test
adc
push
sub
(bad)
sub
or
and
das
cmc
ror
das
fisub
out
push
dec
mov
stos
mov
(bad)
mov
mov
pusha
sbb
cmp
(bad)
aam
jno
test
pusha
sub
jmp
cmp
fdivr
das
inc
add
ficomp
imul
jo
mov
mov
mov
ss
icebp
inc
inc
out
jmp
test
adc
outs
push
out
push
or
lahf
inc
call
push
les
adc
push
test
jae
jge
adc
adc
cmp
pop
jns
sbb
mov
in
mov
rcr
mov
popa
push
mov
add
cmp
or
mov
sub
push
mov
push
out
xchg
scas
mov
sub
repnz
jne
inc
mov
cmp
sbb
mov
mov
add
loop
sti
test
or
outs
mov
and
jae
cdq
pop
out
push
lds
mov
jno
ins
mov
iret
xor
sub
push
int3
not
mov
push
test
add
add
push
retf
xchg
mov
xlat
loope
mov
dec
mov
jnp
jg
jecxz
pop
loopne
add
push
je
sahf
ss
add
in
outs
outs
iret
loop
mov
sub
push
push
std
adc
ret
xor
out
retf
vaddsubps
mov
jno
shl
loop
sbb
cmp
fmul
mov
fwait
mov
repnz
mov
push
cmp
mov
out
mov
jge
push
inc
and
cmp
mov
dec
xor
and
out
mov
jle
leave
jge
(bad)
pop
js
push
push
(bad)
leave
mov
and
add
std
dec
push
hlt
ins
mov
jne
mov
in
xchg
cwde
dec
dec
repnz
frstor
das
mov
shr
bound
mov
sub
mov
shr
jno
fcom
xchg
test
add
(bad)
call
ss
adc
xor
mov
xor
js
jp
sbb
loope
inc
and
cmp
(bad)
cmc
pop
dec
adc
mov
inc
in
pop
mov
push
call
ds
cld
xlat
stos
push
in
jb
dec
mov
fst
pop
sti
push
add
sbb
adc
xor
(bad)
cli
test
mov
xchg
test
out
in
jge
and
mov
dec
adc
dec
push
cmp
shl
sbb
inc
xor
xchg
pop
loopne
ja
jl
jb
add
xchg
aam
shl
sbb
call
(bad)
in
push
cld
ins
lds
mov
mov
adc
sbb
and
sub
rcl
push
dec
stos
or
add
sub
lock
std
push
out
popa
lahf
fdivr
sti
pop
push
cmp
inc
jg
push
out
loopne
mov
jmp
mov
add
xchg
mov
test
sub
xchg
scas
pop
adc
mov
cmp
(bad)
push
mov
mov
out
iret
dec
sbb
fdivr
out
popf
push
jnp
sub
fs
mov
cmp
aas
int
(bad)
ins
pop
mov
fldcw
add
mov
push
sti
dec
mov
arpl
fdivr
sbb
or
sbb
sbb
jae
jmp
arpl
into
jo
pop
arpl
and
sbb
hlt
(bad)
pop
imul
repz
jp
sub
stc
mov
pop
jge
(bad)
es
cmp
lock
and
daa
scas
inc
pop
in
retf
sbb
shl
in
xchg
mov
cli
or
or
ins
pop
add
inc
mov
aam
retf
test
ins
dec
aaa
dec
adc
gs
mov
inc
loop
outs
sbb
cmp
and
inc
mov
out
mov
or
inc
retf
inc
cs
in
in
mov
clc
mov
cmp
inc
cdq
inc
sbb
bound
outs
fsub
scas
or
ins
into
xchg
sub
(bad)
cli
bound
xor
fwait
inc
sbb
clc
xchg
mov
jb
push
in
mov
jbe
call
jl
iret
aam
jg
fs
pop
in
xchg
xchg
rcl
adc
outs
rcr
jmp
push
sub
test
xchg
movs
addr16
cmc
in
ret
out
cmc
jne
iret
outs
jecxz
aam
add
int3
add
pusha
xchg
push
out
cli
rcl
mov
mov
sbb
inc
stc
jecxz
inc
out
push
xchg
xor
sbb
jg
and
addr16
and
adc
mov
test
imul
cwde
fisub
adc
imul
and
jmp
(bad)
call
cmp
add
imul
sub
mov
(bad)
je
outs
sub
dec
add
fs
js
add
and
(bad)
mov
dec
cdq
jmp
add
stc
ret
jle
pop
pop
scas
repz
jb
xor
test
mov
sub
ins
push
cld
mov
das
std
sub
xor
mul
sbb
jmp
jmp
shr
clc
scas
and
or
dec
in
sub
pop
loopne
pop
sub
pop
xchg
adc
(bad)
(bad)
out
dec
xor
std
mov
jmp
scas
inc
out
bound
cmp
icebp
movs
jnp
sub
pop
inc
enter
stos
jmp
jnp
nop
dec
popf
inc
pop
ret
cmps
daa
inc
sti
and
(bad)
mov
fisubr
out
mov
call
adc
xlat
add
lahf
cmp
movs
idiv
xchg
outs
inc
cmp
repnz
sub
add
fsub
stc
fprem
push
ds
and
xchg
xor
(bad)
jge
adc
mov
or
dec
pop
cwde
(bad)
(bad)
stos
(bad)
test
adc
push
xor
mov
popa
xlat
retf
cmp
pop
rol
pop
out
xor
pop
int
bound
push
repnz
ins
add
mov
call
aam
pop
add
mov
or
cmps
loopne
test
pushf
clc
jl
adc
xor
dec
inc
stc
push
call
addr16
xor
add
movs
inc
xor
sbb
cmp
cmp
and
mov
jbe
inc
and
lods
xor
icebp
dec
or
adc
xor
or
mov
popf
std
jbe
lahf
(bad)
int3
ss
test
fiadd
sub
fist
adc
jmp
cmp
mov
sbb
or
jnp
and
inc
mov
outs
xor
push
cli
loopne
push
and
movs
and
lock
aas
fdivr
mov
(bad)
dec
stc
cmp
(bad)
jmp
neg
and
and
xor
(bad)
fild
loopne
pop
jmp
push
sbb
adc
and
xor
push
dec
push
into
jecxz
xchg
repz
in
sub
dec
cmps
ins
sub
mov
cmp
push
out
loope
fisubr
fsubr
or
in
ins
call
cmp
das
(bad)
(bad)
arpl
pop
je
inc
inc
out
arpl
nop
mov
mov
jb
inc
fcmovnbe
repnz
sub
nop
or
loopne
je
xchg
rol
mov
pop
mov
out
push
cli
sbb
into
adc
mov
(bad)
fistp
or
sti
stos
pop
lea
adc
pop
(bad)
add
test
adc
push
cmp
into
or
adc
jmp
jb
or
jecxz
mov
cmp
jmp
aas
mov
xchg
mov
in
dec
xchg
inc
push
xchg
es
into
xlat
popf
push
inc
or
sub
xor
add
sub
pusha
(bad)
loop
mov
test
inc
xchg
adc
das
add
mov
push
(bad)
inc
cmp
sub
lahf
lods
ds
push
jmp
(bad)
or
sbb
mov
clc
inc
xchg
pop
mov
push
in
jnp
enter
std
into
scas
jne
addr16
pop
(bad)
gs
jge
retf
cmp
mov
sub
out
add
cmp
and
inc
adc
dec
mov
aas
btr
push
mov
pop
mov
pop
arpl
pop
mov
pushf
pop
jbe
fbld
sti
lea
lods
jnp
ins
cwde
and
xchg
stos
in
jle
add
ret
dec
sahf
std
jnp
jno
pop
push
movs
cwde
and
jge
icebp
xchg
mov
shr
clc
shl
fcmovnb
sbb
and
and
inc
in
aas
push
mov
dec
inc
cmp
jl
mov
xor
enter
pop
xchg
xchg
mov
jmp
mov
(bad)
jne
xor
jmp
jecxz
repz
fldenv
aam
adc
hlt
jo
lahf
inc
out
xchg
or
(bad)
out
sub
daa
into
and
dec
sti
jnp
xchg
dec
and
mov
out
cld
outs
xor
inc
xor
push
mov
inc
jb
and
and
rol
mov
push
stos
enter
shl
inc
imul
mov
std
test
(bad)
cmp
xor
dec
fdivr
pop
rcl
add
out
cmp
cmps
push
in
fsub
ret
jo
ins
xchg
dec
pop
or
and
push
aad
(bad)
leave
daa
jb
xchg
bound
inc
push
cmps
les
popa
xchg
xor
push
and
pop
stos
jnp
sbb
and
push
cli
mov
loope
adc
cmc
xchg
stc
push
rcr
rsqrtps
jge
xor
push
xchg
sbb
cwde
mov
cs
sahf
jnp
ret
shl
int
mov
arpl
xchg
xchg
mov
popa
mov
jp
das
out
push
sbb
sbb
jo
mov
mov
ss
sbb
shr
add
stos
and
mov
mov
jmp
adc
hlt
shr
lea
xchg
loop
mov
(bad)
mov
mov
adc
push
sub
orps
xchg
push
xor
pusha
stos
(bad)
retf
(bad)
dec
push
mov
mov
cmps
fdivrp
xor
stos
xchg
push
stc
xchg
xor
sbb
pop
adc
and
mov
js
sbb
cld
loopne
push
pop
rcr
mov
sub
jecxz
out
push
jae
mov
ret
jne
in
or
jnp
aas
adc
in
sbb
sub
cmp
mov
iret
mov
cld
ficom
push
mov
add
arpl
add
pop
lods
jp
sub
call
(bad)
movs
mov
sar
mov
push
mov
lods
hlt
test
push
mov
jae
aas
retf
jle
ins
mov
sbb
mov
bound
js
sub
test
imul
out
jb
cmp
mov
add
and
lods
or
int
push
cmp
mov
jmp
adc
(bad)
xchg
adc
mov
pop
pushf
test
imul
jne
dec
pushf
inc
or
test
jmp
jmp
cmps
popf
addr16
cmp
mov
test
call
xchg
in
mov
int
xor
pop
adc
ins
loope
fild
mov
lds
ret
or
test
xchg
and
lea
gs
add
repnz
aaa
cmp
jne
jno
fmul
adc
test
or
out
ja
cdq
cli
popa
pop
int3
push
outs
mov
xchg
sub
(bad)
mov
sti
mov
ins
cmp
int3
push
add
scas
push
sar
das
inc
sbb
shr
das
pusha
pop
stos
mov
cmp
mov
mov
cmps
cdq
jne
pop
stc
xor
and
inc
sub
imul
mov
aad
and
xor
or
pop
js
(bad)
jle
inc
sbb
push
xor
aaa
les
mov
and
add
aam
int3
add
dec
and
in
mov
xchg
(bad)
sbb
cmps
jp
sbb
pop
mov
in
test
sbb
in
add
xor
pop
jle
es
or
mov
jmp
sahf
(bad)
rol
or
adc
sbb
loope
sbb
mov
sbb
retf
mov
xor
jbe
sbb
adc
dec
xchg
add
add
(bad)
xlat
test
push
cmps
xchg
into
(bad)
xor
push
pop
(bad)
cmp
and
sub
outs
mov
push
adc
aad
outs
push
in
data16
lahf
scas
cdq
pop
inc
cmp
sbb
scas
adc
xor
jp
jecxz
ds
pop
test
pop
adc
(bad)
and
(bad)
outs
stos
icebp
test
enter
lock
xchg
(bad)
jmp
mov
mov
lods
xchg
ficomp
cmc
aad
or
dec
stos
outs
pop
mov
sub
pop
ffreep
mov
movs
cwde
xchg
gs
mov
xchg
cmc
imul
jge
xor
fdivr
adc
or
pop
enter
add
icebp
xor
fdiv
cld
out
hlt
movs
lahf
fadd
enter
jo
ds
and
inc
iret
ss
pop
pop
push
xchg
xchg
or
fdivr
icebp
scas
bswap
xchg
dec
rcr
sahf
mov
mov
aam
jb
retf
xor
xchg
fisubr
cmps
sub
js
inc
adc
ins
cmc
sub
jbe
jae
push
sbb
push
lea
in
add
out
mov
(bad)
inc
fwait
or
mov
adc
mov
lea
mov
(bad)
pop
ins
inc
dec
retf
jmp
xchg
leave
xor
sbb
pop
popf
xchg
test
mov
std
inc
inc
test
add
sub
jmp
xchg
xchg
adc
add
push
dec
xchg
mov
push
int3
jns
mov
xor
mov
in
mov
retf
or
mov
mul
cmc
outs
retf
xchg
mov
test
mov
or
push
pop
push
hlt
(bad)
stos
in
dec
pop
jge
jmp
cwde
imul
sub
mov
fwait
dec
pop
cmc
daa
push
aaa
sti
xlat
mov
xchg
cwde
cs
ins
std
mov
xchg
inc
int3
cmp
or
cld
out
sub
or
cmp
repnz
daa
popa
pop
push
imul
fstp
lods
outs
lods
jbe
in
dec
ins
xor
cmp
stos
int3
jns
xchg
jmp
dec
pop
mov
xor
test
lea
out
pop
mov
lea
mov
sbb
adc
jno
xchg
mov
or
pop
pushf
lods
push
cmps
push
push
ins
je
push
mov
aas
xchg
mov
push
cmps
loopne
loopne
jbe
ins
(bad)
push
std
xor
xchg
xlat
dec
fldenv
inc
pop
xor
or
mov
cli
imul
xor
dec
sub
dec
nop
jmp
xor
(bad)
or
(bad)
mov
retf
cmp
xor
test
adc
mov
sahf
repnz
ins
jne
pop
dec
sub
mov
es
push
loop
sbb
fisttp
jne
std
jle
xchg
stos
repz
sub
aad
push
repnz
pop
push
sbb
adc
pop
mov
jns
gs
fdiv
xlat
jnp
xchg
loopne
push
mov
pop
pusha
(bad)
ret
mov
mov
mov
(bad)
fstp
mov
outs
cmp
icebp
mov
add
cmp
sbb
fucomi
xchg
mov
pushf
xor
fadd
mov
push
push
adc
dec
dec
shr
imul
rcl
mov
push
sbb
lea
aas
cmc
icebp
jmp
les
mov
lods
mov
(bad)
xor
adc
adc
cmp
leave
sbb
sbb
shl
mov
or
enter
mov
aaa
xor
pop
popa
push
sbb
adc
inc
push
jae
pop
mov
or
add
popa
mov
xor
(bad)
add
inc
retf
mov
fcomp
daa
lds
push
cli
inc
mov
imul
xchg
inc
xlat
aad
xchg
pop
loop
jecxz
aas
add
(bad)
in
inc
repnz
push
test
mov
jbe
ja
adc
cli
test
sbb
setne
int
movs
ret
cs
xchg
mov
add
and
mov
cmp
or
popf
or
fild
inc
scas
dec
lock
cmp
pop
pop
(bad)
pop
scas
xor
bound
jbe
xor
mov
loopne
xor
cmps
adc
mov
cmp
(bad)
mov
sbb
mov
xchg
enter
test
(bad)
xchg
push
ins
push
fsubr
fsubrp
mov
loop
pop
test
push
ja
(bad)
out
lahf
xor
pop
cmp
fcom
sar
cmps
jno
push
fistp
ret
repnz
add
inc
sbb
out
rep
mov
push
iret
xchg
sbb
mov
loope
xchg
sbb
pop
lock
mov
rol
sbb
xor
adc
rcr
sbb
lods
push
adc
sbb
in
and
dec
cmp
mov
(bad)
int
aam
add
jge
xor
xor
xor
push
dec
das
fs
inc
test
sub
pop
jbe
ds
mov
inc
ja
adc
cli
xchg
mov
cmc
repz
dec
mov
or
lods
mov
cwde
(bad)
out
in
stos
pmaxsw
add
scas
fnstsw
push
jbe
mov
push
and
xor
dec
cs
loope
jnp
inc
mov
imul
cs
repnz
mov
imul
push
add
adc
inc
xchg
repnz
int3
mov
pop
push
movs
nop
test
stos
cs
or
inc
bound
mov
mov
and
ja
xchg
add
add
jecxz
mov
imul
std
sub
sub
das
mov
or
push
adc
add
test
pop
xor
sub
push
out
xor
shr
push
or
cdq
in
xlat
sbb
jno
sbb
jb
xchg
add
xchg
sahf
scas
push
pushf
sbb
mov
adc
stos
stos
dec
retf
fsubp
call
sub
test
sub
pop
pushf
aad
ja
sbb
dec
jae
xchg
fadd
xchg
jge
lods
xor
pop
call
fwait
stos
xchg
add
fiadd
frstor
loope
loopne
jo
retf
arpl
pop
retf
test
jns
cmp
inc
shl
cld
shl
or
lock
call
ret
mov
push
fnstenv
lahf
movs
stos
push
pop
scas
mov
std
clc
into
(bad)
fwait
dec
test
mov
fwait
sub
adc
rcr
(bad)
lods
push
jg
retf
shr
sub
xor
retf
xacquire
mov
cmps
jge
or
or
stos
jp
cdq
movs
test
into
pop
sub
mov
mov
add
add
adc
clc
repz
push
fldenv
outs
xchg
dec
inc
std
stc
fild
inc
mov
cs
scas
js
(bad)
mov
(bad)
push
pop
pop
ret
fs
out
mov
popf
ret
inc
push
and
stos
sbb
pop
mov
xchg
jae
inc
shl
push
repnz
jo
mov
inc
dec
cmovl
inc
out
cmp
sbb
pushf
test
repz
xor
aam
ror
cmp
outs
inc
pop
mov
push
stc
ret
cli
pop
fidiv
and
inc
mov
repnz
outs
lds
mov
mov
pop
push
(bad)
aas
mov
jno
jne
mov
xchg
cmc
sbb
xor
adc
inc
mov
ja
enter
xor
cs
mov
cmp
mov
xor
jmp
cmc
jb
stos
imul
push
repnz
or
or
xlat
sti
mov
push
retf
bound
rcl
fld
movs
fnstenv
jl
pushf
je
das
or
cli
or
sbb
pusha
es
xor
jne
push
add
repz
mov
aas
pop
push
jmp
jae
ja
sbb
rcr
in
in
push
out
fsub
fcmovu
enter
stos
data16
inc
int3
inc
dec
daa
xor
int
mov
scas
cmp
in
out
imul
pop
mov
pop
add
add
add
adc
push
outs
mov
sub
mov
mov
xchg
adc
sbb
ror
pop
sahf
or
fild
mov
pop
and
dec
(bad)
mov
in
xchg
mov
jbe
push
neg
mov
or
push
imul
xor
fld
int3
and
arpl
pop
dec
sbb
or
mov
aas
inc
sbb
mov
movs
in
pop
outs
mov
mov
shl
sbb
(bad)
push
and
xchg
and
iret
stc
mov
(bad)
sub
lahf
lods
inc
gs
jbe
dec
arpl
mov
xchg
or
dec
mov
lods
fst
das
xlat
ins
inc
lock
icebp
nop
jnp
push
mov
(bad)
cmp
sbb
xchg
sbb
scas
add
mov
or
and
sub
pop
mov
mov
xchg
dec
in
fisttp
cdq
jno
xchg
dec
pusha
movs
dec
ss
pop
(bad)
scas
pop
popa
sub
jno
pushf
adc
sbb
add
mov
scas
scas
push
enter
sub
(bad)
neg
ret
mov
int
inc
sub
cmp
inc
addr16
mov
or
test
add
test
sti
maxps
fistp
inc
pop
pop
sub
ret
(bad)
push
pop
retf
sbb
call
(bad)
jns
add
add
dec
cdq
pop
adc
adc
mov
xchg
or
out
sti
retf
psubusw
fisttp
not
cmp
cmps
and
in
test
mov
xlat
dec
fisttp
inc
jno
ja
sub
stos
jp
push
adc
and
cwde
jg
cld
fs
cmp
outs
mov
xchg
mov
rcr
(bad)
out
mov
adc
push
push
inc
xchg
fxam
rcr
and
cmp
mov
mov
xchg
inc
in
jns
cwde
push
pop
es
pop
mov
mov
cmp
push
rcl
dec
adc
mov
pop
cmp
mov
inc
mov
lods
pop
pop
cmp
(bad)
outs
(bad)
jp
movs
xor
dec
sub
jbe
jno
push
add
mov
int
jae
imul
icebp
mov
cmp
cmp
mov
or
add
jecxz
or
push
mov
push
je
cli
cmp
inc
sti
loopne
retf
iret
scas
ret
mov
or
aaa
mov
ds
dec
addr16
fs
jo
jae
push
fcmovu
cmp
ret
sbb
or
sti
ss
and
es
sbb
push
pop
jno
fst
and
arpl
test
sbb
xor
out
pop
(bad)
test
inc
adc
xor
adc
lods
cmp
mov
stc
ins
stos
mov
test
push
fcmovbe
jmp
ja
movs
enter
adc
mov
(bad)
aaa
adc
or
sbb
(bad)
ret
and
pop
mov
sti
jl
mov
mov
push
jecxz
cmp
(bad)
leave
jecxz
push
adc
push
adc
sar
into
mov
fcmovnbe
inc
test
and
dec
jg
inc
push
sub
rcr
aaa
cmp
in
cmp
mov
lods
push
imul
dec
cmp
pop
jne
sbb
dec
movs
cmp
(bad)
pusha
and
dec
push
xor
aas
xchg
inc
add
and
int3
aam
dec
sub
mov
cmp
fdivr
jmp
sub
call
inc
and
mov
daa
test
xor
mov
fstp
ret
rcr
ds
adc
jb
outs
or
add
popf
pop
cdq
dec
jno
sbb
cmp
test
push
cmp
retf
scas
or
mov
popa
mov
out
aam
jecxz
sbb
test
fistp
jmp
mov
sbb
adc
fisub
sbb
leave
enter
pop
mov
inc
adc
sub
cmp
sub
movs
sahf
ret
xor
jecxz
xor
jae
cmp
(bad)
es
adc
or
repz
jae
inc
dec
fs
fisubr
add
or
mov
lock
es
push
mov
loope
pop
sbb
mov
lods
mov
cld
fcom
and
icebp
retf
and
mov
xchg
add
push
call
cmp
cmp
(bad)
in
(bad)
aad
ins
pop
and
es
cmp
add
aas
pop
test
and
ds
cld
jo
data16
ret
xlat
inc
sbb
into
in
inc
dec
mov
mov
or
sbb
test
inc
test
inc
dec
mov
fbstp
and
jae
sub
add
lods
push
repz
sub
and
cs
and
cmp
fsubr
leave
js
xor
sahf
mov
adc
call
sbb
sbb
xchg
outs
xor
jg
js
xchg
xchg
push
push
not
mov
add
mov
xor
test
mov
call
push
ins
mov
and
and
shl
and
push
bound
mov
aas
sbb
pusha
jge
add
pusha
inc
aad
xlat
pop
dec
pop
aas
loop
xor
in
cmp
adc
mov
mov
outs
mov
sub
inc
and
and
dec
jbe
dec
sbb
out
retf
mov
popa
push
movs
push
int
xchg
(bad)
jnp
add
jae
lea
and
push
push
leave
out
popf
js
xchg
les
not
inc
jle
cmp
outs
jg
mov
in
xor
movs
loope
mov
push
inc
mov
fimul
retf
pop
push
inc
int
addr16
rcr
stos
lock
adc
fucomip
mov
sub
mov
mov
inc
and
loopne
cmp
jle
in
dec
mov
ror
dec
push
sub
ins
and
sbb
cmp
cmc
jp
ins
dec
pop
mov
push
fcomip
pop
lahf
bound
arpl
sbb
mov
nop
test
cld
pop
xor
mov
xchg
jae
retf
shl
cdq
sbb
push
xor
gs
adc
pop
lock
inc
imul
(bad)
fsubr
idiv
stos
cwde
jne
ds
ins
sbb
in
mov
loop
cmc
test
ds
mov
and
scas
es
jg
leave
fs
add
lahf
mov
jg
dec
mov
nop
cs
mov
cmc
xor
jl
xor
daa
xlat
mov
dec
cmp
rol
jp
mov
push
ret
neg
ficom
add
or
add
fnsave
ret
pusha
xor
in
jns
push
push
adc
div
les
xlat
pop
shl
mov
jne
add
xchg
jb
sub
mov
stos
jmp
hlt
sar
mov
stos
stos
inc
retf
daa
ds
out
and
std
fwait
sub
dec
popf
das
and
mov
mov
cmp
out
cmps
mov
pop
jbe
out
sbb
cmps
pop
(bad)
sbb
mov
lds
sub
sub
ret
push
loopne
lock
inc
pop
push
jo
int3
cwde
hlt
add
cmp
xor
hlt
or
push
and
outs
lahf
std
cmp
jge
push
sar
retf
fldenv
neg
and
xchg
adc
mov
cmp
dec
in
inc
push
xor
das
or
mov
fisub
pop
add
lahf
aaa
sar
sub
jmp
adc
sub
rcl
repz
bound
cs
shr
mov
mov
pop
js
popf
xlat
jmp
imul
and
ret
ss
les
cmp
xor
push
arpl
dec
mov
aam
nop
imul
sub
retf
xor
cmp
int3
sub
test
fmul
push
jp
ficomp
push
add
les
retf
or
sub
stc
iret
aad
jmp
fild
mov
and
and
pop
loop
loop
(bad)
loop
mov
mov
and
daa
out
retf
(bad)
out
jg
inc
lea
retf
mov
adc
into
mov
enter
(bad)
adc
ror
mov
ret
mov
nop
jne
xor
mov
fstp
inc
push
pop
adc
pop
or
and
in
add
pop
inc
in
loope
pushf
ins
adc
jle
xchg
ss
jmp
mov
adc
fucomp
std
in
lods
sub
xchg
aaa
add
(bad)
call
adc
push
push
cdq
adc
aad
bound
jmp
fsubr
(bad)
in
inc
pop
sub
call
xor
cmp
ss
les
push
shr
call
pop
dec
push
jne
ror
dec
xor
xor
lock
sti
imul
dec
clc
fcmovnu
mov
cmps
adc
hlt
add
inc
(bad)
push
(bad)
mov
jae
pop
pop
jno
pop
cmp
cmp
neg
lods
loop
xchg
pop
push
cmp
xchg
mov
fist
cmps
mov
dec
(bad)
push
cmp
adc
lea
xlat
pop
jno
adc
repnz
add
mov
int3
mov
mov
add
mov
rcr
(bad)
test
add
pop
cmp
push
mov
or
or
sahf
out
std
xor
xchg
cmp
xchg
out
and
mov
fidivr
adc
xor
ins
cmc
shr
aad
out
jns
and
nop
jae
xor
out
pop
mov
fdivp
sub
in
(bad)
cmp
pop
ds
scas
cmp
fmul
retf
fsub
pop
fdivr
sti
(bad)
add
ins
mov
clc
int
dec
shl
aad
nop
sbb
adc
loope
pop
mov
push
ret
dec
mov
push
sub
push
jno
mov
mov
and
inc
dec
inc
mov
(bad)
adc
enter
test
push
xor
pop
push
retf
or
shl
aad
jecxz
mov
and
rcl
mov
adc
retf
ret
(bad)
sbb
outs
push
scas
sar
mov
aas
inc
mov
retf
push
mov
add
sar
(bad)
xchg
dec
add
fcomp
fistp
or
cdq
fs
jns
imul
lock
sbb
xchg
popf
jp
les
popa
fsub
lds
adc
push
(bad)
sub
push
inc
repnz
mov
inc
mov
push
xchg
add
outs
es
sub
imul
adc
jo
ror
lds
pop
xor
pop
cs
in
jnp
mov
and
call
fwait
inc
mov
stos
inc
or
push
jb
repnz
xor
adc
mov
push
or
dec
add
pop
and
(bad)
xchg
mov
imul
inc
and
push
inc
and
and
adc
pop
lods
pop
jp
or
push
jecxz
call
ja
test
jo
popa
cli
ins
or
mov
inc
dec
clc
jnp
jl
jns
pop
pop
xor
fld
addr16
jmp
mov
repnz
mov
aad
inc
cdq
mov
jmp
or
push
dec
mov
xsave
clc
call
stos
jno
das
push
movs
ja
repz
loop
adc
adc
mov
outs
repz
or
pusha
test
in
inc
push
fstp
ror
sub
(bad)
mov
dec
pop
lahf
data16
test
aaa
cmp
pop
pop
(bad)
mov
pop
mov
test
loope
jb
mov
mov
mov
aaa
fimul
rcr
loop
int3
inc
cmp
test
(bad)
int
jge
dec
mov
jnp
sti
in
test
aas
push
inc
jle
cmp
repz
mov
es
cmps
mov
rep
inc
(bad)
fldenv
loop
push
(bad)
xchg
sub
sar
jecxz
ja
mov
mov
cs
cld
outs
sahf
sub
jnp
stos
call
cmp
inc
imul
mov
xchg
sbb
cmps
sub
xor
movs
pop
push
outs
jnp
sub
xchg
xor
xor
push
stc
push
dec
out
js
and
mov
(bad)
push
jmp
dec
jl
mov
mov
fsubrp
sbb
push
data16
aam
inc
arpl
mov
pop
dec
cmp
arpl
jae
(bad)
movs
sti
jmp
sbb
inc
jb
mov
outs
and
and
test
push
pop
es
stos
jb
outs
or
cmp
fisub
and
pop
mul
mov
dec
inc
stc
fist
je
call
std
lds
and
sti
xor
call
aaa
cmp
mov
mov
inc
adc
push
and
inc
pop
test
jbe
adc
mov
mov
mov
sbb
jge
mov
bound
pop
dec
xor
jns
sub
je
pop
nop
sbb
popaw
rcr
jb
icebp
retf
clc
push
sbb
xor
nop
fwait
mov
sub
push
and
mov
or
stos
js
fldenv
jns
add
lds
push
mov
shl
fwait
hlt
imul
fwait
cmc
es
out
and
pop
mov
test
pop
loop
pusha
ss
inc
sbb
sbb
mov
xchg
test
push
add
pushf
arpl
mov
sub
(bad)
jp
sub
cmp
(bad)
ins
sar
loop
or
and
or
sahf
fs
pop
jbe
mov
js
mov
sbb
xor
outs
pop
mov
sbb
lahf
in
mov
push
mov
push
aas
test
stc
xchg
(bad)
popa
mov
dec
fcmovnu
mov
jbe
or
xchg
retf
xlat
clc
rep
push
adc
(bad)
dec
push
fnstsw
in
push
or
aas
mov
or
not
je
bound
sub
mov
push
(bad)
scas
dec
stos
sbb
(bad)
mul
or
pop
std
loope
sar
push
test
loop
(bad)
mov
iret
push
dec
dec
pusha
ins
pop
enter
mov
mov
mov
test
add
or
xchg
call
adc
xchg
loopne
sbb
aad
jns
loop
movs
add
adc
loopne
lock
jmp
mov
aad
pop
lahf
cli
adc
movs
or
fmul
sbb
retf
mov
adc
loopne
jae
or
shl
movs
mov
push
mov
mov
mov
in
cmp
dec
cdq
test
mov
stos
movs
ins
mov
(bad)
call
ror
push
mov
push
cmp
mov
lods
pusha
mov
sub
mov
pop
loopne
and
(bad)
or
sbb
push
mov
test
mov
push
repz
mov
jl
push
mov
out
xor
in
lods
fcmovb
repz
mov
cmps
mov
or
es
dec
cld
cs
push
add
and
xor
cmc
fwait
movs
pop
push
pushf
out
les
xchg
mov
clc
gs
mov
repz
aaa
push
jnp
mov
sbb
mov
and
stos
call
jge
or
push
pusha
in
mov
xor
adc
aam
test
add
and
fsubp
add
cli
mov
aad
cmc
jmp
mov
imul
std
out
push
call
aad
and
and
punpcklbw
sar
mov
xchg
add
cmp
bound
add
std
cmp
stc
fcomp
xor
add
dec
dec
fdiv
or
mov
mov
pop
cmp
ja
test
sbb
jb
lods
xchg
je
sbb
jmp
pop
adc
xor
inc
push
lea
std
outs
pop
push
sbb
outs
xchg
adc
out
jmp
out
std
mov
adc
sub
sub
mov
bound
pushf
out
hlt
and
fs
leave
xchg
or
inc
or
pop
xor
pop
pusha
and
ret
mov
std
out
xor
sbb
mov
add
fisub
jge
jecxz
mov
adc
popa
rcr
xchg
bound
jmp
and
mov
sbb
mov
std
lock
ret
sub
or
aad
sbb
(bad)
adc
xchg
mov
add
mov
mov
xor
arpl
mov
popf
call
cmps
lods
aad
ss
outs
adc
popf
mov
mov
and
pop
adc
nop
mov
push
call
jbe
imul
fcomp
idiv
jmp
pop
push
xor
idiv
aas
js
mov
sbb
push
mov
test
mov
xlat
cwde
mov
nop
pop
mov
mov
xor
aad
or
aas
stos
loop
fist
xchg
jp
(bad)
mov
push
rcr
push
xor
jne
mov
mov
xchg
pop
out
rcl
stc
lods
adc
mov
mov
bound
cmps
sti
shr
jno
xchg
mov
sub
je
push
ror
jle
adc
sub
(bad)
std
in
mov
sbb
sub
push
imul
pop
mov
mov
fcmovbe
dec
adc
cmp
div
int
imul
add
fisub
outs
lods
das
jo
sub
scas
pop
stc
and
mov
stos
out
es
sbb
call
js
or
mov
xchg
test
call
into
stos
aas
push
xchg
cmps
mov
stc
into
pop
mov
xor
stc
adc
jmp
cmc
cld
xchg
ja
push
xor
push
mov
add
popf
test
mov
pop
jecxz
outs
pop
sub
movs
das
jp
hlt
repz
dec
ss
mov
pop
jl
inc
dec
fidivr
ds
xchg
sub
es
dec
imul
pop
jns
xchg
xlat
stc
jmp
out
stc
int
dec
push
aam
dec
mov
loope
mov
or
mov
adc
shl
imul
add
jge
or
call
pop
dec
in
fisttp
scas
pop
sbb
in
xor
jl
xchg
(bad)
out
xor
(bad)
out
jmp
in
shr
jnp
cmc
shl
add
mov
adc
sti
sbb
fimul
ss
repz
add
adc
into
sub
(bad)
out
xor
test
dec
(bad)
xor
dec
sbb
cmps
mov
ror
outs
call
stc
dec
xchg
or
mov
sub
out
imul
in
push
inc
mov
aam
pushf
popa
mov
stc
aas
shl
mov
inc
repnz
mov
xor
imul
hlt
mov
pop
aad
dec
or
jp
add
and
dec
stos
pop
ja
je
adc
inc
lods
jecxz
inc
pop
je
or
xor
jecxz
outs
adc
retf
jl
xchg
dec
cmps
mov
sahf
retf
sbb
xor
popf
and
gs
aas
das
inc
push
addr16
mov
cmp
add
aaa
add
imul
cli
mov
shr
or
sti
(bad)
neg
js
mov
std
sbb
stos
push
jb
pusha
jecxz
neg
(bad)
out
or
jge
gs
mov
pop
adc
push
cmp
and
push
add
mov
mov
pop
add
(bad)
pop
outs
js
jne
xor
mov
and
adc
imul
mov
jno
movs
in
push
or
inc
xor
call
jge
jecxz
pop
jnp
in
cwde
(bad)
sbb
and
ror
or
lock
xlat
xchg
das
shl
pushf
loopne
sub
cmc
imul
outs
loopne
loop
mov
loopne
xor
lds
fcomi
ficomp
cmp
fidiv
push
adc
xchg
lods
inc
mov
je
jl
sar
ret
(bad)
cmp
es
push
mov
pop
jbe
adc
rol
ss
inc
or
outs
jbe
pop
out
dec
(bad)
push
inc
arpl
mov
lds
cmp
mov
test
cmp
mov
or
xchg
inc
fidivr
jle
mov
test
inc
aam
aas
xchg
loope
cmp
pop
dec
xchg
pop
add
mov
and
mov
bound
mov
mov
xor
test
jnp
dec
jl
hlt
repnz
outs
cmp
fs
pusha
(bad)
lar
xchg
mov
ss
xor
movs
mov
or
mov
sti
pop
lods
sub
test
push
ss
in
xlat
jle
xchg
dec
icebp
cmc
fs
aam
xor
test
pop
movs
movs
adc
and
sbb
inc
aam
add
mov
loop
jns
add
fnsave
rcr
out
fwait
mov
dec
xor
outs
mov
in
hlt
inc
sbb
pop
test
(bad)
sub
aas
test
cmp
in
jnp
and
jnp
mov
jbe
cwde
xchg
push
out
and
popa
push
cmps
test
pushf
xchg
xor
daa
out
test
test
call
sbb
jbe
push
test
mov
add
jecxz
mov
mov
or
ret
sub
ret
and
dec
add
arpl
or
std
imul
rcl
pop
jecxz
ins
mov
inc
loope
mov
push
loope
pop
or
rcl
jge
sti
test
or
cld
push
outs
sub
mov
jl
pop
jo
xchg
aas
cmp
add
repz
icebp
hlt
enter
xchg
in
dec
sub
inc
xchg
sbb
add
fnsave
sbb
xchg
jno
add
dec
nop
mov
outs
jno
imul
icebp
mov
data16
shr
repz
jle
pop
mov
cdq
add
sbb
fstp
in
push
outs
fistp
jmp
jno
push
jne
sti
nop
in
pop
cdq
jnp
mov
lds
or
sar
cmps
pop
(bad)
sbb
out
(bad)
lea
jge
xor
add
inc
or
push
mov
and
outs
movs
xchg
dec
xchg
cmp
jns
inc
lds
daa
and
sub
dec
(bad)
adc
in
not
retf
call
test
je
mov
leave
cmps
cwde
and
scas
jnp
pop
jge
ins
loope
(bad)
sbb
jge
cmp
add
sub
out
adc
loope
(bad)
outs
sub
jo
clc
ss
ja
cdq
jp
dec
clc
xchg
jle
ficomp
call
push
inc
iret
gs
sub
in
xchg
and
enter
into
pop
jns
sbb
aas
or
lds
ficomp
test
dec
push
add
cli
and
xor
xor
cmp
fwait
cmp
dec
ins
shl
dec
nop
mov
mov
sbb
retf
rcl
cmp
in
test
add
jl
sub
into
pop
sub
fidivr
lods
and
add
xchg
ja
lea
addr16
mov
push
cs
ret
ins
fisub
cmc
push
aam
or
dec
mov
xor
ror
dec
xor
pop
lock
fstp
jae
pop
inc
push
push
push
push
pushf
jb
retf
push
popa
jne
test
cwde
popa
add
(bad)
fxtract
(bad)
pop
(bad)
cmp
popf
mov
lahf
jbe
cmovg
push
cmp
fdivr
jae
xchg
mov
outs
mov
ins
stos
sub
mov
mov
jecxz
pop
mov
out
(bad)
sbb
cmp
test
aaa
inc
imul
neg
fnsave
aaa
pop
sti
jne
mov
enter
lods
sub
jg
and
sub
test
inc
ret
cmp
mov
mov
sbb
cmps
pop
jmp
push
mov
jns
mov
sbb
(bad)
out
shl
mov
mov
mov
idiv
iret
cdq
data16
cli
jge
jg
movs
in
das
repnz
popa
cmp
pusha
int
cmp
call
out
adc
sub
mov
or
inc
cmp
sbb
gs
cdq
or
retf
cwde
(bad)
adc
loopne
popa
adc
pop
sbb
jmp
(bad)
call
sub
push
stos
push
ja
fdiv
mov
std
add
sbb
popf
inc
mov
mov
js
push
sbb
push
or
fst
outs
js
pop
or
aam
in
scas
ins
xor
cmp
cmp
or
sahf
pop
clc
jns
imul
inc
pop
xor
lods
ret
addr16
out
in
stc
mov
add
inc
jnp
xor
dec
fcomp
push
scas
adc
xor
shl
jge
sbb
push
(bad)
mov
icebp
imul
ret
dec
(bad)
lods
pop
lods
loop
enter
out
test
xor
cdq
lea
rol
pop
pop
cmp
iret
cmc
lahf
imul
mov
add
(bad)
das
sbb
cmp
gs
mov
in
shr
repnz
and
pushf
lea
push
fldcw
jecxz
lds
icebp
out
or
sbb
ins
cmps
test
(bad)
hlt
scas
syscall
loope
sbb
push
pop
mov
dec
sub
imul
not
repnz
mov
adc
dec
xchg
in
dec
enter
scas
ja
es
or
sub
dec
mov
mov
xor
(bad)
sti
xchg
pop
pop
sub
or
aam
and
inc
int
xchg
mov
mov
imul
sub
cmp
(bad)
jmp
mov
repz
dec
mov
outs
bound
shl
outs
stos
std
add
xor
arpl
adc
sbb
stc
sub
push
mov
add
mov
add
cmps
repnz
ins
mov
push
mov
xchg
and
lock
cmp
xchg
out
hlt
call
mov
ret
inc
and
cmc
or
pop
mov
and
sbb
add
push
sahf
and
inc
les
sti
sub
mov
mov
mov
ret
pop
mov
aas
sub
adc
add
std
jle
and
fisttp
stos
das
(bad)
retf
pop
mov
cmps
fist
fucomip
jne
fiadd
out
int
test
cmc
mov
out
push
push
(bad)
sbb
jnp
(bad)
lock
hlt
arpl
xchg
mov
jns
nop
sub
push
inc
jge
and
mov
loopne
fs
push
mov
ds
sub
mov
xor
in
mov
stc
and
fmul
and
add
out
xor
jae
add
outs
xchg
push
sbb
int
xchg
sbb
xor
pushf
sbb
test
cmps
lahf
stos
int
jle
mov
mov
sub
xor
leave
loop
aam
cdq
dec
add
(bad)
jb
lods
test
xor
scas
push
jecxz
ja
cli
jmp
pop
or
aaa
data16
adc
inc
cmp
push
adc
hlt
jp
fnstenv
jg
stc
and
dec
je
(bad)
out
(bad)
js
out
mov
(bad)
in
jp
sar
inc
jb
lea
retf
fdivr
(bad)
sub
movs
and
jae
stos
stc
jb
(bad)
outs
aas
mov
daa
sub
adc
nop
aaa
mov
ins
sub
xchg
push
push
inc
faddp
push
pop
clc
or
call
mov
cmps
repnz
jl
imul
stc
cmp
and
sub
sub
jmp
and
adc
adc
and
pop
jl
mov
mov
retf
lea
push
mov
pop
inc
imul
mov
popa
std
(bad)
int3
loop
push
xchg
cmps
lds
(bad)
in
jnp
outs
call
dec
fisttp
out
mov
add
sub
dec
jno
in
push
shl
mov
movs
pusha
hlt
lea
test
ss
mov
sub
xlat
in
popf
dec
push
xor
jmp
or
mov
test
scas
out
and
add
out
xor
nop
jno
dec
push
fdivr
data16
nop
test
pop
clc
out
xor
xor
inc
mov
adc
rol
lods
mov
sub
pop
(bad)
mov
int3
cmc
cmp
shl
neg
in
and
arpl
mov
xchg
dec
test
mov
jg
inc
jnp
retf
mov
(bad)
icebp
je
bound
(bad)
fst
lock
xor
mov
jne
jbe
das
xchg
mov
mov
ja
dec
mov
aad
mov
mov
add
mov
or
shl
jecxz
(bad)
repnz
scas
or
int3
out
xchg
pop
(bad)
dec
adc
pop
in
mov
sub
fcom
popa
sub
test
je
dec
movs
call
jne
shr
pop
cmps
outs
jne
pop
jo
cmp
pop
sbb
push
bnd
fimul
fs
leave
jmp
push
loopne
in
or
sbb
clc
push
inc
sbb
pop
sub
sahf
pop
pop
cmp
call
inc
pop
fs
imul
jmp
cmps
outs
inc
pop
adc
mov
sub
sbb
mov
cmp
icebp
inc
sbb
out
addr16
test
cmp
les
ins
mov
mov
mov
mov
dec
cmp
fnsetpm(287
inc
cmp
loop
pop
(bad)
jl
pop
mov
bound
retf
hlt
das
xlat
faddp
gs
pop
lods
sub
adc
adc
inc
mov
push
inc
fwait
add
sbb
sbb
test
loopne
stos
jmp
xor
cmps
mov
mov
icebp
shl
jno
cwde
outs
xchg
and
lea
push
pop
popf
pop
(bad)
cdq
push
les
xor
dec
or
mov
add
movs
lea
jae
jne
(bad)
cmps
ret
mov
sbb
pop
shl
mov
xchg
pushf
cmps
and
xchg
clc
je
movs
xchg
xchg
pop
mov
aaa
mov
(bad)
jg
repnz
sub
in
repnz
jnp
scas
int
sbb
mov
xchg
repz
out
loop
mov
inc
cdq
repz
mov
adc
xor
js
inc
clc
aam
sub
mov
aas
(bad)
adc
fild
and
cmp
xor
hlt
jmp
mov
mov
mov
cwde
adc
dec
xchg
inc
lock
out
add
mov
mov
aaa
push
sbb
push
shl
sbb
and
inc
dec
test
out
cli
sub
popa
(bad)
dec
sub
dec
sub
repnz
imul
ss
fistp
sbb
mov
xor
mov
push
retf
cdq
ficom
mov
sbb
dec
or
sub
dec
test
cmp
sbb
adc
neg
mov
dec
test
or
dec
popf
add
ret
and
cli
sub
push
(bad)
stos
leave
jecxz
retf
lock
test
xchg
add
ins
sub
xchg
ss
cmc
pop
stos
push
mov
or
mov
cmp
retf
and
inc
xchg
cwde
pop
dec
movs
out
das
scas
pop
jnp
jg
dec
sahf
jmp
or
pop
call
pop
popa
ret
pop
js
lods
push
inc
add
(bad)
sub
xor
mov
or
popf
ins
test
inc
test
adc
cld
inc
ret
fidiv
scas
mov
fwait
arpl
repz
add
xchg
pop
xchg
mov
aas
retf
dec
or
jne
pusha
mov
inc
dec
xor
in
inc
lahf
daa
stc
mov
push
jb
cmp
sbb
pop
xlat
repnz
adc
call
movs
fucom
enter
pop
in
jmp
dec
pop
jmp
mov
xchg
es
outs
push
and
test
out
and
jne
inc
(bad)
push
aas
cdq
pop
xchg
jno
adc
cmps
into
fdiv
mov
push
dec
sbb
rol
adc
cs
sbb
xor
outs
cs
ss
dec
jecxz
or
mov
sub
sbb
rcr
sbb
cwde
dec
(bad)
ficomp
js
jg
stos
jne
addr16
xlat
repz
cmp
jae
sbb
cmp
iret
pop
jl
mov
outs
imul
popa
mov
aad
pop
push
outs
repz
pop
js
aam
outs
and
cmps
pop
lock
sbb
and
cmp
push
in
xor
imul
int3
jnp
icebp
cmp
loope
jbe
rcr
mov
imul
(bad)
int3
inc
cli
cli
add
daa
mov
(bad)
jns
cmp
xchg
adc
xlat
mov
mov
dec
sub
mov
dec
push
outs
sub
mov
dec
in
ss
int
push
jle
cmp
shl
push
dec
jmp
enter
push
es
mov
bnd
push
adc
ds
inc
scas
xor
adc
mov
cmps
lock
xlat
mov
adc
push
ror
test
shr
lods
pop
jnp
out
outs
mov
inc
pop
test
and
pusha
jne
imul
icebp
adc
scas
inc
jge
jnp
call
cs
xlat
cmps
xlat
inc
icebp
out
fcom
iret
push
dec
xchg
push
stc
sbb
mov
repnz
ins
(bad)
mov
loope
int
in
mov
xlat
jl
outs
(bad)
xor
addr16
dec
jg
ret
mov
and
out
push
outs
arpl
clc
and
and
sbb
shl
fwait
mov
cmp
adc
jb
inc
adc
movhps
call
mov
dec
jns
stos
mov
outs
cld
mov
pop
push
dec
leave
sbb
cwde
cld
fwait
mov
loope
jns
xchg
mov
mov
cmp
jo
xlat
stos
sub
mov
push
dec
aaa
test
push
arpl
retf
or
add
inc
retf
(bad)
jmp
sbb
add
(bad)
ins
loop
popf
(bad)
fld
imul
ret
or
loop
jno
test
jb
cld
jno
test
ss
and
push
cmp
push
cmp
xchg
div
inc
shl
outs
lahf
js
lahf
adc
sub
sbb
icebp
sub
or
jnp
icebp
push
push
or
cld
outs
inc
and
cs
xor
jmp
and
int
xlat
fsubr
push
add
mov
pop
ret
jmp
(bad)
or
mov
jge
sub
cmp
lods
sbb
popf
les
mov
das
pop
push
sbb
ds
fcmovne
push
addr16
sub
push
mov
aaa
das
retf
mov
jl
jb
cmps
into
cmp
mov
mov
push
mov
int3
in
inc
mov
cmp
enter
movs
xchg
pop
pop
mov
fsubp
xor
call
mov
fdiv
mov
idiv
retf
xchg
sub
xor
sbb
sub
(bad)
cli
imul
cmp
es
adc
adc
jns
mul
add
jmp
in
js
jo
jle
mov
pop
imul
mov
xchg
dec
std
push
rcl
pop
xor
repz
inc
(bad)
cmc
jno
pop
cmp
inc
dec
out
mov
jnp
lds
mov
int3
mov
push
retf
xchg
aas
push
or
adc
adc
stos
dec
lods
fadd
jbe
addr16
shl
movs
fs
mov
sub
ds
mov
mov
repz
sbb
std
push
loope
adc
je
jmp
cmp
mov
lods
test
aaa
xor
sub
mov
push
sbb
lds
out
or
jne
stos
xchg
mov
and
push
ret
fld
hlt
nop
retf
cwde
and
jne
sub
pop
fwait
sbb
lods
mov
inc
scas
jns
inc
out
jl
je
pop
mov
or
jl
das
mov
cmp
xchg
mov
sbb
adc
mov
or
inc
pop
fsubr
pop
xchg
mov
in
jae
in
cmp
sub
push
cmp
jl
or
xor
pop
(bad)
mov
xchg
popf
movs
add
or
iret
call
cmp
loopne
rep
sar
jnp
sbb
les
fdivr
push
mov
sub
mov
in
sbb
pop
icebp
imul
lahf
sbb
jle
sti
pop
(bad)
cld
sbb
jge
push
push
dec
add
repnz
les
sub
or
cwde
xchg
(bad)
ficomp
xor
loopne
push
inc
movs
aad
fidivr
sti
push
inc
test
in
or
(bad)
shl
adc
stc
sbb
push
jb
sub
mov
ins
xor
in
pop
inc
jecxz
sbb
(bad)
in
inc
fnstenv
sub
mov
retf
xor
stos
jl
in
mov
dec
jl
imul
movs
xor
sbb
icebp
dec
loopne
jle
xor
loop
or
data16
dec
or
dec
in
mov
dec
fdivr
pop
mov
rcl
stos
dec
cmc
jbe
dec
daa
xor
out
loopne
cmps
xor
pop
das
mov
and
jmp
xchg
(bad)
mov
pop
or
mov
or
mov
(bad)
ds
test
mov
mov
xrelease
rol
es
mov
mov
cmps
shl
adc
pusha
jb
(bad)
loop
jmp
pop
fiadd
ins
cmp
sbb
out
(bad)
pop
int
mov
adc
sub
push
test
mov
fild
ins
fs
add
test
int
inc
fstp
jmp
push
je
jmp
in
in
cwde
xchg
out
shr
cmp
mov
sti
fs
sub
dec
and
pop
movs
xor
pop
sbb
clc
and
stos
test
call
push
mov
inc
and
jne
fcmovbe
test
push
add
mov
and
retf
xchg
jo
ss
pop
adc
pop
(bad)
je
and
jmp
pop
add
frstor
pop
pop
xchg
out
xchg
sbb
and
(bad)
enter
stc
xchg
push
popa
fimul
inc
add
call
ret
(bad)
xor
mov
pop
repz
ja
push
mov
rol
jp
cwde
out
loop
fld
push
pushf
cmp
fild
cmp
or
fild
sub
pop
mov
dec
xlat
pop
je
inc
cmps
rcr
inc
sbb
std
aad
mov
dec
(bad)
mov
mov
mov
pusha
xor
inc
inc
faddp
inc
into
je
jmp
push
mov
data16
inc
fild
dec
ja
xor
push
cmp
or
lahf
push
outs
jmp
icebp
sbb
mov
sub
sar
loope
mov
xchg
lds
in
addr16
jbe
and
retf
mov
hlt
js
inc
or
rcr
pop
cli
rcl
pop
outs
cdq
bound
mov
mov
pop
push
lock
iret
cmps
(bad)
bound
in
and
repz
int3
out
sub
inc
cli
xor
rcr
nop
sti
mov
xchg
xor
inc
xchg
nop
sub
sbb
mov
push
ret
imul
inc
mov
xor
push
out
sbb
ffreep
and
sbb
das
pop
rcl
push
and
mov
and
jmp
mov
push
and
fcom
add
jns
in
in
lds
mov
jmp
sub
mov
push
jae
nop
test
push
ins
pusha
cmps
adc
xchg
shr
scas
(bad)
dec
mov
mov
sbb
push
(bad)
xlat
movs
pop
push
mov
jns
sbb
push
cld
sub
dec
add
aaa
or
xchg
imul
fbstp
xlat
xor
add
sub
add
jnp
add
les
cmp
call
loope
dec
jle
pop
pusha
mov
outs
dec
rcl
hlt
imul
(bad)
imul
dec
add
or
pop
enter
jnp
cmp
bound
push
or
inc
das
inc
scas
test
cs
push
pop
pop
dec
fisttp
retf
scas
or
push
cli
hlt
cmp
or
jnp
add
pushf
dec
nop
lods
jmp
dec
push
mov
cmp
retf
les
int
inc
fld
lods
cmp
(bad)
pusha
jle
loope
or
mov
mov
(bad)
movs
xchg
or
mov
dec
movs
fwait
push
adc
repnz
mov
idiv
sbb
and
lods
jae
mov
cwde
jl
mov
sbb
loope
jne
jmp
test
in
fmul
xchg
push
mov
inc
sub
mov
dec
pop
retf
jne
sub
mov
xor
mov
retf
push
inc
js
xor
inc
and
retf
push
sbb
inc
movs
stos
add
jne
shld
mov
sbb
movs
mov
and
ja
jl
push
adc
(bad)
out
add
imul
into
lea
pusha
imul
fimul
add
ins
sbb
adc
stc
fwait
and
mov
sub
(bad)
mov
jne
pop
data16
cmp
jnp
dec
mov
cmc
or
push
pusha
es
ret
push
je
popa
call
fisttp
test
movs
fisubr
mov
xor
sbb
push
lds
ds
cmp
ret
adc
hlt
scas
or
out
(bad)
sbb
fdivr
dec
xor
ret
mov
pop
call
mov
jg
jns
pop
push
jp
or
(bad)
clc
call
push
pusha
lods
pop
jns
cdq
pop
add
push
adc
xchg
xor
(bad)
mov
sub
cmp
mov
repz
gs
cli
xchg
stos
and
ins
push
jg
shr
jmp
add
aam
adc
sbb
xchg
mov
clc
stc
call
(bad)
mov
push
sub
(bad)
cmp
dec
fidiv
aas
adc
lock
clc
push
jmp
adc
(bad)
clc
inc
mov
push
and
mov
xchg
ds
push
add
or
pop
xchg
add
cli
push
icebp
jb
adc
psllq
sbb
push
aad
loop
push
mov
xchg
nop
mov
mov
dec
repnz
xchg
xor
mov
and
or
jb
xchg
les
mov
retf
addr16
pop
jg
enter
mov
mov
inc
xchg
fs
jb
ds
mov
jmp
push
fisttp
loop
aas
retf
gs
push
or
ret
mov
push
hlt
dec
loope
or
imul
xchg
cmps
fisubr
jg
xchg
adc
test
retf
jmp
(bad)
cmc
mov
into
xchg
cmp
inc
push
fild
sti
loop
ja
scas
xor
aaa
mov
pop
mov
sub
cmp
data16
std
xchg
mov
push
mov
and
es
or
push
jbe
dec
imul
(bad)
les
outs
inc
add
cdq
add
out
outs
mov
lods
cmps
int3
jge
sub
aam
push
or
icebp
mov
and
pop
mov
pop
push
imul
and
hlt
cmp
jb
nop
fwait
ins
push
dec
xor
xor
lds
test
(bad)
jb
stos
lahf
mov
gs
mov
(bad)
push
cmps
or
or
cdq
out
retf
mov
push
sbb
loope
mov
pop
sbb
jecxz
jb
dec
shr
inc
fwait
lea
bound
retf
or
cmc
mov
jnp
xor
imul
std
in
movs
call
ret
add
imul
or
xchg
popf
jmp
outs
scas
push
cmp
icebp
sahf
and
imul
movs
add
aas
jg
data16
call
dec
push
shl
and
pop
movs
mov
sbb
(bad)
leave
xor
dec
popf
sbb
pop
hlt
and
outs
sbb
in
pop
jp
repnz
loope
sbb
in
push
jmp
xor
movs
shr
(bad)
and
stos
jne
dec
and
and
js
or
ret
mov
adc
mov
ins
mov
fisub
or
mov
fs
pop
xchg
cmc
push
loope
(bad)
aad
out
rcl
fstp
jmp
repnz
cmp
sub
lock
nop
ins
(bad)
cwde
mov
add
or
jb
iret
cmp
lods
jno
xchg
(bad)
stos
mov
lahf
jo
or
pop
dec
icebp
mov
mov
or
cmps
pop
cwde
loopne
scas
sub
mov
inc
popa
mov
shl
arpl
fisubr
mov
sbb
outs
(bad)
out
dec
lods
pop
call
in
sub
xchg
xchg
iret
aas
ret
cmp
gs
scas
enter
cs
out
sbb
fwait
sub
push
sub
cmps
mov
cmp
pop
sub
in
mov
jmp
jmp
test
xchg
jbe
push
cs
inc
mov
popa
xor
hlt
mov
adc
scas
in
mov
mov
jle
cmp
outs
ret
dec
inc
test
mov
mov
mov
mov
(bad)
call
lds
and
fxch
ins
xor
movs
push
mov
xor
inc
pop
cmp
or
popf
cmp
xor
repz
scas
jns
xor
out
loop
iret
mov
sbb
adc
sub
dec
je
test
adc
dec
xor
jg
dec
adc
sub
pop
xor
mov
ficom
adc
cmp
xchg
das
mov
popa
lock
test
fcmovnbe
sahf
popf
jle
mov
icebp
popf
or
stc
loope
push
or
arpl
adc
inc
pusha
push
pop
xchg
(bad)
repz
mov
or
jmp
retf
pop
sbb
xchg
cmp
popa
lock
inc
lods
xlat
cmps
push
jns
xor
cmp
and
and
lahf
out
or
(bad)
fxch
push
test
pop
mov
das
and
loope
mov
mov
gs
je
cli
xchg
shl
loop
add
inc
mov
pop
enter
and
mov
jo
mov
cwde
fist
adc
cs
jnp
xchg
dec
inc
sti
shl
and
add
inc
cli
lods
rcl
mov
cmp
mov
out
adc
jns
(bad)
std
cmp
mov
movs
out
outs
mov
dec
pop
xchg
(bad)
shl
std
sbb
fdivr
leave
dec
jo
dec
movs
xor
int3
sti
loopne
add
dec
jns
mov
mov
or
jle
rcl
xchg
xchg
and
and
in
ror
xor
aad
ds
stos
adc
mov
dec
xor
mov
inc
loop
and
mov
push
add
retf
je
mov
daa
push
mov
aam
not
movs
mul
add
stc
retf
lds
aas
adc
and
nop
aad
retf
mov
pmaxub
(bad)
pushf
pop
fwait
mov
mov
call
jmp
loop
inc
mov
cmp
inc
push
jp
push
rol
xor
cld
mov
sub
inc
push
dec
cmc
dec
ret
test
inc
shr
lods
pop
dec
lods
xor
mov
and
mov
dec
ret
cmp
mov
cmp
and
mov
mov
scas
arpl
(bad)
pop
es
and
lods
cwde
in
jge
(bad)
(bad)
inc
add
jp
fs
or
inc
call
shr
xchg
fisttp
add
sub
clc
mov
adc
data16
or
test
and
sub
jo
inc
stc
cmc
xchg
fwait
cdq
dec
or
sub
sub
mov
inc
inc
fsubr
sbb
inc
sbb
adc
cmp
push
add
lds
es
int
sbb
enter
jb
fiadd
mov
jne
fsubr
inc
loope
pop
leave
mov
inc
rcl
mov
push
fild
outs
sbb
icebp
enter
aam
xchg
cmp
out
sbb
stos
jg
je
pusha
ja
repnz
aam
cli
sub
sbb
ss
adc
mov
jnp
push
jno
lock
imul
pop
scas
xor
iret
mov
sbb
aam
pop
loopne
fs
push
inc
imul
stc
xor
pusha
ins
jl
push
cmps
pop
jns
sub
xor
pextrw
aas
movs
scas
xor
push
add
loop
mov
jg
push
pop
or
bound
xor
jl
or
cs
aas
test
aaa
stos
adc
ret
and
bound
pop
xchg
xor
xor
xchg
mov
aam
sbb
dec
xchg
std
adc
pop
push
inc
outs
sar
in
push
mov
push
add
inc
repnz
es
(bad)
cmps
adc
cmp
push
mov
cli
jg
mov
pop
int3
fist
push
xchg
out
scas
or
add
add
lods
dec
ret
mov
lahf
adc
lfs
push
loope
repz
fs
add
imul
test
dec
mov
mov
push
test
cli
jge
mov
shl
je
mov
cmp
int
aad
shr
rol
into
scas
iret
sbb
fiadd
mov
int
push
cmps
neg
xor
inc
out
scas
in
mov
adc
sub
pop
push
mov
add
dec
mov
xor
and
lods
push
xchg
dec
shr
fadd
add
push
add
cmp
test
dec
ins
sahf
xchg
jle
inc
xor
jmp
bound
movs
push
cmp
loope
cs
mov
and
(bad)
(bad)
lock
push
jle
outs
mov
push
data16
(bad)
sbb
mov
lds
popa
push
pop
(bad)
and
jg
stos
dec
repz
loopne
jmp
adc
bound
cmp
icebp
retf
add
sbb
dec
mov
xor
in
cdq
push
cmp
sbb
ss
call
mov
push
jno
pusha
sbb
xlat
das
dec
cwde
mov
push
ss
fisub
in
rcr
mov
cmp
aas
loop
fxch
mov
xchg
(bad)
push
jge
icebp
jns
pop
pop
push
dec
xchg
push
pushf
sub
outs
jle
mov
sbb
sar
push
clc
xor
movs
movs
popa
mov
and
mov
add
inc
push
sahf
dec
out
scas
dec
add
sbb
pop
or
sbb
std
inc
ficom
imul
push
xchg
vpsraw
dec
push
xor
push
or
lods
shl
jmp
cmps
add
shr
ret
movs
movs
xlat
or
xchg
jecxz
add
fisttp
push
mov
mov
add
gs
jg
fstp
xor
cld
not
xor
les
inc
pop
(bad)
sahf
nop
dec
test
rcr
in
cmp
push
mov
aad
call
pop
imul
movs
inc
ins
retf
icebp
shl
push
pushf
mov
out
addr16
pop
mov
in
dec
pop
in
fistp
data16
in
ss
fs
xor
(bad)
add
stos
add
adc
mov
jne
in
js
sahf
fs
and
sbb
push
mov
xchg
pop
pop
mov
out
jge
add
mov
fsub
loopne
int3
addr16
cmp
pop
pop
das
fistp
call
xchg
jge
pop
or
(bad)
pop
inc
push
leave
stos
mov
(bad)
sbb
imul
mov
ret
fcmove
jnp
inc
pop
xor
or
sbb
shl
add
add
mov
ins
int3
add
loopne
mov
test
jne
sub
push
and
sahf
std
add
lahf
sub
in
push
sbb
std
add
inc
aaa
call
movs
xor
or
inc
jb
mov
retf
fcomp
adc
iret
mov
adc
dec
inc
adc
pop
add
cmps
adc
xor
cmp
fndisi(8087
pop
dec
mov
mov
cli
(bad)
jmp
fs
sbb
imul
dec
in
test
inc
cmps
push
outs
pop
lock
mov
nop
mov
add
loope
in
sbb
mov
shr
stc
xor
cmp
pop
adc
pop
in
ret
cs
mov
test
inc
rcl
mov
jg
ja
mov
repz
push
dec
inc
xchg
std
cmp
sbb
movntsd
mov
adc
stc
and
adc
jmp
dec
lock
mov
mov
pop
shl
hlt
jns
aas
(bad)
adc
sbb
pushf
sbb
mov
int3
sbb
mov
fbld
aad
push
cmp
jge
push
(bad)
(bad)
mov
retf
not
push
or
idiv
(bad)
(bad)
int3
push
xlat
push
inc
loopne
sub
inc
iret
cmp
popa
mov
xchg
ret
(bad)
fimul
jo
hlt
sbb
fst
add
dec
mov
lods
pop
scas
arpl
cs
add
xchg
lock
mov
pusha
pop
shl
(bad)
outs
test
test
test
repnz
fst
icebp
mov
stos
dec
mov
push
fidivr
aam
fidiv
sub
jb
das
sbb
xchg
add
add
jl
pop
xlat
out
stos
mov
jg
inc
xchg
pop
loop
push
pushf
mov
pushf
(bad)
add
pop
dec
and
int3
mov
dec
jae
inc
cld
adc
inc
mov
mov
mov
dec
imul
out
sahf
not
int3
sti
pop
mov
adc
mov
mov
xor
sti
cmp
ret
inc
mov
and
aam
push
adc
loop
cmp
mul
sbb
ss
fwait
mov
repz
push
test
out
loope
out
xchg
cld
inc
jmp
nop
and
jne
neg
(bad)
inc
mov
gs
loope
sti
push
cmp
mov
stos
add
mov
loopne
lods
loopne
pop
fisttp
out
ror
repnz
call
sti
in
adc
stos
inc
fwait
cli
pop
mov
push
aaa
mov
dec
sahf
cmp
test
rol
inc
xor
and
mov
adc
fistp
push
jg
shr
mov
pusha
daa
add
into
or
ss
xor
inc
out
test
inc
cmp
nop
or
and
cmp
in
pusha
xchg
fidivr
bound
mov
rol
rcr
dec
aad
add
sbb
sbb
icebp
or
lods
retf
mov
jae
popf
mov
fstp
bound
imul
mov
in
xchg
dec
repnz
loopne
mov
ins
test
cdq
inc
shl
jl
jl
loop
stos
xor
and
or
fidiv
pop
xchg
xchg
cmc
div
gs
(bad)
xchg
inc
fadd
jge
mov
movs
cld
ss
or
adc
mov
pop
pusha
inc
ror
pop
outs
movs
xchg
in
mov
cmp
dec
lods
repz
fist
push
and
js
mul
sti
(bad)
cld
fwait
and
mov
movs
xchg
mov
movs
leave
movs
mov
aad
push
mov
mov
fisubr
push
or
jo
pop
sub
sub
scas
loopne
cs
shr
in
fmul
mov
dec
movs
fcomp
mov
cmp
xor
je
dec
xor
cmpxchg
push
arpl
jbe
div
out
data16
pop
rcr
sbb
mov
test
out
fcomp
cmp
(bad)
jns
jbe
inc
(bad)
mov
lahf
push
xor
jno
int3
mov
daa
mov
es
ret
ret
mov
clc
hlt
or
loopne
push
(bad)
shr
data16
jmp
adc
stos
push
pop
add
mov
lods
fld
push
test
cmc
or
daa
jb
xor
jne
add
jnp
movs
mov
pop
inc
add
aaa
gs
jmp
add
out
pushf
in
push
loopne
mov
outs
scas
int3
or
adc
adc
fdivr
adc
xchg
out
shl
push
icebp
outs
lods
xchg
sbb
mov
push
neg
test
out
push
pop
ins
inc
sahf
(bad)
mov
fistp
inc
add
add
add
loopne
fadd
jbe
sar
xchg
mov
ret
push
in
repnz
movs
cmp
lahf
(bad)
mov
test
(bad)
mov
adc
cmps
mov
pop
sub
mov
and
mov
in
mov
cs
mov
or
sub
add
in
push
cwde
sbb
idiv
pop
repnz
mov
lods
scas
jecxz
jb
ss
iret
or
dec
push
loope
push
imul
retf
sbb
imul
cli
pop
mov
sahf
inc
movs
shl
sbb
push
push
jns
mov
(bad)
scas
mov
jle
lds
int
mov
pop
std
pusha
push
jge
push
jp
loopne
stos
sub
mov
push
xchg
icebp
sbb
mov
rol
gs
frstor
aad
and
or
or
cmp
pop
(bad)
pop
cmp
int
inc
mov
dec
ret
shl
retf
jne
outs
mov
int3
add
aaa
cld
fst
jno
retf
mov
sbb
cld
sbb
fisubr
jno
mov
xor
nop
loope
stos
push
mov
(bad)
(bad)
mov
mov
push
xchg
fistp
into
dec
sub
lds
add
push
push
sub
pop
int
shr
fucomp
arpl
pop
sbb
jp
mov
leave
inc
iret
enter
mov
mov
inc
xchg
mov
dec
xor
scas
pop
mov
ja
inc
cmp
fwait
or
stos
sbb
mov
sbb
scas
pop
in
cmps
inc
push
out
push
sbb
jb
(bad)
jmp
inc
xchg
test
ds
bound
out
sub
div
call
mov
pop
or
das
clc
cli
mov
sbb
ins
fimul
pusha
pushf
mov
adc
dec
fld1
retf
mov
je
test
outs
add
(bad)
sbb
pop
stos
pop
cmps
aam
mov
cmc
ja
jb
pop
scas
stos
push
in
cmps
dec
ins
mov
xchg
lock
std
mov
sbb
add
push
mov
pop
xchg
sahf
mov
mov
shr
pop
mov
xor
pop
mov
pop
dec
neg
pusha
movs
push
xchg
cmps
ficom
inc
outs
mov
jmp
stos
bound
aaa
sbb
push
scas
sti
mov
and
adc
iret
loop
in
jl
jmp
or
xor
mov
shl
adc
aad
ja
lahf
pop
push
fs
shl
int3
xchg
mov
cld
mov
pop
daa
add
xchg
cmp
aas
push
in
cmp
adc
das
scas
mov
sub
xchg
aas
sahf
pop
and
jae
xor
div
pushf
adc
les
or
jle
mov
imul
push
shl
sub
jbe
sbb
jl
in
dec
sub
cmps
xlat
test
push
or
(bad)
cmps
mov
nop
push
nop
pusha
or
fidiv
clc
inc
sub
mov
xor
mov
pop
xchg
mov
dec
ret
lock
adc
sub
ss
add
stc
xchg
xor
sbb
cwde
mov
mov
loop
outs
sti
mov
mov
imul
fistp
int3
ds
pop
push
add
or
inc
mov
adc
aas
mov
stos
sub
and
xor
push
adc
or
fidiv
sub
(bad)
rol
imul
inc
sub
push
call
jnp
retf
out
cs
and
adc
push
pop
test
jl
cmc
popa
dec
and
ja
or
cs
add
js
xchg
in
mov
xor
jnp
dec
adc
push
or
add
lock
jb
cs
fmul
mov
data16
fwait
mov
adc
xor
xor
and
in
dec
inc
sbb
loope
stc
push
push
jb
repnz
sub
xchg
(bad)
xor
xor
sub
cdq
xchg
cmp
in
ja
clc
(bad)
mov
aaa
jl
jmp
mov
cmps
and
sub
xlat
mov
cmp
(bad)
push
and
and
mov
inc
dec
and
test
adc
jmp
xor
sbb
and
aas
mov
inc
pop
xchg
dec
mov
jb
repnz
out
inc
sbb
xor
cmp
clc
dec
adc
shl
xchg
shl
jae
pushf
mov
mov
test
sbb
cwde
test
cwde
xor
scas
stc
xor
movs
ficom
in
mov
cli
loopne
mov
ja
cmp
dec
into
sub
mov
sub
cmp
div
cld
xlat
mov
shl
inc
ja
mov
push
das
fdiv
mov
ror
sub
jge
sub
out
js
je
lods
adc
mov
dec
movs
(bad)
xchg
ins
stos
pop
adc
jnp
mov
scas
call
inc
mov
dec
ja
adc
pusha
(bad)
adc
xor
jno
jle
or
dec
aaa
je
(bad)
cmps
popf
cmp
push
pop
mov
jno
fcomi
mov
fwait
iret
push
fcom
icebp
pop
xchg
(bad)
fistp
scas
xchg
std
mov
add
pop
int3
mov
push
ss
loope
inc
mov
es
xor
jle
std
inc
fcmove
xchg
cmps
pop
jbe
fstp
retf
fdiv
jle
pop
mov
adc
mov
and
arpl
inc
mov
xchg
jno
out
jne
inc
mov
ins
jo
inc
mov
xchg
out
(bad)
push
pop
fisub
fcomi
sub
imul
aad
rcr
aas
sti
stos
loope
jnp
xor
push
and
mov
popa
imul
push
pop
jno
mov
push
dec
in
out
(bad)
imul
mov
das
stc
push
jns
movs
or
pop
fabs
mov
(bad)
jmp
inc
push
out
cs
call
cmp
test
add
jmp
loope
jbe
adc
pusha
add
push
ret
xchg
push
scas
std
cmp
cmp
sbb
xchg
mov
mov
lahf
sti
(bad)
sub
ror
aad
xchg
in
orps
adc
daa
ficomp
jno
inc
(bad)
(bad)
stos
(bad)
retf
push
push
shl
xchg
ret
cmc
jnp
sbb
cmp
(bad)
push
jp
retf
(bad)
jecxz
xlat
add
lock
mov
scas
scas
mov
add
dec
adc
in
imul
retf
stos
add
fcom
mov
xchg
mov
xchg
mov
movs
inc
call
mov
rcr
jge
stos
push
inc
jb
leave
imul
imul
pop
(bad)
add
lock
add
pop
loop
pushf
push
and
pop
push
popf
loopne
repz
arpl
and
inc
retf
mov
imul
xchg
push
addr16
cmc
inc
cmps
pop
push
push
int
push
test
sbb
jnp
(bad)
idiv
inc
shl
adc
jns
mov
pop
addr16
(bad)
cld
mov
std
(bad)
(bad)
adc
push
lea
mov
stos
add
jno
fistp
or
cs
mov
or
pop
cmc
shl
in
and
sub
stc
push
frstor
data16
add
mov
xchg
jge
sub
(bad)
in
pop
shr
and
mov
xchg
mov
mul
fisubr
int
lock
inc
cmps
adc
or
adc
cmps
call
jmp
cdq
jae
dec
inc
pop
imul
pop
inc
sub
dec
inc
retf
fcom
adc
cmps
int
push
xchg
dec
out
xchg
cwde
dec
mov
inc
xchg
bound
int
push
or
push
and
xor
sbb
test
in
mul
scas
popa
sub
push
pop
sub
aas
test
xor
dec
dec
test
int
imul
stos
cmp
stos
test
mov
adc
sub
xchg
mov
and
push
cmp
popf
dec
pop
xor
sbb
aas
cmps
mov
mov
je
push
fwait
addr16
es
dec
cdq
xchg
push
push
and
jb
push
aad
sbb
mov
or
movs
jbe
lahf
ret
pop
std
inc
std
jno
jne
js
xor
jno
test
bound
into
push
cmp
mov
xchg
daa
adc
sub
bound
cwde
ret
fnstcw
iret
sub
and
mov
shl
neg
fs
imul
stos
pop
int
enter
inc
jo
imul
les
call
push
pop
pop
fcomp
cmp
or
dec
fisubr
jmp
push
repz
cmp
push
mov
aam
inc
push
ds
rol
loop
rol
les
sbb
jne
inc
cmp
adc
push
icebp
(bad)
jnp
loope
add
cwde
stos
sbb
js
sbb
outs
arpl
dec
sbb
adc
jle
loope
test
pop
mov
fsubr
aas
xchg
pop
dec
jae
fdiv
(bad)
stc
pop
jae
mov
icebp
enter
adc
jmp
shl
inc
cmp
add
clc
sahf
jmp
bnd
xor
ins
jne
mov
xchg
dec
and
inc
int
int3
or
rcr
cmp
nop
ret
sub
add
jnp
fist
js
pop
or
out
fcmovnu
daa
or
jbe
bswap
shl
je
ret
or
and
xchg
mov
add
test
mov
fisubr
jg
cmps
out
ins
cdq
mov
push
call
popa
pusha
bound
push
mov
xchg
and
daa
dec
xchg
lahf
retf
jo
or
sti
mov
jg
mov
sub
jb
xor
cwde
lods
ja
cmps
aam
jg
fmul
call
sbb
dec
fmul
dec
and
bound
aam
aam
sbb
rol
cmp
mov
cmps
or
jnp
or
pop
sbb
dec
das
push
jbe
test
jmp
pop
in
pop
jmp
adc
icebp
sbb
call
xchg
mov
lods
sub
pop
and
and
dec
(bad)
fiadd
jbe
push
mov
pop
cs
xor
sub
fs
inc
stc
cmps
add
cmp
and
add
scas
scas
jle
ss
into
jp
mov
mov
push
or
push
dec
jg
mov
(bad)
cdq
pop
test
outs
jg
and
lahf
xor
cwde
mov
int3
loop
mov
jg
cmp
aam
xor
dec
mov
xchg
rcl
push
lahf
out
mov
sti
fisubr
ret
and
fcmovbe
fcmovb
sub
inc
loopne
pop
es
scas
pop
cmp
add
mov
sbb
xchg
sub
aas
pop
pop
sbb
scas
mov
fldenv
in
push
cmp
inc
cmp
mov
in
paddusw
popf
imul
jp
cld
cmp
cmp
mov
or
push
cli
mov
pop
(bad)
int
movs
cmp
(bad)
mov
cmp
xchg
mov
xor
xchg
mov
jl
xchg
fidivr
cmp
add
jmp
inc
sub
fiadd
or
mov
aaa
test
pop
sub
lds
fstp
xor
mov
shl
adc
aas
xchg
mov
or
fwait
jnp
add
repz
adc
call
mov
mov
mov
fs
inc
push
ficom
mov
sbb
repz
dec
mov
std
jmp
inc
sbb
add
jbe
fsubr
out
ja
adc
sbb
lods
xchg
xor
pop
or
jmp
movs
or
fidiv
(bad)
pop
push
call
lock
sub
ret
jecxz
ins
jg
sbb
shl
adc
mov
not
fxam
dec
test
xor
jp
cdq
loope
repnz
leave
dec
out
or
inc
jns
loope
test
pop
fisttp
in
clc
out
arpl
loope
or
jmp
(bad)
mov
push
jbe
ror
retf
pop
stos
cmp
lds
js
and
test
call
dec
push
jmp
xchg
jge
push
arpl
push
add
retf
(bad)
jbe
pop
and
sbb
in
and
xchg
jne
xor
jge
(bad)
stc
mov
add
fwait
mov
test
dec
jbe
dec
test
xlat
(bad)
push
sub
clc
sub
cmps
imul
pop
adc
dec
push
xor
lods
sub
push
jmp
out
add
pop
int3
ror
pop
outs
repnz
jo
or
stc
sbb
cwde
cld
adc
movs
rcr
mov
mov
adc
xchg
jmp
cmp
aam
mov
imul
adc
pop
xchg
dec
and
lds
mov
call
push
mov
push
dec
cmp
sub
xchg
lahf
xchg
(bad)
and
mov
shr
movs
cmp
dec
mov
pusha
mov
mov
cld
aas
movs
cmps
fild
out
inc
ror
je
cmp
jecxz
mov
inc
arpl
lds
retf
push
pop
xchg
(bad)
popa
sub
inc
pop
pop
cmps
dec
add
les
je
ins
movs
arpl
dec
sub
push
dec
mov
dec
and
sbb
pop
data16
ret
mov
aaa
mov
imul
sbb
add
in
adc
inc
ret
jbe
rep
bound
mov
pop
(bad)
mov
and
sub
stos
adc
sahf
xor
imul
mov
(bad)
stos
cmps
fistp
add
test
ror
mov
inc
mov
push
jle
pop
popw
xchg
scas
bound
cmps
jns
dec
movs
cwde
sub
xor
and
sub
stc
movs
sbb
dec
cmp
adc
icebp
xor
push
jnp
popf
xor
jle
cmp
dec
pop
adc
retf
push
sbb
(bad)
sti
sub
xor
jbe
or
xchg
inc
jg
pushf
std
ficom
pop
push
jne
cmp
jle
movs
mov
or
inc
out
call
mov
mov
mov
retf
ss
push
fisttp
aad
pop
scas
into
scas
enter
test
pop
les
adc
xchg
push
mov
pop
xor
imul
dec
push
div
pop
in
xchg
xchg
dec
mov
and
cmp
dec
push
jb
loopne
sub
cmp
xlat
mul
jne
daa
xchg
push
mov
jmp
aad
add
shr
xor
inc
jb
mov
mov
leave
sub
ds
or
xchg
arpl
rol
adc
hlt
mov
add
mov
push
xchg
fbstp
mov
jl
adc
in
neg
ret
cmp
(bad)
or
cmp
jbe
or
sahf
push
arpl
mov
dec
pop
mov
sub
sub
sbb
sti
sbb
mov
xor
mov
mov
xchg
popf
mov
or
shr
movs
repnz
fcom
fiadd
xor
mov
dec
jne
int3
pop
ins
jnp
mov
xchg
sbb
pop
add
aaa
jge
pop
nop
in
push
xor
pop
rol
mov
jmp
int
test
sbb
jne
imul
add
or
mov
pop
movs
push
cmp
fadd
js
in
xchg
pop
pushf
push
leave
iret
(bad)
dec
cmp
cwde
sbb
(bad)
cmp
pop
sbb
hlt
dec
and
jo
push
cmp
retf
xor
cmp
jae
add
rcl
stos
push
and
cmps
iret
adc
outs
cmp
and
outs
jmp
xchg
sbb
dec
xor
shr
test
fidiv
xchg
or
dec
mov
jmp
sbb
xor
mov
jp
adc
rol
xchg
es
(bad)
push
lods
or
call
jmp
push
test
xchg
sbb
sbb
jg
retf
aad
lods
pop
inc
add
retf
ins
inc
or
test
sbb
mov
push
cmps
data16
dec
inc
out
xor
mov
test
mov
cdq
or
adc
adc
jmp
or
call
scas
rcl
xchg
push
sbb
mov
mov
inc
int
or
sbb
fcomp
sub
or
xchg
imul
mov
xor
lods
leave
scas
mov
mov
test
gs
gs
push
sub
dec
arpl
xor
cmps
retf
fimul
aam
xchg
sub
lahf
ret
mov
jne
fucom
add
and
mov
hlt
bnd
shl
pushf
xor
in
mov
and
mov
(bad)
dec
mov
push
xchg
or
rol
(bad)
fild
jl
xchg
xor
cmc
and
call
sbb
add
mov
in
push
mov
pop
xchg
sbb
fisub
inc
loopne
dec
aaa
dec
dec
xchg
fistp
retf
mul
(bad)
xchg
sub
(bad)
das
and
ins
push
call
inc
loop
das
dec
inc
pop
fbstp
sub
jmp
xchg
fisubr
ja
stos
jg
clc
js
jecxz
cmc
adc
push
mov
daa
cmp
xor
aam
mul
mov
pop
push
mov
sbb
adc
loopne
das
(bad)
cmp
pop
std
jp
cmc
ret
sub
rcr
mov
mov
cmp
sti
and
inc
cmp
adc
push
(bad)
and
enter
and
fcom
popf
retf
jmp
adc
xor
add
xchg
and
call
jns
dec
clc
cs
ret
push
nop
mov
push
fistp
dec
repz
es
pop
cs
mov
xchg
int3
cwde
dec
out
or
sahf
fild
and
jo
dec
pop
push
and
xchg
adc
sar
add
cmp
popa
mov
ror
jo
test
retf
xor
adc
not
(bad)
push
jae
xchg
cs
push
and
cdq
test
jmp
xor
cmps
movs
scas
stc
xor
sub
mov
mov
dec
in
adc
sub
and
out
inc
mov
xchg
call
adc
ins
adc
inc
pop
and
adc
mov
call
mov
jnp
ret
mov
and
addr16
inc
adc
lahf
dec
cmp
pop
mov
sahf
(bad)
cmp
mov
mov
aaa
add
add
test
cmp
mov
dec
daa
dec
leave
inc
(bad)
sbb
mov
dec
push
hlt
cwde
icebp
sub
add
inc
xchg
xchg
cmp
fisubr
je
inc
cmp
ret
cli
push
and
push
mov
sbb
repz
fimul
cwde
scas
aas
mov
int3
repnz
pop
call
jp
je
cli
mov
add
stos
daa
(bad)
add
inc
inc
inc
mov
push
aas
jne
outs
addr16
and
or
movs
add
iret
loopne
jmp
(bad)
push
cmp
lea
push
dec
daa
iret
outs
or
jnp
aad
dec
push
pop
out
scas
sar
inc
out
pop
(bad)
movs
lock
sbb
out
js
popf
jg
pop
(bad)
adc
popf
sub
mov
lgs
push
jae
mov
jecxz
sbb
or
add
fldcw
outs
cld
sub
stos
inc
push
mov
cmp
fild
dec
scas
stos
mov
je
data16
in
mov
and
or
cmc
xchg
jb
in
mov
frstor
jo
pop
scas
cdq
cmp
sub
pop
imul
stos
xchg
sar
xchg
add
cwde
mov
pop
inc
jmp
stos
sub
inc
setns
dec
mov
push
fwait
pushf
push
test
pusha
sub
jmp
ret
cmp
outs
xchg
inc
xor
sub
arpl
add
xchg
adc
add
(bad)
iret
jb
icebp
xor
pop
xor
in
pause
dec
add
test
pop
aaa
(bad)
mov
mov
(bad)
movs
jnp
push
cs
add
cmps
pop
xor
jmp
dec
das
push
jge
int3
pusha
paddusw
and
in
pop
inc
push
call
add
push
push
mov
mov
loop
jp
mov
shl
jae
dec
and
loopne
dec
jbe
das
loop
mov
jmp
adc
or
pop
ds
sbb
out
enter
cmp
bnd
shl
inc
sub
jl
sub
sub
daa
add
push
daa
arpl
push
or
into
xchg
sub
loopne
and
jno
or
bswap
xchg
stc
xlat
(bad)
xor
adc
cmps
mov
inc
lods
cmp
xor
fnstsw
and
adc
xchg
ins
ss
ja
cdq
mov
push
xor
out
shl
adc
retf
sub
push
ja
mov
int
imul
pushf
jl
mov
adc
shl
xchg
inc
dec
xor
sti
xchg
(bad)
das
inc
mov
xor
sub
mov
inc
ror
push
dec
add
sbb
movs
jnp
sbb
movs
repz
mov
popf
nop
stos
aad
addr16
(bad)
daa
mov
out
mov
jb
fidiv
int
mov
jmp
fist
nop
inc
inc
add
jmp
cs
call
xchg
aas
cmc
pop
shr
(bad)
imul
add
in
mov
call
pop
(bad)
cmp
test
push
pop
pop
fcmovne
pop
jae
leave
inc
cmp
sbb
jo
jp
sub
and
in
sbb
cmp
or
cmp
rol
gs
movs
xor
jmp
xor
pop
popa
adc
pop
inc
out
sbb
pop
jge
xor
mov
cmp
loop
jae
clc
aam
(bad)
sbb
ja
mov
push
ror
data16
rcl
leave
(bad)
sbb
mov
mov
sahf
in
in
ss
adc
sub
std
mov
aas
push
arpl
mov
mov
or
call
jp
cmp
enter
(bad)
cmp
jle
add
inc
es
int3
jl
push
cmp
and
and
aad
sbb
xor
pusha
out
int3
pop
xchg
nop
dec
and
and
gs
mov
xor
gs
dec
sar
xchg
iret
dec
add
scas
(bad)
ins
shr
addr16
clc
xchg
stos
adc
aad
inc
and
push
fsub
push
ins
add
jo
mov
mov
mov
xchg
fnclex
mov
sub
stos
push
inc
jle
aas
and
aad
cli
xchg
rcr
test
scas
lds
pop
adc
jnp
inc
stos
jmp
or
scas
jne
fnsave
cwde
pop
sbb
aam
pop
leave
pop
xchg
mov
pop
retf
lods
and
stos
pusha
sbb
jle
dec
mov
in
or
inc
push
jmp
cmp
sub
dec
std
rcr
mov
cli
push
push
push
mul
mov
fld
call
pop
push
retf
retf
mov
aad
xor
popa
nop
ja
pop
jne
cmps
(bad)
jp
lods
jne
sbb
sahf
lock
clc
(bad)
ins
aas
sti
adc
(bad)
data16
pop
std
push
dec
xchg
add
in
out
and
call
sub
int3
cmps
and
cmps
pop
test
ret
cmps
or
mov
jne
cmp
pop
(bad)
popa
(bad)
inc
pop
ins
neg
idiv
sbb
test
call
or
dec
loope
out
dec
dec
fnop
push
neg
or
cmc
and
daa
push
test
repz
cmp
mov
push
bound
mov
adc
or
stc
fmul
inc
lahf
les
dec
mov
xor
lods
mov
sbb
pop
out
pop
mov
xor
push
adc
aam
sahf
xchg
retf
xchg
test
jbe
loope
aad
mov
fldenv
xchg
int
and
mov
stc
pop
inc
mov
dec
inc
sub
sbb
mov
mov
fstp
aaa
outs
popa
and
push
xchg
sbb
mov
in
ret
cmps
fucomip
inc
or
sub
adc
inc
add
call
add
cmp
inc
push
push
jns
mov
and
stos
lea
(bad)
or
movs
in
adc
sbb
std
xchg
push
jp
jp
in
(bad)
mov
jmp
test
dec
les
cmp
or
test
rcr
add
movs
(bad)
ja
scas
scas
test
inc
mov
fwait
jecxz
fwait
bound
clc
mov
or
bound
xor
es
mov
ins
lods
imul
in
ds
push
inc
jle
xchg
mov
xor
sub
push
leave
int
mov
lock
shl
cmp
fsubr
dec
jmp
shl
mov
cld
xlat
popa
mul
loope
and
movs
sbb
jmp
jo
mov
repz
push
int
xchg
jb
sub
adc
dec
and
addr16
and
pop
adc
shr
push
shr
popa
dec
cld
repz
(bad)
in
xchg
adc
adc
jnp
pop
sbb
sti
outs
ficomp
jo
add
loop
pop
cdq
ds
adc
or
shr
das
and
fs
sbb
pushf
std
dec
repnz
mov
mov
dec
pushf
xchg
adc
shr
in
int3
aad
(bad)
fs
mov
lahf
push
aaa
sub
cmp
popa
sbb
mov
mov
icebp
retf
repnz
leave
js
sbb
jg
mov
call
(bad)
dec
out
mov
lods
aad
in
pop
aad
enter
dec
mov
cmp
inc
sub
push
inc
pop
xchg
nop
add
das
and
xor
ins
push
arpl
ret
xchg
mov
test
add
or
int
and
jl
push
(bad)
fild
xor
data16
(bad)
(bad)
cld
jmp
popa
cmp
inc
lea
js
push
fbstp
mov
scas
sar
(bad)
std
aad
xchg
aaa
dec
popa
movs
scas
push
repnz
pop
mov
cmc
icebp
add
mov
push
sbb
pusha
jb
or
pusha
sti
das
mov
adc
test
lods
xchg
arpl
lock
add
xor
cmc
pop
popf
mov
loop
cdq
cmp
cdq
test
test
push
or
sti
rcr
shr
sub
outs
push
rcr
jae
out
lahf
ds
pop
fidivr
fwait
mov
iret
mul
popa
lods
lods
jmp
mov
in
cmp
xchg
cli
pop
dec
daa
adc
xor
fldcw
cmp
(bad)
xchg
pop
sub
and
mov
in
bound
xor
xchg
sub
sbb
xor
pop
adc
dec
xor
std
push
mov
(bad)
pop
cmp
rcr
inc
ja
shl
dec
mov
cs
jmp
xchg
ret
test
lds
rcl
push
in
mov
xor
sub
neg
inc
lea
fsub
mov
add
xchg
inc
mov
adc
push
pusha
(bad)
mov
lods
jl
repnz
inc
push
loopne
cld
lods
retf
mov
xchg
xor
mov
ins
int3
jmp
push
retf
push
cmp
(bad)
and
add
mov
pop
retf
xchg
pop
and
pop
(bad)
ror
pop
jmp
sbb
jns
daa
mov
sbb
mov
cld
(bad)
and
scas
xor
add
inc
cld
enter
mov
jne
(bad)
add
(bad)
cmp
icebp
pop
inc
push
call
push
sbb
cs
xchg
add
add
sbb
xchg
rcl
data16
popa
mov
in
mov
cmp
cmc
pop
lea
push
movs
dec
xor
test
leave
cmp
or
repz
popf
pop
cmp
or
call
mov
mov
je
sbb
push
into
mov
mov
addr16
push
xor
push
(bad)
push
sub
pop
dec
adc
mov
shr
mov
and
jge
push
push
(bad)
retf
call
test
into
call
adc
push
mov
int3
cmp
(bad)
out
in
shr
fisub
out
mov
hlt
mov
cmp
sbb
adc
out
sbb
outs
jle
cmps
mov
loope
das
shr
pop
int
mov
ror
cdq
cmps
jl
push
fimul
rol
repz
mov
xchg
sub
mov
clc
push
jnp
mov
outs
test
jmp
jbe
mov
fnstcw
sub
cwde
mov
xchg
cdq
sub
push
mov
and
(bad)
jne
test
fnsave
xor
bound
pusha
sbb
cmp
mov
sub
inc
repnz
outs
popa
jmp
shl
xchg
frstor
xchg
mov
test
mov
jb
xlat
dec
jne
or
jmp
dec
push
cs
test
push
xchg
cwde
fwait
into
mov
cmc
pop
pop
jno
sahf
inc
push
sbb
xchg
loopne
add
addr16
adc
das
(bad)
rol
adc
call
ret
pop
push
adc
cmp
or
push
lds
mov
je
daa
adc
xor
cmp
(bad)
int
adc
xchg
pop
fdiv
or
popf
out
stc
mov
mov
mov
add
movs
pop
jo
push
sbb
pop
(bad)
mov
leave
ror
push
inc
xor
call
and
sbb
out
es
mov
sub
push
ror
xchg
pop
push
xor
cmp
dec
cmp
xor
or
mov
les
mov
dec
hlt
jbe
xchg
cmp
(bad)
jne
jae
adc
fs
fist
push
jecxz
rol
fs
not
rol
enter
gs
cmp
cs
addr16
cdq
shr
shl
inc
cmp
int3
mov
sub
inc
or
mov
sahf
mov
xchg
mov
dec
pop
inc
jg
xchg
xor
int3
mov
inc
pop
sub
aam
aad
push
sbb
scas
std
clc
pop
mov
shl
xchg
mov
sub
mov
cdq
outs
leave
xchg
or
icebp
sub
mov
bnd
test
out
fwait
stc
mov
mov
mov
(bad)
icebp
out
stos
mov
lahf
lahf
setns
dec
je
add
in
jnp
jae
outs
hlt
fs
int
push
pop
sub
repz
inc
iret
pusha
fmul
mov
dec
inc
enter
push
std
cli
fsub
fnstenv
in
push
data16
in
dec
stos
neg
loope
movs
mov
cmps
dec
and
test
imul
pop
ins
push
test
sbb
sar
push
jne
pop
mov
mov
pop
mov
and
xchg
out
pop
mov
sti
dec
or
pushf
push
mov
sub
push
sbb
fist
scas
xchg
mov
aas
mov
jnp
sub
pop
mov
push
mov
add
or
jae
mov
dec
add
xchg
xchg
pop
inc
adc
(bad)
cmc
dec
adc
pusha
fxtract
cs
dec
in
mov
cmp
rcl
ins
out
adc
fisub
repz
or
sub
and
shr
add
ins
sbb
add
fdivr
xor
xchg
movs
push
inc
fwait
pop
inc
mov
or
sti
jb
(bad)
xchg
stos
retf
jmp
dec
movs
cmp
jo
scas
hlt
jg
or
nop
jmp
enter
inc
retf
js
adc
out
add
mov
xchg
out
movs
mov
(bad)
inc
test
xchg
fimul
xchg
mov
sahf
imul
int
or
push
adc
or
fs
mov
pop
retf
lods
repz
std
jmp
cmp
fcomp
xor
loope
test
jge
dec
pop
dec
lahf
sbb
pop
imul
rcr
(bad)
imul
mov
daa
test
lods
mov
mov
jne
iret
dec
mov
mov
sub
scas
es
xor
pop
retf
xor
add
jno
lahf
jecxz
jnp
in
call
(bad)
retf
add
sbb
out
popf
movs
arpl
ret
adc
add
pop
lock
mov
jmp
(bad)
(bad)
inc
inc
mov
mov
stc
loopne
inc
(bad)
push
mov
(bad)
aas
cwde
xchg
pop
jns
neg
shr
and
hlt
cmp
ret
stos
movs
push
push
rol
xchg
and
pop
and
das
fs
adc
rcr
pop
(bad)
ins
jne
jmp
xor
ss
pop
imul
test
cld
aad
dec
cmp
cmp
aas
jecxz
add
push
pop
sbb
pushf
jnp
xor
cmp
xor
pop
cmps
xor
loop
cmp
sahf
xor
neg
mov
out
pusha
inc
push
sbb
or
push
xchg
mov
push
out
int3
jg
fild
sbb
mov
(bad)
out
loopne
in
test
jge
or
lods
data16
inc
adc
bound
pop
mov
adc
loope
out
push
xor
(bad)
in
fimul
mov
inc
and
cmp
call
popa
dec
pop
test
adc
imul
lods
(bad)
sub
lods
jae
jnp
ss
out
out
or
(bad)
fsubp
(bad)
outs
mov
mov
push
rol
jne
sub
pushf
or
cmc
jmp
loope
and
xchg
pop
test
sbb
das
push
dec
lea
ffreep
in
sbb
dec
in
inc
stos
lahf
inc
mov
fadd
enter
scas
cmps
fcom
call
idiv
retf
pop
aaa
cli
push
add
mov
leave
bound
ja
fucomp
rcl
sti
add
push
fcomi
sahf
pop
sbb
fldcw
xchg
mov
enter
cmp
push
repz
inc
mov
into
mov
push
jp
adc
jmp
aam
sbb
lea
repnz
(bad)
sar
pop
mov
push
imul
stos
jge
(bad)
push
xor
popf
mov
inc
rol
ins
ds
mov
xchg
and
pushf
std
xchg
mov
sar
inc
or
cmps
scas
mov
cmp
sbb
push
loope
loope
adc
int
das
stos
sbb
jl
jge
mov
adc
mov
mov
mov
stos
loopne
sbb
fidiv
sahf
movs
jno
sub
xchg
and
mov
cld
adc
sbb
outs
jne
fisttp
shl
in
dec
retf
adc
and
cmp
popa
jno
jno
cld
sub
or
daa
(bad)
fdiv
rol
das
push
adc
inc
pop
sbb
bound
inc
dec
in
or
xchg
loope
icebp
push
xor
xor
dec
fsub
fld
in
jmp
or
mov
pop
ror
sbb
xchg
pop
push
outs
jns
cmp
xor
sbb
inc
retf
jle
and
xor
jne
cmp
mov
popf
sub
add
icebp
int3
sbb
les
lods
sub
ret
adc
fsub
mov
ret
mov
call
sub
dec
add
jo
push
repnz
xor
sahf
stos
or
mul
out
dec
loopne
mov
mov
clc
jge
sti
xor
add
call
mov
cmp
xchg
xchg
fucomi
pop
rol
repnz
mov
gs
pushf
inc
push
ret
retf
dec
popf
or
fiadd
les
push
lds
inc
inc
outs
jns
add
js
mov
pop
aaa
movs
adc
add
hlt
ins
inc
test
and
dec
ret
out
sub
mov
sub
and
data16
adc
ins
or
add
js
loop
fnstenv
xlat
je
jmp
shl
sti
ret
xor
out
in
ss
loope
jge
cdq
(bad)
adc
(bad)
pop
in
xchg
cmp
sbb
repz
push
xchg
bound
stos
mov
push
jecxz
push
aas
test
pop
or
pop
lahf
inc
icebp
or
test
inc
imul
mov
or
pop
dec
adc
cmp
mov
mov
aaa
mov
adc
and
repz
xchg
das
fnstenv
aad
mov
inc
xor
jg
popf
imul
add
jecxz
mov
mov
aas
pop
je
inc
sbb
push
cmc
bound
stos
lds
pop
fldenv
repz
scas
sbb
clc
inc
(bad)
jg
ror
cs
inc
add
call
sahf
push
xlat
arpl
clc
mov
aaa
sti
test
repnz
inc
loopne
into
bound
imul
ret
and
je
(bad)
xchg
loop
push
movs
mov
sub
daa
mov
push
outs
rcl
fld
and
dec
pop
loopne
or
or
sar
data16
movs
shr
cs
pop
sub
and
push
mov
push
xchg
scas
scas
inc
aas
mov
das
ja
sub
iret
data16
add
push
pusha
mov
sti
mov
jg
sub
push
loopne
and
jmp
or
fdivr
jo
inc
daa
out
lock
retf
cmp
jecxz
adc
pop
dec
mov
mov
aas
push
mov
std
div
jl
inc
pop
and
mov
shl
push
aas
loopne
xchg
xchg
pop
ret
mov
retf
je
xchg
cmp
retf
fsub
js
lds
dec
jns
repnz
das
mov
clc
adc
or
mov
aas
xchg
daa
jae
jnp
inc
push
inc
adc
fsubr
push
cmp
pop
xor
push
rcr
fs
movs
push
(bad)
mov
mov
pusha
lock
push
push
cmp
push
sti
dec
xchg
and
outs
cmp
pop
push
in
inc
push
(bad)
xchg
fwait
aas
xchg
int3
xor
popa
xchg
sbb
loopne
mov
test
mov
mov
dec
movs
enter
dec
(bad)
scas
sub
sub
xchg
fild
mov
stos
cmp
pop
mov
les
or
addr16
sub
jns
cmp
pop
push
fs
fistp
and
addr16
leave
inc
fucom
sbb
or
xchg
push
(bad)
bound
sahf
jle
aad
jecxz
in
add
ins
pusha
pop
cmps
dec
je
mov
add
iret
mov
std
scas
mov
add
scas
cmp
add
stos
pop
push
adc
pop
xchg
imul
sbb
in
jge
pop
shl
sub
jb
lea
inc
cmp
stos
sbb
std
loopne
fistp
aam
inc
dec
mov
dec
mov
push
rcl
mov
jo
mov
inc
int
repnz
mov
sbb
sub
push
mov
mov
sahf
xor
out
loop
inc
cmp
pop
xor
mov
pop
sub
add
pushf
sahf
ss
pop
push
mov
sbb
outs
bound
xor
rdmsr
mov
cdq
in
inc
sbb
adc
pop
dec
push
outs
jmp
mov
add
cmps
in
(bad)
xor
jle
shl
inc
cli
das
out
push
fsub
loope
dec
add
outs
or
and
repnz
sub
and
xchg
test
xor
rcr
mov
mov
iret
add
gs
push
push
movs
pop
iret
loope
test
or
xor
rcr
adc
pop
mov
stos
cwde
mov
xchg
sti
inc
test
sub
nop
lods
mov
xchg
div
out
push
cmp
mov
mov
pop
sbb
jae
stos
jne
or
push
xchg
cmp
je
(bad)
fucom
pushf
add
jb
xchg
js
js
pop
ds
jg
loopne
dec
inc
aad
pop
mov
sub
jbe
push
dec
pop
hlt
or
fs
or
inc
mov
mov
jmp
fwait
inc
xchg
aas
adc
js
add
or
cmp
retf
jb
mov
ret
jne
outs
xchg
ins
movs
hlt
es
gs
test
xchg
sub
xchg
ret
xchg
pop
xchg
imul
sahf
jns
inc
hlt
repz
movs
in
ror
mov
sub
xchg
inc
xor
xchg
fadd
mov
mov
add
xchg
mov
cmp
jecxz
aad
sbb
fistp
cmp
xor
inc
jno
xchg
scas
addr16
mov
rcl
inc
sub
ins
mov
mov
rol
lods
pop
dec
and
ret
xchg
mov
push
push
sar
sahf
jmp
aaa
ins
loope
retf
je
mov
xchg
mov
dec
add
clc
fdiv
mov
sub
mov
cmp
mov
mov
lea
fsub
xchg
push
out
pushf
ret
jg
mov
xchg
loopne
repnz
out
cmp
mov
mov
iret
jmp
leave
fidiv
push
add
ror
(bad)
fistp
and
loop
and
test
cdq
hlt
loop
outs
inc
pop
pop
mov
test
arpl
cld
ret
sub
loopne
aaa
dec
mov
lods
inc
and
xchg
imul
push
popa
leave
jp
adc
pop
xchg
mov
and
cmc
sub
imul
xlat
out
mov
dec
dec
sahf
add
mov
ret
push
fist
(bad)
bound
push
imul
in
mov
lea
sub
mov
push
and
in
add
icebp
add
jmp
mov
fldcw
ror
and
jb
pop
in
mov
scas
test
adc
cwde
push
jg
out
test
jne
fiadd
in
mov
xadd
add
add
mov
add
repz
(bad)
movs
adc
pop
jg
mul
gs
les
in
jmp
mov
add
ret
mov
clc
arpl
stc
xchg
xchg
sar
cdq
push
sub
(bad)
xor
test
xchg
jecxz
lock
stos
jb
push
xchg
push
pop
nop
add
ss
mov
les
(bad)
daa
pop
inc
call
test
ja
jne
call
xor
shl
fld
rol
add
adc
test
xchg
mov
add
out
outs
gs
(bad)
aam
loope
inc
xor
cmp
push
arpl
clc
aas
call
xchg
pop
add
push
mov
sahf
inc
dec
in
ins
add
mov
adc
pusha
adc
ret
push
xor
cmp
and
(bad)
(bad)
call
cs
xor
fld
xchg
jno
in
inc
ss
push
inc
(bad)
cmp
bound
xlat
jbe
loop
inc
jbe
aaa
or
das
jmp
repz
cmp
adc
and
loopne
pop
inc
(bad)
std
addr16
jmp
dec
pop
pushw
mov
jg
aas
push
int
mov
cmc
std
cmc
loop
adc
or
push
mov
jg
out
pop
mul
rol
pop
sahf
and
inc
out
out
nop
aam
inc
ret
daa
ja
rol
ret
ss
and
cli
push
xchg
sub
jae
fild
sub
push
gs
xchg
mov
pop
mov
adc
adc
cmp
out
adc
popf
idiv
sub
pop
es
pop
or
or
inc
test
sub
or
ins
mov
popa
jl
or
stc
popw
or
adc
fnstcw
pop
ss
dec
push
nop
hlt
dec
sub
lock
mov
cmps
ins
adc
and
dec
mov
stos
rcr
mov
pop
or
xchg
xlat
xor
cwde
lods
test
mov
outs
sub
mov
xchg
inc
mov
xchg
lahf
pop
ja
shl
dec
dec
push
cmp
jo
lods
repz
push
aam
icebp
push
cmp
push
sbb
jle
cmc
push
xchg
fisubr
cmp
fsub
mov
inc
adc
jl
loope
xchg
call
push
sub
cld
mov
sbb
addr16
aad
pop
pusha
and
sahf
cmp
xor
adc
mov
mov
dec
les
int3
and
adc
and
mov
add
jp
or
mov
xor
(bad)
jmp
rcr
dec
hlt
xor
sbb
shl
sub
inc
outs
retf
mov
mov
ins
cmp
aam
das
cmps
sub
xchg
fmul
pop
mov
xlat
jg
jmp
adc
in
xchg
push
call
xchg
push
movs
sbb
xchg
sub
(bad)
mov
call
or
inc
in
sar
in
ss
(bad)
hlt
add
mov
in
data16
push
inc
outs
mov
enter
out
mov
in
xor
es
mov
jo
out
pop
jns
in
jmp
and
shl
in
mov
in
and
in
pop
addr16
and
mov
bnd
mov
js
mov
pushf
sbb
push
fmul
or
mov
pop
(bad)
pop
or
ret
push
repz
xor
mov
sub
fnstsw
lahf
adc
(bad)
cmp
je
dec
aas
scas
call
xchg
ja
add
movs
mov
sbb
sub
jge
ds
out
in
mov
outs
add
out
xchg
je
cmp
adc
jg
adc
(bad)
adc
ss
ins
pop
and
and
add
mul
add
das
dec
scas
inc
or
cdq
shr
adc
mov
(bad)
(bad)
adc
lahf
out
mov
sub
cmp
cld
lahf
mov
std
xchg
outs
clc
cmc
int3
std
push
clc
mov
hlt
scas
add
in
mov
adc
jmp
(bad)
mov
lahf
or
inc
dec
and
shl
and
jb
or
jge
add
(bad)
enter
and
add
data16
mov
ja
into
ret
stos
jmp
xchg
fistp
sahf
cld
aad
xor
cmps
cli
js
push
push
mov
xchg
dec
js
xchg
inc
in
adc
dec
jbe
in
in
add
push
jp
jge
jmp
ds
xor
mov
cmp
inc
xchg
add
jmp
int
(bad)
leave
sbb
and
xor
mov
mov
aad
sub
jne
and
and
sub
daa
inc
inc
out
jne
dec
fwait
xchg
rcl
fs
imul
push
pop
popa
xor
fnsave
inc
jge
call
push
sub
sar
push
or
xchg
and
or
jo
(bad)
push
mov
or
pop
add
rcl
mov
adc
inc
test
or
lock
sub
mov
(bad)
xor
pop
int3
jnp
sbb
ds
inc
gs
xchg
jecxz
sub
mov
and
mov
jg
or
jne
not
push
fisttp
ret
cmps
fs
push
cmp
xor
mov
pop
pop
push
ins
fwait
add
or
add
scas
cld
xchg
es
daa
sbb
lods
lea
arpl
mov
push
pusha
out
jl
leave
jbe
cs
xor
in
imul
stos
cld
jnp
mov
test
adc
(bad)
ss
mov
retf
cs
call
add
mov
ins
cmp
in
mov
cld
xor
mov
loopne
outs
pop
sbb
jp
lahf
sbb
ja
mov
jmp
test
push
push
sub
push
mov
int3
ja
jg
jns
xor
call
jnp
jnp
outs
xor
sub
rcr
repz
lods
inc
dec
adc
xchg
jne
pushf
xchg
cwde
pop
mov
and
adc
lahf
add
rcl
fcomp
cmp
repz
inc
mov
push
pop
test
push
or
mov
pop
mov
fnstsw
push
hlt
pop
aas
mov
stc
daa
inc
push
call
nop
jg
nop
cdq
mov
dec
mov
mov
cwde
stos
jo
and
or
loopne
test
imul
sbb
enter
lds
pop
push
iret
mov
int3
fwait
std
ret
gs
retf
dec
movs
movs
sbb
sti
cld
or
push
xor
outs
xor
push
cmp
xchg
frstor
push
fwait
in
popa
(bad)
xor
addr16
inc
movs
xor
push
(bad)
or
mov
in
shl
add
pop
ja
daa
push
pop
out
out
jbe
lahf
mov
bound
mov
ja
dec
sub
mov
push
sbb
dec
inc
dec
inc
mov
loope
push
out
mov
xchg
data16
push
nop
shl
or
jb
data16
jne
dec
inc
pusha
retf
rol
fistp
jmp
mov
inc
fcomp
jo
add
pop
mov
xchg
sub
mov
adc
jg
in
das
sub
rcr
xchg
pop
nop
pop
movs
outs
jae
and
mov
and
popa
iret
inc
add
push
and
dec
pusha
push
ins
sbb
in
das
lahf
les
push
sbb
add
jnp
es
test
in
icebp
cmp
test
push
test
je
jmp
in
fcomp
xchg
dec
cld
aad
xchg
(bad)
call
iret
xchg
test
les
in
sbb
sbb
mov
xchg
test
in
inc
xchg
das
stos
cmc
dec
lock
and
add
addr16
xchg
dec
jnp
scas
mov
aam
fdivr
jl
fnstcw
cs
mov
fsubr
jae
out
fcompp
jmp
inc
adc
push
dec
(bad)
adc
icebp
bound
fsubr
pop
cwde
fsubr
xchg
cmp
jl
or
push
popa
dec
nop
and
dec
inc
add
sub
cmp
es
gs
daa
inc
push
xor
add
enter
adc
adc
pop
dec
jo
lods
out
movs
lahf
movs
xor
mov
xlat
jle
and
cdq
jle
lds
cmp
jle
sar
adc
test
jl
arpl
sub
popf
xchg
cmp
int3
push
adc
push
leave
je
jle
shl
mov
mov
xchg
sbb
mov
aaa
loopne
loop
cmp
dec
sahf
push
xchg
shr
push
jns
mov
sbb
addr16
pop
cld
add
mov
out
inc
jmp
sti
push
jb
add
inc
shl
push
retf
sub
out
aam
outs
cwde
jecxz
add
gs
and
call
nop
into
xor
jo
test
and
mov
sub
xchg
lods
mov
dec
fisub
xchg
sub
and
cmps
xchg
push
inc
sti
movs
cmps
cmp
cdq
adc
xchg
pop
xor
jmp
jb
std
adc
call
pop
(bad)
xor
xchg
mov
jl
imul
lods
inc
shl
jge
jnp
mov
cwde
rcr
pop
inc
jo
jo
push
mov
cwde
mov
xchg
xchg
sti
jnp
(bad)
jo
fs
stc
add
push
pop
(bad)
loope
lods
and
xchg
lods
call
jo
lods
jmp
mov
inc
in
push
sbb
cmp
lods
icebp
add
outs
mov
pushf
push
sub
mov
in
pusha
sbb
mov
pop
inc
and
imul
vpcmpgtb
outs
sbb
in
imul
add
pop
push
hlt
(bad)
pop
gs
cli
adc
cmp
ins
jle
cmp
sub
pop
pop
push
mov
sub
sub
(bad)
sahf
push
xor
enter
iret
dec
push
popf
scas
fistp
rcr
outs
inc
cld
mov
in
lahf
inc
int3
cmp
in
inc
push
lea
int
sub
mov
jge
sbb
icebp
lea
mov
aad
arpl
cdq
(bad)
push
stos
(bad)
and
and
add
xor
adc
jle
shl
jge
test
loop
dec
rcr
push
(bad)
fiadd
imul
out
clc
js
mov
and
enter
xor
mov
repz
jp
cmp
call
mov
fild
stos
scas
nop
sub
fldenv
arpl
out
stos
shl
scas
xor
cmc
xor
jb
les
add
(bad)
pop
int3
hlt
push
cmps
jge
push
xor
movs
clc
fwait
inc
aad
mov
or
cdq
push
push
cmp
seto
adc
ret
enter
int
rcr
icebp
pop
fs
cmc
sti
sbb
mov
cmp
cmc
add
add
dec
leave
sub
adc
pop
mov
retf
jns
push
mov
loope
push
jp
or
pop
shl
lods
dec
mov
(bad)
pusha
(bad)
sbb
js
jge
out
jae
shl
paddusw
das
shr
xchg
cmp
sti
aad
pop
rcr
dec
nop
(bad)
mov
cmp
(bad)
xor
push
les
push
adc
enter
rcr
ret
dec
into
jle
in
int3
cmps
push
mov
popa
scas
popf
pop
xchg
or
xchg
mov
pop
cli
cmc
mov
out
ja
xor
les
(bad)
icebp
adc
mov
and
retf
add
or
mov
add
dec
and
jl
mov
add
mov
rol
cmc
mov
sub
add
lock
xor
aad
shl
test
cwde
and
mov
popa
sbb
sti
mov
inc
mov
ss
mov
pop
jp
jnp
shr
cmp
dec
cmp
mov
cmp
mov
out
retf
sub
and
jae
and
sbb
push
fld
mov
mov
adc
stc
inc
cmps
jp
xor
sbb
ins
fs
pop
push
mov
dec
js
shl
(bad)
jmp
jne
cmp
enter
mov
or
xlat
pop
jno
out
not
lods
push
add
retf
gs
cmp
xor
sub
lds
scas
cmp
inc
rcr
xor
and
adc
loope
inc
adc
jg
or
pusha
iret
mov
bound
aaa
int3
jle
daa
dec
mov
adc
push
bound
mov
pop
ficom
pop
dec
cmp
mov
leave
outs
arpl
pop
fisubr
jge
sbb
out
mov
lods
xchg
popf
clc
cmp
mov
xor
inc
retf
retf
lock
stos
loope
push
inc
movs
and
or
xchg
ficomp
addr16
xor
stos
hlt
pop
push
mov
cmps
clc
sbb
gs
retf
stc
rcl
icebp
cmc
push
sbb
mov
jp
arpl
bound
xchg
or
adc
scas
push
aam
leave
fmulp
push
jmp
inc
ss
mov
ret
jecxz
pop
ss
jnp
mov
das
rcr
cdq
add
popf
pop
lea
jne
adc
subps
stos
push
cmp
les
rcr
sub
pop
(bad)
add
mov
dec
gs
jmp
sub
stos
push
adc
enter
push
fadd
jae
call
mov
lods
(bad)
push
jb
mov
in
(bad)
dec
clc
cmp
scas
sub
mov
cdq
cmp
pop
(bad)
push
jnp
popa
jmp
adc
xor
stos
pop
loope
cld
jnp
xchg
mov
in
test
sub
(bad)
xor
sub
nop
or
ror
stc
and
in
mov
cli
mov
push
mov
xchg
lahf
sub
lods
cmp
repz
(bad)
dec
add
adc
idiv
xor
inc
daa
daa
repnz
xor
lods
andnps
sub
addr16
jg
inc
iret
cmp
mov
mov
aam
pmovmskb
out
or
xchg
std
(bad)
(bad)
test
(bad)
sub
mov
mov
mov
push
mov
and
rol
call
cmp
jns
cmps
sahf
xor
in
xor
lock
fnstenv
cmp
mov
repnz
adc
aaa
sbb
mov
mov
mov
xor
jle
lods
ja
js
push
mov
dec
ins
push
int
mov
cmps
mov
jg
jl
popf
fs
mov
cmp
cli
or
in
jns
jbe
fnstcw
(bad)
dec
xchg
mov
cmp
mov
xor
pop
or
adc
jae
push
leave
scas
pop
mov
xchg
fs
mov
ret
mov
addr16
xor
push
loope
clc
pop
jp
cwde
mov
mov
and
test
pusha
(bad)
and
shl
adc
mov
std
mov
ffree
inc
in
pushf
call
call
out
mov
mov
popa
test
adc
(bad)
and
jne
loop
repnz
sbb
xchg
hlt
aaa
xchg
scas
imul
adc
mov
loope
mov
mov
push
nop
sub
(bad)
or
jg
sub
sbb
xchg
lea
or
out
push
fmul
mov
test
pop
aad
in
popa
clc
(bad)
int3
pop
icebp
out
div
jp
sar
in
jbe
repnz
dec
(bad)
fidivr
mov
fcom
xor
mov
jo
pop
push
sbb
push
jbe
or
adc
call
fild
mov
dec
mov
sbb
repnz
lea
sti
mov
and
lds
or
pop
clc
sahf
mov
aas
mul
sbb
fld
jmp
(bad)
ins
retf
mov
into
adc
jno
sahf
inc
and
pusha
fmul
(bad)
xor
mov
(bad)
fimul
(bad)
stos
mov
addr16
hlt
aam
fist
jecxz
mov
dec
or
rcr
lea
test
dec
je
in
retf
xor
shl
sysret
popf
push
call
mov
scas
leave
push
pusha
push
xchg
das
loope
xor
cli
sbb
mov
mul
cmp
and
mov
or
push
dec
mov
(bad)
daa
adc
jno
repnz
push
(bad)
rcl
sar
cmps
sub
daa
fcmovnu
ss
cmc
lods
sub
sbb
dec
shl
dec
inc
cmps
jle
adc
cmps
in
(bad)
push
ss
inc
fstp
cmps
out
fld
loop
mov
mov
(bad)
pop
ins
loopne
ss
sub
xor
pop
std
mov
xchg
jg
ret
push
mov
cli
cli
and
(bad)
mov
push
sub
jb
mov
mov
xchg
int
sti
(bad)
in
test
aad
mov
cmc
gs
fist
arpl
sbb
mov
sub
les
daa
test
cmc
std
sbb
das
xchg
xor
test
mov
mov
mov
test
push
jns
push
cmp
push
mov
lods
mov
lea
jno
push
or
icebp
rcl
jl
ins
sub
xor
test
cmps
in
shl
and
jmp
scas
mov
jns
into
test
fs
sbb
mov
and
push
or
in
push
test
mov
xchg
outs
test
movs
jmp
mov
cmps
add
xchg
add
mov
jmp
and
es
test
in
call
pop
xor
int3
jl
xchg
sub
mov
sar
sti
loopne
stc
int
(bad)
dec
or
cmps
jno
das
inc
(bad)
repnz
shl
mov
pop
test
jmp
cdq
repz
ins
pop
(bad)
daa
cwde
or
adc
mov
or
mov
fxch
mov
jnp
(bad)
jno
mov
ins
xor
jmp
pop
jmp
fcomip
and
or
repz
outs
or
mov
pop
lea
imul
arpl
inc
xchg
mov
sti
and
das
xchg
fstp
xchg
loopne
(bad)
fsub
cmp
int
in
and
(bad)
pop
sub
ins
mov
mov
in
int3
imul
cli
jle
fs
shl
adc
stos
ret
stos
addr16
call
fidivr
shl
daa
jne
cdq
aaa
addr16
fcomp
mov
aaa
jl
loopne
sub
popf
jbe
mov
pop
adc
fstp
scas
loopne
pushf
cs
or
mov
out
add
fucomip
les
pop
sub
mov
adc
out
push
jmp
jle
xor
hlt
and
push
or
sbb
push
rcr
cld
inc
ja
lds
xchg
fs
(bad)
add
cmps
sbb
lds
sar
lea
inc
add
std
or
jo
xchg
ds
xlat
fstp
lods
int3
(bad)
mov
xor
or
retf
jle
xchg
mov
(bad)
mov
sbb
sbb
sti
xchg
repnz
mov
push
not
cmp
cld
cwde
sub
ret
aam
sub
mov
stc
jp
sub
addr16
push
pushf
fadd
jne
addr16
scas
cmps
mov
or
cmps
cmp
pop
icebp
sub
loopne
and
pop
inc
stc
pop
and
out
xor
lahf
out
(bad)
mov
inc
inc
pop
test
fdiv
addr16
mov
pop
cmp
mov
mov
les
xor
shl
cli
stos
lea
and
mov
lods
xor
fucomi
add
mov
add
mov
les
cmp
sti
xchg
popf
inc
dec
jnp
stos
inc
xchg
mov
mov
xchg
ficom
jne
clc
cld
clc
(bad)
jo
cmp
test
dec
lods
dec
pop
adc
xor
sahf
xchg
sub
stc
call
dec
jecxz
stos
ins
(bad)
ficom
iret
push
or
or
sub
jb
jno
les
ret
cli
xchg
dec
(bad)
lock
mov
xchg
sbb
sub
dec
jae
ins
ss
mov
or
mov
mov
(bad)
cs
pushf
push
xchg
or
sahf
mov
push
mov
mov
cmp
push
loope
shl
or
cmp
aas
mov
ins
cli
(bad)
lds
(bad)
sbb
loop
add
sub
inc
cmp
push
xor
mov
test
(bad)
mov
loope
mov
movs
iret
aaa
push
call
fimul
clc
fucomi
push
sub
sub
imul
jb
jbe
test
in
out
or
(bad)
outs
cmp
jb
or
push
stos
(bad)
call
cmps
dec
push
in
sar
push
jg
push
ins
ror
lea
repnz
out
dec
fwait
in
rcl
call
mov
lds
retf
lods
xor
sub
fisubr
push
jmp
inc
outs
pop
in
nop
lods
mov
xchg
movs
shl
pop
xor
sbb
or
stos
xchg
pop
daa
sahf
cmp
dec
inc
mov
add
lds
pop
fld
inc
lahf
or
inc
push
jns
jae
(bad)
cmp
dec
mov
xor
mov
loope
push
cmps
call
jnp
cmps
add
or
gs
lods
push
mov
in
add
sub
and
sub
dec
pop
repz
ror
push
loopne
cmp
imul
and
or
out
or
push
pop
push
or
adc
ficom
dec
out
sub
(bad)
loop
xchg
push
cld
and
cwde
mov
je
out
in
xchg
inc
lods
xor
popf
test
sbb
push
jns
shl
pop
cmp
or
cld
mov
push
push
mov
jns
aad
sbb
jg
daa
int3
push
jmp
push
cli
mov
jo
iret
sbb
lds
adc
call
int
sub
adc
not
mov
and
(bad)
movs
jbe
push
out
sbb
(bad)
or
pop
push
ficom
jbe
cmps
pop
xchg
daa
sub
aam
jmp
pop
test
cdq
push
rol
dec
call
into
(bad)
xor
out
xor
rcr
or
lahf
ret
pusha
loope
rcr
jo
lods
or
mov
ret
add
mov
loop
dec
push
mov
iret
pop
dec
arpl
xchg
mul
mov
les
in
jmp
(bad)
jns
shr
leave
rcl
icebp
dec
sbb
mov
fs
cld
test
and
mov
sub
repz
stos
dec
push
in
inc
gs
xor
mov
mov
inc
imul
xor
and
or
idiv
mov
lds
iret
jp
rol
loope
sub
scas
or
sar
lds
cs
xchg
cmp
sub
fst
adc
xor
and
sub
cwde
mov
mov
push
pop
or
nop
out
add
arpl
into
jb
mov
fwait
cmp
rol
enter
add
leave
cs
mov
ror
iret
je
dec
retf
mov
iret
mov
hlt
adc
jne
neg
ds
movs
in
xchg
mov
repnz
scas
jb
mov
fs
mov
cmp
fmul
mov
outs
and
xchg
xor
out
jle
pop
sti
push
or
xchg
fwait
jbe
leave
pop
loope
arpl
xor
lea
into
ret
dec
cmp
aam
in
jns
stc
imul
rcl
ror
mov
loop
and
nop
or
rcl
adc
mov
sbb
jnp
xchg
out
(bad)
push
into
pop
and
test
mov
xor
mov
cmp
or
pop
inc
pop
leave
std
(bad)
xlat
lea
jne
fld
dec
movs
mov
cmps
out
rcl
addr16
es
retf
stc
sbb
rol
sub
xchg
(bad)
mov
(bad)
mov
mov
call
add
dec
or
or
add
push
in
inc
(bad)
mov
add
(bad)
in
xchg
mov
popa
sub
jb
in
mov
ds
dec
push
sub
scas
xor
aaa
xchg
sub
dec
not
pop
xor
out
or
es
pop
(bad)
rol
push
leave
mov
mov
iret
imul
xchg
outs
aam
retf
xrelease
movs
xlat
in
add
rcr
xchg
call
lock
pop
and
pushf
movs
jle
jp
js
xchg
in
je
jnp
adc
retf
inc
push
mov
fst
aaa
adc
mov
cmc
xlat
(bad)
cdq
sub
cmp
fiadd
sub
adc
mov
fisubr
cmp
sbb
mov
xchg
fwait
sbb
lods
add
mov
sar
in
icebp
xchg
xchg
and
inc
fwait
add
inc
inc
and
enter
addr16
js
out
test
or
push
xchg
add
mov
stos
(bad)
and
mov
in
imul
bound
mov
arpl
jmp
mov
test
or
mov
add
icebp
pop
pop
dec
sbb
xchg
xchg
inc
add
mov
dec
stos
sti
cmc
and
xor
in
or
cs
dec
lds
mov
movs
out
sub
aaa
or
sbb
xchg
jl
and
retf
cmc
mov
pushf
cmc
xchg
and
and
pop
call
bound
dec
pusha
inc
mov
(bad)
fstp
call
enter
push
(bad)
mov
or
stos
jns
xchg
call
retf
out
cmp
xchg
push
inc
pop
mov
iret
rol
mov
push
push
or
sub
inc
js
or
es
das
cmp
repz
in
cmp
loop
jae
mov
je
cld
cmp
pop
shl
mov
sti
mov
jle
add
nop
loop
cmp
fsubr
xchg
and
add
repz
dec
jmp
sub
dec
pushf
jecxz
in
lahf
aas
outs
lods
retf
int3
in
jmp
sbb
mov
loop
outs
mov
data16
das
addr16
push
xchg
div
dec
loope
aam
push
add
out
int3
or
addr16
imul
in
add
xchg
mov
push
fidivr
mov
push
sbb
cli
adc
fstp
dec
inc
or
movs
dec
stos
mov
loop
out
pusha
mov
xchg
repnz
push
push
xchg
sub
push
jb
and
jno
and
sbb
cli
sti
jle
out
in
call
(bad)
jp
sub
cmp
mov
std
pop
add
jbe
(bad)
mov
imul
mov
fcmovnu
jne
mov
(bad)
cmps
adc
and
fcomp
aas
dec
adc
fld
pop
push
adc
mov
and
retf
cmp
gs
cmc
cdq
add
leave
mov
enter
add
jge
push
push
mov
scas
out
push
scas
out
xor
retf
or
xchg
xor
ja
in
mov
cmp
cli
add
fiadd
inc
enter
into
leave
(bad)
adc
cmp
je
add
mov
xchg
adc
mov
lea
jae
repz
lods
jecxz
movs
neg
ss
jns
inc
scas
out
jp
in
cmps
std
out
push
and
push
push
cwde
pop
data16
rol
call
(bad)
sar
lds
pop
jo
cmp
cs
jmp
lods
ds
pop
or
and
neg
imul
not
jne
cmp
cdq
push
add
fidiv
loopne
retf
sbb
xchg
push
push
sbb
jo
inc
adc
sbb
pop
jns
mov
loopne
inc
in
retf
fwait
movs
sbb
mov
inc
mov
mov
sbb
scas
test
test
(bad)
shl
xchg
adc
(bad)
pop
clc
fyl2x
push
mov
cmp
inc
push
stos
xor
mov
ds
mov
mov
mov
cs
gs
pop
pop
outs
lea
mov
adc
imul
repnz
data16
int3
dec
fcmovnu
cmp
stc
popa
or
xor
inc
add
test
jb
cmps
ins
push
cmps
es
jae
adc
dec
out
pusha
(bad)
mov
add
in
sub
es
and
retf
push
stos
dec
dec
dec
and
retf
enter
call
dec
call
loope
or
dec
adc
mov
nop
push
sub
loope
sbb
jns
push
jge
mov
inc
mov
sar
movs
pop
pop
repnz
data16
(bad)
loop
xor
or
xchg
mul
mov
sbb
dec
xor
stos
popf
cmp
cmps
xchg
xchg
push
dec
pop
lea
lahf
mov
fcom
lds
fadd
push
mov
je
(bad)
xchg
xlat
ds
fisub
xchg
xchg
jmp
loopne
call
add
sbb
push
sub
mov
lock
scas
xchg
ss
inc
or
sbb
or
pop
dec
mov
cld
test
jecxz
fistp
ins
add
cmc
dec
mov
jecxz
shr
or
xchg
pop
adc
mov
jmp
pop
sub
xchg
imul
loope
sbb
or
sbb
jmp
lea
lahf
jnp
ds
hlt
in
push
inc
jb
mov
xchg
stos
mov
dec
xchg
xor
mov
cmp
fsubr
retf
pop
shl
push
jmp
stc
sub
shl
mov
dec
jle
dec
cwde
xchg
fucom
dec
inc
jb
call
and
xchg
retf
int3
xchg
imul
jno
ins
pushf
sub
(bad)
cmps
cmp
sbb
ret
iret
xchg
pop
adc
xor
rol
cld
sub
and
clc
cmps
mov
idiv
stos
or
dec
sahf
dec
sbb
lods
hlt
xchg
add
push
jb
jg
loopne
mov
repnz
xchg
push
test
mov
add
fcomip
push
aad
sbb
jnp
es
icebp
test
add
add
pop
lock
xchg
jle
jle
or
sub
push
out
jbe
call
ins
jmp
dec
ins
ins
nop
dec
adc
and
hlt
es
jg
lods
aad
je
sahf
mov
jmp
cmc
push
int3
xchg
mov
fidiv
mov
or
das
jne
fistp
shl
cs
aam
cs
cmp
loopne
cmps
or
jae
push
xor
mov
jb
imul
stos
(bad)
inc
ret
or
fsubr
jl
js
inc
cmps
sahf
push
iret
out
pop
sub
gs
fprem1
ret
cmc
popa
pop
cmp
fwait
out
mov
lods
mov
(bad)
dec
cmp
arpl
stc
jmp
icebp
adc
data16
test
jns
xor
div
sub
(bad)
jns
retf
dec
jg
inc
sbb
xor
dec
sub
cmc
pop
push
popf
lods
test
cmps
mov
sbb
mov
fdivrp
add
test
add
je
jbe
push
add
jmp
cmp
or
shr
cs
mov
jb
lds
xchg
lahf
jns
inc
xchg
fisub
and
bound
rol
sahf
js
sti
xchg
pushf
jae
add
jecxz
cli
test
push
test
jg
push
es
cmp
dec
xchg
mov
push
mov
mov
and
retf
sub
jbe
xchg
(bad)
mov
movs
test
aam
adc
inc
ret
and
pop
cdq
ror
mov
dec
mov
xchg
ret
mov
pop
jbe
test
sbb
loopne
ins
xor
lods
lds
sbb
test
or
out
retf
sub
icebp
push
popf
push
inc
push
daa
push
mov
or
dec
mov
fucomp
xor
mov
inc
dec
add
dec
cmp
stc
sbb
cs
sbb
icebp
cmp
ds
nop
sbb
shl
pop
imul
adc
fild
ret
inc
or
cmps
popa
jbe
cmp
(bad)
sub
(bad)
not
nop
inc
cmc
mov
das
sahf
cld
dec
mov
pusha
ja
fcom
dec
cli
push
repnz
push
push
pop
jmp
pop
cmp
retf
cld
fiadd
fwait
pop
fdiv
fst
jns
arpl
jmp
push
inc
dec
inc
test
xor
pop
hlt
sub
mov
neg
mov
push
adc
jae
xchg
loope
pop
aaa
jns
or
addr16
xchg
add
call
xchg
scas
das
js
outs
scas
dec
xor
mov
int
loop
cdq
fld
jmp
mov
push
test
xchg
cmps
mov
in
mov
retf
push
mov
mov
xchg
outs
push
lock
push
shl
(bad)
das
sub
cmp
push
mov
dec
adc
into
movs
cs
mov
arpl
mov
dec
or
arpl
mov
imul
into
push
jb
cmp
cmp
mov
lahf
(bad)
xchg
push
pop
lahf
cmc
pop
cmps
stc
ins
pop
push
push
sbb
sbb
fiadd
enter
xor
stos
sbb
mov
mov
push
push
and
ins
sub
dec
das
inc
mov
pop
dec
add
mov
imul
dec
ds
jg
rcr
imul
mov
(bad)
stos
mov
fst
retf
xchg
inc
dec
das
xor
adc
jno
push
mov
or
test
push
cmps
inc
mov
fwait
inc
repz
push
cmp
inc
inc
sahf
ins
and
mov
lahf
inc
mov
pop
stos
scas
pop
cmc
inc
or
and
fsubr
mov
jmp
cmps
in
cmp
inc
cmc
inc
leave
std
outs
bound
sbb
sub
(bad)
dec
sub
shl
sbb
mov
adc
jmp
adc
ins
push
fnstenv
call
rcl
sub
cli
mov
fadd
repnz
inc
and
cmps
dec
pushf
cmp
cmp
movs
cmp
into
push
or
pushf
leave
mov
mov
sbb
daa
adc
push
add
stos
jp
(bad)
je
cmp
sub
or
imul
inc
pop
aaa
cld
cmp
push
cmc
pop
mov
mov
jbe
mov
mov
cmps
sahf
pop
fsubr
or
outs
or
pop
adc
in
mov
(bad)
call
ret
pop
push
or
sbb
mov
das
lea
pop
popf
sahf
sub
and
xor
pop
mov
sbb
pop
sahf
jb
cwde
sbb
push
(bad)
dec
mov
inc
in
cmp
fadd
mov
sti
push
(bad)
iret
ret
retf
add
mov
into
and
ret
mov
test
mov
add
mov
(bad)
fidivr
dec
sbb
pop
push
in
movs
xor
int
adc
mov
aaa
push
(bad)
aad
test
test
inc
jp
jp
sub
mov
sbb
cmc
rol
iret
retf
fdivr
(bad)
jb
pop
mov
adc
imul
cdq
mov
retf
out
cmp
ins
mov
sahf
jae
adc
(bad)
fld
sar
fistp
(bad)
sub
jae
or
cmps
jg
jmp
aaa
mov
aas
shl
jp
ss
stos
mov
nop
pop
loop
jne
(bad)
xchg
fidivr
cmp
dec
sub
test
jle
cdq
mov
dec
enter
ja
mov
jnp
out
sub
pop
jge
push
loope
lods
cmp
jno
pop
out
jmp
test
ins
cmc
jp
ins
sub
sahf
rcl
or
add
and
stos
sbb
adc
cmp
fisttp
dec
movs
ds
rol
out
enter
aad
sub
pop
shl
sti
cmps
int3
mov
movs
jge
sbb
ins
fcmove
sbb
pop
scas
sahf
scas
aas
inc
ins
aam
std
adc
sub
fsub
dec
dec
mov
jp
movlps
or
popa
mov
cmp
ja
cmp
add
std
jle
mov
xchg
icebp
out
cmp
shr
mov
shl
adc
dec
stos
pop
mov
lods
adc
nop
cmc
mov
hlt
inc
clc
sar
daa
shl
sahf
sub
ret
iret
cli
mov
ins
mov
out
fs
mov
cmp
sub
pop
loop
fidivr
pop
mov
sbb
push
jmp
test
inc
or
sbb
pop
arpl
xchg
punpcklwd
adc
(bad)
push
xchg
nop
in
test
fs
fcmovbe
or
popf
inc
data16
fucompp
add
mov
mov
(bad)
aaa
mov
sbb
or
jnp
pop
cmps
aad
push
sbb
movs
sbb
rol
rol
xor
retf
cmp
mov
icebp
ret
bound
sbb
push
cmp
pop
xor
cwde
mov
aad
jge
outs
mov
aad
mov
xchg
fcmovnbe
pop
mov
fbstp
test
sbb
(bad)
je
out
jb
data16
shl
cdq
mov
jmp
pop
mov
jbe
imul
xchg
arpl
sar
push
mov
fwait
cmp
sti
xchg
cmc
fisubr
jg
jae
pop
retf
idiv
mov
pop
xchg
imul
inc
cs
dec
mov
and
cwde
aam
push
pop
pusha
mov
xchg
jl
in
mov
outs
cmp
stos
sub
std
pop
repz
popf
inc
pop
inc
xrelease
test
sbb
jae
or
cmp
loopne
(bad)
addr16
mov
fld
mov
adc
aad
jmp
jecxz
xor
retf
and
mov
adc
adc
fucom
stos
into
test
sbb
fstp
push
inc
mov
push
push
xchg
mov
popf
(bad)
add
outs
je
fist
push
and
out
movs
loopne
call
fisubr
packsswb
push
cdq
add
fiadd
push
sub
inc
mov
mov
sti
sbb
stos
pop
add
loope
cs
test
lea
loopne
mov
and
xor
in
sbb
fild
jge
movs
call
pop
fisub
dec
in
mov
dec
shr
adc
popf
hlt
jg
add
xchg
dec
sub
shr
arpl
lea
jne
mov
mov
loope
add
xchg
(bad)
(bad)
add
and
in
mov
fild
add
loope
inc
ins
loop
jl
and
add
clc
loope
fisubr
lods
fadd
dec
gs
mov
popf
(bad)
xchg
jg
inc
outs
shr
stos
add
adc
push
push
sbb
and
test
or
inc
int
movd
out
fstp
(bad)
loopne
and
aad
dec
mov
mov
mov
and
dec
jmp
jmp
(bad)
sbb
fild
sti
pop
inc
ret
mov
push
dec
shr
jb
ins
loope
pop
clc
and
inc
push
xor
dec
add
ins
adc
push
inc
stos
or
push
(bad)
mov
idiv
lahf
jle
inc
mov
jno
cmp
sub
(bad)
imul
add
ins
mov
push
mov
arpl
sti
cmp
vorps
push
ja
mov
jp
icebp
jge
rol
shr
cmp
(bad)
cli
cli
gs
adc
int
(bad)
imul
push
not
sbb
fmul
dec
psubusw
shr
add
adc
jmp
stos
dec
jge
rcr
or
cs
xor
and
imul
add
add
leave
and
fmul
xchg
sub
(bad)
lds
in
adc
mov
clc
fldenv
test
lods
cdq
lods
scas
sbb
pop
movs
enter
in
test
call
js
inc
call
dec
lods
sub
ds
aaa
inc
movs
leave
test
mov
fwait
pop
cmp
push
aam
pop
adc
dec
jle
push
out
test
cwde
and
and
fmul
int
lahf
loope
or
xchg
ins
(bad)
ins
in
in
xchg
cmp
mov
mov
mov
xchg
je
out
mov
punpckhbw
mov
(bad)
int
lea
cmp
dec
cli
ror
mov
and
in
mov
les
push
popa
(bad)
jns
push
(bad)
dec
inc
add
fwait
test
jne
(bad)
cmp
push
jp
aam
aas
shl
(bad)
outs
push
pop
cld
(bad)
inc
dec
jns
cvtdq2ps
mov
(bad)
out
sub
mov
jb
and
sbb
fucomip
xor
call
bound
add
and
jnp
dec
aad
sub
out
pop
push
or
jmp
scas
push
pop
lods
stc
cmp
pushf
mov
mov
in
int3
out
cmp
jb
test
jmp
sbb
xchg
inc
inc
mov
nop
test
xor
in
ss
jp
inc
dec
mov
ret
mov
in
(bad)
in
xlat
dec
pop
push
mov
mov
test
mov
lds
jge
sbb
cmps
sbb
adc
lock
popf
out
je
(bad)
leave
inc
jbe
mov
dec
sbb
cmp
repnz
test
pop
in
cwde
jnp
mov
ins
aaa
test
mov
mov
push
dec
cs
jb
or
call
push
adc
jb
push
mov
xchg
mov
jae
repnz
in
out
xchg
pop
cmps
scas
inc
test
in
xchg
cld
sub
fldenv
push
jo
adc
cdq
or
ja
and
std
cmc
add
scas
adc
jmp
jecxz
adc
sbb
lahf
imul
lahf
cmp
jnp
fdiv
cld
push
test
jns
dec
jae
dec
rcr
cmp
cmp
pushf
ins
push
imul
pop
sub
xchg
adc
repz
scas
and
shl
xchg
pop
shl
aad
adc
sub
adc
in
mov
loope
js
xchg
and
add
jno
scas
fisubr
pop
pop
adc
aaa
lods
(bad)
jle
pop
popa
cmp
mov
sbb
in
lahf
adc
adc
icebp
pop
cmp
scas
mov
stos
jno
enter
outs
int
and
loope
mov
sub
test
xchg
out
cmp
jo
(bad)
sub
sbb
nop
pop
imul
fsubp
out
sbb
mov
icebp
gs
ret
call
mov
inc
jp
movs
or
popf
int3
mov
fs
push
mov
rep
scas
or
inc
lahf
cli
push
mov
pop
mov
dec
cmc
jmp
mov
push
sbb
mov
jbe
jnp
inc
dec
mov
ror
or
out
outs
inc
sub
pushf
sar
jmp
mov
arpl
jmp
add
push
repz
xchg
fucomip
rcr
dec
fxch
leave
jmp
(bad)
and
mov
mov
jg
add
(bad)
push
add
scas
pop
outs
je
push
sub
sbb
push
pop
adc
pop
mov
mov
mov
xchg
xchg
fs
mov
retf
add
jecxz
fcomp
mov
pop
xchg
pop
fsubr
(bad)
in
dec
dec
mov
pop
in
shl
test
mov
mov
sbb
popa
inc
into
mov
call
dec
dec
add
cmps
je
mov
aaa
mov
xor
jle
ror
mov
cmps
jns
push
jle
sub
and
fst
jge
push
pop
inc
lods
test
add
lods
int
mov
std
fisttp
sbb
fcmove
or
out
jo
stos
(bad)
sub
call
mov
ret
ins
jmp
add
jmp
and
mov
aas
and
push
pop
(bad)
mov
repnz
or
push
mov
fadd
stc
mov
push
mov
mov
mul
gs
mov
aam
cmp
add
cmp
push
loopne
mov
nop
push
mov
and
jp
xor
je
or
push
ins
pusha
cs
and
mov
mov
dec
jo
cs
test
ins
fst
pop
movs
mov
repz
sbb
ss
push
js
fcomp
xchg
es
nop
fild
iret
sbb
and
ja
loopne
xchg
push
cmp
pop
movs
aam
cmp
and
mov
dec
neg
gs
hlt
mov
sahf
push
imul
arpl
or
sbb
and
inc
stos
cli
in
or
push
cmp
or
xchg
in
ficom
aam
jmp
xchg
cmps
inc
inc
out
cmps
cmp
xor
sub
imul
or
push
mov
cmps
adc
and
scas
daa
or
push
mov
dec
inc
rcl
std
adc
aam
pop
xchg
adc
dec
jns
xchg
or
push
mov
adc
push
stc
imul
retf
outs
mov
aad
mov
mov
into
in
jb
das
jmp
mov
xor
jg
imul
fisub
jne
inc
pop
cmps
xlat
jp
push
call
adc
hlt
in
icebp
sub
add
mov
push
lods
push
push
icebp
push
in
rol
dec
nop
cmp
inc
xchg
inc
(bad)
fild
mov
cmps
push
mov
popf
mov
popf
mov
pop
outs
fs
aam
iret
mov
repnz
ja
popf
mov
sahf
mov
test
pop
outs
ins
sbb
fldenv
inc
(bad)
sub
push
jo
xor
mov
mov
(bad)
or
(bad)
add
mov
xchg
aas
or
pop
mov
sub
sbb
jae
fdiv
push
imul
jl
dec
cmps
scas
scas
fisttp
and
adc
ins
movs
das
sbb
dec
jl
rcr
pop
fadd
imul
fild
les
dec
xchg
rol
daa
sub
push
mov
fsubrp
mov
in
adc
push
add
cmp
mov
dec
cmp
aad
fwait
aas
mov
xor
add
les
jb
adc
xor
addr16
jp
(bad)
icebp
and
addr16
addr16
adc
sub
mov
stc
gs
inc
xchg
pop
dec
xchg
adc
jl
inc
xor
jne
jb
cmp
lock
inc
cmp
movs
add
iret
fsub
and
add
dec
cmp
repnz
sahf
int3
jbe
add
jns
or
(bad)
mov
pop
add
mov
and
out
gs
call
shl
jecxz
xchg
xor
or
sub
in
sub
jo
cs
pop
(bad)
push
pop
aas
inc
jge
sub
push
inc
mov
sbb
icebp
sbb
sub
fs
addr16
cli
add
movd
mov
ins
mov
les
sub
sahf
mov
mov
pop
sub
mov
lods
mov
and
inc
mov
pop
gs
div
sub
cmp
mov
jo
or
call
xchg
pop
inc
sub
jmp
call
mov
push
cmp
pop
in
daa
push
jl
(bad)
addr16
stc
adc
(bad)
inc
test
push
xchg
sbb
das
dec
(bad)
lock
xlat
dec
out
sbb
push
jmp
js
imul
out
icebp
aas
retf
or
jmp
ins
xchg
or
rol
dec
inc
jns
jg
cmp
sahf
inc
or
je
in
mov
inc
cld
cmc
retf
cs
adc
cld
leave
jge
jle
fwait
inc
inc
add
sub
push
clc
cmp
les
icebp
push
cmc
stos
popf
jo
movs
(bad)
fsub
mov
sub
jne
pop
(bad)
(bad)
popa
push
sub
daa
cmp
and
leave
dec
call
neg
jnp
add
mov
stos
jg
mov
(bad)
mov
mov
xchg
arpl
adc
lea
stc
sahf
mov
mov
(bad)
(bad)
in
ins
bound
repz
(bad)
(bad)
pop
clc
jbe
(bad)
inc
div
fsub
push
rcl
cli
inc
aad
cli
cdq
aad
pusha
xchg
enter
call
shl
sbb
and
sub
xor
(bad)
cwde
inc
or
push
xchg
out
aam
add
and
xchg
std
cwde
dec
icebp
jb
sub
and
adc
push
add
xchg
(bad)
and
pop
(bad)
lods
das
jbe
cmp
adc
sub
(bad)
sahf
mov
pusha
rcl
jge
pop
ret
add
mov
(bad)
daa
movs
fcmovbe
lds
mov
and
dec
out
mov
pop
dec
test
pop
push
ficomp
retf
call
lahf
(bad)
fcmovnu
mov
int
out
mov
cmp
aad
or
lahf
lahf
gs
push
adc
or
out
ss
outs
jne
adc
adc
cmp
push
ins
cmp
mov
inc
in
cli
test
add
test
mov
jnp
pop
xor
lock
pmulhuw
jb
sub
push
push
xchg
jne
adc
inc
rol
lock
add
mov
pop
aas
sbb
call
std
sti
(bad)
pop
mov
add
add
jne
mov
iret
inc
das
xlat
mov
xchg
mov
or
sub
icebp
in
hlt
dec
cli
jp
cmc
xor
xor
(bad)
adc
inc
jmp
das
xlat
loopne
ror
xor
and
in
push
mov
push
popf
xlat
or
and
mov
xor
adc
ins
jge
pop
mov
and
mov
cmp
stos
fimul
test
test
in
lds
outs
mov
push
adc
cld
fcom
iret
out
adc
or
iret
mov
rcl
movs
jne
imul
daa
push
dec
add
xor
mov
inc
add
sbb
out
push
pop
test
cmp
sub
add
inc
push
test
xor
ins
test
mov
popa
mov
cmps
dec
dec
jp
sub
push
ror
add
jae
mov
add
lods
ins
and
mov
dec
mov
inc
add
push
test
adc
test
and
rcr
pop
mov
add
aaa
add
and
or
imul
aam
cmp
and
retf
pushaw
inc
dec
scas
leave
retf
mov
iret
jno
mov
mov
jae
outs
inc
(bad)
xor
lds
inc
inc
ds
adc
lock
jbe
mov
push
sub
dec
aad
int
cwde
lea
jne
add
sar
mov
push
popa
and
es
outs
pushf
aam
mov
cmc
fwait
lds
mov
iret
sbb
inc
dec
mov
jne
mov
(bad)
in
fstp
push
push
mov
xchg
push
pop
lods
mov
test
out
(bad)
mov
scas
jo
xlat
jmp
sbb
and
mov
shl
mov
loopne
fmul
mov
add
fbstp
add
add
pop
ret
cmp
push
or
cdq
leave
pop
xchg
sbb
in
pop
mov
mov
clc
pop
loopne
and
popa
mov
pop
mov
mov
lods
(bad)
test
aaa
xor
dec
dec
push
or
shr
mov
lods
cmp
lock
cmp
ret
rcr
rol
xchg
sti
(bad)
stos
and
addr16
ins
sub
lea
imul
add
scas
test
dec
xlat
shl
into
(bad)
movs
(bad)
xchg
or
pop
fst
pop
jmp
mov
mov
cmp
push
jp
cli
push
lods
rcl
push
xchg
sti
xor
mov
adc
mov
adc
and
rol
iret
push
xchg
pop
lock
cmp
xchg
xor
adc
xchg
dec
scas
rcl
mov
cmps
shr
shl
sti
cmc
add
ins
or
shr
or
or
sbb
mov
stos
cdq
dec
inc
mov
push
push
call
jecxz
int3
jnp
mov
jge
or
aad
xchg
sub
mov
out
mov
dec
jns
mov
test
push
leave
and
test
push
sbb
xor
xchg
dec
cmps
sub
shl
mov
vphadddq
add
push
xchg
movd
xor
adc
inc
imul
sbb
loope
pop
repnz
or
xor
cwde
inc
in
dec
mov
dec
mov
push
push
(bad)
and
stos
push
cmp
mov
fadd
sub
cmp
(bad)
mov
sahf
mov
aas
das
pop
pop
and
ja
cmp
ss
jne
sbb
sub
mov
retf
mov
es
add
adc
and
jbe
(bad)
adc
pop
loop
outs
pop
cmps
cmp
and
xchg
fs
and
ror
retf
cmps
lods
cmp
nop
loopne
sbb
cmp
jmp
scas
js
das
popf
and
aaa
arpl
daa
rol
loopne
cmp
ins
adc
or
cmps
out
int
and
(bad)
pop
pop
movs
pop
jo
add
aam
push
mov
push
ret
dec
in
push
sub
mov
sbb
daa
pop
or
mov
xor
cmp
fadd
aam
xor
pop
xor
lea
in
leave
daa
or
inc
jo
(bad)
cld
shr
jmp
pop
sub
dec
or
lods
retf
gs
add
pop
ror
ins
mov
push
pop
jge
stos
shl
cmp
cdq
jmp
or
in
adc
and
imul
cmp
inc
dec
iret
mov
scas
xor
mov
adc
adc
sub
xchg
dec
aad
fndisi(8087
lods
ret
nop
mov
(bad)
cmp
xor
push
stos
xchg
test
mov
call
push
mov
pop
mov
ss
ja
dec
hlt
repnz
lods
mov
cbw
scas
xchg
cmp
dec
call
repnz
jnp
imul
dec
add
nop
retf
lods
fstp
mov
push
add
retf
mov
je
xchg
adc
or
iret
jmp
push
fcomi
scas
ds
cmps
lods
cmp
mov
lods
pop
fmul
pop
leave
cmc
sar
dec
sbb
out
inc
call
mov
push
jnp
test
stc
mov
sub
aad
imul
push
push
sub
repnz
or
add
ret
dec
mov
lods
inc
hlt
outs
push
cwde
pop
and
data16
add
into
push
inc
(bad)
jo
aam
dec
out
adc
jmp
pop
push
ret
(bad)
or
mov
or
jge
repz
sbb
aaa
jl
adc
or
pop
jg
(bad)
loopne
movs
mov
mov
aas
add
add
jg
add
mov
gs
loopne
pop
sub
push
dec
stos
inc
pop
cwde
adc
sub
shr
gs
leave
jno
cmp
and
add
push
or
sbb
repnz
push
dec
jbe
or
jnp
stos
pushf
in
mov
arpl
imul
mov
cmp
jl
int
xlat
std
push
sub
shr
and
mov
mov
shl
(bad)
mov
push
add
fs
jno
aas
cmps
mov
(bad)
jecxz
sub
inc
cs
(bad)
std
fld
lock
ror
cmp
pop
push
sbb
inc
jns
cmp
pop
sub
into
mov
test
je
sub
push
cmc
pop
mov
and
mov
push
mov
xor
(bad)
ja
and
dec
lods
xchg
mov
jg
popf
xchg
popa
outs
scas
retf
ins
cmp
imul
shl
cmps
sbb
or
mov
or
rcl
mov
add
add
or
xor
pop
rcl
sub
add
inc
mov
xchg
inc
mov
jb
aam
push
or
mov
mov
lock
sbb
les
pop
cdq
mov
aaa
sub
dec
xor
mov
data16
daa
dec
dec
fldenv
cmp
addr16
mov
int3
sbb
inc
inc
jnp
xchg
test
sub
mov
sbb
push
cmps
mov
sar
repz
cmp
jp
dec
jae
and
and
inc
and
fcomp
jb
pop
stc
jo
xchg
sbb
mov
inc
cmp
out
(bad)
dec
cwde
rcr
push
dec
push
cwde
mov
mov
mov
sti
fwait
and
jae
js
push
lahf
mov
push
retf
popf
fst
les
adc
mov
imul
push
mov
mov
outs
imul
loope
dec
mov
pop
mov
dec
ret
mov
stos
push
xor
jmp
int3
std
and
ret
push
pop
scas
add
out
jmp
sub
loopne
pop
jecxz
ret
mov
mov
rcr
adc
repnz
lock
aad
dec
repz
aas
scas
and
std
dec
inc
test
sahf
cmc
push
push
add
xor
into
repnz
dec
mov
inc
mov
aaa
pop
xlat
outs
xchg
push
aas
mov
mov
loopne
mov
pusha
mov
fsubr
mov
lods
pop
adc
mov
or
test
inc
ret
pop
xor
lahf
std
jnp
shr
fisub
adc
and
add
vpsubusb
scas
shl
push
scas
sub
mov
mov
inc
sbb
test
int3
(bad)
dec
push
pop
adc
and
cmp
xchg
ds
fidivr
cmp
cmp
mov
retf
aam
and
inc
push
mov
and
lock
lock
inc
aas
ror
sar
int
jmp
cmp
iret
iret
loope
mov
xchg
mov
cld
loopne
pushf
js
xchg
into
data16
clc
pop
fwait
jg
movs
cmp
mov
adc
clc
add
pushf
or
or
xchg
inc
mov
xor
iret
idiv
(bad)
fwait
dec
push
sbb
jae
push
lods
dec
sbb
mov
(bad)
mov
fucomp
in
pop
jge
cs
xchg
cmp
and
pop
push
mov
bound
pop
jbe
mov
sbb
inc
aas
pushf
es
mov
stc
in
call
and
mov
test
sub
pop
dec
add
sar
arpl
sahf
sar
mov
push
iret
stos
call
mov
fst
cmps
shr
aad
aad
fdiv
hlt
addr16
enter
or
xor
jb
add
minps
and
xchg
mov
cmc
in
(bad)
mov
pop
pop
rcr
sti
lea
ds
jge
icebp
and
(bad)
hlt
cmp
shl
les
fstp
mov
stc
aaa
mov
jmp
sub
dec
iret
ret
pop
and
(bad)
enter
cli
mov
inc
ins
int
push
pop
mul
cmp
pop
sub
repz
xchg
loopne
frndint
adc
(bad)
aas
or
jae
stos
adc
lds
movs
jp
call
jno
adc
loopne
jmp
push
fld
call
sub
movs
jg
fmul
add
hlt
mov
stc
daa
loop
hlt
arpl
pop
(bad)
and
imul
inc
or
push
movs
sub
dec
jnp
sbb
jbe
(bad)
push
mov
xor
cmp
add
outs
dec
retf
dec
test
jb
jae
js
mov
xor
xor
mov
ficom
push
push
pop
imul
add
repz
cmp
inc
push
mov
sbb
imul
xchg
repnz
mov
xlat
enter
imul
movs
jg
fstp
shl
mov
jno
hlt
jmp
int
or
or
data16
jbe
fwait
cmp
lds
addr16
ds
call
adc
out
adc
sub
lods
(bad)
into
lea
out
out
mov
in
test
xor
xchg
shl
nop
sub
sbb
mov
idiv
nop
das
mov
(bad)
or
fcom
dec
sub
adc
push
clc
stos
mov
push
pop
xchg
adc
xchg
cmovle
adc
int3
sub
cli
inc
out
daa
mov
inc
pushf
adc
sub
dec
stos
xchg
loopne
ins
(bad)
jno
xchg
push
shl
inc
or
or
xchg
mov
mov
ret
in
lahf
(bad)
dec
mov
(bad)
imul
sbb
das
sti
mov
cmp
clc
daa
mov
into
push
add
test
ror
repnz
mov
cmp
xchg
fnstenv
mov
sbb
dec
fdivr
mov
sbb
out
aad
push
cmps
pop
fnsave
cmp
xor
jge
rcr
mov
push
outs
mov
les
and
push
mov
cli
push
jae
(bad)
and
dec
inc
sahf
(bad)
and
scas
inc
iret
pop
cwde
jp
mov
pusha
cmp
call
cmp
sub
inc
push
cdq
jle
inc
pop
rcr
jle
push
(bad)
xchg
ins
call
adc
sub
ret
xor
out
sti
mov
mov
push
mov
jg
dec
shr
or
xchg
out
dec
imul
out
rol
(bad)
fdiv
fnclex
retf
mov
call
ins
scas
loop
je
cmps
xor
lods
push
or
push
mov
popf
fsub
sahf
mov
mov
xor
pop
mov
inc
arpl
pop
loop
push
(bad)
or
fsubr
mov
mov
mov
inc
test
out
in
movs
push
sub
cwde
retf
sbb
ror
xor
xchg
inc
iret
pusha
mov
sub
in
int3
and
adc
jo
popa
or
dec
adc
mov
jb
int3
add
dec
ins
pop
jne
loope
push
nop
mov
jmp
inc
xchg
pop
add
stos
mov
(bad)
loop
arpl
cmovle
sub
inc
push
jno
test
cmps
outs
push
ret
xor
or
dec
jae
pop
or
mov
pop
mov
and
ret
(bad)
sar
xor
cmp
nop
dec
inc
pop
popf
and
loopne
mov
or
mov
outs
adc
gs
out
xor
(bad)
mov
je
sub
nop
(bad)
mov
jl
inc
mov
mov
mov
jb
test
inc
icebp
push
xor
xchg
jb
inc
(bad)
aad
sti
push
aas
jb
jmp
xchg
imul
xlat
fild
sbb
add
loop
repnz
pop
loop
pop
jmp
mov
sbb
add
retf
xor
jmp
nop
sub
and
pusha
lock
ins
add
int
jmp
movs
retf
push
sub
repz
test
lock
push
mov
mov
mov
xor
shr
xor
popa
lods
outs
jmp
(bad)
add
hlt
(bad)
jmp
mov
jl
mov
std
push
pop
movs
sar
cmps
or
xchg
imul
mov
mov
and
xlat
sbb
jmp
mov
(bad)
xor
in
pushf
pusha
retf
out
aaa
mov
loope
add
xchg
mov
comiss
ficomp
gs
lock
ds
and
push
int
jae
rol
cmp
mov
and
fwait
test
loope
ss
aad
add
into
out
add
inc
int3
push
fmul
shr
inc
bound
inc
cmp
and
movs
jl
or
out
sbb
jge
(bad)
jecxz
rcl
aaa
jo
sbb
inc
jl
in
jge
fstp
and
ret
fnstsw
jnp
and
and
xchg
jo
sar
jmp
(bad)
fcomp
mov
adc
cmps
jbe
or
push
xor
lahf
pop
sbb
jmp
cwde
add
shl
lock
ror
jg
dec
call
and
inc
mov
test
xchg
ror
adc
pop
jge
push
inc
push
dec
daa
mov
or
in
and
mov
aam
sub
add
adc
(bad)
repnz
fs
cli
cmc
sbb
jmp
add
fstp
fst
out
mov
call
mov
mov
out
les
jno
add
jmp
sub
and
mov
inc
push
sbb
ja
mov
pop
sbb
xchg
inc
mov
bound
sub
mov
inc
(bad)
aas
sub
call
xor
idiv
xchg
mov
dec
sub
scas
sbb
(bad)
dec
jmp
pushf
xchg
or
push
lahf
sbb
out
mov
mov
pusha
mov
sahf
sbb
mov
pop
sbb
xchg
and
and
retf
ficom
pop
cmps
inc
or
js
inc
push
jb
dec
gs
(bad)
mov
int3
jle
add
out
(bad)
in
dec
xchg
stos
call
adc
xchg
xchg
jle
neg
imul
xor
and
loopne
(bad)
xor
mov
movs
sub
in
inc
cmp
inc
ret
jg
mov
inc
and
daa
mov
hlt
xor
push
mov
(bad)
push
js
(bad)
sbb
loop
add
xchg
js
adc
ds
ins
sub
xlat
pop
add
jnp
push
lods
cmps
push
popa
mov
mov
xchg
cmps
popf
ins
dec
fld
arpl
adc
int
dec
jge
dec
fucom
pop
jp
jb
sub
div
in
fcom
push
sbb
(bad)
xchg
clc
cmp
cmps
pop
dec
mov
gs
xchg
inc
ret
cmc
outs
lds
cmp
cdq
inc
add
dec
mov
xchg
xchg
sub
fwait
mov
mov
mov
xor
push
call
jmp
data16
(bad)
outs
xchg
mov
loop
xchg
push
cmp
ret
jo
mov
xor
loope
pop
xlat
or
inc
mov
mov
xor
cmp
or
push
add
adc
dec
mov
div
les
and
aaa
adc
stos
popf
push
jmp
push
ds
mov
xchg
mov
push
cli
shr
push
daa
jns
xor
xchg
add
movs
sub
rcl
adc
sbb
daa
outs
enter
mov
add
and
test
cmp
jge
lahf
jnp
jnp
cmp
mov
pop
lods
xor
jl
pop
and
xor
(bad)
adc
js
dec
inc
sub
cmp
mov
mov
cmp
and
xchg
stos
scas
test
pop
jecxz
and
stc
aaa
sub
jnp
xchg
data16
sti
in
ss
mov
sbb
sbb
popf
xor
pop
aam
aas
ret
inc
adc
pop
stos
sbb
ins
jge
test
mov
nop
jge
dec
adc
pop
pushf
stos
inc
das
lahf
add
imul
dec
pusha
fcomp
xor
push
repz
mov
xchg
and
jns
jnp
dec
add
jle
mov
xchg
aaa
sti
jge
pop
adc
mov
adc
neg
cmp
jle
cdq
fdiv
xchg
ins
mov
xor
xor
scas
out
out
cdq
mov
inc
cs
dec
sti
xchg
stc
cmp
cs
or
stos
jb
jmp
mov
dec
pop
sbb
call
ret
mov
icebp
mov
adc
loope
adc
xchg
(bad)
movs
xor
js
push
ins
mov
repz
mov
into
test
ficom
cmp
out
outs
outs
sub
lods
cmp
int3
dec
jae
addr16
movs
jp
fsub
pop
jo
or
push
inc
cmp
jo
repz
push
outs
jecxz
or
int
mov
ins
test
nop
or
dec
test
pushf
mov
xor
cli
xor
cmp
mov
into
xchg
xchg
hlt
outs
ins
jle
aam
(bad)
mov
in
xchg
out
pop
test
(bad)
repz
sbb
pop
mov
pop
xchg
dec
jecxz
add
mov
jp
mov
movs
sti
fscale
sbb
mov
test
in
pop
sub
inc
push
mov
test
add
aam
loopne
pop
sub
arpl
fisubr
mov
adc
sbb
add
dec
ins
push
(bad)
call
push
movs
dec
paddusb
or
or
xchg
ins
xchg
test
jge
outs
mov
dec
icebp
xchg
pop
and
popf
mov
push
es
xlat
xor
mov
sti
sbb
(bad)
fdivr
mov
adc
clc
test
sbb
out
out
xchg
cmps
aas
cmp
mov
xchg
inc
ins
in
cli
lea
push
call
xchg
inc
mov
inc
das
out
test
add
loopne
pop
xor
in
mov
add
sub
(bad)
pop
mov
aad
sahf
rcl
(bad)
cmps
cmps
ins
outs
rcl
add
pop
aaa
and
ins
or
and
int
out
xlat
adc
xchg
(bad)
jbe
push
test
cmp
mov
mov
retf
jle
test
adc
pop
int
and
jo
mov
xchg
retf
mov
ins
ins
call
(bad)
jno
mov
mov
push
lods
lods
mov
jo
cli
mov
sub
add
fsubr
and
hlt
jbe
or
les
pop
sub
pop
jmp
movs
mov
mov
or
xor
xlat
mov
sbb
loope
mov
xchg
in
test
inc
das
test
xchg
jge
mov
push
pop
jge
mov
push
xor
adc
hlt
cmp
pop
psrld
aaa
sub
int
dec
aad
mov
out
mov
xchg
fs
stc
fidiv
lods
iret
mov
sbb
add
out
pop
cmp
and
gs
inc
out
sti
pop
mov
and
and
sbb
push
xor
adc
mov
arpl
add
stos
lea
jnp
mov
sbb
in
les
inc
test
scas
popf
cmp
nop
mov
in
sub
les
sar
inc
xchg
mov
int
mov
mov
loop
es
daa
std
ret
pop
lock
xchg
add
loop
mov
and
pop
stos
mov
jle
mov
mov
sbb
retf
xchg
clc
or
movs
lea
call
(bad)
stc
jl
push
adc
push
cmps
(bad)
pop
sti
and
sub
outs
or
cmp
mov
fstp
popa
xor
loopne
dec
fs
sbb
lods
lods
or
and
sub
dec
adc
xor
push
scas
push
jb
mov
cs
mov
fdiv
movs
or
add
test
jo
adc
lds
pop
rcl
ret
sbb
cmps
pop
mov
je
scas
dec
or
and
aaa
nop
pop
add
fisub
xchg
mov
shl
stos
inc
cdq
inc
fisubr
repnz
xchg
into
or
sbb
out
cmps
adc
repz
mov
(bad)
out
nop
dec
pop
push
(bad)
mov
mov
adc
mov
add
sti
jno
push
(bad)
xchg
mov
neg
pop
mov
jae
repnz
xchg
popa
pop
xor
and
pop
or
pop
jmp
test
ret
push
fcmovnu
sub
jne
push
mov
clc
inc
ds
sub
jnp
ins
outs
xor
push
sub
mov
sbb
adc
inc
cmc
jmp
in
(bad)
add
int
rcr
mov
imul
outs
push
mov
push
xor
popf
rcl
std
xchg
and
cli
retf
call
in
int3
cmps
xor
cmp
push
cld
rcr
adc
and
iret
jecxz
jnp
nop
(bad)
mov
mov
mov
retf
inc
sub
retf
push
dec
cmp
lahf
nop
cld
stos
sahf
adc
fwait
inc
add
xchg
mov
dec
inc
or
repz
mov
cmp
cs
inc
push
adc
cwde
sbb
shr
cmp
mov
lds
jnp
mov
jg
scas
dec
fs
xchg
popf
cmp
mov
mov
leave
std
jle
jne
dec
cs
pop
rcl
mov
push
retf
jg
inc
sbb
dec
test
aas
inc
lock
push
jge
cmp
into
les
push
mov
xlat
test
ret
xor
jecxz
and
jmp
fwait
mov
dec
push
jo
int3
out
dec
pop
mov
inc
shr
out
inc
pop
movs
inc
je
pop
mov
push
sub
loopne
push
pop
js
fisttp
push
ret
xor
test
popa
mov
cmp
and
fisubr
mov
retf
out
call
cmp
xor
push
ds
cs
pop
loopne
and
mov
mov
sbb
cmps
and
sbb
bound
fidivr
shr
aas
jne
icebp
enter
dec
pop
xchg
sub
ret
cmp
(bad)
fs
mov
ins
iret
mov
shr
fld
adc
dec
mov
pop
push
adc
dec
lock
mov
cmp
ins
pop
push
ret
enter
add
aad
(bad)
in
loope
ja
sbb
unpckhpd
ins
and
add
sub
ret
or
ret
push
bound
test
daa
xor
loopne
out
pop
mov
nop
mov
jbe
js
sbb
lock
mov
call
ret
outs
jbe
xor
bound
mov
jg
jg
outs
push
imul
mov
es
mov
cmp
dec
clc
cmc
imul
stos
outs
ret
int3
pop
ret
xchg
retf
or
and
cli
ret
xor
push
icebp
push
les
ss
ret
pop
sbb
addr16
sbb
cmp
les
mov
add
mov
out
sbb
outs
sub
inc
xor
mov
or
lock
jecxz
xchg
cdq
shl
pop
in
hlt
in
adc
loop
mov
mov
fcom
add
sub
popf
pop
adc
cld
push
fidiv
pop
xchg
jp
aam
lock
jo
(bad)
ins
jno
adc
loop
xor
imul
cmp
xchg
loope
mov
xor
fadd
add
(bad)
(bad)
hlt
jecxz
mov
adc
xor
mov
pop
ins
shl
in
jns
movs
mov
inc
push
mov
stos
sub
mov
adc
fisubr
popa
pop
sbb
push
cmc
enter
xor
addr16
add
sti
ds
sub
lods
aas
imul
cmc
retf
jmp
xchg
call
sub
inc
dec
and
loope
addr16
out
inc
fisub
shl
adc
mov
stos
loope
push
(bad)
arpl
sub
jae
mov
int
les
pop
jmp
mov
adc
ret
xchg
call
leave
cmp
out
mov
arpl
and
inc
adc
addr16
cmp
xor
sbb
jo
jmp
pushf
fwait
dec
sbb
repz
cmps
push
jnp
xor
js
out
gs
movs
lea
sbb
loopne
aaa
fstp
xchg
mov
inc
cmp
dec
retf
adc
inc
mov
cmps
jnp
out
add
repz
dec
std
xor
lock
xchg
and
inc
mov
in
movs
and
mov
aas
or
arpl
pop
test
fucom
and
adc
or
call
int
push
xor
pop
retf
mov
es
or
sbb
rcr
pop
or
movs
jecxz
imul
add
adc
jne
addr16
(bad)
dec
pop
fsub
cs
adc
mov
pop
cmp
or
mov
das
inc
sti
dec
cmp
lock
mov
mov
or
movs
jmp
xchg
mov
out
in
cmp
xchg
pop
mov
or
imul
repz
adc
inc
cmp
xchg
xchg
and
mov
add
or
idiv
cs
mov
jae
jae
jle
cli
xlat
das
lahf
retf
pop
aad
cli
ret
add
shr
fistp
lea
inc
xor
adc
fadd
mov
test
dec
cli
cld
add
adc
retf
adc
fstp
int3
sub
scas
sbb
jne
add
in
(bad)
(bad)
jmp
and
jmp
xchg
pop
pop
push
mov
imul
add
aas
cmp
push
mov
or
cdq
or
cmp
out
mov
inc
xchg
jmp
fdivr
add
int3
(bad)
repz
popa
or
cmp
stos
lea
daa
adc
cmp
mov
mov
call
push
cmp
sbb
retf
and
pop
adc
and
cmp
lods
and
cmps
in
or
add
xlat
push
jbe
jle
aas
inc
mov
mov
pop
sub
les
and
in
fwait
mov
add
ins
les
and
jbe
call
fdivp
fnstenv
or
push
shr
rcr
inc
pop
lods
dec
push
sbb
sbb
push
mov
test
inc
fimul
in
push
mov
(bad)
arpl
ja
jp
cmps
jne
mov
xor
rcr
dec
out
xchg
mov
jl
inc
jmp
shl
arpl
mov
iret
inc
fisttp
outs
push
sub
sub
xchg
mov
mov
mov
cmp
(bad)
and
lods
(bad)
sub
jb
stos
jmp
or
xor
adc
arpl
(bad)
and
stos
scas
(bad)
push
ins
fstp
push
cmps
lods
call
sbb
jg
push
fcomp
xchg
mov
jmp
fistp
mov
pushf
rol
push
lds
aas
xor
fwait
xchg
mov
sar
sti
xchg
xchg
adc
loop
and
cmp
ss
bound
xor
dec
popf
aas
mov
dec
test
add
xchg
jmp
xor
imul
jl
adc
push
stc
mov
imul
in
mov
dec
rol
outs
mov
sub
mov
mov
(bad)
shl
mov
popf
mov
sbb
fnstcw
jo
mov
shl
pop
lock
ret
adc
jmp
mov
fiadd
mov
sar
or
jae
rcr
nop
or
sub
jae
enter
sbb
push
rol
ins
lea
pop
hlt
fdivr
(bad)
jmp
(bad)
xor
dec
xor
fxch
jb
mov
cli
mov
mov
jnp
jmp
push
inc
and
in
pushf
xor
or
call
pop
mov
mov
stos
or
xlat
mov
movs
sbb
mov
adc
and
sub
adc
fstp
xchg
or
mov
mov
ds
add
jb
imul
push
aas
add
xchg
adc
sbb
push
or
into
push
xchg
in
dec
xchg
and
cmp
mov
inc
cmps
jl
int3
mov
dec
fst
mov
aam
test
mov
(bad)
adc
popa
aad
ja
int3
pop
ror
add
data16
push
(bad)
(bad)
pop
mov
test
imul
sbb
adc
pop
mov
sub
sahf
push
jg
sub
pop
in
fiadd
cdq
scas
test
int3
fdivr
iret
add
mov
cmp
jbe
xchg
daa
ins
inc
sbb
les
sbb
aad
push
fwait
dec
enter
pop
mov
jle
sbb
repnz
mov
or
sahf
stos
mov
cmp
sbb
fistp
retf
push
jae
push
cwde
xchg
and
cwde
adc
aad
pusha
or
lock
dec
iret
dec
ror
scas
ret
iret
mov
sub
retf
push
dec
push
cwde
js
and
push
call
sbb
mov
(bad)
pop
scas
js
aam
dec
inc
xchg
pop
add
jno
retf
mov
jno
cmp
cmps
(bad)
fsub
xchg
inc
jae
(bad)
mov
dec
pop
xchg
xchg
and
or
mov
inc
mov
ds
jp
fmul
xchg
enter
mov
push
add
into
push
(bad)
ss
cmp
pop
jg
js
sbb
sub
cmc
dec
sti
popa
cmp
bound
dec
std
xor
popf
nop
dec
sub
call
xor
xor
outs
(bad)
jo
xchg
ret
outs
rcr
mov
mov
out
into
ins
sbb
mov
ins
or
mov
inc
lds
into
loop
sub
cmp
std
xchg
paddsb
mov
mov
sub
(bad)
ja
jl
jmp
push
xor
xor
fsubr
pop
ja
xchg
scas
mov
movs
bound
mov
iret
inc
cmps
inc
fnsave
xor
pop
jmp
mov
data16
stos
(bad)
push
xor
test
bound
sub
imul
(bad)
repz
push
jle
jbe
int3
icebp
fsubr
ror
dec
jno
fs
sti
xor
add
enter
add
sbb
sti
movs
stc
or
(bad)
imul
mov
cld
mov
jns
add
mov
inc
mov
mov
retf
inc
stos
jg
and
xor
shr
xor
test
cld
mov
mov
mov
push
add
pop
jmp
fimul
mov
stos
aaa
xchg
jmp
sbb
std
or
fnstcw
mov
out
in
push
mov
mov
push
nop
mov
fsubp
jg
inc
loope
stc
push
mov
shl
pushf
fs
push
shl
dec
jo
push
jecxz
sub
stos
imul
add
fwait
mov
xlat
mov
cmps
out
movs
cmps
sub
jne
arpl
or
push
aaa
or
or
repz
scas
and
mov
rcl
mov
mov
and
cdq
inc
push
call
mov
dec
psraw
lock
dec
cmp
mov
xchg
push
movs
sub
adc
adc
jl
adc
bound
stos
popa
or
nop
xchg
scas
pusha
mov
xor
js
mov
xchg
xchg
or
ins
retf
scas
out
daa
push
jmp
ret
fsub
pushf
movs
mov
push
jg
ins
pop
mov
pop
jge
push
mov
mov
stos
outs
sar
lods
lahf
in
xor
lds
pop
stc
repnz
push
pop
call
jmp
std
popa
cmc
cmps
or
scas
or
pop
adc
ins
add
in
push
jns
mov
pop
nop
lock
(bad)
(bad)
jmp
push
jge
push
pusha
(bad)
mov
push
sbb
pusha
xchg
ret
lea
out
pop
xchg
sahf
js
scas
imul
sbb
je
jo
rcr
or
loope
lock
or
mov
xchg
pop
push
pop
push
popf
mov
mov
js
ins
outs
mov
lds
mov
sbb
not
sahf
mov
mov
lea
stos
stc
cld
xchg
cld
fcmovnu
mov
gs
loop
cld
lods
inc
ret
sub
mov
xchg
mov
les
push
inc
ins
sub
sbb
popa
(bad)
adc
and
pop
hlt
mov
pop
cmp
lahf
in
add
cmp
push
sub
adc
pop
test
mov
call
popf
call
in
dec
sub
sbb
shl
lahf
push
mov
jne
cmps
add
(bad)
jp
in
shl
scas
fdiv
imul
repz
cmc
loopne
sbb
cmp
cmps
xchg
fbstp
sahf
mov
pop
dec
push
outs
stos
out
and
pushf
push
div
shr
ret
mov
cmp
xchg
mov
mov
mov
mov
sbb
xchg
outs
inc
sbb
out
xor
or
call
scas
push
mov
movs
cmp
and
xchg
sub
idiv
add
inc
push
lock
lods
mov
add
mov
pop
mov
sbb
jle
sbb
adc
aaa
mov
jno
cmp
fwait
movs
jmp
inc
(bad)
es
into
dec
inc
(bad)
call
bound
xchg
xlat
jmp
sbb
jne
sub
jle
push
dec
jp
or
test
shl
stos
pop
scas
sub
(bad)
fidiv
xchg
hlt
call
(bad)
mov
or
jmp
jp
xor
jno
outs
xlat
sti
scas
dec
fisubr
inc
or
not
rcr
sbb
pop
inc
ds
pop
outs
jno
pusha
jb
push
pusha
sbb
cs
jmp
dec
xor
test
ins
or
and
adc
adc
xchg
stc
shl
cmp
xchg
retf
sub
out
data16
adc
int
jne
je
push
dec
ins
dec
mov
neg
jl
sub
repnz
xchg
movs
js
xor
cld
push
xor
fwait
stos
push
out
jp
imul
out
mov
pop
mov
add
dec
adc
pop
fld
in
add
dec
dec
mov
add
ret
adc
adc
mov
pop
mov
leave
cmp
mov
shr
adc
call
not
daa
(bad)
mov
add
jp
sahf
jno
and
ss
rol
pusha
outs
je
scas
sbb
outs
xorps
ss
mov
and
loopne
outs
jg
sub
push
fs
loopne
in
sti
cmp
sub
xor
fcomip
call
push
adc
dec
leave
fwait
jmp
inc
leave
repz
xor
cmp
aas
aas
and
inc
stos
add
sub
sub
repz
cmp
iret
cwde
add
jg
jg
fnsave
test
out
xor
sub
repz
arpl
sub
out
in
adc
faddp
movs
rcl
cld
pop
fsub
push
mov
sub
xor
adc
cs
cmp
mov
cmp
aas
mov
loope
not
in
outs
push
aam
sti
inc
scas
sahf
xlat
adc
xchg
out
addr16
nop
lds
out
adc
fnstenv
or
and
lea
jns
daa
mov
mov
aaa
pop
mov
sbb
addr16
test
xchg
fisub
fdivr
sti
xchg
and
mov
aaa
outs
jge
enter
mov
inc
nop
inc
out
rol
mov
mov
iret
test
mov
ja
push
xchg
cwde
mov
push
add
inc
fld
rcr
dec
in
in
ss
mov
inc
out
push
call
sub
out
dec
jno
mov
push
popa
cs
into
pop
out
cmp
xor
pop
mov
cmc
outs
nop
mov
push
jo
out
int3
je
adc
or
je
or
fwait
int
arpl
das
mov
jmp
pop
jmp
(bad)
jno
adc
push
daa
hlt
lahf
cwde
ins
out
pop
fsub
add
sub
mov
cmp
arpl
xchg
cmc
xchg
dec
neg
inc
out
pop
shl
fsubr
cwde
and
jne
jne
push
jae
aas
sahf
jns
loop
or
(bad)
in
(bad)
cmp
mov
pop
(bad)
fld
pusha
mov
ffreep
ja
mov
ds
repz
xor
pop
icebp
sub
or
cmp
inc
xlat
test
or
jmp
lea
cdq
and
popa
aaa
aas
das
jb
xchg
mov
clc
shl
in
into
jmp
cld
repz
adc
jne
aam
imul
add
icebp
jb
mov
mov
ffreep
pop
cld
pushf
ss
ret
cwde
or
leave
cmp
sub
(bad)
fucomip
aaa
adc
or
jno
cld
cmps
mov
push
jge
pop
mov
or
test
cwde
es
out
sar
out
mov
int3
push
fwait
add
daa
xchg
or
push
xchg
rcl
pop
loop
mov
lds
jecxz
mov
and
fistp
ja
inc
sbb
xchg
ror
retf
call
pop
outs
dec
(bad)
jl
mov
fldcw
dec
cmp
adc
or
ins
xor
xchg
pop
xor
daa
repz
push
push
retf
push
xor
add
loope
rol
xor
xchg
mov
iret
and
dec
mov
stos
xchg
or
or
push
push
out
addr16
in
loopne
retf
addr16
sbb
xchg
xchg
jge
mov
fadd
cdq
or
shl
ror
dec
pusha
js
sub
sbb
inc
int
dec
retf
shr
cmp
sub
cmp
jmp
rol
fcomp
push
outs
mov
mov
fnsave
dec
dec
dec
cmp
pop
sahf
mov
jo
push
xor
mov
movs
lds
cmp
fild
imul
test
sbb
out
mov
jae
(bad)
or
shr
mov
inc
push
jge
pop
ds
inc
imul
ret
or
jg
jmp
xchg
mov
adc
inc
popa
and
(bad)
outs
fisub
loop
cmp
aam
adc
(bad)
pop
jne
int
mov
xchg
(bad)
daa
add
mov
sbb
inc
jns
clc
lahf
inc
inc
frstor
ret
loop
jmp
mov
pop
movs
xchg
icebp
push
pop
sbb
add
aas
pop
fdiv
jb
test
push
gs
and
lea
or
leave
int
push
clc
jnp
icebp
cld
mov
cdq
mov
daa
push
movs
mov
fld
or
lods
ror
out
cmc
icebp
(bad)
fsub
arpl
mov
mov
add
xor
cmp
jmp
ds
jecxz
mov
icebp
repz
repnz
out
bound
cld
stc
and
xor
push
mov
xor
in
imul
sbb
jmp
mov
push
movs
jnp
ins
fimul
sahf
test
aas
adc
in
out
cmp
call
(bad)
adc
pop
or
inc
and
rcl
xchg
movs
in
cmps
xchg
mov
inc
sahf
test
cwde
repnz
pop
ins
xlat
int3
cmp
jp
pop
sub
jmp
data16
(bad)
pop
shl
fsub
cs
push
in
outs
pop
sub
les
es
icebp
xchg
bound
push
pop
fwait
push
repnz
mov
inc
mov
inc
jl
fdiv
sub
push
scas
fldl2e
rcr
fidivr
sub
push
add
inc
pop
cld
xor
sub
jg
push
pop
(bad)
pop
div
cs
aas
or
cmp
cld
jo
mov
pop
lock
or
mov
and
dec
stos
xlat
add
sub
mov
inc
push
repnz
(bad)
adc
jmp
xor
stc
xor
pop
movs
icebp
mov
mov
xlat
or
push
jecxz
cmp
(bad)
clc
(bad)
out
pop
stc
mov
pusha
push
out
mov
enter
sar
and
sbb
je
mov
jmp
das
jbe
xchg
dec
xchg
in
lods
dec
pop
je
pusha
xchg
fs
leave
retf
lahf
mov
adc
pop
(bad)
in
arpl
hlt
sbb
or
or
mov
pop
call
aam
pop
pop
inc
ret
and
bound
in
call
pop
enter
daa
cli
stc
cli
lea
sub
sbb
cmp
mov
aas
mov
movs
inc
sub
jle
dec
mov
aaa
ins
ror
mov
jecxz
jp
sahf
in
jmp
inc
jmp
rcr
mul
test
xchg
sti
lods
xor
sub
gs
scas
test
add
imul
jns
ins
jecxz
popf
aas
movs
add
imul
cmp
dec
test
stos
shl
ror
imul
in
sbb
fstp
mov
and
dec
fisttp
addr16
mov
mov
shl
push
int
push
movs
and
jns
pop
test
and
int
push
aas
sti
dec
call
cmp
retf
dec
fimul
mov
stc
inc
stc
pop
or
icebp
test
xchg
mov
cmps
das
fst
mov
addr16
xchg
int
adc
push
fst
sbb
pop
imul
jne
cmp
jge
daa
xchg
outs
inc
mov
push
mov
cmp
mov
addr16
sbb
pusha
sbb
xlat
mov
and
sahf
or
jl
push
movs
add
cwde
mov
sub
and
(bad)
mov
adc
fcom
clc
out
jmp
(bad)
dec
or
ss
or
jns
inc
sbb
les
sub
ss
test
adc
inc
xor
and
test
dec
outs
adc
js
imul
dec
rol
adc
jo
pop
call
mov
out
(bad)
fmul
add
pop
push
add
mov
std
pop
(bad)
pusha
xor
pop
(bad)
jl
stc
sahf
cdq
sub
add
jno
add
test
sbb
mov
in
sub
or
or
mov
dec
jmp
cmp
inc
adc
repnz
pop
pop
inc
inc
push
adc
pop
arpl
daa
cdq
sbb
add
fisub
sbb
stos
push
aaa
and
cmp
mov
scas
push
push
pop
adc
movs
mov
mov
push
cdq
fstp
jo
and
xor
or
mov
push
inc
sbb
mov
in
stos
add
in
xor
loope
mov
mov
test
(bad)
mov
xchg
mov
mov
dec
pop
fst
xchg
fs
shl
(bad)
push
cld
or
inc
sub
mov
jmp
add
mov
dec
pop
push
stc
scas
aam
bound
shl
or
rcl
fcmovnbe
loopne
push
es
and
cli
retf
push
test
jnp
xchg
aas
sbb
test
dec
adc
stos
inc
xchg
sub
cmp
lahf
and
jecxz
or
int3
ret
xchg
(bad)
(bad)
xchg
adc
pop
jae
pushf
push
add
jmp
lods
cdq
push
int3
dec
out
movs
icebp
jbe
mov
rol
(bad)
dec
jecxz
(bad)
jge
cmc
add
sbb
ficomp
dec
mov
add
sub
jle
push
add
sub
mov
ss
cmp
sbb
out
pop
jbe
(bad)
cmp
mov
es
shl
lahf
fidiv
jecxz
arpl
test
dec
or
loop
xor
daa
cmp
adc
mov
pop
dec
(bad)
xchg
mov
(bad)
sahf
sub
fldenv
inc
arpl
sbb
cmp
sahf
sbb
pop
movs
test
call
enter
and
adc
(bad)
cmp
ret
push
pop
inc
mov
xchg
add
inc
std
jne
xrelease
and
hlt
inc
cmp
(bad)
call
cmp
pop
int3
call
mov
sub
arpl
xchg
sub
inc
xchg
in
fs
ror
dec
enter
test
sub
pop
dec
sbb
and
fld
scas
mov
or
xlat
push
fwait
mov
mov
xchg
sub
cmp
mov
js
stos
sbb
cmps
and
and
and
mov
ss
rep
aam
hlt
out
sub
enter
push
jnp
test
movaps
nop
jno
push
cmps
fidiv
repz
pop
ins
jg
sti
mov
shl
pusha
leave
dec
or
cmp
sub
dec
pop
stc
and
adc
call
dec
sar
je
mov
fild
add
repnz
pop
int3
movs
dec
or
(bad)
cmc
mov
jne
iret
(bad)
fdivr
jno
loop
xchg
lods
sbb
fsubr
loop
pop
dec
add
pop
cmc
mov
dec
xchg
push
cmps
gs
imul
lods
fstp
mov
sar
into
sbb
(bad)
or
jbe
or
nop
inc
ins
test
mov
pop
xchg
dec
mov
adc
pushf
in
or
sahf
shr
and
inc
aaa
pusha
push
int3
xor
mov
sub
in
movs
inc
adc
shl
retf
mov
popa
data16
mov
mov
and
cld
jecxz
push
lds
iret
jns
ins
adc
arpl
sub
ficomp
adc
stos
sbb
dec
pop
jae
test
dec
call
mov
pop
push
out
cmps
fstp
xchg
(bad)
adc
sbb
cld
sub
stos
cwde
sbb
int3
inc
jne
bound
ror
and
pop
addr16
loope
das
and
retf
or
adc
std
retfw
dec
dec
mov
mov
sub
sbb
(bad)
mov
paddusb
push
aad
push
in
test
in
rcl
test
dec
out
movs
loopne
cmc
fst
sbb
fs
dec
add
xchg
mov
dec
sahf
cmp
ja
push
aad
dec
pusha
push
into
mov
mov
imul
dec
neg
and
xor
mov
mov
cmps
mov
cmp
sbb
lahf
adc
mov
cmp
xchg
push
and
fsubp
out
div
ret
inc
in
mov
dec
sbb
call
test
pop
mov
xlat
sti
sbb
inc
repnz
mov
call
test
retf
loope
repz
push
(bad)
add
mov
ds
pop
jmp
fimul
out
mov
sbb
or
sub
push
ja
fisub
or
mov
clc
pop
dec
pushf
jle
(bad)
je
dec
xchg
or
pop
std
call
mov
jecxz
mov
(bad)
pmulhw
int
aaa
mov
xor
rol
xchg
jo
into
xor
(bad)
popa
icebp
gs
xchg
pop
ins
cmp
jo
mov
loopne
dec
push
js
add
mov
jno
add
jmp
pop
aam
mov
cwde
adc
pop
clc
out
shr
and
fidiv
inc
add
sar
or
and
sub
xor
loopne
or
sub
add
scas
add
fcom
out
mov
ja
or
mov
lahf
cmp
aaa
movs
loopne
xchg
shl
pop
fild
fcomp
bound
shl
cmp
xor
fst
dec
adc
xor
cmp
or
mov
imul
shr
and
repz
fdiv
(bad)
stc
or
aas
data16
mov
add
inc
movs
imul
fs
mov
mov
inc
push
inc
(bad)
ret
sbb
cwde
jge
push
aam
cs
aaa
push
sbb
mov
aad
sbb
popf
mov
sub
popf
into
dec
jg
mov
test
mov
inc
repz
bound
mov
sub
popa
cmp
adc
and
stos
mov
mov
jae
ss
lods
or
dec
dec
dec
push
adc
sub
pop
mov
lods
hlt
mov
cmp
(bad)
inc
dec
in
sbb
mov
shrd
mov
sbb
pop
mov
jl
fild
xor
retf
xchg
xor
cmp
aad
pop
in
out
push
cmp
or
jg
push
ror
stos
ds
iret
or
xchg
mov
mov
cmp
push
out
loope
loop
div
or
outs
cmps
imul
popf
nop
retf
mov
or
in
add
inc
xchg
or
das
jbe
cmp
fistp
dec
jl
inc
clc
mov
adc
fld
icebp
xchg
ror
pop
jmp
push
jnp
xchg
xchg
mov
std
push
add
dec
arpl
xor
cmp
jecxz
jno
mov
dec
in
ins
(bad)
jno
inc
sbb
int3
and
in
mov
aam
das
and
pusha
in
das
mov
lock
dec
pop
cmps
sahf
xchg
retf
cmp
(bad)
pop
or
pusha
sub
inc
lea
cmps
sub
jne
mov
fcom
arpl
mov
popf
out
jle
xchg
mov
js
jl
adc
mov
data16
inc
pop
or
and
or
xchg
cli
retf
push
sbb
xchg
mov
adc
popa
mov
and
test
sub
pop
inc
cmp
cmp
outs
jmp
les
pop
out
icebp
inc
jne
xor
xchg
ins
stos
dec
add
push
push
adc
leave
sbb
jmp
leave
xchg
push
aad
test
imul
mov
(bad)
pop
loope
test
jae
lods
mov
sbb
lahf
and
sub
cmps
fsubr
je
test
mov
out
hlt
pop
ss
jae
or
inc
mov
arpl
lock
shr
mov
mov
jmp
shr
fucomip
jns
(bad)
mov
lahf
mov
cmps
pop
jl
imul
mov
cwde
repnz
inc
jno
xor
mov
sbb
mov
retf
imul
test
pushf
mov
outs
test
jp
jmp
mov
out
cmp
sbb
outs
in
clc
cmp
or
out
mov
sub
mov
rcr
neg
stc
inc
mov
sti
push
sbb
mov
movs
mov
xchg
mov
add
xchg
pop
arpl
cmp
or
test
jle
and
cmp
and
mov
adc
stc
mov
cdq
arpl
lahf
adc
push
bndstx
dec
jle
stos
out
js
clc
pop
mov
in
sbb
jb
and
add
daa
jg
adc
dec
fstp
movs
(bad)
sub
mov
jecxz
and
test
sti
imul
adc
dec
mov
sbb
mov
sbb
ins
mov
in
jno
mov
adc
cs
movs
mov
daa
leave
push
shr
int3
adc
ins
cdq
jno
in
inc
inc
inc
xor
shl
dec
dec
in
push
jge
sti
push
or
xor
adc
(bad)
sti
pop
imul
cmp
test
jns
ins
repnz
push
jns
nop
outs
fimul
cmps
push
in
dec
xor
popf
lods
push
cmps
add
les
test
ds
mov
jmp
push
cmp
iret
mov
mov
out
ja
mov
nop
add
inc
cld
pusha
ins
push
sub
cli
dec
cmp
scas
scas
cmp
test
adc
lahf
mov
out
sub
retf
ss
cmp
test
jmp
mov
inc
lea
es
jbe
sub
ror
pop
mov
cld
aaa
push
add
clc
push
adc
add
mov
add
sbb
popa
adc
(bad)
and
inc
pop
bound
out
mov
jmp
xlat
sub
ins
jne
in
sub
xor
lock
mov
mov
les
xlat
test
jb
mov
pop
add
xchg
outs
clc
ret
xchg
test
jl
push
adc
loope
icebp
cmp
cmp
add
lods
lods
int3
xor
sysret
and
icebp
cmps
fldcw
adc
adc
jns
push
jle
mov
xor
pop
and
inc
mov
sbb
add
push
pop
movs
pop
push
sub
sub
aas
mov
outs
(bad)
sbb
jne
popa
jmp
push
cmp
pop
pop
scas
fwait
call
cmp
icebp
push
inc
inc
ins
xchg
and
pop
aaa
xor
test
scas
and
repz
fnsave
jp
in
(bad)
jmp
sar
xor
inc
jbe
(bad)
fcmovnu
cmc
call
sahf
dec
in
cmps
and
sub
out
pop
shr
sbb
jge
int
push
ja
jne
add
xchg
cmp
pop
js
sbb
mov
inc
call
dec
out
cmp
in
mov
scas
sti
out
mov
push
out
gs
cmp
and
xchg
jecxz
(bad)
sub
stos
xor
loop
mov
jns
push
pusha
xchg
mov
xor
pop
ficomp
push
lods
jbe
idiv
mov
ja
pop
pop
not
mov
rcl
jge
das
mov
sbb
xchg
mov
loop
pop
sub
dec
or
jnp
rcl
cmp
inc
xchg
js
(bad)
aam
jbe
inc
les
(bad)
push
out
cmc
data16
add
leave
mov
(bad)
dec
adc
out
fwait
push
xor
push
mov
pop
cmp
dec
xchg
out
xlat
add
xchg
es
jbe
mov
cld
les
sbb
cmp
mov
shl
js
jg
clc
jnp
ror
sbb
inc
mov
retf
mov
addr16
add
lods
push
push
and
dec
xchg
imul
jmp
int
cmp
mov
loope
(bad)
mov
(bad)
pop
jae
(bad)
sub
mov
je
jmp
cs
pop
(bad)
bound
int3
pop
dec
fldpi
ror
data16
dec
push
daa
jp
inc
pop
test
aas
pop
popf
cs
es
sub
in
sub
add
and
sti
fldenv
stos
test
mov
dec
adc
push
out
jne
jb
inc
cld
loop
inc
xchg
mov
and
cmp
push
push
inc
dec
and
cmc
xor
sub
dec
jg
jecxz
pusha
mov
and
mov
in
pusha
rol
inc
popf
dec
pop
mov
sbb
mov
sub
out
mov
in
push
pop
push
jecxz
sbb
cmp
in
scas
mov
push
loopne
and
clc
addr16
(bad)
adc
adc
jg
aas
scas
repz
cwde
scas
jmp
daa
adc
jns
xchg
push
add
lea
inc
sub
pop
lods
push
xor
loop
inc
and
inc
pop
dec
mov
or
cmp
retf
dec
cmp
jmp
push
push
cld
out
dec
cmp
call
push
mov
push
add
test
mov
and
sub
cmp
mov
out
xchg
and
(bad)
jo
std
push
ret
mul
xchg
and
mov
retf
push
icebp
xor
or
lods
mov
mov
push
retf
cmps
mov
(bad)
lea
sbb
cmp
fmul
add
enter
mov
add
xchg
sbb
pop
ds
sti
mov
addr16
adc
cmc
cmp
(bad)
es
(bad)
(bad)
ret
repnz
icebp
push
xor
xchg
out
lods
call
or
sbb
inc
jns
sub
sub
sub
or
lea
addr16
aad
aas
repnz
sar
mov
push
aaa
bound
mov
mov
out
(bad)
lds
out
mov
adc
and
fsub
fnsave
push
(bad)
pop
sub
imul
inc
pop
fisttp
retf
mov
cld
fs
sbb
dec
pop
enter
push
and
in
mov
mov
pop
adc
add
int3
mov
fsub
inc
and
test
jle
call
push
dec
test
in
shr
retf
cmp
stos
call
pop
inc
lods
and
xor
push
jbe
fs
and
add
pop
out
(bad)
sbb
fadd
call
xor
and
add
(bad)
pop
cmps
bound
retf
jae
cld
mov
dec
xchg
fild
push
sub
or
jl
inc
mov
fsubr
adc
push
pop
adc
and
inc
add
in
and
mov
aam
xchg
int
or
xchg
jecxz
and
or
aam
imul
jp
(bad)
cs
loope
fwait
jnp
push
repz
bound
cmc
je
popa
fild
pop
test
jo
mov
movs
mov
and
pop
push
or
cmp
pop
pop
xor
fadd
or
inc
jmp
inc
add
inc
sahf
xor
test
(bad)
mov
call
in
jmp
inc
xchg
sub
or
fisttp
and
sub
and
mov
test
sbb
inc
rcl
jb
(bad)
loopne
repnz
sub
mov
shl
add
xor
and
jmp
mov
mov
sub
loop
jnp
(bad)
dec
and
mov
shr
fs
lahf
dec
inc
push
sub
inc
iret
dec
xor
mov
icebp
cmp
fadd
mov
ss
mov
fistp
jb
pop
out
or
mov
xor
es
xchg
add
je
xchg
in
hlt
and
in
pop
mov
sub
iret
push
test
stos
mov
dec
cmps
ss
loope
mov
loope
pusha
cmp
xchg
push
sub
dec
xchg
stos
mov
fcmovbe
sbb
push
inc
pop
jne
clc
push
popa
test
push
ret
enter
sti
and
ret
mov
test
ja
pop
xchg
push
inc
call
pop
cmp
adc
inc
jae
movs
or
js
jns
das
ret
sbb
dec
movs
popa
fistp
mov
lahf
clc
cmp
iret
jmp
inc
fdiv
inc
and
push
lds
push
push
mov
push
xchg
loope
test
push
push
mov
lahf
cmp
lds
push
mov
(bad)
fidivr
add
dec
stos
(bad)
xchg
aad
movs
pusha
test
pop
sbb
sub
cmp
jnp
push
pop
jmp
ds
mov
jp
cmp
adc
inc
iret
jecxz
das
popf
bound
(bad)
pushf
ins
out
mov
push
je
mov
xor
movsx
push
popa
mov
pop
jno
mov
gs
push
mov
repz
into
sbb
pop
adc
adc
or
xchg
int3
xlat
data16
popa
repz
mul
push
jle
repnz
lods
xor
shl
pushf
inc
mov
es
adc
sbb
movnti
pushf
dec
nop
aad
fisub
and
fs
lods
(bad)
frndint
xor
cmc
fild
dec
push
movs
push
mov
sbb
or
das
inc
test
pop
mov
xor
rol
lock
retf
aaa
scas
jmp
push
call
xor
jo
dec
jo
jns
push
cld
sub
sub
fistp
add
xchg
jne
jnp
ror
pop
into
pop
or
loopne
lock
stos
and
adc
mov
test
inc
dec
call
push
js
repz
and
push
or
(bad)
or
adc
dec
xor
add
stc
arpl
inc
inc
mov
adc
xchg
mov
nop
mov
push
mov
sub
into
pop
mov
xor
xor
add
or
popa
mov
mov
lock
icebp
mov
in
stos
scas
addr16
jnp
and
or
sbb
pop
pop
jno
mov
inc
les
add
dec
xchg
(bad)
and
mov
adc
mov
cld
xor
add
int
and
push
sbb
call
fcmovnu
outs
pop
rol
(bad)
jb
or
or
retf
and
mov
sbb
fist
dec
cmc
pop
aas
icebp
sbb
xor
adc
icebp
jae
cmps
pop
ins
loope
data16
mov
xchg
mov
scas
pop
lahf
pop
cs
sbb
push
pop
fdiv
cmc
sbb
cmp
xor
cmps
loope
sub
pop
dec
pop
mov
jbe
inc
inc
fcmovne
cld
into
je
push
fdiv
adc
fisubr
pop
adc
push
(bad)
aad
lea
jle
bound
fdivr
les
sar
ret
sbb
xor
cmps
jne
pop
push
push
inc
mov
(bad)
test
jo
cmp
dec
mov
call
mov
aam
inc
(bad)
mov
push
mul
mov
xchg
int
inc
cmp
int3
(bad)
fsubr
call
sub
mov
outs
pop
je
test
push
pop
outs
pop
xchg
aam
imul
jge
dec
daa
xchg
movs
ror
bt
push
ss
push
jae
sbb
dec
loop
and
les
cmps
les
imul
aam
sbb
dec
xor
sub
std
xor
lods
jle
xor
xlat
bound
or
pop
mov
test
outs
in
push
and
mov
push
adc
pop
das
(bad)
or
pop
xor
scas
sbb
cmp
sbb
cwde
fcmovnbe
loop
push
pop
sbb
jns
fmul
je
dec
mov
inc
mov
rol
test
inc
adc
adc
in
push
je
scas
jmp
(bad)
inc
sahf
pop
rol
cmp
xchg
mov
es
adc
repnz
ror
jmp
mov
jl
(bad)
dec
fadd
lods
(bad)
jns
add
lods
mov
pop
cmc
ret
and
mov
jmp
jmp
mov
sbb
xor
mov
fisttp
fimul
xchg
add
aam
sti
das
jne
push
ror
sub
movs
cmp
in
xchg
ficom
jo
popf
popf
sub
cli
inc
adc
add
ins
sbb
je
sub
outs
lock
fstp
ins
or
cwde
push
push
xchg
enter
out
repz
fisub
jmp
sbb
imul
je
mov
mov
cmc
iret
out
gs
in
in
mov
jae
mov
mov
add
xor
shl
push
rol
push
cmp
xchg
mov
repz
fs
cs
leave
mov
sbb
add
or
not
test
call
push
pminub
sbb
pop
clc
outs
enter
rol
loop
leave
inc
ins
stc
inc
jb
mov
add
push
(bad)
mov
and
push
inc
cmp
push
jo
fsubrp
sub
push
cmp
aam
mov
ss
inc
sub
adc
rcl
(bad)
xchg
pop
pushf
mov
xor
push
cmp
mov
mov
mov
lea
jl
js
popf
sub
lahf
xor
dec
pop
das
and
cmp
ds
inc
(bad)
lahf
leave
fisttp
in
maskmovq
idiv
fsubrp
lea
dec
xchg
std
sub
sar
test
test
lea
inc
mov
push
setle
imul
cmp
outs
cmps
out
xor
jmp
dec
pop
inc
das
jmp
sbb
mov
sbb
push
es
xchg
shl
hlt
repnz
push
mov
(bad)
fucomp
and
ds
inc
lds
mov
cmp
fwait
rcr
out
lea
mov
iret
test
add
test
loop
dec
popa
sbb
sysret
push
adc
test
repz
mov
add
pop
mov
jne
sub
xchg
cmp
ja
dec
adc
push
std
fwait
shr
cmp
mov
sub
add
fnstsw
mov
fwait
cmp
aas
pop
cli
int3
mov
loopne
xor
sahf
jecxz
jle
cmps
int
sub
xchg
pop
data16
cdq
push
dec
leave
add
sbb
pushf
or
das
mov
push
imul
xchg
cmp
sub
and
loopne
add
jmp
cmps
iret
lods
leave
add
sub
sbb
test
adc
stos
test
fwait
mov
push
cmp
pop
and
shr
das
dec
aam
lods
xor
call
mul
pop
sub
cld
outs
xor
xchg
test
aas
popf
outs
out
repz
std
fisttp
jl
adc
xchg
cdq
mov
iret
mov
add
pop
mov
jmp
cmp
sub
or
xchg
mov
cmp
sti
imul
sub
dec
jnp
in
push
fcmovu
sbb
repz
enter
jae
mov
sti
cmps
fistp
hlt
push
pop
movs
fstp
push
sub
adc
orps
or
imul
ror
inc
add
xchg
pop
in
fstp
ja
xor
xor
out
sbb
in
push
mov
inc
scas
rcl
xchg
sub
cmps
iret
inc
retf
cmp
inc
fldenv
aaa
or
sub
test
pop
cs
inc
fisttp
mov
lods
jnp
ror
add
data16
mov
repz
adc
fwait
ins
in
sbb
das
cmp
sub
mov
call
(bad)
jno
jnp
xlat
pop
cmp
mov
and
loope
ja
xchg
inc
pop
sbb
ror
fcmovbe
test
jmp
stc
adc
ss
jbe
mov
xchg
stos
push
add
btc
ins
ins
lods
adc
pop
pop
pop
jecxz
ffreep
inc
jg
scas
sbb
sbb
sahf
out
or
xchg
pop
xchg
pop
mov
rol
mov
rcr
fnstsw
push
jp
sbb
in
xchg
push
cmps
out
dec
mov
test
sahf
test
sub
mov
and
outs
ins
push
sbb
fstp
mov
call
lods
lahf
jo
inc
pop
jno
xor
push
mov
bound
scas
popf
es
sbb
ret
mov
stos
pop
mov
sahf
dec
bound
sbb
push
(bad)
je
xor
mov
jno
xor
shl
or
in
and
inc
pop
mov
ret
shl
dec
push
int
lea
add
inc
pop
jo
pop
push
movs
cmp
pusha
or
lods
popf
xchg
cmp
pop
call
pop
add
movs
sbb
lods
outs
and
mov
ja
hlt
inc
sbb
out
dec
pusha
dec
add
imul
mov
hlt
out
mov
int3
pop
add
hlt
and
sbb
in
xchg
jmp
pusha
mov
rol
sbb
pop
sbb
adc
out
mov
xchg
mov
icebp
movs
repnz
setb
ss
outs
xor
and
push
mul
xchg
mov
xchg
stc
imul
sbb
pop
cs
(bad)
in
or
xor
int3
ret
out
mov
cli
je
cdq
sahf
fwait
add
sub
sub
jmp
repnz
ret
dec
xchg
cmp
mov
mov
mov
out
(bad)
xor
pop
pop
and
jmp
jb
pop
shl
add
mov
and
jne
outs
sbb
scas
xor
mov
movs
cmps
cld
faddp
add
in
push
xchg
or
xchg
mov
jmp
lahf
test
and
cmps
xchg
daa
popf
lods
xor
js
stc
mov
daa
ds
out
scas
xchg
sub
sub
pop
mov
stos
and
mov
push
fld
cmps
ins
push
jmp
arpl
xchg
cli
push
mov
in
add
bound
inc
and
cmp
scas
shr
inc
int
jp
mov
add
add
gs
mov
jns
sub
add
scas
inc
mov
repnz
jge
lea
out
aam
mov
loope
in
push
pop
jbe
adc
sub
imul
lea
inc
xchg
fcomp
retf
call
or
in
es
ds
mov
in
push
mov
sub
sub
pushf
mov
xor
into
test
jg
xor
or
aad
xor
enter
bound
mov
iret
mov
mul
imul
ja
in
shr
push
adc
xchg
pop
sbb
loopne
jns
jb
cld
dec
dec
retf
mov
mov
out
jp
int3
and
cmp
xchg
inc
retf
in
shr
adc
xor
xchg
jmp
dec
outs
sbb
sbb
pop
stos
jne
inc
ja
les
js
pop
pop
mov
jp
mov
adc
jecxz
call
sub
out
cmc
mov
shl
push
dec
cmp
icebp
xor
cmp
dec
add
pop
add
xchg
neg
cmps
mov
aam
int
dec
add
shl
icebp
cmp
add
dec
pop
js
aam
sbb
jno
shr
sar
mov
cmps
dec
xchg
scas
std
or
adc
cli
shl
sbb
ins
test
inc
mov
cmp
and
cmp
xchg
jmp
je
sub
fwait
(bad)
or
inc
js
fcomp
add
cmp
je
sti
sub
bound
popf
adc
jl
add
dec
xor
enter
popa
cmp
pushf
and
scas
xchg
outs
adc
imul
xchg
jae
cmp
push
lods
jnp
pop
int3
sbb
(bad)
pop
add
push
repnz
sbb
pop
in
xor
fld
shl
dec
shl
jmp
push
call
dec
sub
inc
in
mov
mov
sub
arpl
cmp
lock
push
mov
mov
dec
xor
dec
xchg
jmp
add
cli
jle
push
inc
pop
(bad)
mov
gs
ds
stc
dec
sti
cmp
push
dec
retf
(bad)
loopne
push
fwait
ret
inc
cmp
(bad)
xor
and
jne
sub
adc
cdq
or
sbb
lods
scas
aam
js
iret
std
or
mov
call
pop
icebp
or
shr
inc
sbb
sbb
mov
std
lahf
mov
dec
cmp
mov
jno
fsub
mov
cmp
ins
fidivr
push
(bad)
rcr
jae
lds
div
push
dec
in
inc
aaa
inc
test
aaa
inc
mov
mov
ins
in
(bad)
cld
xchg
dec
mov
dec
adc
mov
daa
pop
pop
in
pop
lods
movs
inc
cli
ret
sub
cmps
sbb
push
add
inc
mov
xor
cdq
lahf
mov
dec
jmp
mov
mov
jbe
loope
pop
sub
test
push
movs
adc
cmps
cmp
into
clc
test
push
mov
aad
and
(bad)
pop
mov
adc
xor
adc
jne
(bad)
test
dec
adc
fcmovnu
cmp
lock
addr16
test
out
push
cs
cdq
lods
(bad)
mov
sbb
inc
loopne
and
cwde
mov
xor
mov
lahf
mov
rcr
and
cmp
xor
xor
pop
push
ds
mov
cmp
add
in
xor
int3
mov
xor
scas
(bad)
sbb
add
and
fwait
mov
mov
iret
jno
pop
add
cld
inc
dec
mov
repnz
fsub
neg
or
ja
shl
push
or
mov
pop
or
call
sub
(bad)
out
sub
dec
cmp
loope
xchg
lahf
les
or
das
jmp
fsub
neg
ja
adc
imul
and
stc
js
sub
push
xchg
push
sti
xchg
sbb
and
dec
pop
sbb
push
cmp
mov
mov
sbb
aad
cmp
xchg
out
in
cmp
push
mov
xchg
or
lahf
in
jge
repz
or
sar
call
or
inc
xchg
mov
call
call
cmps
inc
test
cli
out
sub
xchg
lea
cmps
pop
fwait
mov
(bad)
inc
sti
add
imul
lahf
mov
mov
ja
jae
lock
enter
stc
add
scas
push
lea
js
pop
mov
cmp
stos
jae
xor
sbb
xor
cmp
int3
xchg
mov
(bad)
mov
jbe
or
mov
mov
jno
jno
push
fst
out
call
aad
push
add
std
call
adc
data16
add
xor
and
xchg
fsubr
shl
sbb
dec
retf
mov
sbb
mov
clc
adc
movs
xchg
outs
or
pop
add
ficom
daa
add
arpl
cmpps
jmp
jl
in
daa
mov
outs
ds
cmps
push
(bad)
ins
lock
stc
push
loope
int3
dec
dec
cmps
lahf
push
mov
imul
dec
inc
jb
sbb
sbb
idiv
js
test
xchg
mov
imul
and
push
iret
jno
hlt
repnz
mov
push
mov
xor
cdq
inc
cmp
or
add
pop
out
add
ss
add
mov
stc
pop
xchg
mov
ret
popw
pop
bound
adc
jl
and
std
adc
jge
sbb
jg
dec
bound
dec
inc
adc
xchg
lds
repnz
mov
lds
inc
mov
test
and
pusha
adc
repz
push
push
cwde
xchg
xor
mov
adc
repnz
jge
push
inc
pop
pop
mov
movs
sbb
and
push
cmp
outs
je
arpl
push
mov
xor
das
sub
test
fisub
xor
mov
fst
js
cmp
fstp
pop
or
push
icebp
mov
sar
je
xchg
dec
inc
pop
nop
push
int3
jbe
es
imul
push
out
dec
add
mov
test
call
and
scas
inc
push
push
xor
jecxz
push
sbb
(bad)
leave
pop
mov
pop
jne
cli
loopne
std
loop
mov
addr16
pusha
cmp
int3
ret
jne
and
into
movs
jge
ja
mov
inc
cmps
sub
clts
cmp
sub
dec
adc
(bad)
shr
mov
ror
sub
mov
fwait
or
xchg
cwde
repnz
fnstsw
dec
pop
add
js
sbb
es
lods
push
retf
dec
dec
gs
loopne
dec
and
lea
and
sahf
xchg
pop
int
out
push
in
fs
and
repnz
int3
jne
retf
setb
adc
imul
add
cmp
into
test
mov
mov
xor
cli
cli
cmp
gs
mov
scas
and
or
jg
loopne
movs
ins
mov
mov
xchg
xchg
mov
mov
and
xchg
mov
mov
into
stos
iret
je
xchg
repz
mov
sub
sbb
dec
mov
pop
mov
fimul
xchg
in
jmp
dec
(bad)
pop
and
mov
jmp
fcmovbe
ret
jmp
nop
push
push
and
push
int
mov
sub
pslld
push
stos
ror
test
mov
adc
and
mov
sub
push
call
and
icebp
loopne
popf
mov
xor
mov
aaa
ficomp
setg
pop
ds
inc
and
ret
neg
rcr
ret
push
cmp
(bad)
scas
mov
jle
in
rol
push
and
lock
(bad)
bound
mov
pop
test
fnstsw
ins
movs
movs
push
jbe
xchg
mov
(bad)
test
sbb
in
or
outs
push
mov
gs
fldcw
imul
ret
mov
ret
xchg
jnp
pop
xchg
or
test
push
pandn
out
cmp
test
stc
stc
pop
fsubp
pop
cs
retf
inc
out
push
sbb
add
imul
add
(bad)
push
sahf
xor
das
sbb
fmul
xchg
cli
call
push
ret
lods
mov
sub
mov
mov
(bad)
out
fs
enter
xchg
inc
popa
sbb
dec
mov
inc
jne
outs
pusha
mov
and
in
stc
adc
mov
inc
pop
push
sub
inc
popa
pop
loop
push
fadd
xchg
in
je
push
enter
in
clc
inc
out
xchg
pop
add
stc
cmp
push
mov
sbb
mov
mov
fdiv
mov
adc
jg
dec
sub
xchg
aaa
popf
push
cli
test
xor
cmps
inc
mov
loope
xor
clc
jbe
sar
pop
scas
mov
jp
int3
cmp
jmp
mov
adc
out
pop
sub
in
movs
push
icebp
into
lea
mov
shl
push
mov
aaa
(bad)
pusha
gs
and
(bad)
push
and
fsub
sub
push
ins
fdiv
mov
retf
dec
inc
outs
adc
add
pop
je
xchg
call
lea
push
adc
add
cmps
adc
cld
lea
int
and
test
ficom
adc
adc
outs
retf
pusha
dec
(bad)
xor
dec
mov
jbe
pop
and
iret
push
xchg
or
aas
pusha
in
enter
cmp
mov
imul
or
or
xor
es
pusha
scas
scas
enter
imul
in
in
inc
mov
or
xchg
xchg
push
push
(bad)
(bad)
rol
stc
scas
repz
dec
popf
xlat
rol
int
pop
and
(bad)
fsubr
aam
sub
mov
mov
xchg
daa
pop
push
or
mov
push
pop
xlat
cmp
pop
push
imul
xor
outs
sbb
daa
in
nop
mov
out
call
mov
pop
test
sub
(bad)
mov
or
mov
fild
sub
jg
call
fld
mov
mov
jnp
mov
scas
test
cmp
push
sbb
xor
fiadd
cmp
dec
sbb
mov
test
in
pop
test
mov
xlat
inc
cs
or
mov
inc
scas
mov
cmp
dec
and
retf
cmc
cdq
cmc
ins
cmp
in
rol
fadd
jl
pop
icebp
xchg
jmp
(bad)
jae
pop
shl
hlt
xchg
xchg
gs
jnp
cmp
inc
add
imul
imul
(bad)
xchg
and
jbe
das
jmp
out
xchg
imul
mov
pop
lods
retf
test
aam
cwde
test
pop
nop
pop
jecxz
jp
and
jmp
imul
xor
cmp
cld
cmp
fnstcw
push
cdq
iret
ds
popf
or
in
js
in
push
or
add
push
jp
cdq
inc
pop
push
adc
xor
in
mov
sahf
pushf
leave
add
int3
fwait
mov
mov
pushf
fild
or
mov
in
inc
psubw
mov
int
sub
jl
retf
mov
aam
or
dec
clc
push
pop
ins
pop
push
dec
cmps
push
cmc
out
fisub
xchg
jp
push
movs
cmp
ins
int3
cmp
ret
pop
daa
mov
test
jne
xor
mov
add
nop
mov
inc
pop
dec
sbb
jno
jecxz
iret
mov
ja
hlt
xlat
cmp
shl
(bad)
xchg
mov
jae
daa
jmp
(bad)
mov
push
fs
les
scas
cmp
push
retf
hlt
jl
dec
xor
cld
and
(bad)
call
jno
and
popa
xchg
sub
test
sbb
dec
add
clc
into
xor
and
inc
mov
or
or
adc
out
test
jle
mov
aas
jmp
jbe
push
cmp
in
add
fdivr
sbb
call
hlt
inc
mov
shl
jl
pop
xchg
mov
shl
rol
pop
pop
sbb
fmulp
lock
push
cli
dec
out
pushf
iret
push
sub
jae
mov
aam
addr16
cmp
jmp
adc
xchg
lahf
xor
out
cmc
lds
sub
pop
arpl
and
xor
xor
dec
(bad)
sub
and
push
jnp
mov
aad
dec
and
sbb
inc
out
pop
or
out
mov
inc
adc
test
or
push
clc
sbb
(bad)
jmp
out
ins
mov
std
mov
push
or
adc
out
and
add
mov
orps
(bad)
dec
(bad)
int
repnz
int
mov
and
dec
pop
lock
rol
movs
inc
cwde
cmc
imul
sbb
bound
push
add
sti
dec
push
mov
lods
imul
push
in
aaa
call
sbb
lods
jns
dec
mov
xor
div
sub
cmps
imul
jecxz
jno
add
(bad)
and
call
shl
hlt
(bad)
rsm
sub
mul
xor
xchg
ins
sbb
js
sahf
pop
mov
loopne
adc
test
jmp
mov
cmp
rol
ins
fs
lahf
mov
shl
cdq
jne
xor
leave
fdiv
adc
cmp
fs
enter
cli
jo
ss
or
and
ja
repnz
pop
dec
clc
mov
jnp
add
loopne
ins
and
imul
inc
pop
mov
and
(bad)
adc
hlt
cdq
push
ins
or
shl
mov
pop
push
mov
sub
sub
sbb
ror
jg
xchg
ja
inc
cmp
sbb
xchg
push
(bad)
mov
add
scas
jmp
jbe
and
aas
jae
push
ja
cld
lds
loopne
loop
stc
sbb
mov
stos
jno
cs
mov
pop
mov
je
cmc
dec
sbb
sahf
xchg
aas
stos
xchg
popf
xadd
mov
jae
pop
addr16
fadd
mov
in
ret
repz
(bad)
lahf
sahf
mov
pop
cmps
leave
clc
xchg
bound
stc
xchg
fs
pop
aaa
popf
add
xchg
sar
cmc
aas
pop
(bad)
cmp
rcr
pop
cmp
cmp
bnd
push
(bad)
push
xchg
jns
mov
out
sbb
cli
sbb
div
adc
xchg
mov
sub
in
sub
arpl
jg
repz
repnz
call
sub
and
dec
shl
call
scas
test
shl
or
sbb
int3
ror
ret
shl
xchg
sub
aad
or
sub
pushf
cmp
mov
and
xchg
clc
mov
mov
hlt
ds
imul
imul
jp
push
aas
fcomp
add
fdivr
fdiv
dec
push
out
cdq
or
xor
call
daa
jmp
jg
inc
jnp
rcr
in
popf
mov
jb
fistp
dec
dec
xor
test
ins
ret
(bad)
sub
shr
inc
xchg
or
mov
daa
xchg
lea
clc
gs
xchg
test
adc
pop
inc
enter
push
push
pop
outs
inc
add
loopne
cld
aaa
int3
add
push
test
jecxz
test
in
cld
mov
cwde
sbb
push
imul
xchg
mov
cwde
scas
rol
mov
imul
ds
inc
das
inc
lea
aaa
cwde
xchg
jno
xchg
mov
adc
mov
mov
mov
movs
imul
cwde
add
xchg
test
cmp
adc
adc
das
mov
rcr
jecxz
fsubr
div
xchg
xor
mov
xor
js
add
je
mov
out
pusha
out
jbe
mov
fwait
lea
(bad)
mov
sahf
and
mov
push
mov
cmp
inc
jl
mov
xchg
jae
push
and
sbb
jg
fld
cmp
sub
fs
jecxz
mov
jae
imul
call
jecxz
shl
imul
popa
or
loop
jg
cmp
mov
adc
test
pushw
ins
bound
shl
or
push
enter
xchg
sub
or
mov
sbb
cld
scas
dec
cmp
cmc
stc
fisttp
pop
sub
pop
call
pop
jp
mov
sbb
inc
in
jecxz
je
aad
shl
int
cmc
test
repz
sub
lock
xchg
es
xchg
call
and
stos
push
push
mov
fs
data16
mov
inc
out
loope
mov
sub
dec
or
cmps
inc
aam
cmc
cmps
xor
iret
mov
cmp
jl
lods
mov
fiadd
cmps
int
or
sub
outs
out
adc
cmps
sbb
cmp
test
xlat
ret
test
repnz
movs
lock
jp
call
mov
mov
or
dec
cs
in
jno
mov
ret
cmp
lods
out
ret
test
jb
ss
adc
xchg
or
pop
mov
repnz
cli
imul
fsub
dec
into
xlat
sahf
daa
sbb
push
xchg
call
aaa
sub
ret
sbb
loope
dec
rcr
inc
push
jg
ffree
push
xor
mov
mov
fwait
jle
jg
pop
xchg
pop
jmp
fild
jmp
mov
push
bound
dec
or
jp
cld
scas
dec
or
cmp
mov
push
mov
mov
xchg
ficom
dec
ins
arpl
in
xchg
jl
std
fs
adc
jmp
das
and
inc
or
mov
push
andps
inc
stos
repz
add
inc
mov
cli
call
mov
push
jno
sbb
add
inc
jmp
cmp
xor
pop
push
dec
mov
xor
sbb
cwde
outs
sahf
std
pop
mov
dec
push
xchg
ror
loope
es
mov
(bad)
fimul
aam
repnz
add
sahf
pop
aaa
adc
cmp
mov
sbb
cmp
add
xchg
inc
lock
lea
test
dec
stos
mov
mov
push
adc
enter
call
inc
mov
imul
cld
dec
mov
fild
bound
add
out
sub
(bad)
jmp
jns
sub
ror
or
call
fldenv
cmp
lds
pop
retf
sbb
stos
xchg
fisttp
pop
push
pop
cmps
iret
leave
fsubr
push
or
ja
mov
jb
stc
mov
mov
xchg
addr16
js
sub
out
repnz
test
sub
call
les
test
fstp
pop
sbb
push
xchg
cmp
imul
pop
aam
arpl
or
mov
jecxz
jnp
cmp
shr
mov
xor
jns
pop
push
xchg
cmps
(bad)
icebp
jbe
mov
fwait
adc
xor
lods
cmps
jg
sub
cdq
(bad)
mov
popa
packssdw
loope
test
adc
mov
pop
sub
jmp
cmp
adc
test
test
aad
mov
ret
pop
clc
div
adc
enter
and
adc
stc
ins
pusha
mov
mov
cdq
mov
test
adc
or
jle
fisttp
dec
xchg
cmp
cmp
xchg
mov
enter
mov
ins
sbb
pop
int
push
movs
cld
shl
mov
adc
mov
add
sbb
push
xchg
sub
das
pop
pop
mov
es
ins
jle
sbb
mov
mov
lea
mov
inc
jbe
pop
jns
jb
popa
out
int
sbb
push
sub
push
add
add
inc
out
push
cmp
xor
call
xchg
addr16
mov
mov
mov
jg
add
pop
push
push
fsub
fwait
push
inc
ret
jne
mov
test
add
hlt
ret
ja
imul
push
add
jle
dec
push
ret
mov
inc
rcr
jg
(bad)
pop
adc
out
xchg
sub
add
test
(bad)
sar
shl
mov
inc
inc
pushf
jmp
cwde
or
push
dec
ja
mov
push
jge
xchg
or
arpl
pop
retf
sub
int3
jnp
or
lods
rsm
test
shl
xor
xor
lds
xchg
aam
and
and
div
dec
mov
jbe
xchg
fsubr
sbb
add
sub
xlat
icebp
call
jnp
pop
or
cmp
rcl
or
pop
ins
data16
imul
xor
imul
cmp
and
hlt
push
fstp
and
out
ret
pop
jle
and
mov
dec
fwait
jl
imul
xchg
dec
rcr
inc
cmps
pop
cmp
inc
ficomp
sub
sbb
fsubrp
movs
pop
inc
mov
adc
rol
rcl
call
rcl
xchg
xchg
gs
cwde
sbb
adc
push
imul
repnz
arpl
adc
xlat
inc
sub
stos
mov
jge
ss
sub
in
cs
push
xor
mov
inc
lock
imul
imul
shl
mov
div
stos
int3
jp
push
retf
push
fcmovne
ret
in
(bad)
retf
je
push
mov
mov
js
or
scas
inc
xor
fiadd
inc
fcom
pop
mov
icebp
loopne
outs
jbe
data16
(bad)
jp
retf
inc
jmp
adc
(bad)
cmc
jae
out
repz
jae
pop
pop
xchg
pop
xor
outs
std
call
aad
fistp
popf
mov
lahf
shl
call
ds
mov
bound
jle
mov
pushw
jle
in
iret
cli
inc
cmps
xchg
mov
xchg
cmp
in
iret
mov
xchg
or
mov
ss
sub
(bad)
rcr
(bad)
jbe
lods
sbb
pop
xor
fsubr
push
add
out
cdq
(bad)
imul
cmp
xor
movs
stos
ja
pop
lods
adc
outs
jns
dec
paddb
jae
sbb
jp
test
ret
add
xor
adc
arpl
fcomp
xchg
pusha
mov
gs
or
je
push
xchg
dec
and
jmp
std
rcr
jbe
dec
loope
aas
lods
test
adc
aaa
imul
sub
adc
pop
or
and
es
mov
add
mov
(bad)
jg
leave
inc
push
and
and
mov
in
cmp
xor
xchg
mov
out
xchg
in
add
xchg
shr
int3
(bad)
ret
jg
pushf
lods
stos
adc
push
or
xor
sbb
inc
push
test
stos
movs
(bad)
cli
rcr
fwait
in
mov
add
bound
pushf
fistp
cmp
je
test
cdq
aam
push
fnstenv
loopne
lahf
inc
pop
mov
je
call
sub
inc
mov
cwde
cmp
sub
mov
addr16
mov
fs
jge
iret
add
les
sub
or
sub
loopne
push
sub
or
(bad)
mov
and
add
dec
pop
mov
or
loopne
not
outs
xchg
inc
gs
xchg
dec
mov
or
and
rcl
jmp
sub
jmp
ror
mov
iret
pushf
mov
lds
push
mov
scas
fs
scas
add
pop
int
mov
push
sbb
aas
pushf
mov
loopne
adc
daa
inc
inc
xchg
daa
js
sub
imul
add
cmps
push
mov
movs
out
xor
scas
xor
rol
and
or
and
stos
xchg
add
dec
cmps
pop
addr16
cs
add
(bad)
and
out
adc
or
mov
mov
jp
cmps
aam
movs
into
outs
out
sbb
xor
out
bound
loop
xor
test
clc
sahf
loope
daa
jmp
lods
xchg
xor
aaa
cmp
dec
mov
mov
and
cmps
lods
jmp
loop
std
je
sbb
mov
inc
sbb
cmc
fs
xor
out
cwde
mov
mov
fs
imul
jb
sti
sbb
int
mov
xchg
or
jg
cmp
cmp
imul
push
cs
in
stc
sbb
lea
push
(bad)
(bad)
call
add
inc
mov
lea
test
in
mov
mov
xchg
je
je
leave
sahf
mov
test
div
clc
inc
add
movs
jle
fistp
mov
rol
xor
ja
sub
jno
cmp
out
cmp
push
cmps
gs
test
clc
int3
or
pop
scas
sub
push
mov
add
scas
call
mov
scas
mov
mul
movs
pop
daa
push
jmp
mov
sbb
dec
jno
out
add
scas
mov
and
call
or
jle
ss
mov
mov
popa
jmp
cmp
xchg
add
retf
add
faddp
fwait
push
stos
push
fistp
and
imul
add
mov
gs
sub
push
push
inc
push
adc
or
(bad)
pop
push
call
sti
cmp
ss
push
bound
xchg
mov
dec
xor
adc
or
stos
jle
sbb
dec
stc
mov
push
call
mov
pop
add
addr16
mov
cwde
jae
xor
push
sbb
fcomp
dec
cmps
test
std
mov
add
mov
xor
pop
or
pop
lods
xor
xchg
mov
call
inc
dec
inc
mov
xor
shr
stc
dec
sahf
and
call
jbe
fwait
sub
push
test
or
pop
ret
pushf
jmp
outs
ins
or
mov
int
inc
neg
repnz
pop
xchg
or
mov
mov
pop
mov
ja
and
dec
enter
daa
pop
sbb
or
mov
jge
pop
call
jecxz
cmc
xchg
repnz
out
pop
sub
jge
adc
mov
int
and
gs
frstor
dec
cmp
test
dec
fidiv
push
xchg
test
in
sahf
shufps
and
adc
xchg
cmc
fadd
push
and
aad
sbb
add
pop
mov
bound
cmps
push
jecxz
jg
in
adc
mov
inc
mov
jmp
rcr
test
push
jle
xor
cmp
(bad)
push
jecxz
mov
(bad)
fild
scas
fdivr
sub
das
shr
add
inc
movs
sbb
xor
push
add
jge
lds
sti
sub
test
mov
loopne
mov
inc
add
mov
stos
cmp
ja
mov
pop
fisub
jb
sub
outs
lds
mov
inc
mov
add
test
sub
pushf
popf
(bad)
loope
fucom
adc
test
inc
test
jae
ds
cmp
cmp
pop
test
shl
je
in
sbb
push
pop
loopne
in
mov
sbb
mov
and
jns
idiv
mov
jg
jbe
sbb
sub
ins
js
push
icebp
fs
fidiv
pop
pop
cs
jl
mov
pop
inc
retf
xor
repz
fsub
ss
sub
dec
int3
pop
mov
(bad)
or
xor
retf
mov
mov
popa
dec
push
(bad)
out
sar
mov
cmp
mov
jge
call
add
cmps
enter
fwait
pop
or
(bad)
mov
dec
cmp
mov
mov
les
cs
mov
pop
rcl
adc
ds
nop
sti
out
add
or
pop
push
dec
in
cmp
push
inc
add
push
sub
jae
cmps
push
mov
fdiv
or
xchg
adc
icebp
sti
test
ja
jo
cs
jp
mov
in
retf
leave
pop
out
xlat
sub
pop
pop
out
add
shl
lock
inc
and
je
inc
int3
add
add
adc
sub
shl
xchg
dec
cmp
cdq
int3
ficomp
pop
mov
retf
xor
clc
into
adc
xor
out
jmp
enter
fldenv
xlat
lea
xor
pop
ficom
je
ret
nop
and
jmp
test
sbb
cwde
aad
pushf
movs
movs
in
cmp
test
in
cmp
ja
push
aaa
jmp
sub
dec
inc
xchg
lods
lahf
retf
and
fucomp
call
mov
in
test
xchg
in
les
pop
outs
xor
(bad)
repz
pop
and
sbb
std
pusha
mov
out
fcomp
clc
cmps
sar
push
xchg
(bad)
xchg
push
push
pop
lods
cld
sbb
sub
adc
cdq
in
cmp
dec
jge
popf
or
cmp
mov
aad
fdivrp
inc
jo
add
adc
xchg
les
dec
add
lea
shl
jb
(bad)
mov
pop
lods
pop
mov
lods
scas
cld
xlat
stc
add
add
fadd
sub
push
stc
ret
ds
sbb
cmp
sahf
xor
sub
jl
fs
mov
loopne
sub
sub
movs
and
add
push
js
xor
or
cld
sub
jge
mov
mov
and
adc
push
out
sahf
jae
xchg
push
rol
scas
sahf
loopne
lock
jno
call
push
(bad)
mov
sbb
fcom
(bad)
retf
jnp
ds
loop
nop
ret
jo
adc
and
stos
out
jg
and
shr
xchg
push
and
sub
push
call
lahf
paddq
ins
mov
pop
pop
mov
call
xchg
js
xchg
mov
and
ret
neg
in
xor
addr16
push
inc
popf
adc
and
mov
mov
bound
pop
adc
sbb
dec
pushf
push
push
rcl
pop
xlat
dec
rcl
sub
mov
ins
lea
mov
mov
fs
std
out
mov
fmul
retf
repz
adc
mov
or
fldenv
inc
leave
add
xchg
mov
retf
jns
test
fmul
and
out
mov
sbb
loope
enter
int
mov
iret
ins
sbb
movs
push
xchg
(bad)
rcr
std
sbb
mov
xchg
xor
and
mov
imul
dec
mov
push
jp
mov
out
lods
retf
ficom
mov
push
sbb
in
(bad)
mul
out
dec
loopne
sahf
fstp
shl
mov
and
xchg
jg
xor
add
test
inc
or
xor
loop
das
icebp
xchg
hlt
js
lock
std
and
mov
xchg
ja
lahf
xor
sbb
jmp
inc
pop
cmc
call
cmp
push
jecxz
dec
or
mov
and
nop
repnz
popf
sar
scas
jge
sbb
xchg
fcom
int
aaa
movs
fcomp
aam
lods
sahf
mov
cmp
fst
and
pop
icebp
mov
and
jmp
out
(bad)
lds
mov
lods
sub
rcl
inc
sub
mov
xchg
xor
rcl
test
jnp
mov
fnstenv
or
hlt
ss
(bad)
mov
xchg
mov
pushf
retf
jmp
in
cmp
cmps
sbb
lahf
sahf
(bad)
mov
out
sbb
int
xchg
or
sub
push
pop
(bad)
inc
(bad)
shl
xchg
add
aas
(bad)
mov
mov
xchg
mov
loopne
xchg
cmps
lea
movups
cmp
test
jp
jns
push
jno
dec
inc
stos
sub
(bad)
and
sbb
ret
jo
sub
ja
fcom
cmp
pushf
test
js
mov
add
mov
in
popa
scas
mov
retf
pushf
dec
push
lahf
ret
or
jl
add
bound
add
fisttp
pop
out
add
shl
sahf
lds
cwde
and
sbb
lds
test
(bad)
sbb
jno
les
sub
leave
pop
ret
jb
cwde
test
mov
sub
push
outs
arpl
(bad)
call
mov
loopne
fidiv
cld
cmps
inc
push
cld
scas
dec
daa
fs
inc
sub
cmp
fidivr
lahf
mov
push
js
cmp
cmp
gs
imul
lahf
add
test
push
nop
adc
es
or
aaa
loopne
or
cmp
rol
in
arpl
or
push
and
xchg
es
cmc
(bad)
leave
ret
dec
push
scas
add
or
mov
sub
xor
mov
xor
fmul
in
and
movs
jno
push
inc
fs
mov
sub
jecxz
test
imul
pop
adc
sahf
add
push
outs
mov
mov
mov
ja
movs
jno
ins
sbb
cmp
mov
(bad)
int3
out
cli
ins
add
clts
jmp
iret
test
call
pop
ror
mov
test
adc
repz
retf
xor
iret
imul
mov
fstp
not
std
sub
jge
imul
jbe
call
jp
idiv
cmp
hlt
jl
mov
movs
cmps
dec
adc
fdivr
jmp
mov
hlt
inc
jl
pop
sub
or
adc
ins
xchg
ins
daa
int
in
jbe
mov
lds
mov
jecxz
push
mov
dec
sub
ja
pusha
movsx
adc
ret
ret
adc
out
mov
push
mov
fucomi
pop
lahf
scas
jecxz
xchg
shrd
nop
and
scas
stos
mov
push
push
cmp
mov
les
mov
bound
(bad)
daa
pop
call
fsub
pop
(bad)
add
mov
xor
pop
(bad)
dec
pop
dec
push
leave
movs
push
fwait
dec
cmp
xor
cmps
mov
mov
(bad)
and
retf
xchg
cmp
sub
repz
mov
inc
and
(bad)
into
leave
xor
inc
inc
cwde
ja
sbb
jge
push
rcl
sar
(bad)
in
pop
imul
inc
pop
and
in
stc
inc
add
dec
es
dec
call
jle
(bad)
repnz
lods
cmp
repnz
dec
stos
sbb
hlt
sub
push
cld
inc
scas
(bad)
mov
sar
call
aam
fwait
or
pop
mov
bound
loope
nop
es
std
xchg
inc
vpsrlq
sbb
into
ins
xchg
pop
imul
(bad)
js
pop
lea
jae
sbb
fucom
inc
nop
dec
push
out
dec
mov
inc
aaa
or
add
imul
xor
outs
mov
int3
push
adc
out
sub
loope
xor
xchg
or
xchg
or
int3
sub
ror
xor
jge
cmps
pop
sar
retf
mov
push
ins
pop
sbb
mov
pop
ret
sub
enter
pop
inc
outs
ret
movs
test
outs
cmp
mov
popf
xor
out
adc
mov
dec
jge
fbstp
xchg
ds
xchg
icebp
es
mov
cwde
adc
dec
sub
cli
nop
inc
popf
sar
retf
aad
rcr
and
or
sbb
mov
ss
jp
dec
mov
fs
fs
sub
loopne
pop
popf
cmp
and
push
in
push
sub
xchg
mov
push
xchg
fst
jbe
bound
sbb
inc
jmp
in
test
ins
sub
pcmpeqw
inc
lods
pusha
push
add
inc
fwait
cmp
jp
mov
popa
loop
adc
mov
test
(bad)
cmc
bswap
sti
fs
test
dec
enter
in
push
fwait
or
out
stos
or
aas
ja
pop
pop
cmp
nop
iret
dec
sub
pop
push
fisub
fiadd
mov
(bad)
cmp
cmp
sub
loope
xor
sub
outs
aad
or
push
mov
ret
test
lods
stos
pop
jp
and
aam
mov
in
jle
cmp
scas
pop
add
push
jmp
sahf
xor
jg
xor
jg
add
jbe
mov
mov
mov
xor
pop
out
sbb
scas
test
lock
dec
fs
popf
sbb
lods
jmp
mov
push
pop
push
inc
ret
cld
retf
sar
les
or
and
gs
jns
xor
push
pusha
xchg
xchg
push
sub
sub
pop
inc
push
jl
gs
xor
jge
adc
jmp
bound
inc
fadd
pushf
test
nop
push
out
daa
mov
test
stc
js
pop
fldenv
jo
into
fisub
movs
mov
sub
(bad)
xchg
pop
pop
inc
mov
inc
jno
cmp
in
cmp
je
aad
std
mov
fldenv
aam
mov
in
test
sar
lea
lds
sub
loopne
loopne
int
add
ficom
cmp
xchg
adc
push
in
sbb
shr
retf
fnsave
pop
jae
neg
pop
fidiv
adc
dec
fistp
loopne
mov
lea
cld
hlt
pop
test
adc
pop
aad
pop
jl
pop
jae
cmp
adc
xchg
pushf
push
ja
jle
cmc
and
pop
int
cmp
mov
bnd
or
bound
fnclex
mov
fild
fcom
adc
add
and
aam
shl
xchg
or
movs
jecxz
(bad)
fsubr
js
sbb
mov
or
mov
push
jo
test
push
or
aaa
push
dec
hlt
cld
aad
scas
dec
fistp
jmp
inc
cwde
(bad)
sbb
cmp
loope
xor
stc
sbb
in
sbb
pop
mov
das
sbb
add
mul
movs
retf
pop
adc
inc
rcr
xchg
ins
cmc
jo
fistp
jns
push
sar
shl
in
mov
xor
loope
shl
xor
lds
push
and
out
loop
xor
add
call
jae
aaa
outs
adc
pop
mul
mov
gs
pop
inc
and
mov
out
fs
jge
ror
xchg
adc
dec
sub
xor
xor
pop
xchg
jbe
and
and
mov
jbe
adc
adc
add
outs
(bad)
fnstcw
mov
repnz
or
cmp
sbb
stos
and
push
pop
sti
ja
sti
pop
mov
push
(bad)
fmul
sub
fisub
lods
pop
ja
fiadd
add
jmp
adc
adc
(bad)
cmp
fxch
adc
or
push
iret
test
pop
pop
aaa
xor
add
rsm
ret
push
dec
dec
aad
(bad)
clc
out
inc
gs
mov
xor
jnp
rcr
nop/reserved
(bad)
stc
jle
fs
or
lds
cmps
sbb
out
pop
xchg
enter
sti
cmps
add
dec
jg
inc
mov
xchg
iret
push
xor
pusha
lock
pop
inc
sbb
jne
xor
and
ret
jb
adc
out
mul
arpl
out
out
pop
imul
jmp
fdiv
sbb
test
(bad)
mov
in
test
pop
and
jb
sbb
ja
and
add
adc
outs
outs
cmp
js
in
cmc
jl
shl
jb
adc
adc
add
and
out
cmp
es
mov
icebp
nop
mov
stos
or
xchg
mov
sub
adc
sub
daa
xchg
bound
pushf
bound
mov
ins
dec
jnp
stos
inc
jmp
daa
xchg
aam
mov
add
nop
dec
xor
cli
cmp
scas
or
add
push
icebp
out
mov
and
test
sahf
dec
mov
cli
xchg
push
in
dec
enter
or
inc
cld
div
or
adc
mov
aas
add
jne
fadd
ins
retf
push
xor
stos
retf
push
lds
cmp
ret
add
ins
js
rcr
stos
xchg
sbb
imul
jmp
push
or
das
mov
mov
lahf
mov
jne
leave
jmp
add
shl
dec
add
mov
pop
dec
push
mov
dec
outs
setb
jecxz
cwde
lods
imul
cmps
mov
dec
xchg
and
cdq
or
jae
pop
inc
push
fdivr
dec
add
lods
repnz
test
cmps
(bad)
imul
pusha
nop
test
or
push
cmp
xlat
ror
pushf
and
xchg
in
jo
into
inc
cdq
cmc
(bad)
cmps
push
sahf
mov
jmp
cmp
shl
and
mov
pop
jl
add
pop
cmp
stos
int
pop
mul
jns
mov
test
into
jmp
ss
and
(bad)
jmp
mov
adc
sbb
jne
ins
sbb
sahf
mov
push
or
mov
repz
lahf
imul
pop
in
gs
sub
fdivr
push
jg
or
das
push
sbb
clc
jmp
push
or
sub
mov
bound
mov
xchg
aaa
add
jne
push
rcr
pop
imul
sub
xchg
(bad)
sbb
and
lds
aam
mov
js
pop
out
data16
fs
mov
cli
fcom
mov
(bad)
in
fsubr
mov
call
adc
mov
inc
in
xchg
imul
mov
ja
xchg
add
cs
xchg
mov
(bad)
(bad)
xor
movs
add
mov
inc
nop
push
rcr
ret
frstor
push
push
in
test
(bad)
xor
sub
ds
ins
add
(bad)
repz
sub
mov
jle
xchg
call
pop
aaa
cmp
or
pop
push
mov
xchg
fisubr
and
pop
into
or
in
fist
lahf
test
call
dec
out
adc
neg
ror
jg
pop
and
hlt
(bad)
xlat
sbb
lock
movs
rol
data16
or
dec
leave
mov
sbb
jle
jmp
movs
test
or
or
sbb
fs
sbb
sbb
inc
mov
scas
in
lods
sub
mov
mov
sar
mov
pop
iret
into
sub
pop
fld
jp
test
out
fdivr
jbe
push
std
adc
push
mov
iret
loopne
in
inc
mov
add
mov
jae
add
pop
add
lock
xchg
push
jo
pop
scas
loop
jo
in
mov
sub
ret
mov
add
pop
add
or
pop
pop
icebp
push
mov
in
jecxz
stc
sub
test
(bad)
xor
push
loope
add
xchg
(bad)
fwait
or
jle
or
dec
pop
sbb
cs
dec
jne
sub
xor
adc
ret
icebp
(bad)
mov
(bad)
fiadd
jmp
and
or
adc
pop
mov
imul
pop
shl
inc
xor
inc
pop
ins
(bad)
and
xor
mul
add
adc
mov
shl
mov
push
push
cli
fwait
call
iret
jl
sub
mov
mov
dec
popf
ins
mov
sub
popa
lea
ror
leave
arpl
stc
(bad)
mov
pop
fistp
not
cmp
ret
(bad)
in
(bad)
jns
jne
sbb
mov
jb
inc
repz
stc
div
rcl
xor
cmps
call
ja
and
ins
adc
cmp
xchg
rcl
cmp
adc
push
aaa
xchg
test
sbb
jecxz
test
mov
mov
test
cli
ins
cmc
mov
xchg
lahf
lods
xor
mov
pop
pop
mov
jle
pushf
in
jg
daa
lods
or
cmp
(bad)
xor
sub
icebp
dec
mov
arpl
test
iret
aaa
sbb
movs
adc
pop
nop
jns
or
cdq
inc
hlt
shr
or
ss
addr16
into
clc
sub
mov
(bad)
ret
push
jnp
call
xchg
in
dec
mov
out
push
jno
daa
or
xchg
and
or
push
shl
inc
jmp
fisubr
pop
out
pop
push
adc
ins
pop
jbe
je
mov
inc
mov
inc
mov
xchg
in
cmp
rcl
jae
(bad)
cdq
stos
or
std
dec
movs
arpl
or
pop
in
enter
int
dec
fsub
popf
sub
ins
fmul
inc
clc
inc
xlat
dec
or
sbb
push
ret
pop
and
dec
lods
jle
pushf
xchg
mov
js
inc
xor
push
pop
lock
jl
les
and
xchg
and
sbb
or
and
pop
pop
push
mov
stos
xchg
adc
scas
cmp
cmp
inc
or
sar
ds
push
sub
repnz
cdq
aam
loopne
test
sbb
sbb
sbb
xchg
aas
stos
push
jg
adc
loop
adc
test
adc
out
icebp
repnz
dec
scas
xchg
sub
jle
repz
aad
pop
cli
test
out
stos
imul
icebp
lods
jl
ss
dec
jp
xlat
(bad)
or
dec
and
repnz
or
jbe
add
sbb
mov
aaa
loop
mov
mov
dec
push
(bad)
test
cwde
xchg
sar
cmp
pop
mov
mov
or
cmc
popa
sbb
mov
adc
fs
aad
or
mov
pop
shl
push
push
pop
adc
add
jmp
enter
data16
ins
push
ror
mov
iret
adc
test
stc
or
adc
jo
xor
movs
push
pop
cld
cwde
sbb
jbe
out
mov
inc
jnp
mov
mov
fndisi(8087
js
popf
scas
sbb
sbb
ins
ds
jbe
ins
cmp
or
mov
mov
outs
es
mov
test
bound
fs
enter
dec
iret
gs
jb
call
xlat
cmp
push
jae
retf
mov
jle
push
jg
pusha
stos
ins
mov
sbb
mov
and
push
test
cmp
mov
stc
xchg
and
test
shl
dec
push
cld
fnsave
retf
and
arpl
icebp
jle
and
push
clc
xor
pusha
mul
mov
inc
pop
and
add
in
mov
sbb
mov
mov
cmp
ins
xor
xchg
jmp
iret
mov
call
ret
or
(bad)
dec
or
(bad)
mov
ret
loopne
cmp
jo
jp
mov
mov
fadd
or
inc
mov
mov
adc
ds
mul
push
xchg
sub
in
loope
out
psubsw
stos
sub
xor
(bad)
cmp
(bad)
aam
mov
or
hlt
ret
or
mov
or
push
ret
jmp
stc
ror
jno
(bad)
and
mov
dec
xchg
daa
loop
cwde
aam
ins
push
std
inc
pop
pop
scas
xchg
mov
xor
arpl
ret
mov
dec
popf
cmp
pop
mov
shl
js
fimul
push
dec
call
push
in
cld
inc
xchg
fadd
inc
mov
fdecstp
outs
xor
add
cmp
test
push
aaa
inc
rol
(bad)
mov
out
push
mov
or
xchg
(bad)
js
call
das
test
push
inc
xchg
mov
and
jg
push
mov
es
adc
mov
or
add
inc
cmp
les
aam
ret
pop
adc
add
int
mov
retf
test
enter
jge
cli
repz
xor
test
sti
push
pop
and
push
jo
addr16
adc
das
mov
jle
rcl
arpl
add
je
lock
cmps
mov
adc
ror
jae
inc
mov
aaa
test
mov
bound
out
lds
adc
popa
sahf
popa
fistp
mov
aad
or
pushf
cmc
enter
scas
xchg
icebp
inc
imul
out
push
mov
cwde
dec
retf
mov
inc
mov
imul
mov
aam
mov
mov
fbld
nop
aam
jl
mul
and
jp
call
pop
and
dec
out
adc
or
mov
arpl
ins
and
and
(bad)
adc
push
xchg
add
xchg
mov
jecxz
sub
arpl
jns
mov
xchg
cld
xchg
pop
sbb
mov
push
clc
inc
adc
iret
dec
imul
mov
aam
out
sbb
daa
daa
out
movs
xchg
nop
mov
(bad)
or
adc
xor
gs
cdq
mov
sar
fwait
je
inc
dec
jg
sbb
call
loopne
fwait
inc
mov
fist
retf
mov
ins
call
and
mov
js
rol
dec
int3
sti
mov
loopne
(bad)
xchg
es
xor
rcr
ins
out
out
lock
push
pop
in
jp
test
sti
mov
dec
and
clc
add
pushf
sub
mov
pop
pop
aam
aaa
mov
cmp
(bad)
push
xchg
sar
iret
mov
pop
xchg
and
les
cmp
jbe
cmp
neg
in
loopne
(bad)
js
lods
(bad)
daa
jo
imul
mov
pop
and
jge
int3
retf
mov
push
jmp
jg
cmp
mov
pop
pushf
sub
cmps
out
cmp
outs
fimul
addr16
and
jecxz
out
jecxz
mov
xor
add
pop
arpl
imul
repnz
stc
push
dec
mov
xor
mov
int
mov
mov
pop
mov
mov
(bad)
stos
inc
std
sub
movs
ret
jnp
push
adc
pop
push
mov
jnp
sbb
hlt
stos
push
pop
pop
inc
cmp
xchg
popa
in
loope
stos
inc
call
xchg
ss
retf
clc
pusha
cli
mov
sub
in
mov
add
cmps
or
je
test
adc
push
push
cmp
pop
push
aaa
push
icebp
arpl
lods
stc
ins
scas
loope
mov
stos
popf
sub
xchg
or
jl
mov
dec
out
lahf
push
push
adc
mov
adc
jge
mov
xchg
inc
cli
cmp
out
pop
shl
xchg
movs
mov
repz
jle
inc
add
ds
mov
jl
ins
xchg
hlt
mov
(bad)
mov
je
push
pop
(bad)
retf
sub
movs
push
sub
rcr
and
inc
int
loop
arpl
sub
push
retf
inc
loopne
lds
stc
xlat
xchg
cs
hlt
(bad)
mov
ins
jmp
adc
sub
sbb
ret
sahf
push
hlt
add
fdiv
mov
cmp
mov
mov
sub
sub
pop
(bad)
inc
cdq
xor
or
push
(bad)
jo
sahf
dec
pop
rol
or
lahf
inc
push
sub
dec
mov
je
(bad)
pop
cmp
sub
ds
or
aam
cmc
mov
add
call
jmp
dec
add
repz
push
inc
stos
(bad)
xlat
outs
rol
(bad)
fiadd
outs
jns
push
jns
xchg
xchg
xlat
sub
call
push
sub
repz
leave
adc
imul
dec
adc
jbe
inc
cmps
mov
or
add
push
push
inc
dec
stos
test
jns
out
(bad)
mov
rcr
rol
popa
xchg
and
daa
leave
addr16
jmp
imul
pop
pop
fstp
adc
rcl
aad
dec
arpl
fs
pop
hlt
aaa
pop
sbb
xlat
mov
lea
mov
sbb
jb
jmp
test
sbb
sbb
iret
inc
pop
(bad)
push
ss
mov
je
push
push
mov
jnp
sub
sbb
mov
sub
mov
sti
sbb
loope
dec
push
mov
inc
repnz
dec
and
xor
in
inc
js
es
movq
inc
xchg
pop
mov
push
or
and
cmp
push
push
lea
jmp
push
shl
hlt
dec
das
xchg
fcomp
test
mov
mov
or
pop
mov
inc
jbe
add
test
sub
add
or
inc
push
and
xchg
das
std
dec
stos
adc
sbb
cmp
push
mov
jns
xchg
addr16
cmp
jnp
sbb
xchg
pop
gs
and
and
mov
dec
fs
dec
shr
outs
inc
push
jbe
xchg
mov
fs
xchg
jne
test
mov
sbb
jg
lods
or
adc
mov
cmp
in
push
mov
outs
in
in
xchg
iret
mov
inc
jbe
outs
(bad)
push
xchg
cmp
pop
pop
cld
sub
ds
rsm
jecxz
pop
xor
les
push
push
jmp
in
sub
je
mov
stos
jno
sti
inc
outs
mov
push
lods
add
jne
xchg
add
fld
adc
hlt
idiv
sub
sti
cld
cld
sar
mov
xchg
add
adc
xor
fadd
and
icebp
stos
test
and
cdq
xor
jne
jecxz
mov
xchg
stos
in
or
dec
lods
leave
push
test
ins
jecxz
shr
mov
adc
mov
mov
popa
or
stos
cdq
push
jmp
(bad)
pop
out
mov
enter
lds
ret
jecxz
outs
pushf
xchg
mov
add
pop
sbb
mov
retf
rol
sbb
dec
les
test
ins
mov
rsm
repnz
in
test
ss
rcl
mov
mov
sbb
push
inc
sbb
mov
push
jl
mov
out
and
fwait
int
rcl
outs
inc
lea
xchg
or
mov
(bad)
mov
(bad)
push
adc
cmps
les
mov
lds
pop
xlat
in
xor
sub
aas
xchg
xor
mov
jge
popf
sbb
cmp
idiv
call
jmp
sbb
push
bound
inc
mov
mov
sbb
test
out
retf
jmp
(bad)
or
xchg
retf
push
cdq
jb
fsubr
outs
sub
pop
sbb
(bad)
ds
push
inc
jmp
js
jmp
scas
mov
jb
xchg
pop
inc
int3
arpl
jae
xlat
cli
bound
push
(bad)
in
jl
repz
or
cmp
sbb
and
push
or
or
inc
adc
fcomp
add
test
popf
pop
(bad)
popf
xchg
mov
mov
fisubr
and
add
mov
dec
xchg
cmp
fbld
ret
repnz
sub
mov
scas
imul
arpl
out
loop
pusha
jae
xchg
nop
icebp
fcom
in
test
mov
jno
add
out
dec
cs
test
xchg
inc
int3
xchg
pop
mov
mov
(bad)
xchg
aaa
stos
popf
addr16
push
inc
mov
and
loope
aaa
inc
mov
(bad)
iret
sbb
adc
scas
inc
xor
jns
movs
arpl
loopne
pop
push
inc
movsx
push
lods
push
pop
dec
mov
mov
fs
ins
sub
ss
adc
rcl
fwait
jo
stos
jg
add
pop
outs
jne
jg
pop
mov
pop
imul
push
pusha
dec
adc
mov
nop
or
jmp
adc
add
sub
inc
das
das
xchg
add
dec
retf
sbb
shl
cdq
inc
in
mov
in
sysret
popf
(bad)
push
pop
mov
dec
leave
pop
sbb
cmps
in
ror
aam
aaa
ror
stc
out
pop
adc
das
test
hlt
adc
(bad)
(bad)
loop
popa
sbb
bnd
fwait
pop
fxch
jle
pop
jbe
into
mov
popa
or
xor
push
in
cmp
stos
sbb
mov
sbb
cmp
jne
mov
mov
rcr
mov
inc
push
icebp
mov
popf
loopne
rcr
pop
pop
mov
in
or
adc
out
(bad)
dec
repz
shr
sahf
movs
jp
push
push
mov
adc
jg
stos
add
shr
and
sbb
pop
fld
in
outs
push
jns
cmp
loop
outs
call
adc
xor
mov
clts
mov
dec
sbb
or
leave
sbb
xor
rcl
and
or
push
repz
test
push
out
(bad)
fs
les
out
or
retf
lahf
hlt
mov
fmul
jno
jnp
lock
or
(bad)
xchg
jle
test
(bad)
jnp
ins
fistp
jmp
adc
mov
cmp
and
jmp
in
jae
aad
sahf
jl
int3
mov
test
dec
das
mov
stos
(bad)
add
cwde
shl
in
push
repnz
imul
mov
add
jmp
shr
add
mov
test
scas
sub
dec
int
bound
out
iret
sub
add
pop
cmp
mov
sbb
adc
adc
clc
loop
sbb
adc
cmp
push
inc
cmp
dec
or
mov
or
push
xchg
test
mov
cmps
call
movs
les
icebp
pusha
xchg
test
je
lods
mov
test
xchg
iret
cwde
inc
xchg
imul
mov
mov
fs
std
movs
inc
arpl
int3
xchg
pop
addr16
dec
pop
das
iret
enter
scas
pop
lds
push
in
cmp
clc
test
fs
inc
daa
adc
popa
jno
popa
or
lods
fistp
sub
add
dec
pop
adc
test
add
adc
call
mov
pop
dec
sbb
cmp
aas
sbb
es
jecxz
loop
or
sbb
sbb
pop
fs
in
mov
test
mov
loop
ret
pop
in
fbstp
jne
call
dec
out
pop
lds
retf
lods
sub
xchg
cwde
lock
data16
jmp
sbb
pushf
(bad)
mov
movs
push
add
mov
xchg
or
neg
mov
xor
dec
mov
in
push
lods
js
mov
jns
stc
popf
adc
or
dec
sub
mov
sub
adc
pop
ins
or
lds
stos
out
mov
mov
(bad)
call
push
pop
cmp
cs
mov
int
pop
jae
pop
add
cmps
test
xchg
and
cmp
pop
js
out
ret
stos
(bad)
mov
mov
dec
dec
cli
call
aam
cmp
lods
inc
stos
pop
imul
jne
or
adc
call
add
imul
inc
adc
xchg
jne
cs
int3
pop
jns
or
mov
cmc
and
into
mov
aam
inc
xor
addr16
sub
ins
test
adc
enter
dec
mov
das
mov
jle
int
inc
mov
(bad)
mov
jmp
std
retf
jmp
mov
lods
fs
fwait
push
or
pop
ret
mov
or
shl
dec
xchg
jecxz
jg
jg
inc
and
sbb
mov
(bad)
imul
aas
sti
jnp
jne
or
movs
sbb
arpl
loopne
in
test
mov
ins
(bad)
(bad)
sbb
xchg
pop
cmp
sbb
test
adc
sub
or
adc
aas
sahf
aas
loope
fcomip
ds
sub
xchg
sub
popf
lods
push
rcl
xor
jnp
mov
scas
inc
or
aad
je
inc
je
adc
mov
mov
jmp
mov
retf
movs
and
cmp
xchg
rcr
fld
jmp
lods
ss
ficomp
int3
mov
scas
mov
pop
cmp
in
lock
inc
cmp
retf
dec
push
dec
ds
js
icebp
popa
stos
sub
xor
cmp
lods
jbe
(bad)
ror
pop
stos
and
cdq
inc
fld
pop
push
add
xor
jl
imul
mov
xchg
push
ret
vaddss
pop
push
xor
cld
ins
int
in
neg
loope
inc
scas
pop
push
(bad)
repz
fild
icebp
mov
xor
mov
adc
ret
xchg
mov
xlat
mov
jmp
adc
dec
outs
adc
push
stos
xlat
pop
adc
out
inc
mov
test
ja
mov
rcl
lea
das
aas
fldcw
shl
imul
xchg
sub
pop
push
push
xchg
mov
pop
arpl
ins
int
adc
dec
scas
loope
sti
fisub
jnp
or
cmps
dec
ds
jp
mov
fsubr
neg
mov
push
sahf
mov
test
add
pop
mov
movs
loop
xor
cmp
rcl
pop
mov
(bad)
ss
mov
mov
add
(bad)
pop
(bad)
jle
xchg
cmps
dec
adc
and
sbb
and
call
push
mov
pop
clc
cs
inc
cmp
xchg
popa
stos
cmp
inc
and
adc
mov
mov
cmp
pop
and
cmps
jo
sbb
arpl
jge
adc
js
jmp
ret
push
and
or
loopne
mov
lahf
int
ror
mov
(bad)
shl
ja
sub
retf
jae
inc
ret
leave
mov
jg
lock
sbb
ret
push
ins
adc
jmp
jo
push
xchg
push
xor
sbb
(bad)
cmc
xor
mov
ret
ins
les
mov
popa
pushf
repz
pop
cdq
cmps
cld
mov
aam
shr
sbb
cwde
aad
mov
lods
out
add
pop
stos
mov
inc
arpl
push
xlat
dec
sbb
inc
mov
mul
test
nop
cli
add
fcomp
(bad)
inc
ins
jbe
fisttp
pusha
adc
sti
add
pop
rcr
jnp
inc
push
lds
jmp
pop
cmp
gs
and
mov
mov
mov
lds
adc
sbb
adc
hlt
iret
and
aam
cmp
lahf
xor
dec
jae
hlt
fsubr
je
sub
jbe
fistp
or
adc
mov
adc
cmp
idiv
inc
mov
inc
pop
jbe
clc
jg
out
stc
or
in
imul
mov
jle
jge
das
jo
mov
xor
enter
mov
jecxz
repz
xchg
dec
cld
xchg
inc
arpl
xchg
inc
xor
mov
push
into
add
pusha
stos
fist
jns
mov
lds
xchg
sub
jae
lds
mov
jg
and
into
outs
pop
or
sub
mov
inc
aam
mov
mov
lods
sar
(bad)
xor
add
fbld
lea
fistp
nop
pop
xor
retf
pushf
jecxz
pushf
adc
cmp
arpl
fld
mov
sbb
pop
das
cmp
adc
adc
fs
jp
jmp
dec
mov
ds
or
hlt
push
div
or
imul
loope
cmp
mov
(bad)
hlt
inc
jecxz
iret
fistp
cmp
hlt
push
not
jecxz
cmp
cmp
call
mov
imul
xchg
jns
and
jb
and
jl
and
aaa
scas
aad
test
int3
xchg
ja
or
jnp
imul
popa
or
je
out
popf
jmp
mov
adc
xchg
movs
pop
not
aad
out
inc
mov
xchg
dec
in
(bad)
mov
or
cmp
loope
pop
and
xor
ficom
mov
inc
mov
xchg
adc
fisttp
xchg
cmp
inc
mov
pop
cli
xchg
mov
sub
cmp
cmps
ret
mov
sbb
xchg
cdq
mov
int
or
in
int
dec
mov
fild
add
nop
aam
bound
aaa
adc
idiv
ja
gs
ins
(bad)
jg
(bad)
dec
stos
or
ret
or
jbe
lods
sub
cli
cli
jne
outs
inc
pop
shl
pop
mov
mov
popa
bound
rcl
fisub
xchg
mov
xor
adc
addr16
add
mov
loope
mov
retf
int3
xlat
or
and
cs
into
in
ret
jl
fs
mov
fisttp
sub
rcr
movs
cmp
jno
xor
cmp
jecxz
mov
push
movs
in
dec
jecxz
pop
cmp
xchg
xor
loop
xchg
(bad)
cmp
test
xchg
xor
aaa
mov
add
mov
cli
test
mov
add
add
into
jns
mov
je
sub
ja
mov
mov
xchg
xchg
repz
or
and
int
xchg
jmp
jnp
mov
inc
loopne
fisub
sub
sub
ins
jl
ins
icebp
in
test
not
jp
mov
fimul
bound
std
rol
push
xor
dec
push
call
push
xchg
into
mov
retf
push
(bad)
in
and
pop
cmp
lds
(bad)
jmp
aam
scas
mov
sub
neg
or
pop
mov
mov
mov
out
test
inc
int3
push
mov
jb
mov
sub
shr
cmp
je
int3
adc
and
fist
arpl
jbe
inc
retf
icebp
leave
movs
or
or
pop
inc
push
mov
inc
xor
xor
sub
movs
pushf
ret
mov
add
adc
xchg
xor
pop
js
push
stos
xchg
mov
inc
inc
cmp
ss
adc
or
pop
sbb
add
sbb
push
nop
xor
pop
in
dec
ins
push
sbb
mov
push
pop
aad
sub
xor
sub
lea
pop
xor
dec
jbe
ror
jg
ds
add
cmp
inc
(bad)
pop
jo
pop
int3
inc
in
sbb
push
xor
stos
iret
or
out
or
daa
repz
and
sub
movs
pop
push
xor
in
push
add
inc
test
test
adc
test
shr
scas
add
add
mov
ds
aaa
mov
in
sbb
xchg
call
pusha
push
shl
jg
pushf
sub
pop
call
dec
mov
sti
or
call
xchg
aad
pop
inc
(bad)
or
fbld
jmp
call
mov
scas
jo
mov
in
loopne
cdq
fs
adc
jmp
mov
cmps
inc
mov
call
mov
ja
out
loope
aas
es
dec
inc
lds
cwde
pushf
adc
inc
sbb
pop
movs
call
push
lds
sbb
popf
out
lock
cld
js
mov
in
repz
add
add
mov
hlt
std
int3
test
cmp
shr
cmp
sbb
xchg
dec
in
fwait
loope
ja
jo
jb
mov
push
outs
(bad)
and
fld
int
ror
pop
lods
lea
adc
ds
jo
cmp
sbb
sbb
jle
fnstsw
push
aam
push
inc
sbb
test
or
(bad)
fild
cmp
fnstcw
fadd
fisttp
out
pop
call
and
int
loope
xor
push
out
pop
ret
push
mov
jle
add
cmps
sub
cmp
imul
shl
cmp
ins
jmp
das
test
xchg
and
push
inc
and
inc
pop
cmp
fwait
outs
sub
lods
loop
push
ja
and
mov
sub
fs
fs
sbb
sbb
sti
out
dec
loope
pushf
jae
cmp
bound
jp
ror
inc
aam
sub
fwait
je
sub
add
(bad)
scas
pop
push
mov
pop
dec
test
sbb
pushf
sub
jg
mov
inc
ins
ja
mov
ss
mov
out
test
mov
fdivr
cmp
out
xor
push
in
add
inc
and
loope
push
std
je
inc
add
es
sbb
xchg
cld
pop
retf
jge
adc
lds
add
mov
add
lods
stos
pop
dec
pop
ins
xchg
pusha
jg
add
pop
xchg
cmp
cmp
cwde
retf
hlt
dec
mov
loopne
pusha
jns
add
in
repnz
adc
scas
xchg
or
(bad)
and
mov
in
js
shr
fwait
cmp
pusha
jns
xlat
pop
cld
pushf
jne
jge
call
imul
jg
mov
jmp
xor
xchg
cs
cmp
jmp
xlat
xor
hlt
retf
and
jle
mov
mov
aam
xchg
dec
pop
pop
stc
aas
rcl
and
push
xchg
das
sub
sub
cmp
inc
test
(bad)
mov
and
das
sbb
and
cmp
inc
dec
dec
or
jmp
mov
sbb
call
xchg
cs
adc
aaa
jo
enter
aam
xlat
push
mov
sub
cmp
les
push
daa
movs
adc
or
retf
inc
inc
or
push
xlat
sbb
movs
popa
or
and
dec
push
shl
cmp
dec
inc
sub
ret
pop
xor
leave
pop
loop
cmp
jo
fs
xor
test
sub
inc
push
jns
jle
retf
cmps
adc
sub
sub
jg
out
nop
stos
imul
icebp
xchg
mov
push
out
out
popf
(bad)
mov
ficom
lods
sbb
aad
repz
scas
into
dec
frstor
aaa
shr
(bad)
clc
neg
call
sub
push
and
pop
pushf
pushf
pop
adc
xor
daa
imul
pop
sar
cmps
xchg
push
mov
sbb
push
xlat
stc
mov
popa
in
aad
(bad)
sahf
pop
ror
(bad)
mov
sbb
lds
sub
in
rcr
or
jmp
inc
mov
dec
push
lods
sub
sbb
xchg
repnz
xchg
jl
push
or
nop
mov
out
mov
pop
daa
and
(bad)
or
icebp
or
out
add
mov
mov
pop
add
adc
xchg
adc
test
out
lock
je
cs
into
mov
and
adc
loop
mov
sub
adc
cld
std
mov
stos
pop
cmp
(bad)
pop
cld
nop
gs
xchg
push
xchg
fild
ror
sti
cmp
and
not
add
stos
xchg
aas
shld
sahf
lods
inc
outs
cdq
sbb
ret
add
jp
cdq
repnz
rcl
or
adc
imul
inc
sub
mov
mov
hlt
xchg
sub
cmp
or
out
ins
sbb
cld
jmp
xacquire
stos
add
cli
js
in
adc
push
and
xchg
test
js
loopne
mov
retf
adc
inc
pop
mov
xchg
jp
jl
jne
icebp
pusha
ja
adc
jae
add
pop
or
sub
dec
and
and
fs
shl
adc
and
rcl
pop
cmc
call
adc
shl
xor
neg
add
push
mov
imul
fbstp
push
rol
retf
test
jmp
(bad)
mov
lods
mov
push
and
(bad)
xchg
stos
pusha
jge
dec
retf
xor
pusha
adc
or
jecxz
clc
vpunpckldq
fwait
jmp
sbb
(bad)
sub
loopne
jae
addr16
pop
pushf
mov
repnz
or
mov
and
ja
(bad)
in
or
or
pop
dec
scas
xor
mov
jmp
jmp
cmps
xchg
mov
cli
xchg
sti
ss
jno
sub
clc
sub
adc
ficom
loope
jle
es
mov
jne
mov
mov
add
and
mov
mov
mov
sub
ss
xchg
dec
jge
cmp
sbb
pop
test
cmp
lahf
out
xchg
xchg
push
aaa
pop
xchg
mov
in
add
xchg
or
(bad)
out
icebp
xor
test
retf
in
loopne
push
lahf
lock
add
sbb
push
je
call
lods
mov
dec
shl
xchg
pop
pop
imul
imul
ins
das
push
cdq
in
mov
outs
add
dec
movs
dec
outs
pop
mov
push
push
lahf
jge
lock
mov
rcl
jo
icebp
clc
mov
mov
mov
loop
test
mov
cmps
mov
out
cld
into
mov
inc
xchg
cmps
sti
int
rol
test
(bad)
mov
lahf
test
pop
test
mov
repz
adc
daa
leave
or
into
pop
inc
add
lods
lock
sub
xor
xchg
mov
outs
or
bound
(bad)
cmp
push
dec
es
inc
inc
push
or
(bad)
sbb
adc
shr
mov
std
push
jno
or
pop
inc
push
fwait
sbb
and
adc
mov
cli
mov
adc
sub
(bad)
in
clc
xor
add
fmulp
mov
daa
jl
ret
jo
aaa
mov
lock
movs
jmp
jge
mov
add
push
call
in
in
shr
xor
(bad)
out
arpl
aam
call
in
sub
jnp
sub
inc
(bad)
cmp
jae
mov
sbb
adc
sbb
inc
ins
(bad)
fs
test
dec
ds
jno
push
jle
imul
vpmovsqb
in
adc
inc
(bad)
xchg
in
clc
ss
fistp
ja
jo
xchg
push
dec
or
inc
ds
pop
dec
in
xor
pop
xchg
out
test
pop
mov
xchg
ficom
xchg
mov
pop
fldcw
sbb
mov
cmp
or
shl
inc
icebp
dec
lods
pop
pop
arpl
adc
fldcw
add
and
cmp
loop
fdiv
adc
pop
lea
jg
mov
pop
xlat
lahf
movs
sbb
mov
mov
movs
fild
sbb
rcr
mov
and
xchg
add
in
leave
aam
sbb
gs
or
inc
sbb
jle
inc
push
jp
hlt
les
js
fsubr
fisttp
cmp
pop
repnz
dec
jp
cmp
cmp
pop
sbb
lahf
sub
in
cmp
outs
jb
fsub
fldenv
adc
sub
jb
not
cmp
sar
xchg
jecxz
test
jmp
adc
(bad)
test
sbb
arpl
push
jno
push
mov
pop
jmp
mov
ret
repnz
xor
xchg
cmp
cs
dec
xchg
(bad)
arpl
fmul
dec
test
push
xchg
mov
ret
out
xchg
jmp
loopne
mov
push
movs
mov
cli
leave
leave
test
dec
push
adc
not
pop
inc
int3
imul
cmc
ret
pop
xchg
mov
jne
cmps
out
mov
fst
rcl
mov
fs
pusha
xchg
mov
sbb
push
mov
mov
mov
add
push
ret
inc
or
inc
push
mov
mov
mov
xchg
loop
retf
xchg
mov
pop
leave
adc
mov
and
dec
fs
pop
jl
ja
mov
imul
ds
xchg
xor
(bad)
scas
rcr
xchg
out
rol
stos
mov
call
jne
xor
xchg
fdivr
(bad)
lea
push
jne
gs
push
cmp
movs
mov
aas
outs
out
mov
cld
stos
push
jge
dec
mov
daa
sub
scas
and
sbb
mov
mov
lea
aam
in
cmp
xlat
not
pop
fld
inc
xor
shl
loopne
mov
mov
xor
pop
jno
mov
data16
and
adc
pop
pop
cmps
jne
add
inc
(bad)
arpl
js
daa
push
push
push
outs
retf
mov
mov
popf
push
fs
loopne
call
mov
sbb
mov
in
jne
cmps
inc
fcomp
mov
aam
pop
cmp
lods
gs
nop
shl
inc
cmp
sbb
stc
jle
jo
jecxz
pop
aaa
push
in
pop
or
mov
push
mov
sub
push
test
jmp
cmc
inc
and
or
test
data16
mov
popf
(bad)
out
call
pop
out
jo
ret
dec
xlat
das
adc
retf
push
outs
sahf
mov
ss
aas
pop
enter
xor
das
stc
fild
xchg
ret
sbb
ret
pop
enter
push
inc
sar
fsubr
mov
push
nop
adc
dec
loope
add
not
mul
lahf
adc
loopne
add
inc
popa
stos
sub
adc
fsub
clc
mov
jl
mov
mov
jl
cmp
push
lods
repz
push
push
daa
dec
add
or
push
movs
mov
daa
push
dec
xor
movs
loop
cmp
cmc
es
jae
sub
mov
sbb
lods
push
repnz
lods
xor
cli
adc
into
dec
dec
inc
ret
mov
aaa
mov
mov
lods
mov
outs
pop
xchg
dec
retf
das
imul
mov
xor
in
jmp
jg
arpl
mov
dec
test
cmp
(bad)
cwde
es
mov
pop
mov
xlat
jnp
in
in
es
mov
in
jge
push
stos
adc
mov
enter
fisubr
mov
sub
mov
add
cmc
mov
movs
das
or
xchg
mov
arpl
(bad)
call
lds
xor
cs
and
and
mov
pop
(bad)
je
stos
jge
add
jmp
dec
and
cmc
inc
popf
cmp
jne
jo
pop
mul
cmp
sbb
repnz
pop
(bad)
pop
lea
data16
xchg
and
or
mov
pop
ret
push
into
mov
dec
or
ret
fstp
push
mov
mov
adc
test
dec
mov
pop
xchg
jmp
outs
pop
push
popa
push
loope
inc
in
pop
or
xchg
and
mov
xor
daa
and
int
cmp
xchg
sbb
jne
push
out
mov
enter
inc
imul
cwde
cmp
sub
mov
jp
xor
rcl
repz
movs
jmp
mov
aaa
jl
and
inc
sahf
sub
and
cdq
adc
nop
out
arpl
inc
cmp
cmovns
mov
and
xor
adc
jnp
(bad)
pop
and
add
mov
xchg
mov
daa
cmp
push
fldenv
and
adc
push
imul
lock
int3
(bad)
fmul
ss
or
cmc
fadd
pop
xor
daa
jno
les
fcomip
pop
nop
sub
adc
adc
loopne
dec
pushf
test
ja
mov
cmp
jp
(bad)
repz
mov
add
pop
jg
push
mov
mov
psrlq
movs
mov
lock
jp
fcomip
lock
(bad)
inc
push
cwde
fwait
test
aam
pop
push
adc
sbb
xchg
push
aaa
xchg
mov
stc
fwait
enter
and
sar
jle
lahf
loop
push
xor
out
mov
fistp
mov
mov
clc
lock
mov
jecxz
pop
fmul
adc
in
xor
push
push
inc
mov
dec
arpl
in
xor
das
mov
mov
sbb
fmul
mov
pop
add
pop
sar
retf
fldcw
dec
enter
dec
aam
sbb
cmps
pop
xchg
sub
push
(bad)
xor
in
xor
aas
push
imul
xchg
mov
add
push
add
cmp
push
fild
and
cmc
mov
fwait
mov
xor
lods
shl
out
cwde
out
imul
sbb
cmp
out
sbb
call
cmp
in
pop
sub
iret
jae
sub
js
repnz
shl
push
arpl
ins
loopne
into
jg
or
imul
sbb
xchg
shl
sbb
inc
idiv
xchg
push
mov
lods
leave
cmp
adc
stos
add
pushf
mov
push
movs
stos
repz
inc
rcr
cmp
cmps
mov
jne
iret
jl
xor
mov
(bad)
loop
cwde
jmp
adc
xor
push
jns
sub
adc
in
shl
cmps
push
push
neg
out
add
push
jmp
movs
jmp
loope
pop
sub
adc
or
and
sti
fcmove
or
int
imul
jae
mov
cmps
loope
push
push
imul
not
enter
mov
mov
shl
jb
adc
ja
rcr
xor
fild
es
pop
les
mov
loope
inc
mov
stc
add
mov
mov
scas
arpl
(bad)
pop
mov
cmps
or
into
repz
jmp
sub
mov
or
jmp
and
scas
xlat
cdq
cmps
test
dec
sub
push
xor
mov
mov
(bad)
xchg
into
sbb
jo
mov
and
int3
inc
pop
dec
cmps
cmp
ror
mov
or
push
jge
cwde
mov
repz
push
adc
or
add
push
adc
push
xor
(bad)
pusha
adc
icebp
or
xor
or
or
das
jmp
daa
dec
or
jge
jl
imul
ret
mov
test
loope
xchg
xchg
addr16
mov
pushf
fwait
icebp
mov
sbb
and
lods
shl
jecxz
cld
aam
cmps
pop
and
push
lods
push
mov
stos
add
add
daa
into
push
inc
cmp
cdq
xor
jbe
cmp
std
xor
jp
mov
push
(bad)
loopne
jne
jne
inc
dec
jne
(bad)
pop
stos
enter
cwde
enter
pop
dec
push
or
lahf
mov
sub
jmp
fwait
inc
ja
push
inc
sub
movs
push
mov
lahf
adc
jns
stos
rcr
xor
shl
movs
or
cmp
cmc
lea
mov
ret
xor
ins
cmc
mov
retf
mov
jne
fild
stc
cmps
shl
push
push
xor
inc
jmp
scas
stc
stos
mov
mov
(bad)
sbb
adc
and
xchg
movs
pop
sbb
pushw
or
sub
lods
fnsave
xchg
rcl
add
retf
sahf
and
dec
daa
fisubr
test
dec
pop
push
sbb
xchg
cli
add
js
push
xlat
pop
iret
je
in
inc
mov
loop
mov
push
push
aaa
rcr
jge
mov
adc
int3
jg
in
jb
pop
pop
add
rol
cld
retf
dec
das
cvtdq2ps
jns
sub
jbe
daa
or
repz
jnp
lods
cwde
fwait
mov
ins
inc
iret
sar
adc
sub
adc
aam
ret
add
push
mov
mov
aam
adc
fistp
xor
xchg
js
das
hlt
inc
jns
in
call
mov
xor
(bad)
sbb
jle
add
data16
xchg
jae
jae
test
loopne
in
xor
data16
daa
and
mov
xchg
sub
jg
shl
sub
cmps
fsub
cmps
and
idiv
call
xchg
sub
cmp
mov
sub
lahf
fs
fmul
imul
jno
sbb
pop
retf
xchg
xchg
pushf
pop
mov
lods
out
jl
push
push
mov
aam
sar
ficom
xchg
(bad)
dec
test
outs
adc
stc
push
xor
mov
enter
cld
sti
test
pop
cmp
popa
push
jb
fucomp
pop
jbe
push
fsubr
sbb
jmp
jo
xor
pop
and
push
cs
jge
js
ja
jmp
dec
jge
shl
push
dec
jno
mov
fst
pop
pop
push
sbb
inc
sbb
mov
clc
pop
push
popa
lods
data16
loop
mov
xor
adc
push
movs
lahf
cmc
cs
(bad)
jmp
and
dec
lahf
adc
sub
xor
inc
pop
stos
add
add
test
sub
cdq
sbb
sbb
xchg
xchg
mov
xchg
push
xor
and
and
gs
jmp
sar
xchg
pop
sub
xchg
into
je
pop
out
xchg
outs
pop
xchg
scas
and
inc
sub
sar
adc
call
or
in
sub
fidiv
shl
ja
and
stos
mov
mov
sbb
shl
jmp
lods
ret
inc
(bad)
cmp
loope
call
arpl
(bad)
jge
jg
xchg
ret
xor
mov
stos
mov
inc
into
leave
inc
adc
js
inc
out
or
fsub
fmul
bound
pusha
cmp
mov
cs
push
dec
mov
sub
push
sbb
sahf
int3
mov
pop
(bad)
cli
mov
pop
xchg
pop
adc
push
mov
test
push
shr
cwde
adc
xchg
mov
mov
push
xor
mov
enter
mov
jecxz
and
inc
ja
pushf
push
xor
retf
inc
ja
add
add
sbb
dec
pop
add
shr
adc
mov
add
iret
sbb
fist
push
add
lds
neg
inc
out
add
lods
leave
and
sub
dec
cmps
xchg
mov
fwait
hlt
push
fldz
call
stos
mov
fadd
push
dec
pop
in
ror
mov
xchg
mov
xor
movs
bnd
sub
jb
or
push
dec
out
popf
pop
mov
nop
int
aaa
ss
jbe
mov
cmps
fcomp
popa
push
pop
dec
xor
cmc
inc
push
fs
cmc
icebp
or
lds
mov
and
(bad)
imul
cmp
call
jecxz
ins
cmp
jae
into
push
cli
jle
shl
leave
pop
pop
lods
pop
ja
in
mov
jo
std
out
jmp
sbb
mov
enter
out
mov
push
hlt
xlat
inc
jle
scas
jae
and
push
std
inc
int3
retf
fstp
cs
push
call
or
mul
(bad)
icebp
leave
nop
clc
mov
mov
inc
stos
repz
xchg
mov
cmps
arpl
lods
mov
jno
xor
sbb
push
cld
add
std
pushf
(bad)
outs
mov
mov
add
add
push
xchg
fild
push
or
pop
int3
repz
(bad)
int
ret
mov
pop
std
or
mov
movs
neg
push
ss
xor
mov
ja
cld
leave
inc
cdq
cmp
cmp
retf
loop
clc
mov
fiadd
int
push
push
(bad)
aad
bound
(bad)
iret
pop
jmp
pop
adc
popa
mov
aam
push
or
sti
add
pop
(bad)
aas
inc
jp
in
neg
out
call
xor
xchg
or
sbb
out
or
add
jmp
enter
lods
in
test
sbb
and
mov
nop
push
fucompp
test
stos
and
ret
stos
ror
push
pop
inc
fchs
not
loope
fild
push
and
or
mov
mov
enter
pop
cli
xchg
jp
pop
int3
aam
retf
push
clc
lahf
dec
dec
and
mov
mov
(bad)
jge
push
mov
test
inc
mov
mov
leave
shl
test
or
int3
push
xchg
xchg
and
retf
dec
add
xchg
xor
movs
scas
popf
mov
mov
int
cmps
sti
movs
fnstenv
push
and
and
dec
push
mov
jge
mov
mov
sbb
les
push
add
dec
sbb
jne
cmp
sbb
cwde
push
add
movs
or
pop
adc
xchg
inc
pushf
loopne
data16
mov
xor
call
sub
jmp
aas
or
test
mov
lods
cmc
cwde
mov
out
test
xchg
mov
xchg
xchg
dec
jbe
movs
inc
imul
jp
out
mov
mov
and
dec
jg
push
dec
pop
into
and
xchg
mov
jae
sar
lods
mov
sub
in
es
aad
sub
push
mov
sbb
inc
pop
xchg
inc
fnsave
fnstsw
dec
test
js
mov
mov
rcr
sub
mov
and
sub
cmc
ss
inc
retf
cmp
call
inc
sbb
int3
adc
ds
mov
sti
in
inc
ror
movs
xor
pushf
(bad)
push
bound
sbb
call
fst
adc
adc
xor
std
aad
out
popf
mov
icebp
fadd
sbb
and
test
cdq
mov
inc
int3
or
mul
sub
hlt
call
stos
jmp
xchg
push
jb
cmps
out
pop
in
xchg
int
stc
push
ret
loopne
inc
pop
xor
and
(bad)
int
imul
mov
jle
cmp
retf
lds
pop
xchg
pop
xchg
sub
in
in
jl
test
test
add
iret
retf
mov
out
inc
dec
mov
jg
pop
icebp
inc
bound
push
outs
inc
dec
xchg
and
jg
loopne
cmp
pop
xchg
je
cmp
ins
xlat
or
pop
jle
push
loope
push
outs
sahf
adc
sub
mov
dec
aaa
or
xchg
add
call
mov
popf
or
mov
xchg
leave
and
jo
xchg
ins
mov
jb
push
pop
mov
ret
jmp
cmp
repnz
out
rcl
(bad)
mov
pop
int
xchg
mov
leave
int
loopne
xor
iret
nop
add
retf
mov
jne
xor
repnz
cmps
inc
pop
mov
icebp
jl
retf
clc
pop
test
stc
stc
push
inc
mov
push
sbb
jnp
retf
outs
add
mov
stc
add
aam
sbb
inc
jmp
mov
into
cmp
pushf
push
aaa
(bad)
sbb
xchg
pusha
pop
sub
(bad)
or
pop
mov
js
cmp
addr16
inc
sbb
repnz
fcmovne
int3
mov
jg
jmp
sub
test
icebp
or
push
dec
mov
sbb
out
cdq
mov
pop
sub
fisub
sbb
mov
inc
xchg
movs
cmp
or
fimul
out
jbe
xchg
pop
ret
and
mov
pop
mov
mov
fldz
in
bnd
add
sahf
cs
lods
mov
mov
mov
imul
imul
push
and
cmc
inc
mov
int
test
inc
or
xchg
mov
rol
lahf
mov
movs
pop
mov
mov
xchg
lea
scas
retf
xchg
add
jg
ret
jo
adc
add
dec
in
pop
addr16
idiv
cmp
cmp
rcl
or
pushf
cmp
stos
jge
sti
adc
pushf
and
mov
inc
int3
xchg
mov
ss
inc
loope
movs
js
pop
adc
fsubr
jno
cmps
pusha
loopne
adc
and
add
xchg
cwde
inc
sbb
outs
sub
stos
adc
cmc
outs
sahf
or
sbb
add
mov
push
fadd
mov
mov
rcr
jne
(bad)
in
add
inc
dec
mov
fcomp
test
inc
dec
jmp
rcr
stc
sbb
xor
adc
lds
pop
(bad)
push
xor
shl
je
jnp
mov
sub
stc
push
jae
lds
into
icebp
add
data16
add
cld
add
test
bound
mov
aaa
pop
cmp
jecxz
repz
lods
je
sub
retf
mov
and
sub
xchg
mov
sbb
xchg
push
out
addr16
rol
in
xor
lods
jmp
fwait
inc
mov
push
test
and
mov
inc
jecxz
jmp
xor
ins
xchg
addr16
cmp
stos
sbb
cmp
mov
dec
mov
mov
add
ds
test
dec
dec
adc
imul
inc
loopne
jne
adc
cmp
loope
add
imul
sbb
add
mov
jns
int3
ret
mov
(bad)
push
js
outs
aad
pop
mov
pusha
sar
arpl
popa
icebp
pop
pop
call
adc
inc
push
stos
pushf
and
or
mov
jecxz
adc
lods
sbb
gs
push
xchg
pusha
into
mov
loop
(bad)
xchg
ret
btc
mov
int
pop
xor
loope
mov
pop
mov
cmp
xor
seta
jecxz
in
sub
fs
das
es
enter
sub
scas
xor
scas
mov
test
bound
mov
sub
dec
sbb
cli
adc
out
test
into
cmc
jne
fisubr
in
mov
xchg
and
xor
addr16
fdiv
cmp
loope
mov
mov
jbe
int3
in
les
gs
leave
fldenv
and
icebp
mov
bound
sbb
test
sub
jne
int3
or
ret
inc
mov
sbb
mov
rcr
xor
stos
xor
ds
dec
mov
ins
and
cmp
jmp
sbb
lods
mov
jg
inc
mov
mov
cmp
pushf
stc
inc
je
in
mov
scas
inc
shl
jns
adc
push
scas
fisttp
shl
push
sub
dec
rcl
(bad)
jnp
out
arpl
loope
dec
mov
jmp
inc
lahf
pop
test
jne
add
cli
mov
stos
ins
add
mov
sub
test
push
inc
push
pop
repnz
pop
shl
and
inc
test
fbld
stos
lea
out
pop
aaa
lods
ss
mov
jl
xchg
sub
js
test
aas
cmp
mov
jns
inc
std
shl
out
push
aas
call
xor
mov
cs
xchg
mov
fimul
push
or
outs
jmp
scas
or
in
and
cmp
enter
xchg
cmp
ror
mov
stos
sbb
xchg
mov
clc
(bad)
shl
stc
outs
pop
mov
mov
adc
mov
sar
dec
mov
push
xchg
test
popa
and
mov
dec
sub
(bad)
cli
je
jns
iret
fistp
or
gs
jle
sbb
inc
adc
or
cmp
mov
stos
into
shl
(bad)
outs
lods
cdq
dec
or
pop
push
and
(bad)
jnp
sub
(bad)
aad
lea
retf
mov
cwde
ds
shl
pop
fidivr
sub
cmp
shr
mov
push
nop
sub
cmp
(bad)
ficom
or
sbb
push
sub
jo
inc
call
pop
ins
in
mov
xor
arpl
mov
dec
push
pusha
mov
xchg
add
mov
push
in
adc
mov
inc
jo
xchg
and
daa
adc
xchg
pop
or
out
jge
jge
in
or
movs
jg
sbb
add
repnz
popf
cwde
call
(bad)
cmc
mov
push
inc
movs
sbb
test
mov
add
xchg
pop
daa
popa
jg
inc
cmc
pop
fidivr
pop
cmc
stos
pop
push
fcmove
(bad)
sbb
cmps
sub
(bad)
in
xchg
xor
(bad)
in
xlat
les
xor
es
pop
lods
(bad)
sbb
inc
mov
adc
repnz
cmp
scas
and
jge
push
and
mov
in
xor
pop
lods
out
push
push
in
leave
sti
ja
fwait
or
iret
es
fsubp
leave
mov
mov
mov
and
std
xchg
and
lea
(bad)
pop
pop
imul
outs
imul
fsubr
push
daa
and
fsubr
sbb
pop
fwait
sub
inc
cli
enter
sbb
mov
push
in
out
push
out
inc
enter
mov
sub
push
mov
out
sbb
addr16
js
and
clc
(bad)
std
add
int3
test
or
rcl
js
fdivr
call
clc
xor
popf
movs
pop
push
aas
(bad)
mov
mov
push
aad
push
fwait
and
dec
test
jbe
jmp
(bad)
push
jo
iret
dec
iret
sub
test
leave
jae
jle
mov
push
mov
(bad)
jb
push
clc
(bad)
fbld
in
shl
mov
movs
jl
push
nop
add
pop
inc
dec
iret
inc
pushf
inc
in
lock
ja
xor
arpl
int
pushf
loopne
in
cmp
push
scas
in
ds
fdivr
cmps
fild
mov
adc
mov
idiv
dec
push
std
and
rcl
es
jns
sahf
pop
or
out
jle
aaa
lods
sbb
into
ds
or
rol
call
stos
adc
sub
mov
sbb
dec
add
in
mov
mov
inc
repz
mov
push
sahf
push
lahf
sti
in
add
in
cs
and
dec
lahf
push
dec
and
xor
loopne
js
xchg
push
pop
mov
leave
jo
mov
out
scas
sub
mov
in
sbb
arpl
loope
into
addr16
unpcklps
(bad)
lahf
out
fimul
push
sub
pop
sbb
xchg
push
scas
mov
ss
pop
pop
xlat
or
mov
shr
push
lahf
sub
sti
adc
test
shr
push
sbb
xchg
retf
push
mov
xchg
mov
aaa
cmc
sbb
push
xchg
dec
xchg
or
imul
stc
push
popa
jge
pop
mov
and
jl
mov
xchg
rol
cmps
jle
pop
cmp
into
adc
cmps
gs
sbb
xor
popf
cwde
rcl
add
test
sub
and
jmp
out
xor
xchg
mov
stos
in
out
pop
ficom
xlat
call
sbb
or
call
xchg
enter
and
sbb
cmc
jle
mov
sbb
mov
mov
(bad)
in
lock
sar
inc
leave
push
fxtract
and
push
js
dec
mov
mov
sub
and
xchg
retf
xor
dec
pushf
lea
mov
ss
pop
jg
dec
jmp
push
out
cmp
ret
fwait
test
jle
jmp
or
sub
cs
ficomp
retf
pusha
outs
xor
jmp
out
pop
cld
gs
test
push
aad
push
or
pop
pusha
pop
cmc
frstor
and
test
cs
add
sbb
mov
call
mov
fwait
jmp
bound
sahf
and
(bad)
cmps
mov
test
call
out
pop
jmp
sbb
cld
dec
test
xor
imul
mov
loop
das
cld
stc
test
shl
(bad)
int
mov
ret
adc
ret
pop
ds
dec
sub
ret
js
mov
push
push
xchg
dec
xor
cmps
xchg
mov
sub
pop
pop
xor
mov
pop
out
loopne
sbb
mov
loop
jecxz
mov
enter
push
pop
daa
dec
hlt
jae
fistp
iret
and
add
mov
fist
in
cmps
enter
mov
je
ja
jecxz
ja
addr16
sub
push
sub
jmp
sbb
jg
adc
mov
xchg
mov
clc
pop
jp
fsubr
iret
mov
pop
cmp
add
adc
pop
sub
(bad)
imul
ds
loopne
dec
ins
pop
adc
add
jb
call
movs
sbb
jp
dec
(bad)
sub
mov
cmp
(bad)
mov
outs
mov
cmp
sbb
imul
xor
shl
push
push
std
xchg
ja
fld
(bad)
lock
xor
add
xor
or
push
ss
pop
lds
clc
mov
sbb
mov
xchg
out
fmul
lock
cmp
ret
fbld
imul
push
sbb
jle
test
ret
je
push
pop
bswap
adc
pop
jnp
dec
dec
xchg
loope
in
shl
and
adc
call
loop
xor
sahf
pop
xchg
add
xchg
aad
cmp
mov
sahf
imul
repnz
scas
cmp
mov
sub
ss
xor
or
dec
push
cld
mov
jae
jge
cmp
gs
or
sbb
push
mov
xchg
jbe
inc
fnstenv
mov
ins
test
les
push
popa
int
enter
outs
pop
aam
push
xor
xchg
mov
jge
dec
sub
mov
pusha
ins
jmp
mov
sub
pop
jb
lods
jmp
iret
jmp
lods
cmps
mov
adc
xor
push
enter
mov
cmp
or
in
jae
sbb
and
xchg
mov
inc
scas
je
mov
cmp
test
xor
pop
je
cdq
push
js
push
dec
inc
in
scas
lods
in
iret
push
pop
(bad)
jmp
xchg
push
jnp
mov
test
popf
pop
ret
cmp
pop
push
mov
xchg
imul
xchg
adc
push
pop
cmp
sub
popf
mov
push
jp
ja
inc
jp
mov
mov
fimul
mov
cwde
mov
push
stos
ds
mov
nop
add
mov
dec
cmp
xchg
xor
mov
sub
lods
sbb
or
(bad)
jne
mov
(bad)
pop
popa
dec
push
add
(bad)
in
or
sub
cmc
mov
xor
xchg
pop
xchg
mov
sbb
shr
pop
push
xchg
push
cmc
(bad)
adc
and
(bad)
das
pop
sub
cmc
and
in
jno
or
(bad)
xchg
cdq
jle
leave
jnp
daa
ss
in
or
sub
jl
out
cmp
adc
iret
dec
mov
sbb
cmps
fbstp
push
xchg
cmp
or
test
(bad)
scas
jo
lahf
enter
mov
jge
jp
test
xchg
cs
pop
hlt
xchg
xor
icebp
(bad)
xor
sub
inc
jl
rcl
xchg
and
jae
sahf
hlt
dec
ficomp
pusha
xchg
sti
xor
lods
(bad)
push
and
inc
stc
mov
sar
sub
and
retf
mov
pop
popa
jmp
dec
bts
pop
jmp
inc
(bad)
add
int3
lahf
xchg
cs
xchg
and
into
idiv
xchg
push
dec
mov
mov
cmc
cmp
add
cmp
dec
and
mov
enter
xchg
mov
add
xchg
sub
(bad)
ja
push
mov
cli
mov
sub
data16
repnz
out
ins
xchg
sub
fcmovb
ret
aaa
lods
adc
int
add
inc
cmps
div
das
gs
les
neg
rcl
(bad)
pop
ja
enter
fadd
inc
inc
mov
cmp
mov
not
adc
sub
push
cmp
add
mov
retf
aas
mov
dec
mov
out
test
fwait
or
mov
xchg
js
cmp
xchg
mov
adc
in
cmp
inc
ins
sbb
jno
sub
loop
or
lods
cmps
shr
ins
add
(bad)
nop
out
loop
aaa
sub
inc
push
cmps
ins
pcmpgtb
sub
push
adc
mov
xchg
sti
dec
jne
jmp
shl
mov
fdivr
pop
ja
out
cmc
into
fstp
mov
mul
cmc
iret
add
cmps
sub
mov
dec
add
and
inc
mov
push
fbstp
push
test
aam
mov
cmc
aam
pop
js
mov
jnp
inc
scas
cs
int3
sub
pop
lods
push
fstp
hlt
mov
jmp
jle
stos
sbb
pop
lods
icebp
inc
jl
fisubr
movs
arpl
pop
test
imul
sahf
in
lahf
jo
mov
push
mov
outs
and
outs
in
(bad)
fs
leave
js
lea
push
cs
pop
lods
pop
sub
xchg
ss
fwait
or
jl
pop
sbb
into
mov
sbb
cmp
mov
jns
jb
jmp
lods
iret
retf
xchg
(bad)
sub
stos
xchg
mov
addr16
jnp
push
into
outs
fsub
iret
neg
mov
shl
mov
loop
sbb
sbb
mov
sub
push
pop
mov
cmp
cmp
imul
js
aas
xchg
pop
inc
cmps
in
mov
ins
enter
xor
add
outs
lds
rcr
sub
add
fldenv
push
shl
xchg
fld
jno
mov
div
sar
adc
jp
xor
cmp
mov
in
cmp
fsub
ficom
pop
pop
fld
pop
dec
cmp
xchg
mov
imul
aaa
out
cmp
dec
xor
or
and
mov
pushw
push
hlt
sbb
ror
cmp
xchg
scas
fcomip
push
clc
scas
ds
cs
jp
cmp
lock
fdivr
and
mov
jl
das
out
sbb
outs
sti
(bad)
jl
inc
aam
adc
shl
adc
add
pop
mov
fnop
cli
push
xor
pushf
dec
mov
pushf
gs
or
inc
mov
adc
into
mov
sbb
mov
retf
std
adc
sbb
pop
stos
or
sub
into
pop
mov
dec
mov
sbb
adc
aad
xor
mov
(bad)
cwde
xchg
push
(bad)
xchg
je
push
inc
clc
pop
aam
aam
mov
push
into
lods
mov
dec
mov
push
add
cmp
pop
cmps
(bad)
cmp
jmp
mov
xor
dec
xchg
add
clc
iret
iret
inc
les
fstp
bound
dec
nop
dec
neg
nop
jl
ds
(bad)
cmc
xor
out
jle
outs
xchg
and
jns
ds
aad
jl
push
ds
mov
add
xchg
pop
adc
iret
pop
or
(bad)
aaa
pop
fs
mov
loopne
fistp
scas
cmp
repnz
mov
pushf
xor
mov
cdq
push
xchg
leave
jnp
xor
sbb
mov
xchg
push
xor
mov
out
outs
fidiv
sahf
xchg
ja
(bad)
cli
push
adc
shl
xchg
mov
aam
mov
pop
mov
(bad)
lea
addr16
loop
push
ss
sub
push
push
leave
and
cmp
std
inc
popa
dec
cmp
push
bound
jecxz
fcmovnbe
sub
jg
pop
mov
inc
xor
inc
jb
jns
gs
xchg
movs
dec
dec
and
pusha
sbb
adc
sub
and
(bad)
jl
pop
jns
test
push
test
or
push
in
dec
cmp
sub
xchg
dec
xlat
out
push
add
mov
es
test
movs
fisubr
sbb
ja
xchg
mov
add
in
pop
dec
adc
mov
repnz
aad
dec
xchg
mov
(bad)
sbb
cmp
test
cmp
push
pusha
mov
cmp
cmc
arpl
pop
or
mov
je
div
aam
popf
and
mov
in
pop
jl
xor
sub
xchg
fs
mov
jb
int
jle
add
sbb
pop
pushf
in
aaa
jmp
sub
shl
jae
dec
sbb
pop
mov
xor
retf
push
pop
or
push
les
mov
cmp
ret
enter
mov
fdivr
ret
xchg
mov
and
inc
push
and
lock
hlt
ins
out
mov
das
fisttp
pop
mov
jne
popa
mov
dec
or
pop
dec
dec
test
xor
cmps
dec
jns
and
cmp
adc
ret
aad
mov
mov
mov
xchg
cmc
push
cmp
fstp
ror
out
fldcw
pop
aad
lock
adc
iret
push
dec
lods
and
push
cmp
adc
mov
jae
cmp
cli
xchg
inc
cdq
(bad)
(bad)
popa
fcomip
cdq
and
mov
xor
push
mov
push
jb
cli
(bad)
dec
or
mov
jbe
dec
sub
ja
repz
dec
pushf
ins
not
inc
dec
mov
mov
pop
test
out
jae
loopne
cmp
sub
fisttp
xchg
mov
loope
pop
dec
ins
movs
xor
cmps
stos
test
inc
pop
out
push
adc
int3
mov
and
pusha
push
or
or
or
aas
lahf
das
call
imul
sar
xor
pop
xchg
and
sub
add
add
or
popa
imul
arpl
(bad)
ins
popa
popf
not
mov
rcr
jmp
wrmsr
inc
(bad)
in
ret
mov
sub
inc
jb
call
xchg
sbb
mov
repz
sbb
cmps
test
pop
jae
mov
and
test
and
pusha
into
inc
and
fdiv
xchg
or
add
mov
cmp
das
or
pop
cwde
xchg
leave
cdq
lods
sbb
(bad)
and
xor
cmp
cmp
xchg
mov
movs
sar
adc
add
jo
and
(bad)
enter
daa
xor
mov
sti
mov
jecxz
cmp
xchg
shl
cld
mov
xlat
hlt
push
or
fldenv
sbb
mov
jae
mov
(bad)
cmp
mov
scas
push
pop
push
nop
mov
out
mov
adc
push
into
repnz
sbb
mov
dec
mov
shr
cmp
fwait
imul
jae
dec
sub
sbb
repz
in
push
lock
les
mul
rcl
cld
lea
pop
xchg
in
mov
test
xor
push
sub
xlat
xor
(bad)
mov
frstor
mov
inc
bound
and
call
dec
lahf
popa
mov
dec
mov
and
loop
imul
ins
cmp
pop
inc
scas
test
mov
cvttps2pi
mov
pusha
dec
test
aam
xor
mov
cld
cmp
adc
sub
arpl
xor
jg
jmp
pop
arpl
shl
ror
jbe
sub
xor
std
jg
or
pop
mov
push
jbe
out
inc
sub
stos
stos
imul
jg
xchg
enter
aaa
cmp
sbb
ja
ja
rcr
mov
pop
inc
cmc
or
push
push
adc
mov
inc
add
sub
and
or
xchg
xor
jmp
jns
outs
xor
lock
and
jbe
pop
jl
pushf
test
test
jmp
dec
adc
mov
shld
les
in
movs
enter
sbb
xchg
pop
enter
out
adc
sub
jg
push
out
jnp
loope
mov
arpl
mov
xchg
mov
aaa
(bad)
mov
mov
xor
and
popa
dec
cmp
add
mov
aam
mov
fistp
fdivr
cwde
or
or
rol
pop
ds
cmp
leave
mov
inc
icebp
mov
cli
cdq
jle
inc
xchg
push
test
cmps
mov
shl
shr
sub
inc
hlt
pop
mov
mov
cmp
hlt
repnz
mov
pop
push
mov
sbb
jno
cmp
add
or
repnz
aas
call
into
xor
mul
and
aad
inc
rcr
nop
popf
fs
jle
ret
xchg
or
cli
sub
adc
ds
adc
sbb
sbb
sar
fidivr
xchg
jo
clc
hlt
mov
adc
inc
and
hlt
(bad)
ja
popa
(bad)
ss
jnp
js
rcl
xor
inc
cmp
lock
xor
(bad)
arpl
jb
cwde
sbb
lods
icebp
or
and
inc
and
sub
mov
enter
inc
inc
push
jne
retf
xchg
and
aaa
gs
inc
or
std
xor
sub
pop
mov
xchg
rol
lods
or
jecxz
and
bound
dec
xor
fadd
or
jmp
xchg
imul
mov
add
(bad)
(bad)
out
pop
sahf
mov
jl
sub
out
jmp
or
mov
ret
cmp
sub
iret
jo
mov
xchg
push
retf
in
inc
adc
sar
call
cwde
and
pop
ins
hlt
sub
cmp
cmp
sti
xchg
jo
xor
fstp
and
(bad)
nop
push
cmp
shr
sbb
or
test
adc
sbb
mov
hlt
and
sbb
pop
mov
retf
pop
xchg
push
adc
xor
enter
inc
xor
jmp
mov
popf
pop
cmp
push
dec
mov
lea
stc
adc
adc
movs
cmp
lods
mov
js
pop
or
dec
inc
rol
cmp
ffree
xchg
jns
add
add
cmp
mov
push
or
or
int
push
dec
loopne
inc
addr16
mov
mov
inc
sbb
jmp
in
add
inc
ja
mov
mov
push
sbb
cmp
dec
inc
and
popa
and
mov
cmp
dec
aad
ja
jmp
mov
lods
ds
jnp
(bad)
hlt
out
inc
jl
in
test
mov
sbb
mov
cmp
push
push
in
fsubr
movs
sub
out
jae
pushf
rcl
fnsave
imul
rcr
mov
iret
enter
lahf
and
call
push
adc
inc
out
push
or
call
sub
sub
or
jg
mov
xchg
mov
mov
das
mov
jmp
icebp
cmc
es
scas
ins
xor
fwait
ror
mov
fstp
gs
fadd
pop
fcmovnbe
retf
repnz
add
loop
xchg
fisubr
push
sub
ins
into
in
inc
xlat
xchg
push
int3
or
cmp
mov
and
or
ror
popa
loopne
jae
cmps
inc
adc
mov
jmp
dec
sbb
jmp
sbb
fnstsw
add
xor
lods
(bad)
out
xchg
cmp
adc
adc
mov
push
imul
call
in
cmp
adc
iret
cmc
jno
pop
(bad)
cli
aam
or
sub
xor
in
test
imul
jp
dec
inc
adc
pop
sub
adc
add
ja
xor
test
pusha
jns
sub
and
dec
cwde
xor
pop
fdivr
aam
xchg
cld
adc
xchg
pop
sbb
xchg
add
adc
out
movs
lock
pop
ror
push
adc
jle
and
cwde
aam
call
adc
or
sbb
(bad)
cld
mov
aad
test
mov
sub
js
jmp
or
rcl
sbb
nop
test
jo
(bad)
add
jg
outs
push
push
add
xchg
push
cmp
xchg
push
push
lods
cld
push
icebp
mov
inc
mov
mov
cmps
ja
add
shl
inc
xchg
sub
sbb
loopne
arpl
mov
popf
inc
or
aas
std
sub
fist
push
test
ret
push
pop
inc
inc
and
fwait
pop
push
mov
loopne
sub
jns
fstp
daa
stos
and
inc
test
xor
nop
retf
xchg
in
ret
adc
jnp
xchg
sub
sbb
arpl
cmps
sbb
in
ret
mov
pop
mov
adc
sbb
mov
into
fild
mov
inc
pop
mov
in
jo
fsubr
dec
push
pop
adc
mov
mov
dec
or
(bad)
or
popa
movs
inc
and
cmp
xor
out
test
push
push
xchg
ds
adc
pop
xchg
fs
pop
and
dec
xor
test
pop
jle
inc
inc
xchg
jne
mov
inc
hlt
scas
mov
daa
cmp
pop
not
out
dec
jle
cmp
dec
xchg
sub
xor
mov
cmp
jne
mov
jg
test
cwde
adc
sub
ds
fimul
jp
mov
aas
int3
pusha
packssdw
sahf
jne
dec
call
mov
mov
movs
xchg
pushf
aad
pop
inc
xchg
mov
aam
dec
movs
ins
shl
mov
xchg
in
jecxz
dec
loop
xor
bound
cmp
adc
sub
out
sahf
dec
pop
and
fwait
retf
sub
hlt
movs
popa
xchg
fdivr
pusha
aad
pop
int3
cmp
in
test
icebp
fdiv
push
(bad)
and
pushf
icebp
icebp
xor
dec
and
sub
xchg
mov
int3
and
or
xor
sub
push
cmp
arpl
xor
scas
retf
mov
mov
mov
fcomp
push
push
xchg
or
jge
setbe
enter
fnstenv
sbb
mov
xor
cmp
mov
icebp
ret
pmullw
hlt
sbb
and
inc
fidivr
ja
iret
pusha
xor
xchg
arpl
je
push
pop
ja
adc
cdq
clc
out
push
inc
outs
mov
fdivr
pop
jo
daa
icebp
add
cmp
pop
pop
xchg
iret
inc
sbb
and
push
cld
mov
sar
inc
repnz
pusha
add
jbe
cmp
add
int3
mov
shl
or
cs
repz
mov
hlt
pushf
or
in
and
add
mov
lods
and
and
cmc
push
mov
ins
adc
and
test
retf
mov
clc
add
or
jno
jno
jmp
add
stos
push
or
xor
das
and
lds
push
mov
mov
push
xlat
je
dec
mov
mov
dec
adc
mov
jl
jmp
in
mov
cmp
test
arpl
xchg
add
jno
fcomi
loope
mov
mov
mov
outs
ss
pop
dec
retf
call
mov
popa
ds
xchg
mov
mov
cmp
dec
jo
pop
cmc
shl
(bad)
(bad)
xchg
js
mov
add
xor
mov
cmp
shl
adc
xchg
mov
dec
push
test
mov
(bad)
mov
adc
xor
jbe
xor
fbld
and
cmps
jbe
push
jecxz
mov
inc
psubw
call
repnz
mov
jmp
fdiv
fistp
push
out
(bad)
dec
mov
adc
mov
push
pop
test
sahf
pop
or
jg
test
fistp
adc
fs
test
mov
sub
cwde
idiv
dec
sti
ja
push
dec
in
push
cmps
and
and
and
les
cwde
out
cs
dec
sbb
les
retf
or
pop
mov
pop
pusha
jecxz
ds
fwait
push
cdq
sbb
sti
pop
ja
jne
fincstp
xchg
xchg
mul
mov
add
jp
repnz
inc
mov
sub
ret
xor
push
pop
mov
in
or
push
fcmovnu
or
xor
xchg
push
(bad)
jno
mov
inc
fimul
mov
mov
pop
or
push
daa
push
mul
leave
mov
repz
fld
xor
jbe
lahf
push
cld
punpckhdq
les
jge
icebp
xchg
xchg
shr
add
dec
call
fcmovne
test
and
cmps
gs
dec
or
stc
mov
mov
out
inc
mov
dec
push
sbb
aaa
push
or
jns
push
sub
jle
nop
leave
dec
inc
test
test
inc
call
push
arpl
(bad)
mov
pop
or
ins
outs
jne
adc
(bad)
out
stos
pop
test
pop
jp
std
lea
fsubr
sub
xor
shl
test
and
xor
push
cmps
jmp
les
(bad)
lock
pushf
push
adc
in
push
xor
ds
adc
lock
pop
xchg
jp
(bad)
jl
inc
push
sbb
jmp
mov
cmp
and
mov
aas
mov
out
dec
dec
push
dec
xor
mov
mov
xlat
repz
fsubr
push
sub
pop
out
pop
push
inc
mov
jecxz
(bad)
sti
neg
enter
repz
dec
movs
sub
fld
sub
sub
daa
cmp
retf
loopne
cmp
cmps
xor
cmp
sbb
(bad)
out
aad
dec
dec
jb
rcl
jg
dec
sbb
stc
push
adc
fsubrp
in
dec
mov
jo
mov
cwde
lea
add
sub
clc
fwait
and
push
add
daa
les
xor
xor
xor
inc
jno
mov
push
neg
xchg
or
jae
les
mov
int3
adc
cwde
cdq
outs
dec
bnd
push
mov
sub
sbb
pop
int3
sbb
in
fist
lahf
daa
lods
fdiv
aas
jl
mov
rcr
mov
test
leave
mov
mov
or
pop
push
addr16
loop
ins
fild
sub
out
adc
sar
les
lahf
das
sub
addr16
mov
mov
mov
pushf
int
or
ss
std
inc
loop
jne
repnz
xchg
jmp
add
jbe
jmp
mov
std
aaa
dec
xchg
ret
and
xchg
push
enter
repnz
cwde
int3
scas
les
xor
retf
loop
xchg
jg
je
xor
xchg
test
shl
mov
mov
or
cmc
jbe
cwde
inc
iret
xor
pop
rcl
ret
dec
popa
add
scas
pop
adc
repz
idiv
inc
les
pop
sbb
ror
jle
pop
mov
aas
(bad)
cmps
repz
xchg
dec
mov
mov
pusha
sub
loop
fucomip
divps
add
pushf
hlt
cmp
xor
sbb
ins
xchg
cmp
ss
mov
pusha
adc
call
sahf
dec
aas
sub
in
mov
mov
ror
and
stos
push
in
mov
outs
outs
pop
scas
mov
pop
mov
sbb
or
push
and
into
dec
add
loop
fwait
pcmpeqb
call
mov
inc
mov
sti
test
cs
sbb
jg
sbb
add
shr
inc
adc
pop
sub
rcl
sti
scas
cdq
jg
xor
adc
and
mov
out
lds
pop
sar
push
out
lea
(bad)
ffreep
adc
stos
mov
fistp
popa
xor
adc
les
leave
sub
xor
ror
mov
fiadd
sbb
scas
pop
scas
or
xchg
xor
popf
mov
fidivr
cmp
jo
aam
iret
sbb
or
es
(bad)
and
xchg
sti
imul
pop
xor
cmp
pop
(bad)
sti
test
bound
ret
jl
sbb
jecxz
xchg
cmp
addr16
jl
out
in
add
cmps
jmp
jmp
int3
sbb
outs
call
adc
push
not
popf
dec
xchg
and
or
push
test
jmp
jp
repnz
xor
movs
in
sbb
sbb
test
hlt
movs
pushf
or
mov
stos
pop
mov
stos
xchg
mov
push
repz
pop
inc
les
bound
sub
cmp
mov
dec
rol
push
scas
mov
scas
or
outs
fisttp
push
ja
adc
or
mov
cli
mov
ret
lods
jmp
dec
jl
cmp
mov
adc
jle
lds
sti
mov
and
mov
fiadd
lods
cmp
(bad)
jno
xchg
leave
call
jecxz
idiv
jnp
ins
mov
jp
jmp
and
pop
sub
sub
jle
jb
add
or
or
xchg
jg
lods
xchg
mov
inc
sbb
out
retf
sbb
cmp
ror
fwait
in
mov
sar
sub
call
leave
jo
in
scas
fild
mov
(bad)
std
mov
or
(bad)
jmp
lahf
jno
cdq
imul
(bad)
js
in
adc
jns
cmps
lds
push
ins
jmp
xchg
push
pop
and
pop
jne
sbb
aaa
and
dec
cmp
adc
dec
lea
fdivr
cmp
call
push
add
dec
and
or
push
inc
jnp
out
sub
(bad)
jle
outs
clc
mov
jmp
or
nop
repz
add
mov
jmp
std
pop
enter
iret
xor
push
sahf
xchg
lds
stos
lds
and
push
or
sahf
fwait
and
cmp
std
and
into
int
mov
jb
push
dec
enter
ja
jno
mov
(bad)
adc
mov
push
rcl
sbb
sbb
sub
pop
(bad)
jae
mov
jo
dec
lahf
into
imul
bnd
mov
push
(bad)
loope
aas
iret
cmp
mov
sbb
pop
xchg
lods
bound
in
inc
out
mov
sahf
xor
mov
and
mov
pushf
pop
mov
add
rcr
leave
outs
jbe
add
fimul
adc
mov
jp
dec
das
loop
mov
call
xchg
bound
div
fild
lods
aad
test
cli
cmps
push
test
jl
icebp
xor
jmp
pop
and
add
mov
xchg
mov
popf
adc
jne
fmul
or
push
int3
push
adc
push
fcomp
push
cmp
out
pusha
sbb
mov
out
mov
aaa
push
leave
cmp
and
js
and
loope
sti
inc
dec
mov
jae
fstp
add
jecxz
add
jp
jmp
sub
lods
stos
rcr
add
pop
(bad)
pop
ret
or
dec
les
inc
and
xor
and
sbb
pop
jp
loopne
pop
pop
push
(bad)
or
loopne
in
dec
ud2
lds
add
sub
pop
ss
retf
je
(bad)
in
and
adc
lock
gs
enter
pushf
mov
movs
in
pusha
push
pop
movs
rol
lahf
pop
jns
test
xor
dec
inc
pop
retf
mov
imul
add
sub
add
mov
xchg
jg
jmp
rol
nop
mov
cs
xchg
dec
pop
and
js
dec
mov
add
inc
dec
gs
arpl
cmc
out
shl
out
outs
pop
fistp
mov
cmc
mov
lea
ds
das
inc
inc
add
push
add
pop
xchg
inc
call
xchg
xor
mov
pop
arpl
icebp
aaa
fwait
ss
xor
clc
mov
das
call
push
mul
dec
aad
out
mov
cmp
push
mov
lds
pop
add
fwait
mov
enter
add
jge
lds
test
scas
sti
mov
enter
popfw
cs
lods
adc
daa
adc
sbb
sbb
and
xchg
adc
scas
xchg
mov
cmp
push
mov
shr
cmps
cmp
and
(bad)
mov
(bad)
jg
xor
packuswb
aaa
dec
ja
mov
inc
lea
icebp
dec
in
scas
add
mov
stos
cmova
inc
mov
xchg
push
mov
xor
mov
inc
fadd
cmp
test
or
rcl
stos
stc
out
int3
mov
out
loope
(bad)
aas
popa
xchg
mov
enter
mov
out
mov
mov
rcl
add
repz
imul
jo
cmps
dec
mov
xchg
and
mov
mov
movs
push
and
clc
jo
adc
jecxz
inc
lods
mov
dec
cli
push
in
jle
out
std
fisttp
int
inc
stos
pushf
xchg
call
mov
xchg
enter
shl
xlat
shl
daa
int
xchg
leave
mov
stc
add
rcr
push
lahf
icebp
or
test
mov
(bad)
xchg
mov
inc
loope
push
retf
jmp
push
push
imul
xchg
mov
pop
stc
add
jle
mov
xchg
jbe
mov
push
xlat
jge
into
push
popf
or
xor
pop
loope
pushf
mov
aaa
add
movs
mov
xor
mov
(bad)
mov
arpl
retf
mov
ins
addr16
mov
mov
xor
sbb
aam
xchg
cmp
mul
int
out
mov
in
and
dec
jg
mov
aaa
cld
pop
dec
push
std
scas
repz
push
popf
clc
sbb
push
(bad)
enter
add
imul
and
mov
xor
jb
xor
or
xchg
out
or
mov
push
(bad)
popf
jbe
mov
push
rcl
xor
(bad)
enter
rep
push
add
mov
pop
sbb
stc
cmp
xchg
lods
mov
stc
aad
stos
stos
jmp
cmps
das
inc
ins
sub
inc
gs
(bad)
add
xor
mov
in
cmp
jne
or
rcr
adc
or
pop
push
mov
mul
sub
mov
imul
mov
lds
fnstenv
xchg
cwde
fimul
nop
sub
int
or
cwde
fucomp
mov
jno
das
movs
sbb
push
dec
cld
pop
or
add
pop
jmp
mov
sub
pop
sbb
mov
cmp
mov
cmps
stos
jp
xor
mov
sub
inc
pavgw
mov
inc
xor
test
gs
outs
(bad)
sub
cdq
in
mov
inc
enter
adc
cmp
adc
sub
cmp
and
cmps
pop
sub
stc
shl
scas
mov
push
ror
int3
sub
rcl
jg
in
ins
cmp
lahf
xor
push
fwait
hlt
jbe
sub
and
dec
inc
pop
lods
fstp
pop
outs
pop
add
arpl
inc
mov
jns
add
lds
mov
js
outs
addr16
clc
push
test
int3
adc
mov
pop
xor
ficom
stos
inc
adc
jo
movs
pop
stc
lahf
scas
ja
adc
push
(bad)
sbb
xor
loopne
fsubr
adc
xor
pop
call
or
sub
in
xor
mov
mov
test
out
jp
pop
shr
inc
xchg
inc
ret
lock
stos
scas
sub
mov
push
mov
sub
lahf
pop
ror
sbb
cmp
mov
cmp
imul
sahf
inc
sbb
or
sbb
mov
movs
inc
xchg
push
or
mov
push
xor
imul
dec
xchg
enter
pop
or
pop
pop
mov
je
aaa
ds
mov
pop
push
inc
or
int
cmps
scas
sub
ret
adc
xchg
jmp
pop
sahf
(bad)
mov
arpl
data16
dec
int3
cmc
repnz
enter
es
sub
inc
jg
icebp
or
in
or
sbb
ss
mov
addr16
push
fnstcw
adc
cmp
dec
aas
sub
stc
or
div
mov
add
cmc
fisttp
pop
sub
pop
das
test
jo
push
pop
adc
adc
jle
(bad)
xchg
push
in
dec
int
sub
rol
xchg
and
cmp
mov
mul
xchg
pop
inc
cmp
fcmovnbe
cld
mov
sub
pop
pop
sar
dec
adc
in
jl
or
jge
dec
pop
mov
sbb
xor
shl
sbb
fidiv
push
aaa
mov
scas
cs
dec
cwde
pop
jmp
mov
adc
sub
ja
adc
mov
loop
mov
es
leave
cmp
iret
pop
into
cli
pop
repz
js
fisubr
or
cmc
outs
scas
fistp
mov
jae
int
fwait
adc
outs
movs
(bad)
cwde
pusha
inc
into
in
cmp
std
fs
fcomp
dec
retf
aad
(bad)
jecxz
sbb
scas
add
out
fld
std
shr
mov
sub
movs
push
xchg
outs
mov
mov
cdq
stos
push
xchg
cmp
push
loope
jae
adc
aad
push
lds
mov
je
xchg
popf
push
nop
(bad)
loop
sti
mov
js
jbe
data16
fwait
and
(bad)
adc
and
cs
(bad)
int3
jb
cwde
stos
int3
rol
mov
or
cmc
(bad)
mov
adc
cwde
outs
dec
icebp
test
stos
into
scas
ss
scas
or
(bad)
dec
ss
xchg
fsubr
add
sub
sub
call
pusha
in
cdq
mov
xchg
stos
adc
out
cmp
mov
test
cmps
enter
jb
cli
ret
les
jns
daa
adc
(bad)
xor
ss
sub
jl
push
add
aas
xchg
sbb
pop
fs
arpl
xchg
and
ret
and
sub
fwait
cmp
and
test
and
call
rcl
popf
out
push
xchg
xchg
mov
outs
or
inc
jmp
dec
xlat
pop
out
dec
cs
inc
sub
dec
mov
fs
xor
int3
mov
mov
aad
pop
(bad)
jp
out
fidiv
fs
sbb
outs
pop
xor
mov
and
mov
push
cmp
mov
push
jno
push
mov
and
jge
sub
pop
jmp
idiv
(bad)
sub
stos
push
jae
lsl
jmp
push
or
(bad)
jmp
mov
rcr
aas
std
mov
mov
inc
outs
inc
popa
fsub
(bad)
in
out
jmp
fnstsw
cs
retf
lods
inc
pusha
sbb
fs
pop
cmp
rcl
popf
mov
cmps
push
fbld
(bad)
jmp
xchg
jo
int3
push
iret
sbb
mov
adc
out
cld
(bad)
call
add
stc
jnp
dec
mov
ins
pop
das
scas
cmp
dec
mov
out
jae
xor
popf
mov
test
jmp
icebp
cmp
call
aad
into
rol
pop
popa
jno
iret
repnz
lods
mov
jge
xchg
push
cmp
test
out
mov
or
inc
jbe
pop
and
sub
or
cmp
cmps
push
jmp
xchg
xchg
push
mov
idiv
pop
ret
xchg
xchg
push
not
cli
fcomp
iret
push
fsub
or
or
mov
fsub
pop
push
js
mov
adc
ds
xor
cmps
jecxz
mov
into
call
aam
lahf
cmps
int3
jmp
iret
pop
jnp
sar
add
stos
adc
outs
xcrypt-cbc
cmps
xchg
pusha
mov
sbb
push
inc
mov
or
in
and
push
outs
daa
add
xchg
xor
scas
mov
pop
imul
dec
push
push
inc
daa
icebp
push
jp
mov
adc
or
cli
pop
in
jge
js
pop
jmp
cmps
sub
mov
aad
inc
inc
adc
cmp
nop
mov
cmp
jno
neg
push
xor
mov
les
pop
outs
inc
mov
lock
lods
pushf
dec
lahf
icebp
dec
pop
xchg
sub
test
popa
push
jb
iret
imul
jno
push
xor
mov
and
cmc
ror
outs
jle
shl
mov
mov
cs
pop
pop
sub
jge
addr16
xlat
pop
ja
dec
lods
jae
xor
repnz
repnz
mov
xchg
sbb
or
inc
(bad)
std
xor
sbb
add
ds
dec
jo
stos
and
cld
sahf
mov
arpl
lahf
add
out
cli
das
retf
pop
cs
retf
dec
icebp
inc
hlt
adc
push
movs
or
mov
mov
dec
inc
xor
jmp
inc
cmp
jns
lahf
pop
xchg
cdq
sbb
mov
inc
mov
jmp
pop
movs
in
jbe
cwde
bound
or
outs
aam
xor
shl
mov
cli
lea
(bad)
jbe
mov
mov
fadd
inc
movs
aaa
xor
icebp
adc
jae
jmp
aam
dec
mov
sub
sar
popa
inc
or
xor
mov
push
and
jbe
ffree
jnp
mov
enter
mov
retf
inc
in
sub
inc
enter
mov
xchg
aaa
adc
out
dec
xlat
mov
inc
mov
loope
sub
in
or
in
out
adc
loope
sar
mov
iret
mov
xor
lock
int3
xlat
or
push
fwait
sub
xor
mov
nop
(bad)
sti
lahf
test
mov
mov
inc
xchg
das
sub
xlat
jl
test
dec
dec
cwde
inc
ret
push
jge
ret
imul
lods
dec
jne
rcr
push
movs
push
sbb
mul
jae
imul
aaa
mov
cs
xlat
pop
or
aaa
movs
sbb
(bad)
mov
jmp
inc
(bad)
pop
or
sub
xchg
cmp
dec
scas
outs
push
push
cmc
into
sub
data16
lods
adc
push
out
stos
xchg
outs
cwde
out
das
cmps
icebp
pop
dec
inc
loop
ins
mov
shl
pop
jo
mov
adc
push
cwde
sbb
sahf
jmp
xor
rcr
cmp
out
fcomp
gs
add
xor
ss
push
fistp
cmp
fsubrp
mov
cmp
(bad)
addr16
mov
into
xchg
fist
shr
lods
mov
mov
sbb
js
and
xchg
adc
push
lock
ror
neg
leave
es
mov
add
outs
mov
mov
sar
ret
mov
outs
add
jg
mov
outs
imul
out
rcl
xor
sbb
lds
fwait
add
cmovnp
adc
in
(bad)
pushf
xor
xchg
pusha
sbb
mov
cmc
jg
push
(bad)
fcomp
jmp
movs
pop
js
(bad)
retf
xor
push
pop
pop
in
dec
outs
lea
cmps
or
xchg
sbb
sar
dec
test
stc
lock
add
pop
jle
jp
mov
inc
in
loop
pop
(bad)
jne
loop
mov
pop
lods
ffreep
jge
test
fisttp
out
push
fild
or
in
lock
jae
in
cmps
out
sub
or
xchg
mov
loop
cmp
icebp
sub
dec
retf
loopne
mov
inc
xlat
dec
shl
scas
aas
rol
dec
sbb
ret
icebp
ja
sahf
in
inc
stos
test
pushf
sbb
cmp
xchg
dec
ja
scas
bound
push
fcomp
test
inc
sbb
or
(bad)
mov
cmp
nop
shl
cld
int
jmp
sbb
sub
pop
mov
jmp
test
pop
test
repz
bound
out
sub
push
lea
outs
mov
cmp
or
vmwrite
jle
cs
xor
hlt
shl
mov
xor
call
ss
add
xor
out
stos
les
fdiv
jle
xor
cmp
fisubr
retf
push
das
in
adc
cmps
loop
sub
popf
or
loop
dec
fdiv
ret
jmp
push
xlat
mov
mov
lds
daa
mov
ins
enter
iret
dec
ss
or
sub
test
mov
movs
xchg
faddp
imul
adc
xor
pusha
mov
jb
lahf
lahf
sub
test
push
pop
stos
aad
inc
loop
out
and
clc
shl
fidivr
dec
fidivr
pop
int3
dec
add
iret
shl
in
push
imul
push
mov
outs
pop
test
sub
loop
mov
imul
xchg
pop
xor
mov
in
pop
test
sahf
add
jmp
cmp
sbb
in
les
inc
cli
jge
je
cmp
jmp
cmps
mov
retf
outs
lea
mov
pop
jg
or
mov
hlt
jp
jns
in
xchg
gs
jl
or
add
jae
out
jbe
xchg
repnz
mov
stos
inc
maxps
and
adc
jg
mov
out
xor
clc
test
ficomp
mov
(bad)
cli
inc
mov
or
ja
and
mov
or
test
stc
fsub
and
jle
shl
sub
cmps
retf
cmps
daa
jmp
add
sub
cmp
mov
sbb
cmps
pop
pop
mov
jg
xor
xchg
mov
xor
cmp
mov
(bad)
or
pop
push
icebp
aas
popa
fcomp
in
push
inc
mov
mov
adc
push
mov
icebp
fwait
es
call
test
leave
or
adc
lea
push
nop
daa
aas
int
nop
out
jecxz
cmp
mov
push
push
jmp
addr16
sahf
inc
push
enter
jae
or
add
enter
mov
ret
scas
ret
daa
jecxz
test
nop
add
clc
inc
pop
xor
data16
daa
cmp
fimul
fstp
repz
cdq
sub
out
out
sbb
fwait
push
pop
mov
adc
xchg
or
inc
jnp
mov
and
out
(bad)
lods
imul
fld
shl
scas
(bad)
mov
jg
pop
out
fsubr
add
jmp
inc
addr16
cmp
retf
test
cmp
mov
jg
hlt
push
cmp
cmp
retf
or
mov
ss
sbb
mov
popf
scas
test
popa
sbb
sbb
push
leave
or
xchg
in
xchg
pop
add
adc
aaa
loope
inc
mov
test
lods
push
inc
or
xchg
rcr
sub
jns
(bad)
movs
call
ds
out
dec
push
aaa
jb
and
rcl
leave
pop
dec
fs
and
neg
or
hlt
into
call
cmp
cwde
inc
(bad)
or
xor
test
and
push
cmp
out
cwde
std
jno
pop
loop
shl
sbb
or
jmp
xor
lahf
jns
xor
xchg
and
int3
and
or
int
ror
push
jns
jmp
mov
cwde
mov
xchg
mov
dec
mov
or
retf
cmp
add
std
add
mov
inc
fcomp
mov
jb
jge
rol
(bad)
mov
jo
add
xor
idiv
cmps
inc
neg
pop
bound
fs
mov
rep
push
bswap
nop
add
mov
push
jl
inc
push
mov
adc
push
jge
or
or
or
add
dec
shl
mov
div
lahf
cmp
mov
adc
jg
xchg
xchg
mov
xor
mov
lods
xchg
fwait
pop
ret
pusha
(bad)
mov
mov
or
hlt
stos
xchg
icebp
aaa
call
outs
push
pop
loop
or
mov
jnp
mov
sub
xchg
pusha
xor
xor
call
xchg
push
addr16
adc
ss
data16
inc
push
mov
push
test
push
aas
ret
mov
sbb
fdiv
adc
ds
xor
int3
fsubr
dec
fbstp
(bad)
shl
jae
stos
test
dec
out
jne
lock
inc
test
in
cli
adc
(bad)
mov
(bad)
outs
cmp
popa
cmp
mov
xchg
xor
inc
or
sbb
ds
add
jae
dec
jge
aam
imul
adc
jno
sub
ret
xor
inc
mov
add
stos
leave
cli
or
sub
in
popa
mov
fucomip
jno
mov
fidivr
lea
call
xchg
daa
in
xchg
out
(bad)
or
pop
std
call
adc
pop
cmp
ror
jle
sbb
xchg
repnz
or
cs
daa
int3
shr
iret
aaa
jne
push
nop
mov
mov
stos
ret
cmp
inc
cwde
cwde
jns
and
xor
mov
cmc
enter
jo
prefetch
sbb
stc
shr
retf
stc
jns
adc
stos
cmp
popa
push
retf
xchg
sub
cmps
mov
outs
pop
aaa
das
cdq
out
cmp
xor
xchg
fs
dec
test
push
out
dec
jg
mov
outs
push
data16
js
mov
in
popf
fs
aam
(bad)
jnp
mov
xor
mov
out
cli
cli
xor
imul
cmp
inc
add
popa
jns
inc
xchg
cdq
lahf
ins
mov
out
inc
stc
les
in
and
inc
fcom
mov
pop
pop
scas
fmul
lds
out
imul
xchg
and
mov
out
or
mov
test
or
inc
scas
jns
sbb
xchg
inc
xor
test
ret
jmp
xor
xchg
push
inc
ficomp
or
call
pop
fist
mov
push
hlt
pop
aam
js
cwde
leave
mov
and
dec
push
mov
adc
adc
jle
adc
mov
pop
mov
cs
clc
add
dec
inc
retf
add
sbb
test
mov
fsubr
dec
(bad)
dec
cmp
inc
ret
inc
dec
sbb
popf
push
push
pop
cmps
and
inc
add
cmps
stos
jp
lods
lea
jb
mov
out
(bad)
jl
jae
seto
jbe
cwde
mov
sub
shr
imul
mov
xor
sbb
sar
loope
ret
mov
mov
(bad)
pop
push
xchg
repnz
arpl
fmul
jbe
add
sub
ds
cmp
adc
int
popf
mov
jge
mov
pop
in
(bad)
and
sbb
mov
and
test
nop
dec
xlat
inc
mov
sub
dec
mov
jns
in
(bad)
cmp
sub
jmp
pop
push
rol
iret
push
(bad)
pop
fwait
(bad)
mov
mov
dec
fcom
cmps
xor
inc
repnz
aaa
mov
pusha
ror
xor
paddd
xchg
pop
test
sub
xor
mov
aam
xor
pop
jp
push
(bad)
in
cmps
(bad)
mov
cld
xor
push
scas
popf
retf
stos
xor
in
pushf
mov
jno
mov
stos
jno
pusha
adc
adc
cwde
mov
jb
adc
repz
fs
push
or
ret
adc
push
push
ret
cmp
cli
movs
sub
jne
scas
das
inc
sbb
xchg
std
cmc
ds
cmp
sub
sti
push
in
iret
adc
mov
cmp
test
pushf
psubusb
mov
scas
and
mov
je
imul
mov
aas
inc
mov
cmp
leave
push
jne
into
outs
(bad)
lods
push
or
(bad)
mov
test
scas
jl
test
fld
xchg
(bad)
push
cwde
mov
xchg
sbb
sub
mov
(bad)
popf
jg
dec
sbb
xrelease
add
push
movs
scas
sub
sti
sub
cwde
and
jnp
rcr
into
mov
mov
test
std
dec
mov
out
push
shl
adc
dec
or
and
inc
les
scas
dec
xchg
fld
ds
lods
les
pop
loopne
mov
jo
add
mov
ficom
pop
cmp
ja
push
sbb
in
repnz
call
(bad)
enter
push
jno
inc
adc
jle
es
mov
dec
mov
sar
jns
push
aam
pop
xchg
sbb
test
ror
(bad)
ret
lea
test
mov
cmp
dec
xlat
(bad)
inc
cmp
shr
fsub
push
push
bound
clc
shl
sbb
retf
sub
call
pop
and
leave
outs
sub
jns
add
cmp
add
mov
cli
(bad)
leave
and
mov
add
adc
cmp
fwait
push
(bad)
dec
dec
or
mov
in
dec
pop
lds
or
cmp
sub
idiv
jg
jmp
ret
int
fisttp
call
in
stos
jns
mov
cmp
out
dec
stos
xor
mov
xor
in
adc
fidivr
pushf
jmp
dec
mov
push
in
mov
jmp
dec
xchg
and
ret
jae
jge
dec
aad
fimul
cli
push
(bad)
fidivr
mov
mov
test
stos
inc
jae
pop
inc
mul
lock
xor
cli
outs
lods
dec
bound
sbb
cmps
mov
xchg
or
shr
dec
or
inc
and
sub
or
sub
mov
cdq
jmp
clc
xchg
and
neg
sub
pop
cli
fadd
mov
or
xor
jo
cmps
adc
pusha
push
jae
push
test
div
(bad)
gs
jbe
mov
sub
jl
aad
xchg
fst
inc
(bad)
test
stos
dec
movs
std
mov
(bad)
sub
das
sub
dec
pop
xor
pop
out
test
je
dec
ins
pop
ss
jbe
pusha
cmp
mov
pop
retf
js
aaa
sub
in
outs
cmc
cmps
(bad)
in
out
fsubr
mov
and
pop
gs
add
lods
adc
pop
sub
mov
and
lods
rol
add
imul
and
mov
aaa
push
pop
fisubr
je
cmp
stc
cmp
lods
cli
iret
pop
mov
pop
cmp
call
inc
inc
int3
imul
dec
sbb
mov
pop
out
enter
shr
outs
pop
and
add
jl
xor
mov
call
(bad)
push
cmp
push
std
mov
cld
add
int
fnstenv
dec
xchg
es
and
in
xor
mov
cmc
and
add
push
scas
imul
sub
lods
icebp
xchg
push
data16
aam
enter
mov
aad
push
xchg
mov
cmp
pslld
inc
mov
(bad)
cli
iret
ja
lea
add
ror
adc
xor
test
jmp
mov
dec
inc
or
xlat
test
xor
popa
jmp
(bad)
icebp
jmp
adc
mov
dec
loop
aad
in
fadd
lock
add
arpl
fwait
ds
xor
dec
inc
inc
and
scas
or
retf
int
dec
cld
test
out
mov
sub
cmp
mov
push
dec
data16
adc
push
mov
pusha
xor
mov
jns
ja
in
mov
sbb
inc
or
ins
pop
lea
imul
mov
mov
shr
dec
(bad)
cli
push
jbe
mov
jbe
jne
inc
mov
ja
jae
cmp
shl
pop
push
mov
mov
cmp
in
inc
pop
jno
mov
lock
xor
stc
(bad)
cmp
jmp
jmp
fdivr
leave
cmp
outs
and
aad
test
comiss
mov
icebp
push
pop
pusha
popa
call
mov
mov
ja
int
enter
push
add
repnz
jb
cwde
pop
sbb
mov
add
lahf
scas
adc
repnz
mov
out
mov
xchg
test
or
jle
and
movs
mov
xchg
push
es
jle
(bad)
mov
xchg
call
aam
mov
pop
sub
es
push
fdiv
imul
lds
jb
jno
dec
sbb
pop
jmp
push
scas
inc
sbb
mov
cmp
add
mov
int3
aam
shr
test
jp
or
cmp
not
cmp
fstp
inc
test
int
outs
cli
dec
(bad)
jle
mov
jnp
jg
ret
mov
arpl
add
cmp
jbe
cld
sti
ds
pop
mov
xor
shl
bnd
adc
sbb
mov
jg
ins
jmp
fs
ret
rol
lds
mov
into
or
xchg
(bad)
mov
mov
loope
push
xchg
nop
mov
pop
or
frstor
unpckhps
outs
mov
jmp
bound
das
movs
jg
pop
mov
das
addr16
loop
jmp
adc
rcl
and
aas
(bad)
sbb
dec
mov
icebp
call
jl
cmp
sar
mov
stc
inc
(bad)
int3
add
pop
loope
call
mov
sub
mov
neg
jo
cmps
sub
pop
jae
(bad)
pop
repnz
jl
sub
inc
dec
cmp
shl
mov
ror
fist
pop
inc
fldenv
jmp
mul
icebp
jle
and
pop
cs
shl
mov
mov
dec
sar
mov
rcr
mov
sbb
pusha
outs
fist
std
or
pop
or
pop
lds
das
and
xchg
xor
daa
ror
push
es
in
mov
lahf
inc
test
cdq
lds
jge
aam
mov
push
push
test
pop
in
adc
div
xor
aaa
call
sbb
in
or
shl
aam
and
retf
jmp
fwait
sub
popf
pop
cli
movs
fdivp
call
cli
mov
imul
mov
jl
push
shr
imul
xchg
mov
sbb
rcr
lods
sbb
int3
mov
fiadd
cmp
and
ret
into
xor
int
into
loop
shr
jbe
jno
retf
adc
dec
imul
sub
dec
pop
or
sahf
fsubr
inc
in
mov
stos
test
addr16
xchg
fisubr
sti
(bad)
sbb
js
sbb
push
out
push
add
xchg
mov
call
arpl
sar
sub
rcl
sub
fild
es
xlat
mov
ins
loope
int
mov
mov
lods
sub
outs
fsub
mov
xlat
icebp
or
es
ins
iret
bndstx
cmp
add
mov
aas
cmp
jge
pop
ret
xlat
add
jle
std
sbb
lods
xor
jg
push
mov
mov
mov
inc
cmp
jg
movs
inc
(bad)
loopne
xchg
mov
xor
push
mov
and
arpl
retf
or
xchg
xchg
mov
dec
pusha
icebp
pusha
bound
inc
or
xor
retf
loop
mov
iret
loop
nop
pop
into
out
data16
inc
sub
in
sbb
aaa
mov
movs
dec
lods
call
add
int3
cmp
push
mov
pop
pop
sbb
(bad)
ficomp
cmp
push
ins
stos
inc
scas
int
sbb
jbe
fdiv
sahf
bound
daa
pop
retf
sar
cs
pushf
stos
lods
mov
fisub
clc
jmp
daa
ffree
(bad)
fucom
dec
push
pop
scas
icebp
iret
jmp
jne
pop
add
(bad)
(bad)
inc
pop
(bad)
iret
ja
or
mov
setge
jae
mov
push
dec
idiv
mov
adc
xor
test
(bad)
adc
lea
test
das
leave
pop
(bad)
jp
movs
or
loop
push
adc
mov
nop
adc
push
dec
ss
pop
les
ins
pop
or
bnd
ret
fprem1
mov
sub
das
or
xor
sub
inc
push
test
sbb
add
stos
adc
lahf
cmp
jmp
cli
aad
mov
rol
nop
mov
nop
mov
mov
push
sub
mov
clc
xchg
xchg
movs
(bad)
hlt
sub
or
outs
movs
inc
addr16
fnstsw
cmp
mov
mov
push
mov
cmp
adc
(bad)
fucomi
cmps
sub
les
js
add
maskmovq
idiv
sbb
cmp
cmp
dec
push
shr
outs
and
xor
es
and
pop
push
inc
or
inc
xor
(bad)
mov
add
xor
xchg
jae
xchg
xchg
sbb
arpl
mov
push
add
adc
scas
and
pop
sbb
rcl
mov
ds
fs
inc
je
or
push
jmp
pop
cs
dec
fisttp
aam
pop
call
jmp
retf
retf
jecxz
call
xor
pop
out
aas
jne
movs
adc
imul
mov
cmp
cmp
lods
dec
mov
ins
and
loop
in
cmc
push
cmp
jge
scas
mov
pop
dec
stc
js
fisttp
scas
popf
pop
pop
jb
int
repz
arpl
jb
and
mov
outs
mov
fimul
in
sub
outs
mov
outs
push
clc
mov
jg
mov
aam
xlat
into
push
and
pop
scas
ss
dec
test
imul
jo
push
mov
dec
xor
lock
stc
dec
xor
repz
add
int3
lahf
cmp
push
in
sub
iret
dec
sbb
xchg
loopne
mov
sti
fisttp
jno
and
lds
add
hlt
mov
loope
adc
dec
mov
mov
or
xchg
adc
into
pop
inc
call
or
into
add
push
jge
stos
jns
inc
inc
daa
ins
pop
dec
mov
ins
int
in
cdq
cmps
xor
and
push
loopne
jecxz
mov
inc
push
mov
jmp
fwait
scas
outs
(bad)
mov
fcom
and
lahf
js
shr
mov
ss
(bad)
out
fadd
pop
cmp
and
mov
sub
or
outs
ins
sub
mov
adc
stos
xor
inc
push
in
shr
mov
pusha
test
sbb
cmps
loop
add
pop
jne
mov
jge
pop
xchg
adc
sub
and
mov
cmp
iret
xchg
adc
(bad)
out
rcl
sub
inc
fsubr
bnd
or
mov
outs
sub
jno
xchg
out
dec
mov
mov
xor
pusha
push
in
push
mov
cdq
icebp
jmp
cwde
in
sub
push
xchg
call
push
push
ja
das
mov
loope
ret
mov
jns
test
xor
mov
inc
push
push
xchg
cmp
not
leave
int
dec
pop
push
pop
cmc
and
add
or
sub
xor
cmp
mov
mov
inc
or
mov
lock
(bad)
jp
cmp
cmp
cmp
cmps
mov
sbb
or
sti
clc
dec
mov
push
cmp
enter
loop
mov
pushf
inc
jnp
pop
cld
and
cmp
push
mov
jae
int
mov
icebp
inc
out
mul
mov
push
outs
and
rcr
test
aas
(bad)
into
test
test
xchg
rcr
icebp
stos
xlat
xor
and
and
push
or
sub
lods
div
and
das
jecxz
and
add
nop
add
pop
or
stc
add
sti
fld
bound
mov
mov
or
mov
mov
xor
inc
les
dec
arpl
sub
jae
call
icebp
inc
sub
stos
aas
retf
hlt
and
int3
mov
bound
mov
cwde
ret
stos
mov
sub
mov
scas
sbb
add
sahf
bound
dec
(bad)
xchg
daa
stos
jne
idiv
push
and
mov
jecxz
fisttp
je
mov
pop
std
inc
clc
add
cdq
imul
fimul
dec
pusha
dec
adc
xchg
gs
lea
inc
adc
int3
xor
add
js
sub
jno
pop
adc
mov
lahf
imul
push
popa
(bad)
adc
outs
popf
sbb
(bad)
adc
in
xchg
cmp
mov
das
add
sbb
push
data16
add
(bad)
mov
inc
ins
dec
jo
(bad)
fcom
adc
cs
fst
pushf
jb
mov
int
loopne
lds
out
icebp
popa
jne
mov
mov
add
mov
inc
mov
retf
call
xor
scas
rol
lock
pushf
ss
test
push
inc
xor
jno
mov
xor
inc
out
add
cdq
or
and
mov
rcl
enter
jo
dec
pusha
xchg
sub
jle
add
bound
and
mov
int
fidiv
xchg
cs
nop
and
daa
jge
jecxz
cmp
ja
rcl
nop
out
or
or
xchg
aas
add
jno
shr
mov
lds
fwait
cli
mov
sub
push
das
cmovo
inc
aam
add
add
mov
in
in
jns
inc
jbe
mov
call
rcr
mov
es
add
retf
ret
xor
shl
xor
and
and
imul
adc
push
mov
sub
jo
adc
inc
add
jno
xor
es
pop
shl
dec
aaa
test
inc
sub
dec
mov
mov
push
shr
and
adc
aas
iret
push
dec
fisub
or
enter
imul
mul
bswap
ret
lods
sbb
imul
cs
sub
test
push
sub
push
(bad)
push
xchg
pop
dec
(bad)
bound
ins
in
ds
dec
inc
push
scas
enter
jp
push
enter
xor
cmp
xchg
loop
icebp
cld
stc
sub
sub
cld
mov
int3
cmp
ficom
sub
jcxz
cwde
test
mul
les
dec
or
outs
sub
sub
mov
xlat
mov
adc
jge
mov
pop
dec
mov
lds
jns
xchg
mov
(bad)
pop
mov
dec
adc
pop
stos
loope
and
pop
add
inc
inc
stc
(bad)
jg
in
push
scas
cld
inc
mov
or
cmp
lea
fsubrp
shr
neg
test
sub
lods
mov
xchg
das
and
loope
and
fld
mov
ret
inc
jbe
mov
movs
mov
or
lea
out
mov
cli
push
cmp
or
xchg
rcl
test
lds
inc
xor
gs
mov
xlat
xchg
pop
bound
jp
jns
jbe
daa
or
jmp
into
adc
ret
arpl
push
scas
lahf
sub
inc
sub
push
pop
out
leave
fild
aas
mov
xchg
xlat
clc
in
add
sahf
dec
inc
jmp
rcl
inc
loopne
mov
shr
xlat
fs
or
sbb
call
dec
mov
cmp
add
popa
mov
push
(bad)
cmp
and
push
or
(bad)
rol
ins
data16
push
mov
jns
rol
add
mov
mov
jo
jle
imul
test
cwde
rcl
mov
daa
div
daa
pop
cmp
pop
clc
aaa
pop
dec
jne
(bad)
call
and
stos
inc
jae
xchg
cwde
or
sub
fisub
push
fxch
pop
pop
bound
in
test
leave
imul
imul
or
xor
fst
dec
inc
loopne
push
jb
imul
sti
das
stc
outs
xchg
rol
cmp
call
out
fistp
movs
std
push
clc
rol
jb
fimul
(bad)
sub
add
mov
add
mov
xchg
out
dec
leave
ficom
xor
add
lds
cmc
cwde
pop
aad
iret
rol
dec
xchg
push
fisttp
call
adc
sbb
jp
xchg
push
or
out
add
sti
icebp
int
fsqrt
repz
hlt
add
sbb
dec
mov
mov
inc
cmp
xor
xor
xchg
push
and
mov
add
xor
loope
rcr
int3
mov
sub
(bad)
cwde
test
add
sar
fcmovbe
mov
in
adc
rcr
rcl
and
pop
adc
stc
das
in
aas
pop
dec
sbb
lods
ficomp
aad
add
ud1
cs
xlat
mul
cmp
cld
dec
jb
ins
inc
popf
lock
movs
cs
in
mov
pop
retf
jmp
mov
dec
int3
sbb
dec
sbb
xchg
pushf
dec
sbb
push
jmp
or
adc
popa
test
(bad)
shl
(bad)
sar
adc
pop
pop
imul
int
inc
cwde
cmps
test
xchg
xchg
cwde
mov
or
loope
push
fld
das
jb
fdivr
sbb
push
mov
(bad)
call
push
ins
jno
in
or
ins
sbb
arpl
movs
(bad)
ins
shl
dec
jae
fcomip
(bad)
jmp
adc
(bad)
xchg
scas
retf
mov
mov
push
push
dec
cmps
xchg
sbb
and
ret
imul
mov
jle
push
mov
mov
cmp
out
pop
xor
in
cs
mov
mov
and
and
or
icebp
jmp
and
(bad)
cdq
repz
sub
push
iret
xor
adc
shl
dec
ins
es
xchg
out
ds
inc
nop
int
lods
cwde
fld
inc
inc
jg
int
or
mov
jbe
inc
pop
pop
add
dec
push
pop
sahf
ss
fst
je
and
shr
add
es
add
test
add
jb
mov
dec
fsubr
rcr
jle
add
jne
mov
push
std
inc
addr16
mov
out
fld
aam
cmp
(bad)
sbb
bound
xchg
ins
and
and
lahf
or
(bad)
imul
xchg
movs
(bad)
les
call
xchg
and
inc
ficom
push
cmc
or
inc
adc
fmulp
push
fdivr
iret
or
addr16
mov
stc
xchg
pop
in
mov
or
add
pop
push
and
adc
sub
icebp
sbb
(bad)
sti
xchg
push
inc
xor
sbb
sbb
inc
mov
sub
jg
popa
out
pop
repnz
dec
fist
mov
mov
mov
std
cs
cmps
mov
aad
in
cmp
pop
inc
leave
jne
pop
xor
and
xchg
idiv
sahf
cmp
mov
outs
pop
xor
cmps
mov
fidiv
aam
and
call
push
outs
push
call
pop
bound
inc
shl
cmp
pushf
nop
mov
mov
shr
mov
sub
lds
cwde
add
cli
push
mov
jl
les
sbb
sbb
imul
retf
xchg
mov
jl
stos
retf
shr
(bad)
xor
movs
xchg
movs
stos
jge
clc
lods
sbb
cmp
cmp
addr16
sub
in
and
push
cdq
(bad)
and
mov
mov
adc
push
xchg
cmps
or
mov
mov
push
ja
leave
mov
call
cli
and
xchg
or
add
push
mov
sbb
faddp
sbb
arpl
xor
aad
and
test
out
inc
data16
jae
scas
shl
sub
push
hlt
stc
icebp
mov
mov
push
fnclex
xor
aad
sbb
nop
push
lods
and
mov
xchg
je
pop
fwait
jmp
jl
aad
add
push
sub
and
das
mov
mov
arpl
ficom
test
shr
test
(bad)
cld
xchg
xchg
adc
pop
dec
nop
ins
in
es
xlat
(bad)
cmps
pop
push
push
out
xchg
mov
and
(bad)
mov
shl
pushf
rol
adc
add
cmp
cli
push
dec
int3
xor
cli
jae
sbb
jecxz
sbb
je
jmp
mov
into
jno
xor
xor
cld
fadd
iret
inc
push
mov
xor
jecxz
loope
push
fs
inc
and
enter
sbb
and
mov
aam
mov
in
push
loope
jae
ja
scas
rcr
fild
sbb
leave
or
xor
pop
adc
lock
sub
add
out
dec
xchg
dec
and
dec
sbb
xchg
dec
aad
inc
add
dec
xor
adc
mov
adc
lea
mov
test
sbb
inc
scas
mov
xchg
aad
mov
add
std
test
push
mov
dec
inc
test
jp
jge
popf
cs
dec
add
adc
sti
ja
adc
inc
push
and
add
imul
repz
cld
mov
mov
(bad)
dec
sahf
inc
jg
mov
and
xchg
jg
xlat
jecxz
xchg
dec
cwde
mov
dec
mov
out
dec
and
pop
test
in
in
xor
in
or
mov
mov
mov
xor
pop
inc
mov
mov
stc
jecxz
xor
jae
leave
lds
aad
sbb
sahf
loopne
(bad)
fst
and
inc
add
dec
add
stos
add
sub
dec
jbe
adc
cmc
xor
inc
jmp
mov
cmp
lock
js
out
push
lock
mov
arpl
and
mov
inc
ss
sbb
fmul
pop
cmp
xchg
xchg
popa
xchg
xchg
jno
adc
adc
mov
jge
mov
jmp
mov
scas
pop
sar
sub
sti
push
jp
xor
lock
sub
arpl
push
in
in
scas
imul
or
fdivr
push
loopne
in
xor
out
call
pusha
cmp
test
pop
ins
add
bound
xchg
pop
jge
pop
das
jne
in
mov
loopne
retf
int
jmp
cmp
lods
and
cmp
movs
shr
in
jge
pop
push
mov
ret
cmp
call
xchg
jne
jg
ja
lea
mov
adc
enter
pop
push
jno
call
loopne
mov
not
call
ds
(bad)
jbe
and
rol
fistp
out
cmp
mov
frstor
pop
(bad)
sbb
daa
in
repz
xor
mov
adc
add
fistp
fs
pop
add
fwait
rol
inc
sahf
mov
arpl
jp
add
fsubr
out
lahf
pop
adc
xchg
(bad)
addr16
xchg
xchg
nop
push
inc
neg
mov
pop
les
sbb
mov
arpl
mov
ds
sbb
test
or
xor
out
ins
adc
cmp
jo
pop
sbb
dec
repz
pop
ficom
test
dec
adc
(bad)
sub
xor
imul
add
cmp
ja
cld
call
pop
fnsave
icebp
sbb
cmp
inc
ins
cmp
bound
adc
sub
mov
sbb
ds
sbb
push
cmps
pop
sar
inc
or
dec
loope
mov
sub
dec
add
mov
ins
cmc
movs
loope
inc
cmp
inc
data16
repnz
sub
push
add
sahf
stos
and
mov
or
sbb
sbb
test
fisttp
es
sub
sub
inc
push
cmp
jle
fmulp
push
push
sub
sub
xor
xor
sub
xor
fidivr
jle
sub
out
xchg
out
fsub
cli
pop
lea
int3
pop
and
test
sti
test
jecxz
pop
fdiv
idiv
push
push
pop
fsub
and
fld
data16
dec
add
in
xchg
in
push
cmps
in
mov
int3
jne
mov
in
and
pusha
leave
jb
mov
fstp
sub
dec
stc
and
mov
(bad)
and
cmc
and
jbe
jae
dec
mov
pop
jo
adc
or
shl
mov
sbb
mov
jae
dec
push
adc
inc
sti
mov
fucomi
jno
mov
popa
adc
pop
data16
add
pop
dec
cwde
mov
xchg
shr
(bad)
repz
xchg
fild
and
mov
shl
gs
push
add
and
mov
lahf
push
jecxz
enter
pop
xchg
fwait
sti
mov
add
leave
bound
cdq
gs
sub
mov
jnp
mov
lock
or
mov
xchg
cmp
inc
sub
jmp
jns
nop
mov
dec
jnp
retf
fstp
stos
cmp
idiv
xchg
ja
icebp
xchg
mov
push
cmp
imul
mov
jmp
cmp
call
pop
rcl
out
les
adc
pop
iret
ss
mov
mov
add
fld
out
fsub
fmulp
scas
fild
out
cmp
imul
std
in
pop
and
fstp
mov
pop
inc
les
cmp
lods
(bad)
retf
cmp
sahf
jmp
add
fidivr
movs
inc
mov
lahf
push
es
iret
xor
add
mov
cwde
lods
fdivr
xchg
sbb
inc
xchg
arpl
stos
jmp
inc
xchg
arpl
cld
out
mov
mov
movs
fs
inc
inc
mov
in
shr
pop
cwde
pop
ret
mov
call
mul
retf
dec
or
dec
sbb
les
xchg
std
sti
sar
loope
daa
pop
loop
push
push
mov
adc
mov
and
pop
das
pusha
or
xchg
fidivr
mov
mov
out
cmp
das
popf
cmp
xchg
fdivr
lds
or
and
mov
imul
push
scas
adc
ror
mov
sbb
mov
jmp
mov
test
mov
inc
leave
pop
adc
sar
jmp
push
outs
imul
repnz
(bad)
or
ja
xchg
and
fiadd
adc
out
adc
cmp
mov
dec
retf
inc
cmp
lea
icebp
add
cmp
sbb
pop
je
mov
adc
les
sub
mov
add
out
pop
and
sub
push
ins
in
sbb
out
ret
cpuid
jo
stc
repnz
mov
sar
js
pop
sub
inc
push
arpl
jb
stos
(bad)
xlat
scas
sti
jp
pop
sbb
xor
pushf
jbe
nop
jo
hlt
jmp
xchg
sbb
xchg
push
repnz
aaa
push
test
(bad)
jg
test
lods
xlat
das
cs
aas
cmps
stos
int3
jnp
iret
adc
add
pand
mov
dec
lock
lea
ret
jmp
xchg
ja
retf
loopne
pop
ins
mov
daa
loop
cmc
dec
jb
inc
(bad)
aas
fwait
push
sahf
mov
mov
or
pop
push
inc
mov
inc
mov
gs
inc
(bad)
popa
fidiv
pop
cmc
pop
cmps
cmp
xchg
add
and
xor
fisttp
retf
mov
aas
jbe
and
sti
add
into
out
lods
xchg
add
jnp
jbe
add
jecxz
icebp
sahf
add
mov
inc
imul
mov
mov
push
sti
mov
(bad)
adc
dec
shr
sbb
call
mov
out
or
push
push
mov
pusha
and
repz
jb
shl
ja
jae
aad
xor
jns
xchg
cli
(bad)
and
stos
jbe
je
and
and
cmp
mov
adc
pusha
popa
imul
cld
sub
add
jmp
mov
sbb
add
ins
fwait
in
sbb
and
xchg
hlt
push
jp
cli
std
dec
mov
mov
repnz
add
mov
sahf
push
hlt
push
frstor
loopne
push
nop
movsx
cld
inc
inc
add
xchg
jae
jne
mov
(bad)
test
push
add
test
stos
mov
rcr
test
dec
ffreep
and
sbb
sti
daa
fld
pop
test
loop
mov
xor
inc
ins
test
(bad)
rcr
mov
jg
loop
mov
fadd
cmps
push
imul
add
pop
or
(bad)
cmps
iret
mov
xchg
test
or
push
ds
inc
inc
pop
cmp
inc
or
push
xor
mov
mov
push
sub
add
clc
and
dec
mov
jg
xchg
xor
hlt
xchg
and
jecxz
jb
jae
sbb
outs
test
call
sub
sti
sbb
aas
push
and
cmc
pop
mov
sub
in
add
ret
push
cmp
cmps
push
repz
xchg
test
jg
jmp
fidivr
bound
jmp
jecxz
cmc
es
pop
push
fnstenv
mov
jg
pop
xchg
loop
cli
pop
stos
adc
xchg
cmp
sbb
ret
leave
mov
mov
enter
sub
rcr
adc
ins
pop
push
sub
pop
pop
dec
xlat
fist
in
sub
repz
(bad)
aas
iret
and
fidivr
xor
je
jb
push
daa
pop
xor
sbb
xchg
les
nop
stc
inc
mov
sti
(bad)
xchg
add
xchg
(bad)
(bad)
stos
mov
ror
sbb
inc
call
(bad)
fld
stos
xor
jnp
and
push
shl
call
mov
mov
add
adc
and
sub
sbb
mov
dec
lods
cmps
pop
add
in
xchg
mov
add
in
imul
mov
cmp
or
cwde
add
out
daa
mov
and
adc
dec
and
adc
inc
cmp
in
loope
ja
enter
and
inc
xor
jns
or
pop
xchg
cld
inc
in
pop
sbb
ja
ret
push
repz
sub
aas
sbb
gs
(bad)
jae
call
das
aam
outs
fimul
mov
test
dec
lahf
(bad)
into
ss
das
jl
aam
test
and
xchg
pop
sub
dec
out
or
jle
loop
dec
xchg
push
stc
mov
mov
mov
fild
mov
push
gs
mov
movs
aam
sahf
jmp
imul
dec
call
fnstcw
test
scas
jae
dec
sbb
mov
adc
(bad)
xor
test
(bad)
mov
or
jnp
shr
dec
test
xchg
xchg
sti
stos
iret
test
fstp
stos
bound
inc
outs
in
(bad)
shr
xchg
and
add
fld
sub
cmp
push
and
gs
push
cld
aam
jb
fdivr
ficom
push
jmp
rcl
cs
sbb
dec
aad
add
lods
and
jmp
fwait
or
jnp
push
push
(bad)
hlt
fsubp
pusha
fidiv
lock
and
jne
adc
mov
xor
push
or
arpl
mov
fisubr
xchg
imul
iret
out
in
and
or
dec
push
aad
pop
inc
mov
or
data16
(bad)
mov
mov
(bad)
mov
add
xor
mov
les
pop
inc
pop
cli
lods
inc
and
(bad)
dec
pusha
clc
jne
dec
mov
cwde
xchg
cmps
mov
test
clc
loop
and
cmp
test
outs
add
(bad)
icebp
ffreep
mov
(bad)
push
inc
and
jp
and
cdq
ds
pusha
mov
push
xchg
dec
adc
mov
icebp
cwde
test
jb
aam
addr16
gs
mov
ja
sub
mov
aam
jle
lock
stos
push
mov
shl
push
call
mov
lds
jnp
stc
in
jbe
cmp
mov
inc
push
xchg
test
mov
inc
movs
xchg
mov
scas
pop
movs
sbb
jmp
in
add
jecxz
mov
mov
mov
push
adc
(bad)
add
push
(bad)
test
inc
inc
or
pop
(bad)
xchg
xchg
aam
pop
jo
push
jb
add
sahf
arpl
dec
jmp
aas
cmp
push
push
xchg
jl
fidivr
jbe
or
test
push
xor
retf
jnp
and
mov
out
cmps
hlt
jns
call
adc
adc
repnz
adc
test
pop
movs
push
shl
cs
iret
sub
rol
mov
out
popa
mov
nop
mov
or
test
fild
retf
cmp
out
repnz
mov
jg
mov
jmp
mov
or
jne
sbb
mov
mov
cdq
enter
lea
jns
in
imul
sub
sub
jmp
mov
mov
cmp
xor
cmp
aam
push
leave
pop
jle
cs
leave
nop
fwait
jne
dec
cmps
dec
(bad)
sub
shr
inc
cmp
cli
jbe
mov
dec
(bad)
mov
xchg
arpl
add
in
shl
xchg
(bad)
mov
out
repz
daa
adc
and
pushf
dec
mov
leave
xchg
jge
dec
outs
pop
imul
xchg
cmp
mov
stc
arpl
add
cs
and
aad
out
xor
mov
xchg
xchg
adc
outs
mov
je
jb
lea
call
lods
clc
fstp
dec
ss
dec
xor
mov
jne
mov
or
inc
add
push
jle
pop
jno
ror
jmp
in
mov
sub
int3
xor
aad
mov
retf
lds
inc
or
push
imul
repnz
inc
pop
sbb
add
out
mov
call
lds
mov
adc
rol
or
cli
jp
cmps
cs
(bad)
ficom
or
fld
out
xchg
push
xlat
sub
add
inc
mov
push
jns
sbb
adc
cld
repnz
mov
fstp
nop
cmps
popa
repz
or
in
mov
mul
lods
or
push
dec
mov
aad
sbb
aad
in
mov
js
push
popf
fwait
mov
inc
cmps
dec
sahf
(bad)
test
dec
inc
outs
adc
sbb
xchg
rol
das
pop
arpl
push
xchg
movs
dec
pop
inc
test
pop
stos
add
out
pop
loope
int3
push
ins
pop
rcr
ds
jge
mov
jmp
clc
jle
out
and
push
scas
stos
push
mov
xor
ret
pop
cmp
shl
bound
jp
jb
imul
add
jl
repnz
(bad)
scas
repz
mov
push
(bad)
idiv
or
(bad)
dec
xchg
in
jb
add
and
and
jmp
ja
xor
int
(bad)
lods
out
cmps
cs
aaa
les
dec
xchg
adc
repz
in
cmp
add
scas
sub
jle
mov
xchg
(bad)
mov
int3
iret
aam
mov
mov
sbb
pop
call
jae
loop
movs
add
mov
mov
ins
movs
cld
movs
shl
sbb
adc
out
out
push
or
ss
push
xchg
movs
repnz
out
pusha
test
ins
out
push
cmp
(bad)
inc
and
xor
dec
inc
xor
dec
cmps
mov
data16
nop
in
ret
lea
mov
sbb
push
xchg
inc
arpl
clc
(bad)
jns
fcompp
jge
cmp
jno
xor
in
and
xor
add
dec
add
into
cmp
std
(bad)
mov
cmc
sti
cli
cmps
mov
mov
cdq
movs
mov
dec
push
call
not
mov
fimul
daa
movs
pop
inc
out
pop
pop
jl
(bad)
fistp
jb
out
(bad)
enter
js
dec
lods
movs
push
adc
test
xchg
cmps
cmps
scas
mov
shl
xchg
xchg
adc
mov
mov
sahf
daa
sti
pop
es
mov
dec
mov
ss
jbe
cmps
lock
add
fs
icebp
ins
fsubr
movs
call
test
add
pop
dec
int3
and
jae
xchg
(bad)
sbb
jb
nop
mov
sti
repz
shl
jmp
push
loopne
sub
retf
jmp
inc
push
mov
push
out
call
pop
sbb
cmp
gs
push
pusha
cmp
(bad)
xchg
jns
xor
mov
out
or
inc
mov
jnp
leave
xchg
xor
add
icebp
cmp
ficomp
and
cs
test
mov
xor
in
or
aas
fcomp
ret
ret
xchg
sub
xor
neg
(bad)
cmps
(bad)
cmp
sub
xor
arpl
imul
fild
(bad)
daa
bound
lea
loop
daa
mov
(bad)
jbe
arpl
lock
cwde
in
les
jecxz
jle
shr
adc
dec
pop
(bad)
jae
pop
jecxz
push
xlat
jo
clc
mov
enter
inc
xchg
jno
adc
shr
lods
cmp
jmp
fmulp
test
ficom
fs
xor
add
sti
jns
scas
fptan
xor
scas
in
ret
scas
call
mul
sbb
or
push
cmc
leave
mov
pop
push
inc
scas
nop
mov
jo
jl
enter
push
mov
test
dec
inc
ins
adc
cmps
dec
or
jmp
cmp
or
retf
xchg
adc
cmps
or
dec
loop
or
and
jo
dec
or
mov
(bad)
(bad)
int3
jmp
add
push
repz
fdivr
imul
push
arpl
fmul
jmp
mov
lds
push
xchg
(bad)
out
push
adc
pop
cmp
test
add
out
add
inc
push
dec
fldcw
sub
ss
xor
push
cld
stc
xor
fst
test
pop
jge
je
mov
add
cwde
cmp
mov
stos
mov
frstor
xchg
pop
rcl
je
ja
std
bound
or
jne
ss
(bad)
sub
cmc
popa
inc
mov
inc
mov
xchg
and
jns
or
inc
mov
and
(bad)
jmp
lahf
or
xchg
sbb
cmp
jg
mov
adc
xor
mov
das
(bad)
sbb
(bad)
int3
pop
xchg
fistp
push
jne
jnp
out
and
jl
movs
jno
or
in
cdq
arpl
sub
sbb
(bad)
sbb
or
das
in
cmp
adc
xchg
pop
cdq
push
and
adc
or
cmp
(bad)
int3
or
inc
mov
mov
push
nop
mov
pusha
push
enter
xchg
enter
sub
rcr
les
and
add
push
sar
mov
mov
inc
jmp
jmp
in
sub
push
or
(bad)
iret
outs
arpl
pop
cmp
arpl
or
cwde
sbb
inc
mov
xor
call
movs
lahf
(bad)
nop
mov
out
cmp
cmp
and
cdq
push
hlt
scas
in
aad
sar
outs
(bad)
repnz
sub
sub
jle
mov
leave
sbb
push
jg
ror
cs
inc
adc
xchg
mov
xor
pop
xor
js
adc
test
add
shl
mov
fwait
nop
sub
addr16
imul
aas
and
xchg
and
imul
mov
jo
in
leave
movs
push
shr
cmp
adc
mov
test
(bad)
sbb
cmps
push
dec
mov
(bad)
fisttp
test
mov
inc
cmps
mov
or
cmps
push
clc
jno
loop
add
add
or
jp
cmp
push
add
fwait
sahf
or
mov
push
xchg
pop
call
loope
xchg
sub
jge
nop
stos
add
retf
push
test
(bad)
mov
push
sub
stos
movs
imul
mov
shl
adc
dec
fsub
inc
jae
mov
mov
bound
xchg
add
xor
mov
push
test
(bad)
pop
fisubr
sub
mov
inc
js
jge
ins
dec
cli
cwde
mov
in
add
in
loop
add
lock
movs
mov
push
xchg
shl
daa
sbb
push
in
pop
cld
adc
(bad)
mov
ja
jle
mov
or
add
xor
mov
lea
pusha
dec
out
fwait
div
lods
arpl
cld
repnz
dec
sahf
loopne
cld
jne
ret
fcom
pop
cmp
adc
inc
and
movs
lds
gs
shl
inc
into
fstp
daa
and
push
popa
add
hlt
push
jnp
adc
outs
xor
je
call
push
inc
mov
mov
xchg
inc
xchg
ret
xor
xchg
cmp
enter
jp
mov
daa
jbe
jae
xor
hlt
or
xchg
adc
jbe
ret
fsubr
loop
pop
pop
cmp
mov
pop
cmps
jbe
push
push
jmp
fwait
inc
aas
repnz
mov
mov
stos
mov
pop
inc
test
add
or
mov
div
cmp
cld
int
cmp
dec
outs
push
ds
out
in
pop
les
cmp
push
cli
lods
(bad)
out
ds
or
enter
and
addr16
in
push
loop
sub
aas
scas
jmp
test
mov
cmps
mov
jge
pop
lahf
jp
cmp
inc
xor
jns
icebp
stc
loope
dec
sbb
mov
mov
jne
call
loop
ins
mov
pop
clc
pop
jb
mov
arpl
mov
jge
inc
xchg
xchg
cmps
dec
add
imul
mov
dec
fadd
sub
in
dec
gs
push
hlt
inc
or
jo
pop
cmp
push
mov
add
aaa
ja
cwde
sub
(bad)
rcl
scas
push
pop
push
mov
icebp
sub
inc
inc
std
(bad)
dec
pop
pop
loope
sahf
sbb
nop
jp
adc
or
cmp
sub
pop
and
bound
xchg
inc
data16
jge
jmp
stos
xchg
por
sub
fbld
push
xchg
cmp
test
or
cmp
mov
js
addr16
call
fnstsw
call
push
(bad)
and
mov
repnz
jnp
(bad)
arpl
rcr
outs
(bad)
cmp
imul
mov
mov
mov
hlt
pop
out
or
iret
mov
out
pop
imul
pop
jmp
pop
inc
loope
sti
mov
adc
pop
pusha
sub
adc
mov
cmp
xchg
outs
lock
loopne
outs
mov
call
mov
mov
sub
xchg
in
mov
push
mov
jle
nop
sbb
int
js
cpuid
call
mov
xor
test
mov
sbb
(bad)
gs
jg
pop
xchg
imul
icebp
add
dec
(bad)
out
jmp
pop
and
or
and
or
xor
pop
mov
stos
mov
in
(bad)
out
imul
pop
mov
xor
jnp
sub
xchg
mov
mov
lods
call
xchg
xor
iret
mov
xchg
push
stc
loopne
xor
xor
mov
ins
loop
bound
test
xchg
sub
leave
aas
inc
mov
xchg
loope
(bad)
and
add
pushf
outs
(bad)
cmc
mov
and
mov
enter
lock
imul
mov
ficomp
xor
imul
sahf
shl
mov
jecxz
xor
push
inc
stos
ja
sti
mov
cli
dec
bound
or
lea
test
cmps
mov
retf
icebp
lods
fnstcw
pop
or
nop
jno
add
mov
mov
add
xor
pusha
imul
fisttp
imul
lock
or
ins
xor
and
sbb
cmc
inc
cmp
leave
test
ja
mov
add
push
int
jle
movs
scas
inc
mov
(bad)
fisttp
icebp
xor
movs
(bad)
add
add
cmp
and
dec
scas
xor
stc
cmps
stc
adc
cs
sub
scas
adc
dec
push
dec
cld
test
mov
pop
aad
shr
ja
outs
mov
jo
clc
pop
clc
inc
or
dec
and
idiv
sahf
xor
ret
or
xor
or
iret
xchg
xchg
mov
je
push
xchg
aas
data16
lea
xor
neg
dec
jle
mov
xor
nop
add
mov
adc
sub
out
xor
iret
es
and
mov
jmp
mov
cmp
or
add
repnz
or
jnp
sti
cs
mov
stc
xchg
shr
push
xor
inc
repnz
mov
fild
std
adc
xor
pop
xchg
mov
xor
push
in
mov
(bad)
(bad)
data16
shl
dec
(bad)
or
xor
jl
fidiv
xchg
inc
lock
add
cli
loope
or
aas
popa
push
cmp
add
outs
div
or
ret
cli
and
dec
pushf
push
cwde
mov
repz
ds
sar
aas
mov
mov
and
scas
jle
cmp
xchg
mov
je
jb
pop
fsub
hlt
imul
cli
data16
ja
aas
sub
adc
inc
jno
and
and
dec
ret
sbb
mov
imul
out
shl
push
jecxz
loope
lahf
pop
inc
adc
add
and
repnz
mov
test
loop
adc
test
mov
inc
inc
dec
mov
out
jp
pop
push
es
push
cdq
inc
mov
dec
xchg
inc
(bad)
outs
aaa
push
cmp
add
fild
mov
mov
ins
shr
pusha
(bad)
mov
ret
xchg
es
xor
loope
or
ror
fbstp
xor
stc
popf
push
into
les
ins
adc
sub
jno
(bad)
test
mov
movs
jo
lods
push
and
sbb
pop
dec
jae
inc
jg
jg
fisttp
xchg
fimul
xor
jo
or
popf
js
test
(bad)
push
bound
lods
jmp
mov
dec
sbb
out
(bad)
push
jp
movs
outs
aaa
sbb
jecxz
mov
jp
adc
retf
or
ins
xchg
ins
fmul
mov
mov
inc
pop
call
ins
jmp
ds
into
push
in
or
push
lods
inc
dec
enter
mov
mov
ds
sahf
aad
mov
pop
pop
jmp
add
push
xlat
sub
lods
adc
ds
iret
mov
sbb
int
fistp
cs
or
std
pop
inc
mov
sub
inc
imul
(bad)
loopne
cmps
xchg
imul
xor
(bad)
sti
(bad)
ds
push
vpmadcswd
cwde
push
movs
sub
push
cld
out
aam
daa
ins
jo
cmp
xchg
fldenv
rcr
jl
retf
retf
and
pusha
enter
scas
jmp
repnz
jno
xor
push
pop
and
ds
gs
adc
retf
add
add
add
cld
daa
lahf
pop
and
in
dec
(bad)
push
xor
loopne
retf
cwde
mov
cs
xchg
add
fisub
(bad)
jb
and
xchg
or
inc
jmp
or
jo
arpl
xchg
adc
mov
cmp
jmp
sub
movs
enter
dec
or
ja
pop
push
ret
daa
test
sbb
push
ins
gs
pop
arpl
cli
mov
lahf
dec
rcr
sub
mov
bound
xchg
pop
into
lds
jp
movups
not
clc
xchg
dec
js
xchg
addr16
or
sar
inc
add
push
outs
fistp
es
pushf
in
mov
in
mov
sub
fcom
mov
out
pop
out
(bad)
cli
cmp
mov
int3
jmp
cmp
repz
es
adc
in
mov
xor
in
(bad)
pop
fwait
into
sub
enter
call
and
jae
ret
leavew
pop
pushf
call
test
inc
mov
jb
cmp
inc
mov
fmul
cs
hlt
cmps
and
cmp
cmp
inc
jae
inc
jae
shl
cmp
jnp
pusha
mov
mov
ror
out
out
mov
ret
je
jg
fstp
adc
pop
outs
mov
adc
mov
pop
add
cdq
call
rol
std
sub
in
cs
xchg
xchg
in
popa
dec
push
lds
lock
movs
inc
pusha
add
push
pop
push
dec
mov
or
or
jns
pop
adc
fadd
lds
ds
sub
adc
das
cmc
(bad)
sbb
cmps
mov
mov
div
inc
aad
call
xor
scas
sub
mov
cli
xor
xchg
lea
inc
push
and
pop
imul
pop
dec
mov
sub
loop
mov
pop
dec
adc
mov
jmp
ror
shl
push
mov
mov
dec
or
sub
pop
les
xor
pop
sbb
mov
jb
aaa
in
shl
xchg
cmp
std
dec
dec
ins
or
jg
popa
pop
push
rol
add
push
and
mov
or
out
les
xchg
jle
mov
sbb
jo
sti
push
mov
or
jbe
jo
dec
cmp
jecxz
push
(bad)
mov
inc
lock
mov
fisub
adc
loope
push
or
jmp
call
xor
ret
mov
mov
idiv
stos
xor
aam
js
adc
vmwrite
mov
mov
fidivr
movs
jl
mov
stc
add
jne
pushf
iret
cmp
cs
xchg
cmp
pusha
jmp
mov
adc
mov
shld
sbb
mov
jne
xor
call
pop
push
jnp
mov
retf
pop
inc
popa
mov
outs
xchg
test
call
push
call
daa
xchg
test
call
fidiv
dec
fsub
std
cmp
mov
mov
sbb
mov
pushf
lods
xchg
inc
and
sbb
pusha
in
jmp
test
mov
push
jmp
loop
sbb
sub
xchg
sub
(bad)
addr16
cmp
adc
jnp
sub
stc
addr16
jns
and
and
adc
xchg
pop
inc
loop
sahf
add
sti
xor
push
enter
sub
jle
add
push
inc
dec
push
jo
nop
fwait
cs
cwde
jg
mov
fstp
rol
dec
hlt
retf
and
arpl
lods
nop
rcl
inc
xor
push
not
mov
scas
leave
(bad)
in
cmps
add
jnp
cmp
stos
lahf
mov
ret
arpl
nop
push
les
xor
adc
inc
ror
cmp
add
and
mov
iret
enter
push
add
xor
inc
add
jnp
jno
or
aad
arpl
(bad)
jp
enter
mov
call
inc
fs
out
push
inc
pop
test
sub
dec
not
aaa
stc
dec
(bad)
jmp
data16
call
jge
jmp
adc
xchg
xchg
or
sbb
outs
dec
rcl
or
ss
cld
push
sub
bound
or
adc
clc
xchg
in
xor
pushf
lods
xor
xchg
and
jo
ja
mov
mov
dec
and
into
in
adc
shl
out
jb
mov
cld
jo
and
fs
je
sbb
sbb
and
sub
jno
daa
inc
fcmovnu
jl
mov
add
dec
cmp
out
iret
mov
xchg
dec
loope
icebp
xor
shl
sti
imul
cld
adc
sub
mov
and
adc
rcl
pusha
mov
in
or
mov
jle
or
xchg
dec
fst
pop
test
sbb
cmp
pop
inc
push
(bad)
pop
mov
shrd
and
cmps
mov
adc
out
popf
add
bnd
pop
adc
mov
(bad)
fwait
in
cs
movs
stos
inc
mov
aas
je
imul
lock
xchg
int
cld
jmp
nop
sbb
pcmpgtd
movs
xor
mov
ins
mov
or
mov
xlat
and
bound
add
push
test
test
pop
pushf
das
pop
stos
das
in
loop
sahf
cmp
inc
dec
xor
fadd
mov
push
pop
xor
jecxz
push
xchg
pushf
cmp
movs
test
dec
add
(bad)
out
scas
out
cmp
xchg
sbb
xchg
xchg
or
push
sbb
xor
push
jns
fist
inc
int3
and
xchg
pop
lahf
sub
cdq
imul
xor
clc
jge
sbb
jns
mov
add
push
mov
sub
(bad)
lds
movs
adc
jmp
mov
std
cmp
sahf
dec
sahf
jbe
mov
xor
pusha
inc
cmc
jle
cmc
dec
xor
jmp
aaa
out
dec
call
int3
pop
sti
pop
sbb
popa
push
sub
adc
fst
mov
mov
mov
test
inc
push
xchg
push
popa
push
fwait
cli
xchg
xor
out
jnp
pop
out
in
icebp
lods
push
adc
mov
inc
adc
(bad)
ror
pop
lds
push
mov
sub
xchg
out
ins
popa
or
adc
add
xor
mov
sbb
jecxz
cdq
dec
call
sub
loopne
xchg
js
fld
cmp
jb
add
scas
xor
hlt
inc
mov
lods
ins
xor
cwde
out
adc
inc
jb
dec
arpl
icebp
retf
sub
lock
stos
mov
sub
into
cmps
fdiv
and
ja
inc
(bad)
fimul
mov
pop
mov
ficom
scas
sbb
mov
sahf
add
mov
(bad)
dec
sub
jne
lods
push
push
push
aaa
dec
cdq
jb
and
jmp
cmp
mov
dec
mov
push
shl
imul
mov
call
adc
inc
dec
bound
push
jmp
scas
xor
dec
sar
push
mov
stc
(bad)
movs
(bad)
loop
lea
sahf
xor
inc
std
jnp
adc
fadd
xor
imul
ss
(bad)
mov
jb
and
sbb
mov
pop
add
cmp
cmps
sub
push
xchg
aam
dec
xchg
adc
add
aaa
or
mov
loope
pop
cmp
xor
sar
jae
mov
dec
call
sbb
inc
xor
mov
fdivr
xor
and
gs
or
mov
test
xchg
cdq
dec
mov
fcmovnb
adc
inc
cmps
mul
pop
pusha
icebp
push
xor
push
inc
retf
pop
push
cmp
sar
repnz
push
add
mov
dec
adc
shr
jmp
les
mov
and
and
shl
adc
cmp
stos
(bad)
cmp
inc
js
cs
pushf
sub
fisttp
xchg
out
int
repz
add
call
sub
jecxz
cmp
pop
fcomp
xchg
dec
push
jl
js
mov
or
adc
cld
ret
sub
rcr
je
jmp
ret
pop
inc
fidiv
sbb
cld
cmps
inc
jg
push
jb
xchg
lea
mov
sti
jno
fsubr
fdiv
jo
popf
ror
in
(bad)
push
xchg
cmp
xchg
mov
test
shl
or
arpl
add
xchg
xchg
dec
xchg
in
das
imul
in
adc
pop
inc
stos
lgs
nop
es
fild
xor
push
sub
sar
inc
int3
inc
xchg
test
push
sbb
xor
xor
sbb
mov
daa
sbb
inc
pop
push
mov
sub
jb
es
xchg
enter
mov
hlt
fst
imul
lods
mov
call
in
out
sub
xor
ins
scas
inc
pusha
cmp
jle
inc
pop
pop
jle
rcr
push
sub
xor
fyl2x
xor
add
mov
inc
adc
aas
or
push
xchg
sbb
aad
pusha
shl
mov
test
(bad)
mov
shl
stos
pop
mov
sbb
mov
xchg
ins
fcmovnb
stc
mov
or
sub
sub
pop
es
xchg
and
sar
adc
cwde
aad
jb
test
jns
dec
mov
(bad)
fsub
sub
movs
xor
std
fdiv
mov
ret
jmp
sti
gs
out
adc
xchg
xor
dec
sbb
in
push
jmp
inc
bound
sub
js
add
ins
cld
jmp
imul
cmps
ins
(bad)
mov
(bad)
push
loope
mov
out
and
jp
xor
pop
cs
cdq
(bad)
in
xchg
pop
sahf
ins
jg
jmp
cdq
call
arpl
add
call
ror
dec
add
nop
std
rol
enter
add
adc
mov
push
addr16
iret
push
std
mov
inc
int3
pop
add
push
jmp
dec
call
test
std
ss
and
stc
xchg
data16
mov
sub
hlt
mov
(bad)
and
call
and
icebp
push
mov
and
mov
inc
jge
cmp
inc
and
daa
mov
lahf
mov
iret
bound
pop
shr
or
pop
xchg
adc
cmps
push
rcr
aam
mov
in
and
pop
push
dec
retf
xlat
jae
loopne
adc
retf
call
xchg
fisubr
jmp
xchg
stc
cwde
sub
pop
sbb
repz
mov
adc
ret
xor
call
mov
mov
inc
adc
test
imul
xchg
sbb
xchg
lahf
adc
into
in
frstor
xchg
adc
or
mov
dec
pop
je
and
and
ss
pop
scas
cmp
xor
mov
outs
(bad)
repnz
test
std
out
xor
dec
test
push
sub
cmc
jg
in
loop
idiv
mov
mul
xor
inc
cmp
fist
xor
adc
dec
jmp
bound
adc
arpl
xlat
in
mov
out
adc
mov
push
cmc
push
push
pop
push
nop
fnstcw
popf
cmp
push
int
test
outs
das
stos
inc
inc
cs
push
loope
out
pop
(bad)
packuswb
inc
and
loopne
retf
bound
(bad)
fldenv
sbb
dec
add
or
cmp
cmc
dec
mov
out
fnstsw
lock
push
jmp
mov
imul
mov
adc
mov
sbb
mov
fld
out
pop
stos
fsub
in
push
or
xchg
imul
iret
xor
ror
jge
mov
bound
(bad)
stc
out
iret
and
sbb
in
mov
js
ds
ficom
xor
xor
lock
dec
xor
mov
fld
dec
nop
pop
scas
xor
pop
lods
ficom
mov
pop
sbb
loopne
ror
sti
out
clc
ficom
inc
call
sahf
shl
push
dec
ret
sbb
jno
jne
iret
add
ds
push
xchg
sub
jno
push
lahf
(bad)
xchg
lahf
int3
ret
stos
cwde
sbb
je
movs
adc
push
arpl
jl
push
data16
movs
or
jg
add
gs
fdiv
push
mov
imul
xor
xchg
(bad)
fwait
sbb
dec
adc
popf
pop
and
rcl
cmp
in
mov
rol
xor
repnz
into
in
loope
jne
popa
mov
daa
adc
push
retf
cmp
mov
aad
int3
mov
ds
(bad)
pop
push
fdiv
cmp
jbe
sti
cwde
arpl
in
aam
xchg
sahf
aam
ja
int3
mov
repz
add
mov
push
jge
mov
outs
mov
sub
xchg
sbb
dec
cmps
pop
mov
jae
into
arpl
push
add
xor
mov
repz
push
pop
xor
out
retf
add
inc
xchg
icebp
lods
sbb
(bad)
sub
addr16
movs
(bad)
push
pop
mov
les
das
(bad)
in
inc
or
xor
mov
or
mov
mov
cmp
jp
fisttp
out
retf
pop
scas
mov
cwde
call
jne
xchg
les
mov
dec
push
mov
pop
pop
imul
cwde
mov
pop
pop
(bad)
repz
in
cdq
inc
jl
rcr
and
pusha
pop
mov
mov
out
les
lods
out
jno
adc
loop
add
sbb
adc
je
ins
inc
mov
dec
ins
mov
cmp
imul
mov
imul
dec
aaa
mov
sti
loopne
es
aad
scas
push
imul
clc
mov
repnz
sub
push
es
mov
xor
jge
(bad)
(bad)
pushf
js
mov
push
xchg
pop
xor
cmps
addr16
ss
fst
(bad)
mov
dec
fcmovb
je
mov
sbb
hlt
inc
rcr
xchg
and
jge
in
(bad)
sub
jae
jl
adc
push
add
sbb
adc
inc
or
add
shl
clc
xchg
mov
cdq
add
mov
jae
jb
add
and
pop
add
jge
adc
hlt
mov
aam
jl
push
punpckldq
aam
and
inc
call
arpl
push
retf
xor
retf
jae
fs
inc
mov
cli
xor
xchg
pop
cmp
call
scas
lods
sub
shl
lods
jns
mov
imul
xor
mov
and
push
arpl
sbb
movs
mov
test
pushf
in
(bad)
jns
push
fsubr
jno
push
add
int3
xor
adc
loopne
pusha
aaa
dec
and
jp
shl
jp
push
test
xor
stos
daa
icebp
cmp
aas
popf
xchg
imul
clc
stc
push
push
xor
cmc
outs
push
push
jns
lds
adc
into
mov
jmp
mov
ret
test
mov
(bad)
sub
in
imul
xor
in
into
nop
mov
xor
sub
add
adc
jns
mov
pop
scas
int
mov
jo
mov
pop
mov
mov
movs
mov
sbb
jb
sub
mov
mov
mov
out
jns
push
dec
mov
mov
(bad)
mov
shl
add
out
push
sti
scas
push
scas
outs
call
xchg
dec
push
sub
cli
cmp
mov
cmp
lahf
jp
shl
dec
(bad)
rol
mov
or
adc
ins
fwait
icebp
shl
sbb
xchg
jl
adc
mov
push
mov
mov
popa
out
int3
dec
xchg
rcl
cmp
test
jle
cmc
adc
leave
lock
mov
test
ror
jnp
mov
in
mov
jecxz
test
ror
scas
sbb
cmps
popa
test
stc
(bad)
cmp
inc
inc
pusha
jns
outs
idiv
out
cli
call
adc
push
das
stos
sbb
add
push
xchg
pop
fwait
in
xor
cmps
pop
fiadd
cmps
jg
jl
ret
repz
in
stc
mov
cmp
inc
lock
cld
gs
inc
rcr
xor
pavgw
inc
pop
mov
lods
xchg
mov
rcl
pop
iret
in
jle
pop
xchg
xchg
(bad)
hlt
jge
stos
test
or
push
adc
js
mov
adc
test
(bad)
cwde
push
mov
xchg
xchg
dec
leave
dec
clc
mov
sub
shl
cdq
scas
sub
pop
and
out
push
(bad)
adc
mov
les
outs
add
nop
mov
inc
ins
adc
fist
lods
push
movs
adc
add
rcl
in
(bad)
arpl
mov
add
frstor
imul
dec
xlat
adc
xchg
fisttp
xchg
sbb
jbe
pop
mov
xchg
out
push
scas
jg
sub
call
mov
es
enter
idiv
lea
jge
fsincos
aam
std
and
fisub
or
pand
pop
cmp
out
adc
xchg
sbb
lods
adc
iret
fsubr
pop
leave
xchg
jl
and
inc
in
jno
push
ss
xlat
lds
mov
jb
arpl
call
jo
lods
inc
scas
xchg
pop
push
mov
jno
add
push
ins
add
inc
ins
fcomp
(bad)
xor
mov
mov
sahf
pop
dec
(bad)
pop
push
push
mov
rcr
les
inc
mov
push
xor
mov
mov
and
cmp
sbb
jne
mov
pop
ficom
mov
xchg
xor
xor
das
mov
ins
adc
push
(bad)
in
test
repnz
add
inc
sub
neg
jbe
imul
ja
cwde
mov
push
or
lock
jp
sub
jnp
and
shl
add
sbb
clc
xor
sti
xchg
sbb
outs
ins
ins
dec
cmp
mov
add
cmp
imul
and
jb
sub
rcl
add
bound
into
xchg
sbb
add
mov
xor
test
sbb
jbe
xor
stos
fdivr
cmp
cdq
jns
or
dec
sbb
mov
xchg
in
test
out
leave
jo
fsubp
cwde
ja
add
out
mov
and
mov
mov
mov
cmp
loope
(bad)
add
movs
dec
outs
dec
pop
pusha
jne
sbb
nop
mov
movs
sbb
es
popa
xchg
les
jnp
cmp
stos
mov
add
jl
retf
add
or
repnz
(bad)
adc
sar
cwde
(bad)
repnz
xchg
add
sti
sub
shl
shl
and
add
dec
scas
mov
daa
rcl
cmp
mov
and
pop
pop
neg
call
das
lods
inc
ds
mov
fadd
mov
sub
aas
cmp
shr
mov
adc
(bad)
retf
dec
ins
scas
loop
std
dec
into
sbb
sbb
in
mov
pop
sti
mov
mov
xchg
js
stos
rol
push
and
sbb
xor
jnp
stos
es
push
ret
aas
addr16
xchg
test
or
in
rcl
aam
jbe
das
int
or
mov
sbb
mov
pop
into
dec
es
movs
pop
add
add
push
into
loope
push
xor
in
mov
adc
and
jecxz
test
xchg
dec
jnp
mov
fcmovnb
loope
(bad)
mov
jmp
aas
gs
test
out
adc
adc
cmc
outs
push
repz
or
lds
dec
push
jmp
test
out
out
retf
and
dec
scas
xchg
mov
xor
push
push
out
in
adc
push
icebp
add
mov
cdq
sbb
sbb
mov
ret
or
mov
loope
je
mov
mov
scas
inc
or
lock
call
lods
pop
push
mov
sbb
fadd
adc
(bad)
mov
(bad)
ins
and
pop
scas
cwde
(bad)
jnp
fst
jo
into
icebp
lock
jb
jl
test
push
sti
xor
mov
dec
out
aas
jno
test
push
dec
adc
mov
or
or
imul
cli
out
lahf
sub
shl
enter
imul
sti
xor
shr
jnp
aaa
shr
push
rcl
out
aas
or
add
mov
inc
outs
and
sbb
mov
push
jne
pop
mov
or
data16
arpl
xchg
stos
add
lods
push
or
pop
int
adc
xchg
cmp
arpl
std
mov
mov
mov
or
jp
pop
mov
aad
loop
mov
iret
xchg
jno
sub
cld
cmps
inc
or
add
jge
fld
push
mov
stos
adc
mov
ds
sub
test
cmp
daa
jns
movs
jp
ror
js
outs
shr
dec
adc
jns
or
pop
cmps
inc
aas
jle
sub
mov
ds
push
mov
mov
bound
std
pop
xor
sar
inc
add
mov
addr16
(bad)
test
mov
add
mov
jns
mov
test
fdivr
push
ds
xlat
jo
jb
add
push
nop
(bad)
mov
rcr
ffree
(bad)
jl
push
jae
pop
(bad)
jmp
sysret
in
punpckldq
cmp
pusha
mov
xlat
xor
mov
mov
pusha
call
lods
test
xor
out
sub
mov
mov
clc
repnz
idiv
mov
sar
adc
stos
mov
(bad)
ror
fsub
pop
add
mov
pop
mov
and
jmp
imul
and
jno
push
fsubr
add
jp
or
push
cld
and
mov
enter
sub
aad
add
div
jl
sbb
mov
add
mov
mov
loopne
ret
scas
test
in
pushf
add
shl
loope
and
in
out
sar
or
pop
pop
ffree
out
into
xchg
mov
retf
int
lds
hlt
in
imul
cmp
scas
int
mov
xchg
loopne
jle
dec
movs
add
xchg
sbb
fcom
dec
addr16
test
adc
mov
fnstenv
fdivrp
retf
lock
xchg
jg
stc
pop
xchg
sbb
fst
or
enter
and
lds
jl
push
push
push
xor
xor
mov
push
call
mov
pop
mov
jecxz
dec
push
iret
(bad)
pop
or
xor
fs
aad
mov
cmp
mov
adc
add
sub
scas
pop
(bad)
add
aaa
dec
sub
es
popw
out
mov
int
pop
dec
mov
repnz
shl
xor
ror
fmul
(bad)
loop
push
xchg
pop
pop
jo
repz
mov
push
test
pop
jnp
ror
movs
out
xor
int
add
fistp
pop
dec
add
aaa
inc
bound
arpl
loopne
js
ret
xchg
das
xchg
push
cmp
div
mov
sbb
sbb
fstp
jge
mov
mov
xchg
mov
xchg
mov
sub
dec
mov
inc
(bad)
lfs
scas
push
imul
cmps
or
sub
ret
sahf
int
inc
inc
mov
pusha
add
sub
ins
push
mov
sbb
cmp
aam
sahf
imul
pop
mov
fsub
(bad)
push
jge
aam
test
adc
fdiv
xchg
mov
push
adc
fisub
test
inc
repnz
adc
adc
or
(bad)
pop
jmp
(bad)
sub
or
ins
cmp
ds
push
and
pop
jecxz
push
(bad)
stc
push
nop
scas
lods
add
lock
call
dec
pop
sbb
lds
xchg
sub
jbe
shl
mov
dec
retf
fwait
sar
iret
mov
dec
mov
stos
sub
outs
mov
dec
mov
dec
fist
pusha
mov
or
test
lahf
mov
cmp
ds
mov
lds
aam
mov
idiv
xchg
add
inc
inc
mov
das
stc
ja
inc
mov
aaa
ss
dec
gs
cmc
mov
mov
xchg
cmp
enter
scas
add
add
mov
pop
sub
enter
jl
cmp
adc
sub
lea
clc
xchg
dec
xchg
rcl
inc
call
cdq
push
xchg
and
mov
retf
lahf
into
call
pop
retf
(bad)
mov
jecxz
mov
je
aam
and
nop
mov
push
mov
mov
add
mov
dec
pop
jp
test
lods
imul
aas
dec
inc
int3
inc
xor
ret
test
jns
inc
sbb
sbb
mov
jmp
push
enter
jmp
ins
and
rol
stos
push
mov
les
mov
fst
inc
mov
mov
aaa
jge
push
adc
loope
cmp
call
adc
addr16
scas
cmp
and
adc
pop
out
jmp
into
inc
loopne
stos
push
adc
and
sti
aas
jg
add
outs
loopne
or
adc
(bad)
int
fsub
enter
pop
mov
mov
test
add
inc
or
shr
mov
push
pushf
push
pushf
mov
in
and
push
push
cmp
mov
push
adc
adc
ss
and
jne
pop
pop
mul
push
xchg
inc
sub
pop
push
mov
sub
mov
pop
pusha
movs
lods
aaa
out
int3
pop
xchg
test
nop
mov
int
nop
xchg
mov
std
aas
pop
pop
or
push
or
out
fnstenv
call
mov
adc
aam
cmc
fimul
jle
dec
cwde
cmp
mov
cli
and
mov
call
ja
int
mov
mov
xor
movs
stos
jecxz
pushf
test
cli
pop
add
cli
jl
sti
fst
add
shr
jne
fistp
sar
adc
fcmovne
bound
sub
fnsave
lods
retf
jb
xor
iret
xor
call
jb
sub
or
pop
ret
aam
popa
test
pusha
mov
mov
das
push
push
push
aas
in
fsub
stc
imul
std
popa
loop
es
push
pushf
sar
or
aad
and
dec
into
loopne
jl
lahf
jmp
cmc
sub
push
mov
xor
out
jno
mov
push
sbb
loopne
mov
adc
and
fwait
repnz
bound
outs
pop
mov
or
xor
or
push
jo
sub
dec
dec
inc
rcr
jne
into
dec
inc
xchg
add
and
mov
jne
lods
out
sahf
push
xor
jp
icebp
div
jbe
dec
cmp
cmp
ja
fsub
and
xor
(bad)
mov
retf
cmp
cld
push
cwde
push
add
in
inc
std
xchg
dec
mov
jp
mov
mov
mov
gs
cwde
sub
mov
pop
mov
or
retf
inc
sub
cmp
add
inc
add
and
movs
fadd
push
loopne
cmc
mov
pop
xchg
or
mov
stos
das
pop
add
ins
sbb
mov
int
mov
fsubr
mov
xor
cwde
int3
mov
xchg
rol
xchg
mov
ror
addr16
add
jg
push
add
cmp
movs
imul
lock
push
imul
pop
stos
mov
push
leave
(bad)
xor
cmp
mov
and
inc
add
pop
lahf
ss
pop
jnp
sbb
adc
push
jl
mov
or
mov
jle
mov
mov
out
ins
jp
jns
push
push
ds
mov
dec
mov
in
loopne
ret
pop
push
imul
call
cmps
xor
push
rcl
mov
mov
push
add
mov
and
cdq
cdq
std
add
lods
sbb
data16
call
sub
(bad)
and
call
leave
or
and
push
sub
mov
repnz
in
sbb
and
sti
push
into
sbb
imul
popf
and
int
jle
xchg
imul
mov
lea
out
xchg
jns
std
push
mov
sub
push
clc
xchg
mov
fstp
pop
jnp
pop
mov
fwait
(bad)
out
sbb
addr16
ret
stc
adc
cmc
fldenv
jl
(bad)
in
das
ss
mov
test
xor
inc
scas
add
xchg
pop
xchg
imul
xor
data16
jmp
add
push
retf
mov
ds
jbe
movs
in
adc
neg
int3
adc
xor
ret
xor
stc
leave
mov
xchg
mov
jle
sbb
stos
mov
adc
cmp
push
xchg
out
icebp
pop
pusha
add
push
out
call
push
push
or
add
aaa
xchg
loopne
jge
arpl
or
xor
push
movs
cmps
rcr
xchg
ss
dec
xchg
outs
jle
imul
mov
cwde
fnsave
stc
mov
(bad)
adc
lahf
dec
test
je
add
mov
rol
sub
cmp
shl
sbb
in
xchg
hlt
xchg
jb
(bad)
fdiv
fdiv
jmp
shl
inc
test
xor
jb
xor
sti
mov
sub
shl
adc
lock
(bad)
call
dec
inc
repnz
push
sbb
mov
or
mov
js
ror
add
mov
aad
ror
push
daa
imul
dec
or
cmp
xchg
sbb
and
sub
jns
dec
inc
addr16
mov
jae
add
loopne
rcr
xor
xor
inc
push
scas
shl
xrelease
sub
stc
fisttp
jb
cdq
into
mov
jns
test
pop
adc
jnp
push
jecxz
ja
lock
cmp
std
sub
lock
arpl
das
jmp
loop
std
inc
sar
jmp
lahf
sbb
jl
mov
stos
imul
sub
test
scas
retf
rcr
inc
in
imul
fs
or
inc
repnz
(bad)
(bad)
loop
mov
push
retf
xchg
sub
cli
rcr
aas
jmp
xchg
shr
mov
es
mov
pop
or
xor
leave
inc
lock
int3
cmp
mov
push
pop
mov
mov
pop
cli
pusha
jl
xchg
mov
xlat
fdiv
add
mov
loope
push
and
xor
push
pop
adc
in
jle
mov
push
add
test
ins
je
adc
or
pop
add
jle
addr16
mov
cmps
cmp
mov
push
(bad)
fist
or
jmp
push
lea
inc
out
adc
call
and
or
ds
cmp
mov
adc
(bad)
jmp
adc
call
mov
aam
or
cmp
sahf
out
repz
mov
movs
adc
stc
sub
inc
cmps
je
ficom
sar
in
or
lods
int3
xchg
aas
rol
loope
inc
mov
ret
cmc
into
lods
movs
test
jmp
into
push
sbb
jge
mov
mov
or
cld
daa
sbb
shl
repnz
retf
fwait
aaa
(bad)
(bad)
mov
push
mov
lea
jns
mov
cmp
jbe
fcom
mov
in
pop
scas
(bad)
ss
clc
push
or
cmp
pop
fwait
les
test
add
pop
js
mov
mov
lods
add
popa
mov
and
and
mov
das
gs
int3
repz
mov
xor
adc
jl
mov
adc
and
or
cmps
cdq
jo
dec
xchg
(bad)
push
pusha
fnstcw
jecxz
(bad)
add
mov
mov
hlt
aad
jb
cs
ret
mov
or
mov
and
sar
aaa
sub
movzx
(bad)
scas
mov
cld
sub
mov
mov
clc
loope
cwde
daa
leave
rol
call
test
xlat
dec
in
add
iret
retf
inc
rol
aaa
xor
cli
dec
mov
sub
je
mov
jecxz
or
(bad)
mov
adc
and
cdq
fnstsw
mov
push
into
jl
frstor
xor
sbb
cmp
mov
push
dec
idiv
mov
mov
call
pop
mov
xor
add
ja
call
push
adc
call
mov
scas
(bad)
mov
es
push
and
movs
stos
out
xlat
(bad)
and
push
popf
dec
(bad)
pop
and
adc
mov
int3
daa
in
sbb
mov
cmp
imul
pop
ret
popf
add
jmp
iret
aad
xchg
stc
sub
adc
mul
or
jg
cmp
xor
enter
mov
icebp
inc
ds
pop
iret
xor
inc
pop
pop
xor
jge
leave
or
pop
es
xchg
comiss
cmp
pop
cmc
xchg
fist
cmp
mov
inc
jecxz
ja
jo
sub
mov
test
adc
pushf
out
mov
add
dec
xor
nop
push
push
add
adc
inc
pop
mov
jno
lahf
add
loopne
lahf
aam
shr
stc
xor
test
sbb
outs
mov
bound
aad
jno
lock
jbe
test
pop
js
sub
js
int3
out
scas
sub
aam
and
in
leave
mov
push
je
jae
clc
pslld
in
xchg
out
fidivr
xbegin
sbb
clc
fbld
sub
jmp
nop
aas
xchg
out
sub
pop
test
inc
xor
int
(bad)
idiv
xor
popf
test
aaa
jb
ss
shr
ss
or
cmp
std
cdq
sbb
mov
(bad)
ja
ret
inc
leave
or
jle
cmp
(bad)
lds
call
sbb
ds
outs
and
or
ret
inc
inc
aam
cmps
out
mov
sub
movs
and
es
retf
loopne
push
pop
mov
shl
call
std
stos
popf
xchg
pop
shr
dec
call
pop
add
sbb
add
leave
xchg
mov
rcl
adc
cdq
or
movs
dec
nop
cmp
mov
xchg
sub
fmul
js
arpl
fcom
dec
pop
movs
scas
dec
xchg
fiadd
fild
pop
add
cwde
adc
pop
fwait
ds
mov
rcr
dec
div
lods
retf
mov
adc
(bad)
stos
int3
(bad)
lods
loop
xor
movs
sti
sbb
sub
sub
aaa
je
mov
(bad)
lods
dec
cmp
jne
and
push
in
cmp
hlt
popf
mov
out
adc
push
sti
push
push
sub
cld
int
shr
inc
out
add
je
push
sbb
sub
in
mov
fs
inc
hlt
xchg
or
sub
rcr
movs
or
jns
or
mov
push
out
(bad)
inc
xchg
sub
ret
jb
push
jp
cmps
rcr
dec
and
and
add
mov
scas
popa
das
and
loopne
xchg
(bad)
lock
inc
aaa
(bad)
stos
or
retf
jecxz
add
sub
test
mov
popf
retf
es
call
xor
dec
or
inc
xchg
or
cmp
ins
sbb
daa
jae
gs
fcomi
dec
mov
das
int
sahf
aaa
inc
cdq
popa
(bad)
in
pop
loopne
push
bound
xor
inc
cmp
sub
repz
mov
sub
addr16
jno
cmp
xchg
mov
or
mov
js
ror
fsub
fwait
outs
outs
add
or
out
and
das
and
mov
pop
dec
inc
cmps
aaa
shl
imul
(bad)
std
scas
call
cmp
nop
add
xor
xor
jnp
int
xlat
stc
mov
retf
mov
jae
daa
inc
or
fdivr
outs
pop
adc
rol
fld
lock
pop
outs
mov
leave
pushf
icebp
mov
mov
mov
mov
cmp
jmp
leave
inc
sub
sbb
adc
fld
pop
cdq
fsub
std
mov
inc
dec
and
sbb
int3
das
jge
and
adc
jmp
dec
fwait
jnp
fcmovbe
fldcw
test
add
jl
imul
js
dec
xor
inc
dec
rcl
jne
mov
test
fwait
gs
push
ins
scas
xor
push
push
inc
fdiv
dec
xor
or
sub
add
(bad)
fwait
xlat
mov
cmp
lock
jecxz
outs
adc
sbb
icebp
jae
add
push
int
push
pop
jecxz
xchg
push
mov
mov
sbb
xchg
(bad)
repz
imul
mov
cmp
inc
inc
sahf
mov
scas
sti
push
pop
movs
test
inc
adc
lea
popf
sbb
adc
shr
or
mov
fcom
inc
mov
mov
mov
das
mov
push
add
movs
call
fist
into
mov
ret
xchg
retf
and
in
xchg
dec
jae
imul
cmp
xchg
dec
jae
xor
leavew
out
and
jmp
movs
xchg
icebp
pop
gs
sbb
adc
push
ret
hlt
aad
lea
cmp
je
imul
inc
push
int3
cmp
sahf
mov
je
mov
xchg
data16
hlt
pushf
dec
jp
in
repz
cdq
es
ror
add
xlat
cmp
scas
sub
adc
push
and
les
add
sbb
loope
push
repz
adc
inc
xchg
inc
cmp
fdiv
shr
pop
pop
jo
ja
jbe
jno
push
imul
ins
gs
pop
or
stos
dec
and
fadd
(bad)
push
xchg
fnsave
mov
pushf
sar
es
mov
call
test
sbb
sbb
int3
jmp
xor
mov
nop
mov
imul
cdq
mov
out
fisttp
xor
and
mov
jecxz
hlt
int3
cmp
not
mov
rcr
int
es
push
cmps
xor
ror
retfw
test
maxps
jmp
adc
xor
stos
push
stos
cli
dec
xor
adc
jno
stc
fsubr
push
push
inc
inc
cmp
jno
push
repz
mov
imul
lahf
nop
mov
je
popf
or
cmc
mov
leave
lods
cli
cmp
enter
push
jnp
in
fldenv
pop
ror
pop
and
outs
outs
scas
jnp
pop
cmp
mov
pushf
cmp
inc
popf
dec
rol
xor
pop
or
pop
cmp
call
and
xor
(bad)
sahf
jmp
adc
sbb
push
dec
cmp
dec
hlt
jbe
mov
into
adc
ficom
jl
sub
outs
pop
dec
adc
ins
lock
pushf
movs
mov
sbb
push
mov
cs
push
mov
mov
cmp
adc
jnp
add
in
push
xor
cli
jb
add
jae
repnz
jnp
out
mov
data16
ret
adc
mov
repnz
mov
sbb
pop
dec
inc
xchg
mov
sbb
inc
outs
stos
sar
push
add
add
gs
ret
xor
or
fwait
cmp
mov
je
and
pushf
mov
call
enter
mov
ja
cmp
aad
xchg
cmc
popa
scas
js
xchg
ficomp
mov
lahf
xor
daa
movs
stc
sub
jmp
mov
mov
jp
jp
lock
(bad)
push
inc
dec
push
scas
cmp
sub
int
cwde
mov
pop
in
fs
xor
xchg
push
lods
in
ins
sub
xchg
pushf
push
out
pop
jno
or
das
fs
push
dec
imul
ror
loop
jmp
ret
popa
push
sub
adc
push
or
pop
push
int
inc
push
inc
pop
test
shl
scas
jmp
leave
sti
and
loop
inc
into
sub
imul
bound
dec
sub
in
fnstenv
add
sbb
jo
sahf
sahf
sub
and
stc
dec
sbb
fisttp
push
and
icebp
push
js
ins
js
sbb
aad
or
cmp
fs
dec
lea
push
cmp
cmps
jnp
mov
sbb
jg
or
cmp
jl
sbb
out
outs
sbb
mov
cli
inc
ror
ja
cmp
fmul
cmp
stos
shl
fild
jle
xor
mov
neg
jo
out
in
mov
add
pop
push
ret
in
jmp
call
jmp
inc
test
stc
out
in
mov
test
pop
retf
dec
push
int
push
clc
jl
xor
pop
into
push
or
mov
test
jo
jmp
pop
fwait
stc
push
leave
inc
add
dec
xchg
cmps
cmc
sbb
cmp
push
movs
aaa
aam
les
ror
push
push
sbb
mov
out
aas
mov
add
or
pop
je
sahf
inc
mov
add
or
repz
dec
and
jmp
in
sub
xor
dec
cmp
out
mov
ret
sbb
xor
sbb
jmp
mov
dec
sub
jg
inc
ss
cmp
mov
xchg
stc
push
repz
cmc
mov
arpl
and
daa
repnz
lods
dec
lahf
test
loopne
cmp
lods
fdivr
xchg
lahf
sbb
push
scas
das
and
sbb
retf
repnz
mov
sbb
test
cmp
fld
or
jmp
mov
push
mov
xchg
enter
scas
aam
jecxz
cld
push
push
pop
(bad)
in
mov
daa
bound
out
jnp
clc
fs
scas
mov
je
push
stos
fadd
(bad)
leave
arpl
push
mov
arpl
jp
adc
mov
push
push
retf
scas
fadd
mov
push
jge
cwde
shr
adc
dec
test
aas
mov
mov
jbe
aas
fisttp
mov
pushf
gs
mov
sti
sub
mov
repnz
das
shl
jp
dec
push
test
pop
aam
inc
test
test
cli
xchg
push
stc
add
cmp
add
stos
adc
ret
shr
std
leave
and
push
push
adc
inc
xchg
jno
add
jne
or
or
mov
vsubps
mov
mov
nop
mov
adc
iret
std
pop
mov
ret
pop
push
scas
push
cmp
ficom
inc
or
add
ficomp
mov
xor
jl
mov
xor
push
pop
jge
jg
mov
sbb
xchg
fisubr
mov
ret
sub
outs
imul
out
or
xchg
jnp
or
xchg
adc
test
scas
pushf
adc
xor
sbb
lods
enter
lahf
jno
pop
dec
xchg
lds
ins
in
leave
repnz
ret
daa
aaa
lods
daa
cli
add
xchg
ret
pop
lock
(bad)
pop
adc
int3
lods
jecxz
fadd
cli
fistp
arpl
and
push
jge
jecxz
mov
movs
mov
or
std
sbb
daa
aad
cs
out
inc
cmp
xchg
sahf
sbb
arpl
je
inc
sar
scas
xor
dec
jl
push
or
in
ins
or
aam
and
cmc
or
call
xchg
in
mov
mov
sub
fisub
adc
or
mov
pusha
jnp
sbb
pop
mov
stc
pop
pop
cmp
(bad)
cld
jne
xor
jge
call
shr
rol
mov
int
mov
adc
jo
hlt
js
(bad)
repz
and
sar
jbe
push
jns
inc
sub
nop
mov
push
cdq
test
les
iret
mov
or
call
cmp
call
mov
movhps
push
ror
pop
push
(bad)
xchg
sbb
jb
sub
nop
(bad)
dec
pop
xchg
pop
inc
retf
shr
leave
(bad)
(bad)
jnp
loope
mov
ds
mov
sub
std
xchg
cmp
adc
cmp
inc
xchg
maxps
in
xor
mov
pop
sub
sar
aas
(bad)
in
adc
adc
push
outs
sub
mov
in
xchg
mov
out
push
loop
push
enter
jmp
(bad)
lock
mov
mov
sbb
neg
retf
int3
pop
(bad)
(bad)
xor
pop
mov
xchg
call
mov
mov
or
dec
mov
in
cmp
fwait
xlat
push
popa
stos
fsub
stos
xlat
(bad)
ud0
dec
mov
outs
push
ret
ins
or
pushf
jo
retf
adc
or
or
cli
jns
fs
bound
lea
(bad)
outs
cmp
xor
out
xlat
outs
aas
xchg
scas
or
jns
xchg
retf
push
cmps
ffreep
std
sbb
ficom
sub
int3
pop
data16
xor
xchg
push
enter
dec
pop
test
mov
in
data16
push
outs
mov
xchg
imul
push
retf
loope
or
and
in
(bad)
cmc
retf
mov
clc
shr
loop
sub
aaa
fmulp
cmp
xchg
jbe
xchg
dec
dec
dec
fisub
shl
pop
int3
lea
push
sbb
aas
mov
add
add
inc
aas
mov
shr
fs
xchg
in
and
(bad)
mov
and
cmp
pop
mov
shl
pop
dec
(bad)
cli
pop
push
movs
sub
cld
mov
cs
ins
mov
cdq
cmp
or
add
xchg
je
stc
stos
lock
push
loope
jnp
mov
arpl
rol
pop
test
test
jns
and
loopne
(bad)
mov
cmp
cwde
scas
retf
repz
jl
adc
das
aad
jae
jmp
mov
ja
dec
cmc
add
mov
pop
inc
lahf
cmp
push
push
xchg
pop
pop
xor
push
mov
out
or
daa
call
dec
lds
dec
jmp
pop
popa
fs
push
add
cmp
daa
icebp
std
test
movs
inc
out
mov
mov
mov
mov
aaa
or
stos
or
pop
pop
mov
xor
inc
pop
xchg
pop
push
cli
ds
jle
dec
mov
sbb
pop
test
outs
aas
sub
add
movs
in
shr
fist
popa
fsubr
pop
test
fdivr
lock
inc
movs
(bad)
icebp
pop
aad
or
loope
in
add
fstp
movs
data16
mov
cmp
sbb
pop
inc
sbb
and
imul
aam
or
sti
popa
les
jl
inc
les
xor
arpl
pop
jnp
mov
sti
ja
push
movs
mov
or
sbb
fmul
jg
sar
xor
cli
sahf
sub
mov
ins
pop
xor
fldcw
dec
or
or
push
jmp
mov
mov
or
lods
add
xor
bound
outs
fs
inc
mov
push
lods
(bad)
fimul
mov
test
cwde
popf
and
cli
mov
in
jnp
addr16
test
popf
pop
stos
js
int
jo
xchg
pop
sar
jae
out
(bad)
imul
in
cmps
push
mov
push
aam
fcomi
sub
lods
cmp
loopne
call
jmp
pop
add
(bad)
loopne
inc
jno
mov
push
mov
pop
ret
ds
int
jbe
push
loope
xchg
xchg
movs
ror
icebp
push
mov
je
mov
push
dec
cmp
outs
mov
sub
adc
loop
call
mov
and
pop
add
lock
sahf
ret
or
xor
cmp
or
pop
mov
jmp
cmps
mov
sub
mov
push
cmp
sub
push
test
pop
xor
add
movs
bound
xor
loop
sbb
mov
(bad)
rcl
jne
xchg
inc
sti
or
jp
sub
in
dec
pusha
xor
add
adc
cmp
sub
xchg
mul
scas
(bad)
(bad)
leave
push
mov
mov
sub
jo
fcmovnbe
adc
imul
ins
push
popf
fistp
jae
sub
dec
fs
sbb
je
push
mov
adc
sub
sub
fidiv
or
stc
mov
shr
lods
xor
jns
popf
mov
sbb
lods
adc
jp
cmp
clc
jmp
pusha
scas
pop
push
inc
sbb
(bad)
fisubr
sub
mov
adc
lods
call
out
dec
cld
fisttp
mov
lds
and
mov
ret
add
aas
add
pop
ins
mov
adc
or
mov
aas
push
push
mov
shr
push
mov
sbb
xchg
dec
lock
push
xchg
jne
cmc
outs
ins
repnz
outs
mov
(bad)
out
mov
adc
xor
mov
inc
sar
or
pop
xor
rol
sub
clc
lea
ins
ficomp
jle
rcr
xchg
inc
outs
dec
add
aad
mov
(bad)
popf
in
mov
jbe
out
cli
adc
adc
inc
jge
fbld
cmp
(bad)
outs
popf
(bad)
out
nop
cmp
push
jle
pop
loop
inc
out
shl
lds
adc
push
mov
pop
sub
jmp
out
pop
in
aad
repz
and
hlt
(bad)
scas
dec
dec
cmp
xchg
inc
jl
call
pop
shl
jmp
jge
int
xchg
sbb
mov
mov
xchg
sub
sub
pop
cmps
mov
out
and
rcr
ret
movs
sub
inc
jl
xor
test
pop
mov
fldcw
mov
fist
sub
pushf
pop
daa
cmp
inc
call
jb
int3
mov
jmp
rcl
cld
test
mov
int
cmc
mov
mov
fs
mov
in
mov
imul
jecxz
xor
loope
push
neg
pop
bound
dec
out
out
pop
adc
mov
cmps
mov
sbb
enter
aas
test
ror
mov
inc
push
mov
mov
cmp
test
pop
mov
jmp
ret
xchg
mov
xchg
add
xchg
jne
sbb
jg
leave
jmp
sar
inc
(bad)
inc
inc
neg
bound
adc
dec
outs
pop
pop
pop
stos
jnp
push
ins
test
test
inc
mov
xor
lahf
aam
sbb
adc
nop
sbb
arpl
aam
(bad)
repnz
je
xor
sahf
push
adc
js
push
dec
idiv
out
inc
cmp
add
inc
push
popa
jmp
push
(bad)
cwde
pop
xor
mov
xor
mov
shl
mov
sbb
xchg
dec
and
jmp
fiadd
push
popf
add
dec
jp
stc
jae
dec
imul
jecxz
mov
movs
mov
and
ret
push
fs
aad
cmps
data16
mov
inc
cmp
aad
icebp
dec
sti
mov
stos
xor
cld
stc
sub
call
mov
clc
call
into
call
cmp
add
mov
push
dec
leave
pop
inc
jnp
jge
int3
mov
int
sub
xchg
icebp
inc
pop
or
rol
mov
into
xor
icebp
clc
shl
hlt
jmp
ret
clc
shl
xchg
cdq
out
mov
int3
int3
push
mov
dec
js
out
sub
into
inc
fnstcw
sahf
sub
js
dec
lea
(bad)
stc
popa
je
jnp
adc
xchg
(bad)
outs
js
retf
shl
in
hlt
dec
lods
jle
scas
stos
(bad)
ds
out
sub
pop
das
loop
test
xchg
lea
int3
jnp
sbb
out
mov
cmc
movs
add
sub
jmp
repz
jmp
add
(bad)
out
adc
cs
pop
pop
and
loopne
das
(bad)
icebp
xchg
inc
cli
nop
pop
push
pop
int
leave
sbb
dec
outs
pop
scas
pop
ins
jmp
ja
xchg
push
xchg
sub
pop
fcomip
push
scas
rcl
xor
dec
mov
mov
stos
xor
addr16
xlat
or
jle
inc
daa
sahf
aaa
jmp
test
xchg
push
mov
jmp
pop
neg
in
cmp
std
scas
leave
scas
shr
daa
call
icebp
sti
xor
loope
cmp
adc
mov
lahf
mov
jne
and
jmp
scas
dec
jmp
clc
idiv
mov
mov
popa
jmp
xlat
test
aad
fs
mov
jle
jo
pop
mov
bound
ja
stos
jne
jns
fsub
xchg
cmps
sahf
xchg
sbb
push
out
aam
mov
xchg
mov
push
addr16
jecxz
mov
out
fs
mov
xchg
xchg
jmp
addr16
jae
jne
mov
inc
test
pusha
xor
shr
sub
inc
mov
neg
lahf
ja
(bad)
jecxz
jecxz
and
imul
cmps
jne
lods
fwait
sbb
sbb
idiv
mov
aad
jmp
rol
or
pop
fstp
ret
rol
fisub
in
mov
mov
sbb
call
push
lahf
ds
pop
std
sub
enter
xchg
loop
pop
adc
ret
nop
dec
clc
in
retf
jbe
out
xlat
sti
pop
test
mov
sar
sar
mov
inc
sub
aaa
add
mov
rol
out
adc
fucom
sti
and
fist
xor
pop
out
sbb
inc
dec
xchg
jmp
ror
cs
sub
adc
ror
out
(bad)
sbb
dec
jmp
retf
mov
and
ss
push
aaa
rol
int
imul
pop
mov
mov
sub
jne
xlat
popf
xor
jmp
sub
sbb
inc
xchg
push
(bad)
push
dec
push
push
pop
push
mov
mov
add
sub
outs
fwait
sar
(bad)
xor
xchg
pop
xor
mov
push
ret
rcl
cmp
cmp
fbld
xchg
rol
std
jge
je
inc
xchg
or
push
dec
inc
push
(bad)
mov
(bad)
jmp
xor
test
mov
jbe
xchg
lods
xchg
mov
cdq
and
or
mov
sar
mov
push
push
scas
adc
and
cmp
mov
repz
test
stos
inc
lds
push
add
pusha
fwait
push
popa
pop
push
and
dec
pusha
or
and
adc
in
and
sub
mov
test
mov
or
push
sub
fs
mov
sbb
outs
enter
mov
lea
dec
jne
shl
cmp
into
xlat
imul
mov
adc
outs
cmc
rcr
mov
jne
cmps
imul
cdq
push
dec
jbe
mov
test
sub
add
aas
pop
imul
popa
push
and
jmp
mov
pop
das
inc
cld
ins
loope
movs
pop
pushf
mov
(bad)
cdq
pushf
call
mov
into
push
inc
jne
lods
pop
rol
pop
xor
push
xchg
pushf
adc
xchg
mov
sbb
add
js
dec
cld
sbb
icebp
push
xchg
test
rol
jge
jle
pop
out
ins
cs
lahf
push
push
xchg
inc
std
xor
or
or
cld
fsubr
mov
mov
icebp
or
xchg
mov
(bad)
(bad)
test
adc
dec
shr
ror
dec
fcom
xchg
aam
xchg
(bad)
and
pop
or
es
lds
shl
cwde
mov
ret
sahf
sbb
cs
mov
mov
add
test
les
nop
gs
aam
inc
or
popf
jb
iret
mov
cmps
test
sar
xchg
repnz
imul
ss
shr
sti
jge
or
ins
cmp
frstor
mov
push
push
xor
mov
repnz
push
and
sahf
push
xchg
popa
mov
data16
inc
add
test
dec
ins
loop
test
imul
mov
push
mov
pop
or
jmp
rol
scas
and
aad
stos
push
push
sub
ins
fdiv
ret
in
imul
xchg
xchg
push
inc
push
push
xchg
mov
enter
movs
dec
mov
(bad)
xor
div
mov
imul
push
push
pushf
cmps
ss
cmp
jns
add
stos
mov
ins
mov
pusha
inc
jge
call
rcl
xlat
push
imul
xor
sahf
lea
or
loope
mov
das
push
aaa
mov
das
mov
out
mov
sbb
jae
inc
or
cld
lods
into
sbb
push
xor
cmp
push
add
stos
mov
repz
mov
test
xchg
jge
pop
js
push
retf
cmp
sbb
movs
je
in
inc
repnz
jb
retf
(bad)
inc
xchg
xor
and
test
fwait
inc
pop
dec
mov
or
xchg
popa
adc
adc
jmp
mov
xchg
add
lahf
cmp
jecxz
jmp
dec
adc
std
test
sub
je
cmp
das
imul
dec
jecxz
jbe
xor
and
lea
in
add
jnp
mov
add
mov
push
xor
movs
xchg
mov
sub
add
dec
cmps
mov
jns
call
jno
aam
adc
out
sub
mov
mov
push
retf
(bad)
adc
xchg
mov
adc
sti
push
dec
aas
and
and
cmp
out
jb
inc
leave
push
das
test
dec
daa
jns
loopne
int3
sahf
scas
test
mov
mov
push
or
or
imul
and
pop
fwait
xchg
adc
jmp
(bad)
scas
inc
fistp
cs
ret
ret
dec
(bad)
gs
outs
ins
mov
dec
arpl
(bad)
fmul
jns
add
bound
call
jbe
aaa
in
adc
hlt
cmp
out
push
pop
mov
adc
or
or
(bad)
retf
xor
daa
aaa
mov
icebp
lock
dec
gs
repnz
mov
stos
push
pop
dec
popf
ds
rcl
push
sub
stos
rol
xchg
cwde
xor
fwait
or
push
arpl
sbb
loope
mov
retf
dec
adc
pop
adc
sbb
jmp
sbb
xor
mov
mov
clc
sbb
push
sbb
xchg
ins
jmp
or
mov
and
(bad)
fs
call
or
xchg
pop
xor
adc
xchg
and
(bad)
push
and
movs
pop
push
xchg
push
mov
in
rcl
adc
mov
cwde
test
in
inc
lods
movs
shr
fld
addr16
dec
popf
(bad)
jo
out
lds
fidiv
movs
inc
les
mov
stc
jb
and
in
sbb
mov
add
mov
jno
mov
pop
popf
xor
rcr
adc
push
cs
mov
imul
cli
iret
out
std
push
into
mov
outs
mov
mov
mul
loop
lods
mov
dec
fmul
and
outs
or
cmps
sbb
scas
add
add
and
hlt
cli
cmps
mul
xor
push
xchg
(bad)
stos
mov
lds
and
bound
push
dec
and
pop
xchg
pop
in
loopne
ret
adc
cmp
(bad)
jmp
push
push
xchg
fcmove
inc
add
test
cmp
dec
jmp
cwde
mov
xchg
clc
(bad)
out
cmp
mov
lods
cmp
mov
push
adc
sbb
(bad)
not
gs
iret
call
push
xor
pop
mov
mov
ret
inc
or
mov
push
xchg
jl
xlat
mov
fs
in
push
sbb
fbld
mov
fs
mov
cmp
mov
cmp
mov
push
fisttp
push
add
mov
ret
(bad)
push
or
call
push
xchg
fadd
les
jae
jmp
das
test
mov
aad
mov
xlat
mov
adc
js
push
aad
les
fs
mov
addr16
icebp
fisttp
mov
(bad)
cmp
(bad)
pop
jecxz
adc
and
mov
mov
sti
aad
inc
xchg
pushf
dec
leave
mov
ss
lea
mov
and
mov
jge
pop
(bad)
xor
test
mov
pop
daa
shr
fwait
int
out
test
sbb
adc
int3
xchg
mov
cmp
dec
adc
mov
mov
sar
test
(bad)
addr16
call
outs
retf
out
call
in
shl
movs
popa
pop
bound
iret
pop
shr
aam
div
inc
xor
xor
mov
sub
stos
or
inc
lds
loop
sub
lock
mov
sub
cmp
pop
or
jbe
neg
dec
ins
jp
sub
mov
push
push
adc
das
rcl
sub
inc
mov
mov
retf
fild
es
sbb
mov
push
jge
leave
adc
dec
in
inc
mov
xlat
fadd
push
clc
ja
outs
stos
mov
dec
mov
xchg
std
retf
test
rol
retf
fcmovnu
lods
and
test
gs
call
mov
movs
xor
fidivr
and
outs
shl
adc
es
mov
in
inc
jge
jmp
fstp
out
push
xlat
jge
xor
lock
jb
mov
pop
xchg
stos
jno
aad
rcl
(bad)
ins
out
xchg
popa
jae
lods
loopne
add
addr16
jle
les
cmovae
je
loope
sub
push
scas
and
dec
xor
enter
or
popa
mov
call
push
mov
mov
out
loop
cmp
mov
aad
pop
sbb
mov
and
dec
jb
jmp
dec
jnp
enter
popf
adc
je
or
inc
push
mov
cld
cmps
sub
mov
jnp
push
pop
(bad)
test
xor
cmps
clc
scas
aam
and
push
push
(bad)
sbb
data16
or
push
mov
jnp
add
sub
pop
jnp
into
test
xchg
fimul
cmps
repnz
pop
and
xor
xchg
dec
rcr
adc
mov
ins
inc
in
(bad)
pop
enter
cs
sbb
daa
int3
or
in
xchg
idiv
call
mov
fidiv
in
inc
add
adc
pop
int3
(bad)
fistp
outs
sub
xchg
addr16
das
packssdw
pop
or
push
ret
jbe
fcom
iret
xchg
mov
icebp
sub
xchg
xor
int3
retf
or
movmskps
mov
test
pushf
dec
cwde
movs
(bad)
xchg
jbe
mov
test
inc
stc
inc
dec
popa
(bad)
cmp
jp
int
lods
test
ds
push
sub
jne
xchg
cwde
mov
or
inc
mov
in
mov
sub
pop
jge
xlat
sub
sti
or
push
push
xor
fmul
sub
push
dec
pop
test
pop
out
mov
jl
je
popf
xchg
enter
test
in
adc
lock
imul
push
inc
add
dec
in
in
imul
loope
pop
in
(bad)
pop
xchg
ds
or
or
jmp
pop
or
push
dec
imul
dec
sub
adc
aas
das
mov
dec
pop
cli
cmp
(bad)
(bad)
mov
or
inc
xor
repnz
idiv
pop
dec
mov
sub
xchg
mov
hlt
xor
stc
bound
cs
(bad)
xchg
leave
shl
inc
in
ss
(bad)
out
inc
jmp
lahf
out
xor
test
push
fwait
mov
and
and
and
clc
and
addr16
mov
(bad)
pop
adc
dec
and
clc
add
rcl
mov
push
jecxz
dec
fnstenv
mov
pop
pop
into
dec
xchg
mov
jae
gs
xchg
mov
jb
sub
inc
cmp
nop
loopne
or
jge
and
xor
les
sub
xchg
movs
jmp
and
cmp
dec
xor
mov
mov
sbb
and
arpl
mov
jg
xor
pop
(bad)
shl
or
push
adc
add
nop
xchg
inc
cmp
fadd
jne
and
add
xor
mov
inc
dec
cmps
xchg
push
cmp
out
shr
pop
or
stos
mov
and
push
daa
jmp
and
ss
jne
xlat
mov
clc
mov
in
call
xor
or
mov
clc
fisubr
sti
push
(bad)
mov
clc
pop
cmpps
das
sbb
sub
rol
out
ja
fstp
out
add
xchg
jmp
loopne
sar
mov
pushf
icebp
sub
push
cmp
loopne
jp
ret
adc
leave
out
pop
jl
rcl
(bad)
cmc
movs
pop
mov
inc
cmc
or
jbe
inc
leave
adc
(bad)
out
xor
cmp
sub
mov
or
js
dec
push
ds
prefetch
dec
mov
dec
jge
nop
pop
xor
push
lahf
dec
or
test
sbb
inc
and
adc
cmovg
sub
repnz
fwait
retf
cmovnp
lods
icebp
lds
mov
jnp
stos
pop
outs
cs
xchg
lods
out
ficomp
mov
ins
aaa
and
cli
mov
shl
jg
mov
xchg
cli
mov
(bad)
retf
nop
cmps
push
xchg
es
mov
jno
or
adc
mov
cmp
repz
popa
pushf
push
cmp
inc
cmp
stos
cmp
(bad)
and
dec
test
mov
(bad)
jnp
jbe
mov
clc
inc
and
or
das
test
dec
les
mov
pop
or
mov
cmc
iret
nop
addr16
jmp
sbb
adc
enter
add
out
inc
outs
ss
retf
xchg
xchg
jo
lods
mov
ja
inc
int
dec
cmps
push
lahf
xchg
shl
dec
mov
xchg
js
in
cmc
fsub
inc
pop
popf
dec
jp
popf
mov
stos
(bad)
pushf
imul
stos
fwait
outs
in
shl
push
fst
mov
sbb
dec
or
retf
test
call
or
sar
and
int3
jecxz
mov
popf
jle
les
sub
enter
xor
sub
lea
or
jle
data16
(bad)
call
inc
aam
out
inc
pop
adc
sahf
retf
pusha
shl
aam
pop
add
lds
fisub
adc
popa
inc
std
sbb
pushf
pop
push
push
push
jmp
push
pushf
push
pop
fwait
jne
mov
xrelease
adc
mov
jo
cwde
ds
in
fwait
inc
mov
inc
push
arpl
cdq
ds
fs
int
push
add
jg
mov
adc
xchg
add
in
mov
lock
or
scas
jp
dec
mov
mov
jbe
ins
loope
xchg
in
adc
(bad)
jle
div
pop
sbb
push
push
call
dec
and
fisubr
das
or
retf
dec
or
daa
add
movs
inc
sar
sub
and
retf
jo
inc
lds
sub
shr
xchg
xchg
lods
xor
lods
jmp
cmp
rol
out
js
adc
pop
es
xchg
and
in
mov
inc
or
push
push
mov
add
std
lahf
push
cmp
push
add
test
sbb
jo
nop
stos
sar
in
call
lahf
pushf
xor
pusha
imul
push
shl
loop
retf
cmp
ja
test
sbb
mov
push
in
mov
and
jle
fidiv
push
call
je
mov
aaa
push
mov
test
push
mov
xchg
mov
in
pushf
sub
fwait
inc
(bad)
and
sub
mov
shl
les
shr
sbb
mov
mov
sbb
add
nop
cmp
ja
cld
xchg
aaa
lock
xchg
sti
into
sbb
cmp
mov
dec
jecxz
mov
(bad)
inc
lods
cmps
xor
xor
aas
lods
fstp
out
pusha
pop
icebp
enter
loope
mov
cdq
or
xor
lock
aaa
dec
jne
mov
xchg
xchg
shl
push
(bad)
fsub
pop
xchg
lock
push
xor
les
and
loopne
out
xor
push
xchg
sbb
cdq
inc
jle
mov
arpl
and
pop
mov
dec
and
test
outs
jmp
and
sub
xchg
imul
out
inc
pop
or
fisubr
xor
mov
dec
add
pushf
retf
lods
mov
sbb
cld
std
xor
mov
clc
xchg
adc
or
stc
out
repnz
in
nop
fstp
add
push
add
(bad)
jmp
sub
not
call
pop
scas
xchg
mov
and
sbb
lock
pop
adc
int
cwde
add
dec
push
js
cwde
lods
jae
mov
pop
mov
stc
mov
pop
call
add
push
sbb
cmp
stc
cmp
mov
ret
mov
je
jle
out
call
outs
test
ret
mov
sbb
jmp
(bad)
shl
mov
nop
ins
push
ret
sub
sti
mov
or
fchs
ja
jmp
and
in
out
add
push
inc
lock
cli
cmp
int
xor
jb
sbb
test
jg
mov
sbb
sub
iret
sub
sub
xchg
dec
pop
ds
push
sbb
push
push
cs
sub
in
scas
jp
fistp
xchg
cmc
push
sbb
xchg
scas
push
mov
dec
pop
and
cli
sbb
in
mov
and
jecxz
cmp
jno
add
add
push
cmp
es
in
pop
push
lods
lods
sub
fsubr
cmc
loop
enter
push
adc
mov
neg
add
xchg
mov
jl
mov
loopne
push
or
pop
pop
loop
jb
imul
scas
into
xor
sub
rcr
push
popf
movs
cmp
pushf
push
arpl
jge
daa
cmp
ror
test
jmp
pop
inc
rcl
fild
mov
imul
mov
adc
retf
inc
push
and
in
gs
inc
lea
rcr
enter
pop
ss
mov
sub
cli
xchg
dec
sbb
stc
xor
mov
nop
xor
mov
movs
into
fs
pop
or
add
add
idiv
push
in
sbb
push
cmp
ins
push
sahf
inc
or
cmc
cli
pushf
push
mov
mov
add
es
(bad)
pop
add
and
test
cmp
lods
(bad)
icebp
push
jge
mov
sbb
out
jp
mov
ret
int3
ins
adc
pop
test
test
cmp
add
sbb
lahf
or
jns
int
das
jb
sub
and
loopne
mov
repz
retf
jne
dec
adc
aam
push
enter
test
jbe
push
ss
repnz
pop
fmul
jp
pop
xchg
push
push
mov
xor
in
inc
sbb
push
xchg
jbe
sbb
sahf
lahf
outs
repz
inc
retf
shl
ror
sub
xchg
fadd
mov
jmp
aad
pushf
push
sahf
xchg
mov
and
mov
push
stc
adc
xor
adc
xor
add
pop
sbb
sub
adc
stc
fild
push
jecxz
mov
add
and
test
adc
(bad)
lock
fisub
lods
enter
in
sar
xor
push
jo
pop
push
mov
lods
xchg
daa
and
jno
sahf
and
dec
sahf
arpl
ds
cmp
cmc
add
push
(bad)
popa
dec
jno
(bad)
pop
sbb
xchg
or
add
repz
mov
retf
xlat
cmps
fiadd
leave
mov
inc
pop
and
cmp
and
mov
out
(bad)
(bad)
(bad)
adc
add
repnz
sub
loop
cmp
add
xor
nop
clc
and
pop
fst
pop
popa
arpl
cld
ins
fmul
or
lods
push
hlt
sbb
dec
stos
jp
(bad)
aam
push
stc
jge
outs
pop
or
les
mov
fwait
or
push
push
(bad)
jae
retf
stc
imul
dec
je
and
lock
adc
stc
jo
mov
xchg
and
adc
rcr
loope
jnp
es
mov
mov
add
test
xchg
bound
adc
and
cs
adc
and
(bad)
mov
xor
out
xchg
int3
mov
push
xor
fsub
in
xor
pusha
or
lahf
(bad)
push
test
pop
loop
sbb
lock
cmp
inc
jp
(bad)
loopne
or
jns
mov
mov
jbe
lds
lock
into
jne
or
cld
add
test
dec
mov
add
mov
or
xor
mov
scas
lahf
add
mov
pop
ins
jne
inc
xor
add
adc
jno
inc
cld
clc
les
pop
xchg
(bad)
sub
inc
fdiv
sub
xchg
outs
cs
xchg
mul
mov
mov
xchg
mov
ret
mov
data16
call
in
xor
test
cmp
jo
inc
dec
xor
jnp
pop
push
xor
xchg
fstp
js
int3
pop
xlat
cdq
cmp
or
ss
lods
jmp
ret
repnz
and
mov
pop
add
adc
sbb
test
adc
fcmovu
ret
and
and
push
test
adc
(bad)
sub
scas
cmp
lahf
test
cmps
sub
pop
iret
ins
or
or
add
mov
or
mov
pusha
adc
pushf
mov
or
scas
sbb
xchg
fwait
jg
sbb
shl
cmp
sbb
int3
shl
push
adc
test
cmp
daa
call
(bad)
leave
cld
je
jb
cwde
fs
sahf
mov
inc
and
and
shr
call
jp
or
fst
cmp
jg
sbb
aaa
outs
mov
mov
push
mov
shl
dec
pop
arpl
pop
nop
shr
adc
mov
repnz
mov
add
pop
loop
pop
(bad)
popa
inc
shl
cs
inc
inc
add
(bad)
xor
mov
adc
xor
or
sti
sar
pop
xor
fstp
out
pop
jmp
xor
outs
mov
out
pop
ds
repz
mov
jmp
push
(bad)
lock
pop
jne
pop
xchg
fst
dec
sbb
pop
add
sub
mov
add
rol
jl
pop
clc
sahf
stos
add
les
mov
push
push
dec
adc
mov
imul
jo
push
fnsave
cwde
adc
push
mov
(bad)
cmp
mov
clc
pushf
clc
fldenv
mov
ficom
sub
mov
pop
aam
dec
ficomp
push
xchg
out
fs
call
sti
mov
dec
jg
retf
not
add
das
stos
stos
or
(bad)
pop
pop
shr
call
adc
mov
pop
and
stos
test
and
inc
jl
arpl
js
xor
sbb
loope
sbb
fcomip
push
push
jb
retf
mov
jmp
or
fidiv
mov
fild
mov
rcl
jmp
or
pop
xor
push
mov
out
or
mov
inc
adc
fidivr
mov
sbb
pusha
pop
mov
dec
sar
cmp
imul
shl
les
mov
pop
push
shl
(bad)
lods
(bad)
jl
push
sahf
movs
jg
and
mov
mov
lea
pop
fdivp
xor
test
fsub
sub
mov
loopne
cmp
movs
ins
adc
lock
cmp
adc
out
imul
xchg
js
xchg
mov
dec
cmp
adc
retf
inc
test
es
repz
shl
pop
lods
retf
adc
jle
pop
mov
dec
add
cmc
adc
sub
xchg
mov
cmp
je
hlt
cmps
xlat
popa
sub
dec
and
mov
sub
dec
mov
push
sbb
xchg
xchg
pop
sub
sub
lea
xor
or
cmp
adc
xor
jo
sbb
(bad)
jle
and
and
dec
int
cmp
xchg
fwait
pusha
xor
rol
pusha
dec
aaa
inc
(bad)
jl
(bad)
dec
cwde
test
add
fadd
js
cld
add
mov
sahf
push
inc
inc
cmp
mov
lea
add
nop
lods
fwait
es
movs
mov
push
pop
xchg
outs
pop
mov
add
jp
pop
leave
push
xchg
in
mov
xor
popa
lea
push
jmp
mov
and
cmp
jb
mov
out
xor
int
hlt
fadd
push
test
inc
cdq
ret
mov
mov
out
pop
out
and
fisttp
push
sub
jno
cmp
jg
cld
inc
cmp
test
inc
dec
nop
xchg
les
stc
mov
scas
adc
ror
or
sar
jb
or
mov
dec
and
cs
xlat
xor
pop
mov
fidivr
add
lea
jns
loop
mov
pop
ds
(bad)
xchg
jge
mov
jo
inc
shl
pop
lock
xchg
fstp
cmps
mul
push
pop
(bad)
pop
jp
adc
mov
mov
sub
test
xor
mov
mov
xor
add
sub
mov
movs
loopne
sub
(bad)
dec
imul
dec
inc
jae
xchg
int3
ret
test
inc
mov
std
mov
in
xor
or
cli
(bad)
or
test
sub
ret
fsub
movs
js
retf
sbb
jbe
cli
push
jmp
jns
pop
test
mov
adc
jl
mov
sti
xor
outs
stos
std
arpl
mov
movs
sbb
shl
cmps
pop
ret
inc
fisubr
sub
loopne
cmp
adc
cld
sub
or
mov
mov
aas
dec
sub
sbb
jae
out
popf
push
lods
push
push
loope
iret
pop
mul
cmp
dec
dec
or
ins
(bad)
popf
xor
test
jle
or
gs
mov
fcomp
neg
jb
xchg
call
test
jmp
repz
sub
push
fisttp
pop
daa
mov
dec
sub
popa
movs
fisub
cmp
jno
inc
sbb
into
add
into
push
adc
fidivr
psrlq
int3
ins
add
out
sub
repnz
dec
sahf
(bad)
stc
sbb
stos
sub
cmp
add
ja
add
sub
xchg
sbb
sahf
stos
pop
sahf
push
sub
inc
ss
(bad)
fld
mov
int
cld
shl
out
jns
pop
sbb
jmp
push
push
jmp
out
call
push
scas
pop
pop
add
inc
and
in
cmp
sub
xor
test
clc
dec
cwde
sbb
mov
stos
push
or
or
sbb
and
out
(bad)
jge
adc
mov
js
jnp
or
push
ins
jb
shr
rol
fstp
pop
add
xchg
and
add
mov
add
mov
test
bound
and
loopne
sti
shl
fwait
(bad)
sahf
aas
sbb
mov
sub
int
pop
add
das
(bad)
pusha
or
lods
pusha
aaa
shl
jo
pop
out
add
lods
dec
push
push
mov
fisttp
out
and
push
fbstp
test
cmp
jge
stc
rol
es
add
(bad)
aad
out
add
jmp
mov
dec
into
fmulp
cmp
mov
mov
mov
inc
pop
lock
repnz
lds
fmul
sub
xor
aad
fisubr
pushf
mov
repnz
scas
pop
out
(bad)
cld
or
repz
xor
mov
or
dec
mov
cmp
xchg
jne
mov
xchg
xchg
inc
lock
push
jmp
pop
enter
imul
jg
xor
jmp
les
aad
pusha
push
hlt
add
inc
inc
push
inc
sbb
ret
dec
mov
push
nop
inc
fiadd
test
test
aam
test
gs
jmp
(bad)
push
mov
pop
mov
shr
mov
hlt
or
popf
out
adc
and
in
out
or
xor
out
iret
dec
lods
lods
mov
and
and
inc
arpl
xchg
pop
mov
jne
int3
iret
inc
cmc
(bad)
mov
pop
jmp
popa
cmp
mov
outs
test
cs
mov
inc
or
dec
inc
or
sub
or
push
cwde
leave
es
xchg
cmp
xor
adc
dec
sub
nop
mov
pop
bnd
pop
push
bound
(bad)
enter
sub
mov
mov
mov
dec
xchg
push
push
mov
inc
arpl
mov
pop
sub
xchg
inc
dec
call
or
mov
jbe
inc
call
sar
jle
(bad)
jnp
sub
call
cmp
icebp
(bad)
sbb
test
test
iret
ins
xlat
dec
hlt
mov
sbb
dec
push
jnp
fsubrp
mov
jmp
fbstp
cmp
mov
xor
xor
or
xchg
xor
push
(bad)
rcr
adc
pop
mov
adc
or
(bad)
xchg
addr16
sbb
cld
aad
inc
in
mov
fdiv
fiadd
loop
mov
ins
push
sub
xchg
fisttp
cmp
mov
std
mov
jnp
icebp
xchg
add
xchg
mov
adc
stos
rcr
lock
aad
dec
or
retf
lock
hlt
mov
and
arpl
and
iret
mov
sahf
sti
mov
es
push
ret
pop
xchg
dec
clc
outs
mov
dec
push
jno
xor
iret
mov
(bad)
xchg
cmp
rol
xor
fstp
xchg
(bad)
cmp
idiv
xor
fisttp
ret
gs
enter
pop
icebp
push
lods
mov
xor
cmps
jmp
fbstp
inc
ror
(bad)
mov
int3
jecxz
mov
movs
stos
dec
jb
xor
test
inc
in
clc
pop
xchg
and
js
jge
nop
out
sahf
not
out
scas
fbld
jo
push
inc
mov
movs
fisubr
in
xchg
scas
sub
mov
dec
inc
jb
push
sub
idiv
fwait
test
out
xor
neg
nop
mov
mov
sbb
adc
(bad)
cdq
adc
(bad)
int3
cld
adc
retf
lahf
xchg
add
jle
add
pusha
cwde
xchg
(bad)
cmps
sti
dec
ret
inc
xlat
pop
and
les
rol
test
inc
mov
jp
lahf
xor
loopne
loop
xchg
jno
cwde
xor
retf
inc
jge
cli
add
cmps
push
and
out
push
in
adc
add
dec
je
into
fimul
mov
sti
addps
or
outs
cs
inc
fmul
jmp
mov
mov
ror
xor
imul
xchg
jecxz
call
mov
jb
xchg
push
mov
dec
adc
pop
inc
test
imul
imul
in
in
das
jbe
je
pop
pop
outs
std
mov
sub
and
cmp
jo
sub
cli
adc
mul
xchg
add
pushf
xor
ja
mov
clc
nop
bound
sbb
scas
jle
cmp
and
cmp
and
mov
push
sbb
sahf
iret
fwait
(bad)
call
movs
(bad)
add
push
call
ja
lods
cmp
mov
pop
inc
jne
lds
sbb
into
fnstenv
pop
sbb
in
ret
adc
pop
push
push
pushf
mov
daa
imul
sbb
in
adc
lea
jo
icebp
xor
dec
sub
jmp
iret
nop
xor
push
aad
jmp
mov
mov
xor
xchg
pop
pop
das
sbb
in
sbb
inc
(bad)
push
mov
jle
xchg
mov
fs
ror
push
add
test
and
push
sbb
loope
fldcw
xlat
shl
sbb
adc
add
ins
sub
lods
jge
xor
mov
rcr
sbb
out
lahf
inc
jp
dec
shl
mov
and
lock
dec
jo
call
loopne
xchg
sub
adc
jmp
ds
jbe
fldcw
sub
std
mov
popf
aad
xchg
in
minps
sub
cli
mov
call
cmc
push
lahf
mov
(bad)
call
mov
(bad)
xchg
ins
fadd
out
retf
push
repnz
dec
mov
int
pop
out
and
(bad)
movs
popf
out
cmp
xchg
test
cs
sub
xor
loope
fwait
in
mov
leave
cmp
push
and
sub
fisubr
call
sti
pusha
add
jg
mov
fisttp
test
leave
mov
test
mul
dec
sub
inc
fld
mov
lods
mov
retf
shl
push
push
mul
rol
jmp
xchg
sbb
pop
pop
mov
shl
xor
pop
inc
mov
jmp
scas
pop
push
addr16
jle
xlat
push
rol
adc
fisubr
mov
xchg
adc
fmul
xchg
or
and
and
ret
sbb
jmp
push
lock
inc
sub
inc
and
push
imul
add
mov
lahf
sub
adc
cmc
push
shr
sub
loope
jnp
je
and
and
repz
mov
std
jp
lock
sar
ret
add
fcmove
arpl
dec
mov
js
mov
mul
aad
jl
and
clc
dec
jle
fld
sbb
mov
pop
xchg
cmp
pop
or
add
sar
push
ror
cmps
lods
pop
dec
add
adc
rcl
xor
scas
idiv
(bad)
jle
push
add
sub
cld
push
xor
addr16
jmp
test
and
cmp
pop
add
outs
push
or
sahf
push
dec
pushf
cmp
gs
mov
mov
arpl
sub
xchg
into
sub
adc
fistp
neg
cdq
inc
popa
fild
ret
ss
sub
leave
inc
dec
push
cmp
jbe
mov
scas
pop
jo
movs
aad
lahf
or
fs
(bad)
cmps
push
push
push
gs
mov
jle
pop
arpl
pop
inc
xchg
scas
push
or
pop
fstp
in
into
pop
shr
mov
scas
shr
xor
inc
and
or
fld
adc
out
pop
clc
mov
mov
xchg
retf
hlt
add
in
jno
int3
xchg
cs
cmp
push
stos
pop
ss
movs
add
pop
jle
popf
mov
stc
es
out
leave
imul
pop
pop
es
lds
fdiv
std
es
ins
push
stos
mov
pop
sub
adc
sbb
cmps
jmp
ds
add
je
and
mov
(bad)
nop
pop
xor
jl
stc
or
sbb
sub
out
mov
mov
mov
xor
in
int
sar
dec
out
push
in
mov
jno
stos
jmp
add
test
js
int
mov
and
scas
test
adc
mov
mov
lock
jns
add
sub
ss
popf
mov
add
(bad)
cdq
cld
(bad)
int
mov
in
jmp
pop
nop
cmp
cmp
push
push
fisttp
adc
je
stc
mov
scas
mov
inc
and
mov
ss
sub
arpl
sbb
out
cmp
jle
not
shl
outs
leave
repz
aaa
retf
cmp
adc
nop
aaa
gs
aas
imul
aad
mov
je
jnp
jecxz
cli
sbb
ss
enter
jp
pop
fistp
inc
mov
add
add
mov
push
pusha
(bad)
sub
push
inc
test
ja
es
xchg
les
shr
loope
fnsave
and
jle
sub
je
inc
ret
xor
or
xchg
(bad)
or
pop
sub
and
dec
and
cmps
popa
hlt
(bad)
and
(bad)
xor
push
rcr
xor
mov
sbb
fdivr
ror
adc
push
adc
push
jbe
mov
jmp
xor
or
sub
push
in
jmp
imul
in
push
ins
popf
ins
cdq
mov
mov
xor
pop
shl
cli
js
push
sbb
stos
ja
iret
jo
test
jle
jne
das
call
loop
in
iret
sub
xor
daa
sub
movs
mov
sar
jne
icebp
mov
pop
sar
dec
test
ret
int
mov
jmp
push
std
mov
push
stos
xor
xor
mov
out
pop
pop
inc
ret
mov
test
repnz
(bad)
pop
xor
inc
fnstcw
pop
idiv
adc
sub
or
sbb
add
pop
jb
arpl
inc
add
xchg
in
jl
adc
pop
xlat
fmul
mov
dec
stos
mov
enter
inc
outs
mov
add
pop
mov
dec
ror
data16
(bad)
jge
scas
mov
fmulp
rol
xchg
inc
jnp
cdq
dec
xor
shr
inc
dec
xchg
test
push
fidivr
dec
test
mov
out
out
mov
iret
icebp
adc
xchg
nop
retf
out
out
aam
movs
sub
cmps
mov
xor
and
pusha
mov
push
xor
mov
shr
mov
mov
out
mov
jae
mov
jl
je
inc
bound
into
cwde
mov
(bad)
lahf
jp
aas
pop
xor
dec
out
scas
test
stos
fiadd
int3
sbb
movs
dec
mov
push
pushw
sub
(bad)
cmps
dec
mov
mov
fwait
mov
das
fs
mov
loopne
jo
std
loop
mov
ss
and
and
repz
movs
inc
pop
cmp
dec
stos
mov
push
into
es
scas
mul
or
inc
pop
cwde
fcom
imul
(bad)
pop
mov
loop
dec
sbb
movs
push
or
loope
js
cwde
or
jno
mov
(bad)
in
rcl
adc
pop
sub
xchg
inc
mov
push
nop
jle
out
adc
loope
or
xor
push
jbe
jmp
pop
movs
sbb
lahf
mov
jnp
cmp
movs
dec
pusha
dec
adc
fmul
xor
cmps
(bad)
add
loope
mov
push
or
dec
(bad)
pusha
xchg
std
rol
sbb
xchg
sbb
test
and
mov
mov
neg
ret
pop
pop
adc
call
jbe
xchg
sub
pop
push
jns
sbb
mov
cmp
adc
jg
push
add
push
cmp
addr16
in
nop
push
sbb
fsubr
jge
ja
pop
adc
loope
pop
and
sub
in
inc
out
cld
mov
mov
push
add
jmp
fld
sbb
movs
mov
retf
cmp
mov
outs
out
add
cli
inc
adc
ret
pop
push
ret
dec
out
fistp
adc
addr16
mov
add
xlat
neg
adc
mov
mov
add
pop
pop
and
and
add
jp
or
pop
add
imul
or
adc
pop
or
add
loope
mov
and
add
int
mov
xor
cmp
outs
mov
(bad)
push
les
dec
jb
imul
daa
push
repnz
fwait
retf
cwde
xchg
adc
movs
stos
mov
xor
call
xor
dec
jecxz
mov
pop
pop
mov
or
add
jge
mov
adc
or
jge
lock
mov
int
adc
movs
es
jl
xor
scas
ins
jnp
mov
shl
dec
test
test
gs
xchg
fisttp
cmp
in
pop
cmp
dec
popa
stos
aad
(bad)
pop
or
xor
inc
sbb
sbb
daa
adc
xchg
xchg
or
pop
pop
cli
mov
outs
nop
mov
jg
retf
pop
adc
sbb
cmp
push
xor
ffree
jp
bound
sbb
mov
rcl
jg
pop
jecxz
push
add
adc
sub
scas
jge
es
(bad)
ret
shr
cld
mov
inc
pop
call
jle
jl
int
inc
stc
or
jnp
xchg
hlt
into
psadbw
push
jle
jns
lock
sbb
cmps
push
cmp
popa
jg
ficomp
mov
rol
fnsave
sbb
movs
out
int3
sub
sbb
mov
or
mov
push
mov
push
adc
sbb
and
mul
xor
or
xor
dec
jae
jle
(bad)
lods
or
(bad)
xchg
outs
mov
loope
in
jle
pop
cmc
cmp
daa
or
dec
retf
lds
stos
jne
mov
fdivp
cmp
dec
stos
outs
iret
push
push
adc
aam
div
hlt
test
loopne
rol
in
iret
cmp
xor
sub
push
mov
repnz
jmp
shr
ds
jp
cwde
addr16
outs
lods
iret
aad
ficom
in
dec
in
das
mov
xor
xchg
pop
into
mov
push
jge
idiv
push
jae
cmps
add
xchg
push
adc
stos
add
pop
dec
push
mov
sar
cmps
cmps
int3
or
gs
int3
xchg
add
not
mov
test
(bad)
popf
inc
sahf
into
ja
fwait
int3
inc
enter
and
push
lods
mov
push
mov
cwde
jmp
jle
cmp
pop
test
(bad)
mov
jae
push
jecxz
sbb
pop
sbb
xor
jmp
cmp
inc
shl
test
js
scas
fisub
jae
fcom
push
push
and
pop
and
pop
jmp
inc
fbstp
mov
nop
or
in
das
add
pop
adc
dec
jle
pop
loope
pusha
xchg
pop
mov
clc
adc
pusha
and
adc
add
fcmovnbe
rcl
dec
pop
fsub
mov
jp
repz
test
retf
cli
mov
and
outs
cmps
pop
xchg
sahf
cmc
lds
push
loop
fst
mov
mov
xchg
outs
push
loope
mov
je
iret
rcl
cld
inc
jbe
or
and
mov
xor
inc
add
mov
and
mov
out
ins
cmp
push
aaa
stos
les
and
in
push
xor
movs
in
je
pop
ret
mov
outs
repnz
neg
inc
cmp
mov
loope
xchg
in
test
ds
jle
aas
pop
dec
xchg
xor
push
shl
retf
cmp
pop
sbb
ds
inc
add
inc
adc
dec
inc
shl
cmp
(bad)
fsubr
shr
sub
dec
adc
(bad)
sbb
(bad)
xchg
jg
movs
loopne
lods
rcr
inc
mov
sbb
jo
idiv
xchg
ja
or
pop
outs
xchg
mov
rol
fsubp
push
fdivr
xrelease
fldcw
add
mov
aas
fs
jge
sbb
out
aad
mov
lahf
mov
call
inc
fwait
imul
xchg
mov
cmp
fisubr
je
ss
(bad)
xor
jmp
inc
adc
(bad)
pop
ins
cmp
in
in
push
sbb
sub
repnz
xchg
sub
pop
sbb
shl
stc
sti
xor
sub
aas
xchg
mov
std
std
push
js
push
js
pop
mov
or
mov
stc
cmp
mov
jle
add
xor
clc
adc
push
retf
into
xor
pop
hlt
mov
jecxz
stos
jno
adc
sbb
jecxz
leave
and
aad
jmp
and
outs
xchg
fldpi
xor
nop
fcom
mov
jbe
push
xor
ret
and
bswap
mov
test
xor
jmp
mov
sub
jmp
jns
jp
cs
and
pop
xchg
(bad)
sub
dec
loop
pop
or
stos
push
mov
xor
test
pusha
push
push
sub
cmp
inc
shl
cmp
xlat
sub
adc
and
pop
icebp
jge
imul
pop
std
fstp
mov
test
das
pop
and
mov
cmp
xor
fwait
(bad)
popf
xchg
push
xor
jne
adc
sbb
in
cmp
pop
pop
fld
(bad)
cmc
mov
dec
push
mov
(bad)
arpl
clc
mov
xchg
cli
mov
(bad)
lahf
jmp
inc
push
enter
hlt
cmp
aad
sahf
mov
or
mov
xchg
xor
cmp
xchg
mov
add
jmp
push
(bad)
xchg
jecxz
pop
xor
out
cmp
or
sub
xor
movs
ja
in
je
push
cmp
add
sub
(bad)
sahf
push
popf
dec
fs
cmps
aaa
jbe
retf
in
push
or
retf
mov
les
pusha
mov
push
aam
out
mov
test
jle
adc
test
pop
jge
lahf
push
scas
pop
cmp
cmps
(bad)
popf
mov
add
cdq
ds
ret
and
inc
repz
rol
jecxz
scas
pop
dec
or
xor
mov
pop
jbe
adc
aas
addr16
push
pop
lods
sub
call
out
inc
or
fist
mov
mov
sbb
arpl
jbe
xchg
mov
iret
aam
(bad)
out
or
retf
mov
add
retf
push
pop
je
or
int3
jo
dec
test
fadd
clts
psubsw
dec
icebp
je
retf
dec
in
lar
jnp
adc
push
inc
ret
adc
cld
and
cmp
inc
jmp
jecxz
xor
(bad)
inc
je
pop
arpl
repnz
arpl
mov
gs
cmp
add
xor
enter
jp
daa
jmp
cs
mov
mov
data16
and
pop
ins
mov
add
mov
(bad)
jmp
(bad)
call
loopne
pusha
xchg
mov
pop
bnd
add
inc
push
ins
fs
xchg
cmp
das
out
xchg
arpl
cmp
push
sar
pop
les
jnp
scas
pop
pop
vmwrite
cmps
jbe
loope
jl
cmc
xor
add
cmp
out
ss
out
push
jno
adc
int
cmp
jne
out
xchg
call
or
aas
mov
mov
sbb
sar
into
enter
pop
sti
test
data16
or
out
icebp
mov
outs
dec
push
addr16
xor
call
je
cmp
xor
les
das
push
sahf
dec
imul
push
pop
cmp
and
mov
sub
inc
aad
ins
push
mov
mov
or
mov
mul
retf
movs
les
aaa
icebp
sub
pop
jecxz
daa
push
add
sub
add
out
loop
dec
adc
out
jecxz
pop
jnp
lds
data16
adc
outs
fist
sub
movs
pop
stc
adc
pop
push
jg
outs
mov
retf
pop
dec
out
mov
scas
in
jl
cs
xchg
sub
js
xchg
scas
aam
mov
push
aam
or
jnp
inc
bound
add
jp
push
push
loop
in
fld
ret
cwde
mov
ret
retf
add
imul
jl
in
aam
test
add
mov
xchg
jb
cmp
or
sub
sar
mov
retf
aaa
shl
cmp
inc
loopne
add
add
sbb
add
sbb
fs
ret
scas
and
cmc
ja
mov
jae
fs
pop
push
sub
in
fld
xor
data16
(bad)
mov
xchg
or
mov
push
push
movs
popa
sub
push
add
push
mov
jbe
clc
int3
and
jp
aaa
pop
sbb
push
push
push
or
ins
nop
and
ror
loop
and
inc
lea
jp
int
outs
add
xlat
and
sub
mov
pushf
jns
shl
repnz
sbb
sbb
push
add
mov
es
mov
adc
xchg
adc
out
jmp
jae
fsubr
ret
cwde
loope
xchg
fdivr
(bad)
test
cmps
ficomp
fld
daa
sbb
pop
out
jmp
xchg
mov
xor
add
or
ins
jl
jl
jno
or
lahf
pop
inc
jne
cmps
mov
push
ror
lods
pop
pop
inc
fdivr
mov
xor
xchg
popa
nop
(bad)
out
sbb
sti
sti
jae
pushf
push
vcvtpd2ps
cmp
pusha
add
and
push
mov
xchg
xchg
enter
jge
push
and
ja
add
div
jg
mov
or
mov
shl
jo
jbe
shr
xlat
and
sbb
ret
xchg
or
mov
jo
mov
mov
push
pop
nop
dec
xor
hlt
mov
arpl
mov
sahf
shl
loope
cmps
rol
pop
mov
or
scas
loopne
pop
push
and
push
movs
jl
loopne
push
mov
arpl
push
adc
inc
cmps
mov
mov
xor
loope
add
jo
scas
aad
je
repz
test
out
call
(bad)
push
movs
adc
xor
jl
add
cwde
jae
mov
inc
mov
jns
call
push
(bad)
icebp
lock
lods
push
xlat
mov
adc
xor
imul
mov
dec
mov
(bad)
xchg
scas
movs
and
or
clc
push
test
mov
pop
popa
movs
stos
mov
pop
movs
call
call
dec
stos
enter
ffree
push
fnop
xor
sbb
inc
test
les
das
(bad)
mov
in
jmp
cs
or
cmp
mov
push
test
xor
test
xor
jne
lods
xchg
cmp
cld
sar
push
not
(bad)
push
aaa
(bad)
jecxz
xor
test
and
mov
enter
dec
scas
popa
mov
mov
icebp
je
jnp
push
retf
adc
jge
sti
and
lea
xchg
enter
and
(bad)
jo
dec
push
mov
(bad)
dec
jno
gs
and
xor
mov
shr
inc
(bad)
ror
fnstenv
je
xlat
inc
lea
mov
push
jbe
cmp
sbb
je
mov
push
sti
dec
bound
pusha
xchg
sub
std
inc
xchg
add
jns
jl
pop
test
sahf
fadd
(bad)
movs
jmp
mov
std
(bad)
test
scas
movs
in
push
cmp
xchg
sbb
dec
jle
adc
call
mov
sbb
dec
cmp
or
mov
push
popa
inc
push
inc
dec
push
cmp
jb
retf
daa
mov
loop
rcr
mov
js
push
cmp
lock
or
inc
in
mov
ss
mov
sub
mov
dec
xor
dec
nop
mov
dec
popa
mov
jne
inc
repnz
cmp
popf
and
inc
xchg
or
jle
jecxz
inc
enter
pusha
repnz
jmp
mov
mov
fnsave
and
lea
xchg
cs
fadd
arpl
dec
bnd
daa
and
movs
lods
test
fsubrp
stos
jmp
mov
sbb
mov
cmp
mov
inc
push
push
adc
fbstp
add
nop
inc
daa
(bad)
cmc
fwait
mov
fsub
adc
nop
addr16
repz
retf
ins
jne
inc
lods
or
(bad)
movs
pop
adc
inc
mov
sub
or
aaa
sub
(bad)
sbb
fsub
in
inc
xor
inc
sahf
dec
dec
xlat
inc
push
or
das
or
jo
out
(bad)
(bad)
xor
fadd
mov
xor
movzx
mov
push
sbb
jno
pop
lock
jmp
in
frndint
mul
xchg
mov
or
sbb
arpl
mov
adc
sbb
jp
add
sub
loope
retf
adc
jl
daa
sub
sub
fild
inc
dec
pop
inc
int3
mov
ins
nop
repz
aam
int
add
mov
outs
cmps
inc
cmp
test
sub
fld
sar
dec
push
aaa
or
mov
push
mov
or
mov
fwait
cwde
loope
xchg
sti
scas
aas
pusha
rcr
sub
cmc
push
test
neg
enter
bound
xor
pop
aas
add
icebp
bnd
loop
adc
call
push
and
add
jbe
mov
jmp
cmp
jmp
mov
lods
fidiv
sbb
sub
inc
dec
cmp
mov
in
jns
mov
mov
dec
bound
dec
in
loop
dec
push
int3
and
add
and
shl
inc
lods
add
jl
add
mov
push
pop
out
mov
push
pop
push
stos
cmp
jmp
push
push
jl
jge
add
add
sub
jns
push
dec
mov
dec
add
jmp
loopne
sbb
adc
push
push
xchg
push
or
sbb
and
mov
inc
sbb
test
icebp
add
retf
inc
(bad)
lods
pop
stos
mov
mov
and
les
fstp
imul
or
test
out
into
jns
push
add
sar
test
aas
mov
lock
xchg
and
inc
cmps
icebp
fsub
int
idiv
dec
push
cmp
dec
lock
test
jmp
and
push
pop
fsubr
xor
scas
sbb
sti
popf
out
mov
push
xchg
add
and
push
xor
loop
inc
mov
cmp
clc
je
sbb
or
sub
sbb
scas
adc
(bad)
test
in
jae
xor
or
dec
stos
sbb
pop
add
pop
fs
(bad)
scas
pop
sub
adc
mov
xchg
sbb
test
sti
dec
inc
inc
sub
dec
fwait
call
cdq
mov
cmp
mov
hlt
inc
xor
mov
cmova
xlat
pop
icebp
jmp
mov
pushf
mov
xchg
add
test
jmp
sub
rcl
adc
pop
aas
xchg
pop
mov
loop
xchg
push
sub
repnz
mov
inc
fwait
push
mov
push
pop
lea
adc
jmp
cwde
scas
sub
push
fcmovb
out
push
sahf
jmp
jl
(bad)
cmp
jge
pop
shl
fisub
les
gs
add
jmp
xor
push
stc
sub
pop
cli
sbb
stos
repnz
outs
iret
(bad)
cmp
pop
pop
inc
adc
scas
dec
sbb
(bad)
ret
vaddsd
in
call
push
callw
fwait
jl
push
mov
outs
and
inc
and
arpl
enter
or
xor
rcl
mov
pop
retf
jb
ret
jmp
sbb
stos
sbb
loope
dec
pop
jle
dec
ficom
out
push
xor
sub
mov
repnz
mov
outs
ins
repnz
push
cmps
and
test
hlt
push
xor
inc
adc
sub
loop
cmp
pop
xor
sub
stc
daa
(bad)
cmp
pop
sub
out
pop
mov
sbb
inc
push
ins
dec
call
jmp
or
dec
mov
mov
dec
pop
aam
(bad)
dec
aas
push
jecxz
jno
push
adc
ret
movs
aaa
xchg
fist
xor
outs
add
pop
cli
outs
pop
mov
dec
test
xor
neg
jecxz
jae
loope
or
xchg
sbb
jno
sub
outs
pop
inc
dec
cmp
push
imul
sub
mov
loop
inc
push
sbb
or
call
or
icebp
or
dec
or
call
inc
xor
dec
jne
pushf
out
enter
loopne
cld
cwde
in
mov
inc
dec
inc
ror
adc
inc
push
jge
pop
and
or
push
push
fild
js
(bad)
jge
imul
std
sbb
movs
lods
fcmovnb
gs
xor
xchg
test
in
test
outs
sbb
dec
mov
mov
cmp
iret
loope
add
cmp
cdq
jmp
fdivr
cmp
movs
test
jb
cmp
dec
fistp
fnstcw
gs
sub
das
fisttp
mov
push
in
mov
shl
xchg
sbb
mov
add
int
inc
mov
dec
mov
js
sbb
into
mov
std
jno
pop
jne
mov
cli
or
or
inc
punpckhdq
hlt
out
or
jne
mov
mov
sti
sub
in
stos
ins
sbb
xor
cli
mov
sbb
sub
fmul
pop
(bad)
in
cmps
call
and
mov
daa
cli
mov
mov
xlat
dec
xchg
mov
fwait
inc
dec
sub
pusha
imul
scas
stc
jno
ins
arpl
dec
and
jbe
ins
xchg
outs
(bad)
shl
cmp
rcl
push
rol
arpl
fild
pusha
sbb
dec
jecxz
cmp
rol
test
sub
pop
loop
dec
outs
sbb
aas
shr
fwait
outs
cmps
dec
pop
jb
add
jne
stc
and
cmp
(bad)
mov
and
sbb
push
pop
ret
icebp
fistp
jl
cmps
push
cli
and
fild
cli
cli
ds
mov
js
rol
pop
loop
mov
push
mov
jne
popa
cli
mov
test
push
mov
jle
push
mov
sbb
out
push
xchg
push
sub
pop
push
xchg
sub
pop
cld
mov
pop
sub
js
xor
ja
sar
(bad)
xor
lods
call
mov
or
pop
xchg
std
inc
int
add
movs
(bad)
sub
mov
neg
or
popf
int
and
rol
loopne
mov
adc
dec
ret
aas
popa
stos
sti
adc
loop
mov
pop
aam
aaa
push
test
jnp
adc
sub
cmp
outs
xchg
and
lea
adc
outs
mov
addr16
inc
push
sbb
mov
cmp
sub
ja
rol
push
pop
loopne
or
dec
ds
lods
xor
mov
out
imul
scas
(bad)
pop
jbe
inc
jo
add
clc
or
shl
out
repz
cmp
push
mov
mov
pop
mov
repz
jae
ss
imul
mul
mov
push
es
push
mov
fwait
inc
(bad)
cmc
adc
mov
lds
mov
jp
push
out
adc
or
cmp
sub
(bad)
stc
in
push
sub
xor
push
sahf
repz
retf
adc
adc
movs
jl
xchg
pop
je
sbb
xchg
push
sub
stos
fcmovu
arpl
popa
fisubr
mov
sti
mov
inc
xor
lahf
popf
jmp
popf
lods
xor
stos
lds
test
es
scas
mov
jecxz
push
jmp
dec
call
rol
pop
push
mov
into
mov
inc
std
lock
mov
dec
adc
sbb
adc
xchg
test
push
jo
stc
arpl
fcomp
pop
ds
shr
sbb
jo
xchg
lods
scas
xor
jno
xlat
jae
jb
jge
dec
out
push
and
in
sar
xor
and
push
mov
fstp
out
dec
sar
mov
push
xor
pushf
jnp
dec
mov
pop
dec
cld
ret
lods
into
push
and
test
sahf
push
loopne
arpl
and
xlat
adc
dec
cwde
sbb
dec
pop
xor
and
(bad)
mov
cmps
pop
xor
jmp
mov
movs
cld
cdq
sbb
stc
cmc
mov
xlat
(bad)
repnz
ror
sahf
fdivr
mov
mov
aaa
aam
dec
retf
fld
sub
pop
push
inc
add
ficom
push
gs
mov
outs
inc
test
ja
adc
rol
icebp
pusha
jp
sbb
xor
or
push
cmp
mov
mov
(bad)
or
jge
mov
hlt
ficom
mov
mov
xor
frstor
add
or
xor
add
sub
or
pop
dec
movs
mov
hlt
leave
mov
push
adc
and
dec
adc
cmp
mov
fidivr
pop
jb
hlt
jmp
mov
fimul
std
or
popf
stos
jmp
fmul
add
out
shl
mov
adc
inc
iret
loopne
int3
fnstcw
(bad)
gs
or
mov
jl
xchg
imul
(bad)
xchg
cmps
jb
je
retf
adc
dec
xor
sti
mov
dec
cmp
xor
ror
mov
sub
jp
(bad)
pop
xlat
and
or
mov
(bad)
push
imul
pushf
xor
fcomp
pop
mov
mov
iret
push
mov
call
mov
adc
jne
enter
pusha
pop
neg
jg
or
std
loope
fnstenv
sbb
jmp
add
in
xchg
repz
jmp
mov
stos
sbb
and
mov
out
and
pop
sbb
pop
cmp
xlat
cmps
fdiv
fiadd
pop
pop
fdivr
jmp
cli
fs
sbb
jae
pop
inc
inc
mov
mov
inc
xchg
std
fwait
jg
popa
daa
xor
jge
fbld
add
fmul
out
sub
jmp
out
dec
outs
and
daa
sbb
retf
and
mov
(bad)
push
ss
(bad)
int
sbb
cmp
pop
or
and
std
inc
sar
mov
push
(bad)
xchg
cli
mov
cmp
shl
lahf
sbb
bndldx
cld
jl
test
ja
adc
retf
inc
fstp
pop
sub
(bad)
mov
adc
(bad)
sbb
pop
cmp
sahf
dec
mul
(bad)
fucomi
loope
adc
repz
mov
scas
arpl
or
jno
imul
xchg
xor
push
imul
xchg
cmp
push
mov
dec
sti
out
mov
(bad)
adc
ficom
aaa
dec
test
hlt
loope
lods
dec
dec
mov
cli
dec
pop
aam
(bad)
call
xor
mov
ror
xor
xlat
icebp
jb
inc
mov
jge
aad
rcl
shl
or
in
add
(bad)
sbb
push
(bad)
ja
sub
jno
cdq
test
ja
xchg
jp
mov
stos
or
inc
scas
and
rcl
mov
aam
fs
lahf
cmps
in
sub
or
hlt
sub
adc
inc
in
xchg
sub
cld
mov
push
mov
fdivrp
adc
xchg
int
iret
iret
call
add
cmps
clc
dec
jb
inc
mov
xor
test
int3
push
mov
hlt
scas
mov
mov
add
dec
push
pop
repnz
les
adc
cs
stos
sub
or
(bad)
sahf
aaa
mov
fdiv
jle
shl
imul
cmps
xchg
push
shr
jmp
xor
add
pushf
retf
data16
movs
call
arpl
in
jbe
loope
pop
loope
cmp
add
test
mov
sub
mov
push
add
pop
shl
movs
sub
xlat
mov
imul
mov
add
(bad)
shl
lea
out
inc
xchg
(bad)
outs
(bad)
in
stos
adc
lea
cs
enter
inc
xlat
sti
pop
scas
inc
or
inc
dec
in
sub
cs
xchg
push
sbb
push
adc
fidiv
es
gs
fs
dec
push
cs
out
sbb
pop
and
(bad)
xor
sub
sbb
push
out
lahf
test
sub
scas
jae
cmps
pinsrw
sub
push
sbb
scas
in
push
mov
cmp
and
in
(bad)
rcl
hlt
data16
sbb
test
inc
cdq
mov
mov
jecxz
ret
mov
cwde
xchg
pop
enter
cmp
mov
das
and
jmp
mov
jmp
jo
cmps
data16
nop
and
mov
push
jo
pusha
gs
ja
jle
mov
sub
ss
pop
and
fucomi
add
std
scas
fild
loop
das
fwait
aaa
and
div
jp
aam
jno
cmp
push
cmp
dec
lds
dec
js
push
push
call
dec
and
enter
or
lods
cs
add
rcr
push
neg
dec
into
cmp
mov
sbb
(bad)
lock
int
xor
push
jb
fadd
push
movs
addr16
sahf
jecxz
sub
ror
pop
jno
adc
pop
and
test
sub
loop
dec
pushf
mov
fsubrp
stos
pop
and
push
(bad)
pop
test
fcomp
cs
xchg
mov
mov
aaa
jl
jp
jb
lahf
and
aad
sub
cmps
fcmovb
mov
pop
add
mov
dec
(bad)
repnz
push
loopne
jno
xor
pop
jmp
stos
mov
sub
or
add
pop
clc
lods
mov
adc
jmp
shr
mov
mov
jmp
cli
outs
push
out
mov
jo
aam
stos
dec
retf
call
ins
into
outs
retf
xor
pop
mov
adc
sub
sub
inc
push
aam
and
cmp
sub
shl
add
jle
pop
sbb
pushf
out
jg
lods
push
sbb
inc
or
sub
movs
jecxz
jmp
loopne
dec
pop
cmc
inc
jnp
std
dec
jl
sub
cli
mov
jp
mov
arpl
cmc
cmc
mov
jge
sub
sbb
inc
jge
(bad)
pop
ret
into
loope
mov
fldenv
xchg
inc
mov
aam
dec
ret
dec
pushf
push
or
adc
arpl
cmps
lds
les
jb
adc
hlt
jl
sub
daa
and
inc
movs
aaa
xchg
dec
sub
dec
xor
sti
in
and
inc
or
cmps
sar
scas
loop
(bad)
inc
mov
ds
cmp
push
sti
mov
das
fucompp
enter
adc
push
rol
nop
imul
shr
cmp
outs
or
scas
pop
(bad)
pop
ins
add
test
jae
in
sub
mov
dec
call
stc
fcomi
sub
push
add
(bad)
mov
xor
fdiv
jb
mov
inc
dec
fisub
sub
shl
jl
adc
mov
push
push
loop
mov
dec
or
xor
xchg
je
mov
rcl
mov
addr16
dec
xor
int3
(bad)
lock
or
mov
and
jle
xchg
xchg
xchg
pushw
push
push
in
mov
mov
or
jmp
dec
cmps
mov
dec
or
stos
xchg
sub
repz
adc
fistp
adc
mov
pop
adc
movs
fidivr
pop
mov
jne
cwde
jmp
call
bound
adc
cmp
jae
stc
add
and
rcr
je
out
xchg
les
scas
adc
cld
cdq
sbb
inc
frstor
add
sub
inc
add
jmp
ffree
movs
das
sub
pop
cs
sub
repnz
test
out
je
or
add
jg
or
call
fs
cmpxchg
jge
fild
pop
xchg
es
mov
jns
pop
test
mov
push
mov
or
lods
scas
rol
sbb
xor
fs
mov
aas
mov
sbb
push
sti
ret
adc
std
push
xchg
add
rcr
sub
out
jns
lods
pusha
repz
leave
sub
cmp
and
adc
ret
push
mov
mov
into
mov
xlat
mov
aam
repnz
je
into
sbb
push
arpl
ins
adc
repnz
movs
out
pop
mov
xchg
out
mov
cmp
cmp
and
lahf
outs
pop
ss
inc
dec
stc
xor
ror
inc
push
sbb
lods
scas
hlt
jns
pop
push
gs
push
jo
fs
push
pop
pop
push
pop
outs
loopne
icebp
sbb
lds
cmp
push
data16
sub
add
(bad)
jns
xchg
sbb
in
push
sbb
lds
sbb
xchg
inc
and
call
pop
ret
rcl
mov
adc
add
test
mov
mov
ffreep
and
and
jb
xor
icebp
(bad)
adc
push
push
jmp
xor
jg
dec
mov
mov
pop
xchg
xor
cmp
push
sub
sbb
icebp
jnp
push
rcr
cmp
cmp
scas
mov
inc
repz
push
and
sbb
or
cmc
test
ret
xor
sub
fwait
adc
fnsave
xchg
push
xchg
popf
ret
sub
iret
fild
bswap
adc
mov
and
je
adc
or
pop
sbb
inc
mov
inc
shl
inc
hlt
imul
jg
pop
jmp
je
dec
cmps
xchg
or
out
movs
out
pop
cs
fidiv
lods
movs
sbb
jo
call
pop
jo
popa
ret
inc
xchg
pop
mov
loopne
jecxz
add
cwde
loope
dec
pop
jmp
xor
loope
push
ins
cli
xchg
imul
mov
push
sbb
pop
sub
mov
adc
jl
inc
xchg
test
pop
adc
ds
iret
int
sub
ret
add
ror
fstp
cmp
pop
int3
pop
ret
ja
imul
xor
arpl
jge
sbb
nop
sub
push
loopne
sbb
in
in
jns
adc
cdq
sub
repnz
adc
mov
imul
sub
sub
(bad)
pop
js
and
jmp
and
les
aad
ret
repnz
push
jne
or
push
leave
mov
std
adc
test
jo
scas
bound
mov
test
pushf
pop
and
ins
int
push
mov
enter
pop
mov
cwde
leave
out
(bad)
fwait
sub
adc
pop
sub
inc
or
cmp
ss
and
jp
(bad)
cmp
mov
(bad)
mov
mov
aad
adc
daa
fisub
in
cmps
push
(bad)
std
div
mov
or
fisttp
adc
and
sub
je
cmp
sub
and
stos
test
test
push
inc
sub
or
aam
cmc
jge
mov
aad
push
add
popa
fneni(8087
std
data16
xor
scas
mov
stos
adc
pop
rol
dec
popf
cs
(bad)
cmp
jns
or
lock
jg
add
or
ret
xor
push
mov
test
xor
push
in
loope
mov
in
aam
repnz
mov
jns
mov
add
or
out
nop
push
inc
dec
scas
xchg
sbb
pop
dec
inc
or
aam
add
pop
jb
push
mov
fwait
mov
xor
cmp
push
sub
mov
mov
int
pop
adc
sub
mov
mov
es
popa
ficom
aad
(bad)
cmps
mov
unpckhps
or
js
stos
retf
imul
hlt
retf
stos
push
sar
loope
shr
push
add
cmp
cmp
cmp
xchg
cwde
ficomp
sub
jbe
movs
imul
xchg
inc
js
call
shr
ror
sub
sub
jmp
lds
popa
movs
pushf
pop
cmc
mov
mov
jecxz
cld
ficom
and
mov
jmp
aad
movs
stc
imul
and
test
xor
push
mov
add
jmp
loope
ins
push
shl
push
push
xlat
rol
jecxz
fmul
sbb
sbb
imul
rol
movs
(bad)
pop
aaa
mov
add
int3
imul
add
adc
push
js
sti
retf
sub
leave
mov
addr16
sbb
outs
jmp
xor
out
icebp
or
push
ins
jp
inc
lods
inc
jmp
lods
ret
jne
retf
pop
scas
inc
(bad)
mov
inc
mov
(bad)
dec
ins
sub
jmp
dec
xor
mov
je
loopne
jne
out
adc
cmp
adc
int
in
xor
or
(bad)
jmp
hlt
mov
aaa
cmc
test
jno
cs
sbb
jmp
sub
sub
xchg
stos
test
add
ins
mov
pop
jno
and
int
inc
stos
das
sbb
push
xchg
mov
daa
sub
ret
mov
push
mov
push
imul
pusha
mov
or
aad
xchg
cmp
out
pop
adc
lea
mov
mov
inc
inc
(bad)
pop
mov
cs
pop
dec
jmp
jb
popf
aam
out
dec
arpl
mov
or
or
in
scas
adc
aas
mov
mov
lock
dec
imul
adc
sub
dec
sub
jmp
mov
or
mov
stos
test
sbb
clc
xor
push
loope
test
sub
gs
lods
test
add
rcr
cmps
popa
add
int
enter
mov
retf
jmp
pop
inc
outs
mov
arpl
pop
pop
fwait
jle
xor
jo
mov
jp
enter
enter
out
ja
lods
cmp
or
add
lods
repnz
sub
stos
daa
dec
mov
push
ins
dec
push
stos
inc
add
nop
(bad)
dec
push
loop
nop
aaa
sbb
xor
test
ds
mov
(bad)
cli
fwait
lahf
lahf
ds
mov
dec
dec
and
dec
je
sahf
jmp
xchg
leave
cmc
aaa
xchg
out
(bad)
fnsetpm(287
pop
shr
out
fs
mov
jl
cld
jmp
movs
xchg
pushf
pushf
xchg
lods
ror
retf
cmc
sar
xchg
sar
add
sub
pop
mov
mov
mov
add
push
nop
in
mov
or
xlat
pop
and
fsubr
cli
inc
jmp
or
loop
iret
and
scas
fwait
mov
lahf
(bad)
xlat
ret
js
pop
(bad)
mov
pop
scas
xor
dec
sbb
pop
cmp
cmps
and
or
pop
pop
sub
fistp
out
mov
cmp
xor
push
stc
int3
(bad)
cmps
sub
dec
inc
mov
jg
out
push
xlat
lds
pop
cmp
mov
pushw
mov
or
lahf
cmps
mov
inc
sub
pusha
adc
popa
(bad)
adc
movs
lods
outs
repnz
imul
adc
add
push
vandnps
inc
out
xor
enter
fbld
addr16
dec
(bad)
jo
or
fstp
mov
xor
push
jge
js
aam
mov
push
adc
xor
loope
mov
test
cmps
pop
test
mov
lock
dec
mov
in
jge
pop
or
jo
or
dec
(bad)
into
dec
and
mov
call
ret
xchg
mov
out
xor
cdq
repz
bound
pop
lds
jg
shr
cmp
mov
cmp
out
fwait
adc
push
cmp
lds
dec
mov
aam
ficomp
mov
cmp
mov
jge
xchg
bound
jecxz
mov
sub
inc
je
not
or
loope
popf
retf
xchg
sub
(bad)
or
arpl
repz
outs
xor
add
daa
mov
fs
mov
adc
ins
adc
inc
mov
fadd
push
out
and
xor
sbb
inc
mov
pop
cmp
aad
arpl
mov
jl
inc
aas
fs
dec
popf
lds
ret
push
out
mov
inc
pop
push
or
cmp
push
ins
movs
popa
inc
jmp
jg
dec
xor
jmp
fdiv
sub
pushf
jb
js
or
loope
movs
or
(bad)
cli
ret
dec
cmp
std
pop
cmc
jnp
jns
pop
push
aam
jae
fisttp
push
popf
les
dec
pop
mov
jbe
cmp
(bad)
int
retf
mov
je
xor
out
adc
inc
sar
adc
repz
mov
and
and
outs
mov
xlat
sbb
adc
xor
add
and
pop
push
call
popf
push
aaa
mov
(bad)
or
aad
cmp
add
adc
dec
movs
jmp
mov
add
push
mov
jp
jns
stc
lock
adc
mov
dec
imul
ss
push
fcom
xchg
sub
out
into
xchg
mov
xchg
inc
add
or
lock
fsubr
je
imul
mov
xor
or
jae
cli
in
add
xchg
cs
fs
push
jb
fs
mov
(bad)
(bad)
test
test
xor
jae
ficom
cmp
pop
and
jle
mov
daa
push
inc
mov
cmp
int
jmp
ret
pop
dec
sub
push
in
retf
in
daa
dec
push
xchg
xlat
jae
dec
ror
fisttp
mov
xchg
in
arpl
movs
in
mov
sbb
push
mov
gs
pushf
inc
add
or
pop
imul
not
adc
cli
mov
jnp
sbb
into
icebp
push
dec
xor
cmp
aas
adc
pushf
mov
call
push
and
inc
xor
xchg
int3
push
jge
inc
add
fistp
outs
pop
pop
ins
jbe
popf
ja
icebp
inc
pop
push
stos
call
or
add
rcr
inc
cdq
jne
sbb
call
inc
xor
vpunpckhbw
cwde
mov
jb
call
in
icebp
loop
shl
pop
cmp
addr16
mov
xor
jg
and
in
jbe
(bad)
int
mov
in
loope
mov
int3
push
lahf
pop
mov
scas
lds
add
mov
xor
sub
jnp
inc
clc
push
add
dec
jp
ja
dec
repz
jns
ror
sbb
clc
test
data16
xchg
cs
or
ds
in
sub
cmps
and
(bad)
mov
popa
pop
jl
sahf
out
enter
or
push
lods
scas
jmp
mov
fld
sub
jge
adc
arpl
ss
add
cmp
mov
(bad)
(bad)
add
cmp
push
out
mov
pop
dec
shl
repnz
out
add
popa
mov
jo
ds
ret
xchg
pop
ds
fist
cmp
mov
adc
mov
inc
test
bnd
lods
call
mov
sahf
fist
loopne
(bad)
dec
ret
jg
xor
mov
pop
add
push
je
xchg
dec
xchg
into
nop
shr
out
pop
loope
enter
test
mov
inc
(bad)
(bad)
(bad)
mov
mov
xchg
lea
lods
lock
and
pusha
and
or
pop
fcom
addr16
ret
xchg
and
and
mov
dec
movs
bnd
jecxz
cmp
ficomp
rol
adc
jl
ss
lahf
aaa
mov
pop
jnp
jns
add
add
sub
aas
popa
add
add
mov
lds
fs
mov
loop
(bad)
and
imul
xchg
vpavgw
ror
sar
and
pop
inc
stos
pop
adc
ja
ret
ins
lods
inc
jmp
mov
enter
jo
ror
add
out
arpl
inc
int3
in
push
pop
adc
cdq
inc
(bad)
call
leave
inc
push
jmp
sub
xor
mov
dec
(bad)
and
aam
adc
pop
add
mov
jecxz
xor
cmp
add
arpl
add
sbb
sbb
mov
xor
aam
mov
jns
lds
lods
iret
xchg
sub
xchg
sbb
dec
xchg
pop
push
ins
jbe
out
icebp
mov
lock
mov
scas
cmp
outs
inc
shr
jge
inc
pop
and
mov
test
mov
jle
push
popa
shl
push
jmp
(bad)
xor
bound
jge
cld
mov
in
adc
rcl
sbb
xor
(bad)
cmp
div
mov
dec
dec
add
arpl
jl
ins
mov
cmp
int
sub
dec
jae
mov
xor
test
pop
cs
xlat
pusha
call
ds
mov
mov
mov
push
or
and
pop
xor
aad
inc
ret
push
dec
cmp
sti
cmp
jmp
xor
push
mov
inc
dec
ja
xor
or
test
inc
call
push
data16
(bad)
push
jmp
add
ds
xor
sbb
arpl
adc
scas
xor
ror
retf
pop
add
stc
push
cmc
adc
jle
lods
lea
cmc
jne
jnp
mov
jg
retf
inc
mov
(bad)
aam
ret
dec
mov
mov
xchg
aam
call
adc
add
jmp
push
inc
in
jge
dec
repz
sbb
fadd
scas
push
stc
arpl
mov
inc
ficom
mov
inc
dec
add
popa
mov
mov
push
xor
imul
mov
jo
(bad)
out
and
call
mov
dec
pushf
stos
push
aad
ins
sar
xchg
fcomip
repz
jge
hlt
test
mov
inc
adc
sub
add
adc
clc
mov
cwde
add
push
bound
and
(bad)
cmc
dec
fucom
pop
inc
cld
sahf
inc
scas
pop
push
xchg
mov
cli
mov
pop
and
adc
add
and
add
cwde
movs
(bad)
mov
mov
dec
mov
cs
(bad)
cld
add
sar
cmp
and
pop
pop
test
dec
push
ror
dec
int3
cmp
pop
(bad)
das
mov
add
pop
mov
mov
int3
mov
cmp
icebp
push
sbb
sar
adc
lods
(bad)
ret
data16
xchg
(bad)
jne
test
aad
lods
mov
ret
and
es
pusha
pop
in
mov
inc
sbb
xor
fistp
popa
jl
data16
push
xchg
loopne
icebp
test
sbb
(bad)
cmp
xchg
adc
lods
inc
sub
fisttp
mov
sar
aaa
retf
cmp
div
pushf
mov
and
jg
cmc
pop
add
outs
adc
add
int3
fnstenv
outs
ds
mov
scas
fisttp
and
jmp
outs
push
pop
xchg
arpl
sub
push
clc
adc
addr16
add
(bad)
stc
and
and
fwait
xchg
sbb
ret
dec
(bad)
neg
rdpmc
cmc
cmp
cmps
sbb
cld
popa
mov
mov
inc
xchg
std
push
fld
test
cwde
jo
cdq
ds
stc
les
bound
ret
push
icebp
sbb
xchg
fdivr
mov
je
es
out
stos
rcr
or
sbb
in
sub
jecxz
ret
xchg
lods
xchg
lds
lahf
outs
sub
dec
cmp
in
cmp
jl
jnp
mov
aaa
cmp
cmp
sbb
scas
pop
scas
into
fbstp
pop
adc
aas
xor
pop
adc
fiadd
and
mov
mov
and
adc
push
arpl
ror
les
or
inc
cmps
test
dec
das
jl
sub
sbb
push
daa
push
cld
stc
dec
xor
mov
arpl
sbb
scas
rcr
jmp
xchg
retf
xchg
shr
cmp
iret
sub
adc
mov
outs
(bad)
adc
aaa
call
jnp
aam
call
leave
pusha
imul
nop
ins
daa
pop
cmp
sbb
nop
pop
popa
fist
sbb
dec
aas
cmp
mov
sbb
cmp
retf
mov
or
ret
xchg
call
adc
loop
cmps
mov
push
fcomp
dec
jecxz
lea
xor
mov
jg
lods
mov
int
mov
jns
and
push
mov
mov
stos
pusha
xlat
imul
ins
test
mov
pop
fxch
and
add
int
and
pop
in
sub
cdq
xlat
imul
xchg
inc
test
movs
pop
add
stos
mov
out
mov
(bad)
or
jb
repz
imul
dec
mov
fst
pop
jl
retf
dec
sbb
jmp
add
inc
push
pop
mov
mov
xchg
test
in
clc
or
ds
push
in
dec
jmp
call
or
enter
fild
test
inc
fist
dec
push
loopne
mov
cmp
adc
outs
adc
ror
(bad)
add
fst
loop
dec
imul
aam
pop
xchg
(bad)
xchg
fwait
(bad)
in
push
inc
imul
ins
pop
enter
out
ret
fsub
xor
adc
dec
mov
mov
cmp
xor
leave
mov
test
push
loop
inc
jg
leave
addr16
xor
clc
dec
imul
popf
mov
mov
adc
jno
dec
call
or
add
fwait
imul
movs
stc
cmps
call
sub
outs
cld
int3
das
jmp
leave
pop
pop
pusha
and
in
ins
sbb
inc
cmps
fidivr
out
je
adc
fsub
inc
add
icebp
or
aad
aad
adc
jg
fwait
push
xchg
inc
xchg
push
jle
xor
mov
xor
jp
mov
push
or
outs
or
inc
ret
(bad)
out
mov
mov
pop
(bad)
push
xor
jmp
test
pop
add
lds
into
aaa
mov
sub
or
shr
out
jmp
jo
cmp
imul
mov
popa
mov
cmps
(bad)
mov
adc
or
mov
lahf
in
(bad)
int
fistp
mov
call
cmc
fcomp
push
jo
adc
cmp
cdq
popf
mov
loop
(bad)
add
xor
or
cmp
pop
inc
adc
iret
mul
xchg
mov
movs
or
mov
in
into
lahf
test
sahf
mov
clc
pop
icebp
aaa
stc
add
std
inc
(bad)
mov
dec
adc
ficomp
movs
adc
imul
fld
mov
sbb
cmp
mov
call
sbb
adc
xor
movs
jns
mov
sub
stc
or
mov
push
sbb
ret
clc
dec
dec
inc
inc
pop
(bad)
cld
mov
lds
sub
enter
mov
mov
mov
or
clc
sbb
shl
dec
(bad)
xor
aad
sub
fiadd
std
(bad)
icebp
in
add
push
sahf
inc
es
adc
js
popf
icebp
pop
ficomp
out
mov
lahf
lods
and
lods
inc
sbb
ds
movs
leave
int3
movs
push
aad
sub
pop
mov
or
and
fst
sub
(bad)
addr16
cwde
mov
mov
imul
adc
inc
pusha
pop
fmul
mov
arpl
inc
mov
sub
mov
or
pushf
and
xor
mov
push
imul
inc
scas
ret
mov
aas
mov
pop
pop
lea
xchg
mov
or
lods
xlat
xchg
jmp
xor
out
sbb
std
sbb
call
outs
jns
mov
hlt
daa
fcmovnb
cli
mov
retf
push
adc
push
sub
cmp
shr
adc
int3
cld
test
or
dec
int3
mov
daa
push
aas
(bad)
daa
cwde
inc
push
fs
xchg
pop
in
mov
jg
lea
adc
pop
enter
pop
movs
xor
loop
aas
jne
js
and
je
pop
mov
test
dec
inc
jae
jle
xor
(bad)
and
adc
fs
mov
xchg
(bad)
retf
and
push
xchg
movsx
ret
xchg
(bad)
sbb
sub
push
in
jne
and
fld
fwait
xor
xor
mov
jl
sub
pop
lods
bound
pop
push
inc
mov
lahf
push
pop
jmp
lods
sbb
(bad)
or
loop
inc
retf
cmc
cmps
cmc
xchg
pop
xchg
mov
fsub
leave
mov
or
add
mov
and
imul
pop
cmp
ins
xchg
div
std
ja
and
ins
and
jp
test
stc
aad
call
cmp
mov
dec
rcl
push
push
outs
pop
call
xor
push
push
cmc
inc
and
into
push
ror
out
rcl
dec
outs
lods
ret
mov
fistp
ss
retf
stos
pop
pop
fidivr
sahf
pop
rcl
adc
fidivr
jg
xchg
push
mov
cmp
outs
shl
mov
daa
xchg
xor
xor
mov
xor
test
jg
int3
xchg
fnstcw
sahf
cli
call
xchg
xchg
ja
jmp
cmp
jmp
not
xchg
pop
mul
inc
mov
or
ins
pop
jmp
mov
jp
fsubr
dec
sub
aaa
sbb
or
jmp
inc
aas
cdq
mov
outs
lds
into
loop
cwde
jp
(bad)
push
mov
xchg
sbb
push
lods
pop
push
js
leave
es
out
in
cmp
and
mov
sbb
inc
xchg
ffreep
cwde
add
sub
adc
push
stc
push
out
pop
cdq
and
and
fisttp
pop
test
bound
jnp
hlt
xlat
sbb
mov
push
xchg
mov
mov
mov
dec
test
add
scas
xchg
add
or
retf
arpl
mov
push
add
jne
(bad)
daa
jle
xlat
scas
loop
lods
lahf
xor
shl
imul
mov
xchg
and
add
xchg
outs
add
jnp
sbb
enter
call
xchg
jmp
push
cwde
sbb
pop
add
sub
shl
dec
xchg
into
pop
add
xor
rcr
inc
pop
mov
adc
mov
and
cmps
mov
cs
(bad)
xor
repnz
ret
push
ficom
inc
shl
and
or
dec
xchg
xchg
inc
dec
pop
(bad)
out
sar
cdq
push
cmp
inc
mov
retf
daa
es
mov
sub
icebp
push
test
xchg
(bad)
jns
pop
sbb
cdq
pop
push
ficomp
jg
xor
add
fcom
add
hlt
aad
mov
xchg
mov
scas
adc
mov
dec
pop
mov
xor
mov
popf
ret
stc
bound
and
dec
push
mov
mov
sbb
pop
out
stos
jmp
daa
pop
(bad)
cmp
movs
mov
dec
iret
sub
leave
jns
lds
lods
mov
sti
dec
mov
sti
xor
pop
xchg
and
xchg
popa
xor
dec
mov
xor
xchg
adc
int3
push
and
cmc
test
sub
push
int
push
cmp
cwde
adc
retf
sub
loope
leave
arpl
outs
and
retf
mov
test
mov
int
stos
push
push
popa
jno
arpl
jns
icebp
imul
ret
aam
pop
adc
jmp
sar
or
jmp
bound
movsx
icebp
cli
lods
fiadd
dec
cmps
sar
mov
sub
cli
shl
pop
repz
inc
lods
inc
mov
xchg
push
or
xor
les
std
mov
pusha
jb
jge
(bad)
adc
lock
outs
mov
jns
cmp
std
shl
popa
add
mov
push
les
ds
scas
mov
(bad)
ror
cwde
inc
lods
mov
mov
and
sahf
sbb
xchg
mov
out
cmovno
and
inc
jo
cmp
stos
mov
dec
add
mov
add
imul
cwde
mov
dec
mov
ja
aaa
dec
aad
jbe
adc
sub
out
int
adc
add
jne
sub
or
add
cmp
outs
in
fdivr
gs
cmp
sbb
out
mov
lea
clc
or
cmps
push
ret
jg
repz
cli
mov
push
lea
addr16
stc
push
aaa
cs
xor
adc
in
loopne
xor
into
(bad)
int
in
jg
je
and
or
dec
adc
aas
pop
xlat
pop
push
movs
mov
push
add
mov
mov
mov
test
mov
ret
sbb
xchg
inc
mov
add
inc
aam
rcl
cmp
cmp
sahf
jge
bound
pop
es
mov
gs
hlt
loope
or
shl
push
(bad)
psrlw
(bad)
push
iret
ja
sub
das
stc
xchg
jns
jae
adc
jno
repz
mov
stos
inc
pop
push
bound
dec
mov
mov
data16
sub
pop
dec
int3
es
enter
push
add
les
jo
jne
and
jmp
imul
ins
fist
dec
jmp
mov
ja
mov
or
daa
or
and
jecxz
out
popf
sbb
ror
(bad)
cmp
imul
inc
push
sahf
pop
push
addr16
jmp
test
jle
lds
sub
add
shl
or
mov
push
cs
pop
jnp
cmp
or
sub
xor
pop
(bad)
and
mov
cmp
pusha
jae
and
call
daa
and
popa
mov
cld
out
xchg
push
ret
and
adc
mov
mov
cld
cmp
mov
pop
dec
outs
mov
inc
call
movups
(bad)
mov
adc
imul
adc
and
cmps
add
call
sbb
sub
outs
xor
adc
es
sbb
inc
jo
call
xchg
inc
in
adc
ret
mov
call
imul
retf
hlt
cwde
inc
sub
and
mov
or
lods
pop
imul
push
add
mov
imul
xor
sbb
mov
xchg
sti
nop
or
pop
int3
div
dec
cmp
sbb
stc
dec
(bad)
pop
icebp
in
out
xor
jle
fsubr
push
call
and
push
mov
push
scas
pop
lods
sub
cmp
or
or
pop
iret
add
jno
out
dec
push
mov
(bad)
mov
xchg
jge
in
push
jnp
repnz
jl
push
inc
movs
mov
fnsave
add
and
in
fs
je
xchg
mov
mov
inc
pusha
dec
pop
ss
sub
dec
cmp
mov
call
sub
mov
mov
into
mov
xchg
add
out
stos
fisubr
int3
jp
iret
jae
scas
sub
cli
je
xor
lea
sbb
or
jge
mov
mov
sbb
pop
lahf
retf
(bad)
fidivr
call
fnstsw
xor
push
inc
mov
mov
daa
or
jmp
pop
pop
in
js
inc
in
lock
arpl
and
movs
es
jns
and
arpl
retf
pop
out
aas
add
jns
add
inc
push
mov
(bad)
(bad)
retf
inc
mov
adc
push
xchg
repz
popf
push
sub
inc
adc
cmps
fistp
rcr
jne
test
cmps
test
fneni(8087
mov
inc
adc
nop
inc
test
(bad)
data16
adc
mov
mov
imul
outs
ror
scas
cwde
mov
pop
loope
hlt
cli
mov
push
jecxz
mov
cmps
jg
fldcw
mov
and
gs
cmps
int
lahf
call
jp
jne
scas
int3
sub
xchg
ror
fs
xlat
das
mov
aas
repnz
xor
cwde
or
daa
les
loopne
test
adc
aad
aas
push
mov
inc
adc
cmp
push
sti
inc
out
adc
xchg
test
repz
inc
(bad)
cwde
outs
cwde
cwde
push
push
mov
xor
out
jl
or
dec
ins
loope
call
adc
push
add
in
loope
inc
mov
xor
(bad)
scas
das
jl
mov
repnz
pop
jb
call
es
mov
and
nop
fdiv
pop
leave
jnp
ret
push
mov
push
(bad)
jg
lods
sbb
ror
adc
cmp
enter
add
mov
pop
mov
xor
loope
xor
dec
les
pop
pop
loopne
(bad)
loop
icebp
nop
or
cli
les
jecxz
ret
dec
push
cmp
xchg
cmps
pusha
mov
popa
neg
daa
sti
cmp
fcmovnu
clc
xor
out
jmp
(bad)
stc
or
dec
adc
popa
push
rcl
int3
(bad)
daa
or
inc
into
es
scas
pusha
mov
pcmpgtw
pop
pop
pop
retf
ret
test
lods
fistp
popa
arpl
sub
adc
push
add
sub
ds
test
mov
cld
ins
mov
mov
pop
out
mov
dec
jae
ins
adc
jmp
inc
cld
gs
and
jae
fadd
push
aas
jmp
ja
mov
fsubr
push
aam
cs
and
inc
in
push
aam
add
xchg
adc
cmp
test
mov
mov
in
mov
repz
(bad)
sub
push
sbb
mov
in
jg
sbb
sbb
add
push
jle
pop
rcl
add
paddusb
test
in
and
or
dec
cmps
gs
mov
lock
hlt
lods
push
call
push
dec
jmp
loope
or
lds
ins
jae
and
mov
pop
mov
inc
jge
sbb
mov
test
jnp
aam
lods
adc
jo
out
iret
aam
mov
scas
ins
popf
inc
pop
or
bound
test
retf
movs
add
xlat
inc
adc
xchg
inc
and
pop
sub
repnz
cmc
xor
mov
rcr
daa
sub
push
xor
sub
(bad)
(bad)
fcmovu
out
mov
ds
xchg
rcr
add
inc
add
push
mov
lock
jmp
jp
mov
pop
cmp
mov
add
mov
push
icebp
data16
int3
in
test
leave
adc
mov
fild
fwait
sub
xor
push
test
loop
or
gs
inc
test
out
dec
sub
and
ftst
leave
das
out
pop
stos
dec
or
jnp
ret
mov
rcl
xchg
push
addr16
add
fbstp
or
fnstsw
sub
add
mov
je
lds
xchg
je
neg
int3
out
xor
(bad)
inc
das
loopne
sbb
or
mov
enter
push
cmp
mov
inc
sbb
jge
(bad)
iret
jmp
mov
cmp
mov
test
push
je
data16
inc
(bad)
cmp
xchg
xchg
inc
leave
sbb
cmp
xchg
stos
xlat
adc
sahf
hlt
mov
or
jge
mov
mov
pop
mov
mov
popa
jo
jp
lsl
shr
call
cld
jmp
sub
retf
xor
outs
xor
pop
xchg
int3
sub
(bad)
aas
in
xor
cdq
mov
and
daa
pop
cmp
hlt
gs
mov
bswap
lods
(bad)
popa
cmp
sbb
dec
sbb
adc
test
xchg
enter
repz
jmp
fs
mov
sbb
lods
rol
sahf
imul
test
xchg
xchg
xchg
(bad)
call
lock
and
jne
jne
jge
cmc
out
stc
and
nop
mov
sahf
sub
xor
mov
dec
(bad)
enter
xchg
stos
add
and
mov
outs
mov
sbb
int3
je
jp
adc
repnz
xchg
adc
mov
loope
mov
and
js
pop
fs
outs
sbb
xor
int3
(bad)
or
mov
mov
out
mov
gs
jns
mov
inc
push
out
aad
movs
ins
add
sbb
jmp
add
outs
mov
in
mov
ret
pop
in
mov
out
sbb
ret
jo
shl
sub
imul
int3
sbb
cmp
jl
inc
outs
in
jmp
mov
mov
xchg
mov
and
popf
sti
jno
lahf
and
das
jl
inc
ds
or
or
nop
inc
or
pop
lods
(bad)
jne
sub
mov
jle
(bad)
xor
fisub
(bad)
jg
mov
cmc
cli
leave
lahf
das
movs
iret
into
mov
lds
push
xor
les
xchg
push
fs
mov
mov
fldenv
mov
cmc
add
jae
mov
push
mov
lock
pusha
xor
inc
push
cwde
mov
sbb
dec
lods
dec
pop
add
into
dec
jecxz
ja
jg
aam
(bad)
(bad)
es
ds
inc
mov
ret
inc
and
push
cmps
xchg
jmp
sub
mov
rcr
pop
push
cmp
lea
xor
or
dec
push
das
mov
aas
leave
pop
in
std
xchg
stos
pop
retf
(bad)
movs
out
pop
loopne
adc
loopne
arpl
inc
out
dec
push
push
sbb
cmp
and
inc
xchg
dec
in
out
pop
push
adc
jnp
push
div
mov
cmp
cmps
jp
(bad)
out
add
fwait
pop
(bad)
lock
xchg
dec
add
test
inc
inc
repnz
sub
test
push
xchg
cmp
call
sub
xlat
test
cwde
or
imul
adc
fwait
cmc
push
push
stos
push
loope
sbb
xchg
lock
(bad)
sbb
adc
or
cmps
retf
adc
movs
daa
push
mov
xchg
sar
pusha
rol
test
pusha
adc
or
clc
sub
or
mov
and
test
xchg
cmp
add
dec
sub
push
or
or
in
pop
push
sbb
pushf
(bad)
push
jmp
adc
pop
mov
outs
jno
push
pop
sbb
icebp
(bad)
ins
in
ss
xchg
mov
mov
pop
sahf
fdivr
dec
cli
dec
inc
and
enter
js
stc
xchg
sub
mov
jnp
les
stos
xor
fistp
xor
jb
pop
pop
xor
sbb
outs
fiadd
loopne
fbld
xor
ror
xor
aam
mov
(bad)
jnp
jbe
inc
js
rol
cmps
neg
adc
xor
sbb
ins
add
jp
(bad)
xor
repnz
nop
sub
inc
mov
mov
test
mov
fst
jle
sub
popf
retf
xor
imul
or
inc
or
xor
mov
pusha
gs
inc
jb
(bad)
repnz
push
push
sub
call
push
pop
pop
and
in
jb
sbb
xor
jno
push
dec
adc
jne
inc
pop
mov
pop
fidivr
xchg
test
sbb
cmp
out
les
sbb
add
push
sbb
ror
mov
loopne
jbe
icebp
add
dec
fist
fisttp
xlat
(bad)
sbb
test
(bad)
adc
daa
aaa
mov
pusha
js
(bad)
and
pop
xchg
push
mov
jbe
jge
push
mov
xchg
mov
(bad)
dec
xchg
adc
fnstcw
dec
push
mov
pop
lahf
adc
repnz
lods
cmps
push
out
push
mov
ret
push
jb
div
(bad)
push
add
cmp
inc
add
in
popa
cmp
out
sbb
test
bound
(bad)
sbb
in
dec
rcl
loopne
icebp
xor
add
cmc
inc
inc
inc
mov
jg
pop
rcl
mov
or
jo
jae
shl
jecxz
js
cmc
loop
in
jmp
pushf
xchg
or
fs
mov
ins
sub
mov
das
jl
push
jl
mov
shl
sahf
rcl
and
and
in
jb
cs
aaa
xor
ffreep
or
add
out
in
or
imul
out
pusha
sub
dec
or
jmp
test
adc
jmp
pop
in
rcl
popf
pop
les
aaa
ins
add
jno
mov
leave
dec
lods
adc
mov
cli
stos
sbb
dec
xchg
stc
push
scas
movs
push
mov
mov
test
(bad)
xchg
ret
cmps
fistp
repz
sbb
test
test
or
or
mov
or
inc
push
adc
mov
movs
loope
xchg
lock
stc
lods
mov
and
mov
xor
mov
mov
inc
xor
mov
push
mov
push
pushf
data16
jno
push
mov
xor
lods
pop
jne
aaa
mov
popf
aad
aaa
cmp
iret
jbe
ret
push
mov
fwait
cmp
inc
push
nop
xor
stos
lods
dec
out
(bad)
pop
pop
inc
into
hlt
dec
inc
in
cmc
out
neg
cmp
cwde
icebp
jae
mov
xor
sub
push
inc
push
mov
and
adc
mov
imul
das
ret
clc
push
call
cli
sbb
mov
stc
pop
dec
mov
push
aaa
mov
pop
lods
push
stos
pop
cdq
or
ja
pop
inc
adc
mov
lock
mov
fwait
adc
inc
pop
clc
jns
daa
mov
sub
dec
or
adc
add
test
xchg
popf
sbb
or
daa
ins
jnp
push
mov
inc
inc
jno
cld
shl
push
dec
mov
pop
movs
mov
mov
adc
or
ret
sbb
popf
push
bound
pusha
mov
fistp
idiv
add
fadd
push
call
xor
pop
inc
jge
mov
xor
int3
jle
mov
stos
lods
test
std
aas
push
mov
mov
push
jne
sub
inc
(bad)
sbb
int
mov
cld
pushf
fsubr
sub
jmp
aaa
mov
mov
mov
cs
hlt
push
push
mov
push
mov
daa
dec
dec
jo
pop
xor
daa
call
pop
mov
sub
frstor
movs
cmp
sti
mov
out
dec
mov
bound
push
imul
and
call
jnp
xchg
(bad)
add
xchg
adc
cmp
jne
or
cmp
jmp
cmc
adc
lds
icebp
shl
scas
int3
push
mov
imul
aas
loop
xchg
mov
fcomp
shl
lds
aas
fbstp
repz
adc
jge
fwait
sbb
stos
pop
cmp
call
pop
clc
repnz
mov
bound
cli
shl
sbb
lods
js
out
pop
and
push
mov
das
jg
dec
pop
loope
push
lods
clc
mov
and
fdiv
xor
push
jg
movs
jae
fwait
test
aaa
cmps
sub
pusha
mov
sbb
ficomp
mov
fst
(bad)
(bad)
nop
jge
jne
or
mov
pop
sahf
mov
cmp
je
and
in
add
js
int3
cmp
stos
js
js
test
aaa
ds
jge
mov
sbb
repz
add
sub
pop
mov
pop
dec
icebp
call
retf
cmp
iret
inc
data16
retf
cmps
daa
loop
out
popf
popa
push
mov
mov
cmp
push
int3
js
call
add
push
jmp
das
mov
outs
test
mov
mov
retf
aad
nop
std
stos
jecxz
repz
ret
mov
push
fscale
sbb
adc
add
xchg
(bad)
test
repz
cmp
mov
div
push
test
fistp
push
pop
test
mov
jl
xor
xor
push
xchg
je
sti
mul
adc
mov
movs
in
xor
xchg
lea
rcr
test
hlt
ss
cwde
mov
cmp
push
jbe
or
rcr
jp
or
lock
fs
dec
inc
imul
in
jbe
pop
jecxz
inc
lods
idiv
jle
mov
cmps
xchg
call
aaa
retf
pop
aad
jmp
int3
je
in
xor
cmps
les
cmp
or
sub
adc
cwde
in
inc
mov
dec
add
fisubr
daa
jge
ins
std
sbb
hlt
or
out
jo
test
sub
es
xchg
test
iret
pop
inc
lahf
push
loopne
mov
scas
into
cmps
inc
inc
push
jl
inc
sub
push
cld
scas
pop
retf
mov
cmps
push
pcmpeqb
inc
into
sbb
pusha
hlt
mov
pusha
in
fisub
push
or
jl
inc
test
les
lds
cmp
aas
inc
jmp
xor
jecxz
or
out
out
ficomp
ds
pop
mov
mov
loope
test
das
pusha
jle
mov
and
jle
arpl
xor
arpl
push
dec
shl
or
sub
xchg
sbb
pop
stos
gs
mov
ja
je
and
mov
pop
push
mov
or
repnz
shr
add
mov
add
jg
jmp
je
mov
push
cmc
sbb
or
sub
daa
push
rcl
push
sbb
mov
mov
retf
ja
faddp
or
add
sahf
clc
push
scas
adc
cld
push
pop
pop
add
jns
inc
inc
hlt
in
dec
sub
inc
jmp
mov
sbb
rol
idiv
cmp
push
jnp
mov
fild
fwait
xchg
inc
cmp
fistp
mov
inc
dec
add
mov
adc
pop
dec
stos
in
lods
scas
sbb
arpl
mov
xchg
ret
xor
cmc
dec
dec
inc
mov
fmul
cwde
iret
imul
fcmovbe
mov
mov
add
div
xchg
data16
lea
je
cmp
dec
cmc
push
ja
leave
pop
xor
je
rcl
dec
div
into
cs
mov
jno
scas
and
or
(bad)
mov
and
jge
mov
jo
jg
in
fmul
xor
(bad)
xchg
jle
dec
movs
loope
cmp
inc
loop
inc
sbb
pusha
xchg
arpl
push
hlt
(bad)
ins
(bad)
mov
xlat
(bad)
pop
popf
hlt
dec
retf
cmp
pop
cmp
test
(bad)
cmps
jo
cmc
int3
outs
mov
dec
test
mov
repz
lds
or
test
lock
hlt
push
je
retf
call
pop
or
cmp
popf
ja
sub
test
push
shr
or
fstp
retf
fs
hlt
sub
mov
(bad)
jno
jo
pop
enter
push
(bad)
mov
and
cmp
and
pop
outs
jbe
xlat
ror
in
mov
repz
call
jle
push
inc
jmp
mov
jg
cdq
jo
rol
mov
(bad)
fbstp
fwait
sbb
mov
call
mov
mov
add
test
cmp
adc
mov
push
in
sar
test
repnz
jmp
loope
mov
xchg
jp
in
(bad)
int3
aaa
popa
add
sbb
jmp
xor
xor
dec
jecxz
or
jp
retf
sahf
inc
mov
ds
aas
ret
add
mov
cmps
sbb
mov
or
or
mov
push
pop
je
jno
and
cmp
mov
repnz
int3
push
jae
adc
or
loope
addr16
dec
mov
movs
xchg
xor
out
and
fldenv
out
push
pop
cmp
test
adc
movs
mov
jno
hlt
das
(bad)
call
add
or
pop
clc
pop
dec
jmp
lahf
popa
cmp
push
inc
push
leave
dec
stc
and
add
or
jnp
jae
nop
cs
push
cmps
jp
lods
mov
retf
stos
mov
mov
push
bound
loope
inc
retf
ins
outs
mov
dec
test
imul
fdiv
and
and
mov
mov
test
adc
pop
ror
xor
jnp
add
push
xor
mov
mov
inc
jl
(bad)
jnp
pop
mov
mov
sub
test
je
pusha
out
int
nop
mov
jl
bound
scas
int
dec
jne
in
sahf
jg
call
int3
and
mov
cmp
ficomp
cmp
sub
fisub
cdq
imul
mov
test
push
jno
out
(bad)
nop
jmp
int
arpl
pushf
idiv
mov
dec
push
mov
adc
jmp
inc
mov
mov
mov
aad
dec
jl
lock
stos
(bad)
cmp
cs
mov
mov
jl
movs
jns
inc
sar
ror
xor
cmp
sahf
das
mov
or
sbb
gs
sar
outs
js
xchg
push
stos
leave
jbe
mov
les
(bad)
pusha
test
and
push
mov
stos
jne
outs
xchg
adc
jmp
xchg
sbb
cld
cmp
inc
out
mov
sbb
pop
arpl
push
imul
fs
repnz
stos
adc
outs
ror
dec
sbb
in
outs
mov
add
dec
add
loop
push
push
adc
lock
mov
and
mov
loope
sbb
mov
jecxz
scas
push
cmp
les
xor
scas
xor
pop
mov
cdq
ficom
mov
and
and
in
xchg
xor
xlat
dec
mov
or
push
push
ja
mov
mov
std
inc
push
imul
repnz
cmps
sbb
adc
push
pop
out
jecxz
stc
mov
(bad)
dec
test
ret
or
addr16
inc
inc
or
aam
lahf
ret
rol
test
adc
mov
xor
into
inc
int
imul
dec
mov
dec
jne
rcr
fxch
mov
mov
xor
push
add
lods
dec
jno
and
xchg
mov
or
jle
inc
cmp
inc
pusha
nop
fdivr
aam
sbb
inc
inc
daa
mov
mov
std
mov
pushf
fs
mov
pop
jmp
out
test
dec
and
inc
lahf
inc
sub
cmps
or
not
cmp
jp
out
ja
rol
push
xchg
pop
push
adc
sub
xor
mov
pop
test
inc
(bad)
fidiv
xorps
mov
sbb
xchg
jle
or
xor
mov
mov
sbb
in
or
mov
fcmovu
loope
stos
mov
pop
jne
cwde
mov
pop
inc
stc
movaps
push
or
xlat
cmp
xchg
mov
mov
out
test
fwait
dec
dec
test
sbb
mov
shl
push
mov
pop
jmp
ins
sbb
adc
xor
dec
xchg
jo
out
inc
fstp
mov
mov
sbb
icebp
neg
dec
fs
gs
inc
(bad)
pop
push
leave
cli
repz
sub
std
je
xor
cs
pop
add
in
add
adc
lods
jbe
mov
push
sti
mov
xor
scas
popa
jns
test
jne
push
mov
pop
inc
adc
push
and
popa
cmp
jnp
leave
scas
push
(bad)
push
cmps
push
pop
mov
mov
adc
sbb
out
lea
aas
fmul
stc
daa
rcr
out
stos
outs
(bad)
int3
scas
lea
(bad)
jmp
mov
loop
gs
je
push
fimul
rol
rcr
lds
mov
lods
lock
out
jb
lock
fld
dec
js
call
mov
sub
jmp
stc
inc
inc
gs
(bad)
je
xor
test
add
dec
jle
xchg
jo
add
mov
cdq
sbb
cs
inc
in
xchg
push
repz
and
test
mov
fisub
mov
jmp
mov
add
cmps
cmc
mov
aas
in
add
(bad)
dec
mov
push
xor
repnz
ret
pop
mov
pop
dec
xor
add
in
cmp
dec
push
jne
int
mov
adc
cld
fisttp
scas
add
cmp
cmp
add
or
popf
lea
(bad)
loop
inc
rcl
inc
xor
push
mov
add
imul
mov
sbb
and
mov
in
pop
sti
jne
push
fistp
mov
inc
dec
mov
cld
clc
std
fs
cmp
sub
lods
sub
out
jp
call
push
movlps
sar
(bad)
rcr
das
sub
cmp
mov
and
movs
adc
stc
pop
sub
rcl
aam
(bad)
pop
mov
adc
outs
stc
scas
std
(bad)
push
out
mov
dec
sbb
mov
push
jae
cmp
xor
aad
(bad)
ds
jl
add
test
push
div
sbb
adc
leave
scas
and
fistp
imul
xor
out
cmp
inc
sbb
cmp
leave
add
mov
push
mov
sbb
imul
out
mov
dec
pop
or
mov
shl
mov
pop
push
ret
sub
fadd
jne
inc
fninit
lahf
push
jns
adc
push
lahf
xchg
mov
add
ds
(bad)
adc
xor
and
pusha
ins
int3
repz
and
clc
aas
add
xor
int3
pushw
jns
and
mov
into
dec
out
(bad)
hlt
lds
mov
cmp
test
ret
inc
imul
mov
push
scas
mov
ja
cmp
sub
jecxz
retf
and
popf
fprem1
xchg
sbb
jle
cdq
lea
adc
pop
xchg
sete
inc
loope
scas
data16
mov
cwde
mov
aam
shl
add
repz
pop
fwait
jno
aas
sub
jmp
mov
sub
push
test
pop
mov
mov
in
xor
loop
jno
in
push
cdq
cmp
retf
sbb
aaa
call
dec
sbb
in
sub
repnz
nop
jne
sar
push
lds
xor
stos
inc
adc
xchg
ret
fs
in
push
retf
lahf
mov
mov
dec
mov
outs
scas
mov
into
retf
inc
sub
inc
daa
pop
sbb
rcr
dec
mov
ret
sbb
sbb
sbb
jmp
mov
cli
and
adc
test
mov
mov
repz
sti
add
dec
out
mov
mov
or
shl
push
lds
test
test
push
aam
ret
lds
lahf
jb
mov
mov
sbb
mov
lahf
leave
push
mov
sbb
sub
icebp
dec
xor
data16
sub
(bad)
repz
and
scas
(bad)
push
cmp
xchg
sub
inc
bound
jmp
mov
mov
aas
fcom
sbb
ror
dec
ja
lods
sub
ret
jo
imul
pop
out
imul
cmp
jmp
mov
(bad)
cdq
xlat
sub
sbb
sbb
cli
jg
fldcw
retf
pushf
xor
les
xchg
mov
ret
int
std
adc
out
(bad)
fs
and
outs
imul
imul
out
push
xchg
loope
jmp
ja
js
shl
mov
mov
jge
jbe
enter
ret
call
fistp
jmp
popa
mov
push
xor
cmps
dec
dec
add
jle
push
cmp
call
mov
sub
in
mov
ins
inc
fist
test
mov
dec
mov
aad
inc
xor
inc
rcr
stc
inc
jno
xor
gs
push
jl
retf
lods
out
aas
test
test
sub
mov
pop
ins
mov
dec
loop
arpl
je
fistp
ds
push
pop
adc
push
data16
mov
pop
out
inc
dec
test
xchg
icebp
addr16
cmp
hlt
pop
mov
adc
xchg
xor
adc
mov
cmp
push
jge
jge
std
add
(bad)
sbb
cmp
mov
push
jae
jns
push
xchg
push
or
jno
and
push
leave
mov
fisubr
stos
xor
imul
inc
push
dec
cmp
jmp
mov
sbb
(bad)
cli
nop
cmp
jg
mov
pop
sub
ror
movs
scas
sub
in
mov
push
loopne
in
outs
cld
pop
xor
dec
imul
lods
cmp
scas
sbb
dec
add
adc
retf
arpl
cmp
imul
dec
sbb
or
nop
std
jo
xchg
hlt
es
cmp
retf
cli
xchg
cld
icebp
xor
xor
jg
sti
(bad)
xor
call
mov
pop
mov
cwde
cld
rcr
mov
jae
loope
sahf
cli
aaa
mov
test
int
xchg
imul
add
pop
xlat
mov
outs
test
sub
clc
cmps
dec
mov
add
(bad)
push
cmp
adc
sahf
inc
push
xchg
sub
aam
lahf
es
movs
inc
pop
(bad)
xchg
xor
ret
mov
xchg
xchg
mov
cmp
enter
mul
out
sub
stos
push
inc
sub
fnstsw
ficom
and
add
mov
cmp
sar
icebp
push
mov
pop
mov
jb
mov
sub
jnp
(bad)
fcom
adc
cmp
xchg
aam
vmovsd
inc
fistp
hlt
cmps
mov
test
out
or
or
imul
mov
lea
sub
out
mov
add
jne
fidivr
sbb
aas
scas
push
xchg
add
push
lods
add
sbb
or
dec
repnz
pushf
pop
sub
out
outs
xor
vpextrw
lds
(bad)
std
leave
pusha
add
xor
jmp
add
or
in
aas
sahf
add
xor
ja
adc
scas
jns
imul
inc
push
and
popa
inc
out
cmps
ror
call
aad
jg
call
sahf
js
fidivr
nop
xchg
retf
inc
imul
fidiv
outs
sahf
jmp
jb
inc
xchg
pop
lock
pusha
push
iret
(bad)
faddp
and
out
pop
cmps
arpl
add
dec
push
sbb
cmps
or
xlat
mov
nop
jmp
mov
ret
mov
xor
fcmovb
and
dec
cmp
inc
sub
cmp
ret
mov
cmove
pop
daa
mov
push
inc
cmp
cmp
sub
push
push
es
sub
xor
ins
mov
or
fmul
adc
sub
retf
ror
sub
mov
cmp
leave
pop
das
jb
(bad)
inc
sahf
cmps
rcl
push
arpl
outs
or
outs
ficom
xchg
dec
add
in
sti
add
cli
add
sbb
sbb
and
ds
jne
mov
ss
push
cwde
nop
ss
es
mov
xlat
sbb
cmp
cmp
dec
lods
adc
clc
push
mov
and
sbb
xchg
add
popa
fsub
add
mov
jge
and
xor
pop
jmp
pop
xchg
test
sahf
nop
dec
xchg
aaa
mov
jl
fsub
xor
int
out
sar
rcr
adc
out
pop
dec
test
dec
ds
mov
stc
sbb
add
mov
std
push
stc
call
or
or
inc
dec
push
hlt
cmp
or
mov
xlat
xor
fcomp
fdiv
jge
data16
imul
or
lsl
lds
mov
inc
cmc
xchg
or
mov
inc
outs
imul
add
aam
outs
js
mov
cmp
enter
dec
sar
std
inc
call
leave
add
in
data16
adc
pop
gs
xchg
inc
add
das
jmp
sbb
ins
out
mov
in
and
pop
sbb
ins
inc
pop
add
(bad)
jb
dec
cmp
jge
mov
pop
mov
xchg
retf
add
cdq
sub
push
or
pushf
mov
jg
jmp
or
push
popa
dec
add
mov
int
test
xchg
(bad)
int3
and
leave
add
dec
mov
ins
icebp
jmp
das
leave
ret
push
and
mov
push
mov
sub
jo
int3
stc
add
push
or
das
into
jecxz
jbe
push
in
or
shr
mov
pusha
mov
inc
mov
adc
test
cmp
stos
push
mul
xor
jne
retf
jnp
mov
cmp
cmp
nop
cdq
leave
add
cmps
adc
xor
mov
mov
test
movntq
aam
or
xor
adc
push
sub
or
lods
js
imul
jmp
mov
sbb
sub
pop
and
mov
push
in
retf
add
bnd
jmp
(bad)
pop
(bad)
mov
pushf
cmp
jne
jno
inc
in
es
mov
idiv
icebp
inc
mov
int
mov
ret
adc
push
aam
xchg
pop
mov
ins
jp
sub
add
inc
xlat
imul
inc
bound
(bad)
sub
xor
cld
pop
mov
mov
mov
cmc
mov
in
arpl
inc
inc
outs
cli
sti
ins
mov
mov
xchg
cwde
in
mov
sbb
push
push
mov
push
cmp
xchg
xor
sub
out
sbb
dec
or
pusha
std
and
loop
ins
mov
aad
dec
imul
push
xchg
in
mov
stos
sbb
add
test
mov
mov
cli
mov
aaa
sub
fld
fwait
loope
outs
ins
sbb
scas
mov
adc
mov
fnstsw
dec
es
inc
or
rol
add
imul
scas
jns
jno
xchg
loop
sbb
mov
or
push
pop
mov
cmc
les
pop
xchg
cdq
lods
add
sbb
pop
sub
lods
inc
inc
(bad)
xor
bound
icebp
cmp
or
mov
stc
int3
push
xlat
inc
(bad)
repz
out
gs
cs
pushf
hlt
mov
hlt
fcomp
lahf
fwait
sub
inc
loop
shl
jmp
outs
arpl
test
xor
xor
add
add
ficom
popf
sub
imul
mov
jl
dec
test
push
sbb
add
rcl
or
mov
sub
std
lods
arpl
and
push
pop
or
and
xor
retf
xchg
fwait
push
bound
xor
daa
xor
in
xor
jne
pop
scas
lahf
inc
scas
inc
cmp
adc
sub
mov
mov
lds
mov
pop
int
mov
add
dec
sub
gs
push
dec
adc
or
stos
fdivr
iret
and
invd
sub
lods
in
adc
mov
inc
mov
sbb
mov
das
mov
inc
jmp
pushf
push
sar
sub
pop
iret
adc
loope
jle
fld
sahf
mov
imul
xchg
cdq
pop
cwde
and
inc
loope
sbb
ret
inc
aas
and
dec
cwde
std
imul
aad
mov
out
ins
mov
lds
jmp
iret
push
mov
(bad)
and
call
xchg
fstp
xchg
adc
push
scas
arpl
ins
fisttp
pushf
mov
adc
xor
dec
cmp
int
cmp
mov
int
mov
sbb
inc
loop
push
xor
or
ds
fcomp
in
es
ins
sbb
xor
jl
setge
pop
push
addr16
bound
pop
pop
push
in
and
mov
add
pushf
inc
int
arpl
ffreep
dec
xchg
in
int3
or
lahf
or
sbb
movs
and
sbb
fnsave
out
nop
lahf
lds
push
xchg
stos
hlt
(bad)
stos
je
jmp
dec
xor
aas
je
xchg
leave
push
jbe
or
mov
dec
loopne
pop
das
mov
lea
mov
inc
imul
sub
mov
sbb
prefetchwt1
rol
retf
(bad)
stos
cli
jne
jmp
pop
mov
es
jle
push
adc
jns
jmp
dec
inc
jp
mov
dec
mov
push
hlt
aaa
push
dec
add
popf
mov
stos
popf
jno
stc
dec
(bad)
cmp
fldenv
das
mov
mov
add
lock
sbb
jl
lahf
sub
xchg
cmp
cmc
test
out
test
retf
cmp
bound
pop
pop
std
mov
inc
jmp
sub
dec
lds
push
mov
add
xchg
sub
mov
adc
push
cmp
seto
mov
adc
les
loop
fs
and
xchg
retf
push
inc
jmp
jno
or
stos
sub
inc
jecxz
inc
xlat
nop
sbb
mov
fadd
enter
mov
mov
inc
push
rcl
hlt
xchg
jnp
jb
repnz
push
xor
lds
dec
leave
fadd
pop
pop
add
cmp
inc
rol
dec
push
in
mov
xor
fwait
dec
mov
xlat
js
push
mov
push
jle
stos
push
xlat
or
add
push
add
pop
pop
pop
adc
push
xchg
push
lea
or
dec
mov
mov
dec
sbb
ret
int
scas
outs
repz
adc
push
mov
(bad)
xor
pusha
cs
std
mov
mov
sbb
pop
adc
jl
mov
xchg
pop
(bad)
dec
lea
xchg
xchg
mov
cmc
pop
push
or
mov
xchg
cmp
iret
xchg
js
jp
jmp
fwait
pop
xchg
popf
mov
add
pop
jmp
sub
iret
pop
push
cdq
outs
mov
inc
in
mov
scas
ror
ret
mov
cli
mov
push
cdq
ja
cli
and
push
pop
iret
cmps
push
mov
adc
and
dec
in
mov
cmp
ss
pop
mov
retf
mov
mov
add
pop
adc
mov
sub
fld
imul
push
ja
pusha
xor
rcr
sbb
jb
and
mov
out
dec
push
xchg
imul
sub
xchg
jb
sbb
or
cmp
xor
push
jne
jg
ins
daa
fnsave
rcl
std
or
sub
fist
mov
add
in
xchg
shl
adc
bound
shl
push
push
pop
mov
mov
retf
and
fld
aam
adc
xlat
mov
and
ins
inc
pusha
mov
push
movs
retf
mov
sub
aad
inc
pop
repnz
repz
mov
and
and
mov
xchg
lods
pushaw
outs
pop
pop
lods
shr
nop
lods
mov
mov
fwait
test
loopne
mov
pop
aaa
dec
data16
jnp
iret
mov
dec
pop
imul
inc
sahf
retf
(bad)
push
pop
xchg
mov
fsub
jae
in
pushf
xor
jne
push
stc
cmps
mov
idiv
inc
shl
jae
mov
mov
dec
rol
test
frstor
les
aad
add
or
jae
fwait
push
sbb
aas
xor
push
mov
adc
fstp
add
and
cmp
add
outs
loopne
jns
inc
cmp
cmp
mov
cmp
xlat
xchg
popf
gs
rol
mov
rcl
mov
push
push
inc
cli
adc
stos
xchg
fbld
jno
mov
lock
xor
pop
jbe
jl
imul
dec
cdq
or
xchg
mov
push
pop
pusha
xchg
pop
ja
arpl
mov
fwait
sub
cmp
fistp
leave
push
jae
ss
mov
or
call
mov
hlt
inc
or
and
xor
dec
and
dec
jo
lods
and
dec
mov
push
jge
inc
pop
neg
sub
mov
loopne
cmp
dec
ret
fwait
sahf
jmp
jno
jl
pop
shl
repnz
xor
and
pop
mov
scas
loope
ins
dec
outs
les
cwde
add
retf
mov
push
cdq
repnz
jecxz
ja
inc
push
fldcw
adc
jl
pop
sub
outs
inc
adc
mov
cmp
in
out
ret
test
fs
jg
dec
out
mov
cmp
in
loop
mov
dec
rol
sub
outs
jmp
inc
sti
mov
sar
sbb
popa
and
push
xlat
int
int
xor
or
loop
pop
and
mov
ror
clc
mov
(bad)
(bad)
xor
jle
push
jne
sub
or
mov
mov
push
es
add
retf
stos
repnz
sbb
ds
repz
mov
jnp
dec
dec
pop
sub
xor
shl
movs
stc
mov
xor
jne
dec
cmps
inc
push
cmp
pop
je
stos
aad
and
push
into
jb
std
push
jb
xchg
mov
add
pop
pop
and
xchg
mov
or
pop
test
es
sbb
and
mov
xor
xchg
pop
ss
pop
mov
xchg
push
fwait
and
inc
jmp
mov
aad
adc
hlt
ds
adc
shr
cmp
jmp
in
test
jmp
push
cmps
into
xor
fidiv
xor
pop
ins
fist
rcr
add
outs
xchg
psubsw
add
(bad)
jnp
dec
sub
mov
pop
fmul
pop
xor
cmc
mov
cmp
(bad)
sahf
mov
jne
stos
call
mov
mov
movs
out
loope
in
push
adc
and
sub
adc
xor
mov
stos
shl
xor
aaa
xor
push
xor
(bad)
popf
add
daa
std
xlat
cmp
push
dec
cs
cmc
or
push
adc
retf
add
fdivr
cld
adc
fcmove
mov
jl
push
lods
sar
loop
xchg
add
xor
sub
imul
cmps
push
xor
and
mov
addr16
xor
and
mov
and
test
mov
dec
dec
cmp
adc
inc
out
dec
rol
sub
xor
cmp
jle
mov
mov
jne
bound
out
out
or
(bad)
ficomp
pop
out
jmp
sub
in
xlat
inc
fidivr
sbb
mov
jne
cmp
scas
and
push
fs
jne
call
jno
shl
stos
add
push
andps
jnp
movs
sub
aas
int3
inc
fcomp
call
add
imul
inc
cld
clc
or
add
xlat
outs
dec
movs
mov
cmp
std
hlt
popa
sar
out
inc
xchg
xchg
xlat
sahf
push
in
out
arpl
xchg
adc
fld
fbld
pusha
mov
adc
adc
fmul
scas
pop
ret
pop
out
pop
dec
and
dec
(bad)
mul
mov
push
(bad)
and
mov
pop
jae
ret
mov
mov
cmp
adc
ror
sar
mov
dec
and
jl
sar
inc
cmps
mov
jne
mov
push
xchg
gs
or
test
cmp
jo
and
mov
dec
aas
pop
mov
ins
pop
mov
ins
or
mov
xchg
leave
pop
cmp
dec
mov
ret
rol
cmp
(bad)
mov
inc
hlt
fdivr
xlat
or
(bad)
jmp
rcl
xchg
lds
xchg
in
sbb
and
data16
sub
and
in
repnz
movs
lahf
or
xor
cmp
leave
sbb
jmp
mov
and
int
in
jle
xor
dec
ret
(bad)
jbe
xor
ins
out
popf
or
fcom
mov
iret
sbb
and
pop
mov
pop
mov
xor
ja
inc
mov
clc
repz
cmp
mov
scas
outs
and
stc
pop
xchg
push
stos
adc
sub
out
sub
sbb
sti
pop
xchg
dec
xchg
push
push
xchg
(bad)
sbb
mov
jno
sub
jo
(bad)
rcl
pop
fmulp
cmp
loop
xchg
xor
inc
push
fistp
push
pop
mov
mov
add
push
xor
fld
fnstsw
xlat
and
pushf
leave
jmp
push
cmc
xchg
sbb
dec
icebp
and
icebp
mov
test
ins
inc
test
adc
lods
adc
shl
mov
aad
pop
push
mov
loopne
jge
aaa
loope
mov
cmp
neg
test
icebp
cmc
jle
loop
scas
pop
(bad)
movs
mov
mov
aaa
addr16
mov
mov
popa
imul
repz
sar
or
adc
ins
and
add
and
or
xor
or
data16
out
es
pop
add
daa
mov
xor
stos
cdq
mov
jp
cmp
call
iret
dec
ins
mov
mov
jnp
add
dec
mov
pop
mov
push
dec
(bad)
and
push
fst
in
xlat
sub
cwde
pop
sub
mov
jge
or
aam
ss
add
mov
retf
mov
sub
or
pop
pop
adc
add
iret
mov
sbb
jle
dec
call
test
retf
loop
int3
mov
push
(bad)
cmp
cld
retf
jns
cmps
mov
and
xor
jle
add
div
push
arpl
out
data16
retf
mov
sub
cmps
add
cmp
gs
pop
dec
movs
cld
xlat
sbb
rep
jle
out
xor
sar
jp
imul
pop
loope
lahf
pop
(bad)
dec
mov
outs
in
xchg
dec
mov
es
(bad)
jno
jmp
enter
lods
cld
xchg
adc
test
loopne
fnstsw
aam
shl
fcmovbe
loope
dec
stos
movs
jae
aas
adc
sub
(bad)
int
xor
mov
dec
icebp
pop
out
push
and
js
fdivr
out
inc
push
pop
cmc
ret
pmaxub
int3
inc
sub
repnz
(bad)
in
sar
add
int
arpl
nop
cmp
mov
bound
jg
dec
adc
fisub
cmps
fcmovne
call
adc
rcl
mov
int
mov
rcr
jl
adc
push
dec
loop
jae
mov
je
mov
sti
jge
test
in
mov
sbb
xor
fcmovnb
pusha
mov
or
arpl
inc
imul
movs
xchg
mov
mov
outs
adc
clc
ss
mov
shl
xchg
pushf
xchg
enter
movs
jg
jne
and
xlat
cmps
inc
pop
jp
xchg
clc
xor
xchg
and
inc
test
cs
mov
push
jb
dec
jp
mov
sti
mov
aam
aad
test
fsubr
sub
sub
cmp
cmc
(bad)
test
cmp
loopne
js
sub
jmp
pop
mov
nop
inc
daa
cmp
inc
xlat
pop
lods
mov
push
es
out
dec
dec
inc
mov
adc
icebp
loop
sub
imul
mov
jecxz
sar
dec
stc
stc
test
sbb
out
(bad)
pop
cli
dec
pop
cmc
adc
icebp
movs
scas
pop
jbe
add
pusha
xor
pushf
pop
inc
cld
ins
imul
jge
fst
dec
mov
mov
repnz
jp
push
nop
jp
into
fwait
mov
mov
iret
and
fwait
mov
sbb
pop
mov
mov
mov
out
mov
outs
fldenv
push
(bad)
adc
outs
jbe
das
xchg
mov
scas
test
scas
sub
push
xor
push
mov
or
pop
xchg
sbb
cs
ins
xor
ret
xor
cmovo
dec
inc
rol
and
jae
sbb
call
add
mov
or
pop
iret
pushf
mov
jmp
ficomp
stos
loop
push
aaa
fld
xor
pop
aad
adc
fbstp
inc
pop
inc
push
aaa
jb
mov
dec
cmp
lds
mov
sahf
cli
mov
sbb
pop
jo
push
in
shl
push
jmp
gs
mov
not
cs
outs
inc
dec
dec
js
jmp
or
add
push
mov
sub
fucom
loop
xor
fsub
popa
mov
ficom
mov
pop
mov
call
pop
ficom
movs
push
das
push
push
(bad)
push
inc
or
not
cld
test
out
pop
jecxz
mov
and
mov
imul
shl
icebp
xor
push
stc
fcomp
cmp
out
idiv
sbb
mov
fwait
pop
stos
cli
(bad)
pusha
sbb
test
and
and
out
sbb
jns
pop
(bad)
pop
div
add
outs
aas
aam
iret
mov
cmp
jnp
out
xchg
or
cdq
mov
sbb
or
pop
movs
dec
loopne
sub
and
loop
mov
pop
inc
pop
sub
dec
dec
aaa
pop
(bad)
aaa
jl
pop
rol
add
(bad)
fisubr
inc
adc
sub
mov
push
xlat
pop
cmc
cld
arpl
inc
arpl
push
cmc
sbb
rcl
loope
xchg
sbb
pop
sbb
pop
lahf
jns
in
cwde
outs
dec
or
leave
fist
stc
bnd
jo
cmpps
mov
xor
inc
jbe
dec
and
mov
sub
pop
mov
cmps
(bad)
xchg
inc
ins
push
fstp
repnz
xchg
cmp
aam
push
cld
dec
je
mov
test
cmc
div
out
in
in
into
fsubp
mov
xor
aam
(bad)
sub
pop
dec
or
call
ret
sub
mov
xor
(bad)
std
sbb
jb
fistp
xchg
mov
fistp
gs
dec
pop
inc
add
xor
inc
sub
cmp
sub
pop
or
fsubr
retf
ret
pop
sbb
test
fidiv
fimul
jge
repnz
cmp
sbb
retf
cs
and
push
push
sbb
ror
out
jecxz
popf
adc
push
mov
mov
adc
sub
sbb
pusha
popf
mov
daa
dec
mov
cs
or
pop
les
pop
in
sub
pushf
loop
fidivr
mov
fadd
pop
xchg
sbb
in
sbb
cwde
sbb
mov
sbb
xchg
push
scas
inc
mov
xchg
pusha
movs
lock
div
pop
jge
jp
retf
push
pop
in
mov
mov
mov
add
rcl
xchg
inc
shr
push
je
or
mov
rcl
hlt
and
or
and
test
dec
or
pop
xor
push
not
mov
dec
les
and
test
inc
or
add
stos
xchg
xor
cwde
test
in
and
push
inc
and
mov
stos
mov
scas
shl
or
sahf
xchg
push
int3
shr
shl
xor
pop
xor
adc
test
lock
repz
(bad)
jle
cmp
add
push
scas
mov
pop
and
je
xchg
in
mov
lds
push
imul
jbe
cld
pop
les
cmp
mov
icebp
loope
push
ss
(bad)
shl
icebp
jp
sub
ins
mov
nop
out
int
add
sbb
sub
fld
jp
jl
jge
add
adc
cli
inc
jnp
jl
xor
std
test
cmp
xor
cli
aad
xchg
cmp
mov
lea
xor
repnz
fild
mul
push
aas
repz
mov
pop
(bad)
jp
mov
aad
in
sbb
adc
shr
adc
jg
add
or
pop
and
test
hlt
retf
aam
jmp
inc
aam
push
pmaxub
(bad)
iret
dec
jo
add
nop
sahf
je
xlat
add
arpl
push
inc
mov
(bad)
fwait
les
popf
pusha
pushf
push
mov
cwde
fbld
push
shl
bound
xchg
ja
mov
aam
loop
xchg
ins
add
cmp
mov
sub
int3
daa
pop
jmp
fdivrp
jp
xchg
into
jae
or
and
sub
push
fwait
int3
jl
data16
ret
stos
cmp
outs
lahf
jbe
or
or
rcl
div
push
daa
xlat
mov
dec
mov
xlat
bound
add
jo
or
aam
sbb
and
shl
retf
xchg
xchg
test
repnz
retf
xchg
lahf
mov
les
xor
jecxz
call
cs
pop
dec
mov
push
push
add
jmp
adc
shl
xchg
lea
pop
cmps
jecxz
call
dec
push
addr16
fdivr
addr16
(bad)
fistp
sub
inc
les
out
cmp
sub
cmp
pop
popa
mov
dec
and
ror
jl
icebp
out
mov
ins
rcr
mov
(bad)
push
push
popw
pop
mov
push
and
nop
sub
add
loope
mov
movs
sbb
add
dec
and
dec
cmps
imul
in
mov
xor
or
(bad)
(bad)
(bad)
ins
ins
ins
cmp
fistp
cmovae
xor
rol
add
retf
test
mov
dec
push
adc
add
xor
mov
(bad)
add
jns
push
dec
mov
pop
pop
sub
push
sahf
cmc
test
clc
movs
jp
mov
arpl
daa
cmc
neg
xor
pop
sub
je
push
mov
div
fwait
jle
fisub
mov
jo
cmc
pop
hlt
sub
push
mov
mov
cmps
push
rol
jp
add
dec
(bad)
jle
popf
cmc
stos
ja
mov
test
mov
js
fld1
imul
popf
mov
pop
repz
adc
cmc
sub
add
push
jae
scas
jmp
aam
fsub
pop
push
(bad)
xor
mov
dec
dec
dec
fsubr
and
cmp
dec
push
out
jno
cli
cmp
retf
lods
push
jbe
int
mov
jmp
adc
imul
and
pop
or
nop
xchg
pop
mov
cmp
retf
or
push
push
sahf
or
fwait
push
push
data16
inc
retf
in
mov
pop
(bad)
aaa
lahf
push
push
(bad)
rcr
cs
mov
int3
fcom
push
(bad)
sub
cmps
out
push
jb
jb
dec
int
cli
adc
cs
xor
loope
and
xchg
inc
push
mov
les
imul
xlat
test
(bad)
push
mov
and
add
mov
inc
mov
add
xchg
in
mov
outs
mov
fs
add
push
lds
inc
mov
xchg
iret
icebp
stos
lea
std
mov
fst
inc
mov
scas
shl
jge
lea
fld
cmps
dec
jle
pushf
jno
add
loop
mov
into
lahf
add
test
cmp
cwde
mov
shl
movs
pusha
adc
push
shld
mov
sub
push
mov
idiv
dec
dec
mov
fwait
and
stos
sbb
lock
lods
(bad)
dec
mov
pop
in
or
pushf
sub
xchg
add
mov
cs
stc
xor
jae
ss
dec
and
imul
out
jle
adc
jge
cwde
cmp
test
loope
inc
pop
rcr
sti
call
push
iret
mul
xchg
stos
push
cld
xlat
cs
inc
imul
add
xchg
retf
adc
and
jne
pop
arpl
ret
mov
add
hlt
sbb
(bad)
dec
jcxz
(bad)
or
jmp
lods
sbb
ret
(bad)
or
aad
daa
push
aaa
jns
xchg
retf
dec
xchg
xchg
add
jnp
pop
out
dec
and
imul
mov
nop
in
mov
bound
movs
add
pop
sub
push
add
outs
test
pop
sub
(bad)
inc
inc
shr
sub
clc
jge
enter
jg
sbb
ret
mov
stos
dec
sbb
add
xor
add
xchg
(bad)
xchg
dec
stos
add
ss
inc
mov
ror
adc
lods
(bad)
push
aam
mov
jmp
nop
push
stos
inc
push
addr16
rcr
sbb
(bad)
addr16
sbb
inc
add
cmc
mov
cwde
pusha
int
mov
mov
pop
dec
stc
sub
sahf
iret
pop
loope
and
test
xchg
repnz
mov
cld
sub
ficomp
test
out
jo
inc
icebp
mov
push
xchg
cmp
xchg
push
pop
cmp
cmp
sub
mov
push
int
repnz
(bad)
stc
mov
xor
call
push
adc
mov
repz
cmp
fisub
out
dec
xlat
fcom
adc
fbld
push
cmp
mov
xor
pop
adc
scas
mov
(bad)
repz
add
int
int
mov
xchg
retf
push
mov
mov
mov
data16
aaa
mov
in
push
xchg
push
lea
inc
or
inc
fadd
sbb
ins
stos
xchg
ja
pop
inc
jmp
xchg
sub
push
push
int
mov
xor
ss
in
xor
lea
xchg
idiv
test
jo
jns
mov
std
cmc
test
mov
or
lock
retf
push
mov
iret
loope
pop
mul
lahf
and
sbb
arpl
aas
cld
push
and
(bad)
push
pop
jo
or
fstp
out
sbb
ret
(bad)
stos
mov
and
dec
xlat
mov
cmp
leave
test
xor
cmp
test
jecxz
mov
mov
int3
pushf
push
adc
adc
addr16
push
(bad)
and
(bad)
rcl
push
call
cmc
xor
stc
cmp
sbb
jmp
cwde
(bad)
leave
push
test
mov
ret
out
ds
xchg
mov
popa
xchg
pop
push
mov
mov
pusha
out
pop
(bad)
adc
jne
int3
repz
fisubr
mov
or
push
mov
aam
outs
push
aam
xchg
or
dec
add
mov
pushf
in
sti
or
jb
pop
xor
jno
(bad)
cld
cmp
loop
movs
push
pushfw
inc
and
jne
push
inc
pop
jl
mul
add
mov
inc
in
pop
in
shr
sti
je
xor
mov
outs
jo
xor
mov
pop
bound
inc
push
mov
inc
jge
inc
mov
inc
retf
(bad)
int3
xor
in
xor
nop
cmp
lea
pushf
mov
inc
cmp
push
stos
js
jp
dec
ffreep
push
popa
add
call
mov
push
sub
xor
dec
(bad)
sub
ret
add
jp
mov
aaa
aam
je
mov
outs
out
lds
cdq
cld
nop
sbb
retf
movs
popf
icebp
sub
(bad)
jle
outs
fdiv
mov
push
adc
jmp
sub
mov
pushf
mov
outs
lds
or
sahf
or
movs
inc
pop
mov
mov
xchg
int
inc
mov
pop
pop
neg
or
sub
in
lods
jns
es
(bad)
dec
and
push
inc
sbb
pushf
ss
loope
ds
lods
out
mov
lea
sub
aam
xor
sar
xrelease
pop
(bad)
mov
push
or
sbb
jmp
pop
fcomp
movlps
mov
jae
mov
nop
push
ret
mov
rol
std
xlat
or
xor
and
mov
dec
cmp
test
(bad)
jbe
dec
in
repz
ins
aad
stos
push
adc
xor
hlt
loopne
jmp
xchg
adc
pop
outs
pop
and
xor
test
sbb
(bad)
cmc
cmp
(bad)
sbb
jae
mov
xor
sbb
mov
jge
pop
ficom
mov
jne
std
sbb
add
aam
jb
push
test
and
sahf
int3
xor
(bad)
lea
cmp
in
mov
mov
iret
imul
loopne
mov
pop
dec
inc
adc
in
dec
pop
xor
xchg
pop
cwde
mov
sub
cli
(bad)
xor
or
dec
xchg
mov
or
xchg
or
ret
rcr
mov
mov
lea
in
enter
adc
retf
js
popa
(bad)
xor
int3
sbb
inc
cmp
fld
xchg
rcl
std
push
dec
fisttp
movs
fldenv
jbe
or
pusha
jmp
movs
xor
cld
daa
mov
inc
adc
arpl
movs
jbe
fdiv
jmp
pop
outs
sub
add
sar
dec
pop
sbb
retf
jo
cmp
mov
xor
fnstsw
push
mov
cmps
push
mov
cmps
mov
dec
jb
mov
fmul
dec
cmp
enter
hlt
mov
cmp
in
push
iret
push
mov
imul
xchg
mov
xor
mov
retf
xor
jmp
test
sub
aaa
xchg
push
sar
mov
mov
ins
ins
lds
fiadd
xlat
ret
leave
sbb
or
xchg
add
repnz
test
or
adc
ins
ret
sub
retf
popf
scas
pop
xor
mov
jb
aas
mov
sub
fstp
mov
arpl
and
out
test
imul
cdq
test
call
push
adc
call
mov
mov
push
and
and
mov
stos
add
pop
adc
xchg
xchg
cmp
or
pushf
daa
and
mov
cli
ins
mov
mov
lock
push
(bad)
cmc
adc
enter
mov
in
mov
cwde
aam
jp
xor
jg
pop
push
ret
int
jle
dec
pop
or
(bad)
ret
shr
push
push
(bad)
and
and
xchg
mov
jle
mov
cli
imul
(bad)
pop
mov
mov
pop
add
xchg
nop
xor
fwait
call
dec
stos
arpl
push
xchg
mov
adc
push
jmp
fwait
inc
push
sub
jle
in
push
dec
adc
xchg
stos
mov
cmps
addr16
pop
push
ins
jg
push
mov
inc
fbld
(bad)
xchg
(bad)
mov
outs
js
popa
inc
imul
or
outs
scas
popf
jl
sub
jno
jae
pop
sub
sub
ds
shl
dec
adc
lea
jp
inc
xchg
pop
enter
pop
scas
stos
and
xor
lahf
pop
mov
mov
push
retf
cmp
xlat
cmp
ss
inc
fild
add
call
fild
les
ja
fcomp
jo
mov
dec
lahf
pop
pop
dec
sub
push
mov
push
fisub
popa
adc
push
jecxz
les
fs
mov
pop
fs
rol
xor
sti
fst
mov
aaa
in
push
push
adc
mov
sub
ja
mov
loop
add
or
push
push
or
jmp
mul
push
dec
cdq
mov
jmp
or
jmp
in
dec
jbe
psrlq
dec
cmp
cmp
cmp
dec
aad
add
ret
push
movs
inc
mov
xchg
push
and
cmc
push
jmp
(bad)
pop
jno
idiv
cdq
test
test
hlt
push
out
push
mov
outs
pop
mov
jbe
ins
jne
retf
stc
pop
fisttp
pop
fidiv
sub
(bad)
clc
jg
addr16
push
mov
fcomip
arpl
cld
lea
sub
sbb
enter
and
pusha
inc
mov
pushf
adc
sbb
mov
ficomp
(bad)
in
in
inc
jl
data16
push
or
arpl
(bad)
clc
mov
mov
push
cmp
es
push
jmp
cmc
mov
ja
jp
fucom
inc
push
icebp
sar
ja
sbb
jecxz
pop
repnz
xor
xchg
mov
sub
out
push
stos
(bad)
push
and
xchg
sti
mov
int
mov
and
cwde
xchg
stos
test
sbb
push
cmp
sub
mov
ins
dec
add
aas
xchg
stos
mov
in
push
scas
jmp
fcomp
rcr
rcl
sub
add
nop
and
lods
xor
xchg
(bad)
in
dec
ret
xchg
(bad)
push
dec
js
jns
aaa
sub
add
in
(bad)
(bad)
test
pop
popa
add
lods
(bad)
call
int3
leave
cmp
or
neg
inc
add
dec
sar
cmp
inc
and
push
sbb
out
adc
xchg
push
fs
push
sbb
test
pop
cmp
mov
xor
repnz
cmps
jmp
mov
jecxz
mov
fisttp
fstp
adc
jbe
or
cmps
inc
bound
repz
ror
out
inc
and
retf
sub
imul
ficom
mov
jno
ins
lods
pop
int
sbb
movs
movs
cmp
pushf
sbb
sub
ds
and
shl
test
cmp
popf
xor
retf
loopne
repz
ins
sub
call
popa
pop
cmp
xor
test
jmp
xchg
(bad)
sbb
sub
adc
(bad)
mov
adc
cmp
ret
(bad)
(bad)
mov
sub
or
or
pop
sub
clc
mov
js
in
and
dec
mov
add
cwde
test
sbb
ficomp
lods
dec
fwait
cmp
push
out
sti
cmp
xlat
mov
cmp
enter
in
push
jno
sti
cmps
push
or
push
dec
mov
(bad)
xor
int3
loop
xor
int
jmp
mov
mov
fsubr
xlat
xchg
cmp
xor
push
shl
sbb
(bad)
fld
cs
adc
out
push
loopne
mov
dec
ds
loope
or
stos
dec
popf
or
(bad)
jb
ror
nop
fcmovne
xlat
stos
(bad)
pop
ds
ror
mov
rcl
sahf
push
mov
cmps
xor
mov
cmps
fwait
adc
test
hlt
inc
push
clc
xchg
xor
sbb
lods
sbb
xchg
fwait
xchg
into
push
mov
lods
cmp
scas
xchg
aas
scas
inc
adc
mov
punpckhwd
push
pop
xor
inc
xchg
sbb
xchg
dec
xchg
fldcw
sahf
lods
sbb
jle
push
push
cwde
rcl
sbb
jg
and
mov
cli
or
dec
int
iret
sub
mov
mov
sbb
inc
inc
sub
sub
dec
pop
out
sub
scas
push
mov
loopne
and
outs
xchg
in
and
out
cmps
pop
sub
jmp
imul
dec
in
test
push
fdiv
or
mov
mov
cld
gs
rcr
cmp
mov
test
ffreep
(bad)
adc
pop
outs
std
inc
hlt
pop
out
inc
dec
add
jmp
mov
cmps
adc
inc
mov
popf
pop
and
and
push
test
ins
inc
jae
outs
dec
mov
into
repz
mov
nop
add
push
jmp
xchg
rcr
retf
icebp
(bad)
hlt
jo
dec
push
into
add
xchg
imul
push
sbb
dec
sbb
je
cmp
enter
inc
inc
mov
xor
std
xchg
mov
dec
shr
sbb
scas
jmp
cdq
xchg
push
push
rol
dec
jae
mov
imul
iret
cmp
xchg
sbb
or
ins
movs
mul
ret
xchg
retf
cmp
inc
mov
gs
mov
cdq
mov
adc
adc
pop
push
inc
xchg
popf
add
adc
mov
call
and
inc
or
clc
jle
les
pop
cdq
rol
mov
int
fdivr
or
cmp
fwait
dec
(bad)
adc
sub
push
loope
cwde
fst
clc
xchg
cmps
pop
adc
test
mov
leave
(bad)
cli
popa
dec
aad
sahf
(bad)
jae
mov
mov
and
ret
mov
push
rcl
push
mov
jl
pop
popf
or
sub
movs
pusha
rcr
add
loopne
retf
cmp
push
ins
pop
jo
les
repnz
cld
or
push
xchg
sbb
test
repnz
xchg
call
mov
mov
inc
test
xor
dec
sbb
lock
jnp
mov
or
add
sub
mov
cs
push
xchg
pushf
xor
adc
cs
mov
sub
enter
inc
aad
push
loope
ret
sub
sub
lock
jg
lds
adc
adc
mov
je
ins
ror
mov
imul
pop
pop
aas
mov
retf
mov
lock
jmp
mov
stos
jmp
cli
mov
mov
shl
ficomp
jns
adc
cli
mov
jmp
jp
add
loop
loope
retf
pop
mov
push
cmp
enter
out
dec
xlat
sti
xor
(bad)
(bad)
push
mov
push
inc
jg
enter
cmps
or
out
jecxz
movs
mov
xchg
test
popf
mul
icebp
fimul
adc
and
mov
jbe
dec
mov
cmp
loop
fiadd
or
mov
leave
xchg
ror
mov
dec
pop
nop
inc
nop
leave
inc
sbb
inc
xlat
js
aaa
gs
out
pop
(bad)
and
adc
loope
adc
cmp
into
js
imul
test
adc
pushf
fist
jae
xchg
inc
cdq
nop
xchg
add
test
popa
adc
dec
rol
out
inc
push
mov
and
xchg
loope
cmp
jno
fcomp
loope
in
inc
xor
les
push
cmps
jecxz
daa
mov
mov
cmp
dec
push
push
lds
adc
iret
repz
arpl
pop
icebp
(bad)
popf
sbb
adc
sbb
in
ret
or
cmps
cli
pop
cwde
test
xor
sbb
lods
jmp
lea
xchg
xchg
adc
jl
xor
retf
jnp
popf
mov
pop
mov
mov
or
xchg
ja
push
and
into
sbb
and
xor
sub
bound
mov
(bad)
in
fstp
mov
mov
out
mov
(bad)
cmp
xchg
cmps
mov
lea
jge
outs
out
mov
fwait
ror
mov
sub
outs
out
or
icebp
and
jmp
(bad)
mov
pop
push
and
ins
rcr
mov
xor
jg
mov
push
mov
shr
push
push
repnz
outs
xor
mov
mov
xlat
dec
inc
pop
pop
cmc
pop
mov
jl
and
ds
cmp
or
dec
out
sub
sbb
mov
sbb
xor
inc
add
je
xor
pop
sub
inc
pop
sahf
dec
mov
hlt
stc
push
in
fbstp
outs
imul
xor
fsub
dec
jne
sbb
(bad)
sti
fsub
lock
adc
not
jl
mov
mov
mov
xor
test
push
sahf
dec
arpl
stos
jno
push
jecxz
cmc
jp
jp
stos
ins
inc
mov
or
call
imul
push
(bad)
je
mov
add
jo
xlat
ret
jmp
jge
and
test
nop
(bad)
dec
out
into
cmp
retf
add
shr
pop
xchg
sti
and
in
mov
dec
dec
jmp
mov
sub
or
push
xor
fsub
xor
ds
psadbw
(bad)
or
push
cmp
repz
(bad)
xor
aaa
leave
imul
loopne
adc
mov
sti
das
retf
push
inc
and
leave
mov
jmp
cmp
ret
inc
leave
popf
xor
sbb
adc
or
add
xchg
pop
sub
sahf
jae
nop
sbb
push
mov
or
lods
bound
or
mov
or
outs
adc
outs
gs
inc
lea
inc
dec
clc
adc
out
sub
pop
popa
push
xlat
clc
enter
push
cld
mov
mov
mov
xlat
cmc
sub
daa
lds
mov
movs
test
sub
cmc
mov
mov
cmp
mov
test
and
pop
test
sbb
sti
jo
and
sbb
fidivr
clc
clc
fs
mov
jmp
mov
jb
sti
std
mov
ja
pop
sbb
ins
sub
inc
push
pop
jo
movs
dec
cmc
stos
sti
fwait
test
mov
sbb
jecxz
sbb
rcr
imul
pop
repnz
mov
pop
aaa
fsub
pop
push
push
adc
cmp
into
ins
sub
stc
mov
sub
xor
in
mov
enter
in
push
add
(bad)
cmp
pusha
retf
lods
adc
aam
rcl
div
push
inc
push
in
cdq
add
xchg
out
sub
pop
push
mov
icebp
arpl
jb
mov
or
cli
inc
outs
pusha
jae
xor
xlat
xchg
repz
dec
mov
sbb
fwait
retf
inc
or
retf
es
and
pop
fwait
mov
inc
bound
cmp
mov
js
pop
or
sar
cmp
(bad)
xor
xor
and
jle
sbb
pop
ds
inc
cld
call
mov
mov
lahf
ins
pusha
ficomp
pop
jb
and
jg
inc
or
xchg
pop
lods
lods
in
ret
ret
leave
push
mov
push
and
cmp
hlt
mov
scas
ins
jnp
mov
mov
and
jg
mov
cli
jge
mov
add
in
add
mov
cmp
out
stos
xor
imul
in
mov
(bad)
sbb
add
pop
cmove
pop
test
repz
jne
mov
ja
fst
out
push
mov
inc
inc
xor
sbb
or
cmp
mov
fld
jp
popa
cmp
bound
pop
in
ja
(bad)
stc
or
xchg
jp
shl
pop
xchg
icebp
cdq
jle
push
nop
outs
push
xor
inc
into
scas
sbb
pop
mov
(bad)
fiadd
in
push
repnz
(bad)
fwait
mov
cs
jmp
inc
pop
shl
out
test
sub
ror
(bad)
pop
jns
(bad)
(bad)
jbe
push
jo
pop
xor
stc
jmp
repz
in
cmpxchg
cwde
aam
add
push
aaa
mov
clc
lea
dec
out
xchg
js
stc
xchg
je
inc
in
inc
mov
pusha
scas
adc
mov
cdq
xchg
mov
pop
dec
movs
je
inc
lock
or
mov
test
adc
adc
cmp
nop
aas
arpl
fmul
push
ficom
nop
sub
ror
mov
inc
xchg
sar
mov
push
add
lea
out
mov
mov
stos
adc
cmp
mov
cmp
loope
mov
pop
mov
into
push
mov
pop
add
hlt
sub
mov
xor
stc
fild
mov
stos
int3
(bad)
(bad)
lahf
nop
push
push
mov
das
fst
cs
pop
adc
into
mov
sub
xor
out
mov
repnz
lods
retf
cmp
ds
int
imul
stos
push
jmp
mov
add
daa
int
test
and
push
cmps
in
in
cmp
jno
(bad)
push
je
xor
shr
adc
je
cmp
sub
scas
add
cmp
xchg
push
push
aam
nop
xor
les
fdiv
pop
jae
add
dec
aas
push
fcom
or
stos
jp
arpl
loope
mov
(bad)
sub
in
mov
into
push
xlat
movs
shr
dec
cli
dec
mov
clc
ins
mov
mov
fcomp
int3
mov
test
in
not
int3
repnz
dec
dec
lock
data16
int3
sub
adc
popf
inc
xlat
adc
jbe
push
mov
cmps
(bad)
fld
cmc
fisubr
(bad)
xor
mov
stc
mov
mov
jecxz
sbb
sbb
sbb
or
sub
aam
xchg
sub
outs
(bad)
stos
out
cs
loopne
jo
pushfw
outs
cld
rcl
test
lds
sub
cmps
scas
fcom
fisubr
aam
(bad)
sub
xchg
call
sbb
in
mov
imul
cwde
xchg
pop
xor
push
sub
in
shr
ss
ficom
loope
mov
add
jecxz
pusha
out
sbb
cdq
xor
push
popa
retf
or
xlat
dec
pusha
mov
add
mov
lea
push
xchg
fidiv
sbb
jb
mov
loopne
in
sub
fsubr
ins
sbb
and
aad
mov
jl
stos
pop
(bad)
mov
or
mov
jmp
push
or
mov
sbb
fwait
lds
out
push
pop
mov
(bad)
ins
and
adc
ret
push
(bad)
movs
cmc
cld
pop
mov
xor
dec
movs
je
sbb
push
mov
jns
lds
dec
cmp
push
in
arpl
cmps
inc
mov
leave
imul
lea
stos
jg
mov
jb
pop
add
aaa
push
lods
imul
call
or
mov
stos
nop
mov
inc
aam
sbb
ret
call
jg
jmp
sub
sub
mov
jg
mov
lahf
mov
movs
js
addr16
pop
popa
mov
mov
sub
mov
inc
clc
shl
gs
pushf
lea
mov
adc
data16
ret
pop
mov
jo
xlat
test
jge
jns
cmp
mov
cs
jmp
cld
or
loop
mov
sub
retf
gs
pop
mov
ret
push
out
mov
add
mov
aad
cmps
rcr
cdq
and
mov
cmc
xor
pop
sbb
cwde
outs
repz
(bad)
push
push
xchg
cmc
fnstenv
pop
lahf
xchg
test
cld
jmp
dec
call
imul
bound
pop
lods
out
jg
xor
cmp
cmp
mov
add
add
mov
push
inc
pop
sahf
or
(bad)
pop
push
mov
adc
xor
push
xchg
mov
movzx
loopne
mov
pop
leave
jae
hlt
pop
mov
or
cmp
push
jecxz
add
loope
pop
nop
cmp
push
cmc
or
jge
loop
enter
popf
outs
and
jp
popa
xor
cmp
add
out
mov
xlat
test
test
mov
adc
xor
repz
inc
jg
into
leave
jp
mov
xchg
lods
stc
sub
cmp
add
outs
fwait
repz
fst
test
repz
inc
icebp
clc
pusha
(bad)
aad
call
sub
je
std
ror
cmp
jg
fcomip
out
ror
mov
retf
jle
push
adc
xor
pop
add
test
fucomip
test
xlat
mov
mov
jecxz
xor
and
lock
xchg
outs
fadd
lahf
xchg
popf
cmp
fstp
add
into
leave
mov
rcr
adc
mov
call
push
and
loope
dec
jo
and
addr16
jnp
sbb
xchg
out
icebp
and
fs
sbb
stos
pop
and
cmove
pop
arpl
fld
jl
sub
fstp
push
sub
cmp
dec
bound
popa
js
push
mov
int
ror
cmp
fcmovne
adc
mov
fs
xchg
fsubr
sahf
cmp
mov
out
(bad)
push
pop
adc
or
jle
pop
mov
jmp
sub
(bad)
pop
fwait
mov
jno
pop
cld
sbb
pop
ret
fldcw
out
in
scas
gs
les
pushf
mov
adc
xchg
fs
int
jne
xor
aaa
cmp
adc
in
pop
mov
int
inc
push
sbb
stc
cld
inc
mov
lds
sbb
or
stos
xchg
imul
cmp
dec
push
sub
sub
cmps
movs
(bad)
jle
out
and
adc
add
ret
out
pop
inc
add
call
push
xor
dec
call
sbb
shl
sbb
(bad)
mov
mov
xor
outs
mov
outs
shl
ror
out
mov
xor
add
sub
fcomp
hlt
leave
sbb
into
je
mov
fs
cmp
gs
xchg
je
inc
fstp
(bad)
fs
in
xor
mov
ret
stos
inc
scas
repnz
jae
inc
fs
dec
cmps
mov
sbb
outs
pop
and
xchg
xchg
mov
and
dec
ja
loopne
and
into
xchg
jmp
sbb
pop
mov
and
addr16
cmc
(bad)
out
jmp
sub
retf
(bad)
imul
dec
loop
bound
clc
pop
addr16
sub
mov
sbb
mov
scas
jae
fs
push
add
xchg
pop
push
sub
jmp
and
cmp
or
inc
mov
xlat
sub
rol
mov
sub
push
call
not
mov
stos
int3
cmc
test
jge
in
mov
and
ds
push
in
add
inc
cmp
lea
int3
sub
mov
cmc
mov
jmp
movs
std
das
int
cmps
pop
fbstp
lods
and
aas
push
outs
mov
mov
mov
into
mov
ror
jb
jo
jg
pop
fnstsw
sub
mov
cld
cmps
arpl
dec
les
xchg
retf
jle
inc
xchg
xor
aam
jle
cmps
sbb
(bad)
push
mov
cmp
test
fld
push
adc
push
ja
sahf
pop
not
idiv
add
mov
cmp
call
inc
xor
aam
lea
cmp
xchg
aam
mov
dec
jae
out
aad
jnp
popf
pop
ror
mov
arpl
not
aad
and
cmc
jns
int
rcl
sub
je
ror
inc
(bad)
(bad)
cmp
jl
mov
and
retf
ror
cmp
inc
paddb
jno
push
push
sar
mov
add
es
sub
mov
enter
lock
jb
sbb
arpl
movs
xlat
jb
mov
outs
repnz
sub
pop
xor
xchg
arpl
cmp
inc
push
sahf
sub
jmp
mov
jae
inc
or
ficomp
mov
ss
sub
jne
push
mov
xchg
shl
cmp
push
add
(bad)
aad
rcl
dec
stos
scas
cld
pop
lds
cmps
cmp
in
xchg
sbb
add
imul
mov
inc
dec
mov
push
out
pop
mov
pop
or
mov
sub
jne
or
add
and
pop
xlat
fdivr
mov
shr
pop
into
xchg
adc
dec
mov
ret
out
mov
mov
cmp
cmp
xchg
lock
mov
mov
scas
adc
sub
add
or
and
cmp
or
out
lock
or
cmp
es
mov
outs
rol
sti
add
(bad)
les
lock
inc
or
arpl
jb
iret
pop
inc
stos
mov
xchg
int3
push
rcr
fstp
inc
outs
or
loopne
sahf
(bad)
lock
ja
les
(bad)
repnz
adc
iret
out
fcomi
fwait
in
adc
aas
or
cld
arpl
and
shl
das
movs
push
mov
lods
in
jl
xchg
mov
dec
pop
add
js
add
xor
test
sar
test
xlat
cmp
ds
push
sbb
sti
dec
sahf
push
lods
ret
push
sahf
movs
addr16
and
repz
mov
adc
jb
mov
jb
push
cmp
jge
ins
push
xor
push
adc
mov
or
fcom
das
push
scas
(bad)
retf
mov
jmp
mov
dec
or
push
rcr
and
inc
add
mov
and
sub
and
fwait
mov
cmp
(bad)
adc
sti
and
jl
test
fist
popf
push
mov
dec
cwde
ror
mov
ds
cmps
xor
repnz
adc
in
add
sar
in
js
iret
dec
fisttp
xchg
xor
repz
and
mov
dec
mov
test
xchg
jbe
stos
xchg
call
ss
or
(bad)
arpl
arpl
dec
fcmovnbe
movs
cdq
jns
sbb
mov
add
or
fistp
sbb
shl
lock
enter
dec
mov
cmp
stos
int
ins
push
sbb
sbb
sub
in
bound
repz
scas
or
jge
inc
in
sbb
test
mov
inc
in
pop
xor
shl
dec
fist
sbb
aas
imul
aam
call
push
or
mov
and
es
inc
sbb
les
dec
mov
mov
xchg
icebp
inc
or
push
stc
cs
mov
(bad)
retf
dec
adc
in
mov
jecxz
adc
sbb
stos
leave
inc
imul
arpl
or
inc
rcr
add
jns
xchg
out
daa
or
or
pop
pop
test
mov
dec
xchg
data16
jbe
into
pop
add
jbe
jp
mov
fimul
mov
icebp
push
push
and
test
xlat
retf
mov
mov
jg
popa
es
cli
jmp
push
daa
mov
rol
push
repz
aad
add
ret
aaa
jb
jp
jno
setne
adc
mul
lds
push
mov
rcl
adc
inc
ja
pop
xchg
and
movs
bound
sbb
pop
movs
dec
test
out
pop
and
pop
dec
mov
mov
pop
fdivr
cmp
(bad)
lahf
add
ins
adc
sti
dec
jno
add
xor
sub
ficom
pop
mov
loopne
mov
mov
in
pusha
lds
out
enter
pop
xlat
xchg
jmp
jmp
fcmovnb
add
dec
cmp
add
out
ret
in
ret
xchg
stc
jno
lods
adc
pop
pop
fisttp
mov
sub
jo
sbb
popa
test
pusha
pop
mov
in
and
std
mov
adc
mov
sar
mov
ss
popa
cwde
cmp
jmp
and
inc
add
sbb
add
mov
mov
jno
jmp
outs
mov
aam
pop
inc
jle
jge
das
loope
dec
push
sbb
sahf
in
aaa
movs
mov
push
cmps
adc
enter
cmp
shl
int3
jns
imul
jo
call
cmps
imul
movs
sub
outs
push
mov
(bad)
std
inc
loop
push
mov
jbe
xchg
daa
fsubr
nop
imul
sub
push
fwait
nop
jg
int3
dec
retf
jecxz
xor
push
or
push
cmp
xor
inc
movs
scas
dec
inc
ins
inc
mov
loopne
cmp
jne
sub
cmp
mov
(bad)
sbb
inc
(bad)
js
mov
mov
sbb
ret
test
xchg
ja
into
fs
ins
mov
jle
jl
jmp
hlt
fwait
jmp
sub
repnz
pop
test
popa
je
mov
jo
(bad)
cmps
leave
mov
stos
xchg
scas
call
mov
ror
imul
test
inc
lds
or
test
mov
mov
fadd
mov
mov
inc
push
js
push
push
xor
cmp
out
mov
mov
retf
xor
aad
pop
xchg
movs
pop
mov
pushf
pop
mov
cmp
leave
das
lea
xchg
inc
fadd
push
das
dec
and
cmp
sub
xor
cmp
adc
sub
out
out
adc
and
aam
adc
xchg
fst
mov
loope
addr16
pop
jge
cmp
xor
call
push
sub
pop
cmps
pusha
add
(bad)
in
test
sahf
lods
(bad)
sbb
das
jp
fidivr
or
cdq
pop
or
mov
xor
mov
retf
xchg
cli
and
(bad)
in
mov
xor
cmp
sti
xor
pop
mov
cmp
int
call
dec
fs
xchg
popa
cmc
push
jmp
les
rcr
ret
push
pusha
sbb
dec
mov
pop
xor
outs
imul
xchg
int
jmp
int
cdq
out
(bad)
sub
fmul
adc
adc
jb
fcomp
cmps
sub
jo
fs
add
(bad)
push
push
cs
add
adc
je
popf
adc
pushf
inc
jge
xchg
mov
cmp
push
les
fwait
sbb
cmc
xor
fidivr
sbb
mov
add
pop
push
push
jbe
sar
call
hlt
fstp
xchg
pop
lock
ja
sub
retf
or
call
mov
test
clc
jbe
iret
repnz
in
ret
scas
xor
push
adc
stos
ret
dec
jmp
fstp
sbb
int
cdq
cli
cs
pop
jo
jg
cli
sbb
or
inc
fiadd
fsub
pusha
dec
rcl
inc
enter
xor
jg
dec
inc
mov
lods
mov
(bad)
push
in
xchg
jp
mov
sub
test
popa
mov
(bad)
jnp
mov
xor
test
xor
mov
ss
mov
sbb
add
add
movs
retf
int3
das
adc
adc
mov
sub
aad
mov
shr
ror
ds
sbb
lods
shl
mov
mov
mov
push
lock
scas
add
call
imul
js
arpl
mov
fstp
push
ror
xchg
sbb
ins
jecxz
xchg
add
cmps
dec
jmp
je
leave
or
cdq
sub
loop
mov
jb
leave
adc
test
push
pusha
adc
int
jnp
and
out
in
mov
xchg
dec
or
loopne
les
or
jmp
and
mov
call
mov
ja
fwait
call
adc
xor
enter
push
or
ret
arpl
loop
test
pop
sub
mov
es
jmp
pop
clc
je
mov
jl
(bad)
adc
inc
or
push
scas
cmc
inc
pop
inc
out
retf
data16
and
xor
imul
jmp
jnp
outs
jle
js
data16
pop
cmp
test
retf
cmp
pushf
mov
popa
push
sub
mov
ins
sbb
mov
mov
xchg
pusha
dec
jno
ss
gs
dec
stc
and
mul
scas
lea
div
iret
mov
ds
adc
scas
push
jne
arpl
jecxz
pop
jmp
jmp
popa
test
retf
in
inc
ret
shl
dec
sub
jl
(bad)
xchg
lock
popf
test
and
jno
daa
add
repz
sub
cmps
aaa
imul
jo
aas
in
mov
mov
repz
push
xor
or
fld
mov
in
int3
sbb
nop
push
adc
cwde
cwde
aam
addr16
and
jmp
jbe
pop
loope
cmp
out
mov
mov
hlt
push
mov
std
into
mov
add
call
adc
adc
fcmovb
lods
dec
xchg
dec
cmp
mov
std
loop
mov
shl
mov
dec
repz
lock
stos
and
sub
rol
push
aad
pusha
jmp
dec
shl
push
shl
cmp
sbb
retf
mov
fdivr
inc
add
or
inc
loop
popf
jle
test
ja
repz
cli
and
pop
jb
je
rcr
ja
lods
xchg
data16
adc
std
ja
test
jge
sar
jne
stos
loop
sub
push
mov
jne
inc
jae
shl
inc
cmp
inc
mov
pop
test
test
sbb
pop
loope
xchg
inc
cmp
or
xchg
push
vmovlps
frstor
mov
scas
dec
and
fistp
out
xchg
or
cwde
sbb
and
lock
rcl
and
jnp
(bad)
sub
cld
mov
and
in
inc
movs
adc
je
cdq
cs
and
mov
mov
mov
stc
mov
cmp
jno
in
out
jmp
sbb
adc
xor
add
mov
imul
dec
jge
mov
(bad)
and
adc
and
lea
cmp
scas
mov
jmp
mov
inc
inc
dec
jb
shl
imul
mov
cmp
mov
cmp
call
and
outs
push
les
ret
es
cmc
mov
jb
cmps
cli
xchg
pop
adc
(bad)
cld
icebp
outs
mov
hlt
xor
(bad)
cdq
and
stos
or
mov
imul
push
and
xor
(bad)
les
xor
or
lahf
sbb
mov
sub
(bad)
movzx
test
inc
iret
popa
mov
mov
popf
call
test
mov
sub
hlt
push
and
outs
push
jp
call
sbb
xor
movs
je
pop
fist
movs
fld
add
fist
jnp
jp
sub
loop
push
mov
mov
in
cmc
das
bound
dec
out
mov
pop
ss
pop
int3
mov
std
inc
outs
push
xor
iret
dec
push
mov
cld
mov
je
jmp
sbb
popf
pop
repz
and
popa
pop
out
xor
and
pop
xor
ss
push
js
cdq
std
es
icebp
dec
or
xor
push
cmps
jno
ss
shl
lahf
dec
dec
mov
mov
test
mov
test
sahf
xor
mov
xor
aaa
(bad)
jae
sbb
cmp
cmps
xor
sbb
and
push
and
jo
in
test
inc
mov
and
es
xchg
mov
and
je
mov
(bad)
jp
push
sbb
cmps
iret
xor
and
(bad)
popf
not
cs
jnp
inc
sbb
adc
add
fidivr
imul
jmp
dec
ins
mov
xor
fs
mov
sar
scas
in
popf
and
pop
mov
stos
div
sub
and
call
loope
xchg
loopne
add
cmps
sub
push
je
mov
mov
push
lods
cli
jecxz
jne
pop
pop
and
jecxz
push
jne
pop
fdivr
test
xchg
adc
jnp
and
mov
push
retf
or
icebp
push
sbb
jb
outs
pop
mov
(bad)
and
sub
pop
mov
(bad)
ins
lods
outs
popa
inc
inc
mov
fcmovb
les
in
icebp
mov
or
pusha
jmp
pop
jmp
shl
xchg
arpl
stos
frstor
scas
jmp
xchg
inc
xchg
mov
mov
lock
aad
lock
test
call
loope
test
push
clc
ins
cmp
xor
je
cmp
dec
and
pop
mov
add
fiadd
ret
and
fld
sbb
jg
(bad)
jle
in
pop
mov
test
out
mov
dec
lods
icebp
dec
stc
xor
cdq
pmaxub
cmp
xor
fsub
shl
xchg
jno
mov
mov
sbb
mov
js
repz
push
cwde
sbb
in
clc
sbb
ret
adc
lahf
push
push
fisttp
and
push
shl
dec
pop
jae
mov
cmps
fnsave
ret
test
xlat
jmp
jbe
adc
loopne
scas
mov
clc
jmp
sub
lods
test
fdiv
dec
les
jg
ret
rcr
pop
pushf
cs
push
arpl
cdq
neg
push
movs
ss
xor
fbld
cmps
clc
jno
sahf
sbb
cmp
dec
call
sbb
jle
push
xchg
es
xchg
movs
dec
stos
lahf
inc
inc
in
and
or
jle
cmps
dec
ret
mov
popa
pop
xchg
test
add
mov
sub
mov
loope
sub
push
outs
jmp
cmp
xor
pmullw
push
clc
jle
imul
sub
pop
sbb
or
lahf
iret
mov
jbe
jge
aad
push
pusha
jbe
xor
nop
lahf
jbe
(bad)
lahf
add
into
out
loopne
in
mov
mov
add
fdivr
imul
xchg
cld
add
dec
add
add
out
aad
cmps
jnp
adc
jl
or
sub
out
(bad)
xchg
sub
pop
ins
ja
scas
jmp
xchg
jl
push
fld
or
push
sahf
das
fidivr
jle
mov
(bad)
fcom
inc
jnp
xor
add
mov
stos
nop
leave
pop
push
(bad)
jecxz
jmp
adc
fcom
pop
in
hlt
adc
pop
push
jge
mov
mov
sahf
dec
sbb
int
nop
mov
mov
in
inc
adc
cdq
xor
fwait
push
sar
imul
dec
jle
ins
nop
cdq
sub
out
jge
mov
add
test
mov
xchg
movs
mov
test
hlt
inc
mov
in
mov
and
push
stos
jmp
nop
loopne
js
aaa
mov
dec
dec
loope
xchg
movs
mov
ja
in
inc
sbb
call
xchg
or
(bad)
push
cdq
sbb
jnp
scas
jge
ss
sub
pop
daa
push
popa
(bad)
mov
loopne
test
sub
ja
shl
ja
stc
push
jmp
add
inc
loope
lock
repz
or
and
jbe
into
cmc
(bad)
mov
sbb
and
lock
adc
test
mov
adc
addr16
pop
out
aaa
aaa
push
test
inc
hlt
sub
push
getsec
lock
jo
mov
lahf
in
ds
inc
mov
inc
test
pop
cwde
adc
dec
push
add
pusha
cmp
inc
loop
and
lea
push
jne
aam
or
hlt
imul
cmp
ds
xchg
adc
into
mov
push
ins
std
cli
xor
test
jmp
(bad)
inc
mov
scas
cmp
inc
les
sbb
(bad)
push
repnz
test
pushf
fdiv
xor
push
and
bound
retf
sbb
jnp
maskmovq
div
stos
int
and
pusha
lods
sti
jge
xchg
push
sub
sub
and
sub
loopne
rol
(bad)
jp
lahf
sub
mov
xchg
lods
test
cdq
fs
jl
lahf
mov
add
pop
repnz
inc
adc
mov
jnp
sub
jo
loope
aas
in
cld
jg
nop
fdiv
cmps
xchg
mov
or
pop
mov
sub
pop
sahf
inc
cld
sbb
stos
inc
movs
jmp
in
icebp
push
neg
mov
push
dec
xchg
ja
lods
dec
push
pop
pop
dec
(bad)
test
fld
dec
inc
fld
adc
adc
lds
jbe
fisub
add
and
xor
adc
inc
mov
(bad)
pop
imul
(bad)
jg
test
enter
cmp
jle
movs
dec
test
add
shl
inc
xchg
mov
mov
ja
and
adc
add
(bad)
dec
xlat
lods
mov
int
xor
cld
push
sub
or
retf
xchg
mov
sub
bound
cdq
loope
sub
or
mov
arpl
mov
inc
or
enter
pushf
scas
adc
mov
mov
loopne
pop
scas
pop
jge
adc
bswap
rcl
lods
dec
jp
in
xlat
dec
lds
push
sub
cwde
and
cmp
jne
dec
xchg
(bad)
mov
stos
jecxz
sbb
pop
sub
adc
mov
rol
or
push
in
mov
in
mov
xor
pop
mov
xchg
xchg
or
jo
int3
add
add
in
retf
loope
mov
push
je
outs
sbb
mov
jnp
retf
ret
mov
dec
imul
in
or
ret
mov
pop
leave
retf
mov
sahf
jg
push
push
xor
ins
ds
sar
dec
out
dec
aam
repnz
scas
addr16
call
push
adc
sti
inc
pop
sub
js
gs
and
fld
mov
out
retf
in
xchg
mov
push
dec
movs
xchg
cdq
aad
je
sub
cdq
in
push
mov
js
or
mov
inc
test
test
xchg
jae
fldcw
mov
int
imul
add
add
mov
int3
sub
fsub
pusha
leave
enter
mov
pusha
loop
aam
ins
xchg
out
cld
mov
add
std
pop
out
jbe
sub
aaa
lods
mov
ins
push
sbb
adc
dec
outs
not
ds
and
ret
cdq
pop
fwait
lahf
hlt
or
sub
push
jmp
outs
outs
aaa
jo
(bad)
adc
mov
ret
cmps
dec
mov
repz
fimul
mov
ss
xlat
jno
cmp
call
les
icebp
stc
aas
test
push
xchg
mov
popa
sbb
inc
jb
xchg
mov
and
jo
mov
lds
ss
arpl
aad
mov
mov
and
jmp
scas
mov
nop
mov
fst
cmps
addr16
cs
sbb
outs
xchg
adc
push
or
inc
pop
fldlg2
loope
and
dec
fs
call
ret
jle
xchg
inc
fisubr
fdiv
inc
cmps
call
mov
xchg
out
or
lea
xor
push
and
sti
sbb
sub
out
jne
mov
and
jns
mov
dec
push
mov
ret
rcr
mov
cmovs
dec
mov
ja
pop
cli
addr16
scas
xor
adc
ins
xor
stos
gs
adc
fwait
lahf
mov
inc
adc
push
faddp
mov
and
mov
js
(bad)
aas
or
xchg
pop
cs
add
psubq
scas
mov
fcom
xor
(bad)
xchg
(bad)
jp
(bad)
cmps
rol
dec
mov
shl
xlat
add
lea
sub
jbe
dec
les
leave
mov
or
shl
inc
push
fwait
jmp
push
mov
xchg
mov
ins
jbe
adc
and
lds
xchg
sub
inc
adc
pop
inc
sar
push
jnp
arpl
mov
add
jmp
mov
mov
mov
movs
popf
test
nop
popa
xor
nop
clc
adc
das
leave
pop
stc
sbb
jne
add
retf
sahf
or
mov
cld
ror
aaa
and
dec
mov
ins
arpl
dec
jno
bound
sti
nop
cwde
loope
or
cmps
xor
jmp
bound
lds
test
retf
push
cmps
retf
xor
loopne
xchg
loop
push
pop
sahf
push
outs
jo
push
pop
stos
mov
test
ds
push
loope
iret
push
push
fcmovnu
and
mov
aam
je
fst
fild
xor
fwait
mov
and
pusha
sub
dec
mov
mov
jle
das
adc
imul
add
adc
adc
pusha
inc
sub
adc
cmp
adc
or
in
adc
das
push
loopne
out
jno
xchg
xchg
into
jns
sbb
dec
in
mov
lods
add
(bad)
or
clc
lods
popa
(bad)
mov
lahf
push
cmc
leave
sti
xchg
push
push
dec
mov
sbb
jmp
sub
stos
rol
retf
inc
jg
mov
mov
test
push
ja
inc
out
sbb
(bad)
mov
je
cmp
push
push
cmc
or
lahf
cmp
push
cmp
out
retf
aad
js
imul
cmp
and
mov
adc
pop
mov
and
in
ror
jae
mov
out
lods
jle
fisttp
fcmove
retf
ins
addr16
aaa
mov
or
add
iret
and
test
out
jle
push
aaa
fwait
adc
xlat
and
mov
mov
adc
sbb
add
shl
adc
int
xor
fsubr
in
mov
add
xchg
call
clc
mov
rcl
jecxz
outs
sbb
xor
out
xor
or
stos
pop
dec
cs
and
push
inc
or
adc
mov
lock
loop
fdiv
out
shr
mov
nop
shl
ds
stc
xchg
imul
xlat
sub
inc
fcmovu
ja
jge
gs
rcl
push
jl
sbb
ds
inc
leave
adc
fstp
(bad)
cld
pop
inc
cmps
int3
cmp
mov
retf
in
fcomp
nop
push
and
xor
shr
add
pop
cmp
cdq
mov
lods
scas
xchg
movs
hlt
loopne
test
xchg
mov
es
out
lahf
pusha
daa
or
jbe
push
ins
fld
ror
in
jl
pop
ret
push
gs
mov
mov
and
ja
push
mov
push
cmc
movs
push
cmp
sub
or
push
pusha
sahf
neg
mov
pop
mov
in
mov
xchg
or
inc
hlt
sbb
iret
jmp
xor
mov
add
add
add
push
repz
pop
mov
mov
xchg
inc
push
stc
inc
cwde
add
sub
push
out
add
pop
dec
sub
fisub
jmp
inc
mov
hlt
nop
pop
cmps
loope
lds
test
xchg
ins
jmp
fcmovnbe
fwait
inc
inc
xchg
test
sbb
xor
adc
ret
test
(bad)
rol
(bad)
loop
pmaddwd
add
mov
mov
mov
ins
inc
xlat
sahf
cmp
enter
mov
sub
xchg
mov
or
fistp
sub
pop
icebp
mov
in
retf
loope
mov
pop
clc
mov
lock
xor
or
jecxz
test
jne
scas
mov
adc
iret
call
mov
jl
imul
adc
ret
mov
icebp
(bad)
div
sub
inc
(bad)
xor
cmps
hlt
fcmove
popa
sti
js
push
shr
or
movs
pop
loop
push
push
(bad)
pop
mov
pushf
int
test
xor
cmp
call
push
push
aam
cmp
repz
pop
jnp
or
mov
mov
mov
xchg
sub
lds
loopne
jmp
dec
in
sub
dec
stos
jecxz
mov
add
xor
mov
xor
cmp
jecxz
and
shr
addr16
retf
xchg
jmp
pop
loopne
inc
pushf
loope
jns
push
js
cmp
int3
jl
pop
dec
and
jnp
test
cwde
jo
cmp
xchg
inc
loope
mov
bound
bound
xchg
cmp
add
mov
popf
bnd
push
adc
and
add
sub
mov
jecxz
inc
jmp
mov
das
push
icebp
mov
pop
ja
pop
cmp
push
pop
out
inc
pop
xor
cwde
push
addr16
std
cld
inc
dec
mov
gs
jnp
out
mov
in
mov
pop
xlat
outs
(bad)
adc
stos
repnz
inc
repz
mov
in
pop
fisttp
add
push
mov
push
fcom
mov
sub
aam
or
stos
test
pop
xchg
pop
dec
xlat
rcr
repz
push
aas
arpl
test
or
(bad)
cli
aaa
cmps
int3
sub
aad
aas
xor
push
es
aaa
das
add
xor
cmp
pop
cmps
fistp
cld
inc
dec
loop
pop
retf
fsub
pop
les
(bad)
mov
lods
mov
xchg
loop
sti
xchg
loop
xchg
lods
mov
jl
mov
mov
aaa
push
js
sbb
dec
repz
xor
sbb
lock
dec
inc
loopne
sub
cld
jns
addr16
ret
or
jns
mov
in
push
je
pop
push
test
push
scas
fidiv
inc
pushf
(bad)
lea
cs
push
push
and
add
xchg
xlat
mov
jg
jl
inc
shr
jg
cmp
sub
sahf
push
(bad)
fimul
iret
lods
cs
dec
jns
out
daa
fiadd
inc
push
mov
fild
cmp
mov
call
or
ret
pop
and
add
pop
cmps
sbb
jecxz
inc
xor
ins
outs
rcl
inc
mov
sub
out
(bad)
neg
icebp
nop
jle
mov
std
inc
pop
push
jmp
inc
data16
ja
jge
cmp
aam
push
pop
adc
test
rcr
ins
sar
int3
test
xlat
xor
out
mov
jge
or
xor
pop
js
jmp
mov
stc
push
mov
scas
out
dec
cmps
dec
mov
xchg
jp
repz
call
push
jge
sub
shr
int3
adc
lds
fidivr
mov
inc
movs
and
dec
retf
and
sub
mov
stos
mov
sub
leave
es
dec
push
sub
and
pushf
scas
icebp
fs
mov
pop
jl
aaa
xor
xlat
scas
jg
jg
mov
pop
cmc
and
and
pop
call
mov
(bad)
adc
mov
rcl
test
jne
aas
cli
and
and
sub
lods
imul
(bad)
adc
cmp
sub
xchg
int3
call
mov
adc
jge
lods
cmp
std
pop
cmps
jae
retf
enter
call
cmp
aas
adc
popa
(bad)
aaa
inc
xchg
inc
jg
mul
loop
dec
stos
sbb
mov
cmp
fcmovu
add
xor
dec
hlt
sub
les
in
mov
mov
stc
mov
ds
jle
inc
call
in
push
push
sbb
sub
inc
pop
cwde
add
xor
nop
sub
dec
retf
pop
mov
test
jmp
mov
jae
push
(bad)
mov
out
aad
hlt
fdivp
add
sub
inc
xchg
add
xor
push
inc
clc
retf
(bad)
fistp
shl
icebp
sbb
stos
adc
call
cmp
clc
push
stc
push
in
mov
inc
es
jecxz
fsubrp
jg
sub
mov
push
and
(bad)
cmp
into
fisubr
adc
icebp
movs
or
adc
fadd
or
xchg
into
add
dec
inc
pop
or
pop
jae
xchg
inc
aad
push
loope
fidivr
pop
mov
cmp
int3
setge
movs
push
xor
ss
shl
sbb
pop
cmps
imul
sub
xchg
into
or
mov
(bad)
arpl
mov
push
bound
fsub
inc
or
fldenv
movs
and
in
push
stc
mov
or
mov
ins
jle
ins
mov
xor
xor
push
jge
xor
cmp
mov
push
cmp
stos
cdq
in
shr
mov
adc
xchg
cmp
and
push
das
push
push
(bad)
mov
and
xlat
xor
push
or
xor
dec
movs
or
or
scas
inc
fdivrp
test
or
test
jne
scas
push
ins
(bad)
mov
icebp
push
xlat
gs
mov
inc
jne
mov
shl
push
cld
repnz
add
jmp
xchg
mov
inc
xchg
jo
ins
rol
mov
push
jecxz
out
aam
out
cmc
je
xor
shr
or
imul
mov
dec
pop
loope
out
inc
mov
mov
jl
sub
mov
aad
dec
push
loope
(bad)
jmp
mov
or
mov
xchg
add
mov
xlat
mov
inc
mov
cmp
repnz
in
ds
dec
stos
into
outs
cmp
sahf
mov
dec
cmp
inc
xor
fisttp
or
dec
mov
shl
fsubr
les
sub
mov
and
gs
dec
sbb
test
sub
jne
ror
mov
jo
sub
cwde
fisubr
adc
add
dec
adc
leave
xor
dec
shl
dec
jle
mov
inc
inc
(bad)
mov
test
sbb
(bad)
fidivr
imul
inc
mov
cdq
inc
das
jg
and
dec
jle
stos
bound
iret
into
mov
sbb
and
and
add
cmp
in
mov
jne
dec
cmp
mov
fistp
sti
xchg
ss
pop
mov
data16
pushf
iret
pop
aad
aam
retf
cmp
and
mov
mov
bound
in
pop
cli
ret
scas
mov
xor
stos
cmps
xchg
jg
jl
add
inc
and
xchg
loope
fcomp
adc
iret
push
fucomp
cs
int3
(bad)
out
dec
mov
push
add
sub
fwait
sub
adc
or
outs
rcl
jno
sub
xor
leave
add
in
daa
jl
pop
cdq
sbb
imul
nop
scas
hlt
fmulp
cmp
loope
out
or
dec
retf
xor
nop
mov
lahf
cld
jmp
gs
jecxz
jp
fldcw
mov
pop
clc
mul
jnp
pop
retw
jle
push
iret
mov
push
call
push
inc
jns
cmps
imul
loope
or
xchg
xchg
popf
inc
inc
ds
adc
mov
out
or
popa
fild
ja
cli
repz
pop
rcr
cmp
and
inc
mov
and
adc
cmp
cwde
sub
adc
and
jle
enter
int
adc
jbe
and
test
or
leave
rcl
inc
pop
sbb
sub
and
je
jmp
sub
test
stos
xchg
cs
int
aam
stc
xchg
push
mov
inc
int3
sbb
fld
movs
pushf
lock
scas
inc
cmp
in
sub
mov
mov
push
sbb
cmp
cmp
arpl
add
aas
stos
pop
adc
(bad)
adc
or
clc
cmp
pop
mov
mov
cs
pop
xchg
adc
sar
mov
out
xor
mov
pushf
sbb
dec
pop
movs
cwde
xor
jmp
retf
adc
leave
leave
sbb
rcl
inc
shl
push
cmp
mov
or
sub
add
imul
jge
lahf
addr16
pop
or
and
sar
cmp
and
dec
or
sub
mov
lods
or
sahf
sbb
enter
imul
inc
push
(bad)
into
aam
inc
cs
call
loope
mov
add
push
sub
movs
mov
xor
xor
or
arpl
mov
das
mov
call
fwait
arpl
add
sar
mov
iret
bound
repnz
mov
or
test
dec
call
push
shl
(bad)
cmp
push
(bad)
shl
mov
nop
push
mov
in
add
pop
adc
mov
shl
mov
adc
pop
sbb
jmp
(bad)
pop
icebp
shl
in
cmps
aaa
adc
cmps
std
fucomip
xor
mov
add
les
cwde
sub
jecxz
pop
lfs
shl
sbb
leave
xchg
inc
sbb
and
sbb
jmp
jle
cmps
mov
sub
stc
sub
xor
jnp
lds
pop
xchg
outs
cmp
fcom
retf
leave
pop
push
fistp
daa
jo
fcmovnb
xor
mov
mov
es
push
out
and
jbe
add
pop
sub
mov
jp
mov
test
pusha
mov
cmc
ficomp
xchg
clc
add
addr16
mov
test
jne
or
cwde
in
add
adc
ficomp
icebp
pop
dec
pop
cs
mov
imul
adc
jle
adc
std
pop
jmp
push
mov
dec
sbb
enter
mov
jb
dec
sub
test
cmp
mov
mov
cmc
jns
in
mov
mov
jns
add
or
or
cmp
push
test
shl
test
cli
ss
dec
addr16
inc
in
shr
pushf
sbb
jmp
loope
adc
add
ret
fsubr
add
loope
cmp
hlt
lock
jmp
mov
jo
jns
jecxz
push
pop
cwde
dec
xchg
sub
inc
and
pusha
xchg
xchg
push
xor
mov
ret
or
adc
sahf
idiv
add
in
dec
dec
ret
adc
cwde
mov
mov
pop
sub
xor
cmp
push
scas
fisubr
test
xor
pop
daa
cli
out
sbb
cmps
cmps
adc
ds
sbb
scas
cli
inc
push
and
mov
fmul
add
fisttp
push
daa
(bad)
and
mov
cld
cmp
cmp
std
popf
inc
mov
or
dec
idiv
sbb
idiv
xor
add
jae
mov
rcl
loopne
(bad)
shr
hlt
in
mov
in
test
gs
xor
inc
sti
and
add
jns
push
push
xor
and
ret
scas
fld
loopne
dec
add
mov
popa
rol
bnd
(bad)
in
paddd
retf
jae
pop
sti
cld
add
jp
pop
arpl
jno
outs
and
ficomp
cmp
dec
mov
push
xchg
aad
rcr
arpl
cmps
jg
add
adc
dec
pop
dec
fadd
pop
js
cmps
jne
out
or
test
xchg
pop
clc
loop
mov
push
mov
int3
mov
or
shl
test
cmp
xlat
inc
data16
sti
(bad)
ins
dec
cld
stos
cmp
shl
outs
fistp
push
pinsrw
xchg
ins
nop
stos
mov
pop
inc
jne
sub
test
pop
(bad)
out
jb
iret
dec
popa
mov
push
or
leave
inc
(bad)
jecxz
xor
cmp
fisubr
(bad)
cmp
dec
push
push
dec
aas
rcl
dec
dec
pusha
sub
repnz
int
movs
adc
pop
cmp
cmp
adc
in
scas
and
jmp
or
sti
cmps
add
mov
rcl
fcomp
(bad)
movs
arpl
push
es
ja
pop
dec
cmc
xchg
dec
in
push
pop
pop
cmps
inc
mov
push
ss
adc
retf
cmp
test
ficomp
cmps
movs
rol
aam
dec
ds
add
or
mov
jo
stos
push
popa
push
lahf
sbb
or
push
scas
add
or
hlt
add
ja
fwait
pusha
mov
js
push
dec
fwait
mov
or
cmp
outs
mov
xchg
adc
scas
xchg
or
int
test
push
dec
mov
lock
jmp
pop
(bad)
bound
xor
repz
shr
jmp
xchg
mov
mov
movsx
add
(bad)
sub
cmp
cmp
mov
mov
mov
lahf
cmps
push
mov
xor
add
fadd
shr
dec
test
adc
(bad)
neg
cdq
ja
aas
xchg
rcl
push
in
dec
adc
in
xchg
mov
xlat
and
addr16
test
mov
aaa
call
cmps
add
add
dec
clc
retf
loop
mov
or
mov
das
jno
imul
sub
mov
or
inc
pop
mov
cmp
ins
or
ret
add
xchg
neg
jecxz
rcl
leave
add
(bad)
or
push
nop
xor
inc
clc
push
imul
add
lea
push
outs
jb
push
int3
leave
sar
pop
inc
in
shl
and
cmp
xor
jecxz
dec
dec
add
xchg
jb
nop
rol
adc
dec
mov
lods
movs
xchg
test
pop
xor
mov
addr16
leave
and
loopne
nop
or
sub
cs
fadd
jge
(bad)
and
mov
pop
inc
stos
movs
out
je
call
adc
mov
ds
mov
add
movs
add
push
or
mov
mov
mov
test
add
into
fstp
(bad)
jl
ja
iret
and
icebp
mov
jno
out
test
pop
mov
inc
mov
scas
mov
cmp
in
mov
push
call
sti
pop
int3
outs
hlt
fst
mov
in
mov
jmp
stos
inc
loop
add
out
push
hlt
nop
or
xchg
add
popf
sbb
add
daa
pop
aas
scas
adc
adc
je
sbb
iret
loopne
neg
dec
fwait
jne
and
popf
jle
mov
pop
push
addr16
std
nop
leave
(bad)
fsub
ror
xchg
(bad)
or
sbb
dec
or
das
call
hlt
inc
xchg
push
test
ret
xor
xchg
fmul
in
push
aaa
and
xor
inc
(bad)
mov
mov
push
stos
(bad)
in
mov
lahf
aaa
jo
push
inc
call
lea
mov
xor
mov
mov
or
push
dec
xchg
ins
sar
fst
int3
outs
pusha
arpl
sbb
ret
cs
ror
or
leave
addr16
ret
ds
dec
in
sub
and
push
das
ds
mov
hlt
movs
mov
ins
dec
test
lock
or
adc
adc
(bad)
cld
bound
jne
xchg
rol
repnz
jmp
mov
into
pop
cwde
cli
xor
jp
mov
mov
shl
into
and
aam
jecxz
push
push
mov
out
stc
ins
mov
clc
jb
and
ins
sub
push
fadd
sbb
jle
dec
fisubr
dec
xchg
retf
stc
outs
jge
mov
inc
shr
xchg
movs
(bad)
or
mov
inc
mov
rcl
push
xor
ss
sbb
push
xchg
xor
sti
lods
cmp
pop
aad
jge
repnz
push
jo
mov
dec
out
adc
daa
or
pop
into
loopne
fmul
pushf
aad
mov
xchg
mov
jmp
aam
les
nop
data16
call
mov
(bad)
xchg
dec
in
add
adc
daa
inc
addr16
mov
and
mov
or
stos
jae
and
pop
dec
dec
cmps
pop
cs
out
movs
std
add
push
or
cdq
fwait
out
mov
(bad)
idiv
cld
aaa
or
sar
add
jo
sub
dec
or
cmp
push
xor
jno
outs
in
movs
push
mov
add
xchg
push
mov
sub
push
push
cmp
lods
out
xchg
push
pop
mov
jae
lods
leave
push
fdiv
xchg
mov
jns
push
ins
in
shr
int
fmul
add
stos
out
bound
adc
out
xor
shr
addr16
lds
daa
xchg
push
dec
scas
sbb
push
mov
or
push
xchg
push
not
pop
stc
push
cmp
ins
sub
gs
test
ins
ret
shr
aaa
aam
je
adc
inc
adc
xchg
dec
fstp
sub
push
mov
scas
push
out
pop
(bad)
stos
pop
sbb
mul
dec
jns
xchg
pushf
clc
shl
xchg
outs
call
jge
ins
cmp
dec
add
cmp
xor
or
bound
push
inc
popa
rcr
sbb
add
mov
mov
cmp
jmp
xchg
daa
cmp
imul
fild
shl
push
xchg
push
enter
in
mov
in
in
and
ss
mov
arpl
mov
repnz
test
in
add
iret
jbe
inc
cld
mov
fnsave
sub
sti
mov
xchg
add
cmps
xor
inc
dec
test
jae
pop
popf
aam
mov
cli
sbb
dec
call
or
push
jnp
stc
lock
sub
fbstp
adc
fsubrp
cmp
test
ror
repz
sub
adc
xchg
test
add
jbe
push
jecxz
jp
push
xchg
xchg
adc
js
cmps
ret
ds
sub
jle
mov
xor
mov
ret
retf
sub
popf
mov
test
mov
sub
pop
cmp
call
mov
sar
out
push
sbb
fs
adc
xchg
nop
mov
call
enter
jle
imul
xchg
repnz
xchg
and
(bad)
push
and
mov
mov
and
pop
pop
cli
inc
es
jl
lea
in
fsubrp
dec
mov
add
cmc
add
rcl
jl
xchg
pop
ret
or
jo
mov
pop
fiadd
in
loope
fwait
dec
sbb
dec
cdq
sub
push
stc
mov
sub
cwde
imul
scas
aas
fnstsw
xlat
aas
ret
shr
aas
stos
retf
jmp
jle
scas
xchg
cmp
(bad)
int
cwde
push
movs
dec
adc
sbb
sar
push
es
sbb
imul
push
addr16
enter
sbb
lds
cmp
out
cmp
cwde
jo
mov
pusha
add
jge
mov
xor
popa
mov
cli
in
inc
sbb
push
movaps
mov
in
sub
mov
test
and
mov
mov
xor
mov
loope
push
adc
inc
cdq
inc
mov
or
dec
inc
test
retf
jmp
fidivr
out
enter
bound
out
mov
nop
fisubr
pop
ret
xchg
jo
push
fist
nop
mov
jmp
popf
mov
pop
movs
push
in
aam
stos
movs
neg
and
mov
jmp
and
repnz
sti
or
cmp
call
xor
lods
jl
aaa
loopne
ss
fmul
jmp
adc
loopne
jle
loopne
push
jne
mov
mov
adc
idiv
jne
sar
movs
aam
push
xor
cmps
iret
mov
call
lds
adc
inc
mov
pop
mov
push
and
daa
jae
push
dec
loop
mov
push
in
xchg
stc
out
retf
cmp
je
fcomp
adc
sub
push
push
inc
lea
jmp
bsr
retf
jp
sbb
cwde
jb
clc
shl
pop
or
adc
movs
cli
ffreep
xchg
mov
pop
sbb
repnz
lods
jge
push
and
jnp
cmp
scas
ror
out
fdivr
stos
loop
mov
in
int3
outs
test
(bad)
cmps
test
cmp
ins
das
jno
mov
lods
and
bound
cmps
ins
ret
outs
cli
cmps
xor
pusha
jecxz
ins
xchg
jae
popa
int3
or
cmp
xchg
int3
scas
mov
repnz
sub
nop
in
leave
cmp
xchg
hlt
xor
xor
pop
aad
lahf
mov
cld
xchg
int3
adc
mov
popf
ficomp
mov
iret
sar
out
adc
shl
nop
sbb
scas
jno
fstp
mov
adc
pushf
icebp
cs
pop
jp
fsubr
inc
dec
mov
call
fbstp
fwait
rcr
cmps
push
add
(bad)
ud1
and
sub
loope
icebp
ss
ror
repz
inc
imul
fsub
inc
in
mov
lods
in
mov
adc
pusha
pusha
or
sbb
or
icebp
mov
lds
loop
cld
push
or
stos
out
(bad)
pop
dec
adc
int3
cld
jbe
cmp
xchg
xchg
mov
retf
arpl
cmp
lahf
shl
mov
leave
inc
les
mov
xor
repz
inc
or
ins
cmp
adc
sti
and
js
lds
fstp
add
xor
ja
pop
fisttp
lds
out
(bad)
mov
dec
out
and
xchg
aas
hlt
stos
mov
push
or
adc
cmps
xchg
jle
fidivr
mul
sub
dec
jp
fst
dec
cdq
xchg
test
pop
and
sbb
jo
les
xchg
cwde
jbe
shl
ins
xchg
and
and
ja
add
inc
pop
inc
xchg
repnz
mov
push
je
xchg
leave
sbb
fisub
(bad)
(bad)
frstor
mov
(bad)
das
mov
(bad)
retf
adc
addr16
ja
add
adc
fdivr
xchg
ins
sahf
pop
shl
cmp
dec
adc
adc
dec
push
loopne
inc
and
sub
test
jo
jge
ds
aaa
fild
fbstp
xor
mov
shl
cmp
dec
inc
mov
stos
nop
sar
dec
lahf
retf
fistp
push
(bad)
mov
pop
sbb
movs
cmp
or
lods
popa
pop
mov
push
repz
aam
fwait
scas
dec
mov
jp
ins
aad
mov
fs
rcr
loop
cmp
jl
mov
mov
shl
lods
mov
pop
jno
mov
nop
test
repnz
fsubr
imul
push
or
mov
repnz
pop
aad
mov
faddp
mov
das
outs
popa
nop
or
(bad)
inc
jle
adc
jae
mov
push
inc
les
stos
out
push
je
fiadd
inc
sub
retf
add
pop
pop
and
mov
jbe
scas
push
or
push
je
int3
adc
(bad)
dec
jae
add
aas
pushf
xor
lds
add
repz
mov
div
sbb
sub
inc
add
adc
stos
mov
sub
jmp
jo
sub
xchg
xchg
jb
inc
xchg
jbe
fisttp
hlt
push
mov
fdivp
ja
xchg
jge
add
popf
(bad)
sub
dec
adc
adc
pop
add
xchg
loope
stc
cmp
popf
stos
jl
sub
xchg
in
pop
cmps
mov
bnd
jle
adc
enter
mov
lods
dec
gs
fcom
sub
movs
xlat
leave
ins
clc
stc
cld
xchg
or
movs
frstor
dec
push
mov
ins
mov
std
stc
or
xor
movs
daa
loop
mov
es
test
ins
icebp
in
add
inc
std
xchg
adc
xor
mov
or
repz
stc
inc
lea
pop
idiv
mov
sub
xor
loop
sub
(bad)
push
call
in
jae
sub
loop
jns
es
pushf
push
lods
push
pop
mov
dec
test
jg
nop
in
sub
int
mov
mov
push
stc
pop
push
loope
pop
out
and
in
or
or
mov
outs
gs
cld
loope
inc
push
inc
or
xchg
cmp
fst
and
aas
js
adc
inc
cmp
inc
cmp
mov
jp
push
popa
xchg
pop
ficomp
add
call
sub
inc
cli
pop
lods
pop
pop
dec
lods
mov
stos
jbe
mov
daa
out
add
(bad)
inc
hlt
test
xor
int3
call
jo
jp
mov
add
das
inc
lods
aad
pop
(bad)
(bad)
jno
dec
push
mov
or
hlt
mov
lds
fsub
test
push
int
popa
call
jno
(bad)
push
mov
popf
jb
and
dec
adc
fs
push
push
adc
mov
mov
xor
mov
leave
fisttp
sub
and
and
add
bound
jnp
mov
mov
xorps
inc
iret
inc
sbb
cmp
mov
and
clc
or
mov
ror
and
push
repz
jbe
fnstsw
jne
dec
je
rdmsr
outs
sub
sub
rcr
fldcw
sub
xchg
jne
xor
jnp
and
mul
scas
add
sahf
inc
adc
xchg
push
sbb
fs
add
packssdw
retf
mov
popa
mov
dec
rol
push
repnz
lods
aaa
cmp
cwde
enter
push
pop
xor
leave
lds
xor
mov
fisub
imul
add
inc
std
and
stos
dec
adc
cmps
movs
ins
cmp
cmp
inc
mov
xor
popf
imul
int3
mov
das
(bad)
mov
mov
fidivr
loope
ins
cmp
cmp
or
fcom
xor
out
sbb
mul
cmp
pop
pop
xchg
cmp
test
addr16
test
push
ret
add
xor
pop
sar
jns
mov
or
imul
dec
fnsave
adc
mov
dec
sub
bound
xchg
mov
stos
sub
aas
xchg
xor
int3
mov
fld
push
imul
xor
jge
jl
mov
stos
mov
xchg
fadd
fst
cmp
fcomp
sbb
or
pop
xor
out
repnz
call
out
mov
adc
sbb
adc
daa
mov
cmp
sub
mov
dec
mov
pop
test
push
(bad)
fdivr
test
neg
in
push
cmps
ror
daa
mov
cmp
int
jb
jg
inc
xchg
and
mov
xchg
int3
and
retf
or
xchg
sbb
cmp
call
dec
dec
add
jmp
xchg
xlat
das
test
outs
sbb
movs
(bad)
movs
xchg
inc
cmp
jne
std
mov
or
loope
cld
test
rcl
test
and
mov
sub
add
out
loopne
outs
dec
je
add
xchg
aad
rol
cmp
jae
cmp
pop
pop
sub
rcl
and
jns
outs
mov
mov
std
push
rol
inc
pop
popa
and
sbb
mov
or
sti
mov
ins
mov
mov
jbe
mov
pop
pushf
ja
inc
stos
sub
or
pop
adc
xor
dec
sahf
sahf
jp
int3
pop
mov
inc
adc
je
jbe
xchg
stc
inc
push
mov
fdivr
xchg
fwait
mov
or
mov
sti
fisubr
jmp
inc
retf
xchg
fmul
xor
dec
jne
inc
inc
ins
loope
pop
add
jbe
mov
cmp
xor
not
or
dec
fdivr
push
xchg
sti
mov
and
sub
icebp
loope
sbb
jp
scas
dec
sbb
xchg
fild
ficom
test
xchg
dec
sbb
popa
cmp
inc
xor
and
pop
fldenv
adc
mov
sbb
dec
cmp
inc
hlt
inc
cmps
sub
stc
shl
lahf
xor
fwait
or
mov
out
pop
mov
stos
push
adc
test
ficomp
ds
pop
add
and
sub
jge
adc
fwait
rol
ins
ja
adc
sbb
pop
mov
add
adc
icebp
js
mov
mov
ret
mov
cmp
(bad)
loope
retf
and
(bad)
test
popf
imul
or
shr
and
ret
mov
cdq
pop
lea
xor
mov
mov
dec
xchg
or
int3
dec
out
call
mov
das
in
scas
(bad)
mov
dec
dec
mov
or
rcr
add
(bad)
cmp
sar
cdq
fmul
pop
lods
outs
pop
or
outs
repz
push
cmp
mov
cmp
(bad)
inc
sub
jbe
add
pop
loopne
sbb
jp
push
push
imul
xchg
add
aam
sbb
loope
jns
mov
dec
xor
das
es
sbb
fs
sbb
xchg
xchg
js
sbb
jg
(bad)
cmp
cmp
adc
ds
fnstcw
ins
ficomp
sbb
cmc
sbb
mov
fcmovbe
in
inc
sub
xor
es
repz
mov
jo
xchg
add
rcr
imul
repz
sti
push
movs
jecxz
xchg
dec
jl
jne
neg
imul
mov
fdivr
xchg
xchg
mov
je
and
xor
dec
mov
lds
cmp
rol
mov
ds
or
jmp
cwde
xchg
popf
fimul
sti
retf
push
les
int
popf
mov
adc
or
push
mov
mov
out
push
in
mov
sub
sub
ret
(bad)
mov
mov
pop
xor
cli
or
inc
not
ds
repnz
(bad)
push
push
and
add
shl
out
in
push
and
xchg
int
xchg
fsubr
in
mov
sar
xchg
pop
addr16
add
lds
(bad)
cli
inc
pop
sbb
mov
int
shl
jl
sub
jnp
push
cmp
(bad)
loope
cmp
xchg
or
cmp
int3
pop
stos
mov
xor
loopne
xchg
mov
push
retf
outs
fldcw
sbb
test
aas
mov
xchg
sbb
sbb
mov
stc
fwait
in
cli
cmp
pop
aas
pop
sub
push
out
daa
push
mov
fcmovb
shl
mul
test
ja
dec
adc
bound
test
add
das
cmp
and
inc
mov
or
or
pop
(bad)
leave
and
pop
and
cmp
aaa
inc
push
push
cmp
push
dec
pop
dec
adc
ss
shr
es
scas
pfadd
push
xchg
ds
dec
popa
bnd
mov
xchg
pop
mov
jmp
jmp
sub
retf
xor
ds
movs
stos
and
gs
or
ja
mov
pop
push
add
inc
dec
imul
add
and
mov
or
xchg
xor
lar
mov
repnz
cmp
pushf
lahf
dec
cdq
add
call
or
in
test
fdivr
jp
push
xchg
xchg
sbb
fcmovbe
cmp
(bad)
neg
(bad)
xor
dec
add
dec
pop
or
or
sbb
loope
std
jno
mov
add
mov
xchg
pop
adc
mov
mov
sub
(bad)
jo
xor
sbb
cmp
cmps
dec
(bad)
xchg
xchg
arpl
outs
mov
cmp
hlt
(bad)
imul
adc
jle
dec
dec
pop
or
dec
inc
pop
mov
sub
mov
ret
xchg
std
or
xor
and
shl
sbb
in
mov
rcl
bnd
sub
jl
in
pop
adc
(bad)
add
push
loope
jne
push
sub
jle
or
out
cli
mov
jp
adc
xor
dec
xchg
test
clc
in
sub
jmp
pop
test
xor
or
pop
in
hlt
fucomp
rol
les
jb
pop
xchg
out
jmp
xor
pop
outs
mov
or
cli
jl
sahf
or
pop
cmp
std
in
popf
dec
mov
stc
(bad)
xlat
loop
mov
xor
sti
mov
mov
jne
xchg
popf
mov
and
loop
adc
scas
or
mov
pop
lea
mov
test
lock
pop
xchg
rcr
loope
ins
xor
mov
cdq
ss
pop
sub
dec
enter
lahf
inc
cmp
out
cwde
jle
mov
jb
aaa
add
scas
sbb
test
arpl
xchg
push
or
dec
mov
jae
test
cmp
jmp
dec
ins
jp
or
sbb
dec
push
inc
jmp
mov
or
dec
jmp
sub
sbb
sbb
aas
bound
adc
and
mov
pop
sti
fwait
xor
xchg
repnz
js
push
mov
lods
xor
sbb
mov
and
int
jl
jne
out
mov
dec
pop
add
cwde
adc
(bad)
fnstsw
leave
(bad)
(bad)
movs
push
cli
add
dec
and
mov
mov
sbb
xor
fadd
push
sahf
jne
in
iret
pop
xchg
cmp
jmp
pop
sbb
outs
sub
push
(bad)
xor
retf
cmc
pop
xor
(bad)
data16
pop
(bad)
in
push
(bad)
call
sub
ins
outs
push
jp
pmulhw
cmps
call
shl
fild
ficomp
sbb
xchg
repnz
or
or
aas
or
or
in
jmp
mov
sar
mov
repz
ret
test
sbb
xchg
jp
sbb
inc
and
retf
popa
xrelease
and
xor
lahf
adc
outs
sub
fld
jmp
(bad)
mov
jle
nop
sub
repnz
js
mov
mov
cmp
xlat
retf
xchg
or
sub
fisttp
in
xchg
imul
inc
hlt
dec
fadd
ret
xchg
scas
mov
push
rol
add
push
push
xor
in
push
dec
push
mov
cmp
pop
pop
xchg
cmp
cmps
mov
test
into
or
jp
push
jns
dec
sub
sar
jmp
and
and
mov
out
and
mov
shl
sbb
pop
mov
sub
xor
inc
out
push
(bad)
cmp
fsub
jne
jns
not
cmp
mov
push
loope
cmpxchg
mov
inc
pop
mov
movs
shl
fcomp
pop
aaa
add
xchg
mov
inc
dec
fcom
out
lods
jmp
ror
push
xchg
(bad)
mov
test
jae
push
jp
or
nop
mov
pop
sahf
in
bound
pop
sub
fdiv
test
loop
mov
or
(bad)
cli
mov
cmp
jo
rol
emms
mov
xor
xor
xor
xlat
adc
adc
adc
call
or
mov
movs
and
xchg
sbb
jl
int3
xor
xor
jge
pop
add
jp
add
repnz
imul
mov
movs
div
test
xor
and
pop
ret
mov
adc
push
mov
push
or
addr16
call
rcr
nop
stc
shl
in
and
adc
xor
jbe
loopne
test
test
jnp
mov
sub
outs
adc
jmp
cmp
leave
les
mov
pop
cmp
mov
and
xchg
xchg
fwait
push
daa
repz
jbe
push
aad
jmp
xchg
push
mov
movzx
push
add
jo
fidiv
cmps
repnz
push
pop
sub
or
mov
cmp
cmp
adc
push
or
push
outs
xchg
shr
fcmovbe
add
movs
daa
fwait
mov
dec
dec
and
es
push
fs
xchg
mov
scas
sbb
popf
jb
fs
(bad)
out
mov
fcom
mov
out
arpl
into
cmps
or
(bad)
mov
stc
jbe
push
mov
int
push
jmp
pushf
push
stos
mov
cmp
out
(bad)
icebp
dec
sub
inc
fadd
and
adc
lds
in
arpl
cmps
adc
mov
repnz
mov
pusha
sub
dec
imul
out
xor
push
dec
sar
mov
jae
pop
cmp
xchg
aad
fild
push
sti
jmp
adc
(bad)
std
xchg
clc
jg
aas
fsub
cmp
lods
inc
pop
mov
cdq
mov
ret
retf
fwait
loopne
jns
mov
mov
push
pop
inc
jmp
repnz
(bad)
into
pop
clc
ror
inc
jne
xor
imul
mov
movs
sub
xchg
pop
mov
fdiv
jp
xchg
and
xchg
data16
adc
jge
sti
ins
aas
imul
jnp
into
pop
jo
(bad)
push
stc
ds
int
adc
or
ins
int3
push
cmp
adc
sbb
jb
fstp
imul
outs
dec
out
adc
xchg
arpl
fmul
or
dec
(bad)
mov
aas
add
mov
pop
fs
and
pop
cmp
jnp
loop
and
and
push
xchg
push
mov
sub
or
test
mov
xchg
iret
movs
adc
mov
mov
xchg
pushf
mov
mov
scas
inc
or
jmp
inc
mov
mov
adc
push
add
out
sub
call
fsubr
int
test
(bad)
or
add
xchg
retf
or
mov
retf
imul
sub
xchg
or
dec
rcr
scas
adc
ins
fisubr
mov
test
mov
mov
push
push
mov
dec
pop
iret
push
test
adc
mov
jno
jecxz
mov
std
pop
sbb
pusha
xor
push
xor
jae
mov
inc
mov
dec
push
icebp
aaa
push
mov
repnz
movs
jecxz
mov
push
dec
mov
mov
push
cdq
lea
jl
pop
lahf
aaa
imul
(bad)
fcomip
lea
cmps
xor
inc
sub
push
xor
push
xlat
sbb
mov
lods
xchg
and
dec
push
imul
mov
mov
fwait
rcr
das
xor
ror
inc
stos
daa
jo
popa
ret
pop
jmp
push
pop
push
or
and
sbb
(bad)
ja
mov
jae
push
(bad)
fistp
dec
loope
test
jb
call
dec
xchg
push
push
inc
imul
in
or
dec
in
rcr
cli
pop
jmp
or
clc
push
(bad)
jb
test
ins
sbb
out
aaa
repnz
sub
add
jmp
cmp
shl
adc
dec
test
or
push
push
xchg
push
lds
nop
stc
pusha
sbb
shr
mov
cmc
jbe
in
sbb
xchg
out
inc
jb
sub
scas
je
hlt
add
aad
sub
in
pop
inc
inc
cmp
ja
movs
inc
pop
add
jb
hlt
and
fwait
jge
mov
dec
retf
dec
xchg
mov
sub
jmp
cwde
and
cs
pushf
cmc
imul
pop
xchg
les
outs
adc
push
repz
test
dec
jb
test
sub
mov
sub
test
cmc
out
and
idiv
in
mov
sbb
(bad)
mov
ins
xor
cli
not
xchg
pushf
jae
movs
mov
jne
add
fld
ins
jo
mov
hlt
shr
(bad)
sti
ret
pop
out
add
adc
push
shl
test
fcmovnu
pop
mov
sub
xchg
xor
retf
lahf
or
sub
mov
fs
sti
sbb
cmps
loope
cmp
push
add
(bad)
fistp
jl
mov
push
pop
es
fisttp
outs
(bad)
xchg
add
xchg
cmp
mov
push
cwde
daa
mov
push
adc
push
sbb
push
test
inc
daa
inc
scas
inc
mov
pop
lahf
cwde
jo
and
pop
scas
sbb
mov
xchg
mov
in
pop
pop
mov
mov
mov
popa
jl
sahf
or
sbb
or
and
hlt
mov
mov
mov
arpl
jp
hlt
mov
or
stos
xlat
inc
adc
sub
retf
das
je
aas
jno
scas
icebp
in
loop
ret
inc
mov
sbb
or
sbb
add
mov
xlat
and
cwde
mov
les
or
lea
or
scas
ins
(bad)
push
fild
cs
jne
mov
cdq
mov
sbb
jg
into
fidiv
popa
add
dec
pop
adc
push
pop
lods
out
movs
stos
imul
sub
jmp
sbb
adc
pop
or
mov
xchg
sbb
cdq
jns
loope
nop
mov
adc
sub
lods
mov
aad
pop
inc
push
nop
ins
fidivr
pop
add
jle
daa
(bad)
cmp
outs
cmp
sub
loopne
pop
pop
(bad)
xchg
aam
je
push
out
loopne
or
xchg
add
fwait
sub
loope
jge
ror
mov
data16
xchg
imul
push
sub
hlt
imul
adc
or
stos
mov
das
sub
mov
cs
pop
fld
mov
ja
call
add
movs
ins
dec
les
sahf
jl
add
inc
and
sbb
data16
stos
xchg
push
xchg
fdiv
cmp
inc
shl
mov
gs
cli
cld
je
out
pop
mov
outs
ficom
add
mov
test
js
inc
jmp
inc
scas
sbb
orps
call
jmp
ret
add
add
pop
jmp
push
mov
dec
jmp
(bad)
adc
and
cmp
(bad)
sbb
jle
ror
mov
sti
js
pop
jmp
dec
mov
fbstp
push
popa
mov
push
push
movs
xchg
and
jno
pop
push
arpl
cmp
pop
cli
scas
mov
jb
arpl
push
imul
test
xchg
push
cmps
std
or
cmc
sbb
inc
lods
aam
repz
mov
pop
(bad)
retf
or
movs
cmp
ins
add
sub
inc
test
scas
xchg
jnp
retf
pop
hlt
aaa
mov
lods
mov
rcr
shl
daa
mov
pop
inc
cmp
push
or
call
leave
cmp
push
adc
jae
arpl
sar
sub
add
imul
jge
stos
fstp
mov
ds
xor
pushf
out
ins
mov
sub
lds
mov
nop
and
cmps
shr
and
pop
loope
lds
xchg
mov
adc
jp
dec
pop
gs
sbb
fbstp
or
pusha
movs
and
dec
xor
out
les
(bad)
mov
mov
(bad)
call
out
cmp
ja
mov
inc
jle
dec
sbb
loop
rol
dec
das
enter
jb
mov
xchg
inc
xchg
adc
lahf
mul
mov
mov
ins
lods
lods
mov
(bad)
xor
aaa
xchg
je
dec
cmp
mov
sub
ds
push
push
push
or
leave
mov
fiadd
sbb
lods
mov
test
pop
aas
ror
icebp
in
jl
icebp
mov
sbb
test
and
repz
leave
mov
lea
call
(bad)
in
adc
cmc
loop
mov
cmp
(bad)
jnp
adc
test
mov
push
or
mov
stos
icebp
clc
test
out
xchg
lods
inc
xor
mov
repnz
in
mov
push
push
xor
popa
jbe
je
neg
and
loopne
sbb
jmp
test
js
int3
push
mov
movs
stc
pop
dec
adc
xor
lods
ss
jnp
sbb
cs
cmp
mov
nop
loopne
loope
nop
rcl
in
stos
fsubr
jbe
aam
(bad)
fst
fisubr
std
call
cwde
in
rol
aas
movhlps
mov
mov
cwde
jo
adc
rcl
ja
jne
mov
(bad)
out
push
or
xchg
pop
cmp
es
jns
call
xchg
call
pause
in
sbb
lods
xor
fwait
jno
(bad)
jge
ror
(bad)
cmp
loope
sub
dec
fisttp
pop
or
enter
int
sub
rcl
fwait
adc
out
push
pop
ret
adc
dec
call
or
vcvtdq2ps
mov
xchg
out
sar
cli
jo
test
jne
dec
aad
and
cmps
mov
push
inc
adc
clc
jg
xor
aad
cmc
in
and
push
pop
cmp
and
jo
mov
pop
neg
xor
dec
push
dec
test
xor
sbb
fdiv
push
retf
punpckldq
jns
das
out
sub
add
fsubr
jbe
pop
pop
jmp
or
fstp
jae
sbb
addr16
not
retf
fsub
push
pop
mov
adc
ficomp
adc
sub
lds
in
push
xor
fdivp
idiv
repnz
mov
xchg
pop
test
daa
and
test
rcr
imul
mov
jecxz
icebp
sti
mov
lods
iret
push
pop
scas
mov
clc
inc
cmp
pusha
sahf
(bad)
pop
cdq
cmp
push
cmps
xchg
lahf
and
mov
shl
push
mov
(bad)
call
mul
and
pop
mov
xor
pushf
bnd
sub
and
xchg
jmp
dec
xor
leave
cli
loopne
movs
lahf
out
movaps
mov
add
sub
jae
sub
mov
jno
push
xchg
pop
add
lods
jmp
nop
jbe
and
pop
sbb
mov
pop
pop
cdq
mov
jo
xchg
or
pop
xchg
in
or
nop
scas
sar
xor
adc
into
scas
push
scas
sbb
in
ja
call
imul
scas
movs
inc
xchg
push
aaa
fcom
ret
dec
imul
sub
ins
pop
outs
mov
and
in
adc
adc
cdq
test
pop
push
mov
mov
mov
shr
fs
call
or
jecxz
(bad)
sub
outs
test
mov
(bad)
(bad)
shl
cwde
test
pop
les
inc
inc
int3
mov
imul
shl
sbb
push
movs
mov
das
loope
pop
jns
outs
add
clc
(bad)
cld
fstp
ss
fprem
dec
mov
arpl
sub
pushf
ffree
imul
lods
pusha
xchg
jmp
adc
cmps
imul
in
pop
rol
repz
xor
adc
pop
sbb
jge
cmps
daa
dec
sbb
or
push
mov
xor
add
xor
mov
pop
sbb
pusha
xor
adc
pop
xor
push
lea
xchg
(bad)
cmps
mov
dec
mov
push
bound
(bad)
loope
push
cli
sbb
mov
es
ja
fld
push
adc
push
call
ret
push
mov
sub
imul
cmp
ja
lods
cwde
imul
mov
imul
inc
or
pop
xor
cmp
xor
imul
stos
rcr
jmp
lahf
cmp
xchg
out
jns
cmps
add
aaa
adc
das
fild
pop
aad
imul
enter
out
inc
cld
ds
pusha
aas
jne
sbb
or
pop
inc
xchg
(bad)
loop
fistp
test
fimul
stos
test
call
jmp
xchg
dec
(bad)
enter
or
mov
ficom
aaa
or
scas
das
daa
dec
inc
jns
vunpckhpd
hlt
xor
mov
mov
xchg
jg
in
push
ret
inc
adc
fst
arpl
stc
rol
adc
jne
xchg
sahf
mov
push
rol
cmps
arpl
in
outs
int
iret
sti
in
ja
and
mov
adc
test
dec
adc
sti
das
jp
jbe
xor
test
mov
mov
ins
sub
jmp
add
jo
dec
ins
inc
repnz
test
xor
ja
push
sub
push
mov
pop
ss
xchg
sbb
cmp
aas
mov
ret
mov
retf
sbb
or
call
jp
inc
or
loope
xchg
cmps
das
ds
test
dec
mov
sub
shl
mov
jns
fucomi
jmp
adc
cwde
dec
fisubr
mov
sti
sub
add
xchg
pusha
push
mov
and
xor
inc
fucompp
sti
loop
jb
into
sbb
shl
add
stos
jnp
(bad)
repz
ds
push
push
inc
sub
xor
xor
xor
out
inc
jmp
sar
fadd
ret
cli
iret
cdq
xlat
test
jnp
xchg
lds
jae
jnp
xor
add
adc
xor
jae
retf
mov
loop
cmp
mov
xor
repz
not
pop
push
push
mov
and
xor
xor
movs
fisubr
sahf
dec
push
cmp
mov
inc
cmp
dec
jle
xchg
(bad)
dec
pop
dec
dec
stos
push
ins
and
sub
outs
xchg
(bad)
arpl
(bad)
jmp
in
dec
adc
stos
xor
cmc
inc
leave
addr16
int3
or
arpl
and
clc
arpl
xor
repz
fs
or
leave
xor
jmp
iret
sub
jmp
sub
(bad)
int3
lock
sbb
fdivr
sahf
jmp
hlt
leave
xor
xor
cmc
scas
int
add
jnp
sar
xor
popf
icebp
sbb
mov
push
sub
in
das
sub
frstor
cs
sbb
sti
dec
cli
jp
cld
lock
jo
dec
movs
mul
mov
mul
das
jmp
mov
test
or
dec
xchg
retf
mov
(bad)
fs
fsub
sbb
lds
push
pop
(bad)
(bad)
cmp
mov
fsubr
pop
rcl
jmp
mov
call
sbb
cmp
mov
and
ds
xchg
mov
or
(bad)
iret
mov
xchg
mov
js
sub
aas
pop
gs
add
repz
sub
push
scas
mov
and
fwait
xchg
pop
xor
mov
loopne
pop
push
sbb
inc
push
rol
xor
imul
out
inc
add
pop
stc
aam
aad
cmp
dec
mov
adc
sbb
push
sar
xor
sbb
repnz
add
fcomi
aad
dec
sub
or
mov
dec
inc
and
pop
shr
pop
adc
push
in
dec
(bad)
gs
xchg
push
mov
out
cmp
add
nop
repz
sbb
jmp
int3
repz
aaa
adc
or
adc
xchg
shr
dec
call
pusha
imul
xor
aas
gs
fsin
xchg
mov
pop
out
ret
dec
cmp
retf
cmc
push
cmc
mov
out
pop
jl
bound
mov
xor
xor
rol
jg
scas
fnsave
shl
lods
mov
xchg
adc
aad
ror
inc
shl
mov
add
pop
sbb
ins
pop
out
test
inc
in
loop
repz
mov
sub
scas
fisub
ret
pop
(bad)
dec
push
pop
aaa
sbb
xchg
jo
fwait
mul
jnp
clc
addr16
pop
push
ins
(bad)
aam
outs
cs
loopne
dec
mov
push
and
jne
jns
jmp
rol
neg
dec
int
pop
cmp
ja
adc
mov
sub
jae
leave
sbb
pop
cld
popa
mov
lods
(bad)
out
fistp
je
arpl
push
repz
fadd
cmp
icebp
imul
das
out
and
inc
mov
int3
pusha
jp
mov
cmc
sbb
pop
daa
xchg
sub
jne
cdq
pop
std
mov
mov
out
cmp
ret
in
mov
sub
jnp
mov
mov
lds
mov
out
mov
lods
xchg
imul
(bad)
pop
pop
hlt
(bad)
add
mov
sti
stos
or
cmp
cmp
mov
inc
ror
test
xchg
or
rol
jbe
cmc
gs
pop
movs
(bad)
adc
aaa
loope
fsub
iret
push
mov
mov
nop
in
fist
or
fnsave
mov
pop
pop
test
cmp
xchg
and
aaa
shr
lods
rol
pop
push
xchg
ficomp
repz
adc
imul
sbb
sbb
or
int
(bad)
out
sub
fadd
jecxz
xchg
imul
sbb
ret
push
xchg
pop
iret
leave
mov
push
movs
xchg
popa
out
iret
and
cld
mov
pushf
les
sub
mov
jo
mov
adc
xor
ins
dec
out
loop
fs
les
aam
mov
pop
pop
(bad)
jne
cli
call
maskmovq
div
ret
xchg
inc
xchg
test
pop
(bad)
push
fimul
sbb
mov
inc
ret
mov
or
adc
push
mov
adc
out
cmp
pop
sub
lods
mov
aam
sub
in
rcl
xor
inc
test
mov
xchg
scas
xor
out
and
xlat
mov
cld
push
pop
and
loop
adc
xchg
sbb
and
(bad)
loopne
icebp
adc
dec
std
ds
inc
inc
xchg
cmc
or
aas
push
add
imul
aad
loop
dec
dec
lahf
fdivr
fmul
dec
(bad)
sbb
(bad)
std
call
pop
loopne
mov
out
test
jns
push
pop
(bad)
stos
mov
add
repz
inc
pushf
retf
cmp
test
sbb
push
add
adc
out
arpl
inc
mov
jnp
adc
lods
shl
cmp
inc
out
aam
fldpi
stos
xchg
or
fcomp
jno
mov
mov
cmp
fucomip
aaa
jns
ror
(bad)
ror
sub
sub
pop
push
and
sub
jnp
xor
xchg
(bad)
mov
dec
push
or
stc
sub
dec
fistp
ret
cs
dec
fnsave
ss
enter
outs
xchg
xchg
xor
mov
sub
aam
add
cli
jb
sub
xchg
dec
test
mov
xor
(bad)
dec
adc
and
jb
xor
(bad)
xchg
fbld
pop
mov
mov
cmp
push
call
push
push
jmp
dec
je
xor
mov
(bad)
ss
mov
rcr
icebp
jbe
push
mov
retf
repnz
pop
or
sub
xchg
das
jge
daa
inc
shr
in
jle
arpl
int3
add
jne
dec
or
mov
sbb
imul
fidivr
jl
jo
test
loopne
add
(bad)
fcom
mov
push
cmp
ret
ins
pusha
mov
aas
xchg
pop
rcl
mov
ret
jg
les
jp
scas
retf
enter
(bad)
sbb
ffree
sbb
repnz
xchg
lods
(bad)
cmp
shl
push
push
mov
scas
out
mov
mov
inc
rol
or
lock
daa
cli
sub
or
cmp
mov
adc
(bad)
gs
stc
xlat
arpl
iret
cmps
xor
(bad)
(bad)
jmp
jmp
lds
xchg
cdq
fnstsw
in
sbb
or
pop
or
mov
add
pop
(bad)
mov
xchg
mov
xchg
popf
sbb
jb
sub
shl
jmp
aad
dec
mov
loope
push
inc
test
int3
push
pop
sahf
out
mov
mov
dec
je
or
fidiv
repnz
inc
pop
imul
sub
sbb
push
jmp
and
ins
arpl
inc
jmp
pop
and
inc
jle
pop
xor
add
mov
(bad)
pop
inc
pop
jmp
mov
in
and
and
sub
mov
lods
mov
cs
cld
xchg
sar
mov
xchg
adc
and
jp
mov
inc
adc
neg
xor
mov
pop
xchg
cmp
inc
push
push
inc
(bad)
push
call
test
gs
inc
jge
stc
sbb
cmp
sub
rsm
xchg
or
and
test
push
dec
inc
xchg
sti
(bad)
add
xor
push
repz
mov
cmp
aad
xlat
cmc
xor
adc
outs
add
dec
and
bound
enter
inc
pop
iret
mov
fisttp
xchg
daa
pop
mov
fcom
jecxz
and
adc
xchg
push
rcr
mov
nop
mov
dec
neg
fmul
dec
adc
rcr
xchg
sub
je
inc
fidivr
into
inc
pop
dec
dec
int3
bswap
aas
sahf
fsubr
into
cwde
pop
pop
imul
pushf
mov
push
(bad)
repz
cld
aam
push
ins
add
and
out
jnp
adc
xor
fld
movs
ja
idiv
adc
dec
mov
fisub
jg
cmp
push
add
aad
add
daa
lahf
xchg
aaa
lahf
neg
in
xchg
and
jae
xchg
mov
mov
xchg
rcr
jmp
jo
lods
and
pusha
lock
aad
jnp
popa
xchg
mov
std
mov
xchg
test
ins
cli
dec
leave
retf
sar
dec
xor
repnz
out
mov
aam
push
sub
call
sub
cmps
int3
cmp
arpl
mov
mov
pop
cmp
mov
adc
(bad)
push
pop
vpinsrw
mov
int
cs
sbb
lods
inc
lods
(bad)
fs
cmc
and
and
xor
cmp
mov
xchg
adc
cmps
push
aas
pusha
xchg
test
retf
fstp
jmp
(bad)
fistp
stos
push
sbb
pop
xlat
je
inc
retf
pop
in
ss
and
mov
nop
inc
stos
repz
mov
push
xor
push
and
and
mov
xchg
ss
push
mov
mov
cli
mov
stos
jg
fmul
mov
xchg
cld
aaa
jae
push
sbb
mov
jmp
xor
sub
pushf
mov
xchg
xlat
ja
xchg
in
outs
jle
cli
adc
or
push
inc
(bad)
imul
adc
clc
or
rep
dec
movs
mov
and
mov
leave
pop
dec
xor
les
dec
aas
xchg
rcl
dec
cmps
lods
outs
retf
adc
cmovs
adc
ficomp
push
lds
push
xchg
jo
xlat
pop
in
shl
lods
jns
mov
xor
sti
ds
sub
call
mov
test
jl
or
iret
in
jmp
pop
out
pop
dec
pop
scas
sbb
cwde
xchg
lahf
lahf
clc
and
sbb
mov
aaa
ss
(bad)
sbb
cmp
fsub
sar
dec
sub
bound
pop
rcr
and
cld
cmp
popf
ret
stos
jbe
cmp
mov
push
sbb
neg
aam
je
data16
jno
arpl
outs
sub
into
mov
dec
fld
cmp
xor
repz
popf
outs
movs
pop
ins
ret
adc
jp
mov
and
ins
fcmovne
xchg
addr16
mov
scas
jae
sub
xlat
mov
ret
ins
cld
mov
xchg
mov
stos
in
and
mov
jge
cmps
mov
pop
sub
into
sar
jmp
loopne
inc
mov
not
push
inc
(bad)
clc
jp
push
cmp
inc
xor
mov
test
fist
call
inc
out
out
inc
fsubr
push
push
jne
pop
cs
push
(bad)
dec
test
push
fstp
xchg
je
dec
xchg
adc
dec
add
int3
xchg
mov
out
dec
push
inc
and
xchg
movs
je
scas
leave
push
rol
nop
push
test
dec
inc
dec
jo
xor
jbe
imul
scas
mov
ins
lods
sub
or
pop
inc
push
jne
movs
mov
xchg
bound
or
xlat
sbb
sub
(bad)
mov
jge
add
mov
(bad)
icebp
iret
outs
push
and
cmp
add
push
pop
and
cmp
sub
jmp
pop
shr
cdq
mov
das
xor
mov
xlat
sbb
jle
stc
dec
cs
xchg
jmp
repnz
iret
sbb
jae
jp
or
test
nop
push
(bad)
out
cmp
ss
mov
mov
repz
data16
(bad)
retf
pop
push
xor
xchg
sbb
cmps
cmp
mov
scas
pop
hlt
dec
inc
mov
movs
scas
test
mov
and
imul
addr16
pop
mov
xchg
or
push
xchg
sub
mov
leave
call
(bad)
push
jae
xor
loopne
rcr
bound
pop
in
shl
stos
sub
jo
add
xor
and
iret
mov
adc
sti
clc
adc
data16
scas
pop
mov
test
std
(bad)
popa
lods
out
mov
stc
das
inc
fbld
addr16
(bad)
fsub
out
gs
sub
aam
or
iret
mov
into
adc
punpckhbw
mov
and
cmp
push
mov
movs
fst
cmp
mov
inc
jo
adc
pop
(bad)
out
xchg
jecxz
not
fmul
cmc
jne
mov
(bad)
mov
jle
imul
in
fnsave
push
lods
cli
mov
mov
mov
test
or
fwait
mov
push
and
mov
mov
pop
mov
cmp
cmp
js
push
and
lea
gs
aaa
cmps
jmp
jne
inc
dec
mov
mov
aad
stos
imul
xchg
cmps
inc
repnz
icebp
stos
add
popa
add
sbb
pop
stos
dec
sub
out
lods
aam
shr
movs
mov
xor
mov
pop
jecxz
fdivp
imul
or
cmp
sub
mov
or
icebp
sbb
cwde
lea
sub
dec
rol
or
stc
test
or
jl
xchg
ss
stos
cs
or
das
push
add
or
adc
pusha
(bad)
fwait
repnz
shl
push
addr16
pop
add
repnz
pop
test
jb
frstor
dec
add
sub
stos
std
std
xchg
movs
mov
jge
xlat
lods
mov
push
mov
retf
call
lods
leave
lods
lods
les
push
imul
call
xor
fucomp
lahf
pop
pop
push
dec
(bad)
inc
xor
push
call
dec
mov
and
pop
push
inc
add
es
push
lods
mov
test
leave
jbe
iret
cmp
movs
push
pop
mov
or
dec
call
sub
pop
mov
ss
outs
mov
scas
std
test
push
pop
jge
mov
adc
pop
sub
call
sbb
(bad)
mov
adc
call
popa
clc
mov
stos
mov
lahf
cli
mov
int
adc
dec
fisttp
or
scas
jnp
icebp
jbe
sbb
xchg
adc
and
cmovnp
jbe
mov
add
popf
in
and
xor
inc
outs
es
mov
push
jo
fs
fdiv
and
xchg
dec
rol
mov
xor
fmul
pop
cmp
ds
add
daa
xor
fs
jmp
cwde
push
pop
test
ds
pushf
(bad)
or
mov
imul
test
pop
inc
pusha
sub
xchg
push
add
cmp
dec
out
sbb
ds
aam
push
jecxz
imul
cmp
cdq
sub
add
das
cmp
or
outs
movs
rcl
jg
add
and
retf
iret
(bad)
pop
cmp
jle
pop
enter
mov
popf
pop
pop
cmp
psrlq
cmps
push
xchg
inc
or
stc
mov
(bad)
push
retf
movs
mov
sub
dec
jmp
aam
cli
loopne
push
stc
pop
and
xlat
mov
pop
and
lods
dec
cmp
loope
lds
(bad)
sbb
cmp
jge
addr16
ret
mov
and
inc
movs
jnp
stc
xor
leave
add
cli
ficom
icebp
add
loope
scas
inc
sbb
popa
js
popa
and
lods
jge
test
pop
xor
fisubr
push
push
imul
mov
adc
push
popf
mov
fadd
ins
push
xchg
add
sbb
cli
mov
lds
sub
xor
mov
push
sub
cmc
pop
jecxz
and
ss
and
leave
loop
xchg
push
data16
test
push
add
fcmovb
aam
pop
aaa
mov
jmp
push
repnz
jmp
sbb
test
mov
jb
and
rcl
adc
adc
cmp
imul
mov
sub
jp
pop
mov
loopne
mov
dec
xchg
cs
outs
mov
out
cld
test
ja
adc
pop
and
pop
mov
mov
dec
inc
sbb
icebp
add
dec
in
cmp
test
mov
dec
jg
or
mov
sub
sub
inc
jae
mov
push
rol
shl
adc
je
push
std
xchg
pop
aad
daa
outs
xchg
push
int3
mov
jle
sub
sbb
out
dec
xchg
jmp
xor
cmp
cwde
repz
and
shl
mov
imul
jb
rol
icebp
mov
test
cmp
mov
inc
fcom
jecxz
ret
repnz
mov
xchg
xor
mov
test
loope
fbstp
jbe
inc
mov
dec
shr
mov
cmp
pop
das
mov
dec
push
fdivp
hlt
ss
xchg
iret
test
sub
in
jo
retf
loope
je
push
add
cmp
fst
mov
cld
and
xchg
pop
int
push
lods
mov
pop
pop
mov
int
mov
sub
mov
xor
sub
std
jnp
cld
inc
xchg
pop
push
gs
inc
sahf
jecxz
sbb
fs
push
test
arpl
ins
lea
js
jo
add
cmps
push
out
pop
cs
addr16
pop
xlat
add
fstp
add
jmp
pusha
dec
mov
(bad)
push
xchg
xchg
daa
das
mov
or
push
dec
in
xor
hlt
les
rcr
mov
fidivr
xlat
nop
shr
in
popa
stos
leave
mov
sbb
in
fiadd
sbb
movs
jmp
adc
mov
adc
mov
jbe
mov
js
mov
add
xchg
mov
cmc
int3
cmp
xor
mov
ds
sbb
sbb
xor
mov
ret
nop
sbb
xchg
ja
jp
inc
fwait
xor
sbb
pop
mov
jle
dec
pop
sub
popf
sbb
retf
out
jecxz
sbb
cmps
or
inc
icebp
mov
xor
dec
fild
stos
(bad)
cs
in
mov
mov
sysret
xchg
fdiv
add
jo
or
jmp
sbb
fst
unpckhps
and
jg
inc
cmp
sbb
mov
in
jg
es
pushf
push
mov
rcl
test
rcr
xchg
fnsave
scas
push
push
add
jae
dec
jmp
int
mov
jle
iret
mov
or
fcom
mov
cmp
lahf
sbb
dec
loopne
retf
pop
(bad)
mov
movs
jbe
ja
push
scas
cmp
sbb
pop
test
jno
(bad)
xchg
aam
adc
bound
ret
ins
mov
aam
enter
sbb
dec
or
daa
mov
cmp
jge
dec
adc
ret
movs
dec
inc
repnz
leave
mov
test
and
push
aad
pop
rcr
rcl
xor
lods
dec
rcl
mov
pop
outs
mov
xor
ins
in
sar
and
xchg
addr16
jo
in
les
arpl
(bad)
or
xchg
mov
pop
dec
retf
mov
cmp
dec
adc
(bad)
fsubr
lods
push
pop
mov
test
sub
push
pop
sub
jnp
mov
mov
push
retf
lods
retf
js
pop
add
imul
movs
sbb
pop
sti
arpl
arpl
sub
mov
sbb
lods
add
and
outs
call
lods
hlt
push
out
xlat
xchg
jg
pop
(bad)
std
in
and
popa
push
(bad)
stos
mov
add
int
xchg
push
pop
in
push
test
xor
rcr
xor
out
loope
mov
rcr
sar
test
pop
and
pop
fidiv
mov
push
sub
bound
adc
call
gs
icebp
jecxz
jnp
bound
loop
jle
mov
jbe
push
je
pop
stc
push
stos
or
sahf
addr16
fist
jmp
xor
cmp
out
loopne
loope
jge
cmp
cdq
cmp
ss
push
jmp
pop
aam
mov
aas
jmp
shl
push
add
ins
mov
push
jle
fstp
push
fs
push
cmp
pop
jb
and
test
rcl
leave
inc
in
mov
mov
dec
mov
aad
push
jl
aaa
rcr
jnp
sub
fdivrp
cmp
int3
cmp
jle
stc
dec
retf
js
mov
mov
jbe
sub
movs
test
sbb
pop
or
call
js
pop
js
add
cdq
fwait
xor
sub
repnz
and
cmp
ja
test
fld
mov
(bad)
cmc
pop
xchg
sub
sbb
adc
mov
xchg
hlt
jmp
call
pop
mov
out
mov
xchg
pusha
mov
hlt
aad
dec
les
lods
sbb
or
lahf
xchg
dec
fnsavew
mov
pop
xchg
je
sbb
mov
mov
adc
test
ret
pusha
enter
add
cmc
(bad)
pop
lods
xor
rcr
outs
mov
jo
(bad)
aas
xchg
pushf
outs
mov
paddb
xchg
mov
mov
lds
leave
cmp
cld
out
pop
dec
or
ror
dec
hlt
add
dec
enter
dec
push
mov
jl
sub
jae
rol
mov
test
or
push
adc
inc
or
daa
(bad)
jle
cmp
ficomp
in
cmps
and
js
mov
jne
pop
and
into
leave
cmp
js
ja
movs
pop
mov
iret
cmp
xlat
mov
retf
pop
pusha
dec
jo
xlat
sbb
ins
and
fstp
dec
rcl
and
sbb
push
push
call
(bad)
pop
out
(bad)
ins
popf
sub
fstp
push
push
ins
jbe
pop
icebp
ss
cmp
mov
or
mov
pop
adc
ret
sub
cmp
mov
enter
push
(bad)
outs
add
call
and
inc
xchg
call
ins
data16
cs
(bad)
ret
outs
mov
mov
or
xchg
adc
adc
addr16
addr16
xchg
push
push
jmp
or
cmp
mov
aam
fcomp
es
dec
mov
shl
add
add
cmps
popa
leave
stos
sbb
mov
movs
adc
xchg
mov
and
cmps
cmp
dec
jns
data16
sahf
fstp
fxch
mov
shl
add
ss
scas
int3
adc
adc
mov
inc
dec
jge
js
xor
inc
(bad)
mov
std
int
(bad)
xchg
jbe
mov
mov
imul
xor
mov
iret
sbb
jno
xchg
shl
xchg
or
js
lods
and
(bad)
adc
je
(bad)
pop
add
xchg
icebp
daa
cmp
and
enter
jae
retf
std
mov
sub
cmps
std
ret
mov
push
clc
punpckhwd
into
sbb
inc
adc
sub
js
xor
(bad)
stc
or
mov
mov
popa
push
jl
cli
mov
bnd
xchg
adc
test
jg
out
pop
fild
adc
and
outs
call
ja
cmp
std
pop
cmp
in
retf
push
jo
sbb
lock
inc
dec
push
mov
lods
imul
neg
ds
loop
addr16
inc
or
(bad)
ror
push
cmp
jae
repz
xchg
daa
xchg
cmp
fist
xor
xchg
fadd
sbb
pop
fldcw
fsubr
jns
xor
dec
sahf
jnp
or
mov
lds
mov
popf
rcl
sub
into
aad
ins
(bad)
repnz
dec
jae
pop
out
or
data16
outs
fistp
push
test
or
adc
fisttp
xor
pop
rol
dec
addr16
aam
mov
jns
adc
(bad)
out
call
and
mov
or
dec
push
add
cmp
and
add
fwait
add
dec
sbb
mov
sbb
sbb
xchg
mov
dec
enter
inc
scas
movs
sub
jae
imul
pop
jp
inc
bound
nop
test
aad
xchg
(bad)
jmp
sub
jo
popf
pop
inc
retf
xor
mov
bnd
mov
adc
push
lock
pop
mov
mov
sbb
add
test
clc
xchg
add
mov
sub
jmp
lea
jo
(bad)
pop
jns
xor
adc
cmc
jmp
pop
test
dec
lods
mov
xchg
xor
js
adc
dec
cmps
imul
inc
and
mov
test
adc
rcl
lea
movs
(bad)
jo
mov
sbb
push
push
ins
stos
or
outs
mov
pop
lods
sahf
pop
or
jl
push
sti
imul
int
enter
outs
add
mov
rcr
scas
mov
pop
xchg
(bad)
ror
nop
dec
push
mov
and
dec
cmp
aas
sbb
mov
clc
add
mov
adc
mov
in
jmp
sub
push
imul
rol
into
aaa
jmp
push
les
cld
mov
mov
ins
test
les
aad
shr
push
jp
and
pop
test
retf
mov
(bad)
scas
sahf
and
and
loope
movs
imul
sbb
and
inc
dec
adc
call
push
lds
in
cmp
inc
push
dec
fsubr
movs
and
sbb
xchg
repz
xchg
scas
xchg
loope
add
mov
fist
cmp
mov
sub
pop
ret
imul
mov
dec
popa
cmps
addr16
xchg
in
aas
bound
pop
mov
dec
cld
and
push
test
xchg
dec
(bad)
retf
stos
test
push
sbb
das
cld
fstp
xlat
rcl
inc
shl
dec
aad
movs
imul
pop
ds
cmp
cli
scas
and
out
jns
mov
shr
jl
popf
dec
and
dec
mov
mov
clc
fisubr
jge
xchg
in
mov
and
mov
nop
lahf
hlt
ret
xchg
dec
pop
add
or
(bad)
loope
imul
sub
addr16
push
frstor
push
rol
cli
and
jbe
push
das
arpl
add
addr16
xor
jae
xlat
sbb
jbe
sub
pop
int
mov
in
add
dec
addr16
xor
inc
imul
and
arpl
jno
addr16
xor
(bad)
and
ror
imul
mov
ds
je
xchg
sub
jge
jne
jl
dec
adc
inc
lea
jb
fcmove
fimul
mov
inc
cs
int
clc
sbb
call
jp
pop
ret
(bad)
fsubr
jmp
test
out
pop
pop
or
adc
(bad)
push
cmp
mov
in
cmps
ss
sub
out
cwde
xchg
xchg
gs
push
dec
std
fimul
dec
xchg
push
fistp
adc
and
dec
cs
and
sub
push
push
jns
push
in
mov
jnp
stos
xchg
movs
cmp
dec
cmp
mov
mov
in
fadd
inc
xchg
jo
dec
aas
or
movs
push
push
lods
cwde
xlat
xchg
pop
in
dec
ins
mov
mov
or
jno
xchg
call
xadd
(bad)
pop
push
test
data16
je
fs
mul
push
push
popa
add
dec
cmp
sbb
jne
dec
cdq
sbb
in
out
outs
aad
sbb
retf
cmp
retf
sbb
xchg
out
dec
cmp
xchg
shl
mov
(bad)
push
xor
sub
jecxz
imul
and
cli
or
or
mov
and
cli
rcl
cmp
xor
mov
leave
in
arpl
adc
iret
inc
shl
(bad)
in
les
ficomp
std
fisttp
cmp
or
push
test
sbb
popa
add
stc
pop
pop
pushf
xor
fs
jb
xor
mov
push
shr
jp
and
jns
sub
adc
dec
sbb
cmps
cli
mov
arpl
mov
jmp
dec
adc
mov
jle
or
inc
xchg
je
cmp
stc
dec
ins
nop
cmc
xor
fcmovnu
test
inc
cli
adc
sub
adc
cmps
mov
mov
and
lea
xor
repnz
mov
in
fwait
cmp
push
sbb
push
test
push
aad
xor
js
movs
loop
imul
push
fadd
das
sbb
retf
fs
dec
mov
les
aam
dec
add
ficomp
jecxz
retf
jne
outs
adc
mov
xor
push
das
repnz
jl
cmp
addr16
xchg
pop
inc
ins
xchg
dec
daa
cmp
ja
push
mov
fs
inc
xchg
xlat
mov
push
push
ins
repnz
out
or
jbe
arpl
ja
cmp
jmp
cld
cs
adc
std
inc
(bad)
lea
es
stos
je
jmp
stos
je
pop
jb
hlt
mov
iret
inc
icebp
cmps
cmp
sub
fcom
shl
out
cdq
popf
mov
add
in
jne
mov
popa
xchg
xor
sbb
(bad)
in
mov
push
outs
push
mov
into
gs
out
push
lods
mov
aas
fidiv
add
sub
out
(bad)
xchg
daa
pop
pop
xor
das
adc
addr16
adc
push
in
mov
mov
pop
scas
pop
jp
push
pop
scas
loope
movs
inc
jb
and
aam
sar
dec
je
dec
seta
lahf
loope
mov
cmp
xchg
and
jmp
call
mov
add
xor
ss
mov
xor
ds
mov
rol
xchg
and
dec
mov
cmp
js
js
movs
dec
mov
jp
mov
mov
inc
dec
in
adc
dec
xchg
out
test
repz
mov
xor
mov
scas
mov
mov
icebp
jbe
sub
in
ficomp
bsf
dec
xor
call
cmp
in
not
dec
sub
mov
jb
push
xchg
and
jl
retf
adc
inc
ret
ins
pop
sahf
shl
jle
gs
in
or
scas
bound
je
jp
mov
push
mov
push
and
cmp
imul
jmp
ret
popa
add
mov
(bad)
shr
(bad)
aad
in
push
xchg
aad
es
or
ins
xor
scas
mov
or
xor
iret
popa
test
std
or
push
mov
push
cmp
je
(bad)
pop
in
jns
push
cmps
xor
outs
aaa
setge
es
(bad)
sbb
mov
mov
out
push
add
call
mov
push
fldcw
sbb
cmp
cmp
aaa
adc
inc
add
jnp
ret
adc
test
push
jbe
pop
inc
xchg
arpl
(bad)
shl
movs
jg
mov
xchg
sbb
or
xlat
nop
adc
pop
dec
push
mov
cmps
lahf
ss
test
dec
test
les
add
into
fiadd
or
pop
or
xor
sub
sub
daa
fidivr
push
cmc
pop
dec
xor
push
movs
ja
and
pop
movs
aam
out
or
std
add
push
mov
arpl
xchg
test
sub
cmp
pop
mov
ficomp
test
inc
sti
sub
nop
pop
lods
push
pop
ins
out
and
arpl
inc
push
pop
cli
mov
xchg
adc
shl
mov
xor
jmp
fsub
fidivr
mov
sub
ret
loopne
push
sub
add
push
rcl
cmp
adc
jg
je
cmps
dec
lods
call
xchg
xor
cmp
sbb
movs
sub
out
or
out
(bad)
xchg
push
popf
or
jbe
mov
mov
sbb
je
push
and
loope
loope
lea
imul
in
(bad)
or
xor
repnz
mov
and
imul
es
xor
dec
cs
or
pop
clc
aam
mov
jmp
push
div
iret
loopne
pop
in
(bad)
(bad)
push
sub
ins
dec
movs
shl
sbb
out
(bad)
jmp
pop
inc
cs
mov
cmp
dec
mov
sbb
dec
mov
scas
sbb
repz
or
bound
scas
or
xor
inc
mov
mov
mov
cmps
adc
test
(bad)
inc
sbb
gs
sub
mov
mov
adc
cdq
jge
inc
sbb
pop
mov
sbb
enter
mov
call
stc
mov
pop
sub
mov
xchg
jnp
test
mov
setl
mov
repz
sub
mov
lahf
sar
mov
loope
jb
mov
push
aam
aaa
scas
xor
scas
xor
lahf
popf
mov
mov
jge
jns
stos
jge
cmp
dec
push
jbe
sbb
bndstx
test
push
int3
(bad)
div
div
lds
mov
shr
fmul
mov
sbb
out
adc
and
pop
cli
gs
out
movs
jne
mov
in
cld
jo
or
in
fistp
loopne
mov
mov
inc
rcr
xor
sub
test
xchg
icebp
mov
inc
and
std
mov
scas
mov
nop
dec
push
adc
cld
retf
aad
push
sbb
mov
imul
sub
adc
and
call
push
outs
mov
(bad)
xchg
popa
inc
pushf
ins
mov
bswap
nop
adc
imul
daa
jmp
es
push
bndstx
jl
xchg
popa
and
sbb
test
add
and
mov
fadd
xor
in
xchg
shr
and
outs
xchg
jp
std
cmp
mov
leave
mov
xor
lods
(bad)
(bad)
adc
pop
mov
in
jo
jmp
scas
call
pop
lods
js
into
(bad)
iret
adc
add
adc
pusha
out
cli
call
jns
ret
push
mov
xor
jnp
psllq
or
pop
jno
and
(bad)
fcom
mov
mov
xchg
cmp
or
out
cmps
adc
outs
lahf
(bad)
sbb
or
mov
cld
push
fs
and
das
xchg
mov
sbb
popf
or
cmp
ror
mov
bound
mov
ss
or
je
mov
xor
cmps
push
push
or
(bad)
mov
shl
pop
aas
mov
mov
sub
popa
mov
push
aas
jle
leave
jmp
sbb
fbstp
daa
pop
fsubr
fidiv
shl
scas
ficomp
mov
icebp
push
pop
fistp
leave
or
cmc
push
jl
sbb
xchg
lods
ficomp
popa
inc
ja
scas
or
lahf
sbb
add
cld
xor
cmp
hlt
rcr
and
icebp
shufps
cli
ret
popa
je
jae
inc
imul
mov
test
adc
mov
inc
or
and
or
add
sbb
jmp
pop
inc
mov
movs
fmul
test
xchg
fbstp
xchg
pop
add
aas
lahf
mov
jo
lds
clc
or
retf
icebp
xchg
mov
out
add
jp
inc
dec
and
fidiv
dec
add
sub
call
clc
(bad)
jle
sbb
or
scas
(bad)
cs
jmp
cmp
or
dec
mov
pop
xor
lods
loop
dec
sbb
lea
sbb
loopne
mov
xor
adc
mov
jnp
aad
inc
sar
sbb
cli
scas
inc
retf
lods
push
test
lods
mov
repz
cs
repnz
mov
push
and
mov
gs
push
sbb
mov
cmps
and
aad
vcvtsi2ss
shl
clc
imul
cwde
or
xor
hlt
and
mov
adc
fidiv
in
mov
std
mov
in
add
mov
in
movs
jge
xchg
inc
sti
pop
xor
jnp
je
ja
pop
lods
push
mov
dec
jnp
jnp
jae
and
sub
scas
jge
fs
or
fistp
mov
and
inc
add
sub
or
ja
pop
das
pop
adc
imul
test
ficomp
dec
push
and
loope
cmps
ret
sahf
push
daa
inc
sbb
nop
adc
in
test
inc
ds
not
inc
fistp
xor
adc
mov
add
movs
hlt
inc
data16
dec
(bad)
adc
pop
cmps
fimul
jge
movs
cmp
push
pop
adc
mov
lock
push
pushf
mov
mov
mov
jp
scas
xchg
jns
int
out
movs
push
sbb
jae
xor
das
inc
add
mov
mov
nop
(bad)
gs
inc
pop
push
pop
fisub
push
sub
dec
jp
lods
inc
adc
mov
(bad)
sub
mov
ja
test
push
fadd
inc
jae
call
push
dec
stos
inc
push
xchg
in
and
sub
mov
sub
push
fsubp
(bad)
lahf
dec
test
aad
push
jne
outs
jle
adc
aaa
retf
pop
stos
out
cld
mov
inc
jmp
push
jne
cmp
es
dec
(bad)
arpl
dec
cmp
aas
cli
xor
mov
add
ss
das
daa
push
jl
nop
push
sbb
push
in
mov
push
cmp
jmp
out
(bad)
ror
loope
adc
ret
jge
or
push
cmc
and
sub
jno
pop
xchg
push
jge
and
ds
xor
pop
ret
inc
sbb
retf
push
mov
jbe
add
(bad)
adc
add
mov
int
push
retf
xchg
sub
mov
mov
aad
xlat
add
adc
push
mov
or
and
cmp
leave
jge
ret
sar
xchg
daa
es
cli
frstor
fnstenv
ss
in
loopne
fidivr
addr16
retf
out
inc
mov
test
div
aam
not
outs
xor
mov
xchg
sbb
mov
ins
jb
aad
stos
mov
adc
loope
rol
into
cmp
arpl
jno
xlat
outs
adc
loop
pusha
pop
xchg
mov
xchg
push
cmp
fld
je
psubsw
mov
cmp
mov
mov
sub
dec
pusha
add
dec
call
jnp
ins
cli
xor
lods
fisub
jbe
pause
adc
not
(bad)
or
add
ret
retf
sbb
dec
adc
inc
add
jnp
in
pop
mov
cli
sar
leave
mov
cmps
sbb
cli
ret
push
jl
es
adc
push
stos
test
add
inc
mov
cmp
jne
mov
pop
jle
push
mov
mov
js
xor
in
nop
mov
dec
call
mov
call
jae
jns
imul
call
xor
sti
outs
stos
repnz
pop
push
into
loopne
sub
int
fwait
call
stos
fldcw
push
and
in
xor
xlat
adc
push
cdq
add
(bad)
cmp
xchg
dec
xchg
xor
ds
imul
(bad)
in
xchg
dec
inc
repz
repz
pop
xchg
mov
or
test
sbb
pop
or
pop
test
pop
mov
jae
sub
jo
pusha
jmp
jbe
cmc
xchg
push
out
out
sbb
or
fwait
push
scas
psrad
add
or
xchg
stos
and
ret
sbb
inc
jle
idiv
fdiv
pop
mov
pop
cdq
in
jae
sub
not
(bad)
in
call
adc
jge
mov
push
out
mov
mov
test
outs
shr
or
fwait
push
loope
jp
aas
mov
or
out
mov
cmp
fistp
in
mov
movs
cmp
jno
imul
movs
sbb
rol
jl
push
push
rcl
pop
pop
push
pop
mov
adc
mov
arpl
je
not
or
cdq
and
fsub
dec
(bad)
out
sti
mov
nop
lahf
idiv
data16
mov
push
ja
dec
arpl
push
adc
or
xor
jnp
mov
bound
cli
je
jmp
dec
fistp
mov
pop
leave
xchg
sbb
in
into
sbb
mov
adc
adc
jo
add
leave
gs
push
test
or
gs
jno
push
(bad)
call
mov
sti
sbb
aam
sbb
xchg
push
cmp
mov
mov
rcl
cld
and
adc
sbb
push
addr16
(bad)
sbb
repz
or
stc
add
lods
and
fldcw
imul
cmc
out
or
push
and
sti
sbb
repnz
mov
add
cld
int
pop
fdiv
test
ins
sub
enter
movs
popf
fimul
cmp
(bad)
into
neg
lods
and
rcr
ss
push
mov
or
adc
mov
dec
ficomp
mov
adc
pop
or
mov
js
push
pop
inc
xchg
(bad)
ficomp
pop
pop
and
push
(bad)
jmp
xchg
fstp
or
movs
call
mov
and
test
add
mov
call
mov
pop
xlat
movs
rol
mov
stos
jbe
pop
mov
int
fcomp
sti
outs
fwait
sub
lods
imul
or
movs
dec
dec
shr
mov
cdq
jmp
push
retf
pop
inc
dec
inc
int
ret
xlat
xchg
push
cmc
fs
mov
ja
pop
in
mov
scas
pop
mov
rol
add
push
sub
fstp
sti
div
retf
(bad)
outs
push
jbe
cmp
cdq
push
test
mov
lock
sbb
jns
xchg
add
jno
mov
stos
shl
jnp
shl
cmps
stos
mov
test
pop
loopne
xor
or
pop
out
mov
mov
int3
in
repnz
sub
outs
ror
call
mov
push
pop
xor
sbb
cmp
mov
aam
out
xchg
mov
pop
rol
(bad)
in
push
sub
not
pop
sub
mov
rol
cmp
or
and
push
inc
mov
(bad)
(bad)
movs
jae
aam
mov
cmp
out
shl
jae
pop
data16
push
loopne
push
mov
mov
xchg
mov
xor
cmp
xor
sbb
test
loop
jne
xlat
stc
pop
xchg
cmp
mov
lock
packsswb
cmp
mov
aad
dec
pop
in
or
mov
sahf
imul
jle
nop
js
dec
mov
add
stos
cmp
lods
call
and
div
popa
es
mov
fsubr
adc
ror
sub
and
loopne
mov
mov
inc
jae
enter
xor
sub
call
(bad)
imul
jne
in
(bad)
fcomp
in
add
sub
jns
jmp
loope
xchg
stos
jecxz
mov
pop
push
fbstp
(bad)
xchg
pushf
sti
pop
scas
scas
xor
and
ss
cdq
sbb
mov
adc
das
dec
aam
test
mov
mov
mov
mov
or
xchg
sub
leave
push
fsubr
mov
push
scas
xchg
stos
aas
mov
inc
fsub
cwde
inc
gs
or
cmp
inc
jge
adc
cli
fst
pop
xlat
icebp
es
jbe
xor
es
push
ds
dec
mov
ret
dec
cmps
gs
dec
or
jae
fsub
movs
xchg
test
addr16
cli
out
inc
pop
loopne
inc
pop
mov
ins
ss
sbb
fist
fcomip
scas
bound
pop
add
push
xchg
retf
adc
call
jne
xor
and
sub
pop
imul
and
das
rep
mov
sbb
jo
push
mov
cmp
xor
adc
mov
adc
dec
dec
test
nop
add
lahf
xchg
shl
cmc
sub
jno
push
xlat
into
ins
mov
adc
jl
push
add
ficomp
aad
jmp
cmp
sahf
cld
movs
dec
or
lds
aaa
jge
sub
aam
test
cmps
dec
std
int3
xchg
call
fwait
or
fs
push
sub
cmp
add
test
in
pop
cmps
aad
fiadd
adc
push
and
cmps
inc
xchg
scas
shl
xor
xor
retf
ror
out
ret
or
ja
hlt
in
addr16
(bad)
jge
inc
sbb
cmp
inc
stos
mov
jmp
sub
(bad)
sbb
shr
or
int3
out
fadd
cmp
or
adc
sbb
movs
jg
in
push
call
inc
pop
movs
movs
add
ret
in
in
xlat
sub
push
call
dec
sar
mov
inc
mov
xor
mov
cli
jmp
mov
or
dec
fadd
ja
js
adc
movs
loope
pop
mov
hlt
push
and
xor
lahf
dec
or
xchg
add
inc
mov
add
data16
push
pop
push
fidiv
enter
cmp
dec
jnp
aam
mov
mov
xchg
sbb
dec
inc
dec
push
popf
cmp
cmp
inc
mov
jl
lods
cmc
xlat
stos
jl
movs
cdq
stos
cld
push
and
jae
add
xor
jl
dec
mov
neg
inc
in
repnz
adc
xor
ins
(bad)
mov
dec
sbb
jne
scas
movs
push
jl
loopne
in
push
aas
pop
mov
push
pop
cmps
scas
mul
bound
or
fs
or
or
jb
sbb
int
push
shl
fwait
adc
cmp
push
xchg
bound
xor
int
arpl
call
xchg
nop
es
sbb
sub
pop
mov
js
test
shl
cs
sub
jae
jecxz
dec
lahf
mov
adc
mov
mov
into
add
add
out
popf
loop
(bad)
int3
push
mov
out
cld
mov
ins
xchg
dec
xor
push
sti
sub
cmps
rol
xchg
adc
inc
mov
nop
into
inc
dec
(bad)
add
pop
xchg
inc
retf
jmp
pop
jae
das
iret
mov
aaa
scas
sbb
mov
adc
(bad)
mov
pop
cli
fdivr
and
pop
jl
lahf
hlt
sbb
xor
and
mov
add
jecxz
fst
add
sbb
inc
sub
dec
sbb
or
cmp
fisttp
pop
sub
mov
enter
and
shl
xchg
xor
sub
jns
sbb
lahf
out
pop
movntps
stos
push
push
scas
cmps
(bad)
cmp
out
popf
(bad)
xchg
ins
out
add
pusha
fstp
mov
sub
enter
movs
push
loope
add
adc
mov
xor
stos
(bad)
loop
cdq
jnp
lea
cmp
pushf
test
add
stc
sub
add
mov
push
(bad)
dec
je
fdivrp
mov
fwait
outs
jae
fistp
jmp
in
and
cmp
jo
lods
and
xor
cmp
neg
xor
adc
neg
cmc
leave
sub
int
xchg
lahf
xchg
sar
shl
xchg
fcom
js
xchg
ins
out
and
jecxz
xor
sbb
push
cmps
xchg
xlat
and
retf
mov
retf
(bad)
gs
mov
rcr
mov
mov
fst
ret
or
arpl
outs
push
jb
lea
mov
ja
jmp
out
shr
(bad)
outs
data16
call
or
push
imul
xchg
aas
sbb
jo
mov
dec
xor
lds
ss
sbb
dec
jne
test
icebp
mov
mov
pop
dec
in
xchg
push
mov
out
push
mov
stos
jmp
aad
mov
mov
into
and
(bad)
aam
das
fcom
or
loope
xchg
in
stc
je
push
pop
daa
jns
xchg
lock
nop
jl
repz
test
sahf
icebp
push
push
jne
(bad)
hlt
add
xchg
imul
inc
push
arpl
mov
jae
fs
bound
(bad)
outs
push
mov
ret
sar
mov
out
es
xchg
aad
ja
and
pop
aad
enter
pop
pop
mov
sbb
jp
lahf
inc
push
cmps
jne
fadd
or
dec
jb
jge
mov
jne
add
lock
pop
inc
mov
sub
xor
xchg
sbb
pusha
fdiv
xchg
jae
fild
in
mov
movntq
inc
cmp
js
add
xchg
inc
retf
aas
ins
cmp
add
mov
cmp
jmp
jp
or
movs
(bad)
(bad)
cwde
bound
imul
adc
(bad)
fdiv
jmp
jg
add
mov
call
xchg
stc
pop
in
push
fdivr
(bad)
(bad)
jge
dec
lods
add
fsub
jmp
jmp
mov
dec
lock
jnp
xor
imul
lahf
gs
cmp
cmps
cmp
addr16
popf
(bad)
or
out
aad
jle
sub
cdq
gs
rcl
rol
adc
dec
pop
dec
inc
(bad)
rcr
adc
cmp
arpl
mov
cwde
mov
stos
mov
jmp
ss
out
cmps
xor
add
mov
ret
(bad)
retf
jne
mov
in
inc
stos
scas
lods
fbld
pop
xor
data16
cmc
lds
push
(bad)
out
mov
sahf
xchg
ja
pause
xor
and
jl
cmp
adc
out
xor
scas
out
jno
daa
lea
adc
sub
jecxz
dec
add
sub
mov
or
adc
jno
imul
out
adc
imul
xchg
inc
mov
xchg
nop
cmp
jg
jo
mov
shl
or
mov
sbb
and
pop
out
adc
push
je
pop
dec
movntps
aaa
lds
loop
dec
iret
int3
and
mov
jbe
stc
xor
imul
mov
pop
adc
sub
test
xor
scas
mov
cmp
pop
add
test
in
cs
in
or
mov
imul
jl
xchg
add
js
mov
xor
mov
idiv
xor
inc
xchg
lock
(bad)
pminsw
in
jl
pop
cmp
scas
push
dec
repnz
jmp
stc
mov
or
into
cdq
or
push
fmul
and
pop
(bad)
fild
mov
rcl
stc
in
mov
and
ins
and
arpl
sbb
pop
js
data16
popf
jg
and
mov
and
jge
pushf
in
ins
xchg
aam
mov
cld
jo
pop
xchg
js
jno
push
inc
jg
in
daa
inc
add
lods
jmp
daa
int
xchg
dec
pop
daa
outs
add
and
in
pop
pusha
add
mov
fld
sbb
dec
add
lea
sbb
mov
or
pop
mov
(bad)
lods
nop
adc
loop
push
push
xchg
sbb
mov
dec
stos
enter
fmul
out
sub
cmps
mov
mov
and
jnp
and
les
(bad)
shr
mov
mov
retf
pop
jle
mov
xor
(bad)
fimul
inc
bound
xor
aaa
adc
xchg
jns
cmp
or
adc
jecxz
idiv
call
inc
xor
cli
mov
cld
sub
out
mov
mov
add
mov
xor
fsub
cmp
push
inc
sbb
sub
ins
push
sub
xchg
jmp
cmp
sub
int3
in
and
jl
push
stc
ret
pusha
dec
dec
xlat
xchg
mov
push
sub
sar
xchg
arpl
sub
in
arpl
ret
cld
ret
mov
push
push
jns
xchg
push
scas
arpl
inc
sub
dec
std
pusha
minps
mov
jmp
loopne
ret
sub
dec
and
and
xchg
jne
inc
and
add
loopne
mov
int3
jnp
(bad)
xchg
sbb
mov
ror
cmp
test
xchg
cmp
and
rcr
jmp
loope
xchg
adc
adc
pushf
dec
and
and
pop
xchg
mov
mov
shr
icebp
inc
cmc
and
jns
es
rol
imul
das
inc
and
repnz
xchg
push
fst
pusha
ret
mov
cmp
cmps
scas
push
pop
jo
add
(bad)
je
add
xor
sar
inc
retf
jle
pop
xchg
jg
cmps
fldenv
pusha
mov
lods
movs
mul
or
xchg
inc
es
push
and
dec
sbb
js
dec
cmp
arpl
aam
vpavgw
cwde
pop
xchg
mov
mov
pop
push
movs
mov
pop
jo
dec
aas
jnp
cmp
cld
clc
add
sub
sub
dec
mov
jae
mov
sar
aad
retfw
sub
push
adc
test
jmp
stc
xchg
cmp
fcmove
call
int3
cdq
push
imul
sub
ror
arpl
rcr
mov
push
mov
jb
jo
cld
test
add
loopne
popa
call
or
sub
ja
mov
fbstp
xchg
xchg
dec
mov
test
jbe
lods
mov
pop
fcomi
(bad)
sbb
cmp
outs
imul
mov
(bad)
mov
or
cmps
je
mov
sahf
pop
pop
outs
mov
movs
std
popf
fbld
pushf
jmp
popf
sub
aas
add
ret
and
ret
add
pop
mov
and
push
(bad)
popf
jne
mov
scas
(bad)
js
xor
push
stos
(bad)
inc
dec
push
cli
cdq
pop
mov
ret
repnz
xchg
movs
push
add
inc
int3
jb
xor
test
lahf
(bad)
pusha
test
pushf
cmps
cmps
jo
pop
out
test
push
aam
aaa
lock
or
jno
sti
sub
xchg
test
fst
nop
jne
cld
das
stos
push
cmp
dec
retf
sbb
and
push
(bad)
je
bound
lea
mov
mov
dec
(bad)
in
push
js
fwait
cmps
cli
mov
sbb
aam
rcr
ss
sbb
xchg
call
dec
jp
push
mov
les
stc
inc
leave
pop
mov
das
sub
neg
in
gs
jge
repnz
leave
fld
cmp
cmc
fstp
and
mov
mov
repz
sub
mov
and
nop
mov
clc
fistp
cmp
ins
es
ret
push
fmulp
mov
jb
repnz
clc
lahf
cmp
out
fadd
mov
mov
jl
mov
fs
ret
rcl
jg
cmp
xchg
jnp
out
inc
scas
add
pop
ror
ins
mov
jl
mov
rol
inc
add
out
cmps
popa
dec
sub
adc
test
push
xor
cmps
ret
dec
stos
add
sbb
mov
jae
inc
jg
xlat
and
mov
icebp
pop
lahf
adc
xor
(bad)
arpl
sub
js
cs
push
push
pop
bound
out
shl
ja
out
(bad)
call
and
outs
ror
outs
imul
dec
(bad)
ret
aaa
js
pop
jmp
sbb
or
jge
mov
outs
fnstcw
or
xlat
loopne
and
pop
or
sbb
fs
je
mov
(bad)
ffree
fs
dec
push
pop
fstp
int
xor
sub
dec
or
lock
pusha
int3
cmp
push
nop
mov
repz
xchg
(bad)
sahf
dec
int3
inc
or
ins
mov
push
mov
in
loopne
inc
call
push
(bad)
mov
pop
pushf
xchg
cdq
inc
or
aas
leave
jl
ret
jbe
fwait
mov
test
jg
sbb
out
fcom
dec
push
aad
push
sub
fxtract
pushf
cmp
mov
dec
adc
popa
js
pop
inc
adc
cmp
pop
xor
fadd
out
cmps
mov
mov
mov
cdq
and
into
fs
mov
mov
jge
arpl
sub
in
jecxz
dec
add
sub
and
add
ffreep
(bad)
(bad)
jmp
pop
rcl
sub
outs
mov
dec
sbb
mov
das
ins
jl
dec
mov
call
xchg
cmps
popa
pop
lea
iret
loop
xor
xor
popa
jmp
pop
into
das
popf
ja
add
and
mov
(bad)
push
ja
mov
mov
test
cmp
add
mov
jge
jle
movs
cs
icebp
dec
in
jbe
popf
jmp
call
jmp
fist
xchg
push
sahf
cdq
mov
call
cmps
imul
mov
icebp
outs
add
push
stc
in
dec
or
int
xchg
lods
ret
sbb
jae
or
jecxz
popf
push
retf
arpl
jnp
int3
mov
or
fwait
and
inc
jae
(bad)
daa
sti
and
add
retf
les
cwde
lahf
imul
mov
enter
push
les
loope
mov
fnsave
or
push
push
pop
dec
nop
inc
cmp
pop
mov
adc
sbb
mov
test
das
or
jecxz
adc
mov
jo
dec
add
pop
out
dec
mov
mov
xor
mov
sub
dec
mov
xchg
cld
push
cmp
arpl
add
adc
dec
xchg
retf
or
push
cmp
in
test
ja
mov
jnp
mov
xchg
jns
jbe
repz
mov
ret
jl
xor
mov
sahf
jl
sub
xchg
push
jne
lds
(bad)
cld
shl
pop
out
mov
adc
mov
jb
dec
dec
sub
add
dec
jecxz
push
fsubp
(bad)
pop
push
outs
jae
popf
xor
jno
adc
cmp
pop
cmps
xchg
cwde
loope
and
ret
fstp
ins
ins
(bad)
movs
xchg
push
push
jg
cmp
fcomp
not
imul
lods
fmul
add
sahf
rcr
pop
xchg
push
or
mov
push
sub
call
and
adc
sub
inc
in
add
push
in
rol
jecxz
jmp
mov
jecxz
in
pop
retf
mov
mov
adc
enter
push
push
mov
jno
(bad)
xchg
aad
xor
or
imul
cmp
stc
int3
loop
sbb
repnz
sub
jmp
lods
mov
ret
add
mov
sbb
sbb
rcr
dec
push
cwde
call
jo
inc
ss
dec
aad
shl
adc
jmp
ret
xchg
into
mov
nop
xchg
scas
lahf
jbe
stc
and
fsubr
mov
lds
jns
call
fcmovbe
cmc
mov
add
add
xchg
lea
inc
scas
sti
call
cmp
fidivr
and
fidivr
call
cwde
push
or
(bad)
nop
push
addr16
fst
(bad)
(bad)
ficomp
call
repnz
and
std
pop
cmp
adc
pop
aad
retf
pushf
mov
fsub
cli
cmc
and
mov
into
push
sbb
ins
icebp
fnstsw
or
scas
mov
shl
cdq
sub
std
pop
mov
pusha
rcl
cmp
dec
push
push
retf
pop
fdivrp
mov
in
xchg
jmp
int
ins
dec
(bad)
std
adc
mov
rcl
jns
nop
dec
push
mov
je
xchg
test
mov
pop
mov
out
sbb
(bad)
or
hlt
aad
cmc
pop
mov
or
pop
scas
sbb
fdiv
jle
push
lods
xchg
mov
inc
dec
dec
mov
pop
out
sub
push
movs
add
sbb
pop
data16
push
cmp
mov
jp
retf
scas
fimul
adc
and
shl
and
outs
es
idiv
outs
jb
xchg
sub
fiadd
xor
xor
or
hlt
ret
std
xchg
call
pop
call
(bad)
inc
and
loopne
pop
mov
fsubr
mov
push
(bad)
pop
ds
xor
pop
dec
js
push
and
cmp
mov
adc
xchg
jae
sub
lods
fmul
pop
mov
add
add
cmp
xor
inc
adc
rol
jl
lods
jmp
cmps
pop
mov
cmp
jmp
(bad)
(bad)
jns
xchg
sub
and
xchg
bound
and
inc
adc
call
clc
aam
mov
lea
stos
add
pop
push
imul
bound
dec
pop
shr
idiv
fwait
push
add
cs
add
gs
cmps
push
(bad)
mov
jecxz
sbb
hlt
dec
imul
imul
bound
mul
jbe
das
mov
stos
dec
add
mov
cli
mov
jnp
inc
shl
adc
mov
out
mov
and
sub
jbe
ja
xor
sub
cmp
adc
sbb
std
push
or
fistp
sub
mov
dec
out
aad
ror
xchg
sbb
cmc
pop
sub
mov
mov
dec
inc
mov
mov
xlat
das
cmps
mov
ja
cld
and
(bad)
call
dec
repnz
or
or
fst
imul
pop
ja
in
xor
inc
pop
sti
icebp
inc
aas
arpl
or
xor
or
push
jmp
fdiv
int3
or
and
fwait
call
stos
or
imul
out
cs
dec
cmp
cmp
je
jbe
inc
je
pop
data16
and
dec
mov
dec
addr16
in
mov
sbb
jmp
scas
add
out
jns
in
cmp
pop
ror
xor
das
outs
out
popa
lds
sub
mov
mov
test
jp
je
sti
inc
xor
out
hlt
add
push
dec
int3
push
icebp
and
pop
lock
pusha
aad
add
mov
mov
sub
in
aas
dec
mov
and
pusha
sub
mov
add
cmp
xor
mov
clc
xor
sbb
loop
cld
outs
(bad)
mov
xor
hlt
mov
push
repz
repz
dec
stc
push
inc
inc
dec
dec
inc
or
loopne
jnp
test
frstor
js
call
mov
mov
retf
dec
mov
gs
mov
and
mov
mov
inc
lds
mov
pop
lahf
push
sub
arpl
shl
mov
jb
and
jmp
mov
mov
ret
add
cmp
inc
cmps
test
dec
cmp
jo
rcr
icebp
(bad)
sar
sahf
pop
adc
mov
pusha
jne
aaa
push
cmp
xor
and
xchg
shl
xchg
leave
mov
adc
mov
lea
clc
ins
hlt
mov
lods
push
in
div
sub
stc
mov
out
out
je
aas
loop
add
sahf
sbb
fld
or
shl
jbe
xchg
mov
pushf
pushf
push
inc
xor
add
js
mov
ds
or
imul
mov
pop
bnd
sub
shr
jle
push
mov
cwde
shr
add
cmp
or
(bad)
data16
cli
push
or
aam
stos
ins
xchg
adc
xor
cmp
mov
dec
mov
cs
xchg
aam
rcr
(bad)
nop
(bad)
or
dec
jne
jecxz
addr16
add
cwde
fst
in
sbb
in
mov
fistp
xchg
popf
stos
jb
icebp
push
clc
xor
stos
adc
xlat
xlat
or
pop
cdq
ins
fidivr
ds
pop
pop
lods
outs
push
enter
push
jns
jmp
adc
test
arpl
xor
sbb
dec
in
mov
xchg
jo
fwait
retf
push
aas
jl
lods
dec
mov
sbb
sbb
jnp
push
mov
xor
xor
xchg
dec
jnp
(bad)
(bad)
(bad)
ss
xor
pop
ja
stos
movs
mov
int3
inc
loope
jmp
jle
mov
call
fucomip
sub
xor
daa
sub
je
rol
imul
loope
fadd
sub
cmp
mov
mov
fs
jb
adc
mov
or
(bad)
jp
dec
push
add
test
fsub
out
in
dec
jl
shl
pop
and
stc
sub
lahf
jno
cld
xchg
sar
push
pop
hlt
ror
clc
or
movs
or
cld
jecxz
in
hlt
(bad)
adc
push
xor
or
lea
pusha
mul
ret
fcom
mov
push
dec
out
(bad)
outs
pop
adc
xchg
inc
jns
les
dec
pop
xlat
into
int
jle
cmc
pushf
sbb
sub
jne
mov
sahf
nop
ja
dec
icebp
in
popf
inc
sbb
fstp
fisubr
stc
fsub
cmp
adc
rcr
cmp
jp
pushf
(bad)
adc
pop
cwde
dec
mov
inc
lods
push
mov
cmp
sub
and
fwait
pushf
mov
add
in
into
pop
iret
repnz
jno
mov
lods
inc
bound
jmp
xchg
fld
movs
jg
in
(bad)
pop
mov
call
es
dec
int3
or
inc
cmp
adc
out
xchg
jns
adc
std
es
add
mov
mov
mov
dec
aad
dec
push
(bad)
fmul
and
rcl
mov
aaa
rol
lods
sbb
mov
or
enter
inc
loope
call
fadd
ror
stc
mov
out
outs
mov
inc
xor
into
inc
pop
(bad)
pop
cmp
movs
push
iret
ds
out
in
inc
pop
sub
js
adc
and
inc
dec
call
test
dec
push
fndisi(8087
daa
loopne
(bad)
and
jle
popa
fcmovnu
repnz
arpl
cld
imul
aas
mov
jae
lea
xor
bound
add
pop
xchg
pushf
sbb
pop
ja
mov
and
daa
mov
fwait
jmp
jmp
jecxz
dec
adc
fiadd
test
in
ds
jecxz
and
fisttp
mov
icebp
mov
xchg
stos
imul
adc
xchg
pop
adc
and
(bad)
fidivr
pop
(bad)
and
cmp
mov
sar
mov
iret
jnp
mov
mov
test
cmp
xchg
int3
cdq
jmp
push
loopne
dec
stc
popa
sar
add
cmp
sbb
and
jecxz
frstor
rcl
push
pop
fs
out
sbb
pop
inc
push
std
(bad)
sbb
popf
sbb
cmp
sub
aaa
call
sub
mov
jno
or
jbe
scas
retf
cmp
lds
xlat
jno
mov
push
pop
xchg
inc
leave
test
fwait
mov
push
xchg
mov
add
jl
jmp
xchg
xor
and
data16
retf
aam
pop
outs
cs
jmp
jns
xor
mov
jno
rcr
push
jl
(bad)
lods
movs
cld
je
mov
shr
in
push
sbb
cmova
ss
shl
hlt
leave
inc
das
adc
sub
imul
mov
adc
stos
xor
data16
pop
ins
dec
push
pop
stos
sub
outs
jo
es
xchg
sbb
dec
fisubr
maxps
xor
jg
jmp
jmp
dec
jg
pmulhuw
adc
push
adc
aaa
jno
add
(bad)
add
adc
nop
mov
adc
loop
gs
ror
mov
inc
mov
out
lods
sbb
mov
mov
xchg
xlat
jae
cmp
xor
adc
lea
mov
xchg
fistp
(bad)
adc
sub
ins
or
(bad)
xor
or
inc
das
jb
jecxz
xor
dec
imul
add
jb
lods
cmps
cmps
lds
inc
cmp
add
cdq
sub
pushf
sbb
lods
shl
and
dec
(bad)
jp
adc
sub
push
cld
jle
(bad)
ja
push
mov
push
push
sub
rol
xchg
xchg
dec
leave
ss
inc
pop
pop
jle
out
jo
dec
es
aas
jno
(bad)
in
mov
(bad)
movs
idiv
mov
int
add
sar
fcmovb
inc
cmp
loop
mov
int
rol
push
cli
or
ja
mov
test
ror
dec
stc
and
test
push
and
loopne
pop
mov
pop
cld
jl
out
jl
jecxz
adc
adc
mov
adc
pushf
inc
mov
jle
ret
adc
(bad)
fdivr
mov
and
retf
in
repz
sbb
fld
out
push
push
cmps
jl
fmul
out
mov
mov
mov
data16
or
inc
xor
ret
push
lds
inc
adc
gs
call
imul
dec
xchg
out
int3
pop
add
in
inc
das
jnp
mov
or
and
mov
push
sbb
cmc
push
in
pop
je
ret
into
push
cmc
test
hlt
sub
xchg
pop
adc
aas
sub
mov
(bad)
lods
popaw
imul
push
jecxz
leave
call
scas
add
ret
bound
and
jae
nop
jno
sub
fldcw
inc
outs
sti
fwait
cmps
test
cmps
call
(bad)
sbb
adc
loope
out
adc
inc
push
push
xor
and
jbe
pop
fwait
ins
push
test
shr
add
pop
bound
loop
mov
jmp
call
xchg
repnz
mov
mov
jae
adc
out
sub
adc
adc
cmp
sub
std
mov
stos
xlat
mov
repz
sar
adc
push
imul
mov
sub
movs
daa
jno
add
mov
test
pmulhuw
shl
mov
cmp
test
jbe
xchg
push
data16
inc
lock
xchg
jns
(bad)
dec
and
dec
ins
sahf
call
in
xor
pop
stos
ja
mov
push
jle
lock
daa
mov
lods
xor
pusha
add
popf
cwde
pushf
cmp
add
mov
test
inc
jb
imul
icebp
push
ror
xor
dec
jmp
cmp
jae
xchg
sub
(bad)
sub
mov
aad
and
test
cmp
retf
call
sub
sbb
jmp
(bad)
scas
movs
mul
movs
pusha
in
mov
in
dec
enter
cmp
sub
pop
dec
ret
jecxz
cli
(bad)
or
cmp
sbb
push
add
hlt
dec
sti
shr
(bad)
mov
hlt
sbb
shr
cmp
js
mov
retf
je
jno
sub
jae
adc
dec
pop
lods
push
cmps
jo
out
jbe
sub
sub
sub
sar
and
xor
sbb
and
fwait
xor
jno
iret
int
cmps
jno
sbb
fst
mov
adc
xchg
je
mov
push
inc
fidivr
pop
fyl2x
push
aas
and
stos
xchg
mov
loop
movs
and
cdq
out
loope
out
mov
in
push
outs
std
ins
arpl
pop
push
test
ret
mov
nop
fisub
mov
mov
cmps
out
xchg
mov
push
xchg
ins
adc
xchg
out
dec
into
dec
pop
and
clc
pop
push
pop
xchg
push
xor
push
mov
scas
sub
(bad)
popa
outs
pusha
stos
jb
pop
addr16
mov
stos
dec
add
mov
or
fcmove
add
push
inc
mov
pop
xor
in
cmp
mov
rcr
push
sbb
sub
mov
test
jmp
das
mov
popa
lea
add
popa
jge
sbb
inc
lea
sbb
add
icebp
stos
aam
dec
xor
in
das
aad
push
add
jb
cmps
lods
push
sti
addr16
push
int3
data16
and
xor
dec
xchg
scas
nop
jmp
call
ins
push
pop
mov
push
test
mov
xor
pop
mov
jmp
nop
ss
aas
mov
fidiv
int3
inc
cmc
mov
inc
add
jae
mov
(bad)
pushf
pop
adc
movs
shl
iret
fwait
jmp
mov
pop
loop
xor
inc
xchg
mov
sub
jne
sub
int
xchg
cs
aad
cmp
repnz
jp
(bad)
(bad)
inc
add
xchg
pop
gs
jns
adc
sbb
dec
mov
push
or
jnp
repnz
aaa
outs
mov
enter
lahf
mul
push
xor
ror
push
js
add
mov
xor
xor
add
add
sbb
test
scas
enter
pop
pop
push
mov
fsub
sub
mov
adc
ins
pop
fisubr
fs
repnz
inc
lods
jbe
mov
retf
pushf
add
and
ficomp
retf
movs
iret
jmp
jmp
ficomp
sbb
sub
loopne
mov
adc
sbb
push
pop
lods
fcmovne
add
cmp
inc
mov
test
call
push
push
cmp
inc
(bad)
movs
push
or
xchg
push
pop
fld
ror
sub
addr16
adc
cmps
dec
aam
pop
mov
push
pop
push
sti
jmp
xor
push
rol
mov
jbe
adc
add
cli
arpl
mov
mov
and
aam
mov
mov
rol
mov
jo
jmp
and
jbe
jecxz
bound
(bad)
repnz
ret
jp
cmp
and
pusha
mov
jno
nop
sbb
(bad)
add
imul
mov
mov
lock
add
movnti
dec
lods
(bad)
and
dec
jne
mov
push
add
pop
push
add
pop
push
test
stos
xor
int
enter
(bad)
inc
mov
mov
std
(bad)
aam
add
mov
repnz
std
test
xchg
mov
adc
std
into
frstor
stos
adc
jmp
out
xchg
aaa
fstp
jnp
mov
mov
dec
loope
ret
mov
mov
repnz
jmp
retf
adc
inc
pop
sar
pop
cmp
pop
mov
imul
stc
sub
scas
addr16
rcr
jle
cs
xchg
out
repnz
pop
mov
neg
dec
aam
push
push
fiadd
mov
push
arpl
add
sbb
lds
jmp
jno
js
jbe
lods
adc
push
jmp
xchg
or
leave
ret
dec
adc
fdivr
or
push
leave
or
(bad)
xchg
jecxz
xchg
xor
push
mov
gs
aam
cmp
js
pop
aad
shl
pusha
out
jmp
xor
ss
mov
lods
push
stos
mov
push
lods
jnp
fmul
adc
ins
bound
adc
jmp
or
mov
or
cmps
dec
mov
mov
adc
pusha
sti
push
mov
add
enter
push
retf
xor
push
dec
and
arpl
mov
cld
je
pop
iret
or
in
aam
xchg
adc
es
xchg
adc
jns
or
rol
add
test
jmp
dec
inc
mov
and
mov
int
inc
mov
arpl
ss
scas
iret
repz
cli
jne
and
mov
jbe
lods
enter
repnz
dec
pushf
mov
aas
mov
fild
cmp
mov
adc
inc
int
jns
xchg
jge
or
lock
inc
test
push
and
fnstcw
sbb
sub
jle
in
push
shr
xchg
addr16
inc
lods
jns
push
jb
test
adc
popf
xchg
jb
scas
pop
out
(bad)
pushf
shl
adc
adc
hlt
je
xchg
mov
pop
pop
movs
stos
ror
dec
pop
dec
and
sub
jae
jb
mov
sti
sbb
pop
gs
dec
dec
repz
adc
xchg
outs
jno
jge
dec
inc
sbb
pop
movntq
dec
test
repnz
ja
jo
leave
sti
push
mov
dec
loop
mov
push
mov
test
xlat
setp
jmp
jne
lahf
inc
add
xor
jmp
lahf
push
lea
inc
jmp
mov
stos
push
sub
f2xm1
mov
push
ins
fcmovb
xor
shl
jne
adc
mov
adc
dec
(bad)
jmp
lock
gs
or
push
mov
adc
popf
(bad)
test
fucomip
or
arpl
daa
lea
mov
mov
hlt
fs
sbb
imul
leave
adc
stos
rol
or
jnp
adc
xor
sbb
and
stos
clc
mov
pop
imul
les
adc
ss
or
and
stc
or
test
mov
adc
jmp
jno
dec
aam
arpl
xchg
sbb
or
or
shr
sub
les
ds
xchg
sbb
sub
xchg
sub
inc
dec
cmp
iret
add
mov
ds
cmp
cld
mov
fadd
idiv
dec
aas
stc
sbb
or
push
push
jl
add
mov
push
and
mov
pop
mov
inc
ins
xchg
arpl
or
ja
adc
pop
ins
mov
mov
sub
retf
jno
call
cdq
sub
add
xor
std
dec
ja
add
stc
mov
xchg
stos
in
fdivr
cmp
loop
adc
dec
or
into
rol
bswap
jno
xor
movs
test
mov
add
mov
pop
push
xchg
inc
ret
pop
jl
xchg
add
sbb
scas
pushf
rol
lods
popf
push
js
loop
inc
sbb
clc
lods
jmp
mov
scas
scas
xor
mov
xor
fadd
or
data16
retf
repnz
dec
jno
aad
aam
pcmpeqd
fld1
mov
daa
push
jnp
(bad)
movs
leave
mov
pop
xor
sbb
cdq
aad
aad
push
push
and
pop
or
adc
pusha
dec
popf
cmp
mul
or
jl
stc
sub
pop
(bad)
fsub
mov
fiadd
iret
arpl
or
int3
in
and
or
cmp
mov
out
bound
popa
push
xchg
or
and
adc
and
int3
sbb
dec
add
jecxz
push
in
add
mov
pop
jae
mov
out
outs
ds
ror
push
in
loopne
int
jle
nop
jne
inc
lahf
mov
rcr
sti
aaa
lock
sbb
je
cmp
add
shr
xchg
loop
lahf
rol
loopne
xacquire
mov
push
xor
shr
xchg
cmp
mov
or
stc
fidiv
inc
cmp
dec
cmp
jbe
loopne
test
fnstenv
add
loopne
jg
cmp
sub
call
mov
mov
mov
xor
add
in
xor
mov
fadd
mov
int3
loopne
sub
retf
jnp
nop
fstp
xchg
addr16
jge
cmc
int3
cld
ror
add
sbb
mov
fs
jmp
fimul
mov
lahf
lock
pop
sahf
(bad)
jecxz
ss
bound
pop
xor
mov
fldcw
sub
push
push
mov
je
sbb
mov
ds
not
(bad)
fdiv
stos
ret
test
jns
repnz
outs
mov
push
push
push
imul
out
call
xchg
jg
push
mov
and
es
jecxz
pushf
sti
fcom
mov
in
cld
(bad)
cmp
mov
(bad)
mov
xor
clc
sub
xor
and
inc
xor
ins
fstp
sbb
dec
push
cdq
inc
mov
in
rcr
xor
arpl
or
inc
in
inc
mov
sub
je
push
repnz
push
aas
inc
arpl
adc
scas
mov
cmp
push
stos
mov
sub
les
dec
dec
outs
mov
add
mov
(bad)
fdiv
xor
lods
call
mov
xchg
aaa
movntps
imul
loope
fwait
ins
add
inc
mov
mov
mov
cmp
pushf
retf
mov
retf
out
xchg
adc
sti
loop
scas
test
in
fisttp
mov
push
(bad)
ret
call
stos
dec
out
repnz
sub
and
xor
pop
jmp
mov
fistp
loop
push
outs
mov
stc
mov
pop
arpl
or
cmp
mov
xlat
jmp
call
mov
cmp
test
cli
xor
int3
(bad)
adc
mov
or
inc
sbb
test
outs
jne
hlt
add
jae
repnz
(bad)
sbb
push
int3
cmps
dec
jne
fs
stos
les
test
scas
sbb
ins
mov
or
iret
jle
or
sbb
cmp
cmp
out
loopne
sbb
daa
push
xchg
cmp
(bad)
sar
hlt
add
sbb
inc
push
xchg
mov
prefetcht2
(bad)
jnp
pop
push
xor
ficomp
jne
es
repz
leave
scas
fwait
push
push
hlt
cmp
fwait
ret
scas
imul
cld
cmp
imul
stos
fwait
sub
ror
les
addr16
mov
nop
fadd
jmp
cmp
jl
xor
fstp
fmul
xor
(bad)
sub
sub
lds
or
xchg
stos
int
push
cmps
out
xchg
and
(bad)
out
inc
call
jmp
sbb
stos
jmp
int
je
dec
jmp
pop
lods
lods
or
push
pop
adc
dec
pop
sahf
xor
push
popf
adc
push
fidiv
pop
xor
(bad)
adc
push
adc
cmp
fiadd
pop
mov
fstp
cs
sbb
iret
pusha
jae
(bad)
mov
mov
out
and
and
mov
push
shl
lea
shl
pop
mov
mov
pusha
mov
fs
and
(bad)
adc
jne
xchg
movs
das
packuswb
mov
cmps
cmp
mov
lods
sub
mov
and
push
mov
push
push
movs
inc
in
sbb
jle
fwait
sar
xor
scas
mov
mov
icebp
mov
pop
cld
rcr
aaa
scas
mov
jae
jno
mov
cli
add
neg
addr16
movs
lods
popa
cmp
lock
or
cmp
jnp
dec
lea
fprem1
fcomp
inc
inc
retf
and
in
cmps
fdiv
clc
xor
(bad)
fbld
sub
xor
mov
std
cmps
sahf
add
in
mov
sbb
mov
fwait
jnp
jecxz
test
xlat
out
ja
jl
call
sub
dec
dec
retf
push
push
mov
mov
inc
and
nop
pop
xchg
and
fld
ror
pop
xor
iret
rcl
sub
mov
add
xchg
fisttp
enter
data16
loop
pop
or
in
imul
or
repnz
out
xchg
int3
and
cli
(bad)
inc
or
xor
adc
das
and
jl
xor
dec
rcr
jl
shl
xor
cmp
mov
jns
cmp
leave
lock
repnz
repnz
cmc
mov
hlt
mov
inc
(bad)
pop
loope
xor
enter
std
push
out
or
jmp
sub
cmps
outs
push
jnp
sbb
mov
das
xchg
scas
iret
(bad)
mov
xor
jb
push
cmps
inc
shr
sar
cmps
and
xchg
mov
inc
and
xor
mov
sub
sub
or
mov
ins
or
inc
or
pop
cmc
addr16
ror
mov
aaa
adc
cs
mov
push
leave
scas
dec
or
sahf
dec
xlat
cmp
adc
(bad)
xchg
inc
cmp
mov
jmp
into
dec
mov
fst
sbb
fidivr
stos
lods
rcr
mov
inc
push
inc
sbb
in
mov
or
push
(bad)
cs
ret
stc
add
leave
jg
mov
retf
fidivr
ret
mov
jg
lods
jecxz
dec
fbstp
sbb
jbe
and
jle
cwde
xor
jbe
pop
mov
mov
xor
fmul
jge
push
inc
sbb
iret
fmul
adc
xchg
inc
test
mov
(bad)
lock
sub
mov
push
cld
sub
jmp
or
mov
aad
cmps
and
sub
scas
test
mov
mov
into
fs
mov
(bad)
dec
adc
xchg
shl
cmp
xchg
jle
fisttp
sbb
xorps
test
aad
or
hlt
jg
icebp
push
call
mov
dec
mov
outs
adc
xor
sbb
je
jecxz
hlt
inc
adc
xor
inc
cmp
retf
push
in
pop
ds
and
mov
bound
(bad)
shl
sub
push
mov
das
fsubr
sub
push
fst
pop
cld
fstp
std
and
inc
xor
push
inc
js
push
int
or
cmp
in
adc
dec
popf
cmc
jmp
mov
inc
mov
add
mov
dec
sbb
mov
pop
add
test
sbb
fwait
pop
mov
cmp
sbb
pop
fsin
xor
mov
sbb
mov
jo
loopne
fistp
repnz
fwait
(bad)
fcomp
jle
inc
test
dec
out
push
jae
and
dec
pop
(bad)
xor
mov
cld
lods
xchg
js
xor
ja
in
jge
xor
dec
jae
outs
mov
fidivr
pusha
push
dec
out
pushf
das
aas
jl
pop
scas
xchg
outs
aaa
mov
les
adc
inc
fadd
mov
and
mov
and
jl
fcmovnu
js
push
xchg
pop
jns
mov
test
add
movs
mov
mov
push
jmp
mov
iret
repnz
in
iret
adc
test
(bad)
xchg
cdq
ins
lds
mov
test
adc
push
dec
shr
sbb
or
out
(bad)
push
arpl
sub
retf
out
aam
(bad)
xor
mov
sti
xor
enter
jecxz
in
mov
cmp
cmp
dec
mov
mov
addr16
dec
dec
push
push
adc
or
shl
sbb
pop
xor
sub
mov
sahf
xchg
pop
les
(bad)
fs
adc
mov
push
jmp
push
sub
dec
pop
(bad)
push
xor
popf
rcl
jmp
stos
je
and
stos
xor
shr
fst
jle
xchg
lea
cli
in
out
clc
aaa
add
sbb
dec
mov
aad
dec
shl
stos
inc
pop
mov
in
mov
or
pop
sub
sbb
fmul
rol
push
mov
jnp
enter
xlat
dec
ret
mov
sbb
xor
adc
mov
xor
and
pop
test
inc
cmp
daa
das
stos
stos
ror
cli
or
jge
fimul
pop
pop
xchg
add
sahf
or
and
push
aas
jo
jo
sub
jns
scas
test
inc
dec
push
fmul
addr16
sub
ret
sub
xor
mov
test
sub
and
pop
add
add
xchg
stos
test
add
mov
test
fadd
out
jmp
and
fstp
aam
sbb
fbstp
sub
rcl
fwait
sbb
cdq
fisub
pop
and
bound
repz
dec
mov
pop
iret
int3
fdivp
xchg
push
xchg
ror
nop
lock
pop
push
fcom
jne
nop
xchg
jo
dec
shr
jne
dec
retf
inc
imul
int3
or
inc
push
inc
(bad)
movs
stc
outs
repz
jl
cmps
sahf
sub
repz
loope
stc
stc
loop
push
dec
pop
mov
mov
ds
cmps
(bad)
mov
and
and
std
mov
jle
fnstsw
inc
arpl
inc
add
xor
rol
mov
adc
(bad)
xchg
pop
test
ja
inc
cwd
xchg
(bad)
mov
sub
adc
sub
daa
adc
imul
je
xchg
dec
adc
and
out
bnd
pop
shl
cmp
fld
outs
mov
add
fst
lahf
sub
les
adc
or
mov
mov
jb
or
mov
pop
sbb
test
mov
(bad)
scas
test
iret
in
lods
scas
xchg
in
(bad)
imul
mov
int3
sbb
or
ret
pop
loop
mov
push
cmps
jbe
and
xor
and
(bad)
mov
ja
or
dec
daa
ds
sbb
inc
mov
stos
pop
nop
xor
movs
test
sub
jp
pop
loope
adc
dec
xor
mov
popa
xchg
ds
fstp
addr16
or
mov
dec
xor
mov
inc
ja
xor
mov
dec
adc
js
cmps
cmps
adc
jp
fbld
arpl
enter
stc
aas
sbb
jo
push
mov
clc
popa
call
fdivr
test
arpl
inc
je
ds
xchg
and
fsub
(bad)
cdq
pop
idiv
add
sbb
sub
ret
loop
push
pop
fimul
stos
sbb
lahf
outs
out
push
test
adc
nop
add
add
inc
(bad)
je
cli
data16
scas
xor
mov
js
adc
(bad)
call
pop
or
mov
sar
or
mov
mov
cmps
lods
cmp
movs
ins
sbb
cwde
jmp
pop
cmp
mov
jmp
dec
adc
sub
push
push
inc
xlat
sbb
jo
xlat
pop
cdq
add
cmp
dec
push
push
pop
fwait
pop
popa
dec
stos
push
ret
div
or
out
fistp
ret
jae
push
push
out
loop
pop
es
in
mov
leave
pop
cmp
inc
pushf
movs
sbb
mov
pop
xor
and
xor
outs
loopne
retf
push
adc
cs
sub
and
lahf
std
mov
sbb
xchg
and
cmp
or
push
or
lds
mov
sbb
inc
aam
xchg
push
ret
mov
sahf
shl
add
dec
popf
ins
inc
les
ss
adc
int
sbb
pop
adc
fcomp
cmovle
jge
mov
leave
fcomp
and
adc
arpl
scas
sbb
cmps
retf
mov
lds
jmp
mov
movs
and
scas
test
sahf
frstor
xor
and
movs
aas
push
retf
fadd
stc
(bad)
xor
in
call
out
mov
cmp
iret
mov
cld
les
fwait
lock
mov
sbb
dec
repnz
xor
iret
enter
and
inc
fisttp
xchg
sbb
adc
jae
mov
(bad)
les
test
icebp
push
adc
out
or
outs
pop
es
pushf
push
push
pop
loop
dec
fcomp
push
iret
pushf
pop
or
cdq
pop
jle
mov
aad
sub
dec
into
sbb
and
mov
jns
stc
jl
fnstsw
xor
xor
mov
lods
gs
fcom
adc
xchg
mov
xor
pop
lods
push
mov
mov
int3
not
sbb
push
je
int3
call
jp
outs
sub
xor
jo
or
sub
aaa
add
fbld
xchg
sbb
sub
sub
jmp
dec
retf
mov
outs
sbb
add
(bad)
cdq
mov
iret
sar
out
cld
repnz
mov
sbb
adc
mov
test
or
cmp
xor
add
mov
movs
or
jns
cmp
mov
int
mov
sub
mov
imul
(bad)
lock
adc
retf
or
(bad)
lods
shl
pusha
mov
movs
and
sbb
mov
jmp
je
xchg
cmp
out
mov
jo
jp
out
xchg
xor
cmp
or
popf
sbb
cmp
push
add
imul
aam
nop
cmps
mov
jns
ret
lahf
test
mov
pop
(bad)
jmp
mov
mov
sub
adc
and
imul
call
push
mov
fild
ins
xor
push
or
fistp
add
xchg
pop
dec
dec
lock
sub
ret
or
dec
inc
aam
fimul
mov
out
or
sub
pushf
sbb
push
leave
add
stos
pop
enter
inc
mov
out
lahf
push
test
and
or
push
mov
xchg
sub
mov
push
dec
mov
movs
xor
call
ret
mov
dec
xchg
scas
xor
and
pop
dec
fcom
push
or
mov
mov
mov
add
mov
imul
mov
aas
and
and
xor
jl
jb
fisubr
test
add
dec
das
jne
cwde
and
mov
or
jae
mov
pop
pop
cmp
leave
ins
outs
aas
adc
and
into
and
mov
xor
adc
mov
dec
dec
loop
into
xor
aas
out
aam
(bad)
sbb
pop
dec
cli
fsubr
popa
jmp
pop
and
add
pop
stc
and
push
lea
fnstcw
inc
sub
call
inc
inc
aas
mov
ret
add
adc
add
cmc
push
js
ja
inc
mov
loop
jbe
xchg
psubw
dec
fiadd
xchg
call
ret
clc
pop
dec
rol
jnp
jg
dec
cmp
int
dec
sysexit
pop
loopne
jns
test
xchg
sbb
dec
push
or
std
xor
jge
cmp
mov
stc
shl
xor
mov
mov
add
cmps
xchg
fdiv
mov
mov
inc
mov
test
outs
ret
mov
hlt
movs
cmps
xchg
call
scas
shld
cmps
push
loopne
cwde
add
add
rcl
mov
xchg
ret
push
push
(bad)
cld
pop
cmps
cmps
inc
repnz
mov
add
into
jge
and
aad
add
gs
(bad)
sbb
cmp
inc
std
push
imul
(bad)
in
aad
leave
mov
jecxz
enter
inc
xchg
xor
imul
and
cmp
xchg
adc
popa
inc
mov
cmps
dec
mov
psubw
push
mov
push
fiadd
mov
dec
xchg
test
jo
adc
push
fwait
adc
pop
mov
cmp
sbb
inc
cwde
les
aaa
mov
cmp
ret
pop
sbb
popf
jp
push
xor
ins
sbb
sub
repnz
mov
(bad)
mov
sbb
gs
jne
jl
enter
xchg
sub
xchg
lods
adc
xchg
fnsave
fnstcw
jnp
cmp
rol
cmps
push
stos
pusha
scas
sar
xchg
add
or
stc
mov
ret
por
dec
fstp
scas
mov
xor
add
(bad)
push
cmc
scas
sub
in
cmps
mov
leave
(bad)
int3
iret
add
rdmsr
mov
pop
inc
mov
dec
fst
dec
pop
sti
(bad)
retf
mov
rcr
clc
ror
mov
test
arpl
mov
push
sub
sti
std
jns
sbb
pop
and
or
inc
jmp
iret
(bad)
data16
into
sub
add
push
sahf
pop
dec
xchg
jae
imul
xchg
add
cmp
and
xchg
les
aas
std
lock
fs
int
dec
dec
out
or
mov
js
push
xor
or
outs
mov
xor
mov
shr
adc
push
js
test
sub
pushf
in
call
sub
scas
repnz
inc
in
and
popf
test
enter
addr16
inc
mov
dec
mov
aas
or
mov
gs
cmp
jle
adc
ss
(bad)
out
mov
addr16
fistp
push
sti
ficom
cmp
popa
lea
sbb
sbb
bound
rcr
data16
jne
pop
mov
mov
movs
test
xchg
data16
push
dec
sbb
in
mov
add
or
loope
mov
add
xor
dec
mov
mov
ins
aam
ja
push
fdiv
push
enter
(bad)
xor
repz
pop
loope
push
cmp
sub
xor
in
ror
xchg
cdq
sbb
cwde
push
pusha
fmul
test
test
xor
int
inc
popf
lods
lahf
fdiv
adc
fcom
dec
cmp
dec
sbb
jb
int3
test
add
sbb
or
mov
adc
popa
out
pop
sbb
mov
test
pop
mov
adc
test
aam
push
jno
call
push
or
ins
lds
or
cmp
retf
mov
sahf
sub
data16
into
mov
(bad)
in
sub
pop
lea
gs
clc
pop
mov
pop
push
pop
add
xor
sbb
jp
out
outs
lods
imul
adc
aad
stos
out
mov
fwait
mov
ins
xlat
cmp
xor
push
add
bound
into
les
sub
add
lods
jnp
cdq
mov
call
ins
and
out
addr16
in
stos
stos
stc
and
cwde
add
mov
jo
cmp
aas
sbb
mov
lock
in
jns
femms
push
xchg
or
xchg
into
xchg
jmp
fs
leave
jp
xchg
dec
add
or
mov
ja
std
enter
fsub
mov
loope
jae
or
hlt
sbb
mov
sbb
hlt
and
sub
xchg
test
pop
es
jmp
fiadd
adc
mov
mov
int3
push
sbb
jle
sbb
repz
outs
or
outs
es
xchg
xor
inc
mov
cmp
and
pop
in
sti
outs
ss
cmp
aas
cmp
pop
icebp
push
call
cmp
imul
cwde
das
(bad)
cmp
in
repz
push
in
and
(bad)
and
xor
out
shl
pop
(bad)
sahf
push
xor
shl
xchg
jl
imul
sub
inc
cli
sub
sbb
fsub
add
mov
out
inc
inc
mov
iret
clc
mov
mov
cmp
(bad)
neg
clc
pop
xor
mov
add
jmp
push
test
sub
push
or
or
sbb
nop
cmps
sub
and
fisubr
pop
test
mov
fld
imul
mov
xor
sbb
push
mov
sbb
(bad)
pop
or
sub
pop
(bad)
jg
add
repnz
or
leave
data16
dec
in
lock
imul
mov
and
inc
push
test
or
adc
test
dec
jbe
add
nop
into
pop
lods
mov
lock
repnz
mov
inc
in
aad
pop
stos
mov
pop
hlt
pop
gs
jo
ins
nop
loop
sbb
mov
bnd
mov
inc
arpl
jg
or
push
mov
mov
mov
hlt
xor
sbb
push
cs
and
cmps
popa
nop
push
jae
dec
jno
retf
inc
fdivr
enter
and
sub
out
daa
jnp
cmp
push
jae
stos
push
inc
lea
xchg
push
movs
push
inc
shr
adc
test
push
fmul
call
or
inc
inc
dec
jne
out
jnp
out
mov
xor
mov
jbe
cmps
adc
xchg
es
mov
ret
stos
lods
inc
je
icebp
lds
add
ins
nop
out
imul
pop
int3
push
add
sbb
out
setno
cmp
xchg
mov
addr16
or
xor
dec
fstp
xlat
shl
fcomp
sub
das
add
xchg
add
frstor
xchg
xor
adc
inc
xchg
jle
inc
push
jle
or
mov
shr
sub
idiv
push
pop
ds
sbb
pop
mov
scas
fimul
pop
add
sub
mov
mov
popf
(bad)
and
adc
in
leave
fcomp
stc
test
inc
mov
inc
out
and
mov
aad
jmp
leave
mov
and
or
mov
jae
cmps
cli
push
fs
jmp
fld
jb
push
lea
mov
and
push
add
retf
add
xlat
fidivr
mov
(bad)
and
pop
or
mov
ret
rcr
add
cmp
(bad)
sub
push
mov
stos
imul
jb
das
inc
adc
lea
(bad)
pusha
clc
aaa
add
mov
xor
jg
lea
scas
jecxz
jge
cwde
dec
cmp
cmc
jnp
dec
out
push
push
mov
add
sbb
mov
jne
mov
sub
xor
call
push
push
fnstcw
cmp
cmp
iret
jno
loope
mov
(bad)
shl
repnz
test
mov
cdq
xchg
test
mov
jmp
cdq
dec
cld
data16
mov
int3
setg
jmp
cs
in
out
and
mov
mov
or
data16
clc
out
data16
fidivr
hlt
inc
rol
mov
mov
pop
inc
pop
and
pop
sar
je
adc
mov
jns
push
(bad)
cmps
stos
fs
int3
ins
adc
sub
inc
xchg
aas
cdq
in
xor
jg
push
mov
jne
pop
(bad)
(bad)
lahf
fbstp
lahf
hlt
xchg
mov
imul
retf
int3
cld
ins
inc
xchg
push
xor
pusha
sbb
jnp
mov
mov
dec
pop
and
inc
out
mov
fist
pop
cli
mov
test
cmp
daa
into
sbb
inc
cli
dec
out
mov
mov
movs
jne
mul
test
or
lods
sbb
xor
and
(bad)
pop
test
sbb
cmp
ret
cmp
mov
in
or
inc
add
les
and
(bad)
loop
out
dec
jmp
jecxz
push
pop
imul
and
xchg
cmp
popf
(bad)
in
inc
aad
jnp
dec
cmps
xchg
pushf
out
cmp
lds
sti
add
cmp
or
jle
add
mov
shr
jns
arpl
popf
or
xchg
mov
fcmovnu
int
icebp
mov
mov
pop
cmps
sub
test
and
sbb
mov
cld
ds
movs
jbe
mov
fadd
mov
pop
imul
gs
mov
mov
imul
iret
movs
xor
test
add
fs
test
cmp
push
sbb
cmp
stc
push
xor
mov
ins
adc
fld
into
adc
jno
movs
pop
pop
dec
fidiv
out
and
push
movs
fiadd
mov
add
mov
das
add
icebp
inc
sub
outs
push
adc
push
stos
fcomp
lods
repnz
mov
out
jnp
and
pop
loopne
push
inc
hlt
xor
(bad)
mov
mov
mov
push
les
add
adc
clc
movs
and
int
mov
dec
ins
jno
jne
sub
jmp
adc
xor
xor
pop
pop
shl
xor
ins
dec
pop
jae
jne
jno
mov
js
mov
jb
(bad)
shr
push
mov
sbb
dec
xor
dec
inc
div
xor
mov
iret
jne
jb
jb
js
sub
stos
push
jb
cmps
ficomp
jmp
adc
sti
(bad)
push
xchg
mov
loop
lods
cmp
pop
push
mov
adc
out
fbld
test
lds
mov
fst
arpl
lods
and
adc
mov
cmp
dec
repnz
clc
mov
mov
or
pop
loopne
cmps
xchg
imul
and
cmp
ja
jmp
lods
adc
add
inc
mov
jb
imul
xchg
push
mov
mov
lahf
clc
jne
adc
repz
retf
and
jle
xchg
xor
adc
in
xor
sbb
or
in
aas
and
sbb
out
(bad)
jo
pusha
icebp
out
add
add
out
mov
inc
es
mov
pop
pop
gs
mov
or
fwait
mov
xchg
in
call
add
fld
arpl
pop
jo
push
sbb
push
and
or
fidivr
es
and
mov
fsub
data16
mov
lods
fiadd
pop
push
movs
jecxz
iret
inc
aam
popf
mov
imul
(bad)
jb
add
movs
cmp
push
pop
lods
push
cmp
xor
fisubr
xchg
jge
inc
mov
mov
mov
jge
outs
outs
js
pop
mov
push
sub
scas
test
jbe
sar
cmp
outs
jmp
popf
inc
stc
inc
sbb
loope
jne
enter
mov
adc
inc
cmps
loop
inc
sub
xlat
sbb
xchg
push
lods
xor
mov
xor
adc
cmp
adc
add
cmp
and
call
out
push
sahf
repz
push
enter
fild
mov
imul
jmp
daa
cmp
int
mov
sti
in
mov
lock
dec
ret
div
ins
add
popf
mov
fs
test
imul
add
aad
stc
and
adc
pop
lods
pop
js
jns
lock
scas
into
jno
and
sbb
call
xor
push
push
xlat
adc
jecxz
das
arpl
mov
inc
mov
dec
(bad)
xchg
outs
je
xor
jbe
fs
cmp
stos
push
dec
call
aam
dec
or
pop
and
xchg
jnp
jae
cmp
test
sbb
imul
js
mov
xchg
add
fimul
xchg
in
pushf
jo
popa
add
xor
pushf
test
mov
ins
aad
in
mov
lods
les
lods
ror
iret
inc
pop
aad
sub
push
or
das
hlt
lods
(bad)
cld
arpl
xor
fwait
pop
gs
into
data16
add
jmp
fs
clc
out
into
xor
and
sub
enter
mov
mov
mov
lods
jbe
mov
ret
xchg
repnz
inc
ins
ja
ins
xor
js
dec
ja
adc
cmps
shr
cmps
aaa
ins
jnp
jecxz
sub
ror
lds
pop
or
cmps
sbb
dec
ja
inc
xlat
xor
repz
jl
pop
mov
cmp
(bad)
stos
call
popa
inc
cmp
pushf
popa
xor
pushf
shr
pusha
cmp
cmc
xor
sbb
push
mov
xor
out
jo
nop
stos
call
sbb
xchg
mov
cmp
lods
sar
sti
fmul
call
mov
or
ins
cs
ins
es
hlt
mov
and
ficom
(bad)
jecxz
setb
ins
adc
rol
inc
push
sub
xchg
push
sbb
hlt
fisub
jns
cld
mov
inc
mov
cmps
enter
dec
xor
add
stc
std
sub
(bad)
call
mov
std
xor
pop
inc
aas
mov
jecxz
or
mov
xor
mov
loope
not
imul
popa
cmp
jno
or
test
adc
fisub
fcmovbe
sbb
lahf
(bad)
cmp
das
stos
mov
jbe
pop
outs
dec
mov
test
dec
ror
mov
dec
jnp
mov
mov
popa
std
shl
or
push
sub
les
shl
sbb
xor
mov
pop
jb
ror
ror
add
cwde
sbb
rol
xchg
mov
data16
(bad)
adc
in
(bad)
jbe
mov
dec
and
sbb
loope
(bad)
pop
sti
push
sbb
shr
fdivr
adc
push
sbb
jo
out
dec
test
test
pop
(bad)
(bad)
enter
inc
movs
pop
xchg
jne
imul
fadd
scas
mov
or
jg
fidiv
push
inc
inc
fldenv
jnp
adc
je
mov
cdq
inc
push
cli
xor
push
dec
mov
mov
into
ja
or
(bad)
loopne
cmp
inc
iret
pusha
loop
jl
stos
pop
ss
test
jecxz
mov
sbb
pushf
push
fsubrp
or
shl
or
aam
ss
sbb
addr16
dec
std
pop
adc
popf
data16
shr
adc
lds
bound
ror
cmp
call
out
pushf
inc
push
xchg
and
xor
lea
sbb
icebp
sub
scas
call
jo
sub
push
add
std
dec
stc
ds
jae
ror
or
out
js
ficomp
aam
aas
xchg
loope
lods
push
jnp
adc
inc
cmp
mov
adc
dec
push
in
push
sbb
leave
and
adc
xor
adc
test
js
sub
mov
pusha
mov
xor
fcomip
mov
scas
sbb
leave
pop
jecxz
xchg
cmps
ror
stos
js
test
and
adc
inc
xor
call
xor
mov
loopne
adc
lock
dec
dec
loop
ss
pop
lea
loope
and
addr16
ins
add
xor
adc
(bad)
in
leave
jnp
dec
push
jae
xchg
loopne
add
les
push
jnp
pusha
js
cmps
js
in
mov
or
vhsubps
jbe
fisubr
aas
fwait
mov
pushf
(bad)
mov
in
push
jp
dec
out
or
arpl
std
aam
paddd
je
mov
fldcw
ror
dec
push
ret
icebp
mov
hlt
imul
loopne
cmp
or
les
sbb
ret
cmp
dec
fdiv
xor
out
sbb
inc
ins
cdq
sbb
scas
xchg
xchg
pop
xchg
fisttp
mov
in
test
cmps
cmp
test
ret
ss
in
cmc
adc
lahf
mov
(bad)
mov
jne
and
test
inc
les
ja
mov
sbb
dec
pop
mov
lock
imul
les
rcr
cmp
add
pop
popf
dec
rcl
loop
nop
lods
(bad)
and
or
sbb
jp
test
ror
xchg
adc
jbe
out
dec
adc
jnp
dec
je
inc
pusha
icebp
jmp
push
rol
sbb
sahf
jno
xor
push
lods
jae
jae
sub
mov
mov
and
mov
out
add
call
neg
rol
jns
scas
mov
mov
dec
repz
adc
cmp
mov
out
lds
jne
xor
mov
(bad)
bound
add
mov
bnd
popa
cld
(bad)
ds
jle
sbb
sti
mov
xor
aaa
xchg
mov
stos
bound
ret
inc
xor
inc
ins
sbb
xchg
mov
cwde
ror
xor
mov
jg
pop
call
out
sbb
aam
mov
add
scas
mov
fimul
dec
jmp
mov
xor
(bad)
add
sub
push
sbb
out
cmp
dec
add
movs
jmp
xchg
test
pop
mov
scas
push
mov
lods
imul
(bad)
ja
bound
cld
ins
or
and
ins
pop
aad
xor
popf
out
push
inc
fimul
jbe
cmc
pop
sbb
xchg
inc
pop
xchg
push
sub
adc
pushf
and
mov
outs
xor
leave
and
enter
in
sub
push
mov
ds
jb
fbstp
mov
sti
cwde
xlat
jns
pop
dec
jno
ficomp
icebp
shr
xor
and
jo
imul
loopne
lods
mov
and
movs
std
sbb
ror
(bad)
cmc
fistp
pushf
repz
sub
xchg
or
xor
fwait
jmp
in
pop
inc
je
mov
mov
cmp
mov
shl
xor
mov
push
popf
int
push
gs
jg
hlt
add
adc
xchg
dec
stos
fistp
pop
loope
and
out
(bad)
fwait
push
out
imul
(bad)
js
mov
sub
push
(bad)
clc
push
pop
sahf
xor
cmps
push
mov
or
mov
sub
mov
ret
(bad)
mov
popa
mov
nop
xor
outs
jno
test
popa
pop
iret
ret
jg
fdivr
out
mov
jno
push
daa
lahf
fs
dec
dec
pop
sar
jnp
or
rol
and
and
retf
sub
stc
mov
in
jb
pop
cmp
ret
aas
jae
and
xchg
retf
push
ds
shl
pop
push
lods
rcr
mov
dec
inc
je
jbe
jmp
dec
push
int3
push
push
xor
mov
dec
adc
in
or
mov
xchg
add
mov
in
lods
xlat
dec
fcomp
cmps
ds
(bad)
mov
stos
sbb
inc
aas
or
imul
adc
jle
pop
in
adc
mov
jne
ss
sbb
movs
mov
mov
in
outs
jno
addr16
mov
gs
stos
(bad)
iret
and
(bad)
fldcw
xchg
add
and
clc
fidiv
sahf
inc
lock
adc
call
mov
sub
repz
push
fwait
adc
jb
push
shl
in
(bad)
shl
xor
sub
mov
mov
sub
push
hlt
fist
mov
sbb
sub
mov
cmp
xchg
sub
js
inc
dec
mov
or
popa
jne
mov
sahf
jp
pmulhuw
xchg
push
gs
data16
xchg
ss
pop
adc
jmp
daa
rcr
(bad)
fcmove
dec
inc
xor
sbb
loope
mov
popf
xor
or
test
jmp
(bad)
pop
mov
jnp
sbb
std
mov
sti
ret
ret
sbb
or
outs
pop
mov
lea
jae
pop
push
cmp
out
out
xor
sub
add
mov
cmp
movs
dec
xor
(bad)
xchg
or
arpl
cmps
int
and
stos
lea
pop
sub
ror
into
xchg
scas
or
jne
nop
test
dec
mov
ja
pushf
mov
sub
xlat
(bad)
jno
or
sar
push
lahf
jae
xor
fsub
push
fsubr
pop
das
sbb
fimul
cmps
jo
push
retf
sahf
jle
mov
inc
mov
pop
stos
xor
sub
dec
mov
movs
xchg
mov
cmps
lods
fsubr
loopne
int3
mov
pop
adc
mov
jo
xchg
sub
fld
test
xchg
out
icebp
add
call
push
call
mov
out
mov
pop
pop
xor
cs
not
mul
cmps
adc
shl
mov
xor
add
and
lods
cmps
xchg
repnz
jecxz
pop
pop
jno
ret
shr
sar
loop
pop
pop
pop
adc
and
js
mov
mov
mov
mov
das
jmp
and
and
movs
enter
jno
das
mov
sub
ror
add
xchg
sub
or
retf
out
ins
iret
mov
call
sbb
pop
out
bound
imul
jne
push
mov
loope
jle
cmps
ins
jl
cmp
mov
pop
cmp
(bad)
and
mov
add
cmp
jnp
mov
and
stos
icebp
xor
adc
push
in
xchg
ja
js
sub
je
inc
pushf
pop
xor
les
adc
mov
sbb
adc
int
xor
(bad)
mov
jno
cmp
jno
int
bound
(bad)
mov
jb
std
mov
fidiv
xlat
fimul
mov
xor
pop
js
test
out
repz
xor
iret
sub
stos
rcr
pop
pop
pop
or
bound
je
stos
pop
cmp
popf
jb
or
adc
xchg
popa
sub
call
fdiv
enter
xor
ss
push
pop
jo
test
hlt
pop
js
jmp
sahf
push
into
movs
mov
pusha
movs
imul
call
pop
jle
test
das
jmp
push
cmp
pusha
sub
in
rcl
hlt
mov
ja
cld
je
popa
sub
retf
inc
pushf
cmp
push
sbb
shr
or
jecxz
and
and
inc
cwde
pusha
cmp
push
rcl
add
sub
popf
mov
hlt
pop
into
cld
push
dec
mov
adc
out
dec
pop
mov
adc
cmc
retf
add
and
push
stc
inc
dec
rcl
cdq
sub
xchg
xor
sti
xchg
adc
inc
cmp
sti
sbb
mov
sbb
pusha
fucomp
inc
imul
xor
mov
out
xchg
stos
sbb
out
nop
mov
or
sbb
mov
cmp
aam
fbld
xor
stc
inc
shl
arpl
dec
push
sub
mov
leave
jbe
bound
mov
ss
daa
pop
in
jle
repnz
dec
cmp
retf
push
fs
xor
cld
push
lea
repz
ins
jp
jae
imul
mov
cmp
inc
movs
test
cmc
stos
rcr
jns
pop
cli
fimul
jge
lea
repz
jne
xor
pop
dec
out
test
call
mov
xchg
sbb
mov
sbb
ficomp
inc
jge
push
into
cli
retf
call
imul
mov
inc
(bad)
in
mov
lods
sti
cdq
and
lods
add
mov
push
fcomip
xor
imul
and
(bad)
lahf
pop
push
ret
sub
mov
scas
or
cmp
jns
(bad)
test
fst
fst
stos
iret
mov
(bad)
pop
aaa
push
ret
push
sti
aad
cmc
addr16
dec
daa
adc
(bad)
xchg
xchg
fldcw
lds
xchg
bound
pop
fwait
lods
loop
jmp
scas
adc
pop
mov
mov
cmc
mov
mov
jmp
xor
sbb
outs
sub
cmp
cmp
fs
jp
xchg
mov
dec
stos
add
shl
xchg
inc
call
add
rcl
fcom
dec
mov
jp
ror
and
push
or
push
(bad)
mov
enter
or
movs
mov
cmp
fld
mov
mov
jle
(bad)
adc
sbb
int
mov
inc
not
neg
(bad)
retf
sub
fistp
loope
sub
jnp
jae
and
push
push
stc
test
add
data16
jbe
fxch
dec
mov
inc
and
jbe
fidivr
stc
lea
nop
xor
jb
xchg
cmp
adc
mov
(bad)
xchg
cwde
(bad)
aam
cmp
sahf
pop
jns
nop
and
stos
push
jg
stos
xor
iret
lods
jmp
ds
gs
sub
sti
or
ins
fcom
xlat
sti
sub
lea
pop
movs
jmp
pop
int3
pop
cmp
cmp
jmp
aad
dec
rol
cmps
test
cdq
imul
xchg
jno
xor
add
loopne
das
clc
sbb
sbb
pop
and
fs
jo
mov
xchg
lds
cmp
mov
jmp
sub
mov
adc
cmp
pop
adc
push
push
mul
call
pop
pop
add
xchg
pop
dec
(bad)
pop
ret
call
jno
lods
(bad)
fdiv
dec
movs
sbb
adc
push
pop
cmp
ds
shl
cwde
xor
rcr
mov
sbb
xor
cmp
mov
push
lds
jecxz
push
popa
pop
cmp
mov
into
ficom
sar
(bad)
(bad)
inc
jl
das
in
jg
pop
sar
or
sub
neg
fnstcw
cmp
aad
dec
mov
loope
push
pop
es
sbb
mov
xchg
repnz
xor
and
and
aaa
dec
mov
add
mov
mov
pop
sub
cmp
or
movs
mov
pop
push
test
data16
pop
mov
movs
cmp
adc
xor
mov
mov
outs
lods
enter
jno
jne
test
test
add
mov
je
cmc
and
inc
pop
aad
jecxz
mov
adc
fimul
or
and
cmps
stc
arpl
and
jg
pminsw
test
sbb
and
aas
fwait
pop
dec
fistp
mov
fldenv
stos
pushf
mov
ins
and
xor
pop
(bad)
or
dec
xchg
ins
push
add
outs
idiv
movs
(bad)
stos
jmp
cs
inc
jl
sbb
pop
leave
repnz
stos
enter
xchg
mov
add
call
sub
loop
aam
cmps
and
adc
popa
fcmovu
je
jmp
fcmovnu
sbb
mov
and
arpl
inc
pop
add
popf
dec
push
(bad)
jns
int3
lods
movq
movs
data16
ss
into
test
out
inc
dec
ins
(bad)
xlat
(bad)
sub
adc
or
pop
sahf
push
mov
imul
mov
add
cmp
mov
test
xchg
nop
in
mov
in
xor
cwde
cmp
arpl
mov
jp
or
sbb
or
jnp
cs
int
inc
inc
xchg
pusha
std
jecxz
ret
pop
mov
out
jb
and
mov
addr16
xchg
sbb
or
xor
cmc
dec
push
test
ds
vminsd
sbb
xcrypt-cfb
cmps
fs
dec
xor
jo
adc
jmp
xor
push
or
mov
fmul
imul
loope
ja
mov
ins
fcmove
xor
or
xor
fisttp
mov
out
pop
sub
clc
loopne
(bad)
jmp
(bad)
(bad)
push
cmp
inc
sub
xchg
mov
loope
mov
and
xor
rol
repz
pushf
dec
mov
add
jg
paddd
shl
daa
xor
out
stos
mov
push
les
jge
ss
sbb
(bad)
mov
sti
cmp
or
xor
xchg
in
ficomp
sbb
jno
rcr
movs
and
ret
mov
inc
inc
jae
inc
push
aad
enter
xor
ret
outs
enter
xor
adc
inc
rcr
jl
push
jecxz
mov
pop
not
fist
cs
xchg
repnz
daa
ror
sbb
and
and
pusha
mov
movs
mov
outs
mov
sar
pop
bound
addr16
and
xor
jno
dec
or
pop
jb
pop
mov
mov
xor
or
mov
lds
add
jmp
adc
aad
nop
inc
adc
cmp
xor
jne
test
int
sbb
cld
cmp
jmp
or
sub
and
shr
add
and
pushf
out
loopne
mov
in
sahf
in
leave
lds
pop
loope
sub
(bad)
out
fcomp
xor
jmp
sbb
dec
test
jmp
int
adc
(bad)
pusha
push
mov
cmp
sub
xchg
xchg
stos
mov
adc
(bad)
adc
sti
and
(bad)
cmp
or
in
test
push
mov
ds
sub
addr16
ins
cmp
fcmovnbe
or
sbb
ss
mov
mov
sbb
int
add
fisubr
jb
and
jmp
sub
cmp
je
xchg
js
sub
test
jbe
adc
das
jmp
push
cmp
sub
mov
jmp
mov
pop
fidivr
pusha
dec
push
int3
sub
lock
mov
imul
cmps
xor
jne
jno
mov
fs
fdivr
push
clc
cld
jae
xlat
pop
add
adc
popa
push
jns
test
inc
cli
jmp
pop
sahf
std
cli
mov
add
and
and
sub
fistp
and
adc
out
mov
sub
jno
pop
sub
fild
and
popa
sahf
adc
outs
js
icebp
mov
scas
fcom
xchg
cmps
push
jecxz
ror
js
imul
jge
out
xor
ja
mov
ror
dec
test
ja
aas
or
unpcklps
data16
xchg
add
out
out
add
jg
in
mov
jp
adc
mov
xchg
sti
push
inc
movs
(bad)
aam
mov
(bad)
nop
sbb
push
mov
adc
fidiv
std
test
aad
lock
inc
pushf
mov
stos
fistp
xor
or
call
call
stos
in
xor
xchg
adc
test
dec
jns
dec
pop
(bad)
ins
es
jmp
lds
int3
push
sbb
(bad)
cmp
and
or
pop
(bad)
push
adc
fidivr
pop
cld
inc
(bad)
loop
cmp
xchg
loopne
jecxz
cmp
mov
sbb
outs
sbb
sbb
loope
popf
mov
fdivr
test
and
and
and
and
dec
ds
add
pop
mov
jmp
daa
add
outs
stos
stc
push
std
adc
adc
stos
and
pusha
popf
out
mov
mov
add
arpl
push
ins
fisttp
aad
jle
pop
das
fidivr
inc
xlat
jmp
stc
int3
cmp
mov
in
test
lock
in
push
inc
fs
jp
dec
mov
int3
(bad)
or
repz
mov
aad
cdq
adc
int3
or
test
xchg
cmps
jo
or
mov
adc
ins
jae
cli
ror
aad
push
shl
pop
or
test
and
retf
mov
repnz
inc
xor
or
xchg
adc
push
into
aad
mov
xor
or
mov
test
and
and
mov
not
xlat
or
dec
fwait
repz
shr
ins
mov
lods
jnp
les
add
add
inc
pop
mov
pop
sahf
xchg
ror
push
add
inc
xor
and
sti
test
add
inc
push
test
cld
push
jne
dec
sbb
icebp
and
arpl
mov
mov
mov
inc
cmp
jae
add
dec
inc
scas
aad
or
sub
mov
out
loope
mov
movs
jecxz
cld
cwde
sbb
cmc
and
fld
fmul
sahf
adc
inc
gs
div
int
les
outs
fsub
aam
aas
enter
or
into
mov
mov
lock
mov
aas
aam
xor
push
fisttp
enter
sbb
inc
out
cmp
mov
sub
inc
les
call
xchg
(bad)
jge
shr
mov
out
push
cmp
cmp
dec
shr
mov
mov
jns
(bad)
add
pop
xchg
or
jge
add
jp
mov
test
jg
leave
fnstenv
push
fistp
inc
pop
push
pop
(bad)
pf2iw
adc
adc
cmps
dec
in
sub
pop
mov
fcom
cmp
xor
ret
mov
add
or
cmc
or
mov
and
mov
lods
mov
add
sbb
(bad)
cmp
ins
call
or
fild
sub
repnz
cmp
push
repz
cmp
add
sub
ins
cmp
(bad)
mov
cmp
pop
cmp
fild
ins
jne
jecxz
adc
fiadd
add
pop
push
cmp
into
adc
repz
push
xchg
scas
inc
popf
gs
retf
retf
or
jo
mov
jp
jae
inc
sub
mov
mov
inc
pop
test
ss
ficom
fsubr
in
sub
xor
repnz
pop
push
dec
rcr
hlt
cmp
aas
mov
(bad)
jb
or
sahf
jg
call
jns
(bad)
dec
out
inc
cli
adc
mov
sbb
cdq
push
fld
in
in
or
stos
adc
jmp
movs
ror
imul
mov
fnstsw
retf
jae
not
fs
out
movs
jae
loope
xchg
mov
iret
or
data16
xchg
cmp
add
ficomp
mov
mov
stos
cmp
fisubr
daa
jne
xlat
sub
repz
xor
aaa
jnp
shl
out
and
in
jecxz
push
pusha
es
push
xor
push
pop
dec
(bad)
lahf
pusha
inc
adc
mov
pusha
fnsave
or
jge
imul
push
(bad)
mov
ss
movs
outs
aaa
icebp
pusha
mov
and
test
and
cdq
xchg
call
das
ss
or
add
lods
inc
jnp
sahf
rcl
push
cmp
out
in
hlt
xchg
cld
pop
popa
and
rol
cmps
sub
xor
outs
es
(bad)
mov
loopne
inc
or
mov
xor
lahf
in
pushf
ja
shr
mov
lock
aam
(bad)
jnp
push
jp
xchg
add
and
fsubr
outs
xchg
pop
fs
cld
inc
test
add
mov
aad
jge
pop
ret
push
stos
ret
repnz
mov
pop
imul
xor
aam
pop
in
sub
adc
pop
mov
jl
cld
fistp
xchg
mov
jae
aas
sbb
adc
sahf
inc
btc
mov
popa
inc
fwait
ror
stc
mul
aam
cli
sbb
jg
xchg
lock
std
cmps
ins
rcl
mov
or
dec
stos
pop
imul
fdiv
fbld
sbb
inc
jmp
mov
(bad)
retf
mov
jne
pop
mov
(bad)
pop
adc
fmulp
and
cmp
loop
out
inc
ficomp
pusha
mov
repz
or
dec
repz
pop
pop
in
stos
push
push
mov
das
ror
test
stos
test
pushf
or
mov
cmc
inc
mov
shl
sti
les
jmp
ret
scas
aam
mov
inc
rcr
out
imul
mov
aad
sar
push
aaa
inc
pop
mov
sbb
mov
cmp
ss
mov
sbb
inc
jae
or
or
mul
push
out
or
push
out
xchg
stos
jo
pop
out
retf
loop
lea
push
jl
jecxz
push
jmp
push
add
cld
ja
repnz
sbb
cmp
fadd
inc
cmps
fwait
imul
jns
sbb
enter
lock
icebp
inc
ins
loopne
dec
dec
jne
adc
lock
ret
mov
push
pusha
repz
push
push
aad
fucomi
cwde
shr
outs
xchg
xchg
mov
pushf
or
mov
pop
push
ins
ss
pop
inc
inc
push
les
jmp
cmp
call
mov
jne
xor
cmp
rol
mov
adc
out
cmp
repnz
pop
test
or
fcomp
sub
stos
cmc
loopne
mov
dec
push
mov
mov
lock
adc
gs
jl
push
bound
ss
nop
jmp
mov
ds
aam
inc
jno
fidiv
pop
adc
cmc
xchg
xlat
jmp
lahf
push
jo
test
nop
xchg
jecxz
popf
out
xor
mov
add
or
jecxz
xor
imul
cld
js
and
fstp
mov
pusha
bound
add
jbe
retf
mov
inc
push
jmp
int3
aam
dec
ror
mov
pop
jp
fwait
xor
imul
fwait
push
ret
dec
dec
and
jge
jo
fisub
mov
dec
mov
jmp
aas
cmc
inc
sub
sbb
sub
dec
mov
jmp
cmp
mov
push
popf
add
adc
pop
pop
jmp
jecxz
aaa
push
outs
aas
cmp
jle
out
mov
adc
and
rcl
div
push
jl
inc
add
dec
imul
cmp
fstp
out
(bad)
pop
enter
out
ret
inc
jp
inc
xor
and
loop
mov
pop
loop
dec
jecxz
out
and
div
daa
lea
stos
inc
or
iret
movs
outs
xchg
push
mov
and
loope
pop
shr
cmps
xchg
dec
jbe
cmp
test
in
dec
rcr
(bad)
adc
xchg
and
bound
and
das
add
xchg
jbe
lods
movs
jp
sub
pop
movs
xchg
xchg
sbb
lods
addr16
or
adc
jmp
adc
test
stc
mov
mov
sahf
das
sti
jb
dec
xor
outs
(bad)
je
clc
lock
inc
mov
jnp
mov
test
inc
sbb
(bad)
rcr
int3
jg
sub
repnz
into
loop
pop
cmc
push
ss
pop
xchg
mov
fisttp
out
jae
bnd
push
mov
in
test
outs
cmp
and
es
or
test
add
push
xor
cmp
sub
int
xor
mov
dec
pop
push
jae
mov
ins
fadd
lds
adc
push
pop
push
cmps
or
neg
pop
pop
aad
arpl
fcom
xlat
and
jmp
or
sbb
test
mov
inc
jecxz
popf
push
dec
ficomp
add
mov
mov
add
(bad)
in
aam
pop
popa
ins
add
pushf
pushf
jp
sbb
mov
mov
inc
dec
pop
(bad)
aam
adc
adc
ins
mov
call
in
es
cmp
les
movs
ins
mov
sahf
mov
xlat
cmp
sbb
and
mov
mov
retf
sub
lea
xchg
(bad)
retf
mov
(bad)
jns
xor
into
leave
push
xor
shl
add
cld
stos
stos
mov
add
test
fild
jg
sahf
pusha
frstor
cdq
jg
sbb
mov
(bad)
push
int3
jb
push
inc
outs
add
test
aas
ins
stc
cpuid
sub
(bad)
clc
adc
dec
out
push
dec
imul
cld
bound
add
daa
outs
jp
xor
leave
fcmovbe
cmps
jne
fild
xchg
jne
rcl
ss
jns
push
pop
mov
mov
adc
push
ret
sbb
cli
lods
and
das
jmp
dec
cmps
sub
je
mov
out
sti
jecxz
popa
or
or
sub
mov
sbb
ss
test
adc
jl
sub
cmps
dec
inc
clc
icebp
mov
push
popa
add
add
xor
(bad)
pop
test
push
ret
repnz
add
xchg
pop
rcr
adc
adc
arpl
sbb
in
mov
fsub
repnz
js
mov
(bad)
out
fild
xor
sub
pop
cmp
pop
push
jg
xchg
jns
mov
sub
sbb
lods
or
enter
add
dec
sub
sbb
mov
mov
sub
loopne
shr
xlat
in
xchg
add
repz
mov
pusha
out
add
and
fnsave
push
jns
sbb
mov
push
cmp
pusha
dec
les
sbb
dec
jbe
xchg
mov
xchg
mov
sub
test
dec
mov
push
xor
mov
lea
xor
sbb
add
xor
inc
or
lea
ins
popf
cmc
cmps
out
cmp
push
add
shr
std
call
xchg
inc
inc
hlt
and
out
pop
sbb
jne
lods
aam
ds
outs
mov
data16
push
add
xchg
push
ins
xor
aaa
cmp
jb
push
repz
data16
jmp
push
sbb
(bad)
mov
or
dec
outs
mov
sar
daa
jb
push
dec
dec
cmp
and
and
pop
ret
jae
or
mov
lods
push
push
int
xlat
pop
pop
clc
or
pop
jmp
mov
aaa
mov
mov
cwde
add
adc
repnz
mov
fwait
add
lds
rol
adc
jb
cmp
sbb
std
leave
xchg
mov
int3
mov
dec
sbb
inc
(bad)
into
fidiv
pop
bound
int3
vmovd
or
cmps
stos
add
push
sub
ss
add
jne
mov
jge
add
jl
inc
test
sar
jno
mov
adc
pop
daa
int3
add
in
sbb
dec
int3
inc
sub
shr
aam
pop
dec
mov
fincstp
add
bound
mov
ss
fs
push
std
fs
cli
pop
mov
cmps
fisubr
mov
mov
cdq
jge
xchg
mov
in
call
nop
mov
in
in
mov
jg
xor
imul
push
pop
sbb
xchg
push
cmp
or
mov
out
adc
call
inc
mov
xchg
push
mov
dec
and
lock
repz
inc
loop
mov
lods
daa
sbb
das
leave
dec
cld
cs
jae
(bad)
repnz
jb
stos
cmp
pop
push
aam
icebp
pop
adc
out
imul
xor
call
mov
jnp
push
mov
dec
mov
repnz
push
xor
(bad)
sar
or
sbb
inc
cmc
scas
pop
push
jle
and
fidiv
test
mov
pop
pop
sbb
shr
xchg
inc
div
mov
dec
dec
mov
mov
adc
in
inc
fcmovnu
call
add
pop
mov
pop
adc
sub
mov
test
mov
dec
pop
fstp
call
retf
sbb
sti
or
adc
pop
mov
dec
sbb
loope
mov
int
dec
jg
and
mov
dec
leave
sbb
sub
mov
pop
outs
cmp
xchg
je
cmp
test
jle
add
push
pop
jl
loopne
inc
jb
add
aaa
mov
lahf
push
imul
mov
je
enter
xor
outs
adc
sub
pop
rcr
pusha
mov
rol
sbb
jg
je
sbb
(bad)
and
dec
out
lods
fstp
je
stc
sbb
jecxz
ja
mov
xchg
inc
sbb
sub
mov
sbb
scas
aas
push
lea
mov
jmp
cmp
jecxz
or
dec
jecxz
cmp
add
mov
clc
mov
les
pop
ffreep
sub
aaa
(bad)
dec
pop
xor
adc
xchg
mov
out
xor
popf
push
inc
pop
pop
in
sbb
bound
into
icebp
pop
lock
sub
xor
lods
push
mov
or
add
movs
xor
pop
lods
sbb
loopne
int3
xchg
aad
add
pinsrw
pop
retf
mov
cmc
xchg
aad
push
jne
ret
pop
dec
loopne
pop
mov
retf
sbb
(bad)
fnstenv
icebp
dec
xlat
leave
out
cmp
lock
mov
out
ja
add
in
enter
ss
call
xor
jae
ds
sbb
xor
sub
and
leave
jns
add
aam
cs
ret
nop
pop
dec
add
dec
popf
jo
mov
lods
test
out
jnp
cwde
dec
je
adc
sub
cld
push
xchg
cli
jno
xor
int3
in
sub
movs
add
dec
cmc
(bad)
adc
mov
adc
cld
outs
push
adc
pop
call
sbb
add
cs
test
dec
xchg
pop
iret
sbb
retf
or
fstp
mov
adc
stos
cmp
mov
stos
fstp
aaa
call
xor
movs
mov
mov
mov
jmp
or
retf
nop
rcr
jb
cs
xor
jae
mov
adc
jmp
jge
mov
in
mov
inc
mov
add
mov
cmp
mov
ins
movs
in
push
push
(bad)
fcmovu
cmp
clc
bound
xor
mov
punpckhbw
inc
push
pop
pop
or
mov
call
mov
sub
pop
sbb
mov
mov
sub
rcr
aaa
mov
mov
int3
cmp
scas
push
cmp
scas
sbb
dec
lock
aam
cs
push
adc
arpl
call
add
daa
and
stos
repz
xlat
je
jl
mov
aas
clc
jno
add
repnz
movs
lds
and
fwait
sub
test
mov
test
pop
in
fnstcw
test
arpl
push
lods
mov
ins
mov
dec
adc
aas
sbb
adc
jge
xchg
mov
push
cwde
jl
push
(bad)
std
push
sub
inc
shl
mov
neg
xchg
pop
mov
ins
out
dec
sub
mov
pop
(bad)
scas
lods
pusha
adc
rol
in
mov
sbb
mov
mov
arpl
jl
add
cld
jbe
jg
outs
inc
push
sub
test
xor
cmp
mov
fdivr
xor
outs
and
adc
adc
push
bound
dec
xchg
mov
ins
push
rcl
pusha
push
fucom
and
sub
(bad)
fnsave
pop
or
dec
cmp
sbb
leave
sbb
mov
sbb
mov
sub
fdiv
xchg
jle
mov
retf
push
sub
out
shl
je
aas
jge
loopne
(bad)
in
mov
fimul
cmp
sbb
push
push
sbb
(bad)
sti
xor
sub
jl
dec
popa
jp
imul
sub
and
(bad)
jne
popa
(bad)
fisttp
test
jecxz
outs
or
ret
jmp
cmp
vunpcklpd
cmp
push
or
cwde
fistp
cld
jl
(bad)
add
jecxz
pop
cs
ins
ror
jo
loop
xchg
xchg
push
sar
cmp
pop
sbb
lods
xor
xor
imul
xchg
cmc
in
or
sub
xor
inc
out
mov
pop
add
imul
pop
mov
aaa
sub
clc
aas
xchg
mov
daa
xchg
lahf
xchg
cmp
xchg
jmp
jb
lods
mov
pop
clc
pop
stc
call
rcr
mov
dec
jno
hlt
add
(bad)
and
cmp
xor
xchg
(bad)
ins
jg
fsub
push
pop
dec
or
idiv
push
xchg
scas
clc
adc
mov
mov
dec
mov
inc
dec
movs
and
bound
mov
mov
xchg
fist
mov
add
loopne
inc
push
inc
cmps
sahf
and
arpl
mov
mov
fild
and
int3
fwait
add
bound
sub
xor
lds
adc
sbb
pusha
adc
fild
icebp
pop
xor
and
mov
inc
cwde
and
add
mov
and
xor
jo
fstp
mov
(bad)
push
fcmovnbe
stc
sbb
adc
jne
and
addr16
lods
sti
or
je
call
ss
test
ret
cli
(bad)
pop
(bad)
fild
xor
into
(bad)
loopne
in
fwait
jmp
xor
inc
pop
mov
jl
jno
dec
dec
jnp
stc
dec
jbe
popf
fxch
mov
mov
out
stc
pop
ins
stc
(bad)
push
mov
mov
retf
js
shr
sti
ret
rol
movs
pop
mov
fs
cmps
or
cmp
push
popa
out
stos
idiv
sub
or
cmp
cmc
jns
shr
in
fcmovne
mov
sub
mov
ret
xchg
xor
lea
shl
popf
mov
mov
xchg
out
shr
push
dec
cmp
stos
sub
cli
xchg
jge
mov
push
ins
mov
xchg
mov
cmp
dec
push
adc
mov
mov
pop
or
int3
pop
retf
test
nop
rcl
in
inc
fadd
add
adc
dec
sbb
pop
fcomp
movs
(bad)
and
dec
fisttp
or
test
lahf
nop
fsubr
xor
or
icebp
dec
push
cs
popa
jae
sahf
mov
fmul
and
les
mov
dec
mov
pop
movs
in
push
mov
jecxz
dec
and
sub
cmc
pop
jecxz
xor
mov
dec
or
retf
xchg
int3
dec
cmp
dec
dec
popf
retf
or
iret
rcr
jecxz
inc
in
sbb
fwait
ds
xchg
lods
ds
mov
xchg
leave
test
loop
in
aad
push
bound
sbb
test
clc
gs
shl
iret
and
mov
out
out
dec
fst
lods
ret
mov
pop
jb
jne
cmps
sbb
lea
out
mov
sub
test
std
adc
xchg
push
adc
pop
loop
lods
shl
or
sar
shl
lods
es
or
dec
gs
mov
fs
cmp
fst
aas
call
test
lock
aas
sbb
mov
push
dec
dec
jge
xchg
jne
mov
sbb
sbb
mov
sbb
push
daa
nop
ins
or
aam
cmps
ret
ins
jl
dec
loope
mov
retf
cmps
jne
jge
pop
fsqrt
add
push
dec
and
and
cmp
sub
fs
fild
test
xchg
shl
mov
cmps
call
push
(bad)
fidiv
retf
arpl
cs
sbb
(bad)
dec
push
or
mov
repz
xor
fimul
jns
xchg
add
xchg
inc
aad
or
lods
adc
retf
adc
add
ja
cmp
xor
or
pop
movzx
sub
adc
sbb
outs
lea
mov
cmp
xor
out
dec
inc
cmp
push
jp
mov
jbe
cmp
or
mov
stos
jnp
push
xor
dec
sbb
jns
repz
push
pushf
ficomp
add
jmp
fistp
(bad)
adc
jno
shr
adc
push
jle
xor
scas
mov
daa
cmp
xor
enter
retf
ficomp
mov
xchg
(bad)
pop
inc
cmc
mov
and
sbb
mov
mov
movs
jl
imul
and
pop
fbld
out
sbb
add
cmp
or
xor
inc
test
into
sbb
mov
mov
push
inc
(bad)
dec
mov
sub
cli
scas
pop
loop
test
mov
outs
pop
mov
jns
mov
lds
lds
mov
mov
mov
mov
xor
int3
inc
ror
sahf
push
add
cmp
in
xchg
ja
loopne
mov
xchg
adc
adc
cdq
out
cmp
mov
push
scas
xchg
push
xor
aam
and
bound
mov
jmp
cmc
ret
popf
mul
movlps
xor
fdivrp
cmps
fadd
data16
cmps
sub
clc
pop
shl
stc
xchg
dec
sbb
sbb
sub
retf
fs
lahf
jne
ror
push
pop
add
icebp
leave
jge
ror
fxch
test
sbb
push
inc
xchg
xchg
pop
adc
dec
je
es
sub
fwait
gs
fstp
xchg
add
lea
gs
fisubr
mov
inc
xor
cmps
fs
stos
cmp
scas
xchg
mov
adc
movs
pop
xchg
and
inc
push
dec
(bad)
sbb
or
movs
cs
xlat
inc
adc
pop
in
icebp
adc
inc
outs
pop
repz
dec
imul
fidiv
add
aaa
push
pop
xchg
xor
cmp
jmp
pop
pop
test
sti
inc
in
js
into
repz
mov
cs
xor
mov
sbb
push
inc
mov
or
pop
add
inc
jns
or
xor
ss
xor
and
push
cli
xchg
movs
ret
mov
ja
(bad)
(bad)
jmp
mov
inc
and
(bad)
pop
xacquire
es
mov
in
push
aaa
push
mov
js
pop
and
jns
leave
pop
aam
push
pushf
cmp
hlt
mul
test
push
fwait
cmp
ins
mov
inc
sbb
jmp
rol
dec
mov
ja
mov
dec
scas
ret
fwait
xchg
pop
shr
adc
inc
xchg
pop
xchg
jle
fisubr
xchg
cli
test
pop
lods
xor
dec
or
mov
jne
ds
pop
enter
inc
fcom
call
lds
data16
cmp
xchg
pop
pop
push
xor
cmp
cld
inc
inc
add
mov
inc
xchg
mov
sub
inc
jecxz
scas
loopne
add
add
sbb
dec
pop
int3
cmps
scas
adc
stos
cmp
std
cdq
call
push
dec
sbb
sbb
bound
adc
pop
xor
in
jno
out
call
fmul
icebp
rcl
mov
repz
mov
jl
xor
or
ss
push
dec
enter
adc
enter
push
std
mov
ja
cmp
test
movs
jns
mov
pop
pusha
mov
xor
inc
pop
adc
fsubr
sub
dec
mov
fcomp
inc
pop
mov
mov
sbb
test
sub
fstp
int
stos
popf
sub
(bad)
movs
mov
in
add
pushf
movs
and
pop
(bad)
out
in
rcr
sbb
add
sub
inc
fld
cmps
in
movs
in
push
add
leave
mov
mov
dec
push
mov
inc
aaa
inc
mov
lods
es
leave
and
inc
stos
push
loope
xchg
sbb
aas
js
jnp
or
jnp
pop
jae
add
in
in
adc
xlat
cmp
jp
loop
mov
and
ret
out
xchg
push
fiadd
out
or
fcomp
sub
js
pop
cli
push
call
cmp
cmc
(bad)
int3
sbb
(bad)
push
repz
shl
leave
in
inc
xor
pop
icebp
dec
fwait
inc
call
xor
push
push
cmp
fwait
imul
pusha
push
cmc
xchg
arpl
mov
mov
fcom
and
xchg
jl
push
adc
add
sub
fidiv
inc
inc
scas
dec
push
cld
cmps
and
daa
das
dec
cli
inc
fild
mov
ins
(bad)
ds
stc
xchg
sub
sbb
xor
and
popa
inc
mov
fisub
push
jo
cld
dec
nop
jge
inc
push
mov
lods
mov
aam
push
das
adc
jb
mov
je
xor
ins
cmp
inc
xchg
hlt
(bad)
inc
fstp
or
je
aas
adc
mov
cmp
ins
call
cli
ror
jle
ds
push
stc
aas
in
cmp
and
scas
mov
mov
push
hlt
xchg
ss
xchg
mov
scas
dec
pushf
leave
mov
aam
out
test
retf
xchg
clc
je
push
fidivr
xor
push
cmp
pop
mov
mov
xchg
loopne
int
mov
mov
adc
int
mov
outs
jmp
xchg
sbb
loope
push
scas
mov
jle
push
pop
call
dec
shl
scas
push
int3
sti
pushf
repz
cmp
pop
into
aaa
mov
das
push
dec
popf
loope
fcomp
imul
clc
es
data16
cmps
lea
inc
cmp
dec
aas
(bad)
stos
(bad)
pop
lea
ret
test
cdq
inc
leave
xchg
or
scas
retf
lods
mov
lock
or
push
in
loop
call
and
std
das
retf
adc
push
mov
add
pop
add
stos
es
fnstsw
(bad)
mov
pop
outs
addr16
xor
and
add
sub
sbb
cmp
dec
stc
imul
xor
imul
stc
push
sbb
imul
mov
mul
or
mov
adc
xchg
and
rsm
icebp
mov
jl
or
or
inc
mov
mov
or
jnp
cli
ja
sbb
jg
rcl
push
jg
jno
nop
jo
nop
xchg
cmc
mov
mov
and
ins
jg
sub
mov
xchg
aam
adc
cmp
loop
and
mov
jae
xor
ins
adc
(bad)
xor
sbb
mov
js
ret
sub
add
xchg
and
hlt
adc
loopne
mov
aaa
push
in
jecxz
inc
and
pmaddwd
test
add
jg
push
movs
mov
(bad)
dec
pop
mov
retf
aaa
cmp
loopne
xor
data16
cmp
out
jecxz
pusha
in
(bad)
into
fnsave
cmp
test
dec
test
push
call
sub
jl
and
or
inc
mov
cmp
xlat
leave
mov
mov
(bad)
mov
scas
dec
cmp
int
pop
sbb
jbe
clc
and
popa
xchg
movs
adc
addr16
xor
push
mov
aas
cmc
nop
lds
push
ins
test
jnp
js
jbe
ja
jns
in
jmp
dec
jle
xlat
mov
push
jmp
sub
and
lock
push
stc
inc
in
out
sbb
sbb
(bad)
call
sub
xlat
xlat
loop
sbb
and
fist
pop
add
inc
rcr
or
jno
in
stos
push
pop
xchg
push
mov
add
mov
ror
or
shr
mov
inc
sbb
mov
cmp
adc
loop
or
fidivr
sbb
int3
jo
int3
inc
pop
cmc
mov
inc
xchg
xchg
pop
sub
jecxz
iret
nop
icebp
pop
inc
xlat
lods
loopne
out
mov
into
dec
lods
sub
pop
inc
ret
into
mov
repz
icebp
ret
rol
pop
xchg
xchg
adc
fcmovnu
mov
sub
mov
(bad)
shl
ss
stos
mov
imul
push
sar
clc
push
rol
cli
bound
test
push
loopne
jecxz
xchg
jmp
stc
and
inc
fld
mov
jle
cmp
es
add
pop
scas
fwait
xchg
(bad)
push
adc
inc
inc
(bad)
int3
mov
in
mov
xchg
outs
out
dec
call
cmc
mov
leave
adc
mov
popf
(bad)
push
popa
sub
cli
push
dec
dec
daa
sbb
xor
pop
inc
push
fs
cli
xor
mov
sub
push
push
lods
xchg
sbb
movs
jmp
pop
inc
test
sub
sub
push
dec
pushf
sbb
xor
out
retf
sub
fisttp
ss
push
cs
and
mov
scas
ret
sub
iret
xchg
in
pop
ret
(bad)
sub
sbb
fwait
ret
sub
std
jg
mov
cmps
pop
imul
xchg
mov
arpl
mov
(bad)
in
or
mov
lock
jmp
dec
xor
fmulp
fsubr
(bad)
mov
mov
test
push
push
in
int
push
jg
icebp
fstp
imul
inc
loop
movs
inc
cmp
mov
stos
xbegin
jge
retf
imul
les
rcr
ficomp
frstor
fcmovnu
push
ss
not
pushf
aaa
pop
push
pop
pop
mov
push
daa
inc
pop
es
xchg
pop
pop
sub
mov
out
mov
jge
xchg
mov
out
fadd
sbb
ins
rol
shr
mov
mov
lods
repnz
adc
xchg
and
loopne
pop
out
sbb
mov
ins
icebp
jae
sub
mov
call
jo
in
jmp
cld
loope
pop
daa
jb
xchg
mov
cdq
dec
mov
fmul
pop
push
aas
and
mov
or
or
imul
bound
pop
pop
push
push
pop
mov
xor
mov
jnp
inc
xchg
pusha
out
ins
daa
mov
push
add
sub
lds
ins
mov
mov
xchg
out
or
fwait
dec
retf
cmp
ss
in
or
xchg
cdq
cmc
mov
sbb
sub
addr16
sbb
inc
xor
sub
daa
jge
mov
inc
or
enter
sub
mov
or
in
push
add
xor
ret
sahf
pushf
xchg
movs
jae
je
bound
enter
mov
nop
xchg
jge
push
pop
adc
mov
test
cmp
add
xor
lock
or
pusha
(bad)
jb
aam
xchg
arpl
das
cwde
cmp
adc
retf
push
js
or
test
(bad)
loopne
in
sbb
dec
inc
jle
dec
movs
push
cmp
mov
add
ss
push
retf
ret
(bad)
in
dec
adc
mov
enter
mov
cwde
inc
pop
imul
cmp
mov
xchg
pop
mov
adc
dec
popf
sbb
in
push
cmps
cld
sti
sub
mul
push
xchg
add
jne
out
push
xchg
jb
cld
sub
jmp
out
push
push
or
xor
fsubrp
mov
cwde
inc
mov
inc
dec
je
xor
jmp
mov
mov
aad
dec
inc
xchg
and
hlt
mov
es
fdivr
call
or
call
jl
sti
in
icebp
or
mov
fsub
leave
pop
or
xchg
cmp
mov
or
jp
jmp
rol
ja
cdq
inc
fs
lods
stos
outs
adc
sbb
xchg
or
sti
sbb
pop
jno
ss
(bad)
xchg
sbb
push
lahf
dec
pop
xchg
xchg
(bad)
pop
cmp
stos
mov
mov
sbb
cmps
jb
or
mov
push
xchg
outs
dec
lea
sbb
mov
in
sub
stos
in
stos
sbb
je
push
retf
dec
xchg
in
cmps
fadd
or
mov
adc
cs
cmp
adc
mov
add
cmc
cmp
inc
dec
lods
(bad)
pop
pop
cmp
or
stc
neg
cmc
pop
xor
imul
mov
adc
(bad)
cmovbe
movs
(bad)
xchg
cmp
jnp
sahf
add
xlat
rcr
inc
call
pop
jle
outs
loop
iret
lock
sub
sbb
jp
mov
add
or
nop
movs
shl
add
and
cli
stos
lods
test
add
scas
fdivrp
daa
fwait
push
dec
pop
and
push
lods
xor
call
das
jno
dec
inc
call
or
and
shl
nop
sub
lock
out
lods
push
inc
popa
dec
inc
(bad)
div
push
dec
cmps
test
dec
ror
ins
imul
stos
cmps
adc
or
cmps
push
xchg
cmp
aas
xchg
loop
sahf
add
pop
or
out
xor
jg
xchg
loopne
jmp
xchg
fldenv
and
and
xchg
bound
and
movs
jl
adc
xchg
stc
cmp
sub
sub
repz
in
cmps
jb
aad
jmp
dec
dec
push
mov
ja
xlat
inc
cs
cs
cmp
fsub
sub
sbb
lahf
mov
jne
jae
xchg
call
pusha
adc
push
pop
pop
xor
or
and
sub
jp
sar
outs
call
add
or
mov
cs
test
lea
mov
sub
pop
push
push
mov
lods
out
jbe
inc
or
aaa
lods
lock
rol
sub
pop
adc
jg
add
cmp
inc
add
add
xor
xor
retf
fidivr
mov
and
aad
call
loope
leave
xor
mov
add
(bad)
jno
jae
add
add
xchg
cmps
jl
mov
lahf
mov
dec
push
dec
push
imul
mov
mov
test
into
repz
sub
fidiv
jb
aaa
mov
clc
push
inc
repz
(bad)
repnz
imul
jecxz
cmp
mov
add
xchg
lds
test
fidivr
sahf
call
mov
(bad)
ficom
jmp
in
mov
cmp
in
adc
push
adc
popa
(bad)
imul
cmps
hlt
clc
fs
enter
sbb
sub
inc
fisubr
or
retf
pop
hlt
push
ret
mov
xchg
mov
add
xchg
in
arpl
aam
das
pushf
mov
push
xchg
stos
mov
into
jno
fldcw
lods
int3
push
ds
pop
fld
sub
stos
pop
xor
sbb
loope
test
mov
retf
out
add
xor
mov
mov
and
movs
jecxz
sub
xchg
fndisi(8087
add
jg
movs
xor
mov
mov
fild
out
and
test
test
adc
mov
add
(bad)
pop
push
out
pop
sahf
mov
in
pop
std
pop
push
xchg
add
into
outs
xor
std
lds
sbb
test
jno
dec
mov
sub
adc
jmp
movs
test
jae
je
mov
inc
ror
enter
and
adc
lods
popa
out
jbe
xchg
ret
call
mov
bound
leave
mov
call
loope
pop
pop
push
inc
int
int
mov
pop
retf
cld
outs
cmp
mov
(bad)
and
(bad)
and
jl
jae
ins
movs
not
xchg
fs
js
or
mov
adc
std
mov
(bad)
cmp
jnp
sti
mov
push
mov
sub
aaa
(bad)
call
mov
in
sub
mov
imul
not
and
test
mov
push
mov
and
sbb
jl
jnp
sub
inc
adc
fwait
add
hlt
push
icebp
shl
xchg
sahf
scas
(bad)
mov
enter
push
sbb
stc
mov
jb
sti
xor
test
(bad)
inc
pop
push
pushf
or
popa
lods
sbb
cmps
lahf
es
mov
cdq
(bad)
add
cmps
jmp
arpl
sub
mov
dec
inc
mov
test
xchg
js
push
jbe
in
xchg
and
jnp
xor
sub
jnp
out
sbb
add
clc
movs
cmp
je
test
inc
fcomp
adc
push
cmp
cdq
xchg
mov
mov
adc
cmp
jbe
jmp
fwait
xor
cmp
push
xchg
je
enter
bound
adc
mov
rcr
ror
enter
jo
cs
mov
rcl
sub
imul
or
repnz
ins
jecxz
push
daa
push
push
pop
test
sbb
repz
mov
iret
cld
movs
dec
test
lds
xchg
mov
shr
std
dec
out
add
xchg
and
mov
out
imul
nop
dec
jge
ss
inc
xchg
pushf
push
xchg
and
sub
sahf
nop
xor
sub
jmp
sub
ret
test
cmp
nop
adc
fnstcw
sub
sti
xchg
mov
hlt
add
movs
dec
mov
out
clc
std
xchg
popa
push
loope
pop
fistp
mov
xchg
add
adc
call
mov
or
les
jp
pop
pop
mov
add
(bad)
jnp
(bad)
ret
jne
rcr
and
outs
das
lds
pushf
add
je
xor
mov
(bad)
in
xor
adc
mov
mov
cmps
pop
inc
das
scas
cmp
nop
cmp
sub
mov
arpl
outs
div
aam
(bad)
in
(bad)
cmp
inc
ret
sbb
out
xchg
and
jg
in
loope
rol
ins
(bad)
out
xor
rcr
mov
ins
inc
sar
ja
out
arpl
jbe
dec
cmp
loop
sbb
(bad)
retf
call
mov
fs
adc
je
dec
sar
sub
std
rcr
gs
jmp
ret
test
jo
mov
nop
popf
sbb
mov
out
cs
arpl
loope
test
rol
ds
sub
in
shr
ins
lock
mov
loope
inc
mov
popa
and
data16
lea
push
in
and
and
and
add
adc
aaa
mov
ins
sbb
scas
mov
jmp
out
nop
jnp
mov
sbb
inc
xor
pop
adc
sti
pop
sub
aas
aas
jae
idiv
mov
cwde
lahf
call
push
das
and
gs
dec
inc
mov
xor
mov
aas
sbb
(bad)
int3
xchg
sub
adc
aas
repnz
push
mov
mov
push
into
fimul
jl
jmp
sbb
aad
shl
call
(bad)
clc
dec
pop
call
xchg
adc
xlat
add
(bad)
(bad)
ficom
retf
rcl
(bad)
int
xchg
fsubr
xor
pop
cwde
ffree
pop
cli
daa
outs
xchg
adc
and
add
xor
mov
rcl
outs
fidiv
push
mov
(bad)
mov
loopne
data16
pop
jnp
xor
jle
scas
push
sbb
sub
jbe
and
jb
imul
sbb
popa
out
sbb
(bad)
in
xchg
ret
in
das
lods
retf
push
or
fist
cwde
and
in
sbb
int
and
xlat
imul
pop
aad
loop
arpl
dec
(bad)
js
pushf
sub
mov
mov
aaa
add
movs
in
fidiv
pop
cld
xor
ret
idiv
fisttp
jge
rcl
es
xlat
xchg
call
push
cdq
xor
cwde
dec
xor
cmp
mov
call
imul
push
out
jbe
xchg
mov
xor
iret
xchg
and
lds
ss
sub
lods
(bad)
call
jmp
dec
pop
js
stc
push
fwait
xor
sti
sub
xchg
pop
cli
out
add
mov
out
xlat
jle
mov
mov
ja
xchg
movs
adc
inc
rcl
rcl
inc
retf
mov
mov
pop
push
scas
push
cmp
retf
cmp
jbe
in
sbb
pop
mov
in
ret
pop
cmp
pop
and
mov
btc
mov
sub
out
(bad)
nop
or
cmp
push
arpl
adc
outs
data16
dec
jge
stos
retf
xor
inc
fsub
(bad)
jns
pop
daa
ins
icebp
inc
dec
sub
daa
rcl
add
(bad)
outs
imul
aad
cs
dec
adc
cwde
or
cmp
int3
pop
inc
or
xor
cmp
mov
and
ins
cmp
sub
mov
and
(bad)
xlat
mov
sbb
and
fsubr
in
mov
repz
adc
pusha
mov
mov
mov
sbb
adc
shl
xlat
push
and
inc
sbb
xchg
add
stc
sbb
test
jl
cmp
sbb
inc
stos
aas
jns
icebp
lea
add
jmp
int
jle
or
inc
mov
fisttp
mov
mov
movs
dec
and
jge
fldenv
jns
mov
and
(bad)
shl
jl
data16
mov
sub
mov
je
jno
add
(bad)
ss
ror
jge
pop
(bad)
in
push
mov
out
lock
xlat
xchg
xchg
adc
aaa
jl
ficom
and
cmps
in
mov
imul
test
adc
jmp
call
jp
jmp
push
je
mov
mov
xchg
mov
xchg
rcl
ret
sub
and
fstp
dec
addr16
xchg
(bad)
jl
xchg
jb
sbb
(bad)
popf
inc
xchg
xchg
jmp
stos
adc
aam
add
jl
lahf
retf
jg
call
ins
jl
(bad)
cli
add
std
push
cli
push
(bad)
add
push
xchg
pop
pop
jl
add
xor
retf
pop
mov
sbb
cmc
sbb
aas
pop
stos
xchg
scas
fild
popf
jae
mov
or
inc
sub
aas
scas
loopne
pop
jg
idiv
ja
scas
mov
ins
cmp
repnz
push
mov
inc
aam
mov
xchg
mov
or
mul
jp
out
test
mov
imul
xchg
dec
jne
jb
into
test
jecxz
jb
cmc
mov
int
sbb
(bad)
nop
daa
xlat
mov
loop
out
adc
mov
jl
mov
test
adc
push
mov
dec
sub
mov
or
test
dec
cmps
sbb
jg
bound
jp
aas
sbb
fcomp
je
add
dec
jno
mov
mov
in
cmps
ins
xchg
bound
pop
(bad)
data16
pop
pop
add
fsub
jmp
push
mov
not
xchg
sub
cdq
mov
add
xchg
pop
jmp
out
adc
scas
ja
lock
mov
mov
inc
ja
jge
mov
ror
cmp
add
shld
popf
pop
mov
cmp
hlt
hlt
xor
shr
dec
adc
sbb
push
cdq
lahf
cmp
inc
add
mov
scas
cmp
sbb
mov
adc
cmps
push
leave
cmps
mov
call
icebp
mov
pop
pop
je
add
or
cmp
sub
into
dec
inc
stos
rcr
mov
push
mov
fstp
and
xor
push
(bad)
into
(bad)
pop
xchg
adc
pop
pop
mov
cmc
cmps
inc
retf
sub
daa
cmps
js
mov
sbb
lahf
xchg
rol
mov
jmp
dec
idiv
or
push
sub
test
pop
dec
sub
xchg
comiss
cmp
cmps
ins
push
outs
mov
neg
jg
push
push
test
mov
dec
sbb
xor
outs
fsub
(bad)
iret
jle
sbb
or
int3
addr16
pop
aas
test
push
push
fadd
dec
pop
scas
dec
ins
jmp
xchg
addr16
sub
cs
ret
shl
sbb
push
or
in
sub
push
retf
idiv
out
xchg
mov
lea
call
inc
shl
cmp
or
pop
(bad)
ins
sbb
xchg
fwait
sbb
rcl
jg
movs
inc
add
fsubr
js
push
hlt
inc
jo
add
or
ja
jp
sti
pop
sub
pop
jmp
push
and
add
enter
add
loope
adc
push
jne
movs
pop
dec
jl
and
add
fimul
aaa
add
retf
dec
ret
js
xor
ror
dec
xlat
ret
add
inc
cdq
jl
and
pop
imul
ds
mov
and
mov
jb
iret
iret
jge
pop
adc
push
dec
outs
sti
aaa
cs
xabort
out
repnz
jb
add
repnz
xor
mov
or
pop
pop
mov
addr16
inc
movs
and
push
jae
dec
sub
rcr
inc
push
mov
mov
cmp
fnstsw
push
xchg
inc
mov
push
xchg
repnz
push
pop
jle
push
lods
mov
xchg
pusha
dec
ds
xchg
ja
das
pop
jge
mov
pop
inc
xchg
rcl
sbb
mov
ror
cwde
add
dec
in
push
fadd
inc
mov
inc
arpl
icebp
push
in
mov
pop
pop
mov
addr16
fdiv
sar
pop
fimul
adc
scas
aas
ins
retf
into
and
es
mov
fild
add
jns
mov
pop
pop
xor
and
das
rcl
sub
xchg
rol
loop
mov
and
xchg
ret
jg
xor
mov
out
call
sub
test
xchg
add
cli
jle
mov
adc
sub
mov
test
scas
adc
(bad)
in
in
adc
jecxz
lods
loopne
dec
cmp
hlt
mov
inc
add
jbe
xlat
add
imul
jecxz
or
pop
cmp
sti
jecxz
test
jmp
(bad)
cmp
lea
mov
retf
mov
cmp
in
mov
ror
mov
xchg
hlt
dec
movs
pmaxsw
mov
and
add
xchg
dec
inc
popf
or
inc
fisubr
add
call
xchg
pusha
cwde
xchg
sahf
mov
cwde
jno
mov
dec
inc
js
test
dec
jmp
das
(bad)
rol
sub
imul
ds
or
cdq
popa
imul
jecxz
leave
and
mov
and
dec
xchg
daa
jmp
jl
adc
xlat
(bad)
jl
aas
ror
xchg
fld
jl
xor
jbe
test
mov
inc
push
loop
cmp
shl
xchg
paddd
or
ds
and
call
xor
sbb
xchg
(bad)
xor
sub
outs
(bad)
outs
xchg
imul
cmps
jp
pop
inc
cmc
mov
push
ins
pop
lds
imul
jno
out
dec
lock
xchg
leave
adc
xchg
int
ds
pop
push
imul
push
and
jae
out
aas
jae
lods
lods
push
push
stos
inc
mov
nop
and
dec
xchg
sub
cld
add
fbld
pop
mov
int3
cmps
mov
and
cmp
push
xchg
inc
push
pop
stos
aas
mov
xor
push
fld
call
ror
mov
call
sub
leave
nop
sub
les
enter
mov
jg
mov
cwde
cli
push
call
sbb
dec
add
xchg
add
je
ins
mov
stc
dec
jb
stos
mov
lea
sbb
je
cmp
daa
cmp
fcom
outs
cld
pop
mov
dec
int3
mov
ins
ds
or
mov
sub
aad
xchg
das
dec
ds
bound
mov
xchg
inc
(bad)
loope
sub
adc
add
hlt
jmp
mov
test
lds
push
repz
push
ret
or
mov
cmp
add
ror
mov
in
and
push
push
inc
jl
loop
jecxz
push
fnstsw
loopne
add
inc
lods
push
fcomp
mov
or
neg
fwait
out
cmp
repnz
data16
sub
rol
test
retf
jle
data16
jae
loop
aas
lods
and
pop
pop
das
cld
xor
(bad)
loope
nop
add
adc
mov
sbb
jnp
(bad)
mov
push
jns
sub
pop
cmps
pop
xor
or
repnz
cmp
mov
add
adc
mov
in
aaa
lods
es
mov
pop
xchg
out
mov
shr
jmp
add
cmp
pusha
dec
in
cmp
into
inc
push
shr
fist
(bad)
xor
or
xchg
bound
dec
test
into
data16
inc
rcr
das
and
pop
mov
adc
outs
jecxz
or
xor
sti
mov
or
fdiv
sub
dec
mov
pop
jle
sbb
xchg
(bad)
sti
jae
retf
hlt
addr16
es
in
jnp
outs
ins
retf
jbe
(bad)
cs
and
ror
stc
cmp
popf
ins
pop
shr
sub
push
sub
movs
push
cld
sub
in
pop
retf
imul
jne
jo
sbb
mov
rcl
adc
sub
dec
fsin
push
les
xor
push
sbb
sbb
lods
sar
mov
fwait
xchg
lods
call
pusha
sbb
iret
sub
mov
stos
push
cmc
push
sub
mov
or
xor
and
push
js
mov
nop
dec
div
xchg
xlat
jmp
sbb
daa
in
ss
nop
js
pushf
inc
or
cmp
loope
push
fnsave
out
inc
sahf
push
mov
bound
jns
mov
shr
mov
das
(bad)
imul
arpl
jne
std
daa
ds
fstp
mov
pop
enter
or
addr16
mov
ror
shl
dec
cdq
shr
pop
lahf
adc
inc
push
aam
std
pop
mov
mov
jp
pop
and
pushf
aaa
and
jge
and
add
retf
fiadd
fcomp
lahf
xchg
fstp
jmp
xchg
rcr
adc
das
cmps
xor
sub
call
mov
sbb
sub
push
fidiv
xchg
push
je
xchg
ret
daa
sub
mov
adc
inc
into
adc
(bad)
ins
adc
pop
cli
dec
fidivr
fild
sbb
out
addr16
js
cdq
adc
popf
pop
pushf
repnz
cmp
(bad)
outs
inc
push
pusha
loope
jl
mov
jl
bnd
jecxz
sub
push
pop
or
lea
jp
mov
out
iret
mov
movs
movs
lds
fistp
out
mov
lds
pop
add
and
sbb
in
jo
retf
shl
movs
and
xor
add
mov
loopne
scas
ret
push
mov
leave
lods
xlat
adc
mov
ror
clc
lock
loop
icebp
and
xchg
loopne
push
xchg
(bad)
fst
jg
dec
movs
in
(bad)
aas
or
ret
sub
sub
fnstcw
out
jge
adc
adc
xchg
jo
mov
mov
sub
pop
(bad)
cli
jmp
mov
hlt
repz
jl
xchg
adc
sar
and
rcr
push
int
push
ja
pop
push
xchg
pmuludq
std
pop
das
cmps
enter
pop
or
cli
mov
mov
sahf
mov
sti
cmps
pop
imul
cmc
jbe
cmps
inc
addr16
sbb
loop
sub
test
add
mov
add
(bad)
int3
mov
push
add
sahf
shl
adc
xchg
xchg
(bad)
cmp
loop
mov
jae
cmp
mov
test
je
jae
es
lahf
lahf
pop
xchg
shr
mov
cmc
jge
jne
in
cmp
fadd
nop
mov
es
add
xor
inc
mov
pop
movs
cmc
mov
retf
aad
fld
hlt
and
add
sahf
cmps
xor
fwait
sar
adc
sti
xor
in
daa
ins
das
fwait
sbb
je
mov
adc
pop
cmp
mov
stos
push
sahf
retf
xchg
cs
daa
in
sti
or
pop
jp
sbb
xchg
mov
mov
mov
pushf
imul
mov
jmp
jae
add
arpl
and
xchg
cmp
and
shr
sahf
rol
cmp
dec
das
mov
push
mov
jb
cwde
mov
cs
xchg
test
pop
push
daa
push
sbb
cmp
or
mov
pop
mov
daa
mov
jb
daa
rol
push
lods
fcom
imul
adc
or
ds
sub
inc
int
fisub
mov
in
test
mov
pop
gs
xchg
dec
mov
das
call
sub
ins
push
jecxz
xchg
inc
test
and
lock
addr16
mov
test
ins
or
xchg
jno
scas
jmp
push
dec
jle
cwde
cmp
mov
mov
cmp
push
das
mov
inc
pop
jb
push
xor
jle
call
cmc
push
mov
xchg
jb
ds
mov
dec
mov
jno
jmp
shl
mov
enter
mov
sar
dec
ja
xchg
inc
fidiv
(bad)
cmp
sti
jno
mov
push
xor
dec
(bad)
dec
int3
fnstcw
(bad)
mov
inc
aad
das
ins
push
mov
dec
cmp
retf
fldl2e
(bad)
inc
mov
cmp
sbb
cmps
test
sub
push
fdiv
and
aam
ja
pop
neg
xlat
push
sti
fimul
retf
push
frstor
cmps
fnstsw
sub
xlat
lods
std
mov
and
(bad)
adc
aam
aaa
out
adc
jg
lods
test
pop
sbb
jae
or
and
shl
cmp
or
mov
xchg
test
outs
and
cmp
repnz
push
push
sub
aam
jae
push
in
sbb
cmp
xchg
cld
push
jg
and
sub
cmps
jns
retf
xchg
stos
mov
pop
mov
push
push
inc
mov
call
(bad)
ds
jl
fnstcw
sub
cmp
mov
pop
push
test
mov
loopne
call
leave
les
pushf
(bad)
jge
inc
popf
mov
adc
push
pop
sub
mov
(bad)
push
retf
pop
fsubr
idiv
sbb
mov
xchg
inc
shr
test
push
push
aad
aas
sub
ja
jmp
and
jp
jmp
cmp
es
mov
xchg
lea
adc
rcl
into
mov
pop
cmp
jge
retf
mov
sysexit
inc
inc
and
pop
out
fbld
mov
pop
and
jg
movs
in
dec
xor
pop
xchg
loope
inc
sub
xor
in
iret
push
inc
sub
cmp
mov
jnp
adc
aas
sbb
add
test
xor
push
fnsave
mov
adc
dec
je
adc
jg
sub
cmp
movs
icebp
fs
fist
pop
inc
mov
pop
xlat
pop
mov
xor
jge
or
jp
popa
or
sti
lods
shr
push
mov
mov
mov
sbb
out
out
das
in
or
push
stc
xlat
dec
sbb
lock
out
cmps
loope
push
fldenv
mov
psubusw
or
mov
(bad)
movs
inc
and
mov
push
cwde
loop
add
xor
push
lea
pop
jns
lds
mov
push
aad
cmp
cmc
jno
into
or
mov
dec
mov
repz
cmp
push
fcomp
jp
call
cmp
push
push
lock
adc
or
sub
aam
sub
dec
mov
imul
mov
push
mov
adc
jl
jnp
add
cmovle
outs
movs
xchg
stos
xchg
retf
rcr
push
or
aad
ret
fisubr
stc
jb
ins
adc
sub
cwde
mov
test
cwde
xchg
jecxz
or
jne
push
jnp
test
pop
pop
repnz
jno
in
lods
in
mov
sub
sub
call
aas
cs
rcr
ret
nop
aas
inc
pop
enter
icebp
jns
xchg
push
sbb
xchg
dec
call
clc
test
mov
xor
in
cmp
xchg
push
jbe
or
retf
loope
mov
bound
pop
pop
jg
jns
cmp
out
call
adc
cs
ja
ror
adc
jecxz
(bad)
add
jns
stc
sub
into
pop
or
retf
dec
inc
and
pop
dec
aaa
sub
pusha
out
xchg
nop
adc
jmp
sti
retf
popf
jmp
cs
fst
push
pusha
scas
cmps
stos
mov
imul
fdivr
mov
jne
fs
sub
sub
outs
js
scas
pushf
sbb
inc
cmps
pop
mov
sub
xchg
and
mov
cmp
iret
jg
lahf
cmp
jmp
push
outs
dec
lock
cdq
xchg
push
cmp
push
add
adc
xor
xchg
adc
pusha
push
out
cmp
into
popa
out
imul
fisttp
shr
in
scas
jg
inc
ss
jmp
(bad)
arpl
sbb
nop
fst
pop
fwait
iret
inc
pop
jo
loopne
dec
inc
lods
jnp
cmp
cmps
sbb
and
lea
push
shl
rcr
(bad)
(bad)
je
xor
push
xor
int
xor
push
sbb
pop
jo
in
dec
sbb
aas
mov
and
pop
mov
adc
or
add
inc
rol
mov
aas
pusha
inc
imul
mov
push
jecxz
mov
dec
sub
xor
(bad)
pop
jmp
dec
shl
ror
lss
adc
push
push
inc
xor
inc
push
leave
rol
es
mov
mov
pop
pop
mov
sbb
fnstenv
mov
adc
inc
inc
fdivr
cld
jp
jae
clc
fmul
fiadd
out
bound
iret
sbb
or
imul
xchg
popf
jl
add
cmp
in
adc
test
fwait
xchg
inc
cmp
cmps
or
mov
pop
pop
mov
adc
push
inc
push
in
push
(bad)
(bad)
aad
dec
retf
out
enter
ret
cmps
pop
mov
pop
jb
and
es
push
mov
sbb
mov
add
fstp
cmp
adc
add
inc
mov
aaa
cli
add
lds
fistp
add
aam
not
out
mov
fmul
ficomp
and
test
push
nop
ins
nop
jl
mov
lods
out
stos
mov
xor
jl
pusha
push
outs
out
xchg
push
dec
(bad)
retf
adc
mov
sbb
(bad)
and
cmp
test
les
inc
xchg
pop
call
and
imul
jg
(bad)
(bad)
lods
ins
ret
and
mov
dec
test
sub
enter
sbb
jge
nop
iret
ror
dec
ins
ss
mov
push
addr16
lods
push
xchg
jns
sub
in
stos
sub
mov
xchg
mov
hlt
js
adc
mov
adc
loopne
or
js
jbe
and
inc
call
ins
dec
jne
arpl
push
push
fwait
add
or
imul
dec
mov
xchg
jae
les
jl
cld
test
xor
add
(bad)
xor
pop
xchg
jge
pop
xlat
mov
dec
or
add
sti
push
mov
push
add
out
es
sub
pop
(bad)
aad
pop
(bad)
dec
ds
mov
inc
mov
outs
mov
(bad)
sub
inc
aam
lods
(bad)
push
(bad)
adc
pop
or
fild
mov
imul
sub
lods
inc
xchg
jne
sti
add
mov
popa
adc
jmp
bnd
adc
sahf
cmp
push
aaa
lds
mov
xchg
test
mov
popa
mov
pop
fs
sub
leave
iret
cmp
mov
jmp
or
dec
hlt
push
pop
fxch
push
pop
and
outs
cmp
adc
(bad)
pop
(bad)
jmp
jp
xor
popf
and
out
xchg
imul
sub
int
cmp
push
xor
fpatan
mov
sbb
arpl
xlat
scas
dec
ins
mov
sbb
and
add
sub
jecxz
xchg
fiadd
add
inc
lods
push
stos
repz
fst
icebp
cs
rcl
loopne
ret
cmps
loopne
sbb
or
addr16
dec
test
or
js
add
dec
and
dec
ror
addr16
rcl
adc
data16
cs
push
test
sbb
push
fnsave
js
div
call
sub
(bad)
inc
enter
rcr
mov
sbb
mov
lods
xor
push
xor
cmc
pop
jns
jbe
test
call
(bad)
jmp
in
pop
mov
shl
adc
arpl
push
stc
push
pop
test
cmp
cmp
sbb
in
cs
cmp
mov
sbb
(bad)
popf
push
dec
test
jbe
mov
mov
retf
pop
or
rol
int3
scas
sbb
lods
xor
dec
push
or
dec
mov
mov
rol
fld
ds
push
and
push
pusha
clc
pop
std
inc
dec
mov
sbb
mov
pop
xor
nop
test
inc
icebp
cwde
adc
inc
fnstenv
ror
mov
gs
gs
loopne
fiadd
or
repz
fwait
xchg
xor
aas
pop
nop
xor
scas
mov
mov
jb
les
jle
jo
and
dec
mov
inc
dec
popa
sub
adc
sub
xchg
pop
sbb
jns
aam
jns
push
pop
sub
inc
and
cld
push
test
push
push
test
scas
test
bound
popa
or
mov
clc
sti
icebp
adc
mov
mov
(bad)
mov
outs
pushf
fmul
outs
int
hlt
and
(bad)
add
mov
aaa
(bad)
pop
ret
pcmpeqw
pop
aad
or
inc
out
xchg
cs
loope
mov
jne
shl
fidivr
mov
repz
test
sbb
fs
out
and
adc
fist
jmp
aad
jb
(bad)
push
pop
dec
jl
shr
jne
mov
frstpm(287
or
sub
pushf
addr16
dec
std
sub
xchg
repz
sti
mov
not
shl
aad
in
mul
ror
push
adc
adc
jbe
push
mov
fldl2e
dec
or
jg
jbe
movs
or
movs
fwait
jnp
adc
sbb
in
mov
or
xchg
lea
loope
mov
aam
test
mov
adc
daa
cmc
(bad)
lods
cmp
add
and
adc
dec
sub
mov
lods
xchg
cmp
mov
mov
ss
fbstp
ins
mov
sub
sbb
in
cmp
xlat
pop
ins
pop
aam
dec
rol
fcomp
js
sub
or
int3
xor
(bad)
fcmovnu
mov
repnz
popa
mov
cmps
push
xchg
dec
imul
mov
adc
pop
shl
sbb
(bad)
cli
lahf
pop
jl
(bad)
fnstsw
mov
dec
xchg
add
and
shl
daa
icebp
lods
push
retf
movs
xchg
pop
out
pop
xchg
pop
cmp
mov
jmp
xchg
cmp
pusha
jns
xor
retf
push
ret
out
enter
sub
jne
addr16
outs
cmp
mov
aam
sbb
push
fdiv
ins
dec
fmulp
fwait
arpl
jmp
mov
add
and
(bad)
cmps
jb
movs
cmc
and
xchg
add
mov
fsub
push
xchg
mov
mov
out
mov
jecxz
push
or
mov
xor
mov
cmp
xlat
rol
jmp
shl
and
pop
xchg
fimul
(bad)
add
out
pop
sub
in
cmp
cmp
test
dec
std
xchg
sar
push
push
movs
adc
adc
leave
mov
mov
xor
gs
xlat
xor
push
cld
mov
sahf
pop
fwait
cs
fwait
xchg
mov
inc
stos
jnp
lods
lds
inc
adc
and
push
popf
out
scas
or
push
jg
lahf
mov
leave
jmp
or
bound
mov
xchg
xor
lahf
inc
imul
int
sbb
pextrw
dec
dec
cmc
cmc
out
cli
jecxz
fbstp
mov
add
adc
ds
neg
fnstcw
bound
add
cmp
dec
pop
loope
jae
sub
outs
pop
fiadd
xor
aaa
sub
sub
ins
(bad)
fs
dec
(bad)
dec
pop
data16
out
xchg
adc
adc
aam
xchg
jmp
lods
pop
or
dec
xchg
add
out
fs
push
cmp
out
cmp
popa
sub
mov
add
xor
jo
aam
lods
scas
repnz
ss
adc
sub
or
cmps
ficom
dec
out
je
and
mov
mov
repnz
daa
imul
cwde
and
mov
imul
xchg
inc
test
fimul
mov
lods
mov
movs
push
(bad)
popa
stos
xchg
mov
add
aad
loop
(bad)
not
jg
loope
push
jno
or
pop
fprem1
sbb
and
inc
xchg
scas
nop
(bad)
cli
mov
int
mov
cwde
xchg
bound
adc
cwde
sbb
dec
lods
fisub
or
mov
xor
(bad)
push
div
aas
imul
int
add
cmps
mov
inc
outs
(bad)
mov
mov
or
jp
jmp
push
sahf
jnp
je
add
jns
cmp
xchg
jmp
mov
imul
mov
push
sbb
add
xchg
movs
add
inc
ins
js
pop
call
inc
cmps
aaa
sbb
mov
xchg
pop
in
pop
jne
ins
std
ret
inc
jle
fnstenv
dec
(bad)
cmps
adc
jmp
cmp
push
or
mov
ss
mov
mov
daa
mov
mov
lds
aaa
mov
lock
das
ja
call
ret
imul
jne
mov
repnz
in
mov
cmp
push
push
ret
test
and
int
out
xor
mov
inc
inc
sub
clc
sub
stc
adc
cmp
sbb
xor
dec
fistp
je
(bad)
idiv
hlt
sbb
aas
xchg
xchg
aam
in
pusha
or
push
inc
loopne
adc
into
mov
ss
loop
add
rcr
lods
hlt
push
jbe
mov
mov
out
arpl
jmp
xchg
mov
adc
cmps
out
mov
mov
sbb
sar
ds
sbb
xor
ins
sub
or
ja
or
jp
pusha
inc
ins
sub
mov
mov
jl
adc
cmp
pop
xchg
das
aad
test
imul
pusha
stos
pop
bound
jg
jmp
xchg
rcl
shl
sbb
pop
lods
inc
xchg
arpl
test
adc
mov
adc
fcom
mov
retf
inc
data16
jecxz
shl
out
in
test
inc
pmuludq
jle
inc
pop
inc
lds
mov
push
mov
gs
enter
sub
out
fiadd
add
xchg
fsub
push
arpl
jg
dec
call
aad
popf
sub
in
pop
cwde
rcl
mov
loop
dec
out
sub
inc
into
fmulp
mov
push
rcl
jo
jmp
int3
inc
iret
fadd
mov
push
xchg
cdq
pop
sub
icebp
push
gs
popf
jg
cmp
cmp
fs
out
lock
mov
adc
mov
out
out
inc
cs
nop
push
fist
in
pop
aad
div
jb
dec
mov
icebp
push
test
je
(bad)
out
and
arpl
ss
add
xchg
dec
and
sub
lahf
sti
adc
ds
call
fwait
aas
leave
pop
push
push
(bad)
pop
repnz
test
inc
retf
sub
pushf
stc
cmp
adc
rol
leave
adc
stos
int3
shl
fcomp
les
jl
jne
push
scas
stc
cmps
mov
in
sub
xchg
cmp
call
cdq
mov
lods
js
popa
retf
imul
stos
out
push
adc
nop
rol
cmp
ds
bound
sbb
cmp
xor
mov
jge
add
gs
push
arpl
and
repz
pop
into
les
lods
mov
nop
(bad)
sbb
je
int
push
imul
push
inc
cmp
jne
je
sbb
sbb
dec
mov
cwde
rcr
jecxz
and
adc
mov
pop
div
xchg
adc
jmp
fwait
rcr
or
mov
adc
dec
inc
test
jecxz
cld
add
cmps
xchg
shl
test
test
sub
inc
jae
pop
fmulp
push
xchg
xchg
sbb
xchg
xchg
jmp
xor
sbb
nop
add
and
jl
dec
xor
rcl
cld
ds
out
inc
mov
sub
xchg
add
arpl
jmp
stc
pop
shl
dec
cwde
mov
push
sub
cmps
std
ins
push
lods
loope
test
daa
mov
jge
or
loope
adc
das
mov
ret
or
loope
fsub
scas
popf
hlt
test
mov
mov
jbe
mov
dec
jge
mov
sub
mov
and
pop
or
xor
xor
jecxz
test
mov
mov
call
ja
add
push
cwde
jle
xchg
jmp
or
cmps
push
cs
sbb
xchg
pop
add
out
push
ja
fsubr
in
addr16
call
gs
mov
pop
jnp
call
nop
dec
hlt
dec
movs
cs
dec
call
es
fldlg2
pop
loop
aam
adc
repnz
jns
cmps
add
mov
ins
jbe
test
sub
scas
xchg
fdiv
adc
inc
adc
xchg
add
xor
mov
lods
add
(bad)
cli
in
jne
add
pop
xchg
test
or
lahf
fistp
and
mov
arpl
push
arpl
dec
or
imul
jp
push
test
jmp
add
mov
in
dec
pop
in
jno
loope
aad
adc
pop
shr
jmp
adc
jmp
inc
mov
xchg
dec
jbe
xchg
out
pop
push
pop
jnp
lods
xor
rol
int3
cdq
lds
ds
cmp
pop
inc
inc
addr16
hlt
lahf
mov
jmp
xchg
sub
or
stos
adc
mov
adc
in
jl
out
and
mov
mov
lock
jno
add
cdq
call
fmul
out
xchg
jo
cwde
xor
push
push
int
add
mov
out
mov
lock
add
sbb
mov
fs
les
stos
lea
push
xor
aaa
and
jmp
js
and
repz
jmp
hlt
cmp
call
cmp
scas
mov
or
pop
stos
cld
mov
outs
push
mov
mov
shr
dec
jecxz
sub
nop
mov
leave
dec
inc
xchg
ret
test
xchg
sbb
xor
inc
call
nop
xchg
mov
lahf
sub
sbb
inc
mov
xchg
jo
daa
shl
lock
jbe
jo
lds
mov
dec
jge
imul
jle
jmp
pop
push
sbb
xor
jg
cmp
fiadd
dec
adc
push
fwait
adc
dec
jns
es
add
jmp
outs
jns
ins
ins
in
xchg
ret
add
push
scas
inc
mov
inc
cmp
sbb
(bad)
shl
mov
xlat
inc
stos
mov
sub
inc
xlat
lods
cmp
call
mov
mov
stos
xchg
mov
sbb
xchg
mov
xchg
xor
jle
call
sub
shl
in
imul
xor
jl
test
xchg
aaa
jle
rol
test
push
int3
fucomp
xlat
push
and
jecxz
(bad)
lock
jmp
movs
(bad)
imul
mov
in
jmp
add
mov
dec
sbb
cmps
jmp
call
jmp
inc
xchg
adc
xchg
mov
jno
fadd
adc
leave
(bad)
aad
in
leave
aas
mov
adc
xchg
jnp
repz
movs
mov
jl
int
repz
and
pop
leave
daa
push
sub
popfw
or
sub
addr16
pop
hlt
push
sahf
fmulp
out
(bad)
adc
cmp
mov
xor
jae
test
dec
mov
xor
call
jnp
shl
fisttp
sub
mov
test
pop
sub
mov
mov
ins
jbe
cmps
ins
mov
dec
dec
or
in
push
cld
push
fnstsw
inc
outs
out
lds
jmp
fisttp
adc
inc
jo
(bad)
xor
adc
pop
or
cs
mov
push
ins
pop
add
loopne
or
cmp
mov
sbb
outs
test
fisubr
and
sbb
push
cmp
js
or
push
inc
or
and
cld
in
dec
pop
mov
jno
jo
mov
sahf
pop
and
ror
addr16
nop
and
cmp
in
dec
push
movs
call
loopne
sbb
dec
not
jp
ficom
call
mov
call
xchg
mov
ror
or
push
scas
scas
fdiv
mov
jae
sub
add
jmp
dec
js
jne
inc
cmp
addr16
imul
iret
stc
sub
jbe
add
adc
jno
ja
mov
inc
das
dec
mov
jmp
and
inc
mov
jae
xchg
mov
call
and
mov
adc
adc
cmp
push
jno
dec
lock
movs
(bad)
sahf
mov
adc
mov
call
sub
in
addr16
sub
lahf
fild
inc
out
xor
pop
(bad)
ret
jb
mov
gs
jbe
fdiv
pop
and
sbb
test
mov
xchg
aam
push
add
addr16
fisttp
popa
popa
or
out
add
out
and
cmp
push
call
clc
pop
sub
pushf
cwde
xor
scas
pop
pop
push
jg
cmp
cs
inc
fdiv
icebp
fdivr
jno
and
xchg
fidivr
and
aam
or
cmps
out
mov
scas
push
cs
addr16
dec
(bad)
push
inc
or
fwait
test
outs
sub
bound
mov
adc
adc
int3
aad
push
mov
ret
xor
int3
mov
and
sbb
xor
jno
mov
int3
push
lods
push
mov
aas
mov
add
adc
cmps
xchg
mov
sub
stc
mov
loopne
push
pop
jmp
pop
sbb
xchg
cs
mov
lods
xsha256
cmps
aad
rcr
pop
adc
mov
push
call
xchg
mov
outs
or
cld
sbb
cmps
out
dec
sti
sahf
push
shl
enter
shl
mov
inc
(bad)
xor
inc
sub
push
mov
xor
mov
cmp
mov
js
movs
sub
neg
mov
cli
push
sahf
xchg
inc
pop
retf
fld
sub
adc
inc
(bad)
push
sbb
push
(bad)
(bad)
xchg
sbb
call
xlat
push
cli
xchg
cmc
outs
outs
cwde
xchg
retf
or
mul
fs
mov
hlt
jbe
call
push
leave
dec
sbb
cmp
cs
lods
cs
cmp
xchg
push
and
ret
inc
and
or
jbe
cmp
imul
jle
leave
cmp
xor
mov
repz
pop
outs
add
push
sub
jl
cdq
sub
aad
dec
sub
loopne
cli
movs
clc
imul
xchg
sar
dec
sub
mov
and
shl
push
popa
test
adc
loop
ret
mov
and
lock
dec
in
ds
jmp
dec
inc
cdq
push
adc
clc
loop
xchg
sar
mov
and
add
ss
pop
out
retf
aas
and
sbb
stos
push
xchg
jb
and
into
push
paddsb
sbb
jo
mov
adc
mov
xchg
cmps
dec
pushf
mov
sbb
xchg
addr16
xlat
out
sub
mov
iret
ret
cmps
imul
xchg
nop
hlt
xchg
call
push
lock
mov
xchg
xchg
hlt
or
sbb
bound
in
(bad)
rol
sub
in
xchg
adc
mov
mov
and
loope
fwait
push
or
test
ret
pop
call
pop
xchg
aam
int3
pop
enter
cmp
mov
mov
xor
aaa
je
mov
repz
loop
mov
cmp
add
fnstsw
mov
movs
push
and
and
sbb
cmps
(bad)
jge
inc
ins
retf
gs
in
jne
iret
and
push
push
sbb
cs
inc
scas
ret
gs
mov
loope
addr16
aad
stos
cli
ret
ror
mov
xchg
aad
and
(bad)
test
push
out
test
out
fcom
arpl
imul
xor
push
inc
xor
retf
fld
xchg
dec
mov
cmps
shr
ins
test
outs
cld
repz
cmp
clc
mov
call
js
mov
shl
sub
push
sar
cmp
xor
lea
jmp
xchg
out
sbb
mov
loopne
or
dec
adc
aaa
(bad)
movs
mov
ret
icebp
jno
in
sbb
mov
ficom
loopne
cmp
xor
aad
xchg
in
sar
jmp
xlat
shr
pop
sbb
cmp
nop
mov
sub
(bad)
jmp
inc
les
in
hlt
stos
push
xor
inc
push
cwde
mov
movs
adc
lods
jecxz
push
cmp
and
inc
popa
jb
aam
lods
dec
les
ret
adc
jg
fnstsw
cmp
test
test
test
cmc
pop
jae
jp
cmps
inc
rol
int
adc
adc
mov
int3
out
cmps
mov
(bad)
jne
sbb
data16
xchg
mov
dec
pop
jl
xor
jns
ret
cmp
je
inc
int
mov
cmp
inc
call
(bad)
sbb
dec
jo
fild
loop
rol
popf
retf
mov
lahf
push
std
jp
cmp
mov
xchg
movs
mov
dec
mov
or
or
dec
mov
jmp
int
adc
fist
push
ins
jmp
jp
retf
in
xlat
aaa
movs
push
jl
daa
iret
mov
dec
mov
xor
push
jmp
cli
sbb
scas
out
inc
test
push
ds
cs
scas
jns
call
mov
mul
fiadd
les
mov
rcl
cmps
enter
mov
xor
(bad)
fsub
sti
cmp
xor
and
aaa
jl
mov
imul
dec
and
dec
dec
nop
mov
jmp
pop
cmps
pop
sahf
or
mov
test
push
shr
loopne
adc
ret
(bad)
and
cmp
lahf
les
loop
sub
cmp
clc
pushf
push
mov
inc
sbb
mov
sbb
pop
dec
add
sbb
cmps
movs
pop
jns
push
or
jbe
mov
out
xchg
xchg
jne
cs
pop
(bad)
mov
dec
inc
push
xchg
mov
loop
fistp
and
pop
pop
imul
or
xchg
xor
cwde
cmp
push
(bad)
es
iret
or
cmps
cmp
add
ja
cmps
mov
sub
ror
je
sahf
hlt
or
jo
enter
push
or
sub
ftst
pop
pop
mov
gs
jbe
fwait
dec
shr
cmps
out
push
sbb
in
and
ja
aaa
cs
sub
jnp
adc
fimul
out
mov
add
add
bound
add
push
ret
ret
mov
inc
dec
pop
xchg
(bad)
jne
pop
jb
int3
mov
mov
push
lahf
fs
(bad)
rcl
retf
push
ret
scas
sub
dec
sbb
mov
or
dec
mov
pushf
and
inc
sub
stc
mov
aaa
and
mov
xchg
push
and
mov
pop
in
and
lods
mov
test
(bad)
push
mov
fist
mov
pushf
stc
arpl
xchg
xchg
fidivr
jmp
lea
dec
or
mov
(bad)
add
sti
loope
mov
stos
xor
and
fdivr
aaa
in
inc
dec
cmp
aam
loopne
scas
and
pop
mov
stos
push
mov
aam
lahf
pusha
jnp
int3
sub
adc
adc
out
or
mov
aaa
outs
dec
xor
mov
lods
enter
push
sub
inc
sub
add
adc
cmp
jne
mov
mov
cmp
aad
mov
sbb
lods
cld
push
and
cmp
adc
cmp
shr
mov
sub
xchg
mov
pop
fidivr
in
push
fistp
mov
in
and
fst
es
mov
pop
sahf
nop
mov
lods
inc
aas
jle
add
lds
xchg
adc
push
ret
sbb
pop
inc
leave
mov
cwde
push
add
xor
or
sub
jmp
push
(bad)
adc
js
and
out
xchg
jmp
dec
xchg
dec
xor
mov
not
movs
mov
lea
imul
cs
cmps
dec
pop
sbb
mov
jmp
ja
xor
in
adc
arpl
sub
pop
mov
add
mov
pop
out
mov
inc
push
pop
xchg
je
(bad)
loope
movs
mov
daa
inc
inc
sahf
xchg
sbb
pop
jae
mov
mov
dec
cmps
adc
xchg
or
mov
push
and
loop
fcom
ins
cmp
(bad)
jb
and
out
jbe
adc
push
outs
pop
les
push
jecxz
not
in
jne
mov
xor
je
jge
jg
in
add
adc
cmp
sti
push
push
movs
xchg
stc
cdq
fbld
into
lahf
int3
leave
rcl
daa
pop
popf
mov
jl
dec
adc
cmp
mov
inc
lods
xchg
mov
dec
ja
push
nop
xchg
mov
inc
jge
xor
cmp
push
or
fild
mov
sti
hlt
fsubr
push
mov
xchg
nop
sti
leave
sub
scas
mov
fadd
add
addr16
mov
stos
ins
mov
or
and
add
fcmovnb
mov
xor
cmps
mov
in
pop
rcr
fist
cmps
cmp
aam
mov
enter
stc
fcom
add
out
cmp
jb
mov
div
imul
out
rol
mov
fdivr
aaa
es
dec
lds
or
sbb
shr
push
pop
jmp
fwait
pop
ins
sbb
loopne
pop
mov
xor
cs
out
out
dec
(bad)
loopne
out
mov
sldt
shr
call
int
je
ret
repnz
adc
mov
cmp
xor
outs
mov
out
mov
(bad)
cmp
(bad)
dec
(bad)
ds
fld
pushf
mul
into
leave
pushf
ret
sbb
mov
inc
out
stc
sti
mov
test
sub
int
(bad)
mov
xor
jmp
cli
inc
cmp
push
jp
mov
fcomp
mov
ds
xchg
shl
push
clc
mov
jp
cmp
sub
je
cmps
inc
(bad)
and
je
lock
adc
mov
es
mov
stos
and
inc
add
dec
in
call
cmp
add
pop
mov
push
iret
(bad)
xor
gs
out
xchg
mov
xchg
dec
mov
test
sbb
aam
in
inc
addr16
jbe
ins
pop
jp
jle
das
aas
pop
movs
mul
dec
jmp
or
push
(bad)
adc
mov
(bad)
xor
mov
inc
ss
jmp
sti
(bad)
out
adc
iret
and
jl
adc
mov
mov
leave
nop
cmc
int
push
pop
fldenv
clc
cwde
fcom
mov
out
sbb
enter
sti
dec
gs
imul
or
shr
mov
mov
push
sbb
mov
jmp
shr
cmp
fcmovnu
add
or
push
shr
aad
ja
(bad)
loopne
sub
ins
dec
or
ficom
sar
jae
out
push
pusha
or
mov
jl
lock
loopne
test
dec
mov
push
movq
rcl
mov
sbb
aas
shl
and
div
mov
mov
xchg
mov
pushf
sbb
sbb
outs
dec
push
cdq
pop
jmp
es
popa
movs
fld
aas
rcr
xchg
push
inc
idiv
aad
inc
les
leave
lar
or
fsub
(bad)
sbb
ret
stc
out
jp
mov
inc
and
mov
cld
inc
aaa
ror
jp
jecxz
popa
mov
call
sbb
xchg
adc
repz
or
pop
sbb
mov
xchg
mov
outs
jo
sbb
(bad)
shl
xor
mov
adc
(bad)
and
lods
mov
or
jmp
dec
ins
icebp
mov
jmp
repnz
cmc
mov
push
jbe
inc
mov
push
inc
jmp
jo
xor
cli
in
add
imul
(bad)
cmps
nop
xchg
xchg
cwde
jb
sub
mov
fnstenv
aad
inc
out
mov
mov
mov
push
pop
or
pop
sti
and
out
mov
adc
mul
out
xor
jbe
push
jmp
cld
xor
into
out
ret
imul
shl
and
mov
repnz
popa
nop
clc
mov
js
mov
mov
jo
or
(bad)
cs
xlat
xchg
int3
imul
retf
sbb
and
imul
pop
(bad)
test
add
stos
(bad)
lea
sti
add
cmps
add
cwde
push
js
test
cmps
jmp
push
js
sub
xor
(bad)
das
cmp
inc
ficomp
imul
adc
adc
dec
jl
aam
shr
mov
jle
in
inc
shr
cmp
data16
push
stc
push
popf
pop
fld
dec
cmps
mov
sbb
sub
jne
in
push
fld
or
loop
call
call
push
push
cmps
dec
and
and
dec
xchg
pop
pop
push
cld
xchg
fist
xor
test
push
mov
push
mov
add
pop
pop
and
xchg
or
aam
clc
cli
jns
sti
(bad)
hlt
outs
pop
mov
dec
pusha
sub
pushf
iret
clc
pop
call
ret
imul
mov
pop
sbb
stos
fwait
mov
push
(bad)
mov
mov
(bad)
(bad)
jle
rol
lahf
xor
bnd
out
mov
push
scas
cmp
cmps
pop
mov
arpl
sbb
adc
test
cmp
inc
push
pop
mov
add
imul
sub
iret
and
daa
inc
data16
jle
push
std
jno
xor
sbb
push
rcpps
sub
and
inc
aaa
int
sub
shl
icebp
aas
xchg
adc
inc
lea
cmp
popa
jle
cli
test
call
inc
lock
enter
scas
pop
in
jmp
jb
ficomp
ins
outs
inc
mov
and
or
sub
push
push
and
repnz
leave
ins
outs
inc
and
dec
sahf
pop
sbb
fidivr
test
add
mov
mov
hlt
or
jl
jbe
and
sub
pop
mov
ret
jmp
data16
xor
dec
das
mov
stos
out
mov
ins
mov
lds
imul
or
es
into
jo
repz
cwde
and
sbb
fcmovnb
addr16
pusha
lods
es
jnp
mov
jge
pop
aad
adc
xor
lahf
fs
nop
enter
cdq
lods
(bad)
stc
pop
jle
and
xor
lea
les
in
sar
jmp
fdecstp
stos
jae
push
dec
and
jo
fiadd
test
jg
mov
add
aad
daa
adc
jmp
inc
sar
ret
ror
(bad)
fdivr
and
pop
ins
add
cmp
loope
sub
sbb
call
mov
ret
jbe
call
dec
lods
add
xchg
jle
adc
jmp
xor
gs
sbb
inc
mov
fs
test
sbb
mov
repz
clc
mov
lods
cmps
push
out
jle
out
shl
ja
sbb
push
lahf
pop
mov
iret
std
fld
addr16
jbe
dec
fmul
jmp
ret
or
adc
jnp
in
add
cmps
mov
data16
ret
fst
rcl
out
pop
pop
sub
adc
jg
push
push
cli
inc
popf
mov
add
retf
adc
sub
pop
inc
mov
xor
add
sbb
(bad)
loop
in
mov
jge
adc
adc
add
mov
jle
test
mov
add
(bad)
xor
imul
and
push
iret
repnz
ja
adc
adc
ins
rcl
adc
adc
rol
and
jg
call
pop
fidivr
push
cmp
xchg
mov
push
jmp
cmp
test
lds
outs
loopne
stos
jl
xor
test
xchg
leave
pop
ds
push
dec
call
mov
mov
xchg
add
push
test
outs
cdq
xchg
inc
ins
test
jge
inc
lds
xchg
leave
cmovb
push
mov
movs
aam
test
gs
outs
in
(bad)
aad
not
outs
jns
rcr
sbb
cs
and
fidivr
stc
inc
mov
scas
in
test
and
mov
pusha
icebp
and
das
inc
stos
ffree
fld
jecxz
sbb
mov
adc
test
adc
pusha
lds
in
add
xor
add
mov
sub
mov
or
hlt
aaa
jl
cmps
das
test
cld
aas
ins
or
xchg
inc
jg
test
mov
ja
sbb
lds
adc
sbb
into
and
xchg
pop
dec
sub
rcl
ins
mov
pop
rcl
ds
mov
pop
mov
pushf
cs
mul
into
sub
inc
sub
das
pop
mov
leave
(bad)
mov
cdq
fbld
inc
mov
cmp
and
test
fwait
daa
fdiv
push
or
rol
mov
imul
sbb
add
xor
xchg
shl
retf
jnp
fnsave
adc
ins
xor
mov
aad
adc
outs
test
cmp
mov
test
sub
xor
add
test
add
push
mov
call
in
push
or
adc
jge
or
jns
pop
jg
jmp
enter
cmp
nop
bound
fsubr
test
lods
push
mov
pop
mov
retf
jae
cmc
imul
mov
imul
and
js
arpl
outs
ror
dec
mov
rol
add
out
mov
jno
stos
shr
inc
mov
fwait
dec
jbe
adc
xor
push
(bad)
loop
aam
lods
outs
mov
adc
or
mov
sar
fwait
push
popa
mov
pop
mov
and
out
ficom
call
push
in
in
cli
add
stos
xor
mov
dec
ins
or
dec
movs
mov
mov
popf
mov
loop
imul
jnp
inc
rol
push
or
fwait
loop
ja
outs
jns
push
fcmovu
and
(bad)
push
pop
imul
popf
in
ins
inc
jo
cmp
sbb
sar
add
lahf
imul
ins
jae
push
pop
mov
inc
sub
arpl
mov
pop
sbb
daa
arpl
cs
mov
mov
jge
sub
xor
sub
or
mov
inc
xchg
push
dec
add
fnstenv
pop
rcl
in
fcomp
xor
js
aaa
mov
dec
daa
inc
dec
xchg
mov
cwde
jo
jge
jo
mov
out
lahf
mov
or
(bad)
imul
mov
pop
stos
iret
leave
cmp
fisubr
pushf
(bad)
cmc
fnsave
jmp
add
mov
cmp
ja
sbb
mov
aas
das
jbe
neg
div
aam
add
(bad)
cdq
sbb
push
jae
call
and
jmp
mov
mov
movs
dec
mov
or
pop
in
add
mov
push
xchg
jae
repz
out
int3
in
xor
sub
in
call
mov
dec
and
push
lods
jge
out
sub
fnstsw
adc
mov
add
fisubr
jb
stos
mov
outs
(bad)
lock
das
add
test
xchg
dec
icebp
fnstsw
lea
ss
dec
xor
test
xchg
cli
pop
les
fld
(bad)
inc
push
jle
xchg
(bad)
add
dec
sbb
mov
fadd
add
inc
xchg
or
shr
(bad)
ficom
add
out
jmp
test
jo
and
popf
sub
out
or
add
aam
jne
rol
mov
inc
jnp
fsub
imul
jae
retf
mov
aad
sub
or
pop
sub
mov
mov
out
mov
retf
adc
enter
addr16
jnp
int3
div
and
test
jmp
inc
dec
mov
push
add
mov
je
xor
shl
xchg
jp
jle
cmps
pushf
les
mov
aam
adc
jmp
cmp
dec
in
xchg
in
fistp
pop
imul
mov
push
shr
mov
mov
hlt
and
sub
inc
adc
sbb
aad
pop
push
jmp
or
mov
and
mov
jbe
repz
dec
in
and
cld
mov
(bad)
pop
jl
outs
repnz
jle
mov
mov
cmps
dec
(bad)
pop
leave
mov
fsubr
mov
aam
jl
mov
pusha
ja
xor
xchg
aad
cmp
dec
cmp
mov
aam
cmp
out
or
retf
or
inc
loopne
lods
into
sahf
pop
xor
sbb
sbb
adc
(bad)
in
and
mov
jecxz
jge
mov
jmp
jp
jmp
xchg
shl
inc
cmc
jae
ficom
mov
lods
pusha
mov
ins
ud0
cld
xor
cmp
or
cmp
daa
daa
vmovntps
xchg
xor
mov
mov
stc
lock
jp
mov
not
pop
(bad)
mov
mov
dec
and
push
movs
and
ins
(bad)
cld
xchg
cmps
pushf
cmps
pop
sahf
add
or
mov
outs
bsr
cwde
cwde
jle
xor
fcom
adc
repnz
scas
pop
mov
cli
ret
xchg
sub
mov
sub
stos
das
dec
out
add
nop
mov
cmp
jle
cmps
jp
mov
aaa
or
mov
dec
push
(bad)
cwde
inc
pop
jae
cmp
stos
jne
jp
in
shr
push
jl
dec
cmc
aam
cmp
cwde
cwde
and
outs
dec
call
jbe
rol
addr16
sbb
cmp
or
stos
jmp
bound
push
sub
std
lods
arpl
and
icebp
sbb
(bad)
test
lods
inc
pop
ss
jecxz
jecxz
pop
gs
jnp
inc
into
stc
pop
adc
dec
mov
or
cwde
xchg
cmc
dec
(bad)
cmp
ret
sbb
inc
fadd
sar
enter
imul
mov
outs
ret
jmp
sbb
xor
dec
mov
out
and
cmp
ss
in
xchg
adc
add
and
and
push
inc
jbe
mov
popa
scas
and
sub
jns
cli
sbb
sbb
xchg
outs
sbb
loop
das
ins
out
mov
mov
jo
imul
ds
mov
add
inc
push
and
iret
mov
test
xor
mov
jle
popf
xor
sbb
imul
and
mov
mov
stos
leave
fadd
loopne
push
stos
add
cdq
mov
in
sub
(bad)
dec
or
or
and
jb
jbe
ds
xchg
gs
int
add
xchg
scas
clc
test
push
enter
xchg
pop
call
int3
mov
jg
shl
ins
outs
or
xor
sbb
mov
inc
pop
add
xor
jne
sub
lds
mov
xor
add
push
mov
mov
das
mov
adc
push
dec
cmp
xchg
out
das
enter
and
fstp
adc
dec
fwait
fwait
xor
pop
dec
sbb
or
stos
out
retf
xchg
rcl
inc
xchg
popa
imul
in
(bad)
in
ja
ror
or
add
pop
dec
not
or
or
add
in
cdq
jo
mov
push
test
inc
jg
push
or
xchg
aad
dec
int3
jg
add
mov
movs
push
lods
int3
push
out
fdivr
dec
scas
push
dec
iret
mov
(bad)
neg
mov
es
ins
repz
ss
aaa
dec
imul
mov
xor
and
sbb
pop
and
(bad)
fwait
xchg
daa
jo
(bad)
jg
das
inc
push
test
mov
(bad)
loop
fcom
fcom
adc
cmp
test
add
jns
popf
ror
mov
jle
mov
adc
add
imul
movs
push
mov
scas
iret
daa
dec
cmp
mov
mov
movs
mov
jl
(bad)
out
sub
(bad)
mov
pushf
daa
or
mov
jecxz
mov
jo
jmp
outs
jmp
cs
hlt
push
mov
sbb
and
jns
imul
addr16
jmp
fldenv
jne
popa
out
xchg
xchg
mov
scas
unpcklps
es
lods
loop
mov
dec
scas
sub
sub
pop
in
dec
cdq
or
imul
fisubr
add
xlat
jecxz
repnz
stos
loop
jne
sbb
out
movs
xchg
dec
outs
pop
xchg
xor
add
mov
sbb
push
mov
mov
inc
pop
pusha
ret
hlt
pop
jnp
loopne
test
ins
sub
and
js
mov
xchg
mov
mov
or
xchg
inc
call
xchg
leave
cs
or
mov
push
mov
hlt
jb
mov
mov
or
xor
out
sti
inc
xor
mov
push
pop
inc
imul
xchg
(bad)
not
call
or
or
xor
add
jl
mov
ss
enter
leave
std
out
loopne
arpl
(bad)
mov
fild
ja
repnz
xor
push
and
loope
aad
sub
push
sub
dec
inc
inc
cld
push
test
mov
leave
stc
ficom
adc
ins
retf
mov
mov
call
cmp
or
jge
xor
push
retf
jl
xlat
into
mov
jbe
ss
cmp
push
jg
push
cmp
add
rcr
icebp
mov
shl
arpl
imul
pop
retf
fist
daa
and
(bad)
arpl
es
adc
inc
fwait
mov
fadd
mov
mov
ret
push
mov
shl
pop
pop
pusha
iret
and
retf
and
imul
rep
inc
xchg
mov
xor
adc
cdq
sub
mov
outs
fnstcw
dec
les
pop
call
repnz
cli
xor
ins
pop
xchg
cmc
cmp
or
dec
fisttp
mul
and
out
mov
jp
pop
in
ret
lea
inc
pop
int
ds
jmp
cld
fstp
ins
ja
gs
xor
adc
outs
dec
repz
cmp
adc
xchg
(bad)
imul
adc
aas
movs
stc
into
dec
(bad)
in
mov
in
jp
enter
xchg
xchg
cld
push
jg
(bad)
imul
adc
int3
test
pop
cmp
ja
out
sti
pop
adc
xchg
mov
dec
and
inc
addr16
dec
repnz
push
je
pop
nop
icebp
aad
aam
mov
sti
jp
mov
mov
fldcw
into
and
repz
inc
jns
out
inc
stos
(bad)
dec
sub
sbb
lahf
gs
xor
mov
jo
movs
push
shl
jmp
cmp
sbb
mov
stos
mov
add
xchg
lods
fst
scas
fmul
popa
adc
outs
daa
std
inc
cld
push
xor
rcl
inc
call
xchg
pop
iret
(bad)
in
mov
dec
dec
retf
mov
imul
push
sub
jnp
mov
bound
jp
ds
dec
jge
shl
test
int
adc
jecxz
push
iret
es
gs
mov
fwait
iret
sub
add
pop
push
lods
iret
aaa
pop
(bad)
aad
mov
xchg
(bad)
adc
or
adc
mov
mov
loop
mov
leave
lea
mov
jg
jl
in
pop
fwait
stos
push
sub
cmp
xchg
int3
jb
clc
xchg
push
and
xor
dec
inc
stos
inc
and
cdq
movs
and
mov
mov
and
cmp
xchg
adc
out
cmps
cs
cmp
mov
lock
push
dec
cli
test
cmp
hlt
int3
outs
dec
push
mov
mov
xchg
mov
loopne
lock
clc
pop
es
dec
dec
or
out
sub
mov
mov
lods
jbe
xchg
mov
mov
dec
(bad)
cmp
fcom
xor
inc
inc
lods
and
dec
inc
(bad)
ja
retf
addr16
or
popa
pop
in
popa
push
or
loopne
sub
iret
xchg
push
pop
stos
shl
lock
pusha
mov
sbb
xlat
sub
bound
cdq
or
cld
(bad)
push
jb
es
mov
dec
sar
aaa
icebp
adc
add
push
jmp
cmc
fisubr
retf
dec
jp
icebp
push
outs
stc
test
cmp
pop
pusha
imul
js
adc
mov
add
aam
adc
cmp
mov
or
(bad)
inc
xor
ret
jmp
neg
leave
inc
jl
jge
pop
push
fisub
(bad)
(bad)
cli
jge
mov
out
(bad)
movs
lock
jb
ins
xlat
cmp
sub
pop
into
in
push
fwait
xor
fs
xchg
jl
cld
push
inc
xor
or
mov
or
sbb
xchg
scas
xor
es
in
retf
jp
and
outs
sbb
inc
dec
or
mov
pop
ss
fcmovnb
pop
sub
not
cld
and
ins
fxch
sbb
dec
dec
std
sub
sahf
push
or
jecxz
ret
push
out
ins
icebp
repnz
fwait
out
pop
rcl
lock
je
enter
cmp
cmp
retf
mov
jecxz
in
mov
pop
scas
sbb
sub
out
push
mov
jmp
popf
jge
clc
sub
out
iret
push
add
stos
and
sbb
cmp
out
bound
xchg
jg
pop
pop
mov
(bad)
fld
and
ret
sbb
mov
xchg
sbb
xor
cmc
sub
xlat
mov
in
jne
ret
or
outs
push
loop
test
xchg
mov
sbb
dec
popa
sbb
or
dec
pop
aad
jg
dec
fimul
fbld
inc
add
sahf
cmp
sti
adc
js
push
add
out
ins
mov
in
iret
jge
iret
pop
scas
push
push
aad
mov
call
clc
mov
xchg
call
ret
ret
lods
dec
data16
mov
jl
bound
nop
mov
getsec
leave
cs
lock
mov
push
mov
and
sbb
and
jecxz
cmps
cmp
cwde
xor
icebp
outs
cs
xor
sub
inc
mov
xor
(bad)
in
imul
in
sahf
adc
jo
pop
and
loopne
cmp
in
mov
pusha
jmp
sub
pop
mov
call
sahf
jb
ret
fwait
mov
and
(bad)
jno
ffreep
cwde
xchg
out
cmps
push
(bad)
xchg
push
pop
cmp
xor
arpl
xchg
scas
enter
pop
adc
sbb
sbb
mov
cli
push
cmp
repnz
jb
test
pop
cwde
call
dec
sbb
add
lods
scas
nop
js
inc
push
retf
pushf
inc
fs
cmp
loopne
push
out
div
cs
sbb
mov
pusha
and
sub
ins
clc
out
ret
pop
lock
mov
dec
retf
add
aad
bound
cmp
imul
adc
cwde
adc
fwait
sub
mov
and
les
sub
sti
lock
and
push
pop
test
vmaxpd
push
or
xor
xchg
add
mov
pop
test
aaa
lods
dec
cmp
das
dec
and
mov
dec
xlat
into
in
add
jnp
(bad)
sub
jecxz
aad
sub
push
jae
test
jb
inc
enter
sbb
cmp
in
mov
dec
sbb
jge
mov
loope
cmp
(bad)
sbb
add
call
push
jo
cmps
push
mov
jmp
pushf
fsub
hlt
cdq
aas
sub
push
loopne
or
inc
aam
sbb
pop
mov
inc
xlat
xor
cmp
xchg
repz
sbb
retf
in
test
fisttp
fcom
lea
ret
xchg
fld
xor
inc
call
xchg
mov
sar
add
jecxz
fsub
mov
dec
(bad)
jae
fld
call
mov
addr16
inc
out
(bad)
and
outs
pop
mov
adc
xor
(bad)
mov
loopne
sub
xor
gs
mov
loope
pushf
jecxz
daa
sub
jp
cli
stos
ds
push
cld
ds
int
mov
adc
ja
in
je
inc
test
sbb
adc
xchg
daa
mov
xor
xor
das
out
add
mov
adc
mov
loop
scas
rep
push
aam
aad
inc
pop
cld
aam
xchg
xor
jnp
movs
adc
retf
inc
addr16
mov
mov
or
fs
pusha
mov
jl
and
xor
jl
fimul
es
jo
jmp
arpl
es
mov
repz
adc
jecxz
mov
inc
push
inc
test
out
push
aad
fadd
jecxz
data16
jecxz
mov
movs
mov
addr16
loop
cs
sub
push
jns
lahf
sbb
jecxz
test
inc
mov
inc
(bad)
or
cmp
jp
mov
adc
dec
mov
jb
aam
cmp
inc
cmp
gs
rcl
mov
int
call
mov
in
div
(bad)
cwde
(bad)
repz
test
dec
add
sbb
aas
test
(bad)
out
out
es
repnz
and
xor
xchg
xchg
sub
loop
js
xchg
in
ucomiss
or
fsubr
lods
mov
in
push
cmp
int
out
dec
test
ja
fisub
mov
inc
mov
mov
loope
mov
mov
popf
push
cmp
xchg
push
cmps
aas
pop
retf
and
mov
in
xchg
icebp
outs
leave
out
or
dec
sbb
(bad)
call
and
push
enter
and
or
in
sbb
cmps
or
js
mov
ja
loopne
or
adc
mov
ins
addr16
sbb
jmp
in
pusha
pop
xchg
jnp
add
icebp
and
mov
les
xor
in
sbb
ret
and
(bad)
xor
iret
out
inc
aaa
or
daa
movs
fdivr
mov
(bad)
sub
mov
jno
push
into
shr
cmp
jle
xor
int3
adc
xsavec
dec
data16
(bad)
int
bound
jmp
push
sub
repz
out
cld
idiv
in
imul
jg
mov
sub
sbb
xor
sub
mov
cli
xlat
aad
jle
sbb
pop
jns
ins
add
inc
and
or
add
sub
(bad)
aaa
je
cmp
mov
sbb
adc
scas
popa
add
enter
xchg
dec
cld
cmp
add
mov
cmp
xchg
sar
mov
mov
jecxz
mov
mov
push
mul
pop
xor
xchg
in
sbb
push
sbb
out
jl
jg
loopne
xchg
aas
dec
jle
int3
add
sti
jne
iret
pop
adc
lods
cmp
enter
stos
mov
mov
sbb
cmp
pop
fs
sbb
mov
sahf
adc
in
test
sub
sti
aam
jae
mov
add
out
and
aad
fptan
(bad)
in
push
es
push
das
scas
int3
fdivr
repz
sti
stos
jb
inc
inc
inc
test
std
ss
and
in
into
mov
in
xor
sub
or
cmc
mov
xor
jge
stos
mov
cmp
into
mov
xchg
jmp
or
fmul
aad
mov
xchg
push
xchg
dec
push
mov
dec
(bad)
dec
cmp
cmp
loope
push
js
pop
ss
push
xchg
sub
out
je
fcomip
xchg
cdq
iret
cli
rcl
jecxz
jae
mov
push
ins
inc
test
out
xchg
es
add
into
mov
cs
fs
lods
test
add
(bad)
cdq
aaa
pop
sar
icebp
outs
call
inc
outs
ds
lock
popf
mov
scas
std
cmp
das
inc
add
fldenv
sahf
sbb
adc
test
jp
in
sub
scas
mov
(bad)
adc
in
stc
mov
or
pop
push
pop
mov
sbb
add
mov
fwait
mov
jbe
xor
sar
jg
sub
addr16
and
jmp
ss
push
bound
adc
and
scas
jp
pop
pop
sbb
lods
es
in
xor
pop
jne
repnz
rcr
js
mov
or
addr16
test
or
in
add
dec
adc
dec
cmp
mov
mov
pop
cmp
int
jecxz
jmp
adc
cdq
inc
pop
mov
cmp
xor
mov
iret
jle
mov
add
jne
mov
xchg
xchg
cli
inc
pop
xor
es
xchg
jge
jbe
inc
push
call
mov
or
mov
cmps
push
repnz
xchg
sbb
mov
dec
push
das
call
mov
adc
mov
iret
xor
pop
sub
and
sbb
dec
stc
mov
jg
iret
cdq
or
jns
pop
ret
mov
sbb
jmp
pop
cld
mov
leave
js
cli
into
sbb
xchg
pop
cmc
jae
sbb
adc
data16
pusha
fsubr
jmp
(bad)
xchg
and
or
jb
inc
xor
push
push
adc
inc
lock
push
add
(bad)
xor
mov
iret
aam
cmp
add
and
or
cmp
fcomip
jle
or
adc
lea
jmp
jmp
das
jp
int3
popa
jg
jle
arpl
mov
aam
mov
stos
call
pop
fcmovnb
sub
pop
mov
sbb
xor
jmp
jns
mov
push
or
dec
stos
fld
mov
xchg
(bad)
fsubp
stos
pushf
pushf
jns
mov
lods
ins
daa
ret
jl
out
sbb
and
repnz
adc
sar
stc
daa
push
into
cmc
sahf
dec
lock
call
cld
out
xchg
and
test
xchg
sahf
(bad)
xchg
or
mov
sub
movs
or
rcl
dec
imul
out
pushf
push
shr
call
cmp
in
ins
fmul
inc
cmp
dec
xchg
js
and
jmp
inc
cdq
popa
loopne
fmul
push
frstor
xchg
xor
mov
into
jmp
out
cmp
push
cmp
jmp
(bad)
cmp
out
ins
lahf
enter
test
std
into
shr
cmp
or
js
and
cmps
pusha
pop
add
add
outs
inc
stos
sub
mov
and
mov
xchg
js
test
push
cmp
add
or
cld
mov
jns
fstp
dec
fcomp
sub
fisttp
call
hlt
jecxz
adc
push
mov
or
js
leave
pop
rcl
mov
mov
jbe
xchg
pop
xor
xchg
repnz
inc
xor
cmp
test
out
js
test
retf
into
sbb
cdq
ret
or
js
int3
pop
add
into
(bad)
test
popa
adc
xchg
pop
xlat
jno
add
and
push
lods
out
mov
jno
outs
xor
dec
in
out
jge
adc
mov
add
xor
(bad)
movq
mov
and
mov
test
and
shl
mov
pop
mov
xor
pop
push
jge
lods
xor
gs
lock
mov
inc
sbb
rcl
mov
push
sub
jne
add
cmp
sahf
enter
cmp
jle
int3
cmp
mov
movs
imul
sbb
repz
push
fucomi
scas
mov
scas
add
xchg
std
mov
jae
xor
rol
jl
mov
jg
adc
test
and
xor
fisttp
adc
ins
imul
mov
dec
les
and
cmp
fisub
sar
inc
pop
sbb
les
mov
sub
push
dec
or
adc
ror
adc
ret
jmp
call
cvttps2pi
clc
jge
test
in
test
mov
fwait
scas
pop
loopne
sub
out
jbe
push
scas
inc
xchg
mov
add
mov
imul
inc
cmp
(bad)
cmp
shr
pop
mov
sbb
sbb
xchg
adc
or
repnz
div
int
pusha
cwde
scas
jg
(bad)
sub
xchg
fucomi
call
fnstcw
fs
test
retf
sbb
pop
retf
sar
test
lds
loopne
sub
push
sub
jp
sub
cli
and
cmps
and
mov
ja
ss
cmp
(bad)
jbe
into
jg
out
div
int
rcr
rcr
enter
inc
sub
sub
test
push
xchg
es
popa
jle
clc
sbb
mov
repnz
mov
mov
xchg
sub
das
pop
pusha
xor
sbb
mov
fbld
jmp
mov
cmps
cmps
int3
test
dec
pop
pop
aaa
sti
jmp
mov
in
sbb
xchg
pusha
in
es
test
mov
mov
mov
sub
(bad)
je
xchg
(bad)
or
fld
loop
jbe
xor
movs
repnz
ror
xor
xchg
enter
jo
mov
daa
in
test
test
hlt
pop
test
sbb
sub
imul
jle
sbb
fisttp
and
or
mov
mov
loope
pop
mov
scas
dec
mov
icebp
mov
pop
call
push
je
fld
mov
test
xlat
outs
test
xchg
push
test
fwait
xor
cmp
andnps
mov
inc
cmp
push
int
cmps
loope
add
ficom
ret
cmps
out
mov
or
inc
lock
push
adc
pop
fisub
jg
adc
les
jns
(bad)
dec
mov
push
pop
cmp
scas
push
sbb
xchg
aas
xchg
cmp
or
xchg
mov
jle
icebp
outs
cmp
gs
imul
pop
popa
movs
nop
lock
call
in
popf
inc
js
add
inc
mov
jecxz
cmp
cmc
(bad)
in
les
int
leave
sub
cmp
std
pop
test
sbb
dec
jae
and
dec
mov
out
mov
mov
out
pop
jecxz
pop
mov
add
lock
mov
jmp
ds
imul
pusha
jb
cld
dec
dec
out
loope
dec
xchg
cmp
inc
dec
cmps
sbb
repnz
inc
into
retf
(bad)
mov
push
out
inc
(bad)
movs
movs
pop
xor
dec
add
lock
sub
push
pop
test
pop
inc
fwait
cmps
xor
push
jmp
xor
stos
cld
iret
cmp
in
cwde
add
dec
pushf
int3
js
and
bswap
imul
div
call
cmp
sbb
inc
push
fadd
leave
mov
sbb
lds
add
(bad)
mov
or
mov
mov
push
clc
mov
cmp
inc
sahf
dec
and
out
add
outs
rol
xchg
or
in
pop
xchg
and
stos
xchg
loope
pop
lock
or
sahf
jp
jp
shr
xor
xchg
int
or
cmp
and
xchg
in
imul
out
xchg
int
in
mov
call
movs
cld
test
add
pop
cli
adc
mov
(bad)
pop
dec
jge
iret
sub
xchg
lahf
call
adc
cmp
nop
push
mov
mov
adc
mov
pop
pop
or
mov
sar
xchg
fbstp
xchg
ss
int
and
mov
add
inc
jnp
pop
sbb
pop
and
fnstcw
lahf
mov
jmp
mov
aaa
(bad)
sub
gs
or
pop
cwde
mov
xor
pop
popf
push
bound
ss
pop
sub
mov
inc
iret
push
hlt
xchg
inc
(bad)
or
xor
aad
movs
jae
adc
mov
sbb
cmp
dec
mov
jmp
scas
enter
pop
jg
pushf
repz
aad
test
sub
hlt
mov
and
fsub
jne
xchg
or
lea
lahf
(bad)
lock
mov
lods
xlat
mov
stc
mov
call
fldcw
(bad)
fidivr
jns
jl
arpl
lock
loopne
add
mov
in
mov
imul
jmp
dec
hlt
(bad)
call
pop
inc
push
lea
sbb
pop
(bad)
mov
icebp
gs
and
adc
(bad)
fild
pop
inc
pop
add
cdq
fistp
into
scas
(bad)
mov
add
inc
popa
in
fnstcw
pop
jmp
sbb
inc
dec
xchg
cmp
inc
test
cli
sub
lock
xor
data16
movs
gs
jnp
mov
xchg
mov
cmc
jle
(bad)
fcos
int
xor
dec
mov
dec
jle
stos
call
xor
out
shl
sbb
sbb
mov
cmp
jp
icebp
push
or
mov
jle
ins
test
mov
sub
dec
jno
dec
inc
test
(bad)
shl
cmp
adc
or
addr16
test
push
vmcall
jo
bound
xor
paddusb
hlt
mov
sub
es
mov
popa
ds
cmps
pop
and
and
lods
lock
and
rol
shl
mov
std
aad
into
in
inc
imul
jmp
adc
jp
(bad)
hlt
hlt
xchg
enter
adc
addr16
in
sbb
push
pop
xor
arpl
lahf
xchg
push
mov
xchg
inc
pushf
shl
aaa
das
jns
mov
xchg
popa
push
inc
(bad)
push
xor
mov
dec
xchg
jae
xchg
mov
add
push
into
in
mov
jno
mov
test
loope
test
xchg
xchg
pop
sbb
mov
cdq
stos
dec
xor
test
hlt
ret
retf
frstor
sub
and
test
das
sbb
inc
inc
and
(bad)
jmp
mov
movs
dec
dec
outs
call
popa
jb
and
adc
loope
popf
out
pop
lods
js
mov
lahf
repz
mov
push
mov
mov
dec
push
rcr
mov
sub
in
fdivr
rcl
push
sub
dec
mov
sbb
mov
lahf
and
mov
(bad)
and
cdq
mov
(bad)
mul
xchg
(bad)
lock
shl
jg
gs
into
pusha
or
sbb
mov
xor
jmp
in
fcom
ins
jle
or
mov
jae
jo
ret
mov
rcl
ret
test
adc
push
or
jg
pushf
or
mov
lods
ficom
pop
push
cmc
add
jbe
xchg
das
dec
nop
movs
imul
mov
push
adc
int
jae
mov
xchg
scas
xor
and
shr
xchg
cmp
add
xor
adc
ins
push
mov
in
fisubr
dec
dec
mov
ret
sahf
fstp
(bad)
sahf
and
ret
jle
ror
add
cs
mov
in
push
sub
xchg
xor
lods
adc
xlat
(bad)
(bad)
in
pusha
fidivr
adc
aad
pop
fwait
aas
enter
or
sbb
sti
add
mov
jne
mov
push
imul
mov
and
dec
xor
push
aam
mov
cli
rcl
add
(bad)
in
hlt
mov
fistp
jg
pop
xchg
int
dec
lods
push
aad
sub
fistp
nop
mov
je
scas
jle
add
pop
mov
jmp
ret
jmp
cwde
pop
push
pushf
or
adc
add
push
pop
(bad)
scas
xor
jno
and
cmc
aad
xlat
fdiv
cmp
jae
sbb
jb
mov
movs
push
add
lods
fld
xlat
loopne
ret
in
cmp
arpl
mov
bound
mov
rcr
adc
jb
push
in
dec
scas
out
or
(bad)
clc
mov
out
adc
pop
adc
into
arpl
inc
and
movs
daa
jns
sub
in
inc
and
xor
add
bound
push
or
cmp
adc
mov
mov
movs
ds
clc
and
or
test
fcmovu
mov
loop
mov
outs
jmp
movs
sub
sar
mov
(bad)
es
fcomi
jle
cmp
pop
jb
aam
push
(bad)
icebp
out
cmps
sub
and
or
inc
fsub
adc
loope
(bad)
int3
sub
xor
rol
(bad)
mov
cmp
mov
pop
aas
shl
pop
out
mov
cmp
test
jge
lock
mov
std
ret
int3
mov
jb
inc
inc
imul
xchg
(bad)
stos
xor
int3
inc
mov
neg
mov
sbb
(bad)
loopne
mov
into
pop
test
jmp
mov
push
out
or
xor
fldcw
mov
bound
cmp
adc
pop
daa
out
xchg
aam
je
sub
test
xchg
add
sbb
xchg
push
fisubr
jecxz
popa
jno
add
pop
outs
call
and
aaa
sbb
jnp
add
ror
fsubr
push
repnz
sub
jmp
adc
and
out
add
fcom
cmp
mov
inc
adc
inc
xchg
das
cmp
mov
xchg
jg
xor
int3
xchg
aam
mov
mov
cmp
inc
add
sahf
fimul
or
adc
(bad)
mov
or
lahf
lds
(bad)
ins
push
cmp
cmp
ret
pushf
or
cmc
int3
sbb
pop
dec
inc
pushf
or
je
out
jl
jne
jns
dec
dec
pop
push
mov
out
mov
cs
push
xchg
xchg
sub
das
cmp
or
aaa
cmps
add
sbb
stos
jge
fadd
cdq
pop
mov
xchg
sbb
and
cdq
xor
das
mov
fstp
mov
call
sahf
push
js
or
test
sbb
jo
data16
sub
rcl
pop
sbb
dec
inc
dec
les
mov
out
mov
mov
out
in
bound
test
push
sub
test
mov
nop
sbb
icebp
in
pop
jne
and
mov
sar
cmp
(bad)
lea
mov
push
(bad)
cmp
fmul
into
mov
mov
add
adc
test
out
iret
cmc
and
xor
idiv
dec
mov
mov
aas
ins
test
jb
push
xchg
jle
clc
loop
mov
sbb
int3
fcom
adc
nop
push
in
inc
ja
lods
rol
in
out
fsubr
push
or
les
xor
push
ret
jb
xchg
add
lahf
test
nop
lea
rol
jge
push
xor
push
(bad)
sbb
fcmovnu
mov
out
add
fwait
xchg
imul
xor
lods
add
mov
adc
pop
adc
imul
mov
imul
outs
xor
mov
push
in
sub
clc
mov
outs
push
or
mov
stc
stos
ss
jne
call
xor
dec
dec
xchg
stc
xchg
cmp
pop
mov
loop
sbb
push
int3
xchg
sti
nop
and
pusha
lock
pop
adc
mov
repnz
imul
and
mov
popa
and
popf
ss
repnz
ins
loopne
out
int3
dec
stc
pop
in
mov
xlat
sub
adc
imul
in
gs
mov
iret
dec
jns
adc
jg
jno
push
pop
ss
sbb
ins
inc
or
mov
pop
jge
and
int
adc
(bad)
xchg
add
xor
mov
dec
cs
test
ds
movs
pop
lds
and
popa
cmp
test
daa
or
dec
mov
data16
inc
(bad)
sub
cmp
xor
es
jmp
add
nop
das
inc
push
jge
pop
inc
add
ffreep
jg
mov
mov
and
cmp
add
adc
add
adc
and
cmp
pop
mov
inc
cmp
mov
xchg
add
mov
dec
jle
(bad)
mov
or
push
and
push
mov
bound
aam
ret
mov
inc
or
jns
popa
cs
adc
mov
test
xchg
dec
ds
jg
dec
ret
enter
cmps
and
cmp
nop
push
push
push
cli
leave
pusha
popf
adc
ins
aad
xor
sub
gs
int3
xlat
addr16
jecxz
cld
sub
push
mov
stos
gs
xchg
cmp
test
cli
nop
test
push
add
sbb
cmp
leave
jnp
dec
mov
leave
jnp
lods
sbb
nop
mov
imul
cwde
add
jae
xor
stos
sub
setle
jp
push
sub
ins
stos
dec
adc
mov
add
dec
push
rcl
gs
hlt
cdq
cmp
fdivr
mov
xchg
cmps
dec
ins
mov
idiv
jno
jmp
add
mov
sti
adc
mov
dec
push
pop
scas
js
push
adc
mov
test
sbb
stos
pop
test
jmp
arpl
inc
xlat
loopne
lea
cli
mov
and
jmp
test
scas
mov
xor
in
add
out
mov
dec
pusha
and
test
cmp
adc
xchg
and
or
mov
pop
cmps
int
or
cvtpi2ps
fadd
sti
aaa
inc
fsubr
stc
retf
pop
enter
cmp
clc
popf
aam
ds
mov
mov
cmps
pop
in
das
cmp
aam
xchg
jmp
je
mov
aas
inc
mov
mov
push
add
push
std
adc
movs
loop
xchg
sub
xchg
shr
pop
int3
pop
xchg
nop
mov
and
mov
mov
ja
mov
pop
cld
gs
add
dec
mov
and
sub
(bad)
adc
jno
add
jge
inc
out
jp
and
mov
in
fcmovu
mov
loop
push
call
pushf
gs
(bad)
fisub
dec
dec
and
cmp
std
cmp
shl
sub
mov
add
bound
add
xchg
mov
pop
neg
scas
loopne
mov
aam
in
jl
mov
xlat
xorps
int
jge
cmps
xchg
adc
shl
xor
jne
adc
fsqrt
(bad)
inc
dec
dec
jmp
inc
cmp
(bad)
test
mov
push
jno
adc
arpl
call
sub
(bad)
leave
push
xchg
les
test
out
xor
sub
(bad)
pusha
push
into
lods
loope
loop
xlat
cmp
mov
pop
adc
repz
mov
mov
mov
pop
adc
cmp
pop
shl
xor
or
inc
mov
(bad)
cmp
imul
add
push
data16
into
outs
cmp
daa
fs
ds
shl
jb
int
mov
mov
and
gs
sub
leave
sbb
(bad)
out
inc
fistp
popa
icebp
inc
lds
imul
test
jnp
out
xchg
pop
sub
jns
cwde
push
popa
outs
inc
mov
out
(bad)
push
mov
sub
call
sub
shr
push
mov
inc
shl
xchg
int
sti
(bad)
fimul
jmp
mov
(bad)
pop
icebp
push
ret
(bad)
mov
mov
push
push
popf
mov
cdq
mov
(bad)
repnz
sbb
pop
call
jp
mov
push
jae
jb
pop
repz
jl
(bad)
adc
(bad)
jg
movs
popf
xor
jb
into
js
mov
xchg
xchg
outs
cwde
ds
push
fst
jo
mov
data16
jns
mov
mov
xor
not
in
jbe
popf
pop
jge
mov
xchg
add
sub
das
ds
xchg
jge
jae
xchg
outs
movs
add
cmp
lds
push
inc
ret
or
push
push
mov
call
inc
mov
ror
or
adc
dec
cs
mov
inc
inc
jmp
xchg
push
gs
mov
loope
in
ins
in
add
dec
jmp
push
jne
mov
into
test
and
cld
aaa
adc
push
(bad)
ja
fwait
pop
dec
imul
in
fisttp
dec
jbe
adc
sub
psubsb
add
cmp
pop
push
sar
ret
icebp
mov
sbb
sahf
sub
leave
pop
out
inc
xchg
pop
addr16
inc
mov
inc
pop
ja
aaa
loope
ins
mov
(bad)
dec
push
sbb
das
sbb
pop
or
loope
adc
mov
aad
xchg
push
pusha
add
push
(bad)
and
retf
int
sbb
test
and
or
add
stos
sbb
inc
add
push
sbb
fcom
adc
out
sahf
test
sbb
jle
icebp
out
mov
xor
jb
mov
xor
add
mov
out
push
fmul
aas
adc
adc
inc
jns
xor
adc
cmp
dec
jg
sahf
aas
imul
cmp
push
pop
sub
btr
call
cmp
inc
cmps
mov
ins
fst
mov
add
mov
ret
or
iret
pop
and
pop
inc
sub
cmp
cmp
pushf
jle
icebp
addr16
jecxz
inc
xchg
add
arpl
or
cmc
dec
mov
std
lea
and
mov
fcmovnu
js
test
pop
or
js
jmp
xor
mov
pop
lahf
scas
in
lods
in
ror
sbb
sbb
mov
mov
lods
xor
xchg
shl
shl
xor
idiv
test
fisttp
into
and
inc
lahf
mov
stc
fimul
mov
xor
(bad)
std
sbb
gs
fisub
inc
out
aas
adc
loop
mov
in
shl
jp
into
xchg
add
int
daa
or
push
lods
pop
enter
in
add
pop
xchg
push
movs
mov
sub
lea
jmp
cwde
cmp
lock
out
scas
pop
mov
cmc
out
lea
sub
mov
fcomp
jb
adc
jb
dec
cld
cmp
add
outs
sbb
or
loop
cmps
cmp
loopne
jle
adc
shl
xchg
jo
mov
and
sbb
call
mov
pop
pop
sub
test
inc
(bad)
fadd
movs
(bad)
dec
xchg
retf
cli
int
or
mov
scas
popa
sub
push
inc
es
call
adc
sub
imul
inc
add
sahf
loop
sti
and
fcomp
mov
xchg
outs
ins
cmp
jbe
ja
mov
or
sub
mov
stos
aas
lock
int3
sub
add
hlt
fiadd
mov
and
stos
cdq
push
mov
mov
cmp
test
sub
inc
sbb
jo
sahf
fimul
inc
adc
add
es
ss
std
push
imul
js
sbb
in
mov
pop
mov
in
rcr
gs
add
or
mov
lock
xchg
or
sub
scas
loop
retf
lods
mov
pop
xor
popf
push
arpl
and
sub
ins
imul
cwde
jmp
das
dec
cmp
push
xchg
mov
loopne
push
fwait
sti
xor
leave
jge
dec
xor
xor
mov
add
xchg
dec
daa
sbb
rcr
scas
ror
cs
jb
clc
jge
or
fistp
pop
push
fdiv
mov
js
mov
popa
jp
cld
in
sbb
pusha
pop
or
pusha
clc
fdiv
adc
cmps
addr16
leave
stos
imul
js
mov
pop
daa
test
ret
cmp
pop
into
test
pop
jmp
daa
fild
push
sbb
ins
xchg
xchg
dec
sub
jg
cmp
je
fld
mov
push
add
bswap
out
jl
xor
jmp
int3
or
xor
dec
sbb
hlt
cmps
loope
(bad)
movs
shl
sub
xchg
push
mov
movs
add
mov
dec
cdq
pop
aad
cmp
jp
inc
je
jmp
fwait
cmp
push
outs
and
jp
or
iret
movs
fnsave
aam
fcomp
sub
ins
mov
data16
xchg
test
add
je
fimul
mov
in
(bad)
(bad)
js
push
adc
pusha
or
(bad)
hlt
lds
mov
popa
sub
cdq
rcr
xor
inc
movs
cmc
(bad)
ja
and
loop
ror
add
test
push
lds
popf
jbe
add
test
icebp
out
pop
data16
sub
lods
pop
test
pop
loope
test
popa
mov
mov
or
repnz
stos
push
cmp
jp
call
je
mov
and
ins
inc
xor
scas
jne
lods
pop
bound
cmp
or
lods
loope
rol
pusha
xor
(bad)
mov
repnz
loopne
dec
sbb
mov
fstp
stc
aas
pop
xadd
inc
sbb
adc
xlat
icebp
js
jmp
lock
aad
sbb
push
call
out
and
lock
pop
push
pop
nop
repz
add
jnp
rcl
gs
test
push
mov
push
loope
popf
in
movs
test
pop
dec
add
(bad)
rdpmc
and
mov
pop
push
dec
mov
mov
sti
xchg
out
pushf
pop
ja
or
bound
int3
lods
cld
stos
cld
sbb
inc
sbb
scas
imul
add
(bad)
ja
imul
sbb
or
dec
pop
iret
jnp
clc
push
vpcmpeqd
es
xchg
mov
jle
and
rcl
mov
ins
sub
out
fld
pop
cmp
jmp
mov
pusha
dec
xor
popf
xchg
adc
stc
sahf
mov
jmp
dec
add
sti
ins
shl
loop
(bad)
xchg
out
mov
add
push
fisub
adc
out
dec
ja
imul
jle
(bad)
(bad)
xchg
push
xchg
mov
inc
fdiv
push
mov
in
push
lds
inc
or
call
(bad)
mov
fwait
mov
sub
fbld
xlat
imul
out
cmp
adc
aas
int
push
scas
outs
mov
test
mov
adc
aad
into
icebp
mov
sub
loopne
fcomp
scas
xor
sar
cmp
sub
data16
nop
xor
retf
pop
dec
test
arpl
push
mov
sub
inc
movs
pop
push
xor
add
inc
and
in
mov
loope
popf
cmp
push
jmp
test
in
or
add
push
outs
inc
xor
xchg
aas
stos
test
pop
ins
mov
pop
lods
call
ss
jge
aam
gs
or
out
jmp
(bad)
gs
push
push
fs
adc
loopne
sub
pop
xchg
jno
nop
fidiv
jecxz
mov
popf
sbb
mov
push
jb
not
inc
enter
jle
pop
jae
mov
mov
and
in
call
sub
mov
mov
imul
mov
stos
push
sahf
push
pop
mov
xor
in
cmp
jmp
test
fisubr
daa
xlat
push
sub
pop
sbb
out
pop
and
jg
add
int3
jp
imul
push
cs
dec
xchg
mov
ret
enter
xchg
fadd
mov
and
dec
leave
stos
push
daa
clc
les
mov
cli
or
pop
cli
rol
jno
lds
jmp
or
fiadd
push
imul
cs
cld
retf
jb
mov
aas
gs
xchg
xor
and
enter
inc
mov
cld
dec
and
rcl
sbb
sbb
shr
in
callw
ffree
xchg
in
push
xchg
je
pop
movs
cmp
mov
mov
in
fld
push
mov
mov
cmp
lea
mov
jb
inc
jnp
inc
shr
xor
pushf
sub
into
xchg
mov
add
mov
into
je
push
int3
movs
dec
(bad)
sub
aas
cwde
fsubr
or
xlat
in
inc
aas
ins
mov
mov
or
inc
(bad)
inc
cmc
mov
push
push
adc
xchg
out
es
mov
dec
popa
mov
outs
xor
jl
imul
xor
shl
adc
pop
jmp
(bad)
aad
pusha
repnz
movs
test
sar
pop
add
and
jge
pop
add
lods
hlt
sub
jmp
imul
jl
mov
call
int
mul
mov
pop
dec
fcom
and
fdiv
cwde
int3
push
mov
sbb
mov
sbb
cmp
adc
and
and
mov
rol
pop
(bad)
loopne
push
out
je
pop
shl
fld
test
sbb
fnstenv
mov
dec
add
add
das
cmp
and
icebp
xor
ja
data16
pop
clc
sbb
mov
jbe
cmp
scas
mov
or
jne
stos
inc
rcr
jb
hlt
into
out
xchg
pop
aas
leave
and
faddp
xor
daa
(bad)
aaa
in
sub
jge
pop
(bad)
cli
aad
cmps
sti
mov
out
aaa
sub
fcmove
out
mov
and
test
jecxz
add
or
push
push
mov
ja
cld
les
xor
fidiv
or
pop
jae
nop
cmp
and
mov
idiv
fnsave
add
xchg
ins
aam
inc
push
pop
jnp
adc
fisttp
sahf
stc
jp
test
pop
sar
dec
and
cli
sbb
ficom
cmp
int
icebp
or
push
lods
bound
dec
or
xor
mov
mov
xchg
fmul
lock
sar
es
push
push
and
je
ss
addr16
pop
cwde
adc
pop
out
dec
jb
stc
fimul
retf
sbb
mov
jmp
mov
sub
(bad)
mov
retf
inc
pop
mov
loope
dec
jg
inc
test
(bad)
mov
je
data16
xor
cmp
movs
stos
mov
(bad)
jo
sub
xchg
jmp
dec
pop
hlt
add
mov
mov
push
fsubp
mov
call
jno
add
lods
leave
fld
mov
or
in
push
lods
sub
sub
sub
(bad)
sti
and
imul
fs
jbe
xchg
jae
pop
out
ret
sbb
pop
mov
enter
fistp
repnz
xor
add
sbb
cld
(bad)
jns
pop
movs
sbb
adc
push
test
lods
ds
int
dec
and
loop
dec
rcr
mov
mov
enter
mov
cmc
popa
and
repnz
fwait
and
push
mov
stos
mov
loop
cmp
push
inc
pop
jo
inc
fcom
mov
sahf
int
inc
mov
stc
add
push
xchg
mov
(bad)
push
push
dec
cmp
and
xchg
mov
repnz
jmp
data16
mov
jge
or
lock
(bad)
pop
ficom
jbe
out
js
push
fnstsw
pop
stc
aas
sbb
cmp
push
adc
inc
jns
jbe
shl
(bad)
ss
lds
mov
call
push
xchg
adc
in
(bad)
out
xchg
loop
bound
jge
lahf
xchg
cmp
cmp
sbb
mov
movs
pop
imul
scas
cmp
fstp
pop
mov
daa
aam
jo
call
ret
sar
fld
jae
inc
daa
(bad)
and
imul
sar
push
jnp
movs
jmp
dec
mov
call
shr
pushf
xchg
push
in
xor
clc
jmp
inc
inc
clc
dec
enter
jae
pop
(bad)
in
push
stc
mov
push
jmp
cmp
in
ja
(bad)
js
jns
jb
es
stos
jecxz
(bad)
adc
fidivr
aas
xlat
pop
jmp
xchg
pop
ja
ret
sub
mov
das
push
test
xchg
(bad)
arpl
scas
add
inc
data16
jmp
dec
dec
xchg
call
ins
test
or
fs
inc
xchg
sub
mov
out
in
popa
out
sbb
pushf
clc
aaa
or
fild
dec
sbb
popa
shl
xor
dec
aas
std
add
sbb
cmp
repnz
int
sbb
sbb
cmp
ror
mov
xchg
and
(bad)
out
jbe
scas
pop
lahf
pop
or
or
sahf
adc
int
mov
gs
cmp
out
sbb
(bad)
pop
xor
popa
rcl
and
nop
inc
inc
jno
jb
(bad)
(bad)
add
mov
(bad)
addr16
inc
iret
dec
adc
jle
and
and
push
xlat
pop
shl
out
(bad)
mov
mov
icebp
lea
cmp
xchg
pushf
shl
and
das
fcomp
mov
fidivr
into
adc
repnz
inc
je
jecxz
in
fiadd
jmp
xchg
add
adc
aaa
mov
mov
push
add
lds
(bad)
ins
xor
pop
pop
pop
inc
stos
mov
jmp
out
sub
mov
sub
cmp
push
mov
ins
xchg
pop
jl
dec
add
enter
test
or
jp
loop
dec
fisub
pop
fwait
inc
pop
and
adc
adc
(bad)
jp
xchg
data16
xor
enter
jmp
loop
scas
jbe
popf
push
xor
jno
mov
retf
dec
adc
dec
shl
mov
ins
cmps
addr16
jg
jnp
aam
test
loopne
xor
imul
fwait
stos
pop
xchg
jne
jmp
cmps
ss
jge
xchg
xchg
lds
ja
mov
js
ds
xor
push
out
mov
and
mov
bound
cmp
push
or
test
out
pop
pop
cdq
aas
mov
in
cmp
xor
sub
push
mov
xchg
xchg
mov
adc
xor
repz
bound
je
rol
mov
loopne
(bad)
jle
mov
pop
or
out
xor
scas
jnp
test
mov
xor
test
inc
jno
pop
mov
or
das
xor
xchg
out
sub
mov
and
cwde
repnz
dec
push
pop
pop
stos
mov
xlat
cwde
sbb
addr16
test
sbb
pop
dec
inc
pop
or
in
cmp
pop
mov
je
test
mov
lods
add
mov
leavew
stos
sbb
scas
push
push
push
jnp
or
or
dec
push
dec
mov
addr16
jno
inc
add
sub
lea
stos
pushf
add
imul
std
cwde
cli
cmps
xor
cdq
mov
sub
or
loope
add
inc
fcom
jno
or
jb
jnp
retf
and
dec
jae
clc
cmps
rcl
add
push
xlat
push
mov
int
pop
aad
inc
xchg
jl
xchg
jbe
jae
pop
ror
popf
mov
cmp
cld
shl
mov
sub
mov
fidivr
in
gs
mov
push
into
pop
int3
jg
mov
fcom
adc
imul
cld
pusha
bound
adc
sub
sbb
(bad)
xor
push
push
(bad)
sbb
fistp
add
jge
push
pop
mov
jl
rcl
rcl
xchg
dec
out
mov
xchg
push
xchg
std
js
loopne
(bad)
in
cmp
rcr
loope
cmps
call
aad
fcomip
(bad)
xlat
fs
xor
call
and
or
pop
pop
test
or
xor
jnp
call
sub
gs
fnsave
in
movs
xor
cmps
int3
mov
mov
push
sbb
call
cld
mov
adc
call
add
push
inc
mov
pop
int3
neg
jle
push
mov
xchg
stos
push
loop
ins
push
outs
fldenv
les
mov
data16
jae
mov
dec
nop
outs
fldcw
ins
inc
dec
stc
cdq
mov
call
adc
sub
mov
xchg
inc
and
jp
shl
inc
scas
data16
mov
inc
out
and
mul
push
test
retf
cs
mov
(bad)
aam
popa
(bad)
(bad)
pop
es
std
test
mov
inc
ins
repnz
movs
cmp
push
add
mov
push
push
ja
or
retf
into
mov
mov
pop
dec
enter
loopne
cmps
mov
sbb
idiv
jmp
dec
and
fdiv
xor
retf
adc
mov
sbb
in
jl
enter
xchg
jmp
mov
cdq
(bad)
out
lahf
leave
inc
imul
fld
and
dec
popa
adc
cmp
mov
add
inc
jne
movs
pop
pushf
movs
(bad)
retf
cmp
dec
ret
test
push
outs
xchg
add
aas
leave
imul
mov
std
pop
mov
or
mov
mov
dec
into
enter
xchg
xor
mov
lock
ja
test
retf
jnp
add
in
push
les
and
arpl
aam
mov
jle
jecxz
lds
fwait
or
or
test
mov
shl
ss
adc
push
jp
sub
rcr
fisttp
xchg
in
or
cmps
or
add
jl
sar
js
ss
das
repnz
and
add
jp
neg
inc
mov
adc
mov
daa
jge
xchg
popa
inc
out
dec
out
sub
or
in
fidiv
ret
sbb
jnp
enter
or
mov
cdq
fcom
pop
int
dec
stc
mov
pop
add
jbe
fiadd
shl
aaa
fcomip
pop
mov
sub
xor
test
mov
adc
mov
pop
mov
ror
in
je
imul
test
inc
rol
jecxz
je
movs
cmp
fcomp
or
xchg
push
push
ins
sub
repz
(bad)
out
mov
ss
xor
and
sub
pusha
icebp
sub
lods
xor
and
test
fnstenv
and
mov
and
loop
ret
inc
mov
cmc
inc
in
mov
ins
sub
popf
fsubr
xor
loopne
adc
leave
mov
cmp
(bad)
imul
dec
mov
pop
inc
ss
js
ret
mov
adc
aam
and
(bad)
jno
xchg
scas
cdq
sar
rcr
je
add
in
popa
dec
xchg
(bad)
jle
xchg
in
jp
inc
jg
mov
movs
jle
and
pop
mov
xlat
stc
push
into
jbe
outs
push
out
jbe
xchg
and
push
outs
(bad)
cli
push
(bad)
pushf
ja
xlat
fsubr
stos
mov
pop
and
lods
out
out
mov
inc
retf
dec
call
cmp
cmp
sahf
xchg
popa
call
ds
xchg
out
jae
mov
push
cld
stos
pushf
mov
std
push
add
mov
cs
mov
dec
call
push
mov
adc
mov
dec
mov
sahf
inc
dec
scas
js
xchg
jecxz
mov
push
adc
clc
adc
inc
lods
sub
add
sub
jnp
stos
shl
icebp
pop
sub
mov
mov
xor
rol
test
test
stos
or
pop
in
pop
dec
jle
fmul
stos
sub
div
in
sub
push
jns
inc
popa
stc
xor
fs
imul
pop
mov
jg
sti
stos
(bad)
xlat
push
int
(bad)
sub
mov
fild
xlat
icebp
push
dec
push
sbb
(bad)
cld
movs
xchg
sub
rcl
add
gs
jge
rcr
push
xor
ins
(bad)
xchg
mov
movs
xchg
rol
jmp
xchg
cdq
mov
icebp
icebp
sbb
jbe
xor
or
mov
mov
or
jbe
xor
retf
add
scas
dec
push
mov
mov
lds
xor
pop
pop
leave
sbb
cmp
js
add
fsub
xchg
ss
dec
daa
and
inc
std
sar
or
push
aad
js
or
int
pop
jge
loop
repnz
ja
or
and
int3
rcl
out
fmul
outs
(bad)
cmp
data16
pop
add
inc
scas
xor
ins
inc
movs
push
add
and
idiv
dec
jmp
pusha
fwait
pop
and
push
jecxz
stos
mov
sbb
imul
push
and
loope
ret
mov
shr
push
dec
add
int3
adc
jb
arpl
sub
in
xor
push
bound
fwait
pmovmskb
mov
(bad)
loope
nop
mov
add
add
xor
lock
outs
adc
scas
movs
test
mov
mov
add
adc
and
test
xchg
mov
cdq
pop
xchg
add
les
data16
call
pop
sub
jecxz
pop
movsx
add
ins
jp
imul
cmp
test
mov
je
pop
clc
sbb
fwait
stos
pusha
jne
dec
imul
xchg
jns
sti
ds
push
test
icebp
add
pop
daa
sar
pop
and
sub
inc
lods
(bad)
inc
xchg
add
push
mov
shl
lds
leave
daa
sahf
pop
jnp
imul
scas
inc
ret
call
jns
pushf
rol
fwait
int
(bad)
sbb
sub
fidiv
xor
(bad)
dec
fdivp
mov
imul
jmp
pop
lock
lods
jo
mov
lock
in
add
cmc
and
push
push
(bad)
lods
jg
add
daa
mov
ins
xor
pop
shr
xor
mov
fldz
lock
(bad)
std
sbb
adc
or
cmp
cmp
xor
mov
retf
pop
jmp
add
cmp
jb
push
pop
mov
cmp
xor
jmp
in
inc
sub
mul
ins
pop
call
cmp
mov
jnp
mov
lahf
xchg
jnp
pop
mov
into
ds
data16
mov
scas
push
inc
dec
popf
lock
in
xor
(bad)
(bad)
mov
inc
sub
(bad)
outs
mov
xchg
lods
push
xchg
out
ror
out
sar
jne
out
test
dec
in
ja
or
pop
mov
fsubr
push
mov
and
and
shl
mov
inc
jne
es
pushf
(bad)
pop
(bad)
cmp
add
and
repnz
sbb
mov
js
mov
iret
and
test
mov
popf
in
pop
mov
cmps
sbb
scas
cmp
fisub
jae
pusha
jno
sti
jg
xor
or
retf
outs
mov
out
iret
icebp
sbb
xor
clc
sbb
xchg
in
int
xchg
(bad)
aam
std
xchg
xor
jo
xchg
retf
gs
cmp
mov
mov
xchg
sahf
iret
das
aaa
addr16
jg
lea
inc
adc
leave
add
lea
popf
fs
mov
(bad)
not
xchg
arpl
or
add
retf
fwait
shl
aaa
and
addr16
dec
push
cs
or
aam
es
cs
mov
mov
or
pop
repnz
xlat
pop
inc
cmp
ins
add
fisub
mov
mov
mov
lods
scas
in
jl
xor
sub
mov
sar
sbb
sbb
call
pop
jle
mov
jecxz
mov
int
push
push
out
daa
call
adc
push
mov
aam
(bad)
(bad)
imul
jecxz
mov
outs
mov
nop
pop
pop
ss
div
add
add
dec
rcl
cmp
scas
xchg
jg
mov
les
fsub
stc
pushf
sub
into
mov
or
add
hlt
shl
sar
sub
pop
sbb
iret
xchg
and
fstp
push
inc
call
mov
enter
cmps
sahf
fdivr
cmps
ins
lds
ins
dec
pusha
jmp
mov
imul
sub
dec
mov
mov
fsubr
add
adc
jno
cmp
fistp
jmp
push
daa
and
aam
out
std
add
icebp
mov
cdq
nop
jne
outs
dec
ins
cld
pop
ror
mov
int
shl
sub
cmp
pop
std
fcmovu
and
adc
xor
xor
scas
fs
loop
add
mov
retf
adc
lods
repz
shr
sar
sub
xor
movs
mov
arpl
cmp
dec
fisttp
shr
cmp
xchg
mov
cli
clc
mov
sbb
push
ror
mov
pop
fdivrp
pop
imul
xor
call
mov
mov
sti
aas
call
fsub
pop
les
jns
sbb
or
mov
sahf
mov
leave
out
outs
fldenv
loopne
jle
xor
stos
mov
xor
mov
jmp
add
data16
mov
in
xchg
sub
mov
inc
dec
or
clc
inc
jmp
mov
adc
icebp
push
inc
sbb
enter
xchg
xor
pop
call
xor
mov
push
iret
mov
loop
cmp
scas
test
push
sbb
sub
ins
mov
into
mov
movs
mov
cmc
out
or
push
pop
dec
loop
add
adc
xchg
imul
dec
cmps
inc
lock
pop
inc
(bad)
fist
(bad)
frstor
adc
mov
pop
lods
and
test
cs
iret
movs
jbe
adc
mov
push
and
mov
push
pop
dec
pop
out
dec
pop
push
in
adc
fnstsw
ficom
sub
stc
lea
xor
stc
popa
hlt
int
std
movs
xor
(bad)
and
sub
xchg
fcomp
push
or
or
fcmove
das
cmp
mov
xchg
cmp
cmp
inc
cmc
mov
and
add
div
fnop
rol
sbb
cdq
mov
mov
cli
inc
pop
mov
fistp
frstor
add
div
xchg
mov
xor
into
sbb
xchg
sbb
loopne
pop
mov
pop
out
not
stos
mov
push
mov
enter
in
xor
jle
shr
fsubr
mov
cmps
gs
(bad)
fild
cmc
jl
bnd
sub
leave
adc
aas
xchg
in
movs
shl
jmp
fs
dec
enter
pop
(bad)
into
cmc
nop
xor
loop
push
lods
(bad)
xchg
xchg
mov
scas
dec
adc
aam
lds
iret
popa
cmps
ins
inc
or
pop
xor
xchg
(bad)
aas
ins
in
ss
dec
inc
addr16
js
outs
xchg
sbb
pop
mov
and
in
out
lods
addr16
popf
mov
fdiv
cmps
adc
bound
cld
sub
xchg
sbb
add
inc
aas
call
push
inc
cwde
inc
xchg
in
jo
aam
int3
fnstsw
cs
(bad)
mov
movs
adc
pop
enter
adc
push
sbb
push
sti
add
jo
xor
fidivr
neg
test
cwde
retf
jbe
iret
sbb
xlat
into
pop
jns
or
jnp
int
jbe
shl
pop
iret
pop
cmp
sub
cmp
mov
add
adc
add
xchg
or
fild
mov
out
or
pop
mov
movs
popf
nop
xor
in
inc
mov
(bad)
push
sbb
dec
sub
dec
outs
mov
call
and
ret
sbb
out
pusha
push
sti
xor
add
dec
push
cld
ins
(bad)
std
dec
arpl
cmp
sbb
add
push
imul
sbb
sbb
xchg
push
mov
xor
cmp
cs
js
es
sbb
js
pop
xor
xlat
mov
mov
int
fiadd
xor
int3
jnp
jg
sub
adc
and
push
cwde
push
dec
push
cdq
xor
jnp
cld
lods
adc
pop
ror
arpl
cmp
adc
adc
adc
ss
jecxz
inc
dec
fild
pusha
push
repnz
(bad)
popf
sub
or
daa
mov
outs
cdq
sbb
fwait
cmp
inc
sbb
int
sar
out
das
cwde
cmp
loope
pop
pop
xor
xchg
xchg
mov
push
xchg
daa
(bad)
mov
(bad)
imul
push
dec
cld
add
add
adc
adc
xor
and
mov
out
enter
mov
xor
cs
enter
mov
dec
add
popf
mov
data16
mov
sub
mov
cmp
enter
mov
jne
pop
mov
out
or
aad
leave
ds
clc
inc
inc
adc
mov
jmp
add
pop
cmps
mov
sub
xor
cmp
sub
xchg
movs
aaa
arpl
push
sub
xchg
jae
into
inc
nop
sbb
or
mov
adc
xor
sbb
jno
stos
sub
dec
xchg
mov
sar
retf
imul
push
lods
jb
adc
mov
repnz
adc
or
pop
push
xchg
jo
pop
retf
pop
cs
push
cwde
inc
ja
cmp
xchg
dec
xor
push
pop
xchg
push
pop
popa
push
(bad)
rcl
test
inc
jl
stos
mov
pop
neg
mov
dec
push
sub
aaa
mov
cmc
pop
cmp
call
cmps
sahf
inc
in
or
dec
dec
lahf
ins
jo
cdq
and
aad
jmp
or
xor
jl
call
jle
stc
inc
jne
mov
(bad)
push
mov
mov
xor
or
pop
loope
push
test
mov
or
inc
xchg
popf
test
xchg
push
pop
adc
adc
adc
sbb
push
ret
lods
sahf
scas
push
mov
(bad)
mov
and
stos
repz
shl
mov
jle
call
push
inc
fsub
cmp
push
pop
cmc
imul
pop
shl
adc
stc
(bad)
xchg
les
xor
ficomp
ins
aaa
inc
xor
(bad)
cmc
push
fdivr
fbstp
popa
loope
mov
or
js
sahf
mov
(bad)
aad
std
loope
fs
in
cwde
inc
add
xchg
fldenv
cmps
pop
daa
rcl
js
sub
mov
xchg
fwait
inc
mov
xor
out
mov
mov
stos
ss
nop
pop
adc
stos
jnp
les
xchg
jae
sbb
imul
inc
lods
jb
daa
sub
xchg
fldpi
hlt
mov
shr
jecxz
pop
leave
xchg
retf
and
iret
mov
pop
mov
adc
lds
and
and
movs
pop
or
mov
cmps
xchg
xor
sbb
shr
jle
rcr
add
std
dec
push
leave
push
pop
jmp
into
cld
je
pop
mov
adc
add
mov
xchg
inc
or
shl
repnz
jne
lds
or
call
xor
mov
mov
mov
fmul
adc
cmp
mov
or
or
pop
je
enter
pop
pop
aas
jle
jl
xor
and
aaa
push
aas
add
push
ret
nop
aam
popf
clc
fwait
nop
nop
ret
or
es
mov
push
sahf
dec
in
gs
mov
into
repz
aaa
mov
cmps
dec
nop
sahf
and
loopne
push
cmp
mov
arpl
cmp
add
mov
fidivr
mov
loop
out
popa
bound
push
xchg
mov
lods
and
add
mov
scas
jg
adc
mov
dec
sub
push
mov
bnd
xchg
push
ret
mov
stos
xchg
mov
sbb
int
mov
add
xchg
pusha
and
imul
xchg
mov
dec
adc
cmp
jp
jmp
add
dec
popf
mov
jae
xchg
push
xchg
retf
and
fisubr
fsubrp
and
cmp
gs
out
cmps
cdq
ja
push
sub
rcl
ror
cmp
cmp
jne
out
fisttp
fs
lea
pop
ins
imul
(bad)
ds
dec
(bad)
test
lea
ins
fst
std
mov
sub
int3
or
pop
loop
outs
les
dec
xchg
in
xor
sub
cmp
jge
shr
sahf
jb
aam
or
aas
sbb
fwait
es
sub
cdq
sbb
rcr
dec
xchg
pop
mov
loopne
jno
bound
jnp
xchg
mov
imul
adc
inc
mov
rol
xor
(bad)
sbb
lea
jg
arpl
xor
fdiv
fstp
imul
add
pop
mov
jnp
cld
xchg
pop
mov
out
loopne
push
xchg
in
idiv
lds
pusha
add
mov
mov
sub
dec
scas
and
xor
bound
jae
cmp
cmps
mov
lahf
pop
mov
push
pusha
nop
imul
cmp
and
mov
push
or
sbb
lahf
sub
sub
jnp
or
out
call
sbb
sbb
ficom
dec
inc
cmp
mov
aaa
std
inc
pop
mov
ins
js
fcmovnb
pop
(bad)
sbb
push
into
iret
ret
and
pop
push
jne
sub
(bad)
dec
mov
push
jns
not
dec
rcr
sub
pop
pop
xchg
dec
inc
scas
in
mov
mov
xchg
int
xor
int3
xor
jne
cmps
fs
xor
sbb
pushf
notrack
cmp
inc
sub
dec
in
cmps
mov
daa
(bad)
mov
mov
inc
xor
cld
aam
add
dec
rcl
nop
cmp
cmp
xchg
xchg
test
and
mov
push
push
cmp
jle
push
out
icebp
push
xchg
add
shl
mov
and
inc
enter
daa
sbb
or
jb
push
jg
in
cmp
jmp
mov
aas
mov
dec
mov
(bad)
mov
xor
outs
imul
es
and
(bad)
xchg
daa
outs
xor
adc
aas
retf
test
xchg
std
call
mov
lock
jno
mov
cmp
inc
ret
mov
(bad)
psubq
mov
test
icebp
push
jmp
fild
add
sub
or
movs
sbb
xor
inc
jge
ficomp
retf
nop
pusha
xchg
inc
repz
or
outs
push
out
inc
int
xchg
push
je
xlat
push
icebp
mov
mov
lahf
div
sub
push
xchg
xor
push
sub
test
jmp
push
cmp
cmp
pop
pop
loope
cld
sbb
iret
repz
jmp
dec
jecxz
sub
adc
xchg
xchg
je
test
loopne
fnstcw
es
cwde
push
jecxz
mov
sar
sbb
icebp
ret
pop
ins
push
jg
or
push
xor
cmp
pop
mov
ins
mov
or
sbb
sahf
push
add
popf
dec
inc
pop
cmp
mov
fcmove
xchg
mov
push
jbe
aam
repnz
loope
hlt
add
mov
and
repnz
xor
fsubrp
xchg
mov
loope
xor
idiv
and
sub
out
sbb
xchg
xchg
pop
cmp
mov
jp
pop
cmp
mov
sub
cld
int
adc
repz
and
and
jle
xor
xchg
xor
mov
dec
dec
dec
or
test
movs
xchg
adc
ret
int
test
mov
dec
mov
sbb
cmp
pop
sub
(bad)
mov
(bad)
mov
sbb
add
mov
aam
cli
es
sub
xchg
add
jb
cmc
fdiv
repnz
sti
lods
adc
out
dec
and
out
mov
inc
(bad)
push
mov
pop
out
test
push
addr16
in
imul
call
mov
xchg
add
jmp
dec
xchg
call
es
push
push
jne
pop
xchg
imul
xchg
push
into
or
dec
push
push
add
sub
jge
fsubr
mov
es
imul
sbb
inc
clc
lock
dec
shr
fild
jne
lahf
mov
out
sub
(bad)
inc
cmc
sub
loope
not
jmp
or
outs
sti
jl
sub
fistp
cdq
lods
scas
add
jg
repz
out
sbb
cvtps2pi
cwde
test
jl
jge
mov
mov
xlat
dec
jge
dec
pop
xor
fmul
and
(bad)
daa
jae
sti
mov
jp
cli
addr16
push
cwde
mov
push
icebp
bound
jo
adc
push
pushf
bound
and
adc
dec
pop
leave
cmp
add
pop
aaa
nop
xchg
or
pop
test
movs
in
pop
xchg
cmp
sbb
clc
sti
jl
test
pop
xchg
lea
and
lds
jb
lahf
mov
mov
sub
mov
out
pop
cs
nop
inc
xor
adc
push
shr
xor
in
mov
aaa
ret
js
sbb
and
and
sbb
inc
call
mov
aaa
jmp
cmp
lahf
iret
mov
cmp
pop
xor
dec
cs
shl
pop
and
ret
repz
dec
jl
xor
das
push
scas
stc
xchg
xchg
inc
mov
push
xor
call
cmc
xor
ins
mov
stc
ret
rcl
call
sbb
stc
sub
dec
or
cmps
pop
xlat
imul
sub
push
out
sbb
sti
inc
fisub
or
xor
cmp
out
or
pop
std
pop
and
sub
inc
xchg
popa
sbb
(bad)
jb
js
test
loop
aam
in
aaa
xor
popa
push
std
jmp
mov
dec
pop
xor
cmp
jno
jb
cld
push
dec
sar
cmp
inc
cmp
or
movs
add
and
mov
cld
lea
jns
arpl
retf
sub
cmp
loope
mov
xor
outs
in
lahf
mov
repz
and
inc
sbb
mov
mov
repz
fmul
adc
push
in
inc
mov
sbb
pextrw
cmps
popf
out
pop
push
test
cs
mov
jo
in
and
mov
ins
mov
cmps
push
bound
or
jle
rol
jmp
aas
sub
push
xchg
mov
test
idiv
(bad)
call
mov
lds
push
int3
xor
sub
cwde
xchg
arpl
popa
add
mov
dec
nop
inc
mov
pushf
mov
je
push
sahf
pusha
neg
xor
out
out
in
lahf
mov
loop
repz
test
dec
fdivr
add
in
movs
sbb
jmp
sti
dec
pop
aad
xchg
shl
rcr
faddp
dec
and
retf
or
adc
mov
sub
jo
retf
push
mov
dec
dec
dec
jns
dec
mov
mov
dec
imul
inc
inc
cmps
jne
lock
dec
das
add
inc
adc
call
aaa
sub
cmp
push
adc
ror
ds
add
iret
mov
xor
ja
arpl
mov
xor
stos
scas
mov
pop
pmaxub
xor
and
into
ds
icebp
(bad)
outs
mov
and
xchg
(bad)
xlat
ror
pop
sub
push
xor
and
cwde
mov
adc
cmps
test
hlt
ds
or
lods
pusha
lahf
cld
cwde
lea
out
addr16
iret
cmp
das
aad
mov
ror
fmul
and
(bad)
and
xchg
mov
test
jl
jbe
fsub
in
or
aam
xlat
out
push
jl
mov
shl
rcl
div
nop
xlat
fstp
popf
push
inc
add
into
mov
gs
sbb
ret
inc
daa
jmp
push
repnz
aam
xchg
mov
pop
mov
fwait
leave
call
pop
fnstsw
push
imul
shl
ins
aas
fisubr
xchg
ror
inc
dec
mov
mul
mov
inc
pop
pop
fs
xchg
je
dec
out
lods
sub
out
jb
shl
lds
ss
movs
ja
inc
in
mov
movs
(bad)
or
aaa
and
mov
and
icebp
inc
and
mov
lods
adc
fdivr
cwde
jl
jmp
test
sub
scas
push
es
push
cmp
sbb
mov
add
or
ins
dec
fwait
xchg
in
xchg
stc
repz
mov
addr16
stos
movs
and
lock
addr16
xchg
arpl
rcl
jnp
cmp
cdq
xchg
icebp
pop
mov
imul
shl
jno
sub
xchg
pop
jl
fdiv
sub
xor
or
ror
in
sub
jmp
loope
fst
je
aas
sub
ret
jl
jne
inc
es
cmp
stos
es
ret
sub
loope
xchg
pop
mov
movs
xor
cmp
dec
imul
add
loop
jp
sbb
or
dec
cmp
sbb
jne
mov
and
cld
and
cmc
sub
xor
test
and
or
push
mov
adc
sub
lock
sub
outs
aad
je
adc
inc
mov
loop
dec
pusha
ss
cwde
ja
inc
sar
dec
inc
lods
aad
cs
(bad)
push
sar
cmp
dec
fsub
xchg
xchg
push
rep
xchg
dec
test
mov
jmp
(bad)
inc
push
adc
cmps
enter
dec
jb
stos
dec
test
(bad)
into
xchg
fsub
ins
push
loopne
loopne
xchg
fsub
and
cmps
data16
xchg
fs
mov
fwait
mov
inc
cmps
adc
push
add
test
mov
cdq
sub
inc
cmp
scas
mov
inc
and
jl
mov
and
xor
mov
lock
dec
xchg
jg
int3
cmp
cmp
fimul
jmp
lds
lahf
out
sti
ficom
xor
xchg
cmp
or
xor
es
sub
jg
mov
mov
es
dec
lds
xor
cmp
sub
bound
adc
push
sbb
push
popa
popf
das
call
stc
pushf
sub
mov
movs
cmp
int
xor
stc
jmp
lea
dec
loop
xor
xchg
imul
fs
arpl
sub
je
or
ja
jp
dec
loope
dec
mov
ror
es
push
fcom
loop
loopne
inc
inc
mov
cmp
dec
add
xchg
mov
add
loopne
lds
xchg
xlat
stc
stos
sub
xchg
pop
inc
jmp
xchg
adc
rol
out
inc
push
inc
jp
mov
in
int
enter
cmps
xor
ja
aam
inc
push
mov
jne
mov
popf
cmp
in
xor
or
jb
jmp
shr
push
dec
movs
jbe
add
xchg
pop
mov
fst
jb
sbb
jle
cmp
or
(bad)
fs
sub
sub
in
cli
jmp
repz
add
add
add
ins
fs
es
cmps
outs
mov
outs
ror
outs
in
lea
iret
or
(bad)
in
xchg
mov
test
sbb
dec
jbe
inc
pop
fstp
leave
ror
push
dec
out
pop
xlat
out
popf
imul
sub
ss
mov
or
dec
lahf
mov
and
mov
(bad)
fisttp
push
int
mov
or
jne
or
xchg
cwde
aad
rcr
sub
add
xchg
inc
pop
adc
adc
push
in
jno
mov
jb
mov
ret
push
fild
das
add
sub
test
imul
push
aad
add
scas
movs
add
ffreep
inc
nop
es
gs
sub
jmp
pop
es
jmp
(bad)
aas
int3
xor
call
xchg
mov
sar
out
xlat
adc
call
in
or
jmp
cmp
adc
test
mov
adc
in
push
lea
fidivr
sub
pop
lods
ret
mov
out
push
and
jg
stc
mov
jne
daa
jbe
fcmovnbe
out
sti
mov
lock
sti
movs
dec
mov
call
ficom
aaa
xchg
xchg
pop
addr16
inc
mov
mov
adc
mov
enter
fst
push
out
sbb
pop
cmp
sar
jmp
hlt
loop
mov
sar
pop
int
cli
mov
les
ret
jae
mov
xor
bnd
enter
xor
push
add
js
adc
xchg
pop
add
xchg
inc
pop
pushf
and
jmp
xor
loop
aad
cmps
cmp
mov
jle
das
add
pop
inc
das
in
enter
rcr
jmp
nop
xchg
out
jmp
or
dec
cmps
outs
sub
test
mov
xchg
jge
pop
fiadd
sub
nop
jecxz
push
clc
sub
enter
les
mov
bound
push
iret
mov
mov
add
scas
sti
pushf
call
aaa
push
jo
dec
data16
jmp
cwde
leave
daa
loope
cmp
test
je
mov
adc
addr16
in
imul
mov
and
in
pushf
push
mov
loopne
stc
rcl
hlt
adc
jg
push
dec
das
shl
(bad)
daa
xor
test
je
xor
cmps
sar
cmp
push
push
push
pop
or
adc
push
jae
jbe
pop
xchg
xchg
mov
ins
jo
add
mov
lea
gs
lods
mov
push
stos
jmp
(bad)
add
mov
sti
call
loop
mov
push
pop
mov
xchg
icebp
mov
add
xor
(bad)
je
pop
xchg
adc
retf
xchg
add
(bad)
stos
lock
mov
daa
cmp
jbe
ror
mov
ret
pop
lods
or
xor
(bad)
push
dec
and
mov
dec
test
(bad)
mov
ss
pop
push
fwait
loopne
sbb
jp
jae
push
push
mov
pop
scas
ret
aas
ret
jno
mov
mov
jle
in
imul
pop
popf
inc
ins
inc
mov
cmps
or
fcmovnu
cld
mov
push
or
call
into
(bad)
div
fstp
out
test
dec
jbe
sbb
das
push
mov
xchg
neg
mov
and
ficomp
icebp
sub
and
(bad)
and
pop
dec
and
les
sbb
mov
fisubr
lods
pop
cmp
sbb
loope
mov
pusha
scas
in
push
fbld
jno
jb
sti
das
add
arpl
sar
jp
scas
ja
sub
push
inc
dec
pop
repnz
pop
mov
sub
cmp
scas
cwde
inc
addr16
stc
push
dec
cmp
jb
cmp
inc
aas
mov
mov
xor
sub
(bad)
pop
popf
int3
outs
sti
js
arpl
sub
mov
xchg
loopne
pop
xchg
dec
stos
leave
sub
sbb
outs
out
inc
popa
jecxz
cmp
mov
inc
scas
es
ds
nop
(bad)
in
(bad)
mov
ds
lock
dec
cmp
xchg
or
mov
fnstenv
xchg
test
rcl
ins
jl
or
cmp
mov
mov
imul
sbb
xor
fdivr
gs
in
jbe
mov
rol
mov
inc
std
sub
aas
arpl
div
popf
dec
adc
push
dec
pop
xchg
dec
jmp
jno
add
add
scas
sahf
mov
rcr
sub
clc
push
ss
mov
sti
rcl
and
mov
(bad)
and
sub
mov
call
imul
adc
mov
dec
jo
cmp
add
fisub
sub
cwde
int
mov
outs
call
cdq
ds
inc
sbb
mov
repz
loopne
or
mov
cli
or
(bad)
call
in
push
push
mov
outs
shr
xchg
mov
cli
loop
jp
pop
mov
les
retf
adc
xor
cmp
xchg
jmp
clc
sahf
call
add
popa
pop
movs
inc
push
test
mov
pop
sub
or
ja
pusha
test
scas
mov
out
das
enter
fwait
xlat
lea
inc
(bad)
sbb
xor
mov
ret
call
xlat
outs
cld
add
movs
inc
inc
push
push
test
fbld
sub
in
mov
sub
mov
jb
xor
dec
xor
mov
mov
pop
mov
ret
xchg
int
test
int3
dec
adc
int
jmp
arpl
hlt
mov
adc
dec
jb
(bad)
ds
pop
jp
and
add
lods
dec
das
ffreep
pop
pop
dec
pusha
cmp
hlt
in
loopne
arpl
mov
pop
pop
sub
cmp
push
in
cwde
(bad)
push
in
cli
mov
push
ja
les
push
pop
push
call
aas
loop
and
popa
aam
shl
into
mov
retf
or
sub
pop
repz
pop
push
jmp
jo
push
hlt
aad
xchg
dec
push
imul
popf
pop
shr
and
jge
test
cvtdq2ps
cld
adc
add
push
inc
pop
adc
cmp
cld
into
loop
mov
jmp
mov
je
inc
stos
gs
(bad)
call
sbb
xor
scas
daa
xor
pop
lock
cmp
ins
jge
mov
jmp
push
je
aam
pop
cmc
xchg
out
push
repz
cmp
scas
dec
push
addr16
xchg
xor
mov
dec
add
cmp
loopne
and
pop
jae
call
xchg
mov
call
pop
addr16
jne
mov
xchg
adc
popa
cs
push
add
mov
in
(bad)
xchg
fldenv
jl
cs
mov
shl
push
xor
daa
or
rcr
or
inc
cmp
test
sub
jge
cdq
int3
adc
dec
and
je
mov
dec
ja
popf
pusha
fsub
sti
ret
fabs
ret
mov
xchg
nop
hlt
scas
cwde
mov
adc
out
add
daa
(bad)
cmp
mov
bound
dec
leave
aam
mov
mul
push
or
sub
pop
out
pusha
imul
scas
int
clc
mov
push
icebp
stc
inc
xchg
cmp
jl
push
jl
jp
mov
sti
inc
xchg
dec
fstp
push
push
scas
retf
shl
jns
cs
sti
rcl
mov
shl
push
adc
dec
sti
data16
imul
js
nop
out
sub
mov
imul
into
sub
add
push
pop
leave
rol
xchg
aas
xchg
lock
lods
or
xchg
mov
(bad)
sti
jmp
scas
into
sbb
jg
and
dec
popf
enter
(bad)
mov
mov
popf
(bad)
jnp
fst
jmp
out
iret
push
xchg
ror
xchg
fdivr
mov
xchg
jo
mov
loope
leave
in
push
and
in
push
jb
xchg
daa
(bad)
xrstors
iret
add
or
jb
test
sub
leave
add
add
sbb
call
shl
popf
mov
sbb
xor
ins
dec
inc
cs
sbb
std
sar
inc
cli
repz
jo
mov
int
mov
inc
(bad)
in
test
les
imul
jecxz
(bad)
xor
(bad)
in
sub
cld
fimul
jle
lock
hlt
into
push
xchg
push
mov
sbb
shr
sti
inc
mov
out
sbb
xchg
fadd
push
sti
imul
and
jmp
test
mov
cs
mov
call
dec
xchg
fisttp
sbb
and
inc
(bad)
cmp
rcr
jb
fwait
in
shl
mov
jo
pop
push
gs
mov
dec
dec
xchg
push
mov
jp
ja
inc
stos
test
ins
rcr
aas
and
mov
clc
aas
scas
mov
fsubr
mov
ins
in
ror
out
mov
bound
dec
test
lock
sbb
je
cmp
cld
mov
and
pop
xor
(bad)
jo
inc
dec
dec
rol
cmp
es
(bad)
loopne
jg
test
mov
retf
jo
push
sbb
mov
adc
popf
loopne
inc
jne
pusha
lods
(bad)
adc
stc
dec
xchg
jmp
int3
jbe
shl
push
xchg
pop
call
mov
push
xor
dec
mov
test
cld
mov
repnz
and
push
inc
in
pop
icebp
adc
outs
cld
inc
adc
std
xchg
push
mov
add
push
adc
mov
shl
or
add
arpl
sub
or
adc
jecxz
xor
mov
or
jmp
mov
je
stos
and
mov
mov
ja
pop
sub
mov
mov
adc
cdq
cmp
mov
xchg
ret
js
sub
jnp
push
xchg
xchg
xchg
into
jecxz
sub
ret
push
stos
es
fisub
in
cli
mov
sub
xchg
sub
sub
lods
icebp
xchg
fmul
test
repz
jle
(bad)
push
mov
ror
das
xlat
out
xchg
push
aad
fmul
clc
xchg
scas
pop
mov
push
(bad)
pop
and
mov
imul
dec
rcl
mov
inc
add
and
cmp
pop
dec
stc
jecxz
jge
and
ret
jge
xor
enter
sbb
sbb
xor
pop
out
test
sbb
mov
push
pop
sub
inc
inc
(bad)
clc
jae
mov
mov
pop
sub
sub
push
test
das
jno
outs
push
cld
jp
(bad)
aam
call
nop
lea
popf
imul
mov
dec
xor
dec
push
test
call
adc
rcr
popf
inc
sub
arpl
bound
ja
test
jmp
xchg
mov
jno
test
shr
mov
in
lock
or
out
leave
(bad)
repnz
xchg
pop
mov
cmp
ror
mov
adc
lods
pushf
mov
dec
jae
retf
repz
xor
test
(bad)
pop
loope
cwde
jp
pop
push
out
lods
stc
movs
inc
xor
test
add
(bad)
sub
pusha
arpl
adc
sbb
js
std
xchg
in
mov
jmp
ins
pop
lods
sbb
dec
mov
mov
push
in
dec
jo
loopne
aaa
scas
push
or
popf
and
and
cmp
test
aad
int
lock
mov
jo
daa
(bad)
mov
mov
jbe
add
stos
icebp
fcos
retf
cmp
cmc
out
(bad)
push
sahf
popa
inc
or
mov
rcl
fdivr
or
lock
sbb
jmp
movs
aad
lea
jmp
and
and
jmp
ja
repnz
inc
jo
scas
movs
and
xchg
enter
repz
mov
jmp
sub
je
push
xor
xchg
inc
push
sahf
dec
inc
icebp
fmul
add
aaa
cmps
into
lods
push
out
cmc
mov
mov
stc
jle
mov
fistp
scas
pop
fs
mov
aas
das
bound
cmp
fmul
pop
xor
repz
retf
mov
aaa
xchg
fwait
pushf
loop
push
mov
or
shr
cmp
push
mov
or
push
pop
ins
pop
fdivr
mov
sar
icebp
xlat
popf
push
sbb
lahf
or
mov
ret
cmp
rcl
out
mov
mov
pop
pushf
pop
icebp
xchg
repnz
mov
jno
push
push
xchg
inc
inc
or
or
mov
add
xchg
popa
les
popa
mov
sbb
push
sahf
loopne
xor
lods
mov
mov
cwde
ret
sub
mov
ds
jge
adc
or
into
push
fstp
pop
aam
retf
add
lahf
mov
cmp
test
pop
jecxz
push
jl
dec
bound
jno
popf
sbb
rcr
sub
(bad)
cmps
xor
mov
arpl
ficom
or
fs
iret
inc
scas
inc
push
push
cmc
mov
cwde
sbb
jl
cmp
imul
cs
int3
arpl
fs
xchg
pop
sub
enter
sub
rol
inc
adc
cmp
push
inc
repnz
cmp
fld
inc
jmp
adc
xor
push
or
es
xchg
in
rol
cmc
cmp
outs
rcr
int3
hlt
sbb
cmps
jmp
xor
mov
xor
loop
jl
push
dec
ins
jb
dec
(bad)
sub
inc
sub
add
test
ins
imul
addr16
push
mov
fs
leave
push
sub
xor
out
popf
sbb
shl
(bad)
sbb
inc
push
xor
in
jmp
call
cmp
cdq
mov
aad
in
rcr
or
mov
and
stos
cmps
out
adc
push
mov
lods
stc
add
addr16
ins
fiadd
pushf
mov
call
add
push
in
pusha
pop
stc
inc
fcom
ret
xlat
sub
xchg
cmp
ror
jne
pop
push
outs
dec
les
pop
inc
ss
sbb
pop
call
xor
(bad)
lods
mov
movs
adc
arpl
and
or
pop
or
aad
or
ret
rcr
push
xor
mov
inc
mov
xchg
inc
push
inc
ret
pop
dec
lods
popa
pextrw
sbb
call
sub
(bad)
shl
mov
popa
clc
test
(bad)
push
adc
and
add
imul
xor
jmp
in
int
(bad)
cmp
inc
repnz
xchg
into
and
nop
dec
push
mov
(bad)
and
mov
addr16
push
sbb
cdq
arpl
arpl
pop
or
pop
jmp
dec
push
inc
call
dec
add
sahf
scas
aad
or
(bad)
jb
xchg
stos
fsubr
fidiv
add
cmp
retf
xchg
in
xor
jmp
les
pop
and
data16
cmp
(bad)
pop
pushf
iret
fild
ins
ret
scas
sar
dec
or
xchg
dec
sti
xchg
imul
gs
scas
jg
jnp
xor
and
push
shl
in
out
mov
xchg
in
lds
outs
test
adc
mov
cmp
push
pop
mov
cmp
and
loop
push
loopne
pop
pop
bound
outs
xchg
addr16
cmps
xchg
mov
cmp
das
mov
jnp
fisttp
(bad)
stos
js
fisub
outs
xor
test
shl
arpl
cmp
add
xchg
sbb
(bad)
sbb
das
xchg
ss
les
xchg
(bad)
cmp
adc
lds
scas
add
sahf
loope
retf
outs
sub
fcmovb
inc
mov
jge
jns
inc
in
sub
mov
clc
js
xchg
xchg
out
mov
dec
and
rcr
sahf
or
add
aas
push
inc
ja
mov
(bad)
pusha
and
push
out
jmp
stc
or
mov
or
mov
scas
icebp
xor
frstor
cli
and
rol
sti
push
mov
call
push
push
das
push
mov
cmp
mov
jne
ja
xor
loopne
loopne
mov
xor
add
in
push
jge
repz
pop
xor
aas
cs
test
xchg
call
repnz
(bad)
mov
pop
shl
push
inc
mov
inc
mov
(bad)
cmp
mov
xchg
jae
cld
xor
mov
je
mov
jmp
or
mov
or
xor
add
add
sahf
cmp
fisubr
cmc
sti
mov
std
cmp
mov
iret
leave
xchg
xchg
xor
jl
je
push
test
jl
dec
mov
ret
in
aaa
js
pushf
sub
gs
sub
sub
jle
jl
mov
fcomp
ror
(bad)
dec
mov
sub
dec
sub
mov
je
jns
fsubr
or
dec
into
nop
push
scas
inc
xor
mov
add
xor
push
cwde
ins
test
jae
cmp
imul
xor
xchg
jg
sbb
add
dec
or
in
sti
adc
cmp
fbstp
aad
sbb
xchg
cmp
(bad)
lods
inc
mov
mov
ret
adc
pop
mov
ja
mov
or
arpl
lock
test
dec
stos
pop
cdq
loop
push
sub
and
mov
arpl
or
mov
test
jecxz
sbb
push
lock
fnstsw
stos
pusha
test
pop
inc
call
ss
and
retf
or
push
mov
imul
cmp
pop
not
push
or
repnz
mov
cmp
push
or
sbb
and
out
add
or
sti
jp
sar
mov
mov
lds
and
pop
in
sub
scas
add
movs
xor
ret
xchg
out
aam
cs
adc
outs
mov
pop
jp
outs
movs
popf
pop
out
jo
and
cmp
cld
jno
push
mov
iret
mov
push
xchg
out
mov
imul
fistp
lds
push
test
repz
push
dec
xchg
loop
aad
pop
jo
shl
in
sar
mov
adc
pusha
pop
add
outs
mov
xchg
aas
xor
icebp
mov
cmps
(bad)
(bad)
jb
fcomp
mov
mov
cmp
inc
mov
sbb
stc
jo
clc
push
ds
pop
and
rol
mov
rcr
adc
add
int
daa
adc
(bad)
in
sub
hlt
(bad)
pop
xor
inc
jns
(bad)
cli
gs
mov
pop
ins
ss
addr16
test
sub
mov
sbb
sub
data16
xchg
inc
or
cmp
cmc
js
xchg
in
adc
test
fisttp
sbb
or
and
fs
mov
xchg
jp
shl
pop
sub
adc
stc
xor
mov
cmps
adc
mov
sbb
jns
jle
ins
fsincos
(bad)
iret
pop
inc
imul
jl
sub
fucomi
and
dec
push
in
add
mov
aas
lods
mov
repnz
adc
or
dec
fld
inc
mov
sbb
mov
out
es
loope
xchg
sub
(bad)
outs
out
call
mov
scas
cmp
push
push
push
mov
add
mov
sub
mov
jle
sub
xchg
and
cmp
aas
xchg
movs
lea
jae
mov
fucom
xchg
add
movd
add
add
and
cmp
xchg
outs
repnz
cdq
push
push
and
and
mov
jmp
shl
imul
enter
cmc
fcomi
rcr
fcom
rcr
into
mov
(bad)
lock
test
push
xchg
and
loopne
pop
mov
out
aas
test
sar
adc
mov
xchg
xor
dec
jecxz
sti
ret
int
rol
mov
inc
pop
data16
mov
rcl
mov
adc
mov
js
mov
movs
push
xchg
test
addr16
mov
xor
rol
aaa
adc
or
sbb
test
mov
lods
dec
ja
cmc
push
inc
pop
cmp
cmp
aad
lea
xchg
jmp
imul
push
xchg
gs
inc
neg
enter
cmp
enter
(bad)
or
out
lahf
fiadd
add
mov
cmps
cmps
out
xor
fs
add
into
mov
push
sbb
mov
lods
mov
mov
and
ret
dec
jl
fcomp
xor
and
lea
xchg
(bad)
(bad)
pusha
lods
inc
sub
inc
add
adc
mov
movs
xchg
fidiv
mov
add
and
or
adc
dec
jecxz
xchg
lods
(bad)
push
cmps
jae
jbe
(bad)
aaa
aam
mov
cs
xchg
push
les
stc
pop
sbb
add
push
sbb
mov
xor
push
movs
loopne
pop
jle
inc
retf
popa
(bad)
cmp
xor
jp
mov
inc
das
pop
sahf
cmps
lods
dec
clc
jne
add
jae
fstenv
enter
(bad)
lea
popf
dec
inc
imul
push
cdq
and
inc
outs
mov
popa
hlt
xchg
out
popf
jnp
mov
add
dec
pop
cmp
stc
stos
mov
stc
dec
mov
cdq
ret
add
(bad)
rcr
mov
arpl
pop
call
outs
scas
jge
hlt
push
pushw
or
sbb
call
xor
xor
xor
or
dec
adc
jl
scas
sbb
lea
mov
pop
adc
xchg
xor
fidivr
loopne
aam
inc
mov
nop
or
and
imul
jmp
jno
xor
or
jbe
or
inc
mov
cld
xchg
pushf
nop
in
cmp
xchg
and
fst
out
(bad)
loop
mov
int3
ror
(bad)
cli
loop
repnz
push
std
ror
pop
lock
(bad)
mov
xchg
js
push
xchg
xchg
push
xchg
lea
xchg
dec
xchg
hlt
dec
cmp
xchg
hlt
into
mov
push
movs
ins
nop
sbb
pop
jl
scas
scas
cmp
pop
sub
pop
retf
sbb
imul
call
xor
cmp
repnz
adc
and
cmps
inc
ds
ffreep
stc
jle
sub
je
xchg
aas
shl
sti
loope
pop
add
mov
sub
or
mov
out
out
rcl
or
es
xor
sbb
or
pop
(bad)
push
sbb
loope
in
ss
shr
sbb
imul
hlt
bnd
push
cmp
dec
dec
dec
out
inc
push
cwde
cmc
dec
pop
adc
inc
test
fisubr
hlt
popf
loopne
jmp
xchg
popf
xchg
in
sbb
sub
daa
or
movaps
jle
dec
ja
push
or
and
cmps
fmul
xchg
pop
mov
je
lea
adc
cdq
cmp
pop
cmp
mov
mov
inc
push
xor
adc
test
out
fnstsw
adc
aad
lea
outs
xchg
or
push
pop
dec
xor
and
jns
mov
or
cmp
lods
retf
sahf
xor
mov
sbb
test
mov
sub
or
or
sbb
pop
jo
xchg
ja
shl
push
jb
inc
sbb
(bad)
bound
icebp
xchg
sbb
cs
test
sub
in
int
lea
movs
std
ins
stos
mov
jg
cli
mov
nop
or
imul
std
ins
rcl
xor
out
dec
ja
jb
retf
ret
mov
fistp
arpl
mov
mov
pop
popf
sar
popa
pop
jmp
jl
sub
fs
pusha
inc
push
adc
jae
xchg
in
lock
icebp
iret
mov
stos
hlt
jge
scas
dec
xchg
lods
(bad)
addr16
pop
mov
sbb
add
repnz
neg
clc
popa
xchg
ss
inc
leave
fisubr
ss
cmp
mov
jae
or
adc
jmp
aam
loopne
push
(bad)
sahf
push
fwait
cmp
xchg
jecxz
fcom
push
adc
std
iret
lahf
cld
pop
imul
jmp
cdq
mov
jp
pusha
pop
add
and
push
data16
mov
jg
cld
cli
js
pop
iret
cmp
mov
xchg
fwait
jne
sbb
jge
movs
adc
repz
and
mov
(bad)
jg
add
add
mov
pop
inc
xchg
sub
push
int3
cmp
icebp
jl
fmul
mov
dec
ret
repnz
dec
xor
outs
adc
in
sbb
das
ret
test
in
add
xchg
enter
and
mov
xchg
stos
push
(bad)
ror
(bad)
mov
add
push
stc
cmp
enter
pop
adc
dec
lods
mov
dec
iret
push
dec
int
mov
aas
or
or
mov
ins
mov
mov
xchg
mov
sub
or
mov
and
cmp
call
mov
out
push
js
sub
fsubp
cli
jmp
cwde
shl
(bad)
and
gs
ficomp
cmp
xchg
mov
or
enter
adc
push
mov
fdivr
cmp
mov
jns
mov
mov
pop
nop
pop
pop
dec
jne
push
adc
out
push
adc
sar
mov
dec
push
push
cmc
and
xor
iret
ins
enter
mov
cdq
outs
and
lock
xchg
movs
ins
das
and
out
pushf
aas
dec
or
xor
jp
das
pop
sbb
jmp
jmp
inc
add
mov
loop
ffreep
call
sbb
xchg
rcl
sbb
inc
xor
adc
jg
jl
mov
aad
dec
std
retf
cmp
xchg
cwde
ds
and
xor
cmp
mov
pop
mov
sub
mov
pop
push
jle
push
lea
inc
or
mov
imul
or
dec
arpl
in
fdiv
scas
or
movs
cmp
out
leave
js
popf
int
cdq
cmps
movs
addr16
outs
mov
dec
xor
and
fs
cwde
mov
imul
dec
arpl
jne
pop
(bad)
jmp
or
sbb
movs
inc
jbe
lahf
lock
xor
nop
int3
mov
fdiv
mov
lea
add
push
lahf
push
xor
pmaxsw
xchg
(bad)
in
in
(bad)
in
mov
sub
in
in
cmp
or
dec
outs
dec
cmps
call
aam
out
cmp
mov
fcom
test
push
sub
jno
into
(bad)
retf
mov
ficomp
mov
je
xlat
xor
jae
or
movs
adc
adc
lock
cmp
int3
outs
stc
pusha
loopne
xchg
int3
or
jb
stos
fnstenv
jbe
xchg
inc
cli
and
cmps
adc
add
(bad)
push
and
and
push
iret
inc
jae
in
call
and
int
mov
jmp
dec
shl
sbb
adc
add
and
test
test
test
sbb
jno
hlt
mov
push
cmp
mov
ins
xchg
mov
dec
xor
xor
or
mov
jo
mov
add
lods
arpl
(bad)
pop
je
pop
pop
(bad)
je
sub
arpl
ficom
call
rcr
mov
ins
inc
lods
adc
cmp
and
mov
sub
(bad)
aaa
sbb
and
jmp
rcr
fwait
arpl
jg
into
or
inc
into
popa
mov
test
fdivr
rol
icebp
retf
xchg
mov
cmp
sti
dec
out
movs
push
es
nop
lods
mov
pop
(bad)
test
popa
push
push
xchg
jnp
je
and
inc
repnz
mov
mov
data16
push
lock
popf
push
push
call
adc
rol
or
lods
stos
add
mov
hlt
sbb
pusha
lea
iret
add
ror
retf
jg
jmp
or
and
or
inc
data16
das
daa
fstp
sub
je
repnz
test
ja
push
popa
push
xor
dec
dec
out
push
sbb
xor
scas
add
xor
jp
test
lods
mov
push
icebp
cmp
mov
jg
ror
adc
ficomp
cmp
(bad)
loop
xlat
xchg
lock
jae
add
jb
dec
cdq
pop
mov
rol
mov
lds
mov
mov
push
mov
cmp
sbb
(bad)
sbb
mov
daa
jno
or
adc
xor
jl
pop
sar
rcr
and
shl
rcl
fs
lock
scas
jp
add
cmps
test
inc
sbb
jnp
mov
cmc
stos
sbb
cmp
jae
mov
in
ss
shr
inc
mov
and
fs
popf
aas
out
repnz
stc
ret
stos
mov
mov
fistp
ins
or
lahf
ja
cmp
cmp
push
aad
jecxz
movs
add
in
loope
mov
add
or
jnp
fs
pop
aas
daa
fnsave
or
outs
sbb
or
mov
scas
repnz
imul
out
test
in
imul
cwde
imul
int3
mov
mov
in
arpl
cs
sub
pop
pop
mov
or
ret
scas
xchg
bound
xor
or
test
and
es
imul
sbb
dec
icebp
nop
(bad)
jnp
dec
test
pusha
push
js
add
mov
aaa
aaa
mov
mov
mov
mov
add
dec
out
fst
ret
xchg
push
mov
xor
ret
jmp
rol
fcom
inc
xor
dec
repz
cmp
sub
jecxz
test
adc
or
jo
shr
(bad)
jp
pop
xor
ins
or
mov
ins
dec
ins
xor
or
test
stos
jmp
mov
sbb
das
cmp
dec
dec
js
pop
add
in
sub
ss
xor
aaa
adc
jmp
ss
call
and
mov
ins
pop
mov
std
pusha
dec
inc
push
scas
stc
pop
or
mov
ins
or
cld
(bad)
sbb
xchg
add
aad
sti
pop
pusha
adc
and
cmps
jl
std
aad
cmp
ins
(bad)
ja
fwait
(bad)
adc
leave
movs
imul
pop
pop
pushf
push
jb
dec
ror
add
adc
into
inc
movs
test
arpl
jno
pop
cwd
int
(bad)
xor
adc
xlat
ss
addr16
sub
or
pop
fsubr
and
loop
mov
into
in
test
mov
jmp
jnp
cmp
pop
fldcw
adc
dec
das
shld
fwait
mov
pop
pushf
pmovmskb
push
mov
jge
push
ds
bound
pop
mov
lds
sub
push
es
loope
repnz
daa
fimul
cs
jbe
test
inc
or
test
add
int3
into
jl
mov
imul
popf
lock
mov
int
enter
fs
sbb
or
mov
inc
cmp
mov
adc
(bad)
js
mov
dec
cmps
or
xchg
clc
retf
dec
xchg
sti
ret
adc
(bad)
aad
fucomip
sub
outs
push
(bad)
mov
pop
rol
jo
ins
mov
push
fdiv
inc
inc
dec
aad
dec
shr
xchg
cmp
clc
inc
mov
xor
mov
fwait
pop
add
cld
pusha
daa
push
dec
paddusw
and
xor
std
repnz
pop
in
data16
in
out
dec
shl
and
jb
frstor
loopne
arpl
fstp
stos
sbb
icebp
ror
dec
xchg
loop
adc
cmp
mov
fneni(8087
sar
sbb
pushf
out
pop
cwde
out
mov
cmps
shl
xor
mov
push
cmp
mov
jle
ret
pop
out
xor
sar
stos
hlt
outs
dec
cmps
dec
shl
push
or
and
xchg
cmp
sbb
out
popf
mov
dec
add
call
ja
into
es
push
push
lods
inc
lds
out
or
inc
xor
out
push
call
adc
mov
cs
hlt
(bad)
shl
xchg
sbb
inc
pop
push
aad
jbe
xchg
jmp
add
in
mov
inc
rcr
retf
int
es
push
lods
jo
push
fldenv
cs
pop
fwait
mov
push
test
xchg
hlt
mov
sub
sbb
push
mov
mov
add
push
cdq
adc
pop
fild
enter
cmovge
pop
jl
mov
ins
push
xor
scas
stc
push
rcr
sahf
sbb
out
or
pop
push
jp
in
out
(bad)
fcom
sbb
mov
test
pop
out
sbb
jns
lock
icebp
mov
dec
(bad)
xchg
into
das
mov
iret
xchg
mov
jb
out
or
cmp
into
rcr
jnp
fistp
iret
pop
das
or
mov
inc
cld
int3
and
dec
sub
mov
fsub
pusha
cmp
jg
(bad)
daa
adc
adc
jns
xchg
and
ins
or
cmp
mov
add
mov
jae
add
and
in
imul
ins
call
and
cmp
or
dec
cmc
pop
mov
cmp
sbb
loopne
jns
jge
mov
push
fst
xchg
aam
mov
ror
int3
inc
or
sub
ja
adc
mov
popf
test
mov
cwde
push
stos
cmp
into
test
or
jle
test
xchg
loop
in
cmps
pop
cli
repnz
mov
fild
lods
dec
subps
sub
pop
mov
pusha
retf
fbstp
mov
in
fisttp
inc
jecxz
mov
in
jg
and
mov
xor
repz
fcom
std
inc
lock
test
and
out
push
add
pop
push
std
adc
mov
push
push
mov
ds
xchg
sub
(bad)
std
add
or
mov
add
pop
ja
jge
pushf
pop
jbe
jne
(bad)
cld
shl
jb
xor
or
hlt
adc
or
sbb
push
cmps
mov
or
pop
aam
mov
sbb
out
out
xor
ret
and
mov
stc
jle
fild
and
loopne
or
xor
scas
out
frstor
mov
xchg
lds
repz
and
outs
ja
nop
or
scas
inc
adc
pop
mov
push
retf
sbb
cmps
xor
int3
clc
xor
inc
lea
cli
mov
pop
add
jne
dec
push
lahf
cmp
pop
cli
ficom
(bad)
repnz
fild
pusha
iret
lods
jl
outs
push
cdq
cli
jbe
div
cmps
adc
cmc
retf
cmp
ror
push
repz
ja
mov
adc
popf
cwde
add
cld
pop
jno
(bad)
aam
xor
mov
fs
out
adc
mov
sub
inc
push
dec
xchg
xor
inc
les
jno
pop
mov
int3
loope
and
inc
push
jle
push
mov
cwde
inc
ficomp
or
xor
sbb
in
jmp
cmp
leave
fs
adc
addr16
push
js
mov
pusha
(bad)
jmp
adc
pop
psubsw
mov
add
xlat
sub
mov
sub
jmp
jge
dec
jge
mov
(bad)
jb
test
or
mov
jae
sbb
and
or
jmp
push
push
jle
retf
mov
in
adc
xor
test
pop
cmps
mov
cmp
lods
std
movs
pop
xor
sti
jle
push
lods
inc
daa
and
sub
test
push
xor
and
cmp
retf
mov
hlt
mov
and
sub
adc
cmp
sbb
sub
xchg
pop
pop
xchg
mov
pop
jp
call
cmp
cld
ja
add
shl
push
lods
mov
jnp
jmp
test
cmp
ins
sub
inc
lods
fnsave
loop
mov
repnz
in
or
sti
xchg
das
jge
add
push
add
dec
(bad)
fiadd
sahf
aad
idiv
fucomp
mov
or
add
(bad)
sub
mov
out
sbb
sub
scas
mov
out
scas
retf
test
dec
inc
test
inc
jecxz
cmp
arpl
jg
adc
hlt
out
pop
clc
call
cmp
loopne
iret
in
shl
sub
call
mov
mov
in
retf
in
aas
push
mov
(bad)
stos
or
pop
cmp
mov
imul
popf
clc
loopne
dec
sbb
pop
mov
pop
pop
or
imul
or
ror
out
or
mov
jp
xchg
aad
(bad)
sub
or
add
retf
dec
test
xchg
dec
and
sbb
pop
adc
push
or
iret
push
dec
push
mov
push
cmp
dec
mov
and
les
jmp
mov
pop
push
push
sbb
add
fbld
(bad)
pop
fdivr
pop
mov
loopne
sbb
ins
mov
mov
jmp
and
gs
jbe
movs
push
imul
loope
sub
and
mov
dec
movd
push
stc
sbb
imul
mov
add
and
test
pop
cmp
sti
xor
mov
(bad)
mov
je
or
and
mov
sbb
call
xor
int3
pop
jmp
dec
int3
repnz
mov
pop
mov
push
stc
dec
dec
test
fistp
data16
cmp
call
sub
mov
lods
and
jo
and
mov
movs
das
outs
sub
dec
int
or
push
mov
cmc
pop
enter
adc
retf
repnz
cmc
ds
xchg
mov
ss
mov
sbb
cmp
inc
inc
popa
dec
shl
dec
clc
or
mov
jg
sub
cwde
scas
clc
sub
lock
int3
mov
repz
std
in
dec
jo
sub
pop
mov
test
lock
mov
xchg
dec
fucomp
hlt
sbb
inc
mov
jle
jo
pop
ror
and
inc
jb
xor
pop
cwde
jp
jl
dec
int
jl
movs
dec
(bad)
push
in
adc
(bad)
dec
test
push
dec
pop
es
pop
jns
dec
in
fstp
test
jae
jg
or
loope
mov
mov
repz
cdq
ss
idiv
cmc
mov
fiadd
and
push
xchg
dec
push
(bad)
mov
jbe
xchg
add
xchg
add
adc
out
push
stos
mov
add
and
pop
bound
push
inc
fistp
xchg
sahf
iret
leave
dec
and
fidiv
sbb
ss
and
retf
out
(bad)
in
fistp
adc
sar
mov
bound
pushf
pop
xor
out
data16
ret
int3
add
fmul
cmps
inc
icebp
jl
add
mov
xchg
xor
in
call
xchg
and
ins
test
add
imul
lahf
cmps
es
jmp
xor
dec
and
aad
dec
xchg
call
inc
ret
pop
stos
xchg
inc
sub
mov
inc
mov
and
retf
adc
cwde
push
clc
sub
aam
adc
xchg
jnp
push
ds
fs
cmp
leave
ja
lock
mov
add
add
sbb
xlat
or
(bad)
fild
cld
js
pop
and
pop
mov
or
je
jg
sbb
xchg
adc
loop
and
push
imul
fbstp
scas
mov
ror
bnd
lods
popa
dec
xlat
dec
call
adc
jl
cmp
adc
popa
sbb
(bad)
and
stc
jbe
ds
sbb
nop
mov
fstp
vpmaxub
les
push
pop
paddusw
dec
sub
xor
lea
push
in
mov
loope
cmp
mov
push
cmps
xor
inc
(bad)
(bad)
adc
lds
push
sbb
leave
leave
pusha
out
push
mov
xor
inc
or
push
xchg
daa
sub
dec
xor
fwait
rol
mov
pop
jmp
mov
push
ss
mov
push
inc
xchg
cli
or
mov
cli
cmp
clc
cmp
add
xchg
ret
mov
pop
dec
cli
aas
mov
sub
push
cmp
repz
fadd
icebp
jl
pusha
dec
outs
push
push
push
ror
jns
add
lea
out
cmp
pop
pop
and
push
or
cmc
mov
cwde
loope
lock
and
shr
or
fbld
or
out
xchg
push
shr
in
cmps
hlt
and
retf
inc
cmp
xor
jno
jnp
jb
push
xor
mov
dec
jmp
nop
gs
sub
inc
sub
or
shl
cmp
aaa
inc
push
in
jo
int3
xor
cwde
addr16
sbb
mov
ror
aas
mov
inc
mov
add
out
jb
xor
cmp
lods
mov
ss
inc
fmul
dec
outs
loop
sbb
loop
sub
repz
test
hlt
pop
mul
push
test
fwait
test
neg
jmp
or
movs
add
xchg
push
adc
sbb
(bad)
aas
or
clc
enter
inc
cmp
or
add
fld
xor
sub
dec
outs
pop
inc
inc
add
mov
or
inc
daa
repz
jecxz
int3
jg
out
sbb
shr
pop
adc
scas
mov
add
leave
lahf
adc
fsubr
dec
cld
mov
adc
or
repz
js
pop
jle
adc
fdiv
ret
push
pop
movs
mov
data16
push
loopne
arpl
cmp
jbe
and
mov
mov
or
jo
xor
pop
dec
in
or
and
inc
in
jae
out
mov
xchg
add
js
xor
add
mov
or
mov
sub
out
cmp
sub
jae
in
push
mov
push
fisttp
jnp
lea
ds
cmp
aas
jnp
inc
iret
cmp
xchg
cmp
pop
cmp
imul
arpl
jmp
les
jns
dec
mov
lock
inc
mov
test
push
in
cmp
dec
mov
cmp
test
sahf
pop
and
jecxz
hlt
mov
sub
aad
fcomp
or
call
cmps
xchg
pusha
cwde
mov
stos
sti
mov
add
push
or
xchg
xor
or
popf
scas
sar
jne
cmp
xlat
cli
ret
xchg
jle
mov
mov
cwde
addr16
test
div
adc
pop
xor
push
in
test
ins
fcom
(bad)
in
fcmove
mov
mov
aas
dec
ja
adc
out
cld
mov
jp
or
and
push
mulps
scas
shl
xor
out
fiadd
cmp
ss
lea
inc
out
or
mov
xlat
jbe
xor
pop
(bad)
iret
imul
cmp
repz
int3
cmps
pop
div
pop
iret
cmc
mov
xchg
or
xor
imul
xor
nop
mov
in
out
inc
sbb
pop
shl
sbb
das
mov
jno
inc
mov
jl
push
test
or
inc
push
ds
push
push
in
mov
out
out
push
jge
push
mov
shl
adc
mov
sti
fs
stc
and
mov
into
sbb
inc
dec
add
clc
or
das
cmp
out
sbb
cmps
movs
std
sub
mov
scas
xor
mov
sbb
fadd
movs
ds
xor
cmp
hlt
std
cdq
xchg
cmps
or
cmp
in
adc
fmul
enter
mov
and
jae
lahf
das
test
jne
call
jl
add
(bad)
xor
and
jns
dec
out
mov
mov
imul
and
or
xor
fs
(bad)
loopne
hlt
sub
loope
fist
adc
ds
cdq
jo
push
sub
inc
stos
xchg
and
loop
inc
jae
out
jg
scas
inc
sbb
xchg
jle
lods
ins
sub
stc
nop
sbb
cmp
aam
aam
add
cmc
out
mov
cmp
jmp
(bad)
mov
into
push
loop
push
adc
(bad)
and
stos
pop
dec
dec
sbb
push
call
popf
fbstp
addr16
cmp
xchg
fld
or
mov
rcr
std
stos
movs
call
and
sub
and
retf
dec
retf
cmp
jle
push
repnz
cs
adc
push
pop
mov
pop
mov
adc
pop
mov
push
jbe
sub
inc
mov
popf
aam
clc
mov
shl
jle
lea
adc
xor
sbb
cli
cmp
mov
mov
cwde
adc
(bad)
aad
xchg
mov
xchg
jge
sub
ja
fmul
adc
sbb
ss
xchg
test
into
cs
call
sub
(bad)
out
ins
test
test
sub
jb
je
rol
push
dec
jb
inc
mul
fnstcw
shl
out
fnstcw
pop
les
lahf
loope
and
dec
call
fs
sbb
push
imul
or
xor
pop
adc
mov
fisttp
std
sbb
iret
xchg
xchg
inc
not
(bad)
or
push
ficomp
mov
mov
out
ins
fstp
pop
mov
cwde
push
je
jbe
and
jp
pop
daa
fmul
pop
popa
mov
jbe
out
adc
push
sbb
imul
(bad)
(bad)
lds
push
mov
call
sti
jo
ds
retf
retf
test
test
push
push
out
ss
mov
dec
pushf
test
push
jecxz
enter
jnp
dec
pop
push
les
xor
bound
call
adc
mov
pop
stos
popf
mov
xchg
ror
mov
enter
test
fs
loop
add
aad
sbb
dec
sbb
(bad)
aam
pop
jo
mov
mov
fisub
inc
lods
lea
mov
lds
imul
cs
adc
sub
retf
loop
sub
cmp
push
rcl
outs
xor
mov
ret
push
pop
into
sub
mov
adc
push
add
dec
(bad)
or
mov
imul
fcmovne
outs
jne
push
je
loop
in
(bad)
mov
jns
in
data16
mov
scas
jb
jb
jns
mov
pop
stc
scas
scas
sub
call
pop
aaa
aam
or
mov
sbb
rcl
fwait
mov
nop
cmp
cmc
pop
ret
xor
js
mov
mov
or
inc
icebp
sbb
push
sbb
mov
aas
cdq
rcl
pop
xor
fcom
and
mov
xchg
cmp
pop
mov
mov
inc
and
sbb
add
dec
es
inc
xchg
in
mov
mov
(bad)
jl
mov
scas
xor
mov
test
pushf
xor
data16
cmp
cs
and
mov
mov
dec
jne
fimul
int3
push
mov
out
lods
aaa
(bad)
dec
or
fwait
(bad)
mov
lahf
sub
jge
pushw
rcr
(bad)
stos
cmp
pop
cdq
mov
or
inc
rcr
imul
inc
mov
mov
jmp
into
aaa
jno
cs
xor
mov
aad
cmps
mov
xchg
int
rcr
int
(bad)
jmp
sub
mov
cmp
shl
rcl
sar
xor
pop
sub
fdivr
xor
dec
imul
push
jmp
sub
inc
xor
jb
stos
test
add
push
or
mov
aad
sbb
inc
inc
repnz
gs
or
aam
and
cmps
jns
mov
fisttp
dec
xchg
test
adc
ja
jmp
or
aas
add
cdq
adc
out
imul
cmp
or
test
rcr
dec
callw
(bad)
jg
cmp
jg
inc
lods
call
test
or
mov
push
push
inc
jns
mov
imul
mov
sti
jbe
cmp
xor
add
pop
xor
adc
adc
ja
add
mov
das
call
popf
repnz
dec
inc
mov
inc
in
add
cwde
and
outs
sbb
cmps
adc
les
ret
cmp
sub
pusha
push
mov
push
mov
xor
stc
pop
jbe
in
scas
xchg
in
push
xlat
xlat
scas
jge
subps
jmp
outs
enter
shl
sub
add
fbstp
mov
mov
add
push
mov
cmp
enter
lahf
in
jae
xchg
xchg
test
xor
mov
mov
shl
in
jmp
xlat
pop
pop
push
sub
data16
mov
cmc
iret
stc
xor
push
jnp
push
mov
aad
sbb
call
adc
cs
sub
ins
xchg
aas
inc
lahf
(bad)
stos
out
enter
popa
mov
sbb
das
mul
xchg
sbb
mov
imul
add
retf
mov
icebp
cmps
outs
mov
ss
popf
push
fadd
xchg
retf
push
add
stc
cmp
pop
cmc
popf
outs
and
inc
xchg
xchg
xor
fisttp
pop
in
jae
ds
aas
clc
jo
mov
lock
or
dec
fst
int
sub
jmp
fcmovnbe
mov
das
sub
enter
cmp
neg
or
adc
lods
inc
in
xor
repz
popf
js
sub
popa
jo
ss
fadd
dec
push
jl
fsubr
aaa
sbb
mov
loopne
push
sub
push
xchg
pop
pop
ficom
mov
pop
xor
in
rcl
jae
mov
mov
jae
cmp
jno
stos
adc
and
dec
sub
add
mov
lahf
int3
daa
mov
inc
iret
mov
lock
cli
add
or
inc
xor
ret
fisub
xor
fcomp
xchg
les
cs
out
push
fbstp
xor
push
sub
movs
pusha
test
cmp
xor
call
fimul
les
ficomp
mov
mov
pop
fs
aad
dec
fild
adc
pop
pop
push
mov
push
ins
xor
adc
add
adc
cmc
mov
pop
lock
rol
or
aaa
das
or
xchg
lods
dec
aam
mov
rcr
push
js
jle
jno
push
cmp
or
outs
jns
or
xor
fimul
cmp
clc
not
outs
jg
adc
retf
movs
daa
jle
(bad)
ds
or
push
push
dec
test
jb
push
stos
imul
sub
aaa
hlt
adc
repz
xchg
sar
jo
cmp
mov
mov
xor
imul
(bad)
wrmsr
and
adc
sub
shl
dec
outs
ficom
sbb
cmp
leave
pop
je
dec
add
xor
dec
adc
cmp
aaa
pusha
mov
imul
sbb
push
or
les
jbe
inc
pop
mov
jbe
in
imul
lods
mov
pop
or
retf
inc
or
add
fwait
or
call
fbstp
xchg
push
mov
mov
jbe
dec
(bad)
or
scas
pop
xor
jo
not
push
xchg
bswap
pop
jecxz
clc
mov
jg
mov
out
pop
cmp
fisttp
push
retf
add
shl
(bad)
nop
push
sbb
fistp
pop
test
repz
inc
loopne
push
in
js
dec
cld
inc
ret
in
dec
call
adc
rcr
test
aas
xchg
pop
loop
aaa
(bad)
imul
and
in
xor
sbb
push
imul
xchg
repnz
push
sbb
outs
mov
sub
popf
jmp
pop
aaa
xor
push
(bad)
daa
aam
mov
inc
sub
adc
adc
div
test
cli
stos
jmp
or
jle
push
inc
rol
dec
or
mov
jge
xor
stos
(bad)
ins
mov
sbb
hlt
jp
push
mov
or
or
outs
pushf
and
repz
ror
int
jge
push
rcr
push
fwait
xor
mov
call
stos
xchg
push
mov
ret
scas
xchg
cmp
cmp
inc
cwde
inc
mov
or
push
cmc
cdq
in
out
xchg
cmc
push
jns
pop
cmp
pop
repnz
pop
jno
inc
jecxz
nop
test
sar
mov
jmp
into
in
jge
push
mov
loope
push
fisub
fiadd
mov
daa
inc
jae
adc
scas
adc
(bad)
mov
xchg
ins
jno
sbb
xlat
adc
lds
xor
mov
sbb
add
dec
pop
mov
movs
not
push
push
ins
sub
pop
in
aad
retf
ja
pop
stos
out
call
push
jl
adc
mov
out
aad
fs
jecxz
sub
mov
(bad)
adc
sbb
leave
add
cmps
popa
dec
add
and
push
lods
inc
push
out
pop
out
xchg
repnz
in
sbb
aas
cdq
ret
in
adc
and
jmp
sbb
adc
push
push
(bad)
xor
mov
fist
push
scas
mov
push
int
jmp
cmps
out
jne
mov
add
fldenv
lock
aam
mov
jbe
lahf
push
je
out
int3
repnz
loop
jns
adc
cmp
ror
ss
and
(bad)
lock
and
lock
jmp
mov
inc
cmp
mov
xchg
test
mov
jmp
mov
sti
pusha
inc
or
std
sub
or
push
nop
mov
mov
lock
gs
xchg
xor
sbb
jmp
push
push
pop
btc
loope
lea
cmp
add
adc
ja
jmp
or
lea
fbstp
push
xchg
pop
and
dec
shl
pop
pusha
movs
jp
repnz
inc
inc
mov
and
mov
in
and
(bad)
jmp
mov
mov
call
push
repnz
and
add
jp
ror
xchg
fsub
pop
scas
sub
jns
stos
ss
stos
and
xor
and
in
rcr
cmp
and
movs
push
not
dec
sar
jmp
retf
test
pop
outs
pop
test
pop
dec
add
repz
cmp
mov
or
sbb
test
out
mov
push
xchg
push
mov
fld
mov
mov
and
pop
and
jmp
adc
(bad)
pusha
enter
mov
stc
inc
js
cld
outs
frstor
lock
shr
movups
or
jge
repz
iret
pop
shr
or
xor
call
sbb
je
inc
add
mov
or
sbb
shr
lea
fld
arpl
gs
cmps
jae
adc
inc
jae
and
(bad)
jae
mov
mov
xor
into
cld
test
cmps
push
xor
or
inc
jle
scas
outs
add
ja
out
imul
imul
xchg
xor
je
retf
push
lea
repnz
mov
ficomp
push
adc
add
scas
into
mov
dec
push
ror
and
imul
xchg
sub
(bad)
xchg
call
jp
inc
je
xchg
mov
retf
cs
retf
mov
test
jp
scas
jbe
outs
mov
adc
cmp
(bad)
pop
cmc
dec
or
repz
(bad)
loope
mov
pop
push
aas
xchg
or
movs
mov
popa
nop
js
push
jmp
clc
bound
jecxz
lahf
dec
cmp
cmp
into
rep
or
out
mov
push
push
and
cmp
ret
lods
aad
cwde
cmp
xbegin
enter
pop
dec
inc
mov
mov
aam
movs
xor
mov
into
test
shr
xchg
ins
jo
pop
pop
scas
in
int
shl
popa
aam
xchg
fwait
gs
jae
add
jg
das
sbb
jae
(bad)
retf
xchg
push
gs
popf
jns
int
movs
dec
fistp
xchg
setp
and
out
sub
(bad)
mov
sbb
xor
sub
std
retf
fs
and
dec
loop
gs
lods
pop
and
pop
bound
cwde
push
cmp
inc
iret
and
mov
out
lods
ret
or
js
lods
(bad)
push
mov
pop
pop
mov
test
jl
(bad)
int
cld
retf
push
mov
push
ret
and
sub
xor
outs
cmc
mov
push
jg
icebp
jne
pusha
or
or
(bad)
sub
sub
mov
das
mov
mov
inc
inc
mov
mov
add
push
sub
ror
jp
sbb
fdivr
pusha
adc
(bad)
xor
cmps
sub
xor
loopne
push
(bad)
fdiv
loop
adc
jg
stos
jp
and
mov
cmps
sbb
sub
mov
jo
jmp
inc
jmp
lods
mov
or
and
jge
mov
xchg
imul
xchg
out
ds
repz
rcl
mov
cdq
adc
mov
and
out
ds
mov
imul
or
(bad)
fdiv
cmps
mov
jecxz
jb
jmp
xchg
ds
cmp
inc
xchg
ja
and
inc
fst
cmps
aam
dec
and
out
jge
retf
mov
and
pop
cmp
add
loope
sbb
mul
pop
or
dec
cmp
cdq
js
jmp
inc
jbe
pop
xchg
ins
adc
cs
sbb
xchg
addr16
stc
shl
retf
jg
test
jp
(bad)
jl
daa
leave
(bad)
mov
cmp
push
test
lods
hlt
sbb
xchg
aas
cmps
outs
mov
(bad)
retf
retf
mov
push
repnz
push
cmp
xchg
jle
int
cmps
push
pop
in
inc
jae
in
push
adc
xor
pop
stos
pop
sbb
movs
sahf
cmp
push
test
pop
das
xor
test
xchg
or
mov
xchg
ja
mov
sbb
xor
ins
inc
scas
cmp
repz
xor
jle
add
adc
add
jp
push
mov
mov
fsub
nop
push
cmps
retf
xchg
dec
pop
mov
or
fstp
(bad)
pop
imul
or
sahf
jmp
adc
aas
jnp
cld
mov
(bad)
mov
stc
push
sbb
sti
lock
adc
rcl
aam
dec
push
mov
imul
push
mov
out
jo
rol
mov
mov
ror
hlt
mov
test
movs
push
dec
inc
jmp
not
xchg
pop
sub
fwait
shr
jno
js
repnz
xchg
mov
xor
add
aad
(bad)
cmp
jne
imul
dec
fcmovne
(bad)
jno
shl
(bad)
scas
and
mov
test
xchg
push
xchg
cmp
stos
mov
jne
fmul
mov
inc
sbb
dec
(bad)
je
pop
ss
mov
and
sbb
jle
sub
jg
std
or
cs
sahf
cmc
cmp
jl
dec
dec
rol
mov
jg
sub
xor
fst
clc
push
repnz
sub
cmps
or
mov
fdivr
xchg
pop
ret
cmp
addr16
push
ret
inc
iret
mov
icebp
jg
cmps
cmp
retf
and
xor
iret
push
int3
popf
sbb
and
mov
jmp
or
or
addr16
jp
inc
xadd
xor
shl
repnz
pop
popa
inc
mov
loope
fild
and
nop
sahf
inc
shr
and
mov
dec
push
mov
jb
in
loopne
push
xchg
jnp
and
mov
jnp
(bad)
iret
mov
loop
adc
xor
clc
cdq
or
dec
inc
rol
push
adc
jl
add
call
iret
rol
push
pop
repz
fdivr
(bad)
cmp
pop
sub
xchg
leave
ja
test
dec
adc
push
mov
sbb
pop
call
mov
fdivr
pop
inc
xchg
(bad)
ins
sub
pop
adc
cmp
popf
push
jmp
xchg
mov
push
add
add
xchg
xchg
cmp
test
(bad)
jg
or
ror
xchg
jle
imul
push
sbb
aaa
(bad)
push
cs
in
adc
xchg
xor
fadd
sub
and
in
inc
sti
inc
push
sbb
ret
adc
aas
mov
aad
jns
cmps
scas
pusha
add
cmp
pop
cmp
movs
xlat
sahf
push
shl
mov
icebp
adc
add
mov
mov
pusha
jge
imul
cmp
not
neg
push
xor
add
mov
and
sub
push
jo
outs
or
dec
repnz
xchg
mov
hlt
jecxz
ja
dec
pop
push
jb
mov
fnstcw
cmps
cmc
aaa
hlt
int
scas
aaa
lods
inc
xchg
jecxz
mov
mov
imul
cmp
in
jge
loop
jmp
and
or
pop
pusha
sti
dec
pushf
adc
xchg
or
fstp
dec
jmp
loope
test
jbe
or
gs
test
cmp
pop
and
pop
arpl
mov
sub
and
dec
xor
out
stos
(bad)
das
sub
in
pop
stos
ds
jp
cdq
sub
and
mov
push
test
sbb
sbb
pop
cmp
or
cmp
mov
adc
push
in
or
cmp
push
jns
cmps
fimul
icebp
mov
dec
mov
adc
jl
sbb
push
in
ja
or
pop
jmp
ss
mov
jecxz
fisubr
stos
mov
adc
cs
mov
mov
jl
pop
out
imul
scas
sub
lea
add
jmp
xchg
faddp
jmp
add
pop
or
push
pop
dec
mov
stos
arpl
sub
sub
ins
movs
cmps
jo
ins
cmp
inc
fwait
xor
pop
in
into
sbb
xlat
fmul
mov
push
cwde
push
adc
aam
pusha
in
daa
bound
idiv
sbb
jne
jl
push
xor
test
mov
push
movs
mov
cmps
sahf
gs
ret
or
in
sbb
iret
sbb
clc
adc
leave
or
test
jl
add
sub
(bad)
test
fadd
ja
ins
ret
ds
pop
xchg
mov
sahf
out
mov
lea
inc
test
movs
loope
fild
mov
fwait
inc
and
shr
xchg
mov
mov
mov
nop
add
jnp
loop
push
xchg
scas
pop
leave
mov
loopne
hlt
retf
xchg
and
inc
fld1
mov
sbb
sbb
or
push
adc
pop
push
mov
and
jp
push
dec
lods
jmp
jmp
dec
ins
push
call
outs
sti
daa
jbe
jmp
adc
stos
xchg
mov
std
add
adc
sub
dec
dec
pop
adc
push
repz
add
adc
sub
shl
and
inc
jge
popa
fdiv
mov
push
mov
adc
aad
sub
in
add
sbb
sub
jne
cmp
jmp
in
bound
xchg
ret
jns
and
inc
push
jno
push
retf
call
cmp
pop
push
cmp
dec
sub
push
adc
push
out
adc
cwde
out
inc
mov
ror
add
mov
mov
mov
jl
pop
xchg
jno
loop
cs
xchg
xor
stos
rcr
cld
loope
cwde
push
sbb
bound
or
mov
mov
stos
loopne
sub
retf
vcvttsd2si
dec
mov
sub
fucomip
and
xchg
retf
xor
xor
(bad)
jb
sti
xchg
ins
add
mov
sub
icebp
ret
cs
pop
cdq
neg
mov
shl
mov
ja
cmp
int3
jno
xchg
rcl
jg
je
int3
enter
jmp
cmps
mov
jecxz
mov
push
and
inc
jg
frstor
sbb
or
in
jmp
cmp
pop
mov
ror
inc
and
int3
xor
lea
cwde
mov
dec
xor
dec
inc
cmp
iret
inc
sbb
push
pusha
pop
sahf
je
outs
pop
xchg
not
add
aam
pop
cmc
jg
sbb
repz
scas
inc
int3
scas
inc
fdivr
icebp
cmc
sar
ja
mov
jmp
aaa
imul
(bad)
adc
xchg
jbe
xor
cmp
xchg
mov
or
and
add
add
repz
dec
(bad)
enter
add
jb
dec
mov
cmc
ficom
pusha
mov
pop
inc
or
add
sub
retf
(bad)
out
(bad)
stc
push
fadd
fwait
or
adc
(bad)
adc
cld
adc
sahf
dec
fild
sbb
lahf
mov
xchg
inc
xchg
shl
lods
gs
mov
out
mov
fs
mov
cmc
aaa
xchg
aad
mov
aam
addr16
jecxz
or
test
aam
aas
out
mov
je
movs
sub
aaa
xchg
scas
fst
cmp
cli
xchg
pop
xor
(bad)
jb
outs
jbe
int
inc
xchg
mov
xchg
ret
in
test
jnp
arpl
jnp
jno
popa
lea
push
lods
inc
rcl
xchg
xchg
out
aam
mov
fiadd
in
adc
push
inc
addr16
into
add
shl
dec
jae
inc
lds
imul
push
mov
dec
(bad)
mov
add
cmps
fcomip
pop
and
xchg
adc
lea
repz
push
push
and
xchg
adc
dec
inc
fst
hlt
test
pop
cmp
pop
loopne
add
das
jl
mov
pop
push
dec
je
pushf
jae
jmp
xchg
sub
sub
mov
pop
and
adc
les
adc
xchg
stc
neg
adc
stos
aas
in
aam
ficomp
popf
test
jl
jle
imul
pop
test
into
xor
push
js
push
dec
xor
xor
adc
or
xchg
inc
pop
push
inc
mov
push
or
imul
jecxz
mov
test
jg
test
aas
in
mov
cmps
jmp
pop
retf
int
out
jns
add
ins
lea
outs
outs
or
mov
push
mov
jp
out
imul
js
ret
dec
lea
dec
xchg
or
sub
mov
loop
dec
fild
adc
std
leave
outs
mov
mov
jo
inc
pop
push
cmp
adc
inc
jo
clc
cmp
and
dec
(bad)
lea
sub
push
or
jmp
fidivr
adc
and
data16
mov
jge
mov
pop
icebp
movs
(bad)
lods
arpl
dec
shr
xor
jmp
cs
and
icebp
and
aad
inc
enter
into
ins
mov
xor
inc
cs
popf
pop
call
mov
xchg
in
fcmovnb
add
mov
sbb
mov
push
popa
loope
enter
or
(bad)
out
or
popf
mov
je
fcomi
inc
push
ret
iret
ret
fsubp
fld
in
leave
add
cmp
or
mov
pop
movs
and
fidiv
mov
das
std
retf
out
sbb
mov
dec
xor
addr16
sub
clc
in
jne
outs
mov
jl
push
call
dec
(bad)
jno
inc
push
sbb
xchg
popf
out
mov
pop
xchg
or
jl
in
lods
push
inc
(bad)
sbb
jno
push
inc
not
rcr
or
test
lahf
inc
dec
xor
inc
mov
inc
iret
cmp
or
fidiv
(bad)
scas
xchg
or
addr16
les
dec
fisub
stos
adc
(bad)
rcl
(bad)
fld
ja
nop
test
mov
dec
int3
and
cmp
cld
dec
and
xor
add
fidivr
std
addr16
retf
ins
mov
inc
adc
ret
cmp
leave
push
jg
test
cmp
jmp
cmc
int3
jg
and
pop
cmp
adc
mov
push
jns
fsubp
dec
push
cmc
in
lea
push
out
shl
inc
int3
call
jecxz
mov
mul
cli
push
cdq
call
mov
mov
xchg
jge
mov
and
out
addr16
je
out
cmps
jp
mov
and
add
mov
call
and
rol
fs
ins
push
pop
mov
sub
sbb
popf
sbb
pop
xchg
mov
dec
mov
pop
sub
add
mov
mov
movs
cmp
mov
inc
pushf
movs
push
and
mov
mov
xor
inc
push
cmp
push
mov
data16
(bad)
sub
or
cli
lahf
push
xor
inc
pop
(bad)
cmp
add
jo
push
int
xchg
arpl
test
fwait
and
stos
mov
outs
jae
adc
nop
cmp
mov
xchg
sub
stos
mov
pop
xor
pop
add
shr
std
inc
add
outs
data16
sub
icebp
jne
and
xor
js
xchg
jp
repz
inc
stos
or
or
jne
ret
pop
test
daa
pop
mov
mov
jo
in
test
xlat
loope
daa
xor
jecxz
inc
(bad)
mov
in
call
pop
pop
push
fild
sbb
fdiv
or
push
inc
int3
stc
sub
jmp
mov
fcompp
pushf
je
sbb
(bad)
sbb
imul
scas
gs
repz
and
cmp
shr
lods
call
jl
cmp
xchg
pop
out
xor
imul
pop
cwde
mov
mov
call
call
shl
mov
add
add
or
leave
inc
jmp
xor
mov
or
xor
daa
or
add
jp
mov
inc
mov
loop
xlat
sbb
xor
xchg
inc
dec
and
xor
inc
(bad)
lods
aas
out
pop
jl
sbb
jne
mov
and
fsqrt
ss
mov
addr16
jle
inc
xor
mov
into
or
shr
(bad)
stc
mov
sti
fist
xchg
test
test
fnsave
lea
into
outs
inc
call
ins
mov
fmulp
sub
rol
push
cmp
je
xor
cmps
fldz
jle
imul
cmp
mov
push
data16
sbb
lock
jmp
call
pop
jns
cld
iret
or
cmp
xchg
sub
and
xchg
sbb
sbb
jae
and
mov
fxch
stos
push
bound
cmp
aaa
cdq
ja
inc
sbb
call
jecxz
fmul
push
push
scas
cmp
movs
pushf
cli
or
bound
fwait
loope
loop
pminsw
dec
pop
outs
repz
test
in
jno
inc
inc
sbb
or
pop
fidiv
neg
lods
shl
mov
data16
out
jg
inc
rol
cld
pop
fcom
add
xchg
jno
or
out
cmps
arpl
ja
iret
rol
int3
aam
pop
inc
call
into
cmp
adc
mov
icebp
inc
into
rcr
test
and
mov
pop
xlat
jg
movs
out
test
fild
cld
das
bound
imul
xchg
jg
ds
fdiv
les
out
adc
in
int
mov
jmp
in
mov
inc
lock
mov
retf
mov
mov
mov
ss
cmps
dec
call
popa
call
mov
shr
popf
pop
sbb
dec
dec
dec
scas
jmp
push
mul
ror
mov
shl
mov
popa
mov
jmp
xor
arpl
lea
mov
ds
loope
outs
(bad)
sub
pop
dec
mov
inc
jnp
(bad)
or
inc
xor
frstor
inc
imul
bnd
xchg
movs
outs
out
jo
mov
call
mov
repz
mov
xchg
hlt
lods
cwde
push
jp
mov
xchg
xchg
jmp
aas
mov
add
inc
push
inc
mul
xchg
popaw
cli
xor
inc
mov
add
xchg
popf
push
xchg
(bad)
ror
cmp
inc
xchg
mov
lods
inc
push
retf
ins
call
test
ret
adc
std
(bad)
sbb
xor
add
pop
mov
out
repz
shl
and
add
in
arpl
mov
(bad)
and
push
fisubr
mov
adc
ins
xor
jg
push
push
cmp
leave
lea
stc
xchg
jb
fbstp
dec
in
fimul
adc
pop
imul
mov
aam
(bad)
in
ja
adc
inc
test
movs
test
arpl
jmp
and
push
cli
push
jne
in
jo
daa
inc
les
div
fdiv
in
ret
sbb
mov
adc
sub
add
inc
jmp
adc
pop
xor
push
out
jge
sub
add
movs
jb
in
int
or
out
in
fistp
inc
push
movs
xchg
pop
test
pop
cwde
cmp
or
xor
retf
stos
fwait
sbb
mov
sub
in
and
mov
adc
xchg
xor
sbb
dec
loop
dec
pop
cmp
scas
pop
mov
cmp
fidiv
fadd
cmps
fnstcw
(bad)
outs
das
pop
rcl
push
mov
fcom
sbb
adc
mov
mov
or
add
cld
sub
adc
movs
dec
cli
neg
nop
xor
imul
sar
add
cmp
push
adc
in
adc
cld
leave
repnz
adc
jns
dec
pop
mov
pushf
inc
xor
mov
fld
or
(bad)
enter
mov
ss
movsx
mov
jp
dec
sbb
test
in
pop
sub
and
adc
xor
(bad)
sbb
(bad)
(bad)
imul
sbb
loopne
daa
sbb
rol
push
pop
dec
mov
sub
clc
fistp
sub
sbb
inc
outs
xor
imul
or
push
adc
sub
cmp
jb
xchg
sub
xor
xchg
sbb
mov
jb
sub
jbe
mov
mov
pop
jb
adc
adc
xor
add
popa
cmp
idiv
ficomp
(bad)
movs
clc
pop
popf
mov
sbb
xlat
call
pop
and
cdq
mov
(bad)
les
daa
call
test
and
scas
or
in
sub
pop
in
inc
inc
sub
xchg
dec
icebp
jns
pop
push
and
fs
es
push
lods
mov
jg
in
push
add
add
fcom
imul
add
mov
les
fmul
cmps
push
scas
mov
sbb
sub
and
(bad)
fld
or
sti
das
aas
or
push
jae
(bad)
into
cmp
mov
dec
jl
int
dec
ds
jp
dec
sbb
mov
in
fimul
add
cli
shl
push
pop
jmp
cmc
hlt
or
stos
jo
mov
push
je
aad
mov
fbld
mov
sub
cmp
int3
push
xchg
bound
loope
aaa
mov
xchg
xchg
(bad)
in
test
inc
(bad)
add
cmp
aad
inc
sti
adc
and
lock
push
cmp
push
sahf
out
scas
sbb
inc
xor
js
inc
aas
dec
mov
loop
cmps
jecxz
pop
loope
add
dec
stos
fisttp
and
clc
imul
sti
pop
cwde
inc
lock
and
cmps
in
and
and
jp
dec
ja
out
sbb
push
pop
adc
sar
sbb
sbb
popa
and
jmp
add
leave
jge
add
xchg
mov
sub
mov
mul
xchg
ss
sbb
pusha
into
(bad)
mov
sbb
ret
fwait
add
das
jl
or
mov
cs
ret
(bad)
fcomp
cwde
jl
inc
imul
jg
or
push
fld
add
mov
sbb
dec
aam
pop
js
cmp
mov
scas
pop
dec
(bad)
repz
push
xchg
retf
inc
adc
sub
loopne
stos
stos
push
neg
aaa
and
imul
push
cmps
push
and
xchg
add
xchg
inc
mov
ss
mov
push
xlat
push
loope
mov
sub
xchg
not
xchg
or
mov
mov
adc
push
dec
retf
mov
je
cmps
pop
ret
movs
add
lahf
loope
arpl
adc
(bad)
mov
out
daa
xor
aaa
cmp
mov
cmc
pop
dec
mov
mov
and
pop
(bad)
cwde
arpl
jge
test
xor
cld
das
xchg
inc
ins
push
cld
mov
cmps
aas
sub
lods
loopne
push
cmps
push
mov
or
popf
inc
dec
scas
sub
fdivr
mov
out
pop
movs
imul
scas
xchg
jp
xchg
std
inc
int
mov
daa
fsubr
jbe
push
inc
loopne
aas
mov
xor
push
push
sbb
fsubp
sbb
xchg
retf
popf
pop
int3
mov
mov
ror
ja
in
test
mov
mov
dec
cmps
cmp
mov
icebp
xor
leave
xchg
leave
addr16
dec
js
xor
xlat
mov
aas
rol
ret
sbb
shl
ffree
and
pop
loopne
xchg
inc
mov
and
pop
(bad)
xor
test
sub
and
sbb
inc
jge
inc
push
or
or
inc
sbb
repnz
mov
call
rcr
push
mov
movs
push
movs
adc
jmp
mov
xchg
xchg
add
(bad)
or
cmps
cmp
pop
fld
into
(bad)
and
lds
dec
pop
loope
cli
lea
mov
sub
ds
cdq
minps
out
neg
push
inc
mov
mov
ja
and
rol
stc
fidivr
inc
xor
lds
repz
mov
ja
ds
add
mov
mov
adc
mov
push
fimul
sar
mov
jmp
mov
dec
push
pop
loop
mov
sub
in
push
push
xchg
test
js
push
adc
neg
cs
cld
and
dec
outs
sub
test
push
adc
adc
(bad)
push
push
les
hlt
movs
ins
adc
xor
sbb
jp
dec
push
xor
sbb
jl
sbb
repnz
(bad)
loope
daa
lock
pusha
push
dec
pop
jmp
jle
dec
scas
test
aas
and
mov
jge
sub
or
arpl
xchg
jb
mov
cld
addr16
bound
in
inc
pop
mov
cmp
cld
pop
push
push
inc
hlt
test
and
lahf
mov
mov
inc
add
ds
cdq
call
movs
(bad)
retf
(bad)
add
jl
mov
dec
ins
jecxz
mov
xor
xor
outs
jne
daa
test
push
std
retf
jb
push
out
fwait
push
out
or
push
sub
pop
in
fimul
in
push
push
stos
push
push
jno
aam
in
push
std
push
mov
xor
adc
mov
in
popa
or
aaa
jnp
int3
ret
lods
lds
adc
pop
jmp
mov
or
push
lock
shr
test
sub
hlt
sbb
sub
and
jno
mov
mov
push
mov
leave
fimul
pop
stos
mov
fistp
jnp
fld
adc
jmp
dec
jae
mov
pop
dec
adc
jge
mov
(bad)
bound
lods
pop
nop
call
sub
pop
xchg
fstp
nop
int
in
jmp
push
adc
aaa
outs
dec
mov
pushf
jno
pop
inc
sub
or
cmps
xchg
mov
inc
pop
mov
adc
jl
push
and
in
push
fild
leave
test
daa
pop
xchg
cwde
push
dec
inc
add
pop
add
push
popa
inc
rcr
cmps
shl
into
push
xor
pop
jmp
dec
add
movs
or
dec
pop
pop
out
(bad)
(bad)
popa
std
adc
in
sbb
(bad)
cs
jo
jae
stc
mov
xchg
cmp
icebp
mov
mov
cmp
cmp
add
mov
add
jmp
mov
stos
(bad)
jo
xchg
repnz
aad
test
or
std
xchg
fcom
mov
lds
adc
jae
aam
add
ficom
test
jne
retf
xchg
xchg
mov
add
sbb
fist
std
push
mov
aad
in
jnp
xchg
jle
fcmovne
sub
adc
lds
fwait
push
rol
int
inc
inc
mov
sub
push
arpl
mov
aas
xor
ror
jae
inc
pop
xor
dec
mov
aas
add
retf
icebp
iret
stc
repnz
test
pop
fsub
xor
hlt
xor
ins
xchg
repnz
shl
mov
cmps
jno
sar
pushf
fstp
js
pop
mov
sbb
in
pop
dec
enter
mul
cmps
(bad)
gs
cwde
mov
nop
push
test
outs
push
adc
mov
mov
popa
mov
sbb
(bad)
push
aas
xor
movs
dec
jecxz
xchg
mov
mov
dec
hlt
out
and
xor
aaa
in
sub
mov
ror
call
imul
mov
rcl
(bad)
into
jnp
or
(bad)
mov
sti
jo
adc
inc
ret
retf
pop
sub
xchg
in
(bad)
xor
(bad)
pop
sub
int3
add
std
hlt
sub
push
mov
iret
test
lods
xlat
cmps
stos
add
adc
sbb
push
mov
loope
or
arpl
jl
fmul
aad
xlat
xchg
inc
pop
sti
inc
mov
mov
cmp
sub
and
inc
xor
and
mov
jge
fs
lods
dec
pop
je
ds
cmp
in
mov
fimul
mov
inc
adc
jg
mov
(bad)
clc
mov
jne
or
cmp
dec
pop
pop
imul
mov
adc
add
movs
imul
test
(bad)
mov
mov
jg
aaa
lahf
mov
iret
jmp
push
frstor
push
or
ins
popa
and
js
sub
stmxcsr
mov
adc
js
xchg
pop
(bad)
cmp
mov
dec
aam
repnz
ins
nop
mov
sbb
(bad)
(bad)
shl
cmps
cmp
sahf
stos
sar
in
in
imul
xchg
jbe
dec
dec
ss
add
push
sub
adc
bound
call
out
test
xchg
popa
and
or
mov
ficomp
pop
pusha
push
or
ror
xchg
cmc
ja
push
inc
(bad)
xchg
mov
clc
fmul
pop
and
fld
adc
pop
fld
or
adc
addr16
pop
adc
and
loope
dec
sbb
ret
mov
push
jne
movs
dec
scas
icebp
push
jg
inc
scas
cs
cld
jecxz
cld
in
add
int
fistp
push
test
mov
stc
push
adc
mov
sbb
mov
(bad)
jp
fnsave
mov
pop
lock
repnz
call
mov
jae
adc
adc
or
adc
arpl
adc
gs
push
fsub
jae
loope
xor
adc
xchg
ret
push
jno
inc
jp
ins
shl
pushf
cdq
in
je
jno
clc
adc
faddp
and
jl
jmp
test
jl
pop
pop
push
ret
lds
dec
data16
push
iret
push
xchg
jmp
jge
mov
out
into
mov
cmp
cdq
scas
call
mov
pop
mov
test
cli
scas
lea
stos
cmps
test
push
jg
cmp
imul
scas
mov
pop
cmp
fisub
cmps
aaa
add
push
sar
mov
fdiv
es
out
syscall
adc
cmps
sub
pusha
sti
sysret
jmp
es
movs
leave
sub
or
push
cwde
mov
sub
cmp
jp
xor
jnp
in
cmps
test
sub
mul
add
(bad)
sbb
movs
loopne
xchg
push
icebp
scas
or
fldz
stc
mov
sub
xchg
daa
push
xor
in
repz
and
sbb
jle
and
push
cwde
sbb
mov
imul
mov
dec
jp
mov
call
shl
(bad)
movs
test
stc
xchg
xor
adc
jg
xchg
xor
stos
and
sbb
ret
dec
lods
and
push
dec
(bad)
popa
xchg
pop
das
ror
jne
inc
stos
aam
cvtdq2ps
(bad)
repz
xor
out
jl
mov
xchg
shl
xchg
shl
sbb
adc
add
sub
out
xor
pop
sub
mov
aam
mov
mov
outs
loopne
jne
outs
xchg
call
or
into
fwait
in
test
aaa
pop
jno
jne
bound
shr
jo
sbb
xor
inc
adc
sbb
dec
fwait
jnp
or
in
hlt
pop
and
mov
sub
(bad)
mul
and
jl
jb
add
test
enter
mov
rcr
push
cmp
add
scas
xor
fmul
inc
dec
and
(bad)
push
xchg
inc
xor
dec
jmp
lahf
fadd
js
sbb
scas
push
repz
mov
mov
jb
sub
jns
add
popf
les
sahf
fist
(bad)
stos
xchg
push
movs
sti
repnz
mov
push
retf
popa
jmp
dec
xor
pop
mov
adc
add
rcr
inc
xlat
mov
and
jne
lods
push
ss
xor
push
push
mov
dec
jnp
fwait
cmp
mov
cli
add
in
ss
xchg
pusha
or
int3
sbb
xchg
je
into
push
movs
jae
scas
dec
xchg
in
or
je
jecxz
test
mov
mov
cli
in
push
mov
jmp
pop
xchg
and
dec
aas
lods
(bad)
retf
mov
add
call
out
inc
jae
test
xor
sbb
pushf
push
movs
(bad)
out
pusha
dec
pop
mov
ja
fild
or
dec
neg
jg
ds
sbb
pop
xchg
fistp
shl
mov
les
lahf
imul
test
sbb
mov
repz
or
ja
pop
inc
push
add
mov
or
leave
pop
ret
pop
repnz
test
sub
aam
retf
mov
and
pop
mov
pop
xchg
sbb
gs
shr
jl
mov
out
dec
clc
pop
sub
jb
push
test
rcl
stos
mov
mov
das
push
and
(bad)
call
je
xchg
jno
test
enter
jb
repnz
jae
std
push
mov
fsubr
push
sub
dec
cmp
test
cmp
or
ret
inc
inc
mov
ret
or
pop
pop
pushf
sub
leave
push
es
or
das
(bad)
push
adc
fisub
icebp
push
mov
add
mov
icebp
add
pop
inc
sbb
xor
inc
xchg
sub
stc
pop
mov
pushf
cmc
sbb
aam
sub
popf
push
pop
cmp
xchg
iret
add
mov
pusha
call
popa
push
mov
(bad)
popa
mov
or
sbb
hlt
add
shl
aad
sbb
sahf
test
sub
jl
js
out
jmp
repnz
loop
shr
mov
sbb
(bad)
sbb
mov
je
cmps
push
and
(bad)
js
daa
or
in
jp
(bad)
and
xor
int
mov
push
je
push
stos
inc
cmp
ins
cwde
pushf
jns
mov
adc
cmp
push
sar
retf
add
fwait
xchg
jnp
fdivr
sbb
push
pop
inc
or
aam
ja
neg
mov
xchg
dec
call
data16
xchg
xor
push
aaa
rcr
or
dec
inc
and
loop
adc
outs
pushf
int3
lods
in
not
and
xor
push
pop
clc
inc
adc
jmp
jp
out
nop
outs
push
out
cmp
jnp
loopne
lahf
mov
pop
repz
test
cmp
push
jl
cld
sbb
mov
sbb
mov
mov
cdq
adc
cmp
or
pop
out
xchg
leave
cmps
stos
clc
lods
pop
push
mov
jl
add
pop
push
sub
popa
call
mov
xor
test
or
inc
pop
rcr
cmp
or
cmp
scas
ins
ret
xlat
cli
ins
adc
or
mov
shl
mov
(bad)
mov
in
stos
sub
add
imul
nop
cmp
add
add
push
dec
dec
jge
push
dec
cmp
stos
loope
out
push
pop
fdiv
loopne
mov
or
cs
mov
mov
mov
inc
dec
pop
push
arpl
sar
fbstp
cmp
lock
dec
or
jle
div
aad
subps
dec
outs
or
(bad)
int
sub
repz
fadd
add
mov
xlat
xlat
xchg
cmc
ja
in
push
mov
push
jg
dec
jle
out
cmp
and
gs
mov
push
pop
xlat
(bad)
popf
push
pop
dec
clc
in
rcl
test
test
stos
loopne
imul
cmps
mov
ror
jecxz
pop
test
mov
fnstcw
fisttp
and
dec
dec
out
pop
loop
repnz
mov
or
mov
dec
mov
adc
and
and
pop
push
hlt
dec
in
sahf
xchg
addr16
ffreep
mov
dec
ss
movs
scas
out
repnz
inc
sti
inc
and
test
imul
xor
fidiv
dec
scas
mov
adc
enter
mov
mov
jne
jle
sbb
pusha
xchg
sub
int3
jns
mov
std
adc
int
int3
cdq
out
pop
dec
sub
scas
xor
mov
xchg
ins
scas
(bad)
fcmovbe
xlat
push
xchg
cmp
cmps
jmp
push
jecxz
sub
cmp
pop
fucomip
pop
pusha
popf
cs
fdiv
and
jmp
and
das
xlat
mov
in
call
scas
cmp
dec
xchg
hlt
(bad)
data16
sbb
xor
mul
pushf
movs
popf
add
xchg
popf
lods
mov
sbb
cmps
or
(bad)
xor
push
adc
mov
xor
add
or
gs
add
xchg
pop
sbb
in
mov
loop
cld
or
inc
leave
and
mov
addr16
sub
jno
leave
push
push
out
fs
or
and
mov
dec
cs
popa
test
(bad)
sub
test
push
loopne
xchg
in
dec
jne
and
sahf
xchg
pop
cmps
and
mov
or
aas
sbb
xchg
mov
nop
ins
out
cmp
mov
jmp
add
out
mov
lods
cdq
iret
push
jg
ror
push
inc
stos
xor
sub
push
and
inc
mov
jne
test
ss
mov
mov
loope
popa
inc
jl
sbb
pop
sub
jno
(bad)
sub
xchg
test
ins
cmp
stos
jecxz
pop
mov
idiv
cs
in
inc
mov
dec
jp
lods
stos
cwde
or
shr
mov
fnstcw
rol
pop
repz
popf
dec
push
std
push
xchg
test
pop
scas
pop
iret
call
mov
stos
xor
aas
imul
pop
ins
(bad)
jne
mov
lea
push
retf
and
or
dec
cmp
mov
jmp
add
add
xor
mov
pop
mov
cmp
xchg
(bad)
ss
dec
jle
cmp
xchg
icebp
call
cmps
imul
dec
das
cld
mov
icebp
dec
sub
aas
xchg
pusha
mov
aas
push
call
jmp
jno
cmp
xor
dec
jp
inc
and
inc
or
sub
retf
sbb
xchg
xor
add
ret
sub
mov
jo
shl
adc
mov
ret
outs
and
xchg
into
xchg
repz
or
jl
pop
in
inc
push
push
and
and
nop
dec
push
push
aad
cwde
xchg
stos
pop
push
push
aam
mov
retf
mov
scas
add
cmp
ret
in
push
stos
dec
inc
dec
or
pop
(bad)
sbb
dec
mov
add
push
and
add
mov
sub
jecxz
cs
out
add
dec
dec
push
in
fcompp
cli
test
add
xor
mov
stos
push
sub
arpl
or
cmc
xor
add
pop
xor
test
add
push
shl
add
outs
sub
stc
push
inc
es
inc
xchg
xchg
xchg
fiadd
push
mov
mov
mov
dec
push
test
repz
add
cli
mov
push
add
xor
cwde
pop
xor
nop
test
jo
lahf
outs
pop
icebp
mov
add
fucomip
je
jp
adc
arpl
adc
leave
dec
popa
inc
hlt
push
iret
inc
das
mov
shl
sub
(bad)
je
cmp
sti
enter
mov
(bad)
push
push
and
nop
sub
dec
or
push
push
aas
mov
cmc
pop
pop
sub
push
pop
add
fbld
(bad)
ror
je
out
cmp
imul
sub
out
cmp
call
ss
clc
outs
nop
faddp
mov
push
shl
pop
shl
inc
adc
cs
dec
push
out
sub
jae
shl
jae
mov
comiss
xchg
pop
mov
aam
ins
(bad)
in
fld
iret
mov
mov
sbb
pop
pop
mov
push
mov
inc
ficom
xchg
mov
pop
mov
loope
out
ins
xchg
stos
cs
ret
jl
out
pop
rcr
xlat
push
lea
add
sbb
push
fs
pop
test
mov
jnp
mov
inc
adc
adc
and
test
fnstsw
mov
jne
or
div
push
adc
mov
icebp
leave
aam
push
xchg
cwde
mov
jbe
outs
adc
ins
popf
push
mov
sti
(bad)
bswap
xchg
xchg
sbb
push
sub
cmp
jns
sbb
(bad)
imul
push
sahf
int
into
push
dec
sub
and
cmp
dec
sub
leave
repnz
cmp
ja
mov
out
cmp
jno
popf
rcl
es
(bad)
lods
or
push
push
out
test
sbb
sbb
cli
sub
bound
stos
test
scas
pop
mov
sbb
mov
outs
push
repnz
jmp
repnz
outs
pop
and
div
mov
(bad)
ins
inc
retf
loop
dec
loope
das
add
ret
add
iret
test
mov
sub
mov
cmp
aam
mov
or
add
mov
mov
xchg
sub
xor
movs
xor
movs
fs
mov
gs
sbb
lea
rcl
push
repnz
dec
lods
xchg
and
icebp
dec
je
std
cld
or
lods
rcl
movs
sbb
lods
retf
xchg
jmp
ins
and
push
jecxz
enter
sbb
scas
push
push
outs
mov
out
xor
pushf
push
add
push
into
pop
xor
aad
inc
push
dec
iret
push
fbstp
push
mov
add
cs
or
ds
xchg
dec
sbb
out
and
jnp
mov
test
popa
jle
jno
mov
and
ins
aam
or
cmp
cli
add
shr
push
and
lock
into
mov
das
and
hlt
mov
inc
imul
shl
mov
xorps
sahf
jg
and
enter
adc
enter
iret
cmp
lods
bound
out
pop
sbb
neg
aas
dec
pop
call
shl
pushf
push
xor
mov
xor
dec
and
sbb
sub
fcom
or
and
mov
(bad)
push
mov
adc
lods
dec
pop
mov
ret
(bad)
int
inc
dec
or
push
imul
outs
mov
jge
mov
test
fs
xor
pushf
push
adc
jle
xor
push
push
inc
pop
pop
fistp
inc
xchg
push
dec
xchg
in
pop
xchg
cld
jle
cs
(bad)
dec
jmp
dec
and
adc
and
fisttp
mov
les
cli
js
mov
jmp
push
mov
xchg
inc
test
sub
test
mov
mov
retf
xchg
adc
int3
test
fmul
mov
test
jmp
out
sub
add
sub
jae
std
sbb
mov
jl
test
out
sbb
into
sub
jl
std
mov
xchg
fcomp
arpl
pushf
call
nop
fcomp
mov
cdq
cmp
std
push
and
and
sbb
jns
pushf
sahf
pop
popa
int
mov
loopne
mov
sub
outs
xchg
movs
ja
or
add
xchg
adc
add
fs
inc
lds
cmc
in
and
dec
je
(bad)
push
xor
push
push
(bad)
mov
jl
lods
pop
scas
and
fimul
fwait
mov
hlt
ret
dec
dec
cmp
xchg
mov
xor
pop
ror
lds
repz
xchg
xchg
jbe
cmp
adc
and
fimul
daa
cs
or
retf
dec
mov
ja
js
mov
fucomip
pause
cmp
jecxz
jl
push
in
mul
lahf
stc
xchg
pop
(bad)
les
push
mov
and
mov
add
push
fidiv
mov
xchg
mov
ins
cs
pop
xchg
mov
dec
mov
sahf
stos
and
xlat
dec
xchg
cwde
or
movs
lahf
out
jg
add
push
in
sti
xchg
das
cmp
xor
scas
sub
lock
mov
inc
sbb
loopne
sti
and
inc
push
inc
test
imul
scas
mov
fbstp
aad
jbe
xchg
fisubr
jae
mov
lahf
sar
cmp
push
mov
dec
std
leave
out
stc
int3
int
push
fcomi
xor
(bad)
jae
leave
mov
jl
das
(bad)
xor
lods
fdivp
loope
rcl
(bad)
jge
std
mov
add
xchg
inc
add
sahf
fmul
sahf
jmp
enter
inc
aaa
addr16
rcl
sub
sbb
xchg
sub
imul
pop
ds
xor
stos
rcl
or
mov
mov
mov
(bad)
cmp
adc
retf
outs
call
jo
and
mov
sar
xchg
ins
dec
popa
hlt
ss
or
lock
adc
and
loope
cld
mov
mov
adc
repnz
ficomp
dec
cmp
jmp
out
aaa
inc
sub
mov
jl
dec
(bad)
int
xchg
mov
mov
dec
lds
xor
stos
out
jae
aas
pop
std
mov
mov
jmp
outs
adc
dec
fimul
ja
cmc
out
pop
xchg
clc
adc
mov
imul
jmp
data16
jge
pop
out
lock
mov
retf
mov
mov
cmp
cmp
inc
lock
sbb
sahf
jno
jb
adc
mov
shl
sbb
sti
bound
mov
aas
retf
cdq
jmp
jbe
jnp
xchg
aaa
sub
add
scas
mov
aas
in
ret
adc
sbb
daa
mov
lods
dec
fs
or
test
push
xor
mov
pusha
adc
jb
pushf
inc
dec
inc
jmp
(bad)
cmp
dec
and
mov
lds
or
sub
popa
lea
push
mov
mov
(bad)
neg
xor
aad
rol
aad
inc
cmp
aaa
mov
jg
in
stc
loopne
jbe
pop
test
mov
loope
popf
or
mov
or
cdq
inc
push
arpl
out
dec
cs
push
and
push
jmp
(bad)
dec
and
xchg
lock
xor
rol
mov
bound
test
out
sbb
fnsave
hlt
aam
mov
rcl
and
mov
(bad)
mov
or
push
push
sub
jnp
stc
sbb
add
mov
push
sbb
jmp
jmp
or
cld
xlat
ss
mov
je
push
mov
dec
mov
push
jmp
cdq
sub
mov
aaa
mov
mov
int3
mov
nop
test
dec
test
inc
cmp
popf
adc
mov
cmp
push
dec
daa
mov
and
mov
adc
xlat
nop
ins
repz
push
daa
push
inc
ret
or
mov
adc
adc
and
inc
xor
dec
pop
push
iret
dec
pop
outs
and
add
xchg
ins
xor
repz
cmps
jmp
or
jbe
int
push
inc
mov
sbb
push
jb
jl
neg
mov
push
mov
ret
or
jge
scas
aam
ret
sub
repz
mov
or
adc
sub
arpl
xchg
push
xor
push
or
add
pop
cmp
fcmovu
retf
sar
iret
xor
push
neg
daa
jo
pop
and
mov
dec
lahf
pusha
dec
fistp
adc
dec
daa
pushf
in
repnz
icebp
movs
aas
pop
(bad)
cmc
mov
pop
loop
or
(bad)
mov
js
int3
xor
mov
outs
leave
sti
sar
(bad)
out
pop
sbb
and
ss
sub
scas
out
repnz
fwait
mov
pop
mov
cs
pop
lods
xchg
and
adc
dec
pop
test
xor
sbb
(bad)
std
mov
push
dec
xchg
ficomp
xlat
cs
fwait
in
cld
push
adc
test
push
xchg
mov
inc
fisubr
lods
jno
retf
cmp
jmp
js
sbb
bound
jp
mov
call
add
push
lea
xchg
scas
or
mov
cmp
xchg
sub
loop
psubq
retf
or
fisttp
dec
sub
call
inc
daa
nop
and
jmp
repnz
movs
pop
mov
xchg
aam
jg
scas
into
xchg
jle
dec
popf
mov
rep
cmp
add
inc
adc
das
jmp
ins
inc
cmc
lahf
inc
pop
leave
adc
xor
loop
mov
daa
and
lods
push
int
jnp
sti
sub
mov
xor
cmps
movs
fstp
pop
and
out
rcl
clc
mov
pop
cs
daa
cld
repnz
mov
ror
push
sbb
and
or
lds
inc
inc
ret
cmps
lds
jmp
sbb
addr16
and
(bad)
lea
jp
add
xchg
jb
xor
inc
push
dec
jmp
sbb
mov
nop
(bad)
xchg
xor
out
out
jns
inc
loopne
push
loopne
movs
out
lds
inc
push
cmp
fwait
loop
out
rol
xor
lods
sbb
mov
dec
jns
add
mov
out
mov
scas
mov
test
lds
sahf
adc
fidivr
mov
cld
pop
inc
adc
cdq
mov
jbe
pop
pusha
mov
push
sbb
dec
xchg
mov
push
repnz
mov
sub
mov
clc
neg
rol
data16
push
cld
cs
hlt
(bad)
iret
push
leave
outs
fisttp
(bad)
xor
inc
mov
xor
mov
out
xchg
je
lods
mov
pop
addr16
popa
xor
fsubr
inc
sub
add
in
xor
daa
xchg
fs
cmp
out
iret
fcomp
sbb
jmp
and
pop
xlat
dec
adc
test
inc
xor
stc
xchg
ret
hlt
fisub
imul
out
out
call
(bad)
sti
arpl
leave
call
jp
xchg
sub
cmps
fdivr
push
ret
mov
inc
aam
sub
repnz
mov
das
loope
jge
adc
pop
shr
sub
dec
xchg
xor
inc
jmp
inc
cmps
mov
shl
mov
(bad)
dec
pushf
push
out
fdivr
and
xlat
fpatan
inc
retf
inc
aam
mov
rol
jg
xor
aad
ins
or
jge
cmp
addr16
dec
call
and
add
enter
or
xchg
icebp
outs
repz
fnstcw
fnstsw
inc
sub
ins
mov
mov
mov
test
jmp
xor
fadd
xchg
xchg
pop
mov
mov
sbb
push
in
mov
mov
clc
in
mov
mov
retf
fldcw
std
ret
mov
test
xlat
mov
mov
mov
lahf
sti
inc
ins
xchg
enter
xchg
jb
stc
out
fist
adc
inc
sar
sbb
(bad)
push
xchg
fstp
mov
aaa
ret
inc
clc
aad
test
and
inc
mov
aad
jae
scas
inc
adc
mov
xchg
aam
sti
cs
sub
std
mov
add
jnp
jge
mov
shr
pusha
cld
pop
scas
push
sub
mov
xchg
mov
nop
and
push
push
xchg
add
jl
pusha
lock
inc
add
repz
mov
je
and
and
lahf
and
push
cdq
jl
cmps
and
pushf
int
cdq
sub
sbb
sahf
add
mov
out
hlt
or
test
mov
(bad)
dec
inc
scas
inc
xchg
cmps
mov
xor
cld
ins
(bad)
dec
arpl
fidivr
cmp
sub
push
loopne
pop
stos
adc
sub
lods
aas
lock
and
(bad)
mov
test
mov
mov
mov
sbb
mov
js
imul
push
and
mov
inc
dec
cld
push
and
stos
jo
mov
cmp
popa
mov
cmp
and
rcr
(bad)
jmp
arpl
popa
xchg
and
out
cmc
(bad)
fimul
mov
lods
sti
arpl
adc
cmp
mov
cmps
cmp
push
popf
mov
cmp
cmc
movs
call
add
push
int3
mov
(bad)
jmp
aad
fxch
fistp
(bad)
aaa
dec
adc
and
push
mov
lahf
(bad)
adc
jnp
hlt
ficom
or
test
repz
clc
add
das
jne
xlat
pop
shr
idiv
push
test
stc
or
adc
iret
mov
pop
dec
retf
and
jmp
ror
and
fs
ds
nop
push
pushf
mov
scas
sbb
jbe
sbb
adc
push
out
inc
pusha
adc
dec
mov
fs
arpl
push
dec
cmp
in
js
mov
int3
test
jbe
inc
sbb
jo
and
test
cmovns
or
mov
in
sahf
jb
sar
dec
mov
test
out
add
sub
sub
sahf
ror
std
xlat
mov
jb
imul
mov
dec
and
sbb
xchg
dec
cmps
mov
xchg
xor
outs
push
repnz
and
adc
xchg
dec
ret
push
jp
cmp
cld
jno
aad
mov
daa
or
mov
dec
jmp
adc
xchg
imul
mov
mov
ret
int3
(bad)
leave
lods
sub
push
lock
ins
mov
mov
pop
or
jmp
push
enter
inc
cs
mov
mov
loop
xor
test
xor
nop
sub
xchg
xchg
cmp
idiv
btr
sbb
pop
(bad)
gs
sub
adc
adc
cwde
scas
ja
rcl
push
cdq
mul
sub
mov
(bad)
sti
popa
xor
dec
retf
add
jg
ja
retf
fistp
cdq
jmp
arpl
dec
call
cmp
dec
push
inc
test
xchg
xor
rcl
dec
sub
xchg
inc
pop
mov
pop
inc
ds
movs
jno
cmp
pushf
inc
sbb
fidiv
cmp
(bad)
hlt
icebp
mov
in
xor
icebp
ret
mov
es
gs
in
fmul
mov
test
ror
es
push
div
dec
pop
setno
ja
int
inc
sti
mov
(bad)
mov
ror
mov
dec
pusha
sbb
jae
mov
ins
jmp
cmp
pop
test
or
mov
pop
fsub
(bad)
gs
adc
fcom
int3
(bad)
lock
test
xchg
xor
in
in
div
nop
jnp
movs
mov
shr
jmp
test
dec
xor
and
or
push
shl
lods
ja
jns
ss
ret
add
xchg
xchg
push
test
jmp
(bad)
mov
inc
cmp
rcl
push
(bad)
jge
jae
nop
cmps
xchg
outs
cmp
or
loopne
dec
call
adc
xchg
mov
xor
or
mov
dec
cmp
add
ins
aaa
pop
jb
cld
xchg
sbb
add
dec
pop
xchg
and
cld
nop
xor
shl
pushf
push
scas
jne
xchg
outs
loope
fbstp
jg
and
rol
lahf
cdq
mov
call
sysret
shl
pushf
fisttp
or
pop
bound
dec
fldcw
lods
sub
and
mov
adc
retf
sbb
popf
xor
cmps
mov
test
or
mov
inc
call
dec
inc
pop
sub
pushf
adc
fild
add
inc
in
fwait
imul
push
cmp
inc
addr16
fcomp
das
inc
push
enter
pop
sub
retf
xor
pop
(bad)
ja
push
pop
scas
cmp
fimul
stos
add
sub
push
call
xchg
mov
jge
push
push
arpl
add
ins
cwde
in
dec
mov
and
pushf
das
pop
jno
push
ins
and
in
pop
mov
pop
je
arpl
icebp
or
cmc
dec
inc
loope
pop
push
(bad)
sbb
jb
mov
xor
lock
inc
cld
cmp
jmp
dec
retf
stc
retf
jb
adc
ins
loopne
and
add
push
sbb
cmps
jne
cmp
mov
call
and
dec
shr
xchg
pop
xor
xchg
mov
push
or
xchg
jb
ret
or
mov
jb
or
mov
aas
push
pop
inc
(bad)
lds
(bad)
popf
dec
je
loope
pushf
inc
push
dec
sub
ret
arpl
lahf
or
adc
inc
mov
xchg
retfw
ins
fcomp
or
mov
inc
out
sbb
sub
mov
pop
in
pushf
pop
dec
cwde
(bad)
sub
add
dec
push
sahf
xchg
dec
neg
fwait
push
out
xchg
xchg
fwait
cld
enter
cmp
push
fwait
scas
sub
pop
dec
dec
retf
push
cmp
add
and
sbb
push
add
fisttp
mov
push
mov
je
inc
adc
sub
lods
fwait
repz
cmp
push
in
test
in
push
inc
jge
jg
fs
jns
xchg
dec
jno
ja
das
popf
mov
adc
dec
cmp
push
cwde
and
nop
and
pop
cld
jp
mov
inc
mov
cmp
mov
lods
sub
daa
ficom
scas
push
or
pop
mov
xchg
stc
nop
xchg
inc
shr
cmc
fs
inc
cmp
mov
pushf
ins
push
cwde
inc
adc
jl
in
out
daa
and
push
mov
lods
mov
xor
mov
pop
dec
repnz
test
dec
lds
pop
call
push
fwait
pop
jl
and
fidiv
jo
inc
and
push
lock
xor
mov
push
push
xor
loop
mov
jl
sub
outs
adc
outs
inc
mov
cwde
sub
pop
int3
sti
and
data16
in
int
punpcklbw
shl
xchg
bound
mov
sub
imul
jl
fbstp
pop
mov
add
push
fsubr
call
mov
fisttp
pop
mov
push
mov
inc
fistp
mov
mov
mov
iret
out
push
inc
sar
lahf
pop
jmp
adc
cmp
pop
retf
xor
jae
stc
adc
mov
xor
xchg
test
fidiv
adc
mov
xchg
inc
or
adc
inc
imul
xchg
and
adc
scas
mov
std
cmp
mov
repnz
in
cmp
add
nop
(bad)
out
iret
daa
xchg
fisubr
fs
std
inc
jns
rcl
dec
into
push
xor
push
sbb
cmp
cmp
cld
xchg
add
imul
jns
push
int
stc
cmp
or
ds
je
fist
xor
jbe
xlat
icebp
lds
lahf
dec
sahf
sbb
xchg
out
test
in
cs
gs
jnp
das
xor
pop
leave
out
jle
rol
test
popa
cmovo
jnp
dec
jae
cmp
movs
dec
test
pop
and
data16
mov
or
sbb
fisubr
sub
xor
sub
sub
sbb
mov
pusha
and
push
shl
cs
sbb
int3
jl
mov
mov
adc
ins
or
imul
ss
icebp
sub
push
xor
test
sub
pop
retf
stc
mov
jns
(bad)
mov
fiadd
test
mov
cdq
(bad)
sbb
inc
cmp
dec
or
add
add
xchg
push
sbb
push
iret
or
push
scas
and
cwde
stos
les
scas
sar
das
jne
mov
push
xor
lahf
sbb
or
adc
test
leave
mov
mov
add
inc
pop
dec
sub
lods
push
fidivr
sbb
lock
mov
mov
mov
mov
loope
mov
push
popf
mov
shl
fimul
pop
cdq
ret
retf
lea
call
or
sti
call
jl
and
xchg
cli
mov
jg
pop
or
push
int3
xchg
leave
sub
jle
je
mov
mov
add
sub
mov
clc
ds
jnp
pop
pop
push
pop
ja
xchg
pop
lods
int
adc
out
jl
sbb
jbe
ret
and
jne
fcomp
or
jns
mov
cmp
push
les
(bad)
test
sub
mov
mov
add
and
add
lahf
aam
sbb
test
(bad)
lahf
adc
mov
test
xchg
xchg
xor
dec
outs
(bad)
std
add
mov
jne
push
xor
xchg
add
outs
fwait
jle
cmp
inc
mov
push
(bad)
or
and
stos
jae
mov
retf
clc
fld
inc
pop
shr
in
dec
push
or
fldenv
shl
cdq
pop
outs
cmps
test
jb
cmp
adc
push
jbe
scas
jnp
fldcw
mov
fdiv
stos
push
jmp
repz
xchg
test
mov
push
aad
in
les
adc
cmps
inc
xchg
sbb
out
arpl
xor
xchg
out
mov
cmp
je
jl
dec
jo
xchg
mov
retf
fidiv
scas
dec
and
pop
push
inc
(bad)
and
jl
mov
(bad)
adc
inc
jo
(bad)
lea
mov
fadd
lock
and
out
sbb
jns
xor
jns
add
nop
int
aas
mov
dec
jns
inc
cld
or
in
ss
push
leave
or
or
arpl
dec
dec
and
rcr
pop
cmps
rcr
pop
call
addr16
and
cmps
fsub
fcom
pop
mov
jp
retf
jae
mov
fld
add
mov
push
int3
cmp
xchg
sbb
add
mov
call
inc
arpl
fstp
sahf
std
or
es
pusha
mov
scas
in
and
jne
xchg
(bad)
adc
xlat
cmps
arpl
xchg
fucomi
mov
fcom
inc
out
(bad)
or
pop
mov
sbb
sub
pop
lods
inc
into
lods
xchg
and
adc
pop
dec
cmp
dec
mov
mov
add
test
and
or
pop
outs
sar
imul
and
and
pop
dec
hlt
xchg
cmp
in
inc
jmp
mov
inc
mov
aad
shl
mov
stc
lock
leave
push
xchg
ss
cld
mov
stos
iret
cmps
push
xor
les
xchg
push
adc
or
fcom
fbstp
sub
adc
cwde
das
(bad)
cmp
mov
aam
sub
in
adc
jmp
sbb
cmps
call
mov
or
fcomp
push
loopne
arpl
pusha
pop
pop
jmp
fld
iret
sar
fs
mov
add
xchg
pushf
shl
jl
or
movs
mov
je
or
les
sbb
jbe
mov
mov
jno
mov
cmp
in
add
mov
je
cmc
jne
aam
and
(bad)
je
or
push
fidiv
pop
xor
jecxz
xor
mov
cmc
push
int
call
dec
or
pop
inc
sub
out
lods
(bad)
(bad)
sbb
(bad)
and
je
inc
out
clc
jns
je
cs
ds
retf
popa
xchg
dec
arpl
and
dec
mov
add
mov
lea
xchg
push
inc
jge
mov
or
pushf
or
(bad)
mov
hlt
adc
add
fmul
push
icebp
pop
xor
sbb
and
js
xchg
(bad)
mov
(bad)
xlat
(bad)
shl
or
movs
push
add
(bad)
std
pop
cmp
dec
(bad)
xchg
outs
push
push
ja
pop
mov
cmp
jmp
xor
sub
inc
jo
movs
pusha
jecxz
jmp
sbb
cmp
add
inc
out
ret
xchg
loopne
outs
cmp
hlt
pusha
xchg
mov
mov
sbb
cmp
and
sub
mov
cwde
push
add
push
aas
pop
mov
fs
sub
pop
loopne
hlt
push
or
sub
dec
gs
aas
retf
inc
out
div
fisubr
out
inc
test
movsx
sub
aad
popa
push
test
mov
or
sbb
or
bound
loop
mov
jbe
fcom
mov
in
int3
sub
mov
in
xchg
movs
xchg
and
mov
arpl
pop
shl
mov
retf
cmp
add
xchg
popf
mov
retf
add
bound
shl
sbb
cmp
mov
jl
jmp
mov
ja
sbb
pop
out
sti
push
sub
pop
jmp
sbb
fldl2t
gs
adc
or
or
fstp
jo
pop
add
push
pop
pop
sub
mov
test
dec
push
adc
sbb
sysenter
jbe
clc
fdivp
or
ror
cmp
mov
outs
inc
xlat
sub
xlat
ins
loope
sub
dec
and
repz
cmc
icebp
pusha
jmp
xchg
xlat
rcr
sti
push
outs
scas
ja
mov
pop
out
add
and
pop
fidiv
jl
inc
ficom
imul
and
dec
pop
inc
add
jo
mov
ins
ficom
dec
(bad)
les
rcl
(bad)
jns
mov
icebp
mov
in
lock
sbb
pusha
icebp
lods
and
and
outs
pop
mov
pop
lods
inc
in
idiv
fmul
daa
push
cmp
hlt
sub
mov
loope
test
imul
cs
sbb
aad
mov
push
mov
mov
inc
mov
scas
leave
or
int3
xchg
in
test
inc
push
aaa
cmp
ror
dec
push
imul
jg
ret
xor
ins
loope
imul
in
adc
mov
ret
mov
push
retf
sbb
push
fidiv
xlat
out
mov
xor
xor
cmp
je
add
outs
xlat
stc
(bad)
aad
outs
adc
test
rcl
repz
push
xchg
xlat
outs
(bad)
sti
sub
enter
arpl
daa
mov
rcr
cmp
movs
lods
scas
movs
iret
pop
je
popa
mov
dec
or
div
push
inc
es
in
addr16
fwait
out
hlt
ja
push
dec
sbb
in
sbb
mov
call
fwait
loopne
xchg
or
mov
cmp
jo
mov
imul
in
lahf
(bad)
and
jbe
mov
xor
cmc
lea
jae
adc
and
ss
retf
jmp
cmp
mov
add
je
jne
inc
retf
push
pop
xlat
cdq
int3
jo
mov
and
es
fidivr
xor
imul
div
enter
sub
sub
out
jmp
fs
sub
mov
repnz
lods
seta
sahf
aam
sub
add
push
mov
or
stos
xor
je
xchg
out
xchg
push
cmp
retf
je
ret
ss
stc
pop
cli
pop
inc
shl
(bad)
mov
cld
outs
jnp
xor
into
out
xor
jle
inc
sahf
jo
and
and
pop
mov
xchg
in
daa
adc
sub
xlat
cld
scas
neg
or
add
jo
sbb
xor
mov
adc
pop
inc
mov
ins
dec
push
inc
fisttp
sbb
mov
or
cmp
cwde
pop
mov
leave
icebp
xchg
push
mov
xchg
sbb
push
sbb
scas
retf
push
xchg
mov
add
or
imul
pushf
nop
fincstp
inc
lahf
sbb
mov
mov
icebp
ret
push
inc
outs
mov
ins
in
pop
inc
test
in
and
sub
sub
jp
and
fdivr
mov
xor
mov
lods
outs
mov
movs
lods
psadbw
mov
cli
pop
push
ja
mov
inc
aaa
mov
add
cwde
mov
xchg
mov
movs
mov
adc
and
xchg
sub
gs
jnp
shl
popf
out
jmp
xor
pusha
imul
xchg
cmp
xchg
pusha
pushf
pushf
gs
js
mov
std
pusha
cmp
test
inc
xchg
lea
jmp
jnp
cmp
adc
pop
int3
(bad)
jle
cmp
fist
add
cdq
adc
jmp
sub
jbe
ret
int
inc
add
add
fdivr
or
out
cmp
add
and
add
cmp
add
add
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
