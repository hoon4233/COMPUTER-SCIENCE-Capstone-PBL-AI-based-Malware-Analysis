iret
mov
or
and
jns
sub
cmp
sub
and
jns
loopne
das
pop
test
pop
sbb
xchg
out
cmp
inc
add
(bad)
jns
stos
fstp
and
repnz
pop
fdivp
push
sub
add
add
or
test
mov
add
sub
add
and
jno
repnz
mov
movs
mov
pop
je
adc
dec
(bad)
adc
push
not
push
jl
and
jbe
pushf
mov
imul
pop
je
repnz
das
jne
add
ja
cdq
xchg
mov
jg
and
jbe
lahf
(bad)
jns
stos
mov
lock
fistp
mov
(bad)
cmc
test
jne
pop
idiv
neg
icebp
std
mov
das
mov
jne
cli
jns
pop
test
test
repnz
iret
jne
and
dec
mov
iret
jne
stos
pop
dec
cmp
test
jge
sbb
or
sub
scas
ret
inc
mov
pop
dec
cmp
rcr
xor
dec
cmp
stos
ret
dec
mov
jge
sub
cmp
leave
push
(bad)
add
retf
aam
neg
jge
or
jo
mov
int
jae
jg
cli
test
div
jb
jae
jg
retf
inc
add
js
jae
sbb
sub
mov
xchg
mov
cmp
mov
jns
sub
cli
jne
(bad)
cli
int
idiv
into
es
leave
dec
and
jns
and
or
mov
and
jns
enter
fmul
imul
out
xchg
dec
cmp
retf
fiadd
or
and
xchg
push
loopne
inc
and
push
stc
ror
(bad)
jns
retf
pop
push
mov
fcomp
and
enter
and
jns
jbe
pushf
arpl
xchg
gs
xor
pop
or
(bad)
jns
iret
out
sub
ja
loope
daa
inc
sub
and
mov
or
dec
(bad)
leave
dec
and
adc
xchg
mov
jns
fmul
push
mov
pop
dec
cmp
fmul
pop
mov
aaa
dec
cmp
retf
mov
or
jge
adc
aaa
lock
fild
jns
loopne
fimul
and
jns
and
xor
jg
(bad)
sub
inc
shr
lock
aam
lock
dec
xchg
stos
cmp
or
adc
dec
(bad)
adc
dec
(bad)
jns
mov
(bad)
xchg
sbb
jns
loopne
inc
sub
dec
mov
mov
iret
mov
test
scas
adc
outs
(bad)
jns
cmps
push
retf
scas
sub
retf
or
(bad)
sub
mov
adc
adc
dec
outs
fisttp
jae
cmp
dec
xchg
jae
pop
or
(bad)
cli
int
ret
xchg
and
or
loop
jge
sbb
or
neg
ja
xor
mov
push
jmp
pop
je
xchg
aas
sub
clc
out
cwde
jns
scas
mov
test
(bad)
adc
and
jns
and
add
sahf
xchg
stos
cmp
into
imul
or
or
aaa
fmul
xchg
jns
push
out
xchg
mov
iret
fmul
jns
sub
or
pop
mov
stc
ror
(bad)
jns
sub
inc
jnp
jns
jecxz
es
jmp
add
add
mov
popf
jns
aam
lock
(bad)
test
sub
(bad)
jnp
dec
inc
add
stos
add
and
add
mov
jecxz
dec
not
xchg
or
dec
inc
cmc
retf
mov
mov
pop
pop
(bad)
jns
aad
jge
jecxz
ja
jecxz
xchg
add
mov
daa
shl
lock
mov
test
cmp
aad
out
test
add
push
dec
cmp
mov
fwait
test
enter
test
add
push
dec
cmp
adc
xchg
dec
test
test
(bad)
add
jge
sub
ins
aaa
sbb
or
pusha
ja
mov
add
mov
(bad)
jns
fcmovb
mov
std
test
imul
test
test
sbb
inc
push
and
mov
cmp
stos
mov
cli
rcr
stc
xor
sbb
or
data16
enter
dec
mov
pop
inc
dec
fcomip
sti
jb
add
or
shl
lock
fwait
out
jns
and
inc
jge
(bad)
sub
jne
add
cmps
add
pop
pop
jne
cmc
fadd
xchg
mov
xchg
fadd
jl
xchg
mov
lock
dec
mov
pop
inc
iret
push
idiv
mul
adc
imul
div
sbb
and
xchg
fs
cmps
jne
jne
cmc
fadd
xchg
fdiv
std
fadd
xchg
xchg
xchg
fdiv
stc
fadd
xchg
fdiv
and
cmp
or
inc
or
add
retf
pushf
mov
jmp
in
test
fidivr
aam
test
(bad)
(bad)
loop
push
dec
jno
(bad)
bnd
inc
stos
inc
inc
out
sub
fyl2xp1
mov
xor
lock
mov
leave
aas
xor
sub
cmp
repnz
fbstp
std
stos
mov
lock
iret
ja
cmc
jl
and
loopne
lock
jb
sub
jne
add
or
and
retf
adc
pop
(bad)
(bad)
loop
push
mov
and
bnd
inc
stos
inc
inc
out
sub
fyl2xp1
mov
xor
lock
mov
leave
aas
xor
sub
aam
test
fild
jl
xchg
mov
mov
push
js
mov
pop
jne
bnd
jne
sbb
sbb
cmp
adc
pop
fild
jl
xchg
mov
and
mov
(bad)
lock
inc
das
icebp
(bad)
sbb
es
mov
xor
sbb
and
dec
leave
jl
and
loopne
lock
jb
sub
jne
add
cmp
es
dec
and
or
dec
mov
xchg
dec
fiadd
xchg
das
mov
cmp
jne
dec
hlt
fadd
sub
jne
call
adc
sahf
and
into
jl
and
loopne
lock
jb
sub
jne
add
arpl
arpl
dec
and
or
retf
ror
arpl
xchg
jns
fsub
jns
jo
xchg
jns
and
call
(bad)
jns
les
icebp
stos
cmp
stc
jl
and
loopne
lock
jb
das
pop
test
jno
push
enter
or
push
and
cli
xor
pop
cmp
and
cmp
jae
popa
div
repnz
daa
add
or
sub
not
div
icebp
aam
lock
fbstp
loope
mov
jl
and
loopne
lock
mov
test
cmp
nop
fcomip
icebp
or
lock
mov
cli
jns
and
fidivr
(bad)
hlt
dec
shr
jns
stos
mov
stos
cmp
lock
adc
jo
sub
mov
leave
push
test
popa
xchg
pop
cmp
dec
cli
adc
scas
mov
or
and
cmp
mul
dec
retf
idiv
mov
cli
sub
pop
cmp
test
xchg
test
xchg
and
mov
mov
or
iret
mov
leave
stos
mov
jl
jecxz
xchg
push
stos
push
js
stos
cmp
loope
add
push
jge
mov
jbe
pushf
mov
(bad)
js
retf
dec
or
and
or
sti
ja
mov
or
and
xchg
and
int
and
fdiv
mov
jbe
jmp
jns
test
jne
pop
dec
cmp
mov
(bad)
cli
xor
pop
cmp
and
cmp
jae
dec
div
clc
loop
scas
jns
mov
(bad)
jns
fadd
jns
scas
jnp
neg
add
not
xchg
xchg
push
(bad)
jns
and
hlt
mov
add
repnz
cli
int
ret
xchg
and
or
mov
(bad)
jns
jg
jns
mov
(bad)
clc
cli
aaa
lods
jns
scas
mov
jno
arpl
sub
stos
mov
jns
cmps
int
or
jge
cmc
and
cld
and
(bad)
jns
inc
push
jns
push
or
and
xchg
and
call
ja
mul
or
and
std
sbb
add
push
mov
(bad)
jns
pop
dec
cmp
stos
mov
pop
or
xchg
jns
fimul
mov
outs
in
cdq
or
jne
icebp
stos
mov
cmp
scas
mov
cdq
mov
out
lock
call
sbb
jbe
test
pop
and
rcl
sbb
xchg
stos
cmp
or
dec
(bad)
fimul
xchg
mov
dec
shr
inc
or
(bad)
jns
data16
push
leave
lock
es
movs
neg
add
test
pop
cmp
jae
inc
div
cmp
sub
or
in
add
mul
(bad)
repnz
das
(bad)
cld
aad
add
mov
jns
push
(bad)
fimul
dec
dec
and
jno
pushw
repnz
xlat
(bad)
cmp
sub
push
neg
add
sub
pop
cmp
and
add
dec
neg
add
retf
and
loopne
lock
mov
test
dec
mov
syscall
or
iret
pop
jle
jns
inc
add
data16
xor
mov
jns
sub
test
and
jns
shl
inc
ja
icebp
stos
cmp
shr
sbb
sub
and
dec
jge
ret
daa
jge
cmc
and
add
xchg
jmp
adc
jns
out
lock
aam
lock
(bad)
iret
es
fisttp
(bad)
xchg
addr16
xchg
jecxz
jge
inc
add
pop
add
je
sub
ins
xchg
mov
or
inc
add
clc
ja
inc
ja
icebp
stos
cmp
or
enter
sub
pop
mov
or
stos
push
dec
icebp
stos
cmp
and
xor
adc
xchg
mov
add
sub
xchg
fisttp
jns
pop
jg
fwait
xor
xchg
jns
daa
xchg
jns
and
adc
mov
xchg
jns
stos
mov
jns
and
jns
data16
enter
dec
mov
pop
lock
dec
(bad)
hlt
inc
xlat
scas
sub
push
test
and
adc
scas
mov
adc
ret
mov
xchg
arpl
sbb
sahf
and
dec
shl
not
xchg
repz
(bad)
jns
jge
mov
jbe
pushf
mov
(bad)
jnp
retf
ficom
and
add
cmp
retf
dec
neg
add
retf
jle
and
mov
mul
xchg
popf
jmp
dec
(bad)
jns
cmps
or
int
add
neg
cmps
jo
sub
cmps
add
(bad)
lock
es
xchg
daa
push
(bad)
jns
dec
xchg
jns
stos
jnp
neg
add
shl
es
mov
fld
hlt
mov
add
repnz
cli
int
jge
xchg
cmp
daa
(bad)
jns
shl
fadd
xchg
fadd
xchg
(bad)
fimul
scas
repnz
test
jo
push
pop
lock
sbb
xchg
stos
cmp
xchg
jae
sbb
popa
(bad)
repnz
add
div
ret
jns
and
lock
fcomip
mov
or
jg
mov
cmps
ds
fsubr
jns
test
xchg
ja
cmc
sub
jbe
and
jns
dec
scas
(bad)
add
leave
fadd
xchg
fiadd
xchg
mov
mov
xchg
test
mov
fld
ficomp
mov
mov
mov
add
dec
and
add
leave
sub
ror
(bad)
pop
mov
(bad)
jbe
lods
cld
jns
mov
add
cmps
arpl
and
or
add
loope
or
and
lock
add
xor
(bad)
jbe
cmps
pop
xchg
fadd
xchg
and
jbe
sbb
jns
sub
cld
scas
fadd
xchg
jae
hlt
fadd
xchg
scas
(bad)
push
and
cli
int
icebp
into
mov
cli
jl
cmp
neg
add
push
xchg
int
and
jbe
loopne
jns
mov
(bad)
adc
dec
sub
test
aad
xchg
fdivr
jns
add
js
in
push
cmp
scas
inc
test
fld
cs
or
xor
add
push
hlt
mov
mul
(bad)
jns
dec
call
enter
popa
jae
cmp
retf
push
mov
fdivr
add
and
shr
(bad)
hlt
mov
add
cld
fadd
cli
int
ret
xchg
and
or
neg
add
and
adc
dec
push
cdq
dec
and
xchg
scas
(bad)
add
neg
(bad)
jns
add
js
call
neg
add
loope
or
xor
add
push
hlt
mov
mul
(bad)
jns
dec
call
stos
ret
mov
cmp
retf
call
push
add
arpl
xchg
shr
(bad)
hlt
mov
add
cld
fadd
cli
int
ret
xchg
and
or
neg
add
and
lock
sbb
xchg
stos
cmp
cdq
dec
and
xchg
pop
(bad)
add
neg
(bad)
jns
sub
cld
mov
and
jns
and
adc
mov
xchg
mov
add
push
hlt
mov
mul
(bad)
jns
dec
call
jno
mov
cmp
retf
xor
add
and
shr
(bad)
hlt
mov
add
std
fadd
cli
int
ret
xchg
and
or
dec
call
jns
mov
xchg
fsubr
xchg
fdivr
jns
sub
cld
mov
and
jns
shl
les
push
call
cmp
and
hlt
fadd
xchg
push
xor
cmps
xchg
sbb
sti
or
ja
cmp
sbb
cmp
ja
iret
cmps
add
adc
(bad)
jns
sar
cld
rcr
add
neg
add
sbb
cs
stos
mov
cld
(bad)
daa
(bad)
jns
cmps
inc
xchg
fsubr
xchg
jae
inc
div
dec
fbstp
or
ja
mov
jns
cmps
cmp
and
fstp
add
inc
and
cli
lods
repz
mov
add
or
(bad)
clc
retf
jns
inc
cmp
xchg
fadd
xchg
and
cld
test
and
jns
cmps
jbe
neg
scas
hlt
mov
jne
rcr
add
pop
aas
ja
inc
ja
(bad)
fadd
xchg
fadd
xchg
outs
cwde
dec
and
cdq
fadd
xchg
mov
and
cmc
sub
jbe
sbb
jnp
neg
add
and
repnz
imul
or
ja
mov
jns
cmps
(bad)
jge
and
loope
add
neg
add
sbb
xor
icebp
cld
les
(bad)
jns
rcl
dec
or
adc
xchg
fsubr
xchg
jae
inc
div
dec
fild
imul
mov
stos
jnp
neg
add
retf
test
sub
mov
mov
add
loope
add
pop
pop
ja
cmc
stos
es
shr
(bad)
jbe
inc
std
jns
mov
(bad)
cli
lods
rol
xchg
and
int3
icebp
fadd
xchg
pop
cmp
scas
jnp
neg
add
loope
xchg
jns
mov
adc
or
(bad)
jns
and
xchg
bound
(bad)
clc
cli
jmp
jns
fmul
neg
add
mov
add
jmp
fiadd
xchg
jae
inc
gs
cli
int
ja
and
ja
outs
in
icebp
neg
add
test
xchg
neg
add
mov
jnp
neg
add
test
jge
sbb
(bad)
jns
xchg
sbb
out
lock
call
sbb
repnz
jo
sub
push
or
(bad)
cli
lods
xchg
xchg
and
imul
test
scas
adc
cmps
bound
xor
jmp
data16
sub
push
or
(bad)
clc
cli
ins
cmps
jns
scas
jnp
neg
add
and
repnz
test
jo
sub
xchg
and
cli
lods
mov
xchg
and
cwde
or
(bad)
adc
retf
add
or
cmps
lock
es
cld
jns
add
mov
cmps
xchg
mov
add
neg
add
in
ja
mov
(bad)
jns
rcr
mov
mov
inc
jge
and
mov
add
sbb
jge
mov
jns
aam
lock
xchg
stos
cmp
jbe
inc
(bad)
jns
mov
add
cmps
jp
neg
scas
adc
mov
xchg
fsubr
inc
or
(bad)
jns
data16
sub
outs
or
(bad)
cli
mov
add
add
(bad)
jns
cmps
sahf
xchg
fsubr
(bad)
neg
add
mov
jne
div
dec
fbstp
and
ja
mov
jns
cmps
and
cli
mov
add
les
(bad)
jns
sahf
xchg
xchg
fdivr
jbe
jecxz
jns
scas
jnp
neg
add
not
push
push
cli
fadd
cli
int
ja
dec
stos
inc
and
fiadd
clc
retf
jns
mov
add
cmps
jno
or
cmp
stc
fadd
xchg
and
jns
daa
add
mov
cmps
add
push
ret
mov
xchg
fsubr
jns
out
hlt
test
add
dec
mov
pop
lock
add
adc
inc
imul
add
and
std
or
add
pusha
and
cli
int
xchg
jge
cmps
add
push
ret
mov
xchg
fsubr
jns
out
clc
cli
pop
mov
std
neg
add
and
mov
add
pop
sub
inc
ja
push
fadd
xchg
fadd
xchg
fadd
cld
mov
mov
jne
lods
fadd
xchg
into
xchg
jne
xchg
fadd
xchg
into
xchg
add
in
add
neg
(bad)
cld
in
add
neg
jge
stc
fadd
xchg
push
stc
mov
mul
inc
pop
or
dec
neg
add
retf
xchg
neg
add
adc
das
add
add
das
jne
(bad)
add
pop
sub
fstp
add
mov
add
div
repnz
add
div
repnz
add
div
lock
es
cdq
neg
add
adc
das
add
(bad)
push
jmp
popa
cmps
dec
cmp
dec
imul
(bad)
jns
inc
ja
or
(bad)
jns
iret
jmp
in
popf
xor
push
mov
(bad)
inc
and
mov
or
jg
in
jmp
jns
dec
cmps
jnp
and
jb
and
cli
int
push
or
fadd
cli
xor
dec
cmp
and
cmp
fadd
xchg
enter
ret
(bad)
jns
and
jmp
in
movs
adc
jns
pop
and
not
add
jl
adc
xchg
fadd
es
js
repnz
rcr
jns
jmp
pop
je
outs
add
lock
fbstp
popa
mov
(bad)
adc
dec
lahf
pop
dec
and
ins
and
lock
je
sahf
push
(bad)
es
lock
mov
jne
add
ja
or
ja
mul
mov
dec
and
mov
cli
jmp
stc
and
lock
mov
(bad)
jns
push
(bad)
out
and
cli
sub
outs
cmp
and
jl
mov
(bad)
jns
es
jns
and
dec
test
mov
cmp
sub
pop
or
inc
(bad)
jns
lods
lea
and
pop
mov
repz
xchg
(bad)
(bad)
cmp
inc
cld
jns
fdivr
or
leave
mov
xor
pushw
js
sbb
or
sar
jle
adc
inc
push
cmps
sar
and
jl
mov
repz
mov
(bad)
out
and
out
and
inc
ja
std
stos
cmp
mul
(bad)
out
and
or
inc
or
sti
popa
xchg
(bad)
(bad)
imul
std
jns
mov
(bad)
stc
add
popa
cmp
xor
nop
(bad)
(bad)
fistp
mov
jns
adc
xchg
aad
popa
xchg
(bad)
(bad)
jge
and
mov
or
(bad)
stc
add
popa
cmp
daa
pop
jbe
fadd
(bad)
or
popa
cmp
sub
cwde
or
(bad)
clc
iret
inc
popf
jns
mov
(bad)
jno
arpl
or
pop
call
popa
cmp
and
int3
or
(bad)
lock
or
lock
mov
(bad)
js
es
dec
and
jns
and
into
neg
add
or
mov
jecxz
lock
(bad)
clc
out
icebp
jns
mov
(bad)
jnp
es
jns
and
repnz
add
or
sti
inc
xchg
(bad)
(bad)
lock
and
lock
mov
(bad)
cmp
daa
(bad)
jns
adc
dec
and
jl
mov
xchg
jns
aam
lock
shl
mov
out
dec
and
jns
iret
arpl
or
(bad)
out
and
mov
and
fmul
mov
jmp
or
(bad)
fsub
mov
(bad)
out
and
xlat
or
inc
or
(bad)
jnp
mov
push
push
stc
stos
cmp
or
popa
cmp
and
repz
dec
retf
or
jle
adc
xor
and
lock
stos
jae
cmp
sub
jl
cmp
fcomi
push
push
(bad)
cld
cdq
fwait
mov
jns
pop
mov
jns
sbb
pop
mov
dec
cmp
mov
(bad)
cmp
adc
jl
xchg
mov
xchg
xchg
(bad)
(bad)
js
sbb
or
fadd
or
cmp
add
popa
cmp
arpl
sub
and
clc
dec
sti
or
or
popa
cmp
arpl
std
int
(bad)
jns
jmp
repz
ja
and
ja
push
xchg
sti
or
and
jns
add
es
dec
and
push
stos
mov
xor
jns
sub
lock
(bad)
stc
je
mov
jno
arpl
clc
out
mov
cmp
push
jle
or
mov
addr16
and
jno
arpl
cli
xor
cmp
and
jns
jno
add
and
imul
dec
and
xchg
dec
mov
(bad)
add
popa
cmp
mov
ja
sub
repz
icebp
iret
or
arpl
or
add
je
sti
or
mov
stc
cli
or
outs
cmp
daa
ja
and
ja
mov
bnd
adc
bnd
and
inc
or
(bad)
jl
mov
jns
clc
jg
push
add
bnd
adc
bnd
and
inc
or
(bad)
jl
mov
jns
clc
add
mov
mov
or
cmp
aaa
mov
pop
jne
mov
mov
lock
fbstp
mul
mov
dec
and
xchg
jg
(bad)
jns
in
push
popa
(bad)
cs
mov
(bad)
xchg
push
mov
(bad)
cs
mov
out
and
add
dec
and
inc
mov
(bad)
cs
mov
in
and
cs
mov
out
and
cs
mov
(bad)
mov
lock
mov
test
pop
cmp
mov
jge
mov
cmp
scas
mov
and
dec
retf
out
or
ja
or
ja
mov
jns
push
lock
sar
cmp
arpl
jns
mov
(bad)
cli
ins
(bad)
cli
ins
(bad)
xchg
dec
cmp
mov
es
shr
(bad)
mov
or
cmp
fwait
cwde
pop
or
or
retf
or
dec
ret
add
mov
jnp
and
shl
jns
shl
stos
cmp
jns
and
mov
jae
mov
mov
or
pop
hlt
dec
retf
scas
adc
and
jns
data16
div
or
dec
and
cmp
ja
test
sub
jae
lods
jae
jns
and
in
retf
bound
or
jae
test
scas
mov
xchg
stos
inc
(bad)
jns
es
dec
and
or
adc
(bad)
push
add
inc
ret
jns
shl
stos
cmp
xchg
push
and
xchg
dec
cmp
scas
mov
leave
test
sub
ss
dec
and
in
enter
xchg
jns
jl
and
loopne
lock
mov
add
mov
dec
fbstp
in
stos
mov
lock
push
cmc
test
jne
pushw
repnz
xor
icebp
mov
sub
pop
iret
ja
loope
cli
adc
dec
push
dec
fld
xchg
jns
data16
arpl
add
fsubr
dec
xchg
(bad)
(bad)
repnz
xlat
adc
push
retf
pushf
pop
je
jle
cmp
lock
or
lock
fdivr
or
jl
xchg
xchg
ss
out
and
jae
dec
and
mov
jbe
pushf
mov
repnz
jne
add
mov
dec
and
xchg
xchg
cli
inc
xor
(bad)
jns
push
retf
addr16
js
fdivr
jns
push
(bad)
jbe
addr16
jnp
fdivr
jns
push
loop
mov
fdivr
jns
push
out
jbe
addr16
jge
fdivr
jns
sub
jae
and
repnz
xor
or
je
aaa
stos
jmp
xchg
mov
jl
lahf
mov
inc
xor
icebp
cld
sahf
and
jns
fnstenv
retf
sub
icebp
or
(bad)
lock
jmp
fnstcw
or
ins
pop
sbb
stos
push
cli
loope
icebp
iret
or
and
or
sub
cmp
dec
ds
daa
sti
adc
jp
jns
sub
sub
dec
sub
test
jmp
mov
(bad)
sub
mov
cmp
mov
out
hlt
pop
xor
js
mov
std
cmp
mov
or
dec
xor
or
inc
pop
xlat
ja
or
(bad)
jns
enter
add
leave
aaa
jle
or
inc
cmp
and
js
adc
xchg
fdivr
or
xor
stos
push
xor
push
cld
stc
xor
stos
push
cli
loope
jle
(bad)
mov
jge
or
pop
xchg
or
or
mov
fstp
or
ret
push
call
imul
ja
sbb
(bad)
jns
mov
fwait
lock
imul
and
xchg
or
scas
lock
mov
clc
jnp
gs
mov
cli
jbe
daa
clc
inc
loope
(bad)
jns
and
nop
or
dec
mov
out
hlt
pop
xor
js
mov
jmp
dec
(bad)
sbb
push
cli
loope
jne
icebp
stos
jmp
pop
sar
ja
inc
mov
mov
icebp
mov
clc
js
sbb
std
stc
xor
stos
push
cli
loope
icebp
iret
or
sub
dec
or
mov
mov
test
jl
fnstcw
or
and
jns
mov
(bad)
jbe
xchg
add
shl
lock
mov
test
cmp
test
jno
aas
iret
xchg
and
inc
aaa
and
xchg
or
dec
clc
mov
dec
sbb
cmp
push
push
jp
and
mov
or
(bad)
cli
iret
sub
jl
xchg
mov
imul
ss
dec
and
mov
pop
retf
jp
neg
cmps
xchg
dec
cmp
sub
jge
push
push
jns
and
jns
push
fdivrp
ins
(bad)
xchg
pop
stos
es
fbstp
stos
jmp
mov
jns
data16
loope
fpatan
or
scas
mov
lock
(bad)
or
xlat
test
or
ja
std
scas
mov
lea
mov
jns
fdivr
or
sar
mov
or
jmp
dec
fstp
jge
retf
pop
and
icebp
stos
out
xchg
dec
cmp
mov
jae
pop
jmp
dec
fstp
jle
stos
cli
inc
or
(bad)
jns
jne
iret
pop
xor
fwait
or
retf
lahf
mov
xchg
mov
movs
mov
jbe
pushf
mov
fstp
retf
xor
or
lods
das
pop
retf
and
jmp
and
and
jns
and
push
in
call
or
cli
or
dec
cmp
and
(bad)
jmp
jbe
cmps
or
inc
or
inc
cmp
and
cmps
neg
dec
cli
int3
add
mov
(bad)
jnp
and
mov
fadd
lock
mov
xchg
dec
xor
test
repz
mov
(bad)
sub
mov
rcl
fadd
lock
and
iret
pushf
rcl
xchg
dec
xor
test
repz
mov
(bad)
sub
sar
pushf
xchg
xchg
fmul
ins
pop
mov
cmps
jns
test
fst
fadd
lock
and
cli
int3
add
cli
int3
add
xor
and
jbe
outs
add
out
add
xchg
imul
and
sbb
outs
cmp
and
std
xchg
daa
(bad)
jns
xchg
imul
and
sbb
cmp
stos
imul
push
dec
cmp
mov
add
cmps
imul
fadd
lock
and
mov
mul
xchg
stos
sub
call
mov
xchg
neg
iret
xchg
add
sub
mov
cli
jmp
aas
lahf
or
add
sbb
inc
xlat
adc
mov
push
es
and
xchg
dec
cmp
mov
add
scas
(bad)
jns
dec
add
in
add
neg
push
jbe
fadd
cli
int
ja
cmc
sub
or
xlat
fadd
jns
mov
adc
mov
jmp
std
sub
test
ret
mov
cli
inc
mov
fmul
jns
and
or
mov
dec
push
stos
es
xor
jns
cmps
jle
neg
adc
imul
sar
jns
xchg
add
fsub
xchg
and
js
test
cmc
xlat
fadd
push
neg
(bad)
jns
cmps
adc
push
fadd
xchg
es
dec
and
int3
sar
add
or
mov
iret
pushf
rcl
xchg
loop
jnp
aaa
jmp
cwde
arpl
lock
xlat
adc
out
add
mov
xchg
neg
aas
fwait
or
aas
cwde
or
mov
sub
lock
push
cmps
neg
jne
std
int3
add
shl
pop
jnp
ret
inc
(bad)
mov
sub
xchg
inc
(bad)
out
add
and
or
popa
(bad)
stc
mov
and
popa
jge
cmp
retf
push
das
or
ja
test
loope
ins
or
(bad)
jns
stos
imul
fadd
cli
retf
pop
std
jnp
cmps
cmps
neg
jne
test
mov
cmps
neg
jge
adc
mov
xchg
test
(bad)
fadd
repnz
mov
xchg
and
lock
jnp
(bad)
fadd
repnz
and
(bad)
fadd
adc
fadd
sub
xchg
and
pop
and
repnz
and
(bad)
fadd
or
test
mov
mov
jnp
(bad)
fadd
stc
mov
and
popa
and
jg
dec
(bad)
repnz
xchg
and
pop
test
rcl
add
add
(bad)
jns
mov
cmps
neg
adc
int
and
iret
pushf
rcl
xchg
loop
jnp
scas
and
(bad)
add
pushf
arpl
jbe
mov
xchg
neg
aas
fwait
or
mov
xchg
neg
xchg
jns
and
sub
push
test
or
add
sub
sbb
and
stc
je
(bad)
jbe
sbb
jns
test
(bad)
out
add
and
nop
or
dec
or
inc
or
(bad)
nop
adc
(bad)
jns
cmps
or
or
(bad)
jns
mov
cld
jge
cmps
sbb
stos
std
add
(bad)
fadd
jl
xchg
sbb
inc
mov
ja
mov
cld
stc
xor
mov
sar
or
ja
mov
cli
stc
xor
mov
sar
or
(bad)
jns
sub
or
mov
fdivr
fwait
or
add
neg
push
and
dec
test
dec
or
(bad)
jns
retf
add
dec
adc
lock
and
dec
icebp
repnz
adc
stc
test
(bad)
cld
add
stos
std
add
stos
std
add
mov
pop
mov
or
(bad)
jns
push
(bad)
stc
xor
and
or
mov
(bad)
jns
push
jmp
and
or
mov
(bad)
jns
push
std
ds
icebp
iret
mov
ds
lods
mov
loop
mov
fsubr
xchg
fmul
(bad)
fadd
xchg
jg
add
mov
and
mov
(bad)
repnz
xlat
adc
cmp
nop
or
pop
jnp
outs
add
lea
push
cmps
neg
ja
sbb
jnp
out
add
mov
adc
or
xchg
dec
cmp
retf
neg
jle
cli
int3
add
cli
int3
add
xor
and
jbe
or
xchg
jl
and
loopne
lock
mov
test
cmp
(bad)
cwde
sub
(bad)
jns
add
pop
sbb
cmp
inc
cmp
call
and
dec
out
ja
rcl
mov
data16
dec
(bad)
shr
inc
push
and
jns
xchg
fsubr
inc
push
and
jns
xchg
icebp
les
mov
mov
repnz
(bad)
or
ja
icebp
in
xchg
enter
sub
sub
sbb
stc
dec
fdivr
xchg
add
add
fdivrp
nop
test
and
iret
pop
faddp
cmp
test
(bad)
jns
pushw
dec
(bad)
stc
dec
fdivr
jbe
pusha
inc
(bad)
jns
inc
icebp
iret
dec
and
mov
icebp
arpl
js
xchg
mov
fwait
push
mov
jge
or
idiv
icebp
arpl
js
xchg
mov
mov
push
mov
jle
mul
jne
icebp
stos
cmp
retf
stos
stos
add
jecxz
jns
push
jle
or
mov
add
xchg
std
inc
(bad)
and
jns
sub
cmp
sbb
jge
add
pop
add
mov
cmp
and
iret
pop
ffreep
cmp
mov
js
sub
cmc
and
cmc
and
popf
mov
ror
jbe
and
cli
or
dec
sub
cmp
jl
and
loopne
lock
jo
adc
mov
enter
and
das
arpl
push
jle
and
lock
mov
ret
push
pop
lock
enter
sbb
mov
jg
mov
ja
cmp
ja
push
jge
and
jbe
pushf
mov
fidivr
retf
fisubr
or
test
mov
nop
data16
jnp
(bad)
fadd
lock
or
lock
scas
mov
fmul
cdq
neg
scas
xchg
pop
jne
jns
cmps
(bad)
cdq
neg
scas
xchg
push
and
jns
out
lock
adc
lock
adc
es
jmp
lahf
cmp
mov
fs
and
add
xchg
xchg
jo
jns
jle
sub
(bad)
jge
add
mov
xor
or
jns
and
popa
and
jns
fmul
jns
stos
cmp
neg
mov
pop
bnd
and
fidivr
fisttp
sahf
and
into
adc
xchg
pop
dec
(bad)
das
loope
scas
jns
stos
cmp
adc
cmp
or
ja
cmc
mov
(bad)
adc
mov
div
dec
das
ja
std
enter
(bad)
std
fmul
test
sub
and
jns
data16
icebp
stos
cmp
push
js
mov
pop
jne
(bad)
ds
inc
popa
mov
cli
adc
dec
(bad)
adc
and
mov
jae
(bad)
jns
in
mov
mov
add
dec
cld
adc
dec
(bad)
das
loope
scas
jns
test
jne
loop
mov
arpl
or
mov
test
sub
mov
retf
xor
or
xchg
jns
data16
arpl
xchg
mov
popa
(bad)
das
loope
scas
jns
mov
(bad)
das
loope
scas
jns
fwait
(bad)
jns
and
sub
(bad)
jge
add
cs
ins
mov
mov
lock
(bad)
arpl
xchg
stc
or
(bad)
adc
dec
(bad)
jns
jecxz
or
retf
push
sub
and
sbb
sahf
and
into
mov
iret
mov
arpl
xchg
jns
retf
sbb
or
xchg
jns
data16
not
xchg
xchg
aaa
jb
jns
fcmovnbe
add
jecxz
es
jmp
pop
je
or
in
test
inc
je
mov
imul
and
dec
shr
dec
jge
and
add
add
and
add
(bad)
clc
jl
push
cmp
and
xchg
arpl
jns
out
dec
ror
in
jbe
daa
loopne
popa
push
push
cmp
retf
stos
sub
and
add
and
pop
push
dec
test
stc
xor
in
inc
daa
lds
or
cmp
retf
shr
or
jge
add
(bad)
mov
push
js
mov
pop
jne
repnz
sub
add
xor
push
mov
mov
xor
mov
jns
jp
xchg
xor
iret
or
ret
mov
jns
mov
or
loopne
fcomp
pop
and
and
and
pop
fbld
sub
(bad)
jge
and
mov
es
stos
cmp
js
mov
fwait
xchg
or
or
and
or
dec
or
or
retf
imul
data16
or
mov
xchg
es
adc
or
or
retf
cmp
sub
cmp
pop
and
jnp
daa
jge
in
jg
test
(bad)
jns
dec
add
pop
add
call
dec
cmp
stos
mov
xchg
out
sub
mov
jl
mov
push
stc
je
cld
or
mov
xchg
xchg
mov
sub
rcl
sbb
mov
mov
sub
imul
xchg
mov
push
xchg
stos
fwait
push
mov
dec
(bad)
ja
or
ja
sub
ror
xchg
push
xchg
mov
inc
ja
frstor
mov
jbe
arpl
repnz
sub
into
pop
and
stos
fwait
push
mov
dec
(bad)
jne
add
test
jno
xchg
lods
jno
repz
cmp
test
popf
loop
ja
or
ja
push
jge
mov
inc
outs
jmp
or
mov
test
jmp
jmp
daa
mov
jmp
cdq
mov
cmp
arpl
cdq
mov
cmp
arpl
cdq
mov
inc
shl
and
cdq
mov
ror
mov
cwde
dec
and
dec
sub
ds
adc
adc
jmp
leave
daa
outs
jmp
cdq
mov
or
mov
jmp
cdq
mov
push
loopne
out
test
loopne
jmp
outs
retf
(bad)
jns
and
jmp
or
(bad)
jmp
cdq
mov
xor
jae
jmp
cdq
mov
jmp
cdq
mov
mov
mov
jmp
cdq
mov
mov
mov
(bad)
jmp
cdq
mov
jmp
cdq
mov
nop
mov
xor
jns
cmp
and
xchg
mov
jns
sub
outs
jmp
or
mov
jmp
cdq
mov
jmp
cdq
mov
or
cdq
cwde
jp
dec
and
shl
aas
jmp
(bad)
outs
jmp
shl
jmp
cdq
mov
jmp
cdq
mov
(bad)
jno
jmp
jmp
icebp
mov
jmp
cdq
mov
ror
mov
jns
mov
or
cdq
cwde
cs
dec
and
shl
aas
jmp
(bad)
outs
jmp
shl
jmp
cdq
mov
jmp
cdq
mov
(bad)
dec
sub
into
jmp
icebp
mov
jmp
cdq
mov
sbb
inc
pop
inc
sbb
add
mov
out
pop
je
and
test
jne
stos
mov
xchg
dec
sbb
ja
or
ja
cmc
adc
pop
into
pushw
jns
retf
or
ja
or
scas
xchg
xchg
aam
xchg
cmp
pop
fdivr
repnz
jns
or
sub
(bad)
lock
iret
inc
xchg
inc
push
and
jns
xchg
stos
add
pop
lock
nop
aam
lock
stos
stos
xor
fwait
test
fbstp
pop
mov
sbb
stos
es
arpl
iret
sbb
xor
or
sbb
jge
push
sbb
or
mov
sti
dec
push
xchg
mov
and
jbe
mov
enter
adc
dec
outs
jns
and
sti
jae
(bad)
inc
and
jbe
add
sti
dec
push
xchg
stos
or
scas
xchg
sub
arpl
ja
or
scas
xchg
jae
(bad)
jns
out
cli
iret
and
(bad)
jns
inc
add
sub
cmp
imul
push
mov
mov
sub
(bad)
jge
and
loop
stos
adc
(bad)
xchg
ins
(bad)
jns
cs
jp
jb
mov
enter
lock
mov
repz
lock
stos
stos
xchg
mov
cmp
dec
and
or
adc
nop
dec
and
jns
pushw
sub
push
not
mov
div
iret
sub
jbe
or
jns
sub
add
loop
jnp
aaa
ret
aad
popa
(bad)
push
sbb
and
inc
stos
adc
loop
jnp
pop
ret
shl
ret
mov
loope
mov
or
adc
stos
push
jp
out
cmp
and
xor
and
adc
ja
cmc
enter
dec
lea
stos
push
jp
fbstp
fstp
jge
cmc
daa
pop
mov
popa
(bad)
jp
out
inc
cmp
sbb
lods
mov
(bad)
lock
fist
jns
aam
lock
push
adc
cmp
test
movs
mov
dec
mov
sub
dec
and
jl
sahf
mov
or
retf
xchg
xor
and
aad
call
sub
xchg
loop
imul
sahf
mov
dec
or
push
cmp
lock
sti
push
inc
inc
and
bnd
icebp
into
imul
aas
fwait
sbb
sub
xor
inc
cmp
dec
mov
jns
sar
jl
sahf
mov
xor
add
and
std
enter
(bad)
int3
jns
stos
push
jp
xlat
jne
fstp
jge
std
daa
pop
mov
popa
(bad)
jp
out
inc
cmp
sbb
lods
mov
(bad)
lock
rcl
cmp
test
movs
mov
dec
mov
sub
dec
and
jl
sahf
mov
or
stos
or
out
cmp
sub
sub
repnz
sbb
and
fstp
(bad)
lock
and
mov
mov
test
in
in
sahf
mov
les
ja
xor
(bad)
stc
je
dec
sub
cmp
jae
mov
es
dec
and
xchg
dec
(bad)
adc
dec
(bad)
adc
dec
(bad)
jns
arpl
or
retf
div
or
ja
in
mov
(bad)
adc
scas
mov
cdq
pop
fmul
jns
fmul
jns
jne
mov
leave
arpl
jns
aam
lock
div
push
jge
mov
jbe
pushf
mov
out
or
lods
das
pop
popf
and
inc
(bad)
jo
dec
hlt
fadd
lock
mov
(bad)
ror
and
hlt
adc
and
or
cmp
mov
mov
sbb
mov
push
loop
data16
ja
push
stos
cmp
into
bound
xor
adc
jns
sub
add
cdq
sub
lock
repz
adc
xor
fnstcw
mov
popf
push
add
mul
je
neg
test
in
jle
fadd
jns
jbe
jns
stos
cmp
retf
and
xchg
fmul
mov
not
jg
pop
jp
jns
cmps
add
cdq
cmp
scas
jnp
hlt
fadd
sub
push
mov
or
adc
dec
cld
adc
dec
(bad)
adc
and
cmp
scas
xchg
(bad)
and
or
fwait
jbe
dec
and
jns
and
stc
fiadd
xchg
jmp
and
xchg
into
xor
and
or
ja
not
push
mov
or
dec
cmp
jo
movs
(bad)
popa
(bad)
hlt
mov
add
inc
and
hlt
mov
add
(bad)
popa
(bad)
hlt
mov
add
or
jle
pop
and
jns
mov
sbb
mov
add
or
dec
cmp
dec
cmp
mov
popa
(bad)
hlt
mov
add
or
jle
sub
(bad)
jns
dec
xchg
cmps
dec
and
adc
and
stc
loope
(bad)
jns
mov
mov
daa
push
jmp
add
push
jmp
fcmovnbe
add
fisttp
sahf
and
into
mov
mov
test
(bad)
adc
and
jns
and
add
add
cli
rcr
stc
xor
stos
mov
das
arpl
xchg
jns
push
out
xchg
push
inc
and
clc
out
(bad)
jns
fmul
jns
jl
and
loopne
lock
je
out
inc
scas
clc
out
mov
ins
loope
mov
sub
push
jmp
fmul
jns
mov
cmp
cs
ret
stos
push
mov
stos
mov
jge
daa
jae
sbb
fmul
xchg
mov
jns
out
es
lock
jb
cs
test
dec
icebp
stos
cmp
dec
fld
adc
dec
clc
jns
and
not
xchg
and
(bad)
jo
push
cli
dec
leave
enter
cmp
or
fmul
or
fmul
jns
sub
or
loope
mov
or
ds
sbb
cmp
inc
and
dec
leave
arpl
pushf
mov
out
das
pop
test
ins
and
and
mov
aaa
pop
mov
mov
jg
stos
push
dec
icebp
stos
cmp
dec
fild
jns
and
or
fmul
jns
sub
or
aaa
scas
mov
jns
and
or
fmul
jns
sub
or
loope
mov
xchg
adc
mov
or
cmp
enter
xor
jns
les
stc
stos
cmp
push
jmp
pop
je
fild
out
into
gs
jns
mov
(bad)
jns
add
jle
and
sub
cmp
sbb
add
fisttp
xchg
dec
dec
(bad)
adc
and
jns
and
(bad)
popa
(bad)
xchg
push
gs
jns
fild
cmp
mov
(bad)
jo
push
cli
dec
leave
enter
fild
cmp
retf
mov
or
ja
cmc
enter
(bad)
in
or
retf
push
nop
xor
and
ja
and
test
lahf
cmps
dec
and
add
stos
lock
jb
das
pop
test
jno
jle
mov
adc
cmp
retf
stos
stos
test
pop
shl
and
and
sub
push
out
xchg
push
fs
jns
out
lock
or
repnz
xor
jge
and
mov
cld
xchg
pusha
mov
(bad)
jns
mov
cmp
push
(bad)
xor
stos
push
xor
xor
sbb
(bad)
jns
data16
sub
(bad)
lock
dec
adc
mov
or
ja
mov
sti
outs
and
jo
push
jecxz
stc
and
sub
push
out
xchg
ja
(bad)
jns
data16
retf
or
pop
fbstp
or
adc
daa
push
jmp
sbb
jle
mov
and
jns
jo
sub
(bad)
lock
(bad)
fadd
jge
add
loope
mov
lea
aad
outs
push
xchg
cli
dec
mov
(bad)
jo
push
hlt
jbe
daa
int
stc
push
jbe
cmp
or
push
sbb
fs
inc
or
cwde
mov
loop
icebp
into
je
icebp
iret
xor
cmp
jns
mov
jge
push
cmp
jns
cdq
mov
int
or
pop
iret
ja
mov
lahf
sbb
popa
jns
cmp
je
add
(bad)
cli
int
cwde
xchg
into
dec
ffree
cmp
push
push
repnz
xlat
mov
sub
mov
and
xchg
ja
(bad)
jns
jne
mov
cli
cli
lods
xlat
add
in
add
neg
add
not
xchg
xchg
rol
xchg
stos
push
js
stos
cmp
push
stc
dec
leave
retf
or
jge
icebp
fadd
xchg
push
repz
mov
sbb
(bad)
jns
push
jmp
cmps
es
fadd
or
dec
imul
add
mov
add
fiadd
dec
xor
lds
and
jns
je
cmp
jbe
jns
stos
jnp
neg
add
iret
test
jns
fmul
jns
retf
inc
cmp
and
and
ja
and
mov
add
fdivr
or
stos
cmp
add
add
jno
push
(bad)
fadd
cli
int
xchg
sub
popa
inc
dec
and
cli
int
xchg
aaa
(bad)
popa
inc
test
cmp
and
add
(bad)
cmp
and
or
(bad)
loopne
fidivr
or
in
adc
ret
mov
xchg
fcom
cs
and
cli
int
ja
cmp
ja
loope
mov
jns
and
lock
push
or
shr
jns
aam
sub
fsubr
jns
retf
push
cmp
sbb
es
or
(bad)
loopne
fidivr
or
in
adc
ret
mov
xchg
fcom
mov
(bad)
cli
int
xchg
dec
(bad)
popa
inc
test
cmp
add
pop
cmp
or
(bad)
loopne
fidivr
or
in
adc
ret
mov
xchg
fcom
(bad)
dec
and
cli
int
push
add
inc
add
(bad)
jns
aam
cli
repz
mov
jns
and
lock
(bad)
cmc
fadd
xchg
shl
addr16
jns
out
xchg
imul
(bad)
repnz
add
(bad)
popa
(bad)
sub
push
jns
mov
cmp
or
push
pop
dec
and
rol
(bad)
jns
aam
cli
repz
push
cmp
fmul
neg
add
mov
not
add
mov
xchg
fcom
push
dec
and
cli
int
push
xchg
dec
and
rol
(bad)
jns
aam
cli
repz
push
cmp
fmul
neg
add
mov
not
or
mov
xchg
fcom
mov
(bad)
cli
int
push
retf
inc
add
(bad)
jns
aam
cli
repz
mov
jns
and
lock
(bad)
cmc
fadd
xchg
shl
pusha
(bad)
jns
out
sar
inc
ja
(bad)
xchg
and
shl
(bad)
jns
aam
sub
and
or
add
loope
mov
cmps
neg
add
not
repnz
add
xlat
popa
(bad)
sub
jb
jns
mov
mov
jns
and
lock
push
dec
and
shr
jns
aam
sub
fsubr
jns
retf
loop
or
jge
sbb
jnp
neg
add
iret
retf
push
cmp
and
or
(bad)
loopne
fidivr
or
in
adc
ret
mov
xchg
fcom
jbe
and
cli
int
push
mov
and
rol
(bad)
jns
aam
cli
repz
and
or
dec
test
fld
xchg
jecxz
(bad)
jns
out
xchg
scas
popa
(bad)
jns
sub
jns
mov
sti
add
dec
push
cdq
dec
and
int3
cmc
fadd
xchg
out
jns
mov
iret
mov
popa
inc
cmc
fadd
xchg
cmps
dec
and
jns
out
xchg
push
popa
(bad)
jns
sub
jns
mov
sti
add
dec
xor
int3
cmc
fadd
xchg
pop
mov
jno
sbb
or
addr16
mov
xchg
mov
popa
inc
test
cmp
and
add
jmp
and
loopne
fidivr
or
fst
mov
(bad)
jns
mov
inc
test
fld
cs
sbb
push
xchg
(bad)
cli
int
jge
sub
icebp
std
lea
(bad)
jns
xchg
xchg
fdivr
nop
inc
and
jns
cmps
(bad)
jns
fdivr
clc
out
lea
mov
add
pop
jne
int
add
hlt
fadd
cld
icebp
fadd
xchg
jne
int
add
hlt
fdiv
iret
xor
cmp
jns
mov
lahf
sub
and
ret
inc
iret
cmp
inc
aas
xchg
or
add
fisub
inc
jns
fadd
cs
jns
cmp
scas
inc
jns
fadd
cs
mov
ins
mov
stos
jns
aam
lock
cmp
mul
add
or
(bad)
jbe
push
add
neg
add
or
add
neg
add
popa
inc
and
or
dec
and
cli
int
push
xchg
inc
add
(bad)
jns
aam
cli
repz
and
or
dec
test
fld
xchg
pop
(bad)
(bad)
jns
out
xchg
shl
jns
sub
jns
mov
sti
add
dec
xor
int3
cmc
fadd
xchg
fidivr
jno
ror
mov
and
rol
(bad)
jns
aam
cli
repz
push
cmp
fmul
neg
add
mov
idiv
mov
add
fdivr
neg
add
mov
add
neg
add
mov
jnp
neg
add
stc
aam
lock
add
and
jns
data16
mov
add
or
jle
or
add
or
(bad)
lock
adc
lock
test
gs
ss
sbb
neg
add
gs
jns
test
xor
iret
add
jp
cmp
scas
jnp
neg
add
loope
mov
jne
scas
or
mul
inc
or
mov
mov
add
stos
cmp
mov
inc
mov
add
fadd
xchg
fiadd
and
std
fadd
xchg
dec
xor
stos
jnp
neg
add
neg
mov
xchg
push
xchg
fdiv
cmc
fadd
xchg
call
sbb
jns
out
xchg
(bad)
sbb
jns
sub
jns
mov
sti
add
dec
mov
int3
cmc
fadd
xchg
xchg
jns
mov
dec
ss
rol
(bad)
jns
aam
cli
repz
and
or
dec
test
fld
xchg
jae
(bad)
jns
out
xchg
aas
sbb
jns
sub
jns
mov
sti
add
dec
push
cdq
dec
and
int3
cmc
fadd
xchg
jbe
jns
mov
push
xchg
fcom
mov
iret
(bad)
call
(bad)
neg
add
mov
inc
icebp
fadd
xchg
(bad)
mov
fdivr
add
fld
jo
sub
jmp
mov
xchg
fcom
jle
and
cli
int
push
mov
add
(bad)
jns
aam
cli
repz
and
or
dec
test
fld
xchg
jmp
(bad)
jns
out
xchg
xchg
sbb
(bad)
jns
mov
sti
add
dec
xor
int3
cmc
fadd
xchg
sahf
sar
cmp
ror
lahf
and
mov
or
addr16
mov
xchg
mov
popa
inc
test
inc
or
jge
add
cmps
dec
and
int3
cmc
fadd
xchg
pop
sar
cmp
push
sar
hlt
jns
and
lock
push
pop
aaa
and
shr
jns
aam
sub
fsubr
jns
retf
fiadd
and
sbb
inc
and
or
(bad)
loopne
fidivr
or
in
adc
jns
xchg
add
aaa
and
cli
int
jg
adc
(bad)
jns
test
or
addr16
mov
xchg
mov
popa
inc
test
inc
or
jge
add
dec
inc
or
inc
jae
and
loopne
fidivr
or
in
adc
ret
mov
xchg
fcom
mov
and
cli
int
push
repnz
inc
add
(bad)
jns
aam
cli
repz
ret
jns
call
lock
(bad)
cmc
fadd
xchg
shl
push
(bad)
jns
out
adc
std
mov
xchg
fcom
(bad)
xor
(bad)
cli
int
ja
and
ja
loope
ret
jns
call
lock
xchg
mov
popa
inc
test
inc
or
jge
add
cmps
dec
and
int3
cmc
fadd
xchg
push
jns
mov
ret
jns
call
lock
xchg
mov
popa
inc
test
inc
or
jge
add
cmps
dec
and
int3
cmc
fadd
xchg
xor
jns
mov
clc
outs
or
push
mov
add
(bad)
jns
aam
cli
repz
push
cmp
fmul
neg
add
mov
div
mov
add
fadd
xchg
cld
cmps
dec
and
jns
out
xchg
(bad)
pop
(bad)
jns
sub
jns
mov
sti
add
dec
push
cdq
dec
and
int3
cmc
fadd
xchg
xchg
jns
mov
and
or
dec
test
fld
xchg
fwait
pop
(bad)
jns
out
xchg
inc
pop
(bad)
jns
sub
jns
mov
sti
add
dec
push
cdq
dec
and
int3
cmc
fadd
xchg
dec
ret
mov
test
aam
lock
add
pop
(bad)
jns
retf
std
jns
mov
jg
sbb
jns
test
test
fld
cs
retf
and
or
xor
xor
xchg
xor
inc
add
(bad)
jns
aam
cli
repz
push
cmp
fmul
neg
add
mov
not
xlat
(bad)
mov
xchg
fcom
xor
(bad)
cli
int
push
into
xor
inc
add
(bad)
jns
aam
cli
repz
push
cmp
fmul
neg
add
mov
idiv
call
jns
retf
jb
or
inc
jae
and
loopne
fidivr
or
fst
mov
(bad)
jns
mov
inc
test
fld
cs
sbb
push
push
xor
(bad)
cli
int
xchg
test
mov
retf
jbe
or
jge
add
adc
dec
cld
adc
dec
(bad)
adc
and
cmp
push
not
and
mov
not
push
(bad)
xor
(bad)
adc
scas
inc
(bad)
neg
add
pop
fmul
neg
add
test
inc
or
add
loope
add
or
dec
test
fld
xchg
stos
adc
jns
sar
mov
adc
jns
cmps
adc
push
jmp
add
(bad)
jns
pushf
mov
add
ja
inc
ja
icebp
fld
xchg
and
xchg
jne
dec
and
neg
add
or
ja
cmp
ja
arpl
xchg
call
popa
(bad)
hlt
mov
add
or
jle
(bad)
rol
xchg
fdivr
repz
fadd
jl
popf
xchg
jns
sbb
cmp
dec
mov
dec
and
xchg
fcmovbe
add
or
movs
dec
and
adc
and
stc
loope
push
xchg
mov
mov
mov
jbe
pushf
mov
push
or
lods
das
pop
pushf
push
jne
push
ja
cmp
ja
mov
(bad)
repnz
sub
or
mov
mov
mov
js
and
lock
push
push
icebp
stos
cmp
test
jno
in
mov
ds
repnz
sub
or
mov
xchg
jne
dec
ds
lock
xchg
fmul
hlt
fadd
xchg
das
adc
jns
jbe
repnz
xchg
scas
stos
jae
scas
stos
jnp
popa
ja
xchg
fiadd
xchg
in
xchg
or
jns
cmps
xchg
fiadd
xchg
ror
jns
stos
jnp
hlt
fadd
xchg
push
dec
or
jne
add
add
pop
sub
repnz
xchg
scas
stos
jae
scas
stos
jnp
popa
ja
sbb
fwait
dec
or
xchg
jns
popa
(bad)
xchg
mov
(bad)
jns
cmps
push
neg
jg
in
(bad)
jns
xor
neg
scas
xchg
or
(bad)
jns
jbe
jns
jae
inc
xor
(bad)
adc
cmps
dec
test
fsubr
jns
xchg
and
or
jns
mov
add
int
idiv
scas
push
(bad)
jns
jecxz
daa
or
(bad)
xchg
push
fld
xchg
(bad)
jns
scas
jnp
neg
add
test
scas
xchg
imul
jns
xchg
push
neg
add
cdq
fiadd
xchg
xchg
jb
neg
add
sbb
data16
fadd
int3
test
scas
jnp
hlt
fadd
sub
ins
or
mul
bound
cs
aaa
push
(bad)
jns
jecxz
(bad)
adc
cmps
add
mov
fcmovnbe
add
scas
jnp
neg
add
loope
(bad)
jns
retf
setbe
fdiv
(bad)
fiadd
xchg
xchg
jns
cmps
inc
xchg
fsubr
jns
out
lock
or
lock
in
shl
add
mov
add
or
cld
loope
add
(bad)
fiadd
xchg
push
loop
into
cmps
push
xchg
fdivr
jns
in
cmp
and
mov
add
neg
cmps
hlt
mov
jae
mov
add
or
adc
dec
(bad)
adc
scas
jnp
neg
add
arpl
push
mov
sub
mov
mov
retf
inc
dec
or
ja
and
ja
not
xchg
imul
(bad)
adc
jns
cmps
add
mov
out
mov
mul
adc
and
and
cmc
fld
xchg
mov
cmp
(bad)
lock
or
dec
push
jp
and
adc
push
add
jp
add
add
mov
and
dec
or
jge
cdq
fiadd
xchg
push
hlt
adc
sar
jns
sbb
jns
dec
cli
js
and
cmc
fld
xchg
push
into
cmp
dec
xchg
movs
dec
and
cmc
fld
xchg
mov
mov
or
mov
bound
mov
add
in
push
or
adc
test
fdivr
clc
into
mov
jnp
hlt
fadd
sub
jle
jns
fwait
imul
cmps
mov
retf
mov
and
neg
push
mov
mov
retf
pop
dec
or
jne
xchg
fiadd
xchg
sub
and
and
mov
stos
jnp
hlt
fadd
lock
jl
and
loope
jns
stos
sbb
in
lods
das
pop
test
ins
mov
lock
stos
push
dec
icebp
stos
cmp
cmp
(bad)
lock
inc
ja
imul
cmp
cmp
(bad)
lock
inc
ja
cmc
fmul
jns
stos
cmp
xor
loope
int
or
or
data16
jbe
js
sub
sub
and
jbe
jbe
hlt
dec
xor
sub
push
ret
(bad)
lock
mov
dec
mov
push
and
cmovns
hlt
dec
cmp
xchg
mov
(bad)
jns
out
xchg
mov
sbb
jns
fmul
xchg
push
pop
cmp
(bad)
lock
or
lock
fmul
xchg
stos
test
test
lods
jbe
data16
dec
and
add
sub
sub
scas
mov
xchg
cmp
(bad)
hlt
dec
fld
call
(bad)
xchg
repz
jns
in
xchg
test
test
stos
adc
jns
pushw
sub
into
dec
or
test
push
adc
jns
pushw
es
js
mov
inc
cmp
jns
mov
test
cmp
in
fs
sbb
add
stos
jnp
jmp
in
vpaddusb
cmp
and
hlt
mov
jae
leave
ret
add
dec
and
mov
iret
sub
jbe
mov
jns
mov
(bad)
sub
xchg
cmp
cmp
sub
mov
rol
xchg
push
repnz
daa
adc
jns
fisttp
sahf
and
mov
push
in
vpaddusb
cmp
and
hlt
mov
jae
leave
ret
add
es
jo
push
retf
or
lock
jo
int3
int
add
or
mov
xchg
ss
neg
add
and
mov
out
mov
or
push
dec
leave
jl
and
loopne
lock
fwait
jmp
and
sub
jne
add
jg
sub
dec
or
jp
jns
stos
daa
cli
rcr
stc
xor
stos
cmp
add
push
pop
mov
add
int
xchg
sub
popa
(bad)
sub
retfw
mov
imul
and
ja
popa
ins
and
or
add
loope
retf
mov
int
or
addr16
mov
xchg
mov
popa
(bad)
hlt
mov
push
xchg
jae
xchg
and
cli
int
push
ret
inc
add
(bad)
jns
aam
cli
repz
int
or
addr16
jno
les
ret
add
dec
and
or
add
or
jge
sbb
jle
or
inc
jae
and
loopne
fidivr
or
jmp
cmps
(bad)
cdq
neg
scas
xchg
xchg
adc
jns
out
lock
or
lock
dec
leave
cmps
dec
and
or
add
or
jge
add
mov
jae
and
loopne
fidivr
or
jmp
cmps
(bad)
cdq
neg
scas
xchg
push
adc
jns
out
xchg
adc
(bad)
jns
sub
jns
mov
sti
add
retf
test
inc
sbb
and
loopne
fisubr
div
aad
(bad)
hlt
mov
push
xchg
je
xchg
and
cli
int
add
dec
in
cmps
dec
and
or
add
dec
and
or
add
or
jge
sbb
stos
jnp
(bad)
fadd
lock
retf
dec
dec
or
inc
jae
and
loopne
fidivr
or
jmp
cmps
(bad)
cdq
neg
scas
xchg
(bad)
adc
jns
out
adc
cld
mov
cdq
neg
scas
xchg
mov
(bad)
jns
out
xchg
jg
(bad)
jns
sub
jns
mov
sti
add
dec
push
cdq
dec
and
or
add
or
jge
add
cmps
dec
and
or
add
or
jge
add
jnp
(bad)
fadd
lock
retf
into
dec
or
inc
jae
and
loopne
fidivr
or
xlat
xchg
pop
adc
jns
inc
(bad)
jns
mov
inc
jns
fadd
cs
jnp
cmp
scas
inc
jns
fadd
cs
int3
jns
mov
and
or
add
loope
int3
jns
mov
iret
jns
call
lock
xchg
mov
popa
(bad)
hlt
mov
push
xchg
jae
xchg
and
cli
int
xchg
xor
popa
(bad)
hlt
mov
push
xchg
jae
xchg
cmp
(bad)
cli
int
ja
cmp
ja
loope
iret
jns
call
lock
xchg
mov
popa
(bad)
hlt
mov
push
xchg
jae
(bad)
cmp
(bad)
cli
int
xchg
arpl
popa
(bad)
hlt
mov
push
xchg
jae
sar
and
cli
int
push
push
cmp
inc
add
(bad)
jns
aam
cli
repz
push
cmp
scas
jnp
jmp
cmps
iret
jns
mov
ins
push
or
add
fadd
sub
and
or
add
loope
iret
jns
mov
iret
jns
call
lock
xchg
mov
popa
(bad)
hlt
mov
push
xchg
jae
inc
cmp
(bad)
cli
int
xchg
jns
popa
(bad)
hlt
mov
push
xchg
jae
pop
cmp
(bad)
cli
int
push
call
(bad)
jns
aam
cli
repz
push
cmp
scas
jnp
jmp
and
jns
mov
xchg
jns
aam
lock
and
cmps
adc
jns
retf
std
jns
mov
jg
sbb
jns
scas
inc
jns
fadd
cs
xor
inc
jns
fadd
cs
into
jns
mov
into
jns
call
lock
xchg
mov
popa
(bad)
hlt
mov
push
xchg
jae
loop
and
cli
int
xchg
cmps
aam
(bad)
hlt
mov
push
xchg
jae
(bad)
cmp
(bad)
cli
int
jg
mov
push
into
jns
call
lock
xchg
mov
popa
(bad)
hlt
mov
push
xchg
jae
and
and
cli
int
push
outs
cmp
inc
add
(bad)
jns
aam
cli
repz
into
jns
call
lock
les
ret
add
dec
and
or
add
or
jge
sbb
movs
dec
and
or
add
or
jge
add
adc
dec
cld
adc
dec
(bad)
adc
and
cmp
jbe
or
ja
cmc
cld
add
or
jae
or
add
or
xchg
jns
sahf
push
cmps
neg
test
cdq
neg
test
xchg
retf
sbb
and
int3
cmc
cld
add
or
ds
and
ja
push
jge
mov
jbe
pushf
mov
jp
or
lods
das
pop
pushf
adc
dec
ja
inc
ja
(bad)
fadd
xchg
fiadd
xchg
adc
clc
into
push
mov
test
jno
retf
pop
push
or
jne
add
imul
fadd
lock
aam
lock
cmp
pop
retf
retf
and
inc
std
fadd
clc
into
repnz
jns
dec
(bad)
scas
dec
and
push
and
(bad)
lock
out
adc
scas
jnp
hlt
fadd
sub
loop
jns
dec
cli
js
and
mov
dec
push
movs
dec
and
adc
and
stc
loope
sbb
add
icebp
std
movs
and
jns
daa
(bad)
jns
scas
jnp
neg
add
test
scas
xchg
xor
(bad)
jns
(bad)
add
scas
jnp
hlt
fadd
sub
or
mul
icebp
std
js
(bad)
jns
and
or
add
loope
sar
scas
jnp
hlt
fadd
sub
scas
xchg
lahf
or
sbb
hlt
fadd
lock
and
lock
dec
mov
shl
add
loope
sar
mov
jmp
cld
mov
add
into
cmps
sbb
or
jge
xchg
fiadd
xchg
push
loop
into
cmps
push
xchg
fdivr
jns
in
adc
and
mov
add
neg
cmps
hlt
mov
jae
mov
add
or
adc
dec
(bad)
adc
scas
jnp
neg
add
arpl
push
xchg
and
jo
sub
sti
or
inc
test
push
or
ja
or
ja
not
xchg
imul
(bad)
adc
jns
cmps
add
mov
out
mov
mul
adc
inc
or
jae
cmc
fld
xchg
mov
and
(bad)
lock
sub
or
dec
push
jp
and
or
and
stc
mov
mul
je
jbe
add
add
icebp
std
add
(bad)
jns
and
jns
retf
scas
push
or
ja
and
ja
popa
daa
(bad)
jns
scas
jnp
cmc
fadd
sub
ss
or
xchg
js
dec
and
or
add
loope
dec
xchg
mov
add
sub
mov
mov
lods
xchg
mov
out
jo
sub
xlat
or
(bad)
adc
fmul
hlt
fadd
hlt
mov
push
and
(bad)
clc
(bad)
pop
xchg
jns
scas
jnp
hlt
fadd
sub
xchg
push
neg
push
xor
iret
fmul
hlt
fadd
xchg
inc
or
jns
sub
cmp
retf
loop
or
scas
adc
(bad)
mov
push
or
jge
sbb
dec
cmc
movs
dec
and
xchg
and
repnz
mov
adc
js
jo
int3
popf
fiadd
xchg
adc
cmp
cmp
cld
xchg
fiadd
xchg
fmul
hlt
fadd
xchg
adc
add
out
xchg
jns
jne
jle
and
mov
mul
(bad)
jns
scas
jnp
hlt
fadd
sub
jmp
icebp
stos
cmp
or
dec
(bad)
fadd
xchg
aaa
or
jns
xchg
pop
test
fcom
and
(bad)
repnz
clc
clc
(bad)
sub
mov
jns
stos
sbb
in
lods
das
pop
test
jno
aam
pop
push
and
sub
jbe
jns
stos
mov
xchg
inc
or
jns
jbe
hlt
pop
and
sub
push
add
and
lock
jo
xchg
das
add
jns
in
jns
aam
lock
xlat
ja
pop
retf
ficom
and
or
scas
stos
jg
jno
jle
and
sub
jp
jns
scas
mov
das
popa
mov
adc
retf
out
push
or
ja
arpl
test
mov
(bad)
jns
fisttp
sahf
and
into
scas
mov
cmp
and
das
loope
fnstcw
test
test
movs
mov
jbe
pushf
mov
out
jns
retf
push
or
test
mov
mov
jo
and
adc
mov
(bad)
jns
stos
cmp
icebp
or
lock
sub
or
adc
xchg
dec
dec
add
and
or
add
and
(bad)
adc
fmul
mov
fsubr
xchg
fdivr
jns
daa
ja
loop
jg
pop
inc
(bad)
jns
and
jns
in
(bad)
push
jge
mov
in
test
addr16
push
add
and
jns
inc
icebp
into
dec
(bad)
jns
data16
loope
aam
or
(bad)
hlt
dec
xlat
scas
adc
dec
mov
dec
mov
xlat
jns
sub
cmp
mov
add
std
jae
out
and
cli
int
jae
std
jae
jns
pusha
(bad)
jns
fmul
push
xchg
(bad)
(bad)
xchg
repz
jns
fdivr
xchg
jl
mov
in
test
mov
lds
fwait
pop
jno
and
lahf
and
iret
dec
(bad)
adc
dec
(bad)
adc
dec
sti
adc
dec
(bad)
adc
dec
(bad)
adc
and
loope
xlat
jns
stos
cmp
gs
jns
lds
icebp
stos
cmp
or
not
jp
dec
and
mul
and
adc
je
dec
not
push
in
and
push
and
(bad)
adc
je
dec
not
jle
dec
and
push
and
(bad)
adc
je
dec
not
shl
dec
and
and
(bad)
adc
je
dec
not
loop
dec
and
and
(bad)
clc
out
test
or
arpl
add
mov
jns
dec
jmp
arpl
add
mov
jns
dec
jmp
arpl
add
mov
jns
dec
jmp
arpl
add
mov
jns
stos
push
dec
stc
stos
cmp
or
not
into
loopne
and
mov
and
adc
je
dec
not
push
in
and
call
xchg
dec
not
push
dec
and
stos
cs
adc
je
dec
not
data16
push
mov
mov
lds
std
stos
cmp
push
jmp
ja
or
add
(bad)
adc
fmul
xchg
xchg
(bad)
(bad)
xchg
dec
add
jns
add
or
dec
xchg
test
push
push
in
and
inc
cs
adc
fmul
stc
test
(bad)
xchg
sub
jns
pop
popa
cmp
dec
out
dec
xchg
test
push
jle
dec
and
outs
cs
clc
(bad)
popa
idiv
dec
add
or
push
pop
or
pop
pop
xchg
(bad)
(bad)
adc
movs
mov
dec
and
into
fdivr
dec
add
or
sub
and
cdq
arpl
adc
movs
mov
dec
adc
jmp
cmp
popa
cmp
retf
dec
pop
or
pop
add
movs
mov
dec
and
jns
dec
add
or
jb
or
pop
push
nop
arpl
adc
movs
mov
dec
sub
jns
stos
push
dec
icebp
stos
cmp
cmc
fmul
std
test
(bad)
xchg
imul
cmp
dec
out
dec
xchg
test
push
jp
dec
and
cs
and
es
pushf
mov
jmp
ds
aam
(bad)
jns
(bad)
and
jno
mov
xchg
stos
cmp
in
mov
test
fdivr
sbb
xchg
jns
retf
xchg
and
dec
aas
(bad)
jns
pushw
sub
xchg
pop
or
xchg
jns
push
retf
and
and
sub
shr
adc
and
popa
jmp
cmp
dec
pop
mov
or
(bad)
xchg
aaa
add
pop
cmp
dec
inc
or
sub
jne
icebp
or
sub
xchg
ins
popa
and
stc
pop
dec
cmp
shl
adc
retf
neg
and
xchg
(bad)
(bad)
lock
or
lock
dec
inc
or
xchg
pop
cmp
dec
outs
js
and
icebp
or
sub
xchg
ins
popa
sub
stc
pop
dec
and
shl
adc
retf
cmp
pop
sbb
dec
cld
adc
dec
(bad)
adc
call
or
adc
dec
inc
jnp
and
arpl
push
jle
and
lock
dec
jmp
arpl
add
mov
jns
dec
inc
or
xchg
pop
cmp
dec
out
adc
and
jns
inc
xchg
push
popa
and
jns
dec
xchg
mov
shl
adc
retf
cmps
pop
or
pop
add
(bad)
adc
xchg
popa
cmp
dec
inc
or
adc
and
jns
pop
xchg
push
popa
and
jns
dec
out
dec
and
adc
retf
loop
or
pop
fldcw
fmul
dec
xchg
(bad)
(bad)
adc
fmul
cmp
sbb
js
and
adc
dec
(bad)
jns
jae
mov
popa
(bad)
adc
clc
mov
call
mov
dec
cmp
and
dec
dec
cmp
or
(bad)
adc
or
adc
stc
and
xchg
mov
aaa
popa
cmp
dec
inc
or
xchg
pop
cmp
dec
call
and
pop
dec
and
shl
adc
retf
mov
and
xchg
(bad)
(bad)
clc
into
test
test
popa
pusha
(bad)
jns
jae
dec
sub
stc
mov
cmp
and
xchg
arpl
or
loop
or
xchg
jns
push
retf
and
dec
and
adc
dec
push
jns
and
pop
dec
and
shl
adc
retf
repnz
or
pop
stc
test
(bad)
clc
into
jg
jns
dec
inc
or
xchg
pop
cmp
dec
sar
and
or
jns
and
adc
cld
mov
cmp
dec
(bad)
xchg
ret
add
jns
punpcklwd
or
aam
neg
xchg
jns
push
retf
and
dec
and
or
(bad)
adc
(bad)
jns
and
jns
dec
xchg
mov
shl
adc
retf
jb
or
pop
jmp
icebp
aam
lock
iret
ja
arpl
add
mov
dec
dec
cmp
or
(bad)
adc
and
jns
aaa
(bad)
jns
dec
(bad)
jns
jae
sub
popa
(bad)
adc
clc
mov
sub
(bad)
fidivr
mov
dec
cmp
and
dec
dec
cmp
popa
cmp
jns
dec
cmp
jns
and
jns
stc
and
xchg
pop
add
jns
adc
or
xchg
popa
cmp
dec
inc
or
adc
and
jns
adc
jns
dec
call
xor
or
mov
loope
fdivr
or
dec
and
dec
and
dec
and
or
(bad)
adc
and
jns
dec
clc
mov
shl
adc
retf
bound
and
stos
popa
(bad)
adc
fmul
dec
xchg
(bad)
(bad)
adc
fmul
sbb
dec
sar
and
adc
jae
movs
(bad)
popa
(bad)
adc
stc
mov
jns
retf
sahf
pop
or
pop
std
test
(bad)
adc
fmul
dec
xchg
(bad)
(bad)
adc
fmul
sbb
dec
jl
or
xchg
mov
sbb
jae
jmp
or
mov
jns
retf
ficomp
and
pushf
arpl
lock
or
lock
dec
inc
or
xchg
pop
cmp
dec
out
and
jns
and
pop
dec
and
shl
adc
and
jns
(bad)
fistp
adc
dec
and
dec
and
dec
and
or
(bad)
adc
jae
movs
(bad)
popa
(bad)
adc
stc
mov
jns
retf
push
pop
or
pop
pop
xchg
(bad)
(bad)
adc
fmul
dec
xchg
(bad)
(bad)
adc
fmul
cmp
push
dec
gs
and
adc
dec
(bad)
jns
jae
call
mov
or
and
ficom
js
xchg
stos
push
push
icebp
stos
cmp
push
jge
mov
in
test
mov
xchg
sahf
adc
stos
cmp
cld
clc
mov
xchg
and
add
shl
das
loope
or
stos
sub
or
cmp
or
retf
jno
(bad)
(bad)
xchg
lar
jns
pushw
sub
(bad)
pop
or
xchg
jns
push
retf
and
and
sub
shr
adc
and
popa
jmp
cmp
dec
pop
mov
or
(bad)
xchg
fild
(bad)
jns
addr16
cmp
dec
inc
or
sub
jne
icebp
or
sub
xchg
ins
popa
and
stc
pop
dec
aaa
mov
shl
adc
retf
bound
and
xchg
(bad)
(bad)
clc
out
mov
xchg
popa
cmp
dec
inc
or
js
and
icebp
or
sub
xchg
ins
popa
sub
stc
pop
dec
and
shl
adc
retf
cmps
pop
or
pop
sbb
dec
cld
adc
dec
(bad)
adc
call
or
adc
dec
inc
jnp
and
arpl
push
loop
and
lock
dec
jmp
arpl
add
mov
jns
dec
inc
or
xchg
pop
cmp
dec
call
dec
std
jns
jae
movs
(bad)
popa
(bad)
adc
push
xchg
push
and
(bad)
mov
out
or
xchg
add
popa
(bad)
adc
dec
mov
xchg
cmps
cmp
jns
push
and
or
adc
(bad)
jns
push
push
in
and
out
push
and
stc
xor
pop
cmp
pop
mov
and
or
retf
xchg
xchg
(bad)
(bad)
xchg
jae
(bad)
jns
aaa
xchg
jns
and
xchg
arpl
or
call
push
retf
and
dec
and
adc
dec
jmp
jae
movs
(bad)
popa
(bad)
adc
push
cs
and
fimul
(bad)
add
and
dec
and
adc
and
jns
and
stc
pop
dec
and
shl
adc
retf
out
or
pop
push
xchg
(bad)
(bad)
xchg
jno
add
cmp
and
dec
dec
cmp
or
(bad)
adc
jmp
and
jns
stc
and
xchg
sar
pop
cmp
dec
inc
or
xchg
pop
cmp
dec
out
adc
jns
or
xchg
mov
or
(bad)
sub
and
or
mov
loope
loopne
or
inc
nop
cmp
dec
and
jns
push
retf
and
dec
and
or
jns
and
pop
dec
in
mov
shl
adc
retf
mov
mov
retf
dec
xchg
(bad)
(bad)
adc
fmul
cmp
sbb
adc
cmp
or
jns
jae
jg
popa
(bad)
adc
clc
mov
pop
pop
and
ficomp
and
dec
cmp
and
dec
dec
cmp
or
(bad)
adc
and
jns
cmp
scas
adc
mov
cmp
dec
(bad)
xchg
jecxz
(bad)
jns
pop
pop
cmp
dec
inc
or
xchg
pop
cmp
dec
out
adc
and
jns
fdivr
jns
dec
loopne
or
(bad)
sub
daa
cmp
dec
and
dec
and
or
xchg
jns
push
retf
and
dec
and
or
adc
jae
jmp
or
mov
jns
retf
xchg
pop
gs
arpl
clc
(bad)
mov
inc
or
xchg
pop
cmp
dec
out
and
adc
jae
movs
(bad)
popa
(bad)
adc
stc
mov
jns
retf
ret
and
xchg
(bad)
(bad)
adc
fmul
dec
xchg
(bad)
(bad)
adc
fmul
sbb
dec
call
and
popa
jmp
cmp
dec
jmp
or
(bad)
xchg
(bad)
(bad)
jns
add
or
xchg
popa
cmp
dec
inc
or
adc
arpl
jns
dec
loopne
or
jle
popa
shl
or
mov
loope
loop
or
push
int3
cli
fadd
rcl
(bad)
jns
les
loope
cmp
push
jge
mov
in
lods
das
pop
pushf
fmul
das
ja
inc
ja
in
cmp
or
jns
and
popa
and
jns
fmul
jns
stos
cmp
neg
icebp
std
cwde
and
jns
and
jns
loopne
xchg
mov
inc
add
data16
and
lock
aam
lock
retf
ja
test
sub
add
not
adc
mov
jns
retf
mov
neg
jge
adc
mov
jns
push
add
pop
cli
mov
cmp
fmul
xchg
aad
add
dec
fcomi
mov
arpl
jae
icebp
jae
or
dec
ret
int
and
xchg
jbe
add
icebp
adc
lock
jl
and
loopne
lock
mov
(bad)
sub
dec
push
pop
inc
ja
or
ja
mov
dec
aas
or
xchg
fstp
and
xchg
jae
adc
(bad)
xchg
repz
(bad)
jns
sub
jns
mov
jbe
mul
out
adc
inc
aas
cmp
jns
rcl
mov
and
cmp
scas
jnp
neg
add
loope
out
or
out
adc
xchg
mov
xchg
fsubr
jns
pop
add
xor
hlt
mov
add
push
and
lock
and
lock
mov
out
adc
xchg
mov
xchg
fsubr
jns
pop
add
xor
hlt
mov
add
push
and
stc
je
stc
or
dec
call
fadd
xchg
pop
outs
or
jle
imul
mov
mov
jnp
neg
add
loope
jmp
push
stc
stos
cmp
je
test
and
or
add
or
jle
imul
mov
cld
dec
cmp
scas
jnp
neg
add
loope
jmp
xchg
push
out
adc
xchg
mov
xchg
fsubr
jns
pop
add
xor
hlt
mov
add
push
and
stc
je
repz
dec
(bad)
retf
dec
and
or
add
or
ja
inc
ja
cmc
fld
xchg
sub
dec
cmp
scas
jnp
neg
add
loope
call
adc
dec
mov
xor
popa
(bad)
hlt
mov
add
xchg
(bad)
(bad)
xchg
in
add
or
enter
cmp
fiadd
xchg
fnstenv
retf
push
arpl
and
and
jnp
neg
add
iret
retf
neg
mov
jns
stos
sbb
pop
je
or
pushf
sbb
jno
and
aam
xchg
(bad)
cmp
jns
jg
js
jo
jo
fadd
cli
int
idiv
pop
retf
stos
popa
or
mov
jge
jbe
pushf
mov
(bad)
jno
and
inc
dec
sbb
(bad)
jns
int
inc
or
xchg
or
into
or
pop
and
xchg
iret
cmp
jns
sub
jns
mov
or
(bad)
cli
fild
xchg
push
out
adc
cmps
adc
div
(bad)
jns
sahf
or
or
dec
cmp
dec
and
in
add
or
jle
cli
fild
xchg
push
out
adc
xchg
mov
mov
fsubr
jns
xchg
jns
aam
lock
or
mov
push
xchg
daa
mov
and
or
add
loope
jmp
or
add
xchg
pusha
mov
into
or
sbb
(bad)
stc
mov
push
xchg
and
dec
cmp
scas
jnp
(bad)
fadd
sub
dec
jmp
or
add
xor
hlt
mov
or
sbb
(bad)
lock
and
lock
mov
add
xor
hlt
mov
or
sbb
(bad)
stc
mov
push
xchg
sub
cmp
scas
jnp
(bad)
fadd
sub
cmp
jns
mov
add
xor
hlt
mov
or
sbb
rol
xchg
sub
cmp
scas
jnp
(bad)
fadd
sub
(bad)
jmp
stos
jnp
(bad)
fadd
lock
mov
add
xor
hlt
mov
or
sbb
rol
xchg
mov
and
or
add
loope
jmp
fadd
ja
xor
hlt
mov
or
sbb
cmp
fsubr
xchg
cmps
and
popa
push
pop
cmp
dec
jno
dec
and
and
add
int
ja
loope
add
neg
int3
or
(bad)
fadd
jns
cmps
lds
and
mov
(bad)
jns
ror
lahf
and
mov
cmp
xchg
jns
push
pop
cmp
retf
mov
mov
icebp
fadd
jo
sub
mov
or
(bad)
jns
sahf
add
(bad)
jmp
cmc
fadd
inc
push
cmps
lds
and
neg
add
or
(bad)
mov
mul
inc
xor
stos
jnp
(bad)
fadd
lock
scas
jnp
icebp
fadd
sub
daa
cmp
scas
jnp
cmc
fadd
sub
mov
cmp
sahf
push
xor
retf
mov
mov
and
xchg
enter
lock
mov
repz
lock
fs
fild
xchg
movs
mov
or
jge
imul
mov
cmp
scas
jnp
neg
add
loope
out
or
cmp
cdq
cmp
scas
jnp
icebp
fadd
sub
fucompp
jns
mov
xchg
jns
and
hlt
mov
push
xchg
jae
pop
sbb
jg
jns
lds
(bad)
add
cmc
fild
xchg
out
mov
cmc
fld
xchg
inc
outs
or
xchg
jp
popa
(bad)
hlt
mov
push
xchg
jae
mov
and
cli
int
jae
cmc
fld
xchg
jmp
fild
xchg
cmps
add
repz
mov
xor
xor
jns
out
adc
scas
jnp
icebp
fadd
sub
xchg
jns
dec
call
std
sti
mov
test
fsubr
xchg
sub
sbb
and
hlt
mov
add
pop
retf
and
and
xchg
stos
push
mov
stos
jnp
(bad)
fadd
lock
mov
add
movs
retf
and
int3
icebp
fild
xchg
pop
cmp
dec
sbb
cmc
fild
xchg
(bad)
outs
or
jge
sbb
retf
dec
and
cmc
fld
xchg
retf
and
cmc
fld
xchg
retf
and
fst
add
fst
add
neg
add
xor
fst
add
neg
add
sub
hlt
fst
add
neg
std
push
fsubr
jnp
(bad)
fadd
lock
fmul
icebp
fadd
hlt
mov
add
shl
hlt
mov
add
pop
and
cli
int
jae
cmc
fild
xchg
cmp
and
rcl
xchg
test
jns
sahf
ss
fdiv
push
xor
imul
ja
std
fild
xchg
and
cmc
fild
xchg
dec
(bad)
icebp
fadd
xchg
jg
(bad)
jns
cmps
add
jg
(bad)
jns
sahf
add
mov
push
xchg
scas
cmp
push
sub
and
hlt
mov
push
xchg
jae
jns
xchg
or
jnp
(bad)
adc
dec
(bad)
xchg
push
xor
jns
retf
sub
and
cmc
fild
xchg
add
in
add
mul
idiv
neg
add
in
add
or
(bad)
adc
in
loope
jmp
or
aam
fadd
es
js
mov
in
fwait
call
and
sub
inc
fstp
(bad)
lock
es
leave
dec
and
or
fisubr
and
lods
int
xchg
jecxz
ins
pop
retf
scas
push
loope
jmp
or
xchg
xchg
sbb
jns
data16
cmp
es
in
and
or
ja
inc
ja
mov
loopne
sub
(bad)
jns
fdivr
jns
dec
outs
fmul
push
pop
sbb
(bad)
xchg
aas
xor
jns
retf
fisubr
jg
retf
jns
daa
(bad)
jns
scas
jnp
out
add
not
xchg
(bad)
xor
jns
and
hlt
mov
push
jb
fadd
cli
int
ret
xchg
and
jbe
cmp
sti
or
fadd
mov
dec
and
jl
xchg
mov
arpl
and
ficomp
outs
pushf
imul
add
enter
ret
stos
and
stos
add
pushf
adc
mul
jnp
in
add
adc
(bad)
jbe
sahf
dec
xchg
neg
inc
stos
inc
inc
out
sub
fyl2xp1
mov
xor
lock
mov
jbe
xor
adc
in
add
cmps
dec
xchg
neg
ret
jecxz
mov
iret
cmps
push
xchg
neg
(bad)
xchg
das
aaa
(bad)
jns
loope
mov
mov
cmp
mov
scas
jnp
in
add
popa
mov
cmp
dec
xor
xchg
iret
add
or
jg
dec
xor
jns
and
xchg
iret
add
out
add
loope
out
jns
scas
jnp
in
add
loope
cmp
in
add
loope
cmp
arpl
jae
xchg
iret
add
or
xchg
js
push
icebp
jns
mov
(bad)
adc
pop
cmp
dec
cmp
xchg
(bad)
(bad)
xchg
stos
xor
jns
sahf
pushf
xchg
neg
jae
or
add
jns
rcr
cmp
dec
outs
fmul
xchg
mov
jns
mov
jns
stos
es
shr
adc
fbld
rcl
jns
inc
pop
adc
mov
cmp
dec
cmp
cdq
arpl
xchg
dec
xor
jns
sahf
sbb
neg
jae
mov
mov
jns
rcr
cmp
dec
outs
fmul
xchg
mov
or
in
jns
mov
inc
xchg
neg
jae
iret
cmc
mov
jns
rcr
ror
es
adc
dec
cli
adc
dec
(bad)
adc
and
cmp
pusha
cmp
retf
data16
and
mov
dec
(bad)
sub
mov
jns
in
shl
(bad)
jns
inc
sub
scas
xchg
pop
sub
dec
xchg
neg
jge
mul
inc
or
mov
mov
scas
hlt
mov
adc
mov
and
arpl
xchg
mov
popa
inc
push
and
clc
loop
mov
shl
(bad)
jns
inc
sub
scas
xchg
jnp
(bad)
jns
scas
dec
xchg
neg
jge
mul
inc
or
mov
mov
scas
hlt
mov
adc
mov
and
arpl
xchg
mov
popa
inc
push
and
xchg
jb
and
rcr
(bad)
jns
shl
into
add
neg
ja
test
pop
mov
jmp
and
lds
(bad)
lock
jecxz
jns
and
adc
retf
inc
jbe
and
fisttp
push
or
xchg
jns
call
mov
sub
and
cmp
and
jns
dec
(bad)
xchg
fwait
xor
jns
es
std
jns
and
and
ja
into
data16
and
mov
or
jae
mov
push
jmp
retf
dec
xchg
(bad)
(bad)
adc
dec
(bad)
adc
dec
(bad)
adc
dec
(bad)
adc
and
popa
ret
or
mov
loope
out
jns
cmp
dec
and
adc
dec
(bad)
xchg
dec
sub
push
fstp
daa
push
or
inc
(bad)
stc
jnp
xchg
in
shl
xchg
adc
(bad)
jns
pop
cmp
jae
pop
add
(bad)
lock
adc
xchg
retf
das
(bad)
jns
and
xchg
in
aad
fadd
jge
and
lock
es
shl
add
test
scas
adc
mov
cmp
dec
scas
int
and
xchg
xchg
out
leave
push
stc
cli
sub
dec
cmp
and
jl
xchg
mov
jns
mov
xchg
stos
es
shr
adc
arpl
xchg
xchg
jns
(bad)
adc
dec
(bad)
xchg
pop
sub
jbe
or
jae
mov
dec
(bad)
adc
dec
loope
dec
and
add
(bad)
sub
dec
bnd
dec
(bad)
adc
and
jns
and
dec
or
jns
enter
(bad)
scas
xchg
mov
(bad)
jns
loopne
inc
or
jae
in
jae
into
pop
and
adc
dec
(bad)
adc
scas
mov
ja
and
mov
push
jmp
mov
(bad)
jnp
and
inc
pop
inc
jg
ins
and
jns
data16
icebp
xor
std
cdq
and
jns
sub
jp
or
(bad)
nop
ret
sub
jns
xor
jns
sub
or
and
inc
sbb
(bad)
jns
cmp
push
test
(bad)
js
and
std
ja
(bad)
jns
mov
ret
adc
cmps
sub
and
xchg
dec
cmp
retf
rcr
fiadd
xchg
in
xchg
shl
xchg
fstp
sbb
add
mov
add
loope
add
or
ds
cmps
(bad)
jns
scas
jnp
hlt
fadd
sub
push
mov
mov
push
xchg
repnz
add
hlt
fadd
cli
loope
jne
(bad)
add
neg
(bad)
test
in
fiadd
xchg
cmps
and
test
lods
hlt
fadd
push
pushf
out
add
cmp
repnz
add
hlt
fadd
sub
(bad)
cld
rcr
add
or
retf
cmp
mov
aam
jbe
and
ins
xchg
mov
mov
ins
xchg
mov
cmp
mov
(bad)
cli
sub
dec
cmp
and
jns
mov
sub
fcom
inc
jns
mov
cmc
push
and
xchg
dec
cmp
retf
sbb
sbb
add
sub
cld
outs
and
jns
and
jle
and
nop
push
and
jns
and
or
mov
or
retf
jmp
and
mov
stos
jnp
hlt
fadd
lock
retf
or
jne
sbb
fadd
clc
dec
jns
sbb
jmp
dec
sbb
or
xor
(bad)
dec
xchg
(bad)
dec
stos
popa
dec
test
dec
stos
popa
dec
xchg
(bad)
dec
xchg
(bad)
(bad)
jbe
stc
clc
jns
dec
inc
add
fild
xchg
sbb
add
sbb
sti
fldcw
sbb
dec
nop
(bad)
dec
dec
dec
imul
retf
inc
jne
and
xchg
out
and
shl
jns
les
rcr
add
aad
add
hlt
fadd
jns
cmps
and
das
(bad)
jns
cmps
push
test
fdivr
lea
(bad)
jns
jge
jns
stos
push
push
icebp
stos
cmp
mul
(bad)
jns
cmps
inc
cmp
arpl
or
adc
and
or
add
or
adc
mov
add
inc
or
cli
jb
and
(bad)
or
(bad)
lock
adc
lock
test
add
mov
add
hlt
fadd
jns
push
mov
dec
and
jbe
mov
add
and
or
add
test
(bad)
xchg
(bad)
test
jge
mul
inc
or
mov
adc
call
push
ret
test
lods
xchg
div
repnz
neg
(bad)
jns
add
shl
adc
retf
ss
and
dec
lea
hlt
jns
retf
or
inc
push
dec
hlt
fadd
lock
scas
jnp
neg
add
test
scas
adc
mov
test
fsubr
jns
out
adc
and
jns
cmps
inc
cmp
imul
retf
adc
and
or
add
or
adc
sti
mov
add
inc
or
cli
jae
and
(bad)
or
and
xchg
mov
ret
push
pop
cli
icebp
xor
jns
les
cmp
dec
(bad)
xchg
sub
(bad)
jns
push
loop
dec
and
mov
and
nop
enter
iret
cmps
inc
xor
dec
cld
or
add
neg
add
pop
cli
inc
xor
adc
dec
(bad)
adc
hlt
mov
call
imul
retf
outs
jo
and
sti
or
and
xchg
and
fadd
xchg
fcmovnbe
add
scas
jnp
hlt
fadd
sub
cmp
scas
jnp
hlt
fadd
sub
mov
jns
mov
(bad)
jns
scas
jnp
neg
add
not
jle
dec
and
xchg
and
stc
mov
add
arpl
xchg
jns
in
cmp
dec
(bad)
xchg
arpl
(bad)
jns
push
jle
dec
and
outs
add
(bad)
nop
add
(bad)
jns
int3
not
or
jae
or
add
hlt
fadd
sub
cmp
scas
jnp
hlt
fadd
sub
push
cmc
jns
mov
(bad)
jns
scas
jnp
neg
add
not
shl
dec
and
out
add
(bad)
stc
mov
add
arpl
xchg
jns
mov
cmp
dec
(bad)
xchg
or
(bad)
jns
push
shl
dec
and
(bad)
add
(bad)
nop
test
(bad)
jns
fcmovne
add
scas
jnp
hlt
fadd
sub
sub
or
add
loope
hlt
jns
mov
(bad)
jns
scas
jnp
neg
add
not
(bad)
out
and
push
add
(bad)
stc
mov
add
arpl
xchg
jns
dec
sub
or
xchg
xchg
sub
jns
push
(bad)
out
and
add
(bad)
nop
xor
(bad)
jns
scas
inc
mul
inc
or
mov
sub
adc
dec
shr
loope
idiv
fmul
push
xchg
(bad)
(bad)
xchg
sbb
(bad)
jns
daa
std
jns
in
xchg
fadd
jns
push
icebp
iret
mov
add
or
add
xor
and
or
xchg
das
sub
jns
push
(bad)
out
and
stos
push
and
nop
int3
and
jns
cmps
add
mov
add
mov
push
push
icebp
stos
cmp
mov
add
cld
fiadd
xchg
shl
cld
fiadd
xchg
es
and
sbb
jns
and
or
add
xchg
(bad)
(bad)
xchg
dec
and
jns
sahf
inc
sub
adc
dec
out
scas
dec
and
or
retf
pop
xchg
(bad)
(bad)
xchg
push
and
jns
outs
cld
jns
in
xchg
fadd
jns
push
icebp
iret
mov
add
or
add
xor
and
or
xchg
addr16
jns
push
fsubp
dec
and
bound
and
nop
add
(bad)
jns
cmps
add
test
add
dec
mov
pop
jbe
mov
xchg
fadd
mov
cmp
ja
test
scas
hlt
mov
add
shl
hlt
mov
add
add
(bad)
cli
int
inc
(bad)
push
and
mov
stos
jnp
hlt
fadd
repnz
add
or
adc
dec
(bad)
jns
arpl
xchg
lahf
es
jns
cmps
or
arpl
xchg
jns
xchg
or
or
(bad)
stc
xor
dec
cmp
and
loopne
and
mul
inc
or
mov
test
lods
sub
cmp
fmul
neg
add
arpl
jae
stc
fiadd
xchg
cld
adc
ret
mov
xchg
fcom
(bad)
or
(bad)
hlt
test
add
dec
mov
pop
adc
scas
imul
scas
arpl
xchg
or
or
(bad)
adc
scas
jnp
hlt
fadd
sub
xchg
mov
popa
inc
test
jl
and
int3
std
fld
xchg
xor
jns
fmul
cmp
mov
(bad)
jns
and
arpl
xchg
jns
and
jns
call
neg
add
icebp
aam
lock
add
hlt
fadd
lock
dec
cld
adc
dec
inc
test
jge
and
cdq
cmp
jl
ja
arpl
jae
stc
fiadd
xchg
xchg
jmp
mov
retf
or
and
neg
scas
adc
dec
adc
std
fld
xchg
cli
cli
jns
fmul
neg
add
into
es
int
and
jns
and
and
ja
arpl
xchg
jge
dec
dec
cmp
dec
xchg
mov
and
stc
loope
jb
mul
add
mov
jns
fwait
push
popa
or
or
neg
ja
loop
add
push
xacquire
call
aaa
mov
in
mov
test
sbb
(bad)
pushf
lock
and
lock
test
jne
and
jns
sub
test
and
cli
je
div
in
jns
sbb
std
test
dec
fmul
xchg
xchg
(bad)
(bad)
xchg
xchg
daa
(bad)
jns
fisttp
sahf
and
into
sbb
xchg
xchg
(bad)
dec
fmul
stc
test
(bad)
xchg
mov
(bad)
jns
push
jle
dec
and
out
and
push
or
punpcklwd
or
xchg
imul
retf
mov
cmp
stos
cmp
aas
imul
push
cmc
xchg
popa
cmp
retf
mov
dec
and
dec
sub
jns
sbb
pop
xchg
(bad)
dec
popa
(bad)
jns
sub
dec
loope
mov
jns
sbb
pop
xchg
(bad)
dec
mov
(bad)
js
xor
mov
jns
enter
aam
lock
shl
cmp
lds
mov
sub
jle
dec
and
out
and
dec
and
and
mov
or
lds
mov
or
(bad)
out
and
fmul
lds
mov
fs
push
jp
dec
and
out
and
mov
sbb
push
repnz
pop
retf
mov
and
arpl
and
imul
sar
or
add
mov
jns
and
pop
sbb
mov
jns
and
pop
sbb
mov
jns
and
pop
sub
mov
jns
and
pop
and
mov
jns
and
pop
cmp
mov
jns
and
pop
cmp
mov
jns
and
xchg
mov
(bad)
jns
in
inc
sub
adc
stos
push
cmp
scas
jl
and
add
mov
in
xchg
or
sub
xchg
adc
sub
or
jl
adc
jle
jecxz
jl
fcmovnu
or
iret
and
jns
and
inc
out
add
shl
clc
in
out
jns
push
(bad)
imul
push
(bad)
imul
out
jge
fcomp
jns
and
sub
fadd
xchg
movs
add
cmps
aam
hlt
inc
fdiv
sub
pop
cli
mov
fidivr
sub
jns
and
pop
dec
sar
or
add
mov
jns
and
pop
inc
sar
or
add
mov
jns
and
pop
pop
sar
or
add
mov
jns
and
pop
push
sar
or
add
mov
jns
and
pop
imul
(bad)
jns
and
pop
ins
sar
or
add
mov
jns
and
pop
sar
or
add
mov
jns
and
pop
jge
mov
jns
and
pop
jno
mov
jns
and
pop
jne
mov
jns
and
pop
mov
mov
jns
and
pop
(bad)
sar
or
add
mov
jns
and
pop
test
mov
jns
and
pop
cdq
sar
or
add
mov
jns
and
pop
xchg
sar
or
add
mov
jns
and
pop
test
mov
jns
and
pop
lods
sar
or
add
mov
jns
and
pop
movs
sar
or
add
mov
jns
and
pop
mov
mov
jns
and
pop
mov
mov
jns
and
pop
mov
mov
jns
and
pop
leave
sar
or
add
mov
jns
and
pop
rcl
jns
mov
jns
and
pop
(bad)
jns
mov
jns
and
pop
fnop
mov
jns
and
pop
fst
mov
jns
and
pop
rcl
mov
jns
and
pop
aad
mov
jns
and
pop
jmp
mov
jns
and
pop
in
sar
or
add
mov
jns
and
pop
in
mov
jns
and
pop
icebp
sar
or
add
mov
jns
and
pop
or
mov
jns
and
pop
or
mov
jns
and
pop
add
mov
jns
and
pop
add
mov
jns
and
pop
sbb
mov
jns
and
pop
sbb
mov
jns
and
pop
adc
mov
jns
and
pop
adc
mov
jns
and
pop
sub
mov
jns
and
pop
sub
mov
jns
and
pop
and
mov
jns
and
pop
and
mov
jns
and
pop
cmp
mov
jns
and
pop
cmp
mov
jns
and
pop
xor
mov
jns
and
pop
xor
mov
jns
and
pop
dec
xlat
mov
jns
and
pop
dec
xlat
mov
jns
and
pop
inc
xlat
mov
jns
and
pop
inc
xlat
mov
jns
and
pop
pop
xlat
mov
jns
and
pop
pop
xlat
mov
jns
and
pop
push
xlat
mov
jns
and
pop
push
xlat
mov
jns
and
pop
imul
(bad)
jns
and
pop
ins
xlat
mov
jns
and
pop
jns
mov
jns
and
pop
jge
mov
jns
and
pop
jno
mov
jns
and
pop
jne
mov
jns
and
pop
mov
mov
jns
and
pop
test
mov
jns
and
pop
cdq
xlat
mov
jns
and
pop
popf
xlat
mov
jns
and
pop
xchg
xlat
mov
jns
and
pop
xchg
xlat
mov
jns
and
pop
test
mov
jns
and
pop
lods
xlat
mov
jns
and
pop
mov
mov
jns
and
pop
movs
xlat
mov
jns
and
pop
mov
mov
jns
and
pop
mov
mov
jns
and
pop
leave
xlat
mov
jns
and
pop
int
mov
jns
and
pop
rcl
jns
mov
jns
and
pop
(bad)
jns
mov
jns
and
pop
(bad)
mov
jns
and
pop
fst
mov
jns
and
pop
rcl
mov
jns
and
pop
aad
mov
jns
and
pop
jmp
mov
jns
and
pop
in
xlat
mov
jns
and
pop
loope
mov
jns
and
pop
in
mov
jns
and
pop
stc
xlat
mov
jns
and
pop
std
xlat
mov
jns
and
pop
icebp
xlat
mov
jns
and
pop
cmc
xlat
mov
jns
.byte
