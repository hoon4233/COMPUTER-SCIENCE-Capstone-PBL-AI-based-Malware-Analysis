mov
add
and
add
add
add
sbb
arpl
xchg
iret
xlat
pop
xchg
cld
(bad)
push
bound
xchg
neg
push
dec
bound
or
mov
imul
sub
push
outs
(bad)
cs
bound
les
jecxz
ret
stc
test
sar
js
or
imul
jbe
popa
mov
pop
xor
in
cli
xchg
sti
lds
pushf
sbb
out
fnstsw
adc
add
mov
mov
dec
pop
cmps
or
or
mov
ja
dec
pushf
xchg
cmp
xchg
lock
xor
add
or
out
adc
sbb
jbe
test
cmp
mov
lds
movs
sti
adc
cwde
pop
push
inc
sbb
mov
jmp
test
int
xchg
lahf
push
(bad)
jmp
adc
sbb
les
fidivr
or
gs
test
pop
adc
or
sub
fwait
jecxz
retf
lahf
jb
cmp
sub
leave
sub
retf
rol
lods
jge
icebp
daa
mov
xor
je
int
mov
jns
lods
pop
hlt
mov
mov
xchg
mov
pop
(bad)
fisubr
leave
leave
call
shr
dec
scas
(bad)
cmc
cmp
std
jmp
inc
and
les
sub
xchg
test
sbb
xchg
stos
jl
dec
aad
push
repnz
cmp
jmp
int
adc
(bad)
xchg
ret
inc
mov
pop
shr
ror
lea
cmp
add
jns
add
sub
mov
adc
add
or
mov
pop
xchg
les
cs
mov
mov
jecxz
xchg
ins
cmp
adc
call
push
mov
push
ins
aam
sub
jp
ja
aad
sub
pusha
retf
dec
mov
sub
pop
movs
enter
aad
int
ret
sub
gs
pop
mov
fstp
mov
int3
mov
sub
hlt
jno
lods
test
fnstenv
push
dec
jg
mov
std
or
popa
dec
mov
mov
cli
sub
bound
shr
iret
aaa
push
xchg
sub
and
mov
inc
mov
hlt
movs
dec
add
mov
add
xchg
stos
or
xchg
sub
or
and
ins
aad
mov
dec
or
and
and
je
aad
movs
mov
pop
sub
pop
and
in
outs
adc
mov
test
xor
clc
ret
fld
xchg
(bad)
cmp
pushf
data16
xor
sub
add
fs
shr
icebp
xchg
cld
in
lds
bound
jmp
sub
rol
inc
ret
cli
lods
or
out
xchg
push
mov
xchg
xchg
xchg
mov
cmp
mov
jp
repnz
cmp
pushf
rcl
inc
mov
push
setbe
je
xor
mov
call
mov
jl
loop
pop
inc
add
hlt
push
xchg
sbb
stos
sub
xor
sbb
push
lds
xchg
addr16
cmps
push
mov
into
add
iret
mov
sbb
cwde
and
sbb
push
stos
stos
xchg
push
(bad)
int
inc
xor
cmc
mov
inc
dec
push
push
xchg
xor
dec
call
into
pop
fwait
mov
(bad)
mov
es
push
dec
cdq
jl
adc
sub
fist
in
jmp
popf
cli
jge
(bad)
call
(bad)
cmps
or
aas
xchg
dec
xchg
dec
mov
mov
ins
lock
push
call
cmp
xor
call
mov
xor
mov
xchg
fwait
enter
jp
ror
cmp
push
(bad)
stc
dec
xor
inc
mov
and
xor
inc
mov
rcr
into
stos
push
mov
xchg
stos
push
pop
mov
aad
xlat
scas
or
std
sbb
mov
sub
and
and
or
pop
mov
jbe
cmps
hlt
add
les
sub
dec
aaa
lods
(bad)
pop
imul
inc
push
sub
(bad)
sbb
call
add
cmp
xchg
add
sbb
sbb
dec
mov
inc
rcl
jns
imul
pop
ds
popa
in
xchg
out
cdq
gs
pop
xor
(bad)
mov
sbb
fnstcw
addr16
xlat
inc
sbb
jbe
fs
ins
inc
mov
adc
add
fadd
add
pop
popf
push
outs
push
fistp
and
xchg
and
(bad)
pop
pop
fcomp
xchg
and
sbb
adc
hlt
iret
pop
or
cmps
sub
push
jp
in
test
xchg
adc
lods
popf
scas
(bad)
movs
dec
xchg
jo
ret
lods
loop
in
out
cmps
mov
je
sub
cli
mov
mov
inc
sti
inc
xchg
lds
scas
xchg
push
and
ds
retf
jp
inc
mov
jo
ins
push
cmp
dec
push
mov
xchg
mov
test
mov
ds
outs
dec
mov
pop
jle
cdq
and
mov
inc
ins
xchg
adc
jns
ss
aad
mov
and
mov
xchg
inc
add
loop
xchg
clc
jae
mov
push
dec
jo
stos
std
mov
shl
mov
xchg
dec
call
mov
mov
in
add
xchg
inc
cmp
dec
out
cmps
mov
xchg
add
pop
or
add
add
mov
cmp
aad
or
cmps
add
popa
add
loopne
fwait
std
dec
outs
test
inc
idiv
scas
inc
hlt
mov
shl
data16
sbb
push
div
in
cmp
scas
jne
xchg
xor
jge
jmp
xchg
fsub
jne
adc
ret
call
sub
into
mov
mov
mov
retf
stc
test
jl
xor
add
data16
cmp
sbb
in
add
mov
mov
cmp
jl
(bad)
mul
mov
imul
jl
adc
rcr
cmc
(bad)
mov
sub
les
mov
sbb
cwde
fist
sahf
xor
mov
ret
adc
sub
outs
pop
xor
sbb
repz
(bad)
lods
retf
dec
jae
jg
push
imul
add
cli
sub
aaa
pop
jecxz
push
mov
cmp
lahf
adc
in
out
adc
les
loopne
stos
and
imul
mov
popa
pand
and
clc
add
adc
jno
xchg
inc
xchg
add
imul
sub
jge
sub
and
sbb
adc
loopne
add
adc
in
add
sti
dec
sahf
repz
inc
push
leave
pop
jbe
jae
popf
sbb
arpl
pusha
inc
pop
outs
outs
xor
push
inc
in
jmp
gs
xor
dec
fnsave
add
gs
mov
fdiv
mov
mov
cmp
jmp
mov
test
cld
movs
xor
stos
and
fcom
dec
mov
and
pop
or
adc
and
xchg
outs
cmc
aaa
and
jl
push
jnp
sub
cmp
ret
std
daa
test
int
sti
pop
scas
cmc
dec
es
into
add
cwde
loope
cmc
nop
lock
je
cmp
dec
data16
pop
sub
ins
mov
pop
sahf
push
xchg
mov
imul
jns
cs
popf
lods
mov
xchg
std
retf
enter
outs
in
cld
sbb
aas
fidiv
loopne
(bad)
fcmove
dec
rol
xchg
call
pop
sbb
push
(bad)
pop
jo
push
lods
rcr
pop
sub
retf
retf
xor
clts
push
aas
xor
pop
repnz
movs
(bad)
jne
pop
pop
loope
mov
sbb
std
jbe
in
(bad)
(bad)
add
movs
and
xchg
jb
dec
aaa
xchg
pop
or
outs
xor
ret
fldcw
or
pop
and
pop
rol
int3
std
int
and
add
xor
pop
adc
mov
push
punpckhdq
adc
retf
dec
pop
pop
pop
sahf
cmp
icebp
sub
jbe
cmp
out
lods
mov
add
test
in
or
and
jns
vmovupd
ins
jnp
dec
je
or
mov
sub
adc
dec
sub
add
jmp
dec
mov
dec
xor
xlat
cs
shr
pop
and
xor
push
adc
(bad)
retf
mov
stc
in
jp
int3
xor
ss
pop
addr16
jecxz
fcomp
or
jne
dec
cmps
inc
jbe
add
inc
mov
push
sbb
push
(bad)
fmul
outs
xchg
xor
pop
dec
lods
xor
mov
shr
mov
shr
add
sbb
mov
je
rcl
cli
sti
inc
mov
xor
mov
aaa
push
dec
out
fidiv
mov
mov
pop
aas
lods
aad
and
sbb
sub
loop
pop
pop
cmp
nop
mov
std
inc
pop
mov
mov
popf
inc
sbb
adc
stos
sahf
fwait
out
into
aam
cmp
mov
push
out
mov
xchg
aas
sub
sbb
mov
pop
fstp
dec
sub
mov
jmp
jg
jge
jo
pop
cwde
sub
in
mov
in
call
inc
ins
or
adc
loop
xchg
cmp
add
fadd
hlt
outs
mov
gs
push
inc
cmp
jmp
pop
inc
inc
mov
sbb
push
xchg
das
movs
fs
bound
sbb
retf
xor
mov
and
pop
xor
jmp
cmps
inc
(bad)
mov
inc
enter
cmp
mov
jo
std
cmc
jmp
jae
xchg
cmp
(bad)
in
sbb
mov
cdq
fist
mov
dec
cmps
add
idiv
jmp
jle
mov
sar
js
in
mov
clc
jecxz
or
mov
xor
shr
push
gs
into
push
mov
or
cmp
mov
stc
ficomp
xor
(bad)
dec
cwde
sbb
sub
mov
mov
test
cmp
in
jl
(bad)
in
(bad)
lock
mov
mov
sub
push
sub
jno
pop
jae
mov
mov
push
sub
(bad)
sbb
pop
adc
mov
xor
call
sar
hlt
stos
jmp
fsubr
por
dec
adc
push
jbe
mov
push
fisttp
jge
sbb
adc
rol
cmp
and
mov
jmp
test
movs
das
lods
or
or
sbb
mov
or
push
pop
fbstp
shl
sbb
push
mov
add
mov
sbb
movs
inc
stos
inc
out
push
bound
out
cmp
cwde
xor
nop
jb
pop
fistp
mov
mov
and
int
sub
cli
cmp
rcl
mov
(bad)
das
and
popa
jecxz
loope
cmps
in
push
(bad)
clc
push
sbb
sub
scas
xor
push
addr16
stos
cmp
push
(bad)
lods
in
mov
outs
pop
lock
ficom
dec
mov
imul
ror
mov
ror
xor
xchg
scas
hlt
sbb
stc
not
call
gs
loopne
sub
js
inc
fcomi
sbb
and
cmp
test
push
retf
or
arpl
ja
cmp
sbb
retf
jb
rcr
aad
mov
jo
jns
push
push
xchg
push
rcl
and
dec
mov
pop
enter
test
jo
rcl
scas
rol
ret
jns
and
es
cmps
xchg
inc
or
push
or
ins
mov
push
pop
mov
adc
cmps
mov
ror
inc
add
aam
adc
out
test
jbe
pop
int3
and
test
pop
dec
cmp
push
pop
lods
xchg
pop
inc
jp
(bad)
push
inc
fistp
push
jae
retf
aaa
add
and
push
addr16
push
jge
call
sbb
arpl
jp
daa
adc
int
ins
mov
sbb
cmp
in
inc
fnstcw
shl
cmp
sbb
fcomip
xlat
or
mov
pop
pop
clc
(bad)
push
push
aaa
push
das
xor
xor
push
add
push
movs
rcl
mov
add
movs
bound
cmp
sbb
test
cmp
pop
pop
fbstp
lods
pop
xchg
not
das
je
adc
outs
push
xor
sub
stos
bound
lods
jno
cdq
dec
outs
or
add
repnz
pop
lods
mov
addr16
sub
jbe
and
xchg
bound
add
sub
jb
mov
popf
ins
add
sbb
cmps
push
xchg
mov
and
leave
(bad)
push
and
fdivr
idiv
sahf
fs
and
cli
sub
xor
neg
jno
and
pop
push
xchg
psubw
mov
lods
outs
sahf
xchg
jp
outs
jbe
dec
push
repnz
retf
retf
daa
frstor
push
in
or
(bad)
mov
jg
movs
repz
adc
out
scas
ins
stos
or
call
retf
push
sbb
(bad)
sbb
(bad)
out
sub
lahf
sub
into
push
mov
inc
push
fild
fld
mov
or
xchg
pop
pop
test
or
sbb
adc
loop
inc
(bad)
adc
jns
stc
js
inc
(bad)
hlt
movs
and
sahf
inc
and
xchg
mov
cmps
dec
mov
jl
sbb
test
loopne
(bad)
jle
add
shl
cli
and
push
test
xchg
pop
lods
hlt
inc
or
int
jl
in
mov
sar
push
cld
mov
pushf
add
mov
xchg
nop
pop
aad
outs
xchg
sbb
cmc
mov
and
(bad)
shl
inc
jg
(bad)
fdiv
add
idiv
sahf
and
cmp
mov
or
nop
push
and
sub
sub
add
mov
stos
dec
ret
outs
xchg
jl
rol
add
out
xor
out
loopne
outs
push
test
shl
pop
test
add
shr
pop
xor
in
call
mov
rol
outs
mov
fmulp
push
pushf
arpl
push
or
jl
inc
cmp
mov
push
in
sahf
jmp
jecxz
adc
ret
pop
adc
mov
cdq
inc
jl
in
loope
pop
dec
jne
cmp
ror
aas
xor
inc
adc
ins
(bad)
xor
and
ficomp
repz
or
add
dec
popf
mov
xchg
mov
or
xor
lods
neg
(bad)
loopne
lods
push
addr16
ins
fisub
or
xor
cs
mov
and
xchg
push
in
into
scas
stc
and
push
frstor
push
pop
xchg
ja
mov
sub
jmp
dec
frstor
test
test
retf
or
cmp
or
mov
inc
xor
fcom
jne
movs
das
stos
pop
and
sbb
xor
bound
mov
add
sbb
les
les
cdq
(bad)
sbb
fdiv
mov
popa
lods
xchg
js
pop
out
jns
dec
mov
jle
and
test
lahf
pusha
int3
shl
in
and
adc
sti
pop
or
jle
outs
mov
jecxz
sbb
ror
daa
stos
fmul
sbb
push
xor
pop
(bad)
mov
jae
inc
lods
mov
jo
movs
push
repnz
rol
ffreep
push
push
mov
loopne
out
nop
ja
out
dec
ds
fcom
sar
mov
inc
add
out
xchg
inc
inc
mov
imul
push
lods
test
pop
push
xchg
sbb
popf
xor
jle
lods
mov
call
data16
cs
and
add
mov
pop
cmps
das
repz
push
out
mov
test
inc
test
(bad)
leave
mov
rol
add
xchg
mov
sub
or
or
sub
test
fld
mov
xchg
(bad)
jne
cmp
sub
mov
add
stc
jno
add
in
lods
xor
movs
push
mov
xor
xor
int
xchg
lds
adc
(bad)
arpl
stos
outs
adc
out
in
pop
cmp
pop
push
or
lock
sub
and
mov
mov
rcl
jge
mov
sub
and
xor
push
(bad)
cwde
pop
fmul
mov
sahf
(bad)
in
xchg
shl
hlt
jo
push
and
popf
shl
cmps
sub
cwde
adc
pop
shl
inc
sub
hlt
xor
ins
cdq
cdq
dec
call
xor
mov
fdiv
jae
inc
cwde
or
das
sbb
test
add
add
cmp
pop
lock
push
xchg
out
js
out
mov
xchg
cmc
ja
mov
xor
xor
imul
icebp
(bad)
(bad)
ins
cmps
nop
push
jl
push
inc
mov
xchg
mul
mov
fnstenv
cs
dec
stc
ss
pop
outs
clc
xchg
(bad)
icebp
clc
xchg
out
dec
popf
and
fdivr
jbe
(bad)
sbb
jb
adc
jle
in
inc
test
mov
adc
mov
sbb
add
or
jecxz
lds
dec
xchg
fmul
jne
(bad)
icebp
inc
rcr
ja
outs
mov
sub
pushf
inc
out
xchg
sbb
sbb
sbb
adc
mov
fmul
jecxz
push
or
sahf
movs
sbb
push
inc
xlat
mov
push
xchg
dec
push
dec
dec
out
push
pop
cmp
test
movs
pop
leave
add
iret
cmp
icebp
enter
lock
sub
xor
dec
pusha
into
inc
push
cmps
cmp
fist
sbb
ret
aas
loopne
xor
(bad)
pusha
and
retf
aaa
mov
cmps
daa
sbb
pop
push
imul
std
mov
mov
pushf
ds
pop
jp
pop
(bad)
in
dec
leave
retf
and
cmc
jmp
jns
in
ret
inc
adc
xor
je
jns
jns
imul
mov
jecxz
pop
loop
sub
push
add
ret
pop
call
test
sub
inc
(bad)
outs
adc
cvtdq2ps
loope
and
sbb
or
fiadd
jmp
mov
or
push
repnz
das
or
ins
pop
repz
lock
fucomi
repz
pop
ins
test
idiv
cmp
scas
lahf
cdq
pop
mov
out
jmp
into
pop
sub
lods
fsub
ja
arpl
or
add
add
rcr
sbb
push
repnz
sahf
or
or
sti
sar
cmp
mov
or
add
mov
fistp
dec
jnp
cli
adc
stos
sub
mov
mov
ds
les
dec
(bad)
ja
fldenv
and
push
mov
cs
cmc
fistp
push
pop
int
iret
in
or
enter
imul
and
pop
inc
inc
or
fwait
pusha
jecxz
xchg
aad
push
push
dec
dec
push
stc
shr
(bad)
aas
and
ret
bound
sub
imul
test
cdq
pop
adc
lods
fst
sub
push
jmp
mov
js
mov
shl
adc
arpl
push
popf
xor
psadbw
cmc
test
add
push
repz
hlt
mov
pop
cmp
cmp
imul
jnp
inc
jle
inc
inc
push
push
pop
dec
sbb
shr
(bad)
jno
adc
sbb
inc
mov
adc
push
sbb
push
sub
fisub
inc
test
sbb
xor
xchg
lds
scas
jns
push
ficom
xlat
cs
gs
mov
mov
cmc
mov
cmp
pop
cmc
shl
inc
shr
inc
inc
or
mov
cmp
retf
dec
clc
or
mov
jp
xor
xor
xor
cs
mov
int3
xlat
jmp
mov
xor
call
cs
mov
in
call
cmp
stc
fiadd
(bad)
mov
push
push
pop
or
jmp
cmps
xlat
dec
outs
xchg
ss
dec
sbb
cmp
cmp
add
add
pop
jno
sbb
mov
and
push
pop
loopne
push
ja
in
adc
sub
inc
iret
and
nop
ret
ret
sbb
loopne
nop
mov
jne
pushf
and
xchg
in
ret
jnp
dec
shl
outs
call
mov
sbb
movups
push
test
(bad)
(bad)
jmp
sti
cmp
std
inc
pop
jl
jne
add
pop
stc
fldenv
pop
idiv
pop
sub
sub
loopne
or
push
mov
scas
stos
xor
jp
mov
push
push
sbb
mov
sub
pop
psubusw
(bad)
xchg
adc
pop
(bad)
cld
dec
pop
(bad)
and
(bad)
outs
out
xchg
in
push
lahf
cmc
fucomp
stos
dec
nop
and
stc
ins
mov
addr16
jmp
cdq
pop
arpl
dec
rcl
or
fldenv
test
aaa
mov
rcr
dec
jb
test
jmp
xchg
les
push
popa
fs
mov
lock
outs
in
nop
mov
adc
test
fmul
movhps
sub
add
repz
fnsave
sub
in
pop
and
cmp
arpl
aaa
mov
shl
mov
mov
sbb
and
and
test
mov
lds
rcr
in
mov
aam
xchg
adc
lahf
inc
scas
push
mov
xor
push
mov
sbb
lahf
fistp
std
or
ins
jo
lock
mov
arpl
push
shl
sbb
push
push
in
aaa
stos
loopne
ret
dec
adc
fist
pop
lds
mov
addr16
inc
jge
lock
sbb
push
mov
jbe
add
pop
xor
cmp
push
idiv
lahf
(bad)
ins
lods
dec
xor
aas
into
sbb
popf
inc
test
xor
and
into
outs
paddq
jnp
xchg
push
xchg
xchg
adc
test
xor
and
aas
push
adc
les
jno
fwait
dec
retf
cdq
lods
test
jecxz
les
clc
ds
mov
retf
mov
xchg
std
sub
mov
pushf
add
push
mov
push
dec
movs
mov
loopne
je
cwde
jg
adc
fist
aas
sti
cmp
stos
(bad)
outs
dec
retf
mov
mov
enter
fbstp
mov
jae
and
push
nop
xor
adc
call
popa
push
pushf
daa
xor
nop
dec
mov
enter
push
arpl
pop
scas
pop
and
jne
ja
mov
sub
out
and
dec
mov
jbe
frstor
mov
jno
aam
mov
rol
stos
outs
stos
push
sub
test
fdiv
sbb
push
es
inc
pop
jne
inc
pop
inc
or
or
mov
xchg
jns
jmp
mul
add
add
out
(bad)
fist
sbb
fstp
in
cmps
dec
and
aas
pop
in
(bad)
clc
cmc
ja
outs
dec
in
sub
xor
cmp
lds
and
and
mov
imul
mov
retf
pop
inc
cli
out
push
inc
js
jo
in
aad
add
xor
or
sbb
pop
jns
dec
(bad)
xor
and
add
data16
pop
cs
sub
sub
sbb
stos
aas
pop
bound
xchg
(bad)
loope
je
adc
mov
fwait
or
xlat
ror
pop
mov
scas
arpl
dec
push
ins
pop
(bad)
ds
addr16
mov
ds
jg
jge
sub
jge
mov
xor
fld
repnz
jge
and
xor
out
sub
dec
dec
add
das
push
call
xchg
icebp
fbld
sub
mov
pusha
arpl
mov
jl
jno
mov
jmp
pop
ret
push
shl
jmp
lahf
lock
stos
stos
imul
cmp
lds
ret
int
in
mov
pop
push
inc
adc
and
jns
int
in
mov
jmp
icebp
or
movs
imul
adc
pop
or
add
push
mov
ret
les
jmp
call
arpl
arpl
xor
mov
mov
cmc
mov
or
and
add
pop
pop
std
cmp
ja
inc
push
rcl
cli
or
cdq
ret
xlat
or
test
shl
mov
push
mov
lods
pop
dec
in
and
pop
push
(bad)
jnp
pop
or
and
xor
enter
sub
and
in
mov
pop
cvtdq2ps
out
lock
mov
push
xchg
scas
sbb
inc
or
retf
ja
mov
dec
xor
mov
js
stc
je
sub
mov
jae
js
xchg
pop
test
add
and
repz
xor
lock
mov
aam
lea
fnstcw
call
ss
gs
div
xor
(bad)
cmps
rcl
inc
je
in
movs
or
dec
pop
push
loopne
ret
rcr
bound
ins
ror
es
mov
ins
outs
pop
and
mov
loopne
mov
mov
sbb
cli
cmp
shr
(bad)
nop
call
cmp
mov
adc
pushf
mov
fbstp
(bad)
push
xchg
pop
cmc
dec
daa
jg
push
mov
mov
leave
jbe
call
jmp
add
mov
pop
pop
fidiv
mov
and
lea
adc
clc
xchg
jae
loope
clc
and
rcr
lods
sub
add
adc
in
push
adc
out
lods
and
aas
aas
and
popf
std
stc
xchg
ror
jae
test
clc
fld
dec
lods
mov
call
inc
and
test
inc
mov
fstp
pop
push
outs
std
call
stc
sar
dec
sub
jo
xchg
xor
xchg
adc
jno
or
dec
inc
ss
ss
pop
in
adc
xor
out
dec
ss
scas
aaa
cmc
jbe
daa
std
cmp
xchg
(bad)
jp
rcl
lock
iret
sbb
retf
inc
pop
stc
mov
push
outs
jns
jmp
les
jae
jle
ror
pop
dec
rcr
dec
pop
enter
scas
xchg
jp
mov
fdiv
lock
mov
xchg
adc
dec
push
cmp
scas
and
xchg
dec
jg
push
frstor
and
jmp
and
shr
xor
fistp
test
out
push
jge
fwait
icebp
adc
fidivr
or
sub
pop
xchg
mov
xor
inc
js
add
push
mov
fsub
sub
mov
sahf
fisttp
dec
in
fcom
jb
sub
sub
shl
mov
test
mov
mov
inc
push
rcl
mov
pop
mov
jmp
pop
cmp
fwait
inc
and
xchg
leave
fistp
ins
cwde
cwde
(bad)
repnz
ret
mov
inc
inc
add
arpl
and
push
push
vcvtsi2ss
shl
and
push
mov
fld
mov
les
mov
cmp
mov
pop
stos
rol
mov
jae
jbe
into
clc
cmp
lahf
mov
sbb
or
xchg
inc
sub
mov
in
mov
into
fst
dec
inc
adc
or
xchg
leave
cmps
inc
(bad)
xchg
jmp
iret
stos
adc
or
sbb
into
aad
data16
add
fsubr
dec
dec
dec
les
in
ins
cmp
sbb
jb
dec
adc
sti
or
rcl
ja
pushf
das
sbb
je
xor
cmp
dec
ror
fnstsw
out
jbe
mov
mov
xor
es
sub
push
pop
fadd
adc
js
ror
dec
inc
mov
dec
jmp
inc
pop
je
loop
fwait
and
(bad)
imul
imul
mov
cld
jns
mov
and
xor
or
lea
addr16
sub
sub
mov
addr16
adc
int
jmp
pop
jb
or
leave
jmp
inc
cli
sbb
ins
mov
jno
mov
call
(bad)
push
nop
xchg
or
adc
sub
mov
xchg
jp
arpl
shl
inc
mov
mov
dec
adc
mov
mov
and
jnp
xor
cmc
pop
movs
ret
test
jmp
push
xor
push
out
push
xor
cmp
xchg
jno
enter
push
call
lea
in
push
dec
mov
mov
inc
aas
fild
mov
gs
out
pop
rcr
adc
popf
sti
arpl
(bad)
cs
std
pop
mov
sahf
or
mov
xlat
sbb
mov
mov
push
mov
sbb
cdq
cmp
mov
cwde
inc
dec
aam
push
test
ds
clc
cld
sbb
xlat
int3
mov
and
(bad)
stc
pop
pop
or
out
sti
cli
jp
jg
fist
jle
mov
xchg
jns
gs
call
mov
fcomi
cmp
in
add
push
fsubr
mov
mov
clc
cmp
push
outs
ret
adc
adc
mov
repz
adc
cmc
mov
rcl
ret
shr
add
ret
push
das
movs
repnz
or
test
xor
out
mov
inc
adc
cmp
scas
add
inc
mov
or
jno
icebp
fmul
ja
pop
pop
add
mov
sub
jge
sub
cmps
lea
dec
inc
sbb
jo
cmp
mov
dec
mov
js
int3
das
jle
mov
ss
(bad)
mov
pop
ins
sbb
int3
sbb
jl
ret
mov
mov
xor
shl
inc
in
out
retf
mov
in
int3
push
mov
mov
cmp
or
or
(bad)
imul
out
das
ja
push
cmp
push
or
sub
dec
xchg
ds
adc
(bad)
jo
sub
leave
mov
mov
retf
pop
jo
in
xor
neg
movs
enter
mov
loope
xchg
and
test
sbb
and
lahf
nop
xchg
jnp
das
stos
mov
sbb
cmp
js
sar
into
in
fbld
test
pop
jno
inc
push
popf
mov
xor
fisttp
sbb
cdq
inc
cmp
cld
mov
fist
sub
ins
rcl
fild
loope
je
cwde
mov
rcl
push
mov
add
adc
xor
test
mov
jae
pop
dec
push
cmps
mov
inc
or
out
ror
pop
pop
inc
pop
ret
icebp
sti
cmp
cli
imul
dec
add
popf
add
pop
and
add
nop
in
push
pop
sub
push
(bad)
inc
loope
in
stc
cmp
pop
xchg
lods
sahf
jae
mov
dec
mov
add
mov
stos
inc
lock
out
pop
and
xchg
sub
or
sar
(bad)
leave
sahf
pop
or
fcmovne
sub
xor
ja
dec
hlt
push
ficom
cmp
out
sbb
in
cmp
mov
mov
inc
test
sub
sub
fldcw
es
sar
inc
and
sub
jno
aad
cmps
into
ja
imul
dec
jnp
dec
dec
cmps
xor
std
mov
inc
mov
jmp
jl
sbb
sub
mov
adc
jle
call
and
cli
push
mov
pop
ss
outs
jg
shl
daa
sub
sbb
movs
das
jmp
cli
ficom
ja
mov
ss
lea
pop
pop
push
jmp
scas
or
xlat
pop
sub
cwde
(bad)
cmp
inc
mov
lods
jno
mov
mov
arpl
add
fwait
mov
sub
aad
dec
ret
pop
popf
pop
mov
sti
ins
mov
xor
shr
fbstp
xor
fdiv
stos
jl
jbe
cwde
jmp
stc
dec
test
call
cmp
xchg
in
push
hlt
xlat
add
push
outs
loop
movs
jge
mov
cmp
mov
or
or
mov
push
sbb
lea
int
bound
push
test
inc
outs
inc
lahf
sbb
adc
rol
neg
loope
push
cwde
push
cmps
int3
in
sub
and
bound
or
mul
es
and
mov
pusha
xor
ret
mov
add
mov
imul
xchg
and
popf
jle
xchg
fiadd
xchg
test
inc
xor
rol
std
(bad)
and
test
jle
data16
dec
mov
adc
push
sbb
call
shl
addr16
mov
add
pushf
cmp
xchg
std
dec
in
pop
outs
jp
ins
(bad)
fistp
pop
jle
xlat
std
mov
loope
inc
cmp
ja
loop
xchg
imul
pop
adc
scas
sub
cld
in
sbb
out
lock
idiv
fadd
jle
in
push
mov
fwait
or
jmp
into
ds
mov
pop
ins
pop
jmp
pop
push
mov
push
mov
stc
push
inc
inc
in
sub
sub
out
fs
push
mov
mov
add
mov
mov
pop
mov
out
arpl
cmp
sub
dec
and
les
jl
ret
popa
addr16
sub
push
push
xchg
ret
fndisi(8087
cmps
xchg
mov
mov
lea
mov
lods
(bad)
push
pop
sbb
mov
or
cmps
(bad)
loope
sar
xlat
or
jl
adc
es
ror
cdq
mov
mov
jno
je
xchg
or
aas
xchg
test
js
cmps
fmul
sbb
int
push
icebp
test
xchg
mov
arpl
xor
and
stos
das
cmp
movs
or
mov
jb
fstp
imul
or
cmp
clc
push
xchg
iret
or
arpl
loope
push
rcr
dec
jmp
pusha
cli
sbb
das
and
idiv
sbb
lea
cmp
push
mov
xor
xabort
int3
mov
(bad)
pop
aam
lea
mov
test
in
xchg
sbb
sub
mov
or
pop
ret
test
sbb
jmp
xchg
and
mov
rcr
outs
lods
or
jle
mov
mov
fcomp
in
pop
add
push
push
retf
push
xchg
and
inc
test
mov
inc
jae
cmp
sar
jmp
les
pop
aas
dec
and
int
xchg
fnstenv
jmp
jmp
cmc
dec
cmc
popf
pandn
push
not
fldl2e
mov
in
sti
test
or
(bad)
mov
sar
dec
add
xchg
repz
inc
stos
mov
(bad)
mov
ret
mov
inc
clc
daa
dec
(bad)
xor
mov
xchg
inc
mov
std
push
clc
and
add
cdq
cmp
daa
jbe
push
std
in
mov
cmps
ret
int
adc
jle
out
movs
(bad)
jo
xor
inc
ret
pop
push
xor
loopne
div
(bad)
jmp
xor
scas
cmps
(bad)
jbe
jbe
(bad)
out
stc
nop
mov
lahf
neg
or
cmc
inc
ins
nop
in
icebp
pop
popa
dec
xor
dec
inc
and
pop
test
in
fcomp
icebp
data16
mov
push
ins
and
nop
mov
adc
(bad)
mov
add
push
adc
xor
in
ins
out
jnp
test
push
or
(bad)
xor
es
es
clc
popa
mov
xor
imul
and
pushf
or
dec
xchg
imul
lahf
dec
dec
pop
cld
adc
inc
retf
push
mov
push
cmps
scas
pop
ret
int
cmps
cmps
ret
or
imul
sbb
pop
jmp
lods
sub
pop
add
aas
pop
jecxz
icebp
cmp
adc
aaa
mov
xlat
ss
xor
ins
pop
fldcw
dec
cmp
fs
ror
shl
cmp
jmp
call
or
ror
mov
ret
das
dec
fstp
push
add
jl
fmul
imul
arpl
not
imul
imul
mov
jp
iret
ins
enter
mov
sub
retf
jle
aas
xor
sar
or
push
addr16
repnz
jmp
push
mov
xchg
les
adc
xchg
mov
mov
jmp
retf
dec
sub
inc
xchg
sti
fstp
cli
and
loopne
fs
in
push
cmp
adc
dec
fwait
cs
or
xchg
push
and
int3
push
and
jmp
cmp
xor
sbb
adc
xor
adc
cmp
cmp
adc
dec
stc
xchg
add
sahf
xchg
inc
mov
aas
add
push
(bad)
jmp
dec
ds
stos
mov
bound
or
jmp
je
inc
mov
push
in
popf
nop
jmp
shl
callw
inc
and
mov
mov
aaa
stos
dec
mov
cmps
inc
imul
mov
jbe
xor
je
or
gs
mov
mov
mov
mov
xor
enter
inc
(bad)
pop
ds
jns
sbb
inc
add
les
or
test
shr
das
ds
call
push
sub
jne
pusha
push
(bad)
mov
mov
int
sbb
xchg
(bad)
cmp
xlat
das
nop
repnz
sub
mov
add
cmc
sbb
xchg
imul
push
jle
call
and
into
ds
push
sub
fbld
mov
dec
mov
in
fidiv
(bad)
lock
sub
(bad)
dec
and
fild
ret
fdivr
xchg
lds
ins
add
ret
add
xor
jns
sbb
mov
dec
out
xchg
and
inc
in
aam
fstp
and
test
rcr
jne
je
jmp
adc
mov
mov
cld
jns
jmp
xchg
mov
test
lods
iret
(bad)
push
mul
sti
mov
pop
mov
imul
les
aam
cli
and
mov
sahf
xor
jl
adc
jnp
loop
dec
cli
iret
int3
repz
xchg
dec
out
lahf
mov
test
scas
rcr
out
xchg
stos
mov
xchg
xor
xchg
movs
hlt
pop
mov
frstor
cs
out
push
ret
mov
lods
mov
sti
or
sub
rcr
push
dec
fldcw
std
in
jae
push
xchg
fmul
out
pop
retf
in
repz
in
outs
xor
popa
loop
test
and
fsubr
xchg
mov
sbb
fldcw
out
ret
mov
cmp
retf
mov
push
inc
mov
stos
lock
cmp
into
lock
pop
daa
push
xor
lock
mov
pop
dec
(bad)
push
sub
mov
mov
add
daa
lahf
dec
mov
call
fcomp
hlt
mov
les
sti
int3
xor
imul
xor
cmp
jbe
jl
in
jne
jmp
dec
fdiv
mov
je
jmp
xor
mov
jp
add
push
arpl
add
aas
xor
arpl
mov
(bad)
dec
sbb
call
(bad)
idiv
daa
repnz
dec
out
fist
or
mov
cdq
or
inc
repz
push
js
jmp
(bad)
cmps
and
ret
mov
jmp
adc
ror
lods
push
adc
shl
hlt
xchg
pop
aad
mov
add
jp
dec
fisttp
shl
xchg
test
mov
fnstsw
outs
push
push
stos
mov
stos
in
sbb
mov
stos
or
sub
or
stc
or
xor
(bad)
retf
cmps
sti
pusha
add
xchg
ss
in
aam
mov
pop
xor
jmp
pop
and
jne
inc
mov
js
into
repnz
jmp
inc
mov
out
dec
(bad)
mov
jge
pop
jne
hlt
into
and
enter
dec
nop
xchg
into
xchg
or
mov
cld
inc
(bad)
cdq
int3
xor
inc
sub
and
ja
cmp
xor
sbb
nop
les
test
mov
pop
inc
or
push
jne
sub
xchg
out
mov
das
cwde
xor
mov
or
out
mov
aaa
jmp
in
rol
cdq
or
jp
jmp
call
sbb
in
imul
adc
imul
mov
and
mov
(bad)
xor
pop
mov
aas
mov
jae
mov
push
xchg
push
mov
lods
sub
fdivr
add
cmps
dec
ds
clc
sub
in
movs
sbb
cvtdq2ps
sub
sbb
push
jae
mov
push
sub
sub
out
pop
aas
fcmovnbe
dec
cli
add
mov
mov
dec
push
jmp
lds
mov
cwde
in
je
(bad)
test
addr16
enter
sub
cld
push
pop
mov
enter
inc
inc
cmc
inc
or
inc
push
cmp
jbe
push
rcr
into
pop
cli
enter
addr16
cwde
cmps
dec
mov
mov
xor
dec
fnstsw
les
retf
stc
out
loop
jo
cmp
retf
sbb
gs
fild
fxch
mov
pop
push
sbb
in
js
ficomp
(bad)
sbb
sahf
ret
je
mov
(bad)
cmp
pop
mov
push
mov
and
jp
fidivr
xchg
outs
movs
stc
sub
pop
xor
call
or
dec
cwde
in
push
pop
div
sti
pop
(bad)
int3
or
pop
xchg
push
jmp
dec
or
scas
xor
xor
jno
adc
push
and
dec
lock
inc
and
cli
xor
(bad)
idiv
and
aaa
aas
xlat
sbb
push
push
mov
jb
(bad)
nop
shr
mov
daa
ds
rcl
ins
int3
mov
xchg
xor
stos
and
xchg
mov
fwait
enter
call
les
add
std
pop
ins
ds
cmp
sti
add
pop
mov
pop
mov
push
jmp
mov
xchg
test
pop
cmp
cwde
adc
icebp
inc
fiadd
bound
lds
mov
scas
je
pop
dec
adc
ins
or
xor
mov
inc
hlt
mov
in
and
stos
sub
int
mov
cmps
xchg
ret
add
xchg
adc
xor
dec
cmc
dec
shr
pushf
ret
xor
pop
or
or
sbb
pop
add
(bad)
mov
cmp
and
pop
adc
push
sbb
call
rol
daa
mov
and
fisub
or
sub
xchg
popf
xor
dec
mov
dec
mov
sbb
fnstenv
call
pop
lock
xor
lods
push
jb
and
sub
aad
mov
inc
dec
jp
repz
cmp
inc
retf
ja
add
xor
outs
fisub
adc
stos
and
sahf
xchg
enter
outs
and
mov
inc
mov
mov
pop
or
in
pop
test
adc
cmp
and
cmovno
neg
lods
xchg
sub
xor
sub
mov
or
shl
dec
scas
cmp
mov
fiadd
out
push
pop
lods
(bad)
test
lock
test
pop
adc
pop
xor
aaa
icebp
popf
call
add
lds
leave
lock
retf
mov
(bad)
ins
int
or
mov
je
sti
hlt
cmps
jg
ret
adc
push
push
adc
and
(bad)
jmp
push
mov
in
fnsave
push
sbb
or
sti
mov
sub
sub
test
and
add
push
mov
dec
pop
sub
clc
dec
ss
dec
fistp
xchg
mov
int
not
xchg
stos
xor
push
adc
and
xchg
push
pop
push
pusha
pop
loop
data16
cli
cmc
bound
xor
inc
cmp
mov
movs
es
cmc
pop
dec
(bad)
sbb
push
out
hlt
repz
dec
add
mov
js
mov
fild
xchg
retf
mul
xor
xor
push
neg
dec
mul
mov
adc
cmp
dec
cs
push
jl
mov
lock
push
sub
out
jp
imul
xchg
rol
lock
nop
ret
aaa
pusha
xchg
int3
adc
cmps
jl
mov
(bad)
mov
jne
shl
ret
in
xor
and
ret
xchg
mov
not
pop
test
aaa
jne
mov
(bad)
repz
pop
jne
mov
jmp
xor
xchg
xchg
cmp
js
push
popf
cwd
js
call
mov
cs
sbb
or
js
ret
push
sbb
outs
jge
inc
mov
xchg
(bad)
cmc
pop
adc
jae
add
out
pop
loopne
ds
mov
add
or
js
push
xor
gs
sbb
pop
xchg
adc
rcl
int3
scas
clc
mov
ror
aad
ss
inc
and
sub
and
es
ins
test
xchg
lock
in
aad
add
mov
and
and
aam
xor
sub
dec
(bad)
jne
sbb
inc
cmp
push
pop
scas
xor
xchg
sbb
cwde
and
push
loop
movs
sub
repz
xchg
cmp
(bad)
into
push
dec
cli
pop
jp
add
outs
in
xchg
fsub
adc
ret
outs
iret
std
test
or
in
retf
out
aas
call
dec
or
arpl
ds
jo
sub
push
aad
repnz
stos
loope
call
test
push
mov
inc
xchg
jne
cwde
iret
iret
(bad)
fistp
jno
push
adc
idiv
sub
call
iret
jle
pcmpeqb
jbe
inc
mov
outs
fs
xor
fmul
jae
cdq
mov
cld
xchg
xor
scas
adc
push
in
sbb
popf
xor
xor
cmp
loopne
xor
in
mov
pop
ret
lods
scas
rcl
les
std
mov
repnz
ror
fidivr
xchg
test
mov
lods
sbb
add
ja
repz
or
fcmovu
cmp
push
and
pushf
inc
add
mov
pop
sbb
mov
add
mov
push
mov
adc
ja
mov
addr16
mov
stos
jg
sbb
in
inc
jmp
pop
fld
jle
leave
outs
clc
adc
fdivr
dec
or
add
dec
icebp
push
in
xchg
mov
add
mov
cld
shl
daa
xlat
repz
sbb
arpl
add
mov
js
jno
mov
pop
jmp
ror
mov
sbb
jge
icebp
push
jmp
(bad)
or
cmps
pop
push
and
fwait
int
repnz
mov
pop
push
mov
enter
sub
cmp
sbb
mov
movs
pusha
hlt
or
sbb
push
out
out
jmp
xchg
ss
jno
lea
xchg
es
mov
fstp
fisttp
xchg
mov
cmps
or
mov
cmp
xor
lods
xchg
mov
enter
out
int
mov
div
adc
and
and
aas
ss
shl
retf
push
retf
or
loopne
pop
dec
out
ja
sub
push
in
(bad)
jns
and
sbb
not
imul
push
sbb
and
sbb
adc
lds
jge
or
or
cmp
jno
test
ja
inc
retf
call
mov
inc
lds
mov
dec
scas
jmp
add
scas
dec
into
test
mov
ret
add
ds
dec
(bad)
adc
mov
mov
mov
mov
dec
stos
int3
fsubr
ins
(bad)
sub
jbe
sti
call
mov
cmp
xchg
pop
push
fxch
inc
inc
or
pop
(bad)
in
push
fcomp
lahf
sub
rol
add
sbb
and
push
sbb
fst
fisub
outs
jmp
and
xchg
sbb
ja
mov
push
and
and
and
sub
add
out
adc
fistp
fdivp
addr16
inc
imul
jne
rcl
sbb
mov
mov
jno
clc
leave
das
xlat
popa
icebp
bound
cmps
sbb
int
pushf
add
xchg
and
add
leave
fisub
stos
fdiv
call
mov
adc
jns
xchg
xchg
sub
sbb
cmp
adc
fsqrt
xor
pop
cld
mov
lock
push
pop
stc
and
jmp
sub
push
mov
pop
dec
lds
cli
out
push
xchg
ds
and
daa
stc
fldenv
mul
sbb
push
mov
mov
iret
sub
and
fwait
inc
inc
scas
pushf
add
adc
jns
stos
ficom
lods
push
mov
push
shl
jb
outs
pop
and
cmps
sub
add
outs
in
xchg
mov
aas
out
jne
loopne
cs
sahf
aas
xchg
cmps
mov
bound
push
push
aas
mov
fisub
cmp
retf
mov
stc
mov
aas
jl
cmps
in
pop
ins
and
sub
mov
shr
inc
mov
fbstp
push
jae
jmp
add
sbb
ja
scas
int3
nop
push
popf
adc
clc
test
je
jo
xchg
xchg
test
dec
rcl
ror
sbb
lds
jecxz
cmp
add
dec
inc
xchg
sub
out
pop
jmp
enter
or
xor
shl
xchg
ins
xchg
cli
mov
push
pop
jmp
jl
addr16
dec
in
sub
pop
into
jl
xlat
stos
(bad)
(bad)
dec
dec
out
fwait
test
repz
das
push
mov
shl
and
es
jmp
jecxz
mov
jne
pop
cbw
inc
dec
(bad)
xchg
xchg
push
and
pop
and
test
dec
(bad)
mov
icebp
adc
mov
mov
mov
xchg
hlt
int3
dec
fucomi
add
xchg
sub
sub
adc
retf
or
and
shl
lods
rcr
xor
call
call
push
pop
adc
inc
sub
mov
scas
cmp
add
(bad)
push
adc
fistp
aam
test
dec
xor
pop
pop
retf
mov
ret
mov
xchg
rcr
sbb
inc
in
mov
test
sub
jae
dec
ds
mov
xchg
loop
push
cmps
cmp
sbb
(bad)
jmp
stos
cmp
jne
pop
call
cmp
mov
cdq
mov
adc
rcr
mov
xor
mov
gs
jg
retf
jns
pop
shr
nop
loope
push
add
xchg
and
pop
pop
sbb
add
jg
sahf
sbb
pop
scas
jle
rcr
push
pop
xchg
sub
aas
imul
lods
rcr
mov
jb
mov
jecxz
xchg
mov
icebp
xchg
xlat
cmc
retf
cdq
cwde
xchg
fimul
jl
stos
(bad)
mov
xchg
cmp
adc
push
add
jnp
mov
cwde
stos
retf
lahf
loopne
leave
dec
into
ins
cmp
cdq
mov
xor
inc
dec
xchg
outs
pop
push
pop
sbb
inc
ins
xor
xor
sbb
test
pop
mov
mov
mov
in
jbe
inc
jb
jo
stc
scas
clc
repz
mov
cmp
cmp
jg
out
sar
jnp
mov
lock
outs
mov
jo
retf
imul
movs
mov
lahf
jg
and
test
xchg
stos
loope
add
imul
cli
sbb
push
push
out
push
cmp
mov
cmp
cmp
mov
inc
push
mov
aad
aam
es
div
push
and
or
aam
(bad)
or
es
xlat
loop
(bad)
loope
fnstcw
jp
cs
xlat
mul
mov
mov
call
cli
stc
push
ror
into
xchg
pop
es
and
sub
xchg
adc
fwait
je
sub
fistp
fs
mov
imul
ss
fs
mov
daa
jmp
mov
movs
pop
and
int
aam
jecxz
scas
cmp
pusha
add
mov
int3
or
sub
pop
data16
aas
or
(bad)
(bad)
adc
aam
sbb
dec
ss
cmp
js
jbe
xchg
test
not
xor
pop
in
push
test
shl
and
cmp
pusha
and
or
scas
mov
cdq
push
(bad)
pop
and
repnz
test
rcr
dec
sub
idiv
in
push
rcr
xor
gs
push
inc
call
add
jb
jp
xchg
push
lods
sub
cld
jp
nop
mov
or
in
pop
addr16
adc
sub
sub
bound
shl
sbb
xlat
shr
retf
mov
cmp
imul
pop
leave
cmp
rol
cmp
retf
mov
adc
dec
jo
(bad)
cs
std
push
mov
sbb
xchg
lods
nop
loop
mov
mov
xor
mov
scas
mov
(bad)
aaa
adc
loop
xchg
cmc
and
out
jae
push
jmp
out
gs
xor
cmp
or
and
sahf
jmp
std
dec
ret
cmp
pop
out
push
stos
push
mov
in
iret
call
or
pop
adc
and
shr
sbb
retf
mov
jmp
jmp
inc
or
loope
sub
into
push
imul
ss
xor
jbe
fstp
fstp
jne
dec
into
popa
loope
inc
and
sbb
ins
or
outs
in
fwait
pop
fucomip
pop
imul
xor
mov
inc
xor
shl
movs
inc
push
add
pop
gs
jne
and
fdiv
xchg
dec
jl
inc
push
and
fisttp
push
mov
xchg
inc
sub
rcr
mov
xor
mul
dec
jae
arpl
pop
mov
mov
in
mov
cmc
mov
inc
mov
adc
inc
scas
pushf
jae
or
test
repnz
add
cmp
cwde
outs
mov
inc
(bad)
or
inc
in
daa
xor
or
call
cs
or
aaa
icebp
loopne
or
mov
dec
test
jo
inc
repz
test
xchg
stos
xor
sti
cli
push
add
adc
xor
stos
ret
sub
(bad)
push
lea
pop
jp
daa
div
sbb
mov
jle
nop
imul
mov
push
sbb
add
sti
lods
sub
mov
xchg
pusha
pop
add
mov
lock
mov
popf
inc
and
mov
xchg
and
push
movs
data16
jmp
push
ins
(bad)
push
mov
pop
jecxz
iret
inc
sbb
jg
pusha
xor
mov
mov
push
scas
jne
adc
or
test
dec
popa
repnz
aad
rcl
xchg
retf
in
xor
or
xor
les
mov
pop
mov
and
out
mov
mov
(bad)
cmps
das
mov
sub
fcomp
inc
dec
stos
and
push
adc
outs
fldcw
pop
jbe
loopne
jae
cmp
add
data16
fimul
sbb
jno
icebp
mov
mov
in
lods
cmp
(bad)
ror
lea
mov
push
dec
xor
xor
retf
add
daa
sub
movs
dec
clc
into
es
sub
scas
adc
cmps
sahf
gs
lock
call
pop
nop
daa
pop
cmp
mov
push
sar
out
mov
cli
(bad)
stos
pop
pop
out
retf
js
pop
repnz
push
xor
int3
imul
jb
and
data16
dec
das
mov
push
xchg
mov
inc
push
inc
mov
pop
or
jmp
lock
jmp
pop
cwde
mov
and
and
jle
push
lods
shl
xchg
shl
jmp
jl
adc
xchg
dec
mov
pop
push
test
dec
mov
xor
xchg
arpl
or
les
xchg
into
dec
mov
cld
sbb
std
sbb
add
ins
mov
in
cwde
dec
jmp
mov
add
or
mov
dec
dec
xor
sub
jl
out
icebp
jmp
jle
push
jb
mov
ds
sbb
test
or
fdivr
mov
adc
pop
push
jle
sbb
adc
sub
dec
retf
loop
lock
mov
mov
cmp
shl
rcr
adc
ss
div
jne
stc
jno
rcl
inc
stos
mov
mov
jge
test
lahf
hlt
jo
mov
pop
mov
push
lahf
adc
pop
pop
lods
dec
xchg
out
(bad)
scas
cmc
out
inc
or
sub
sbb
adc
ins
cmps
movs
aad
out
jmp
cmovne
scas
ja
add
mov
mov
lea
jmp
scas
cmps
xchg
div
pop
and
fwait
leave
(bad)
push
es
cli
(bad)
mov
mov
dec
into
in
test
jo
movs
pop
fmulp
aam
inc
imul
sub
(bad)
or
mov
sub
stos
jecxz
cmp
mov
notrack
std
sbb
stos
inc
jae
lods
int3
pusha
cmp
fs
mov
mov
inc
js
fistp
stos
int3
js
push
cmp
icebp
sbb
jle
aam
lock
sbb
outs
dec
cmc
jl
fist
fprem
jnp
add
lds
sar
rol
push
loopne
cli
popa
and
inc
repz
mov
or
leave
jne
mov
mov
jmp
not
mov
jge
or
test
cdq
idiv
pusha
fidivr
inc
push
inc
xchg
outs
jae
dec
mov
mov
push
and
inc
loope
stos
pop
ds
xchg
test
push
sub
es
or
sub
cmovo
dec
sbb
jp
into
frstor
lahf
(bad)
(bad)
and
mov
out
(bad)
mov
mov
iret
repz
mov
loop
sbb
fs
fild
mov
out
arpl
add
ins
int
loop
push
or
add
and
inc
push
or
xor
cwde
xlat
push
dec
or
inc
(bad)
adc
xor
pop
sbb
ja
inc
xor
inc
pop
push
add
pop
mov
stc
int3
xor
inc
ret
loop
mov
cmp
dec
inc
push
or
sub
outs
jmp
rcr
das
shl
adc
mov
call
inc
push
adc
ds
aas
push
adc
in
mov
dec
lods
or
cmp
retf
xor
aaa
or
outs
mov
hlt
(bad)
fist
xchg
iret
xchg
test
aaa
xchg
xchg
mov
mov
sub
pusha
stos
push
xchg
movs
jne
sti
aam
and
pusha
xor
xor
and
add
idiv
pop
mov
ins
push
add
pop
ja
add
ret
das
mov
ret
add
shr
inc
sub
xchg
sahf
xor
lea
and
cmp
jl
cmps
and
add
sbb
iret
cs
jo
movs
stos
nop
js
fs
and
(bad)
jnp
or
(bad)
pop
jns
ins
fabs
sbb
mov
inc
in
cli
call
cmp
stos
test
mov
arpl
lock
adc
in
dec
lea
dec
ret
push
enter
lock
mov
(bad)
mov
sbb
push
mov
lock
repnz
sbb
jne
xor
movs
xor
or
jno
adc
pop
fisubr
pop
cmp
js
shl
jl
sbb
push
bound
mov
rol
imul
cs
xor
out
out
adc
repz
pop
es
std
sbb
xchg
repz
push
xchg
pop
pusha
push
and
inc
push
addr16
fnstenv
out
fs
push
and
jmp
lods
mov
les
mov
pop
jge
cld
mov
xor
mov
sbb
xor
jge
mov
in
dec
fcomp
mov
and
ret
mov
sub
call
mov
(bad)
adc
cs
adc
push
xchg
mov
scas
adc
into
(bad)
push
scas
sbb
jbe
fdiv
ja
retf
std
mov
adc
test
pop
xchg
mov
mov
sbb
addr16
sti
add
fucomp
clc
jbe
sbb
stos
or
pop
data16
bound
mov
inc
add
add
ins
rol
mov
fidivr
pop
(bad)
in
pop
ja
sub
loop
mov
daa
or
dec
jmp
push
mov
jmp
xor
xchg
fisttp
mov
jg
inc
sub
or
lds
mov
daa
cs
ins
mov
cmp
and
ins
lahf
imul
shr
dec
inc
ja
bnd
and
adc
scas
cdq
and
and
pusha
daa
ins
gs
mov
inc
xor
fidiv
inc
ds
dec
aaa
nop
les
and
inc
jne
xor
inc
push
dec
xor
hlt
push
mov
ja
fild
push
ds
sub
aad
out
pop
stc
xchg
mov
stos
mov
(bad)
and
daa
mul
dec
retf
jecxz
movs
xchg
cmp
mov
mov
cmp
sub
inc
dec
pop
push
enter
push
es
call
ret
rcl
xor
xor
jmp
push
push
sbb
push
adc
cli
mov
loopne
test
and
pop
cmp
pop
sbb
or
loopne
add
xor
mov
cmp
(bad)
push
stos
js
push
sbb
dec
or
adc
cld
push
mov
les
cli
mov
mov
ins
xchg
push
jmp
pop
outs
and
mov
iret
sub
xor
dec
and
enter
mov
data16
jo
out
jnp
idiv
aas
imul
adc
sahf
sub
retf
out
leave
into
or
nop
cwde
adc
pop
das
pushf
and
ret
int3
repz
stos
jo
scas
(bad)
jmp
add
or
scas
les
ins
jnp
les
scas
pop
fwait
mov
adc
mov
dec
js
dec
int
cmp
retf
mov
lods
mov
mov
cmp
inc
mov
cdq
jmp
mov
push
lock
jnp
std
scas
ins
inc
dec
and
clc
xchg
sbb
push
mov
adc
jle
jo
xchg
psubusb
movs
cdq
dec
scas
gs
cmps
xlat
mov
add
dec
(bad)
aaa
lds
stos
(bad)
or
push
leave
inc
add
retf
inc
sti
(bad)
xchg
(bad)
cmp
adc
stc
popf
ds
add
push
add
popf
add
xor
fs
call
jmp
imul
cwde
jmp
lods
lea
aad
lods
jno
jg
adc
ror
out
push
stos
or
adc
pop
jg
dec
scas
mov
adc
in
ret
fcomp
mov
lods
jnp
jne
nop
cmps
xor
pop
xor
pop
lahf
in
push
add
icebp
jno
data16
cwde
and
add
add
xchg
mov
add
jnp
push
ds
pop
(bad)
cmp
add
in
xor
pushf
xlat
cmps
push
ret
push
mov
lods
popa
and
dec
in
retf
dec
(bad)
cwde
retf
movs
mov
inc
das
and
pop
or
xor
xchg
xchg
cmp
sbb
scas
and
jb
aam
xchg
cmp
icebp
or
inc
loope
cmp
lods
bound
add
outs
fnstenv
jmp
mov
adc
sbb
mov
mov
adc
inc
and
inc
aas
dec
adc
in
mov
in
aad
dec
xchg
mov
inc
push
jge
mov
push
inc
mov
stos
int
xchg
adc
movs
add
int
mov
ins
cmc
jl
rep
loopne
sub
call
cmp
mov
inc
test
jb
(bad)
(bad)
xchg
sub
lods
pop
ins
sub
sbb
sub
das
nop
cdq
into
out
stos
inc
imul
and
clc
or
stos
or
(bad)
call
neg
div
loope
cmps
dec
(bad)
fdiv
rcl
fisttp
mov
stos
inc
dec
in
jl
fadd
in
pop
mov
(bad)
jnp
mov
jne
movs
fmul
mov
retf
(bad)
in
push
fimul
enter
mov
mov
aaa
xor
pop
push
add
pop
push
xchg
mov
add
cmp
pop
push
and
pop
jmp
cmp
inc
and
jbe
push
cmps
ins
les
or
sub
jno
jp
out
push
jnp
jae
xchg
(bad)
fist
or
fcmovne
aaa
push
cmps
aas
xchg
pop
je
xchg
pusha
and
repz
rcl
xchg
outs
push
cld
push
icebp
fdivr
pop
jno
mov
and
inc
outs
fsub
push
jmp
loopne
ins
mov
jge
popf
test
fimul
inc
pusha
xchg
sbb
lds
lahf
(bad)
popf
ins
mov
mov
sbb
loop
inc
dec
iret
xchg
sahf
mov
adc
push
push
repz
cmp
push
cdq
outs
repz
cmp
jp
mov
bound
ficom
fsubr
fidiv
jle
test
jge
xchg
movs
(bad)
(bad)
out
cmps
dec
out
add
dec
add
imul
cmp
pop
das
jecxz
push
in
les
(bad)
sbb
dec
ss
xlat
fs
aam
pop
scas
adc
pop
ret
add
imul
(bad)
mov
(bad)
cmp
xchg
sub
mov
(bad)
xor
push
jo
push
sahf
sub
mov
jle
fistp
pop
nop
sub
push
mov
xchg
or
cmp
jo
sub
loope
and
(bad)
push
mov
arpl
add
xchg
loope
mov
out
shl
sti
icebp
jae
in
add
pop
mov
mov
cdq
retf
inc
cmp
cld
adc
popa
mov
inc
aas
cmps
mov
push
pop
(bad)
shr
cmp
inc
xor
std
mov
je
aaa
mov
mov
ja
jp
or
xchg
dec
sub
leave
aam
aas
mov
loop
jg
cmp
pop
clc
cmc
pop
adc
jge
cmp
jp
mov
pushf
mov
mov
jbe
add
lock
jg
push
xor
(bad)
sbb
and
mov
add
stos
mov
sbb
jno
aad
stc
test
push
daa
cwde
mov
ret
daa
lods
rol
(bad)
cwde
add
stc
dec
sbb
adc
mov
push
mov
jmp
add
mov
out
bound
and
fild
and
mov
loope
fnsetpm(287
jle
int3
mov
scas
sub
mov
loop
lods
into
push
add
mov
icebp
mov
dec
fdivr
sub
and
(bad)
mov
jle
and
push
mov
jmp
xchg
and
xor
push
(bad)
sahf
std
rcr
xor
es
lods
test
push
push
cmp
jno
inc
js
je
inc
xchg
jmp
(bad)
out
push
shl
push
int3
or
iret
push
movs
sbb
std
aas
out
addr16
mov
cmp
das
clc
fist
pop
add
xor
test
test
ins
mov
into
rol
iret
adc
dec
imul
gs
pop
mov
inc
pop
dec
out
push
fcomip
mov
mov
or
adc
sub
mov
xor
cs
ins
iret
jae
push
mov
(bad)
das
stc
push
adc
xchg
clc
bswap
call
jns
out
inc
jecxz
push
adc
sub
sub
je
cwde
not
scas
jge
shl
mov
inc
cwde
add
push
mov
mov
shr
xchg
(bad)
cmp
xchg
test
imul
cmps
ret
ret
mov
(bad)
iret
mov
imul
call
xchg
push
sbb
mov
mov
inc
xchg
ins
inc
mov
pop
out
fistp
adc
dec
jns
push
sbb
jmp
inc
pop
cmps
pop
in
xor
adc
inc
lods
xchg
push
xor
mov
jbe
popa
out
jb
pushf
test
pop
pop
mov
sub
jp
(bad)
(bad)
mov
mov
jae
cmp
xchg
ss
(bad)
mov
(bad)
out
outs
outs
data16
enter
or
xchg
movs
ret
cwde
push
dec
pop
les
inc
pop
jne
adc
call
adc
loopne
call
xchg
mov
cmp
jno
cmp
clc
icebp
adc
sar
ja
fadd
(bad)
jnp
lahf
sahf
rcl
mov
xchg
xchg
push
jecxz
jnp
ds
push
dec
leave
and
aad
sbb
push
out
test
movs
sahf
arpl
dec
test
addr16
push
mov
popa
push
adc
sub
fidivr
adc
mov
fidiv
cmp
xor
jb
fsubr
mov
loope
cmp
jae
adc
cmp
fs
fdiv
or
xchg
dec
fst
inc
or
push
iret
fdiv
int3
outs
into
sbb
in
rol
jbe
fwait
das
jbe
cld
shr
ror
mov
xchg
mov
push
cmp
add
push
js
inc
dec
mov
xchg
or
push
sub
ss
cmc
aad
jp
jmp
and
add
sti
xchg
sbb
loopne
or
pop
dec
jl
push
pop
jmp
mov
int
or
and
inc
pop
add
inc
pop
aam
and
fldcw
cdq
and
ins
test
sbb
adc
dec
scas
jnp
sub
cmp
xor
add
arpl
fwait
cmps
lods
mov
xchg
out
std
ret
or
push
in
shrd
sbb
pop
loopne
std
ins
pop
add
ret
push
dec
adc
or
cmp
inc
arpl
and
xor
or
das
cmc
loop
aam
(bad)
fidivr
test
pusha
data16
mov
xlat
sub
pop
hlt
xchg
jb
add
in
push
enter
or
ds
pop
add
(bad)
ins
mov
fldenv
in
mov
(bad)
mov
stos
sti
push
pop
iret
repnz
(bad)
mov
push
rcr
enter
push
inc
jmp
fsub
mov
mov
or
xlat
jecxz
xchg
aad
sbb
xor
and
sbb
rcl
loopne
jb
pop
in
retf
xchg
mul
xor
in
add
xor
loop
enter
jecxz
imul
add
mov
nop
inc
ins
sbb
inc
scas
jnp
or
inc
cmps
mov
inc
add
push
xlat
push
push
out
icebp
xor
mov
mov
push
mov
mov
add
mov
sbb
dec
sub
sti
cmp
mov
pop
popa
add
fs
push
mov
pop
in
push
loop
xchg
and
fcomp
(bad)
sar
mov
dec
sub
add
mov
mov
imul
xchg
xchg
adc
or
in
sub
out
push
and
mov
jp
sbb
leave
xlat
lock
out
in
jno
mov
scas
ins
clc
or
jl
test
fldcw
jmp
add
adc
inc
push
xor
stos
(bad)
mov
adc
stc
in
aas
xchg
stos
loop
inc
sahf
not
sbb
stos
ja
mov
leave
jo
nop
inc
cld
adc
pop
mov
push
(bad)
mov
(bad)
aad
push
xchg
data16
cs
sbb
(bad)
rol
stc
nop
shr
sub
mov
(bad)
cli
fcomp
mov
cs
stc
xor
mov
sbb
mov
aas
dec
jl
dec
sbb
sub
lock
retf
setns
pop
sub
ja
sbb
push
adc
js
xlat
mov
mov
and
pop
cmps
ret
pop
mov
dec
push
and
mov
fwait
jno
mov
xor
jecxz
jmp
jle
xchg
nop
fisttp
scas
std
cs
(bad)
jmp
dec
jbe
test
mov
es
sub
daa
cwde
movs
sub
or
or
sbb
and
and
movs
fdiv
cmps
mov
in
mov
repz
dec
cmps
rol
ficomp
pop
fistp
or
out
popf
dec
ret
stos
inc
out
jns
and
xchg
jp
push
sub
cmp
call
inc
push
or
xor
jle
xchg
xchg
addr16
push
dec
sub
into
cld
and
pop
or
hlt
inc
scas
std
aas
sar
sub
and
sub
xor
xor
pop
(bad)
ins
push
int3
mov
fisubr
push
jno
inc
add
loopne
mov
scas
add
jo
pop
out
xchg
jl
jmp
shr
rcr
popf
xor
movs
add
adc
retf
leave
jae
icebp
jecxz
lds
pushf
fiadd
ja
mov
retf
ds
aad
or
outs
xor
mov
aaa
fld
in
std
retf
pop
and
jmp
pop
in
push
fwait
and
mov
dec
inc
mov
scas
add
xor
cli
mov
movs
test
sub
mov
jbe
pop
jns
in
mov
mov
xchg
add
add
int
gs
pop
sbb
int
dec
aam
call
dec
sahf
fdivr
adc
and
aas
stos
ret
arpl
ds
push
repz
cs
inc
test
stos
xlat
sahf
mov
popf
ret
sub
and
adc
push
mov
jle
jb
shl
sub
nop
inc
shr
neg
out
cdq
xchg
sub
jnp
rcl
pop
popa
ret
outs
stc
and
lock
out
test
scas
mov
xchg
cmp
pop
sbb
cmp
jne
out
aam
dec
jmp
pop
pop
ret
push
movs
sbb
mov
and
xchg
dec
mov
mov
sbb
xchg
fsubr
mov
call
int3
lods
add
push
cmp
mov
push
jecxz
pusha
cmp
xor
jne
push
call
and
pushf
xchg
adc
sub
pop
mov
stos
mov
dec
jbe
jo
pop
cmc
out
adc
jge
ss
mov
and
sbb
mov
sub
sub
fldcw
push
mov
jmp
sub
and
retf
cli
ins
cli
iret
mov
push
inc
push
xor
mov
or
leave
pop
mov
fstp
ins
xchg
fmul
pop
addr16
scas
jb
xor
pop
cld
aad
jge
cmc
jb
pop
test
sub
xchg
call
into
pop
mov
bound
fbstp
shr
pop
xchg
sub
sbb
clc
adc
jecxz
inc
jge
push
pop
adc
xor
add
push
jmp
(bad)
mov
mov
pop
mov
or
or
ss
pop
movs
mov
les
sub
and
into
push
hlt
sub
retf
mov
push
out
ret
or
(bad)
pop
mov
xor
xchg
xchg
test
je
data16
inc
xor
out
hlt
inc
adc
stc
out
loop
jge
popa
dec
in
jge
aaa
int3
bnd
mov
out
sbb
cmp
hlt
icebp
repnz
jge
fst
add
mov
push
mov
push
adc
test
sbb
push
and
div
inc
sub
fwait
mov
inc
inc
aas
cmp
sbb
retf
xor
ds
pusha
stos
dec
mov
and
ins
pop
pop
loopne
ja
adc
adc
inc
mov
nop
pop
sub
jb
sub
jb
daa
cmp
scas
sbb
loope
xchg
hlt
(bad)
fs
or
movs
hlt
test
sub
(bad)
ins
mov
mov
hlt
js
in
sub
and
or
mov
push
push
ss
and
sub
mov
adc
enter
addr16
add
dec
xchg
xchg
std
adc
add
jns
xchg
push
call
sti
mov
and
add
(bad)
scas
mov
jg
repnz
data16
jo
inc
imul
pusha
fisttp
push
ja
int
jmp
mov
cs
rol
ja
(bad)
lods
ja
pop
(bad)
ins
neg
mov
mov
inc
mov
cs
test
mov
xchg
jmp
sbb
pop
fistp
adc
add
inc
jb
das
bound
fcomip
dec
ficomp
cmp
cs
loopne
ficom
jae
(bad)
dec
push
call
call
jmp
mov
xor
pop
cmc
aam
(bad)
scas
dec
add
sbb
inc
mov
loop
outs
sbb
out
pop
movs
xchg
pop
xchg
jp
out
lods
push
imul
int3
xchg
push
cdq
test
clc
loope
mov
fisub
or
ds
xor
sub
movs
mov
(bad)
xor
fbstp
shl
cmps
jne
mov
fwait
pusha
jns
lds
mov
ffree
pushf
aas
repnz
popf
fcom
in
inc
inc
data16
push
out
jns
inc
and
mov
cmc
push
push
in
aad
scas
dec
data16
(bad)
out
xor
push
(bad)
xchg
ror
jo
pop
inc
jne
sub
adc
add
jp
cmp
arpl
push
push
pop
imul
call
mov
mov
das
jbe
imul
test
cmp
sbb
or
jno
cwde
jge
adc
mov
mov
rol
push
pop
xor
(bad)
imul
fst
mov
out
cmp
adc
je
call
call
push
xor
push
add
push
xchg
lds
shl
sub
pushf
jmp
sub
mov
lods
retf
sbb
jmp
movs
xchg
jmp
icebp
mov
out
lds
add
dec
cmp
gs
aam
in
in
xchg
or
ins
pop
loop
push
push
in
pop
xchg
imul
push
and
xor
lods
fldz
out
and
ss
pop
(bad)
mov
jp
movs
and
add
jg
sbb
sub
lock
xchg
imul
sub
add
iret
inc
mov
daa
ret
xor
sub
ins
pop
in
test
jmp
push
pop
daa
jg
inc
loopne
repz
sub
lea
sbb
jg
cli
mov
std
jl
jle
repnz
jnp
mov
fmul
pop
js
fs
jne
neg
out
adc
mov
lods
aad
test
add
pop
popa
fdiv
jl
pop
aas
sub
mov
dec
test
mov
popa
jecxz
xor
lea
shr
ds
mov
add
sub
(bad)
or
xchg
sbb
out
in
and
xor
call
mov
dec
test
add
push
ud1
add
sub
mov
lods
xchg
ins
sti
loope
fldcw
jecxz
push
(bad)
cmp
aaa
cmp
jecxz
(bad)
sahf
(bad)
or
data16
sahf
ror
mov
ss
or
aam
addr16
pop
cmp
fistp
inc
ror
mov
xor
sbb
mov
imul
int
mov
es
jp
fstp
ret
call
test
rol
(bad)
ins
sbb
inc
adc
jl
mov
fwait
or
retf
mov
xor
xchg
in
push
pop
adc
jecxz
push
pusha
bound
out
mov
cmps
inc
and
outs
ret
out
adc
pop
lods
cmp
jp
pop
mov
gs
jg
bound
ret
int
mov
xchg
mov
cmc
sbb
ins
sbb
loope
dec
ror
adc
xor
sbb
adc
bound
push
int
(bad)
ins
daa
pop
loopne
jb
cs
cs
jle
mov
cld
shl
xchg
inc
pop
call
jge
retf
(bad)
mov
hlt
push
cmp
addr16
jg
jmp
mov
(bad)
adc
jl
mov
sub
pop
mov
pop
ss
pop
or
daa
and
xchg
ret
inc
xor
push
cmp
sbb
sahf
mov
mov
loopne
sahf
hlt
mov
jo
or
shr
(bad)
imul
jne
outs
mov
xchg
cwde
adc
add
jl
adc
pop
cmp
leave
jle
and
les
ja
xor
repz
xchg
jno
sub
sti
movs
inc
fs
stos
mov
jb
or
pop
mov
(bad)
and
sbb
fcom
repz
push
jae
cld
(bad)
ret
lds
lods
stos
test
call
pop
adc
out
lods
iret
or
sbb
js
test
scas
sub
scas
std
jle
mov
popa
outs
sbb
push
ret
mov
jb
dec
and
dec
cmp
int
dec
in
jge
dec
stos
push
movs
and
pop
les
out
into
test
outs
or
push
adc
pop
pop
xchg
adc
dec
dec
cli
sahf
push
xsha256
add
fiadd
and
mov
pop
push
push
push
std
sti
dec
mov
fmul
inc
rcr
ret
adc
push
(bad)
xchg
imul
inc
mov
fwait
(bad)
jecxz
out
xchg
ins
mov
and
mov
ficomp
dec
xor
js
leave
push
push
and
fmul
or
cmps
inc
and
jns
xor
(bad)
jg
jmp
xchg
adc
dec
repnz
and
std
lods
jmp
xchg
pop
call
or
dec
cmp
jae
jo
hlt
fcomp
aad
mov
ins
call
hlt
jl
fld
test
jo
push
packuswb
push
imul
retf
or
in
or
(bad)
sbb
fcomp
jns
sbb
push
shr
frstor
and
xor
pop
rol
and
adc
jno
lods
ret
addr16
dec
je
movs
cdq
ja
jl
enter
jmp
jge
arpl
mov
mov
les
and
lods
lods
jbe
loop
in
pop
dec
jo
pop
aam
div
movs
sub
push
dec
je
jle
adc
and
xchg
retf
and
pop
adc
aas
shl
push
bound
movs
push
push
jmp
aas
lock
mov
mov
(bad)
push
push
add
adc
mov
mov
push
xor
fcmove
adc
ins
and
(bad)
xor
mov
xor
loop
sbb
outs
(bad)
cmp
leave
call
fyl2xp1
ja
movs
ss
ja
xor
sub
imul
mov
mov
push
arpl
and
xor
ins
ss
cmp
push
lahf
call
ret
mov
push
add
push
(bad)
mov
(bad)
ds
inc
aam
fcmovnb
inc
movs
jg
or
and
pop
sbb
lar
jg
fcmovnb
xchg
std
dec
mov
sub
popf
aas
leave
mov
adc
mov
aas
mov
pop
cli
inc
xor
inc
jle
or
ss
fidiv
push
sbb
in
jbe
xchg
pop
fbstp
fiadd
idiv
or
add
mov
dec
jmp
das
cmps
mov
rcr
push
dec
adc
jbe
add
sub
data16
cdq
jae
mov
mov
into
add
or
inc
fs
ret
dec
adc
inc
scas
out
(bad)
std
das
add
and
stos
int
pop
bound
push
popa
repz
jae
push
push
xor
cmp
dec
sub
shl
scas
ret
and
xor
inc
sbb
cmps
inc
scas
mov
scas
mov
aad
js
lods
jmp
inc
sahf
mov
sbb
popa
push
xor
test
std
push
fnstenv
dec
and
fucomip
shl
push
jae
rol
iret
test
shl
xchg
aam
clc
call
enter
fwait
push
jns
scas
(bad)
aas
mov
je
jnp
movs
fsub
and
xchg
call
cmc
cmp
pop
and
ret
jns
xchg
shl
lea
push
or
cdq
mul
ret
fadd
inc
out
in
icebp
jmp
jecxz
sar
dec
xor
xchg
aam
dec
repz
xor
dec
sbb
mov
and
mov
loope
adc
xchg
jbe
fdivr
(bad)
(bad)
cld
pop
out
test
sub
or
fdiv
or
xor
test
call
xchg
mov
inc
cmc
arpl
pop
fs
ficom
ret
inc
mov
imul
nop
sbb
xor
leave
pushf
ret
add
xor
arpl
push
popa
retf
call
jne
xchg
movs
push
sub
ret
xchg
cmp
retf
shr
cmp
int3
data16
sahf
test
clc
sub
pop
out
rol
mov
(bad)
adc
push
pushf
push
jne
fadd
add
or
add
jnp
lods
fst
aad
inc
xor
in
outs
sahf
rcr
test
push
jle
or
les
les
dec
push
cmp
jmp
sub
jecxz
int3
xchg
in
mov
add
(bad)
jb
int
jbe
add
jne
inc
mov
and
ret
cmp
repz
jb
out
movs
sub
push
cdq
push
jb
mov
nop
loop
cmp
pushf
sti
int3
mov
outs
mov
or
dec
cmp
(bad)
pop
dec
sbb
sub
jmp
retf
dec
mov
or
iret
cli
iret
sti
inc
inc
mov
rcr
adc
int3
mov
imul
inc
mov
out
add
scas
adc
push
fdivp
in
fdiv
dec
xchg
mov
lahf
arpl
inc
cmp
sbb
pop
lock
pop
js
pushf
mov
ins
sbb
call
hlt
in
int3
ja
shl
test
jb
sbb
fcompp
add
and
xchg
les
enter
test
xchg
xchg
mov
int3
cmp
inc
nop
shl
(bad)
push
add
(bad)
popf
mov
repnz
lods
push
adc
into
adc
lfs
out
mov
dec
push
mov
dec
inc
inc
ret
ins
jno
ds
jl
ins
and
dec
jbe
shl
lds
mov
mov
xchg
and
stc
cmc
jnp
inc
outs
(bad)
adc
push
jl
sub
mov
in
stos
repz
imul
xor
fdiv
out
push
fld
adc
imul
fsub
ret
imul
je
xor
or
sub
not
sbb
adc
mov
push
pop
push
pusha
pop
xchg
push
xor
push
jmp
sbb
push
mov
add
dec
sbb
out
adc
ss
(bad)
nop
pop
mov
repnz
pushf
and
aad
imul
out
out
hlt
mov
les
dec
xor
pop
adc
add
inc
sbb
es
sahf
and
ror
mov
ins
jno
sbb
fist
mov
rol
or
mov
mov
mov
in
movs
fs
clc
fcomp
add
stc
cmp
mov
mov
add
xchg
neg
out
and
add
xchg
daa
loope
xchg
mov
rcl
aas
cdq
les
loope
push
pop
push
test
das
inc
jmp
mov
in
ss
xlat
or
pop
fstp
and
call
xchg
ja
leave
xchg
jae
xchg
sbb
out
in
out
cmp
rol
shl
lock
test
lea
test
mov
pop
mov
pop
movs
lea
and
ds
(bad)
mov
fdiv
imul
or
shl
push
adc
imul
xchg
or
out
mov
adc
(bad)
jl
outs
adc
or
imul
mov
sbb
mov
aam
jmp
fwait
mov
lds
jecxz
jecxz
and
push
stc
adc
popf
cwde
ja
push
call
int
(bad)
pop
or
(bad)
js
mov
cli
jg
(bad)
jge
je
les
std
or
jno
outs
(bad)
hlt
mov
adc
shl
pop
and
pop
sub
xchg
retf
cld
stc
gs
imul
not
std
sar
pop
mov
out
push
js
lods
mov
in
ret
mov
out
in
retf
outs
iret
inc
mov
loope
jmp
stos
push
pop
fdivr
enter
fbld
jnp
and
xchg
test
and
sub
cld
xchg
fmul
sub
clc
xor
mov
scas
mov
pushf
jp
and
data16
test
test
mov
into
sub
lods
jmp
cdq
call
and
ds
mov
ja
aaa
out
repnz
push
mov
push
ret
retf
pop
adc
xor
cld
ja
int
mov
inc
xchg
pusha
xchg
sbb
add
cmp
pop
push
fild
sahf
popf
sub
fs
inc
scas
cmp
out
ss
std
lods
inc
call
out
jae
in
push
sahf
mov
int
inc
cmp
push
lods
int
xlat
fwait
mov
std
ins
mov
push
mov
and
pop
adc
dec
pop
sub
xchg
loopne
aaa
pop
jno
dec
cmp
xchg
push
push
or
and
dec
inc
push
jmp
mov
cmp
scas
cmps
xlat
icebp
es
fdivrp
fs
cld
inc
pusha
rcr
aad
pop
imul
jbe
stc
or
aas
mov
mov
cmp
cmp
push
or
test
or
jge
jbe
(bad)
xchg
jg
push
push
arpl
pop
adc
in
cmps
(bad)
jo
push
mov
leave
inc
and
and
push
(bad)
aaa
sbb
(bad)
(bad)
repz
xor
inc
aaa
pusha
mov
inc
imul
jg
xor
inc
inc
out
fsubr
test
sub
xchg
pusha
aas
add
movs
das
mov
jmp
adc
mov
and
adc
aad
pop
pop
xchg
xchg
push
rcr
mov
xchg
stos
arpl
lock
push
mov
aad
rol
cmp
sub
xchg
test
dec
(bad)
iret
jnp
xlat
retf
fidivr
pop
mov
xchg
dec
out
cdq
sbb
aas
ja
call
mov
mov
lods
ds
call
xor
xchg
xor
in
jns
and
call
mov
sbb
xor
in
add
fidivr
lods
or
xor
pop
ins
popa
imul
dec
xchg
and
test
loopne
add
or
or
sub
(bad)
bound
sub
inc
cld
jmp
sti
stos
pop
ja
jne
fisubr
xor
movs
frstor
or
cld
xor
frstor
xor
push
adc
mov
bound
out
dec
xor
and
popf
push
in
and
inc
addps
lods
fisttp
retf
ret
je
fwait
iret
push
xor
add
dec
nop
and
mov
jbe
sub
sub
jmp
sub
dec
ja
inc
call
add
adc
sbb
push
or
fldenv
jmp
cmc
movs
lods
aam
movs
push
push
sahf
cmc
xchg
into
or
test
stos
hlt
sub
cmp
(bad)
push
cwde
jecxz
cmp
ins
cmp
sbb
add
adc
int3
inc
dec
xchg
jmp
push
add
dec
imul
add
xor
push
jae
fist
out
jl
inc
jne
pop
inc
cld
ins
mov
cmps
pop
div
rcr
adc
xchg
jl
int3
rol
jge
sbb
aad
sub
ror
sub
(bad)
cmp
mov
fs
fs
shl
jg
cmp
pop
aad
jne
ss
mov
out
hlt
and
sub
ss
and
xor
pop
daa
dec
inc
mov
mov
rcr
jge
out
je
test
ja
ins
lds
sub
in
popa
ja
inc
mov
into
repnz
nop
fldenv
inc
mov
xchg
cmp
cmp
mov
pop
sbb
mov
push
add
test
aam
mov
sub
loop
inc
scas
out
outs
outs
xchg
in
push
xchg
add
adc
add
or
inc
xlat
inc
or
fs
inc
cmps
icebp
sahf
in
xor
and
ins
mul
adc
xchg
cmp
mov
push
dec
call
add
(bad)
js
mov
xchg
pop
push
and
inc
popf
out
jb
iret
adc
sar
xor
push
stos
jl
xor
or
div
rcl
sub
imul
mov
jmp
jmp
cmp
das
adc
and
call
rcr
(bad)
sbb
xchg
fst
mov
sub
inc
push
pop
and
cdq
fild
sbb
call
xor
pusha
test
lods
sahf
aas
(bad)
and
mov
pop
push
jns
gs
int
lea
push
sti
push
dec
jbe
pop
movs
add
inc
lock
je
lds
mov
movs
fnstenv
sub
retf
test
fwait
xchg
bound
dec
xchg
sti
(bad)
mov
dec
pop
popa
arpl
jecxz
ja
in
mov
fild
movs
add
inc
sbb
hlt
lods
(bad)
and
jg
jg
int3
cmp
cmc
or
add
dec
cmp
adc
xchg
jbe
xchg
daa
jmp
shr
je
or
movs
or
add
std
fisttp
rol
mov
daa
jns
stos
repz
retf
add
scas
pop
enter
rol
lahf
mov
cmc
paddsw
sbb
stos
dec
cmps
add
and
int3
ins
push
into
push
arpl
or
popa
gs
sub
jle
push
sub
push
cmps
add
icebp
gs
or
and
fdivr
jecxz
or
in
cli
mov
push
ret
xchg
cli
cmp
and
xchg
lods
retf
mov
mov
xor
mov
cwde
adc
sahf
movs
add
int
jnp
sbb
outs
mov
pop
das
(bad)
ins
dec
xlat
dec
es
and
adc
xchg
cwde
repz
mov
push
jne
pop
(bad)
xchg
adc
nop
inc
xor
sub
and
cmps
or
stos
inc
dec
and
mov
sahf
in
mov
and
pusha
adc
mov
jne
lock
(bad)
aad
icebp
ins
pop
mov
fiadd
adc
cld
aad
ret
dec
mov
add
or
repnz
mov
es
mov
in
mov
xchg
push
movs
dec
cmp
mov
adc
mov
dec
add
adc
ins
inc
out
xor
inc
dec
(bad)
(bad)
mov
cmp
push
adc
sbb
out
scas
inc
retf
mov
cmp
in
or
cmps
repz
int
ret
cmp
scas
lods
es
mov
xor
mov
jp
dec
mov
or
popa
scas
sbb
pop
mov
cld
popa
and
mov
jl
mov
movs
or
cmp
call
(bad)
(bad)
(bad)
pop
cld
xor
mov
ins
and
xlat
and
imul
call
stc
add
icebp
cli
lock
or
hlt
mov
into
mov
(bad)
mov
test
(bad)
outs
mov
pop
and
mov
jl
cmp
dec
neg
cmp
and
dec
imul
scas
or
pop
jne
repnz
jl
fs
jb
adc
popa
mov
fsqrt
bnd
test
in
and
aas
cmp
std
dec
or
fcom
out
cmp
mov
add
add
bound
push
mov
ds
loope
ret
mov
stc
cmp
sbb
sbb
cs
sbb
loopne
push
add
adc
daa
adc
and
ficom
outs
call
(bad)
mov
pop
inc
mov
inc
ret
ins
adc
dec
xchg
inc
test
pop
cmp
push
shr
nop
lahf
leave
les
adc
add
stc
or
jbe
loop
push
gs
mov
cmp
icebp
jle
clc
repz
je
push
out
pop
mov
outs
test
pop
in
imul
mov
ret
stc
ss
push
push
jl
pop
or
cmp
xor
pusha
push
push
test
mov
jecxz
jbe
xrelease
jo
imul
test
cmp
es
xchg
retf
or
add
dec
push
pop
popf
fwait
xchg
lods
pop
loop
stos
jmp
(bad)
sub
cmps
movs
lock
cmp
push
xor
(bad)
jns
xchg
jmp
in
sahf
jnp
sub
(bad)
mov
retf
push
xor
or
inc
dec
test
inc
pop
ret
ds
out
mov
jecxz
pop
fs
pushf
and
scas
push
push
adc
mov
inc
mov
(bad)
fild
sbb
pop
xor
stc
sbb
fistp
push
call
push
cmp
pushf
cdq
sbb
ins
and
jecxz
jle
mov
or
jge
out
fwait
adc
out
sub
(bad)
popa
stc
pop
cs
pop
imul
cmps
mov
mov
xlat
push
and
mov
or
dec
icebp
sti
cdq
inc
movs
in
pop
stos
pop
call
cmp
sub
xor
adc
ja
bnd
hlt
push
je
popa
cdq
sub
rol
es
mov
xlat
call
out
or
test
sub
out
xchg
ss
xor
xor
jecxz
call
sbb
lods
cmps
xchg
cmps
(bad)
gs
adc
mov
enter
fmul
(bad)
(bad)
cmp
adc
aad
adc
cwde
sub
fiadd
imul
or
xor
dec
aaa
cmps
fcom
addr16
(bad)
into
test
jp
or
test
cdq
cdq
into
adc
jl
ficom
dec
ins
push
icebp
jne
jne
xchg
sbb
call
mov
inc
push
xchg
lds
cwde
cld
jge
sahf
ds
or
ja
ror
std
inc
sub
push
jae
pop
(bad)
sahf
lods
stc
mov
fisubr
push
and
cmp
inc
ds
movs
retf
push
arpl
inc
mov
mov
add
jae
xor
or
repnz
(bad)
jmp
ror
sub
imul
and
icebp
gs
adc
test
std
inc
into
(bad)
mov
daa
cmp
pop
jno
xchg
ret
fldcw
and
mov
ficom
scas
(bad)
push
outs
in
cmc
scas
pop
fs
pop
lods
sub
mov
mov
cmp
pop
push
test
mov
repz
daa
or
ret
(bad)
fiadd
mov
(bad)
push
imul
or
ds
or
mov
mov
jae
mov
pop
and
(bad)
adc
inc
sbb
sbb
imul
push
push
mov
mov
mov
mov
pop
lds
js
jb
adc
in
sub
loopne
int3
jp
sbb
fucomi
in
push
xlat
data16
xchg
mov
pop
stc
repnz
jge
sub
cmp
add
cmp
jns
sub
and
pop
cmp
retf
cld
jbe
inc
sti
pushf
cld
pop
pop
js
mov
dec
ds
ficomp
outs
fld
xchg
and
mov
rcl
push
jae
cwde
fsubp
cmp
call
call
mov
stos
test
xchg
ret
jle
jmp
hlt
pop
pop
xchg
inc
xchg
(bad)
rcr
shl
das
and
enter
jg
imul
inc
add
scas
mov
sub
or
or
dec
add
jg
out
sub
test
cmp
fwait
or
scas
mov
cdq
call
dec
daa
adc
popf
jg
ja
dec
int3
jmp
mov
xchg
pop
pusha
not
idiv
adc
mov
cmps
jp
mov
or
add
push
mov
into
push
cmc
jle
cmp
dec
add
test
xor
addr16
sub
imul
lods
push
inc
jne
mov
pop
retf
push
jmp
xchg
adc
jbe
adc
jne
xor
imul
xlat
sahf
push
les
shl
gs
add
call
icebp
jge
aaa
push
adc
sub
cmp
cmp
(bad)
cmps
push
shl
pop
fwait
push
cpuid
fs
scas
es
jmp
lods
into
xchg
mov
push
pop
lock
push
call
(bad)
out
imul
or
jp
lea
add
fiadd
mov
add
call
pop
xor
rol
pop
ins
sbb
fadd
(bad)
or
mov
cmp
test
jnp
loop
icebp
dec
out
cwde
dec
ins
jmp
inc
mov
sub
add
push
lea
aas
dec
adc
lea
jae
inc
xchg
pushf
pop
adc
push
repz
cwde
jo
dec
xchg
cmc
lods
dec
in
psubd
in
pop
inc
fcomip
dec
addr16
ficom
sbb
xchg
rol
jo
jbe
mov
push
and
imul
bound
mov
xor
or
in
jmp
push
or
xor
out
mov
inc
retf
jnp
and
imul
add
mov
push
mov
mov
js
jmp
pushf
sar
stos
xor
add
les
mov
arpl
jge
and
fdiv
jl
fwait
pop
aaa
or
aam
cmp
fistp
arpl
jle
es
push
loope
dec
jne
fsubr
push
aaa
daa
inc
and
loopne
mov
ror
or
ja
adc
addr16
cld
scas
test
mov
stos
push
rcl
inc
and
add
dec
inc
scas
clc
mov
es
in
sub
bound
mov
xchg
(bad)
mov
mov
icebp
cmp
jge
mov
mov
nop
lds
and
out
loope
fcmove
pop
jnp
daa
ror
stc
and
fmul
inc
cmps
and
frstor
repz
repz
push
stos
(bad)
scas
shl
lahf
xchg
std
int3
cmc
sbb
ins
mov
push
xchg
ret
das
lahf
xchg
lods
mov
int3
inc
and
or
clc
pop
stos
jns
dec
mov
mov
or
in
pop
(bad)
bound
pop
xchg
cmps
stc
push
pusha
(bad)
xchg
pop
xchg
jecxz
pop
jo
dec
sub
aam
out
add
sub
sahf
pop
fnstsw
mov
dec
mov
jnp
dec
imul
push
lds
fnsave
loopne
push
xor
fstp
mov
mov
sub
sub
jmp
xor
test
lods
and
jg
and
xor
xor
mov
dec
jnp
ins
aad
or
add
ds
test
setne
popa
rcr
sbb
cs
ret
and
(bad)
jne
hlt
xchg
shl
in
and
inc
push
pop
arpl
add
add
pusha
xchg
and
dec
shl
cmc
cmp
(bad)
xor
xlat
pushf
or
loope
rcl
stc
sub
cmp
out
int
jne
mov
scas
and
and
jns
jbe
test
mov
cdq
aas
cmp
cwde
sti
dec
aaa
push
mov
mov
xor
mov
nop
shl
adc
or
std
sbb
cmp
xchg
outs
mov
fcom
lods
sbb
repnz
mov
sbb
xchg
scas
inc
icebp
push
xchg
inc
out
push
das
dec
out
adc
push
popa
ficomp
xchg
aam
xor
sub
mov
in
retf
cdq
mov
(bad)
iret
and
cmc
jmp
inc
scas
xlat
fs
push
pop
js
pop
adc
xchg
setne
ins
repnz
je
mov
xchg
leave
add
adc
loop
mov
test
xchg
imul
addr16
add
jnp
fs
(bad)
push
inc
daa
and
outs
inc
div
add
aas
gs
push
std
or
cmp
bound
lea
(bad)
enter
outs
cwde
inc
nop
push
ins
sbb
add
mov
lods
sub
add
sbb
loop
add
fld
ss
pop
and
mov
cwde
jge
(bad)
jns
bound
out
rcl
cwde
cmp
into
xchg
adc
push
xor
pop
out
xchg
rcl
bound
jg
push
jp
xchg
fild
es
aad
loopne
daa
cmc
inc
fld
jne
cmp
mov
mov
add
pushf
lods
cli
test
mov
push
cld
xor
sar
outs
jb
mov
cs
dec
stos
jg
cli
addr16
or
ss
add
dec
pop
cld
add
(bad)
retf
packssdw
sub
xchg
mov
inc
mov
add
add
pop
cwde
push
dec
popa
aam
ins
call
dec
scas
inc
test
mov
(bad)
jg
push
jbe
mov
or
loope
sbb
fwait
xchg
jge
cmp
push
inc
and
dec
jae
(bad)
sbb
gs
retf
leave
mov
mov
jns
xor
jecxz
retf
jb
addr16
and
dec
stc
pop
out
es
mov
or
cmps
inc
add
mov
jnp
ins
pop
mov
cwde
pop
cmp
sub
frstor
ds
inc
push
cld
inc
out
ret
add
xor
dec
dec
(bad)
push
mov
xchg
adc
sub
push
aas
loop
jno
out
sub
in
adc
fimul
or
xchg
sub
xor
aas
jne
adc
imul
fstp
mov
xchg
mov
mov
xor
xchg
mov
cmc
ror
adc
(bad)
ret
adc
jmp
dec
lock
inc
cmc
mov
inc
in
cs
sub
xchg
aaa
xor
mov
mov
neg
lods
outs
je
or
shl
bnd
push
gs
pop
pop
cmp
popa
xchg
adc
pop
stos
sbb
(bad)
ja
ja
fcos
gs
jns
in
and
inc
pop
ret
or
mov
pop
mov
jmp
sub
or
loopne
loop
aaa
scas
sbb
jmp
sti
ret
mov
dec
inc
xor
(bad)
adc
mov
movs
and
dec
xor
xchg
sub
xchg
jns
retf
fdivr
push
neg
mov
inc
sbb
jmp
sbb
sahf
inc
aam
ds
lds
pop
inc
xor
pop
leave
push
leave
jecxz
(bad)
jecxz
jns
pop
imul
inc
(bad)
sub
inc
mov
lock
imul
jp
mov
lds
dec
xor
stos
scas
adc
pushf
aaa
jnp
push
push
sub
fisttp
dec
xor
ret
or
(bad)
mov
cmps
in
and
inc
loope
int
cs
repz
shr
pop
popf
scas
arpl
out
ss
icebp
inc
jg
ret
mov
xlat
cmp
pop
je
and
into
sub
arpl
adc
mov
shl
out
(bad)
scas
in
pop
inc
adc
pop
add
in
xchg
pop
lahf
add
jl
cmp
adc
cs
jmp
pusha
cmps
shl
test
jmp
jmp
push
inc
(bad)
rcr
lock
dec
fwait
(bad)
sub
mov
push
and
pop
movs
fucomi
fistp
pop
and
inc
xchg
neg
sub
push
stc
hlt
scas
ins
shl
pusha
icebp
cmp
pop
push
rol
nop
call
les
sbb
mov
cmp
jae
data16
dec
push
popf
sub
push
cmp
dec
neg
ins
xor
push
inc
das
xor
es
xchg
leave
sahf
xor
xchg
adc
mov
cdq
inc
push
sbb
sub
retf
mov
xor
nop
test
retf
not
pop
mov
xor
and
pop
mov
retf
dec
ret
cmp
mov
sbb
int
gs
cdq
gs
mov
rcl
xor
add
xchg
and
movs
xor
push
in
inc
inc
movs
dec
icebp
int3
popa
and
cmp
or
icebp
(bad)
(bad)
sub
mul
mov
and
(bad)
arpl
pop
jmp
mov
and
xor
jle
and
or
and
lock
mov
iret
mov
jle
int3
cmp
adc
ins
je
dec
inc
ins
sub
push
in
retf
rcr
mov
stc
push
add
pop
cli
(bad)
mov
out
inc
call
addr16
adc
xchg
mov
(bad)
into
sub
sub
and
mov
adc
in
dec
inc
dec
dec
popa
push
jecxz
sbb
int3
aad
sbb
mov
dec
inc
scas
into
mov
pop
je
scas
enter
mov
test
(bad)
retf
stc
cmc
push
adc
mov
sub
sub
stos
movs
cdq
mov
or
ins
jns
jge
daa
jns
(bad)
in
mov
pop
dec
xchg
neg
call
scas
in
inc
jae
add
dec
cmps
pop
cmc
fdiv
ficom
xor
sub
fimul
jmp
lahf
add
push
xchg
mov
pop
in
retf
shl
jmp
adc
popa
in
retf
or
in
pop
bound
jp
sub
mov
push
jmp
icebp
retf
pusha
push
imul
je
xchg
mov
adc
mov
out
mov
ja
popf
jge
mov
sbb
(bad)
popa
scas
dec
add
fcmovu
and
sub
xor
out
or
dec
push
pop
sbb
xchg
mov
int
mov
mov
mov
inc
lea
test
jmp
cwde
fwait
cmp
add
test
mov
stos
loope
jae
cwde
or
push
jbe
leave
daa
pusha
retf
out
fwait
js
jae
pushf
xor
cmps
test
xchg
sbb
xchg
xchg
aad
mov
jge
adc
mov
frstor
div
jno
mov
test
pop
mov
jmp
cmp
and
add
jbe
call
iret
pop
mov
xchg
mov
and
fndisi(8087
(bad)
pop
out
mov
pop
sbb
and
leave
pop
leave
fs
xchg
and
mov
adc
enter
movs
fimul
pop
(bad)
mov
leave
mov
mov
pop
mov
cli
pop
jecxz
mov
pop
into
mov
movs
scas
jmp
sbb
pop
xchg
xor
pop
jnp
int
repnz
je
cwde
int3
js
mov
xchg
pop
fwait
enter
pop
aas
xor
push
jl
ins
push
jl
push
dec
lods
xor
jmp
xchg
jl
sar
stc
ficom
jg
fwait
mov
outs
add
ror
mov
mov
xor
push
xchg
lock
or
sbb
inc
push
sbb
fcomp
aas
xchg
mov
adc
jae
mov
mov
inc
jge
(bad)
lods
stos
mov
push
ins
adc
pop
pop
std
rol
mov
repnz
cld
xor
fbstp
pop
adc
jbe
loopne
(bad)
cmp
sbb
sahf
repnz
retf
and
xor
scas
ins
jo
pop
clc
out
test
cmp
adc
loope
jmp
data16
or
call
popf
sub
pop
jecxz
pop
lahf
and
jle
pop
out
sbb
cmps
enter
add
dec
pop
loope
fadd
ja
in
xchg
rcl
jo
scas
pusha
in
mov
repnz
pop
sbb
push
repz
nop
call
stos
sbb
sbb
out
xchg
daa
adc
test
ret
adc
(bad)
mov
(bad)
cs
and
fwait
sub
pop
ja
ret
cmp
outs
push
cmps
mov
ins
inc
outs
pop
mov
frstor
cmp
outs
fstp
and
rcl
and
and
xchg
adc
test
loop
mov
adc
xchg
inc
popa
jo
sbb
aaa
add
hlt
lds
pusha
jle
sbb
out
fnstenv
dec
sti
pop
inc
mov
cld
sub
dec
mov
add
lods
loop
ins
in
push
sahf
jle
popa
jbe
shr
add
movs
mov
int
mov
sub
bound
popa
in
and
retf
mov
dec
xchg
test
cdq
and
mov
push
enter
jno
mov
fwait
outs
jbe
jae
cmp
je
sub
lods
loope
and
xor
lock
mov
test
adc
mov
adc
cmp
ret
inc
mov
sub
cld
xor
dec
in
mov
enter
push
rcl
add
loope
pop
cmp
pop
shl
and
sub
cmp
inc
ss
into
pushf
cmp
mov
out
leave
in
mov
jno
sbb
sub
call
arpl
fcmovnu
add
jns
inc
push
ret
push
retf
into
mov
xchg
ror
pusha
repz
jp
push
mov
cli
xchg
dec
jae
f2xm1
cmps
mov
frstor
push
pop
mov
pop
ret
call
jnp
pusha
xor
mov
sub
push
adc
jmp
fild
pop
xchg
pop
adc
jmp
stos
adc
lods
ds
pop
retf
cmp
xor
test
fs
xchg
inc
dec
push
rol
test
popa
mov
sub
push
(bad)
test
xor
test
mov
mov
in
pop
inc
inc
stos
inc
ins
or
add
in
dec
test
dec
push
and
ds
ret
mov
pop
or
and
mov
loop
pop
mov
getsec
xchg
out
retf
mov
loope
aaa
lods
paddd
xchg
push
gs
sub
test
in
add
pusha
xor
std
mov
dec
mov
push
sub
cmp
ds
jae
dec
(bad)
adc
gs
fdiv
movs
std
call
in
aas
cwde
xor
ss
add
xchg
xchg
xchg
fs
mov
jmp
mov
xchg
inc
cmp
inc
sbb
xor
mov
xor
dec
xchg
pop
sub
sub
push
jmp
xlat
sahf
push
stos
(bad)
sti
lea
hlt
pop
test
into
push
jb
pop
jns
add
mov
add
xchg
add
sub
pop
scas
mov
cmp
mov
mov
rol
dec
out
mov
push
std
xchg
sbb
sbb
fidivr
data16
jmp
mov
scas
push
int3
jl
push
xchg
mov
ins
int3
mov
jno
(bad)
repz
mov
jne
(bad)
mov
jns
or
jl
xor
mov
sbb
(bad)
repz
popa
int3
adc
sub
icebp
sbb
xlat
mov
dec
mov
pushf
or
mov
inc
adc
and
sbb
cmp
addr16
or
in
aas
ror
imul
movs
push
popf
cmp
mov
adc
fstp
dec
xor
xor
xchg
or
inc
cwde
enter
sbb
xor
sub
mov
neg
sti
in
lods
gs
jo
inc
lea
out
fsubr
retf
sar
cmp
adc
add
mov
inc
cmp
cdq
mov
nop
push
xor
and
dec
popf
sbb
sbb
cmp
pusha
add
mov
dec
jl
mov
and
adc
push
cmp
pop
ror
movs
out
jbe
and
xchg
imul
pop
pop
pop
sahf
push
hlt
nop
pop
mov
xor
jmp
fwait
xchg
icebp
call
xor
popa
loopne
and
xor
push
fwait
pusha
xlat
outs
and
ror
push
(bad)
gs
push
push
push
dec
fcomp
imul
push
out
mov
loop
popfw
fwait
sbb
out
jmp
dec
ret
xor
fidivr
mov
out
inc
scas
movs
dec
inc
xchg
repz
dec
and
lock
or
dec
das
add
jge
lahf
repnz
mov
sbb
pop
jae
dec
add
out
sar
(bad)
repz
adc
mov
lea
push
xor
mov
sbb
fild
frstor
pop
jb
inc
xor
jmp
ins
lahf
inc
and
mov
pop
sbb
hlt
inc
(bad)
lahf
pop
mov
adc
movs
(bad)
aam
dec
arpl
mov
pop
pop
dec
dec
xchg
repz
icebp
fmul
pushf
mov
dec
shl
cmp
inc
push
adc
out
xchg
jg
in
push
push
sbb
or
pusha
(bad)
pop
jl
icebp
into
jmp
jbe
pop
dec
push
call
pop
jl
xor
je
push
sub
mov
test
or
adc
push
mov
cmc
pop
rcl
and
ins
(bad)
icebp
sbb
xor
loopne
cmps
in
or
mov
test
xchg
lds
mov
xchg
pop
scas
mov
aam
retf
xor
lods
adc
mov
outs
scas
xchg
push
sbb
xor
lods
xor
sahf
pushf
dec
mov
add
fsubr
or
push
push
or
xor
stos
fidivr
xchg
call
outs
shr
loope
sub
push
sub
lds
bound
nop
dec
lahf
lds
inc
arpl
pusha
push
scas
dec
stos
dec
and
(bad)
mov
gs
test
mov
outs
add
jg
popf
bound
pop
inc
js
mov
shl
cdq
sbb
inc
sbb
retf
xchg
push
or
mov
std
inc
ja
sbb
mov
popf
rcl
push
xor
aas
pop
push
xchg
outs
(bad)
xor
bound
outs
fbstp
fbstp
add
outs
add
dec
xchg
jo
(bad)
iret
inc
xchg
sbb
mov
and
outs
aad
loop
jnp
inc
jecxz
fwait
jle
pop
sub
pop
scas
adc
retf
repz
sbb
(bad)
mov
xor
daa
pop
out
mov
and
out
dec
inc
sub
pop
sbb
sub
cmp
sub
push
test
ds
mov
test
test
cs
jmp
jae
jnp
sub
gs
jo
sbb
fdivp
xor
in
outs
push
ins
loop
and
movs
adc
push
jae
mov
push
dec
adc
mov
adc
pop
sub
ins
js
scas
push
ror
cmps
mov
xor
inc
repnz
mov
je
sub
inc
push
dec
dec
cs
mov
mov
adc
cmp
mov
mov
fldcw
in
cmps
aad
das
(bad)
loop
mov
and
inc
popa
test
shr
pop
or
ds
pop
push
add
adc
adc
adc
rcr
mov
sar
enter
bound
and
stos
xor
adc
push
lds
test
sub
mov
cmp
mov
call
or
cmps
bound
shl
inc
pop
fild
inc
movs
ret
mov
ins
mov
push
and
inc
add
mov
es
pop
mov
xchg
leave
cmc
rol
(bad)
jnp
or
lods
int3
int3
push
or
adc
or
cld
jnp
cmps
mov
in
mov
fs
sub
add
(bad)
out
cmp
pop
push
aad
jae
mov
bound
rcl
bound
inc
stc
sbb
loope
adc
mov
push
leave
fistp
adc
pop
and
pusha
pop
mov
pop
mov
mov
xor
jge
mov
and
les
push
fcom
jecxz
dec
mov
add
add
inc
test
xchg
leave
cmp
int3
movs
icebp
mov
imul
push
pushf
mov
sbb
jbe
jbe
sub
or
daa
push
dec
inc
cmp
out
push
pushf
sbb
add
adc
mov
cdq
int
in
fsubr
rcr
fimul
loope
std
in
lds
mov
stos
push
cmp
movs
push
add
jb
out
js
pop
call
cmp
retf
mov
aad
or
call
push
jo
sbb
imul
inc
push
and
adc
aaa
stos
lods
add
aaa
out
jp
ins
mov
imul
jns
xchg
mov
(bad)
int3
call
rol
mov
fs
push
sub
loop
mov
in
les
addr16
jp
sbb
pop
push
push
lods
jns
xchg
inc
push
dec
jns
mov
sbb
fs
repnz
(bad)
jmp
rcl
retf
and
jmp
cwde
scas
loope
push
fbld
sub
adc
xor
xchg
lods
(bad)
iret
xchg
dec
jmp
mov
jle
jnp
cmp
and
inc
xchg
int
mov
pop
or
ror
sbb
sbb
lds
xlat
push
and
inc
and
js
test
out
leave
pop
aam
ss
pop
mov
xor
pop
cld
mov
rcl
inc
jle
and
dec
bound
in
cdq
mov
ror
retf
mov
and
repz
cli
out
adc
fild
scas
push
test
xchg
clc
xor
jnp
sahf
adc
mov
cld
retf
xchg
jmp
sub
int3
and
sbb
inc
cwde
adc
loopne
js
push
and
aad
add
iret
hlt
push
and
pop
icebp
stos
mul
movs
nop
in
cmp
das
outs
test
sub
and
push
mov
scas
loop
out
push
pop
xor
push
lods
pusha
mov
pusha
repz
push
jg
dec
mov
xor
xchg
call
mov
jg
xchg
call
mov
js
pop
shr
ror
arpl
add
arpl
inc
lds
cs
sub
xchg
pop
sub
inc
or
mov
(bad)
stos
repz
adc
leave
je
leave
into
ror
loop
daa
push
stos
jns
arpl
push
mov
push
sti
ror
mov
loope
push
sub
retf
inc
js
inc
in
and
mov
xor
cmp
sub
stc
mov
aaa
cmp
loopne
les
aam
cld
xchg
add
sar
call
adc
test
jmp
fild
dec
cld
xchg
mov
pop
jnp
or
mov
sub
mov
inc
mov
push
pop
retf
icebp
out
arpl
push
aam
cwde
repnz
mov
stc
pop
stc
cdq
ins
outs
ror
lock
fild
mov
loop
mov
inc
clc
jecxz
pop
xor
pusha
sbb
mov
and
pop
hlt
aad
pop
dec
outs
mov
push
neg
sbb
(bad)
jmp
test
inc
es
cdq
cmp
ins
leave
(bad)
ja
mov
xlat
pop
ror
fnstsw
push
call
sbb
xchg
xor
pop
xor
mov
xchg
ja
cmp
out
call
out
sub
dec
movs
in
int3
test
gs
sbb
xchg
pop
adc
xor
fdivr
jb
jecxz
jge
cmp
mov
(bad)
ss
fcmovbe
(bad)
stc
out
ret
fs
pop
outs
sbb
aas
cmps
dec
xor
push
pop
add
call
sbb
lock
ret
jnp
cld
xchg
out
mov
xor
sub
fimul
and
or
dec
sub
pop
popf
or
enter
inc
sahf
jle
into
and
int3
imul
sub
or
mov
repnz
test
dec
aaa
inc
sbb
xchg
push
ffreep
int
and
test
cmp
fwait
mov
inc
(bad)
sar
push
add
sub
cmp
push
fidivr
mov
stos
out
test
ror
mov
rcr
in
aaa
and
leave
into
push
inc
fdivr
mov
js
pop
jp
mov
push
sbb
sub
push
push
sahf
neg
xchg
fiadd
xor
and
dec
pusha
inc
mov
lods
sbb
dec
out
in
push
push
sbb
and
idiv
mov
nop
arpl
aaa
daa
call
xlat
cdq
or
popa
adc
cmps
jmp
rcl
add
xor
popa
(bad)
jb
leave
sub
not
aaa
cmp
inc
cmp
adc
retf
mov
add
ds
test
imul
and
pop
ret
push
jp
xchg
cli
leave
jno
jecxz
fwait
gs
imul
and
cmp
adc
sbb
xchg
enter
fidiv
outs
(bad)
loope
icebp
push
dec
in
out
dec
call
sub
loope
pop
(bad)
cld
mov
imul
dec
cmp
and
sub
sub
pop
test
push
call
mov
aam
inc
push
or
pop
pusha
lods
dec
ins
xchg
(bad)
adc
mov
pop
inc
sti
sbb
pop
sub
test
mov
(bad)
data16
iret
out
sub
icebp
icebp
in
adc
sub
cmp
retf
jmp
in
dec
add
xlat
test
add
retf
or
add
lods
add
retf
inc
inc
nop
cdq
mov
inc
jmp
mov
cmc
jl
fisttp
stos
in
add
sbb
mov
in
sahf
xchg
xchg
(bad)
pop
call
stos
or
mov
mov
mov
outs
out
fwait
jle
push
xchg
push
scas
sub
mov
int3
inc
mov
sti
pop
mov
jle
hlt
leave
aas
mov
add
mov
push
dec
mov
mov
pop
jge
test
pop
pop
xor
(bad)
scas
les
xchg
jle
arpl
cmp
ins
xor
les
dec
(bad)
out
lods
jmp
enter
(bad)
clc
enter
mov
fdivr
pop
out
push
(bad)
mov
sub
or
in
add
cs
adc
inc
or
bound
add
push
adc
rol
cmp
fcmovbe
out
cmps
mov
push
cmp
fadd
cdq
ret
or
lahf
rcr
dec
adc
scas
popa
dec
ds
mov
mov
push
push
inc
xor
outs
dec
jle
aad
add
cmp
adc
lds
jno
push
sbb
push
in
ret
xor
mov
dec
mov
sti
cmp
add
in
push
test
ret
push
dec
(bad)
cmc
inc
jp
loope
push
xchg
pusha
xchg
cmp
lods
not
mov
lods
mov
mov
and
sub
jecxz
xchg
dec
loope
or
push
push
bound
adc
ret
fimul
inc
cmp
xchg
jmp
xchg
repz
or
xchg
or
inc
add
adc
mov
jl
cmps
push
daa
stos
xor
jno
fst
add
push
or
mov
jno
aad
or
mov
js
int
push
sbb
fcmovnbe
cmp
div
fisub
or
loop
cli
mov
push
loopne
rol
push
push
mov
shl
lock
sbb
mov
adc
cmps
ret
gs
cld
ds
int
or
jmp
pop
pop
test
out
ins
dec
neg
repnz
add
xor
push
aam
lea
jmp
mov
xor
hlt
jecxz
outs
sti
push
jmp
jnp
pop
mov
(bad)
jo
pop
pop
mov
test
pminub
pop
icebp
xor
jmp
xchg
mov
mov
mov
xchg
or
fistp
dec
nop
push
stos
push
lahf
lods
pop
out
test
dec
mov
dec
pusha
mov
fst
mov
mov
arpl
add
cmp
xor
int
xchg
adc
aam
or
imul
adc
(bad)
movs
dec
std
(bad)
shl
fisubr
imul
and
push
int
mov
pop
push
and
adc
sub
cmp
xor
and
aam
xchg
mov
sbb
(bad)
sti
into
int
push
dec
out
mov
fldl2e
jae
or
in
frstor
pop
add
and
mov
xlat
call
fsubp
mov
sub
shr
daa
push
aam
lods
pop
mov
dec
sahf
and
repz
std
loopne
push
inc
mov
mov
push
and
jno
(bad)
mov
add
jg
pop
ficom
loop
mov
iret
mov
repz
dec
fnstcw
loop
push
mov
pop
mov
fstp
pop
in
sbb
cmp
dec
cwde
movs
mov
int3
pop
mov
add
out
repnz
fbld
js
add
pusha
daa
push
sahf
pop
inc
pop
push
retf
pop
in
jle
mov
push
lea
aaa
clc
cmps
rol
xchg
jb
(bad)
xchg
or
xchg
add
mov
mov
cmp
jle
sti
mov
dec
fwait
dec
sbb
xchg
pop
mov
dec
jg
ret
loop
and
lahf
rol
adc
cld
sub
loope
imul
mov
pop
call
adc
call
jle
adc
mov
inc
fs
mov
test
out
add
xlat
sub
adc
mov
lods
dec
push
xchg
and
xchg
mov
inc
cli
cli
ds
jle
push
gs
push
stc
xor
mov
sub
push
stc
xor
dec
mov
int3
cmp
iret
jae
sbb
push
pushf
cmp
xor
and
dec
pop
aas
sahf
xchg
push
ja
push
retf
aas
xchg
fwait
push
out
iret
call
xchg
mov
rcr
jne
mov
fcomp
mov
sub
pop
xor
call
jecxz
push
daa
call
xor
jmp
and
outs
or
lods
mov
and
shl
mov
js
add
and
dec
mov
jbe
mov
outs
pusha
repnz
and
inc
sbb
push
jno
bound
mov
push
sub
neg
cmp
cmp
sahf
mov
addr16
mov
adc
not
call
sub
test
adc
sbb
xor
jl
pop
loopne
mov
test
data16
jae
fwait
lods
sub
mov
or
mov
cmc
dec
and
push
add
mov
push
mov
add
sbb
call
sahf
in
loope
xlat
sbb
xchg
mov
rcr
push
in
gs
adc
inc
inc
pop
xchg
test
gs
cmc
ins
test
inc
push
xor
stos
xor
shl
mov
loop
fist
cdq
cmp
stc
pop
jno
mov
add
repz
out
shl
dec
mov
xchg
jmp
pop
dec
inc
jne
jle
inc
cmps
dec
fisub
add
into
inc
es
out
fcomp
sub
dec
or
mov
jle
les
aas
mov
loope
mov
cwde
sub
dec
sub
xlat
mov
wrmsr
mov
lods
imul
cmps
pusha
and
(bad)
inc
mov
int
pop
and
ret
(bad)
pop
(bad)
mov
hlt
daa
xchg
test
add
add
outs
and
xchg
sbb
bound
mov
mov
loop
frstor
pop
scas
ja
sub
aaa
std
sub
repnz
and
rol
mov
mov
push
adc
mov
in
popa
xchg
xor
loop
les
lock
dec
adc
mov
dec
cmp
sbb
cmp
imul
nop
push
enter
add
adc
inc
pop
jl
cmp
data16
je
sub
dec
enter
mov
pop
popf
add
sub
and
movs
sbb
cmp
jne
add
ror
dec
rcr
push
movs
stos
dec
ds
dec
(bad)
outs
sbb
stos
push
dec
adc
pop
lea
cmp
mov
xor
sub
(bad)
mov
fmul
xchg
cmps
inc
and
xchg
and
add
cmp
aaa
dec
mov
call
js
pop
mov
cmp
jle
mov
cmps
scas
push
retf
adc
test
jno
in
out
push
outs
sub
aaa
pop
pop
out
sbb
inc
call
sbb
mov
cmc
lds
push
cmp
push
jbe
aad
retf
lahf
dec
scas
inc
sub
repnz
sbb
(bad)
jo
cld
(bad)
gs
push
push
mov
lds
ins
cs
xor
adc
jne
push
ds
fiadd
nop
leave
xchg
xor
mov
lahf
push
ret
adc
jge
mov
sti
js
clc
fcom
stc
fbld
xchg
xor
out
jae
adc
pop
push
sbb
shr
(bad)
or
es
aas
xchg
jge
jp
shl
aad
mov
mov
xchg
arpl
fsubr
jg
jno
xchg
in
jp
push
test
retf
test
xor
ret
cdq
ss
lods
or
lods
stc
test
fwait
call
cmc
imul
xchg
inc
enter
jle
mov
cmp
mov
push
jae
repz
jmp
adc
mov
lock
pop
icebp
outs
mov
push
inc
addr16
test
ins
scas
ss
lea
int3
xor
addr16
cmp
inc
in
xchg
mov
cs
xchg
movs
mov
out
and
push
sub
lds
push
and
jg
adc
fdivr
jecxz
sbb
repz
pop
and
(bad)
push
imul
cli
push
jmp
aas
mov
rol
out
pop
nop
and
scas
xchg
pushf
mov
loop
ja
test
pop
(bad)
pop
retf
data16
jmp
mov
cmc
repz
test
inc
stc
imul
mov
cli
lock
rcl
adc
(bad)
arpl
retf
or
push
adc
lea
jmp
loope
or
mov
xor
call
daa
xchg
test
iret
jae
loop
in
pushf
popf
sbb
mov
mov
mov
adc
fcom
outs
fistp
fimul
push
add
sub
stc
dec
lea
jno
iret
fsub
cwde
lea
mov
cmp
call
pop
jl
jno
pop
rol
aam
xchg
out
out
int3
or
sbb
ja
pshufw
inc
xchg
mov
dec
add
sbb
scas
retf
mov
mov
inc
ret
jns
daa
dec
rcr
adc
jae
fmul
dec
dec
mov
jmp
and
(bad)
dec
push
xchg
inc
das
ret
cli
scas
inc
(bad)
jecxz
(bad)
jecxz
sub
sahf
repz
adc
xor
sbb
stc
je
add
push
test
or
add
push
dec
rcr
fwait
push
inc
data16
into
xchg
bound
cdq
inc
adc
and
loope
mov
sbb
test
int3
div
sbb
pop
mov
sti
daa
mov
jg
cmps
outs
xchg
hlt
movs
fstp
push
into
sbb
dec
pop
add
aaa
test
jge
(bad)
loope
add
adc
pop
jp
(bad)
cwde
mov
xor
mov
outs
xor
(bad)
push
popa
sar
push
bound
fs
mov
mov
jne
mov
leave
xchg
jge
fnstsw
push
sbb
mov
ins
vsubps
hlt
lea
add
mov
mov
xor
and
jno
or
in
(bad)
xchg
adc
aad
push
and
inc
(bad)
add
ins
jae
retf
dec
test
pop
lahf
adc
mov
jge
or
aam
repnz
scas
dec
js
pop
gs
pop
pop
retf
pushf
sbb
(bad)
(bad)
cwde
frstor
dec
xchg
or
(bad)
pop
inc
sahf
(bad)
pop
and
jl
dec
xchg
mov
xlat
inc
jp
cmp
mov
mov
sub
stos
jno
mov
iret
and
dec
mov
dec
std
pop
cmp
xchg
mov
jmp
push
push
stc
in
arpl
or
push
aad
pop
test
imul
pop
mov
mov
outs
icebp
aad
pop
push
gs
sub
(bad)
pop
adc
call
iret
and
or
pop
add
ret
xor
stos
and
push
test
cmps
ja
mov
mov
cwde
clts
fisttp
inc
dec
sub
cmp
cmp
cdq
dec
repnz
mov
xlat
rcr
dec
les
adc
cmp
jnp
mov
or
movs
dec
add
aas
aas
inc
idiv
repnz
les
loope
mov
(bad)
ds
stos
lods
loop
and
int
dec
iret
push
data16
adc
add
mov
cld
out
in
dec
or
jne
sub
adc
mov
loop
shl
mov
xor
retf
push
inc
inc
daa
mov
mov
(bad)
xor
mov
cmps
ja
cmp
rol
or
stos
out
add
pop
add
mov
push
(bad)
fcom
aam
rol
repnz
xadd
in
movs
fisttp
sbb
aam
mov
cmps
dec
js
push
pop
pop
sbb
jle
out
add
movs
(bad)
aam
push
or
(bad)
sbb
xchg
sub
sahf
out
call
push
les
push
lods
fwait
sahf
das
xor
rcr
fidiv
js
inc
mov
jecxz
jo
iret
sub
sbb
push
jb
stos
mov
mov
retf
xor
xor
xor
xor
mov
sub
inc
xor
sub
scas
mov
cmc
and
and
sub
and
cs
xchg
sub
fdiv
add
mov
lods
sbb
pop
out
or
push
dec
into
movs
loopne
inc
push
mov
mov
mov
pop
ret
call
or
and
lea
ret
call
xchg
pop
push
adc
sbb
gs
cld
adc
fs
xlat
cmp
enter
inc
sub
sub
ret
inc
jl
jns
cmp
push
fnstcw
cmc
scas
xchg
out
add
in
stos
das
loope
xor
gs
lods
mov
ret
dec
mov
fs
cdq
aas
in
add
outs
cmp
call
sbb
ins
ins
pop
inc
mov
test
xor
mov
cmp
sbb
(bad)
push
xchg
or
and
jae
hlt
jecxz
xor
dec
repz
test
add
imul
out
in
and
sahf
jmp
mov
std
add
pop
ja
dec
(bad)
frstor
mov
inc
les
test
sbb
shl
add
inc
adc
rcr
movs
sbb
push
add
sub
mov
arpl
push
pop
das
push
bound
ins
inc
ror
or
inc
aam
icebp
or
das
stos
mov
loopne
push
mov
out
pop
mov
push
mov
rcr
or
adc
jmp
stos
push
fistp
ins
cmps
dec
sub
add
pop
inc
sti
or
pop
sbb
or
mov
sub
loope
mov
mov
mov
add
xor
std
inc
sahf
out
in
sti
add
call
or
jmp
enter
add
push
mov
rol
jmp
mov
shl
jnp
jmp
mov
or
jno
inc
shr
scas
adc
adc
dec
pop
mov
adc
ins
cmp
add
aaa
ds
add
adc
movs
movs
jl
xchg
and
cmp
(bad)
lock
(bad)
adc
xlat
push
ret
jnp
hlt
ins
sbb
inc
test
xor
aaa
push
jne
js
dec
pushf
(bad)
inc
dec
bound
fstp
in
pop
and
mov
pop
lahf
scas
call
pop
addr16
cli
(bad)
mul
or
mov
adc
mov
mov
ds
call
cmps
xchg
xchg
aas
pop
cmc
cmp
or
jo
enter
inc
aaa
clc
pop
mov
fnclex
mov
gs
in
fist
push
sbb
inc
jae
data16
jno
cld
loopne
push
dec
xor
adc
and
xchg
cmp
shl
dec
data16
xor
rcl
jbe
ret
xchg
sbb
pop
lds
add
ja
imul
mov
in
pop
pop
fcmovu
cmp
in
push
or
jle
jnp
mov
dec
into
test
lock
and
popa
or
aaa
dec
mov
(bad)
cmp
mov
adc
mov
stc
imul
gs
jno
adc
loop
hlt
nop
push
test
ret
xor
scas
inc
mov
push
ret
xchg
push
(bad)
xlat
call
imul
daa
rcl
lods
rol
enter
stos
xor
push
not
ins
mov
dec
cmp
fistp
addr16
outs
dec
sbb
push
jne
sub
add
and
dec
imul
jns
mov
cmps
xor
das
shl
dec
dec
cs
rcr
xchg
lods
add
add
and
jecxz
xchg
adc
test
and
mov
js
das
sahf
ret
mov
leave
push
es
lea
pop
fsubrp
nop
cld
shr
mov
sbb
ret
jg
and
lea
fsub
lods
(bad)
inc
clc
aam
daa
fild
ja
inc
mov
mov
in
and
mov
in
mov
push
pop
inc
dec
dec
mov
les
fcomp
mov
add
xor
inc
sahf
dec
cli
push
mov
lds
ins
test
adc
aaa
mov
xchg
jo
sahf
fdivr
scas
and
inc
cmp
sub
nop
sbb
mov
ins
adc
inc
and
push
shr
xchg
jmp
hlt
fist
push
dec
hlt
and
std
add
dec
mov
jnp
sub
ja
sub
test
cdq
sub
outs
xchg
ins
bound
and
sub
fidiv
and
lds
in
push
jmp
call
lods
sti
cmp
pop
xor
dec
rcr
dec
inc
cmp
sahf
and
(bad)
in
xor
repz
xor
pop
lods
inc
aam
sbb
dec
cmp
neg
das
in
jns
and
retf
cmp
test
stos
mov
sbb
mov
shr
ret
jmp
sti
fsubr
cmp
push
in
and
xor
arpl
aad
push
pop
sahf
fsub
popf
dec
hlt
imul
cmovge
push
push
movs
xchg
ret
cmp
push
mov
jns
or
xor
dec
jg
xchg
cmp
loopne
pop
mov
xchg
add
out
test
test
cmp
add
jbe
iret
out
sbb
sub
mov
add
jb
jle
pop
xlat
ss
xor
mov
int
(bad)
ret
mov
imul
call
mov
test
out
pop
jne
mov
inc
mov
test
mov
aam
jg
cli
push
mov
(bad)
fbld
lahf
ret
in
add
push
pop
fimul
lods
in
repz
stos
(bad)
jle
rcl
fwait
cld
jb
dec
cmp
and
cmp
icebp
cmps
add
jno
sbb
enter
movs
je
xchg
push
or
mov
into
add
mov
pop
sbb
inc
lahf
(bad)
aaa
movs
xor
xchg
xlat
jmp
out
mov
inc
out
dec
jg
jle
and
jns
push
aas
imul
pop
sub
loopne
fmul
sahf
sub
inc
call
movs
mov
add
imul
add
les
pop
jl
mov
and
enter
mov
push
mov
lea
add
int
mov
mov
imul
aam
out
out
jmp
pop
push
ins
jbe
stos
add
cmp
or
repz
xlat
and
push
sbb
add
or
dec
arpl
outs
stc
sahf
xchg
push
pop
jmp
sbb
pop
dec
adc
jle
enter
stos
div
and
pop
dec
movs
mov
mov
lods
pop
not
push
call
test
push
out
mov
mov
dec
fld
leave
xchg
test
rol
dec
lods
mov
idiv
loope
pop
and
imul
xlat
dec
pop
jmp
push
xchg
shl
repz
inc
or
pop
sub
cmp
or
dec
mov
sti
sub
imul
xor
lea
or
retf
lods
je
and
xor
outs
scas
inc
and
pop
mov
add
call
sahf
sahf
sub
lahf
mov
inc
test
cmps
pop
sub
inc
cdq
jmp
fbld
rcr
jb
and
and
xchg
push
in
jl
std
jmp
mov
jp
daa
jle
mov
int3
cmp
scas
jl
shr
call
add
pop
fdivrp
out
mov
mov
(bad)
imul
ins
adc
test
out
retf
adc
lock
inc
sbb
je
xchg
and
cmp
scas
cmp
repz
aad
inc
outs
xchg
or
adc
jmp
aam
test
lods
stos
dec
cdq
cmp
dec
xlat
les
pop
aas
add
(bad)
lods
mov
xchg
mov
xor
ret
jo
int
jo
loope
and
imul
pusha
fs
or
neg
push
lods
icebp
xchg
jns
fiadd
adc
sar
ins
stos
jecxz
jp
pop
dec
add
jmp
adc
adc
mov
test
sbb
stos
call
mov
aam
push
push
mov
retf
cmp
sbb
inc
pusha
inc
push
adc
xchg
push
retf
loop
dec
fbld
pushf
aaa
cmps
clc
pop
jb
adc
inc
mov
jg
adc
popf
dec
clc
dec
aam
ins
mov
pop
test
jmp
fdiv
mov
rcr
and
mov
int
mov
addr16
sti
aas
cmp
push
aam
cld
cmp
push
(bad)
mov
rcpps
shrd
clc
in
mov
je
cmp
mov
aas
rol
add
push
pop
pusha
xchg
sahf
in
push
push
shl
inc
xor
jmp
cmp
mov
mov
push
arpl
cmp
test
or
lds
mov
xchg
mov
shl
add
or
lock
out
or
xchg
stos
std
popa
xchg
pop
aad
ret
popa
pop
xchg
outs
sub
sbb
dec
pop
xor
sbb
pop
fisttp
sub
icebp
stc
jge
mov
gs
xor
in
mov
call
dec
inc
cli
adc
data16
xor
xor
ret
push
daa
leave
inc
pusha
stos
jmp
mov
mov
and
or
fcmovu
sti
push
gs
sub
and
sbb
mov
or
aas
je
mov
push
xor
div
repnz
jbe
xor
int
hlt
add
jle
stos
sbb
stc
imul
sbb
(bad)
jne
mov
xchg
loope
push
jbe
or
mov
movs
sbb
and
mov
idiv
pop
lods
jecxz
mov
and
in
sub
(bad)
lds
mov
xchg
inc
sub
xlat
mov
or
cli
jne
mov
or
mov
mov
popfw
scas
call
ror
and
in
inc
fistp
push
aam
and
hlt
sub
sbb
sbb
or
add
outs
sub
bound
inc
adc
and
jae
and
cmps
push
or
sahf
sub
loopne
sbb
(bad)
jmp
jb
out
adc
add
mov
xchg
mov
dec
movs
clc
push
dec
sub
(bad)
mov
out
test
mov
ret
jg
movs
rol
inc
fidivr
xchg
xchg
pop
mov
adc
adc
mov
aaa
rcl
fld
or
mov
and
jg
pop
fisttp
jecxz
pusha
imul
scas
pushf
jb
mov
leave
fnstsw
push
mov
sti
arpl
mov
leave
xor
lds
repz
arpl
je
mov
or
push
mov
ror
cwde
cmp
and
push
xor
repz
push
inc
cwde
fstp
push
sub
cld
test
jmp
dec
std
xchg
mov
xchg
xlat
jnp
shl
dec
jge
ret
scas
dec
add
call
popf
outs
(bad)
aas
mov
jbe
jb
push
dec
add
dec
xchg
and
jns
leave
mov
popa
mov
clc
loop
cmp
in
rcl
or
pop
xor
xchg
retf
adc
cmp
xchg
xchg
lahf
stos
ins
or
cld
jecxz
jae
outs
enter
pop
aam
scas
ds
sub
ret
mov
push
test
and
lods
push
lahf
pop
je
xchg
xchg
xchg
pop
inc
into
or
inc
retf
mov
xor
mov
xchg
adc
mov
addr16
aad
push
pusha
xchg
movs
and
xor
add
dec
or
test
pop
mov
outs
jno
cmp
inc
js
repz
mov
aaa
je
stc
(bad)
popa
imul
dec
into
nop
ror
jns
xchg
and
dec
in
test
fidivr
mov
les
pop
cwde
and
lods
xlat
xchg
jl
int
inc
cmp
inc
movhlps
adc
inc
mov
fstp
ins
sub
iret
push
jmp
bound
aas
jmp
fistp
add
mov
retf
adc
out
lods
and
(bad)
push
int3
pop
bound
mov
mov
lods
push
aam
jecxz
lods
pop
sbb
pop
sub
push
mov
pop
mov
jo
adc
sub
xchg
xchg
orps
dec
test
aad
addr16
clc
enter
jno
push
cmp
ja
mov
outs
pop
pop
lods
test
adc
adc
sti
sub
dec
pop
cmp
adc
inc
jns
xchg
out
lds
fs
in
out
cmovb
sahf
sub
(bad)
std
pop
jnp
push
mov
xchg
das
xchg
mov
jne
mov
inc
push
out
pop
lods
sub
or
retf
mov
push
cmp
pop
add
xor
int
aaa
and
aad
popf
adc
cmp
gs
jmp
pop
arpl
stos
iret
push
ficom
test
mov
push
clc
fchs
push
pop
jo
inc
aaa
or
push
movs
scas
(bad)
and
test
ss
mov
jl
xor
add
fsubr
xchg
in
out
imul
or
daa
inc
ins
jns
pop
loop
and
cwde
retf
xchg
loop
stc
pop
aam
jne
pop
add
addr16
mov
push
mov
enter
(bad)
lods
push
movs
in
(bad)
xor
arpl
shr
sbb
xchg
cmps
movs
int
mov
xchg
ret
push
mov
sbb
mov
leave
sahf
cmc
push
or
in
fisub
cmp
jo
in
adc
stc
add
push
ins
xor
mov
in
xchg
cmps
sbb
in
je
or
pushf
cmp
(bad)
adc
adc
es
call
push
jg
mov
clc
pop
lods
sahf
or
enter
lods
mov
fild
push
retf
inc
outs
push
mov
add
int3
in
sbb
mov
mov
push
ret
stc
add
int
jb
jne
sti
mov
add
ins
stos
mov
loopne
and
into
test
cmp
mov
adc
jae
push
stos
and
push
sub
push
int3
push
adc
xor
lds
push
out
int
movs
mov
push
outs
push
mul
(bad)
sti
cmp
retf
push
icebp
repnz
pop
dec
shr
jo
jp
jge
fldenv
aas
cmps
mov
mov
test
mov
cs
or
fxch
xchg
fist
pop
fidiv
jnp
out
mov
aad
lahf
rcr
mov
dec
mov
fidivr
test
mov
ins
xor
pop
add
fwait
add
dec
dec
idiv
imul
pushf
xor
push
xor
xchg
movs
retf
leave
loope
mov
cwde
cmps
ss
lea
aas
shl
add
std
xchg
add
mov
popa
xchg
xor
sbb
or
mov
je
loope
aas
dec
hlt
xchg
je
sbb
cmps
add
scas
push
fs
lods
sbb
ret
mov
int
fiadd
mov
ins
fistp
stos
and
add
call
sahf
mov
sti
mov
test
pop
(bad)
call
inc
clc
(bad)
ret
jo
cmp
mov
jb
daa
lahf
mov
jge
sti
rcr
pop
mov
pop
in
stc
pop
(bad)
retf
mov
js
push
cwde
jp
jne
jmp
adc
pop
mov
imul
fldenv
or
add
loope
je
lea
outs
dec
inc
(bad)
xchg
add
stos
mov
mov
or
pop
das
cmp
sub
jae
xor
ja
inc
cmp
repz
cld
mov
mov
sbb
or
jecxz
pop
push
mov
(bad)
int3
jne
mov
dec
mov
cmp
mov
pop
xlat
lahf
jno
pop
(bad)
outs
(bad)
aaa
pushf
inc
sbb
cli
test
loope
adc
adc
pop
test
add
cmp
clc
fnstenv
xor
icebp
mov
into
call
bound
and
pusha
ret
or
add
jmp
add
dec
(bad)
jns
cs
adc
mov
jae
jbe
pop
popf
test
xor
and
loope
in
loopne
push
fadd
inc
or
repz
div
push
cwde
stos
cmp
and
xor
fwait
movs
ja
mov
inc
inc
stc
sub
pushf
jnp
xor
sbb
cmps
mov
mov
sub
mov
sbb
leave
les
jecxz
push
icebp
mov
and
mov
call
mov
mov
mov
shl
sar
bswap
loopne
pop
cwde
mov
repnz
cli
add
je
jmp
repnz
mov
sbb
jo
lds
ss
pushf
mov
fs
es
xor
jge
mov
dec
loop
add
ret
jle
or
call
ret
add
retf
dec
mov
pop
stos
jl
add
mov
xchg
in
out
dec
xlat
or
mov
in
lahf
shr
nop
jl
fadd
mov
inc
mov
mov
cmp
cli
fcomp
push
(bad)
push
fistp
xlat
mov
mov
xor
mov
jp
nop
jmp
inc
daa
jno
addr16
xor
lods
inc
out
or
fidiv
mov
ja
out
dec
pop
and
xchg
pusha
pop
jo
jno
das
add
and
loopne
or
xlat
div
cmp
sbb
shl
lock
icebp
cmp
or
shl
cmp
shl
movs
sub
cmp
mov
push
add
imul
dec
inc
mov
outs
inc
jge
pop
stos
cmp
jb
inc
mov
loopne
(bad)
jmp
add
jb
cdq
dec
and
sub
lods
inc
jns
loope
jle
fs
push
std
xchg
adc
sub
fs
inc
sub
jmp
jae
jo
ss
add
mov
mov
lods
add
call
fwait
ja
inc
and
adc
les
movs
pop
stc
push
out
repz
in
ret
pop
mov
mov
(bad)
sub
fs
das
or
cmp
sti
icebp
lods
dec
adc
(bad)
out
sbb
xchg
and
jbe
fcom
retf
stos
mov
or
or
fwait
adc
mov
push
sbb
and
js
jmp
xchg
mov
ja
jecxz
adc
popf
test
pop
ss
rol
(bad)
cmp
add
xchg
xchg
add
ret
cld
fcmovbe
(bad)
jmp
inc
and
jns
sar
xchg
cmp
cld
cmp
xchg
movs
push
push
or
fwait
sti
repz
ss
sub
repnz
and
dec
jnp
(bad)
mov
add
out
or
push
(bad)
inc
imul
cmps
pop
or
mov
cwde
out
fcomip
cwde
fmul
jne
test
pop
test
fwait
js
dec
cli
sbb
movs
jmp
jae
push
sar
imul
dec
mov
(bad)
jmp
and
sub
pop
push
call
pop
dec
or
cli
pop
cmp
pop
nop
pop
call
adc
leave
inc
jae
mov
pop
cmp
push
or
xchg
or
gs
sub
ret
fwait
pop
dec
daa
xor
out
push
sub
data16
mov
fld
ja
movs
and
div
movs
imul
xor
addr16
aas
xchg
daa
in
sbb
out
sub
pop
div
mov
out
cmp
mov
imul
mov
loope
pop
cs
(bad)
mov
scas
out
mov
mov
jmp
int
neg
aam
dec
in
pop
cld
add
jo
xor
jae
or
mov
xchg
jae
out
adc
div
jge
fnstenv
aam
addr16
cli
imul
stos
pushf
int
outs
sub
cmp
pushf
pop
xchg
pop
stos
push
shl
mov
iret
xor
inc
int3
xchg
call
fcom
icebp
ret
push
loop
mov
or
mov
je
(bad)
jb
mov
dec
lods
fiadd
call
fld
shl
xchg
fdiv
bound
mov
sbb
ins
push
aam
mov
das
and
ss
call
push
adc
mov
add
xor
jecxz
lea
jl
or
push
stos
jp
jecxz
mov
sub
cld
popa
inc
popa
pop
int
fimul
mov
jg
or
or
jb
mov
cdq
inc
fisub
aad
or
out
popf
add
mov
lds
les
cdq
xchg
rol
pop
in
rcr
jb
or
in
lock
sub
cmps
push
repz
and
cmp
pop
sbb
xor
popf
(bad)
aam
xchg
mov
mov
jmp
fstp
mov
xlat
mov
not
push
xchg
bound
push
mov
xchg
add
imul
jg
sub
call
retf
push
aad
pop
scas
sbb
jb
or
and
xor
dec
in
pop
in
or
ror
or
cwde
pop
ret
adc
add
inc
mov
add
ret
adc
pop
mov
out
inc
enter
push
mov
and
imul
lds
out
pusha
sub
or
mov
idiv
gs
stc
inc
leave
jne
cmp
mov
les
icebp
(bad)
sub
lea
push
pop
adc
add
sub
xchg
daa
add
or
xlat
mov
add
pop
push
into
mov
fistp
cmps
mov
pop
mov
sbb
dec
mov
adc
scas
les
push
gs
aas
(bad)
push
mov
push
pusha
mov
inc
(bad)
inc
cmp
aaa
pop
jmp
test
in
ss
scas
lahf
ret
popa
inc
mov
test
sar
fwait
xor
cmp
pop
xchg
aam
jo
pop
mov
add
mov
lahf
mov
sub
stos
and
loopne
pop
mov
mov
xchg
adc
stc
or
cmp
or
mov
dec
aaa
add
mov
pushf
sti
clc
test
and
adc
jae
icebp
ins
add
hlt
ret
iret
in
pusha
in
mov
mov
mov
mov
mov
xor
iret
adc
add
cmps
sub
loopne
fxam
inc
int3
jb
(bad)
xor
xlat
inc
sbb
shl
sbb
inc
xor
stc
jle
mov
cmc
gs
loope
out
pop
(bad)
aaa
xchg
dec
cmp
xchg
dec
cmp
xchg
test
push
xor
(bad)
lds
pop
movs
inc
cli
lock
movs
mov
mov
lods
cmp
xor
test
pop
movs
cmp
pusha
ja
xchg
push
or
mov
loopne
mov
ss
push
mov
jno
in
push
fwait
add
sbb
push
pusha
pop
adc
or
retf
sub
jo
adc
xor
jb
out
sbb
mov
mov
sti
adc
out
pop
mov
out
test
jmp
aam
cwde
je
sub
scas
into
jmp
in
jno
sbb
jg
jnp
mov
adc
pop
cmps
es
dec
or
cmc
pop
push
push
jnp
xchg
or
imul
xor
and
mov
sbb
repnz
retf
or
mov
aas
push
pop
mov
pop
scas
dec
mov
jle
jae
sub
mov
pop
pop
pushf
pop
popf
sar
scas
push
mov
mov
mov
or
shr
mov
rol
inc
(bad)
push
push
cmp
in
inc
inc
cmp
je
or
xchg
sahf
fadd
jbe
push
scas
mov
arpl
int
imul
dec
aam
mov
cld
fwait
jo
dec
pop
iret
mov
movs
shl
xchg
mov
inc
fstp
sbb
dec
mov
dec
iret
push
sar
sub
jmp
mov
cmp
int3
test
or
sbb
mov
xchg
sub
add
pop
cmp
sub
cmps
sahf
pop
loopne
push
dec
push
ret
xor
add
cmp
push
push
inc
jp
loop
in
or
outs
pop
xor
push
pusha
cmp
xor
loope
ja
shl
arpl
call
adc
pop
dec
jmp
test
push
or
mov
pop
fs
movs
adc
in
or
inc
cwde
clc
pop
push
sbb
jb
sub
sbb
das
cmp
(bad)
mov
adc
sbb
inc
xchg
fsub
repnz
movs
outs
dec
retf
pop
xor
loopne
aam
ins
ficom
retf
mov
xor
jne
and
lods
fsubr
leave
sub
jle
out
jp
loopne
mov
loop
call
rcl
mov
and
jo
ret
xchg
clc
(bad)
jno
fwait
sahf
lds
xor
mov
xchg
test
pushf
adc
jns
mov
or
xor
nop
xchg
mov
aas
std
repnz
and
push
xor
push
and
sub
test
in
cmp
cmp
out
or
aad
xchg
push
mov
out
xor
sbb
in
push
jp
fild
arpl
push
or
pop
js
sbb
sub
push
rcl
cmps
sub
sbb
add
and
sbb
mov
jo
dec
adc
fld
add
xchg
adc
movs
mov
aaa
xchg
mov
jb
ins
mov
mov
pop
sbb
ds
cmp
dec
sub
ror
sti
into
mov
out
stc
push
cs
mov
int3
cld
icebp
push
inc
cmps
dec
out
sub
sar
inc
xor
jp
fs
lock
cmp
aaa
cmc
ret
lds
adc
mov
repz
retf
imul
xlat
call
inc
and
push
pop
mov
push
fcmove
scas
add
(bad)
aaa
fmul
(bad)
out
mov
pop
cmps
xchg
pop
sub
shr
mov
add
mov
mov
cli
jecxz
pop
jg
inc
dec
jmp
xchg
pushw
inc
fstp
or
push
add
xor
out
in
mov
xor
int3
loop
dec
jns
or
cmp
pushf
mov
fild
sub
dec
jp
in
data16
dec
in
cmp
loope
mov
and
push
mul
lods
add
jl
dec
pop
xor
mov
scas
fisttp
inc
and
aam
fwait
es
and
inc
jl
shl
pop
loop
xor
dec
call
xor
aam
jl
cmp
and
mov
cmps
jp
js
or
into
mov
push
mov
enter
mov
pop
mov
cmp
shl
mov
and
rcl
cmp
cmp
xor
xchg
mov
fld
xor
pushf
push
xchg
loopne
lods
jge
sub
imul
pop
arpl
outs
out
mov
mov
fisttp
fst
hlt
cmp
mov
sbb
or
mov
lock
ret
jno
mov
pusha
stos
cmp
xor
pop
cmps
shr
pop
jno
(bad)
loope
repnz
fld
lds
jl
call
jmp
retf
pop
xchg
ins
sbb
jl
fsubr
leave
xor
es
in
inc
or
sbb
pushf
scas
js
sbb
mov
daa
xor
push
(bad)
lock
pop
cmp
mov
in
into
cmps
pusha
data16
mov
push
outs
dec
pop
add
pushf
es
mov
mov
pop
inc
mov
cmp
jne
xchg
or
pop
fdivr
retf
sub
movs
push
inc
aas
imul
repnz
xor
and
jb
int3
aad
jns
pop
arpl
jl
cmps
mov
pop
mov
dec
ins
fdivr
test
sub
(bad)
int3
cdq
mov
bound
pop
lods
mov
adc
push
icebp
pop
pop
jecxz
add
dec
mov
pusha
shl
jns
add
ffree
int3
inc
mov
jbe
xchg
ror
or
nop
mov
pop
popf
shl
ror
movs
or
ja
sub
iret
or
xchg
and
cli
add
pop
int
neg
mov
loope
or
jnp
cmps
push
sub
test
xchg
jno
sbb
stc
hlt
mov
es
push
fisubr
pop
xlat
lock
xchg
xor
xor
pop
cmp
add
loop
push
mov
add
sub
shl
out
ret
enter
xchg
dec
xor
jnp
push
jbe
cmps
in
iret
cmps
cmps
push
sbb
loopne
test
out
ins
push
test
(bad)
call
xor
pop
push
add
loop
pop
cmp
mov
mov
add
add
dec
leave
sbb
lds
add
push
xchg
sar
scas
(bad)
mul
mov
inc
hlt
fmul
into
cwde
in
add
test
ret
jmp
xlat
hlt
mov
enter
stos
retf
or
xchg
jne
scas
sti
sbb
movs
bnd
mov
push
and
adc
rcl
xchg
mov
push
jmp
adc
daa
add
cmp
pop
std
mov
scas
aas
cmp
call
pop
lock
mov
ror
aas
cs
cli
inc
add
imul
adc
cli
jnp
push
sbb
cmp
and
sbb
jb
xchg
js
ins
ja
xor
cmps
(bad)
in
xchg
xor
sbb
mov
mov
xlat
cwde
aam
test
lods
ror
xor
xor
push
int3
and
pop
push
cli
inc
movs
inc
and
call
cld
adc
call
jge
dec
xor
inc
sub
mov
ins
or
bound
inc
adc
pop
mov
add
sbb
movs
test
cmps
shl
push
mov
mov
aad
or
in
loop
jmp
int
int
push
fisubr
mov
int3
sub
inc
scas
pop
push
out
retf
sahf
lds
daa
call
pusha
nop
in
ins
cmp
(bad)
cli
pushf
fisubr
pop
rep
cmp
and
in
adc
retf
fucom
imul
mov
mov
(bad)
loopne
push
(bad)
sub
sar
ror
push
rcl
mov
cmps
cmc
adc
and
loop
jl
xchg
or
pop
sub
in
ds
fldcw
adc
sbb
es
loopne
and
aaa
jae
dec
sbb
mov
mov
jb
mov
mov
fwait
loop
jbe
fsub
xchg
mov
adc
mov
ins
push
not
movs
pusha
sbb
and
mov
(bad)
mov
sbb
retf
(bad)
jmp
xchg
fs
lea
cli
lock
inc
fild
jle
cwde
stc
xchg
push
sub
popa
mov
jbe
pop
shl
enter
sbb
aaa
imul
stc
adc
pop
or
sub
aad
scas
xor
cdq
adc
gs
mov
ins
jmp
and
sbb
movs
je
jmp
pop
add
mov
pop
mov
lock
popa
sub
sbb
mov
adc
or
cmp
sbb
jb
mov
sahf
jns
lods
xchg
push
movs
dec
ins
lods
paddusw
test
(bad)
hlt
cmp
fdivr
mov
imul
clc
sbb
(bad)
daa
mov
movs
rcl
dec
add
jge
leave
inc
mov
push
pop
rcr
shl
loope
sbb
mov
fisub
mov
adc
push
ret
mov
sbb
cmp
int3
push
inc
mov
xor
fistp
daa
mov
enter
hlt
jnp
outs
outs
and
add
les
outs
adc
add
pop
pop
push
push
inc
cld
dec
sti
push
inc
push
je
jb
cmc
popa
mov
inc
lahf
fstp
cmp
aas
ins
or
clc
pop
in
pop
mov
dec
sub
xor
adc
jae
mov
dec
mov
fiadd
mov
fcomp
push
fimul
jo
bnd
mov
loop
mov
xchg
xchg
sbb
jge
push
jnp
daa
fwait
inc
mul
adc
cld
dec
int
sahf
xor
cdq
retf
inc
jno
lods
inc
retf
pop
xor
out
mov
adc
add
sbb
(bad)
pop
pop
inc
(bad)
mov
and
push
stos
fs
pop
and
jne
jl
jbe
add
mov
es
ins
mov
ss
sub
push
and
push
and
mov
fwait
inc
imul
or
iret
les
cmps
hlt
popa
(bad)
and
jmp
xchg
mov
cmp
in
ror
cmp
bound
inc
icebp
mov
icebp
ficomp
std
or
outs
push
jmp
movs
lahf
stos
outs
stos
cmc
cmp
stos
push
mov
and
ins
nop
push
jl
rol
leave
inc
mov
mov
sub
mov
push
je
push
sub
lahf
and
out
imul
es
addps
retf
hlt
and
cmps
in
mov
mov
pop
into
xor
dec
sbb
(bad)
cli
test
(bad)
mov
dec
ss
fiadd
mov
sub
(bad)
lds
push
arpl
pop
mov
push
ficomp
pop
mov
add
push
lea
shl
retf
pop
sbb
and
xor
dec
xchg
jo
pop
nop
and
inc
push
mov
in
fst
and
enter
ss
imul
or
mov
test
xchg
loop
ss
sbb
les
jbe
xchg
dec
into
test
jbe
pusha
pop
imul
(bad)
aas
cmps
cmps
mov
and
outs
jle
jo
les
clc
or
add
addr16
not
xchg
ja
and
inc
in
lahf
fs
cmp
loope
fild
les
daa
lock
xchg
and
add
retf
test
mov
xor
adc
lahf
repnz
add
cmps
or
dec
sbb
sub
popf
xor
mov
push
out
popa
(bad)
dec
and
inc
cmp
lods
fwait
xor
(bad)
call
sbb
sub
(bad)
lahf
dec
rcl
jle
ja
xor
pop
dec
hlt
ja
test
mov
daa
jg
jne
nop
xor
nop
mov
push
cmps
xchg
rcl
repnz
add
fdiv
mov
repz
ffreep
mov
(bad)
mov
(bad)
jb
pushf
xor
xor
pmaxub
out
ret
into
or
push
push
mov
or
inc
push
jmp
jecxz
or
call
mov
imul
js
push
outs
mov
lods
cmp
jns
test
jp
jo
clc
cmps
push
add
xchg
nop
ror
xor
cmc
iret
add
pop
xchg
mov
mov
push
test
add
test
sub
mov
(bad)
lahf
mov
gs
sub
ja
sub
fild
iret
aaa
mov
movsx
xchg
adc
jne
xor
fimul
xor
in
mov
cmp
or
les
addr16
dec
fbld
movs
xchg
rcr
ins
daa
aaa
mov
inc
les
hlt
lahf
test
or
sub
mov
xchg
mov
addr16
or
inc
push
push
punpckldq
mov
bnd
sbb
arpl
add
jmp
mov
xor
fsubr
dec
xchg
ins
and
sub
jnp
sbb
lods
add
je
add
and
sub
lds
loop
adc
daa
iret
out
(bad)
adc
lock
pop
inc
cmps
jb
inc
jmp
sub
ss
add
or
cmp
push
bound
sub
inc
sub
sub
cmps
xor
and
sub
shl
idiv
imul
nop
mov
sub
or
jg
les
jp
mov
loope
jno
xchg
cmp
mov
dec
push
fnstsw
xchg
jl
xlat
scas
add
mov
cs
jae
adc
jge
loope
jp
inc
xacquire
mov
adc
fldcw
fcomp
sub
icebp
scas
out
lea
into
dec
test
mov
add
or
push
jae
scas
xor
push
inc
fsub
inc
mov
xchg
push
pop
mov
mov
push
dec
inc
push
sbb
push
stos
daa
xor
repz
and
sti
pusha
add
or
jmp
out
(bad)
add
xor
inc
nop
adc
adc
in
jmp
adc
push
cmp
add
sub
add
cwde
call
adc
adc
jmp
sbb
movs
inc
mov
retf
mov
call
in
adc
shl
repz
xor
and
add
jle
adc
push
mov
das
test
cli
vlddqu
pop
int
in
lahf
cs
int
adc
dec
movs
int
jp
jmp
push
lahf
and
jge
dec
xor
mov
ins
cmp
push
cld
pop
sub
mov
cmps
mov
jmp
mov
std
add
ins
dec
in
cmp
adc
sti
jae
dec
inc
enter
add
add
add
push
adc
test
push
cmps
stos
movs
(bad)
mov
hlt
pop
push
mov
push
and
(bad)
or
jae
sti
mov
sub
loop
pop
inc
fcom
in
mov
idiv
cli
pop
imul
cmp
dec
je
out
or
cmp
inc
lds
aad
adc
fnstsw
out
cwde
mov
add
push
push
dec
ds
jmp
(bad)
mov
jmp
jnp
ds
jno
cmp
pop
icebp
fcomp
lods
inc
bound
data16
mov
pop
cvtpi2ps
sub
jp
jns
inc
lods
push
addr16
xchg
cdq
fstp
xor
jb
pop
xchg
fucomip
xor
fnstenv
or
inc
sub
cmp
test
sub
aad
(bad)
jne
aam
inc
xor
(bad)
xchg
and
sbb
jg
push
sub
lods
das
daa
dec
call
repz
dec
inc
add
add
pop
mov
sar
xor
(bad)
adc
test
test
sub
rcl
lock
mov
add
mov
mov
dec
retf
out
imul
out
mov
scas
ins
icebp
shr
(bad)
xor
imul
push
div
sub
mov
aad
ret
ret
adc
leave
jmp
stc
xlat
and
loope
pop
mov
ret
(bad)
push
leave
dec
into
cmps
cmp
and
mov
sbb
clc
inc
pop
cmp
mov
xor
imul
mov
fnstcw
mov
outs
push
jle
gs
loope
mov
dec
jle
jns
push
imul
ficomp
call
and
sbb
std
and
push
mov
jne
movs
call
xor
(bad)
lods
add
sahf
cmp
mov
fidivr
test
icebp
out
pushf
shl
dec
in
mov
jp
push
scas
xchg
mov
adc
retf
pop
das
cmp
xchg
xchg
push
jo
les
xor
test
sbb
arpl
push
ret
and
push
stc
add
sbb
mov
sbb
ins
cmps
jb
shl
outs
ja
stos
mov
test
jbe
call
cmp
xlat
dec
or
jbe
mov
mov
xor
pop
call
mov
ins
mov
neg
adc
les
pop
loop
lea
int3
or
xchg
mov
int3
adc
iret
loop
test
stos
das
pop
in
out
push
arpl
sub
int
inc
shl
push
mov
loop
(bad)
sbb
loop
sub
dec
pop
jb
shl
jge
les
cmp
ins
mov
xlat
mov
add
sbb
xlat
mov
cld
or
fidiv
or
(bad)
scas
clc
sbb
sbb
xor
push
mov
mov
daa
xlat
adc
loope
arpl
dec
xor
(bad)
fmul
mov
stos
dec
xchg
cmp
push
sbb
ret
retf
sbb
mov
sbb
dec
or
adc
rcr
or
mov
pop
ret
out
lahf
push
push
fwait
xor
jl
aaa
shl
retf
jmp
push
pop
call
ins
stos
push
(bad)
mul
adc
inc
add
pop
jmp
sub
bound
test
in
(bad)
pop
(bad)
leave
inc
lods
cmps
into
xchg
bound
mov
lods
xor
(bad)
mov
(bad)
aam
fdiv
mov
jp
mov
fsubr
aad
fwait
imul
scas
mov
cmp
cmp
popa
cli
adc
adc
pop
and
imul
mov
lods
jnp
cdq
cmp
cmp
ds
sahf
fistp
mov
adc
mov
fst
(bad)
fcmovnb
cs
push
sar
fistp
and
add
ins
in
stc
dec
sahf
push
mov
aad
adc
pop
mov
inc
lahf
sbb
or
jnp
jno
and
icebp
jae
xchg
lods
adc
cdq
ins
shr
xchg
in
lods
bound
cwde
fsubr
xchg
movs
mov
rcr
icebp
les
mov
xchg
push
sbb
call
test
mov
and
sub
pop
dec
and
push
dec
not
popa
fisub
xchg
ja
jg
loop
cmp
add
mov
mov
mov
dec
ins
les
mov
fst
inc
cli
cmp
sahf
test
sbb
(bad)
jae
cmp
cmp
repz
push
call
retf
mov
xchg
push
pop
sub
ds
mov
inc
imul
stc
and
hlt
pop
sbb
fcomp
dec
les
stos
push
and
sbb
mov
inc
push
jno
or
ror
xchg
sbb
add
jecxz
scas
rcl
cmps
imul
mov
ret
add
test
mov
xchg
jge
test
cmps
sbb
mov
pop
imul
xchg
(bad)
cmps
push
add
mov
adc
xchg
(bad)
fstp
mov
lea
test
out
xlat
mov
sbb
xor
and
shl
lods
cmp
adc
inc
mov
inc
pop
or
mov
test
and
push
aas
dec
popa
addr16
aaa
(bad)
pop
mov
ror
data16
adc
imul
xchg
imul
xor
mov
pop
dec
out
inc
mov
or
xchg
outs
pop
dec
push
push
mov
and
pop
xor
fistp
(bad)
push
mov
jno
retf
aaa
ins
js
jge
mov
daa
leave
mov
pop
loopne
and
and
cmp
or
in
out
xchg
lea
(bad)
out
push
stos
in
aam
jmp
scas
pop
jmp
hlt
sbb
pop
cmp
pop
xchg
cmp
inc
push
cdq
test
xchg
pop
das
inc
sar
ja
loope
fs
arpl
cmps
aas
cmp
aad
and
stc
loopne
leave
lock
cmp
add
in
sti
jle
mov
inc
jnp
jbe
shl
jmp
cmp
sbb
or
sub
xchg
and
pop
xchg
cmp
push
sahf
loopne
dec
enter
gs
mov
add
jbe
cmps
mov
ds
cmp
cmp
ins
mov
add
rol
(bad)
xchg
(bad)
rcl
hlt
mov
(bad)
lahf
mov
cli
pop
sbb
mov
inc
ds
(bad)
mov
and
dec
mov
dec
cmp
iret
fdiv
leave
hlt
xchg
jmp
cmc
aad
cmp
jle
aaa
push
jl
gs
pop
pop
xchg
push
mov
fmul
mov
outs
and
inc
shl
aaa
push
or
in
inc
pop
dec
and
ins
jecxz
sbb
clc
xor
sbb
loope
xor
mov
and
ins
out
and
fdiv
mov
xor
(bad)
mov
call
fidiv
test
call
xor
pop
mov
pop
add
stos
(bad)
push
pop
ins
std
aad
ret
jns
loop
sub
dec
inc
jl
test
and
push
xchg
mov
cmc
lods
idiv
push
popa
adc
or
ret
jmp
sub
ret
mov
inc
jg
les
retf
lds
sbb
ins
dec
lods
outs
jp
dec
jns
shr
jge
inc
je
dec
retf
leave
icebp
xchg
xor
lds
(bad)
add
lods
mov
retf
or
mov
jg
adc
sub
xor
clc
xor
mov
call
mov
popa
(bad)
bsr
sub
xor
inc
dec
pop
test
ds
fistp
std
sub
pop
mov
test
movs
mov
rcr
lahf
and
pusha
jnp
push
loop
jg
enter
jns
test
sbb
inc
stc
out
pop
mov
adc
ss
pop
ds
push
sti
fs
mov
loope
cmp
dec
push
data16
jp
dec
mov
lods
sub
fs
xchg
mov
jmp
cld
addr16
cmp
jecxz
lahf
mov
scas
push
xchg
cdq
or
pop
push
in
loope
lahf
retf
inc
cmps
or
xor
fcom
add
(bad)
imul
pop
loope
mov
cmps
outs
dec
into
or
in
fwait
push
cmp
add
jl
ja
mov
lods
mov
clc
mov
fmul
or
jecxz
popa
bound
add
je
imul
aad
loope
nop
sub
add
and
add
adc
jmp
(bad)
shl
aad
loopne
dec
adc
mov
sbb
jg
cli
mov
paddusw
popf
xor
mov
dec
mov
jmp
xchg
inc
add
sub
cs
dec
jo
jmp
mov
xchg
add
jne
jno
jbe
fnstsw
pop
sub
in
je
mov
pop
call
nop
dec
shr
hlt
and
out
lock
int
push
add
jp
cmc
ins
sub
shl
pushf
out
sahf
mov
aad
jmp
inc
xor
adc
xor
cmc
pop
inc
(bad)
pop
int3
ret
push
mov
push
addr16
push
sar
dec
jge
push
lods
pop
repnz
inc
jne
add
inc
out
jmp
mov
outs
mov
hlt
lods
enter
mov
jp
hlt
mov
push
xor
or
imul
out
sahf
in
jne
and
jns
mov
jbe
fld
lods
adc
dec
iret
and
call
enter
das
xchg
sbb
mov
fst
stc
fistp
inc
jae
pop
xchg
xlat
add
mov
inc
fwait
dec
icebp
test
lods
sub
fsubr
and
push
push
inc
add
mov
or
test
or
call
int
imul
(bad)
in
pop
adc
cmps
or
dec
stos
xchg
pop
gs
in
push
pop
xor
mov
pop
mov
in
ficomp
inc
sbb
fcom
ror
(bad)
sbb
ins
add
enter
inc
movs
cmp
mov
cmp
adc
jo
fadd
pop
imul
dec
jmp
dec
inc
sbb
add
pop
cmps
adc
stos
or
in
out
jmp
mov
(bad)
adc
add
aam
mov
mov
repnz
movs
int3
addr16
jns
pop
mov
inc
out
pop
push
scas
mov
ret
sub
mov
imul
retf
add
out
push
scas
inc
scas
mov
repz
stc
mov
jge
jo
hlt
add
fild
mov
adc
je
push
xor
xor
shr
hlt
sbb
xchg
fistp
(bad)
sar
loop
iret
mov
imul
(bad)
pop
push
loop
loopne
cmc
(bad)
mov
mov
sub
add
jb
xchg
sub
nop
add
or
sub
into
addr16
dec
push
mov
mov
xchg
jmp
std
and
retf
int
xor
stc
daa
mov
cmp
jb
xor
add
movs
sub
scas
scas
mov
xchg
test
mov
mov
adc
(bad)
pop
inc
les
icebp
bound
and
ret
fild
js
js
icebp
or
cdq
data16
cmps
cmp
shr
daa
frstor
cli
add
push
inc
cmp
inc
push
retf
sbb
dec
stc
dec
xor
sti
sub
sbb
lods
inc
cmp
mov
iret
pop
shl
jae
lods
xchg
rcl
inc
adc
fmul
cmp
mov
test
(bad)
push
adc
pop
imul
pop
push
and
dec
cs
lods
rcr
sub
dec
cli
sbb
dec
mov
jno
scas
call
daa
adc
mov
add
mov
mov
cmp
rol
loope
mov
dec
repnz
(bad)
bound
or
sub
mov
jno
sti
jecxz
dec
outs
cmp
stc
xor
cdq
mov
pop
mov
shl
cmp
aad
stc
mov
in
test
imul
fwait
ja
repz
int
adc
xchg
inc
fnstenv
mov
sub
sbb
stos
and
in
shl
dec
mov
dec
shl
aas
test
xor
call
in
mov
and
mov
lods
std
int3
xor
xor
xchg
push
xchg
sub
mov
mov
stc
lods
dec
push
ret
mov
cmp
cli
lds
push
cmp
sar
mov
scas
int3
inc
pusha
pop
xor
xlat
mov
arpl
lahf
mov
mov
in
jno
cmps
mov
add
aas
jp
retf
add
dec
sub
add
inc
mov
sbb
out
jmp
mov
js
loopne
jp
inc
ret
or
jecxz
rol
(bad)
xchg
xor
frstor
sub
or
inc
push
and
jge
icebp
pushf
dec
mov
lds
mov
or
outs
jne
cwde
test
int3
pop
xlat
cld
push
xor
stos
pop
mov
(bad)
ret
jle
mov
dec
mov
loopne
dec
imul
mov
jmp
xchg
enter
stos
mov
jmp
fcomp
nop
leave
into
inc
in
call
add
jg
mul
inc
sub
test
psrad
mov
clc
inc
je
out
push
movs
xor
movs
sub
ror
lods
inc
(bad)
iret
mov
cmp
pop
iret
jae
hlt
out
clc
mov
jbe
pop
sbb
data16
je
adc
test
lea
scas
xor
(bad)
cli
pop
pop
neg
js
push
mov
or
inc
push
aas
cmp
adc
or
cmp
dec
daa
adc
repnz
xchg
mov
dec
das
add
les
push
and
push
push
or
push
dec
inc
cmc
das
adc
pop
adc
or
inc
jmp
ins
xor
jg
push
arpl
xchg
mov
mov
ror
sti
mov
rcr
es
cs
pop
mov
push
out
pop
and
or
or
pop
mov
cmp
fcomp
xchg
ret
(bad)
dec
imul
cld
jecxz
loopne
jg
repnz
std
cs
mov
scas
mov
push
mov
cmp
sub
(bad)
out
jmp
push
shl
(bad)
inc
stc
ret
jg
jp
lds
inc
std
xor
cmc
dec
lods
mov
ins
xor
and
xor
sub
pop
int3
repz
jns
push
leave
lock
xor
mov
mov
xchg
out
stc
and
xlat
push
out
push
push
jge
mov
adc
push
ins
push
jmp
mov
sbb
retf
rcr
repz
and
mov
hlt
sbb
mov
(bad)
daa
add
loop
repz
int
dec
mov
jge
mov
leave
fsub
sbb
data16
je
push
lods
mov
in
sub
lahf
rcr
movs
pop
add
call
push
mov
in
scas
xchg
xchg
mov
sbb
pop
cmp
aas
jle
ret
mov
cmp
mov
lea
movs
in
sub
scas
inc
aas
out
mov
popa
pushf
pop
jb
sub
push
aaa
mov
(bad)
pop
loopne
fild
add
cmp
push
aam
inc
btc
jb
or
sahf
not
inc
jmp
or
mov
adc
dec
push
dec
(bad)
xchg
mov
mov
in
xchg
cld
mov
lods
or
movs
sbb
aad
pop
push
add
push
push
mov
push
xor
std
and
inc
add
mov
in
shl
or
or
sub
lds
mov
sub
adc
imul
xchg
pop
mov
adc
nop
fs
mov
add
or
dec
push
xor
mov
lock
out
or
mov
sub
(bad)
mov
icebp
in
xor
cmps
jle
mov
retf
xchg
and
pop
pusha
sub
pusha
jg
sahf
cmp
in
jge
popf
js
inc
and
add
cmp
fdivp
ret
loop
inc
repnz
push
hlt
movs
xor
loop
fiadd
outs
xchg
pop
and
stc
jnp
sbb
cmp
sbb
sub
mov
cs
outs
out
fcom
add
stos
adc
pop
jmp
enter
inc
add
pop
jb
pop
pop
(bad)
leave
cs
or
jnp
xchg
leave
in
gs
hlt
adc
mov
(bad)
and
inc
ja
fs
push
inc
mov
dec
lods
mov
push
mov
maxps
test
jp
clc
dec
jle
in
xchg
inc
inc
es
sub
test
mov
loopne
aad
loopne
aas
xor
fcmove
mov
(bad)
cmps
data16
lock
xchg
xor
shr
jmp
lods
add
pop
leave
adc
sbb
mov
shr
leave
pop
dec
ins
xchg
rol
xchg
dec
or
out
mov
pop
ds
jecxz
sub
fisttp
popf
cmp
jne
mov
js
mov
in
push
cmp
sub
in
push
pusha
adc
cli
dec
sbb
or
jle
loop
cwde
xchg
jmp
loop
test
mov
or
popf
inc
call
loopne
retf
push
xor
jl
mov
cdq
mov
pop
popa
mov
sbb
ret
ret
aas
stos
mov
xor
inc
adc
pop
ror
xor
push
pop
not
lea
scas
out
xor
ins
or
mov
jmp
mov
xor
cdq
shl
pop
push
xor
ss
or
or
cli
call
mov
fild
xor
and
call
pushf
out
or
shl
mov
(bad)
in
arpl
mov
ja
cmp
les
mov
sub
dec
jecxz
mov
dec
stos
lods
sub
jmp
nop
popa
push
shl
aaa
retf
inc
dec
in
push
inc
push
sub
or
jne
sbb
mov
mov
outs
sar
test
mov
repnz
scas
aaa
pop
daa
ds
stc
mov
pusha
mov
pop
mov
imul
mov
xchg
and
and
jg
and
inc
ja
pop
push
pushf
outs
sub
lahf
daa
pop
fwait
pop
mov
push
dec
fsubp
in
sub
jle
das
mov
push
xchg
xchg
dec
fnsave
inc
sub
pop
or
jne
pop
xchg
pop
add
ret
repz
xchg
mov
out
call
add
dec
movs
movs
mov
mov
pop
mov
add
cmps
or
adc
mov
in
les
push
retf
or
xor
cmp
out
out
retf
xchg
test
sbb
xchg
(bad)
out
call
sahf
ret
imul
ror
dec
pop
pop
pushf
mov
cmp
xor
addr16
mov
test
xlat
or
inc
dec
clc
pop
push
jnp
mov
iret
rcl
push
and
fimul
cmp
add
pusha
ins
movs
dec
sub
pop
or
mov
(bad)
mov
cli
mov
and
ins
ret
icebp
dec
push
leave
pop
bound
(bad)
cmp
xchg
(bad)
cmps
ror
jns
movs
lock
xchg
and
data16
mov
test
sub
test
dec
lea
movs
dec
or
leave
imul
mov
pusha
out
ror
dec
push
lods
(bad)
repnz
inc
xor
loopne
dec
and
sub
and
mov
fst
cmc
mov
mov
popa
sub
pop
mov
xor
test
jbe
adc
jg
int
mov
in
xor
xchg
push
jmp
(bad)
push
jmp
test
iret
mov
mov
mov
cli
xchg
push
adc
or
fs
stos
mov
adc
test
enter
xor
jle
out
sbb
pop
movs
sub
and
call
scas
pop
pop
in
cmp
push
out
fnsave
fstp
sub
scas
cmp
pop
add
ja
aad
pop
push
pop
div
jle
mov
mov
or
sub
aam
jg
fcmovbe
cdq
inc
outs
fs
sub
popf
sub
adc
xchg
dec
ins
int
fdivrp
int
mov
mov
jle
stos
or
mov
inc
pop
pop
jl
add
adc
mov
jae
fst
push
dec
bsr
xchg
add
pop
loop
xchg
cmc
and
mov
dec
into
in
test
sbb
inc
aad
adc
daa
mov
or
and
or
add
inc
cmp
pop
(bad)
loopne
adc
out
or
in
dec
mov
aam
fistp
int3
outs
hlt
cmp
xchg
mov
in
sbb
icebp
dec
es
icebp
mov
xor
ins
pop
lock
dec
and
push
aaa
lds
imul
(bad)
xor
clc
xchg
mov
sub
(bad)
call
das
icebp
dec
xor
jne
push
imul
movs
out
dec
sbb
imul
push
jp
retf
mov
xchg
movs
(bad)
or
ret
stc
and
pop
mov
mov
cwde
jae
sar
or
out
icebp
pop
sbb
imul
test
pop
cdq
in
dec
pop
hlt
sbb
xchg
call
ror
outs
xchg
or
mov
jle
pop
sbb
scas
xchg
or
push
xchg
nop
pusha
cmp
ds
adc
jb
mov
sub
repnz
xor
mov
pop
lods
dec
sbb
aad
cld
int3
js
pop
ins
imul
cmp
leave
push
sar
clc
pop
jae
out
(bad)
retf
xchg
aam
mov
jmp
dec
arpl
sbb
dec
cmp
mov
(bad)
push
cmps
mov
or
adc
pop
in
test
les
mov
nop
and
fs
rcl
bound
dec
push
mov
add
les
ret
adc
ficomp
stos
or
jmp
or
fsub
cmp
add
mov
(bad)
in
adc
fndisi(8087
outs
rep
not
cmp
aam
movs
jns
popf
outs
test
dec
popf
lea
dec
jg
add
test
inc
mov
mov
jmp
inc
jbe
and
adc
push
push
or
adc
add
pop
out
repnz
jbe
lods
icebp
inc
sub
sub
or
in
movs
push
stos
mov
push
pop
pop
mov
jg
out
emms
mov
jns
push
adc
sahf
fmulp
lods
pop
sub
inc
or
retf
cs
xor
cmps
popa
pop
(bad)
aaa
inc
gs
pop
ins
outs
je
mov
test
bound
sbb
xor
adc
adc
mov
pop
fild
jl
mov
outs
mov
jge
pusha
cmc
std
mov
(bad)
sahf
out
sub
xor
mov
xchg
in
pop
lds
mov
add
int3
fld
inc
aad
sar
into
stos
dec
xchg
(bad)
cmp
cmp
les
mov
(bad)
hlt
in
ret
mov
mov
pop
rcl
fisttp
gs
mov
and
stos
call
mov
jle
sub
cmp
jb
test
repnz
fisubr
scas
inc
and
cld
jns
mov
push
addr16
stc
rcl
xlat
cmp
jge
sbb
cmp
jmp
icebp
jge
add
sub
pop
dec
pusha
js
repnz
(bad)
retf
ja
push
xor
fwait
inc
cld
int3
lock
cmp
add
xor
je
leave
into
call
push
and
idiv
push
cmp
push
adc
push
fisubr
hlt
aad
pop
xchg
loop
mov
pop
ss
fild
cmp
and
jg
fcom
ret
rcl
adc
mov
stos
xchg
test
(bad)
or
jmp
jno
into
ret
mov
movs
mov
out
popf
pop
aam
and
pop
sub
iret
clc
arpl
fcom
lods
push
push
shr
jae
jge
(bad)
jns
and
or
std
ror
repnz
jmp
sbb
sahf
cmp
and
fstp
repz
inc
int3
pop
mov
push
into
mov
les
jmp
jmp
mov
pop
outs
jp
and
xlat
sti
sahf
das
ret
and
lods
mov
icebp
dec
push
aam
jg
loope
push
(bad)
mov
sub
aaa
js
sub
add
aaa
push
xchg
scas
inc
cmp
(bad)
push
sbb
push
scas
dec
mov
fnstsw
mov
jo
adc
xchg
sbb
lds
adc
jne
sahf
mov
sar
pop
and
fcmovu
retf
loop
out
fcom
mov
aaa
popf
add
call
mov
inc
fstp
inc
mov
movs
int3
and
jp
add
push
adc
gs
xlat
icebp
enter
jg
add
lock
mov
test
hlt
add
aaa
sbb
jle
addr16
not
div
das
repnz
mov
fistp
movs
adc
aam
mov
shl
jbe
dec
add
lock
jns
or
fimul
outs
ficomp
dec
inc
jae
push
inc
daa
cld
pop
aas
ret
mov
lock
je
adc
dec
jl
inc
daa
sahf
das
adc
pop
bound
xchg
in
cld
ret
ss
mov
cmp
int
or
ins
ficomp
out
mov
fldenv
push
xchg
mov
pop
outs
fst
pushf
xor
mov
fstp
add
into
adc
stos
sub
jne
in
inc
push
and
repnz
pop
xor
pop
pop
xchg
shl
adc
outs
xor
shl
stos
inc
mov
mov
(bad)
push
pusha
fisub
dec
push
mov
mov
retfw
inc
add
repz
cs
aas
(bad)
sub
pop
mov
dec
rcl
ret
sbb
mov
loopne
push
mov
and
or
inc
cmps
popa
or
test
pop
inc
(bad)
pop
popa
ret
inc
push
adc
aad
idiv
mov
icebp
stos
xchg
cmp
adc
xchg
imul
sub
mov
xchg
ins
jg
adc
add
ss
jle
jbe
sbb
in
adc
mov
inc
in
xchg
test
(bad)
add
sbb
hlt
or
push
adc
out
jle
icebp
out
(bad)
loopne
pop
aad
shl
int
jle
popa
ror
pop
jmp
ds
scas
and
(bad)
push
mov
cli
push
push
push
inc
loop
daa
mov
pop
cs
mov
pcmpgtd
mov
(bad)
mov
xchg
mov
fidivr
ds
ds
dec
pushf
dec
mov
lods
cmps
js
icebp
dec
lahf
ins
and
fmul
mov
data16
jg
adc
pop
pop
cdq
cs
test
shr
inc
sub
inc
inc
mov
pop
dec
cwde
(bad)
fsubr
scas
fucomi
loope
inc
(bad)
movs
mov
outs
sub
idiv
push
ret
test
ins
popa
cmp
xlat
xor
popa
int
ss
sahf
xchg
mov
sahf
(bad)
mov
jb
xchg
aam
mov
mov
xor
(bad)
cmps
pop
pop
adc
out
ficom
inc
xor
or
sub
arpl
es
mov
ins
push
fcom
ss
mov
sub
(bad)
les
imul
out
aaa
lds
stc
pop
outs
or
pop
outs
fiadd
lods
call
cmp
out
and
cmp
movq
scas
es
iret
jae
(bad)
cmp
popa
jp
mov
ins
stos
out
mov
mov
iret
(bad)
cwde
sti
fisubr
lods
pop
repnz
cld
inc
aas
mov
aam
aam
aad
jecxz
cmc
adc
retf
(bad)
jp
div
and
jae
xor
fwait
lea
retf
or
pop
push
inc
push
dec
mov
(bad)
loopne
scas
pop
mov
ins
xor
xchg
inc
call
shl
inc
loop
mov
rol
movs
enter
shr
aas
mov
repnz
mov
(bad)
cmp
mov
dec
inc
xor
jo
retf
and
fnstenv
push
in
adc
jmp
jno
and
inc
in
cld
retf
call
not
int
mov
cmp
sub
out
cld
rep
inc
repnz
mov
std
cmp
aad
bound
das
rcr
xor
mov
fs
test
mov
in
popa
hlt
xor
inc
mov
movs
jb
lea
icebp
in
lock
add
xchg
push
inc
adc
ss
lock
inc
pop
push
dec
mov
jge
frstor
dec
rcl
jne
fs
je
jmp
je
jg
cmp
mov
push
and
adc
scas
int3
jbe
popf
scas
fisttp
aas
in
scas
inc
mov
mov
pushf
imul
pop
aaa
sbb
xchg
les
in
rep
jbe
aas
hlt
or
jae
and
mov
jl
adc
sub
xor
cmc
shl
xor
dec
sbb
pop
jo
or
out
scas
sub
xchg
cdq
(bad)
mov
jno
jge
lock
data16
loope
das
xchg
(bad)
jecxz
sbb
push
in
mov
test
pushf
shr
xor
fcmovne
mov
sti
aad
movs
lea
mov
mov
pmuludq
mov
shr
mov
cmp
or
sub
pop
leave
dec
punpckhdq
pop
pop
or
inc
mov
cmc
pusha
push
pop
sbb
ss
sub
mov
cmps
sbb
push
push
or
xor
lods
fadd
(bad)
xchg
scas
inc
lahf
or
loopne
iret
mov
cs
mov
lahf
arpl
push
xlat
ds
push
rcl
push
mul
es
pop
cmp
mov
shr
inc
in
inc
shl
mov
mov
pop
cdq
stos
pop
ror
aaa
inc
mov
icebp
mov
dec
loopne
pop
and
rol
jle
xor
add
(bad)
adc
mov
arpl
xlat
jno
repz
pmulhw
adc
mov
out
popf
in
sbb
enter
out
daa
cli
popf
jnp
aas
inc
mov
adc
call
les
cmp
xor
imul
sub
xchg
mov
push
aad
popf
xor
jl
xor
pop
inc
ss
repz
jne
test
mov
in
(bad)
js
push
std
lods
dec
es
loop
inc
outs
ja
into
cld
xchg
adc
cld
sbb
and
fistp
inc
add
sbb
mov
xor
pop
js
mov
push
jnp
push
pusha
bnd
movs
pop
mov
sbb
icebp
imul
daa
stos
xor
in
mov
rcr
adc
rol
mov
scas
mov
sub
jmp
inc
aaa
cdq
sbb
or
outs
xor
iret
adc
pop
data16
sahf
push
mov
pop
mov
movs
pop
sub
xchg
(bad)
sbb
mov
mov
or
mov
call
cwde
mov
cmp
out
retf
out
loope
jo
cs
movs
cmp
push
pusha
cwd
popf
xchg
movs
mov
leave
stos
jb
sbb
(bad)
xchg
(bad)
movs
les
popf
mov
cmp
shr
pop
inc
arpl
ins
jnp
shr
jbe
jmp
out
repz
mov
into
mov
lock
jge
ror
cs
sti
xor
or
ficom
push
jns
adc
stc
test
push
movs
pop
pop
xor
mov
in
xor
pop
ror
popa
scas
cmc
aaa
je
and
fdivr
movs
add
dec
int3
repnz
cmps
(bad)
and
mov
fldenv
push
and
enter
sbb
sbb
ss
and
push
shl
adc
aam
cmps
pop
inc
arpl
and
int3
sar
pop
sub
fimul
push
sbb
dec
sub
jecxz
scas
div
cs
cdq
shr
fld
arpl
sub
test
cmp
inc
cmps
rcl
pop
xor
jmp
cld
cli
inc
out
adc
jmp
add
inc
xchg
jmp
mov
adc
mov
add
outs
push
pop
inc
popf
and
shr
push
xchg
pop
cli
adc
mov
mov
xchg
fsub
ffreep
jns
mov
inc
sahf
mov
cmps
cwde
test
in
lock
sub
retf
jecxz
arpl
jno
jecxz
jno
aaa
jae
aad
add
in
mov
sub
adc
enter
aad
retf
adc
mov
and
lds
push
repnz
es
xor
xchg
(bad)
lods
mov
mov
ins
pop
xor
jne
adc
mov
cmp
call
mov
cmp
cmp
ds
add
lea
mov
call
fidiv
leave
adc
and
inc
std
scas
out
cdq
ror
jmp
and
or
inc
inc
(bad)
mov
pop
add
fld
jb
xor
(bad)
sbb
jmp
pop
mov
dec
push
and
int3
call
and
sahf
adc
cmc
fisub
int3
mov
int
shl
(bad)
push
int3
sub
(bad)
cmp
dec
push
fnstcw
daa
lods
fcomi
lahf
outs
jle
mov
cli
ss
je
ficomp
mov
mov
dec
xchg
fsubr
mov
cmp
sar
cmp
mov
sbb
add
xor
mov
aam
(bad)
inc
mov
arpl
lds
adc
xchg
xor
icebp
cmp
sahf
dec
lock
dec
sbb
jmp
movs
std
mov
mov
dec
in
inc
mov
adc
mov
and
mov
test
jmp
inc
loopne
cld
stos
inc
add
mov
stc
popa
pop
cmp
(bad)
mov
(bad)
jg
out
add
adc
lock
jae
pop
loopne
mov
loope
jno
jno
popf
cmc
jmp
out
push
mov
popw
scas
pop
xor
push
(bad)
repz
inc
sti
hlt
cmp
xor
(bad)
fdivr
mov
inc
inc
rcl
mov
pop
sub
adc
movs
or
inc
pop
or
mov
fsub
inc
jecxz
push
fadd
in
iret
iret
inc
lock
loopne
dec
push
mov
movs
jecxz
xchg
pop
sbb
xchg
mov
test
push
and
cmps
bound
push
jmp
push
int3
loop
xor
cmp
dec
lahf
imul
call
cli
in
pop
push
les
mov
adc
lods
mov
mov
or
scas
add
les
add
sbb
lea
cmp
out
sub
sub
dec
(bad)
rcl
and
aaa
ja
into
pop
sbb
or
rol
dec
cmp
aad
bound
or
rcr
in
xchg
das
(bad)
jge
out
mov
sbb
sbb
outs
inc
jae
jno
movs
shr
or
push
and
push
push
jmp
loopne
jae
fisub
mov
dec
sub
setne
pop
mov
mov
ret
sub
bound
xor
jg
cs
fisttp
sub
dec
sbb
add
in
push
jo
out
cmc
data16
jb
xchg
inc
cmc
daa
push
mov
imul
call
scas
mov
lock
sti
mov
mov
icebp
jb
push
inc
das
test
mov
dec
jmp
test
dec
shl
dec
xor
iret
jb
mov
sub
cwde
inc
xchg
fcmove
xchg
dec
clc
mov
mov
retf
stc
mov
jge
(bad)
mov
jae
scas
daa
enter
xor
ins
push
inc
data16
dec
int
jno
cmps
dec
shl
push
scas
mov
lods
xlat
das
sbb
mov
inc
adc
mov
test
mov
mov
(bad)
sub
and
pop
add
aaa
adc
ficom
dec
pop
js
in
je
out
lahf
pop
inc
into
popa
sub
call
fcom
popa
out
bound
stc
or
pop
mov
cli
add
call
sub
in
mov
xchg
mov
fbld
test
int3
ds
div
and
jecxz
xchg
(bad)
sub
sbb
mov
push
ficom
jo
out
data16
dec
sahf
bound
js
xchg
dec
sar
test
cli
cmp
dec
inc
pop
hlt
aad
aam
sub
push
adc
daa
push
mov
lock
stc
pop
mov
aad
push
add
fsubrp
inc
xor
dec
dec
les
or
xor
loope
jle
in
mov
jmp
pop
adc
(bad)
cmp
scas
cdq
add
(bad)
xor
(bad)
fnsave
xor
retf
dec
fsub
add
outs
aad
cs
xlat
stos
fs
jnp
pop
push
xor
shr
xchg
jge
ins
and
dec
inc
pop
inc
sub
fsub
mov
jge
std
inc
adc
les
jnp
in
je
xor
xchg
sbb
mov
ds
jmp
(bad)
pop
sub
and
pop
aas
adc
cmp
sti
xchg
ja
push
jo
push
arpl
loopne
sub
cdq
jp
outs
adc
call
(bad)
fmul
je
das
cmp
adc
pop
add
test
mov
pop
mov
js
ins
ret
mov
xchg
pop
fucomip
rcr
outs
cmp
xor
add
pop
xchg
mov
jg
out
dec
out
pop
dec
lds
pop
pusha
jno
adc
std
sbb
int3
or
mov
push
mov
out
lea
push
popa
iret
add
call
movs
rcl
shr
fldcw
cmp
or
inc
stos
push
jl
sbb
(bad)
stc
lock
std
out
cmp
jl
push
pop
aaa
scas
mov
shl
mov
call
inc
fstp
inc
xor
adc
(bad)
xor
xchg
sbb
hlt
stc
(bad)
imul
fwait
mov
sbb
adc
popf
in
xchg
push
and
or
inc
xor
daa
pop
sar
xor
cmp
sub
sub
push
cmp
mov
(bad)
push
jle
jns
jae
inc
sub
mov
leave
push
jg
pop
fist
popa
stc
fnstenv
mov
inc
out
lds
xor
aad
dec
pop
mov
stos
inc
cs
cmc
or
nop
xor
sub
inc
add
sbb
pop
push
pop
pop
xchg
fcomip
mov
les
mov
nop
popf
lock
cmp
das
jp
cwde
fnstcw
mov
push
mov
shr
ss
(bad)
ss
mov
jmp
jle
and
mov
sahf
(bad)
pop
repnz
mov
iret
add
xchg
std
repnz
cmp
retf
and
inc
inc
sub
xchg
leave
call
and
pop
xchg
push
mov
inc
ds
lock
jno
je
xchg
iret
in
ss
mov
xor
or
mov
or
fadd
xchg
rcl
or
mov
in
in
ins
pop
jns
mov
pop
out
movs
outs
dec
or
mov
xchg
xor
xchg
adc
(bad)
ficomp
and
sar
pop
(bad)
call
jecxz
adc
lds
inc
int
pop
call
sbb
sbb
or
ss
or
dec
mov
out
dec
fnstsw
and
mov
mov
or
pushf
movs
sub
lahf
fst
iret
fucom
std
mov
or
les
sbb
ins
push
scas
icebp
lahf
xchg
aas
xadd
push
sbb
out
dec
addr16
adc
adc
pop
(bad)
xor
rol
dec
dec
add
add
pop
mov
icebp
mov
es
lods
cli
push
(bad)
cli
inc
scas
arpl
imul
xlat
out
sub
hlt
inc
repnz
(bad)
jmp
inc
fcmovb
es
mov
mov
adc
int3
imul
call
loope
into
push
dec
int
fdivr
jb
das
push
iret
stc
cld
sti
mov
or
js
push
push
ror
cld
sar
arpl
lds
(bad)
retf
push
jle
addr16
popf
stos
out
mov
fwait
cmp
cs
outs
nop
mov
adc
xchg
cmp
stc
jne
mov
mov
sahf
dec
or
and
mov
and
sub
sti
rcl
lahf
js
xchg
dec
sub
xor
lds
xor
inc
jns
jns
dec
loopne
xor
scas
repz
mov
xchg
test
sbb
add
and
xlat
jmp
jmp
push
and
adc
add
jo
or
push
ja
dec
mov
mov
mov
test
mov
mov
out
(bad)
cmp
not
std
in
lahf
mov
adc
jb
inc
fucomp
cli
push
push
xchg
dec
aam
in
addr16
aam
dec
sar
les
xchg
cmp
jl
fwait
cmp
adc
stos
jp
xchg
test
pop
out
or
and
push
adc
add
ds
xchg
adc
push
out
nop
jo
hlt
scas
fst
push
add
in
add
xchg
or
loopne
or
ss
mov
push
add
dec
inc
xchg
pop
sub
xor
xor
imul
js
scas
iret
jp
push
mov
add
(bad)
xchg
push
shl
or
aas
or
scas
mov
inc
(bad)
lahf
xchg
pop
inc
fstp
sti
mov
xchg
int3
rol
cmp
inc
mul
aas
nop
aas
inc
scas
cld
daa
adc
mov
fcmovb
xchg
ror
std
jmp
push
xor
push
dec
and
jne
push
add
leave
mov
mov
sbb
int3
sub
rcr
and
push
or
add
and
in
push
fucom
adc
sub
aam
retf
repnz
lods
cli
ret
and
mul
(bad)
rcr
mov
sub
add
adc
js
jg
dec
sbb
cwde
xchg
outs
xor
mov
(bad)
push
sbb
(bad)
push
and
dec
(bad)
outs
xchg
xor
mov
(bad)
cli
mov
cwde
arpl
movs
out
mov
or
sar
add
jmp
adc
(bad)
popa
push
push
xor
dec
mov
leave
cmp
xchg
cmp
or
icebp
lahf
mov
xchg
test
rcl
sbb
jbe
(bad)
and
enter
es
leave
mov
(bad)
arpl
mov
xchg
or
cmp
retf
sub
mov
js
sbb
mov
xchg
rcl
mov
dec
adc
dec
icebp
or
ds
push
xor
jbe
jp
arpl
add
mov
sub
dec
sub
inc
push
popa
add
enter
test
sub
ins
scas
mov
mov
(bad)
pop
sbb
nop
xor
dec
stos
or
jl
ja
test
pop
inc
inc
push
push
movs
xor
(bad)
pop
and
push
mov
sub
mov
cli
cmp
idiv
stos
jmp
xchg
popf
popa
es
adc
cmp
lahf
mov
mov
addr16
or
and
mov
jg
jne
jge
in
addr16
hlt
mul
sbb
outs
jmp
sub
cmps
sub
jmp
nop
popf
das
adc
cld
jecxz
shl
xchg
xor
jno
shufps
push
js
xchg
leave
lds
bound
(bad)
jae
push
aam
ins
imul
mov
retf
dec
gs
or
cmovs
test
xchg
jle
(bad)
jns
(bad)
shl
fld
xor
cmp
lds
lahf
cmps
inc
mov
mov
and
sub
test
(bad)
pop
mov
outs
aaa
dec
mov
cmp
jb
ror
shl
cmps
sub
inc
xor
repnz
ret
adc
(bad)
imul
clc
je
push
sbb
sti
cmp
jmp
mov
repnz
mov
retf
mov
ins
gs
push
scas
test
sub
loope
jno
mov
test
call
xchg
xchg
adc
repz
or
jmp
pop
enter
adc
mov
sbb
popf
in
sub
push
add
repz
sub
push
mov
cmps
rcl
mov
fnclex
stos
xchg
out
pusha
pop
cmp
push
in
mov
into
adc
retf
mov
ficom
(bad)
jmp
pop
mov
icebp
(bad)
or
call
adc
repnz
mov
xor
test
ror
mov
imul
addr16
add
loope
xor
and
mov
popa
(bad)
sub
sahf
xchg
rcl
inc
fsub
xlat
sahf
in
mov
inc
ins
js
out
leave
leave
mov
shl
sbb
add
out
imul
cmp
mov
pop
dec
push
in
cmps
jmp
les
dec
movs
pop
sbb
mov
sar
sub
or
push
fwait
aad
push
mov
aaa
xchg
aad
dec
push
repnz
cmps
int
cli
pop
inc
jecxz
fisttp
loopne
ds
mov
fidivr
cmp
retf
mov
in
(bad)
out
addr16
lahf
adc
scas
setb
xchg
jb
popa
mov
xor
mov
ja
into
inc
dec
dec
add
or
cdq
xchg
(bad)
inc
lods
xor
mov
xchg
fsubr
mov
outs
cmps
ret
cmp
out
fwait
addr16
das
aam
test
rcr
sub
(bad)
xor
inc
mov
test
jno
ja
popf
fs
add
ins
sar
inc
sbb
mov
dec
dec
push
jmp
ss
arpl
jmp
repnz
stc
js
lods
(bad)
push
push
add
cld
pop
mov
rcr
lds
mov
in
and
inc
mov
mov
add
jecxz
fst
aas
adc
fstp
ret
sbb
in
mov
add
cmp
out
outs
js
mov
cmps
shl
dec
or
imul
pushf
or
hlt
mov
nop
xor
imul
cmp
xchg
aad
push
retf
enter
inc
sub
sub
retf
test
sub
pusha
mov
xor
lock
mov
gs
mov
(bad)
jle
test
pushf
mov
pushf
scas
push
and
and
scas
jns
or
dec
adc
imul
fwait
imul
retf
inc
retf
sub
adc
iret
jge
test
sar
sbb
mov
push
push
ins
adc
pusha
xor
out
loop
sub
(bad)
cmp
xor
mov
mov
sub
or
inc
lea
dec
mov
mov
jmp
cmp
test
jge
and
mov
xor
push
rol
out
xor
jbe
xor
xor
cmps
stc
or
sub
shl
in
inc
cmp
push
call
or
js
inc
push
inc
iret
push
lods
cmp
mov
or
daa
test
bound
jns
mov
pop
xchg
or
fwait
pop
or
mov
mov
dec
movs
mov
shl
dec
cmp
call
xchg
pop
nop
push
retf
mov
(bad)
shl
idiv
adc
dec
int3
ins
jno
iret
fldenv
cwde
mov
ins
cmp
inc
mov
sbb
dec
fst
xor
sbb
jnp
mov
stos
xor
lahf
and
sar
mul
jge
fld
dec
lahf
sbb
mul
pusha
xchg
daa
ss
clc
enter
out
jno
sub
inc
jmp
push
loop
adc
popa
(bad)
mov
cli
cmp
mov
shr
inc
movs
ins
or
popa
mov
mov
adc
aas
addr16
sbb
mov
ds
mov
cmps
pushf
cmp
jl
out
or
mov
pop
ja
jne
mov
xor
add
pop
xchg
jnp
aas
stos
mov
lock
inc
mov
dec
mov
aad
sbb
sub
jmp
into
add
or
fwait
daa
dec
cli
mov
add
call
fs
test
sub
outs
mov
stc
test
sar
push
jecxz
xor
push
pop
mov
shr
lock
in
xchg
sahf
xor
jmp
aad
addr16
pop
mov
or
ror
(bad)
jge
fisttp
out
neg
xchg
lea
repz
push
dec
push
xchg
and
inc
mov
out
push
fwait
das
fs
pop
lock
int3
push
jg
and
not
add
test
rcr
push
jnp
sbb
lods
rcl
ins
aaa
arpl
adc
push
inc
sbb
xchg
push
in
xchg
fsubrp
push
or
bound
and
jo
mov
and
dec
aad
pop
push
or
enter
cmp
je
rcr
dec
fcomp
cwde
and
out
mov
push
or
call
jbe
cmp
mov
pop
inc
mov
jns
shl
add
rcr
mov
cmp
sub
adc
rol
inc
mov
js
pop
and
outs
mov
call
div
jge
sbb
and
pop
mov
aaa
pushf
cwde
in
or
lea
or
pusha
out
jns
test
push
inc
neg
sar
sub
retf
cmp
cmp
and
std
out
add
ficomp
jne
test
mov
push
ja
fnop
xor
mov
out
enter
shl
shl
pop
ret
pop
push
aad
(bad)
jno
bound
cmp
loope
enter
xor
dec
jle
pusha
gs
in
sbb
movs
outs
pop
outs
loope
mov
iret
push
aam
lahf
or
call
mov
bound
mov
mov
in
fidiv
cmp
and
jnp
pop
cmp
dec
xor
inc
dec
mov
daa
add
cmc
aaa
inc
mov
xor
push
addr16
lea
call
aaa
dec
enter
sub
xchg
mov
push
jp
enter
jae
sbb
into
push
aas
dec
jmp
cmp
add
and
outs
dec
(bad)
adc
mov
xchg
add
lea
fstp
xlat
nop
lods
xor
frstor
mov
sahf
mov
mov
and
(bad)
and
cmp
mov
aad
push
or
gs
inc
and
ror
popf
pop
call
or
(bad)
mov
mov
and
test
jns
std
adc
or
push
loop
lea
ds
mov
sar
xor
ss
mov
fstp
xor
push
xor
push
jno
cmc
scas
(bad)
mov
inc
enter
clc
test
ins
std
pop
mov
jb
popa
ficom
mov
jle
inc
retf
and
push
gs
popf
mov
std
add
nop
addr16
fcomp
mov
neg
js
popf
sbb
scas
mov
or
pop
leave
jmp
dec
add
sbb
xorps
dec
cmps
jmp
or
das
mov
xor
lods
mov
lods
add
mov
repnz
push
sbb
ds
nop
jp
retf
into
xchg
jae
push
xor
rcl
div
repnz
mov
std
fiadd
fsubr
xchg
jae
or
neg
adc
mov
xchg
test
pop
mov
xor
jns
fadd
fs
push
mov
dec
std
mov
fist
enter
scas
add
jbe
retf
scas
dec
shr
stos
scas
icebp
push
mov
scas
repnz
fisub
fsub
sbb
cmp
mov
mov
out
sub
ss
and
daa
adc
(bad)
jnp
fnstenv
jmp
es
or
mov
in
sbb
add
and
not
xor
dec
(bad)
test
fild
and
pop
sub
mov
retf
add
or
sbb
and
je
stos
(bad)
shl
fcom
adc
pushf
xchg
jle
mov
lods
push
movs
imul
sahf
adc
cmc
mov
cmp
xchg
sti
mov
in
push
sub
sahf
jg
dec
or
(bad)
loopne
inc
mov
xchg
int
mov
enter
push
dec
cli
aad
push
aas
ss
xchg
movs
into
jl
sar
mov
push
frstor
cli
std
cmp
mov
call
and
imul
out
jmp
inc
mov
or
lds
test
or
pop
popf
ficom
sub
loope
or
aam
cmp
retf
cld
add
xchg
xchg
pop
push
xor
xchg
cld
cmp
cmp
pop
push
aad
xchg
ja
mov
mov
ret
iret
cwde
add
fs
push
je
out
in
inc
cmp
call
cmp
cmps
cmp
xchg
mov
mov
xor
cmp
and
aad
sub
std
adc
mov
add
cvtps2pd
xchg
xchg
mov
cmps
int3
and
adc
in
(bad)
leave
out
pop
pushaw
dec
aad
ret
mov
test
or
adc
mov
idiv
iret
rcr
mov
mov
push
pushf
outs
mov
xlat
movs
xchg
sub
fsub
fild
pop
mov
mov
mov
ins
inc
push
fwait
rcr
sub
or
push
das
scas
ret
jmp
arpl
lock
outs
ficom
or
pop
and
xor
dec
fisubr
mov
mov
pmaxsw
fnsave
rol
jmp
dec
imul
xchg
pusha
dec
fiadd
xchg
sub
bound
inc
xchg
pop
xchg
movs
mov
jmp
mov
data16
imul
dec
sub
jne
jne
pop
or
rol
dec
fcom
lahf
sub
in
sub
push
xchg
clc
mul
mov
jge
jmp
cmp
xchg
adc
movs
sub
popa
xor
xor
icebp
xor
push
pop
and
push
icebp
(bad)
xor
mul
and
or
sub
push
dec
mov
jle
lock
jae
movs
jno
lods
loope
xchg
gs
mov
in
int
xchg
cdq
cmps
sti
jp
push
fisttp
dec
imul
xor
mov
test
or
inc
cmp
ja
jmp
ffree
mov
sub
cmps
or
xor
jle
mov
mov
pop
out
xor
xchg
jp
and
cmp
vpmaddwd
cmp
sahf
adc
xor
call
push
inc
mov
jecxz
sbb
xor
ret
xchg
arpl
fsub
(bad)
div
popf
nop
jg
add
(bad)
rcl
sbb
rcl
pop
cmc
inc
jg
dec
std
push
icebp
retf
dec
mov
dec
pop
push
fadd
mov
cmp
jne
mov
add
fild
fsubr
push
inc
dec
pushw
inc
push
enter
jge
repz
jns
test
(bad)
jecxz
mov
ins
scas
rol
lds
in
jl
fs
rol
aas
int
sti
in
push
pop
bswap
xor
fs
scas
cmps
add
xor
sub
lahf
fimul
aam
cmps
or
push
push
pusha
(bad)
xor
push
xor
add
add
mov
dec
jge
and
dec
fcmovu
jae
je
pop
mov
mov
in
add
arpl
test
pop
xchg
repz
fsub
in
jno
dec
xchg
add
add
jbe
repz
int3
xlat
lahf
adc
push
ffreep
pop
mov
mov
(bad)
fcom
push
mov
lock
enter
cdq
jno
scas
jecxz
out
xchg
(bad)
or
xchg
jge
retf
mov
out
mov
out
cdq
jb
push
sbb
xor
push
adc
test
cld
push
shl
xchg
fnstenv
mov
ret
adc
cmp
add
and
out
fwait
es
int
call
mov
inc
sbb
and
outs
mov
pop
adc
xchg
mov
in
cmp
dec
xor
dec
pop
movs
jb
mov
add
push
and
dec
aas
cs
xlat
retf
mov
outs
mov
imul
outs
mov
mov
jae
mov
add
int
or
and
mov
in
sbb
xchg
(bad)
xchg
pop
cmp
js
or
je
sbb
adc
fs
mov
leave
loop
cmp
xor
lea
stos
mov
sub
sub
mov
jmp
xor
and
retf
sub
test
xor
les
xchg
cdq
addr16
sbb
ds
mov
push
dec
bound
adc
push
sbb
loopne
mov
and
(bad)
dec
jne
(bad)
(bad)
xchg
call
cmp
stos
imul
std
push
pop
dec
push
or
(bad)
cs
dec
jns
hlt
loopne
(bad)
cmps
lock
ret
mov
xlat
int3
adc
xchg
pushf
or
jge
shr
mov
test
xor
js
add
gs
outs
jle
mov
inc
pop
in
je
js
ja
into
daa
xor
push
mov
or
bound
mov
pushf
sbb
cmp
popf
loope
dec
loopne
loop
(bad)
inc
dec
dec
jbe
fs
aam
fs
or
add
xchg
jo
mov
lea
out
(bad)
mov
imul
sbb
and
mov
dec
sub
dec
pop
add
xchg
xchg
pop
sbb
sbb
mov
xchg
cmps
pop
mov
sbb
sbb
aaa
xchg
push
imul
popa
out
test
and
push
stc
and
icebp
mov
mov
inc
mov
dec
jecxz
fnstenv
test
mov
jne
bound
add
mov
adc
mov
jl
addr16
(bad)
and
sub
xlat
jne
push
mov
mov
in
and
leave
out
sbb
cmps
out
leave
out
gs
or
dec
dec
fsub
xor
aaa
in
push
call
jns
cmps
mov
(bad)
sbb
in
imul
loope
mov
inc
mov
or
dec
mov
jp
jb
adc
popf
adc
mov
dec
mov
out
and
outs
aaa
pop
add
sahf
cmps
je
xchg
iret
cmps
inc
cli
cld
mov
cmps
jecxz
neg
mov
add
xor
mov
int
enter
sbb
adc
and
les
loope
js
push
dec
fwait
out
pop
int
mov
dec
(bad)
pop
ss
mov
inc
ins
ret
(bad)
push
pop
es
(bad)
(bad)
sbb
pop
mov
mov
xchg
cwde
icebp
icebp
(bad)
push
cmp
cdq
stos
or
std
mov
jb
add
push
dec
mov
mov
jnp
adc
fistp
inc
pop
test
fadd
not
rcr
mov
mov
push
push
int3
xchg
mov
mov
cs
sti
ds
sub
imul
dec
inc
push
jnp
xor
xor
jne
rcl
xchg
xor
popa
or
push
test
inc
aam
nop
and
out
push
enter
cmp
shr
sbb
ins
call
jle
les
call
pop
jne
dec
retf
sbb
sub
nop
jmp
retf
(bad)
imul
jo
cmc
jae
in
or
ja
and
cmp
push
mov
push
sti
cmp
outs
pop
inc
lea
cmp
xor
sar
or
out
rol
sbb
mov
ins
fisubr
cmps
mov
add
aas
and
movs
ficom
cmc
(bad)
push
pop
nop
(bad)
scas
out
jno
mov
in
out
push
fadd
mov
mov
mov
add
cmps
std
mov
push
ja
jns
call
gs
data16
sar
aaa
push
xor
push
jnp
imul
jbe
fsub
loop
adc
shl
pop
cmp
push
ja
pop
outs
mov
mov
retf
sbb
std
jbe
dec
push
mov
retf
js
xor
stc
icebp
xor
jae
setp
dec
fimul
and
push
add
cmp
shl
adc
cmp
sub
xchg
aas
movs
test
in
sbb
lods
xchg
test
movs
and
mov
add
pop
and
stos
test
bswap
mov
lahf
xchg
pop
fst
call
stos
aaa
pop
and
xchg
dec
les
fisttp
imul
adc
xchg
fisttp
sbb
repz
or
iret
cmp
retf
xor
data16
pop
jo
push
loope
push
xor
jmp
ss
fadd
mov
scas
cli
(bad)
mov
cmps
in
out
pusha
cmp
and
mov
sar
lea
ds
cmps
xor
lods
push
mov
mov
xor
inc
xchg
daa
(bad)
daa
dec
jecxz
adc
in
cld
pop
adc
inc
cmp
mov
test
scas
adc
das
sub
lock
lds
stos
mov
mov
pcmpgtw
xchg
ja
xor
xor
(bad)
pop
mov
clc
xchg
int
enter
enter
add
sub
and
xor
test
sbb
test
mov
call
imul
lds
add
call
or
mov
push
jnp
and
and
jnp
dec
lods
sbb
outs
imul
mov
shr
(bad)
test
push
dec
bound
ja
push
sbb
mov
popa
inc
das
repnz
mov
inc
mov
sbb
sub
stos
cmp
cmc
sbb
test
pop
xchg
xchg
adc
addr16
fs
loope
cmp
inc
out
ja
mov
jb
aam
or
stos
push
test
push
daa
jno
shl
out
sahf
inc
ret
mov
movs
icebp
inc
imul
je
and
mov
je
jns
inc
mov
cs
jb
movs
mov
jae
popa
test
jge
cmp
(bad)
and
sub
xor
xor
inc
xchg
adc
scas
cmp
inc
inc
icebp
mov
jo
jmp
outs
into
xor
(bad)
lea
xlat
xchg
cli
cs
jne
pop
movs
cmc
in
jbe
pop
in
and
retf
retf
retf
pop
and
push
in
jb
aad
jecxz
clc
lds
push
sbb
cs
out
popa
call
(bad)
addr16
jecxz
push
mov
mov
mov
clc
(bad)
test
add
mov
icebp
lds
jo
movs
mov
add
(bad)
adc
fldenv
jnp
mov
mov
fwait
loope
pop
sbb
cs
jle
pushf
xor
inc
shl
shl
int3
pop
imul
jle
int3
ror
mov
sub
mov
ror
pop
nop
mov
(bad)
aaa
dec
not
xlat
mov
sbb
aas
pop
mov
ret
scas
int
pusha
xor
ror
sub
jb
dec
dec
out
jno
pop
push
aas
jno
bnd
rcr
sub
repnz
fist
in
push
call
in
push
mul
fist
ss
dec
(bad)
mov
cmps
in
and
push
adc
and
mov
loop
clc
xor
jbe
imul
sti
cs
mov
out
jbe
add
fldenv
sub
jle
mov
std
sub
xchg
jne
sub
xchg
je
inc
push
xor
and
mov
jmp
push
fwait
adc
dec
mov
push
and
pop
scas
jg
test
pop
dec
out
adc
push
sub
dec
mov
test
call
out
xchg
pop
fldenv
adc
call
arpl
push
push
and
jo
jl
push
mov
push
scas
add
jmp
cmc
mov
idiv
ins
push
xchg
xor
(bad)
out
iret
(bad)
xor
push
ja
jne
sbb
je
cld
and
inc
jecxz
scas
dec
push
pop
(bad)
fs
cmp
xchg
add
pusha
retf
add
sar
add
test
lahf
call
(bad)
out
int
dec
jmp
push
xchg
adc
mov
mov
xor
loopne
jl
dec
out
jecxz
dec
mov
hlt
mov
jo
dec
dec
xor
cmp
sub
jbe
stc
xor
mov
sub
mov
in
pushf
jno
jno
arpl
ret
xchg
imul
sbb
mov
shl
dec
pop
fdiv
mov
ss
push
dec
int
pop
jbe
call
cmps
sbb
repnz
les
push
pop
push
inc
cmps
outs
xchg
stos
cli
std
mov
enter
(bad)
xchg
push
lds
or
inc
cmp
in
iret
test
fsub
jne
push
or
sbb
push
inc
and
and
dec
hlt
push
dec
jge
clc
(bad)
fmul
pop
popa
sti
mov
sbb
repz
into
mov
push
jp
bound
push
fcom
xchg
and
push
cs
jns
das
stos
xor
fstp
mov
and
cmps
bound
les
(bad)
popa
imul
call
sub
mov
cmp
sub
sbb
popf
push
or
test
test
and
pop
popa
dec
dec
inc
(bad)
outs
daa
arpl
lods
mov
dec
mov
cs
loopne
add
cmp
jl
mov
cmp
aas
xor
fist
test
nop
addr16
cmp
dec
ja
xchg
rcl
or
mov
xchg
addr16
dec
lods
push
test
adc
cld
xchg
or
or
jmp
ja
sub
xchg
rol
xchg
cmps
adc
ds
gs
in
cwde
push
sbb
jmp
xor
or
sub
sub
mov
and
icebp
out
sbb
jmp
mov
mov
mov
xor
jecxz
or
xchg
jo
std
sbb
jg
sbb
fild
xor
mov
prefetch
or
mov
adc
cmp
and
loop
ins
sub
(bad)
cmps
inc
mov
retf
iret
xlat
test
enter
fs
and
add
dec
sbb
in
push
xchg
lock
fist
fwait
mov
cld
test
inc
push
scas
outs
jmp
cwde
imul
stos
sbb
call
fcmovnb
push
mov
xchg
jecxz
movs
fst
rcl
loope
fisubr
xchg
inc
xchg
pusha
(bad)
mov
daa
sbb
add
jns
dec
or
fdivp
stc
push
adc
xchg
outs
aam
imul
mov
mov
into
mov
add
stos
jnp
jno
inc
jmp
mov
les
push
shr
test
bound
cmp
out
call
xor
or
inc
outs
sub
dec
retf
adc
int3
push
(bad)
loop
scas
sub
stc
push
sbb
add
gs
push
mov
sub
dec
and
mov
fdivr
sub
retf
rol
and
pop
push
es
pop
cmp
dec
ja
cdq
bound
xlat
pushf
push
in
pushf
add
or
sbb
push
int
sbb
repz
add
pop
iret
loope
outs
and
call
and
enter
repz
add
outs
fdivr
add
push
mov
imul
cli
add
jg
dec
jmp
loop
dec
shl
jecxz
hlt
mov
push
push
xor
dec
shl
ins
push
ret
sbb
jecxz
xor
rcl
fdiv
mov
cli
fild
adc
pop
mov
fsub
div
jge
js
ds
cmp
int3
jp
xchg
jg
neg
sbb
xor
mov
daa
lds
inc
inc
mov
mov
cmc
add
push
test
adc
in
mov
out
jmp
nop
jl
movs
sub
mul
nop
xchg
pusha
jne
stos
repnz
push
xor
(bad)
ja
mov
jecxz
add
fldenv
loopne
sar
gs
mov
xor
xchg
mov
in
mov
mov
popf
mov
adc
pusha
mov
dec
mov
stos
into
xor
sbb
jns
xor
xchg
or
imul
mov
adc
test
pop
mov
mov
ins
loope
sbb
and
test
xchg
(bad)
dec
xchg
add
jno
xlat
mul
scas
sbb
sbb
nop
cdq
jnp
fcos
fstp
jne
neg
(bad)
jnp
add
ret
outs
rcr
test
mov
pop
sbb
mov
mov
inc
and
xchg
add
cmps
shl
jo
pushf
or
xor
mov
fwait
and
mov
dec
pop
xchg
jmp
add
es
fcom
retf
repnz
add
pop
jecxz
inc
fsqrt
cld
inc
or
adc
and
test
rcl
mov
movs
aad
mov
stos
fwait
pop
mov
push
pop
sub
inc
lea
and
test
es
lea
sahf
xor
out
test
add
or
inc
popa
cmp
ficom
or
jl
jp
xor
cdq
and
pop
loop
mov
mov
jl
popa
or
sbb
imul
popf
mov
scas
out
adc
(bad)
(bad)
adc
shl
out
lds
adc
(bad)
cli
lea
xor
dec
enter
sbb
xlat
outs
pcmpgtb
inc
and
adc
adc
stos
leave
mov
jg
icebp
mov
adc
test
mov
adc
in
push
es
dec
pop
(bad)
leave
xor
mov
stc
push
cmp
sub
xchg
movs
ret
dec
cwde
cmp
mov
std
test
dec
push
ror
aam
(bad)
fld
add
rcl
inc
push
add
push
inc
add
dec
push
fdivr
pop
sbb
adc
mov
imul
sub
pop
xor
mov
mov
fsub
cmp
push
(bad)
je
in
mov
xor
sbb
arpl
enter
mov
xchg
adc
jo
sbb
mov
leave
xor
jl
mov
push
and
cmps
mov
or
dec
fwait
lds
mov
add
fdivr
cmp
outs
mov
repnz
int3
enter
shl
inc
pop
icebp
jne
sbb
inc
addr16
xor
fist
mov
pusha
cmp
add
mov
pop
daa
mov
lds
and
cmp
addr16
sbb
retf
lods
out
cdq
loop
in
lds
cmp
int3
mov
stos
ret
repz
inc
cmc
sub
or
test
mov
div
pop
stos
scas
and
pusha
aas
jmp
ins
jne
adc
push
loope
(bad)
xor
test
out
jb
in
jbe
xchg
xor
push
jp
and
pop
and
rcr
jno
rcr
popa
sub
rcl
mov
cmp
xchg
dec
nop
push
adc
xchg
das
(bad)
retf
push
sbb
pop
fisttp
jno
imul
(bad)
test
dec
mov
xchg
jecxz
and
imul
mov
inc
dec
dec
movs
cmp
cmp
xchg
add
mov
(bad)
or
xor
cdq
adc
scas
cdq
add
sbb
ins
addr16
clc
mov
(bad)
cmp
out
push
ror
cmp
adc
xchg
call
push
cmps
into
out
aaa
or
sbb
cmp
mov
xchg
lods
loop
es
jb
xchg
jmp
and
das
loopne
adc
xchg
xchg
scas
jmp
test
pop
pop
adc
rcr
jg
push
mov
mov
scas
or
cld
stos
adc
sub
lods
lock
dec
mov
or
jp
push
xchg
sbb
mov
fst
scas
add
adc
add
shr
push
int3
ret
mov
sbb
jnp
mov
ds
icebp
lods
rcr
xor
test
cmp
pop
outs
or
mov
je
dec
daa
mov
mov
sbb
mov
stos
rcl
(bad)
lods
sahf
mov
xor
xchg
add
lods
fild
in
inc
out
add
out
mov
jne
add
jmp
jo
push
xchg
pop
xchg
aad
fs
xchg
fs
xor
mov
mov
cwde
add
jecxz
pop
mov
dec
mov
outs
inc
cli
pusha
sbb
test
jl
xchg
mov
xchg
std
iret
push
jg
or
test
adc
enter
push
enter
ror
or
xlat
arpl
xor
cmp
sbb
sti
stc
pop
daa
adc
pop
imul
push
ins
mov
pop
test
adc
rol
and
dec
adc
je
aaa
adc
dec
aam
out
xchg
bound
popa
push
jno
pop
nop
and
jecxz
jns
ret
out
xchg
sub
mov
dec
(bad)
sti
cmp
js
cmp
and
pop
add
out
xchg
add
sbb
pop
mov
popa
enter
mov
jp
call
ret
popf
and
pop
das
jne
nop
cld
rcr
icebp
push
fwait
sar
xchg
shl
mov
jbe
popf
shl
out
xchg
pop
clc
fistp
sub
push
jmp
jo
sbb
push
enter
int3
jmp
sti
push
dec
shl
pop
or
das
xchg
loopne
dec
jbe
loop
mov
mov
mov
rep
jle
sbb
nop
sbb
popa
in
in
outs
sbb
int3
in
and
xchg
mov
mov
(bad)
call
dec
mov
dec
(bad)
xchg
fdiv
imul
xlat
mov
mov
dec
rol
gs
inc
jmp
fcom
adc
cmc
dec
fcomp
jbe
call
mov
retf
cmp
push
jecxz
push
enter
(bad)
fcomp
and
mov
mov
or
ret
jbe
mov
imul
mov
jge
push
pop
xor
or
mov
sbb
stc
out
and
mov
add
or
ins
mov
enter
jge
cmc
cmp
out
sbb
retf
sbb
sbb
movs
stos
shr
inc
and
cmp
ins
cmp
xchg
jp
jnp
out
iret
push
dec
jnp
xchg
sar
dec
mov
ror
(bad)
xchg
lea
or
ss
lea
mov
into
mov
jo
mov
inc
pop
add
adc
loopne
sbb
xor
mov
imul
cmps
xor
aas
jle
mul
popf
mov
enter
cdq
push
adc
cmp
maxps
xbegin
ja
jecxz
xchg
std
mov
shl
sub
loopne
xchg
push
sbb
in
sbb
in
out
aaa
and
mov
(bad)
mov
mov
test
push
xchg
cdq
pop
out
sti
add
xchg
scas
cld
mov
push
and
jbe
xor
out
fidiv
xor
xor
cmps
imul
mov
lods
push
lods
jnp
shl
sbb
stos
push
jns
add
inc
ins
sbb
cmc
pop
repz
push
imul
pop
clc
cmc
inc
das
test
loope
mov
test
mov
icebp
repnz
jecxz
inc
mov
jle
cmp
cmp
int3
loop
sbb
xor
adc
mov
out
ds
adc
xor
pop
mov
fsubrp
retf
fbld
adc
push
dec
les
inc
aas
movs
test
ror
sbb
push
mov
jno
push
test
sbb
ss
or
gs
adc
enter
aas
push
mov
xlat
cmp
pushf
sub
aaa
cli
xchg
gs
pop
and
add
push
mov
jae
dec
adc
in
sub
jl
xor
je
dec
out
and
or
icebp
push
pop
inc
sbb
imul
sbb
cmp
add
aas
pop
jg
inc
sub
sbb
mov
mov
jl
ss
adc
push
outs
cmp
jo
add
jl
data16
fcmovnb
movs
ja
add
cmp
movs
xor
aas
sub
ja
imul
inc
sbb
xor
cld
xor
gs
pop
or
xchg
repz
ss
and
pusha
test
pop
sub
in
and
movs
repnz
jl
and
pop
or
dec
inc
loope
ror
retf
and
sbb
aad
das
mov
inc
dec
inc
daa
inc
mov
into
lock
repnz
add
dec
cmp
ss
lea
add
sbb
and
stc
cmp
enter
xchg
out
loopne
pushf
xchg
sbb
stos
and
push
cmps
xchg
or
fisttp
cdq
stos
adc
fsubp
jge
sub
std
jecxz
jnp
add
out
scas
and
jge
push
or
and
test
outs
and
xchg
repz
or
or
outs
push
mov
pop
sub
stos
jecxz
and
mov
mov
dec
push
dec
in
jmp
xchg
mov
lods
add
jb
mov
loop
push
retf
fwait
jp
aaa
push
rcl
mov
push
ins
mov
dec
cli
je
mov
jl
add
loope
imul
inc
push
cmp
mov
adc
mov
cs
in
or
cmp
xchg
adc
loop
xchg
pop
push
rcr
jnp
xchg
pop
or
push
or
xchg
mov
mov
add
xchg
std
idiv
mov
push
sub
or
mov
js
cli
in
arpl
test
cmps
adc
cld
je
dec
xchg
xchg
jo
fldenv
sub
aas
ja
push
popf
add
jae
adc
jne
ja
outs
dec
mov
lea
mov
cmc
cld
rcr
(bad)
rcr
int3
inc
add
cmp
inc
aas
mov
ror
add
jp
push
div
js
icebp
out
cmp
rol
out
xchg
scas
fimul
retf
and
xor
sbb
cmp
sbb
aad
scas
in
push
pop
movs
loopne
add
les
aaa
setno
hlt
pusha
lods
not
pop
hlt
int3
push
add
push
mov
lahf
push
(bad)
in
mov
mov
push
cmp
cdq
push
sbb
sar
outs
cmp
stc
add
pop
arpl
and
sub
int
imul
dec
cmp
xchg
lock
cmp
or
cli
or
and
lahf
stos
jae
cmps
jmp
ret
and
in
jns
ret
sbb
jo
push
lds
add
pop
pop
add
jmp
sub
cdq
imul
lock
and
rcr
aaa
inc
mov
fist
adc
push
(bad)
int3
mov
loope
stos
xor
mov
ret
pop
or
lahf
mov
mov
aam
or
mov
arpl
js
mov
sub
xchg
inc
xor
lods
jmp
clc
daa
push
xlat
push
jmp
in
test
in
sbb
xor
add
aad
test
shl
dec
mov
or
cmp
inc
jbe
sbb
xchg
pop
cld
cmp
or
sti
add
pop
jl
jb
and
jne
stos
sub
add
gs
fwait
cmp
daa
dec
cmp
push
pop
loop
daa
arpl
neg
mov
push
pusha
pop
sub
repz
stos
imul
clc
dec
push
movs
ins
out
std
jp
lods
add
les
ins
mov
push
mov
pusha
cmp
ret
(bad)
jp
test
sbb
and
xor
jne
or
fs
cld
and
stos
sub
fucomp
enter
test
push
sbb
pop
mov
xchg
(bad)
popf
pop
int
ret
sbb
retf
jbe
cmp
repz
add
push
push
fs
inc
jl
(bad)
popa
xchg
jns
mov
xor
mov
cli
(bad)
(bad)
add
outs
and
pushf
test
aas
enter
pop
stc
fsubr
lds
jbe
idiv
rcl
or
pop
cwde
(bad)
jbe
iret
xor
frstor
in
mov
je
sti
pop
jp
pop
xchg
sbb
xchg
dec
lock
jl
mov
cdq
js
inc
add
xchg
outs
and
imul
rcr
stc
sti
(bad)
xchg
daa
sar
push
out
(bad)
inc
jnp
repz
jns
sbb
in
xchg
cmps
fstp
movs
add
popf
iret
in
std
ss
outs
and
inc
into
mov
dec
mov
retf
sbb
scas
adc
cli
cmps
jp
loop
xchg
aas
xchg
adc
xor
jmp
xchg
shl
(bad)
(bad)
xchg
sub
sbb
inc
dec
sub
sub
mov
pop
clc
push
dec
loop
mov
sbb
mov
cmps
pop
push
pop
inc
xor
(bad)
repz
mov
stos
inc
push
xor
and
mov
adc
adc
mul
mov
push
in
inc
pop
inc
jle
jae
pushf
scas
ins
xor
jbe
in
iret
cld
cmp
jo
mov
mov
mov
dec
jp
jne
dec
jbe
aaa
mov
cmps
idiv
js
push
mov
retf
inc
add
in
repnz
cmp
push
frstor
imul
psubd
dec
dec
sub
jp
adc
push
mul
(bad)
retf
dec
xchg
inc
push
xchg
cli
fwait
aaa
stc
fwait
pop
ret
jg
and
aad
sbb
std
fsubr
jbe
(bad)
icebp
xor
jnp
push
jge
(bad)
jl
mov
jge
sbb
mov
xchg
jg
inc
add
test
jo
or
sti
int
ss
in
cmc
repz
test
call
hlt
push
pushf
pop
push
lock
xchg
dec
aad
popf
sbb
xchg
dec
lods
push
enter
shl
jecxz
add
daa
inc
adc
mov
inc
cmps
test
push
jns
dec
shl
imul
push
les
fidiv
into
jns
popa
and
dec
rcl
xchg
mov
lods
lods
sub
and
dec
in
xchg
inc
jmp
inc
stc
sub
in
cmp
inc
and
inc
into
xchg
mov
sbb
shl
bound
leave
movs
sti
pop
(bad)
adc
movs
out
nop
scas
int
sub
fst
je
xor
or
mov
mov
xchg
jg
pop
cli
xchg
or
fld
xor
jno
cli
adc
test
lea
cmp
inc
outs
add
call
pop
arpl
jno
xor
xor
jo
fwait
ror
aaa
cdq
dec
outs
in
jmp
test
push
test
push
sbb
adc
xchg
inc
mov
jecxz
pushf
sub
add
sbb
fistp
adc
jmp
push
push
out
mov
iret
cmp
jecxz
inc
call
lahf
jnp
mov
add
lods
adc
cmp
jg
push
jae
(bad)
fistp
push
jnp
iret
adc
loop
cmc
int3
call
aam
sbb
hlt
jo
cmps
or
lods
(bad)
fld
scas
out
rcl
vandnps
dec
mov
lock
inc
clc
xor
jmp
push
xchg
repnz
cwde
pop
fbstp
stc
loope
(bad)
mov
fist
lods
mov
pop
jnp
fwait
mov
out
adc
retf
adc
(bad)
pop
fisubr
aas
arpl
repnz
(bad)
bound
mov
mov
cmp
and
jb
or
ds
adc
dec
mov
mov
push
lock
aam
pop
cs
and
bound
mov
jnp
rol
dec
ret
int3
mov
pop
hlt
xchg
repz
lock
rol
adc
in
mov
nop
inc
mov
rol
fdivr
shl
fcmove
xor
xchg
test
popf
ins
(bad)
inc
push
adc
dec
movs
xor
dec
cmp
inc
add
cmp
jo
mov
je
cmc
adc
stc
cmp
mov
xor
je
xor
popf
in
mov
dec
mov
jb
push
in
jne
mov
repnz
in
mov
mov
call
neg
mov
aad
fild
(bad)
adc
cwde
and
cld
div
and
dec
push
sbb
pop
cmp
ja
lods
call
int3
pop
cmp
aam
xlat
imul
jns
lods
pop
ds
adc
add
(bad)
add
cmp
(bad)
sbb
in
push
test
(bad)
cld
mov
fstp
sbb
std
ins
shr
sbb
jbe
sti
push
cdq
lea
or
push
and
add
xchg
and
jnp
push
shrd
jge
jne
push
push
pop
xchg
gs
(bad)
ss
and
pusha
push
(bad)
pop
xchg
sbb
mov
lea
push
mov
ins
sti
jbe
pop
xor
(bad)
pop
mov
push
outs
sbb
jg
shl
jp
ss
dec
ins
addr16
jno
bnd
adc
jbe
pop
movs
rol
xor
in
mov
int3
out
fucomp
fwait
push
lahf
push
adc
or
fcomp
adc
jae
(bad)
scas
cmp
or
addr16
out
nop
or
in
adc
xor
and
ins
pop
pop
mov
cdq
ins
xor
aad
inc
cmps
mov
lods
mov
push
shl
mov
or
push
fdivr
out
adc
fiadd
dec
cmp
jmp
ficomp
mov
cld
shl
repnz
fisttp
mov
xchg
cmps
sar
xor
paddb
inc
sbb
fimul
test
adc
int3
dec
push
mov
popa
mov
push
cdq
jne
mov
adc
jecxz
mov
call
in
xlat
xlat
jle
xchg
imul
sub
leave
mov
mov
jns
das
les
push
retf
int3
pop
stos
(bad)
mov
cmp
add
rcl
inc
fld
pop
cmp
pop
clc
mov
enter
(bad)
pushf
addr16
jp
mov
fidiv
mov
iret
or
push
(bad)
mov
push
mov
mov
inc
mov
neg
xor
push
cmp
sub
lahf
xchg
mov
inc
test
sub
ror
stos
xlat
pop
movs
retf
push
pop
mov
sub
adc
leave
sti
out
sbb
sbb
rcl
push
add
ss
inc
or
ja
and
dec
(bad)
fdiv
shl
xor
cmps
ret
mov
repz
sub
les
cdq
mov
repz
lock
cmp
sahf
out
das
inc
in
(bad)
adc
mov
adc
cmp
ficom
gs
dec
sbb
or
lds
outs
mov
aas
jge
or
mov
loopne
add
in
cmp
mov
dec
out
mov
push
mov
sbb
mov
cmps
fwait
bound
in
call
std
(bad)
outs
popa
ret
cld
sub
aad
xor
rcr
pop
stos
cmc
out
mov
xor
scas
pushf
(bad)
shl
jbe
pop
mov
cmp
in
xchg
mov
(bad)
fidiv
sbb
sbb
xchg
add
push
and
cmp
movs
ins
push
jb
test
sbb
popf
sbb
pop
mov
mov
hlt
jmp
mov
jnp
iret
dec
pop
and
xor
cdq
cmp
mov
xlat
inc
pop
pop
aas
arpl
pop
ds
fbld
xchg
movs
mov
test
sbb
hlt
xor
mov
stos
ja
push
push
jb
mov
std
pop
push
push
in
pop
clc
mov
mov
dec
movs
out
ror
push
(bad)
push
add
mov
retf
inc
imul
into
jmp
add
icebp
pop
icebp
dec
mov
addr16
hlt
push
adc
(bad)
ins
jp
xchg
push
mov
mov
loope
movs
mov
call
test
mov
mov
jl
cdq
loopne
ret
jnp
mov
mov
lahf
push
fidivr
fsub
pop
cmp
pop
jbe
dec
inc
cmps
repz
in
jns
jle
xchg
lds
es
cmp
jbe
cli
inc
shl
push
scas
mov
jbe
mov
push
push
adc
iret
mov
in
fld
rol
add
sub
test
call
in
mov
lahf
icebp
xchg
ins
shl
cmp
xchg
ja
dec
push
int3
or
pop
or
cli
ror
dec
push
adc
loope
aaa
cmp
jp
mov
gs
cmp
jae
mov
and
pop
iret
mov
sbb
push
mul
fisttp
push
xor
lods
and
lods
pop
push
pusha
neg
and
jl
scas
dec
punpckhdq
rcr
pandn
jp
inc
inc
jbe
xchg
dec
push
sub
mov
cmc
imul
aad
pop
mov
mov
mov
mov
outs
pop
adc
push
aas
mov
into
add
repz
push
data16
loopne
hlt
add
add
jb
loop
jne
pusha
(bad)
pop
out
(bad)
or
jl
rcl
lea
leave
mov
(bad)
sub
shr
test
cdq
leave
mov
out
ret
pop
cli
fwait
add
sti
out
jnp
xchg
mov
in
sbb
jg
mov
inc
hlt
dec
inc
fnstsw
pop
mov
inc
dec
sub
rcl
push
sub
cmp
(bad)
clc
hlt
sti
push
sub
cmps
jl
add
add
leave
shl
adc
scas
adc
sti
sbb
sbb
add
adc
stos
cmp
hlt
sub
movs
fisttp
pop
mov
cli
or
(bad)
cmp
jo
inc
out
fs
fbld
push
or
jno
xor
jo
push
(bad)
cmc
(bad)
pop
sti
push
and
mov
daa
and
push
addr16
in
xlat
cmc
cmp
add
xchg
ins
loop
cmp
out
cld
lods
inc
adc
dec
in
mov
retf
mov
aam
xor
test
test
loop
mov
mov
iret
push
mov
mov
dec
mov
xchg
(bad)
nop
test
mov
push
and
or
cmp
cdq
ficomp
aaa
jo
push
mov
inc
fcom
push
xchg
(bad)
sub
daa
or
loop
xor
jnp
push
lds
xchg
dec
mov
call
inc
jnp
inc
test
div
lahf
inc
jmp
sub
or
ins
push
xor
mov
mov
outs
inc
push
(bad)
mov
dec
mov
xor
ficom
push
jbe
inc
xchg
in
xlat
xchg
cmp
dec
adc
adc
in
pop
ins
xchg
inc
push
pop
test
sbb
stos
adc
sti
pop
push
adc
(bad)
out
push
nop
pushf
lahf
sub
aad
xchg
fs
pop
pop
std
popa
out
stos
push
ja
shr
inc
push
daa
mov
hlt
ds
leave
push
jg
ss
aam
xlat
ins
pop
lock
cmp
mov
aad
push
idiv
das
or
push
sub
stos
jne
or
adc
imul
cmp
and
fst
fidivr
or
icebp
mov
mov
add
(bad)
out
xor
loop
outs
and
and
mov
mov
adc
inc
rol
mov
add
rol
jl
pop
leave
pop
push
dec
lds
mov
mov
das
jno
ins
lea
cli
adc
mov
add
and
inc
movs
dec
cli
hlt
adc
repz
movs
xchg
cmc
sub
xor
pop
inc
out
lods
mul
sbb
lods
push
pop
mov
xor
loope
cmp
loopne
or
std
cwde
push
inc
sahf
add
xchg
cmp
xlat
pinsrw
pop
cdq
ftst
pop
xchg
(bad)
pushf
fisttp
outs
mov
push
dec
fistp
popf
cli
push
cmp
mov
mov
pushf
xchg
adc
loope
pop
arpl
or
sub
dec
in
inc
ret
out
adc
cmp
xchg
aam
xchg
icebp
pusha
cwde
xor
call
pop
mov
les
sub
popa
sub
sbb
push
xor
pop
or
rcr
arpl
push
push
cmp
lahf
or
test
test
stos
jge
test
jmp
(bad)
mov
lods
push
push
stos
xchg
push
or
jge
adc
in
imul
fild
mov
test
xchg
xor
icebp
mov
sbb
(bad)
daa
jp
pop
ds
call
lock
lods
test
xor
movs
cdq
jl
cmp
(bad)
frstor
loope
sbb
or
(bad)
adc
(bad)
call
mov
shl
inc
xchg
sbb
cmc
gs
fcomp
out
ret
ja
mov
pop
jno
out
call
sbb
xchg
retf
leave
and
mov
movs
xor
(bad)
push
push
push
test
inc
sbb
sbb
push
stos
test
out
sbb
out
mov
sbb
sub
ror
cs
cmp
dec
mov
jb
lods
ret
adc
enter
addr16
jge
ds
sub
enter
js
repnz
or
fnsave
popa
cli
popa
mov
jns
fs
aaa
icebp
popf
sahf
sub
add
popa
sbb
pop
leave
in
(bad)
(bad)
scas
mov
mov
mov
ins
gs
loopne
push
aam
outs
add
dec
dec
mov
and
imul
sbb
sub
inc
mov
pop
xlat
cmp
int3
or
mov
retf
jno
mov
dec
mov
mov
cmp
xor
(bad)
call
inc
test
and
push
pop
vaddss
loope
xchg
pop
aas
retf
repnz
add
(bad)
xor
repnz
loope
dec
popf
or
das
cmp
(bad)
adc
nop
sbb
cld
xchg
out
imul
les
mov
dec
xchg
dec
scas
xor
fcomp
movs
add
call
pop
push
mov
lock
mov
xchg
xchg
call
push
mov
jp
xchg
mov
push
and
ins
imul
add
arpl
loope
fs
push
mov
je
retf
les
jmp
ds
das
sahf
test
sub
xchg
lea
cmp
add
dec
mov
(bad)
push
add
sbb
and
loope
add
lds
inc
xchg
sub
sub
sub
dec
stc
cmp
out
dec
mov
movs
mov
mov
jno
repz
pop
daa
imul
(bad)
aam
jno
jg
push
mov
mov
in
stos
outs
and
shl
loop
cs
xor
jbe
leave
jne
mov
fnsave
add
mov
es
in
mov
es
pushf
aaa
mov
jmp
hlt
mov
stos
ror
cmp
pop
inc
pop
and
pop
shl
pop
mov
inc
push
aad
jae
gs
repnz
jp
into
cmps
addr16
or
adc
shl
int3
sub
or
adc
cmc
push
push
xchg
inc
fwait
cwde
iret
mov
mov
lea
or
cmps
xchg
xor
sbb
or
and
sbb
sahf
test
shl
push
mov
add
outs
jmp
movs
mov
push
clc
mov
mov
dec
jp
js
jne
icebp
or
(bad)
fmul
inc
inc
loope
jl
jmp
ins
sub
add
in
je
jl
movs
sbb
jmp
mov
std
mov
mul
inc
movs
push
hlt
stc
rol
inc
fadd
jle
add
ret
test
mov
cmp
loope
cvtdq2ps
add
inc
jp
sub
mov
mov
pop
xchg
xor
mov
sahf
dec
push
push
adc
inc
loop
inc
add
int
mov
(bad)
xchg
sub
gs
cli
in
mov
cmp
pop
rol
popf
pop
add
inc
pop
dec
sub
ret
pop
mov
dec
pop
sub
push
push
clc
lds
loop
cwde
and
mov
sti
or
test
cmp
movs
jae
dec
sti
in
xchg
push
out
xor
mov
nop
idiv
fcmove
fiadd
xlat
je
push
ret
mov
cdq
jl
xor
dec
push
setle
enter
aaa
mov
mov
movs
xor
cwde
sub
mov
jbe
dec
icebp
inc
dec
push
movs
mov
and
xchg
jbe
jl
sub
or
movs
push
ins
xchg
js
mov
pop
fbld
int
pop
add
dec
(bad)
std
mov
push
test
popa
xchg
rol
sub
inc
cmp
push
js
cmp
aaa
lds
ja
mov
jo
pop
sub
sahf
retf
cmps
mov
shr
mov
into
cmc
pop
scas
or
addr16
xchg
(bad)
add
arpl
clc
inc
retf
inc
mov
cmps
imul
sbb
scas
out
mov
cmp
adc
nop
mov
(bad)
into
mov
in
or
in
or
lods
xchg
arpl
mov
nop
inc
repz
mov
jbe
rcl
dec
xchg
movs
test
mov
fs
xchg
mov
ficomp
sub
and
add
push
or
xchg
xor
dec
add
mov
pop
add
mov
enter
push
nop
mov
dec
or
pop
mov
push
dec
jno
stos
imul
mov
lods
lock
cmp
push
fdiv
inc
or
(bad)
inc
inc
pop
xchg
push
dec
pop
into
jle
add
in
das
inc
adc
mov
rol
ja
adc
popf
in
mov
test
js
rol
adc
sub
mov
ins
test
dec
sar
mov
pop
mov
xchg
test
pop
dec
jnp
movs
mov
in
fmul
or
cmp
add
cmps
push
dec
(bad)
popa
imul
lea
cmp
push
push
inc
mov
call
cld
inc
jecxz
aas
into
and
addr16
scas
lds
popf
jl
test
jns
nop
xor
lds
fist
inc
retf
call
jmp
mov
inc
mov
fwait
pop
cmp
pop
pop
xchg
fmul
mov
push
loop
xchg
push
or
xor
xor
sbb
fdivr
(bad)
in
sti
jecxz
je
retf
push
dec
mov
mov
pushf
pop
outs
js
pop
pop
(bad)
enter
setae
lock
ret
aad
stos
mov
cs
adc
(bad)
xchg
test
(bad)
fcom
jo
pop
sbb
adc
inc
jle
or
arpl
push
xchg
pushf
mov
push
test
mov
ins
adc
or
cmp
(bad)
fsubr
jmp
pop
pop
inc
int3
inc
es
ficom
inc
stos
jne
ins
pop
xchg
xchg
ja
aas
mov
ds
cmp
cli
repnz
call
cdq
pop
mov
into
pop
div
xchg
(bad)
dec
add
dec
ficomp
push
dec
cli
xchg
push
jns
neg
in
aaa
lock
ret
in
hlt
loope
retf
or
sbb
shr
mov
retf
int
repnz
pop
idiv
mov
out
call
sbb
pop
iret
clc
pop
sub
fldcw
cmp
dec
inc
xor
nop/reserved
xor
or
test
pop
ret
pop
das
or
mov
icebp
push
cli
mov
pushf
or
mov
mov
pop
das
adc
cmp
comiss
loopne
jno
es
cdq
test
sub
pop
jle
pop
dec
arpl
xchg
adc
xchg
mov
mov
jns
adc
mov
xchg
cmp
cmps
ret
pop
and
dec
call
add
mov
inc
call
fmulp
and
stc
push
or
lods
popf
daa
cmps
inc
cwde
in
aaa
inc
mov
jmp
push
sbb
sbb
aas
lods
hlt
pop
jo
loop
push
pushf
push
faddp
mov
xor
jno
add
imul
and
push
pop
dec
repz
jge
inc
out
pop
fstp
push
mov
outs
mov
cmp
rcl
mov
jmp
mov
outs
push
fstp
and
fxch
ds
cmc
jmp
add
mov
lock
jae
out
sub
test
mov
data16
xor
xchg
clc
jge
mov
adc
adc
xchg
ja
jne
ror
inc
out
inc
test
int
repnz
sub
jp
imul
sbb
inc
shr
mov
(bad)
sahf
test
popf
push
inc
cmp
pop
pop
loopne
push
mov
ins
jmp
test
(bad)
sub
imul
jmp
lea
test
enter
inc
push
xlat
fcom
jle
push
clc
les
repnz
dec
xchg
xchg
rcr
lods
inc
dec
test
mov
or
es
nop
xor
inc
enter
push
lea
sub
fbstp
inc
jns
popa
fisub
add
mov
cmc
xchg
dec
retf
mov
scas
push
mov
adc
sbb
inc
and
xor
push
imul
push
or
loop
and
jp
xor
or
push
scas
adc
inc
popf
mov
mov
out
in
popf
int
push
jo
add
std
in
xlat
sbb
inc
sbb
mov
scas
mov
fidivr
xchg
mov
ins
xchg
repnz
retf
mov
ret
clc
sbb
push
loop
mov
addr16
mov
mov
(bad)
jae
call
add
and
aas
jle
xor
pop
fcomp
cdq
pop
mov
sbb
stos
movs
inc
mov
xchg
mov
out
push
and
mov
add
pop
neg
fdivr
cdq
mov
mov
push
xchg
and
fnstsw
(bad)
or
gs
lea
shr
repnz
jo
pop
and
outs
mov
fdivr
rcl
iret
pop
xchg
xor
cmp
jns
imul
bound
inc
mov
push
dec
and
fchs
and
mov
in
cwde
lods
js
es
xchg
dec
adc
pop
iret
mov
xlat
xor
(bad)
or
cmp
push
push
das
pop
test
or
inc
mov
jnp
jno
pop
mov
xor
inc
js
shl
je
mov
dec
ss
sub
addr16
xor
mov
mov
repnz
daa
pop
fadd
xor
ja
or
mov
jp
cli
cmp
sbb
xchg
xchg
aaa
movs
mov
fist
push
or
xor
sub
xchg
lea
xor
faddp
jl
and
mov
scas
mov
cmp
pop
fxam
sbb
xchg
inc
movs
in
pushf
sbb
mov
(bad)
jge
mov
(bad)
jo
gs
(bad)
(bad)
into
pop
mov
add
push
call
xchg
adc
push
cmp
aad
out
retf
lahf
jae
imul
adc
or
adc
pusha
adc
ficomp
loopne
fisub
scas
pushf
popf
fisubr
test
repz
xchg
rcl
mov
fisub
jno
(bad)
enter
cwde
and
jnp
inc
jp
xchg
xchg
mov
mov
or
and
adc
jns
jne
js
adc
dec
push
mov
jg
xchg
mov
stos
std
lds
popf
outs
xor
mov
(bad)
jmp
fidivr
data16
mov
jecxz
lock
xchg
daa
jno
fimul
test
cmp
mov
lods
pop
dec
lods
ins
adc
sub
shl
add
jbe
lods
int
enter
out
xchg
iret
xor
jl
mov
mov
mov
mov
fs
push
subps
cwde
xor
xor
pop
dec
fisubr
add
add
loopne
je
ret
sub
sbb
dec
add
arpl
sbb
xor
jge
mov
jae
sbb
add
mov
mov
stos
lds
je
push
gs
test
xor
pop
jne
repnz
sbb
mov
mov
mov
mov
push
ror
jmp
mov
mov
shl
fbld
sahf
mov
stos
(bad)
jl
xchg
xchg
popf
mov
lea
hlt
test
pop
arpl
add
sbb
dec
mov
or
mov
pushf
stos
fisubr
xchg
jo
je
xchg
add
push
mov
or
push
loopne
cmp
jno
out
inc
sub
jl
add
dec
iret
test
jecxz
xchg
movs
sbb
retf
cmp
dec
xchg
mov
pop
cmp
out
jno
jg
sbb
mov
mov
daa
sub
ins
mov
aam
test
or
push
inc
mov
ins
xor
mov
cmp
adc
adc
pop
xor
ret
sub
fmul
or
xor
mov
and
or
pop
inc
jmp
xchg
mov
sar
mov
stos
js
jp
or
sahf
inc
pop
retf
(bad)
imul
dec
jne
xor
push
mov
mov
fdivr
add
jge
mov
pusha
push
mov
cmp
lds
ins
js
(bad)
test
mov
mov
addr16
and
cwde
shl
scas
pusha
mov
xchg
pop
push
imul
jl
jp
push
das
mov
inc
push
bnd
cmp
sub
xlat
push
pop
push
popf
and
ins
out
hlt
dec
rcl
std
imul
push
jae
fcmove
rcl
jmp
fs
ss
sub
cmps
cmp
xchg
dec
outs
push
fld
push
pop
cmp
ins
test
push
push
xor
shl
mov
repnz
mov
ret
add
dec
rol
push
mov
jmp
mov
mov
les
cmp
xor
inc
pushf
adc
sbb
inc
fisttp
push
push
sub
scas
js
xchg
pop
push
or
pop
(bad)
retf
loop
push
clc
fldcw
push
repnz
push
in
xor
cmp
xlat
js
mov
daa
xchg
aam
outs
repnz
add
call
mov
aas
(bad)
mov
int3
aad
inc
cli
inc
test
out
adc
iret
out
fwait
ja
daa
pop
ja
rol
je
call
pop
sbb
arpl
ror
cmp
jno
cld
ja
inc
push
mov
add
neg
xor
cdq
lock
retf
stos
je
fwait
sub
jno
push
push
jnp
shr
in
imul
into
daa
ins
cmp
jmp
push
xchg
jo
xchg
xor
jp
mov
das
gs
xor
push
out
std
and
add
push
in
add
repz
ds
and
pop
sub
adc
jecxz
cmc
sub
ja
jae
retf
int
outs
lea
lahf
mov
jno
sub
mov
rcl
add
test
out
inc
cmps
sub
sub
inc
stc
or
inc
fcom
jmp
add
cmps
adc
or
aas
xchg
inc
out
mov
je
test
retf
add
sub
add
rcr
inc
hlt
sub
push
add
pusha
lods
in
sbb
xor
(bad)
in
icebp
jbe
into
icebp
int
aam
jb
lods
scas
xchg
dec
xor
stc
adc
add
in
xchg
shl
add
xor
ss
ja
and
jp
jle
mov
aaa
inc
push
in
inc
sti
stc
fistp
ror
mov
das
in
test
scas
xchg
xor
and
or
mov
pushf
mov
mov
je
mov
call
dec
dec
std
mov
aad
sbb
push
dec
mov
jle
mov
fsubr
push
mov
push
arpl
xchg
cdq
es
adc
das
xchg
repnz
sbb
lds
mov
stos
xlat
(bad)
push
or
sub
lock
bswap
mov
out
jge
aad
(bad)
cmp
addr16
jbe
lock
mov
and
mov
dec
loope
sti
inc
pop
jmp
jmp
clc
inc
add
and
stc
jl
inc
pcmpgtw
repz
or
(bad)
pushf
fst
rcr
jnp
xor
in
pop
lods
xchg
add
in
xchg
cmp
xor
pop
ror
push
(bad)
mov
ss
pop
in
mov
rol
out
shl
adc
add
shl
icebp
cmps
lock
mov
add
(bad)
adc
push
ror
jno
mov
sub
adc
push
adc
add
cmp
(bad)
ja
or
or
dec
icebp
and
pop
call
leave
stc
adc
ret
and
add
cmc
sahf
ja
js
pop
(bad)
dec
push
shl
and
leave
sbb
mov
loopne
das
jo
fisttp
retf
mov
xchg
pop
adc
clc
stos
ror
and
js
dec
and
sbb
mov
jae
int3
test
xchg
imul
add
js
in
fisub
jnp
int3
test
imul
in
add
stos
fimul
jo
mov
sbb
adc
es
jmp
xchg
call
pop
inc
sbb
ja
in
lock
push
loope
je
ret
call
dec
sti
test
and
in
adc
(bad)
loop
in
jl
push
jmp
cmp
or
mov
jp
scas
rol
jne
sar
aas
loope
ret
fmul
mov
mov
stos
inc
or
das
inc
ret
and
mov
sub
sbb
push
out
ins
push
sub
xlat
push
mov
adc
xchg
sub
dec
cli
pop
mov
test
xor
mov
stos
ins
ins
test
lock
popf
fst
dec
(bad)
adc
fdivr
inc
inc
xchg
cmps
ss
mov
ror
jmp
fldenv
je
jnp
test
jge
loope
mov
sbb
xor
sahf
and
inc
jbe
out
push
test
stos
lahf
or
push
jge
mov
jge
inc
gs
xor
push
adc
nop
shr
lds
loop
push
mov
adc
mov
stos
inc
jle
xor
aas
les
lods
cli
les
mov
xchg
and
inc
cmc
adc
fsubr
ss
inc
xor
xlat
add
les
call
xor
mov
pushf
cld
dec
xor
sub
mov
in
push
ror
aam
xor
inc
mov
iret
les
mov
mov
jne
pusha
mov
dec
rol
stc
mov
in
cmp
mov
imul
cmps
loopne
sub
iret
adc
xchg
ficomp
or
and
cli
sbb
xchg
cld
and
cmps
and
dec
aaa
movs
dec
jae
dec
mov
rcl
mov
iret
push
retf
xor
clc
or
retf
adc
inc
arpl
pop
stos
jo
(bad)
mov
mov
mov
fwait
out
inc
std
gs
mov
movs
jne
inc
jne
jl
data16
add
sbb
fst
pop
ret
lods
and
mov
je
les
push
add
les
or
mov
pop
add
pusha
idiv
ins
inc
and
add
xor
fwait
mov
inc
xchg
inc
adc
mov
in
mov
movs
jmp
jbe
cmps
pop
adc
inc
push
ret
lea
jecxz
rol
cmp
sbb
adc
adc
stos
jmp
xchg
test
out
pop
cmp
xchg
ret
inc
xchg
jg
int
jmp
cmp
sbb
adc
lahf
stos
rcl
int
std
jae
ret
xor
dec
sub
xchg
jo
call
lahf
xor
mov
cdq
test
push
cmp
sbb
cmps
data16
push
mov
and
xchg
fiadd
add
lock
fbld
imul
adc
loope
sahf
out
aad
push
pop
xlat
in
mul
xor
jecxz
daa
movs
pop
leave
sbb
mov
dec
dec
test
adc
xchg
fisub
push
pushf
fs
fidivr
test
dec
fsub
daa
in
repz
mov
and
sub
lock
jo
cmp
push
mov
ins
sbb
push
fisttp
int3
adc
dec
repnz
imul
add
aaa
push
mul
sbb
stos
dec
(bad)
rcr
xlat
dec
inc
mov
xchg
in
xchg
push
movs
pop
shl
add
jge
pop
sub
(bad)
aad
mov
sbb
adc
lea
mov
jecxz
or
ror
(bad)
nop
int
icebp
mov
es
dec
push
shr
mov
jb
xor
sbb
or
pop
icebp
gs
mov
std
(bad)
cs
adc
pop
sub
push
jp
retf
push
pop
mov
nop
out
pop
js
repz
mov
pop
jbe
stos
repnz
loop
(bad)
mov
ss
shl
(bad)
dec
ss
cli
leave
add
push
daa
xchg
cmp
or
leave
jmp
je
gs
nop
addr16
je
xlat
push
ss
mov
push
jno
xchg
popf
(bad)
sub
xor
movs
push
inc
aaa
xor
xor
and
xor
push
ret
dec
loop
lods
xchg
mov
xchg
fild
fisttp
xor
jg
scas
jge
jno
push
push
fidivr
out
aam
es
div
loopne
into
jns
ss
dec
ins
lods
stos
inc
ret
jl
call
(bad)
cmps
and
push
shl
les
or
repz
jo
mov
addr16
lods
pusha
sbb
stos
imul
push
mov
jle
cmp
cmp
popf
sbb
imul
xor
mov
shr
push
or
sbb
rcl
add
adc
xor
sahf
stos
or
jnp
loop
and
sub
mov
repz
jle
retf
stos
pop
ret
daa
adc
clc
sub
push
add
lahf
bound
mov
repnz
ja
test
or
or
cmp
call
sub
sub
cmp
es
sbb
inc
pop
lock
xchg
jmp
jae
add
cmps
fnstenv
add
iret
das
ffree
mov
out
mov
loop
cmps
and
or
iret
sbb
sub
les
(bad)
addr16
mov
mov
into
aaa
jmp
nop
(bad)
ja
jbe
fidiv
(bad)
fcomp
and
push
sti
sbb
ss
xor
mov
add
xchg
xor
icebp
push
test
movsx
mov
add
and
mov
lahf
sbb
xor
enter
push
jmp
inc
hlt
nop
dec
xchg
jne
retf
push
mov
ins
aaa
push
outs
or
sbb
lods
mov
fimul
or
xor
in
test
sub
inc
icebp
adc
lea
cmp
sbb
loope
enter
dec
add
or
lods
(bad)
loopne
call
addr16
sti
ficomp
mov
test
in
pop
retf
sub
cmp
dec
or
add
mov
pop
dec
or
adc
loop
ficomp
mov
mov
jo
dec
clc
lahf
stos
mov
jbe
mov
out
test
cmp
movs
iret
push
xchg
and
fidiv
call
inc
test
push
xchg
call
shr
fiadd
cmp
lds
adc
sahf
jecxz
cs
repz
adc
dec
cmc
cmp
push
inc
pop
imul
in
mov
xchg
aam
xchg
or
pop
adc
and
stc
push
pusha
or
sub
cld
in
add
test
jmp
push
pop
mov
mov
xchg
fs
mov
dec
ins
and
sbb
stos
xor
fldenv
push
and
mov
fnstsw
sub
add
adc
xchg
std
ss
dec
push
pop
jge
ds
and
mov
jp
mov
pop
cmp
imul
pop
in
mov
sbb
lock
sbb
pop
cld
call
mov
cmp
sub
lds
test
repnz
jle
pop
sahf
or
jmp
adc
and
retf
scas
mov
aaa
dec
data16
or
sbb
call
fmul
ins
je
adc
js
popa
or
mov
and
ds
lahf
les
mov
mov
ins
retf
add
scas
(bad)
jecxz
adc
repz
stc
std
popf
not
jne
out
pushf
test
hlt
dec
div
xor
(bad)
mov
(bad)
sti
fbld
push
stc
jb
test
or
lods
sub
dec
xor
in
xchg
stc
pop
in
aas
gs
stos
push
xor
dec
inc
fstp
loope
(bad)
mov
mov
iret
sahf
adc
sub
bnd
cmps
aas
xchg
stos
sub
fisubr
imul
push
in
popf
and
mov
mov
inc
mov
(bad)
outs
cli
in
mov
jne
(bad)
ins
addr16
sub
push
sbb
jmp
ja
jp
sbb
leave
test
jg
jmp
sbb
cmps
bound
mov
(bad)
popf
add
cmp
test
adc
rcr
int
test
aaa
in
das
jmp
shr
loopne
daa
call
test
stc
xchg
out
stos
inc
xor
jle
out
imul
pop
daa
clc
jne
inc
loop
mov
push
jl
sbb
jmp
neg
sbb
mov
pop
sbb
cmps
jb
mov
sub
sbb
pusha
les
test
test
sub
mov
or
lahf
fnsave
stos
xor
clc
neg
pop
push
out
inc
cmp
cmp
push
mov
cmp
adc
stos
mov
and
jg
lods
int3
sub
test
mov
(bad)
daa
cmp
push
sbb
push
xor
jo
fimul
xchg
add
or
push
mov
(bad)
or
in
push
js
cmps
clc
jae
sbb
jo
repnz
xchg
add
lea
adc
mov
and
mov
call
aam
pop
pop
mov
adc
icebp
jmp
cmp
gs
jbe
das
outs
les
add
push
push
adc
cmp
nop
in
mov
adc
mov
jo
ficom
cmps
outs
jno
(bad)
dec
hlt
and
shl
retf
xor
xchg
in
test
leave
push
dec
mov
rcr
mov
test
inc
aad
jmp
dec
pop
jbe
mov
rcr
hlt
clc
pop
push
add
mov
mov
(bad)
jbe
mov
test
ja
loopne
push
or
iret
gs
mov
pop
jle
out
loopne
jmp
or
scas
pop
ins
xchg
aad
or
fstp
cmc
cmps
dec
aad
das
popa
and
inc
pusha
outs
pop
and
ja
push
test
ret
nop
and
or
jns
push
mov
bsr
cmp
pop
xor
in
xchg
push
cld
mov
dec
loopne
sub
mov
stc
adc
ins
xor
sub
je
daa
pop
xchg
mov
sbb
popa
and
(bad)
mov
mov
data16
(bad)
dec
(bad)
mov
push
cmp
jo
int
arpl
lahf
dec
aad
nop
mov
mov
(bad)
test
pop
clc
adc
and
jg
repz
(bad)
jae
mov
jle
inc
push
mov
cli
mov
push
js
(bad)
shl
ins
test
cdq
mov
fwait
xchg
cs
into
lods
and
ds
jge
outs
cmp
mov
push
or
sar
aaa
sub
mov
les
fld
push
push
fidivr
(bad)
pop
sti
adc
push
adc
arpl
jl
push
pop
mov
mov
pusha
xor
lds
jne
sub
popf
iret
fnstenv
mov
xchg
jns
mov
or
icebp
or
mov
pop
add
mov
mul
jl
retf
inc
pavgw
jecxz
jmp
jge
out
mov
pop
sbb
test
aam
add
(bad)
aam
cmp
push
ror
sub
pop
fsubr
pop
push
rcr
js
push
push
and
inc
ds
xchg
aam
(bad)
xchg
mov
sub
mov
repnz
add
jb
add
std
ins
pop
jb
lahf
clc
mov
retf
mov
dec
fs
dec
(bad)
lock
push
test
xchg
and
and
adc
das
dec
xchg
mov
rcr
(bad)
fbstp
jp
imul
push
or
add
es
mov
cmp
lahf
add
dec
xchg
rcr
push
push
xchg
pop
fnstsw
push
leave
mov
push
ret
ret
pop
div
ins
pushf
mov
add
pop
sbb
jl
mov
cmp
imul
jae
int
xlat
adc
out
pop
test
pop
mov
ss
ret
cli
pop
or
(bad)
cmps
mov
adc
sbb
push
mov
cmp
clc
ror
addr16
mov
sbb
arpl
int3
push
add
fistp
xchg
addr16
cwde
and
out
pop
add
cmp
loop
add
push
stos
push
movs
js
stos
fcom
push
aaa
and
(bad)
(bad)
or
mov
cs
dec
push
mov
xor
ss
mov
cmp
jge
popf
fisttp
fld
add
push
jge
repnz
add
lahf
loopne
sbb
sbb
mov
mov
faddp
pop
jbe
sub
mov
xor
pop
shl
push
push
(bad)
ficom
xchg
repz
rcl
mov
mov
enter
setb
cmp
fidivr
out
push
ja
mov
in
dec
test
fisub
popa
aas
mov
pop
jo
retf
xlat
ror
push
push
pop
adc
sub
dec
cdq
push
lahf
dec
push
or
xchg
arpl
shl
adc
aam
adc
cmps
mov
jb
(bad)
cld
mov
(bad)
pop
adc
cmp
pusha
jle
adc
movs
repnz
lods
fld
cli
add
js
jg
pop
xor
stc
shl
fsubr
jbe
dec
inc
lods
jo
add
sbb
cmp
jmp
jecxz
into
mov
retf
fcmovnu
push
(bad)
scas
dec
dec
dec
and
fidiv
movs
inc
mov
(bad)
repz
push
mov
int3
mov
add
push
or
imul
outs
test
enter
popf
mov
retf
ins
pusha
sub
and
loopne
mov
repz
arpl
ins
pop
mov
sub
cmp
or
mov
and
xchg
imul
dec
dec
stc
pop
xchg
aad
outs
mov
xor
ja
jb
and
dec
out
mov
or
mov
in
retf
cmp
xchg
ss
and
fidiv
outs
or
std
(bad)
out
pushf
adc
mov
fadd
mov
clc
cmp
mov
rol
mov
movs
mov
(bad)
sbb
add
sub
mov
mov
cmps
adc
xlat
retf
addr16
into
mov
pop
mov
jecxz
mov
jl
fbld
cmps
dec
stos
push
les
jmp
mov
icebp
adc
push
je
out
clc
in
lea
fs
jne
add
out
loopne
loopne
mov
and
inc
push
inc
popf
fisub
int
test
adc
movs
loope
sub
jo
xor
mov
enter
movaps
imul
xor
aaa
out
pop
movs
inc
(bad)
aas
ret
jmp
gs
js
(bad)
dec
sar
in
stos
in
nop
sahf
inc
cmc
hlt
cwde
xor
xlat
lea
xor
mov
push
cwde
jno
adc
pop
movq
push
pushf
es
xchg
mov
cdq
ror
sbb
mov
cmp
in
add
outs
add
fcomp
jg
lahf
push
cmc
aam
or
inc
dec
retf
xchg
jno
es
jno
pop
movs
aad
int3
sbb
int
fisttp
dec
push
mov
inc
mov
jae
push
aas
pop
push
pop
cmp
outs
or
fist
fistp
sub
jbe
mov
pop
dec
sbb
cwde
aad
xor
or
cmc
xor
pop
cmps
xor
das
jmp
mov
sub
out
mov
cwde
jmp
jecxz
jo
mov
lea
xchg
or
test
push
and
fnstcw
pop
mov
jp
dec
mov
mov
test
outs
fnstcw
out
out
xor
test
or
or
cmp
pop
mov
lods
(bad)
in
pop
sbb
add
out
sub
dec
inc
push
(bad)
test
test
adc
mov
jmp
retf
in
stc
(bad)
(bad)
dec
ins
add
fild
xor
mov
mov
xchg
sub
mov
fcmovnu
xchg
or
inc
js
sub
push
xor
and
not
xor
and
push
lods
xor
jnp
lods
or
mov
mov
out
push
pop
in
leave
cmp
push
mov
and
cld
iret
popa
push
leave
out
cwde
retf
mov
mov
fmul
jmp
or
les
pop
add
fcom
jge
dec
sub
es
(bad)
ss
add
les
adc
or
jp
xchg
adc
push
pop
push
out
lods
cmp
js
or
push
jmp
push
mov
out
or
retf
retf
lahf
mov
adc
xlat
lods
and
jmp
sbb
scas
outs
imul
movs
or
mov
pop
jbe
pop
push
xchg
(bad)
cmp
adc
enter
shr
pop
pop
mov
xor
xchg
test
jb
into
aas
test
cmp
xor
cmps
mov
inc
jmp
pop
das
mov
xchg
xlat
aad
adc
dec
pop
adc
je
inc
rcl
pop
(bad)
fcos
mov
int
fst
loop
mov
xchg
movs
outs
mov
mov
call
int
push
fs
xlat
add
xchg
test
(bad)
into
fldcw
fild
and
lea
leave
inc
cmp
cmp
lods
sbb
mov
jge
xor
xchg
(bad)
retf
fidiv
fs
adc
je
movs
sbb
enter
push
jbe
mov
cmps
test
mov
xchg
xchg
xchg
push
mov
dec
lock
enter
arpl
aam
test
mov
xor
adc
adc
movs
sub
inc
mov
fmul
mov
cmp
cmp
inc
pop
cmps
mov
rcl
pop
int3
sbb
ins
inc
cs
and
mov
rcl
ss
scas
fdiv
jbe
stos
xchg
or
dec
pusha
xor
mov
call
cmp
leave
stc
int3
xor
or
nop
mov
mov
es
fcom
cmp
adc
(bad)
sub
xchg
jno
mov
loope
ins
and
movs
add
mov
adc
cmp
pop
int3
add
inc
xchg
mov
add
xchg
iret
enter
mov
sub
(bad)
add
pushf
mov
mov
iret
mov
inc
sbb
push
xor
cli
pusha
and
push
add
leave
dec
nop
arpl
xlat
inc
gs
ror
xchg
(bad)
in
rol
lahf
in
add
hlt
repnz
mov
cld
mov
push
pop
popa
sub
shl
les
mov
cmps
scas
lds
popf
lea
or
push
mov
(bad)
shr
gs
imul
aas
ins
jp
scas
aaa
call
pop
and
dec
retf
enter
out
push
test
jbe
mov
pusha
sbb
inc
ds
fist
xor
fld
test
les
loope
test
cmp
xlat
(bad)
movs
lock
(bad)
or
jge
push
and
push
adc
dec
cmp
in
xchg
(bad)
cdq
dec
jbe
sbb
outs
call
daa
stos
ins
(bad)
into
cmc
icebp
sti
pop
shl
(bad)
cld
call
mov
push
out
add
in
mov
sub
fiadd
fcmovnb
push
xor
fcomip
imul
sub
jp
sbb
leave
shr
jo
or
ss
and
(bad)
mov
jmp
iret
nop
and
push
sahf
sbb
inc
add
push
xor
pop
cld
sub
add
stc
icebp
mov
fnsave
mov
lock
cdq
(bad)
xor
pop
push
js
sub
ins
aam
rcl
pop
inc
loop
adc
bnd
ret
mov
or
adc
push
fucomi
cmp
cmp
aad
pop
sub
test
stc
data16
fs
xchg
push
ret
ja
jae
jmp
cs
sub
imul
mov
jp
mov
int
adc
or
js
dec
stos
imul
hlt
jne
mov
jmp
lahf
retf
retf
dec
outs
mov
jle
out
mov
xchg
fisttp
rcr
inc
out
movs
int3
(bad)
or
jmp
adc
sub
std
fnsave
mov
push
sub
mov
jmp
inc
neg
ja
add
jnp
mov
pop
fnop
sub
movs
retf
add
cmp
in
sahf
gs
lods
sahf
das
sti
push
bound
loop
mov
jns
dec
mov
push
jmp
loop
aam
mov
test
es
and
test
jge
cmps
in
mov
jg
lods
loope
inc
les
test
ret
popf
xchg
add
jmp
shl
dec
hlt
enter
mov
test
jns
mov
sbb
jg
stc
xchg
jg
and
(bad)
adc
popf
aad
and
ins
xor
data16
sbb
jbe
or
jmp
mov
pop
(bad)
pop
push
lahf
sbb
and
push
(bad)
mov
shr
jmp
data16
stc
cmp
(bad)
fild
dec
shr
stc
inc
xchg
addr16
test
adc
cli
clc
mov
pop
cmp
(bad)
fwait
mov
lock
adc
inc
clc
mul
sbb
rol
cwde
adc
sub
cdq
jnp
stos
mov
imul
pminsw
outs
addr16
sti
sbb
xchg
mov
inc
adc
sbb
mov
dec
dec
cld
lods
sbb
mov
dec
fild
pop
out
(bad)
out
inc
xchg
mov
mov
aam
pop
mov
push
out
cmp
mov
shl
hlt
push
xlat
pop
cmp
imul
retf
lds
adc
push
xor
jns
or
pop
fist
cmc
int3
js
fs
mov
or
dec
ins
sub
sub
xchg
dec
dec
ror
push
pop
sahf
mov
mov
out
arpl
ja
mov
fdivr
inc
dec
je
push
imul
pop
cwde
stos
xor
jle
jne
push
and
out
sub
in
pop
lock
and
mov
int3
ds
cs
call
lock
outs
jne
adc
dec
call
pop
or
repz
int
xchg
je
(bad)
shl
xchg
aad
push
add
outs
jmp
xor
lods
cli
fisubr
call
jo
adc
gs
fwait
hlt
sbb
and
cmp
mov
(bad)
xlat
cmps
in
rcr
mov
cmp
je
pop
retf
jns
jle
xor
les
outs
cwde
or
les
mov
ss
sub
sti
cwde
xchg
jmp
push
and
sbb
pop
xor
cmp
rcr
jns
jl
ja
enter
pop
add
icebp
xchg
(bad)
jo
push
mov
fild
adc
mov
mov
scas
pop
add
jb
xor
inc
lods
xor
lahf
dec
leave
cwde
adc
pop
pop
or
ins
lods
adc
xor
mov
ret
push
jg
fsub
xor
jmp
neg
arpl
push
iret
jmp
mov
inc
jmp
ret
and
jb
sub
mov
or
(bad)
stos
pop
fidiv
out
dec
ins
mov
shl
cmps
and
cmps
sub
gs
and
cdq
stos
jns
pop
sbb
dec
sub
pusha
mov
ins
jbe
xchg
add
push
rcr
movs
and
(bad)
js
mov
xchg
pop
inc
adc
inc
test
ds
test
inc
rcl
sbb
xchg
repz
es
push
fisttp
adc
fsub
jmp
mov
mov
push
xor
(bad)
aaa
jb
aam
pop
inc
(bad)
in
fs
or
pop
scas
dec
fcomi
popf
dec
and
mov
sbb
fwait
test
call
mov
jae
aam
xor
iret
sbb
int
jbe
mov
pop
jnp
cli
cmps
aaa
loopne
xor
mov
in
cmc
and
inc
jns
fcom
gs
(bad)
mov
jae
jge
fst
test
aaa
mov
pusha
push
add
inc
(bad)
fistp
cmps
movs
arpl
clc
stos
fnstcw
test
cdq
inc
rcr
aaa
jg
jecxz
xor
(bad)
mov
jno
mov
in
dec
loope
ja
mov
mov
sbb
mov
aam
repnz
call
jbe
jge
jle
fnstsw
sbb
jl
stos
mov
dec
ret
jl
sbb
xor
xor
dec
sbb
sti
inc
data16
hlt
shr
out
mov
loope
xor
push
and
dec
cmps
popa
test
enter
in
mov
mov
push
or
xchg
sub
fs
sete
mov
(bad)
stc
xchg
inc
mov
push
retf
pop
in
cdq
leave
jno
mov
aam
jns
imul
cmc
mov
outs
int3
dec
bound
fs
test
cli
mov
adc
mov
ins
int
cmp
call
push
adc
inc
xor
(bad)
into
in
mov
mov
dec
sub
cdq
mov
mov
mov
icebp
push
mov
into
mov
aaa
jmp
test
cmp
loope
sti
jecxz
push
imul
bound
dec
push
mov
mov
jp
es
fistp
pusha
xlat
cmps
xchg
imul
(bad)
xlat
xchg
retf
pop
jns
arpl
pusha
(bad)
cmp
push
jbe
jns
add
mov
xor
pop
dec
js
pop
and
(bad)
out
sti
loopne
sub
mov
inc
mov
retf
mov
daa
pop
fimul
add
mov
call
(bad)
xlat
xchg
bts
xor
xchg
daa
outs
mov
push
iret
sbb
das
xchg
or
sbb
jmp
sub
data16
jmp
icebp
jbe
adc
sbb
push
jae
ja
retf
mov
dec
xor
aad
inc
mov
int
mov
mul
cmp
popf
lods
jmp
(bad)
cdq
dec
stos
pushf
imul
mov
cmp
out
jle
push
fstp
push
(bad)
lahf
les
mov
and
jmp
adc
pop
and
arpl
mov
outs
push
out
cmp
int
fwait
aad
(bad)
jge
fnstsw
sub
cmp
cmp
jl
sbb
popa
mov
adc
pshufw
xchg
or
movs
ret
lods
test
call
xchg
rcr
(bad)
dec
cmp
sti
ins
aaa
(bad)
enter
xchg
retf
mov
adc
or
popf
sub
mov
pop
adc
ret
fwait
mov
pushfw
adc
mov
into
cmp
xchg
jnp
call
jmp
iret
fidivr
mov
mov
sar
pop
xchg
popa
ret
sar
mov
inc
sbb
out
jmp
dec
cli
ins
retf
push
fdiv
cdq
jns
pop
jbe
pop
fstp
shl
push
push
mov
jae
aaa
hlt
call
mov
xor
push
in
sbb
or
add
mov
clc
cmp
std
stc
mov
dec
cdq
fwait
dec
mov
pop
mov
dec
hlt
or
je
cs
pop
mov
sahf
inc
mov
mov
push
aaa
sbb
mov
out
pop
and
xchg
and
dec
retf
iret
aaa
leave
and
xchg
popa
dec
jne
or
cs
arpl
fnstsw
mov
ror
gs
scas
test
xchg
out
fwait
push
nop
jne
pushf
push
cwde
and
push
nop
xchg
add
leave
ds
sub
gs
push
jge
das
inc
mov
int3
cmps
dec
arpl
pop
push
test
push
out
xchg
or
adc
push
sub
out
inc
xchg
in
jmp
ins
add
lods
sub
(bad)
leave
je
rcl
loope
inc
call
in
dec
adc
adc
and
loopne
xor
cli
adc
mov
in
daa
jns
jge
into
jne
test
cdq
mov
cwde
fcmovb
fisttp
sub
mov
jmp
and
adc
sbb
pop
repnz
mov
jecxz
shl
or
adc
mov
cdq
mov
and
pop
lods
popf
or
(bad)
lods
cwde
int3
loopne
inc
movs
sbb
sub
dec
jns
test
dec
jbe
mov
dec
mov
pop
cmps
sar
lahf
inc
sub
xchg
mov
jb
es
and
repnz
or
mov
sub
mov
jmp
iret
scas
jbe
sub
mov
push
outs
mov
or
sub
icebp
pop
pop
sbb
mov
imul
sub
stos
jno
or
push
sar
mov
fcmovnu
mov
je
(bad)
mov
mov
inc
mov
inc
jmp
inc
inc
xchg
push
dec
cwde
pop
add
repnz
mov
mov
mov
adc
mov
xchg
mov
jmp
jns
jnp
lds
pop
push
sub
fwait
in
jl
adc
repz
jo
mov
mov
jge
das
inc
and
lods
cmc
push
test
outs
into
inc
les
stos
pop
lock
xchg
push
adc
sub
nop
stos
popf
stos
jb
std
popf
fucomi
shl
gs
mov
fdiv
fild
pop
fist
rol
lods
fldl2e
pop
in
pop
ror
dec
jle
cmp
repnz
xor
xchg
pop
adc
repnz
pop
mov
mov
sbb
je
es
hlt
push
std
mov
mov
loope
cmp
loop
or
jp
adc
push
inc
lds
pop
fcomp
cli
push
pop
outs
sub
push
mov
dec
cmp
sub
mov
call
mov
xlat
add
and
pop
in
cmps
add
adc
xlat
data16
xchg
mov
adc
cmps
cmps
test
aas
aas
sub
in
inc
addr16
aaa
lea
ss
mov
inc
sub
into
enter
dec
aam
leave
mov
outs
daa
out
sub
and
or
shl
ficom
push
out
xor
outs
pop
or
je
and
fisub
setnp
inc
or
mov
arpl
mov
popf
push
sti
sub
xchg
popf
inc
jg
or
push
sbb
in
stc
(bad)
or
xchg
mov
dec
clc
pusha
lods
ins
and
inc
and
aaa
aam
test
rcr
push
push
(bad)
imul
push
xchg
sub
cmp
push
inc
aas
adc
test
sub
mov
imul
jmp
mov
jge
mul
pop
push
push
lea
pop
push
xchg
jbe
jb
or
js
std
jnp
inc
or
dec
jmp
cmp
test
sub
push
jge
or
mov
push
leave
imul
and
mov
dec
mov
or
repnz
push
xor
mov
dec
(bad)
in
jbe
stos
in
dec
movs
lahf
xor
(bad)
pop
ja
sbb
push
sti
mov
fisubr
scas
mov
dec
inc
test
xor
cs
mov
mov
jle
pop
mov
call
sbb
xchg
loop
es
mov
rcl
popf
ror
test
cmp
fild
imul
mov
lock
mov
dec
inc
pop
(bad)
mov
outs
and
push
pop
add
rol
and
mov
in
(bad)
sub
mov
leave
mov
lea
dec
add
dec
or
mov
or
loopne
mov
(bad)
lds
inc
pop
push
in
popf
repz
aas
inc
lds
movs
lds
xchg
out
mov
or
stos
push
ss
add
lahf
push
call
popf
push
lods
mov
push
lea
push
mov
(bad)
pusha
add
and
xchg
sbb
sbb
mov
test
inc
test
push
aaa
jp
lods
push
addr16
cmp
ret
jne
imul
pop
addr16
out
push
jl
sub
popf
xor
ja
mov
lods
data16
xor
sbb
test
jmp
jle
xlat
inc
dec
adc
or
cmps
pop
pop
sbb
sub
jb
or
out
cwde
pop
inc
in
xchg
and
bt
xor
dec
(bad)
adc
ds
nop
push
popf
push
inc
xchg
push
cdq
retf
push
in
dec
js
iret
aas
arpl
adc
enter
dec
inc
adc
aad
(bad)
pop
xor
mov
popa
push
add
inc
mov
jmp
dec
bound
inc
mov
or
mov
fisttp
jecxz
pop
adc
adc
push
lahf
adc
push
cdq
mov
data16
xchg
push
jne
lds
or
push
sub
sbb
sub
ret
clc
xor
mov
mul
sub
mov
test
cmp
(bad)
mov
jmp
pop
inc
and
retf
jae
xchg
shr
adc
push
leave
sbb
mov
push
call
test
mov
test
sub
inc
out
pop
fcom
nop
in
jno
cmp
test
lock
jne
mov
and
push
add
cmp
rol
into
jge
jge
stos
or
(bad)
dec
sbb
aas
std
sbb
sbb
lock
jb
(bad)
jbe
dec
jmp
mov
hlt
mov
mov
xor
cmp
push
cmp
mov
ja
pop
aam
sbb
mov
xor
sbb
push
push
pop
push
mov
cdq
and
int3
std
fwait
nop
test
cmps
mov
and
lds
data16
jo
das
(bad)
push
xchg
sub
push
movs
fisubr
jo
(bad)
lds
ja
mov
rcr
mov
or
cmp
gs
loopne
push
ret
pop
push
ficom
cmp
push
gs
mov
inc
pop
bound
test
xor
mov
mov
pop
loope
pop
inc
sbb
ret
(bad)
fchs
mov
jl
std
inc
fcomi
jl
mov
and
mov
call
stc
fnstenv
icebp
jl
stc
call
mov
or
es
repz
ja
xor
lds
mov
ss
call
movs
cmp
arpl
test
shl
xchg
iret
dec
jl
push
and
mov
pop
dec
inc
xchg
dec
movs
stc
and
popa
pop
mov
inc
sahf
retf
pop
fsubr
sbb
nop
mov
adc
mov
test
(bad)
daa
div
retf
mov
jb
mov
lock
in
pop
adc
aam
sbb
popa
pop
add
cmp
in
jecxz
mov
pop
mov
lods
add
or
ret
push
repnz
mov
pop
adc
cwde
jmp
ss
icebp
out
int3
mov
and
leave
dec
arpl
and
cmp
test
dec
daa
add
sub
std
retf
(bad)
adc
call
xchg
adc
pop
pop
in
data16
mov
xor
xchg
mov
(bad)
mov
movs
xor
cld
mov
jne
dec
fwait
lea
inc
inc
imul
scas
add
jecxz
ret
push
dec
lahf
adc
sub
loopne
outs
stos
mov
add
cmp
mov
inc
cmp
ins
inc
jecxz
iret
push
sbb
ins
mov
imul
pop
ror
adc
pop
lds
bnd
cmp
add
mov
jecxz
cld
pop
jb
aam
sahf
jl
mov
jno
push
nop
and
je
sbb
add
(bad)
add
std
push
adc
push
rcr
lock
pop
adc
xchg
push
xor
movnti
lods
enter
xchg
mov
pop
ret
mov
xor
mov
mov
icebp
cs
imul
pop
ret
lock
retf
aaa
ins
aam
jp
jp
or
dec
mov
mov
outs
jle
inc
scas
pop
sub
sub
stos
cmc
ret
mov
loopne
mov
dec
data16
jnp
in
sub
jle
inc
leave
push
pop
jns
inc
outs
inc
xchg
loope
mov
push
pop
mov
jg
and
jge
dec
jmp
ficom
sub
pop
rcr
lods
outs
mov
popa
loopne
sub
fiadd
xor
push
and
ja
cvttps2pi
jo
not
push
adc
jecxz
pusha
mov
das
iret
fisttp
mov
movhps
push
test
xlat
pop
imul
lods
jne
mov
xor
mov
xchg
mov
cmp
pushf
adc
out
adc
adc
mov
stos
rcl
cmp
jle
out
and
push
sub
mov
rcl
sbb
mov
add
clts
enter
mov
and
loope
(bad)
out
mov
pop
ss
xchg
daa
mov
dec
inc
adc
or
call
xor
js
js
adc
lods
jnp
inc
pop
jl
and
cmp
add
das
fs
add
aaa
bound
sti
sub
cdq
pop
pop
cmps
hlt
fld
xor
fild
aaa
lods
jns
repnz
addr16
mov
lea
sbb
push
lods
cdq
retf
inc
(bad)
ins
call
jle
xchg
pop
pop
inc
ins
into
sahf
dec
pop
xchg
into
sahf
les
dec
std
xor
pop
xchg
cmp
cmp
sar
or
jmp
push
and
js
out
or
pop
push
rcr
mov
arpl
push
lds
sbb
rcr
sbb
dec
mov
call
in
sbb
les
and
fiadd
sbb
inc
mov
aad
mov
jmp
fsub
jns
mov
out
push
or
clc
mov
adc
ficom
das
and
or
repnz
inc
mov
ja
out
cli
cmps
imul
or
aas
in
mov
stos
fs
sub
cld
push
cmp
test
push
sar
mov
ret
push
and
rcl
push
mov
nop
sub
sahf
adc
push
mov
mov
movs
dec
jb
ins
cmp
mov
add
je
cli
sub
ret
stos
xor
dec
dec
cmp
retf
push
fs
jmp
repz
aas
jmp
outs
mov
jmp
(bad)
add
and
or
dec
fist
idiv
cmc
(bad)
sub
sub
and
adc
fsub
aaa
add
cmp
jecxz
out
mov
jl
hlt
gs
bound
or
mov
test
inc
sbb
loopne
mov
pop
fld
fldlg2
repz
mov
xor
sbb
fwait
xchg
test
jmp
test
pop
push
icebp
pop
push
mov
adc
mov
je
arpl
scas
stc
cli
push
dec
dec
fdiv
pop
fwait
mov
sbb
in
popa
out
xor
pop
jbe
sub
pushf
clc
icebp
lahf
sub
jns
rol
lock
nop
cmp
ins
(bad)
cmp
or
ds
mov
test
add
psubq
dec
pop
inc
xchg
mov
shl
repnz
aas
inc
pop
xor
sbb
sub
cmp
add
or
dec
loop
inc
jmp
push
adc
adc
fld
ja
mov
or
and
fsubr
loop
(bad)
sub
and
cwde
and
movs
cmp
push
ins
inc
das
mov
pop
sub
daa
and
out
inc
hlt
or
(bad)
ins
mov
inc
jmp
lock
push
pusha
aas
cmps
sar
(bad)
dec
sub
stos
cmps
sub
dec
ret
int3
jge
mov
mov
sbb
jnp
inc
sbb
lahf
mov
pop
lods
add
and
jbe
arpl
ins
(bad)
sub
jns
imul
inc
add
out
jge
repz
fsubr
fucom
das
xor
ds
in
rol
xor
sub
loop
lods
inc
xor
je
push
arpl
inc
shl
test
shl
push
ss
aas
(bad)
add
bswap
mov
xchg
xor
movs
daa
and
es
daa
adc
xor
jno
push
repz
lods
shl
jne
adc
xchg
cld
shl
xchg
pusha
test
jle
lods
loopne
hlt
frstor
push
pushf
or
lea
and
and
sub
push
cdq
xchg
mov
bound
iret
jmp
repz
stc
jmp
lahf
stos
leave
sub
in
cmps
inc
push
out
adc
mov
adc
in
add
jecxz
inc
mov
lods
cld
arpl
ret
or
loop
mov
push
ficomp
ins
inc
jmp
inc
push
retf
xor
test
sub
fist
ds
xchg
jl
push
test
sbb
add
push
dec
ror
pop
jmp
add
mov
fcmovnu
arpl
add
add
cmps
add
adc
cmp
or
nop
cmp
hlt
sub
xchg
add
sbb
cld
in
sub
cmp
dec
pushf
add
pop
scas
cmp
push
jb
lds
aad
or
in
jg
xchg
mov
push
add
jns
jae
mov
fiadd
out
outs
and
fidivr
xchg
jb
pop
adc
nop
push
xchg
cs
shr
stos
xor
lods
minps
push
jb
stc
stc
mov
jecxz
xchg
dec
lahf
mov
ficom
addr16
inc
sbb
shl
pop
sbb
stos
inc
repz
push
push
cmc
jge
clc
adc
out
jae
pop
fmul
stos
je
cdq
fisttp
pop
mov
bound
push
es
xor
jns
sub
add
mov
jecxz
push
push
cmp
mov
cdq
adc
ss
mov
(bad)
xor
fisttp
into
movs
mov
mov
cdq
das
mov
sbb
sti
cli
(bad)
mov
push
xchg
jno
jmp
xor
sti
scas
cmps
lahf
xchg
mov
cmp
dec
jo
dec
fldenv
dec
lods
addr16
imul
sub
jo
mov
ficomp
xor
jg
and
push
outs
int
cmps
and
fidiv
inc
jmp
leave
xchg
add
rcl
movs
mov
aam
out
lods
ror
pop
mov
stc
loop
movups
imul
(bad)
and
inc
mov
push
xchg
cmps
dec
sbb
cmp
push
fwait
inc
push
ficomp
aad
jmp
push
sbb
mov
movs
push
mov
mov
das
mov
arpl
add
pop
in
stc
(bad)
push
je
xchg
shl
dec
das
ins
dec
sub
cmps
int3
ror
imul
data16
sti
fstp
gs
mov
pop
arpl
fwait
sbb
mov
dec
cmp
jg
or
imul
test
(bad)
imul
pop
inc
and
adc
pop
push
sbb
jmp
(bad)
hlt
jbe
push
cmp
neg
leave
push
xchg
xchg
jmp
sbb
jbe
dec
stos
mov
mov
mov
lock
pop
les
sti
clc
and
mov
mov
mov
fisubr
jp
and
arpl
mov
cmc
xchg
movs
jg
jle
push
mov
test
pusha
jmp
out
mov
xor
sbb
dec
idiv
xchg
cdq
out
push
scas
js
push
dec
xchg
aam
es
mov
adc
dec
mul
aaa
inc
xchg
cmps
xchg
cmps
sbb
fdivrp
cs
movs
push
retf
mov
mov
dec
call
cmp
aas
pop
jp
xlat
push
dec
call
xor
inc
and
jmp
and
(bad)
cli
js
adc
outs
sbb
lock
mov
rcr
push
mov
add
(bad)
cmps
pop
iret
mov
xchg
pop
std
fild
cld
or
push
jae
and
popa
jno
fcomp
mov
push
sahf
xor
or
xchg
jae
inc
popa
iret
mov
sub
pushf
out
mov
or
or
jg
rcr
push
stc
jmp
adc
xor
and
iret
mov
push
mov
jp
inc
cmp
dec
dec
add
inc
pop
pusha
jo
push
dec
mov
mov
jmp
(bad)
stos
fild
jg
and
cmps
fs
ficomp
sub
xlat
(bad)
mov
adc
pop
(bad)
mov
sub
push
push
and
mov
push
sub
mov
add
stc
adc
push
imul
and
pxor
ror
and
mov
and
push
adc
add
push
jmp
adc
push
iret
or
sub
popf
cmc
jmp
jmp
cwde
mov
stos
jmp
cld
cmp
mov
ret
mov
and
inc
adc
mov
lahf
inc
jecxz
pop
bound
dec
fisttp
aas
rol
sbb
adc
dec
(bad)
ja
stc
stos
push
ret
pop
lock
sub
add
bound
mov
clc
add
inc
call
stc
(bad)
arpl
cmp
ficom
mov
adc
pop
push
(bad)
icebp
sbb
add
inc
cmps
pop
cmp
out
(bad)
pushf
push
call
retf
pop
(bad)
(bad)
scas
stc
cmp
lahf
hlt
fcomp
sub
shl
fnsave
cmps
stos
in
add
fwait
adc
test
cmp
sar
rol
inc
cmps
mov
mov
(bad)
mov
sub
cmp
jg
movs
int
sub
sub
jp
pop
jbe
int3
sbb
or
inc
rol
pop
mov
faddp
dec
jns
cld
jae
pop
sbb
in
mov
push
adc
cmp
call
jne
es
or
outs
xor
gs
(bad)
ins
jmp
mov
lds
fcmovnbe
xor
jne
cmp
adc
xchg
mov
pop
xchg
(bad)
lods
in
imul
adc
dec
pop
jno
popa
xor
mov
adc
and
cmp
mov
add
add
(bad)
fucompp
aad
fcom
call
mov
popf
call
test
xor
int3
adc
test
push
jno
iret
stc
pop
lds
fstp
fsub
aas
jo
sub
cdq
sub
sbb
push
mov
and
fst
xchg
pop
cmps
push
xchg
test
jb
(bad)
mov
imul
inc
pop
mov
xor
jb
jmp
mov
mov
nop
rcr
aam
(bad)
mov
into
jg
mov
mov
dec
int
sbb
mov
inc
push
outs
leave
cmp
test
sar
fcompp
push
pop
mov
icebp
push
cmps
fldcw
bnd
xlat
cmp
stos
imul
xchg
mov
inc
mov
push
push
stos
jb
add
sub
imul
mov
je
or
mov
jp
lds
mov
mov
cdq
data16
mov
popa
ds
lahf
cmp
and
push
mov
xor
(bad)
inc
mov
pusha
lahf
jns
mov
dec
ins
pushf
add
push
push
mov
xchg
mov
or
popa
mov
cwde
mov
and
imul
js
and
jb
and
in
sbb
addr16
mov
out
int
mov
push
pop
mov
hlt
or
dec
mov
fsubr
es
dec
sbb
inc
das
or
iret
in
cmps
(bad)
jl
arpl
div
ret
mov
xchg
xor
adc
in
fsubr
pop
ss
cdq
nop
and
in
retf
mov
push
in
sub
jge
xchg
sub
pop
sar
push
push
fcomp
xchg
jns
std
call
mov
retf
push
sbb
push
call
rcr
ja
in
dec
pop
leave
popa
(bad)
and
and
movs
sub
lods
shr
mov
retf
in
daa
in
imul
and
pop
sub
arpl
frstor
push
jns
scas
jnp
daa
cmp
fwait
mov
mov
cmps
jecxz
jle
cmp
ret
push
mov
(bad)
movs
mov
jp
mov
dec
daa
xchg
pop
push
test
adc
iret
pop
sub
sbb
xchg
movs
and
call
stos
sti
push
ret
push
fmul
stc
enter
jns
in
mov
mov
test
mov
add
mov
or
adc
arpl
sub
idiv
fwait
out
mov
out
repnz
xchg
sahf
test
mov
pop
mov
scas
fcmove
pop
(bad)
cmps
cs
mov
test
(bad)
cmps
jge
rcr
jo
adc
sar
and
xchg
sbb
mov
mov
outs
jge
aas
pop
lods
in
stos
jp
sub
adc
pop
cli
cli
cmp
stos
jbe
les
retf
dec
inc
pop
das
pop
outs
xchg
and
out
data16
jo
jl
add
cli
lea
int
sub
xchg
push
xchg
lods
neg
jmp
call
cmp
or
push
sar
shl
pop
(bad)
fucom
popa
mov
ins
pop
jmp
es
ror
xor
test
sub
fidivr
inc
mov
cmp
add
or
inc
pop
je
mov
sbb
ss
or
push
in
ror
add
xchg
jmp
pshufw
and
cld
out
mov
js
add
jge
and
pop
fmul
xchg
cmps
inc
mov
pop
or
mov
es
sahf
hlt
add
push
mov
test
ds
jne
pusha
loopne
test
adc
mov
xlat
dec
dec
mov
jg
data16
shl
sbb
je
ret
and
aaa
xor
fdivr
stc
inc
into
data16
cmp
jae
mov
fnstcw
sub
adc
rcl
xor
leave
aam
bound
and
sbb
xor
int3
hlt
xchg
es
cli
or
loope
int
hlt
adc
lea
not
cmps
aas
push
call
inc
rol
into
jb
cmp
and
pusha
push
cmp
jp
ja
push
jle
shl
test
jl
push
xchg
xchg
cmp
xchg
adc
xor
adc
pop
sbb
daa
mov
dec
pop
push
jmp
outs
aad
bound
and
out
fld
xchg
outs
cmps
and
daa
(bad)
movs
out
outs
cmc
lds
and
loopne
and
jb
das
cld
inc
inc
(bad)
test
cmps
push
cmp
push
sub
jl
adc
aas
in
sub
mov
test
xor
push
adc
push
rcr
xlat
aad
cmp
nop
sub
or
mov
cmps
pusha
mov
pop
test
jle
neg
retf
mov
and
mov
xchg
dec
mov
cs
shr
dec
adc
shl
sti
cli
sub
loope
adc
jne
sbb
loop
jae
mov
int
cmp
sub
lds
pop
mov
cli
ror
adc
imul
les
xor
pop
sti
push
mov
sub
pop
rcl
jle
ret
dec
lods
ret
jmp
inc
inc
xchg
pop
test
das
mov
add
jmp
and
pop
and
popa
sbb
mov
jmp
retf
jp
xor
cdq
in
add
icebp
sub
mov
sti
jp
loop
dec
cmp
cmp
push
js
out
in
jecxz
ret
add
dec
ins
jo
pop
or
jmp
(bad)
fs
and
daa
enter
rol
mov
ds
out
jne
xor
jae
xchg
push
daa
or
push
sub
ds
shl
pop
popa
nop
or
sar
ja
cld
jno
add
fwait
lds
push
fidiv
das
xchg
jg
dec
sar
pop
pop
adc
push
or
in
ror
adc
or
jo
adc
push
pop
push
call
(bad)
sbb
aam
xor
jmp
sbb
xchg
test
add
in
sub
push
test
cli
cmp
mov
fcom
adc
jmp
push
pushw
aad
and
xchg
idiv
ja
cmp
adc
dec
out
and
sub
ss
(bad)
cmp
mov
xor
jnp
push
in
jge
arpl
adc
and
xor
test
sbb
mov
push
add
loopne
push
xchg
push
pop
mov
inc
dec
icebp
jns
and
mov
cmp
push
or
mov
movs
hlt
das
sar
pop
mov
retf
mov
adc
in
inc
outs
iret
call
and
fucom
mov
mov
jl
jne
push
stc
xor
cdq
mov
xchg
arpl
fs
add
xchg
xor
push
sbb
add
cld
pop
add
pop
xor
sahf
int3
sbb
std
and
add
jo
dec
bound
push
enter
out
or
sub
sbb
mov
bound
cmovne
push
sub
pop
icebp
xchg
push
dec
out
xchg
pop
push
aam
lahf
out
pusha
iret
mov
xor
pop
adc
push
push
and
stos
or
dec
xchg
shr
test
xchg
add
aam
inc
mov
aad
test
ja
inc
stos
dec
xor
add
dec
and
clc
pop
and
xchg
shr
(bad)
cmps
xchg
repz
rcl
sbb
ja
xchg
mov
xchg
or
jg
and
jo
gs
cwde
mov
call
dec
inc
mov
imul
shl
mov
sub
adc
fsubr
out
test
xor
mov
rcl
dec
dec
push
fnstcw
dec
xor
cmps
xor
shl
retf
mov
push
lock
mov
sti
xchg
mov
jle
mov
push
fild
aam
mov
imul
pop
sub
lock
ret
inc
add
stos
adc
int
fidivr
mov
loope
xlat
xor
icebp
shl
sbb
cmps
cmp
arpl
sub
aaa
clc
add
bswap
cmp
loop
(bad)
adc
outs
jae
jmp
mov
retf
push
push
or
mov
sqrtps
cmp
mov
jl
repz
pop
dec
imul
ss
add
loop
outs
div
xchg
shr
add
(bad)
imul
jmp
sbb
xor
fisub
into
jge
imul
imul
icebp
xchg
leave
sbb
cmp
mov
js
sti
out
stos
dec
mov
xor
sub
shl
cmp
aaa
sub
call
jns
shr
xor
std
in
mov
push
push
mov
lahf
(bad)
cmp
mov
repnz
sub
js
in
mov
mov
ja
mov
xchg
xadd
test
retf
fisub
inc
pop
push
push
ja
movs
retf
int
xchg
jmp
push
or
cmp
adc
adc
adc
fs
mov
sahf
xor
push
out
sbb
push
loop
out
push
cmps
push
arpl
add
xor
sub
adc
dec
or
adc
cmps
add
ja
and
mov
mov
repz
fcomp
jo
sub
imul
cmps
out
jl
call
sbb
cmp
mov
sub
icebp
cs
inc
popa
pusha
add
enter
out
jmp
int
mov
pop
rcr
and
es
xchg
pop
xlat
add
dec
cmp
sti
call
repz
cmps
mov
data16
es
fisttp
jg
mov
ds
stos
dec
jmp
fcmovb
movs
mov
ins
pop
or
pop
and
xor
mov
fcom
jnp
sbb
cli
fcomi
inc
jge
repz
popa
jnp
stos
or
rcr
lahf
push
jns
ror
cmp
pop
pop
test
push
cmp
sbb
xchg
xchg
into
fwait
aaa
dec
cwde
adc
adc
push
pop
int
popf
ror
pop
or
fidiv
push
fs
movs
inc
jp
cmp
rcl
adc
mov
pop
xlat
mov
fwait
sub
dec
sbb
ja
mov
sbb
push
inc
push
neg
jnp
mov
(bad)
ins
xchg
ret
retf
and
mov
nop
dec
xchg
fnstenv
es
into
fwait
cmp
loop
and
pop
mov
sub
stos
mov
mov
push
xchg
pop
or
xchg
ins
call
mov
rcl
imul
retf
(bad)
pop
pop
dec
stos
mov
jmp
lods
out
xchg
loop
xor
cmp
push
(bad)
sbb
cmp
adc
(bad)
scas
cmps
bound
scas
xor
adc
mov
fcomp
ret
pusha
ss
sub
out
fnsave
cdq
xchg
jmp
jo
in
mov
ss
(bad)
inc
ss
mov
fnstsw
adc
sar
inc
add
push
fild
in
pop
mov
jno
jo
sub
outs
pop
sbb
mov
push
ret
ds
xadd
push
dec
dec
repnz
mov
loop
cdq
rol
mov
or
in
ds
xor
sub
pop
enter
fisubr
fcmove
dec
mov
mov
or
rol
sub
ret
mov
mov
adc
cmp
push
pop
cmp
(bad)
mov
or
dec
xchg
call
call
shr
dec
es
inc
sub
sub
jmp
cs
(bad)
hlt
push
dec
inc
push
sbb
mul
mov
jmp
push
hlt
inc
xor
je
xor
inc
sbb
adc
std
es
and
fnstsw
(bad)
aam
xchg
mov
cld
in
(bad)
leave
ret
cmp
inc
fistp
mov
add
mov
in
ins
xor
(bad)
cmc
(bad)
retf
cdq
stos
inc
pop
and
jns
les
xchg
loopne
adc
pop
test
xor
ja
aad
xchg
ss
fistp
mov
shr
mov
movs
add
ins
or
inc
sub
ret
and
cmp
push
js
dec
inc
shl
pop
bound
std
xor
and
clc
dec
ja
cmp
pop
aad
mov
jno
movs
mov
outs
iret
clc
add
inc
fstp
inc
mov
and
sti
stc
imul
jo
loop
lock
push
cmp
mov
out
inc
movs
sbb
jne
jmp
jne
div
inc
dec
jp
mov
mov
aam
lods
push
ss
pop
sub
ret
mov
sub
jno
movs
and
inc
repnz
mov
fdivr
mov
lahf
call
add
push
rcl
jo
test
dec
sti
pop
out
inc
mov
into
ret
sahf
sbb
ret
push
xchg
rdmsr
dec
lods
inc
arpl
sbb
sub
out
pop
adc
mov
adc
and
jmp
sbb
dec
mov
icebp
retf
fisttp
jb
mov
cmp
or
daa
jae
adc
cmp
inc
pop
sub
push
xor
inc
sti
mov
ret
or
adc
aas
je
fnstenv
xor
jae
mov
sub
stos
pushf
movs
aas
pop
and
test
lahf
xchg
fisttp
int
(bad)
(bad)
shl
daa
pop
cmc
in
lods
jmp
sbb
jns
jne
leave
or
mov
jbe
aad
popf
push
aam
mov
cmp
loope
leave
mov
xor
sub
sub
adc
pusha
or
adc
cwde
mov
shl
push
(bad)
push
rcr
rcl
ja
xor
jno
fcomp
mov
sti
xor
lock
jne
and
sbb
stos
jmp
cmp
sahf
sbb
fbstp
aad
hlt
(bad)
scas
imul
imul
rcl
jo
shl
(bad)
pop
call
sbb
mov
sub
mov
mov
sub
mov
xchg
inc
xchg
sub
fnstcw
pop
pop
in
into
cmp
fisub
xor
movs
imul
push
cmp
es
retf
mov
cli
arpl
inc
jbe
mov
and
das
sbb
inc
in
(bad)
ret
fwait
cmp
adc
and
push
out
pusha
shl
jbe
adc
out
mov
adc
std
cdq
lea
pop
lahf
sbb
pop
adc
dec
inc
jecxz
daa
nop
jmp
push
or
clc
addr16
repz
clc
push
leave
retf
ror
scas
jl
iret
cmp
retf
push
xchg
jo
add
pusha
sahf
sub
jno
arpl
sub
push
lds
stc
scas
ror
adc
test
or
sbb
aad
jmp
call
mov
int
(bad)
stos
pop
ret
xor
add
adc
mov
xchg
retf
cmp
sbb
int3
cmp
dec
mov
rcr
dec
or
cli
dec
call
pushf
dec
or
cdq
xchg
idiv
jbe
or
js
into
das
std
mov
aaa
or
int3
scas
(bad)
(bad)
xor
mov
mov
or
dec
je
sub
aad
mov
lods
and
lock
push
cmp
(bad)
fwait
inc
or
pop
jno
xor
movs
add
mov
leave
(bad)
rcr
mov
aas
xor
mov
cwde
mov
dec
enter
imul
(bad)
mov
push
iret
pop
push
inc
sub
xor
add
dec
sbb
lods
cmp
iret
pushf
jne
lods
cmp
hlt
scas
and
call
lock
js
add
aaa
xchg
fidiv
clc
popf
adc
adc
sbb
cmp
jp
jmp
ins
repz
push
xchg
das
mov
inc
cmps
cmps
bound
int3
repnz
and
fcmovnu
mov
mov
xchg
in
and
cmp
mov
nop
dec
dec
test
out
mov
push
and
sar
sahf
in
mov
sub
inc
inc
inc
xor
mov
mov
leave
xchg
dec
iret
das
stos
in
in
daa
mov
scas
outs
sub
sbb
lea
xchg
fstp
stc
mov
bswap
arpl
loope
or
(bad)
popf
inc
mov
xchg
push
lds
out
mov
pop
dec
into
fbstp
ror
stos
jbe
into
test
hlt
inc
aaa
loop
div
icebp
pop
retf
jb
jns
dec
push
nop
int
outs
inc
scas
jle
push
stos
dec
add
adc
push
ret
dec
mov
push
jbe
je
clc
arpl
(bad)
inc
sti
inc
jg
adc
mov
mov
mov
jb
pop
add
popf
popa
mov
outs
gs
jecxz
adc
cmp
push
shl
rol
inc
shr
aaa
xor
sub
mov
movs
mov
mov
jb
dec
in
test
sub
mov
lock
add
xor
mov
xchg
rol
shr
add
push
jbe
fwait
mov
int3
dec
xlat
cmc
and
cmp
stc
movs
ror
(bad)
test
mov
out
mov
mov
push
pop
lods
js
or
dec
mov
xchg
dec
out
pusha
out
pop
ret
mov
stc
add
jbe
mov
mov
loop
rol
pusha
in
ins
inc
adc
retf
es
pop
aaa
sub
out
cmp
pop
lock
out
push
mov
mov
jge
in
dec
cmp
out
sub
movs
dec
add
pusha
sbb
ret
out
mov
and
leave
cmp
cmp
cdq
mov
xchg
popf
gs
clc
jo
lock
mov
dec
aad
out
sbb
and
and
inc
retf
shl
pop
xor
push
ret
popa
xchg
ins
inc
repz
(bad)
lods
pop
fadd
cdq
imul
fwait
adc
push
pop
adc
retf
xor
popa
mov
mov
mov
pop
out
std
pop
jmp
mov
out
popa
pop
jmp
in
js
mov
fcomp
arpl
add
or
mov
(bad)
xchg
(bad)
mov
push
xor
cdq
iret
jmp
test
xor
dec
retf
cmp
and
mov
ins
in
xchg
out
add
pop
xor
xor
test
loop
imul
popf
in
arpl
jmp
sbb
jnp
mov
pop
cli
mov
stc
dec
and
pop
pop
xchg
inc
and
or
jecxz
xor
(bad)
xchg
enter
nop
cmp
stos
ins
adc
cmp
fstp
cmp
cli
xlat
mov
inc
mov
and
jb
cld
call
dec
cmps
and
scas
adc
out
js
push
cmp
test
into
cmp
pop
ins
or
jno
and
or
inc
mov
add
es
mov
ins
xchg
fistp
jne
mov
leave
mov
aas
stc
and
add
mov
mov
inc
mov
cmps
inc
dec
jns
test
pop
jno
shr
ror
xor
or
xrelease
int
sbb
dec
hlt
inc
jmp
adc
lods
dec
pop
mov
mov
ret
mov
xchg
sub
lahf
sub
repnz
push
push
(bad)
mul
jg
aas
xor
sbb
xor
cmps
adc
fisub
mov
(bad)
mov
inc
mov
push
push
cmps
sub
add
jl
sub
ficom
inc
jae
in
and
or
dec
pop
rol
or
sub
cmp
loop
in
xchg
xor
pushf
adc
gs
push
push
cmps
and
push
in
cs
call
sbb
adc
fild
pop
jg
out
mov
test
or
(bad)
retf
push
lods
aas
repz
jle
ja
mov
jo
(bad)
lock
enter
sub
xchg
sahf
xchg
fldcw
idiv
repz
es
inc
sbb
and
mov
movs
and
add
test
jmp
sbb
or
cmps
pop
push
retf
leave
and
mov
add
adc
dec
inc
or
ins
jle
int
lods
std
(bad)
pusha
std
es
or
push
out
loop
div
mov
pop
push
xor
jb
repz
outs
mov
repnz
std
pop
popa
sbb
sub
nop
adc
popa
xchg
leave
push
add
fist
(bad)
imul
test
repz
jecxz
das
mov
fmul
jnp
or
jle
xchg
adc
nop
mov
inc
stos
inc
add
dec
cdq
xchg
add
mov
mov
and
sbb
sub
lds
ret
and
xchg
pop
jns
call
cld
sbb
and
push
jp
retf
push
js
dec
or
lock
pop
xchg
ror
jo
mov
hlt
mov
or
inc
icebp
or
and
push
(bad)
hlt
repz
test
push
sbb
daa
inc
idiv
push
and
sahf
ret
js
cdq
call
xchg
sub
and
pop
sub
mov
sub
bnd
out
jp
xchg
xchg
jg
dec
pushf
inc
and
loopne
dec
xchg
in
and
push
jo
ret
gs
sub
in
pop
push
add
and
sbb
loopne
pop
xor
cs
loope
cld
aad
lea
jmp
jo
imul
inc
imul
lods
test
cs
aaa
or
mov
mov
gs
sbb
enter
add
mov
jmp
or
pop
dec
fnstsw
xor
sbb
fisttp
inc
sub
fcom
(bad)
xor
pop
repz
jne
push
push
xor
push
shl
mov
adc
jl
dec
add
fstp
out
daa
or
mov
mov
gs
fist
sub
mov
jl
ss
fidiv
rol
imul
stos
push
or
dec
(bad)
test
xchg
xchg
nop
sbb
mov
ds
mov
repz
fisttp
cs
jo
xor
imul
lds
and
sbb
out
mov
or
ds
push
icebp
jmp
fist
mov
inc
add
add
icebp
add
addr16
(bad)
or
or
dec
shl
mov
shl
ins
pop
popa
(bad)
arpl
cmc
cmp
jge
in
xchg
icebp
retf
jecxz
(bad)
jo
push
or
fcom
sbb
or
push
lods
push
cli
sbb
test
bnd
mov
arpl
jo
test
fiadd
paddw
in
rcl
stc
jns
ins
inc
aad
pop
dec
dec
int
sbb
cmp
jecxz
add
fwait
push
sbb
jne
mov
xor
popa
cmp
jmp
pop
dec
add
or
dec
stos
mov
fcom
popf
mov
sub
inc
fs
jmp
shr
inc
xchg
mov
pusha
mov
sbb
jecxz
lods
mov
test
add
mov
leave
ret
mov
cmps
mov
leave
popf
adc
add
hlt
push
popf
sbb
(bad)
and
loop
adc
push
leave
xchg
pop
mov
jecxz
je
mov
aas
(bad)
jecxz
loope
xchg
xchg
mov
jl
mov
mov
loope
aas
call
pop
loopne
xor
call
and
mov
jmp
or
fstp
xchg
jo
mov
inc
inc
fnsave
movs
and
add
and
push
and
data16
test
adc
mov
jmp
into
fwait
stos
in
sbb
retw
or
loopne
push
pop
cmp
mov
imul
adc
fwait
int3
adc
jno
ficom
movs
or
push
sahf
pop
mov
cmp
push
out
xor
lock
mov
(bad)
stos
scas
les
or
shr
jge
mov
sub
(bad)
fsub
jl
sub
outs
adc
lods
in
push
pusha
fist
aam
inc
cmps
push
mov
je
mov
jae
and
adc
(bad)
sbb
mov
pop
out
adc
cmovle
sbb
push
dec
add
imul
jg
aad
retf
fisttp
cmps
dec
mov
xor
cmp
cs
adc
adc
daa
jl
dec
call
shr
cmps
sub
push
push
ss
xor
repz
jp
add
mov
push
shr
out
sbb
rol
pop
(bad)
or
or
aad
out
lds
cmps
push
sub
or
xchg
in
div
xlat
sub
xchg
in
push
mov
aaa
fstp
mov
(bad)
sbb
ds
or
es
mov
xlat
ret
push
pop
mov
imul
pop
retf
xchg
pop
push
clc
cli
call
shr
rcl
loope
pop
push
dec
movs
scas
sbb
test
mov
mov
aad
adc
sub
mov
push
jae
push
repz
fild
aam
out
or
test
frstor
xor
push
sub
inc
xor
cmp
(bad)
sahf
inc
jl
dec
adc
rol
jg
mov
aas
add
add
add
rol
in
pop
pop
pop
mov
arpl
mov
rol
loope
jge
sahf
loopne
(bad)
sub
cwde
ja
pusha
retf
mov
fisttp
pop
xor
mov
mov
fstp
mov
xchg
jne
fmul
push
(bad)
push
mov
in
xor
pop
add
mov
dec
push
mov
in
pop
int3
jbe
sahf
ffreep
call
jo
pop
jle
sbb
ret
xlat
jle
stc
push
adc
out
and
hlt
les
idiv
nop
mov
das
(bad)
and
aaa
mov
dec
(bad)
inc
nop
int
outs
inc
imul
shl
push
xchg
loope
push
call
jp
xchg
sub
mov
inc
push
dec
mov
(bad)
jl
mov
dec
test
cmp
xor
push
mov
jnp
xlat
jg
scas
push
shl
mov
ds
xor
sub
jne
push
push
adc
jb
and
add
xchg
sti
adc
jns
mov
inc
push
jae
test
mov
push
sar
jne
daa
call
call
(bad)
jb
aam
retf
add
push
leave
mov
in
out
sub
dec
sub
mov
pop
pop
push
fcmovb
mov
inc
mov
or
lods
or
dec
xor
jecxz
jl
mov
sub
cli
ins
xchg
jle
imul
sub
gs
lods
iret
mov
bound
pop
push
mov
inc
push
inc
arpl
jmp
sti
(bad)
cli
and
xchg
(bad)
aaa
out
lods
cmp
pop
gs
(bad)
or
rcl
test
xor
rol
stc
push
cmp
cmp
clc
mov
aaa
lods
pusha
push
lds
je
nop
pop
shr
inc
mov
xor
jbe
retf
sub
ds
pop
mov
pop
sub
fwait
jo
sbb
pop
or
call
or
(bad)
xlat
retf
dec
not
xchg
mov
nop
mov
push
(bad)
add
cld
leave
cli
stc
push
leave
inc
test
sbb
data16
loope
out
push
dec
cmp
lods
sub
jo
int3
test
add
(bad)
dec
dec
imul
sbb
loope
retf
mov
pop
icebp
(bad)
lock
adc
xor
repz
(bad)
mov
sub
mov
call
sbb
in
pop
rcr
xor
xchg
cmp
js
adc
(bad)
test
xchg
test
(bad)
mov
mov
mov
pop
xchg
mov
mov
pop
test
add
lock
loope
add
jae
xchg
test
int
add
stos
icebp
mov
jns
xchg
mov
sub
mov
loop
and
pusha
mov
(bad)
dec
push
in
add
mov
bound
cmp
mov
and
repz
jmp
jae
cs
cmp
cld
sbb
scas
dec
cmp
pop
sub
and
aam
xchg
add
iret
adc
jb
jbe
push
or
lahf
lds
fwait
add
retf
repnz
xchg
stos
push
data16
fwait
in
scas
jae
jo
hlt
push
in
repnz
dec
aaa
mov
test
push
call
mov
mov
mov
test
push
mov
mov
jnp
push
inc
out
adc
cwde
add
mov
push
mov
mov
xchg
dec
jb
jg
(bad)
cmp
inc
bound
std
repnz
je
cmp
sbb
in
push
mov
dec
hlt
scas
sub
pop
mov
mov
mov
jecxz
or
movs
push
jns
jl
xor
scas
js
es
dec
inc
xchg
call
lea
in
jl
fdivr
icebp
pop
mov
add
xor
jge
(bad)
scas
jae
or
jge
loop
ficomp
retf
jae
jns
inc
loopne
test
cli
jg
stos
pop
mov
enter
push
repz
cmc
inc
ficom
in
lods
xor
fwait
call
xor
icebp
(bad)
in
push
adc
add
or
push
push
add
fsub
dec
fdiv
jbe
out
mov
or
popf
cmc
jp
sbb
icebp
xchg
xchg
cmp
test
push
mov
cmp
pop
lds
mov
cld
dec
cmp
sub
les
(bad)
pop
arpl
push
(bad)
xor
inc
pop
and
or
sub
push
mov
mov
sbb
sti
push
inc
sahf
enter
mov
dec
xor
adc
mov
mov
or
push
cmp
scas
xchg
iret
inc
add
lods
pcmpeqb
sub
sahf
xchg
sub
shr
mov
arpl
int
daa
repnz
jb
ret
jle
inc
lods
imul
xchg
movs
push
lods
or
or
sbb
jno
xchg
imul
mov
fdiv
shl
in
retf
add
fidiv
(bad)
mov
and
cwde
mov
jmp
pop
mov
xchg
sub
ins
inc
xchg
iret
pop
mov
pop
pop
inc
dec
(bad)
ret
arpl
dec
mov
shr
jl
and
(bad)
addr16
jne
bound
enter
cmp
or
inc
xchg
pop
push
jecxz
js
(bad)
in
ret
inc
mov
add
xchg
ds
adc
sbb
bound
adc
dec
jo
mov
iret
jne
arpl
psadbw
adc
pop
cwde
push
aas
push
pop
fmul
cmp
dec
out
in
jbe
or
add
psrld
cmps
inc
push
ds
cli
pop
dec
xor
jmp
dec
mov
sub
dec
and
je
fcom
fsubr
dec
push
popa
jmp
dec
cmps
xbegin
cwde
dec
cmp
test
xchg
enter
xchg
fild
and
imul
lock
cmc
and
test
cdq
xor
lea
mov
ins
repz
add
mov
cmp
out
or
or
mov
inc
call
sub
into
sub
mov
in
cmp
ss
push
push
mov
mov
hlt
and
add
xor
add
mov
xchg
mov
movs
xor
mov
xchg
and
pop
loope
idiv
les
sbb
adc
ror
bound
test
call
call
push
adc
cmps
ins
push
sub
cmc
inc
fwait
ins
jmp
ret
jo
gs
mov
add
inc
call
or
arpl
and
dec
dec
addr16
movs
cmp
mov
jb
popa
mul
sbb
sub
mov
aam
cmc
xchg
sub
xlat
mov
mov
jno
aas
xchg
popa
xor
fwait
sbb
push
imul
in
mov
ja
push
retf
mov
xchg
out
xor
fisubr
in
xor
stos
test
lahf
jg
in
pop
dec
out
xchg
pusha
pop
cdq
jae
adc
cmp
sbb
fadd
pop
xor
sub
pop
sub
push
loop
(bad)
rcr
js
test
imul
xchg
iret
rol
xlat
aam
out
clc
pop
dec
mov
add
cld
mov
test
or
pop
pop
mov
out
pop
aaa
lock
xor
mov
cli
in
rdmsr
lods
dec
ret
inc
bswap
imul
in
inc
test
and
sbb
adc
dec
cmc
jecxz
iret
mov
xor
inc
fcmovnbe
xor
and
cmp
aaa
ds
jge
mov
pushf
test
xlat
sbb
lds
loope
leave
(bad)
jmp
cmp
fs
aam
xor
mov
adc
push
pop
(bad)
push
sub
push
call
movs
les
jne
jbe
cmp
sbb
(bad)
pop
add
icebp
rol
shr
repz
stc
lds
sbb
adc
test
and
movs
adc
arpl
xchg
mov
movs
(bad)
push
dec
enter
stos
(bad)
jnp
call
add
sub
add
add
adc
cmp
mov
cli
mov
sub
jae
scas
push
stc
sub
les
sbb
sbb
lods
cmc
fisubr
mov
and
and
in
xor
retf
and
pop
add
dec
mov
popf
and
mov
xchg
das
test
in
lahf
fimul
inc
pop
cdq
rcl
imul
add
call
push
fiadd
shl
aam
xor
xor
add
(bad)
mov
shl
cdq
xor
sub
idiv
and
cmp
mov
movs
imul
outs
xor
or
mov
mov
stos
xor
stos
ficom
lock
jle
cmp
or
jl
jne
adc
loope
mov
pop
jg
push
cmp
nop
jnp
pop
cmp
retf
xchg
mov
add
ins
es
test
pop
cld
les
ret
jo
(bad)
mov
jge
aaa
adc
jp
fild
fdivr
inc
push
in
mov
or
or
mov
fdivp
leave
adc
scas
sub
xchg
call
fwait
push
or
hlt
jbe
push
pop
push
mov
popa
jp
sub
mov
popa
dec
adc
aas
xchg
stos
popf
test
mov
cs
fiadd
or
push
xor
mov
(bad)
xchg
retf
jno
adc
ror
jle
stos
fwait
adc
mov
jle
adc
fmul
addr16
mov
je
mov
inc
and
jl
push
gs
or
je
xchg
dec
sbb
add
call
icebp
rcl
(bad)
in
inc
add
mov
push
inc
fwait
test
aas
sahf
mov
mov
sbb
repz
out
in
sbb
sbb
sar
or
and
(bad)
int
loop
mov
pop
mov
out
int3
cs
xchg
mov
and
sti
(bad)
push
or
sti
pop
icebp
imul
test
cmp
lahf
cdq
push
mov
ret
nop
mov
and
and
retf
shl
test
or
cmps
push
call
or
xchg
mov
fnstcw
jo
jbe
(bad)
dec
cmps
and
int
cmp
inc
retf
out
or
movs
ret
add
out
stos
sar
push
jge
push
shl
adc
push
jmp
movs
dec
sbb
push
xchg
push
xor
lds
jnp
sub
inc
inc
jo
cdq
dec
push
jbe
fnstenv
cmp
sbb
inc
sbb
sub
xchg
and
dec
lods
inc
loope
inc
mov
movs
jns
leave
xor
fadd
je
pop
data16
enter
jns
mov
dec
jno
out
mov
scas
adc
sub
pop
fistp
icebp
icebp
mov
leave
ficomp
les
sub
xchg
xchg
jmp
lahf
fistp
pop
cwde
mov
jb
imul
inc
ret
push
mov
scas
and
imul
sub
int
int
mov
cmp
daa
and
ss
mov
out
sbb
adc
add
cwde
mov
cmp
aaa
mov
xor
pop
repnz
sub
lock
(bad)
pop
inc
out
inc
repz
out
mov
out
jne
fnstcw
aaa
adc
adc
inc
mov
in
mov
pop
mov
or
je
mov
inc
adc
ds
add
dec
add
mov
jae
loop
adc
ja
(bad)
xor
mov
leave
pop
inc
sbb
mov
(bad)
scas
retf
mov
pop
dec
sbb
fistp
inc
sbb
mov
push
xor
out
or
xchg
push
(bad)
out
rol
and
push
cmp
ds
fcomp
cmc
dec
sub
mov
mov
in
dec
mov
add
loop
pop
ret
out
nop
sub
or
xor
cli
adc
retf
push
outs
movzx
jnp
js
dec
ret
fnstcw
cwde
arpl
cmps
sar
cmp
fisubr
push
sub
push
aad
jge
outs
lods
in
outs
fidiv
in
dec
xchg
mov
add
lea
pop
(bad)
aas
in
arpl
pushf
outs
fcmove
pop
adc
loope
and
xchg
jo
fwait
mov
out
les
pop
add
ins
jae
pop
or
imul
inc
xor
pop
rcr
inc
sub
imul
bound
test
cdq
fild
aad
out
inc
sahf
in
bnd
pop
(bad)
fist
push
or
mov
adc
pop
xchg
inc
call
fcomp
cmp
bound
cs
pop
and
jmp
rcl
or
test
movs
jmp
aas
xor
xor
mov
adc
push
mov
fidivr
popa
cmp
xchg
leave
mov
retf
rcr
pop
(bad)
mov
mov
int3
xchg
dec
aad
scas
movs
fmul
mov
int3
ret
lahf
adc
cmp
jns
cmp
scas
dec
pop
out
xor
mov
mov
lock
scas
adc
hlt
and
mov
fild
cmp
repnz
jg
cmps
mov
in
add
xchg
fimul
ja
and
(bad)
adc
shl
pop
xor
inc
dec
mov
jne
test
ja
addr16
dec
dec
jnp
mov
mov
xchg
leave
in
sub
popf
inc
inc
inc
mov
sti
out
push
xor
jmp
sub
dec
stos
jl
ror
pop
neg
rcr
mov
pop
mov
xor
mul
ins
mov
(bad)
jge
test
jg
jb
jge
push
inc
ret
aad
jnp
ins
push
adc
js
add
sbb
mov
push
sahf
lahf
sub
add
fdiv
and
add
lahf
adc
mov
fstp
sti
iret
push
inc
scas
adc
sub
retf
cmp
adc
mov
hlt
loope
mov
test
pop
mov
fs
nop
push
cwde
jmp
lods
pusha
popa
jno
mov
pop
mov
in
inc
cmp
imul
ret
call
test
clts
cdq
cmp
jle
js
adc
stos
sub
in
xchg
(bad)
jg
retf
push
add
sbb
xchg
test
xor
mov
inc
or
or
sub
jg
cdq
pusha
mov
test
xor
sub
bound
push
leave
push
xchg
xchg
out
mov
repnz
popf
mov
push
repnz
int3
and
mov
mov
cmpps
movs
in
jne
retf
mov
out
sub
ret
bound
daa
jb
and
cdq
out
js
mov
pop
jmp
dec
movs
fldcw
jne
or
jns
ins
repz
adc
call
iret
mov
push
push
mov
clc
stos
fldcw
adc
retf
fimul
daa
push
sub
clc
jnp
ds
xchg
call
fiadd
loop
mov
ret
in
call
push
inc
iret
or
add
stc
push
stos
mov
in
adc
pusha
adc
mov
aas
ret
nop
enter
push
not
jmp
aas
push
jbe
xchg
mov
xchg
add
mov
stos
out
ins
bound
jae
clc
(bad)
(bad)
in
or
daa
fst
cmps
add
ja
mov
or
mov
pop
ja
inc
stos
sbb
lods
mov
pushf
push
mov
push
loop
div
push
or
rcl
xor
mov
pusha
cmp
(bad)
adc
test
(bad)
aad
push
push
adc
cdq
jmp
inc
stos
clc
mov
pop
int3
dec
jmp
test
stos
and
pop
sbb
sub
jmp
arpl
out
dec
pushf
jecxz
inc
push
daa
mov
cmps
loopne
fimul
cmp
gs
test
idiv
sbb
in
mov
bnd
call
push
leave
ds
xchg
and
cli
sub
jb
ds
inc
cmp
call
sbb
mov
cmp
mov
addr16
outs
dec
leave
jecxz
push
scas
adc
add
adc
leave
xchg
adc
lods
movs
dec
fcom
and
loop
(bad)
lock
daa
fwait
jnp
iret
hlt
(bad)
fist
pop
ss
test
pop
cmp
and
retf
ins
dec
daa
(bad)
cmc
loop
adc
imul
add
ja
int
pusha
test
clc
cmps
arpl
mov
mov
xchg
rcl
or
and
in
int3
cmps
test
push
lahf
pop
push
sar
out
add
pop
pop
mov
aaa
cmc
or
fsubr
sub
dec
inc
push
movs
movs
cmc
adc
add
fcom
add
fucomip
js
test
ja
call
push
psllq
fldcw
ds
mov
push
repz
add
fisub
mov
add
jp
pop
bound
ret
cmc
(bad)
movs
push
rcl
sbb
call
test
xor
ds
sahf
inc
mov
inc
sub
jl
in
and
jo
xchg
and
jb
ss
popf
adc
fwait
jge
pushf
nop
add
jecxz
push
addr16
les
test
cmps
mov
mov
sbb
sub
jbe
rcr
xchg
and
pop
fstp
mov
test
add
cmps
pop
das
jne
ret
cmp
ret
fsubrp
fimul
and
out
leave
shl
icebp
mov
aaa
js
rol
stos
xor
xchg
mov
mov
cmps
xor
xlat
fsubr
ret
hlt
movs
cli
fcom
js
cdq
iret
hlt
bound
and
xor
mov
shr
cmp
jle
or
inc
cdq
and
xchg
pop
out
xchg
mov
xchg
mov
test
lahf
adc
ret
fcom
jns
ret
mov
ds
idiv
inc
push
sbb
sti
push
jmp
ret
ja
sub
inc
pop
inc
push
dec
outs
loope
xchg
stc
sbb
mov
mov
es
scas
fistp
cmp
mov
js
std
dec
dec
mov
in
call
rol
ja
xchg
and
cmp
aad
cdq
arpl
loop
dec
and
ror
xor
cmp
retf
mov
pop
in
int3
inc
rcl
push
inc
xor
dec
inc
xlat
iret
data16
cmp
nop
pop
fadd
in
jo
fist
bnd
xor
jl
xchg
add
enter
iret
ins
jg
ret
cmc
stc
push
retf
or
jge
ja
cld
popa
xlat
sbb
cli
or
das
sbb
push
outs
call
test
or
mov
push
fistp
mov
nop
ret
clc
pop
jae
pop
adc
test
xchg
fwait
retf
xchg
mov
mov
jbe
(bad)
cmp
mov
mov
sub
mov
fs
pop
lahf
shl
popf
adc
sub
in
jae
sub
or
xchg
adc
jl
lahf
inc
inc
ror
pop
test
adc
cmp
and
mov
sbb
xor
xchg
clc
in
jae
mov
mov
push
mov
lods
mov
das
stos
jecxz
in
push
adc
out
les
cmp
sbb
ins
inc
out
mov
xor
mov
scas
call
bound
hlt
xor
dec
cmps
adc
retf
xchg
jg
mov
xchg
xchg
stos
xor
sub
sub
dec
ins
cmp
pushf
dec
lods
imul
jb
adc
in
ins
xchg
push
xchg
aad
out
push
aad
fmul
mov
xchg
in
scas
adc
mov
test
mov
inc
push
repnz
jns
jno
ror
imul
les
xchg
xchg
mov
in
and
pusha
mov
loopne
mov
adc
retf
sbb
adc
pop
push
and
adc
or
fwait
repz
xchg
adc
xchg
xchg
pop
sub
gs
pop
cmps
scas
xor
mov
add
out
mov
cmps
das
push
scas
pop
jmp
jnp
jno
add
xor
mov
push
mov
inc
aas
movs
inc
or
sub
adc
repz
jnp
cmp
cwde
push
stc
cdq
sub
and
call
jecxz
xor
dec
fsub
popa
jb
sti
sbb
cli
imul
call
daa
adc
sub
mov
pop
int
push
(bad)
fsubr
je
sub
enter
sbb
pop
test
add
push
test
mov
into
add
cmc
hlt
ja
(bad)
cmps
sub
outs
shr
or
and
cmp
(bad)
cmp
inc
dec
out
popf
xchg
ds
out
in
test
mov
ret
clc
mov
cmp
icebp
outs
js
push
jnp
jne
aam
outs
out
push
mov
out
dec
fs
add
add
jns
jmp
mov
(bad)
imul
fs
js
sbb
pusha
xlat
(bad)
clc
lock
xchg
xchg
in
sahf
ss
push
jecxz
leave
hlt
(bad)
repnz
aas
jnp
lea
push
inc
outs
cld
xor
or
push
xchg
imul
cmc
mov
xchg
and
out
or
mov
rcr
fwait
adc
adc
jb
movs
xor
mov
int
bound
adc
cmp
push
iret
sbb
sub
or
gs
mov
clc
pop
(bad)
mov
repz
jno
mov
neg
inc
jmp
out
sbb
das
mov
adc
(bad)
jmp
dec
push
in
ins
jae
imul
bound
or
or
cli
rcl
dec
scas
sbb
xchg
loopne
enter
aad
lds
push
out
sti
test
ret
pushf
fistp
cmp
arpl
inc
adc
push
ss
jmp
add
call
xchg
dec
ror
jbe
pusha
mov
fmul
ficomp
adc
lahf
or
xor
mov
les
cmp
mov
(bad)
icebp
xor
sbb
pusha
sar
xchg
xor
sahf
loopne
imul
jl
and
fmul
xchg
sar
clc
inc
pushf
jns
arpl
out
inc
add
dec
add
mov
data16
je
loop
xlat
jmp
dec
retf
imul
inc
or
pop
scas
icebp
dec
cmp
cmp
and
or
les
(bad)
(bad)
sahf
stc
mov
aad
and
call
and
dec
and
stos
mul
adc
pop
lods
sbb
arpl
jo
lods
jecxz
call
mul
adc
lea
dec
mov
inc
div
in
xchg
fidivr
and
test
popf
bound
mov
jae
push
fcom
or
lods
aas
pop
mov
cmp
adc
shr
cmp
mov
mov
add
push
out
es
jle
test
dec
pop
pop
icebp
jmp
sbb
rcr
lahf
(bad)
jp
mov
dec
ror
(bad)
ins
cmp
ja
test
cmps
fsubr
jo
sbb
les
and
jae
out
retf
sbb
stos
adc
cmp
out
sbb
iret
xor
stos
jmp
and
xchg
push
mov
inc
jo
out
js
das
loop
pop
mov
adc
pop
push
pop
and
push
ds
pop
pusha
sbb
addr16
les
retf
cmc
mov
pop
inc
mov
sahf
scas
retf
(bad)
cld
sbb
les
aam
mov
fldenv
cdq
arpl
fdivr
jb
repz
xor
out
sbb
scas
ror
in
add
jl
mov
push
pop
jo
lahf
(bad)
aam
adc
dec
aam
stos
outs
pop
sahf
xchg
fsubr
out
fnstenv
shl
mov
fadd
xor
push
fnstsw
jg
mov
mov
lds
pop
ror
das
in
gs
fs
sub
pop
inc
mov
aas
jae
(bad)
sbb
pop
(bad)
js
xor
out
js
aaa
loop
icebp
push
fst
sbb
loop
sub
enter
lods
in
sar
jnp
and
jno
in
xor
mov
fidiv
pop
lds
sub
sub
cs
retf
cmp
xor
xchg
int
(bad)
fdivr
lds
xlat
push
mov
aas
gs
add
inc
push
test
adc
mov
popa
mov
in
adc
sar
fs
dec
and
cld
cmp
sub
inc
mov
mov
push
jo
mov
xor
and
sbb
or
mov
repnz
and
iret
call
or
gs
in
and
push
scas
push
cs
add
imul
test
jnp
iret
adc
inc
fstp
cmp
retf
sub
push
push
hlt
jle
clc
dec
sub
das
dec
jl
in
pop
xor
cmp
je
sbb
loop
pop
les
pop
push
xchg
je
ret
sbb
dec
pop
mov
cmc
ret
jns
and
add
fidivr
movs
icebp
mov
and
inc
in
stos
push
sub
cmps
jge
add
gs
mov
hlt
sub
xor
jae
movs
inc
mul
xor
dec
ins
dec
inc
mov
imul
out
jmp
add
jae
mov
cmp
jp
ja
pop
mov
xchg
pop
sbb
cmp
in
scas
mov
cmps
retf
outs
sbb
retf
add
inc
loop
dec
repz
imul
sbb
mov
gs
push
adc
test
cli
psubusw
xor
adc
mov
js
adc
fwait
loop
push
pop
mov
retf
bound
loop
mov
jp
cli
sahf
jmp
shl
mov
mov
call
mov
jbe
cmps
cmc
jmp
push
stos
repnz
dec
popf
dec
xor
push
jae
ja
cmps
jp
cs
dec
pushf
(bad)
in
fucom
mov
mov
fwait
add
inc
jnp
mov
inc
ds
fcom
mov
icebp
fild
and
mov
adc
jnp
mov
fmulp
push
stos
lock
stos
pop
and
mov
test
add
leave
pop
push
push
clc
dec
(bad)
repnz
xchg
call
jmp
mov
jmp
pop
add
leave
repz
test
fldenv
shl
sub
pop
sqrtps
test
push
mov
mov
test
dec
js
mov
and
test
xchg
mov
jb
sbb
out
sub
inc
retf
hlt
mov
aaa
sbb
xchg
mov
(bad)
gs
aam
arpl
jmp
xor
sub
fild
rcr
shl
jge
div
sbb
ss
mov
mov
in
or
jle
mov
jae
test
push
aaa
loopne
sub
js
jbe
test
test
adc
sub
outs
push
outs
(bad)
pop
outs
adc
pusha
and
test
jo
dec
dec
ror
mov
cmp
out
out
(bad)
sbb
mov
cdq
xchg
mov
sub
ss
data16
mov
fwait
or
daa
arpl
sub
dec
cmp
sar
call
loop
push
es
test
mov
xor
pop
imul
cld
jno
mov
sbb
icebp
fidiv
add
inc
outs
push
adc
ret
cmp
mov
jo
cmp
test
fwait
ret
and
stos
adc
sbb
int
dec
(bad)
jne
inc
xor
add
and
ret
out
fsub
in
loopne
sbb
pop
cmp
ss
mov
addr16
sbb
xor
ret
fistp
scas
aaa
mov
scas
dec
pop
fidiv
icebp
jnp
(bad)
retf
dec
retf
xor
fs
jle
dec
pop
sub
jp
ret
xchg
adc
mov
pop
push
jle
(bad)
mov
test
nop
ficomp
dec
mov
add
mov
mov
xor
xor
jmp
repz
xchg
adc
es
ja
mov
ss
mov
mov
and
(bad)
je
xor
sub
in
imul
fsubr
or
sub
and
mov
add
pop
icebp
bound
xlat
cmp
sub
add
xor
mov
packssdw
xchg
ss
xor
jp
ret
idiv
(bad)
jmp
imul
mov
mov
(bad)
push
adc
retf
lds
push
pop
shl
cmps
cli
mov
es
xlat
inc
fsubr
sub
or
fild
push
dec
adc
(bad)
sub
xor
push
dec
imul
xchg
setbe
add
and
pop
int3
call
xchg
js
dec
aaa
stos
mov
lods
into
xchg
cmps
lahf
pop
cdq
fmul
mov
scas
loopne
int
test
xchg
(bad)
pop
lock
inc
mov
ja
in
(bad)
sub
movs
lods
or
push
pusha
stos
in
dec
idiv
add
out
and
out
push
cs
popf
jo
pusha
fild
push
mov
adc
push
aad
dec
jns
mov
fdivr
daa
jmp
scas
aas
outs
pop
stos
popf
cwde
nop
mov
push
jmp
mov
in
or
adc
xchg
add
movs
lods
hlt
(bad)
shl
xor
mov
lock
sahf
popa
lea
jg
jns
imul
out
xchg
scas
cmp
dec
es
mov
cmp
jb
mov
or
xchg
adc
icebp
int3
int
and
dec
stos
add
ret
mov
into
xchg
cmp
cmps
in
pop
jno
xchg
nop
inc
xor
jecxz
mov
add
push
mov
enter
mov
fdivr
jns
into
or
jmp
imul
pmuludq
pushf
aaa
mov
mov
(bad)
aas
pop
frstor
fs
pop
lahf
into
cmp
dec
sub
mov
cmp
ins
mov
mov
jmp
fild
and
pop
jno
push
dec
sbb
shl
fisttp
cmp
inc
test
stc
rol
pop
(bad)
popa
pop
out
xchg
inc
ds
push
lahf
mov
jnp
sub
jno
push
push
and
xor
xchg
aaa
imul
and
fadd
push
mov
sbb
inc
mov
mov
xor
adc
stos
or
or
sub
enter
inc
retf
fwait
lods
add
mov
pop
(bad)
aad
gs
lahf
pop
lahf
(bad)
loope
adc
mov
out
loopne
dec
enter
imul
cmp
jb
in
pxor
mov
adc
idiv
mov
data16
mov
jne
dec
lds
adc
outs
cs
je
cmps
push
gs
jne
pop
int3
test
sub
ss
mov
push
gs
stc
xchg
das
jno
outs
clc
fadd
jmp
xchg
arpl
ins
jp
add
pop
test
fist
jmp
jmp
imul
or
push
shr
jns
movs
stos
or
adc
sub
push
lock
push
or
dec
enter
daa
adc
in
push
es
xlat
jecxz
push
mov
or
in
lods
fdivr
cmp
(bad)
xor
sub
push
adc
(bad)
movs
and
xchg
ins
movs
int
and
test
xchg
pusha
sub
or
sbb
out
pushf
and
aad
popf
stos
mov
mov
test
mov
out
div
adc
mov
ins
adc
dec
sahf
jnp
stos
sbb
adc
and
mov
je
or
stos
or
test
jnp
jne
pop
add
and
adc
(bad)
(bad)
add
movs
ror
push
cdq
or
retf
sub
into
ficom
xchg
fadd
jnp
push
mov
push
cmp
mov
sub
je
push
add
sub
mov
out
jno
movs
adc
cwde
xlat
lock
inc
mov
pop
popa
jmp
jecxz
leave
and
mov
aas
mov
and
push
inc
test
cld
and
and
and
xchg
gs
inc
call
jmp
shr
repz
jp
repnz
pop
repnz
adc
xchg
mov
aas
hlt
jcxz
dec
or
cmps
je
outs
mov
in
mov
mov
cmp
std
js
jo
data16
sahf
scas
sahf
cld
std
movs
fcomp
inc
scas
cmp
fiadd
jle
imul
mov
jno
in
jl
and
xor
jmp
call
or
push
rol
repz
imul
test
cmps
stos
cs
mov
add
aas
test
push
aaa
add
fsub
gs
fucomp
test
pop
sti
pop
xchg
fidivr
popa
loop
gs
retf
ds
jle
inc
push
lahf
xor
repnz
imul
(bad)
cmp
xchg
std
push
push
add
loope
cmps
shr
fild
add
jle
mov
scas
pop
sbb
retf
jecxz
je
or
sar
cmc
xor
outs
cmp
push
das
pop
ret
sub
xor
ds
mov
xor
mov
aad
push
popf
adc
lock
mov
cmp
push
mov
mov
push
movs
or
arpl
sub
xchg
sti
ror
cmp
shr
ins
shl
cmp
and
mov
push
add
jle
(bad)
jb
jmp
pop
xchg
cwde
in
cmps
rol
cmp
mov
cmc
mov
popf
pop
add
outs
nop
repnz
ss
into
dec
arpl
scas
in
xor
jmp
add
push
aas
test
push
pop
push
fild
jno
fnstsw
jo
dec
add
or
jbe
xor
mov
cmp
aaa
test
inc
arpl
sar
mov
xlat
retf
mov
push
jns
fisubr
sub
adc
xor
(bad)
xor
ss
ror
mov
(bad)
push
jle
jb
popa
scas
std
mov
sub
aaa
jmp
lock
sub
push
pop
pushf
scas
jmp
adc
mov
das
in
pop
inc
(bad)
fcom
outs
iret
sbb
pop
mov
and
call
fs
dec
pop
dec
inc
sub
mov
mov
mov
mov
xchg
and
pop
xchg
js
pop
or
jge
hlt
jbe
jno
dec
hlt
push
in
sbb
mov
xchg
shr
iret
fldcw
hlt
xor
xor
sub
addr16
loopne
movs
(bad)
jmp
cli
push
mov
int
adc
mov
pmaxub
std
sbb
add
mov
jae
fdivr
test
dec
mov
leave
push
xor
popa
add
cmp
push
pop
iret
xor
pusha
jecxz
call
mov
xchg
push
or
mov
xor
or
sub
aad
es
movaps
pushf
mov
push
pop
ja
cmp
ror
jbe
mov
in
push
imul
movs
push
aas
mov
dec
xchg
fcmovbe
inc
or
sub
jbe
out
aaa
js
xchg
sbb
xchg
test
inc
push
les
enter
int3
add
pop
jp
aaa
jl
push
push
pusha
xchg
sub
mov
jle
out
cmp
ror
in
in
add
in
sub
pop
out
pop
ds
into
ret
shl
arpl
call
push
into
mov
and
push
lods
add
mov
and
or
dec
jle
add
pop
xchg
mov
jl
cmp
push
cmp
ret
push
pop
jg
ins
xor
mov
shl
sub
mov
js
sahf
mov
arpl
cmps
cmc
sub
inc
cwde
add
aad
int
push
adc
repz
inc
sahf
cs
xor
push
sbb
sub
jo
pop
xchg
or
mul
add
cmc
or
cmp
(bad)
test
mov
shr
add
sahf
sub
lock
(bad)
sti
imul
xchg
mov
sbb
stos
std
xlat
fwait
mov
mov
jmp
in
add
pop
pop
sbb
jno
or
adc
(bad)
pushf
cmp
(bad)
out
pop
popa
retf
xchg
pop
inc
sbb
cmps
repz
jae
pop
mov
ret
fst
inc
iret
jp
pop
adc
iret
outs
jp
fnstenv
daa
mov
ja
sub
and
test
sbb
mov
jmp
mov
(bad)
into
ins
or
retf
inc
nop
mov
dec
cmp
enter
mov
mov
lahf
pop
cmp
fld
mov
ins
into
out
(bad)
xchg
aaa
sub
mov
std
outs
in
push
test
xor
cmp
push
pop
leave
out
aad
sbb
adc
sbb
pop
mov
je
xlat
test
push
enter
adc
pop
sbb
mov
jns
jg
movs
xchg
gs
cli
ja
outs
sub
cmp
mov
adc
push
push
call
pop
arpl
fnstcw
jecxz
jle
xor
push
sub
repnz
ins
or
daa
fnstcw
(bad)
ds
out
mov
xchg
int
cmps
not
int3
sub
call
lods
je
int
pop
hlt
out
fild
xchg
sub
sbb
(bad)
ss
xor
cs
add
pop
mov
inc
jg
inc
retf
bswap
jge
aaa
adc
sbb
mov
mov
test
push
(bad)
push
(bad)
dec
fsubr
test
(bad)
retf
aaa
dec
jb
icebp
push
mov
leave
push
dec
mov
fild
pop
mov
lahf
adc
xlat
cmps
sub
jns
push
jmp
jmp
mov
add
shr
jae
enter
popa
or
inc
dec
in
and
mov
adc
push
cmps
je
cld
dec
pop
cdq
(bad)
in
adc
out
cmps
cmp
(bad)
mov
fwait
and
jns
gs
test
scas
lods
mov
std
jne
sbb
daa
jne
sbb
xlat
sub
sub
pop
pop
div
cwde
imul
sbb
clc
fs
fisubr
js
out
sbb
gs
push
in
ret
cmp
aas
sub
and
mov
or
jbe
pop
mov
push
rol
mov
push
div
daa
inc
and
adc
test
loop
mov
jb
test
dec
movs
iret
or
inc
pop
ret
pop
add
outs
add
int3
inc
popf
push
xlat
jno
mov
jl
adc
sbb
(bad)
mov
outs
ins
addr16
push
cmp
dec
add
aad
minps
stc
maskmovq
mul
cmps
mov
xchg
inc
mov
push
xchg
cdq
sbb
xor
ror
xchg
(bad)
jae
jbe
pop
sub
call
cmp
push
or
(bad)
adc
mov
(bad)
cmp
add
jns
add
xchg
data16
cdq
sub
push
daa
shl
fadd
repnz
je
push
jo
xchg
mov
cmp
xchg
adc
dec
pop
loope
jp
xchg
stc
scas
retf
jmp
fs
add
(bad)
or
inc
mov
jmp
push
sub
sub
aaa
retf
cmp
outs
fsubr
cmp
mov
adc
or
pop
xor
dec
int3
test
jmp
mov
lea
sub
pop
pusha
push
inc
dec
jb
mov
or
imul
adc
pop
mov
mov
inc
into
push
in
mov
idiv
outs
aaa
pop
call
cmp
ins
bound
or
xchg
fiadd
and
cli
pop
or
aad
test
sbb
fsubr
push
xchg
mov
sbb
ss
(bad)
(bad)
aaa
mov
mov
adc
push
mov
xchg
inc
jns
or
movs
fdiv
xchg
cmc
rcl
adc
(bad)
jge
daa
(bad)
lea
xchg
ss
adc
adc
ja
std
pop
inc
push
mov
dec
mov
jne
push
jbe
push
inc
and
dec
push
jae
int
mov
and
in
call
std
xor
sub
xor
ds
out
aas
push
pusha
test
cmp
jne
jp
iret
ret
into
div
push
lea
sbb
scas
inc
bound
mov
fdiv
imul
xlat
mov
stc
ins
std
lds
test
jmp
fnstenv
ds
inc
cs
stos
(bad)
mov
in
pop
imul
inc
or
pop
test
pop
jp
dec
dec
push
hlt
clc
push
sub
mov
xlat
scas
ds
into
or
pop
enter
enter
jge
ss
rcl
push
pop
push
mov
rol
mov
fcomp
repz
pop
sbb
xchg
push
mov
pushf
sbb
scas
push
icebp
fiadd
les
adc
xor
dec
and
hlt
add
pop
movs
push
lock
xchg
adc
add
push
push
ja
(bad)
inc
lock
iret
fwait
dec
call
xor
and
or
adc
push
gs
data16
fwait
jmp
ds
sbb
aam
and
fdivr
dec
xchg
xor
jbe
mov
mov
scas
lahf
adc
or
mov
push
push
mov
into
dec
mul
loopne
and
add
in
xchg
pop
jb
stc
(bad)
pop
(bad)
jnp
pop
pop
js
sbb
out
push
clc
push
adc
aad
ss
push
add
adc
shr
inc
call
inc
int
loopne
int3
(bad)
clc
popf
mov
add
mov
pop
out
sub
sti
fistp
mov
cwde
inc
imul
adc
ror
sbb
jmp
mov
xor
jecxz
dec
in
inc
mov
sbb
dec
in
add
inc
das
jb
inc
jge
mov
lds
xor
cmc
push
add
dec
in
xchg
nop
call
repz
ds
gs
push
xchg
imul
gs
leave
dec
xor
repnz
into
icebp
jmp
je
lahf
mov
or
imul
int
or
and
ins
push
adc
(bad)
push
mov
mov
dec
sub
or
les
in
shr
fld
jnp
mov
cld
stos
push
js
in
xchg
and
mov
cli
mov
popf
pushf
pop
xchg
test
cmp
dec
loopne
retf
fist
inc
xchg
movs
ret
jno
(bad)
js
add
mov
add
cmp
repnz
fsub
jne
push
rol
or
mov
iret
and
xchg
je
and
inc
xchg
sbb
push
cmc
jb
xchg
cdq
sbb
lock
xor
js
xchg
fiadd
mov
lds
mov
sub
aaa
pop
(bad)
std
pop
push
repnz
sti
nop
inc
inc
xchg
(bad)
sub
int
sub
mov
test
mov
nop
pop
adc
rcr
int3
xor
(bad)
inc
push
sub
arpl
jb
mov
xlat
mov
inc
repz
gs
iret
pushf
xchg
fmul
popf
xor
daa
jno
cli
les
mov
idiv
xor
inc
gs
rcr
dec
push
jmp
adc
and
mov
cld
and
ret
mov
sbb
mov
adc
out
and
jns
imul
mov
neg
sub
addr16
mov
fst
sbb
mov
cs
dec
sar
rcl
inc
in
push
adc
adc
mov
cli
xor
mov
or
movs
movs
lds
sub
add
fwait
int3
inc
into
es
sub
shl
rcl
pop
ror
pop
ret
sub
pop
gs
bnd
jl
scas
ret
not
or
pushf
ds
daa
push
test
inc
iret
jae
mov
popa
dec
mov
data16
and
or
js
mov
test
xchg
jge
imul
mov
inc
cdq
rcr
and
out
inc
and
hlt
pop
or
bound
pop
xor
and
in
add
lods
(bad)
lods
scas
fild
mov
sbb
bound
shr
and
lock
or
inc
ficom
in
cmp
les
aaa
xchg
mov
sahf
mov
outs
fwait
cmp
call
and
stc
clc
sti
push
pop
shl
or
imul
xchg
push
bound
(bad)
push
scas
jbe
repnz
mov
jno
mov
xchg
lods
or
int3
xchg
and
movs
adc
fdivr
idiv
dec
mov
jns
test
push
mov
and
jmp
push
bound
fxch
cld
addr16
icebp
mov
scas
aam
inc
hlt
out
rcl
mov
icebp
xor
xor
pop
dec
dec
ret
xor
mov
int3
aaa
pop
pop
adc
shl
xor
add
test
stc
mov
adc
dec
(bad)
cmp
pop
in
adc
xchg
or
mov
xchg
adc
xor
inc
cli
sti
and
in
push
jge
repz
jmp
mov
pushf
and
scas
pop
jnp
fsubrp
mov
mov
call
ret
les
icebp
ins
dec
clc
inc
in
pushf
rcr
and
aad
xor
retf
(bad)
int3
test
mov
cmps
lods
jo
mov
cs
mov
push
mov
add
jno
or
pop
push
fidivr
test
jecxz
xor
stc
add
cmp
jo
push
loope
xor
movs
push
add
xor
cmps
jns
push
lods
jns
sahf
sbb
lahf
push
sahf
(bad)
int
sbb
aas
lods
cli
cmc
push
mov
test
fwait
jb
jp
sbb
into
jge
xchg
std
stos
ds
or
(bad)
fst
adc
imul
int3
test
xchg
inc
add
sbb
mov
xchg
rcl
stos
jge
gs
jns
xor
jae
or
out
ss
dec
lods
(bad)
mov
sbb
xchg
retf
mov
add
fwait
mov
and
popa
pop
inc
xchg
pushf
aaa
call
cdq
push
xor
pop
lods
neg
mov
movs
jo
mov
cmps
ret
std
mov
aad
retf
add
movs
rcr
dec
push
leave
cdq
mov
dec
push
adc
push
sbb
(bad)
mov
xor
sub
mov
cwde
mov
enter
stos
in
lods
hlt
mov
cmc
push
scas
and
mov
xor
inc
inc
je
scas
aad
jbe
push
jle
pop
xchg
mov
sbb
(bad)
push
mov
mov
repz
cwde
pushf
jne
jl
push
jle
push
push
jae
ret
lods
mov
movs
fist
xchg
mov
dec
(bad)
into
push
push
data16
add
sbb
aam
or
push
ja
pop
pop
dec
mov
bound
jmp
pop
mov
inc
jnp
pop
cmp
loop
fisttp
lahf
jno
mov
test
stos
fbld
inc
in
pop
add
mov
mov
call
pop
leave
ja
pusha
in
scas
xlat
pop
(bad)
mov
(bad)
jns
mov
lock
ror
ds
(bad)
movs
jo
jnp
mov
sbb
adc
lahf
dec
loopne
pop
ins
es
nop
dec
xchg
js
(bad)
in
test
add
add
xlat
les
and
(bad)
pop
pusha
xchg
ins
cmp
aas
arpl
adc
dec
pop
sub
fsubrp
jno
mov
loopne
imul
dec
es
jmp
sub
rcr
mov
(bad)
adc
jge
xchg
loop
dec
fs
rol
aas
gs
dec
fs
xor
and
addr16
xor
and
add
add
mov
fs
(bad)
gs
rcl
in
cwde
xchg
into
mov
adc
not
mov
pusha
sub
enter
xlat
div
jae
mov
or
call
pushf
out
(bad)
pop
mov
dec
mov
and
xor
ins
mov
cwde
sub
pushf
sti
(bad)
fs
lods
loopne
rcl
sub
mov
int3
dec
mov
and
xlat
mov
adc
clc
call
enter
fimul
in
int
inc
test
jl
push
bnd
add
popf
cmp
pop
fldcw
clc
and
loopne
push
shl
jge
movs
mov
push
sub
dec
mov
popf
mov
stc
and
mov
cmp
mov
jno
pop
dec
cld
ins
cmp
mov
pop
js
call
pop
pop
mov
cwde
jo
mov
xchg
lahf
and
stc
aad
test
inc
les
leave
lahf
std
or
mov
mov
outs
pushf
pop
lea
jno
push
rol
push
jmp
(bad)
out
fisub
fwait
xor
xchg
xchg
sti
jp
in
out
mov
xchg
xor
retf
std
sbb
pop
cwde
add
push
jmp
fist
push
rcl
lock
inc
and
push
add
pusha
enter
imul
jbe
mov
test
dec
dec
in
inc
loop
in
daa
fidiv
scas
or
popa
(bad)
out
add
pop
xlat
pop
xlat
or
mov
mov
je
mov
dec
daa
out
loope
cmps
pop
sub
jns
aam
cmps
(bad)
fisttp
add
push
cli
inc
xchg
ins
cdq
(bad)
dec
ret
mov
sbb
xor
mov
xor
inc
cmc
pop
jmp
outs
rol
gs
es
or
lods
jge
push
outs
lahf
lds
jge
sbb
sbb
std
add
sub
rol
and
inc
ins
fisub
dec
sti
loop
xlat
sub
stos
add
mov
aad
movs
mov
xchg
popa
and
jecxz
icebp
test
retf
out
push
xchg
xor
aad
jb
sbb
sbb
add
sub
int3
fist
push
xchg
xchg
or
jmp
daa
mov
(bad)
pop
popa
ds
xchg
lea
hlt
xchg
sub
sub
xchg
mov
mov
pop
xchg
sahf
retf
das
loop
pop
out
xchg
push
(bad)
in
imul
add
ret
jno
sub
jae
cmp
adc
aad
mov
pop
call
aam
mov
xchg
and
jbe
(bad)
aad
mov
inc
out
lahf
pop
ret
iret
nop
cmps
mov
out
addr16
adc
repz
push
cmp
into
xchg
lds
sub
jo
push
or
cmp
jg
ds
sub
sub
add
add
fdiv
test
jns
mov
repnz
imul
ja
test
out
aaa
and
ret
jae
pop
cli
ret
inc
lods
sbb
call
inc
(bad)
into
and
call
mov
ret
popa
repnz
push
mov
cmp
popa
xchg
sbb
(bad)
or
shl
cs
adc
cmc
mov
jae
ficom
leave
push
(bad)
mov
sbb
mov
enter
xor
rcl
mov
mov
mov
inc
fldcw
ror
or
mov
sub
sbb
jb
mov
mov
cmps
ret
std
dec
cmp
push
in
nop
leave
add
mov
enter
data16
mov
xor
jmp
xor
mov
fs
mov
das
jb
mov
outs
xor
es
retf
mov
push
and
jno
inc
(bad)
call
jne
in
xor
arpl
jae
jno
dec
mov
movs
pop
inc
sub
push
sbb
jo
add
inc
sub
pop
xchg
mov
xor
inc
mov
adc
pop
mov
shr
pop
add
mov
aaa
adc
fcomp
arpl
or
ror
test
dec
push
xchg
xchg
in
out
sar
repz
loope
adc
hlt
cmp
push
test
dec
fs
scas
push
add
hlt
pop
mov
clc
fisubr
mov
pop
sub
mov
repz
adc
xor
mov
idiv
inc
dec
dec
ins
fdivr
mov
ficomp
mov
lds
jl
sbb
call
sub
inc
gs
outs
pop
or
and
pop
jmp
das
dec
dec
out
inc
cld
mov
pop
fst
(bad)
aaa
aas
lahf
jle
jl
cmps
or
das
mov
inc
ds
pop
test
push
cmp
std
cmppd
jecxz
cmc
outs
or
jne
nop
pusha
xor
mov
add
mov
and
sub
mov
inc
xor
lods
pop
sub
inc
in
cli
dec
fs
push
adc
enter
clc
ror
in
hlt
cmp
dec
xor
push
jnp
xchg
ins
inc
xchg
enter
mov
imul
push
sbb
mov
mov
mov
push
enter
repz
sbb
mov
jbe
inc
loope
sub
sub
test
sbb
xchg
mov
popf
jbe
mov
lods
sbb
mov
mov
and
fnstsw
aas
ins
stos
std
(bad)
iret
mul
push
xor
jecxz
xchg
sub
jne
rol
mov
fwait
in
js
stos
and
popf
push
js
fld
daa
pop
mov
pushf
sbb
push
ret
lock
cmc
mov
test
cmp
mov
sar
(bad)
stc
inc
push
mov
jle
rcr
outs
jg
gs
pop
repnz
or
fmul
push
mov
(bad)
mov
cmps
and
pushf
mov
dec
sahf
loop
or
jb
pop
cdq
fnstenv
clc
xor
inc
mov
ds
js
xor
mov
repz
mov
mov
mov
daa
rcl
sbb
add
adc
xchg
pop
sub
(bad)
aaa
and
imul
(bad)
cmp
lock
cld
pushf
jno
arpl
sub
outs
aad
daa
jmp
sbb
mov
mov
imul
outs
das
aas
ds
add
in
adc
pop
bound
adc
mov
mov
retf
fdiv
sub
leave
scas
mov
les
or
movs
dec
inc
xchg
and
test
push
test
jmp
xchg
xlat
into
nop
dec
jmp
movs
pop
jmp
test
out
enter
in
inc
add
pop
pop
or
inc
jp
fdivrp
or
in
push
in
pop
arpl
inc
(bad)
pcmpeqw
iret
or
mov
mov
inc
mov
js
pusha
push
xlat
loopne
jmp
xor
mov
xchg
cmps
cli
scas
popf
and
sub
cwde
pop
push
dec
xchg
shl
inc
(bad)
call
sub
mov
xlat
sub
(bad)
fucomi
pop
jecxz
jnp
ror
jno
lods
adc
pop
inc
mov
mov
call
xor
das
cs
pushf
pop
pop
jmp
aas
fistp
adc
stc
in
jp
stos
test
add
sub
cmp
je
mov
add
(bad)
repnz
cmp
(bad)
sbb
(bad)
xor
cmps
cdq
aas
mov
sub
popf
inc
cwde
cwde
shl
cld
dec
add
int
int3
jnp
add
aas
xchg
sbb
cvtpi2ps
test
les
(bad)
jnp
ret
(bad)
xor
adc
div
call
int
mov
scas
push
and
or
std
cmp
stos
xchg
inc
cwde
pop
dec
dec
lea
mov
sar
shr
mov
or
jg
popf
jl
cmp
xchg
adc
mov
push
xchg
ret
mov
adc
jp
add
and
adc
cmp
je
xor
adc
bound
imul
test
idiv
xchg
lods
es
test
mov
xor
rol
je
push
xchg
js
mov
mov
sbb
cmp
inc
mov
leave
mov
xor
mov
and
dec
loope
and
movs
cmp
test
mov
test
mov
mov
xchg
pop
sub
fmul
mov
cmp
mov
imul
push
mov
aam
sahf
(bad)
xchg
mov
pop
add
pop
mov
cmps
fs
push
scas
sub
ror
fnsave
add
ja
rcl
jo
int
fnstenv
popf
pop
add
ret
pop
sub
xchg
mov
call
stc
enter
mov
or
sub
adc
push
test
mov
mov
mov
and
out
ss
sti
and
inc
sbb
into
and
adc
sahf
lods
dec
and
dec
outs
pop
xor
rcl
sub
push
jnp
inc
out
jb
arpl
sub
ss
cmp
pop
ret
push
cmc
fdiv
xchg
int
pop
js
(bad)
shl
inc
(bad)
rcr
xchg
pop
rcr
aad
mov
mov
dec
sub
jne
mov
push
mov
outs
sbb
adc
sti
sbb
pusha
ins
lds
jne
and
mov
loopne
das
mov
pop
in
call
add
scas
mov
pop
fild
in
fist
les
inc
clc
scas
xchg
loope
mov
fsubr
pop
xchg
cmc
retf
aam
lods
sub
fimul
adc
sar
and
cmps
imul
call
jmp
in
stc
lods
xchg
sub
das
in
sar
xchg
adc
in
mov
xor
pop
ror
or
ret
mov
inc
fldpi
lock
jo
fcom
cmps
jmp
dec
mov
imul
mov
push
dec
cli
or
sbb
push
leave
hlt
cwde
int
outs
xor
cmps
adc
cmp
xchg
stos
leave
fucomip
adc
ds
inc
in
sbb
imul
in
sbb
ins
inc
inc
jb
lea
cmps
lods
mov
dec
in
bnd
fist
fs
in
sub
sti
xchg
jns
fbld
ret
pop
pusha
int3
push
mov
loope
push
add
dec
mov
leave
push
xrelease
mov
pop
dec
rcr
das
mov
xchg
rcr
dec
xchg
jb
std
inc
add
and
mov
pop
bound
aas
mov
gs
dec
stos
mov
(bad)
mov
nop
inc
nop
stos
ss
icebp
inc
stc
push
stos
jne
push
or
lock
pop
add
mov
repz
lds
jne
mov
add
inc
inc
xchg
inc
jno
xor
xchg
fsubr
ret
retf
push
or
or
push
inc
and
sub
imul
dec
cs
mul
nop
fdivr
inc
dec
fcmovb
scas
cmp
int3
xlat
push
and
jmp
in
data16
hlt
push
mov
sbb
mov
and
iret
jecxz
mov
leave
xor
add
stos
jb
inc
fldpi
sbb
shl
sub
adc
fs
into
push
cmc
dec
sbb
xchg
in
xchg
(bad)
add
idiv
loope
jl
sbb
repz
mov
lods
mov
(bad)
aam
dec
shr
lods
add
add
out
gs
adc
and
dec
jp
gs
push
push
loopne
(bad)
movs
pop
or
inc
inc
enter
dec
stc
jge
or
mov
pop
pop
stos
xor
sbb
fmul
dec
dec
aas
inc
mov
movs
outs
sub
pop
cmp
jb
jae
push
movs
mov
test
movs
jb
cmps
pop
(bad)
ds
(bad)
add
mov
call
lods
dec
ret
js
icebp
inc
push
cmp
xchg
inc
fstp
jnp
inc
sub
sti
shl
cmp
fwait
xor
mov
dec
mov
jae
xor
mov
fchs
cmp
dec
dec
movs
jp
or
and
push
sub
(bad)
pushf
addr16
mov
aaa
sub
ficomp
mov
or
push
stos
cmp
sbb
sti
and
adc
popa
leave
std
adc
imul
rol
xchg
add
mov
movs
aaa
clc
dec
mov
repnz
jns
jnp
cmp
sub
cwde
mov
push
and
push
leave
cmp
mov
sbb
sub
and
das
cli
or
xor
pop
cmp
mov
addr16
inc
or
repnz
cmp
nop
sbb
inc
xchg
mov
scas
dec
outs
sub
cmp
fwait
dec
cs
push
jmp
push
std
cmp
jmp
in
in
out
push
ficomp
xor
mov
shl
sbb
test
xlat
or
mov
stc
retf
lods
sbb
daa
sub
inc
inc
or
xor
inc
cld
push
popa
std
in
aad
std
jmp
pushf
mov
inc
add
retf
adc
shl
jmp
sti
stos
sahf
ss
in
sub
lock
jne
scas
jo
loope
pop
sub
cmp
mov
push
fwait
popf
and
pop
mov
(bad)
inc
xor
hlt
or
cmc
mov
inc
into
dec
in
cdq
lods
pop
cmp
mov
inc
aad
inc
cmp
xchg
mov
jp
ja
jo
in
sbb
or
pop
adc
and
pop
mov
inc
pop
das
xor
xchg
xor
test
mov
xor
inc
sbb
inc
aas
jmp
lods
(bad)
adc
jle
sub
ret
out
mov
(bad)
jnp
leave
fimul
add
mov
dec
push
and
stos
xor
fs
push
je
sub
mov
mov
fidiv
fistp
sbb
sbb
lock
test
xchg
jl
sbb
push
sub
dec
out
clc
mov
int
and
add
in
int
jno
pop
mov
cmp
shl
cld
jge
fst
dec
push
stc
dec
push
ud0
dec
push
retf
into
dec
and
es
in
mov
sub
jg
cdq
and
mov
daa
mov
or
mov
int
sub
aaa
dec
fiadd
sar
jno
jno
daa
leave
clc
(bad)
pop
jle
pop
into
mov
xchg
fucom
push
pop
daa
mov
hlt
lahf
pop
push
cdq
in
push
fwait
iret
sbb
and
xor
add
push
(bad)
jecxz
rcl
or
dec
and
xchg
xchg
popa
div
out
fisttp
dec
jae
mov
push
sti
mov
std
adc
mov
inc
(bad)
in
pop
retf
jnp
stc
sub
cmp
sub
pop
sub
(bad)
jae
add
out
cmp
xchg
aas
stos
push
adc
(bad)
jb
and
call
es
cdq
xchg
sub
inc
and
or
inc
cmps
sub
jmp
sbb
daa
inc
cmp
repz
xor
movs
jecxz
loopne
and
cmc
cmp
mov
adc
adc
js
xchg
test
pop
dec
sbb
mov
icebp
movs
mov
ds
xor
ss
daa
loopne
popa
lods
add
jecxz
xor
mul
loope
or
jbe
push
dec
inc
xchg
adc
jae
mov
mov
mov
mov
dec
push
(bad)
jnp
push
adc
cmp
push
cmp
inc
loope
test
leave
mov
fdivr
jno
cs
out
cmp
xchg
outs
gs
jmp
loop
push
xor
arpl
mov
sub
adc
div
mov
aad
sar
out
mov
addr16
test
pop
sti
test
fwait
test
aas
and
pop
add
repnz
fimul
sub
jl
call
or
mov
dec
add
repnz
mov
jbe
or
test
icebp
or
(bad)
mov
int
inc
dec
sub
js
icebp
add
retf
inc
adc
xor
js
push
ss
scas
aam
xchg
mov
mov
dec
sub
(bad)
jp
jge
mov
pop
jmp
pop
push
jmp
mov
lahf
mov
in
ret
or
mov
retf
inc
jnp
dec
jmp
pop
int3
jmp
out
push
out
xor
jg
shl
push
add
add
sbb
push
sub
mov
mov
or
jle
(bad)
cmp
xchg
jmp
ror
add
cmps
inc
xor
sar
and
fld
pop
add
retf
xchg
enter
or
jnp
cmps
test
out
xlat
sub
bound
in
in
mov
mov
dec
cld
push
fistp
es
stc
data16
xchg
sub
aam
adc
cmp
mov
push
out
dec
inc
into
aaa
or
push
xchg
cmps
inc
pop
inc
inc
jle
sbb
push
jecxz
popa
loopne
xchg
adc
out
push
xchg
int
mov
mov
add
cmp
movs
add
in
sbb
stc
stc
cmp
jns
mov
aam
sub
aas
jo
int
ror
adc
pop
adc
fld
mov
push
int3
(bad)
cmps
xor
cmp
dec
out
mov
cdq
jp
push
sbb
mov
repz
les
sub
and
test
xor
pop
lea
mov
fcmovbe
loope
inc
push
repz
bound
(bad)
fisub
cmp
or
cmp
pop
icebp
inc
in
xchg
fwait
test
out
jb
dec
mov
neg
fsubr
cmps
inc
fwait
jle
sub
jmp
iret
jb
(bad)
nop
xor
and
inc
mov
sub
fmul
je
and
inc
cmps
ins
int3
xchg
rcr
mov
movs
xchg
adc
cmp
repnz
mov
push
cwde
xor
in
jmp
popf
jle
pop
cmp
imul
aam
stc
out
and
in
jno
ret
imul
mov
stos
push
int3
shl
cmp
mov
push
shl
push
jns
add
inc
loopne
or
xlat
and
xchg
fstp
mov
cdq
cmp
nop
sti
retf
mov
fnstenv
arpl
xor
cmc
fld
jecxz
xchg
aam
add
stos
or
sar
lea
sahf
cwde
or
add
out
add
into
cmp
or
push
test
mov
cmps
scas
daa
imul
jmp
xor
and
shl
aad
jmp
jb
add
dec
icebp
iret
jo
aad
dec
xchg
pop
lods
jl
in
add
mov
push
xor
loop
or
xor
lds
int3
inc
mov
lods
jae
add
xchg
jno
pop
cmp
push
sbb
je
in
dec
scas
das
ficomp
cld
jge
addr16
mov
test
nop
adc
or
fs
jmp
pushf
and
test
pop
inc
mov
or
fdivp
xlat
loop
pop
pop
out
or
sbb
pop
cmp
jmp
mov
xchg
pop
mov
xchg
in
dec
ins
dec
adc
pop
stc
sbb
and
jno
jnp
cmovs
iret
pushf
push
inc
lods
dec
mov
add
data16
mov
dec
mov
sbb
push
xor
lods
fwait
jecxz
jmp
push
mov
or
push
cmps
in
and
adc
js
aaa
pusha
arpl
les
scas
jbe
or
std
inc
imul
inc
clc
or
mov
pop
xchg
inc
pop
sbb
push
jl
dec
or
xor
and
outs
mov
(bad)
ficomp
arpl
mov
rcl
scas
and
pop
das
adc
lods
sbb
xor
mov
jle
add
ja
xchg
dec
jno
ds
sbb
adc
(bad)
xlat
aam
iret
stc
icebp
dec
(bad)
pop
jg
popf
fstp
xchg
xlat
sbb
and
ror
sub
stc
ficom
jmp
dec
pusha
popa
mov
ja
stos
adc
retf
push
or
push
sbb
sub
xor
loop
dec
adc
movs
cmp
mov
imul
clc
jb
cs
mov
inc
test
out
daa
pop
cwde
push
jae
dec
pushf
pop
jno
add
out
cmps
mov
pop
cmp
mov
ret
lds
xchg
or
cmp
frndint
sbb
imul
jns
xor
lds
or
xchg
fsubrp
mov
out
std
pavgw
sbb
cwde
dec
fdivr
inc
xlat
cmp
shl
(bad)
mov
and
sbb
mov
and
rol
sub
cmp
mov
pop
add
add
retf
(bad)
jnp
adc
adc
mov
popf
or
xchg
sbb
add
xchg
xor
out
ja
test
jle
not
mov
lea
fisttp
cmp
imul
xor
xor
loopne
arpl
pop
lea
adc
rol
mov
rcr
popf
push
dec
aaa
popa
inc
xchg
(bad)
pusha
movs
in
inc
pop
push
jle
mov
lds
ja
fldenv
jmp
add
mov
xchg
popa
push
dec
sbb
sub
push
ss
clc
or
and
add
xlat
fcmovb
xchg
mov
int3
(bad)
scas
add
shr
sbb
adc
adc
daa
jmp
jl
adc
jle
mov
test
jmp
mov
sub
and
in
xchg
lea
pop
or
cmp
adc
mov
mov
mov
pop
sbb
arpl
or
and
bound
out
pop
push
jbe
cmp
or
and
xchg
jb
add
bts
inc
and
in
dec
pop
sub
or
jecxz
push
loope
hlt
and
xchg
fbld
mov
fwait
loopne
stc
(bad)
mov
fwait
sar
cmps
jnp
cli
js
loop
aaa
push
or
cmp
dec
sub
sbb
out
jecxz
nop
jne
rcl
xor
add
call
adc
sbb
adc
pop
fsubp
nop
gs
cmp
in
ret
lahf
and
mov
add
xchg
push
inc
jbe
adc
sbb
adc
cmp
inc
fnstcw
mov
repnz
lea
mov
pop
mov
sub
stos
adc
(bad)
shl
fcomip
clc
and
inc
and
xor
pushf
push
push
push
mov
femms
pop
cmp
aas
data16
nop
inc
mov
shr
push
jo
and
dec
aas
add
daa
mov
in
cli
jmp
test
jo
jno
mov
hlt
jb
movs
jmp
pop
jno
out
sbb
pop
xchg
data16
test
loopne
std
jb
jns
dec
xchg
sub
hlt
jmp
leave
pop
xor
test
add
mov
jge
mov
test
movs
and
or
int3
jl
cmp
dec
xlat
pop
push
and
mov
aam
in
sub
sahf
xlat
or
cmp
sub
mov
inc
cli
push
ror
sbb
adc
enter
jne
std
or
sbb
push
fs
arpl
add
adc
jmp
mov
mov
outs
dec
dec
mov
xchg
jbe
add
sbb
or
ret
movs
aas
retf
jle
iret
dec
sbb
inc
sub
retf
out
inc
jns
pop
mov
sub
stc
hlt
pop
lds
imul
fwait
pop
jno
jmp
fiadd
and
pop
out
and
xchg
add
mov
push
inc
pop
out
movs
inc
lods
ret
pop
mov
mov
cmps
xchg
push
test
shl
and
or
push
jl
xor
daa
shl
mov
call
ret
imul
mov
add
inc
sbb
and
push
pop
test
and
jmp
imul
(bad)
hlt
xchg
in
loopne
scas
sub
es
pusha
out
pop
cmp
lds
lds
jle
xchg
mov
int
jnp
(bad)
xlat
sub
enter
icebp
dec
pop
push
dec
in
mov
hlt
push
xchg
jg
xor
pop
jl
xchg
sub
es
sar
enter
ss
jl
je
xchg
xchg
cs
scas
in
lock
cmps
mov
adc
loopne
loopne
xor
clc
outs
or
inc
inc
pop
mov
cmc
jl
mov
popf
popf
add
outs
ins
pop
jae
in
jae
mov
or
mov
jmp
xchg
sub
(bad)
out
fs
fld
push
push
js
aas
js
sbb
repz
push
mov
mov
mov
fsub
adc
jge
lock
ds
jmp
cli
sub
rol
jg
mov
or
push
inc
int
in
fwait
scas
add
push
je
sbb
mov
adc
xor
out
notrack
inc
aas
xor
cwde
out
lock
lods
pop
leave
or
popf
es
jbe
xor
jle
push
test
call
pop
pop
jecxz
repz
cmp
add
leave
push
xchg
aam
jge
xchg
inc
inc
(bad)
out
sub
dec
mov
out
adc
adc
test
pop
push
(bad)
adc
push
ds
in
addr16
out
cdq
dec
in
aam
mov
add
ror
and
pop
mov
sar
push
hlt
pop
cmp
xchg
leave
shl
mov
mov
add
mov
xchg
cmc
push
hlt
test
pop
pushf
arpl
or
adc
mov
retf
ds
ret
fwait
addr16
sbb
fiadd
scas
adc
retf
jecxz
add
jnp
pop
test
cmc
add
addr16
inc
pop
mov
dec
outs
push
add
and
dec
ret
movups
adc
sbb
or
aaa
mov
les
pop
lods
daa
xchg
test
inc
sbb
ud2
test
cmp
pop
xor
and
scas
popf
xchg
rcr
nop
rcl
add
xchg
cdq
inc
popf
mov
mov
ret
adc
push
mov
add
pop
push
mov
jb
leave
pop
pop
adc
xor
outs
mov
and
fs
dec
sbb
in
imul
jl
cdq
fdiv
popf
stos
aad
pop
cwde
test
cmc
dec
sub
fmul
sahf
add
adc
adc
fistp
pop
push
addr16
mov
aaa
lods
inc
mov
dec
fxch
dec
jp
clc
jmp
fucomi
out
inc
mov
movs
adc
mov
xchg
call
out
mov
add
addr16
push
cmp
pop
jmp
mov
cmp
popa
push
adc
pop
sahf
cli
fldcw
dec
(bad)
sub
push
or
jge
adc
mov
and
cwde
push
out
and
sbb
call
pop
rcr
fwait
jae
sub
xchg
loop
jnp
leave
loop
das
icebp
dec
(bad)
sub
xchg
outs
cmp
daa
mov
in
adc
push
mov
xor
inc
fs
pop
(bad)
pushf
xchg
stos
jg
mov
xor
fwait
push
and
imul
dec
(bad)
out
dec
repz
jnp
jb
pop
or
ins
push
mov
push
lods
das
out
xchg
mov
div
mov
mov
sub
test
dec
mov
jb
cmp
fstp
inc
add
jmp
sub
fisubr
mov
arpl
lods
push
pop
repz
pop
cmps
sbb
or
fst
push
into
lahf
inc
push
cmp
cdq
scas
repnz
mov
dec
fiadd
cmp
fsub
in
or
or
dec
(bad)
loopne
cmc
rol
dec
aaa
jecxz
fdivr
cmp
or
push
add
mov
ja
das
call
push
cld
es
jmp
cvtpi2ps
cmp
out
xor
out
lock
(bad)
call
pop
scas
mov
scas
pop
leave
and
daa
shr
sub
sbb
test
jle
push
enter
aam
jmp
cmp
or
or
mov
sub
jecxz
pop
mov
repz
inc
add
stc
aad
push
jmp
sahf
jmp
lea
ins
clc
pop
imul
outs
cmps
(bad)
jmp
cmps
and
xchg
out
pop
mov
icebp
(bad)
popa
push
mov
xchg
int
imul
add
jle
loopne
adc
shl
scas
pop
and
scas
cmp
int3
jno
out
and
push
fsubp
lahf
pop
call
clc
cwde
stos
fisub
arpl
xchg
mov
fcmovne
movs
jno
pop
cli
rcr
pop
or
fstp
sbb
hlt
cmps
setg
lods
ins
pop
push
lds
jae
xchg
nop
jne
mov
popf
iret
dec
jl
in
mov
sub
jnp
cld
movs
xchg
sti
pop
xchg
sub
pop
jbe
xor
sub
push
adc
bound
ret
or
(bad)
arpl
call
xchg
or
and
dec
call
inc
movs
les
mov
xor
clc
imul
imul
(bad)
(bad)
pop
add
dec
out
inc
cmp
jo
xchg
and
in
xor
je
movs
jl
cdq
push
outs
jmp
jmp
jg
out
repnz
push
shl
retf
int3
push
sbb
lods
sub
pop
iret
js
in
jnp
sub
jg
fild
imul
(bad)
repz
mov
mov
aad
mov
mov
cld
cmp
xor
imul
mov
cs
push
lods
test
mov
jns
sbb
push
inc
and
adc
push
jno
push
xchg
sar
arpl
add
retf
les
ss
xor
fucom
fmulp
add
bound
dec
lea
repnz
fidivr
jge
or
jmp
fs
xor
mov
push
inc
das
sbb
sub
idiv
lods
jne
mov
pop
pusha
stos
mov
push
dec
pop
(bad)
int3
addr16
mov
push
and
ror
mov
inc
scas
jo
pop
int3
repz
add
test
lea
xor
dec
and
aas
jle
mov
mov
pop
fmul
xlat
jge
mov
or
je
jmp
sahf
jae
lods
pop
inc
mov
adc
dec
mov
cdq
inc
rcl
stos
add
enter
dec
sti
outs
mov
xchg
out
fidiv
nop
xchg
hlt
mov
in
or
pop
loop
ins
dec
mov
mov
push
jmp
aam
jp
pop
test
push
into
mov
adc
sub
add
retf
fdivr
mov
xor
in
jge
sbb
cmp
add
cmp
sar
mov
in
sbb
push
popf
(bad)
jns
push
push
dec
sbb
out
xor
dec
xor
push
xor
(bad)
or
mov
aam
ja
adc
movs
jb
lods
loopne
mov
mov
and
(bad)
xchg
add
shr
inc
iret
(bad)
cld
mov
int3
out
pushf
xlat
data16
imul
xor
mov
in
sub
jnp
ret
mov
mov
and
sub
mov
call
fdiv
or
ins
(bad)
fcmovnu
cmp
scas
into
adc
pop
and
in
jecxz
fdivr
mov
xor
fidiv
(bad)
cwde
mov
mov
rcr
jne
mov
out
dec
jle
cmp
cmp
call
mov
pop
test
int3
shr
in
stos
lds
dec
sub
cmc
pop
in
dec
xchg
out
inc
fwait
sub
int
pushf
dec
jmp
mov
sub
cwde
jae
jmp
cmp
scas
jo
jmp
cdq
shl
fisubr
pop
dec
pop
fcmovne
aas
add
ficom
stos
fcmove
xchg
adc
or
dec
adc
(bad)
retf
jg
adc
mov
push
std
xchg
mov
addr16
retf
mov
jmp
cdq
mov
gs
pop
adc
and
xchg
jg
xor
ret
(bad)
dec
dec
jo
mov
sti
sub
or
mov
or
daa
rol
in
jb
xchg
push
sbb
nop
dec
mov
in
sbb
sar
mov
inc
mov
stos
mov
mov
rcr
(bad)
jns
in
inc
popf
cmps
scas
mov
outs
jb
cmp
movs
aam
je
popf
shr
push
hlt
adc
jl
std
ss
(bad)
shr
(bad)
scas
lods
imul
sub
pushf
adc
jnp
(bad)
sbb
out
dec
dec
inc
cmp
sub
out
cld
or
inc
iret
dec
dec
mov
loope
mov
dec
pop
test
or
repz
rcr
sahf
gs
fucomi
inc
adc
leave
xor
data16
fdivr
add
lds
pop
push
sbb
mov
call
(bad)
xchg
out
sar
xchg
inc
and
mov
jnp
leave
out
daa
sub
add
test
jecxz
(bad)
sub
mov
jp
pop
or
jno
cmc
int
(bad)
cwde
jg
jle
cmps
sbb
dec
movs
test
xlat
mov
mov
adc
pusha
jne
scas
pop
pop
jb
push
aam
mov
dec
retf
or
bound
add
add
pop
xor
jge
or
mov
dec
xchg
shl
inc
inc
pushf
dec
punpcklwd
cwde
aad
mov
in
sbb
ret
pop
dec
mov
(bad)
dec
pop
nop
mov
fsubr
fiadd
and
setge
in
test
cmc
shl
dec
adc
xchg
test
dec
or
pushf
icebp
xor
xlat
pop
cmp
fst
jae
scas
lock
and
loop
test
push
or
clc
lods
cs
fsub
xchg
loope
loop
add
dec
fmul
leave
in
and
mov
sbb
pop
mov
dec
mov
xor
lahf
xchg
pop
cwde
mov
cmp
mov
(bad)
clc
fdivr
cmps
call
shl
icebp
jg
sub
mov
jb
fucomi
cli
and
lahf
loop
dec
pop
xor
inc
lods
mov
ror
cmc
mov
push
sub
daa
out
jl
fiadd
push
fild
cmp
ss
int
xchg
inc
add
xlat
push
inc
movs
mov
mov
sti
mov
test
syscall
loope
xchg
pop
fiadd
fnstenv
dec
test
inc
cmps
lods
das
sub
and
add
inc
inc
or
cmp
(bad)
aad
retf
call
mov
or
adc
retf
movs
je
or
scas
pop
lds
and
lods
xchg
aam
xchg
mov
ficom
xchg
lods
jb
data16
cmp
out
jecxz
jo
mov
mov
dec
push
jecxz
xor
loopne
or
or
nop
rol
scas
and
and
inc
adc
pushf
xchg
sbb
ret
int
outs
sub
xchg
repz
cmps
mov
aaa
push
pop
sbb
mov
inc
out
pop
scas
xor
push
mov
lahf
mov
pop
sbb
jp
push
push
nop
loopne
sub
sti
ficomp
push
out
enter
daa
ja
dec
addr16
stc
mov
inc
sbb
xor
jb
xor
mov
add
push
ret
or
jle
or
push
or
enter
cdq
mov
enter
push
jmp
mov
pop
inc
sar
ror
ins
pusha
gs
xchg
outs
js
or
mov
push
leave
mov
ins
and
inc
jg
outs
jmp
add
jbe
fdiv
fwait
xor
into
adc
xlat
js
or
push
(bad)
cmp
push
jle
sbb
mov
inc
stos
push
jmp
jbe
dec
mov
push
enter
cdq
pop
inc
inc
mov
mov
into
mov
js
das
cmp
clc
stos
xchg
fwait
xor
mov
sbb
lods
aaa
add
or
mov
mov
dec
sub
adc
in
fsubr
sub
push
jno
mov
scas
(bad)
ret
lods
inc
pushf
xchg
lods
push
enter
mov
jnp
neg
call
arpl
sub
out
xchg
leave
out
dec
jle
sub
xor
inc
retf
fwait
xchg
jns
or
adc
lds
push
arpl
xchg
inc
jo
xchg
inc
adc
out
inc
fadd
and
mov
jge
retf
mov
xor
ja
stos
sub
fistp
mov
push
dec
mov
dec
cmps
or
or
mov
icebp
scas
inc
and
sbb
sub
sahf
stc
and
push
stos
mov
ret
add
xor
jge
out
sbb
icebp
cmps
jle
cwde
or
add
jo
and
pop
pop
outs
xlat
mov
xchg
jle
fimul
dec
mov
xor
mov
stos
imul
xor
xchg
adc
add
xor
jge
push
xor
rcr
out
sar
(bad)
and
xchg
and
div
push
sbb
xlat
pusha
je
xor
in
imul
and
inc
fisubr
mov
mov
push
inc
dec
lods
pop
aam
or
shl
neg
pushf
xchg
add
int
leave
(bad)
gs
int
repz
push
rcr
repnz
stos
xor
loopne
xor
adc
(bad)
add
imul
mov
repz
dec
ins
xor
inc
js
pop
xor
push
call
mov
inc
sti
cmp
xchg
inc
jbe
push
pop
add
mul
push
jl
clc
mov
ds
(bad)
cs
not
cli
mov
jge
cdq
jb
mov
gs
scas
outs
add
ds
nop
fldcw
fdivr
(bad)
jmp
cmp
mov
test
push
cdq
mov
add
sar
pop
cwde
or
sbb
cmp
mov
mov
inc
sbb
into
jle
inc
int3
rep
ins
xor
pop
aaa
jae
add
out
sbb
cmps
cs
jge
or
popa
dec
add
sub
and
sbb
add
and
sbb
jg
sbb
shl
les
inc
jmp
aas
js
push
addr16
shr
and
mov
ror
jns
inc
cmp
in
mov
dec
and
mov
cld
jo
sar
retf
push
js
pop
repz
and
mov
test
ds
imul
loop
ins
pop
xor
(bad)
(bad)
dec
ret
dec
outs
inc
push
cmp
ins
and
jnp
jp
cmp
jp
push
retf
pop
cwde
idiv
mov
mov
neg
pop
cmp
fdiv
mov
push
cmc
aam
fistp
pop
pop
out
push
xchg
(bad)
jmp
loope
not
or
mov
outs
mov
repnz
(bad)
push
jl
inc
xor
cmp
jge
cmc
jle
nop
or
hlt
sbb
mov
rcl
sbb
push
adc
fld
cmps
push
sbb
pop
jmp
pop
popf
pop
out
retf
jb
mov
sbb
inc
shl
scas
outs
mov
add
xchg
fsub
push
(bad)
stc
or
shr
mov
xchg
sbb
lds
addr16
jnp
aam
retf
xchg
push
push
shr
xchg
mov
repnz
push
sbb
jle
sub
cs
xlat
lahf
repnz
imul
cmp
gs
shl
jno
inc
xchg
lahf
out
loope
jg
ja
fisub
pop
call
lock
xchg
lds
xor
cmc
push
nop
push
or
movs
mov
lods
pop
out
in
mov
add
push
jp
gs
xchg
(bad)
mov
mov
pop
xchg
xor
imul
jne
pusha
fisttp
mov
sar
cmp
je
pop
xor
arpl
lods
jbe
adc
ins
jmp
xor
push
jne
mov
test
pushf
test
inc
sahf
(bad)
xor
ret
xor
xchg
int3
ficomp
movs
cmps
push
xchg
mov
jmp
movs
sbb
xchg
dec
pushf
push
add
and
xchg
int
retf
mov
push
call
xchg
fcomp
sbb
cmp
test
push
clc
jp
and
sbb
inc
pop
xchg
jne
ret
lahf
lahf
inc
mov
arpl
in
test
fdivrp
(bad)
dec
sub
mov
(bad)
fld
popf
clc
ds
mov
jmp
inc
fwait
or
(bad)
add
test
push
inc
dec
mov
mov
mov
cdq
out
mov
inc
cmp
dec
xor
clc
adc
xchg
and
cmp
imul
mov
sar
gs
adc
xchg
mov
std
sub
jo
xor
sbb
data16
and
or
iret
xor
mov
hlt
xchg
or
mov
jle
out
inc
fstp
push
add
push
pop
(bad)
arpl
data16
xchg
mov
inc
or
stc
pop
daa
sbb
aas
fst
js
addr16
cmps
pop
inc
xor
in
mov
bound
js
fucomp
xchg
out
xchg
bound
retf
cmp
fistp
jmp
sbb
pop
sbb
push
sti
imul
icebp
sbb
movs
test
push
pop
push
daa
pop
jnp
cmp
pusha
out
movs
mul
adc
test
add
out
imul
sub
xchg
jg
addr16
jle
mov
cli
sti
push
cmps
mov
loopne
push
sti
outs
add
test
retf
pop
xor
addr16
int3
mov
les
sbb
pop
mov
adc
arpl
jle
pusha
adc
lods
out
out
mov
cmp
pop
pushf
(bad)
and
and
test
pop
sub
jno
jecxz
and
pop
adc
xor
mov
rol
sahf
fisttp
movs
ins
je
arpl
xchg
pop
pop
movs
scas
cmps
jns
mov
fld
mov
outs
xor
pop
sub
test
sbb
sbb
lds
dec
xchg
jl
pop
(bad)
je
and
leave
xchg
rcr
test
nop
xchg
dec
fnstcw
pop
enter
pop
adc
xchg
sub
dec
enter
pushf
out
cmp
dec
faddp
sbb
adc
movs
fdiv
jae
jae
aas
sub
rcr
mov
out
ja
ret
in
shl
popa
cmp
adc
xchg
xchg
pop
xor
pop
add
enter
sti
repnz
lock
mov
scas
ror
out
ss
pop
cmp
sbb
outs
mov
ror
cmps
shl
clc
mov
mov
test
mov
inc
icebp
sbb
into
jmp
sahf
aas
imul
jne
lea
iret
fs
add
pop
cmp
test
ds
xchg
retw
ins
stos
xchg
inc
and
stc
jle
adc
sub
mov
adc
cmps
daa
lods
mov
sub
pusha
retf
dec
or
int
xchg
pop
cmp
enter
jp
jmp
adc
mov
inc
push
hlt
pop
cmp
jb
test
mov
loope
movs
sub
in
test
aad
mov
adc
xor
or
xor
mov
push
jecxz
fwait
lds
mov
xchg
xchg
mov
test
add
sub
jns
sbb
mov
dec
iret
retf
mov
inc
mov
into
sti
ins
repnz
jmp
fdiv
in
stos
jle
fs
popa
fisubr
lahf
aad
je
dec
mov
or
inc
popa
pop
add
inc
bound
leave
and
(bad)
jl
mov
dec
movs
int
add
lock
mov
jae
cwde
dec
jno
data16
iret
test
jb
aad
sbb
retf
in
enter
std
sub
add
cmp
sbb
or
xchg
retf
pushf
push
(bad)
sub
mov
loope
xor
cdq
add
jmp
shl
inc
mov
lds
push
movs
mov
adc
cs
cwde
fimul
jmp
and
fwait
inc
xchg
push
push
mov
xchg
imul
sub
add
imul
jnp
scas
or
xor
cdq
retf
leave
mov
ret
shr
(bad)
aam
daa
mov
shl
loope
xor
lods
mov
in
sti
fld
pop
lds
popa
cmps
addr16
xchg
movs
ins
outs
in
inc
and
xor
stos
pop
pop
inc
cmp
or
iret
mov
sbb
out
jp
mov
out
inc
fwait
aam
mov
cmp
in
jmp
repz
sbb
mov
push
mov
jnp
add
call
mov
and
mov
mov
ja
xor
cld
mov
mov
in
test
clc
push
cs
pop
dec
fild
mov
pop
and
add
jmp
hlt
hlt
inc
xchg
ja
fimul
xor
int3
jl
stos
xor
cdq
dec
mov
inc
pop
repz
xchg
outs
push
sbb
jle
call
dec
sti
push
jp
jge
mov
push
cmps
and
cmp
mov
ror
and
xchg
cmp
fisttp
ret
ins
jl
std
mov
std
xchg
mov
inc
add
inc
push
pop
test
xor
push
jns
mov
sub
push
popa
jmp
pop
inc
push
and
call
outs
cwde
sub
sub
int3
jle
pop
movs
repnz
push
sbb
or
jmp
pop
sbb
jo
je
(bad)
dec
imul
retf
data16
test
add
add
mov
pop
jmp
retf
dec
dec
push
outs
adc
fiadd
or
(bad)
fst
es
cmp
pop
cmp
jnp
dec
in
xchg
cmps
shl
iret
fcomp
fs
pop
nop
retf
test
icebp
stos
pusha
and
mov
sbb
xor
popf
ret
fs
out
pop
(bad)
shl
shl
mov
inc
es
loope
in
jg
inc
push
and
sub
push
add
push
hlt
xchg
clc
test
ret
add
mov
inc
add
lahf
xor
cmps
clc
imul
fistp
outs
je
jb
(bad)
ret
lock
push
data16
pop
push
cmp
sbb
ror
push
out
or
jl
sbb
jmp
sar
std
test
test
dec
test
push
sub
nop
nop
mov
mov
repnz
or
mov
push
mov
lea
jmp
push
aas
imul
lahf
fstp
jmp
mov
xor
jp
stc
scas
mov
xchg
scas
or
not
fisub
test
inc
jb
or
sub
not
ret
mov
les
gs
movs
mov
or
cwde
or
sbb
cli
push
and
lods
bnd
shl
xchg
lods
pusha
loope
mov
or
rcl
push
pop
js
lahf
sub
xor
jae
jno
fidivr
mov
or
outs
lea
cmp
stc
or
fadd
jp
jno
jmp
pop
repz
ds
cmp
and
or
imul
xlat
sub
or
push
mov
sub
adc
inc
dec
jl
pop
jne
mov
sub
fsubr
ror
hlt
jo
out
lock
dec
std
and
adc
loope
inc
popf
out
xor
scas
xor
movs
stc
xchg
push
and
ss
inc
cmp
xlat
xchg
add
(bad)
cmc
xlat
je
sbb
push
ficomp
cmp
dec
push
xor
or
movs
xor
cli
aas
shl
call
pop
mov
test
fsubr
sub
call
mov
mov
mov
inc
std
xchg
inc
out
push
stos
cmps
push
out
xor
xchg
es
xor
push
ja
in
std
adc
pop
mov
push
pop
adc
sub
aaa
mov
cmp
movs
jmp
or
test
sbb
inc
fmulp
ins
cmp
mov
xor
pop
mov
adc
call
rol
rcl
sub
push
inc
mov
int
jae
mov
rcl
cmp
and
icebp
sub
add
jmp
pop
test
push
jecxz
xchg
inc
aad
(bad)
cmp
int
mov
sar
or
repnz
mov
ins
jp
inc
ds
gs
aas
scas
push
in
pop
mov
into
inc
lods
inc
pop
inc
xlat
aad
xchg
push
stos
cmp
push
mov
xchg
and
scas
push
icebp
sbb
mov
xor
cld
or
gs
nop
xchg
pop
xor
es
rcr
sbb
scas
push
ins
sub
add
iret
cmp
cmps
push
gs
xchg
inc
or
test
pop
cmp
push
dec
loop
add
sar
xchg
xchg
bound
mov
sbb
inc
ss
pop
clc
test
xchg
mov
dec
ror
mov
sub
aam
cmp
mov
sbb
mov
cmp
jecxz
stos
mov
adc
fbld
or
imul
movs
xchg
scas
pop
shl
sbb
mov
popf
(bad)
push
xor
cwde
add
and
xor
sub
sbb
xor
add
inc
mov
inc
neg
adc
or
xchg
movs
stc
lea
and
(bad)
int3
fmul
mov
jb
jmp
fst
xchg
ret
xchg
lds
mov
sti
push
and
mov
ins
cmp
cmc
sbb
dec
pop
aad
and
(bad)
bswap
int
sbb
xor
fld
push
or
add
into
(bad)
(bad)
sub
cmps
iret
jb
hlt
dec
inc
test
addr16
dec
lods
shr
arpl
adc
shl
daa
loope
lahf
xchg
out
inc
sbb
jns
jp
mov
cmp
xor
xchg
jno
imul
std
add
sub
cdq
cmc
jp
inc
jo
ins
or
xor
sar
and
sbb
xor
loop
enter
hlt
icebp
push
pop
inc
pop
and
or
loop
pop
out
outs
test
push
xchg
xchg
adc
fsub
push
shl
cdq
(bad)
in
aaa
add
icebp
or
mov
test
jp
shr
mov
dec
outs
out
mov
xor
(bad)
mov
xchg
cmps
xchg
jmp
xchg
rol
rcr
sub
add
imul
xor
sbb
mov
arpl
adc
in
pop
pop
jge
retf
dec
xchg
push
call
adc
popa
dec
cmp
dec
jb
xchg
mov
dec
dec
test
fnstcw
mov
js
fdivp
pop
sahf
jp
loope
cmp
daa
cwde
mov
pop
jp
daa
push
arpl
jge
cmp
dec
movhps
adc
les
mov
movs
xchg
enter
inc
add
shr
ficom
(bad)
ins
and
test
addr16
jecxz
jp
test
adc
les
inc
popa
cmps
fsubr
test
test
dec
sbb
jb
inc
out
pop
(bad)
stos
data16
retf
scas
mov
pop
ins
aad
stc
adc
mov
lods
add
lock
inc
out
outs
bound
call
cmp
xchg
mov
inc
fninit
scas
pushf
mov
scas
sbb
ret
aas
sti
inc
mov
sub
out
aad
in
fcomp
bound
popf
jns
sahf
fucomp
(bad)
jmp
cmp
xchg
pop
stc
adc
xor
push
inc
cmps
mov
lds
aad
inc
jb
jle
pop
and
pop
repnz
sub
xchg
push
imul
push
out
push
and
jmp
lods
mov
loop
std
ret
ins
add
in
xor
xchg
xchg
mov
es
shr
adc
scas
cmp
ins
pop
add
in
movs
inc
push
and
sbb
adc
pushf
xchg
mov
jge
adc
adc
sbb
cmp
mov
(bad)
(bad)
movs
xlat
out
pop
pop
cs
jb
dec
sbb
(bad)
(bad)
(bad)
dec
dec
dec
push
scas
ins
jae
sub
adc
xchg
pop
sbb
dec
mov
rol
test
scas
lock
cmc
mov
(bad)
inc
sbb
ins
mov
ins
in
fdiv
jp
(bad)
lods
jle
lds
scas
jae
mov
(bad)
push
mov
outs
call
cld
cmps
mov
pop
inc
push
js
in
ja
iret
or
pop
dec
rcr
mov
(bad)
adc
xor
nop
retf
jp
sbb
mov
mov
sti
loope
sahf
leave
xor
jne
shl
pushf
pop
cmp
inc
inc
inc
and
sbb
loope
and
sbb
nop
and
dec
xchg
popf
(bad)
mov
retf
aas
cld
jns
mov
push
fdivr
xor
outs
into
adc
mov
repz
push
adc
dec
push
xor
in
xor
sub
xor
in
sahf
rcr
mov
sbb
or
(bad)
xor
and
ds
dec
(bad)
test
leave
lea
jg
dec
dec
mov
leave
pop
sbb
push
mov
jmp
or
inc
push
retf
jge
outs
or
out
mov
sub
push
std
cmp
stos
push
int3
mov
scas
lahf
jb
lods
mov
adc
inc
call
adc
pop
call
push
sbb
bound
shl
dec
fwait
pop
xchg
or
dec
push
mov
inc
sbb
push
adc
mov
push
adc
add
loopne
add
(bad)
idiv
hlt
adc
xchg
or
sar
mov
or
xchg
dec
pop
arpl
adc
sub
pop
scas
(bad)
loope
ins
fstp
push
(bad)
push
sbb
enter
xchg
les
mov
inc
pop
push
push
shl
fstp
mov
dec
popa
clc
loopne
add
aaa
icebp
jo
fsubr
ficomp
lea
sub
dec
iret
lods
xchg
data16
pop
daa
xchg
imul
(bad)
loopne
lds
or
mov
fcomp
cld
add
sub
loop
retf
test
je
mov
cmp
inc
leave
jmp
push
sahf
sub
ret
cmp
and
loopne
fnstsw
fwait
popf
mov
ret
aas
jmp
pop
xlat
int
test
ret
jmp
jbe
lods
jle
and
push
lods
sub
ret
icebp
call
mov
repnz
ror
fsubr
gs
adc
mov
(bad)
es
repnz
fwait
adc
xchg
push
mov
imul
inc
mov
sbb
hlt
pop
xor
shl
add
leave
xor
ins
mov
pop
push
cwde
ret
mov
dec
cli
pop
ja
sahf
test
mov
xchg
push
out
xlat
fld
dec
cmp
scas
and
xchg
imul
mov
inc
sahf
pop
xchg
mov
outs
jg
mov
in
fwait
xor
fistp
jl
aad
push
cmp
jbe
retf
push
gs
clc
popf
fwait
cmc
inc
pusha
bswap
aad
call
mov
cld
pop
xor
inc
mov
jnp
fmul
push
inc
(bad)
jns
xor
mov
or
adc
xchg
shl
int3
sti
test
push
jle
mov
and
leave
xor
test
das
mov
push
shl
loopne
mov
push
into
ss
sbb
inc
jecxz
pop
pop
ret
pop
loop
pop
or
cmp
pop
aaa
lds
out
xchg
lods
fmulp
jo
fisttp
jno
sbb
sahf
call
inc
add
jge
mov
test
call
lock
int
dec
in
in
cmp
aad
jecxz
pop
pushf
inc
outs
jl
mov
sbb
ins
dec
dec
inc
(bad)
jmp
call
loopne
inc
je
arpl
jmp
add
or
cmp
push
push
clc
loope
(bad)
mov
jg
dec
mov
invd
mov
and
(bad)
in
adc
mov
cli
ret
shl
aam
imul
lea
xchg
mov
shl
jecxz
adc
aaa
das
xchg
cmp
lea
cvtps2pd
sub
and
mov
mov
movs
into
loope
imul
cld
sub
sbb
ror
out
push
lea
inc
(bad)
mov
dec
shr
dec
inc
xchg
mov
es
jmp
xor
jmp
add
push
lock
jle
or
stc
dec
xchg
ret
sbb
or
lahf
xchg
ja
mov
push
mov
mov
les
jbe
dec
jg
mov
in
(bad)
loopne
sahf
test
bound
mov
and
mov
adc
adc
(bad)
iret
and
add
retf
out
sub
rcr
inc
pop
xor
mov
test
mov
mov
ret
xchg
jg
ds
repnz
out
ja
pop
pop
sub
mov
xchg
call
sub
push
(bad)
ins
movs
in
out
jo
and
push
sar
dec
xor
(bad)
imul
and
mov
add
sub
sbb
fstp
push
shr
lods
mov
mov
push
test
repz
sbb
stc
and
or
fimul
adc
in
cmp
jp
cmp
adc
scas
loope
cmps
and
and
cmp
xchg
cs
or
adc
imul
into
fidiv
mul
pop
ror
dec
xchg
into
out
mov
sub
out
mov
mov
data16
pop
cmps
cwde
sub
call
loopne
mov
mov
jne
scas
mov
push
add
mov
push
pushfw
mov
pop
stc
jne
inc
ficom
aas
mov
popa
mov
pop
cwde
(bad)
or
xchg
mov
push
inc
add
jmp
imul
fiadd
sub
jge
cmp
bound
mov
jae
push
movs
inc
jne
(bad)
retf
xor
jmp
lods
ret
add
cdq
pop
inc
xchg
aaa
nop
adc
aas
pop
jo
push
gs
add
das
push
xlat
add
lods
jle
and
out
fs
jns
out
loopne
mov
fsub
lds
aad
ret
jbe
shl
sahf
sub
sbb
(bad)
fcom
jl
push
mov
sbb
dec
(bad)
loop
fwait
push
cmovnp
std
rol
arpl
dec
cmp
ret
mov
mov
cwde
mov
gs
inc
test
and
push
iret
repz
mov
mov
inc
mov
sbb
dec
xchg
std
mov
iret
jg
es
add
mov
loop
add
aam
ret
pop
or
or
or
inc
repnz
out
ds
fdiv
add
jmp
call
cwde
das
retf
ret
xlat
loopne
mov
mov
cdq
adc
or
pop
add
mov
fdiv
loopne
mov
in
push
lds
xor
add
sbb
shr
xchg
out
je
jmp
add
mov
movs
add
xchg
cld
retf
mov
mov
pop
xor
add
cmp
mov
repz
aad
sbb
jo
ud0
inc
mov
inc
pop
mov
pop
mov
xlat
inc
(bad)
mov
cmp
jne
mov
push
sbb
hlt
je
ss
sbb
leave
jno
lock
clc
(bad)
inc
cmc
or
mov
jmp
jmp
pop
je
hlt
mov
jl
xor
pop
sbb
mov
shr
xchg
add
imul
scas
popa
(bad)
mov
loop
scas
clc
and
mov
cwde
jnp
xor
jmp
or
push
arpl
push
mov
xor
cmc
and
mov
fmul
jge
cwde
int
mov
cwde
rcr
xchg
test
hlt
cli
imul
jb
mov
mov
test
cmp
push
mov
dec
mov
imul
fdiv
jne
mov
mov
sbb
jp
lods
std
shr
jmp
sub
loopne
xlat
adc
stos
add
fstp
mov
jecxz
xchg
pusha
not
adc
sub
lock
jnp
mov
aad
into
(bad)
loop
cwde
xor
rsm
imul
std
outs
(bad)
mov
shr
lods
xor
ja
movs
inc
fdiv
stc
mov
(bad)
jmp
rcl
inc
frndint
leave
int
cmp
(bad)
jmp
fcomp
iret
push
push
(bad)
jl
jne
pop
iret
sbb
loope
stc
leave
not
ror
mov
ret
out
(bad)
fsubr
daa
test
ffree
mov
in
iret
xchg
xor
std
bound
fwait
std
clc
gs
xchg
int3
push
and
push
out
rcl
pop
push
pop
pop
das
cmps
inc
lahf
cmp
sar
sbb
sub
(bad)
lock
xchg
pop
out
mov
push
sti
add
jae
cmps
sub
arpl
loopne
fnstsw
call
push
inc
add
or
cmp
mov
adc
out
mov
clc
add
xor
add
ja
gs
sub
jmp
jmp
rcl
push
fs
jecxz
in
pop
movs
cs
or
mov
cmc
add
retf
in
call
jnp
adc
adc
and
or
enter
lods
jp
xor
push
sub
das
sub
mov
scas
pusha
pop
gs
(bad)
cmp
mov
in
test
shr
out
or
(bad)
ds
movs
outs
cmp
call
(bad)
cmps
xchg
data16
sbb
sub
cmps
push
int3
rcr
sub
mov
push
fisttp
aas
out
popa
xor
pushf
dec
pop
rcl
cld
xchg
and
leave
lods
into
cmp
cmps
lea
push
jge
sbb
inc
fs
or
pop
sub
cmp
and
xor
ja
fcmovnbe
iret
inc
push
(bad)
push
call
sbb
dec
(bad)
fisttp
cdq
or
inc
mov
adc
and
(bad)
fdivr
jne
int3
mov
jno
(bad)
jmp
jmp
(bad)
mov
mov
jb
loopne
mov
cwde
retf
pop
mov
pop
xchg
es
cmp
shl
push
outs
fild
or
retf
cmc
in
xchg
into
retf
scas
es
fwait
lock
jl
dec
pop
in
mov
push
xchg
jmp
push
mov
jge
or
loopne
not
aas
pop
or
das
inc
call
daa
push
test
sar
or
bound
xlat
dec
(bad)
adc
fisub
add
loope
call
or
lods
and
cmp
fisubr
and
xchg
test
mov
add
and
sbb
in
shl
mov
xchg
(bad)
push
je
push
ret
sbb
jg
fs
pop
inc
pop
and
pop
or
dec
cmp
aad
dec
add
loop
ins
or
mov
and
mov
xchg
push
push
das
mov
sbb
cs
int3
cmp
or
in
pop
push
test
mov
xchg
push
jp
push
inc
fst
pop
(bad)
mov
pop
jmp
add
loope
ret
mov
sbb
xor
ret
mov
fnsave
dec
mov
jb
mov
cmp
(bad)
mov
pop
push
test
in
cmp
push
inc
test
rol
or
(bad)
test
jbe
dec
cmps
out
push
lods
or
inc
mov
in
out
mov
xchg
dec
add
not
jmp
jbe
push
mov
daa
sti
mov
fist
dec
repz
pop
push
xchg
sub
or
sahf
mov
mov
ins
sub
pop
jne
sar
mov
dec
mov
(bad)
in
cs
pop
(bad)
cmp
xchg
sub
add
jg
pop
ret
xchg
jp
adc
jge
sbb
pop
pushf
clc
fdivr
xor
xchg
push
jb
call
cli
jmp
pusha
xor
mov
xchg
pop
pop
iret
mov
mov
xlat
retf
fisub
loopne
dec
jmp
sbb
cmps
mov
cld
fsubr
ins
sbb
mov
nop
and
cld
stc
test
hlt
and
ins
or
lahf
dec
sahf
xchg
jg
inc
cpuid
and
popa
loope
push
outs
mov
inc
dec
gs
aad
imul
mov
cmp
xchg
inc
cld
(bad)
and
xor
jae
aad
and
ja
mov
mov
xor
bound
xchg
outs
add
shl
pop
cld
fcom
add
jmp
cmp
sub
stos
sub
mov
xlat
jne
(bad)
adc
ret
mov
dec
inc
outs
ror
sahf
jle
mov
or
std
and
adc
and
sahf
add
scas
fstp
inc
outs
add
pop
fcomp
fcmovne
jae
jmp
jmp
mov
jae
sbb
(bad)
jmp
test
xor
(bad)
pushf
cmp
adc
cwde
les
(bad)
mov
ins
sub
adc
popa
dec
out
dec
cmc
jmp
adc
aaa
(bad)
or
stos
dec
dec
inc
xlat
test
and
add
add
aaa
loope
stos
dec
sub
adc
outs
add
xchg
popf
push
mov
cld
test
loopne
inc
push
(bad)
xchg
jno
sahf
icebp
call
test
add
cmp
bound
or
aas
call
cmps
int
int
push
inc
or
mov
cld
rol
mov
jnp
or
bound
mov
inc
push
fisub
pushf
push
push
or
mov
sub
sbb
adc
pop
stos
or
(bad)
mov
aaa
inc
fnstenv
cmps
test
pop
and
jae
inc
jno
mov
les
(bad)
or
push
jmp
and
mov
mov
push
gs
loopne
pop
into
xor
sbb
jge
in
lds
shl
arpl
out
mov
pushf
xchg
mov
dec
push
repnz
and
bound
lods
add
cs
into
test
dec
xchg
out
xchg
pushf
hlt
cmps
lods
in
not
inc
rcr
cmp
repz
mov
xor
sub
lock
pop
into
adc
aas
jl
out
mov
imul
dec
jle
xor
xor
mov
daa
mov
sbb
outs
sbb
dec
loopne
or
neg
ins
(bad)
sub
dec
cmp
idiv
mov
sahf
jo
or
daa
addr16
into
mov
mov
jae
pusha
retf
cmp
ins
ror
dec
inc
cli
or
and
movs
sub
inc
inc
icebp
lds
or
jmp
adc
push
inc
pop
pop
test
movs
jg
leave
xor
adc
push
idiv
gs
xchg
dec
pushf
fstp
int3
xlat
in
rol
inc
push
ins
(bad)
mov
push
(bad)
mov
aaa
xchg
sub
outs
inc
or
out
lds
push
arpl
fxch
cs
hlt
sub
adc
les
xchg
icebp
je
lock
icebp
cdq
movups
adc
jp
cwde
fs
push
rcr
or
or
(bad)
bound
jbe
out
cmc
dec
mov
push
mov
lods
cmps
mov
pop
aas
or
inc
or
movs
out
mov
inc
out
cwde
push
cmp
gs
imul
cmp
(bad)
cli
cmp
push
mov
add
retf
scas
imul
mov
inc
push
add
(bad)
cld
rcr
pop
mov
xor
call
add
cmp
pusha
inc
jge
xchg
xchg
sbb
push
mov
xor
sbb
arpl
(bad)
adc
inc
lods
adc
mov
xor
test
sub
repz
mov
inc
adc
ret
nop
test
fldcw
test
arpl
pop
push
mov
test
js
stos
add
jle
popa
pop
test
ret
arpl
push
mov
sub
adc
(bad)
(bad)
shr
mov
cmps
(bad)
push
scas
jno
mov
in
cmp
cmps
xchg
add
dec
mov
push
out
(bad)
in
sbb
test
xchg
cdq
and
sub
xchg
cwde
xor
mov
push
icebp
aas
inc
adc
add
push
fcomp
outs
les
xchg
fdiv
or
mov
push
cmp
push
inc
call
jne
xchg
loope
cdq
adc
fsubrp
add
(bad)
pushf
fucomip
(bad)
jmp
inc
cwde
mov
cwde
jge
sbb
adc
adc
pushf
loopne
loop
loop
adc
or
(bad)
or
sbb
mov
les
ds
or
or
jb
dec
sub
push
or
pop
dec
mov
cmp
mov
xchg
xchg
dec
adc
xchg
mov
inc
(bad)
cmps
mov
int3
out
(bad)
ret
cmp
push
fild
pop
xchg
jns
fsub
std
inc
cmp
push
lods
pop
(bad)
pop
or
push
and
das
es
rcr
pop
add
xor
push
jle
xor
mov
sbb
js
xchg
inc
mov
test
jne
mov
jg
(bad)
loop
ret
into
inc
mov
imul
sbb
(bad)
push
ret
xor
(bad)
jle
shl
ret
call
dec
xchg
sub
pop
xchg
dec
leave
imul
mov
lahf
pop
xchg
shl
mov
rcr
push
mov
pop
or
arpl
inc
mov
mul
dec
outs
ins
adc
mov
mov
mov
jmp
cmp
add
sub
shl
xchg
pop
cmp
or
aam
pmulhw
mov
adc
call
sbb
push
xchg
add
mov
jmp
aaa
je
cs
in
xchg
test
push
push
adc
neg
test
not
sub
dec
jmp
push
movs
retf
xchg
(bad)
std
pop
scas
jmp
pop
pop
jge
dec
scas
sbb
jl
jecxz
push
out
sahf
loopne
fs
mov
data16
add
in
and
das
inc
jns
adc
xor
mov
cmp
loopne
mov
add
dec
shr
movs
jb
repnz
push
out
push
out
dec
jb
mov
int3
jmp
jns
xchg
imul
inc
outs
cmp
test
loope
sahf
or
xor
fmul
and
mov
add
mov
movs
aaa
ret
push
and
jb
jecxz
mov
nop
jns
push
(bad)
popa
pop
push
popa
xor
mov
(bad)
mov
jne
stos
xlat
jne
push
fld
push
and
neg
jg
cmc
lock
adc
mov
test
cld
lahf
dec
movs
out
sbb
call
or
ror
jo
dec
mov
fcomp
jl
mov
cmp
mov
movs
inc
adc
pop
das
popa
dec
dec
add
mov
push
mov
xor
aad
fld
sbb
inc
les
into
xor
xor
loope
dec
dec
cmp
mov
cmp
xor
ret
push
xor
xchg
fsub
xchg
inc
js
cmp
mov
push
fisubr
mov
ja
push
mov
shr
into
icebp
sub
ror
mov
xor
push
push
in
fwait
mov
pop
sbb
into
pop
mov
add
(bad)
loop
in
inc
push
push
sub
and
inc
or
test
pusha
(bad)
jecxz
and
xchg
aam
and
lods
mov
xor
shr
jl
push
fldcw
push
jmp
test
outs
repnz
movs
retf
push
mov
and
popa
fwait
aam
sub
(bad)
clc
mov
adc
mov
add
scas
sub
mov
das
jb
fild
jmp
popa
and
xor
jmp
mov
test
or
mov
jb
fcmovnu
test
shr
sahf
(bad)
out
pop
shr
cdq
cmp
call
das
mov
xchg
and
ins
call
mov
fwait
shr
cmp
push
sahf
jecxz
inc
mov
jp
js
in
icebp
cmc
mov
cmp
cmps
push
sub
mov
and
xor
inc
adc
xchg
adc
daa
adc
cwde
movs
inc
xchg
and
stc
ins
lea
movs
sbb
push
jl
repz
cmps
add
jg
add
jp
jmp
mov
cli
aas
arpl
fidiv
rdmsr
inc
enter
or
sbb
out
sbb
adc
dec
movs
pop
ins
or
mov
pop
jmp
test
sub
lds
push
lea
movs
fs
sti
xlat
cld
or
mov
sbb
call
and
jg
icebp
sub
lds
xor
cmp
inc
repz
mov
adc
xor
xor
sar
mov
nop
nop
sub
or
add
bound
dec
(bad)
addr16
xchg
rol
adc
ins
dec
xchg
icebp
imul
mov
sub
stos
or
mov
ret
aaa
push
or
or
push
mov
test
(bad)
adc
mov
inc
push
mov
dec
fidivr
cli
push
jl
fcom
(bad)
int
test
sbb
sub
dec
addr16
jmp
mov
and
sar
fcomp
aad
mov
xchg
ror
out
xchg
cmps
xor
xchg
or
mov
mov
cli
mov
dec
movs
mov
and
sbb
inc
stos
mov
push
adc
push
sub
ficomp
pop
xor
(bad)
das
jg
push
test
add
loope
mov
ror
add
inc
jbe
xchg
jecxz
xor
ins
loopne
xor
lods
jge
pop
data16
loopne
shl
ficomp
daa
fidivr
mov
imul
dec
iret
mov
in
pusha
frstor
(bad)
fs
jno
xor
mov
cmp
mov
(bad)
(bad)
jns
js
mov
dec
mul
cs
(bad)
jge
cmps
je
fwait
mov
xor
retf
icebp
out
cmp
fild
movs
inc
xchg
aad
mov
(bad)
retf
test
inc
jo
dec
mov
sbb
sbb
in
dec
adc
jmp
jge
leave
aam
stos
icebp
fistp
adc
adc
lock
mov
movs
adc
int
push
rol
adc
jae
cmp
mov
push
retf
add
out
aaa
popa
pop
loopne
mov
sbb
xchg
cmp
mov
aad
inc
cmp
xchg
gs
sub
cmp
add
jmp
sbb
enter
mov
stc
lock
call
leave
cwde
repnz
lahf
dec
call
or
inc
cs
ss
jecxz
std
ret
mov
sub
loopne
popf
mov
cmp
sub
or
lea
push
and
mov
aad
stos
int
inc
xor
stc
jae
fstp
and
sbb
pop
cs
movs
and
mov
dec
rcr
jno
sti
mov
mov
ja
frstor
mov
mov
push
push
lods
nop
jg
xchg
les
add
dec
dec
(bad)
imul
jge
push
or
fdiv
dec
jmp
addr16
repz
sti
pop
xlat
mov
mov
adc
sbb
xlat
push
lahf
aad
(bad)
jecxz
hlt
push
scas
jmp
sbb
inc
sar
stos
je
sub
cmp
pop
push
ror
(bad)
sbb
dec
push
test
pop
iret
push
cli
cld
cli
scas
shr
pop
sbb
mov
aas
iret
pop
xor
push
icebp
outs
mov
jge
sbb
cmp
lahf
rcr
into
mov
sbb
movs
pop
fisubr
neg
fcomp
push
call
(bad)
mov
dec
and
inc
sub
sub
jae
js
retf
pop
call
clc
out
outs
repz
and
fstp
imul
sub
sbb
repnz
xchg
add
push
push
sbb
inc
(bad)
inc
not
mov
mov
xor
std
add
dec
mov
sub
dec
adc
push
push
xlat
out
adc
neg
aad
scas
inc
push
jmp
mov
js
adc
dec
lss
lahf
sti
or
add
jae
push
push
jg
loop
add
mov
add
push
dec
mov
fdivp
cmp
dec
std
retf
leave
xor
inc
test
xor
push
jp
push
lds
push
(bad)
fiadd
ja
xchg
jae
jle
mov
mov
mov
cdq
push
daa
cmp
inc
mov
push
mov
mov
inc
jg
mov
fcom
mov
pop
daa
mov
add
xor
mov
push
push
imul
fcomp
jno
arpl
out
sar
mov
adc
aaa
sub
dec
dec
fwait
cli
das
test
ja
pop
jbe
loopne
pop
js
xchg
jno
js
sub
or
mov
or
add
xor
inc
jno
mov
scas
cmc
and
sti
test
jecxz
(bad)
frstor
call
int3
in
add
adc
ins
stc
mov
es
call
jge
adc
pop
cli
popf
push
outs
in
lock
neg
aas
js
jne
test
(bad)
mov
ins
mov
xchg
neg
xchg
push
fmul
cmp
out
and
retf
hlt
jl
xchg
mov
cli
std
cwde
inc
out
addr16
adc
loope
sbb
mov
push
push
in
scas
in
(bad)
es
fstp
lock
inc
fadd
cmp
sub
lock
sbb
push
mov
mov
(bad)
jmp
jp
sbb
xchg
mov
int
sbb
sbb
aam
stos
jae
inc
cmp
into
cmp
xchg
sub
cmps
in
pop
clc
mov
hlt
lods
pop
dec
out
pop
dec
adc
pop
mov
sbb
xor
xlat
push
jecxz
cs
test
call
xchg
cwde
stos
add
mov
lock
test
das
cmp
hlt
js
mov
rol
fstp
stos
and
jne
sbb
mov
in
test
loopne
(bad)
shr
in
mov
js
mov
jns
push
movs
mov
or
gs
outs
push
pop
scas
dec
and
in
fwait
int
jmp
push
jmp
iret
ss
add
mov
adc
inc
xor
jo
or
shl
in
and
push
test
pop
dec
mov
inc
mov
add
ins
pop
dec
sbb
mov
inc
cmp
xor
dec
jo
data16
bnd
arpl
inc
adc
je
push
imul
mov
ja
and
adc
and
and
cmp
imul
lock
popa
push
cli
add
sub
call
mov
lds
loop
and
addr16
test
inc
xchg
test
cmps
aaa
in
jbe
ret
cmp
pop
push
in
pop
cs
jnp
push
cmp
ret
arpl
enter
sub
cmp
pop
xchg
scas
mov
cmp
addr16
test
in
call
adc
das
into
xchg
jne
mov
mov
push
sbb
fld
mov
jns
les
sub
test
int3
pop
add
call
cmp
scas
lea
adc
mov
jo
adc
ror
mov
nop
fadd
std
or
push
shl
mov
dec
add
sub
ins
in
adc
pusha
ds
xor
mov
add
sub
inc
mov
xchg
or
sub
rcl
test
arpl
mov
int
imul
ja
shl
aas
aas
icebp
fistp
addr16
inc
jbe
cmp
in
jbe
push
pop
cwde
add
lock
mov
mov
mov
ds
or
push
cmp
jp
nop
xor
fstp
push
add
shl
or
lods
leave
icebp
mov
xchg
jecxz
mov
pusha
(bad)
in
xor
js
cmp
pop
ins
sub
inc
xor
test
pop
push
inc
enter
dec
loopne
push
icebp
sbb
sbb
into
(bad)
repnz
add
fcomp
test
jae
inc
push
(bad)
and
ds
or
cdq
mov
loop
gs
std
retf
xor
push
mov
stos
inc
cmp
rcl
gs
(bad)
call
daa
adc
xor
nop
mov
vrcpps
arpl
push
outs
push
mov
dec
sti
ror
sub
dec
lock
es
js
neg
adc
dec
test
jo
in
sti
and
cli
sub
adc
adc
sbb
lods
sub
lock
ret
or
cs
pop
mov
pop
sbb
xor
std
or
cli
adc
sbb
fsubrp
pop
fldcw
das
jecxz
retf
and
aas
ret
int
jge
enter
cmp
cpuid
mov
std
dec
ss
cwde
jge
xchg
sbb
out
call
dec
cmps
or
test
out
cs
das
mov
fwait
mov
pop
and
add
jns
je
or
cmp
sti
push
xor
mov
loop
jo
push
or
jg
jecxz
pop
mov
or
imul
das
test
add
ja
test
movs
bnd
xchg
int3
mov
lock
inc
out
ret
test
and
(bad)
lods
fcomip
xchg
xchg
or
imul
xor
jnp
loope
jno
fs
hlt
lods
pop
dec
imul
push
(bad)
lock
(bad)
test
cmp
int3
push
aaa
push
fwait
push
mov
inc
cmp
xchg
test
retf
ror
cmp
xor
jp
sti
out
push
pop
shr
dec
push
enter
loopne
pop
push
outs
pop
icebp
mov
inc
xor
and
fbld
imul
push
repz
sub
js
es
sbb
icebp
test
fiadd
cmp
js
js
outs
cmps
mov
jo
stos
jae
dec
sbb
pop
scas
cmp
into
jge
add
and
test
stos
int3
xlat
lock
push
scas
xchg
xor
sub
and
std
inc
dec
icebp
sbb
pop
mov
pop
dec
into
and
ds
sub
out
xor
into
in
gs
cmp
popa
mov
(bad)
(bad)
popa
into
mov
xor
and
xchg
inc
add
aas
hlt
jmp
fisub
rcl
into
movs
adc
add
adc
and
mov
sub
stos
pop
push
pop
jle
mov
xchg
(bad)
xlat
xchg
(bad)
pushf
shl
(bad)
add
fdiv
adc
sub
ja
pop
sbb
dec
xlat
pop
fs
sub
jae
cmp
loop
add
iret
adc
add
inc
push
inc
inc
jne
int3
(bad)
adc
sar
movs
mov
out
test
pop
fwait
jecxz
and
imul
cmps
jmp
pop
mov
daa
mov
cld
imul
or
jne
push
pop
test
cmp
sbb
ds
test
jb
(bad)
jecxz
ret
and
xor
popa
rcl
ret
ret
stos
and
fld
ins
das
mov
(bad)
mov
outs
popf
push
xor
add
push
mov
fmul
in
movs
shl
daa
ror
cmp
ins
or
jecxz
xchg
sar
xchg
push
not
pop
push
out
add
or
out
cmp
clc
pop
fadd
fadd
sbb
cwde
in
sbb
rol
sbb
int3
aas
xor
xchg
shr
scas
cld
xchg
dec
jns
lahf
ror
imul
push
and
and
mov
mov
xchg
adc
sar
xor
xchg
inc
mov
retf
popf
out
es
xchg
out
cmp
test
sub
sub
and
sti
lock
pop
dec
test
push
pushf
jnp
out
stos
fidivr
jp
xchg
es
push
pop
sbb
xor
ds
ins
mov
mov
jbe
stos
pusha
xchg
loop
sbb
mov
loopne
mov
out
(bad)
arpl
pop
jg
repnz
jnp
xor
fdiv
mov
or
mov
outs
cmp
neg
xchg
dec
mov
inc
mov
es
ja
and
fwait
mov
mov
mov
cmps
mov
mov
(bad)
stc
ja
ds
xor
paddusb
mov
cmps
and
movs
nop
sbb
pop
cmps
mov
mov
adc
jae
push
cld
add
xor
jp
rol
mov
and
pop
sbb
add
push
outs
sub
and
and
dec
lahf
les
and
aad
sbb
pop
xchg
lods
fwait
stos
mov
add
fcom
adc
push
inc
jecxz
popf
dec
ss
pop
sub
clc
fstp
ds
add
push
push
movs
add
and
les
dec
leave
jmp
call
mov
js
aaa
sub
dec
cs
jl
push
stos
cmp
mov
test
hlt
jae
and
xor
mov
mov
test
loope
or
sub
mov
imul
add
push
ins
ret
fs
and
adc
sbb
sti
xor
sti
jae
cmc
jmp
mov
shr
inc
xchg
mov
lods
mov
and
push
aas
ret
pop
push
adc
mov
dec
int3
mov
das
inc
clc
lahf
inc
cmps
pop
sub
mov
in
xor
iret
xchg
adc
das
inc
jne
xchg
fs
sub
(bad)
cld
popf
hlt
int
add
call
mov
in
out
loopne
rcl
stos
fnsave
dec
dec
inc
test
das
mov
ins
out
out
push
sbb
sti
dec
loopne
xchg
cwde
mov
rep
cmps
imul
inc
movd
cs
jecxz
in
jae
out
sti
shl
cwde
pop
jb
adc
mov
inc
cdq
dec
lahf
test
mov
fnstenv
ror
call
ret
test
ins
sub
enter
hlt
cmp
sub
inc
dec
std
lea
mov
sbb
push
push
and
fsub
jp
adc
dec
ins
ds
jmp
mov
js
int3
mov
loope
inc
fsubr
sub
add
cmp
xchg
pop
outs
retf
int3
jno
xchg
cmp
test
jle
(bad)
pop
enter
jbe
mov
or
ret
test
les
cmp
pop
or
mov
dec
ret
jns
xor
int
retf
aaa
xchg
inc
mov
xor
mov
addr16
add
push
(bad)
mov
and
push
push
xchg
cli
xchg
adc
dec
stos
adc
sub
mov
pop
pushf
and
call
cmps
xchg
sbb
dec
clc
and
repz
sbb
add
sbb
loopne
sub
push
in
enter
push
dec
in
mov
mov
and
pushf
adc
add
pop
and
loopne
push
adc
cmc
add
(bad)
jle
mov
pop
jae
cwde
pop
pop
(bad)
rcl
sar
outs
inc
ins
je
test
mov
lahf
pop
bound
(bad)
cdq
lds
addr16
sbb
inc
add
in
mov
and
push
outs
bnd
(bad)
jp
mov
bnd
lds
fnsave
outs
jle
cli
jne
hlt
retf
iret
xor
xor
inc
ror
(bad)
and
dec
lfs
push
fsub
or
(bad)
mov
sbb
das
pop
test
mov
nop
inc
call
push
pop
hlt
repnz
sahf
(bad)
and
outs
add
mov
nop
and
ins
or
aaa
arpl
ins
in
out
fs
sub
push
jns
push
mov
push
xlat
jbe
cmp
arpl
imul
call
adc
test
sub
rcr
mov
outs
mov
pop
imul
xchg
pop
(bad)
mov
push
sub
in
xor
cmp
fmul
jmp
jb
xchg
lds
xchg
push
ret
adc
jle
leave
mov
jno
add
dec
xor
in
ds
jb
es
inc
sub
fmulp
bound
scas
or
imul
mov
es
push
cmp
cmp
movs
pop
cs
jge
push
dec
repz
daa
ins
imul
xchg
fisttp
cmps
mov
in
pop
mov
jg
or
add
daa
fist
or
cmps
sbb
jecxz
lds
fistp
fist
pop
xchg
mov
cli
mov
mov
inc
mov
xor
(bad)
fnsave
jnp
add
cli
aad
je
leave
push
shl
dec
or
mov
ret
lods
rcl
adc
inc
mov
jmp
call
inc
xor
adc
or
adc
pop
add
int
addr16
cmp
push
in
call
push
mov
cmp
cld
or
push
pop
loopne
out
jmp
lea
rep
mov
jp
(bad)
jae
push
scas
inc
cmps
imul
outs
stos
mov
fdivr
lods
mov
iret
jo
scas
cwde
mov
stc
mov
jno
lahf
and
inc
dec
mov
aaa
push
xor
aad
jo
pop
test
mov
xchg
arpl
mov
mov
pusha
dec
mov
pop
adc
ss
addr16
or
sbb
int3
ret
cmp
push
pushf
ret
xchg
push
mov
jns
cmp
es
sub
mov
data16
dec
pop
bound
dec
out
sbb
jl
or
inc
and
sbb
mov
cmp
add
mov
mov
dec
add
xchg
add
push
(bad)
mov
push
sahf
neg
cmp
mov
push
or
repz
aam
pushf
adc
adc
enter
pop
test
sub
and
nop
xor
aaa
mov
out
(bad)
out
mov
(bad)
cmp
pop
das
lods
cmp
(bad)
push
test
mov
jo
xchg
xlat
mov
ins
xor
mov
adc
cmps
aam
mov
pop
outs
jno
sub
cmp
sbb
sahf
xchg
lods
sbb
imul
inc
and
cmc
lea
fdivrp
xor
dec
loope
jle
movs
fs
mov
inc
mov
addr16
adc
xor
jb
inc
scas
jno
mov
movs
mov
jge
out
xor
add
xchg
into
ror
jnp
cdq
pusha
dec
retf
stos
xchg
test
push
ret
mov
stos
dec
cmc
into
mov
cld
call
fdivr
es
dec
repnz
sub
fcomp
push
idiv
bound
dec
xchg
add
stos
cli
or
jb
hlt
test
jbe
adc
pop
dec
bound
pop
test
ja
enter
retf
add
xchg
mov
imul
jg
pop
dec
outs
push
int3
inc
mov
mov
ror
scas
jns
int
xchg
inc
add
mov
rol
mov
(bad)
push
or
(bad)
imul
dec
out
ins
adc
xlat
and
and
push
dec
push
shl
sbb
lods
and
pxor
dec
aad
and
gs
out
jmp
clc
test
pop
clc
add
fnstenv
cmp
cmp
xor
rcr
or
ins
imul
push
cmp
push
stos
pop
jg
sbb
clc
cmp
add
retf
jmp
or
sub
shl
xlat
test
xor
cwde
xchg
dec
vmovupd
scas
cld
sbb
cs
inc
and
or
cdq
cmp
(bad)
scas
stos
push
inc
aad
sahf
lods
pop
pop
test
mov
repz
fsubrp
inc
call
sub
sbb
push
dec
push
push
mov
and
mov
cdq
aad
sub
lock
or
xchg
jns
mov
cmp
or
jmp
adc
aaa
mov
ss
sahf
xchg
fmul
out
in
add
jmp
data16
pop
inc
inc
or
sbb
ins
and
inc
add
jp
jmp
in
movs
out
and
sahf
mov
xchg
call
ins
popw
push
dec
inc
sub
mov
jg
pop
repz
ins
inc
push
or
mov
scas
or
test
jg
jp
sbb
xchg
xchg
sbb
(bad)
mov
mov
mov
jecxz
jo
jae
mov
pop
cdq
push
or
stos
jae
cmp
popa
sub
cmps
mov
or
jb
lods
fwait
imul
mov
loope
mov
leave
mov
or
in
or
bound
xor
jbe
jns
shl
push
mov
(bad)
in
sub
test
jb
pop
push
ror
adc
lock
add
cmp
into
push
lods
sbb
or
pop
mov
jo
hlt
or
sbb
mov
repz
adc
adc
inc
add
add
cmc
icebp
lds
cvtps2pi
mov
mov
jo
mov
xchg
and
imul
pusha
mov
jb
sbb
xchg
sub
repnz
or
mov
out
aaa
mov
enter
fs
shr
dec
jne
fcmovne
inc
seta
mov
adc
enter
and
pop
loope
dec
scas
xor
mov
mov
scas
add
out
mov
retf
mov
xor
in
adc
aas
xchg
cmc
cmp
jmp
jbe
pop
es
pop
mov
arpl
hlt
lods
xlat
out
imul
lods
mov
cwde
popf
mov
clc
lock
pop
inc
mov
sub
add
fs
cmp
mov
pop
aaa
sbb
sbb
enter
nop
arpl
dec
and
push
pop
pusha
lea
into
pop
add
cmovnp
xor
lock
loopne
fbld
xor
dec
std
enter
xor
mov
add
adc
xchg
arpl
cld
add
sahf
mov
jne
add
push
sbb
mov
mov
mov
add
dec
pop
clc
mov
push
push
xor
jno
das
dec
pushf
pop
cmc
push
xlat
mov
pop
fidiv
lahf
cmp
cmp
(bad)
loopne
mov
mov
dec
pusha
call
push
lock
pop
push
dec
jbe
call
std
pop
add
mov
jp
mov
and
and
inc
add
xchg
ins
scas
sub
pop
pop
or
cmc
pop
inc
data16
mov
sbb
outs
mov
into
scas
(bad)
aam
adc
cmovb
inc
pop
jno
cld
cmp
jg
dec
mov
mov
rcl
inc
rol
fbstp
xchg
adc
mov
ja
shl
addr16
mov
push
stos
adc
ror
add
mov
dec
jle
mov
sub
sub
ficomp
xchg
jmp
dec
cs
shr
lock
js
(bad)
ins
cmp
ret
and
loop
mov
pop
sub
jo
mov
inc
xchg
sub
jnp
addr16
xchg
dec
test
adc
jp
cmp
xchg
fsubr
or
xchg
jno
std
out
dec
popf
idiv
mov
gs
ficomp
xchg
cli
xor
and
mov
daa
(bad)
fild
int
jmp
pop
das
xchg
or
and
in
test
mov
mov
aaa
jno
ret
cmp
jb
jle
fs
stos
push
inc
fisttp
cmp
adc
or
xor
daa
push
dec
lods
fwait
or
adc
fwait
xor
das
and
dec
adc
mov
xlat
stos
jns
sbb
adc
xchg
xor
push
add
xor
mov
repz
ins
push
scas
pop
inc
add
pusha
add
mov
or
dec
dec
adc
sbb
fwait
or
jns
and
in
jns
pop
movs
mov
out
ja
(bad)
sub
mov
push
jbe
leave
loope
icebp
cld
fisttp
pop
and
cs
pop
loopne
dec
push
cli
adc
scas
jge
rep
das
push
and
int3
outs
pop
jl
(bad)
clc
stc
dec
jns
(bad)
mov
jno
xchg
adc
xor
xor
nop
scas
outs
pushf
cld
hlt
mov
mov
jmp
dec
mov
mov
test
ret
inc
push
sbb
fwait
pop
pop
push
mov
fdivr
outs
or
out
or
test
xor
sbb
test
data16
push
std
ror
push
lea
mov
push
pop
fstp
inc
hlt
cmp
sbb
int
icebp
pop
mov
fwait
js
sbb
lea
pminsw
sbb
not
fisubr
adc
cmovl
xor
pop
pop
fdiv
inc
cmc
stos
in
aam
xchg
push
leave
inc
cs
jae
cmp
dec
dec
dec
dec
jmp
push
clc
and
mov
mov
ds
ds
jge
and
xor
pop
(bad)
fadd
inc
push
mov
xchg
xlat
aas
mov
ins
scas
or
data16
imul
mov
mov
cld
mov
push
dec
repz
push
jmp
mov
push
cwde
repnz
jl
xchg
mov
mov
ins
sti
and
or
sub
popa
test
pop
pop
and
inc
sub
xchg
or
xor
mov
pop
std
sbb
adc
or
cmp
xor
mov
test
mov
xchg
into
sbb
movs
outs
lods
cwde
or
inc
fwait
cmp
sub
lods
sbb
ins
fistp
xchg
and
int3
stos
fld
idiv
jb
out
fs
nop
mov
xchg
stos
mov
jmp
popf
mov
and
cs
add
into
and
pop
rcl
ins
gs
icebp
imul
cmp
sahf
cwde
into
enter
mov
xchg
hlt
pop
cli
fprem1
cmc
mov
addr16
loope
retf
inc
inc
xchg
pop
adc
push
icebp
outs
lock
fiadd
sbb
das
pop
add
mov
rcl
pop
int
inc
mov
or
sub
jg
adc
mov
jp
mov
jmp
std
int3
in
ret
imul
test
adc
out
iret
ds
sbb
retf
cdq
xchg
cmp
adc
sti
mov
test
fadd
inc
sub
jno
or
fwait
inc
mov
push
xor
inc
adc
pop
ret
mov
push
call
mov
iret
pop
(bad)
cmp
or
imul
mov
pusha
push
mov
cmp
rol
xchg
sbb
fnsave
into
loop
mov
cdq
mov
jnp
inc
cld
shl
pop
stos
mov
add
jp
mov
mov
sub
push
and
es
mov
dec
lock
mov
mov
rol
stos
lock
jbe
cmp
dec
ror
stos
(bad)
pop
pop
test
dec
mov
fisub
je
xchg
arpl
pop
mov
push
jae
fwait
inc
adc
pusha
scas
cwde
push
out
in
add
mov
popf
xchg
aam
mov
call
stos
adc
test
lahf
ret
and
lods
xchg
push
lods
sub
fmul
ja
xor
addr16
xor
ins
dec
push
fisub
or
push
shl
mov
mov
and
mov
mov
adc
sub
(bad)
scas
and
shl
or
add
dec
ror
or
scas
(bad)
(bad)
mov
jg
(bad)
pusha
jo
cmps
add
nop
lds
jns
sbb
cli
push
lods
dec
movs
hlt
adc
jbe
inc
add
cld
cmp
cmc
in
pushf
inc
mov
cmp
sbb
jno
inc
lea
sub
sbb
dec
xchg
stos
jne
cmps
jle
sahf
push
dec
fistp
mov
outs
xchg
xchg
fidiv
aad
xor
inc
push
adc
ins
jae
out
cs
xchg
cmp
fnstenv
jnp
shl
cmc
and
lock
sbb
xchg
xchg
fmul
and
xor
cli
outs
or
sahf
fcmovu
adc
dec
ror
sahf
inc
not
xor
ret
cli
(bad)
lahf
jbe
es
xchg
and
sar
sbb
mov
(bad)
in
fild
xor
sbb
in
jnp
inc
jae
pop
xchg
add
jmp
inc
mov
or
aaa
pop
cli
out
nop
add
add
add
adc
dec
(bad)
and
cmp
shl
loopne
xor
hlt
lods
adc
scas
inc
xchg
aas
sub
cli
icebp
(bad)
dec
mov
neg
mov
jns
fcom
mov
movs
jp
repnz
ficomp
mov
mov
mov
test
inc
adc
dec
dec
xchg
mov
xchg
inc
(bad)
cwde
xor
out
push
jp
jge
mov
push
jmp
sub
outs
popa
popf
cmp
inc
movs
dec
sti
cmp
lods
xchg
adc
inc
mov
pusha
(bad)
popf
dec
lds
fisttp
iret
or
adc
shl
lea
nop
or
out
add
or
cmp
dec
out
hlt
(bad)
push
enter
ficomp
cmp
mov
mov
adc
cdq
jmp
out
add
out
fadd
and
cmp
inc
call
mov
push
fimul
rcr
sub
pop
pop
xor
pop
mov
outs
sbb
mov
out
stos
lods
(bad)
push
iret
adc
clc
cmp
outs
add
aaa
add
mov
outs
sbb
push
test
std
call
leave
dec
xchg
loopne
rcr
sub
cli
sahf
mov
push
xchg
popa
jecxz
pop
add
sub
and
jp
pop
(bad)
lods
xlat
pop
test
sbb
adc
mov
das
fwait
inc
pop
push
dec
adc
(bad)
lds
push
pop
out
xor
cmp
xor
add
mov
fistp
xor
adc
or
call
jnp
jb
sub
test
add
in
sahf
add
mov
sub
je
(bad)
sbb
sub
lods
cmps
pop
mov
inc
cs
and
jg
xor
pop
out
mov
sbb
lock
stos
inc
and
mov
retf
cmc
mov
fucom
test
adc
sbb
outs
aaa
sahf
dec
sub
dec
hlt
pop
ret
mov
clc
sbb
neg
les
inc
mov
imul
add
sbb
sbb
push
loope
pop
cmps
in
(bad)
test
add
pop
dec
push
adc
dec
in
aas
sub
cmp
stos
dec
fwait
cmc
(bad)
scas
xor
inc
xlat
cmps
xor
call
test
jl
pop
cwde
retf
cmp
jae
lea
scas
jns
add
aam
lahf
cmp
gs
pop
lods
adc
inc
push
jb
inc
pop
and
and
test
mov
repz
dec
stos
popa
mov
pop
rol
push
scas
add
xchg
cs
call
mov
jbe
push
ret
add
xor
mov
aam
mov
add
scas
dec
pop
retf
imul
shl
cwde
pop
dec
mov
cmps
add
dec
sahf
cmps
xchg
pop
shl
push
std
test
bound
xor
mov
xor
in
cmc
das
pushf
and
cmps
pop
and
push
push
sbb
shr
iret
push
pop
dec
ja
jno
lods
or
cmp
leave
cmp
mov
stc
sub
out
add
dec
pop
add
(bad)
mov
mov
mov
cmp
xor
imul
and
xchg
pop
sti
fisttp
inc
comiss
mov
and
mov
dec
dec
cmp
jae
mov
mov
scas
mov
sar
rol
mov
sahf
in
stc
mov
outs
sar
sbb
popa
sbb
jmp
mov
repz
aas
cwde
out
inc
lea
test
bound
jns
cmp
fcmovnb
mov
dec
xchg
imul
or
fstp
ret
repz
xor
pushf
mov
gs
cmp
jo
iret
cmp
add
xor
jb
in
and
outs
sbb
add
cmp
mov
(bad)
loopne
push
fucom
xchg
dec
mov
mov
xor
mov
mov
adc
ins
outs
cmp
inc
jle
rcl
push
ins
test
ins
or
jnp
stos
jmp
sbb
mov
imul
mov
jp
ins
xchg
call
push
mov
xor
test
mov
arpl
sub
sub
push
mov
(bad)
fcomp
push
push
(bad)
xlat
jno
adc
mov
inc
test
pop
xor
dec
xchg
cmps
adc
iret
pusha
lds
cmp
push
push
mov
fcmovne
mov
into
add
(bad)
js
jecxz
loop
lods
ss
int3
jne
jno
mov
or
aas
ret
sbb
stos
loopne
outs
xchg
sti
push
xchg
xchg
mov
outs
pop
in
push
or
adc
inc
jb
mov
outs
and
mov
aad
repz
jmp
xchg
ret
xchg
push
pop
push
test
push
mov
mov
and
jle
jno
push
jns
rcr
sbb
jg
clc
jae
mov
and
outs
or
repz
cmp
sbb
(bad)
push
enter
sub
jnp
mov
sbb
cmp
jmp
scas
cld
sbb
sbb
cmp
add
add
adc
sbb
leave
aaa
cld
mov
fmul
jmp
inc
call
addr16
mov
lods
and
sub
dec
jmp
push
mov
mov
popf
inc
lods
adc
call
dec
mov
pop
xchg
(bad)
in
push
fmul
sub
jno
xchg
fist
xchg
adc
mov
cmp
jae
xchg
imul
ins
pop
add
not
int3
std
ins
daa
and
pop
cmp
test
sub
iret
cmp
popa
cmp
shl
pop
dec
mov
and
inc
jns
fidivr
mov
cmp
repnz
xor
jmp
aaa
or
aad
dec
lods
jbe
loopne
nop
inc
xor
popf
inc
(bad)
in
call
push
out
pop
jo
loope
pop
lds
fwait
adc
mov
xor
ins
inc
jge
mov
jle
lods
mov
mov
dec
xchg
or
and
lods
cmp
sub
adc
add
rcr
stc
ss
imul
(bad)
lea
push
and
or
mov
(bad)
test
bound
mov
xor
adc
jecxz
cs
in
movs
xor
ins
add
pop
call
fsub
dec
ret
retf
into
jg
rcl
mov
mov
cwde
in
xchg
mov
pop
push
mov
ins
sahf
(bad)
nop
das
jg
xchg
leave
dec
mov
cmp
inc
adc
xor
mov
mov
cmp
imul
ss
or
icebp
sub
xor
adc
adc
sbb
stos
repz
dec
mov
mov
cld
sub
nop
dec
cmp
dec
loopne
or
xor
mov
ds
mov
xchg
scas
xchg
repz
movs
jae
mov
rol
stos
(bad)
mov
dec
prefetchnta
xchg
push
xor
into
cli
push
xchg
add
push
es
gs
cld
repnz
mov
cmp
test
mov
stos
mov
stc
imul
aaa
dec
sahf
mov
loopne
mov
sbb
sub
pop
xchg
mov
inc
or
pop
cmp
add
lock
ins
jle
add
xor
sub
pop
lahf
adc
cmp
das
sbb
shl
bound
(bad)
xchg
lock
icebp
in
call
in
rcl
mov
mov
loop
mov
(bad)
outs
cmps
jo
lds
int
retf
in
lds
cmps
cld
and
mov
les
and
(bad)
cmp
xor
outs
gs
(bad)
arpl
dec
fstp
or
sub
inc
into
outs
daa
add
out
sbb
push
jp
imul
mov
mov
mov
ins
pop
cmps
mov
retf
cdq
mov
and
mov
pop
clc
ret
push
arpl
imul
mov
and
xor
mov
neg
mov
(bad)
int3
data16
pop
inc
push
imul
sub
stos
out
in
inc
cmps
inc
push
cli
mov
or
jbe
mov
scas
dec
inc
ss
fsubr
std
int3
or
rol
stos
cmp
push
cmps
or
dec
push
and
and
adc
xlat
adc
and
jmp
mov
into
cmp
aad
outs
je
cdq
mov
mov
xchg
mov
pop
push
pushf
shr
rol
outs
sti
(bad)
and
inc
call
repz
pop
lock
lea
adc
jae
ins
xor
neg
xor
stos
and
add
popf
jo
pop
lods
aaa
jmp
add
ins
fs
xchg
jg
daa
push
push
mov
stc
jns
je
pop
outs
pusha
mov
pop
(bad)
hlt
or
fwait
and
jo
jmp
mul
(bad)
add
push
cmp
add
ds
hlt
jne
scas
inc
aam
mov
hlt
cmp
sub
int
mov
jbe
or
stos
lahf
adc
(bad)
mov
jbe
add
test
jg
xlat
hlt
sbb
push
not
das
push
and
repnz
outs
pop
cld
pop
sub
sub
test
add
call
jne
mov
or
outs
lahf
ss
scas
pop
call
ins
(bad)
adc
dec
sahf
dec
fidivr
inc
mov
repz
jmp
push
or
mov
inc
jmp
cld
sbb
xchg
dec
std
mov
mov
jmp
xchg
mov
call
mov
adc
nop
fidiv
fidiv
into
sbb
mov
push
into
enter
fsub
push
or
int3
fstp
div
mov
push
xchg
dec
mov
scas
jecxz
or
sbb
fisubr
outs
pushf
inc
mov
stos
sub
and
stos
mov
jp
out
mov
test
mov
xchg
sub
out
push
outs
in
je
adc
cli
xchg
scas
sbb
(bad)
push
pusha
and
mov
push
cld
pop
inc
jo
cmp
jne
xor
repz
jno
fs
outs
ret
adc
xchg
movs
sub
lods
inc
dec
jg
cmp
sub
jl
and
test
mov
xchg
pop
inc
stos
into
div
mov
add
test
imul
inc
loop
sbb
ret
push
push
cs
dec
iret
jl
jb
loop
and
jl
and
inc
jno
pop
aad
cmp
push
les
pop
dec
loop
mov
out
sahf
inc
hlt
add
inc
pop
pop
in
mov
pop
push
cmp
dec
pop
push
cwde
sub
add
fs
iret
inc
pop
rcl
jmp
pop
inc
mov
sti
push
cwde
mov
iret
stc
dec
hlt
sbb
movd
inc
movs
cmp
push
test
cmps
imul
out
shr
mov
jmp
fwait
push
xor
into
pause
xor
lods
inc
push
pusha
pushf
or
lahf
imul
fldcw
cmp
inc
mov
jne
test
mov
arpl
aad
cmp
call
pop
push
adc
sbb
mov
xchg
daa
scas
inc
(bad)
les
mov
shr
arpl
push
or
dec
or
xor
pusha
xor
and
ins
test
mov
jbe
fnsave
pop
std
call
scas
out
stos
mov
dec
gs
lock
sub
dec
adc
cli
fstp
dec
add
or
pop
push
jecxz
imul
push
aam
int3
sub
jl
lods
cdq
push
sbb
clc
jae
pop
pop
std
jo
cld
aaa
pop
mov
(bad)
pop
adc
loopne
and
and
call
xchg
mov
cli
je
stos
dec
jae
fcomp
test
push
sbb
lods
sbb
bound
add
shl
loop
xor
stos
ret
adc
fidivr
fst
fstp
les
inc
xor
pop
and
dec
test
daa
mul
ds
jp
sub
xchg
or
enter
jns
jbe
adc
jns
cmp
sbb
leave
arpl
enter
pop
jae
adc
cmp
std
(bad)
xor
clc
push
into
push
xchg
loopne
xchg
jae
xor
std
aad
stos
out
(bad)
movs
(bad)
imul
inc
enter
push
iret
or
mov
fwait
pop
pusha
ret
aam
xor
sbb
cld
xor
sub
inc
mov
imul
mov
jle
outs
inc
sub
push
adc
xchg
rcl
in
loop
ret
xor
scas
mov
out
push
or
adc
and
push
hlt
pop
sbb
inc
mov
ins
js
mov
inc
or
sbb
fist
adc
jl
sti
or
jmp
xchg
and
ret
jo
in
lods
xor
in
cmp
jmp
dec
push
bound
out
outs
mov
out
and
dec
imul
(bad)
pop
sbb
add
in
loop
xchg
fcom
iret
pop
cli
inc
lds
xor
push
ins
mov
cmps
mov
mov
mov
lods
jl
push
cmp
pop
addr16
jp
js
std
call
sub
jle
mov
ss
in
js
inc
shl
ret
and
in
loopne
cmp
sbb
cmp
pop
bound
mov
inc
(bad)
sub
xor
inc
xchg
movs
cwde
ins
cmp
sbb
mov
stos
jb
or
loope
mov
jb
inc
repz
repnz
popf
in
cld
dec
pop
fmul
jmp
sub
das
imul
jl
sub
and
jb
mov
pushf
and
inc
dec
mov
das
pop
retf
call
idiv
xchg
mov
mov
das
(bad)
adc
outs
adc
pushf
push
mov
nop
loopne
xor
icebp
pop
dec
pusha
sub
jno
and
jmp
mov
mov
call
je
cdq
scas
mov
mov
shl
push
mov
div
dec
retf
or
retf
push
xor
mov
xchg
lds
and
fcomp
icebp
aam
loopne
sub
mov
lock
or
clc
daa
div
adc
cmp
pop
push
enter
inc
xchg
add
or
and
(bad)
lea
repnz
push
pop
retf
leave
loop
dec
mov
dec
fmul
add
mov
jmp
xchg
int
and
(bad)
loopne
jmp
mov
ss
inc
xchg
fs
or
jae
dec
inc
cmps
nop
pop
jl
call
ja
cmp
jbe
lahf
mov
test
out
dec
or
add
mov
mov
cmp
vmwrite
push
(bad)
das
nop
jl
sbb
data16
push
leave
xchg
pop
das
dec
out
je
hlt
in
test
xchg
mov
pavgw
inc
inc
gs
rcr
jp
jmp
imul
and
lea
leave
jae
data16
mov
outs
cli
fwait
jb
aas
jne
mov
mov
push
gs
stos
fcmovnbe
in
daa
js
pop
imul
sbb
ins
jge
xchg
push
jne
add
retw
jl
xchg
loop
sub
scas
mov
xchg
into
mov
and
push
xor
rcl
mov
leave
scas
add
adc
xlat
xor
jmp
in
sub
loope
sub
ins
push
or
les
sub
push
sbb
in
adc
pusha
sbb
(bad)
lea
push
(bad)
stos
ds
sbb
ins
mov
mov
add
mov
mov
(bad)
mov
push
fwait
bound
(bad)
adc
xor
pop
xor
rcl
daa
out
sahf
or
cli
and
test
jmp
jge
ret
loopne
pop
inc
nop
pop
out
pop
aaa
jns
dec
pop
mov
pop
rcr
bound
aaa
mov
mov
push
and
inc
xchg
xchg
mov
mov
mov
fdiv
adc
movs
cwde
inc
js
shr
lods
mov
adc
jecxz
adc
xchg
hlt
repnz
lods
jno
cmp
push
xchg
call
into
scas
fs
mov
jge
jg
dec
dec
or
mov
test
les
dec
outs
sbb
push
jmp
sub
adc
push
and
rcr
and
adc
push
sbb
jle
adc
jns
xchg
xchg
je
cmp
sti
pop
shl
jb
stos
cmp
or
shl
xchg
sbb
int3
sub
fucomip
and
add
dec
in
cld
(bad)
xchg
jb
(bad)
sub
not
rol
fcom
out
fldcw
imul
dec
jg
test
inc
(bad)
xlat
dec
xchg
fist
aas
sub
test
(bad)
cmp
pop
repnz
ss
int
jns
ret
outs
fstp
push
dec
ja
push
out
cdq
pop
popa
xchg
imul
mov
mov
sahf
ret
add
shr
xchg
add
fstp
fsubr
mov
sbb
cmp
pop
xor
cs
rcr
daa
xchg
and
mov
jle
es
lds
mov
inc
pop
fldcw
mov
ins
push
sahf
mov
push
pushf
dec
mov
xor
pop
(bad)
xchg
push
pusha
fisttp
xor
cmp
xor
ins
inc
retf
mov
mov
mov
neg
loope
mov
scas
push
int3
or
ja
ins
push
mov
fwait
push
lods
fisubr
loop
pop
imul
cli
adc
jne
push
sbb
fnstsw
shl
pop
sub
fbstp
jae
sbb
in
add
jmp
sub
mov
enter
lods
outs
je
loopne
pop
js
sti
cmc
in
xor
mov
cmp
sbb
dec
retf
js
out
jge
das
out
xchg
xchg
and
stos
pop
sub
out
mov
mov
lock
jl
mov
jge
retf
sub
pop
push
xchg
ins
push
ret
pop
pop
xchg
or
popa
call
jne
aaa
sub
(bad)
js
loopne
out
cmp
int
retf
sub
xchg
enter
pop
icebp
mov
push
daa
pop
cmp
dec
xor
dec
outs
stos
imul
and
xchg
sahf
pop
push
and
shl
popf
push
not
repnz
imul
leave
into
and
cmps
xchg
add
push
xor
push
ror
aas
mov
mov
sub
cmps
stc
lahf
in
in
sbb
mov
push
int
cli
(bad)
inc
and
lods
pop
inc
repz
pop
mov
jg
adc
cmps
rol
and
aam
fwait
in
fistp
push
scas
sub
push
jmp
into
ja
cmp
leave
pop
cld
add
and
jg
sahf
nop
loope
scas
mov
loop
cmp
add
test
mov
(bad)
mov
and
sahf
or
push
add
ffreep
out
ins
mov
sbb
add
lods
fisubr
xchg
fdivr
fldl2t
and
xchg
xor
lock
into
jbe
and
pusha
dec
or
cmp
push
les
mov
fst
mov
fist
adc
dec
xchg
retf
xlat
xchg
mov
test
cli
test
scas
inc
(bad)
(bad)
pushf
xchg
test
add
pushf
pop
hlt
ret
outs
or
mov
sbb
or
or
lahf
sti
vpshufd
mov
std
cmps
lods
(bad)
cmp
dec
lock
add
or
imul
es
movs
test
imul
(bad)
mov
mov
cwde
xchg
dec
outs
rcl
icebp
jmp
in
sbb
inc
popf
mov
sbb
test
les
dec
jo
push
cmp
rcr
inc
into
popa
test
or
mov
push
shl
(bad)
fcmove
mov
cmp
outs
imul
scas
mov
xor
iret
mov
adc
retf
inc
test
inc
(bad)
stc
mov
jne
add
clc
or
call
leave
jp
mov
sbb
pop
push
sub
mov
rcr
push
add
outs
mov
jp
je
xor
mov
lods
xor
fstp
pop
xchg
xor
ins
add
and
(bad)
mov
sub
aaa
shl
enter
jl
ins
inc
loope
mov
pop
aaa
inc
dec
cdq
inc
mov
pop
imul
cwde
lods
ds
and
push
imul
repnz
in
push
stos
inc
mov
xchg
scas
aas
movs
jle
ins
dec
and
adc
rcr
xchg
pop
cmp
cmp
mov
mov
bound
out
pop
js
imul
sub
ins
call
lods
mov
jmp
push
fstp
cmp
mov
add
mov
cmc
cmps
test
or
mov
aaa
sbb
icebp
jg
mov
into
dec
cmc
sbb
mov
stos
jne
mov
loope
dec
arpl
mov
aad
xchg
imul
ins
and
call
out
sub
jae
cmps
retf
dec
das
int3
or
xlat
iret
xor
fistp
cmp
cmps
aaa
outs
cs
sub
inc
out
push
dec
pop
rcl
jecxz
leave
std
push
add
jge
pusha
test
mov
repz
inc
ror
ins
repz
jno
inc
imul
repnz
mov
mov
adc
test
push
(bad)
sub
mov
adc
adc
movs
add
mov
in
hlt
mov
xchg
sub
sbb
xchg
xor
fs
ins
ror
jno
and
push
push
pushf
ret
fdivr
mov
call
rcl
sbb
fprem1
and
cmps
ficomp
pop
popa
ins
cmp
lahf
jo
repnz
sahf
clc
ret
push
pop
bound
lods
cmp
je
mov
lea
(bad)
pop
pop
test
popa
test
imul
mov
sub
jno
xchg
mov
arpl
scas
(bad)
aas
repnz
pop
(bad)
(bad)
popf
inc
sub
and
cmps
sahf
mov
(bad)
js
pop
stc
inc
loop
mov
or
(bad)
fbstp
aaa
or
sub
icebp
and
and
mov
ret
adc
or
ins
sbb
rcr
jae
or
les
jno
nop
or
lds
inc
popf
push
fisttp
cmps
and
(bad)
iret
sub
xor
xchg
mov
xchg
mov
test
push
push
mov
pop
mov
mov
leave
adc
imul
inc
or
int
cdq
in
loop
addr16
int3
test
sbb
sbb
xor
clc
xchg
sub
scas
repz
clc
add
add
xlat
fnstenv
cmps
sub
gs
jbe
jge
mov
test
hlt
cmp
push
ficom
pop
add
mov
lea
cs
add
stc
cmps
sahf
(bad)
inc
push
sti
lock
les
cmp
push
jns
xchg
and
push
shl
push
jl
loopne
fwait
movs
and
enter
(bad)
jo
inc
mov
cdq
fidiv
out
sub
adc
add
push
mov
loope
sbb
xchg
outs
lods
repz
push
jg
pand
mov
pop
ficomp
into
jmp
mov
nop
xchg
out
or
ja
leave
cmp
push
imul
xor
(bad)
or
sbb
jo
pop
addr16
je
int3
mov
pop
jl
push
sub
retf
dec
push
arpl
and
jns
add
int3
loop
mov
add
push
cmps
or
psubsb
pop
and
sbb
or
xor
mul
rcl
repnz
push
(bad)
stos
push
and
mov
int
pop
in
jae
mov
scas
or
jecxz
sahf
sahf
cli
jae
test
je
pop
loopne
(bad)
daa
xor
in
js
mov
daa
or
push
sub
or
cmp
stc
pop
mov
icebp
push
pop
and
(bad)
shr
xlat
jns
push
inc
pop
shl
or
mov
repz
mov
xchg
xor
mov
xchg
jne
ficomp
dec
aaa
xchg
ss
or
mov
or
and
jecxz
out
dec
pop
hlt
push
sbb
push
adc
xor
mov
(bad)
fs
cmp
mov
std
sub
js
jb
or
rol
in
imul
cmp
xchg
test
imul
or
retf
dec
and
pop
imul
inc
cli
jae
inc
mov
pop
push
adc
xor
jecxz
daa
int
adc
(bad)
mov
das
push
dec
mov
pusha
(bad)
fisubr
mov
or
ret
call
scas
rcl
lods
xchg
adc
cwde
stos
lods
aaa
fs
pop
not
mov
mov
xor
pushw
stos
jmp
stos
sar
jl
in
xchg
fwait
cmp
rol
ret
mov
jbe
ret
mov
adc
pushf
movs
lods
stc
ds
int3
dec
push
adc
or
sub
cmp
in
mov
scas
sar
shl
sub
movs
push
or
not
in
mov
sbb
mov
push
outs
(bad)
(bad)
retf
xchg
retf
mov
mov
jp
in
aaa
movs
mov
mov
push
sbb
cmc
les
repnz
cmp
pop
mov
lods
xchg
outs
cmp
arpl
pop
es
xor
inc
pop
shr
jo
inc
pop
inc
ds
aam
retf
inc
inc
mov
out
jmp
and
pop
inc
adc
fldenv
dec
fisttp
fs
mov
mov
lds
push
mov
cmp
jmp
xlat
repz
icebp
sbb
fidivr
(bad)
ficom
mov
xchg
int
ret
push
push
or
mov
inc
inc
mov
addr16
jmp
adc
or
push
cld
inc
jmp
dec
pushf
xor
es
int
leave
sbb
mov
jl
std
pop
div
jae
ds
xor
pop
outs
push
jne
repz
fucomip
pusha
addr16
sbb
cmp
aam
arpl
sub
inc
popa
idiv
mov
pop
push
and
arpl
test
xor
pop
push
adc
mov
and
movs
pop
xor
pop
and
retf
xchg
xchg
mov
pop
jns
pushf
dec
lods
fild
jns
retf
fucomi
scas
add
movs
pop
jno
jl
jno
and
sbb
out
(bad)
je
mov
ins
imul
sub
xchg
icebp
and
test
stos
cmp
cmps
mov
(bad)
outs
jle
leave
or
sub
pop
push
jmp
pop
test
push
(bad)
pop
or
stc
call
je
outs
sbb
fadd
loopne
mov
cmp
loopne
xchg
or
imul
jg
cmc
pop
sbb
add
ss
push
and
aaa
mov
xlat
js
sbb
call
push
adc
hlt
fmul
jbe
mov
imul
jbe
cmps
or
outs
inc
ret
mov
jne
inc
cmp
data16
sub
outs
leave
cdq
pop
jge
fcomp
stos
aas
ret
jae
into
popa
sbb
cmp
pop
inc
xor
into
dec
pop
inc
inc
les
int
pushf
mov
cdq
or
dec
lock
adc
nop
jbe
dec
push
cwde
outs
pop
shl
sbb
sbb
push
xchg
aas
fsubr
adc
adc
test
push
es
and
sbb
(bad)
fist
or
or
push
or
or
retf
fcmove
pop
arpl
add
cmp
push
call
jl
adc
inc
sub
cmp
in
(bad)
xchg
mov
mov
int3
loope
xchg
fwait
inc
outs
shr
fsubr
scas
fadd
cwde
cmps
div
fisubr
mov
add
loopne
pop
fwait
xchg
ins
mov
pop
mov
in
inc
mov
mov
inc
das
sar
mov
adc
stc
or
or
sar
int
cmp
out
jle
push
fiadd
loop
sbb
push
sub
fs
pop
and
scas
mov
std
pusha
test
test
pop
sbb
inc
mov
pop
xor
sub
cmp
js
dec
sbb
adc
mov
mov
mov
mov
sar
arpl
adc
inc
or
(bad)
popf
push
(bad)
repz
test
pop
push
pushf
push
fsubp
cld
inc
fidivr
popf
pop
mov
test
cmp
push
mov
adc
outs
push
adc
fwait
mov
cmc
arpl
xchg
jmp
mov
mov
push
cdq
enter
(bad)
repnz
and
std
ins
mov
aam
js
nop
fst
lods
jl
inc
jns
aas
mov
cli
rcr
sub
or
lahf
pop
mov
stos
xchg
jo
pop
cli
in
scas
icebp
into
jmp
std
in
aam
test
fs
xchg
stos
les
cmp
int
sub
xor
shl
into
cmps
jmp
add
xchg
in
repz
push
mov
cwde
xor
int
(bad)
leave
(bad)
xchg
add
inc
imul
rol
or
das
mov
fbld
pop
stos
call
pop
push
cmc
add
inc
test
xor
inc
push
xlat
jmp
mov
dec
fs
mov
adc
(bad)
lds
xchg
cmp
fld
loope
adc
(bad)
in
xor
loope
call
lahf
sub
dec
sub
xchg
adc
(bad)
jmp
cdq
jp
inc
fcom
inc
xchg
pop
push
or
lds
shr
lods
popa
mov
bound
inc
in
mov
xchg
mov
ret
or
push
rcr
popa
pop
and
jno
mov
test
iret
stc
inc
cmp
sbb
push
mov
in
jge
inc
and
loopne
sub
loopne
shr
cmp
(bad)
jb
out
cmp
(bad)
in
fisubr
repnz
js
daa
xchg
cs
xchg
rol
shr
clc
idiv
ror
cmps
daa
ins
dec
pop
aad
cmp
and
leave
push
adc
and
and
sbb
dec
sbb
cdq
inc
imul
repnz
pop
in
sbb
rcr
sub
jmp
rcr
pop
adc
jns
add
int
in
inc
inc
push
mov
repz
idiv
mov
rol
fucompp
out
push
hlt
sbb
or
inc
fimul
cwde
(bad)
cmc
daa
cmp
cmp
jp
icebp
and
movs
pop
xlat
inc
rcl
ds
jns
sub
push
aam
out
jo
jmp
pushf
xchg
int3
dec
mov
aam
fnstenv
(bad)
jge
in
(bad)
vpunpckldq
inc
sbb
shl
mov
jl
(bad)
ror
mov
jae
(bad)
or
pop
mov
icebp
cmp
scas
in
and
or
inc
and
adc
push
pop
lock
sbb
mov
inc
push
in
push
gs
sti
sbb
in
and
sub
pushf
jb
pushf
xor
mov
or
pop
inc
inc
fdivr
enter
test
stos
mov
dec
adc
ret
mov
test
dec
lods
adc
mov
pop
loop
jl
retf
mov
sub
retf
outs
ins
bound
inc
push
mov
xor
into
mov
cmp
sub
mov
pop
dec
add
mov
push
mov
xchg
pop
jbe
cwde
outs
jne
inc
test
mov
bound
inc
fcomp
lea
fwait
mov
(bad)
loopne
shl
dec
pop
cli
or
push
imul
mov
jbe
lahf
or
ja
xor
aam
sub
ficomp
cwde
in
sysenter
retf
jbe
repz
jns
push
arpl
jp
sahf
addr16
into
and
adc
fistp
ss
cmp
jge
and
mov
mov
xchg
mov
test
lahf
cs
add
pop
ins
cmp
lahf
call
inc
dec
test
dec
fild
pop
mov
pop
and
test
das
(bad)
in
cwde
xchg
cmp
jmp
mov
adc
retf
or
in
push
cmp
(bad)
lea
aas
and
adc
cmp
cmps
fs
lahf
push
sub
out
jno
adc
pop
pop
mov
adc
inc
sbb
pop
or
ror
mov
loopne
sar
daa
xchg
mov
mov
sub
fist
adc
cmps
call
inc
mov
retf
mov
mov
add
mov
cmp
xor
iret
cwde
pop
mov
cmps
xor
xor
int3
sbb
retf
adc
jbe
push
add
xor
cmc
das
rcl
stc
mov
mov
test
ds
jnp
mov
cwde
(bad)
fcom
or
sti
add
fiadd
xchg
loopne
mov
mov
aam
mov
mov
jecxz
leave
in
call
sub
pushf
in
push
lds
retf
scas
retf
sbb
and
fsubr
jbe
jae
cli
lods
es
jge
ja
sub
loopne
mov
test
xchg
loope
push
test
retf
shl
in
lods
push
mov
jg
je
lahf
push
loopne
retf
pop
adc
fdiv
nop
addr16
imul
test
push
hlt
hlt
aam
pop
mov
mov
pusha
out
aas
(bad)
pop
cmc
jp
dec
mov
fst
pop
mov
xor
mov
or
cmp
ss
imul
loopne
xchg
jl
dec
ret
fstp
xor
hlt
sbb
jl
not
pop
mov
xor
jmp
jecxz
and
imul
push
push
or
jmp
cli
lods
push
cmp
cmp
fidiv
iret
jb
nop
mov
mov
and
(bad)
das
into
cmp
add
pop
dec
xor
push
jmp
jne
fnstsw
stos
(bad)
cwde
push
mov
and
mov
(bad)
mov
pusha
jecxz
jb
push
cmc
movs
and
inc
mov
pop
adc
xor
push
mov
pushf
and
repz
pop
sub
jo
cld
gs
inc
movs
xor
(bad)
xchg
jge
push
movs
or
scas
xor
pop
xchg
leave
test
cmp
(bad)
xchg
dec
(bad)
int3
jo
fcmovbe
imul
sub
fistp
xor
cmp
cwde
jno
test
cmp
mov
test
(bad)
push
sar
and
enter
push
sub
mov
add
imul
add
outs
test
retf
pop
push
xor
out
inc
hlt
dec
pop
or
and
cs
xchg
iret
loope
push
out
loope
cmp
mov
enter
cmp
dec
ror
iret
nop
cmp
mov
cmp
and
fwait
mov
sub
shr
mov
sbb
mov
or
imul
ret
call
stos
mov
test
xor
and
sbb
call
add
jge
in
cmp
scas
pusha
loop
mov
sysret
sub
clc
push
hlt
xor
movs
inc
and
mov
or
jbe
mov
mov
mov
nop
mov
mov
xchg
xor
lahf
sbb
mov
sbb
jnp
mov
repnz
mov
inc
cmp
stos
clc
push
daa
mov
aam
cmps
sub
enter
aad
ja
sbb
rcl
mov
sbb
and
arpl
out
pop
dec
into
mov
dec
mov
sbb
nop
sbb
loope
ds
or
jle
dec
repnz
sub
shl
push
cmc
mov
out
mov
and
stc
in
scas
repz
cmc
adc
aam
cmp
mov
aas
mov
jmp
or
mov
cli
sub
sbb
jg
std
or
les
dec
movs
jns
inc
data16
test
mov
jae
mov
jl
xor
adc
jmp
inc
push
(bad)
movs
ror
adc
not
sub
push
out
xor
outs
loope
and
lahf
aas
push
mov
mov
add
xchg
repz
adc
and
sbb
pop
out
jl
retf
mov
dec
mov
xchg
fimul
jmp
ret
push
mov
pop
sub
inc
int3
inc
pop
movs
mov
out
pop
fwait
pushf
test
xchg
and
mov
xor
ret
fisubr
imul
(bad)
outs
(bad)
iret
cmc
sti
xor
ds
loope
adc
mov
jp
inc
sbb
stos
data16
cmps
xchg
jne
pop
scas
out
adc
jmp
fmul
out
mov
and
in
sbb
cmps
cmp
sbb
lods
stos
push
xor
aam
dec
or
aas
popa
cwde
out
rol
call
and
mov
movs
pop
(bad)
xor
cmp
push
lds
pop
cld
push
add
mov
dec
dec
sbb
cld
jbe
add
mov
ins
mov
minps
mov
and
cmp
and
je
mov
xchg
loop
iret
cmp
push
aad
add
adc
push
fcmovnbe
enter
(bad)
ret
xor
mov
xchg
ds
xchg
dec
sub
(bad)
bound
std
or
retf
cmps
movs
adc
add
cmp
loop
push
sub
in
cld
(bad)
jg
pop
cwde
(bad)
out
nop
ja
call
mov
or
leave
(bad)
mul
test
push
mov
adc
push
push
ins
mov
xchg
or
outs
nop
arpl
pop
cmp
sar
and
jo
mov
push
sbb
fld
mov
mov
xor
(bad)
enter
stc
retf
retf
mov
clc
std
jb
pop
ja
sbb
(bad)
movs
cmp
mov
lods
and
fld
cmp
(bad)
cs
ins
add
push
inc
arpl
xor
pop
enter
cmp
sub
fwait
sub
fisttp
fcomp
sbb
lods
outs
mov
test
test
sub
js
not
data16
xchg
jmp
jo
push
inc
add
in
ja
out
repnz
and
push
imul
jl
add
push
fisub
lock
(bad)
out
inc
adc
push
push
aam
mov
pusha
scas
sub
(bad)
mov
pop
mov
mul
mov
push
scas
imul
pusha
push
cdq
nop
das
add
repnz
jecxz
das
bound
pop
popa
adc
mov
shl
and
add
addr16
pop
repz
aam
or
adc
or
dec
inc
adc
add
cmp
dec
pop
jo
es
imul
mov
shl
test
(bad)
mov
mov
inc
push
dec
cmp
lds
mov
lahf
in
inc
in
jg
dec
std
movs
(bad)
shl
mov
pop
sbb
mov
js
sub
mov
and
xchg
fiadd
popa
fiadd
out
imul
test
jno
xchg
retf
add
imul
mov
or
jecxz
imul
jg
enter
cmp
pop
adc
mov
jg
or
mov
sbb
mov
and
pusha
aaa
or
out
scas
fmul
(bad)
repnz
inc
popf
into
es
push
xchg
add
mov
pop
in
retf
dec
and
stos
in
out
mov
arpl
jbe
sbb
clc
or
and
mov
inc
dec
ja
mov
in
add
pop
lea
mov
aam
inc
int3
aas
mov
push
mov
mov
cmp
lods
jmp
test
sub
pop
call
sahf
inc
xor
jo
sub
jecxz
fwait
div
ret
sub
adc
in
js
cmp
push
(bad)
or
cmp
cmc
shl
test
movs
test
(bad)
pop
adc
cmp
lods
mov
jle
adc
mov
mov
xchg
push
mov
inc
scas
in
and
and
cld
mov
sbb
jecxz
cmp
iret
sbb
inc
daa
jp
fnstsw
dec
and
or
fisttp
iret
dec
inc
movs
(bad)
sub
push
mov
jmp
mov
das
cli
call
jmp
dec
sar
pop
call
loop
xor
xor
cs
xchg
lahf
sbb
test
sti
sub
jmp
dec
sbb
mov
mov
sbb
push
mov
jge
nop
xchg
int3
sub
push
pop
push
pop
dec
fdiv
outs
jg
sbb
mov
mov
push
not
out
hlt
jmp
push
std
dec
aas
bound
dec
out
sbb
pop
dec
fldenv
test
outs
sbb
iret
rcl
pop
jns
imul
mov
adc
es
hlt
mov
pop
sub
xor
and
xchg
call
cld
or
add
inc
test
(bad)
aad
xchg
cmp
repnz
pop
out
jle
cmp
add
test
pusha
dec
test
mov
sbb
nop
(bad)
arpl
jp
icebp
pop
mov
ror
xchg
out
repnz
ffree
movs
outs
push
cmp
xlat
push
sbb
xor
cmp
pushf
mov
aad
fwait
mov
cmps
sub
(bad)
pop
into
mov
ja
dec
ds
or
retf
xor
shl
jle
nop
sbb
adc
mov
sbb
dec
mov
jl
or
jno
or
fiadd
adc
imul
cmc
cmp
out
movs
jecxz
mov
pushf
inc
popf
add
ds
xchg
mov
add
jg
(bad)
mov
inc
lds
mov
and
push
addr16
popf
dec
mov
ja
pop
jge
pop
push
cld
xchg
dec
mov
scas
jmp
(bad)
mov
iret
add
repnz
fcomp
scas
jp
sbb
cmps
mov
stos
fisub
inc
fistp
out
push
xchg
push
or
sub
xlat
shl
sbb
js
push
and
dec
sub
mov
jge
inc
ins
in
push
fstp
push
int
mov
shr
mov
arpl
cmps
sahf
pop
mov
add
mov
pop
sbb
inc
adc
movs
gs
lods
repnz
js
hlt
mov
je
daa
pop
sbb
(bad)
sar
(bad)
cmp
add
sar
mov
stos
fst
add
retf
and
add
cmp
mov
(bad)
xchg
mov
mov
and
rcr
sub
cmp
rcr
hlt
lea
push
cs
xor
or
arpl
mov
in
jnp
sbb
push
retf
jl
(bad)
adc
jmp
jl
jmp
stos
mov
shl
fiadd
or
dec
outs
pop
jle
js
add
lods
and
ret
or
stos
sbb
sub
push
mov
outs
test
and
mov
mov
xor
pop
jnp
cmp
retf
in
enter
or
and
cmc
fisubr
shl
jg
ss
mov
mov
repnz
push
dec
test
call
mov
es
dec
cwde
mov
sub
hlt
sub
stos
call
das
rol
pusha
test
xor
pop
push
and
iret
aaa
mov
test
mov
in
and
stos
shl
jge
mov
dec
and
sub
daa
inc
aam
jp
cdq
icebp
outs
add
mov
adc
xor
push
add
sbb
inc
les
(bad)
out
mov
dec
inc
push
out
stc
ja
pop
call
xchg
lea
lahf
xor
mov
dec
pop
mov
push
push
cmp
pop
lahf
add
pop
out
stc
stos
adc
push
int
mov
xor
and
xchg
lods
push
cli
ret
inc
mov
xor
and
jge
test
sub
cmp
aam
or
mov
pop
push
jl
jge
mov
jmp
rcl
retf
mov
jbe
mov
push
enter
push
inc
out
xchg
mov
push
mov
and
cmp
mov
pop
mov
popf
movs
into
out
retf
daa
ss
aas
mov
mov
jge
add
ins
and
loop
inc
mov
sub
repnz
pop
jecxz
data16
pop
inc
popf
inc
and
ins
dec
jo
mov
push
ins
mov
popa
daa
add
aam
int
mov
outs
mov
sti
fimul
bound
jb
jge
aad
in
or
pop
push
or
mov
(bad)
or
push
push
rcr
iret
sar
add
cwde
or
cwde
repz
iret
push
int3
je
loop
fsubr
popa
ins
pop
cld
pop
cmp
dec
movs
(bad)
mov
inc
pop
lods
in
sti
mov
jmp
sbb
push
and
sbb
in
mov
or
sub
sar
sbb
mov
ja
cmp
sbb
ds
inc
mov
mov
mov
leave
cld
pop
sbb
mov
arpl
clc
xor
data16
inc
dec
pusha
jle
loopne
dec
adc
retf
ins
mov
pop
mov
cmp
mov
ficomp
or
shl
stos
push
fwait
add
cdq
xchg
loop
inc
xlat
out
ret
jno
mov
adc
retf
jge
ja
call
mov
popf
(bad)
scas
ins
adc
dec
push
shr
sar
inc
loope
dec
sbb
stc
cmp
test
pop
inc
cmp
cmp
inc
cmp
jne
xor
pop
bound
xchg
adc
out
sub
push
add
or
(bad)
pop
leave
imul
adc
je
retf
loop
clc
jae
xchg
sub
sbb
dec
pop
push
lods
xchg
rcr
mov
pop
xchg
jmp
into
xor
leave
ins
clc
movs
pop
jnp
adc
movs
sbb
pop
xor
repz
or
retf
shl
sbb
inc
and
dec
mov
mov
jmp
nop
xchg
lock
lods
jge
cmp
retf
adc
pop
jbe
push
mov
cs
arpl
scas
xchg
ret
adc
je
div
cmp
test
scas
test
cmp
pop
or
or
push
popa
jmp
jge
or
adc
dec
or
es
mov
xor
dec
or
xchg
jg
rol
dec
mov
dec
jns
mov
mov
or
icebp
mov
push
sbb
or
leave
xchg
(bad)
and
cwde
dec
repnz
inc
test
add
fiadd
jmp
std
and
imul
or
xchg
in
xlat
xchg
test
jne
mov
mov
(bad)
arpl
mov
cmp
mov
in
imul
dec
test
(bad)
sub
jmp
and
sar
add
mov
std
rcr
jmp
out
inc
dec
je
and
add
shr
jb
cli
loope
or
clc
push
cmc
dec
movs
jle
sar
iret
jnp
sub
rol
fdiv
adc
mov
and
neg
pop
push
les
dec
dec
out
dec
jl
push
imul
pop
js
mov
jb
add
fdiv
ins
test
jae
test
repnz
push
ret
sub
(bad)
(bad)
test
dec
inc
ss
cmps
inc
cmp
ret
mov
push
sub
mov
and
push
pop
jl
imul
pop
clc
test
sti
retf
out
out
mov
inc
dec
imul
dec
xchg
je
jge
jne
stos
stos
mov
pop
cmc
repnz
mov
cmc
sbb
imul
call
push
mov
push
or
pmullw
xor
jmp
mov
iret
pop
ja
jle
inc
(bad)
pop
adc
sub
mov
movs
loope
mov
and
mov
(bad)
popf
retf
inc
je
hlt
mov
jle
add
test
lock
leave
in
push
pop
cmp
add
rcl
push
rcl
(bad)
xor
xor
jecxz
aad
ret
adc
stc
mov
daa
inc
dec
movaps
fist
ins
xor
jo
leave
and
nop
jno
cwde
call
mov
clc
pop
mov
push
ret
clc
retf
das
ficom
adc
ja
ds
inc
jns
out
sbb
cmps
scas
call
sbb
sbb
in
mov
adc
jmp
mov
dec
xlat
inc
sub
icebp
adc
sbb
pusha
push
sahf
lds
loop
xchg
add
imul
retf
icebp
sub
push
push
pop
jp
leave
or
inc
or
jecxz
ins
mov
pop
pushf
fisttp
mov
dec
sar
add
or
add
idiv
movs
dec
mov
cmps
fwait
mov
add
jnp
mov
xlat
jmp
cmp
and
jns
push
addr16
shr
push
retf
outs
and
fidiv
loope
test
mov
into
cmp
adc
cli
cdq
ret
add
iret
dec
imul
inc
fwait
stc
add
pop
popf
pusha
popa
cmp
in
jno
dec
ficom
jb
jmp
lds
sub
inc
inc
rcl
push
out
mov
jmp
in
out
dec
mov
data16
out
xchg
dec
je
cmp
cmp
in
pop
pushf
sahf
xchg
mov
stos
dec
push
es
pusha
aaa
or
pop
test
push
mov
xor
jle
pop
sbb
call
add
mov
jne
pop
sbb
cli
adc
sbb
pop
mov
fnsave
sbb
mov
out
or
imul
mov
shl
je
jg
bound
push
das
loopne
mov
mov
scas
dec
outs
mov
movs
in
in
out
pop
mov
(bad)
fwait
repz
lds
jl
and
in
mov
(bad)
lds
adc
jmp
loope
jl
adc
es
adc
mov
cmp
xchg
shl
cdq
push
jae
scas
jmp
xlat
cld
fwait
push
stos
in
sahf
adc
lods
jo
scas
bound
xor
and
add
call
outs
xor
mov
jg
and
add
mov
outs
cwde
push
or
dec
ds
daa
and
ss
add
adc
jg
sbb
pop
xor
repz
jp
push
cld
and
rol
jmp
xchg
cmp
inc
jg
jg
pop
xchg
jb
shr
mov
test
xor
lods
mov
inc
adc
dec
in
or
xor
pop
clc
fmulp
std
push
pop
dec
div
mov
aad
loope
popa
inc
and
mov
or
and
call
jp
jmp
lods
lods
in
iret
push
mov
pusha
or
adc
loop
push
test
jp
addr16
test
push
adc
(bad)
or
pushf
in
js
jl
push
and
or
xor
sti
js
add
mov
or
sbb
repnz
stc
fmul
inc
hlt
retf
int3
call
scas
cmps
pop
jbe
push
scas
push
(bad)
jnp
xor
fnop
mov
sub
fild
enter
std
jmp
add
outs
jle
mov
inc
iret
movs
xchg
and
xchg
and
cmps
pop
mov
lods
sub
ja
xchg
dec
or
mov
cdq
adc
jecxz
xchg
test
call
ds
or
addr16
test
xlat
add
outs
imul
sbb
stc
cmp
add
pop
test
add
data16
test
jmp
sbb
push
fsubr
adc
rcr
sbb
into
sbb
mov
mov
les
xor
(bad)
call
jmp
test
xchg
es
fldz
jp
stc
in
dec
mov
adc
stos
jmp
sub
add
jecxz
dec
pop
ret
sub
adc
xor
or
gs
sbb
or
ror
inc
sub
add
push
outs
lds
in
dec
in
out
mov
mov
fmul
sub
pusha
popf
idiv
loope
dec
adc
cmp
pop
push
mov
hlt
adc
movs
mov
inc
sub
or
shl
sbb
loopne
sub
mov
(bad)
aad
adc
lahf
or
push
adc
adc
jne
push
outs
sbb
cmp
mov
out
repnz
enter
and
dec
sbb
sub
inc
lods
mul
mov
sub
repnz
ret
inc
popa
ss
inc
shl
adc
adc
imul
fistp
xor
in
repnz
ds
jo
(bad)
aas
retf
push
mov
and
ins
xchg
aam
xchg
(bad)
fsubr
jae
mov
in
int3
xlat
jno
daa
jmp
cmc
push
adc
sbb
inc
jl
add
std
mov
sub
and
and
or
mov
xor
call
mov
push
das
leave
xor
pop
inc
popa
sbb
mov
mov
push
xchg
cmp
lahf
mov
adc
push
pop
xchg
daa
xor
dec
lods
push
adc
inc
and
test
jbe
add
daa
out
imul
(bad)
inc
out
in
stc
or
jo
xor
mov
pop
dec
aam
shl
cmp
sbb
in
or
jg
enter
cdq
mov
xchg
fs
(bad)
cmps
xchg
inc
mov
cdq
rep
and
add
scas
xlat
daa
mov
dec
fldenv
lahf
lods
nop
movs
test
dec
js
push
sub
sar
dec
sub
xlat
lea
movs
neg
lods
jg
and
loope
aas
mov
stc
div
mov
pop
retf
(bad)
je
mov
or
or
jle
sbb
dec
xchg
lea
sbb
call
sbb
ja
ins
jmp
cmp
stos
ins
push
les
ror
outs
clc
mov
arpl
xor
and
retf
xor
loop
sar
dec
xor
xchg
stos
(bad)
retf
gs
call
add
add
or
sub
adc
enter
test
adc
daa
jecxz
xor
and
test
cmps
std
push
(bad)
mov
and
sbb
call
lds
shl
test
sbb
or
mov
mov
mov
xlat
arpl
(bad)
scas
pop
(bad)
mov
test
hlt
imul
pop
lahf
aaa
retf
cmps
enter
test
mov
push
add
fist
xor
out
outs
jnp
push
dec
pop
cli
mov
or
jp
sub
jmp
sbb
out
mov
add
jae
push
mov
xbegin
xchg
xlat
in
movs
push
movs
adc
scas
lock
shr
sti
jge
sti
stos
jnp
loop
rcl
std
dec
mov
in
aas
in
(bad)
in
sbb
and
xchg
or
jae
sub
dec
cwde
add
fmul
pmaddwd
cmps
inc
(bad)
xor
les
int
daa
arpl
ds
xchg
mov
add
sti
jl
mov
adc
adc
pop
test
in
xchg
sbb
xchg
pusha
cmps
push
test
xchg
mov
dec
test
or
imul
push
fisubr
mov
mov
cmps
or
out
fld
sbb
bound
sub
push
mov
mov
rcr
jecxz
dec
xchg
ja
(bad)
add
pop
test
inc
into
and
mov
jle
push
add
lds
mov
add
aaa
lea
fldenv
sub
je
dec
mov
mov
int3
push
mov
inc
popf
sub
jae
(bad)
(bad)
mov
pop
ins
jle
in
loope
push
movs
push
nop
sub
cmps
xor
push
adc
xchg
call
arpl
out
cmp
clc
mov
push
sbb
and
adc
pop
jle
adc
xchg
mov
inc
outs
ss
sub
retf
dec
pop
aad
inc
popf
imul
shl
fwait
lods
ss
cmp
test
jae
retf
test
std
jbe
outs
and
xor
push
and
add
hlt
or
mov
sub
ss
pop
into
(bad)
jnp
mov
ja
xchg
mov
jae
jmp
sub
pop
jecxz
inc
icebp
lahf
jne
fild
lahf
cmp
cwde
sbb
mov
and
sub
inc
das
add
sbb
add
sbb
add
xchg
mov
mov
or
mov
hlt
jbe
xchg
jecxz
mov
mov
pop
and
into
and
mov
ja
jge
ss
cmp
jnp
cli
stc
ret
mov
mov
scas
outs
shl
bound
pop
or
bound
mov
lods
clc
pop
in
xchg
inc
or
pop
jno
in
loopne
fistp
add
test
mov
pusha
int
add
call
jne
cmp
jae
popa
sbb
dec
popf
adc
push
test
add
and
ins
add
mov
repz
retf
fwait
pop
or
rol
out
mov
daa
stos
xchg
jecxz
cmp
xor
sub
xchg
outs
add
iret
mov
push
sahf
push
pushf
xchg
dec
imul
inc
outs
test
adc
and
mov
test
fidivr
lahf
popa
(bad)
jb
outs
push
call
out
test
scas
cmps
mov
not
mov
pop
into
mov
inc
fwait
mov
jo
mov
dec
xchg
in
sub
int3
mov
cmp
jmp
imul
pop
mov
add
mov
mov
retf
mov
dec
adc
pop
push
jmp
in
mov
push
adc
mov
popa
mov
cwde
ror
mov
xchg
std
add
scas
jo
jmp
inc
ds
and
aaa
push
pop
sbb
jp
outs
pusha
out
out
cmps
pop
jmp
repnz
out
stos
xlat
rcl
fisttp
das
xchg
int3
or
test
jle
sbb
mov
mov
loope
les
jge
retf
dec
mov
scas
mov
pop
nop
xor
or
sar
push
inc
cmp
scas
loope
pop
fs
repz
sar
mov
adc
add
stc
mov
pop
sub
sub
lds
out
stc
in
mov
jmp
mov
aad
xchg
mov
or
mov
jmp
inc
fmul
lock
sti
mov
or
imul
cmc
les
outs
dec
gs
fwait
in
sub
mov
add
xor
loope
pop
inc
sar
mov
jmp
cmp
pop
rcr
mov
and
(bad)
repnz
mov
xor
push
xchg
pop
mov
push
scas
add
(bad)
inc
(bad)
mov
mov
adc
shl
mov
inc
out
jbe
mov
sbb
mov
mov
dec
mov
xchg
leave
push
cwde
add
cmp
push
lods
mov
adc
cmp
xchg
iret
mov
add
mov
adc
or
add
aam
ja
adc
(bad)
jp
int3
mov
or
mov
shl
and
cmp
fstp
loopne
mov
add
jmp
sub
div
or
sbb
dec
pop
mov
(bad)
imul
push
add
cmp
xchg
add
fstp
stos
lds
nop
movs
das
mov
push
hlt
push
sub
movs
pop
mov
js
xchg
push
adc
mov
repnz
add
rol
push
mov
imul
(bad)
cmp
mov
mov
loop
sbb
call
push
gs
lahf
push
pop
or
div
movs
dec
pop
pop
jmp
lahf
mov
sub
jle
jge
or
xor
jge
das
jmp
jo
jl
mov
test
add
imul
pop
gs
add
xor
xchg
add
fsub
(bad)
retf
mov
adc
mov
aam
addr16
xchg
ror
aas
sahf
(bad)
jmp
xchg
movs
sub
push
repnz
xchg
sub
and
or
(bad)
cld
les
inc
test
mov
shr
ficomp
pop
and
adc
xchg
jno
mov
push
fnsave
imul
aas
repz
add
mov
or
sbb
retf
outs
jp
and
sub
pop
icebp
mov
fwait
jmp
push
xor
jmp
or
mov
push
push
adc
in
or
pushf
pop
scas
pusha
mov
rol
in
jl
dec
push
mov
inc
popf
and
fs
ret
push
sar
cmp
and
sbb
xchg
sbb
jne
jg
mov
pop
sub
aaa
push
je
add
ins
clc
dec
push
xchg
pop
push
pmulhw
in
mov
cmp
or
inc
mov
test
or
in
inc
loopne
mov
and
sub
into
jo
sbb
mov
and
mov
mov
xchg
(bad)
sub
jns
loope
hlt
add
rcr
fist
je
push
cmp
out
and
data16
pop
or
(bad)
call
mov
std
les
not
popf
sub
stc
movs
xchg
lahf
push
push
mov
es
adc
cmc
outs
sbb
(bad)
dec
cmp
jecxz
ret
pushf
or
pop
push
ror
mov
push
ins
scas
neg
ss
push
jle
addr16
inc
xchg
mov
adc
adc
mov
inc
outs
pop
xor
fnstsw
sbb
sbb
xor
out
mov
call
and
jge
out
ins
add
ror
nop
scas
inc
sahf
out
outs
test
leave
push
xchg
lahf
cmp
or
push
cmp
(bad)
jne
sti
pop
pop
xchg
rol
fisttp
jp
call
or
xlat
sbb
mov
mov
(bad)
popa
inc
sub
xor
jmp
or
push
ds
rcr
xchg
sub
jo
xlat
scas
test
and
stos
pop
sbb
fst
mov
in
nop
xchg
jmp
mov
jnp
sbb
adc
push
stos
call
(bad)
aam
call
icebp
xor
add
nop
push
pop
movs
push
ja
jae
int
dec
loopne
push
test
jg
pop
inc
adc
sub
mov
inc
imul
adc
aas
in
dec
scas
sbb
shl
loop
xchg
pushf
scas
mov
pop
dec
add
js
or
pushf
xchg
jns
pop
dec
adc
outs
std
push
mov
mov
mov
add
sti
jmp
mov
pop
jmp
cmp
div
pop
dec
xor
and
js
lahf
sub
mov
lock
sbb
cmps
sub
push
mov
mov
imul
mov
push
mov
sbb
repz
xor
sub
jno
in
cmps
fucomip
lods
mov
dec
jnp
inc
cmp
fs
test
cmp
cmp
mov
jae
aam
dec
repz
call
cmp
jb
jge
test
inc
mov
dec
data16
cmps
mov
push
or
jne
and
rcr
fsub
loopne
adc
nop
push
mov
into
jae
std
lea
out
or
fwait
pop
pop
aas
adc
int
clc
mov
fdivr
pop
fisttp
or
mov
mov
mov
cmps
xor
aas
in
fcom
call
inc
jle
cmps
push
hlt
mov
push
and
add
cmps
xor
dec
push
jbe
or
out
cld
push
jg
adc
push
mov
jmp
test
adc
(bad)
cwde
add
fidivr
call
arpl
jge
movntq
(bad)
push
nop
das
add
dec
sbb
cld
ror
in
cmp
ss
sbb
pop
jmp
inc
stc
xor
adc
or
scas
test
push
xor
or
add
aaa
repz
into
mov
pusha
div
cs
push
shr
push
and
xor
fwait
ss
adc
fild
lods
add
(bad)
loope
xor
ret
adc
je
xchg
xchg
es
ins
xchg
pop
push
icebp
mov
cmp
lods
movs
shr
xor
push
jmp
int3
out
jne
push
xchg
add
mov
enter
aas
shl
and
enter
dec
xchg
pop
and
shl
or
bound
push
cmps
ss
sub
mov
or
in
repnz
xlat
push
inc
aas
es
push
mov
xchg
push
stc
gs
les
dec
aaa
test
(bad)
imul
jge
adc
add
sub
dec
out
add
retfw
icebp
inc
mov
inc
jae
or
inc
mov
dec
mov
pop
data16
std
retf
push
repnz
pop
dec
jge
add
sar
push
int3
je
add
cmps
es
dec
jno
push
je
push
push
test
and
int
test
(bad)
mov
aas
aad
xor
dec
pushaw
pop
imul
out
sbb
ja
je
out
jae
jecxz
ficom
call
mov
(bad)
and
stos
inc
add
sbb
push
ins
xor
pushf
into
inc
mov
aam
div
inc
push
inc
les
and
stos
movs
enter
in
sar
cmc
pushf
pop
mov
xor
xchg
jnp
xor
aas
loope
jo
shl
cmp
sar
pop
retf
test
pusha
cmps
cmp
retf
or
lahf
inc
jmp
nop
movs
test
into
xor
mov
sub
dec
cmp
and
ins
inc
xor
fsubr
cmps
inc
mov
mov
mov
sbb
and
std
xchg
sbb
sbb
shl
inc
(bad)
pop
es
aaa
js
or
mov
push
jmp
movs
and
xor
cmp
xor
sub
aaa
ror
movs
and
imul
adc
cs
push
ficomp
ja
push
add
repz
call
dec
inc
dec
mov
fwait
adc
ins
dec
mov
cmp
fdiv
data16
jmp
fidivr
test
int3
and
cmp
cdq
(bad)
out
sub
repnz
dec
jmp
cmp
(bad)
into
push
pop
adc
add
jb
rcr
test
out
aad
(bad)
push
sub
retf
adc
sub
int3
(bad)
rol
outs
fsubr
sar
scas
into
test
inc
mov
ja
call
es
mov
adc
xor
(bad)
xlat
xchg
mov
inc
hlt
or
jl
data16
test
xchg
or
dec
fisub
loope
or
loope
aam
push
sbb
xchg
or
retf
movs
stos
outs
inc
xchg
dec
dec
xor
pushf
in
xchg
add
push
outs
test
(bad)
fidiv
(bad)
xlat
inc
rol
imul
lods
xor
mov
dec
test
or
mov
out
and
les
mov
out
in
fldcw
scas
lea
add
ficom
sbb
cmp
int3
jb
inc
adc
imul
fimul
ins
push
(bad)
in
icebp
adc
xchg
pop
sub
scas
mov
mov
in
dec
jp
stc
sbb
ss
loopne
pop
mov
clc
cs
jle
ret
push
xchg
fisubr
add
retf
dec
out
fistp
mov
mov
sbb
and
xchg
ret
loop
lods
test
jne
ror
cmp
xchg
xchg
movs
lds
mov
test
cmp
push
xor
ins
test
inc
jae
adc
mov
inc
mov
push
(bad)
mov
jmp
popf
inc
call
mov
(bad)
push
cmp
mov
cmp
xor
dec
mov
in
pop
inc
cmp
in
fistp
in
clc
mov
cdq
test
stos
jmp
and
cmp
shl
xchg
aad
fsub
xchg
inc
mov
repz
pop
iret
hlt
clc
inc
xor
push
out
sub
push
push
stc
mov
jmp
int
mov
out
xchg
or
add
loope
aas
dec
cmc
das
movs
pop
push
mov
jns
scas
clc
ret
in
pop
rcr
out
cmp
dec
xchg
cmc
rcr
cs
pop
loop
push
test
pop
daa
(bad)
(bad)
int3
(bad)
pop
push
or
and
ins
int
jle
pusha
hlt
sub
adc
pop
push
(bad)
jmp
xchg
cwde
xor
rcr
out
jno
sub
mov
adc
pop
push
xchg
jmp
daa
(bad)
push
and
xchg
cli
cmp
das
cmps
(bad)
cld
leave
rcr
and
pop
std
sub
pop
cmp
repnz
lods
ja
cmp
push
ss
out
inc
aam
loop
out
js
xchg
jnp
je
sub
mov
dec
(bad)
pop
jno
ror
fdecstp
fs
daa
sbb
and
push
jnp
push
rol
and
das
inc
dec
outs
push
xor
mov
fnstenv
push
mov
ins
jmp
bound
mov
mov
xchg
outs
cdq
add
jb
jmp
cs
in
cs
ror
or
sar
sbb
cmovb
inc
adc
sbb
int3
pop
pop
mov
cmc
lea
adc
mov
push
jl
xor
add
js
sbb
ja
scas
movs
mov
aam
(bad)
cmp
popf
jmp
xchg
cmp
jne
jb
ins
das
cs
push
inc
sub
pop
in
popf
cvtdq2ps
mov
pop
xchg
jb
jge
push
out
call
leave
lods
sbb
push
jl
outs
in
addr16
jp
add
dec
adc
clc
cwde
lock
push
lock
data16
jecxz
stos
push
mov
sub
(bad)
xchg
in
add
inc
mov
loopne
popa
loope
outs
pop
push
ins
pop
addr16
mov
pop
or
(bad)
rol
pop
push
stos
pop
into
or
pop
clc
add
into
mov
into
add
scas
loope
retf
out
inc
mov
or
mov
and
fsubr
popf
paddusb
stos
add
mov
mov
add
mov
mov
xor
xor
xlat
popa
adc
(bad)
and
sbb
lods
xchg
push
pop
in
push
sahf
(bad)
mov
aaa
outs
out
dec
aad
icebp
pop
add
inc
sbb
mov
push
xchg
je
mov
dec
xchg
xchg
adc
ins
retf
test
mov
jno
mov
aam
sub
xchg
int3
jg
iret
pop
jmp
push
in
fs
sbb
test
out
(bad)
sbb
ret
mov
xchg
push
and
xchg
xor
(bad)
mov
cwde
jnp
hlt
dec
hlt
xchg
push
call
repnz
fucomip
add
cmp
popf
and
inc
inc
dec
mov
test
cwde
in
or
push
and
(bad)
sub
(bad)
ja
inc
jbe
sbb
jbe
addr16
cmc
adc
mov
mov
arpl
xchg
fnstsw
xor
inc
pop
and
(bad)
popf
xor
jbe
jae
pop
ins
and
dec
mov
cld
mov
inc
xlat
sub
test
(bad)
cmps
das
xchg
arpl
std
ror
adc
ret
imul
test
mov
pushf
sub
or
mov
xchg
fnsave
test
rcr
cmp
push
ja
xchg
adc
pusha
pushf
dec
sbb
or
sub
xor
call
add
out
std
push
add
and
pop
loopne
push
out
dec
sar
mov
pop
ret
stos
jecxz
test
popa
sahf
mov
sbb
clc
inc
pop
xchg
scas
fldenv
or
loopne
mov
lods
(bad)
out
push
out
push
addr16
mov
out
int3
dec
je
mov
dec
cmp
dec
addr16
and
outs
aad
mov
and
mov
gs
(bad)
pop
or
cmps
jne
xor
xchg
sub
add
arpl
in
call
and
imul
dec
lds
shl
in
pusha
dec
push
mov
sub
repz
pop
pop
push
push
repnz
dec
je
xchg
pushf
jb
fucomi
mov
retf
loop
mov
fcomp
lods
hlt
(bad)
mov
stos
sub
xor
dec
shr
int
mov
clc
xchg
push
pop
jo
in
mov
(bad)
cmp
dec
(bad)
fisub
outs
aas
imul
pop
push
cmp
pushf
scas
mov
add
and
mov
and
sbb
jae
sub
add
or
or
or
leave
mov
outs
dec
fdivr
ret
repz
call
movs
enter
mov
mov
add
sbb
rcl
ret
cld
xor
outs
mov
dec
cmps
sbb
xchg
pushf
cmp
adc
cdq
movs
jecxz
jb
stos
or
mov
lahf
retf
aam
pushf
xlat
or
(bad)
mov
arpl
in
xchg
xchg
push
aad
gs
and
aas
push
sbb
xchg
ret
stos
add
jbe
shl
loope
into
pop
mov
jmp
call
add
xchg
and
mov
xchg
pop
leave
(bad)
shl
and
(bad)
sbb
outs
ret
arpl
adc
mov
std
jmp
cmp
mov
mov
sbb
dec
sar
cmp
inc
dec
out
cs
adc
jmp
add
mov
pushw
lods
pop
and
in
jmp
stc
mov
fcmovne
out
in
stos
and
mov
mov
or
jmp
sub
lahf
shl
jecxz
mov
mov
(bad)
xchg
jne
sti
and
sbb
mov
fwait
nop
jo
inc
cmp
pusha
das
dec
jnp
pop
and
fdiv
imul
retf
sub
and
adc
outs
(bad)
(bad)
call
add
pop
dec
adc
or
or
dec
cwde
cdq
call
fimul
test
jo
sbb
pop
mov
call
lock
inc
fmul
jnp
push
mov
cli
into
lea
pushf
push
adc
push
mov
je
out
loopne
sbb
jnp
(bad)
dec
push
ins
dec
ins
mov
pop
xchg
leave
jle
or
inc
xor
clc
arpl
je
or
xor
mov
mov
jb
or
lea
mov
push
fld
mov
xchg
push
sub
xchg
mov
cmp
dec
into
outs
movs
xor
pusha
xor
movs
mov
cmc
pushf
xchg
fcomp
imul
or
cmc
dec
xor
lods
fnstcw
push
and
les
fst
lds
push
int
and
mov
jne
inc
lahf
jnp
in
cmc
data16
jle
std
jb
and
jge
push
jp
mov
call
or
mov
repnz
or
das
sub
leave
mov
mov
mov
out
movs
mov
aam
xchg
inc
clc
mov
aad
sti
adc
inc
retf
pop
xor
jbe
and
mov
aad
mov
push
inc
cmp
jmp
sub
xlat
fimul
repnz
ins
lods
and
vmovaps
scas
inc
adc
adc
or
clc
xchg
and
jmp
dec
jo
cmp
sbb
fwait
mov
cmp
(bad)
xlat
jge
or
clc
cmp
or
std
inc
cmp
inc
xor
mov
pop
lods
mov
dec
lods
scas
mov
jns
pop
jo
xor
shl
fst
pop
rcl
fdiv
clc
loope
std
add
test
cld
sbb
loopne
jbe
add
rcl
cmps
imul
or
dec
outs
ret
sbb
xlat
push
jp
push
xchg
jl
mov
out
call
test
dec
inc
into
or
cli
adc
and
push
mov
mov
ds
inc
sbb
mov
inc
pop
pop
lahf
sbb
call
(bad)
adc
shl
inc
std
aam
push
clc
add
jns
sbb
in
mov
enter
icebp
cdq
fdecstp
loopne
jg
pop
(bad)
sar
pop
ins
(bad)
and
sahf
pop
in
sbb
dec
imul
movs
icebp
jge
fdiv
arpl
scas
and
xchg
adc
xchg
rcr
pushf
loop
ja
jb
jo
pop
xchg
adc
pop
ja
push
lea
movs
mov
test
sbb
add
ret
or
retf
ficom
mov
movs
icebp
out
dec
sbb
pop
lds
aaa
sbb
or
mov
shl
icebp
push
adc
xor
test
inc
mov
cmps
jmp
fldcw
sub
xor
jecxz
mov
jp
out
mov
lods
ins
pop
jge
fimul
shl
mov
lahf
or
adc
jmp
sti
imul
xor
ins
and
out
push
aas
jnp
add
or
enter
lods
adc
cmp
xor
popf
imul
cmp
xor
nop
dec
mov
arpl
out
or
jge
and
lods
sti
jl
imul
call
or
adc
std
cmp
pop
sar
enter
cld
pop
ret
mov
jae
lds
and
sbb
dec
inc
push
shr
ficomp
adc
and
call
jecxz
cmp
mov
in
shr
jb
pop
pop
imul
dec
push
xor
int3
push
xor
dec
jmp
loope
cmp
jo
cmc
jns
mov
sbb
dec
adc
lds
mov
inc
dec
jbe
dec
mov
js
push
xchg
mov
stc
in
cmp
xchg
jmp
fwait
push
jge
dec
add
sub
ds
repz
daa
pop
bound
ror
xchg
add
mov
adc
pusha
(bad)
dec
ja
nop
(bad)
jmp
pusha
das
sahf
xchg
fidiv
jg
div
dec
dec
pop
mov
jne
mov
xor
loop
inc
inc
pop
fcomp
es
mov
out
mov
and
xchg
inc
daa
jb
mov
mov
test
push
pop
cmp
out
add
mov
pop
bswap
(bad)
cmc
loopne
pop
call
stc
push
xor
and
push
nop
repz
ss
popf
sbb
retf
shl
(bad)
adc
or
jg
scas
jmpw
or
call
sbb
dec
pop
fnstsw
mov
jo
adc
and
mov
and
or
sbb
pop
call
fiadd
or
daa
mov
ss
inc
out
mov
cmp
call
xchg
enter
hlt
into
div
pop
pusha
(bad)
cdq
pop
push
aad
mov
lods
cmp
mov
xor
enter
pop
or
mov
shl
push
bound
xchg
mov
(bad)
call
loopne
mov
cmp
daa
fwait
sub
xchg
std
nop
(bad)
push
or
dec
add
sub
inc
pop
fimul
cmps
add
into
mov
rol
movs
cmp
mov
push
fs
push
and
xchg
pop
mov
pop
popa
call
ror
lods
das
or
aaa
(bad)
or
out
iret
dec
movs
jle
fidivr
cmp
push
and
scas
sahf
cmc
xchg
fistp
jge
cli
loop
xchg
sub
xor
mov
loope
lds
pop
jns
call
mov
ret
jo
lds
xchg
cli
daa
add
sub
dec
mov
push
sbb
(bad)
call
test
jne
repz
sub
jb
sub
retf
popa
push
mov
rol
sub
aam
or
jnp
xchg
mov
pop
(bad)
mov
call
sub
iret
call
mov
xor
push
fs
cmp
lahf
retf
ret
cmps
push
adc
cmp
jmp
cmp
xchg
mov
push
gs
pop
dec
leave
dec
stc
pop
or
xchg
sbb
mov
sahf
jge
inc
dec
cwde
add
cmps
or
inc
add
jp
leave
in
xor
popa
into
shl
mov
scas
js
lods
push
jecxz
mov
cwde
xchg
push
push
(bad)
fdiv
retf
mov
sbb
dec
rcl
pusha
mov
mov
mov
test
mov
or
fstp
retf
sub
stc
inc
clc
retf
push
xor
imul
(bad)
bound
stc
outs
dec
popa
push
mov
push
daa
jo
arpl
dec
loope
in
imul
adc
jecxz
push
xor
sbb
sbb
jae
mov
leave
mov
lahf
dec
xchg
push
(bad)
cwde
pop
inc
out
dec
mov
(bad)
clc
int
dec
stos
dec
addr16
rol
cmp
cmp
imul
adc
adc
stc
in
add
sar
pop
cmps
mov
ja
gs
jl
mov
(bad)
cli
sub
mov
mov
push
cwde
hlt
adc
es
xor
push
scas
jae
(bad)
in
adc
xor
and
mov
shl
push
mov
retf
ret
cmp
add
test
xchg
call
xchg
mov
shl
inc
adc
data16
dec
or
js
xchg
jg
and
push
jmp
cmc
xchg
jo
add
inc
loopne
xor
add
jb
sub
dec
add
mov
test
out
lods
jno
fidiv
jbe
loopne
add
sub
(bad)
jmp
vpcomud
out
daa
sbb
mov
jmp
ret
pop
pop
jnp
adc
loop
hlt
bound
iret
xor
sub
jb
mov
xchg
in
out
jg
mov
mov
inc
pushf
and
loop
stos
xor
push
jmp
fsub
pusha
aas
push
rol
pushf
cmc
popf
dec
outs
cmp
pop
xchg
lods
mov
jae
jmp
sub
cmp
out
(bad)
mov
push
sub
sti
aam
inc
les
pop
add
ffree
add
pop
inc
xchg
xor
ror
repnz
into
inc
imul
shl
xchg
pop
into
ss
adc
and
das
sbb
call
push
sbb
jg
dec
cmps
out
sub
add
rcr
fsub
imul
push
iret
rcl
add
push
fwait
add
push
cwde
cdq
cmp
sbb
icebp
shr
mov
xor
fist
fbld
ret
imul
add
sbb
loopne
or
pop
xor
mov
icebp
fimul
(bad)
call
or
fcomip
xchg
xchg
mov
or
inc
push
and
pop
mov
inc
xor
scas
pop
sub
mov
jo
xchg
loope
loope
mov
retf
jmp
addr16
in
cmp
paddusw
xor
movs
adc
lock
pop
xor
div
das
sbb
iret
lods
mov
addr16
jp
adc
xchg
mov
xor
std
or
inc
jae
imul
test
scas
pop
sbb
lods
dec
sub
cld
push
xor
and
jge
pusha
js
push
pop
xlat
inc
pop
xor
ficom
push
dec
add
and
rcr
mov
push
nop
dec
imul
pop
(bad)
loop
or
push
stc
lahf
dec
pop
inc
inc
mov
jb
addr16
enter
addr16
mov
mov
dec
ss
push
les
rcl
js
jmp
(bad)
jp
in
(bad)
adc
mov
fisttp
sub
enter
gs
aaa
out
mov
(bad)
jp
jl
aad
sub
sub
arpl
ins
pushf
lods
fnstsw
mov
xor
pop
push
hlt
sbb
adc
sbb
mov
or
adc
xchg
leave
test
retf
in
call
jmp
ins
dec
stc
xor
add
or
jbe
fldcw
(bad)
mov
in
add
jecxz
or
push
loop
test
adc
pop
(bad)
add
xor
jb
xlat
jo
les
inc
mov
aam
jmp
mov
es
outs
mov
fild
adc
cmp
xchg
xchg
cmps
cs
jp
pop
(bad)
or
xor
arpl
lea
imul
adc
out
outs
rol
dec
mov
jne
or
dec
loopne
jnp
xchg
jp
call
shl
mov
bound
in
pop
sub
cdq
repz
aaa
pusha
mov
and
or
and
movs
jecxz
mov
ja
fimul
mov
addr16
retf
test
pusha
aas
jle
xchg
mov
(bad)
cmp
stos
or
mov
fistp
repnz
adc
mov
push
xchg
leave
push
ins
pop
test
pop
mov
jb
mov
leave
xor
pop
fild
mov
lock
jae
cmps
and
jno
and
pushf
stos
inc
sub
dec
or
pop
sbb
mov
nop
xlat
ja
js
xor
and
xor
or
cwde
stos
repz
mov
push
xor
mov
mov
lds
jle
(bad)
sahf
cmp
ror
push
xchg
shl
xor
add
jnp
cmp
mov
mov
(bad)
jecxz
adc
shl
or
lahf
call
or
inc
daa
cwde
shl
enter
pusha
mov
movs
or
loop
mov
arpl
in
in
clc
in
fsubr
mov
add
test
add
into
(bad)
mov
push
shr
shl
pop
inc
jle
sub
es
stos
xor
pop
pop
push
dec
sti
mov
cld
adc
xor
adc
icebp
xchg
loop
repz
adc
jns
pop
add
add
dec
mov
fmul
sub
or
cmps
(bad)
call
jb
scas
rcr
add
stos
mov
dec
cmp
inc
ror
setge
js
pop
enter
mov
aaa
fmul
into
adc
int3
or
cmp
ss
(bad)
das
call
lods
mov
scas
mov
dec
dec
jmp
adc
mov
popf
lock
lods
jg
ficomp
aas
jmp
jg
add
fdivr
addr16
jno
pop
mov
fs
sub
out
sbb
push
test
ins
dec
mov
mov
dec
mov
inc
push
fisub
jg
xchg
rcr
mov
call
inc
sub
ja
sbb
sti
nop
mov
adc
sbb
aaa
frstor
jle
mov
pushf
in
dec
aad
sbb
and
mov
xchg
dec
mov
int3
xor
ror
pusha
out
bound
daa
ficomp
ret
scas
aad
(bad)
mov
push
das
sub
mov
pop
pop
leave
fadd
mov
aas
out
lods
and
sub
iret
popf
mov
addr16
sbb
mov
add
movs
or
push
sub
into
mov
imul
inc
sahf
or
mov
test
xor
and
push
cmp
ficom
mov
(bad)
xor
loop
xor
retf
stc
adc
inc
fdiv
sti
or
dec
into
enter
fsubr
ror
bound
xchg
sbb
mov
xchg
out
stos
in
out
mov
dec
pop
adc
(bad)
(bad)
cdq
enter
jb
aad
sbb
pop
adc
inc
mov
push
mov
fcmovb
sbb
(bad)
mov
sbb
pop
fidiv
xchg
dec
sbb
mov
dec
nop
cmps
pusha
inc
repz
xchg
mov
sub
sahf
sub
aad
and
xchg
and
ficom
pop
sub
sahf
lea
icebp
scas
mov
pop
shl
fs
sub
push
adc
xchg
test
or
gs
xchg
div
jmp
stc
sbb
mov
inc
pop
repz
jmp
popf
arpl
mov
mov
sub
(bad)
div
fiadd
cmp
mov
lds
mov
pop
sbb
cmp
ret
and
hlt
mov
mov
pop
push
adc
in
sbb
jg
fwait
cmp
jmp
push
int
sub
repz
pop
sbb
push
lods
sti
jo
push
icebp
jmp
mov
add
push
mov
mov
mov
jno
inc
dec
sub
dec
nop
adc
mov
xchg
(bad)
iret
call
pop
pusha
mov
inc
jg
mov
btr
jo
pop
add
leave
stos
test
mov
push
mov
shl
nop
(bad)
bound
ficom
xchg
lea
fiadd
retf
das
xchg
cdq
bound
outs
jecxz
cmp
xchg
xchg
pop
mov
dec
xor
jge
pop
adc
nop
push
call
pop
pop
mov
mov
inc
mov
adc
scas
call
add
jg
je
xchg
iret
xor
jbe
jge
sti
or
mov
pop
sbb
sahf
inc
and
sti
popf
scas
cmps
cmp
popf
xor
adc
pop
(bad)
mov
fiadd
stos
mov
cmps
adc
lock
push
push
cmp
rol
mov
std
add
cld
outs
mov
sub
retf
add
xchg
repnz
xchg
es
xchg
adc
sti
inc
arpl
aad
push
sbb
repz
loop
scas
push
push
add
xor
(bad)
fild
adc
or
xchg
adc
dec
sub
and
leave
jge
(bad)
push
lds
cmp
fist
fsubrp
data16
push
fldenv
add
out
jge
pop
xchg
sbb
aad
aas
push
shl
push
ins
dec
fsubr
jns
mov
xor
sbb
cmps
sub
adc
or
inc
gs
xor
jno
xchg
jge
cmp
out
not
mov
and
movs
(bad)
lods
shr
inc
or
pop
rcl
in
push
loopne
mov
leave
popf
je
dec
test
repz
outs
pusha
inc
or
push
pop
xchg
xchg
mov
jmp
ins
cwde
jbe
mov
out
xchg
mov
ss
pop
repnz
stc
mov
jmp
rol
mov
jmp
lods
jmp
stos
gs
(bad)
in
rcl
rcl
fwait
mov
jmp
or
mov
push
out
cmp
cmp
pop
push
mov
lods
cmp
add
movs
sub
adc
inc
push
sub
and
sbb
push
es
dec
call
loope
or
out
mov
jo
inc
loop
mov
mov
leave
sbb
sub
inc
nop
xchg
xor
or
mov
adc
mov
clc
and
jo
xchg
sbb
mov
mov
test
add
rcl
lahf
cdq
js
pop
es
xchg
test
enter
mov
shr
ja
ins
sub
mov
lock
cmc
aam
(bad)
xor
mov
sbb
push
sahf
fidivr
dec
and
jo
mov
or
cli
loope
aad
fnstenv
add
inc
push
bound
les
adc
aaa
sub
in
lea
sub
movs
xchg
inc
jnp
push
inc
mov
adc
sub
inc
test
and
and
fild
push
mov
cmp
iret
fadd
and
call
cmp
(bad)
and
sti
cld
adc
push
xchg
lahf
(bad)
pop
mov
gs
icebp
sbb
pop
nop
xor
ins
inc
pop
mov
dec
in
shr
xchg
je
(bad)
xchg
xchg
pinsrw
fild
sbb
xchg
outs
xlat
and
lods
sub
xchg
adc
fcomp
add
inc
push
cmps
dec
mov
fwait
ret
xor
push
jmp
and
daa
sahf
and
shr
mov
push
int
repz
fdivr
rcr
jp
jb
sbb
(bad)
mov
push
push
iret
lea
scas
xchg
cmc
aas
ja
lods
fnsave
lods
pop
in
inc
cmp
mov
outs
cmps
dec
push
sbb
ret
jb
or
add
das
xor
sbb
mov
jle
imul
push
mov
cmps
movs
xor
mov
and
cmp
ins
add
jb
push
jp
inc
xor
xor
outs
mov
repz
icebp
push
mov
push
int
add
popf
out
and
and
push
mov
sub
jecxz
in
xchg
rcr
out
and
std
push
cdq
push
pop
je
cmp
pop
cwde
retf
pop
jnp
xchg
jmp
sub
xchg
arpl
fcom
jmp
inc
or
xchg
jmp
lock
fisttp
jmp
xor
and
aad
add
out
movs
outs
dec
jno
jmp
dec
pushf
fisttp
cmp
out
pop
daa
and
push
push
inc
cwde
lea
jnp
adc
jae
cld
sub
int
xchg
adc
adc
fisub
cs
stos
cmc
sbb
hlt
inc
outs
rcl
das
call
mov
addr16
sbb
sbb
push
dec
int
pop
cli
mov
push
mov
inc
push
sub
out
cmc
cmc
push
push
out
les
jmp
fld
fldlg2
xchg
std
jno
xchg
xor
data16
mov
retf
jl
sbb
mov
scas
mov
stos
mov
mov
and
inc
cld
pop
lods
mov
mov
or
aam
inc
push
push
xor
pop
and
(bad)
aaa
mov
imul
inc
mov
mov
hlt
test
mov
inc
ror
ret
sub
in
inc
jle
repnz
rcl
std
mov
mov
add
push
loop
add
iret
xor
cmp
scas
push
sub
movs
mov
push
in
jmp
jne
dec
mov
xor
repz
test
inc
xor
jle
push
push
cmp
xor
sbb
and
stc
repz
ins
lahf
push
pop
mov
idiv
sub
xor
repz
mov
mov
push
lds
(bad)
gs
xor
(bad)
mov
jae
stos
in
cmp
mov
int
and
lods
push
push
xchg
repz
scas
adc
push
mov
pop
mov
div
arpl
xchg
push
int
sbb
mov
push
push
mov
push
pop
gs
idiv
ds
repnz
xor
xlat
sub
pop
mov
adc
repz
imul
add
or
mov
add
and
sti
out
cmp
mov
clc
add
ja
movs
mov
pop
add
test
xchg
and
out
shr
adc
je
pushf
movs
jle
xor
neg
ficomp
das
ins
(bad)
(bad)
cmp
add
aaa
clc
mov
xlat
movntq
push
cmp
and
out
push
inc
fs
call
jl
out
dec
dec
test
fld
lock
push
push
test
lahf
add
push
dec
mov
adc
enter
mov
jo
jae
cs
add
shr
inc
int3
cmp
mov
inc
out
adc
aad
sahf
push
out
movs
sbb
jae
mov
fcmovb
fs
cld
loop
out
xor
mov
test
sub
jb
xchg
(bad)
jae
sbb
mov
add
jmp
push
adc
add
mov
pop
sub
in
(bad)
mov
or
(bad)
cs
int
sbb
mov
cmp
retf
movs
pop
pop
push
imul
in
sbb
cmc
and
xor
out
(bad)
mov
sti
jmp
in
xchg
cmc
retf
pop
pop
imul
(bad)
les
mov
mov
loopne
js
dec
mov
ret
sar
out
sub
sbb
dec
icebp
cli
mov
lods
rcl
jp
add
std
mov
shr
sahf
scas
popf
call
(bad)
not
xor
cmp
mov
ret
and
aas
jbe
jl
ror
test
popf
jb
pop
fadd
sbb
cmps
xor
mov
xor
and
xchg
pop
jmp
int3
push
adc
and
icebp
ins
or
rcl
sbb
(bad)
es
retfw
mov
out
mov
jge
das
jp
popa
aas
xor
push
sahf
or
sub
cmp
jecxz
popf
in
pop
mov
bound
sahf
pusha
xor
or
jae
aam
and
mov
js
push
xchg
and
fnstenv
retf
into
fdivr
and
adc
jae
js
xchg
jne
cld
add
dec
dec
mov
mov
pop
push
add
add
lods
mov
mov
icebp
out
repnz
adc
ss
in
test
mov
mov
pop
fdivr
out
scas
fwait
lahf
mov
cmp
mov
pop
ret
adc
dec
add
aaa
int3
xchg
xchg
out
jo
inc
daa
adc
rol
dec
jbe
hlt
stc
lea
in
imul
dec
repz
dec
mov
clc
push
pop
dec
push
xor
push
dec
call
int
pop
sbb
pop
ins
push
retf
gs
sub
cmp
mov
mov
pop
mov
bound
std
mov
sbb
mov
dec
push
jo
pop
sub
and
pop
fcmovbe
mov
sub
sub
xchg
sbb
pop
push
xchg
push
jno
ror
clc
sar
jle
shl
inc
mov
jmp
and
cdq
outs
jno
sub
cdq
call
addr16
push
cmps
pop
cdq
fld
mov
mov
mov
popf
xor
push
das
aad
aas
and
repnz
push
pusha
xlat
(bad)
push
or
gs
cmp
pop
sahf
(bad)
push
hlt
into
dec
xor
das
pop
cmp
jo
clc
xchg
in
pop
mov
arpl
inc
lea
call
and
(bad)
ins
jg
repz
lea
scas
and
add
mov
cwde
adc
push
sahf
aas
test
retf
mov
mov
retf
ins
in
in
cmc
xor
cmc
mov
jmp
popa
push
enter
mov
(bad)
shr
add
test
and
add
movs
loopne
or
fnsave
in
ror
iret
clc
pop
xchg
pop
fadd
pop
aam
add
pop
fsubr
in
adc
imul
(bad)
nop
sub
stos
push
jnp
outs
inc
push
mov
ds
jmp
and
or
in
xor
cs
add
in
xor
jo
sub
popf
fs
outs
inc
stc
inc
int
call
and
sub
gs
fs
sub
jne
or
xor
mov
push
dec
ins
jns
jmp
mov
lock
cdq
enter
sub
out
pusha
sbb
sub
dec
sub
stos
lock
mov
xchg
scas
inc
pop
push
xor
bnd
mov
adc
jmp
lods
out
into
xchg
test
jae
and
push
jns
lea
call
mov
pop
sar
add
(bad)
adc
sbb
inc
js
jecxz
cli
mov
clc
xor
and
push
and
mov
sub
scas
addr16
mov
mul
mov
inc
xor
sbb
outs
mov
(bad)
sub
test
lods
fwait
mov
out
enter
adc
mov
cmps
xor
xchg
dec
mov
mov
sti
movs
adc
mov
sbb
push
outs
fbld
mov
imul
cmp
sbb
(bad)
pop
dec
dec
nop
sub
(bad)
push
pop
jge
iret
(bad)
fadd
call
push
stos
mov
(bad)
mov
jge
(bad)
iret
das
js
inc
imul
test
add
test
jmp
pop
in
shl
mov
mov
test
mov
lods
cli
aas
ins
fdivr
ror
cdq
cmp
mov
jle
jge
movs
jl
ins
cmp
cdq
or
jne
mov
stos
test
cmp
test
inc
mov
sub
lea
stos
in
cli
push
int3
cwde
std
scas
pop
push
jno
push
lds
popa
and
jg
mov
mov
push
mov
sub
clc
sbb
dec
out
lea
xchg
fmulp
xchg
and
lds
repz
aad
lds
loope
or
rcr
fiadd
cmp
cmp
(bad)
lods
xchg
jbe
sar
enter
popf
fadd
btc
inc
aam
xor
loope
data16
out
movs
fidivr
jbe
mov
and
movs
shr
mov
fs
inc
mov
and
xchg
mov
sbb
test
push
jmp
loop
pop
xchg
jge
out
cmp
mov
push
pusha
mov
xor
imul
push
clc
fidiv
dec
out
bound
loopne
in
retf
fidivr
cmp
jae
push
imul
jle
push
fldenv
cmp
xor
cdq
hlt
rcr
ds
dec
jmp
dec
adc
xor
loop
mov
data16
inc
in
ror
ins
add
fwait
cmps
xor
es
xor
int3
repnz
sbb
cmp
lahf
add
push
push
cmp
cld
movs
mov
mov
pusha
retf
add
fisttp
xchg
mov
mov
mov
lock
int
test
les
and
rol
ds
hlt
and
cs
sub
(bad)
test
pop
mov
cmp
scas
imul
ss
and
xor
mov
aam
adc
sbb
cmps
andnps
xor
lock
sahf
jle
jge
mov
push
and
imul
mov
rcl
outs
mov
and
xor
pop
and
adc
dec
pop
add
and
jno
lock
pop
pop
cld
add
dec
pusha
jb
fld1
push
and
pop
mov
jo
out
adc
jne
out
dec
mov
pop
lods
call
retf
retf
ja
sar
mov
ss
in
inc
jno
push
pusha
cmp
popa
dec
ret
cmp
enter
dec
mov
adc
add
scas
pop
dec
mov
lods
xchg
push
shl
(bad)
pop
retf
mov
mov
cmps
shl
ja
addr16
cs
mov
ja
iret
xchg
xchg
stos
addr16
loopne
mov
sub
nop
rcl
push
outs
jmp
dec
pop
mov
ret
pop
pop
sbb
add
es
outs
stos
dec
ins
push
sub
mov
ss
mov
jmp
std
out
test
add
out
lods
and
sub
sub
test
adc
aam
(bad)
(bad)
pop
int3
call
mov
inc
sbb
cmc
xchg
mov
adc
push
outs
cwde
ret
daa
pop
jle
(bad)
aad
dec
fst
push
push
fbld
(bad)
xor
stos
push
mov
mov
stos
xchg
pop
adc
dec
and
jns
ror
movs
rol
add
mov
out
ja
scas
sbb
add
dec
sbb
xchg
out
(bad)
pop
nop
mov
mov
popa
and
lods
xchg
das
popf
xor
add
xchg
imul
loop
sbb
mov
jnp
xlat
les
xchg
inc
fs
loop
test
dec
dec
push
daa
xor
out
mov
mov
or
inc
leave
ja
cwde
gs
pop
sbb
outs
outs
call
ror
xlat
pushf
jae
cmps
jle
adc
or
cdq
popf
std
scas
mov
cdq
inc
das
imul
jbe
mov
fwait
lock
mov
rcl
ds
test
mov
xor
das
imul
mov
mov
inc
fadd
mov
gs
mov
ins
rcr
jge
pop
push
or
push
xor
or
mov
cmc
xor
sti
sbb
aam
sbb
dec
stos
test
pop
sub
jge
test
xor
fcom
or
pop
out
out
popa
test
cli
pop
fs
cld
ret
adc
jb
mov
xchg
arpl
jo
jl
fbld
movs
aaa
mul
imul
into
into
mov
jecxz
das
in
push
push
sbb
mov
cdq
or
push
loopne
pop
fcomi
scas
scas
sbb
xor
(bad)
jle
ret
in
inc
jno
aas
or
and
jl
repz
cmp
dec
in
test
mov
mov
cwde
xlat
enter
push
int3
xor
fmulp
xchg
add
hlt
rol
(bad)
fcmovnb
add
(bad)
xor
mov
ficomp
mov
ja
sub
dec
push
push
in
mul
fsubr
jl
sub
aas
call
adc
mov
cmp
push
push
in
sbb
ret
cmp
fstp
ret
and
fwait
or
daa
lock
push
cli
push
dec
xchg
add
mov
xchg
test
ins
inc
push
add
lahf
sbb
mov
add
mov
push
adc
mov
addr16
bound
add
cmp
ror
les
push
out
mov
gs
jp
jae
loopne
cmps
ret
fadd
out
add
cwde
and
inc
repnz
imul
mov
inc
hlt
pusha
movs
cmps
and
mov
icebp
push
lods
fnstenv
pop
mov
mov
push
loope
add
jmp
imul
add
jmp
adc
xor
adc
clc
test
dec
dec
ja
in
aaa
sub
cmc
call
fdiv
or
icebp
ror
lods
cs
lods
mov
mov
icebp
mul
stos
and
and
and
pop
fidivr
adc
dec
mov
jns
cwde
cli
pop
jg
pop
lock
test
scas
gs
out
jb
fucompp
mov
or
aad
mov
and
test
imul
(bad)
neg
movd
nop
cmps
fmul
les
jb
movs
dec
sti
xor
jmp
mov
imul
and
test
repnz
and
lock
mov
call
je
test
shl
mov
ja
sbb
fwait
xchg
test
push
mov
push
push
push
adc
pop
inc
cmp
popa
retf
and
add
xor
add
(bad)
jb
inc
cld
xchg
out
sbb
add
lds
mov
int3
cmp
mov
ds
ret
sbb
xchg
add
in
loope
ja
jne
pop
aaa
fisub
dec
fiadd
cli
stos
mov
push
in
jno
xor
push
jmp
sbb
out
adc
jnp
clc
dec
movs
jmp
lods
fdiv
and
fld
jbe
aam
(bad)
mov
and
fdiv
pop
and
xchg
shl
aam
mov
fwait
cmc
mov
dec
lds
inc
arpl
push
push
in
xlat
stc
movs
jne
fs
mov
jle
fldenv
sub
popf
cmc
mov
pop
aaa
mov
fisubr
pop
jno
sbb
push
cdq
call
inc
dec
hlt
ins
test
lods
xlat
fistp
jns
fiadd
imul
test
arpl
xchg
cmc
sub
in
icebp
pusha
sti
or
add
pop
mov
lods
mov
fwait
xor
scas
fxch
sub
loope
sbb
fisttp
lds
sti
in
mov
adc
mov
adc
test
mov
jl
test
pop
loope
dec
pop
inc
cli
popf
hlt
sub
pop
dec
xchg
addr16
shr
or
fisttp
pop
xchg
ret
test
adc
sti
xchg
jmp
inc
jae
push
sbb
mov
stos
les
jno
sub
xlat
nop
inc
push
popf
adc
jo
dec
inc
xor
dec
out
iret
fsub
mov
push
dec
jmp
aam
scas
call
bound
out
loop
and
movs
xor
call
call
mov
dec
xor
je
push
dec
imul
adc
ret
adc
ins
imul
int
cmp
cmps
icebp
aas
hlt
outs
xchg
pusha
ds
jp
jle
mov
adc
cs
jae
xchg
cmc
in
test
mov
in
in
mov
xchg
mov
dec
cmp
pop
hlt
xchg
retf
or
bound
sub
xlat
gs
push
(bad)
sti
jmp
push
adc
add
hlt
mov
icebp
sub
xchg
mov
scas
adc
out
mov
cli
pusha
rcr
aam
xchg
jmp
cld
xchg
adc
bnd
out
in
lods
repnz
(bad)
hlt
push
cmp
loop
jb
sub
jl
cwde
loopne
aaa
sbb
mov
jae
pop
and
sbb
inc
out
mov
push
pop
push
xlat
stc
jae
mov
mov
(bad)
icebp
iret
pushf
fwait
push
je
cwde
loope
mov
lods
push
out
pop
and
hlt
(bad)
cmps
ja
or
fs
inc
enter
inc
cmc
push
loope
pushf
in
xchg
push
or
out
and
mov
mov
push
and
mov
neg
lahf
dec
mov
stc
add
or
push
adc
xlat
add
mov
dec
in
(bad)
popf
push
mov
mov
or
popa
leave
nop
retf
mov
imul
pop
gs
leave
stc
dec
jecxz
cmp
stos
(bad)
pushf
sbb
pop
pop
pop
inc
outs
pop
enter
fld
or
pop
mov
imul
jecxz
in
mov
or
sbb
sar
mov
out
xchg
pop
mov
arpl
jo
xchg
in
push
icebp
mov
cmp
aad
xor
lahf
push
sub
mov
xor
pop
hlt
xchg
push
adc
out
inc
sar
push
mov
or
cli
movs
aam
mov
gs
jl
jne
xchg
das
push
(bad)
and
outs
mov
xchg
shl
setg
lea
pop
or
movs
gs
outs
ret
mov
sub
in
mov
jmp
jns
mov
inc
dec
iret
out
inc
leave
pmulhw
loopne
dec
adc
sub
es
(bad)
push
jmp
mov
pushf
imul
hlt
sbb
adc
adc
movs
or
sar
sub
nop
mov
fist
add
jecxz
sbb
jl
fs
(bad)
fst
inc
(bad)
bnd
sbb
or
cmp
mov
dec
popa
cs
lock
inc
pop
push
ja
push
icebp
xor
sub
mov
pushf
lock
and
push
add
out
mov
mov
mov
inc
jl
push
leave
movs
and
arpl
popf
out
cmp
test
jp
jle
or
pop
sub
lock
int
add
cmps
nop
mov
repnz
(bad)
xchg
mov
sbb
adc
mov
stc
not
jno
movs
in
or
loopne
popa
or
cmp
in
jbe
sahf
scas
mov
push
jge
gs
pop
jbe
mov
mov
test
push
icebp
stos
movs
push
add
xor
ret
cmp
pop
sbb
cdq
leave
dec
ret
push
leave
dec
push
push
dec
pop
int3
xchg
and
(bad)
pop
mov
and
js
fcomp
(bad)
xchg
sbb
push
add
movs
push
mov
loope
test
or
dec
rol
mov
sbb
xor
gs
jne
sbb
mov
xchg
push
out
sbb
push
loopne
xchg
inc
lahf
(bad)
in
cmp
mov
test
jmp
ss
and
data16
popa
adc
retf
aad
jae
icebp
pusha
cmps
mov
add
or
aas
or
cmp
push
sbb
(bad)
popf
stos
sbb
cmps
xor
movs
mov
mov
je
sti
cmp
xor
push
cmp
cmp
aaa
adc
ss
sbb
retf
xchg
or
js
shr
shl
xor
outs
shl
aaa
shl
test
inc
jno
jbe
leave
(bad)
(bad)
out
xor
xor
int3
pop
aad
stc
imul
imul
mov
test
fiadd
rol
dec
test
mov
fstp
pop
push
jge
icebp
outs
dec
rcr
test
xchg
mov
out
xchg
fldcw
pushf
pop
or
lock
jno
stc
dec
mov
xor
scas
fsubr
lods
pop
lock
or
cmp
(bad)
mov
push
xchg
js
hlt
push
add
xor
daa
(bad)
sbb
arpl
jecxz
stos
jg
mov
adc
ss
ins
push
iret
xchg
mul
xchg
push
sub
das
sub
je
leave
movs
jo
stc
(bad)
jne
int3
clc
stos
mov
lds
jg
xor
imul
pop
sbb
shr
xchg
inc
or
adc
cli
inc
call
push
je
mov
(bad)
pop
cmps
sub
sub
push
mov
rcr
adc
ja
adc
push
fild
test
jns
and
push
add
popa
sub
test
js
sbb
loop
push
test
xchg
xchg
add
cwde
fnstcw
pop
enter
shl
mov
or
mov
es
in
pop
dec
imul
pop
jb
xchg
out
lods
pushf
popf
lds
sub
cmp
nop
lea
fimul
popa
aad
mov
add
ror
dec
pop
and
in
adc
jns
and
enter
shl
(bad)
jle
ins
sbb
loope
xlat
and
sub
out
mov
popa
add
(bad)
push
icebp
cmps
sub
push
sub
cmp
cmp
or
sar
dec
mov
iret
int3
fs
mov
mov
xchg
add
xor
jmp
mov
daa
xchg
push
sbb
jae
les
(bad)
lods
jl
adc
pushf
jge
fild
movs
aam
mov
ins
loopne
jecxz
js
mov
xor
stos
pop
jbe
cmp
bound
dec
or
push
data16
fbld
pop
div
push
test
xchg
in
movs
in
sbb
add
sti
and
push
loop
push
lods
dec
xor
mov
mov
outs
fld
iret
stos
mov
fcmovne
scas
add
mov
mov
clc
outs
cmp
cdq
push
pop
out
daa
sub
cmp
out
aaa
int3
in
sub
mov
fsubrp
xchg
add
dec
js
mov
add
jle
adc
xor
rol
cmp
(bad)
enter
cmp
retf
in
push
xchg
retf
pop
mov
ins
imul
shr
adc
inc
stos
jns
out
mov
xchg
fcomp
(bad)
or
jle
mov
dec
jno
jne
mov
cmp
daa
pop
repnz
loopne
inc
ret
into
cmp
loopne
pushf
dec
adc
and
stc
ja
stos
sbb
adc
sbb
stc
fsub
push
stc
shl
cwde
mov
xchg
repz
clc
mov
aam
and
xchg
enter
xlat
out
shr
sub
dec
mov
les
mov
cmps
jle
push
test
cmp
jne
aaa
pop
dec
out
inc
fidiv
adc
inc
loopne
scas
pushf
ja
arpl
adc
sub
je
int3
xor
cmp
push
rcl
push
inc
push
jns
ins
loop
(bad)
int3
push
pop
loopne
movs
pusha
pop
call
ret
std
and
lock
and
pop
push
jg
daa
jmp
pop
add
js
retf
shl
sbb
outs
jne
pusha
xor
ss
(bad)
loop
leave
jmp
xchg
or
rol
mov
mov
mov
sbb
adc
je
movs
pop
aam
and
lock
(bad)
ja
adc
(bad)
xchg
push
and
cdq
cmps
add
sbb
sti
xor
cmp
xchg
pushf
scas
or
out
sbb
popf
(bad)
fimul
rcr
or
cld
push
add
pop
sti
popf
test
rcr
inc
repnz
mov
push
hlt
add
or
sbb
mov
stos
dec
in
push
scas
push
xor
mov
aas
popf
and
sar
fidivr
add
es
inc
mov
jae
scas
lock
pop
inc
movs
push
ins
stos
jno
jbe
mov
sbb
das
test
dec
fst
icebp
sar
idiv
mov
dec
or
mov
jno
mov
retf
cmp
push
out
sti
stos
adc
sbb
mov
jb
mov
(bad)
call
mov
stc
jp
mov
sbb
jno
sbb
test
cmp
fiadd
xchg
clc
pop
pop
push
jmp
cmp
cmp
mov
scas
(bad)
push
push
lods
call
imul
mov
enter
lods
sti
nop
test
add
pop
pop
xchg
enter
jg
mov
push
mov
in
mov
or
mov
push
cmp
dec
push
jmp
aam
data16
ja
test
out
mov
out
pushf
add
add
pop
in
scas
lock
jae
in
pop
mov
jp
jmp
inc
inc
addr16
leave
test
mov
xchg
mov
cmp
outs
repnz
in
test
(bad)
fadd
mov
pop
jns
dec
not
in
or
daa
sub
mov
xlat
jecxz
repz
(bad)
cli
bound
pop
stos
add
cwde
inc
dec
repnz
adc
jge
in
mov
inc
repz
mov
hlt
lea
inc
inc
cdq
and
jle
cmp
push
mov
jl
jge
push
and
and
adc
mov
icebp
lock
inc
arpl
xchg
or
out
push
add
ds
nop
aaa
(bad)
(bad)
mov
xchg
xchg
and
push
and
push
nop
jmp
mov
leave
sbb
stc
call
and
add
dec
xchg
sub
jmp
arpl
or
test
push
cmps
fmul
lock
out
jo
jg
popa
jmp
sub
dec
jo
inc
mov
jmp
xchg
repnz
cmps
jbe
jge
mov
pop
or
push
mov
cs
test
out
mov
pop
push
pop
retf
pop
cmc
xchg
adc
test
inc
or
push
mov
loope
test
rcr
sbb
mov
addr16
in
neg
dec
xchg
hlt
cld
outs
xchg
xchg
aad
dec
sub
sahf
std
retf
and
sbb
push
movs
push
jno
fimul
pop
jl
push
cmp
mov
jmp
les
cmp
sub
mov
icebp
pop
repz
cmp
cmp
loope
hlt
push
lds
xchg
mov
out
xchg
cmp
and
pop
add
mov
lods
pop
inc
iret
arpl
mov
sahf
add
ret
xchg
or
jg
fldcw
or
jns
retf
lds
adc
push
sub
xchg
shl
jp
and
das
cmp
(bad)
cdq
sbb
mov
jb
xchg
ins
mov
cmps
mov
cli
loopne
ja
or
cld
(bad)
cmc
call
iret
and
push
sahf
(bad)
cdq
ss
ret
inc
(bad)
add
daa
xor
and
add
arpl
arpl
mov
ror
lahf
and
jb
aam
jmp
dec
inc
call
movs
inc
inc
bnd
adc
cmp
(bad)
and
into
cmp
retf
clc
mov
scas
sub
push
xchg
jno
out
lods
ror
jbe
not
fst
ror
mov
sbb
ret
mov
jecxz
lods
push
loop
xor
sahf
fiadd
sbb
mov
(bad)
push
xchg
mov
push
mov
sub
mov
ret
test
sub
in
inc
idiv
mov
pop
fmul
scas
aam
fwait
xor
or
jecxz
adc
shl
mov
sbb
cwde
pop
sub
mov
pop
pop
repz
sbb
and
add
sbb
call
push
cdq
dec
xlat
jae
stos
mov
out
cs
jae
ret
inc
add
test
test
and
push
(bad)
cmp
push
jae
shl
or
jne
push
inc
retf
lock
push
sbb
loop
mov
test
test
sub
mov
sub
inc
inc
iret
xor
inc
addr16
ins
jne
mov
push
in
sub
jmp
outs
adc
ret
js
adc
loope
jns
lahf
push
sub
cmp
mov
mov
pop
pop
loope
ins
int
inc
xchg
inc
ret
ds
in
bound
stc
fwait
ja
mov
data16
cmp
inc
fild
jecxz
out
ret
inc
xlat
cmp
je
or
add
sbb
push
pop
mov
aas
je
pop
cmp
pop
cwde
mov
jp
mov
mov
js
dec
ficom
mov
popa
mov
std
lock
mov
rcr
sti
mul
jns
adc
pop
xor
jns
pop
mov
jle
xor
stos
xchg
mov
nop
jmp
mov
xchg
inc
push
sub
pop
stc
sbb
sub
xor
les
xor
and
mov
jo
mov
sub
add
imul
test
es
dec
mov
lahf
mov
and
test
jmp
into
dec
jecxz
retf
xchg
mov
mov
pop
(bad)
and
outs
call
jecxz
es
daa
lds
pop
mov
mov
loop
pop
aas
add
add
jae
in
xor
stos
jae
and
movs
adc
adc
in
xor
push
xchg
add
repz
daa
ins
fnstcw
pushf
pop
cmp
out
jmp
xor
push
add
test
mov
mov
(bad)
or
xchg
mov
nop
and
mov
imul
pop
js
je
ins
add
popf
mov
xor
imul
xchg
xor
call
pop
mov
push
jmp
xor
inc
leave
xor
xchg
adc
mov
fild
inc
xchg
(bad)
push
cwde
ret
cli
leave
dec
cmps
fldcw
sub
seta
or
mov
cmc
jnp
jno
or
(bad)
push
mov
xor
ret
pop
push
stos
out
fisttp
inc
dec
push
jae
das
dec
repz
mov
sub
mov
adc
inc
out
xor
cmp
xlat
fisttp
mov
outs
test
pop
enter
cmp
jmp
sub
js
sahf
movs
test
fldl2t
mov
icebp
xor
imul
repnz
ds
cmps
rcr
ret
stc
loope
pusha
(bad)
cmp
lahf
data16
fld
out
pushf
fnop
mov
push
dec
add
mov
in
out
ret
stos
iret
dec
jns
popf
retf
sbb
xor
mov
cmps
pop
ss
in
dec
xlat
inc
daa
push
jmp
and
add
fmul
jno
lahf
push
cmp
enter
inc
xor
cmp
ret
sub
mov
out
cmp
out
mov
and
arpl
in
or
mov
jmp
in
lahf
bound
adc
xor
iret
adc
xlat
sub
aas
call
gs
(bad)
xor
cdq
clc
inc
ins
js
add
mov
int3
jge
mov
repnz
lahf
push
pusha
pusha
outs
sub
movs
les
out
leave
rol
pop
lods
bnd
xor
das
test
adc
sbb
mov
mov
shl
pop
in
cmp
ins
popf
rcl
or
enter
imul
ss
inc
xchg
xor
mov
add
out
and
cld
and
or
add
shr
pop
sbb
push
sbb
repnz
xchg
lods
rol
outs
mov
sbb
fs
call
(bad)
fucomip
in
push
xchg
xchg
push
ficomp
mov
outs
mov
mov
enter
data16
mov
push
loope
aaa
and
or
(bad)
mov
dec
sbb
shl
ret
mov
pop
(bad)
std
test
inc
jb
loop
push
inc
sub
push
test
outs
jle
pop
and
bound
sahf
xchg
mov
xchg
sub
mov
fwait
mov
add
sub
stos
jne
(bad)
call
and
push
outs
mov
ins
mov
mov
scas
mov
daa
pop
test
fcmovu
loope
and
retf
ja
(bad)
(bad)
call
cmp
pop
xchg
aam
xor
cdq
stos
cmps
in
popf
aas
inc
adc
mov
ins
jmp
fcom
bound
mov
call
sub
test
imul
push
push
or
inc
xchg
jno
jne
out
stos
xchg
movs
or
bound
pop
outs
jb
jne
or
ret
dec
cmp
(bad)
in
leave
xor
adc
shr
or
out
or
dec
test
inc
ror
rol
rcl
shl
jle
rcr
sbb
ror
xor
dec
push
js
ror
mov
dec
push
add
leave
dec
push
fistp
ror
int
push
add
jns
sar
cmp
enter
mov
adc
jae
ret
aam
adc
mov
inc
or
into
in
xchg
ds
pop
not
cmc
mov
xchg
xchg
xchg
lock
mov
mov
dec
ja
hlt
adc
mov
retf
pop
add
cmp
cmp
outs
std
in
stos
lahf
rcl
mov
sub
js
sahf
pop
dec
adc
xchg
ins
test
mov
aaa
mov
cwde
inc
call
and
dec
mov
adc
into
inc
sub
repnz
in
cwde
or
push
add
and
daa
test
push
xchg
pop
std
icebp
pop
xchg
xchg
cmp
loope
sub
jmp
or
leave
jmp
jbe
aam
ins
cld
frstor
and
cmc
push
push
sub
icebp
shr
adc
lea
std
sbb
push
or
in
xchg
jmp
fmul
test
shl
cs
out
lea
nop
jb
mov
neg
(bad)
(bad)
mov
adc
jmp
cmp
xor
inc
imul
inc
in
out
xor
mov
outs
inc
lahf
outs
inc
push
fs
ins
mov
cmps
sub
jmp
dec
push
pop
inc
not
pusha
xchg
outs
cmp
ins
sub
push
fwait
mov
shl
shl
or
pop
mov
pop
cmp
and
shl
(bad)
lods
mov
jb
inc
cmp
add
mov
sahf
mov
inc
out
pop
inc
xchg
lods
cmps
pop
hlt
dec
daa
fwait
pop
into
push
stos
cmps
add
pop
ins
add
push
inc
scas
add
cmps
jnp
adc
sahf
retf
loope
sbb
adc
mov
imul
idiv
call
jb
scas
inc
popf
adc
loopne
push
pusha
adc
cmp
dec
cmp
retf
and
xchg
dec
fidivr
push
repz
jle
push
mov
fnsave
dec
dec
mov
iret
xor
pop
adc
stos
imul
ror
push
mov
repnz
enter
xor
or
push
test
adc
inc
test
fist
(bad)
adc
call
push
ins
add
xor
push
and
movs
mov
add
mov
and
inc
inc
and
not
or
add
out
jb
jmp
sub
sti
je
rol
jmp
pop
outs
jne
sbb
add
mov
fidiv
test
inc
jno
mov
inc
sti
(bad)
cld
clc
mov
icebp
mov
add
and
aad
ins
adc
mov
or
pop
jmp
cmp
or
jle
ror
into
cld
pop
into
fdivr
movs
or
pop
jmp
daa
(bad)
nop
loopne
jmp
fwait
aam
pusha
pushf
mov
and
int
mov
je
loope
xchg
push
or
xor
inc
add
mov
mov
out
jne
movs
stos
sbb
in
movs
out
scas
mov
sub
loop
xor
inc
fldcw
inc
or
xchg
mov
lods
and
scas
xor
out
stc
pop
mov
sub
frstor
test
sbb
sbb
cs
mov
daa
jns
add
mov
scas
cld
in
sub
lock
fisubr
xchg
retf
pushf
mov
in
fwait
cwde
mov
sbb
outs
sub
push
inc
stos
xor
jmp
sbb
xchg
sub
sub
sbb
out
repnz
jmp
popf
(bad)
std
mov
mov
mov
div
imul
xchg
(bad)
(bad)
pop
sbb
xchg
xor
sbb
dec
sub
repnz
add
inc
adc
pop
fwait
stos
retf
cmp
mov
loopne
or
movs
je
inc
shr
(bad)
jnp
sub
adc
xor
fwait
int
mov
pop
sbb
ret
imul
or
jae
loope
mov
dec
(bad)
push
add
test
dec
aaa
xchg
sub
jo
mov
das
jl
cmp
xor
push
pop
ret
sub
or
or
fmul
cmp
lods
push
movs
hlt
fnstenv
das
cmps
les
sub
mov
dec
xchg
add
out
xor
sub
(bad)
pop
fnstenv
dec
iret
adc
jae
xor
mov
jge
xor
lock
or
inc
and
push
dec
test
lea
or
fs
push
and
adc
sbb
test
lock
pop
mov
test
retf
arpl
call
sbb
sbb
xor
mov
or
ret
js
sahf
out
or
xchg
dec
mul
jmp
mov
scas
ins
bound
inc
inc
add
loop
mov
jmp
neg
jne
mov
adc
pushf
xchg
fs
data16
stos
out
aam
iret
ja
imul
nop
mov
push
xchg
cdq
cmps
xlat
xor
out
loopne
add
add
fiadd
lock
and
add
bound
sub
cli
push
retf
dec
mov
push
and
fiadd
sbb
dec
ins
arpl
dec
mov
push
sbb
mov
mov
bound
cmc
push
in
int3
pop
adc
dec
push
dec
pop
mov
mov
test
leave
mov
xchg
sub
inc
cmp
sub
(bad)
movs
scas
retf
out
scas
jg
sub
sub
sbb
(bad)
ins
jl
out
sub
cmps
(bad)
mov
add
dec
out
std
ins
pop
aam
sbb
or
inc
sbb
inc
nop
sar
sbb
addr16
mov
packssdw
shr
dec
add
pop
aas
fwait
cld
adc
adc
mov
xchg
adc
retf
aam
dec
call
lea
ja
scas
xchg
pop
mov
mov
and
cs
xchg
jo
gs
dec
mov
xchg
xchg
cli
and
cmc
jmp
add
mov
jno
inc
sbb
rol
dec
loop
sti
add
(bad)
xor
adc
scas
(bad)
push
cmp
test
xor
jg
xchg
pop
sahf
inc
jns
std
or
aaa
mov
cmps
pop
test
ficomp
xchg
stos
or
loopne
ret
gs
test
or
fs
mov
jg
mov
jmp
out
fistp
xchg
mov
call
fstp
iret
xor
mov
pusha
or
jmp
mov
ins
aad
lods
sbb
in
xchg
pusha
dec
aam
cmps
mov
jl
xchg
pop
clc
jo
sub
aad
movs
cmp
pop
shl
cmc
out
mov
retf
push
mov
sub
xor
test
or
aad
cmc
(bad)
retf
inc
pop
xor
mov
cmp
jb
push
stos
lahf
mov
clc
and
cmp
dec
jne
scas
lock
cmp
and
movs
jl
outs
ds
fdivr
stos
jns
retf
enter
gs
xor
mov
sbb
call
sub
mov
out
mov
xchg
or
xchg
les
mov
jmp
daa
mov
dec
pop
dec
ds
or
idiv
push
daa
inc
les
cmp
aam
aam
pop
xor
sahf
in
icebp
push
fdivr
popa
popf
jo
add
sbb
or
cmp
adc
cli
bound
mov
mov
jg
stos
dec
inc
inc
xchg
mov
push
adc
push
jo
xchg
ret
lea
mov
cwde
nop
stos
sbb
(bad)
mov
and
xchg
or
and
add
xor
pop
cwde
fwait
mov
sbb
inc
mov
inc
sub
sbb
sub
into
pop
stos
(bad)
pop
lahf
push
pop
jmp
out
loope
sbb
pusha
scas
sub
mov
inc
pop
mov
mov
daa
pop
shr
cmp
mov
loopne
cmps
lods
aad
inc
ss
leave
mov
movs
xlat
dec
mov
sbb
inc
sub
mov
xlat
clc
pop
(bad)
push
fcomp
call
ja
add
outs
mov
in
stos
mov
pop
repz
fstp
dec
jp
imul
data16
and
aaa
cmps
gs
xchg
pop
aad
mov
xchg
loope
inc
pop
int
inc
add
lods
movs
ret
out
sbb
or
sub
inc
push
test
add
and
mov
stos
scas
pop
inc
push
cli
aam
add
mov
jmp
mov
and
xchg
xor
or
jbe
sub
or
sbb
adc
xchg
outs
je
cwde
or
dec
or
rol
sub
and
xor
int3
push
std
or
ret
pop
popa
lds
inc
mov
pusha
adc
retf
aaa
dec
(bad)
jle
pop
popf
aaa
xchg
mov
mov
adc
inc
dec
and
and
icebp
gs
ds
loope
and
sbb
pop
add
mov
shr
popa
cmp
mov
shr
pop
out
retf
into
mul
jmp
push
dec
leave
add
jb
jge
out
dec
mov
in
pop
cmp
imul
cmp
dec
or
xor
fdiv
jl
mov
jmp
add
pop
adc
cs
add
aam
fidiv
mov
jb
adc
or
scas
jl
std
add
enter
jg
xor
cmovb
lods
or
repnz
sub
or
xor
faddp
dec
in
int3
add
pop
int
ds
push
xor
add
pop
test
dec
adc
cmp
and
sub
movs
jbe
xchg
loop
cdq
pusha
add
inc
add
xchg
mov
sbb
dec
cwde
sbb
and
push
mov
cmp
mov
jl
mov
xchg
fisub
cmp
bswap
test
es
mov
adc
pop
xor
mov
mov
sbb
in
pop
dec
pop
(bad)
fisubr
cmps
jne
lods
aas
xlat
std
push
xchg
mov
fldenv
ret
or
sub
adc
xchg
aam
sbb
ja
or
(bad)
mov
scas
mov
std
popa
pop
repnz
adc
cld
in
int3
xchg
push
mov
rcl
hlt
pusha
mov
aad
data16
pop
int
scas
fs
jmp
sbb
or
adc
jmp
xor
dec
je
out
cmp
sahf
mov
xor
inc
push
sub
jmp
xlat
add
jbe
fimul
fnstcw
mov
mov
fld
(bad)
adc
sahf
sti
xchg
mov
jp
cwde
int
mov
inc
xor
sbb
loopne
ss
fisubr
(bad)
cmp
add
cwde
in
fisub
enter
js
mov
jnp
(bad)
mov
imul
cmps
push
stc
ficom
gs
bound
imul
push
cmc
mov
mov
pop
xchg
ds
fmul
ins
xlat
(bad)
push
hlt
js
ds
or
test
push
ins
and
mov
jp
nop
lahf
pusha
das
sbb
dec
pusha
and
cmps
pop
out
sbb
int3
push
or
imul
add
mov
nop
jle
inc
fist
fadd
mov
sub
and
pop
adc
add
mov
dec
cli
daa
push
cmp
push
jp
ja
lods
push
retf
leave
xchg
and
lock
fisttp
xchg
(bad)
loope
push
gs
out
mov
jle
add
adc
leave
fst
sbb
repz
push
dec
sub
xchg
cmp
ds
fsubr
and
aas
shl
push
xor
adc
and
mov
xor
inc
stos
rol
adc
pop
pop
fiadd
sti
cmp
inc
out
push
jg
push
icebp
jmp
retf
dec
adc
adc
and
fisubr
sar
pop
cmc
aas
in
ror
pop
push
sbb
add
xchg
inc
mov
sbb
dec
jns
adc
cmp
cmps
add
xchg
lahf
inc
dec
sbb
cmovle
inc
rcl
jb
imul
pop
popf
cmp
lock
stos
pushf
jbe
mov
sti
mov
inc
das
js
add
int
sbb
(bad)
out
clc
xchg
add
and
mov
arpl
mov
mov
or
push
mov
sar
nop
rol
loopne
push
out
lds
xchg
pop
dec
es
inc
repnz
mov
hlt
mov
xchg
mov
or
inc
mov
(bad)
(bad)
push
dec
call
or
jno
in
in
jge
lds
add
mov
xor
retf
sub
fidivr
and
add
and
cmp
idiv
arpl
pusha
cmc
repz
out
jmp
push
int
jne
(bad)
mov
xor
xor
dec
movs
retf
xchg
sub
fst
mov
shr
dec
rol
into
push
xchg
dec
dec
push
lods
inc
clc
sub
and
jmp
jno
addr16
popf
sbb
add
sub
mov
in
pop
(bad)
mov
and
push
movs
and
(bad)
adc
ins
inc
ds
xchg
sbb
fistp
les
inc
push
pop
mov
jbe
les
das
sub
xchg
and
fadd
clc
(bad)
in
mov
out
clc
outs
add
clc
mov
adc
mov
pushf
sub
ss
dec
xchg
out
pushf
sets
ja
clc
ud0
mov
mov
mov
test
sbb
imul
int
fisubr
pop
shr
fs
push
retf
mov
rcr
pop
dec
fdivr
fdivr
push
aaa
inc
dec
mov
movs
fcom
or
aas
ror
xchg
call
out
rdmsr
mov
out
push
xchg
inc
or
and
aaa
add
or
add
lahf
push
jge
xor
pop
outs
mov
cld
scas
jbe
xchg
and
fimul
xchg
sahf
xchg
cmps
dec
xchg
mov
lds
xchg
imul
(bad)
fmul
jno
and
nop
inc
sbb
ret
std
sub
xchg
(bad)
jmp
int3
ret
aas
push
scas
retf
sbb
sub
jl
push
pop
cs
mov
inc
sahf
pushf
and
mov
in
xchg
out
pop
pop
lahf
inc
adc
xchg
and
sbb
inc
jle
xor
and
jns
pop
mov
into
cmovle
popf
inc
push
repz
cmps
ds
inc
and
loop
test
mov
jp
adc
mov
ds
bound
lds
fmul
(bad)
outs
jae
sti
icebp
adc
xor
jl
mov
xor
mov
inc
dec
cli
xchg
lods
(bad)
sar
xor
lods
jp
xchg
mov
movs
push
mov
dec
in
test
push
mov
scas
loope
mov
xor
jnp
pushf
mov
sub
jno
retf
fnstenv
sbb
jb
or
(bad)
fidiv
sub
inc
lods
das
dec
popf
les
out
mov
loope
mov
scas
dec
mov
mov
movs
movs
pushf
imul
in
fcmovu
dec
push
ds
jmp
sbb
mov
pushf
ins
mov
mov
jmp
cli
push
(bad)
jecxz
push
fsubr
jl
pusha
fwait
dec
add
mov
ja
xor
movs
lahf
push
or
icebp
gs
xor
or
lods
push
pop
enter
movs
les
les
pop
xchg
inc
xor
xchg
xor
mov
test
nop
cld
movs
push
pop
jnp
xchg
xchg
imul
shl
pop
out
mov
lods
adc
outs
rcl
adc
push
ror
gs
aad
or
cs
hlt
jnp
je
jp
adc
push
or
adc
jecxz
xor
mov
dec
cmc
mov
movs
inc
or
xchg
cwde
std
or
sub
jmp
aam
adc
jb
outs
cdq
jmp
scas
mov
popa
(bad)
dec
pop
call
xchg
imul
ret
pop
xchg
push
fcmovb
popf
inc
push
sub
add
and
jecxz
xchg
es
xchg
outs
(bad)
call
push
pop
inc
(bad)
popf
sbb
mov
mov
pop
hlt
mov
lods
push
aam
jmp
in
fnstcw
lock
neg
pop
jp
sbb
out
jno
pop
adc
push
jne
mov
mov
inc
mov
mov
add
stos
repnz
or
test
mul
movs
mov
nop
ret
lock
jl
not
mov
dec
lods
aaa
or
push
cmps
not
push
mov
sub
lea
jae
xchg
(bad)
pop
xor
or
shl
call
push
cmp
idiv
hlt
or
arpl
sub
daa
sbb
int3
sbb
jb
jmp
mov
pop
push
xchg
inc
jge
inc
sahf
aam
xchg
loop
ficom
mov
repnz
inc
rol
retf
jmp
repz
inc
xchg
inc
pop
pop
push
inc
xlat
xchg
add
imul
lods
ins
mov
mov
int
les
dec
xor
les
cmp
popa
ror
out
mov
push
adc
adc
(bad)
dec
xor
in
mov
sbb
int
scas
idiv
int3
sbb
inc
mov
jae
retf
add
or
out
rcr
sub
imul
mov
inc
jmp
cmps
and
ret
add
inc
xchg
addr16
fdiv
inc
cmp
call
add
dec
movs
and
pushf
jo
mov
das
xor
sbb
ja
outs
pop
leave
mov
xchg
lods
xor
push
cli
or
xor
outs
(bad)
pop
ret
pop
cmps
sti
leave
dec
mov
adc
adc
ja
or
or
(bad)
xchg
(bad)
mov
sbb
dec
add
add
in
js
stc
ins
pop
xchg
add
jb
ja
aam
jno
stos
jnp
pop
mov
inc
xchg
popa
push
push
mov
scas
push
dec
xor
cmp
add
add
jnp
in
add
test
adc
mov
and
(bad)
ror
ds
(bad)
adc
nop
push
cmp
push
cmp
sub
dec
jmp
out
sub
dec
jle
into
xchg
sbb
mov
lods
or
test
mov
out
in
cmc
shl
lock
out
or
mov
aad
push
test
gs
icebp
arpl
loopne
pop
mov
sub
rcr
outs
sbb
nop
jbe
push
ret
and
jne
cmp
jno
cs
dec
mov
ins
daa
xchg
pop
push
push
jp
es
jmp
mov
adc
dec
mov
push
xchg
jae
push
cmps
popf
mov
sar
loop
js
and
pop
mov
cmp
(bad)
mov
xor
in
shl
fcomp
(bad)
js
xor
pop
in
retf
and
pop
mov
jge
jmp
dec
rcr
(bad)
jg
mov
push
daa
push
and
and
xchg
aam
push
cld
xchg
sbb
dec
ds
test
and
adc
or
sbb
mov
(bad)
fisub
cld
jns
test
mov
jae
mov
mov
add
pop
out
cld
jnp
outs
sub
lock
jo
sbb
cld
js
clc
int
cld
pop
(bad)
ins
mov
cld
out
mov
call
outs
ins
stos
repnz
inc
fadd
pop
mov
push
lods
out
jmp
test
cmp
(bad)
and
stc
stos
xor
jbe
xchg
jmp
jns
test
ja
pop
test
scas
xor
push
push
bound
lahf
clc
push
and
push
mov
out
loop
inc
mov
mov
daa
xchg
pop
inc
or
out
aaa
in
in
mov
jae
out
sbb
rcr
or
xchg
call
mul
mov
stos
or
mov
pop
jno
cli
cdq
stos
adc
mov
jl
(bad)
repnz
stos
test
leave
cdq
in
mov
jno
xlat
xchg
repz
clc
xchg
bound
aam
adc
jae
mov
adc
jae
cmp
iret
aam
sar
mov
jmp
xchg
rol
movs
rcr
aaa
fmul
repz
inc
jae
cmp
inc
loop
xchg
gs
loope
stc
adc
repz
and
or
xchg
and
mov
movs
and
mov
hlt
dec
jmp
nop
(bad)
retf
lahf
mov
push
mov
pop
int
xchg
inc
mov
sahf
ins
cmp
clc
pop
dec
mov
call
cmp
lea
lds
out
adc
dec
sbb
jne
xchg
inc
(bad)
pop
imul
nop
adc
pop
adc
pusha
lea
rcr
jnp
ret
retf
ret
dec
stc
fwait
int3
lahf
sub
push
fistp
add
xchg
jge
mov
inc
stc
stc
pusha
leave
push
mov
jno
nop
or
cwde
and
std
or
mov
fcmovbe
test
adc
inc
out
sbb
rcl
adc
xchg
call
push
mov
or
sbb
stos
imul
push
and
stos
int
idiv
push
jo
xchg
adc
dec
sar
jmp
inc
ret
lds
cmc
aas
jl
pushf
cwde
and
jno
jmp
lds
mov
(bad)
imul
mov
out
push
jp
retf
jns
push
mov
adc
inc
ficomp
push
dec
out
jmp
outs
pop
fistp
xchg
pop
imul
cmps
(bad)
add
adc
(bad)
mov
cmc
add
and
xor
jnp
shl
bound
jg
js
ins
xor
sahf
push
daa
repnz
dec
(bad)
sbb
sub
cmps
movs
lods
and
movs
bound
std
pushw
pop
mov
jnp
mov
pcmpeqb
ret
push
jmp
add
jns
iret
imul
inc
outs
ffree
je
dec
sub
popf
dec
add
fsubp
les
lods
push
xchg
out
cld
imul
outs
call
int
cmp
cwde
cmp
pop
jle
cmp
inc
or
inc
test
jg
fld
and
jo
aad
popa
jmp
push
sub
add
jnp
jp
jg
(bad)
cwde
arpl
in
dec
inc
mov
push
fmul
jge
and
inc
xchg
and
push
adc
ss
repz
and
push
arpl
jo
fist
pop
sub
jge
cmp
inc
sub
nop
icebp
sti
xchg
and
int3
outs
cmc
les
jmp
inc
mov
mov
and
sbb
push
push
fs
ret
stc
mov
hlt
stc
ss
arpl
imul
test
sub
cmps
mov
jmp
bound
scas
cld
sub
or
inc
out
and
lea
pop
test
stos
inc
data16
mov
add
stc
pop
mov
jl
adc
jb
mov
mov
mov
jmp
mov
(bad)
and
pop
add
mov
imul
int3
sub
bound
mov
int
dec
movs
mov
int
sbb
sbb
lock
xor
add
adc
cdq
cwde
or
jno
pusha
jbe
ffree
dec
fs
adc
aad
mov
mov
mov
sbb
and
dec
(bad)
repz
call
ins
sti
mov
mov
mov
sub
mov
pop
mov
and
and
cmps
pop
mov
int
pop
mov
mov
add
pop
push
mov
push
cmps
adc
lock
pusha
je
call
push
scas
mov
mov
pop
aam
loope
cli
lahf
ins
(bad)
pop
fdivr
cmp
data16
xchg
sub
inc
and
jae
enter
sub
xor
iret
mov
out
outs
xor
in
popf
neg
sbb
mov
in
add
(bad)
shl
loope
or
sti
cld
add
mov
or
(bad)
loop
pop
repz
push
cmp
inc
stc
add
dec
xor
push
dec
pop
and
xor
xchg
out
(bad)
lahf
nop
outs
loope
mov
mov
stc
dec
mov
inc
xchg
inc
sti
mov
xchg
movs
(bad)
sar
aas
sub
mov
das
in
adc
into
repnz
jge
pop
dec
ss
xchg
stos
jmp
scas
xor
aad
mov
in
nop
int3
cmps
movs
adc
gs
lahf
xchg
or
sub
push
in
cmps
add
inc
inc
xor
push
popa
add
xor
fwait
jl
xchg
mov
jo
sbb
sub
leave
loope
sbb
sub
test
pop
je
fcomp
call
mov
rcr
mov
lods
mov
push
pop
stos
pop
mov
inc
sbb
mov
dec
mov
mov
call
jae
pop
mov
jns
jae
push
pop
mov
inc
imul
call
pop
ja
jecxz
loop
test
ret
mov
mov
test
cmps
inc
outs
movs
shl
adc
sub
jge
push
xchg
enter
add
dec
push
xchg
daa
out
loop
lahf
push
aas
stos
sub
inc
repnz
aas
enter
mov
adc
mov
adc
(bad)
fs
cmps
lea
pop
wbinvd
or
mov
jnp
xchg
cmp
(bad)
out
sub
mov
xchg
mov
test
pop
scas
mov
lods
or
sbb
jle
pop
(bad)
fs
iret
push
bswap
(bad)
and
cdq
xchg
jmp
inc
sti
push
sub
mov
dec
fdiv
iret
or
sbb
mov
cmp
cwde
inc
jmp
sbb
sub
sbb
mov
jo
xchg
add
pop
fidiv
push
lods
fst
ins
movs
add
pop
loop
or
pushf
pop
xchg
push
cmp
push
xor
xchg
mov
call
arpl
stc
push
xchg
add
mov
dec
or
jbe
movs
mov
sbb
inc
xchg
push
pop
test
cdq
sbb
shl
pop
mov
retf
rol
pop
inc
sahf
adc
or
hlt
push
adc
sahf
push
push
(bad)
fs
adc
sub
lahf
loope
pop
int3
hlt
popf
jno
cmp
sub
not
in
add
into
in
or
push
mov
hlt
shr
jns
and
cmps
popf
jecxz
fcmovbe
vsubss
inc
and
add
(bad)
out
jne
aam
aas
xchg
and
push
ret
xchg
push
ins
ins
xlat
(bad)
je
pop
push
xchg
cmp
xchg
mov
or
dec
cld
add
shr
adc
inc
fsubrp
ja
add
dec
call
or
adc
dec
fnstsw
mov
xchg
test
mov
xchg
mov
mov
popf
pop
fwait
shl
fnsave
cmp
popa
pop
mov
dec
pop
outs
mov
psubb
mov
jmp
ret
push
xchg
pop
mov
push
leave
sahf
in
es
shl
mov
dec
cli
fadd
sti
mov
loopne
mov
retf
xchg
or
dec
hlt
mov
fidivr
js
stos
leave
mov
or
mov
gs
cmp
fiadd
sbb
shl
js
cs
dec
or
data16
sub
add
mov
lods
adc
push
mov
retf
push
neg
ret
jmp
mov
mov
scas
outs
in
pop
sbb
or
jns
jbe
into
push
push
xor
popa
adc
mov
dec
mov
dec
rcr
enter
retf
jge
data16
fsubr
fmul
cmp
add
imul
dec
outs
mov
aaa
jae
fs
loop
into
xor
pcmpgtw
jo
push
dec
jmp
jmp
mov
scas
adc
pop
add
sub
pop
sti
mov
jno
jo
xor
iret
pop
aam
fbld
push
aas
(bad)
pusha
inc
mov
lea
mov
jp
pop
ja
jns
pop
mov
cs
sbb
ja
ja
cmp
mov
hlt
fwait
mov
xchg
loope
lahf
in
xor
xchg
lods
fmul
in
addr16
push
idiv
cmps
mov
pop
pop
xor
mov
jle
ret
arpl
ja
dec
scas
nop
inc
(bad)
pushf
pop
shl
sar
fwait
adc
clc
dec
mov
(bad)
cli
outs
sub
pusha
or
sahf
pop
xor
cs
pop
push
lds
pusha
shl
in
rcr
in
les
sbb
retf
nop
pop
cmp
fidivr
sub
int
mov
xchg
mov
or
out
sub
je
jb
adc
outs
aas
inc
and
push
push
rcr
sbb
sub
xchg
out
cmps
inc
dec
adc
jne
ja
push
or
outs
pop
xchg
push
xlat
xor
xchg
inc
ins
push
mov
add
(bad)
cmp
and
dec
in
clc
leave
mov
cmc
mov
idiv
xchg
in
pushf
mov
dec
pop
retf
rol
xchg
xchg
sbb
jne
in
jmp
mov
dec
test
push
cmp
cmps
(bad)
inc
icebp
add
push
or
sub
pop
and
test
mov
pop
inc
ins
xchg
mov
scas
sbb
xchg
cld
mov
mov
jno
mov
jle
sub
ret
adc
(bad)
(bad)
stos
mov
mov
inc
pushf
imul
test
std
sub
mov
enter
cld
out
rcr
dec
inc
ja
add
dec
das
fnsave
pusha
adc
cmp
jno
not
mov
add
iret
cmp
mov
cmps
sub
clc
retf
dec
bnd
jle
and
jg
cmp
mov
pop
pushf
mov
fcom
cmp
adc
(bad)
and
mov
cli
push
out
ret
inc
push
ret
adc
mul
jp
(bad)
pop
stos
leave
test
fmul
pop
jle
cmp
jp
mov
push
pusha
clc
and
mov
out
fwait
mov
xchg
in
push
out
pop
cmps
sub
bnd
cmp
idiv
inc
(bad)
imul
test
inc
ret
rol
cmp
fcmovbe
imul
fwait
xor
xchg
ja
mov
out
push
or
daa
fs
inc
mov
(bad)
cmps
push
bound
sub
scas
mov
les
stos
clc
add
sar
(bad)
lea
jb
stos
stos
or
clc
xlat
jle
mov
add
jmp
xchg
xor
repz
jbe
sub
jns
ja
das
(bad)
mov
pop
push
int3
fbstp
sti
add
push
scas
push
push
sbb
sar
dec
inc
or
inc
lock
in
add
xchg
nop
cmp
push
adc
xchg
cdq
test
cmps
sbb
adc
out
inc
dec
or
inc
adc
call
mov
cmp
or
mov
mov
arpl
pop
mov
loopne
rcr
adc
adc
aaa
jbe
mov
imul
pop
push
(bad)
cmps
and
aas
movs
pop
push
jecxz
cmc
dec
add
jbe
sub
push
xor
ror
mov
fs
loopne
dec
enter
push
aad
(bad)
jmp
lods
add
fidivr
mov
cld
aaa
xchg
(bad)
jg
jmp
enter
cmp
hlt
pop
mov
push
(bad)
jmp
mov
mov
addr16
mov
scas
pop
pop
ret
fisubr
in
test
ret
les
fs
sbb
push
cmp
int
pop
xor
pop
or
aam
aas
or
std
xchg
mov
movs
(bad)
push
sbb
mov
mov
inc
in
popa
das
xchg
pop
fldcw
jge
mov
or
pop
jnp
push
lahf
(bad)
inc
cmps
add
xchg
sbb
lods
aam
xor
adc
mov
sub
pop
cwde
jno
inc
jle
mov
jo
rcl
dec
gs
cmp
lock
mov
sbb
mov
pop
mov
inc
out
push
mov
test
or
rcr
xchg
add
imul
pop
add
add
cmps
sub
xchg
imul
dec
aaa
jecxz
jae
mov
in
inc
popa
inc
inc
push
push
std
aaa
mov
and
push
mov
pop
hlt
pop
mov
or
cld
js
ss
mul
(bad)
pop
push
test
sahf
dec
popf
cli
mov
or
scas
dec
pop
adc
fisub
xlat
dec
ins
outs
aam
(bad)
rcl
inc
xlat
xchg
mov
es
clc
xchg
pop
push
mov
cli
in
sub
out
cli
mov
inc
aam
dec
cmp
stc
jns
sub
out
and
out
adc
mov
pop
jnp
mov
jl
iret
add
sbb
and
push
mov
xchg
push
pop
neg
and
shl
jae
mov
dec
into
leave
sub
fbstp
loope
shl
and
cdq
sub
stos
loope
and
xchg
adc
mov
shr
xchg
and
call
push
or
and
mov
movs
cmp
rcr
mov
in
js
imul
xor
add
pop
push
js
xor
les
adc
mov
retf
push
xchg
push
sub
or
push
ret
xchg
and
jmp
mov
mov
fld
xchg
mov
cmp
sti
popa
je
sbb
add
mov
cmps
out
push
popf
shr
int
push
ins
cli
push
test
scas
rcl
nop
stc
sbb
cs
dec
cmp
fxch
mov
mov
push
pop
adc
mov
and
repz
inc
or
inc
cmps
popf
xchg
jmp
lds
rol
pop
and
nop
cld
push
xor
sbb
adc
push
(bad)
icebp
scas
les
add
mov
int
in
xor
pop
xor
push
xchg
xchg
loope
mov
loope
pop
ins
ins
push
mov
mov
and
test
mov
jne
aam
call
in
adc
arpl
mov
lahf
inc
enter
pop
call
and
fwait
std
pop
or
aas
call
and
iret
xor
and
pop
mov
push
nop
ret
push
jno
rcr
ficomp
shl
or
adc
sub
mov
push
ror
dec
sub
in
cmp
mov
and
mov
adc
jmp
aam
and
jae
sbb
cmp
aaa
out
mov
and
inc
jae
adc
and
add
neg
fild
pushf
out
pop
imul
leave
jne
ins
push
int
fcom
adc
pop
fidivr
fist
mov
xor
mov
jbe
mov
mov
loope
inc
shl
sbb
shr
test
sbb
add
repnz
mov
pop
call
imul
daa
cmc
cwde
addr16
jecxz
xchg
xchg
ret
xchg
push
push
adc
ret
sbb
xchg
dec
mov
out
push
push
dec
pop
inc
call
dec
pop
pop
pop
sbb
shr
adc
sbb
or
mov
adc
xchg
shl
pushf
push
xor
xor
lods
fwait
test
inc
fnstsw
xlat
test
xchg
(bad)
fild
or
cmp
push
xlat
pop
ret
iret
sub
mov
pop
and
push
cmp
push
or
hlt
test
pop
inc
nop
out
(bad)
pop
mov
in
mov
inc
das
je
or
cmp
cmp
mov
push
ret
mov
loopne
and
cli
jg
int3
sbb
mov
xor
outs
ja
or
shr
std
mov
lock
(bad)
xchg
dec
and
xchg
jle
mov
jg
inc
xchg
pop
xor
xlat
icebp
xor
and
cld
test
cdq
xchg
add
dec
sbb
cli
jl
call
xchg
sbb
adc
pop
movs
adc
icebp
mov
mov
sbb
clc
xor
jmp
clc
pop
retf
mov
imul
test
retf
mov
cld
jl
loope
cmp
loop
jne
lds
or
out
out
cmc
jns
in
ins
das
push
mov
call
mov
sub
mov
aad
movs
(bad)
mov
sbb
push
retf
jmp
pop
mov
jp
out
(bad)
rcr
adc
add
mov
hlt
test
adc
repz
push
ss
jmp
and
jge
jnp
mov
mov
shl
out
jns
push
js
fld
push
mov
ins
or
je
dec
mov
ds
(bad)
jp
ret
outs
outs
scas
push
imul
sti
sbb
mov
pop
cs
xor
mov
sub
sbb
push
push
scas
jb
aas
pop
inc
dec
lahf
jnp
cld
xchg
push
push
add
sub
retf
mov
jne
sahf
sahf
or
pop
std
mov
mov
mov
mov
ss
test
data16
clc
jmp
xchg
cwde
stc
mov
ror
mov
fiadd
cmp
mov
aas
popa
sti
ss
hlt
mov
lods
in
aaa
sub
mov
pop
and
adc
out
or
loopne
adc
sbb
test
jge
inc
outs
seta
jg
scas
add
mov
push
pop
and
pop
push
jb
cdq
retf
push
pop
in
(bad)
leave
fist
aas
cmp
std
and
fwait
outs
(bad)
pop
and
pop
fwait
ss
mov
mov
popf
xchg
xchg
and
mov
cmps
in
mov
(bad)
push
inc
out
add
mov
(bad)
xlat
pop
loopne
mov
hlt
cmp
dec
add
cmp
or
iret
lds
sbb
jo
cs
fdiv
call
cmp
(bad)
pop
dec
rcl
jmp
lock
inc
std
jp
sahf
aas
inc
sbb
retf
std
push
(bad)
out
xor
ss
into
in
retf
fs
add
in
mov
mov
jbe
dec
dec
push
push
mov
push
inc
adc
inc
lea
data16
cmp
mov
jmp
dec
pop
cmps
ret
out
mov
cmp
test
mov
or
lods
push
pop
sbb
pop
mov
pop
or
xchg
jb
xchg
and
xor
dec
add
push
push
jne
rol
cwde
jnp
jne
or
cdq
and
cmps
and
jge
mov
adc
outs
and
dec
jo
fnstenv
in
xor
loope
fisttp
and
js
push
push
pavgb
int
mov
adc
inc
fdivr
fimul
pop
loope
(bad)
sub
jne
jmp
sbb
ja
ret
cdq
aaa
sbb
mov
xor
fwait
pusha
test
(bad)
and
jecxz
jp
mov
hlt
dec
adc
jecxz
in
pop
mov
rol
mov
outs
out
(bad)
ja
mov
ja
es
fst
in
ins
jl
inc
jle
call
inc
iret
and
in
or
(bad)
sti
(bad)
imul
xchg
lds
add
jg
imul
xchg
dec
sbb
ret
xchg
jle
test
pusha
lock
lods
call
jnp
and
in
add
int
into
imul
sahf
enter
scas
adc
rcr
pop
xchg
int3
jnp
pop
aas
sti
leave
mov
adc
jmp
push
aam
retf
push
inc
repz
pop
ds
xchg
ins
dec
nop
stos
cmp
jno
test
out
popa
add
jmp
cmp
lods
(bad)
imul
add
jno
and
icebp
pop
jb
je
jae
jge
fistp
pop
mov
dec
adc
jmp
sbb
lds
sbb
mov
dec
(bad)
jg
add
loopne
inc
fxch
pop
xchg
sub
pop
call
xor
pop
(bad)
inc
addr16
or
rol
retf
lea
daa
sbb
ror
sub
mov
movs
cmp
daa
imul
mov
push
cmp
xchg
push
retf
or
ins
jge
fs
jge
into
xchg
into
scas
test
retf
or
mov
xchg
push
or
sub
push
gs
neg
inc
stos
push
dec
sbb
jmp
mov
mov
dec
mov
mov
pop
sub
inc
inc
in
in
ret
out
mov
cmp
cmp
js
inc
jbe
ror
retf
shl
dec
sahf
add
jo
lock
add
rcr
das
mov
out
and
jle
mov
fs
add
ins
dec
cs
cwde
fbld
pusha
arpl
xchg
call
in
xchg
sti
imul
into
inc
or
hlt
sub
adc
push
mov
jge
adc
popf
xor
fistp
dec
pop
das
arpl
fmul
and
pop
add
pop
in
xchg
and
pop
or
cmp
shl
repz
imul
lods
jp
test
sub
imul
test
xor
pop
sahf
pop
push
and
jmp
cmp
jmp
clc
sub
ret
mov
xchg
mov
cld
shr
test
stos
dec
jmp
fbld
ja
pop
jg
fs
js
lods
aas
test
in
xor
and
and
and
cmps
imul
adc
jmp
and
sub
repnz
sbb
test
pop
dec
repz
lods
and
movs
jle
fwait
ins
addr16
or
xchg
cmps
mov
push
and
mov
dec
std
in
push
sub
loope
pop
inc
imul
lea
jns
fisub
cmc
jae
cmc
(bad)
sub
mov
or
mov
jl
xor
in
loop
(bad)
aad
outs
adc
mov
xlat
neg
cmc
loopne
pop
inc
loope
ins
scas
sub
dec
fdiv
push
xchg
aad
aaa
inc
(bad)
fstp
into
jg
movs
ror
ds
in
loop
cmps
xor
mul
sub
pop
adc
cdq
mov
inc
fs
cmp
inc
hlt
add
call
push
les
out
je
add
vpavgb
rcr
jmp
xchg
mov
add
(bad)
jmp
or
mov
call
(bad)
mov
repnz
xchg
cmp
xor
inc
out
das
push
xchg
xor
pop
pop
mov
cmp
lods
push
mov
xchg
add
jo
pop
mov
mov
mov
call
das
fistp
loopne
data16
xor
pop
out
sub
fiadd
xor
add
ja
push
cld
mov
add
aaa
int
jge
mov
pushf
stc
(bad)
add
retf
loope
je
push
dec
imul
fiadd
or
or
fimul
ins
mov
pop
mov
jmp
and
retf
push
mov
push
mov
(bad)
xchg
mov
jno
aaa
inc
ds
mov
call
xchg
out
and
dec
inc
push
xchg
xor
jle
mov
push
sub
jle
cmp
dec
pop
pop
daa
iret
jb
sbb
fwait
clc
mov
das
movs
ins
arpl
jle
dec
mov
xor
mov
fnsetpm(287
pop
mov
xor
int3
add
or
out
je
out
rcl
or
out
and
dec
or
xchg
jg
add
into
neg
and
ret
scas
ja
lds
stos
sub
(bad)
dec
xor
add
popa
jmp
inc
cmc
pop
retf
sbb
and
mov
adc
pusha
aas
imul
jmp
cmp
inc
ffreep
cmp
mov
mov
jo
ret
push
inc
loop
mov
push
push
jnp
outs
and
xlat
jns
push
lea
cs
xor
gs
test
sti
xchg
or
out
jmp
mov
and
js
xchg
inc
xor
jg
stos
pop
jmp
push
or
sub
call
fisubr
fstp
(bad)
ins
out
pushf
sbb
jno
dec
xchg
sti
dec
dec
inc
retf
inc
pop
xor
mov
or
pop
xchg
popf
cmps
nop
mov
or
sbb
push
movs
mov
fsub
push
pop
jp
sar
add
push
and
xchg
mov
cld
fldcw
jbe
add
cmc
cli
inc
xchg
enter
loop
dec
imul
ss
shr
iret
pushf
mov
leave
ins
movs
test
adc
pop
push
movs
ins
(bad)
jp
adc
pusha
xor
daa
pop
push
dec
fld
mov
xor
outs
adc
adc
mov
test
xchg
test
lds
mov
or
mov
daa
fstp
dec
call
retf
and
or
jle
fnstenv
mov
mov
cmc
xchg
xor
hlt
push
mov
dec
cmp
repnz
scas
movs
add
dec
adc
shl
inc
cmp
inc
(bad)
mov
mov
fcomp
cdq
xchg
cmp
call
dec
fwait
mov
add
mov
mov
cmp
xchg
mov
xchg
cmp
cmp
xor
push
or
add
into
and
xchg
sub
(bad)
out
movs
or
pop
fsubr
jl
repz
and
pop
push
dec
lea
sbb
inc
stos
push
mov
sbb
(bad)
push
xchg
mov
cld
hlt
xchg
inc
mov
inc
aam
sti
imul
imul
inc
sbb
mov
(bad)
xchg
imul
fcmovb
pop
or
leave
(bad)
(bad)
or
sbb
nop
pop
nop
sbb
movs
jmp
das
inc
mov
(bad)
(bad)
or
jle
mov
fsub
sub
or
call
sub
push
test
popf
fisttp
jmp
push
adc
pop
js
xor
out
std
jae
rcl
daa
dec
cmps
sbb
xchg
cmp
pop
mov
jnp
mov
jmp
mov
shl
sahf
and
pop
mov
xchg
mov
xor
icebp
fnstenv
idiv
leave
mov
xchg
out
pop
(bad)
ficom
sbb
cmp
mov
add
cmp
fdivp
push
xchg
and
js
and
and
addr16
push
addr16
pop
icebp
or
push
mov
mov
js
push
push
or
lock
repnz
jns
rol
adc
mov
xor
add
jae
mov
lock
nop
mov
pop
ss
mov
fld
leave
fdivr
mov
fidivr
bound
mov
mov
mov
into
or
mov
stos
(bad)
shl
mov
sahf
les
mov
(bad)
mov
mov
adc
shr
fdivrp
mov
movs
aam
jecxz
rol
and
jg
or
aad
icebp
sar
stos
adc
dec
test
jge
hlt
movs
cmp
mov
jo
xchg
xchg
into
ins
mov
sub
inc
push
sub
rcl
(bad)
ds
fnstsw
ficom
dec
imul
shl
pop
jg
(bad)
xor
push
scas
js
test
xor
push
push
push
xor
(bad)
out
sub
retf
ret
push
and
movs
adc
stos
dec
pop
out
jnp
ja
inc
ja
fcom
setg
jae
cmc
ret
xor
cli
push
hlt
cld
ret
pop
(bad)
lahf
jmp
imul
dec
mov
std
pop
aaa
xor
(bad)
ror
es
push
push
(bad)
fs
je
test
push
push
leavew
sbb
or
jmp
div
adc
inc
and
(bad)
aam
ja
outs
adc
push
mov
push
mov
rcl
sub
and
inc
or
sar
loope
in
xor
push
sub
mov
pop
sub
pop
loope
out
es
mov
int
or
pop
(bad)
jmp
mov
shl
jno
jb
xchg
mov
ss
pop
int3
cmp
(bad)
sbb
push
inc
dec
adc
push
mov
(bad)
leave
aam
cdq
adc
int
push
inc
sbb
jns
dec
cmc
in
mov
fmul
jnp
test
iret
in
and
lods
pop
cli
adc
clc
je
mov
ret
cmps
jecxz
pop
mov
sbb
add
pop
test
lea
in
clc
es
pop
cld
inc
dec
jle
pop
push
imul
lea
jle
pop
sub
adc
or
dec
shl
test
push
push
das
push
rcl
mov
in
imul
xchg
jns
xchg
or
fidivr
test
sbb
ret
xor
jecxz
pushf
push
test
cmp
shr
jmp
pop
add
jle
nop
scas
sbb
sbb
repz
push
addr16
jbe
scas
jnp
aaa
cdq
in
ja
fmul
int
add
mov
stos
stos
and
mov
shl
mov
jmp
dec
scas
xor
lea
or
bound
mov
jnp
lahf
and
push
repz
test
int
or
mov
mov
add
addr16
and
adc
bound
dec
rol
out
iret
(bad)
jae
mov
hlt
xchg
xchg
adc
mov
aaa
test
popf
imul
mov
loopne
mov
cmp
in
aam
clc
xor
loop
inc
data16
sub
sbb
mov
int
pop
in
aas
lea
fdiv
jl
push
xchg
mov
cmps
cs
jmp
sar
(bad)
js
ins
sub
jne
cmp
shr
imul
mov
das
mov
inc
ss
mov
rcl
lahf
(bad)
call
or
push
(bad)
xchg
(bad)
jmp
push
push
mov
arpl
add
scas
repnz
push
inc
cmc
or
push
inc
mov
loope
fistp
sbb
mov
icebp
or
shl
and
xchg
aad
push
pop
stos
inc
xchg
(bad)
pop
fwait
aam
and
(bad)
dec
cwde
bound
shr
scas
movs
dec
fist
mov
dec
neg
dec
or
cld
les
add
out
adc
stos
xlat
push
jmp
sahf
outs
jp
cwde
jg
xor
into
inc
nop
fild
retf
cdq
jnp
fist
dec
lds
test
das
sbb
mov
fdivr
pusha
les
jno
daa
cmps
sti
icebp
add
xchg
or
mov
mov
jp
mov
js
(bad)
xor
scas
inc
mov
sub
nop
pop
aad
jbe
(bad)
sub
xchg
mov
stos
and
sti
test
adc
xchg
jo
jns
popa
aad
out
outs
test
inc
fwait
pop
lahf
cld
test
mov
inc
pop
leave
jmp
out
dec
mov
push
cmp
(bad)
inc
cmp
push
jae
add
jge
enter
out
movs
jae
cmp
adc
mov
cli
xchg
out
dec
inc
mov
in
jo
sub
hlt
das
dec
and
jmp
jecxz
fidiv
fidiv
clc
or
test
push
xchg
outs
repz
mov
mov
cmc
pop
jno
and
fcmovnbe
rcr
mov
(bad)
not
popf
out
outs
shl
int3
cdq
mov
js
adc
mov
push
fadd
mov
and
mov
int3
jmp
and
cmps
xor
adc
jo
add
std
mov
or
popa
xlat
cs
mov
sbb
(bad)
dec
pop
pop
repz
popf
or
mov
ret
arpl
and
idiv
addr16
push
mov
cmp
or
mov
sahf
dec
sub
xchg
lock
sti
pushf
retf
add
push
and
xchg
sub
or
jmp
je
pop
jb
push
into
fs
xchg
loopne
jno
and
lahf
rcr
mov
sar
mov
lock
xchg
sar
xchg
in
aad
sub
sbb
or
pop
rcr
sub
out
xchg
cmp
xor
push
xchg
out
repnz
cld
mov
rcr
and
leave
fstp
mov
daa
push
push
fs
jl
sub
test
xor
push
sub
pop
cmp
jp
xchg
dec
sub
and
into
fbld
xlat
adc
hlt
cmp
xor
cmp
pop
sub
push
add
sbb
loope
scas
imul
xor
stos
out
pop
sub
and
ins
cs
add
and
sub
and
out
cdq
jmp
imul
out
adc
push
mov
outs
sub
jns
cmps
sbb
lods
mov
fdiv
inc
adc
push
clc
mov
hlt
enter
inc
xchg
mov
dec
push
cmp
mov
das
shl
add
(bad)
mov
lods
mov
adc
xor
sub
mov
ja
fwait
pushf
mov
or
call
dec
jo
pop
cdq
mul
(bad)
mov
not
cmps
sahf
sub
add
push
mov
xchg
or
test
xchg
popa
or
mov
aaa
imul
push
call
add
mov
and
pop
mov
stc
sub
sbb
fs
(bad)
fistp
pop
dec
mov
add
cmps
fst
pop
(bad)
(bad)
mov
mov
test
bound
add
push
inc
sub
push
mov
gs
ins
clc
fistp
pop
adc
call
hlt
aas
jg
outs
mov
ror
jne
les
pop
adc
mov
fnstenv
or
movs
and
(bad)
into
inc
jle
icebp
sahf
cdq
iret
lock
mov
jb
ja
jno
adc
mov
dec
pop
dec
and
adc
or
out
hlt
not
xchg
mov
retf
mov
inc
xor
and
mov
popf
sbb
ds
push
int
pop
(bad)
out
sub
imul
mov
into
add
rol
call
jmp
imul
ror
aad
lods
xor
int3
popa
fs
(bad)
lods
mov
pop
call
cmp
push
arpl
jge
sti
inc
cli
es
sahf
pusha
ins
jns
push
jg
test
add
pop
cmp
xchg
(bad)
mov
sahf
inc
adc
sar
pop
jns
sbb
ss
mov
es
pop
and
clc
push
fisubr
es
(bad)
push
retf
fadd
cmc
xlat
cld
xchg
inc
sahf
cwde
adc
lahf
mov
adc
lods
jl
push
(bad)
pop
lock
repz
inc
cli
call
movs
sbb
inc
test
mul
sahf
dec
cwd
cli
addr16
xchg
jnp
mov
sar
(bad)
xlat
sbb
add
jge
sahf
sbb
enter
imul
(bad)
dec
jae
fdivr
popa
stos
push
add
fwait
mov
push
sti
push
mov
mov
gs
(bad)
cld
dec
add
loop
ja
fstp
rol
jl
fadd
loop
mov
sub
retf
mov
or
and
xchg
lea
xlat
mov
sbb
sbb
inc
mov
test
data16
repnz
es
test
jbe
movs
add
rcr
xchg
mov
(bad)
xchg
mov
rol
fs
fnsave
stos
adc
push
fucom
and
aas
push
fnstenv
push
add
inc
out
enter
push
pop
jne
ja
inc
adc
sub
jno
outs
inc
sti
and
scas
or
jg
and
dec
xor
pop
push
fidivr
movs
cmps
inc
popf
inc
neg
cmps
lds
lods
and
aas
mov
jl
pop
mov
dec
pop
xchg
and
jbe
mov
pop
inc
into
popa
stc
(bad)
in
pop
pop
fdivr
dec
ds
add
lahf
loopne
adc
push
js
popf
cmp
daa
loope
in
scas
inc
xchg
jo
cdq
push
inc
aaa
push
sar
push
dec
loopne
jecxz
lahf
push
cmps
mov
inc
cli
xor
dec
xchg
rol
xor
and
mov
adc
scas
stos
loopne
adc
enter
cmp
or
mov
mov
cmps
hlt
inc
dec
sub
ds
pop
or
jae
bound
push
cmp
ins
das
dec
mov
xor
out
push
dec
mov
popf
push
mov
mov
sar
or
(bad)
jmp
frstor
imul
mul
loopne
pop
mov
movs
leave
test
sub
or
pop
leave
jb
scas
int3
mov
jmp
jle
fwait
ins
pusha
sbb
push
add
adc
and
mov
das
data16
xor
addr16
ret
xchg
aad
mov
xor
test
or
add
out
push
pop
sti
mov
fidiv
jmp
xor
scas
xor
aad
inc
(bad)
pop
dec
xor
or
mov
inc
stos
jo
xchg
or
cmp
pop
scas
or
aas
xchg
pop
(bad)
mov
push
jae
loope
push
test
mov
ins
or
inc
mov
inc
jmp
out
ja
jge
jge
addr16
adc
mov
and
rol
mov
je
pop
call
aas
sbb
push
jge
mov
int3
addr16
adc
add
call
or
aam
inc
push
test
mov
leave
sbb
sbb
in
dec
in
popf
cmp
bnd
fisub
push
test
mov
mov
pop
pushf
or
sbb
inc
jmp
or
sar
out
scas
lds
test
pop
jl
enter
addr16
scas
push
hlt
aam
fstp
in
jmp
je
sti
inc
mov
(bad)
int3
das
add
xchg
pop
lods
out
mov
lock
or
dec
sti
loopne
mov
loopne
test
cmps
adc
mov
jg
retf
rcl
add
push
gs
push
pop
repz
sub
adc
mov
inc
inc
dec
xchg
jb
in
pop
(bad)
mov
call
ror
loope
cmps
jmp
ins
add
mov
and
cwde
cdq
imul
call
sub
ret
cmp
mov
push
mov
mov
pop
mov
cmp
pop
dec
fcmove
lock
lea
imul
jge
jo
jge
push
add
ja
std
les
ins
test
push
shr
ins
test
repnz
jmp
or
(bad)
mov
outs
xchg
mov
jb
fst
mov
inc
out
retf
stc
mov
into
xchg
adc
or
inc
pop
push
out
push
inc
popf
mov
stos
(bad)
jb
push
dec
pop
(bad)
stos
and
cs
pushf
stos
xor
sahf
out
in
ret
mov
lods
cmp
pop
lahf
jb
push
fcomp
push
in
int3
sub
ret
int
arpl
and
jo
pop
pop
in
repnz
push
mov
repz
iret
lods
add
mov
dec
pop
jmp
jmp
popa
dec
out
fist
leave
and
ins
sub
aas
sbb
in
cmp
push
inc
lahf
xor
push
cs
(bad)
aas
mov
pop
mov
jns
test
dec
xchg
fistp
lea
jecxz
pop
mov
push
mov
leave
retf
fisttp
das
sbb
cdq
sub
cmp
jecxz
adc
adc
adc
mov
push
es
push
popa
push
fs
nop
add
jp
jb
dec
xor
xchg
outs
dec
and
or
xchg
in
pop
cmps
cwde
pop
(bad)
fnstcw
fist
ja
pop
(bad)
adc
xchg
or
dec
cmps
cmps
add
adc
mov
out
cmps
(bad)
repnz
das
mov
leave
xor
jns
sub
adc
xchg
mov
add
mov
xchg
data16
cmp
jl
mov
rcl
push
pop
push
outs
cld
outs
pushf
mov
hlt
and
mov
mov
xchg
ins
push
sub
or
and
sub
scas
les
jo
mov
mov
mov
ret
retf
push
lea
xor
icebp
mov
sub
push
inc
mul
into
cld
lock
gs
faddp
inc
(bad)
in
and
push
adc
stc
lea
icebp
cmp
xlat
clc
lds
jae
cld
xchg
mov
retf
jge
dec
pop
push
xchg
jnp
push
xchg
xchg
adc
lock
xor
push
add
cli
(bad)
fld
mov
adc
hlt
daa
loop
or
adc
and
cmp
pop
dec
ds
mov
sbb
dec
mov
mov
out
out
pop
jge
loopne
cmp
ins
(bad)
adc
sub
inc
dec
pop
aam
mov
dec
sub
adc
sbb
xor
sub
fdiv
(bad)
sub
int3
repnz
cmp
(bad)
jg
cmp
call
movs
add
adc
and
test
movs
repz
lods
fcompp
std
inc
les
arpl
in
xlat
fnstenv
retf
inc
out
mov
cwde
lea
inc
daa
inc
mov
adc
push
xchg
xor
arpl
add
inc
xlat
(bad)
rol
iret
push
imul
fwait
jno
jp
(bad)
icebp
cmp
ja
or
cmp
dec
mov
cmps
loop
hlt
add
call
out
loop
nop
(bad)
pop
adc
cmovle
test
xchg
stos
test
or
cs
and
sar
mov
out
mov
and
out
cmps
dec
in
mov
cmc
mov
fwait
call
or
in
iret
mov
jns
je
leave
daa
sub
(bad)
imul
or
or
adc
ins
imul
or
add
ss
lock
pop
mov
cmp
dec
cmps
(bad)
scas
pop
sbb
mov
jg
jp
mov
or
daa
mov
lahf
inc
std
rol
test
ins
mov
dec
out
and
push
(bad)
in
imul
sbb
cwde
jmp
mov
aad
(bad)
mov
xor
test
shr
xchg
loope
sar
or
cmp
sbb
pop
data16
cwde
xchg
push
push
xchg
lods
push
or
ret
mov
sub
dec
rcl
(bad)
(bad)
arpl
jle
imul
in
popf
cmp
xor
dec
cmp
mov
push
push
lds
ret
xchg
fs
rcl
dec
xchg
pushf
imul
cmp
jns
or
sahf
pop
adc
push
xchg
cmc
sub
sub
adc
mov
shl
jns
push
jo
mov
adc
(bad)
add
or
test
jp
jbe
ds
add
pop
push
sub
out
cwde
test
mov
sbb
sub
adc
push
sbb
jge
iret
fnstsw
retf
das
mov
(bad)
gs
jle
add
popa
push
add
fstp
or
xchg
sbb
push
pushf
push
push
xchg
cwde
or
xchg
fwait
adc
adc
retf
mov
mov
pop
sub
or
ret
jo
xchg
and
data16
cmps
sar
jo
sub
and
xchg
popf
cmc
pop
xlat
lock
sbb
mov
sbb
and
jl
cdq
cmp
and
iret
mov
xor
int3
pop
ja
in
(bad)
inc
bound
lea
pop
xor
fcomp
mov
mov
pop
mov
dec
mov
lds
push
xchg
and
pusha
push
rol
and
xor
xchg
inc
jo
test
or
xor
adc
lea
sbb
mov
push
xchg
push
ror
loope
sbb
sbb
or
or
adc
pop
cmps
and
dec
mov
xor
call
imul
sbb
cmp
cmp
push
inc
and
inc
dec
test
cmp
inc
sbb
ins
xchg
push
and
repz
xchg
and
pusha
pop
pop
bound
sbb
cmps
lods
sbb
and
shr
sbb
xchg
xchg
sbb
mov
xchg
or
add
(bad)
or
jb
jl
out
stos
addr16
jnp
(bad)
scas
les
dec
push
dec
fabs
sub
imul
lock
jmp
mov
sbb
repnz
xlat
pop
xor
into
out
ds
lods
ret
mov
(bad)
sbb
inc
xchg
xor
inc
cmp
xchg
imul
inc
test
inc
call
in
mov
je
mov
inc
(bad)
std
cmp
(bad)
aaa
or
rcl
cld
jnp
inc
fcmovbe
adc
fwait
jb
or
test
inc
call
(bad)
test
jno
mov
xchg
inc
add
sbb
xchg
push
dec
cmp
pop
or
popf
into
sub
inc
imul
shl
mov
ins
sbb
out
mov
test
jge
push
aam
xchg
out
pop
sbb
repz
out
and
out
repnz
xchg
cwde
mov
add
pop
imul
adc
sub
mov
or
push
ja
pop
mov
fist
js
mov
sub
out
ds
fidiv
xchg
(bad)
cmc
out
aas
adc
cmp
dec
adc
and
inc
push
out
cmps
mov
push
lahf
ins
xchg
aam
out
test
iret
out
pop
cs
mov
test
fistp
and
(bad)
xor
mov
xchg
mov
mov
(bad)
movs
jmp
stc
pop
mov
mov
aad
scas
sbb
push
shl
(bad)
xchg
inc
push
cmp
sahf
stc
pop
adc
fcmove
push
pop
cdq
add
lods
and
jno
data16
sbb
out
mov
jb
mov
ins
popa
add
push
in
test
jecxz
pop
xchg
xchg
xchg
out
test
out
neg
ja
adc
jecxz
adc
pop
xor
push
test
cwde
std
add
dec
mov
mov
jne
jmp
pop
dec
pop
cwde
cmp
scas
sub
push
sar
cwde
aas
inc
mov
mov
scas
or
mov
pop
jnp
test
out
xchg
jl
fwait
dec
in
in
out
movs
out
xor
mov
cmp
shl
or
data16
jl
xor
(bad)
es
sub
mov
into
dec
dec
or
out
mov
inc
jbe
test
scas
push
mov
fdiv
call
js
cli
mov
jl
pop
loop
loop
mov
rol
mov
outs
addr16
repz
mov
test
test
dec
add
inc
sbb
jmp
sub
outs
or
cmp
mov
sub
aaa
jecxz
sbb
jecxz
test
nop
ja
adc
shl
clc
sti
push
pusha
mov
shr
xor
out
or
adc
icebp
fdivr
les
mov
jp
fcom
clc
push
or
push
or
xor
call
mov
jmp
dec
fadd
ss
sbb
adc
xor
cmp
(bad)
pop
mov
and
outs
sti
mov
push
stos
in
pop
fnstcw
sbb
push
mov
cli
xor
rcr
push
cli
jecxz
scas
test
ror
add
push
mov
pop
pop
push
push
pop
and
retf
stc
pop
adc
stos
add
mov
lods
jp
mov
mov
inc
and
jmp
pop
pop
mov
fs
or
inc
enter
mov
fidivr
inc
sub
inc
ja
mov
push
xor
pop
xor
popa
jbe
aam
test
xor
cwde
add
push
shl
mov
gs
in
sbb
mov
jmp
mov
jp
pop
ds
sub
in
mov
add
dec
jae
push
dec
inc
(bad)
sbb
jnp
pusha
aaa
fidivr
pop
(bad)
or
xor
imul
pop
fmul
mov
leave
add
or
add
or
sub
ds
push
stos
int3
fs
lds
call
cmp
sbb
jp
xor
aam
frstor
push
adc
shl
fldenv
inc
cmp
cmp
(bad)
mov
sar
sbb
das
and
pop
adc
aam
retf
nop
mov
(bad)
loopne
fdivr
sbb
inc
inc
add
pop
sbb
lahf
neg
mov
ins
(bad)
pop
mov
retf
les
xor
inc
test
and
jl
sbb
out
mov
fild
mov
xor
sahf
mov
dec
push
adc
mov
data16
clc
sbb
push
sbb
jb
mov
cmp
mov
test
nop
ror
les
sti
cmp
popf
fldenv
aaa
fwait
mov
or
pusha
adc
adc
push
(bad)
pop
dec
fiadd
adc
mov
adc
sbb
or
shr
sar
adc
test
mov
addr16
repnz
pop
fstp
mov
add
sub
cmp
or
dec
frstor
cmc
dec
aam
js
add
jae
push
(bad)
cmp
and
pushf
jb
mov
xor
jne
iret
jae
mov
out
(bad)
imul
pop
je
aas
les
fcomp
xchg
mov
xchg
in
pop
cmps
jmp
fs
in
(bad)
int
repnz
mov
aas
call
ror
jmp
or
add
fwait
(bad)
dec
stc
or
(bad)
daa
jmp
fstp
stos
push
sub
xchg
xor
dec
mov
mov
out
jnp
lock
mov
pusha
add
int
iret
pop
js
nop
pop
pop
gs
repz
(bad)
fidiv
ror
les
arpl
test
or
int3
hlt
mov
xchg
jle
lea
add
int3
jmp
gs
inc
stc
mov
stos
dec
sub
lahf
and
push
imul
adc
scas
and
not
pusha
sub
push
add
lahf
out
mov
pop
and
sbb
das
jns
jno
push
sbb
xchg
(bad)
ffree
shr
loop
call
ret
jne
stos
lea
adc
(bad)
cmp
aaa
lds
test
jmp
sub
xor
call
fadd
lea
test
popf
lds
mov
sub
sub
adc
addr16
pop
jne
retf
xchg
lock
add
jo
jmp
cwde
addr16
mov
(bad)
int3
mov
fwait
cmp
lock
add
int
fs
jp
xchg
les
dec
jbe
stc
scas
cmp
mov
lods
pop
inc
inc
cmp
push
in
mov
mov
xchg
xor
sbb
mov
inc
(bad)
xor
xor
stos
add
test
aaa
test
lahf
cld
movs
and
mov
jg
fs
sbb
jmp
ret
in
jnp
cmp
or
cmps
push
inc
ss
enter
mov
xchg
adc
mov
test
aas
xchg
sbb
mov
xor
add
cdq
inc
popfw
(bad)
mov
sbb
in
jmp
popf
jp
aaa
or
jbe
sub
fwait
dec
inc
inc
test
hlt
fs
push
mov
(bad)
clc
pusha
push
add
and
ror
xchg
ins
mov
cmp
sub
cli
inc
push
push
arpl
fdiv
jmp
std
mov
mov
pop
inc
cmp
xchg
std
aam
mov
pop
retf
jnp
mov
mov
shl
jns
jbe
cwde
cdq
mov
(bad)
pop
mov
bound
sub
or
jnp
inc
popf
out
push
call
jmp
xchg
cli
leave
in
imul
ss
fwait
pusha
add
adc
cmp
iret
mov
retf
jl
cli
push
mov
lds
lds
xor
imul
je
cmps
test
rol
or
cli
jnp
rol
or
and
ins
sti
pop
xchg
(bad)
popf
nop
jle
or
xchg
imul
add
cmp
loope
xchg
addr16
test
dec
cmp
pushf
inc
movs
or
and
xor
and
cmp
xchg
aad
jno
es
jmp
pusha
sbb
iret
and
and
jmp
lds
adc
push
mov
test
pop
jmp
mov
shl
movs
ret
fs
stos
clc
gs
popf
mov
pop
adc
dec
inc
stos
adc
fsubr
mov
je
sbb
xchg
pushf
jp
xor
mov
sbb
xor
mov
mov
cld
jo
(bad)
call
out
daa
push
out
jo
(bad)
fst
sbb
cmps
scas
adc
mov
pop
lahf
and
mov
push
cmps
sub
sub
out
fnstcw
cwde
xor
and
call
loop
aad
mov
sub
call
in
aad
test
xor
fidivr
inc
mov
or
outs
enter
add
push
inc
(bad)
mov
pop
xchg
ret
xchg
mov
add
sub
inc
adc
cdq
in
add
enter
rol
mov
mov
aaa
add
mov
push
jmp
test
xchg
fwait
add
es
popf
loop
fsub
pop
outs
cmp
pop
stos
out
sahf
push
scas
repz
sti
adc
xor
push
push
inc
mov
int3
inc
cmp
pop
pushf
out
and
and
or
test
ja
pop
pop
call
xor
and
push
test
add
add
cmp
sbb
cmps
aas
in
loop
out
sti
mov
out
cwde
and
jmp
pop
or
xchg
cwde
daa
fdiv
add
(bad)
repz
bound
cdq
sub
jle
gs
inc
add
in
mov
cmp
sbb
cmp
dec
pop
inc
push
ret
test
push
and
js
mov
xlat
cmps
cld
gs
pop
sahf
mov
or
jl
(bad)
aaa
sbb
sub
add
pop
jecxz
sbb
enter
pusha
pop
xchg
retf
cmps
add
push
push
aaa
sbb
call
jge
fdivr
mov
and
inc
adc
movs
leave
jno
push
add
fdiv
xor
leave
push
push
(bad)
sahf
pop
repz
push
jmp
sbb
xchg
sub
jne
stos
scas
aad
gs
inc
(bad)
popa
shl
imul
push
push
sub
inc
jecxz
(bad)
into
jecxz
and
mov
repnz
icebp
mov
sbb
xchg
mov
pop
clc
and
out
xchg
mov
loopne
mov
outs
popf
mov
repnz
sbb
mov
push
push
das
jmp
and
and
jno
sbb
retf
pop
retf
mov
int3
dec
popf
test
leave
cld
mov
push
test
(bad)
leave
imul
inc
inc
fisubr
mov
xor
dec
push
sub
mov
mov
adc
inc
in
sar
jo
mov
jne
xchg
pop
dec
cwde
push
cs
or
dec
pop
inc
ficomp
xor
jmp
es
pusha
xchg
adc
cmp
xor
in
adc
inc
push
ds
xchg
or
das
ss
mov
pop
mov
clc
outs
jno
fld
or
or
cmps
and
shr
jl
test
lock
mov
sub
lahf
lds
sbb
mov
cwde
loop
pop
pop
lahf
mov
mov
mov
lahf
js
adc
pop
jmp
jp
(bad)
jno
inc
cs
ret
lods
push
mov
jae
nop
xchg
push
addr16
lock
sub
jecxz
pop
fisttp
aaa
xchg
fs
mov
xchg
inc
cmp
adc
inc
aam
mov
scas
jb
pusha
adc
shl
mov
enter
and
loop
or
(bad)
mul
pop
std
and
pop
cmps
out
call
ftst
inc
add
jmp
xchg
sti
cmc
cmp
add
dec
lahf
jmp
xchg
xchg
scas
std
inc
int3
(bad)
dec
div
add
push
movs
jle
mov
ins
outs
push
sar
ret
cdq
neg
jb
inc
xor
(bad)
(bad)
inc
repz
leave
adc
rcr
jg
inc
or
sub
or
fisttp
xlat
(bad)
movs
mov
sbb
push
pusha
ror
fadd
jp
repnz
out
xchg
sbb
sbb
sbb
push
xor
pop
inc
out
stc
cld
(bad)
(bad)
and
jle
inc
cmps
xchg
jge
push
addr16
lods
adc
jmp
dec
mov
push
repz
cdq
movs
jae
sbb
xchg
mov
push
std
push
sbb
cmp
rcl
icebp
adc
retf
push
sbb
and
sub
mov
test
outs
mov
into
repz
leave
aad
pop
ds
into
shl
cdq
in
adc
dec
add
and
xchg
test
add
jno
jle
sti
sub
sub
push
addr16
pushf
jp
mov
js
mov
jb
mov
push
or
daa
lds
pop
pop
xchg
jb
pushf
leave
std
shl
mov
inc
jne
scas
adc
pop
cdq
xor
test
sahf
popa
ds
enter
lods
xchg
js
inc
(bad)
fld
enter
inc
xor
scas
leave
stos
gs
test
leave
fst
jl
mov
retf
xor
neg
(bad)
out
jae
xchg
and
gs
int3
ret
fs
rep
dec
xlat
add
test
push
call
std
mov
fadd
and
popa
push
sbb
jnp
movs
shr
dec
in
sbb
cmp
sub
push
jecxz
pop
or
sub
mov
mov
movs
test
test
mov
push
pop
test
dec
push
outs
and
mov
in
cmp
xchg
push
and
sub
and
fsubr
sbb
push
cmp
ja
mov
add
lods
adc
loope
sbb
ds
adc
pop
stos
ss
or
mov
jae
sub
or
pop
and
cli
ins
xor
sbb
(bad)
mov
mov
add
push
gs
mov
sub
xchg
das
repz
lods
out
retf
xchg
popf
mov
or
inc
ja
fidiv
sbb
popf
in
push
xchg
cmp
mov
pop
test
(bad)
ror
mov
jl
dec
mov
or
jne
xor
mov
outs
test
dec
mov
mov
xchg
inc
lea
adc
daa
aas
jp
(bad)
xor
test
sbb
inc
stc
adc
iret
ins
cli
fstp
in
movs
imul
or
sti
rcl
fidivr
jecxz
fdivr
add
aas
mov
and
pop
int3
out
movs
and
(bad)
or
ret
jg
pusha
lds
xchg
test
clc
test
jb
retf
jmp
hlt
mov
push
push
(bad)
shl
mov
jmp
inc
jno
into
mov
sbb
in
test
retf
push
push
(bad)
and
fstp
push
lds
mov
sti
adc
or
leave
and
bound
js
cld
jmp
jp
jecxz
or
adc
test
dec
pop
add
outs
xor
xchg
adc
jmp
pop
sbb
add
pushf
out
fild
mov
or
rcr
movs
aam
jl
adc
cs
xor
push
or
(bad)
movs
cmp
sub
jmp
movs
pop
inc
fistp
pop
push
mov
sbb
imul
dec
shl
xchg
cmp
in
popf
ja
rcr
inc
pop
mov
inc
jmp
sar
bound
cmps
push
ret
mov
loopne
mov
not
imul
jmp
pop
cdq
daa
mov
cmp
sub
mov
sub
dec
sub
and
dec
mov
xor
cmp
fisubr
adc
cmps
mov
and
jmp
(bad)
call
jg
mov
jmp
sbb
(bad)
out
pop
or
pop
fstp
gs
hlt
jno
mov
jo
mov
xchg
sbb
cmp
out
bound
pusha
loop
jo
loopne
jl
xor
not
mov
jbe
dec
xchg
call
push
xchg
jmp
nop
xlat
pop
and
mov
xor
cmp
push
movs
sti
sbb
leave
sub
movs
dec
dec
addr16
xor
dec
xchg
jne
jbe
jb
imul
dec
aaa
or
and
cmp
cmps
xchg
(bad)
fisub
int
into
scas
mov
push
push
cld
popf
adc
loope
rcl
mov
dec
sub
dec
sub
xchg
hlt
nop
jecxz
fisttp
add
rcl
into
into
or
pop
out
sub
es
add
shl
add
sbb
mov
cmp
mov
pop
pop
mov
mov
mov
icebp
xor
pop
adc
dec
out
push
fadd
loop
pop
dec
popa
xchg
inc
push
test
cmps
cmp
out
or
mov
xchg
int3
shl
xor
xchg
cmovno
pushf
jmp
loope
sbb
dec
fdivr
pop
loope
retf
sub
push
test
jmp
cmp
sbb
mov
(bad)
je
ret
stos
mov
pop
and
push
jecxz
push
imul
inc
or
cli
pop
lahf
adc
ins
test
rol
aas
push
call
lods
fnstcw
cmps
mov
rcr
addr16
push
xchg
rcl
ins
jne
call
and
das
mov
sbb
jecxz
or
jo
xchg
loopne
sub
jo
shl
and
popa
pop
cwde
je
js
clc
inc
mov
inc
mov
or
sub
test
dec
push
imul
lahf
cdq
mov
mov
in
fistp
jl
xchg
fwait
jno
dec
adc
mov
cwde
fmulp
pusha
test
fcomp
js
sbb
xchg
xor
add
cmp
(bad)
das
cmp
scas
daa
add
adc
nop
sahf
pop
mov
popf
push
sahf
mov
scas
lea
or
pusha
fld
adc
mov
and
outs
mov
and
in
retf
add
push
imul
je
cmp
mov
ja
sbb
xor
or
scas
cs
mov
sbb
(bad)
xor
xchg
xchg
add
or
test
popa
ficomp
call
jnp
unpckhps
sbb
add
mov
dec
call
in
ins
add
pushf
push
in
mov
jmp
rcl
cmp
sub
aam
and
and
push
pop
stos
ja
ss
outs
jae
jno
adc
sbb
push
cmc
mov
into
xchg
enter
dec
mov
adc
rcl
adc
aaa
pop
jns
sub
add
(bad)
cmps
sub
es
lods
and
adc
cmps
scas
inc
push
retf
mov
fisub
xchg
xrelease
shl
xchg
xchg
mov
dec
mov
stos
and
cs
inc
mov
mov
ins
cmp
(bad)
jbe
clc
movs
adc
fcom
sub
(bad)
out
call
sar
xor
and
in
sti
mov
test
or
rol
cmp
xor
xchg
mov
dec
add
stos
or
sub
mov
inc
inc
push
ja
pop
scas
gs
js
test
add
cwde
mov
rol
jno
add
shr
jmp
or
arpl
or
dec
inc
sub
add
je
xchg
lods
dec
adc
hlt
jo
adc
mov
xchg
cdq
inc
je
cmp
lds
xchg
into
inc
sbb
jp
push
or
popa
icebp
retf
adc
dec
popf
rcl
mov
popf
mov
mov
lods
xor
mov
call
push
pop
(bad)
jo
(bad)
(bad)
cmp
dec
mov
or
shl
jnp
push
das
lds
jl
mov
cld
or
repnz
mov
loope
(bad)
sub
jo
add
pop
add
adc
jg
jmp
fsub
sub
dec
test
jecxz
mov
lahf
and
jns
test
leave
imul
jmp
mov
add
sub
mov
or
pusha
push
or
push
mov
cli
inc
add
(bad)
adc
in
out
pop
nop
and
xor
sbb
imul
mov
push
mov
mov
stos
jb
call
push
mov
(bad)
jnp
inc
mov
cli
call
loope
scas
movs
pop
add
lahf
repnz
xor
popf
daa
cld
daa
imul
mov
pop
mov
loop
imul
dec
dec
imul
lods
push
int3
cwde
hlt
lods
push
popa
shr
popf
cmps
fcmovnu
sub
sbb
sub
and
sub
pusha
mov
enter
retf
outs
cmps
in
cdq
add
sbb
push
lock
popa
add
stos
rcr
nop
leave
push
fimul
jnp
iret
and
jge
xor
in
cdq
fild
inc
pop
cmp
adc
test
mov
add
xlat
mov
or
or
xor
dec
aas
push
mov
es
xor
adc
or
xchg
ss
(bad)
fisttp
js
les
mov
xor
jle
mov
mov
mov
cli
xor
cmc
es
je
add
mov
mov
pop
mov
fsubr
out
std
aaa
fwait
sbb
cmp
push
lods
mov
ins
mov
pop
imul
aam
mov
sub
dec
je
xchg
or
cmp
mov
push
push
push
mov
inc
sub
jle
xchg
fcmovu
jo
in
sub
pop
ja
out
ret
daa
fwait
mov
add
mov
dec
les
clc
and
jecxz
ins
aas
nop
fstp
inc
call
mov
aaa
int
pop
imul
inc
aas
mov
sar
mov
cli
mov
aaa
cli
push
mov
(bad)
xchg
inc
push
adc
imul
(bad)
xor
fstp
loope
out
push
jo
sbb
cmps
out
push
out
pusha
ret
retf
(bad)
push
adc
mov
sbb
int
cwde
mov
dec
out
dec
iret
into
loope
sbb
in
dec
jmp
or
sbb
hlt
imul
inc
mov
and
inc
add
inc
sar
mov
add
sub
cmp
and
out
popa
fwait
jmp
push
adc
(bad)
pop
mov
inc
les
cwde
xchg
xor
cmp
sahf
sub
add
cli
sub
sbb
lods
jae
out
lea
jo
xchg
shl
mov
fsub
jbe
hlt
in
out
sub
push
iret
jns
inc
cmp
sti
sub
div
ss
xchg
cmps
retf
sbb
cmps
ret
jge
dec
div
mov
ins
(bad)
xor
mov
jnp
xor
push
pop
lds
inc
push
push
cmp
lock
mov
pop
mov
and
jo
mov
and
xchg
jl
mov
repnz
push
push
aas
ror
ins
xchg
jns
js
je
fstp
shr
xchg
mov
mov
mov
mov
mov
fwait
xor
sbb
cmps
push
jg
cdq
retf
mov
mov
inc
lahf
sbb
inc
mov
or
push
jge
sbb
or
lea
arpl
sub
jmp
xor
(bad)
inc
add
cli
dec
into
or
inc
arpl
xchg
xchg
xchg
scas
arpl
adc
push
inc
int3
repz
aaa
stos
ins
cwde
jne
xchg
push
mov
mov
mov
xchg
jns
rcl
cmp
sub
nop
retf
mov
xchg
sahf
pop
jo
jg
mov
test
adc
ins
xchg
cwde
sbb
pop
mov
fisubr
ss
hlt
ret
cs
enter
daa
pop
mov
dec
jnp
lock
popa
mov
adc
add
add
sti
xchg
(bad)
and
iret
xor
outs
jnp
mov
(bad)
cdq
mov
mov
mov
xor
scas
dec
ja
mov
cwde
push
pop
(bad)
xchg
daa
lahf
and
and
sub
dec
inc
adc
(bad)
outs
sbb
ins
rcr
es
inc
(bad)
cmp
and
pop
mov
mov
dec
jp
sbb
mov
ds
mov
or
pop
xchg
mov
scas
sbb
cmc
pop
jp
inc
fs
ficom
shl
jmp
fwait
jnp
adc
daa
lods
and
jge
iret
xchg
add
sahf
push
mov
mov
test
rcr
inc
repz
ja
jo
test
mov
xchg
pop
jb
xchg
xlat
rcr
das
mov
test
js
(bad)
jge
push
and
sub
ins
mov
enter
and
pop
sbb
pop
(bad)
les
leave
jl
clc
xchg
lock
inc
jno
inc
inc
ins
dec
or
pop
ret
jecxz
mov
inc
outs
cwde
pop
dec
or
or
mov
and
jne
sbb
add
lods
jmp
stos
fist
push
dec
outs
and
lds
ins
inc
fisttp
mov
inc
and
pop
xor
push
jecxz
js
adc
sub
ss
(bad)
or
jmp
fs
inc
leave
int3
push
pop
push
aad
xor
dec
mov
test
mov
cmps
ins
ja
push
(bad)
les
sahf
cmp
push
mov
dec
mov
mov
xchg
cmp
das
mov
adc
mov
neg
fistp
cs
pop
(bad)
fst
std
dec
cmp
sar
jb
enter
dec
aas
push
or
ins
ror
push
in
retf
adc
les
or
(bad)
add
mov
aad
sub
mov
jb
push
(bad)
loop
adc
push
push
ret
dec
mov
in
test
stos
pop
add
ret
lock
fst
or
scas
loopne
lds
daa
out
mov
pop
out
aas
push
jle
cmc
call
es
out
pop
mov
pushf
mov
sbb
into
mov
ss
pop
outs
pop
dec
push
fmul
adc
js
inc
shr
test
and
dec
fwait
outs
mov
ins
ins
dec
xor
push
cs
(bad)
scas
imul
xor
push
ret
les
and
aas
or
xor
mov
fcom
in
int
inc
jecxz
(bad)
hlt
fidiv
in
leave
push
adc
(bad)
adc
xchg
nop
inc
cmp
stos
out
push
cmp
and
mov
enter
(bad)
jle
jp
push
cli
cmp
pop
dec
out
add
push
aam
mov
adc
or
into
ror
mov
test
fwait
adc
mov
xor
jno
test
jmp
cmp
retf
sbb
and
ret
test
popa
retf
jmp
ret
das
nop
or
daa
pop
lahf
sub
add
pusha
pop
mov
dec
test
pop
xor
mov
xor
out
and
push
out
inc
add
stos
cmps
pop
pop
test
add
test
mov
jb
cmp
mov
jl
push
mov
or
mov
fistp
jnp
dec
sbb
loopne
cmp
inc
push
ror
inc
lock
xchg
cmp
push
ret
xchg
xchg
icebp
inc
loopne
scas
fs
pop
and
and
retf
mov
retf
leave
sahf
popa
mov
shr
daa
pop
cmps
pushf
or
fisubr
inc
xchg
iret
jmp
push
add
mov
sbb
cld
pop
cli
sub
imul
std
bound
jae
out
in
(bad)
sub
mov
and
imul
std
push
out
fwait
js
pop
test
push
int3
into
xor
mov
imul
lahf
or
push
cmps
jne
ins
push
xchg
sbb
push
mov
dec
cwde
push
das
out
js
int3
js
ret
sub
in
mov
mov
mov
mov
xchg
jecxz
mov
ds
sub
add
push
adc
jl
add
cwde
and
mov
sbb
lods
les
mov
das
cmp
cmps
dec
(bad)
dec
cmp
jnp
mov
pop
aam
ja
jmp
mov
sar
sub
inc
rcl
push
and
cmp
fwait
mov
mov
(bad)
fcomp
dec
dec
movs
loope
stos
pop
shr
int
mov
push
fs
sar
dec
mov
xor
jmp
inc
js
(bad)
push
clc
dec
(bad)
leave
mov
jb
pop
out
shr
cdq
pop
push
cmp
pop
mov
inc
sbb
push
mov
out
mov
jmp
mov
ret
imul
or
mov
ret
pop
push
test
addr16
fsubr
(bad)
pop
or
fcom
jge
cmp
dec
inc
pop
or
sbb
movs
push
mov
int
sti
add
loop
mov
nop
call
shr
dec
adc
fnstsw
scas
mov
call
test
mov
sub
daa
or
fcomp
mov
lahf
mov
shr
mov
stos
push
mov
mov
arpl
test
sub
inc
cmc
xlat
ja
scas
out
les
jmp
test
push
dec
mov
fisubr
test
push
or
retf
sbb
xchg
sbb
popf
pop
(bad)
mov
lea
movs
and
idiv
stc
jmp
cli
lock
cmp
pop
(bad)
in
jle
xor
loopne
repz
mov
cld
js
jl
sahf
ret
cli
or
push
movs
push
test
sahf
mov
fisttp
lea
stc
mov
das
clc
enter
ftst
adc
jecxz
add
push
ret
enter
push
cmp
jnp
pusha
into
mov
stos
fcomp
jmp
mov
in
push
(bad)
lahf
or
or
inc
in
sbb
ret
(bad)
dec
stos
imul
repnz
xchg
sub
ficom
lahf
xchg
shl
jo
xlat
ins
cdq
mov
adc
cmps
sar
dec
adc
in
imul
pushf
jp
outs
popf
sti
std
int
mov
sub
push
xchg
push
(bad)
stos
mov
push
or
lock
sti
inc
cli
fcmovb
mov
dec
jg
mov
aas
scas
(bad)
mov
retf
gs
mov
sub
lods
lods
fwait
movs
pusha
js
into
xchg
push
ret
ds
jle
mov
pop
data16
fdivr
aam
jae
ror
inc
(bad)
(bad)
clc
ins
mov
je
std
jg
add
aaa
ja
loope
fcomi
mov
nop
push
jb
push
or
inc
test
dec
push
bound
rol
mov
sbb
fisttp
ret
xor
sub
dec
js
jne
or
fld
cwde
jp
jae
pop
or
xor
mov
add
bound
sbb
jns
std
and
adc
cmps
movs
loope
in
jp
mov
jp
retf
dec
mov
pop
cmp
mov
dec
push
aas
mov
sub
or
arpl
dec
or
cdq
icebp
cli
lahf
fnstsw
xchg
jmp
xchg
rol
shl
out
push
out
out
add
test
cwde
xor
pop
cmp
cld
out
lds
ret
mov
push
repz
imul
jbe
mul
or
repz
xchg
lahf
sahf
lea
js
daa
mov
sahf
lock
ret
lods
outs
aaa
ret
bound
mov
gs
jns
clc
pop
and
and
or
or
or
xor
cmp
inc
cmp
xor
cmp
mov
sub
adc
ror
repz
and
movs
xchg
push
stos
ror
jmp
cmp
mov
jg
xchg
fdivr
ret
jecxz
fild
dec
pop
xchg
(bad)
jmp
aas
stc
inc
mov
repnz
mov
add
jecxz
mov
jmp
(bad)
or
mov
retf
outs
cld
xchg
adc
cmp
add
mov
push
cli
xor
cmc
jae
repz
sub
mov
sub
ss
push
mov
fstp
inc
ret
jl
jle
jmp
mov
cmp
adc
leave
inc
push
jp
dec
fs
sbb
adc
out
ret
adc
mov
(bad)
fadd
jg
dec
jns
ins
push
add
jecxz
cwde
mov
call
fsub
jmp
dec
mov
xchg
sbb
dec
enter
xor
inc
aaa
std
loop
sbb
mov
sbb
fwait
sub
bound
xor
cmp
xor
aaa
lahf
mov
nop
(bad)
scas
jp
popa
pop
cwde
jecxz
loope
retf
cdq
icebp
jg
xor
shl
inc
xchg
mov
push
dec
clc
cdq
cwde
pop
aam
adc
mov
xchg
div
mov
fwait
add
xchg
xchg
sub
mov
mov
ror
ins
or
sbb
aam
popf
xor
shl
xchg
jnp
push
xor
jp
jb
cmp
xchg
jns
jmp
retf
test
xchg
jg
dec
mov
mov
daa
popf
push
sahf
pop
add
jmp
jge
sbb
pop
push
lods
(bad)
scas
ss
stos
cli
jmp
scas
jns
test
rcr
inc
mov
outs
sub
sbb
or
mov
dec
add
test
xchg
xchg
pop
dec
int
fs
inc
xchg
adc
xlat
ins
nop
jnp
stos
ins
sub
inc
jle
stos
pop
(bad)
cmps
push
arpl
and
shr
jae
xor
adc
cmp
dec
pop
mov
xor
in
add
test
jns
sar
enter
jne
pushf
push
mov
adc
icebp
ins
cmp
sbb
adc
popa
ja
mov
js
mov
or
cs
in
mov
mul
das
inc
pop
mov
les
cmp
in
daa
loopne
arpl
mov
pop
int3
lahf
fadd
aaa
stos
imul
cmps
in
push
clc
add
add
pop
fist
mov
test
sbb
rol
pop
and
movs
dec
mov
leave
in
mov
ss
or
mov
ins
cmc
jecxz
dec
sbb
daa
jns
sar
or
jge
fist
repnz
ret
inc
jns
jge
and
repnz
fsub
mov
dec
pop
ret
in
push
aad
(bad)
adc
cmp
dec
pop
dec
outs
mov
scas
inc
cmp
xlat
push
add
fiadd
jnp
std
out
in
out
sbb
lds
sbb
and
sub
ins
mov
cdq
(bad)
mov
push
push
in
ja
iret
sbb
push
mov
and
ds
inc
or
or
xor
pop
sub
push
test
pop
mov
xor
jl
repz
cmps
sbb
aam
into
cmp
icebp
push
mov
xlat
sahf
xchg
add
loopne
and
sahf
sub
sbb
aas
add
adc
js
mov
(bad)
daa
adc
mov
int3
loopne
pop
(bad)
fadd
ds
shl
lock
push
xor
pusha
gs
cmp
push
push
push
pop
inc
inc
mov
add
in
inc
mov
cmp
jbe
cmc
mov
fdiv
xor
in
ficom
jne
pop
cmc
lds
daa
inc
call
fistp
lods
mov
adc
and
mov
xlat
add
inc
je
adc
pop
inc
cmp
pop
mov
test
shl
ins
jg
mov
xlat
push
aam
push
test
in
nop
xor
adc
jnp
das
adc
ud2
aas
or
push
test
fnsave
out
jbe
and
dec
fstp
jae
in
test
xor
adc
cwde
jle
xor
movs
push
sbb
jg
sahf
int
xchg
inc
arpl
push
cmp
mov
retf
dec
xchg
mov
test
mov
gs
cmp
bound
sub
sar
adc
rcr
cmp
mov
cwde
pop
dec
arpl
clc
btc
ins
push
cmp
in
add
inc
(bad)
and
fld
pop
xchg
rol
mov
pop
std
xchg
outs
dec
rcr
mov
retf
inc
mov
in
cmp
lds
adc
jb
jle
cmps
arpl
sub
cmp
retf
inc
rcr
pop
pusha
int
jns
mov
inc
xchg
mov
mov
jo
push
ret
(bad)
cmc
or
ja
enter
(bad)
call
jne
jnp
cs
jo
jb
inc
lds
je
mov
sub
outs
repz
pop
lock
ror
push
cmp
addr16
call
push
gs
mov
jnp
jne
and
sbb
and
sub
or
xchg
and
xor
jmp
gs
mov
and
mov
jne
and
data16
cli
pop
jp
jmp
bound
retf
ins
and
(bad)
cmps
ret
sbb
fsub
imul
or
adc
sahf
inc
scas
into
sub
repz
xchg
mov
(bad)
scas
mov
cmp
loopne
mov
in
fdiv
jns
mov
das
or
mov
clc
dec
push
test
dec
div
cmps
test
or
jecxz
popf
call
(bad)
adc
sti
outs
mov
jg
dec
xor
scas
mov
mov
cmp
dec
sbb
aaa
jae
icebp
mov
aaa
adc
cs
sub
call
dec
jl
sbb
push
pop
push
jge
imul
mov
push
lods
sub
retf
mov
js
or
imul
mov
add
hlt
mov
cld
enter
dec
movs
test
adc
cmc
(bad)
scas
pop
(bad)
aam
cmp
mov
or
inc
push
aad
ds
sahf
js
outs
jge
iret
mov
pop
pop
mov
out
fsubr
aas
ins
retf
push
mov
retf
inc
sub
ret
sbb
ins
push
dec
int
mov
iret
jb
ins
jbe
nop
in
cwde
push
pop
push
lds
mov
nop
fadd
pushf
ret
mov
push
movs
pop
(bad)
popf
jge
fnstenv
xchg
add
mov
lds
push
add
icebp
or
fmul
enter
push
(bad)
call
std
leave
js
jge
xor
mov
pop
sahf
xchg
ror
aaa
int
jmp
lea
arpl
mov
shl
or
call
inc
lahf
lea
test
xchg
les
push
or
jecxz
mov
ss
mov
aas
pop
sub
fidivr
and
ds
pop
mov
aaa
dec
dec
call
pop
ror
cmp
adc
dec
cld
jge
or
cmp
int3
jmp
rol
stos
jns
jmp
shl
pop
in
inc
mov
mov
pusha
xchg
test
push
scas
xchg
test
retf
push
adc
lock
mov
les
stc
ret
add
mov
push
mov
and
bswap
jle
mov
mov
ret
aas
pop
(bad)
mov
fst
(bad)
add
leave
mov
inc
lods
push
push
cmp
fist
cmc
fdivr
mov
sub
add
outs
adc
fiadd
pop
and
pop
and
pop
cdq
loopne
push
xchg
lods
out
jmp
sar
push
bound
inc
cld
cs
sub
push
or
in
test
nop
inc
mov
lahf
xchg
push
dec
sub
leave
es
out
sub
cmp
mov
adc
test
dec
add
sbb
(bad)
lods
mov
xchg
cmp
dec
jae
pop
in
and
or
imul
daa
push
mov
adc
add
xor
push
inc
std
(bad)
pushf
rcl
bound
test
movs
retf
sub
xor
stos
xchg
mov
retf
mov
clc
icebp
in
adc
xchg
inc
rcr
retf
sbb
mov
push
cmp
imul
sar
xor
mov
loope
idiv
or
mov
retf
popa
(bad)
(bad)
and
add
(bad)
and
dec
sub
loope
or
fistp
mov
cmp
or
adc
pop
dec
mov
popf
hlt
xor
xor
add
leave
test
gs
sbb
js
dec
push
xor
pusha
fstp
pop
mov
jmp
pop
fldz
push
aaa
ja
imul
call
pop
pop
pop
bound
out
mov
cmp
push
lea
idiv
call
iret
ins
pushf
(bad)
xchg
add
mov
rcl
xchg
rol
lock
sub
pop
jns
imul
xor
sbb
imul
mov
sub
lds
fsubr
jmp
adc
pop
push
cdq
jle
mov
jmp
push
cld
sar
dec
lock
shl
into
dec
test
mov
and
xchg
jge
pop
pop
rcl
scas
cs
push
xor
nop
mov
cli
jne
test
aaa
add
inc
sub
lds
out
cmps
mov
push
sbb
inc
ror
xchg
adc
mov
psubq
int
push
cmps
mov
fwait
cdq
and
jbe
das
js
stos
je
cwde
xor
or
xor
ss
xchg
repz
mov
push
jo
or
and
adc
hlt
mov
add
xchg
jge
jmp
into
loop
nop
pop
outs
loop
sbb
pop
stos
aas
mov
adc
movs
xor
(bad)
sbb
or
push
rcl
jmp
mov
movs
jmp
rcl
popa
cli
mov
ror
je
cli
jno
xchg
mov
(bad)
fidivr
pusha
cmp
jbe
fistp
mov
cld
mov
jl
cmp
or
call
sbb
add
popa
xchg
loope
lods
push
pop
mov
aad
dec
xor
in
cmp
lock
mov
add
add
(bad)
mov
push
and
inc
mov
loop
repnz
stos
jne
rcr
inc
idiv
bound
imul
fbld
daa
inc
pop
in
sbb
add
sbb
xor
mov
inc
or
lock
cmp
rcr
push
pop
in
cmp
sbb
imul
push
loopne
movs
inc
repnz
xchg
cmp
inc
cmp
push
mov
shl
mov
mov
xchg
int3
add
in
cs
addr16
cdq
push
sub
aam
and
ins
mov
adc
je
aaa
test
bswap
aaa
and
dec
jbe
in
cmps
xchg
bound
fwait
pop
add
mov
inc
dec
out
ins
leave
sub
in
(bad)
std
inc
aas
sub
xlat
jp
mov
bound
push
cwde
scas
adc
mov
pop
(bad)
xchg
pushf
inc
xor
sbb
ins
adc
mov
cmp
mov
out
dec
xchg
imul
ds
(bad)
enter
and
aad
push
imul
fild
dec
data16
cmps
clc
push
fistp
or
add
pop
sbb
or
xor
fsubrp
retf
xchg
retf
sbb
inc
aas
mov
fs
loopne
mov
(bad)
or
sbb
xor
mov
idiv
adc
add
mov
jae
js
mov
int3
nop
lea
scas
sar
mov
pop
xchg
cmp
adc
test
sub
ja
xchg
sub
jbe
ror
nop
and
mul
popa
and
jns
loope
gs
test
xor
or
hlt
nop
scas
xor
xchg
dec
std
lods
nop
sahf
push
pushf
sub
in
retf
and
push
push
push
mov
retf
fwait
xor
(bad)
lods
mov
inc
enter
aaa
jbe
mov
dec
ins
test
sbb
nop
(bad)
stos
fmulp
(bad)
mov
jns
aad
test
dec
mov
push
imul
or
mov
pop
sbb
movs
sbb
fs
addr16
shr
cmp
sub
xchg
mov
lea
es
ss
xchg
addr16
ins
and
out
ds
ins
mov
gs
imul
call
cld
call
aaa
enter
sbb
dec
push
sub
mov
push
add
loopne
ret
mov
in
pop
sbb
popa
in
retf
cld
jnp
sub
mov
cmp
mov
inc
jge
call
stos
fadd
(bad)
dec
mov
xor
cmc
cmps
(bad)
jle
pop
push
ins
cs
mov
push
and
ja
ins
pop
push
pushf
xchg
inc
and
pop
cmp
add
jb
jl
or
sbb
aam
adc
fsubr
repz
and
push
outs
ror
daa
inc
push
jnp
mov
mov
sar
fadd
lock
cmp
loopne
pop
adc
xchg
xchg
fwait
pop
ja
nop
sbb
lods
cmp
or
jnp
xor
pop
pop
repnz
ret
mov
pushf
fst
push
popa
mov
push
rcl
into
mov
rcr
inc
stos
push
push
dec
data16
adc
xor
leave
(bad)
push
stos
mov
add
repnz
cwde
(bad)
cmp
add
js
push
sub
(bad)
ss
xchg
push
outs
sub
shr
stos
push
xor
cmp
cs
xor
enter
push
jbe
sub
jg
pop
leave
adc
popa
pop
in
pop
loopne
adc
(bad)
inc
inc
js
out
fnstsw
add
or
cmp
jg
dec
mov
aaa
sbb
test
movs
popa
cmp
mov
ret
inc
mov
ss
ret
push
and
jg
adc
adc
ins
sbb
mov
xchg
addr16
xchg
pop
mov
adc
adc
arpl
jge
pop
push
sbb
inc
push
enter
mov
sar
bound
dec
lahf
shl
adc
retf
arpl
cld
or
pop
jae
movs
sahf
mov
pop
xor
inc
dec
pmullw
mov
xor
out
mov
inc
lds
stos
les
cmp
inc
and
mov
adc
cdq
inc
pop
xchg
popf
inc
push
jp
mov
loop
call
jne
(bad)
cmc
mov
push
mov
xor
sub
pop
idiv
mov
or
inc
mov
mov
adc
cdq
pop
in
push
dec
sub
pop
leave
xchg
data16
xor
in
das
call
push
dec
jns
mov
sub
rcr
adc
mov
xor
adc
ret
cwde
adc
and
shl
mov
outs
sbb
xor
imul
add
rol
(bad)
and
int3
push
sahf
cwde
cwde
aas
daa
dec
leave
out
ret
out
icebp
mov
inc
mov
mov
xor
dec
mov
mov
ins
cli
sub
ja
cmp
inc
jle
aam
and
(bad)
test
jns
xchg
dec
or
sub
or
adc
mov
adc
mov
jmp
imul
pushf
xor
xchg
push
sub
shr
xchg
sahf
xor
fist
jnp
test
adc
and
scas
or
xchg
retf
jl
icebp
dec
loope
dec
in
in
std
sbb
icebp
jb
movs
jnp
xor
ds
push
pop
call
mov
test
sar
mov
and
(bad)
call
outs
inc
ror
fwait
jl
jmp
sbb
bound
fcomp
jno
mov
test
add
movs
mov
imul
nop
movs
nop
clc
mov
(bad)
out
fcmove
mov
adc
cmp
loopne
gs
jmp
sub
jne
arpl
cmc
xchg
xor
fdivr
inc
add
mov
and
nop
adc
add
xor
(bad)
in
xchg
pop
and
jmp
inc
out
fld
int3
push
int
push
push
ror
inc
cmp
xlat
or
sub
sub
shl
sbb
hlt
cs
mov
xor
imul
enter
out
test
rol
shr
cmps
scas
push
ret
jb
mov
(bad)
mov
iret
loop
adc
or
sub
ror
pop
or
add
retf
js
daa
dec
mov
xor
mov
popf
mov
loope
jae
repnz
loope
pop
rcr
out
mov
cdq
jns
and
cmp
sub
inc
mov
addr16
fistp
cmp
push
inc
cs
mov
in
sahf
loopne
xor
fbld
add
xchg
call
jne
pushf
js
cmp
ret
and
jne
xlat
pop
loop
enter
pushf
push
pop
cmps
push
pop
sub
dec
cmp
or
adc
fdivr
test
call
jae
cmc
sbb
aaa
adc
ja
aaa
jae
inc
sar
sub
ins
ficom
pop
mov
iret
lods
push
inc
loop
adc
push
fbstp
(bad)
mov
lahf
push
push
fldcw
and
dec
mov
or
aaa
test
sbb
ss
mov
mov
hlt
sub
and
jmp
mov
movs
mov
jecxz
fidivr
xchg
fs
sahf
sbb
mov
mov
dec
scas
jle
adc
pop
jecxz
leave
mov
add
inc
jge
frstor
inc
pop
mov
ss
sbb
idiv
pop
in
jp
sbb
test
xor
dec
icebp
inc
jg
sub
mov
sbb
pop
sub
mov
inc
lea
das
or
clc
or
js
stc
dec
cmp
or
popf
cmp
xor
gs
in
fwait
dec
aaa
and
inc
rol
arpl
pop
bound
pop
xchg
xor
xor
aam
fiadd
jo
int3
mov
adc
sub
into
test
lods
mov
fcomp
stos
pop
jg
adc
xchg
push
pop
pop
push
mov
stos
sub
inc
jo
jbe
add
xchg
pop
adc
dec
jmp
into
in
jmp
mov
inc
stos
mov
outs
shr
cmp
mov
sub
cmp
outs
or
call
in
jo
ret
loopne
jb
out
add
inc
cdq
adc
mov
dec
inc
aad
push
mov
or
jne
cli
mov
movs
xor
xchg
(bad)
out
push
iret
fld
aad
adc
push
(bad)
push
adc
xchg
push
dec
aas
dec
add
retf
jb
and
pop
mov
dec
dec
es
jmp
fiadd
pop
fldln2
ficomp
mov
adc
mov
lea
test
or
xor
jle
(bad)
retf
cmps
jo
movs
sub
cmp
jo
jl
push
jl
hlt
out
mov
test
das
xor
jno
sub
jns
(bad)
add
pop
ins
out
cmp
das
into
sbb
sbb
ret
movs
imul
dec
out
ret
or
jo
mov
add
stc
mov
mov
out
adc
jl
jl
pop
pop
push
mov
inc
shr
mov
mov
(bad)
shr
adc
imul
cmp
inc
sub
rcr
xchg
fwait
pop
cmp
pushf
dec
pop
inc
fiadd
sbb
pusha
xchg
inc
jmp
xchg
or
rcl
mov
push
loop
rcl
in
test
push
pop
or
sbb
jbe
outs
ja
push
rcl
xchg
pop
aam
mov
dec
inc
xchg
push
loop
mov
sar
push
ins
push
fistp
ja
mov
out
out
repnz
lahf
movs
outs
enter
psraw
sar
loop
mov
cmp
dec
jno
dec
and
xor
jbe
cmp
fs
call
int
push
or
cmps
mov
xchg
and
shl
js
dec
jmp
pop
mov
das
(bad)
jno
out
ss
call
out
mov
dec
fidivr
xchg
fnstsw
(bad)
lds
inc
and
daa
jae
mov
pop
dec
push
nop
ret
xchg
or
(bad)
push
rcl
ss
xor
dec
outs
mov
ja
push
inc
and
icebp
clc
jl
scas
push
mov
and
xchg
push
rol
push
popa
adc
shr
jo
ror
ins
xchg
jns
arpl
jg
icebp
xor
cmp
into
add
adc
push
mov
mov
fisub
jo
mov
xlat
pop
out
fild
push
ficomp
and
and
add
dec
sub
and
sbb
std
or
cmp
dec
ret
sbb
je
lahf
xor
pop
int3
adc
pop
jo
mov
hlt
std
adc
xor
int3
data16
pop
iret
ins
mov
fld
push
les
std
dec
dec
mov
cdq
adc
jge
inc
rcr
push
pusha
jno
pushf
ins
ficomp
fwait
sub
jno
loop
push
mov
pop
call
ror
push
mov
stc
adc
adc
adc
shl
push
mov
lea
scas
imul
or
das
data16
jle
mov
cmp
aaa
pop
dec
outs
test
jne
sbb
push
push
cmp
add
loop
push
inc
cwde
mov
sub
xchg
into
push
pop
jne
loop
movs
or
adc
mov
pop
pop
(bad)
test
pop
fcmovu
int
pop
inc
ins
sub
jmp
and
mov
or
movs
fsubp
or
inc
iret
push
mov
pop
sar
ffreep
sub
mov
jg
lods
ret
out
sub
nop
sub
mov
(bad)
cmps
call
test
stc
mov
loop
or
popa
mov
push
loop
repz
sbb
cli
scas
push
call
inc
and
mov
xchg
rcr
xor
mov
lea
test
fwait
mov
jns
pop
stos
(bad)
inc
sub
inc
jle
enterw
mov
inc
bound
mov
pop
aad
mov
pop
cmp
jno
daa
imul
fwait
add
mov
test
dec
jo
fst
enter
mov
cmc
mov
and
xor
imul
fdiv
push
jns
mov
(bad)
mov
push
cli
jns
adc
add
mov
mov
jns
fs
fs
and
sub
stos
out
add
out
shl
sub
or
jno
fidiv
xor
jle
std
or
lods
daa
sub
gs
lea
shl
or
push
inc
and
sub
mov
add
jmp
mov
xor
mov
mov
inc
lahf
ins
mov
add
cmc
and
xor
(bad)
outs
xlat
test
stc
jnp
cmp
sahf
xchg
xchg
jl
jae
mov
lahf
and
cmp
pop
test
push
mov
es
data16
sub
mov
ror
push
push
adc
xor
mov
push
jno
cdq
push
aas
es
into
cmc
pop
call
ret
jp
aad
jle
in
mov
mov
and
and
stc
ret
push
stos
pop
cmp
add
fcmovnb
pop
pop
fcmovnbe
out
loop
jecxz
iret
dec
in
scas
adc
imul
(bad)
outs
loope
arpl
jle
cmc
(bad)
jp
outs
mov
ja
pop
lods
push
rep
scas
push
loope
lods
aam
inc
into
aaa
inc
jmp
jnp
push
call
jmp
retf
push
mov
daa
(bad)
and
in
sbb
pop
mov
(bad)
xlat
cmc
or
sbb
mov
ss
pusha
iret
fild
arpl
movs
mov
call
mov
rol
sti
sbb
add
push
xchg
mov
fldlg2
mov
mov
test
cwde
dec
(bad)
or
dec
lahf
xchg
arpl
loop
push
retf
lea
pushf
dec
xchg
mov
ret
mov
jg
call
movs
pop
outs
je
arpl
sub
iret
shl
jge
test
pop
dec
xor
hlt
inc
dec
sbb
addps
cs
dec
pop
pop
cmps
popf
mov
sub
jne
mov
pop
call
or
push
fcomp
je
ror
adc
aaa
inc
jg
or
cmp
add
pop
ds
fcom
fisttp
lods
sbb
jnp
mov
out
pusha
cmps
daa
das
bnd
or
(bad)
and
fadd
sbb
mov
jo
loop
adc
dec
rcr
jmp
fidivr
inc
(bad)
mov
ss
pop
cmp
stos
sbb
push
call
xor
push
lea
pop
retf
imul
outs
push
rcl
addr16
pop
imul
sub
(bad)
jl
or
test
mov
sub
jne
sub
cmps
out
add
xor
jge
pop
ret
mov
inc
lods
mov
jae
in
or
ins
push
add
push
mov
out
inc
clc
dec
pop
mov
fsubrp
cmps
jns
sahf
dec
scas
mov
adc
aam
cdq
sbb
fs
push
aas
cmps
and
dec
inc
push
cld
mov
pop
cmp
inc
sbb
addr16
dec
les
leave
data16
pop
js
cs
mov
rcl
jb
bound
inc
dec
adc
test
push
adc
test
jge
gs
sti
lods
jnp
outs
pop
aas
jge
mov
xor
movs
pop
out
and
sub
pop
ret
push
mov
or
mov
dec
jle
ror
or
jmp
lock
dec
out
mov
mov
jle
aaa
cs
push
js
cmc
sar
xor
dec
das
js
mov
mov
call
lds
sub
out
mov
add
outs
jns
sbb
push
int
fist
lea
cmp
mov
dec
outs
mov
in
cmp
les
push
dec
pop
imul
add
addr16
and
cmp
inc
jne
stos
mov
add
xor
iret
or
leave
pop
or
(bad)
sub
fld
mov
pop
inc
sbb
ds
fnstenv
xor
(bad)
nop
sub
xor
sub
push
int
push
or
cmp
fadd
mov
jbe
and
sbb
ja
inc
adc
cmps
sar
sub
jmp
aam
dec
jns
xlat
jo
mov
ins
adc
xor
in
dec
rol
sub
shl
fsubr
add
test
movs
mov
cmc
adc
mov
pop
jb
pop
fdivr
inc
push
leave
pop
or
fdivr
xchg
pop
push
xor
jno
and
push
dec
repnz
in
jmp
cmps
inc
mov
jle
jmp
xchg
pushf
pop
or
xchg
jmp
fs
add
pop
mov
ds
dec
jo
sub
test
mov
mov
mov
hlt
sbb
(bad)
cld
fst
sub
gs
in
mov
pop
cld
mov
dec
xor
lods
or
lods
inc
cmp
pop
adc
in
mov
shl
or
push
sahf
xor
adc
loopne
das
mov
mov
mov
in
dec
jp
sub
push
cmp
cdq
iret
lods
lock
bound
adc
loope
leave
ins
push
mov
outs
push
push
xchg
sub
adc
fimul
aam
nop
outs
jmp
clc
idiv
xchg
jmp
inc
out
push
arpl
dec
pusha
repz
mov
int3
mov
fdiv
loopne
xor
push
adc
sar
or
pop
mov
out
or
xor
jnp
sub
xor
inc
adc
adc
or
jns
ins
pop
and
std
iret
add
mov
cmp
xor
cmc
pop
int3
xchg
lahf
loope
xchg
shl
mov
dec
push
mov
aad
inc
push
sub
xchg
scas
or
sub
not
jbe
ins
mov
sbb
push
xchg
(bad)
cmps
in
adc
pop
and
xor
stos
jp
js
mov
enter
pop
out
shl
mov
xlat
mov
xor
jecxz
push
push
cmp
jmp
xlat
add
test
cmp
or
and
inc
enter
adc
mov
cld
leave
loope
sbb
stc
call
jp
outs
in
pop
mov
dec
(bad)
xchg
retf
fwait
ds
sub
imul
stos
add
data16
out
setp
push
pop
loopne
push
int3
and
int
adc
in
mov
(bad)
call
movs
imul
xor
push
js
xor
cwde
enter
mov
rol
ss
movs
jp
aad
adc
jmp
sub
inc
sbb
cwde
mov
push
mul
dec
outs
cmps
out
(bad)
push
or
arpl
push
push
std
leave
mov
shr
sti
jp
es
jmp
adc
add
adc
jl
mov
addr16
xchg
into
sbb
or
push
jne
popf
aad
(bad)
mov
aam
pop
push
rcl
mov
push
shr
bound
test
and
dec
dec
mov
jle
push
(bad)
sub
cmps
scas
test
dec
sub
jmp
fisub
div
mov
in
cmc
sbb
gs
std
mov
(bad)
push
jl
(bad)
fisttp
push
and
fst
popa
inc
sbb
iret
jo
push
rcl
jns
pop
xchg
sbb
jae
mov
pop
mov
jno
sub
shl
and
stc
aaa
gs
xor
jnp
pop
daa
pop
imul
pop
jmp
jne
and
push
pop
cdq
mov
mov
fs
jae
in
test
mov
jbe
int
call
ds
out
movs
stos
push
lea
jns
aas
dec
adc
mov
jno
xchg
mov
ins
cmp
mov
dec
clc
mov
jmp
jecxz
xor
call
fsubr
hlt
jmp
sbb
shr
sbb
ja
(bad)
sub
xchg
jnp
lahf
test
mov
jle
outs
inc
bound
loop
inc
in
dec
test
in
sbb
inc
xor
inc
mov
jno
inc
adc
xor
repnz
repnz
adc
aas
ins
enter
mov
xor
test
pop
dec
sbb
and
cmp
inc
lods
add
add
ds
dec
loopne
xchg
jecxz
push
shl
(bad)
fidiv
mov
loop
into
test
add
fisttp
repz
push
scas
jo
pop
(bad)
pop
cmps
push
sbb
int
repz
and
mov
popa
enter
cmp
push
arpl
in
inc
shl
lds
jbe
cmp
jecxz
sbb
pushf
clc
pavgw
pusha
pop
loop
push
loopne
daa
fs
stos
lods
sbb
sbb
fs
call
adc
bound
scas
inc
and
dec
pop
scas
cdq
shr
in
stos
and
(bad)
ins
mov
lds
lock
mov
iret
aas
js
mov
daa
test
xor
or
dec
inc
or
shr
push
push
ins
aas
xchg
stc
(bad)
in
repz
push
xchg
cmps
jnp
push
popa
popa
xchg
outs
inc
push
mov
jl
pop
push
in
mov
test
mov
fisttp
or
sbb
je
mov
les
and
cmc
cmp
sbb
pop
ins
aaa
and
dec
fdiv
pop
xor
rol
aaa
aad
jb
mov
not
xchg
shl
mov
(bad)
jmp
jno
xchg
jns
cmps
out
ins
add
ja
mov
jns
inc
sub
add
es
arpl
jmp
sbb
cwde
jns
movs
inc
les
xor
imul
jne
js
inc
scas
cli
sbb
retf
call
mov
jl
loope
push
push
mov
in
and
push
sub
cs
icebp
add
mov
into
cmp
or
xlat
popa
add
pop
jl
and
lods
stos
loop
repz
jmp
into
mov
ficom
inc
dec
dec
add
sub
xor
inc
adc
mov
adc
pop
lahf
fs
xchg
in
add
add
loope
xor
mov
xchg
jbe
jns
ret
or
loop
sbb
sub
dec
add
jnp
cmp
fnstcw
pop
cs
push
jnp
mov
mov
adc
jne
adc
mov
bnd
aaa
fsubr
in
cld
js
push
aam
xor
jo
mov
lods
clc
mov
aad
popa
les
sub
sub
cmp
mov
fdiv
mov
lods
js
add
mov
in
cmp
sbb
or
push
add
mov
test
pop
ret
sti
(bad)
sbb
aad
sub
icebp
sahf
xor
add
hlt
xchg
adc
xchg
shr
mov
xor
jmp
jnp
(bad)
call
mov
inc
pop
xchg
sbb
or
cmp
mov
loope
shl
retf
xor
mov
loop
frstor
test
test
repnz
add
pop
inc
fsub
xor
clc
pop
cmp
and
dec
mov
add
ja
xbegin
xchg
or
outs
jne
(bad)
adc
lods
aad
mov
cmp
fadd
sahf
(bad)
adc
lea
or
push
pop
dec
cmp
sub
sbb
test
(bad)
out
ins
mov
int3
cmps
jae
dec
(bad)
ins
dec
push
xchg
sar
push
push
or
mov
movs
data16
icebp
xchg
inc
in
sub
dec
out
mov
clc
mov
fist
movs
dec
in
jne
int
icebp
push
jno
sbb
mov
inc
in
mov
dec
fwait
jp
push
jo
cli
mov
test
sbb
dec
ds
js
xchg
or
cmps
push
adc
rcl
cdq
push
jo
jg
mov
xor
lahf
mov
int
aad
imul
pusha
xchg
dec
and
ret
ins
clc
dec
sub
(bad)
jnp
cmp
popa
pop
sbb
repz
retf
push
sub
sub
and
cld
pop
in
call
sub
aad
je
or
jne
cmp
and
inc
out
repz
sub
in
push
outs
mov
add
add
arpl
push
test
xchg
mov
leave
retf
imul
sub
call
ret
xchg
in
outs
test
imul
pushf
mov
push
div
fcomp
dec
stos
outs
int
pop
sti
xchg
mov
enter
or
(bad)
div
call
ret
ret
dec
ins
lods
cmps
cmp
xlat
xchg
movs
neg
push
shr
add
aam
cmps
into
push
mov
ret
jno
int3
fs
jp
not
mov
push
ror
jb
push
jl
ins
cmp
stc
pop
add
or
cmp
cmp
cld
lds
sbb
sar
cld
push
loop
data16
ds
stc
sti
dec
ja
cmp
sbb
aad
in
adc
xor
cs
and
jae
jae
mov
cwde
xor
test
fadd
jmp
mov
ins
mov
rol
add
jmp
div
mov
jge
mov
addr16
aad
add
int
iret
xchg
mov
push
inc
xchg
je
mov
dec
cmp
or
sub
mov
nop
out
pop
sub
pop
xchg
out
(bad)
jecxz
out
shl
rcr
inc
int
test
nop
daa
fs
mov
pop
repnz
bound
cmp
pusha
adc
mov
jge
xchg
dec
cwde
shl
fsubr
adc
hlt
or
into
cmp
in
xchg
sti
in
(bad)
cmp
xor
stos
in
mov
jecxz
pop
lds
mov
sub
push
gs
cmps
out
sub
mov
push
cli
adc
jge
sub
daa
repnz
push
xchg
stc
add
cmp
addr16
sbb
ficom
cdq
mov
inc
popf
mov
sub
fld
xchg
xchg
push
add
cwde
aaa
mov
mov
mov
cmp
push
nop
clc
push
in
popf
mov
dec
cmp
cmp
push
push
inc
test
sahf
sub
out
mov
inc
loop
les
pop
add
cmp
imul
add
and
imul
movs
mov
vmovmskps
es
adc
cmp
cli
adc
jne
pop
jge
add
mov
jle
xchg
pop
cld
cwde
mov
pop
mov
or
js
mov
xor
repnz
in
sub
test
rcr
jecxz
ror
mov
stc
lods
sti
jmp
add
out
jge
dec
sbb
lea
pop
ficom
test
mov
(bad)
shl
in
push
es
mov
dec
jnp
and
xor
out
adc
retf
adc
add
mov
mov
clc
aaa
pusha
adc
loope
adc
dec
sub
stos
xchg
mov
xor
lock
fisub
fs
or
xchg
ja
sbb
das
xchg
fadd
mov
jle
jbe
pop
imul
sbb
mov
or
in
ret
ds
xor
inc
jg
mov
lea
sar
jg
inc
lahf
leave
dec
jmp
and
add
pop
scas
inc
cld
jmp
sbb
pop
hlt
mov
add
adc
xor
sar
mov
mov
fstp
jle
pop
sbb
loopne
in
push
pop
cmp
mov
add
cmp
cdq
add
mov
sbb
cmp
pop
mov
adc
aam
xchg
or
mov
fnstcw
push
xchg
cdq
jge
sbb
fstp
adc
bound
mov
(bad)
push
inc
fimul
addr16
shl
in
adc
xor
jb
mov
ins
and
or
outs
mov
push
es
and
test
sub
fild
lods
out
mov
mov
push
sbb
rol
push
push
or
push
cs
mov
mov
stos
push
inc
sub
mov
pop
dec
fadd
push
jp
pop
in
add
int3
movs
add
xchg
ret
adc
inc
test
push
daa
neg
daa
js
cmp
jmp
push
scas
inc
xchg
cmp
aas
pop
aaa
cmp
sahf
cmps
dec
mov
cs
ds
push
out
shr
add
cmp
out
out
loope
test
pop
xor
cli
jp
(bad)
and
fwait
daa
sub
mov
mov
icebp
mov
and
adc
nop
sub
xor
rcr
add
std
sub
cdq
mov
inc
fnstsw
or
(bad)
(bad)
bound
pop
(bad)
sbb
push
mov
sar
cmp
mov
(bad)
cdq
out
mov
imul
test
jnp
cmp
mov
dec
in
pop
sub
sti
es
test
xor
push
mov
sub
not
fcom
xchg
pop
out
push
scas
cdq
xchg
add
gs
test
jno
add
ret
and
pop
dec
dec
push
dec
sar
pop
out
(bad)
iret
popf
adc
adc
in
stc
outs
loop
int3
pusha
xor
cmp
xchg
push
and
push
add
cmp
sub
shl
std
jl
lods
rcr
adc
fs
std
cmps
aad
push
movs
cwde
outs
fs
imul
test
stos
aam
lods
dec
sar
xchg
cmc
pop
adc
fiadd
je
test
shr
dec
ret
mov
mov
in
(bad)
push
aam
pushf
rcl
(bad)
dec
ins
push
inc
and
adc
xor
scas
and
inc
or
ror
test
pop
leave
xchg
fdivr
mov
pop
mov
es
iret
popa
xor
dec
ds
pop
push
xchg
test
push
sbb
push
inc
fs
in
xchg
push
enter
je
add
inc
repnz
fist
add
mov
imul
bnd
push
(bad)
cmp
fsubr
sub
mov
iret
inc
inc
stc
out
jmp
mov
mov
stc
adc
jg
jle
jmp
ss
jecxz
jle
xlat
mov
aas
xchg
cwde
sub
sti
sub
je
sahf
inc
cmps
lods
lea
arpl
and
clc
xor
cli
mov
nop
cmps
call
das
cld
nop
stos
adc
loope
aaa
enter
je
add
pop
and
pushf
push
leave
jb
adc
(bad)
iret
ss
xor
pop
dec
cwde
stos
std
jae
adc
mov
push
shl
adc
xchg
pop
clc
or
(bad)
gs
das
push
sti
add
xchg
xor
push
ja
test
adc
push
mov
bound
test
loopne
mov
xchg
sbb
fdiv
imul
test
xchg
pop
sub
outs
push
outs
cmp
cs
ror
mov
sar
loope
fimul
mov
mov
(bad)
mov
jp
mov
or
mov
mov
and
cs
mov
add
pop
inc
xor
sbb
pop
sbb
in
sbb
and
xchg
mov
arpl
retf
pop
adc
sub
scas
lods
popa
gs
(bad)
out
fs
and
lahf
or
xchg
mov
int3
scas
dec
aas
dec
ret
repnz
aas
ss
sbb
fimul
mov
and
leave
cmp
jne
mov
out
push
stc
sub
jbe
retf
sub
(bad)
inc
repnz
sbb
je
jmp
xor
mov
fsubp
xchg
jg
jns
adc
xchg
fwait
(bad)
loopne
add
inc
xchg
sub
loopne
pop
(bad)
add
pop
cwde
stos
push
inc
retf
ss
xor
ret
mov
and
cmp
sbb
movs
fdivr
push
shr
sub
push
xchg
outs
out
add
push
pop
ss
pop
cli
in
and
sub
dec
das
push
mov
fidivr
dec
sahf
mov
xlat
jecxz
cli
call
inc
xchg
push
inc
xchg
lahf
lock
stos
out
push
adc
ret
jne
jmp
jmp
jg
pop
(bad)
dec
cld
dec
pop
dec
add
test
aas
out
int
cld
js
rol
mov
setne
lahf
je
jge
sub
(bad)
sub
sub
iret
out
jnp
fistp
(bad)
jmp
dec
push
xchg
hlt
lods
push
add
das
push
xor
das
ins
mov
outs
push
out
push
pop
jmp
push
jge
loop
dec
dec
(bad)
ins
and
mov
stos
mov
mov
popa
mov
hlt
rcr
pop
pop
inc
or
sar
loopne
ins
int3
xor
addr16
ja
jmp
dec
pusha
loopne
cli
sub
aam
cli
xchg
xor
pop
gs
in
inc
cmp
jge
ds
jne
les
dec
inc
or
sbb
int3
outs
jo
or
adc
push
push
shr
inc
imul
add
cmps
or
and
or
xor
cmp
cmps
scas
dec
mov
mov
(bad)
popa
push
imul
pushf
jle
mov
cmc
bnd
pop
inc
enter
movs
imul
stc
popa
cwde
leave
mov
push
rcl
inc
jno
sub
jle
jecxz
add
loop
jge
mov
or
das
mov
adc
inc
inc
int3
bound
mov
mov
lahf
sub
jo
lods
mov
daa
in
jge
out
retf
fistp
jmp
fcom
loopne
popa
popf
xor
sahf
pop
sub
push
stc
jp
mov
(bad)
aas
add
mov
test
rcr
xor
out
dec
or
adc
in
inc
and
sub
lock
cld
mov
inc
or
rcl
in
cmp
push
out
lahf
imul
ficom
loop
mov
fist
push
jae
(bad)
jl
mov
push
aas
pop
leave
addr16
mov
cmp
test
ins
(bad)
test
outs
xchg
aam
mov
cmp
pop
dec
jmp
cmps
leave
mov
into
mov
dec
ret
cmp
pop
jno
cwde
and
shl
cmp
xchg
inc
lahf
stc
loopne
cmp
jmp
(bad)
pusha
in
fs
or
loop
or
mov
cmp
mov
stos
mov
aad
mov
sbb
mov
ins
inc
mov
mov
xchg
sbb
mov
jp
jns
call
xchg
mov
dec
push
(bad)
sbb
addr16
popf
cmps
mov
repnz
pusha
pop
aad
icebp
or
std
dec
test
jmp
in
arpl
push
out
adc
adc
cmp
jmp
movs
scas
repnz
sub
ins
data16
(bad)
adc
rol
lahf
gs
jns
fld
adc
les
push
retf
out
hlt
stos
out
mov
dec
into
cmp
(bad)
mov
pop
loopne
mov
cmps
pop
sub
inc
cmps
iret
and
pop
fiadd
retf
dec
xor
jp
mov
sub
push
mul
mov
jnp
mov
mov
fs
mov
bswap
imul
push
cmp
push
xlat
pop
mov
je
jmp
sbb
jne
add
sub
js
jb
mov
sub
ret
mov
gs
mov
xchg
add
jae
aam
pop
cwde
adc
imul
xor
push
sub
ss
test
sub
(bad)
cmovo
sub
push
pop
mov
out
push
in
and
bound
ret
bound
rcr
fwait
cwde
js
xchg
sub
adc
mov
sub
scas
xchg
(bad)
push
sbb
cmps
mov
in
inc
xchg
imul
iret
cmp
imul
hlt
mov
jbe
(bad)
mov
ret
pop
std
or
repnz
xchg
int
dec
jmp
sahf
or
addr16
xlat
lahf
repnz
(bad)
jle
test
and
movs
fst
stc
pop
inc
out
adc
mov
popf
push
ins
rcl
pop
inc
push
dec
sar
xchg
test
mov
fcomp
sbb
push
adc
sbb
leave
cmp
gs
fsubr
fimul
or
int3
inc
cs
ret
in
neg
icebp
shl
sub
inc
xor
lods
xor
fistp
sbb
ins
retf
fidivr
shl
jno
jl
mov
jl
or
jbe
mov
jge
pushf
jg
mov
int
fsubr
movs
out
cmp
xchg
dec
call
mov
cmp
xchg
push
(bad)
sbb
pushf
pop
inc
jbe
jae
add
fdivr
test
jb
inc
lock
pop
push
mov
enter
adc
xchg
out
into
or
scas
push
jle
(bad)
into
sub
std
popf
into
or
(bad)
das
fs
out
mov
sti
mov
data16
inc
cmps
inc
push
add
popa
jmp
stos
repnz
aad
je
stos
xchg
repnz
or
rcr
or
jmp
ret
hlt
xchg
or
enter
sahf
cs
jo
pop
mov
aad
add
sti
leave
dec
lock
iret
pop
ret
mov
std
jbe
scas
cmps
jmp
push
adc
jno
sar
xor
jge
pop
sub
xchg
lea
push
fs
int
es
retf
mov
xor
xor
aad
add
fisubr
retf
mov
lahf
mov
mov
pop
xchg
xchg
in
mov
mov
adc
jecxz
mov
cmp
or
push
pop
xchg
cmp
into
dec
(bad)
xlat
and
sbb
ins
test
mov
rcr
mov
inc
ret
cmps
movs
xor
loop
pushf
mov
and
mov
mov
lds
retf
mov
sbb
sub
aad
frstor
push
add
inc
repnz
retf
jb
mov
fstp
(bad)
mov
inc
gs
test
sar
pop
add
mov
cmp
push
loopne
xchg
sub
jns
jo
lahf
sub
sbb
ins
lahf
loopne
mov
aad
xchg
jle
xchg
inc
aas
lea
neg
in
cdq
adc
xchg
pop
mov
mov
dec
and
rol
lods
sbb
xchg
shl
ja
scas
pop
pop
pop
jns
je
mov
sub
and
sub
sbb
and
adc
fs
mov
imul
(bad)
adc
mov
mov
into
push
inc
xor
jmp
inc
nop
sbb
clc
pop
jmp
mov
inc
xor
sar
repnz
fwait
rcl
adc
jge
sub
push
push
sti
scas
fimul
pop
mov
les
div
push
pushf
jg
inc
mov
jbe
jmp
movs
mov
jmp
jne
mov
retf
dec
std
mov
adc
out
sub
cdq
rcl
add
jbe
sti
aaa
jecxz
ror
call
je
push
sub
cmp
push
push
aas
fs
icebp
iret
fld
arpl
adc
adc
add
push
fisubr
jl
xor
pop
lahf
stos
sti
xor
xchg
push
mov
std
or
pushf
movs
dec
data16
std
sub
ins
jae
and
push
in
aad
daa
iret
cdq
fldenv
data16
fwait
mov
cmp
rcr
push
lds
adc
cs
xchg
mov
in
les
dec
in
xchg
inc
xor
xor
loop
retf
fnstcw
mov
call
popa
mov
pop
ss
out
pop
xchg
pop
ss
cdq
popf
pop
inc
or
test
sbb
dec
push
pop
pushf
imul
test
mov
xchg
mov
lahf
jns
fdiv
sbb
inc
out
popf
stos
sbb
xchg
mul
ret
jb
pushf
dec
cmp
fs
xchg
gs
sbb
out
fcom
sub
inc
push
mov
cmp
mov
imul
sbb
mov
scas
clc
mov
xchg
jae
ret
add
cs
inc
stos
mov
ret
rcr
mov
sbb
xor
or
stos
push
in
cmp
fnstcw
cld
xchg
or
das
inc
jmp
lahf
add
mov
push
mov
mov
imul
xchg
cmp
(bad)
rcr
xor
ja
out
inc
addr16
sub
dec
mov
sub
out
test
push
mov
dec
adc
mov
jb
push
add
pushf
pop
ja
gs
call
mov
mov
into
and
(bad)
jmp
add
loope
ds
int
cld
in
adc
mov
pop
shl
js
jmp
dec
xchg
cmp
cmc
(bad)
adc
inc
mov
aas
aas
addps
xchg
popf
mov
and
dec
ja
leave
aaa
cmp
iret
xor
inc
movs
or
mov
xor
or
sar
je
mov
arpl
mov
pop
call
pop
sub
lock
call
mov
and
add
retf
sub
lea
scas
or
inc
bound
movs
pop
add
jge
aaa
xor
xor
mov
pop
mov
fsub
jne
cwde
and
and
enter
inc
retf
stc
ds
mov
adc
mov
movs
imul
push
mov
popa
rcr
jge
in
aas
xchg
xor
fisttp
sbb
(bad)
xchg
push
mov
push
ret
(bad)
ror
aaa
xchg
mov
scas
cmp
test
mov
jo
inc
pop
imul
movs
mov
cld
mov
cs
retf
mov
movs
pushf
in
sbb
inc
imul
movntq
out
fnstcw
stc
sbb
and
ret
cmp
pop
loopne
inc
outs
push
and
add
xchg
mov
iret
aaa
stc
(bad)
cmp
mov
pop
mov
cmp
sub
pop
mov
icebp
pop
jmp
mov
and
push
xlat
dec
fbstp
fsub
movs
pop
test
rol
and
pushf
adc
adc
stc
das
aaa
xlat
sbb
xlat
aaa
inc
sti
xor
test
dec
and
ins
add
imul
fs
ins
or
jo
pop
inc
sahf
cs
loopne
pop
xor
mov
mov
pop
mov
sub
mov
xchg
cmp
xchg
daa
jo
or
arpl
jle
mov
cmp
mov
xor
aaa
pop
loop
xchg
add
mov
test
stos
rol
jmp
mov
ins
out
sub
mov
and
es
inc
test
ret
cmp
(bad)
jge
vrcpps
jns
mov
adc
cld
xlat
in
inc
mov
cmps
std
dec
shl
scas
pop
adc
dec
mov
icebp
mov
mov
pusha
mov
fldln2
call
cwde
dec
inc
or
push
mov
pop
in
sbb
sbb
xor
sbb
mov
fisub
mov
pop
aaa
sub
aas
jg
(bad)
(bad)
jmp
xlat
lock
imul
stos
ins
inc
mov
jg
es
inc
sbb
ror
dec
mov
xor
mov
out
jns
not
or
movs
xor
loope
mov
adc
in
push
fbstp
cmc
cmc
aam
ja
add
sahf
mov
inc
sbb
leave
fisub
test
inc
sub
retf
xchg
and
or
mov
dec
retf
in
int3
mov
nop
(bad)
jb
mov
mov
aam
mov
sub
out
sub
xchg
movs
les
mov
call
pop
mov
ins
cwde
rol
in
pop
pop
aam
das
dec
inc
cs
jp
cmp
inc
jo
les
sbb
ins
cmc
lods
fidivr
dec
add
cmp
mov
mov
sub
imul
test
ins
dec
sub
xchg
or
or
inc
movs
mov
cli
xor
sub
fstp
fstp
sbb
pop
mov
js
push
js
or
ss
jp
inc
enter
lods
mov
mov
mov
push
ss
pop
test
or
push
xor
(bad)
push
shl
or
xor
fwait
int3
dec
call
jno
rcl
mov
xchg
dec
(bad)
(bad)
popf
sti
push
sbb
fst
cmp
add
sbb
jae
jecxz
loop
add
inc
test
mov
add
in
sbb
ret
fs
or
movs
mov
(bad)
(bad)
(bad)
jne
add
iret
add
push
mov
sub
and
push
jecxz
xor
lea
pop
mov
push
fcmove
jne
xchg
cli
sbb
push
jp
cmp
sbb
add
add
xchg
inc
mov
rcl
pop
test
mov
(bad)
rol
push
iret
xchg
in
jae
inc
cwde
sbb
cmp
ja
dec
test
pop
loope
jp
push
or
shl
nop
and
pushf
dec
push
xchg
jne
dec
sub
scas
clc
ficomp
(bad)
inc
xchg
mov
fidivr
les
lea
int
jae
dec
mov
out
das
xor
ins
das
rcl
mov
mov
sub
out
mov
mov
cli
in
push
or
xor
outs
mov
cmp
dec
mov
iret
mul
popf
jecxz
adc
(bad)
jp
cmp
lea
push
imul
pop
test
in
jne
jl
pusha
pop
js
push
jp
lahf
imul
dec
sub
jge
sub
shl
dec
xchg
aaa
or
scas
and
retf
push
mov
rcr
add
cmps
sti
or
mov
xor
jnp
fldenv
sbb
(bad)
nop
jo
lods
mov
xchg
and
iret
and
(bad)
mov
stos
fsubrp
cmc
mov
pop
pop
imul
mov
aaa
push
push
adc
pop
push
mov
dec
or
jg
cli
cmps
fimul
push
test
pushf
imul
or
and
out
and
hlt
mov
mov
push
push
aad
rcr
add
pop
call
jae
mov
pop
add
ins
call
shl
mov
arpl
sbb
cs
movs
mov
add
mov
xlat
pop
aad
adc
mov
add
xchg
cmp
inc
lock
mov
push
rcr
packuswb
cmp
inc
jne
push
mov
pop
punpckldq
lods
xchg
loope
pop
aad
mov
les
dec
mov
xlat
test
sar
or
dec
push
aad
jle
adc
xchg
xor
mov
je
mov
imul
enter
sub
bound
adc
shr
sub
in
aam
inc
movs
ja
cmc
fnstsw
shr
repz
push
xor
cmp
push
sbb
outs
or
lock
dec
xchg
dec
jne
jecxz
mov
dec
push
or
pop
rcl
dec
cmp
xchg
test
es
aam
xor
jmp
shl
rol
mov
add
mov
aad
hlt
cli
sbb
xchg
out
mov
out
xchg
mov
pop
shl
lods
pusha
call
xchg
fdivrp
outs
xchg
jmp
jae
inc
mov
adc
or
xchg
fadd
out
arpl
test
cmp
pop
xlat
mov
xor
stc
jne
sbb
std
cmp
fnstsw
aad
xor
sub
mov
cmp
popa
addr16
mov
pop
test
pop
cmp
mov
es
shr
repnz
push
mov
dec
clc
lock
lahf
out
xchg
jne
jmp
popf
lahf
xchg
movs
jb
dec
and
(bad)
jecxz
mov
push
fild
push
sub
sbb
jns
inc
xor
ficom
adc
stos
pop
test
add
mov
ds
mov
(bad)
fnsave
cwde
arpl
sub
cmp
cmps
push
xlat
xor
out
xor
(bad)
(bad)
inc
outs
sub
sbb
xor
push
inc
mov
repnz
add
mov
inc
test
frstor
xlat
or
repnz
push
push
lods
fs
jmp
cld
mov
movs
pop
push
loopne
xchg
cmp
es
and
aas
mov
xchg
xchg
mov
xchg
lds
inc
add
icebp
lahf
ja
clc
sbb
aam
jg
or
dec
outs
mov
cmp
inc
mov
xor
pop
mov
fcmovnb
push
mov
iret
in
retf
pop
dec
push
aas
pop
pop
mov
and
fsub
dec
dec
imul
push
inc
dec
dec
sub
test
jg
int
push
cld
add
mov
mov
dec
int3
daa
pop
into
jns
mov
sub
push
inc
add
das
xchg
fsub
jo
sbb
jmp
cmps
adc
jno
clc
inc
ficomp
push
xchg
aas
add
out
mov
jmp
jno
sbb
addr16
push
sub
mov
pop
and
mov
sub
fucom
inc
sbb
sti
scas
bound
gs
mov
not
xchg
cwde
or
lock
adc
repnz
inc
imul
mov
leave
sbb
shl
clc
sbb
mov
stos
cld
cmp
mov
je
je
popa
fisttp
or
das
mov
add
sub
ins
cdq
(bad)
enter
int3
stos
das
arpl
adc
dec
ja
repnz
xchg
pop
cmps
out
mov
xlat
adc
lds
dec
les
fs
pop
jae
stc
repnz
call
xchg
pop
cs
cmps
das
(bad)
enter
pop
stos
push
inc
hlt
adc
sbb
lahf
sbb
xchg
cmp
mov
xor
cmp
and
jecxz
push
jo
hlt
daa
sbb
fst
fmul
scas
jg
xchg
xor
mov
test
mov
pop
dec
mov
retfw
xchg
jae
mov
dec
cmp
mov
sub
and
inc
aam
push
and
cld
ror
pop
outs
idiv
cmp
movzx
(bad)
push
jne
iret
cmp
cli
cld
inc
cmp
daa
adc
aad
cmp
out
jl
mov
mov
stc
(bad)
dec
xor
push
rcl
fs
jp
sbb
pop
loopne
aam
(bad)
sbb
jmp
cmp
mov
nop
(bad)
mov
(bad)
mov
retf
push
pop
push
fbstp
xor
adc
pusha
cmp
push
cmps
out
pop
sub
and
arpl
aaa
rol
int3
popa
pop
rol
loope
inc
and
jns
xor
leave
gs
pop
adc
fmul
add
jg
int3
cmp
repz
pop
push
out
mov
add
jecxz
mov
cmps
out
cs
pop
mov
hlt
sbb
ja
cmc
ret
rol
daa
movsx
mov
retf
in
push
cmc
xchg
out
or
or
sub
out
inc
mov
cmp
mov
mov
in
ret
rep
test
pop
inc
xchg
aaa
addr16
mov
jne
adc
mov
inc
pop
pop
cmp
inc
pop
pushf
push
jl
jne
xchg
fxch
imul
mov
xchg
shl
shr
scas
retf
jnp
push
inc
add
outs
sbb
push
popf
in
mov
stos
jb
sbb
popa
mov
fdivrp
or
inc
out
push
adc
es
jg
stos
push
mov
and
out
outs
adc
cmp
push
or
adc
fld
int
cli
xor
push
bnd
push
sub
xor
test
fndisi(8087
stc
xchg
fsub
xor
add
cmc
dec
dec
idiv
cmp
lock
dec
fcmovbe
cmp
pop
xchg
adc
loope
fwait
xor
xchg
jnp
mov
fstp
and
fnsave
xchg
into
repnz
jo
lods
mov
push
sbb
loop
outs
lahf
stos
sub
data16
rol
add
adc
jns
sbb
fiadd
(bad)
pop
sbb
bound
not
mov
fnstcw
imul
jcxz
jnp
xor
mov
test
pop
push
out
lods
js
mov
aad
cdq
jge
std
loope
outs
sbb
pop
xchg
imul
inc
inc
ret
lods
push
in
or
fs
jmp
out
jmp
xor
mov
sbb
lds
mov
fmul
mov
ret
sti
les
cmps
cmp
and
outs
repz
ja
clc
dec
push
rcr
fild
add
push
cwde
and
xchg
mov
loop
xchg
jbe
jmp
(bad)
cmp
or
push
adc
repz
in
push
rcl
mov
push
jns
add
cmp
addr16
add
loop
addr16
push
and
sti
mov
ds
pop
imul
daa
pushf
or
mov
push
ror
xlat
sti
out
scas
fs
xchg
fld
retf
inc
push
int
mul
test
pop
adc
pop
sub
and
add
lock
fcmovnbe
adc
sub
(bad)
fcmovbe
push
push
sub
inc
clc
fs
sti
hlt
push
mov
xchg
and
call
cwde
add
test
iret
iret
clc
sub
or
mov
les
mov
or
and
fisubr
fs
stos
shl
retf
jae
xchg
rcl
cmps
hlt
daa
pushf
cmps
mov
mov
mov
je
in
mov
imul
jne
daa
adc
add
cmp
in
sub
shl
movs
inc
repz
or
xor
out
mov
and
xchg
pop
mov
push
out
ins
mov
jne
in
jge
push
dec
or
out
jo
mov
cdq
out
shl
sub
test
in
sahf
lea
in
dec
retf
dec
xlat
sbb
fisubr
or
xor
imul
pop
xchg
mov
stos
sub
in
xchg
dec
(bad)
in
test
jl
lods
pusha
scas
dec
or
lea
mov
fisttp
mov
cmp
inc
sub
xchg
cmc
ret
push
stc
scas
pop
cmps
sub
xor
pushf
iret
sti
inc
sub
movs
sbb
sbb
jbe
shl
inc
push
clc
movs
mov
ins
or
es
pop
jns
bound
mov
retf
dec
hlt
mov
inc
test
mov
sbb
cmp
fsub
jno
push
and
aas
fwait
stos
cmp
test
cmp
retf
movs
std
xor
mov
test
fwait
call
cmp
mov
xchg
push
dec
imul
ja
das
hlt
std
xchg
mov
lahf
cmp
jp
popa
mov
cli
das
sbb
mov
mov
xchg
sbb
out
jbe
dec
jb
imul
mov
bound
pusha
mov
hlt
lods
jle
out
sbb
ficom
and
xor
sub
bound
loope
test
pop
push
xchg
inc
pop
pop
dec
or
es
jno
test
push
rcr
pop
cmp
scas
pop
shl
sti
into
mov
or
out
pop
mov
sbb
mov
xor
cli
and
shrd
paddusw
mov
xlat
cmc
in
or
daa
mov
loopne
les
fs
cmp
pop
pop
and
fist
loope
(bad)
sbb
fild
imul
int
cmp
jo
inc
jecxz
cmp
sbb
test
sub
jnp
sahf
je
in
cmp
mov
std
popf
das
xor
cmovno
push
rol
adc
scas
pusha
mov
js
add
and
sub
adc
test
test
jno
scas
sub
jbe
push
add
inc
(bad)
arpl
pop
mov
sahf
cmc
fnstenv
jmp
jbe
pop
cmc
aam
xchg
out
add
push
loope
in
lds
pushf
mov
popf
fisttp
mov
mov
call
fisubr
jnp
fincstp
xchg
mov
sbb
int
out
inc
scas
adc
sbb
enter
mov
test
pop
(bad)
pop
sub
retf
lahf
fwait
test
aas
retf
cmp
stos
xchg
cmp
inc
mov
mov
pop
(bad)
out
jb
loopne
jmp
and
lds
add
sbb
and
cwde
imul
fldenv
outs
mov
and
cdq
adc
mov
rcr
sub
inc
sub
xchg
movd
and
pop
ret
xchg
sbb
loop
test
adc
push
xor
push
test
pusha
ins
jp
sahf
leave
push
stc
add
push
stos
add
mov
mov
nop
mov
dec
sub
jmp
lods
test
mov
fiadd
repz
scas
scas
cwde
fxtract
pop
sar
mov
sbb
(bad)
(bad)
mov
pushf
cmp
mov
add
lock
mov
les
fisttp
or
repz
test
fsub
push
imul
ffreep
cli
jmp
(bad)
xchg
das
adc
sub
(bad)
mov
and
mov
dec
sbb
inc
jp
aam
movs
jbe
pop
mov
mov
cmp
jns
sbb
and
int
adc
cmps
jno
pop
sub
rol
xlat
lock
movs
dec
xchg
bound
push
cmps
sbb
push
cmc
dec
pop
(bad)
fidivr
lock
adc
lods
push
fidiv
jmp
push
in
int3
cmp
mov
xor
sbb
ror
int
mov
push
es
add
loopne
mov
xchg
jbe
loop
mov
mov
ins
leave
push
jno
test
test
jnp
sbb
jmp
sbb
push
xor
add
arpl
clc
pop
mov
jns
push
dec
dec
(bad)
sub
mov
cmp
repnz
mov
mov
cmp
mov
in
lods
mov
nop
mov
or
xchg
inc
test
jno
push
mov
jle
aaa
call
dec
inc
xor
pop
mov
inc
(bad)
jne
add
test
les
sub
or
xchg
sub
or
push
mov
jg
fisubr
leave
push
cmp
(bad)
cmp
mov
push
xchg
jg
inc
ja
inc
pop
(bad)
jmp
xor
dec
cmp
std
push
gs
dec
dec
mov
call
mov
gs
dec
out
jns
dec
sub
sar
cs
jecxz
movs
mov
xchg
push
dec
icebp
xor
in
mov
shl
cmp
movs
scas
mov
jbe
or
prefetchw
or
jns
imul
iret
push
mov
adc
jg
xor
push
sbb
mov
and
(bad)
in
pusha
das
mov
mov
call
mov
mov
xchg
xchg
mov
add
pop
inc
pop
mov
add
dec
cmp
icebp
lea
mov
adc
test
cmp
fwait
rcl
xchg
nop
lods
jg
pop
out
stos
in
fsub
jge
push
and
inc
pop
ror
pop
jmp
sub
add
mov
(bad)
mov
jne
(bad)
(bad)
jecxz
and
mov
je
inc
ret
js
jge
cmp
ror
push
cmp
(bad)
jno
test
adc
in
inc
jp
popf
sub
inc
or
sub
jnp
xor
add
(bad)
call
adc
and
push
fld
mov
dec
inc
scas
fnsave
aaa
ja
mov
or
rcl
fidiv
pop
fild
cmp
inc
ja
rol
(bad)
mov
and
mov
test
les
mov
pop
xor
popf
loop
or
inc
nop
xor
mov
gs
push
mov
pop
adc
pop
pusha
sbb
mov
fldenv
sub
add
mov
mov
js
das
clc
fcomi
mov
retf
je
mov
icebp
in
mov
sahf
push
inc
arpl
nop
imul
ror
mov
lds
lods
jmp
(bad)
xchg
js
retf
mov
push
jne
jne
nop
pop
dec
mov
mov
out
xor
cmps
push
add
sar
or
loopne
movs
(bad)
in
cld
mov
retf
nop
xlat
neg
sbb
out
arpl
or
add
ret
push
cmc
sbb
ds
ret
mov
sbb
mov
ret
xor
cmp
xchg
adc
fidiv
xchg
mov
dec
xchg
pop
repnz
sbb
mov
out
mov
(bad)
std
xor
add
jnp
xor
fidivr
mov
pushf
aas
xchg
addr16
sbb
(bad)
adc
xor
fst
retf
js
into
aad
mov
popf
or
xchg
(bad)
scas
xchg
ja
movs
in
jecxz
lea
mov
fnstsw
pop
pushf
and
jbe
sub
and
scas
cli
test
cwde
jnp
retf
jbe
pop
mov
jmp
mov
hlt
xchg
imul
push
and
and
dec
das
ins
jnp
std
xchg
mov
mov
neg
dec
mov
div
sbb
mov
xchg
das
sub
loope
jae
sahf
and
clc
sti
adc
adc
(bad)
mov
js
loopne
inc
sub
push
je
mov
mov
mov
sub
das
call
in
shl
std
and
and
jbe
int3
adc
fwait
dec
sub
ins
aam
cld
xlat
out
fwait
and
jbe
ja
sbb
iret
mov
lea
mov
pop
out
jge
cwde
loope
inc
push
add
jmp
push
pop
mov
lahf
mov
fld
fcomp
cs
pop
dec
push
jne
test
mov
pusha
sub
push
or
push
icebp
fcmovb
cmp
daa
inc
leave
pusha
into
cmp
mov
loope
jne
push
out
das
mov
jnp
push
aas
sbb
hlt
(bad)
sbb
mov
mov
mov
inc
xchg
aaa
fnstenv
xchg
mov
aam
fsub
inc
pop
pop
adc
sahf
iret
mov
(bad)
adc
pop
push
lock
lea
repnz
repnz
push
ds
nop
jecxz
add
loope
lods
loope
loop
or
cmp
in
(bad)
mov
sbb
mov
imul
jns
in
cwde
fcmovnb
and
retf
(bad)
or
retf
sti
retf
xor
rcl
into
sti
sub
mov
add
push
fcomp
xchg
adc
jl
fld
sbb
fstp
sar
inc
dec
imul
jge
mov
imul
repnz
sub
sbb
dec
mov
jno
call
and
ds
add
adc
rcl
inc
inc
mov
popf
(bad)
les
jns
sbb
lock
in
int3
loopne
and
mov
repz
cmp
test
pop
cmp
lahf
out
adc
stc
cld
outs
and
call
cmp
cs
retf
jae
imul
dec
push
fwait
out
call
pop
movs
jb
mov
aad
mov
dec
sub
aam
out
pop
nop
cwde
dec
add
xchg
push
push
sub
dec
push
xchg
clc
fs
repnz
daa
mov
jcxz
dec
cmps
or
test
pop
mov
lods
lds
jge
test
inc
mov
xor
test
jb
cld
jmp
stc
xor
mov
lods
test
adc
push
inc
mov
adc
cwde
stos
mov
dec
movs
mov
scas
jl
iret
sub
or
lahf
push
data16
jg
or
repz
mov
mov
push
loope
jne
xchg
arpl
xor
jbe
in
or
mov
mov
push
jmp
(bad)
(bad)
into
xchg
mov
xor
xor
aaa
or
nop
repz
enter
sti
adc
rcr
xchg
push
fdivr
mov
ror
(bad)
mov
int
scas
sbb
(bad)
jno
jle
adc
jle
mov
xchg
std
or
mov
cmps
jne
push
pop
aad
in
mov
jp
inc
or
dec
add
pop
lea
mov
data16
push
adc
cmp
enter
xchg
out
rcl
cmc
pusha
ins
add
mov
ins
in
mov
or
iret
out
imul
mov
mov
test
scas
in
sub
adc
push
outs
fucom
retf
rcr
xchg
cs
repz
fisubr
push
add
imul
xchg
mov
fcomp
add
(bad)
je
mov
scas
sub
mov
push
mov
adc
repz
push
cli
xchg
jle
pop
adc
jmp
aaa
pop
int
pop
cmp
std
lea
int3
cmps
fs
sub
(bad)
repnz
loope
loope
or
and
sbb
stos
inc
mov
cld
push
inc
push
jge
jmp
lahf
shr
add
sub
xor
add
xlat
jp
outs
repnz
mov
je
pop
xchg
adc
test
loope
and
(bad)
cli
push
into
xor
xor
imul
in
jmp
icebp
repnz
push
adc
stos
lods
out
in
pop
(bad)
(bad)
scas
(bad)
pcmpeqb
rol
jge
ror
inc
sub
loope
pop
mov
and
mov
cmp
push
popf
mov
push
xor
cmp
or
xchg
mov
and
mov
nop
pop
inc
es
repz
mov
push
iret
or
pop
mov
leave
push
add
or
dec
cmps
add
cmp
sub
push
pusha
in
cmp
and
dec
je
cwde
cmp
stos
jno
sbb
(bad)
(bad)
jo
and
out
aad
fsub
fiadd
sbb
cwde
lods
adc
dec
xrelease
movs
mov
(bad)
jo
out
push
enter
mov
stc
sub
(bad)
mov
xor
(bad)
aad
push
shl
cmps
sbb
sti
xchg
mov
mov
ins
jno
imul
push
pop
jne
rol
inc
cmc
push
add
mov
jbe
and
inc
push
jb
lds
movs
mov
xchg
ja
stos
jg
push
sbb
xchg
cmp
dec
call
fs
add
lahf
fcomip
std
cmps
ficom
mov
retf
in
mov
pop
push
leave
add
sub
leave
dec
mov
out
mov
ja
data16
or
sbb
ins
or
mov
ins
xchg
push
cmc
xchg
mov
arpl
xlat
push
mov
sub
loopne
(bad)
out
pop
add
loope
dec
fiadd
and
jmp
or
neg
into
adc
mov
scas
retf
ins
rcr
in
cmp
jno
or
pop
mov
stos
enter
std
psubsb
mov
js
repnz
loope
inc
bound
mov
dec
retf
mov
sub
mov
retf
aam
repnz
retf
ins
push
mov
sar
mov
leave
je
xor
add
jbe
stc
xlat
fbstp
mov
lods
jge
jp
adc
jnp
and
xchg
out
fisttp
cmp
add
pop
test
shl
or
cmps
int
es
push
(bad)
mov
mov
xor
adc
scas
je
pop
outs
movs
add
std
cld
test
xchg
mov
lods
sbb
pop
cs
clc
aam
jne
dec
(bad)
fidivr
mov
lods
add
xchg
out
loope
fld
cmp
and
in
pop
sbb
mov
nop
mov
push
popf
inc
add
movs
mov
dec
mov
mov
mov
sbb
xchg
inc
or
lds
ret
push
retf
pop
clc
xor
mov
mov
cmps
and
icebp
rcl
ret
(bad)
push
in
push
enter
and
cmps
mov
jmp
test
sbb
loop
js
push
neg
std
das
gs
fwait
mov
sbb
push
out
test
cmp
mov
push
cld
std
push
jb
dec
int3
arpl
or
hlt
jae
fdiv
jns
mov
clc
pop
out
or
stos
cdq
scas
or
(bad)
icebp
push
cli
dec
cmp
mov
lods
inc
dec
jbe
out
mov
hlt
ja
repnz
adc
inc
jl
mov
mov
xchg
das
mov
int
or
pop
out
(bad)
and
out
jne
dec
jne
adc
pop
loope
lahf
je
cmp
and
imul
inc
(bad)
add
daa
add
sbb
fst
pop
sub
mov
cmp
aas
in
rol
sahf
test
fucomip
fst
dec
popa
add
or
pop
adc
std
mov
mov
pop
fucomp
push
or
xchg
or
test
adc
outs
ret
pop
inc
and
mov
xor
dec
pushf
mov
xchg
es
dec
shr
and
movs
nop
jne
mov
push
js
int3
mov
enter
mov
inc
adc
sub
aad
js
movs
sub
push
clc
inc
mov
loopne
enter
fadd
jp
retf
jmp
addr16
jnp
nop
pop
fwait
les
ja
xor
mov
imul
sbb
outs
mov
int3
push
in
push
push
shr
cli
mov
push
dec
push
call
dec
pop
jle
pop
inc
lock
ss
shl
(bad)
fst
mov
cmps
ins
xlat
dec
stos
xchg
mov
mov
push
xor
fisub
push
cmp
imul
lock
sub
xor
push
imul
inc
repz
jle
icebp
lahf
mov
push
ret
test
xor
movs
test
cmp
mov
mov
retf
pop
aaa
pop
add
push
sub
jge
push
stc
into
dec
ins
repnz
or
scas
ss
out
jne
sub
sub
push
sub
pop
icebp
xchg
push
out
push
jno
jnp
mov
push
bound
pop
sub
sub
rcr
popa
or
mov
pop
pop
fwait
dec
mov
jne
cwde
test
xchg
push
add
xchg
movs
mov
mov
aaa
xor
lock
pop
test
(bad)
mov
add
jne
xchg
inc
jle
std
jl
in
popa
dec
push
xchg
out
jmp
push
std
pusha
ss
bound
popa
add
push
add
in
icebp
lahf
dec
lods
and
test
inc
ins
fld
std
sub
cs
sub
clc
adc
shl
push
jnp
retf
dec
ins
les
inc
sub
dec
dec
and
shl
add
mov
and
cmp
pushf
push
jg
sub
test
repz
push
ins
call
or
or
xor
scas
frstor
pop
xchg
cwde
stos
adc
mov
test
pusha
add
dec
ret
sub
loopne
gs
movs
cmc
add
jbe
adc
data16
pusha
or
pop
xchg
aam
sbb
mov
or
int
stos
arpl
out
or
int3
dec
sar
movs
pop
pop
cmp
mov
add
cmp
cwde
jecxz
popa
fcmovu
and
push
ret
pusha
ss
or
dec
(bad)
mov
mov
outs
pop
sbb
les
cmp
ret
mov
and
adc
outs
jmp
cld
push
xor
leave
in
outs
xlat
sub
ror
push
sbb
jae
fs
call
mov
add
shl
jle
sbb
adc
mov
fimul
lahf
inc
jge
aad
movs
jmp
outs
xchg
jecxz
pop
mov
ds
aaa
movs
cli
adc
mov
xlat
cdq
sbb
add
fiadd
cmp
int3
cmp
sub
es
loopne
xchg
bound
test
mov
mov
xchg
icebp
inc
pop
jno
push
or
mov
call
mov
cmp
ret
jg
cld
rcl
add
push
arpl
push
cdq
or
arpl
sbb
lahf
sbb
scas
and
stc
loopne
cld
xchg
dec
adc
sti
xor
ret
loopne
and
jnp
adc
clc
(bad)
movs
mov
adc
ret
mov
push
xor
lods
xor
jbe
lds
sub
test
sbb
xchg
(bad)
pusha
mov
in
aam
dec
dec
push
test
sub
mov
jne
and
adc
sar
adc
test
retf
call
push
sub
mov
loopne
push
out
bound
push
ret
dec
mov
cmp
inc
fsubrp
fist
sub
gs
fisubr
rcl
je
psubq
or
inc
xchg
mov
lock
inc
add
xchg
and
ja
sub
(bad)
or
(bad)
fisubr
mov
jnp
(bad)
icebp
dec
and
inc
lods
retf
ret
cld
lods
test
xor
pushf
hlt
add
pop
dec
pop
scas
add
mov
mov
or
mov
add
sbb
cmp
dec
imul
and
or
(bad)
xchg
add
mov
cwde
ficomp
mov
mov
mov
xchg
mov
sbb
(bad)
xor
pop
lea
xor
(bad)
into
out
pusha
push
sbb
retf
fadd
stos
addr16
xchg
jg
and
ja
sub
cmp
cmp
pop
js
movs
enter
leave
jle
into
xchg
into
inc
sub
outs
hlt
in
pop
cmp
fist
lock
xchg
push
inc
xchg
js
mov
xchg
push
std
or
sti
popa
add
push
(bad)
dec
or
add
ins
or
push
xchg
add
jbe
cmps
jne
mov
ss
xchg
mov
enter
cmp
aam
(bad)
lods
jno
repnz
imul
or
cld
jp
adc
add
mov
cmp
ins
addr16
(bad)
in
or
dec
fmul
aad
fcomip
and
jecxz
jp
and
cmps
pop
push
and
mov
add
adc
jno
mov
push
push
sbb
jp
(bad)
jae
nop
aam
inc
(bad)
arpl
push
or
inc
cmp
sbb
outs
ins
arpl
fdivr
fisub
stos
xchg
dec
push
add
and
inc
add
aaa
mov
sbb
lods
je
xchg
inc
xor
leave
sbb
adc
retf
dec
fmulp
(bad)
fs
sbb
shr
iret
test
(bad)
in
jb
fcom
in
and
cmp
add
xchg
and
and
mov
stc
or
pop
imul
adc
outs
jmp
xchg
rol
adc
repz
and
xchg
sahf
inc
popf
test
jnp
leave
jg
ss
jnp
xor
push
sub
adc
ror
loopne
adc
sbb
pop
leave
cmc
xchg
jnp
ret
mov
adc
icebp
sub
int3
sbb
adc
dec
nop
mov
sbb
sub
mul
sti
mov
mov
mov
cs
adc
or
or
pop
push
add
lea
addr16
sbb
repz
push
jmp
jl
xor
retf
pop
movs
(bad)
lds
cmp
cdq
cmps
mov
sub
out
dec
or
movs
scas
mov
pop
aaa
and
scas
inc
dec
or
mov
call
adc
jle
or
jnp
mov
popf
dec
mov
dec
outs
out
inc
jns
outs
push
jmp
pop
scas
mov
push
(bad)
jmp
pop
jle
add
repnz
sub
popf
std
rdtsc
lods
in
sbb
rcr
xor
test
sti
cdq
shl
cld
std
adc
fdiv
rcl
adc
ror
lds
sbb
push
and
mov
daa
imul
push
mov
sbb
in
jnp
cwde
(bad)
jecxz
add
(bad)
push
dec
cmps
scas
cdq
sbb
popf
jbe
aas
or
stos
inc
jle
(bad)
int
push
aas
je
jmp
mov
fwait
test
mov
clc
push
mov
xor
lock
shl
or
lds
sub
mov
xchg
pop
mov
inc
mov
cwde
mov
sbb
ins
sbb
pop
js
sub
cmp
mov
outs
fadd
test
das
sub
dec
in
dec
je
imul
jl
or
pop
scas
test
inc
jns
nop
ins
cmps
je
stos
xchg
adc
or
jecxz
push
mul
outs
dec
dec
push
sbb
adc
shl
mov
sbb
sahf
jp
and
js
xchg
fcmovbe
adc
and
xchg
mov
xchg
in
in
push
jp
es
aas
or
arpl
(bad)
sti
stos
inc
movs
xor
sbb
cli
pushf
mov
icebp
mov
cmc
jnp
jae
clc
adc
and
arpl
and
aas
pop
xlat
aam
jmp
loop
add
cdq
mov
push
add
mov
push
ss
out
ret
mov
(bad)
or
enter
jmp
test
mov
mov
mov
rcl
iret
mov
add
push
and
mov
pusha
repnz
jo
dec
mov
outs
test
xchg
outs
sub
push
(bad)
clc
or
ins
mov
les
pop
add
and
bound
adc
repz
movs
pop
mov
mov
sub
retf
out
dec
lahf
xor
add
aam
int3
in
jno
out
icebp
rep
sti
jae
or
sub
out
jno
pushf
(bad)
jp
or
sub
sbb
imul
sub
out
jmp
dec
mul
in
loop
push
push
jp
out
retf
cmp
test
into
lock
push
mov
or
stc
loop
in
add
sti
mov
or
mov
pop
add
dec
mov
stos
inc
adc
arpl
push
aas
inc
sub
or
cmp
pop
and
aam
lock
repnz
cmp
sub
jle
in
jle
mov
mov
sbb
dec
dec
int
mov
in
cmp
sub
arpl
cs
xor
sub
out
(bad)
imul
je
ret
add
mov
ss
inc
test
jecxz
sbb
pop
lahf
movs
xchg
shl
lods
mov
dec
push
sahf
fwait
arpl
jecxz
loopne
inc
adc
cmp
cmp
sbb
or
popf
arpl
xchg
push
pop
sbb
ret
mov
test
mov
test
aas
in
lods
cmps
or
call
xchg
js
add
aas
push
clc
leave
inc
adc
jl
ins
xchg
out
inc
jo
jns
test
ins
sbb
pop
cmps
call
add
cdq
and
dec
sub
mov
xchg
mov
clc
sbb
js
fst
sbb
aad
dec
mov
call
push
xchg
mov
(bad)
mov
leave
xchg
jbe
push
jmp
and
cwde
test
loope
js
ja
sbb
lahf
aam
pop
mov
jns
test
(bad)
stos
xlat
fcom
mov
bound
push
push
xchg
cli
dec
retf
leave
xchg
mov
aam
sbb
shl
not
or
dec
xor
shl
mov
and
cs
pop
mov
dec
cmps
sub
(bad)
sub
mov
and
aaa
pop
cli
mov
jb
addr16
cmp
pop
add
mov
daa
sbb
sbb
das
sti
pop
bound
ret
cwde
and
mov
add
rcl
add
xor
inc
into
aas
dec
adc
test
leave
or
enter
sbb
dec
retf
rol
clc
movs
fdiv
mov
addr16
and
in
mov
pop
inc
jmp
jns
dec
jg
loop
mov
ret
xchg
iret
or
retf
jb
cwde
mov
aas
inc
inc
(bad)
or
pop
fwait
mul
imul
xchg
out
mov
fdivr
inc
inc
stos
mov
adc
push
and
popf
xchg
mov
xchg
les
movd
dec
or
pop
movs
and
xchg
into
fs
loop
pop
and
inc
mov
rcl
cmp
adc
push
or
loope
stc
jb
lea
mov
xchg
jp
inc
into
fwait
sbb
je
loop
mov
and
add
popa
movs
inc
les
je
jns
mov
dec
pop
mov
pop
jbe
sub
into
pop
imul
out
jbe
or
jae
xchg
adc
cmp
arpl
or
add
mov
cmp
ret
test
push
sub
and
pop
imul
or
cmps
adc
sub
sti
push
dec
clc
push
pop
push
xchg
fisttp
push
cmp
mov
in
shl
test
xor
icebp
jne
pop
mov
aas
inc
push
pushf
pop
imul
cmp
xor
inc
aam
fwait
sub
cmp
outs
test
inc
dec
jp
mov
jge
mov
vpmaxub
repnz
mov
adc
repnz
repnz
push
out
icebp
push
cwde
pusha
adc
inc
mov
xchg
hlt
xor
sub
push
inc
xor
mov
ss
nop
add
ret
cwde
int3
aaa
sbb
mov
das
mov
mov
sahf
repnz
test
test
ret
int
add
aad
cli
mov
fwait
pop
jmp
xchg
adc
mov
push
pop
sahf
inc
push
inc
in
push
jp
loopne
retf
cmp
jmp
in
mov
push
xlat
jns
out
and
sbb
lods
clc
jb
add
(bad)
pop
mov
pushf
in
sahf
add
ins
xlat
xchg
icebp
xchg
sbb
leave
cmp
mov
shl
xlat
push
mov
or
mov
dec
out
jp
jp
pop
frstor
repz
inc
mov
xchg
test
dec
jecxz
xchg
add
or
jmp
js
xor
fld
sar
leave
xchg
mov
xor
adc
retf
push
hlt
lahf
in
in
ficom
jg
rcr
adc
shr
dec
imul
call
mov
cmp
inc
xchg
imul
pop
sar
pop
(bad)
scas
out
jo
movs
in
mov
ins
stos
push
sbb
icebp
imul
adc
test
jl
mov
aam
movs
cmp
iret
or
(bad)
inc
cmp
enter
and
xchg
inc
lahf
in
mov
dec
js
enter
mov
and
adc
pop
pop
loop
dec
jmp
mov
adc
xor
add
mov
ja
rol
mov
mov
div
test
cdq
enter
imul
call
pop
xor
jns
jae
(bad)
lea
jmp
test
sub
pop
mov
pop
inc
and
(bad)
inc
stc
pop
xchg
sti
xor
call
es
out
and
lods
jge
xchg
aas
mov
daa
dec
pop
(bad)
and
jmp
jge
loopne
dec
(bad)
repz
jb
inc
inc
jmp
mov
out
adc
dec
dec
dec
xor
xchg
out
xor
out
ins
pop
ds
hlt
shl
inc
test
and
jmp
mov
dec
movs
push
rcl
lds
test
inc
push
add
jno
addr16
jmp
jmp
jp
dec
test
out
repnz
lds
mov
sub
enter
xchg
stos
jo
cld
dec
sub
sub
ja
clc
or
imul
mov
xor
ja
push
inc
(bad)
enter
outs
xchg
jae
in
scas
ret
pop
adc
aam
loope
jle
jg
daa
add
ret
pop
pop
xor
mov
mov
lods
fs
cli
ds
popf
xchg
fisttp
fisubr
pushf
mov
nop
mov
or
mov
inc
out
mov
clc
fidivr
fs
and
out
repnz
inc
test
push
bound
bound
lods
jle
cli
mov
(bad)
push
dec
mov
call
test
push
cmp
sub
sub
cs
jbe
pop
iret
sahf
fsub
(bad)
cwde
cmp
pop
div
sub
pop
pop
inc
jmp
pop
xlat
lods
dec
push
mov
out
mov
dec
repnz
ja
mov
test
push
out
cs
rcl
sub
outs
add
or
jo
fmulp
nop
scas
in
ss
fcomip
push
mov
mov
out
and
sub
es
mov
xchg
aad
mov
aad
xor
add
jg
les
inc
push
jmp
lahf
jno
lahf
ss
mov
(bad)
xor
dec
or
push
mov
or
push
add
push
xchg
adc
movs
mov
jecxz
(bad)
sub
xor
jle
mov
ror
and
pop
mov
pop
(bad)
out
jge
sub
and
mov
xchg
push
mov
movs
cmps
push
push
or
inc
push
pop
pop
jmp
pop
mov
scas
dec
inc
ins
and
call
icebp
out
sub
pusha
push
imul
fisttp
mov
jns
(bad)
hlt
js
sbb
mov
call
mov
mov
jge
retf
jno
pop
aaa
daa
mov
lds
repz
sbb
popf
ror
mov
out
dec
cwde
(bad)
in
(bad)
test
(bad)
loop
pop
imul
lds
xor
(bad)
mov
std
sub
cli
cdq
pusha
fmul
push
push
and
dec
ficom
inc
dec
push
(bad)
mul
in
lahf
mov
push
or
(bad)
xchg
out
sti
imul
and
mov
and
std
test
mov
cdq
and
and
cmp
rol
repnz
movs
cmp
and
cli
fwait
xor
pop
mov
mov
retf
rcl
ds
add
or
jle
loopne
into
ss
mov
in
add
dec
mov
outs
fst
ror
call
mov
dec
xor
cmc
loop
rcr
outs
sub
je
push
push
pand
stc
xchg
xor
in
push
mov
dec
xor
stos
sbb
int3
rcr
jmp
lsl
dec
call
jns
xchg
mov
mov
cmp
mov
imul
dec
call
push
dec
mov
jbe
mov
push
cmps
mov
nop
sbb
cs
inc
or
xor
pop
or
or
lods
(bad)
jge
sbb
mov
mov
loope
pop
mov
ins
xlat
sbb
ss
scas
add
aaa
aaa
sub
(bad)
jno
std
pop
es
ret
sti
xor
dec
loopne
add
inc
or
sub
mov
sub
inc
sub
cmp
(bad)
adc
jmp
es
in
mov
call
and
out
call
sub
leave
cmps
ficomp
mov
aas
mov
mov
pushf
daa
pop
xchg
pop
pop
ds
aaa
push
xchg
test
cmc
add
jmp
stc
and
xchg
rcl
psubusw
xchg
push
rcr
xchg
sbb
inc
iret
jmp
loop
js
mov
mov
es
arpl
sbb
dec
cmp
loop
cmp
add
jg
(bad)
push
aas
add
cmpxchg
inc
and
scas
bound
lea
dec
sbb
mov
or
movs
retf
and
sbb
std
cmp
mov
cmp
or
pop
repnz
out
out
add
mov
or
pop
je
jmp
daa
rol
adc
bound
jnp
ins
dec
sub
stos
xchg
nop
lods
and
jbe
ret
pusha
adc
or
stc
repz
jae
cmp
rcr
xchg
sbb
lea
sub
inc
mov
ret
jb
imul
in
imul
sub
ficomp
retf
or
add
and
dec
loopne
xchg
sub
sbb
fbld
dec
(bad)
and
push
dec
push
sub
adc
scas
in
or
dec
xchg
bound
sub
cmc
lds
pop
(bad)
in
fcmovnu
test
test
jns
cld
cmp
bound
jle
js
shr
in
cmp
inc
loopne
or
mov
scas
mov
mov
jmp
mov
fs
sbb
cdq
adc
pop
je
sub
jp
sub
adc
pop
(bad)
jae
xor
push
inc
push
add
fwait
xchg
jle
pop
mov
mov
xor
and
inc
mov
fdivr
sub
int3
test
aas
cli
(bad)
loope
arpl
push
js
scas
mov
lock
pop
inc
xchg
sbb
jmp
mov
mov
(bad)
sub
sub
push
inc
das
xlat
push
movs
mov
ja
sub
sbb
scas
dec
dec
pop
pop
(bad)
cdq
pop
jne
pusha
sbb
fsubr
repnz
pop
mov
mov
movs
sbb
jg
mov
sub
fdivr
cli
add
xchg
mov
lea
je
xor
int
sub
adc
pop
sub
pop
jmp
test
add
add
sub
or
dec
sti
mov
call
pop
out
fadd
jl
add
repz
xor
addr16
mov
mov
mov
mov
push
mov
xchg
fimul
cmps
retf
out
mov
hlt
xchg
cs
mov
push
sub
ja
mov
cmp
sahf
les
mov
push
hlt
sbb
push
adc
(bad)
loop
ret
adc
loop
push
cmps
xchg
add
call
stc
xor
shr
mov
mov
fbld
add
mov
data16
jae
frstor
pop
mov
adc
and
dec
lahf
xor
je
xor
xor
fimul
test
daa
leave
nop
add
ret
jl
cmp
cmp
retf
xor
sbb
pop
mov
or
mov
push
call
sbb
xchg
pop
jle
aas
inc
mov
out
sbb
outs
cwde
mov
imul
pop
cld
mov
ret
and
xor
int3
stos
imul
cmp
retf
dec
pop
test
retf
mov
test
jnp
outs
retf
and
inc
nop
stos
dec
or
add
sbb
sub
dec
repnz
mov
js
call
xchg
nop
cmc
js
xor
out
(bad)
jbe
cmp
sbb
pop
adc
xchg
(bad)
jae
sbb
aad
lds
dec
mov
(bad)
cmp
xlat
mul
(bad)
mov
cli
sub
jmp
jp
call
(bad)
jg
jb
lock
jb
data16
call
fisubr
xlat
iret
sar
adc
jo
jb
jge
jle
or
pop
cdq
hlt
nop
mov
or
movs
imul
dec
lahf
or
inc
jno
push
push
bound
cmp
dec
(bad)
adc
jmp
fist
rcl
jle
sub
cmps
and
jbe
mov
dec
(bad)
aam
enter
fmul
jp
xchg
ss
adc
jb
or
cmp
int
cwde
loop
and
push
loopne
aad
adc
fisttp
in
dec
push
sbb
mov
out
adc
lock
xchg
je
dec
sbb
sub
scas
in
sbb
sub
jmp
movs
shl
sub
xor
int3
mov
mov
add
ror
ss
xchg
jbe
xlat
mov
in
inc
and
inc
sub
mov
int3
jmp
mov
mov
ret
scas
jmp
jl
pusha
sbb
pop
das
pop
pop
jns
pop
cmp
sub
inc
out
icebp
lahf
jge
pusha
mov
fnstsw
push
(bad)
inc
fnstsw
ins
(bad)
fstp
into
idiv
inc
das
imul
sub
out
data16
les
fiadd
and
aad
mov
outs
aad
sbb
or
ins
mov
inc
lea
xor
inc
jg
les
or
jmp
cmps
and
data16
xchg
inc
in
xor
aad
xchg
dec
(bad)
fld
popf
xor
jle
shr
jmp
movs
fistp
inc
dec
push
movs
ins
aas
sar
jo
jae
rcr
pushf
inc
dec
mov
ins
lahf
mov
xor
imul
and
adc
leave
retf
iret
fadd
push
xchg
inc
mov
repnz
mov
lock
cmp
call
push
nop
inc
stos
int3
sahf
and
push
xor
mov
jno
(bad)
dec
pusha
cli
adc
sub
mov
inc
gs
sbb
sbb
addr16
mov
xor
push
sbb
inc
pop
mov
mov
lock
aas
or
jmp
xor
repz
les
mov
lea
and
inc
push
pop
sub
pop
fst
pop
mov
das
out
out
sbb
jnp
xchg
in
mov
dec
mov
daa
push
(bad)
in
mov
xor
sbb
add
add
mov
mov
shl
repz
sahf
push
addr16
cmp
jo
iret
call
cmp
xor
sub
jo
mov
sbb
jge
pop
sar
cmc
add
out
cs
call
push
sub
rcr
cvtps2pi
movs
jbe
je
add
repz
push
inc
jl
push
jmp
mov
popa
clc
adc
pusha
and
sub
(bad)
rcr
retf
mov
push
xchg
aad
fstp
sub
(bad)
test
add
jns
loope
fsubr
addr16
mov
mov
cld
jle
(bad)
and
or
(bad)
icebp
xor
mov
xchg
adc
xchg
ins
es
ins
add
fwait
mov
sub
fstp
sbb
ficom
movs
iret
sub
sbb
xchg
jne
pop
in
sbb
push
out
rol
lock
test
icebp
stos
fmul
mov
pop
in
dec
scas
sbb
fld
add
and
rcl
out
in
mov
push
cmc
(bad)
sbb
adc
inc
es
adc
lahf
inc
xchg
test
dec
(bad)
jns
shr
out
ret
int3
(bad)
inc
shl
aaa
sbb
call
fs
mov
sbb
and
inc
pop
cdq
mov
ret
mov
mov
dec
xor
add
ret
rcr
gs
out
sub
add
and
gs
mul
add
(bad)
out
xchg
mov
clc
cmp
sub
push
ins
mov
inc
xlat
sti
arpl
std
cmp
adc
inc
push
jge
push
cmp
into
sahf
dec
pop
jle
dec
mov
aas
cld
ins
out
cli
xchg
hlt
lock
ficomp
fisttp
fisub
sbb
sbb
out
scas
dec
sbb
mov
repz
arpl
push
xor
nop
xor
pop
xor
ret
aam
and
pusha
test
aas
mov
stc
ret
jl
mul
jg
cli
add
scas
jo
in
and
pop
das
sti
retf
push
and
rcl
adc
imul
jg
fs
dec
cs
fsub
xchg
hlt
xor
adc
(bad)
cld
sbb
sar
jle
or
jnp
cmp
push
out
fidiv
stc
push
sub
jge
adc
pop
outs
das
jno
pop
mov
mov
mov
sbb
add
pop
mov
mov
loope
mov
sahf
xchg
or
inc
mov
xor
push
lock
cli
push
mov
mov
test
add
mov
dec
cdq
inc
out
xchg
and
lahf
bound
fwait
cmc
test
in
inc
(bad)
jg
xchg
imul
pop
dec
hlt
call
pop
cmp
stos
xchg
daa
pop
add
fnstenv
mov
mov
xchg
xor
aas
and
cmp
sub
cs
push
dec
and
jmp
scas
jecxz
arpl
mov
xchg
xor
in
xlat
push
jmp
cmp
pop
popf
fld
mov
movs
sub
sub
push
lahf
shl
loopne
sub
cmp
xchg
scas
sbb
or
js
retf
cmc
cwde
daa
sbb
jnp
push
push
ss
out
cmp
bnd
cmp
lods
cmp
add
jne
cmp
shr
movs
mov
out
add
xor
sub
dec
es
inc
jae
div
sub
adc
pop
adc
ins
sub
es
sar
mov
xor
movs
push
sbb
(bad)
sub
add
je
int3
imul
bound
dec
scas
cwde
jo
pop
into
jne
pusha
nop
push
or
dec
test
scas
stc
push
push
call
fwait
test
cld
xor
arpl
pop
call
add
cmc
mov
cmp
xchg
jmp
push
(bad)
mov
jge
sub
pusha
sub
xlat
mov
fnsave
dec
push
out
xchg
fsubr
pop
sahf
(bad)
xchg
adc
fnsave
test
cwde
jae
xchg
aam
aaa
sbb
or
mov
test
arpl
add
les
jbe
je
mov
es
and
(bad)
mov
ja
pop
or
push
outs
(bad)
nop
(bad)
leave
dec
adc
push
xor
adc
pop
push
xor
hlt
mov
imul
mov
push
cmp
jmp
dec
xchg
cld
outs
push
inc
mov
jmp
ins
dec
fild
jge
xchg
xchg
add
mov
cdq
dec
popa
mov
loope
xor
(bad)
bound
or
pop
arpl
scas
stos
jae
pop
xchg
lods
scas
sbb
jno
imul
pop
(bad)
fisub
int3
test
shl
adc
int3
or
aad
add
nop
jp
call
movs
adc
or
adc
jmp
pop
xor
addr16
mov
sub
ins
cdq
rol
in
arpl
out
mov
test
call
es
xchg
or
je
jmp
fiadd
sbb
mov
jmp
mov
inc
jmp
adc
push
fnstcw
sar
mov
rcr
retf
(bad)
test
lods
or
mov
mov
dec
scas
(bad)
sbb
loopne
div
pop
mov
mov
sbb
pop
pop
xrelease
mov
pop
dec
outs
mov
jae
mov
arpl
mov
push
and
add
(bad)
pop
sub
pop
mov
jnp
pushf
jmp
jno
inc
mov
pop
popf
dec
and
ins
sub
mov
inc
ror
dec
test
ret
push
sbb
mov
push
adc
mov
push
sub
(bad)
dec
popa
leave
clc
jp
mov
cmc
pusha
fnstcw
loopne
pusha
js
shl
inc
mov
fisubr
int
mov
scas
add
es
or
out
add
enter
fsub
mov
shl
sbb
rcr
jae
push
or
dec
in
mov
lods
inc
test
sbb
pop
jns
mov
(bad)
lahf
nop
inc
and
push
inc
mov
jmp
xchg
xchg
imul
scas
adc
aaa
jno
test
adc
retf
mov
xor
or
cmp
retf
pop
loop
sub
and
ins
push
sbb
push
stos
mov
add
sub
test
push
repz
in
xor
cwde
or
retf
adc
call
push
aad
js
adc
inc
or
das
mov
out
jbe
dec
shr
sub
int
jmp
and
clc
cmc
and
xor
in
shl
scas
lock
mov
call
mov
sar
push
inc
out
jmp
pop
lahf
stos
shl
lea
pop
int3
pop
loop
sbb
dec
inc
and
mov
add
rol
dec
icebp
xchg
xor
ins
dec
inc
xlat
xor
out
pop
bound
fwait
mov
xchg
cdq
mov
jbe
sub
out
sub
mov
aas
lock
inc
push
enter
pop
pop
ret
das
mov
popa
popa
push
mul
fwait
adc
mov
push
or
inc
cmc
sbb
jmp
inc
call
mov
xor
mov
and
cmp
mov
aam
sub
lahf
repz
jmp
adc
shl
fwait
int
push
popa
out
adc
cmp
or
call
test
inc
pushf
mov
ret
bound
adc
push
pusha
adc
push
inc
xor
fcom
test
or
inc
test
and
inc
adc
retf
xor
dec
(bad)
enter
out
adc
cmps
test
or
(bad)
pop
push
xlat
jge
into
add
jne
xor
addr16
mov
das
hlt
or
jmp
mov
call
sahf
enter
or
and
adc
es
dec
clc
inc
adc
pop
jns
cmp
cdq
cmp
add
(bad)
or
jg
retf
cmp
out
push
aad
or
jecxz
push
lods
test
pusha
pop
and
jne
push
out
repz
cmc
sub
(bad)
arpl
mov
lods
fdivr
cmps
inc
dec
icebp
sbb
and
jge
cmp
out
imul
les
scas
inc
sub
jmp
mov
xchg
shr
rol
inc
xor
nop
ror
adc
std
mov
cmps
and
movs
xchg
jge
sub
push
ins
stc
aaa
test
add
sahf
xor
sub
xchg
mov
ins
(bad)
mov
sub
push
xchg
test
lods
dec
mov
sbb
or
xchg
mov
sbb
in
fbstp
jmp
mov
shl
pop
inc
mov
ins
in
loop
lods
sub
in
pop
cld
dec
add
add
sub
aam
add
int
jns
daa
jb
ins
jmp
(bad)
leave
adc
mov
or
std
add
adc
in
ret
fwait
pop
lods
mov
mov
lods
cmc
dec
push
inc
icebp
xchg
dec
cmc
mov
sub
add
into
stos
dec
dec
out
jmp
test
into
fcom
js
dec
sbb
repz
sub
dec
loope
aam
jne
sbb
lahf
jbe
in
mov
adc
push
hlt
loop
arpl
(bad)
jne
pop
sbb
inc
mov
outs
das
hlt
repnz
jge
fdivr
push
sub
push
int3
cld
push
leave
sbb
and
enter
push
and
leave
dec
ret
test
pop
adc
inc
cmc
ret
xchg
mov
and
dec
pop
(bad)
jecxz
gs
and
fist
ficomp
fwait
in
sbb
sbb
bound
or
xchg
cmps
mov
lds
out
adc
fist
into
mov
xchg
mov
sar
cmp
mov
and
rcr
dec
call
leave
jmp
(bad)
jne
pop
std
xor
mov
(bad)
(bad)
jmp
and
pop
pop
cmp
es
mov
or
aaa
sbb
ins
mov
test
sbb
enter
inc
lahf
ret
push
out
iret
fdivr
jg
call
push
shr
pushf
mov
push
mov
push
call
push
jmp
mov
gs
adc
adc
(bad)
fadd
jp
xor
xor
std
cdq
test
inc
mov
xchg
mov
lahf
mov
ja
mov
jmp
stc
cmps
xchg
lods
jnp
stos
jae
retf
les
jae
aad
sbb
ret
stos
push
pop
out
or
cdq
in
sar
mov
shr
push
xchg
data16
sub
mov
add
out
aas
fdiv
pop
jno
dec
push
cmc
sub
leave
mov
sahf
mov
addr16
fwait
xor
nop
cmp
rol
push
pop
test
das
or
rcr
pop
push
retf
ins
imul
or
loop
in
loopne
add
lahf
stc
and
gs
fs
scas
mov
mov
xor
adc
inc
and
adc
gs
mov
imul
mov
mov
fidivr
addr16
push
ins
int
fwait
xchg
adc
xchg
aas
push
cmp
fcmovne
int
rcr
sbb
cmp
dec
sahf
jns
sbb
clc
outs
pop
stc
add
popa
das
add
inc
nop
mov
sbb
leave
call
fdivr
pop
imul
arpl
lods
lds
push
daa
mul
inc
outs
and
mov
js
leave
sbb
jne
imul
jl
jae
push
inc
xlat
push
mov
imul
inc
out
jb
and
and
fcmovbe
mov
mov
jb
cmp
ja
mov
lds
inc
sbb
(bad)
faddp
and
dec
scas
call
dec
mov
jmp
inc
mov
ret
mov
inc
cmp
cmc
mov
or
adc
scas
push
cwde
inc
or
in
(bad)
int
sub
movs
movs
daa
int3
daa
rcl
repnz
fidivr
stos
imul
adc
js
lahf
cld
test
sub
cld
jmp
xor
pop
pusha
aad
jle
pop
dec
inc
xchg
mov
mov
aas
add
stc
scas
mov
lds
(bad)
pop
push
xchg
lds
fdivr
mov
cmp
fstp
adc
iret
mov
stos
push
les
pushw
jmp
cmp
jmp
test
cmc
leave
cld
out
mov
inc
dec
or
jnp
into
sub
xor
in
push
mov
xchg
stos
paddw
mov
push
mov
shl
fld
dec
or
and
xchg
add
cld
ins
in
leave
mov
adc
mov
sub
jno
mov
xlat
int
pusha
mov
retf
cwde
outs
mov
xchg
(bad)
adc
mov
shr
mov
and
inc
jb
inc
jl
into
jge
out
cmp
repnz
dec
fwait
pop
and
mov
(bad)
sbb
push
(bad)
mov
mov
sbb
pop
mov
mov
call
adc
aam
fwait
jae
pop
cmp
das
or
fild
cmp
loope
arpl
mov
ficomp
adc
jmp
nop
shr
inc
xor
push
inc
arpl
and
add
cmp
les
shl
pusha
lods
jae
in
jne
std
leave
js
nop
cmp
push
gs
ret
jbe
xchg
pop
test
inc
fst
loop
outs
pushf
fwait
movs
pop
fs
shr
jp
inc
mov
and
add
lahf
std
mov
push
es
inc
dec
adc
cmp
int
xor
mov
add
sub
mov
rol
je
sar
in
mov
and
inc
aad
js
or
jp
dec
movs
adc
mov
xchg
out
jle
shr
xchg
test
push
loopne
push
mov
xchg
ret
xchg
je
not
ret
dec
fcmovbe
imul
mov
cmps
test
sbb
ss
das
cli
cmc
dec
in
jo
das
in
or
sbb
xor
mov
jbe
push
mov
sahf
in
xor
sub
in
sti
inc
jecxz
mov
push
sub
mov
mov
call
addr16
movs
fwait
ja
and
sbb
loope
sti
pop
cmp
call
nop
mov
mov
mov
es
gs
int
rcl
jnp
fmul
movs
fwait
mov
add
ins
fldenv
shl
in
push
xor
mov
movs
in
jnp
sbb
retf
sub
adc
adc
mov
add
inc
xor
jb
xor
sbb
xor
push
das
jecxz
mov
mov
es
jmp
and
clc
inc
push
fyl2x
push
add
ret
pop
arpl
test
loop
adc
bound
xor
push
fstp
stc
jns
mov
rol
test
jns
mov
push
sub
sub
sbb
call
xlat
mov
push
mov
push
hlt
adc
mov
jp
(bad)
push
xor
in
lods
cdq
and
(bad)
mov
xor
fcmovnu
jp
outs
mov
dec
sub
jns
cwde
add
mov
pop
daa
push
bound
adc
pop
ror
pushf
fcmovbe
std
xor
or
outs
cmp
stos
push
imul
jmp
xchg
or
lock
xchg
mov
stc
jo
xor
add
xchg
aas
lods
cmp
pop
push
xchg
repnz
add
sub
jae
lods
xchg
fsubr
test
push
sbb
dec
xor
dec
jns
mov
hlt
push
and
add
cmps
aas
jns
int3
jmp
or
or
nop
cld
or
lods
aad
xchg
mov
xchg
xchg
mov
cmc
xchg
movs
and
jo
push
push
or
and
or
cmps
xor
push
aas
(bad)
lea
or
jmp
pop
push
jno
dec
push
fimul
lock
mov
hlt
pop
jno
cmp
and
xchg
and
inc
mov
mov
fist
push
jae
mov
fsub
dec
mov
and
dec
stos
cdq
retf
xlat
or
sahf
aas
not
sbb
cmp
(bad)
xor
pop
pop
pushf
repz
mov
push
mov
cmp
xchg
add
(bad)
jge
jge
fisttp
test
xchg
sub
pushf
dec
(bad)
push
pusha
fsub
adc
sub
xlat
jno
cmp
xchg
les
jg
push
push
aas
adc
add
jno
push
hlt
push
xchg
or
repz
gs
retf
jb
mov
iret
dec
jge
lods
pop
inc
cdq
xchg
outs
scas
pop
fisttp
cmp
dec
xchg
and
sbb
push
outs
dec
pop
dec
and
je
mov
xor
rsm
mov
and
push
mov
inc
sub
cli
cdq
into
jb
in
jo
pusha
cld
mov
int3
movs
int
popa
inc
xor
fadd
jae
test
sbb
mov
int
std
fcmovne
stos
in
or
cwde
test
mov
sbb
push
in
sub
cmp
pop
add
mov
push
pop
pop
adc
xchg
inc
xchg
xchg
add
or
lock
movs
mov
pop
and
imul
lds
dec
enter
cdq
or
dec
icebp
div
adc
mov
inc
dec
adc
jo
or
xor
leave
rol
sub
mov
cld
ins
adc
xor
cdq
ja
ret
je
and
test
inc
sub
or
sbb
test
test
in
sbb
imul
fstp
push
jecxz
fwait
inc
mov
fstp
lods
iret
repnz
jo
dec
jb
dec
rol
iret
enter
shl
push
cmc
shl
cmp
adc
int3
mov
pop
sub
fst
out
scas
bound
cmps
cmp
in
stos
loop
(bad)
rcr
sti
lods
fcomp
push
xchg
outs
stos
aaa
aam
fisubr
movs
push
jae
outs
test
fbld
push
sbb
xchg
loopne
dec
ins
(bad)
cmc
test
test
(bad)
mov
shl
ds
(bad)
retf
in
cli
inc
ror
in
(bad)
pop
loop
dec
xchg
dec
jmp
mov
cmp
add
lods
sbb
mov
cmp
scas
scas
cmps
sub
and
adc
sbb
fist
adc
jb
pop
pop
lahf
jge
dec
imul
jmp
or
mov
push
adc
repz
inc
mov
xor
push
pop
and
and
cwde
mov
mov
mov
push
loop
xor
mov
fild
sub
mov
data16
bound
xchg
pop
inc
loope
retf
stc
call
mov
xor
push
int3
cmps
clc
into
aad
bound
repz
mov
movs
pusha
xchg
das
shl
ror
fisubr
and
test
dec
neg
dec
jae
les
clc
ds
invlpg
and
lods
imul
push
fwait
lea
or
mov
fild
jge
add
(bad)
cmc
int
addr16
je
or
sbb
cmp
push
retf
jns
fucomip
(bad)
pusha
vsubps
(bad)
xchg
lds
lock
xor
inc
pop
jl
ss
int3
mov
and
lea
aaa
push
in
es
ins
(bad)
push
fst
cmps
jl
cmp
mov
icebp
mov
jb
mov
cdq
pop
ficom
arpl
mov
jl
test
pop
bound
push
and
cmp
xchg
xor
and
shl
mov
dec
bound
pop
push
ins
rol
cmp
jns
fmul
sub
sbb
call
pop
jno
push
xlat
dec
jp
inc
xor
adc
in
add
fsub
jp
retf
adc
movs
or
in
shl
mov
out
pop
dec
mov
cmp
in
sub
and
dec
mov
adc
ss
movs
test
add
mov
in
or
ins
les
xor
sub
xor
add
adc
cmp
int3
mov
test
mov
shl
dec
mov
cmp
jge
sbb
call
pop
jns
pusha
or
push
es
shl
popa
dec
sub
nop
push
mov
mov
dec
xor
das
and
loope
clc
add
inc
scas
ins
aaa
jmp
aas
out
sti
pop
pop
out
dec
mov
xchg
dec
(bad)
je
out
inc
out
repz
sahf
stos
popf
test
retf
push
movs
mov
icebp
int
loop
sub
or
movs
jbe
fist
sub
repnz
in
and
in
mov
int3
fisub
add
inc
xlat
push
sub
(bad)
and
add
jmp
(bad)
sti
inc
sbb
jnp
adc
fisttp
push
ins
inc
out
mov
fidivr
and
add
cmp
jae
add
outs
mov
stc
jmp
push
mov
dec
imul
int3
mov
mov
(bad)
pop
imul
mov
fst
test
jno
inc
pop
iret
push
jns
inc
call
outs
out
icebp
sti
ins
aas
pop
xchg
mov
cmp
(bad)
fcompp
push
cmp
(bad)
aam
mov
stos
and
loop
add
lea
cmp
cmp
adc
and
and
jmp
scas
fcomp
aad
(bad)
push
mov
je
or
jg
mov
scas
outs
imul
fild
je
adc
popa
jmp
test
mov
mov
xchg
scas
pushw
add
jnp
add
test
and
push
sbb
push
idiv
xor
sub
xor
rol
mov
mov
mov
push
les
adc
add
pushf
bound
jl
(bad)
fistp
loop
add
sub
(bad)
imul
sub
cmp
out
pop
sti
xor
cmps
cmps
push
je
enter
xlat
(bad)
(bad)
shl
jl
and
inc
jp
mov
xchg
mov
adc
mov
mov
push
push
push
stos
or
mov
sbb
aas
popa
mov
and
into
pop
pop
(bad)
mov
jmp
dec
pushf
cld
jmp
push
outs
adc
rcl
iret
test
push
ror
outs
hlt
mov
loope
mov
imul
or
mov
jmp
adc
popa
ret
sbb
add
mov
aad
(bad)
out
adc
jb
xor
add
mul
test
push
jecxz
addr16
out
repnz
mov
int
not
jns
sbb
push
retf
mov
cmp
push
cmp
(bad)
cmp
lods
(bad)
clc
inc
jae
cmp
lods
jecxz
loope
sbb
std
fwait
push
test
mov
in
xchg
test
outs
cmp
mov
sar
fdiv
mov
pushf
sbb
arpl
mov
mov
xor
push
adc
stos
xlat
dec
pop
jge
push
int
inc
adc
scas
sti
enter
push
(bad)
nop
pop
sti
dec
stc
stc
add
xchg
pop
jmp
sub
adc
cmc
mov
shl
shl
fiadd
push
cwde
shl
inc
in
pop
cdq
fcmovnbe
cmp
int3
sbb
cmp
push
pop
shr
fcomp
mov
mov
dec
aad
inc
ja
mov
dec
pusha
test
test
xchg
sahf
clc
mov
out
std
fild
bound
je
outs
jne
les
fwait
mov
enter
push
push
dec
ja
mov
cmp
and
fild
test
mov
xchg
movs
aam
xlat
rcl
or
into
stos
dec
adc
leave
stos
addr16
leave
aas
xchg
idiv
rcr
mov
xchg
and
push
(bad)
cs
adc
sub
repz
nop
cdq
push
bound
push
pop
int
scas
inc
mov
(bad)
fwait
ja
inc
mov
jae
jne
mov
mov
xlat
sub
jp
out
pop
rol
fcom
neg
push
xchg
cmps
(bad)
out
loope
outs
retf
addr16
jp
hlt
pop
and
or
pop
xor
arpl
push
shr
xlat
rcr
fwait
js
push
fadd
vmovaps
pop
add
adc
js
aam
in
inc
sbb
(bad)
in
ins
mov
mov
adc
jno
pop
pop
dec
dec
xor
out
pop
ror
and
(bad)
aas
or
gs
ffreep
cmp
mov
adc
mov
out
mov
ror
dec
sub
mov
pop
or
movs
inc
test
fisubr
stos
xchg
sbb
daa
sar
xchg
pop
sub
mov
sub
nop
sub
sbb
call
fiadd
lods
and
dec
(bad)
push
shl
ret
push
and
mov
push
cmp
inc
mov
call
cdq
test
loopne
hlt
cmps
iret
jp
test
cld
sub
jae
lahf
out
scas
sub
ret
mov
fiadd
addr16
adc
test
ins
jbe
mov
xor
mov
sub
retf
push
nop
add
jbe
jg
mov
lea
jo
in
cdq
xlat
test
mov
xor
adc
push
mov
push
adc
adc
ficomp
push
and
retf
je
(bad)
icebp
test
jb
jle
jg
mov
mov
shr
xor
sbb
lahf
pop
and
jle
pop
jg
fisttp
repz
enter
or
je
int3
xor
je
pop
scas
sar
or
movs
sub
movs
outs
add
mov
pop
hlt
inc
mov
or
push
cli
ss
lods
(bad)
cmc
rol
xor
mov
mov
sub
retf
and
add
adc
push
pop
ret
into
test
xchg
in
popf
push
xchg
aas
mov
jecxz
pop
call
mov
fs
mov
aaa
je
(bad)
int
out
icebp
leave
ret
jmp
mov
sub
into
nop
lods
inc
into
in
mov
sti
imul
adc
rol
test
jns
add
sub
sub
sbb
mov
gs
cmp
pop
aas
jbe
dec
push
mov
mov
sbb
jae
adc
or
ret
call
ss
inc
daa
aam
(bad)
scas
jecxz
cdq
pusha
sub
xor
mov
mov
and
jmp
dec
jae
jmp
cdq
push
in
loop
mov
hlt
push
cdq
sbb
jo
xor
retf
daa
hlt
mov
cwde
inc
daa
push
arpl
sub
mov
std
test
push
popa
test
and
repnz
(bad)
mov
or
mov
and
shl
xor
adc
lods
ja
out
push
(bad)
loop
mov
cdq
std
fs
lods
sahf
mov
in
add
lds
psubsw
gs
or
or
not
fnstsw
imul
inc
add
xchg
push
lds
test
sbb
imul
lahf
std
mov
sub
dec
retf
fdiv
adc
and
ret
ja
dec
int
test
xor
aas
xchg
adc
mov
out
pop
fdivr
dec
pop
mov
es
(bad)
xor
gs
dec
sub
mov
ret
xchg
(bad)
lahf
xchg
mov
(bad)
and
fld
jmp
in
(bad)
pop
movs
scas
mov
mov
mov
mov
into
in
sub
mov
(bad)
adc
ret
adc
jbe
fcomi
fwait
ror
pop
mov
test
pop
jb
lods
dec
jno
pop
mov
in
mov
sub
xor
push
mov
lahf
xchg
dec
bound
jb
jne
jno
mov
mov
enter
mov
jo
cmc
jge
dec
xchg
pop
pop
pop
pop
add
cmp
in
mov
in
(bad)
push
cmc
retf
test
jl
dec
lods
xor
mov
bound
scas
xchg
ja
mov
inc
lea
retf
fsub
jno
sub
mov
xlat
retf
xor
lahf
(bad)
sbb
jg
jge
inc
ror
call
pop
ins
into
stc
daa
add
in
push
(bad)
add
add
scas
mov
pop
xchg
mov
sar
xchg
xchg
add
or
sti
or
mov
cld
sbb
mul
ret
call
push
out
jae
inc
sub
stos
sub
dec
das
jmp
gs
xchg
fldcw
adc
and
sub
mov
aaa
jecxz
push
push
popa
clc
jmp
ds
cld
mov
jbe
sbb
ss
ss
aad
sbb
add
xor
out
fcomp
push
mov
pusha
or
add
jae
mov
mov
test
lock
(bad)
jae
cmp
test
jg
mov
test
pusha
movs
stc
xchg
ret
xlat
jecxz
xchg
jmp
xchg
in
cmp
fsubr
out
sub
cmp
icebp
ja
fidivr
imul
je
out
hlt
clc
sbb
add
mov
aam
mov
out
jne
aaa
lea
(bad)
in
mov
cmc
psllw
pop
sub
xor
icebp
imul
dec
aad
push
movs
addr16
in
adc
jge
or
rcr
in
scas
aad
(bad)
push
mov
enter
adc
mov
mov
mov
push
xchg
aad
and
and
sub
stos
(bad)
sti
mov
adc
mov
mov
lods
arpl
cmps
loope
mov
mov
cdq
in
ror
nop
ds
popf
xchg
mov
push
ja
hlt
xchg
mov
xchg
ror
out
mov
lds
imul
push
das
fistp
xchg
jb
mov
or
inc
ins
and
xor
mov
cmp
ja
jb
das
sub
(bad)
xchg
mov
call
jmp
test
hlt
push
je
sbb
sti
aad
add
jl
rcl
adc
icebp
add
adc
in
mov
popa
jmp
lock
jecxz
aam
fisttp
hlt
and
fstp
fwait
push
rcpps
shl
addr16
inc
(bad)
jge
ret
push
mov
xlat
(bad)
and
jmp
and
pop
dec
(bad)
xlat
sbb
lea
cmp
mov
push
daa
mov
or
pop
and
addr16
lods
test
cmp
loope
dec
mov
push
js
push
loopne
or
mov
ficomp
xor
pusha
pop
jne
and
repnz
mov
les
stc
sahf
div
retf
inc
std
sub
mov
jl
jae
pop
or
sahf
std
jo
stos
fnsave
push
adc
stos
dec
jb
sbb
push
test
bound
call
dec
adc
cmp
call
je
retf
loop
dec
leave
mov
mov
inc
icebp
add
iret
jle
in
in
fadd
pop
fwait
stos
sub
cmp
test
test
jbe
mov
lahf
mov
sbb
ins
fdivr
mov
sti
mov
or
and
xor
imul
dec
or
inc
test
or
push
sub
int3
sbb
imul
cmp
or
daa
hlt
push
push
xor
inc
icebp
inc
lahf
sbb
lods
retf
dec
out
push
and
aaa
pop
das
dec
pop
push
ret
les
repz
icebp
es
loopne
mov
jmp
mov
adc
test
push
mov
retf
mov
pop
adc
mov
js
sti
cmps
not
leave
adc
je
mov
bound
cmp
and
jns
(bad)
aad
jbe
mov
aad
add
inc
xor
imul
int
and
and
inc
add
xlat
mov
scas
jmp
mov
xchg
mov
cmp
jbe
push
dec
xchg
pop
and
and
jge
sahf
adc
adc
inc
sub
xchg
inc
(bad)
fbstp
xchg
neg
pop
scas
les
ds
nop
bound
loope
clc
sub
or
push
add
shl
out
in
out
dec
jle
gs
das
sbb
iret
popf
sbb
mov
shr
mov
pop
outs
hlt
xchg
sbb
xlat
sub
xor
mov
jmp
add
fmul
sbb
inc
test
movs
lods
cmp
aas
mov
aad
pop
stos
(bad)
sbb
outs
mov
and
mov
sbb
sbb
clc
clc
mov
fiadd
mov
lods
ja
push
mov
xor
fnstenv
into
cmp
int
mov
ss
jno
mov
xchg
dec
jp
sbb
inc
jb
dec
mov
or
rcl
dec
mov
sar
jp
jnp
test
sbb
inc
popa
jl
mov
inc
cdq
lods
mov
dec
gs
(bad)
push
lods
icebp
inc
mov
push
mul
or
dec
add
ror
jl
mov
and
cmp
push
ja
cmp
outs
bound
popf
movs
jl
addr16
xor
xchg
inc
mov
dec
mov
xchg
popa
loopne
push
sub
pop
and
cmp
sahf
aad
jg
mov
pop
add
add
inc
ret
inc
mov
imul
sar
rol
jp
imul
add
mov
add
sbb
jmp
or
inc
pop
std
xor
dec
mov
leave
outs
push
inc
xchg
int
gs
shl
mov
call
outs
xor
bound
and
cmp
nop
sbb
in
into
jae
mov
or
add
cs
xchg
mov
xchg
mov
sbb
xor
test
test
adc
test
cmps
or
stos
out
adc
test
sar
ret
stos
mov
pop
enter
into
shr
out
pop
mov
mov
add
in
jo
test
or
loop
xor
outs
loope
push
in
jg
push
int
mov
dec
add
cdq
hlt
pop
sbb
in
dec
in
sbb
jge
xor
jg
push
xor
cmp
sbb
jno
dec
cld
or
aad
xchg
cmp
sti
or
out
(bad)
jae
movs
sbb
pushf
sbb
ja
test
inc
test
push
enter
test
movs
xchg
mov
push
popf
fcom
push
rol
cmp
or
pusha
shrd
add
test
inc
addr16
or
sbb
inc
jecxz
ss
gs
ds
jp
push
sahf
sbb
pop
adc
sub
bound
bound
xchg
jle
retf
push
sub
push
fcom
ret
adc
hlt
xor
lods
jge
or
add
mov
and
rcl
stos
and
in
clc
adc
xchg
gs
jmp
mov
xor
inc
popf
xchg
lods
ds
fs
jl
mov
shl
call
out
and
dec
mov
mov
in
mov
retf
ret
inc
(bad)
cmp
popa
mov
in
xor
dec
loopne
div
ins
cmp
xchg
enter
ret
aad
retf
push
int
not
fs
inc
pop
aam
mov
sub
fstp
test
push
jbe
xor
fldl2t
push
mov
sub
cld
mov
mov
mov
retf
pop
inc
bound
mov
in
dec
outs
inc
or
xchg
push
aad
add
cmps
icebp
sbb
call
sbb
pusha
xor
out
cli
push
jns
adc
sti
das
fwait
mov
jbe
or
call
mov
fwait
mov
jge
adc
or
mov
push
cwde
pop
push
add
ret
sbb
icebp
aaa
xor
sub
dec
cdq
(bad)
cmp
xchg
scas
and
scas
dec
jno
out
jne
popa
pop
sub
ja
and
sub
aam
cli
mov
pop
or
rcr
in
push
(bad)
push
mov
push
push
or
cmp
mov
push
mov
pop
or
mov
rcr
push
mov
mov
xchg
pop
pop
lods
stos
(bad)
and
jns
push
mov
dec
push
mov
cwde
cmp
mov
jae
bnd
or
pushf
data16
mov
jno
int3
int
jge
xor
ret
rol
jecxz
adc
cmp
jg
pop
jmp
dec
mov
push
test
jmp
jne
push
icebp
xchg
cmp
push
frstor
outs
sar
pop
into
mov
(bad)
cmc
and
push
pop
repz
mov
push
xlat
push
aaa
pop
movs
pop
test
sub
jl
(bad)
xlat
mov
mov
loopne
add
(bad)
hlt
cmp
lock
mov
adc
iret
movs
loop
or
bound
mov
repz
aas
bound
scas
addr16
adc
mov
sbb
shl
ja
sub
aad
ja
shr
(bad)
pop
outs
add
mov
sbb
js
pop
ins
or
pop
or
scas
dec
fiadd
lods
stc
out
lea
std
push
mov
repz
stos
test
icebp
sbb
add
icebp
and
adc
adc
inc
jns
cmp
ror
and
xor
and
inc
push
int
pop
push
mov
cld
(bad)
dec
pop
sub
fldcw
les
ret
mov
sahf
jp
shl
daa
add
cmp
(bad)
cwd
inc
and
xor
jns
rol
les
(bad)
jns
imul
dec
xchg
loope
imul
cmp
test
es
adc
in
push
pushf
push
sub
dec
push
ss
mov
push
imul
mov
and
and
cs
or
or
loopne
les
sbb
enter
rcl
push
rcl
push
rcr
ffree
fimul
arpl
inc
dec
shl
stc
mov
sub
mov
adc
mov
mov
jne
sub
loop
(bad)
mov
pop
stos
sbb
cmp
or
cmp
push
mov
fs
sbb
(bad)
loop
push
scas
add
adc
jmp
mov
mov
js
lods
test
push
add
mov
or
pop
enter
std
out
test
mov
push
int3
mov
repz
sbb
fwait
add
adc
xchg
jae
cmp
std
das
ins
mov
inc
int3
call
movs
xchg
adc
retf
mov
(bad)
fdivr
(bad)
xlat
mov
dec
scas
push
fmul
pop
pop
cmps
cmp
lahf
shl
adc
mov
ja
fwait
cmp
fst
inc
dec
mov
pop
pop
lods
dec
add
(bad)
jo
loope
daa
pcmpgtd
and
xchg
xchg
sar
inc
int3
lods
lds
(bad)
aas
fldl2t
pop
inc
retf
add
jl
rol
add
jle
xchg
int3
out
pushf
hlt
or
rcl
ds
es
call
pusha
add
(bad)
iret
ds
arpl
xor
int
mov
lock
les
cli
out
sub
mov
and
mov
stc
repz
retf
sub
(bad)
jne
xchg
aam
cdq
mov
prefetcht2
xor
xchg
sbb
push
push
jnp
adc
outs
out
fild
and
dec
data16
xor
ror
shl
sbb
or
test
jo
and
push
lahf
les
jp
xor
inc
stc
mov
mov
inc
inc
sub
mov
add
scas
test
ins
sbb
add
mov
(bad)
sbb
mov
push
int
js
push
jns
mov
and
test
test
xchg
xor
gs
cmc
or
loope
pop
imul
fst
out
or
stc
xchg
(bad)
xchg
nop
ins
inc
adc
push
(bad)
xchg
fs
in
out
fisttp
cli
movs
cs
sub
retf
inc
xchg
adc
out
or
xor
lods
movs
xchg
lahf
cmp
out
lahf
leave
jp
jg
pop
out
(bad)
cmp
or
pop
xchg
mov
sub
cmc
adc
cmp
cmps
or
or
(bad)
xor
pop
lea
add
cld
dec
add
outs
xor
into
cmp
or
popf
movs
cmp
mov
add
push
mov
jmp
std
sub
mov
data16
enter
cmp
pusha
gs
add
xor
das
popa
icebp
push
cmp
retf
test
fild
push
call
push
adc
push
nop
enter
jle
lahf
and
ss
pop
and
lds
(bad)
lods
dec
sahf
loopne
cmp
pop
adc
retf
jo
out
enter
mov
inc
mul
cld
jo
repnz
(bad)
pusha
push
stc
mov
mov
xchg
push
(bad)
jle
aaa
cmp
pop
ins
push
lock
and
mov
lds
sub
retf
jbe
lods
jns
sbb
ins
push
xor
shl
rcl
inc
inc
iret
jp
jae
ja
rcr
jno
nop
out
adc
mov
xchg
push
jnp
sub
pop
push
nop
jmp
jmp
int
inc
add
scas
and
int
xor
cli
fwait
(bad)
repnz
test
pop
clc
xlat
sub
cmp
sbb
push
cli
sar
cdq
adc
je
xlat
out
jecxz
and
mov
add
test
sub
sahf
sbb
adc
in
jmp
mov
push
push
or
adc
jae
jp
mov
adc
inc
jmp
das
mov
call
mov
ins
sahf
(bad)
rcl
fmul
les
mov
xor
sub
les
and
push
pusha
or
out
mov
or
je
stos
and
daa
mov
xchg
mov
daa
inc
fstp
fwait
xor
mov
retf
mov
repz
pop
lods
mov
mov
scas
mov
xchg
add
cmp
and
and
push
ret
int
and
jp
mov
cs
jns
and
jmp
jmp
and
inc
cmc
push
sbb
sub
repz
mov
or
pop
pop
xchg
addr16
ins
and
clc
addr16
out
sbb
adc
scas
out
mov
pop
jnp
dec
jp
cld
fiadd
add
dec
fwait
clc
pop
stos
sahf
data16
inc
retf
(bad)
loop
jns
sbb
xchg
outs
out
jmp
and
xchg
add
pop
push
jno
pop
int3
fnstsw
mov
pop
outs
in
xor
nop
in
addr16
mov
es
push
lods
push
sbb
jb
enter
adc
mov
adc
iret
mov
repnz
inc
xchg
cmp
fldcw
mov
adc
aam
into
inc
outs
out
sub
ins
imul
cmp
lahf
stc
xchg
(bad)
pushf
and
movs
shr
cmp
lds
test
mov
sahf
sar
xchg
icebp
cmps
fcomp
xchg
or
leave
dec
repnz
dec
retf
xor
(bad)
ss
xor
lock
in
jb
fld
push
pop
pop
jne
xchg
ja
fdivr
cmps
sub
fistp
push
pop
xchg
(bad)
je
int3
jp
and
push
mov
aam
les
fwait
stc
add
ins
pop
(bad)
or
enter
jno
dec
movs
jno
push
pop
mov
mov
adc
cmp
and
mov
pushf
xor
jns
leave
dec
xlat
cdq
aaa
aas
dec
cdq
enter
mov
rol
push
ret
pop
dec
out
lods
(bad)
xchg
add
push
(bad)
sub
retf
test
adc
jns
stos
pop
test
mov
jle
cmp
es
push
jle
sbb
sbb
sar
leave
cmp
mov
xchg
dec
sbb
test
mov
cmp
adc
jmp
xchg
cmp
icebp
test
leave
add
push
pop
mov
call
sti
aad
fdivr
cli
ds
pop
mov
push
inc
mov
jge
out
repz
in
sbb
fchs
push
popf
and
arpl
retf
pushf
out
pop
pop
jp
or
fist
adc
jbe
pop
sbb
mov
mov
mov
hlt
aad
mov
(bad)
xor
call
adc
out
scas
sub
xchg
jmp
in
cmp
inc
push
mov
jne
ins
jmp
push
and
hlt
scas
cmp
fisubr
pushf
lahf
mov
call
xor
mov
outs
xor
mov
dec
adc
mov
ret
leave
stos
dec
fwait
inc
cmc
sub
test
inc
push
pop
xchg
fdivr
lds
call
mov
fistp
lods
fsubp
and
pop
cmp
sub
jnp
xor
mov
mov
dec
inc
cmps
mov
test
xchg
mov
or
dec
push
in
or
inc
out
jmp
in
clc
loope
dec
sbb
movs
fld
jae
or
loope
aas
or
out
sub
xchg
xchg
mov
cmc
pushf
push
mov
div
sahf
jp
dec
dec
mul
aaa
dec
push
push
inc
(bad)
fcom
(bad)
push
cld
inc
dec
xor
jns
loopne
push
ja
les
mov
fnstenv
mov
add
ins
sti
xchg
adc
(bad)
enter
adc
out
clc
imul
cwde
test
call
cmps
mov
or
jae
fsubr
sti
mov
lods
add
mov
cmp
mov
mov
jae
mov
outs
mov
xor
stc
jmp
enter
cmp
(bad)
movs
outs
sub
adc
in
jmp
mov
imul
je
retf
mov
pop
mov
xor
(bad)
or
mov
hlt
xchg
push
inc
setns
sub
adc
jmp
je
popa
dec
xor
adc
shr
and
sub
cmp
stos
test
imul
out
ds
je
dec
or
cmc
dec
mov
cli
icebp
iret
mov
push
imul
scas
pop
in
fld
jmp
les
bound
jbe
cmp
cdq
mov
mov
jmp
cwde
(bad)
adc
pop
or
leave
adc
cmp
cld
xor
jl
xor
dec
xchg
int
(bad)
in
nop
test
ret
adc
cdq
icebp
sbb
clc
mov
add
pop
ins
push
sbb
push
sub
mov
out
test
icebp
rcl
cmc
xor
jge
ficom
jno
sub
cmp
and
shl
dec
mov
xchg
or
loop
sub
ret
(bad)
jecxz
(bad)
xor
and
mov
push
mov
inc
sbb
add
adc
in
inc
jp
(bad)
mov
lock
hlt
add
ret
loope
icebp
enter
mov
outs
scas
sti
cli
stos
int3
aas
sub
daa
or
ror
outs
movs
dec
aas
(bad)
call
les
nop
cmp
ret
mov
fnstenv
imul
push
or
jp
fs
sbb
cvtpi2ps
jne
les
inc
cs
stos
(bad)
fs
pop
pop
rcr
enter
mov
or
scas
dec
adc
in
stos
jge
sbb
clc
enter
out
mov
dec
cwde
dec
cmp
mov
xchg
xor
std
xor
xchg
pop
mov
adc
stos
sbb
dec
ins
ins
pop
lds
xchg
fisubr
pop
cwde
outs
mov
or
dec
add
cmp
lea
ss
leave
test
sbb
inc
sbb
fbld
sub
sub
cdq
daa
push
push
dec
dec
loopne
xor
stos
out
js
push
retf
jmp
and
jge
aaa
pushf
sbb
sbb
xchg
aaa
mov
inc
cmp
ss
frstor
popf
in
inc
fild
lea
shr
push
div
test
push
fisttp
stc
ror
mov
(bad)
and
das
gs
mov
push
imul
dec
and
mov
test
aad
addr16
jg
and
pop
test
mov
popf
sbb
mov
mov
xchg
fs
sbb
pop
fwait
cmps
fnstcw
aas
aas
and
mov
add
inc
mov
ret
push
mov
mov
dec
icebp
(bad)
fs
nop
pop
dec
cmp
sub
jmp
out
xor
dec
mov
aas
mov
xor
cwde
lds
fisttp
jl
mov
xor
or
sub
sbb
scas
sbb
cmp
add
scas
cmp
cli
sub
test
retf
sub
test
aad
pop
lock
mov
rcr
pop
xchg
dec
lds
dec
pop
cmp
(bad)
das
push
ucomiss
mov
loopne
les
in
mov
push
jl
dec
jnp
or
scas
pop
je
sbb
pusha
fist
sub
mov
rcl
in
jne
es
stc
outs
push
(bad)
mov
xlat
pop
out
fcomp
ins
into
sub
loopne
xor
add
stc
xchg
ins
or
inc
sbb
jp
mov
sbb
inc
fiadd
stos
nop
(bad)
call
jmp
mov
aam
cmps
mov
das
xchg
sub
out
xchg
sub
mov
jge
mov
or
je
arpl
enter
xchg
jb
jle
sub
test
pop
xchg
push
or
cmp
sbb
in
push
sub
inc
ins
out
push
arpl
cld
loopne
(bad)
mov
or
cwde
cdq
mov
lock
push
xchg
xor
xor
retf
mov
mov
fs
aad
xchg
xchg
add
dec
xor
xchg
adc
test
ja
add
mov
push
out
(bad)
inc
loope
mov
push
inc
mov
dec
lea
add
(bad)
xor
cmps
js
bound
mov
mov
cmp
cmp
test
lea
add
sub
js
mov
mov
pop
add
push
adc
(bad)
pop
inc
data16
out
adc
fwait
mov
bound
scas
test
(bad)
push
stos
cmps
(bad)
jno
push
rep
pop
push
idiv
jmp
stc
xchg
jnp
mov
stos
mov
outs
mov
push
mov
shl
sub
jl
mov
retf
xchg
arpl
add
fs
test
das
mov
loop
pop
(bad)
mov
nop
in
scas
adc
mov
je
fucomp
pop
out
sub
ins
push
(bad)
repnz
adc
pop
rcl
fisubr
repnz
add
jg
in
mov
(bad)
repnz
out
pop
add
pop
cmp
cmp
loopne
jle
sbb
pop
sub
jns
push
cmp
bound
cwde
inc
in
mov
fsubr
xchg
add
jns
xchg
inc
in
rcl
sbb
adc
adc
ins
fadd
movs
clc
aam
adc
adc
mov
fdiv
pop
lods
mov
and
cwde
fcom
out
push
aas
aad
push
inc
jno
int
sub
icebp
cmc
sbb
leave
loopne
xchg
(bad)
dec
xchg
arpl
mov
hlt
jb
jmp
xchg
sub
xchg
cmp
jne
aam
into
ror
mov
cmp
add
jmp
popf
ficomp
not
lahf
(bad)
jbe
in
jmp
add
lods
push
ud2
cmc
lea
movs
popa
xchg
imul
ficomp
sub
icebp
add
out
sub
sub
into
mov
push
adc
retf
and
pop
xor
fwait
loop
jmp
in
aad
cdq
fs
and
dec
mov
or
out
std
js
pusha
out
gs
stc
out
loopne
pop
(bad)
imul
pop
fisttp
retf
xchg
pop
mov
test
lock
jl
lds
push
xchg
movs
pop
sbb
pop
or
ins
mov
xchg
out
movs
fcom
mov
imul
cld
hlt
ss
mov
ficomp
in
inc
and
addr16
mov
fistp
jecxz
adc
push
dec
in
add
test
mov
and
jne
dec
fdiv
daa
test
movs
cmp
cdq
daa
(bad)
and
out
cld
lea
mov
mov
pop
cld
adc
mov
cs
arpl
retf
sub
lock
sub
movs
jmp
adc
fadd
xchg
and
push
mov
push
aad
out
popa
fcom
ds
scas
shl
add
in
outs
stos
inc
sub
xlat
clc
in
xor
push
xor
add
fnstsw
stc
sbb
add
adc
movs
int
dec
adc
fsub
jp
sbb
movs
add
jmp
dec
dec
ret
and
(bad)
les
pop
pop
rol
test
mov
(bad)
sub
sbb
mov
adc
outs
mov
inc
pop
xlat
mov
push
mov
pushf
mov
mov
xor
xchg
mov
mov
sbb
movs
mov
mov
ds
rcl
jbe
mov
les
in
pop
iret
lds
jl
addr16
xchg
stos
cmps
sbb
enter
mov
jae
fcmovne
jno
icebp
into
enter
in
cmp
jnp
jb
mov
inc
nop
lods
cld
or
ret
retf
in
out
sub
pusha
imul
sahf
fisub
sbb
jl
int3
ss
jo
sbb
push
mov
lods
jl
mov
test
mov
xor
jno
out
cmp
jle
in
mov
aam
fisttp
(bad)
cld
aaa
bound
sub
(bad)
in
cmp
adc
add
dec
xchg
inc
je
call
repnz
sbb
ins
cmp
cmp
inc
addr16
into
jb
ins
adc
push
jl
std
fidivr
rcr
(bad)
jns
retf
std
and
mov
hlt
cld
icebp
lock
loopne
cmp
sbb
fmul
cmp
lock
cmps
test
sti
xchg
int
mov
cmps
mov
iret
test
out
pop
jmp
mov
retf
enter
cld
jbe
sti
popf
dec
iret
out
xchg
push
push
add
stos
mov
xor
sub
push
xchg
shl
mov
xchg
out
sbb
movs
sbb
add
dec
mov
out
mov
pop
je
cli
test
cdq
icebp
xor
cli
icebp
pusha
push
cmp
jns
push
jno
sub
enter
shr
jbe
or
(bad)
and
es
pop
fsubp
nop
retf
inc
pop
push
xchg
outs
sti
mov
sbb
cmp
pop
cmp
aad
in
cdq
cld
fld
jbe
cli
leave
lds
push
jbe
push
xor
cmp
cmovo
dec
xchg
fidiv
cmc
add
shr
loopne
dec
les
mov
mov
sub
mov
push
xchg
rcr
xor
dec
test
pop
mov
test
mov
ja
dec
call
jge
ror
jle
(bad)
sbb
loop
xchg
cli
cmp
popf
outs
inc
add
cmps
push
test
dec
jno
mov
clc
pop
or
ins
inc
ror
mov
mov
sbb
sbb
or
push
imul
lods
mov
cmp
or
gs
dec
mov
mov
cs
out
xchg
or
or
mov
add
ins
test
xchg
mov
inc
fbstp
jecxz
rcl
or
mov
adc
inc
out
jnp
fcom
lods
jno
pop
sub
and
adc
movs
or
pop
cmp
es
xor
jbe
cmp
arpl
xlat
adc
pop
shl
inc
mov
jmp
test
cmps
push
sbb
sbb
setp
jp
ret
rol
xchg
pop
in
ror
aam
repnz
push
mov
push
(bad)
mov
push
sub
adc
xchg
popf
push
xlat
pop
pop
(bad)
mov
mov
cmps
cmps
test
test
addr16
and
std
inc
cmp
mov
(bad)
xchg
popf
outs
inc
add
push
fist
aaa
jae
dec
xlat
jecxz
ins
inc
sbb
rcr
inc
pop
repnz
mov
jne
pop
xchg
sub
pop
cmp
sub
sbb
out
call
mov
fsubrp
bound
pusha
cmp
mov
fistp
mov
xor
sbb
outs
sub
mov
les
and
sub
frstor
sub
fld
cld
or
cs
fmul
inc
mov
out
and
pop
aad
cmovno
jno
push
push
imul
loopne
call
out
out
pop
push
jmp
(bad)
jbe
mov
jge
xor
or
jns
ins
dec
aad
cmc
adc
sub
and
xchg
gs
pop
mov
arpl
popa
or
xchg
lahf
je
(bad)
shl
or
xor
mov
pop
adc
gs
jl
icebp
adc
inc
test
test
sbb
sbb
pop
push
out
in
mov
iret
hlt
cmps
(bad)
cmp
adc
add
ror
xor
jge
fwait
int
icebp
sub
mov
sub
xor
ret
pop
jno
xor
into
ror
sub
fwait
in
je
jl
cmp
inc
sub
fisttp
mov
jno
dec
fwait
sar
lods
add
aaa
xchg
call
mov
jo
jb
dec
(bad)
sbb
push
pop
mov
xor
xchg
div
(bad)
inc
test
mov
push
loope
into
jl
sub
bound
add
sub
push
data16
jl
add
mov
xor
mov
fs
push
adc
mov
add
push
jge
mov
test
cli
inc
retf
xchg
movs
mov
imul
call
icebp
cmp
and
int
jmp
fcmovnu
inc
lock
cmp
and
sub
retf
aad
aas
popf
sti
pop
xchg
mov
inc
xchg
add
sub
dec
outs
in
fcmovnb
dec
mov
enter
push
dec
mov
mov
jne
call
jae
pusha
jp
popf
inc
int
xchg
jae
aam
dec
cmp
sub
shl
imul
in
jg
or
inc
stos
mov
pop
pusha
leave
inc
push
loopne
mov
fstp
rcl
inc
dec
ret
lds
enter
test
lea
mov
mov
sub
jns
cwde
xchg
scas
not
and
add
movs
inc
gs
lock
ss
dec
(bad)
jp
loopne
int3
icebp
mov
jmp
call
sbb
imul
aad
jne
std
jbe
jbe
push
jp
and
add
jae
int
xchg
jg
mov
ffree
cmp
int3
and
(bad)
sub
mov
das
dec
ja
bound
mov
fninit
inc
outs
call
mov
call
add
aad
and
ficomp
inc
xchg
out
add
mov
loope
sbb
sub
jle
cwde
mov
mov
lds
(bad)
arpl
or
adc
in
and
sub
pshufw
popf
mov
dec
(bad)
jae
jmp
or
loop
jns
pop
int3
and
pop
mov
or
daa
mov
push
push
and
fadd
and
dec
fcomp
and
stos
test
jp
push
mov
inc
les
add
ins
cdq
call
loope
mov
or
aad
or
adc
cld
add
fs
jl
cmp
outs
pop
out
popa
sbb
aam
jl
inc
add
ins
cmp
lock
mov
jg
mov
enter
xlat
jnp
sti
inc
mov
xor
imul
fistp
cld
repz
xchg
cwde
sbb
xor
inc
push
sti
fistp
push
cmp
add
mov
xor
pop
test
mov
dec
adc
mov
fwait
cmp
inc
inc
add
fcmovnb
pop
popf
jle
retf
jmp
mov
sahf
shl
in
pop
jg
iret
aas
adc
bound
inc
mov
lahf
sub
repz
or
shl
fwait
sbb
jmp
add
rcr
add
cmp
push
or
movs
jmp
pop
ret
fmul
xor
inc
es
jmp
out
bound
dec
out
sub
aad
ret
pop
and
das
retf
mov
rol
sbb
int3
popf
fldcw
test
adc
int3
jnp
mov
retf
lods
mov
add
cld
test
xor
and
ret
pop
fild
pop
sub
test
je
call
mov
sbb
out
xchg
jmp
inc
cwde
int3
and
call
ins
mov
sub
dec
push
in
add
or
rcr
xchg
loopne
xchg
xchg
(bad)
sbb
mov
xor
les
mov
jmp
fs
addr16
dec
jecxz
push
movs
mov
loopne
add
mov
pop
xor
or
inc
daa
sbb
push
jo
scas
sbb
xchg
leave
sbb
(bad)
mov
mov
xchg
test
adc
ds
mov
mov
sahf
out
cmp
dec
add
add
call
jne
hlt
jae
xor
popf
push
jecxz
lds
push
mov
ins
mov
and
adc
fsubr
dec
xor
mov
cdq
xor
add
xchg
jge
ds
xor
int3
test
push
cmp
mov
lock
inc
aad
sub
xchg
lds
xchg
(bad)
mov
mov
and
not
ins
bswap
sar
outs
ins
cmp
mov
mov
cmps
sub
aad
loop
xchg
xchg
aad
xchg
mov
aad
jb
cmc
jl
nop
inc
retf
shr
or
cs
out
inc
mov
jg
mov
push
ret
(bad)
cmps
shl
(bad)
hlt
cwde
sub
push
adc
loope
mov
xor
jge
xchg
mov
retf
cmp
call
int
je
shr
push
(bad)
jbe
mov
push
pushf
es
in
call
sbb
stos
stc
popf
inc
cmp
and
retf
in
push
ins
ret
sbb
add
fucomi
stc
stos
mov
fs
loope
add
test
add
imul
int3
inc
xor
add
loope
out
mov
iret
inc
mov
pop
cmp
mov
ja
in
mov
js
(bad)
xor
xchg
jae
xor
mov
rol
mov
mov
push
jo
test
in
cld
and
cmp
fdiv
add
scas
pusha
(bad)
mov
imul
loopne
cmp
mov
retf
sbb
pop
mov
xlat
cmp
xchg
cli
les
or
shr
add
xchg
int3
inc
leave
out
ss
xor
movs
popf
test
(bad)
in
mov
jne
rcl
shr
jo
xchg
mov
retf
ret
dec
imul
in
ins
(bad)
xchg
sbb
int3
pop
pop
or
(bad)
cmovl
sub
nop
xlat
dec
xor
xchg
icebp
dec
retf
sub
adc
shl
xor
test
loope
mov
xchg
(bad)
les
sub
daa
jge
ss
xlat
cmp
leave
in
stc
push
in
call
mov
daa
stos
push
sub
leave
sub
mov
loop
sbb
daa
shr
xchg
dec
or
or
aam
pop
popf
push
sar
mov
inc
inc
into
xchg
mul
test
sub
add
mov
push
movs
mov
imul
pop
dec
leave
jg
and
outs
mov
(bad)
lock
mov
scas
sub
or
stos
mov
pop
adc
lods
and
lds
jge
sbb
jne
lahf
dec
ror
aaa
inc
test
in
(bad)
jmp
jp
push
jecxz
adc
in
fistp
mov
inc
or
shr
push
sub
pop
sbb
xchg
sbb
push
fisubr
xor
cmp
xor
add
nop
sbb
fnstsw
les
icebp
fcomi
or
xor
inc
add
pushf
test
inc
dec
and
cmp
jle
fmul
mov
xchg
out
das
jns
repz
cmp
mov
aad
or
psrld
mov
aad
jbe
mov
or
aam
js
stc
gs
push
out
es
out
and
rcl
in
push
out
aad
fisubr
cld
test
or
jne
sub
and
psraw
inc
sbb
and
cmps
fistp
mov
xor
outs
mov
add
scas
call
pop
push
lods
dec
cmp
cwde
out
into
outs
aaa
sub
and
loop
imul
popa
or
or
cmps
fiadd
add
push
pop
mov
sbb
mov
push
cmp
jo
test
jo
sub
cmps
ret
cdq
sti
push
into
bnd
xor
mov
daa
cmps
push
pop
fnsave
sub
sbb
cmp
icebp
xor
jl
adc
in
icebp
inc
mov
js
mov
sub
xor
fld
cmp
fld
sar
aad
pop
pop
imul
lea
retf
xchg
xor
xchg
hlt
sub
jb
push
fcomi
xor
fidiv
sbb
jne
out
mov
fs
dec
jmp
adc
cmp
or
mov
mov
mov
sub
cli
jmp
out
sti
cs
xchg
xchg
in
imul
jg
xchg
hlt
push
xchg
shl
ds
pop
pop
or
(bad)
xchg
sub
xchg
jb
jmp
rcr
cmp
sub
inc
dec
nop
call
pop
sub
outs
fldenv
push
mov
cmps
xor
xchg
in
fcomip
jecxz
ror
lods
inc
inc
push
push
scas
jnp
mov
sub
loope
(bad)
retf
add
and
inc
das
test
mov
mov
adc
out
test
or
(bad)
lods
scas
push
pop
and
push
push
dec
js
pop
movs
xchg
inc
xor
dec
add
pop
mov
and
(bad)
int
mov
in
or
xchg
aad
jns
out
ins
out
mov
(bad)
lahf
retf
and
idiv
mov
shl
or
jmp
sub
fidivr
mov
call
stc
add
enter
mov
adc
movs
ffreep
inc
mov
push
fbld
mov
mov
ret
xchg
mov
popf
sbb
mov
ins
rol
nop
es
hlt
adc
mov
push
or
fs
push
pop
das
and
xlat
or
mov
fiadd
jns
and
mov
cmp
sub
fcmovne
xchg
adc
(bad)
aam
mov
in
ds
mov
call
dec
sahf
hlt
sbb
or
sar
fisubr
lods
inc
xchg
arpl
into
add
cmps
popa
and
or
mov
pop
adc
jg
pop
popf
sbb
inc
cdq
ret
xchg
jmp
das
je
or
fiadd
ds
xchg
dec
xor
xchg
stc
add
jle
shr
ds
push
ja
dec
or
movs
xor
pop
sti
mov
je
fdivr
adc
xchg
lods
adc
cmp
lock
das
adc
inc
mov
cmovl
(bad)
xchg
pushf
sbb
mov
sub
stos
and
mov
xchg
jae
mov
cmp
pop
adc
icebp
inc
push
dec
mov
bound
push
jmp
cmp
sbb
dec
mov
push
inc
cmp
stos
mov
dec
xchg
inc
in
in
sti
or
mov
xor
jmp
ins
cmps
pop
dec
sbb
xchg
jns
mov
inc
out
in
jne
cmp
arpl
adc
fisttp
and
dec
add
or
out
sbb
and
and
xlat
fnop
pop
mov
loopne
push
xor
jns
pusha
xor
in
mov
fisub
js
xor
mov
sub
push
ins
add
sbb
(bad)
xor
fstp
xchg
cmc
fsub
jae
push
and
js
adc
aad
and
fnstsw
mov
adc
cmp
adc
mov
fxch
(bad)
ds
popa
inc
sahf
pop
adc
ds
jg
and
scas
sub
fucomip
cmp
and
cmps
and
sub
cmp
lods
daa
(bad)
mov
in
jo
jg
xor
std
lea
ret
fwait
icebp
pop
push
aas
cmp
repz
out
dec
adc
pop
dec
jg
mov
aaa
push
xor
ror
add
push
push
dec
add
dec
dec
mov
sub
adc
or
and
fs
sub
sbb
fdivrp
sti
inc
mov
mov
xchg
sbb
(bad)
cmp
sub
int
int3
mov
sbb
test
in
mov
enter
push
(bad)
sbb
sbb
or
jne
pop
sub
push
pop
scas
jne
push
mov
fmul
add
addr16
retf
dec
shl
push
adc
daa
cmp
jno
and
out
mov
clc
sbb
cmp
pop
adc
movs
imul
jae
retf
movs
sub
cmp
xchg
add
jg
xor
dec
stos
cdq
aaa
xchg
sbb
sub
aad
push
sahf
ret
pop
mov
adc
dec
jmp
cmp
sbb
je
mov
adc
sar
push
mov
(bad)
jecxz
stos
out
push
out
retf
or
sahf
test
in
sub
fcomi
xor
push
jle
pop
mov
xchg
jns
sub
add
jle
or
pop
and
adc
sub
fld
es
outs
xchg
mov
xor
mov
into
inc
ret
call
cmps
xchg
dec
mov
arpl
out
xor
jnp
dec
(bad)
mov
add
in
push
scas
add
pop
out
push
or
xchg
(bad)
and
pop
movs
sub
(bad)
sbb
push
rcr
pop
and
jecxz
outs
shr
loop
sbb
dec
pop
push
retf
pop
out
test
sbb
dec
cmc
ss
pusha
sub
aaa
inc
out
icebp
leave
outs
shl
repnz
fld
jae
add
mov
stos
dec
xchg
and
jo
mov
lods
outs
mov
or
call
mov
add
stos
mov
xor
add
dec
mov
mov
inc
daa
dec
cmp
jnp
and
mov
sar
adc
iret
pop
push
mov
es
sti
lahf
sbb
in
fs
ins
xor
aas
inc
or
loop
or
xor
dec
retf
sbb
idiv
cmp
cld
shl
add
jecxz
jg
pushf
sbb
es
pop
inc
ins
imul
jg
imul
inc
xchg
addr16
imul
mov
rcr
aad
mov
inc
sub
sar
or
arpl
add
cmp
pop
(bad)
stos
mov
mov
pop
mov
call
push
ins
out
inc
sub
pop
push
mov
outs
neg
or
pushf
arpl
push
cdq
xchg
loop
jnp
sub
fwait
or
lea
idiv
ds
movs
(bad)
loop
inc
popa
std
add
lea
pop
ds
and
xrelease
sub
test
push
sbb
retf
ds
js
rol
ret
mov
test
sti
sub
mov
cmps
ins
sub
push
jecxz
jmp
inc
pop
(bad)
je
inc
push
mov
das
test
add
(bad)
in
das
inc
or
inc
sbb
adc
add
ss
pop
sub
pop
mov
je
mov
sub
cli
jne
mov
gs
mov
stos
test
(bad)
enter
in
jno
and
inc
mov
loopne
adc
clc
mov
call
add
lahf
add
xor
xchg
jg
es
pop
dec
and
jno
stc
enter
xor
push
push
mov
pop
cmps
outs
adc
aad
fbld
das
xor
cld
xchg
iret
adc
test
dec
bound
lock
std
sub
sahf
in
push
cli
pop
pop
jmp
imul
mov
xchg
(bad)
and
mov
adc
and
push
mov
and
sbb
jle
mov
inc
jno
movs
fcom
jo
mov
(bad)
xor
cld
dec
sub
enter
ins
les
add
les
jo
or
inc
mov
jno
imul
jmp
push
mov
add
mov
inc
sahf
push
pushf
jecxz
repnz
into
xchg
or
xor
cmp
stos
jo
sti
(bad)
jns
mov
or
emms
sbb
xchg
inc
mov
fbstp
dec
lods
ds
int
jmp
dec
sub
mov
add
fdivr
es
mov
xchg
cmp
jg
fisubr
repz
dec
test
lock
pop
pop
push
mov
test
in
out
inc
adc
mov
call
movs
mov
in
(bad)
lahf
(bad)
out
call
and
jmp
ja
mov
pop
rol
imul
int3
test
mov
or
retf
cmp
out
xchg
popf
cmc
cmp
cdq
cmps
(bad)
aaa
jp
or
jecxz
push
and
je
xchg
fxch
or
rcr
xchg
mov
add
and
(bad)
(bad)
bound
inc
mov
pop
mov
sub
pop
or
aaa
inc
cmps
pop
or
outs
fs
scas
lock
mov
inc
rcl
data16
or
and
jecxz
xchg
pop
sub
add
mov
mov
jp
pop
sbb
pop
dec
add
ins
xchg
adc
cli
data16
pop
loope
aaa
xor
fxch
mov
pop
jne
and
sbb
ins
fadd
and
jnp
sub
std
mov
stos
(bad)
pop
and
dec
(bad)
add
icebp
xor
cmps
cmp
inc
call
push
jns
fdivr
inc
or
xchg
add
mov
(bad)
movs
ret
popf
pop
mov
pop
or
aad
mov
jmp
mov
sbb
ds
hlt
(bad)
cmp
push
outs
push
pop
xchg
add
and
inc
std
add
ror
ins
(bad)
jmp
aad
cmp
in
clc
dec
les
jno
jecxz
jo
popf
cmp
mov
leave
int3
in
or
sahf
out
(bad)
fcmove
movs
pop
mov
mov
push
mov
das
xlat
sub
sar
sub
lahf
or
loope
and
cdq
shr
je
add
push
xor
inc
adc
in
jl
mov
cdq
mov
mov
and
add
dec
aam
xchg
in
inc
dec
or
mov
and
pushf
push
dec
mov
dec
popa
shr
mov
jne
pop
dec
lock
push
fmul
cmp
or
xor
cs
inc
mov
test
push
mov
data16
xor
out
cmp
repnz
adc
mov
sbb
movs
mov
rcr
ja
xchg
iret
dec
or
and
retf
sbb
push
inc
or
inc
adc
cdq
(bad)
dec
test
cmps
div
mov
jg
mov
push
push
push
ret
dec
jge
call
retf
pop
fdivr
(bad)
test
and
and
clc
mov
clc
retf
add
hlt
out
popf
addr16
pop
push
sar
loop
clc
mov
imul
mov
cmp
cmp
(bad)
loopne
fbstp
pushw
xchg
add
add
xchg
adc
cli
sbb
jge
push
(bad)
call
xor
inc
jg
mov
xlat
sub
jnp
out
addr16
fwait
mov
ds
and
repnz
and
push
xlat
in
pusha
pop
sub
sbb
or
xchg
std
inc
pop
(bad)
dec
jb
ret
rol
aaa
mov
jg
push
in
add
and
sub
pushf
mov
cmps
xchg
inc
adc
mov
pop
mov
add
inc
mov
mov
add
repnz
push
test
shr
lahf
in
ficom
pop
movs
fidiv
or
push
xchg
or
in
push
arpl
imul
sar
clc
dec
jnp
dec
cwde
enter
inc
adc
(bad)
out
jne
movs
inc
mov
das
test
mov
mov
jmp
stos
sbb
cmps
repnz
inc
add
loopne
arpl
lahf
xlat
imul
jbe
lahf
loope
rcr
dec
xor
xor
int3
add
loop
sahf
and
loope
sub
xchg
loope
retf
test
lods
cmp
fdivr
rcr
inc
cmp
(bad)
in
(bad)
cmps
cld
lds
xor
jl
aad
push
mov
fdivr
pop
xor
int3
and
clc
int
sub
pop
mov
xchg
sub
retf
retf
out
dec
fild
jecxz
leave
out
pushf
cmps
cmp
sub
push
xlat
push
cmp
cmp
je
and
push
(bad)
jae
dec
pop
sub
lahf
or
int
sub
adc
cdq
pop
cmc
stos
mov
mov
sahf
dec
pop
out
push
push
pop
inc
mov
inc
lea
jmp
in
jns
mov
bound
sar
rep
sbb
int3
fisttp
jns
xchg
lock
and
or
dec
cmps
aam
push
addr16
xchg
outs
jecxz
repz
and
cmp
out
dec
call
sti
xchg
push
out
inc
dec
mov
adc
dec
xor
push
div
stc
fucom
and
clc
jge
jae
push
adc
push
movs
xor
jmp
push
jge
arpl
aaa
fs
in
mov
outs
out
ret
mov
ficom
sti
inc
test
push
adc
mov
sti
push
mov
mov
mov
js
mov
(bad)
mov
in
fisubr
mov
(bad)
outs
mov
ds
in
jp
arpl
mov
jecxz
add
(bad)
sub
cmps
scas
sub
sub
fcomp
call
psrad
jp
arpl
sbb
push
or
push
and
inc
pop
(bad)
mov
xchg
stc
loop
pop
pop
in
lods
or
pop
sar
xlat
out
push
rcl
aad
cmp
pop
xor
and
adc
btr
cmp
popa
xor
or
aaa
pop
sbb
imul
fwait
adc
clc
mov
mov
cwde
sub
mov
outs
jno
retf
sti
jge
add
cmp
mov
and
sbb
(bad)
jge
popf
into
sub
in
sub
mov
ins
loop
data16
xlat
sahf
aaa
mov
cmp
cwde
out
nop
mov
jnp
or
iret
ret
mov
adc
sbb
fnstsw
(bad)
outs
mov
enter
fwait
or
jne
mov
sub
scas
mov
outs
into
fild
inc
movs
mov
xor
jg
jmp
imul
das
into
(bad)
cld
fcmove
(bad)
daa
mov
sbb
repz
sbb
add
int3
inc
inc
or
stc
mov
jg
push
test
add
dec
jne
and
comiss
cmp
cwde
sbb
push
xchg
ss
repnz
xlat
adc
pushf
mov
std
jbe
xor
rcr
push
or
dec
jmp
out
sub
mov
push
ins
push
lea
ds
jmp
les
test
and
cmps
cld
out
aaa
call
mov
scas
(bad)
mov
mov
(bad)
mov
mov
call
and
aam
mov
cld
mov
es
sub
mov
mov
stos
out
cmp
fisttp
and
jecxz
and
div
push
push
or
add
mov
mov
(bad)
(bad)
mov
add
xor
dec
(bad)
sub
lahf
aad
sub
and
jmp
ss
mov
push
mov
and
cmc
out
ins
xlat
sub
jo
cmp
outs
pusha
div
std
add
test
or
push
lea
mov
stos
loop
cmp
pop
pusha
sbb
inc
aad
imul
and
push
mov
mov
retf
aaa
or
mov
sbb
cmp
adc
icebp
das
mov
jns
test
gs
loopne
data16
(bad)
stos
in
call
je
jecxz
xchg
pop
dec
adc
push
lahf
rol
sbb
jno
mov
aad
iret
mov
or
jmp
push
jbe
xor
ins
jg
imul
push
rol
retf
fucom
jns
add
mov
push
test
xor
ret
popa
arpl
fdivr
rol
pop
(bad)
cmps
mov
or
sbb
cmps
mov
shl
xor
sbb
(bad)
clc
sub
sub
fs
mov
test
mov
fwait
inc
or
dec
mov
jmp
xor
pop
push
jno
mov
lds
call
adc
mov
int
xchg
test
dec
pop
inc
mov
retf
pop
jno
imul
sub
mov
pop
jo
arpl
jae
hlt
xchg
push
dec
xchg
mov
and
pop
inc
jmp
call
add
and
clc
sahf
or
cmp
ret
pop
cwde
test
cmps
pop
imul
mov
sub
in
mov
imul
xor
or
jecxz
(bad)
test
pop
ins
mov
call
cmp
sub
cwde
pop
push
stos
inc
jne
cmp
scas
jmp
mov
jns
jmp
push
inc
xor
mov
inc
punpckhbw
dec
ret
pop
pop
pop
mov
in
jns
dec
enter
test
aam
sub
out
or
xchg
push
mov
dec
add
les
sbb
movs
mov
lahf
sar
adc
mov
in
jle
call
dec
add
cmp
call
jmp
push
jbe
test
jns
xor
or
scas
test
je
cld
sbb
je
fdiv
loop
dec
lds
push
jp
mov
sbb
fnstcw
fsubr
cwde
rcl
pop
test
push
stos
shr
ret
pop
sbb
scas
into
adc
call
push
loope
sbb
dec
dec
mov
jo
dec
pop
fild
test
and
rcr
push
imul
(bad)
mov
push
dec
push
fimul
stc
jle
pop
lahf
inc
scas
icebp
jmp
and
js
and
call
rol
sbb
outs
mov
xor
out
sbb
pop
adc
jns
dec
ja
or
or
cs
push
clc
and
jge
and
and
rol
push
mov
pop
sub
inc
dec
ret
mov
test
test
mov
pop
test
shl
mov
add
ret
dec
(bad)
and
cmp
dec
lea
test
fsub
es
js
push
and
pushf
dec
and
mov
mov
into
icebp
mov
mov
arpl
adc
shl
add
cdq
jp
cdq
aaa
mov
das
int
dec
mov
fwait
inc
repz
jnp
dec
push
push
pop
mov
test
xchg
test
jg
sbb
outs
(bad)
out
mov
clc
jno
js
push
inc
lods
ret
mov
mov
push
sti
dec
mov
fistp
jno
dec
jecxz
mov
add
cmp
sub
popf
add
inc
pop
mov
pop
popa
inc
rcr
and
pop
pushf
push
sbb
sbb
mov
rcr
sub
in
fwait
pop
imul
out
adc
and
fimul
and
sub
hlt
fdivr
sar
(bad)
or
xchg
dec
jmp
(bad)
dec
push
not
and
mov
jmp
shrd
cmp
test
enter
jbe
lock
aas
jbe
and
mov
xor
and
push
mov
or
cmps
fs
in
xchg
arpl
ss
es
add
neg
mov
(bad)
mov
mov
idiv
aam
cmp
and
leave
mov
xchg
mov
(bad)
adc
(bad)
std
inc
push
cmp
mov
leave
push
cmp
std
dec
add
jecxz
inc
mov
push
mov
aas
ret
xchg
jle
mov
cmps
jmp
push
cmps
out
inc
push
and
and
and
sub
jmp
and
dec
arpl
dec
ss
xchg
pop
movs
in
jb
imul
and
push
aaa
dec
test
aam
jl
mov
jbe
inc
sbb
add
mov
or
aad
push
fiadd
xchg
stos
pop
loopne
popf
pop
sbb
sub
scas
mov
cmp
jl
mov
and
pop
pop
add
cmps
(bad)
arpl
mov
push
int3
jno
cmps
fistp
aaa
test
xor
sub
(bad)
push
mov
fsub
add
xor
cmp
out
stos
sbb
sbb
stos
daa
out
xlat
cs
mov
scas
cdq
sbb
xor
sbb
jmp
(bad)
ins
loopne
xor
adc
push
push
sbb
shr
outs
dec
nop
movs
mov
scas
mov
pushf
pop
pop
sub
jmp
push
mov
out
mov
out
std
push
and
mov
mov
pop
xor
jb
xchg
jge
xchg
push
and
xchg
and
imul
or
xchg
xor
or
std
xchg
shr
retf
daa
in
shl
pop
adc
loop
lods
movs
jge
dec
add
lds
xlat
inc
inc
mov
std
in
cli
(bad)
repnz
fbld
in
xor
sub
fdivrp
in
cwde
push
mov
scas
test
fistp
xchg
rcr
push
push
cld
mov
es
jg
adc
loop
popa
sti
sub
ficomp
push
sub
shr
inc
pop
repz
in
xor
and
cmp
sahf
and
add
data16
inc
shl
xor
jne
sub
ins
mov
pop
adc
icebp
daa
in
cmps
push
add
sub
repz
push
adc
inc
loop
xor
pop
jns
mov
inc
aaa
pop
sub
mov
mov
fld
in
cmp
stos
or
test
ds
test
mov
outs
xchg
gs
stos
call
lds
mov
cmc
xor
ds
js
mov
repnz
cmp
(bad)
adc
xchg
push
and
fmul
pop
imul
test
mov
pop
int3
xor
sub
cld
mov
mov
call
xchg
sub
jmp
xor
sbb
push
outs
fdivp
imul
dec
sub
sbb
push
cdq
test
lock
mov
jne
inc
mov
outs
shl
enter
dec
hlt
sbb
outs
xchg
les
shl
ds
jnp
int3
mov
sbb
or
dec
push
mov
inc
cmp
das
sar
mov
call
sbb
mov
cld
and
test
mov
adc
dec
push
mov
cmps
imul
or
push
aaa
cmp
jb
outs
add
ror
xlat
lods
pop
dec
adc
pop
mov
mov
add
xchg
daa
aad
mov
mov
pusha
mov
fiadd
test
jno
xchg
and
inc
pop
in
pop
jg
repz
sub
push
xchg
cmp
int
hlt
mov
sbb
jbe
(bad)
and
fnstcw
cmp
ins
mov
dec
xchg
les
(bad)
pop
arpl
je
repz
xchg
aas
fst
mov
jno
jmp
stos
ror
loopne
sbb
dec
loope
sti
fdivr
cmp
or
mov
inc
stos
int
aas
sub
push
sbb
rcl
lea
je
mov
xchg
cwde
movs
jg
push
loopne
rol
cmp
mov
fild
aaa
out
pop
call
adc
pop
(bad)
mov
ins
sub
xchg
loopne
inc
jl
bnd
mov
add
adc
and
cs
std
mov
out
cwde
jo
sbb
xchg
pop
(bad)
je
pop
gs
clc
test
mov
popa
cmp
fmul
cwde
mov
cwde
cmc
sbb
ja
(bad)
xchg
add
aas
mov
ret
add
mov
inc
mov
movs
xor
retf
jae
mov
xchg
jno
popa
adc
mov
push
mov
and
adc
push
mul
or
push
add
push
arpl
ins
push
pusha
jb
push
xchg
jg
jns
cmps
mov
pop
fisttp
push
fadd
(bad)
out
sbb
cmp
iret
xchg
jmp
pop
lds
in
pop
dec
xor
cmp
cmp
jp
mul
dec
cli
pop
add
ins
test
mov
mov
stos
shr
call
icebp
in
bound
inc
hlt
xchg
push
test
aas
adc
rcr
mov
jb
and
cmp
stos
retf
lods
or
push
sbb
das
test
sub
sbb
jnp
xor
ja
mov
movs
test
pop
xchg
ins
push
ins
and
pop
lods
mov
call
pop
or
out
xor
hlt
mov
cdq
in
inc
cmps
jle
test
mov
jl
xchg
mov
jb
mov
sahf
mov
push
into
jb
and
xchg
addr16
push
rol
jo
mov
mov
push
inc
fcmovnbe
xchg
adc
mov
out
pop
adc
outs
or
pop
cmps
sar
push
shl
or
dec
dec
das
dec
pop
dec
mov
jo
push
les
push
test
sbb
mov
pusha
xor
scas
ds
xchg
mov
pop
sti
repnz
pop
dec
in
cld
(bad)
jp
sub
pop
jg
xor
jg
add
ins
pop
mov
cmp
push
and
inc
sbb
pop
pusha
jnp
in
test
inc
in
add
add
popa
sbb
sbb
ficomp
mov
ffree
cs
fisubr
fwait
push
and
(bad)
fcom
xor
cmp
mov
test
and
jbe
mov
aas
mov
jns
adc
mov
inc
js
lea
sub
fwait
popa
fcomp
fld
or
shl
movs
loope
daa
pop
push
je
mov
loope
mov
pop
inc
inc
jb
rcl
dec
stos
jle
mov
xchg
cld
xchg
inc
call
enter
jecxz
fistp
fild
xchg
ror
mov
adc
xchg
lea
jbe
jl
cmp
lea
pop
movs
push
ret
mov
and
or
(bad)
mov
jge
push
pop
inc
fadd
cmp
cmp
push
test
stc
jo
adc
sahf
jnp
and
mul
in
fsubp
mov
daa
mov
cli
or
jbe
add
movs
ret
test
loope
pop
aaa
ret
cmp
xor
imul
leave
sbb
pop
xor
push
lock
xor
xchg
fwait
loopne
loop
push
je
push
outs
or
inc
mov
pop
fsubr
in
clc
mov
loopne
xor
mov
mov
inc
push
mov
dec
or
sbb
repnz
and
cmps
ret
mov
adc
mov
aam
or
jns
ror
jecxz
int3
enter
or
scas
mov
or
or
mov
call
mov
fidivr
sub
xor
ror
shl
loopne
fs
call
add
sub
and
gs
mov
jge
js
push
jb
lahf
push
pop
cmp
cmp
add
sub
push
lds
nop
sub
xor
push
movs
inc
into
sub
shl
hlt
push
mov
push
test
add
mov
mov
jno
movs
xchg
call
lods
in
ret
mov
out
jae
ret
movs
push
jmp
add
jp
and
mov
cld
mov
push
adc
bound
dec
lock
gs
or
mov
and
inc
in
jb
enter
cwde
dec
xchg
add
lods
aad
shl
cmp
rcl
ins
test
imul
dec
mov
sti
xchg
sahf
iret
cwde
mov
push
inc
leave
fst
dec
pop
(bad)
fisub
pop
mov
pop
mov
hlt
movs
std
(bad)
jmp
ss
jne
movs
nop
scas
add
lahf
sub
adc
sbb
lds
outs
inc
push
pop
adc
dec
mov
adc
jecxz
fdiv
lea
push
leave
add
or
jmp
jns
pop
pushf
mov
ficomp
(bad)
into
jmp
sub
test
repnz
xchg
jbe
inc
pop
mov
fidiv
xor
out
pop
xchg
xor
mov
xlat
data16
adc
dec
div
jno
push
sub
cmps
call
les
cmp
mov
ret
inc
ror
cmp
inc
xor
push
ss
pop
shl
inc
and
cld
jbe
mov
sub
xchg
or
mov
scas
lea
in
(bad)
nop
imul
clc
jae
retf
cmps
loope
pop
inc
js
cmp
fld
jo
inc
cmp
aas
scas
addr16
dec
fst
push
cmp
cwde
and
mov
addr16
or
mov
les
jge
and
push
pop
sti
mov
into
push
jns
ret
inc
or
(bad)
jge
and
xchg
sub
sbb
mov
sbb
sub
pop
out
dec
in
push
sbb
mov
fld
sub
scas
cmp
aam
movs
add
push
sbb
or
mov
mov
shr
mov
shr
movs
fisttp
cld
mov
scas
or
cdq
mov
out
mov
pop
cmps
int3
test
mov
mov
pop
push
jo
sub
int
push
mov
scas
push
dec
mov
xor
fisubr
cs
cmc
into
cmps
stos
mov
pop
mov
imul
fs
jge
cmc
cmp
xchg
mov
and
add
je
cmp
outs
pop
mov
es
push
mov
hlt
or
jle
jmp
add
test
stos
mov
sar
arpl
fdivrp
cli
pop
ror
jb
pop
mov
sbb
mov
in
out
dec
movs
adc
cs
ss
sub
add
(bad)
sub
xor
add
and
xor
pop
pop
ja
and
aad
pop
repnz
sbb
retf
ror
mov
sahf
test
jmp
sbb
cmps
pop
int3
push
ss
(bad)
ss
test
sub
mov
das
and
mov
outs
jg
mov
gs
fpatan
mov
pop
inc
pop
pop
lds
dec
mov
test
mov
push
rcl
jmp
pop
into
push
in
push
dec
jg
sbb
pop
(bad)
fsub
mov
stos
sbb
lods
cmp
jmp
fisttp
fcomp
enter
sahf
fstp
xchg
sub
adc
and
rol
cdq
ficom
xchg
loopne
scas
out
(bad)
inc
sti
icebp
aaa
adc
xlat
les
push
(bad)
cmp
adc
lea
sar
cmps
loope
pop
imul
mov
and
(bad)
jle
add
fs
push
or
imul
popa
push
and
icebp
sub
out
jg
cwde
outs
xchg
iret
outs
ret
out
dec
nop
mov
xchg
dec
dec
xchg
lods
ror
push
js
loop
lds
pop
dec
mov
xor
and
fcomp
pusha
mov
dec
cmp
pusha
loope
and
outs
popf
xchg
mov
xchg
movs
dec
les
pop
data16
adc
sub
retf
mov
scas
shl
lea
sbb
or
sub
adc
fst
add
cli
pop
inc
dec
sbb
mov
test
stc
and
sbb
(bad)
mov
hlt
sahf
lods
in
push
jne
sbb
out
je
shl
jmp
sub
jae
xor
arpl
aaa
xchg
icebp
lods
dec
push
fscale
sbb
inc
(bad)
call
mov
lock
adc
push
es
cmp
icebp
inc
call
push
ja
test
dec
cwde
mov
sti
je
cmp
dec
fdivr
pop
mov
addr16
cwde
lds
xor
dec
inc
int
jmp
jmp
sub
out
mov
in
jns
mov
out
and
jb
fst
xchg
clc
loope
cmp
call
out
fisub
mov
cmp
inc
sbb
xchg
clc
sub
xor
sbb
rep
add
xchg
mov
adc
retf
xchg
push
cmp
or
mov
inc
pop
in
movs
test
inc
repnz
aaa
xor
cmp
sub
retf
mov
adc
mov
or
test
fdivr
fcom
popa
nop
retf
test
sti
xchg
ss
push
dec
dec
cmp
or
jb
jle
call
xor
cli
mov
int
bound
leave
aaa
shr
outs
push
mov
push
push
icebp
adc
neg
(bad)
cmp
mov
movs
xchg
les
call
and
dec
pop
add
inc
aam
aaa
(bad)
outs
pop
imul
je
outs
xor
rol
jp
cld
sbb
aas
sbb
and
mov
out
hlt
mov
mov
ins
sub
xchg
cmp
test
sbb
mov
bound
popf
jge
in
pusha
lahf
mov
jge
jmp
mov
sbb
mov
mov
inc
inc
iret
out
adc
lods
xor
fdiv
fst
or
popa
or
js
and
lahf
add
(bad)
in
mov
mov
xor
movs
inc
scas
mov
in
push
sar
(bad)
cs
mov
xchg
xor
jge
mov
cld
test
or
xor
or
stos
adc
enter
stos
fiadd
imul
push
mov
xchg
mov
es
jne
mov
jo
xchg
mov
xchg
aad
add
out
fwait
dec
sub
adc
int
mov
pop
adc
cwde
jnp
fs
push
loope
(bad)
retf
sub
mov
frstor
stc
dec
jl
std
stc
cmp
sahf
div
imul
push
push
enter
(bad)
sti
fwait
out
xchg
mov
or
lea
or
into
xor
ret
loopne
pop
sbb
jns
mov
xor
shl
sbb
dec
or
movs
or
push
int3
or
pop
pop
das
aam
movs
dec
xchg
push
mov
repnz
jp
add
pop
scas
xchg
mov
mov
fistp
adc
dec
pop
add
pop
pusha
adc
ss
dec
mov
sbb
mov
inc
adc
xor
(bad)
mov
int
(bad)
movs
test
xchg
add
push
xchg
ss
icebp
test
dec
cmps
jae
push
test
popf
add
daa
mov
inc
leave
scas
in
hlt
jl
adc
mov
es
and
jo
cli
jl
in
hlt
aam
and
bound
ins
sub
hlt
push
out
mov
xor
mov
dec
ins
std
dec
in
jb
scas
push
xor
xor
cli
jp
aas
adc
mov
sti
push
loop
sti
daa
cdq
cwde
shr
sti
add
out
ins
inc
cwde
jb
jo
mov
or
lods
mov
retf
pop
push
lods
aam
add
mov
push
ja
jmp
dec
jae
xchg
xor
pop
popf
mov
mov
dec
loopne
adc
(bad)
mov
cmp
outs
or
arpl
dec
(bad)
cmp
mov
enter
add
das
mov
push
add
xchg
add
loope
and
hlt
jge
cs
dec
ins
cmp
jg
adc
mov
loope
xchg
jmp
(bad)
adc
inc
mov
mul
mov
dec
mov
fsub
or
movq
shl
cmps
call
mov
xchg
repz
mov
add
sub
jae
popa
cwde
push
ret
inc
cmp
int3
mov
test
xor
retf
mov
popf
sub
fdivrp
(bad)
jne
pop
xor
dec
repz
in
out
mov
test
dec
sub
jb
mov
rcr
(bad)
push
rol
push
sub
test
mov
js
adc
popa
lahf
add
mov
mov
shr
test
mov
loopne
xor
jp
pop
lods
xchg
jno
cmp
xchg
es
std
inc
or
sub
jg
and
sub
or
pop
jns
adc
sbb
sahf
pop
dec
mov
mov
popa
repz
(bad)
(bad)
xor
push
in
(bad)
call
imul
jl
in
pushf
retf
pop
mov
jp
xchg
mov
add
movs
hlt
push
adc
cmp
mov
mov
jg
cmp
xor
sub
mov
fcomp
xchg
dec
add
mov
(bad)
xchg
jmp
cld
jl
push
je
add
mov
pop
mov
(bad)
cmp
ficom
add
lahf
imul
popa
or
adc
and
shl
stos
les
mov
test
movs
mov
out
mov
jo
cmc
xchg
mov
xor
int3
mov
pop
pop
test
imul
or
and
addr16
and
scas
xchg
pop
add
mov
test
push
or
popf
mov
iret
dec
mov
imul
(bad)
int
jge
inc
dec
mov
sbb
int
pop
cmps
(bad)
imul
shl
push
clc
mov
lods
nop
jg
adc
push
scas
add
aaa
inc
sbb
sub
push
pop
cmps
lock
add
popf
jecxz
cmps
dec
push
push
aad
popa
push
xchg
sbb
mov
cwde
push
js
add
fst
cmp
or
mov
cmp
mov
sub
loopne
xor
sbb
(bad)
scas
in
jg
clc
adc
mov
dec
shl
stos
iret
jo
cmp
fnstcw
and
cmp
inc
jne
xor
jbe
push
cmps
dec
das
sbb
inc
aaa
push
cmc
mov
and
ror
jg
push
cmp
mov
ins
push
dec
push
fstp
and
not
rcl
jle
repz
jbe
push
sub
fisubr
inc
rcr
popa
mov
push
xor
push
mov
dec
clc
sbb
xor
aas
jge
mov
in
mov
hlt
jmp
dec
sub
ss
mov
test
fsub
cmp
xor
push
cmp
jbe
cmp
adc
adc
jo
scas
cwde
jmp
inc
pcmpeqd
push
mov
lahf
imul
push
mov
xor
aad
data16
push
out
popf
push
xchg
mov
(bad)
mov
fldenv
lds
nop
(bad)
loop
xchg
jbe
cmp
stc
push
mov
dec
in
fwait
dec
xchg
xor
out
push
repnz
pop
(bad)
sub
movs
data16
fsubr
pop
dec
cmp
ds
or
xor
aad
in
sahf
and
pop
retf
sub
xchg
inc
sub
jo
mov
scas
or
imul
dec
add
xchg
stc
ins
js
fimul
rol
fcomp
pop
or
ins
dec
cmp
ds
pop
pop
pop
add
popf
in
mov
inc
scas
adc
pop
cmc
cmps
cmp
ins
scas
and
loopne
addr16
adc
shl
call
mov
mov
dec
dec
leave
add
xor
push
(bad)
push
icebp
sub
sbb
mov
jae
xchg
adc
movs
jbe
xchg
call
and
out
imul
add
cmps
imul
aaa
imul
mov
aas
and
push
std
mov
sub
adc
daa
inc
pop
cdq
mov
popa
sub
xchg
out
cmps
pop
ins
xchg
(bad)
fwait
add
pop
jecxz
leave
je
imul
and
pop
lock
add
xor
fidivr
mov
or
sahf
mov
leave
cmps
adc
scas
pusha
cmc
mov
dec
inc
sbb
repz
lods
pop
xor
sbb
or
(bad)
addr16
mov
fs
push
and
shr
mov
pop
push
pop
jl
cmp
aas
inc
xor
sbb
push
and
daa
test
iret
hlt
add
sar
scas
mov
int
stc
push
test
dec
cs
cmp
cmp
jo
inc
repnz
mov
add
xchg
nop
ret
scas
lock
xchg
push
sub
cwde
cmp
cmp
inc
dec
in
pop
loope
data16
push
inc
pop
lds
push
add
adc
aas
stos
outs
mov
arpl
ds
in
fs
jecxz
cmp
push
gs
aaa
sbb
ins
loope
fwait
ret
pop
sbb
jnp
test
retf
adc
aad
out
xchg
pop
out
fidiv
and
enter
call
push
adc
xlat
ins
test
pop
push
and
movs
xchg
iret
mov
xor
jnp
sar
shl
or
push
xor
cmc
aaa
inc
cdq
cmp
mov
mov
jge
pop
cwde
xor
sbb
pop
fisub
ret
nop
(bad)
add
mov
or
js
dec
jecxz
mov
jle
jno
cmp
xor
shl
xor
daa
jle
das
loop
stos
aam
or
test
call
xor
sub
pop
out
pop
aad
stc
(bad)
movs
addr16
jo
push
and
pop
inc
sub
daa
and
pop
mov
push
pusha
fisttp
pop
cli
(bad)
inc
ret
mov
mov
push
push
test
push
sbb
in
ja
pop
mov
mov
fwait
ins
retf
std
mov
popa
sbb
inc
lods
mov
std
add
jnp
int3
and
mov
movs
movs
loop
push
fild
cs
jmp
mov
xlat
pop
mov
lock
add
outs
in
ins
mov
sbb
loop
dec
ins
popa
(bad)
clc
fcmovne
sbb
repz
fisttp
scas
dec
div
or
and
sub
movs
cwde
mov
(bad)
xchg
pop
(bad)
imul
mov
enter
mov
mov
mov
fsubr
mov
movs
loopne
push
ins
fidiv
mov
and
or
inc
mov
ins
add
popa
gs
call
push
call
js
jg
outs
push
sbb
dec
pop
ret
inc
inc
or
dec
ret
xor
add
sub
dec
push
add
mov
out
mov
ret
adc
stc
jo
jg
inc
test
or
stos
(bad)
pop
not
inc
mov
sub
cs
aaa
ret
test
addr16
(bad)
and
cmc
addr16
jb
loope
adc
inc
jecxz
cwde
adc
or
mov
shr
inc
cmp
jns
dec
mov
(bad)
sbb
hlt
pop
add
out
lods
add
xchg
add
dec
je
cmps
popa
lods
scas
in
and
mov
aam
and
sbb
enter
es
jl
imul
jnp
sub
retf
daa
adc
movs
idiv
arpl
jbe
dec
arpl
cmp
xchg
sbb
push
scas
fisub
or
ret
add
cmp
shl
in
test
icebp
div
inc
pop
cmp
dec
jg
sbb
in
aad
mov
test
fld
xlat
nop
xchg
icebp
inc
mov
add
inc
mov
les
fsub
imul
in
jecxz
lods
push
dec
lods
mov
lods
daa
arpl
(bad)
xchg
cmp
mov
sub
stc
sbb
sub
ins
inc
dec
retf
mov
outs
das
fmul
inc
imul
loop
and
nop
xstore-rng
cmps
test
inc
ret
pop
hlt
cdq
xor
xchg
cmp
mov
mov
cmps
pusha
jno
shl
mov
lock
add
mov
fwait
dec
outs
inc
call
es
mov
sbb
push
movs
jge
sub
data16
adc
or
or
mov
scas
mov
scas
add
sub
ds
xor
dec
mov
pusha
test
push
fxam
daa
pop
std
sub
sar
adc
jnp
in
sub
lods
ins
xchg
cld
retf
ror
jno
fs
outs
inc
hlt
adc
jmp
movs
dec
ror
sub
mov
mov
or
jne
cmp
sub
sbb
aaa
inc
fadd
fmulp
or
lds
cmp
fs
add
add
or
enter
imul
in
jo
mov
int3
jb
fdiv
add
and
inc
or
mov
inc
out
popa
popf
xor
aas
mov
cmp
aam
jp
shl
lds
cmp
mov
(bad)
push
aam
ror
lods
std
or
push
jmp
in
xchg
or
lea
sub
mov
push
mov
sub
sub
sbb
xchg
jno
sub
enter
icebp
dec
mov
sub
cld
mov
in
push
shl
jnp
mov
das
in
sbb
mov
xchg
lods
jmp
in
add
aam
jmp
inc
aam
std
sahf
loope
shl
mov
fldcw
cmps
adc
cwde
mov
jle
push
inc
pop
mov
push
out
ins
lahf
and
mov
dec
sbb
cs
lock
push
rcr
sahf
int
mov
sub
fld
sub
dec
jecxz
push
jns
pop
test
repz
cs
or
call
xchg
mov
fsubr
dec
jno
mov
jno
add
fbld
push
mov
or
jo
pop
cmps
jns
mov
outs
jmp
push
repz
sub
lods
xor
xor
jnp
xor
imul
das
sub
add
cdq
jmp
data16
xor
mov
mov
and
sbb
sub
fild
scas
push
repnz
loope
sbb
pop
mov
or
pop
pop
xor
lods
or
sub
fldenv
repnz
ds
push
mov
xlat
test
ret
dec
rcl
pop
shl
ins
cs
sti
xor
and
aaa
inc
fwait
xchg
test
in
es
rol
scas
push
push
movs
dec
call
icebp
pop
cld
pusha
pop
jnp
sbb
mov
repnz
rcr
int
clc
jnp
cmp
inc
in
pusha
(bad)
ss
lahf
scas
xor
je
xchg
push
and
aas
jo
lahf
push
stos
xor
dec
ja
(bad)
push
xchg
aad
mov
mov
ja
xor
in
or
mov
add
(bad)
cli
repnz
call
out
or
bound
xor
mov
jns
ja
retf
xchg
into
cdq
movs
adc
stos
push
popa
adc
mov
cld
repz
imul
cdq
stos
fnstcw
mov
ins
push
push
inc
lods
push
leave
cwde
jne
loop
add
je
lock
push
mov
in
jbe
aad
jmp
pop
inc
cmp
cmp
aad
jne
shr
add
sbb
and
in
adc
inc
lahf
xor
js
add
stc
mov
mov
jno
mov
shl
xchg
loope
push
shl
pop
cld
cmp
push
sub
cmp
mov
mov
shr
or
inc
dec
dec
push
mov
aad
xchg
mov
mov
adc
jge
and
dec
cmp
lahf
xchg
gs
into
jmp
outs
mov
sub
call
mov
cmc
lock
cmp
sbb
inc
xlat
push
xchg
inc
imul
daa
(bad)
pop
jp
loop
cs
in
bnd
or
pop
sbb
push
sub
push
mov
sbb
pop
loope
lea
es
dec
inc
test
adc
leave
setae
scas
cwde
fsubr
aaa
mov
aas
mov
add
loop
es
and
in
data16
pop
jle
or
mov
mov
inc
out
test
sti
xor
pop
shl
js
iret
jmp
imul
ret
push
xor
getsec
push
jg
xchg
push
mov
clc
lahf
pop
fld
lea
add
iret
ret
mov
(bad)
mov
mov
add
dec
sub
ss
mov
mov
cmc
and
jb
mov
repz
cmp
jae
mov
lea
mov
add
mov
xchg
push
imul
in
xlat
add
retf
loop
mov
ret
sahf
xor
out
cwde
mov
add
and
out
lea
stc
mov
test
movs
adc
aad
mov
or
adc
mov
or
jge
cmp
cmp
jmp
xor
and
dec
test
pop
cmps
cld
sub
out
cmp
xlat
in
int
data16
popa
ret
dec
mov
pop
sbb
sub
fs
movs
shl
clc
jg
ja
int
push
leave
dec
cdq
push
or
jg
cmp
test
push
jp
fdivr
jnp
test
adc
lods
outs
cmp
push
dec
mov
shl
popa
sub
cdq
addr16
stos
push
mov
cld
pushf
test
or
(bad)
(bad)
outs
inc
mov
and
push
test
es
test
cmp
xchg
add
rcr
int
ret
jge
jmp
jae
fcomp
sub
xchg
dec
or
fisttp
or
jmp
lods
stc
dec
lods
xchg
add
call
push
iret
das
mov
out
out
jge
es
push
hlt
mov
add
aam
popa
add
inc
ror
cmp
push
and
aam
lods
scas
in
or
sub
inc
pop
push
dec
das
xchg
shr
sbb
dec
ret
xchg
mul
cmps
xchg
mov
ret
pop
or
scas
mov
shr
mov
loope
xlat
(bad)
jo
or
repnz
es
out
jl
push
outs
imul
call
pop
pcmpeqd
mov
out
hlt
dec
outs
mov
mov
mov
or
push
in
jmp
xor
mov
jmp
std
xchg
mov
enter
cmc
lea
mov
adc
pushf
inc
aam
rcr
pushf
jmp
call
je
(bad)
cli
out
dec
(bad)
into
jbe
pop
xor
cmp
push
mov
pop
jnp
sub
jb
jg
icebp
xlat
pusha
call
mov
pop
xlat
icebp
ds
aad
lea
pop
push
(bad)
sbb
popf
cmp
and
jmp
andnps
cmp
adc
outs
leave
pop
mov
ja
pusha
mov
mov
mov
mov
iret
ds
sbb
xchg
cmp
imul
sub
neg
dec
(bad)
adc
xchg
push
subps
mov
inc
jecxz
int3
adc
jge
mov
sbb
imul
fdecstp
cmp
mov
test
sbb
xor
imul
or
jg
pop
aaa
push
push
inc
stos
lock
test
mov
fidiv
mov
stos
jge
nop
inc
and
mov
dec
jecxz
inc
jmp
xor
adc
arpl
out
mov
mov
(bad)
repz
jne
xchg
dec
int3
in
daa
cmp
test
xchg
xor
repnz
dec
bnd
into
pop
pop
jp
and
push
xor
jp
iret
sbb
rcl
std
fs
mov
scas
or
sbb
adc
fist
test
and
aaa
cmp
xchg
push
jnp
(bad)
out
jle
in
push
dec
dec
cmp
data16
pop
leave
int
shr
mov
(bad)
aas
shl
jmp
retf
aas
ret
push
mov
rcl
sub
repz
ret
cld
jnp
sti
stos
fisttp
(bad)
cmps
xchg
pop
jl
in
jecxz
outs
test
out
movs
mov
mov
cmp
lods
mov
pop
(bad)
jmp
imul
mov
out
sbb
adc
call
mov
repnz
push
sbb
(bad)
shl
lock
jns
sbb
dec
jnp
mov
mov
xchg
mov
cwde
std
call
mov
shl
dec
mov
lds
jp
jae
pusha
rol
ds
aam
loopne
dec
sub
jle
xor
adc
push
inc
stos
xchg
test
mov
movs
or
gs
ins
push
sbb
pop
pop
mov
sar
add
adc
imul
ss
bound
push
(bad)
adc
pop
mov
fistp
sbb
dec
jns
stos
push
xor
hlt
js
(bad)
imul
sbb
loop
push
lea
ret
sub
imul
lods
mov
jnp
dec
push
scas
fcmovnu
sub
xchg
gs
dec
jle
push
(bad)
cmp
jns
aad
ficom
clc
ficom
and
mov
loopne
mov
addr16
lods
sbb
mov
movs
hlt
icebp
dec
jno
loopne
mov
daa
cmps
imul
movs
xchg
and
mov
outs
sbb
dec
ret
add
mov
dec
cmps
(bad)
or
push
xor
inc
aad
lds
mov
lods
fimul
mov
mov
dec
push
jle
popa
popf
test
outs
repz
push
scas
in
sbb
push
cwde
add
sub
mov
push
push
or
add
mov
out
ja
pop
dec
je
jecxz
stc
cli
mov
fs
or
add
(bad)
mov
repnz
cmc
sub
cld
jge
fcom
mov
fs
arpl
aam
sub
lods
cmp
jmp
ret
ds
mov
aaa
ret
sub
dec
loopne
lock
fcmove
sub
cmp
cmp
mov
add
jno
out
es
icebp
iret
adc
mov
addr16
out
pop
(bad)
(bad)
mov
ja
mov
bound
mov
hlt
fsubr
call
and
js
sbb
(bad)
(bad)
jmp
xchg
icebp
push
in
cs
inc
mov
dec
addr16
das
inc
in
test
jno
jne
sub
cmp
leave
xchg
add
iret
std
mov
ds
lahf
cmc
sub
cs
jns
mov
aam
mov
in
out
jne
(bad)
enter
xor
pop
mov
nop
mov
lock
shl
lea
push
cmp
mov
mov
out
dec
inc
das
dec
es
repnz
inc
or
sub
dec
or
mov
in
adc
clc
bound
(bad)
sbb
or
xchg
into
mul
aaa
add
pushf
push
mov
in
add
and
sbb
lods
sbb
push
cmp
xor
shl
pop
and
jns
add
mov
xor
mov
int
sub
lahf
retf
jmp
outs
in
imul
ins
je
lea
dec
mov
add
repnz
pop
and
sbb
push
sbb
push
pop
or
push
sbb
js
mov
movs
add
lds
dec
push
xor
dec
leave
xchg
retf
loop
xchg
mov
xchg
shr
xchg
lds
cmc
(bad)
dec
or
mov
outs
xchg
(bad)
pusha
push
stc
inc
cdq
movs
pop
or
push
push
push
fidiv
jge
popf
jns
sti
inc
int3
and
sbb
mov
pop
call
ror
jmp
popf
sbb
and
push
mov
adc
xchg
mov
mov
inc
sbb
cmc
dec
(bad)
adc
int3
mov
jge
mov
mov
xlat
scas
xchg
nop
sub
or
push
push
sub
(bad)
fistp
fiadd
imul
lock
sbb
jmp
cmp
(bad)
ss
dec
adc
adc
mov
les
dec
xor
(bad)
sbb
stos
mov
call
mov
loopne
cmc
sub
pushf
sysenter
lods
out
ror
push
adc
jmp
ret
jnp
mov
mov
adc
sbb
mov
loope
and
dec
fist
mov
inc
mov
(bad)
in
out
shr
xchg
dec
push
std
xchg
call
add
inc
leave
pop
out
push
fs
pop
cmps
xchg
dec
jmp
arpl
popf
dec
aam
mov
ins
and
cmp
sbb
sbb
inc
in
stc
stc
inc
xchg
push
and
and
mov
mov
pop
or
cmps
je
mov
pushf
xchg
test
cmp
cmc
test
fwait
cmp
scas
in
mov
mov
pop
out
or
jle
fcmovb
je
xchg
adc
jmp
popf
xchg
cs
adc
addr16
scas
outs
scas
clc
pop
call
push
mov
rep
mov
push
pop
repz
and
scas
stc
popf
popf
fs
pop
lock
out
scas
fcomp
mov
call
sbb
int
mov
xchg
ins
stos
(bad)
xlat
js
jae
add
fs
adc
pop
xlat
pop
jp
loopne
outs
cmp
scas
jecxz
mov
pop
adc
xlat
mov
int3
push
push
ss
mov
xor
mov
adc
cld
rcl
xchg
mov
loopne
int
push
or
mov
sub
add
(bad)
cld
neg
sub
mov
mov
fmul
mov
imul
sbb
outs
test
loop
pop
pop
xchg
dec
add
xchg
loop
rcr
sar
pop
aam
ins
pmaxsw
jl
push
and
cmc
(bad)
fst
fwait
gs
or
in
mov
mov
and
and
jl
jmp
loopne
inc
push
(bad)
out
sub
sub
xor
lds
repnz
call
cmp
inc
mov
and
jge
mov
dec
push
cmp
outs
out
xor
icebp
int3
cld
pop
inc
loop
inc
mov
mov
loop
mov
icebp
and
adc
push
dec
xor
mov
jle
in
arpl
jne
mov
dec
mov
dec
icebp
pop
daa
xchg
ins
cmp
mov
pop
mov
pop
xchg
(bad)
std
pop
and
mov
xchg
mov
movs
mov
jl
popf
jl
(bad)
ins
in
sub
jecxz
dec
mov
clc
jns
cmp
das
and
mov
fild
out
mov
jl
mov
adc
mov
sti
mov
xchg
div
not
popa
gs
adc
mov
(bad)
jg
xchg
aam
push
ret
js
inc
cmc
push
inc
xlat
add
cmp
shl
aad
es
pop
cmp
mov
cmc
jmp
cmps
(bad)
sbb
loop
inc
repnz
outs
mov
xchg
push
inc
rcl
lds
sub
mov
ins
add
push
and
xchg
call
cmps
repz
cwde
mov
gs
xlat
dec
xor
adc
mov
or
sub
cmc
repz
push
pop
mov
shl
pop
in
in
pop
cmps
cmp
jae
push
mov
cmp
int3
or
in
in
lock
mov
dec
and
mov
imul
cmps
(bad)
fld
stc
pop
stos
inc
cwde
add
lods
jo
cmp
or
pop
in
sbb
mov
fst
and
stos
dec
retf
imul
pop
dec
fdivr
adc
mov
call
xrelease
dec
ss
es
sti
xchg
in
fcom
xor
into
shrd
pop
mov
out
lds
icebp
mov
sahf
sub
or
mov
bound
setle
test
scas
push
out
imul
jp
lea
movs
dec
daa
ud1
push
lods
and
xchg
arpl
dec
and
sbb
mov
lds
test
add
sub
mov
pop
lfs
add
adc
repz
cmp
mov
pop
(bad)
push
aad
and
in
sbb
jb
ds
popf
sbb
add
adc
mov
repnz
(bad)
fimul
sti
neg
mov
add
inc
push
lock
gs
mov
ins
or
mov
xchg
les
and
cwde
jecxz
jnp
ja
cmc
pop
mov
and
mov
ins
inc
pusha
jg
push
(bad)
fadd
jp
push
fsub
fs
adc
xchg
mov
add
xchg
mov
pusha
in
ret
pop
add
lea
pop
fcomi
push
retf
sti
push
(bad)
or
rcr
frstor
pop
mov
jmp
les
inc
arpl
js
aam
retf
push
jne
outs
cmp
adc
ret
aad
rcl
mov
mov
cmp
lds
hlt
dec
push
test
fwait
or
nop
xchg
mov
imul
jae
mov
out
cs
push
test
stc
mov
mov
fsubr
mov
in
ins
jecxz
mov
mov
xchg
mov
cmps
fs
ds
jae
sbb
cdq
int
sub
mov
pop
add
jl
ret
inc
test
daa
pop
pshufw
jge
jo
(bad)
push
mov
std
dec
loopne
adc
sbb
jle
in
add
jecxz
mov
retf
data16
lock
inc
cmp
mov
dec
jno
aaa
mov
rol
xchg
scas
xchg
js
or
shr
iret
sbb
loop
mov
cmp
in
pop
popa
mov
popa
and
push
inc
out
sub
pop
mov
scas
mov
lods
mov
ds
mov
jbe
push
mov
pop
sub
xchg
aaa
push
cmp
loopne
mov
aas
call
add
dec
mov
test
fwait
push
addr16
sbb
(bad)
mov
ret
ret
pop
sub
dec
inc
jl
aam
clc
add
cvtps2pi
sub
add
je
inc
jp
stos
mov
push
xor
pushf
or
or
aam
loope
and
sbb
xor
pop
ins
xor
int3
scas
loopne
dec
pusha
cld
inc
and
sub
adc
adc
mov
xchg
pop
jmp
push
std
add
push
fmul
xlat
mov
pop
mov
jb
jmp
inc
(bad)
scas
jmp
pop
push
std
ret
stc
in
sub
adc
jae
mov
and
adc
(bad)
push
sbb
jp
mov
jmp
xchg
hlt
pop
xor
mov
mov
fdiv
cmp
jmp
push
fwait
pop
pusha
nop
inc
dec
fild
stos
push
pushf
imul
aad
pop
repnz
ds
mov
int3
mov
hlt
ret
dec
vmovdqa
push
loop
sbb
jns
mov
(bad)
sti
mov
cmp
call
adc
push
fidivr
pop
adc
(bad)
cld
shl
xlat
inc
jns
adc
mov
dec
mov
jnp
mov
mov
ja
fmul
popf
in
lea
mov
test
mov
mov
fs
pop
push
mov
pop
pop
mov
inc
jae
cmp
out
call
sbb
jo
xor
sub
or
xchg
test
xor
jp
push
cld
jmp
dec
ins
add
pushf
jbe
leave
dec
movhps
cmp
xor
mov
test
lahf
add
jmp
jmp
clc
xchg
mov
hlt
call
cli
scas
xchg
pop
xor
aas
int
sub
enter
out
cwde
sub
push
in
das
mov
mov
inc
out
sbb
push
sub
sub
outs
mov
cmps
add
call
xor
inc
xor
jo
cmp
sub
jl
push
loope
fs
or
fwait
hlt
mov
push
sti
nop
out
scas
call
int3
call
or
jns
out
loopne
mov
mov
xor
fwait
pop
shr
es
pusha
div
sbb
popf
imul
ret
pop
dec
xlat
mov
jp
mov
hlt
inc
cmp
cmc
fwait
inc
int
jmp
pop
xchg
mov
mov
rcl
push
jg
xor
outs
cmc
adc
and
add
add
leave
jb
(bad)
mov
adc
or
dec
xchg
sti
sub
ror
push
xchg
inc
add
pop
cli
jae
add
test
sbb
lds
ret
add
and
sar
add
mov
xchg
movs
mov
adc
fisttp
in
cmp
sub
dec
inc
add
dec
xor
inc
mov
jo
lods
pushf
xor
xchg
cmc
add
sub
cld
nop
(bad)
pop
add
js
or
icebp
mov
mov
lods
jns
cmp
inc
mov
test
sbb
mov
jge
xor
ret
in
mov
jae
xchg
lods
jbe
pop
rcr
xchg
aaa
jbe
sbb
mov
push
pusha
stos
mov
inc
and
aaa
mov
push
retf
fidiv
repnz
lock
dec
dec
cmc
mov
imul
cdq
dec
out
cmp
stc
xchg
mov
cmp
arpl
popf
xor
push
and
leave
cld
pop
(bad)
cs
rcl
dec
sbb
inc
cmp
add
jmp
jne
cmp
cmp
gs
into
shr
scas
stos
mov
add
sbb
leave
pop
jecxz
call
call
fild
add
repnz
dec
push
cli
mov
stos
and
add
js
int3
repnz
adc
jmp
push
inc
cwde
iret
aad
rcr
jp
inc
push
mov
xor
mov
adc
das
test
fs
ss
inc
icebp
cmps
popf
mov
sub
std
icebp
lock
adc
jl
into
inc
lods
es
std
dec
or
std
cld
lahf
mov
mov
arpl
mov
jns
ins
test
aaa
or
push
pop
and
jo
(bad)
test
add
xor
mov
xchg
jg
or
and
ja
inc
xchg
movs
xchg
mov
(bad)
setno
repz
cmps
or
adc
mov
loop
or
test
mov
or
pop
hlt
push
pop
sti
loop
dec
xchg
jne
and
mov
and
xor
adc
stc
jb
and
dec
(bad)
sub
int
cmc
adc
jbe
push
ds
sti
popf
out
imul
test
add
(bad)
fistp
cs
mov
jae
stc
iret
lock
sub
rcr
sbb
mov
mov
idiv
push
outs
cmps
hlt
cmp
out
push
mov
inc
fnsave
repz
adc
test
push
mov
fisttp
jmp
inc
mov
in
sbb
movs
movs
add
sub
or
cld
test
ins
scas
or
mov
push
mov
xchg
(bad)
push
xor
ss
ds
call
mov
call
rol
leave
push
dec
and
dec
pop
retf
inc
data16
jo
add
mov
enter
ins
inc
sub
sub
icebp
jmp
ret
in
pop
mov
add
jl
loope
push
inc
es
add
mov
mov
in
xor
sub
fstp
not
ret
inc
mov
jb
fisubr
xlat
mov
sub
xchg
cmp
push
add
push
jnp
ss
dec
adc
clc
and
arpl
jno
sbb
arpl
jmp
aad
xor
add
sbb
push
sahf
daa
jmp
(bad)
sbb
pusha
enter
and
mov
dec
sub
pop
stc
loopne
sub
inc
stos
or
shr
cmp
daa
pop
lods
sub
adc
in
jnp
add
xchg
jmp
pop
mov
lods
and
pop
xchg
imul
cwde
pop
xchg
into
push
cs
repnz
imul
lahf
or
mov
fsub
ins
push
popa
adc
data16
dec
gs
(bad)
aam
out
inc
mov
mov
jl
outs
mov
mov
retf
dec
inc
add
repz
aas
aas
cwde
je
sub
jno
xchg
ror
movs
jb
not
add
xchg
adc
xor
aaa
int3
dec
cmc
shl
push
leave
and
cmp
lds
int3
push
arpl
xor
dec
mov
mov
inc
or
sub
dec
inc
add
cdq
ja
fist
mov
xchg
cwde
cmp
xchg
or
aad
and
ss
aad
clc
out
ja
lods
dec
jae
lods
scas
mov
xchg
mov
lods
ins
out
test
mov
repz
jl
push
dec
mov
cs
cwde
pusha
(bad)
movs
xor
popf
cmp
sbb
(bad)
mov
dec
std
ja
arpl
ins
push
add
ffree
ret
int
int3
clc
mov
sbb
adc
int3
adc
push
in
lahf
les
scas
(bad)
cmp
mov
mov
cmc
cmp
jne
sub
adc
adc
loop
lahf
pop
std
enter
xchg
inc
lds
push
push
pop
aad
fwait
mov
ret
ficom
mov
or
mov
mov
leave
push
ret
scas
add
retf
adc
inc
retf
dec
jnp
lahf
xor
pop
inc
cmps
pop
xor
push
dec
xchg
dec
out
inc
scas
fldcw
in
iret
push
push
stc
sub
add
ss
movs
add
in
(bad)
xor
xor
aad
jg
cmp
retf
stc
fbld
adc
sub
ins
mov
out
push
clc
mov
mov
inc
mov
ret
fld
scas
xchg
retf
xchg
cmp
pusha
test
enter
ror
jg
dec
fs
out
ins
inc
fnstenv
sahf
xor
cmps
mov
cmovg
cmp
bound
fcmovnb
pushf
in
sub
hlt
push
mov
adc
std
rcl
dec
mov
sub
(bad)
mov
mov
shr
xchg
neg
call
or
mov
sub
ret
pop
pop
(bad)
xchg
sub
popf
xor
mov
in
test
dec
leave
nop
fcom
mov
retf
(bad)
mov
mov
inc
mov
mov
jge
pop
mov
inc
mov
mov
inc
ss
std
cmp
xchg
ins
xchg
fwait
xor
rcr
xchg
in
and
mov
ret
mov
test
xchg
mov
test
jmp
pop
iret
push
pop
cs
int3
aam
add
inc
sar
add
lahf
push
mov
shl
jbe
dec
test
xchg
pop
out
xor
arpl
mov
push
mov
sahf
mov
daa
ins
push
mov
mov
jno
mov
(bad)
nop
cmp
fsub
inc
jecxz
into
(bad)
jp
push
loopne
xchg
cmp
sbb
std
imul
jb
sahf
push
aam
mov
test
jl
add
dec
pop
add
sub
xchg
xchg
push
into
push
jp
sti
movs
or
in
lahf
aad
mov
dec
test
mov
inc
cmp
push
std
pop
shr
(bad)
jp
inc
icebp
ins
out
push
pop
out
jne
or
xor
adc
into
sub
dec
jecxz
jb
cmp
mov
les
cmp
and
shr
loop
and
rcl
and
dec
(bad)
test
or
xor
jg
jmp
pop
dec
retf
dec
sbb
push
or
icebp
nop
inc
test
add
fidivr
fs
cmp
fidiv
xor
rcl
push
test
pop
xchg
pop
(bad)
shl
add
cmp
movs
int3
dec
imul
xor
std
mov
fldenv
icebp
mov
fwait
scas
je
sub
imul
mov
fimul
cli
jge
loope
inc
adc
or
and
sub
cmp
pop
jae
or
jp
jo
ins
cdq
imul
loope
xor
(bad)
repz
cmp
es
sub
add
xor
out
js
ret
icebp
scas
jno
aaa
lea
mov
adc
xor
repz
xchg
sub
pop
dec
leave
cmp
add
dec
cld
jge
imul
test
cmp
call
cmps
mov
ret
out
mov
sub
pop
loopne
push
aaa
ds
iret
push
push
cwde
fs
clc
and
shr
lahf
dec
pop
(bad)
js
jb
rcl
aaa
je
ret
mov
cmp
mov
mov
mov
xchg
mov
mov
test
sub
mov
adc
sahf
dec
cmp
ins
ds
loopne
sub
shr
mov
jmp
add
inc
in
sub
cdq
retf
cs
fsubr
push
xchg
xchg
es
push
dec
cmp
pop
popa
pop
push
cdq
cdq
in
mov
das
fwait
push
jg
mov
mov
scas
imul
push
jae
pop
sub
pop
sahf
int3
das
jb
(bad)
xlat
iret
inc
movs
xchg
call
(bad)
scas
pushf
push
xchg
sub
arpl
repnz
mov
ret
dec
cmp
mov
imul
cmp
daa
jno
mov
test
call
dec
sub
cwde
loopne
in
hlt
sbb
add
je
icebp
jns
inc
xchg
mov
mov
aas
aas
cld
sub
fild
in
dec
test
es
ja
push
pop
imul
pusha
cmp
sub
mov
(bad)
mov
and
data16
aam
cwde
loopne
mov
rcr
jp
jg
stos
add
fild
mov
jmp
inc
int3
outs
test
fwait
inc
ror
push
popa
mov
sub
sbb
lods
pop
push
clc
push
push
mov
push
push
setle
push
int3
jo
mov
jl
sbb
js
cwde
xor
in
inc
sbb
lea
adc
or
mov
pop
mov
out
jae
jecxz
or
push
(bad)
into
sbb
adc
test
pop
adc
xchg
shl
xchg
mov
gs
adc
adc
push
fld
pop
leave
xchg
stos
ffreep
popa
test
adc
jne
std
or
sub
inc
pop
mov
jmp
dec
jnp
loope
xor
inc
nop
mov
add
inc
mov
jmp
and
call
push
jno
pop
sbb
retf
icebp
and
xchg
add
xor
dec
mov
ret
jmp
cmp
retf
sbb
out
ds
inc
es
xor
sbb
sbb
mov
mov
aas
pop
or
xor
mov
retf
loopne
xchg
mov
jno
sbb
push
push
mov
sbb
xor
jnp
rol
xchg
nop
(bad)
sbb
xchg
push
mov
mov
fisttp
faddp
push
call
lods
call
in
into
jns
inc
inc
cwde
rcr
pop
popa
arpl
or
and
call
and
retf
cmovo
xchg
or
(bad)
mov
sub
sbb
sbb
sub
sub
mov
inc
xor
sti
xchg
shr
adc
pop
test
or
outs
xchg
test
cmp
xor
(bad)
adc
retf
nop
cwde
test
dec
fcmovnbe
cmc
cmc
add
xchg
test
mov
(bad)
call
or
imul
dec
mov
mov
enter
xchg
int3
repnz
xchg
push
loopne
test
lock
jmp
lea
inc
test
push
popa
sbb
ja
mov
aas
push
jle
(bad)
int
sub
xchg
repz
rcl
ret
and
add
mov
mov
clc
pop
mul
lahf
out
in
(bad)
popa
leave
test
jne
out
pusha
in
mov
ds
outs
je
ret
nop
lock
xor
(bad)
daa
fs
(bad)
stos
mov
cwde
push
mov
stos
into
inc
mov
loopne
test
xlat
shl
test
rcl
mov
ficomp
repz
call
cdq
lock
sti
mov
das
ins
jbe
pop
and
pop
js
lods
test
adc
jle
in
and
jbe
out
not
xchg
jp
or
test
dec
mov
mov
xor
add
sub
sar
and
daa
jnp
js
and
push
ss
repz
add
mov
mov
xor
pop
dec
cs
fistp
mov
in
adc
pop
cwde
sub
mov
(bad)
dec
movs
enter
neg
cs
mov
mov
imul
sbb
xchg
call
mov
out
pushf
jmp
lods
dec
or
ficom
shr
sbb
shr
(bad)
cli
xor
in
xchg
jp
movs
add
or
cmps
cmp
xchg
xor
shl
cdq
mov
sbb
or
test
inc
shl
outs
sar
push
mov
cs
or
jmp
pop
cmp
sbb
shl
cmps
pop
xchg
(bad)
cli
and
jge
inc
jo
push
mov
sbb
retf
pusha
stos
test
jno
mov
pop
into
out
or
stos
add
popf
fcmovb
stc
ret
lods
sub
add
push
sub
bnd
sbb
mov
push
xor
inc
or
sbb
test
cmp
shl
loop
add
xchg
imul
sub
out
dec
dec
rcl
push
sub
mov
test
sbb
jp
and
inc
dec
xchg
in
ins
fldenv
popa
push
mov
imul
xor
jne
fs
xlat
adc
inc
ret
jecxz
repz
cdq
sbb
test
lea
lods
dec
in
cmp
xor
(bad)
mov
fucomip
iret
or
dec
test
jecxz
jno
add
pusha
jne
mov
push
mov
jge
jmp
(bad)
addr16
push
js
mov
pusha
cdq
mov
call
cmp
inc
daa
dec
fistp
outs
dec
ja
add
leave
cli
xor
dec
test
jns
cwde
outs
rcr
fwait
int
sbb
(bad)
in
xor
sub
cld
xor
xchg
mov
xchg
pop
add
mov
jmp
in
cmp
test
mov
sbb
xor
jno
loop
fcomp
pop
mov
rol
add
jmp
fadd
call
rcr
push
int3
out
xchg
dec
into
xchg
xchg
fwait
jbe
dec
les
cmp
xchg
repnz
cmp
fisttp
cmps
ds
mov
call
sbb
sbb
adc
call
cmp
xor
and
fsubr
mov
or
add
add
enter
sub
mov
daa
adc
je
xchg
je
mov
add
(bad)
aam
cld
mov
jo
cmp
(bad)
xchg
pop
mov
cmp
cdq
cmps
(bad)
out
push
out
std
push
and
daa
data16
or
adc
out
movs
frndint
scas
(bad)
add
(bad)
stos
lahf
and
sub
mov
hlt
call
adc
mov
fisttp
dec
rcl
cmp
and
cs
jb
adc
call
mov
test
jl
iret
xor
mov
xor
mov
hlt
pop
and
pusha
es
xor
mov
repnz
pop
pop
sti
dec
jnp
ror
enter
out
jbe
aas
jne
nop
jo
js
cli
or
dec
int
jecxz
or
daa
cmp
cmp
bnd
fimul
cmp
fldenv
and
cld
nop
pushf
imul
pop
fistp
jecxz
pop
xor
fwait
push
or
sti
das
adc
bound
inc
jne
push
pop
leave
out
push
pop
inc
cld
arpl
adc
(bad)
in
xchg
push
xchg
int
xor
xchg
test
mov
mov
mov
push
push
cmp
popf
fcmovnbe
scas
push
test
and
shr
xor
and
out
movs
add
mov
rol
add
enter
mov
mov
adc
std
push
pop
pop
pop
das
sbb
cmc
xrelease
mov
cmp
sbb
dec
pop
iret
push
shl
loope
sub
dec
xor
lods
mov
loopne
and
ret
(bad)
cld
push
sbb
pop
push
mov
jbe
pop
cmp
sub
scas
sbb
(bad)
iret
out
mov
mov
pop
xor
mov
xor
or
popa
cmc
sbb
test
cld
fldcw
dec
shr
ja
push
es
sbb
out
push
add
repnz
cmp
(bad)
mov
jae
fs
and
hlt
or
xchg
or
fiadd
out
imul
inc
jl
and
retf
into
push
out
adc
in
popf
xor
jbe
loop
dec
dec
jnp
dec
xor
mov
pop
dec
dec
daa
cdq
cmps
cmps
shl
push
dec
arpl
sbb
cmp
sub
dec
imul
out
ror
sub
add
nop
and
pop
jo
ins
pop
xor
jno
shr
mov
or
jnp
imul
mov
mov
jo
test
add
fcmovbe
mov
aam
test
daa
jno
scas
inc
mov
push
or
addr16
cmp
es
in
add
mov
xchg
cld
int
pop
(bad)
lods
jnp
cdq
jg
push
push
jp
repnz
bound
mov
jmp
add
stos
aas
es
xchg
(bad)
ins
movs
fdivr
adc
mov
pop
sub
mov
add
fldenv
add
jp
outs
jl
mov
pusha
stos
outs
cmp
jle
out
pop
ja
adc
add
rcl
scas
inc
call
xchg
je
movs
sbb
add
jge
fdivr
inc
xchg
retf
pop
cli
cmp
cmps
and
sub
adc
popf
adc
inc
repnz
(bad)
test
or
repz
or
fild
call
xchg
mov
stos
xchg
mov
mov
fidiv
cmp
xchg
or
(bad)
(bad)
idiv
jnp
fdivr
(bad)
fldl2e
xor
adc
pop
mov
adc
arpl
mov
loopne
mov
sbb
pop
outs
add
mov
movs
sar
fmulp
leave
rcr
mov
outs
ins
mov
ficomp
adc
std
loop
sbb
inc
mov
sbb
inc
mov
dec
out
add
test
sub
push
xchg
dec
jno
cmps
out
out
div
dec
(bad)
ds
(bad)
loop
loopne
(bad)
push
das
cmp
or
mov
retf
mov
xlat
mov
cmp
stos
inc
add
mov
push
cld
add
and
mov
retf
call
add
push
and
fwait
outs
xlat
into
(bad)
mov
add
mov
sub
cmp
inc
pop
mov
in
add
mov
in
dec
push
fs
loopne
add
xchg
das
cli
and
xchg
mov
test
shl
adc
sub
mov
jnp
lock
mov
pop
mov
(bad)
sbb
adc
push
shl
xor
shr
or
sahf
inc
jbe
cmc
stc
xchg
mov
int3
adc
xchg
and
sbb
nop
and
mov
jecxz
mov
std
add
loop
xlat
int3
push
pusha
stc
(bad)
pop
jl
dec
ds
jb
loop
add
sahf
sub
mov
cmp
retf
inc
cdq
inc
mov
daa
adc
or
sbb
adc
enter
and
adc
xor
mov
jno
jp
sbb
inc
fild
dec
jg
sbb
mov
test
arpl
dec
mov
mov
inc
(bad)
inc
pop
sbb
aam
arpl
(bad)
ret
adc
cmps
outs
push
mov
scas
push
push
fistp
jae
jno
push
ja
loopne
jl
ret
jbe
mov
mov
add
ror
mov
xor
cmp
mov
dec
ror
arpl
jo
and
jmp
xor
std
je
cmp
jmp
bound
mov
in
shl
(bad)
fbld
shl
mov
sub
mov
push
mov
lds
cs
ja
xchg
adc
enter
cld
cmp
or
scas
daa
es
jo
or
sub
fldenv
adc
enter
stos
push
test
imul
into
outs
outs
cmps
mov
loop
pop
jmp
bound
inc
fucomip
outs
nop
xchg
test
or
stc
nop
xlat
data16
sub
jmp
pop
cld
xor
out
outs
mov
retf
(bad)
ins
pop
pop
xchg
mov
pop
(bad)
sbb
fnstcw
mov
fdivr
jbe
ss
(bad)
std
jb
and
jns
and
je
repnz
stos
push
and
fistp
fwait
sbb
stos
ja
je
inc
jmp
fiadd
icebp
hlt
mov
and
jbe
in
jmp
mov
ds
inc
pop
jge
push
ds
and
or
jge
arpl
mov
mov
xchg
xor
jg
xchg
mov
pushf
addr16
int3
xchg
sbb
ds
pop
sbb
pop
push
add
pop
mov
ins
mov
mov
pushf
cmps
mov
cmp
xor
pop
cmp
fdivr
mov
cwde
stos
sub
daa
in
popw
enter
test
or
push
xchg
push
mov
cmc
adc
inc
ret
fs
fmulp
in
or
cmp
fwait
xor
imul
or
mov
pop
sub
call
cmp
mov
pop
mov
mov
sbb
pop
call
imul
jne
or
cs
mov
into
mov
out
out
ins
bnd
stos
lods
aaa
mov
aas
movs
in
or
nop
imul
ins
dec
int
test
add
push
leave
push
xor
jns
mov
jle
mov
cli
pop
add
jns
xor
imul
fadd
rep
ret
pop
cs
jno
cld
sbb
int
int3
clc
fwait
call
movs
and
fwait
lods
rcl
jns
in
jo
lods
call
movs
cmp
adc
or
and
fdivr
jecxz
mov
cs
jmp
sbb
icebp
das
and
jge
dec
ret
pop
aam
mov
int
pop
mov
adc
repnz
shl
pop
xchg
mov
sub
push
ret
sahf
xchg
xchg
mov
dec
sub
setbe
fwait
or
stc
lahf
test
mov
xchg
or
popa
jo
inc
xor
sub
jne
cmp
pop
retf
cs
fstp
hlt
call
push
xchg
fisttp
push
cmps
movs
in
pop
xor
dec
push
fsubr
scas
or
jmp
lahf
loopne
aaa
mov
loope
cs
jl
jle
(bad)
loope
mov
(bad)
adc
scas
xor
es
sub
stos
push
ret
imul
inc
rol
sub
mov
mov
and
sbb
jne
das
scas
clc
xor
mov
int3
add
(bad)
dec
xor
loope
jg
xchg
xchg
jae
cs
mov
outs
dec
jmp
mov
cdq
and
lds
push
out
jae
xchg
(bad)
and
mov
mov
dec
sbb
xor
loopne
repnz
pop
loop
mov
push
mov
ins
(bad)
xor
push
xor
dec
loopne
push
cmp
scas
cmps
js
nop
push
lods
ror
arpl
pop
jmp
repnz
or
popf
jp
nop
(bad)
stos
adc
aam
pop
sti
inc
cmp
icebp
es
lods
mov
inc
mov
or
fcom
in
sbb
stos
inc
inc
mov
ret
mov
inc
inc
push
test
jo
jmp
adc
dec
xchg
fiadd
clc
std
xchg
mov
sub
mov
icebp
out
cmps
inc
lods
xchg
or
mov
mov
sbb
in
fs
xchg
sbb
mov
and
pop
gs
lods
jge
adc
jmp
mov
or
test
enter
xor
jns
cmps
sub
jecxz
outs
(bad)
repz
retf
out
inc
jae
xchg
mov
jne
mov
mov
push
push
xchg
xchg
adc
(bad)
push
dec
daa
fld
scas
mov
leave
mov
push
adc
(bad)
xor
sub
and
mov
fild
fld
jmp
and
jecxz
jp
stos
push
or
pop
out
bound
int3
dec
int3
jmp
ss
mov
cmps
stc
mov
enter
int
into
adc
pop
out
pop
scas
push
icebp
mov
mov
mov
xchg
pushf
int
and
inc
pop
shl
js
push
test
pop
push
xchg
retf
sbb
retf
jns
add
xchg
adc
daa
mov
shl
mov
sbb
fistp
sti
push
dec
xchg
xor
stc
dec
xor
lods
sahf
mov
lds
xchg
js
fisubr
xor
lods
xlat
mov
mov
or
cli
lods
imul
mov
ins
sti
outs
push
inc
push
inc
and
cmps
or
nop
imul
or
lea
out
call
cmps
push
dec
sar
shr
adc
adc
dec
or
ret
in
call
mov
stos
retf
out
popf
stos
aam
xchg
in
ficom
sub
mov
jmp
dec
std
fcmovnbe
sub
jbe
je
ins
mov
mov
mov
sbb
loope
int3
out
fucomip
fstp
push
ins
mov
push
jle
and
dec
pop
xor
jae
pop
dec
rep
jno
repz
push
or
aam
inc
out
repnz
into
(bad)
xor
cwde
inc
inc
imul
jns
xchg
cmp
mov
mov
das
in
push
cwde
dec
xchg
pop
add
jp
cmp
jg
cmp
adc
dec
bound
clc
pop
pop
cmp
sub
add
aas
sub
fimul
or
out
clc
imul
inc
cmp
jmp
mov
and
daa
lods
mov
sbb
dec
or
cmps
cmps
xchg
loope
iret
mov
lods
cmp
jo
xlat
daa
push
es
jae
and
and
lods
shl
or
push
arpl
mov
pop
xchg
cmp
call
sub
xchg
jne
add
pop
cmp
imul
pop
inc
hlt
shr
cli
mov
sahf
mov
outs
xchg
cmp
xor
in
add
mov
es
into
mov
dec
mov
dec
dec
fcom
dec
or
aad
xchg
and
xor
jecxz
jp
into
fnstcw
mov
sub
cld
ja
scas
out
xchg
ins
add
mov
mov
mov
lahf
mov
inc
adc
in
lods
call
push
mov
hlt
jnp
jecxz
sbb
cmp
mov
ret
sbb
xchg
fwait
adc
out
mov
and
fsub
aad
push
jp
dec
pop
inc
addr16
test
adc
xchg
sub
test
int3
adc
mov
int
hlt
hlt
pop
les
and
popf
pushf
fiadd
and
mov
jp
scas
jp
inc
fidivr
add
in
xor
and
jmp
stos
pop
push
jmp
mov
push
and
mov
adc
jb
in
sbb
xchg
jecxz
adc
dec
jns
pop
and
sbb
and
addr16
scas
jge
adc
inc
push
aaa
ins
dec
mov
cs
shl
loope
loopne
and
push
xchg
pusha
cmp
aas
jns
pop
repnz
pop
pop
fnstsw
add
int
cmc
loopne
sub
mov
bound
jmp
mov
push
push
mov
xor
mov
push
inc
inc
outs
ins
jo
arpl
out
push
mov
fwait
sbb
(bad)
nop
outs
sti
mov
enter
ins
mov
or
mov
sbb
mov
bnd
and
test
push
pop
enter
stos
scas
xchg
ins
mov
sub
scas
and
mov
cmp
push
and
pop
or
leave
mov
fisttp
daa
cwde
cdq
retf
je
enter
mov
repz
sbb
in
fnstenv
hlt
outs
and
jnp
mov
cwde
pusha
push
inc
xchg
pop
fisub
rcr
sub
add
jmp
sbb
fwait
test
lds
scas
nop
mov
sub
clc
test
fwait
pop
mov
mov
cli
jecxz
jbe
mov
rcr
cli
xor
cwde
jo
pop
ficomp
loopne
stos
dec
push
inc
xchg
lahf
xchg
addr16
test
xchg
adc
sbb
gs
xchg
in
mov
adc
fwait
dec
push
gs
mov
adc
ret
mov
cmps
sbb
cmp
repz
push
xchg
sub
call
pop
aam
pop
jo
imul
mov
pusha
push
(bad)
and
add
repnz
loopne
cdq
cwde
in
cwde
test
mov
jbe
pop
push
lods
cmp
adc
lds
iret
add
push
mov
in
lea
push
mov
dec
in
pop
inc
stos
fmul
and
mov
shl
jb
int
popa
pop
inc
cmp
sub
jbe
in
daa
mov
xor
call
jnp
jbe
mov
fld
adc
pusha
push
and
es
lahf
shl
push
iret
aaa
scas
xchg
(bad)
push
sbb
stos
icebp
adc
retf
mov
les
xchg
clc
jb
sti
es
push
stos
xor
jo
arpl
push
(bad)
ror
clc
adc
xor
retf
jmp
call
mov
clc
in
dec
adc
cs
and
mov
movs
or
sub
clc
scas
rol
daa
add
jl
push
cld
imul
or
hlt
aaa
jb
test
jge
push
sahf
repz
inc
test
dec
mov
push
mov
je
jmpw
sub
test
mov
and
loop
jnp
(bad)
addr16
mov
and
inc
cs
je
inc
leave
push
xchg
int3
loopne
movs
setbe
hlt
xchg
aam
loopne
and
repz
pop
cmp
fidivr
stos
shr
pushf
test
imul
add
xchg
retf
jg
shl
call
cmp
sub
mov
jmp
enter
adc
enter
loop
out
pop
push
pop
jne
pop
int3
pop
mov
sahf
call
ret
fist
adc
mov
mov
add
jnp
inc
out
aam
mov
pop
sbb
retf
add
jmp
mov
mov
js
arpl
outs
call
sbb
loope
jge
inc
ins
sbb
aas
inc
jnp
or
mov
and
inc
enter
mov
in
pop
mov
and
popa
mov
add
push
sub
popa
leave
mov
ror
das
ret
test
repnz
bound
cmc
mov
sub
mov
mov
adc
pop
aas
in
and
jmp
xor
xor
arpl
lea
sub
loop
imul
pop
test
sbb
or
add
ss
or
lods
pop
repnz
jmp
aaa
inc
pop
sub
sbb
inc
outs
(bad)
lock
mov
into
sbb
stc
adc
xor
and
push
retf
in
ficomp
in
cmp
stos
mov
jecxz
icebp
pop
cmp
fwait
adc
out
dec
xor
popaw
movs
fidivr
xchg
sbb
xor
or
dec
fsubr
mov
sub
imul
lock
push
jns
ffree
popa
mov
and
repz
pop
cli
jbe
dec
iret
aad
mov
adc
mov
xor
adc
pusha
test
sbb
mov
adc
push
xchg
pop
sbb
aas
pop
aaa
cs
(bad)
jge
cs
clc
icebp
js
fwait
push
inc
fnsave
pusha
adc
lds
push
daa
mov
mov
rcl
in
int3
cdq
jb
mov
lods
mov
mov
sbb
je
aas
jns
xchg
(bad)
push
dec
xor
addr16
sahf
jns
jp
xchg
pusha
cmp
xchg
push
adc
adc
pop
(bad)
aam
push
ret
mov
mov
add
jl
cmp
pop
adc
sbb
cmps
lea
push
aad
mov
stos
(bad)
in
dec
repnz
mov
jmp
xchg
pop
aaa
les
out
loopne
or
ds
push
inc
inc
neg
(bad)
cwde
mov
jns
push
mov
fild
pop
mov
cmp
js
cmc
xor
sbb
cmp
sti
aad
icebp
pop
scas
out
cld
mov
pop
or
jns
mov
mov
jecxz
mov
fnstsw
xchg
jmp
das
aad
lock
mov
daa
or
xchg
int
and
dec
mov
loop
test
ss
mov
sti
mov
xchg
push
daa
xchg
lods
fdiv
mov
xchg
(bad)
fs
leave
mov
cmp
xchg
mov
mov
or
cmp
jg
jmp
aas
xor
and
retf
(bad)
loope
jmp
jmp
imul
add
or
enter
mov
shr
xlat
fst
push
push
mov
cmc
aas
in
loopne
das
push
cmp
inc
push
in
and
fadd
stos
inc
push
push
dec
push
fwait
fwait
pop
out
cmovge
xchg
mov
test
sbb
retf
sbb
mov
sub
mov
ds
ins
out
inc
xchg
push
jo
mov
add
sub
popa
call
jbe
shl
jo
imul
pop
(bad)
ins
cld
xor
mov
bound
aaa
inc
mov
loop
fcomp
icebp
gs
aas
mov
pop
test
mov
jg
jmp
xor
mov
pop
out
test
cmc
inc
shl
scas
mov
sti
fwait
xchg
xchg
and
out
adc
enter
cmp
adc
arpl
mov
ror
test
adc
push
adc
adc
scas
(bad)
mov
sbb
jecxz
sbb
mov
adc
aam
retf
ins
and
fxch
stos
inc
stc
pop
mov
jp
nop
into
adc
dec
xor
and
sbb
adc
mov
loop
push
repnz
std
mov
scas
xor
mov
jns
sti
push
cwde
stos
sub
xchg
mov
les
cmp
dec
xchg
sub
mov
clc
cli
int
int
iret
xchg
les
cmps
mov
mov
jbe
ja
adc
sub
ror
js
mov
std
inc
pop
xlat
pop
pop
push
mov
scas
sub
not
sti
add
dec
and
push
imul
jbe
popa
std
popf
or
popf
loopne
loope
adc
jno
inc
int3
mov
out
sbb
pop
cmp
jo
xor
aam
inc
xor
fcomip
sar
popf
adc
dec
in
and
cmps
jbe
out
inc
pop
mov
in
call
and
add
ret
jne
xchg
or
addr16
jb
pop
mov
fdiv
dec
and
hlt
xchg
lahf
test
mov
std
lock
xlat
push
out
call
aad
push
icebp
pusha
outs
xchg
les
push
add
out
pop
(bad)
mov
aad
or
ins
adc
mov
gs
sbb
js
push
aaa
dec
loope
test
adc
xchg
call
das
mov
and
sbb
nop
mov
mov
and
inc
cmps
je
and
or
adc
(bad)
mov
mov
mov
call
sbb
icebp
(bad)
cld
and
xchg
or
lods
fld
lods
pop
add
mov
hlt
mov
sbb
push
add
cmps
ds
sbb
jge
imul
push
call
cmp
jns
and
xor
scas
fnstcw
fisttp
add
or
(bad)
mov
fadd
xchg
pop
aam
fsubr
or
imul
bound
in
mov
mov
or
jno
sub
rcl
(bad)
dec
xchg
aas
mov
jae
adc
jecxz
fs
pop
inc
jl
xor
lods
pop
es
mov
cs
nop
loope
loop
sbb
pop
fisubr
and
jnp
mov
xchg
fmulp
call
or
mov
mov
outs
out
pop
inc
push
adc
outs
sti
and
sbb
retf
xor
jg
aas
neg
pop
pop
push
retf
out
or
in
out
outs
mov
rcr
retf
mul
ret
movs
sbb
in
fisubr
dec
mov
lahf
or
or
mov
jbe
mov
jg
xlat
cli
ins
sbb
and
ins
xchg
mov
cmp
nop
jl
repz
jle
pop
aad
xorps
cli
adc
or
(bad)
popf
cwde
scas
mov
sahf
xor
add
sbb
pop
push
fldcw
icebp
and
mov
inc
jl
push
imul
or
xchg
mov
popa
ins
xor
mov
xor
xchg
pop
lods
ins
pop
add
jmp
cmp
jbe
cld
ds
fcmovnbe
jmp
(bad)
not
sbb
fsubr
and
jne
test
sbb
cmc
mov
push
rcr
neg
dec
xor
inc
in
cmp
outs
dec
cmp
xor
out
bound
xor
imul
pop
in
lahf
lock
jmp
lods
cmps
dec
ss
pop
mov
add
push
shl
and
popa
inc
cdq
inc
inc
and
ins
lods
cmp
sar
test
pop
addr16
shl
push
inc
test
ret
mov
dec
div
loope
mov
pop
(bad)
in
cmp
xor
xor
je
add
(bad)
xor
lds
xchg
pop
das
sbb
mov
in
sti
mov
stc
fnsave
and
inc
arpl
pop
xlat
fs
aas
loop
fbstp
repnz
inc
jmp
pusha
in
mov
std
push
stos
into
mov
ror
sbb
inc
das
cmp
stos
test
rcr
leave
xchg
sbb
std
mov
sub
ffreep
inc
sbb
addr16
adc
and
(bad)
sar
ins
push
xchg
mov
push
outs
sti
mov
ja
pop
dec
mov
mov
jns
mov
into
jnp
mov
xlat
leave
jle
mov
iret
mov
movs
jne
inc
jns
(bad)
adc
sti
(bad)
es
push
xchg
or
icebp
pop
jg
(bad)
call
and
fstp
jle
mov
je
pop
mov
out
test
or
cmp
pop
xor
fnsave
out
push
mov
push
rcl
jbe
push
mov
outs
cmp
jae
icebp
jae
loope
ror
and
jbe
shl
in
std
add
test
sbb
dec
icebp
test
imul
imul
rol
repz
cli
jmp
aas
cli
pop
fcomip
cmps
call
xor
mov
sub
mov
add
xchg
sub
aas
(bad)
and
iret
ss
or
jle
sbb
ss
test
stos
inc
sbb
nop
aam
push
fwait
sbb
xor
(bad)
adc
loopne
aam
add
sbb
scas
adc
(bad)
call
in
mov
sti
fdivr
das
mov
xlat
jo
cld
stos
inc
add
(bad)
jp
push
sub
xchg
inc
mov
into
(bad)
in
test
pop
inc
push
sub
mov
fcmovb
cmp
adc
add
add
cmp
inc
shl
sbb
aad
(bad)
pop
das
mov
daa
mov
sahf
fs
sub
jp
ja
retf
lds
xchg
out
outs
clc
add
es
and
xchg
mov
ret
gs
clc
(bad)
in
mov
out
mov
mov
ret
inc
inc
or
and
call
shl
loope
sbb
jecxz
jle
repnz
stc
fidiv
xlat
lea
sub
leave
adc
cmovae
fcom
dec
fisttp
test
pop
mov
jmp
lods
mov
sbb
push
cmc
cmp
imul
ins
dec
cmp
cwde
jmp
and
test
call
jae
cmp
or
lock
mov
sti
mov
cdq
gs
rol
popf
out
xor
fisub
push
test
mov
test
lods
adc
dec
mov
sub
das
in
mov
jl
sub
ins
cli
pop
es
into
ret
cmp
mov
jno
in
mov
and
jo
shl
mov
fmul
push
pop
rep
(bad)
xor
cmp
stc
pop
push
(bad)
add
test
xchg
clc
mov
dec
inc
ret
mov
mov
push
popa
clc
ss
jge
xor
ja
or
idiv
dec
push
sub
lods
retf
imul
scas
cmp
mov
adc
mov
jmp
adc
or
push
mov
std
push
jg
or
xor
shl
mov
shr
in
mov
mov
hlt
inc
and
mov
xor
daa
pop
cmp
cmp
gs
cmps
faddp
sar
dec
out
test
sub
or
in
mov
adc
shr
cmp
or
adc
push
int3
push
sub
(bad)
sub
cli
fimul
aas
add
pop
adc
push
pop
jbe
push
div
jmp
sbb
ins
lahf
pop
push
rcr
(bad)
std
adc
xchg
in
push
fcom
pop
or
adc
(bad)
pop
por
popf
xchg
fist
ja
(bad)
xchg
nop
inc
repnz
xchg
movs
fnstcw
mov
mov
leave
(bad)
std
(bad)
sar
pop
jno
stos
xor
cmp
mov
cwde
pushf
sub
mov
and
sbb
push
test
jmp
mov
cwde
mov
push
js
gs
aas
in
adc
pop
xor
cmps
int
hlt
inc
mov
sahf
xchg
popf
fcomp
jle
inc
ret
fstp
sbb
mov
add
xchg
fstp
adc
lahf
vmwrite
adc
ja
imul
out
stc
sbb
out
rcl
sti
mov
lds
daa
movs
mov
mov
jmp
sti
xchg
mov
push
sub
les
add
dec
inc
pop
cmps
btc
sub
push
mov
fadd
mov
mov
outs
mov
jge
cwde
sub
hlt
dec
jne
ins
sbb
cmp
jmp
rol
xchg
(bad)
mov
inc
adc
cmps
dec
xchg
sub
and
push
dec
xor
jp
pop
(bad)
inc
mov
gs
sbb
pop
pop
cmps
ret
sti
cmps
out
xchg
mov
inc
fdivr
xor
mov
push
popa
push
add
dec
inc
(bad)
ds
iret
inc
hlt
sbb
iret
(bad)
mov
mov
mov
ss
inc
popa
(bad)
jb
in
mov
xchg
mov
mov
ja
aam
(bad)
aam
retf
and
cmps
data16
xlat
push
dec
sbb
adc
cdq
ret
or
or
cld
stos
pop
test
cli
mov
(bad)
in
xor
dec
mov
lods
les
les
inc
out
or
adc
dec
fcmovnu
ret
shufps
(bad)
movs
into
sub
or
inc
adc
mov
repz
xor
cmp
leave
inc
outs
(bad)
sub
mov
pop
div
push
ret
pop
sahf
mov
push
or
movs
in
sbb
mov
in
cmp
sub
pop
test
jmp
xor
cmp
iret
xchg
addr16
sahf
fild
out
cdq
mov
add
cmps
in
fwait
ds
pop
mov
loopne
in
pop
mov
enter
mov
or
outs
in
test
inc
test
and
std
cmp
out
and
fstp
pop
sbb
adc
test
push
ins
pop
pop
or
fsubrp
cs
mov
xchg
mov
in
sbb
add
sbb
pushf
mov
mov
fxch
cli
cdq
ret
cmp
(bad)
not
(bad)
and
inc
inc
xor
mov
imul
aad
retf
dec
fstp
test
sbb
stos
mov
data16
jmp
les
push
dec
pop
or
push
stos
pop
cmp
xchg
je
jno
icebp
fdivr
cmp
add
jle
xchg
xchg
cdq
dec
xchg
xchg
cmps
jl
dec
imul
bound
cmp
je
sar
test
stos
sbb
aaa
lds
and
inc
pop
in
std
push
(bad)
in
adc
and
dec
jmp
inc
jmp
(bad)
arpl
cwde
inc
mov
clc
int
aad
and
mov
iret
in
mov
jbe
jl
jge
and
cmp
push
adc
xchg
and
mov
xchg
or
mov
fistp
xchg
loop
fisttp
and
mov
(bad)
mov
jge
sbb
push
pop
pusha
ret
dec
cmp
mov
mov
call
fsubr
es
xchg
sub
lwpval
mov
leave
test
xchg
sbb
adc
cmp
ret
mov
sbb
jne
lods
jp
pop
and
ins
jecxz
imul
icebp
dec
add
sti
or
loope
fwait
push
imul
inc
in
into
mov
pop
sahf
ret
add
pop
sbb
das
and
mov
or
(bad)
xchg
fldcw
call
xor
cmp
mov
pop
cli
jno
idiv
ror
scas
ds
or
fs
inc
movs
inc
out
jmp
xchg
mov
cdq
cmp
add
out
std
add
dec
std
fnstenv
adc
pop
int
pop
ja
sub
xor
outs
mov
adc
(bad)
ror
js
(bad)
mov
push
(bad)
mul
inc
ds
mov
fistp
out
and
scas
xchg
xchg
adc
dec
outs
or
dec
movaps
jle
dec
or
stc
inc
in
add
jmp
lea
mov
addr16
dec
(bad)
cmp
mov
ror
mov
sub
or
inc
movs
pusha
fmul
inc
fdivr
movs
lock
test
clc
mov
dec
mov
cmp
push
repz
or
repz
dec
int3
jmp
jne
and
popf
mov
add
ss
fwait
ds
inc
and
push
mov
in
sti
push
and
daa
lahf
or
push
aad
movs
cli
mov
mov
jbe
sahf
(bad)
les
sti
fimul
xor
arpl
sbb
lods
js
lds
mov
inc
mov
iret
sbb
add
cmp
add
retf
iret
adc
test
jo
pmulhw
jecxz
inc
xchg
dec
cmp
pop
sti
cmp
pop
jnp
(bad)
cmp
push
inc
test
mov
or
addr16
push
jno
lds
jbe
test
cld
jae
mov
es
mov
jbe
inc
leave
retf
xchg
lds
(bad)
pushf
mov
xchg
das
nop
pop
cmp
fwait
loop
mov
cmp
adc
mov
imul
call
mov
adc
es
jge
mov
mov
pushf
adc
stos
mov
in
sub
in
add
clc
(bad)
pop
jno
jb
imul
inc
outs
sub
push
push
mov
dec
lahf
sbb
fsubp
mov
enter
das
stos
push
mov
jnp
adc
and
sub
push
adc
and
test
cmps
sar
imul
or
inc
mov
dec
cmps
pmullw
jns
sbb
std
ret
mov
push
movs
inc
cmps
pop
inc
jge
repz
inc
ds
popf
mov
iret
adc
hlt
arpl
adc
cmp
sbb
mov
fwait
cdq
lods
fimul
ins
pop
mov
stos
inc
or
dec
psadbw
test
inc
test
mov
mov
sti
loopne
mov
pusha
sbb
fucomp
dec
stos
stos
(bad)
lea
bound
das
retf
sbb
aas
jmp
ret
mov
xor
shr
sbb
popf
(bad)
fwait
dec
dec
sbb
call
jo
sub
ss
js
cs
stos
(bad)
call
xchg
xor
inc
stc
lds
ins
lea
mov
xchg
inc
sbb
fstp
mov
push
or
div
inc
inc
dec
int
inc
leave
dec
jo
inc
es
push
pusha
xchg
ss
sahf
popf
mov
ins
sbb
ja
xor
sub
fstp
push
cmp
imul
addr16
xchg
stos
inc
pop
call
clc
out
in
fild
iret
je
dec
ins
pop
xchg
xor
pop
add
add
sub
jge
dec
mov
dec
out
leave
outs
mov
aad
inc
cmps
loope
mov
sti
dec
call
cmp
pop
mov
cld
aam
sbb
in
(bad)
jle
pop
or
daa
mov
out
vpsrlq
jmp
inc
inc
fnstenv
leave
mov
call
cdq
and
and
and
(bad)
mov
div
repnz
inc
and
cmp
dec
lea
and
nop
add
lds
movs
addr16
push
add
(bad)
movs
rcl
out
int3
adc
out
mov
shr
mov
arpl
jae
iret
aaa
lock
jns
stc
push
jge
push
(bad)
push
ret
mov
inc
scas
push
mov
cmps
sbb
fbld
std
fwait
or
push
fadd
neg
dec
sar
jae
shl
or
rol
jno
out
fist
jb
nop
fwait
sub
retf
mov
xor
outs
xor
stos
sub
dec
dec
ror
add
jnp
test
ror
mov
fidiv
cmps
aam
cmp
push
jl
dec
sti
dec
jae
aam
loopne
int3
mov
addr16
adc
xor
ins
in
xchg
mov
push
shr
sbb
inc
mov
ja
sbb
imul
or
sbb
jbe
outs
daa
les
or
pop
add
imul
fcmovu
xor
mov
call
fs
aaa
ss
inc
jmp
push
popa
aam
xor
cmp
mov
push
jge
push
pop
sub
inc
into
hlt
ins
push
xchg
xchg
ss
sbb
(bad)
in
stos
aaa
jnp
in
sbb
mov
shr
xor
bound
xor
nop
js
mov
dec
aas
cli
addr16
mov
push
jbe
push
jl
aam
add
xrstors
test
fimul
dec
mov
mov
cwde
cmp
lea
mov
push
push
test
loopne
jle
fild
lea
ficomp
xor
xchg
dec
sbb
stc
jmp
jle
inc
ja
test
and
xor
adc
lods
adc
addr16
dec
xchg
jns
sub
outs
aas
push
pop
leave
push
add
xlat
and
mov
scas
out
pop
jg
stos
ins
push
mov
aad
into
pusha
cs
jo
pusha
xchg
leave
xlat
mov
adc
push
inc
xchg
jae
movs
in
scas
adc
jno
test
mov
jno
inc
mov
or
xor
sbb
inc
mov
and
lahf
xchg
dec
push
fistp
pop
xchg
inc
jb
fcomp
inc
add
xor
rol
pop
ja
inc
sbb
jl
shr
cmps
xchg
outs
ins
pop
mov
push
gs
call
push
dec
aad
out
aam
dec
adc
inc
adc
jle
pop
pop
lea
or
and
jle
addr16
std
mov
inc
mov
fsub
fptan
dec
ret
loope
xchg
fwait
inc
xor
ss
test
std
jnp
(bad)
cdq
stc
daa
test
enter
adc
leave
aaa
stos
jle
adc
push
xchg
je
repz
mov
ror
mov
mov
fmul
dec
jno
jecxz
(bad)
fdiv
cmps
call
fcom
icebp
call
jg
mov
xor
pop
and
cmp
(bad)
mov
mov
in
or
mov
lods
addr16
add
xchg
pop
dec
call
pop
sub
inc
out
shl
fcomp
icebp
(bad)
jnp
push
push
dec
jae
and
push
das
cmps
xchg
cmp
imul
cmps
addr16
mov
into
(bad)
cdq
xchg
sbb
jle
popf
mov
inc
mov
xchg
adc
sub
popa
(bad)
xchg
mov
sahf
push
and
cld
sub
(bad)
int3
cmps
xchg
push
in
dec
fs
jbe
sbb
xchg
pop
mov
and
fild
pop
adc
jl
inc
add
stos
and
xchg
jge
push
stos
ror
sbb
adc
loope
nop
leave
stos
sar
sbb
stos
scas
lahf
shr
aad
dec
xchg
pusha
or
shl
mov
xchg
aas
or
push
fcompp
dec
adc
mov
jecxz
and
adc
je
pop
jne
cmps
xor
jge
movs
jmp
dec
xor
ss
hlt
js
sti
clc
addr16
pop
and
add
imul
mov
add
mov
mov
sub
mov
shl
mov
cwde
sbb
pushf
push
mov
gs
jge
inc
shl
mov
aad
ss
pop
cli
push
jg
adc
adc
addr16
cmp
xchg
xor
or
mov
daa
xor
mov
mul
dec
jg
or
(bad)
aad
arpl
cwde
xor
std
sub
xor
(bad)
xor
hlt
out
les
test
xchg
or
arpl
scas
sahf
mov
addr16
sbb
or
xchg
inc
xor
mov
xor
bound
fild
(bad)
ja
test
mov
sub
imul
or
scas
dec
push
fmul
xor
xchg
mov
xchg
std
push
and
adc
sub
mov
dec
pop
xchg
imul
out
or
add
mov
repnz
icebp
and
ja
cmp
pop
popa
js
and
add
loope
lds
daa
jmp
sub
and
movs
sbb
xor
and
out
add
inc
or
adc
cdq
push
mov
das
sbb
scas
retf
sub
or
mov
sub
and
mov
and
mov
fcmovnbe
rsqrtps
test
push
or
cmps
into
dec
jle
mov
or
sub
leave
mov
pop
or
adc
fwait
and
jne
test
or
push
aas
cld
inc
xor
cmova
pop
inc
stos
scas
push
cmp
popf
dec
lods
mov
inc
xor
mov
sub
xchg
or
loope
hlt
inc
rcr
add
sub
imul
popa
xchg
inc
jae
xchg
pop
and
aam
mov
ins
retf
mov
lock
sbb
out
adc
das
retf
jae
mov
in
cld
xchg
fld
adc
fdiv
ins
and
and
dec
sbb
pop
lods
xor
daa
pop
jp
in
cmp
sub
mov
leave
jnp
lea
out
in
popf
mov
jecxz
and
(bad)
jle
ret
fnsave
mov
xor
push
jns
clc
jbe
pop
mov
stos
(bad)
call
add
ror
xor
in
dec
or
push
shr
cmps
mov
and
lods
jp
lea
(bad)
mov
jge
ret
or
or
mov
sub
pop
dec
sbb
out
loopne
lods
cmp
xor
cdq
ins
cmp
xchg
mov
adc
push
rcl
or
add
dec
sub
cli
dec
stos
icebp
mov
pop
add
ret
mov
xchg
daa
and
js
retf
push
fsub
call
movs
cli
cli
pusha
jecxz
adc
mov
dec
ja
sar
lods
and
ins
inc
jge
cmp
ins
call
push
lock
inc
mov
dec
sbb
adc
pop
fnstcw
inc
rcr
pop
push
jmp
hlt
nop
ret
in
ret
push
adc
push
(bad)
call
xchg
push
push
out
jnp
mov
jmp
xchg
mov
pop
btr
test
add
or
fnstsw
jg
mov
mul
leave
retf
int3
out
add
xor
xchg
xor
jg
pop
mov
ins
cmp
sbb
add
test
fisub
inc
ins
xlat
and
in
xor
scas
cmp
dec
add
test
pushf
or
sbb
aaa
push
(bad)
scas
inc
aaa
mov
xchg
xor
xchg
or
lods
jne
mov
mov
cdq
mov
loopne
aam
xchg
inc
inc
mov
mov
add
mov
jp
ja
sbb
xchg
sbb
fidiv
out
in
stos
cmp
sub
mov
cmp
pop
add
jmp
dec
cmps
scas
add
mov
in
mov
cld
xchg
sub
push
enter
xchg
arpl
jg
les
clc
sbb
pusha
jl
dec
sbb
sti
dec
jno
idiv
outs
adc
jae
or
aam
clc
dec
sahf
aam
lods
call
or
retf
mov
cmc
adc
jnp
mov
add
pusha
dec
pop
push
fdiv
stos
add
xor
movs
call
jmp
test
les
addr16
(bad)
fsub
retf
loope
or
ja
fist
xchg
arpl
inc
and
mov
rcl
and
cmp
icebp
hlt
xchg
fsub
ror
rol
icebp
out
pop
fidivr
adc
mov
jl
push
outs
inc
int
add
xor
loop
hlt
(bad)
(bad)
aas
inc
and
and
cmp
xchg
dec
aam
xor
fdivr
mov
mov
daa
or
aaa
jp
mov
pop
int3
(bad)
push
push
hlt
mov
dec
jnp
push
adc
sub
loop
push
seto
or
mov
ret
add
jg
into
retf
(bad)
aam
dec
enter
mov
sbb
push
jmp
mov
retf
pop
retf
or
sub
mov
ret
cmps
arpl
sahf
sbb
lock
sub
xor
inc
adc
xor
mov
fdiv
cmps
scas
add
aaa
cmp
rcl
mov
add
push
sbb
or
xchg
inc
add
ror
jae
jo
pop
sub
and
imul
scas
push
or
jp
cmp
ret
inc
fucomi
mov
inc
jmp
jle
pop
addr16
dec
or
mov
cmp
mov
lahf
add
std
and
sub
add
add
xchg
mov
lea
icebp
pop
add
and
sti
add
push
fsubr
cli
cmp
(bad)
int
pop
repz
movs
in
sub
dec
or
ds
and
(bad)
test
cmps
ret
out
dec
vpsrlq
pop
mov
inc
rcl
inc
test
call
fwait
inc
sub
test
xchg
xchg
data16
mov
sbb
or
(bad)
fadd
clc
ins
int
test
(bad)
lahf
cli
mov
sub
mov
mov
loop
(bad)
mov
cwde
or
idiv
inc
imul
mov
fldenv
cmp
push
jp
sti
movs
jl
icebp
fistp
dec
int3
pop
adc
popa
ss
fnstenv
repnz
or
aas
and
popf
pop
add
in
pop
sti
and
pop
jp
mov
xchg
shr
mov
stos
call
mov
jns
addr16
sar
leave
stos
inc
mov
pop
jb
fsub
iret
xchg
cdq
pop
jae
pop
mov
dec
(bad)
cmp
mov
inc
mov
add
fmul
xor
add
push
inc
aas
adc
movs
outs
adc
cmp
cmp
adc
jmp
pop
xor
cdq
mov
gs
ins
es
push
mov
dec
xor
and
xchg
aaa
rcr
mov
nop
pop
pop
ret
mov
sahf
addr16
fcomip
(bad)
cs
push
jno
sbb
fcmovne
mov
rcl
or
(bad)
jmp
pusha
lahf
outs
ss
ss
mov
pop
xchg
cld
ror
xor
nop
aad
aad
test
jmp
icebp
dec
fwait
push
pop
jae
ffreep
push
xchg
ret
push
lods
icebp
mov
pushf
mov
ret
lods
cmps
mov
retf
pusha
stc
jg
stos
xor
or
jmp
aad
add
xchg
dec
inc
retf
repz
mov
add
stc
lahf
xchg
adc
add
xchg
fisub
add
mov
int
push
dec
inc
sbb
stos
push
iret
(bad)
fadd
sar
dec
out
add
ror
cmc
(bad)
sbb
ds
and
mov
xchg
test
pop
sar
pushf
jecxz
and
int3
mov
jno
aas
lods
cmp
xor
mov
movs
pop
int3
sahf
mov
pop
repz
jge
mov
sti
loop
fsub
push
aad
in
mov
aas
mov
pop
sbb
xchg
aad
call
pop
add
cmp
in
imul
cmps
jne
xchg
lea
push
retf
punpcklwd
and
pop
nop
push
xchg
sbb
jl
leave
xchg
inc
and
pop
inc
xchg
lahf
adc
xor
add
push
inc
es
in
fsub
js
xchg
nop
icebp
xchg
aad
dec
xor
stos
sbb
sti
inc
mov
mov
nop
stc
xchg
inc
cmps
lock
in
ja
cmp
or
div
pop
ja
aaa
sbb
or
pop
imul
cmp
lods
and
cld
adc
(bad)
(bad)
std
xor
addr16
or
not
je
push
test
mov
es
mov
(bad)
test
sbb
adc
jecxz
pop
cmp
sbb
dec
jp
test
xor
mov
mov
stos
sbb
mov
popf
pushf
cmp
ins
repz
stos
inc
call
jae
inc
inc
push
xchg
add
dec
add
ss
mov
jbe
pop
icebp
dec
adc
xchg
movs
mov
pop
inc
cs
js
dec
push
adc
nop
mov
(bad)
pop
xchg
sbb
push
or
and
push
pop
jb
pop
jnp
push
push
test
clc
mov
adc
pop
test
icebp
daa
(bad)
in
dec
out
std
pcmpgtw
mov
xor
inc
cdq
fldenv
hlt
(bad)
(bad)
rol
punpckhwd
arpl
push
mov
or
sub
jge
sbb
out
dec
mov
or
dec
pop
jl
adc
adc
shl
xchg
test
or
lods
psrld
cmp
adc
cmp
pop
dec
shl
adc
mov
pop
push
loopne
dec
push
mov
out
sub
retf
add
dec
and
add
push
mov
sti
mov
jns
mov
ror
mov
mov
shl
cmps
xchg
cmp
mov
xor
into
std
(bad)
and
outs
pxor
xchg
mov
mov
sub
repnz
hlt
in
fcomp
cmp
idiv
mov
mov
xor
jb
mov
adc
repnz
inc
fild
fld
out
int3
lods
mov
call
push
lds
(bad)
gs
jbe
movs
jg
jg
and
mov
imul
pop
sbb
pop
add
clc
test
gs
xchg
adc
cmp
sub
jo
pop
cld
std
pop
movs
and
and
into
and
int
fiadd
mov
or
jmp
fs
mov
test
aam
iret
outs
popf
shl
loop
(bad)
mov
adc
lea
gs
stc
loope
and
xor
je
daa
fdivr
jecxz
pop
xchg
mov
inc
(bad)
stos
scas
add
movs
outs
and
(bad)
scas
shl
retf
mov
aam
test
out
xor
pop
sbb
adc
out
or
add
mov
rcl
jmp
gs
repnz
xchg
test
pushf
sbb
mov
popf
pop
inc
push
mov
jbe
or
xchg
out
int
in
fcomp
fiadd
gs
xchg
dec
popf
out
cmp
jl
add
jecxz
fsubr
out
lds
(bad)
sar
fsubr
repnz
call
add
stos
jl
pusha
jle
lea
mov
stc
loop
addr16
fistp
clc
rcl
call
stc
push
jl
xor
sti
dec
aaa
xor
sti
fwait
lods
retf
mov
dec
ins
call
mov
pop
sbb
push
mov
xchg
xor
sub
sahf
retf
sti
xchg
rcr
push
mov
jmp
xchg
mov
leave
in
scas
dec
ss
(bad)
xchg
in
je
les
punpckhbw
lods
mul
cmp
shl
sub
push
push
pop
lock
and
dec
scas
ret
(bad)
push
lea
mov
jne
pop
scas
mov
jnp
mov
movs
hlt
fwait
sbb
cs
call
pop
fiadd
cmc
mov
or
or
ja
dec
xchg
pop
imul
imul
mov
mov
aaa
sub
loop
mov
aad
scas
fsub
dec
push
popf
jno
enter
shr
fisubr
adc
ret
loope
jo
mov
or
inc
xchg
push
cdq
je
jbe
push
rcl
pop
fbstp
cwde
inc
adc
jbe
test
std
fbstp
dec
or
mov
arpl
jno
push
jb
xor
mov
sub
jecxz
out
push
xchg
(bad)
arpl
pop
mov
out
stos
xlat
fbld
push
jmp
jp
pop
dec
jp
enter
ret
jae
je
or
jbe
cmp
imul
dec
xor
lock
sub
mov
mov
or
cmp
push
ins
xchg
icebp
mov
mov
cmp
jp
in
mov
xor
in
fwait
adc
into
mov
adc
mov
movs
(bad)
push
sahf
hlt
lods
sub
loop
jnp
mov
pusha
jmp
enter
js
fdivr
push
imul
dec
or
push
sbb
inc
push
add
dec
sub
cmovo
mov
je
movs
add
jnp
test
lea
ror
push
xor
in
ds
add
mov
out
dec
adc
mov
push
mov
mov
inc
out
mov
or
adc
xchg
cmp
cmp
sbb
mov
pushf
xor
std
aam
mov
aaa
sub
cmp
adc
jne
rcl
inc
pop
and
mov
xor
mov
mov
xor
bound
data16
pop
out
retf
mov
loope
jno
das
aaa
out
and
dec
xlat
sub
jne
xchg
mov
sub
sbb
call
xor
je
add
adc
scas
ins
cmc
mul
dec
and
lds
jge
sbb
scas
push
pop
mov
sub
movs
popf
xchg
out
or
jmp
sahf
cld
push
xchg
push
ja
ficom
ret
add
jp
dec
es
loopne
cmp
fsub
cmp
stos
adc
push
fbstp
in
push
xor
fidivr
nop
pop
cmps
dec
xchg
jo
add
out
sahf
(bad)
mov
mov
jmp
scas
mov
or
mov
ror
dec
(bad)
pop
xchg
pusha
dec
imul
fdiv
cmp
add
adc
and
scas
in
jmp
inc
sbb
repz
lea
hlt
or
jns
mov
jecxz
mov
aaa
rcr
xchg
push
jl
test
pop
sbb
psllq
scas
dec
scas
xor
pop
push
adc
aad
sub
sti
mov
pop
push
jg
mov
in
test
xlat
rol
lock
jecxz
mov
inc
pop
(bad)
pop
xor
popf
gs
repz
in
xor
pop
retf
stos
mov
push
or
jbe
es
push
test
arpl
gs
nop
jb
sub
mov
call
sub
and
stos
movs
adc
loop
mov
ret
ds
fiadd
ss
add
rol
adc
rcl
pop
mov
add
aaa
cmp
sbb
xor
adc
and
aaa
jo
sbb
pop
jnp
inc
mov
enter
pop
push
dec
aad
(bad)
lock
mul
jmp
aas
aam
mov
xchg
xor
inc
push
push
mov
int
ror
cmps
push
mov
sub
sub
add
jnp
mov
inc
icebp
stos
pop
pop
xor
or
fimul
and
or
xor
dec
sti
pop
xchg
ficom
or
jne
xor
xor
push
aas
ins
push
xchg
loop
sbb
scas
mov
mov
mov
mov
adc
or
sbb
jp
stc
push
jmp
test
mov
inc
aas
sbb
sbb
push
adc
push
and
leave
dec
mov
(bad)
adc
repnz
mov
sbb
int3
cmp
int
sbb
fsubr
add
jmp
mov
in
fist
cli
retf
fdiv
aas
mov
push
retf
ror
inc
dec
mov
call
test
popa
scas
imul
adc
sub
mov
add
or
ret
ins
and
fdivp
xchg
(bad)
js
mov
call
cmp
mov
dec
jno
pop
add
and
inc
mov
int
or
mov
inc
lock
or
xchg
and
xor
int3
push
fs
out
ror
jmp
lds
jg
mov
ins
and
es
loope
push
stc
and
pop
mov
mov
jnp
mov
cld
mov
in
loope
push
and
mov
mov
xchg
stc
(bad)
sub
or
mov
and
mov
inc
dec
jp
cld
jmp
adc
sbb
test
aam
movs
leave
push
int
(bad)
mov
pop
pop
cli
inc
jae
sar
ja
mov
adc
xchg
pop
stos
js
adc
aam
jne
dec
mov
loope
cwde
mov
sub
xor
xor
jmp
lods
mov
jp
inc
pop
mov
js
mov
dec
mov
shr
repnz
scas
daa
sbb
(bad)
xlat
loopne
lods
iret
or
aaa
out
mov
sub
and
fsub
sub
push
xchg
loop
adc
loop
mov
mov
cdq
push
cmps
cmp
js
(bad)
pushf
xlat
push
jecxz
adc
and
and
xchg
int
jecxz
jo
cdq
std
inc
out
jg
test
jo
and
scas
hlt
pop
ja
inc
push
xor
std
inc
in
retf
push
sub
push
ret
push
push
repz
mov
jbe
daa
xchg
aam
dec
xchg
mov
sbb
or
mov
jbe
ror
outs
fyl2xp1
test
mov
sar
aas
mov
mov
call
add
sub
jmp
lods
popa
xchg
mov
cmp
in
rol
dec
sbb
and
and
js
xor
call
xor
shr
mov
mov
pop
mov
fwait
sbb
sbb
inc
adc
push
rol
stc
leave
ret
xor
xor
(bad)
fmul
push
push
imul
adc
call
out
pop
(bad)
mov
cmc
test
int3
cmp
stc
mov
or
or
xchg
pop
fstp
xlat
fidiv
stc
xor
fidivr
and
cmp
mov
push
adc
push
cmp
and
pop
xchg
dec
fcom
loope
das
or
cmp
adc
mov
iret
(bad)
dec
sub
xor
mov
xor
pop
ins
cdq
mov
cmp
add
sub
jmp
pop
adc
jae
add
sbb
push
mov
or
pop
push
mov
xor
push
jl
xor
fistp
lock
mov
pop
ds
ret
lea
adc
pop
push
in
aaa
xchg
es
les
sbb
pop
pop
mov
cwde
mov
cmp
inc
xchg
test
mov
mov
scas
and
xor
dec
xchg
(bad)
jo
mov
ja
add
and
pop
xchg
icebp
mov
movs
mov
cmp
stos
pop
and
mov
stos
lea
mov
add
mov
sub
dec
je
ja
daa
sbb
cmp
fiadd
sbb
sub
jge
loopne
(bad)
mov
(bad)
mul
scas
pop
rcl
sub
lods
mov
mov
imul
mov
xor
(bad)
mov
push
lods
sbb
jmp
out
inc
out
push
inc
lock
and
shl
or
push
ss
(bad)
mov
xlat
call
cmp
rcl
mov
lods
fisttp
stos
popa
adc
xlat
daa
enter
push
loopne
push
mov
clc
add
pop
dec
pop
push
mov
cmp
pop
xchg
and
bound
outs
mov
cli
jno
ja
xchg
scas
fucom
mov
jb
jecxz
retf
(bad)
sti
fmulp
and
mov
mov
xchg
ret
mov
xchg
sar
sub
loopne
mov
and
mov
sbb
repz
mov
sbb
in
xchg
xlat
dec
lock
xor
add
fstp
addr16
cmp
int
push
jp
pop
mov
stos
inc
outs
(bad)
cmps
adc
pop
ss
cs
jg
push
inc
les
sub
iret
mov
mov
ins
cdq
cmps
adc
jae
adc
daa
int
fisubr
adc
test
outs
add
cld
adc
cmps
jmp
adc
sbb
movs
pop
adc
sub
ror
outs
cmp
mov
hlt
cld
mov
sub
adc
sub
stc
shl
jge
fsub
mov
inc
fsubrp
push
inc
inc
mov
jnp
lods
aas
adc
jae
sub
loopne
pop
cmp
repz
and
xchg
jns
repz
jmp
mov
ret
addr16
bound
fdivr
imul
aam
cmp
call
jp
xchg
ret
adc
setno
or
scas
push
xchg
push
mov
clc
sbb
xor
mov
jae
aas
rcr
xchg
ret
add
mul
push
cmp
pushf
out
and
call
inc
mov
fdecstp
dec
mov
pushf
sti
fwait
pop
dec
mov
ds
mov
push
xor
sbb
xor
fsubr
ret
dec
aam
adc
pusha
(bad)
arpl
sub
loop
iret
dec
dec
movs
aaa
cmps
push
ret
cld
push
retf
(bad)
shl
and
test
xchg
xlat
nop
pushf
push
xchg
and
cmps
jmp
push
aad
aaa
daa
push
push
sbb
mov
clc
loope
loopne
push
popf
hlt
std
pop
cmp
mov
cmp
(bad)
jmp
adc
pop
std
out
jo
repz
pop
mov
and
shl
sub
push
lock
ret
xchg
pop
movs
sbb
mov
dec
cli
xor
movs
dec
arpl
or
cmp
fwait
mov
pop
pop
rcr
adc
jg
dec
ret
loop
(bad)
sbb
fisubr
dec
mov
jmp
out
sub
jp
shr
aam
outs
mov
mov
icebp
retf
aad
movs
dec
ret
mov
dec
imul
jp
shl
mov
aaa
jno
int
bound
cld
pop
shl
mov
push
iret
adc
cld
xor
sbb
outs
push
(bad)
mov
mov
nop
out
cmps
int
inc
fs
inc
scas
xlat
mov
mov
adc
jg
test
mov
enter
sbb
mov
ins
xchg
push
inc
mov
mov
mov
sti
mov
into
(bad)
cdq
push
add
hlt
(bad)
sub
cld
inc
sbb
dec
hlt
inc
jp
dec
inc
(bad)
or
(bad)
mov
sbb
cmp
int
sbb
call
imul
xchg
mov
movs
aam
adc
fistp
hlt
(bad)
mov
(bad)
jnp
pop
dec
int3
imul
pop
push
mov
xchg
cmps
(bad)
and
sub
fidiv
mov
and
mov
inc
inc
ds
movs
das
movs
mov
xor
icebp
xchg
jmp
gs
mov
or
shl
inc
sub
or
xchg
adc
int3
mov
push
push
sub
hlt
movs
rol
ret
sub
popa
and
inc
movs
daa
outs
out
mov
icebp
nop
mov
sbb
aas
xor
dec
ins
idiv
push
je
test
(bad)
es
adc
pop
fmul
(bad)
imul
adc
jbe
sar
scas
inc
icebp
into
or
inc
jg
loop
dec
inc
loop
jl
(bad)
cdq
arpl
mul
inc
lods
nop
je
push
dec
dec
mov
scas
(bad)
ror
lahf
cmps
mov
mov
jno
repz
mov
lahf
inc
sub
fnstenv
mov
icebp
add
jno
(bad)
or
aad
dec
xchg
je
retf
xor
mov
mov
and
or
mov
fsincos
mov
jmp
mov
ret
in
cld
not
cmps
adc
push
retf
fwait
in
and
xor
dec
inc
mov
pop
add
add
mov
mov
jecxz
xor
fdiv
xchg
xchg
ins
sbb
aam
push
sub
lds
mov
cmp
stc
icebp
cmp
aas
sbb
ret
loop
adc
inc
pop
call
je
lods
mov
push
cmp
(bad)
pop
cld
mov
(bad)
or
repnz
loope
das
xor
jbe
xchg
adc
xchg
repz
test
lods
stos
repz
mov
int
out
add
call
push
arpl
xchg
(bad)
cmp
cmp
aaa
pop
adc
add
push
ret
pop
jo
add
xchg
pusha
mov
pop
retf
pop
repnz
sbb
adc
or
mov
addr16
mov
xor
icebp
fisttp
inc
xor
mov
aad
push
dec
mov
pop
jb
aas
and
ficom
inc
(bad)
fisttp
mov
mov
ins
and
es
cmp
adc
div
out
sub
dec
cmp
arpl
daa
push
bound
lock
add
and
loope
sti
das
xor
jbe
sub
dec
pop
cli
xor
es
stc
or
add
dec
add
cld
mov
cmp
jecxz
add
dec
sub
pop
mov
dec
sub
mov
xor
and
ror
dec
(bad)
push
mov
xor
iret
test
call
cmp
sub
add
mov
fs
rol
(bad)
lahf
jge
cdq
sub
and
loopne
test
xchg
xor
out
mov
mov
mov
cld
mov
das
ss
adc
gs
rsm
push
mov
call
sbb
mov
call
fwait
jle
mov
nop
mov
dec
scas
mov
and
push
mov
xchg
dec
int3
xor
sub
mov
jmp
rcr
aam
jnp
dec
mov
movs
ror
fisubr
cdq
repz
pop
les
push
mov
xor
pop
arpl
std
sbb
sub
out
daa
pop
and
retf
aaa
dec
push
loopne
fisttp
loopne
push
cld
aad
fdivr
inc
sbb
into
inc
add
inc
lahf
aaa
int
(bad)
adc
inc
shr
mov
test
inc
out
fsubr
jle
xor
ins
test
xchg
out
icebp
xchg
stos
jnp
dec
mov
repz
lods
bound
inc
shl
inc
adc
dec
add
dec
push
mov
inc
mov
psubq
cmp
jb
lock
cmc
xchg
pop
aam
mov
test
bound
cs
ret
adc
mov
rol
aad
call
ret
cmp
ret
out
jne
adc
push
or
inc
dec
loope
mov
and
mov
aam
test
call
je
or
mov
cmp
rcr
aam
cmps
daa
pop
dec
fstp
movq
sti
in
jge
test
push
cmc
aaa
sahf
xlat
aaa
push
push
cmp
adc
xchg
sbb
test
in
adc
test
jns
cmps
out
xor
add
test
fwait
adc
xlat
jge
lds
dec
pop
pop
jecxz
ret
bound
test
leave
repz
shl
div
jge
cmps
inc
pop
cmp
(bad)
nop
xchg
jno
pop
mov
ins
test
xchg
rol
push
push
fadd
sti
xor
addr16
mov
lods
fild
xchg
inc
push
adc
test
cmp
test
pop
inc
push
cli
jmp
test
mov
mov
sub
mov
in
movs
adc
or
cs
xchg
outs
lock
retf
mov
aam
inc
sub
adc
out
or
fwait
out
popf
call
sub
inc
dec
mov
mov
pop
outs
cmps
bound
fstp
stos
lods
add
fidiv
xchg
jp
aad
iret
retf
imul
jmp
or
inc
push
lahf
inc
xor
pop
xchg
mov
cmps
ret
inc
jmp
addr16
imul
stos
loope
mov
inc
sub
dec
retf
loop
out
popa
push
aad
inc
pop
adc
push
dec
xor
and
sub
xchg
(bad)
lds
sub
sbb
shl
into
pop
xor
sbb
push
iret
add
mov
xor
sahf
repz
aad
fdiv
mov
pop
jne
mov
fistp
mul
pop
xchg
aaa
(bad)
mov
nop
(bad)
jae
es
adc
jae
xchg
sbb
sti
(bad)
ja
push
aad
retf
pusha
(bad)
mov
mov
ds
out
xor
cmp
test
add
pop
pop
fiadd
push
cmp
sar
push
int
xchg
xchg
pusha
shr
js
popf
cdq
cmps
das
pop
test
movs
aaa
sbb
fsub
psraw
lea
fst
sti
mov
mov
fstp
int
cmps
inc
shl
(bad)
in
xchg
mov
imul
xor
xor
add
mov
retf
enter
xchg
push
aaa
jle
hlt
xor
and
mov
jns
sub
in
jbe
enter
loop
jns
mov
inc
lods
sub
push
mov
test
mov
out
fwait
mov
pop
test
cmc
push
sub
adc
ret
push
xchg
mov
stos
dec
xlat
jg
push
fmul
and
jp
inc
add
and
mov
test
cmps
mov
jns
cmp
sub
ins
cwde
dec
ins
xchg
pop
dec
xchg
xchg
push
or
inc
or
or
pop
dec
mov
cmc
pop
jo
iret
outs
xor
adc
popf
iret
jb
cmc
retf
into
pop
(bad)
scas
and
inc
lds
sahf
dec
movs
jp
cmp
cwde
nop
mov
xchg
pop
and
sbb
repz
cmp
rol
jge
jle
xchg
jmp
adc
pusha
retf
ret
dec
call
in
and
into
sti
and
jo
dec
push
repnz
call
push
ret
lods
sahf
leave
mov
stos
mov
stos
mov
mov
in
test
call
bound
push
dec
sub
(bad)
dec
sar
sub
mov
daa
call
pop
retf
jmp
and
dec
stc
int3
je
cwde
mov
js
inc
push
retf
fwait
push
fdivp
fld
inc
xor
mov
jns
inc
movs
jp
(bad)
(bad)
jge
pusha
push
add
popa
outs
mov
mov
call
push
sub
lds
out
out
pminub
ror
or
xchg
(bad)
push
fadd
xchg
in
adc
nop
clc
int3
adc
mov
(bad)
ffree
cmp
xor
adc
loop
adc
adc
sub
mov
push
in
cmps
repz
aad
jmp
ins
fwait
shl
xchg
rol
push
push
push
int3
hlt
and
punpckhdq
in
push
cli
or
xor
loopne
(bad)
popf
aad
mov
or
adc
jg
test
int3
cmp
jg
aas
fwait
and
push
movs
and
mov
mov
pop
mov
scas
shl
aad
push
call
call
ins
inc
clc
bound
cmp
cld
and
test
cmp
push
sahf
cmp
out
stc
ror
sbb
xor
es
js
push
xchg
cmp
and
sar
int3
xor
add
push
dec
push
mov
add
pusha
mov
stos
test
add
cmps
stc
nop
call
ins
repz
jmp
add
out
gs
inc
xchg
inc
pop
mov
pop
fwait
or
mov
mov
adc
lods
cdq
sub
xchg
retf
imul
mov
rol
pop
xlat
sar
lds
push
std
mov
jle
and
jne
nop
sar
xchg
inc
mov
mov
shr
cmp
xor
adc
daa
retf
jno
fnsave
push
cmc
or
inc
jp
and
cmp
call
jno
bound
retf
sbb
mov
xchg
in
sbb
mov
jno
fisttp
fmul
pop
cmps
in
xor
xor
dec
dec
inc
add
into
mov
daa
div
xchg
push
cmc
cmp
aam
sbb
ja
xor
cmp
dec
push
in
movs
mov
pop
lock
pop
inc
outs
fmulp
imul
dec
sbb
retf
jno
jns
clc
xchg
sbb
add
and
jae
add
adc
xor
(bad)
(bad)
mov
mov
adc
sbb
sub
ret
ins
scas
shl
jp
repnz
push
sahf
xor
pop
push
addr16
mov
test
xchg
les
cmc
pushf
dec
or
out
cmp
mov
into
pushf
push
daa
(bad)
mul
cs
sbb
stos
nop
lahf
jne
mul
add
fdiv
je
sub
push
ss
mov
xor
mov
stos
ret
sar
jecxz
addr16
add
enter
xchg
mov
outs
xchg
mov
adc
adc
mov
mov
into
jle
adc
xor
sub
xchg
sbb
mov
fist
cmc
push
out
dec
and
cmps
cwde
cwde
push
iret
adc
push
neg
jae
xor
pop
inc
and
sbb
mov
test
jmp
adc
jmp
cwde
ret
mov
in
adc
sbb
mov
dec
mov
inc
jge
push
push
fdiv
cmp
adc
mov
(bad)
fwait
push
test
pop
fwait
sub
sar
dec
adc
mov
in
adc
push
cdq
push
out
mov
lock
cmp
cmp
lods
mov
dec
lods
jne
scas
sbb
pop
clc
test
fiadd
cmp
push
pop
cmp
or
stos
scas
std
repz
xchg
das
sub
je
cwde
mov
dec
push
pop
mov
cwde
sbb
or
mov
retf
add
mov
add
mov
movs
outs
xchg
(bad)
push
inc
xchg
daa
jp
movs
mov
sti
jmp
stos
aam
jmp
inc
movs
adc
cs
mov
sub
and
xchg
mul
and
icebp
jne
fcomp
leave
scas
sbb
fbstp
mov
out
test
sbb
and
test
outs
jmp
call
inc
movs
aas
lods
pop
popa
pop
ja
dec
mov
scas
sahf
js
popf
pop
jo
test
pusha
inc
shr
lahf
push
adc
into
pop
iret
cld
movs
in
test
data16
push
pop
js
scas
mov
push
dec
jae
sub
xchg
ret
imul
mov
fwait
pop
mov
adc
jne
push
xchg
mov
fnstenv
test
mov
mul
scas
mov
mov
inc
in
mov
scas
mov
jo
jg
scas
or
pop
aad
cmp
cli
mov
lahf
and
xchg
ror
retf
ss
pushf
mov
dec
mov
and
push
mov
(bad)
(bad)
and
je
outs
xor
in
sbb
mov
xchg
in
retf
xlat
popa
or
cmps
jmp
movs
bound
add
call
lea
xor
mov
sar
inc
outs
nop
inc
and
xchg
mov
and
and
lds
inc
or
int3
dec
inc
scas
pusha
mov
and
sbb
xlat
iret
pusha
xchg
mov
es
push
pop
adc
or
stc
and
enter
pop
inc
idiv
xchg
or
sub
repnz
sbb
loopne
jmp
add
mov
jnp
cld
mov
mov
sub
test
or
push
(bad)
clc
cmp
adc
push
push
sub
xchg
cld
cld
mov
mov
sahf
gs
loope
fld
dec
fsubr
std
lods
in
sbb
and
mov
push
mov
sahf
out
test
test
out
dec
mov
addr16
movs
pop
xchg
call
sbb
loopne
push
int
icebp
ja
cdq
cmp
jne
mov
lds
not
cld
iret
adc
mov
cdq
mov
loopne
scas
es
jl
scas
add
femms
jg
mov
xchg
inc
stc
add
mov
jo
mov
ficom
call
mov
test
mov
dec
fisttp
ds
lods
into
arpl
lea
cli
ins
das
loopne
mov
dec
js
cmps
push
fiadd
es
push
into
cdq
cwde
pop
xor
cmp
dec
jmp
and
sub
es
jmp
(bad)
sub
and
and
inc
inc
cmp
xor
sub
fstp
inc
dec
jl
cmp
jb
in
adc
mov
test
pushf
or
movs
int
ins
and
(bad)
mov
mov
add
mov
mov
mov
xlat
fwait
movs
xchg
mov
mov
jmp
je
xchg
push
std
das
iret
mov
cld
push
lds
pop
lods
inc
mov
pushf
xchg
mov
loop
retf
retf
mov
xor
and
mov
mov
adc
cld
pop
fdivr
sti
gs
mov
test
mov
mov
sbb
or
sbb
push
cmps
mov
sub
sar
imul
push
scas
mov
sub
sub
add
dec
xchg
cmp
fs
gs
test
xchg
mov
ret
xchg
data16
frstor
nop
push
fist
xchg
xor
cmp
mov
jl
mov
push
jmp
inc
mov
addr16
push
out
jb
adc
jmp
or
into
cs
mov
add
inc
adc
popa
or
push
pusha
mov
push
or
aad
and
(bad)
or
mov
and
ret
jl
fxch
and
add
repnz
ret
shr
jmp
cmp
sbb
out
repz
bound
sbb
cmp
lahf
inc
cmp
inc
test
iret
sbb
stos
sti
mov
mov
iret
adc
xlat
pop
(bad)
ds
dec
lods
fcomp
inc
loope
int3
nop
jg
dec
jl
add
xor
movs
xchg
lock
and
sub
mov
xchg
pop
xchg
pop
xchg
call
imul
repz
jb
hlt
jmp
pop
cmp
loopne
xchg
ins
icebp
mov
push
ret
mov
pop
pop
out
out
sbb
ins
sbb
inc
jl
jo
and
mov
aam
movs
sub
xchg
inc
fwait
xor
retf
cmp
sahf
test
imul
pop
call
xchg
xchg
inc
mov
ss
cmp
imul
mov
scas
sti
mov
mov
scas
mov
push
cmp
(bad)
(bad)
fisttp
inc
scas
(bad)
mov
xor
xchg
jecxz
aaa
mov
lea
mov
xchg
xor
dec
xor
js
out
movs
xor
fidivr
add
inc
mov
ins
je
hlt
out
ret
das
in
addr16
sti
xor
add
jb
out
(bad)
inc
mov
cmps
or
clc
push
les
inc
gs
fcom
or
pop
and
dec
popf
jnp
shl
jmp
outs
mov
out
mov
icebp
pop
mov
jge
cmp
nop
cli
inc
loopne
aaa
cmp
jg
inc
push
mov
add
xor
xor
and
ja
outs
icebp
xchg
push
ret
dec
fwait
std
pop
out
test
add
popa
outs
das
or
mov
pop
popf
inc
test
jmp
rol
sbb
lock
ss
ins
mov
cld
mov
loop
xor
daa
int
inc
iret
mov
mov
pusha
mov
(bad)
jmp
stc
xor
mov
xchg
sub
jge
pop
push
sbb
repnz
daa
mov
adc
sub
es
cs
imul
add
cmps
and
popa
sbb
cmc
jb
daa
cmp
int
js
xor
popa
xchg
stos
mov
or
or
pop
clc
xor
jns
mov
adc
inc
push
int3
popf
jno
test
and
test
adc
pop
xor
mov
add
(bad)
push
rcl
sub
sbb
out
xchg
and
int
sbb
dec
xor
call
icebp
xchg
sbb
mov
mov
push
les
inc
cmc
jbe
push
outs
imul
loopne
fld
cmp
push
mov
fild
dec
std
js
int3
xlat
jb
pop
enter
push
lahf
push
cld
xor
pushf
test
sar
dec
lahf
sub
inc
je
aam
xchg
daa
gs
(bad)
sbb
dec
mov
pop
movs
inc
xor
in
in
cmp
test
pop
mov
sub
stos
or
sub
aas
fmul
lods
pop
and
jae
mov
outs
fbld
rol
shr
dec
jb
sub
adc
mov
pop
mov
popf
inc
in
adc
(bad)
and
push
imul
mov
call
inc
std
loop
push
inc
mov
fcmovnbe
stc
cmp
std
inc
in
hlt
xchg
stos
add
fwait
sahf
int3
pop
popa
aas
(bad)
cmp
sub
xchg
push
sub
push
mov
add
cld
das
sub
mov
fcmovb
mov
popa
mov
mov
call
daa
stos
add
mov
jmp
nop
std
sbb
sbb
aad
outs
and
push
adc
nop
in
mov
and
add
xlat
mov
sti
jnp
ret
mov
inc
movs
ins
rcr
push
dec
je
ret
mov
in
inc
test
mov
aad
cmp
ret
adc
loop
pop
fadd
push
scas
fidivr
fbstp
dec
push
ss
cmp
sbb
add
cmps
cmps
in
jmp
sahf
sbb
adc
mov
leave
pushf
shl
sub
cld
jle
mov
xchg
mov
xchg
loop
mov
push
mov
sub
sbb
adc
dec
cmc
sub
push
sbb
rol
and
cmp
mov
ds
push
test
xor
dec
mov
jns
dec
enter
xchg
cmp
bound
test
(bad)
or
jp
or
movs
repnz
sub
movs
(bad)
retf
fcomi
(bad)
mov
pop
mov
jecxz
sbb
fild
popf
cmp
iret
movs
sbb
sub
js
jbe
sbb
jle
pop
pop
lds
int
scas
jnp
jno
and
enter
test
arpl
outs
mov
mov
fs
jle
xchg
popa
mov
iret
add
add
sbb
icebp
imul
idiv
inc
xlat
or
or
dec
xor
and
pop
loopne
sub
inc
pop
and
sbb
out
xchg
jbe
mov
jb
mov
adc
dec
or
push
ss
mov
out
hlt
or
lahf
mov
dec
and
add
sbb
repnz
je
fcompp
ds
out
test
jo
icebp
mov
lds
popa
pop
test
mov
adc
jnp
sbb
or
adc
cwde
addr16
mov
(bad)
minps
jge
and
in
fucomp
xor
popa
lahf
push
mov
push
ftst
ftst
cli
add
outs
mov
out
repz
push
aaa
frstor
lock
adc
les
sub
es
sub
cmp
xor
mov
daa
and
arpl
fcom
inc
retf
mov
mov
cld
sbb
cmps
pop
in
push
into
pop
movs
or
mov
and
xor
push
push
inc
add
pop
hlt
inc
xchg
sub
sbb
(bad)
aaa
pop
inc
(bad)
jmp
xchg
dec
shl
sub
mov
inc
pop
in
xchg
dec
int3
das
jecxz
rol
dec
sbb
add
or
dec
leave
xchg
sub
xor
outs
jl
jns
sbb
mov
fwait
sbb
repnz
stos
int
out
jge
dec
sub
add
add
in
and
(bad)
lock
jns
pop
or
call
out
adc
nop
imul
inc
mov
inc
test
ins
sub
popf
dec
mov
les
loopne
mov
xor
not
daa
ror
or
jnp
xchg
fwait
jl
mov
imul
sahf
fwait
stc
jae
popa
cld
adc
hlt
test
pop
clc
movlps
add
cmp
lahf
adc
cmp
push
cmp
repnz
jge
cli
imul
pushf
and
and
pop
inc
retf
retf
aam
std
hlt
sub
fwait
pop
and
js
and
jecxz
jecxz
stos
jae
cmp
jbe
xor
cmp
add
inc
jp
xlat
out
fxch
je
mov
sar
ror
sti
sub
mov
mov
sbb
shl
loop
cmp
scas
adc
(bad)
icebp
sar
jmp
xchg
(bad)
es
jmp
jo
sbb
jp
push
sub
jge
mov
call
add
nop
js
mov
ret
rol
(bad)
sbb
xor
test
push
sub
push
retf
call
jge
(bad)
sbb
fisttp
popf
mov
movs
outs
inc
aad
dec
sbb
fdiv
xchg
cmp
adc
xor
scas
movs
push
pop
or
inc
jb
and
and
or
xchg
(bad)
addr16
(bad)
pop
add
js
and
mul
inc
push
into
pop
mul
sub
movs
pop
call
test
jg
dec
lock
pop
sub
sahf
out
scas
xchg
rcl
in
cmp
and
add
daa
add
gs
in
fcom
xor
int3
fldcw
ja
(bad)
popa
leave
xchg
fistp
pop
xor
scas
lock
dec
ins
inc
mov
outs
xor
div
adc
or
cmp
pop
cdq
fidiv
sahf
sub
mov
imul
jmp
or
cld
jnp
pop
xchg
sahf
mov
xchg
mov
xor
(bad)
aad
in
jae
test
or
xchg
jmp
rcr
repnz
mov
adc
and
mov
adc
fwait
jp
scas
mov
fsub
repnz
mov
loope
and
push
mov
fdiv
mov
sbb
lods
push
jnp
shl
daa
inc
xchg
mov
cmp
and
push
cs
xchg
pop
enter
call
inc
popf
xchg
ss
mov
mov
inc
dec
cld
fcom
mov
mov
popf
loop
int
in
dec
push
into
jp
es
test
jecxz
mov
lock
cmp
imul
jmp
mov
enter
jnp
test
out
test
mov
push
std
mov
mov
dec
out
or
add
sbb
sti
push
sbb
push
mov
clc
inc
je
cs
test
jbe
and
cmps
dec
popa
jecxz
retf
and
adc
pop
jp
lea
xchg
mov
je
pop
pop
lock
push
fsubrp
cli
imul
popf
fnstsw
adc
xor
pop
cmp
or
clc
leave
mov
aam
xchg
mov
inc
in
mov
pop
mov
jo
test
call
xchg
or
add
mov
xchg
xlat
icebp
sbb
int
aaa
mov
cmp
sub
jne
cs
out
lods
sub
push
dec
xor
xor
sub
pop
jmp
pop
dec
sub
dec
mov
dec
cmp
les
mov
and
add
data16
gs
xor
les
xor
retf
retf
pop
ficom
mov
pop
pop
ins
cmp
pop
fstp
pop
push
pop
pushf
shl
pop
iret
jnp
fwait
call
inc
std
xchg
jo
mov
jmp
inc
ins
or
mov
js
push
je
mov
movs
sbb
sub
aas
popa
loope
pop
pop
push
iret
bound
std
adc
or
adc
mov
or
sbb
out
enter
sti
cs
inc
jb
cmp
and
lds
adc
and
fyl2xp1
xor
ficomp
sub
inc
add
movs
cmc
fsub
mov
test
sbb
mov
pusha
shr
jle
movs
rcr
add
mov
xchg
cmp
mov
repz
mov
adc
xlat
push
mov
(bad)
icebp
pushf
jbe
out
dec
adc
or
mov
push
movs
sbb
push
mov
adc
inc
mov
mov
jl
loope
jl
mov
arpl
or
dec
cmp
in
and
(bad)
or
pop
xchg
std
cmp
icebp
or
hlt
mov
mov
into
dec
cmp
pop
in
mov
xlat
inc
mov
mov
push
icebp
sbb
maskmovq
movs
not
mov
mov
cdq
pop
(bad)
fisub
cld
call
retf
or
dec
lahf
inc
or
cld
icebp
rcr
into
repnz
iret
pop
ins
lahf
add
inc
xor
jae
sub
dec
(bad)
sbb
ins
pushf
pop
cdq
inc
les
(bad)
and
cmps
retf
xchg
inc
push
sub
fcmovnu
jae
enter
pop
mov
cli
ins
loopne
adc
mov
stos
cld
xchg
xchg
popa
aad
popf
je
arpl
sbb
push
stos
test
in
mov
sub
push
mov
xchg
inc
scas
hlt
mov
sti
aam
enter
js
sbb
pop
mov
sbb
pushf
inc
bswap
push
cmp
xor
fwait
jmp
test
add
xchg
jnp
ret
lahf
call
rol
inc
test
add
clc
or
or
xlat
jp
mov
fimul
add
mov
retf
push
dec
cmp
cld
inc
into
loope
lea
fcom
dec
xor
iret
clc
imul
xor
mov
mov
mov
vpsrad
inc
iret
push
inc
sub
inc
pop
pop
test
and
push
sub
std
mov
mov
adc
popf
mov
test
pop
ds
pop
xchg
fcmovne
ret
xchg
movs
xchg
cli
hlt
xlat
scas
cmp
xchg
stc
mov
mov
(bad)
test
mov
push
mov
push
jl
ret
repz
fiadd
push
in
jg
movs
test
fwait
and
std
or
test
push
mov
and
jb
(bad)
out
ja
dec
mov
sub
add
out
jo
or
or
sbb
rcr
cmps
mov
dec
retf
jmp
adc
call
mov
push
lock
cmp
cmp
fwait
imul
adc
pop
inc
in
xchg
xchg
ins
sbb
dec
or
or
gs
out
jno
fsub
mov
mov
int
mov
les
addr16
retf
stos
mov
bound
mov
jle
jns
xchg
stc
dec
xchg
scas
cdq
fidiv
enter
push
adc
mov
or
mov
out
aad
adc
sub
imul
out
test
scas
dec
and
in
es
jmp
(bad)
dec
jb
addr16
pop
mov
cmp
mov
fisubr
nop
daa
cmc
cmps
fsubr
fs
movs
loope
lock
adc
les
push
out
sbb
pop
call
inc
push
lock
test
pop
jl
sub
stc
dec
ret
ret
inc
and
mov
inc
lods
xchg
cmps
mov
sahf
sub
lods
mov
movs
ret
sub
pushf
test
dec
test
lods
dec
dec
inc
rcl
jl
cmp
fst
stos
int
adc
gs
neg
and
(bad)
adc
cmp
lds
shl
mov
xor
movs
pop
loop
xchg
test
sub
or
addr16
xchg
dec
mov
stos
addr16
push
movs
jbe
std
fs
fwait
mov
or
call
icebp
test
push
jno
mov
clc
inc
js
and
sub
pop
sbb
adc
in
xor
mov
icebp
mov
mov
call
xchg
dec
retf
lahf
mov
pop
fist
xchg
xor
mov
inc
adc
stos
add
jg
jno
sub
aam
movs
jecxz
and
jne
test
xchg
or
push
test
fld
sbb
mov
jbe
add
dec
cmp
jge
push
adc
idiv
fisubr
mov
sti
ror
adc
jecxz
cdq
adc
pop
mov
les
inc
test
jno
scas
mov
jns
mov
mov
nop
rcl
std
call
ret
enter
iret
in
add
and
das
pop
(bad)
jb
call
inc
mov
popa
add
push
fdivr
das
add
push
and
mov
je
fcom
push
xchg
retf
xchg
sahf
and
(bad)
test
test
jne
popa
(bad)
push
jl
push
jle
add
and
push
repz
das
(bad)
fcomp
dec
add
dec
jne
cmps
jae
add
sub
add
cld
push
pop
(bad)
mov
or
test
push
retf
sbb
cmp
sbb
movs
jecxz
sbb
xchg
(bad)
pushf
pop
jb
js
mov
xor
inc
gs
jg
outs
fld
enter
aas
push
push
je
jns
les
push
push
out
jmp
xor
jl
pop
jge
pop
jle
in
retf
pop
push
sub
sar
or
xchg
pop
mov
mov
repnz
pop
push
cmp
xchg
dec
imul
popa
push
cmp
adc
loopne
and
out
mov
aam
ins
xchg
jle
dec
xor
data16
aam
out
jg
adc
adc
shl
add
cli
inc
fidiv
rcr
cli
and
mov
or
shl
jle
outs
pop
call
fimul
or
rcr
dec
inc
xchg
ja
xor
sbb
mov
mov
xlat
je
in
sub
pop
loop
jno
or
mov
pop
inc
mov
mov
dec
push
xor
push
mov
popw
xchg
call
es
xchg
jge
sub
fidiv
cmp
aad
pop
in
aaa
int3
leave
mov
arpl
dec
fidivr
sbb
xor
xor
clc
xor
mov
mov
sub
mov
sar
inc
cmps
repz
jecxz
lods
les
push
lea
mov
repz
mov
popa
sub
sbb
stos
lock
cmp
push
leave
add
jo
inc
std
pushf
je
mov
ds
dec
nop
leave
ffreep
aaa
vpsllq
pop
sti
push
lods
test
dec
add
xor
mov
cmp
addr16
push
and
cld
adc
pop
enter
xchg
mov
add
mov
or
leave
pop
add
pop
fist
js
icebp
cmc
into
out
movs
xlat
rcl
ins
mov
shl
scas
movs
in
jnp
(bad)
cld
jge
leave
xchg
popf
jmp
inc
jp
or
add
jge
(bad)
mov
push
mov
inc
dec
mov
out
fstp
mov
jecxz
jle
xor
jnp
mov
jae
fisubr
adc
sar
dec
movs
mov
imul
push
int3
add
pop
jnp
push
or
jge
xchg
mov
jns
mov
adc
mov
cs
xor
sti
mov
and
ds
dec
mov
lea
pop
xor
jnp
mov
jp
in
add
mov
add
pop
pop
pop
ficom
jg
jb
mov
xchg
sub
xor
cmp
inc
push
jle
mov
sahf
scas
mov
lods
dec
mov
push
cmc
push
sahf
sbb
(bad)
push
lods
cmp
jl
push
sbb
es
fisubr
(bad)
scas
dec
into
clc
inc
test
cdq
cmp
jno
out
cmp
call
or
(bad)
enter
sbb
add
test
cdq
cmc
jmp
out
ja
out
pop
rol
mov
pop
fstp
in
imul
arpl
(bad)
pop
pop
(bad)
adc
out
mov
repz
stos
ins
ds
test
test
cmp
push
adc
dec
add
mov
mov
mov
or
aas
xchg
fs
dec
mov
lods
(bad)
popf
out
push
jbe
shr
inc
push
xor
arpl
bound
adc
jns
and
pop
push
jge
push
and
push
xor
xor
in
xchg
mov
in
mov
sbb
mov
je
add
cmps
pop
ins
stos
stos
dec
test
and
stc
ja
in
jl
and
jne
(bad)
sahf
repz
scas
cli
pop
je
call
inc
retf
(bad)
sti
and
pop
sahf
dec
repnz
fwait
xchg
inc
sub
call
dec
cmc
mov
in
aas
fimul
inc
int3
dec
test
pusha
sub
push
mov
mov
push
xchg
pushf
js
icebp
jmp
je
mov
and
fnstsw
mov
nop
ins
fst
lahf
test
test
(bad)
xlat
pusha
mov
jae
arpl
addr16
dec
pop
push
ins
lods
fld
repnz
inc
(bad)
jb
ficomp
pop
cld
inc
imul
and
cmp
sbb
enter
mov
clc
jle
xchg
das
sbb
jge
imul
pop
call
inc
push
(bad)
jmp
push
sub
aaa
pop
xchg
popa
jle
mov
dec
sub
xchg
aad
xor
inc
or
rcr
xor
fadd
inc
rcr
dec
mov
xchg
pop
pop
and
inc
xchg
sbb
sbb
sub
mov
mov
pop
sub
ficom
mov
mov
inc
and
sbb
lods
out
mov
sub
mov
mov
mov
dec
and
add
pop
bound
dec
and
outs
pop
lahf
inc
sbb
xor
push
js
or
ret
outs
neg
xchg
imul
inc
mov
jmp
ret
dec
not
sub
jmp
push
es
imul
psrad
sti
inc
and
cmp
cmp
stos
inc
or
dec
and
jb
pop
sbb
test
shl
loop
shl
adc
inc
jbe
and
clc
lock
add
not
mov
or
push
adc
bound
or
or
out
(bad)
dec
pop
ins
es
cmp
mov
leave
sbb
fmul
fsubrp
ins
xor
out
mov
clc
mov
inc
rcr
mov
inc
sbb
dec
or
adc
and
add
xchg
xchg
add
and
cmp
adc
bound
push
pop
test
addr16
xor
(bad)
mov
inc
cmps
and
jne
jns
xchg
ficomp
xlat
pop
outs
inc
hlt
out
or
lods
add
fild
call
and
xchg
pop
test
sbb
fadd
std
mov
jno
push
push
test
xchg
mov
repz
dec
mov
sbb
jne
out
dec
int3
std
jo
add
iret
shl
cmc
loope
push
sbb
jbe
pop
pop
push
mov
je
pushf
cmp
sbb
scas
xor
jl
jg
leave
add
cmp
sub
xor
xlat
dec
rol
gs
clc
and
sbb
jg
pop
mov
in
and
pop
int3
xor
cmc
outs
iret
and
scas
mov
mov
xlat
and
adc
addr16
or
mov
sbb
sub
pop
rcr
mov
lahf
and
inc
in
cmp
sbb
(bad)
outs
fldlg2
imul
mov
sub
rcr
xlat
fistp
fisttp
pop
or
mov
loopne
cmp
cmp
push
sub
rcr
push
ficomp
scas
(bad)
jnp
and
aam
ja
pop
jne
sahf
pop
out
das
or
mov
repnz
call
test
popf
std
not
xchg
pmuludq
pop
fs
pop
mov
jne
mov
sbb
fcom
(bad)
xchg
lds
mov
and
cmc
std
inc
and
data16
cs
add
or
popa
aam
into
inc
push
cli
dec
jo
popa
inc
jecxz
nop
sar
shl
mov
add
std
mov
add
push
xor
je
fild
addr16
xlat
pop
shl
call
aam
imul
cmp
js
inc
ss
ja
idiv
mov
test
push
cwde
sbb
or
push
inc
leave
adc
mov
cld
xchg
jmp
xchg
test
shl
shr
mov
push
movs
sub
adc
cld
and
call
ret
adc
jno
jmp
and
xchg
jecxz
movs
xlat
or
add
or
pop
mov
nop
push
sub
pop
push
jb
push
or
jne
sbb
pop
add
hlt
dec
inc
jb
xchg
sbb
imul
xor
int
inc
jns
inc
or
or
cwde
push
push
mov
fidivr
sub
rol
iret
jmp
jmp
mov
scas
das
jle
and
(bad)
scas
xchg
loope
in
scas
add
mov
test
addr16
push
inc
test
imul
mov
(bad)
cmp
add
call
retf
dec
push
dec
jno
test
ss
in
cdq
or
stos
add
jae
sub
and
shl
scas
sub
inc
sub
popa
rcl
jge
addr16
hlt
(bad)
inc
int3
cmp
adc
scas
sbb
(bad)
push
test
sub
jle
pop
jmp
dec
(bad)
icebp
test
inc
int
stos
sbb
and
sub
fild
daa
sahf
sbb
call
movs
mov
mul
data16
push
or
cmps
adc
dec
mov
jg
in
pop
jg
fild
sub
stc
ss
xor
into
xlat
cs
inc
daa
lds
pop
int3
nop
adc
push
in
retf
and
jle
fs
cmp
hlt
lea
xor
pop
ins
sub
xlat
popf
xor
fnsetpm(287
sub
inc
imul
fiadd
xchg
jmp
dec
fdiv
ret
mov
(bad)
mov
cmps
sub
xchg
div
clc
mov
cmp
mov
shl
push
das
(bad)
retf
push
cld
pusha
nop
cmp
dec
push
iret
outs
adc
inc
xlat
mov
mov
retf
mov
dec
pusha
repnz
push
jp
(bad)
in
jle
frstor
sbb
int3
popa
jno
jp
ss
cmp
jle
lods
adc
mov
pop
sub
add
sahf
inc
xchg
cwde
add
inc
jo
push
cmps
test
fstp
xlat
std
mov
pop
dec
test
mov
jg
(bad)
pop
xchg
dec
js
or
fwait
cld
or
cwde
sub
clc
sub
mov
mov
(bad)
push
out
pop
fild
popf
xlat
in
sbb
push
xor
popf
popa
jmp
es
(bad)
pop
sub
ins
push
ins
or
int
shl
push
xlat
lahf
mov
(bad)
jmp
ret
sub
(bad)
int
das
sub
add
aaa
ss
cmc
cmp
pmullw
inc
les
into
push
clc
(bad)
inc
xor
retf
add
je
push
pushf
test
sbb
test
arpl
jl
mov
adc
xchg
pop
adc
mov
arpl
retf
sub
push
aas
out
inc
mov
ja
and
sbb
sbb
push
mov
test
pop
movs
dec
frstor
pop
and
add
test
cmc
cs
mov
cmp
arpl
sar
int
mov
(bad)
lock
pop
pxor
test
std
sbb
jg
ins
adc
addr16
retf
hlt
pop
mov
mov
adc
(bad)
in
ret
sbb
cs
xor
jae
arpl
xchg
mov
adc
je
clc
jp
or
xchg
adc
out
and
push
inc
sbb
fst
stos
mov
jl
shl
aaa
mov
cmp
push
addr16
in
movs
(bad)
data16
pop
pusha
dec
rcr
es
fimul
pop
ins
shl
mov
adc
aad
sub
scas
in
outs
jmp
out
adc
ja
push
add
fisttp
xchg
sbb
xchg
imul
cmp
into
adc
cmp
in
hlt
int3
leave
sub
adc
or
ficomp
xlat
test
push
les
mov
fbstp
sbb
pop
fwait
xchg
das
cmp
aaa
out
(bad)
cmp
lods
mov
call
cmc
ins
mov
outs
xchg
popf
xor
sub
cld
and
add
add
imul
pop
pop
sub
idiv
adc
dec
repnz
sbb
or
push
cmp
in
or
in
(bad)
xchg
xor
hlt
push
sub
addr16
(bad)
fdivr
rcr
call
dec
mov
cld
xchg
retf
jns
test
jge
jbe
xor
les
mov
shr
rol
gs
fnstcw
es
mov
add
sbb
mov
xlat
int
sti
and
scas
dec
and
sbb
adc
mov
fsubr
dec
call
lds
shl
loopne
jmp
popf
or
add
pop
dec
(bad)
retf
loopne
mov
loopne
test
pop
cwde
cmp
cmp
adc
into
mov
lahf
sub
sbb
pop
retf
dec
xor
adc
cmp
(bad)
xchg
dec
add
mov
aaa
and
jmp
icebp
add
xor
add
and
mov
clc
push
pop
jg
(bad)
cmp
cmps
inc
fs
dec
in
xchg
out
out
fwait
repz
test
popf
int3
push
in
adc
add
imul
sbb
xchg
mov
cmc
jno
sub
mov
fcomp
(bad)
xor
fwait
sub
arpl
cmp
pop
xor
in
xchg
hlt
fcomip
cmps
aas
lds
retf
push
pop
jle
xlat
outs
in
adc
test
out
imul
mov
jbe
xor
inc
out
jge
mov
movsx
nop
mov
icebp
sahf
push
mov
out
sbb
std
repnz
in
movs
inc
sar
cmp
fcmovnb
stc
mov
retf
rol
aam
pushf
adc
cmps
mov
and
pop
mov
test
fcomp
and
xor
hlt
fs
loop
pop
movs
pop
sub
or
dec
js
retf
or
js
mov
jnp
cli
dec
xor
cmps
xor
jb
push
lds
mov
pop
adc
mov
push
(bad)
out
arpl
and
sbb
jmp
sti
adc
mov
xor
sub
and
mov
push
in
sti
in
fldcw
jnp
(bad)
jnp
dec
call
pop
data16
jp
mov
(bad)
xor
jle
or
rcr
aad
stc
dec
mov
xchg
mov
cmp
hlt
push
jecxz
dec
mov
mov
fst
daa
scas
xchg
xchg
sbb
ret
add
cmp
call
mov
push
icebp
sahf
test
dec
cmps
cmp
add
pop
mov
mov
or
lea
sbb
jne
mov
es
xchg
xlat
jo
mov
inc
mov
inc
test
div
in
dec
sub
mov
add
fcomp
pushf
xor
xchg
pop
data16
cmp
pop
xor
and
mov
add
retf
mov
les
adc
(bad)
sti
dec
add
scas
or
sub
repnz
mov
mov
adc
adc
adc
or
mov
mov
cmp
cmps
inc
and
cwde
ins
and
push
pushf
dec
inc
fs
popf
inc
mov
xor
mov
jne
bound
jnp
das
sti
lods
push
push
sahf
out
mov
mov
cmps
add
test
loope
inc
sbb
adc
mov
dec
or
or
test
pop
jmp
push
dec
scas
mov
dec
hlt
test
mov
cmps
lods
push
mov
xor
sub
lods
push
push
mov
hlt
inc
(bad)
jg
dec
cmc
ss
test
cmps
repz
mov
mov
sub
mov
sbb
push
in
icebp
(bad)
sbb
or
sub
sbb
retf
push
jo
push
cld
xlat
add
dec
jmp
pushf
arpl
cmp
mov
push
and
repz
xor
pop
in
jne
or
xchg
sub
sbb
or
mov
fdivr
sub
ret
movs
ins
xchg
icebp
xchg
ss
and
adc
jo
(bad)
cli
xchg
imul
les
push
xchg
inc
bound
sti
xlat
pushf
and
mov
fbld
jl
sbb
daa
pop
mov
mov
inc
sahf
cmp
frstor
pop
iret
ds
out
pop
fst
pop
cmps
mov
dec
and
loope
push
mov
ds
imul
test
sbb
add
in
jb
jg
or
lea
aaa
jmp
sbb
push
push
loop
push
sbb
or
sub
out
pop
xor
or
popf
test
mov
mov
sub
les
adc
sub
sbb
add
in
sub
mov
pop
push
into
mov
test
dec
mov
retf
mov
xchg
shl
dec
and
jo
wbinvd
cmp
mov
sbb
adc
sub
pop
sahf
stos
jne
and
jne
jns
out
fwait
(bad)
ds
aaa
mov
mov
mov
mov
leave
repnz
pop
stos
fbld
fsubr
and
add
sbb
stos
sub
lock
je
jg
mov
adc
pop
jo
cmp
daa
sbb
in
xor
test
frstor
data16
mov
mov
sub
jmp
loop
test
mov
stos
call
push
sahf
out
jl
pushf
loopne
cmc
icebp
inc
push
hlt
xchg
jno
cli
aas
push
int
mov
cmp
js
cmc
jb
scas
mov
sub
fcom
call
xor
dec
nop
push
jb
popa
hlt
xlat
or
push
mov
dec
or
adc
add
sbb
loopne
inc
pop
mov
inc
xor
test
mov
and
adc
xor
add
sub
out
lahf
mov
in
cdq
ins
jne
pop
in
cmps
(bad)
shl
mov
jae
jns
cmp
aaa
pop
test
adc
push
icebp
inc
frstor
retf
cmps
imul
shl
lahf
movs
mov
lods
xchg
push
xchg
sub
pushw
out
(bad)
(bad)
jmp
dec
xor
or
out
ret
pop
(bad)
pop
or
dec
add
in
ins
add
or
sbb
lock
dec
add
xor
or
mov
add
xor
fst
shl
ins
mov
dec
jno
cmc
mov
hlt
pop
and
bound
imul
jmp
xor
pusha
les
in
cwde
xchg
mov
aas
mov
adc
pop
cdq
retf
fbstp
cmps
adc
fnsave
push
sti
int
icebp
pop
push
mov
popa
dec
jg
and
mov
xor
jmp
mov
push
ds
imul
push
mov
(bad)
lods
add
jae
pop
cmp
xor
je
add
cmp
out
lods
adc
cld
jg
arpl
addr16
cmp
sbb
scas
fnstcw
push
jmp
push
and
pushf
xor
sbb
push
push
sti
out
das
push
rol
mov
push
push
xchg
push
inc
ins
cs
xchg
pop
lods
and
js
sub
int
pop
je
outs
dec
clc
(bad)
fwait
or
sti
mov
fdiv
fnstenv
mov
in
or
sub
mov
test
gs
inc
xchg
cmp
bnd
xor
inc
pop
jb
pop
ds
lahf
cli
inc
or
dec
or
push
cld
dec
lahf
mov
fwait
xor
enter
or
clc
push
adc
xor
adc
or
out
pop
test
shr
imul
inc
cmp
inc
push
add
mov
cmp
in
xlat
inc
push
stc
(bad)
dec
repnz
mov
aam
ja
push
and
dec
and
ret
fcmovne
fs
pushf
movs
or
mov
bound
(bad)
shl
sar
sub
int3
dec
push
test
scas
pop
add
mov
pop
lock
adc
sbb
out
mov
add
ficom
leave
daa
cld
retf
push
jp
adc
addr16
outs
sub
loop
test
movs
jg
std
add
mov
rol
test
dec
push
cmps
mov
jbe
inc
test
or
test
test
les
pushf
retf
mov
fwait
jns
jp
cld
fiadd
sbb
xor
xchg
mov
in
int3
mov
cmps
or
js
inc
mov
pop
ficom
repz
aaa
je
int3
or
xchg
push
sti
cmp
ret
add
dec
mov
test
test
jno
pop
das
inc
xchg
pop
add
cmp
lock
clc
and
jnp
mov
cmp
mov
fscale
test
shl
mov
ds
sahf
add
mov
popa
jecxz
sub
adc
inc
pop
mov
fdivr
jge
imul
inc
fsubr
shl
les
xchg
jns
mov
in
mov
pop
jo
mov
adc
lea
mov
pop
inc
lods
mov
aad
fcomp
dec
nop
in
xor
out
clc
out
lahf
jb
cmc
(bad)
mov
sub
rcr
xchg
mov
xchg
lahf
push
add
jp
aam
cld
inc
out
hlt
fidiv
inc
fidivr
mov
jmp
call
test
jg
adc
mov
sub
ffree
stos
call
jg
pop
xchg
cwde
and
ja
fstp
imul
iret
(bad)
mov
mov
sbb
mov
into
mov
outs
or
sbb
cmps
(bad)
xor
mov
fld
adc
fcmove
cmp
cmp
add
jnp
add
fbstp
pop
les
imul
sub
ficomp
mov
in
sub
stos
push
(bad)
xchg
(bad)
xor
test
cmp
stc
xchg
stos
in
xchg
xchg
(bad)
and
aad
inc
adc
shr
pushf
test
(bad)
jge
and
(bad)
sub
nop
paddsb
shl
fadd
mov
mov
push
inc
sbb
jnp
and
jmp
fistp
sub
mov
movs
stos
js
repnz
ret
mov
cwde
cmp
inc
dec
sub
sbb
outs
cmp
aad
dec
and
add
sbb
lods
jmp
iret
xor
push
movs
dec
cdq
shl
and
add
repnz
xchg
test
rcl
sbb
sub
(bad)
jl
es
test
jbe
sub
xor
je
std
in
mov
jg
jne
mov
adc
es
and
repz
hlt
push
or
bnd
xor
scas
mov
ja
jl
push
and
mov
xchg
dec
inc
inc
int
emms
pop
sub
fwait
cmps
out
clc
out
rol
cmp
inc
push
call
hlt
in
ret
shr
sub
vpunpckhbw
cli
adc
scas
push
cmp
jmp
sbb
std
sub
jae
mov
adc
in
and
sub
into
jecxz
sub
fs
jecxz
out
fisttp
cmps
push
test
dec
or
jae
aad
mov
pop
cmc
sar
add
repnz
xchg
rcl
cmp
and
mov
push
loopne
sub
cmp
jg
xor
nop
inc
push
lods
jae
fild
ror
in
mov
push
sti
data16
and
push
pop
jg
jns
outs
ins
pop
and
jp
cmp
mov
cmp
push
or
dec
lock
xchg
adc
aam
push
test
mov
fnstenv
je
mov
pop
jno
jmp
xor
pop
mov
test
aaa
push
inc
adc
push
clc
jl
push
mov
adc
sbb
and
outs
int
shl
mov
jge
(bad)
jg
mov
das
push
les
jno
out
inc
stos
fild
(bad)
iret
(bad)
xlat
cli
dec
jge
pop
mov
mov
xchg
in
je
stc
mov
and
fs
cmp
fwait
rcl
(bad)
jmp
mov
fs
std
jnp
jle
mov
sar
mov
ss
xchg
aam
sbb
pop
and
add
iret
mov
inc
movs
jmp
jns
adc
mov
je
push
mov
or
lea
ja
jns
xor
sbb
jb
aam
sub
fst
call
mov
or
pop
dec
mov
mov
xchg
xor
mov
stc
mov
jecxz
pop
pop
and
arpl
pop
std
add
test
jns
hlt
and
xchg
sahf
push
sub
nop
and
xchg
clc
aam
xor
pop
in
int3
add
in
dec
inc
cmp
push
inc
das
retf
pop
cmp
inc
loope
icebp
mov
mov
dec
pop
ja
in
lock
call
fcom
gs
(bad)
or
div
in
jp
cmp
hlt
stos
ror
mov
(bad)
ja
dec
pop
jb
repz
test
dec
mov
ins
data16
(bad)
and
jo
pop
jp
bound
push
fsubr
cmp
push
mov
xchg
mov
pop
addr16
xor
fwait
mov
add
push
rol
and
call
(bad)
daa
push
mov
xor
dec
jg
popf
jo
sahf
pop
mov
add
and
or
xor
add
xor
sub
imul
mov
cmc
add
lock
sub
push
sbb
ret
mov
xchg
ffreep
jmp
sbb
retf
sub
out
xchg
mov
mov
push
add
jle
sub
data16
das
sbb
cwde
adc
push
sti
test
aad
add
cdq
fcomi
lds
push
pop
fcomp
and
xor
push
in
mov
push
xchg
xor
cmp
or
sbb
sub
ins
outs
inc
inc
sub
cmp
push
dec
fimul
fimul
div
test
call
or
sub
push
mov
pop
ret
inc
(bad)
push
(bad)
mov
dec
fsubr
lea
cli
add
fcom
pop
movs
stos
cmp
pop
icebp
sbb
shl
adc
lds
push
push
loope
and
fs
fs
vmovq
shr
adc
popf
add
clc
adc
jae
outs
movs
or
inc
mov
xlat
cdq
mov
aam
lods
sti
lock
addr16
pop
sub
or
fcomp
add
or
sub
xlat
adc
adc
jp
push
gs
mov
mov
xchg
retf
lea
push
jne
dec
cmps
les
mov
mov
jae
fmul
sub
cmovns
ret
rcl
shl
call
cmc
mov
mov
dec
lods
cmp
mov
fwait
push
jnp
nop
pop
adc
mov
adc
pop
mov
cmps
jmp
add
mov
mov
add
jecxz
out
in
mov
dec
push
data16
jnp
aad
movs
jle
mov
pop
inc
pop
inc
in
xor
and
(bad)
mov
xor
fiadd
xchg
mov
pop
mov
xchg
sbb
fstp
mov
mov
(bad)
xchg
test
loop
xor
es
push
rcl
jmp
pusha
mov
jmp
xor
lods
and
pop
ins
cld
fild
inc
mov
add
push
xor
or
jbe
mov
xchg
out
(bad)
sti
ins
push
dec
mov
cmps
and
inc
pop
ins
xchg
hlt
fidivr
loopne
out
mov
ror
in
or
push
repz
sub
xor
enter
jl
cdq
inc
xchg
cmps
fs
inc
or
js
pop
iret
fidiv
xor
fdiv
dec
or
std
je
adc
in
daa
mov
movs
mov
fisubr
in
mov
std
lods
les
sbb
clc
fisttp
xchg
aam
mov
cdq
mov
xchg
mov
clc
push
add
lock
mov
dec
fbstp
and
inc
retf
sbb
movq
lahf
dec
mov
stos
xchg
inc
repz
nop
inc
addr16
mov
fcomp
cdq
or
adc
push
mov
ss
lods
mov
fidivr
mov
xor
sbb
pop
les
(bad)
pop
push
pusha
ss
mov
adc
inc
mov
pop
sbb
jno
sub
and
xchg
repnz
mov
push
mov
pop
rol
mov
pop
std
iret
jo
and
mov
push
or
movs
call
dec
jbe
mov
popa
pop
sti
or
xchg
repz
imul
dec
xchg
aam
xor
loopne
xchg
(bad)
lock
sbb
ja
jo
in
aam
fmul
iret
into
mov
pop
(bad)
in
mov
out
adc
push
mov
inc
mov
xor
cmps
mov
and
fild
rcr
xor
cmc
mov
into
inc
inc
retf
mov
int3
outs
jbe
ret
and
mov
xor
jmp
js
enter
adc
test
loop
rcl
adc
stos
add
inc
add
cmp
jmp
sub
ror
xor
cmp
add
mov
outs
retf
sbb
pop
add
test
push
ins
retf
jg
test
(bad)
ja
sbb
push
nop
pop
pop
nop
add
add
inc
jp
xchg
dec
push
push
sub
mov
cmp
adc
out
sbb
sbb
scas
rcl
or
call
retf
jl
(bad)
sbb
arpl
jns
push
pop
outs
xchg
hlt
stos
dec
xchg
fnsave
lds
push
cli
sub
dec
adc
jge
not
sbb
pop
mov
inc
inc
movs
add
adc
inc
out
enter
and
xchg
xchg
add
inc
push
popf
push
mov
ror
je
adc
add
test
aam
lods
mov
inc
popa
pop
xor
out
jle
jg
sub
dec
push
sbb
xchg
lds
and
xchg
test
mov
scas
add
mov
mov
lds
and
push
sbb
pop
cmp
test
lahf
es
(bad)
fidivr
div
add
dec
test
inc
dec
jge
push
shl
inc
loopne
pop
stos
sti
movs
sbb
imul
jne
imul
sahf
popa
scas
movs
jge
nop
fiadd
sbb
stos
(bad)
mov
outs
loopne
imul
js
(bad)
in
nop
jle
add
jae
out
jmp
(bad)
cli
imul
in
pop
dec
mov
adc
ret
ins
push
dec
add
scas
pushf
xor
jne
cmp
pop
test
jp
jl
xor
and
mov
mov
dec
inc
sbb
dec
enter
(bad)
cmps
(bad)
xchg
jno
xchg
mov
imul
test
sbb
sbb
out
mov
add
in
mov
inc
popa
pop
daa
scas
push
adc
xor
pop
lahf
mov
shl
shl
sub
pop
or
retf
es
imul
or
push
dec
add
xchg
es
loopne
xchg
out
jge
mov
icebp
daa
jge
das
(bad)
push
int3
pop
jae
ds
sahf
and
push
outs
pop
in
inc
cs
imul
mov
mov
mov
add
xor
fadd
shl
mov
cmc
outs
je
sti
scas
xor
inc
jecxz
popf
mov
fldenv
ror
mov
jecxz
in
jmp
and
retf
dec
mov
dec
cmp
es
pop
dec
xlat
out
jmp
and
jae
or
mul
mov
dec
push
ins
lods
in
out
adc
bound
mov
jle
adc
ret
sbb
or
xor
mov
scas
pop
lea
cli
push
inc
les
mov
adc
jne
sub
lods
jmp
mov
outs
xor
mov
cwde
(bad)
jb
jb
adc
inc
fmul
push
mov
sahf
outs
sbb
fs
dec
cmp
fcmovbe
xor
outs
cmc
stos
fs
lahf
scas
repz
jp
inc
nop
sub
popa
jp
cmp
jbe
aad
iret
dec
push
shl
pusha
mov
add
xchg
xlat
jl
push
push
cmp
mov
aaa
aam
push
push
dec
xor
jmp
shr
push
neg
adc
pop
fidivr
fsub
cli
in
cmp
or
mov
or
movs
mov
mov
dec
jne
sub
mov
daa
das
adc
or
es
and
sub
test
dec
mov
pop
cmp
push
mov
ret
cli
pop
rcr
mov
in
and
jnp
mov
and
pop
jg
push
push
and
cmps
ins
xchg
repz
out
sbb
in
rol
xchg
in
mov
sahf
out
lods
xchg
lea
in
jmp
inc
rcr
mov
xor
ret
push
sar
pop
lahf
push
test
out
jns
(bad)
icebp
ret
ss
xchg
sbb
pop
aad
pusha
movs
or
(bad)
cmp
jno
jmp
fwait
scas
dec
inc
mov
enter
lds
pop
lods
fld
xor
xchg
pop
sbb
mov
pop
imul
int
rcr
mov
outs
push
mov
inc
jo
xor
rcl
lods
scas
add
frstor
in
mov
(bad)
cmps
inc
dec
inc
out
pop
and
adc
or
int
(bad)
adc
lods
retf
sbb
push
ins
mov
cmp
dec
adc
mov
loop
or
adc
pop
xchg
aad
jle
int3
enter
dec
inc
test
add
(bad)
(bad)
cmp
push
(bad)
push
shr
inc
pop
cmp
and
mov
or
mov
shr
iret
enter
and
cmps
dec
movs
loop
jg
and
mov
mov
add
push
in
inc
mov
rcl
cmc
into
dec
lea
adc
repnz
xchg
adc
fild
jmp
sti
outs
cli
shl
jecxz
in
push
paddsb
call
sbb
mov
sub
mov
mov
movs
xchg
mov
dec
and
inc
in
pop
xor
fs
adc
dec
pop
stos
addr16
daa
dec
jl
scas
repnz
leave
pop
adc
jmp
pop
bnd
jmp
jecxz
mov
mov
xchg
inc
popa
call
inc
rcl
popa
in
ficom
stos
push
jno
and
lds
dec
dec
cmp
sub
add
pop
mov
cmp
push
stc
je
lahf
ret
test
fst
xchg
(bad)
xchg
mov
mov
or
jp
in
pushf
cmps
fisttp
je
xchg
call
pop
clc
xor
cmc
jbe
lds
fsub
ret
pop
dec
into
ss
xor
ret
jbe
pop
xchg
sbb
add
sub
and
and
xchg
push
jns
popa
scas
dec
adc
cld
inc
fst
outs
and
mov
shl
jl
adc
mov
(bad)
dec
or
and
jmp
jmp
shl
pop
add
mov
sbb
push
cmp
push
xlat
std
xchg
in
xchg
inc
mov
retf
push
rol
ror
cmps
stos
mov
mov
mov
pop
dec
mov
retf
ret
xchg
sbb
ds
clc
popf
sbb
xchg
test
gs
clc
mov
mov
loope
aaa
movs
xlat
lods
mov
sub
push
inc
out
das
or
test
rol
mov
push
jg
dec
jns
call
shr
cmps
sbb
movs
or
(bad)
ss
and
cmp
ins
cmps
mov
push
into
sbb
mov
loopne
ret
sbb
jnp
add
cmp
push
or
out
sbb
xchg
mov
push
mov
xor
and
and
rol
mov
and
mov
xor
int
dec
into
ficomp
pop
shl
mov
mov
int3
pop
dec
lea
inc
test
std
or
leave
jno
in
sub
mov
pop
vsubsd
ds
repz
mov
add
dec
push
mov
(bad)
inc
sahf
pop
xchg
mov
push
lds
pop
arpl
test
pusha
cwde
inc
pusha
pop
out
lods
jnp
lods
jg
mov
stos
in
das
and
jae
lods
scas
pop
pop
retf
sub
dec
mov
xor
call
adc
fs
test
inc
mov
jl
(bad)
lahf
or
jmp
mov
xlat
sbb
(bad)
dec
bnd
or
ficom
ret
pop
neg
loop
xchg
fs
lock
repz
test
inc
in
addr16
sahf
cmps
clc
push
inc
push
sti
daa
rcl
add
inc
pop
shl
aas
das
inc
push
ins
push
xor
jo
bnd
adc
or
inc
das
in
push
data16
sub
imul
ret
push
add
out
movs
xchg
into
mov
fdivr
xor
dec
inc
loopne
in
jae
add
sbb
pop
icebp
add
xchg
je
test
out
mov
dec
or
add
jmp
cdq
xchg
adc
inc
pop
test
cli
cmc
popf
pop
pop
xor
cli
mov
sar
stos
or
jecxz
sahf
push
pop
pop
mov
popa
add
push
lea
mov
adc
xchg
mov
test
xor
mov
inc
mov
loop
out
stos
xchg
data16
imul
fsubr
mov
daa
pop
jne
mov
or
stos
pop
out
xchg
fsub
movs
mul
cmp
in
aaa
scas
cmps
mov
dec
(bad)
push
push
ds
xchg
xchg
pop
sbb
xor
inc
jecxz
lea
mov
dec
mov
add
jle
adc
adc
mov
mov
xor
xchg
movs
dec
inc
cmps
inc
aas
sub
cdq
add
addr16
mov
retf
mov
cwde
(bad)
mov
pop
pushf
mov
pop
sbb
loope
dec
xchg
enter
push
xchg
dec
out
sti
inc
loop
ins
outs
test
repz
fcomi
xor
inc
shl
retf
sbb
jb
mov
mov
out
pop
mov
fadd
aas
mov
jl
jo
xor
loope
mov
add
mov
cmp
into
sub
sahf
int3
mov
add
fcmovnbe
sub
mov
std
fdivr
adc
mov
push
dec
lock
cmp
dec
cmps
jle
sbb
test
pop
jne
push
push
icebp
pop
cmc
mov
jne
inc
and
les
out
cdq
aad
pop
mov
xchg
cmp
push
vpsadbw
pop
ror
lea
pop
xchg
or
out
enter
mov
mov
cmp
call
and
lahf
enter
dec
movs
jno
clc
lds
out
ins
frstor
mov
inc
stos
xor
push
es
and
push
pop
test
call
imul
add
dec
mov
out
bswap
idiv
adc
das
lods
or
xor
sub
push
cmp
push
loop
xor
jg
pop
fidiv
or
test
inc
xchg
jl
mov
xor
xchg
add
xor
out
xchg
int3
sub
out
dec
nop
adc
pop
in
or
jge
push
and
push
repz
pop
sub
ficom
cmp
int3
xchg
mov
push
mov
int3
shr
(bad)
cmp
add
fisttp
push
push
adc
mov
aaa
jne
cmps
or
pop
add
jo
call
xchg
sub
mov
movs
pusha
pushf
xchg
or
fstp
pop
xchg
scas
push
std
cmp
and
xor
inc
xor
hlt
dec
not
mov
(bad)
cmp
mov
push
inc
mov
fimul
lods
ret
ins
sub
outs
xor
mov
call
jno
adc
(bad)
mov
fs
out
fidiv
retf
add
inc
arpl
nop
mov
push
xchg
push
neg
mov
cmp
loope
push
mov
fisttp
test
retf
and
(bad)
lea
jmp
pop
xchg
xchg
push
ss
invd
jmp
fld
dec
lods
xor
add
jge
fwait
mov
ficomp
(bad)
call
pop
(bad)
xchg
jmp
ret
mov
or
popa
not
mov
loop
adc
cmp
jl
or
pop
in
ja
nop
loope
and
lods
add
movs
movs
pop
mov
dec
fcomp
repz
dec
stc
jbe
cli
sbb
ins
push
sub
mov
dec
aas
movs
leave
or
cmc
xor
or
neg
mov
inc
jge
lock
sub
cld
int
loopne
or
das
and
aad
popf
into
out
loopne
xchg
ins
mov
xchg
out
ss
cwde
push
loope
dec
adc
pop
sub
sub
cld
les
call
dec
cmps
int3
cdq
add
pop
push
and
jmp
pop
mov
inc
call
inc
fs
sub
pop
icebp
jmp
jmp
add
sub
dec
out
and
mov
push
ret
add
mov
sub
add
arpl
mov
int
cmp
movs
mov
fldenv
add
mov
data16
mov
into
ds
xchg
jno
mov
xor
in
dec
jle
push
or
repnz
xchg
sbb
mov
pop
pop
sub
mov
pop
sub
adc
or
out
jns
jecxz
mov
inc
or
(bad)
movs
aaa
(bad)
xor
rcr
pop
fbld
test
and
adc
pop
aaa
stc
push
dec
xchg
mov
lods
pop
test
xchg
jge
retf
fld
sbb
inc
ins
bound
jmp
add
mov
push
into
retf
and
imul
or
jo
aam
mov
loopne
ret
adc
sbb
sub
dec
stc
pop
xor
xor
into
fistp
pop
arpl
nop
das
fwait
push
sub
xchg
cmp
fidivr
in
mov
push
xchg
dec
xor
sub
mov
add
pusha
aaa
mov
sub
aas
cmp
add
jl
shl
not
(bad)
repz
mov
jmp
xchg
mov
inc
cmp
push
xchg
ins
mov
inc
push
aaa
out
xor
pop
xchg
cld
push
fisttp
not
xor
aas
rcl
adc
mov
or
sbb
xor
mov
pop
cmp
mov
mov
inc
adc
add
sbb
(bad)
jmp
inc
sub
je
js
jne
jmp
dec
push
jle
xlat
jp
mov
ret
imul
dec
les
test
frstor
jne
sub
mov
jno
or
sbb
jl
sbb
or
dec
pop
shl
test
mov
dec
es
out
push
(bad)
repz
outs
cs
jbe
sar
fisubr
or
ins
cmp
mov
mov
sbb
xor
ins
xchg
ror
cmp
test
out
retf
iret
cmc
repnz
sbb
mov
push
pop
cmps
loop
xor
inc
adc
imul
test
mov
(bad)
or
adc
adc
mul
xchg
inc
iret
into
inc
jmp
adc
dec
movs
xchg
pushf
cmps
stos
imul
jnp
xchg
jns
lahf
mov
dec
int3
pusha
(bad)
push
dec
shr
add
cdq
dec
repz
popa
popa
mov
xchg
cdq
(bad)
cmp
enter
in
pop
inc
dec
jnp
ret
push
inc
mov
dec
fidiv
and
xor
jle
nop
retf
aad
adc
mov
outs
inc
xchg
clc
jge
(bad)
in
xchg
loopne
cmc
cmp
cmp
sbb
cmp
jmp
aaa
ss
dec
mov
sar
out
mov
lods
enter
outs
mov
mov
test
pop
cmp
(bad)
and
dec
sbb
ins
fisttp
test
mov
retw
lods
mov
inc
mov
int
cmc
lahf
mov
test
push
iret
cmp
adc
adc
(bad)
scas
inc
sub
data16
fsubr
cdq
fs
pop
sub
mov
xor
or
fdiv
sbb
sub
scas
out
dec
xchg
pushf
call
adc
and
ins
test
les
xchg
call
lea
push
adc
push
jecxz
shr
int3
jl
(bad)
xchg
push
adc
rcr
dec
push
inc
lea
dec
imul
push
sti
adc
sub
pushf
pushf
ror
lds
mov
mov
(bad)
mov
call
pop
imul
pop
iret
add
push
jp
cmp
cmps
std
in
add
mov
sub
add
popa
sub
dec
mov
jnp
dec
pop
jnp
add
mov
inc
mov
and
dec
mov
ror
rcl
lds
xchg
jecxz
nop
mov
mov
out
add
inc
mov
push
je
and
(bad)
jecxz
fbld
jg
dec
xor
sub
enter
and
movs
aaa
jmp
loop
fstp
mov
mov
xor
add
cmps
stos
xor
lods
jge
fcmovnbe
sub
lds
xchg
scas
jg
ds
retf
jle
fisubr
mov
jne
xchg
dec
dec
ds
(bad)
dec
call
ja
or
int
rcl
into
mov
es
cmp
sub
in
mov
outs
jbe
inc
sub
inc
aam
fwait
add
not
icebp
pop
cmc
or
fcom
or
mov
cmp
call
or
jle
mov
(bad)
loope
push
dec
repnz
fdivr
adc
xor
lahf
daa
adc
rol
ret
inc
inc
aam
ret
and
(bad)
jecxz
mov
mov
rcl
loop
jnp
into
add
(bad)
pop
test
pop
xor
cs
push
mov
pop
xlat
sti
xlat
or
int
enter
cwde
ins
dec
cmp
pop
adc
pop
es
pop
(bad)
sbb
xor
out
cmps
mov
and
sbb
push
ror
add
mov
in
pop
sub
sbb
inc
pop
or
ins
jns
inc
das
inc
adc
ja
sub
(bad)
push
push
mov
out
pop
test
call
sbb
addr16
rol
fiadd
inc
mov
sub
inc
inc
dec
push
fs
pop
cdq
gs
jns
jmp
xchg
add
lahf
pop
adc
add
loope
int
addr16
dec
cmp
jl
push
xchg
push
frstor
push
sub
test
jmp
cmps
mov
pushf
mov
mov
pop
lahf
and
loope
sbb
addr16
fimul
push
iret
xchg
pop
fsubr
(bad)
loopne
pop
ds
and
xchg
bound
cmp
iret
gs
xchg
lods
fst
push
mov
int3
in
stos
les
int3
mov
mov
mov
dec
jp
sbb
arpl
dec
add
dec
inc
ins
mov
inc
lock
jecxz
retf
mov
adc
adc
mov
(bad)
lods
arpl
fwait
lock
out
xchg
mov
into
or
prefetcht0
out
(bad)
sbb
jl
xchg
add
(bad)
clc
es
gs
sbb
sub
or
ds
jb
imul
fwait
clc
mov
add
adc
jo
inc
push
xchg
cld
mov
dec
jge
cdq
scas
sub
cmps
pop
sbb
lahf
sub
mov
add
scas
movs
xor
leave
icebp
mov
rol
sbb
fprem1
leave
mov
xchg
nop
retf
(bad)
pop
jmp
test
ins
cld
pusha
mov
jmp
arpl
neg
test
add
add
shl
xchg
mov
pop
leave
addr16
lahf
mov
sbb
sub
and
shr
cli
mov
test
pop
adc
push
js
xchg
add
push
nop
loopne
push
push
das
stos
fsub
rcl
and
fidiv
xor
xor
xor
fxch
xchg
pop
push
mov
jl
sub
push
dec
int3
sbb
outs
aaa
pop
jge
(bad)
jp
jnp
sar
mov
push
out
pusha
test
or
sub
popf
dec
enter
mov
sahf
js
cli
(bad)
cmps
sbb
bound
push
or
jo
ficomp
inc
in
mov
stos
lds
push
(bad)
sahf
or
jns
xchg
dec
jl
jmp
pop
jmp
xor
cmp
shl
scas
pop
cmc
push
arpl
or
lods
xchg
int3
outs
retf
push
fwait
inc
mov
daa
pop
push
addr16
and
xchg
outs
mov
cli
push
mov
in
sbb
ret
or
test
inc
(bad)
xchg
or
mov
movs
add
(bad)
cli
push
dec
aaa
ss
jb
jmp
jbe
aam
and
xor
or
fcmovu
fwait
in
adc
push
xor
mov
stc
xor
adc
and
or
ja
ficomp
and
dec
test
inc
dec
xchg
cmc
and
and
test
xor
loop
push
das
adc
repnz
fwait
scas
out
lahf
nop
jmp
in
mov
stos
push
xchg
imul
push
mov
xchg
ficom
sbb
jnp
dec
icebp
cmps
repz
cmp
dec
mov
jne
add
call
popa
sbb
fistp
iret
cmp
inc
call
repz
repz
scas
jle
(bad)
lea
call
add
retf
adc
adc
aad
jmp
inc
test
data16
push
lea
movs
jl
fnstcw
sar
movs
bound
cmp
sbb
cmp
mov
ins
pop
lahf
inc
xor
cli
inc
pop
(bad)
cmc
cmps
rol
js
mov
(bad)
cld
jmp
pop
repnz
pop
lods
xor
test
icebp
dec
cmp
fcomip
jmp
push
dec
rcl
bound
mov
mov
ja
mov
in
dec
out
sub
stc
pop
push
mov
dec
cdq
loopne
mov
and
xchg
xchg
jmp
xor
cwde
repz
fs
pop
add
pop
mov
les
xchg
call
out
push
xlat
sbb
push
sub
jmp
test
clc
lahf
or
sar
int
in
sbb
adc
outs
xchg
test
mov
cmc
inc
pop
sbb
lods
mov
sar
push
sub
sub
jmp
aas
mov
hlt
scas
xor
hlt
and
fild
sbb
push
jmp
pop
push
xor
push
sbb
add
sti
popa
mov
push
or
stc
jmp
stos
dec
test
fcmovnb
fstp
aad
bound
movs
out
inc
jb
xor
mov
pop
and
pop
retf
jmp
dec
aaa
rcl
test
inc
cmc
pushf
xchg
sar
pop
xor
repnz
lods
push
mov
cdq
xor
jnp
jge
xchg
mov
(bad)
push
fadd
mov
jo
pop
dec
sar
cmp
mov
and
aam
fimul
mov
xor
sbb
sbb
(bad)
(bad)
lds
add
cmp
(bad)
cmp
fidivr
xchg
loope
or
sbb
push
jmp
xchg
fsub
mul
xor
cmp
add
jp
dec
push
mov
pop
or
jns
push
sbb
aam
stos
fs
mov
jmp
dec
sub
lock
cdq
cmp
popa
shr
mov
inc
push
xchg
xchg
repz
and
out
mov
xchg
mov
push
gs
jb
das
dec
mov
daa
dec
dec
jmp
add
test
mov
mov
mov
jne
test
inc
or
pusha
and
hlt
inc
xlat
sbb
std
(bad)
fdiv
dec
pop
(bad)
es
cdq
mov
pop
inc
jno
pushf
pushf
dec
sbb
cwde
loopne
dec
dec
in
stos
cmp
dec
rcr
mov
cmovle
dec
sbb
adc
adc
cmp
stos
pop
aaa
mov
nop
scas
mov
rep
pop
xchg
fistp
int3
sbb
adc
(bad)
test
jecxz
cmp
add
cmp
adc
outs
jge
(bad)
jmp
jle
xchg
ins
jmp
adc
add
xchg
loope
xchg
add
mov
and
fucomip
jl
cmp
fucomi
div
hlt
sbb
mov
out
fild
sub
cmp
push
pop
xchg
pop
xchg
ficomp
and
mov
sub
sbb
jb
inc
cmc
in
dec
and
test
sar
cmp
fwait
mov
sbb
pop
sbb
push
bound
pop
push
jmp
adc
mov
mov
call
(bad)
ins
mov
out
mov
cmp
fst
add
xchg
scas
inc
xchg
inc
jns
sub
adc
mov
mov
push
ror
pusha
xor
frstor
(bad)
sub
xor
fild
cmp
shr
jb
jl
mov
adc
inc
mov
inc
dec
mov
rcr
adc
sub
xchg
repz
retf
mov
dec
mov
out
(bad)
mov
cmp
aas
fist
fild
fistp
movs
jge
adc
ficom
dec
xor
arpl
popa
(bad)
cmps
cmp
push
out
adc
jo
les
repz
xchg
es
pop
nop
or
jae
inc
aad
pop
inc
sub
or
fist
xlat
(bad)
stc
arpl
inc
add
cmps
call
xor
shl
loope
add
or
mov
outs
std
ret
or
ret
add
data16
scas
mov
mov
adc
clc
addr16
cmp
iret
pop
mov
jno
cwde
mov
ficomp
ja
cmps
xchg
data16
jbe
fwait
call
cmp
jae
jbe
out
mov
xlat
lods
sub
dec
stc
imul
fstp
inc
gs
inc
aaa
sub
sbb
jecxz
mov
out
retf
je
pop
repz
pop
stos
or
fsub
mov
mov
xlat
(bad)
(bad)
mov
bound
stos
das
ret
xchg
mov
mov
mov
test
cmp
adc
xchg
fisubr
fild
(bad)
fdivr
(bad)
push
xchg
leave
int
(bad)
outs
repz
ret
scas
inc
lods
pop
movs
outs
rol
mov
mov
(bad)
xchg
js
or
mov
xor
daa
mov
js
mov
xor
jmp
retf
adc
ficomp
mov
pop
jecxz
jmp
ja
mov
adc
int
jns
jle
push
rcl
mov
in
test
add
inc
mul
push
daa
shr
push
sbb
jno
xchg
pop
jbe
ret
xor
fild
mov
add
mov
or
push
arpl
or
lods
dec
pop
mov
(bad)
pop
retf
pushf
cmp
inc
mov
mov
ds
dec
into
jecxz
add
fnstenv
xor
repz
cdq
fisttp
jae
push
shl
xor
out
std
in
adc
jp
sub
sti
mov
repz
cmp
pop
int3
leave
xchg
xor
and
mov
loopne
std
mov
add
out
in
mov
std
inc
repnz
lea
add
mov
addr16
in
out
jecxz
in
mov
scas
ds
sub
jge
in
adc
dec
gs
(bad)
and
cmp
in
icebp
mov
mov
ja
out
adc
sahf
or
mov
imul
cmp
add
mov
in
cmp
or
mov
out
adc
inc
mov
push
pop
cmp
adc
push
cmc
cmp
xor
dec
cmps
jb
xchg
push
in
(bad)
xor
sub
mov
mov
fwait
add
icebp
jmp
sbb
jns
xor
add
mov
add
inc
mov
(bad)
stc
cmp
push
out
test
ret
cmp
adc
sbb
lds
jno
sub
push
cmp
add
xor
mov
int
cmp
sbb
iret
dec
xor
adc
pop
sub
jb
daa
lods
ret
inc
sbb
in
inc
adc
rcl
adc
mov
jb
ss
push
scas
leave
ret
jl
test
jmp
pop
inc
sbb
cmp
jnp
test
stos
mov
(bad)
mov
loop
pushf
sub
jecxz
rcl
fwait
sbb
out
pop
dec
jb
or
jge
hlt
retf
sbb
repz
push
push
test
aaa
movs
xchg
jb
inc
pop
das
outs
mov
xchg
in
mov
and
into
adc
sahf
xlat
mov
in
add
cmp
js
loop
cmps
enter
(bad)
call
sub
mov
or
dec
jle
movs
mov
and
call
lahf
bound
add
push
out
cmps
outs
fisttp
les
push
inc
fs
cdq
mov
fwait
add
push
mov
popf
scas
jnp
pop
mov
les
clc
shl
sbb
xor
mov
cmovg
int3
fwait
mov
hlt
imul
es
xchg
movs
dec
and
push
es
xchg
out
cdq
xor
stos
pop
shl
cmc
fs
stos
div
or
pop
lods
dec
or
inc
rcr
mov
or
pop
mov
xchg
sub
call
mov
push
add
pop
cmp
mov
adc
les
cdq
jle
push
hlt
cmps
neg
mov
or
jge
paddsb
mov
mov
not
mov
imul
and
push
iret
aas
push
mov
cmps
inc
adc
ja
cmp
fcmovnb
pop
(bad)
xor
mov
mov
sbb
jno
inc
data16
add
mov
jb
out
mov
push
or
xlat
mov
loop
sub
je
dec
cmp
scas
shr
sahf
mov
(bad)
pop
adc
mov
or
mov
outs
dec
pop
mov
mov
mov
adc
das
(bad)
out
push
sahf
dec
loopne
sbb
pop
pop
mov
sbb
cld
mov
jmp
repnz
jmp
add
cmp
fild
xor
cmp
nop
cmc
jbe
jg
stos
inc
lock
and
es
sub
pop
ja
add
iret
push
add
mov
xlat
(bad)
jbe
inc
mov
mov
gs
adc
jns
sub
fisub
cmc
mov
mov
addr16
dec
adc
sti
(bad)
pop
leave
loop
lods
arpl
mov
xlat
rcr
retf
jno
jbe
sub
call
pushf
loop
xchg
jne
mov
xchg
mov
shl
pushf
popa
cs
cwde
call
aas
mov
std
je
inc
jge
shl
test
dec
push
fcmovnb
hlt
push
nop
in
sahf
les
and
(bad)
scas
(bad)
jmp
mov
scas
out
sbb
int3
jmp
stos
mov
jbe
fcos
adc
ret
je
push
dec
sub
pop
jecxz
shr
xchg
lods
xor
fnstcw
push
popf
sub
bound
popf
shl
xchg
sbb
(bad)
pop
leave
lss
retf
ins
sbb
jnp
dec
pop
popf
call
push
sti
jecxz
pop
sbb
adc
mov
mov
xlat
sub
push
or
jmp
ins
mov
cmp
add
jbe
jno
jne
daa
jl
and
mov
mov
push
popf
test
inc
mov
retf
ja
(bad)
sub
pusha
add
jno
push
fcom
push
xchg
dec
push
movs
pusha
mov
add
enter
popf
xchg
scas
mov
imul
std
mov
mov
aas
in
jno
loope
and
push
mov
pop
jge
stos
dec
adc
xchg
out
push
xor
stos
call
dec
add
pop
pop
sahf
xchg
mov
mov
out
fild
jno
jmp
xor
rcl
jb
xchg
out
cmp
les
das
sbb
test
stc
clc
push
mov
jns
nop
xchg
sub
mov
mov
in
outs
push
jl
fdivr
pop
je
jmp
jmp
ds
mov
sub
inc
push
stos
jmp
fidiv
aam
cmp
call
mov
adc
and
or
xor
lds
add
daa
pop
(bad)
push
inc
stc
out
cli
ins
push
jns
inc
jnp
xor
push
sub
sahf
pop
movs
gs
dec
xchg
mov
jg
mov
scas
lods
push
idiv
inc
sub
repz
les
pop
sbb
jb
and
or
jno
push
gs
sub
mov
xchg
or
mov
retf
pushf
push
stc
imul
pop
mov
push
pop
inc
inc
stc
popf
ds
sahf
jmp
xchg
frstor
push
xor
cmp
fsub
mov
jge
test
aas
mov
mov
dec
rcr
jmp
ret
call
and
popf
mov
sub
les
push
fs
xchg
dec
(bad)
addr16
xlat
imul
or
jmp
call
pop
sub
pop
ret
outs
bound
add
rcr
and
addr16
jb
xchg
jl
jne
mov
es
call
cld
jb
inc
aam
push
call
pop
push
mov
fs
dec
daa
sbb
outs
imul
xchg
or
shl
scas
mov
lods
ret
movs
(bad)
push
loopne
jl
sub
mov
hlt
xor
xchg
mov
xchg
xor
xor
lds
adc
pop
mov
out
inc
in
ds
mov
mov
ret
fsubp
scas
mov
cmovp
jg
or
cmps
mov
push
mov
cmp
test
cld
icebp
sar
in
mov
imul
hlt
dec
hlt
fcmovnu
leave
adc
xor
ud1
jbe
hlt
mov
cmp
sub
arpl
test
test
shl
imul
lock
sub
not
lods
push
mov
mov
lock
inc
ret
lahf
cmp
add
arpl
sbb
adc
push
lods
inc
pop
mov
mov
adc
movs
jno
fst
inc
jp
nop
(bad)
pop
iret
test
in
fs
mov
cwde
mov
dec
add
into
inc
(bad)
jmp
dec
pop
push
sbb
mov
ficom
inc
pop
jo
cmp
dec
xchg
hlt
in
adc
icebp
je
jecxz
dec
ins
pop
in
pop
pop
icebp
loop
mov
push
xchg
div
aad
repnz
xchg
and
cmp
les
mov
mov
imul
dec
mov
xchg
(bad)
push
ret
mov
std
dec
mov
scas
scas
dec
xchg
leave
sbb
xchg
adc
sub
inc
xchg
stc
sti
mov
xchg
call
repnz
dec
mov
es
mov
push
dec
in
push
xchg
sbb
inc
popf
rol
jae
lds
aad
ins
rcl
cmp
out
icebp
arpl
and
push
out
in
jg
movs
ret
mov
imul
mul
jo
scas
imul
bound
(bad)
cmps
setno
in
xor
dec
add
pop
push
mov
jmp
test
adc
xchg
shl
div
ja
jecxz
mov
sub
xchg
ficomp
cli
jno
daa
sub
je
xor
mov
in
ds
jle
push
sub
sub
into
sti
test
fnstsw
daa
out
lahf
ss
and
cmp
pop
ret
and
xor
and
jmp
cmp
pop
or
mov
mov
xchg
jmp
test
adc
jb
pop
adc
in
adc
jbe
sti
les
dec
popf
test
rcl
adc
movs
adc
adc
and
movs
loope
cmp
test
fdivr
cmps
adc
cmp
inc
cwde
mov
dec
sub
cli
faddp
icebp
push
shr
mov
xlat
shl
pop
pusha
outs
sub
aas
aaa
aad
ret
adc
icebp
nop
mov
and
and
dec
movs
sub
xchg
std
xor
enter
sub
cmp
and
push
out
out
inc
pop
mov
cmovb
lods
stc
push
or
sub
cli
sub
int3
jne
mov
sub
or
xchg
or
dec
ror
scas
sbb
pop
jne
sbb
push
push
in
sbb
(bad)
jns
mov
jl
add
xchg
pop
jle
or
int3
ror
cmp
sbb
inc
imul
in
mov
cdq
cdq
adc
jo
adc
hlt
and
inc
je
pop
adc
scas
sub
sub
lea
pop
push
cmp
inc
ins
push
aam
pop
fwait
daa
jmp
push
xor
daa
xchg
movs
push
out
jmp
out
rol
and
adc
ret
sub
(bad)
aad
xchg
sub
mov
test
adc
pop
pop
sbb
les
cwde
cmc
mov
nop
loope
in
mov
jnp
xchg
adc
cwde
add
jo
fwait
dec
test
push
jg
(bad)
cmc
jg
jmp
jno
enter
mov
adc
fwait
(bad)
sahf
test
cmp
jmp
les
cs
inc
shl
jb
cmps
mov
shl
push
push
dec
push
mov
push
add
pop
rol
adc
movs
shl
xchg
dec
mov
outs
cmp
outs
idiv
jbe
outs
mov
sbb
push
lds
pop
fisub
nop
(bad)
pop
mov
xor
cmps
add
imul
outs
in
fmulp
mov
popf
cmp
sbb
fcmovu
cld
jo
jnp
xchg
jmp
add
test
mov
mov
sbb
xchg
aad
sahf
pusha
aad
(bad)
mov
aam
movsx
fcomp
mul
mov
enter
out
mov
test
jmp
mov
fstp
out
lahf
imul
push
dec
and
jl
aad
sar
inc
sub
jg
repz
shl
inc
jle
pop
inc
mov
jge
call
stos
in
out
or
push
iret
cmp
inc
in
push
ret
xor
pop
adc
push
sub
adc
jne
or
mov
aaa
data16
dec
fdivr
xchg
push
idiv
loope
mov
loop
push
fdivr
add
push
xchg
mov
icebp
stc
add
pop
xor
mov
int3
mov
mov
jecxz
mov
aam
test
push
dec
in
inc
xchg
cdq
push
cmp
sbb
sub
shr
pop
push
jo
rcr
clc
fmul
icebp
and
test
mov
sub
test
into
xor
in
sub
repz
adc
push
std
mov
div
shl
jmp
arpl
mov
in
mov
ret
push
xchg
ffreep
rcr
data16
mov
test
in
lea
or
scas
test
sbb
mov
cwde
retf
fwait
inc
add
mov
jae
push
mov
sbb
ret
and
mov
loopne
push
pusha
push
aam
pop
push
dec
or
or
add
pop
js
mov
cld
(bad)
cmp
ret
nop
and
add
mov
inc
and
jmp
fiadd
pusha
or
imul
cmp
xor
sbb
or
pop
inc
(bad)
push
(bad)
or
cmp
out
repnz
and
pushf
(bad)
out
mov
int
mov
scas
(bad)
sub
push
rcl
or
fucomip
and
mov
sub
lea
div
adc
(bad)
lods
jnp
mov
ds
je
enter
aaa
and
xor
movs
lods
stc
in
sub
mul
mov
shr
push
cmp
or
(bad)
jmp
xor
push
in
inc
ret
xchg
outs
mov
aas
scas
aas
push
int
test
(bad)
(bad)
js
sbb
inc
jg
xlat
shl
mov
inc
push
fcos
sbb
jo
or
add
xor
imul
or
mov
pop
sub
int3
jp
test
pop
pop
(bad)
push
sar
mov
shr
mov
push
dec
fistp
mov
sub
cmps
pop
push
sbb
sub
sbb
gs
dec
loope
inc
popa
mov
jns
bound
jns
push
imul
push
mov
ins
sub
scas
mov
sbb
inc
xchg
sub
icebp
sbb
xchg
or
inc
xor
dec
lea
add
jle
adc
mov
dec
into
hlt
jle
aam
inc
cmp
jne
(bad)
mov
push
ret
xchg
sub
repz
aas
sbb
cmc
mov
lods
ficom
cmp
or
fdiv
fbld
pop
ds
test
daa
cmps
xchg
xchg
jp
jae
popf
ds
cwde
mov
jnp
jmp
cmp
out
gs
cwde
jmp
leave
jb
lods
xchg
je
jb
out
scas
outs
xor
(bad)
or
and
mov
ins
push
clc
int3
call
fs
jecxz
rcl
adc
out
sub
pop
les
push
outs
and
mov
rol
add
or
std
push
(bad)
sbb
jl
lock
push
fisub
sub
aam
lds
ds
loopne
arpl
push
add
ret
and
leave
mov
mov
adc
call
(bad)
sbb
(bad)
neg
cmp
fldenv
retf
leave
jbe
shl
jae
dec
push
(bad)
out
cmps
lods
mov
mov
out
arpl
test
sub
sub
gs
stc
stos
and
pop
or
mov
inc
mov
hlt
lock
mov
xor
sbb
retf
adc
adc
ins
ret
pop
jo
or
push
rcr
mov
fld
or
xchg
fstp
int3
xchg
dec
(bad)
jecxz
sahf
mov
ficomp
xchg
(bad)
adc
xor
mov
imul
inc
xor
mov
aas
adc
jmp
mov
add
lock
lods
retf
mov
sbb
test
ss
cld
pop
aad
es
or
jge
pop
mov
mov
sub
sub
jns
retf
lock
data16
cmps
jle
adc
call
jmp
das
out
arpl
inc
in
xor
pop
gs
pushw
pop
sbb
scas
xor
adc
bound
das
test
xchg
fisubr
mov
xchg
lods
mov
not
fist
lods
sub
mov
push
out
sub
add
in
mov
call
or
push
inc
ins
pop
dec
(bad)
out
stos
lahf
ins
pop
imul
mov
pop
jbe
mov
jmp
jmp
sbb
add
inc
mov
adc
jmp
pusha
retf
sbb
loope
data16
mov
jge
xchg
pop
push
cli
xchg
mov
daa
cwde
or
jno
ficom
push
mov
push
sahf
dec
mov
and
js
aam
stos
sub
stos
inc
fs
inc
cmp
mov
inc
inc
dec
push
or
fild
cmp
jmp
mov
dec
imul
(bad)
clc
out
push
popw
shr
mov
dec
sbb
fcmovb
pop
jne
sub
ret
adc
or
or
cmps
mov
or
xor
jne
jmp
jo
xchg
(bad)
jg
xor
pop
and
sahf
mov
in
sub
pusha
sti
sahf
inc
fwait
inc
lahf
mov
mov
ins
sti
iret
stos
push
xchg
sub
fisub
dec
lods
hlt
add
sub
xor
mov
data16
push
jnp
out
jnp
sub
(bad)
(bad)
data16
out
push
mov
sbb
inc
sub
js
mov
mov
mov
test
jge
push
mov
stc
les
test
xor
mov
dec
loop
inc
inc
popf
bound
xchg
loopne
aad
push
or
add
push
dec
lods
jge
inc
jne
adc
(bad)
xchg
nop
add
fsubrp
jb
sbb
and
ret
dec
dec
jle
add
xor
push
xor
mov
adc
es
mov
sahf
bnd
scas
jmp
push
push
movs
bound
jb
xor
and
cli
mov
out
aam
push
xchg
and
mov
sbb
int3
ins
mov
sbb
sbb
int3
add
fisub
and
imul
and
and
xchg
mov
addr16
or
mov
and
pushf
mov
stos
push
(bad)
sar
mov
(bad)
inc
dec
ja
bound
dec
inc
inc
dec
or
mov
(bad)
cmps
mov
mov
in
or
cwde
mov
(bad)
sahf
pushf
jns
mov
adc
add
adc
dec
fincstp
xor
jmp
loopne
std
pop
ins
cmp
push
sub
ss
movs
out
push
jns
xchg
(bad)
cmp
data16
fldenv
loop
lods
call
fdivr
popf
test
mov
or
adc
test
xor
mov
xor
sub
in
push
int3
loopne
cmp
and
jecxz
test
fucom
jbe
sub
dec
dec
and
call
enter
data16
xor
inc
sub
loopne
add
and
xor
outs
(bad)
(bad)
jle
jle
push
stos
ins
pop
popf
sub
loop
push
stos
je
jnp
mov
int3
jo
cmp
(bad)
pop
or
outs
out
mov
xchg
aaa
xor
pop
lea
lods
das
pop
loopne
sbb
cmp
lea
icebp
add
cmp
data16
fs
inc
mov
test
imul
dec
in
and
jnp
sub
sbb
lock
add
sahf
sbb
ja
lock
scas
pop
icebp
test
and
cmp
scas
jbe
mov
dec
ror
mov
mov
pop
inc
push
add
pusha
xchg
fwait
xchg
(bad)
aaa
push
inc
xchg
or
(bad)
std
(bad)
mov
pop
pushf
mov
adc
enter
(bad)
call
and
inc
xor
(bad)
jecxz
adc
xchg
dec
push
lods
int3
mov
lods
iret
adc
cmc
stc
fld
mov
icebp
shl
inc
iret
dec
or
xor
add
ins
fadd
sbb
xchg
mov
fidiv
test
inc
xor
sub
cmp
lock
repz
cmp
jl
jle
jg
xor
sbb
and
movs
sub
and
jo
and
xchg
xchg
and
fiadd
dec
push
push
cmc
inc
inc
out
add
inc
fadd
sub
pop
xchg
xchg
xor
das
jmp
xchg
mov
add
push
inc
xchg
inc
mov
pop
inc
sub
jp
in
cmp
inc
fild
sbb
ss
arpl
mov
mov
jne
mov
mov
inc
mov
mov
sub
xor
add
loope
or
adc
jg
cmps
mov
push
mov
stos
add
cmps
int
stos
add
loopne
stc
add
mov
pop
cmp
les
or
xor
scas
cmp
shl
pop
adc
push
pop
sbb
sbb
mov
xchg
xchg
std
push
cdq
shl
dec
jecxz
rcr
dec
aaa
dec
daa
push
mov
nop
stos
fwait
daa
jp
dec
addr16
push
xchg
cld
(bad)
mov
cmp
cdq
add
test
fisub
(bad)
ins
xor
pop
mov
mov
popa
stos
mov
push
test
adc
mov
dec
mov
arpl
push
cs
fst
shl
fiadd
sbb
repz
and
(bad)
xchg
sbb
or
outs
scas
sub
lock
in
retf
je
push
call
jne
les
dec
add
pop
dec
cmps
je
sbb
adc
mov
adc
outs
ins
aas
push
push
sub
add
lahf
and
push
pushw
in
fptan
into
mov
adc
ja
mov
sbb
or
xor
out
sar
stos
ror
xchg
movs
aaa
popf
mov
jno
sbb
or
jo
(bad)
pop
pop
es
idiv
sbb
xchg
popf
rcl
shr
cmp
mov
and
test
js
int3
mov
cmc
shl
cmps
xor
push
or
enter
cmp
pop
aas
cdq
dec
sbb
add
mov
loop
fadd
mov
sbb
xchg
test
fistp
push
bound
sbb
xchg
and
pushf
fld
mov
bound
outs
iret
mov
sub
or
call
repnz
push
push
dec
(bad)
rcl
xor
inc
push
les
pop
int3
cdq
in
push
cmovnp
cmps
sub
jp
xor
ret
dec
in
and
idiv
pop
data16
adc
ror
jg
das
sub
add
cmp
xchg
aaa
out
lds
sbb
pop
cmp
mov
lods
and
aas
jmp
inc
or
mov
adc
enter
inc
pop
nop
sub
fdivr
dec
stos
bound
fst
mov
call
push
mov
je
add
or
enter
jle
(bad)
adc
mov
push
dec
ss
inc
mov
imul
sbb
mov
mov
jle
neg
shl
jno
call
pop
pmullw
mov
push
push
push
push
shl
and
fdiv
sub
loope
jne
or
adc
addr16
inc
or
or
fcom
sbb
addr16
push
pop
sub
cmp
(bad)
cld
mov
mov
add
ins
inc
mov
mov
push
sbb
mov
dec
xor
mov
cmp
mov
out
stos
mov
out
frstor
xlat
(bad)
push
test
mov
data16
ret
and
xchg
cmp
inc
das
push
push
in
dec
pop
stc
add
out
mov
scas
imul
adc
adc
pop
mov
add
jmp
cmp
test
pop
fwait
out
int3
cmp
arpl
sar
sub
sti
out
mov
ins
out
js
xchg
aas
inc
repnz
stos
sar
(bad)
movs
test
jns
xchg
or
(bad)
outs
xchg
mov
and
mov
rcl
pusha
ins
inc
pop
nop
adc
shl
lds
push
dec
or
mov
sar
pop
bound
addr16
xchg
test
stos
adc
mov
xlat
fsubr
repz
test
add
and
iret
add
out
dec
ins
pop
push
sbb
inc
fdiv
adc
dec
jl
cld
xchg
mov
push
mov
out
pop
push
mov
stos
cmc
dec
out
xor
mov
in
mov
adc
or
mov
in
xor
adc
pop
mov
rcr
adc
xor
mov
xlat
lds
mov
lea
xchg
or
popf
lods
(bad)
mov
ret
test
into
dec
scas
xchg
cld
(bad)
bswap
adc
push
adc
ret
retf
mov
jmp
sub
xor
(bad)
push
push
fcomp
fisubr
sub
and
(bad)
in
inc
mov
pop
repnz
hlt
ret
enter
stc
inc
sahf
(bad)
dec
in
icebp
cld
test
jb
aas
mov
mov
pop
mov
sahf
add
mov
cs
fsubp
fsub
daa
fwait
inc
pop
cmp
iret
inc
mov
mov
mov
push
xlat
pop
fstp
jmp
lods
imul
popf
jmp
call
setl
or
and
fiadd
adc
mov
pushf
imul
lods
sti
(bad)
mov
pop
pop
mov
ins
mov
adc
ins
test
repnz
mov
add
nop
fistp
xchg
jns
(bad)
inc
into
mov
test
xchg
mov
stos
repnz
xchg
in
int
cmp
fimul
cld
int3
mov
fwait
cmp
sbb
pusha
add
or
repz
repz
fldenv
cmp
cmp
cs
jl
popa
mov
jg
sbb
call
jmp
xchg
out
mov
leave
cdq
push
(bad)
call
dec
test
das
into
adc
and
dec
jae
push
xor
pop
cld
out
pop
sti
push
jmp
or
icebp
dec
push
mov
call
push
xor
cmp
dec
sbb
jo
mov
mov
or
mov
scas
lods
add
lahf
mov
lahf
clc
cli
clc
mov
sbb
lea
ins
dec
push
or
enter
sbb
add
dec
add
fidivr
out
cli
cli
dec
adc
jno
sub
jl
push
rcl
and
stos
jns
loop
jae
das
jns
pop
mov
cld
lods
mov
dec
ss
aam
stos
(bad)
(bad)
adc
cmps
daa
retf
pop
cmps
inc
add
jge
dec
pop
outs
sub
iret
jmp
pop
xchg
sub
pop
adc
ret
push
into
aas
stc
mov
out
pop
push
mov
movs
into
xchg
mov
loop
mov
pop
mov
dec
jmp
adc
clc
les
fldcw
or
(bad)
xor
stc
popa
aad
mov
dec
jmp
(bad)
mov
pop
sti
pop
dec
(bad)
test
push
stc
add
and
sub
adc
and
cmp
xchg
inc
mov
adc
mov
(bad)
mul
loop
jle
ror
inc
jmp
and
retf
fistp
ror
aaa
test
popf
mov
pop
add
mov
or
das
xlat
mov
push
sbb
push
out
ds
mov
xchg
loopne
popf
sbb
lods
popa
adc
lea
jbe
popf
add
inc
in
lahf
cmp
and
ja
mov
mov
mov
les
sqrtps
and
lahf
or
test
fsub
rol
loop
jge
adc
xor
sbb
mov
stos
xchg
(bad)
xor
xchg
leave
aam
and
(bad)
outs
cmp
jmp
fs
fldenv
std
xchg
lds
out
rdpmc
push
pop
pushf
inc
xor
addr16
ins
pop
fisttp
pushf
or
adc
adc
gs
daa
mov
call
and
cmp
pop
push
test
sti
mov
xor
mov
mov
jno
jle
xchg
jno
cmp
push
(bad)
sub
dec
repz
lea
outs
int
cmps
add
mov
push
cmps
xchg
adc
pop
sub
(bad)
dec
mov
(bad)
stos
addr16
paddusw
hlt
push
xlat
bnd
mov
push
mov
addr16
repnz
pop
ins
cld
in
lds
sbb
cmp
rcl
xchg
and
fild
std
add
ss
add
scas
mov
or
fdiv
cdq
fst
and
dec
pop
js
jecxz
fild
outs
aas
adc
movs
pushw
retf
push
xlat
jnp
retf
push
aam
or
cmps
repz
inc
sub
push
sti
mov
scas
jecxz
dec
cmps
xlat
outs
push
jge
rcr
cdq
pop
adc
or
lahf
mov
iret
ss
xchg
jb
xchg
mov
or
fwait
push
into
add
movs
xchg
sbb
leave
stos
push
xchg
pop
shl
in
dec
xchg
and
ja
pop
in
mov
sbb
gs
stos
cdq
mov
(bad)
call
mov
jne
and
fbstp
out
jnp
adc
out
fsubrp
clc
jae
push
and
aaa
dec
or
in
pop
add
cwde
imul
addr16
fsubr
push
push
push
mov
xor
and
sbb
call
call
mov
add
scas
sti
(bad)
dec
pop
(bad)
mov
lods
ret
call
div
push
ret
mov
pop
cs
cmp
mov
jae
or
sub
cmp
mov
push
repnz
adc
adc
add
xchg
ins
cmp
jl
or
movs
cmc
xchg
inc
(bad)
lods
push
or
or
sub
mov
adc
sti
retf
sbb
fwait
xor
js
push
repnz
fs
iret
mov
scas
sbb
mov
jecxz
cmp
add
inc
aad
aad
aaa
aas
dec
sub
jno
and
mov
xor
add
call
sub
inc
xchg
iret
daa
xchg
dec
mov
pop
xchg
aam
enter
je
cmp
xchg
test
daa
fwait
mov
fisubr
and
js
arpl
fadd
inc
je
fwait
stos
cmps
arpl
cmp
mov
xchg
mov
dec
jecxz
sbb
jmp
popf
sbb
mov
(bad)
ror
mov
dec
(bad)
fnstenv
xor
push
mov
mov
pop
hlt
pop
xlat
daa
popa
adc
pop
mov
mov
pop
ds
jg
push
out
pop
dec
adc
das
inc
(bad)
mov
pop
stc
imul
aad
sub
addr16
and
sbb
clc
bnd
out
jnp
movs
outs
mov
push
(bad)
and
mov
mov
ficom
enter
sub
jne
adc
sbb
int3
jmp
icebp
stos
retf
jg
movs
xchg
cmps
rcl
sbb
outs
and
mov
jb
push
retf
cmp
call
mov
pop
retf
je
xchg
ret
stos
loopne
out
(bad)
sar
cwde
fiadd
inc
add
and
sbb
pop
aam
jns
sbb
push
pop
mov
ins
add
jp
(bad)
sbb
jle
loopne
push
sbb
mov
js
stc
ja
jge
jle
aad
jb
out
jbe
aam
arpl
icebp
test
jae
mov
and
xor
outs
push
jp
sub
fdiv
push
cmp
dec
push
nop
out
push
mov
cmps
xor
dec
repnz
test
push
jbe
clc
pop
sbb
or
push
cld
jb
lock
xchg
mov
ins
sbb
loopne
hlt
mov
jp
ficomp
lods
jp
sar
jp
jmp
mov
(bad)
lods
mov
add
sub
mov
mov
pop
jl
mov
fidiv
push
mov
fwait
(bad)
push
stos
and
jecxz
sub
cmc
jge
pop
loope
call
push
push
xor
or
imul
mov
and
jge
stos
jno
push
fcom
out
cdq
xchg
sub
mov
lods
cmp
mov
mov
jnp
ficom
push
fisubr
sub
push
(bad)
jb
test
ja
mov
sbb
push
out
aas
addr16
sub
fisttp
sub
mov
jb
sbb
aas
stos
pop
push
(bad)
outs
push
rcr
int
(bad)
pop
iret
test
jno
movs
sub
mov
mov
push
daa
xor
sar
dec
sub
out
ss
jg
mov
adc
push
(bad)
js
mov
sub
aas
dec
lods
sbb
cli
out
cmp
scas
icebp
out
or
lock
pop
fidivr
jno
cmc
adc
(bad)
jns
movs
push
mov
out
or
or
hlt
and
add
sbb
aad
jno
jl
or
mov
fmul
lock
inc
jmp
jmp
push
or
inc
mov
jg
sub
fistp
push
push
fdivr
ror
add
jno
es
pop
cmp
cmp
cmc
scas
out
ds
jmpw
jne
in
lahf
lds
sbb
cmp
pop
and
dec
cs
sbb
ds
bound
jno
test
jge
mov
xchg
inc
outs
sbb
sbb
daa
lock
shr
pop
(bad)
fcomp
mov
mov
fidivr
dec
cs
xlat
nop
cmp
mov
inc
mov
xor
lds
loopne
jae
mov
sub
(bad)
xor
lahf
mov
sar
xor
nop
mov
scas
and
adc
pushf
test
cmp
pop
mov
movs
cmc
dec
inc
inc
add
inc
or
pop
retfw
out
leave
jge
out
loope
pop
das
iret
jecxz
or
pop
or
xor
ins
enter
xor
(bad)
xchg
das
mov
hlt
sub
lock
test
push
mov
inc
push
ja
add
in
aas
fdiv
adc
dec
jno
mov
repnz
leave
dec
stos
(bad)
outs
mov
add
dec
movs
push
scas
inc
nop
mov
push
mov
icebp
cmc
call
(bad)
out
jb
fild
mov
xchg
pop
in
cmp
adc
ins
sbb
sub
jae
jle
cli
in
lds
outs
push
(bad)
and
popf
or
xchg
push
xor
cli
adc
push
(bad)
pmaxsw
adc
std
mov
lods
rol
pop
es
xchg
xchg
jp
or
push
(bad)
neg
cmp
add
fisttp
div
movs
cli
cmp
jno
imul
sub
mov
mov
(bad)
add
adc
add
mov
test
adc
xlat
pop
push
fwait
inc
sbb
mov
int
mov
xchg
mov
stc
ror
mov
xor
inc
sub
lods
xchg
cmps
pop
xchg
shl
jmp
test
pop
mov
jge
and
cmc
cs
mov
stos
(bad)
retf
sbb
xor
push
mov
jg
sti
dec
adc
mov
push
mov
popa
cld
sbb
xor
pop
clc
adc
call
and
jecxz
out
add
jp
(bad)
pop
rcr
pop
fisubr
and
mov
push
push
gs
hlt
dec
imul
mov
lds
lods
call
fwait
mov
lds
ins
aaa
sti
jl
push
sub
mov
into
cmp
outs
mov
push
cmp
pop
mov
in
(bad)
(bad)
test
and
repz
lods
jne
cli
sub
dec
jmp
(bad)
jae
or
std
lock
inc
mov
sbb
pop
mov
or
shl
ds
sbb
lea
mov
inc
cld
sub
add
inc
js
popa
clc
loopne
add
inc
(bad)
cmp
cmp
repnz
mov
add
addr16
leave
xor
jl
out
jl
push
clc
jb
stc
xor
and
pop
xchg
xchg
and
aam
outs
push
mov
mov
cwde
adc
pop
dec
(bad)
arpl
mov
(bad)
jge
add
ret
pop
int
pop
cdq
(bad)
fxch
inc
out
inc
imul
jmp
test
push
and
iret
mov
mov
xchg
xor
pop
in
scas
or
xchg
mov
jp
pop
ja
jmp
sti
mov
(bad)
adc
jnp
xor
xlat
push
xchg
and
adc
scas
dec
das
inc
js
dec
fisttp
popf
test
lods
mov
shl
clc
retf
sar
out
jp
xchg
adc
and
mov
or
out
xchg
fidiv
jns
aad
sbb
or
inc
jmp
aad
push
jle
jnp
lods
stc
jp
dec
sbb
push
(bad)
std
rol
jns
mov
push
push
xchg
push
pop
push
mov
imul
pop
in
(bad)
push
jno
xchg
daa
aas
dec
adc
shr
and
lea
jecxz
retf
fild
mov
mov
ins
out
hlt
push
popa
xor
sub
pop
imul
dec
repnz
lock
xchg
add
add
mul
or
push
pop
pop
mov
(bad)
loop
jns
sub
push
and
sub
cmp
sub
pushf
inc
movs
out
mov
push
and
stc
and
repnz
mov
or
add
push
in
jb
add
(bad)
addr16
and
dec
ss
or
xor
xor
cld
and
test
jg
test
lea
adc
jmp
mov
xor
movs
pop
es
sar
mov
push
mov
push
xchg
mov
mov
jns
in
ja
mov
sub
nop
inc
cmps
pop
and
push
in
jmp
ja
movs
fnstcw
mov
repz
sbb
ins
(bad)
and
fwait
pop
push
jg
lds
ret
or
data16
scas
call
ficomp
dec
dec
rcr
stc
movs
jmp
loope
sbb
push
pmullw
fidivr
lds
cwde
adc
xor
mov
jbe
mov
mov
loopne
inc
mov
push
adc
mov
sbb
jns
mov
dec
sub
movs
inc
stos
test
and
or
add
fisttp
outs
addr16
cmps
jl
ss
xchg
xchg
adc
fcomp
jae
ins
scas
aad
retf
mov
mov
mov
jo
je
rcr
pop
inc
sub
sub
mov
sub
or
push
pop
dec
cmp
sub
pop
stc
sbb
call
stos
outs
push
loope
cmp
(bad)
xor
push
jmp
add
add
sbb
xchg
xchg
and
movs
adc
inc
mov
(bad)
mov
push
cmps
(bad)
mov
mov
inc
sbb
add
pusha
outs
inc
(bad)
mov
sub
in
aam
adc
add
jno
or
mov
cld
cmp
(bad)
cld
sbb
jp
div
fdivr
push
ins
push
xchg
sbb
pop
mov
fimul
jnp
push
out
jg
bound
mov
rol
stos
cld
mov
mov
popf
push
movs
dec
call
cmp
int3
adc
mov
arpl
iret
cmp
push
leave
mov
imul
push
jnp
jno
out
sbb
fld
out
ds
js
jg
pop
ror
pushf
mov
sub
fcmovbe
push
xchg
es
mov
sub
mov
das
out
aaa
dec
pop
add
test
call
and
stos
push
lods
jae
xor
mov
mov
or
stos
lock
dec
dec
mov
mov
inc
imul
out
call
rcr
adc
sbb
xor
(bad)
stos
lahf
mov
push
xor
cmp
xchg
cs
jl
les
jae
jb
inc
enter
ins
inc
jmp
in
popa
cmps
cmp
sbb
(bad)
dec
test
js
push
in
or
cli
dec
xor
mov
xchg
or
ss
push
fbld
xchg
int3
sub
mov
inc
push
scas
mov
fdiv
outs
int3
call
push
outs
dec
lahf
fscale
rol
or
pop
xor
popa
add
dec
mov
or
cmp
push
inc
mov
inc
mov
sub
sahf
sub
(bad)
mov
leave
stos
pop
data16
into
mov
adc
popa
add
push
cmps
cmps
(bad)
sbb
jo
mov
jbe
bound
jecxz
lds
cmc
iret
mov
aas
inc
pop
adc
ins
sub
scas
pop
and
aam
push
and
push
xchg
arpl
jg
cs
jnp
sub
mov
adc
and
out
or
mov
fldcw
test
sub
mov
scas
ss
inc
leave
fs
mov
and
stos
mov
xchg
popf
out
xchg
icebp
ds
lods
or
retf
in
arpl
dec
inc
jmp
push
jg
aaa
dec
sub
call
outs
mov
add
inc
sbb
inc
xor
ja
adc
mov
lock
jnp
mov
jno
push
cmp
fnstenv
mov
int
enter
out
mov
mov
lods
inc
jge
mov
mov
xchg
cli
push
fdiv
sar
or
adc
pop
lods
mov
cmp
or
mul
rol
ror
add
jne
loope
es
aaa
inc
mov
jno
push
cmp
adc
fwait
mov
add
in
adc
mov
jno
add
sub
out
in
xchg
inc
popf
mov
fmul
sbb
mov
push
and
mov
adc
mov
and
pop
rol
push
xlat
enter
std
mov
sbb
int3
dec
popf
push
sti
movs
dec
pusha
push
movs
or
ficomp
sti
lahf
scas
and
enter
mov
and
stos
(bad)
call
cld
xchg
fcmovne
movs
mov
mov
in
stos
mov
cmp
nop
mov
mov
push
xchg
mov
les
push
sub
ja
das
or
xor
or
xor
cld
sub
out
jno
cmp
add
jmp
sub
push
mov
fld
sub
mov
dec
mov
aas
(bad)
dec
ret
dec
jmp
sub
(bad)
sbb
cmp
push
jp
push
sbb
sbb
das
and
xchg
jge
pop
stos
imul
pop
mov
or
sbb
ds
mov
mov
jl
shr
test
das
dec
out
cmp
ins
js
add
or
repnz
adc
das
retf
xchg
dec
mov
ret
adc
jl
inc
and
lods
lahf
imul
dec
ficomp
imul
jg
adc
or
out
sub
push
pop
into
test
fnstsw
call
fist
sbb
xor
scas
and
call
inc
push
enter
test
mov
sbb
mov
add
mov
mov
ss
mov
iret
outs
ss
retf
out
in
push
mov
add
pushf
adc
mov
mov
or
fnstenv
sub
mov
or
or
dec
xlat
cli
inc
xchg
in
test
dec
pushf
or
aad
mov
jge
sub
dec
mov
xor
pop
repz
mov
and
pop
sub
int
push
mov
in
mov
push
push
push
hlt
dec
sub
cmps
cs
cmp
jne
xor
mov
xchg
std
das
dec
add
test
stos
aad
jne
enter
and
jmp
dec
xchg
sbb
int3
and
mov
mov
mov
mov
sbb
in
mov
(bad)
call
jmp
imul
mov
ds
add
pop
mov
ror
mov
fstp
mov
jae
call
inc
and
cmp
dec
loope
xlat
mov
daa
test
push
repnz
shl
ret
jecxz
pushf
mov
jo
cdq
inc
pop
shl
cdq
mov
sub
leave
(bad)
push
popa
fmul
jecxz
fst
or
rcl
and
fwait
jmp
ds
mov
gs
xor
enter
data16
jnp
clc
retf
cmps
xchg
enter
push
push
mov
cmp
mov
mov
jnp
jo
gs
cmps
pop
or
push
nop
add
mov
adc
add
lahf
mov
hlt
jl
jns
pop
int
or
pop
(bad)
imul
neg
es
sub
mov
push
sti
adc
and
mov
mov
add
jecxz
rcl
or
fmul
xchg
sub
lock
cdq
xchg
jmp
inc
mov
lock
std
or
dec
std
inc
push
xor
cld
inc
rcr
xchg
sar
adc
and
(bad)
imul
imul
ss
push
js
cmp
sbb
ret
sti
sbb
xchg
sub
xor
mov
sahf
sbb
ret
outs
ds
or
shl
sub
jns
mov
fwait
iret
pushf
jmp
js
push
out
retf
adc
loopne
ret
and
push
pop
jmp
arpl
fsub
lock
jg
imul
movs
sub
ss
into
jmp
hlt
daa
cmp
mov
cmp
and
mov
call
mov
pop
sti
movs
jg
cmps
inc
inc
(bad)
hlt
ins
xor
jle
sub
xchg
sub
pop
cwde
jmp
xchg
nop
dec
jo
push
pushf
cld
jge
rcl
xor
js
sbb
sahf
mov
fs
pusha
dec
jno
in
mov
pop
sbb
inc
icebp
mov
shr
int3
cwde
fidivr
loop
add
bound
mov
movs
mov
(bad)
das
pop
rol
fld
test
ss
cmp
mov
faddp
stos
icebp
jmp
cmp
add
gs
push
rcl
out
gs
inc
test
aam
cs
lds
mov
add
or
scas
cdq
and
outs
std
sbb
pusha
jmp
push
aad
or
jns
and
jb
xchg
mov
or
jge
pop
cmc
mov
lds
loopne
test
lahf
gs
adc
aam
dec
jecxz
pop
cmp
nop
inc
cmp
lods
jl
(bad)
aaa
in
call
xor
add
jnp
stc
lahf
sar
mov
rcr
in
add
imul
(bad)
adc
setne
sub
pop
adc
stc
test
add
dec
push
in
adc
out
sub
call
aas
mov
ret
xor
mov
adc
adc
test
loop
mov
adc
cmp
test
adc
jle
jae
pop
mov
dec
leave
mov
sub
sbb
push
mov
into
inc
mov
daa
mov
jae
cmp
test
iret
inc
cmc
or
or
mov
sar
push
adc
pop
or
in
inc
pop
lock
mov
scas
daa
aaa
sar
shr
cmp
mov
loope
cmp
dec
and
inc
scas
clc
push
add
ret
int
jnp
push
(bad)
pop
into
jecxz
fdivr
jnp
mov
cmp
data16
xor
sub
ret
jo
xchg
sbb
jmp
lock
das
mov
and
add
xor
ja
dec
ins
fcmove
call
mov
(bad)
jmp
les
fidivr
mov
jns
or
movs
(bad)
ss
jl
fisubr
xlat
clc
xor
scas
and
push
popa
mov
inc
xor
push
xchg
cmp
(bad)
icebp
xor
inc
xchg
push
jno
xor
xor
loope
xchg
xor
adc
push
jle
outs
mov
pop
add
mov
pop
push
push
movs
cmp
inc
es
mov
add
mov
dec
cli
cmp
icebp
ffreep
test
mov
or
mov
jmp
ss
aam
mov
ins
dec
test
inc
out
fcmovu
es
sbb
stos
mov
add
inc
push
sbb
retf
gs
loopne
aas
stos
pop
cmp
fwait
push
aaa
aam
mov
adc
push
sub
jecxz
and
mov
cld
scas
xchg
std
(bad)
jg
test
jno
pop
cmps
pop
cmp
jge
sbb
inc
movs
out
add
xor
push
jmp
stos
mov
cmp
call
mov
and
mov
ret
(bad)
xchg
xchg
cmp
or
addr16
inc
mov
fstp
mov
xor
test
lea
cwde
add
cmp
imul
scas
sbb
ja
cmps
das
outs
push
pop
lods
daa
sub
shr
xor
mov
out
cs
mov
jmp
mov
cmps
fwait
ins
xchg
sub
fmul
add
mov
mov
les
pop
add
cmp
(bad)
rcr
mov
outs
sub
cmp
(bad)
clc
mov
(bad)
(bad)
call
jns
in
mov
add
jp
mov
adc
mov
retf
pop
inc
push
arpl
push
loop
jno
stos
push
loope
cwde
sub
mov
dec
sub
and
mov
push
sahf
into
push
mov
or
dec
cwde
cmps
stos
call
inc
(bad)
jecxz
aas
(bad)
push
fsub
(bad)
popf
mov
cmp
and
mov
pop
or
cs
(bad)
cli
xchg
jle
sti
push
xchg
inc
mov
cmc
and
dec
adc
in
fiadd
fidivr
dec
xor
jmp
xor
cmc
loopne
jne
or
out
dec
xchg
rcr
jmp
fstp
cmp
mov
jo
ret
add
pop
adc
push
clc
rcr
xor
mov
shr
dec
sub
add
sbb
paddsb
in
int
adc
fistp
cmp
mov
pop
test
sbb
jb
fwait
in
jo
rcl
sbb
pop
jecxz
and
mov
pop
inc
cmc
cmp
pop
xor
sub
pusha
icebp
sub
jl
pop
les
inc
imul
push
loopne
dec
xchg
xchg
pop
sti
sub
sar
pop
fwait
daa
hlt
pop
mov
les
inc
fist
push
and
mov
mov
jg
or
push
loopne
mov
out
jns
clc
pop
bswap
(bad)
imul
jmp
jecxz
and
pop
cwde
cli
mov
std
and
into
in
sub
ja
pop
xor
shl
push
jmp
aas
ror
push
and
mov
cmp
repz
xchg
inc
xor
les
mov
mov
repz
cmp
or
sbb
out
test
out
cmp
xor
dec
lds
(bad)
push
pop
addr16
ret
xchg
mov
cdq
nop
sbb
xchg
xor
sub
jnp
mov
(bad)
xchg
mov
gs
inc
or
out
call
aas
push
fsubr
pop
std
hlt
xchg
cmp
cmp
push
adc
cs
icebp
retf
sbb
xchg
bound
add
rcr
ret
aad
and
inc
mov
xchg
dec
sar
mov
(bad)
mov
test
jmp
or
inc
inc
jge
adc
(bad)
std
pop
mov
jmp
or
aas
push
js
xchg
adc
or
sahf
aam
lds
addr16
loopne
mov
(bad)
int3
pop
cld
cli
je
jo
cmps
outs
and
in
inc
cmps
imul
ficom
xor
xchg
retf
jmp
das
std
mov
test
aam
scas
int3
add
jb
psllw
cmc
aas
cmp
ret
ret
sbb
les
add
test
in
imul
mov
jmp
and
ja
cmp
mov
push
mov
cmp
xchg
in
mov
mov
xor
sbb
sub
lods
iret
sbb
mov
cdq
dec
vcvtpd2dq
(bad)
mov
mov
outs
jbe
mov
sahf
add
add
pop
mov
or
and
push
loop
cmp
inc
cwde
mov
push
cmc
out
mov
push
sbb
retf
test
ror
mov
lahf
or
data16
xor
fnstcw
pushf
inc
ja
jle
jmp
or
pop
jbe
pop
ror
mov
in
out
push
inc
pop
(bad)
or
retf
jg
loope
xchg
xor
add
jmp
and
pop
xchg
add
aas
into
inc
sbb
adc
and
jecxz
adc
push
sub
mov
pushf
js
inc
jle
out
fs
cmp
sub
mov
adc
movs
dec
push
stos
and
cmps
inc
and
jl
hlt
xchg
pop
mov
mov
cmp
es
pavgb
inc
ins
or
mov
pop
sub
clc
popa
add
push
div
idiv
sub
push
mov
pop
adc
jmp
jl
stos
mov
xchg
loopne
and
jecxz
mov
push
or
cwde
enter
mov
fxam
ror
cmp
pop
out
bound
repz
ins
inc
aaa
(bad)
cdq
test
mov
aas
sbb
cmp
mov
into
mov
mov
mov
lods
mov
adc
xchg
inc
jo
loope
jne
(bad)
pop
xchg
cmps
lods
rcl
xor
xor
pop
xor
shr
cld
sub
bound
xlat
dec
dec
jno
or
sub
mov
and
sbb
push
xchg
cdq
pop
xchg
jmp
(bad)
pop
pop
in
and
mov
mov
mov
and
fistp
mov
pop
gs
push
inc
not
ins
aas
sub
inc
scas
mov
scas
test
cmp
pop
fcomp
mov
sub
rcl
fs
movntq
xchg
popf
stos
adc
retf
out
rcr
xchg
mov
cmp
xchg
push
mov
and
adc
in
bound
aad
int3
test
jle
cmp
jmp
imul
mov
add
sti
and
das
adc
lahf
push
sub
js
xor
out
fidivr
sar
and
sub
pop
cli
outs
push
push
add
rcl
mov
adc
sar
test
dec
sub
jmp
test
scas
scas
cmps
dec
push
mov
dec
xchg
shl
outs
mov
test
or
mov
or
bound
jle
(bad)
es
mov
push
lahf
and
inc
(bad)
mov
and
adc
cmp
mov
or
sub
aas
cdq
cmc
into
ret
outs
pop
mov
sahf
stos
lods
stc
push
dec
leave
sbb
jns
pushf
inc
clc
pop
xor
inc
mov
pop
xchg
out
int3
mov
les
sub
stos
loope
rcl
fwait
or
jnp
dec
pusha
idiv
pop
popa
inc
(bad)
imul
add
mov
int
mov
push
push
pushf
outs
pop
mov
test
jae
test
jge
mov
loope
leave
adc
cs
pushf
sbb
fadd
dec
loope
call
pushf
pop
sub
icebp
adc
test
outs
ins
pop
sbb
sub
lods
pop
scas
adc
sub
in
les
xchg
push
and
(bad)
jae
cs
mov
fwait
mov
dec
data16
push
popa
mov
(bad)
ror
jge
dec
and
les
sub
mov
push
imul
les
pop
inc
push
das
fs
fnstsw
cli
ins
clc
mov
inc
pop
mov
(bad)
adc
ja
loop
and
dec
jmp
lahf
or
jmp
cs
(bad)
pusha
repnz
push
pushf
mov
mov
leave
xchg
jmp
js
jl
in
nop
inc
repnz
mov
(bad)
std
imul
shl
ss
das
repnz
cmp
mov
sbb
mov
xlat
pop
xchg
rcr
sub
jmp
jl
jae
imul
int
out
mov
inc
push
test
adc
sbb
popf
pop
fldz
shl
popf
rcl
pop
push
fdivr
in
retf
enter
enter
cwde
or
rol
dec
mov
jae
or
mov
outs
retf
xchg
mov
icebp
mov
rcr
stos
jne
adc
add
ss
cmp
cld
xor
or
dec
sahf
mov
mov
xor
loop
outs
outs
jmp
sbb
hlt
push
movs
cmp
and
jb
mov
hlt
scas
pop
(bad)
add
(bad)
fisub
bound
in
or
stos
xchg
mov
push
cmps
cmp
jae
or
js
push
and
xor
hlt
mov
int3
movs
sti
lea
sti
mov
aam
mov
js
icebp
int3
and
mov
xor
popa
stc
ins
popf
adc
push
adc
retf
inc
ficom
sub
sar
inc
pop
xchg
dec
rcl
fcomp
mov
rcr
jmp
xchg
jg
or
add
pop
sbb
jnp
ret
xor
mov
mov
cmp
push
dec
jp
sub
xchg
pop
and
dec
fld
lods
rcr
lock
iret
mov
add
or
aaa
(bad)
jnp
or
ss
and
or
cmp
leave
cmps
cmps
cmp
pop
ins
xchg
ss
jae
xchg
ror
jmp
retf
jl
push
call
int3
adc
cmp
stc
xor
shl
dec
adc
mul
sti
sbb
push
add
out
retf
mov
jle
stc
das
sbb
dec
nop
gs
ins
std
and
retf
div
pop
xchg
push
jge
jge
cmc
test
mov
gs
imul
ret
pop
sub
cld
xchg
mov
not
into
movs
and
xchg
arpl
sahf
and
scas
pop
loopne
sti
push
mov
mov
in
stos
push
mov
adc
call
mov
jno
cmpxchg
out
push
stc
iret
sub
aam
adc
mov
aad
ins
dec
cmp
cwde
retf
push
jecxz
mov
mov
(bad)
jae
ins
inc
popa
mov
sar
add
cmp
push
repz
sub
xchg
push
bound
fsub
in
jmp
adc
mov
loope
cmp
adc
(bad)
dec
or
iret
fwait
outs
inc
mov
fwait
mov
in
in
and
pop
or
jb
pop
add
push
in
test
retf
fldenv
jle
push
pushf
and
xor
jg
jno
fcmovu
jno
jl
aad
xor
aam
in
mov
out
gs
sbb
fild
add
xchg
aad
pushf
dec
loope
dec
mov
cmps
sub
in
in
add
pop
fmul
fcmovnbe
dec
ja
(bad)
pop
fisub
xlat
jl
aas
repz
push
pop
push
sbb
xor
scas
outs
inc
cmp
and
movs
and
sbb
or
mov
xchg
cmps
scas
retf
or
mov
fwait
mov
mov
sub
bnd
mov
cld
bound
pop
jo
inc
mov
xor
pop
xchg
fistp
out
xor
xchg
push
mov
xchg
push
int3
adc
jle
ja
mov
(bad)
lods
adc
cmp
jno
aaa
or
in
jnp
les
retf
pop
mov
into
sub
mov
mov
call
movs
mov
outs
outs
jmp
jns
ins
or
mov
jg
fisubr
sub
mov
push
sub
adc
xchg
outs
xchg
and
xchg
mov
and
push
(bad)
jae
or
cmps
cli
lahf
push
ja
movs
lea
popf
mov
or
sbb
pop
fwait
movs
mov
adc
iret
cld
stos
jmp
jle
mov
je
std
lds
pop
dec
scas
or
xchg
pop
mov
add
mov
sub
mov
push
jl
xchg
dec
xchg
or
ja
sahf
shl
(bad)
scas
dec
pop
in
adc
test
sar
push
fdiv
ss
retf
sbb
out
popf
sub
dec
add
clc
adc
lock
bound
fcom
add
je
jne
add
ficomp
adc
and
aad
cmps
in
(bad)
test
stos
scas
mov
sub
add
xchg
jae
cmp
push
adc
out
cmp
test
mov
jo
jno
cmp
inc
fwait
cmc
nop
outs
xor
or
jge
mov
adc
ja
mov
arpl
stos
xchg
out
sti
xor
repz
or
xchg
aam
pop
mov
into
cli
test
mov
push
scas
and
adc
popf
pusha
test
pop
popa
test
js
test
mov
or
hlt
popa
rol
pop
movs
fdiv
imul
call
mov
stos
cmp
mov
int3
adc
xor
lahf
loop
shl
inc
in
mov
xor
(bad)
push
add
lea
xchg
retf
mov
or
push
mov
movs
mov
and
mov
sbb
(bad)
cld
cmps
std
rcr
loopne
loopne
mov
scas
cdq
in
movs
inc
jo
je
icebp
popa
clc
imul
inc
pop
mov
test
and
adc
icebp
jbe
jmp
shl
ja
clc
add
pop
jne
out
dec
jmp
or
mov
mov
call
lds
jne
repnz
pop
inc
(bad)
mov
xor
mov
and
mov
das
mov
xor
mov
mov
inc
inc
push
(bad)
mul
mov
lods
sub
cmp
add
std
(bad)
ja
call
or
push
and
xchg
daa
out
or
push
fstp
pop
xchg
stos
out
jg
les
xlat
pop
xor
loope
pushf
fiadd
imul
outs
shl
mov
scas
xchg
xchg
jno
imul
jns
sub
pop
inc
sbb
xor
shl
cmp
pop
or
ret
push
shr
rol
push
das
xor
jns
repz
or
adc
out
out
pop
cmp
mov
nop
and
test
mov
ret
xlat
jecxz
mov
das
push
mov
adc
pop
(bad)
fsubr
mov
mov
test
shr
sub
test
lahf
int3
scas
cld
xchg
or
loop
out
push
sbb
add
and
mov
div
sub
mov
popa
aad
mov
xor
out
loopne
jmp
add
cmp
mov
nop
mov
push
mov
sbb
loop
scas
cli
lahf
xchg
cld
or
jmp
(bad)
in
in
int
and
pop
addr16
sbb
xor
stos
xor
rcr
cdq
aaa
pop
mov
add
fcomp
leave
ficom
add
rcr
or
movs
add
jne
ret
cs
push
push
mov
xchg
jmp
push
xor
jmp
ins
xchg
adc
sahf
xlat
push
mov
stos
jle
(bad)
loopne
aam
mov
jle
sbb
mov
cmp
or
add
pop
mov
cmp
adc
or
inc
cwde
mov
mov
inc
xchg
mov
inc
ror
inc
jb
lods
push
std
push
sub
jo
pop
sbb
jnp
test
jg
jle
mov
adc
ror
es
mov
and
mov
ret
fdiv
lea
xor
into
gs
push
xor
inc
movsx
dec
lea
loopne
shrd
cmc
dec
pop
addr16
out
inc
lods
push
adc
pop
push
jp
das
and
add
cld
les
mov
dec
lahf
and
xchg
jmp
and
sbb
or
cmp
or
mov
not
(bad)
sbb
(bad)
loop
mov
fbstp
or
or
jp
sub
dec
push
or
mov
sbb
es
push
mov
cmp
gs
repnz
out
in
pop
lods
out
cmp
out
push
jnp
mov
repnz
add
pop
adc
xchg
mov
(bad)
cmps
push
fs
dec
dec
mov
pop
sub
cli
ins
gs
cmp
mov
pushf
pushf
and
ror
(bad)
and
out
sti
punpcklbw
dec
fs
sbb
push
pop
inc
sti
fwait
mov
or
adc
lea
sti
or
std
sub
arpl
stos
mov
push
sbb
adc
ins
jl
fst
and
sbb
cdq
or
pop
add
sub
es
jnp
(bad)
xchg
stc
aas
lds
in
arpl
lahf
sbb
mov
aaa
out
mov
mov
inc
dec
fmulp
sar
loopne
pop
sbb
jmp
mov
adc
push
mov
test
fild
div
pop
push
mov
sub
outs
mov
inc
mov
pop
fwait
in
jp
frstor
or
mov
jmp
jecxz
lds
cmp
pop
into
fwait
mov
popf
gs
test
movs
mov
mov
xchg
bound
fs
adc
add
sub
jmp
out
std
push
in
xor
in
sub
xchg
mov
jno
sub
or
push
add
adc
leave
mov
popa
aam
movs
lock
jne
dec
rcl
xor
icebp
add
data16
(bad)
js
xchg
pop
dec
cli
cmc
sbb
pop
imul
mov
popf
cwde
jmp
jecxz
cmp
retf
jno
cwde
(bad)
lods
in
lods
into
sbb
sub
js
cmps
mov
cmp
sbb
push
mov
sbb
push
and
cmps
adc
inc
outs
xchg
pop
pop
jg
fisttp
push
ja
cmp
add
or
js
aas
pop
xchg
fidiv
imul
cmp
retf
mov
cmp
es
adc
imul
lahf
cmp
jno
cmp
dec
sub
pop
xor
ret
mov
test
add
cs
add
pop
cs
cmp
outs
(bad)
mov
jno
ret
aad
sti
add
mov
inc
enter
pop
and
and
mov
pop
ins
cmp
out
mov
das
push
cld
push
or
push
push
lods
ds
xchg
cwde
mov
jno
push
mov
mov
loope
mov
ins
retf
stc
jle
mov
mov
in
(bad)
mov
xor
add
scas
stc
jp
push
out
shr
xor
inc
cmp
test
jmp
xor
or
movs
bnd
sbb
xchg
icebp
iret
jg
scas
sub
adc
repz
out
ret
hlt
sub
aam
cmp
mov
or
icebp
xchg
pop
fild
dec
push
jno
(bad)
nop
inc
and
mov
aam
cmp
push
jbe
push
xchg
and
xchg
scas
push
retf
cs
fmul
adc
mov
fidiv
dec
test
or
dec
push
(bad)
std
xor
jmp
dec
cmp
sub
jmp
mov
jns
lock
les
(bad)
cs
shl
wrmsr
jo
outs
dec
and
sbb
jmp
or
or
xor
xchg
sbb
xchg
sahf
out
and
lods
mov
jbe
rol
mov
pop
inc
pop
sub
jmp
xchg
imul
pop
mov
dec
fisubr
inc
pop
arpl
into
shr
xor
jae
or
or
inc
jno
pop
inc
pop
cdq
push
sbb
daa
jne
mov
cmc
and
mov
xchg
pushf
push
inc
ror
adc
pop
mov
int3
mov
pop
jae
pop
fadd
or
cmps
je
mov
jl
call
inc
pop
scas
xchg
ins
icebp
call
dec
fcmovb
call
(bad)
popa
sub
mov
ficomp
fimul
push
loop
leave
push
mov
xchg
push
sub
out
es
add
cmc
jno
push
pop
data16
inc
fs
dec
into
dec
lods
std
out
mov
loop
sbb
lods
scas
jb
jno
inc
mov
inc
enter
pop
xor
dec
lea
lahf
stc
fwait
mov
mov
stos
(bad)
jecxz
test
arpl
mov
jmp
sbb
mov
std
sbb
fst
add
mov
aad
adc
ret
cmp
scas
cmp
push
cmps
hlt
fpatan
or
jp
into
fbld
lea
jnp
and
ins
pop
adc
adc
mov
out
and
mov
add
cli
push
jmp
xchg
data16
(bad)
cmps
mov
fisub
das
push
jge
and
or
xchg
push
push
test
repz
jbe
xor
and
mov
push
retf
(bad)
cmp
or
and
stos
(bad)
aam
cli
arpl
fild
adc
ja
xchg
mov
rcr
dec
add
cs
push
out
adc
mov
xlat
inc
mov
rcl
xchg
mov
loop
test
mov
cmp
dec
xchg
inc
jno
test
mov
xlat
or
js
xor
ret
cmp
mov
push
dec
(bad)
adc
add
lahf
or
psraw
pushf
jno
(bad)
push
sub
jp
and
push
out
orps
sbb
loope
retf
jmp
rol
inc
gs
inc
inc
dec
mov
stos
xor
inc
jle
mov
repz
mov
push
inc
inc
xchg
or
cwde
scas
test
jb
cmp
cld
nop
mov
call
in
jnp
idiv
rcl
dec
dec
(bad)
ds
mov
inc
or
rcr
or
ins
push
mov
pop
push
or
xor
and
mov
jmp
xor
mov
cmp
imul
mov
inc
enter
ja
xor
fmulp
push
adc
lahf
cmp
pop
push
sbb
xor
ret
(bad)
fsubr
popa
pop
js
ins
mov
mov
out
imul
xchg
sub
fcom
out
enter
and
mov
adc
(bad)
sbb
movs
out
sbb
sbb
or
mov
sbb
loopne
sub
or
sub
sahf
iret
mov
dec
fnstcw
ja
in
xor
xchg
pop
jnp
rol
int3
rcr
es
and
or
xor
adc
mov
in
xchg
les
in
xlat
dec
sbb
push
fwait
push
sti
mov
mov
jo
sar
jmp
push
xor
pop
xchg
and
unpckhps
mov
(bad)
pop
idiv
xchg
test
pop
imul
out
imul
(bad)
fucomi
jmp
xchg
retf
xor
cmps
es
sub
jno
sti
sub
xor
fsubr
dec
sub
ss
add
or
cld
imul
mov
xor
adc
in
dec
cmp
ins
inc
ds
xchg
inc
sbb
cdq
or
ja
fbld
xchg
push
pop
adc
push
xchg
xchg
mov
stc
xchg
add
imul
adc
jne
push
cdq
mov
call
lock
test
push
push
mov
imul
and
jno
loope
pusha
fiadd
ror
jns
mov
cmp
mov
repz
(bad)
mov
fcomp
bound
push
sbb
adc
push
aam
push
bound
mov
mov
dec
rol
push
inc
pop
std
or
jp
jl
pop
xchg
in
inc
dec
sbb
mov
mov
pop
repnz
(bad)
cli
cmp
inc
sub
adc
stos
mov
fmul
movs
mov
mov
xor
loop
movs
lea
sbb
sub
gs
pop
mov
xchg
out
iret
dec
xchg
addr16
xchg
lods
fs
lods
scas
sar
sbb
rol
nop
ja
std
sub
fcmovnbe
push
mov
inc
inc
and
sbb
ja
sbb
rol
xchg
in
test
loop
je
cmp
rol
(bad)
sbb
and
add
(bad)
mov
cmp
mov
pushf
mov
sbb
xchg
lea
xor
xor
xor
jo
push
cwde
cmp
dec
fsubp
ds
ja
mov
stos
mov
sti
jb
inc
xchg
xchg
and
icebp
sti
imul
scas
lods
adc
mul
push
jns
xor
popf
and
scas
cli
pop
jbe
pop
xchg
mov
into
shl
test
call
jmp
jg
loopne
lods
fcmovb
fbld
cmp
push
nop
jo
mov
sub
into
out
les
cmp
push
push
mov
dec
fsubr
and
push
stos
(bad)
in
test
(bad)
scas
call
lock
pop
mov
jecxz
fbstp
retf
cli
test
aas
push
aas
fstp
sbb
pop
mov
retf
repnz
cmp
scas
das
jmp
sub
iret
(bad)
ds
mov
movs
shl
add
jmp
xchg
xchg
or
inc
loop
cli
fbld
push
cmc
loopne
sub
cmp
sbb
cmc
mov
out
in
addr16
or
pop
inc
add
ins
in
cmp
popa
out
not
movs
sbb
add
ja
jl
test
mov
nop
jnp
inc
lods
aaa
in
std
ss
aam
sahf
repz
dec
mov
lods
stc
push
ds
mov
add
and
jp
dec
cmovbe
lds
arpl
jno
cdq
je
mov
adc
jmp
(bad)
test
pop
or
shr
je
dec
adc
(bad)
fist
push
icebp
fnstsw
mov
es
cmp
sub
sub
(bad)
mov
adc
pop
inc
or
adc
cmp
push
jge
adc
mov
(bad)
jbe
adc
cs
xchg
or
xchg
mov
xor
ret
add
cld
push
jns
pop
or
mov
pmaddwd
mov
mov
cmp
mov
push
arpl
shl
repz
jl
push
arpl
dec
pop
mov
jg
scas
xor
dec
data16
gs
(bad)
sub
jle
jns
cmps
mov
dec
inc
mov
xor
cmp
ret
push
(bad)
jl
dec
loope
or
push
fbld
dec
mov
lods
arpl
pop
pusha
push
mov
popa
jnp
push
mov
(bad)
cmps
jmp
mov
xchg
jle
(bad)
hlt
add
cld
shr
inc
and
es
or
lea
retf
push
mov
fnstenv
push
outs
or
movs
ds
jp
loope
sub
mov
out
aam
stos
pop
hlt
and
mov
fcom
inc
mov
xchg
cmp
rcr
or
sahf
imul
dec
enter
dec
inc
push
test
sbb
jae
jge
sbb
imul
call
fcom
test
mov
pop
les
repz
pop
sar
pop
fs
sub
pop
std
in
sbb
dec
mov
shr
hlt
adc
fist
jnp
push
push
adc
mov
xchg
out
in
shl
ret
jnp
mov
mov
stos
cmp
pop
popa
movs
loopne
jne
aad
shl
cwde
stos
mov
push
mov
cmp
mov
xchg
xchg
ret
cmp
xchg
or
or
dec
xor
sbb
pcmpgtb
mov
es
lock
out
add
aaa
out
mov
inc
ins
jge
sub
add
add
cdq
inc
mov
je
jo
mov
dec
enter
mov
cs
cmp
inc
lea
sub
jns
mov
imul
xchg
add
rcr
push
sti
push
push
push
jmp
clc
and
je
aas
addr16
cmp
adc
retf
ja
inc
enter
xor
das
stos
test
pushf
inc
ins
(bad)
mov
mov
sbb
pop
dec
pushf
pop
icebp
xchg
jge
mov
mov
sbb
stos
stos
(bad)
and
pop
lahf
(bad)
push
rcl
mov
mov
(bad)
gs
outs
test
rcl
cdq
jecxz
jo
adc
movs
jno
jge
pop
xor
loop
retf
(bad)
fnsave
mov
cli
test
dec
scas
ss
lods
xchg
or
jg
pop
mov
sub
jbe
adc
je
push
push
mov
pop
loop
std
mov
out
pop
repnz
ror
test
fild
frstor
(bad)
fwait
xor
stos
hlt
out
adc
dec
mov
push
lods
into
ins
test
sar
sub
in
out
sbb
dec
pushf
test
xor
mov
adc
dec
xchg
sbb
xchg
aaa
popa
call
sbb
test
clc
mov
cmp
shl
mov
xor
inc
cmp
adc
ins
outs
mov
lahf
cli
dec
fisubr
or
or
sbb
call
ins
repz
pop
xchg
push
jmp
in
inc
scas
cwde
not
nop
cmp
out
aas
push
adc
arpl
push
mov
add
mov
loop
das
sub
sub
sbb
bound
div
jb
dec
call
xor
xchg
ror
test
and
jle
sbb
bound
dec
in
mov
cs
jle
mov
sub
int
dec
ret
in
test
jg
jmp
loope
and
fst
bound
movs
ins
mov
mov
je
inc
fsub
xor
or
and
dec
and
repnz
and
or
sbb
daa
sbb
inc
iret
xchg
xor
int3
movs
(bad)
mov
add
aaa
xor
lods
fldenv
push
gs
sbb
repnz
dec
call
jns
outs
or
push
mov
mov
sub
fstp
inc
adc
jbe
outs
mov
xchg
call
(bad)
cmp
jns
jecxz
mov
jge
js
push
stos
jns
(bad)
or
jne
dec
cwde
mov
mov
and
mov
lea
push
push
inc
daa
ins
push
repnz
sbb
sahf
mov
ret
shl
push
call
pop
repz
imul
mov
push
test
xchg
addr16
push
push
pop
mov
mov
dec
jge
outs
jg
mov
sti
xchg
lds
das
add
aaa
cmp
ret
ret
jmp
sub
scas
(bad)
xor
pop
jle
(bad)
fdivp
fst
lahf
test
inc
lahf
xchg
cld
mov
jecxz
cmp
out
aam
push
jbe
ror
add
xlat
sbb
mov
cmp
adc
xchg
popa
pop
inc
ret
scas
cli
inc
mul
and
adc
pop
div
mov
out
add
fbld
cmps
jne
jp
mov
and
mov
aad
ss
adc
mov
repnz
jno
jne
nop
xor
stos
aam
fcomp
or
jmp
or
aas
daa
jp
mov
sbb
lea
jne
cmc
aaa
stos
scas
js
nop
and
pop
add
jno
imul
xchg
fbld
jbe
add
adc
lea
imul
mov
je
push
jo
adc
mov
fimul
xchg
dec
sub
pop
push
shl
pop
and
test
pop
rcr
xor
cmp
enter
enter
aam
jecxz
jecxz
shl
in
mov
pop
cld
mov
stos
pop
pop
mov
and
cld
retf
inc
add
cld
cs
daa
rcl
rcr
cmp
or
sbb
pop
test
jno
mov
sub
pop
(bad)
pop
mov
lock
cli
cmp
cmp
xor
movs
outs
xor
and
(bad)
lock
xchg
out
scas
or
sbb
cmp
stc
imul
dec
std
icebp
hlt
dec
xor
cmp
mov
push
lods
shr
push
pop
mov
(bad)
(bad)
aam
lds
retf
pusha
not
push
xor
dec
mov
mov
(bad)
xchg
sbb
rcr
adc
scas
aad
shl
pop
cmp
sbb
xor
pop
xor
(bad)
fsub
out
cmp
push
pop
je
je
(bad)
jns
sar
ficomp
retf
xor
mov
xlat
and
rol
aad
adc
xchg
in
mov
or
jmp
and
sbb
or
aad
inc
retf
inc
pop
outs
fistp
mov
ds
jg
jmp
mov
inc
mov
mov
mov
daa
js
mov
in
xchg
scas
loope
imul
popf
outs
xchg
(bad)
jb
inc
mov
inc
sub
scas
(bad)
out
jnp
mov
fistp
shl
cmp
mov
xchg
cmp
cdq
jp
in
mov
stos
icebp
push
rcl
sub
sbb
stc
ja
sbb
aaa
sub
jp
add
jg
jno
pop
xchg
inc
fistp
nop
outs
aas
inc
jmp
mov
inc
inc
xchg
mov
dec
adc
push
test
dec
mov
cld
push
or
outs
and
or
cmp
mov
xchg
add
ret
sub
lock
std
in
jmp
cmc
or
cmps
fstp
mov
lods
lods
jne
mov
pop
retf
movs
in
ret
pop
pop
pop
pop
add
ins
cld
or
jl
icebp
jb
fimul
enter
stos
jp
jmp
enter
hlt
and
xchg
mov
les
daa
test
(bad)
in
inc
mov
dec
and
fs
popa
lds
fwait
ins
fild
jle
int
in
pop
imul
shr
xchg
xor
stc
sti
inc
fmul
movs
je
mov
sub
imul
fimul
loop
out
ret
test
ds
fs
fwait
mov
push
neg
jmp
pop
mov
scas
(bad)
js
xor
and
fs
(bad)
dec
dec
sub
inc
mov
leave
mov
int3
and
test
leave
jecxz
xor
dec
cmp
div
loopne
xchg
push
outs
dec
call
jmp
mov
pop
addr16
jb
jecxz
outs
jne
sub
pop
stos
cmp
fsub
xchg
pusha
mov
pushf
and
pusha
adc
retf
ja
mov
inc
ret
pop
jmp
sub
out
jg
pusha
sbb
mov
xor
adc
leave
fwait
nop
fs
jnp
(bad)
addr16
rol
pop
push
jp
lods
sub
clc
mov
lods
loope
setge
stos
inc
and
or
test
pop
xchg
push
xor
lahf
loop
mov
daa
aad
aam
and
and
jecxz
aaa
out
arpl
jae
imul
in
ja
loop
push
mov
and
dec
(bad)
out
jo
pusha
cdq
in
test
mov
fwait
dec
lea
adc
push
ss
nop
mov
out
mov
(bad)
xchg
cmps
mov
test
idiv
fcmovu
loop
push
mov
fnstenv
fisttp
xchg
jbe
ins
pop
into
test
iret
clc
pop
pop
xor
jge
cld
addr16
in
in
sbb
ins
test
and
sbb
imul
mov
aam
mov
call
pop
ret
adc
les
out
jno
or
sub
sahf
xchg
outs
xor
inc
sbb
xor
test
cmp
jmp
fisub
call
popf
ficomp
test
mov
lahf
pop
ror
test
cdq
lods
push
nop
adc
xor
shr
jp
ja
mov
or
mov
mov
push
mov
mov
test
lds
mov
stc
(bad)
gs
jne
mov
cmc
mov
dec
les
sbb
dec
ror
gs
fwait
and
in
ret
jne
mov
pushf
sbb
sbb
dec
scas
into
sbb
xor
cmps
sub
in
int
and
in
nop
xchg
popf
pop
pop
inc
mov
and
dec
mov
clc
mov
pop
jle
cmps
cmp
cmps
retf
jmp
jmp
mov
xchg
sub
pop
dec
lds
mov
sahf
jmp
pop
cdq
dec
cmp
sbb
das
shr
mov
cmp
arpl
mov
in
mov
cmps
(bad)
pop
(bad)
cmps
(bad)
push
inc
or
int3
jmp
mov
aaa
daa
inc
bnd
fisttp
pop
add
(bad)
loope
cmp
dec
arpl
jge
cwde
adc
mov
jno
adc
pop
out
push
mov
ja
push
(bad)
retf
arpl
aas
cmp
fsubr
push
fs
sbb
dec
imul
mov
push
mov
push
push
jnp
ins
cli
xor
mov
inc
or
cmp
mov
inc
scas
sub
call
mov
test
push
cmovp
pop
cmp
sub
pushf
pop
dec
adc
mov
out
push
stos
pop
popa
(bad)
jp
xchg
in
xchg
mov
test
jge
mov
inc
mov
scas
rcr
lahf
xlat
cmp
adc
jecxz
add
psubw
and
ja
lods
retf
pop
movs
js
daa
or
data16
push
push
cmp
push
lea
jle
popf
jne
and
fidiv
popf
xchg
jmp
mul
div
loope
(bad)
xchg
push
hlt
cmp
fwait
push
cmp
xchg
and
dec
sub
xchg
inc
dec
es
pop
icebp
push
xchg
fisubr
fadd
clc
ins
push
push
add
or
(bad)
mov
popa
cmps
pop
push
inc
dec
cli
jmp
enter
pusha
femms
push
xchg
or
pop
gs
gs
pop
sub
daa
sub
icebp
mov
retf
and
sub
scas
shl
sub
xor
stos
cmc
mov
mov
pop
outs
inc
cmp
jns
cmc
xchg
xchg
popw
cmp
ret
and
lea
dec
xchg
dec
jl
jg
pushf
add
and
imul
mov
(bad)
mov
inc
jecxz
cmp
pop
out
mov
retf
jecxz
push
and
rol
pop
xlat
mov
cmp
retf
pop
cmps
lea
and
mov
in
(bad)
daa
or
inc
inc
cli
dec
mov
sbb
test
mov
repnz
nop
push
pop
shl
dec
ficomp
adc
fwait
xchg
sbb
inc
mov
jge
int3
xor
dec
leave
ret
or
pusha
xchg
jge
xor
jae
cli
lods
aaa
mov
sub
cmp
and
pop
mov
pop
or
adc
loopne
cs
in
mov
retf
inc
ret
stos
aas
clc
xchg
test
ins
cmp
outs
in
in
cmc
xchg
xor
mov
sbb
imul
add
mov
lods
movs
div
in
jmp
ret
jg
repnz
neg
fld
cmc
mov
or
jnp
cs
out
mov
pop
cmp
int3
mov
retf
aad
xrelease
push
xor
and
cld
out
jecxz
push
dec
sub
sub
cmp
sub
dec
mov
fild
jae
shl
xor
push
mov
mov
call
adc
bound
daa
bound
and
(bad)
sbb
loope
and
aam
cmp
dec
xchg
mov
mov
imul
outs
sub
xor
push
add
aas
jns
mov
sbb
sbb
pop
mov
xlat
repnz
int3
jae
scas
mov
in
(bad)
mov
cmp
xchg
je
fsub
(bad)
(bad)
push
out
push
loopne
in
jns
pop
cdq
inc
fs
int
xor
xchg
jmp
fcomp
cmp
mov
xor
sub
sbb
data16
pop
icebp
fist
xor
mov
arpl
repz
aam
push
xchg
push
push
icebp
and
mov
push
shr
test
mov
mov
jbe
xchg
hlt
inc
imul
and
(bad)
scas
dec
pusha
fnsave
sub
push
pop
fistp
mov
mov
jno
mov
dec
push
xor
loopne
sbb
dec
cmp
sub
outs
cld
icebp
imul
mov
stos
pushf
outs
outs
add
addr16
mov
adc
movs
jbe
call
sbb
push
fild
cmp
sbb
call
push
int3
jle
cld
push
mov
pop
sub
and
sbb
xchg
add
sbb
adc
bound
mov
xor
sub
(bad)
das
sbb
movs
ret
icebp
sbb
cmp
pop
pushf
and
ror
loope
pop
fstp
(bad)
retf
mov
push
retf
or
mov
int3
pop
pop
xor
sub
push
add
jp
test
and
out
sbb
adc
inc
or
jg
repz
cld
addr16
dec
stos
cmp
jne
push
dec
mov
pop
(bad)
js
mov
push
ds
cwde
leave
adc
xor
movs
mov
mov
jmp
xchg
test
dec
adc
cmp
push
xchg
push
lock
(bad)
push
jmp
inc
cmp
jl
dec
or
sub
rol
(bad)
adc
inc
mov
lock
pcmpgtw
in
adc
call
mov
rcr
icebp
xchg
and
dec
adc
mov
jae
jmp
into
sbb
retf
stc
or
dec
jno
call
sbb
push
shr
(bad)
adc
jae
mov
fldenv
push
es
outs
adc
cdq
sbb
(bad)
cmp
call
sbb
jge
mov
sbb
mov
das
jae
gs
push
or
fmul
jb
ins
mov
out
xor
arpl
pop
pop
mov
jae
cmc
lods
ins
loopne
sar
lea
sbb
xor
loop
mov
ds
ins
je
mov
mov
stc
out
pop
fistp
add
add
push
cli
sahf
pop
adc
fs
and
rol
das
repnz
cld
xor
pop
cld
data16
mov
dec
ins
outs
xor
out
xchg
xor
imul
lds
(bad)
xor
vorps
add
dec
pop
adc
ss
xchg
addr16
mov
cmp
xchg
mov
mov
outs
dec
mov
mov
cs
gs
cmp
sub
das
call
or
mov
es
or
aas
clc
ins
call
sti
aad
addr16
mov
pushf
rcl
sub
xor
(bad)
ror
imul
mov
mov
sub
sub
xor
pop
imul
inc
outs
jle
aas
mov
dec
xchg
shl
or
mov
or
pop
cld
leave
ja
push
sbb
add
push
push
das
or
push
jecxz
vmovsd
dec
je
popf
mov
or
in
fnstcw
mov
call
cmp
or
dec
pop
nop
jg
or
ror
rol
sub
in
xchg
mov
and
mov
push
mov
loopne
pop
dec
adc
sahf
jmp
ror
or
xchg
jnp
or
rcr
repnz
jb
adc
fldcw
jno
sub
xor
xor
sbb
mov
add
ins
clc
pop
adc
dec
movs
pop
add
and
retf
sar
push
cmc
cmps
inc
in
les
fs
shl
dec
add
push
arpl
ret
cmp
cmp
pusha
adc
fild
aam
cmp
xor
mov
mov
test
out
mov
fist
sbb
pop
cmp
loopne
test
mov
fistp
mov
or
loop
jmp
add
pusha
or
es
sub
pop
jle
(bad)
test
aas
jmp
retf
iret
aas
cmp
(bad)
lock
fcom
or
adc
lods
js
jae
xor
pop
std
jnp
xchg
sub
dec
sub
xor
movs
cmp
lock
xor
retf
ins
adc
inc
in
and
ffree
mov
and
frstor
jo
js
(bad)
push
enter
addr16
sti
mov
cmp
je
cld
fisttp
inc
lea
imul
push
xchg
dec
cmp
shl
push
jle
mov
shl
test
xchg
ror
inc
fbstp
inc
loopne
mov
lods
sti
int3
mov
sbb
bound
pop
cs
aas
(bad)
or
xchg
lods
movs
jbe
lods
ss
mov
(bad)
sub
mov
lods
pop
fnstsw
leave
mov
mov
jb
dec
mov
xchg
es
clc
push
sahf
pop
mov
mov
jmp
lds
aas
adc
out
inc
das
jo
xor
mov
mov
rol
and
mov
jge
mov
push
aam
call
cdq
test
or
icebp
sbb
lds
hlt
ja
pop
sar
mov
cmp
push
fistp
aam
push
inc
sub
pop
test
push
rol
mov
icebp
pop
push
push
push
xchg
adc
sbb
(bad)
jge
mov
mov
or
sar
xchg
push
mov
pop
mov
xchg
add
aaa
ins
or
in
dec
mov
xchg
push
mov
in
inc
mov
pop
cmc
mov
adc
add
sti
shr
(bad)
mov
mov
(bad)
mov
loope
gs
pop
scas
dec
in
xchg
mov
mov
xchg
cmp
arpl
jle
mov
push
ret
clc
sbb
mov
dec
or
dec
pop
lock
mov
retf
sub
xchg
pop
push
pop
dec
inc
out
mov
pop
test
punpcklbw
lahf
addr16
xchg
mov
cvtpi2ps
into
xor
(bad)
ficom
push
ss
xchg
fld
sub
sysret
ss
push
in
call
nop
repnz
sbb
jmp
lock
mov
bound
(bad)
sti
jp
lock
mov
mov
les
xlat
sub
pop
add
xchg
mov
(bad)
fdivr
mov
dec
cmps
and
and
repz
mov
xchg
jae
pushf
loop
mov
xor
push
data16
test
push
and
pop
out
mov
xchg
inc
mov
sysexit
lahf
(bad)
into
ins
in
(bad)
mov
and
dec
push
sbb
sub
retf
cdq
cli
xlat
loopne
push
cs
dec
es
aam
dec
add
stos
or
in
loopne
jmp
in
cdq
sub
aas
and
mov
jmp
cmps
shr
imul
icebp
leave
push
push
xchg
push
movs
pop
sbb
pop
mov
add
je
jg
push
stc
fs
test
int3
cdq
mov
(bad)
gs
mov
repnz
lock
in
add
out
rol
shr
and
pusha
call
push
rol
cld
aas
mov
out
and
in
xchg
adc
lea
adc
gs
mov
fmul
or
jmp
or
inc
mov
xor
test
nop
lds
xchg
inc
ds
xor
out
push
lahf
adc
mov
shl
icebp
xchg
xor
aas
cli
clc
add
xor
mov
or
lea
cmp
sub
and
and
inc
adc
inc
shl
push
aad
fild
scas
mov
lods
pop
xchg
int3
call
and
cmc
sbb
(bad)
push
mov
or
push
pop
sub
add
pop
call
mov
cmp
inc
mov
mov
shl
mov
cmps
or
push
xchg
lahf
mov
cwde
imul
pop
push
(bad)
or
addr16
adc
and
ins
xchg
in
movs
repz
pop
stc
dec
add
pop
lods
cli
pop
daa
dec
mov
or
stc
les
jne
push
pop
mov
pop
ds
adc
ds
adc
sub
or
(bad)
(bad)
add
mov
dec
sbb
pop
adc
cmp
js
scas
test
(bad)
aad
pop
scas
cmp
aad
leave
xor
sub
out
sahf
cmp
xchg
mov
retf
fidivr
jns
sbb
xlat
fild
clc
fisttp
call
aaa
push
call
xor
aad
mov
pop
addr16
or
cs
lods
mov
xor
fdivr
adc
aaa
fdivr
imul
add
imul
jmp
les
addr16
xor
jb
or
and
pop
and
cs
and
jns
fcmovnbe
pop
mov
pop
xchg
int
dec
xchg
stc
ret
lock
mov
std
lods
(bad)
and
push
jbe
fisttp
dec
call
lahf
add
mov
bound
xor
aaa
jl
or
add
add
sub
mov
mov
adc
add
call
neg
dec
and
ss
pop
in
push
fcomp
ss
pusha
mov
jns
test
fadd
mov
push
push
int
cmps
adc
pop
shl
xchg
push
sub
das
xchg
out
pop
lock
rol
adc
xor
out
pop
std
outs
ret
xor
xchg
gs
inc
mov
adc
call
fstp
mov
adc
sbb
add
dec
inc
push
neg
dec
push
or
sti
sub
sbb
leave
adc
mov
sbb
lds
dec
stos
ins
ror
lock
jno
xor
cmp
mov
mov
push
out
aaa
mov
dec
xchg
push
daa
(bad)
push
jne
cmp
cmps
lods
lods
call
js
cmc
dec
mov
(bad)
jae
mov
adc
inc
cmp
jl
repz
leave
fwait
(bad)
jle
in
iret
gs
popf
or
lds
mov
(bad)
arpl
jl
cmp
push
xchg
loope
test
paddusw
adc
add
addr16
or
enter
jge
cmc
xchg
add
mov
mov
std
push
push
pop
mov
sbb
pop
bound
xchg
adc
mov
aam
pop
int
pop
je
hlt
mov
inc
push
sar
add
cmp
pushf
popa
mov
repnz
jb
ror
push
adc
mov
scas
lods
mov
mov
add
retf
aas
inc
and
(bad)
mov
ins
inc
ins
sar
cmps
mov
mov
ret
daa
imul
mov
sub
movs
or
sub
mov
sbb
mov
mov
idiv
cwde
pop
dec
call
push
mov
jae
stos
mov
mov
or
call
mov
xchg
call
cld
cmps
mov
xor
xchg
and
adc
xor
sub
scas
mov
(bad)
call
mov
dec
mov
adc
and
jg
sbb
mov
(bad)
mov
mov
cli
jbe
jb
add
or
std
adc
imul
jnp
js
retf
jle
cmp
mov
data16
or
mov
pop
int
cdq
cs
inc
into
xlat
or
in
cld
rol
sub
int3
stos
pop
ins
ficomp
sub
shl
or
ret
push
aam
pop
cdq
std
lock
xlat
dec
imul
pop
(bad)
aad
sub
in
cwde
test
out
movs
(bad)
inc
or
(bad)
movs
outs
outs
cdq
mov
ins
xchg
push
in
out
loop
pushf
idiv
pop
dec
inc
or
cmc
gs
cli
mov
clc
loopne
push
push
dec
pop
cwde
(bad)
push
push
jno
in
out
lods
pop
pop
pop
add
mov
xchg
cmp
clc
sub
jmp
dec
cmp
jbe
adc
dec
pop
xchg
adc
aas
adc
mov
cmp
cmc
xchg
sub
imul
push
mov
out
lea
leave
and
sub
sahf
sub
dec
mov
aaa
xchg
add
icebp
mov
lahf
push
out
pushf
mov
out
shr
mov
pop
fwait
inc
push
repz
cwde
cdq
test
rcl
xchg
sbb
iret
xchg
out
push
sbb
(bad)
clc
daa
sbb
ja
into
pop
cli
sub
sbb
jge
in
xchg
int
fnstcw
xchg
push
fdiv
adc
ins
jg
mov
pop
mov
mov
dec
mov
mov
fnstsw
or
sub
inc
xor
mov
(bad)
aam
and
ins
xor
inc
shl
ds
or
mov
iret
dec
or
aas
sub
cmp
cmp
data16
aaa
cmc
add
mov
nop
pop
push
jbe
mov
sub
xchg
stos
cdq
xchg
mov
(bad)
jno
and
sbb
in
adc
movs
sti
fisttp
fs
arpl
jae
in
dec
arpl
(bad)
(bad)
mov
aas
push
mov
shl
pop
out
(bad)
shl
xchg
cmp
call
add
or
mov
lods
inc
sbb
out
cdq
jmp
sbb
add
(bad)
sub
lahf
leave
leave
xor
jmp
jle
and
in
retf
inc
xor
xor
fmulp
lahf
push
mov
pop
xor
adc
jmp
loop
sub
shl
jns
das
std
call
loope
mov
inc
xchg
inc
jnp
add
ss
mov
arpl
cmp
shl
mov
push
mov
shl
mov
jp
icebp
movs
xor
jne
(bad)
push
int
inc
movs
jno
fimul
(bad)
out
dec
xor
ins
scas
aam
mov
jle
in
dec
cmp
mov
jmp
push
test
nop
add
mov
rcr
fsubr
addr16
mov
and
ins
std
hlt
ins
xor
call
mov
jae
in
ins
jnp
mov
fnsave
or
add
sub
xor
jle
pop
jbe
and
inc
mov
xor
les
adc
mov
rcr
ins
mov
jp
mov
clc
add
cld
jle
xor
xchg
sbb
fs
or
imul
ins
arpl
dec
adc
fwait
cmp
add
in
add
add
sub
dec
daa
movs
sbb
inc
in
stc
loop
adc
sbb
bnd
push
test
shl
out
push
xchg
xor
mov
xor
adc
and
out
xchg
or
jb
pop
cli
retf
xor
js
add
push
fild
mov
test
inc
loop
or
adc
(bad)
fistp
hlt
mov
ins
ret
std
sbb
push
xchg
clc
xlat
aaa
shl
push
mov
or
add
pusha
mov
sbb
pop
mov
in
mov
and
mov
dec
(bad)
sub
inc
fwait
sub
aam
ret
jb
fisubr
unpckhps
in
je
sahf
fisubr
in
int
pop
in
mov
add
sbb
in
adc
outs
sub
xor
fisub
shl
or
ja
iret
dec
inc
js
jecxz
fmulp
and
fnstcw
push
lahf
dec
cs
add
iret
cwde
dec
inc
shl
shl
xchg
or
cli
cmp
clc
sub
retf
mov
cmps
cs
(bad)
cmp
adc
xchg
je
jbe
aas
pop
xor
inc
jle
and
test
movs
jbe
int
pop
ja
rcr
gs
jl
cld
pop
xchg
push
mov
mov
fwait
cmp
in
xchg
fs
popf
mov
call
mov
in
mov
xor
sub
mov
xchg
or
jle
clc
inc
loope
dec
inc
sbb
js
rcl
out
xor
xor
push
jmp
fmul
stc
cmp
je
and
add
in
mov
loopne
add
sti
jle
out
ds
sub
hlt
sub
je
hlt
pop
out
mov
ins
leave
neg
push
sub
mov
jnp
mov
or
pop
(bad)
mov
cmp
add
dec
cmp
js
or
movs
int
add
(bad)
dec
scas
jmp
rcl
push
xchg
lock
jmp
retf
in
movs
mov
jge
repnz
mov
enter
adc
int3
and
pop
cmc
adc
(bad)
out
js
sete
div
jb
push
jmp
lahf
xor
pop
out
inc
or
mov
pop
xor
ror
fisub
dec
imul
mov
pop
mov
cmp
pop
push
mov
sti
(bad)
jne
sub
mov
bound
cmp
jmp
dec
fsubr
(bad)
adc
add
jb
add
cmp
adc
add
fwait
lock
shl
sub
fld
dec
or
ss
jnp
push
stc
mov
dec
sbb
jmp
xor
xchg
hlt
pushf
aam
jge
stos
outs
sub
aam
mov
mov
jecxz
inc
int
mov
gs
dec
jmp
jl
test
out
mov
pop
ficomp
jle
jns
jb
repz
les
jo
or
jb
pop
out
loop
jns
cwde
jnp
and
inc
movs
mov
pop
lahf
out
dec
sbb
loop
pop
pop
nop
sub
mov
in
inc
inc
push
mov
ret
push
cmp
push
popa
mov
jmp
out
push
inc
adc
inc
cmps
pop
dec
in
fldpi
(bad)
(bad)
push
lods
loopne
call
cmps
jp
sti
or
ds
scas
pusha
mov
es
pop
mov
popf
jp
mov
sbb
popa
les
push
and
(bad)
and
loop
mov
(bad)
jnp
pusha
push
inc
aad
pop
int
cmp
mov
sti
push
call
jcxz
fimul
scas
add
cmp
aaa
pop
mov
dec
out
push
cmp
repz
fsub
pop
push
jl
mov
shl
pop
icebp
add
out
mov
retf
mov
ret
jno
mov
ficomp
scas
ins
xor
call
jbe
(bad)
add
jnp
pop
popa
cmp
push
xchg
hlt
shl
mov
pop
shl
(bad)
shl
(bad)
movs
pop
fnstenv
cld
leave
je
ret
mov
or
sti
test
cdq
in
pop
and
jmp
pop
inc
jns
sbb
(bad)
(bad)
cmp
xor
(bad)
xchg
ins
dec
aad
inc
sbb
dec
leave
dec
mov
loope
jecxz
scas
retf
jb
add
xchg
mov
retf
jno
pop
push
mov
(bad)
adc
outs
in
fisubr
add
outs
leave
cmp
mov
arpl
test
dec
outs
fcom
push
inc
mov
sub
pop
and
xchg
and
cmp
jge
push
mov
dec
sbb
sub
push
data16
jmp
jle
in
add
pop
add
sbb
pop
jmp
jne
cmp
mov
fstp
dec
stos
outs
pop
lds
test
jae
aam
cmps
and
mov
js
pop
jo
jae
pop
std
sar
inc
sub
shr
js
rol
rcr
cmp
ret
fwait
repz
sub
(bad)
push
int3
mov
push
push
mov
mov
cmp
sbb
fistp
mov
mov
mov
daa
pop
cmp
int3
rcl
add
mul
mov
not
and
cld
mov
dec
xor
int3
adc
jns
sar
jp
movs
bnd
cmp
enter
cmps
ins
mov
xchg
jge
xor
or
push
and
dec
pop
mov
(bad)
mov
out
fisttp
ret
or
into
or
dec
rol
outs
pop
cmp
and
sbb
retf
mov
jg
jp
test
movs
cmp
fist
call
(bad)
movs
jge
jle
fsubr
or
shl
or
jbe
adc
jl
hlt
push
cmp
pushfw
call
(bad)
cmc
mov
push
mov
push
sbb
fisttp
inc
pusha
push
or
loop
movs
and
mov
aas
push
xchg
xchg
inc
outs
scas
pop
xchg
jo
sub
adc
jmp
lock
push
push
inc
fild
pop
xchg
pushf
shr
push
xchg
popf
ins
mov
pop
pop
push
adc
es
nop
push
jo
mov
push
(bad)
icebp
dec
push
jmp
stos
adc
in
jle
mov
xor
push
sub
sbb
jecxz
pop
sub
dec
es
sub
repz
scas
stos
fnstcw
js
mov
or
sub
add
inc
inc
std
enter
test
sar
in
mov
xchg
shl
xor
nop
shl
dec
hlt
xchg
mov
push
daa
sbb
(bad)
js
and
cs
cmp
push
aad
push
ins
cmp
and
push
lea
sbb
repz
fisttp
test
pop
test
xlat
xchg
(bad)
push
test
hlt
call
fdiv
pop
mov
sbb
xor
mov
je
inc
iret
(bad)
lock
cmovg
aas
add
inc
aaa
bound
idiv
and
aaa
into
dec
das
(bad)
lods
xor
loope
outs
mov
inc
fcomp
adc
inc
xchg
xchg
jecxz
mov
cdq
pusha
push
mov
dec
pop
sub
lds
xor
dec
ds
add
stos
jne
pop
xchg
es
inc
dec
adc
inc
push
or
test
cmc
lds
out
xchg
repnz
lds
in
and
in
call
es
mov
or
dec
out
jmp
push
pop
es
adc
(bad)
inc
push
call
push
xor
ds
or
sbb
pushf
sub
dec
sub
mov
out
inc
ins
push
push
cmps
shr
jbe
pop
xor
push
ja
call
sbb
stos
jbe
mov
ret
std
xor
push
sbb
dec
std
fwait
adc
shl
jle
out
arpl
out
nop
jl
dec
and
rcr
adc
cmc
mov
daa
push
mov
leave
sbb
dec
jbe
jae
push
push
jmp
jg
cmps
xor
nop
push
jb
or
push
add
adc
xchg
jb
(bad)
pop
mov
lahf
sub
cmps
into
sti
std
stos
lahf
mov
ins
adc
mov
adc
iret
push
xchg
adc
xchg
push
popa
aam
jne
sub
(bad)
mov
scas
clc
aaa
(bad)
shr
out
mov
hlt
scas
ret
sub
adc
mov
mov
call
lods
fst
push
sub
add
outs
mov
std
pop
dec
mov
mov
inc
arpl
pop
fst
mov
fisttp
mov
jae
int3
pushf
fcmovbe
std
xlat
add
jno
mov
pushf
adc
(bad)
in
jge
mov
sbb
adc
mov
outs
repnz
imul
mov
xchg
test
cmps
adc
sub
or
jp
mov
das
(bad)
in
pop
or
mov
adc
(bad)
and
fcom
and
and
dec
int3
sbb
dec
jno
mov
lods
and
retf
cs
mov
loopne
sbb
jmp
das
ja
xchg
arpl
lea
jne
xchg
add
mov
cs
add
pop
add
and
inc
push
xchg
mov
pop
fld
cmp
push
test
pop
ret
jbe
or
sub
sbb
or
aaa
jo
in
jno
cmc
aas
jns
dec
jl
mov
adc
and
adc
cmp
mov
jbe
(bad)
sbb
xor
mov
pop
adc
xor
dec
test
add
xor
(bad)
pop
sti
mov
xor
sar
xor
ret
jecxz
ud1
retf
push
popf
fistp
pop
es
mov
cmp
cld
or
imul
jbe
test
in
mov
ja
out
mov
xor
and
call
out
mov
xchg
sti
test
popa
mov
sub
adc
and
xchg
xchg
pushf
xchg
push
cdq
cwde
jb
pop
sbb
shl
bound
lock
nop
aam
gs
push
push
jmp
outs
loopne
pushf
aam
xor
jbe
lods
push
jbe
mov
mov
rol
cmp
repnz
push
cwde
push
mov
inc
cmp
aad
mov
sub
mov
add
push
and
pop
lods
inc
dec
movs
xor
or
adc
jl
and
dec
jmp
cdq
or
jbe
mov
mov
std
rol
js
pop
dec
or
jbe
fwait
sub
cdq
fst
test
jmp
cdq
lods
or
mov
mov
and
daa
cmc
jno
ins
mov
sbb
push
(bad)
cmps
loop
js
call
cdq
pop
leave
ds
inc
call
lahf
sti
repz
jmp
in
nop
(bad)
icebp
push
cmp
inc
jmp
adc
cdq
je
cmps
not
xor
add
ss
or
aas
push
xor
popf
push
in
inc
mov
or
push
cli
dec
hlt
jge
pop
mov
sbb
inc
jo
mov
mov
repz
shl
stos
pop
imul
xchg
cmp
shl
cmp
pop
mov
cmp
stc
push
xor
int3
fimul
test
cs
test
ret
in
nop
and
pop
cmc
mov
or
cli
out
gs
jo
add
in
(bad)
call
stc
adc
push
push
mov
mov
js
jp
and
arpl
adc
jne
add
inc
or
movs
inc
adc
test
pop
ins
mov
push
repnz
mov
adc
into
add
lds
or
dec
xor
sbb
data16
mov
push
out
jno
stos
mov
adc
sbb
out
mov
and
inc
mov
mov
jmp
inc
push
les
rol
push
test
cdq
mov
sbb
aaa
and
adc
test
fs
mov
jae
push
inc
ret
js
je
push
xchg
fcomp
push
xor
mov
dec
cmc
mov
push
cdq
sub
xchg
mov
dec
nop
or
mov
mov
mov
lock
in
jecxz
xchg
js
xchg
jg
or
lahf
or
(bad)
sub
mov
xchg
jmp
aam
jl
push
fsubr
push
outs
sbb
retf
mov
in
lods
dec
test
sbb
arpl
aaa
xchg
or
dec
(bad)
jmp
push
adc
push
fbstp
outs
out
or
push
cmps
addr16
mul
imul
stos
jno
cld
in
out
or
and
pop
mov
test
and
sub
pop
pop
fstp
dec
xchg
cmps
test
mov
or
sbb
sbb
into
push
(bad)
rcr
jb
push
and
xchg
inc
outs
popf
hlt
sub
mov
div
(bad)
jmp
ror
fidiv
(bad)
adc
or
stc
xchg
pop
into
loopne
xlat
(bad)
dec
pusha
inc
pop
sbb
sbb
sbb
sub
movs
mov
mov
adc
push
or
ret
and
xchg
sub
and
js
popa
push
inc
sbb
jnp
sar
jl
xchg
xor
outs
adc
fldcw
ret
or
add
(bad)
adc
jb
out
sbb
xor
cdq
shl
mov
(bad)
cld
inc
push
or
aam
push
fbstp
in
adc
sar
mov
out
(bad)
jmp
mov
jo
ss
xor
jg
adc
inc
div
mov
mov
jle
jmp
and
mov
push
cmps
push
fistp
test
sbb
pop
sub
retf
out
jo
push
sub
mov
sbb
ins
lahf
cdq
adc
mov
or
xchg
cmc
loop
sbb
jnp
inc
add
test
pop
popa
pop
xchg
jecxz
rcl
and
aaa
ins
push
es
enter
outs
add
js
test
add
push
test
fwait
cmc
add
lods
xchg
arpl
clc
pop
lahf
xor
sbb
fdiv
pop
push
lea
stos
leave
push
aaa
xor
shl
mov
das
xor
pop
cmp
xchg
inc
inc
stos
and
inc
aaa
ret
hlt
xchg
adc
outs
mov
test
jbe
jle
lahf
loope
jle
cmc
jg
movs
ret
jbe
mov
xor
push
imul
dec
test
xchg
icebp
dec
std
push
dec
cmp
movs
js
jmp
cmp
sbb
iret
pop
test
shl
ss
inc
arpl
jns
stc
mov
sbb
lds
sub
fwait
out
or
jl
mov
cli
js
dec
repnz
popf
inc
push
add
sbb
jecxz
(bad)
movs
add
(bad)
out
aas
out
lock
inc
mov
mov
jb
retf
into
xchg
call
adc
ret
dec
out
pop
pop
(bad)
mov
mov
popf
shr
cmps
add
dec
sbb
ror
ja
outs
cwde
lds
out
jb
sub
data16
xchg
inc
pop
xchg
aam
adc
and
rol
add
mov
dec
out
popa
in
push
(bad)
cdq
dec
mov
mov
xor
ss
mov
(bad)
pop
mov
xchg
cmp
and
adc
and
fld
test
cmps
std
shl
mov
(bad)
xchg
pop
ror
fistp
inc
fnstcw
out
mov
mov
sbb
mov
ficomp
xchg
adc
out
inc
pop
inc
xor
push
call
sub
gs
jle
mov
sbb
loopne
mov
jmp
mov
inc
push
sub
jge
and
sbb
mov
test
mov
outs
retf
ins
push
sub
rcl
lahf
sbb
cmp
imul
ss
push
mov
repnz
in
repz
sbb
leave
xchg
call
add
mov
rol
int
(bad)
push
inc
int3
and
les
fistp
ret
sbb
mov
sub
and
xor
sub
mov
xor
stos
retf
pushf
and
lods
sahf
sbb
into
fmulp
jg
mov
mov
mov
nop
inc
in
mov
mov
sbb
test
call
pop
dec
xor
adc
xchg
test
lods
and
mov
pop
lds
add
sbb
repnz
pop
loop
(bad)
call
fidiv
rcl
pop
das
enter
call
leave
int3
ss
mov
icebp
push
icebp
xlat
(bad)
test
repz
mov
sub
test
sbb
mov
loope
lock
mov
jp
pop
push
xchg
or
imul
add
outs
test
pop
imul
jp
test
loop
sub
push
sub
or
push
xchg
retf
cwde
or
pusha
cmc
mov
and
xchg
js
mov
mov
mov
in
mov
push
dec
jne
adc
inc
movs
iret
pop
into
xchg
idiv
fld
js
adc
ins
stos
(bad)
retf
aaa
mov
add
adc
scas
sbb
ret
out
call
xor
or
pop
out
loope
push
shl
jecxz
xchg
xchg
mov
ss
inc
adc
add
daa
adc
ins
stos
sbb
add
lods
inc
push
adc
dec
cwde
outs
mov
jge
cwde
fbstp
call
cmp
inc
xor
jge
xor
in
test
hlt
movs
pop
pop
mov
rcl
ds
xchg
sbb
mov
push
lock
repz
test
adc
adc
cmp
out
js
fist
arpl
fadd
stos
outs
adc
pop
inc
rcl
xchg
frstor
mov
fcom
je
add
push
dec
loop
jno
inc
push
inc
inc
inc
pop
sub
call
scas
jae
jmp
cmp
jmp
out
jo
mov
nop
mov
jns
mov
in
(bad)
cmp
iret
cmp
mov
mov
add
or
ja
neg
fs
mov
add
gs
shl
popf
push
add
dec
cwde
sbb
pop
sub
loope
into
dec
sbb
in
(bad)
(bad)
sub
mov
setnp
scas
inc
and
imul
inc
(bad)
icebp
inc
int
add
mov
dec
mov
jecxz
mov
and
push
mov
test
sub
in
hlt
xor
sbb
push
test
and
jle
mov
jne
test
std
inc
push
lahf
hlt
xchg
sbb
jmp
add
test
fimul
loopne
ja
pushf
outs
inc
into
fimul
xor
or
push
fs
xchg
push
mov
ror
and
jns
cmps
leave
pop
jbe
movs
or
repz
dec
push
out
cmc
mov
mov
retf
in
push
add
cmp
fsub
mov
xchg
pop
fldcw
xchg
sub
jo
cs
call
xchg
idiv
jbe
sti
(bad)
cmp
(bad)
movs
mov
push
ss
fild
add
mov
xor
fisttp
push
push
mov
shr
retf
pop
sub
mov
in
xor
(bad)
adc
sub
cmc
jb
xor
scas
mov
dec
retf
sub
into
in
xor
inc
fdiv
pusha
jmp
or
or
add
clc
push
sub
outs
call
xor
test
int3
in
retf
test
mov
popf
inc
inc
clc
jp
jae
js
add
add
ficomp
mov
(bad)
lock
dec
xlat
fcmovnbe
jecxz
dec
cmp
movs
xadd
jge
cwde
sub
xor
in
or
cmp
fistp
ins
push
inc
cdq
adc
popf
and
add
fwait
out
aad
and
call
xchg
add
push
je
mov
inc
js
mov
mov
cmc
sbb
mov
mov
loope
fdivr
jns
jbe
scas
mov
xchg
jne
ret
out
pusha
push
inc
aaa
les
dec
push
cmp
dec
xchg
imul
sub
clc
ficomp
push
mov
popf
sbb
cld
std
push
(bad)
out
dec
ret
scas
dec
in
sbb
pop
bound
jns
test
movs
push
mov
popa
and
cmp
pop
xlat
mov
cmp
dec
pushf
jne
add
jmp
add
shl
jmp
sub
mov
stos
and
xchg
sbb
(bad)
mov
nop
ins
ins
sub
cmp
cli
cmp
jecxz
inc
and
xor
imul
inc
mov
fadd
dec
ja
ins
mov
mov
dec
lods
add
aaa
(bad)
out
int3
mov
shl
jne
jp
mov
sti
stos
cmp
nop
jp
sbb
scas
xor
push
(bad)
mov
cmp
push
fidivr
cpuid
imul
sub
test
ins
dec
push
mov
sub
pop
sub
push
push
mov
pop
sbb
clc
ds
int3
std
mov
movs
inc
cwde
sub
add
popf
pop
or
movs
push
jg
fs
pop
aas
inc
mov
dec
jns
push
jo
ds
and
add
scas
int
push
sub
dec
xchg
sbb
popa
iret
sub
dec
sub
ins
mov
adc
test
adc
test
cwde
popf
push
test
cmp
push
or
cmps
dec
mov
jb
mov
pop
aas
fcom
or
inc
dec
repnz
dec
iret
ds
outs
test
cwde
sti
into
fs
pushf
ins
test
mov
jb
cmps
(bad)
fs
pusha
arpl
(bad)
xchg
std
outs
xchg
dec
pushf
iret
sub
add
ret
jmp
scas
and
fsubr
aam
cs
pop
(bad)
and
xchg
imul
xchg
jae
bound
mov
daa
or
js
sbb
sbb
pop
enter
stos
adc
fnstenv
dec
fbstp
xor
loop
aam
push
in
mov
pop
inc
push
(bad)
sahf
lahf
jl
adc
cmp
sbb
pop
fiadd
jno
sbb
popa
repnz
and
sbb
push
nop
xchg
enter
jge
mov
ret
inc
dec
pop
and
std
in
adc
push
mov
pop
and
inc
inc
call
jbe
mov
js
cdq
xlat
pop
sub
pop
pop
mov
push
lahf
push
sub
jo
and
in
cmp
sub
cmp
cmp
sbb
push
out
mov
xchg
arpl
(bad)
retf
pop
mov
mov
stc
jg
mov
not
mov
push
(bad)
cli
jmp
fld
mov
fisttp
xchg
xchg
dec
out
out
push
sub
add
imul
add
loop
addr16
or
es
fcom
call
add
pop
ret
xor
inc
stos
into
jle
lds
rcl
pop
mov
or
dec
in
popf
jle
leave
ret
retf
and
icebp
inc
adc
popf
fwait
cli
xor
shl
push
fcomp
jp
ins
mov
dec
dec
js
ss
enter
fs
mov
fisubr
inc
test
inc
retf
rol
mov
or
and
daa
and
pop
adc
out
sahf
pop
sbb
ret
sbb
ret
lock
aas
lods
xlat
mov
xor
dec
dec
es
retf
or
add
or
or
add
mov
push
and
(bad)
jns
icebp
ins
mov
mov
mov
and
in
popf
mov
inc
std
and
push
dec
xlat
adc
mov
sbb
pop
out
fimul
add
out
xor
mov
mov
xchg
not
cdq
cmp
popf
aam
add
xchg
xor
imul
xchg
icebp
pushf
sbb
jge
pop
xor
or
and
mov
out
pop
and
icebp
aaa
sbb
test
pusha
add
fsub
adc
cwde
stos
movs
mov
out
in
hlt
pop
shl
mov
push
ret
pop
cld
inc
or
ror
jae
ss
add
and
hlt
mov
clc
xor
stc
test
pop
jne
sbb
and
fmul
lea
mov
xchg
stc
push
inc
lahf
xchg
cmp
lahf
or
inc
popa
das
xchg
mov
cs
jno
mov
test
sub
mov
push
in
inc
dec
cmp
cmps
mov
vcmpsd
ja
adc
add
or
test
inc
popa
stos
scas
sbb
cmp
pop
push
imul
inc
and
nop
mov
bound
xchg
mov
pop
and
jns
fiadd
mov
int3
xchg
icebp
imul
jbe
std
rcr
outs
or
or
mov
bound
push
push
cmc
pop
mov
inc
xchg
clc
adc
enter
inc
jns
loope
sub
shr
hlt
ret
mov
retf
jo
push
mov
ret
dec
rcr
fiadd
inc
push
mov
mov
mov
or
fcom
pop
stos
mov
repnz
int
call
int
sti
jl
sbb
xor
sbb
jnp
jbe
add
adc
stc
imul
mov
push
add
mov
stos
cmp
add
xchg
pushf
mov
jmp
add
push
pusha
sub
cmovb
iret
push
jnp
ja
hlt
jmp
fidivr
lahf
mov
pop
jb
cmp
push
cs
(bad)
pop
jl
or
xchg
push
fcomp
push
inc
popa
ja
cmp
int3
(bad)
fiadd
gs
popa
rcr
das
jns
addr16
movs
pop
sub
add
sahf
rol
(bad)
std
pop
mov
enter
mov
and
es
mov
or
(bad)
ds
gs
dec
push
cmp
mov
sti
sahf
jnp
(bad)
mov
sbb
adc
lock
gs
test
push
fmul
mov
shl
mov
xchg
or
sahf
(bad)
cmps
add
dec
pop
push
or
into
lahf
out
cmp
adc
cmps
sub
fwait
test
inc
fiadd
push
arpl
(bad)
mov
clc
push
outs
or
rol
pop
xor
lock
loop
cld
push
add
jle
mov
rcl
jp
div
sbb
shl
dec
cmps
push
and
dec
cmp
jl
pop
pop
mov
or
and
sar
or
mov
inc
xchg
and
test
fiadd
jno
adc
cwde
or
(bad)
adc
mov
into
mulps
fnstsw
push
sub
(bad)
xor
ja
mov
mov
hlt
jo
and
ins
push
inc
loop
push
mov
push
inc
pop
imul
pop
or
push
imul
xchg
rcl
inc
sbb
xchg
adc
arpl
jb
push
and
dec
xor
loop
mov
mov
mov
sub
mov
push
arpl
imul
xchg
push
sbb
and
jle
shl
imul
aas
inc
in
sub
pusha
rol
and
stos
enter
pop
in
xchg
cdq
shl
leave
sbb
xor
lods
neg
test
cmp
sbb
push
cld
lock
pop
jnp
push
push
sar
or
pusha
retf
rol
lods
addr16
fild
jns
sub
cmp
stos
lods
cmc
(bad)
xor
inc
mov
adc
or
sbb
lea
inc
xor
inc
stos
jnp
or
inc
xor
xor
fwait
icebp
mov
lahf
cli
inc
(bad)
pop
and
pop
dec
add
cdq
icebp
fadd
int3
sar
inc
mov
mov
lds
jecxz
dec
loopne
cmp
or
dec
sbb
bound
dec
repz
mov
inc
pusha
test
out
lock
clc
(bad)
dec
dec
sub
stc
or
ss
mov
adc
fldcw
rep
inc
shl
loop
out
jne
loop
dec
mov
add
cmps
sbb
jge
rep
popa
call
movs
call
lods
jns
leave
cmc
push
sti
stos
loopne
cmp
adc
sbb
sub
xor
dec
inc
mov
and
pop
das
les
sub
jmp
jbe
shl
jle
xchg
sbb
pop
pop
cmps
movs
je
push
sahf
pop
ret
aam
cmps
pop
xlat
or
sbb
arpl
test
je
hlt
outs
popf
(bad)
ins
mov
add
fstp
sub
faddp
je
mov
push
cs
adc
or
adc
shl
mov
xor
inc
jl
push
sbb
mov
dec
adc
mov
jmp
jmp
add
sbb
loope
mov
push
arpl
aad
hlt
jmp
sub
add
push
lds
xor
iret
ss
sbb
(bad)
mov
xor
or
cmp
repz
dec
clc
test
mov
adc
std
loop
cmp
std
scas
dec
jnp
loopne
std
sbb
(bad)
mov
outs
jmp
ror
movs
xor
dec
cmp
mov
repz
pop
inc
jmp
xlat
mov
fisttp
mov
retf
mov
outs
pop
test
aad
fs
retf
out
mov
outs
cmp
lods
xor
scas
push
test
(bad)
aad
(bad)
out
les
inc
push
(bad)
lea
push
(bad)
sbb
cmp
in
adc
jnp
fcom
and
mov
adc
ds
sub
orps
out
mov
push
shl
lock
and
sub
add
das
scas
pop
jmp
cmp
ds
sbb
cmp
cli
outs
dec
shr
mov
mov
lock
fadd
push
add
call
and
icebp
or
mov
or
sbb
adc
mov
mov
shr
std
js
cmp
push
or
int3
xor
test
dec
pop
(bad)
fadd
es
mov
sbb
jg
xchg
loop
sbb
cmp
and
ret
dec
xchg
and
scas
shr
lods
in
pop
fidiv
pop
movs
jae
popf
sbb
cmp
stos
xchg
or
xchg
and
(bad)
out
mov
test
cmc
js
outs
lock
test
or
cli
mov
in
xchg
jb
sub
inc
sub
pop
(bad)
adc
sub
rol
movs
call
adc
jl
cmp
mov
add
arpl
in
push
lahf
pop
jae
out
xor
test
mov
int3
test
repnz
loope
add
xchg
inc
add
inc
test
ja
jne
into
inc
out
mov
test
jo
cmps
sub
and
inc
and
cmp
adc
enter
cdq
dec
mov
jb
xor
push
sbb
xchg
inc
iret
pushf
xor
jge
and
fsubr
adc
dec
(bad)
aas
xor
cmp
int
cmp
mov
push
sbb
adc
imul
mov
and
cmps
in
sbb
dec
mov
mov
(bad)
aad
sbb
sub
loope
enter
aam
rcr
fist
ins
gs
adc
rcl
jo
inc
jge
push
out
adc
sti
(bad)
and
push
mov
in
fistp
ins
fstp
xor
xchg
ins
mov
jp
mov
pop
inc
scas
out
js
xchg
jnp
adc
xor
pop
es
mov
ins
or
in
xor
daa
inc
lock
ret
cmp
fdiv
out
xor
xchg
mov
and
hlt
push
(bad)
fidivr
mov
pop
add
std
mov
nop
popa
pushf
outs
sar
ja
inc
jns
retf
sub
mov
xor
push
enter
test
pop
imul
pop
fdiv
out
push
push
and
pop
jo
mov
bound
lea
sar
rol
push
mov
sbb
sar
dec
sar
nop
mov
into
dec
adc
aaa
mov
jmp
push
jle
aad
hlt
push
mov
pop
and
mov
das
sti
adc
mov
mov
scas
loopne
call
(bad)
frstor
sub
test
dec
jle
aaa
aad
mov
push
stos
in
pop
pop
jno
push
sti
push
lahf
pop
in
aaa
cmp
movs
sbb
add
mov
mov
pop
out
jp
aad
mov
push
pop
cmp
xchg
scas
rcl
push
fisttp
jmp
cmp
cld
shl
cdq
arpl
outs
arpl
pop
das
xchg
xor
inc
dec
gs
fidiv
sub
add
jl
clc
jbe
xor
test
retf
jbe
push
mov
xchg
or
hlt
(bad)
cmp
push
loopne
shl
mov
icebp
dec
call
jmp
fisttp
cld
mov
mov
jo
jbe
cld
inc
int
or
(bad)
and
js
dec
xchg
fwait
add
and
mov
clc
jno
out
xchg
lock
pop
dec
stos
xlat
jl
(bad)
repz
mov
pushf
jmp
mov
dec
inc
in
stc
jg
stos
stos
adc
ret
lods
or
arpl
retf
lea
mov
sub
mov
mov
xor
aad
test
mov
dec
adc
cmp
adc
int3
mov
xlat
out
test
jns
out
mov
pushaw
jnp
cmp
ss
jo
adc
cmps
shl
cmp
cmc
jge
movs
push
mov
push
test
ds
leave
outs
xchg
cmp
xchg
pop
stos
sysret
sbb
add
call
ins
mov
and
cmc
inc
pop
aaa
add
(bad)
imul
(bad)
jl
mov
aad
fmul
mov
in
or
mul
jne
mov
cs
pop
es
xor
lds
or
icebp
enter
sub
cli
adc
and
mov
push
mov
inc
nop
or
retf
rcl
ins
push
ret
pushf
jp
cmp
jmp
cmp
adc
sbb
call
pop
cmp
push
clc
loope
ret
xlat
inc
(bad)
fiadd
adc
xor
mov
sbb
cmc
fs
pop
les
dec
and
cli
xchg
push
shr
cmp
ss
popa
stos
adc
pop
or
ret
or
rcr
repnz
pop
fcmovnb
lods
ret
inc
loope
pop
xchg
dec
in
mov
pushf
mov
jnp
(bad)
and
mov
outs
pop
je
push
daa
sbb
sub
shr
stos
and
dec
mov
adc
inc
inc
xlat
sbb
xchg
loop
xor
mov
mov
rcl
add
mov
xchg
dec
pop
add
cmp
int3
out
xor
ret
mov
js
sbb
(bad)
jmp
jg
jae
jnp
inc
sbb
or
jl
hlt
xchg
add
and
push
sub
adc
cmp
inc
mov
or
fcomp
fld
jge
push
in
mov
push
and
sar
mov
retf
mov
call
jbe
or
mov
out
mov
sbb
imul
jl
out
dec
scas
pop
fstp
jnp
mov
push
lahf
xchg
jno
inc
in
sbb
mov
inc
cmp
in
cdq
mov
cmps
cmps
loop
imul
fcomp
push
lahf
cmps
arpl
mov
add
nop
xor
adc
cmp
ror
push
test
movs
push
mov
mov
bound
mov
fsub
sbb
inc
test
and
lods
cli
std
fs
in
pop
dec
je
loope
add
xor
inc
jge
popa
loop
fwait
xor
ss
or
pop
adc
ds
ja
push
clc
push
adc
pop
mov
data16
mov
mov
fadd
outs
test
mov
mov
pushf
into
iret
add
jp
push
cwde
dec
sub
cmp
call
std
or
shr
inc
ret
inc
pop
scas
outs
sahf
xchg
pop
inc
and
dec
sbb
dec
add
xchg
mov
jge
ins
cld
and
out
lock
dec
sahf
mov
arpl
bound
cld
jnp
sub
dec
les
call
pop
rol
mov
dec
fld
out
fmul
push
imul
in
and
lea
pop
into
gs
add
and
or
popa
imul
int3
pop
ds
mov
icebp
out
push
push
pop
mov
pop
fdivr
sbb
sub
cmp
test
mov
pop
jo
jno
xor
sbb
xchg
and
xor
push
in
test
add
ficom
jle
mov
inc
hlt
mov
xor
and
lahf
fwait
jg
dec
dec
adc
mov
mov
test
sub
scas
and
pop
fidivr
test
mov
(bad)
xor
sbb
stc
cwde
fidiv
aaa
jge
xchg
and
lods
xchg
addr16
int
xchg
mov
jnp
cmps
loop
rol
fld
and
iret
js
into
into
je
jns
repnz
retf
in
enter
sbb
inc
into
in
outs
fisttp
sbb
dec
jmp
ror
jp
ret
jnp
add
cwde
push
xchg
fmul
push
cmp
cli
out
pop
ins
es
imul
stos
add
pop
pop
sbb
push
or
jns
push
jne
fmul
xlat
and
outs
clc
in
cmp
sbb
mov
inc
push
add
or
mov
in
les
cmc
or
mov
popf
xor
inc
jg
stos
int
nop
jge
cmps
push
xchg
pop
xchg
ins
mov
aaa
add
jp
pop
mov
das
das
out
icebp
push
or
stos
add
pop
icebp
push
add
ja
out
cwde
xchg
inc
pop
test
popf
das
(bad)
mov
mov
cmp
adc
mov
fnstsw
loopne
imul
pop
dec
dec
mov
sbb
lds
cmp
fnstcw
fld
push
dec
xchg
push
daa
push
ins
cmp
push
clc
inc
outs
sbb
sbb
pusha
add
xchg
pop
push
adc
xor
fwait
cmp
cwde
mov
fiadd
sub
std
and
inc
inc
out
sub
cvtps2pd
cmp
jl
je
jecxz
and
int
hlt
repz
pop
add
ret
push
push
add
imul
rcl
sub
mov
cwde
sti
mov
cmc
cmc
sahf
es
cmp
(bad)
mov
outs
jp
es
fadd
dec
int
adc
loop
jbe
test
and
pop
sub
xchg
vpackuswb
xor
inc
and
xchg
dec
cdq
mov
aad
test
sub
inc
push
and
or
sub
dec
pushf
push
add
xchg
jl
xor
rol
ret
adc
pop
cmp
xchg
outs
hlt
dec
mov
inc
jno
pop
push
iret
sub
stos
(bad)
xor
push
addr16
fistp
sbb
and
push
sub
inc
mov
mov
cmp
enter
mov
fs
xor
sbb
pop
sbb
int3
xchg
into
div
mov
pop
jnp
mov
ret
push
or
arpl
ins
int3
xor
adc
xchg
cmp
fcmove
mov
ds
sub
jbe
dec
daa
or
or
stos
mov
sub
xor
iret
fimul
repnz
pop
jnp
inc
(bad)
cmp
cmp
cmp
xor
fsubr
and
(bad)
or
pop
clc
fisub
xchg
xor
mov
test
lods
xchg
sbb
pop
sti
out
add
xor
and
popf
or
aam
cmps
sbb
adc
mov
aaa
in
inc
sbb
idiv
jmp
in
sbb
or
mov
sar
out
ror
leave
xor
jo
push
push
aad
sub
addr16
das
dec
push
scas
repnz
in
jno
pop
(bad)
ret
xor
or
pop
fist
and
dec
fs
stos
cmc
or
outs
stc
rol
fld
xor
cmp
loopne
fmulp
lea
sub
mov
frstor
or
xor
fwait
mov
rol
sti
pop
mov
js
xchg
into
stos
cmp
dec
cwde
mov
sar
icebp
push
stos
jmp
sbb
inc
mov
push
add
pop
imul
adc
mov
(bad)
jb
mov
in
cmp
inc
dec
movs
icebp
jecxz
jmp
mov
shl
idiv
dec
repz
add
or
or
jbe
test
mov
repnz
nop
cdq
test
push
arpl
dec
mov
add
or
and
jo
mov
test
xchg
push
push
shr
mov
imul
push
push
dec
dec
xor
mov
in
out
mov
aaa
rol
jbe
dec
dec
cwde
inc
push
retf
lods
xchg
int3
sbb
adc
xor
pop
push
call
test
imul
xor
cs
cld
ds
scas
call
ins
dec
sbb
cmp
bound
and
lds
push
lds
bound
push
sbb
xor
iret
out
mov
cld
cdq
adc
mov
dec
pop
sub
mov
dec
pop
jne
test
sbb
add
push
movs
cmc
scas
lods
sub
daa
sub
jecxz
les
pop
daa
pushf
xchg
rcl
pop
in
in
add
sahf
and
icebp
mov
outs
mov
and
or
jmp
test
in
imul
mov
lods
or
imul
mov
out
mov
arpl
cdq
dec
stos
repz
push
pop
xor
test
push
retf
dec
std
popa
jl
popf
xchg
ins
and
in
loope
xor
call
add
pop
rcr
xchg
and
jmp
xlat
(bad)
jl
jle
adc
inc
int
ret
scas
shl
or
(bad)
xchg
dec
loop
dec
xchg
(bad)
fdiv
and
mov
mov
and
and
stc
mov
aas
push
push
sub
xchg
dec
pop
push
popa
sbb
loop
sbb
inc
lahf
cwde
mov
(bad)
mov
jmp
(bad)
inc
call
push
jns
in
xor
xlat
ins
xchg
mov
or
or
xlat
loopne
push
pusha
cs
dec
test
popa
jns
push
loop
mov
and
xor
sbb
dec
and
sub
push
movs
ret
xlat
mov
dec
ja
jge
or
stos
pop
test
mov
outs
dec
(bad)
mov
ins
xchg
arpl
cmc
sub
and
ins
cmps
xchg
fstp
xchg
or
push
test
aas
jnp
xchg
jno
jne
jle
adc
out
pop
jle
push
sbb
out
add
sub
loop
or
(bad)
aaa
cmp
inc
mov
and
repz
jmp
sahf
sub
mov
jnp
jge
ins
mov
pushf
test
add
pop
fsub
call
daa
jge
xor
lods
fidivr
stc
mov
lods
call
push
jecxz
dec
in
shl
loope
cmps
data16
push
loope
pop
scas
sub
adc
mov
movs
ja
cmp
jp
add
jmp
mov
rcl
xor
cmp
sbb
mov
mov
iret
xor
scas
cmp
addr16
adc
lods
cmp
cmp
imul
test
inc
clc
sbb
add
aas
pop
cwde
pop
fisub
ss
lock
jno
xchg
fcmove
mov
pop
dec
lea
xchg
jmp
test
cli
or
sbb
xchg
ror
mov
or
fucomip
jg
sti
cmps
cli
sbb
xlat
add
ins
repnz
rcr
faddp
fcmovne
xchg
push
sbb
inc
xor
icebp
sub
push
inc
jg
jo
mov
lea
and
mov
ret
mov
aam
push
ins
arpl
leave
jmp
and
push
icebp
outs
repnz
inc
scas
rol
mov
sub
add
fdiv
push
mov
retf
pop
es
mov
(bad)
das
std
(bad)
mov
jnp
das
push
mov
bound
and
scas
dec
and
push
inc
dec
sahf
mov
mov
and
js
addr16
mov
adc
cmp
test
sub
out
enter
fisubr
sub
popf
dec
xchg
cmp
stc
data16
mov
dec
pop
push
xlat
fldpi
push
mov
xor
cwde
cli
sbb
jmp
push
outs
adc
push
loopne
out
adc
fcom
xchg
ds
inc
pop
data16
movs
push
fiadd
lock
popf
out
lea
or
sahf
pushf
test
loope
daa
lea
iret
mov
sbb
ds
mov
(bad)
lock
push
pop
adc
rcr
or
cmps
movs
xchg
inc
out
hlt
adc
stos
jle
jp
mov
fstp
xchg
mov
lods
xchg
push
movs
ins
cli
xor
pop
sbb
les
sub
mov
(bad)
lea
xchg
cli
pop
stos
xchg
mov
jne
adc
dec
sub
xor
shr
mov
into
push
lea
push
bound
and
xor
(bad)
lahf
or
mov
mov
pop
loope
popf
daa
xchg
push
add
xor
std
mov
or
(bad)
movs
ss
lods
mov
lea
mov
bound
push
adc
xor
mov
in
and
mov
or
pop
shl
xor
cmp
(bad)
jl
ja
loop
jno
icebp
gs
fld
or
push
repz
outs
adc
test
mov
loop
pop
add
dec
out
add
in
jmp
mov
push
int3
push
add
(bad)
mov
mov
cmp
add
pop
loope
movs
loopne
jmp
add
xchg
dec
sahf
sbb
and
push
xchg
cmps
jge
fsubr
mov
sub
(bad)
movs
sar
push
mov
push
jne
cmp
pop
inc
iret
inc
add
dec
add
pop
fbld
cmp
pop
cdq
ficomp
fs
xor
inc
aas
in
xchg
push
fnsave
or
inc
add
cmps
scas
bound
repz
das
ret
jl
xlat
mov
mov
dec
mov
imul
(bad)
and
dec
aam
sbb
pop
ret
repnz
mov
xchg
(bad)
popf
pop
add
inc
clc
pop
xchg
xlat
push
fild
repz
sub
pop
aaa
fisub
iret
jle
jmp
aam
push
xlat
out
push
push
les
inc
(bad)
out
loop
mov
lods
mov
add
popf
adc
(bad)
dec
and
mov
dec
adc
gs
cmp
(bad)
sbb
adc
pop
loop
xchg
sbb
mov
mov
xchg
rcl
sbb
sbb
sti
aam
mov
cmp
pushf
sub
shl
sbb
mov
sub
and
jnp
ja
inc
xor
xchg
jmp
sahf
aam
arpl
push
cwde
(bad)
aam
stos
cs
xor
xor
add
mov
sub
jge
cwde
sbb
clc
xchg
frstor
jns
mov
sahf
mov
pop
mov
add
out
(bad)
dec
popa
enter
pop
and
in
sbb
push
cmp
adc
ss
mov
xchg
repnz
push
jl
loop
xchg
or
ret
or
outs
pop
pop
sub
(bad)
int3
cwde
pop
mov
sbb
cs
cs
sbb
dec
or
sahf
or
mov
mov
add
jmp
inc
cmp
call
dec
xor
mov
add
fldl2t
sbb
mov
and
shl
sbb
mov
out
iret
hlt
inc
ror
pop
jno
add
xchg
pop
lods
sti
lahf
xchg
retf
push
mov
sbb
cdq
loope
inc
push
outs
loopne
lods
ins
ins
icebp
pop
sbb
shr
or
jb
ret
xchg
div
inc
or
movs
dec
ror
jge
mov
lahf
fld
jno
mov
std
xlat
push
sbb
sub
and
sbb
stos
mov
test
xor
(bad)
push
push
lds
sub
dec
mov
cli
aaa
retf
sub
or
das
mov
loopne
jo
popa
cmps
cld
or
jmp
in
push
push
inc
and
jmp
inc
loopne
repnz
fidivr
repz
push
mov
push
add
mov
push
xor
rcr
and
pop
jle
or
js
repnz
aad
mov
mov
inc
cmps
nop
xchg
cld
push
xor
cmc
pop
outs
mov
adc
je
(bad)
sub
aas
pop
stc
or
mov
pop
mov
mov
adc
xor
stos
aam
mov
cmps
stc
mov
xor
inc
jne
mov
sub
div
sub
inc
ds
xor
mov
dec
imul
addr16
call
and
mov
push
inc
jle
adc
mov
arpl
pusha
loope
sbb
jecxz
retf
inc
cmp
cmp
ja
outs
mov
cld
out
jg
mov
or
in
call
mov
clc
sub
fwait
repnz
push
adc
cmps
fsubr
ret
xor
popf
pop
cwde
mov
jl
xor
and
iret
dec
mov
nop
push
pusha
mov
mov
mov
pop
fiadd
fs
call
dec
xchg
cs
shl
enter
xor
fmulp
add
aas
add
jnp
jge
push
jne
add
stos
sub
outs
int3
retf
inc
ins
jne
cwde
mov
cmp
push
enter
cmp
xchg
pop
ret
adc
jno
not
pop
sbb
ja
sbb
mov
sbb
imul
je
mov
fstp
cli
outs
pop
pusha
lock
pop
sbb
call
cs
xchg
sbb
xchg
inc
xor
pop
push
mov
xchg
push
mov
daa
fnsave
aam
arpl
cs
push
pop
xor
cmp
mov
pop
push
in
stc
mov
mov
mov
and
xor
hlt
pop
mov
scas
in
and
mov
cwde
arpl
mov
outs
dec
js
adc
sti
pop
add
fist
push
and
pop
int
sub
mov
jmp
outs
jmp
(bad)
xchg
retf
pop
adc
cld
push
xor
mov
jge
scas
movs
mov
popa
mov
and
mov
xlat
mov
xor
loope
inc
(bad)
mov
lahf
push
hlt
inc
or
jmp
retf
pop
test
cmp
mov
sahf
mov
scas
icebp
xchg
xchg
ins
xor
mov
sub
loopne
sbb
je
push
aaa
fcmovbe
sub
dec
aaa
fwait
xlat
js
jnp
adc
xchg
jle
add
retf
pop
sbb
retf
sahf
mov
test
ss
mov
outs
sub
dec
push
enter
mov
movs
sub
pushf
es
lods
call
or
push
aam
into
or
ja
xchg
push
pcmpeqd
movs
pop
inc
dec
jno
push
mov
ja
adc
jmp
out
imul
jo
out
xor
sbb
shl
cmps
mov
daa
aas
mov
or
outs
cmc
mov
mov
jnp
jae
pop
(bad)
pop
(bad)
and
cmps
adc
cmp
cs
mov
(bad)
sub
sub
imul
in
push
scas
mov
mov
or
mov
sub
pop
xor
stos
sub
push
fs
inc
aas
call
jb
into
mov
stos
inc
lea
aad
dec
test
jmp
add
mov
imul
jl
cmps
mov
iret
cmp
in
aas
pop
mov
mov
cmp
out
(bad)
jbe
ja
cmp
mov
ja
or
pop
cwde
aad
call
xor
fst
cmp
ret
pop
neg
ins
mov
push
mov
test
mov
mov
stc
mov
cwde
es
movs
icebp
sub
retf
sbb
mov
or
dec
sub
and
xor
xor
mov
in
mov
dec
out
push
imul
retf
test
push
xor
nop
adc
xchg
cli
dec
das
imul
dec
adc
test
and
into
lods
or
jns
das
icebp
inc
add
movs
dec
sub
pop
mov
mov
adc
fsubr
xchg
aam
xor
or
ja
ror
fistp
dec
pop
aas
dec
lods
aaa
dec
mov
cmp
hlt
xchg
mov
int
pop
inc
stos
pop
je
lea
(bad)
movs
rcr
and
add
adc
add
(bad)
das
xchg
fs
jne
mov
pop
cdq
and
dec
cmp
xor
and
dec
and
pusha
mov
xchg
push
pop
fisub
push
adc
shr
cmps
sbb
call
push
aaa
jo
jae
outs
cld
pop
push
and
mov
cld
aam
sub
in
sub
stos
xchg
inc
into
sbb
pushf
push
call
sti
fstp
rol
jns
mov
shr
cmp
mov
gs
int3
sar
ins
mov
inc
and
jb
inc
mov
fist
repz
adc
or
sbb
add
inc
fnstcw
(bad)
adc
push
repz
mov
pop
in
add
xor
cmp
cld
stos
jmp
jb
retf
fucom
inc
push
(bad)
shl
and
xor
dec
popa
add
mov
cmp
jbe
jns
cmp
pop
adc
and
in
xor
stos
hlt
xor
push
jb
or
mov
mov
fs
cli
not
ds
mov
(bad)
cmps
es
sti
add
sbb
nop
ins
jno
sahf
mov
dec
or
lds
or
fs
movs
mov
jmp
fsub
add
arpl
test
push
loope
cmp
push
xchg
fucomp
je
inc
mov
ins
pop
inc
cmps
hlt
mov
stos
mov
mov
in
and
sbb
mov
cmp
xor
(bad)
xchg
push
pop
loopne
cdq
pop
cli
sub
xchg
pop
das
adc
loopne
sbb
lahf
cwde
fld
xchg
adc
push
pop
loope
retf
ds
dec
sbb
dec
or
xor
into
push
pop
adc
mov
les
daa
data16
push
mov
pop
xor
pop
add
scas
test
std
stc
shr
dec
add
push
push
(bad)
mov
fwait
iret
dec
push
in
mov
mov
sub
adc
mov
sbb
cmps
mov
shr
mov
int3
movs
mov
adc
mov
pop
jbe
xor
lahf
adc
out
sub
push
xchg
inc
out
out
stc
sar
cmp
sar
push
fdivrp
mov
dec
loop
out
dec
stc
and
inc
and
mul
imul
add
jle
mov
cmp
adc
xor
retf
dec
adc
jge
pop
sbb
inc
out
cmp
pop
and
mov
mov
sbb
mov
jae
jmp
adc
xor
inc
fwait
jmp
mov
rcr
fst
lods
rcl
les
pop
out
(bad)
sub
and
les
jo
push
(bad)
retf
dec
mov
adc
pop
sub
ret
repnz
pop
and
popf
dec
mov
mov
stos
xor
gs
fist
jb
pop
cmps
test
stos
pop
outs
cwde
imul
lea
sub
cmc
jnp
pop
push
fistp
pop
out
dec
xchg
and
mov
sbb
pcmpgtd
fdiv
out
xchg
cmps
repz
fiadd
cdq
xcrypt-ctr
cmps
sbb
jo
inc
jg
jo
hlt
lock
lock
xor
test
xchg
imul
inc
fsub
adc
and
mov
push
jp
(bad)
xchg
jno
jmp
nop
pop
rcr
int3
xor
(bad)
mov
mov
(bad)
push
(bad)
mov
or
jne
mov
and
mov
lods
in
pop
cwde
rcr
aas
and
js
xor
jmp
(bad)
ficomp
xchg
call
xor
pushf
xor
add
inc
sub
xor
out
mov
shl
lds
clc
dec
mov
sbb
mov
fmul
add
push
mov
int
fdivr
dec
cmp
popa
mov
mov
out
pushf
lods
movs
inc
test
sub
cs
iret
or
jp
xchg
shl
mov
outs
adc
mov
dec
jge
fwait
pop
sbb
jne
cmp
xor
jl
xor
pop
or
mov
fdivrp
test
mov
pop
push
ror
sub
add
mov
add
or
(bad)
lods
out
push
sub
sar
bswap
dec
arpl
pop
mov
jne
outs
pusha
aas
test
repz
inc
push
xor
(bad)
jmp
cmc
mov
xchg
pop
push
es
push
scas
lock
push
out
xchg
xor
repnz
mov
idiv
js
cmp
mov
rol
test
cld
pusha
clc
jbe
mov
movs
and
in
dec
in
xchg
loopne
jg
push
ins
dec
fdiv
enter
fnstenv
imul
mov
push
fld
xor
xchg
adc
and
lea
je
sub
out
in
cwde
ss
ret
add
js
and
sbb
ror
(bad)
out
hlt
lock
call
mov
jno
imul
adc
cld
adc
jno
sbb
push
adc
pop
dec
js
dec
xchg
daa
jae
mov
addr16
lahf
xchg
ins
jo
mov
inc
push
(bad)
xor
or
mov
pop
mov
imul
mov
es
stos
cs
fstp
sub
in
xchg
mov
sti
out
stos
fstp
pop
test
add
push
pop
enter
fs
adc
cmps
jno
fldcw
jg
(bad)
xchg
pop
mov
retf
fs
xchg
imul
and
aam
xchg
aam
jbe
dec
sbb
outs
test
jne
and
iret
xchg
daa
loopne
(bad)
mov
lods
dec
pop
mov
push
shl
or
xor
jl
iret
stc
cwde
mov
mov
aam
dec
shr
dec
sub
push
pop
sub
push
aas
or
aam
ret
rol
aam
gs
(bad)
jecxz
test
out
or
xor
loop
or
mov
jmp
xchg
dec
in
pop
push
in
xchg
push
cmps
mov
xchg
add
lods
jp
lock
retf
lea
mov
cmp
out
mov
loopne
push
loopne
addr16
sbb
movs
push
cdq
lock
jnp
into
push
and
push
add
mov
push
in
sub
and
scas
cmp
das
fild
stos
xlat
std
loop
stos
mov
ins
push
nop
or
mov
repnz
(bad)
bound
loop
ds
and
xlat
jecxz
das
mov
pusha
popf
test
adc
inc
dec
shr
inc
xchg
aad
xchg
inc
mov
xchg
inc
push
cdq
xchg
inc
pop
fcmovbe
and
mov
out
fwait
sub
and
mov
fsub
jg
or
cmp
or
sub
loopne
pop
fistp
mov
je
push
push
mov
data16
in
lds
pop
xor
out
dec
pop
(bad)
pop
sub
ins
jecxz
movs
fsub
add
sti
in
sar
xor
xchg
or
and
push
retf
pavgb
stc
mov
cmps
lahf
dec
mov
dec
arpl
es
pop
mov
cmp
mov
add
fld
and
pop
push
sbb
mov
out
jns
in
shl
mov
fadd
inc
xor
movs
test
ds
mov
imul
jo
sub
inc
xchg
or
fiadd
or
movs
loop
imul
sar
aam
lods
cdq
(bad)
dec
add
dec
push
imul
in
ins
arpl
mov
mov
cld
sub
xor
adc
fcom
sahf
ins
sbb
call
xchg
pop
repz
setnp
lahf
ret
push
out
mov
mov
dec
rcl
clc
pop
inc
stos
adc
ftst
mov
mov
leave
mov
xchg
imul
sar
push
stc
cmp
sub
mov
test
push
mov
cmp
or
lock
call
mov
addr16
fst
mov
pop
and
gs
cld
clc
mov
nop
xchg
cli
jae
fwait
nop
out
icebp
ret
int
mov
mov
dec
int3
add
jmp
cli
xor
dec
and
xor
adc
add
mov
or
add
lods
cmp
cmc
loop
mov
jno
mov
outs
xor
call
and
pop
xchg
or
push
sub
add
cmp
out
sbb
mov
aaa
xor
push
xor
ins
sti
xor
dec
int
mov
imul
lds
fist
imul
push
aam
mov
sub
nop
or
adc
push
and
add
shl
loop
in
test
or
icebp
dec
test
repnz
addr16
sbb
cmc
xchg
lods
out
mov
gs
cmp
sbb
mov
and
sub
(bad)
push
mov
pop
push
and
popf
lods
loopne
nop
(bad)
and
xor
add
adc
addr16
sti
cmp
scas
jl
out
xchg
adc
mov
and
sbb
dec
cs
xor
xchg
(bad)
popa
adc
xchg
(bad)
div
or
(bad)
ins
mov
into
mov
in
idiv
jne
fidiv
cwde
pop
xchg
sub
call
pop
sbb
xor
push
dec
mov
mov
int
test
pop
mov
outs
push
sbb
(bad)
rcl
js
xchg
and
mov
add
jbe
and
adc
inc
fnstenv
aaa
pusha
aam
ficomp
cmp
inc
imul
test
in
pop
inc
bound
jae
in
xor
shl
xchg
jae
xchg
aas
xchg
mov
xchg
push
cld
push
push
jmp
xor
push
jbe
nop
mov
in
and
sbb
jle
mov
in
cmc
test
and
cmp
scas
or
mov
out
shl
cs
(bad)
sbb
jne
jp
stc
fild
push
stc
mov
jmp
push
and
mov
data16
idiv
dec
int
jge
popa
inc
test
icebp
das
in
(bad)
mov
adc
pop
mov
data16
(bad)
xchg
out
std
out
sub
push
ins
jecxz
icebp
push
jno
sub
mov
(bad)
ror
jge
add
push
fwait
xchg
jne
mov
fmul
push
push
push
das
cmps
xlat
pop
test
cmp
sub
bound
and
and
inc
ror
jns
lock
mov
or
add
into
outs
js
inc
pop
jmp
inc
sbb
adc
inc
shl
movs
out
mov
add
pop
sbb
dec
cmp
and
pop
test
sub
pusha
cmp
sahf
sub
aad
push
outs
cmp
dec
callw
repz
mov
pop
das
aad
xchg
pop
push
xor
mov
iret
add
jg
push
pop
mov
pop
adc
hlt
sahf
adc
out
fwait
sbb
pushf
sar
mov
sti
jmp
leave
ins
inc
retf
mov
add
add
sbb
pusha
mov
sub
push
repnz
icebp
jle
stos
les
jecxz
add
popa
add
aas
and
(bad)
cmp
cmps
shl
cs
adc
xchg
jno
or
cmp
xor
fidivr
retf
push
(bad)
and
dec
push
es
and
jl
pop
cmp
cs
and
pop
xor
stos
jo
out
mov
cmp
lea
add
scas
add
scas
cmps
mov
aas
movs
je
and
jno
mov
mov
cmp
and
xor
enter
mov
sub
inc
dec
out
out
inc
cmp
test
test
cmp
and
std
(bad)
push
dec
inc
shl
and
xor
cld
push
inc
pushf
mov
push
jbe
sbb
jl
add
les
outs
popa
outs
jnp
lds
xor
stc
lock
mov
and
repz
xchg
sar
push
shl
pop
retf
mov
shl
(bad)
mov
or
adc
movs
jno
stos
hlt
ror
stc
dec
mov
popf
inc
sbb
stos
or
mov
xchg
repnz
in
cmp
inc
mov
popa
out
xor
adc
dec
xchg
pop
jbe
and
imul
jmp
out
sub
mov
dec
push
popa
cmp
addr16
dec
inc
mov
fstp
pop
or
inc
sbb
sahf
sbb
adc
dec
jle
retf
sub
jl
push
and
add
jb
cmp
jle
inc
sbb
adc
inc
popa
mov
stos
pop
popa
inc
repz
cmps
xchg
out
mov
cmp
sahf
mov
mov
(bad)
int3
(bad)
sahf
and
and
imul
jo
stc
inc
shl
inc
div
test
jo
mov
cmp
cmps
dec
cs
pop
cmps
dec
sbb
arpl
(bad)
fabs
idiv
into
add
fsubr
scas
adc
imul
sub
loop
es
(bad)
jo
fstp
rcl
sbb
nop
push
mov
jmp
sar
xor
test
iret
test
push
push
loop
loopne
scas
push
enter
push
push
dec
push
inc
mov
out
aas
jle
test
(bad)
fs
out
mov
test
repnz
pop
out
les
retf
out
or
cmp
sbb
inc
add
mov
mov
fisttp
jno
call
jg
(bad)
cli
and
xchg
dec
inc
call
fs
(bad)
js
inc
push
shl
push
lock
bound
xor
out
mov
or
sar
adc
call
adc
inc
loope
dec
mov
je
mov
stc
cmp
fidivr
and
hlt
lods
(bad)
jmp
mov
outs
mov
pop
mov
fwait
inc
lock
sbb
cmp
xor
dec
and
xchg
rol
inc
imul
test
pop
js
ror
loop
retf
push
mov
popf
inc
imul
pop
ja
shl
or
std
pop
add
cmp
mov
jl
and
nop
cmp
call
cmps
nop
push
out
inc
jmp
mov
dec
cli
(bad)
mov
sub
jnp
int3
(bad)
push
icebp
das
xchg
stos
mov
bnd
ret
js
jmp
lods
jns
outs
pop
jne
loopne
ret
jns
jns
into
xor
(bad)
dec
out
mov
inc
push
aas
sbb
lods
shr
rcr
mov
fisttp
mov
or
mov
es
aaa
push
push
jno
ss
daa
dec
mov
neg
loope
or
or
sub
mov
pop
es
stos
add
mov
jecxz
mov
sub
inc
sbb
out
cmp
dec
mov
(bad)
mov
call
(bad)
in
loopne
out
mov
push
pushf
rcl
(bad)
mov
xlat
fstp
cmp
fwait
lahf
mov
fwait
test
test
xor
enter
cmps
mov
xchg
adc
leave
rcr
in
dec
xor
in
in
mov
xor
xor
out
into
ds
pop
pop
jno
mov
mov
pop
mov
(bad)
mov
sub
repz
mov
pop
sub
fisttp
xor
pop
in
cmp
pop
fdiv
fnstenv
inc
test
aam
mov
loope
pusha
jnp
adc
movs
repz
mov
sbb
rol
adc
adc
inc
jge
lods
pusha
adc
cld
scas
inc
sub
imul
in
adc
xchg
mov
test
sub
imul
jnp
fs
xchg
xchg
push
xchg
cmp
and
pop
call
movs
mov
data16
pop
xchg
add
and
stc
dec
push
inc
int3
inc
cmp
push
mov
jns
shl
jl
pop
stos
ficomp
mov
mov
sbb
dec
cwde
inc
sub
xchg
shl
cwde
loopne
jb
repz
mov
ds
inc
push
in
(bad)
repnz
lods
cmc
push
xchg
inc
icebp
popa
pop
jg
dec
mov
das
and
dec
or
xor
nop
je
(bad)
sub
xor
arpl
jl
icebp
dec
adc
inc
in
sar
lods
shl
pop
test
and
add
push
sahf
lods
and
inc
test
in
mov
loopne
add
iret
test
ins
dec
imul
push
cmp
pop
jecxz
daa
std
dec
xor
add
cwde
add
mov
sbb
mov
add
stos
or
loop
sub
popa
lods
jbe
shr
(bad)
mov
fucomip
nop
push
fwait
jg
shl
sbb
xor
push
mov
aaa
xchg
int
sbb
pusha
iret
push
xor
mov
mov
pushf
mov
xor
pop
xor
gs
sbb
inc
pop
adc
test
jecxz
sbb
pop
dec
int
jl
ja
ret
arpl
dec
call
or
fimul
sbb
mov
fisub
nop
cmp
repnz
xor
dec
outs
int
adc
stc
sahf
lea
nop
(bad)
imul
cmp
rol
ins
test
inc
cmp
xor
sub
shl
cmp
jecxz
rcl
out
mov
push
lds
or
mov
adc
and
mov
ins
fstp
cmp
push
xor
dec
jmp
out
out
inc
int
outs
neg
scas
nop
inc
leave
popa
jnp
sbb
pop
ins
jl
aaa
and
jle
movs
mov
jbe
stos
pusha
mov
mov
ret
ins
push
retf
in
inc
mov
and
out
mov
outs
call
cs
iret
jno
repnz
call
ins
fisttp
xor
cmp
fmul
jno
in
add
mov
into
movs
aam
dec
pop
push
repz
add
call
mov
(bad)
lock
lods
cwde
pop
repz
les
jne
jns
int3
mov
push
das
outs
cli
jge
pop
es
jecxz
loope
sbb
jae
stos
aad
dec
repz
xor
pop
popf
inc
neg
mov
scas
xchg
mov
aam
ret
jle
and
mov
retf
push
sub
pushf
mov
mov
imul
outs
fld
ins
imul
add
jae
or
mov
repz
aam
pop
out
aad
push
lds
mov
(bad)
ret
xchg
xor
in
(bad)
pop
ins
cmp
push
bound
jo
adc
or
(bad)
cdq
mov
xchg
mov
push
addr16
mov
push
mov
iret
fisubr
mov
mov
or
mov
inc
sub
mov
mov
(bad)
fldenv
jge
sbb
jecxz
dec
pop
loopne
fidivr
sub
call
adc
(bad)
pop
out
xchg
push
cmp
inc
mov
jmp
fistp
adc
adc
sub
sub
int
in
cmps
dec
int
mov
sbb
shl
sub
call
jecxz
and
repz
mov
lods
xchg
mov
out
and
mov
js
pop
and
push
add
jns
jmp
out
xchg
call
push
fcomp
or
jnp
fstp
cmp
movs
repz
ss
call
je
fisttp
repnz
fld
call
push
aas
ss
pop
push
popf
xor
adc
(bad)
jb
jno
outs
jmp
sbb
pop
fdivr
cmp
xchg
sbb
mov
(bad)
icebp
or
sahf
out
dec
push
daa
lods
test
and
ins
cld
add
mov
push
fist
lock
lods
les
mov
in
mov
mov
mov
add
out
sub
sub
and
push
mov
jae
add
add
sub
xor
inc
ficom
imul
sbb
xor
jmp
hlt
in
addr16
stos
push
jmp
push
ror
fidivr
int
pop
jl
cmp
mov
nop
add
and
out
dec
push
retf
(bad)
jge
fdivr
(bad)
dec
or
sbb
stos
sub
lea
repz
mov
neg
enter
jmp
lods
or
add
mov
add
clc
jns
in
mov
and
daa
xchg
inc
or
add
ds
cmps
cli
push
test
adc
push
mov
dec
push
sti
shr
adc
mov
xchg
fs
xor
dec
pop
pop
enter
push
mov
pop
fisub
mov
add
shr
mov
in
mov
and
in
push
dec
mov
popf
mov
gs
imul
sub
mov
inc
pop
sub
gs
js
ins
xor
arpl
pop
in
and
jne
inc
out
xchg
(bad)
pop
mov
imul
sbb
lods
and
aad
cld
jmp
pop
jo
fwait
jnp
outs
mov
test
movs
(bad)
es
ret
and
sbb
jmp
xchg
ror
xor
inc
mov
test
xchg
xor
out
popa
mov
out
es
sub
pop
push
ja
pop
jg
mov
ds
sbb
sar
mov
mov
test
mov
shr
jp
cdq
jmp
add
push
lods
out
jp
int
jge
or
add
int3
xor
rcl
lods
mul
sahf
gs
mov
outs
cdq
in
push
jbe
daa
push
xchg
enter
daa
imul
xchg
mov
cdq
cmp
lods
mov
xlat
add
jle
sub
call
std
test
cmc
pop
or
sbb
push
jecxz
lahf
mov
ret
push
jmp
jmp
xor
test
(bad)
gs
inc
pushf
or
clc
add
rol
adc
pop
pop
div
shr
call
gs
scas
ss
xchg
int
pushf
cli
ins
or
cmp
or
clc
dec
outs
jb
rcr
pushf
ffreep
into
dec
push
pop
jg
adc
ffree
push
mov
(bad)
push
test
cmc
(bad)
mov
mov
or
cdq
inc
fs
cmp
add
xor
dec
dec
(bad)
jmp
xchg
mov
inc
mov
aam
cmp
pushf
xchg
sbb
inc
xor
dec
push
add
and
pushf
sub
xchg
sti
mov
(bad)
push
xchg
push
cmp
or
lock
dec
add
pop
ja
cdq
and
loop
in
out
and
sub
outs
imul
jp
adc
mov
(bad)
hlt
inc
aad
iret
xor
adc
mov
cmp
or
pop
pop
push
dec
add
xor
je
cwde
popa
sbb
scas
pop
inc
adc
rcl
(bad)
aas
or
add
mov
or
enter
scas
popa
or
pop
cmps
inc
cmp
(bad)
jmp
les
data16
aad
mov
mov
clc
pop
mov
enter
outs
jmp
mov
in
(bad)
mov
jns
test
mov
push
mov
jg
pushf
xor
pop
out
addr16
jno
ror
jle
xchg
sbb
mov
mov
mov
mov
jno
sbb
cmp
mov
sub
or
and
ins
push
rol
ds
mov
and
adc
adc
pop
xlat
pushf
xchg
bound
sbb
pop
jecxz
inc
mov
(bad)
jmp
pop
jne
scas
dec
in
jne
xor
dec
sti
fimul
jo
mov
mov
xchg
jg
inc
or
scas
dec
or
retf
ss
gs
icebp
icebp
icebp
jmp
cli
sti
dec
mov
hlt
jl
jno
pop
push
movs
push
jns
fscale
stos
cmc
ret
rol
frstor
pushf
pop
sbb
(bad)
cli
sbb
jae
in
push
push
cmp
and
scas
out
js
outs
add
mov
in
(bad)
fsubr
push
fadd
mov
or
(bad)
into
mov
pop
or
test
push
or
cmps
adc
popa
jbe
push
jge
daa
mov
cmps
les
fidivr
push
sub
out
push
outs
clc
and
pop
hlt
gs
sbb
nop
sub
repnz
stc
ja
sbb
ret
addr16
test
pop
and
sbb
cmps
outs
xor
dec
lea
mov
push
jmp
sub
cmp
scas
sbb
daa
(bad)
out
and
add
push
fadd
push
pop
xor
pop
sub
adc
pop
int
push
mov
mov
scas
xor
pop
mov
loope
inc
mov
xor
xlat
in
call
movs
xor
in
mov
gs
pop
mov
and
xchg
scas
mov
int3
stc
outs
sbb
vmovups
retf
fistp
out
mov
xchg
call
fidivr
mov
jno
jmp
mov
sbb
mov
call
bts
out
mov
in
jmp
out
pop
ja
adc
inc
(bad)
leave
pop
sti
aas
sub
in
push
repnz
in
test
mov
jle
add
xor
fs
push
xor
mov
scas
sub
and
cmp
call
ins
dec
inc
cmp
inc
sahf
dec
(bad)
jl
in
outs
push
loope
rcr
mul
in
jmp
call
cmp
dec
and
dec
add
inc
add
imul
pop
pop
mov
cmps
imul
mov
or
in
dec
xchg
inc
push
dec
cs
call
das
je
xor
cmps
dec
jmp
aas
das
inc
lea
xchg
jnp
rcl
retf
ror
and
cmps
or
out
jl
arpl
push
mov
(bad)
and
repz
jo
mov
test
lahf
pop
lahf
stos
mov
mov
enter
mov
out
pop
out
mov
inc
pop
rep
push
lods
add
jmp
(bad)
(bad)
ins
adc
add
mov
popf
adc
sbb
inc
jbe
push
aaa
mov
jne
mov
loop
sub
pop
pop
or
shl
adc
data16
ins
push
sub
adc
inc
in
out
fwait
cmp
xor
cs
popf
pop
or
xchg
adc
xchg
mov
jmp
in
retf
test
xlat
mov
xor
and
imul
lods
pusha
sub
push
out
dec
xchg
mov
icebp
scas
xchg
jns
add
adc
(bad)
call
xchg
inc
and
or
or
jl
ret
pop
cmp
pop
cwde
scas
push
loope
dec
sub
sahf
mov
sbb
cmc
test
and
aam
lock
test
cmps
inc
lock
and
mov
push
lahf
push
adc
retf
adc
shl
xchg
fs
jmp
rcl
arpl
jnp
and
dec
mov
xor
sbb
pushf
gs
xchg
sti
fiadd
mov
push
dec
in
pop
lds
cmc
rol
jge
inc
stc
jo
in
pushf
ret
push
cmp
add
(bad)
cmps
adc
mov
inc
jl
jae
ss
sti
or
hlt
sbb
(bad)
retf
loope
sub
pop
and
mov
fcomp
(bad)
stos
sbb
sbb
xor
push
dec
push
leave
push
lods
push
sbb
repz
cs
push
fs
stc
mov
jmp
das
mov
add
mov
xchg
push
outs
fwait
lea
iret
movs
xor
ss
mov
stos
pop
xor
dec
test
mov
pop
or
fistp
cmp
dec
sbb
dec
jmp
aad
add
push
fdivr
ror
rol
ret
jne
sbb
fs
push
cli
and
mov
fidivr
movs
outs
mov
sub
cmp
jp
mov
xor
out
arpl
rol
mov
fwait
or
push
mov
in
dec
std
push
std
icebp
cmp
repz
add
iret
(bad)
xchg
or
inc
jb
xor
xor
pop
fs
leave
loop
push
out
xor
push
push
mov
mov
pop
and
cwde
sbb
ds
cmp
sbb
(bad)
in
pop
push
xchg
push
mov
xchg
test
fadd
mov
jle
jno
out
jo
out
fcomp
fdiv
arpl
cmps
push
fdivr
xor
mov
mov
add
lock
mov
mov
jns
xor
or
(bad)
sti
jg
sub
aad
push
sar
retf
sub
repz
xor
icebp
cdq
push
lock
cli
mov
sub
pop
add
call
adc
ins
lds
dec
das
xor
sub
ret
fnstenv
aad
ret
test
lea
arpl
cmp
icebp
add
imul
std
outs
and
xchg
sub
int3
ficom
mov
ret
jns
sar
daa
pop
aam
add
push
jmp
cmps
mov
dec
ins
out
arpl
inc
add
movs
enter
retf
dec
jbe
sub
sbb
jno
retf
dec
mov
jle
cli
or
pushf
in
dec
and
scas
addr16
xchg
and
xor
cld
jg
mov
cmps
cs
cmp
cmps
add
xchg
jge
clc
xchg
pop
jae
fidiv
or
std
popa
jno
dec
xor
push
sbb
adc
fyl2x
call
adc
fadd
ja
jge
cld
mov
add
inc
stos
mov
in
push
mov
shl
adc
movs
loop
xor
popa
jno
cmp
neg
ja
cmp
leave
lock
clc
ds
cmp
sub
jmp
mov
xor
mov
cs
out
jg
jae
jmp
jmp
retf
dec
call
xlat
shl
cmps
scas
xor
inc
pop
je
push
pop
xchg
imul
cmps
and
inc
sub
paddsw
cmc
jg
push
cmp
inc
scas
push
jno
pop
data16
add
in
pop
mov
push
out
lahf
rcl
iret
and
(bad)
adc
lods
sbb
cmp
adc
(bad)
cmp
lods
ret
ror
sti
dec
cmc
or
mov
test
mov
push
das
ins
stos
les
lock
dec
jo
test
cmp
clc
imul
popa
pusha
call
sbb
cmps
jge
les
xchg
jnp
stos
imul
push
inc
mov
xor
pop
or
aam
pop
mov
mov
mov
add
pop
add
mov
dec
dec
loopne
idiv
jnp
push
stos
jmp
(bad)
jg
xchg
jg
mov
adc
stos
add
push
ins
addr16
dec
std
leave
fnstsw
imul
retf
ins
scas
in
dec
cmps
rol
xchg
vprotd
jecxz
jne
(bad)
std
inc
(bad)
cmp
test
sbb
or
pop
xchg
pop
cli
jne
retf
fs
push
dec
fistp
xchg
xchg
cwde
jg
pop
fnstcw
retf
(bad)
sbb
sub
add
lahf
ins
bnd
scas
movd
xor
fs
mov
sbb
sub
pop
cld
fwait
sbb
push
cs
out
push
mov
pop
out
dec
xchg
xchg
inc
push
jo
cmp
setnp
ret
jmp
push
add
mov
cmp
add
hlt
adc
or
cmp
xor
pushf
cmp
jmp
add
and
inc
scas
ins
rol
dec
out
pop
imul
xor
inc
outs
cwde
cmp
movs
js
call
fucomip
mov
sbb
sbb
jl
fsubr
icebp
popf
ds
mov
ins
test
mov
lea
mov
and
cmp
inc
out
or
add
cmp
ss
push
pop
jge
aad
retf
push
and
nop
inc
cmp
mov
inc
add
mov
in
sub
and
es
dec
mov
xor
cmp
jmp
shl
movs
adc
jne
mov
xor
call
sub
je
xchg
call
adc
lea
xchg
dec
push
push
xor
push
fisttp
mov
dec
mov
rcr
push
jns
lds
or
mov
ins
sub
mov
iret
cmc
and
enter
(bad)
fsubr
push
js
stc
pop
cdq
dec
xchg
mov
add
cdq
gs
push
pop
pusha
out
mov
mov
add
in
xor
jnp
push
fldenv
loope
and
loopne
cmp
inc
inc
xchg
xor
les
movs
dec
imul
sbb
out
fidivr
test
xchg
mov
pop
xor
inc
daa
lea
outs
xchg
shl
shr
call
mov
fisttp
pop
inc
jae
in
adc
ds
int
and
clc
pop
shr
outs
sti
push
test
ds
outs
mov
dec
jle
data16
pop
addr16
(bad)
aad
pop
push
inc
seto
xchg
sti
cmp
and
out
cmp
call
cld
and
push
std
pusha
mov
enter
xchg
xor
xchg
jmp
push
sbb
es
inc
adc
outs
xchg
pop
and
dec
inc
add
mov
xchg
les
test
xchg
dec
sub
enter
mov
mov
out
lea
jmp
inc
inc
out
pop
mov
push
stc
bound
adc
ja
push
jmp
pop
sahf
js
iret
and
inc
adc
outs
dec
repz
pop
lods
out
add
xor
movs
aaa
mov
push
cld
int
xlat
pop
repz
mov
add
jno
add
sahf
ins
pop
mov
out
sbb
stos
sub
aas
gs
push
add
add
adc
jae
and
les
push
loopne
jmp
movs
movs
adc
xchg
cs
add
jg
aaa
mov
fs
or
fisub
aad
and
popa
(bad)
fmul
adc
push
sub
ret
sub
xchg
sbb
cmc
xchg
call
int3
fs
push
cmp
add
add
popf
xchg
pop
cmp
xor
push
add
cmp
mov
int
dec
push
(bad)
push
data16
ret
jl
imul
cmps
lods
ss
inc
stc
in
push
addr16
add
cld
(bad)
push
mov
and
popa
cwde
retf
fwait
(bad)
sti
pop
mov
pop
aam
or
xchg
dec
repz
cmp
inc
fild
shr
jae
retf
in
add
hlt
pop
fild
rcl
cwde
cmp
pushf
mov
ins
cmp
sbb
push
in
mov
imul
ror
cs
cld
cmp
ds
cdq
adc
jbe
loopne
mov
add
lea
lahf
sub
jb
int
inc
sub
pmaxsw
jge
push
dec
fld
dec
pop
mov
mov
int
xchg
sub
xor
fisttp
xchg
mov
jo
test
cmp
adc
pop
ret
retf
pop
repnz
adc
add
es
cmp
rcr
or
call
add
out
mov
inc
cmps
and
or
cmps
add
add
jmp
loope
adc
cmp
dec
sar
push
mov
sahf
adc
pusha
repz
gs
ret
gs
inc
push
cmp
pop
imul
xchg
jae
inc
xor
(bad)
mov
mov
and
ins
and
mov
mov
mov
(bad)
mov
dec
or
sbb
dec
in
mov
mov
pop
or
mov
sbb
sbb
mov
fist
out
enter
jle
(bad)
(bad)
jle
mov
sahf
push
in
or
into
adc
add
mov
pushf
out
fld
in
sub
stos
xor
push
xchg
ficom
dec
shl
iret
pop
cmp
xchg
adc
sub
stos
(bad)
or
fwait
leave
(bad)
fnsave
sbb
mov
stos
loope
cwde
sbb
sub
mov
cmp
dec
sub
ja
mov
or
cmp
push
mov
sar
pop
fadd
inc
xchg
pop
stos
retf
pop
aaa
sbb
pop
inc
push
inc
ja
pop
or
sbb
mov
test
shl
xor
scas
or
dec
pop
and
lds
push
out
ror
loop
outs
pop
inc
mov
cld
sub
sbb
in
xchg
xchg
inc
inc
scas
shr
xchg
jo
or
cmp
mov
dec
mov
xor
add
sub
push
neg
fmul
jns
rol
inc
fsub
cwde
pusha
ins
adc
cmps
or
push
arpl
popa
popa
in
lods
call
adc
fwait
xor
icebp
loope
retf
add
or
xor
jo
push
popf
mov
cmp
or
mov
scas
push
or
(bad)
(bad)
adc
scas
jo
iret
ret
adc
cld
scas
cmp
aam
sbb
(bad)
neg
sahf
pop
pop
jbe
test
fsubp
outs
or
sbb
loope
push
xchg
stos
mov
arpl
adc
pusha
int
mov
scas
iret
call
sub
push
call
enter
call
pop
xor
push
retf
aas
popa
pop
hlt
add
aam
and
push
adc
les
adc
ins
data16
fcomp
ins
fisub
push
dec
xchg
test
out
sbb
aaa
push
xchg
sbb
dec
lea
or
arpl
sbb
ret
(bad)
sbb
inc
int3
push
cmp
and
fchs
mov
add
icebp
cs
mov
mov
(bad)
adc
cs
out
aam
pop
xchg
fisubr
jp
and
push
adc
popf
dec
cmps
cmps
dec
mov
push
inc
clc
fstp
xchg
fimul
add
sahf
pop
clc
lods
outs
dec
sbb
cdq
adc
jno
out
lods
out
push
sub
push
(bad)
pop
ins
xor
cmp
cs
test
sub
cs
inc
xchg
push
push
rol
inc
mov
rol
rcr
movs
outs
cdq
jle
sub
sbb
inc
into
xor
jp
loopne
cmps
push
pop
bound
cmp
fisttp
call
les
aad
add
adc
dec
ret
loope
dec
mov
xor
loopne
push
push
(bad)
rcl
das
aad
cmp
mov
sub
mov
cmp
dec
test
inc
fs
repz
movs
stc
sub
out
fidiv
arpl
sub
adc
add
pop
test
lea
xchg
(bad)
(bad)
mov
jnp
sub
mov
leave
sbb
lods
scas
stos
js
push
shl
scas
inc
bswap
push
sub
test
(bad)
mov
fld
add
jg
sub
cwde
sub
adc
sub
aam
add
add
xchg
shl
sbb
jae
in
xchg
jbe
sbb
retf
stos
clc
out
into
call
or
mov
push
xor
push
push
je
cmps
bnd
je
movs
xchg
pop
outs
cmp
or
mov
sti
ds
js
call
std
outs
inc
ror
cmp
xchg
int
(bad)
repz
int
jbe
std
(bad)
out
repnz
iret
loop
push
and
cmp
cmp
fadd
out
push
jbe
add
push
and
scas
and
out
lock
push
ds
cmps
lods
push
ja
scas
push
and
push
ret
adc
loope
mov
pop
pop
sar
and
pop
cmps
nop
cmp
mov
add
pop
or
lock
xor
add
jo
and
mov
mov
mov
aad
dec
jle
rcr
mov
mov
sub
clc
dec
pminub
xor
push
sub
push
push
shr
sbb
jmp
inc
sbb
call
dec
nop
dec
inc
adc
mov
enter
(bad)
sub
sbb
popf
out
inc
add
pop
daa
in
call
jle
aas
add
(bad)
dec
cmp
gs
mov
xor
loopne
inc
adc
jae
push
push
dec
push
jmp
div
push
stc
outs
fcmovne
push
out
les
fnstsw
aaa
sahf
fdivr
add
arpl
mov
jecxz
daa
mov
(bad)
paddusw
shl
test
mov
rcr
(bad)
lds
cwde
shl
adc
and
xor
js
loop
mov
mov
sub
(bad)
pop
add
pop
movs
je
leave
in
cdq
and
xchg
mov
adc
pop
jnp
pop
pop
sbb
sbb
jae
pop
mov
repz
pop
xchg
inc
xchg
dec
inc
xor
cs
or
loop
in
and
pop
cmps
mov
movs
enter
lahf
adc
adc
push
pop
sbb
fisub
test
sar
(bad)
pop
xlat
and
push
ja
gs
imul
fwait
test
or
test
and
gs
(bad)
retf
xchg
inc
jae
loop
sbb
mov
and
inc
add
daa
lods
pop
inc
dec
sub
(bad)
leave
(bad)
mov
je
repz
(bad)
mov
stos
xchg
popf
ins
(bad)
bound
mov
or
dec
fwait
inc
lods
dec
mov
sub
ins
popa
stc
clc
xchg
inc
into
lahf
loopne
inc
je
jp
(bad)
std
add
jo
idiv
push
mov
push
stc
ins
push
push
shl
add
xchg
ins
cmp
mov
stos
rep
fimul
push
div
retf
inc
xchg
rol
push
jo
adc
icebp
pop
test
cmp
out
stc
(bad)
stos
xchg
inc
fld
and
fucomp
sbb
sar
daa
xchg
ja
cmp
sbb
mov
mov
mov
xchg
jp
adc
mov
dec
jp
inc
mov
shr
mov
dec
outs
dec
sbb
push
popa
xor
jg
sbb
nop
imul
std
push
stos
xor
in
adc
popf
ins
adc
mov
dec
int
jl
jp
lds
jbe
std
js
mov
adc
jb
or
sub
ja
outs
xchg
sub
xor
ins
add
and
dec
sbb
adc
out
dec
mov
mov
jne
inc
xchg
aam
rcl
test
mov
imul
cmp
or
test
stos
nop
push
lahf
xchg
pop
in
push
jo
jge
push
rol
mov
or
rcr
retf
lods
push
add
fsubr
fiadd
inc
test
pop
leave
pop
xchg
cmps
out
addr16
sub
jmp
repz
test
aaa
daa
fdiv
mov
xchg
int
repz
xor
shl
jae
pop
push
adc
leave
out
aam
lods
and
out
aas
or
and
push
addr16
adc
scas
xchg
cli
iret
sub
adc
xchg
mov
sahf
(bad)
push
add
pop
(bad)
jae
shr
or
mov
jb
jge
aam
jle
stos
sbb
outs
icebp
push
push
xchg
mov
sub
adc
cmc
pop
and
mov
inc
ds
jg
inc
xchg
cmp
ret
icebp
mov
push
and
cmps
inc
inc
mov
pop
outs
xor
or
inc
or
xchg
(bad)
mov
dec
add
push
and
mov
jmp
pop
adc
jnp
test
inc
jecxz
dec
cmc
and
sbb
mov
int
inc
xchg
adc
mov
cmp
fwait
adc
xchg
gs
fwait
sbb
sti
push
pop
retf
loope
fadd
mov
or
xor
addr16
cmp
cmp
add
fs
or
push
das
test
int3
jmp
test
sbb
sahf
mov
or
out
and
pop
fdivr
adc
jp
xchg
mov
push
mov
mov
push
sbb
jmp
xchg
scas
xchg
adc
sbb
xchg
ret
ja
mov
int
lea
dec
pop
pop
prefetchwt1
add
mov
jg
push
jb
fs
mov
(bad)
aad
mov
repnz
scas
retf
cmps
cmp
repz
fs
mov
push
sub
push
mov
jmp
in
repnz
dec
mov
(bad)
ss
jmp
pop
sub
xchg
jae
lods
out
xchg
movs
add
xor
mov
add
arpl
push
ret
jno
add
inc
outs
adc
cmp
xor
mov
lods
lods
inc
mov
mov
and
or
push
cmp
and
sub
cmp
ins
mov
lar
sub
icebp
push
mul
lea
or
das
xchg
addr16
imul
out
mov
movs
rol
or
mov
mov
mov
xlat
mov
inc
cmp
xchg
jb
cs
int
dec
push
jb
sbb
sub
jp
fwait
cmp
dec
out
push
in
xor
dec
push
inc
dec
mov
pop
adc
or
push
push
sub
push
jle
repnz
and
aas
mov
daa
dec
mov
scas
imul
popa
sub
pop
imul
xchg
dec
add
mov
repz
ret
mov
xchg
stos
js
and
arpl
int3
idiv
js
aam
push
ins
ret
cmp
int
out
adc
es
repz
out
popa
xchg
mov
js
(bad)
mov
push
in
mov
fadd
rol
pop
and
retf
jmp
das
push
ss
xor
sbb
mov
xchg
inc
aad
mov
push
push
sbb
mov
arpl
jge
push
pop
xchg
aas
xchg
push
aam
fnstenv
cmp
sbb
push
icebp
adc
je
xchg
mov
div
sbb
add
jno
iret
inc
jle
add
sub
fisubr
cli
rcr
jnp
sub
xor
mov
imul
lock
(bad)
movs
js
sbb
cmps
adc
or
rcr
pop
aas
mov
mov
movs
mov
(bad)
test
enter
mov
cdq
mov
sbb
sub
sub
fidivr
dec
inc
mov
fiadd
mov
sbb
inc
inc
ffreep
ins
jbe
test
(bad)
xchg
and
xchg
dec
mov
(bad)
inc
jl
loopne
sub
jbe
mov
scas
inc
retf
lock
retf
mov
retf
sbb
popf
dec
xchg
xor
ins
popa
and
pop
jp
loop
inc
sub
fidiv
mov
imul
or
or
call
pop
adc
pushf
jp
cdq
xchg
lods
mov
(bad)
and
ss
nop
mov
jno
xchg
push
dec
mov
jns
mov
add
fsub
jle
idiv
dec
mov
add
cdq
push
jp
jb
por
sbb
xor
les
mov
int
inc
cld
adc
stos
cmp
sbb
mov
out
js
movs
loop
adc
sbb
movs
xor
sub
adc
or
mov
loop
inc
pushf
sbb
out
in
mov
sbb
ss
mov
popf
es
rcl
mov
call
dec
mov
jno
jmp
fst
out
clc
cdq
lahf
je
sub
dec
loop
xchg
lds
mov
mov
gs
arpl
pop
sub
dec
repnz
adc
mov
ret
adc
hlt
xchg
scas
pop
dec
lea
sbb
sti
push
ret
inc
sahf
inc
aas
test
aad
xlat
push
sbb
jle
and
(bad)
stc
in
arpl
cld
pop
jl
add
cmp
out
mov
lds
push
leave
pop
and
jnp
out
or
aam
jb
jne
and
pop
cmps
inc
leave
pop
xchg
jne
sub
push
leave
lods
mov
fstp
iret
mov
clc
xchg
add
mov
and
push
fcomip
jle
cwde
inc
and
sbb
outs
push
ret
frstor
dec
sar
shr
mov
into
popa
sbb
inc
mov
adc
push
enter
ins
or
push
fadd
clc
push
lea
push
iret
loopne
jl
push
imul
mov
add
jle
mov
ror
jp
xchg
and
and
pop
nop
shl
stc
push
mov
cmp
xchg
repnz
push
retf
shr
jb
sub
mov
loope
push
sub
in
nop
cmps
pop
sub
mov
mov
and
sub
daa
pop
pop
lods
jecxz
lods
lods
pop
mov
xchg
rcl
lea
sub
dec
push
repz
rcr
xor
xchg
and
sub
add
and
fild
mov
or
pop
lds
vmovaps
clc
lods
or
xor
adc
jno
mov
mov
call
es
shl
or
cmovl
push
dec
ins
(bad)
call
adc
cdq
in
inc
inc
mov
sub
mov
dec
aas
and
pop
cmp
ja
push
arpl
test
and
leave
aaa
(bad)
aam
cld
test
sub
inc
sahf
scas
fstp
add
pusha
xchg
repnz
les
fdivr
mov
stos
xlat
rcl
pop
dec
cs
adc
cmp
ror
adc
jg
mov
jno
call
xchg
pop
xchg
adc
test
stos
int3
inc
ins
cmps
xor
ins
outs
inc
fwait
popa
xchg
ret
sub
mov
push
jecxz
test
xchg
sub
cld
cmps
mov
mov
xlat
add
add
jnp
sub
mov
inc
jecxz
rcr
out
jmp
add
call
jae
in
push
inc
adc
adc
fistp
xor
in
in
sub
iret
sbb
jo
pop
inc
add
repnz
jp
pop
les
xor
in
test
in
sbb
dec
(bad)
jnp
out
fwait
sbb
mov
icebp
add
cmp
stc
sub
or
rcr
lahf
mov
xlat
jae
adc
push
xchg
out
fsubr
int
push
rcl
fisubr
xchg
inc
call
adc
sbb
cmp
xor
retf
or
lahf
imul
mov
mov
inc
sbb
fcomp
js
and
mov
jb
std
aas
movs
(bad)
sub
add
out
fcmovnu
mov
push
jne
leave
popf
mov
js
fwait
and
xor
sub
out
sbb
pop
jmp
in
adc
(bad)
out
mov
mov
mov
fs
sbb
pop
jmp
fbstp
gs
mov
fidivr
add
sbb
fistp
or
add
cmp
jbe
adc
adc
ja
sbb
cmp
ins
movs
pop
pop
dec
cld
js
jbe
sti
jo
mov
or
jns
(bad)
adc
imul
test
push
xor
cmp
lahf
aas
loopne
out
cdq
or
push
loop
sbb
cmps
stos
and
jl
fild
test
cdq
add
inc
xchg
dec
xchg
or
xchg
push
stos
mov
ror
push
jne
xor
jae
test
cwde
jbe
in
fisttp
mov
push
pusha
cmps
mov
sbb
je
shl
out
jl
jbe
retf
cmp
xor
shl
mov
dec
cld
pop
test
add
pop
rcl
or
out
mov
pop
mov
add
test
mov
add
or
test
fcmovbe
ins
ja
xchg
test
mov
dec
fs
jmp
push
adc
push
add
ja
xchg
inc
fdiv
xchg
cmp
xor
cmc
into
shl
scas
sbb
or
int
push
mov
repz
out
in
int
dec
inc
ds
sbb
mov
repz
nop
mov
dec
xchg
movs
fiadd
sbb
popa
cmp
ins
inc
in
xchg
add
mov
addr16
les
adc
dec
mov
or
add
movs
arpl
popf
pop
push
mov
es
xchg
lahf
cmp
jo
call
(bad)
inc
pusha
xor
adc
jecxz
inc
mov
pop
lock
stc
cmps
dec
lahf
fiadd
jae
fst
or
sbb
adc
xchg
push
movs
mov
ror
clc
jae
pop
mov
xor
call
(bad)
mov
sahf
or
push
xor
sti
sub
movs
rsm
sub
or
jbe
mov
add
out
into
push
shr
test
or
fadd
fwait
mov
fwait
inc
into
inc
pusha
dec
cmp
popf
lock
outs
dec
xor
mov
xchg
mov
cmps
xchg
dec
jno
(bad)
leave
das
add
pop
lds
mov
fst
jns
ret
scas
retf
mov
inc
fist
in
jmp
cwde
loopne
lods
jae
das
xor
jb
or
inc
push
into
mov
xchg
movs
mov
jb
dec
adc
test
daa
adc
add
ret
ja
jmp
loope
shl
push
xor
(bad)
mov
cdq
jnp
and
out
jecxz
cmp
sub
push
imul
adc
and
ins
xor
jge
cmp
in
pop
jae
hlt
adc
cmp
cmp
aas
cmp
dec
cdq
data16
popa
retf
mov
mov
(bad)
gs
imul
scas
add
xor
test
dec
lea
inc
pop
mov
jnp
scas
fnstcw
xchg
mov
or
popa
xor
and
dec
mov
add
aaa
aas
test
imul
and
lds
add
stos
or
bound
(bad)
push
pop
int
fs
cmc
mov
bound
pop
jecxz
sbb
call
inc
push
(bad)
xchg
in
aad
retf
repz
stos
das
mov
cmp
ins
cmpxchg
int3
rcr
dec
mov
xchg
push
xor
fidiv
adc
in
sub
outs
call
fisub
push
cmps
push
dec
cmp
pop
xor
push
push
or
xchg
int3
jl
jnp
dec
xchg
xchg
push
mov
jl
fcomp
xchg
scas
jmp
ret
les
xor
sar
outs
rol
scas
add
push
sub
dec
outs
xlat
(bad)
or
lods
inc
cwde
popf
mov
or
jne
jl
pop
cdq
loop
dec
cdq
or
std
lea
adc
jmp
cs
add
dec
xor
imul
adc
jo
cmp
iret
and
mov
call
or
jle
mov
pop
sti
jge
and
pop
js
imul
(bad)
popf
push
fs
inc
mov
mov
in
popf
add
das
mov
push
add
mov
inc
pop
(bad)
dec
(bad)
ins
pushf
inc
in
smsw
jno
sar
push
retf
add
es
addr16
jecxz
cmp
je
dec
clc
test
dec
les
pop
jp
cmc
mov
in
mov
add
in
hlt
fmul
mov
pusha
hlt
test
ins
imul
or
pop
dec
mul
and
cmp
xchg
pop
mov
out
test
pop
ret
out
mov
mov
xchg
mov
mov
mov
movs
scas
mov
cs
and
pusha
dec
dec
sub
sub
add
mov
shr
idiv
cdq
fcomp
jle
stos
cmp
inc
xchg
adc
jl
mov
jns
xor
fcmovb
das
fld
push
paddsw
sub
out
mov
inc
add
pop
mov
or
mov
fld
sar
in
das
mov
movq
ret
push
das
and
sub
out
push
adc
xchg
or
xchg
adc
outs
push
call
(bad)
mov
stos
mov
push
repnz
(bad)
fistp
out
or
jno
mov
es
xor
push
push
dec
fwait
adc
sar
pop
movs
mov
or
and
and
and
inc
scas
mov
leave
mov
push
out
test
sbb
mov
pop
cmp
jno
in
xor
mov
in
outs
daa
(bad)
std
jmp
push
xchg
add
fdivr
jmp
arpl
pop
mov
pushf
in
and
mov
xchg
popa
or
xchg
inc
mov
xchg
push
sbb
pop
push
aas
push
mov
mov
icebp
xor
aam
in
fst
lea
stc
sar
and
repz
fstp
mov
mov
dec
pop
xchg
jge
icebp
ss
jmp
stos
mov
add
retf
xor
(bad)
jmp
mov
sub
sub
xchg
mov
in
xchg
rol
lods
mov
iret
shl
jb
push
jmp
pusha
in
add
pop
mov
in
mov
adc
dec
mov
xchg
pop
rol
add
jl
pushf
jns
mov
ret
push
call
fild
lahf
lock
xchg
add
jns
and
stos
push
(bad)
pop
test
cdq
jbe
jne
mov
sub
sbb
mov
in
ds
stos
call
dec
inc
fwait
xchg
in
cli
bound
xor
mov
mov
push
aaa
push
cli
xlat
dec
movs
cdq
bound
ret
jmp
lea
mov
pop
pop
lock
and
imul
xor
fdivp
add
mov
add
lods
jl
mov
lahf
jmp
inc
add
inc
cmp
aas
adc
sub
fst
add
aam
push
ds
cmps
test
(bad)
jle
mov
xor
push
fs
adc
xchg
sti
cmp
mov
mov
mov
(bad)
int3
push
fwait
(bad)
jne
mov
jmp
add
mov
jns
pusha
or
sbb
dec
pop
pop
arpl
in
aad
stos
pop
adc
cs
xlat
ja
xchg
mov
xor
aad
xor
cmp
mov
and
adc
enter
or
dec
mov
movs
loopne
jae
out
xor
sub
inc
(bad)
push
call
ins
pop
sub
push
fbld
jge
sub
mov
mov
jne
pop
push
cmp
pusha
mov
cmp
stos
aad
cmp
pop
xlat
scas
push
jb
test
(bad)
(bad)
sbb
or
and
in
sbb
les
or
(bad)
lods
xor
je
movs
loope
pop
push
mov
dec
in
xlat
xor
ins
or
in
ficomp
cmp
push
fmul
fnstcw
iret
inc
xchg
mov
mov
mov
lods
inc
xlat
mov
rol
or
call
adc
daa
and
mov
sar
xlat
mov
push
mov
out
sbb
jne
aad
mov
jmp
nop
mov
rcl
aam
ja
xchg
jg
push
mov
test
sbb
push
sub
mov
mov
inc
push
imul
bnd
push
jmp
scas
repnz
and
add
call
jo
mov
push
xor
pop
ss
or
cmp
cmp
leave
into
or
dec
sub
in
inc
push
mov
test
movs
xor
loope
(bad)
pop
in
pop
jl
test
jbe
daa
and
inc
mov
and
sub
fadd
stc
cmp
fld
mov
mov
inc
jmp
sbb
test
adc
xchg
mov
dec
fisttp
retf
push
adc
jns
add
jbe
cld
pop
fiadd
xchg
cdq
addr16
test
scas
hlt
gs
fsub
sub
and
loope
fidivr
imul
jno
sbb
and
jno
cs
push
faddp
pop
sbb
inc
pushf
retf
sbb
jl
jp
mov
movs
pop
pop
aas
jb
mov
push
ins
loope
jmp
sysret
cmp
movs
ss
sbb
iret
outs
ss
cld
or
neg
fmul
push
rol
and
xor
add
dec
in
mov
aam
adc
imul
cli
xchg
push
cdq
mov
iret
or
push
dec
mov
mov
sub
(bad)
mov
jnp
test
call
mov
add
jle
(bad)
or
add
inc
pop
and
mov
mov
sub
push
pop
adc
jne
sbb
cmps
inc
adc
outs
cmp
stos
fbld
mov
ret
add
push
xchg
add
xchg
xchg
inc
push
add
pop
add
dec
pop
loopne
idiv
daa
repz
sub
add
data16
xchg
adc
jae
sub
ins
les
jecxz
jle
or
mov
add
sbb
repnz
out
pop
jne
jmp
push
cmc
popa
push
scas
mov
loope
mov
call
mov
push
jmp
fisttp
cli
mov
(bad)
sbb
shl
cmp
cmps
pop
fcom
xchg
jle
cmp
inc
jnp
cmp
fnstsw
(bad)
cmp
shr
in
out
std
jmp
je
mov
in
cmps
stos
test
loope
out
and
dec
add
and
xor
jbe
add
shl
call
fs
push
and
inc
pop
pop
mov
mov
mov
and
lahf
(bad)
mov
and
std
jno
mov
retf
bound
jno
shl
or
mov
mov
xchg
fcomi
or
out
sub
(bad)
and
retf
leave
jno
fwait
in
adc
or
hlt
nop
retf
jnp
out
cli
fsub
imul
pop
sub
push
add
iret
cmp
cmp
mov
out
test
push
pushf
sub
jno
mov
sub
stos
pop
inc
mov
es
fld
mov
adc
daa
dec
movs
test
scas
jl
rcr
add
and
retf
cmps
inc
mov
and
mov
or
sbb
mov
enter
fisttp
repz
jno
inc
sbb
inc
inc
inc
cmp
fcmovbe
fistp
mov
inc
(bad)
(bad)
or
mov
mov
loopne
movs
xor
cmp
mov
mov
cmps
in
or
repz
in
sub
pop
outs
jne
int3
jmp
dec
mov
dec
jne
(bad)
out
dec
sub
hlt
in
arpl
mov
add
adc
push
in
imul
(bad)
ins
pop
or
xchg
mov
cmp
fwait
pop
inc
sub
cwde
jle
test
push
cli
cmps
sub
(bad)
or
dec
jmp
(bad)
mov
rcr
xchg
xor
cmp
das
cmp
or
dec
(bad)
ficom
adc
push
jge
icebp
push
in
lods
sub
and
push
xchg
and
pop
arpl
hlt
inc
dec
call
lea
call
jnp
mov
mov
sbb
sbb
or
loope
loop
mov
pop
and
pop
xchg
lock
dec
dec
cmc
cwde
and
ins
push
loope
cld
shl
scas
adc
mov
cmp
push
test
rcr
mov
lock
mov
pop
mov
jb
pop
push
sub
bt
mov
jl
in
xor
mov
es
mov
jo
sub
in
into
shl
push
test
ss
cli
xor
or
mov
mov
pop
inc
ss
cmps
fwait
cmc
pop
mov
arpl
add
cmps
mov
push
imul
and
shl
pop
mov
fisub
or
mov
call
data16
sbb
inc
adc
cs
or
add
leave
xchg
inc
es
dec
push
mov
outs
pop
icebp
mov
clc
sbb
cmc
sub
mov
cld
push
(bad)
xchg
in
iret
jne
sbb
mov
inc
sti
xchg
push
push
fsubr
or
add
jne
xor
xchg
sbb
js
dec
add
cmp
jmp
push
mov
fld
or
loopne
sub
mov
mov
or
rol
push
aaa
inc
stc
xor
cmps
xor
dec
out
fcmovnu
add
cdq
jnp
jmp
push
shl
int
nop
and
sub
int
jmp
push
call
pop
leave
daa
retf
add
jb
add
lods
call
imul
sub
adc
outs
and
dec
ins
xor
jl
xchg
in
fistp
jae
movs
int
jne
mov
fdivr
sub
jge
jmp
or
cmp
std
fucom
pop
push
sahf
and
retf
stos
jg
ret
mov
xchg
(bad)
mov
cmp
jmp
xchg
cmp
push
ins
out
mov
mov
push
lods
xor
inc
lea
inc
push
xchg
jno
mov
adc
push
jmp
in
mov
mov
inc
or
cmp
icebp
popa
jg
test
retf
push
dec
jge
inc
loopne
in
mov
sub
jae
jg
lea
inc
cmp
cld
mov
cmps
jmp
push
test
push
or
or
pop
ret
div
ins
(bad)
xor
pop
stos
(bad)
fcmovne
pop
jl
into
inc
or
pop
jp
jno
push
add
fwait
dec
iret
jno
sub
pop
or
dec
aam
pop
(bad)
push
ss
les
sti
xor
cwde
pop
cmp
dec
push
dec
pop
pop
pop
mov
scas
inc
(bad)
lock
arpl
or
mov
imul
out
sub
fbstp
repz
xchg
adc
out
fwait
jl
outs
cmp
movs
push
stos
push
sbb
add
(bad)
rcl
jbe
jp
shr
jbe
fsubr
dec
mov
and
mov
arpl
pop
inc
sti
pop
mov
cmp
sbb
cmp
pop
inc
repz
add
popa
cmp
das
sub
mov
push
pushf
ss
ret
add
(bad)
cmp
mov
mov
sub
pop
(bad)
fnstenv
mul
mov
cmps
lock
push
and
ss
cmps
sub
(bad)
stos
and
mov
cmp
add
mov
pop
das
inc
orps
stos
mov
jbe
cmp
in
popf
dec
push
shr
lahf
stc
ins
loopne
mov
ret
es
sbb
cmc
inc
mov
inc
loope
mov
jle
sbb
outs
dec
out
movs
retf
daa
popa
arpl
arpl
push
xor
(bad)
cmps
fld
mov
in
pop
ja
mov
mov
rol
sar
cmp
dec
pop
fild
(bad)
jge
jmp
fist
fbld
and
inc
push
mov
cmp
out
jmp
hlt
cwde
outs
stc
sub
in
add
lahf
add
mov
pop
mov
adc
loopne
repz
iret
rol
repz
leave
or
ret
lahf
ja
lods
adc
push
shl
clc
xchg
cmp
dec
dec
ds
inc
fwait
jecxz
aaa
mov
push
jg
cmp
adc
xor
test
inc
in
jp
mov
(bad)
je
inc
imul
aas
stos
pop
shl
leave
sahf
mov
enter
xchg
and
pop
mov
aas
inc
pop
(bad)
jns
inc
in
test
sub
stos
xchg
xchg
ja
rcl
sub
xchg
fisub
mov
or
pop
arpl
xchg
and
popf
(bad)
cmc
mov
and
pop
xor
jns
call
adc
jno
or
inc
shl
iret
and
xchg
call
inc
push
(bad)
cld
repnz
jge
xlat
test
pop
jl
jmp
xor
push
cmp
inc
xlat
add
std
pop
pop
test
or
pushf
dec
cmp
(bad)
jecxz
jg
sahf
out
outs
xchg
popf
push
dec
dec
movs
mul
rol
dec
das
mul
xchg
call
push
dec
mov
sbb
das
sbb
push
push
sti
sahf
sbb
adc
mov
pop
push
dec
ins
push
daa
mov
xor
(bad)
repz
inc
mov
mov
loopne
sbb
jae
sbb
pop
or
inc
mov
mov
test
data16
dec
jmp
pop
inc
jae
mov
cmp
ds
sbb
mov
and
movs
aam
jg
push
lahf
push
jnp
(bad)
clc
gs
push
mov
test
push
aad
stos
mov
stc
adc
cmp
out
bound
xor
fild
xchg
or
add
dec
aas
xchg
enter
pop
in
aaa
imul
loop
pop
or
sbb
mov
dec
out
mov
cmps
aas
mov
shr
nop
ja
(bad)
cmc
rcl
scas
sbb
jmp
in
je
mov
add
(bad)
push
sub
cdq
mov
jns
jle
or
xor
sub
mov
call
mov
movs
jl
lea
cmp
retf
dec
shl
les
jns
sub
sahf
sub
cli
fild
imul
pushf
cmp
adc
sub
jns
aas
sub
push
std
into
jmp
popf
cmps
pop
pop
out
lods
push
test
pop
mov
push
fucom
fs
fmul
push
outs
mov
test
ss
mov
nop
push
imul
ret
repnz
movs
pop
or
call
mov
mov
push
push
int
sub
inc
(bad)
cs
aaa
pop
cmp
aam
test
add
repnz
cmp
sar
gs
xchg
mov
inc
sub
fdivr
cmp
jmp
adc
mov
dec
int3
adc
mov
pop
jl
jo
inc
fdiv
(bad)
push
jbe
mov
loope
or
cmp
pop
and
mov
clc
add
xor
je
and
in
jmp
adc
inc
cmp
cmc
lock
popf
mov
mov
jo
out
pop
cdq
popa
mov
pop
enter
sub
pop
sub
mov
rol
in
cld
retf
sbb
in
mov
gs
add
push
jb
jo
add
jno
arpl
out
in
arpl
mov
out
pop
icebp
and
pop
or
mov
xchg
sahf
push
mov
cwde
cmps
mov
paddq
fidiv
shl
and
inc
sub
mov
adc
das
test
ins
faddp
dec
mov
pop
sub
mov
or
push
inc
out
test
sbb
popa
push
mov
sbb
dec
cld
repnz
fsubr
push
cmp
(bad)
retf
loope
out
jg
inc
and
mov
pop
scas
dec
mov
aam
cmp
xchg
xchg
scas
lahf
fsub
mov
pop
cmc
inc
gs
dec
test
test
cmp
inc
pop
call
loope
push
shr
and
inc
gs
jo
mov
mov
jae
xor
adc
sbb
retf
stos
fistp
cwde
retf
dec
mov
or
icebp
fldenv
call
mov
scas
mov
adc
in
fiadd
cmp
mov
and
mov
out
sbb
and
add
cmps
rol
mov
rol
clc
add
mov
push
(bad)
out
shl
(bad)
scas
mov
jg
shl
and
mov
adc
dec
push
bnd
popf
(bad)
cmc
inc
push
inc
aam
movs
sti
xchg
jmp
push
test
mov
sbb
jg
dec
dec
jne
scas
xchg
in
add
rcl
out
add
out
fld
mov
jbe
popf
leave
imul
pop
cmp
inc
je
push
sbb
nop
push
adc
mov
sar
add
arpl
cmc
jmp
inc
repz
and
cmp
pop
push
mov
cld
les
cmc
mov
pop
mov
inc
xchg
dec
ror
imul
mov
inc
fsub
int3
dec
cmp
sub
mov
xchg
add
retf
dec
(bad)
lods
cmp
mov
sbb
push
xchg
sbb
or
mov
enter
sti
test
sub
mov
or
mov
jbe
jmp
inc
adc
jae
pop
mov
mov
add
retf
cdq
xchg
cmp
mov
pop
cld
in
fcomi
jb
out
inc
daa
mov
ss
lods
pop
nop
ror
pusha
fimul
add
js
fadd
cmp
cwde
pop
adc
clc
xchg
xor
cmp
add
push
jnp
int
in
xchg
std
sbb
or
cmps
lahf
repz
cmp
ja
(bad)
adc
shl
mov
push
add
jo
sbb
and
push
add
cmp
jp
int3
imul
jecxz
daa
inc
(bad)
clc
ss
inc
push
jge
sar
pushf
aam
push
inc
das
cmps
test
imul
and
cli
hlt
loop
pop
rol
xor
jmp
loopne
inc
mov
fstp
xor
dec
add
push
adc
push
mov
(bad)
add
ret
jae
arpl
sub
mov
cmc
push
mov
test
iret
mov
dec
call
inc
loope
ret
mov
or
sub
cmc
popf
xchg
dec
popf
arpl
rcr
jg
es
retf
cld
aas
icebp
sub
outs
rcl
inc
out
push
call
cmp
retf
mov
cmp
mov
cmp
dec
mov
out
clc
adc
pop
mov
mov
popa
sub
imul
pop
rcl
jae
dec
or
add
mov
inc
loop
stos
call
mov
and
ror
jae
xor
in
fmul
cmps
add
mov
xor
pushf
loopne
loop
sbb
add
test
xchg
std
pop
(bad)
aaa
sub
mov
in
ficomp
popa
hlt
mov
xchg
rol
jbe
mov
aas
mov
es
ret
loopne
pop
pop
mov
shl
pop
dec
xor
imul
push
xchg
jmp
pushf
inc
(bad)
mov
push
adc
xor
(bad)
aad
cmc
sbb
fidiv
mov
sbb
and
dec
arpl
push
fimul
sbb
lods
pop
rol
dec
adc
repz
xor
retf
mov
lea
jmp
loope
ins
dec
icebp
cmp
shl
rol
pop
push
aad
ficom
scas
ret
retf
cmps
and
jecxz
or
loopne
mov
ret
mov
shl
push
jb
jmp
sub
mov
loope
repz
jo
fistp
push
xor
test
xor
arpl
test
add
repz
in
sub
jg
mov
xor
cmp
adc
outs
mov
lods
add
call
jno
jae
add
inc
movs
mov
fimul
mov
mov
pop
cmp
jb
gs
cdq
add
popf
or
push
(bad)
push
inc
fsubr
enter
into
adc
adc
sbb
(bad)
pop
fwait
push
repz
lods
dec
mov
repnz
adc
inc
hlt
and
lahf
clc
sbb
lock
retf
mov
cmc
dec
push
pop
cmps
add
or
pop
sub
push
jno
sub
mov
and
push
test
push
std
test
test
aad
not
push
cld
sti
mov
fisubr
int3
aad
pop
std
fistp
pushf
aaa
push
sub
mov
inc
jge
sub
mov
fwait
jnp
xlat
pop
test
test
data16
fwait
jg
or
scas
mov
pop
mov
icebp
iret
pop
call
aam
jg
mov
jne
pop
shr
push
movs
adc
or
(bad)
dec
and
mov
push
push
jecxz
add
dec
retf
js
movups
sti
inc
movs
lock
sbb
adc
xchg
jae
je
push
out
aam
sub
iret
cmp
dec
push
mov
mov
adc
jne
sbb
inc
cmps
xchg
push
push
test
test
fcomp
rcr
xchg
push
fstp
sub
and
cmp
mov
mov
cmp
imul
mov
cdq
stc
xor
popa
rcr
mov
out
jle
inc
inc
inc
add
and
mov
or
cwde
and
out
popa
nop
mov
cwde
outs
pop
jae
dec
jne
arpl
add
xchg
std
repz
fistp
push
mov
test
add
popf
sbb
adc
shl
pop
sbb
pusha
inc
mov
xlat
aaa
push
or
inc
and
dec
mov
ins
xor
mov
mov
shl
add
inc
(bad)
mov
ins
stos
or
push
sbb
inc
imul
cld
retf
int3
inc
imul
push
push
pop
xchg
sub
push
hlt
or
or
push
shl
cli
(bad)
jmp
(bad)
stc
xchg
ja
call
or
pop
jle
cdq
and
push
adc
retf
test
or
ins
cs
cmp
enter
std
int
sub
stc
out
and
jge
sar
lahf
adc
retf
jg
aad
inc
adc
test
test
add
jecxz
xchg
dec
test
jae
les
mul
adc
call
dec
in
nop
jno
jge
int3
xchg
mov
inc
push
lods
dec
sbb
dec
loopne
fcom
les
in
sub
mov
in
hlt
fcmovnb
push
pop
mov
sub
push
into
sbb
bound
push
pop
lahf
popa
sbb
add
ficomp
imul
ret
and
movs
and
sbb
sub
pop
push
mov
stos
(bad)
cmp
xchg
push
dec
dec
xchg
rcl
(bad)
sbb
sbb
jg
inc
xor
mov
adc
cdq
test
mov
xchg
dec
nop
inc
lea
jmp
sbb
add
scas
adc
mov
outs
xchg
arpl
or
stos
out
icebp
cmp
cmps
fcom
mov
xor
cmp
dec
push
dec
hlt
aas
adc
or
push
(bad)
dec
dec
mov
sub
or
jnp
xchg
inc
sbb
xchg
mov
lds
jb
push
(bad)
pop
cvtps2pi
out
fs
in
jg
xlat
shufps
fisub
mov
loope
movsx
rcr
push
mov
pop
mov
lea
cwde
clc
push
in
jg
fld
loopne
adc
dec
xchg
adc
int
push
xor
xchg
mov
pop
xor
ins
(bad)
dec
aas
das
bound
cdq
jns
sub
pop
xlat
cdq
xlat
sbb
mov
cmps
pop
fs
stos
mov
cmps
pop
mov
(bad)
and
sub
mov
retf
jg
cmps
outs
adc
jb
cmp
mov
cmp
push
hlt
outs
cmp
int3
dec
xchg
or
cmps
inc
sub
sbb
shr
mov
push
popf
jae
push
les
out
or
dec
xchg
or
xchg
push
mov
mov
jl
sahf
pushf
lods
mov
sti
into
add
int3
call
into
or
push
mov
ss
inc
cdq
jp
lea
scas
pop
mov
pop
loop
mov
in
and
jge
mov
fnstsw
out
and
xchg
pop
clc
ret
sbb
(bad)
sbb
sub
mov
(bad)
mov
add
mov
(bad)
out
cli
fs
rol
xchg
out
or
outs
retf
sbb
mov
pop
mov
jmp
dec
fidiv
fxch
and
imul
mov
add
inc
adc
cmp
xor
bound
mov
cmp
sub
mov
pop
add
dec
iret
mov
push
pop
adc
xor
cmp
add
mov
cdq
sub
addr16
mov
jge
adc
ja
mov
fsubr
dec
cld
icebp
adc
xchg
sub
pop
es
cmp
hlt
inc
cs
fisttp
push
add
call
ds
stos
mov
cmps
fadd
leave
push
imul
sbb
sti
pusha
stos
retf
xor
outs
jl
aam
sub
pushf
ins
int3
(bad)
lea
ins
not
in
dec
mov
(bad)
jg
gs
add
xchg
mov
in
ficom
data16
dec
test
cwde
iret
pop
js
(bad)
ds
(bad)
ins
in
fucomp
jecxz
or
test
ret
dec
jo
repnz
push
into
fldcw
js
imul
aas
push
fst
popf
mov
(bad)
push
mov
pop
cmp
loopne
push
movs
xchg
ret
mov
ins
sbb
cmp
jb
mov
cli
inc
pop
xchg
mov
rol
bound
push
es
inc
adc
loop
jnp
dec
lock
or
mov
arpl
sbb
mov
add
lods
pop
jne
mov
aam
mov
add
bswap
push
iret
(bad)
mov
ret
jne
(bad)
movs
pushf
movs
lods
push
or
retf
(bad)
mov
cmp
aaa
imul
ins
cmp
adc
in
sbb
loope
mov
adc
or
xchg
or
inc
fisub
call
pop
addr16
mov
aam
or
in
cdq
cmp
jb
lods
cli
or
rcl
mov
dec
push
push
std
popf
out
jecxz
rcl
cmp
sub
std
sub
retf
or
and
add
mov
nop
add
cmps
out
das
inc
gs
arpl
ror
movs
jb
or
and
pop
dec
sti
aaa
or
shr
fistp
adc
rcl
xlat
pop
lds
call
lds
(bad)
push
popa
(bad)
lahf
mov
push
lds
mov
aam
inc
stos
js
stos
mov
xchg
xlat
push
in
shl
cmp
(bad)
push
xor
ins
shl
xor
(bad)
movs
push
push
mov
popa
jmp
jo
and
xchg
mov
shr
xchg
sub
inc
cmp
mov
pusha
repnz
jne
cmp
sar
xor
inc
xacquire
add
adc
inc
(bad)
bound
movs
mov
add
cli
jmp
dec
(bad)
in
mov
cli
cmp
inc
jno
test
add
xor
mov
iret
in
in
lea
or
inc
sub
loope
sbb
jg
lea
(bad)
lahf
jno
pop
sub
inc
push
fisttp
cmp
and
jmp
scas
daa
push
cmp
xor
sbb
cmp
in
out
or
test
and
je
inc
adc
aad
retf
mov
xlat
adc
dec
mov
outs
cmp
(bad)
loopne
ins
mov
test
and
mov
rol
or
adc
or
jbe
out
jmp
retf
and
mov
cmp
inc
jl
(bad)
cli
shr
mov
ss
std
stc
in
cmc
cmp
mov
hlt
test
and
xchg
jno
mov
sahf
outs
push
push
add
jbe
frstor
mov
xorps
mov
xchg
inc
pop
cmp
int3
rol
in
mul
pop
mov
jno
call
jp
jb
vpmuludq
dec
stos
add
fs
lods
sbb
int
inc
retf
test
stos
inc
(bad)
bound
and
jmp
pop
ja
outs
dec
or
into
inc
inc
push
fisttp
dec
shl
jle
pop
mov
and
test
and
lahf
pusha
daa
or
cmp
xor
cmc
push
aas
aad
add
not
inc
dec
cmp
mov
push
mov
adc
mov
and
push
mov
push
and
xchg
xor
mov
push
dec
pop
cld
cmps
sbb
or
stc
mov
or
dec
in
scas
ja
and
inc
ficomp
xor
dec
mov
out
dec
call
leave
lock
lods
imul
retf
jl
and
xchg
out
push
xchg
movs
jg
mov
dec
cmp
mov
(bad)
push
lock
jle
jmp
data16
scas
sbb
inc
mov
xchg
mov
ins
sub
repz
adc
ret
call
sbb
jmp
mov
(bad)
fdiv
and
add
rol
les
mov
push
daa
in
stos
sub
push
je
sub
pop
shl
xchg
mov
test
pop
fisub
repz
(bad)
(bad)
fninit
cmp
xor
cmps
jp
mov
lds
adc
push
int
test
pop
mov
sbb
hlt
lods
(bad)
rcl
fsubr
push
xor
mov
sub
adc
and
aaa
mov
ret
jne
call
scas
xchg
or
in
aam
inc
cld
push
jl
rcl
cmc
pop
or
jb
fist
int
add
xchg
xor
retf
loopne
xchg
xchg
int
aam
ss
cli
mov
jo
in
pop
fwait
pop
fisttp
mov
xchg
pushf
jge
fwait
add
xor
icebp
dec
adc
in
loop
lds
sbb
cmp
pop
mov
pop
std
xlat
xchg
ins
push
lds
jecxz
push
imul
pop
cmp
xor
push
sbb
jle
and
out
mov
repnz
and
push
lea
and
push
mov
data16
pop
inc
(bad)
dec
pop
add
adc
sub
dec
and
sahf
fcmovnbe
pop
loopne
xchg
out
or
dec
pop
mov
push
pop
stos
sbb
pushf
sub
cmps
add
cmp
out
ins
test
push
adc
pop
fs
bnd
cdq
xor
retf
or
in
jecxz
mov
fldenv
retf
sbb
leave
arpl
pop
mov
inc
pop
pop
test
and
dec
mov
xchg
pusha
mov
or
and
test
lds
lods
jge
mov
push
popf
loope
retf
xor
cmps
xchg
fisub
add
rol
and
push
pop
fild
sub
cld
jmp
add
in
or
cmp
jb
idiv
sahf
movs
jmp
sbb
push
popf
mov
in
rol
jle
ja
fist
jns
push
movs
test
dec
add
es
jmp
dec
dec
scas
jno
jno
push
sbb
jge
xchg
sar
xor
scas
pop
jle
xor
fdiv
(bad)
cmp
sub
cmp
dec
stos
xor
mov
cmp
dec
daa
rcr
daa
popf
push
push
sub
adc
ds
test
jecxz
and
sub
lods
fsubr
cdq
fwait
sti
jp
or
or
mov
push
mov
push
xor
outs
jno
inc
fst
and
scas
xor
ja
arpl
or
xchg
xchg
cmps
outs
mov
pop
jmp
loop
and
xchg
xchg
cmp
mov
out
jnp
cmp
aad
xchg
fcomp
push
add
pop
push
or
(bad)
repz
rcl
cmp
shl
(bad)
sbb
mov
xor
mov
arpl
bound
mov
(bad)
lds
(bad)
lahf
inc
imul
pop
clc
fld
popa
arpl
pop
adc
movs
or
out
ret
jmp
and
mov
push
outs
xchg
mov
imul
push
cmp
mov
or
dec
or
rol
cmp
shl
rcl
cdq
(bad)
dec
call
mov
and
pmulhuw
cmps
mov
cmps
repz
(bad)
cli
repz
mov
imul
xor
ins
mov
nop
stos
adc
xchg
pop
jmp
pop
das
call
leave
or
dec
dec
mov
icebp
addr16
sub
mov
lock
mov
stc
aas
(bad)
out
retf
inc
mov
or
sbb
lds
shl
or
dec
mov
dec
adc
and
cli
mov
or
dec
lea
inc
(bad)
ja
jb
cmp
push
sbb
lods
sub
aas
mov
dec
loop
pop
mov
pusha
sbb
ja
or
stos
xchg
fsubr
je
adc
push
aaa
mov
ja
mov
cmc
ret
dec
jmp
mov
push
xor
or
xor
pusha
pusha
cmp
inc
in
jnp
adc
cmp
lahf
mov
shr
jne
push
add
call
jo
adc
sahf
ror
cmps
xor
mov
daa
arpl
and
in
or
pop
hlt
sub
xchg
ss
(bad)
addr16
push
or
mov
push
loop
pusha
add
sub
add
adc
inc
push
lea
cmp
pushf
lds
jnp
aad
cmps
aaa
lahf
in
adc
mov
sub
clc
or
fst
es
mov
jb
sti
mov
ficom
jo
in
out
movzx
add
dec
push
mov
mov
jle
sub
fs
pop
or
sub
(bad)
fbld
popf
push
mov
or
test
xlat
xchg
jnp
fdiv
xlat
inc
mov
inc
jno
test
inc
adc
scas
or
jno
mov
inc
and
mov
jmp
mov
test
inc
xchg
ds
jae
hlt
int
cmp
in
sub
push
sbb
stos
mov
mov
xor
call
pop
or
mov
add
repz
cmp
cmp
sub
shl
fst
mov
push
fwait
jle
adc
xchg
lea
data16
stos
xchg
aas
out
jmp
iret
mov
fistp
cli
or
dec
cmps
add
mov
adc
mov
mov
push
xor
push
les
xchg
fwait
int
adc
les
out
enter
xchg
and
test
fisubr
sbb
out
(bad)
es
into
and
dec
pusha
lods
icebp
jmp
das
jl
cmp
pop
int
jge
pop
jo
jns
mov
push
lods
ret
add
adc
ins
jo
adc
ret
mov
mov
push
fwait
retf
inc
xchg
enter
mov
lods
(bad)
jmp
retf
shl
cmp
clc
push
xchg
xchg
loop
inc
(bad)
fist
push
aad
mov
arpl
or
je
sub
mov
mov
aam
cmp
test
push
scas
cmps
test
adc
xor
pop
repnz
test
out
mov
sbb
xchg
sbb
inc
pushf
enter
push
and
rcl
sub
stc
sbb
pop
fsub
lahf
(bad)
(bad)
jmp
add
xchg
lods
sbb
sbb
xchg
cmp
mov
xlat
call
cmp
(bad)
pushf
cmps
pop
fldl2e
jmp
mov
psllq
mov
lods
not
es
adc
(bad)
sti
movs
aam
mov
daa
xchg
dec
enter
rol
(bad)
fidivr
popf
in
fdivr
sbb
push
push
lock
imul
cmp
lea
mov
mov
mov
sar
icebp
cmps
mov
xor
icebp
xor
(bad)
sub
or
mov
(bad)
test
fld
or
pop
cmp
nop
aam
xchg
xor
mov
xchg
les
xlat
jo
popf
lods
xor
retf
cs
sahf
sbb
pop
mov
push
sbb
mov
aas
pushf
loop
fsubr
pop
mov
fisub
mov
jmp
sub
cmps
push
stos
pop
jmp
ret
mov
and
add
gs
fnstenv
loope
popa
icebp
or
pop
mov
or
jp
sbb
loope
pop
int
cdq
push
lods
dec
push
aad
adc
iret
movs
dec
daa
pop
loope
std
leave
dec
hlt
xor
or
ins
pusha
cmc
sub
cdq
and
out
movs
sbb
sub
or
repz
inc
ja
dec
xchg
aam
mov
and
bound
je
inc
loope
cmp
mov
mov
lahf
popf
jb
sti
or
sub
xchg
stc
add
push
add
data16
jae
loop
je
mov
mov
mov
push
dec
jmp
xchg
pusha
or
jns
iret
lods
mov
adc
ja
sub
iret
mov
int
lock
dec
daa
mov
pusha
inc
ja
fwait
pop
jns
sahf
mov
push
mov
jne
repnz
xchg
cmp
jnp
xor
add
xchg
or
fcmovnb
jmp
(bad)
adc
int
fpatan
add
dec
push
push
test
push
push
xchg
jne
pop
jo
cld
ret
push
retf
out
inc
in
fld
imul
sub
inc
ds
fwait
ret
outs
mov
pop
xor
shr
push
xchg
mov
test
pop
jge
xor
jo
test
aad
sbb
ds
fistp
out
inc
scas
adc
jmp
hlt
jmp
dec
xchg
and
cmps
mov
sahf
cli
adc
scas
mov
add
inc
loop
fcmove
cmp
sbb
sub
push
je
daa
xchg
aad
sbb
aaa
dec
xor
frstor
ret
in
icebp
mov
repz
pop
mov
stos
je
movs
mov
test
push
pop
xadd
mov
mov
scas
xor
sub
(bad)
jne
jno
sbb
iret
neg
xchg
jecxz
data16
ins
dec
xor
jb
xor
xor
sahf
in
mov
dec
pop
fs
sti
dec
je
imul
aas
jne
ficom
outs
and
out
sub
sub
pop
call
sti
mov
in
jmp
ror
out
ror
fst
cwde
jno
xchg
retf
cmc
xchg
add
mov
mov
inc
jo
imul
neg
push
mov
push
pop
movs
pop
pop
pop
xchg
jl
sti
lock
ret
cmp
test
or
aas
xchg
ss
dec
outs
dec
jae
imul
enter
mov
leave
cmp
fiadd
mov
cdq
cmp
add
mov
pop
jno
mov
enter
xchg
out
lock
cli
dec
shl
cmp
mov
dec
addr16
jp
inc
mov
popa
mov
pop
(bad)
int
cli
cmps
pop
jae
loopne
outs
push
xchg
mov
ficom
cmp
or
xchg
outs
jl
adc
lea
add
or
movs
call
or
ret
(bad)
shl
fnsetpm(287
mov
int
scas
fist
add
pop
dec
lock
or
pop
out
shl
adc
iret
outs
fisubr
or
mov
sub
aad
and
pop
and
jp
clc
xor
xchg
xor
lods
ficomp
arpl
xor
fldenv
and
mov
clc
addr16
in
mov
inc
gs
xchg
jnp
(bad)
ds
mov
mov
out
in
call
cmps
in
cs
sub
pop
mov
in
repnz
data16
pop
jns
inc
std
retf
jl
not
iret
movs
fsub
test
in
adc
(bad)
ficom
and
stos
ja
mov
out
push
mov
ret
leave
rcr
retf
dec
xchg
ss
int3
pop
xchg
push
jb
(bad)
int
dec
cli
popa
push
jb
pop
xor
mov
push
movs
sti
sbb
sti
xor
fdivr
xchg
jnp
or
jg
es
pop
add
arpl
pop
fstp
popa
les
mov
pop
rol
test
je
sub
mov
jne
mov
in
mov
cmc
cmp
int
cli
jne
and
push
enter
jl
popf
in
ror
adc
cmp
aad
int3
ffreep
test
out
add
imul
rol
pop
jle
jmp
add
xor
pop
xor
ds
mov
nop
loop
rcl
push
jae
sahf
leave
xchg
(bad)
aad
and
nop
add
mov
sbb
aam
sahf
add
lods
inc
test
sbb
outs
jp
repnz
into
pop
out
pop
jmp
jb
lods
ror
sub
repnz
aaa
mov
jmp
inc
(bad)
inc
test
mov
not
pop
pop
in
in
mov
add
and
stc
(bad)
addr16
int3
lock
mov
jmp
jg
pop
inc
arpl
out
rcr
add
(bad)
ret
gs
aas
inc
mov
or
retf
(bad)
fdivr
xchg
xchg
dec
imul
push
rol
or
xor
add
lods
cdq
mov
jnp
movs
pop
in
jmp
sbb
or
xor
mov
xlat
mov
imul
and
cwde
test
mov
cdq
xor
leave
stos
sbb
sahf
fld
stc
and
in
ins
add
inc
int3
push
cld
mov
loope
sub
push
jmp
pusha
mov
sar
fistp
(bad)
hlt
repnz
rcl
mov
mov
aaa
adc
sub
loope
stos
xchg
popa
push
popf
pop
test
mov
nop
daa
mov
mov
push
mov
or
adc
cs
loope
sub
xor
mov
rcl
cmp
test
inc
mov
xor
imul
iret
nop
lock
aad
and
add
xlat
jno
loop
cli
mov
inc
sbb
jmp
mov
movs
cs
sub
mov
cmp
push
or
mov
jl
enter
mov
data16
cmp
(bad)
fwait
adc
test
imul
add
test
in
cwde
mov
xor
(bad)
(bad)
imul
or
(bad)
repnz
mov
arpl
jne
mov
repnz
jle
retf
rcr
sahf
jge
pop
pop
repz
inc
xchg
jmp
xlat
jnp
repz
(bad)
dec
jp
(bad)
dec
lods
cmp
or
pop
dec
mov
movs
cli
sub
mov
jge
mov
dec
pop
test
(bad)
xchg
test
push
out
jecxz
aaa
mov
adc
and
inc
or
stos
sub
fcom
adc
cmps
stos
push
retf
ffree
ja
enter
sahf
xor
xchg
and
inc
es
test
sbb
mov
pmulhw
push
pop
dec
pop
jnp
pop
(bad)
mov
push
rep
jno
dec
out
les
(bad)
or
or
sub
jmp
mov
cmp
mov
into
shl
mov
push
mov
clc
cli
dec
inc
pop
(bad)
pop
pop
add
shl
adc
out
sub
dec
dec
and
push
out
xchg
cli
cmp
(bad)
out
callw
hlt
xchg
add
out
ds
fcom
es
out
arpl
cmps
sbb
push
add
js
push
pop
outs
xchg
fidiv
sti
int
inc
dec
jo
xchg
enter
jmp
mov
sub
lahf
mov
pop
push
fstp
int
dec
mov
inc
pop
inc
shr
jg
mov
sub
cmp
xchg
(bad)
cmp
into
scas
jl
leave
je
out
jae
xchg
adc
lock
out
or
icebp
pusha
push
mov
add
push
jne
dec
mov
std
and
pusha
mov
shl
in
sub
int3
cmps
push
jmp
mov
(bad)
and
ret
jb
gs
retf
mov
fucomi
fimul
loope
adc
xchg
push
out
popf
stc
jp
adc
add
xor
cmps
pop
adc
movs
adc
sbb
in
shr
pop
jmp
repz
sbb
cmp
xor
outs
imul
call
mov
xchg
xchg
fs
retf
xchg
pop
mov
in
add
adc
mov
loop
je
jmp
jl
js
test
(bad)
dec
push
mov
add
dec
rol
jecxz
dec
xchg
push
cmp
pand
pop
out
ror
sbb
pop
inc
lods
jmp
mov
out
fcomi
push
leave
push
rol
les
adc
fild
dec
dec
xor
dec
retf
mov
dec
add
div
sbb
dec
fsub
repnz
(bad)
push
or
cmp
sub
sbb
iret
mov
leave
retf
dec
imul
fsubr
mov
push
xor
int3
enter
aaa
xor
int
sbb
dec
and
push
leave
and
xchg
ja
in
mov
pop
push
lahf
shl
inc
sbb
mov
adc
popf
arpl
pop
jmp
sub
vmovaps
pushf
push
call
add
adc
push
pushf
(bad)
mov
outs
mov
xchg
cs
xor
mov
jmp
test
jae
adc
lahf
mov
je
cmps
adc
(bad)
(bad)
dec
pop
jle
pop
pop
ret
sub
addr16
cmp
ins
fnstcw
scas
mov
add
dec
(bad)
mov
shl
mov
sbb
imul
adc
repz
adc
inc
add
cmc
test
adc
pop
jl
shl
push
xchg
in
loop
addr16
or
(bad)
push
fwait
pop
jmp
das
popa
mov
cmp
popa
adc
out
and
and
jp
movs
repz
mov
lahf
jnp
and
gs
fs
mov
fs
pop
xor
imul
push
loop
aam
ror
xchg
add
or
pop
(bad)
lock
retf
rcr
loope
jecxz
cmp
dec
xor
retf
sbb
add
shl
jae
fcomi
clc
js
in
or
and
pop
cmp
gs
mov
and
daa
retf
mov
test
imul
inc
xor
dec
fiadd
and
dec
dec
push
int3
js
cli
repz
jmp
xchg
ins
lock
sub
fnstcw
pusha
sub
popf
iret
sub
pop
and
mov
xchg
xchg
cmp
add
fist
in
aaa
loop
jmp
into
jge
mov
shr
loope
je
pop
sub
xor
mov
aas
scas
adc
and
nop
out
pop
push
or
xor
lds
add
xchg
rol
pop
adc
or
cmp
in
push
loopne
mov
ins
paddb
fldl2t
jg
mov
icebp
outs
cmp
push
mov
movs
out
fmul
xchg
mov
fs
mov
mov
dec
xchg
push
push
rcr
add
push
sub
mov
cmp
test
cmps
lahf
mov
lock
pop
rcr
mov
push
hlt
mov
in
push
and
pop
or
adc
stos
mov
ret
or
pop
out
push
lea
and
jne
nop
ds
mov
(bad)
and
push
jle
daa
push
mov
fwait
adc
and
popf
dec
inc
sbb
movs
or
rcr
ret
xor
scas
pop
lea
test
shl
xor
pop
fidivr
push
out
call
jb
jge
jp
jnp
jae
mov
and
addr16
(bad)
pop
add
push
mov
xchg
sbb
xchg
data16
daa
xor
mov
jl
push
das
pop
push
dec
push
call
js
cmp
push
mov
mov
mov
ret
popf
adc
out
jmp
cmp
pop
pushf
sub
(bad)
lea
jmp
leave
push
jecxz
nop
int3
das
into
pop
push
push
mov
sahf
jecxz
mov
adc
add
mov
movs
pushf
int3
fistp
adc
mov
int
xchg
push
ret
(bad)
ja
scas
dec
movs
les
cmp
mov
jp
jge
inc
push
(bad)
test
xchg
and
lock
dec
lock
push
je
or
sbb
ret
arpl
mov
sbb
sbb
xchg
mov
push
jnp
mov
nop
(bad)
inc
in
xor
lds
fdivr
ss
dec
(bad)
mov
cmp
jae
mov
sbb
jl
mov
or
mov
dec
in
push
sar
push
shl
sbb
dec
add
mov
cmp
add
out
xlat
mov
cwde
mov
out
sub
cwde
idiv
out
std
popf
jo
out
lods
mov
push
mov
mov
xor
xlat
(bad)
jns
mov
pop
cmps
cs
sub
and
cld
test
(bad)
jns
cmp
movs
xor
pop
or
pusha
mov
cld
cmp
leave
xchg
jl
xchg
scas
push
and
dec
or
aas
lahf
sbb
or
int
ins
sbb
cmp
mov
test
sbb
mov
test
mov
loopne
mov
ss
mov
add
inc
call
mov
inc
pop
push
es
jl
mov
test
dec
mov
fimul
jnp
mov
inc
xchg
stos
jmp
push
cmps
pop
daa
add
push
sbb
cmp
or
xchg
pushf
mov
or
(bad)
xchg
adc
jns
(bad)
rol
ret
mov
dec
mov
adc
sub
xor
pop
inc
cmps
jecxz
and
jl
dec
mov
and
aam
inc
addr16
mov
sbb
sub
dec
mov
or
xor
or
cmc
popa
retf
aaa
mov
mov
xchg
jbe
imul
add
js
dec
pop
add
xchg
shr
sub
je
cmp
scas
cmp
outs
mov
fs
outs
iret
adc
sbb
cs
jmp
test
cmps
mov
push
sbb
rcr
xchg
pop
mov
fnsave
popa
pop
(bad)
icebp
scas
push
dec
aas
ret
mov
cmps
int
xor
mov
cli
fisttp
cwde
repz
int
das
test
outs
aas
xor
jmp
(bad)
adc
jmp
into
add
sar
test
jb
adc
test
dec
mov
loopne
das
dec
fidivr
cmp
call
mov
mov
fmul
retf
push
or
or
add
fistp
inc
xchg
push
mov
push
popa
mov
inc
and
push
mov
push
dec
shl
ficomp
pushf
xchg
or
pop
pop
sub
jnp
adc
add
push
fdiv
mov
add
popa
pop
mov
sub
dec
jae
mov
neg
adc
out
pop
inc
out
pop
fdivr
push
add
mov
(bad)
(bad)
push
inc
dec
(bad)
ficomp
mov
lods
movzx
scas
dec
and
mov
scas
cmc
add
iret
in
mov
push
stos
cdq
cmp
jno
ret
adc
and
(bad)
mul
sub
adc
sub
retf
movs
xor
into
fbld
sbb
sub
ret
pusha
xor
cmp
push
jae
cmp
mov
dec
sub
test
xor
sub
mov
call
(bad)
mov
mov
mov
test
and
mov
cmp
loop
xor
adc
in
mov
inc
sub
xor
movs
mov
xlat
fild
ret
mov
ins
and
test
xchg
xchg
inc
push
mov
hlt
leavew
pop
icebp
out
jmp
std
call
push
test
loope
retf
jmp
xchg
mov
pusha
xor
inc
loope
sbb
out
pop
sbb
test
cmp
push
lea
push
add
fcom
mov
ins
ds
sahf
rcr
push
add
int
sti
xlat
sbb
or
or
push
xor
aam
sbb
xor
scas
cmp
cmp
scas
jle
dec
mov
or
jle
xor
jne
add
cmp
cmp
jnp
dec
mov
or
inc
adc
scas
jl
leave
movs
sub
sar
pop
push
jns
sub
push
push
test
sbb
push
xor
test
push
or
pop
pop
es
repz
(bad)
cwde
or
scas
jne
inc
fsubr
outs
fcmovnb
mov
cld
hlt
mov
lahf
dec
mov
xor
(bad)
in
mov
fiadd
add
push
mov
add
lods
xor
leave
fisttp
inc
lds
in
addr16
cmp
shl
jns
dec
sub
inc
mov
add
mov
popa
add
pop
es
popa
scas
dec
ds
int
adc
retf
(bad)
ins
pop
xchg
ss
sahf
popf
shl
pop
cmp
and
xchg
imul
outs
push
inc
mov
mov
jno
adc
xor
or
sbb
mov
mov
ja
push
popa
xchg
(bad)
mov
ror
stc
data16
adc
dec
cs
imul
loope
push
cwde
shl
in
rcl
pop
jo
jle
mov
dec
mov
popa
xchg
jg
inc
lods
push
xor
in
sub
cmp
ja
ja
cmps
mov
mov
enter
ficomp
(bad)
jns
retf
sub
cld
cmp
loop
stos
cmp
inc
xchg
adc
loopne
sub
(bad)
pop
hlt
aam
ds
jmp
dec
not
xor
(bad)
in
xchg
xchg
in
sub
and
fnstcw
ins
sub
arpl
gs
mov
leave
fsubr
jg
xor
adc
xor
push
jnp
xor
jl
sar
add
(bad)
dec
(bad)
push
lahf
in
add
cmp
int
push
call
out
or
lahf
and
mov
xchg
test
mov
xor
mov
ins
int3
aas
dec
mov
xor
call
fdivp
into
mov
jle
push
xchg
push
cmp
push
xor
adc
stos
cmp
ds
imul
mov
fstp
dec
sub
add
lods
mov
mov
imul
xchg
sub
cmps
push
loope
cmc
mov
sub
dec
arpl
rcl
ins
dec
dec
in
fidiv
in
mov
mov
ja
jo
inc
pop
dec
cmp
sbb
or
sub
adc
out
jb
jns
add
in
jb
out
add
sbb
rcr
mov
xor
mov
pop
pop
mov
arpl
icebp
jbe
dec
scas
mov
sub
mov
mov
jbe
lods
jnp
dec
les
mov
out
sub
push
fs
inc
add
out
int
dec
mov
sub
(bad)
xlat
pushf
pop
add
mov
mov
enter
imul
popa
je
pop
push
arpl
test
scas
push
sub
pop
inc
popa
ins
mov
xchg
mov
test
inc
outs
add
pop
mov
test
fs
movs
jbe
jne
xchg
sbb
(bad)
push
fst
and
pop
xor
iret
stos
std
mov
xchg
add
test
jmp
mov
jl
push
repnz
xor
and
push
lods
jae
sub
sub
jne
fs
mov
jae
call
test
(bad)
jl
bound
popa
push
(bad)
cld
add
adc
and
idiv
and
or
jo
or
rcr
daa
inc
(bad)
sbb
imul
xchg
repz
sar
(bad)
gs
in
lods
icebp
and
cmp
rol
dec
cmps
xlat
push
inc
(bad)
sbb
ret
adc
xchg
push
xchg
sub
fistp
loope
dec
jmp
int
xor
dec
das
mov
bound
mov
in
shr
push
out
xor
ins
std
mov
fcmovnbe
xchg
ret
mov
mov
mov
(bad)
sbb
mov
mov
aam
into
jo
xchg
or
bound
pop
(bad)
xchg
dec
in
cmps
int
fmul
pop
add
pop
icebp
ror
nop
add
bound
adc
sub
inc
loope
dec
aam
push
push
out
push
out
mov
mov
adc
or
add
pop
outs
imul
pop
mov
enter
sar
outs
push
fwait
cld
(bad)
mov
inc
aad
and
push
(bad)
ja
adc
aaa
into
xor
(bad)
mov
movs
jb
and
adc
dec
in
clc
loop
mov
fidivr
aam
xor
cmp
into
nop
test
enter
inc
out
xchg
imul
mov
inc
sub
jmp
or
in
mov
stos
rcr
add
or
pop
xchg
loopne
out
pop
add
(bad)
mov
mov
pop
leave
test
push
fcmovnbe
cld
not
ror
nop
mov
in
and
mov
push
add
sub
adc
xor
sbb
(bad)
fcomp
adc
test
xor
in
test
int
(bad)
and
or
mov
(bad)
outs
xchg
test
adc
dec
inc
mov
xor
cmp
sub
ficom
iret
inc
push
jbe
pop
mov
pop
stc
scas
in
outs
imul
icebp
icebp
mov
cmc
cmp
(bad)
imul
(bad)
mov
js
pop
out
xchg
add
(bad)
ss
js
xchg
mov
fwait
inc
iret
and
xlat
call
aaa
das
or
pop
scas
or
jle
pop
sub
add
and
frstor
int3
xchg
jb
adc
cmp
mov
pop
sbb
(bad)
das
mov
xor
sub
jo
mov
xchg
pop
scas
sbb
inc
call
icebp
jle
sbb
mov
xor
lea
or
retf
cmc
push
bound
(bad)
xchg
cmc
lds
out
fimul
push
sub
dec
inc
ret
inc
cmps
mov
fld
in
pop
or
out
pop
adc
(bad)
and
fwait
mov
js
lds
inc
jae
push
test
add
adc
dec
rol
jmp
cmp
pop
icebp
jnp
push
imul
jo
mov
push
jo
das
mov
xchg
adc
popf
stc
adc
cwde
dec
sbb
xchg
(bad)
outs
mov
dec
ficom
dec
mov
cli
cmp
(bad)
dec
cmp
mov
push
inc
lea
xor
xchg
mov
xor
jns
push
mov
out
icebp
outs
and
mov
dec
js
mov
in
inc
push
cmc
jl
mov
jmp
lock
dec
cmc
(bad)
ss
fadd
pop
std
pop
push
xchg
scas
bound
stos
das
sub
cmps
dec
cli
test
jmp
inc
ret
push
jg
leave
shl
or
iret
inc
in
dec
add
or
jns
test
jmp
mov
nop
adc
in
jne
imul
xor
cmp
add
fsub
pop
or
data16
mov
lods
mov
inc
inc
aam
mov
sub
sbb
fs
stc
je
and
add
popf
mov
mov
imul
movs
fmulp
test
mov
or
pop
int3
mov
shl
push
cdq
inc
addr16
pushf
mov
sbb
stos
lods
dec
jnp
dec
stos
sub
out
mov
popa
rcr
into
add
push
jns
pop
inc
mov
aad
and
xchg
sub
add
mov
mov
mov
mov
fisub
xchg
mov
adc
push
fdiv
mov
es
mov
jne
ds
and
ret
retf
mov
in
sbb
in
(bad)
addr16
mov
adc
pop
inc
arpl
daa
mov
(bad)
or
sbb
jecxz
lds
ret
cmps
mov
add
ins
ror
(bad)
retf
xchg
nop
mov
mov
dec
add
mov
je
jmp
push
neg
sar
es
cmps
loop
sahf
daa
imul
inc
das
pop
je
inc
cmp
jg
pop
mul
sub
xchg
push
cs
sti
sbb
outs
mov
jmp
cmp
cdq
inc
dec
pop
pushf
and
xlat
mov
ret
sbb
mov
clc
dec
xchg
call
ja
xor
stos
mov
shl
pop
xchg
in
adc
cli
push
jl
mov
mov
test
pop
shl
retf
es
cwde
cmp
out
sub
enter
mov
push
imul
in
mov
(bad)
jnp
lds
pop
in
dec
mov
dec
and
movs
push
mov
daa
xchg
mov
cmps
(bad)
out
minps
pop
ds
mov
std
in
das
das
push
adc
ret
mov
jmp
adc
shl
mov
fdiv
outs
sub
pusha
into
xor
loop
(bad)
mov
push
adc
push
jo
jae
jne
inc
cwde
movq
sbb
or
push
mov
mov
aas
loope
push
jg
outs
mov
adc
dec
clc
test
in
sub
out
adc
xchg
or
adc
in
hlt
lock
or
dec
cwde
inc
test
cli
add
add
mov
cmp
adc
push
mov
call
cmp
adc
push
retf
das
nop
loop
jmp
mov
sti
or
cdq
xchg
jp
mov
outs
imul
outs
je
dec
setg
sbb
inc
sbb
mov
ror
sbb
add
or
sahf
movs
dec
cmc
or
rol
out
arpl
popf
pop
lds
jb
movs
inc
out
pop
or
cmp
mov
jle
xor
and
call
mov
inc
ret
push
iret
push
scas
mov
sbb
in
loope
repz
jbe
adc
shl
sub
ret
stos
lahf
dec
sbb
sub
pop
cmp
(bad)
sub
jg
push
sbb
mov
imul
mov
jb
hlt
test
sahf
mov
jns
xchg
nop
cmp
mov
jg
bound
imul
or
pop
popf
lods
loopne
mul
dec
dec
mov
inc
fist
stc
lods
lods
retf
pop
retf
imul
repnz
lods
xor
xchg
adc
pop
dec
pop
inc
push
or
inc
cdq
and
in
adc
pop
ins
out
dec
test
jno
pop
jbe
imul
push
lods
aad
mov
mov
call
and
push
pop
push
push
daa
retf
xchg
out
call
in
(bad)
push
fistp
cmps
icebp
inc
sub
popf
inc
and
leave
mov
sbb
sub
enter
cmp
add
adc
popf
lock
jge
inc
mov
mov
xchg
mov
lahf
mov
test
ss
pop
sbb
pop
rcl
and
das
(bad)
sub
inc
jl
sbb
mov
xchg
dec
push
xchg
and
sbb
xchg
pop
aam
stos
sar
sbb
stos
mov
and
in
mov
jo
rol
ss
bound
aad
jae
mov
mov
mov
add
adc
cmc
ror
pavgb
mov
sbb
push
into
pushf
ret
cmp
jmp
jle
outs
add
into
ficom
lock
int
rcr
inc
outs
xor
jmp
jo
aas
adc
xchg
in
in
and
in
movs
cmp
movs
lds
or
jg
sbb
call
(bad)
xchg
iret
mov
jp
les
mov
push
or
and
add
push
stc
adc
into
out
xor
call
dec
jne
daa
je
inc
push
loopne
ftst
(bad)
(bad)
movs
outs
aaa
add
mov
mov
sbb
or
push
sbb
xor
test
ret
sub
mov
mov
mov
mov
mov
xchg
xchg
dec
and
inc
mov
mov
pushf
in
xchg
outs
fisub
int
adc
in
dec
jb
test
sub
mov
push
lds
dec
sub
or
jp
mov
cwde
pmulhw
jns
inc
fadd
pop
xor
movs
dec
int3
push
cmp
(bad)
(bad)
mov
add
mov
fstp
dec
push
pop
push
jmp
dec
xlat
movs
inc
pop
ror
dec
mov
out
out
or
loope
pusha
std
sbb
lods
adc
pop
in
div
add
mov
mov
add
outs
pop
mov
ret
lds
jno
push
nop
js
loopne
and
dec
jmp
pop
cmps
repnz
stc
test
pop
xor
add
push
in
dec
out
adc
les
mov
sbb
(bad)
loopne
int3
aam
cwde
and
cmp
inc
nop
mov
pop
xchg
adc
aam
fwait
inc
xchg
pop
adc
sbb
fst
push
pop
out
mov
xrelease
clc
pop
xchg
popa
in
and
pop
or
xchg
sbb
fsubp
out
call
scas
outs
(bad)
pop
fldlg2
mov
jne
dec
ret
aaa
and
outs
int3
shl
cli
pop
fwait
aam
arpl
scas
fld
fucomp
outs
shl
popf
sbb
pop
inc
lahf
lahf
ret
lahf
mov
daa
dec
fs
lea
push
mov
mov
out
mov
fidiv
adc
dec
jns
lods
jne
ja
jb
and
leave
cmp
out
cld
pop
ss
fild
sahf
dec
shl
out
outs
lahf
jle
loop
outs
mov
pushf
and
mov
xor
out
push
leave
xor
aas
push
push
push
xor
inc
cmc
or
sbb
sbb
xchg
shl
cmp
lahf
dec
cmp
add
int
repnz
repnz
cdq
push
jg
retf
add
test
lahf
mov
stc
repnz
je
mov
mov
xlat
popa
dec
dec
stos
mov
aam
mov
cld
inc
dec
pop
data16
ins
popa
xchg
xor
lock
pop
cmp
jns
adc
push
pop
cmps
(bad)
mov
std
ret
cmp
mov
inc
pop
sbb
pop
xor
mov
arpl
es
pop
pop
mov
out
cmp
mov
call
mov
rol
lods
gs
adc
inc
mov
ds
jecxz
mov
das
sbb
pop
mov
and
xor
cmps
addr16
sbb
sahf
loop
and
jae
aaa
dec
push
xor
sar
lds
jl
scas
imul
(bad)
stos
cmps
mov
jns
ds
mov
xor
xchg
xchg
or
stos
dec
clc
sub
and
jl
sub
xchg
hlt
out
neg
xchg
ja
xchg
lods
adc
lock
pop
xor
aas
adc
fucomp
data16
sub
mov
mul
js
mov
adc
test
imul
add
test
or
ja
rol
scas
inc
mov
sbb
xor
outs
lahf
inc
arpl
loope
mov
ins
test
call
je
aad
pop
cmp
lods
jbe
inc
mov
scas
int3
jl
push
js
sub
jo
scas
addr16
lock
inc
fcmove
jnp
jl
cmps
mul
test
sahf
and
xchg
call
lea
pop
pop
lods
in
nop
dec
adc
not
neg
or
(bad)
ret
jae
aam
out
in
sbb
jne
xchg
into
imul
lods
lock
dec
add
jnp
out
iret
sahf
(bad)
sar
inc
mov
iret
bound
fs
push
clc
retf
icebp
add
data16
jb
jns
test
xchg
adc
mov
and
test
inc
xchg
dec
jle
and
pop
shl
popa
sub
rcr
push
push
cs
mov
jg
out
sti
pop
mov
or
add
out
and
sub
mov
repz
cmp
(bad)
mov
popa
mov
mov
sbb
cmps
jne
stos
sbb
fistp
dec
movs
test
add
fdiv
or
xlat
cmp
outs
ins
ins
aam
mov
fsub
mov
shl
add
mov
mov
(bad)
pop
lock
repz
mov
mov
sahf
call
mov
retf
(bad)
jns
and
mov
rcr
and
dec
jmp
push
or
inc
adc
pusha
es
jno
sub
cmps
pusha
jecxz
aad
mov
cmp
popa
jg
js
adc
pop
inc
pushf
xchg
jge
mov
ret
cmp
loopne
clc
imul
aaa
cmp
push
push
jbe
scas
arpl
or
dec
mov
imul
mov
mov
and
call
stos
jg
mov
dec
or
push
stos
dec
int
jp
repz
pop
icebp
out
pop
out
mov
mov
pop
or
sbb
fs
pop
call
xchg
loop
dec
xchg
in
xor
cmps
pextrw
sbb
pop
cmc
dec
inc
inc
pop
xchg
or
ins
aas
outs
jecxz
inc
mov
mul
in
or
sub
or
push
push
or
jg
fdiv
ficomp
or
adc
jnp
cmp
out
dec
xchg
mov
push
xor
xchg
cli
xchg
inc
jmp
add
jmp
push
push
and
push
cmps
outs
mov
mov
xlat
ret
mov
xor
dec
sub
push
xchg
ds
mov
inc
pop
jg
mov
push
and
test
sub
rcl
les
jp
jp
cmp
dec
imul
ins
jnp
lods
in
rol
lahf
adc
rcl
xchg
mov
or
movs
lods
cmps
in
push
or
(bad)
mov
jo
aad
jge
pop
sub
fs
cmps
inc
loop
jl
gs
dec
ja
sbb
dec
add
scas
daa
mov
xchg
mov
add
in
and
mov
add
adc
cmps
dec
pop
fcomip
pop
ins
aad
test
pop
sti
cmp
test
lods
push
mov
pushf
(bad)
cld
aad
sub
fmul
(bad)
retf
cmp
(bad)
mov
test
jmp
pushf
ficom
sbb
and
mov
add
add
cmp
cmp
xor
push
fs
mov
sub
add
(bad)
xor
xchg
or
cmps
push
loopne
push
iret
jne
push
out
push
lock
aas
ss
ficomp
mov
ret
icebp
ret
(bad)
imul
jae
inc
mov
mov
xchg
ins
push
icebp
mov
dec
rcr
xchg
or
add
cmp
dec
and
mov
or
inc
ins
fucomip
inc
sbb
in
xchg
add
inc
push
nop
hlt
adc
pop
inc
xor
jmp
shl
mov
dec
push
clc
repz
mov
cli
inc
(bad)
mov
xlat
ficomp
movs
sub
imul
xchg
pop
push
fsub
or
jae
jmp
pushf
ss
pop
lock
mov
ficom
dec
clc
xchg
mov
mov
sbb
jmp
or
imul
mov
iret
clc
jmp
adc
sub
popf
cdq
inc
or
cmps
xor
clc
jecxz
mov
mov
dec
add
cmps
jo
xchg
mov
shr
sar
repnz
fs
cmp
push
cli
add
fsub
loop
push
sbb
inc
jno
inc
mov
mov
clc
loope
icebp
les
addr16
daa
js
inc
das
ror
mov
push
rol
add
mov
outs
nop
xor
sar
in
xchg
call
pusha
mov
test
push
jns
dec
dec
lea
sub
cs
les
call
dec
popa
retf
in
sti
in
add
push
xor
test
add
xchg
xchg
jo
push
xor
dec
xor
and
cmp
xor
inc
add
inc
aad
mov
dec
sar
sbb
pop
enter
movs
js
dec
shr
mov
dec
adc
cmp
xor
pop
jmp
div
sub
ret
loope
add
cwde
cmp
ss
mov
push
and
xchg
jae
stos
sbb
std
retf
sbb
sbb
jo
shr
xor
test
cmp
jecxz
xchg
sub
ss
or
pop
and
pop
imul
sub
cwde
pop
cld
arpl
ds
xchg
shl
nop
ror
je
(bad)
and
mov
mov
rol
(bad)
(bad)
dec
test
mov
jp
(bad)
loop
jecxz
inc
popf
jo
dec
or
cmps
pop
adc
icebp
cmp
sub
xor
lahf
mov
test
aaa
pushf
addr16
jne
jb
mov
cs
dec
mov
call
xor
sbb
in
stos
popf
xchg
cmp
adc
ds
mov
repz
test
jl
mov
jbe
fidiv
sub
ficomp
cli
add
gs
std
stos
sub
clc
cli
call
pop
stos
ret
addr16
jl
jmp
pop
add
fisttp
push
sub
xchg
dec
int
outs
add
inc
mov
sti
hlt
and
in
adc
pop
test
out
cmp
dec
sub
mov
cmp
add
inc
jp
leave
dec
dec
div
or
and
imul
cmp
adc
les
jno
ja
dec
sar
(bad)
leave
lods
sub
idiv
pop
jg
xchg
pop
or
push
dec
sbb
sbb
leave
mov
test
fdivrp
out
pop
mov
add
loopne
and
gs
sar
call
add
das
popf
mov
sub
sbb
dec
jbe
movs
es
xchg
bound
ins
sub
fimul
mov
rcl
pop
fcmovnu
adc
dec
jl
sbb
xchg
out
pop
sbb
xor
cmc
repz
and
pop
push
xor
je
xchg
mov
push
jb
dec
xchg
sub
fnstenv
maxps
lahf
cdq
mov
daa
scas
sbb
dec
js
push
nop
and
xchg
fmul
sub
adc
test
mov
jns
shl
cmps
inc
inc
cmp
scas
xchg
sub
push
xchg
idiv
sbb
sub
mov
cmp
push
mov
cli
popf
addr16
pop
cs
rol
sahf
dec
pop
cmps
call
in
ss
fidivr
leave
out
test
or
aas
test
or
movs
mov
test
fild
fwait
sub
adc
(bad)
retf
in
rcl
inc
jecxz
mov
add
(bad)
sbb
jae
retf
test
xchg
(bad)
adc
or
inc
sbb
mov
in
cli
cs
and
jb
xor
pop
sbb
mov
jb
pop
cwde
arpl
jb
xchg
fnsave
and
fistp
stc
pop
mov
je
jno
(bad)
xor
add
test
icebp
jge
dec
jne
xchg
adc
jg
test
push
jnp
and
adc
mov
popf
mov
sub
fs
retf
out
imul
sub
fs
test
sar
and
mov
xchg
mov
xor
cmp
inc
sub
mov
stos
sahf
sub
adc
sbb
ins
cs
pushf
mov
mov
cmp
xchg
sahf
loope
push
mov
jg
push
fdivrp
sbb
mov
add
mov
lahf
dec
pop
imul
push
cld
push
pop
mov
lods
cmp
pop
push
mov
jbe
nop
in
sub
test
dec
clc
jns
pop
sbb
jl
ror
repnz
scas
push
inc
aas
push
test
xor
es
jmp
hlt
addr16
jg
jmp
loop
jp
frstor
push
add
data16
push
jge
adc
xchg
pop
pop
das
test
data16
jae
(bad)
xchg
and
jnp
imul
pushf
add
cdq
ficom
icebp
(bad)
call
xor
ds
retf
outs
out
loop
adc
iret
sub
mov
stc
sbb
inc
call
pop
pop
cmps
mov
inc
cmp
or
mov
xor
cld
lea
pop
sbb
loop
mov
dec
and
out
and
inc
pop
test
scas
cdq
(bad)
jmp
mov
xor
in
adc
pop
pop
xchg
inc
int3
test
jb
jo
gs
int
or
mov
iret
daa
mov
arpl
or
mov
fadd
fs
and
mov
and
jmp
lods
mov
retf
das
fmul
sbb
dec
aas
cld
addr16
pop
pop
xchg
mov
mov
inc
xchg
in
stc
pusha
ins
sbb
fsubr
push
pop
outs
sub
fld
mov
add
sbb
adc
mov
sub
leave
push
(bad)
xlat
ret
mov
fistp
mov
shr
mov
aas
sub
sub
mov
push
imul
pop
icebp
push
nop
repnz
clc
mov
jbe
push
inc
rcl
mov
cmp
mov
add
repnz
xor
cdq
(bad)
pop
adc
inc
js
jecxz
adc
test
lea
pop
xchg
lds
jp
inc
aaa
ins
call
dec
lds
ret
loope
dec
data16
imul
sti
nop
cmp
sbb
add
iret
mov
fst
adc
mov
iret
(bad)
std
(bad)
iret
sbb
mov
pop
and
jns
outs
push
xchg
outs
add
xchg
scas
addr16
mov
repnz
outs
out
dec
lds
fnsave
retf
aam
(bad)
(bad)
stos
cmp
mov
pop
or
addr16
cdq
sub
jge
pushf
sbb
adc
hlt
out
ins
pop
dec
ret
dec
gs
jg
adc
pop
pop
pop
clc
imul
push
jp
inc
push
cmp
popf
sub
dec
enter
fwait
retf
in
cmp
xor
scas
cs
jns
mov
mov
hlt
push
nop
stos
cmp
cmps
mov
in
mov
syscall
sbb
or
push
and
inc
and
add
mov
test
dec
(bad)
neg
xchg
sub
mov
xchg
push
add
test
ror
or
aas
jns
imul
pusha
cli
in
test
push
out
lods
pusha
in
in
xchg
inc
push
repnz
es
mov
push
mul
cmp
outs
int
or
cmc
je
lds
push
push
mov
push
mov
adc
mov
mov
push
out
or
addr16
inc
add
hlt
sub
mov
jb
jno
push
dec
sbb
pushf
aaa
(bad)
jp
pop
inc
fist
shl
cmps
cld
jbe
and
or
sub
test
es
dec
dec
sahf
inc
int
or
fnstsw
std
imul
addr16
dec
jnp
int3
ins
cwde
dec
and
pop
adc
bnd
and
mov
dec
out
sbb
push
jmp
pop
dec
and
cmps
idiv
les
aad
pop
out
ins
ret
push
test
jne
xchg
or
sub
test
call
mov
add
shl
ja
sti
jb
pushf
sti
and
(bad)
mov
jnp
dec
and
cmps
outs
outs
and
push
cmp
hlt
add
retf
sub
inc
call
mov
adc
cs
xor
cmps
pop
clc
inc
or
out
es
mov
dec
fwait
xor
fidivr
lods
sbb
jnp
fs
gs
dec
or
mov
sub
repz
ins
sub
mov
out
adc
sub
rol
or
inc
or
ins
nop
imul
cmp
pop
lahf
or
lods
xor
movs
mov
ins
loopne
mov
daa
jecxz
dec
push
jno
fidiv
por
mov
sub
dec
sub
cdq
lea
add
mov
sahf
sub
jbe
inc
ficomp
dec
inc
neg
fst
cmps
popf
outs
cmps
rcr
xor
mov
dec
sbb
scas
sbb
rcr
mov
cld
outs
repz
inc
(bad)
and
scas
xchg
adc
stos
repz
jo
push
imul
mov
push
clc
lea
rol
fwait
cmc
jl
and
or
div
cmps
add
lods
cs
ins
mov
push
cmp
and
movs
fcom
shl
jmp
pop
jmp
or
loop
sbb
push
imul
mov
hlt
sub
inc
or
push
call
dec
mov
jecxz
inc
imul
cmp
inc
dec
hlt
sti
ret
(bad)
sahf
popa
mov
or
cmp
pop
pop
out
aaa
(bad)
mov
call
sar
mov
mov
pusha
cwde
mov
jge
mov
jp
ret
xchg
jl
sub
call
hlt
xlat
pop
adc
xor
fcmovu
repz
mov
popf
mov
adc
xor
cs
mov
push
scas
cmp
sbb
imul
mov
jmp
arpl
adc
mov
scas
mov
push
xchg
and
loop
hlt
sti
sub
(bad)
sub
cmp
daa
aam
push
jecxz
xor
enter
pop
(bad)
hlt
in
and
into
sub
adc
test
je
jbe
pop
in
sbb
test
cwde
ins
test
stos
sbb
pop
pop
fmul
ret
(bad)
sub
bound
je
neg
shr
push
jbe
xchg
sbb
outs
cmp
jb
cli
ret
cmp
dec
mov
sti
mov
mov
and
out
pusha
stos
call
mov
cs
add
mov
add
hlt
out
sub
push
(bad)
jo
inc
mov
enter
pusha
in
clc
mov
adc
loopne
repz
mov
movs
sub
push
cmp
xchg
sahf
out
sahf
das
mov
jne
in
shl
pop
ins
jnp
push
xlat
icebp
lock
(bad)
inc
mov
cmp
adc
and
fs
xchg
fidiv
outs
adc
enter
sbb
outs
or
cwde
push
cmp
int3
adc
and
xor
mov
mov
dec
mov
cmp
xor
mov
call
xor
push
mov
ret
dec
in
daa
xor
sbb
mov
push
sub
pop
adc
loop
inc
out
dec
pop
adc
fstp
mov
sub
and
push
jns
pop
jnp
outs
dec
retf
dec
and
gs
cld
adc
sbb
and
int3
jle
pop
shl
sub
mov
sbb
cmps
add
icebp
pop
aam
jbe
call
leave
adc
stc
sub
pushf
call
xchg
sbb
or
(bad)
lods
stos
xchg
mov
or
push
fnstenv
movs
inc
dec
dec
test
mov
mov
call
clc
add
cmp
jg
lods
dec
mov
movs
lock
repz
fwait
call
cmp
les
jno
test
lahf
lods
dec
fdivr
into
sbb
(bad)
gs
add
push
fistp
pop
push
jae
and
xor
inc
xlat
fimul
xchg
(bad)
lods
mov
cmp
shr
mov
pop
xchg
xor
pop
inc
xchg
test
aaa
xor
aaa
div
or
sub
pushf
scas
stos
lahf
pusha
loop
je
outs
inc
cmp
sub
sbb
cli
sub
cld
cwde
lods
pop
push
(bad)
lea
xor
movs
cmp
dec
in
inc
repnz
xchg
push
mov
and
idiv
jb
adc
xchg
pop
adc
jge
mov
pop
sti
in
mov
sub
retf
es
scas
mov
imul
add
ja
sbb
fiadd
cmp
not
es
and
popf
push
adc
push
jmp
pop
sahf
pushf
hlt
dec
add
sbb
jge
pop
scas
mov
popa
inc
fbstp
push
jb
pushf
jmp
mov
dec
(bad)
cmp
fwait
xchg
mov
or
cmp
cs
adc
and
mov
dec
xor
jnp
push
push
(bad)
or
stc
int3
jno
out
mov
and
adc
cmps
mov
or
ss
les
mov
repz
(bad)
sbb
jp
jl
add
pop
mov
fsub
mov
mov
xor
cdq
loopne
int
fst
repnz
inc
inc
xchg
jbe
ds
lahf
arpl
and
addr16
dec
xor
(bad)
push
stc
das
call
jecxz
adc
jg
test
fisttp
xor
sub
cmovp
jne
sub
xor
out
cmp
cld
out
fdiv
ret
mov
in
add
push
pop
jb
lea
leave
mov
jg
loopne
out
pushf
mov
xor
add
ss
gs
icebp
aaa
inc
sbb
or
dec
xchg
push
jno
mov
pushf
push
sub
fmul
mov
addr16
je
xchg
imul
out
inc
shr
jne
push
ins
push
cwde
popa
loopne
loop
pop
ins
pop
cli
out
mov
mov
xchg
jnp
push
pop
or
jl
and
cmp
cmp
fcom
fwait
jno
rcl
mov
sub
gs
call
xchg
xchg
int
rcr
jae
cmp
(bad)
xor
call
xlat
retf
cmp
test
mul
lds
sbb
pop
jmp
jecxz
cli
stos
or
xor
push
inc
adc
inc
push
add
mov
adc
mov
mov
comiss
lea
shl
fbstp
jnp
ins
mov
lock
mov
lock
dec
xchg
mov
inc
push
mov
xchg
imul
mov
sahf
loopne
movaps
inc
stc
cmp
dec
dec
jne
mov
xor
call
and
and
lahf
mov
out
jno
outs
(bad)
test
(bad)
shr
cmp
pop
push
lahf
ja
push
mov
cld
mov
addr16
jle
inc
out
out
push
paddsb
or
and
int3
push
jae
lahf
lock
sbb
jmp
sbb
leave
xor
(bad)
pop
out
test
jmp
sahf
inc
out
mov
cmc
lahf
scas
inc
outs
cdq
cmp
and
cmps
xlat
add
push
sub
leave
test
out
leave
push
pop
mov
push
cs
mov
jno
arpl
lahf
and
out
rcr
pop
or
jle
ins
fld
movs
iret
jecxz
retf
pop
sub
push
loop
mov
or
(bad)
push
add
mov
arpl
in
sti
(bad)
cmp
xchg
bnd
mov
pushf
push
jmp
xor
and
cmc
push
cmc
lds
int
nop
enter
mov
adc
add
dec
jle
scas
jbe
xchg
int
ss
shr
fdivp
invd
movs
mov
pusha
jne
jmp
dec
sbb
(bad)
push
lds
addr16
mov
inc
mul
hlt
pushf
fist
aaa
out
leave
inc
inc
fld
ins
dec
pusha
inc
cmp
add
stos
push
cli
(bad)
into
lahf
mov
pop
(bad)
mov
mov
movs
cmc
loopne
inc
aad
xchg
(bad)
fsub
cmc
test
loopne
xlat
int3
jb
push
inc
das
in
jne
retf
cwde
dec
inc
or
dec
and
add
test
test
int
cmps
cld
clc
xchg
xchg
mov
sahf
push
out
outs
test
push
rcl
mov
fld
loopne
imul
ror
out
push
test
clc
loop
fs
cmps
xor
gs
dec
pop
(bad)
shl
inc
push
test
ret
cmps
add
jp
mov
mov
cmps
or
outs
fs
fidiv
(bad)
mov
rcl
mov
mov
mov
adc
push
movs
push
and
(bad)
aad
mov
cdq
out
loopne
sub
hlt
stos
pop
mov
pop
sbb
adc
sti
and
adc
sbb
test
jg
fst
jbe
cmp
dec
or
sub
enter
xchg
rol
mov
fisttp
stos
xchg
out
dec
cs
mov
pop
xchg
sahf
loope
hlt
aaa
mov
lods
(bad)
(bad)
push
add
cmp
adc
iret
or
cmps
cmp
leave
xor
mov
xchg
inc
xor
hlt
sub
rcl
push
(bad)
cmc
and
fs
pop
cmps
mov
or
xchg
mov
in
sub
cwde
jbe
movs
ins
mov
leave
mov
ds
rcl
xchg
shr
xor
mov
dec
mov
jbe
retf
lock
cld
xchg
sub
and
xchg
xchg
imul
fild
fsubr
(bad)
(bad)
mov
out
adc
mov
scas
mov
add
pop
add
sub
das
inc
je
rcr
retf
cmps
xchg
dec
pop
int
in
clc
xchg
lods
into
xchg
sub
movs
pop
add
xchg
mov
daa
icebp
pop
out
mov
push
fidiv
jo
lods
push
les
lea
leave
pop
call
fsubr
es
dec
pop
sti
inc
ficom
mov
rcl
dec
xor
push
pop
imul
neg
or
jp
xchg
mov
push
mov
test
fisubr
inc
push
adc
das
outs
std
(bad)
sbb
mov
mov
retf
xchg
in
push
xor
sbb
adc
pop
lds
jge
mov
sub
and
mov
pop
aam
xchg
jp
jg
nop
dec
jo
test
sbb
(bad)
or
or
dec
xchg
push
add
mov
stos
fcom
jne
shr
pop
jg
test
test
(bad)
cmp
sub
imul
popa
stc
adc
sbb
push
pop
daa
jo
and
popa
ret
inc
test
aam
xchg
ja
cmp
in
(bad)
fdiv
stos
(bad)
imul
xchg
jge
pop
jl
mov
jnp
mov
xchg
pop
add
(bad)
pminsw
sub
jmp
xor
push
jno
stos
jb
add
fisub
adc
dec
movs
or
inc
sub
neg
mov
es
dec
jae
adc
push
or
or
xchg
sahf
sub
mov
sbb
(bad)
mov
push
xchg
in
xor
movs
sub
rcl
dec
(bad)
push
sub
ret
add
mov
sbb
xchg
push
adc
scas
sub
xor
cmp
fwait
ja
rcl
or
and
xchg
addr16
jmp
jne
outs
pop
xchg
sahf
test
int3
test
xlat
jae
aam
add
sub
pusha
xchg
icebp
xor
add
xchg
xor
inc
hlt
push
leave
mov
and
sub
and
packssdw
push
popa
les
push
jbe
inc
pop
or
jno
arpl
adc
and
test
aam
cmps
neg
idiv
imul
iret
push
pop
fs
push
jmp
je
(bad)
and
mov
inc
and
adc
call
mov
hlt
dec
or
scas
data16
popf
aas
and
xchg
and
pop
add
and
into
es
sar
jno
nop
add
sbb
adc
pop
mov
pop
jg
fwait
add
dec
inc
xchg
inc
adc
stos
add
pop
aam
sub
inc
enter
cmp
in
std
aas
enter
fucomp
std
and
push
push
cmps
pusha
push
sahf
cld
xor
shl
or
sar
(bad)
fdivrp
adc
or
adc
xor
int3
ret
mov
xchg
aam
lahf
or
or
inc
pushf
xchg
(bad)
js
mov
cmp
cmc
xchg
jle
inc
rep
inc
xor
in
movs
adc
(bad)
adc
in
cmp
jbe
inc
mov
out
pop
and
cmp
jb
js
sub
pop
into
fs
fwait
push
adc
mov
(bad)
dec
cmp
inc
es
or
push
xor
push
sbb
inc
mov
jae
mov
aas
idiv
sbb
sbb
adc
inc
mov
cmps
mul
outs
xchg
inc
xlat
mov
das
(bad)
cmp
cmp
pop
test
sbb
cmp
out
jmp
sbb
adc
stc
mov
test
cmp
cmps
pop
ss
add
ins
out
and
sub
lds
repz
push
jnp
xlat
clc
ror
frstor
xchg
cmps
das
adc
cmp
mov
pop
sbb
pop
mov
(bad)
sti
or
adc
or
jnp
ds
mov
addr16
mov
ror
jb
or
data16
mov
or
retf
cdq
ret
xor
fist
ss
rcr
retf
cmp
mov
aad
aad
pop
in
cld
(bad)
jmp
lea
adc
and
xchg
jnp
je
cld
outs
xor
mov
xchg
pop
fsub
mov
std
fstp
shr
inc
jl
gs
push
sar
or
inc
retf
push
out
sub
inc
in
out
or
jne
mov
mov
mov
es
cmp
retf
lea
push
mov
push
in
shl
push
in
jmp
sub
push
aas
mov
iret
mov
icebp
jp
popa
sbb
mov
cmp
push
xor
nop
std
cmp
pop
out
jb
xor
rcr
inc
and
cmp
in
out
push
xchg
cmp
popf
cmp
xor
int
sti
cmp
adc
lahf
addr16
sub
cmp
je
out
cmp
clc
inc
mov
out
fild
dec
jb
rcr
arpl
imul
outs
bound
fsub
inc
stc
add
jae
fisubr
jns
lods
sti
lock
(bad)
inc
sub
cmp
sar
xor
(bad)
mov
inc
xor
jl
sub
mov
out
mov
and
mov
add
dec
call
repnz
mov
xchg
lds
mov
sahf
xchg
and
out
mov
push
mov
popf
(bad)
(bad)
arpl
sub
jmp
bound
aaa
ds
inc
out
jle
xchg
or
sub
add
cld
sbb
push
inc
inc
pop
mov
jle
xchg
inc
jae
movs
outs
mov
shl
mov
adc
xchg
or
add
lods
imul
clc
add
xor
lods
and
cwde
mov
xchg
ror
in
mov
adc
retf
(bad)
test
mov
mov
repz
mov
ins
dec
cmovo
push
pop
dec
popf
mov
fimul
mov
aaa
jmp
ror
hlt
xor
retf
jo
jp
mov
adc
adc
loope
js
cmp
mov
dec
adc
jmp
xchg
fcmovnu
adc
popf
fcomp
(bad)
mov
test
jle
inc
and
cmc
xchg
sub
(bad)
fadd
adc
xchg
mov
mov
sbb
ins
arpl
shl
xlat
ret
les
pop
into
xchg
loopne
mov
stos
retf
test
js
out
das
pushf
outs
push
dec
lahf
xchg
mov
ds
ins
add
scas
cmp
adc
js
push
pop
pop
mov
fst
daa
push
sub
add
or
xor
lea
frstor
inc
lods
hlt
adc
imul
mov
jmp
mov
enter
loope
lods
out
shl
ss
mov
sbb
mov
add
ret
xor
sbb
sub
xchg
gs
(bad)
stc
enter
pop
movs
rol
fist
dec
cdq
pop
cld
lahf
nop
sbb
mov
stos
push
or
retf
sub
mov
jns
xchg
movs
movs
sti
mov
mov
and
sbb
addr16
ja
jne
jbe
push
loop
lahf
hlt
clc
jge
ja
out
ins
loopne
adc
lods
inc
fcom
popa
inc
sbb
sbb
jb
mov
ds
test
lahf
push
std
shl
bound
pop
fcomp
add
mov
std
test
cs
dec
aaa
rcr
jbe
sub
inc
in
jbe
cmp
mov
xor
(bad)
lock
add
test
ss
push
cmps
ficomp
push
jecxz
and
dec
dec
jns
dec
mov
sub
repz
leave
push
sbb
inc
adc
test
xor
mov
gs
mov
jmp
mov
ret
mov
mov
ins
idiv
idiv
leave
jmp
jo
mov
fcom
mov
loopne
inc
movs
add
loop
jmp
aas
inc
mov
push
dec
mov
scas
loopne
imul
jo
pushf
push
in
aam
mov
mov
leave
push
lods
data16
cmp
cmp
inc
and
mov
ficomp
adc
push
test
push
and
or
shl
xchg
mov
xchg
pop
xor
lock
pop
cmp
lock
mov
and
or
dec
repnz
mov
shl
stc
jne
fisub
push
and
sar
(bad)
push
lahf
push
mov
pop
or
in
xchg
add
and
test
(bad)
cmp
and
or
outs
mov
jl
test
mov
jmp
pop
inc
arpl
mov
push
dec
test
adc
jmp
jo
movs
xor
out
repz
mov
cmp
les
dec
add
jns
mov
in
repnz
fist
std
push
lea
push
in
ret
push
sbb
push
dec
dec
lock
inc
dec
cmp
test
lds
push
mov
fisttp
js
out
fsubr
test
mov
test
(bad)
arpl
in
and
das
add
es
pop
dec
add
pop
dec
push
ins
scas
push
enter
push
jns
repnz
mov
scas
repz
add
xor
imul
dec
out
xor
xchg
out
ss
adc
mov
test
sbb
pop
lods
add
(bad)
xor
pop
stc
dec
cld
jl
push
sahf
add
(bad)
mov
stos
mov
pop
mov
cld
data16
das
(bad)
test
or
dec
add
stc
add
inc
shr
mov
pop
jnp
rol
(bad)
sub
lods
mov
pop
xchg
jbe
add
aam
sti
sbb
push
shr
mov
aam
or
pushf
(bad)
xor
mov
int3
das
cmp
push
in
mov
fnstcw
cmp
mov
psrlw
push
mov
mov
in
sbb
cmc
mov
or
cmc
mov
clc
jp
lock
ror
call
movs
jno
int3
xor
add
fst
mov
inc
(bad)
lock
shl
out
sbb
dec
int
int3
lods
movs
sar
imul
xor
jnp
or
leave
mov
jne
inc
xchg
jle
pop
or
add
int3
ja
sbb
into
cdq
lahf
(bad)
xchg
mov
repz
xchg
sub
and
outs
pushw
(bad)
call
adc
sub
jge
mov
je
(bad)
int
cmp
jl
call
retf
inc
sti
adc
xchg
mov
pop
jl
pop
lods
cmp
sar
adc
sbb
in
loope
leave
jne
xor
call
data16
dec
orps
add
bound
adc
pushf
xor
adc
jl
mov
mov
stos
sbb
mov
mov
pop
sti
sbb
(bad)
push
mov
dec
out
mov
jge
push
push
sbb
mov
daa
sub
cmp
cwde
or
dec
or
dec
aad
mov
jle
ret
sub
dec
int3
push
ja
mov
push
inc
nop
adc
sahf
div
adc
xchg
movs
jl
dec
jp
fdivr
mov
xor
ss
repnz
ins
daa
cmc
std
call
cs
xor
inc
iret
xchg
leave
and
ds
(bad)
(bad)
cmc
push
fisttp
cmp
aas
stc
cdq
or
clc
pop
imul
sbb
pusha
std
cmc
adc
pop
pop
pop
jb
(bad)
jge
bound
jmp
cmps
inc
in
mov
jle
push
clc
out
or
in
bound
out
ss
repnz
jmp
(bad)
stos
jnp
cmp
jns
sub
jmp
in
cmp
jo
add
scas
and
int3
mov
xor
mov
push
lods
mov
jecxz
push
dec
rcl
ja
mov
jnp
(bad)
sbb
fmul
not
mov
cmps
inc
in
int
and
inc
es
cs
test
movs
fistp
push
and
sub
mov
cmps
and
mov
push
adc
out
mov
aas
cmp
add
sub
mov
mov
(bad)
ds
inc
cmc
and
out
stos
push
in
push
or
imul
fwait
cli
adc
je
(bad)
bnd
sbb
sahf
imul
popa
data16
adc
cmp
mov
or
loope
outs
mov
adc
mov
jecxz
in
pop
fdiv
mov
dec
int3
ret
mov
lods
inc
cli
adc
mov
xor
ins
nop
retf
sub
cmp
les
push
cli
ret
mov
in
xor
scas
push
inc
das
lods
into
pushf
stos
fisubr
mov
(bad)
cdq
(bad)
sub
test
out
mov
arpl
shl
shr
cld
and
sub
xchg
iret
(bad)
shl
dec
test
mov
arpl
in
dec
sbb
movs
dec
shl
cmp
mov
jmp
adc
dec
jae
imul
jae
jae
dec
scas
in
pop
(bad)
jbe
push
int
xor
jo
sahf
cmp
xchg
adc
dec
xor
jg
mov
xchg
lds
mov
mov
cmp
sbb
sub
stos
mov
test
ficomp
fs
leave
adc
fsubr
cmp
fs
test
iret
and
call
jl
push
ret
xor
jae
sbb
aaa
cld
mov
call
ins
jb
cmc
inc
stos
xchg
pop
cmp
fs
adc
xchg
jno
out
dec
jbe
retf
jb
(bad)
cmp
push
cld
shr
por
lds
cmps
ror
imul
xor
push
shl
sahf
cmp
shr
pop
sti
imul
jns
push
dec
dec
cmp
cmc
mov
mov
xchg
pop
mov
shl
mov
mov
mov
sub
int3
xlat
mov
push
push
cmp
inc
and
xchg
loopne
imul
movs
jmp
jae
adc
cld
cmp
jg
fisub
xchg
push
mov
jl
(bad)
(bad)
fwait
loope
inc
sub
clc
jp
sub
inc
and
dec
pushf
mov
jl
inc
imul
fst
or
pop
inc
and
mov
scas
inc
cmp
push
pop
xlat
pop
aaa
ret
push
sbb
cs
aas
mov
or
xor
test
xor
scas
gs
xor
fs
inc
popf
push
es
xchg
ret
mov
rcr
fbstp
movs
lds
test
aad
cwde
repz
not
mov
sub
enter
clc
(bad)
and
stos
pop
nop
and
sbb
cmps
add
pop
inc
icebp
fistp
repnz
pop
adc
in
push
not
sub
xor
call
xchg
mov
pop
add
dec
lds
inc
mov
add
sbb
push
push
or
stc
fwait
sbb
enter
scas
dec
repz
enter
and
leave
les
push
cmp
and
jb
mov
or
or
js
js
adc
or
adc
pusha
jp
fistp
xchg
push
cmps
jns
jg
add
ja
test
imul
retf
adc
mov
stos
retf
cmps
pop
aam
push
(bad)
(bad)
jmp
or
fdiv
and
imul
ins
xor
out
ins
fild
push
xor
cmp
dec
(bad)
call
int
jne
xor
push
jnp
and
mov
sub
aad
cmc
jbe
push
adc
aas
lods
inc
sub
stc
adc
jmp
sub
jg
xchg
pop
mov
inc
dec
pop
mov
in
call
icebp
ret
mov
fldz
imul
stos
cmovae
inc
or
pop
or
mov
mov
test
jb
mov
je
or
add
inc
add
popa
in
test
hlt
aam
stc
cmp
mov
and
fucomip
mov
bound
jle
xor
js
arpl
jle
xor
inc
shl
pop
loope
cmps
mov
jmp
jno
push
jg
ret
retf
bnd
sub
and
mov
mov
dec
cmps
push
inc
pop
jbe
add
adc
dec
or
sahf
xor
and
in
mov
fbstp
ins
ret
popa
cmp
arpl
dec
hlt
mov
mov
icebp
add
scas
psrlw
mov
into
sub
neg
mov
dec
inc
jp
addr16
inc
pop
add
lds
inc
mov
je
or
inc
das
test
inc
cmp
inc
call
test
ret
ret
xor
adc
jne
push
jo
mov
rol
add
in
inc
(bad)
gs
mov
or
loope
xor
(bad)
mov
movs
lea
push
mov
push
jb
jmp
pop
mov
inc
mov
mov
es
add
pop
pusha
aam
mov
pop
jne
dec
or
bound
rcl
jecxz
pop
xchg
sbb
or
pop
jg
dec
xor
xchg
adc
jno
xchg
lods
cli
xchg
je
(bad)
xor
iret
jno
ds
xor
fisubr
xchg
mov
call
inc
mov
cmp
sbb
cmps
push
or
mov
mov
mov
test
mov
pop
sbb
movs
nop
lea
in
test
pop
jp
cmovae
arpl
pop
cmp
int
cmps
adc
pop
push
inc
rcr
sub
cwde
push
in
adc
push
shl
aas
push
shl
pop
pop
add
cmp
adc
das
pop
dec
fwait
xchg
fstp
sbb
sahf
dec
sti
or
dec
out
jecxz
pop
jecxz
cli
push
fdiv
ret
leave
xchg
into
dec
ss
jge
stos
xchg
push
jbe
cmps
into
fdivr
and
lock
cmp
ror
fsub
sub
jl
mov
inc
xor
inc
push
ficom
jmp
add
mov
xor
mov
lock
mov
jne
imul
movs
fmul
aaa
sub
adc
cmp
mov
cmp
sub
mov
pusha
stos
pop
mov
mov
mul
shl
dec
fcom
sbb
out
mov
pushf
jmp
or
xchg
out
test
adc
inc
repnz
dec
xor
push
fucomp
cli
inc
lods
and
mov
add
inc
in
out
in
sub
cs
sub
pop
test
movs
sub
pop
ret
(bad)
scas
call
push
cmp
mov
push
data16
fsub
sub
es
mov
xlat
mov
jae
imul
test
sbb
pop
mov
inc
pop
aas
nop
dec
lods
pop
ja
or
test
sbb
mov
mov
lss
jbe
pusha
div
in
mov
enter
outs
test
enter
lds
outs
jmp
(bad)
mov
or
and
add
mov
add
lods
leave
lods
jmp
pop
dec
mov
or
(bad)
jg
jne
adc
inc
fstp
xor
outs
ja
push
ins
jns
ins
addr16
daa
pop
mov
xor
jmp
les
popf
cmp
dec
loop
push
adc
mov
sar
jno
adc
mov
scas
cmps
mov
fcmovnu
jecxz
cmp
movs
sbb
xchg
xchg
in
ja
mov
adc
and
push
add
cs
ins
add
in
scas
aas
cmp
mov
or
stos
mov
stos
mov
popf
inc
jbe
cmp
xchg
into
or
test
xor
xor
sub
rcl
test
adc
stos
stc
cmp
pop
mov
push
ins
mov
in
sahf
xlat
cmp
adc
loopne
mov
jecxz
mov
add
out
pop
mov
jb
pop
ficom
pop
fcomi
jne
cmps
cli
test
and
cmp
xchg
enter
jle
retf
cmp
ds
sar
pop
add
jne
xchg
into
aas
les
jo
imul
sbb
and
adc
mov
stc
out
inc
scas
shl
es
mov
mov
mov
push
sub
ins
ins
inc
call
xchg
retf
shl
jnp
leave
loopne
sub
movs
push
mov
mov
retf
mov
test
scas
xor
lods
mov
popa
dec
push
jbe
je
lahf
sbb
push
icebp
jp
(bad)
push
loopne
add
xchg
mov
cmp
and
std
mov
(bad)
loope
xlat
jnp
scas
aaa
lods
fild
popf
cmps
(bad)
scas
int3
push
icebp
push
ins
movs
dec
and
cmp
not
aaa
fxch
ins
lods
ret
ja
add
lea
dec
fld
movs
movs
dec
int
add
es
nop
dec
sar
cld
inc
push
(bad)
imul
adc
scas
dec
sub
dec
repnz
(bad)
jbe
or
div
test
outs
into
mov
or
shl
add
ret
js
(bad)
or
dec
(bad)
repnz
cli
test
mov
rcl
sbb
adc
cmps
push
outs
xchg
pop
inc
push
xchg
mov
test
xor
sbb
(bad)
push
(bad)
mov
xchg
mov
add
arpl
or
retf
or
dec
call
aad
test
cld
fcomp
div
ds
cmp
test
in
jmp
and
pop
xor
lea
test
dec
movs
jnp
cmp
cmps
call
push
push
mov
sub
jg
mov
int
sbb
and
jmp
and
gs
jns
ja
call
dec
inc
jp
inc
std
xor
jg
mov
xor
bound
jmp
mov
mov
dec
mov
ffree
xchg
mov
and
cmps
adc
sbb
clc
dec
ss
jno
outs
mov
dec
push
jnp
add
lods
in
push
or
out
add
rcl
fiadd
push
dec
hlt
cmc
popa
aas
je
dec
and
inc
jae
outs
dec
pop
sbb
inc
in
adc
ror
je
add
lods
ror
sub
lds
add
fistp
popf
daa
mov
dec
dec
in
push
mov
and
or
xchg
je
jnp
cli
lea
movs
inc
pop
lods
and
clc
mov
push
adc
mov
mov
in
shl
inc
pop
jp
addr16
mov
outs
das
pop
es
ret
and
sub
add
pop
add
test
out
xchg
stos
repz
mov
cld
ja
sub
repz
dec
fistp
outs
jae
sub
das
xchg
mov
mov
pop
out
jns
out
jl
fisubr
inc
rcr
dec
std
repz
cmp
es
pop
xor
(bad)
movs
imul
loopne
arpl
and
pop
in
or
test
lods
mov
test
or
push
bnd
jns
dec
cmp
ret
jnp
shl
dec
xor
sbb
aam
or
pop
sbb
and
add
dec
push
out
scas
xchg
pop
jns
dec
fcomp
popa
push
ds
push
mov
cld
and
jns
jns
movs
fistp
pop
dec
pusha
sub
jns
pop
movs
fdivr
in
pop
fst
dec
push
dec
call
xchg
leave
mov
clc
out
dec
push
enter
xor
xchg
popa
sub
loopne
ins
add
dec
fimul
popf
mov
push
lea
das
(bad)
mov
xor
retf
push
cmp
sti
dec
inc
enter
fnstcw
add
xchg
rdmsr
fisttp
and
enter
dec
xor
into
out
lods
add
cmc
call
push
dec
adc
add
sbb
sub
pop
pop
mov
and
movs
mov
js
jno
pop
jle
inc
pushf
inc
lds
ret
or
adc
jp
push
out
mov
cdq
cmp
sub
popa
daa
xor
sub
ficomp
retf
iret
les
and
iret
push
xchg
fiadd
(bad)
push
dec
ret
sahf
push
rol
push
(bad)
add
xor
add
xlat
add
rcl
icebp
mov
lahf
and
dec
or
stos
cmps
sbb
push
mov
jecxz
icebp
hlt
push
mov
xor
stc
ret
add
fidiv
sub
stos
sbb
test
mov
sbb
push
sahf
fisttp
fcmovnu
or
aad
pop
or
cdq
push
or
mov
mov
push
pusha
sub
xor
iret
push
movs
pop
call
outs
js
mov
dec
sahf
inc
adc
pop
repz
mov
call
pop
mov
push
push
and
sbb
pop
addr16
shr
aaa
ror
aad
inc
inc
iret
jp
stos
pop
mov
sub
lods
ins
mov
and
pop
or
add
cld
push
int
test
pusha
aas
rol
and
mov
lods
mov
inc
cmc
clc
int
jg
dec
push
outs
stc
sub
or
cmps
repnz
mov
fs
inc
xchg
test
sub
leave
mov
fadd
jns
das
out
mov
jno
dec
mov
pop
cmp
and
pop
out
ins
shl
jge
in
pop
hlt
cmp
inc
pop
adc
jmp
call
cmp
lods
pop
(bad)
imul
leave
enter
push
mov
cmc
ret
mov
add
pushf
scas
pop
gs
je
pusha
(bad)
push
es
inc
xchg
xchg
out
(bad)
pop
fcom
push
int3
and
cs
loop
repnz
xor
cmp
jp
dec
cmp
lods
in
sahf
jg
addr16
xor
adc
push
xchg
leave
jle
xor
jb
addr16
jb
push
mov
jmp
jbe
sar
inc
or
xor
jl
test
arpl
lahf
repz
movs
shr
adc
jns
dec
push
mov
mov
test
or
aad
addr16
loope
lods
pop
sub
retf
mov
sub
lods
out
test
in
xchg
ja
pop
jbe
push
shl
pop
pop
dec
xor
inc
rcl
sbb
xchg
jae
xchg
push
loopne
jg
pop
scas
fistp
mov
ret
xchg
inc
leave
push
or
mov
loop
push
adc
jno
leave
fwait
inc
and
add
mov
(bad)
movs
aam
scas
test
fnstcw
mov
nop
dec
xor
mov
outs
xchg
out
sbb
into
xor
add
cli
aas
popa
sub
out
pop
hlt
xor
mov
dec
cmps
cdq
cmp
xor
enter
data16
pop
frstor
bound
cmp
neg
scas
dec
cmp
pop
pusha
and
inc
fnstsw
add
out
inc
mov
push
mov
add
movs
mov
inc
pop
pop
xchg
jbe
jo
pop
sub
xchg
cmp
cmps
cli
pop
aaa
push
data16
mov
inc
sub
mov
scas
(bad)
mov
adc
jg
cld
bnd
jl
movs
inc
xor
or
ror
aam
and
aas
xlat
pop
call
mov
push
in
pusha
xchg
xor
mov
out
shl
retf
adc
jmp
add
movs
rol
pop
mov
mov
xor
dec
aam
cmp
fucom
cdq
dec
int3
call
add
cs
daa
aam
nop
clc
arpl
idiv
mov
jl
or
stos
cmp
and
(bad)
(bad)
pop
fisttp
loope
in
(bad)
add
mov
sub
aaa
push
adc
sbb
cmp
dec
jbe
loope
jmp
mov
loope
out
or
add
and
or
push
sub
pop
mov
or
loope
and
and
cmp
data16
and
rol
ror
sbb
mov
ss
inc
push
or
sub
mov
dec
ins
in
mov
loopne
mov
mov
cmp
sbb
jns
or
js
jmp
sub
test
mov
pop
mov
cmp
sbb
push
ins
mov
inc
inc
daa
(bad)
jmp
iret
push
and
fwait
mov
mov
les
sub
cmps
sub
inc
sar
push
aam
js
pop
shld
sub
mov
mov
loopne
xchg
sbb
hlt
call
jecxz
ins
jmp
jne
pop
js
popf
jg
mov
mov
call
dec
lds
inc
or
movs
ficomp
fwait
mov
out
mov
push
sub
ss
mov
popf
push
ret
dec
and
mov
sub
adc
lock
or
mov
dec
dec
retf
mov
rol
test
jnp
adc
sub
std
xchg
popa
addr16
div
(bad)
jmp
cdq
data16
add
jge
xchg
rol
cld
aam
sbb
cli
bound
jecxz
imul
sti
push
mov
jg
sbb
gs
xchg
xlat
dec
bound
inc
mov
mov
(bad)
jp
mov
pop
sub
fcomp
stc
sahf
arpl
mov
xchg
pushf
stos
cmp
push
add
(bad)
sub
jne
xlat
xchg
sub
add
inc
enter
sbb
push
dec
mov
jo
add
mov
push
jg
jmp
scas
sbb
push
sub
js
mov
in
out
push
retf
lock
jae
arpl
cmp
cmp
outs
movs
enter
fs
pop
jl
retf
add
mov
pop
sar
mov
aas
xchg
inc
or
jle
xchg
lea
mov
sbb
shl
inc
xlat
mov
pop
aad
cmc
mov
adc
xchg
mov
pop
sub
inc
fs
xor
push
mov
ins
in
xchg
jae
lea
xchg
movs
jns
jmp
mov
dec
xchg
sub
xor
mov
sub
(bad)
lahf
lods
sub
add
mov
call
adc
xchg
arpl
mov
xchg
idiv
sbb
sub
or
scas
pop
pushf
out
sbb
retf
add
xchg
mov
dec
test
jmp
dec
lds
int3
pop
int
leave
inc
mul
ret
jno
clc
cwde
xchg
imul
jg
out
jbe
out
xor
pop
call
pop
or
stos
pop
int
test
pop
cdq
push
mov
dec
xchg
in
inc
sub
cmp
stc
cmp
sti
mov
cmp
jg
addr16
jae
shr
cmps
lods
pop
mov
add
push
imul
pinsrw
icebp
cmps
or
fsubr
jl
mov
inc
push
dec
fidiv
inc
pop
jmp
stos
push
sbb
cmp
lods
mov
ins
push
cld
scas
inc
mov
pop
fsubp
icebp
rol
and
dec
sub
pmaxsw
sbb
rcl
push
jl
xor
outs
xchg
fisttp
jg
or
jne
and
cmp
adc
cmp
lods
sub
cmp
inc
mov
jge
dec
add
pop
xchg
cmc
push
dec
and
repz
xchg
in
inc
cmp
lods
leave
aad
fnstsw
aas
sbb
fadd
mov
fisttp
ja
mov
pop
add
fisubr
out
push
sti
dec
aaa
mov
xchg
mov
or
add
and
jge
jae
add
cmp
add
loopne
or
pusha
scas
fld
inc
sbb
sub
icebp
stc
and
bound
sbb
pop
div
push
xchg
cmp
pop
popf
popa
repnz
mov
dec
mov
xchg
in
xor
cli
mov
push
loopne
fld
lds
outs
sahf
push
cli
sbb
adc
jmp
pusha
pushf
pop
dec
sub
gs
or
arpl
adc
push
ins
mov
xchg
sbb
test
mov
jns
adc
stos
rcl
imul
mov
lds
call
inc
mov
int3
shl
mov
aam
in
sbb
jmp
cmp
rcr
aad
inc
das
add
sub
imul
cmps
out
test
jmp
in
repnz
pop
in
dec
call
inc
in
das
dec
inc
fst
nop
je
mov
xor
mov
jae
shl
mov
or
jmp
mov
(bad)
or
jo
cmp
popf
enter
mov
sub
inc
lods
sahf
xor
repnz
call
dec
jo
cmp
out
pop
mov
jge
aad
adc
lea
inc
push
sub
mov
mov
jno
das
sub
loope
and
mov
xacquire
cmp
les
mov
jb
rcr
popa
sub
lock
in
cmp
mov
aas
shr
xchg
and
pop
std
mov
add
jecxz
sub
cmp
xchg
icebp
jbe
fwait
cmp
(bad)
xchg
pop
mov
fwait
aam
and
jbe
pop
push
sti
and
fld
sub
xchg
jne
leave
gs
jae
xor
pop
icebp
cmps
fcom
jmp
cmps
mov
jmp
es
es
cmp
adc
jge
into
mov
xor
mov
sub
cdq
pop
or
lahf
ret
jmp
(bad)
iret
call
xchg
retf
push
push
inc
and
cmps
xchg
out
leave
or
je
mov
mov
icebp
movs
mov
test
pop
mov
inc
xchg
enter
shr
inc
pop
xor
aad
and
inc
pushf
(bad)
push
dec
mov
inc
repz
das
inc
and
mov
hlt
pop
push
cmc
mov
mov
repz
jecxz
pop
mov
sbb
mov
push
cwde
outs
mov
mov
icebp
cmp
mov
pop
pop
pop
hlt
or
inc
dec
ss
cmp
cmp
(bad)
in
and
jne
lahf
push
imul
inc
mov
xor
mov
cmp
cmp
gs
popa
scas
jle
push
in
scas
cwde
mov
(bad)
xor
or
lahf
push
popf
mov
test
jge
xchg
sahf
cmps
push
jl
aad
jmp
pop
add
jle
les
call
std
jle
sub
mov
iret
mov
lods
mov
cmc
aad
xchg
xchg
imul
cmp
(bad)
out
xor
mov
in
adc
sub
enter
xor
out
push
add
daa
jg
jmp
sub
mov
out
dec
pop
mov
pop
sbb
jg
fwait
xchg
cmps
inc
mov
dec
ins
xchg
xor
imul
stc
mov
jno
inc
add
jmp
arpl
lods
into
retf
sbb
rcr
sbb
pop
add
ins
inc
loop
ret
jle
ja
xchg
pop
gs
or
xor
cs
jg
mov
lods
jmp
push
stc
jg
jns
popf
mov
pop
sti
mov
lock
fmul
cdq
sbb
push
xchg
fcmovne
jo
xchg
mov
xchg
sti
mov
mov
add
dec
mov
sbb
sub
daa
or
dec
xlat
cs
icebp
cmps
push
xchg
adc
aam
cdq
and
xchg
data16
pop
repnz
and
das
inc
mov
push
sbb
adc
jns
sahf
ficom
inc
dec
mov
ret
inc
jns
stos
cmps
pop
das
jmp
out
pusha
aaa
stos
jbe
aas
dec
push
retf
add
pop
stos
stc
iret
stos
or
dec
(bad)
inc
pop
rol
hlt
mov
push
jge
sbb
and
add
xchg
in
movs
lahf
and
fld
lahf
out
fwait
ds
rcr
dec
jns
mov
or
mov
loop
jl
dec
adc
outs
mov
ins
leave
mov
mov
cmc
and
sub
push
jge
inc
gs
das
js
push
cmp
cmp
jmp
out
and
jne
mov
int
jge
(bad)
dec
mov
push
in
sbb
jae
das
push
sbb
inc
fwait
inc
cmp
adc
cld
jl
ins
mov
jbe
dec
mul
lahf
fnstsw
jnp
shl
cmp
iret
push
enter
ja
imul
xchg
lea
int
call
je
out
outs
aad
je
ror
clc
adc
sbb
xchg
aaa
mov
push
loopne
xchg
fisubr
mov
aad
sbb
dec
jg
int
jle
dec
jmp
enter
push
dec
sub
push
lods
fistp
(bad)
sbb
js
sbb
mov
cli
and
mov
lods
and
lea
pop
mov
inc
push
push
scas
push
int
aad
or
repz
in
cmp
and
jecxz
pusha
mov
pop
inc
dec
pusha
in
jmp
cmp
xor
jnp
and
or
pop
mov
dec
(bad)
xchg
pop
dec
mov
mov
and
push
ss
adc
lock
cmp
jecxz
movlhps
adc
das
cmc
int
popa
(bad)
stos
ror
out
and
(bad)
fisttp
mov
inc
ins
aad
cs
mov
retf
mov
nop
retf
push
fwait
and
shl
push
repnz
push
out
jno
cmp
aas
in
adc
jg
fs
inc
repz
pop
mov
mov
in
push
repz
xlat
fstp
into
adc
repz
xor
jmp
push
out
cmp
into
sub
mov
or
jae
dec
pop
dec
or
out
and
bound
aam
cld
mov
loopne
call
push
mov
fldcw
fisub
lods
aad
xchg
cmp
add
jmp
jne
movs
or
jns
rol
iret
jl
hlt
or
add
mov
(bad)
dec
inc
in
call
push
push
out
les
pushf
jnp
nop
outs
push
pop
mov
fcmovb
pop
call
ss
mov
sbb
scas
js
iret
or
xor
cmps
jecxz
clc
xor
cli
stc
mov
leave
call
mov
cmp
inc
xchg
push
es
pushf
push
stos
add
and
sub
(bad)
les
movs
jno
xchg
or
push
and
adc
lea
call
push
xchg
int3
add
pop
xchg
ds
dec
xchg
loop
fwait
outs
cmp
sahf
mov
dec
jne
fistp
sbb
or
sub
xchg
out
fdiv
mov
iret
cmp
jmp
pop
cmp
mov
addr16
xor
push
nop
and
fst
or
cli
dec
jmp
lock
leave
adc
pop
sub
not
xchg
sbb
push
retf
sub
mov
retf
pop
or
sti
xchg
xor
xchg
mov
xchg
mov
inc
lock
outs
movs
inc
add
cmps
mov
xchg
faddp
aas
mov
and
out
mov
sbb
dec
rcr
pop
and
jo
jmp
das
xchg
sub
jnp
xlat
fdivr
sub
hlt
lods
fbld
mov
lahf
ret
add
add
stos
mov
mov
cmp
enter
jg
xchg
in
setl
hlt
mov
stos
xchg
mov
mov
cmp
ss
js
ds
aam
mov
xchg
out
and
push
or
adc
loopne
push
and
retf
pop
cwde
outs
cmp
lods
cmps
out
or
int
xchg
and
stc
lds
jno
fdivr
into
es
xlat
cmps
push
(bad)
adc
daa
inc
ss
and
shl
stos
(bad)
jmp
jmp
call
test
dec
dec
xchg
stos
sbb
inc
adc
test
sub
jae
mov
push
inc
and
stos
inc
sub
scas
(bad)
adc
fild
imul
adc
sahf
ja
or
enter
in
dec
cli
xlat
jb
jne
arpl
stos
lods
fimul
add
inc
movs
ret
cmps
and
jg
call
daa
cmp
(bad)
inc
push
stos
dec
cli
(bad)
inc
sti
cmp
or
fimul
sub
icebp
loop
xor
movs
jge
adc
push
pop
icebp
push
rcr
scas
xchg
ins
inc
ret
sbb
xchg
and
cmp
ret
sub
xor
test
and
jmp
cli
movs
int
call
or
(bad)
xchg
inc
mov
inc
(bad)
shl
adc
cmp
cmp
(bad)
movs
and
fwait
nop
xor
or
nop
adc
xchg
mov
mov
jecxz
push
push
pop
adc
jae
push
shl
fs
out
or
add
push
fcmovu
sbb
out
jg
(bad)
jnp
lods
cmc
lock
mov
retf
aam
lea
xchg
xor
inc
in
push
iret
jle
sbb
ins
xor
cmc
ret
sbb
cwde
xchg
fdivrp
sbb
fstp
mov
(bad)
cmc
sbb
nop
addr16
(bad)
mov
fwait
bound
sbb
test
retf
push
xchg
call
mov
in
adc
jae
dec
xchg
pop
pushf
xor
jnp
pop
sbb
rcr
xor
mov
xchg
xor
dec
stos
cdq
mul
scas
cmp
out
dec
jnp
pop
ds
lea
jge
mov
popf
jo
mov
push
popa
xchg
xor
push
sub
enter
in
push
cmp
leave
push
pop
pushf
out
dec
dec
inc
cmp
xchg
(bad)
and
fisttp
or
inc
sub
push
inc
mov
xor
loopne
cwde
cmps
sub
into
mov
out
loop
stos
push
shl
pop
cmp
cs
pop
mov
adc
mov
inc
mov
lahf
xchg
std
add
mov
lods
and
jbe
cmp
arpl
test
xchg
jp
js
mov
jb
sub
inc
rcr
xor
popf
inc
push
pusha
shl
call
repz
or
mov
pop
inc
bound
test
rol
lea
je
jnp
jnp
call
jno
push
push
xor
jns
jbe
aam
ret
sbb
mov
pop
fld
dec
push
repnz
fsubr
sbb
mov
cmp
cmp
(bad)
xchg
aam
pushf
in
and
xor
mov
je
not
xlat
daa
xor
fsubr
jns
fmul
jb
sbb
push
or
push
add
pusha
jle
out
jne
nop
ficomp
mov
es
stc
jmp
test
in
or
retf
popf
adc
jb
cli
adc
xchg
push
xor
mov
or
inc
loope
adc
xor
loop
sub
mov
(bad)
mov
out
psubsb
and
aaa
cmc
movs
call
lods
shr
aaa
out
pop
mov
and
sti
lods
lea
dec
ror
pop
cmp
xchg
in
int3
sahf
mov
out
cmp
jp
mov
cmp
lods
adc
(bad)
test
inc
or
daa
mov
pop
es
mov
add
pushf
or
lea
push
test
pusha
dec
or
dec
and
jecxz
and
in
xlat
sbb
shl
mov
and
sbb
pop
in
or
add
mov
xor
retf
lods
cs
imul
loopne
sub
fdivr
push
sar
out
outs
loop
adc
retf
jae
jb
(bad)
and
push
mov
into
scas
stos
cld
jp
mov
cmp
mov
xchg
aaa
mov
repnz
push
jne
inc
xor
push
or
jae
push
(bad)
pop
mov
adc
mov
scas
(bad)
cmps
add
mov
fld
xchg
xor
in
jle
dec
xlat
or
pop
mov
push
out
dec
inc
mov
sar
ss
mov
sbb
cmp
mov
mov
es
xor
pop
sbb
add
test
std
cmp
or
sbb
and
js
add
xor
or
pop
mov
and
xchg
std
and
sub
rcr
add
or
in
stc
retf
sub
jge
int3
adc
(bad)
clc
xchg
dec
int
(bad)
pop
imul
mov
sbb
sbb
jb
loop
adc
daa
pop
jp
mov
aad
cwde
nop
pop
mov
(bad)
pop
aaa
adc
dec
lds
adc
test
add
mov
xor
add
add
mov
ins
push
sbb
lea
rcr
xchg
clc
xchg
xor
test
lea
inc
sahf
sub
loop
sti
pop
jne
mov
inc
mov
stc
mov
mov
dec
rcr
jae
jmp
test
push
adc
int
pusha
cli
(bad)
retf
pop
into
add
jecxz
jne
push
(bad)
dec
fs
xchg
movs
dec
icebp
(bad)
jmp
(bad)
mov
out
inc
sub
and
sar
(bad)
jno
sbb
and
(bad)
jge
cmp
push
gs
xchg
loopne
mov
xchg
mov
ds
pop
fisubr
xchg
pop
imul
dec
and
es
call
outs
cmp
rcl
mov
mov
mov
sti
pusha
imul
pop
fchs
rcr
pop
jge
sbb
add
fcom
cli
and
add
outs
cwde
jns
repnz
lods
test
add
scas
mov
aas
and
xor
or
jns
stos
(bad)
mov
std
pop
sbb
sahf
std
jne
pop
out
sbb
mov
imul
cmp
imul
dec
jb
aaa
add
push
lods
push
fbld
fnstenv
stc
icebp
iret
repz
loopne
js
bound
fistp
sub
les
push
cmp
(bad)
pop
push
jns
sub
cs
push
pop
int3
dec
mov
and
cli
add
not
test
dec
scas
sbb
adc
cs
pushf
ja
xor
fnstsw
idiv
mov
adc
mov
mov
xor
add
mov
lods
pop
popf
mov
xchg
repz
lods
push
pop
add
pushf
in
dec
pop
mov
inc
sub
pop
and
rcr
jne
inc
adc
jle
shr
add
push
xchg
(bad)
mov
cmp
cmp
add
xchg
adc
mov
sbb
mov
adc
fs
add
das
fadd
add
add
adc
sub
sti
add
repz
and
jbe
sar
icebp
adc
mov
lock
aas
rol
pop
(bad)
addr16
loopne
mov
fsubr
and
pop
mov
movs
mov
add
ja
cmp
es
shr
lea
cmp
cmc
mov
adc
pushf
movs
adc
addr16
sub
stos
adc
pop
and
(bad)
adc
stos
out
add
adc
movs
ret
pop
mov
cmp
(bad)
or
add
(bad)
jl
pop
add
mov
adc
in
js
call
push
mov
popa
adc
jmp
pop
mov
xchg
push
xchg
fwait
rol
and
add
into
(bad)
cmps
fistp
(bad)
pop
dec
mov
sub
and
div
pop
fcmove
test
push
imul
xor
sub
and
call
adc
(bad)
sub
push
cmp
jne
aas
push
xor
and
xor
mov
mov
sbb
adc
inc
jbe
mov
arpl
std
scas
cmps
stos
inc
mov
lea
jle
movs
shl
push
mov
bnd
mov
js
and
movs
loop
adc
and
scas
mov
aaa
cmp
and
in
lods
xor
inc
dec
(bad)
mov
add
neg
shr
fiadd
movs
xor
fiadd
fs
pop
movs
popa
pop
xor
add
xchg
dec
mov
(bad)
dec
pop
(bad)
cdq
pop
clc
je
popa
mov
test
ja
lea
pminub
adc
cs
lods
stos
mov
lods
data16
xchg
xchg
fnsave
cmp
dec
jne
inc
jecxz
xlat
(bad)
shl
jecxz
and
xor
test
push
hlt
nop
fcmovbe
or
mov
adc
nop
out
sub
movs
xor
push
adc
(bad)
cmp
into
xlat
add
xor
cmps
mov
mov
push
inc
lds
mov
pop
xchg
add
dec
xor
push
out
sbb
mov
sahf
scas
sahf
xchg
rcr
fld
mov
rcl
js
ins
jmp
mov
xchg
xchg
xor
inc
sub
cwde
jb
cwde
stos
or
cli
jp
sahf
mov
scas
dec
xor
les
inc
out
adc
out
xor
imul
jge
push
das
js
add
push
repnz
cmp
jle
jmp
xchg
sar
mov
scas
mov
mov
repz
test
dec
popf
psubsb
in
lods
shl
pop
pushf
shl
lea
pop
inc
mov
jne
dec
dec
fld
sbb
lock
gs
movs
xchg
aam
das
sbb
mov
cmp
push
cmp
push
xchg
jg
cmp
sbb
mov
push
jl
cmp
in
xchg
sub
mov
xor
push
inc
hlt
outs
enter
mov
fucom
push
cmps
and
sbb
outs
sub
sub
push
call
clc
and
mov
into
cmp
fcmovbe
jmp
cs
scas
rol
xor
and
cld
popa
push
nop
lahf
std
xchg
cmps
xor
pop
push
jecxz
lahf
sub
inc
leave
adc
popf
or
sub
gs
dec
xchg
sub
inc
ja
call
jmp
xchg
pusha
add
jnp
xchg
cld
repz
test
jbe
push
sahf
shr
aam
add
inc
cmp
sbb
xlat
enter
pop
ss
inc
push
mov
mov
lds
mov
jae
std
fucomip
out
push
int
add
mov
sub
aam
loope
mov
dec
ds
aaa
pop
lahf
add
int
mov
pop
test
mov
stos
mov
push
out
enter
(bad)
xor
mov
jge
lods
jg
mov
mov
fistp
mov
mul
test
add
jp
mov
dec
daa
jmp
xor
bound
jb
mov
jno
mov
mov
(bad)
dec
and
xor
test
lods
push
out
add
add
xchg
mov
and
popa
aaa
inc
sar
xchg
data16
mov
xchg
sbb
iret
xor
inc
test
je
in
movs
dec
cmp
std
pop
mov
inc
mov
add
test
mov
mov
push
scas
mov
sbb
jp
dec
inc
mov
jmp
aaa
xchg
mov
mov
sub
jecxz
add
mov
push
inc
mov
fild
inc
cmps
dec
inc
push
rcr
dec
jmp
inc
call
xor
in
inc
pusha
popa
push
inc
mov
cmp
rsqrtps
fidiv
pop
push
adc
int3
in
fisttp
lods
push
aas
cmp
and
arpl
push
retf
xor
jecxz
dec
sub
sub
icebp
into
cmc
arpl
jae
push
mov
imul
lds
xchg
mov
(bad)
xchg
scas
sti
cwde
pop
sbb
arpl
sbb
lock
push
pop
mov
or
mov
mov
ja
dec
sub
enter
shld
cs
cmps
jmp
fsubrp
xchg
loopne
cli
cs
ins
bound
jmp
imul
ins
jmp
dec
xlat
jns
test
mov
aaa
cmp
or
hlt
dec
push
push
add
inc
mov
outs
imul
cld
pop
pop
pusha
mov
retf
mov
repz
or
test
imul
dec
jno
mov
clc
cld
stos
hlt
popa
ins
xor
ret
xchg
shr
xchg
mov
sbb
sbb
adc
and
(bad)
sbb
jnp
sbb
and
mov
pop
aam
mov
push
inc
inc
jge
frstor
iret
aas
int3
shl
mov
dec
fisttp
mov
dec
int3
test
js
std
mov
adc
int
xlat
test
mov
xlat
mov
cs
mov
jo
jecxz
out
push
jmp
adc
push
xor
je
ins
popf
add
sub
daa
add
popa
div
cmps
packsswb
inc
cmp
iret
pushf
out
mov
push
ret
mov
scas
icebp
out
ss
jp
push
add
add
test
aas
cli
mov
aaa
in
mov
idiv
add
xor
ret
(bad)
stc
mov
stos
cmc
pop
iret
jle
data16
out
mov
lds
jae
sbb
into
stc
push
test
or
aas
jns
push
fsub
push
pop
dec
pushf
mov
inc
popf
jle
shr
add
outs
cmps
idiv
sub
pop
aam
and
mov
call
mov
neg
push
sbb
cmps
daa
xchg
mov
scas
rol
mov
ds
div
jbe
mov
xchg
pop
push
and
pop
stc
sbb
bound
xlat
sbb
dec
mov
imul
sub
or
scas
adc
int3
ss
iret
icebp
imul
pop
clc
sbb
add
jbe
repnz
jo
into
mov
out
jmp
inc
xchg
add
idiv
pop
out
add
and
mov
add
paddb
(bad)
popa
jle
in
pop
nop
ins
sbb
popa
jp
es
adc
mov
in
and
test
add
cmp
or
dec
inc
mov
fwait
cmp
pop
cmc
add
jmp
mov
pusha
icebp
xchg
jne
aam
cdq
push
push
outs
pop
(bad)
call
sar
js
pusha
xchg
sahf
je
ins
mov
dec
jp
dec
clc
push
sbb
jl
icebp
rol
arpl
pop
mov
sbb
add
fld
ins
add
xchg
xor
inc
sahf
push
into
cli
enter
loope
popf
stc
std
shl
jbe
cmp
fwait
test
stos
imul
sub
(bad)
ja
lea
jns
dec
xchg
dec
dec
xlat
test
adc
xor
jo
mov
(bad)
mov
jmp
xchg
jmp
dec
adc
or
mov
stc
loop
sub
neg
mov
mov
fxch
mov
inc
sbb
(bad)
xchg
inc
enter
retf
mov
test
fiadd
(bad)
or
push
mov
ja
pop
pop
add
nop
xchg
inc
fdivr
inc
mov
call
push
pop
jmp
call
pop
pop
rol
jbe
push
call
mov
cmp
lahf
dec
sub
jnp
out
fadd
mov
int
js
mov
fwait
sbb
inc
add
or
jmp
or
in
and
xor
fidivr
dec
call
add
xchg
stc
jmp
sub
pop
scas
dec
fisub
jmp
dec
sbb
clc
out
fbstp
sbb
or
enter
mov
loop
dec
mov
mov
cmps
mov
add
retf
or
cmp
sbb
or
mov
cmps
cmp
popa
dec
outs
and
inc
cmps
(bad)
mov
add
jo
test
imul
push
cld
test
sbb
cmp
mov
fst
int3
push
inc
scas
mov
(bad)
or
xchg
sbb
xor
js
fisttp
data16
xchg
data16
mov
mov
out
mov
scas
cmp
in
xor
or
out
shr
sub
les
popa
jl
dec
cmps
sub
(bad)
fild
call
lods
jo
popa
enter
das
cmp
mov
aaa
lods
jne
addr16
mov
adc
les
ja
or
xchg
and
push
aad
clc
mov
out
test
pop
mov
or
jmp
jge
imul
add
push
les
shl
imul
aas
or
(bad)
push
pusha
arpl
pop
or
adc
ret
push
out
leave
dec
cmp
or
retf
push
stos
dec
sbb
jge
adc
dec
jp
inc
cli
clc
movs
pushf
add
add
je
push
or
and
inc
dec
xchg
cwde
test
adc
(bad)
add
shr
je
adc
test
push
shl
loope
cmps
or
adc
cmp
neg
and
je
sbb
ret
jmp
and
cmps
cmp
dec
data16
pop
dec
push
jge
cmps
push
jns
out
add
mov
int
xor
inc
fisub
adc
pushf
pop
mov
call
pop
and
add
mov
dec
popf
mov
adc
mov
jne
sbb
adc
stos
out
ds
movs
mov
xor
push
jne
in
pop
(bad)
mov
dec
xchg
adc
aaa
aad
jge
xchg
out
sbb
stos
pop
(bad)
jns
mov
mov
sub
xor
mov
fisubr
jne
or
test
inc
inc
iret
mov
and
movs
movs
int3
xor
out
push
hlt
dec
sbb
aas
dec
pop
and
sub
push
jns
dec
or
ud0
in
jecxz
div
outs
mov
rep
cdq
push
in
add
(bad)
(bad)
pop
xchg
lock
dec
arpl
xor
enter
mov
mov
xchg
or
xchg
xor
jno
repnz
scas
mov
fdiv
movs
pop
ror
add
outs
call
jl
das
sahf
icebp
cmc
int
jmp
push
dec
jae
cmp
mov
cmp
jmp
push
popf
jns
xlat
out
hlt
xchg
push
bound
daa
jecxz
out
jle
lea
scas
movs
in
push
dec
mov
(bad)
pushf
cli
jmp
cmc
adc
cmp
std
sbb
xchg
out
xchg
mov
aad
jp
or
out
adc
lods
out
and
add
inc
add
and
lea
dec
cmp
std
pop
int3
xchg
fs
xchg
mov
xchg
adc
lea
gs
repnz
dec
lods
pop
add
frstor
cmps
sbb
cmc
jmp
adc
or
inc
loope
and
mov
and
aaa
jmp
mov
fstp
sub
jp
arpl
out
mov
dec
jns
loop
mov
adc
sbb
(bad)
pop
aas
sbb
ret
add
cdq
pop
or
ja
fild
aas
fbld
retf
(bad)
jae
dec
idiv
push
bnd
rol
out
test
(bad)
inc
mov
jp
lods
xchg
rol
fsubr
rcl
lods
mov
dec
mov
std
dec
pop
xchg
add
inc
outs
sub
cmp
stos
lahf
mov
sbb
int
sub
add
fs
in
ins
out
adc
push
push
push
cmps
gs
jns
xchg
daa
sub
shl
fidiv
fmul
out
fldcw
mov
lea
adc
mov
xor
push
cwde
pop
idiv
lea
popf
xchg
add
xchg
loop
sbb
push
add
mov
or
retf
aad
cli
adc
inc
mov
stos
sub
popf
lea
test
into
mov
sub
call
mov
sub
jmp
mov
and
fwait
pop
jb
or
mov
mov
std
pop
sub
cmp
jae
cs
in
movs
(bad)
inc
add
and
fldz
adc
cmc
xor
dec
xchg
jg
jns
scas
pop
jno
dec
xor
imul
sar
pop
das
call
xor
sbb
push
sti
rcr
(bad)
xchg
add
pushf
test
sbb
xchg
xchg
or
xor
sub
dec
cmp
loopne
repz
shr
cmp
jg
mov
mov
retf
ins
jae
out
mov
nop
push
sbb
int
mov
shl
jmp
pop
pop
jg
nop
or
fmul
ds
jbe
xchg
mov
jne
sub
push
ror
(bad)
aas
cwde
shl
add
(bad)
cmps
mov
call
int3
dec
les
out
int3
pop
(bad)
jae
scas
push
cmp
mov
data16
lods
in
mov
imul
cld
retf
sti
mov
into
mov
idiv
iret
stos
jmp
sar
arpl
mov
mov
fidiv
ret
sub
fwait
cmp
daa
(bad)
ficom
adc
dec
pop
cmp
mov
xchg
lock
jb
enter
fcmovnb
rol
jmp
pop
jae
sub
mov
xchg
add
das
ss
jmp
sub
and
add
ins
dec
daa
rcr
mov
xchg
jo
adc
(bad)
mov
jnp
xchg
add
psubw
cmp
and
sbb
cmp
mov
jno
in
icebp
jmp
rol
mov
mov
push
data16
sub
pop
jns
sbb
(bad)
into
add
jns
inc
stos
jbe
mov
push
cwde
push
(bad)
push
pop
inc
and
leave
sub
adc
daa
pop
loopne
inc
pusha
in
pop
adc
int3
fbld
add
int3
pop
sti
movs
pop
in
aam
jg
div
lahf
leave
xchg
lahf
add
dec
nop
mov
icebp
xor
movs
ss
int3
or
xor
jae
dec
(bad)
dec
jo
jg
scas
mov
jae
jge
rol
jb
xchg
and
jns
pop
rcl
inc
inc
int
(bad)
retf
add
dec
push
adc
add
test
inc
mov
jge
push
jne
test
sub
stc
inc
je
jle
mov
push
or
mov
cdq
sti
loopne
popa
rcl
popa
sbb
adc
aam
imul
xor
jns
and
shl
adc
std
mov
daa
dec
or
loopne
mov
and
scas
ror
xor
retf
adc
test
xchg
jp
fistp
mov
cmps
das
xchg
jb
lods
sti
adc
cmps
arpl
mov
xchg
mov
outs
cmp
xchg
pop
pop
pop
dec
xchg
cwde
out
rol
in
inc
mov
rcr
mov
test
adc
fs
int
or
xchg
fbld
xor
adc
dec
aaa
add
js
xchg
mov
fild
in
fmulp
in
add
mov
dec
cli
loopne
jb
repnz
mov
or
scas
ror
push
jbe
stos
repnz
in
xchg
inc
pop
retf
test
pushf
sub
aaa
pop
in
push
jg
xchg
je
ficomp
aas
lea
call
adc
ins
xchg
xchg
movs
(bad)
pop
push
or
push
aam
and
mov
jecxz
enter
mov
dec
adc
or
inc
aaa
cmp
pop
mov
mov
scas
and
mov
pop
dec
pop
inc
(bad)
test
mov
push
mov
loopne
jo
inc
aas
sbb
jne
loopne
in
loopne
shr
cmp
sbb
imul
mov
fs
movs
cdq
and
adc
jns
xchg
(bad)
sbb
stc
lods
mov
pop
jge
xor
xor
daa
pushf
cli
test
xchg
mov
loop
stos
movs
pop
push
xor
inc
shl
adc
xchg
inc
mul
cmps
outs
or
(bad)
xlat
movs
cmps
ror
mov
jmp
mul
inc
pushf
sbb
xchg
retf
cmp
or
lds
ja
xchg
in
adc
pop
xchg
outs
and
sbb
jb
xor
cmps
pop
push
stc
adc
je
mov
lods
adc
sbb
pop
mov
mov
sub
mov
sar
iret
stc
sub
mul
jmp
imul
cmps
jbe
rep
call
dec
clc
(bad)
xor
stos
test
dec
into
stc
push
mov
adc
retf
das
fsub
push
rcr
mov
inc
push
cli
imul
jae
mov
aam
push
lahf
mov
cmp
xor
lock
sbb
and
loope
inc
out
dec
mov
pop
popa
push
mov
imul
es
jmp
sub
jmp
aas
not
pop
aam
stos
outs
adc
fucom
cld
test
dec
mov
(bad)
add
mov
rcl
cs
loope
adc
cmp
mov
jg
loop
cmps
stc
fimul
fld
test
mov
jecxz
bound
xor
sub
xor
test
enter
retf
jmp
bnd
sbb
mov
movs
fwait
push
push
aam
jae
lods
(bad)
ss
and
push
cmp
dec
retf
pop
pusha
xor
pop
cmps
shr
dec
test
sbb
hlt
mov
test
mov
enter
cmp
sub
fcomp
cmps
loop
or
addr16
fst
in
push
sub
cdq
cmp
stos
cwde
into
jmp
sub
xor
add
leave
xchg
jno
dec
mov
cdq
mov
mov
retf
fisub
aad
fwait
je
ins
cmp
test
push
popa
cmp
push
cmc
fwait
jge
or
adc
repnz
pop
ja
sbb
push
gs
ja
jno
(bad)
pop
mov
stos
pop
pop
jne
cmps
sbb
in
mov
add
daa
inc
mov
push
pop
add
pop
addr16
xor
mov
sar
xchg
mov
cmc
mov
outs
test
arpl
cld
sbb
inc
rcl
mov
loopne
scas
or
push
lds
push
dec
xlat
jne
gs
sub
out
mov
xor
(bad)
jle
push
ds
sbb
cmp
inc
pop
loopne
jle
test
rcr
addr16
jae
cmps
out
mov
add
mov
bound
rcl
push
dec
shl
cmc
sub
fistp
mov
push
outs
test
scas
mov
dec
xchg
ins
xchg
arpl
adc
bound
cwde
out
pop
pushf
mov
adc
xor
add
push
xor
xchg
sub
sbb
retf
ins
fcom
shl
dec
jl
retf
bound
jmp
jl
dec
fnstcw
jl
test
inc
into
mov
ins
rcl
xor
sti
mov
adc
iret
or
out
out
mov
aam
mov
dec
mov
inc
mov
sbb
sub
dec
xor
sbb
icebp
es
outs
jge
lea
hlt
xor
into
jnp
outs
ins
ficomp
add
adc
int
mov
clc
dec
jmp
mov
rol
add
cmp
add
push
aas
add
xchg
loop
out
ja
loopne
loope
ret
js
neg
sub
and
in
or
dec
rol
aad
lock
leave
test
in
aad
dec
jle
xchg
mov
repnz
cld
jae
jb
ffreep
cld
ret
xlat
ret
dec
xchg
mov
mov
jo
dec
aas
fdiv
jo
out
pop
pop
sub
jno
shr
push
mov
inc
push
fmul
xchg
mov
sbb
cmp
add
test
cmp
call
inc
fimul
xchg
mov
adc
shr
cwde
cmc
sti
or
push
mov
push
ins
pusha
sub
adc
fdivr
jmp
cmps
adc
out
xchg
loope
and
jo
sti
mov
ins
pusha
xchg
mov
loop
and
inc
xchg
icebp
fsubr
ss
pop
(bad)
and
adc
mov
test
ror
test
mov
stos
mov
out
dec
fadd
push
push
test
dec
(bad)
dec
mov
lds
ror
aad
dec
pop
pop
mov
sbb
push
mov
jae
sbb
mov
mov
daa
clc
repz
fistp
cdq
imul
mov
cmps
dec
add
pop
mov
repz
xchg
xchg
ss
(bad)
mov
addr16
jge
push
or
and
test
iret
push
fcom
ins
mov
xor
repz
popa
inc
mov
hlt
das
dec
push
shr
mov
aam
mov
inc
xor
dec
inc
xchg
scas
adc
addr16
jmp
jecxz
jle
int3
add
loopne
ins
mov
(bad)
fsubrp
add
jb
mov
or
mov
popf
test
xor
add
pop
xor
mov
rdtsc
and
xchg
pop
mov
dec
pop
sbb
adc
test
or
cmps
ret
jecxz
ret
or
add
mov
in
je
pop
imul
lea
xchg
jnp
ret
dec
xchg
out
aad
mov
sahf
stc
fild
stc
xor
call
inc
outs
movs
mov
cmp
jae
popf
mov
icebp
xchg
mov
xchg
fldz
imul
cmc
in
lods
jmp
jae
lahf
pop
adc
fnstsw
push
(bad)
and
pop
add
mov
jge
and
cmp
ins
repz
and
fdivr
jnp
(bad)
idiv
scas
dec
fidiv
jbe
test
fadd
loop
jo
es
or
repnz
cmc
aam
stos
jae
pusha
mov
mov
lds
stc
pop
xchg
xchg
call
test
mov
stos
adc
es
inc
mov
xor
sti
mov
xor
cmc
or
cdq
sbb
or
and
inc
cmp
sti
mov
arpl
(bad)
mov
xchg
leave
aaa
xchg
(bad)
fidivr
out
push
and
ss
inc
outs
and
cld
sub
into
xchg
clts
push
push
dec
add
call
stos
cld
lods
sahf
cmp
inc
outs
inc
adc
test
and
in
pop
je
ins
inc
inc
inc
out
pop
push
push
pop
sahf
and
xchg
(bad)
cmp
nop
add
jmp
int3
xor
or
push
cmp
pop
cmp
jge
cmp
push
inc
push
(bad)
cmp
mov
push
pop
xor
jg
mov
pop
daa
cdq
movs
ins
sbb
pop
pushf
xor
add
(bad)
add
mov
das
loop
or
add
gs
aam
sahf
push
xor
aad
aad
les
std
fld
adc
sti
mov
jg
cmp
popf
pop
and
rcl
int3
inc
sub
xchg
das
sbb
out
ror
xlat
dec
xor
jmp
fistp
sahf
clc
hlt
jle
pop
mov
adc
aam
pop
stos
ins
adc
dec
mov
pop
inc
ja
or
(bad)
cld
lds
aam
add
mov
scas
scas
jo
adc
push
cmp
sbb
loopne
loope
xor
add
out
cwde
cld
(bad)
jmp
jae
(bad)
std
cmp
cli
sbb
mov
shl
xor
mov
mov
shl
psadbw
mov
fdiv
(bad)
adc
mov
add
popf
jns
xor
sbb
pextrw
push
mov
data16
push
inc
cmp
ret
jp
int
and
cmps
sbb
test
xchg
inc
xchg
ds
pop
popf
cmp
mov
dec
xchg
lock
das
test
cmp
test
nop
cmps
(bad)
fidiv
movs
inc
inc
outs
and
jle
sbb
push
(bad)
lock
dec
call
mov
cmp
movs
iret
sar
sub
test
cdq
call
pop
(bad)
lock
adc
mov
imul
jmp
addr16
ret
aad
mov
push
mov
addr16
add
jbe
jne
mov
cmp
or
imul
jnp
ds
mov
sub
mov
stos
arpl
cmp
lods
jbe
(bad)
fist
outs
(bad)
movs
mov
sbb
popa
sahf
jb
aaa
mov
fadd
cs
adc
rcr
cmp
add
stos
xor
jge
imul
push
inc
or
in
inc
cmp
hlt
out
jne
pop
call
mov
clc
mov
xchg
(bad)
or
and
je
xor
xor
adc
or
retf
jbe
or
aaa
adc
es
ja
(bad)
pusha
and
push
ret
js
sbb
jns
inc
mov
rcl
ror
arpl
stos
inc
ss
sbb
fistp
cmp
pusha
(bad)
lods
lea
push
idiv
ja
jbe
(bad)
aam
dec
and
add
test
pop
test
mov
and
or
mov
(bad)
std
retf
mov
repz
jbe
jae
ret
loopne
repz
test
pushf
imul
mov
cmp
sub
cmps
(bad)
test
mov
int
pushf
outs
and
call
push
fcomip
repnz
mov
and
jmp
pop
(bad)
rcl
jno
lods
jge
sbb
cmps
jo
inc
or
mov
int
or
push
jbe
jb
xchg
and
mov
xchg
pop
mov
bound
mov
pop
mov
not
lods
test
sbb
in
hlt
(bad)
push
aam
mov
(bad)
sahf
ret
sahf
mov
in
retf
test
inc
adc
out
mov
mov
xchg
adc
sar
sti
cmp
xor
or
add
adc
mov
out
neg
int
xchg
cmp
mov
pop
aaa
rcr
ja
push
nop
mov
popa
iret
fmul
sahf
cmps
jmp
fldcw
push
aas
mov
stc
add
xchg
jo
mov
jg
jb
ret
mov
js
dec
push
aas
cmp
jnp
cli
dec
jb
jns
cmp
retf
pop
push
rcr
xor
movs
sub
push
push
cdq
or
and
shl
int3
fs
xchg
cld
xor
and
adc
and
mov
scas
inc
dec
jmp
test
ss
pop
out
pop
(bad)
in
outs
lods
lods
dec
fcmovbe
cwde
mov
mov
xchg
xor
out
sti
fcmovbe
jae
inc
ins
or
in
jg
jmp
cwde
sub
sbb
int3
sub
jl
pop
mov
add
pop
inc
xchg
or
les
mov
cmp
mov
mov
nop
sub
imul
push
mov
ss
loope
sahf
adc
(bad)
scas
and
arpl
push
stos
in
mov
rcpps
jo
fmul
pop
sub
(bad)
jecxz
enter
ffree
push
adc
nop
add
dec
pop
pop
inc
sbb
in
pop
lock
or
jle
mov
pop
std
dec
pop
dec
fcmovb
pop
adc
adc
movs
(bad)
push
jg
dec
xchg
mov
dec
jl
(bad)
out
shl
outs
(bad)
pop
adc
or
push
xor
lock
xchg
ins
call
cli
hlt
or
pop
xchg
es
loopne
mov
bound
test
and
ror
test
addr16
data16
hlt
cmps
nop
int
xor
int
mov
int
jp
mov
mov
loop
(bad)
js
ds
mov
mov
repnz
lahf
and
mov
stos
dec
loope
mov
xor
lods
shr
in
mov
cdq
jae
jmp
ret
jg
scas
icebp
imul
daa
sub
dec
xchg
jne
sub
sahf
je
lods
nop
adc
bound
not
js
ss
dec
push
lahf
dec
dec
dec
jae
add
sti
sbb
mov
mov
pop
(bad)
or
cmp
nop
jl
cmp
push
pusha
xchg
mov
adc
mov
sbb
and
ss
jmp
mov
fisub
icebp
add
push
xchg
mov
scas
push
scas
add
push
aas
xchg
inc
lods
lea
mov
ret
adc
mov
fistp
or
adc
pusha
lds
dec
push
xchg
mov
movs
xchg
stos
xchg
dec
repnz
int
pop
scas
xor
ja
cmps
mov
and
not
adc
test
and
out
aam
aas
sub
jne
mov
push
sti
leave
mov
push
pusha
sahf
jle
sbb
pop
inc
in
jbe
into
pop
mov
(bad)
cld
stc
lock
adc
inc
add
cdq
ins
test
fmulp
jns
out
stos
cdq
and
and
xchg
int
test
mov
call
jb
xchg
sub
mov
jb
xor
mov
int3
cdq
ror
push
lahf
ds
pop
daa
cld
sub
into
mov
xor
call
dec
sub
adc
xor
out
movs
inc
cmp
jo
das
mov
ret
jmp
push
gs
addr16
mov
push
aad
and
jnp
shl
adc
jmp
fstp
cmp
fst
in
xor
jl
xor
sti
and
adc
push
or
jmp
push
mov
cmps
stc
and
or
into
xchg
jo
sub
sub
test
mov
cmc
mov
pop
add
cdq
pop
retf
push
add
stos
add
dec
test
gs
mov
dec
rcl
dec
das
lods
xor
ja
jl
mov
pop
in
mov
xchg
mov
dec
jno
dec
lea
cmp
push
mov
add
add
sbb
jb
je
xor
cdq
lahf
imul
out
xchg
out
and
inc
push
lock
adc
test
stos
inc
imul
rcr
and
stc
loop
sbb
scas
pop
ins
adc
mov
push
in
jnp
repnz
mov
push
lock
mov
jcxz
add
test
stc
std
sbb
mov
inc
sub
lock
call
clc
pop
jecxz
jno
dec
retf
dec
push
pop
sbb
inc
mov
iret
push
js
inc
mov
cmp
loop
jo
xchg
lds
test
push
(bad)
aam
sub
sbb
sub
sbb
daa
mov
scas
inc
add
sar
fst
dec
js
into
fdivr
jle
sub
stos
pop
jmp
or
lea
lea
add
ret
scas
call
fldcw
sahf
pop
push
leave
mov
fwait
ds
in
dec
pop
(bad)
std
fdivr
ja
in
das
lods
imul
pop
in
sub
mov
es
sub
fdivp
jno
sub
(bad)
fwait
jg
or
mov
mov
imul
mov
xchg
xchg
jge
sub
mov
shl
ss
and
push
or
ror
jp
lods
jo
dec
(bad)
call
std
xlat
ret
call
mov
imul
mov
pop
mov
test
cmp
add
fwait
cmp
add
cmc
xchg
out
mov
das
js
add
test
push
push
je
and
or
pusha
and
out
push
dec
hlt
fdivr
icebp
and
mov
loope
sbb
inc
loope
aas
fcom
addr16
repz
sub
loope
or
or
je
aad
xor
stos
jbe
aas
mov
push
push
ds
std
jmp
iret
data16
into
ret
or
push
pushf
iret
sahf
out
mov
(bad)
dec
call
sar
aaa
out
mov
cmp
in
mov
inc
or
cmp
aas
push
jbe
fdivrp
(bad)
lods
(bad)
jmp
cmp
jae
(bad)
dec
or
test
lahf
push
push
movs
mov
mov
ja
inc
mov
outs
call
js
sbb
test
arpl
mov
inc
jg
xchg
cmc
dec
jp
not
mov
dec
mov
cmp
sub
push
pop
push
cwde
ficom
sub
call
mov
cs
xchg
mov
data16
mov
(bad)
test
cdq
or
in
cwde
xchg
mov
inc
scas
(bad)
pop
leave
xchg
enter
loopne
ret
int
int3
loope
enter
fs
popa
pop
cld
mov
ret
out
pop
mov
out
jle
cs
mov
push
jb
and
int3
and
inc
xor
retf
add
hlt
fdivr
xor
lds
and
neg
repz
and
fidiv
inc
add
pop
into
repz
dec
lahf
or
(bad)
jmp
cmps
addr16
cmp
mov
test
pop
scas
add
inc
lods
or
movs
adc
push
adc
pop
adc
push
xchg
push
out
jle
jp
adc
stos
call
jnp
lds
sar
or
lods
in
das
pop
mov
xchg
popf
mov
test
cmp
cmp
fs
mov
out
call
push
xlat
lock
pusha
(bad)
out
xor
mov
aad
jb
cmp
jno
sti
idiv
in
xor
es
int3
add
mov
dec
ins
xchg
sbb
pusha
sqrtps
ss
jmp
adc
mov
xchg
push
fidivr
xor
sbb
xchg
les
int3
sub
repz
dec
cmp
dec
dec
pop
fisttp
enter
inc
xor
adc
xchg
dec
pop
mov
push
pop
retf
and
pop
cmp
(bad)
xor
neg
lock
add
or
sbb
cmps
jecxz
cdq
daa
mov
mov
movs
dec
add
add
int3
sub
xor
sub
repnz
push
and
jmp
frstor
mov
mov
(bad)
test
and
push
xchg
stos
push
push
or
(bad)
js
mov
(bad)
in
inc
ja
dec
mov
xor
and
sahf
fist
cld
mov
stc
retf
div
push
sbb
inc
mov
cmp
cld
or
repz
sbb
jp
imul
std
push
clc
je
cmp
pushf
aam
sbb
daa
les
retf
inc
mov
xchg
sbb
adc
lds
enter
push
mov
dec
push
popa
cmpps
mov
loop
clc
out
xor
sbb
retf
dec
jp
and
enter
bound
push
mov
jle
fistp
or
daa
pop
and
inc
jg
loope
inc
push
imul
adc
mov
mov
xchg
retf
cmp
lahf
dec
or
(bad)
pop
jns
stos
(bad)
cmp
daa
xor
mov
aam
aad
push
iret
mov
idiv
mov
mov
shr
hlt
mov
sar
test
stos
add
imul
movs
outs
xlat
ss
lahf
or
sahf
or
adc
cmp
ins
ss
inc
cmp
movs
neg
sbb
aam
sbb
push
dec
mov
xor
pusha
in
mov
cmp
adc
addr16
or
push
ss
mov
fs
rcl
loopne
push
xchg
xchg
jg
jns
int3
ret
int
repz
jne
sti
cmp
pop
rcl
scas
fs
inc
xlat
sar
mov
cmp
mov
pop
js
cmp
cmp
cmp
push
sar
fwait
popa
pop
iret
or
cmp
push
repz
addr16
xchg
dec
or
cmp
cs
jo
int
cmc
jns
test
mov
fwait
xchg
sub
push
xor
js
pop
inc
int
cwde
mov
lea
xchg
jns
retf
ret
pcmpeqb
xlat
xor
or
sbb
xlat
ja
ss
sti
and
fld
and
dec
pop
inc
add
cli
enter
mov
inc
pop
pcmpgtb
retf
addr16
arpl
mov
xchg
mov
add
inc
cmp
sbb
cmp
pop
cmp
ror
iret
cmp
jo
pop
int
or
aas
mov
jg
xchg
xor
mov
pop
leave
dec
test
ins
and
jmp
inc
and
mov
cmp
sbb
ds
psubb
pop
div
sbb
push
in
fldcw
hlt
retf
and
cmps
pop
xor
fcmovbe
sub
div
iret
or
xchg
scas
xchg
xchg
push
push
call
dec
call
push
call
out
push
xor
push
movs
inc
aam
cmp
scas
adc
ss
mov
int
mov
scas
adc
mov
in
push
cli
enter
mov
jmp
movs
pop
pushf
in
popf
inc
outs
xor
pop
in
cdq
sub
push
out
jp
mov
mov
mov
xchg
fnstcw
inc
ret
and
xchg
jle
sub
dec
outs
outs
xor
dec
adc
adc
inc
ret
jae
cwde
movs
push
enter
dec
leave
or
addr16
int
sti
cmc
movs
xor
sbb
xchg
sahf
lods
arpl
or
clc
ss
nop
add
fdiv
jle
fs
adc
add
scas
xchg
xlat
lods
faddp
push
cmp
adc
sub
or
div
rcl
repnz
xor
fist
jnp
and
mov
fisttp
fistp
dec
xor
cmp
pop
outs
jp
mov
push
(bad)
out
adc
pop
lahf
fwait
jno
(bad)
retf
les
clc
ins
pop
pop
dec
shl
pop
call
shr
add
adc
xor
mov
push
or
mov
cmp
or
enter
cmps
xlat
and
movs
loope
ret
scas
es
mov
test
adc
inc
rcr
mov
mov
cdq
jno
cmps
inc
mov
sbb
shr
enter
or
or
imul
dec
sub
neg
mov
call
(bad)
sbb
pop
jmp
enter
repz
hlt
xor
call
mov
mov
nop
mov
pop
mov
dec
fstp
daa
sub
mov
cli
add
out
mov
in
mov
sub
pop
or
cli
cmp
in
adc
push
and
add
or
icebp
lods
cs
adc
adc
jns
cmp
mov
dec
push
dec
das
inc
jbe
loopne
adc
sbb
jae
das
out
(bad)
push
iret
adc
retf
push
aad
cmp
fmul
pop
jne
dec
jmp
push
sub
pop
xchg
cmc
jmp
jae
adc
xor
cmp
push
shl
out
push
(bad)
fld
out
inc
sbb
retf
in
cdq
in
outs
sti
mov
jne
cmc
jmp
push
xor
pop
xchg
cli
stos
cmp
mov
pusha
fst
pop
(bad)
in
xchg
dec
or
stos
imul
js
out
mov
(bad)
aad
into
ror
aaa
mov
or
call
adc
sub
mov
xor
aas
ret
ret
jmp
movs
pushf
js
ins
mov
fcmovnu
push
cmp
pop
jb
jae
push
pop
iret
cld
jne
sub
sbb
daa
retf
clc
mov
fwait
sar
adc
scas
enter
mov
bound
and
push
inc
cmp
loop
sub
and
or
dec
cmp
pop
jo
test
cdq
ja
xor
mov
pop
mov
mov
dec
fdiv
movs
not
pop
mov
jmp
repz
xchg
cmp
mul
push
pop
ret
jns
push
popa
xchg
sbb
ins
jmp
adc
(bad)
jmp
xchg
add
push
pop
push
cwde
adc
cmps
mov
xor
div
cmp
mov
arpl
cmp
popf
repz
addr16
mov
(bad)
jns
push
xor
shl
cld
into
ret
adc
scas
adc
mov
movs
sbb
test
push
dec
or
mov
retf
inc
push
jg
repnz
imul
outs
xchg
jnp
js
int3
adc
inc
fnstcw
gs
xor
test
retf
adc
sub
and
iret
das
xor
jecxz
adc
cmp
jg
add
inc
cs
fld
mov
cmp
fucomip
iret
inc
shl
sbb
ret
cmp
call
jmp
mov
jle
and
cmp
aas
sbb
add
(bad)
daa
sbb
xchg
dec
ror
leave
fstp
test
xlat
movs
adc
and
les
and
enter
sbb
cmp
fyl2xp1
xchg
mov
mov
stos
and
scas
outs
mov
test
jp
nop
fbld
cwde
das
int3
popf
(bad)
aam
or
pop
stc
xor
mov
xlat
data16
jbe
jns
inc
add
jo
cmp
scas
loop
adc
shl
stos
cmp
add
jl
pop
(bad)
push
fiadd
xor
jb
xor
xor
mov
pop
fnstsw
cmps
int3
sub
xchg
es
xchg
mul
cwde
test
repnz
lock
sub
js
int
loope
test
in
push
mov
mov
stos
or
mov
fnstenv
rol
lods
les
mov
iret
push
outs
nop
enter
xchg
mov
jmp
mov
loopne
(bad)
(bad)
ja
(bad)
std
and
cmp
push
(bad)
cmps
mov
aam
push
or
mov
add
xchg
fst
not
outs
add
mov
fiadd
shl
cmps
dec
dec
pop
xchg
lds
shl
xor
loopne
das
loopne
repnz
js
xor
and
push
popf
imul
call
int3
xchg
or
add
gs
jle
leave
sbb
inc
enter
jge
mov
ret
mov
pop
push
out
rol
stc
loopne
loope
push
sahf
mov
mov
adc
lods
outs
or
mov
daa
mov
int
jg
cdq
sti
xchg
and
and
inc
retf
shr
imul
mov
dec
in
ins
ss
inc
ret
out
pop
std
inc
push
sbb
cmp
cs
push
adc
sub
mov
push
adc
jo
je
popa
gs
sbb
iret
hlt
fadd
clc
jnp
add
mov
inc
sub
pop
out
lock
mov
movs
enter
dec
push
mov
push
dec
mov
xor
lods
cmp
pop
jl
imul
jp
push
and
push
imul
adc
xchg
inc
xchg
or
xor
xor
sbb
(bad)
pop
(bad)
mov
fbld
jo
pop
add
xchg
hlt
lea
cmp
(bad)
std
pop
icebp
retf
add
dec
inc
call
mov
test
js
(bad)
add
push
lahf
movq
mov
push
sbb
adc
sbb
mov
pop
pop
mov
dec
add
(bad)
dec
outs
pushf
cmp
cs
fisttp
clc
pop
fstp
fwait
sahf
shr
(bad)
xchg
cdq
(bad)
pop
pop
dec
xchg
inc
repz
mov
push
test
mov
pop
popa
cmp
cmps
mov
jmp
lea
fnsave
iret
jbe
cmp
test
iret
inc
in
outs
xor
mov
mov
mov
dec
sub
aaa
out
mov
leave
push
pop
dec
xchg
jg
cmp
mov
xchg
jmp
fldenv
scas
mov
movs
mov
repz
cld
jle
sbb
test
outs
mov
add
cmps
stos
mov
lods
mov
div
pop
fbld
jnp
test
ins
je
jnp
pop
jno
movs
and
daa
xlat
xor
jne
out
sub
shr
cmp
call
push
std
push
dec
int
ja
xor
lea
out
stos
dec
sub
outs
push
repnz
lds
jns
and
les
arpl
(bad)
sub
mov
xor
xlat
jnp
mov
mov
jns
in
lods
add
inc
mov
push
or
and
pop
pop
inc
or
mov
mov
lods
jmp
inc
ja
jecxz
cmp
jae
dec
lea
cmps
mov
mov
sub
mov
push
push
cli
pusha
enter
adc
jle
test
and
pop
loope
mov
sbb
mov
out
imul
ja
lock
sbb
scas
das
int3
mov
mov
out
cmc
pop
ins
dec
mov
jmp
lods
ss
ins
pop
jae
push
ja
retf
cmps
xchg
add
addr16
int
and
pop
mov
cmp
inc
push
add
and
movs
loope
cwde
enter
or
ss
pop
cmp
jne
dec
sub
(bad)
movs
ins
mov
loopne
stos
sbb
pop
ins
repnz
daa
ret
rcl
test
sub
hlt
scas
int
pusha
pop
repnz
imul
(bad)
xlat
inc
jg
scas
retf
cmp
jno
adc
loope
adc
ss
(bad)
call
mov
(bad)
adc
nop
cmps
sbb
xor
mov
sub
(bad)
pop
pusha
push
push
pop
sub
in
(bad)
clc
mov
dec
pop
sbb
pushf
mov
xor
adc
jns
(bad)
or
movs
in
xor
rcr
push
jo
xchg
sar
stos
(bad)
stos
add
imul
jp
cmp
rol
out
dec
icebp
ret
stc
xchg
dec
call
mov
pop
imul
adc
cmp
mov
mov
fisttp
es
jge
or
cmp
inc
dec
xchg
leave
and
jo
or
jl
fnstcw
pop
test
fist
aaa
in
mov
push
inc
rol
out
mov
sub
fdivr
push
test
cld
push
dec
adc
add
ins
lahf
sub
dec
loopne
cmps
xchg
shl
xor
xchg
mov
push
cdq
rcr
sahf
loop
push
retf
into
cs
jmp
je
mov
inc
ss
xchg
sub
lods
sbb
xchg
cmp
cld
push
mov
push
test
or
fcomp
data16
fmul
push
daa
jmp
cwde
or
jg
push
push
hlt
mov
arpl
pop
jns
add
sub
mov
jnp
(bad)
push
not
add
jl
mov
dec
das
stc
out
in
ror
inc
cs
push
fcmovnu
xchg
xor
add
mov
jl
test
cmp
dec
rcl
push
dec
add
call
cmps
add
test
jno
(bad)
ficom
outs
pop
fldl2e
sub
inc
dec
jl
mov
jae
fwait
jl
mov
addr16
rcr
lahf
add
lods
iret
loopne
(bad)
data16
(bad)
pop
push
sub
retf
adc
xor
push
sbb
enter
out
fisttp
fs
hlt
and
lds
je
dec
mov
in
fimul
repnz
inc
push
xor
mov
dec
in
or
(bad)
ds
sub
fdiv
jo
pop
add
push
or
in
mov
fidiv
pop
js
lds
xchg
and
in
or
lds
pop
sbb
fist
dec
dec
ds
fidiv
jge
inc
mov
push
out
or
fsub
xor
mov
movs
cmp
cmp
pop
cmc
add
sub
repnz
xor
shr
cmp
or
dec
rcl
sub
stos
or
popf
sub
add
adc
xor
ins
cmp
inc
dec
mov
pop
xchg
ret
mov
and
cmp
cs
xchg
out
xchg
jno
xor
cmp
cmc
push
aas
ds
jmp
pop
push
jno
(bad)
push
fldpi
jle
call
lds
mov
out
cmp
cwde
ror
std
mov
jle
(bad)
int
imul
addr16
mov
jp
jecxz
(bad)
mov
dec
add
xchg
sub
push
pop
cld
adc
test
adc
dec
outs
jp
rcl
cmp
out
aam
cmps
push
popf
aaa
push
out
ror
movs
ret
xor
mov
add
aas
(bad)
call
cmp
sti
mov
(bad)
stos
movs
rcl
fcom
popa
outs
jg
sub
(bad)
js
pop
or
fdiv
mov
sbb
stos
mov
sbb
mov
cs
cld
add
icebp
xor
addr16
call
or
pop
hlt
push
ds
call
aam
xchg
mov
add
outs
fbld
pop
mov
mov
dec
mov
and
xchg
in
jge
and
ins
cmp
pop
pop
adc
jne
invlpga
mov
xor
ror
dec
sahf
add
aaa
add
push
aad
cmps
outs
test
arpl
or
dec
sub
mov
jp
jmp
adc
inc
adc
aad
adc
xchg
loope
jmp
loope
mov
(bad)
movs
sub
push
sbb
(bad)
jge
repnz
push
push
and
(bad)
js
or
and
mov
lds
dec
icebp
imul
imul
gs
add
xor
(bad)
cwde
push
aas
rol
or
inc
iret
lds
and
stos
rcl
fidivr
xchg
jb
inc
jmp
movs
dec
aad
into
aaa
adc
xchg
push
jmp
push
pop
cmp
or
in
test
sub
jnp
and
pushf
in
dec
out
in
aad
mov
jecxz
xchg
stos
pop
in
int
fcomp
retf
loopne
or
cli
icebp
shl
cmp
out
push
cmp
aam
or
lods
loope
push
push
mov
jmp
or
fisubr
aaa
int3
ret
lods
test
xor
jo
jecxz
sub
rol
sbb
test
xor
popf
nop
xor
shl
scas
in
std
test
sub
mov
das
or
inc
mov
dec
repnz
jo
rcl
int3
movs
(bad)
movs
and
or
sbb
sbb
mov
in
data16
jp
iret
inc
mov
push
sti
push
jnp
xchg
xlat
imul
adc
or
mov
lods
sbb
gs
pop
mov
imul
add
nop
lds
and
shl
hlt
jecxz
inc
xchg
pusha
pop
aam
pop
jl
inc
inc
aad
add
jne
hlt
fwait
push
cmp
inc
xchg
cmc
mov
dec
or
ret
sahf
cmp
sub
in
push
push
test
push
push
pop
and
pop
jge
jmp
add
jle
jge
mov
jnp
repnz
data16
sub
cmc
xchg
mov
xor
out
(bad)
cmp
jmp
in
sub
sub
push
or
ja
sub
mov
out
dec
cmps
or
dec
or
call
mov
xor
mov
sahf
leave
add
hlt
(bad)
adc
sbb
icebp
cmp
shl
push
pop
loopne
repz
and
jmp
inc
fs
das
int
repz
aam
mov
sub
cmc
push
xchg
pop
jo
in
dec
jmp
adc
xchg
out
mov
push
call
je
push
cmps
dec
ret
mov
pop
ja
jle
dec
(bad)
movs
sbb
fistp
in
mov
repnz
imul
out
push
xchg
mov
xor
or
popa
push
pop
pop
push
leave
inc
mov
fucomip
add
(bad)
mov
stos
xchg
add
jo
popf
jmp
fbstp
in
cmps
ins
xchg
(bad)
jne
mov
cwde
in
nop
and
fwait
mov
das
mov
xor
mov
out
mov
adc
sub
(bad)
clc
cwde
mov
cmp
jmp
cwde
pop
adc
sub
data16
lock
inc
push
outs
daa
out
jae
rcl
xchg
mov
mov
xchg
loopne
hlt
jl
jae
in
sub
mov
pusha
(bad)
pop
mov
(bad)
dec
cwde
cdq
imul
imul
sbb
mov
push
clc
mov
ret
popa
test
imul
imul
fnstenv
or
(bad)
cmps
pop
outs
sar
push
out
pop
push
dec
(bad)
idiv
push
xchg
fild
xor
sbb
mov
sbb
pop
sub
(bad)
mov
ret
std
iret
xor
add
ja
jmp
(bad)
mov
pop
cld
mov
test
inc
push
mov
pop
sbb
cmp
sub
popf
adc
push
(bad)
or
dec
adc
dec
outs
pop
cmp
idiv
lock
inc
scas
jmp
inc
pusha
fld
sbb
or
or
inc
js
sub
mov
aaa
inc
mov
scas
mov
test
lds
add
adc
dec
or
jmp
mov
cmp
in
clc
adc
ja
sbb
(bad)
and
mov
push
fst
shl
push
out
cdq
or
ss
push
cmps
sub
sbb
jecxz
cdq
retf
push
xor
test
arpl
and
sub
push
xor
inc
aad
stc
xchg
lods
in
imul
or
cmp
dec
cmp
fcom
mov
lahf
inc
cmp
jae
adc
ret
clc
sbb
daa
mov
repnz
dec
stos
fidivr
xchg
test
fsubr
pop
loope
adc
rcl
aas
sbb
mov
pop
ficomp
cmp
in
sub
jbe
cmp
jmp
aam
stos
sbb
jne
and
adc
sub
out
fdiv
scas
mov
gs
rcl
sti
test
jno
push
fimul
call
jg
pushf
push
push
cmp
or
outs
jle
std
sbb
and
(bad)
in
adc
sub
in
add
ror
daa
ss
dec
je
ins
and
leave
mov
adc
dec
lahf
mov
out
cs
(bad)
lods
call
jbe
mov
adc
xor
cwde
pop
add
add
mov
sub
inc
xor
mov
mov
fadd
rol
fstp
cwde
sub
mov
out
out
lock
pop
sbb
mov
out
inc
jae
inc
dec
loope
inc
adc
xor
push
cmp
mov
fnstenv
jl
jle
lods
dec
fisttp
out
imul
and
jge
test
pusha
cs
mov
xlat
(bad)
ins
imul
xchg
ss
cmp
stc
mov
inc
xor
mov
fs
(bad)
nop
movs
retf
or
lods
mov
aam
sbb
mov
gs
pop
and
inc
aam
mov
sbb
clc
jns
cld
aad
cmp
lea
jae
fnstcw
jae
or
nop
scas
adc
and
ds
movs
pop
push
icebp
call
lods
adc
or
dec
xchg
fdivr
int3
rcr
inc
lods
in
repnz
cmp
bound
fst
push
and
mov
sub
outs
xor
push
repz
cmp
mov
mov
push
inc
cmc
add
sub
dec
sbb
mov
mov
sahf
jp
loop
add
mov
push
push
jmp
pop
dec
lock
dec
dec
push
xor
xchg
cmps
mov
add
rcr
outs
paddsb
inc
fisttp
add
jbe
in
imul
mov
int
sbb
les
or
cmps
in
inc
imul
lahf
dec
or
stos
xchg
cmp
mov
pop
or
inc
fist
and
retf
mov
mov
and
fidiv
push
mov
out
mov
mov
movs
pop
add
jnp
adc
and
jge
repnz
adc
(bad)
scas
lock
ret
adc
jmp
mov
mov
mov
aad
stc
mov
stos
mov
inc
rcl
mov
xchg
pop
add
rol
cmp
cmp
adc
ss
jl
loop
dec
xlat
das
pop
jmp
add
or
push
cmp
push
and
xchg
sub
pop
sub
ins
pop
jne
xchg
inc
jle
sub
cmc
add
jae
(bad)
scas
adc
cmp
clc
sub
(bad)
lea
inc
xchg
pop
fimul
xor
pop
mov
test
pop
jmp
int
cwde
dec
div
pop
xlat
dec
adc
and
add
mov
jl
jp
sti
jp
pop
in
jmp
sub
(bad)
and
enter
mov
lahf
dec
or
imul
cli
stos
out
cmps
aaa
lahf
outs
or
rol
int3
push
cmps
sbb
or
xchg
xchg
push
pop
or
push
xchg
test
adc
test
pop
xor
arpl
rcl
pushf
test
jmp
out
push
and
(bad)
rcl
lock
daa
outs
outs
mov
cmps
movs
inc
(bad)
pop
jne
xlat
in
hlt
pushf
inc
into
pusha
dec
mov
je
int
sti
cwde
jg
test
mov
mov
cmps
cmp
cmc
sub
(bad)
fwait
test
fwait
(bad)
lods
push
cs
ret
out
push
scas
push
mov
mov
mov
sub
push
add
xor
test
(bad)
jbe
(bad)
and
mov
scas
xlat
call
call
call
icebp
jle
push
xor
dec
sbb
sti
ins
rol
pop
shrd
push
out
inc
dec
push
outs
mov
mov
gs
jmp
out
push
jne
shl
jle
aam
idiv
test
ss
(bad)
jns
icebp
lods
xchg
fidivr
inc
movs
cdq
push
daa
sbb
mov
retf
sub
(bad)
and
lds
cdq
mov
inc
jnp
stos
adc
imul
mov
push
xchg
push
jmp
push
cmp
adc
push
jg
out
into
or
pushf
sub
(bad)
cs
sub
pop
in
jle
mov
jge
mov
or
aam
ins
pop
cmc
fs
mov
and
mov
xor
xchg
test
clc
xchg
cli
dec
xor
fmul
leave
pop
mov
mov
and
loop
fucomp
leave
xchg
in
mov
std
sbb
test
add
cmp
data16
sar
xor
movs
jg
mov
and
push
xchg
lods
mov
pop
mov
call
in
xor
test
cmp
adc
test
in
out
sbb
xor
movs
out
sub
(bad)
js
test
mov
adc
fwait
push
mov
push
out
(bad)
aam
arpl
pop
jle
jb
sub
push
sub
mov
mov
sbb
mov
xchg
in
xor
std
inc
xchg
fwait
call
rcl
dec
sub
cmp
mov
dec
xchg
dec
cli
sbb
(bad)
call
int
jnp
jo
cmp
xchg
int3
push
jns
pop
jae
mov
add
dec
mov
popf
pop
loopne
repz
sub
mov
fisub
ins
inc
cdq
ins
push
repz
int3
cmp
pop
inc
in
out
push
popf
or
mov
adc
out
push
sbb
sub
inc
fadd
cmp
adc
or
inc
or
aad
push
and
pop
fwait
jmp
popf
arpl
enter
scas
adc
push
add
call
out
cmp
mov
jmp
aaa
ficomp
gs
sbb
or
inc
adc
neg
aam
pop
mov
jecxz
inc
pop
les
popf
inc
jb
scas
cmps
dec
inc
push
or
movs
fstp
retf
xchg
aas
dec
dec
aam
iret
lahf
sbb
or
mov
adc
push
xsavec
rol
je
ret
sub
loopne
cld
pop
or
rcl
ffreep
jp
push
mov
clc
fwait
loope
cmp
arpl
xor
out
retf
sbb
pusha
stos
inc
imul
pop
popf
pop
ret
mov
fldenv
jbe
push
call
out
mov
mov
push
js
dec
mov
inc
and
cdq
call
mov
sti
fidiv
add
sub
push
lods
add
pop
xchg
xchg
sub
push
sbb
cmp
mov
ins
in
dec
jmp
icebp
pop
data16
pusha
cmp
push
push
cmp
data16
sbb
les
in
and
mov
aaa
lds
neg
mov
and
or
fisub
mov
push
fdiv
mov
fcmovu
scas
inc
dec
cmp
add
xchg
push
push
pop
add
push
test
inc
sbb
retf
and
dec
inc
inc
hlt
dec
push
imul
aas
jmp
push
pop
pop
dec
push
cs
ret
mov
push
dec
mov
jmp
jb
das
out
call
xacquire
out
sub
adc
loope
add
mov
cdq
es
icebp
repnz
loop
mov
(bad)
loop
(bad)
fwait
lods
cmp
fisttp
jnp
retf
push
cmps
mov
sahf
mov
dec
sbb
dec
dec
popf
dec
mov
les
mov
jnp
test
xchg
test
push
sbb
dec
js
xchg
pop
sbb
pop
hlt
mov
pop
jbe
frstor
or
adc
mov
mov
add
mov
push
mov
cwde
and
adc
xchg
mov
inc
lds
dec
mov
inc
and
mov
inc
cmps
xor
inc
sub
xor
and
ss
jae
mov
je
mov
mov
cmp
push
jns
jg
add
ret
xor
push
test
jg
and
arpl
loope
pop
lds
ret
movs
test
dec
into
pop
shl
call
repnz
push
sbb
cdq
push
adc
and
jle
ds
mov
fiadd
xchg
dec
adc
xchg
jne
pop
push
adc
scas
out
and
fsub
shl
jb
push
imul
pop
adc
(bad)
leave
repnz
stc
mov
dec
out
push
jmp
sbb
outs
cwde
das
or
repnz
mov
imul
repnz
mov
and
clc
mov
mov
les
inc
ss
add
sbb
inc
jbe
jmp
jns
ret
mov
xchg
les
xchg
cli
and
xor
and
jbe
or
jnp
or
outs
push
aas
or
cmp
sub
xchg
mov
or
fsubr
loopne
fsubr
ror
sbb
aaa
add
mov
or
(bad)
mov
mov
jl
lods
call
pop
(bad)
popf
fs
or
xor
pop
test
call
loopne
adc
inc
hlt
lea
(bad)
xor
stos
js
aam
and
add
jne
jecxz
adc
or
add
ror
mov
stos
cwde
rcl
xchg
dec
fs
nop
dec
lea
dec
pop
jmp
dec
push
ret
mov
cmc
push
pop
movs
jbe
and
adc
aam
ja
pop
mov
adc
ja
mov
jbe
cmp
loop
or
dec
outs
sub
mov
mov
mov
or
mov
movs
fimul
push
jne
jge
adc
mov
std
mov
dec
ror
repnz
jnp
ror
mov
mov
rcr
inc
pop
retf
dec
pop
sub
pop
xchg
fwait
jmp
mov
movs
add
jmp
pop
mov
call
popf
arpl
mov
fstp
(bad)
gs
addr16
or
retf
jge
in
or
sbb
xchg
arpl
adc
out
push
aas
dec
cdq
daa
or
and
push
adc
js
popf
mov
inc
leave
fidiv
in
loop
shl
cmc
dec
jae
scas
mov
lods
pop
xchg
aas
pop
and
jmp
push
cmp
daa
cwde
or
xor
pop
int3
sti
lock
imul
mov
stos
test
push
mov
dec
fisubr
mov
(bad)
lods
scas
lds
xchg
cwde
loopne
jecxz
adc
ror
ret
daa
mov
ds
push
addr16
add
cwde
pop
inc
nop
or
std
pop
mov
xchg
je
adc
test
popw
into
bound
mov
sub
inc
clc
sbb
cmp
out
jno
and
xlat
stc
mov
mov
xchg
mov
ret
cmp
push
dec
xchg
fwait
mov
ins
pop
add
sbb
repz
mov
adc
cmp
fsubp
jo
dec
in
dec
movs
sbb
cdq
sub
adc
pop
jecxz
jmp
les
mov
ja
int
dec
lods
or
icebp
js
sti
or
(bad)
mov
(bad)
fidivr
sub
jbe
sub
(bad)
loope
adc
adc
sbb
popf
pop
pop
inc
cmp
xchg
arpl
icebp
shl
bound
adc
scas
repnz
or
addr16
add
xor
mov
scas
ret
ror
ret
pop
(bad)
mov
rol
pop
mov
clc
dec
dec
push
cmp
ds
add
pop
pop
pop
push
repnz
mov
rcl
sub
inc
es
sub
clc
xchg
xor
repnz
xchg
in
push
lods
(bad)
fcom
shl
pushf
int
inc
push
lock
sbb
mov
inc
ja
mov
mov
fiadd
adc
repnz
or
push
mov
pop
in
pop
and
std
jecxz
or
mov
pop
inc
pop
pop
mov
pop
repz
jnp
mov
retf
loope
xchg
jp
and
loope
int
fdiv
inc
or
xor
xor
lds
jmp
(bad)
ret
leave
mov
pop
cmp
sar
pop
pop
jnp
mov
push
adc
outs
aad
jmp
xor
xchg
push
mov
mov
sar
test
inc
cmps
dec
sbb
push
mov
fnsave
inc
sbb
out
cmp
inc
and
scas
push
movs
popf
(bad)
push
test
sub
push
ds
movs
add
pop
sub
rcr
fstp
inc
sbb
fld
arpl
sbb
frstor
ins
push
mov
outs
pusha
jge
es
(bad)
les
cmp
imul
test
xchg
loop
out
hlt
mov
loope
xchg
add
cmp
lahf
aad
xor
push
sbb
pop
dec
xor
cmp
and
mov
into
cmp
(bad)
pusha
push
repnz
mov
sub
(bad)
cmps
sub
out
push
js
es
fild
test
or
pop
lods
and
sbb
stos
jmp
cmp
fwait
js
into
pop
sub
movs
shr
(bad)
movs
retf
mov
dec
jb
(bad)
adc
push
fxam
arpl
icebp
stos
mov
fdiv
xchg
clc
xlat
mov
pusha
add
lods
mov
lods
or
cdq
pop
iret
(bad)
repz
dec
cmc
sbb
mov
imul
inc
lods
pop
int3
xchg
loopne
cld
sub
sahf
sbb
test
rcr
add
xchg
mov
nop
xchg
outs
adc
and
pop
imul
adc
movs
xchg
dec
mov
and
jmp
cli
cld
mov
dec
xor
sbb
sub
xor
jnp
cwde
call
lods
scas
pop
cmp
push
sti
xlat
adc
out
add
mov
imul
adc
(bad)
popa
mov
in
pop
mov
push
jge
movs
inc
lods
js
and
dec
mov
pop
push
shr
dec
or
jmp
mov
mov
sbb
push
xor
mov
dec
repz
ins
dec
gs
xor
jecxz
test
mov
and
add
jnp
das
nop
and
cld
sbb
push
xchg
les
pop
push
data16
adc
es
(bad)
hlt
fidiv
xchg
sub
cmp
fdivr
or
(bad)
adc
add
in
mov
aaa
lods
test
push
call
dec
inc
outs
out
or
add
scas
cli
cmp
das
pop
pop
movs
push
fwait
aam
sub
fild
(bad)
jge
mov
dec
mov
not
or
add
dec
(bad)
pop
lods
adc
sub
push
in
inc
aas
push
jo
dec
jle
pop
mov
jl
xchg
int3
fdivr
jmp
pop
les
imul
dec
movs
daa
xchg
or
mov
lds
popf
aad
jp
jge
add
cmp
ret
cmp
mov
stc
and
pushf
mov
retf
xchg
dec
bound
(bad)
jns
add
cmp
int
jne
fldenv
sahf
cmp
popf
jns
pop
xlat
ins
jns
ss
lahf
xor
xchg
shr
push
mov
mov
fdiv
ror
std
ja
adc
cmp
dec
bound
lea
pop
in
(bad)
out
(bad)
fcomi
add
inc
jbe
movs
mov
loopne
xchg
jns
inc
cs
dec
in
push
aad
sti
jecxz
ds
cmc
(bad)
sub
popf
sbb
movs
(bad)
ficomp
dec
sub
mov
loope
lahf
sub
adc
jb
das
pxor
or
(bad)
jp
or
fs
mov
out
xchg
sahf
fstp
ins
fucomip
mov
scas
push
jp
movs
dec
mov
call
pop
jne
mov
fst
cmps
rol
and
inc
ret
stos
hlt
(bad)
int3
imul
cmps
retf
stc
repnz
xor
xchg
inc
cld
sub
pop
das
and
or
aas
push
inc
dec
push
not
push
cmp
sbb
lock
cmp
loopne
push
test
fisub
dec
outs
sub
or
or
push
sub
(bad)
movs
imul
inc
mov
mov
mov
nop
xlat
inc
(bad)
mov
rcr
add
jmp
sbb
mov
aas
inc
mov
sbb
clc
pusha
and
cli
loope
lock
or
adc
fadd
arpl
rol
jp
pop
frstor
push
jne
inc
ret
push
hlt
ficomp
inc
pop
mov
mov
mov
xchg
pop
(bad)
shl
inc
dec
aam
sbb
cmp
and
jb
pusha
out
jp
test
test
xchg
pop
icebp
jo
xchg
shr
mov
fwait
iret
mov
inc
sbb
lods
push
loop
std
rol
xor
inc
out
cld
test
cli
pop
daa
test
fiadd
repz
mov
pop
sub
xchg
loope
sub
jae
rcl
mov
sbb
and
jb
and
jmp
push
mov
mov
cmp
mov
test
clts
les
(bad)
xchg
dec
rcl
lods
and
pop
fbstp
cmp
ins
out
or
lds
push
jne
sbb
sbb
cdq
ins
mov
xchg
push
cs
and
fld
and
pop
ror
xor
inc
pop
push
mov
fild
cmps
(bad)
movs
dec
xchg
(bad)
popf
sbb
movs
loopne
xor
stos
mov
or
pop
pushf
movs
gs
(bad)
jle
jmp
ret
movs
cmps
xor
inc
mov
cmps
xchg
paddq
ds
ss
je
fsubr
test
test
in
mov
scas
fidivr
sbb
(bad)
fucomp
mov
int3
sub
mov
mov
outs
bound
jo
ret
xor
popf
outs
mov
sbb
push
adc
push
cmc
mov
mov
je
pop
retf
loopne
sar
add
mov
add
pop
movs
aaa
call
sub
dec
cmps
push
inc
jno
lods
int
cs
push
shl
cdq
sub
adc
jo
out
movs
mov
out
call
ja
aam
xor
gs
iret
addr16
mov
pop
mov
mov
retf
pushf
lods
add
cmps
push
scas
sub
pop
or
mov
hlt
inc
mov
mov
(bad)
mov
fucom
xchg
jp
cdq
sub
jecxz
push
daa
inc
sub
aaa
jo
popa
test
ss
jb
in
addr16
adc
lock
xchg
xor
mov
hlt
xchg
fwait
cmp
ss
jnp
jnp
push
aad
cmp
add
mov
fiadd
mov
retf
mov
mov
cdq
hlt
or
inc
inc
cmps
ins
std
mov
adc
mov
jge
dec
call
jge
jmp
call
pop
jg
add
mov
mov
stos
and
sti
jno
js
repnz
adc
jle
pop
in
outs
addr16
dec
mov
dec
movs
repnz
cmp
not
dec
ret
outs
xchg
xchg
xor
fild
ret
test
inc
mov
or
sbb
into
es
repz
mov
call
in
in
xor
inc
lds
shr
out
push
out
jecxz
lock
arpl
mov
add
rcl
or
out
(bad)
push
sbb
lea
test
test
into
cmps
pop
shl
aad
jno
out
(bad)
ins
push
mov
sahf
dec
dec
lock
adc
pop
adc
push
inc
scas
mov
pop
loop
pop
or
adc
adc
jl
pushf
mov
inc
mov
mov
adc
dec
inc
push
jno
push
mov
and
mov
mov
scas
idiv
call
ret
and
test
loopne
imul
pop
cmp
loope
pop
inc
test
sub
ins
out
mov
and
in
sti
xchg
out
icebp
or
xlat
outs
add
stc
dec
in
push
push
pop
test
xor
cmps
jbe
shr
aas
aam
lahf
xor
push
or
add
cmp
mov
mov
xchg
jb
add
fnstsw
push
sbb
or
xchg
aad
arpl
imul
loopne
ja
inc
mov
popa
jns
push
dec
push
push
mov
out
mov
pop
jmp
adc
pusha
popf
out
cwde
in
dec
pop
fimul
push
sti
add
ins
sub
pop
(bad)
push
scas
and
rol
mov
(bad)
push
cld
dec
xchg
test
mov
or
add
out
(bad)
dec
and
ins
enter
not
jnp
inc
arpl
xchg
pop
or
ins
or
mov
sbb
out
in
nop
xor
dec
js
movs
out
out
imul
dec
push
dec
jmp
mov
jnp
jae
idiv
fldenv
and
call
mov
jbe
adc
in
ficomp
movs
aam
jb
push
or
(bad)
pop
in
lahf
sub
and
pop
dec
adc
arpl
sub
sub
push
(bad)
js
outs
inc
push
movs
pop
mov
and
cwde
and
xchg
adc
cmps
and
cmps
leave
dec
jmp
jle
dec
mov
repnz
dec
jb
data16
mov
loope
push
push
or
sbb
dec
cmp
xor
mov
cmc
mov
jne
cmp
push
sub
adc
mov
cmp
cmp
pop
xor
stc
adc
imul
sub
(bad)
stos
lahf
push
add
cmps
jl
cli
sub
add
jns
cld
leave
cmp
popa
cmp
cmp
aaa
mov
pop
sbb
out
sub
xor
adc
fs
xchg
sub
jmp
mov
ficomp
arpl
xor
out
test
stos
fwait
mov
not
(bad)
sub
icebp
or
(bad)
repnz
push
pop
movs
jae
fcomip
arpl
lahf
ins
cmp
shl
sub
stos
retf
(bad)
jmp
ins
inc
sti
fsubrp
retf
cmp
das
into
icebp
out
int
outs
dec
mov
fyl2x
sub
ins
jp
sub
out
jmp
cmp
fcomp
icebp
scas
pusha
or
les
push
mov
mov
sub
shl
add
mov
add
dec
sbb
ret
mov
sub
pop
popa
ins
sti
lock
or
(bad)
jge
and
enter
daa
jmp
xchg
cld
pop
and
test
jne
into
movs
sbb
fmul
dec
arpl
das
data16
dec
add
adc
sbb
sbb
ja
iret
jae
cmp
aad
hlt
ret
sbb
sti
push
outs
add
inc
mov
sar
push
mov
mov
pop
mov
mov
cmp
repz
nop
or
sbb
add
out
icebp
mov
xchg
clc
cmc
mov
shr
push
sbb
cdq
dec
stos
adc
bound
jns
jecxz
jne
mov
and
test
sub
inc
retf
cld
xchg
sbb
ins
jp
push
cdq
push
pop
mov
dec
mov
call
pop
dec
jg
call
scas
add
addr16
imul
sub
idiv
imul
cmp
sbb
data16
(bad)
xor
std
or
adc
mov
mov
xchg
lds
mov
out
xchg
test
mov
mov
pop
je
scas
clc
retf
mov
jmp
add
sbb
mov
stos
call
and
sub
pop
lahf
cmp
adc
add
mov
xchg
inc
nop
ins
mov
rcl
adc
int3
dec
mov
lfs
imul
test
cs
mov
mov
and
(bad)
out
into
xor
mov
test
pop
fldcw
jge
pusha
sbb
jp
out
cmp
and
aaa
jbe
js
push
xchg
inc
out
hlt
sub
test
inc
push
cdq
sbb
pop
and
dec
faddp
dec
sub
jg
xchg
cli
and
aad
inc
stos
popa
cmp
pop
dec
nop
repz
mov
xchg
or
add
dec
test
and
aam
jo
repnz
xor
xor
push
adc
cld
fwait
aas
pop
add
clc
(bad)
enter
xchg
mov
ins
inc
xchg
or
and
in
jo
ins
retf
mov
mov
inc
pushf
arpl
sbb
and
out
arpl
call
pop
rcr
mov
aam
mov
mov
fdivr
mov
adc
arpl
mov
jmp
cmp
mov
out
and
fsub
xchg
cmp
jbe
and
scas
dec
add
or
sbb
mov
aaa
sub
jbe
ror
jle
and
(bad)
(bad)
dec
mov
sub
call
or
adc
aam
imul
js
push
mov
push
and
mov
(bad)
jnp
fiadd
inc
xchg
push
es
push
or
push
push
and
div
(bad)
cli
pop
or
push
inc
(bad)
fdivr
outs
icebp
popa
jae
inc
mov
hlt
aas
pop
xor
xor
movs
sbb
cs
gs
add
push
call
dec
mov
das
int
sbb
fisttp
jo
imul
or
pop
jmp
and
test
inc
adc
scas
push
sbb
push
test
mov
push
lahf
mov
xchg
xchg
sub
test
loop
inc
adc
sub
ss
mov
outs
or
cmp
cmp
jle
push
or
retf
movs
ret
jl
(bad)
xor
icebp
xchg
or
mov
and
add
ret
jle
cmp
sbb
push
xchg
or
movs
(bad)
movs
add
xor
inc
iret
test
dec
mov
ret
hlt
inc
ror
jns
aad
add
into
arpl
mov
in
(bad)
sbb
dec
inc
or
lock
or
jmp
push
scas
ds
popa
mov
push
inc
mov
inc
jmp
cmp
inc
jmp
inc
dec
cld
js
mov
(bad)
cmp
push
enter
push
jl
hlt
cld
mov
cmc
(bad)
push
sub
shl
mov
mov
cmp
mov
sti
cmp
rcr
mov
add
out
add
pusha
or
dec
sbb
ins
or
test
test
add
stc
add
xchg
ss
lahf
adc
test
lock
push
int3
or
inc
mov
cmp
xchg
(bad)
ja
push
push
jns
sbb
xlat
scas
(bad)
xchg
push
test
lds
mov
sbb
sbb
mov
lahf
push
sub
das
xchg
mov
mov
dec
movs
jg
sbb
pop
shr
lea
mov
ins
add
sbb
mov
cmps
mov
rol
dec
mov
imul
jae
ss
add
mov
pop
push
mov
cdq
push
imul
cmps
data16
ret
stos
xchg
mov
aam
ror
push
mov
xor
jle
cmps
adc
les
fidiv
shr
(bad)
pop
sahf
jecxz
xchg
(bad)
xchg
adc
add
push
dec
(bad)
sub
outs
daa
xchg
xlat
cmp
dec
mov
push
call
xor
cwde
sub
inc
mov
add
push
jno
mov
lds
jp
sbb
xor
sub
xchg
sub
sar
lods
add
pop
sub
sub
jge
imul
or
push
mov
xchg
(bad)
int3
ins
out
loop
adc
(bad)
clc
or
xor
pop
sahf
mov
xchg
mov
into
out
xchg
test
mov
stos
mov
xor
cdq
fstp
mov
sub
push
ja
int3
add
pop
or
enter
xor
cdq
mov
pop
and
in
jbe
dec
movs
mov
test
and
aas
xchg
push
fwait
ret
movs
ret
mov
ds
add
pop
xchg
sub
iret
push
mov
inc
mov
lods
fidivr
dec
add
mov
ins
movs
jae
dec
xor
xchg
ss
and
(bad)
int
mov
pop
add
or
cli
push
mov
call
in
cli
sbb
into
scas
dec
in
aam
lea
xor
jge
xor
push
sub
adc
jb
xchg
not
call
call
imul
inc
imul
scas
scas
or
call
cmp
into
sub
inc
enter
xor
fisub
cli
repz
adc
jmp
jl
add
jecxz
push
dec
dec
xor
mov
pop
dec
aad
aam
(bad)
fldln2
fmul
or
jecxz
dec
sti
daa
fstp
push
xor
xchg
sub
test
mov
dec
ficomp
das
dec
dec
add
int
pusha
sub
stc
leave
clc
sub
or
xchg
mov
mov
dec
push
inc
xchg
or
cmps
aam
jge
xor
mov
outs
jb
lock
test
mov
popf
dec
and
mov
outs
or
pop
jmp
dec
sub
shl
arpl
(bad)
jno
adc
in
jb
xchg
ins
xchg
dec
pushf
pcmpeqb
jno
push
mov
cmps
or
aad
xlat
adc
mov
and
adc
or
out
imul
out
jle
or
jno
sahf
and
add
cmp
jg
sub
xchg
sub
inc
bound
in
cld
and
inc
push
fwait
ins
dec
cmp
xchg
dec
movs
xor
or
cdq
jp
out
lds
ror
mov
popa
dec
icebp
xchg
sbb
mov
jnp
mov
lahf
stos
retf
out
jbe
sbb
fidivr
pusha
xor
adc
ss
repz
icebp
call
add
jp
ds
mov
dec
jns
jno
adc
jle
loopne
fst
test
push
xchg
arpl
cmp
push
push
ins
cmp
adc
scas
std
mov
(bad)
mov
add
sbb
and
dec
test
mov
cmp
aaa
jno
cmps
pop
(bad)
shl
sbb
push
enter
push
mov
dec
lods
sbb
xor
out
in
cmp
popa
aaa
xchg
add
push
jo
mov
int3
inc
xor
out
arpl
ror
sbb
fbstp
inc
mov
dec
xor
ret
cmp
stos
jl
push
or
loopne
test
cdq
ffree
mov
(bad)
push
leave
mov
push
sahf
add
movs
mov
ja
jns
xor
jae
mov
scas
enter
jnp
xor
stos
pop
in
mov
mov
jbe
loope
push
sub
(bad)
arpl
popf
loopne
sbb
imul
inc
jle
inc
repnz
xor
imul
ins
nop
xor
fbld
test
fisttp
or
pop
mov
addr16
hlt
call
and
and
int3
jbe
pop
iret
jecxz
je
ins
(bad)
dec
fst
out
push
xor
fs
(bad)
lods
retf
push
xchg
shl
mov
aas
ror
mov
sub
ins
int3
jne
xchg
into
push
lods
push
popf
mov
sub
test
jmp
leave
sbb
push
jb
xchg
(bad)
movs
nop
or
dec
and
sub
adc
mov
in
stc
(bad)
lods
cmp
ficomp
jp
sub
icebp
mov
xchg
or
stc
jns
jecxz
popa
mov
movs
adc
xchg
(bad)
into
cli
dec
loopne
loop
or
dec
or
sti
push
mov
sbb
sahf
jl
add
sbb
jg
mov
jge
xor
fisub
sub
pop
test
jne
nop
jg
inc
push
mov
fsubr
pop
cld
in
int
dec
mov
sub
adc
cmp
cmp
call
icebp
retf
dec
mov
mov
push
(bad)
movs
aam
lgs
mov
cmp
in
es
push
das
rcl
adc
pop
pop
(bad)
ins
fiadd
fnstsw
adc
test
shr
repnz
jae
adc
movs
push
test
push
shr
cmps
xor
sti
fdiv
aad
mov
movzx
ret
mov
ins
or
and
loope
xor
cwde
cwde
inc
call
jnp
mov
xchg
inc
xor
les
fisub
lods
sbb
ins
jp
stos
inc
retf
fbstp
sbb
jle
lea
and
xor
mov
sar
or
xlat
dec
add
(bad)
mov
(bad)
imul
idiv
mov
xor
pop
xor
inc
pop
or
sub
jmp
fcom
loopne
movs
pop
fs
loop
mov
test
shr
rcl
jno
xchg
or
adc
and
pop
jb
shl
imul
js
and
or
pop
cmp
inc
jmp
arpl
in
aad
js
adc
sbb
xor
jno
es
cmc
sub
daa
lods
xor
(bad)
adc
movs
fisttp
pop
std
jb
cli
fmul
xor
ja
xcrypt-cfb
cmps
out
and
enter
mov
leave
inc
xchg
imul
sbb
rcl
cmp
or
(bad)
push
xchg
pop
xor
adc
sar
pop
adc
xor
ror
cmps
inc
and
lods
push
push
(bad)
mov
cld
mov
sbb
or
cdq
and
test
retf
dec
sbb
adc
fisubr
xor
jg
or
aad
in
jmp
(bad)
leave
pushf
cmc
and
sti
aas
dec
dec
into
cmp
stc
popf
pop
jbe
out
jp
adc
loope
fidiv
fcom
ss
cmp
jno
(bad)
mov
push
jnp
xor
bound
and
cmp
lods
push
popa
or
mov
nop
cmp
jp
aaa
and
sub
push
jg
pusha
sbb
sub
(bad)
js
xchg
mov
mov
jb
xor
pop
sbb
dec
mov
aas
ds
rcr
loope
cwde
inc
(bad)
pop
frstor
bound
push
mov
(bad)
sub
out
xchg
sub
dec
call
sahf
xchg
(bad)
cld
nop
out
mov
xchg
inc
dec
jb
out
dec
ret
call
jg
imul
mov
sbb
(bad)
gs
jo
push
pusha
sub
jno
cmp
mov
dec
ds
sbb
xchg
xor
nop
or
xor
push
cmp
cwde
sub
pop
test
push
cmp
push
scas
arpl
scas
mov
idiv
push
xchg
xchg
cmp
ficom
push
jmp
(bad)
jae
aaa
mov
fcomp
or
shr
fwait
jmp
stos
ret
(bad)
push
push
dec
pop
retf
inc
movs
lock
or
pop
lds
and
jmp
cli
jp
mov
xor
cwde
sub
dec
(bad)
sbb
dec
sbb
cmp
pop
aaa
sub
or
add
hlt
and
cmps
cli
push
or
mov
add
sbb
mov
loopne
add
cmp
jl
sub
gs
loopne
mov
repz
dec
jne
pop
ja
popa
push
(bad)
jne
fst
inc
ins
mov
mov
xor
dec
fisubr
adc
mov
cld
out
jb
inc
mov
mov
mov
(bad)
push
or
fcomp
mov
dec
inc
popf
dec
add
mov
mov
stos
jp
adc
sbb
cli
fidiv
dec
hlt
fadd
jge
stos
(bad)
jg
add
iret
in
cmp
and
ret
add
nop
dec
repz
loop
jo
mov
in
test
sub
(bad)
(bad)
(bad)
lods
push
xchg
es
sbb
and
pop
cmovp
jb
ins
aas
dec
aam
sahf
add
jp
aas
imul
imul
pop
dec
sub
xor
inc
cld
mov
lock
or
call
lods
loopne
(bad)
cli
mov
inc
mov
pop
test
cmp
mov
(bad)
mov
test
pop
xor
sbb
mov
jo
push
hlt
and
int3
push
daa
sbb
and
cmp
or
sbb
adc
push
cdq
sbb
adc
and
mov
stos
xchg
cmp
or
cmp
gs
hlt
outs
inc
rol
aad
push
mov
popf
cwde
and
dec
lds
hlt
sbb
sub
inc
lea
mov
pop
xchg
jge
push
mov
cmp
push
dec
inc
pop
sahf
and
jmp
inc
sahf
xor
mov
(bad)
cmp
xchg
pop
dec
pop
cmp
fdivr
stos
push
and
sahf
repnz
push
mov
cld
lea
cmp
je
or
outs
jl
loopne
inc
out
cld
shr
add
(bad)
jo
mov
dec
rcl
or
inc
popa
or
int
sbb
sub
call
inc
lods
rol
pop
ficom
push
imul
fucomip
pop
(bad)
or
enter
pushw
or
jae
xchg
frstor
(bad)
xchg
cdq
push
xchg
and
cmps
inc
cmps
fwait
imul
adc
jns
jmp
fs
sahf
or
sbb
daa
fiadd
xlat
call
jle
cli
cmp
xlat
mov
je
push
jmp
or
sub
xchg
adc
das
popa
movs
pop
(bad)
cmp
pusha
aas
scas
data16
xchg
cdq
cmp
adc
jbe
jp
xchg
sub
loopne
nop
outs
retf
bound
fwait
pop
mov
daa
push
mov
inc
sbb
dec
push
in
loop
ja
je
jnp
je
in
pop
das
out
cdq
mov
jecxz
bound
push
outs
xchg
imul
popa
es
addr16
sbb
lds
lods
movs
mov
mov
inc
mov
and
and
les
fld
mov
jp
pop
adc
in
shl
or
ret
adc
loop
mov
push
cmc
(bad)
(bad)
cmps
or
jl
retf
enter
and
dec
cmp
mov
shl
or
mov
pop
imul
(bad)
(bad)
fimul
pop
inc
fs
fisub
mov
xchg
shl
sbb
(bad)
pop
frstor
push
sbb
icebp
stos
(bad)
jecxz
xchg
mov
lock
lahf
(bad)
div
cwde
pop
fmul
xor
loopne
push
test
sbb
sub
aaa
(bad)
dec
cmps
clc
mov
jmp
xor
adc
sub
sti
in
in
mov
out
je
lds
mov
fwait
adc
aam
push
add
sub
popf
sub
push
sub
pop
repz
lahf
mov
leave
(bad)
and
fwait
jbe
fnsave
loope
call
push
adc
arpl
(bad)
push
jno
repnz
enter
rcl
pop
(bad)
in
pushf
adc
pop
outs
sub
inc
pop
add
(bad)
mov
mov
sub
cmp
mov
mov
ror
xor
adc
mov
repz
(bad)
jnp
stos
xchg
and
jmp
int
outs
aam
(bad)
aad
icebp
mov
sub
cmc
ret
push
call
add
aaa
mov
inc
stos
retf
push
inc
jle
cmp
xchg
push
stos
in
nop
push
lods
pop
xor
out
xor
mov
cmps
inc
xchg
sbb
mov
mov
sub
mov
jmp
jecxz
sahf
sbb
push
jge
add
out
xor
mov
lods
aad
neg
out
(bad)
call
mov
pushf
(bad)
sub
ins
inc
fisubr
jecxz
xor
adc
mov
add
inc
ret
pop
inc
fsub
scas
mov
mov
inc
and
mov
cmps
xchg
iret
add
cmp
lea
sahf
repnz
(bad)
pop
and
add
push
xor
xchg
mov
and
inc
jbe
jno
stos
test
xchg
jmp
icebp
ds
mov
(bad)
jmp
loopne
adc
cs
and
loope
ss
in
xor
jno
push
ja
xor
fsub
icebp
adc
das
sub
xor
xor
test
mov
inc
adc
push
jle
sub
inc
das
jl
stos
and
jnp
cmp
fs
sbb
cmp
ins
dec
jo
(bad)
js
inc
retf
xchg
cli
or
jecxz
sub
mov
sbb
xlat
add
lods
rcr
jmp
inc
stos
pop
sbb
into
xchg
mov
(bad)
call
(bad)
dec
jmp
stc
or
sub
push
push
xchg
cmp
sub
fstp
pop
mov
and
and
add
inc
rcr
icebp
mov
(bad)
sti
mov
mov
ja
cmova
fisubr
mov
inc
retf
fstp
add
movs
mov
jae
xchg
mov
scas
jae
dec
push
rcr
call
mov
mov
lea
sub
cld
stc
(bad)
jmp
xor
pop
pop
psrlq
mov
das
cmp
or
and
or
add
hlt
es
inc
shl
mov
popf
push
add
(bad)
aas
sahf
pop
pushf
dec
lock
neg
sbb
cmc
inc
loop
jecxz
les
mov
mov
mov
cmps
sbb
inc
mov
(bad)
cli
mov
xor
sbb
or
dec
enter
cmc
not
(bad)
mul
push
xor
not
sti
mov
sub
setl
mov
sub
mov
test
sbb
adc
rcl
jmp
mov
ret
xor
in
or
lock
push
cwde
push
xchg
les
ficom
pop
sbb
sub
push
adc
xchg
and
addr16
jbe
dec
test
scas
iret
xchg
xchg
adc
and
push
stos
lods
shl
ins
stos
stos
(bad)
or
movs
fnstcw
jne
(bad)
and
jmp
fistp
adc
scas
scas
test
cmp
pop
mov
and
out
js
cdq
jp
mov
in
retf
sar
adc
dec
mov
(bad)
xor
jle
xor
(bad)
jecxz
dec
into
pop
or
jge
arpl
dec
lods
jmp
pop
dec
xor
mul
imul
shr
sub
leave
popf
lock
fwait
ja
adc
ret
in
iret
fidivr
adc
scas
sub
arpl
inc
xor
in
jbe
lods
or
pop
push
inc
push
xchg
or
shl
imul
call
out
cmp
mov
cmp
lock
cmps
mov
test
mov
jae
call
add
mov
and
jmp
mov
sub
sub
js
shr
int
retf
sbb
jge
lock
sub
ds
mov
push
or
sbb
out
ret
mov
cmp
jge
sbb
call
ror
jns
pushf
push
cmp
in
sbb
push
mov
xchg
hlt
push
(bad)
mov
pop
cli
mov
call
sub
mov
stc
add
cld
mov
fisttp
cs
add
mov
pusha
jecxz
pusha
into
je
pop
xor
push
and
arpl
jnp
inc
out
aaa
scas
adc
sahf
je
leave
ds
mov
scas
aam
cmps
das
rol
pop
xor
jbe
and
cmp
jmp
push
(bad)
jmp
fcom
sub
rcl
aad
fwait
jg
adc
cwde
mov
cmp
movs
scas
sbb
adc
outs
mov
(bad)
jns
mov
movs
movs
jo
jns
inc
outs
push
data16
or
and
jno
fiadd
cmc
mov
xchg
xchg
aad
cdq
adc
or
leave
ret
mov
pop
dec
jne
xchg
and
jne
dec
inc
into
jbe
in
(bad)
xor
into
cdq
mov
push
stc
sbb
pusha
in
ja
dec
not
loop
test
in
push
aad
hlt
lea
mov
push
push
fcom
adc
test
add
sahf
rcr
out
or
adc
out
popf
rol
repz
push
fild
hlt
mov
lods
push
(bad)
jecxz
ret
mov
jns
ds
jg
(bad)
push
ja
jno
retf
icebp
leave
(bad)
jmp
cmc
mov
push
mov
cmp
or
cmps
cdq
ret
adc
cmp
out
mov
adc
jb
inc
hlt
cdq
add
adc
push
in
mov
xchg
enter
sbb
mov
cs
out
leave
fmul
xchg
xor
(bad)
ficom
aas
push
(bad)
and
rol
jp
adc
sbb
daa
mov
inc
pop
push
loopne
enter
hlt
ret
push
dec
push
bound
or
cmp
shr
aad
push
adc
jns
in
jno
idiv
pop
and
test
pushf
fiadd
int3
repz
and
test
icebp
cli
jmp
pop
cld
das
mov
cmp
lss
call
push
stos
pop
cmp
push
mov
aam
push
pop
lock
adc
or
aad
push
add
pop
jle
mov
fadd
xchg
dec
jle
cmp
push
loope
mov
jbe
cmp
and
push
add
mov
rol
loope
pop
das
or
jmp
(bad)
add
xor
mov
(bad)
scas
add
imul
sbb
pop
sbb
or
or
sahf
test
retf
fcomp
add
xor
xor
daa
out
mov
retf
jbe
and
xor
hlt
fistp
mov
and
mov
fdiv
shr
add
adc
repz
mov
jo
daa
out
test
shr
push
sub
cld
jl
test
dec
mov
mov
outs
dec
cli
enter
(bad)
arpl
adc
dec
jnp
ins
cdq
ret
aad
test
cmp
gs
int
xchg
add
scas
inc
loopne
mov
test
inc
mov
pop
jg
(bad)
loope
lea
add
jnp
adc
cmp
dec
rcr
add
jae
fmul
jmp
cs
inc
repz
push
pop
xor
jbe
jo
pop
pop
gs
icebp
adc
cdq
inc
test
sbb
jp
jmp
cmp
mov
sbb
mov
(bad)
aas
mov
sub
sub
lds
stc
pop
mov
xor
mov
mov
pop
mov
call
loope
adc
mov
xor
mov
jmp
mov
push
cmp
mov
add
or
loope
adc
pop
mov
scas
into
mov
xor
xchg
sub
int
hlt
wrmsr
mov
inc
jg
addr16
(bad)
mov
pop
test
add
push
xchg
sar
sti
jns
dec
and
pop
xchg
and
sub
inc
sub
mov
icebp
and
pushf
mov
inc
mov
outs
clc
ins
aas
(bad)
mov
lock
push
inc
xor
fcomp
mov
xchg
jne
pop
sub
jecxz
push
and
clc
imul
retf
mov
dec
sar
sub
jnp
cmps
cmps
xchg
shl
push
inc
mov
jae
dec
sbb
iret
mov
sbb
loopne
mov
ins
icebp
inc
leave
cmp
stos
mov
and
pop
push
movs
jmp
cmp
int3
outs
sub
cdq
shl
call
(bad)
repnz
adc
into
sbb
adc
retf
add
sbb
in
call
int
(bad)
sbb
jmp
call
pop
adc
bound
in
das
mov
(bad)
outs
mov
add
jle
sub
mov
popf
cmp
(bad)
mov
jns
sub
out
sbb
xor
vpcmpeqb
push
sub
pop
popf
in
fs
push
mov
fldlg2
int
sti
jnp
push
test
outs
adc
movs
mov
inc
mov
aas
fwait
(bad)
outs
sub
loopne
ret
lods
sbb
or
mov
and
or
cdq
mov
ret
mov
stos
or
(bad)
hlt
scas
mov
xor
push
pop
push
adc
add
int3
fs
mov
out
jle
rcr
(bad)
imul
sbb
pop
jmp
sahf
jbe
addr16
mov
xchg
push
out
(bad)
sub
icebp
sub
(bad)
and
outs
sbb
popf
sbb
cmp
call
pop
xor
inc
or
js
sbb
out
mov
mov
inc
and
mov
fild
inc
cmp
fdiv
cli
repz
mov
scas
add
jl
out
add
out
sub
test
std
jb
leave
(bad)
jge
push
movs
adc
jle
in
sub
jmp
ficomp
cmps
enter
out
outs
xlat
test
sub
push
rcl
pusha
ins
and
or
xor
mov
jnp
fld
ss
daa
xchg
iret
not
fbld
cwde
xchg
stos
shr
pop
sbb
(bad)
icebp
aam
fnsave
dec
es
ret
aaa
xor
mov
inc
pop
fscale
push
xchg
xchg
ret
dec
cmps
stos
fisttp
pop
adc
test
stos
jne
lods
nop
jle
xor
enter
(bad)
and
sub
rep
shl
fdivr
pop
mov
sar
pop
outs
pop
xchg
sub
and
test
push
pop
cli
lock
jp
ret
rcl
std
jmp
cmp
fdivp
mov
(bad)
out
push
int
iret
dec
mov
sar
nop
(bad)
dec
pusha
mov
pop
xlat
pop
dec
sub
xor
adc
gs
mov
push
fs
and
std
cdq
imul
and
mov
mov
dec
xchg
out
adc
fadd
cdq
sbb
inc
test
loop
rcr
repz
das
mov
stc
adc
jb
rcr
inc
cs
inc
pop
fsubr
dec
inc
int
xchg
clc
pop
(bad)
mov
fsub
loop
sbb
mov
push
and
sbb
hlt
sbb
test
xchg
xchg
fsubrp
shl
jae
push
xchg
lock
add
cmps
iret
out
arpl
shr
jmp
fs
bound
xor
cli
scas
xchg
sub
mov
sub
ds
add
arpl
les
mov
dec
pop
push
add
es
outs
sbb
pusha
jecxz
mov
arpl
and
sub
or
or
inc
ja
stos
jmp
dec
jo
(bad)
mov
repnz
mov
enter
stc
mov
sub
add
push
mov
fisub
out
retf
dec
inc
mov
imul
ficom
push
repnz
js
pusha
lock
mov
sub
mov
lahf
mov
dec
sub
fadd
and
dec
loope
adc
mov
dec
xchg
test
add
mov
inc
or
add
push
dec
(bad)
stos
push
push
pop
ss
and
shr
add
(bad)
mov
sbb
out
xor
push
jmp
mov
pop
jl
mov
pop
mov
clc
mov
push
movs
mov
xchg
and
push
scas
in
clc
pusha
je
loope
dec
(bad)
call
retf
loopne
jp
inc
sbb
in
sub
push
mov
jge
jns
mov
and
adc
push
jns
adc
fidiv
cmp
not
pusha
xor
mov
add
clc
outs
outs
aas
mov
adc
movs
cld
inc
push
shl
lock
mov
xor
adc
pusha
dec
or
cs
fwait
in
or
popf
sbb
test
loopne
xor
inc
adc
sahf
mov
mul
clc
push
mov
sbb
cli
movs
dec
enter
out
test
fld
mov
add
movs
sub
inc
mov
fwait
test
imul
rol
lahf
mov
mov
inc
mov
cwde
mov
mov
sbb
mov
shl
sbb
repz
cwde
loope
sub
mov
mov
cmp
and
jle
aas
xchg
stos
or
inc
xlat
push
ins
sbb
xchg
movs
cmp
pop
repz
and
sbb
cmp
mov
out
push
bound
pop
stc
(bad)
and
repz
sbb
adc
mov
loop
mov
ja
and
mov
xchg
scas
cmps
push
xor
jl
fs
or
int
xchg
add
in
cld
(bad)
mov
stos
inc
cmp
jne
pop
pop
dec
adc
vshufps
fwait
lock
jmp
out
sub
adc
adc
xor
aam
cmp
enter
add
mov
or
push
jecxz
dec
in
test
ins
pop
sbb
ret
jge
addr16
mov
shr
dec
jbe
fucomi
jmp
or
xor
pop
xchg
lock
jo
or
mov
inc
dec
xchg
repnz
leave
test
imul
cli
jg
ds
mov
push
sbb
lock
(bad)
fnstenv
add
xor
push
in
lahf
dec
mov
add
sbb
stos
(bad)
mov
jl
mov
or
pop
out
jnp
dec
push
dec
jl
adc
test
(bad)
out
lock
xchg
retf
rcr
ret
fbld
cwde
lods
xor
mov
jno
jno
mov
mov
jnp
jno
xchg
test
xchg
repnz
lods
js
shl
(bad)
repz
push
add
outs
icebp
test
mov
sub
dec
pop
or
xchg
cwde
arpl
adc
dec
call
aam
push
push
push
bound
push
loop
xor
cli
pop
xchg
cmps
push
cmp
pop
or
retf
aad
out
cmps
jmp
push
ret
js
stc
cmp
fs
gs
add
push
adc
adc
pop
mov
out
add
popa
add
push
xor
mov
add
in
jge
ins
fwait
xchg
sub
push
mov
jge
or
hlt
pop
jns
mov
ficom
fsubr
lea
movs
cs
push
xor
cs
xchg
(bad)
mov
cmc
rcr
ins
aad
test
sub
or
push
daa
inc
in
retf
push
pop
data16
and
mov
(bad)
test
mov
and
out
call
repnz
(bad)
sar
dec
iret
and
jge
pop
inc
cld
jecxz
adc
push
rcr
jb
sbb
xchg
jge
repz
aad
shl
fnstsw
int3
inc
cmp
lods
data16
cli
mov
dec
(bad)
shl
mov
sar
sub
dec
push
mov
mov
adc
shl
ficom
fwait
in
xor
sub
xchg
bound
aas
pop
sub
pusha
or
test
jns
lahf
jae
cmp
or
push
inc
cmc
push
in
aaa
cmp
fdiv
je
sahf
shr
jl
add
rol
les
stos
sti
(bad)
cld
push
push
adc
data16
test
in
es
test
aas
pusha
movs
push
bound
pop
aad
cld
ss
lods
mov
mov
popf
or
sbb
mov
sbb
sub
iret
mov
add
adc
out
xchg
mov
mov
lods
jecxz
push
pop
lds
lods
ds
add
ja
pusha
cmp
cmp
or
cmp
sbb
mov
dec
xor
add
in
and
icebp
and
inc
sub
cmps
and
loop
lods
clc
mov
sub
out
ja
ss
pop
and
xor
mov
push
test
call
pop
out
sbb
jl
jmp
out
adc
push
aad
adc
dec
sub
inc
pushf
inc
sub
push
retf
arpl
das
push
(bad)
fcmovu
stos
cwde
pop
xor
sbb
jno
and
inc
jecxz
outs
fimul
enter
push
jl
test
xchg
cmps
ret
jnp
and
push
cmp
loop
call
mov
ds
inc
cmp
mov
dec
daa
test
test
je
les
xchg
pop
lods
dec
adc
lods
call
ficom
icebp
push
fcmovbe
out
jl
fsub
retf
mov
or
dec
pop
imul
push
fcmovbe
fist
add
add
sar
xor
sbb
inc
pop
in
je
push
es
and
daa
mov
int3
add
xor
sub
cld
inc
pop
stc
add
out
es
fs
jmp
xor
std
movs
sub
sub
sbb
sbb
scas
ss
retf
or
xchg
mov
adc
dec
mov
loope
pop
movs
jecxz
lods
push
je
adc
(bad)
push
imul
and
mov
out
cmp
aam
ins
stos
or
dec
mov
mov
imul
xor
in
js
(bad)
(bad)
cmc
frstor
dec
sub
(bad)
mov
into
in
push
addr16
clc
xor
shl
jle
pop
jmp
pop
out
lods
xchg
xchg
xchg
and
in
mov
test
dec
cdq
jno
jb
mov
push
in
push
(bad)
retf
hlt
and
xlat
jnp
lods
sub
dec
xor
mov
pop
pop
push
nop
retf
nop
push
and
ror
clc
(bad)
daa
pop
and
scas
cmp
pop
fidivr
stc
pop
cli
pop
sub
inc
add
add
jp
sbb
sub
push
ret
hlt
fisttp
sti
cmova
push
pop
bswap
pusha
sti
cmps
lahf
pushf
xchg
ret
push
push
call
cmp
out
sub
movs
jmp
ss
cmp
inc
pop
movs
mov
dec
and
ins
lock
dec
in
dec
dec
mov
pop
lahf
cmp
sbb
mov
(bad)
pop
cmp
out
pusha
in
(bad)
push
sar
inc
ret
mov
xchg
cmps
pop
jge
shr
stos
mov
movs
or
out
mov
test
movs
mov
cmp
mov
dec
push
call
jbe
mov
push
ins
imul
add
aas
cmp
test
sub
daa
ins
xchg
pop
xlat
test
xor
mov
mov
sahf
xor
xchg
jns
mov
lea
cmp
loop
repz
sbb
bound
jle
pop
out
sbb
dec
sbb
(bad)
push
mov
dec
dec
push
stc
popa
movs
jmp
or
leave
xchg
popa
sub
rcl
inc
add
xor
mov
jg
movs
sbb
xchg
xchg
fstp
shl
mov
(bad)
mov
inc
inc
mov
arpl
das
mov
call
leave
outs
aaa
(bad)
push
sub
rcl
(bad)
scas
jns
pop
cli
dec
push
add
aam
xor
test
inc
adc
inc
in
inc
mov
ja
dec
mov
loope
or
ret
cmps
out
test
sbb
xchg
imul
imul
push
mov
xchg
push
jl
sub
push
mov
stc
push
stc
not
dec
mov
inc
stos
retf
fimul
lods
jnp
and
(bad)
sub
jl
inc
pusha
stos
adc
inc
push
nop
mov
cmp
pop
ret
xor
pop
test
inc
jp
push
adc
jl
or
jmp
in
icebp
mov
and
call
and
adc
aad
call
mov
and
xchg
mov
je
mov
enter
and
pop
aad
mov
xrelease
stc
adc
cmps
pop
repnz
xor
inc
addr16
push
sbb
into
pop
pop
ret
pushf
aas
cmc
bound
test
fcmovnbe
out
pop
dec
(bad)
pop
ror
xchg
mov
adc
cmp
mov
sbb
daa
push
mov
and
mov
jecxz
bound
cli
test
out
inc
clc
fwait
sbb
push
and
inc
lahf
cld
pop
jle
and
sub
xchg
cmp
xor
sti
lods
nop
sub
fsub
and
sub
jmp
adc
(bad)
fadd
ja
adc
test
pop
ror
xor
cli
int
sub
lods
sub
jnp
stos
sub
inc
add
cmp
push
jns
mov
push
imul
ja
mov
xchg
sub
pop
adc
ins
mov
mov
pop
and
test
mov
scas
xchg
ficom
div
pusha
cmp
dec
push
xchg
mov
test
jae
mov
cmp
fbstp
dec
sub
imul
call
mov
sbb
push
fist
xor
unpckhps
test
or
pop
ficom
mov
or
push
xor
and
into
adc
xor
jne
and
shr
xchg
jae
fsubr
fisttp
add
ror
pop
inc
popf
aam
aam
fsub
fucomi
and
xchg
les
(bad)
mov
sub
and
bound
jo
dec
loopne
xchg
jecxz
out
push
aaa
call
out
inc
adc
sub
push
cld
inc
mov
test
int
mov
dec
fldl2e
xchg
mov
hlt
ja
inc
aam
add
xor
inc
push
mov
in
(bad)
cmp
hlt
mov
rcr
or
add
ret
mov
xchg
xor
mov
push
sub
in
pop
std
cmp
inc
push
jmp
ret
loopne
jbe
sbb
dec
xor
sbb
cmp
pop
aad
xchg
xchg
sub
jns
dec
pop
aad
icebp
inc
adc
mov
retf
in
push
cmp
add
inc
add
test
int
dec
inc
pop
dec
icebp
stos
arpl
pop
pop
dec
adc
retf
sahf
adc
jns
call
test
enter
mov
xchg
dec
mov
das
shl
scas
ret
(bad)
lods
shl
call
dec
pop
xchg
mov
jo
fwait
iret
sub
jmp
mov
addr16
hlt
cmp
mov
adc
gs
pop
and
mov
rcr
cmp
adc
and
fcomp
out
(bad)
push
jbe
and
mov
ins
push
jecxz
adc
out
and
fcomip
adc
and
mov
pusha
xor
std
mov
stos
retf
(bad)
mov
and
jnp
pop
fimul
pop
pop
cmp
dec
shl
daa
nop
aam
sti
dec
xor
int3
dec
or
push
enter
idiv
iret
aaa
jmp
sti
mov
mov
sbb
(bad)
lds
cmc
mov
mov
stos
stc
jge
out
div
retf
sub
out
stos
xor
jno
mov
bound
lods
or
jg
push
mov
and
push
push
aam
inc
xor
int3
and
pusha
add
jno
xchg
sub
jp
pop
xor
sub
pop
int
mov
les
stc
loopne
xchg
xchg
test
jge
xchg
gs
test
mov
fidivr
fdivr
in
push
mov
enter
pop
ds
xchg
xor
pop
test
cmp
nop
jmp
cmp
inc
push
ja
sub
(bad)
pop
fisubr
(bad)
int
ror
adc
jp
data16
mov
pop
fwait
xchg
ror
sbb
pop
dec
jae
mov
cmps
retf
ss
clc
sbb
jne
jmp
stos
vhsubpd
push
sub
retf
(bad)
adc
daa
mov
rcr
sti
pushf
push
inc
add
push
mov
in
ret
call
jmp
fild
hlt
imul
pop
mov
sub
mov
xor
sub
shr
add
jmp
jp
cmps
add
ret
movs
int3
and
push
fiadd
pushf
cmp
push
pop
add
cmp
jmp
pop
inc
fwait
stc
(bad)
pop
xor
ss
shl
ja
lahf
inc
std
xchg
mov
loop
aad
repz
lahf
sahf
xchg
lock
test
and
ins
cmp
sub
ss
lods
imul
loop
in
cmps
adc
add
dec
mov
mov
mov
retf
pop
mov
xor
fs
mov
jle
fisubr
test
(bad)
adc
pusha
inc
out
int3
xchg
and
jns
or
enter
aas
mov
mov
cmp
cmc
out
sti
popf
xor
bound
fcomi
out
add
das
or
cdq
inc
test
(bad)
lock
bound
aad
cmp
in
mov
and
jl
pushf
mov
movs
xchg
outs
ror
gs
adc
xor
fsub
adc
(bad)
sbb
loop
jmp
mov
push
mov
adc
sub
or
mov
jmp
mov
cmp
es
iret
xchg
sub
mov
mov
and
cmps
imul
mov
push
mov
ds
xchg
call
lock
leave
loopne
adc
add
sub
repnz
mov
daa
pop
mov
xchg
popa
inc
dec
jmp
push
cs
push
or
test
lds
hlt
add
lea
cmc
push
dec
xor
out
pop
sbb
or
or
xor
mov
std
sbb
adc
adc
ficomp
cmp
test
std
pop
aad
dec
leave
in
out
fwait
loopne
sbb
popa
dec
xchg
mov
cmp
repnz
cmp
enter
mov
outs
pop
mov
push
adc
mov
scas
ds
lods
mov
jecxz
loop
cmp
or
jnp
cli
push
loopne
jmp
lea
adc
sub
cmp
data16
sbb
jnp
in
sub
sub
outs
ror
mov
popa
xchg
and
inc
adc
int
sbb
daa
cmp
les
add
icebp
cmc
cmp
mov
shl
xchg
ret
push
xchg
neg
or
in
push
cmp
xchg
fcomp
ins
retf
addr16
pop
add
xchg
inc
inc
sub
loop
fdiv
cmc
sahf
cmc
scas
arpl
(bad)
jl
push
xchg
test
cmp
sub
dec
dec
retf
jecxz
add
scas
in
mov
push
(bad)
data16
into
ins
rol
cli
sbb
ja
xchg
dec
jmp
lods
out
fild
or
mov
aam
xchg
xor
push
data16
and
mov
repnz
dec
or
sbb
arpl
xchg
and
dec
push
jmp
xor
and
and
xchg
inc
movs
mov
into
mov
rol
icebp
rol
push
add
push
push
and
pop
jl
cmp
leave
aam
ins
pop
(bad)
repnz
mov
cld
std
mov
pushf
pusha
jg
and
inc
lds
push
and
pop
adc
mov
push
cmp
fucomp
enter
frstor
cmp
test
aam
shl
pop
lock
mov
popf
jmp
adc
adc
lods
fwait
and
in
or
les
imul
push
aam
(bad)
mov
(bad)
retf
adc
mov
xchg
pop
sub
mov
sar
fisttp
movs
jl
add
xchg
add
mov
outs
cmp
mov
fwait
addr16
pop
adc
out
jmp
and
adc
and
mov
into
(bad)
or
jns
xor
gs
icebp
int
dec
add
cmp
jge
(bad)
mov
js
out
(bad)
cwde
cs
ds
pop
icebp
bound
xchg
les
repnz
rcr
icebp
cmp
das
sbb
imul
add
lds
xor
ret
push
scas
xchg
leave
es
nop
sbb
adc
dec
dec
in
pop
fcom
xchg
(bad)
sbb
aam
pop
pop
xor
sbb
jmp
jno
scas
dec
loope
cmp
imul
idiv
mov
xchg
ja
pop
sub
inc
ror
jl
rep
mov
mov
add
rcr
(bad)
pushf
xor
test
add
jmp
push
dec
and
and
jbe
out
mov
movs
mov
and
in
movs
daa
test
jo
jmp
es
jmp
pop
inc
(bad)
jg
das
call
es
xor
shr
lock
sbb
xchg
leave
xor
mov
jg
(bad)
sbb
ret
push
idiv
mov
pop
push
push
and
jns
mov
mov
push
test
jno
pop
ins
inc
call
call
add
adc
sub
cli
sbb
jl
imul
xor
outs
push
jnp
pop
adc
imul
shr
and
or
push
arpl
fnsetpm(287
fxch
in
xchg
adc
scas
call
cmp
repz
idiv
test
push
or
mov
out
xchg
adc
inc
test
daa
mov
mov
inc
and
clc
loope
xor
shr
leave
ret
fld
jp
ja
movs
rol
movs
(bad)
fistp
out
nop
dec
retf
mov
mov
jg
inc
lahf
pop
sbb
push
mov
dec
add
jne
sub
mov
mov
pop
cmps
push
lea
xchg
sbb
sbb
pop
xor
leave
mov
mov
dec
imul
and
in
cmp
or
fist
(bad)
stos
in
js
outs
out
cmp
add
dec
out
repnz
sub
popf
inc
ins
mov
push
je
cmp
rcr
pop
nop
xor
dec
xchg
test
dec
pop
dec
test
out
jbe
retfw
fs
leave
sbb
jg
jmp
add
aaa
push
in
and
push
xor
cmp
fcom
in
jge
jl
adc
icebp
imul
or
lods
ret
xor
xchg
pop
ins
push
in
push
inc
xor
inc
shl
cmp
(bad)
adc
push
jns
cmp
pop
outs
mov
xor
jl
shl
mov
mov
pop
mov
nop
pop
sub
mov
ja
adc
ja
ret
test
xchg
mov
pop
xor
jmp
mov
xchg
push
xor
push
sar
xchg
sbb
test
jge
mul
cmova
leave
shr
jl
xor
adc
pop
xor
xchg
push
inc
adc
ins
pop
daa
or
repz
(bad)
aaa
in
daa
int3
add
pop
xchg
add
es
push
cmp
es
adc
in
cmp
iret
adc
mov
out
push
pop
xchg
dec
or
lods
pop
in
jo
fist
movs
xchg
mov
cmc
mov
rol
sub
dec
out
jecxz
add
mov
movs
out
into
fwait
clc
out
mov
stos
gs
test
jmp
xchg
sbb
and
push
pop
pop
xor
sbb
in
jmp
mov
mov
in
cmp
shr
sar
sub
sbb
fstp
mov
or
inc
rcr
cmps
in
push
mov
xchg
addr16
les
xchg
aad
test
jmp
inc
fild
pop
scas
sbb
lods
mov
jae
dec
inc
inc
iret
repnz
popa
sub
loope
test
in
mov
or
loope
adc
in
pop
inc
test
popa
out
cld
adc
imul
clc
push
xor
push
popf
cmc
xchg
xor
adc
mov
mov
lods
sub
mov
mov
push
movs
lock
mov
inc
fidivr
repnz
dec
adc
dec
dec
fwait
jg
adc
xchg
xchg
int
repnz
sbb
xor
push
es
inc
popf
jo
out
ffreep
or
shl
adc
stos
jno
pavgb
mov
sub
or
not
sbb
loope
sub
lahf
call
stc
stos
jbe
xchg
fcomp
js
sbb
imul
or
ja
icebp
movs
inc
jmp
test
out
stos
adc
gs
lods
shl
xor
repnz
push
sub
or
(bad)
dec
lds
jl
sub
jb
call
or
sbb
test
jo
add
or
dec
cmc
or
gs
(bad)
shl
in
es
xlat
sete
out
mov
sti
das
push
shr
outs
leave
out
mov
xchg
and
xor
adc
and
push
out
(bad)
or
ret
mov
int3
pop
sbb
stos
int
mov
rcl
and
dec
loopne
pushf
or
sub
cmps
jle
lods
aas
mov
out
inc
ret
mov
outs
neg
sbb
in
les
ficom
jo
xchg
ins
jp
fistp
movs
dec
inc
mov
adc
addr16
pop
in
jl
push
aad
fucom
sub
cmps
test
iret
cmp
sub
retf
xchg
or
mov
mov
je
jo
retf
pop
fwait
repz
rcr
adc
inc
ficomp
daa
cs
mov
ret
cmp
aad
add
in
js
mov
adc
sub
adc
cld
loope
pop
addr16
fmulp
rol
scas
je
retf
loop
inc
mov
pusha
sbb
add
push
push
push
add
hlt
xchg
push
add
add
les
mov
je
mov
ret
das
sahf
in
cld
out
test
inc
sti
mov
jmp
cmp
mov
jno
cmp
inc
in
ins
xchg
adc
fsubrp
pop
jl
std
push
out
xor
add
call
nop
dec
and
xchg
and
cld
imul
cs
(bad)
fst
sbb
mov
test
mov
pop
add
in
(bad)
push
sbb
mov
stos
xchg
adc
fidivr
sub
mov
test
vrcpps
and
mov
aas
neg
sub
xlat
stc
mov
push
adc
push
stos
jns
fsub
popa
pop
mov
loop
lsl
call
push
fxch
out
xchg
pusha
mov
mov
mov
jmp
sbb
cli
lea
outs
sub
jns
mov
pop
addr16
mov
pop
inc
jge
adc
jmp
inc
mov
mov
push
fidivr
arpl
sbb
loop
movs
and
test
fidivr
xchg
loop
rcl
pop
jmp
(bad)
or
inc
ins
or
stos
dec
shr
sahf
lods
sbb
mov
jmp
aam
and
aam
jns
xchg
add
push
mov
dec
push
ja
jns
cs
lods
data16
std
mov
add
adc
mov
mov
les
jg
ret
shr
cwde
ds
mov
(bad)
dec
add
call
jnp
das
and
bound
adc
sahf
test
std
loope
lods
jge
cmp
push
repz
mov
adc
jne
jmp
adc
aam
dec
movs
pushf
cmp
mov
sar
rcr
icebp
cld
or
jno
push
add
mov
in
jmp
jae
add
outs
or
mov
dec
test
sbb
dec
jl
inc
jle
adc
push
pop
cmp
pop
(bad)
out
xor
sub
adc
ins
jp
std
popf
xor
and
push
gs
or
int
mov
out
fsub
mov
cmps
shl
sahf
gs
adc
or
(bad)
into
push
fld
inc
(bad)
fstp
ss
int
mov
loop
fimul
pop
shr
pop
repz
movs
loop
push
loope
aaa
les
test
lods
ret
dec
sub
sub
mov
cwde
add
(bad)
outs
mov
outs
pop
(bad)
jle
xchg
test
jo
and
cmp
enter
inc
and
ret
and
jne
shl
imul
cld
xor
aaa
xchg
lea
or
ret
ror
and
lea
jo
adc
imul
jmp
dec
xor
inc
sbb
popf
mov
ds
mov
outs
cmc
(bad)
iret
dec
mov
icebp
adc
jge
nop
jle
dec
inc
cdq
xor
sbb
jmp
xor
xchg
stc
ficom
jae
aas
add
pop
mov
xor
data16
(bad)
jmp
push
push
mov
(bad)
fstp
fistp
adc
adc
sbb
mov
ficom
mov
sbb
jno
ret
aaa
scas
mov
enter
ins
mov
jl
lds
(bad)
in
gs
jbe
cmp
dec
ds
xchg
ja
mov
hlt
hlt
jo
scas
mov
outs
mov
mov
xchg
clc
rcr
sub
jl
adc
adc
(bad)
loopne
mov
adc
nop
pop
retf
jle
push
(bad)
mov
aas
sbb
mov
mov
xchg
lods
ja
fs
fcomp
pop
sbb
call
ins
xor
pop
cli
imul
sub
mov
in
bound
test
les
jnp
(bad)
pop
xor
ds
push
mov
xchg
sbb
xchg
mov
cs
fisubr
sbb
inc
lods
cmp
adc
mov
jle
fwait
jg
mov
add
mov
(bad)
neg
push
imul
jg
mov
xor
or
hlt
cwde
sub
and
int
loop
test
dec
adc
in
fist
rol
inc
inc
fiadd
dec
pop
pop
aas
jae
jg
(bad)
lds
shl
fbstp
gs
leave
jb
jno
xor
sub
mov
fdiv
jne
(bad)
mov
test
idiv
jno
loope
xchg
mov
leave
and
mul
jl
bound
jmp
pop
inc
inc
retf
in
loop
add
call
lahf
cld
pop
aad
(bad)
enter
xlat
adc
inc
repz
(bad)
pop
mov
mov
jne
xor
stos
dec
sub
test
and
dec
push
repz
cmps
jmp
sbb
sahf
jle
fsubr
mov
sbb
cmp
scas
fistp
in
(bad)
or
outs
out
popf
fwait
ins
(bad)
(bad)
cmp
retf
ins
mov
and
mov
sbb
dec
dec
cmc
mov
fimul
push
inc
adc
and
mov
rcl
jns
add
cdq
and
jne
sahf
cmp
xchg
sub
lahf
icebp
or
sub
push
movd
sbb
mov
in
xchg
add
cmps
and
daa
and
and
iret
cld
adc
(bad)
icebp
xor
enter
call
adc
mov
inc
gs
idiv
adc
or
cmp
mov
dec
call
pop
ror
movs
jne
jbe
fwait
xor
(bad)
mov
sbb
inc
scas
inc
pushf
sbb
push
xchg
mul
stc
dec
or
cmp
pusha
mov
xchg
int3
in
bnd
(bad)
scas
adc
mov
xor
and
repz
pusha
into
sub
sub
gs
out
push
dec
xchg
ret
imul
ret
mov
xor
cld
mov
cmp
push
xchg
xor
nop
and
sub
sbb
jno
push
adc
dec
inc
fwait
std
(bad)
or
out
ds
jno
shr
fsubr
cmps
jmp
jnp
adc
popf
(bad)
(bad)
xchg
jge
pop
div
fcos
add
fcom
scas
ret
mov
jmp
push
jnp
mov
add
xchg
in
pop
or
mov
mov
dec
imul
pop
or
xchg
mov
mov
dec
into
ja
xor
fisttp
loopne
psubsb
in
repnz
jb
mov
add
sti
stos
push
inc
movs
test
or
pop
and
cli
imul
retf
scas
aad
sub
push
or
xor
push
sbb
les
inc
rcr
mov
daa
loop
add
ins
icebp
cmc
mov
xor
(bad)
pusha
inc
mov
sti
jecxz
lahf
cmps
xchg
out
fcomp
or
mov
cmpps
mov
or
sub
xchg
mov
(bad)
pusha
jl
inc
xor
push
retf
int
rcl
ja
lea
sbb
adc
cmp
out
mov
sub
ds
in
pop
pop
cmp
xor
fucomip
iret
int
(bad)
stos
es
pop
mov
out
mov
or
or
sahf
sbb
ins
inc
mov
jns
outs
mov
sbb
xchg
jg
xchg
jge
test
ret
aad
aam
cmps
adc
and
stos
xor
fistp
not
jle
push
ficom
mov
aaa
jns
(bad)
retf
les
push
test
sahf
ret
push
xchg
jmp
lea
fs
and
mov
and
adc
jl
repnz
jne
ss
out
adc
and
fmul
pusha
push
add
mov
int3
adc
sbb
push
cmp
jg
les
xchg
out
out
jae
mov
mov
add
cmc
call
lds
mov
mov
add
xchg
or
adc
icebp
imul
mov
movs
stc
ja
and
daa
fcmovnb
sahf
int
pause
dec
mov
lea
into
jb
push
mov
sub
sbb
lods
pushf
xor
pop
mov
test
and
sti
(bad)
movs
dec
inc
adc
dec
popf
idiv
rcr
movs
mov
mov
addr16
mov
push
loope
xor
mov
ret
rcl
arpl
test
jle
xchg
jmp
test
inc
dec
or
cmp
add
ret
movs
ret
and
cdq
xchg
iret
ins
mov
push
mov
gs
push
sbb
push
iret
add
inc
inc
(bad)
nop
push
lods
in
dec
ret
sbb
jle
outs
sub
add
mov
push
add
jle
or
or
xor
bound
lahf
test
(bad)
ss
jae
mov
mov
in
call
dec
retf
fistp
pop
sub
daa
loopne
pop
sti
adc
mov
push
mov
inc
sbb
arpl
sbb
mov
out
pop
jae
fs
pop
xchg
movs
jno
gs
lea
mov
jge
sbb
fcomp
mov
cmp
pop
lods
hlt
(bad)
std
das
repnz
dec
jb
clc
jg
mov
mov
enter
sbb
mov
adc
stos
lds
lock
(bad)
sbb
push
push
add
and
dec
push
iret
xor
mov
fs
sub
and
jmp
and
mov
and
pop
fcmovnb
xchg
shl
lods
dec
mov
jo
sub
sbb
test
mov
mov
xchg
jl
jno
rcr
shl
stc
out
scas
and
and
push
test
mov
push
pusha
cs
push
dec
popf
test
jae
fisubr
clc
cwde
mov
ret
adc
pop
pop
jmp
ins
fcom
mov
aad
sbb
call
retf
xor
aaa
dec
mov
(bad)
int
sbb
adc
arpl
int
ds
jmp
inc
fldpi
mov
movs
mov
or
xor
push
outs
aaa
mov
or
xchg
shl
mov
enter
stos
ret
pop
cmp
mov
leave
jne
retf
mov
xchg
mov
pop
sbb
push
mov
das
(bad)
and
sbb
adc
sahf
out
or
call
call
das
push
ins
mov
mov
xor
scas
or
pushf
pop
ins
mov
outs
mov
sub
and
pop
(bad)
sbb
fdiv
push
rcl
test
or
mov
repnz
repz
nop
sub
fstp
int3
xor
in
adc
into
xor
pop
xchg
sbb
mov
mov
test
adc
push
push
lahf
(bad)
leave
es
sub
ror
pop
push
sbb
mul
mov
xchg
dec
jg
push
jl
adc
stc
dec
stos
cli
fdiv
or
popa
add
nop
stc
sbb
shl
and
xchg
mov
fistp
jns
dec
in
fild
rcr
ja
(bad)
(bad)
xchg
mov
leave
aaa
sti
jns
in
xchg
pop
sahf
sbb
jecxz
jmp
inc
ret
xchg
xchg
or
pop
push
cld
inc
dec
push
or
into
into
aaa
push
xchg
sbb
enter
daa
and
dec
pushf
fsubr
mov
and
repz
popa
test
cmp
pop
outs
sbb
mov
shr
jne
dec
cmp
and
mov
push
outs
es
pusha
retf
imul
ret
xor
mov
mov
out
aam
jns
or
dec
scas
das
ja
jns
pop
out
dec
jle
xor
fimul
jne
and
or
xchg
call
fst
je
add
stc
xchg
retf
fcmovne
std
xor
fsubr
add
mov
mov
ss
ss
mov
add
into
movs
jb
xchg
jo
in
mov
jge
dec
jbe
movs
fmulp
and
sub
or
jne
inc
xchg
jp
push
add
seta
push
outs
dec
add
je
faddp
pop
repz
int3
rcr
add
dec
push
pushf
jecxz
push
pop
daa
sub
ret
cmps
fcom
movs
adc
nop
vmovq
std
xor
sbb
daa
jmp
pop
or
clc
push
outs
ss
sahf
int
rol
(bad)
sti
pop
mov
jge
(bad)
push
aas
jle
outs
and
jge
jmp
mov
and
add
push
or
out
push
xor
call
shl
test
jl
push
outs
out
icebp
inc
sar
mov
pop
retf
inc
stc
jae
mov
pop
xchg
mov
dec
jno
rol
and
jae
pop
std
movs
bound
fstp
dec
jnp
into
ror
push
cmc
and
sub
jno
jnp
(bad)
mov
sub
fsubr
cmps
aam
jb
mov
adc
ret
jns
mov
out
xor
pop
and
shl
inc
push
and
or
(bad)
xchg
and
mov
mov
jle
loopne
les
xor
push
daa
fidiv
jl
fs
iret
sbb
jo
ret
dec
shr
out
inc
imul
call
add
push
nop
std
ret
xor
mov
mov
adc
sub
push
cmp
mov
ins
sbb
mov
and
mov
(bad)
jne
aad
or
iret
push
out
(bad)
dec
inc
retf
je
adc
aaa
inc
xor
sbb
xor
cs
pop
lds
ret
xchg
cld
in
push
mov
pushf
push
jns
mov
fidiv
ret
data16
cmp
xor
retf
mov
cmp
in
jns
into
movs
mov
add
jl
jns
mov
bound
and
xor
pop
in
fcom
mov
shl
pop
ins
or
ret
inc
imul
call
or
and
adc
jmp
xchg
(bad)
or
mov
push
imul
sbb
aad
ins
push
ficomp
mov
jnp
stos
out
cmp
out
into
ja
adc
fcom
xchg
pop
push
out
adc
out
rcl
fnstsw
lds
mov
pop
fcmovnu
inc
inc
fdivrp
push
fld
ret
add
ja
and
aas
in
into
pop
stos
xchg
pushf
xor
lea
sbb
lock
mov
ror
jmp
sub
pop
mov
shr
mov
sbb
cmps
or
bound
loope
enter
clc
xchg
add
idiv
adc
mov
dec
cmp
js
stos
sti
mov
sar
les
jge
pop
dec
push
adc
lods
gs
stos
lods
cli
out
ds
cmps
loop
ficom
dec
cmp
mov
repz
mov
ror
xor
mov
push
adc
cmp
lods
enter
add
mov
adc
aas
int3
mov
hlt
mov
adc
test
loope
retf
movs
es
movs
loop
push
sub
iret
cmp
cdq
sub
push
ficomp
ret
pop
add
sti
or
not
dec
pop
push
inc
shr
adc
outs
(bad)
jmp
push
sbb
lahf
lods
sahf
shl
inc
cmps
not
lds
mov
call
iret
repnz
call
pop
cmps
retf
aas
pushf
mov
and
sbb
mov
fadd
xchg
fld
mov
jb
aaa
repz
inc
xor
mov
xor
sbb
jbe
jnp
aad
push
and
push
ret
js
clc
mov
cmp
add
pusha
pusha
inc
mov
xor
or
jnp
cmp
or
hlt
xchg
xchg
xlat
mov
or
cdq
cmp
ja
fst
ins
add
pop
fsubr
push
in
xchg
(bad)
mov
mov
in
xchg
or
sbb
cmp
pop
fist
popf
mov
int
push
pop
outs
pavgb
(bad)
pop
aad
and
mov
stos
ficomp
loopne
je
or
sti
mov
inc
jb
mov
jle
js
jns
call
xor
lea
retf
xor
sbb
pop
cdq
fwait
bound
inc
cli
sar
leave
xchg
lds
pushf
(bad)
cs
xor
lea
hlt
mov
cmp
fnstcw
cmp
popf
pop
push
inc
inc
aad
arpl
in
sbb
adc
ret
dec
clc
cmp
arpl
call
data16
fstp
or
into
mov
and
repnz
mov
xchg
cmp
inc
pop
nop
aad
dec
xor
jne
jae
(bad)
sbb
retf
cmp
mov
jmp
pop
lahf
shr
mov
push
mov
push
js
retf
inc
mov
cmc
aam
jp
and
xchg
test
je
mov
loop
xor
lahf
jecxz
scas
push
pop
aam
or
push
cmp
cmc
push
js
clc
mov
inc
outs
js
pop
imul
ins
xor
or
pop
pop
fdivr
imul
call
adc
push
inc
(bad)
pop
lods
mov
xlat
scas
dec
jl
gs
loope
inc
push
jno
fwait
paddq
call
or
sbb
xchg
scas
imul
ins
sbb
xchg
pop
gs
adc
sub
imul
cmps
sub
add
mov
xchg
mov
(bad)
jmp
pop
gs
sbb
xchg
out
pop
(bad)
adc
mov
cmp
xchg
int
xor
stos
inc
mov
les
and
push
push
cli
std
test
inc
enter
sbb
enter
add
inc
out
xchg
popa
jno
xor
fisub
retf
int
cld
retf
push
jb
mov
or
dec
push
fs
outs
icebp
retf
(bad)
mov
sbb
cmp
sbb
out
ins
retf
xchg
or
sahf
push
mov
stos
or
mov
or
sub
adc
sbb
popa
lods
jmp
cmps
adc
outs
cmps
inc
or
add
aas
fsubr
addr16
sti
(bad)
leave
shr
pop
lea
loop
pop
xchg
mov
mov
dec
shr
mov
jmp
mov
xor
jb
sbb
jmp
dec
push
and
and
dec
in
(bad)
pushf
mov
call
cdq
inc
aad
add
mov
cwde
out
loop
fucom
iret
ins
xor
into
pop
aad
pop
inc
stc
xlat
bound
fnstcw
mov
mov
inc
xchg
int
pop
loopne
sar
jecxz
dec
fadd
cmp
add
jecxz
mov
inc
jo
jmp
and
mov
test
jno
ins
ss
xchg
mov
repnz
daa
loop
icebp
inc
push
retf
lds
and
imul
adc
dec
pop
jl
lods
sbb
je
aad
and
fldcw
je
mov
mov
scas
(bad)
cli
arpl
xchg
xor
pop
dec
ja
call
hlt
mov
push
into
adc
and
mov
push
inc
(bad)
call
movs
rcr
and
cwde
pop
mov
and
fsub
mov
xchg
dec
cmps
mov
jecxz
pop
pop
sti
adc
cli
les
xor
jle
leave
jb
xchg
adc
loop
mov
daa
js
lea
imul
data16
(bad)
test
aam
xchg
pushf
adc
ins
mov
mov
add
(bad)
enter
ret
lds
sar
das
jl
stc
(bad)
out
ins
xor
dec
pushf
mov
stos
dec
icebp
add
(bad)
loopne
dec
or
xor
mov
or
retf
test
push
xchg
sar
fldenv
sub
sub
jmp
xor
add
in
xchg
mov
(bad)
mov
mov
(bad)
ss
jae
push
xor
dec
es
jns
call
ret
cmp
dec
mov
daa
pop
sub
adc
inc
popf
retf
jle
cmp
mov
nop
outs
out
cmp
(bad)
xchg
fwait
add
mov
cli
xchg
push
jae
cmps
lahf
and
cdq
jecxz
adc
dec
daa
mov
sub
lods
popf
mov
push
lea
push
dec
xor
iret
aad
nop
mov
inc
sub
loopne
dec
adc
sub
adc
test
sbb
pusha
in
jo
js
aad
push
arpl
stos
loope
xchg
sbb
inc
into
xor
pop
dec
push
xor
dec
jbe
push
jmp
push
pop
jmp
lods
(bad)
cmc
je
jge
mov
cmc
and
xchg
mov
mov
or
cmp
fmul
mov
push
int
xchg
daa
push
cmp
xor
lahf
push
mov
dec
ret
ja
sahf
or
sub
les
dec
popa
add
xchg
fwait
push
xchg
stos
nop
pop
cs
daa
cmp
and
cmp
lods
jl
sub
(bad)
xchg
stc
cmp
ss
mov
ss
iret
cmps
add
imul
pop
clc
cmp
mov
cli
movs
cmp
sbb
cli
out
add
scas
sbb
push
ss
sahf
pop
imul
add
sbb
mov
xchg
and
pop
mov
mov
loope
scas
stc
mov
ja
call
add
dec
ins
mov
rcr
out
add
xchg
xchg
cmp
add
jbe
rol
mov
shr
(bad)
xchg
sbb
je
xchg
cld
stos
imul
adc
enter
loop
cmps
xor
sbb
pop
pop
cmp
push
call
pop
sbb
ds
jge
mov
nop
or
dec
pop
lds
mov
stos
add
adc
rol
jmp
sub
mov
out
adc
adc
mov
mov
dec
adc
or
gs
jae
(bad)
icebp
out
inc
nop
js
fdiv
pop
inc
sub
popa
mov
outs
stos
out
out
push
aad
ins
and
gs
ja
(bad)
xchg
sub
jge
loop
adc
aaa
xchg
cmps
add
and
push
jg
movs
icebp
loop
jbe
ret
lahf
mov
mov
rcl
retf
or
shr
add
lahf
pushf
mov
jmp
psllq
or
cld
out
jmp
out
jae
or
repz
inc
sub
xchg
imul
jns
or
bound
inc
cmp
mov
mov
and
xor
int3
jns
jno
and
sub
xchg
aad
mov
mov
push
aaa
adc
ja
xchg
push
xchg
mov
sub
mov
pushf
xor
in
addr16
push
mov
ret
repz
lea
cwde
or
jmp
xchg
sub
jmp
mov
cwde
sbb
dec
movs
out
ins
sub
sbb
xchg
add
jmp
pop
in
outs
jecxz
or
mov
stos
xchg
fidivr
lods
lods
mov
ret
and
inc
xchg
psubsw
mov
sbb
sbb
cdq
(bad)
adc
jmp
or
rep
(bad)
xchg
int
pop
fbstp
and
inc
call
stos
(bad)
shr
push
jo
aas
repz
sbb
je
pop
dec
enter
iret
mov
out
add
fcom
pop
add
popa
xchg
pop
jns
out
jecxz
hlt
push
jg
add
mov
inc
lods
nop
(bad)
jnp
loopne
pop
mov
js
or
sbb
push
out
js
mov
jo
mov
aad
scas
inc
data16
fidiv
or
bound
pop
mov
and
rcr
bswap
pop
pop
iret
aas
or
(bad)
fisttp
or
xor
dec
fistp
ficomp
aad
and
dec
jle
cmp
mov
add
ds
jne
(bad)
mov
aas
jae
fiadd
cli
dec
mov
lods
jb
popa
retf
or
jbe
push
ffree
mov
push
add
cli
lds
dec
sub
xchg
cmp
shl
xchg
fld
mov
and
outs
inc
pop
out
push
fcomp
sahf
nop
mov
cld
pusha
cmps
(bad)
cmp
out
cld
adc
adc
(bad)
xor
mov
pushf
mov
mov
retf
cwde
mov
mul
cdq
mov
aaa
invd
mov
into
cmp
pop
pop
dec
loop
js
(bad)
xchg
imul
cmps
jne
imul
inc
adc
lahf
push
adc
in
mov
sub
mov
repnz
nop
push
and
and
loopne
sub
(bad)
or
jle
punpcklbw
or
dec
dec
retf
dec
sbb
xchg
iret
iret
xlat
mov
or
das
dec
cmp
movs
repnz
jg
inc
jbe
pop
in
sbb
dec
mov
sbb
adc
ja
xchg
aas
sub
jle
aaa
fsubr
sub
or
mov
cli
cmp
ins
xlat
addr16
jbe
adc
scas
adc
and
add
iret
or
mov
ss
xchg
in
fs
fstp
jp
ror
mov
imul
xor
xchg
and
push
adc
test
out
cwde
into
or
fdivr
mov
inc
mov
or
mov
jo
jmp
in
cmps
es
or
stos
adc
pop
mov
aam
push
fsubr
pop
leave
mov
outs
ret
xchg
pushf
pop
xchg
jnp
mov
test
push
push
push
pushf
sub
add
cdq
jp
mov
sbb
sub
xchg
sub
cli
popf
sbb
nop
ss
(bad)
pop
sbb
ror
lods
addr16
shl
sbb
jl
pop
jge
movs
cmps
out
inc
jae
push
mov
inc
(bad)
sub
sub
iret
or
jne
pop
mov
cmp
pop
mov
and
inc
push
popf
imul
adc
sbb
cmp
mov
jecxz
and
xchg
pop
out
xor
push
and
dec
mov
mov
or
inc
jg
push
xor
jmp
stos
scas
push
jg
out
ret
sbb
mov
sbb
test
scas
xchg
cmps
mov
popa
mov
call
fsub
jb
mov
mov
fstp
mov
jmp
xor
jmp
jnp
jmp
xchg
xor
ds
pop
ds
push
(bad)
push
mov
sahf
and
sbb
mov
or
in
in
loopne
inc
lds
mov
lods
add
dec
jmp
je
inc
pushf
or
sti
in
leave
push
mov
int
dec
inc
gs
mov
(bad)
sbb
scas
fsubr
adc
jne
adc
push
lods
rol
or
push
jae
mov
pushf
sti
pushf
mov
cdq
in
inc
sbb
cmps
out
mov
and
jbe
pop
popa
sbb
popf
pusha
inc
sar
add
ds
jnp
cmps
scas
scas
mov
repz
popa
jns
ss
es
jle
fiadd
hlt
scas
retf
xchg
push
fist
lahf
jmp
mov
inc
shl
ja
stos
scas
adc
dec
pop
sub
cmp
dec
dec
scas
iret
les
mov
lods
cmps
vxorps
mov
dec
add
inc
mov
or
ret
pop
xor
cwde
mov
sbb
inc
in
mov
imul
mov
test
imul
test
out
es
jp
aaa
mov
lock
pop
cmp
lahf
adc
add
pop
mov
xchg
jg
inc
cld
pop
mov
sub
mov
mov
jo
loopne
jns
pop
cmp
(bad)
add
(bad)
or
or
out
mov
imul
(bad)
les
imul
adc
mov
or
rcl
jmp
cwde
arpl
jae
and
or
pop
imul
cmp
mov
jp
out
(bad)
(bad)
imul
cwde
and
and
lods
jmp
push
inc
outs
sub
daa
push
pop
adc
out
es
sub
inc
(bad)
scas
(bad)
sar
aaa
mov
dec
adc
or
int3
test
aas
cmp
cmp
pop
xor
mov
movs
add
mov
and
ins
fstp
jge
inc
and
jno
xor
jo
(bad)
shl
lods
out
and
mov
add
mov
xadd
cmc
iret
ret
and
xchg
or
push
xchg
fadd
out
pushf
push
stos
out
xchg
xor
mov
push
xor
add
pop
jmp
dec
sbb
jns
xor
stos
jb
ja
mov
push
movs
rcl
fldcw
mov
arpl
dec
jne
cmp
jmp
jmp
mov
add
cdq
test
iret
cld
pushf
jnp
sub
push
pusha
jns
mov
jmp
lods
scas
repnz
inc
push
push
test
mov
mov
test
test
cs
adc
ds
pop
leave
lds
test
mov
fidivr
mov
inc
rcl
mov
stos
nop
enter
push
stos
pop
das
popf
sbb
sbb
inc
xlat
clc
or
scas
test
or
movs
mov
rol
icebp
push
or
xor
inc
dec
ror
mov
sbb
and
sbb
cmps
ins
add
mov
sti
adc
mov
and
mov
das
mov
test
mov
adc
jmp
or
jmp
in
jnp
adc
cld
and
pop
aad
mov
repnz
mov
mov
scas
sbb
mov
fbld
fidivr
add
leave
(bad)
sub
or
xchg
sbb
jbe
push
mov
movs
in
jmp
xor
dec
scas
add
(bad)
cli
pop
pop
xchg
fidivr
dec
dec
adc
xor
mov
leave
inc
jecxz
addr16
xor
push
fwait
xor
popf
cmps
jge
stc
sbb
ret
loop
pop
jle
aas
outs
fs
pop
pusha
jnp
xor
pop
ret
mov
rcr
jge
pusha
cmp
pop
jp
lahf
and
push
mov
jno
aas
push
ficomp
mov
or
(bad)
mov
shl
enter
(bad)
arpl
push
adc
in
jmp
push
lea
repz
ds
sbb
xlat
mov
dec
lea
mov
bnd
jae
iret
and
outs
adc
push
dec
movs
pop
dec
stos
add
push
push
mov
and
imul
push
fcom
cli
aaa
test
and
loope
cmp
push
adc
mov
inc
cli
in
mov
adc
ins
pop
lds
aad
sti
push
dec
mov
dec
aad
mov
gs
pop
push
xchg
hlt
scas
ficom
les
pusha
and
mov
mov
inc
scas
fnsave
and
mov
ds
sub
adc
sti
rcl
div
push
pop
and
xor
push
jg
xchg
push
lock
mov
in
mov
push
int
jae
sub
xchg
fiadd
repz
or
pop
aaa
cmp
cld
sbb
jecxz
add
out
enter
loopne
sbb
loopne
mov
pop
sbb
sub
sbb
jae
cmp
push
call
in
loope
scas
mov
ret
jecxz
jae
popf
sbb
in
jmp
imul
sub
cmp
loop
adc
hlt
cmps
pusha
cmp
mov
stos
dec
loop
xchg
aas
inc
daa
rcl
cmp
mov
xchg
cwde
jae
cmp
pop
stos
ret
xor
sub
and
push
push
imul
pushw
inc
inc
cmp
mov
fmul
xor
add
cmp
mov
inc
popa
fimul
xor
adc
ds
sbb
push
mov
out
sbb
ins
add
dec
bound
sbb
test
xor
imul
and
dec
test
push
xchg
sahf
imul
fisttp
xor
jns
jns
call
dec
repz
push
sbb
adc
cmps
dec
gs
fdivrp
mov
mov
retf
jmp
les
fcmovb
sti
add
ss
fs
mov
inc
inc
fdivr
push
out
and
cmc
pop
out
scas
movs
mov
adc
call
aaa
mov
fwait
xchg
cmps
push
test
ficom
sti
pop
aas
or
int3
clc
(bad)
jne
mov
movs
pop
sbb
jmp
pop
and
inc
dec
lods
xor
xor
es
ins
fcomp
ret
pop
cmp
inc
dec
add
fcmove
push
jne
outs
xor
call
mov
add
in
dec
(bad)
test
sbb
jne
cmps
dec
(bad)
jbe
pop
inc
sub
xlat
mov
sub
pop
ins
add
xor
dec
xchg
ja
in
mov
jge
hlt
icebp
or
loopne
mov
fldenv
les
dec
push
push
mov
push
or
xor
ja
test
mov
cmps
div
add
lahf
sar
out
push
pusha
xor
into
loope
ins
out
jecxz
mov
cmp
xchg
cdq
lea
ret
movs
cdq
push
iret
pushf
mov
arpl
test
mov
lods
inc
jmp
mov
push
sbb
adc
fmul
ret
cmp
stos
dec
ja
loope
aad
sar
cmps
pop
sbb
stos
imul
int
pop
cmp
es
cmp
sbb
sahf
hlt
cmp
(bad)
sbb
xchg
adc
or
(bad)
addr16
mov
xchg
dec
pop
hlt
gs
xor
loope
xor
ret
sub
in
cld
jnp
fld
jl
popa
addr16
sbb
jl
aad
repz
cs
jne
xor
push
cmp
push
stc
push
jae
inc
pop
jp
and
pop
retf
xchg
(bad)
(bad)
pop
rol
push
jae
aam
mov
hlt
ins
sbb
inc
ror
inc
adc
scas
ret
aaa
sahf
(bad)
cmps
xchg
pop
stos
sbb
pop
call
adc
pop
and
mov
dec
xchg
sbb
pop
out
xchg
jg
pop
fucomp
jl
push
mov
outs
fndisi(8087
jmp
push
pop
sbb
adc
cwde
adc
aas
daa
jnp
push
aas
rcr
dec
mov
int3
dec
(bad)
ror
add
cli
pop
popa
rcr
mov
shl
jne
out
xchg
sbb
pop
dec
sbb
or
dec
enter
dec
gs
loopne
mov
jae
fcomp
lock
loopne
rcr
sub
sub
loopne
dec
xchg
not
inc
mov
jp
cmc
ja
rcr
jno
sub
cdq
and
mov
lahf
and
(bad)
sbb
or
mov
retf
push
mov
dec
in
out
push
aaa
pop
loop
aas
test
adc
fdiv
popf
stos
sar
mov
pop
stc
stc
cdq
jae
cmps
inc
inc
mov
std
and
rcl
iret
mov
dec
and
pop
sub
or
cmp
xlat
dec
in
icebp
push
ins
xor
ret
cmovp
or
std
mov
jae
xchg
jno
jmp
inc
js
pop
cmps
pop
jmp
push
mov
cmp
mov
leave
cs
test
adc
push
pop
mov
bound
stos
sub
mov
aam
xor
mov
pop
les
aad
arpl
pop
ret
push
arpl
xchg
dec
xor
fmul
daa
xor
pushf
push
jmp
inc
cmp
nop
or
jne
and
inc
xor
or
and
lea
xor
cmp
mov
mov
aaa
jg
mov
dec
add
ror
pushf
test
pop
pop
jmp
sbb
xchg
ins
(bad)
or
inc
push
push
int
inc
(bad)
add
icebp
in
(bad)
xchg
push
test
std
dec
stos
fstp
or
std
pushf
pushf
retf
sub
inc
cmp
out
shr
add
dec
leave
test
add
int3
imul
inc
mov
sub
cmp
pop
jb
popf
imul
adc
inc
aam
jo
mov
call
pop
pop
sub
dec
cdq
jns
stos
pop
mov
dec
std
inc
dec
icebp
dec
adc
add
cmp
or
je
inc
or
les
mov
cmp
mov
(bad)
xchg
add
fs
mov
fisttp
sub
sbb
mov
stos
mov
sbb
jmp
jecxz
dec
push
cli
aas
xchg
add
and
test
es
sbb
in
out
gs
push
loope
(bad)
ins
test
jo
ins
call
test
push
cld
jmp
push
in
mov
icebp
or
jo
adc
and
sahf
or
and
xor
inc
or
push
mov
jl
and
sbb
push
in
lahf
retf
pop
fbld
fucomp
jbe
fidivr
fidiv
push
fwait
cmp
stc
xor
mov
aad
mov
inc
aas
mov
jecxz
or
lahf
out
cwde
pop
ud2
dec
dec
sbb
mov
loop
test
shl
idiv
ror
sub
add
pop
test
clc
lods
adc
ret
adc
outs
std
xor
fmul
mov
add
sub
push
inc
xchg
dec
jne
or
test
and
out
or
scas
stc
sbb
jmp
lahf
outs
call
cmp
ins
push
out
xchg
cdq
das
mov
frndint
addr16
movs
test
test
dec
jge
jmp
sbb
cmp
push
jg
cmc
stos
pop
call
sub
push
out
fimul
cwde
sbb
or
cmovs
sbb
or
mov
mov
xchg
cs
mov
ror
xor
into
jae
jmp
pusha
inc
jp
data16
jg
xor
pop
fsubr
inc
xor
jp
cli
adc
adc
scas
bound
into
fist
sub
dec
sbb
test
dec
pop
inc
mov
pop
push
xchg
pop
mov
sub
das
xchg
(bad)
adc
loop
and
addr16
inc
xchg
sub
xchg
clc
inc
mov
dec
std
inc
pop
mov
out
test
das
sbb
sub
push
shl
cmp
mov
xchg
cmp
xlat
into
or
jns
or
dec
popf
and
mov
fcomip
popf
push
into
lahf
pop
cwde
stc
xor
fld
xchg
or
cwde
retf
sub
in
cmc
addr16
xchg
mov
add
mov
in
xchg
sub
enter
inc
pop
test
sbb
xchg
in
arpl
sbb
test
dec
sbb
stos
imul
jo
sar
sub
in
inc
jmp
adc
xor
fist
pop
stc
mov
dec
adc
mov
and
inc
xor
pop
jecxz
mov
and
mov
ud1
inc
mov
das
mov
pop
mov
je
adc
es
int3
sub
jg
or
cwde
dec
push
sub
addr16
jecxz
mov
inc
xchg
pop
or
xor
mov
leave
sbb
adc
xchg
fldenv
push
popa
(bad)
imul
imul
inc
sub
sbb
(bad)
shl
xchg
mov
inc
ins
dec
pop
icebp
pop
cmp
out
lahf
sbb
nop/reserved
test
cwde
out
inc
loope
mov
push
fidivr
ror
aas
xchg
pop
mov
das
adc
cmp
add
jno
sbb
dec
je
out
mov
test
push
sub
xchg
inc
das
mov
mov
mov
movs
add
(bad)
ss
icebp
sub
xor
repz
cmp
dec
jbe
push
pop
mov
inc
mov
pop
int3
pop
cmps
sti
test
cdq
inc
out
fild
jg
pop
ss
test
xchg
jmp
add
xor
in
xchg
push
cmp
dec
sahf
and
sub
ret
in
jmp
ret
ror
out
xor
mov
sar
mov
xchg
fbstp
sub
out
jo
int3
or
pop
aas
sar
scas
out
addr16
sahf
fdivrp
cmp
cwde
adc
cmp
jnp
into
ins
fisub
sub
mov
sbb
mov
sub
or
addr16
ins
and
aaa
dec
jg
cld
adc
test
jecxz
movs
dec
pop
clc
(bad)
xchg
fnstsw
push
jecxz
jns
jne
sti
xchg
and
pushf
cmp
(bad)
bound
jne
mov
dec
cmps
jo
in
adc
je
daa
adc
sbb
adc
mov
push
fisttp
retf
loop
ret
and
push
xor
mov
fsub
mov
dec
lods
pop
xchg
pop
jle
xor
push
and
add
mov
(bad)
mov
sbb
into
xor
sub
mov
pushf
add
arpl
push
push
push
jno
(bad)
fdivr
das
sub
dec
in
push
add
(bad)
fsub
mov
addr16
loope
mov
(bad)
cld
sub
push
movs
jmp
mov
mov
dec
iret
popf
fidivr
mov
cmp
xor
cmps
movs
pop
retf
dec
inc
fistp
pushf
add
(bad)
mov
or
rcl
ds
sbb
jns
mov
dec
and
mov
cmp
lahf
test
test
ret
inc
sub
add
int
aad
xor
stos
(bad)
es
scas
push
repz
cmp
ds
nop
xchg
popa
push
clc
pop
addr16
xor
inc
jns
cmp
push
dec
js
addr16
fwait
adc
(bad)
jne
inc
sar
sub
outs
sbb
pop
mov
out
inc
outs
push
in
push
cmps
sbb
movs
jnp
mov
xchg
cs
adc
jmp
or
jmp
cmps
(bad)
test
popa
pop
mov
outs
in
pop
push
mov
fadd
cdq
cmps
inc
shr
cmp
mov
int3
loopne
mov
xlat
(bad)
xchg
movs
enter
div
adc
or
xchg
sub
cmp
in
push
iret
das
repnz
pop
rcr
dec
cmp
out
imul
jnp
movs
xlat
in
and
mov
cwde
paddw
add
cmp
inc
sbb
and
mov
jp
movs
movs
xor
loope
addr16
iret
jb
or
(bad)
cmp
and
pop
mov
xor
hlt
cmps
xchg
mov
scas
fwait
xchg
int
cmp
movs
into
sub
cmps
xchg
xchg
enter
out
stos
outs
ficom
retf
mov
or
mov
dec
and
xchg
jns
int3
mov
cmps
aam
pop
adc
push
loope
dec
scas
fild
mov
inc
fcmovnu
test
outs
xchg
jae
xchg
pop
mov
pop
jge
std
mov
ss
test
add
call
ss
jle
lea
test
mov
mov
mov
mov
mov
add
push
push
jnp
pop
aaa
nop
fdiv
pop
dec
mov
xor
shl
push
sti
inc
cmp
inc
pop
mov
xchg
inc
mov
pop
xchg
fidivr
mov
push
mov
sbb
scas
es
mov
xchg
aas
and
dec
dec
xor
and
sbb
jbe
push
ja
pushf
enter
jmp
inc
sbb
jmp
push
xor
mov
sub
xchg
push
movd
(bad)
test
inc
xlat
mov
dec
jmp
js
add
retf
sub
or
xchg
and
imul
iret
enter
ret
dec
mov
sbb
sub
imul
xor
adc
xchg
mov
sbb
sar
in
scas
(bad)
ins
cdq
dec
mov
test
xor
mov
and
pop
fbstp
outs
mov
sub
adc
jb
fadd
mov
stc
or
sbb
in
sbb
call
ins
loopne
mov
pop
xor
add
pop
scas
xchg
arpl
repz
adc
(bad)
icebp
xlat
aaa
aas
push
xchg
into
mov
mov
and
add
cld
pop
pusha
scas
fisub
xor
shl
or
adc
mov
dec
jmp
jb
jbe
cmp
jbe
push
scas
sub
or
and
movs
test
(bad)
pushf
sahf
adc
test
pop
and
pop
mov
inc
pop
das
adc
add
stos
inc
sbb
les
aad
das
call
lods
mov
mov
xchg
clc
aad
icebp
dec
imul
in
imul
ret
mov
xchg
and
int3
(bad)
cmp
pop
cdq
xchg
mov
pop
ja
jo
test
repnz
mov
pop
jmp
and
jecxz
push
mov
lea
popa
(bad)
call
add
call
mov
aas
ret
ret
mov
iret
in
enter
rol
lock
inc
in
xor
mov
pop
lock
fwait
xchg
in
cwde
dec
sub
lock
adc
push
rol
idiv
popf
std
mov
popf
cmp
addr16
mov
(bad)
dec
fwait
sub
and
(bad)
iret
adc
retf
ds
fwait
shl
inc
push
andps
bound
mov
mov
xor
stc
jg
push
test
(bad)
enter
subps
daa
inc
jge
adc
pop
pop
pop
sub
mov
cmps
adc
arpl
mov
in
push
test
lock
std
mov
cmp
lahf
adc
mov
enter
fdivrp
sbb
sbb
dec
jmp
fwait
xchg
test
lods
outs
ret
(bad)
jns
(bad)
sub
pop
mov
xchg
aas
pand
add
mov
adc
sub
scas
sub
ins
mov
jle
add
inc
add
in
pop
dec
bound
fwait
outs
aas
(bad)
sub
rcr
mov
jg
pop
sbb
mov
jnp
fndisi(8087
xchg
pop
and
push
dec
sub
shl
fimul
imul
jo
dec
dec
mov
clc
inc
pop
pop
xchg
mov
inc
cmp
rol
ds
inc
push
sbb
or
jo
add
ficom
aam
icebp
aas
adc
cld
push
fisub
sbb
adc
sub
mov
and
cdq
cmp
add
mov
and
ins
jl
or
add
sub
cmps
sti
dec
(bad)
inc
xor
outs
add
rcr
push
fs
fs
(bad)
cmc
pop
call
jo
mov
ins
push
xor
sub
ds
ins
or
cld
adc
(bad)
cmp
xchg
aad
xchg
cld
in
sti
or
shl
cmp
and
sub
inc
jbe
mov
cmp
aaa
jne
sub
xchg
sub
loope
jne
nop
mov
push
cmp
ja
inc
fsub
cmp
sub
icebp
test
mov
loopne
cmps
mov
push
lahf
pop
or
call
pop
enter
dec
in
cmp
push
pop
cli
pop
aas
mov
sbb
add
adc
mov
dec
mov
(bad)
stc
ins
sbb
imul
and
and
scas
sti
jle
add
lods
repnz
mov
shl
lock
inc
mov
sub
loop
test
int
out
frstor
jns
jb
or
fild
sub
mov
cmps
mov
pop
inc
addr16
mov
enter
in
fld
jb
iret
inc
push
jne
push
xchg
jg
cmpxchg
dec
das
dec
lea
rcl
loopne
push
stos
xchg
or
push
xor
ret
je
and
je
add
imul
jle
leave
lods
push
ins
jae
xchg
dec
(bad)
or
adc
jne
push
mov
scas
mov
lahf
pusha
(bad)
loop
pop
stos
aas
or
(bad)
aaa
jnp
jl
dec
sbb
adc
ror
and
mov
fisubr
adc
ds
nop
std
scas
in
and
inc
scas
mov
inc
cmp
gs
push
adc
(bad)
adc
mov
fs
push
add
ins
jns
mov
mov
fsubr
fwait
adc
sub
imul
hlt
enter
push
sti
test
mov
loope
add
cmp
scas
sub
cmp
fucomip
add
fwait
dec
out
fadd
jb
xchg
imul
std
in
xor
hlt
pop
shl
mov
mov
(bad)
(bad)
cmc
pop
mov
pop
sub
add
ret
nop
push
das
cmc
or
shl
cmc
and
xchg
pop
dec
test
lods
(bad)
jbe
sbb
mov
add
sub
pop
stc
adc
in
hlt
ror
push
(bad)
stos
xchg
jg
gs
cwde
xchg
sbb
mov
cmp
(bad)
xor
jne
int
pop
cmc
mov
fidivr
iret
out
mov
sahf
call
int
and
mov
cs
mov
js
cmps
rol
aas
mov
push
push
jge
push
push
pop
icebp
adc
jl
mov
paddsb
cmps
pop
add
or
addr16
cmc
iret
add
jp
cli
ret
inc
sub
and
lods
sbb
lods
test
aas
mov
cld
out
mov
mov
adc
adc
add
dec
sub
xor
hlt
in
jmp
add
and
outs
pop
fnstenv
inc
cli
outs
xor
dec
jge
imul
mov
inc
imul
inc
imul
cmp
xchg
loop
sub
sbb
xchg
fnstsw
aaa
loope
bound
lods
outs
ss
jbe
add
add
add
xor
or
out
int3
js
ret
push
mov
call
(bad)
loop
pop
inc
lods
movs
scas
shl
push
fcom
fcom
ins
inc
cmp
pop
loopne
outs
sub
jge
das
aas
inc
clc
pop
push
xor
lock
or
ret
movs
popa
ja
jnp
pop
push
lods
fsub
jg
jg
pop
add
cli
hlt
cmp
out
test
fimul
inc
add
pop
xchg
dec
cmp
call
mov
sub
mov
call
and
rcl
push
nop
ret
rep
xor
cmps
inc
bound
inc
sbb
inc
jnp
xor
(bad)
mov
sub
jae
shl
into
repz
cmp
push
mov
in
xchg
cmp
scas
mov
jbe
pop
sub
aad
ret
cmp
cmp
mov
shr
jnp
clc
jl
xor
add
add
cld
sub
jae
fwait
mov
repnz
or
inc
(bad)
cli
in
mov
push
repz
mov
ret
std
nop
out
add
push
lea
mov
xor
add
stc
or
div
and
repz
jb
lock
in
jge
and
test
ins
push
pop
add
inc
mov
ret
xor
mov
mov
fidiv
inc
and
pop
xchg
dec
jmp
mov
mov
mov
mov
dec
inc
cmp
jp
(bad)
lock
cmp
fucomp
ret
ret
mov
pop
out
jmp
and
popf
mov
gs
push
sbb
rcr
inc
pop
repz
jnp
out
mov
inc
jmp
adc
(bad)
test
sbb
add
push
mov
rcr
adc
ins
in
shl
add
cmp
in
pop
jecxz
add
push
movs
cdq
push
sbb
js
shl
(bad)
mov
mov
test
cmp
pop
fistp
adc
addr16
in
and
aad
(bad)
std
pop
push
mov
jae
sub
jecxz
movs
xchg
and
dec
xor
cmp
and
icebp
cmp
cwde
loop
push
cmp
push
dec
xchg
or
pop
(bad)
mov
xlat
mov
xor
push
mov
jg
enter
dec
sbb
push
inc
in
mov
mov
pop
aas
inc
push
dec
test
das
dec
ss
gs
mov
retf
repnz
push
pop
adc
jmp
add
ret
movs
adc
mov
movs
cmp
icebp
sub
mov
push
jmp
jae
mov
xchg
fisubr
inc
outs
in
daa
scas
jno
xchg
mov
es
sbb
imul
aas
pmovmskb
pushf
sub
sbb
sbb
hlt
pushf
pop
ret
adc
ret
or
and
push
add
mov
popa
cmps
and
fcom
mov
ret
pop
ss
inc
jmp
das
adc
mov
and
movs
mov
cmp
mul
cmp
fisub
paddb
lea
loop
mov
test
daa
sbb
pop
rol
in
push
aad
loopne
es
jg
sbb
xchg
sub
inc
(bad)
adc
ins
pop
add
int3
or
pop
shl
dec
shl
out
pop
stos
mov
test
imul
pop
mov
push
dec
(bad)
cld
imul
enter
dec
inc
mov
repz
ins
arpl
lds
dec
push
push
fdiv
out
xchg
dec
cdq
in
ins
xor
rol
xor
mov
sub
jle
arpl
inc
adc
jns
dec
cld
repnz
in
out
cwde
adc
mov
pop
sar
shr
retf
push
fs
pop
out
rcr
cwde
push
lock
xor
cmps
fdivr
ret
or
sbb
cwde
icebp
mov
aaa
gs
shl
cld
mov
pop
pop
pop
scas
jp
mov
inc
pop
out
daa
cmps
pop
xlat
mov
in
arpl
(bad)
call
and
xlat
icebp
dec
dec
xlat
outs
sub
adc
xchg
fnstsw
mov
dec
pop
add
adc
xor
cmp
push
push
clc
pop
pop
mov
scas
outs
dec
js
pop
push
inc
int3
mov
mul
jb
pop
and
fsubr
cli
dec
mov
mov
dec
jbe
imul
lahf
or
xor
and
das
sbb
cmp
adc
iret
xor
mov
ror
and
ja
out
add
mov
rep
push
inc
popf
and
dec
mov
mov
je
dec
push
rcl
inc
mov
jecxz
add
ret
mov
fistp
push
ds
inc
add
mov
sub
aad
pop
mov
popf
lods
add
and
jmp
mov
sub
out
push
cmp
jmp
mov
or
xchg
pop
dec
push
popf
movs
dec
add
lods
call
mov
push
mov
daa
icebp
call
ret
sbb
push
push
sub
rcr
clc
push
cmp
jg
movs
scas
mov
mov
or
lds
mov
inc
or
push
test
xchg
pop
mov
movs
sbb
sbb
mov
std
int
repz
push
jecxz
mov
loop
xchg
aam
in
mov
cmp
push
sub
fidiv
xor
mov
pop
adc
xor
cmp
pushf
cs
and
test
jo
inc
cmc
xor
jg
push
lea
push
and
add
pop
mov
add
dec
jmp
add
pop
jbe
mov
pushw
outs
xor
mov
pop
inc
dec
(bad)
stos
rcl
mov
repnz
xor
add
cdq
and
sbb
jbe
pop
nop
sbb
sub
pop
add
mov
inc
cmp
and
in
inc
clc
not
dec
sub
mov
imul
imul
pop
jmp
stos
or
mov
fnstenv
sub
imul
xchg
imul
aam
xchg
stc
push
inc
xlat
add
jp
ins
dec
mov
sub
aad
adc
push
pop
mov
test
mov
adc
dec
jle
pop
push
pusha
push
(bad)
cmp
scas
xlat
mov
ins
aad
jl
cdq
nop
cld
shr
lea
adc
mov
psllq
mov
outs
movs
mov
inc
je
(bad)
popa
retf
inc
mov
pop
dec
or
das
jle
cmp
test
xor
mov
push
fadd
arpl
jnp
loope
jg
pop
adc
cmp
sbb
or
call
outs
ret
jl
cwde
jge
jmp
ja
dec
das
(bad)
sub
cmp
es
pusha
ds
sbb
dec
xchg
nop
fcmovu
mov
and
into
sbb
shl
adc
int3
and
daa
add
sbb
pop
movs
dec
pop
push
mov
jp
pop
ret
sub
fld
jg
jg
push
data16
mov
sub
out
imul
jmp
xor
arpl
fwait
aam
sub
stos
enter
test
inc
aam
adc
imul
mov
mov
sbb
loopne
je
out
inc
inc
retf
cmp
inc
add
arpl
cmp
jbe
dec
push
jb
cwde
loopne
pushf
popa
loopne
and
sbb
mov
das
mov
inc
lahf
push
jecxz
jo
cmp
(bad)
retf
and
sar
arpl
xchg
rol
add
jb
push
or
dec
les
xor
fist
shl
scas
xor
stos
nop
imul
jg
xchg
and
adc
inc
dec
add
out
fnclex
sub
aaa
cmp
pop
or
pop
and
das
cmps
addr16
push
push
jbe
aad
fwait
mov
sbb
sti
adc
mov
cmp
cli
(bad)
cmp
(bad)
cmp
and
sub
(bad)
and
adc
scas
cmp
cmp
pop
jne
jno
mov
pop
sar
or
inc
pushf
pop
sub
jl
dec
rol
fld
outs
pusha
je
loopne
sub
pushw
paddusw
jbe
arpl
mov
ret
arpl
or
ror
retf
inc
(bad)
getsec
imul
call
or
mov
es
fnstenv
inc
cld
xor
ret
std
lods
mov
cdq
(bad)
jle
ficom
xchg
outs
out
add
push
add
push
dec
movs
mov
cld
lahf
add
(bad)
and
mov
lods
jmp
xlat
out
mov
jmp
mov
cmp
daa
mov
fstp
ror
retf
arpl
lods
jae
mov
jmp
pop
and
out
or
xor
inc
inc
repz
(bad)
sbb
xchg
adc
adc
test
add
sahf
mov
rcl
(bad)
sar
outs
ds
or
cdq
stos
(bad)
scas
mov
ror
ret
in
adc
push
xchg
sbb
mov
fwait
jmp
pop
fwait
(bad)
adc
ret
hlt
fnstsw
pop
mov
mov
lods
or
mov
add
test
mov
out
std
sub
(bad)
xchg
ret
das
jmp
mov
mov
mov
out
mov
inc
dec
pop
sub
in
mov
pop
fild
adc
jne
cmp
mov
daa
shr
jecxz
jmp
scas
nop
fsubr
ins
or
xor
dec
ins
imul
pop
jle
xor
fcomp
dec
inc
or
ret
cwde
pushf
leave
inc
add
clc
mov
(bad)
jmp
add
cld
ror
and
sub
adc
stos
mov
mov
pop
jae
div
into
ret
xchg
add
gs
outs
mov
pop
jecxz
test
pop
(bad)
icebp
bound
inc
stos
cmp
add
rcl
nop
xchg
popa
cmp
pop
data16
pop
test
(bad)
cwde
dec
adc
cli
adc
out
xor
je
mov
call
jle
bound
xor
fnstenv
mov
fs
sbb
pop
xchg
jge
push
jae
or
push
xchg
jns
outs
and
sbb
popf
call
push
retf
imul
mov
cwde
pop
adc
in
cmc
loope
xor
dec
push
movs
pop
ins
xlat
jae
out
cld
fnop
xor
mov
adc
lods
pop
pop
pusha
sbb
movs
imul
sti
adc
ret
fld
sub
mov
inc
lods
or
pop
ret
not
or
stos
xchg
jecxz
in
aam
clc
jge
or
sbb
sub
and
xor
retf
lock
pop
sbb
test
add
lods
in
pop
outs
shl
rep
cmp
dec
cli
mov
sub
test
mov
xchg
sub
pop
sar
jbe
fwait
and
xchg
pop
mov
rol
sub
xchg
mov
push
or
loope
outs
jl
jmp
xchg
adc
stos
call
outs
ins
(bad)
nop
aad
repnz
push
jnp
(bad)
in
push
or
jg
dec
cld
loope
xchg
adc
xor
test
imul
lahf
rol
adc
sub
cmc
div
push
add
pop
pop
outs
mov
jmp
js
sbb
data16
in
fcomp
ins
sub
jmp
mov
mov
mov
push
push
jbe
add
push
(bad)
aaa
cli
xchg
ds
cmp
jl
sub
adc
lahf
xchg
repz
mov
and
or
pop
jmp
test
iret
inc
ja
or
mov
jmp
sahf
jp
int
sub
outs
rcr
(bad)
ins
or
fisubr
loope
sbb
xchg
and
rcl
call
push
rcr
mov
and
cli
xchg
fstp
mov
mov
cld
xchg
sbb
mov
jg
pop
and
and
sub
xchg
mov
leave
inc
sub
jp
scas
ret
lods
retf
jbe
mov
in
test
sub
test
pop
mov
cmps
stc
imul
jo
inc
fdivrp
lods
mov
or
adc
jbe
lods
leave
imul
aaa
movs
sbb
and
push
pop
add
mov
push
mov
sub
mov
xchg
push
jbe
jo
in
shl
jno
call
push
pop
jbe
push
(bad)
aad
xor
xchg
inc
ins
popf
dec
xor
jecxz
pop
sbb
sbb
xchg
xchg
push
pop
jge
cmp
dec
ror
js
pop
add
mov
ja
test
push
ror
sbb
fist
adc
dec
leave
scas
lahf
enter
ja
retf
in
scas
inc
mov
loopne
mov
imul
cmc
sahf
or
iret
or
sub
push
into
and
lock
dec
dec
and
(bad)
hlt
rcr
inc
fld
(bad)
cmp
inc
cmp
clc
(bad)
mov
push
or
xor
jne
pop
outs
loopne
popf
(bad)
and
fcmove
push
ins
out
(bad)
adc
add
push
cmp
fadd
lock
jo
mov
mov
out
in
bnd
cmp
test
rcr
or
jb
xchg
scas
repnz
or
xor
ds
loopne
movs
aas
pop
cmp
stos
mov
aad
das
xor
stc
mov
lds
test
inc
mov
and
or
lods
pop
and
jnp
(bad)
mov
push
nop
repnz
int
or
inc
stos
dec
jb
mov
or
dec
dec
movs
inc
clc
adc
cmps
pop
and
sbb
mov
scas
sub
addr16
xchg
mov
dec
sbb
outs
shl
lea
cmp
outs
pminub
(bad)
icebp
jecxz
lods
or
rcr
mov
push
lahf
xor
mov
ret
add
sbb
stc
mov
mov
ds
cmps
mov
adc
pop
pop
dec
in
jno
cmc
popa
mov
inc
aam
dec
ds
sbb
mov
adc
xor
lock
not
adc
push
(bad)
data16
jle
push
in
and
mov
lock
jno
cdq
xor
sbb
sub
fdiv
push
mov
repnz
aam
aaa
lea
sbb
pop
(bad)
fwait
test
(bad)
into
mov
ss
sbb
jmp
jp
in
dec
add
add
add
xchg
inc
mov
jb
or
stc
pop
jno
dec
jo
sub
mov
ror
and
sar
mov
push
dec
push
add
or
adc
out
stos
push
cs
jne
sbb
rcl
(bad)
fdivr
xchg
jp
ja
mov
in
push
jmp
mov
inc
fidiv
push
daa
lds
loop
mov
imul
and
fdiv
in
push
pop
or
jno
and
xchg
or
shl
mov
push
movs
fisttp
arpl
out
xchg
pop
loopne
(bad)
jg
neg
mov
out
popf
(bad)
xchg
loop
pop
push
cmc
test
enter
imul
mov
out
stos
scas
sub
push
dec
mov
mov
pop
or
jmp
push
loop
or
mov
loop
inc
jge
xchg
cmova
push
mov
pushf
popa
add
dec
int
aad
push
or
pop
retf
movs
xchg
out
dec
in
lahf
mov
ja
mov
cmp
into
mov
dec
scas
cmp
fstp
xor
cmovle
fs
sbb
loopne
fidivr
test
and
dec
mul
xchg
and
xchg
stc
sub
sub
fisub
jno
popa
jo
dec
jb
daa
test
gs
retf
sbb
loop
xchg
mov
xchg
mov
nop
push
cmp
scas
xchg
imul
cld
sub
test
jecxz
rol
and
outs
xor
cmps
push
sbb
mov
add
sbb
shr
mov
and
dec
sbb
aam
jb
push
int
pop
jne
dec
and
or
push
adc
mov
in
loop
nop
jno
pop
pusha
call
dec
clc
push
outs
xchg
lahf
leave
(bad)
dec
iret
or
xchg
aad
mov
sar
(bad)
inc
dec
cmc
call
mov
call
push
jbe
fidivr
stc
test
(bad)
retf
mov
shr
retf
je
inc
addr16
iret
sar
sub
mov
mov
fldcw
xchg
push
ja
xchg
adc
fisttp
adc
pusha
sahf
adc
mov
mov
cld
cmp
sbb
inc
(bad)
(bad)
xlat
xchg
xchg
out
lods
inc
sbb
adc
inc
jbe
mov
aaa
leave
jmp
cmp
pop
jp
es
adc
call
xor
mov
in
fldenv
inc
pop
pop
stos
pushf
in
fcomp
sub
mov
jmp
in
xchg
icebp
push
adc
xor
lods
mov
mov
icebp
stc
test
mov
(bad)
int3
xchg
add
retf
clc
pop
mov
cs
cmp
xor
shr
pusha
adc
and
mov
adc
fstp
sbb
iret
dec
push
cmc
pop
sub
sbb
pop
mov
sbb
aaa
das
jg
mov
out
jb
call
and
arpl
in
in
or
mov
xchg
push
dec
movs
sub
call
(bad)
addr16
dec
sbb
sub
lods
dec
cwde
jb
mov
cmp
dec
jbe
xor
fisttp
push
push
bound
push
push
rcl
add
xor
cmp
(bad)
dec
inc
pop
pop
pop
jnp
mov
cmp
dec
popa
lahf
inc
push
sahf
leave
pusha
dec
scas
ret
mov
inc
adc
inc
push
dec
and
xor
dec
push
xor
push
test
fs
daa
arpl
pop
mov
xor
fsub
in
arpl
loope
aas
sbb
ret
mov
mov
arpl
arpl
add
fs
das
xchg
stc
push
or
mov
pop
rol
adc
mov
mov
dec
xchg
add
add
mov
or
sub
pop
push
aad
pusha
imul
lods
in
cmovp
ret
cmp
jno
pusha
(bad)
fist
rcl
or
icebp
inc
cs
push
inc
sbb
retf
mov
sub
scas
test
icebp
cmp
inc
mov
or
inc
sub
iret
and
(bad)
imul
(bad)
aaa
in
jp
sar
push
stc
jno
cld
pop
gs
imul
sbb
jno
rcl
adc
imul
into
(bad)
mov
bound
aas
es
loop
pushf
add
popa
mov
jb
enter
int3
scas
pop
xchg
push
(bad)
cmps
shr
movs
ficomp
or
aas
repnz
adc
mov
hlt
sbb
into
call
jg
jmp
cdq
fild
es
outs
cmc
das
lds
jae
out
xor
jbe
(bad)
pushf
xchg
cli
retf
xchg
daa
inc
mov
sti
sbb
in
mov
imul
fild
push
push
xchg
ror
or
add
(bad)
rcr
out
stos
pop
push
das
ret
cmp
sub
aas
pop
(bad)
sti
fisubr
add
jno
xchg
pop
sub
in
pop
lods
rcr
jge
in
inc
jae
imul
xor
adc
popa
push
add
cmp
mov
pop
add
jmp
xchg
sbb
cmp
xor
pop
xchg
cmps
repz
mov
pop
mov
sub
mov
mov
xchg
sub
(bad)
xor
mov
sub
rcr
gs
pop
pop
push
jmp
call
jge
loope
dec
cld
gs
xchg
pop
dec
test
dec
sbb
test
sti
ja
mov
cmp
mov
pusha
(bad)
xchg
popf
jg
in
ins
icebp
sti
mov
ret
aas
jmp
into
jmp
cmps
fisubr
xchg
(bad)
mov
or
cmc
adc
enter
sub
mov
int3
popf
pusha
xor
out
mov
mov
push
into
mov
enter
adc
xor
cdq
xor
inc
in
sub
adc
js
pop
retf
js
mov
inc
stos
ret
jmp
cmp
sub
cmc
push
ret
outs
(bad)
test
test
mov
sbb
mov
mov
cmp
shr
cld
movs
rol
mov
sub
and
mov
cs
jg
data16
ret
lds
xor
jnp
inc
mov
sub
add
cmp
push
dec
aam
xchg
out
mov
push
pop
out
repnz
rol
or
fcomp
pop
in
dec
jmp
jno
pop
fidivr
mov
nop
adc
cmp
imul
mov
ds
sbb
mov
lods
inc
xor
shl
sar
popf
add
xlat
dec
loop
push
lea
xchg
sbb
push
je
fidivr
adc
push
push
movs
mov
aaa
or
in
sub
outs
cmp
xchg
repz
cmc
fistp
pop
in
jno
ret
mov
xchg
sub
push
sbb
jae
fdivr
fs
call
sbb
mov
idiv
aas
sub
push
(bad)
jg
dec
nop
cmp
and
push
sub
inc
inc
aaa
xchg
ins
xchg
add
mov
ja
mov
and
push
and
fmul
inc
(bad)
or
pop
xor
rcl
scas
cwde
mov
fld
int3
outs
cmp
fwait
sbb
arpl
pop
mov
call
sbb
nop
imul
add
into
push
lods
in
mov
test
push
or
mov
push
inc
add
add
gs
dec
pop
push
pop
cmp
ds
sbb
push
mov
arpl
and
or
dec
inc
out
xor
cmp
call
sbb
pusha
ins
cld
movs
sbb
adc
xchg
and
loop
iret
pop
jae
push
cmc
mov
lods
test
mov
cmp
cmp
dec
adc
sti
iret
xor
and
sar
div
jp
push
call
pop
fist
iret
dec
adc
inc
and
and
or
cli
pop
dec
movs
hlt
stc
sbb
loope
sbb
push
imul
pop
(bad)
hlt
leave
add
mov
jns
iret
(bad)
cli
jmp
jb
cmps
sti
hlt
sub
add
ins
pop
cmp
add
and
mov
mov
add
(bad)
outs
lock
into
push
xor
xchg
mov
lahf
inc
or
daa
push
xor
mov
cmp
inc
mov
(bad)
sub
sub
gs
addr16
mov
data16
jmp
and
rcr
xor
adc
fstp
sub
leave
fisttp
call
mov
test
pop
sub
jnp
pop
cs
ins
test
(bad)
mov
icebp
mov
push
mul
rcr
pop
jg
or
cmps
adc
in
xor
and
inc
push
sbb
and
inc
lods
cmp
nop
pop
lock
xchg
fbld
sub
sub
push
adc
out
mov
or
fcomp
inc
fdivr
idiv
movs
pop
and
enter
sub
in
cmp
out
sub
mov
call
dec
jae
ja
push
add
ror
or
push
iret
add
jle
fimul
test
dec
inc
addr16
fsubr
jle
das
jg
int
les
and
loop
retf
not
mov
add
scas
cmp
mov
push
fnsave
cli
sbb
int3
add
fld
rcl
inc
mov
sbb
call
fwait
ins
add
hlt
hlt
es
in
in
xchg
stos
xor
xor
xchg
pop
icebp
icebp
or
inc
dec
addr16
mov
xor
jl
das
outs
outs
(bad)
xlat
cmp
test
imul
mov
aam
add
xchg
lods
jbe
mov
(bad)
mov
mov
adc
lock
ss
fstp
scas
or
pop
js
shl
jp
ret
aas
and
movs
loopne
mov
lea
(bad)
sbb
pop
cmps
xchg
add
idiv
leave
pop
neg
rol
in
rcr
popf
inc
mov
in
add
sbb
cdq
in
adc
test
jmp
int
sbb
sbb
jmp
mov
mov
and
xchg
(bad)
push
cmc
fnstsw
jle
leave
or
pop
xchg
add
xchg
xor
lea
repnz
xchg
gs
sbb
jb
push
xchg
popf
dec
mov
mov
(bad)
out
nop
ficom
outs
sti
popa
call
shl
mov
sub
cmp
pop
xchg
xor
sub
cmps
stos
jge
stos
pop
mov
data16
adc
shl
jnp
out
pushf
mov
pop
add
jg
inc
cmp
xchg
and
ret
ficom
lods
ins
sub
lods
int
je
shr
lea
mov
pop
jmp
or
xor
ins
pushf
mov
iret
test
sbb
idiv
or
jae
cli
iret
mov
add
add
loope
mov
mov
ds
fstp
mov
(bad)
test
mov
outs
dec
xchg
add
inc
retf
sti
pop
cs
and
add
push
nop
(bad)
mov
dec
std
shl
or
ss
fist
sbb
cwde
(bad)
ret
or
push
adc
sub
mov
xchg
js
pop
jb
popa
inc
repz
mov
push
fcom
sti
push
xchg
mov
not
jmp
mov
ins
dec
push
add
fmul
imul
and
mov
add
xor
rol
dec
jl
sub
xor
(bad)
in
push
xor
fild
pushf
dec
fst
xchg
imul
out
(bad)
push
sub
sti
xchg
aad
aaa
leave
pop
iret
inc
sbb
movs
xor
push
rol
loopne
fwait
(bad)
jge
fwait
loopne
enter
test
test
arpl
mov
ss
cmp
into
xor
mov
data16
xor
hlt
imul
mov
js
jnp
icebp
dec
mov
pop
lods
or
out
or
push
inc
pop
rep
pusha
sbb
hlt
shl
pop
movs
adc
xor
xor
xor
retf
mov
test
daa
adc
mov
ror
inc
sahf
dec
cmp
es
inc
push
fwait
add
add
jmp
mov
jmp
add
add
pop
push
outs
repnz
aas
jge
faddp
les
lds
ret
sub
mov
stos
cld
sar
cmp
daa
fs
push
mov
xor
int
adc
inc
push
and
pop
push
jbe
aam
pop
inc
popf
add
ja
jl
out
adc
xor
aad
push
rcr
push
retf
xchg
xchg
pop
jb
and
in
cmp
movs
dec
in
sbb
dec
test
mov
mov
inc
shl
sbb
imul
mov
sub
push
arpl
int3
outs
inc
cs
and
movs
sub
sub
out
inc
pop
adc
imul
mov
xchg
sub
rcl
sbb
sbb
sbb
das
retf
daa
sub
out
enter
xor
pusha
jo
mov
or
mov
(bad)
scas
(bad)
in
xchg
js
clc
cmp
inc
jbe
div
mov
add
pop
in
jg
add
inc
movs
std
jnp
loop
ds
cs
jl
jge
pop
inc
add
push
in
sbb
add
sbb
jne
aad
xchg
outs
fld
int
or
xlat
dec
xor
stos
sub
xchg
repnz
push
inc
xchg
sti
xchg
std
jae
leave
jmp
lods
xchg
out
ins
sbb
int
dec
jns
arpl
pop
adc
pop
shr
fnop
dec
jmp
jmp
cmp
cmp
xchg
jmp
add
sbb
dec
fmul
inc
retf
imul
jl
mul
imul
mov
(bad)
loop
pop
jmp
leave
jmp
lds
aaa
dec
mov
jle
mov
scas
repz
pop
or
cmp
in
cmp
xor
inc
push
rcr
cld
dec
arpl
mov
mov
(bad)
(bad)
adc
jg
aad
ror
paddw
xchg
or
mov
movs
dec
call
outs
sub
mov
shr
mov
pop
(bad)
mov
div
or
xor
xchg
mov
int
inc
sbb
daa
ds
jo
fild
nop
mov
out
out
sub
xchg
cmp
arpl
movs
jg
xor
or
fidiv
sub
xchg
and
sbb
xor
cmp
fadd
pop
mov
stc
cmp
xor
push
pop
es
or
jnp
(bad)
add
mov
imul
cli
mov
mov
inc
pop
jmp
je
dec
jge
add
(bad)
fcom
jnp
dec
push
call
sub
cmc
mov
mov
mov
and
outs
hlt
mov
stos
pushf
and
pop
into
test
or
hlt
icebp
mov
push
sub
movs
das
or
pop
mov
aad
xor
push
fwait
sar
mov
mov
les
cld
inc
div
xchg
movs
jp
and
push
mov
mov
xor
ins
lds
mov
and
fbstp
shl
xchg
aas
in
cmp
xchg
fs
fst
sar
pop
test
cmp
sbb
and
inc
mov
mov
mov
jmp
inc
mov
or
icebp
int3
push
xor
mov
sbb
xor
cmp
ds
fsub
push
mov
in
adc
cmp
or
xor
mov
pop
(bad)
sub
(bad)
jns
(bad)
in
jae
jp
sahf
xchg
jle
in
dec
hlt
push
int
scas
out
mov
jb
or
mov
ds
xchg
mov
sub
leave
jbe
jbe
pop
sbb
jo
inc
in
jmp
push
xchg
int3
adc
cmc
xchg
inc
(bad)
xchg
add
das
enter
(bad)
out
iret
lods
and
inc
inc
and
mov
outs
cmp
sbb
hlt
repz
sbb
test
and
dec
pop
inc
xor
jo
mov
imul
mov
mov
xchg
mov
stc
test
leave
rol
popa
adc
xchg
fistp
sub
dec
xor
sub
cmp
sub
int3
int3
mov
sub
add
add
push
aas
in
in
fnstcw
inc
pop
sar
lock
mov
aas
sub
add
in
mov
sub
xor
push
inc
inc
inc
(bad)
cld
les
popf
(bad)
xor
xchg
out
lods
cmp
das
jmp
xor
out
sub
cmp
and
push
push
mov
iret
mov
xchg
ret
(bad)
jle
dec
and
pop
jmp
sbb
cwde
and
mov
xor
adc
and
mov
in
mov
xchg
ins
(bad)
sub
gs
out
out
test
popf
pop
sub
mov
jae
imul
outs
jo
test
sahf
xchg
mov
mov
or
shl
aad
pop
pop
out
fdivrp
cmp
(bad)
pop
sbb
ins
gs
cmp
dec
inc
fwait
cdq
sbb
clc
jecxz
pop
scas
call
cwde
sub
icebp
mov
xor
aaa
dec
xchg
push
cmp
retf
cmp
pop
push
xor
ds
mov
pop
(bad)
xchg
es
mov
sar
mov
fwait
mov
jecxz
jecxz
fisub
xor
shl
sbb
test
adc
rol
sbb
ror
int
adc
cmp
ja
adc
jae
test
and
int
int3
jle
je
and
repnz
jae
jno
adc
xor
mov
stos
ds
call
adc
(bad)
lahf
retf
fisttp
leave
xchg
aas
adc
push
lods
out
pop
js
cwde
mov
mov
cmc
call
dec
xor
jb
and
mov
jge
clc
pop
loope
movs
outs
out
in
fs
inc
inc
xor
daa
push
pusha
ss
(bad)
push
push
mov
mov
dec
push
sub
dec
or
lods
mov
push
mov
sub
cmps
loop
lods
je
stc
xchg
imul
cmc
cmp
popa
and
push
aam
aaa
xor
xor
pop
ret
add
inc
daa
das
imul
pusha
mov
ja
fs
adc
ret
(bad)
scas
mov
lock
test
add
adc
(bad)
adc
sbb
in
loop
add
rsqrtps
jns
cmp
mov
aas
adc
int3
mov
jae
aam
mov
das
fcomp
jge
pop
out
xlat
shl
mov
cld
sar
sahf
arpl
push
adc
pushf
(bad)
push
addr16
lea
loop
jnp
inc
aad
shl
xchg
in
inc
xchg
xchg
sub
adc
mov
outs
leave
out
push
dec
loope
fwait
and
add
rcl
mov
jmp
pop
sub
pop
pop
adc
in
xchg
aaa
mov
or
xchg
sub
cdq
jno
push
inc
rol
sub
adc
out
pop
inc
inc
sbb
lods
and
out
imul
(bad)
xchg
dec
jae
mov
add
ins
jl
pop
(bad)
out
push
int
aas
cld
pop
cld
xchg
add
enter
jge
std
lea
push
ror
and
push
ret
sahf
lea
sub
cdq
(bad)
jg
orps
movs
retf
pop
(bad)
jge
mov
and
lea
lea
(bad)
jge
loopne
sbb
into
jns
int3
mov
popf
je
test
xor
push
in
adc
sub
rol
jp
pop
comiss
call
jg
shl
jb
cmps
cdq
aaa
stos
add
xor
sbb
test
pop
nop
jecxz
int3
mov
cs
cmp
mov
rcr
lahf
and
xchg
xchg
sahf
mov
xchg
lahf
and
push
jo
clc
inc
retf
cdq
call
pusha
cmp
(bad)
test
daa
js
jo
cmp
shl
ret
xor
stos
mov
mov
sbb
mov
sbb
bound
imul
push
pop
jp
ret
sub
add
pushf
jmp
and
mov
addr16
inc
(bad)
sub
fisttp
jmp
adc
sub
mov
into
ins
inc
add
or
or
adc
lahf
mov
jb
add
xchg
xor
add
js
cmp
scas
xchg
unpcklps
dec
std
cdq
aam
sti
jle
or
xchg
gs
and
pop
call
(bad)
jne
sbb
cli
jnp
fmulp
push
out
xchg
inc
cmp
pop
jge
jle
test
xchg
out
icebp
mov
sbb
mov
sar
sub
fcmovu
loopne
lahf
push
sbb
inc
mov
and
arpl
or
xchg
sti
mov
adc
jo
dec
push
mov
pusha
stc
clc
cmc
and
int
add
push
push
jno
fwait
mov
imul
idiv
inc
rcr
int
or
popa
jnp
jl
shl
pop
int3
mov
pop
fnstenv
adc
and
mov
cmp
std
sub
call
lock
loope
call
fadd
int3
or
jno
popa
adc
jbe
push
inc
add
scas
fistp
ins
shr
xchg
dec
mov
movs
nop
and
mov
jae
dec
mov
xor
jecxz
xchg
ret
gs
ror
jns
shl
int3
and
jge
adc
aaa
xchg
or
push
pop
retf
or
movs
inc
inc
sub
cmp
and
mov
mov
sub
ficomp
xchg
jecxz
mov
inc
inc
(bad)
(bad)
ja
mov
arpl
cld
push
push
inc
popa
out
ret
pop
inc
ret
jnp
cmp
fmul
add
push
mov
pop
les
(bad)
fnsave
pop
mov
fldcw
push
lock
shl
and
push
sbb
mov
dec
cmps
dec
xchg
push
push
push
fld
sbb
mov
mov
imul
mov
adc
cmp
xchg
lds
cmp
mov
lds
out
push
loopne
push
sub
jns
repz
push
mov
sar
mov
or
fwait
pop
ins
add
mov
pushf
idiv
call
pop
and
jo
aam
xchg
ja
or
call
sub
add
cdq
sbb
and
xor
or
ffreep
cmps
push
jp
out
jmp
xlat
leave
push
push
ins
in
repnz
or
jl
leave
mov
fdiv
fstp
push
sub
push
xchg
rcr
push
out
inc
rcr
xchg
push
inc
scas
inc
xchg
(bad)
out
hlt
fchs
inc
nop
(bad)
(bad)
mov
aas
and
sar
xchg
xor
inc
fisttp
aam
pop
cmp
xchg
pop
pop
jb
fisub
mov
call
pop
inc
in
push
cmp
xchg
aam
mov
jmp
call
and
outs
push
cmp
imul
adc
push
cdq
cmps
cmp
or
adc
repnz
sahf
mov
push
jg
and
mov
sbb
sar
push
mov
mov
fdiv
push
add
mov
mov
lock
or
pusha
mov
imul
pop
jnp
stc
mov
mov
jecxz
test
ds
xchg
mov
cmps
je
and
repnz
sub
and
and
lahf
pop
cmps
sub
js
(bad)
xchg
and
lmsw
stos
mov
or
mov
test
aad
or
mov
fwait
jb
test
xlat
lock
adc
mov
mov
js
call
fmulp
cmps
adc
cmp
mov
(bad)
aam
ins
jle
ins
imul
adc
loope
sahf
mov
lea
sub
mov
mov
daa
sbb
xor
pop
jmp
add
dec
mov
pop
out
add
jge
cmps
jmp
push
repz
test
sbb
xlat
fwait
rep
inc
mov
aaa
lahf
(bad)
xlat
ja
mov
lea
popa
cmp
push
xor
aaa
arpl
or
je
hlt
mov
ror
mov
ins
and
ss
and
sub
pop
(bad)
sub
jmp
enter
or
in
add
pop
popa
adc
xchg
leave
mov
retf
or
popf
sti
and
and
ss
rol
mov
pop
mov
pop
and
add
and
sub
or
xor
or
xchg
push
(bad)
pop
rol
fs
push
dec
inc
lahf
ja
stos
push
scas
(bad)
mov
mov
mov
aaa
sbb
mov
xor
sub
jle
pop
mov
call
mov
jecxz
ins
arpl
or
inc
int3
rol
sahf
sbb
mov
daa
mov
cld
leave
mov
mov
ret
push
push
fwait
adc
sbb
pop
add
(bad)
sbb
adc
add
jns
iret
jno
(bad)
retf
mov
jle
data16
xor
mov
daa
sar
es
or
jge
xor
ins
jg
dec
or
retf
jo
sbb
or
push
mov
fsubrp
or
push
in
stos
cmp
push
mov
lds
aad
cmps
outs
cmps
jmp
neg
es
or
jmp
fisub
mov
dec
(bad)
div
dec
pop
mov
pop
loope
not
mov
or
sub
inc
add
inc
mov
inc
sbb
sub
into
jns
movs
adc
imul
sahf
cmp
ja
xlat
lahf
into
outs
xor
dec
and
popa
in
retf
enter
pop
mov
or
test
jle
sbb
xor
js
mov
add
dec
ret
mov
fs
in
stos
xchg
xchg
mov
and
or
rcr
sub
mov
fdiv
push
xchg
das
vcvttsd2si
or
imul
dec
inc
xchg
adc
mov
hlt
add
cmp
mov
or
adc
mov
loope
cmps
stos
cli
pop
hlt
stos
retf
mov
imul
jns
in
je
sbb
pop
inc
xor
xor
test
inc
ficom
add
mov
je
push
lea
icebp
cmp
js
push
ins
inc
and
ficom
mov
retf
inc
pop
xchg
push
pop
and
scas
dec
mov
or
pop
ins
lea
dec
jnp
fs
mov
ret
retf
cmp
jmp
jbe
imul
gs
sar
xor
pusha
loope
and
inc
mov
sub
dec
inc
ins
(bad)
daa
mov
leave
cmp
xchg
xchg
in
jb
sti
jmp
or
stc
scas
rcl
fnstenv
mov
cmc
add
push
push
pop
daa
rcr
aaa
lahf
mov
push
fild
cmp
sub
xor
fidivr
push
dec
lahf
cld
out
(bad)
es
rcr
mov
pop
push
adc
mov
add
ror
jmp
push
les
test
sub
out
sub
cdq
push
or
xor
in
loopne
xchg
mov
adc
fdiv
mov
sub
adc
pop
sbb
cmc
fs
sub
jae
dec
or
jbe
nop
pop
cmc
dec
add
dec
psrlw
(bad)
stos
add
and
mov
cdq
jns
xchg
mov
pop
cmps
fistp
push
or
add
sbb
sar
inc
sbb
leave
jge
loope
rol
shr
xchg
popa
ret
scas
cmps
ds
pop
shl
dec
xchg
popa
out
es
mov
pop
bound
jmp
mov
call
push
xchg
push
add
pop
and
adc
cmp
retf
call
jns
mov
cmp
shl
out
xor
movs
fdivr
xchg
or
xchg
jle
push
fs
movs
sbb
lods
fimul
sbb
jo
xor
rcl
ret
adc
inc
retf
jns
clc
retf
cmp
add
(bad)
div
jno
sub
xor
ins
sub
rcr
test
loop
arpl
ins
pusha
mov
push
inc
lea
jnp
call
fadd
pushf
push
xchg
xor
jnp
popa
pop
or
test
rcl
fwait
popa
icebp
pop
retf
xchg
mov
nop
scas
sub
dec
retf
xor
mov
push
scas
fs
inc
aas
pop
xor
cmp
enter
mov
and
cwde
mov
push
ins
inc
sub
in
and
mov
ja
mov
jns
adc
xor
and
xor
ja
sub
or
add
inc
retf
push
xchg
and
push
imul
sub
push
aas
mov
jmp
mov
les
cmp
das
shl
clc
pusha
jbe
pop
xor
inc
ins
popa
clc
xchg
out
adc
jo
adc
xchg
mov
sub
(bad)
enter
and
jecxz
aaa
leave
dec
dec
cmp
push
in
lods
push
push
jg
fild
cmp
retf
xchg
sbb
fidivr
(bad)
aas
out
mov
pusha
jl
test
je
stos
push
scas
mov
loope
fdivr
leave
pop
out
and
jle
(bad)
dec
push
mov
test
mov
mov
or
xchg
push
xor
adc
call
inc
das
pop
jecxz
(bad)
sbb
mov
stos
or
add
jmp
repnz
loopne
adc
aas
pop
and
adc
mov
popf
fisttp
pop
jmp
std
daa
lods
fsub
in
jno
push
xchg
pop
ja
jnp
add
lods
test
mov
scas
xchg
repz
out
inc
(bad)
je
out
movs
xor
ja
adc
mov
xor
inc
shl
test
mov
test
test
mov
ret
or
push
les
sbb
sub
xor
mov
push
in
aad
mov
(bad)
retf
adc
jmp
jg
bound
fnsave
rcl
adc
in
jns
jo
je
repz
xchg
xchg
add
mov
dec
and
pop
pushf
xor
xchg
mov
mov
(bad)
or
repz
jb
imul
mov
jne
daa
(bad)
pop
pop
mov
inc
xchg
xor
or
outs
push
(bad)
jg
idiv
pop
scas
cmp
adc
adc
push
sar
je
test
jns
and
mov
aaa
fwait
ins
dec
dec
add
pusha
pavgw
lds
push
mov
lods
(bad)
mov
push
dec
inc
xchg
cmps
mov
icebp
mov
fld
loop
xsaveopt
mov
int
imul
jle
mov
(bad)
mov
aas
mov
sub
or
add
add
xchg
xor
sub
pop
cmp
inc
sub
adc
cmp
jne
popa
jns
and
xor
pop
dec
icebp
cmp
fnstsw
std
fwait
sbb
push
loop
sahf
or
out
xchg
sub
jbe
xchg
retf
(bad)
into
repnz
loopne
and
scas
movs
and
cmp
clc
(bad)
mov
mov
repnz
dec
imul
mov
ret
push
jns
sub
gs
jl
call
test
fucomi
mov
dec
mov
or
mov
inc
xchg
or
mov
push
push
pop
mul
add
movs
pusha
sahf
jno
dec
cmp
dec
adc
jmp
add
adc
dec
adc
sbb
das
addr16
adc
cmp
or
mov
gs
(bad)
fsubr
add
lods
xor
imul
std
jg
cdq
movs
mov
pop
push
xchg
mov
scas
ja
je
add
les
repnz
adc
rcr
sub
mov
frstor
add
cwde
lahf
push
mov
(bad)
or
cmc
sbb
pop
mov
imul
xor
mov
inc
add
xor
fisub
aad
and
xlat
xchg
js
mov
shr
inc
mov
pop
and
sbb
cmps
cmp
test
mov
mov
push
fsub
adc
test
sbb
cmp
shl
jmp
adc
pop
xor
adc
mov
shl
pop
(bad)
mov
mov
cmp
adc
ss
(bad)
hlt
cli
ret
mov
cmp
in
mov
push
push
mov
jbe
jne
ds
sub
test
cli
(bad)
add
adc
and
test
fst
lods
in
sbb
add
push
loope
mov
into
aaa
idiv
int3
sub
(bad)
data16
add
icebp
stos
mov
enter
aas
out
stc
add
xlat
xchg
(bad)
enter
je
adc
out
movs
call
adc
mov
test
xor
jne
lods
cs
adc
jo
pop
pop
stos
imul
ja
in
mov
jnp
fbstp
arpl
cmp
cld
fcomp
push
sbb
icebp
dec
mov
addr16
xchg
cld
test
movs
cmp
das
pop
mov
adc
lock
popf
out
or
outs
data16
aaa
pop
fcomp
leave
or
(bad)
cli
cmp
ror
lds
cld
into
fwait
inc
sahf
mov
fld
dec
push
jmp
mov
push
or
cli
fs
pop
sahf
push
ja
inc
ss
leave
pop
clc
aad
stc
in
mov
test
sbb
pop
and
pop
mov
sub
xlat
test
add
or
and
mov
mov
cmp
mov
push
int3
mov
and
inc
xor
inc
adc
clc
xchg
scas
mov
mov
int3
or
lock
daa
gs
xor
cwde
add
outs
mov
cmps
repz
xchg
repz
mov
sub
fcomi
test
scas
out
ds
pusha
hlt
adc
aam
into
(bad)
cmp
scas
fild
jmp
in
lods
cmp
nop
cmps
inc
dec
jb
xchg
dec
xchg
movs
add
aas
xor
stos
out
enter
into
data16
mov
sbb
leave
lahf
xor
mov
je
(bad)
(bad)
loopne
add
int
ins
or
push
xchg
lea
inc
mov
lds
in
int3
dec
mov
imul
mov
jg
mov
mov
sbb
dec
not
and
fmul
test
sub
and
add
inc
stc
and
dec
int3
jno
(bad)
dec
push
clc
sub
xchg
push
xchg
cwde
mov
ror
retf
add
cdq
sub
or
out
fnstsw
mov
push
div
pop
push
mov
cmc
xlat
xchg
rcl
jbe
add
sub
test
es
xor
stos
add
jo
or
and
mov
jnp
sub
or
or
jno
enter
in
pop
mov
xor
(bad)
mov
(bad)
fisub
jecxz
cdq
in
iret
test
mov
lds
cmps
mov
xchg
retf
jg
mov
mov
ins
aaa
test
sbb
mov
sbb
data16
and
fs
pushf
rcr
daa
int
icebp
mov
push
sbb
shl
push
retf
xor
(bad)
cs
loope
mov
outs
add
adc
call
ficomp
cdq
jmp
pusha
jmp
popf
sbb
leave
sahf
mov
aas
inc
and
pop
sbb
fnstsw
add
sub
mov
(bad)
inc
mov
outs
dec
and
test
(bad)
jecxz
xchg
ins
dec
mov
mov
rcr
push
mov
shl
mov
pop
out
retf
fnstsw
mov
inc
jg
stos
in
xchg
(bad)
outs
push
nop
cdq
dec
jg
jmp
loopne
jns
mov
xchg
in
ins
xor
cmp
gs
in
icebp
aaa
std
pushf
xchg
push
mov
ja
imul
sti
pop
lds
ret
retf
inc
xchg
mov
xor
push
jae
sub
out
mov
arpl
into
push
cmp
js
test
je
jbe
sbb
add
(bad)
xchg
out
xchg
mov
imul
out
or
xor
dec
(bad)
loop
es
jge
sub
es
fstp
ret
add
xchg
inc
mov
cs
sbb
xor
arpl
push
pop
out
add
ret
daa
mov
push
adc
shl
daa
dec
push
inc
(bad)
xchg
cmp
xchg
pop
mov
das
add
int
lods
jmp
jns
add
popf
aam
mov
imul
jle
(bad)
cmp
mov
mov
cmp
lds
mov
imul
mov
xchg
shr
adc
loop
outs
cmp
sbb
pop
loopne
inc
mul
mov
ror
mov
inc
sub
sbb
add
in
fwait
or
rol
xchg
xor
xor
iret
ja
push
sub
js
add
outs
aas
and
pop
(bad)
loope
bound
push
in
xchg
sbb
js
jne
cmp
loopne
sbb
retf
jg
push
jmp
sub
mov
or
in
mov
lahf
test
dec
inc
mov
cmovp
push
cmps
xor
lock
scas
sub
clc
out
ja
sbb
lods
fwait
pop
adc
xlat
jg
sbb
xlat
mov
mov
push
mov
mov
cld
es
inc
fwait
gs
icebp
xchg
inc
push
pop
push
jne
push
push
fdiv
adc
out
mov
aam
out
out
aaa
mov
iret
adc
fmul
test
sbb
cmc
int3
sbb
(bad)
xor
into
or
jmp
jmp
mov
and
daa
jo
repnz
popf
jge
inc
xor
mov
mov
(bad)
retf
inc
mov
sub
xlat
or
loopne
sub
cwde
scas
retf
mov
adc
ror
movs
mov
lea
retf
ins
mov
adc
js
scas
pop
mov
out
mov
fdiv
sbb
mov
inc
popa
aaa
out
mov
lods
out
clc
cld
out
inc
mov
adc
cmp
or
pop
mov
add
dec
gs
adc
popf
cli
sub
sbb
sub
cmps
or
dec
cmp
fadd
ret
pop
xchg
dec
int
jb
xor
adc
out
into
push
or
add
mov
dec
push
enter
dec
int
xor
sahf
cmp
add
and
push
ja
pop
fsubr
dec
ficomp
bound
dec
shl
jmp
ret
aam
sahf
in
sbb
ss
xchg
dec
int3
push
sahf
push
add
mov
jne
jp
pop
sbb
dec
fnstenv
or
imul
mov
aad
pop
int3
lea
les
or
jmp
gs
sub
(bad)
mov
sub
mov
sub
int3
les
(bad)
mov
push
mov
mov
and
add
(bad)
(bad)
sub
mov
call
pop
pop
xchg
pop
sbb
cmp
aaa
data16
pop
xor
and
cmps
jmp
pusha
sbb
test
xchg
mov
sub
xchg
out
int3
xchg
cmp
frstor
hlt
loop
ins
jg
pop
jge
dec
push
fadd
lds
sar
mov
or
bswap
or
mov
xor
and
cmps
dec
stos
inc
xor
and
mov
xchg
mov
sbb
ins
mov
fadd
jge
adc
fisubr
imul
sbb
inc
jmp
push
cmp
mov
imul
addr16
out
xchg
js
add
popa
cmc
icebp
or
or
mov
pop
push
cmps
jbe
mov
mov
mov
or
mov
mov
adc
sbb
mov
sbb
(bad)
retf
loop
addr16
mov
loop
or
mov
xor
or
adc
(bad)
leave
outs
test
lods
into
sbb
jae
xchg
xor
enter
sahf
cmc
ins
dec
jle
dec
xlat
sub
xor
add
das
push
dec
pop
jno
mov
mov
or
dec
out
ja
cmp
mov
cmp
pop
mov
das
sub
scas
jl
and
or
xor
mov
fucomi
scas
(bad)
out
and
test
rcl
mov
sbb
cwde
imul
push
pop
ror
push
std
dec
iret
inc
mov
(bad)
imul
mov
ds
pop
cwde
push
mov
imul
out
loope
pop
into
and
push
dec
pop
mov
div
aaa
mov
popa
jmp
sub
mov
cmp
(bad)
icebp
xor
jle
inc
(bad)
pusha
jge
and
and
add
pusha
shl
add
ficomp
std
pop
pop
pop
call
ror
in
test
les
cld
xor
jo
xor
into
pushf
aas
inc
jne
(bad)
or
sub
dec
mov
jmp
push
mov
test
movs
mov
pushf
jnp
(bad)
cmp
fs
lahf
mov
cmp
mov
push
pusha
enter
push
fisttp
cmps
lods
jmp
retf
nop
xor
adc
sbb
jns
xor
fwait
mov
aaa
sbb
jg
(bad)
scas
jmp
out
sbb
mov
cmp
ins
bound
sub
ins
out
sub
fsub
mov
cmp
(bad)
js
lds
ja
jmp
bound
aas
pusha
call
sbb
add
fstp
inc
lea
cdq
xchg
mov
fcmovnb
dec
cmp
retf
xchg
ins
test
movs
xchg
(bad)
pop
xchg
push
sub
sbb
sbb
sbb
inc
rcl
cmp
iret
aam
(bad)
cli
out
sbb
and
adc
stc
shl
pop
sub
retf
int3
cmc
dec
xor
mov
outs
cli
shl
cmc
shl
enter
push
sbb
movs
inc
inc
push
and
mov
jae
rcl
stos
push
and
retf
call
dec
pop
outs
pop
je
push
shl
inc
test
push
icebp
aaa
shl
stos
adc
xor
pushf
test
mov
popa
cdq
lock
jmp
adc
aad
sub
jne
xlat
aaa
es
std
jmp
aad
xchg
not
fwait
das
mov
and
scas
call
mov
push
pop
les
push
fisttp
pop
je
xchg
ja
mov
sub
mov
test
in
lods
sbb
push
scas
push
mov
xchg
aas
sub
shr
push
xor
mov
(bad)
jb
xchg
push
mov
sbb
out
shl
scas
inc
ins
add
lock
jbe
loopne
(bad)
ins
jl
lds
movs
push
jg
dec
jg
mov
add
and
sahf
pusha
pop
retf
(bad)
iret
mov
(bad)
mov
dec
jb
loope
adc
leave
div
int3
inc
icebp
xchg
sbb
cmc
call
fwait
retf
push
(bad)
and
jecxz
inc
pop
cmc
and
bound
pop
and
fs
or
xchg
je
push
ror
mov
rcl
mov
test
mov
sti
mov
out
sub
or
icebp
jle
test
dec
xlat
aaa
and
mov
push
out
xor
jns
daa
out
call
push
pushf
mov
sti
out
sub
ret
push
popf
or
(bad)
arpl
adc
jne
clc
test
mov
sbb
sbb
repz
xor
scas
shl
and
xor
push
inc
push
lods
loope
stc
or
pop
sbb
xchg
push
inc
xor
inc
jbe
jg
in
dec
fwait
(bad)
call
push
clc
sti
pop
das
xlat
cmc
fisttp
or
out
dec
stos
mov
pop
fs
in
or
dec
into
lods
vandps
sub
popa
cmps
xchg
loopne
sbb
fadd
stc
mov
shl
push
je
dec
jp
jnp
jl
mov
mov
add
mov
sbb
cmp
pop
call
mov
jmp
inc
pop
mov
mov
movs
pop
mov
(bad)
nop
jnp
out
xor
aaa
and
sbb
repz
sbb
out
mov
push
jle
mov
or
enter
int
and
stc
shl
ret
push
jecxz
out
outs
mov
and
push
cwde
dec
das
xchg
retf
and
and
mov
fidivr
hlt
(bad)
sub
dec
and
test
xchg
fscale
inc
arpl
mov
mov
imul
jmp
fwait
(bad)
sbb
mov
push
repz
pop
cmp
ja
movs
jle
and
mov
pop
aam
lods
and
pop
cmp
(bad)
in
ret
jp
xor
or
js
gs
add
inc
sbb
and
cmp
fwait
push
jmp
mov
cwde
popa
sub
inc
adc
iret
jg
addr16
rcl
sbb
imul
repz
ins
cmc
daa
cwde
ins
mov
sbb
pop
stos
ja
xor
loopne
jl
xchg
lea
mov
clc
mov
cmovo
mov
sub
mov
adc
push
loop
(bad)
mov
xchg
pop
mov
dec
jo
push
xor
fwait
xchg
mov
lods
fld
les
pop
pop
cmps
push
jo
imul
int3
hlt
idiv
push
push
pop
inc
fs
pop
stos
xor
sbb
gs
test
mov
arpl
nop
or
fisttp
add
je
jno
mov
test
ss
mov
cli
jne
jmp
movs
jne
cmc
xchg
rol
retf
dec
repnz
dec
in
mov
dec
add
les
jg
fdiv
jmp
cmc
xor
add
lods
stos
push
in
repnz
or
pop
arpl
inc
jae
addr16
out
test
or
sti
or
pop
sbb
push
push
dec
sbb
jb
cmp
lds
and
mov
xor
and
mov
inc
or
xchg
call
retf
out
and
ins
scas
dec
outs
hlt
sbb
jno
lds
mov
je
mov
mov
in
dec
loopne
shl
fs
push
mov
daa
out
mov
adc
sti
sub
mov
xchg
test
popf
leave
ins
xchg
dec
cmp
adc
dec
ret
mov
jl
mul
sbb
mov
jae
adc
add
xchg
popa
pop
sbb
cmc
jmp
push
push
xchg
scas
loopne
enter
and
jp
push
int
ins
inc
and
and
in
sbb
adc
fadd
pop
cmps
ss
stos
mov
or
stos
jb
popf
daa
mov
in
jne
idiv
and
pop
xchg
leave
dec
jb
cmp
jmp
mov
xchg
dec
(bad)
push
mov
pop
xor
inc
cwde
into
jg
clc
mov
aam
jnp
dec
mov
xor
adc
jp
call
cli
test
and
fcomp
pusha
or
add
xchg
push
jbe
xchg
push
fsubr
test
icebp
bound
bound
mov
and
pop
mov
cmp
xor
setae
scas
ins
js
pop
pop
sub
stc
int
out
push
fisubr
and
push
enter
lds
fs
ret
xchg
xor
aaa
add
in
pop
and
lods
pop
jbe
jae
xor
pop
add
ss
dec
(bad)
adc
out
mov
mov
sti
inc
mov
inc
push
and
in
mov
ret
jno
outs
pop
dec
inc
cmps
sbb
cmp
fcom
and
out
mov
mov
sub
in
(bad)
rol
mov
or
cdq
pop
sahf
mov
test
lea
int
mov
sbb
ret
mov
ret
jge
test
jb
push
xchg
inc
mov
std
cli
pop
inc
sub
imul
dec
sahf
mov
jnp
jecxz
test
addr16
sub
push
fadd
and
dec
mov
imul
pushf
inc
xchg
fstp
lds
dec
xchg
in
cmp
xor
jne
dec
adc
xchg
lahf
xchg
xor
jl
jle
fdiv
or
cmc
leave
shl
ds
push
call
xchg
shl
mov
xor
push
ins
push
repz
xor
mov
arpl
mov
push
jbe
cmp
je
xor
popa
cs
mov
add
fdiv
mov
and
mov
loope
call
in
sbb
fsub
xor
inc
dec
cmp
inc
inc
int3
mov
std
and
sub
mov
jmp
pop
or
dec
jbe
popa
or
dec
fld
(bad)
cmps
(bad)
lock
test
and
dec
imul
es
push
movs
arpl
cmps
and
lds
lahf
jmp
cmp
xchg
add
mov
sti
mov
sbb
ja
jae
sbb
jmp
rol
fimul
push
cmps
sub
mov
mov
mov
shr
(bad)
out
cwde
xor
push
pop
jg
cmps
inc
clc
push
xchg
inc
mov
push
pop
inc
mov
cdq
push
cmp
xor
out
push
call
xor
ret
scas
icebp
popa
mov
sub
cmc
inc
pusha
and
add
or
int
aas
cmps
stos
mov
jmp
ret
stos
jmp
mov
inc
ins
movs
stc
std
stos
lods
push
dec
sub
ret
data16
jno
push
add
lods
mov
(bad)
stos
jge
mov
sbb
jge
cs
xor
out
mov
movs
jmp
test
retf
and
out
imul
mov
nop
mov
dec
cmp
and
loope
lods
dec
push
popa
ror
test
jecxz
adc
mov
xor
icebp
adc
push
std
xlat
mov
or
fistp
ja
ja
sub
ja
mov
(bad)
jmp
shl
leave
adc
mov
push
xchg
shl
ds
jb
movs
mov
cmps
movs
xchg
cs
mov
(bad)
pop
fnsave
sub
cmp
pop
mov
imul
dec
push
test
imul
(bad)
repz
or
jp
mov
stos
push
into
inc
test
mov
add
lds
push
mov
int
sub
inc
xlat
mov
test
mov
movs
test
aaa
jle
and
xor
xor
retf
pop
mov
add
popa
aam
outs
adc
ja
xchg
push
jmp
ins
clc
adc
(bad)
jl
add
lds
jp
into
out
push
dec
mov
fcmovnbe
xchg
push
icebp
pushf
pop
xchg
sbb
push
and
sbb
adc
jnp
outs
pop
aaa
adc
hlt
mov
xor
inc
push
movs
and
sbb
es
sbb
sbb
jl
in
clc
adc
in
jae
scas
jmp
xor
add
sbb
cli
adc
mov
shl
mov
and
jo
bound
loopne
adc
popf
sbb
add
retf
sub
push
scas
in
inc
dec
jns
ja
ror
cdq
mov
jnp
xor
mov
loopne
push
inc
mov
mov
fcmovb
mov
dec
(bad)
add
ret
jecxz
call
or
call
xchg
mov
int3
push
mov
loop
test
loopne
jg
push
imul
pminsw
ja
ja
int3
and
jnp
add
mov
je
pop
pop
rcl
sub
cmps
jnp
dec
lea
lea
jecxz
add
dec
adc
mov
push
sub
clc
sbb
sbb
inc
push
xchg
jecxz
jb
push
sub
minps
sub
pop
sbb
lahf
mov
int
push
mov
xor
dec
stos
(bad)
jno
cmp
and
push
call
rcr
ret
arpl
adc
nop
xchg
cmp
push
in
mov
mov
xchg
ffreep
daa
sbb
dec
scas
mov
mov
mov
or
out
fdivr
out
sub
sub
(bad)
sub
fcomp
pop
cmps
dec
nop
fiadd
jne
ret
fadd
mov
mov
(bad)
rol
mov
jmp
xchg
jmp
test
adc
ja
pop
mov
pop
ret
pop
or
test
jle
(bad)
out
mov
jbe
aaa
cmp
mov
xor
sahf
aam
std
in
ds
frstor
adc
test
and
scas
cdq
popf
ins
data16
inc
mov
lahf
pop
je
jbe
mov
cdq
stos
push
(bad)
test
fldcw
movq
cmp
cdq
inc
movs
stos
sub
add
(bad)
xor
loop
pop
adc
lea
xchg
add
mov
dec
push
retf
xor
stos
mov
sub
dec
mov
ret
push
cld
mov
sub
mul
pop
mov
repz
mov
xchg
clc
mov
mov
pop
leave
pop
out
mov
(bad)
push
fimul
nop
mov
aas
enter
icebp
jb
(bad)
push
outs
popa
xchg
cmp
inc
sub
xchg
or
sub
icebp
sar
fstp
dec
lods
int3
mov
fwait
sahf
mov
mov
ret
loope
daa
mov
push
test
mov
stos
pop
mov
pop
adc
and
int3
jne
push
cmc
fld
mov
test
cld
inc
and
or
xchg
repnz
mov
mov
sub
retf
push
dec
lock
ffreep
rcr
cdq
xchg
ror
inc
fwait
das
cli
cld
adc
mov
neg
fdiv
adc
jno
in
rcl
pop
xlat
dec
xor
add
inc
inc
outs
inc
dec
sbb
push
push
and
sub
neg
xor
outs
pop
cmps
push
test
js
adc
imul
or
nop
fisub
in
(bad)
and
pop
movs
push
pop
sar
cld
jecxz
cmp
xchg
or
add
lock
and
lds
retf
inc
pop
mov
aaa
sub
mov
cmps
cmc
outs
(bad)
sbb
inc
push
push
imul
scas
xchg
out
stos
push
sub
mov
fsubr
into
push
outs
jnp
push
ins
dec
cdq
push
in
aas
pop
lea
fild
enter
cmps
retf
ds
bound
aas
cmp
shr
mov
lea
sbb
mov
or
cmc
enter
mov
adc
sahf
pop
addr16
dec
mov
inc
xlat
pusha
adc
fnstenv
pop
xchg
add
pop
xor
fmul
mov
sahf
das
adc
and
fsub
sub
add
and
mov
mov
popa
or
xor
push
cli
je
(bad)
jl
and
and
xor
mov
jge
imul
repnz
inc
mov
push
ficomp
dec
mov
mov
cli
fst
das
icebp
add
test
pop
or
mov
cmp
stos
dec
pop
push
jnp
push
jae
lahf
cmp
xchg
and
cmp
add
sbb
(bad)
cmp
imul
jmp
jae
pop
mov
pop
xchg
mov
sub
je
popa
xor
cmps
test
cmps
or
pop
in
ja
fsubr
enter
cmps
fadd
mov
jnp
mov
mov
xchg
test
sti
pop
adc
jb
data16
pop
sub
inc
aam
not
dec
pop
push
aaa
pop
jo
into
mov
out
test
dec
sbb
pusha
xchg
repnz
out
add
test
jge
imul
in
(bad)
jno
pop
pop
enter
iret
int
scas
cmp
inc
sbb
xor
rol
ud2
pop
mov
add
mov
dec
das
call
ror
pop
dec
inc
std
inc
stc
stos
cmp
cmp
mov
sub
icebp
hlt
sbb
xchg
mov
jmp
in
adc
jg
fwait
sub
out
cmps
inc
fild
sub
fs
fwait
repz
fadd
jg
popa
pop
push
mov
mov
jl
int3
cli
and
call
mov
or
jae
add
(bad)
xor
jle
push
clc
(bad)
ss
aas
add
sub
lods
aas
or
movs
cmp
ja
add
mov
scas
shl
add
push
dec
xor
outs
dec
lea
loop
rcl
adc
into
inc
std
shl
mov
mov
dec
test
pop
mov
pushf
xor
gs
stc
sahf
test
sub
cmp
test
imul
push
(bad)
cmps
(bad)
es
daa
and
jp
repnz
dec
inc
dec
test
jb
mov
xchg
push
stos
(bad)
fdiv
cdq
push
xor
pop
push
pop
ins
imul
adc
pop
cmp
mov
fdivr
out
int
std
mov
inc
xor
pop
push
in
mov
mov
es
icebp
shl
sbb
ja
stos
jl
imul
lea
sub
jae
mov
xor
push
xchg
dec
xchg
jle
fbstp
in
in
add
mov
stos
adc
sbb
add
mov
fld
dec
mov
iret
xor
inc
jle
jle
cmc
(bad)
xchg
call
push
jle
lds
mov
not
push
neg
cmp
rol
dec
test
jecxz
shr
stc
pushf
test
push
call
mov
ja
data16
sbb
push
rcr
jae
xchg
jne
out
mov
xor
test
(bad)
imul
inc
(bad)
retfw
fucomip
xchg
pop
mov
scas
je
pop
hlt
leave
fs
jns
xchg
retf
(bad)
cld
xor
call
push
addr16
dec
sahf
out
into
jne
jno
sub
and
mov
loopne
jmp
aam
ss
xchg
cmc
cmps
adc
xor
stos
or
test
jmp
imul
cs
jns
pop
push
outs
div
popa
adc
pop
fs
(bad)
adc
sub
in
outs
xchg
or
mov
inc
jmp
call
add
out
xor
xchg
jmp
mov
push
push
cdq
mov
ins
dec
mov
mov
push
loopne
stc
aad
iret
sbb
mov
sahf
je
je
into
mov
imul
cdq
popf
xchg
jmp
and
dec
test
mov
jne
mov
lds
cs
scas
aas
lds
xor
jle
bsf
fsubrp
movs
mov
and
sti
(bad)
mov
repnz
test
daa
das
and
mov
(bad)
cmps
xchg
ins
mov
pop
inc
or
dec
icebp
fisttp
fnstcw
fild
dec
push
and
pop
test
das
sub
outs
dec
pop
dec
fidiv
cmp
cmp
mov
and
sti
sar
adc
mov
or
and
and
jbe
jmp
cld
inc
leave
pop
or
jmp
lods
ret
call
pop
shr
scas
cmp
scas
inc
push
mov
sub
inc
imul
(bad)
mov
repnz
sti
mov
xchg
ins
repz
mov
pop
jmp
jbe
jb
inc
mov
sbb
sbb
cmp
xchg
in
neg
mov
mov
dec
nop
jnp
not
ret
sbb
test
push
push
inc
ja
and
push
inc
mov
movs
mov
add
(bad)
out
imul
loope
out
movs
movs
hlt
imul
adc
add
ja
aad
in
cld
cs
loope
dec
push
push
cdq
in
stos
xchg
out
fldcw
mov
cmp
fwait
in
dec
stos
inc
cmps
sbb
fist
jno
xor
in
icebp
pop
out
or
push
pop
fld
mov
mov
std
rcl
push
stos
adc
push
sub
adc
mov
jno
sbb
out
or
lds
inc
pop
inc
lods
and
jecxz
les
(bad)
bound
pop
in
imul
mov
inc
test
ins
or
sbb
or
test
mov
bound
(bad)
repz
adc
jp
cld
push
mov
fidivr
cmp
xchg
test
mov
jb
sub
inc
mov
mov
call
mov
fisttp
mul
and
jbe
inc
pop
push
mov
xchg
jo
xchg
fimul
or
push
pop
mov
(bad)
int3
cs
xor
sub
sar
cmps
inc
call
inc
sub
inc
push
mov
xlat
sbb
push
(bad)
(bad)
jns
jg
inc
ret
dec
test
cdq
loope
sub
movs
inc
xlat
sub
xor
mov
pop
fistp
clc
and
and
push
lock
ret
les
adc
dec
test
aas
mov
call
and
sbb
(bad)
(bad)
mov
std
cli
mov
scas
cli
lea
fmul
lods
fidivr
ins
aam
adc
lds
nop
sub
cmp
outs
dec
out
js
gs
scas
adc
pop
xchg
stos
out
loopne
popa
mov
loope
cmp
push
xchg
rol
test
cmp
and
loopne
ins
mov
mov
data16
pop
xchg
push
add
push
in
pop
pop
bound
shl
das
addr16
fxtract
mov
test
add
xchg
xor
xchg
sub
daa
imul
sub
popf
cmp
xchg
xchg
adc
pop
inc
(bad)
sub
mov
loopne
mov
sbb
cmp
arpl
pop
lock
(bad)
push
inc
shl
repz
and
ret
dec
inc
fisubr
xchg
ret
pop
mov
js
jne
jne
mov
cli
cmp
fsubr
jge
retf
fst
fcmovu
jb
sbb
xchg
arpl
and
pop
xor
stos
popf
cdq
pop
aad
jecxz
popf
bound
lods
loope
sub
or
in
sbb
retf
out
add
sbb
sbb
jge
add
push
lea
int3
xchg
hlt
arpl
mov
cwde
xlat
ja
in
add
into
or
(bad)
dec
mov
daa
mov
mov
es
cmc
xchg
jns
fdiv
iret
pop
inc
adc
mov
call
push
xchg
inc
je
and
push
(bad)
in
mov
pop
mov
xor
mov
addr16
mov
cmp
push
out
sub
mov
jmp
inc
leave
adc
bound
mov
push
icebp
test
mov
sbb
or
xor
test
out
sub
fimul
sbb
push
mov
dec
mov
cmps
shl
in
pavgw
pop
movs
popf
fild
lock
ficomp
sub
lods
les
mov
jb
test
aas
push
fdiv
repnz
pop
fisub
scas
push
outs
mov
cld
inc
jno
mov
call
push
xor
mov
jmp
movs
fcmovnbe
mov
cs
mov
dec
xor
(bad)
ins
mov
adc
ins
mov
dec
mov
out
jno
imul
xor
scas
jb
jae
dec
test
xor
imul
into
das
pop
mov
jl
test
iret
dec
mov
cmp
movs
(bad)
or
(bad)
mul
out
test
dec
sub
xchg
add
scas
jmp
pop
inc
ja
cdq
imul
sbb
js
jp
push
out
and
retf
retf
xchg
movs
cwde
mov
in
inc
adc
rcr
ds
add
add
lock
scas
test
jbe
adc
loopne
push
popf
mov
fdiv
sbb
add
push
push
aad
pop
cmp
out
in
cwde
enter
aam
dec
adc
inc
outs
mov
push
cmp
jle
or
xor
sti
and
jmp
popf
loop
ins
fisttp
(bad)
xlat
arpl
sbb
(bad)
aas
loopne
add
dec
call
and
mov
mov
fst
fstp
cmp
repnz
outs
call
push
das
retf
pop
xor
pusha
pop
and
sub
js
adc
loopne
dec
cmps
pusha
stc
or
xchg
xor
push
in
add
or
pushf
(bad)
std
ins
mov
popa
adc
stc
rcl
mov
imul
push
out
sub
ins
imul
hlt
out
pushf
inc
lea
fs
(bad)
addr16
mov
pop
sbb
mov
jb
out
and
push
pop
xor
sti
ja
outs
push
ss
out
xchg
xor
xor
inc
jbe
pop
mov
cs
mov
adc
inc
cmp
dec
fmul
dec
push
(bad)
push
cmps
push
xchg
loop
jl
ins
add
test
lds
hlt
push
gs
mov
inc
inc
popa
sti
mov
xlat
fnstsw
fsubr
in
push
(bad)
cmps
cmps
fisttp
xor
into
(bad)
in
mov
push
std
imul
addr16
cs
not
lea
fimul
ja
stos
shl
fmul
mov
ja
jnp
jns
ss
hlt
mov
fmul
(bad)
(bad)
adc
jmp
out
inc
psraw
jmp
dec
pop
pop
cmp
or
stos
inc
or
fsub
sub
jno
ins
bound
rol
jle
mov
xchg
push
mov
ret
xor
jns
jmp
mov
ins
xor
cli
pushf
ss
pop
jns
fisttp
test
nop
xor
cld
jnp
push
jno
xchg
outs
inc
fmul
xchg
cmp
mov
and
icebp
mov
dec
stc
inc
mov
imul
sub
stos
test
jge
mov
jmp
mov
xchg
shr
mov
xor
clc
test
shl
jno
jo
adc
inc
or
pop
mov
xor
add
adc
cs
mov
jae
sub
aam
out
dec
push
aam
mov
cld
mov
das
stos
sbb
cld
or
pop
sub
jo
enter
or
jmp
mov
xlat
jecxz
(bad)
loope
push
xor
jecxz
imul
int
data16
push
lea
pop
fmul
push
adc
jl
xor
popa
jmp
sub
add
inc
push
stos
push
cld
push
adc
ins
cmps
xor
shl
jmp
out
xor
fimul
js
xor
mov
adc
and
dec
scas
fsub
sbb
test
popf
std
movs
popa
imul
jae
scas
enter
test
(bad)
cmp
movs
add
xor
into
lea
push
outs
xor
rcr
invlpg
add
jne
data16
into
movs
mov
adc
aas
je
nop
inc
xchg
sbb
sbb
sbb
daa
inc
mov
inc
jbe
sbb
mov
lock
or
xor
bound
xor
jmp
pop
jae
mov
imul
add
ret
shr
lods
xor
jmp
mov
dec
neg
rep
sub
jno
movs
cdq
mov
inc
imul
add
or
push
ds
(bad)
test
sub
repz
int3
fdiv
add
cmp
in
out
add
xor
sbb
xchg
das
add
repnz
cdq
jbe
cmps
xor
popf
imul
in
and
mov
icebp
mov
aaa
pusha
leave
movs
ror
adc
lahf
inc
in
mov
mov
jg
cdq
dec
dec
pop
icebp
push
pop
(bad)
push
pop
mov
jmp
mov
or
outs
js
outs
je
fldenv
push
mov
cmp
sbb
add
jmp
or
rol
pop
mov
cmp
dec
mov
xlat
add
aas
pop
daa
rcr
loop
shl
lock
jbe
inc
lea
out
inc
sbb
cs
or
pushf
adc
lea
in
fisttp
js
inc
(bad)
out
inc
mov
jmp
arpl
inc
jg
repnz
test
adc
sbb
ror
fstp
dec
adc
push
pcmpgtb
mul
add
stc
push
pop
ins
pop
out
adc
lock
out
dec
pushf
test
mov
mov
xchg
cmp
call
push
dec
add
pop
shl
and
mov
push
push
push
inc
pop
inc
icebp
sub
imul
adc
imul
fsub
rol
bound
xchg
(bad)
mov
fbstp
xlat
mov
cld
pushf
hlt
(bad)
int
pop
jmp
test
and
aaa
inc
jbe
or
retf
shl
arpl
push
iret
cmp
jo
enter
repz
inc
xor
js
dec
push
into
pop
push
and
and
cmc
cmp
and
aam
shr
push
stc
ja
icebp
out
xor
jle
les
test
push
add
fwait
inc
outs
popf
stc
mov
xor
ins
mov
outs
mov
sbb
add
or
xchg
out
lea
add
pop
(bad)
fidiv
loope
pop
jae
adc
xchg
lock
push
mov
iret
jp
fstp
sar
repz
jle
xchg
icebp
xor
cmp
outs
lahf
ds
int3
mov
push
rcl
mov
or
cmp
add
lds
inc
retf
mov
(bad)
lock
cs
cli
loop
push
xchg
(bad)
inc
xchg
cmp
sysret
ins
loopne
les
sub
mov
mov
sahf
sbb
cmp
sbb
adc
mov
arpl
push
aam
cmp
not
cld
in
mov
pop
in
dec
fs
es
mov
fstp
pusha
mov
cld
adc
cmps
pop
jmp
mov
mov
pop
or
push
fstp
cmps
mov
sbb
punpckhwd
std
pop
jge
fidiv
add
inc
cmp
inc
loop
cmp
sbb
mov
and
mov
js
addr16
jo
mov
loop
xchg
or
out
in
mov
rol
out
inc
sar
fstp
imul
pop
sahf
add
or
mov
addr16
dec
push
pop
cdq
neg
movs
pusha
shl
loop
sub
dec
fnsave
pop
xchg
cmc
call
add
sbb
imul
xchg
pop
sub
dec
fsubr
(bad)
aad
xchg
dec
cld
pop
dec
add
push
js
push
in
xacquire
sbb
mov
sbb
(bad)
push
mov
pop
sbb
and
mov
dec
inc
add
adc
and
add
inc
outs
xlat
sub
lods
mov
lds
stc
inc
outs
repz
in
out
in
cmp
push
in
add
lea
mov
mov
push
xchg
shr
rol
test
popf
ins
into
cmps
(bad)
in
or
mov
dec
inc
adc
call
scas
mov
jecxz
and
mov
add
jo
push
ficom
retf
inc
sub
outs
push
fwait
cmp
ret
mov
das
outs
ds
cwde
in
pusha
ficomp
leave
daa
stos
add
cmc
inc
or
or
or
inc
loopne
sbb
fstp
outs
adc
test
aas
je
sub
sar
push
ret
cmp
adc
sar
movs
push
adc
xor
repnz
call
pop
ret
pop
xor
push
xor
mov
retf
lock
shl
dec
mov
push
pop
inc
jp
or
call
adc
mov
sbb
xchg
or
fisttp
lea
inc
aam
hlt
mov
ret
test
pop
hlt
sbb
(bad)
jl
add
jl
add
mov
and
mov
outs
stc
mov
jae
push
out
sbb
adc
sub
addr16
stc
push
mov
inc
add
neg
mov
sub
and
pop
adc
push
or
xchg
add
loop
pushf
fldpi
test
cmp
push
in
test
js
mov
ror
xlat
jl
call
jmp
ss
mov
mov
lods
sub
pop
(bad)
outs
outs
loop
fs
clc
cmc
adc
ins
xchg
ror
rcr
sbb
or
cmp
data16
test
pop
(bad)
xor
mov
retf
push
inc
mov
jnp
arpl
(bad)
jno
lea
and
push
dec
add
rcl
aas
clc
mov
stc
jnp
sbb
shr
adc
(bad)
jnp
dec
mov
test
mov
sbb
xor
test
mov
pop
enter
jo
cmp
adc
in
mov
enter
ret
arpl
or
pop
pushf
enter
mov
pop
xor
(bad)
into
cs
or
pusha
xchg
sti
push
bound
movs
mov
inc
pop
mov
xchg
inc
pop
dec
inc
ins
jmp
mov
inc
jmp
div
add
or
pop
in
retf
mov
stc
mov
(bad)
xor
sbb
cmp
scas
loope
jnp
and
push
dec
fistp
cmp
dec
add
mov
outs
test
dec
inc
and
test
inc
pop
fdiv
aaa
or
scas
mov
adc
mov
or
call
lea
movs
inc
out
cmp
out
xchg
xor
setge
and
sbb
pop
or
sbb
pop
sub
xor
sub
adc
jnp
lea
out
lea
sub
dec
loopne
out
add
fisubr
jnp
leave
imul
outs
cdq
sub
push
mov
fwait
jne
frstor
mov
daa
dec
pushf
dec
rol
pushf
cs
mov
mov
daa
sub
mov
sub
jge
test
mov
jmp
pop
jmp
(bad)
retf
mov
push
sar
les
jno
sti
cmc
push
cdq
lods
scas
mov
dec
xlat
push
or
lds
cmp
mov
cwde
fcom
daa
cs
popf
and
ins
mov
inc
cdq
enter
aaa
adc
rcl
jae
inc
sub
or
lock
repnz
jp
dec
mov
or
xchg
xchg
sbb
enter
xor
mov
or
arpl
test
stos
push
mul
in
dec
leave
mov
xchg
cwde
jae
xchg
cmp
mov
cli
fistp
dec
imul
(bad)
push
pop
jge
sahf
xlat
pop
fnsave
and
cli
ror
sbb
push
mov
gs
jbe
outs
call
in
sbb
(bad)
jne
add
xchg
cwde
sub
jo
dec
mov
jnp
enter
and
mov
cmp
or
xor
fs
lods
pusha
push
cwde
sub
arpl
int3
or
aaa
test
in
aam
push
mov
lods
ja
inc
cmp
cmp
sub
icebp
out
push
stos
iret
pop
cld
fist
test
stos
inc
xor
out
sar
jno
and
inc
dec
or
sbb
shr
std
test
add
and
xchg
mov
imul
fisubr
cdq
daa
loop
leavew
mov
std
and
stc
inc
nop
and
(bad)
int
pop
mov
push
aas
imul
retf
movs
hlt
mov
neg
in
xor
addr16
push
sbb
inc
out
repz
addr16
cmps
repz
icebp
adc
mov
ret
mov
jne
data16
sbb
pop
out
inc
loope
pop
cmp
sti
mov
ret
sahf
mov
in
jge
push
jp
scas
leave
xchg
out
iret
jno
nop
or
pop
dec
pop
adc
fdivr
ror
pop
mov
and
movs
jle
int
or
(bad)
mov
and
ret
xchg
call
test
in
or
jl
or
push
inc
dec
sub
sbb
fcom
sti
inc
sbb
cdq
out
in
mov
pop
add
sub
adc
cmp
leave
popa
aam
cmp
push
fisttp
pop
and
je
ins
(bad)
mov
fdivr
push
jae
sti
ins
sbb
pop
cmc
fimul
iret
int3
test
push
jp
jp
xor
test
mov
sub
mov
cmc
int
stc
in
ret
out
and
pop
js
xor
jg
mov
popf
out
ror
out
push
bound
dec
out
lea
and
or
jb
mov
push
retf
(bad)
into
es
dec
mov
mov
cs
add
gs
repnz
push
mov
jne
lea
adc
sub
push
inc
fdiv
jg
mov
in
mov
add
mov
iret
xchg
retf
push
scas
out
clc
aas
jg
sbb
adc
outs
mov
mov
add
cdq
xor
out
int3
jnp
inc
xchg
cmp
stos
xor
bound
pop
jo
add
jns
push
cmp
fmul
js
imul
leave
or
lds
jne
loopne
retf
nop
xlat
movs
push
xor
rcl
jmp
fld
in
mov
test
stos
pusha
not
or
sub
clc
pusha
push
xlat
shr
imul
pop
movs
add
in
or
mov
xor
jmp
fbld
mov
pop
push
cs
jo
test
call
jge
add
jnp
inc
stos
dec
movs
cmp
adc
cmc
pop
and
inc
jb
loopne
imul
and
(bad)
sbb
xchg
cmp
loopne
scas
dec
out
xor
push
adc
add
push
shr
lods
fistp
popf
jnp
jmp
jnp
ret
and
movs
and
jmp
sbb
test
mov
cmps
mov
repz
ror
or
popa
push
xchg
pop
dec
in
shl
scas
pop
dec
and
js
cmp
xchg
sbb
enter
loopne
xchg
mov
mov
popf
rcr
add
adc
mov
loop
push
fdivrp
out
dec
out
cld
inc
(bad)
sbb
test
mov
mov
pop
sbb
or
cmp
stos
adc
or
or
stos
dec
call
aam
shr
and
push
xchg
inc
sub
and
add
sbb
outs
shl
pop
out
cwde
push
jnp
lock
pushf
cwde
or
push
test
push
dec
outs
clc
cmp
popa
mov
cs
jne
inc
adc
popaw
xchg
inc
rcl
mov
pop
pop
adc
jle
xor
shr
mov
cs
sbb
rcl
out
in
sahf
lods
jp
xchg
add
inc
cmp
dec
dec
inc
xchg
retf
and
scas
dec
cmp
push
mov
fistp
imul
xchg
push
(bad)
sub
jp
in
adc
fistp
mov
rol
xchg
dec
int3
pusha
not
out
xchg
in
mov
lds
or
sub
adc
lods
mov
gs
mov
mov
push
mov
repz
or
mov
push
shr
add
xchg
ja
xchg
pop
pop
(bad)
cmp
pop
push
daa
sbb
das
or
call
lahf
xchg
xor
lahf
adc
retf
jp
bound
mov
icebp
bound
popf
dec
into
mov
push
or
hlt
ja
sub
and
or
sar
mov
xor
xchg
inc
loopne
mov
outs
dec
mov
loopne
jle
mov
cmps
out
jg
jmp
add
cmp
push
push
add
jnp
outs
jge
mov
in
fldcw
cld
rol
mov
xor
shr
mov
and
test
pop
xchg
fnstsw
nop
bnd
sbb
add
and
jle
dec
push
xor
jnp
adc
push
xchg
sti
jae
int3
push
dec
push
fcomp
in
sbb
xor
mov
sti
test
cmp
loope
dec
lea
out
push
(bad)
cmp
test
mov
mov
push
test
mov
mov
pop
sbb
mov
ret
mov
fstp
int3
or
(bad)
call
clc
js
adc
sub
fcom
push
scas
or
pop
stc
xlat
sbb
(bad)
(bad)
scas
adc
bound
jno
retf
adc
sti
mov
fmul
popf
fistp
sar
xchg
fs
fwait
ja
ret
icebp
out
mov
stos
fdivr
loope
or
rcl
fadd
cwde
and
jnp
arpl
xor
push
inc
aas
rcr
jecxz
retf
lods
sbb
pop
ficomp
sub
stos
movs
out
and
xor
ret
cmp
js
pop
(bad)
push
jecxz
cmp
hlt
stc
fdiv
sbb
push
dec
cmp
fstp
lahf
mov
adc
jecxz
and
mov
jg
aaa
movs
or
cmp
adc
sbb
stc
pop
cmp
inc
sub
mov
lea
shr
inc
dec
nop
xor
mov
mov
(bad)
mov
mov
repz
mov
mov
cs
mov
sub
bound
fistp
and
enter
pop
xor
jb
push
call
mov
adc
(bad)
in
call
inc
adc
and
and
pop
push
or
push
push
mov
inc
lods
lock
xchg
out
shl
jecxz
and
jecxz
mov
cmc
ret
push
(bad)
jns
(bad)
test
or
call
xchg
sti
loope
cmp
and
mov
push
lea
push
mov
sahf
in
(bad)
jmp
mov
sub
sti
and
sbb
sbb
and
dec
shr
test
fimul
or
mov
add
pusha
(bad)
sub
test
mov
fsub
jge
jb
ret
jecxz
xor
inc
add
dec
cli
add
cmp
pusha
xchg
loope
ins
loop
pop
aam
mov
mov
push
adc
mov
lods
mov
sub
mov
in
pop
fs
loopne
jl
dec
clc
xor
ss
mov
jnp
pop
bnd
mov
add
mov
xchg
movs
(bad)
in
(bad)
in
jbe
lods
out
loop
mov
sub
js
xchg
ins
clc
aas
mov
inc
sbb
into
pop
mov
and
rcl
sar
inc
sbb
nop
out
mov
jl
clc
xchg
shl
xor
inc
ja
dec
cld
xchg
into
xlat
mul
stc
jmp
xchg
stos
or
push
mov
shr
or
aam
add
and
xchg
stc
pop
aad
fbstp
cmp
xchg
and
or
dec
out
or
mov
jp
cmp
push
jecxz
add
or
pop
mov
pop
movs
movs
clc
jmp
ins
xchg
jo
(bad)
out
xor
mov
mov
xchg
mov
xor
sub
dec
nop
mov
mov
push
dec
mov
fcom
inc
sub
or
rcr
mov
aas
scas
mul
mov
inc
setp
jmp
jmp
pop
aad
mov
pushf
sbb
in
ret
out
in
mov
fadd
ret
dec
pop
jp
ret
clc
inc
adc
into
leave
lahf
movs
mov
jmp
out
loop
mov
cs
pushf
fdiv
enter
cmp
and
movs
clc
dec
loop
jb
add
aam
sti
cmp
xor
std
ds
dec
pusha
jl
leave
jnp
aas
fs
sti
push
xor
sub
scas
lods
push
inc
cmc
test
leave
les
dec
add
jge
and
or
jmp
test
add
test
int3
cdq
cmp
fnstsw
xchg
and
dec
aaa
daa
or
pushf
mov
xor
out
and
sahf
or
outs
dec
jbe
outs
mov
mov
sbb
pop
inc
or
push
or
mov
mov
or
pop
sub
mov
push
shl
shl
sub
(bad)
cmps
inc
cmp
inc
push
xor
lds
out
(bad)
jne
xchg
rcl
sbb
cdq
cmc
repz
leave
mov
mov
sbb
jl
dec
test
mov
push
dec
cmps
and
or
cli
xchg
dec
call
cmp
ss
add
div
out
inc
ins
mov
sbb
mov
cmp
or
or
int
aam
xor
inc
jle
pop
fstp
pop
bound
(bad)
jg
xor
les
or
(bad)
fild
add
cmps
or
fbstp
jnp
dec
push
inc
xchg
pusha
leave
xchg
jb
add
stc
dec
inc
test
and
add
pop
arpl
xchg
push
fsub
xchg
mov
ja
mov
jge
and
movq
stos
fdivrp
fcmovne
dec
adc
jae
jecxz
push
fidivr
retf
in
repnz
popa
idiv
outs
(bad)
mov
leave
dec
jmp
push
sub
xor
fcomp
jle
sub
cmp
cdq
iret
lahf
je
bound
cmp
leave
inc
popa
mov
or
(bad)
cmp
and
inc
xchg
jge
sbb
mov
mov
fldpi
in
lea
js
cwde
nop
(bad)
fwait
movs
mov
cmp
ret
mov
jg
mov
fild
cmp
jae
push
out
cmp
sti
inc
adc
imul
mov
xchg
popa
ror
mov
dec
bound
add
push
mov
push
ret
lods
jnp
mov
dec
lea
or
loopne
mov
lods
iret
mov
jg
xchg
inc
(bad)
ret
lahf
push
stos
jmp
push
mov
sbb
sbb
xchg
push
or
jge
mov
test
mov
lock
push
lahf
(bad)
mov
js
je
add
leave
push
mov
cs
push
jp
sbb
enter
into
retf
outs
sahf
aas
ins
mov
cmps
inc
repz
int3
dec
pusha
adc
pop
add
sbb
mov
call
cmp
popa
cli
jp
arpl
dec
scas
or
and
rol
cmp
jmp
mov
stos
add
into
and
fsub
jg
inc
add
push
shl
and
xlat
loop
daa
les
loopne
adc
repz
adc
push
cmp
scas
jle
mov
aad
lea
mov
pop
test
int
in
jg
lahf
inc
sub
sbb
jo
dec
out
jmp
cmps
stos
js
mov
and
aas
scas
xchg
cli
cmp
pop
outs
movs
push
ss
loope
cmps
cmc
mov
push
sbb
mov
imul
dec
js
mov
das
ror
out
ret
jmp
cli
inc
ss
or
push
and
repz
add
cmp
mov
cs
dec
or
les
fild
sub
and
call
stc
daa
adc
popf
call
sub
ret
std
ss
stos
sbb
popf
shl
or
xchg
inc
sbb
push
dec
(bad)
dec
mov
scas
mov
ja
jge
or
lds
stos
(bad)
jb
sbb
mov
or
int
xchg
mov
js
jmp
shr
sti
fwait
mov
inc
xchg
add
push
xchg
ret
hlt
add
adc
js
lahf
imul
arpl
fs
dec
sbb
mov
ja
fldenv
or
loopne
mul
mov
fild
xor
add
cmp
je
mov
test
dec
cwde
scas
xchg
dec
or
push
or
jne
jle
sahf
nop
fdiv
pop
ficom
add
push
cmc
pop
jle
(bad)
rol
and
mov
cld
mov
jecxz
(bad)
leave
jb
and
push
sub
xchg
(bad)
jg
inc
movs
add
mov
mul
add
popf
enter
aad
push
mov
dec
mov
push
jmp
mov
in
xor
and
adc
nop
pop
rol
pusha
daa
jecxz
ss
push
push
sub
(bad)
adc
push
cld
push
shr
aad
cmp
(bad)
cmp
dec
js
iret
aas
lds
test
mov
ins
jle
mov
clc
ss
retf
mov
in
cmovg
movs
stc
ins
das
(bad)
sar
mov
push
out
retf
not
mov
inc
call
(bad)
loop
in
xor
mov
inc
xor
mov
xor
call
inc
push
inc
pop
js
not
xor
into
stos
les
scas
outs
retf
jmp
shl
out
push
jge
scas
fdivr
adc
xchg
and
pop
mov
ror
sub
sbb
outs
inc
dec
(bad)
stc
je
pop
jle
test
pop
clc
mov
mov
clc
pusha
(bad)
sub
std
push
(bad)
ds
into
fsub
fcmovnbe
mov
mov
push
push
(bad)
cs
arpl
dec
jns
fistp
inc
sub
xchg
ds
sub
and
int3
mov
add
shl
and
(bad)
inc
stos
int3
ret
into
fmulp
shl
push
cmp
adc
(bad)
mov
mov
dec
js
(bad)
shl
ja
xchg
inc
xchg
int
jne
dec
add
outs
pop
or
test
dec
inc
rol
movs
fdivr
adc
cmc
fsub
mov
mov
int
xchg
popf
mov
sub
adc
aas
popa
movs
ja
inc
lock
mov
inc
mov
add
packsswb
test
xchg
adc
(bad)
mov
jbe
inc
jb
sahf
lods
cmp
or
loope
sub
jp
jnp
call
jnp
push
mov
out
(bad)
mov
mov
mov
jmp
mov
dec
into
xor
xchg
fst
leave
popf
adc
outs
cmp
(bad)
xchg
out
shl
mov
jb
lods
je
sub
mov
lods
mov
in
in
xor
cdq
dec
pop
emms
xor
cwde
cmp
push
jns
icebp
shl
popa
mov
je
xor
add
mov
stc
xchg
test
and
jno
add
test
int
xchg
pop
lods
cmp
push
cwde
xor
xchg
add
(bad)
fidivr
out
cmc
loopne
call
mov
stos
cdq
xchg
cmp
lahf
aas
or
nop
adc
in
xchg
pop
jae
sahf
cdq
push
push
popa
int3
gs
in
fistp
mov
loope
sbb
mov
jle
sar
(bad)
inc
cs
adc
jae
add
retf
adc
sub
jmp
ds
push
dec
push
enter
sbb
push
int
int3
outs
cwde
mov
jecxz
gs
inc
popa
push
icebp
stos
sbb
pop
sub
dec
mov
jmp
imul
xor
inc
add
and
sahf
inc
les
fs
jno
cmp
enter
aaa
push
mov
jo
call
imul
xor
adc
and
cwde
les
cmp
inc
scas
das
ss
std
sbb
push
pop
fwait
iret
mov
mov
fcmovnu
sub
scas
cmps
in
jecxz
xchg
sub
sar
loop
ja
pop
xor
fisub
int3
sahf
ins
(bad)
aaa
adc
push
(bad)
dec
orps
adc
nop
mov
out
or
retf
sbb
dec
pop
inc
jmp
(bad)
cld
rcr
adc
imul
cmps
add
mov
xlat
add
pop
ficom
loopne
mov
and
data16
or
pop
cli
and
dec
and
stos
and
fcmovu
jno
sub
or
push
dec
nop
call
out
jp
pop
in
sub
(bad)
lock
mov
daa
xor
les
out
repnz
popf
mov
jecxz
mov
ret
or
lahf
je
mov
aaa
icebp
ss
xor
jmp
sub
cld
repnz
jmp
sub
lahf
sub
push
mov
mov
inc
inc
push
movs
shl
(bad)
adc
pop
push
(bad)
pop
int3
das
and
xor
pop
cdq
int
aad
fstp
sbb
mov
leave
and
retf
push
lods
pop
xchg
js
xchg
xchg
mov
push
mov
or
push
cmps
or
aas
lods
inc
neg
out
mov
add
or
sub
adc
pop
fist
cmp
addr16
outs
sbb
jns
jne
addr16
mov
imul
inc
xchg
adc
add
fmul
sub
aad
inc
push
dec
sbb
mov
inc
cld
sub
and
(bad)
fist
push
test
retf
pop
xchg
aam
je
and
pop
mov
sub
cdq
imul
sbb
jno
sbb
out
aaa
pop
xchg
aaa
pop
aad
sbb
(bad)
in
push
fwait
mov
inc
push
(bad)
adc
jmp
das
mul
push
dec
sbb
test
ds
push
inc
mov
movs
and
pop
not
test
adc
mov
popa
mov
add
cmp
out
mov
imul
pop
adc
add
sbb
sahf
inc
jae
sub
sub
pop
jge
int3
test
pusha
mov
fnstenv
mov
mov
popf
mov
sbb
outs
pop
mov
xchg
lds
(bad)
ins
loope
mov
add
fistp
ds
cmps
outs
xchg
jge
(bad)
or
adc
mov
adc
cmp
or
dec
popa
jl
pop
in
movs
jb
scas
jg
test
cwde
scas
push
in
adc
mov
out
or
jo
xor
clc
push
xlat
fadd
sub
gs
pop
mov
xchg
retf
(bad)
lock
push
in
arpl
mov
cmp
jns
sub
iret
push
xchg
test
push
es
out
xlat
cld
xor
pop
adc
loopne
and
cli
mov
cmp
scas
pop
add
or
jne
mov
push
or
mov
sub
mov
je
jl
or
sbb
hlt
ds
or
arpl
ret
in
mov
test
data16
jg
jnp
xor
jnp
js
mov
pusha
xchg
or
repz
push
sbb
imul
(bad)
pop
xbegin
mov
inc
cmps
or
dec
xor
test
push
mov
push
test
add
xchg
lods
inc
mov
xchg
nop
xchg
xor
test
daa
outs
or
shl
lock
test
inc
and
xchg
jg
mov
xchg
mov
add
popf
mov
(bad)
sbb
pusha
ret
pop
or
inc
in
fsub
test
xchg
jl
jg
in
cmp
or
stc
aas
add
or
mov
inc
jmp
int
je
cmp
jb
pop
movs
mov
mov
dec
out
mov
adc
(bad)
stc
inc
push
sbb
retf
cmp
sub
and
das
xchg
mov
aas
dec
push
icebp
imul
adc
lods
mov
mov
jp
imul
sbb
sub
lods
cwde
add
inc
mov
lds
mov
test
mov
mov
sbb
fldenv
and
sti
cmp
into
repnz
mov
adc
cmp
loope
dec
iret
cmp
jnp
stos
dec
cmps
mov
add
mov
cmp
js
xor
mov
jecxz
jbe
mov
jb
cdq
(bad)
fnstsw
movs
(bad)
mov
xor
retf
jns
add
scas
add
xor
and
(bad)
sbb
or
sti
or
lods
jno
cmps
xor
test
or
push
fldcw
aad
sub
lods
mov
ins
arpl
test
lock
mov
cwde
ins
xchg
jne
xchg
sar
pop
push
fwait
adc
sub
mov
ret
sti
pop
in
and
int
sbb
pop
cs
(bad)
daa
push
pand
xchg
cs
pop
rol
icebp
mov
loop
push
ret
ja
inc
add
femms
fldcw
(bad)
dec
xor
adc
pop
jmp
imul
and
jl
imul
retf
daa
mov
stos
es
xchg
fwait
sbb
imul
and
imul
pop
inc
add
xchg
adc
inc
xor
jbe
adc
scas
mov
jmp
jmp
cs
mov
jnp
adc
popa
cmps
push
mov
mov
loope
test
inc
sbb
push
add
dec
clc
(bad)
fsub
inc
cmp
mov
cmps
dec
pop
stos
pusha
or
jns
or
and
imul
aas
jl
adc
rcr
push
cwde
iret
int3
je
xchg
pusha
mov
scas
adc
out
fcomp
dec
adc
add
sti
or
sbb
pop
hlt
jecxz
pop
cs
inc
rcr
imul
fwait
hlt
adc
push
mov
jb
into
cmp
or
jmp
sbb
and
add
and
and
das
and
pushf
ja
sub
hlt
dec
in
movs
ja
mov
xor
cmps
mov
or
dec
sub
call
hlt
fiadd
bound
jl
pop
mov
adc
xchg
jnp
rcr
lock
retf
arpl
and
xchg
div
mov
clc
xchg
call
or
jl
fidivr
cld
xor
cmp
cmp
mov
cdq
mov
and
adc
out
mov
push
cmc
ins
les
cs
sub
push
push
or
lahf
pop
sub
and
xchg
sbb
xchg
pop
sar
add
mov
and
add
aad
pop
js
inc
mov
(bad)
cmp
aad
mov
out
sub
jge
ret
jmp
add
adc
daa
(bad)
call
inc
pop
inc
mov
lock
cmp
gs
addr16
push
fisub
cli
inc
(bad)
mov
fsubp
jecxz
pop
das
fldcw
call
cld
fs
dec
jecxz
adc
jae
cmp
push
mov
iret
and
fistp
mov
mov
(bad)
fdivrp
inc
aam
popa
adc
int
xchg
aam
pushf
cs
hlt
cld
jmp
dec
iret
lods
sbb
lahf
test
cmp
xchg
mov
fld
push
test
loopne
pushf
xchg
mov
lds
and
mov
cdq
mov
das
mov
sbb
add
push
cmp
arpl
sub
movs
xchg
int
ins
test
push
adc
loopne
imul
les
cmc
std
push
(bad)
leave
jge
jbe
adc
cmc
test
mov
inc
mov
in
(bad)
repnz
dec
add
jmp
adc
retf
ret
stc
es
cs
or
mov
inc
in
xor
inc
stos
pop
test
fs
and
xchg
fst
fwait
pop
jmp
jp
cmp
into
ds
xor
in
jle
mov
push
mov
jmp
inc
std
iret
jecxz
nop
out
aam
xchg
mov
push
and
jns
popa
cmp
add
inc
ds
(bad)
mov
xchg
pop
iret
hlt
inc
(bad)
out
dec
fsub
cmps
dec
jmp
xchg
out
cwde
aas
adc
sbb
retf
(bad)
dec
mov
sub
pusha
mov
enter
push
ret
xchg
pop
cld
pop
mov
retf
dec
xchg
jae
loopne
xchg
push
push
sub
loope
mov
inc
mov
dec
push
rcr
enter
xchg
test
fdivrp
cmp
out
cmp
loope
retf
clc
adc
and
cwde
and
test
mov
xchg
ins
dec
mov
mov
retf
and
sbb
jecxz
push
icebp
mov
scas
pop
or
mov
add
fld
cmps
cmp
stc
pushf
fist
jle
add
retf
fisttp
dec
push
adc
test
dec
add
sub
dec
(bad)
push
jmp
fstp
ins
repnz
pop
xor
and
ret
retf
inc
adc
pushf
dec
popf
mov
mov
hlt
push
loop
loope
add
sub
mov
icebp
dec
push
ss
fcmovb
pop
loope
cmp
mov
cld
push
xchg
cli
in
push
jmp
(bad)
xchg
les
sahf
popf
test
(bad)
pop
pop
mov
shl
cs
pop
bound
cli
mov
ins
movs
jl
push
cmc
jmp
in
pop
xor
outs
or
bound
jmp
mov
scas
frstor
cld
and
jne
or
test
ss
xlat
or
inc
(bad)
xor
xchg
fild
(bad)
mov
adc
sar
sub
sbb
jge
mov
in
push
jge
pop
jge
(bad)
out
xchg
mov
cdq
js
adc
and
sbb
dec
imul
cmp
aad
es
pop
jnp
pushf
test
arpl
add
ins
xchg
adc
iret
mov
lock
sub
cli
sbb
js
(bad)
push
add
and
mov
lods
in
mov
or
stos
push
ins
add
add
aaa
rcl
sub
jb
and
ins
fcmovbe
jne
adc
shr
xchg
or
idiv
mov
(bad)
xchg
jbe
xchg
mov
(bad)
fldenv
jl
icebp
mov
ss
es
out
push
fcomp
dec
je
idiv
sub
inc
mov
inc
inc
and
sbb
push
js
inc
mov
cmp
sub
sbb
loop
icebp
int3
fsub
push
mov
cmp
nop
cli
sbb
cs
pop
jae
out
mov
js
das
cmp
jge
mov
movs
sahf
xchg
scas
ret
xor
jbe
add
or
arpl
popa
dec
add
call
jle
sbb
dec
es
xchg
add
sahf
xchg
push
movs
sbb
jno
xchg
sub
cli
push
xchg
cmp
mov
lods
sub
shl
sbb
mov
mov
je
cmc
in
sub
mov
stc
fwait
scas
adc
out
mov
loop
cdq
popf
clc
jb
lds
jecxz
shl
outs
iret
sub
jo
nop
jne
stc
(bad)
cld
retf
dec
mov
mov
and
mov
push
movs
push
cmc
mov
loope
jmp
adc
stos
mov
mov
sahf
call
push
xchg
sar
scas
outs
cs
sbb
scas
fwait
(bad)
in
shr
outs
ret
jle
push
adc
mov
std
mov
sub
out
adc
push
fisub
stos
es
mov
mov
lock
and
add
cmp
mov
xchg
jmp
jo
outs
adc
cmp
dec
jo
(bad)
dec
outs
jb
pop
mov
jecxz
cmp
in
push
in
jge
add
add
dec
gs
idiv
push
imul
mov
daa
push
shl
dec
jbe
jae
stc
lds
call
shl
xor
call
fnsave
mov
jmp
cmps
xchg
adc
and
cmp
add
mov
sbb
push
push
mov
mov
pop
sar
jle
mov
adc
ss
aam
jb
jmp
pop
xchg
add
lds
lea
cmps
mov
shl
jge
jl
dec
(bad)
jmp
test
das
imul
jb
sbb
int
pop
leave
shl
cmps
ror
lea
inc
push
out
dec
sbb
rcl
or
xchg
popa
pop
xchg
loop
ins
dec
mov
call
sub
sbb
movs
inc
dec
dec
std
pusha
xchg
in
cmp
xor
iret
pusha
mov
gs
test
dec
into
in
jge
aaa
mov
clc
icebp
aaa
sbb
mov
lods
ins
loope
pop
cdq
sub
adc
retf
sbb
js
dec
cmps
inc
cmp
dec
scas
sub
ds
icebp
test
jmp
add
das
repnz
mov
in
xchg
mov
inc
(bad)
leave
add
cld
and
mov
xor
jae
dec
(bad)
ss
pop
lahf
mov
add
addr16
les
sbb
fsubr
cli
enter
or
aas
jp
cmp
rcr
dec
sub
dec
add
mov
and
stos
and
cmp
mov
jl
jnp
mov
popa
pop
jg
nop
or
cmc
lar
lock
sub
fwait
test
pop
sub
and
mov
push
ins
data16
push
fs
cmps
and
lods
jno
in
(bad)
imul
push
stos
scas
xrelease
xor
or
cmc
dec
sbb
(bad)
stc
sbb
dec
inc
adc
in
push
sub
xor
add
shl
mov
loope
popa
test
call
pushf
popa
or
ret
ror
sbb
jg
ror
dec
fnsave
repz
cmps
movs
cmps
xchg
add
test
push
nop
mov
xor
mov
add
dec
adc
(bad)
xlat
adc
aad
pusha
xor
adc
or
ror
ret
enter
addr16
scas
dec
sbb
mov
int3
(bad)
imul
das
(bad)
sbb
push
dec
(bad)
xchg
push
and
(bad)
(bad)
push
retf
mov
shl
cdq
jl
adc
jno
or
sub
pop
fistp
jmp
pop
imul
mov
(bad)
outs
mov
imul
imul
ret
sbb
fst
add
test
fcomp
inc
sbb
outs
ins
push
jp
hlt
adc
jge
sahf
dec
fwait
shl
jecxz
cmps
xchg
adc
cmps
(bad)
jmp
pop
jnp
dec
retfw
ret
and
test
xor
cmps
cwde
inc
ror
nop
in
ds
ins
popa
jns
xchg
lahf
int3
inc
xor
jbe
lea
pusha
jb
xor
jge
mov
jge
inc
sub
data16
ins
push
cmp
push
mov
into
sbb
jp
push
test
dec
mov
cmp
fisttp
ja
xchg
xchg
sub
fadd
or
(bad)
xchg
repnz
dec
loopne
cmp
sbb
mov
(bad)
add
lock
ds
mov
cmp
adc
sub
int
out
loop
loop
sub
mov
fnstsw
push
xor
in
sahf
popf
mov
sub
sti
ret
cli
ds
movs
cdq
xchg
movs
loop
mov
test
arpl
push
sti
aam
leave
test
pop
or
sub
xor
pop
loop
sub
pop
cdq
sub
and
outs
arpl
or
inc
shl
ret
adc
sub
dec
mov
scas
cmps
nop
mov
inc
or
xor
pop
mov
test
das
ret
push
jbe
pusha
pop
mov
lock
and
push
inc
imul
aad
outs
lds
mov
and
mov
cld
dec
std
ficom
pop
ret
inc
movs
ins
fld1
mov
mov
cmp
dec
retf
sbb
addr16
cmps
adc
shl
xchg
xlat
scas
(bad)
arpl
cmp
addr16
daa
test
dec
xchg
cmps
cmp
mov
pop
es
push
inc
mov
xchg
int
stos
push
(bad)
or
es
cmp
add
mov
or
sbb
bound
jmp
ja
hlt
adc
pop
sbb
jge
das
inc
cmc
fld
jnp
retf
inc
(bad)
cmc
push
add
mov
sbb
aam
ffreep
ret
dec
stos
enterw
rcl
inc
adc
mov
imul
sub
push
inc
lods
test
mov
lods
cdq
mov
in
cmps
aad
(bad)
pop
ret
mov
popf
add
jae
add
cwde
in
bound
xor
arpl
pop
int
inc
pop
push
push
pushf
mov
repz
ds
xchg
and
cmp
dec
shl
push
xor
mov
add
test
(bad)
(bad)
(bad)
daa
cmp
or
test
loope
loope
push
push
or
lods
aas
jl
push
mov
popa
pop
pop
mov
ret
mov
xor
pusha
or
adc
cli
xor
lods
stos
cmp
retf
mov
push
dec
gs
rcr
push
arpl
push
in
loope
jmp
sbb
retf
fwait
int
out
mov
ja
jmp
nop
pusha
movs
xchg
xor
fstp
inc
add
dec
pop
loop
ret
or
and
xor
push
fcom
cmp
lea
push
and
lock
je
dec
cmp
jge
sbb
(bad)
push
adc
sbb
pop
jne
sub
je
inc
adc
cwde
das
outs
pop
rcl
(bad)
push
aaa
stc
mov
not
sub
je
push
call
jge
mov
loop
(bad)
and
xchg
push
stc
inc
pop
push
cdq
arpl
std
mov
lds
out
lahf
aam
int3
loop
or
pushf
jmp
mov
std
mov
xchg
loope
xchg
movs
xor
pop
lock
int3
es
pop
aam
in
cmp
xchg
gs
mov
jge
fdivr
mov
clc
jb
mov
xor
adc
pop
mov
addr16
jne
inc
xor
repz
cdq
dec
iret
and
test
push
je
(bad)
mov
pop
icebp
popf
inc
mov
and
fld
mov
ins
ss
aam
add
and
ret
je
mov
xor
cmc
xor
push
shr
xor
div
push
jmp
cmps
mov
ja
loopne
setns
add
adc
lds
outs
repz
fld
inc
out
into
aaa
push
cli
test
into
out
fs
or
mov
std
jmp
outs
dec
push
arpl
shr
cmc
imul
(bad)
in
scas
mov
cmp
or
xchg
cmps
inc
inc
mov
pop
dec
xchg
je
unpckhps
mov
mov
aad
mov
dec
ja
sbb
or
dec
sub
loop
imul
cdq
outs
jl
cld
cmc
adc
xchg
dec
mov
xor
cmps
inc
cmp
pop
inc
imul
adc
push
and
and
cld
mov
aaa
adc
not
fcmovne
inc
test
xlat
cmps
test
test
cld
sub
int
add
jns
loop
xor
dec
(bad)
fcomp
and
bound
and
ret
test
pop
mov
add
int3
push
adc
pusha
out
jle
(bad)
scas
cmps
inc
ins
aam
pop
mov
les
(bad)
int3
outs
test
push
retf
scas
mov
mov
jnp
and
push
xchg
cld
inc
mov
mov
stos
call
jecxz
pop
loope
xor
pop
and
out
mov
xor
hlt
mov
into
cmc
mov
add
jle
mov
sbb
in
xchg
sub
mov
mov
ds
call
mov
sub
cmc
or
pop
mov
push
(bad)
test
add
pop
stc
sti
add
cs
mov
sbb
push
inc
test
aad
inc
cmp
fnsave
setnp
int
test
jecxz
gs
pop
mov
ja
test
mov
mov
and
jle
sub
fsub
test
adc
xchg
mov
inc
or
dec
(bad)
rcr
inc
in
and
mov
push
shr
push
jge
cli
repz
or
xlat
and
push
ror
sub
push
sbb
dec
enter
inc
out
popf
cmp
adc
dec
and
aas
dec
sbb
and
das
xor
sub
inc
jae
popf
and
loop
rcl
retf
sub
scas
cwde
or
cmp
sbb
push
add
push
hlt
sbb
in
aas
into
xor
sbb
jb
jmp
into
jp
jns
imul
dec
out
cmp
ffreep
sbb
sub
cmc
cmc
cmp
dec
mov
mov
xchg
mov
out
pop
add
pop
xor
fs
mov
les
sbb
daa
call
dec
xchg
jbe
sbb
add
aas
sti
push
mov
hlt
and
jne
jo
mov
xchg
pop
jl
cmp
mov
jb
xor
mov
call
popa
imul
push
xchg
xchg
aad
scas
hlt
jmp
in
inc
call
cmp
(bad)
loopne
enter
ss
jle
jo
int
push
mov
mov
sbb
jno
mov
mov
bound
sub
dec
sbb
jbe
inc
push
fcomip
out
sbb
dec
pop
xchg
and
cmp
fmulp
or
sub
dec
mov
data16
dec
stos
dec
es
add
iret
sbb
add
xchg
push
cld
xchg
dec
into
jge
hlt
mov
int
push
es
push
ret
iret
xchg
sbb
dec
or
and
push
push
dec
xor
cmp
add
jle
pop
outs
inc
retf
adc
pop
mov
scas
out
or
call
mov
mov
dec
js
(bad)
pop
(bad)
(bad)
jns
jmp
and
pop
retf
xchg
mov
punpckldq
test
dec
add
sbb
fistp
xchg
dec
into
cmp
and
sbb
cmp
or
pop
cmp
dec
aad
daa
sti
dec
in
adc
mov
jae
daa
adc
mov
inc
shl
mov
mov
daa
push
test
xchg
or
or
add
test
xchg
call
arpl
jl
mov
push
pop
retf
les
xor
xor
xor
cli
jge
add
pop
arpl
pop
pop
shl
adc
sub
jae
adc
scas
and
mov
mov
test
xor
aas
into
fimul
out
inc
les
xor
adc
ds
inc
daa
ret
jne
cdq
xchg
cld
hlt
daa
das
out
dec
shr
or
dec
fwait
or
add
fld
xor
xchg
fld
sbb
sbb
mov
hlt
mov
aam
cli
or
retf
and
cmp
test
fisub
jae
xchg
cld
inc
clc
lods
fbstp
stc
or
dec
jbe
jbe
dec
xor
scas
outs
into
idiv
mov
pop
movs
push
jae
fisubr
call
shr
das
lahf
dec
push
outs
test
(bad)
jo
inc
mov
mov
jmp
xchg
stc
daa
(bad)
sub
movs
out
sbb
jge
push
push
mov
out
xchg
cmp
out
jnp
dec
stc
mov
repnz
stos
ret
adc
mov
xchg
daa
mov
test
and
jecxz
sub
ja
addr16
ds
xor
mov
pop
scas
sti
xchg
jp
test
inc
xor
lods
mov
xchg
jle
dec
jo
test
cmp
jne
xchg
cld
dec
(bad)
lea
mov
shr
ins
cmp
add
mov
jnp
jne
and
inc
das
mov
sbb
sti
jmp
retf
movlps
retf
push
and
jns
or
call
popf
lods
sbb
mov
lods
outs
pusha
pushf
imul
or
mov
add
and
mov
jo
lock
arpl
push
cmp
movs
sbb
in
adc
test
dec
ret
mov
test
dec
push
imul
loope
sbb
cmp
ja
out
dec
xchg
or
jl
jp
hlt
cmp
test
mov
or
(bad)
loopne
sbb
xor
jb
ss
sar
jno
out
loopne
ficom
mov
xor
adc
cmp
jg
jns
fisubr
dec
and
int
mov
add
hlt
xchg
push
cmps
aad
imul
mov
icebp
cmc
repz
cmc
call
cmps
cmp
inc
int
jmp
aam
scas
mov
mov
imul
and
scas
pop
in
test
xor
sub
cli
test
shl
dec
cmps
inc
mov
sub
push
imul
xor
push
xchg
dec
jp
mov
xor
pushf
jecxz
mov
sub
push
pop
shr
in
sar
mov
loope
int3
mov
add
hlt
pushf
daa
addr16
aad
hlt
(bad)
mov
fdivr
data16
jnp
shr
sub
dec
sub
sub
popa
stos
inc
inc
(bad)
dec
mov
add
sti
mov
xor
push
mov
leave
lods
mov
xchg
xchg
cmp
inc
push
add
je
mov
pop
cmps
inc
pop
repz
test
loopne
cs
dec
mov
test
xchg
ror
mov
loop
xchg
push
test
stc
cld
enter
outs
stc
mov
retf
ffree
cli
test
pop
dec
jmp
push
cmp
sahf
rcl
xchg
inc
imul
jmp
ins
(bad)
mov
in
push
inc
ins
xor
outs
mov
or
xlat
inc
pop
xchg
mov
inc
dec
pop
sub
xor
mov
add
out
push
leave
in
int3
cs
inc
sbb
adc
add
push
xchg
mov
aad
inc
sub
mov
sbb
mov
cmps
je
dec
cmp
pop
outs
push
loope
sub
scas
sub
xchg
sbb
inc
push
mov
xchg
cmps
cli
bndstx
pop
fild
gs
dec
mov
cli
rcr
xor
loope
ror
dec
or
aad
xchg
rcr
movs
cmp
push
jp
fist
fs
int3
ret
enter
and
mov
xchg
daa
lds
sahf
xor
adc
cmc
add
mov
jle
cmp
or
dec
mov
scas
push
push
sub
and
push
jg
push
mov
unpcklps
sub
or
clc
cmps
(bad)
sub
cmps
inc
stc
cdq
xor
jo
jmp
aaa
retf
in
rol
add
sub
xchg
popf
in
and
mov
jno
mov
push
xchg
es
imul
or
iret
mov
leave
jecxz
cmp
out
inc
mov
ret
mov
xchg
pop
nop
out
push
cmp
fnsave
vshufps
in
icebp
xchg
cmp
dec
rcr
jle
stos
out
ror
adc
jae
fldcw
loop
out
pop
mov
arpl
lods
mov
movs
xchg
cwde
jp
sar
fsub
(bad)
sti
xchg
fucomp
fwait
popa
pop
leave
(bad)
add
(bad)
cmp
je
push
rol
mov
and
pop
cli
pop
std
dec
sbb
jns
jb
or
push
sub
pop
xlat
iret
std
xchg
pop
mov
push
mov
push
mov
cmp
loop
je
add
mov
cmp
jle
fadd
jecxz
and
adc
mov
jb
mov
dec
sbb
movs
sbb
fwait
in
jae
mov
or
pop
cmp
inc
test
lods
mov
xor
xchg
(bad)
(bad)
sub
jae
das
icebp
popf
lahf
cs
adc
mov
inc
popf
jmp
mov
mov
das
xchg
mov
sub
cmp
mov
inc
add
fwait
(bad)
into
push
mov
sti
(bad)
or
xchg
data16
or
jne
fs
or
stos
fild
cdq
jbe
rcl
bound
icebp
arpl
aam
imul
fbstp
fstp
inc
stos
retf
rol
pop
nop
pop
pop
mov
adc
inc
sub
jne
in
mov
stos
and
aas
loope
xor
mov
dec
cdq
gs
call
xor
mov
(bad)
(bad)
arpl
(bad)
shl
or
jle
outs
rcr
loop
shr
dec
data16
sbb
(bad)
mov
call
inc
push
stos
push
jmp
sbb
pop
jbe
mov
jns
ror
or
jne
(bad)
aaa
outs
jecxz
mov
add
or
add
int
addr16
xchg
stos
add
loopne
dec
int3
xor
stc
test
ins
data16
scas
aaa
lods
ins
imul
mov
dec
cmps
add
adc
pop
sub
inc
xor
jle
mov
inc
mov
in
inc
jg
rcl
ins
jmp
jl
jp
mov
dec
and
xor
aam
xchg
daa
outs
pop
mov
jmp
cmp
lea
dec
push
push
fld
mov
mov
adc
mov
mov
fs
pop
loopne
clc
jb
aaa
pop
mov
jmp
fcomp
in
shl
in
mov
inc
or
or
adc
dec
in
dec
mov
mov
addr16
sub
push
jno
jecxz
dec
push
inc
inc
fs
jae
(bad)
dec
int3
push
xchg
sub
adc
or
mov
out
push
pop
cdq
adc
mov
cmp
out
lds
(bad)
or
cmps
pop
addr16
pop
test
xor
movs
cmps
fstp
xchg
cmc
dec
ds
fcos
frstor
test
jg
stos
(bad)
loope
jo
cmp
mov
cmp
fisub
pop
fisttp
mov
nop
div
adc
xchg
sahf
add
xor
or
fild
es
int
test
out
adc
push
mov
mov
stos
mov
idiv
jne
ss
add
sub
shr
mov
div
sti
jmp
mov
cmc
xchg
mov
or
mov
sub
imul
not
and
dec
js
cmp
daa
sub
mov
inc
pop
fnsetpm(287
xor
lods
push
repnz
cmp
lods
jae
test
adc
xchg
iret
pop
xor
and
xor
add
add
mov
mov
push
loopne
adc
repz
xchg
(bad)
push
test
out
pop
mov
mov
mov
cdq
mov
cmp
ins
cmp
hlt
cmp
loop
pop
push
js
bswap
dec
imul
retf
ret
inc
or
jge
out
(bad)
addr16
xor
imul
push
(bad)
mov
aas
and
imul
or
cmp
xchg
enter
push
and
fsub
test
sbb
dec
mov
enter
mov
ds
mov
enter
xor
jge
mov
mov
bnd
jae
out
fld
scas
leave
xor
out
mov
or
es
dec
pushf
inc
sbb
call
adc
mov
(bad)
sbb
xlat
outs
out
cmp
lods
xor
mov
inc
sub
lahf
out
jns
ret
(bad)
hlt
in
shr
mov
call
mov
pop
mov
repz
repnz
jo
arpl
push
nop
pop
mov
mov
out
shl
push
ficom
scas
sbb
xchg
inc
push
mov
shl
and
ss
and
jns
fpatan
add
xor
loopne
mov
pop
add
xor
pop
mov
cmp
xchg
dec
stos
xor
adc
xchg
xchg
fld
add
test
das
jmp
xor
outs
sub
push
aaa
xor
add
fisubr
xor
(bad)
test
mov
ret
repz
in
pop
ds
in
jmp
xchg
imul
pushf
scas
jg
(bad)
sub
ret
call
mov
sub
lahf
mov
cmp
sbb
sahf
and
cli
fs
test
test
xor
out
mov
jb
imul
(bad)
xlat
aad
pop
loop
cmps
mov
fistp
sub
mov
cmp
or
imul
mul
rol
scas
ss
sbb
fld
push
jno
xchg
inc
(bad)
(bad)
pusha
add
pushfw
sub
mov
and
lock
pop
pop
ror
cmp
arpl
push
leave
jnp
nop
push
enter
rcr
cld
jmp
aam
add
icebp
push
aam
mov
shr
xchg
xor
loopne
jae
cmp
aam
iret
mov
dec
jmp
jns
inc
jp
mov
pop
mov
jne
leave
jb
xchg
bound
stos
fcom
jae
stos
stos
jae
(bad)
out
mov
nop
and
data16
jecxz
xlat
sub
pusha
shl
call
jecxz
adc
jae
(bad)
mov
repz
cmp
or
in
fstp
ret
test
pushf
ror
in
jo
rcr
or
inc
cmp
out
retf
cs
push
in
stos
inc
mov
inc
jb
mov
call
push
es
leave
test
jg
ret
imul
jae
aas
test
retf
push
xor
pop
push
out
sti
enter
or
outs
gs
jmp
jle
adc
mov
mov
fsubr
or
es
je
xlat
push
ret
rcl
sub
xchg
sub
cli
call
jl
lods
cli
mov
mov
sub
inc
test
jmp
xchg
inc
ror
pop
or
mov
sub
daa
push
je
bound
and
movs
imul
cli
sbb
sub
xor
aam
je
inc
ds
clc
or
adc
xchg
(bad)
jb
jg
(bad)
aas
sbb
dec
jge
and
mov
pop
shl
aam
lahf
sbb
int
xor
enter
pusha
jb
ins
dec
push
loop
pop
xor
pop
xlat
fs
inc
push
jecxz
retf
mov
fs
test
mov
pop
ret
inc
sti
loope
inc
mov
cmps
sbb
mov
xchg
cmp
inc
mov
and
ds
leave
fadd
pop
les
test
ins
cmp
jge
lea
xchg
xor
mov
mov
cmp
hlt
ds
fstp
mov
out
adc
xchg
jbe
add
(bad)
sbb
jnp
push
sub
inc
mov
push
call
(bad)
shl
test
add
imul
push
adc
pop
mov
int
fcmovu
data16
test
add
daa
cmps
push
aad
dec
and
xchg
xchg
cld
stos
push
jecxz
into
fld
cmp
ret
cmp
pop
dec
xchg
push
adc
dec
fbld
dec
xor
xchg
mov
or
stos
jb
mov
push
xlat
jle
fadd
in
lock
les
or
and
das
add
adc
aas
pop
ja
icebp
mov
push
lahf
fbld
add
or
or
adc
inc
push
into
xchg
xchg
in
jle
adc
addr16
not
loop
sahf
cs
push
outs
popa
js
push
mov
inc
pop
jae
jge
add
sub
inc
in
xchg
ja
sti
movs
dec
xor
pop
test
push
das
clc
hlt
cs
xchg
pushf
cmp
loope
jle
fwait
pop
sbb
cmp
test
jp
add
or
and
xor
pop
sub
xor
jle
imul
or
xor
ret
es
cmps
(bad)
jb
jmp
jno
aas
mov
jbe
fistp
(bad)
retf
cld
mov
xchg
popa
cs
bnd
mov
mov
add
pop
inc
fldenv
shr
cmps
jge
jae
dec
lahf
pop
mov
mov
adc
jo
loopne
ror
pop
mov
mov
pop
das
dec
pop
repz
push
std
pop
push
and
pop
ins
dec
dec
or
dec
push
and
ds
pop
ins
adc
scas
push
int
xor
mov
in
in
mov
add
pop
js
jo
mov
mov
int
pop
aad
sub
cmps
pop
sti
push
cld
sar
sahf
in
stos
xor
dec
lods
ss
lods
cmps
dec
push
out
or
cmp
cwde
and
test
adc
push
das
lods
jle
xchg
rol
lea
ror
hlt
push
lds
lock
fld
ret
sbb
mov
retf
add
mov
ins
jmp
or
or
or
mov
mov
mov
mov
mov
mov
int
inc
or
mov
inc
std
int3
xchg
dec
sbb
ret
inc
and
or
jae
pusha
lods
and
sub
add
push
cmp
push
pop
mov
stos
add
xchg
test
arpl
and
xor
fucomip
sar
pop
bound
push
jmp
mov
ret
adc
cwde
add
out
stc
pop
sbb
ret
jb
hlt
jl
sysexit
arpl
dec
stc
ret
fsubr
fs
or
xor
(bad)
popa
repnz
adc
push
in
push
or
clc
jge
push
outs
xor
sub
xchg
pop
daa
jl
cmp
shl
cmp
add
shr
shr
ret
in
call
push
clc
ret
sar
push
and
outs
mov
push
adc
ins
ss
fiadd
mov
inc
adc
xchg
pusha
lods
test
add
in
aad
(bad)
hlt
push
aas
aaa
xchg
into
mov
cmps
addr16
pop
sbb
out
jecxz
bound
lahf
ret
mov
push
dec
fnstsw
pop
es
mov
addr16
test
push
push
xchg
ror
lock
fidivr
arpl
pushf
lods
sub
xchg
push
cld
not
mov
mov
add
in
sbb
push
xchg
sub
mov
fisub
xchg
fcmovb
icebp
loop
xchg
or
xor
ret
sub
cmp
cwde
mov
push
leave
jbe
inc
pop
sti
inc
xchg
movs
jbe
or
test
mov
call
int3
(bad)
push
sbb
ficom
test
ds
icebp
xchg
mov
jp
popa
shl
dec
pop
adc
inc
ja
leave
xchg
xlat
add
cmp
pop
jge
enter
push
jecxz
mov
stc
xchg
and
jnp
add
stos
push
pop
(bad)
adc
add
mov
ds
cmp
or
push
daa
pop
bound
and
xchg
in
mov
jmp
jmp
icebp
rcl
call
ror
into
sbb
cmps
push
ins
inc
stc
push
popf
cdq
fcom
add
inc
in
add
sar
jmp
lods
movs
push
adc
std
mov
and
cld
add
jp
pushf
cs
outs
js
inc
and
xor
das
and
jle
ss
xor
lahf
popf
add
pop
push
mov
ret
movs
pop
aas
shl
xchg
scas
sbb
fld
loopne
sti
int
mov
out
jmp
push
pop
cmp
das
and
xor
inc
outs
(bad)
push
adc
aam
fcmovu
push
scas
ret
mov
sub
(bad)
mov
mov
ins
push
stos
cmp
test
das
fdivr
movs
lahf
out
cs
mov
int
inc
stos
fadd
inc
mov
xchg
mov
cld
pop
push
and
jne
lds
push
(bad)
fisttp
push
outs
pop
out
push
dec
aas
jmp
xor
mov
mov
push
fstp
jle
cmp
jl
adc
sbb
fnsave
and
and
xor
xor
and
cli
fprem
push
xor
jb
xchg
dec
enter
pusha
aam
add
inc
fwait
pop
lods
fsubr
push
(bad)
adc
ret
pop
sbb
cmp
rol
mov
test
movs
data16
mov
scas
dec
pop
xchg
pop
inc
lahf
push
xor
int3
movs
popa
dec
mov
loop
enter
push
fsubr
fdivr
inc
in
push
sub
fdivr
xor
push
push
retf
pop
sub
bound
and
out
int
mov
js
cmp
lahf
mov
jno
inc
pusha
push
arpl
sahf
cmp
xchg
cmp
mov
and
xchg
cmc
sti
xor
adc
inc
ret
mov
mov
add
in
xor
loopne
daa
push
fcmovnb
mov
cmp
inc
lea
add
and
xor
mov
fisub
loopne
imul
neg
add
mov
mov
dec
test
sub
add
ds
fwait
rcl
ffreep
lods
pop
mov
mov
adc
lods
hlt
(bad)
fdivrp
cmp
mov
sub
dec
popa
rcr
and
dec
rol
ds
or
dec
push
dec
je
mov
test
inc
int
mov
mov
pop
lahf
loopne
dec
sbb
and
xchg
out
and
fidiv
push
cmp
pop
lods
sub
adc
and
xor
push
repz
sbb
push
int
sbb
push
sar
ror
xor
jb
stos
push
jne
push
xchg
inc
xchg
pop
stos
mov
ins
adc
push
xchg
mov
cmps
jns
movs
les
out
out
and
adc
jb
lods
pop
jae
xor
aas
(bad)
clc
movs
js
retf
pop
rcl
sub
cmp
cmp
pop
jbe
push
cwde
jo
sbb
daa
je
pop
adc
das
pop
stc
adc
(bad)
sub
ins
xchg
lods
cmp
loope
xor
xor
pusha
xchg
stc
jmp
cmps
mov
pop
adc
and
sbb
mov
add
dec
sbb
adc
xchg
dec
(bad)
and
imul
aad
jmp
mov
or
aad
xor
or
ror
sub
js
popf
(bad)
stos
pandn
cmp
nop
outs
call
adc
es
popa
aas
dec
pop
int3
jo
sub
mov
int
and
lock
inc
jle
test
out
jmp
xchg
les
repnz
xchg
xor
push
lds
adc
jae
pushf
hlt
(bad)
call
xor
add
cs
scas
mov
pop
(bad)
and
push
loop
jne
ins
popw
mov
mov
ja
in
sahf
cmp
mov
cmps
enter
nop
and
xchg
jne
ins
das
clc
sub
adc
int3
hlt
out
cmps
sub
mov
or
inc
sbb
ds
enter
xor
xchg
sbb
push
retf
call
push
cmp
ds
(bad)
mov
mov
mov
(bad)
pop
inc
mov
xchg
add
ss
xchg
adc
retf
dec
adc
pop
add
jmp
popf
aad
pop
(bad)
jle
cwde
mov
or
sti
rcl
jmp
dec
pushf
push
cmc
repnz
ficomp
mov
scas
lea
add
mov
jmp
stos
jne
ins
call
xchg
inc
(bad)
mov
popf
mov
and
push
fwait
shl
shr
mov
(bad)
sub
or
or
xchg
and
dec
cmc
shl
pop
ins
rcr
imul
clc
cmp
xchg
aam
nop
nop
outs
pushf
int
fistp
ss
test
mov
fstp
xchg
mov
add
sub
hlt
in
cmp
mov
cmp
adc
sub
dec
pushf
js
test
(bad)
psrld
mov
inc
xchg
mov
jmp
mov
setg
push
or
mov
adc
mov
jnp
sbb
pop
add
cmp
in
sbb
jne
sbb
inc
stos
fidiv
test
and
ret
mov
mov
jns
mov
mov
mov
in
pop
adc
aaa
iret
adc
lods
add
pusha
jp
jns
jnp
fisubr
jae
shl
pop
cmp
mov
int3
retf
dec
pop
scas
pop
adc
clc
arpl
push
(bad)
rol
imul
sbb
jns
adc
pusha
clc
shl
lds
adc
adc
and
pop
inc
xchg
pop
movs
push
jecxz
xchg
sar
pop
retf
stos
scas
xchg
or
(bad)
cmc
popf
fsubr
leave
mov
call
cbw
ret
sbb
aas
nop
loop
sahf
(bad)
(bad)
addr16
add
pop
shl
test
mov
mov
repz
(bad)
gs
sbb
jnp
or
dec
mov
es
mov
and
jnp
and
stos
sub
out
push
sbb
pop
inc
fisub
push
movs
ins
(bad)
add
mov
lods
xchg
int3
add
or
scas
cmp
jle
popa
ins
test
fwait
sbb
shr
sub
adc
pusha
adc
xor
cs
std
jmp
shr
out
dec
jno
(bad)
dec
movs
cmp
xchg
xor
lea
adc
xor
adc
sub
imul
add
inc
mov
adc
dec
jae
xlat
repnz
jns
es
add
sub
ret
or
adc
or
popf
sub
aaa
inc
ret
push
ret
adc
add
cld
mov
(bad)
mov
retf
dec
push
add
in
popf
in
cwde
scas
out
xchg
push
popa
lods
aas
pusha
inc
sub
pushf
dec
jbe
mov
push
scas
jge
xchg
or
xlat
jmp
adc
sar
pop
retf
mov
shl
fdivr
cmps
mov
aaa
mov
ret
data16
(bad)
or
inc
(bad)
sub
(bad)
js
pop
shr
sbb
test
sub
in
sub
push
repz
sbb
outs
cmp
and
ins
adc
xchg
fisub
inc
and
add
aad
rcr
movs
pop
xchg
lock
(bad)
push
push
shl
les
sub
add
call
imul
pop
popa
daa
shl
mov
and
mov
mov
dec
dec
movs
adc
lds
add
dec
jmp
mov
sub
loop
pusha
pop
xor
cs
(bad)
call
test
sti
lods
sbb
mov
and
or
cdq
stos
adc
cmps
data16
inc
lock
xor
les
push
and
pop
movs
clc
mov
xchg
push
fdiv
mov
add
mov
clc
fistp
pop
cmp
sahf
lods
xchg
loope
rcl
xchg
icebp
or
cdq
ins
sar
idiv
mov
dec
push
inc
jnp
xchg
pop
push
jp
movs
fs
adc
sbb
aas
lods
std
lods
jecxz
jmp
xchg
fdiv
jg
(bad)
stos
pop
lods
xor
cmp
xor
jne
jbe
sub
xchg
push
mov
xor
mov
jb
add
cmps
lods
add
in
nop
inc
daa
rcr
arpl
stos
test
outs
das
cwde
in
mov
push
add
into
lea
pop
loop
ret
dec
add
jecxz
in
es
push
into
dec
cmp
adc
xor
jg
sub
fdivr
and
jecxz
push
or
(bad)
xor
xchg
(bad)
adc
xlat
mov
cs
add
xor
out
and
dec
xlat
retf
pop
and
(bad)
ds
mov
pop
push
dec
bnd
and
mov
inc
cmp
add
mov
test
iret
pop
pusha
das
(bad)
mov
popf
sar
xor
sub
sbb
ss
aas
dec
aad
js
lock
push
xor
daa
mov
jmp
fs
mov
push
hlt
push
dec
imul
test
pop
mov
inc
or
out
sub
ret
dec
aam
das
pop
dec
shl
int3
add
jmp
into
fisubr
add
(bad)
and
jmp
jbe
pop
das
scas
call
stc
aas
jno
js
sbb
xor
ret
cmp
lock
pop
inc
push
mov
jg
ins
dec
aad
mov
mov
or
jo
call
push
push
sub
adc
pop
(bad)
fist
nop
les
sahf
jmp
fiadd
push
(bad)
xchg
retf
mov
scas
leave
(bad)
adc
rol
cwde
push
sub
rol
ss
daa
xchg
addr16
test
pop
retf
jecxz
mov
ret
push
pop
ret
or
stc
not
mov
adc
adc
int3
lea
cs
scas
jns
stc
ja
ret
push
das
mov
in
jmp
mov
cli
push
ror
pop
clc
std
ret
sbb
call
mov
jo
fld
add
imul
es
jg
mov
cmps
ficom
push
shl
outs
push
xor
pop
pusha
cli
test
fidivr
ss
je
fwait
loopne
dec
ficomp
or
xchg
loopne
test
in
mov
or
movs
pop
pop
ss
iret
pop
movs
sub
dec
xchg
(bad)
pushf
adc
jnp
fsubr
outs
inc
pop
rcr
popf
jle
inc
cmp
cs
addr16
cli
jbe
or
cs
pop
(bad)
sti
xchg
push
aad
rcl
sar
scas
mov
in
sub
aaa
shr
mov
xchg
or
push
ds
ret
fs
jle
mov
lds
js
lock
fcomp
dec
cmc
push
rcl
jne
push
jecxz
inc
ins
cmp
push
or
cmp
mov
adc
movs
movs
mov
test
jmp
and
add
sti
leave
mov
pop
inc
sub
jle
daa
hlt
jl
xchg
cmp
fbld
cmps
cli
jmp
or
xchg
jg
es
pop
in
and
lock
jnp
in
mov
popf
invd
in
outs
fwait
or
rcl
inc
and
inc
mov
dec
adc
xchg
pop
cmp
push
stos
and
xchg
mov
out
cld
leave
les
sbb
fld
std
inc
push
push
sbb
jmp
rcl
jns
(bad)
repz
sbb
mov
mov
sub
mov
mov
mov
aaa
sbb
arpl
inc
scas
xchg
push
xchg
popw
sub
mov
(bad)
in
retf
js
pop
retf
repz
ret
adc
cmps
xchg
or
add
mov
repz
in
mov
es
repz
jae
mov
ins
adc
xchg
or
cmp
pushf
arpl
sub
pop
inc
out
movups
idiv
jne
stc
sub
pop
and
(bad)
mov
xor
call
pop
fs
stc
mov
jecxz
out
jb
test
and
test
pushf
cdq
movs
das
(bad)
call
add
ds
pop
(bad)
lods
dec
fst
inc
inc
and
inc
dec
lock
push
add
shr
mov
cmps
xchg
cmp
retf
or
ret
rcr
ret
push
dec
movs
addr16
fidivr
or
test
lahf
aaa
cwde
sub
xor
ret
pop
cmps
repz
mov
(bad)
sbb
push
fiadd
push
xchg
xchg
mov
jb
addr16
and
mov
mov
add
and
(bad)
ds
pop
xchg
jbe
mov
inc
jge
cmp
fwait
mov
pop
shl
or
aad
cmp
sub
das
adc
mov
jmp
repnz
cli
or
mov
sub
add
or
in
sbb
addr16
outs
pop
jl
xchg
mov
dec
or
stc
(bad)
leave
fidiv
out
lahf
movs
loop
cmp
verr
fidiv
ds
and
aas
mov
cli
add
xchg
in
cmp
mov
fwait
xor
(bad)
pop
or
cmps
fist
stc
xchg
or
hlt
cwde
and
daa
xor
jbe
xchg
outs
push
shl
mov
stos
cs
ins
sub
in
push
inc
(bad)
ffreep
push
hlt
and
push
push
pmaxsw
cld
imul
scas
mov
mov
retf
mov
seto
dec
inc
fcom
and
scas
dec
xchg
mov
mov
mov
ret
and
jmp
sbb
mov
sahf
or
fnstenv
xchg
sbb
push
cmps
cld
sub
loopne
rcr
ins
cmc
mov
mov
push
retf
loope
in
xor
aaa
scas
out
(bad)
mov
push
jo
out
imul
adc
ret
sbb
ins
adc
cli
sub
add
sbb
in
(bad)
data16
mov
add
hlt
(bad)
clc
fisubr
xchg
push
jp
lods
(bad)
(bad)
pusha
cmp
fmul
cld
in
shl
scas
lds
rol
jnp
or
js
cmps
mov
pop
mov
sbb
loop
les
call
or
mov
push
clc
addr16
int3
(bad)
mov
inc
xchg
inc
cmc
dec
push
paddw
or
push
icebp
loop
sahf
sub
sbb
enter
mov
or
test
inc
fiadd
fstp
add
mov
cmc
push
jno
icebp
scas
and
icebp
clc
push
fdivr
adc
mov
out
sbb
mov
aad
das
jp
cmp
sahf
sbb
pop
cmc
pop
enter
mov
ds
cmc
fist
dec
scas
inc
repnz
rdtsc
adc
pusha
les
out
pop
stos
or
retf
aam
imul
mov
and
out
psadbw
xor
aas
or
es
ja
pushfw
sti
lds
ret
jo
mov
pop
ins
scas
sub
ret
xchg
stc
lea
inc
les
mov
ss
pop
adc
jg
jl
pop
int
inc
pop
cmp
lods
mov
sbb
fs
ss
popa
xchg
inc
fldenv
lods
xchg
addr16
mov
dec
out
cmp
cmp
sub
pop
jl
mov
mov
push
cmp
push
loope
add
dec
add
and
leave
jmp
enter
mov
fdiv
scas
push
addr16
mov
mov
dec
shl
add
sbb
das
dec
mov
pop
arpl
cld
in
fsubr
ret
and
iret
ret
sbb
not
mov
lahf
xchg
adc
or
xchg
outs
sub
mov
dec
mov
xchg
push
imul
jne
mov
jle
sub
sti
add
and
xchg
cmp
dec
add
cmp
fisttp
add
lahf
and
mov
into
popf
shr
xor
jo
cmp
in
aad
pop
mov
xor
xchg
jns
dec
add
imul
into
mov
aas
ret
in
out
xchg
and
or
add
xchg
cmc
adc
jp
cmp
xchg
sbb
push
pushf
inc
(bad)
and
jmp
adc
push
mov
hlt
repz
add
das
cmp
adc
xchg
cmp
cmps
fistp
mov
mov
mov
cmps
stos
xchg
add
in
and
push
aas
bound
xchg
fist
mov
es
push
and
mov
mov
lahf
inc
data16
xchg
xchg
mov
push
jb
clc
inc
lods
sbb
lock
mov
sahf
mov
out
cmp
jo
dec
xchg
jl
jnp
dec
sub
pop
xchg
pop
call
push
ret
push
xchg
mov
cmp
js
mov
cwde
je
fisttp
push
and
aad
jg
pop
aas
into
les
and
sar
vminpd
cmp
ror
scas
jecxz
push
aam
gs
stos
ds
xor
fs
pop
cmp
(bad)
in
fwait
mov
xchg
adc
dec
adc
cld
cld
ret
out
(bad)
push
push
retf
push
mov
fisubr
fcomp
ja
mov
or
mov
test
daa
xor
push
out
in
jmp
cwde
loopne
xchg
xor
xor
sub
imul
xchg
aaa
mov
xchg
ja
pop
cmp
shr
dec
sub
mov
cmc
in
mov
pop
sbb
aas
jp
pushf
jns
iret
int3
push
(bad)
popa
dec
ins
ret
lea
mov
pop
pop
int
xlat
(bad)
xchg
daa
call
int3
jne
jg
sahf
icebp
test
rol
imul
jo
mov
sbb
pop
(bad)
int3
and
cmps
test
clc
cdq
pop
repz
fyl2x
aas
das
add
fisttp
call
jmp
and
pop
ret
mov
dec
iret
popa
sbb
aas
loopne
test
fcomi
and
repnz
cmps
cmps
ret
push
jno
stos
push
and
imul
fmul
jge
stos
and
and
jp
jle
cmp
push
jno
in
fidivr
div
pop
dec
mov
cmps
or
ss
sbb
enter
inc
jno
pusha
mov
sti
js
ror
sbb
push
or
add
xchg
int
jp
div
add
jl
inc
adc
adc
std
inc
cld
xchg
sbb
hlt
add
sub
(bad)
shr
sbb
xor
addr16
lock
push
popf
gs
out
xchg
mov
pop
cs
dec
xchg
or
ds
dec
xchg
enter
cli
mov
mov
pop
cmp
cmp
sub
repnz
mov
or
aad
cmp
pop
or
sbb
popa
jmp
cmp
pop
out
inc
fxch
xor
pop
ins
in
push
repz
pop
outs
imul
sub
push
adc
into
xor
push
and
(bad)
cmp
mov
movs
sub
cmc
and
adc
ja
cmps
push
in
fs
jge
scas
sar
cmp
sub
fucom
ins
je
in
jns
jge
push
retf
out
(bad)
jnp
add
xchg
dec
aad
test
popa
je
icebp
jmp
stc
arpl
push
dec
lea
adc
inc
sub
mov
sbb
cld
mul
dec
push
into
mov
cmp
lods
jmp
js
test
add
pushf
call
adc
out
pop
mov
sahf
xchg
popa
or
bound
dec
out
pushf
sbb
pop
loope
sbb
cmp
into
repz
or
mov
sub
xor
sbb
jo
mov
cli
add
int3
and
cmp
inc
sbb
sar
push
add
xor
test
inc
fdivr
adc
mov
lds
(bad)
aam
icebp
push
push
push
iret
cmps
xor
fist
and
dec
cmp
pop
add
aas
or
repz
fisttp
psubsb
retf
sbb
xchg
jns
lods
jnp
jb
repz
clc
pop
xor
pop
or
xlat
mov
in
retf
ins
push
jl
or
sbb
adc
add
cs
imul
pushf
dec
xor
xchg
mov
cmp
inc
ins
mov
dec
inc
mov
push
jle
imul
test
cmp
popf
(bad)
out
arpl
pop
jmp
or
mov
ss
lea
mov
cld
jbe
ret
xchg
cli
pop
mov
xchg
push
test
xchg
icebp
scas
(bad)
jne
mov
imul
dec
cs
fxch
adc
cmps
lods
inc
push
add
add
addr16
add
retf
dec
jge
sub
je
ja
in
or
cmp
popf
mov
in
out
fisttp
add
lds
rcr
and
repnz
das
je
cmp
imul
mov
push
int3
adc
cmps
loop
pop
add
mov
arpl
cmps
xchg
mov
enter
cdq
mov
xchg
pop
cmp
cmp
popf
dec
into
mov
xor
clc
inc
lods
stos
inc
xchg
shl
imul
ret
cmc
je
adc
fsubr
xor
stos
jb
xchg
mov
xchg
cmp
inc
repz
rol
mov
popf
in
xchg
xchg
dec
out
mov
or
shl
xchg
xchg
pop
sbb
or
add
in
ins
inc
inc
test
test
pop
jecxz
aam
jno
dec
lahf
(bad)
in
cmps
out
mov
pop
and
mov
jnp
mov
add
hlt
and
repnz
cdq
cli
adc
jmp
pop
cld
scas
lods
pop
cld
mov
xor
repnz
pop
jle
aas
mov
and
icebp
in
test
xchg
clc
pop
je
pop
push
aas
and
(bad)
(bad)
sub
je
in
pushf
pop
into
dec
or
add
in
in
cmp
dec
mov
maskmovq
test
retf
push
adc
push
pop
mov
cmc
adc
neg
lock
mov
push
icebp
aas
mov
or
sub
adc
or
mov
inc
inc
mov
adc
rol
dec
jge
outs
mov
jecxz
(bad)
or
sbb
shr
pop
rcl
rcr
sub
push
mov
ins
(bad)
scas
add
pop
call
sbb
xor
call
(bad)
cmps
pop
(bad)
arpl
xor
cmp
sub
(bad)
repnz
xchg
stos
add
sbb
iret
stos
sub
fwait
dec
sti
shl
add
jge
xlat
mov
ins
fst
push
sahf
js
mov
push
mov
out
out
pop
lock
push
aad
inc
in
pop
jmp
mov
fld
push
test
aaa
jno
mov
mov
cmps
cmps
or
gs
leave
inc
adc
clc
fmul
or
and
adc
es
cmps
mov
adc
adc
push
out
adc
stos
mov
popa
sahf
enter
sbb
js
sbb
addr16
fbstp
jle
ficom
or
dec
jne
pusha
push
cmps
cmc
cmps
mov
inc
push
xor
dec
ds
adc
nop
neg
xor
add
add
xlat
ins
rol
nop
cmp
push
xchg
pop
stos
test
data16
push
jmp
enter
xlat
push
neg
mov
xchg
push
xchg
sub
cs
jmp
test
adc
out
lds
(bad)
lock
jg
gs
repz
inc
push
test
loop
and
pop
cmp
in
sub
jo
cmps
mov
(bad)
in
call
mov
mov
xor
inc
push
div
sub
adc
div
call
mov
mov
jne
xchg
push
sbb
mov
add
outs
aaa
call
mov
jb
or
cld
mov
sbb
push
inc
add
stos
loope
jg
test
push
call
adc
push
test
(bad)
fist
mov
fadd
cli
cs
inc
xchg
sub
adc
mov
add
adc
sar
out
add
cld
sbb
fmul
cld
lods
add
mov
sub
retf
mov
jns
xchg
mov
pop
loop
test
jno
sbb
mov
xor
add
jp
bound
sbb
out
sbb
std
mov
push
mov
sbb
xchg
movs
jno
push
push
push
mov
mov
push
ror
jnp
mov
in
fiadd
mov
int3
bound
lahf
mov
test
mov
prefetch
jne
cwde
mov
outs
add
mov
fdiv
inc
test
in
cmp
add
sub
xchg
cdq
shl
cmc
popf
jbe
pop
fnsave
les
sub
pop
mov
int
push
push
mov
das
es
shl
scas
sub
scas
and
cmps
inc
stos
imul
jecxz
imul
pop
inc
mov
mov
dec
sar
inc
test
xor
repz
mov
iret
pusha
cwde
pop
jmp
inc
ins
dec
sub
xchg
or
enter
cmp
fdivr
mov
js
fld
xor
sbb
sub
adc
aad
mov
jb
cmp
daa
and
scas
sahf
dec
das
push
scas
rol
out
aam
push
jl
bound
ja
stc
retf
sbb
sub
jns
or
in
dec
cmc
and
cli
mov
cmp
scas
fiadd
js
fs
cmps
(bad)
mov
mov
call
xchg
loop
add
in
loopne
daa
icebp
ins
icebp
xchg
addr16
test
xchg
sbb
sub
fstp
mov
push
test
scas
imul
mov
and
not
pop
inc
mov
aam
cmp
cld
(bad)
into
cmp
and
mov
jecxz
ins
jge
cwde
mov
mov
xor
pop
push
ror
xor
mov
dec
inc
scas
outs
mov
xor
in
repz
xor
aaa
mov
mov
popf
jne
retf
pusha
dec
sbb
adc
adc
sub
push
or
(bad)
sahf
mov
adc
push
xchg
sub
fwait
scas
push
mov
sbb
inc
in
xor
ss
loope
pop
test
popf
dec
scas
pop
pop
and
fcomp
push
inc
pop
fisub
test
aam
xchg
mov
retf
xchg
mov
inc
inc
jae
in
adc
retf
ins
in
lea
cmp
jnp
add
mov
pop
pop
imul
rcr
adc
add
or
lahf
enter
sub
imul
fmul
in
push
leave
aas
xchg
and
xchg
into
test
push
add
push
sub
mov
mov
xchg
aas
mov
outs
pop
stos
shl
xchg
imul
dec
fwait
jp
add
push
ins
ret
movs
std
push
imul
inc
call
cmp
imul
pop
aaa
add
and
adc
jle
xor
enter
jb
adc
xor
adc
aaa
mov
inc
outs
sbb
inc
xchg
xchg
mov
aad
lea
inc
jg
into
(bad)
shr
jae
xchg
pop
shr
lock
dec
test
je
push
call
out
mov
inc
jmp
pop
sub
cmc
push
out
and
bound
push
aas
push
(bad)
and
bound
sub
dec
je
test
sbb
push
jle
(bad)
mov
xor
xor
dec
fild
xlat
pop
sub
repz
cs
in
lods
push
ins
in
in
adc
jecxz
xor
jl
idiv
or
cmp
test
test
or
imul
lock
shl
icebp
(bad)
pop
mov
out
inc
push
adc
or
es
sahf
das
out
int3
mov
inc
jmp
leave
xchg
jl
pop
jnp
call
icebp
adc
dec
push
adc
pop
sub
outs
jge
pop
imul
loop
mov
xchg
sub
js
sbb
ins
loop
mov
les
mov
jno
(bad)
mov
or
fstp
pusha
rcl
test
mov
or
sub
sbb
dec
add
(bad)
shl
(bad)
jmp
jle
rep
lea
inc
push
jmp
push
movs
jmp
(bad)
out
mov
in
inc
dec
inc
cmps
add
mov
cmp
daa
shr
mov
mov
xchg
pop
imul
shl
or
dec
xchg
xor
xor
fsub
(bad)
aam
mov
pop
push
add
pushf
int3
add
push
inc
imul
mov
sub
sub
xor
mov
xor
test
cmp
mov
movs
push
mov
lea
sbb
(bad)
out
int
enter
jno
div
ret
mov
xlat
in
add
mov
sub
iret
xchg
jo
jo
fld
ja
gs
in
mov
les
pop
xchg
ficom
fadd
in
add
rol
push
mov
adc
jecxz
cmp
lahf
mov
daa
mov
pop
fistp
fadd
call
sbb
(bad)
(bad)
ins
xchg
pop
push
outs
pop
jne
sbb
dec
push
and
(bad)
cmpxchg
mov
jbe
push
xor
test
jg
repnz
adc
loope
int3
mov
test
mov
loop
pcmpeqw
jmp
pop
and
neg
pop
mov
out
mov
add
cmps
add
mov
out
dec
gs
in
imul
arpl
pop
rcl
xchg
and
aas
push
shl
mov
mov
mov
cmps
sahf
lods
mul
xchg
pop
into
loop
pop
sbb
ss
jg
cmc
dec
clc
out
stos
jns
movups
outs
arpl
stc
inc
xor
test
outs
mov
and
idiv
and
jmp
xchg
out
jne
lods
xchg
mov
sub
sub
mov
inc
jo
out
pop
or
fiadd
in
sahf
jae
test
pop
jmp
je
lods
mov
nop
pop
ds
out
dec
fld
add
xchg
jnp
inc
and
sub
cmp
fs
push
sub
adc
sub
nop
jecxz
jbe
lods
sbb
xchg
pop
inc
cmps
jg
xchg
or
ret
xor
rcr
jae
sti
call
pop
mov
out
test
or
xchg
jle
test
jp
push
dec
push
sub
mov
int3
inc
dec
mov
inc
add
fld
ins
add
mov
sbb
mov
je
xchg
xlat
rcr
shr
mov
loop
inc
popf
mov
fwait
mov
push
add
popf
jno
js
pop
jnp
dec
lock
call
xchg
and
inc
dec
cwde
ds
jae
jp
mov
mov
das
lods
pop
loopne
sbb
or
fucomi
ins
out
in
xchg
and
or
jl
or
out
adc
out
jmp
xlat
xchg
mov
xor
inc
aaa
stc
pop
mov
dec
sub
jnp
sub
push
int3
outs
jecxz
pop
lea
lods
jp
jg
or
mov
push
and
cmp
(bad)
ficom
std
push
enter
push
jae
mov
call
mov
div
mov
cmp
movs
out
fs
cmps
outs
out
das
int3
inc
lock
add
test
ins
cld
adc
mov
push
jmp
pop
adc
out
or
cmp
repnz
and
xchg
mov
cdq
test
pop
lds
test
add
jl
mov
cs
in
mov
mov
out
rol
rcr
push
lods
fdiv
jmp
mov
jbe
pop
test
xlat
out
nop
outs
imul
cmc
sub
xlat
inc
inc
inc
retf
add
cmps
in
and
cmc
xchg
add
das
(bad)
cmc
sti
mov
inc
mov
int3
outs
fld
sbb
dec
lods
or
pushf
in
test
push
cld
inc
xchg
push
retf
xchg
test
aam
mov
xchg
adc
jne
std
test
or
xchg
cmp
push
mov
jp
rol
push
shl
pop
aam
fldenv
jns
(bad)
mov
jl
cmp
jo
mov
cld
jg
sbb
mov
dec
and
test
std
xlat
inc
pcmpeqw
cmp
sti
jle
movs
mov
test
lahf
scas
(bad)
fsub
jnp
fsubr
xchg
mov
inc
ins
stc
or
sti
dec
add
and
jmp
mov
sti
pop
cmc
mov
jg
or
jno
dec
pop
stc
xor
popa
icebp
push
mov
fs
mov
addr16
fdiv
in
mov
cmp
aad
xor
mov
or
and
fidiv
in
fimul
and
cmps
push
push
out
icebp
push
int3
jp
jmp
mov
push
retf
mov
inc
mov
mov
aad
cmp
mov
adc
add
add
mov
adc
div
(bad)
test
jmp
rcr
pop
mov
fdivr
sbb
pop
pop
out
mov
xor
dec
pop
dec
inc
icebp
cmp
cmps
fwait
shl
(bad)
repz
add
les
mov
leave
or
push
jns
inc
pop
out
out
call
neg
arpl
dec
xchg
fiadd
mov
push
sub
bound
sub
xor
sub
pop
lods
jns
jne
mov
cli
sbb
pop
push
retf
xor
mov
and
xchg
adc
retf
daa
ficom
pop
(bad)
fmul
mov
(bad)
mov
and
adc
jns
inc
xor
lea
stc
add
jno
sub
popf
cmp
sub
mov
inc
jo
and
sub
push
hlt
mov
movs
clc
mov
bound
imul
xor
inc
fdiv
pop
mov
fist
inc
mov
es
jae
push
scas
cli
popa
push
fisub
pop
mov
push
xchg
mov
lock
and
dec
xchg
retf
jnp
xchg
and
push
lods
int3
mov
pop
push
push
push
not
jo
stc
xchg
mov
push
ds
ficom
jecxz
popf
(bad)
cli
imul
xchg
jmp
or
mov
add
xor
pop
sti
jge
mov
test
cmp
jmp
push
fcomp
jg
cmp
nop
out
jle
lock
xchg
fwait
sub
in
cmc
push
inc
call
popf
sbb
pop
lahf
xor
dec
sub
and
and
adc
popa
std
mov
(bad)
mov
test
aas
and
mov
ret
cmp
ret
lds
dec
and
out
inc
hlt
pop
shr
dec
inc
push
or
mov
xlat
rol
je
add
jmp
mov
mov
sar
sbb
mov
lods
call
iret
mov
aas
sbb
fbstp
xor
push
loopne
wbinvd
int
into
mov
neg
into
ror
mov
xlat
pop
pop
mov
scas
aaa
xchg
push
dec
lods
in
rol
xchg
pop
ret
xchg
test
hlt
sub
lea
jmp
arpl
or
fisttp
scas
fld
push
(bad)
stos
fsubr
add
loope
std
sub
push
sbb
mov
jmp
jp
popf
and
jp
sub
cmp
cwde
leave
pop
enter
xchg
in
ss
mov
repz
ret
add
xchg
jnp
(bad)
data16
dec
bound
ss
cmc
repnz
mov
xor
(bad)
fiadd
or
fwait
fs
adc
(bad)
stos
das
xor
mov
test
or
mov
clc
in
mov
sub
fidivr
xchg
daa
(bad)
cmp
loopne
aas
pop
adc
or
xor
hlt
pop
pop
inc
not
push
push
sub
popa
jecxz
xchg
call
dec
pushf
stos
mov
cli
aas
ins
in
out
inc
stc
jae
out
cmc
and
adc
in
xor
repz
mov
retf
dec
nop
jns
xor
popa
stos
repnz
movs
cmps
dec
mov
mov
xor
jno
and
pop
and
fdiv
test
push
call
mov
jb
pushf
add
das
clc
addr16
push
adc
inc
pop
stc
inc
or
lahf
add
scas
iret
mov
sti
adc
sbb
adc
sbb
sbb
mov
cld
xor
aaa
and
int3
fdivrp
push
or
into
mov
inc
shl
mov
sbb
jb
push
aaa
fdivrp
lahf
and
mov
jb
mov
sub
cmps
inc
cmp
push
sbb
xor
mov
add
loopne
das
imul
adc
call
mov
add
jbe
cmps
sti
mov
xchg
inc
xchg
out
test
es
imul
test
mov
sbb
sbb
sbb
dec
in
arpl
scas
jmp
(bad)
je
fsub
sti
jg
pop
cmp
fldcw
mov
call
push
push
pop
push
sub
fiadd
retf
jno
sub
imul
jns
in
xor
lds
and
rol
dec
fist
ds
pminub
sub
cs
mov
pop
sub
add
push
or
lods
push
push
pop
pop
jbe
cmp
ins
sti
(bad)
jo
mov
xchg
xchg
jle
xor
pop
jmp
pushf
arpl
cwde
bnd
and
add
mov
cmp
jno
int
sub
aas
retf
imul
cmp
adc
shr
and
fbld
pushf
movs
ret
and
adc
mov
scas
sbb
dec
add
les
cmp
dec
std
jbe
js
lahf
xor
(bad)
xchg
dec
xchg
arpl
adc
(bad)
mov
mov
retf
add
mov
int3
cmp
imul
cli
mov
adc
xchg
mov
movs
repnz
pop
ss
in
js
add
sbb
into
and
fist
dec
call
mov
inc
popa
push
jno
pusha
loopne
stos
test
popa
(bad)
es
dec
cmc
scas
dec
or
pop
ror
jmp
sub
bound
movs
xchg
mov
test
mov
jle
mov
mov
push
push
js
mov
push
data16
stos
mov
frstor
js
lahf
xor
or
push
lds
icebp
cmps
shl
mov
push
sar
imul
pop
xor
(bad)
iret
loopne
mov
add
cmp
add
ds
aaa
mov
cmp
in
jl
sub
jns
jne
ror
pusha
lea
fcom
jle
cld
mov
adc
cdq
lock
(bad)
xchg
pop
or
div
push
pop
ins
dec
stos
xor
out
cs
aad
dec
xchg
(bad)
mov
aas
push
push
out
dec
jmp
jmp
jmp
mov
inc
mov
(bad)
test
push
jnp
mov
movs
fisttp
inc
adc
addr16
movs
das
mov
mov
adc
fwait
xor
in
js
loope
loopne
dec
mov
cwde
push
sbb
fidivr
(bad)
adc
xchg
cs
mov
xlat
jecxz
daa
stc
inc
and
std
xchg
push
out
and
push
rcl
xor
gs
std
scas
jae
mov
sbb
sbb
retf
hlt
scas
mov
inc
jl
jmp
sbb
mov
inc
jle
mov
push
int3
imul
adc
cwde
sbb
xor
pop
add
adc
int
mov
outs
xchg
mov
jmp
dec
push
out
std
sub
pop
ds
sbb
cmps
(bad)
dec
xchg
in
mov
ret
push
mov
bound
mov
outs
jb
cmp
fld
cmp
ins
inc
push
std
popa
jnp
and
or
xor
cli
pop
and
neg
push
fcmovne
xchg
shl
stc
popa
push
hlt
test
adc
jno
dec
dec
fwait
xchg
test
int
add
stc
and
push
ret
inc
xor
jecxz
jecxz
jmp
pop
out
sbb
inc
imul
shl
jo
repnz
mov
mov
into
mov
or
sub
mov
mov
in
lods
push
aas
jmp
enter
mov
ss
xor
out
dec
scas
stc
adc
js
xchg
scas
or
daa
xor
jmp
dec
jns
stos
sbb
cli
or
sbb
cld
mov
lea
push
test
fdivp
jle
daa
sub
cmp
iret
pop
mov
dec
mov
dec
(bad)
fld
sub
push
push
xchg
inc
test
stos
ret
inc
inc
dec
mov
out
cmp
inc
push
dec
jbe
and
lods
push
adc
mov
xchg
and
inc
std
adc
js
and
mov
add
xor
mov
cmp
test
leave
add
or
aam
inc
stos
cmp
clc
call
nop
sub
mov
shr
sub
adc
inc
stc
mov
mov
(bad)
mov
stos
clc
shr
call
imul
sbb
or
pop
(bad)
mov
xor
sub
xchg
inc
pop
in
jae
ds
push
stos
xor
inc
sbb
sub
(bad)
xchg
jbe
jg
div
xchg
mov
ins
(bad)
dec
jmp
push
add
add
cli
mov
pop
adc
out
ret
shl
repnz
xor
arpl
nop
mov
dec
je
mov
mov
icebp
and
mov
(bad)
into
fcom
fs
push
fsub
pop
test
sbb
sbb
jno
in
out
or
or
sbb
push
push
mov
sub
gs
mov
mov
mov
mov
xchg
cmp
inc
inc
and
in
or
js
sbb
inc
inc
nop
bound
adc
pop
jno
xor
addr16
aaa
cmp
in
mov
retf
push
pop
jmp
or
aad
sbb
push
pop
inc
dec
call
and
push
sub
inc
(bad)
xor
push
(bad)
mul
(bad)
shl
(bad)
fisub
enter
push
push
sub
out
mov
mov
fiadd
jo
aam
ins
hlt
je
and
repz
jne
cdq
(bad)
fldln2
sbb
mov
push
xor
pop
add
adc
add
leave
cmps
clc
jp
cwde
enter
imul
pusha
jne
ss
outs
mov
sbb
adc
sub
call
cmp
jmp
sub
idiv
or
pop
sbb
adc
jno
mov
cmp
imul
mov
test
sub
sub
xor
cmp
mov
push
outs
lods
pop
jg
nop
dec
jno
bound
retf
popa
xchg
jp
sub
xchg
and
jecxz
pop
fst
aas
dec
retf
pop
add
in
xlat
ja
xor
pop
mov
shr
push
jmp
pop
dec
test
and
mov
mov
jmp
popa
pop
into
pop
or
and
push
outs
inc
add
mov
adc
mov
fwait
hlt
hlt
icebp
pop
jne
inc
std
rcr
add
lock
iret
push
pop
xchg
mov
fmul
mov
fist
out
add
add
xchg
dec
or
lea
push
push
jmp
add
jmp
ins
loop
sbb
jecxz
inc
or
cmps
lods
adc
mov
mov
ds
cld
in
leave
lds
or
cmc
shr
sahf
je
ss
push
mov
xchg
popf
jmp
push
pushf
pusha
std
jmp
test
test
test
or
xchg
sbb
or
and
loop
or
and
mov
bound
mov
mov
push
xor
or
shl
bound
fisub
(bad)
lods
sub
sahf
in
adc
lods
vcomisd
push
(bad)
cwde
out
std
shl
sbb
int
inc
push
pop
fsubr
repnz
xor
popf
sbb
lahf
dec
ja
cmps
rol
pop
adc
mov
iret
mov
out
sub
cmp
lods
jnp
add
repz
mov
mov
sub
je
cmps
adc
xor
and
xchg
dec
mov
enter
fild
add
mov
xchg
fisttp
repz
sar
push
arpl
cwde
ds
push
or
adc
add
mov
out
dec
in
shr
gs
shr
mov
dec
enter
jg
mov
push
push
jb
or
les
dec
xor
jne
mov
inc
push
push
js
xchg
mov
repz
movs
adc
and
fiadd
div
mov
and
int3
cld
dec
das
mov
inc
adc
cli
and
and
mov
jns
cmp
dec
mov
and
xor
lea
cmp
daa
jne
fucomp
adc
sub
(bad)
outs
or
sub
jae
div
xor
pop
cdq
pop
outs
xchg
aas
call
mov
std
ja
addr16
mov
ss
push
and
mov
cmps
(bad)
mov
pop
push
les
mov
mov
loope
and
jne
cmp
je
into
(bad)
inc
cs
sbb
loopne
test
xor
fstp
ret
sbb
cdq
add
sbb
and
sbb
outs
shl
test
and
jg
dec
cmps
and
stc
lods
sbb
mov
jcxz
in
lahf
mov
dec
or
call
cs
inc
cdq
xlat
cmp
sbb
adc
xor
pop
cmp
test
xor
or
test
inc
in
mov
ins
retf
dec
adc
fdivr
(bad)
fisub
or
lods
xor
xlat
inc
xchg
adc
dec
add
in
mov
fnstcw
outs
adc
mov
rcl
sub
dec
fdivr
movs
jo
dec
or
xchg
mov
or
inc
add
test
sub
test
icebp
movs
inc
cmp
pop
outs
pop
or
or
pop
xor
push
ret
lods
retf
pop
jmp
push
push
retf
xchg
pop
add
cmovs
ins
ret
shr
lahf
and
jb
jbe
jle
ins
mov
nop
fld
popa
xchg
scas
scas
stc
or
call
adc
mov
clc
addr16
retf
icebp
or
sti
mov
dec
xor
imul
jae
jle
bound
aad
icebp
push
in
outs
scas
dec
inc
fdivr
(bad)
pop
ss
pop
loope
dec
mov
loope
jns
and
ins
mov
and
inc
jl
sub
pop
mov
call
fmul
mov
shl
xlat
jns
clc
mov
jle
cmovae
movs
lea
outs
push
sub
jg
xchg
push
pushf
stos
inc
push
sbb
sar
es
xor
int
test
mov
adc
shl
out
sub
xchg
movs
push
jns
into
ror
out
shl
jge
je
push
xor
das
(bad)
ins
sbb
sti
mov
dec
mov
xchg
ss
inc
pop
fsub
sbb
mov
aad
in
cmp
hlt
pop
fild
nop
and
add
xchg
xchg
sub
lods
adc
cmp
pop
sbb
jg
mov
popa
mov
ins
inc
adc
xor
mov
mov
sub
jmp
jp
pop
mov
shr
xor
xor
adc
mov
fmul
cmp
mov
sbb
aas
pop
jp
push
cdq
imul
sub
jle
jp
add
pop
inc
jbe
inc
(bad)
jg
shl
repnz
ret
adc
(bad)
mov
je
push
mov
test
scas
in
test
xchg
xor
sti
jle
sar
dec
and
rcr
xchg
adc
or
scas
mov
mov
(bad)
xchg
mov
div
pop
dec
das
mov
repz
inc
bound
mov
pushf
adc
cmp
push
out
and
loop
clc
add
or
mov
cli
lods
daa
out
hlt
dec
jmp
mov
sub
xor
aad
jmp
mov
mov
pop
fiadd
pushf
sbb
xchg
retf
(bad)
pop
xchg
and
pop
pop
daa
pop
cld
ins
jae
and
sub
lods
movs
and
fwait
repnz
adc
mov
and
hlt
push
pop
dec
add
aaa
mov
hlt
xchg
or
lods
popf
fldcw
and
push
mov
addr16
dec
add
xchg
in
pop
adc
ds
outs
iret
sti
ret
add
cmps
rcl
rcl
lea
pop
mov
(bad)
fdivr
loopne
fcmovnu
cwde
aam
pop
fdiv
mov
aaa
lods
ss
mov
arpl
out
(bad)
push
mov
jge
inc
adc
ror
xor
fsub
inc
cmp
or
ror
sub
lods
imul
cmp
test
push
pop
loope
sahf
and
out
mov
xchg
ret
dec
cmp
inc
adc
mov
sti
push
and
pop
repz
lahf
(bad)
unpcklps
jge
jb
inc
(bad)
mov
cs
pop
xchg
xchg
lahf
xor
and
mov
pop
(bad)
xchg
inc
hlt
jnp
not
mov
test
xchg
mov
mov
pop
iret
ret
pop
add
xor
adc
cmps
mov
xor
lds
data16
jno
inc
test
push
popf
dec
mov
sbb
dec
sbb
stos
pop
call
jb
xor
mov
inc
xchg
mov
retf
imul
inc
mov
cmps
add
adc
out
push
xchg
int
out
push
mov
adc
ja
and
(bad)
fwait
sub
mov
sbb
fisubr
push
ins
xchg
or
ins
les
hlt
jne
add
aad
in
mov
xchg
dec
ss
or
(bad)
out
or
xor
jle
je
xchg
or
xor
push
xchg
push
xor
ins
jp
and
inc
in
popf
inc
sahf
mov
xor
repz
ins
lahf
fnstsw
adc
push
mov
aad
sub
fistp
int
stos
lea
lds
jne
out
fadd
test
and
(bad)
adc
rcr
aad
mov
pop
dec
push
push
push
mov
ficomp
xchg
push
add
leave
pop
loop
inc
inc
cwde
sahf
push
or
mov
jg
movs
mov
ror
shl
ds
push
js
dec
inc
pushf
mov
and
xor
mov
jmp
inc
xchg
push
sbb
mov
jecxz
jb
dec
pushf
out
sub
jne
mov
je
ficomp
addr16
shl
add
sbb
push
pop
push
test
mov
and
sbb
sub
outs
push
mov
mov
and
dec
add
stc
jge
shr
or
xor
adc
retf
jae
add
xchg
xchg
xchg
mov
(bad)
jp
xor
std
or
aaa
lods
xchg
sub
xor
into
ror
inc
fsubrp
xchg
retf
dec
fs
add
ss
not
mov
add
mov
pusha
push
loop
aad
pminub
jmp
mov
dec
nop
sub
fnstenv
jl
cs
or
idiv
xlat
or
mov
in
mov
mov
outs
mov
push
retf
cmc
fcmovnbe
xchg
jge
cwde
jb
add
fdivp
mov
mov
xchg
es
test
dec
imul
retf
cmc
movs
mov
loopne
mov
cmp
ret
retf
sbb
and
fadd
(bad)
pop
xchg
mov
movs
mov
mov
mov
mov
adc
adc
jle
out
ret
pop
push
and
pop
push
push
cld
sbb
cmp
pop
push
data16
aad
popa
dec
sub
mov
retf
and
in
pop
mov
gs
fld
dec
out
mov
inc
mov
fisub
loopne
jae
aaa
rcl
mov
hlt
xchg
add
test
jle
and
mov
cmps
jne
push
leave
in
fbld
push
sub
loope
lds
mov
cld
aaa
test
push
jmp
and
sub
and
add
sar
aas
fist
xchg
push
dec
pop
enter
repz
shl
push
ins
mov
or
cmp
retf
repnz
jno
jns
sbb
fst
ds
call
xchg
(bad)
lock
inc
add
std
ja
xchg
pop
push
test
and
cmp
or
ds
inc
xchg
jae
xchg
push
sbb
loopne
mov
inc
sub
arpl
xchg
or
(bad)
jns
retf
ins
stos
leave
es
pop
mov
jns
xor
jne
ja
lahf
mov
daa
jb
xchg
loope
cmps
push
mov
fld
sti
push
dec
popa
mov
cmp
jns
cmp
pop
cmp
push
pop
mov
idiv
and
jb
xor
xlat
jge
ret
out
dec
cld
aam
cmps
scas
inc
stos
cmp
into
pop
movs
fstp
and
aaa
or
aam
adc
cli
dec
and
popa
push
jge
xchg
dec
push
aaa
push
je
test
cmp
ret
mov
hlt
and
mov
loope
mov
gs
dec
mov
repnz
push
sub
fidivr
test
out
cwde
scas
call
(bad)
jmp
jbe
sub
in
adc
in
in
cld
(bad)
cmp
test
cmps
cld
dec
jg
aad
sub
mov
or
je
test
push
pushf
mov
push
mov
xchg
adc
adc
imul
(bad)
cmp
pop
movs
cmps
mov
push
mov
sbb
cmp
stos
(bad)
ror
mov
cmp
dec
jg
dec
pop
or
outs
movs
xor
sbb
jp
(bad)
mov
or
jp
rcr
jg
cwde
outs
fsub
pop
cld
dec
ret
and
mov
xor
or
jle
fidiv
mov
shl
push
add
call
repnz
je
sti
adc
sbb
dec
lods
mov
cdq
sub
test
inc
dec
ins
adc
imul
sbb
inc
xchg
test
sub
mov
add
mov
jp
scas
or
aad
adc
mov
in
fiadd
mov
add
jp
jb
(bad)
scas
sub
dec
(bad)
aad
jle
test
xor
cmp
call
cdq
dec
sub
mov
rol
mov
sbb
sub
inc
mov
int3
and
leave
push
jecxz
add
xchg
push
(bad)
jmp
out
out
aaa
sbb
pop
outs
mov
movs
ins
loope
les
cmps
mov
push
xchg
xlat
xchg
data16
gs
in
ja
cdq
int3
out
inc
movs
cmp
cmps
jmp
les
cmp
ret
out
iret
(bad)
in
push
jmp
retf
ds
sub
(bad)
aam
push
sub
dec
xor
(bad)
cdq
xchg
cmp
fmul
pop
mov
lods
jecxz
repnz
shl
loopne
jb
or
jecxz
daa
jbe
int3
xchg
pop
mov
xor
inc
clc
mov
sub
jb
mov
lahf
es
add
pop
mov
movs
mov
push
cmps
sub
sub
jle
lahf
dec
push
push
pop
or
xchg
jl
push
sbb
and
mov
in
clc
mov
lods
xchg
mov
lock
mov
cmp
and
fs
movs
cmp
dec
and
cmp
adc
push
daa
out
xchg
xchg
ja
lea
cmp
fs
jae
out
jmp
test
or
adc
push
jb
mov
in
dec
(bad)
sbb
inc
push
es
ret
jge
lods
mov
cwde
daa
sub
add
mov
scas
cdq
mov
cmp
mov
mov
in
mov
or
stc
gs
not
jecxz
pop
mov
fsubr
adc
xchg
cli
jne
shr
cmp
cmp
imul
rcl
enter
aas
jl
lahf
push
fsubr
and
push
(bad)
push
retf
cwde
xchg
sbb
or
adc
cld
cwde
xchg
dec
in
mov
(bad)
int
mov
ror
push
scas
rcr
xchg
(bad)
icebp
adc
js
movs
ss
mov
loopne
je
push
dec
add
inc
mov
enter
pop
mov
sti
sti
inc
int3
sar
mov
js
mov
adc
icebp
outs
fs
arpl
mov
add
sbb
jle
inc
sahf
in
shl
xchg
aaa
data16
sbb
cmps
cmps
add
xchg
pop
daa
xchg
movs
xchg
dec
and
or
and
xadd
pushf
or
jae
aaa
popa
movs
mov
cmp
mov
xchg
movs
pop
stc
mov
sub
cmp
ins
xchg
enter
mov
mov
mov
mov
dec
jbe
jecxz
inc
out
pop
push
xchg
sbb
test
mov
or
sbb
or
mov
cmp
ret
sub
ss
mov
ret
fs
loop
mov
mov
add
mov
repz
outs
ret
xchg
jae
pop
nop
not
mov
nop
in
jae
inc
pop
int
xchg
rcr
rcl
or
and
and
adc
popa
cmp
scas
(bad)
movs
popf
push
sub
mov
ins
adc
push
pop
pop
mov
mov
sbb
and
je
jp
jne
mov
(bad)
inc
add
xchg
jmp
cmps
into
jp
lds
xchg
ja
repnz
jmp
cli
add
pusha
sbb
out
inc
int3
int3
jmp
ins
pop
lahf
push
imul
out
icebp
mov
lds
inc
inc
lahf
inc
test
jecxz
icebp
sub
pop
cld
fwait
sbb
jecxz
inc
xor
test
adc
add
retf
mov
icebp
int3
xor
jmp
aaa
and
(bad)
cmp
and
adc
pop
or
cli
push
out
test
loopne
cli
sub
push
pop
jo
cmp
das
cmp
cwde
sbb
out
stc
loopne
jmp
jo
and
dec
mov
movs
push
jecxz
ficom
xchg
sub
add
or
add
sbb
jecxz
xchg
ins
inc
mov
(bad)
jns
mov
rol
xor
cld
adc
push
loop
pop
pop
cmps
inc
stc
in
inc
(bad)
cli
mov
(bad)
jb
(bad)
xchg
mov
imul
fdivr
cdq
add
test
dec
dec
int
in
mov
pop
scas
mov
ficom
mov
adc
and
mov
adc
dec
fld
and
das
popf
inc
jmp
inc
dec
push
cmp
jmp
mov
pop
sahf
aam
sbb
scas
jl
xchg
or
mov
cmp
or
cmp
jp
mov
sbb
popf
ret
mov
mov
sbb
push
push
xchg
fisubr
lds
(bad)
cmp
jb
cmp
(bad)
push
aaa
mov
mov
ss
je
add
xchg
push
sbb
stos
adc
dec
movs
jg
cmp
stos
pop
(bad)
cmp
cmp
lea
mov
xor
sub
lock
into
imul
das
enter
dec
or
retf
inc
xchg
mov
mov
std
(bad)
and
pop
(bad)
shl
xchg
sbb
and
out
outs
xchg
pop
mov
(bad)
xlat
xor
bound
aam
and
pop
adc
jmp
sahf
jbe
push
sub
dec
push
pop
mov
loop
and
ret
test
jp
inc
dec
rcr
ins
outs
xchg
mov
(bad)
pop
push
out
ins
pop
cmps
jecxz
inc
dec
(bad)
imul
test
sbb
out
mov
fisttp
xor
fdiv
pusha
ss
xchg
sbb
xchg
add
push
sbb
imul
adc
les
clc
mov
movs
xor
or
dec
push
dec
add
scas
cs
push
imul
fucomi
ror
push
or
mov
mov
leave
jmp
add
out
xchg
fwait
and
sbb
pop
cmps
cmp
pop
aaa
mov
push
xchg
sbb
mov
sbb
out
lahf
fist
popa
fimul
mov
sub
outs
nop
pop
hlt
outs
sahf
shl
idiv
mov
ins
jmp
loope
ds
data16
mov
mov
das
or
and
dec
std
xor
ror
mov
pop
lods
movs
ss
outs
push
mov
shl
cdq
repnz
nop
ffreep
dec
stos
jbe
push
or
mov
push
xchg
faddp
or
sbb
call
mov
ds
jb
test
mov
push
cmp
data16
sar
jnp
push
inc
retf
pop
les
pop
stc
sbb
fdiv
(bad)
pusha
(bad)
fidivr
outs
popf
aas
scas
sbb
add
imul
push
or
cmp
call
xor
shr
ret
cmp
sbb
sub
adc
lahf
repnz
add
fdiv
pop
jge
call
and
mov
mov
and
je
dec
arpl
imul
add
or
mov
or
and
sbb
add
mov
stc
add
movs
stos
sbb
pop
imul
call
in
push
lea
popa
push
fst
mov
imul
fmul
cmp
cld
loope
pop
push
mov
aam
inc
mov
or
cmp
mov
imul
out
sbb
jb
aad
pop
ds
enter
xchg
mov
cmp
test
jp
cld
add
shr
js
movs
dec
out
push
jl
rcr
add
xchg
mov
sti
cmp
clc
in
push
enter
xchg
inc
test
jb
jmp
fwait
cmp
std
xchg
test
xchg
xor
lock
or
push
pop
fisubr
ins
cmps
pop
cdq
mov
lods
dec
ror
inc
sbb
inc
push
jge
iret
enter
and
mov
scas
push
leave
movs
call
shr
jge
fsub
nop
(bad)
mov
push
stos
in
or
jecxz
(bad)
jne
cmc
sub
push
lods
xchg
not
jge
pusha
adc
inc
lds
movs
cmp
xchg
mov
and
mov
repz
inc
sub
lods
stos
(bad)
dec
mov
cmp
test
sub
pop
bound
inc
sbb
xchg
mov
call
sbb
les
aam
in
inc
xor
fist
fstp
inc
ins
add
jb
dec
sub
sub
pop
shl
gs
popf
mov
inc
ins
push
dec
sub
dec
retf
jo
movs
mov
popf
mov
fstp
pop
push
pusha
or
push
clc
rcl
mov
push
xor
push
lea
rcr
inc
push
and
add
push
test
loope
sub
(bad)
out
mov
xchg
inc
sbb
push
rol
int
cli
or
cmc
cli
rcl
dec
imul
jmp
pop
adc
rcl
mov
arpl
loopne
pop
mov
mov
inc
imul
and
ss
xlat
jae
mov
aas
push
ror
(bad)
push
or
mov
ss
xchg
sub
ins
or
inc
mov
push
shl
mov
cmp
pop
rcl
cld
sub
mov
mov
stos
repz
or
inc
mov
iret
or
outs
cmp
ins
push
mov
dec
rcr
shl
sub
fidiv
outs
dec
mov
cmp
sbb
hlt
(bad)
aaa
jle
xor
inc
mov
(bad)
pop
cmp
mov
ins
scas
mov
adc
and
stos
jmp
pusha
lods
in
cmp
and
sbb
popf
movs
add
movs
mov
or
cmp
(bad)
cli
cmp
inc
cpuid
sub
imul
out
push
push
repnz
in
popf
loop
es
hlt
stos
inc
pop
icebp
sbb
adc
or
xchg
test
push
ret
mov
ror
push
je
mov
into
sbb
arpl
ss
call
sub
sbb
dec
icebp
cmps
jp
xchg
pop
call
xchg
jecxz
fldl2t
xor
mov
retf
xchg
out
sub
dec
xor
xor
xchg
loopne
addr16
cmc
es
fisttp
mov
std
popf
cmp
add
imul
shl
ds
inc
or
mov
mov
jl
mov
or
sar
xchg
imul
bound
out
(bad)
cdq
rcr
mov
cli
sahf
and
out
arpl
pop
movs
mov
xor
push
add
cwde
xchg
and
pop
mov
push
jb
ins
aas
dec
pop
adc
pop
lods
fadd
(bad)
sar
jb
mov
mov
mov
jl
mov
fnstsw
mov
or
dec
jp
pop
inc
sub
push
and
cmp
jecxz
cwde
retf
cmp
cmp
sar
xor
dec
push
xlat
ins
xor
dec
data16
sbb
and
sub
int3
pop
or
pop
jecxz
(bad)
jns
test
inc
icebp
push
sub
and
push
and
and
es
add
int3
mov
test
stos
outs
jno
je
ret
push
or
dec
sahf
pusha
test
aas
or
stc
pusha
sbb
fidiv
iret
outs
cmp
or
aaa
aaa
neg
jnp
aad
std
sub
inc
sbb
call
scas
stc
out
dec
add
mov
mov
lea
mov
je
dec
retf
mov
loop
mov
mov
daa
nop
cmp
aaa
push
icebp
fcom
cmp
push
inc
pop
enter
jbe
and
out
in
int3
lods
repz
add
jecxz
sub
sar
lahf
cmc
sti
xchg
mov
data16
call
jl
jnp
push
test
test
dec
vpsraw
and
movs
rcr
adc
mov
ja
push
daa
lock
xor
mov
mov
jmp
mov
ins
rol
ins
inc
imul
fwait
not
mul
mov
std
inc
add
add
aaa
mov
sbb
push
popf
adc
cmp
mov
sbb
mov
and
cwde
int
pop
(bad)
retf
and
pop
pop
xchg
ins
ds
pop
(bad)
push
mov
lahf
or
push
jns
or
cmp
sahf
jmp
add
dec
stos
adc
push
jb
test
and
out
jmp
lods
aad
jle
or
into
jmp
cdq
adc
jno
stos
cmps
rol
fiadd
and
arpl
cmp
outs
lods
test
cs
leave
push
push
xchg
test
fucomip
imul
scas
mov
adc
cmp
or
retf
adc
shl
in
out
add
sbb
mov
lahf
call
into
rol
and
dec
fdiv
addr16
arpl
mov
mov
sbb
(bad)
jl
or
cmps
cmps
mov
(bad)
push
xor
stos
mov
(bad)
push
pop
and
pop
into
and
sub
scas
sub
jmp
mov
iret
fdivr
dec
sbb
ficomp
xchg
pop
mov
in
scas
mov
cwde
push
push
add
mov
jnp
inc
dec
call
adc
dec
call
add
adc
pop
xchg
mov
outs
imul
nop
hlt
jecxz
stos
fild
and
jmp
add
popf
popf
jne
out
cmc
sar
test
jp
mov
nop
test
adc
mov
ja
mov
mov
jno
repz
imul
shr
lock
adc
fstp
ins
or
popf
scas
(bad)
repz
push
jb
outs
or
dec
xchg
mov
jne
or
iret
xchg
test
sbb
inc
inc
jns
inc
pop
sbb
push
(bad)
call
inc
out
mov
in
cs
jmp
cmp
into
add
mov
shr
leave
mov
in
rcl
cmp
pop
adc
cmp
and
adc
add
cli
push
or
pop
nop
pop
mov
and
inc
inc
dec
ja
sbb
stos
jge
mov
(bad)
lahf
cdq
popf
out
cmp
outs
sbb
push
xchg
mov
sbb
mov
sbb
mov
jns
push
mov
pop
inc
(bad)
(bad)
aad
and
adc
xor
add
loope
sbb
adc
push
shl
shr
adc
hlt
popf
mov
push
dec
mov
sar
stos
loop
mov
and
xchg
daa
sub
adc
or
test
retf
jg
xchg
dec
cmp
ss
mov
xor
popf
push
dec
mov
je
mov
repnz
je
sbb
repnz
jno
inc
out
jmp
arpl
ret
pop
pop
mov
pop
adc
hlt
shr
sbb
ins
dec
sbb
dec
mov
mov
mov
lods
rol
(bad)
rcr
cmp
mov
enter
cdq
iret
test
loope
push
mov
sbb
xchg
sbb
inc
inc
dec
and
pop
and
popf
cmp
cli
cmc
and
and
ds
mov
adc
test
enter
inc
push
lea
daa
adc
mov
push
sbb
cmp
cdq
cmp
leave
and
cmp
je
leave
loop
add
std
mov
pop
cmp
scas
(bad)
add
jb
sbb
and
mov
mov
data16
mov
mov
and
jecxz
test
popfw
and
add
mov
pop
movs
push
jmp
mov
bound
es
fwait
js
(bad)
jno
arpl
pushf
or
cmp
add
fsubr
sar
imul
shl
fwait
push
pop
jl
addr16
push
jl
dec
push
inc
fdiv
loope
leave
sbb
(bad)
add
mov
aas
scas
icebp
test
dec
push
or
pop
aam
fistp
imul
call
cmp
sub
popa
push
pop
stos
mov
int
sub
daa
mov
ja
outs
jg
cld
cli
fadd
dec
loopne
addr16
call
and
cmp
(bad)
fwait
retf
jns
ds
mov
jp
cmp
inc
jo
xchg
xor
mov
and
pop
sar
aaa
test
mov
cwde
add
dec
and
xor
add
ja
movs
cmc
adc
in
mov
mov
shr
cmp
dec
inc
iret
push
shr
popf
(bad)
in
(bad)
in
std
jl
out
enter
or
movs
fs
or
jno
test
pop
movs
out
popf
daa
mov
pop
adc
push
cdq
adc
xchg
sub
ja
sub
adc
nop
js
sbb
clc
pop
fld
addr16
mov
push
scas
add
(bad)
in
add
push
sub
or
pop
sar
aam
in
das
cld
daa
mov
sbb
push
ja
clc
lea
dec
xor
add
jo
xor
stos
mov
cmp
les
mov
xor
je
cmps
nop
sti
or
push
shr
pop
mov
data16
imul
in
pusha
jo
cmp
mov
and
jmp
inc
cld
fidiv
int3
shl
sbb
pop
jle
fucomi
bound
sub
adc
pushf
adc
jb
xchg
bsf
dec
xor
das
inc
and
push
push
jbe
jno
imul
imul
(bad)
cmps
mov
jmp
dec
xor
stos
or
sbb
in
xchg
idiv
outs
jle
les
push
aad
arpl
enter
es
push
cs
jmp
and
(bad)
lea
mov
xchg
add
dec
xor
dec
dec
pop
(bad)
in
xlat
pop
jbe
xchg
cmps
xor
nop
ins
pop
mov
sbb
add
xchg
test
dec
jo
outs
cmp
jno
jp
mov
(bad)
(bad)
(bad)
mov
push
pop
sbb
add
push
cmp
xchg
div
mov
cmps
xchg
mov
cmp
call
and
add
sub
out
(bad)
ins
aad
(bad)
movs
add
aas
pop
or
push
or
jno
jno
adc
xor
shl
cmp
lahf
cld
xor
nop
pop
dec
dec
push
or
adc
jge
bound
in
ficom
inc
retf
mov
movs
and
mov
adc
xchg
ins
and
movs
rol
pop
mov
inc
test
das
sbb
add
scas
loopne
mov
dec
xor
mov
repz
lods
and
sub
inc
int
mov
arpl
jecxz
stos
mov
loop
retf
lods
mov
xchg
fldcw
aas
popf
jge
loopne
lods
dec
cmp
mov
or
dec
dec
sbb
(bad)
jmp
sub
loopne
or
and
into
mov
scas
fsubr
pop
ret
and
cmp
pop
hlt
inc
sbb
je
les
pop
jnp
mov
push
sbb
test
cmp
repnz
sub
mov
lea
aaa
loope
sbb
jle
enter
(bad)
(bad)
ret
pop
pop
dec
aad
mov
sub
(bad)
test
pop
mov
mov
pop
xchg
jl
mov
jno
je
jae
mov
outs
push
shl
push
xchg
inc
test
sbb
mov
test
cdq
push
push
mov
or
dec
arpl
fst
mov
test
test
adc
aam
pusha
pop
jb
cmp
sbb
xchg
das
sub
push
(bad)
out
mov
mov
cmp
sub
test
jl
dec
ret
push
inc
inc
hlt
push
addr16
popf
mov
cmp
mov
cs
mov
ret
stos
loopne
add
fdiv
jo
dec
dec
sbb
dec
mov
jecxz
repz
imul
adc
in
jle
std
sar
push
ficom
jp
xchg
ss
xor
out
push
ss
pop
push
shl
push
int3
push
fimul
adc
mov
inc
sub
or
movs
mov
pusha
out
jmp
in
scas
adc
into
fwait
popa
(bad)
out
sbb
out
or
push
mov
mov
jmp
mov
cwde
and
in
mov
out
cwde
pop
ins
or
sahf
arpl
jp
add
xor
fiadd
mov
xchg
xor
dec
add
xor
inc
icebp
mov
xchg
pop
and
jnp
rcr
xor
aad
das
fs
cmp
jne
fild
mov
or
mov
je
(bad)
adc
cmp
test
sub
dec
push
sbb
add
ret
frstor
adc
mov
imul
neg
xor
push
jno
ja
jg
xchg
loopne
leave
js
dec
cld
xor
mov
jge
mov
xchg
jge
inc
clc
aad
sub
sub
cmp
jae
iret
movs
or
push
or
loope
sub
test
arpl
lock
adc
cli
pushf
push
xchg
xor
push
repz
jne
iret
push
rcr
aas
jmp
jecxz
imul
pop
sbb
mov
test
mov
sub
dec
mov
inc
push
pop
xor
shr
jle
pushf
dec
inc
dec
lea
sti
ret
adc
jge
mov
out
(bad)
loop
mov
add
dec
jmp
xchg
out
das
cmp
sub
pushf
push
in
test
cmp
xchg
icebp
mov
push
jnp
sti
fs
in
pushf
sbb
scas
sub
sbb
sbb
nop
mov
add
in
xchg
es
jge
pop
inc
std
xchg
sbb
ficom
add
pop
jae
arpl
push
sub
int
scas
push
mov
(bad)
pop
inc
sbb
push
add
xchg
cld
sbb
fwait
daa
pop
inc
shl
jno
aas
icebp
mov
push
test
ret
adc
test
aad
or
repz
loopne
jns
and
inc
fs
lods
test
push
fs
aaa
ss
jmp
and
je
mov
mov
pop
repnz
sub
es
sub
or
mov
into
neg
gs
mov
mov
iret
stos
or
rcl
xor
push
xchg
cmp
popa
pop
bnd
bound
ret
stos
in
inc
stc
out
jbe
inc
gs
add
jg
in
out
out
push
pop
cs
jb
cmp
div
ror
add
arpl
fisubr
cwde
sahf
inc
stos
rcr
pop
fwait
pop
dec
das
pop
fisttp
mov
pop
adc
repz
xchg
sub
popa
add
mov
dec
pop
push
dec
adc
mov
sbb
xor
test
push
(bad)
or
movs
jae
gs
popf
ret
sub
fcmovne
or
cmp
jb
es
push
add
inc
rcr
jmp
mov
jo
rcl
stos
mov
scas
ss
inc
xchg
fucomip
cmp
gs
adc
stos
(bad)
xlat
popa
and
cdq
sar
inc
outs
jp
fist
dec
stos
and
inc
mov
(bad)
jno
add
loop
mov
dec
mov
movs
sbb
and
loopne
mov
sti
push
or
pop
daa
push
cmp
(bad)
add
push
and
clc
inc
fucomi
mov
aad
add
in
(bad)
xchg
js
xchg
or
mov
push
in
dec
les
test
push
mov
sbb
add
in
jne
outs
inc
sub
jns
inc
mov
leave
push
out
sahf
or
ins
test
fistp
dec
xor
imul
mov
add
cs
enter
mov
add
cmp
dec
xchg
mov
add
ret
test
push
(bad)
in
fldenv
gs
cld
mov
mov
pop
ret
into
inc
es
rcl
push
mul
inc
jno
jp
lods
cmp
mov
aaa
out
mov
sub
xor
call
arpl
js
and
inc
pop
jl
cwde
pop
std
sub
test
jg
hlt
idiv
(bad)
(bad)
or
push
stc
jo
push
(bad)
xchg
ret
dec
lahf
cld
out
out
stc
jecxz
scas
push
cmps
push
push
retf
mov
sub
loope
or
test
dec
add
loope
add
repz
mov
bound
cwde
cwde
iret
push
push
int3
into
mov
mov
cmp
sbb
(bad)
retw
adc
dec
rcr
daa
clc
pop
cmps
enter
sbb
push
loope
add
jne
push
ret
push
or
mov
mov
bound
push
ja
dec
jge
sub
jns
adc
pop
push
aam
and
ret
lea
mov
clc
pop
iret
fidiv
sub
or
adc
mov
test
jnp
pop
addr16
ja
dec
test
fiadd
cmp
or
fild
and
inc
adc
cmps
in
jns
mov
sub
bound
inc
aas
jae
imul
adc
mov
push
jge
and
jmp
xchg
test
mov
ror
pop
push
call
cdq
sahf
jecxz
mov
mov
cmps
mov
push
push
mov
jmp
in
xor
jecxz
das
push
outs
jnp
xor
adc
retf
(bad)
fcomip
adc
in
outs
movs
fsubp
loopne
jle
xchg
mov
in
mov
fbstp
mov
fsubr
mov
mov
adc
ins
mov
fbld
or
out
xchg
xchg
pushf
dec
das
call
cmp
cmps
repnz
mov
mov
inc
push
std
push
cwde
sbb
std
pop
(bad)
nop
and
icebp
popf
jae
jns
iret
jnp
in
mov
mov
fiadd
push
push
mov
(bad)
fisubr
mov
lea
ins
jns
retf
test
cmp
leave
test
and
cmc
mov
xchg
fmul
jb
mov
imul
fbld
or
das
sbb
add
add
out
adc
retf
mov
rcl
sub
pop
add
push
aad
pop
lock
int
js
call
int3
stc
fptan
dec
arpl
sar
cmc
jp
mov
xchg
gs
add
or
sub
aas
ds
mov
fmul
jo
(bad)
xchg
mov
scas
call
and
(bad)
aaa
(bad)
sub
pop
mov
inc
movs
lods
bnd
pop
out
fnsave
cs
in
and
pop
loop
and
sti
inc
loope
inc
(bad)
ins
xor
or
stc
mov
jl
xchg
inc
mov
adc
hlt
xchg
std
adc
jne
jno
mov
sbb
xchg
and
cmp
add
dec
fisttp
test
adc
xchg
outs
and
mov
fsubr
inc
xor
cdq
imul
in
pop
sbb
dec
sbb
hlt
pop
and
jge
adc
or
ror
push
cmps
jbe
adc
adc
lods
sbb
cld
in
xchg
sub
cmc
pushf
jbe
imul
add
push
cs
jo
push
int
rcl
mov
imul
jg
lea
sbb
add
fld
add
sahf
sbb
fisub
mov
pop
ror
sbb
pop
imul
stos
out
cmp
shr
fs
jl
in
cmc
(bad)
pop
pushf
rcl
push
out
adc
ins
ds
jno
cs
cld
lods
mov
test
cmc
jno
pop
retf
dec
cmps
out
jnp
inc
nop
popf
out
lea
cli
pop
fiadd
xor
loope
mov
test
ja
mov
push
jge
int3
dec
cmp
dec
repz
out
shr
adc
std
cmc
lea
repz
fadd
jns
push
cmp
mov
stos
add
mov
cmp
fsubp
sbb
fdivr
je
cmc
adc
out
cmps
or
in
(bad)
call
mov
js
push
mov
into
sbb
sub
std
dec
call
cli
aad
xor
sbb
push
stc
test
push
jecxz
addr16
cmps
xchg
pop
retf
inc
aam
outs
cli
inc
movs
sbb
lods
sbb
adc
fcomp
ds
xchg
test
psubsw
lds
std
or
xchg
int3
mov
sbb
icebp
adc
gs
mov
das
in
xchg
ja
fild
enter
xchg
or
stc
in
sbb
lahf
push
shl
push
jae
inc
cli
push
out
test
and
(bad)
rcr
adc
and
test
adc
xchg
and
mov
cmps
lea
ins
into
rcl
mov
loope
jmp
and
pop
xchg
mov
mov
or
es
mov
loopne
xor
jle
add
aam
pop
addr16
call
enter
mov
lods
mov
jo
push
das
cmp
icebp
cmc
xchg
dec
dec
sub
xor
(bad)
(bad)
aam
mov
je
js
mov
outs
les
mov
stc
cmp
mov
das
push
retf
inc
pushf
fs
lods
and
jno
jno
rcl
bswap
sub
out
clc
inc
aaa
ret
cmp
hlt
xchg
nop
shr
lock
xchg
dec
enter
cmp
fwait
movs
push
dec
fnstsw
and
icebp
jae
sbb
mov
shr
(bad)
stc
mov
dec
push
pop
sub
fild
pop
movs
push
add
or
push
cmp
mov
add
es
jmp
mov
data16
and
fsub
pop
sbb
xchg
sub
lods
xchg
ror
fmul
push
push
loope
out
sahf
sahf
clc
in
add
stos
or
aad
jge
push
mov
in
dec
mov
xchg
inc
pop
mov
rcr
cmp
cmp
xlat
pushf
call
mov
mov
test
cmp
ror
push
jns
ror
xchg
outs
xor
inc
inc
repz
sbb
ins
outs
or
or
sub
lods
sub
scas
inc
adc
mov
js
or
sub
popa
xchg
jb
js
sbb
adc
ja
in
fild
jns
xor
into
aaa
sti
mov
jns
mov
aam
daa
rcl
pusha
repnz
xchg
push
cmp
dec
adc
das
and
out
push
sbb
call
pop
pop
inc
mov
int3
pop
in
out
inc
test
xchg
loop
mov
ss
push
mov
div
stc
mov
and
sbb
out
nop
sti
sub
add
pop
xchg
jg
es
dec
push
ss
int
pop
cmp
out
stc
jp
mov
or
aam
(bad)
xor
bound
push
js
std
adc
xchg
out
sub
sub
adc
xchg
inc
and
loop
xchg
rcl
(bad)
fld
bound
ins
call
jp
and
int3
out
and
sar
adc
cmp
add
neg
mov
stos
pop
mov
je
jl
pop
pop
and
hlt
jecxz
cwde
pop
cmp
mov
fcomp
sub
ja
leave
outs
iret
sti
ss
pop
and
ds
ins
cmps
sbb
or
sub
sbb
in
mov
add
sbb
add
shl
les
out
or
xchg
ror
repnz
dec
mov
in
mov
mov
jmp
loopne
test
mov
movs
cmp
or
xchg
jl
lea
(bad)
sbb
stos
jl
ret
dec
pop
ficomp
ror
ficomp
push
clc
xor
es
std
xor
repz
sub
fdiv
aad
inc
mov
cmps
inc
out
fwait
jb
ficom
inc
stos
jp
and
in
sbb
ins
mov
fst
fst
or
not
les
rcr
mov
in
jo
dec
cdq
outs
loop
jmp
pop
push
cmp
dec
movs
jg
sbb
push
add
adc
ds
xchg
ins
pop
pop
test
and
jmp
sbb
cdq
stos
ja
xor
mov
pop
rcl
ins
xor
mov
or
rol
and
out
pop
loope
pop
cmps
ins
push
ret
xor
mov
sub
pop
inc
push
sbb
fs
jle
sub
lods
cdq
adc
and
pop
popa
xor
and
xchg
ins
and
shr
jbe
jmp
sub
rcl
and
sbb
cmps
shl
inc
add
pop
out
addr16
out
shr
inc
ja
imul
and
xlat
sbb
sbb
(bad)
in
lods
cmp
in
sbb
push
in
mov
xchg
mov
jmp
inc
lahf
inc
outs
in
mov
scas
outs
jns
sbb
cmp
nop
int3
popa
inc
sub
mov
cmp
fstp
lods
xchg
and
(bad)
adc
adc
aam
xlat
pop
pop
int
arpl
xchg
inc
(bad)
pop
ins
mov
cmps
inc
mov
dec
hlt
add
rol
cli
dec
pop
sbb
cmp
jae
out
mov
and
pop
test
out
mov
sti
fwait
xchg
or
add
fcom
xor
std
fisttp
test
addr16
and
xor
(bad)
lods
inc
(bad)
out
pop
xor
sbb
jmp
mov
movs
ds
mov
lods
xor
jno
int3
dec
loopne
cmc
mov
into
sti
lods
cmp
pop
push
push
dec
mov
sub
(bad)
sbb
jns
cmp
fisttp
push
dec
mov
loopne
in
and
mov
xchg
cld
gs
adc
dec
(bad)
adc
ret
pop
push
jmp
or
sbb
mov
rep
movs
pusha
lea
xor
scas
inc
dec
cld
out
xor
xchg
inc
les
pop
lods
arpl
mov
pop
sub
cld
je
(bad)
dec
cmp
stos
fnstcw
dec
jns
jmp
inc
push
mov
repnz
add
or
cmp
add
test
inc
aad
lods
ja
jmp
or
call
xchg
ror
enter
mov
and
inc
xor
jb
mov
xchg
es
jno
daa
out
leave
(bad)
pop
push
jb
f2xm1
scas
das
dec
clc
(bad)
fisub
jae
mov
mov
push
shl
lods
popa
push
lock
gs
cdq
or
sahf
or
dec
add
push
mov
and
das
jo
rol
pop
or
ds
mov
popa
lea
mov
jmp
mov
pop
push
aam
rcr
xlat
mov
pop
popa
lods
sbb
popf
jge
mov
push
fmul
xchg
and
cld
cmp
pushf
inc
fstp
in
popf
xor
lods
call
dec
inc
std
imul
pop
mov
in
out
add
ret
jle
jle
fadd
ss
push
das
xchg
lock
jl
and
add
ss
scas
ins
mov
dec
gs
leave
cmp
(bad)
retf
dec
adc
in
adc
popf
sar
dec
cmc
aaa
mov
jp
sbb
stos
jmp
int
cli
adc
mov
out
or
rol
dec
and
dec
or
cmp
arpl
push
je
or
mov
aaa
mov
into
mov
add
imul
ror
dec
sbb
pop
mov
cmps
or
jp
and
push
ja
mov
mul
xchg
sbb
mov
pop
jp
adc
mov
call
cmp
test
data16
and
pop
lea
aam
aas
jbe
aaa
adc
add
repnz
cmc
das
sbb
fist
xor
ins
shl
jns
imul
dec
xchg
sbb
cdq
mov
mov
in
(bad)
retf
imul
pusha
sub
rcr
mov
retf
adc
inc
in
rcl
cwde
lahf
sbb
lock
es
xchg
in
and
xchg
out
or
dec
(bad)
call
sti
ins
(bad)
jns
jge
es
fisub
or
mov
std
push
inc
out
add
xchg
mov
mov
push
dec
mov
adc
dec
mov
test
pop
mov
add
jmp
sub
test
push
nop
(bad)
jp
add
test
fucomi
cmp
(bad)
jo
jb
lods
sbb
cmp
int3
or
add
jecxz
and
test
lods
adc
data16
aaa
xchg
das
and
in
rcl
pop
adc
sbb
es
ins
xchg
(bad)
psrlq
retf
arpl
push
cmp
jns
or
cmps
adc
add
mov
das
push
fcomp
gs
clc
movs
and
dec
(bad)
ja
pusha
mov
call
adc
test
sub
jb
loope
mov
div
mov
aas
or
dec
sbb
jmp
hlt
mov
inc
fld
cld
call
sbb
fisubr
or
mov
ret
aas
mov
add
sahf
aaa
dec
push
arpl
add
stc
outs
ja
mov
pop
addr16
add
cmp
movs
pcmpgtb
pushf
pop
popa
sbb
hlt
dec
popa
sub
out
inc
(bad)
jle
cwde
pop
repz
in
in
mov
scas
add
addr16
cmps
inc
mov
mov
dec
mov
adc
stos
mov
cmps
fwait
(bad)
lock
dec
rcr
neg
cmp
iret
inc
pusha
add
sbb
out
push
jg
movs
jl
pusha
add
inc
ret
xchg
add
pop
mov
pop
jno
sub
or
push
xchg
cs
add
lods
mov
push
loopne
in
popf
jl
imul
adc
pop
and
rcl
pop
push
fstp
dec
push
jp
xor
imul
clc
retf
fild
inc
daa
imul
imul
mov
iret
stos
gs
fsub
sbb
dec
retf
or
aaa
cmp
movs
in
(bad)
and
repz
bound
mov
aad
stos
sub
(bad)
sar
iret
into
add
mov
js
sbb
stos
dec
mov
push
movs
and
inc
loope
aad
scas
bound
push
push
inc
loope
pop
stos
xchg
scas
mov
ins
inc
dec
sub
add
xchg
loope
cli
fstp
nop
outs
xlat
pop
jge
mov
mov
cmp
imul
mov
dec
sub
xadd
leave
test
popaw
pop
shl
cmp
pop
cmp
xchg
cmc
fistp
sbb
scas
(bad)
adc
nop
mov
jne
adc
jl
inc
sar
dec
ficomp
jne
adc
sub
pop
das
mov
popf
clc
push
sbb
adc
mov
or
push
jge
fcmovb
cmp
dec
imul
pop
mov
add
ret
jbe
in
loop
mov
push
repz
mov
loop
js
ins
cmps
xchg
inc
sub
inc
push
sbb
inc
jne
das
test
lock
fld
fistp
jmp
bound
inc
and
ficom
cmp
(bad)
ret
dec
(bad)
dec
cmps
xor
mov
retf
push
lea
dec
pop
fs
jg
lahf
bnd
cld
lods
push
sub
je
and
ret
lds
(bad)
in
xchg
add
das
idiv
mov
jg
retf
sbb
push
movs
leave
loopne
mov
push
loopne
sahf
inc
and
pop
lds
or
ss
test
and
pop
mov
inc
(bad)
out
(bad)
es
cmp
jle
out
(bad)
inc
test
rol
cmp
mov
jge
sbb
push
or
fnstsw
ret
test
inc
ret
out
push
hlt
enter
add
(bad)
pushf
mov
xor
inc
dec
repz
or
sub
rol
out
mov
mov
mov
adc
cmp
imul
adc
jl
leave
es
repnz
sahf
mov
hlt
push
mov
nop
push
and
movs
loopne
bound
shr
dec
fcmovnu
cmps
and
mov
scas
and
jp
fs
or
jne
adc
ficomp
mov
sti
out
jns
add
movs
out
outs
or
and
mov
test
inc
mov
lods
xchg
fmul
xor
jp
pop
loope
cwde
dec
and
dec
jae
jge
mov
pop
iret
mov
mov
mov
jns
push
xchg
pop
out
fndisi(8087
dec
mul
into
popf
outs
and
stos
cmp
mul
jmp
shl
inc
sub
jae
cmps
or
fild
jo
out
shl
mov
xor
pand
inc
js
in
les
mov
or
push
int
int
inc
jmp
test
push
in
ja
mov
dec
stos
pop
push
sub
sub
sbb
and
retf
and
inc
adc
adc
fidivr
mov
(bad)
sub
mov
dec
mov
sub
cmp
jg
jge
fcom
in
mov
lods
mov
jge
and
les
adc
push
sbb
fwait
(bad)
xchg
jo
xchg
repz
iret
adc
(bad)
cmp
or
in
fisubr
push
aaa
dec
push
cmc
push
jg
mov
int
into
les
fbld
scas
mov
sub
mov
bswap
or
mov
sbb
les
sbb
mov
outs
scas
mov
call
test
(bad)
pop
data16
je
cmc
dec
adc
cmp
xlat
mov
and
std
in
lahf
cld
push
xchg
add
test
and
call
mov
data16
xchg
jecxz
loopne
sbb
fmul
(bad)
leave
pop
cmp
push
sub
pop
adc
add
stos
stos
pop
xchg
and
mov
mov
fsub
cdq
(bad)
dec
jg
jp
sar
test
mov
xchg
outs
push
(bad)
jg
or
loop
fsubr
dec
push
test
stc
mov
mov
(bad)
and
adc
sahf
and
inc
mov
dec
cs
lods
into
lock
sbb
pop
imul
mov
push
xchg
in
and
and
xchg
sub
out
mov
xlat
test
test
adc
mov
and
sub
add
sub
aad
mov
lods
jns
cmp
cmps
mov
cmp
sbb
fiadd
std
lock
repnz
into
leave
jmp
inc
movs
mov
scas
bound
dec
mov
dec
push
test
ror
sar
mov
add
retf
dec
push
and
xor
push
pop
xor
add
mov
shr
mov
xchg
xor
pop
and
or
jmp
inc
js
js
sub
sahf
pop
fdiv
dec
lods
push
fisub
cmps
pop
sbb
fimul
out
push
lods
dec
fimul
mov
xchg
xchg
mov
xor
mov
out
cdq
cdq
mov
cmp
mov
mov
call
add
pop
lahf
push
push
fisub
imul
(bad)
test
jl
test
popf
ins
retf
pushf
mov
and
movs
mov
xabort
jg
jo
add
push
or
jp
repnz
mov
dec
jecxz
push
dec
pop
xor
out
dec
int
mov
jbe
or
cmp
outs
movs
gs
jo
dec
daa
pop
mov
jno
mov
call
(bad)
cmps
test
xchg
loope
push
ja
or
fisttp
xchg
jge
pop
jle
add
(bad)
push
sti
ss
and
sbb
add
jno
and
sbb
fbld
mov
pop
push
aas
mov
test
jne
push
pop
call
jmp
adc
pushf
and
retf
sbb
ficomp
repz
cwde
stos
dec
cmp
popf
cmc
imul
pop
in
js
fsub
cmp
jmp
mov
gs
jmp
mov
mov
pop
adc
pop
jbe
test
pusha
gs
cld
mov
push
cmp
call
and
adc
das
jecxz
in
pop
sub
movs
out
jmp
les
outs
sbb
addr16
in
sahf
repz
shl
jne
lods
in
dec
call
adc
sub
adc
rcl
and
push
sbb
imul
daa
ds
lock
(bad)
xchg
mov
sub
bound
jle
pop
nop
aaa
mov
rcr
clc
xchg
idiv
push
shl
das
add
dec
inc
movs
jbe
stos
mov
das
js
outs
mov
fmul
cmp
mov
icebp
mov
rcl
icebp
rol
dec
cmp
sbb
mov
fsubr
das
popf
imul
das
dec
inc
je
dec
add
(bad)
int
fisttp
or
sti
jno
xchg
sub
call
and
test
scas
jp
pop
push
push
pop
scas
nop
movs
push
xor
mov
pop
sub
mul
adc
adc
pop
jmp
jle
dec
xor
fiadd
xchg
sbb
pop
(bad)
or
sahf
je
dec
xor
dec
pop
and
pop
daa
jecxz
retf
pop
sti
cmp
pop
jmp
cmp
and
(bad)
sub
repnz
add
test
mov
jae
sub
pop
or
push
test
in
add
js
jmp
and
into
mov
ret
add
retf
or
sub
push
inc
retf
cwde
pop
stos
out
jl
push
push
sbb
sub
ins
daa
dec
adc
xchg
xor
outs
imul
mov
add
ja
aas
shl
gs
jmp
iret
fdiv
push
add
sahf
push
pop
and
pop
cmp
movs
(bad)
jp
push
jge
scas
sub
push
bound
aaa
ins
js
std
in
mov
cmp
pop
in
imul
rcl
push
adc
(bad)
fistp
(bad)
lahf
jle
jle
inc
push
jp
or
(bad)
xchg
fcomp
mov
mov
out
aas
pop
out
gs
pop
adc
jb
js
add
int3
inc
xchg
push
mov
dec
popf
mov
scas
outs
js
shl
push
push
add
retf
lds
sub
push
out
jecxz
jmp
lods
into
dec
aam
je
xor
sbb
fisubr
sbb
xor
jge
xchg
rcr
movs
adc
aas
inc
push
movs
je
xchg
clc
xor
mov
repnz
adc
mov
dec
jg
loop
repz
ins
icebp
rcl
into
loop
lods
rcr
popf
mov
jg
inc
mov
fcmovnu
pop
jne
data16
sub
leave
imul
inc
addr16
xor
jne
out
sahf
jns
xor
and
outs
popa
test
xchg
aas
lahf
fdivr
loope
outs
mov
sbb
push
mov
xor
popf
xchg
push
push
sub
jg
xor
pop
and
popf
sbb
retf
call
pop
push
clc
test
xor
or
lock
test
inc
lods
adc
retf
out
xchg
push
jb
imul
xchg
pop
push
je
mov
scas
fisttp
push
sbb
mov
or
add
sahf
sbb
pop
or
lea
and
and
in
dec
es
(bad)
jle
pop
jno
movs
ins
arpl
inc
enter
jle
fsubr
xchg
and
jecxz
stos
iret
mov
mov
push
jg
sub
dec
sbb
fs
cmps
sub
in
popa
stos
cdq
pop
push
cmps
dec
adc
push
adc
sub
sbb
sar
test
pushf
stos
sbb
push
pop
popf
cmp
das
cli
icebp
ficomp
and
js
pop
test
into
adc
push
fld
out
sub
adc
div
add
mov
inc
jge
jne
sub
or
call
jp
cwde
scas
and
pusha
imul
xchg
cdq
out
icebp
jnp
jno
xor
jbe
icebp
cmps
jp
and
inc
imul
scas
ds
xchg
and
gs
movs
ins
dec
or
(bad)
loopne
jno
retf
dec
or
push
pop
cmp
mulps
push
nop
xor
inc
aas
mov
fwait
push
out
xlat
push
(bad)
pop
lahf
adc
sub
into
repz
inc
or
push
push
jb
dec
loope
sbb
mov
dec
lahf
add
inc
xchg
fdivr
fist
mov
retf
xor
scas
push
out
cmp
lock
js
and
fs
ins
jecxz
xchg
inc
pop
cmps
sbb
aas
dec
sbb
iret
xor
mov
add
mov
(bad)
inc
stos
adc
(bad)
fisubr
frstor
stc
mov
xchg
inc
and
mov
mov
jl
sahf
adc
mov
mov
ja
cmp
ins
sub
fwait
ja
in
xchg
adc
mov
(bad)
shr
daa
std
fs
pop
inc
sbb
jbe
int3
jae
jbe
pop
in
jmp
js
adc
cmp
mov
sub
rcl
lds
stos
add
scas
rcl
enter
xchg
sub
lahf
leave
mov
icebp
push
sbb
call
push
pusha
xor
add
and
cmp
fs
jb
jbe
sbb
outs
dec
hlt
lods
cld
mov
mov
icebp
cmps
push
lahf
mov
mov
cs
xchg
sbb
push
shl
cmp
les
and
ficom
hlt
dec
arpl
in
int3
push
clc
mov
push
loopne
jo
in
in
fcmovb
call
jmp
cli
faddp
add
and
pop
leave
lahf
stos
aaa
dec
ret
lods
dec
inc
imul
(bad)
and
push
mov
sti
test
and
pop
mov
xchg
sahf
pop
scas
mov
pop
fidiv
mov
jne
push
cmp
das
test
jg
push
stc
hlt
fsubr
xchg
mov
xor
push
dec
ins
fcmovb
and
pusha
in
or
mov
iret
int3
mov
lahf
mov
mov
aam
cmp
or
out
cmps
(bad)
(bad)
adc
ins
jecxz
cmp
jmp
mov
cmp
enter
dec
cmp
xchg
hlt
xchg
mov
out
or
fdiv
imul
mov
mov
mov
dec
popa
int
adc
xchg
test
ror
pop
sub
pushf
cli
push
sub
cli
sbb
fimul
popf
cmps
mov
or
es
lods
mov
jmp
sbb
inc
stc
mov
xor
or
adc
inc
add
mov
xor
clc
je
mov
sub
adc
mul
pop
out
outs
xor
retf
add
icebp
js
imul
sti
popf
fs
bound
test
push
add
mov
mov
sub
xchg
fcmovbe
(bad)
rcr
js
lea
mov
xchg
xlat
dec
mov
sub
test
pop
pop
lods
pop
(bad)
fisttp
daa
adc
movs
pop
pusha
rol
sti
jmp
cdq
scas
int3
jmp
mov
jmp
sbb
outs
fwait
xchg
pop
sub
dec
pop
or
pop
inc
fcmovnbe
adc
push
mov
ror
push
push
stc
into
xor
sbb
int
pushf
pop
cmp
shl
int3
sbb
adc
(bad)
popf
push
iret
cmp
xchg
repz
jbe
sbb
adc
movs
and
(bad)
mov
bound
sti
pusha
sbb
clc
push
aaa
adc
repz
adc
dec
add
add
adc
cmc
out
mov
jmp
lds
fistp
cmp
sub
(bad)
inc
sbb
aaa
lahf
js
sub
mov
sub
out
sub
dec
and
shr
movs
cmp
pop
sub
ror
and
sub
or
or
jecxz
jbe
jno
jbe
jp
jle
mov
push
xor
mov
inc
out
sbb
or
add
pushf
loopne
and
outs
pop
std
sete
adc
(bad)
aad
inc
dec
ins
aam
test
ret
adc
loope
inc
jo
movs
mov
pushf
leave
bound
mov
inc
outs
mov
das
or
pop
push
mov
imul
or
ds
aam
push
jbe
ds
and
mov
test
add
add
xchg
cmp
ret
xchg
(bad)
mov
jb
fdiv
enter
mov
fs
jnp
cmp
(bad)
(bad)
das
(bad)
imul
or
mov
arpl
sar
pushf
cmp
stc
and
mov
adc
aad
mov
xor
cmc
push
iret
test
push
ja
sahf
mov
lahf
inc
fisttp
xor
add
mov
cmp
xor
(bad)
loop
push
and
jle
mov
js
ds
int
xchg
fwait
aas
lods
cs
xchg
sbb
jae
mov
(bad)
cmp
sbb
aas
cmp
and
mov
cmp
xor
mov
mov
add
push
sub
or
test
inc
or
inc
dec
inc
nop
fist
dec
aas
mov
pop
jle
call
dec
and
ror
sbb
pop
aaa
xchg
test
test
dec
leave
aaa
je
inc
xchg
stos
mov
jae
daa
mov
xchg
popf
adc
loop
mov
push
adc
iret
fist
clc
es
aad
xor
jae
push
ins
push
dec
leave
mov
adc
das
inc
mov
pop
cmp
sub
test
popf
in
repz
inc
jnp
mov
ins
xchg
and
scas
je
pushf
repnz
push
cmp
fs
sub
sbb
cmp
scas
jo
inc
xchg
jb
test
cmps
out
lock
push
shl
adc
dec
stos
pop
or
pop
ret
mov
dec
mov
(bad)
cmp
xchg
daa
add
mov
das
scas
xchg
sub
sub
popf
adc
dec
or
inc
inc
fld
adc
sti
pop
cmps
add
mov
push
cmp
fnsave
repnz
cmp
fdivrp
xchg
aam
xchg
adc
xchg
sbb
cwde
xlat
cmc
mov
ss
pushf
and
push
dec
stc
push
mov
out
xchg
push
dec
xor
int
mov
inc
pop
fisubr
inc
adc
mov
call
jnp
mov
jb
push
push
jae
add
aam
fnstcw
mov
jg
sub
cmp
hlt
mov
push
movs
cmp
inc
inc
push
mov
fcom
and
add
stos
cld
loope
pop
add
rcl
out
adc
(bad)
iret
cli
push
(bad)
test
sar
dec
loopne
scas
movs
addr16
or
cmp
gs
stos
ror
ins
(bad)
pop
scas
add
popf
shl
pop
lds
test
push
xchg
or
cmp
mov
xor
icebp
mov
lods
jecxz
sbb
daa
add
imul
mov
scas
ret
sbb
test
xor
pop
fs
test
std
pop
out
xor
xor
jns
push
mov
iret
sbb
in
popa
cs
or
jnp
pushf
test
and
in
cmp
mov
xor
dec
cli
or
cld
movs
xor
xchg
aad
add
in
daa
sub
or
and
out
add
stc
addr16
and
movs
add
inc
fsub
inc
dec
hlt
or
test
xchg
jle
pop
inc
jmp
ins
int3
test
dec
jmp
push
xor
mov
fist
or
dec
xchg
jle
push
adc
push
addr16
leave
inc
adc
scas
jp
repz
add
inc
fistp
push
ret
aam
sahf
xchg
xor
xlat
in
mov
adc
mov
sbb
fsubr
dec
repnz
pop
fmul
repnz
shl
mov
(bad)
out
aad
sub
(bad)
cmp
jge
and
lea
ins
mov
pop
sub
sbb
(bad)
mov
jmp
sbb
jae
xor
sub
cs
rol
pop
pop
push
push
mov
int3
dec
dec
pop
nop
lea
psubw
outs
lahf
sub
xor
or
bound
ja
enter
stc
aam
jnp
out
mov
loop
and
jbe
jmp
lds
fwait
inc
sub
mov
aas
mov
outs
cmp
aas
stos
nop
in
fidiv
xor
xor
cmp
sbb
pop
jb
push
dec
and
dec
xchg
es
(bad)
fdivrp
xchg
sbb
bound
ss
sub
daa
or
inc
pop
sti
int3
outs
jmp
xchg
or
mov
cdq
pop
adc
adc
and
out
mov
xchg
cmc
cld
pop
pop
push
fdivr
(bad)
fadd
out
push
icebp
mov
imul
xor
repz
test
gs
sar
adc
pop
bound
xchg
pop
pop
mov
xchg
int3
les
push
pusha
sub
js
dec
nop
xor
ret
sub
xchg
sbb
das
lods
mov
sub
pop
pop
retf
sbb
push
pop
mov
mov
je
cmp
or
in
xchg
lock
pusha
aaa
jmp
cmp
mov
jp
jne
adc
xor
stos
out
(bad)
nop
gs
jmp
std
cmp
mov
jl
out
sbb
test
mov
(bad)
shr
loopne
jmp
mov
push
inc
shl
dec
pusha
ret
and
pop
div
mov
scas
jl
sub
add
mov
xchg
adc
icebp
jne
es
jbe
test
sub
nop
out
and
int
lds
fcmovb
and
fcomip
test
xchg
add
dec
xor
mov
cdq
or
jmp
xchg
add
outs
push
cmp
pop
jb
enter
cdq
jae
jnp
(bad)
inc
cmp
xor
rcr
call
iret
popf
pushf
leave
div
aaa
and
push
pop
ror
or
sub
adc
cdq
loope
xor
jbe
in
mov
cli
out
movs
mov
mov
rcr
add
popf
cmp
mov
loop
das
xor
sbb
sbb
dec
pop
inc
sbb
leave
ret
jmp
cmp
lods
xor
push
dec
(bad)
movs
out
ss
jb
pusha
test
jmp
pop
jmp
and
loop
add
add
dec
aad
jecxz
in
jp
bound
stos
and
ds
push
pop
fs
dec
xor
sbb
sar
inc
inc
hlt
adc
jmp
xchg
xchg
push
cmp
jb
sub
cmp
movs
mov
mov
fst
xchg
fnstcw
cmp
sub
add
cli
xor
fst
or
and
add
stos
sar
xchg
clc
sub
sbb
push
dec
inc
pop
leave
cmp
push
movs
mov
sub
movs
cwde
add
push
mov
fsubrp
in
add
mov
adc
jecxz
in
xchg
pop
mov
jns
or
iret
and
dec
fst
xchg
mov
cmp
dec
push
ins
or
mov
xchg
std
aad
mov
repz
(bad)
data16
stc
test
dec
jmp
rcr
rol
or
out
mov
mov
(bad)
mov
or
je
mov
mov
(bad)
neg
mov
jns
(bad)
repz
mov
xchg
mov
mov
movs
dec
les
jbe
aad
and
leave
repnz
dec
in
push
test
sub
pop
push
scas
retf
mov
cmp
inc
fisubr
and
fist
(bad)
push
xchg
stc
fdiv
fdiv
jnp
sti
pop
rcr
inc
adc
sbb
sbb
repnz
pop
ss
ret
sbb
cs
jns
test
retf
dec
sub
ss
jmp
popa
dec
int3
inc
and
push
sbb
or
mov
iret
xchg
adc
lock
in
sub
das
push
in
cs
dec
jp
pop
rcr
xor
xchg
popa
add
test
add
cmps
mov
js
test
int
(bad)
pop
xchg
aam
push
pop
out
dec
push
push
xor
push
or
cs
mov
dec
scas
xor
in
lahf
pop
aaa
aam
mov
stc
or
mov
mov
pop
sbb
push
cmps
mov
mov
je
xchg
add
and
xchg
add
mov
test
add
jne
nop
mov
pop
xor
jp
dec
lods
lods
int
xchg
lahf
iret
xchg
popa
cmp
ds
push
inc
jl
and
xor
or
xchg
out
sbb
or
mov
idiv
jmp
test
mov
fild
repz
pop
sub
or
jns
push
jge
cdq
dec
test
test
and
rcr
pop
loope
jnp
jmp
std
vsqrtps
das
adc
push
popf
or
pop
add
cdq
aaa
enter
adc
sub
das
mov
(bad)
push
xchg
scas
nop
xor
sahf
cmp
fcomp
cmp
xor
rol
daa
pop
xchg
jmp
mov
out
or
mov
and
jb
push
ins
xchg
dec
repnz
pop
imul
jg
loope
mov
leave
test
ds
bound
or
rcl
nop
xor
sub
sahf
xor
shl
lods
pop
sti
jno
aaa
mov
mov
add
mov
test
ins
pop
clc
push
loopne
jecxz
rol
xchg
aam
cmc
dec
inc
call
test
jmp
shl
pop
mov
out
jecxz
cmp
mov
mov
mov
xchg
mov
add
cs
push
mov
push
xchg
or
aaa
xchg
out
fld
adc
iret
out
mov
retf
inc
sub
gs
mov
aam
inc
ror
sti
sbb
xchg
xor
xor
sahf
push
xchg
cmp
adc
xor
or
xchg
lahf
xchg
test
sub
inc
loopne
add
mov
mov
idiv
xchg
mov
or
and
lods
outs
mov
or
mov
ins
ja
clc
in
or
cmps
sbb
ds
push
push
xchg
or
cmp
fist
aam
xor
push
dec
mov
xor
stos
inc
and
mov
mov
fisttp
sbb
arpl
dec
mov
and
ja
ret
cdq
(bad)
lahf
das
imul
repz
xor
inc
lods
retf
sbb
adc
mov
push
pop
mov
dec
lock
daa
mov
jnp
mov
adc
push
xchg
mov
sahf
sub
or
inc
iret
and
pusha
dec
vpmullw
test
ss
adc
fwait
(bad)
repnz
cmp
outs
scas
adc
xor
ret
cmp
lds
sar
jae
xchg
cmp
dec
test
pop
pop
iret
(bad)
mov
fisttp
iret
mov
push
mov
jg
adc
xor
rcr
mov
out
(bad)
or
cmp
push
hlt
imul
arpl
mul
pushf
pop
pop
jne
jl
enter
cmps
xchg
xchg
cmp
push
es
ss
arpl
pop
xchg
xchg
xchg
xor
cmc
xor
mov
icebp
sbb
mov
fcom
sub
out
ins
test
xchg
sbb
(bad)
jnp
sbb
and
addr16
sti
adc
leave
mov
cmp
jg
enter
xchg
cwde
adc
mov
xchg
mov
rcl
mov
xlat
xchg
mov
loopne
jne
xchg
fadd
mov
loopne
push
sub
cmp
popa
dec
xchg
es
xor
push
xor
adc
clc
rcl
test
cmp
xor
in
add
int3
xlat
mov
and
xchg
jbe
pop
in
xchg
repnz
cmp
cmp
mov
jmp
jp
stos
mov
mov
mov
xor
sbb
sbb
push
test
jp
jp
mov
je
xlat
inc
fmul
and
add
dec
lds
push
cmps
xchg
pop
add
jg
jbe
inc
clc
in
add
mov
idiv
inc
xchg
test
adc
inc
mov
pop
imul
fstp
btc
jno
div
mov
sbb
mov
ja
pop
test
jmp
pop
mul
or
xor
std
mov
dec
out
fmul
jle
mov
in
mul
adc
bound
sub
lock
div
jg
pop
mov
cdq
adc
(bad)
out
fs
fld
test
call
sbb
les
mov
enter
mov
mov
ja
pop
gs
(bad)
mov
test
ja
movs
fidiv
add
aam
popf
ja
movs
js
mov
sub
add
lods
cmp
sbb
add
out
shl
pop
int
adc
push
jne
loope
inc
(bad)
fstp
lock
cld
cmp
aad
mov
adc
push
mov
mul
cmp
pop
xchg
xchg
pop
imul
adc
bound
(bad)
xor
mov
test
fwait
adc
das
mov
addr16
xchg
test
fisttp
movs
sti
or
dec
cmp
mov
imul
repnz
mov
pop
push
ins
fst
or
mov
add
inc
sub
loopne
stc
popf
push
inc
xchg
cmp
sbb
mov
mov
sbb
and
lock
(bad)
(bad)
or
add
out
test
push
dec
adc
xchg
jmp
mov
xchg
mov
ins
mov
cdq
mov
ins
fcomp
std
pop
ins
xor
les
call
icebp
mov
aad
stos
leave
inc
gs
adc
inc
stc
push
lds
xchg
int3
ret
pop
fisttp
adc
add
sbb
dec
(bad)
outs
outs
adc
scas
xor
inc
mov
xchg
faddp
test
inc
sbb
ins
jl
jmp
hlt
(bad)
lock
mov
mov
mov
outs
mov
cmp
mov
xor
xchg
mov
cwde
pop
shl
add
out
mov
mov
aas
pusha
cli
xchg
mov
sbb
and
xor
cmp
ret
mov
xchg
xor
popa
inc
and
jge
imul
and
gs
test
mov
mov
sahf
shl
sahf
add
or
dec
hlt
sti
shr
outs
std
cmps
mov
fist
xchg
or
cli
fwait
cli
popf
movaps
sub
add
mov
fcomi
popf
cmp
xor
scas
ret
lock
mov
mov
repnz
sbb
(bad)
(bad)
ficom
mov
jmp
(bad)
rcr
icebp
jmp
repz
imul
or
pop
repz
adc
jg
pop
mov
mov
dec
jp
sub
jg
xchg
jge
fs
mov
mov
ret
repz
popf
xor
ins
jg
fadd
pop
loopne
push
aad
ret
movs
aaa
adc
pop
loope
int
inc
push
xchg
inc
sahf
xor
push
nop
adc
add
xchg
into
sub
mov
add
aas
inc
gs
(bad)
push
loop
aam
sbb
outs
mov
mov
nop
jb
jbe
ret
daa
shl
xchg
lds
stos
adc
and
or
inc
pop
sti
mov
fcmovnu
inc
mov
out
ins
dec
in
scas
sbb
femms
shl
outs
push
push
xchg
imul
push
add
fild
jo
mov
loop
pusha
inc
idiv
in
call
pop
xchg
jae
cs
cmps
or
push
hlt
jo
dec
mov
repz
dec
loop
(bad)
sbb
sahf
not
jb
repnz
dec
xchg
or
(bad)
das
icebp
cwde
inc
mov
jbe
es
repnz
mov
dec
push
pop
sbb
push
xor
inc
cmp
mov
pop
stos
test
mov
jno
push
repz
jnp
icebp
aad
leave
sub
out
adc
and
sbb
idiv
jo
mov
ret
mov
repnz
rcr
jge
shl
sub
jb
out
cmp
sbb
ja
addr16
es
jae
fisubr
fs
shl
sub
push
adc
call
push
arpl
or
dec
push
outs
jae
sar
or
push
icebp
mov
mov
pop
push
shl
dec
dec
dec
cli
es
push
aaa
mov
lea
sbb
push
outs
fbld
in
push
lods
cs
mov
jb
leave
ror
sub
dec
xchg
scas
or
outs
sub
xchg
ins
jge
call
fstp
stos
fisub
and
dec
stc
les
inc
bound
add
pop
aam
rcr
cmp
mov
adc
adc
or
in
movs
aas
mov
in
jae
fnstsw
cli
and
push
push
xor
cmp
pop
stos
pop
or
jno
adc
pop
mov
inc
dec
dec
pop
pop
bound
and
cli
adc
jo
out
xchg
test
fucom
in
inc
int3
sbb
in
pop
sub
jmp
repz
mov
ret
retf
mov
ret
adc
inc
jne
test
addr16
fs
mov
iret
movntq
shl
mov
adc
test
(bad)
or
leave
push
sbb
xchg
cmp
mov
aas
or
out
xchg
pop
dec
inc
pusha
icebp
jecxz
movs
test
mov
popf
push
inc
pop
sbb
(bad)
not
cmp
adc
in
jno
dec
cmp
dec
mov
inc
test
repz
jne
lock
sub
push
xor
sub
sub
shl
mov
cmp
aam
jbe
stos
test
jl
sub
nop
push
push
mov
pop
pop
pop
in
jmp
push
outs
mov
fs
jo
xchg
call
lods
(bad)
call
pop
out
addr16
push
push
pusha
jl
mov
cmp
xchg
addr16
popf
lds
mov
(bad)
loopne
cdq
out
pop
mov
mov
inc
es
mov
push
(bad)
sub
xchg
iret
sub
jno
push
outs
es
pop
jl
fnstcw
arpl
and
adc
mov
jae
sub
jne
mov
lods
rol
dec
imul
xor
dec
fsub
scas
and
int3
pusha
clc
push
cwde
sbb
mov
jbe
sar
fwait
mov
ja
cmp
in
and
in
test
mov
into
mov
push
in
mov
jg
mov
push
adc
push
icebp
xor
sbb
mov
mov
cmps
mov
int3
cmp
cwde
movs
pusha
mov
aas
or
mov
pop
cmp
inc
mov
pop
or
jno
out
xchg
push
fstp
and
xchg
hlt
cmp
cmps
sub
sub
imul
imul
imul
ror
mov
inc
xchg
mov
icebp
inc
jo
outs
mov
pop
xor
and
cmp
add
jns
xor
fiadd
test
mov
push
sbb
push
xor
ss
rcr
xor
out
aaa
pusha
call
inc
mov
pop
mov
dec
icebp
jne
outs
icebp
mov
lahf
repz
test
imul
xor
mov
sbb
jns
out
les
sti
xchg
stos
into
cdq
ins
daa
sahf
in
rcl
mov
adc
xchg
mov
int3
push
sub
repnz
loope
mov
lock
push
and
fwait
std
mov
nop
(bad)
xor
into
cs
mov
dec
dec
inc
cli
test
out
pop
or
fldenv
jbe
xor
adc
iret
or
stc
push
pop
inc
push
pop
sub
adc
(bad)
int3
push
loopne
jno
mov
fisttp
or
lods
aad
xchg
sti
sub
add
and
xlat
arpl
fs
sbb
inc
jmp
push
and
test
add
adc
inc
push
fwait
shr
stc
mov
ficomp
sub
xchg
jg
mov
adc
sub
xchg
and
out
dec
cmp
imul
sahf
sbb
inc
mov
and
call
(bad)
mov
sti
inc
push
arpl
and
shl
rol
(bad)
shr
sub
fnstenv
clc
adc
add
add
test
lahf
pop
out
iret
xchg
shl
and
xor
das
mov
retf
mov
mov
repnz
fidivr
je
sub
dec
mov
popf
pop
test
push
div
mov
adc
movs
xor
test
mov
sub
arpl
movs
popa
cmp
sbb
pop
cwde
inc
stos
test
mov
fistp
clc
and
cmp
add
and
stc
sub
ror
iret
add
(bad)
sub
cmp
ret
mov
adc
repz
leave
lea
adc
cmp
lods
cmp
lods
dec
in
(bad)
push
mov
je
lea
fadd
(bad)
sbb
std
jmp
inc
inc
mov
aad
and
retf
outs
gs
in
push
sub
pop
and
cli
inc
rcl
cs
mov
scas
adc
sbb
fnstsw
dec
loope
cmp
mov
push
sbb
push
addr16
and
mov
fisub
out
jl
jne
xor
add
aad
shr
mov
xlat
lock
dec
pushf
call
dec
not
mov
mov
push
sub
sahf
jle
sbb
pop
shr
lock
leave
stos
pop
outs
and
rcl
sub
jnp
xlat
lea
inc
outs
push
movs
xor
sbb
stos
fwait
lods
outs
loopne
push
jbe
jl
jae
or
div
jmp
sub
add
aad
push
inc
mov
movs
mov
inc
mov
mov
mov
call
xchg
popa
push
inc
xor
popf
iret
adc
aad
mov
sbb
dec
pusha
mov
mov
repnz
cmps
outs
mov
push
adc
test
mov
popf
scas
or
dec
mov
outs
mov
loope
psubb
jne
aaa
pushf
scas
ins
clc
imul
jne
mov
pop
popa
mov
pop
push
in
scas
in
cmp
sti
lock
inc
lds
and
sub
loopne
je
sbb
jno
sub
or
leave
sbb
cdq
jae
rcl
stc
pop
retf
loope
and
lock
aas
or
movs
fs
cmp
sbb
push
xor
and
outs
repz
cwde
sbb
call
adc
outs
xchg
daa
nop
inc
out
push
jnp
dec
xchg
das
push
jg
pop
shr
ja
out
popa
inc
add
xor
iret
nop
add
inc
loopne
cmp
adc
cmps
or
mov
aam
mov
push
jecxz
or
dec
push
or
cmp
test
adc
cld
fwait
push
lods
movs
adc
and
mov
mov
add
inc
push
mov
out
fstp
mov
(bad)
enter
and
shl
scas
cmp
mov
das
jb
xor
push
or
dec
ins
or
sub
lea
ins
outs
and
push
or
pushf
dec
inc
std
(bad)
jno
daa
and
xchg
retf
das
and
mov
or
fmul
sbb
sub
(bad)
fsub
push
push
adc
daa
sbb
sbb
inc
stc
bound
jo
inc
test
out
vshufpd
lds
mov
jb
mov
xor
and
loop
out
sub
mov
test
mov
and
repnz
stc
push
ja
(bad)
in
mov
enter
fstp
rol
dec
push
les
sub
adc
jb
cmp
adc
mov
or
loope
jae
dec
das
mov
jbe
mov
or
pusha
daa
push
shl
test
sub
test
sbb
sub
lods
aam
xor
scas
xlat
cmp
xor
mov
pop
call
mov
sti
ficomp
xchg
bound
adc
xchg
xchg
xchg
mov
hlt
repz
rcr
and
push
push
xor
xor
sub
lock
inc
mov
jo
or
push
and
clc
fist
ror
repnz
dec
pop
xchg
je
adc
jmp
sbb
out
inc
pusha
jb
shl
adc
ins
mov
xlat
lock
popf
pop
gs
mov
sub
sub
and
retf
(bad)
popa
xor
ja
mov
and
cld
repnz
sbb
sub
(bad)
retf
leave
pop
das
mov
std
inc
inc
jle
mov
xor
in
test
mov
dec
pusha
xor
jmp
cdq
mov
enter
sti
sahf
std
mov
pop
in
imul
sub
fcomp
and
stos
popa
mov
stos
jne
dec
call
xchg
ins
dec
cmp
mov
add
mov
ins
cmp
(bad)
adc
adc
daa
add
(bad)
and
sar
push
add
les
or
sub
sbb
ret
xchg
and
jo
bndstx
fwait
movs
mov
or
in
mov
sbb
rcr
dec
mov
hlt
outs
leave
je
ret
and
or
mov
mov
out
js
ins
fnstenv
mul
adc
pop
in
pop
jle
sbb
push
std
scas
call
out
add
adc
push
mov
push
xor
pop
bound
wbinvd
movs
xor
enter
push
(bad)
imul
lea
std
and
pop
add
popa
aam
test
jle
in
xchg
(bad)
jno
jecxz
in
stos
inc
xchg
mov
or
or
test
dec
push
sub
and
cmp
or
ins
je
jb
dec
mov
cmc
rcr
and
and
out
aaa
sbb
pop
xchg
adc
adc
sub
xchg
sub
mov
std
mov
jecxz
jl
test
retf
mov
pop
cs
fcmovbe
sub
mov
lahf
aaa
push
stc
clc
jns
sub
xchg
ds
or
mov
in
data16
popf
adc
aaa
dec
or
fist
cld
lock
or
movs
daa
adc
gs
sbb
add
mov
and
xchg
das
push
(bad)
outs
cwde
push
daa
(bad)
inc
push
xor
sub
lds
and
das
mov
and
mov
pop
push
and
ror
pop
mov
repz
fstp
mov
ins
sbb
in
rcl
loopne
ins
cmp
ds
aas
inc
push
sub
jmp
xor
inc
gs
inc
push
cmovp
jmp
pusha
and
stos
pop
inc
push
rcr
xor
push
cdq
pop
fild
loop
fs
into
mov
call
mov
sbb
jge
dec
aad
xor
ret
jmp
iret
test
xor
fucom
clc
mov
dec
xor
push
lods
mov
or
ds
cmps
cmp
arpl
je
retf
jne
jl
inc
retf
xor
xchg
xor
(bad)
mov
jo
out
pusha
js
imul
addr16
popa
pushf
jo
rcl
lds
(bad)
ins
mov
dec
outs
ror
mov
sbb
push
outs
add
mov
mov
jb
mov
mov
fcomp
sbb
ins
xlat
mov
pop
paddsw
dec
mov
fisub
xor
jb
fidivr
push
test
cmps
sbb
cmp
cmc
stos
lods
xchg
add
daa
ins
cmp
xchg
inc
xchg
push
xchg
pop
dec
xchg
iret
inc
in
inc
and
cli
pop
je
mov
fld
mov
jg
repz
loop
popa
jecxz
cmps
or
shr
sbb
rcr
or
jg
xchg
aad
dec
inc
movs
into
enter
pop
pop
rcr
fdivr
test
repnz
jo
add
dec
imul
lods
lock
mov
mov
pop
adc
sbb
je
dec
mov
cmp
xor
(bad)
pop
inc
mov
int3
scas
fnclex
mov
hlt
fdiv
dec
xchg
and
out
push
repnz
ret
cmp
in
arpl
lods
rcl
mov
and
hlt
jg
aas
inc
shr
xchg
les
or
sbb
pop
out
loop
sahf
mov
xor
inc
mov
outs
xchg
(bad)
push
fist
fmul
dec
outs
jg
mov
inc
loop
in
fs
mov
push
mov
mov
outs
and
jl
ret
ss
adc
movs
mov
and
xchg
stos
jge
jle
sbb
js
sbb
bound
mov
lods
sbb
jmp
pop
outs
std
test
xlat
lods
xchg
add
rol
mov
pop
sbb
sub
xchg
stos
movq
xchg
push
popf
add
xchg
rcr
xchg
jnp
and
std
or
scas
jle
mov
jns
sub
jns
jg
dec
sahf
pop
xlat
cwde
(bad)
mov
mov
xchg
popa
int
mov
push
or
mov
ficomp
hlt
dec
adc
in
jge
call
inc
jmp
mov
das
in
dec
or
mov
ins
pop
sub
mov
popa
mov
jbe
pushf
sbb
daa
(bad)
sar
or
cmp
ret
fmul
int3
and
or
xor
sahf
cdq
push
sub
es
sub
std
aad
nop
(bad)
jmp
sbb
gs
push
lods
lock
test
jmp
mov
add
inc
add
ins
scas
sbb
jns
mov
(bad)
test
mov
es
mov
sahf
jg
test
adc
dec
inc
or
xor
jno
pop
add
cmp
jo
xchg
ror
test
and
xchg
mov
mov
daa
ret
ror
fnstsw
lock
adc
sti
push
nop
xchg
cmps
aam
dec
xchg
std
adc
jmp
cmps
and
add
xor
test
fsubr
jns
addps
jno
fstp
fsubp
retf
xchg
gs
repnz
mov
add
js
add
out
sbb
pop
add
ins
or
xor
cwde
loopne
xor
shl
lea
xor
dec
and
addr16
mov
rcr
ss
repz
icebp
mov
mov
mov
cmp
sub
test
pop
xchg
pop
test
ja
pop
sbb
dec
jne
jge
dec
lods
sbb
xchg
push
mov
in
stos
call
xor
cmp
mov
mov
cmp
fisttp
out
cs
add
mov
arpl
sbb
fwait
pop
in
jne
or
dec
(bad)
aam
mov
lds
mov
mov
inc
dec
xchg
fstp
fld
add
jo
sub
int
mov
add
sahf
cmp
jbe
jmp
dec
jns
cld
fdivr
bound
dec
(bad)
ror
cmps
or
rol
inc
and
jne
cs
and
stc
and
cmp
xchg
aad
call
adc
adc
mov
cld
or
jbe
(bad)
mov
data16
in
sub
aas
repz
mov
mov
mov
pop
les
outs
(bad)
ins
xor
push
fdiv
push
pusha
mov
xor
sbb
push
mov
gs
mov
sub
ins
mov
in
adc
xor
cmps
dec
cmp
xor
cmp
stos
fdivr
std
repnz
hlt
dec
or
cmps
sub
inc
mov
push
and
ficomp
out
mov
fdivr
and
push
mov
iret
mov
popa
(bad)
pop
ja
outs
cmp
pop
sub
and
pop
aad
mov
add
adc
add
push
fwait
adc
out
cmp
aad
pop
cli
int
neg
cmp
shr
xchg
xor
test
fcmove
gs
mov
mov
int
lods
shr
sbb
lods
jo
push
push
xchg
call
jnp
sub
pop
pop
sahf
sbb
(bad)
inc
pop
in
sar
scas
push
xchg
or
in
pop
ret
sahf
cmp
jmp
mov
inc
test
leave
dec
add
or
mov
les
mov
adc
(bad)
or
cmp
xchg
out
mov
cmps
aaa
mov
aas
push
repnz
ficomp
or
popf
ins
test
(bad)
mov
mov
jmp
loop
sub
(bad)
movs
(bad)
js
pop
jmp
fs
cmp
iret
vsqrtsd
xor
jno
push
fldcw
inc
nop
adc
sbb
test
(bad)
loope
mov
add
pop
dec
imul
lea
xor
jae
loop
add
mov
pop
mov
fnstcw
mov
jg
cld
jno
ja
std
repz
xchg
dec
inc
icebp
lds
push
add
mov
out
das
fist
imul
mov
mov
and
mov
hlt
or
cmc
arpl
pusha
xchg
push
sub
movs
aas
rol
xchg
test
add
daa
lds
jmp
jmp
cmp
mov
or
neg
fstp
lods
inc
sub
dec
daa
(bad)
push
and
mov
pushf
cmc
hlt
test
mov
or
inc
xlat
jg
or
int
mov
pop
inc
jmp
imul
addr16
div
mov
mov
icebp
or
dec
adc
outs
pop
adc
xchg
mov
ins
imul
jae
pusha
cmp
dec
sub
cdq
jmp
lods
aam
inc
dec
push
sbb
aad
push
adc
test
jmp
push
sub
in
pop
and
dec
ret
adc
push
test
das
fs
and
jmp
(bad)
jmp
cmp
(bad)
rcr
lds
scas
stos
fs
push
lea
popf
xor
fwait
mov
loop
dec
std
pop
add
pop
mov
and
and
fst
inc
or
jmp
jmp
cli
adc
je
xchg
dec
sub
dec
inc
pop
xchg
call
jmp
inc
call
aam
(bad)
cmp
xor
pop
clc
jo
jecxz
int3
lahf
cwde
out
repnz
sub
xor
stos
sub
jmp
add
jl
jmp
xchg
pop
ja
jg
fld
ss
jbe
or
mov
outs
and
mov
jg
in
std
in
inc
inc
push
dec
js
mov
jno
div
dec
xor
dec
xchg
fwait
mov
cmps
xchg
mov
out
dec
sbb
stos
and
add
add
imul
push
mov
jo
adc
pop
xchg
jg
cld
xor
add
out
stos
popa
cmp
mov
int
sub
outs
mov
test
enter
(bad)
hlt
or
inc
pop
adc
arpl
jb
jp
psubd
loopne
push
sbb
mov
xor
push
fcomp
outs
add
mov
jmp
jne
iret
and
or
loope
mov
pusha
(bad)
cld
jge
jg
repnz
push
in
call
js
mov
gs
(bad)
leave
and
pop
ss
int
sub
add
jp
sub
push
pop
in
adc
adc
imul
cmps
jecxz
mov
xchg
hlt
shl
(bad)
mov
mov
call
ret
add
adc
xchg
stos
out
sub
pop
push
jp
mov
psubd
adc
retf
mov
xor
mov
dec
or
int3
mov
push
jae
jle
mov
leave
xor
mov
je
xchg
pusha
hlt
mov
xor
inc
pop
sub
aas
retf
push
mov
jo
repz
xor
mov
out
clc
or
retf
bound
mov
adc
jae
fld
cdq
ret
pop
pop
add
scas
(bad)
repz
lds
retf
icebp
push
retf
adc
les
out
es
mov
cdq
inc
jnp
out
jmp
sub
or
push
daa
fmul
add
fisttp
mov
movs
(bad)
mov
sbb
or
dec
gs
xor
jmp
ins
sub
xchg
push
in
lock
jle
(bad)
retf
sbb
push
cmp
mov
in
cld
fild
inc
pop
jne
div
sub
or
shl
and
es
addr16
mov
mov
jmp
and
xchg
inc
cs
dec
cmc
enter
mov
jecxz
call
sbb
pop
in
in
mov
lea
sub
adc
mov
jae
adc
pop
cmp
int
mov
mov
push
in
fstp
fcomp
jmp
push
sbb
hlt
inc
add
mov
das
pop
in
xchg
jbe
lods
sub
cmp
xchg
loop
inc
mov
jle
or
xor
sbb
in
push
test
inc
cli
leave
stos
cmp
call
mov
sub
jnp
xchg
pop
inc
adc
cld
call
jne
inc
cmp
jge
hlt
push
xchg
cmp
bound
adc
lods
out
test
rcl
in
lock
mov
cmps
adc
sbb
mov
arpl
dec
in
dec
scas
adc
(bad)
mov
inc
(bad)
in
and
imul
add
or
jmp
jmp
scas
icebp
jnp
mov
jmp
ins
cmps
push
xor
mov
jnp
in
dec
and
jne
xlat
(bad)
jg
pop
pop
fst
out
rcr
mov
sbb
hlt
mov
add
push
fild
out
stos
push
jecxz
aas
xor
add
test
and
push
xchg
cwde
cmc
lods
xchg
fisub
loop
adc
mov
push
adc
xchg
xor
addr16
jmp
call
out
pop
test
(bad)
cld
imul
or
repz
retf
xchg
fcomp
pcmpgtw
sti
xor
jo
into
cwde
ror
stc
bound
push
fild
sbb
jnp
js
fst
push
clc
cmp
mov
add
std
cmps
imul
cwde
popf
push
pop
aad
push
cmpps
jecxz
mov
(bad)
aam
test
adc
xchg
mov
daa
push
xor
xchg
sbb
(bad)
test
mov
sbb
retf
xchg
pop
aam
inc
jp
arpl
and
adc
cmc
test
pop
(bad)
cmp
push
out
inc
pop
(bad)
retf
cwde
pop
out
int3
sbb
call
out
and
lock
xchg
xchg
out
xchg
pop
cdq
inc
xchg
frstor
sbb
popa
cmp
daa
ss
(bad)
jmp
sub
push
jge
js
out
sub
xor
pop
shl
cli
pushf
mov
scas
add
pop
and
or
inc
and
xor
leave
aam
pmaddwd
jne
addr16
pop
sub
mov
inc
mov
imul
inc
ds
mov
sub
mov
sub
fdivrp
stos
ss
cmp
cmp
pop
jg
dec
cli
push
pop
retf
pop
sbb
fmul
jmp
mov
repnz
gs
(bad)
dec
out
xchg
mov
add
in
dec
dec
out
das
shl
sub
push
repnz
and
arpl
out
push
pshufw
loope
fist
inc
jecxz
inc
dec
pop
aaa
rcl
push
call
jno
inc
mov
or
mov
adc
movs
and
adc
and
(bad)
ins
mov
cwde
les
les
jmp
inc
movs
and
mov
scas
shl
and
jl
add
loope
fbstp
mov
xchg
(bad)
iret
mov
stos
retf
jge
mov
out
xlat
movs
rcl
out
xchg
mov
lea
sbb
inc
pop
mov
addr16
mov
adc
add
mov
pop
mov
rcl
lock
pop
daa
test
cmp
pop
push
jg
mov
adc
sub
xor
stc
sbb
stos
xlat
cs
sbb
gs
push
jne
dec
adc
lock
das
mov
cmp
xchg
or
test
dec
pop
jecxz
scas
bound
adc
lea
jle
ins
jb
ret
adc
add
dec
lock
mov
xchg
xchg
xlat
cmp
cmp
inc
aad
scas
adc
ret
mov
js
or
clc
retf
xchg
popa
jnp
push
pop
mov
int
mov
lds
jbe
add
jns
adc
adc
(bad)
pandn
out
xchg
aam
(bad)
adc
xchg
fist
xor
rep
mov
in
mov
pop
sbb
and
jmp
rcl
(bad)
stc
cmp
pop
mov
setno
ss
push
and
sub
sbb
push
jg
inc
jg
inc
jo
and
cmp
mov
mov
xor
or
inc
push
cwde
jbe
xor
xor
or
mov
addr16
jp
fadd
mov
xchg
fisubr
and
jecxz
je
pop
push
or
sub
dec
sub
jb
jo
mov
fidivr
inc
test
es
xor
cmp
xchg
mov
and
mov
cdq
ss
xchg
dec
call
das
int
neg
arpl
or
test
das
out
adc
push
sbb
pop
lock
int3
mov
jge
test
call
les
sbb
ins
pop
xchg
xchg
test
xchg
addr16
cwde
xchg
dec
cwde
and
dec
push
aam
movs
scas
xchg
aam
cmp
adc
lock
pop
neg
retf
je
jb
dec
jo
popa
pop
mov
push
jge
gs
cwde
add
jae
(bad)
cli
adc
mov
xchg
ja
push
xchg
add
in
adc
lea
mov
repz
pop
push
in
dec
mov
shl
xchg
push
outs
mov
adc
pop
sub
add
shl
adc
xor
ja
in
push
mov
sbb
sub
int3
or
add
(bad)
jmp
xchg
aad
sahf
sub
bound
loop
ds
jp
push
shl
popa
mov
jecxz
sti
and
pop
outs
imul
ds
jnp
and
hlt
jmp
pop
add
in
rol
or
fwait
and
fbld
movs
fst
push
mov
add
repz
imul
(bad)
xchg
xor
mov
push
mov
into
jp
imul
pop
gs
adc
pusha
loopne
stc
(bad)
ror
scas
test
lahf
jle
stc
cld
sbb
push
test
(bad)
mov
sub
sbb
push
add
cwde
fwait
lods
jb
ret
mov
xor
fstp
mov
aaa
in
das
push
jae
push
jg
push
mov
stos
shr
test
inc
xchg
jl
xchg
or
adc
outs
jo
add
cmp
pop
adc
sbb
hlt
mov
cmp
pop
retf
ins
xchg
cmps
or
inc
add
push
dec
add
out
sti
push
cdq
sub
sub
in
jnp
nop
xchg
mov
in
jecxz
mov
xchg
inc
sbb
mov
je
mov
adc
les
sbb
ret
mov
mov
pop
add
nop
not
pop
test
push
sub
mov
or
stos
xchg
nop
dec
xchg
adc
push
movs
into
repnz
add
adc
inc
jbe
xor
iret
or
jo
stos
and
sbb
push
dec
and
pop
into
jg
imul
push
mov
push
(bad)
cmps
add
movs
jecxz
popf
test
cmp
push
sub
push
mov
(bad)
(bad)
sahf
leave
jmp
push
dec
inc
sbb
push
sbb
push
fdiv
add
push
dec
and
icebp
mov
pop
sbb
movs
test
rcl
out
sbb
mov
push
sbb
mov
sbb
xchg
test
dec
push
repz
xchg
cmps
outs
and
fsubr
sub
sub
outs
(bad)
cmp
mov
inc
xchg
aas
xor
xchg
xchg
mov
scas
cli
push
push
or
push
xchg
ds
and
sti
rcr
jge
std
scas
mov
in
jmp
dec
test
out
and
adc
mov
aad
push
test
aas
into
rcr
sbb
popa
(bad)
outs
xor
cwde
cmp
dec
mov
jae
mov
jle
mov
imul
mov
movs
push
sub
push
test
mov
jns
push
xor
pusha
repz
ficomp
jns
repnz
addr16
sbb
lea
(bad)
icebp
jae
mul
pop
test
retf
push
lods
dec
add
mov
adc
pop
and
add
fdiv
daa
cmc
inc
xchg
or
addr16
(bad)
cld
idiv
sub
shl
jecxz
std
and
mov
shl
in
test
lock
xchg
and
mov
stos
hlt
aam
mov
fisubr
mov
jmp
out
adc
mov
mov
cld
push
dec
dec
cmp
lds
cmp
not
add
shl
js
add
or
or
test
lahf
repnz
jl
xor
rcl
cmp
and
sub
into
jo
dec
pop
imul
ja
adc
and
pop
enter
mov
mov
mov
cmp
gs
ret
arpl
rcr
sub
push
sub
xchg
xor
and
and
iret
mov
push
mov
pop
fidiv
imul
and
cs
xor
imul
mov
sti
cmp
(bad)
pop
icebp
das
fwait
jns
xor
loopne
jg
lahf
ret
mov
push
or
gs
mov
test
mov
dec
ds
mov
scas
sub
push
add
jnp
into
sbb
mov
rol
sbb
add
inc
inc
mov
xchg
not
in
daa
and
pop
inc
sub
outs
das
aad
outs
lds
xchg
sub
and
inc
jp
cld
and
pop
inc
enter
popa
mov
mov
lock
mov
push
movs
lahf
jmp
xlat
add
mov
cmp
call
shr
movs
pxor
xchg
push
inc
stc
jl
lods
retf
mov
add
mov
jns
hlt
lock
jnp
xor
fsubr
(bad)
stos
or
pop
mov
mov
inc
leave
lds
retf
test
scas
js
movs
lods
std
pop
fwait
repz
(bad)
loope
call
enter
cld
sbb
sbb
pop
push
mov
(bad)
mov
outs
loop
cdq
add
jl
push
cmp
test
inc
lods
jecxz
jecxz
(bad)
call
push
push
(bad)
inc
in
or
jae
inc
movs
daa
cmps
adc
outs
mov
sub
push
and
sub
sub
rcl
push
sub
(bad)
xchg
test
push
(bad)
or
shl
adc
cdq
lock
mov
rcr
cmp
cmps
int3
imul
bound
(bad)
stc
inc
dec
cmp
ja
add
push
mov
enter
or
pop
mov
mov
aaa
fcom
sbb
gs
cli
or
jne
inc
int3
or
test
into
xchg
scas
pop
jg
or
cmp
xor
or
mov
outs
jl
outs
dec
and
cdq
inc
dec
lea
mov
dec
sub
and
push
leave
dec
std
and
mov
mov
jne
pop
adc
add
pushf
shr
add
sub
arpl
sub
cdq
test
add
ror
inc
rcl
xor
call
sub
fdiv
test
adc
popf
(bad)
cmp
mov
rcl
or
test
sbb
pop
dec
repz
aas
push
ins
dec
sub
and
out
dec
out
push
add
inc
and
gs
iret
sbb
ins
in
xor
inc
adc
mov
jecxz
pop
cmp
ror
push
stc
mov
jmp
in
aaa
add
popf
enter
push
xchg
daa
adc
call
sti
add
repnz
push
xor
es
(bad)
(bad)
stc
xlat
xor
data16
retf
and
push
aas
jo
loope
out
inc
sub
pop
xchg
xchg
cmp
and
aad
push
test
lds
adc
mov
icebp
xor
dec
stc
nop
shl
dec
stos
jmp
stc
mov
stos
add
jmp
jns
dec
mov
push
jo
mov
dec
ins
hlt
xchg
popf
push
lahf
stc
je
mov
mov
or
idiv
sbb
cmp
add
inc
cs
js
add
sbb
(bad)
lods
iret
mov
inc
sbb
ret
sub
add
loope
inc
int3
sbb
jno
jl
add
pop
cmps
jne
das
or
int
retf
clc
vmovaps
sar
loop
pop
aas
xor
push
cs
dec
mov
aas
and
mov
fdiv
les
sub
jecxz
jmp
add
jae
ins
push
lahf
je
inc
retf
adc
pop
rcl
and
push
sub
push
xor
sub
push
out
or
xor
jo
stc
push
mov
pop
fistp
aas
loope
or
fxch
and
adc
xchg
push
int3
pop
push
pushf
enter
mov
je
movs
pop
sbb
cli
cs
cwde
int3
das
iret
xchg
cli
gs
cmps
(bad)
test
jne
mov
xor
xchg
ss
mov
xchg
fldenv
pop
(bad)
into
jmp
cmp
repz
adc
(bad)
jge
sbb
outs
xor
xor
sub
push
int3
mov
inc
(bad)
pop
aaa
inc
jl
mov
mov
dec
ret
or
fldenv
sbb
xchg
std
cmp
mov
(bad)
xchg
and
aad
nop
push
mov
cld
push
js
mov
and
mov
jb
jmp
sub
pop
push
enter
add
or
dec
je
out
ror
in
sti
inc
xchg
ds
add
push
push
mov
cmps
jb
pop
add
push
cmp
jg
cdq
paddq
pop
rol
jns
or
aam
or
jbe
pop
imul
mov
xchg
mov
popf
push
pop
mov
fidiv
jno
xor
mov
cdq
mov
push
popa
ror
lahf
fmul
sbb
push
xchg
mov
cmp
pop
aas
inc
push
fmul
div
jo
and
rcr
pop
jne
xchg
shl
pop
jl
xchg
push
push
mov
mov
xchg
jnp
aaa
adc
loopne
cmp
mov
mov
in
lods
retf
push
mov
cli
sub
xchg
pop
pop
pop
lods
add
cmp
mov
gs
fs
fsub
ja
dec
jge
or
cmps
ins
xchg
add
cs
mov
jno
cmp
mov
cli
cld
lock
lods
mov
xor
push
shl
shl
push
je
bound
and
jmp
stos
aas
mov
pop
add
push
ss
out
ins
or
xor
(bad)
test
test
and
loope
in
enter
cmp
cmp
mov
(bad)
ret
jmp
ins
jbe
jns
pop
dec
dec
mov
mov
cdq
cmp
xchg
xbegin
ret
int3
mov
out
sbb
dec
cmp
inc
jo
jno
scas
cmp
mov
mov
cli
cmp
mov
dec
bound
leave
bound
lock
sbb
add
ja
or
and
jbe
and
out
push
inc
jmp
inc
push
mov
or
je
(bad)
fst
mov
sti
iret
sub
jmp
dec
iret
imul
mov
(bad)
popf
(bad)
jmp
inc
(bad)
fild
(bad)
xor
lods
rcl
ret
jne
movs
mov
mov
mov
in
xor
(bad)
iret
lods
es
aaa
jbe
(bad)
test
jecxz
outs
shl
sub
jb
cwde
fs
sub
jns
sbb
xchg
outs
popf
push
nop
cmp
idiv
inc
push
loopne
dec
xchg
xchg
fcomi
pop
repz
dec
pop
sbb
icebp
popf
hlt
aas
(bad)
in
cmps
cmc
mov
sub
mov
movs
cld
or
xchg
aaa
mov
push
xchg
xchg
sub
inc
stos
inc
mov
les
jnp
xchg
jl
stos
adc
loopne
add
sbb
std
jno
mov
pop
cs
(bad)
call
test
test
or
xor
push
xchg
out
or
sbb
xor
icebp
sbb
push
and
push
dec
lea
and
or
nop
not
outs
mov
fbstp
add
push
mov
into
pop
push
scas
mov
jb
sub
sub
retf
dec
push
pop
push
sbb
dec
movs
not
or
mov
scas
jnp
hlt
xchg
add
ds
dec
xchg
pop
xor
arpl
xor
cmp
and
out
ins
inc
retf
push
mov
jnp
popa
ja
sbb
mov
xor
std
jp
sbb
dec
cli
jo
enter
push
repz
jb
cmovo
js
int
pusha
loopne
dec
jne
inc
mov
test
or
adc
imul
rsqrtps
(bad)
icebp
(bad)
retf
into
dec
retf
(bad)
cmp
outs
outs
in
jbe
fs
stos
iret
fmul
add
rcr
stos
adc
out
int3
aad
adc
push
pop
pop
inc
inc
mov
das
jns
nop
push
shl
outs
jmp
int3
popf
or
fs
sub
pusha
fist
in
cs
aad
dec
test
cmp
je
gs
enter
inc
sub
nop
mov
fcom
bound
mov
int3
mov
inc
mov
mov
lds
(bad)
iret
mov
jp
iret
pop
leave
pusha
add
nop
lahf
pop
ja
iret
mov
xlat
call
sbb
mov
fisub
test
adc
jle
sahf
dec
test
push
mov
add
sbb
idiv
pop
sub
cmp
mov
sub
mov
cmps
jmp
sahf
fsubr
cmp
cmps
fst
aaa
adc
mov
push
enter
fsub
test
xchg
jmp
out
push
in
cmp
pop
and
repz
sub
ror
imul
fdiv
(bad)
cdq
sub
jl
imul
mov
mov
fstp
inc
test
jne
bound
cdq
push
cdq
fisttp
mov
mov
xchg
dec
mov
or
loopne
out
push
mov
out
fisttp
and
scas
lds
jge
hlt
fiadd
jbe
push
pusha
xor
outs
pop
mov
push
xchg
and
int
daa
sahf
(bad)
movs
mov
loope
and
ja
mov
mov
call
pop
in
(bad)
rcl
cdq
popa
mov
mov
ficom
pusha
sbb
fsub
inc
cmps
test
ins
jl
fimul
and
movs
or
ss
ret
mov
push
mov
daa
or
ret
adc
xchg
rcr
imul
loopne
mov
jp
and
(bad)
jo
fadd
sbb
jo
ud0
xor
mov
jmp
test
jb
push
repnz
or
imul
sub
sub
push
fld
ror
movs
mov
sbb
xchg
repz
daa
es
sbb
sti
(bad)
fild
clc
add
xchg
fstp
sahf
stos
outs
sbb
lods
pop
int
sub
xor
lahf
mov
sahf
mov
adc
pop
mov
push
jp
adc
fs
sar
gs
sbb
mov
lds
inc
push
add
or
icebp
push
inc
aaa
mov
mov
fwait
mov
ret
pushf
retf
adc
ins
push
dec
mov
scas
pop
pop
mov
out
adc
and
jl
add
push
loop
mov
add
ret
jnp
cli
jne
push
xlat
dec
sbb
sub
cmps
mov
mov
jg
dec
adc
mov
movs
aam
and
fs
sbb
push
sub
xor
mov
add
cmp
in
jbe
mov
sub
add
mov
xchg
push
push
stc
out
stos
cmp
or
jb
out
mov
movs
test
clc
mov
push
mov
or
hlt
in
mov
fidiv
sbb
dec
cmps
jae
cli
sti
cmp
push
jo
push
(bad)
sub
inc
mov
xchg
pop
ins
cmc
xchg
mov
pop
iret
ret
movs
movs
add
mov
(bad)
outs
mov
leave
dec
dec
xor
pusha
test
xor
mov
enter
dec
icebp
(bad)
lock
adc
jg
jae
scas
sub
mov
cmp
das
nop
lahf
jg
cmp
mov
es
xor
outs
xchg
xchg
add
pop
push
aad
(bad)
test
pop
lods
ins
adc
or
sub
cwde
sub
pop
stos
pop
mov
cmc
cmp
cli
and
mov
xchg
cmp
sti
pop
adc
jmp
sub
push
fst
aad
pushf
ds
inc
outs
retf
xchg
mov
mov
mov
rol
cmp
cmps
lds
leave
jge
imul
push
fs
dec
mov
or
sbb
xchg
mov
sti
mov
pop
and
sti
cmp
xchg
mov
ret
pushf
and
stc
test
mov
mov
adc
and
mov
pop
(bad)
cli
jae
inc
push
js
mov
out
rcl
dec
xchg
push
jbe
enter
icebp
xchg
xor
stos
std
inc
sub
or
iret
push
cmp
add
cmp
cmp
mov
sbb
dec
pop
add
es
fsubr
sub
or
cmp
xchg
aas
and
test
push
ror
xor
movs
je
mov
mov
(bad)
loop
add
(bad)
rcr
popf
arpl
xchg
loopne
nop
jge
ins
ret
sbb
mov
push
mov
jmp
retf
sub
cmp
mov
jecxz
aad
inc
clc
push
and
or
(bad)
mov
inc
sbb
test
sub
jnp
sbb
or
sbb
hlt
stos
nop
jmp
sub
push
adc
call
dec
out
inc
sti
(bad)
mov
mov
dec
xor
std
jno
push
das
jae
push
clc
inc
loop
iret
sbb
jb
retf
enter
push
dec
dec
add
mov
and
dec
enter
xor
jmp
int3
rol
inc
jl
mov
daa
cmc
movs
fdiv
cmp
aam
je
and
add
xchg
xor
(bad)
mov
or
das
test
xchg
and
movs
xchg
sub
pop
pop
pop
pushf
jo
shl
mov
push
mov
hlt
sti
addr16
addr16
jne
mul
dec
sub
or
shr
inc
adc
jge
xor
mov
adc
retf
or
ret
loop
jle
mov
sbb
add
jmp
dec
add
out
lea
and
into
cmp
cmp
adc
adc
jmp
call
mov
xor
mov
push
clc
jns
inc
popf
not
mov
xchg
sahf
and
shr
dec
xor
in
hlt
mov
(bad)
pop
adc
inc
(bad)
mov
rcr
stc
pop
add
mov
sbb
data16
jmp
(bad)
nop
adc
dec
repz
mov
pop
(bad)
loopne
and
loopne
in
fild
clc
xlat
out
iret
mov
out
jne
inc
dec
retf
fcomp
cmp
not
push
loopne
xchg
test
sbb
cdq
mov
int3
add
xor
(bad)
test
or
pop
sbb
bound
vxorpd
or
sbb
cli
je
mov
jmp
inc
xor
(bad)
aam
aaa
lods
or
fwait
xchg
jle
adc
dec
(bad)
scas
outs
xor
rcl
in
aaa
mov
shr
ror
out
push
pusha
loope
push
push
out
mov
jle
lds
pop
aam
inc
lock
fisubr
into
dec
shl
mov
cmp
cmp
push
cmp
sub
jno
fwait
neg
jecxz
repz
add
rcr
scas
popf
pop
or
sahf
xor
push
pop
rcr
ds
stos
sub
xchg
mov
out
pop
dec
and
jmp
mov
jae
adc
loope
push
rcl
push
sbb
cmp
fst
ret
mov
mov
jae
push
push
mov
adc
jmp
clc
inc
mov
outs
out
dec
mov
rcr
sti
fidiv
out
in
xchg
and
jecxz
test
add
push
daa
push
sub
adc
rcr
in
das
stos
inc
sbb
jne
push
xchg
iret
in
ins
mov
shl
mov
lods
fimul
out
scas
retf
leave
mov
push
mov
cmp
fst
imul
mov
pop
jns
hlt
xchg
jae
pop
loopne
test
movs
mov
xor
adc
loopne
push
jg
(bad)
iret
div
push
je
pusha
pop
xor
push
pop
sbb
push
jmp
push
enter
adc
add
jp
(bad)
cmc
fist
(bad)
and
jmp
push
lds
inc
retf
mov
into
xchg
ror
inc
mov
add
mov
stos
push
clc
fimul
rcl
jge
inc
and
jmp
or
dec
push
dec
mov
inc
push
fld
mov
push
rcr
int3
mov
imul
or
add
xchg
jecxz
ret
out
aas
pop
jp
add
cmp
fsubr
inc
arpl
push
in
xchg
add
shr
pop
adc
add
mov
inc
jnp
jne
mov
pop
mov
hlt
bound
sbb
cwde
cld
and
or
sbb
ins
mov
mov
xchg
xor
add
pop
xor
lods
xchg
lods
lods
fild
call
cmp
inc
sbb
out
aam
inc
pop
cmp
xlat
inc
cs
div
enter
xor
add
mov
pop
jecxz
or
cld
mov
mov
mov
ss
or
jg
dec
pop
daa
aaa
sbb
jge
mov
dec
inc
sub
lahf
xor
outs
sbb
inc
jle
add
(bad)
push
pusha
inc
inc
add
xchg
or
sub
addr16
sbb
gs
rcl
inc
nop
xchg
sbb
ins
push
xor
xchg
add
mov
div
mov
enter
adc
leave
jns
inc
cwde
mov
or
xchg
sbb
popa
pop
stos
rcr
std
push
sub
imul
lahf
imul
mov
repz
pop
(bad)
pop
fstp
push
test
inc
dec
aam
inc
sbb
repnz
push
add
dec
rcl
dec
mov
or
mov
cld
sbb
cmp
or
mov
sbb
iret
cmp
les
movs
aad
repnz
repz
mov
add
pop
(bad)
scas
pushf
push
call
pushf
cmp
cs
jle
lds
sar
mov
dec
cmp
sub
sti
add
ror
add
mov
into
cmp
or
mov
(bad)
dec
ins
sbb
inc
aas
aaa
test
mov
clc
adc
ficomp
pop
lea
mov
das
setbe
ror
lahf
ins
add
sbb
fbstp
sub
ret
mov
mov
add
pusha
sti
xor
cmp
push
mov
mov
jle
movs
add
pop
mov
sub
dec
data16
push
mov
sbb
add
add
test
sbb
mov
in
adc
jmp
sbb
push
cmp
jmp
ja
cmp
cmp
shl
mov
rcl
repz
mov
mov
xlat
aas
cli
adc
in
out
daa
xchg
jmp
pusha
jno
(bad)
xor
shr
fnstsw
cmp
call
(bad)
clc
pusha
sti
jmp
inc
repz
cmp
sti
bound
imul
inc
cmp
data16
aam
jg
int
pop
pop
sub
add
aad
mov
jo
and
stos
mov
mov
sub
fcom
push
inc
jo
sub
pop
sbb
sbb
hlt
sbb
cs
test
hlt
call
jnp
ss
retf
ins
pop
fidiv
in
pop
add
daa
in
push
rol
es
push
jo
iret
icebp
mov
inc
fcom
(bad)
and
(bad)
sub
sub
mov
or
inc
aaa
xor
pop
stc
add
cmp
data16
xor
and
call
jecxz
imul
push
into
xchg
add
stos
sbb
xchg
lea
and
xor
inc
ret
fs
push
jp
xor
push
clc
inc
xchg
push
call
add
mov
add
cmp
pop
jo
jns
dec
pop
fwait
call
fst
out
mov
cmp
inc
jmp
cmp
test
test
adc
inc
mov
jne
mov
sbb
das
xor
scas
shl
retf
scas
sub
cmp
cmp
les
or
add
fadd
jecxz
mov
retf
hlt
inc
push
loopne
out
por
stos
test
aad
jecxz
cmp
jb
add
cmp
sub
inc
push
gs
pop
pop
mov
lock
xchg
mul
movs
pop
in
jbe
add
xor
lods
cmp
adc
shl
xchg
pop
and
jae
aam
(bad)
loopne
sub
adc
(bad)
jmp
jecxz
pop
repz
mov
dec
sahf
push
aaa
push
adc
nop
xor
push
sahf
cmp
push
mov
push
shufps
xor
mov
jae
fwait
rcr
add
fidiv
cmp
and
xchg
push
shl
push
xor
outs
shl
xchg
test
inc
bound
mov
pop
jno
mov
aas
and
sbb
or
clc
or
add
xchg
inc
add
adc
mov
cld
icebp
mov
out
inc
aas
lea
jecxz
rcr
or
daa
inc
jne
push
stc
lahf
push
imul
cs
test
cld
lods
in
in
scas
jne
sahf
jne
xchg
jmp
push
jbe
adc
data16
mov
mov
cmp
inc
loopne
cmp
mov
push
inc
inc
xchg
add
push
push
scas
adc
out
cmp
(bad)
push
pop
pop
adc
mov
repnz
leave
stos
arpl
cmp
xor
mov
loopne
and
repnz
aad
ficomp
loope
sbb
cmp
or
fsubr
mov
mov
sub
inc
imul
sti
leave
adc
neg
inc
push
imul
xchg
jo
push
lock
jb
jmp
mov
adc
inc
daa
push
add
lods
or
inc
std
mov
loopne
or
xchg
push
fcomip
popa
mov
xor
push
outs
div
pop
out
adc
loop
mov
outs
ins
or
inc
scas
jbe
test
jmp
clc
xchg
mov
test
inc
xor
sahf
jge
xor
push
inc
lahf
lods
ins
push
into
lock
cs
scas
push
push
cmp
nop
adc
adc
call
stos
retf
cmp
cli
xchg
mov
movs
inc
adc
inc
and
cmp
test
pusha
jle
fwait
or
pop
and
and
loope
push
jmp
nop
test
nop
sub
sbb
pop
mov
lahf
cmp
ret
add
cmc
and
fsub
ds
sub
out
xor
leave
add
sub
inc
stc
jl
sbb
ss
or
loop
mov
cld
push
dec
mov
aam
fnstsw
xlat
mov
mov
movs
mov
jl
cmp
jmp
clc
jl
adc
xor
and
adc
sbb
fwait
jno
or
jp
pop
jmp
mov
mov
and
sub
add
pop
inc
mov
pop
adc
sti
js
dec
and
xor
mov
mov
jmp
aad
and
(bad)
mov
sub
int
cs
jns
(bad)
inc
or
jmp
fnstsw
add
rcr
and
push
daa
xchg
jmp
lea
out
cwde
and
push
aam
jb
enter
inc
sub
xchg
pop
iret
enter
dec
push
dec
pop
lds
lds
imul
sbb
pop
xchg
inc
sbb
or
sar
pop
loope
test
push
jnp
loope
ror
mov
xor
xchg
movs
test
(bad)
pop
cdq
(bad)
xchg
sbb
in
ret
out
popa
push
leave
movs
or
jmp
sbb
mov
jae
test
push
in
(bad)
mov
test
clc
xor
xor
ds
sub
mov
neg
(bad)
rcr
imul
jmp
mov
adc
jmp
imul
push
fdivrp
mov
dec
movs
enter
outs
jmp
fnsave
pop
loop
cwde
leave
mov
sbb
mov
out
test
cmc
movs
pop
or
ret
aaa
ins
cmps
nop
pop
aam
push
xor
iret
push
xor
jp
(bad)
inc
sub
xchg
icebp
jno
mov
pop
scas
mov
bound
or
push
icebp
dec
xlat
icebp
loope
test
xchg
inc
jecxz
es
add
mov
push
inc
dec
push
xchg
mov
inc
imul
lock
jae
shl
push
sub
std
and
add
cmp
and
push
add
sub
inc
in
scas
aas
into
push
xor
sbb
pop
dec
cmps
call
in
fcom
imul
outs
mov
push
cmps
and
loope
mov
clc
fnsave
adc
sti
cld
xor
dec
add
sub
mov
mov
push
push
sub
iret
or
mov
mov
mov
ins
movs
fld
push
(bad)
adc
test
inc
mov
pop
imul
adc
std
or
call
rcr
jb
fst
xor
jmp
fisub
push
fsubr
jnp
mov
test
das
mov
callw
lds
xlat
pop
std
mov
(bad)
ins
popa
retf
mov
fistp
push
or
push
xor
inc
rol
mov
outs
dec
cdq
xor
repz
pushf
jge
mov
inc
mov
pop
js
pop
mov
cmp
addr16
mov
mov
nop
pop
popf
sti
call
shr
push
mov
dec
leave
cmps
aam
jnp
xchg
cmp
adc
rcl
add
retf
sbb
dec
outs
js
inc
int
imul
mov
push
lds
shr
shr
pop
mov
shl
cmp
jmp
pop
jnp
or
pop
daa
jmp
inc
daa
fld
push
cmp
jecxz
loopne
sub
ja
and
or
loop
push
or
jo
pop
mov
outs
sub
fcomi
nop
leave
cs
dec
aaa
in
mov
movs
inc
cmp
mov
stos
fisub
cs
adc
mov
repnz
je
into
sbb
lock
jl
jmp
(bad)
data16
xor
retf
xlat
out
sub
sub
sbb
out
and
pop
xor
test
adc
xor
inc
scas
mov
in
jp
jp
jmp
fnstsw
adc
cs
pop
stos
add
scas
xor
xchg
sbb
into
scas
shl
mov
js
sti
or
popa
xchg
ret
xchg
aad
mov
jae
pop
jmp
or
mov
cli
shr
clc
js
or
test
std
mov
add
das
pop
jge
les
aad
sbb
mov
mov
dec
into
test
in
mov
push
dec
pop
imul
sub
sti
xor
lods
push
mov
and
mov
mov
inc
sbb
cwde
or
pusha
aaa
cmp
jo
or
pop
add
bound
out
mov
xlat
pushf
mov
add
xchg
call
clc
lea
mov
mov
test
mov
sub
push
movs
mov
and
dec
imul
adc
das
outs
rcl
push
sbb
pop
or
cmp
icebp
test
(bad)
mov
aas
cwde
rol
lea
sub
push
mov
jns
jo
sub
xor
pushf
sar
mov
enter
jmp
pop
xchg
add
lds
sbb
or
cs
repz
push
mov
xchg
imul
dec
stc
adc
out
loop
ret
sub
adc
(bad)
jnp
mov
fdiv
mov
loope
sub
push
rcr
add
in
xor
or
outs
mov
jl
lock
mov
sub
cli
out
xchg
test
and
and
xchg
add
pop
push
pop
xor
fst
test
inc
xchg
out
mov
(bad)
cmp
fldcw
movs
xor
inc
addr16
pop
xchg
sub
fs
sub
test
xchg
ins
je
cwde
sub
pop
mov
mov
mov
sub
mov
nop
lock
jle
nop
mov
mov
mov
fisttp
lea
(bad)
cmp
mov
mov
adc
dec
scas
jg
aaa
fcom
ja
sbb
push
ins
xor
ja
xchg
es
scas
push
push
call
js
push
inc
or
jg
dec
fdivrp
aam
inc
pop
mov
mov
xor
and
push
cmps
jns
mov
ror
sbb
not
js
fdivr
(bad)
fucom
cmp
mov
lea
test
jne
mov
into
les
and
scas
inc
ins
jns
xor
movs
out
repnz
pop
sbb
seto
cmps
inc
push
push
es
jg
dec
dec
add
jo
ror
ret
mov
loope
pop
and
mov
jb
ss
push
cmps
sbb
cmps
jmp
xchg
out
cmp
jmp
pushf
mov
xchg
push
pop
pop
int3
lods
cmp
mul
test
mov
mov
out
repz
inc
stos
adc
sbb
mov
ret
fucomip
cmp
retf
cmc
sbb
test
clc
lock
mov
fdivr
ins
and
add
lea
cmps
clc
imul
(bad)
jno
push
cld
(bad)
(bad)
jb
push
retf
call
jmp
pop
mov
cmp
add
int
mov
fadd
sub
add
jmp
sbb
or
mov
push
inc
(bad)
icebp
inc
inc
fisttp
add
pushf
hlt
add
pop
adc
je
ds
mov
cs
jmp
and
dec
je
cmp
shl
jo
outs
fistp
cwde
ds
push
fisub
jmp
fild
scas
iret
rcl
cmps
outs
aam
inc
mov
dec
int3
or
mov
xor
cdq
xchg
mov
lods
aaa
fld
daa
xchg
daa
xchg
sti
xor
jno
inc
push
jbe
nop
or
jb
pop
out
aam
inc
push
ret
dec
add
(bad)
and
mov
and
jl
out
jbe
sub
ficomp
btr
xchg
cmps
or
std
movs
xlat
or
cmp
mov
test
inc
inc
(bad)
shr
ss
xor
sbb
pusha
jp
dec
jge
jno
mov
into
iret
pop
xchg
push
and
sbb
mov
cwde
fadd
inc
and
int
shl
leave
fwait
xor
ds
cwde
imul
call
cmp
xlat
rcr
popf
pop
cmps
and
xchg
pop
gs
jno
cli
int
mov
call
aam
cwde
(bad)
into
or
loop
(bad)
sbb
mov
fs
ins
imul
fidivr
jmp
sahf
mov
or
fisubr
or
xchg
enter
mov
inc
scas
pop
data16
push
out
push
adc
fdivr
cmp
fst
fcomp
pop
repnz
repz
loope
sti
push
xchg
in
cmp
push
or
xchg
(bad)
shr
test
inc
outs
sbb
je
mov
mov
sti
xchg
(bad)
fs
pusha
and
dec
jnp
pop
fwait
clc
adc
push
lds
fbld
call
leave
movs
stc
mov
mov
add
test
clc
in
push
mov
in
pop
movs
ds
popf
inc
mov
mov
ret
sbb
lds
sub
cmp
mov
(bad)
push
int
and
popa
push
movs
lock
pop
push
add
add
cmp
and
add
out
cmp
fdivr
push
inc
xchg
xor
add
fstp
shl
inc
jne
fst
sub
in
(bad)
shl
movs
in
fwait
adc
mov
pop
jb
sub
popa
rcl
inc
dec
push
mov
mov
and
xchg
inc
in
test
enter
jae
loope
leave
add
sbb
mov
xchg
mov
xor
das
adc
dec
mov
inc
fwait
jne
xchg
add
ins
inc
into
int3
clc
inc
cmc
mov
jg
shr
xchg
jecxz
dec
popf
pop
pushf
xlat
mov
inc
or
push
std
in
inc
outs
push
mov
popf
xchg
xlat
add
pop
clc
dec
mov
xchg
or
sub
and
adc
push
mov
dec
call
jmp
jge
sbb
les
mov
aam
jne
inc
repz
cmp
cs
mov
fadd
push
xchg
lea
(bad)
jbe
mov
add
cs
fucom
jecxz
imul
movs
inc
sub
aam
mov
fldcw
nop
and
dec
mov
jb
into
push
or
test
popf
(bad)
popf
or
add
sbb
or
cmps
sub
mov
inc
movs
push
addr16
jbe
or
adc
add
pop
mov
sub
mov
pusha
push
(bad)
ror
retf
mov
fstp
adc
out
adc
(bad)
push
mov
lea
out
repz
xchg
sbb
outs
std
adc
push
xchg
enter
jnp
enter
outs
ret
aas
mov
repnz
cwde
es
add
and
fcomp
daa
xchg
stc
mov
pop
out
pop
mov
hlt
add
adc
neg
in
ja
push
out
ret
shl
push
and
pushf
inc
iret
std
test
(bad)
mov
fstp
fst
inc
out
xor
push
clc
push
add
pushf
dec
inc
sbb
leave
enter
mov
pop
hlt
xor
test
mov
mov
loope
pop
cmp
test
and
inc
adc
aam
adc
inc
mov
add
inc
stc
nop
lea
xchg
stos
sbb
push
mov
frstor
and
fnstenv
sahf
in
add
inc
aas
inc
icebp
aad
aad
push
push
cdq
mov
or
mov
scas
lea
add
mov
add
sub
rol
pop
div
lock
mov
pop
cmp
in
jmp
clc
shl
test
stc
sub
into
cmc
jle
mov
retf
test
jno
aad
add
push
sbb
push
retf
and
fcomp
movs
adc
loop
pop
and
sub
push
mov
jb
jb
lea
call
movs
add
mov
in
adc
cmp
(bad)
dec
lahf
ror
cmp
(bad)
inc
test
mov
fist
cwde
add
cs
lds
push
xor
stos
cs
retf
nop
out
and
push
inc
or
sbb
ja
jle
loopne
pop
mov
and
rol
jb
and
dec
or
dec
in
push
cmp
mov
cmp
xchg
add
adc
jl
dec
jge
xor
mov
jp
dec
movs
add
lods
sub
nop
out
mov
xor
fnstenv
cld
stc
je
outs
lahf
sbb
add
pop
jnp
test
cmps
stos
clc
sbb
pop
push
int
sbb
push
jmp
sub
enter
(bad)
cmp
and
or
mov
lahf
and
loop
mov
jmp
sbb
jp
sub
fs
jb
adc
les
pop
clc
mov
push
sar
jne
jg
leave
push
inc
test
dec
and
cmc
test
mov
jnp
ins
pop
jno
in
pop
cli
mov
cmp
in
out
lea
out
ret
das
dec
rol
or
psubb
outs
pushf
mov
hlt
jmp
shr
mov
and
call
pop
sub
cmp
out
fcom
mov
repz
jmp
pop
bswap
int
mov
jge
stos
fnop
stos
int3
cmp
add
stc
jns
mov
mov
adc
mov
push
out
pop
inc
mov
mov
fdivr
loop
cdq
dec
lods
xchg
adc
cmc
or
out
js
jle
repz
xchg
mov
stos
into
mov
pcmpeqb
pop
push
jne
jnp
mov
repz
mov
sar
pusha
mov
mov
mov
mov
xor
test
xor
arpl
dec
in
out
mov
mov
xchg
mov
hlt
mov
jp
(bad)
sub
(bad)
xor
sub
inc
(bad)
repz
pop
mov
ret
ficomp
in
dec
jmp
sub
(bad)
push
jp
or
out
loop
push
ret
call
shl
mov
pop
cld
xchg
das
les
les
and
ficom
xchg
push
jge
pop
sbb
lea
pop
test
mov
pop
push
adc
call
cdq
call
and
jo
retf
jne
out
rol
enter
mov
fiadd
repnz
xlat
popf
les
mov
jg
and
shl
test
push
jnp
or
dec
pop
pop
add
icebp
cmp
sub
push
ret
ja
push
xchg
mov
imul
mov
pop
cli
or
adc
and
inc
call
push
jno
fisttp
aam
xchg
cmp
pushf
xor
push
ins
test
dec
mov
loope
lods
lods
outs
jg
push
jmp
pop
push
cmps
sahf
dec
cmps
(bad)
lock
pop
inc
int
fidiv
mov
addr16
or
push
and
pushf
adc
cmp
pop
repnz
pop
cmp
nop
or
push
or
pop
or
sahf
xchg
dec
sahf
jmp
outs
fwait
or
(bad)
mul
sub
cs
hlt
add
ins
sti
pop
stos
jl
jb
mov
xor
iret
and
xor
sahf
cmp
jne
or
and
mov
ss
sub
je
ds
sbb
icebp
mov
jecxz
hlt
mov
pop
sbb
pop
pop
push
mov
loop
lock
xchg
ret
daa
xchg
inc
ret
dec
idiv
pop
and
mov
in
add
fisub
loope
fcmovnb
sub
and
jmp
rcl
retf
mov
adc
in
adc
inc
mov
mov
neg
ficom
pop
popa
pop
out
fwait
loope
aas
dec
adc
addr16
pop
hlt
retf
sub
pop
inc
xchg
stos
and
or
push
jmp
loope
stos
dec
ja
sahf
adc
(bad)
pop
pop
push
jns
mov
stos
dec
push
fwait
ret
lods
or
mov
(bad)
xor
inc
int3
inc
push
(bad)
sahf
(bad)
jge
nop
call
adc
div
je
mov
lea
sbb
pop
ret
jae
sub
outs
icebp
and
popa
cwde
adc
sbb
cmp
jmp
ror
jo
and
dec
shl
ror
sahf
or
push
imul
dec
pop
mov
and
movs
or
(bad)
xchg
xchg
retf
enter
jmp
mov
sub
cmp
retf
pusha
stos
icebp
fmul
rol
inc
loop
cmc
js
push
push
cwde
stc
jb
inc
pusha
xor
test
mov
enter
xchg
jecxz
aam
xlat
aaa
mov
fdivr
sub
dec
or
and
or
xor
inc
aad
lahf
rcr
and
xchg
jle
rol
fistp
mov
sbb
mov
cs
sub
sub
push
xchg
out
test
scas
ror
mov
xchg
pop
(bad)
fsub
bnd
jle
push
test
jl
push
sub
mov
movs
stc
pop
sbb
(bad)
(bad)
pop
inc
xchg
push
mov
inc
xchg
mov
adc
mov
mov
cmp
mov
ret
test
sar
xor
cs
jle
shl
pop
fcom
clc
leave
mov
lock
jmp
add
cmp
xchg
jb
daa
scas
sub
loop
xchg
(bad)
xchg
xchg
dec
int3
pop
imul
mov
push
xlat
push
fwait
repz
pop
dec
sti
inc
xor
jl
push
jae
sbb
in
pop
les
fwait
retf
pop
mov
mov
aaa
popa
aaa
fadd
cmps
jecxz
mov
fs
fisubr
test
mov
jne
ins
lods
(bad)
sar
cdq
inc
bound
mov
jecxz
sub
mov
xchg
jno
pop
push
cmp
jo
shr
pop
push
out
cmps
das
xor
pop
inc
mov
mov
mov
or
cmp
xchg
shl
jge
scas
in
fidiv
pushf
add
aaa
loopne
shl
mov
enter
(bad)
aaa
or
jmp
imul
sti
xchg
(bad)
push
cmp
ret
mov
fistp
inc
xor
mov
out
dec
push
xor
test
xchg
inc
cmc
shl
inc
(bad)
cmp
cmp
js
jno
ins
iret
or
sbb
(bad)
sbb
lds
add
fidivr
int3
rcr
jmp
xor
inc
cmp
sub
movs
cmc
in
jecxz
mov
imul
fld
cmp
out
or
sub
sbb
(bad)
je
loope
jmp
mov
inc
ins
aaa
push
stos
mov
xor
outs
shl
lar
xor
and
inc
(bad)
push
fst
call
push
icebp
stc
adc
xor
retf
rol
sti
pop
mov
shl
ins
rcl
cmp
ins
scas
push
rcr
mov
push
and
inc
dec
fst
loop
cs
mov
out
rcl
out
shl
(bad)
cmp
lods
aas
fistp
and
lds
jo
outs
adc
aas
xchg
sbb
enter
(bad)
in
add
iret
cmps
cwde
xchg
xor
call
pushf
cmp
fs
in
cmp
or
shl
adc
add
inc
mov
rcr
leave
jo
cmc
jne
push
mov
in
push
sub
out
sbb
in
pop
lds
sar
clc
pop
push
or
mov
in
call
out
fcom
cmp
dec
je
fisttp
std
mov
sbb
mov
jmp
push
gs
sti
ret
out
aas
pusha
addr16
ds
sbb
int3
stos
call
test
daa
add
push
enter
push
ja
je
and
stc
aas
xor
mov
push
mov
popa
inc
push
and
push
push
push
in
mov
adc
sahf
push
jl
dec
xchg
cmp
shr
mov
leave
rcl
into
mov
cmp
loop
or
sub
jae
lods
jecxz
ss
jnp
push
fucom
dec
test
cmp
aas
pop
add
jo
mov
ja
lods
mov
cmp
jl
jp
jb
ds
ins
bound
cmp
js
scas
mov
loop
pop
add
aas
adc
add
cmps
ret
cli
pusha
jno
lods
fdivr
mov
es
loopne
repnz
push
pop
jne
adc
sub
cmc
sar
xor
add
fistp
lock
call
sub
popf
push
or
jnp
aaa
mov
mov
mov
stos
in
lea
or
and
cld
mov
mov
mov
movs
(bad)
pop
sbb
rol
int3
fadd
out
push
jns
aas
cld
mov
sbb
shl
test
adc
xchg
xchg
pop
cdq
mov
add
xor
adc
fild
xchg
push
popf
shr
js
cmps
pusha
in
nop
mov
mov
sti
xchg
lea
lods
mov
jne
repz
mov
jg
mov
add
or
xchg
pop
inc
cmps
cmps
cmp
or
mov
xor
xchg
xchg
cmc
scas
aam
cmp
fsubr
hlt
test
xor
pop
mov
mov
loop
inc
aad
ds
push
push
lds
cmp
ret
sbb
xor
das
sbb
cmp
ins
dec
imul
(bad)
movs
inc
and
cmp
mov
pop
pop
or
(bad)
icebp
and
mov
or
outs
shl
push
inc
clc
mov
or
leave
ss
scas
adc
push
mov
stos
out
jns
int3
pushf
inc
fcomp
in
cdq
and
inc
inc
push
jmp
xchg
sub
je
into
popa
xchg
cmp
cmp
rcr
mov
sub
(bad)
push
and
pop
cmps
add
xchg
in
sbb
or
xchg
int3
fs
pop
xor
pop
jl
jmp
sbb
adc
or
popa
movs
popf
sub
cwde
mov
mov
call
and
jg
xor
imul
sub
mov
icebp
retf
lahf
add
or
pop
loopne
inc
int
icebp
mov
fmul
xchg
movs
xor
mov
dec
mov
dec
out
inc
push
je
or
test
loop
jmp
pop
sbb
mov
ds
neg
ficom
add
push
lods
cs
or
int
mov
cli
jmp
int3
adc
mov
mov
mov
mov
js
lods
sub
hlt
retf
enter
popa
pop
adc
xchg
dec
or
adc
gs
cmp
and
mov
xor
sti
xchg
jns
popa
jle
mov
ss
movs
mov
(bad)
cmp
mov
imul
stos
mov
adc
movs
aad
xchg
push
in
imul
pusha
arpl
add
fld
mov
push
mov
adc
push
retf
(bad)
xchg
mov
imul
call
inc
or
shr
(bad)
xchg
mov
imul
arpl
sbb
loopne
sub
dec
xor
dec
out
inc
sbb
mov
lock
loop
aam
pop
jne
(bad)
ss
(bad)
pop
in
push
int3
push
fs
dec
push
mov
imul
outs
mov
movsx
and
(bad)
out
lods
cmp
in
daa
les
stos
push
outs
stc
out
sbb
inc
sbb
into
ds
aam
mov
aas
push
cdq
pop
xor
ins
jmp
fucomp
das
adc
pop
add
fdiv
jmp
sub
ficomp
test
hlt
dec
cmp
mov
fs
retf
sub
pop
inc
iret
pop
xchg
cmps
push
cmp
jmp
push
pop
mov
mov
push
into
sti
jne
inc
fmul
dec
adc
inc
xor
dec
mov
mov
fistp
ja
jg
scas
mov
adc
mov
adc
inc
adc
popa
shl
inc
pop
cmp
add
lods
lea
daa
test
xchg
sbb
fyl2xp1
mov
mov
cli
push
sti
(bad)
repnz
sar
jb
fldcw
xchg
xchg
mov
mov
dec
ror
or
add
inc
in
mov
hlt
mov
jmp
pop
or
stos
pop
dec
mov
xchg
(bad)
add
push
adc
cmp
xchg
test
or
call
mov
(bad)
push
push
push
(bad)
jns
test
fwait
scas
jmp
int
pop
mov
xor
idiv
cmp
lods
adc
pop
fwait
aas
sbb
data16
jne
xchg
xchg
jle
add
push
xor
ret
shr
cmp
out
cmp
js
adc
fidivr
inc
dec
jo
mov
clc
pop
inc
mov
push
sub
add
icebp
pop
and
out
sbb
hlt
ds
mov
sub
mov
test
out
jl
push
shl
mov
mov
mov
mov
cld
sbb
dec
inc
adc
aaa
cmp
movs
cmc
imul
shr
retf
jp
sub
add
fisub
lds
retf
addr16
dec
sbb
cwde
out
pusha
dec
psllw
addr16
arpl
ret
and
add
push
(bad)
cmp
sub
mov
mov
push
shl
xchg
mov
cmps
jne
outs
push
jmp
jg
jo
push
cs
aaa
fdiv
(bad)
icebp
and
jne
add
les
in
mov
repnz
sub
in
mov
vaddss
and
in
xchg
in
cld
sub
cmp
int
lahf
stos
cdq
iret
and
lea
push
and
mov
mov
lock
xchg
xlat
mov
push
repnz
arpl
mov
inc
ds
mov
add
inc
out
xor
xchg
inc
shl
mov
mov
adc
cmps
call
(bad)
mov
retf
mov
shl
les
inc
ret
ret
mov
xchg
rol
hlt
add
cs
cs
lock
pop
jle
daa
lds
inc
jle
inc
ss
push
mov
loop
mov
cmp
idiv
push
push
loopne
mov
cmps
xor
aam
mov
dec
popf
push
and
or
ds
sbb
daa
pop
adc
fisttp
sbb
cmp
jmp
cmp
sub
gs
xchg
je
fisub
stos
shr
in
cmp
inc
js
cmp
dec
mov
xchg
clc
push
popa
push
mov
test
ins
mov
mov
add
outs
cmp
leave
mov
es
mov
sbb
sub
ds
addr16
movs
cmp
idiv
xchg
nop
daa
mov
jge
xor
mov
gs
(bad)
jmp
inc
jle
lea
cdq
cmp
lea
dec
movs
sub
add
pop
cmp
pop
aaa
lahf
call
fs
push
sbb
test
in
push
sahf
adc
bound
aaa
in
cmp
ins
test
std
outs
push
cwde
sahf
inc
sar
add
adc
mov
adc
pop
outs
into
nop
mov
mov
cdq
(bad)
cmps
inc
inc
int3
cld
xor
in
or
shr
and
(bad)
aaa
ret
cmp
or
mov
push
popf
add
cmp
adc
jge
pop
mov
repnz
int
rcr
jle
stc
repz
or
fcomp
out
movs
(bad)
xor
scas
xchg
lock
sub
xor
xchg
inc
jecxz
jnp
cmps
not
sub
jecxz
lahf
addr16
sti
(bad)
jl
bnd
fild
out
por
adc
fs
or
push
int
inc
loope
mov
clc
popf
jno
(bad)
mov
adc
imul
xor
in
test
or
inc
mov
(bad)
cmp
mov
mov
fcmovbe
iret
mov
mov
cs
movs
push
outs
pop
adc
xchg
aad
adc
or
jecxz
pushf
push
cli
add
ja
jns
add
jns
out
pop
jo
push
pop
push
xor
lahf
loop
mov
push
jnp
popa
push
inc
push
iret
adc
jns
repnz
cmp
xor
lds
xor
retf
add
mov
jmp
loopne
add
rcl
(bad)
cmp
dec
ds
adc
jo
mov
fldcw
call
dec
add
fnsave
gs
sub
out
adc
pop
jno
sti
lods
mov
mov
dec
and
pop
jmp
dec
jo
push
jo
and
ss
mov
dec
shr
stos
xor
adc
add
push
and
xchg
stc
dec
out
jmp
mov
fidiv
cmp
mov
aad
fwait
add
mov
push
mov
aam
push
cmp
mov
push
out
outs
retf
movs
or
mov
rcl
mov
adc
lahf
icebp
ja
jns
test
jp
push
sahf
lods
push
mov
out
ins
jns
push
sti
and
sub
test
js
fwait
mov
pop
pop
ror
cmp
lods
std
movs
lahf
scas
add
push
xchg
xlat
(bad)
xor
push
inc
lods
jmp
push
out
xchg
xor
out
push
int3
xchg
and
cmps
loop
inc
es
mov
js
lock
aad
push
jno
call
sub
mov
rol
and
(bad)
(bad)
sbb
scas
mov
pop
(bad)
push
out
(bad)
adc
jbe
fwait
outs
scas
mov
dec
adc
daa
or
cld
inc
xlat
mov
xchg
jae
jp
jecxz
push
jle
fistp
scas
sbb
xlat
out
sahf
lods
ins
cmp
cmp
and
sub
and
and
aaa
xchg
jne
sub
push
ss
xor
and
pop
sub
ffree
daa
les
movs
imul
test
cwde
mov
or
mov
inc
data16
ds
adc
imul
mov
adc
shl
cmp
data16
gs
sbb
invd
push
jae
xchg
jnp
sub
imul
jge
mov
iret
sub
mov
adc
push
sbb
inc
mov
stos
sbb
mov
clc
mov
cmp
jns
fnop
clc
jp
js
push
or
or
push
push
ret
jecxz
movs
ds
sub
loope
adc
addr16
and
sbb
movs
sbb
mov
adc
mov
scas
les
pop
cmp
or
dec
ret
jmp
fimul
add
test
jnp
pop
mov
aad
push
lea
xchg
cli
add
call
das
jb
xchg
xor
dec
pop
call
inc
es
daa
fstp
adc
in
loop
cmp
jle
mov
push
fsubp
mov
pushf
in
mov
lea
movs
push
outs
int
out
xor
imul
lds
mov
or
fadd
sub
mov
cmp
pop
addr16
bound
sar
push
psubusb
les
aas
add
cmp
jmp
adc
adc
pop
jge
fdivr
dec
mov
or
(bad)
and
imul
in
fldcw
jb
cli
retf
add
fild
xchg
cmp
xor
daa
dec
rcl
pop
imul
leave
pop
pusha
and
jp
cmp
dec
push
ins
ds
into
xchg
dec
jno
movs
xchg
test
xchg
inc
das
out
scas
mov
fs
mov
pop
retf
sub
adc
or
jecxz
aas
neg
shl
push
fist
mov
pop
xchg
(bad)
ja
jp
jl
mov
iret
(bad)
out
mov
mov
cdq
rcl
mov
mov
scas
sbb
cmp
and
lods
fdivr
push
and
call
clc
daa
jecxz
fistp
lock
xchg
push
mov
stos
in
or
mov
(bad)
(bad)
fs
das
fisttp
ret
(bad)
ret
sar
lods
mov
inc
pop
add
and
fisttp
xchg
and
xor
xchg
inc
xchg
(bad)
mov
inc
cli
xchg
jecxz
pop
and
fistp
pop
mov
lea
cwde
dec
sub
add
xchg
or
jo
push
push
sub
dec
or
xchg
xchg
call
xor
inc
xor
cmp
outs
cli
jno
inc
pop
add
(bad)
mov
jo
push
dec
inc
sbb
shl
inc
xor
push
xor
jne
mov
adc
xchg
aaa
cmc
outs
xor
cmp
bound
push
ficomp
push
add
mov
add
fmul
sbb
mov
not
sahf
icebp
rol
out
(bad)
mov
xchg
cmp
xchg
dec
lods
test
sub
sbb
cmp
enter
cli
test
xlat
test
(bad)
add
jl
in
jle
outs
jmp
and
mov
cmp
shr
mov
es
dec
in
pusha
sub
repnz
adc
lea
push
cmp
ret
pushf
and
(bad)
div
and
and
inc
pop
(bad)
sub
out
call
icebp
out
sub
movs
movs
popa
pop
mov
and
adc
ficomp
stos
in
sbb
or
shl
mov
adc
mov
xchg
lea
sbb
xor
rcr
and
add
fs
or
rol
xor
repnz
jl
xchg
arpl
ja
pop
dec
sahf
shr
int
retf
bound
dec
dec
jmp
(bad)
aas
mov
test
pop
jae
xlat
jmp
sub
xor
pop
sub
stos
inc
ret
loop
in
ja
push
das
iret
in
pop
ret
loopne
dec
fst
lods
cmc
add
pop
js
nop
mov
inc
and
in
dec
inc
xchg
pop
pop
cdq
xor
push
adc
int
jmp
adc
mov
and
mov
mov
adc
mov
xchg
dec
sub
jl
jno
or
adc
cmp
mov
xchg
sub
pushf
jo
push
mov
xor
push
mov
pmulhuw
div
daa
xchg
(bad)
aas
sub
jp
dec
ret
and
retf
clc
jno
scas
mov
repnz
push
imul
mov
mul
mov
cmps
(bad)
xchg
shr
adc
sub
xchg
cld
adc
cmp
das
pop
test
lods
(bad)
retf
push
iret
sbb
movs
iret
pop
nop
jp
or
outs
xchg
push
repz
hlt
rcl
out
dec
stos
popf
inc
jge
dec
or
push
mov
lock
xchg
or
imul
push
fst
xchg
call
aam
ficom
cwde
sbb
ds
movs
mov
(bad)
imul
inc
inc
and
jl
xchg
pop
int3
loope
ja
xor
ins
push
or
push
scas
or
in
and
mov
dec
stc
iret
sub
jne
stos
pmulhuw
test
fstp
jae
xchg
jne
sbb
fnstsw
je
and
aas
pop
enter
push
inc
cmp
pop
scas
scas
inc
and
dec
add
iret
test
add
into
dec
cli
adc
sub
dec
push
repz
loope
lahf
and
add
jg
or
push
pop
jbe
pop
pop
ficomp
sbb
pop
repnz
into
adc
dec
std
cld
mov
mov
jge
inc
jp
aad
lock
jg
xor
add
cmp
mov
and
daa
dec
test
sub
pushf
test
and
or
bound
pop
dec
test
sbb
popf
sbb
nop
cmp
mov
(bad)
std
xchg
movs
fidiv
test
into
daa
push
cmps
rcr
mov
xchg
add
xchg
dec
ds
xchg
ss
addr16
jle
xchg
and
cmp
mov
cmovo
ja
jmp
ror
sub
inc
mov
outs
and
pop
push
fldln2
push
ja
mov
mov
mov
add
xchg
ja
mov
inc
fwait
cmp
cmc
stos
sbb
(bad)
xchg
inc
icebp
into
push
mov
xor
in
xchg
push
or
adc
sahf
sub
inc
retf
fild
mov
sbb
nop
(bad)
dec
jnp
mov
sub
addr16
jge
clc
sbb
mov
mov
pushf
cmc
test
or
mov
inc
cmc
ror
inc
xor
fadd
dec
jl
les
xchg
cld
mov
das
mov
sbb
mov
jmp
ja
or
dec
nop
in
call
inc
fwait
test
wrmsr
mov
es
ja
jg
stos
scas
loopne
sub
sti
sub
mov
fisub
jns
xor
mov
lahf
sbb
push
adc
mov
div
pop
or
inc
aas
jmp
mov
rol
inc
es
mov
add
mov
pop
and
leave
aam
ret
mov
mov
(bad)
stos
cdq
mov
mov
dec
dec
pop
and
push
sbb
xchg
jp
push
cmp
lods
push
movs
dec
and
mov
popf
push
dec
fistp
dec
mov
shl
cmp
mov
sub
push
cwde
jg
mov
mov
stos
adc
rcl
rcr
pushf
repz
xchg
cmp
or
xor
dec
leave
pusha
bound
(bad)
pop
mov
or
nop
mov
jp
in
repnz
fsub
inc
jae
movs
mov
add
and
(bad)
retf
aad
nop
pusha
loope
ja
jmp
lods
fucomp
outs
add
mov
ret
sti
cli
lods
int3
jb
jmp
mov
sbb
fild
push
pop
idiv
cmp
mov
(bad)
fcmovu
cli
stos
add
jecxz
sub
iret
jle
movs
jmp
mul
or
add
sub
in
pop
pusha
cli
aad
aad
add
ret
repz
inc
adc
inc
adc
bound
js
daa
and
pop
(bad)
imul
pop
push
xchg
mov
mov
rol
push
dec
iret
inc
sbb
aad
stos
push
dec
scas
xor
lds
iret
pop
fsub
push
fbld
test
call
mov
fs
loope
mov
push
mov
repz
cmp
jmp
jbe
retw
stc
stc
ret
mov
gs
sub
mov
pop
mov
stos
or
pop
into
scas
sbb
sbb
cdq
stc
addr16
jae
rol
push
sub
jb
mov
call
ret
cdq
mov
dec
sbb
test
stc
fstp
mov
in
loop
xor
imul
fild
jl
in
mov
push
pop
mov
mov
mov
pushf
dec
out
sahf
add
cmp
cmp
sub
aas
mov
dec
pop
leavew
sub
jo
scas
push
and
and
retf
mov
pop
dec
movs
ret
adc
mov
add
loop
mov
shl
jmp
in
dec
retf
fstp
aam
scas
cmp
in
sub
cmc
(bad)
fistp
push
cmps
jnp
xchg
hlt
(bad)
mov
mov
aad
cmp
int3
jmp
cmc
and
inc
cmc
mov
pop
imul
div
mov
mov
lods
pop
mov
out
jge
mov
bound
jmp
aas
cli
mov
data16
or
cld
int
xor
cs
or
ja
rcl
pop
pop
call
sub
or
stc
adc
bnd
rcr
dec
xchg
inc
mov
cmps
nop
call
gs
std
adc
inc
das
test
jo
xor
lods
fs
fldcw
fcmovb
cwde
into
mov
jp
cli
jnp
mov
jg
pop
sar
in
cmps
(bad)
mov
sbb
into
pop
(bad)
addr16
ins
fistp
cmps
in
retf
dec
fstp
add
mov
data16
sub
ins
sahf
mov
jmp
imul
mov
das
sti
mov
sub
xor
sbb
xor
push
or
xchg
xchg
mov
mov
add
call
sub
dec
pusha
inc
enter
popa
jmp
(bad)
mov
dec
mov
pop
xor
sub
mov
sub
push
clc
mov
xchg
or
and
adc
xor
pop
mov
add
iret
jl
js
lock
add
add
mov
retf
in
inc
inc
(bad)
ret
lock
call
jo
and
rcr
mov
adc
jp
repz
aad
pop
xchg
and
mov
int
push
jns
or
mov
jp
daa
adc
fs
movs
adc
enter
stos
push
jo
jg
jo
dec
outs
and
mov
xchg
push
xor
inc
jle
adc
xchg
sub
jmp
lods
sub
mov
(bad)
aad
ret
xor
mov
fsub
add
in
mov
push
sahf
aaa
cmp
stos
mov
neg
test
cs
adc
ins
fsubrp
fisubr
mov
pop
inc
mov
mov
cmps
inc
mov
js
cmp
retf
pop
aaa
mov
fst
jb
repz
push
minps
icebp
push
sub
xchg
push
call
(bad)
jle
(bad)
aam
and
xchg
push
lahf
cli
cs
fucomip
mov
test
(bad)
stos
lods
push
xchg
daa
mov
nop
cmps
fsub
adc
mov
iret
cli
popf
je
fwait
pop
xor
arpl
mov
dec
loope
mov
add
sbb
aas
stos
mov
xor
mov
or
sub
cdq
std
stc
ja
adc
pop
fcom
jo
adc
int
lahf
int3
je
sbb
sbb
mov
cmp
cmp
pop
push
iret
hlt
pop
in
push
add
xor
push
cli
and
imul
inc
mov
and
sub
or
loopne
xchg
fld
sub
imul
push
clc
lods
inc
(bad)
jbe
adc
sbb
rol
jne
jle
pop
and
out
push
xchg
push
inc
fsub
add
push
xchg
sbb
inc
outs
(bad)
call
cmc
push
pop
mov
lea
imul
lahf
xchg
cli
and
rcl
jb
stc
xchg
dec
je
in
in
test
into
into
retf
sti
xchg
(bad)
in
cmp
or
push
jbe
aad
xchg
aaa
push
xchg
loop
push
inc
lock
jmp
les
fwait
sub
xor
mov
push
push
(bad)
out
cmp
repz
retf
xchg
xchg
movs
and
fisttp
aad
js
out
scas
push
xchg
inc
pop
jmp
ror
in
inc
mov
lds
dec
mov
call
out
movs
and
sub
inc
dec
jl
pop
mov
adc
cs
daa
fst
jg
cmp
push
leave
cmp
mov
pop
add
cdq
adc
xchg
mov
imul
mov
pop
jnp
adc
ja
cmp
repnz
sbb
in
sub
(bad)
lods
adc
dec
lods
adc
jo
std
push
mov
add
adc
in
ss
jge
je
mov
sub
pop
arpl
shr
push
data16
fucomip
cmp
mov
sar
pop
cmc
add
cmp
scas
mov
test
push
ret
jne
or
imul
loopne
and
pcmpeqd
out
(bad)
sbb
jmp
fldcw
push
dec
sub
not
fs
xor
movs
push
mov
out
ret
mov
retf
cmp
xor
fwait
ins
out
sub
retf
fisttp
mov
adc
(bad)
pop
adc
(bad)
mov
call
jg
aad
pop
cmps
test
xchg
shl
sti
jbe
push
pop
mov
inc
cmp
gs
or
push
push
mov
call
mov
and
or
icebp
push
or
mov
test
mov
sub
test
sbb
dec
xchg
or
mov
dec
push
or
cmc
popf
xor
mov
mov
movs
(bad)
repz
sub
cmp
cmc
jge
or
jecxz
lods
pusha
adc
mov
fwait
inc
cmps
retf
in
hlt
inc
adc
rol
lahf
mov
inc
lahf
fisubr
cdq
aaa
std
sub
je
or
nop
mov
cld
aaa
ret
pop
push
fsubrp
xchg
sbb
and
into
dec
mov
add
mov
(bad)
push
jp
jne
mov
inc
popf
in
fstp
jg
rol
xchg
rcl
dec
push
lds
sbb
call
ins
fwait
add
dec
ja
enter
jp
xchg
test
and
and
fwait
icebp
cmp
inc
xchg
outs
out
fs
lea
xor
test
imul
or
lods
inc
popa
cmp
std
jge
aam
leave
addr16
push
ds
js
push
call
jne
pop
dec
dec
cs
sub
fcmovnu
xchg
ds
add
inc
in
or
mov
push
adc
mov
push
out
mov
sub
das
out
call
jge
rcl
pop
daa
cmp
sub
xchg
push
mov
fwait
xor
and
movs
xchg
jo
mov
inc
pop
aas
mov
add
mov
pusha
ss
pop
fcomp
ds
jae
xchg
scas
aaa
shl
xor
fnsave
stc
push
mov
xchg
mov
push
std
mov
mov
inc
int
jmp
rol
sub
jmp
out
pop
jae
out
dec
and
mov
mov
inc
and
push
addr16
mov
jge
sti
sti
pop
pop
sbb
mov
retf
adc
daa
inc
out
xlat
jp
lods
clc
and
or
adc
cdq
sub
sbb
std
popf
fwait
(bad)
sub
or
ds
test
leave
popa
inc
or
popf
xor
jo
outs
inc
ss
xchg
dec
mov
ds
mov
push
es
cmp
fistp
cmps
pop
int3
jne
ja
mov
add
inc
loope
inc
push
mov
rcl
ror
js
add
mov
outs
push
sbb
stos
retf
mov
pop
add
data16
fst
scas
daa
pusha
mov
adc
add
or
push
fs
repz
arpl
and
sub
pop
test
into
call
sub
(bad)
mov
aad
retf
ret
dec
jbe
ja
or
lock
test
sub
es
rcr
mov
sub
pop
sbb
out
cmp
sbb
stc
jecxz
adc
pop
xchg
adc
call
ins
sub
jg
mov
mov
lods
ficom
sbb
ss
cmc
popf
mov
test
pop
les
inc
leave
cmp
sbb
push
fucomip
jns
outs
xchg
(bad)
fdiv
adc
in
sub
outs
test
div
cmp
cmp
inc
mov
push
push
repz
shl
jno
pop
in
ret
xor
into
mov
clc
xor
jmp
cdq
mov
push
adc
push
add
mov
mov
leave
mov
stos
sub
push
add
xor
lea
push
mov
das
test
push
adc
push
(bad)
pop
push
mov
cmp
idiv
sar
push
xor
imul
add
aas
mov
cmps
out
pop
xor
cmps
fucomp
outs
test
pusha
sbb
mov
inc
test
mov
loope
(bad)
xor
cmps
test
xchg
pop
add
gs
arpl
dec
xchg
mov
addr16
mov
add
cmp
pop
daa
fisttp
and
sbb
out
and
mov
cli
push
out
gs
ror
xor
adc
ins
or
mov
push
sub
adc
imul
repnz
sbb
pop
mov
stos
and
or
es
loopne
out
in
sbb
fisttp
out
bound
or
test
mov
clc
lahf
inc
arpl
mov
shr
and
(bad)
addr16
pop
push
mov
(bad)
and
add
cmp
dec
(bad)
(bad)
jl
jns
(bad)
pop
int
test
int3
movs
int
push
es
mov
inc
lea
lahf
push
adc
ss
ins
cwde
aas
xlat
stos
lods
cs
sahf
ins
les
(bad)
ins
adc
push
sbb
adc
pop
push
cmp
jno
ds
aas
inc
dec
es
in
adc
imul
pop
and
inc
scas
and
xchg
stos
jg
push
or
aaa
pop
iret
sub
ror
pop
inc
aam
and
retf
cmps
jge
push
add
aas
xchg
mov
sbb
scas
iret
xor
movs
fnstsw
lock
in
mov
popa
mov
push
fsub
lods
cmp
(bad)
shl
rcr
pop
xor
pop
add
(bad)
mov
cmp
loope
xor
fwait
pop
pop
push
fld
in
inc
xchg
arpl
mov
or
xchg
mov
inc
mov
jo
jo
outs
(bad)
test
mov
mov
aas
(bad)
sbb
loopne
hlt
push
and
cmc
push
push
or
inc
lea
jne
mov
aaa
or
push
ds
cmp
push
out
mov
scas
stos
sub
push
adc
(bad)
adc
mov
jmp
push
mov
cmp
mov
adc
jp
mov
or
or
cmp
mov
push
hlt
inc
int
ret
xor
jmp
sahf
pop
mov
lods
adc
sub
dec
push
lea
imul
cli
icebp
cs
repz
data16
aaa
inc
and
or
js
xor
pop
je
adc
mov
mov
dec
pop
cmp
jno
sub
cmp
and
mov
cmp
fcomp
adc
aad
push
xchg
stos
dec
jo
dec
xchg
xor
popf
add
mov
xchg
sub
hlt
les
lds
inc
vpand
sub
dec
mov
sub
push
into
inc
clc
outs
into
not
inc
das
adc
fcom
icebp
mov
push
sbb
dec
pop
nop
es
(bad)
push
lock
jbe
test
or
cdq
gs
add
dec
jnp
mov
jg
fist
xchg
aas
aam
jmp
inc
push
push
scas
xchg
lea
mov
lods
out
idiv
or
mov
in
fwait
sub
xchg
sub
nop
xchg
cli
leave
xchg
imul
pop
test
fs
mov
xor
stc
cli
outs
mov
out
jmp
push
enter
popa
sbb
and
inc
push
shl
push
xor
test
out
popa
add
je
sub
sahf
movs
enter
mov
mov
adc
push
jg
pop
xor
shl
ds
push
mov
iret
leave
push
nop
push
je
ins
mov
data16
sub
adc
xchg
out
dec
cld
pop
jecxz
jge
fisubr
xchg
repz
pusha
xchg
inc
bound
cmp
adc
in
add
enter
mov
adc
sub
jl
fcomip
call
into
sub
pop
sub
int
and
repz
cmp
sub
push
and
mov
xchg
aas
inc
(bad)
sbb
inc
cmp
jmp
fstp
js
mov
(bad)
imul
add
inc
pop
cdq
es
popf
stc
push
int
js
idiv
xor
dec
daa
les
rcl
xchg
add
jg
xor
add
jbe
mov
in
(bad)
cs
jp
push
call
mov
pushf
mov
inc
add
idiv
mov
mov
cmc
call
out
loope
adc
popa
jnp
or
jmp
push
inc
arpl
mov
popf
cs
or
movs
xchg
jge
jge
pop
outs
call
ret
out
sub
(bad)
pop
ret
lods
add
int3
shld
retf
imul
add
mov
sub
cmp
loopne
mov
or
movs
jp
lds
lods
sti
lahf
iret
xlat
retf
pop
dec
mov
xor
mov
pusha
and
and
(bad)
(bad)
test
mov
sahf
inc
sbb
mov
icebp
push
stos
inc
ja
jb
mov
aam
mov
xchg
fcmovb
xchg
adc
lods
cmp
scas
shr
arpl
lea
into
jae
sbb
add
and
xor
call
cwde
push
push
loope
imul
mov
mul
js
cdq
cmps
push
mov
mov
mov
enter
sbb
and
js
pop
pop
ds
sar
xchg
fcom
(bad)
repz
jg
mov
inc
int
aam
mov
cmp
mov
sbb
sub
or
lea
or
push
rol
call
mov
mov
scas
inc
push
or
or
or
or
ror
je
jbe
push
fist
xchg
jg
rcr
cmp
call
jp
add
or
add
es
xchg
leave
aaa
sbb
mov
or
dec
repz
push
inc
out
pop
adc
fstp
les
fimul
enter
shr
fild
jae
sbb
and
sub
xchg
sbb
push
mov
pop
mov
and
cdq
jle
jp
stos
mul
into
inc
push
scas
iret
pop
dec
push
dec
sbb
imul
in
xchg
xor
rcr
sbb
arpl
pop
imul
inc
mov
lods
leave
xchg
fcomp
pop
push
fs
xor
out
mov
jecxz
inc
mov
sub
and
mov
cmc
movs
cmp
dec
cmc
scas
bound
ret
cmp
jne
test
pop
or
adc
(bad)
ins
mov
repz
cld
pop
adc
mov
jnp
in
sbb
pop
test
or
pop
test
jb
jl
in
mov
and
and
dec
and
fsubr
es
data16
pop
add
cs
jb
inc
cmp
pop
push
jne
and
add
cmp
(bad)
into
inc
cmc
xor
mov
scas
mov
movs
adc
sub
mov
fadd
adc
push
ficomp
or
les
outs
ror
fidivr
call
inc
and
inc
stc
retf
test
hlt
mov
fidivr
adc
jg
sub
mov
dec
in
jge
dec
jmp
rol
loop
sub
jns
jle
fsub
movaps
or
sub
sub
dec
mov
inc
das
clc
push
js
popa
xchg
into
fs
pop
mov
cli
ss
xchg
jae
ds
xor
mov
cmps
addr16
push
xchg
(bad)
cli
push
outs
push
push
jnp
movs
cmp
clc
inc
ficom
dec
ret
jnp
test
data16
adc
neg
call
or
aad
dec
call
jb
xor
pusha
(bad)
pop
pop
jmp
sbb
lods
pop
in
cld
stos
xchg
fdivr
cmp
outs
jge
(bad)
scas
pushf
stc
adc
dec
ret
pop
sbb
pop
pusha
sub
aaa
pusha
mov
sbb
dec
shl
cli
sti
mov
cmp
pop
inc
sbb
cs
pushf
pop
and
adc
inc
stos
fscale
arpl
jno
lods
mov
mov
repz
or
push
out
sub
xchg
push
enter
push
cdq
iret
leave
js
or
ins
inc
jle
jmp
popa
pusha
rol
sub
adc
stc
movs
xchg
dec
push
hlt
out
xchg
sub
xchg
(bad)
aam
pminub
adc
mov
push
or
repz
call
push
fldenv
std
scas
lods
retf
or
pop
icebp
cld
adc
dec
cs
push
pop
cwde
or
xor
imul
adc
sar
and
in
push
clc
test
xor
adc
xchg
sar
cdq
jge
mov
cmp
fnsave
cli
rcr
pop
xchg
gs
imul
xchg
sub
pop
or
and
add
mov
loopne
push
push
sbb
sbb
sub
mov
push
sahf
inc
sbb
ins
dec
sub
stos
pop
mov
bound
jae
ja
xor
data16
jg
in
in
outs
pop
mov
add
xor
and
addr16
pushf
popf
pop
data16
cmps
in
jmp
mov
push
call
clc
jge
push
dec
in
addr16
lds
fs
sbb
iret
stos
add
(bad)
sbb
pop
(bad)
not
and
push
mov
je
inc
push
jno
les
or
xchg
sub
add
cmp
mov
icebp
hlt
fld
jbe
jle
stos
imul
(bad)
out
test
loope
pop
pusha
xchg
in
push
fdivrp
rol
jmp
inc
mov
push
cli
jne
aam
mov
add
sbb
or
push
enter
and
adc
add
adc
call
or
out
leave
sub
inc
jae
(bad)
push
sub
mov
xchg
ss
xadd
push
inc
push
pop
ja
adc
cmps
cs
sub
mov
popa
call
out
arpl
lods
jmp
popa
jmp
scas
mov
dec
je
adc
sbb
mov
add
dec
fisttp
dec
cmp
xor
push
cdq
and
push
addr16
icebp
fcmovnbe
inc
jne
retf
add
mov
sub
test
test
fs
iret
aaa
cmps
mov
add
leave
jge
and
jno
cmp
out
pop
scas
iret
outs
cmp
dec
loope
jge
cmp
sub
push
sub
ins
mov
xchg
xchg
pop
stc
hlt
jns
push
pusha
push
xchg
xor
mov
pop
or
push
xchg
or
sbb
push
call
sbb
xchg
nop
and
ret
dec
mov
mov
xchg
shl
dec
dec
test
addr16
and
(bad)
jge
mov
pusha
(bad)
in
pop
pop
pop
inc
das
adc
in
shr
xchg
mov
xlat
adc
retf
imul
inc
cmps
pop
icebp
movs
pop
clc
sbb
mov
mov
icebp
out
inc
cs
in
loopne
(bad)
test
mov
fild
xor
adc
es
(bad)
jg
jge
mov
push
jp
pushf
fldcw
call
std
iret
xchg
add
push
rcl
jno
jl
and
test
and
push
stos
fs
fisubr
xor
mov
mov
xor
icebp
sar
(bad)
jae
ds
and
call
mov
jae
mov
in
adc
mov
and
xchg
push
dec
lds
lods
pop
jne
jne
sub
movs
dec
sub
adc
sub
test
shl
adc
sub
push
mov
mov
add
sbb
xlat
cmp
adc
popf
iret
(bad)
xlat
cmp
jmp
cmp
jmp
jmp
xor
push
test
jecxz
dec
pop
dec
pushf
xchg
mov
ret
rcl
push
jmp
int
sbb
enter
lahf
cmp
fwait
mov
cmps
jb
popf
dec
retf
pop
cwde
js
pop
cmp
sbb
out
lea
test
inc
and
dec
test
cwde
(bad)
retf
imul
xchg
mov
movs
out
addr16
push
mov
inc
ret
and
jbe
cmps
wbinvd
test
fiadd
cli
pop
add
mov
xchg
idiv
pop
sbb
add
(bad)
(bad)
(bad)
out
mov
in
dec
xor
rol
lea
lds
push
in
push
fstp
imul
fs
in
mov
mov
xor
call
dec
xchg
(bad)
inc
dec
(bad)
mov
(bad)
in
stos
stc
jne
je
jg
sar
or
lock
cwde
leave
icebp
pushf
add
mov
xchg
jno
movs
jl
xchg
aas
push
pop
xchg
push
repz
and
pop
movq
and
pop
push
ins
loop
lahf
mov
in
sub
nop
xchg
leave
loopne
sub
std
rcr
pop
inc
xchg
jmp
clc
cmp
mov
aaa
rcr
cli
mov
xor
mov
mov
mov
dec
imul
push
movs
je
push
and
ret
inc
mov
mov
pop
out
mov
nop
sbb
mov
test
and
pop
mov
jge
mov
mov
dec
icebp
clc
outs
pushf
sbb
cmp
cli
dec
xchg
inc
sbb
jbe
adc
and
dec
add
cwde
bnd
xchg
sub
stos
cmc
lock
clc
mov
daa
cmp
int
sbb
mov
daa
adc
fcmovnu
iret
xchg
jmp
ss
or
clc
lock
xchg
and
ret
and
jmp
and
mov
jl
xchg
xor
call
xor
call
es
js
jne
dec
sbb
rol
daa
loop
div
gs
je
dec
xor
cli
dec
inc
or
pop
lahf
mov
inc
mov
popa
cld
xchg
push
and
or
cmps
push
in
aaa
in
inc
jecxz
(bad)
call
push
es
popa
fld
ret
outs
sub
mov
call
xchg
xor
mov
pop
cmp
sar
pusha
mov
scas
push
adc
test
cmp
cwde
mov
mov
jecxz
add
hlt
pop
mov
shl
jns
sub
xchg
dec
idiv
stc
repz
test
xor
pushf
cmp
xchg
adc
lahf
aas
inc
std
pusha
and
sbb
add
aad
mov
call
shl
mov
(bad)
retf
out
dec
shl
push
inc
cli
adc
inc
pop
and
je
mov
lahf
xchg
pushf
jb
sbb
xchg
sti
out
sub
cmp
sbb
cs
out
push
xor
cmp
shl
ins
adc
ins
xor
adc
cs
and
aas
or
leave
mov
cmp
inc
(bad)
aas
mov
out
movs
jp
sub
jae
dec
movs
jp
pop
out
pushf
sub
bndstx
mov
inc
dec
pop
jmp
mov
cdq
add
dec
jecxz
adc
pop
dec
mov
cdq
mov
ror
ja
and
(bad)
ror
xchg
adc
rcl
cmps
imul
add
sbb
cmp
xchg
sub
jns
mov
fcomp
clc
or
cs
add
or
test
lods
arpl
fild
in
js
adc
pop
dec
icebp
out
fucomi
fidivr
test
pusha
jo
cmp
or
movs
adc
dec
pop
dec
and
pop
ja
and
sbb
or
xchg
pop
pop
adc
imul
push
cmp
push
and
imul
or
int
das
gs
data16
repnz
add
sti
rcr
sbb
test
mov
xor
jge
fadd
mov
xchg
push
jmp
or
imul
fcmove
loope
add
das
and
xchg
inc
and
pop
push
cmps
loop
xchg
ds
push
inc
nop
call
jmp
xchg
mov
mov
mov
inc
cmp
bound
xchg
aam
ins
loopne
lods
dec
ret
aaa
fs
(bad)
xor
fcmovb
test
mov
pop
test
in
xor
mov
lahf
ja
mov
mov
sbb
xor
scas
in
pop
retf
xchg
nop
call
ds
aam
stc
add
aas
into
ins
lods
sub
mov
inc
mov
bnd
out
adc
div
add
jge
cdq
mov
fbld
pop
call
mov
outs
sub
cmps
mov
add
adc
(bad)
fcomip
mov
in
mov
mov
(bad)
(bad)
or
in
pop
je
pop
mov
mov
push
je
jle
outs
(bad)
(bad)
lock
pushf
inc
data16
fdiv
push
cwde
imul
fbld
das
dec
dec
mov
push
add
mov
xor
imul
mov
jae
xchg
scas
stos
shl
test
pop
push
dec
xchg
ja
adc
lahf
mov
xor
lock
pop
or
mov
and
out
mov
xchg
and
xchg
and
les
iret
cmp
add
jb
xor
adc
int3
ror
dec
xor
xor
sti
fdivr
and
scas
(bad)
(bad)
ret
mov
mov
cmp
nop
push
leave
fistp
in
jge
aas
pop
test
arpl
add
jnp
and
dec
and
inc
out
lock
pop
ror
movs
jmp
xchg
sub
fldcw
mov
cmp
sar
jge
repz
repnz
add
jns
movs
or
shl
mov
add
ins
cmc
dec
enter
and
mov
(bad)
or
or
aam
cmp
std
rcl
push
dec
mov
mov
xor
xchg
call
dec
dec
adc
loopne
jb
int
xor
xor
mov
movs
mov
sub
(bad)
xor
fsubr
sub
jbe
cdq
cdq
clc
cmp
les
cmp
jo
cmp
aaa
jl
in
mov
xlat
jle
cmp
js
test
not
xchg
mov
ficomp
ret
aad
cmp
add
test
ficom
xchg
out
push
mov
cli
pop
lock
or
xchg
mov
push
(bad)
or
jno
stos
xor
or
loope
cwde
inc
add
push
push
push
jle
mov
lock
push
mov
jmp
sbb
jo
out
repz
bnd
mov
aad
cli
dec
dec
pop
pop
xor
sar
cmp
hlt
dec
fld
and
aad
add
add
jae
test
inc
in
enter
aam
shl
pop
(bad)
stos
push
ror
cmp
shl
and
inc
fisttp
add
pop
and
data16
xor
or
xchg
mov
jle
jo
dec
and
es
xor
xor
mov
test
sbb
mov
in
add
dec
lods
cld
xchg
leave
scas
jmp
dec
add
inc
lods
mov
mov
movs
popf
mov
dec
in
adc
mov
sub
push
xchg
pushf
ins
add
in
or
dec
fistp
test
in
cmp
mov
test
scas
out
xor
stos
dec
call
cmp
jmp
add
pop
lock
bound
and
mov
adc
fdivr
xchg
retf
mov
sub
test
sbb
sub
jmp
icebp
or
sbb
mov
test
out
mov
mov
mov
mov
push
xchg
les
neg
stc
xchg
or
mov
test
add
xor
push
and
jmp
or
jne
mov
bound
pop
loopne
or
inc
push
pop
push
mov
cwde
mov
mov
jb
vmovapd
mov
sbb
das
fs
dec
adc
pusha
sbb
sub
dec
xor
pop
mov
int3
fstp
and
jne
loopne
add
xchg
pop
xchg
wbinvd
jge
push
mov
cmp
aaa
test
lahf
pop
out
inc
inc
cmps
icebp
call
out
lds
mov
lods
push
mov
add
and
aam
sub
(bad)
dec
lods
les
adc
(bad)
sbb
jmp
(bad)
jecxz
mov
push
sbb
or
push
inc
mul
cmp
dec
in
gs
loope
(bad)
loopne
outs
std
sbb
jno
(bad)
jbe
ret
int3
push
mov
add
retf
sbb
jg
lods
sbb
fmul
xor
push
jmp
add
sbb
stos
pop
xchg
xor
ror
pushf
pushf
rol
mov
mov
jnp
sub
loope
rol
movs
cmpxchg
popf
lods
cmps
mov
inc
loopne
pop
sub
fbld
cmp
pop
sbb
nop
fidiv
mov
sahf
js
pop
aas
jge
pop
cmc
ror
cli
cs
add
and
cmp
sub
mov
mov
adc
shl
xor
test
add
test
or
sub
xchg
sbb
je
mov
jnp
or
push
mov
inc
adc
push
jmp
cmp
(bad)
jp
pop
cmp
or
in
and
jnp
pushf
jno
xchg
add
stos
arpl
xchg
shr
push
pusha
and
mov
jae
mov
sub
bnd
stos
push
xchg
fcomp
add
push
jnp
inc
into
or
lock
and
add
jmp
xchg
mov
scas
or
fwait
dec
xor
push
loop
nop
test
mov
(bad)
imul
mov
push
bound
adc
fs
clc
adc
call
je
xor
or
retf
retf
mov
cmps
pop
js
xor
fcomi
les
mov
push
pop
sub
rcl
and
and
and
mov
mov
mov
aas
popa
and
pop
xor
call
imul
cwde
in
int3
mov
push
xchg
imul
xchg
mov
mov
jg
movs
icebp
jmp
xchg
cmp
fs
shr
add
(bad)
sti
fidivr
add
sbb
scas
mov
repz
or
movs
xlat
cmc
daa
arpl
int3
aad
inc
popa
out
les
dec
sbb
push
jns
in
adc
inc
mov
jo
add
in
call
sti
xor
sub
and
push
scas
jne
retf
push
jo
dec
ds
cdq
test
jns
lods
ss
pop
fcomp
mov
add
xchg
xchg
xchg
jp
jo
dec
jb
add
add
sub
jns
test
outs
into
pop
pop
lds
imul
mov
les
adc
jne
popa
shl
pop
repnz
aam
fisttp
and
xchg
idiv
pop
(bad)
dec
gs
jl
push
rcl
outs
dec
cmp
sub
stos
xchg
aam
mov
fsubr
daa
mov
push
inc
inc
add
adc
cli
clc
lods
xor
jmp
pop
loopne
xchg
fwait
cmps
(bad)
(bad)
jnp
mov
sti
add
test
pop
movs
leave
add
or
inc
mov
addr16
inc
sbb
adc
sbb
daa
enter
mov
repnz
push
and
xor
xchg
push
aaa
loopne
jbe
mov
addr16
mov
or
sbb
mov
loop
adc
and
sbb
cmp
push
jbe
(bad)
mov
sub
scas
mov
(bad)
loop
jle
fmulp
addr16
leave
sbb
push
sti
scas
jle
mov
add
fst
imul
cmp
push
popf
and
mov
and
adc
mov
jmp
xor
and
movs
aad
sahf
xor
(bad)
imul
idiv
mov
mov
call
in
shl
ja
cmps
mov
aam
inc
sbb
cmp
or
or
sub
cmp
jle
shl
call
repz
mov
mov
cmp
fs
in
dec
xchg
ins
cmc
inc
pushf
mov
into
cld
xor
shr
mov
or
loope
out
inc
sbb
jns
xor
sbb
hlt
pop
jg
in
div
push
or
js
mov
pop
cmps
push
adc
retf
dec
adc
add
mov
jmp
xlat
cmps
imul
mov
jecxz
jne
jne
jmp
sti
(bad)
stos
push
outs
test
out
adc
into
and
adc
dec
clc
mov
rol
sub
pop
daa
js
arpl
mov
and
sub
es
xlat
ret
mov
leave
mov
sub
pop
push
das
in
pop
(bad)
mov
add
pusha
imul
test
add
std
sbb
addr16
cmp
maxps
scas
jne
movs
push
fisubr
adc
out
bound
sub
repnz
push
mov
loop
jmp
adc
add
jne
cmps
add
dec
call
fisttp
mov
repz
xchg
cld
cmp
outs
push
(bad)
loopne
pop
jnp
add
data16
push
mov
fild
dec
inc
scas
rcl
ja
push
or
inc
mov
xlat
test
jle
inc
mov
ficom
pop
jg
test
rol
in
les
mov
jle
adc
pop
pop
cmc
mov
mov
fld
mov
sbb
mov
out
cmp
push
push
dec
ja
ror
imul
aaa
push
xlat
sub
add
cmp
dec
xchg
xor
mov
push
and
cs
sahf
and
push
xlat
inc
std
popa
dec
outs
mov
cmps
xor
sub
leave
xchg
dec
out
xchg
xlat
in
retf
hlt
cwde
jns
mov
xchg
ds
and
jmp
dec
es
sti
pop
out
aaa
(bad)
retf
addr16
jp
add
cmp
jns
sbb
fpatan
(bad)
iret
sbb
xchg
jmp
gs
push
pusha
xor
cmp
ins
jnp
inc
and
jp
mov
jnp
ins
sub
test
cmc
or
gs
jno
push
add
loop
xchg
push
pop
cmp
adc
inc
jg
(bad)
lods
mov
cmp
pushf
ror
or
sbb
(bad)
rcl
test
arpl
addr16
inc
aad
cmp
push
shr
in
inc
dec
(bad)
add
lahf
pop
js
mov
sti
sti
xchg
cmp
test
addr16
cmp
xchg
add
cli
int3
(bad)
frstor
jb
jge
aam
out
mov
loop
and
cmp
push
cmp
jae
jns
or
add
push
and
sub
or
fstp
or
test
rcr
jge
fwait
xchg
sub
sahf
xchg
imul
and
fist
jmp
in
or
ror
cmp
sar
sbb
xchg
mov
popf
mov
rol
or
test
lock
mov
into
or
xchg
add
and
or
arpl
(bad)
sub
test
push
xor
pop
xchg
jns
into
cmps
stos
mov
ja
rol
fidiv
inc
mov
je
mov
(bad)
aas
adc
mov
xchg
rol
je
mov
fimul
rol
xchg
pop
dec
mov
mov
jae
scas
mov
mov
shr
out
in
xchg
push
mov
mov
sbb
or
in
test
ffree
(bad)
mov
aad
outs
jecxz
push
cmc
inc
fwait
pop
cs
xor
idiv
scas
sub
xor
ds
jo
ds
push
enter
repz
imul
mov
cmp
retf
std
ds
and
data16
mov
push
mov
inc
(bad)
mov
pop
xor
inc
in
(bad)
popa
fdiv
and
repz
dec
je
mov
push
ret
stos
sub
addr16
out
retf
xchg
pop
push
xchg
lds
gs
push
loope
sbb
movs
out
cmp
ret
test
jbe
in
cdq
aam
test
jno
pop
jne
test
ins
(bad)
xchg
out
out
mov
mov
repz
mov
and
arpl
sub
fwait
inc
shr
pop
sbb
xor
push
fs
xchg
stos
push
jbe
mov
or
and
(bad)
adc
loope
addr16
xchg
mov
dec
fmul
int
xor
xchg
mov
loope
push
jl
dec
sub
sbb
loop
adc
adc
pop
(bad)
mov
pop
sbb
dec
lahf
sbb
or
dec
leave
mov
in
mov
rol
aad
retf
(bad)
sbb
pop
dec
jp
arpl
gs
mov
pop
lea
mov
mov
push
jne
dec
iret
mov
and
or
stos
push
or
sar
xor
jmp
push
ss
pop
add
mov
pop
aaa
outs
lahf
out
xchg
ret
sub
mov
add
stc
pop
sahf
and
jl
or
call
and
cmc
sub
mov
dec
clc
xor
mov
push
inc
loope
push
sbb
int
and
iret
add
loopne
xchg
stos
push
shr
ins
in
xor
cmps
rcl
pop
jmp
push
mov
(bad)
shl
ins
mov
and
sbb
and
lods
inc
out
xlat
and
mov
add
scas
sub
xor
int3
(bad)
jne
xchg
and
icebp
out
mov
jb
jmp
xor
sub
out
cmp
bound
mov
inc
inc
out
ins
pop
repz
push
push
jmp
xor
pop
pop
cmp
mov
push
in
push
sub
jmp
mul
fwait
ret
rcl
es
cmp
push
or
test
fnstsw
outs
jmp
les
mov
adc
repz
jle
sub
adc
call
lock
scas
aam
scas
dec
stc
es
jg
daa
pop
adc
test
outs
mov
aam
jge
jns
lods
or
sahf
jl
push
data16
xor
sbb
stos
addr16
or
loop
std
xchg
sub
add
sar
std
mov
push
ja
and
mov
cmp
mov
mov
loopne
pop
mov
out
enter
mov
sti
inc
shl
push
leave
leave
pop
aad
xchg
push
cmp
xor
pop
cmp
jp
add
xchg
lahf
sub
jle
jge
lods
mov
push
outs
pushf
push
cmps
fldcw
inc
scas
add
pop
jg
repz
jl
cmp
adc
add
pop
movs
jl
inc
cmp
xor
dec
cli
pop
sub
pop
test
jmp
xlat
mov
push
cmps
mov
ret
mov
pop
jo
stc
xor
xor
neg
retf
pop
sbb
fcmovnb
cdq
hlt
test
sahf
and
pusha
jmp
pop
sar
ss
pop
test
jge
stos
inc
test
adc
xor
jns
in
jae
cmp
mov
(bad)
push
add
fld
das
cmp
inc
sub
add
pop
repnz
cmp
sbb
icebp
ret
jecxz
cld
mov
xchg
jbe
fs
mov
jno
dec
ficomp
mov
mov
retf
cmc
jle
cmp
xchg
loopne
iret
xchg
scas
push
scas
pop
mov
cmc
leave
out
push
retf
dec
(bad)
cmp
mov
adc
fidiv
inc
adc
ins
mov
inc
mov
movs
jbe
sub
or
in
mul
(bad)
cdq
inc
pop
jecxz
cmp
shl
jg
mov
iret
jle
inc
out
retf
retf
leave
mov
pop
repnz
jmp
out
stos
mov
lea
adc
fcmovnbe
adc
mov
lahf
sahf
jl
jmp
in
shr
pop
lds
jle
ficom
sbb
or
add
jns
xchg
sub
mov
jmp
and
das
shl
pop
cmp
fimul
aas
push
fld
pop
mov
xor
call
xchg
sbb
popf
inc
cmp
in
scas
test
mov
retf
ret
sbb
shl
dec
cmp
ret
test
bound
outs
aam
scas
ror
sub
pop
mov
jge
cmp
int
add
pusha
inc
leave
mov
data16
add
dec
xor
mov
pop
fcmove
push
ret
sub
cld
push
inc
pop
mov
mov
loop
jmp
call
cmp
scas
popf
and
sbb
lock
outs
movs
dec
dec
std
pop
fcmovne
mov
and
jl
cdq
cmps
sbb
mov
jp
ror
adc
(bad)
test
jge
aad
les
inc
sub
fidiv
cmp
xor
pop
test
fwait
xor
icebp
xchg
nop
mov
shr
sahf
xchg
loop
cmp
mul
int3
popf
pop
js
divps
addr16
sar
popa
js
mov
xor
emms
jae
dec
cmps
aas
(bad)
pop
adc
xchg
jnp
and
jl
dec
xchg
fdiv
(bad)
lods
fild
add
stos
sbb
mov
add
in
out
cmps
sub
and
mov
cmps
(bad)
fs
(bad)
mov
mov
push
das
push
lods
(bad)
loop
sbb
(bad)
xor
adc
mov
fs
ins
mov
mov
jg
inc
sub
in
xor
cmps
and
retf
loopne
and
mov
push
outs
mov
mov
and
dec
adc
in
xor
push
aad
sbb
mov
push
(bad)
fwait
cs
push
mov
lods
add
bound
ja
xchg
outs
mov
je
loopne
loope
inc
bound
xchg
rcl
or
jl
test
xchg
xor
pop
dec
cmps
cmp
jmp
inc
daa
test
cwde
enter
push
dec
sti
outs
cmp
add
mov
lahf
sub
add
sbb
leave
repz
sub
xor
in
mov
call
(bad)
mov
(bad)
inc
lock
(bad)
cmp
movs
pop
inc
stc
inc
ja
sti
inc
sub
out
mov
cmp
clc
test
adc
add
pop
pop
mov
jo
movs
mov
paddd
pop
push
adc
sub
push
xchg
add
add
add
jl
mov
addr16
mov
jne
pop
mov
sub
mov
jmp
cmp
ja
jmp
prefetch
cmp
dec
push
std
jg
add
cmp
cmp
pop
out
std
xor
dec
pop
ins
lahf
lea
mov
xchg
push
test
enter
or
mov
xchg
mov
dec
push
mov
fld
(bad)
cdq
das
and
sbb
outs
int
xchg
fs
cmp
retf
je
cli
call
aam
pop
push
push
hlt
(bad)
mov
pop
cld
pop
imul
ret
pop
das
daa
mov
xchg
sahf
dec
outs
outs
add
scas
jle
inc
or
nop
xor
arpl
dec
dec
stos
and
jle
mov
mov
cmp
mov
mov
dec
sub
inc
jno
mov
aad
mov
inc
jge
in
scas
outs
cmp
mov
es
mov
pop
addr16
rcl
cmp
and
loop
cdq
add
adc
inc
inc
sub
sub
daa
ds
xchg
pop
inc
mov
arpl
ss
in
es
in
js
adc
adc
cmps
mov
or
and
mov
mov
pop
cwde
rcr
adc
push
push
loope
(bad)
dec
call
mov
fidiv
rol
pop
test
mov
xor
les
retf
jge
add
xchg
jge
add
addr16
ins
popf
movs
push
outs
cmp
jno
hlt
retf
out
fldenv
mov
or
mov
out
adc
mov
pop
or
inc
dec
xchg
call
lods
cdq
je
movs
mov
cmps
cli
add
loopne
adc
loope
push
cmps
pop
hlt
add
retf
xor
popf
mov
mov
scas
enter
addr16
add
jge
or
popa
ss
mov
loop
sar
cmps
sub
sbb
in
mov
ins
sbb
ins
push
or
fistp
push
lea
xchg
sbb
hlt
scas
hlt
pop
sahf
call
dec
dec
ins
ret
add
mov
neg
push
dec
in
fisub
mov
and
inc
out
add
jge
jb
add
mov
inc
mov
cmp
sub
cmps
arpl
cli
mov
mov
xchg
stc
mov
mov
mov
push
cdq
ins
repz
or
adc
iret
rcr
ja
in
pop
outs
mov
pop
jno
xor
push
xchg
fld
add
cmp
mov
addr16
mov
mov
pop
(bad)
mov
push
xchg
lods
ins
cld
or
jp
push
retf
push
leave
jmp
xchg
rol
mov
fsub
jmp
add
xor
test
or
arpl
mov
mov
push
cmp
push
in
push
mov
xor
cmp
out
arpl
mov
pop
in
mov
bound
dec
nop
daa
iret
loopne
loopne
cli
jne
pop
mov
adc
je
sti
adc
mov
xchg
pop
pop
pop
xlat
das
push
push
retf
les
or
repnz
and
cmp
sub
jecxz
jp
mov
inc
sbb
and
mov
cdq
mov
in
and
pushf
adc
push
pop
cld
pop
dec
push
cmp
loopne
dec
push
stc
xor
or
mov
dec
xchg
push
sahf
cmps
arpl
mov
push
pushf
pop
sbb
shr
sbb
pop
jp
and
push
jne
(bad)
xor
add
sub
imul
mov
leave
clc
pop
outs
jmp
pusha
push
int3
cld
cdq
fs
lahf
or
scas
mov
jmp
adc
fst
rol
sbb
sub
pusha
inc
arpl
push
mov
mov
frstor
jp
addr16
outs
xor
push
xor
mov
cld
adc
pusha
(bad)
idiv
ins
arpl
mov
stos
pop
scas
imul
mov
mov
mov
out
(bad)
call
mov
xlat
call
inc
mov
retf
and
pusha
inc
xchg
cmp
adc
pushf
in
lds
je
cmp
sub
leave
sbb
ins
sti
js
ret
mov
movs
sbb
xchg
mov
xchg
xchg
mov
xor
xor
sbb
xchg
pusha
push
ret
js
shl
xchg
xor
ins
push
sbb
mov
sahf
imul
cs
or
xchg
shl
push
push
dec
rcr
mov
in
push
inc
in
sar
sbb
and
sbb
ficomp
mov
rcr
jnp
retf
scas
js
outs
ret
lock
pop
xchg
lock
dec
dec
xchg
scas
pushw
pop
sahf
sub
pusha
inc
imul
sbb
sub
cmp
and
jno
mov
jns
and
dec
into
inc
push
pop
lock
std
push
sbb
mov
jo
adc
xor
push
pop
add
mov
pop
scas
mov
in
mov
cmp
lods
cmp
out
mov
vpshufd
xor
cmp
or
push
aas
or
out
mov
cmp
bound
push
sub
fcmovb
mov
xor
lds
mov
fwait
lds
in
cmp
xor
ins
xchg
stc
cwde
ds
std
(bad)
cwde
pop
inc
xor
xchg
sub
sub
pop
mov
xor
inc
retf
push
fmul
sti
sub
jp
mov
xor
sub
inc
push
shl
adc
inc
sub
push
push
jbe
enter
ret
and
xlat
xchg
dec
dec
ret
mov
ret
mov
pop
xchg
leave
mov
push
hlt
arpl
push
mov
sub
(bad)
pop
(bad)
pop
push
add
(bad)
aam
ror
sbb
pop
in
hlt
pop
loope
nop
push
jge
addr16
fwait
cld
jb
add
xor
jg
fcomp
mov
loopne
inc
jo
or
mov
jecxz
mov
mov
inc
inc
add
dec
out
xchg
or
sbb
out
inc
sbb
mov
call
add
jo
inc
xchg
cmc
adc
retf
push
push
lea
add
dec
xchg
adc
imul
test
test
and
ror
pop
dec
mov
shr
jnp
sbb
dec
stc
push
mov
dec
mov
shl
pop
ret
ins
sbb
jbe
neg
push
ins
cwde
pop
add
outs
push
mov
and
int3
ror
lods
pop
mov
inc
outs
mov
adc
(bad)
fisub
add
ret
(bad)
xor
mov
sbb
fst
xor
jmp
xchg
add
jecxz
and
jbe
jne
cmps
and
les
mov
in
mov
xchg
adc
pop
in
test
add
mov
sbb
int
clc
dec
push
inc
mov
adc
cmp
cwde
daa
xlat
das
mov
icebp
retf
pop
stos
popf
or
dec
lods
sub
retf
int3
pop
aam
adc
mov
inc
idiv
retf
dec
out
jae
cmp
out
int3
fwait
sbb
add
(bad)
mov
(bad)
(bad)
in
sbb
add
sbb
xchg
fisttp
ins
shl
and
jae
pop
lods
fstp
sbb
fnstcw
inc
mov
ficom
mov
test
in
test
jp
scas
pop
hlt
ror
mov
int3
sbb
into
movs
jno
cdq
push
in
fdivr
cmp
call
mov
cmp
(bad)
inc
call
cmp
pop
dec
inc
adc
mov
lea
jl
inc
jle
dec
xchg
cmp
cmps
aas
sub
and
adc
rol
push
(bad)
les
retf
movs
popf
icebp
aam
aaa
int
add
push
push
retf
inc
inc
sbb
repz
movs
xchg
cmp
arpl
jg
sub
pop
or
lahf
mov
ins
sub
addr16
xor
mul
adc
mov
test
mov
sub
aas
push
cmc
xchg
test
cmps
movs
xorps
xchg
mov
mov
dec
gs
push
cdq
dec
not
test
fcomi
xor
jmp
inc
(bad)
xor
mov
xchg
addr16
out
pop
out
xor
pop
call
or
add
int
cld
jl
push
mov
adc
pusha
pop
dec
mov
push
inc
xchg
(bad)
fcomip
mov
inc
push
add
gs
(bad)
jmp
lods
ret
es
imul
cdq
cli
pop
ret
es
loope
into
mov
push
dec
push
inc
imul
lock
mov
xor
fwait
data16
loop
(bad)
push
mov
xchg
mov
enter
push
xchg
data16
inc
les
sbb
fwait
js
icebp
cs
mov
sub
in
bound
or
and
in
ins
mov
and
adc
jmp
int
in
xchg
mov
je
clc
ret
pusha
sub
cmp
test
dec
mov
or
in
and
jmp
out
fst
xlat
repnz
js
xor
push
mov
adc
mov
inc
icebp
ds
fisub
ret
aas
cli
inc
push
adc
add
popa
nop
push
xchg
pusha
shl
jmp
mov
xchg
popa
mov
shl
and
cmps
or
movs
loope
sub
add
dec
pusha
adc
adc
push
push
mov
cmp
test
popa
in
scas
stos
push
mov
or
jle
loope
cld
mov
jo
loopne
xchg
sbb
push
add
jns
outs
inc
cli
jge
jmp
xor
cmps
or
push
test
hlt
pop
clc
lock
or
daa
aad
jb
push
pop
mov
inc
or
cmp
jl
pop
pop
pop
cwde
imul
xor
jge
out
dec
sub
out
jmp
in
into
push
mov
dec
dec
inc
jle
pop
cwde
test
xor
retf
cmp
dec
stos
mov
imul
dec
push
and
sbb
push
push
(bad)
pushf
inc
into
dec
iret
aad
ret
fmul
out
mov
mov
cmp
ins
pop
fadd
popa
and
ficomp
aad
and
adc
lock
dec
aad
add
cmp
push
inc
stc
hlt
daa
mov
xchg
mov
dec
test
les
mov
test
fidivr
sub
or
sub
push
test
popa
std
hlt
push
mov
pop
lea
lds
adc
popa
jmp
sahf
push
or
test
and
add
xchg
mov
rcl
aas
in
out
dec
les
ja
(bad)
js
jne
inc
add
loope
stos
aam
adc
push
outs
mov
int3
mov
out
push
iret
loop
stc
pop
dec
add
jns
leave
xchg
and
push
and
leave
jnp
or
jbe
(bad)
out
(bad)
inc
aam
add
out
fyl2x
(bad)
mov
loopne
or
ja
jbe
pmulhuw
dec
jg
cmp
mov
jmp
adc
push
cmp
mov
and
xchg
jne
outs
or
and
jge
jl
lods
xor
inc
sbb
inc
daa
pushf
add
rcr
xor
push
mov
sub
stos
xchg
pop
cmp
mov
das
pop
(bad)
mov
mov
dec
sbb
int3
cmp
inc
addr16
call
(bad)
jmp
or
jecxz
movs
daa
rol
in
aad
test
jns
fs
(bad)
cdq
xchg
fmul
ret
mov
push
pop
out
mov
test
mov
fwait
(bad)
fcomp
pushf
imul
(bad)
pushf
mov
jmp
repz
call
sbb
(bad)
in
js
fidivr
and
dec
jmp
jae
xchg
into
or
test
cmp
pop
xor
repz
jp
fcom
cmp
inc
ja
int3
(bad)
sub
push
or
jno
or
jle
mov
(bad)
outs
mov
stos
aad
mov
mov
fdiv
mov
mov
(bad)
sti
retf
push
imul
sbb
pop
mov
xor
pop
ins
push
ds
push
push
mul
aad
not
push
shl
or
call
mov
test
mov
sar
pop
pop
cmp
(bad)
add
out
fadd
(bad)
out
das
or
mov
mov
hlt
jecxz
stc
mov
icebp
aam
not
adc
shl
call
inc
mov
outs
std
je
test
jne
lahf
xchg
add
(bad)
cli
push
mov
fcmovnu
inc
in
in
arpl
repz
inc
adc
arpl
test
push
test
cmc
mov
cli
push
xchg
sbb
fistp
push
fs
loop
pop
sub
je
push
mov
out
add
mov
outs
out
inc
retf
loopne
add
pop
or
inc
xor
(bad)
in
(bad)
xchg
call
fist
cli
push
inc
ins
aas
fiadd
sti
jmp
sub
cmp
or
push
push
aam
xor
jmp
mov
ss
aam
pop
sub
ss
dec
jno
mov
cs
shr
dec
pop
jg
dec
data16
xchg
push
outs
repz
scas
out
dec
scas
mov
push
push
retf
cmps
adc
or
jns
pushf
mov
fwait
in
outs
mov
jle
les
add
jmp
dec
mov
(bad)
arpl
iret
jmp
push
xchg
jne
jae
jp
jge
das
dec
push
dec
cmp
inc
cmp
dec
int
jp
xor
mov
test
xor
adc
ins
push
js
mov
test
jo
pop
popf
es
outs
mov
mov
and
pop
jle
leave
cli
adc
dec
imul
pushfw
fwait
jp
loop
out
push
test
pop
fucomp
push
lds
in
in
aas
and
adc
sbb
daa
in
xchg
lods
gs
xchg
out
dec
or
jmp
cmc
test
pop
mov
es
inc
(bad)
icebp
cmp
dec
cdq
outs
xor
mov
push
popa
cmp
out
mov
xchg
cmp
gs
lea
mov
lock
push
push
push
pop
and
pushf
mov
mov
test
pop
cld
cmp
adc
mov
jl
xchg
jg
lds
adc
mov
add
or
jmp
jmp
mov
pop
retf
push
sbb
call
ins
mov
jmp
cmp
dec
push
pop
or
inc
cmp
cmp
and
cmc
fcom
(bad)
mov
mov
out
sub
cmp
(bad)
cdq
call
sbb
cmp
and
adc
imul
popa
mov
jae
in
push
add
pop
fiadd
add
xchg
inc
loope
imul
loope
pop
push
fs
sbb
pop
mov
jl
sbb
iret
icebp
mov
int
lds
cmp
cmp
jle
lea
or
aad
adc
div
retf
cmp
adc
jge
and
cmp
in
jnp
sub
popa
sbb
lahf
out
mov
rcl
mov
or
outs
jns
loopne
mov
lock
cmc
ins
push
xor
ret
sbb
sub
push
lds
mov
mov
loopne
xchg
std
mov
pop
mov
int3
dec
retf
sti
xlat
mov
test
aad
sub
(bad)
movs
jg
pop
(bad)
push
mov
test
jmp
mov
dec
xor
bound
cmp
int
jae
xchg
push
rcl
int
jge
add
push
out
les
ror
xchg
sub
xchg
pushf
mov
sbb
sahf
push
les
es
call
cmp
ret
mov
ds
scas
push
mov
add
ins
ss
xchg
pop
push
mov
cmp
das
mov
loop
daa
in
pop
mov
fst
add
enter
popa
xor
xor
sub
jo
mov
jmp
inc
push
cld
add
push
shl
inc
mov
xor
push
mov
push
jns
rol
sbb
xlat
xor
ret
xchg
dec
jb
pop
inc
(bad)
imul
push
add
mov
pop
jnp
pushf
jg
es
loopne
loope
cmp
fcmovbe
sub
movs
fisubr
jmp
bound
retf
sub
mov
mov
(bad)
movs
add
add
adc
add
mov
sbb
ins
jge
shl
stos
out
ins
out
jg
test
or
gs
rol
fs
jecxz
push
and
sti
sbb
js
cmp
mov
mov
xor
cmps
ss
xchg
or
call
and
sti
ret
popa
aad
or
clc
xor
and
jae
push
jbe
das
out
sbb
lds
dec
jle
retw
pop
xchg
ss
pushf
test
sbb
xchg
mov
xor
out
leave
add
mov
jo
jno
sar
xchg
pushfw
(bad)
xor
mov
shr
std
or
retf
div
inc
inc
mov
dec
aad
and
sbb
in
xchg
in
jecxz
xlat
sub
mov
rcl
call
movs
mov
outs
in
adc
loope
inc
or
mov
retf
sbb
xchg
test
mov
push
sub
dec
into
mov
inc
xchg
int
ret
or
out
loopne
sub
outs
mov
inc
xchg
popa
or
or
sti
rcr
lods
rcr
scas
outs
push
jnp
push
ret
pop
arpl
rol
pop
std
(bad)
mov
jg
hlt
stos
push
adc
mov
dec
test
push
(bad)
fsubr
repz
into
push
mul
mov
jb
neg
xchg
cmp
xchg
xlat
out
mov
or
movs
or
(bad)
(bad)
cwde
push
dec
cmp
adc
movs
int
fwait
push
or
shufps
jmp
sti
inc
into
dec
push
fidiv
daa
push
repz
adc
sub
or
retf
in
(bad)
ret
fdiv
mov
call
jnp
or
xchg
cmp
jl
jne
xor
aaa
cmp
xor
stos
ror
mov
xlat
dec
cmp
and
sbb
xor
jbe
movs
push
cld
push
push
jmp
xor
dec
out
cmp
mov
jmp
dec
cmp
cmc
and
cmp
ds
and
in
push
fwait
retf
mov
push
repz
inc
fsubp
scas
sbb
leave
and
test
retf
into
les
jb
ins
je
scas
pop
es
bound
leave
sbb
jno
retf
jecxz
aaa
xchg
pop
loope
pop
rcl
daa
scas
xor
mov
push
mov
das
sbb
inc
test
sbb
movs
push
bound
iret
mov
jns
dec
cmps
mov
test
mov
loop
push
sbb
or
iret
in
cmp
push
push
popf
dec
xchg
ret
out
mov
cld
push
pushf
call
fcmovnbe
xchg
in
sub
mov
pop
inc
not
adc
sbb
rol
pop
addr16
pop
mov
cdq
(bad)
arpl
jne
test
mov
jl
test
dec
adc
ins
loopne
scas
jmp
mov
sub
div
scas
jp
outs
adc
add
pop
(bad)
mov
jb
loop
sub
xchg
adc
sbb
cmp
loope
push
fs
jecxz
cmp
mov
leave
lea
(bad)
pop
clc
dec
loopne
arpl
lahf
mov
scas
jge
adc
xor
mov
(bad)
sub
sub
jnp
shl
add
imul
push
imul
dec
add
inc
clc
adc
xor
hlt
sbb
mov
jle
add
xchg
mov
xlat
mov
push
cdq
mov
es
aam
pop
adc
add
add
mov
sub
push
shl
jae
mov
sub
cmovs
cmp
xchg
sub
scas
add
in
cmp
ss
int3
jnp
out
adc
xor
iret
es
stos
xchg
or
pop
pop
sbb
mov
addr16
pop
cmp
lds
sub
fistp
add
outs
mov
aaa
xchg
jnp
or
mov
lds
fidiv
pop
(bad)
inc
ret
movs
inc
fdivr
(bad)
mov
fdivrp
in
or
cmc
push
fnop
xchg
cmp
jb
and
cmp
jmp
clc
dec
xor
dec
push
mov
ret
daa
jnp
fcmovb
add
fwait
or
pop
mov
loopne
xchg
add
movs
jae
jne
xor
pop
imul
dec
ret
mov
addr16
push
rol
xor
push
rol
xchg
sbb
dec
bound
retf
pop
icebp
add
icebp
push
retf
jle
or
frstor
push
fcom
pop
sbb
sub
je
(bad)
outs
push
xadd
xchg
jmp
sahf
inc
mov
push
movq
popa
jp
mov
pop
popf
pop
imul
(bad)
sbb
cmp
ficomp
pop
adc
retf
pop
repnz
push
add
test
ins
inc
adc
mov
xlat
sbb
pop
inc
jmp
add
push
mov
sub
rcl
inc
nop
in
aaa
call
mov
cmp
or
inc
adc
lock
je
out
jge
inc
call
jle
sub
sub
call
icebp
xchg
movs
jmp
xchg
aaa
dec
cmps
jecxz
clc
bound
ja
arpl
nop
sub
out
es
mov
dec
fistp
enter
lods
inc
jp
les
push
inc
out
push
sub
rcl
inc
push
scas
dec
lahf
adc
and
aaa
mov
jb
imul
iret
sti
nop
xor
push
ja
loope
inc
retf
out
data16
push
fidivr
loope
and
fwait
movs
lds
pop
jbe
add
push
push
outs
xor
lahf
div
add
pop
push
sbb
mov
fisub
sub
xchg
aam
test
cmp
lahf
xchg
push
lea
adc
and
push
jbe
ja
dec
out
push
jne
out
sbb
test
xchg
test
pusha
call
in
pop
push
sbb
test
inc
mov
sub
(bad)
or
inc
mov
cmps
mov
nop
gs
sbb
aad
dec
cmc
dec
shl
fisttp
xor
loope
or
push
mov
rol
sub
inc
sub
ss
mov
outs
sbb
sub
repnz
or
out
jbe
jp
xor
retf
ret
retf
stc
jno
mov
mov
push
sbb
pushw
cmp
jg
mov
cmc
jb
cmp
lock
aad
retf
hlt
addr16
loop
inc
retf
jg
xor
iret
out
inc
dec
sar
jge
popa
outs
cmc
outs
aas
inc
or
push
fstp
xor
jecxz
xchg
aad
cmp
fdiv
dec
sbb
or
stc
adc
sub
mov
loope
mov
dec
mov
adc
jle
mov
sti
cwde
inc
jmp
push
rol
xchg
je
jg
or
stc
jl
xchg
pop
xchg
xor
xchg
loope
mov
cmp
mov
jge
mov
sbb
sti
inc
dec
and
mov
mov
cdq
loopne
rcr
xor
mov
sti
sar
test
stc
xchg
push
push
add
ins
es
sbb
jmp
jno
xor
out
es
rol
xchg
mov
xchg
pop
mov
jmp
mov
std
jbe
ds
push
addr16
xor
pop
out
ins
mov
mov
sub
xchg
ret
cmp
push
sbb
cmp
adc
xor
leave
mov
jnp
cmp
leave
pop
xchg
add
call
daa
stc
adc
mov
cmp
dec
push
loop
mov
outs
pop
sub
xlat
dec
or
test
inc
adc
retf
sbb
neg
sub
inc
push
mov
sub
and
ret
fnstsw
sbb
mov
fsubr
sahf
lods
and
dec
push
(bad)
xchg
jmp
inc
gs
test
xchg
jo
dec
outs
sub
xor
adc
(bad)
jmp
adc
and
jo
xchg
jmp
(bad)
imul
lods
mov
xor
jb
inc
push
or
mov
xchg
xor
mov
mov
neg
fwait
int3
scas
jns
cmc
sbb
mov
sub
loopne
and
fcomi
not
fisttp
lock
sti
adc
pop
mov
pop
add
cmps
in
scas
push
push
mov
shl
cmps
sub
scas
xor
jecxz
aaa
jecxz
loopne
pop
mov
int3
fld
push
ror
lods
push
icebp
dec
test
popf
and
mov
mov
rol
outs
jns
xor
jmp
mov
sub
dec
xor
int3
nop
push
mov
xor
fistp
aas
pushf
addr16
enter
cli
jns
mov
fcom
add
mov
add
loope
(bad)
pop
ja
fistp
clc
lahf
and
ins
and
adc
mov
jmp
mov
xchg
inc
inc
inc
imul
std
cmps
xchg
stc
clc
call
push
stos
arpl
jnp
and
shl
adc
inc
xor
lods
adc
cdq
xor
and
xor
mov
jmp
jbe
push
mov
lock
(bad)
retf
call
jl
jg
aam
jl
movs
imul
sbb
cmc
in
or
adc
or
jno
pushf
popf
rcl
and
neg
sar
xchg
adc
mov
mov
aad
push
cmp
aad
add
aam
jbe
leave
mov
rcr
push
cmps
xchg
fadd
fiadd
jge
adc
cmp
pop
cli
dec
mov
add
icebp
shr
(bad)
(bad)
shr
lods
int
dec
pop
int
jmp
sub
ror
lds
shr
mov
pop
jecxz
adc
stc
jmp
call
sub
mov
pop
pop
out
stc
popf
das
xchg
aaa
cld
fisttp
int3
stos
mov
sbb
cmps
stos
pop
jmp
cmp
mov
sub
cmp
shl
inc
popa
cmp
test
jne
push
pop
add
aaa
add
xchg
adc
sub
jns
int
push
xor
mov
fcmovne
xchg
and
daa
mov
call
ret
call
sbb
mov
bound
lahf
js
sbb
cmp
xchg
cld
call
pop
rol
mov
daa
and
sbb
mov
int
xchg
les
imul
shl
xor
lods
cmp
or
pop
mov
pop
inc
in
pop
out
xchg
enter
out
inc
cli
sub
dec
inc
mov
mov
push
je
cmp
mov
jmp
pop
adc
cmp
out
push
xlat
mov
(bad)
ficomp
jo
xor
inc
scas
out
js
sub
jns
mov
jge
inc
push
add
rcr
pop
mov
out
add
dec
xchg
push
jnp
test
rcr
sub
xchg
jb
or
(bad)
int
jae
xor
sar
(bad)
out
int
fcom
cli
bound
pop
ins
retf
add
jl
fistp
dec
or
jl
xchg
mov
repz
sti
stos
sbb
push
or
and
xchg
dec
ret
in
in
les
and
add
outs
mov
sub
pop
ficom
into
push
xlat
push
mov
lahf
cmp
add
aad
mov
fisttp
or
mov
loope
in
fucom
mov
sbb
aaa
xor
pop
fs
jle
add
scas
push
push
ins
mov
inc
fbstp
aad
xor
ss
adc
sti
sahf
add
xor
jo
mov
movs
pushf
out
cmps
push
or
xor
test
test
cmp
pop
call
retf
shl
and
data16
mov
pushf
fstp
test
adc
leave
fdiv
mov
add
sti
pop
(bad)
jmp
jo
ins
mov
pop
aas
outs
test
ins
dec
retf
(bad)
es
inc
nop
xlat
mov
rcr
jnp
xchg
(bad)
push
push
mov
adc
gs
loopne
les
and
mov
inc
jnp
out
add
stos
ret
mov
mov
mov
not
lock
(bad)
aaa
shr
mov
fs
push
int
iret
je
sbb
adc
mov
or
imul
xchg
int3
iret
loop
ret
and
push
out
cmps
xchg
fwait
or
sub
fidiv
adc
dec
push
jmp
mov
pop
push
mov
sbb
cmps
push
xor
fs
cmps
cs
icebp
inc
(bad)
ror
mul
pop
and
cmps
add
cmp
jae
xor
ret
movs
imul
arpl
mov
addr16
movs
inc
xchg
jg
sub
cmp
std
mov
add
popf
arpl
sbb
or
mov
jp
pop
aad
push
and
push
add
jmp
stos
out
xchg
add
jge
pushf
nop
imul
outs
sti
in
test
jb
inc
push
mov
and
or
push
ins
out
sub
mov
dec
push
ficomp
jle
ret
sbb
dec
fsubp
sbb
ror
je
loop
xchg
lds
mov
int3
adc
mov
and
rcr
ins
inc
jp
in
fldenv
push
add
pop
sub
xchg
test
(bad)
xor
int
out
lea
int3
and
mov
hlt
in
rol
mov
jmp
adc
pusha
pop
jno
call
mov
sub
lahf
ins
sub
das
es
ret
jo
(bad)
out
call
dec
push
ss
mov
int3
ds
mov
out
lods
shl
scas
js
sub
jmp
push
push
stos
scas
add
push
(bad)
mov
cmp
fild
mov
jns
jle
xor
in
xchg
mov
cmp
inc
pop
cmps
fdiv
jp
fst
les
in
or
enter
xor
icebp
sahf
loop
aad
mov
hlt
les
xchg
push
lods
mov
(bad)
pop
mov
mov
addr16
dec
jne
(bad)
xchg
pop
retf
adc
fstp
add
xchg
add
mov
jnp
inc
clc
pop
xor
push
fadd
pop
jge
clc
and
jo
sbb
mov
xchg
inc
rol
inc
out
ret
std
(bad)
lock
inc
sbb
add
sbb
stos
les
loop
sti
out
and
leave
or
cmps
add
xor
bound
push
push
ins
in
nop
ret
mov
push
mov
push
int
xchg
sub
movs
lds
jp
pop
or
ret
dec
in
ret
outs
bound
mov
lods
pushf
(bad)
ja
mov
mov
aas
fcomp
pop
pop
rcr
mov
sar
in
mov
sub
mov
iret
cmps
adc
mov
addr16
out
gs
cmp
jle
sub
jne
xchg
add
add
rcl
aam
jb
mov
add
lods
sub
arpl
inc
fild
push
cmp
inc
sbb
pop
sahf
adc
sub
push
jecxz
or
mov
mov
sbb
sub
sbb
out
or
mov
pop
mov
sbb
jp
lods
test
cmps
push
adc
shr
inc
ret
pop
push
adc
jo
jo
add
cld
(bad)
and
cs
out
pop
xor
stos
in
jge
push
shl
lock
sbb
jl
int3
jmp
pop
inc
movs
push
(bad)
cmp
xor
test
push
inc
jno
jge
or
cmp
arpl
mov
xor
push
push
jns
sahf
jg
xlat
jno
jmp
pop
jae
mov
mov
shl
sar
mov
movs
cld
dec
adc
adc
mov
in
or
mov
cmp
xor
dec
add
inc
lock
cmp
(bad)
adc
xor
sbb
les
fs
in
add
ins
call
dec
jne
mov
addr16
inc
ins
push
adc
jmp
cmps
push
data16
into
adc
nop
xor
shl
sub
(bad)
sub
cmp
fldcw
sahf
pop
les
dec
out
out
or
xchg
push
rcr
bound
jge
mov
cmp
scas
scas
lods
stos
leave
sbb
retf
pop
loop
fistp
add
adc
adc
addr16
jecxz
cmp
int3
or
loopne
sub
pop
mov
aaa
xchg
xor
lea
jae
loopne
inc
push
cmp
sbb
mov
imul
xlat
movs
dec
vpmaddwd
retf
mov
mov
loop
lods
(bad)
div
mov
mov
cmp
adc
cld
jmp
mov
pop
cmp
std
outs
aas
pop
int
xor
iret
push
out
test
inc
pop
sti
adc
inc
mov
ficomp
lahf
pop
in
push
or
jns
push
jecxz
add
dec
nop
xor
call
es
les
xor
push
lds
mov
ror
cld
adc
test
es
dec
test
in
aad
dec
lds
push
enter
pop
adc
inc
cmp
(bad)
fidiv
jbe
mov
jmp
and
fmul
or
sti
xor
adc
hlt
push
ret
ss
out
mov
adc
out
xlat
leave
or
adc
jns
or
(bad)
or
or
js
add
(bad)
jmp
stos
mov
repz
mov
shr
sar
jp
fst
ins
icebp
push
mov
les
xor
and
jmp
adc
gs
inc
ins
lahf
jl
xchg
xchg
xor
enter
call
mov
add
(bad)
jne
loope
dec
add
iret
movs
cdq
sar
ficomp
mov
(bad)
data16
sbb
dec
inc
lods
cmp
dec
mov
jmp
xchg
jns
or
or
imul
ins
push
xor
fdiv
dec
push
or
push
sbb
out
addr16
cld
pop
add
push
cmp
dec
mov
loopne
repnz
adc
or
push
add
push
repz
xchg
mov
or
jl
sbb
xlat
jb
and
pop
add
sahf
das
xchg
pop
imul
xchg
stos
sbb
daa
mov
sbb
mov
adc
and
inc
gs
(bad)
and
or
pop
imul
test
jns
stos
lods
iret
out
fucomi
jb
movs
mov
lock
hlt
cmp
jne
mov
mov
test
fs
cmps
mov
inc
dec
xor
mov
int
push
jno
in
stos
jl
mov
push
adc
dec
jb
cmp
push
aam
pop
jge
fs
pusha
arpl
and
pop
jg
xor
pop
mov
retf
push
push
aam
xchg
or
(bad)
int3
push
popf
iret
in
mov
sub
popf
ss
cmp
into
aad
outs
or
ret
pop
inc
bound
sbb
inc
push
hlt
clc
dec
lods
xchg
fsubr
cmovg
ds
pop
xchg
adc
push
arpl
test
fcomp
int
ss
inc
mov
pop
jae
cdq
cmp
push
ds
push
ss
push
cs
mov
outs
idiv
adc
out
scas
sub
lods
rcl
fidiv
jo
dec
xchg
sbb
sbb
out
mov
sti
xchg
or
lods
mov
leave
lods
int
hlt
jmp
jno
fidiv
pop
ins
out
lods
gs
sub
xabort
mov
hlt
sbb
push
pushf
cmp
mov
jg
jle
pushf
fild
nop
enter
inc
mov
inc
loope
fidivr
out
jmp
sti
add
mov
push
test
das
mov
mov
stos
sub
inc
xor
ins
pop
cmps
mov
lock
push
and
adc
xor
mov
gs
xchg
sbb
sub
mov
jo
jb
mov
mov
fld
dec
inc
scas
and
nop
mov
ficomp
cli
hlt
push
jmp
mov
dec
sbb
mov
mov
add
xor
xchg
sti
data16
mov
sbb
in
inc
jl
imul
sub
mov
mov
idiv
or
pushf
enter
adc
sub
(bad)
ficomp
mov
adc
cmps
js
push
xor
nop
enter
push
xor
sar
les
xor
or
sbb
fdivr
inc
mov
push
pop
pop
add
dec
es
mov
stos
jge
or
mov
inc
jns
enter
dec
lods
mov
in
push
(bad)
das
shl
xchg
inc
jmp
sub
jecxz
adc
add
lock
jno
mov
js
sub
mov
ficomp
mov
mov
add
mov
icebp
lds
mov
mov
dec
(bad)
retf
bound
and
(bad)
shl
mov
stc
int3
cmp
aam
push
(bad)
push
(bad)
(bad)
loop
mov
rcl
adc
adc
jp
xor
fstp
cwde
pop
hlt
test
lds
cmp
cmp
push
int3
xor
and
inc
in
jb
fist
int
jp
lods
push
mov
pop
fcmovnbe
sbb
js
fisttp
or
(bad)
push
mov
pop
in
push
xchg
shl
outs
dec
(bad)
dec
(bad)
fnstsw
loopne
fwait
sub
lock
ds
push
(bad)
dec
popf
xchg
xchg
cmp
(bad)
adc
or
pop
pop
mov
loopne
mov
sti
mov
icebp
push
fcmove
inc
or
nop
jecxz
dec
pop
jecxz
pop
ins
sub
jecxz
jno
dec
mov
cmps
inc
call
imul
rol
cmp
into
and
stos
shl
xchg
push
mov
das
ror
daa
pushf
cld
std
call
add
retf
les
pop
cld
bound
(bad)
shl
xchg
pop
mov
or
push
aad
xor
mov
je
sbb
mov
dec
in
adc
inc
test
outs
jbe
push
jp
add
mov
test
or
mov
mov
ds
ss
mov
int
xchg
jl
push
xor
jecxz
push
mov
dec
and
aam
sub
dec
jb
pop
push
das
ret
xchg
outs
jae
adc
(bad)
loop
lods
pop
sbb
sbb
stos
mov
fdiv
xchg
hlt
call
icebp
xchg
add
mov
cmc
inc
xchg
mov
add
push
gs
cdq
(bad)
pop
ss
adc
add
or
mov
cmp
cli
xchg
loopne
std
xor
or
shl
xor
call
pop
push
push
sbb
add
mov
sub
cmp
inc
rol
je
pop
adc
push
sub
sbb
call
mov
push
sub
jo
hlt
xchg
xchg
mov
push
xchg
mov
fist
fs
stos
mov
dec
mov
xchg
mov
xor
push
sub
out
xchg
dec
or
cli
adc
sbb
inc
sti
fmul
(bad)
(bad)
cld
fisttp
not
xchg
sar
dec
adc
mov
jns
popf
xor
add
mov
and
mov
hlt
xor
loope
mov
mov
cmps
sbb
(bad)
mov
retf
mov
retf
retf
lea
(bad)
mov
scas
sbb
xchg
nop
outs
mul
lea
xor
add
mov
mov
int3
sub
mov
xor
pop
dec
aas
sub
cmp
mov
xchg
mov
add
push
inc
ins
hlt
mov
mov
adc
cmp
mov
ds
dec
lods
clc
sub
sahf
retf
test
adc
js
sbb
lods
dec
mov
push
(bad)
das
pop
(bad)
cmc
aaa
in
fsubr
xlat
iret
loope
lea
mov
mov
jb
or
xchg
shr
out
inc
ds
(bad)
cmps
(bad)
movs
xchg
inc
lea
bound
pop
and
ret
sbb
fbstp
fst
scas
daa
je
add
pop
stos
cmp
xor
sbb
adc
xor
adc
mov
lods
cmp
and
repnz
add
ret
jge
mov
xchg
int
push
stos
mov
add
ss
sub
and
leave
loopne
mov
or
jb
mov
out
ret
and
ret
xor
jl
imul
or
ret
inc
outs
lods
push
in
mov
out
iret
and
movs
aaa
inc
cmp
mov
(bad)
fidivr
and
mov
fild
mov
js
inc
les
dec
les
xor
dec
pop
ds
or
mov
xchg
rol
imul
mov
stos
scas
outs
loopne
pop
ror
aad
mov
rcr
inc
mov
fisttp
popf
mov
mov
push
jae
dec
pushf
add
ins
test
mov
mov
dec
int
test
xchg
js
call
iret
xlat
fwait
xor
sub
(bad)
out
into
push
xchg
sti
jb
jge
mov
cmp
mov
mov
xchg
or
dec
in
and
dec
xchg
xor
inc
shl
stc
add
repnz
add
pop
cmps
xchg
xor
mov
xchg
(bad)
mov
xchg
sub
pop
or
sub
pushf
leave
lock
(bad)
sbb
imul
popa
pop
sbb
sbb
mov
sub
stos
xlat
cmc
mov
and
or
cmp
rcl
ret
mov
dec
ins
push
dec
adc
das
and
outs
dec
pop
inc
dec
lahf
cmp
xchg
hlt
test
mov
and
push
pop
dec
or
mov
mov
pop
sub
cdq
cli
into
cmp
imul
cmp
sbb
jno
mov
icebp
pop
xor
push
or
or
dec
pusha
das
fisubr
xchg
xor
inc
sti
push
ror
dec
dec
push
push
push
xchg
sub
outs
popf
jnp
fisub
xor
jnp
out
cmp
test
aam
cwde
stos
jno
(bad)
mov
movs
ret
aam
dec
and
movs
jbe
aam
adc
add
jo
enter
mov
sar
icebp
sbb
sbb
inc
fs
les
dec
and
scas
jbe
jae
adc
mov
(bad)
pusha
jns
clc
or
ficomp
mov
or
and
and
inc
js
xor
xor
and
ds
mov
mov
sahf
mov
lock
mov
sub
or
pop
rol
hlt
cdq
aad
lock
jno
dec
iret
movs
jmp
scas
jno
not
shr
mov
stc
stc
test
wrmsr
aas
arpl
gs
inc
rcl
fs
sar
(bad)
outs
pop
scas
dec
xor
ins
add
cmp
pop
dec
ror
dec
out
enter
cld
xor
call
rcl
add
dec
cwde
rol
and
inc
push
loopne
mov
in
jns
pop
fbld
aam
pushf
jge
out
(bad)
mov
mov
out
jo
outs
jg
jne
pop
inc
in
sbb
mov
adc
sbb
jb
rcr
lods
xor
pop
and
sbb
pop
jno
dec
imul
push
call
mov
adc
and
inc
sub
xchg
sbb
or
leave
dec
adc
mov
sub
sbb
fmul
dec
push
cmps
push
cmp
push
or
cmps
loopne
mov
cmp
push
movs
xchg
stc
pushf
dec
dec
xor
dec
mov
dec
in
or
xchg
je
or
mov
sub
loope
stos
cli
shr
rcr
call
pop
enter
pop
stos
sub
pushf
(bad)
je
hlt
pusha
fsubr
sbb
inc
das
retf
and
lea
ins
push
sbb
cld
dec
push
bound
push
mov
push
out
ret
xchg
lock
pop
and
xchg
sbb
jne
int
stos
inc
cld
retf
push
addr16
and
int
pop
jl
push
xor
rcr
leave
push
je
rcr
xor
pop
imul
and
rep
imul
fdivr
add
nop
sbb
scas
jne
push
jb
fmul
in
scas
out
cmp
and
inc
xor
xor
add
lea
and
int3
icebp
sar
jle
add
sbb
xchg
int
adc
jo
sub
ficomp
ds
jno
lea
and
mov
in
out
rol
outs
test
out
pop
outs
repz
lock
aam
or
stc
outs
dec
loop
dec
add
sub
lods
popf
push
fstp
sub
sbb
sub
int
pushf
(bad)
hlt
imul
jb
push
or
dec
xor
repz
xchg
mov
push
pop
pop
loop
out
inc
(bad)
rol
xor
test
cs
fldenv
mov
mov
cmp
dec
mov
not
pop
pop
dec
loopne
mov
inc
add
xchg
ret
jmp
loopne
and
mov
pop
adc
mov
out
sub
push
jl
add
in
push
loopne
in
ror
(bad)
push
ss
sub
and
mov
stc
mov
mov
pop
lea
jns
mov
pop
push
adc
enter
or
and
pop
js
mov
or
mov
stc
das
inc
cmp
mov
ja
pop
loopne
sub
int
lea
add
dec
sbb
pop
lea
mov
dec
or
sub
popa
sub
fidivr
jno
sti
adc
cmc
sub
imul
std
mov
mov
pop
pop
sub
popa
push
icebp
pop
aad
icebp
xchg
inc
mov
add
mov
setb
pop
repz
dec
mov
jg
push
idiv
ss
pop
adc
xor
(bad)
out
sar
loope
jmp
out
push
sar
dec
dec
jne
mov
mov
int3
test
dec
mov
push
adc
push
push
sbb
pop
pop
jno
daa
or
sbb
and
jl
ja
outs
sar
ffree
je
pop
int
aad
frstor
jns
jle
clc
jb
cmps
icebp
adc
call
ins
cmp
cld
push
add
push
cmps
inc
std
in
xchg
nop
or
inc
fidiv
sub
cdq
sub
es
adc
cmps
mov
test
cmp
xchg
loop
fnstsw
arpl
int3
pop
dec
push
mov
repz
scas
or
jecxz
inc
movs
push
inc
mov
cmp
retf
or
mov
sahf
dec
lea
pop
ins
lods
jmp
add
sub
rcr
xchg
data16
data16
mov
push
mov
aas
adc
cmps
in
popa
mov
and
push
sub
and
dec
ficomp
xchg
cmp
dec
inc
or
and
cdq
jae
sbb
movs
inc
push
add
pop
sub
loop
mov
dec
div
movs
adc
mov
jae
hlt
popa
inc
jae
movs
or
and
jge
push
push
or
fld
aad
mov
addr16
rcl
loope
out
ret
jnp
adc
sbb
mov
in
ins
mov
test
es
or
xor
test
mov
jnp
pop
outs
fisttp
push
or
push
cmp
or
fimul
jge
test
mov
ds
cmp
push
jns
push
shr
shr
shr
xor
fstp
push
sar
sbb
je
call
hlt
(bad)
pop
jb
push
mov
sbb
jnp
in
les
pusha
aad
and
ror
sbb
cs
in
pop
stos
push
mov
sub
xchg
cwde
mov
mov
aam
cmp
and
aam
outs
adc
cmp
add
adc
mov
mov
push
lods
mov
cwde
fs
aas
xor
ds
out
mov
pop
cmc
outs
popf
fcomp
sub
push
jnp
xor
push
sub
jnp
sbb
jecxz
clc
mov
cmc
sti
aas
sbb
fisubr
rol
cmc
lock
out
fistp
scas
xchg
outs
ins
mov
push
shr
push
inc
aas
test
xlat
cmp
xor
mov
dec
aaa
inc
jns
ins
sbb
pushf
cmps
cvtps2pi
icebp
lea
outs
popf
fmul
and
push
fcmovne
lock
and
push
mov
cmp
jmp
xor
fdiv
and
inc
pop
gs
sub
dec
mov
out
add
add
pop
and
xchg
ficom
popf
in
mov
push
aaa
call
fsub
das
nop
scas
movs
int
jnp
(bad)
mov
(bad)
cld
popa
adc
in
mul
shr
and
scas
rcl
add
mov
mov
push
std
jp
jnp
inc
lods
mov
dec
in
call
retf
push
add
dec
mov
cdq
sbb
int
outs
enter
sahf
adc
xor
dec
popa
lea
fadd
mov
dec
push
mov
mov
xchg
jmp
(bad)
cwde
ja
cmps
idiv
dec
mov
lahf
mov
push
pop
hlt
mov
popf
add
sahf
loopne
push
ins
pop
pop
and
jb
sbb
(bad)
rol
or
add
mov
shl
bound
push
pusha
pop
jmp
test
cmp
xlat
sbb
nop
dec
push
jg
stos
push
cmps
ins
jno
cmp
mov
repnz
mov
in
out
repz
dec
out
popf
jb
mov
scas
das
pop
or
sbb
rcl
imul
(bad)
lahf
xchg
push
inc
pop
push
popf
or
outs
xor
in
jo
cmps
out
pminsw
(bad)
jle
sub
adc
and
fwait
into
adc
cld
aad
pushf
shl
sbb
out
pop
xlat
sbb
enter
mov
mov
inc
in
pop
sub
or
sbb
cmp
sbb
movs
sar
repz
jmp
repz
hlt
je
repnz
jmp
sub
xchg
mov
out
popa
pusha
mov
sbb
jle
push
cmp
(bad)
cld
xor
jecxz
jae
or
mov
fidiv
sub
shl
outs
mov
cs
in
movs
pop
popa
cmp
ficomp
jge
pop
push
lods
xchg
hlt
xchg
into
sbb
dec
(bad)
sub
test
not
dec
imul
push
push
fdivr
and
das
cld
(bad)
enter
mov
pusha
add
push
scas
fisubr
or
out
movs
popf
loope
mov
jb
mov
pop
pop
enter
jecxz
movs
ss
sbb
jno
xchg
push
loopne
xor
sti
xlat
stos
psubw
sbb
out
out
out
into
sbb
pushf
inc
dec
out
in
jnp
jmp
xor
test
mov
pop
mov
ret
pop
inc
push
xchg
repz
add
inc
(bad)
push
xlat
in
jno
in
cdq
lea
mov
jmp
sbb
add
sub
shl
pop
xchg
mov
mov
push
mov
jne
mov
into
in
aad
cmp
xchg
dec
pop
ret
repnz
cli
jns
ror
xchg
adc
ret
mov
jp
jns
sub
add
cli
into
sub
dec
cmp
hlt
pop
pushf
push
jns
in
push
fsub
pop
xor
ret
(bad)
aas
clc
or
and
or
fild
in
or
xchg
movs
xlat
pusha
mov
ud0
cmp
fstp
test
mov
sbb
or
imul
lea
(bad)
jmp
ja
or
test
push
aas
cmovo
jo
outs
mov
cmc
inc
arpl
inc
popa
cmp
shr
mov
ss
add
call
mov
pop
xchg
loop
nop
xor
ds
cs
ret
inc
fstp
lea
mov
pop
mov
sbb
jle
mov
in
(bad)
cmp
pop
inc
outs
adc
cs
mov
and
mov
dec
loope
aad
fst
or
mov
sbb
ins
adc
dec
or
pop
shl
aaa
sub
fistp
mov
push
fwait
inc
adc
mov
dec
mov
js
cdq
adc
stos
cmp
add
pushf
sti
imul
sbb
cmp
pop
or
fwait
sub
(bad)
nop
nop
xor
pop
dec
cmps
sbb
shl
in
outs
cld
push
(bad)
into
xor
cmps
jmp
and
icebp
into
fcmovne
repz
aaa
pop
cmp
mov
push
cld
lods
mov
in
adc
icebp
inc
cmp
push
push
pop
hlt
shr
popa
mov
mov
pop
fidivr
xchg
mov
fcmove
mov
and
aam
test
and
lahf
xor
dec
or
cmp
inc
ss
leave
jae
cmp
and
mov
sbb
cmp
idiv
inc
mov
jno
int3
ret
dec
push
xchg
xor
cmp
and
or
int3
xchg
xchg
lock
jae
scas
mov
adc
sbb
iret
gs
jmp
sahf
je
cmp
lods
(bad)
daa
mov
sub
jl
xor
std
inc
jb
pop
xchg
ficom
push
cmc
cmp
cdq
or
fld
inc
call
aad
ret
cdq
jo
rcl
les
out
(bad)
jmp
xchg
ja
add
push
(bad)
or
popf
inc
aam
xchg
and
repz
cdq
jge
cmc
mov
scas
jge
fidivr
scas
cmp
movs
cwde
pop
jno
fcmovb
xchg
fild
push
jne
inc
push
icebp
loop
xchg
shl
mov
push
add
movs
loop
and
xor
mov
jmp
jno
test
jns
push
dec
adc
xchg
aaa
or
out
add
mov
sbb
cli
jno
imul
mov
test
push
mov
and
(bad)
js
sbb
sub
hlt
inc
enter
cmp
cmc
das
repz
cmp
inc
dec
(bad)
push
cmps
jbe
stc
pusha
js
mov
fdiv
arpl
xlat
mov
push
adc
xchg
gs
jne
shl
xchg
pop
mov
cmp
push
rcr
mov
xchg
stos
mov
jle
mov
fisubr
dec
outs
retf
add
cmp
out
repnz
or
dec
out
inc
fsubr
sbb
dec
cmp
test
dec
mov
cli
cvttps2pi
add
adc
test
out
lods
push
dec
fucom
dec
push
or
adc
cmps
pop
inc
(bad)
mov
mov
arpl
sub
les
mov
adc
sub
push
and
(bad)
aam
idiv
les
ins
aaa
jmp
xor
pushf
push
inc
sbb
mov
xlat
push
ja
and
sbb
add
sub
cmp
out
pop
mov
movs
xlat
scas
jnp
or
and
daa
pusha
test
jbe
mov
les
and
in
mov
cs
sbb
xor
aaa
or
hlt
test
mov
movs
dec
cld
leave
pop
adc
lock
test
(bad)
cmp
test
outs
and
adc
mov
ret
lods
and
or
fbld
xchg
mov
jns
mov
xchg
adc
and
shl
mov
cli
(bad)
fcmovu
xor
outs
adc
aaa
xchg
pop
out
cmps
cld
xchg
dec
push
and
inc
(bad)
ss
aas
arpl
fisub
mov
adc
inc
pop
jmp
adc
data16
xor
sub
push
sti
xor
loope
data16
fmul
rcl
lahf
(bad)
jbe
dec
adc
int3
daa
sbb
fstp
mov
inc
out
adc
mov
rdmsr
mov
sbb
loop
xchg
jns
out
and
cld
add
pop
or
sti
retf
pop
ins
lea
imul
jp
call
daa
xor
mov
push
adc
push
xchg
mov
cld
addr16
ficomp
mov
clc
cmp
ret
cli
add
pusha
mov
push
sar
sub
xchg
in
fist
pop
fs
int3
pop
(bad)
ret
inc
push
inc
movs
and
xor
mov
add
add
sub
xor
aad
int
daa
jl
and
pop
mov
out
cld
mov
popf
mov
outs
fcmovne
push
into
out
adc
cmps
adc
call
cli
das
pop
dec
nop
xchg
pop
adc
das
and
shl
shl
ror
rol
pop
std
mov
xor
push
jge
push
and
mov
ror
ins
or
mov
xlat
and
jne
mov
sub
loop
aam
or
(bad)
sbb
loope
dec
popf
xor
mov
shr
and
or
and
cmps
jae
inc
sub
inc
cld
fdiv
fadd
fistp
ficom
cwde
jl
popf
int3
fucom
mov
pop
or
cld
adc
(bad)
xor
mov
cdq
std
pop
call
dec
inc
pop
ins
sub
jne
xchg
cmp
mov
inc
inc
mov
sbb
mov
jg
mov
mov
bound
mov
loope
lods
dec
cmp
dec
mov
xchg
jne
cmp
cmp
inc
mov
sub
and
or
jl
je
and
test
adc
ss
push
lock
pop
cmp
and
js
xor
aam
push
sbb
aad
xor
nop
outs
mov
xchg
cmp
mov
add
adc
mov
and
loop
scas
int
push
pop
neg
dec
or
test
dec
in
nop
xor
inc
div
cdq
hlt
outs
sbb
aad
xchg
iret
repnz
sub
in
xchg
mov
or
xor
fsubr
pop
xor
push
ins
shr
adc
push
xchg
stos
les
jle
outs
sub
scas
popa
dec
imul
fldcw
sub
pusha
xchg
cmps
sar
jo
or
add
ins
fld
int
mov
lock
pop
test
xor
scas
imul
xchg
push
leave
push
mov
push
(bad)
cs
ja
js
outs
add
ret
sub
push
je
imul
ds
cmps
out
push
stos
jne
fidivr
and
mov
les
ja
(bad)
push
sbb
jne
hlt
push
add
mov
mov
retf
out
das
push
aam
sti
xor
lahf
add
std
and
pop
push
out
mov
cmp
retf
inc
push
jle
xor
mov
sub
shr
aam
mov
jge
icebp
les
mov
pushf
mul
das
xor
scas
push
xchg
enter
and
cli
repnz
aad
stc
test
push
call
adc
loopne
aam
ret
push
mov
dec
dec
ret
push
lahf
push
in
imul
sub
or
int
mov
stos
ins
or
mov
jae
in
or
fs
mov
cld
inc
icebp
icebp
rep
xchg
xor
fucompp
push
push
icebp
adc
call
inc
jmp
and
push
in
lods
jge
inc
popf
mov
in
pop
adc
mov
sub
fcom
or
rol
sbb
xor
dec
xor
mov
and
retf
(bad)
or
jnp
iret
jns
adc
stos
out
stos
sbb
dec
pop
int3
xchg
retf
jb
retf
push
or
push
mov
xchg
in
inc
scas
movs
xor
inc
mov
dec
add
xor
sbb
jbe
retf
in
imul
cli
and
cdq
sbb
lods
in
inc
push
retf
test
call
adc
xor
dec
xchg
sub
mov
or
lods
inc
test
mov
ja
hlt
popf
shl
scas
jmp
fxch
stc
dec
mov
xchg
fidivr
(bad)
in
popf
inc
mov
outs
inc
xor
cmps
movs
xchg
bound
shl
add
mov
dec
sub
movs
in
lea
out
pop
(bad)
cmc
jnp
ret
ffree
lds
popa
aaa
cmp
retf
(bad)
and
pop
cwde
jo
test
div
imul
inc
cmp
xor
jbe
and
outs
mov
xor
add
or
cmp
mov
(bad)
enter
inc
pushf
pusha
cli
lods
push
push
xchg
jno
jb
ficom
jne
sub
pop
xor
imul
shr
adc
jge
jnp
js
push
(bad)
popa
push
in
cmp
loopne
popa
mov
xor
fucomip
(bad)
mov
mov
mov
inc
cmp
rcr
mov
xor
or
mov
mov
lds
in
leave
daa
movs
outs
loope
cdq
push
push
cmps
sub
sbb
inc
or
and
enter
xchg
icebp
pop
and
and
lahf
out
sub
sub
sub
cmps
retf
mov
in
in
jge
fisttp
sub
in
add
aas
mov
es
adc
xor
mov
cmp
inc
push
push
push
or
or
repnz
add
dec
gs
mov
adc
push
int
jg
jmp
(bad)
cld
push
mov
add
fisttp
inc
xor
hlt
push
push
inc
push
jle
lds
dec
pop
add
cmp
jecxz
unpckhps
rcl
xchg
fisttp
aaa
sbb
ins
jmp
repnz
mov
ds
cli
pusha
inc
mov
jle
je
pop
lods
pop
ret
xor
pop
jle
inc
ins
lock
loopne
mov
add
mov
push
inc
dec
sub
(bad)
in
jmp
rcl
cmp
fstp
jnp
out
in
dec
stos
movs
adc
pop
mov
fsubr
pop
ja
cmp
repz
lahf
dec
and
js
dec
sub
aad
xchg
retf
or
push
les
enter
and
nop
xchg
movs
stos
outs
inc
sbb
sbb
jbe
cmp
dec
es
add
mov
fstp
out
(bad)
clc
inc
jns
fcomi
mov
inc
in
inc
mov
bound
or
xchg
rcr
mov
inc
push
imul
xchg
outs
jmp
inc
xor
dec
jb
and
pop
mov
cmp
dec
scas
fimul
cmp
add
int3
push
jb
jmp
mov
gs
lds
xor
adc
loope
sbb
inc
jl
repnz
out
and
test
outs
xchg
dec
ds
(bad)
fcomp
out
mov
(bad)
(bad)
or
cs
inc
jmp
loop
jne
repnz
xchg
pop
jmp
sahf
scas
push
mul
mov
add
clc
add
fwait
fwait
nop
aaa
xlat
adc
mov
and
pop
inc
call
jbe
add
std
popf
inc
scas
inc
mov
dec
sbb
das
xchg
adc
stos
test
pop
mov
ret
sbb
fcomp
jle
jg
or
adc
shl
dec
adc
mov
sbb
iret
pusha
mov
cmp
pop
int3
mov
inc
mov
dec
push
popa
add
xlat
je
cwde
or
arpl
stc
pop
push
in
push
clc
iret
pop
mov
xlat
ffreep
js
mov
mov
sbb
mov
dec
in
cmp
fwait
(bad)
mov
adc
push
mov
loope
sbb
jmp
inc
mov
movs
xor
dec
add
mov
jle
adc
dec
das
outs
cld
mov
cmp
ins
stos
mov
div
sar
into
addr16
xchg
mov
xchg
xor
movs
das
mov
mov
sahf
ss
or
ins
add
lock
mov
test
call
xchg
push
fmul
aam
mov
sahf
les
add
or
mov
xchg
sub
adc
in
leave
mov
sub
cs
outs
jmp
jl
data16
mov
cli
pop
loop
mov
fidiv
nop
fstp
jmp
push
scas
loopne
jmp
lods
in
cli
sar
loope
and
sti
jae
adc
repz
in
iret
(bad)
cld
xchg
mov
jp
jp
push
sub
xchg
lahf
mov
pop
bound
les
inc
(bad)
mov
test
xor
or
pop
and
jmp
repnz
mov
xor
dec
cdq
(bad)
push
stos
adc
test
sub
in
jns
mov
pusha
sub
sar
sbb
cmc
lods
movs
xchg
daa
push
xchg
inc
xlat
add
mov
add
jmp
stos
call
xchg
adc
dec
mov
dec
and
dec
dec
mov
sbb
iret
mov
aam
cmps
lea
jne
mov
and
xchg
test
push
es
mov
push
sbb
fsubr
jo
and
mov
lods
sbb
pop
(bad)
mov
xchg
scas
xchg
in
xor
inc
js
lahf
cmp
jecxz
mov
repnz
sbb
retf
clc
sbb
(bad)
sub
and
xchg
shl
sti
mov
hlt
movs
dec
add
in
or
movs
pop
push
into
aas
int3
test
faddp
in
outs
pop
dec
xchg
(bad)
outs
jle
stos
push
sbb
pop
ficomp
ds
ins
dec
int
std
sbb
pusha
mov
jb
add
mov
inc
mov
inc
inc
inc
mov
sbb
xor
xor
nop
push
pop
push
lods
push
stos
fs
pop
stc
(bad)
ds
outs
das
push
mov
inc
arpl
cmp
ins
dec
xor
pop
mov
xor
sahf
fstp
pusha
outs
inc
adc
mov
mov
inc
nop
push
ins
sub
frstor
sbb
rol
jb
pop
clc
or
movs
jle
ficomp
outs
cld
mov
shl
(bad)
idiv
push
xor
icebp
cld
xor
test
int
mov
sar
lods
into
outs
mov
int3
mov
add
push
test
es
sub
inc
inc
pop
in
(bad)
adc
jg
sbb
or
pop
jne
push
ins
cdq
dec
pop
iret
or
test
nop
or
ror
addr16
pop
in
icebp
and
mov
cmc
in
jmp
leave
push
mov
popa
sbb
xchg
jp
jmp
mov
dec
out
daa
pop
pusha
push
out
std
fadd
push
push
mov
cli
mov
retf
mov
and
mov
idiv
xor
adc
cmp
sbb
jp
ins
dec
xor
clc
call
ret
fldcw
and
xchg
pop
cs
mov
jl
std
inc
jmp
jge
movs
mov
push
outs
push
jmp
jnp
sahf
mov
inc
jl
fldenv
sbb
ds
mov
aad
call
push
outs
pop
shr
adc
mov
mov
je
scas
push
mov
shr
scas
loope
into
xchg
xchg
sub
test
mov
cld
aas
popa
lahf
or
outs
add
adc
push
addr16
and
arpl
ret
add
push
push
rol
js
lea
jl
dec
mov
loope
lahf
inc
jne
imul
push
xchg
into
nop
inc
sbb
jbe
push
pop
jmp
data16
imul
push
push
(bad)
pop
and
dec
xchg
shl
les
inc
sar
jge
or
mov
movs
in
xchg
aad
test
push
or
cmps
add
cmp
jle
jnp
loopne
or
lahf
mov
retf
int3
push
jle
inc
dec
imul
dec
xchg
xor
adc
in
cs
(bad)
adc
xchg
push
sub
pop
(bad)
cmp
mov
enter
outs
push
jp
inc
pop
xchg
retf
jmp
stos
sub
ja
jmp
adc
sbb
out
or
or
fist
mov
jle
nop
cmp
dec
mov
js
inc
call
sub
sbb
add
lock
pushf
mov
cmp
and
rcl
jns
fmulp
dec
shl
cmp
nop
out
or
or
push
push
in
pop
or
dec
add
push
and
lods
ins
sbb
cld
in
mov
pop
adc
or
sbb
mov
inc
retf
lods
sub
mov
fnstenv
bound
add
pop
inc
add
loope
xchg
mov
stc
stos
pop
lods
sbb
cmc
cmp
or
mov
in
ss
jns
cmp
ins
dec
movs
cmps
and
or
add
push
jl
in
jns
outs
lock
in
test
and
cmp
pushf
pop
and
pusha
mov
sbb
dec
and
xor
sub
or
adc
dec
mov
sub
fdivr
(bad)
(bad)
std
ficom
popa
xor
out
adc
(bad)
adc
repz
xlat
data16
(bad)
ins
add
iret
aaa
in
fild
xchg
pusha
out
jge
pop
mov
aaa
shr
jle
cmp
cmp
mov
daa
cmp
mov
(bad)
pop
cmp
mov
cdq
adc
gs
es
popf
xchg
and
lock
rcr
loope
and
cmps
sbb
fidiv
vsqrtss
inc
rol
clc
sbb
mov
cmp
cmc
mov
aad
mov
fldenv
sub
push
xor
or
dec
xchg
mov
push
ja
xor
jmp
lods
cmp
jmp
stc
cmp
aam
mov
push
popa
adc
add
scas
mov
cdq
xlat
sbb
add
lds
mov
xor
retf
enter
mov
test
stc
adc
je
and
and
inc
sbb
sub
jnp
push
test
movs
sahf
retf
push
sub
and
lods
xor
mov
rol
inc
mov
mov
in
add
fdivrp
jae
pop
adc
(bad)
or
xchg
pop
add
test
jp
xchg
mov
and
mov
push
int3
call
fidiv
(bad)
pop
loopne
xor
daa
jno
sbb
mov
push
ror
addr16
mov
cdq
mov
adc
fnstsw
xor
mov
enter
xor
push
stos
inc
xchg
ficom
mov
push
rcr
jmp
and
bound
out
jns
(bad)
adc
push
aas
mov
push
lods
pushf
xor
imul
dec
loope
add
mov
push
or
fs
push
movs
outs
(bad)
xor
mov
mov
mov
(bad)
and
js
adc
scas
in
jno
inc
or
sub
xchg
loop
outs
cmp
adc
sbb
out
in
shr
xchg
mov
sub
cmp
dec
jp
pop
mov
sub
retf
sub
push
inc
call
push
neg
and
pop
stos
scas
sub
invd
pop
inc
jge
inc
lahf
ins
add
push
addr16
dec
fimul
cmp
jb
popf
rcl
outs
push
adc
es
ja
call
faddp
retf
adc
xchg
pop
jae
sub
loop
inc
pushf
ins
arpl
out
lods
movs
cld
cdq
dec
ins
jae
jecxz
pop
lods
pop
mov
iret
inc
jmp
adc
(bad)
loopne
aas
mov
mov
fmul
sub
pusha
add
xor
adc
xor
and
inc
outs
mov
adc
mov
cmps
jl
out
dec
inc
mov
push
test
xchg
cmp
cmp
in
xor
pushf
lods
dec
daa
and
popa
push
pushf
outs
push
push
push
mov
pop
push
lahf
fwait
pop
pop
sbb
jp
call
arpl
dec
mov
test
and
pop
push
mov
push
pusha
mov
push
inc
pop
leave
xor
rcl
xlat
adc
jbe
stos
jne
mov
cmps
je
xchg
shl
xor
mov
dec
inc
xor
jbe
sbb
sub
push
cmp
sub
mov
mov
bound
mov
pop
retf
add
add
inc
outs
cmps
or
cmc
cli
out
rol
add
adc
rcr
push
xchg
or
cmps
(bad)
in
cmps
in
or
sub
and
scas
loop
mov
fisubr
frstor
lods
(bad)
add
mov
adc
adc
dec
shl
jl
aaa
les
push
xchg
into
cmp
add
mov
fiadd
je
push
test
aad
enter
repnz
jno
xchg
lods
cmc
jbe
jne
movs
xchg
jecxz
or
lods
je
add
fild
mov
adc
and
loop
and
pop
(bad)
push
mov
sub
aaa
addr16
xor
or
jno
add
sbb
sbb
aam
push
fstp
sbb
pop
nop
push
aam
test
inc
leave
sub
adc
inc
das
mov
mov
inc
or
shl
adc
jns
mov
dec
aam
test
call
sahf
scas
sub
out
nop
shl
xchg
xchg
jbe
imul
pop
pop
xchg
test
outs
adc
sar
mov
ins
fidiv
and
inc
mov
cmps
lea
imul
inc
bound
imul
imul
mov
xchg
adc
sar
xor
or
jmp
shl
mov
sbb
lahf
fild
xchg
(bad)
iret
cwde
and
mov
inc
xchg
je
(bad)
rol
(bad)
push
and
loopne
daa
clc
cmps
arpl
dec
xlat
adc
xchg
mov
xchg
add
(bad)
retf
dec
fs
(bad)
push
in
add
es
add
mov
and
fnstsw
pusha
data16
add
jmp
or
adc
inc
sbb
cld
lock
jmp
sub
popa
mov
mov
cmp
repnz
shl
inc
jp
mov
inc
movs
pop
adc
idiv
push
js
adc
mov
ret
gs
cmp
fcomi
adc
gs
or
call
fadd
clc
dec
outs
mov
call
xchg
jne
movnti
int
cmps
and
jb
and
mov
mov
sbb
and
jl
cmp
and
stc
cdq
push
cmp
add
sub
push
js
clc
jmp
cmc
cmp
mov
neg
imul
push
(bad)
jg
js
ds
fcomp
rcl
sbb
jae
enter
push
ins
(bad)
xor
mov
sbb
fst
mov
adc
or
pop
pop
call
(bad)
test
icebp
lock
jno
inc
aaa
or
movs
lods
pop
cmp
jmp
inc
arpl
clc
xchg
mov
cmc
dec
(bad)
fidivr
outs
jne
fs
rcr
(bad)
jmp
lea
lods
mov
and
rol
jnp
icebp
popf
mov
add
mov
out
and
mov
xor
jns
xchg
(bad)
mov
call
sub
cli
loopne
add
sub
sub
popf
mov
daa
adc
sub
scas
and
int3
mov
or
inc
adc
scas
add
in
sub
fcomp
cmp
mov
ja
call
dec
fs
add
movs
data16
xchg
mov
cmc
sub
mov
sbb
xchg
mov
jecxz
mov
clc
add
popf
mov
fucompp
cwde
repz
sbb
sub
jnp
adc
adc
inc
loop
(bad)
add
ds
ins
in
scas
push
ror
and
cmp
in
imul
jmp
ins
push
mov
in
leave
xchg
mov
sub
fdivr
jns
call
rcr
cmps
fst
das
scas
pusha
jb
push
outs
je
test
push
mov
lahf
push
test
int3
pop
imul
fnstenv
(bad)
mov
pop
outs
pop
pop
jae
xchg
cmp
(bad)
cwde
or
cmps
inc
imul
sub
ror
imul
call
fmul
sbb
scas
cld
retf
gs
jb
xor
mov
shl
packuswb
inc
pop
jge
fucomp
aas
fdiv
adc
fcomp
ret
sbb
mov
scas
push
cld
cmp
daa
push
shr
mov
test
mov
js
lods
repz
jle
pop
mov
fs
nop
mov
xchg
mov
outs
fnstenv
sub
aas
sub
and
cdq
sub
or
jge
xor
stc
std
ins
adc
xchg
outs
xor
pop
loope
fimul
popf
adc
imul
cmp
jo
pushf
push
call
inc
pop
sub
cwde
(bad)
pop
mov
jl
xchg
jb
adc
imul
jae
call
xchg
int3
imul
xor
(bad)
adc
shl
jbe
shl
(bad)
adc
or
sub
movs
in
mov
inc
ins
sub
out
inc
sbb
call
cmp
not
push
lahf
and
ja
pop
sbb
xchg
iret
(bad)
out
inc
lea
mov
mov
rcr
mov
push
lds
xor
pop
test
sahf
pop
mov
leave
std
dec
jmp
inc
add
pop
mov
dec
push
mov
mov
leave
push
cmp
cli
push
pop
gs
and
push
(bad)
jge
pusha
inc
int3
test
adc
and
loope
sbb
jle
mov
imul
ret
mov
les
pop
repz
mov
(bad)
fimul
aaa
push
js
sub
push
fwait
repnz
pop
xchg
jnp
mov
or
cmp
aas
xor
pop
dec
dec
add
pop
add
dec
xchg
faddp
mov
pop
iret
bound
retf
inc
adc
and
and
into
(bad)
inc
(bad)
fistp
ret
sbb
sbb
jge
fistp
pop
fwait
nop
shr
cmp
fldenv
iret
cmp
test
cmp
sub
and
add
mov
test
ja
rcr
(bad)
sbb
jecxz
cmps
and
push
ins
xchg
cld
test
dec
or
pop
mov
add
jmp
jmp
mov
movs
fiadd
mov
scas
loope
test
jb
outs
push
sub
cmps
mov
sahf
fmul
ret
push
ins
leave
mov
pop
rcr
outs
inc
fld
addr16
cmp
sub
fcmove
mov
cmc
test
or
ja
push
les
cmps
es
ins
out
pop
stos
jo
add
or
lock
loop
mov
in
ss
cmc
pop
out
test
mov
inc
sub
(bad)
jecxz
js
mov
inc
inc
leave
xchg
mov
mov
retf
mov
fild
cmp
sahf
mov
mov
std
js
pop
test
mov
jb
pop
(bad)
test
inc
cmp
ins
pop
adc
push
cmps
sub
test
xchg
adc
push
arpl
mov
xchg
mov
pop
sub
ret
fmul
xor
pop
add
bound
mov
mov
mov
scas
mov
jle
pop
sub
push
sbb
movs
(bad)
xchg
stos
jg
or
push
add
adc
clc
mov
push
cdq
popf
inc
jno
repnz
sub
push
out
rcr
test
test
xor
pop
pop
js
int3
mov
mov
jmp
cwde
mov
or
cmp
jmp
add
mov
mov
gs
cdq
mov
dec
cmp
mov
or
xor
inc
sbb
or
xchg
sub
jg
adc
retf
inc
clc
dec
stc
cmp
push
stc
scas
xchg
hlt
mov
into
cli
call
test
lea
out
mov
cld
mov
mov
push
mov
lock
xor
pop
loopne
call
pop
adc
lock
mov
clc
call
mov
rcr
jp
push
cs
ror
out
popa
push
loopne
in
mov
inc
or
pop
and
cmps
cmc
pop
popf
push
pushf
sbb
jbe
test
adc
or
lea
adc
in
inc
jae
sub
ins
inc
xchg
movs
push
sbb
pop
mov
jg
es
cld
scas
add
je
nop
bound
push
mov
sar
jle
jo
adc
in
in
push
mov
mov
imul
jae
mov
cli
out
in
adc
imul
gs
mov
clc
jae
cmp
inc
cwde
push
mov
loopne
in
mov
add
xor
jg
mul
sbb
mov
imul
mov
sbb
into
adc
ficom
ja
dec
dec
push
cdq
adc
xchg
push
rcl
and
cli
mov
and
sub
in
cs
dec
outs
pop
clc
push
movs
mov
div
mov
xor
mov
jbe
repnz
inc
(bad)
shl
adc
in
aaa
sti
aad
sub
aad
jo
bound
push
int3
add
scas
cld
inc
push
adc
xchg
fiadd
test
icebp
(bad)
(bad)
rol
adc
mov
(bad)
mov
jle
call
xor
xlat
or
dec
xchg
ja
dec
push
pop
pop
shl
fist
inc
xchg
shl
cmp
xchg
scas
arpl
aas
or
int3
mov
mov
mov
inc
add
or
jnp
jle
sub
mov
and
mov
arpl
pusha
and
and
cs
(bad)
mov
aas
enter
inc
bnd
adc
cdq
(bad)
out
test
jae
sahf
dec
inc
mov
lods
add
dec
pop
and
jnp
(bad)
jo
stos
lahf
lods
retf
scas
fld
inc
ret
cmp
iret
pop
mov
mov
ret
int3
cmc
int3
pushf
pop
arpl
cld
xchg
das
or
dec
pop
dec
das
cs
dec
rcr
xor
lods
mov
or
sub
lods
cmps
js
cwde
jmp
xchg
push
jl
cmps
rcr
pushf
cmc
mov
ins
jbe
into
das
das
int
mov
out
(bad)
icebp
mov
cmp
jo
push
popa
lods
mov
mov
adc
call
test
jne
mov
pusha
cmp
mov
pushf
imul
inc
into
ret
xor
test
xlat
clc
xchg
mov
adc
cmp
dec
test
push
push
sub
xor
push
pop
fcom
pop
repnz
mov
addr16
push
lock
shr
enter
inc
test
mov
push
popa
jmp
shl
pop
outs
push
mov
add
xchg
mov
movs
or
pop
mov
data16
rcr
test
mov
les
mov
add
dec
add
or
mov
push
popf
fwait
call
sub
and
ins
int3
xor
outs
jnp
stos
jecxz
mov
mov
sahf
and
retf
cld
jmp
lock
and
loop
dec
outs
push
push
xchg
test
mov
sub
dec
(bad)
ror
sub
ror
aas
idiv
addr16
xlat
mov
dec
shl
fsub
pop
stos
and
pop
fistp
xor
dec
bound
mov
xor
push
(bad)
lods
push
(bad)
in
or
jmp
xor
sahf
mov
rol
pop
push
mov
push
ins
out
into
pop
adc
and
mov
pop
dec
hlt
sub
movs
scas
push
out
fidiv
xchg
fwait
or
add
movs
push
shr
xlat
xchg
out
movs
push
cmc
cmps
aaa
jge
daa
cmp
and
imul
shr
mov
mov
lods
push
xor
loope
push
push
and
ror
dec
add
sti
and
inc
dec
ja
stc
jmp
jmp
push
dec
sbb
and
sub
je
std
cmps
jnp
dec
pop
mov
sahf
cs
xor
pop
(bad)
sbb
lds
sbb
daa
xor
inc
imul
adc
inc
mov
ret
or
or
mov
xor
cmp
fisubr
push
sbb
adc
xchg
push
add
jmp
jl
mov
fcmovb
push
mov
mov
call
mov
mov
pcmpgtb
cmc
xor
das
aaa
cmp
out
add
add
push
sbb
push
push
push
xchg
and
mov
mov
fisub
cmps
cmc
sub
xchg
and
cmp
in
aas
outs
hlt
fadd
jno
and
sti
or
sub
cwd
push
cmp
push
xchg
in
and
dec
popa
sbb
pushf
pop
mov
inc
jno
add
call
ffreep
xchg
rcr
mov
cmc
mov
sbb
out
sti
cmp
imul
push
add
sbb
xor
cmps
aas
push
dec
fcomp
mov
sub
sub
movs
pop
cld
pop
jbe
call
inc
pushf
pop
js
push
push
fdivr
rol
int3
retf
enter
inc
imul
outs
pop
jnp
dec
int3
cmp
mov
call
popf
out
inc
jne
jp
xor
and
mov
pop
not
dec
iret
xor
adc
jg
jo
hlt
mov
imul
jo
scas
mov
mov
pop
pop
dec
pop
sub
mov
clc
xchg
xor
test
mov
ss
clc
jmp
call
movs
sub
in
push
or
iret
mov
sbb
(bad)
in
add
jle
aam
mov
outs
and
ds
scas
sbb
sub
pop
mov
push
fwait
sub
mov
or
pop
fadd
loope
push
mov
clc
xlat
sbb
addr16
add
ja
cmps
mov
jno
xchg
jmp
and
data16
lods
and
fwait
add
sub
mov
fs
mov
dec
mov
rol
aaa
dec
(bad)
popf
or
dec
dec
lods
(bad)
jns
xlat
inc
mov
adc
or
clc
sub
sbb
mov
mov
mov
xchg
and
call
add
jl
mov
je
push
cs
cmp
cmp
adc
pop
sbb
pop
push
sub
mov
call
lods
add
sahf
adc
dec
mov
mov
cmp
test
or
pop
fwait
and
adc
push
mov
add
out
mov
xor
(bad)
jge
jmp
pop
fdiv
mov
test
mov
imul
out
and
xchg
ja
call
fs
ds
mov
adc
sbb
enter
sbb
in
add
mov
dec
lock
fmul
nop
aaa
fmulp
adc
out
jo
and
sar
leave
push
fnstcw
dec
xor
mov
push
les
mov
adc
ja
mov
out
push
cmp
daa
je
ret
and
and
das
jecxz
add
xchg
sub
add
push
int
adc
pushf
out
ja
push
jbe
jns
movs
cmp
sti
mov
xor
push
pop
and
je
cs
xchg
sub
nop
(bad)
cmps
je
clc
adc
test
mov
inc
jmp
repz
and
xchg
mov
ja
or
das
jge
add
mov
cdq
cmp
movs
mov
xor
ror
pushw
cmp
push
sti
inc
ja
(bad)
js
shr
add
mov
inc
mov
fwait
loop
dec
cmp
or
adc
fwait
push
repz
push
das
and
jo
and
push
sbb
dec
std
xchg
xor
fst
push
out
xor
jnp
and
mov
jae
mov
xchg
mov
daa
mov
cmp
push
lea
std
stos
mov
jae
stos
loop
ss
lea
ret
jbe
pop
ins
cmc
cdq
jmp
add
jl
cmp
mov
xchg
fild
mov
lods
dec
inc
jge
push
ret
outs
or
jge
call
(bad)
sbb
mov
sub
fnstenv
sub
ins
push
(bad)
ins
mov
xor
movs
ror
push
inc
xchg
les
push
out
inc
push
fwait
in
jl
jb
cmp
fld
jns
std
int3
or
in
jle
push
pop
add
mov
mov
or
sar
push
cmps
ror
cld
fisttp
je
xor
add
cdq
ja
loopne
std
fmulp
pop
in
retf
xchg
adc
out
push
pop
(bad)
push
ins
inc
cmps
jmp
mov
sub
xchg
mov
test
cli
stos
js
jg
push
fs
push
imul
pusha
cld
mov
icebp
jecxz
fstp
lds
push
mov
iret
pop
mov
popa
sahf
mov
lea
cmp
fcmovb
ds
hlt
loop
mov
pop
jg
xor
stos
clc
cmps
adc
stos
movs
inc
dec
xchg
jle
loope
pop
lods
xor
inc
stos
mov
lahf
test
xchg
out
(bad)
sub
or
adc
or
pop
push
add
int3
and
call
cmp
movs
sbb
punpckldq
jmp
ja
(bad)
imul
jnp
or
push
movs
xchg
push
xor
inc
and
(bad)
push
jns
xor
xlat
cdq
xchg
retf
dec
xchg
je
pop
das
out
pushf
sub
stc
popf
push
test
rcr
push
cli
movs
dec
pop
inc
pop
push
(bad)
ja
xor
sub
es
cdq
aam
js
push
(bad)
mov
mov
sub
cmc
stos
imul
xchg
sbb
dec
adc
inc
xor
xor
stc
retf
push
pop
aam
test
pusha
fstp
add
(bad)
pop
mov
clc
jo
sub
movs
outs
repz
jbe
scas
ret
push
int
add
xchg
cwde
aaa
push
jge
xchg
or
add
clc
push
outs
stos
popa
repz
les
adc
mov
retf
jg
mov
xchg
shl
out
inc
xchg
push
jge
stos
jp
pop
sbb
out
mov
fmul
xchg
jmp
dec
aaa
mov
push
retf
mov
jae
and
pop
sar
pop
inc
div
sub
and
push
inc
xor
mov
js
jmp
(bad)
dec
dec
or
icebp
icebp
into
push
add
push
mov
fdiv
push
push
add
and
out
push
or
add
or
(bad)
cli
or
(bad)
aam
inc
or
(bad)
mov
sub
out
rcl
xchg
cdq
push
or
lahf
mov
or
inc
add
(bad)
in
cld
ret
shl
push
aas
cmps
std
pop
stos
in
adc
sbb
into
std
pop
sub
daa
imul
sub
dec
rcl
ins
dec
sbb
es
pop
ins
jae
cmp
js
or
add
sbb
aad
and
adc
mov
out
mov
dec
ret
mov
ret
js
lods
or
mov
movs
and
add
mov
retf
mov
es
sbb
ret
sbb
movs
aas
jae
push
dec
lock
mov
mov
imul
lahf
push
mov
and
mov
adc
adc
and
iret
push
jo
lahf
sbb
mov
jmp
int
dec
sub
enter
outs
ja
and
jge
push
jge
movs
push
xor
mov
xlat
pop
loope
push
call
xor
push
push
and
xor
movs
add
dec
stc
enter
leave
adc
popf
inc
ins
pushf
xchg
sbb
jae
clc
sub
mov
xor
jmp
mov
lods
enter
or
sbb
pusha
dec
outs
rcr
inc
pop
sub
sbb
xchg
push
maxps
add
inc
cli
cmp
or
push
hlt
add
es
add
bound
push
shl
test
repnz
mov
out
rcr
xchg
retf
lahf
ret
cmps
push
aam
mov
push
xlat
(bad)
cmc
div
jbe
adc
xor
shr
bound
movs
cli
ret
das
scas
cwde
in
xor
add
test
lods
mov
pop
pop
fmul
jge
js
sahf
out
cmp
(bad)
out
jl
pop
aad
daa
loope
cmp
out
je
xor
ficomp
fsubr
jo
test
pop
shr
stos
(bad)
push
xchg
bound
imul
adc
mov
cmp
xor
dec
(bad)
mov
pop
pop
out
mov
stc
arpl
(bad)
fld
mov
xchg
jne
xchg
pop
inc
popa
jbe
(bad)
and
pusha
xor
(bad)
push
xor
ret
xchg
lds
rcr
out
setnp
jno
jl
dec
push
shr
mov
scas
aaa
adc
(bad)
sti
cli
mov
pop
mov
jns
arpl
outs
push
test
dec
mov
mov
outs
lock
pop
pushf
hlt
outs
shl
dec
loope
pop
mov
jo
ins
lods
ja
loopne
cmp
imul
iret
jne
fimul
adc
and
jle
call
stos
hlt
adc
xchg
xchg
cmps
mov
xchg
xchg
dec
pushf
cmp
mov
dec
(bad)
push
inc
pop
mov
xor
mov
and
xor
mov
loop
pop
sahf
js
pop
call
(bad)
inc
adc
dec
adc
cmp
mov
retf
not
mov
mov
lahf
lahf
loop
pop
cli
jge
mov
pop
mov
sbb
addr16
xor
push
je
or
sti
sub
fld
int3
push
fnstenv
aam
mov
xor
sbb
inc
pop
sub
sub
int
pushf
rol
sbb
push
retf
jno
jnp
mov
jb
sbb
loope
sub
fs
repnz
inc
mov
jo
fld
mov
sti
imul
lds
mov
rcl
adc
pop
(bad)
clc
imul
or
ss
pusha
mov
pop
push
push
js
push
push
mov
lock
jp
call
inc
pop
and
mov
mov
inc
jmp
inc
push
jo
xchg
scas
sub
hlt
enter
add
and
jecxz
jo
test
pop
out
(bad)
xor
sub
repnz
movs
(bad)
call
pop
aas
or
xchg
(bad)
adc
repnz
shr
scas
sbb
(bad)
push
in
add
lods
push
and
call
or
fcomp
mov
cmp
inc
dec
cmp
pushf
mov
inc
daa
das
movs
arpl
shl
pusha
inc
dec
add
mov
or
imul
retf
mov
or
sub
rcl
imul
and
in
and
loopne
icebp
sti
out
jle
lods
ins
xchg
lea
add
push
inc
adc
mov
call
fisub
cld
ins
sub
jge
ss
push
mov
fst
out
cmp
arpl
mov
pop
fcom
retf
test
xchg
into
das
and
je
xchg
ficom
cmp
xlat
(bad)
mov
push
pop
sbb
cwde
loope
fld
or
xor
cmp
sub
or
adc
inc
dec
mov
push
bound
retf
lahf
mov
cmp
adc
xor
std
or
xor
mov
clc
std
and
adc
mov
int
inc
movs
sbb
and
push
mov
iret
daa
pop
loop
xor
adc
or
daa
inc
cld
ja
(bad)
hlt
loop
popf
or
dec
ja
inc
adc
add
mov
ss
mov
lock
mov
movs
fisubr
bound
shr
mov
mov
in
jnp
jb
rdtsc
fild
xchg
loop
es
popf
imul
push
pop
mov
xor
test
bound
rcr
fild
add
jae
repz
dec
push
add
sub
icebp
imul
retf
jo
pop
in
jno
sbb
cmp
jns
sbb
inc
std
jle
(bad)
push
cmp
pop
push
es
xchg
cmp
cmps
popf
shl
scas
cld
je
shl
adc
test
and
cmpxchg
nop
aam
push
out
jmp
popf
shl
dec
push
pop
push
imul
dec
sti
xor
jbe
sub
and
mov
mov
adc
movs
outs
ins
adc
cld
inc
xchg
adc
sar
ret
sbb
std
ret
rcr
sti
sub
repnz
cmps
nop
xor
arpl
inc
mov
inc
or
push
push
jmp
cli
xchg
cld
sub
xor
scas
pop
cmp
inc
adc
xor
mov
jbe
jl
je
xor
push
shl
nop
outs
cwde
push
or
retf
jb
pop
sar
jo
ins
aas
sub
pop
lds
frstor
fiadd
xor
mov
pop
dec
fimul
shl
popa
cmps
jns
stos
retf
jge
ficom
sbb
jae
jge
arpl
dec
dec
mov
rol
inc
cmps
xor
iret
sbb
adc
push
adc
ds
mov
xor
push
push
cmp
ins
fldenv
or
imul
jae
sbb
jne
push
jns
xor
cmp
fwait
push
popf
mov
sub
shl
movs
sbb
or
je
push
mov
pop
cwde
cmp
call
pop
rol
mov
dec
dec
clc
pop
test
push
iret
ins
or
mov
or
rol
out
sub
push
leave
stc
xchg
out
std
mov
cmps
data16
out
add
push
push
nop
jne
inc
lods
dec
dec
cld
in
cmp
adc
cmp
mov
pusha
aam
push
sar
push
and
push
shl
mov
sbb
xchg
mov
stc
or
ins
pop
pop
adc
sbb
loop
repnz
adc
outs
jecxz
inc
iret
pushf
push
lea
cmp
or
xor
cmp
movs
inc
ret
outs
(bad)
(bad)
jno
cs
xchg
sbb
cs
popa
pop
add
test
loop
push
pusha
nop
push
pushf
icebp
cdq
cli
mov
and
or
xlat
jge
xor
retf
cmp
inc
sub
dec
aad
xor
imul
retf
mov
ret
daa
imul
retf
ror
cdq
lahf
or
out
mul
sbb
clc
fs
leave
repz
sti
fld
cld
inc
mov
or
inc
les
add
dec
rol
or
push
fcmovne
xchg
call
data16
and
pushf
push
dec
cmps
add
cmp
adc
add
mov
pop
sub
jae
rcr
lods
int3
jg
mov
adc
fisub
into
adc
pop
add
lahf
push
(bad)
jle
jbe
shl
inc
inc
mov
test
sbb
or
jl
movs
aam
mov
jecxz
jno
scas
ror
inc
mov
cmp
pop
lds
jno
mov
test
dec
adc
mov
sub
retf
call
repnz
pop
outs
push
mov
aam
iret
mov
fwait
pop
cwde
push
or
jg
scas
lea
xchg
mov
cmp
pushf
pushf
inc
test
mov
mov
dec
out
movs
jg
or
push
popf
(bad)
fwait
xchg
mov
hlt
and
das
dec
xchg
jmp
neg
adc
cmc
aam
and
pop
jmp
jp
(bad)
neg
je
pop
shl
cmps
or
push
rcr
pop
and
dec
mov
jge
(bad)
por
inc
cmp
sbb
test
xchg
pop
es
int3
add
in
pop
cmp
push
lock
add
or
js
rcl
cmp
mov
pop
jmp
mov
aas
je
rol
mov
sub
call
scas
jns
stc
and
js
pop
cli
pusha
mov
int3
push
and
ss
in
movs
(bad)
pop
mov
je
rcl
cwde
call
cmp
imul
push
dec
jns
xchg
js
xchg
imul
retf
push
sub
fbstp
xor
xchg
and
cld
push
cmc
push
jbe
loope
pop
iret
xchg
mov
cld
jmp
dec
push
adc
mov
push
push
fidivr
lds
sbb
or
aad
adc
inc
push
lods
gs
inc
pop
(bad)
mov
nop
jno
fsubr
adc
adc
mov
jecxz
outs
sbb
cmp
aad
dec
pop
mov
int3
sbb
cmc
imul
popf
(bad)
ja
cmp
pop
movs
fld
lock
mov
push
rol
loop
pop
dec
(bad)
jg
(bad)
loop
in
or
sbb
lahf
xchg
shl
push
lods
lahf
dec
gs
push
adc
jg
xchg
jmp
push
add
pusha
pop
jge
mov
dec
add
jae
test
fnsave
inc
imul
mov
push
mov
cmps
sbb
hlt
add
cmp
fsubr
xor
push
out
inc
neg
push
adc
jno
mov
stc
xor
arpl
lock
fst
sbb
mov
call
xor
loope
cld
push
popf
jae
ins
(bad)
bnd
pop
cmp
mov
fnsave
sub
and
neg
cwde
stos
mov
mov
sub
shl
jge
mov
out
test
xchg
pushf
ret
rol
(bad)
jae
(bad)
add
das
sub
scas
sub
adc
in
and
imul
mov
mov
popf
movs
add
sbb
sub
sub
movs
mov
dec
out
sti
out
push
mov
sbb
ds
jg
inc
mov
stos
and
xchg
ret
je
pop
jmp
mov
aaa
cmp
add
les
mov
fidiv
and
movzx
jl
cmp
mov
lahf
pop
and
mov
sbb
call
fimul
dec
stos
pop
mul
mov
cmp
pop
test
ss
add
mov
pusha
(bad)
jmp
mov
jne
dec
and
aam
inc
mov
loopne
cwde
aas
fmul
pop
dec
xchg
mov
data16
pushf
push
arpl
dec
dec
aaa
mov
jg
dec
jae
popa
loope
call
shr
mov
pop
fsubp
shr
pop
sbb
std
jmp
dec
int3
mov
hlt
jo
sub
sbb
inc
xor
daa
mov
outs
mov
ds
scas
mov
push
out
test
jmp
push
bound
int3
cmps
pop
aaa
not
xlat
inc
mov
scas
(bad)
ror
unpcklps
inc
retf
pop
scas
sub
xor
add
pop
xor
jmp
dec
push
and
rol
mov
ja
js
imul
ficom
dec
jno
mov
mov
xchg
pusha
and
(bad)
push
mov
test
movs
jns
and
xchg
arpl
sub
sbb
and
cs
call
repnz
jns
movs
mov
push
jne
jno
and
aad
out
mov
aas
sub
fld
fst
ins
dec
std
xlat
cmp
mov
sub
out
sbb
loop
xchg
sub
aam
xor
fwait
push
repnz
add
jmp
and
shl
fwait
sbb
int
and
fnstsw
and
loope
or
add
lds
mov
popa
mov
dec
fwait
loope
cmc
daa
push
inc
push
inc
and
stos
clc
inc
pop
sbb
pop
mov
mov
adc
sbb
mov
stos
xor
push
add
lds
push
sar
inc
xlat
out
test
movs
sahf
je
mov
repnz
and
pop
pusha
dec
pop
imul
repnz
dec
stos
jnp
pop
jle
push
outs
in
jecxz
fs
into
pop
ror
sahf
inc
adc
xchg
sbb
aam
pop
mov
or
shl
in
cmp
add
dec
mov
dec
outs
jmp
imul
shl
inc
(bad)
push
loope
mov
ficomp
add
not
xchg
mov
in
mov
ja
or
(bad)
mov
mov
xor
hlt
mov
cmp
out
adc
(bad)
push
jmp
fstp
inc
jp
dec
mov
aam
aad
push
cld
lods
in
in
mov
push
mov
clc
mov
cs
icebp
xor
adc
fisttp
pop
xchg
jnp
daa
stos
jmp
dec
push
ret
call
sar
ins
mov
jb
lods
xor
push
pop
retf
(bad)
dec
es
lods
jmp
clc
pushf
stos
push
aas
dec
adc
push
jmp
aas
sbb
sbb
pop
add
mov
mov
mov
in
pop
dec
div
scas
aas
loop
(bad)
jl
sub
xor
sbb
mov
add
pop
ror
mov
out
add
and
shl
leave
mov
rcl
arpl
stos
test
jnp
daa
sub
mov
pop
mov
inc
aas
ins
mov
dec
sub
and
gs
cs
xor
fidiv
inc
mov
inc
sbb
mov
inc
fistp
in
push
jbe
push
repnz
pop
pop
test
aam
add
mov
imul
outs
xlat
scas
mov
out
mov
(bad)
ss
fdiv
icebp
out
push
movs
mov
fbld
(bad)
adc
stc
add
ins
pop
pushf
cmp
rol
lds
(bad)
loop
rcr
pop
cmp
xchg
push
retf
add
shl
adc
js
mov
or
pop
sti
adc
aas
loopne
mov
add
cwde
pushf
cli
fnsave
leave
cld
mov
(bad)
cwde
jae
jge
mov
xchg
jg
inc
push
pop
fcmovne
xor
sahf
jle
je
stos
sar
inc
push
push
(bad)
popa
mov
lock
popf
cmc
sbb
adc
or
cmp
ret
and
sbb
stos
dec
ds
in
jl
or
rcl
xchg
enter
push
gs
dec
cmp
xchg
add
pusha
add
dec
(bad)
pop
ja
and
pusha
adc
xor
ja
sbb
jno
dec
leave
pop
cmp
test
pop
add
(bad)
mov
or
(bad)
push
cwde
mov
int3
pop
xchg
jmp
dec
jno
test
mov
enter
in
call
std
test
mov
cmp
cmp
sub
stos
cmps
xchg
inc
mov
or
movs
and
sub
xchg
(bad)
ins
mov
in
cmc
mov
(bad)
pop
fsubr
or
sbb
sub
pop
push
cwde
sbb
cmc
ins
scas
iret
push
sahf
cdq
xchg
sar
xchg
fimul
pop
popf
pop
gs
fcomp
pop
ins
or
inc
data16
mov
pop
(bad)
fstp
test
xchg
jno
xchg
mov
cmp
nop
add
add
and
mov
xchg
retf
jae
pop
jae
es
jge
cmp
push
mov
pushf
pop
cmp
pop
push
push
push
(bad)
adc
mov
fild
xchg
jecxz
shr
cli
or
jne
mov
jmp
sub
push
pop
push
xor
push
mov
dec
mov
cld
pop
test
in
sbb
arpl
shl
and
std
sbb
test
je
arpl
stos
imul
out
mov
in
jmp
fidiv
sub
inc
bound
int
cld
aad
lods
ss
or
iret
inc
mov
ja
addr16
jle
stos
push
es
dec
std
jmp
aam
inc
and
dec
lahf
aad
pop
sti
sbb
mov
dec
aaa
mov
cwde
ror
popa
sti
fisttp
(bad)
jno
sub
int3
add
loop
call
test
pushf
or
sub
add
ss
add
xchg
rcl
adc
inc
add
mov
jo
jg
outs
push
mov
test
mov
call
aad
xor
in
call
out
cli
cs
cmp
inc
mov
mov
push
(bad)
mov
mov
arpl
dec
leave
clc
dec
scas
sub
mov
arpl
and
repz
in
sbb
pop
into
sbb
loope
movs
mov
mov
sub
cmp
loopne
outs
jae
pop
arpl
std
adc
mov
loop
cmp
jns
sbb
pop
push
xchg
xor
mov
iret
test
mov
sub
sbb
mov
mov
cld
adc
mov
sahf
xor
ins
jle
sub
and
cmc
(bad)
fidivr
mov
inc
es
mov
cwde
mov
sub
lds
mov
or
or
out
sbb
push
and
jge
in
aam
push
push
mov
loope
jle
ja
sub
pop
mov
loope
push
rol
push
push
sub
mov
dec
xchg
idiv
push
das
pushf
xlat
xor
(bad)
fsub
xor
mov
pop
repz
mov
xor
div
ss
gs
jp
xor
pop
and
jmp
jg
jecxz
call
lahf
adc
mov
sub
mov
arpl
adc
cmp
and
in
in
enter
es
retf
(bad)
js
in
mov
pop
(bad)
mov
xlat
ret
arpl
add
ficomp
(bad)
outs
xchg
xlat
(bad)
fidiv
or
sbb
sti
cs
int3
test
call
and
cli
xchg
cs
retf
fbld
mov
imul
div
or
push
arpl
jmp
push
and
fwait
cmp
repnz
xchg
xor
fsub
push
jp
(bad)
push
ret
pop
ds
cmp
js
jmp
out
cmp
cmovno
cmp
call
add
cmp
fistp
es
sub
ret
sub
das
inc
ds
cmp
icebp
jecxz
mov
jne
add
cwde
(bad)
retf
jo
enter
ins
add
push
jbe
fwait
iret
xchg
jno
push
adc
inc
mov
adc
sbb
inc
pusha
icebp
cwde
dec
jbe
les
imul
rcr
loop
and
and
push
jns
xchg
loope
imul
mov
ror
aas
xchg
addr16
and
cmp
sahf
push
test
adc
out
fwait
not
aas
pop
scas
mov
cld
(bad)
fs
lds
fwait
and
cmp
test
inc
mov
sub
push
sub
adc
cs
stc
mov
mov
xchg
jmp
add
(bad)
fwait
fwait
popf
sbb
sub
jg
sahf
(bad)
retf
adc
test
scas
jae
int
enter
adc
jae
loope
push
pop
pop
dec
nop
sahf
mov
aas
and
jno
jmp
clc
call
dec
sti
and
call
aam
push
or
cdq
mov
(bad)
frstor
mov
test
rcr
enter
lea
xchg
lea
sub
jmp
jnp
ds
popf
das
cmp
sbb
sub
repnz
cdq
add
(bad)
mov
nop
pop
and
int
(bad)
shr
retf
mov
or
cmp
add
sbb
pop
cmp
fimul
push
pop
test
inc
(bad)
ror
test
aaa
ss
mov
test
leave
int
les
and
lock
imul
stos
pop
mov
dec
ja
out
popf
xor
mov
mov
ss
dec
pop
retf
push
and
jge
das
jbe
js
adc
adc
cli
or
in
adc
cli
loop
mov
ret
inc
mov
mov
sub
pop
xor
inc
test
xchg
inc
pop
push
inc
int
js
sbb
add
push
mov
xor
ror
cs
mov
mov
lods
call
push
add
sub
sub
inc
test
sbb
push
outs
pop
sbb
sub
adc
out
and
dec
ins
sub
push
fs
imul
and
add
out
sti
enter
ja
mov
test
xchg
(bad)
(bad)
xor
xor
adc
jp
retf
cmp
mov
mov
adc
outs
dec
(bad)
repnz
jno
ror
cmps
in
sub
fcomp
ret
add
rcr
adc
jle
mov
mov
mov
add
adc
pop
inc
gs
sbb
cmp
scas
xchg
xor
lods
in
scas
outs
xchg
add
iret
push
nop
(bad)
mov
retf
inc
adc
adc
jecxz
aam
sub
outs
icebp
movs
jb
mov
in
bound
mov
dec
or
bound
xor
aas
mov
xchg
cs
mov
push
mov
jg
es
sahf
ret
aaa
shr
mov
(bad)
mov
imul
pop
lock
(bad)
cmps
ds
mov
push
push
xor
loope
cmps
cmp
repnz
dec
repnz
adc
and
fs
mov
pop
push
pop
cmp
pusha
aad
shr
fisub
cmp
sbb
fbld
adc
stos
jl
call
sub
and
add
mov
and
loope
mov
test
int3
or
inc
sbb
xchg
mov
stc
mov
dec
pop
aaa
or
or
mov
sti
ss
nop
movs
adc
es
mov
stos
xchg
dec
idiv
int
shr
dec
addr16
mov
mov
aam
repz
pop
fdiv
outs
and
ins
push
fild
scas
jge
sbb
dec
mov
pop
mov
in
pop
mov
cmp
mov
mov
and
ss
and
adc
sahf
cmp
jle
pushf
mov
in
out
je
lods
mov
popa
std
xlat
xchg
sub
add
and
xchg
int3
mov
mov
cmp
imul
das
adc
pop
out
neg
icebp
cmp
dec
jmp
movs
xchg
lahf
pop
mov
cli
xchg
mov
xor
movs
adc
call
mov
dec
jge
sub
push
fiadd
add
push
(bad)
pop
jmp
push
sbb
test
stos
out
stc
mov
mul
ror
cmp
xor
adc
sar
rcr
into
xor
fwait
xchg
push
sub
aaa
aad
and
dec
outs
repnz
test
jae
pushaw
mov
pop
out
das
bound
xlat
mov
je
sbb
movs
mov
in
jno
ds
aam
sbb
xor
cmp
repz
mov
pop
ficom
call
je
inc
or
and
jb
clc
pushf
stc
cmp
and
pop
push
sub
mov
pusha
and
fiadd
jne
cmp
jmp
add
mov
hlt
inc
sub
loope
push
inc
aaa
jnp
ja
dec
idiv
adc
mov
sub
mov
jns
xor
add
out
xor
enter
xor
xchg
jmp
push
and
mov
or
sub
dec
mov
cdq
mov
mov
push
jbe
jnp
mov
sbb
mov
pop
sub
mov
sub
test
sbb
and
adc
cmp
into
iret
push
test
jmp
sbb
int
pop
fnstsw
mov
fscale
test
(bad)
in
in
jg
push
mov
mov
push
mov
lods
cdq
fcmovbe
xchg
mov
xor
fiadd
aad
mov
fisttp
gs
in
mov
ins
hlt
jbe
sub
xchg
outs
sub
inc
int
push
popf
inc
outs
or
mov
mov
push
adc
ret
lods
aaa
adc
pop
cmp
cmps
dec
das
repz
mov
or
push
cld
inc
mov
jno
add
test
jns
jle
sub
in
jno
push
sub
aas
ja
xchg
fwait
mov
dec
clc
adc
int
ds
mov
repnz
mov
sbb
or
popf
inc
retf
ret
and
xchg
jnp
jmp
leave
sar
inc
mov
fimul
push
jo
sub
aad
sbb
inc
lds
xor
popw
pop
repz
adc
pusha
sar
aas
fnstenv
mov
stos
xor
mov
ret
ds
mov
or
(bad)
out
pop
adc
mov
mov
pop
xor
movs
jo
cmp
in
add
fst
pop
mov
lods
or
retf
cmp
dec
scas
frstor
shl
lods
outs
mov
mov
(bad)
sbb
fisttp
mov
cmp
repnz
pop
sbb
cdq
xor
mov
jp
mov
sub
in
fisubr
lahf
enter
ret
push
cmps
gs
(bad)
sbb
cmp
aas
dec
push
adc
xchg
push
movs
pop
dec
jg
xchg
jne
xchg
addr16
mov
xor
sbb
sbb
pop
pop
sbb
arpl
div
push
psrlq
iret
push
push
ins
mov
or
outs
cmc
inc
ja
bound
shr
sti
(bad)
imul
imul
in
xor
xor
loope
std
bound
xor
cld
pushf
mov
jp
cmc
stos
addr16
lahf
aaa
shl
mov
ror
shl
enter
and
mov
(bad)
ds
imul
pop
cmps
sar
adc
push
not
mov
retf
adc
clc
or
dec
xor
mov
sti
add
mov
movs
pushf
cdq
and
xchg
lea
xchg
je
ins
sbb
adc
call
imul
pop
cmps
jne
mov
popf
lods
ja
sub
scas
js
in
jo
sbb
daa
mov
ins
aam
sahf
ins
das
test
dec
push
push
pop
jmp
xchg
cmps
std
gs
xlat
shl
mov
or
imul
pop
sbb
and
fnstcw
xchg
xlat
sbb
dec
imul
cmp
xor
in
and
loop
cmps
mov
cmps
outs
xchg
push
jbe
fst
in
ss
cmps
pushf
js
shr
adc
xchg
cs
ss
call
inc
mov
retf
add
(bad)
add
popa
xchg
rol
ret
push
in
and
fistp
ficom
nop
mov
(bad)
loopne
add
push
or
gs
int
loopne
add
outs
jns
push
aaa
stos
and
pusha
dec
js
sub
xchg
inc
jbe
xchg
cdq
inc
or
retf
je
mov
xchg
push
clc
call
and
xor
out
jne
call
dec
fld
sbb
scas
lock
push
inc
xor
mov
mov
sbb
dec
rcr
and
test
cmps
jle
dec
rol
inc
lahf
pop
pusha
xor
iret
xor
jo
cmp
ror
cmc
pusha
cmp
iret
inc
push
mov
pop
shl
shr
adc
ss
(bad)
jp
and
je
scas
xor
hlt
retf
and
test
mov
addr16
out
test
push
mov
in
je
xor
fnstsw
push
sub
lods
imul
jae
scas
das
out
mov
aam
dec
mov
dec
int3
push
xchg
pop
dec
shr
jbe
adc
jl
jmp
jbe
out
addr16
aad
mov
outs
mov
mov
jo
adc
xor
mov
popf
lds
sub
shl
dec
cmp
cmps
dec
or
repz
das
add
push
adc
mov
mov
stos
scas
pusha
lahf
ficomp
sub
fwait
daa
cdq
into
cmp
inc
mov
pop
loope
ficom
mov
push
test
in
mov
call
jmp
add
in
stos
adc
es
les
ret
data16
push
mov
xchg
mov
pop
cmc
lds
sahf
cwde
aam
sbb
mov
xor
out
pop
cmps
clc
test
(bad)
ret
adc
sti
pop
push
mov
jl
(bad)
call
sub
jo
int3
or
faddp
xchg
inc
into
cwde
push
imul
mov
lea
mov
jb
lods
test
xchg
pop
(bad)
mov
(bad)
ja
sub
ror
test
cmp
and
adc
and
ss
call
imul
mov
add
call
into
and
xchg
mov
cmp
lea
gs
js
aaa
pop
mov
fcmovnb
jno
dec
retf
jmp
cmp
mov
imul
push
sub
push
pop
jmp
or
sar
pop
lea
cmp
dec
jae
pop
fsubr
mov
sbb
cmp
idiv
xchg
(bad)
xlat
xchg
test
pusha
xor
mov
inc
and
es
fnsave
cmp
popa
aad
or
dec
or
adc
sub
pop
pop
push
jne
cmp
movs
add
pop
mov
push
ss
pop
or
jno
mov
mov
cld
jge
mov
push
pop
int3
out
iret
jle
cmp
sub
jp
adc
xchg
mov
ds
mov
fisub
mov
mov
sub
jmp
std
dec
cmp
hlt
out
pop
push
imul
and
sub
dec
add
jge
es
jnp
arpl
mov
sub
xchg
mov
xlat
hlt
pop
jp
aam
stos
mov
sbb
jle
add
add
movs
jo
ficom
popa
jne
jl
cdq
sbb
pop
ja
sbb
int
adc
es
and
out
stc
icebp
mov
mov
fimul
(bad)
mov
retf
xchg
jecxz
xchg
mov
into
neg
fistp
adc
push
inc
mov
(bad)
adc
rcl
and
cmp
or
xchg
add
cmps
mov
dec
add
test
sub
cmp
adc
clc
adc
out
aam
sub
nop
hlt
lahf
fisub
cdq
push
jmp
loopne
clc
stc
icebp
dec
enter
pop
adc
dec
in
enter
mov
add
popf
out
push
cmp
cmp
pop
stc
pop
pusha
pop
add
dec
pop
mov
shl
lock
sbb
push
xlat
mov
imul
fwait
stos
mov
daa
scas
nop
aam
mov
mov
in
jno
jmp
pusha
sysexit
push
arpl
aas
(bad)
xchg
mov
inc
cld
push
adc
addr16
inc
dec
jmp
mov
fdivr
ret
movs
int
push
add
div
out
sub
mov
mov
(bad)
adc
xchg
cmp
jp
jae
call
push
ss
jno
into
in
fisubr
idiv
mov
lods
push
xchg
and
out
push
test
or
jne
(bad)
and
js
dec
mov
mov
rcr
adc
push
xchg
pop
adc
scas
cmc
fistp
xchg
stos
adc
or
and
fidiv
jmp
aam
pop
(bad)
fadd
daa
mov
(bad)
lahf
out
arpl
xchg
sbb
sub
jmp
sub
out
mov
lods
inc
inc
sub
sub
cli
aaa
push
mov
inc
(bad)
stc
jp
cmp
cmp
xor
adc
mov
or
test
push
loop
cmp
mov
ror
cmp
movs
inc
mov
loop
stc
add
imul
add
sub
sub
popa
add
scas
xchg
pop
nop
jp
imul
cmps
pop
into
xor
scas
fild
add
iret
dec
inc
int3
das
dec
dec
dec
push
dec
fild
inc
mov
inc
jge
test
or
fsub
fild
jmp
stc
cmc
xchg
adc
leave
adc
pop
inc
loop
call
imul
and
nop
mov
cmp
xor
jp
inc
repnz
test
js
out
aas
mov
xchg
out
pop
or
scas
stc
inc
retf
dec
cmps
pusha
fidivr
dec
add
(bad)
in
mov
pop
jnp
test
mov
jne
test
xor
xor
enter
sbb
fidivr
sub
pop
jecxz
cdq
aam
imul
sbb
shl
pop
rcr
ror
xchg
je
xor
adc
mov
movs
mov
jmp
push
push
fiadd
outs
imul
aam
pop
leave
xlat
mov
sub
mov
xchg
test
gs
and
mov
dec
mov
jmp
call
aaa
sbb
fs
and
stc
or
test
addr16
daa
adc
mov
sar
jmp
mov
lahf
fist
outs
sbb
cld
aad
retf
or
cwde
push
and
stc
xchg
pop
xlat
jno
repnz
aas
adc
retf
retf
sti
pushf
xor
imul
push
and
mov
or
scas
and
mov
pop
sbb
dec
out
ss
adc
push
lods
and
and
rcl
dec
jmp
out
add
stc
cmc
push
retf
cmp
xchg
popf
ficomp
jae
mov
jbe
mov
xchg
aaa
out
mov
ficomp
add
cmp
(bad)
fisttp
shl
mov
xor
ins
in
test
ss
outs
xchg
add
add
out
mov
dec
adc
movs
pop
ret
dec
test
pop
mov
mov
push
fnop
ins
fiadd
cmp
ja
sub
gs
xor
cdq
loope
lods
inc
pusha
add
lods
push
and
movs
xchg
shr
or
sbb
push
xor
mov
mov
sub
mov
out
adc
shl
push
es
aad
clc
ds
mov
inc
mov
add
or
jle
sbb
push
cmp
call
cmc
adc
call
or
cmp
les
movs
xchg
clc
popa
int
cld
push
call
mov
leave
inc
sub
out
das
xor
loop
fwait
cld
mov
(bad)
jb
inc
fwait
es
or
std
pop
jnp
or
addr16
pop
mov
mov
dec
xor
cli
cwde
mov
cmc
adc
sbb
jbe
jg
stc
pop
out
pop
add
sar
sahf
fwait
xchg
scas
jecxz
ins
repz
inc
mov
dec
pop
test
movs
mov
mov
add
mov
xor
iret
and
push
push
cdq
inc
mov
dec
and
cmp
mov
sahf
xchg
gs
xlat
fidiv
jl
out
xor
mov
and
test
scas
in
int3
call
adc
jae
and
data16
jb
fisubr
imul
call
xor
push
sahf
enter
movs
(bad)
test
push
jecxz
and
inc
bound
push
(bad)
mov
sbb
cmc
pop
sbb
stos
pushf
(bad)
jl
sub
fstp
xchg
jge
push
test
das
ins
pop
in
sti
pop
and
jg
add
mov
test
scas
fs
cmp
rcl
ss
push
add
fisttp
dec
cmps
pop
pop
retf
and
mov
pop
xchg
data16
mov
sahf
mov
(bad)
cli
or
lods
mov
mov
aaa
stos
or
ret
ds
adc
pop
push
inc
xchg
fsubrp
push
jb
xlat
add
add
jne
jl
cmp
jmp
xor
out
push
jl
pusha
xchg
icebp
xor
jge
mov
inc
jecxz
mov
add
movs
or
fmul
dec
add
loopne
addr16
rol
sub
out
mov
jb
cmps
inc
pop
pusha
xchg
rcr
(bad)
cmp
ss
loopne
movs
test
sub
(bad)
xor
and
mov
cld
inc
cmp
jge
sub
cmc
call
push
add
jno
popa
inc
imul
xchg
test
and
pop
inc
in
dec
jmp
cmps
scas
pop
mov
in
stos
mov
add
mov
pop
pop
call
call
xchg
dec
out
jb
dec
outs
pop
rcl
xchg
dec
inc
push
pop
cld
icebp
inc
push
jmp
movs
mov
aaa
mov
fs
popa
dec
push
cmc
mov
pop
dec
push
pop
mov
xlat
cli
dec
push
data16
push
leave
sub
mov
mov
movs
(bad)
cmp
pop
push
retf
sbb
adc
jp
leave
test
cwde
and
or
shr
scas
cmps
inc
sub
in
adc
adc
test
dec
cwde
dec
xchg
adc
loop
js
nop
sti
loop
jge
in
inc
pop
aaa
cmp
inc
mov
xchg
jnp
aam
push
test
mov
pop
test
fld
jb
push
repz
cmps
mov
xlat
into
xor
mov
mov
dec
mov
dec
idiv
xchg
retf
inc
ins
addr16
movs
sar
push
into
or
shr
mov
dec
cmp
loope
retf
xchg
out
push
jae
das
inc
jb
mov
dec
jp
sub
xchg
add
sbb
in
jne
mov
mov
xchg
jns
pop
not
lods
sbb
(bad)
sub
daa
sar
add
leave
xor
lock
fs
push
mov
sahf
enter
or
adc
lea
sub
mov
(bad)
popa
bound
aas
dec
mov
jbe
ds
pop
stc
xor
scas
and
adc
jp
retf
int3
fwait
pop
imul
enter
daa
xchg
addr16
nop
jne
addr16
mov
mov
pop
cmp
sbb
popa
xlat
mov
mov
xchg
and
rcl
mov
inc
mov
mov
cld
stos
push
in
(bad)
pusha
push
xchg
lods
cmps
neg
out
xor
sbb
not
pop
push
das
xchg
ins
stc
nop
leave
test
jnp
mov
jle
aad
jne
ds
js
mov
add
dec
loop
clc
push
ds
pop
push
mov
fcmovbe
jne
xchg
cmp
mov
js
fwait
bound
popf
dec
(bad)
out
xor
adc
je
xchg
xchg
pop
and
jbe
lods
xchg
out
xchg
in
dec
arpl
gs
push
inc
and
jge
stos
movs
adc
inc
mov
stos
sub
inc
rcr
test
or
xor
out
mov
lea
jne
jns
adc
out
loope
xor
cmp
pop
pop
adc
push
mov
rcl
loopne
fwait
mov
jbe
test
add
adc
div
cmps
jecxz
or
mov
inc
or
jge
popa
jge
cmp
jecxz
aas
iretw
movs
lahf
fistp
mov
xchg
adc
xchg
int3
in
aas
add
stc
mov
lahf
mov
jmp
hlt
mov
mov
mov
sar
inc
out
mov
lds
std
mov
push
stc
jns
lods
inc
xchg
or
fs
add
mov
repnz
sbb
jmp
xor
in
mov
add
popa
and
jecxz
(bad)
imul
jno
pcmpeqb
daa
mov
test
loop
add
rcl
cmp
mov
mov
xchg
add
inc
dec
outs
adc
mov
in
push
inc
aas
xor
push
pop
xchg
(bad)
imul
mov
mov
xor
jnp
les
sbb
and
loop
bnd
jg
fnstcw
pusha
fs
add
inc
mov
and
les
(bad)
cli
(bad)
int
fldl2e
pop
(bad)
sti
lods
outs
adc
data16
les
les
jecxz
imul
xchg
ss
adc
test
jnp
ins
and
adc
push
xchg
inc
adc
call
shr
jmp
mov
push
inc
push
dec
push
pop
mov
mov
inc
dec
or
in
add
fadd
js
das
mov
mov
cld
xor
shl
ins
fld
out
repz
rcr
jo
dec
fisttp
pop
imul
sbb
nop
lock
sbb
push
enter
or
fdivr
jle
mov
call
addr16
shl
add
xchg
and
xor
imul
and
inc
cmp
retf
cwde
and
jne
iret
in
mul
adc
and
js
test
dec
pop
jmp
imul
jo
fs
addr16
jnp
xchg
movs
or
sbb
jnp
popa
dec
test
aas
xor
imul
retf
fbld
retf
fstp
adc
add
dec
xchg
push
fdivr
popf
or
lea
jecxz
sahf
int
jae
push
xchg
dec
xchg
stos
out
dec
add
push
shl
and
outs
shl
(bad)
repz
sti
scas
movs
xor
fbstp
push
sbb
push
adc
test
add
inc
push
(bad)
es
fwait
or
aad
pop
ret
mov
in
shl
push
cmps
push
les
js
add
fiadd
and
cmp
aas
or
mov
adc
mov
mov
fild
sub
mov
mov
xor
cmp
adc
sbb
lea
iret
push
mov
cld
xor
pusha
test
adc
xchg
cld
dec
aaa
dec
dec
fs
mov
pop
retw
xchg
out
out
mov
pop
fdiv
mov
(bad)
sub
sbb
jnp
inc
test
sub
sahf
pop
mov
ret
pop
pop
cmp
sbb
ror
xchg
scas
fs
pop
jmp
sbb
and
inc
cmp
dec
push
mov
fcmovnb
mov
ds
(bad)
sub
js
(bad)
lods
jge
loope
mov
ins
and
mov
adc
add
sbb
xchg
sbb
imul
mov
ss
lods
aad
add
add
out
sub
mov
mov
out
cmp
xchg
xchg
dec
ss
and
cmp
pop
cmps
out
pop
jo
retf
mov
mov
inc
xchg
outs
pop
add
es
push
mov
dec
add
pushf
dec
movs
inc
repz
dec
js
int
test
push
outs
pop
fsub
sbb
loop
lods
test
rcr
bound
cld
inc
dec
out
push
push
fnstcw
add
inc
or
into
jle
das
xchg
dec
scas
pop
daa
mov
add
adc
scas
jne
loopne
in
inc
popa
jb
outs
adc
int
lea
movs
stos
retf
push
jle
jno
push
shr
cmp
pushf
aaa
sub
mov
outs
icebp
int3
leave
mov
push
cdq
sub
xor
adc
sbb
cs
add
imul
rcr
xor
ds
pop
adc
js
cmp
int
aam
out
lock
scas
neg
add
cmp
imul
xlat
sub
stc
add
mov
test
stos
movs
fwait
iret
pop
jp
dec
push
lahf
cmp
cmc
jmp
pop
rol
and
xor
mov
jge
jmp
clc
pop
sar
mov
mov
pop
imul
or
mov
not
add
add
push
(bad)
push
pop
rcr
jbe
out
mov
jmp
lods
jne
fdiv
jnp
inc
and
adc
lea
or
cmp
cmps
pop
adc
adc
or
dec
cld
sbb
test
lahf
jo
clc
sub
mov
inc
pop
cmp
(bad)
jge
dec
add
push
sub
(bad)
xor
ja
xor
nop
rcr
pop
loope
jp
mov
leave
mov
int3
out
inc
outs
sub
sub
xchg
xor
mov
cmps
or
stos
imul
xchg
js
out
cs
mov
repnz
adc
adc
cmps
out
jb
jp
adc
xor
cmp
int3
jne
out
mov
stos
adc
cwde
and
jae
cmp
cmc
pop
out
aas
xchg
adc
stos
fwait
pop
push
in
xchg
repz
jo
cli
dec
ds
mov
adc
adc
out
std
inc
jecxz
ret
cmp
ds
mov
xchg
daa
shl
mov
loop
repz
sbb
jnp
aaa
scas
cs
test
inc
and
push
aas
enter
jp
mov
xchg
adc
push
push
push
rcl
mov
add
sbb
in
pop
xor
mov
pop
mov
xchg
stos
mov
add
(bad)
push
sbb
into
lahf
movs
imul
jg
stc
mov
mov
cs
jl
push
inc
push
jbe
mov
mov
aad
xchg
add
ret
dec
aaa
mov
movs
and
dec
loopne
in
int
les
mov
outs
adc
pmuludq
mov
idiv
or
movs
out
lea
call
fimul
cmp
pop
dec
push
push
fldcw
cld
ins
out
fist
inc
fdiv
(bad)
push
pop
mov
xor
loop
test
scas
sub
ficomp
das
or
mov
sbb
jb
jnp
aaa
push
and
jg
loope
test
pop
push
xchg
jns
mov
pop
scas
addr16
lea
xor
jmp
clc
pusha
js
add
mov
arpl
xchg
pushf
mov
jp
fwait
push
mov
jns
add
test
push
shl
jl
xor
mov
mov
xchg
jp
push
int
sbb
push
push
rcr
xor
pop
adc
pushf
mov
aam
pop
dec
not
bound
call
inc
in
cmp
lds
in
jne
popa
and
movs
shl
inc
jbe
shr
out
xor
inc
xchg
test
add
adc
ret
sbb
leave
jmp
das
sti
loope
daa
nop
rcr
adc
jnp
sub
js
and
dec
ins
mov
fiadd
sub
in
sub
rol
mov
je
xor
dec
shl
popa
push
cmps
jmp
in
test
imul
sub
xor
jae
movs
sub
dec
loopne
xchg
dec
cmp
aam
cmp
inc
add
and
mov
inc
lds
push
scas
inc
out
(bad)
out
mov
js
pop
pop
iret
inc
or
imul
xchg
sub
jo
das
adc
jmp
add
xadd
shl
push
cmps
mov
add
arpl
js
xor
add
cmp
xor
(bad)
std
xchg
add
push
pop
dec
test
in
sub
xchg
mov
xchg
sub
adc
xchg
and
lods
jmp
sti
js
fs
fs
xchg
(bad)
sub
push
or
push
push
adc
ret
cmp
sub
leave
xor
push
mov
call
cmp
xchg
jmp
daa
cmp
adc
sbb
push
mov
lods
clc
mov
jno
pop
sbb
sub
mov
pop
lock
xor
xchg
arpl
lea
lahf
loopne
xchg
mov
pop
div
push
jbe
or
xchg
dec
xchg
int3
cmp
push
or
xchg
das
or
hlt
and
test
add
(bad)
fstp
inc
dec
popf
cmp
mov
pop
clc
push
movs
push
icebp
push
gs
mov
pop
jecxz
and
mov
cld
fidivr
add
sub
xor
xchg
cmp
dec
ror
jecxz
and
and
add
pop
pop
pop
mov
sahf
sub
test
xchg
aad
mov
pop
popf
leave
jecxz
xchg
int3
imul
pop
hlt
jle
or
cmp
test
fcomp
jl
xchg
add
sbb
add
ins
push
data16
bound
xchg
jns
add
or
inc
lods
leave
mov
push
gs
jl
and
xchg
daa
lahf
jg
scas
mov
pusha
cmp
add
lods
loope
movs
ret
mov
jnp
xchg
mov
setnp
dec
and
ds
xlat
cld
cmp
(bad)
mov
jg
test
and
cmp
inc
lds
push
jno
das
fs
pop
aaa
cwde
jge
and
and
push
je
xchg
sbb
lahf
push
loopne
xlat
stos
mov
(bad)
xor
cdq
push
cli
or
je
push
and
dec
fcmovne
push
cmp
nop
out
repz
mov
(bad)
(bad)
fld
repz
call
ds
rcr
clc
ja
test
add
inc
lods
add
dec
out
pop
inc
test
pop
in
push
jp
or
adc
je
outs
out
call
push
pusha
cwde
pop
(bad)
(bad)
les
ror
gs
std
add
cmp
mov
rcr
sub
sub
mov
mov
ss
(bad)
data16
sahf
inc
jle
lods
sti
jl
and
mov
arpl
ret
addr16
js
sub
loope
cmc
inc
les
fst
jg
in
js
cwde
ss
rol
pushf
test
xchg
aam
retf
test
ret
dec
mov
sti
les
loop
adc
mov
iret
lods
jo
push
xor
movs
test
push
adc
mov
adc
test
jns
mov
xor
sbb
sub
jle
jne
dec
(bad)
mov
xor
mov
cmp
cmp
add
daa
lahf
push
add
mov
cs
mov
mov
inc
add
and
or
popa
adc
daa
sub
jge
mov
gs
icebp
cmp
pop
dec
jge
push
xor
add
sbb
(bad)
mov
xchg
icebp
std
sahf
popf
leave
loope
mov
ret
ins
fstp
rol
xlat
iret
xor
xor
fidiv
movs
mov
xor
and
push
cld
fild
add
pavgw
push
jl
mov
cmp
outs
sti
fs
imul
and
sar
jmp
retf
idiv
mov
mov
pop
mov
cmp
and
test
pop
sbb
mov
and
mov
xchg
jno
jno
ret
pop
xchg
jg
retf
jb
push
xchg
lock
loop
in
sbb
mov
inc
xchg
ins
cmc
push
mov
mov
inc
je
xchg
aaa
mov
ds
popa
loopne
out
pop
popf
imul
xchg
retf
sub
mov
push
imul
(bad)
ins
cld
loopne
dec
jo
loope
add
mov
xor
sbb
sub
dec
pusha
fnstcw
jecxz
push
pop
adc
mov
sti
push
xchg
and
sbb
jmp
je
add
pop
sub
add
iret
push
aad
mov
push
xor
mov
sbb
sub
clc
add
pop
xor
ja
adc
test
es
clc
jnp
sti
(bad)
or
addr16
mov
push
in
pop
aad
pop
mov
retf
cld
fucomi
popa
call
or
mov
imul
cs
or
outs
movs
adc
adc
mov
in
imul
sti
jno
xchg
cmp
jge
and
daa
leave
(bad)
xchg
lods
jnp
add
adc
jae
sbb
imul
mov
(bad)
push
xchg
sbb
stc
imul
mov
pop
xchg
pop
cs
pusha
push
adc
mov
popf
xchg
shr
pop
out
es
dec
scas
in
aaa
mov
call
mov
jecxz
icebp
lods
xor
mov
scas
(bad)
sbb
or
dec
shr
iret
sub
cld
rcr
mov
fwait
pop
push
pop
and
pop
stos
icebp
lds
mov
adc
popf
lods
push
test
mov
call
or
push
arpl
cmps
add
adc
int3
jb
and
fs
aam
nop
and
lahf
pushf
inc
mov
xor
movs
mov
jl
ret
mov
add
outs
in
and
pop
(bad)
pusha
sbb
pushf
retf
xchg
push
(bad)
(bad)
in
les
les
cmp
lock
repnz
mov
jmp
cmp
or
cwde
adc
imul
and
jp
xchg
dec
(bad)
aam
xchg
jno
cli
ret
jl
out
fs
dec
mov
adc
sub
dec
repnz
mov
ins
dec
test
mov
fdivrp
fdivr
out
push
lock
sbb
add
sti
repnz
iret
cli
data16
in
fsubrp
enter
mov
inc
lods
push
jns
movs
dec
retf
add
fisub
jp
ret
shl
test
stos
add
push
xor
or
(bad)
push
retf
mov
aas
mov
sbb
dec
and
sti
clc
cmp
xchg
mov
mov
rcl
adc
fstp
out
xchg
xchg
imul
mov
push
dec
pushf
aam
and
out
dec
test
or
sub
xchg
fimul
mov
cmp
gs
outs
mov
push
das
push
mov
out
stos
adc
sbb
sub
jno
cmp
adc
xchg
sbb
std
out
inc
xor
and
fstp
data16
rcl
add
dec
cld
add
push
jmp
inc
int3
cs
sbb
fst
jmp
sahf
dec
mov
push
pop
jmp
inc
pushf
pop
(bad)
nop
inc
retf
mov
xchg
test
je
popf
adc
sahf
mov
ret
mov
lea
mov
sbb
push
fdivr
vsubsd
add
repz
(bad)
sub
int3
mov
add
add
mov
adc
pusha
lea
push
and
mov
ret
jbe
inc
dec
inc
and
out
pop
jmp
dec
fucomp
les
ror
scas
int3
test
adc
jbe
fcomi
xlat
push
popf
xchg
jbe
cdq
push
mov
pop
ja
hlt
xor
jbe
pop
bound
sub
dec
adc
std
leave
xchg
into
jle
cdq
inc
into
dec
sbb
cld
cwde
or
rol
xchg
cmps
clc
shl
xchg
outs
xor
cmc
adc
enter
mov
add
data16
mov
(bad)
test
cdq
xchg
sub
sar
xor
add
ret
fsub
push
xchg
xchg
(bad)
das
xchg
lahf
mov
adc
ror
fidiv
adc
inc
jnp
dec
(bad)
repnz
xor
sub
loopne
dec
ins
pop
popf
dec
cmp
adc
pop
pop
sub
mov
or
xchg
nop
mov
cmp
pop
lss
in
mov
aas
outs
neg
popa
das
out
sub
cwde
cmps
cmp
jae
lods
dec
dec
or
pop
pop
mov
push
mov
sbb
mov
push
cmp
int3
dec
mov
and
xchg
sbb
retf
mov
jg
push
push
mov
gs
pop
cmp
jmp
daa
repz
mov
sub
out
inc
sub
int
push
outs
inc
adc
fs
push
jo
sub
jl
mov
sbb
xchg
mov
aaa
call
mov
mov
mov
out
test
jp
ror
mov
inc
mov
jns
mov
mov
aam
stos
aad
xchg
xor
out
ja
xchg
and
cmc
sahf
ror
lea
test
pop
call
popa
dec
test
sub
cmp
test
(bad)
jge
fdivr
int3
xchg
shr
cdq
jno
or
sub
push
into
outs
aad
les
fwait
mov
fs
ret
inc
lods
cdq
loopne
sub
cmp
sub
bound
out
mov
cli
(bad)
mov
aas
call
dec
jg
popa
les
in
hlt
jmp
fcomp
das
inc
push
aam
pop
(bad)
sub
or
sti
push
rcl
cs
scas
stos
mov
cmp
ror
and
jns
sbb
cmp
sar
pop
xor
retf
add
mov
jle
push
retf
lock
je
fcomp
(bad)
jg
dec
out
jnp
mov
retf
jle
xor
adc
ins
les
loope
arpl
mov
leave
scas
add
sbb
ds
nop
jle
lods
mov
mov
add
ret
rol
stos
xchg
and
outs
add
out
xor
xchg
cmp
sbb
lahf
jno
dec
int3
push
cwde
ds
cmp
bound
into
xor
jl
adc
mov
mul
das
and
sub
mov
in
sbb
xchg
bound
or
and
aam
cld
xchg
jmp
cs
jns
leave
mov
jae
icebp
sbb
fnsave
loope
shl
sbb
sub
in
cli
pop
jb
or
mov
cmps
mov
pop
mov
shl
mov
jl
xlat
sub
add
fild
sub
xor
les
jno
push
xor
test
xchg
mov
fnstenv
mov
dec
sub
es
scas
xchg
push
aas
xchg
sar
imul
ja
sub
fcomi
add
and
je
lea
scas
cwde
jmp
adc
push
jge
lods
mov
xor
data16
arpl
lods
stos
xchg
in
jge
add
adc
xor
xchg
xchg
mov
in
push
adc
dec
xor
nop
ficomp
xchg
mov
fstp
xchg
paddw
(bad)
hlt
int3
xchg
shr
ficom
leave
fsub
and
pop
out
dec
sahf
not
scas
fisub
imul
add
popf
jp
cmp
mov
dec
jle
jl
out
sbb
xchg
mov
mov
inc
xchg
xor
and
push
add
stc
xchg
xchg
popf
and
xchg
in
movs
ror
scas
dec
(bad)
mov
push
adc
xchg
sub
in
sti
pop
mov
iret
add
dec
jbe
pusha
imul
bound
in
cmc
shl
cmp
sti
daa
pop
xor
addr16
push
sub
dec
cld
frstor
push
or
shl
inc
xor
xchg
je
adc
std
jle
mov
xchg
xchg
(bad)
jne
and
or
bound
mov
jg
ja
jae
mov
pop
push
mov
xchg
ins
add
cmp
fadd
cmp
adc
adc
hlt
ins
ffree
mov
push
jl
xchg
jae
out
hlt
lea
in
dec
dec
call
imul
addr16
cmc
dec
ret
or
ss
jmp
pop
mov
dec
mov
sbb
fsubr
nop
adc
jmp
out
pop
je
sbb
gs
mov
mov
push
inc
ror
sub
push
inc
and
push
std
cmp
cwde
hlt
cmps
mov
xlat
xor
into
sbb
fldcw
sti
sub
popa
mov
jl
push
fsubr
adc
lock
cmp
test
xchg
rol
sub
jp
mov
adc
icebp
sti
fsub
xchg
sub
pushf
or
imul
adc
xor
retf
clc
fdivr
pop
cmp
fcmovbe
ret
int3
mov
in
dec
aas
and
pop
jge
mov
repz
sub
into
push
mov
dec
and
dec
popf
cmps
dec
lods
shl
es
adc
sbb
xchg
ds
add
call
addr16
pop
pop
arpl
movs
aad
sub
pop
sahf
mov
sub
dec
sahf
and
icebp
adc
adc
xor
xor
sahf
fldcw
mov
add
std
pop
jmp
or
jle
jle
fwait
xchg
mov
in
cli
or
xor
test
in
sbb
adc
sbb
(bad)
nop
bound
(bad)
rol
jno
mov
xchg
fidivr
pop
jmp
xor
and
pusha
push
ret
push
call
dec
or
fdiv
stc
jnp
int3
cli
(bad)
ins
inc
mov
cmp
xchg
xchg
mov
dec
cmp
adc
push
int3
enter
mov
mov
and
mov
or
adc
shl
xchg
inc
enter
xchg
mov
xor
cmp
(bad)
inc
rcr
jl
xor
(bad)
fisttp
(bad)
sub
icebp
ss
sar
pop
mov
stos
jp
jnp
gs
mov
cmps
push
ins
sbb
repz
add
jle
adc
je
pop
jno
xchg
aaa
inc
adc
fadd
xchg
in
pop
sbb
mov
jge
push
pop
sbb
arpl
xchg
dec
or
push
(bad)
leave
fadd
and
add
fidivr
or
jno
shl
push
and
push
xchg
cs
adc
inc
push
pop
jno
aaa
(bad)
shr
inc
jmp
sub
mov
mov
jae
mov
push
xor
nop
push
out
adc
jg
shl
push
or
scas
outs
sub
or
test
sub
shr
cdq
cmp
shr
xor
lods
fisub
inc
mov
lock
dec
xor
fisttp
fild
into
outs
in
imul
lahf
or
iret
imul
push
pop
sub
dec
ja
stc
mov
aas
push
push
(bad)
js
jmp
movs
outs
pop
enter
sbb
int3
hlt
ficomp
fimul
push
and
outs
nop
push
jne
outs
movs
mov
outs
adc
dec
iret
push
in
test
inc
pop
push
mov
push
adc
gs
daa
imul
and
inc
loope
arpl
ja
dec
jns
jnp
fnsave
sub
aam
cmp
pop
add
dec
sbb
int
and
mov
push
cmp
ret
mov
add
inc
pop
adc
jno
mov
or
xchg
loopne
pop
jmp
pop
shr
test
mov
lea
and
mov
pop
cmp
push
repz
fst
push
pop
jno
lods
mov
xor
pop
pop
xor
stos
test
out
mov
imul
xchg
ins
sbb
in
out
fsubr
rcl
cmp
dec
push
pop
clc
das
mov
inc
mov
fdivr
xor
xor
xchg
iret
add
mov
mov
scas
jne
shl
data16
add
and
fidiv
mov
ins
push
push
inc
shr
inc
mov
inc
pop
or
out
adc
in
call
xor
das
cmp
gs
sub
jb
mov
sub
add
cli
cld
mov
adc
push
in
bound
inc
and
das
mov
push
ret
inc
pop
dec
lea
jmp
out
mov
or
sbb
in
out
cmp
adc
jne
pop
dec
pop
daa
call
movs
push
in
repnz
jmp
mov
sub
inc
in
or
jmp
js
shl
fsubr
or
inc
std
pop
(bad)
jnp
push
je
or
lods
ss
sbb
mov
out
ins
sbb
mov
aam
jo
pop
mov
cmps
mov
outs
jp
cdq
adc
std
fisubr
jae
ror
clc
div
xchg
xchg
push
add
push
lods
aaa
gs
lea
dec
in
inc
imul
xchg
neg
in
add
arpl
ins
cmp
movs
fistp
push
imul
add
ret
cmps
mov
(bad)
lahf
fisubr
xchg
enter
sub
xchg
lock
pushf
or
iret
push
jge
push
cdq
loopne
jb
mov
cli
fcom
jmp
out
jg
jmp
clc
aas
push
mov
stc
xor
fldenv
jbe
mov
mov
sub
fdivr
btc
leave
cmps
cwde
and
xlat
sub
imul
ret
inc
out
rcr
adc
pop
xchg
jecxz
dec
adc
ret
retf
or
mov
sbb
dec
es
addr16
std
enter
das
imul
push
xchg
jge
out
push
inc
js
mov
mov
repz
jge
adc
and
pushf
lods
arpl
sar
inc
dec
mov
pop
outs
push
adc
popf
jno
pop
xchg
test
adc
sub
mov
and
test
imul
or
repnz
sub
mov
repz
aam
mov
cli
ins
jo
mov
mov
mov
mov
data16
enter
pop
jecxz
cmp
mov
push
test
enter
cld
sub
mov
stos
loop
pusha
ds
stos
cmp
loope
sti
xchg
(bad)
in
out
add
ds
mov
push
lods
in
dec
aam
sub
mov
(bad)
jle
popf
std
mov
add
retf
lds
cli
sbb
dec
push
movs
push
pusha
ret
stos
pop
out
sbb
repz
popf
pop
enter
sub
call
inc
sub
(bad)
aad
adc
dec
add
jne
outs
add
fld
sub
pop
mov
loope
push
xor
add
push
sub
mov
sbb
adc
push
dec
sub
cld
retf
mov
aad
push
xchg
in
pop
inc
arpl
cmp
jl
adc
rcl
adc
fdecstp
das
bswap
jp
dec
int
sbb
popf
fs
inc
out
ins
and
cmp
aad
sbb
stos
sbb
dec
lahf
(bad)
out
bound
inc
mov
mov
and
mov
xchg
add
gs
or
bound
cmp
jnp
or
cdq
mov
sub
pop
cmp
rcl
into
push
mov
shl
pop
mov
jne
repnz
jp
mov
(bad)
repnz
dec
adc
sbb
test
push
mov
xchg
icebp
fwait
push
pop
mov
addr16
iret
cmpps
leave
dec
pop
mov
into
es
popf
push
sub
push
in
outs
jae
bound
inc
scas
cmp
and
mov
mov
imul
dec
jbe
mov
mov
sar
aaa
sbb
mov
stos
fcmovnbe
mov
(bad)
pusha
jo
and
adc
test
push
adc
inc
inc
stos
mov
adc
inc
dec
sar
push
lock
les
sub
mov
sbb
sbb
test
(bad)
jno
add
movs
out
xchg
push
xchg
in
jl
pop
popa
lahf
and
in
sahf
fadd
popa
rol
push
fxch
mov
(bad)
dec
popa
into
mov
xor
jae
cwde
movs
add
enter
loope
cmp
ror
adc
jo
mov
test
xchg
jmp
mov
cwde
mov
in
dec
ficomp
sti
ror
cld
push
movs
mov
cmp
sbb
cmp
je
fwait
addr16
enter
sub
sar
push
pop
mov
xor
lods
cmp
jl
leave
fld
xchg
ds
retf
clc
push
(bad)
cld
popa
jg
jmp
pop
cmps
or
(bad)
cs
test
sar
mov
cmp
stc
jnp
fld
sub
cdq
repnz
test
aas
and
xor
pop
cmc
in
test
shr
xchg
mov
int
addps
fs
in
dec
js
pusha
jnp
xchg
pop
test
gs
jle
(bad)
movs
clc
ds
nop
adc
out
retf
popf
sbb
aas
sub
jns
daa
cld
mov
hlt
add
inc
sbb
popf
repz
or
jg
pop
pop
mov
call
sub
ja
add
lods
xchg
leave
mov
(bad)
and
dec
push
inc
retf
neg
cmp
add
(bad)
sti
xchg
lds
in
and
ret
cmps
mov
aad
or
inc
mov
ja
bound
jle
dec
pop
mov
(bad)
xchg
inc
pop
adc
in
and
movs
cli
std
arpl
shl
or
shl
inc
push
pop
mov
xor
pop
jle
jb
aad
arpl
dec
inc
jae
inc
cmp
add
mov
cld
mov
or
mov
sar
dec
jbe
mov
mov
dec
fdivr
sub
sbb
jnp
inc
jno
mov
mov
and
sub
jnp
outs
into
je
xchg
(bad)
sti
mov
lods
test
dec
addr16
aad
pop
pop
jp
iret
xchg
add
lods
loopne
adc
scas
sbb
mov
jp
sbb
gs
push
sar
mov
pop
lds
inc
xchg
sbb
bound
jns
out
jae
sbb
pop
cli
aas
dec
rol
movs
xor
xchg
mov
xchg
dec
xchg
push
sub
and
in
pop
data16
mov
mov
imul
inc
js
test
sahf
(bad)
mov
je
xchg
sub
out
lahf
sbb
pop
sub
sbb
getsec
or
test
mov
jne
outs
mov
mov
outs
adc
and
cmps
loope
push
aas
lods
push
adc
add
call
cmp
imul
out
jl
lods
ins
xchg
pop
shl
and
adc
sbb
cmp
mov
or
out
ins
lahf
dec
hlt
push
(bad)
out
and
jo
sbb
into
and
out
mov
jo
sub
cmps
mul
cmps
mov
fild
sub
inc
(bad)
imul
out
retf
and
mov
sub
pop
popf
movs
rcl
push
xchg
add
push
xor
mov
sub
movs
enter
inc
(bad)
pop
ret
cmp
jle
adc
addr16
repz
enter
mov
into
cmp
je
or
xor
sub
leave
xchg
jl
fisubr
or
aam
pop
pushf
mov
cli
sti
pusha
pusha
out
xor
hlt
cmp
pop
in
in
lahf
jo
iret
lahf
or
inc
mov
scas
xchg
hlt
movs
(bad)
sbb
outs
push
out
out
out
cmp
mov
mov
(bad)
xchg
iret
inc
imul
gs
iret
movs
or
mov
jb
addr16
outs
xchg
pop
xor
pop
cmp
cmp
jo
mov
and
in
pop
std
ss
mov
mov
sub
movs
xchg
sub
pminub
fisttp
imul
sbb
or
ror
push
fstp
add
mov
into
inc
outs
lods
jo
jae
xchg
call
add
clc
je
inc
inc
aam
jb
repnz
add
ds
push
jp
adc
(bad)
jno
adc
ret
dec
inc
pop
mov
jmp
dec
lock
(bad)
sbb
adc
fs
movs
scas
aad
(bad)
retf
mov
call
shl
dec
xchg
pop
or
das
or
cs
stos
dec
ror
mov
aad
daa
push
ins
pop
mov
jp
pushf
in
push
enter
jg
cmc
xlat
aad
or
adc
popa
xchg
(bad)
push
int
mov
repz
clc
call
inc
xchg
dec
inc
or
and
mov
in
lods
hlt
bound
shr
cmp
outs
popf
out
sub
cmp
rol
add
cmp
aam
adc
push
and
xor
jne
shl
pop
mov
int
add
push
(bad)
call
pop
push
ja
hlt
(bad)
adc
mov
arpl
ret
pop
leave
rcl
repnz
aas
scas
or
mov
jo
xor
test
(bad)
dec
jle
out
push
ss
cmp
out
dec
inc
or
fwait
loop
mov
movs
sahf
cmp
(bad)
jle
push
push
xchg
mov
call
or
xchg
mov
mov
pop
and
ret
rcr
xchg
jg
mov
cmp
sub
lods
dec
sbb
jno
sbb
mov
and
shl
mov
ins
mov
sbb
repnz
mov
fisub
imul
push
xchg
jne
out
sbb
enter
stos
inc
in
sbb
adc
imul
push
addr16
cli
leave
mov
cmps
add
and
xchg
mov
ds
ins
and
mov
mov
xor
jnp
push
imul
adc
cli
or
inc
jmp
xor
out
push
dec
push
xchg
ds
shr
mov
movs
fimul
cmp
nop
pop
pop
test
std
xchg
adc
or
fnstsw
xchg
fidivr
and
add
nop
mov
loope
adc
jecxz
mov
jno
daa
pop
cdq
je
icebp
sti
movs
stc
xor
mov
pop
sub
jle
imul
adc
inc
repnz
jo
ror
add
imul
adc
rol
dec
aad
mov
adc
adc
shr
pop
xor
xchg
and
ins
mov
div
cmc
loop
lahf
jmp
test
sub
jbe
cmps
and
mov
stc
data16
(bad)
ret
pushf
call
sub
int3
lahf
pusha
ret
push
repz
adc
add
push
dec
add
xchg
test
mov
hlt
int
retf
retf
shr
mov
test
in
pop
ja
cmc
int
stc
push
aas
imul
push
sub
sub
inc
ins
cli
xchg
dec
cli
cmps
cmps
jge
movs
fstp
ja
mov
dec
add
cli
mov
pop
cld
push
inc
add
cmp
stc
jmp
stos
ss
jb
lods
or
add
xchg
mov
cmp
mov
cmps
and
pushf
mov
push
mov
fdivr
rol
test
rol
test
push
lods
in
push
mov
pop
cdq
xor
mov
mov
(bad)
cmp
lds
dec
sahf
jae
jne
mov
mov
test
int3
cmp
fldlg2
lods
inc
enter
out
dec
dec
lods
jae
pop
int3
mov
shr
jnp
sti
cmp
scas
push
and
mov
add
inc
das
mov
inc
jae
clc
lahf
rcr
les
and
pop
cmp
adc
push
es
fwait
jecxz
dec
(bad)
jne
add
jns
or
and
scas
add
lock
adc
add
mov
shl
and
repz
inc
or
mov
push
sub
mov
lods
push
das
outs
push
mov
mov
xor
test
pusha
std
ja
cmp
cmp
fidivr
cmp
rcl
aaa
ins
icebp
iret
xchg
xor
jl
jns
mov
jg
mov
les
jae
aad
fnstenv
inc
xor
jns
ret
adc
mov
push
add
jbe
arpl
clc
arpl
push
into
js
cmp
loop
stos
pop
xlat
rcl
cld
xor
leave
cli
in
into
or
(bad)
call
test
pop
mov
dec
(bad)
xlat
hlt
fstp
mov
sbb
sub
retf
inc
int3
cmp
jge
or
imul
dec
rcl
mov
xchg
inc
repz
cs
enter
push
retf
in
jl
in
sbb
je
test
mov
lock
jae
inc
test
lahf
pop
sbb
sbb
call
cli
cmp
outs
pop
sbb
sbb
sahf
cld
movs
xchg
mov
push
jb
xor
repnz
jp
inc
mov
and
inc
repnz
cmp
jmp
jmp
mov
push
xchg
cmp
arpl
loop
xchg
aad
(bad)
shl
xor
out
enter
repz
jl
scas
push
lds
push
mov
ss
jae
mov
inc
mov
in
mov
inc
sti
sbb
jecxz
add
mov
push
(bad)
and
ret
cmp
or
mov
stos
or
rol
or
sbb
push
dec
add
hlt
movs
cmc
mov
shl
not
or
shl
(bad)
call
aas
cmps
or
rcl
dec
jle
out
mov
in
cmp
mov
aad
les
jecxz
adc
mov
mov
add
out
out
add
mov
mov
ret
mov
mov
pop
push
imul
lock
inc
movs
add
jb
movs
adc
xchg
(bad)
fs
push
in
fidiv
jle
add
or
out
call
sbb
fstp
pop
mov
sbb
mov
scas
pop
into
push
retf
mov
inc
add
loopne
inc
out
les
lods
outs
pop
inc
pop
leave
jmp
ja
jl
clc
xor
aaa
jmp
fidiv
dec
jl
in
frstor
add
xchg
mov
dec
retf
push
mov
xchg
sbb
out
pop
test
in
mov
fcom
jecxz
jns
jp
(bad)
repz
int3
xchg
or
test
pusha
inc
mov
fbld
pop
js
popa
repnz
push
(bad)
imul
mov
sub
xor
pushf
push
retf
cli
pop
mov
jecxz
add
out
sti
or
dec
lods
jmp
movs
and
popa
lds
adc
inc
pusha
and
cmp
adc
mov
fwait
in
fild
inc
pop
jg
dec
out
sub
cwde
call
cdq
iret
jne
jnp
sub
scas
push
lods
cld
xchg
sub
cmp
xchg
adc
rcr
cmp
cmp
add
xor
inc
mov
xor
pop
test
mov
ds
rcr
xor
xchg
add
xchg
mov
ss
add
cwde
shl
dec
jo
mov
mov
xchg
and
push
push
jp
cmps
imul
xchg
xor
lea
scas
scas
push
popa
add
neg
adc
add
je
mov
hlt
push
ret
cwde
inc
mov
loop
js
lds
sahf
dec
aaa
jg
enter
loop
mov
add
pop
mov
mov
cmps
inc
(bad)
xchg
cmps
dec
aas
scas
pop
cmp
cli
dec
push
cmp
mov
clc
push
sahf
dec
pop
int3
cmp
pop
pop
cdq
adc
push
or
addr16
inc
cmp
sbb
inc
lahf
rol
push
cmp
retf
dec
out
jg
in
retf
retf
es
js
dec
mov
(bad)
cmps
stc
sub
and
das
jmp
pop
push
loopne
dec
sbb
or
popf
jge
xchg
pop
loopne
add
addr16
retf
daa
sub
push
xchg
int
xor
into
and
ror
inc
mov
sbb
retf
and
mov
sbb
xchg
test
bound
in
aaa
cli
stos
cs
dec
xchg
data16
cmp
ins
bound
sbb
ins
test
add
push
and
movs
push
scas
test
fstp
jmp
out
imul
stos
cs
mov
stos
pop
pushf
fadd
lods
stos
test
inc
into
cmp
mov
add
(bad)
arpl
es
push
outs
fisttp
loop
xchg
stos
nop
inc
push
test
fld
cli
outs
pop
pop
and
jge
jbe
pop
add
dec
cs
pushf
jmp
and
push
mov
int3
(bad)
jmp
dec
add
cmp
in
mov
sbb
mov
xchg
mov
xchg
inc
lods
sar
ja
leave
cmps
pop
inc
mov
sub
pop
aas
call
int
shl
push
lea
jbe
pop
xchg
push
xchg
xlat
cmp
dec
add
or
jge
cmp
mov
sub
mov
jmp
lock
cmp
xchg
xchg
xor
sub
or
and
xchg
mov
jno
jl
and
dec
ror
in
imul
jmp
enter
add
fcomip
push
inc
dec
dec
inc
xor
stos
add
jae
sub
mul
pop
call
pop
dec
mov
or
pop
jo
jns
leave
xor
or
inc
cs
dec
mov
and
mov
mov
(bad)
add
jne
adc
arpl
pop
mov
mov
adc
push
call
xor
(bad)
rcr
xor
and
adc
enter
mov
pushf
ds
adc
stc
sub
into
stos
shl
xor
xor
loope
cmps
mov
inc
inc
cmp
cmp
adc
xchg
inc
fcomp
fs
retf
push
adc
in
leave
push
sbb
(bad)
dec
(bad)
ja
test
pop
mov
loope
outs
mov
pop
mov
xor
mov
stc
mov
dec
dec
xchg
dec
ins
adc
jmp
ret
cmps
in
push
adc
xchg
xchg
loop
add
push
mov
iret
or
push
in
pushf
and
inc
sbb
jo
add
or
or
dec
test
dec
sub
add
clc
mov
cmp
and
loop
or
dec
lds
adc
sub
sahf
xor
sub
(bad)
sbb
jg
fmul
add
outs
hlt
icebp
mov
adc
outs
jle
xor
jne
loopne
ja
stos
and
mov
adc
sbb
or
pop
xchg
mov
xor
nop
sti
mov
adc
jge
inc
push
sub
faddp
movs
xchg
xchg
add
xchg
test
movs
inc
sub
les
je
xor
jle
jae
movs
jle
push
sahf
pusha
cdq
jo
sbb
dec
lds
cmp
(bad)
adc
into
out
ins
sub
mov
sbb
(bad)
pop
sar
(bad)
dec
sub
xchg
int3
push
mov
push
xchg
push
sbb
sbb
mov
test
mov
dec
dec
stc
repz
add
xchg
push
mov
das
sub
mov
and
cwde
data16
dec
push
sahf
jp
xchg
sub
mov
jns
idiv
mov
out
push
sbb
movs
and
mov
test
mov
js
rol
div
inc
ficom
add
lea
pop
es
adc
test
pop
loopne
cmp
movs
or
cmp
push
jmp
or
(bad)
pop
enter
jmp
xchg
xor
jb
fsubr
and
int
mov
or
sbb
cmps
mov
fld
neg
jg
inc
rcl
mov
rcr
rcr
mov
cdq
mov
dec
mov
inc
cmp
clc
rcl
stc
fs
rcl
outs
nop
in
add
or
push
add
je
xchg
jmp
in
movs
stos
mov
in
pop
lods
mov
pop
(bad)
lds
pop
fs
xchg
mov
call
(bad)
rcr
scas
loope
fs
sub
dec
retf
add
dec
stos
push
inc
mov
in
popf
fidivr
int
in
adc
cmp
frstpm(287
imul
jl
mov
outs
(bad)
push
or
mov
jle
aas
mov
xor
imul
and
lea
ja
lods
push
ins
stos
mov
lods
cmps
mov
cdq
and
push
mov
pusha
xchg
js
add
cld
pop
and
call
inc
fist
imul
cs
pop
and
icebp
rcl
daa
loopne
push
or
sahf
push
lods
das
lock
out
sub
sub
push
fisubr
scas
pop
jbe
sbb
(bad)
sahf
jmp
cmps
loop
fsubr
dec
xchg
lods
enter
cld
inc
mov
mov
add
clc
pop
cmp
ds
sbb
call
ja
shl
sbb
or
push
iret
pop
pop
stos
sbb
and
lea
enter
inc
(bad)
mov
fwait
cs
and
loop
lods
or
jbe
ret
push
iret
test
iret
dec
lods
adc
and
or
sub
sub
sbb
jne
add
and
call
push
retf
outs
pop
pop
mov
sbb
jbe
mov
xor
or
leave
and
cmp
inc
xor
xor
pop
dec
retf
iret
lea
adc
cmps
push
aam
sbb
fstp
arpl
fwait
mov
call
imul
xlat
and
lahf
ror
mov
add
push
push
mov
movs
int3
jno
push
xchg
rol
inc
mov
pop
cwde
pusha
xchg
sub
sti
ret
mov
pop
movs
repnz
adc
leave
adc
sbb
daa
shl
(bad)
dec
fwait
mov
in
jle
or
test
mov
inc
ror
das
nop
dec
adc
push
mov
sahf
xor
ds
call
idiv
bnd
fdiv
push
cmc
out
inc
or
daa
das
push
jecxz
out
rol
fs
dec
xchg
das
nop
xchg
loop
mov
adc
arpl
jle
aaa
arpl
mov
jae
sub
mov
dec
pop
pop
aaa
cmp
cmps
mov
vpsubusw
dec
scas
add
div
xchg
push
ins
sub
pop
mov
scas
test
mov
add
jns
into
cdq
rcl
or
sahf
test
sub
and
pusha
(bad)
jbe
and
or
fst
ins
sbb
xchg
cmp
inc
push
lods
int
mov
movs
pop
jae
dec
sbb
stos
mov
or
(bad)
sbb
das
cmpxchg
pop
push
inc
fwait
or
push
add
arpl
pop
add
movq
fs
cdq
jge
push
std
(bad)
xchg
xor
popf
pop
and
out
xchg
int
mov
lds
jp
mov
shr
out
push
and
leave
push
push
fcom
push
push
jl
mov
push
sahf
mov
ror
js
mov
mov
fdiv
jg
cmp
cli
mov
retf
fcmovnbe
fmul
adc
gs
jg
outs
and
or
cmp
aas
sub
mov
stos
cld
in
mov
fcom
int
jg
cwde
cmp
popf
push
push
inc
int3
vpsllw
fadd
sbb
ins
dec
xor
xor
push
xor
mov
scas
popa
pop
loope
push
inc
iret
xor
test
shl
and
movs
lahf
lds
xlat
arpl
(bad)
mov
fwait
cmp
retf
mov
cld
sbb
jg
test
push
or
add
jge
cmps
pushf
lods
out
adc
imul
inc
adc
out
mov
push
dec
in
rcr
pop
div
mov
jne
outs
hlt
lods
int
xor
adc
js
mov
lods
sub
pop
cmp
data16
jmp
call
test
sbb
test
cmc
mov
sub
sbb
push
dec
leave
add
leave
and
xchg
adc
rdtsc
inc
imul
pop
pop
mov
inc
inc
cmp
(bad)
jb
inc
push
mov
call
push
sub
jo
sub
lds
into
xor
cmp
sub
ja
mov
shl
pop
jmp
mov
adc
and
inc
mov
jae
pusha
xlat
mov
daa
add
loopne
es
mov
imul
xor
(bad)
adc
jecxz
fs
mov
or
mov
xchg
sub
in
scas
xor
hlt
jns
cmp
mov
scas
in
sub
arpl
mov
(bad)
loopne
inc
inc
hlt
fwait
jb
out
fidivr
xor
xor
test
int3
daa
daa
jge
mov
lea
mov
out
cmp
mov
int3
stc
lock
inc
leave
push
jle
lock
repz
in
dec
std
jns
repz
xor
and
mov
jge
mov
into
retf
rcl
push
push
jne
lea
sub
into
xor
nop
jne
xchg
mov
and
push
cmp
jno
sbb
sub
popf
jo
add
xor
cli
mov
ins
aam
rcl
scas
xor
shr
inc
iret
xor
ins
inc
out
inc
fs
addr16
pop
cmps
jecxz
mov
adc
imul
mov
xor
mov
mov
jns
mov
push
adc
cmc
jp
in
sbb
mov
out
xchg
inc
inc
pop
sar
sub
or
ret
push
xlat
(bad)
adc
retf
repnz
(bad)
or
cmp
sub
stos
xor
fldcw
jecxz
(bad)
jl
jae
sbb
dec
leave
mulps
imul
popa
inc
cld
lods
pop
dec
aas
sbb
jnp
retf
add
xchg
stos
in
push
mov
(bad)
fistp
out
rcl
int3
inc
ins
sub
jae
fistp
(bad)
ja
test
add
cmp
inc
sar
mov
push
(bad)
fisub
mov
mov
test
scas
test
aaa
sti
mov
(bad)
push
jbe
mov
inc
mov
(bad)
jmp
jne
inc
cmp
mov
jns
sbb
vdivps
arpl
push
fldcw
idiv
popa
pop
iret
lahf
fst
push
add
jbe
sbb
and
nop
cdq
cmps
pusha
cmp
shl
inc
retf
mov
or
mov
je
push
xchg
or
out
out
call
ret
cmp
jmp
or
loopne
nop
add
cmp
aas
jb
xchg
mov
jmp
xlat
add
imul
(bad)
shr
xchg
mov
mov
xor
pop
cdq
mov
mov
ins
mov
xchg
push
mov
aas
jle
lahf
cmps
adc
out
push
pop
fwait
ss
ret
fnsave
sub
cmp
sbb
add
pop
popf
pusha
(bad)
mov
stos
ret
or
mov
mov
fisttp
xor
jle
add
test
je
loop
mov
ror
jge
outs
mov
xchg
and
loopne
repz
and
aas
mov
add
adc
data16
mov
sub
mov
sbb
call
sbb
jmp
or
pop
inc
(bad)
xchg
xor
sub
mov
movs
or
adc
xor
or
repnz
jp
mov
pop
sar
rcr
pop
add
in
mov
ja
mov
in
adc
add
(bad)
jno
mov
dec
xor
mov
push
jle
mov
dec
retf
sub
cmp
push
(bad)
inc
lods
outs
loop
inc
loope
nop
das
loop
scas
or
or
movs
or
jmp
jb
ss
push
movs
mov
shr
fsubr
ds
push
fiadd
inc
add
adc
outs
mov
jl
cli
pop
xchg
xor
cmc
shl
mov
push
fisttp
les
mov
js
aas
repz
mov
cmp
or
vmovddup
mov
push
test
sbb
cmp
jne
cmp
aas
cs
or
mov
mov
bound
jae
xchg
repz
and
and
popa
adc
addr16
cmp
pushf
daa
xor
(bad)
imul
jmp
imul
fisttp
pop
inc
rol
clc
je
int
into
xchg
data16
inc
mov
popa
cmp
dec
mov
and
inc
xor
aam
dec
and
jne
xlat
xchg
enter
fimul
cwde
adc
xchg
movs
mov
in
jmp
jae
xchg
jns
sub
dec
or
addr16
jmp
js
mov
inc
(bad)
in
or
lock
jmp
cli
sahf
fiadd
stc
mov
outs
inc
jmp
stc
sub
and
jecxz
jmp
retf
inc
xchg
pop
pushf
mov
test
and
test
sub
mov
adc
das
stos
pop
sub
loop
mov
pushf
inc
and
(bad)
adc
lahf
jnp
fiadd
xchg
mov
mov
loopne
mov
sub
in
xor
jns
inc
arpl
call
jb
or
mov
aas
sti
xor
ja
out
ja
mov
aad
(bad)
je
(bad)
lea
xchg
jl
fcom
or
movs
into
aam
push
inc
(bad)
pop
or
xchg
(bad)
fidivr
lahf
adc
loope
mov
dec
dec
or
inc
pop
cmp
sbb
pop
data16
lea
mov
push
jno
outs
call
xor
adc
push
and
pop
mov
les
push
aam
mov
mov
(bad)
xor
daa
fcom
adc
sub
jmp
adc
fisttp
out
adc
push
inc
pop
ficomp
jb
sub
jb
adc
pop
js
iret
test
and
es
mov
and
cmp
and
jne
jmp
add
test
push
outs
leave
sub
sti
pop
and
dec
out
retf
ds
clc
inc
pop
mov
push
jecxz
mov
imul
and
mov
shl
cs
or
xor
and
popa
sub
xor
and
mov
xchg
push
jp
xor
sub
push
in
mov
call
add
push
mov
outs
adc
push
jge
push
jo
mov
xchg
mov
xchg
cmp
in
mov
inc
sbb
add
imul
sbb
jnp
inc
add
xchg
sti
jae
adc
popf
push
popf
mov
jle
mov
aam
lahf
jmp
fstp
loop
stos
fmulp
les
sbb
pop
or
sahf
test
pop
inc
leave
loop
pop
aas
repz
adc
xchg
sub
je
xor
push
cld
inc
out
jnp
mov
sbb
mov
js
(bad)
xlat
in
mov
rcr
(bad)
stos
push
jmp
push
sub
(bad)
xor
jecxz
xor
xchg
mov
mov
xor
xchg
cmps
mov
mov
je
push
fdiv
dec
call
sub
jmp
dec
fcomp
ss
push
jbe
push
inc
or
inc
jne
scas
mov
dec
ja
inc
sbb
add
mov
adc
outs
imul
inc
scas
leave
pop
jo
pop
sbb
call
mov
lds
dec
lods
cld
push
xchg
pop
xor
aas
xor
or
enter
push
enter
xchg
mov
(bad)
cmp
test
int
add
je
push
cmp
loope
test
jecxz
pop
push
loop
dec
sti
fimul
aam
mov
loop
mov
mov
pop
je
jo
std
dec
xor
sub
cwde
pusha
jne
hlt
ins
shr
inc
and
xor
fs
(bad)
sbb
mov
mov
mov
xlat
adc
mov
jmp
xchg
sbb
fldenv
out
es
out
loope
xchg
cwde
adc
cmp
add
adc
xor
adc
cli
not
push
cmc
jmp
dec
int3
retf
outs
fisub
push
pop
mov
dec
mov
jo
frstor
pushf
loop
(bad)
dec
jns
dec
jge
popa
inc
inc
push
outs
cmp
js
and
fadd
xlat
aad
(bad)
retf
stc
jge
inc
aad
in
imul
fwait
out
dec
or
lods
fwait
call
pop
sub
push
mov
push
cmp
dec
loopne
jb
shl
sub
mov
popf
push
add
xor
fnstsw
jns
(bad)
dec
gs
cli
cmps
mov
scas
fcmove
adc
add
jno
xchg
test
dec
mov
inc
sbb
shl
inc
test
sti
in
(bad)
into
inc
cwde
mov
jge
into
push
or
mov
(bad)
jnp
enter
adc
mov
and
push
jge
mov
std
lods
push
pop
inc
leave
dec
es
mov
cmc
pop
mov
or
lahf
or
shl
pushf
rol
fldenv
lods
sub
popf
add
(bad)
retf
sbb
fwait
ja
jnp
mov
mov
jae
gs
sbb
xor
les
sub
ss
les
cli
mov
test
cdq
jne
mov
movs
mov
sbb
inc
sar
push
pop
cmp
inc
ins
int
cli
sub
sub
push
mov
push
mov
inc
inc
xchg
(bad)
ja
shl
push
ins
adc
xor
sbb
adc
ret
fnsave
stc
in
xchg
mov
arpl
dec
cmps
icebp
retf
jmp
jp
push
push
cmp
xor
mov
out
xor
cdq
out
push
loopne
(bad)
push
aas
shl
push
dec
push
push
xchg
push
call
ins
jno
(bad)
mov
test
ret
push
jg
ins
push
in
cld
outs
jne
sub
imul
sti
les
(bad)
xor
cmps
data16
ins
add
mov
ins
in
sbb
es
retf
sbb
jne
sar
lock
jmp
dec
adc
in
(bad)
dec
cli
retf
in
cmp
aaa
inc
pop
push
pusha
jl
xchg
jmp
xor
hlt
in
out
xor
mov
adc
mov
or
daa
xor
mov
mov
and
(bad)
out
push
add
shr
inc
sub
je
ins
arpl
dec
lds
push
adc
(bad)
sub
rcr
sub
stos
(bad)
shl
pop
in
call
adc
dec
cmp
push
mov
mov
pop
push
fnsave
mov
sbb
retf
call
and
push
xor
les
xchg
push
mov
jmp
test
mov
xchg
fistp
aas
sub
dec
data16
mov
adc
test
mov
jb
sbb
(bad)
fdivr
sub
mov
std
ja
or
mov
or
adc
in
cmp
(bad)
sbb
and
mov
xchg
cmp
fs
and
lock
cmp
adc
aam
gs
pop
addr16
out
aas
ins
sbb
mov
push
xor
in
jmp
adc
int3
fisttp
mov
sar
xchg
out
stc
or
and
fnsave
outs
enter
add
and
fnstsw
dec
mov
ds
test
jno
pop
jb
cmp
jge
adc
mov
aaa
cld
(bad)
imul
(bad)
std
cli
in
sbb
xchg
dec
cmp
repz
outs
(bad)
cld
adc
adc
inc
jae
sbb
xor
sbb
jnp
shr
sbb
or
mov
ficomp
sub
inc
inc
push
clc
mov
dec
xchg
jne
mov
xor
lea
out
inc
mov
inc
je
fst
add
jmp
fisubr
cmp
sub
and
(bad)
leave
inc
inc
in
inc
mov
fwait
inc
stos
mov
cmps
mov
out
test
ss
dec
test
jmp
cmp
iret
loopne
mov
or
jnp
je
sbb
cmp
mov
out
dec
sbb
jmp
cmps
add
jge
call
(bad)
cmp
lds
loopne
(bad)
cmc
and
jno
mov
(bad)
pop
(bad)
jg
fld
sub
shl
outs
mov
jno
or
pushf
retf
out
dec
cwde
dec
push
mov
and
sahf
jl
inc
ins
push
out
enter
push
sub
and
jb
(bad)
rol
xor
shl
or
lods
xor
sub
das
or
lds
pop
adc
mov
test
mul
jo
push
mov
sti
nop
pushf
fst
repz
das
in
dec
out
inc
inc
mov
in
mov
ret
dec
sar
jl
mov
push
rol
outs
mov
pop
mov
push
clc
aaa
sbb
xchg
fst
xchg
jl
mov
stos
popf
sbb
iret
xchg
not
mov
loopne
loop
stos
test
cmp
push
sti
outs
enter
inc
aad
retf
sti
bnd
movntps
addr16
cmpxchg
push
xor
mov
ja
aam
scas
mov
iret
iret
mov
outs
enter
aas
stos
in
mov
loopne
lods
inc
mov
(bad)
push
lds
arpl
scas
in
or
aad
mov
xor
push
mov
stc
scas
xchg
out
mov
rol
fidiv
push
and
(bad)
out
rol
fcomp
(bad)
sub
jo
adc
cdq
loope
push
push
and
lods
js
mov
dec
popa
pusha
xchg
jl
les
inc
daa
jp
neg
or
pop
push
inc
fpatan
mov
and
stos
fsubp
pop
inc
and
stc
sub
les
and
mov
inc
mov
das
xor
sbb
cmp
xchg
pop
xchg
xchg
lods
std
push
mov
pminub
sar
in
mov
jae
inc
push
and
repnz
mov
xor
mov
cmp
cmp
push
sbb
xchg
sar
mov
clc
stos
retf
adc
pop
jne
fcmovnb
push
cmps
leave
jne
jb
in
inc
fs
addr16
cli
mov
fwait
and
pop
outs
ficom
mov
in
sbb
test
cdq
call
gs
scas
mov
push
adc
xchg
xor
jg
pop
push
pusha
retf
lock
(bad)
mov
in
lods
pop
sub
shl
dec
sbb
push
ins
sahf
retf
xor
out
test
cwde
pop
mov
jnp
cdq
push
push
sbb
out
ja
pop
(bad)
push
push
or
scas
movs
jecxz
xor
xchg
imul
cs
and
sbb
imul
pusha
and
cmps
mov
sub
mov
aas
lahf
(bad)
xor
jg
jle
sbb
jno
scas
or
sbb
nop
inc
in
(bad)
ror
mov
int3
adc
adc
cmp
xchg
jns
lahf
xor
fidiv
or
mov
int3
mov
out
int3
cmp
inc
xlat
aaa
xor
xor
cld
mov
adc
push
sub
pop
js
stc
lahf
daa
retf
mov
inc
dec
pop
xor
test
sbb
xchg
sbb
pop
push
sub
jbe
lods
imul
sub
ja
fistp
aas
jl
ins
int
ror
cmp
vsubss
jge
adc
into
icebp
mov
movs
test
add
in
mov
int
sub
js
push
loopne
stos
in
(bad)
sti
ins
cmps
mov
test
mov
pop
mov
or
adc
icebp
in
jmp
mov
mov
movs
mov
push
(bad)
lods
loopne
ds
shr
mov
and
jg
cli
ret
popf
call
sub
push
adc
iret
mov
imul
xchg
call
stos
xor
es
mov
dec
imul
aas
std
int
add
xchg
jle
or
pop
sahf
mul
pushf
std
push
dec
adc
stc
popf
mov
cmp
and
push
xchg
push
jb
xchg
movs
and
pop
mov
arpl
inc
mov
adc
test
mov
mov
sti
rol
repnz
pop
jmp
cdq
shl
mov
sbb
adc
adc
xor
mov
mov
and
xchg
ret
test
push
sub
inc
stos
fld
mov
or
mov
ins
sahf
mov
sar
xchg
pop
sbb
inc
mov
dec
bound
sub
mov
jbe
xlat
or
dec
movs
pop
mov
arpl
cmc
into
(bad)
scas
xchg
jmp
xor
add
outs
les
sbb
hlt
xchg
dec
sub
mov
out
xor
pop
adc
mov
dec
shl
pop
adc
mov
pop
xchg
mov
xor
sbb
or
inc
ins
mov
cdq
jb
ror
ret
mov
adc
addr16
add
pushf
retf
sbb
add
sbb
dec
jbe
jl
retf
les
fldcw
xchg
inc
(bad)
aam
xor
pop
push
mov
clc
out
cdq
bound
repz
je
xchg
jno
or
cmp
xor
repnz
adc
scas
(bad)
xchg
jge
into
add
jno
cmc
add
ret
repnz
sub
adc
xchg
inc
ds
ins
push
popf
adc
cmp
fdivp
xchg
stos
or
out
jno
jg
call
sub
xchg
xchg
xor
dec
cld
pop
mov
inc
(bad)
jnp
dec
(bad)
xor
pop
cmps
mov
sbb
(bad)
into
inc
enter
and
addr16
aas
jae
retf
pminsw
fwait
and
in
inc
mov
inc
mov
mov
jle
xchg
shl
mov
(bad)
pop
jmp
add
inc
push
shr
dec
or
ficomp
rcr
stos
sbb
fcomp
inc
push
pop
cmp
mov
outs
icebp
test
cmps
xchg
rol
push
jns
dec
(bad)
(bad)
rcl
retf
scas
mov
bound
repnz
mov
cli
je
aad
xchg
xchg
inc
addr16
shl
mov
cmps
jmp
pop
mov
jno
cli
mov
aaa
jp
enter
(bad)
clc
lds
xchg
lods
push
mov
retf
pop
mov
mov
xlat
icebp
and
push
sbb
shl
mov
xchg
test
jbe
ins
push
fidivr
inc
xchg
xchg
jle
ret
icebp
test
jno
int
or
dec
shr
push
push
int3
mov
cli
pop
add
dec
inc
push
call
fst
sbb
cli
or
mov
push
mov
fst
push
mov
sti
jno
fbld
xchg
or
popa
arpl
addr16
jb
cdq
bound
mov
shl
add
fwait
xchg
(bad)
iret
loopne
ret
inc
test
xor
icebp
mov
mov
cmp
lds
test
mov
repz
cld
cmp
cmp
mov
je
into
ficomp
dec
dec
fwait
or
fist
in
cmc
daa
mov
sbb
dec
push
push
or
jp
fist
adc
int3
inc
gs
pop
mov
das
jae
lock
ficom
movs
jg
sub
add
out
addr16
xlat
dec
mov
pushf
in
mov
movs
imul
push
stc
jmp
ds
pop
pop
fstp
cmp
dec
jp
or
sahf
mov
int3
xor
dec
and
loopne
sbb
out
sub
pop
arpl
xchg
jg
jb
es
pushf
movs
(bad)
jecxz
mov
fs
imul
imul
pusha
jns
movs
(bad)
int
stos
retf
retf
push
mov
cmp
or
pop
cmc
mov
dec
and
mov
test
daa
xor
dec
jbe
rcr
xor
pushf
in
sahf
mov
xor
popa
mov
sbb
jns
or
imul
sbb
std
fs
dec
lds
mov
pop
cmps
mov
cmps
ret
inc
jno
sub
pop
cdq
test
inc
pop
xchg
cld
jp
fwait
cwde
xor
and
mov
loope
psraw
and
ja
mov
icebp
and
mov
ss
and
fsub
test
mov
fist
sahf
sbb
xchg
inc
mov
push
mov
xchg
xlat
out
popa
movs
int3
mov
int3
sub
push
nop
mov
sub
inc
mov
pushf
xchg
pop
scas
jbe
and
jmp
sub
(bad)
mov
push
fwait
lods
adc
mov
les
repz
mov
jp
xor
add
dec
int
jo
repnz
out
add
xor
mov
leave
(bad)
jle
mov
sbb
add
pushf
sub
cmp
pop
shl
loope
lods
into
fstp
xchg
out
jg
in
(bad)
add
lods
movs
sbb
dec
scas
aad
inc
jbe
sbb
lods
cmps
sbb
pop
(bad)
cld
and
je
loope
or
jb
pushf
movs
adc
cmp
dec
adc
xor
pop
adc
cli
cmp
adc
or
dec
int3
and
xchg
jno
sbb
shl
jg
test
adc
lods
dec
ffreep
test
mov
sub
stc
adc
jl
or
adc
adc
into
mov
jne
pop
into
mov
movs
adc
lock
sar
push
mov
pop
test
in
imul
xchg
inc
cdq
or
push
cld
jb
gs
iret
inc
clc
cmps
cmc
dec
mov
xlat
data16
enter
dec
mov
dec
pop
(bad)
ror
xchg
ret
outs
lods
jns
sahf
inc
mov
setb
ss
pop
mov
sbb
or
mov
push
stos
lea
jnp
push
ds
jnp
adc
cmp
jge
mov
pop
adc
xor
mov
or
xor
or
adc
sub
sub
push
cmp
popa
lea
test
data16
sbb
xchg
jecxz
arpl
xchg
sub
push
(bad)
xchg
cmp
nop
fsub
fcom
sub
aam
fcmovne
mov
sbb
or
xor
jmp
out
pop
test
lods
mov
enter
repnz
xchg
lea
movs
out
xchg
xlat
fild
loope
and
in
push
inc
cs
cdq
shl
ins
loopne
sub
outs
(bad)
lods
stos
pop
fsubr
pop
popf
inc
cmps
jg
into
jbe
adc
adc
jmp
fcmovb
lahf
(bad)
mov
fidivr
jl
pop
(bad)
adc
sbb
push
mov
inc
nop
dec
fisubr
mov
test
or
repz
int3
cmp
push
mov
jmp
cmp
sbb
pop
sbb
(bad)
or
jb
ins
adc
cmp
and
aaa
and
mov
adc
aam
xor
fstp
(bad)
jae
inc
test
and
and
pop
hlt
stos
or
push
int
add
or
jbe
pop
cld
shl
xchg
test
add
xchg
les
aad
inc
and
and
jo
mov
(bad)
in
jb
iret
cmps
mov
lods
pop
xor
or
dec
fild
test
inc
sub
out
(bad)
sub
in
repz
les
or
mov
push
xlat
push
adc
push
push
mov
mov
out
pop
inc
push
sahf
daa
call
outs
in
call
cmc
in
cs
mul
sbb
imul
imul
dec
pop
cmp
bnd
jle
push
(bad)
pop
push
ss
pop
mov
mov
jnp
popf
cwde
idiv
out
pop
les
mov
and
jge
cs
cmps
jle
lea
retf
mov
shl
(bad)
popf
or
in
inc
dec
dec
ret
not
mov
cmc
sub
add
jmp
or
jmp
aas
mov
aad
and
cmp
cmps
nop
jl
sbb
push
push
push
dec
xchg
loop
out
pop
fnstcw
(bad)
mov
hlt
mov
and
loop
into
pop
cmps
fnclex
and
shl
cmps
shr
adc
sbb
xor
or
adc
inc
mov
loope
adc
or
cmp
inc
outs
adc
enter
test
pop
outs
dec
in
jmp
pop
ss
int
test
sbb
pusha
inc
in
fsubr
js
aad
and
add
inc
pop
retf
mov
jne
mov
dec
inc
ins
jae
sbb
bound
cmp
or
jo
cld
dec
ficomp
test
mov
es
cmp
fs
mov
and
aam
inc
dec
fsub
and
and
xor
fs
fwait
push
cld
ja
outs
or
inc
out
test
repnz
pop
inc
rol
imul
xchg
sahf
rcl
(bad)
sub
pop
cmp
aaa
xor
lock
add
mov
imul
xor
push
ins
mov
ds
push
add
xchg
mov
sub
ret
ds
xor
xlat
dec
inc
bound
sbb
inc
ret
clc
jg
add
mov
sub
cmps
and
repz
push
sbb
sub
adc
scas
fadd
gs
jmp
ja
shl
pop
sub
in
sbb
pop
rol
lods
or
dec
or
mov
daa
cs
pusha
jp
nop
scas
xchg
sbb
cmc
clc
mov
sub
xlat
add
or
mov
fs
mov
pop
enter
cmp
xchg
mov
nop
and
arpl
popf
aad
xor
or
mov
daa
inc
fisubr
add
cli
out
jg
add
add
mov
shr
adc
or
ds
pop
fsubr
leave
cmp
movs
mov
xchg
jo
fisubr
outs
xor
sub
mov
repz
cmp
pop
mov
loop
dec
mov
stos
aad
cli
jo
mov
jg
pop
test
sahf
cs
and
xor
cs
aam
lea
ret
jno
add
adc
fstp
pop
add
dec
test
cmp
xlat
pop
sti
mov
in
or
cmp
pop
fisub
loopne
mov
inc
clc
push
push
or
jb
jp
mov
pop
sub
mov
and
jno
add
mov
cmp
xor
jmp
jge
(bad)
dec
sub
and
cmc
outs
pushf
sub
mov
and
mov
cmps
lods
mov
into
icebp
outs
in
in
daa
sub
mov
(bad)
push
popa
mov
aam
add
xchg
cmp
popa
mov
sti
das
pop
cmp
in
push
test
nop
mov
pop
dec
xchg
in
popf
ds
fistp
mov
pushf
cmp
movs
repnz
cdq
into
dec
ror
addr16
imul
xor
stos
div
cmp
movs
(bad)
inc
cdq
adc
int3
fsubr
(bad)
hlt
mov
pop
mov
ins
sub
pop
xor
imul
and
cmp
cmp
cmps
and
lahf
adc
daa
and
dec
int3
add
mov
push
mov
sub
and
dec
pop
pusha
and
adc
fwait
pop
add
fmul
pop
sahf
push
lods
pop
fucomip
loope
xchg
push
aaa
jnp
pop
pusha
enter
jae
mov
and
sbb
xchg
ds
and
sub
adc
rol
mov
enter
stos
inc
jbe
push
bnd
mov
jg
jb
or
repnz
push
mov
call
call
or
or
and
ja
xchg
je
add
sahf
es
jmp
in
aam
inc
sub
ret
mov
jp
mov
bound
jmp
sbb
sbb
and
movs
jg
push
je
arpl
fdivr
in
call
into
sbb
stos
or
sahf
add
retf
sbb
mov
std
inc
and
inc
cmp
(bad)
cmp
cmps
mov
in
popa
sub
dec
lock
scas
das
outs
arpl
ins
ins
xchg
jmp
ss
mov
stc
mov
cmp
cmp
xchg
inc
in
adc
popf
cmc
(bad)
shr
aad
and
(bad)
movs
rcr
pop
cmp
jmp
sub
lock
xor
jnp
dec
call
ret
mov
sbb
pop
lahf
ret
cld
mov
xor
fnsave
jo
imul
inc
pop
repnz
or
jg
pop
into
mov
and
and
mov
popf
dec
push
cs
inc
xchg
xor
(bad)
aas
lea
sbb
jno
mov
xchg
mov
fcmovnb
call
xor
mov
lock
add
pop
or
inc
fiadd
and
jno
pop
jg
xor
out
jecxz
ja
imul
popf
movs
cwde
movs
or
sti
jns
test
xor
jbe
(bad)
push
or
push
jbe
mov
(bad)
lods
mov
mov
test
fadd
push
test
retf
dec
xor
(bad)
dec
imul
mov
jl
pusha
pop
mov
inc
ds
and
fwait
jb
pop
addr16
mov
jmp
nop
mov
push
or
xchg
fwait
mov
pushf
cmps
mov
mov
ja
mov
jb
jmp
out
pop
das
stc
mov
lods
std
pushf
sbb
ins
or
out
test
mov
mov
push
push
jmp
movs
aaa
cmc
retf
cmp
lods
add
jbe
aaa
iret
ds
adc
test
js
jmp
push
mov
xlat
jns
and
je
mov
test
(bad)
sbb
xchg
dec
aas
mov
addr16
sahf
push
or
mov
test
xchg
or
push
test
repz
fdiv
arpl
and
xchg
(bad)
sbb
repnz
ins
in
ja
and
sbb
cmp
xchg
jg
add
mov
and
sar
inc
mov
sti
push
(bad)
in
in
xchg
pop
hlt
jmp
cmp
xlat
leave
adc
cmps
aam
in
out
push
cmps
aas
lea
fsubr
dec
lock
sbb
stos
out
(bad)
hlt
xchg
(bad)
aaa
or
popf
dec
and
popa
pop
xchg
test
adc
jecxz
cld
sub
pop
sub
fsub
je
daa
repnz
shr
shr
sub
outs
inc
bnd
pop
xchg
mov
shl
pop
sbb
outs
push
cmps
movs
pusha
xchg
arpl
scas
push
call
outs
ss
sbb
pop
pop
(bad)
imul
push
in
sub
movs
xor
pop
mov
aam
test
jmp
clc
popf
fisubr
cmc
xchg
cmp
cmp
aaa
cld
cmps
movs
mov
sbb
gs
ficomp
mov
jb
sub
arpl
dec
in
(bad)
int3
int3
ins
aas
cmc
inc
cmps
cmps
pop
scas
sbb
push
sbb
jg
outs
stos
xor
sub
xor
iret
push
fild
shr
dec
cmc
push
stc
rol
out
push
mov
stc
rcl
scas
pop
cwde
shl
fnstcw
not
cmp
sbb
cmp
movs
out
(bad)
inc
test
out
sub
adc
popf
or
add
in
rol
jno
inc
dec
sub
fistp
xor
mov
sbb
or
stos
repz
sbb
adc
not
mov
fwait
sbb
in
bnd
loopne
jge
jmp
jmp
scas
out
imul
xor
xchg
mov
fidivr
mov
cwde
inc
or
inc
sub
or
(bad)
(bad)
js
gs
sti
xor
cmp
cld
sub
dec
test
test
sbb
and
(bad)
out
aad
icebp
xor
add
fbld
inc
lods
inc
cmp
fst
lahf
ins
movs
popa
adc
sub
and
mov
xor
jmp
sub
add
mov
popf
(bad)
je
jmp
fadd
fmul
adc
jp
add
test
push
push
or
xchg
xor
test
and
std
pop
jne
adc
dec
fcom
pop
fistp
movs
and
xchg
mov
ret
leave
shr
aad
jne
sub
arpl
xchg
pop
fsub
dec
jg
pop
jecxz
sbb
popa
popa
jmp
push
mov
test
sbb
ins
inc
dec
int
and
bound
fldcw
push
pop
loopne
ret
pop
cmp
aas
stc
or
test
mov
test
and
popa
cmps
xchg
inc
push
mov
xchg
push
mov
inc
sti
call
pop
push
out
pop
xor
cmp
dec
cmp
mov
mov
mov
sbb
push
out
xchg
push
cmp
lods
jge
push
std
into
jmp
(bad)
dec
clc
adc
mov
ins
sub
inc
clc
jb
dec
xchg
xor
test
adc
std
pop
jle
(bad)
xor
ss
gs
mov
adc
fcomp
cmp
inc
hlt
outs
push
popf
ret
stos
call
xchg
leave
test
push
jmp
scas
and
enter
out
ins
xlat
pushf
dec
clc
add
loop
cwde
repnz
cs
xchg
iret
cli
mov
inc
push
cmp
mov
dec
jo
pushf
div
xor
xchg
and
lods
jl
push
stc
and
out
xchg
cld
mov
mov
cmp
movs
loop
fist
mov
mov
push
adc
sti
repnz
jl
ror
pop
jbe
(bad)
(bad)
pop
sbb
sar
mov
pop
mov
pop
shr
fs
pusha
pop
sbb
adc
add
cli
(bad)
cld
arpl
stc
jbe
inc
or
(bad)
push
vmread
rcr
neg
add
and
out
push
test
cs
sbb
cmp
in
jle
dec
xlat
inc
cmc
xlat
pop
js
push
dec
imul
inc
pop
arpl
mov
retf
mov
mov
fisttp
push
and
(bad)
jnp
scas
loop
call
inc
push
xchg
jle
int3
cli
fs
push
shl
or
test
call
cmps
dec
jmp
sub
test
mov
ror
sbb
cmps
sti
shl
dec
lods
jbe
add
bound
push
retf
add
cmc
addr16
int
in
movs
cmps
aaa
in
add
mov
pop
adc
jge
aaa
inc
mov
inc
sbb
cmc
xchg
ret
push
sub
pop
dec
or
pusha
jno
bound
and
pop
scas
pop
xor
int3
int3
inc
push
jne
inc
outs
jmp
popf
or
out
pusha
repnz
icebp
outs
repnz
fisttp
ret
mov
jns
or
dec
dec
xchg
mov
cmp
xor
call
in
jmp
ins
mov
push
mov
rcr
fbld
sub
out
jp
dec
inc
repnz
cmp
fld
ror
dec
out
outs
adc
add
ret
out
sub
test
out
sub
push
aaa
xchg
daa
mov
lahf
xchg
cmp
pop
je
and
cmc
in
(bad)
outs
pop
hlt
push
add
sbb
fwait
pop
pop
div
imul
xchg
push
std
sub
leave
ret
arpl
or
push
cmp
mov
ds
inc
jle
leave
jl
icebp
mov
add
lea
or
jbe
loope
lock
aas
jecxz
gs
pop
inc
aas
out
ja
in
scas
dec
dec
add
dec
sub
scas
lea
loop
jecxz
sub
sub
push
dec
test
pop
mov
xlat
fld
inc
in
xchg
push
aas
call
xor
bound
pop
adc
xchg
shl
pop
lock
mov
jle
and
pop
repnz
ss
adc
cmp
jl
leave
xor
mov
ja
pop
mov
pushf
and
mov
cdq
inc
ja
pop
fist
movs
dec
enter
dec
xlat
jl
sbb
jp
aad
and
shr
mov
ja
add
push
mov
cs
mov
jmp
ins
sbb
data16
mov
loope
aam
jbe
retf
sub
mov
(bad)
mov
lods
xchg
icebp
dec
pop
(bad)
mov
mov
(bad)
jl
call
push
cmp
add
mov
push
cdq
mov
out
cmp
push
jno
int
enter
mov
out
xchg
adc
xchg
rcr
dec
outs
mov
jns
scas
jg
pop
pop
scas
sub
mov
mov
pop
push
cmp
xor
push
xchg
popa
cmp
pop
xchg
jmp
fidiv
fisttp
cmp
outs
sbb
jno
mov
mov
ret
and
imul
add
sar
or
imul
mov
into
pop
jbe
lahf
or
movs
data16
cmc
or
(bad)
dec
push
pop
and
cmp
and
xchg
fst
push
bound
adc
cwde
loop
xchg
daa
sahf
xlat
dec
in
dec
mov
pop
add
jmp
int3
pusha
jne
cmp
xlat
fnstcw
movs
das
mov
sbb
cli
pop
cmp
jbe
adc
cmp
dec
pop
scas
xor
scas
xor
sub
or
loop
cdq
mov
add
call
stc
ret
out
das
ffree
push
lea
jae
xor
fadd
sbb
pop
fstp
jp
es
xchg
pop
mov
xor
stc
mov
cmp
push
popa
xor
mov
repnz
jnp
movs
je
dec
cmp
das
cmps
out
and
js
rcl
sbb
sub
(bad)
mov
das
mov
mov
pop
mov
jno
adc
sub
mov
dec
pop
mov
lahf
push
mov
es
gs
call
fistp
popa
pop
cmps
sbb
add
sti
jp
sub
dec
jge
(bad)
in
cmps
ror
pop
mov
xchg
push
push
push
or
dec
jp
pop
and
lahf
jmp
inc
or
lea
adc
leave
sub
jne
mov
xor
and
into
add
or
sar
aam
test
dec
lods
(bad)
jb
add
mov
(bad)
inc
retf
bound
and
or
mov
mov
jb
xchg
adc
cmp
jns
dec
test
sar
scas
xchg
push
nop
ror
das
or
hlt
and
popa
push
xchg
retf
mov
push
shl
jne
clc
into
mov
aaa
scas
pop
mov
gs
and
mov
inc
dec
xchg
jno
sub
jmp
xlat
fs
inc
(bad)
(bad)
jnp
aam
or
imul
(bad)
loop
sbb
or
movaps
leave
stc
hlt
sub
push
addr16
pop
adc
xchg
mov
xchg
sub
scas
jmp
into
movs
xlat
mov
jge
xchg
and
sahf
sti
retf
mov
xor
jl
inc
xor
icebp
lods
nop
mov
lea
clc
fwait
dec
adc
(bad)
test
ins
or
out
into
sbb
push
movs
push
leave
mov
addr16
shl
movs
inc
(bad)
leave
or
(bad)
std
sub
call
fst
dec
inc
inc
shl
out
(bad)
push
sbb
clc
mov
jno
jne
scas
pop
cmps
inc
jno
jg
call
add
adc
aad
sar
in
jmp
(bad)
int
push
lea
add
rcl
scas
sbb
add
or
fs
movs
and
movs
lahf
jmp
push
push
scas
sub
mov
test
xchg
in
pop
push
imul
scas
push
inc
test
inc
in
inc
sub
fisttp
mov
rcl
sbb
cmp
gs
mov
fwait
loope
or
pop
outs
mov
push
js
hlt
lock
or
push
mov
xor
cld
(bad)
sbb
outs
(bad)
or
xchg
xchg
sbb
cmps
cmp
cmp
xor
stos
gs
out
xchg
cmp
movs
xchg
xchg
inc
jecxz
xchg
out
or
repz
jle
or
and
bswap
lds
dec
push
jb
xor
mov
add
aam
scas
imul
hlt
out
popf
nop
pop
adc
jmp
aaa
stc
ins
sahf
cld
mov
jnp
dec
out
adc
shl
retf
and
add
cmps
out
fisub
mov
mov
push
stos
xchg
or
adc
xchg
push
inc
stc
push
(bad)
jle
stos
push
aas
and
sahf
mov
fldcw
lea
ret
scas
ret
jmp
pop
mov
out
mov
ins
imul
add
adc
xchg
sbb
(bad)
cmp
add
(bad)
push
xor
xor
xchg
stc
imul
adc
movs
push
and
pop
cmp
jecxz
mov
loopne
aaa
inc
push
mov
mov
call
push
clc
ins
and
sahf
aad
call
out
or
addr16
fs
add
push
cmp
or
add
mov
xlat
jmp
movs
inc
push
push
jbe
add
mov
retf
outs
and
fisttp
into
out
pop
mov
or
js
sub
adc
addr16
mov
enter
xchg
aad
add
loopne
in
mov
add
daa
call
loopne
inc
inc
outs
mov
fld
imul
popf
or
mov
addr16
ret
cmps
push
cli
mov
dec
inc
fmul
jecxz
jae
mov
sbb
ss
mov
test
fsubr
mov
push
repz
outs
jno
mov
cs
test
test
push
movs
push
and
retf
mov
test
add
mov
pop
pop
jp
cmp
push
fldenv
aad
sub
mov
pop
or
(bad)
dec
add
loop
mov
xor
out
xor
push
int
pushf
shl
mov
mov
add
nop
in
out
lds
scas
fs
inc
xor
xor
gs
jl
iret
mov
jmp
pop
or
xor
add
and
mov
sar
inc
jp
mov
iret
dec
test
push
add
sbb
inc
out
hlt
repz
stc
pop
lods
xchg
fldenv
inc
pop
out
jg
mov
dec
push
pop
int3
mov
mov
clc
xlat
in
fst
xlat
outs
mov
inc
add
jmp
aam
mov
ins
and
dec
ret
adc
jb
push
outs
push
ror
xchg
dec
inc
pop
or
pop
jp
mov
mov
js
adc
cwde
dec
call
inc
push
inc
or
xor
cmp
inc
push
lds
push
retf
pop
sub
jne
lahf
test
ror
and
mov
pop
fcmovne
mov
repnz
xchg
sub
mov
ret
idiv
jae
cmp
test
jb
(bad)
test
pop
xor
repnz
adc
xchg
add
ja
adc
outs
push
loopne
cwde
(bad)
in
dec
fwait
jno
or
push
mov
sbb
fwait
sub
imul
cmp
in
jns
stc
ja
ds
mov
cmps
mov
inc
iret
fucomi
adc
repnz
mov
hlt
loope
int
jp
loop
jge
inc
dec
xor
stos
mov
jne
and
lds
push
jbe
jmp
fbld
mov
mov
jns
repnz
popa
int
pop
in
leave
je
or
shr
fs
xlat
xchg
nop
data16
sub
cmp
or
pop
adc
es
cmps
dec
call
push
gs
out
std
popf
xchg
dec
popf
je
jne
pop
imul
out
sbb
gs
js
sti
mov
imul
sub
lods
imul
sub
leave
fmul
sbb
inc
mov
xchg
cli
jmp
and
movs
pop
ds
aad
add
cmp
pushf
jmp
rcl
xchg
fisub
fs
mov
sbb
mov
and
xor
(bad)
out
iret
mov
jae
adc
dec
adc
aas
scas
stos
lods
ins
cli
sub
mov
push
mov
shl
push
mov
sti
pusha
adc
sub
sub
mov
les
jo
xchg
mov
push
dec
fwait
ja
outs
sub
cmps
iret
int3
shl
xor
adc
loope
aas
add
inc
jle
pop
scas
cmps
loopne
outs
stos
adc
push
xlat
push
and
pop
xor
push
mov
push
dec
jo
push
ins
sub
sbb
(bad)
out
fbld
std
dec
mov
rcl
xchg
test
in
push
cmc
mov
in
xor
push
ffree
push
jae
and
xor
xlat
daa
and
pxor
(bad)
sub
jmp
ret
(bad)
cmp
pusha
xchg
es
pop
and
cmp
movs
mov
repnz
cmp
dec
push
lahf
push
je
adc
out
cli
aaa
neg
aas
jg
outs
mov
push
popa
mov
jne
xchg
mov
mov
sub
add
sbb
fimul
xchg
in
fstp
fldcw
mov
out
lea
pop
add
cmps
jg
jmp
mov
test
mov
outs
cmp
add
pop
cmp
(bad)
push
repz
mov
in
cs
out
mov
cli
loope
jo
mov
out
or
push
mov
push
jo
sbb
outs
xor
adc
fsubr
and
mov
sbb
stos
sbb
popf
and
stos
cmc
inc
mov
xor
add
adc
sar
pop
fild
mov
icebp
mov
loope
arpl
cmp
outs
inc
cdq
rol
je
sub
lahf
adc
adc
adc
es
dec
push
adc
mov
or
jp
retf
push
dec
pusha
fistp
sub
es
xchg
cmc
cmp
jge
xor
ret
sub
mov
int3
cmp
push
(bad)
shl
in
xor
(bad)
stc
add
test
xor
sub
nop
xor
or
fisub
add
shl
leave
mov
push
dec
cmps
mov
pop
cmp
jle
cs
jmp
pop
repnz
popf
call
out
and
cmp
loop
dec
or
add
and
jne
imul
sub
mov
sbb
lods
xchg
pop
pop
pop
movs
and
sti
cmp
dec
xor
mov
lods
popa
pop
jo
rcl
ins
(bad)
or
out
ffreep
push
push
push
or
(bad)
mul
imul
retf
mov
mov
mov
scas
mov
sub
or
cmp
mov
aad
push
xor
pop
fcom
nop
rcl
(bad)
call
stos
or
mov
sbb
add
pusha
jg
imul
add
pusha
sbb
dec
clc
sbb
hlt
js
retf
inc
retf
pop
aas
lea
lea
or
movs
mov
int
xchg
sahf
dec
push
add
leave
cmp
fs
outs
push
nop
push
or
adc
pop
xchg
push
fild
pop
pop
mul
and
add
mov
retf
movs
cmc
out
push
pop
jecxz
mov
lds
mov
sub
jns
jmp
fsubr
popa
jne
adc
sbb
bound
fdivr
xlat
call
and
cwde
pusha
xchg
out
xchg
or
sub
(bad)
cli
enter
into
std
pop
stos
mov
pop
ret
in
xchg
mov
sbb
sbb
enter
cli
sbb
mov
aad
fldcw
cmc
imul
mov
fild
leave
lahf
enter
(bad)
cdq
dec
mov
xchg
mov
dec
mov
dec
xchg
mov
into
loop
nop
and
jp
jp
aam
pushf
das
pop
gs
stc
(bad)
imul
lahf
movs
cli
fistp
push
adc
repz
mov
pop
mov
inc
fwait
ins
pop
gs
lock
and
and
repnz
mov
fsub
sub
test
pop
sahf
pop
cmps
movs
adc
inc
mov
mov
and
cmp
sub
mov
out
cmp
ds
lods
xor
push
jns
sahf
imul
cmp
pop
xlat
jecxz
xor
pop
pop
or
mov
test
add
inc
mov
pop
les
ss
shl
test
rol
pop
inc
jno
sbb
push
or
inc
aas
int3
stos
cmp
xchg
mov
mov
sbb
dec
mov
cmp
cmp
in
arpl
aam
and
xor
jg
xor
cmp
shr
adc
xor
pop
and
addr16
out
mov
idiv
leave
std
push
out
rcl
fistp
pop
jae
addr16
jmp
je
adc
xlat
mov
fwait
jmp
test
add
clc
xchg
hlt
test
ret
test
sbb
pop
sbb
jne
and
call
pop
xor
imul
lock
sub
adc
push
lods
cwde
sahf
mov
add
jo
or
sbb
mov
pop
pop
(bad)
mov
pop
retf
(bad)
xlat
adc
and
inc
or
arpl
popf
add
test
cmp
push
mov
cmp
in
jno
mov
into
(bad)
sub
fdiv
ins
add
jl
pop
mov
jl
sbb
sub
cmps
fsub
mov
adc
rcl
inc
jmp
lahf
lahf
(bad)
pop
sahf
dec
out
push
or
rcr
pop
xchg
retf
je
int3
mov
pushf
fs
or
or
add
xchg
mov
test
push
sar
js
jecxz
(bad)
jmp
movs
push
test
xchg
shr
mov
push
clc
rol
loopne
and
push
sahf
push
bound
sbb
mov
jge
mov
(bad)
and
fcomp
hlt
dec
(bad)
mov
inc
repz
adc
and
daa
cld
add
push
cmp
std
pop
cmp
and
cmps
in
sbb
dec
dec
adc
and
shl
int
(bad)
std
imul
push
adc
fnstenv
pusha
(bad)
add
jno
imul
jae
cmc
inc
enter
mov
mov
out
js
fwait
cmp
push
jmp
jle
jle
inc
outs
xchg
xor
popa
jecxz
icebp
shl
and
movs
jl
dec
mov
sbb
cwde
xchg
and
lock
pushf
cld
jl
mov
hlt
nop
stc
into
cmp
push
push
sbb
outs
icebp
jae
pop
pusha
retf
stos
nop
sar
addr16
jo
or
aaa
ss
jnp
jns
jne
fist
push
mov
add
mov
or
fist
scas
setp
int3
xchg
inc
loopne
gs
or
(bad)
cmp
das
or
repnz
push
cmp
aaa
inc
sbb
push
pop
movs
fcom
aad
sahf
add
arpl
mov
scas
icebp
xchg
jmp
mov
arpl
dec
mov
and
es
mov
les
dec
cli
imul
push
sub
push
mov
sub
jnp
dec
rcr
fdivr
jge
sar
dec
enter
js
movs
call
cmc
sbb
ds
or
sbb
ret
movs
add
(bad)
pop
repnz
add
outs
sbb
bound
jnp
out
dec
cli
and
mov
pop
dec
pop
lods
mov
out
sahf
mov
mov
cli
mov
mov
fcom
jne
cmp
scas
jp
fabs
push
push
sbb
or
mov
out
xchg
data16
les
jne
dec
test
jl
cmp
movs
mov
cmp
ficom
pop
jge
pop
sbb
pushf
dec
push
xor
mov
out
jge
leave
pop
cmp
div
rcl
dec
ins
leave
xchg
shl
cli
repz
fidiv
cmp
bound
hlt
sti
addr16
div
xchg
dec
push
add
neg
imul
cmp
dec
and
nop
xor
and
mov
idiv
xor
jmp
ret
aas
jbe
lahf
xchg
cdq
pop
and
xor
scas
hlt
xchg
pop
add
sub
bnd
xchg
and
daa
adc
enter
loope
and
int
mov
imul
sbb
xchg
aaa
test
mov
mov
out
iret
nop
not
cmps
mov
clc
lahf
pop
enter
cdq
push
dec
into
cmp
xchg
in
mov
cwde
retf
hlt
adc
and
call
inc
adc
sbb
movs
mov
fcom
js
jae
cwde
(bad)
xchg
cmp
dec
push
sub
cmp
push
mov
jnp
gs
dec
jbe
jecxz
mov
cmp
and
movs
inc
pushf
gs
xchg
clc
bound
fbld
int
jnp
ins
mov
imul
sub
test
xchg
adc
imul
lds
push
sar
and
bound
mov
in
(bad)
mov
push
mov
mov
lahf
dec
sbb
pop
jnp
push
mov
outs
mov
pop
icebp
push
in
ins
push
cmp
aaa
push
sbb
retf
or
fist
jne
cmp
out
repnz
data16
mov
jg
data16
repz
movs
jne
mov
pop
sbb
lock
xchg
fcom
mov
adc
sbb
test
dec
pushf
mov
stos
mov
or
imul
add
rcl
std
retf
xchg
repz
cdq
sub
jmp
ss
iret
pop
xchg
push
(bad)
jl
or
mov
js
adc
mov
nop
xor
retf
adc
dec
adc
xor
pop
jp
ret
xlat
aam
iret
movs
repnz
lods
sbb
jae
movs
mov
sub
pop
pop
mov
pop
out
imul
gs
movs
sbb
cmc
add
aas
add
mov
pop
sbb
push
mov
cmp
and
jne
inc
mov
pop
xlat
cmps
push
sub
jbe
fidivr
sbb
jl
fdiv
into
stos
sti
pop
sub
mov
out
push
neg
ja
inc
out
ja
inc
cmp
cmp
cmp
in
adc
fsubr
ret
mov
enter
jo
imul
stos
cmp
mov
jb
mov
repz
inc
xchg
and
test
or
std
fcmovb
mov
retf
inc
aas
in
dec
pop
clc
push
std
xor
and
dec
popa
loop
cmps
mov
dec
(bad)
(bad)
xchg
cmp
xchg
sub
repz
into
add
lahf
fldln2
clc
mov
xor
scas
mov
in
xchg
sbb
mov
push
movs
addr16
shr
mov
jl
lods
int
push
fs
stos
inc
aas
cli
pop
(bad)
outs
dec
push
ror
mov
popf
dec
sti
sar
mov
lods
adc
in
sti
lock
cmc
mov
clc
jo
ins
cmp
in
je
dec
and
inc
dec
and
enter
pop
push
leave
and
mov
mov
(bad)
mov
xchg
add
clc
rcl
imul
add
ds
ds
add
cs
das
cdq
out
fsub
push
fnstsw
and
popa
inc
in
xor
cli
scas
push
lods
pop
or
or
cmp
js
and
jo
cli
stos
mov
cmp
pop
dec
rol
ins
cli
inc
gs
les
adc
mov
retf
push
push
xchg
xchg
sub
fidivr
out
cmps
addr16
aam
mov
push
jb
fdivr
mov
imul
mov
and
test
retf
neg
out
sub
mov
gs
lock
in
pop
rep
ficomp
push
sti
mov
loope
sbb
mov
loope
scas
xor
adc
loop
arpl
jl
sub
aam
add
cdq
add
ret
pop
mov
idiv
enter
das
std
retf
xchg
out
mov
dec
inc
mov
push
push
(bad)
in
lds
or
scas
pushf
inc
mov
les
xchg
into
ficomp
setge
call
adc
into
adc
mov
dec
outs
xor
ret
cli
test
sbb
push
xor
adc
jp
push
jns
aaa
jns
mov
and
xchg
jge
and
popa
sbb
and
xchg
ret
sub
xchg
push
test
pop
mov
xchg
xor
jns
push
std
repz
sbb
mov
hlt
push
xchg
(bad)
or
mov
addr16
retf
ss
out
fist
inc
cmp
sbb
ror
movs
in
push
cs
push
ins
add
retf
inc
cmp
out
mov
aam
aas
sbb
dec
ror
adc
lods
mov
addr16
inc
cmp
aas
imul
mov
mov
push
ret
in
jge
jne
adc
test
lahf
pop
mov
aam
push
int
push
call
xor
popa
mov
in
loop
push
or
xchg
jmp
in
jae
pop
sub
sub
jl
cs
inc
jb
add
lock
out
cwde
mov
push
fisttp
test
ds
sar
mov
or
dec
mov
sbb
std
cmp
fcmovu
rcr
inc
and
and
dec
icebp
or
inc
inc
(bad)
push
gs
inc
loop
push
std
dec
leave
cli
test
es
and
sbb
rcl
mov
test
cmp
sahf
stc
jns
fisubr
and
stos
mov
push
push
sbb
sti
pop
sub
(bad)
cld
test
fld
enter
jae
loopne
add
fild
inc
sbb
fwait
cmc
xor
(bad)
imul
sub
cmp
fimul
fistp
outs
sub
inc
jne
and
mov
nop
in
cmp
dec
fs
dec
xchg
(bad)
call
xchg
xchg
nop
(bad)
jp
sti
je
addr16
jno
mov
push
outs
shl
or
xor
test
adc
sub
mov
cmc
int3
mov
fisub
rol
and
call
sub
xchg
fimul
dec
pop
push
movs
gs
test
das
gs
inc
cld
rol
xor
aaa
push
or
scas
out
mov
xlat
stos
pusha
or
fist
(bad)
(bad)
mov
movs
push
dec
mov
inc
adc
mov
push
xor
mov
and
sti
or
(bad)
out
scas
pop
in
loopne
dec
imul
pop
adc
sbb
dec
ja
loopne
and
adc
or
mov
sbb
add
not
cmc
jo
pop
mov
inc
jno
mov
mul
push
jb
sbb
jp
mov
pusha
aaa
mov
ficomp
les
and
mov
sub
call
xor
movs
cmp
fisttp
pop
cmp
adc
mov
pop
mov
mov
xchg
lods
test
mov
xor
xchg
repnz
mul
cmp
test
out
inc
jmp
pop
pop
enter
loop
dec
sub
(bad)
pop
out
jns
shl
rcl
dec
(bad)
in
add
lock
dec
and
(bad)
aad
add
test
(bad)
or
jo
scas
pusha
sub
mov
scas
ins
aam
lock
push
and
jp
cs
jle
push
jb
clc
mov
into
dec
and
gs
mov
ins
fist
pop
repnz
fs
(bad)
mov
xchg
jmp
inc
inc
mov
inc
push
inc
xchg
sahf
fistp
cdq
dec
jo
mov
out
xor
hlt
sbb
ror
mov
sbb
mov
es
in
cmp
mov
test
ja
movs
lods
std
ror
push
test
sahf
cwde
pop
jmp
mov
sub
ins
mov
cmp
push
mov
cmp
jo
pop
stos
fmul
js
sub
add
or
dec
jl
push
mov
sub
sub
(bad)
xor
adc
mov
(bad)
les
fistp
popa
and
repz
pop
jo
daa
das
mov
dec
in
lds
cmc
dec
pop
pusha
jne
stc
mov
inc
sub
std
push
jno
pop
lds
xchg
ret
mov
sahf
dec
add
jno
rol
xor
fsub
mov
scas
jge
sub
xchg
pop
daa
sti
aam
sub
ss
jle
loope
lds
loope
inc
jno
pop
call
(bad)
and
add
push
fbstp
fimul
sahf
(bad)
bound
mov
ins
dec
xchg
pop
pop
mov
mov
cs
mov
mov
pop
stc
aaa
movs
fsubr
cmc
ret
scas
dec
dec
sbb
out
loope
test
mov
push
mov
rcl
add
aas
into
jmp
lods
mov
or
dec
aaa
and
bound
cli
idiv
std
mov
test
or
pusha
mov
test
xor
and
lock
cmp
jp
adc
mov
push
pop
jmp
inc
sbb
pop
or
jae
xor
jecxz
dec
retf
inc
xor
jmp
jmp
loop
test
sbb
and
and
js
and
addr16
dec
mov
push
inc
mov
xor
xchg
fisttp
pushf
jecxz
sbb
(bad)
fwait
jae
rcl
loop
pop
imul
ret
add
call
pushw
rcl
and
fsincos
pop
mov
and
sahf
cwde
pushf
loope
aaa
arpl
jae
pop
mov
div
xchg
test
cmps
ja
es
popf
mov
aas
mov
retf
retf
inc
xor
or
dec
js
or
push
adc
(bad)
(bad)
das
enter
ds
mov
push
fnstenv
push
cwde
lods
fsubr
mov
xor
test
lock
call
mov
stos
movs
fcom
xchg
push
iret
add
fcmovb
sbb
mov
add
jo
div
inc
cdq
sbb
sub
loope
cmp
in
cmp
imul
rcl
mov
lea
push
mov
cmp
mov
pop
adc
std
add
aad
push
not
or
test
dec
inc
cmp
mov
ja
lds
adc
(bad)
sub
sar
imul
add
cmps
movs
add
jo
xor
jbe
xor
mov
lods
mov
loop
in
jmp
adc
push
sub
test
mov
cmps
push
(bad)
in
add
lods
xchg
xor
xor
pop
jae
les
add
pop
add
cmc
shl
sbb
aam
(bad)
nop
mov
inc
stc
add
jl
stos
popf
scas
mov
sbb
jl
scas
sbb
out
jmp
jno
xchg
sbb
icebp
je
data16
arpl
imul
lea
push
stos
js
dec
sub
(bad)
aas
jns
or
ja
push
mov
and
scas
cmp
xor
dec
(bad)
retf
pop
adc
ror
(bad)
out
pop
jg
or
in
nop
(bad)
fsub
lods
fcom
xchg
add
dec
repz
pushf
mul
or
mov
movs
sbb
cmc
addr16
fstp
iret
jbe
and
arpl
or
or
sub
clc
lock
ins
pop
mov
stos
dec
into
in
mov
cmp
cmps
icebp
sahf
mov
adc
outs
call
(bad)
push
pop
sbb
pop
clc
repz
inc
imul
adc
mov
push
inc
(bad)
jo
push
xor
and
xor
jge
adc
loopne
inc
das
neg
ret
mov
stc
movs
adc
inc
mov
pop
or
adc
cld
jb
out
push
and
iret
mov
shl
or
push
cmp
rcl
jle
scas
ins
jmp
or
call
and
and
inc
inc
cli
mov
test
bound
fninit
sbb
fnsave
xchg
dec
dec
jae
xor
sbb
pusha
stos
mov
push
popa
out
jle
add
in
stc
mov
ds
mov
leave
xchg
sbb
lods
loopne
sbb
jge
mov
inc
out
and
mov
pop
mov
pusha
pop
or
(bad)
js
pop
push
push
int
shl
pop
lea
push
jl
sub
int
retf
mov
adc
iret
and
int3
das
test
(bad)
scas
loopne
jo
mov
pop
mov
adc
xchg
mov
mov
sbb
mov
xchg
bound
xchg
jp
arpl
lods
jmp
inc
mov
cmp
les
in
rcr
test
sar
lahf
jne
hlt
mov
or
mov
add
push
or
dec
movs
jg
neg
out
mov
std
jle
jle
ror
out
int3
int
daa
imul
dec
dec
ret
les
retf
fmul
fcmovne
push
mov
fidivr
adc
sub
mov
out
xor
or
dec
mov
bound
aas
popa
stc
dec
adc
mov
repz
scas
popa
cmp
(bad)
jge
test
adc
mov
leave
sub
inc
lods
retf
lods
sbb
in
mov
cmp
daa
jecxz
stos
sub
jb
cld
das
addr16
cmc
arpl
loope
pop
sbb
pop
cmp
jmp
jge
outs
adc
mov
dec
cmps
mov
aaa
mov
and
fdivrp
dec
mov
add
push
add
mov
aaa
lods
xchg
mov
pop
icebp
pushf
aaa
out
leave
adc
les
xor
adc
inc
outs
js
(bad)
aas
dec
inc
out
pop
xor
xor
add
jmp
out
mov
mov
and
push
cmc
cmp
retf
idiv
(bad)
daa
popa
xchg
ins
xchg
xchg
jo
xchg
addr16
add
iret
sbb
and
pop
or
push
sub
push
cmps
(bad)
arpl
inc
hlt
adc
div
nop
es
inc
lock
sar
iret
(bad)
mov
adc
ins
inc
push
fwait
inc
xor
push
enter
or
pop
or
retf
sbb
cdq
jg
jg
push
and
les
pop
sub
test
inc
mov
adc
pop
sub
ss
mov
gs
xor
cmp
jmp
cmp
cmp
xchg
and
in
push
xchg
lods
jb
sbb
adc
mov
jge
js
jbe
neg
jnp
shl
int
test
call
leave
and
lock
ins
loop
imul
mov
call
adc
scas
retf
ror
rcr
cmp
pop
inc
mov
leave
ret
lahf
jb
xchg
sbb
xor
inc
dec
rol
cmp
std
or
call
pop
cli
push
mov
xchg
fidiv
sahf
xchg
jmp
iret
sub
data16
jp
xchg
xchg
mov
push
jns
fisub
in
jecxz
mov
mov
inc
adc
dec
mov
retf
push
(bad)
and
jno
mov
mov
stos
adc
or
jns
xor
and
ja
jle
or
push
mov
mov
fstp
rcl
sar
mov
push
retf
inc
pop
pop
out
xchg
jmp
mov
dec
int3
idiv
fldenv
add
mov
or
adc
mov
jno
pop
and
test
and
mov
mov
mov
loop
or
icebp
add
sbb
std
pop
mov
lds
fcmovbe
and
mov
loopne
xor
pop
add
lods
xchg
cmp
mov
in
jp
lea
sbb
adc
mov
jb
dec
mov
cmps
call
push
mov
(bad)
push
retf
and
jo
ins
mov
or
clc
xchg
pop
outs
dec
and
mov
gs
xor
dec
or
aam
(bad)
leave
ds
xchg
dec
ret
jmp
retf
push
mov
pop
mov
or
inc
mov
inc
out
into
in
fdiv
jmp
push
xor
scas
xor
mov
xchg
mov
adc
out
imul
add
jecxz
sar
js
cdq
aas
pop
mov
cmp
fs
sbb
pop
das
shl
mov
(bad)
fmul
or
pop
iret
inc
(bad)
fadd
sub
sub
fisubr
cmps
jmp
pop
div
or
mov
movs
rol
add
popa
sbb
sub
test
div
ss
popa
dec
xchg
push
add
pop
movs
jo
fst
mov
loope
push
je
sbb
xor
mov
adc
mov
pop
mov
stos
mov
sbb
jno
mov
jmp
cmp
test
gs
pop
(bad)
test
test
fs
push
add
jmp
movs
push
push
xlat
push
sub
push
inc
push
sti
add
jnp
jecxz
int
or
push
mov
push
jbe
sbb
cmp
adc
xchg
pop
xchg
inc
adc
inc
sbb
pop
xor
inc
mov
xchg
jbe
out
xchg
jp
fcom
cmp
push
fwait
iret
cli
les
sar
retf
mov
cmp
out
int
int3
adc
repnz
gs
ds
(bad)
fcom
xchg
dec
ss
adc
jnp
jae
mov
ja
push
in
call
std
retf
sub
cwde
push
(bad)
jns
inc
stos
adc
stc
adc
out
cld
lea
sbb
(bad)
in
dec
test
xchg
mov
inc
fs
cmp
or
adc
or
and
jmp
or
or
ins
sub
inc
xor
nop
push
call
into
jbe
fstp
stc
xchg
ins
(bad)
jbe
inc
outs
xor
inc
out
xor
ds
jg
xchg
sub
adc
jle
mov
or
js
jnp
xor
push
loop
and
mov
cmp
and
jg
mov
iret
cmc
inc
adc
pop
mov
cmp
nop
pop
out
mov
ins
fistp
cdq
loope
mov
addr16
in
in
in
cmc
jl
dec
jbe
add
pop
push
cmp
hlt
xchg
bound
or
or
xchg
lahf
jno
sbb
jne
and
xlat
cmps
cmp
jp
outs
(bad)
mov
xchg
pop
mov
in
push
cld
sbb
xchg
outs
popa
shl
int
out
xor
pop
sub
or
addr16
pushf
test
push
and
mov
xchg
push
mov
mov
sbb
out
sahf
xor
sub
jg
sub
cdq
inc
pop
daa
mov
mov
sub
jg
sub
xlat
fimul
mov
call
fdiv
js
xchg
mov
jecxz
xlat
mov
and
lock
ret
sbb
daa
in
shr
call
test
outs
daa
dec
cmp
add
je
xchg
and
push
or
push
(bad)
div
sbb
jmp
lods
cmp
add
movs
scas
pop
ss
sub
xchg
cmp
pop
scas
and
mov
(bad)
or
rcr
mov
pop
fisubr
inc
jg
xor
xchg
enter
jae
mov
sub
pushf
es
ja
scas
into
mov
or
mov
lock
cdq
stos
add
fist
sahf
repz
sahf
iret
mov
fdiv
daa
(bad)
in
inc
(bad)
in
ins
xor
movs
nop
rcl
xchg
cmp
adc
xchg
mov
jb
add
mov
or
call
push
lods
js
mov
adc
out
ja
daa
fst
push
lods
sti
xchg
adc
and
mov
xchg
push
(bad)
mov
push
(bad)
cmp
leave
xchg
jbe
mov
xlat
jmp
pop
inc
loopne
loopne
mov
lds
fisub
sbb
or
add
cmp
loope
xchg
pop
aas
leave
sub
push
loope
lea
adc
pop
dec
int
lods
in
pop
add
(bad)
into
jmp
jmp
test
gs
xchg
fild
sub
pop
(bad)
and
(bad)
xchg
out
and
cmp
movs
arpl
mov
in
in
inc
or
sub
popf
es
jecxz
sbb
xlat
test
mov
push
and
push
mov
call
xor
mov
aam
fdivp
mov
push
sbb
sub
leave
ror
pop
mov
mov
loope
retf
daa
push
(bad)
test
fwait
adc
jae
into
gs
stos
aas
leave
clc
outs
in
push
movs
pop
sti
cdq
inc
popa
inc
xor
aaa
and
aas
ret
xor
rcr
cmp
int3
adc
and
stos
xor
jmp
sub
xchg
nop
outs
adc
mov
push
jb
jo
pop
pop
fcom
stos
and
inc
(bad)
movsx
mov
inc
adc
scas
and
sbb
stos
movs
out
push
cwde
cmp
xchg
inc
in
aam
fiadd
sti
mov
loope
mov
adc
sub
pop
lods
xor
sti
out
mov
mov
ins
jl
push
inc
push
imul
or
ins
jmp
mov
int3
inc
hlt
hlt
push
fnstsw
daa
add
mov
jbe
push
push
les
jge
lahf
inc
aas
mov
retf
pop
fdiv
mov
rol
jae
gs
dec
inc
xchg
sbb
sbb
and
mov
mov
bound
xor
mov
nop
xchg
add
loop
jmp
xlat
aaa
bound
(bad)
mov
inc
push
sbb
dec
adc
loopne
push
mov
out
add
icebp
jmp
ror
scas
cmp
cmp
pop
cmps
jmp
push
jecxz
or
fpatan
add
xchg
rol
sub
and
scas
test
adc
xor
in
sub
fadd
sub
mov
sbb
and
loope
dec
or
imul
cmps
int
movs
test
lods
xlat
mov
cwde
dec
loopne
jmp
xor
in
xchg
push
mov
inc
dec
dec
cmp
jecxz
add
jb
mov
pushf
mov
sbb
jmp
(bad)
nop
in
jg
sbb
jmp
or
dec
in
lds
stc
push
icebp
not
or
rcl
mov
xchg
rcr
mov
sahf
push
dec
iret
hlt
mov
cwde
xor
sbb
push
arpl
jl
daa
push
mov
popf
add
int
vmovaps
sbb
cmp
xchg
call
and
out
dec
popf
lock
or
push
push
iret
movs
mov
fs
push
fs
imul
mov
adc
fldz
xor
and
std
add
mov
call
in
or
jnp
jb
test
cmp
jle
adc
ret
sar
xchg
mov
les
jmp
sub
daa
div
imul
adc
xor
ds
xchg
aam
ss
or
jge
nop
mov
psllq
pavgw
add
and
dec
push
outs
out
adc
int3
dec
jge
stc
pop
jb
add
(bad)
arpl
sub
(bad)
cmp
add
fidivr
adc
add
dec
hlt
cs
imul
adc
jg
dec
push
add
pop
inc
or
movs
in
xchg
mov
sbb
add
push
mov
pop
inc
in
xchg
sub
fst
outs
jecxz
mov
push
adc
mov
int
xor
mov
pop
dec
add
hlt
inc
stos
add
dec
pushf
ja
(bad)
das
pop
daa
jns
dec
adc
pop
mov
jns
mov
dec
jb
push
aad
push
push
mov
sti
mov
mov
push
sbb
sub
cmp
sub
xor
inc
inc
mov
repz
out
cs
out
aam
mov
aaa
push
iret
and
shl
xchg
push
clc
xchg
and
xlat
mov
mov
add
sbb
sbb
sub
jge
mov
or
mov
icebp
mov
imul
sbb
jge
mov
add
mov
jle
sbb
add
mov
inc
ins
fldenv
mov
lock
jg
cmp
gs
mov
aaa
ja
sbb
cmps
cmp
ds
outs
adc
arpl
adc
jno
mov
hlt
aas
push
shl
add
sub
push
mov
pop
mov
push
mov
test
ins
jbe
pop
mov
hlt
mov
mov
pop
rol
iret
rol
xor
mov
aaa
das
mov
pop
dec
or
shl
popa
stc
lock
loop
and
fdivr
in
in
push
fst
call
push
(bad)
mov
adc
add
dec
mov
sti
out
call
(bad)
jle
jbe
loop
sti
inc
jmp
xchg
push
inc
xchg
fidiv
jb
fcmovb
jg
stos
mov
sbb
lahf
movs
mov
or
cmp
stos
sti
mov
mov
adc
mov
mov
into
jmp
loope
dec
add
inc
sbb
mov
push
icebp
sub
jecxz
out
in
sti
scas
loopne
das
nop
aam
mov
mov
cwde
hlt
push
push
pop
cmp
xlat
movs
xchg
cwde
push
mov
jbe
add
retf
sbb
dec
out
hlt
lods
int3
lea
mov
fwait
sub
and
xchg
jb
xchg
mov
out
(bad)
cli
repz
and
inc
test
test
jmp
pop
ret
push
fnsave
aam
rcr
mov
ds
add
ds
jg
cmc
(bad)
pushf
ds
cmp
stos
jmp
sbb
scas
jmp
add
cmp
push
int
mov
adc
repnz
(bad)
xor
mov
jo
push
clc
mov
std
push
int3
dec
xor
push
ss
xchg
sti
cmp
test
jbe
add
pop
rol
cs
pop
popa
cmp
inc
mov
pop
pushf
shr
into
test
mov
ins
jl
push
push
mov
push
out
sub
cmp
lahf
push
(bad)
or
mov
jg
retf
aas
loop
pop
pop
push
jge
lds
dec
in
out
ds
cmps
xchg
jmp
jmp
push
jno
test
add
push
icebp
shl
xchg
dec
pop
jle
ss
ret
mov
aam
je
push
addr16
push
fnstcw
cmps
fcom
test
mov
dec
push
sub
stos
popa
mov
cmp
(bad)
or
aam
jns
not
xchg
setns
add
sbb
mov
dec
inc
shr
loopne
dec
aas
(bad)
jne
push
repz
cmp
dec
es
adc
lea
dec
mov
add
call
ret
add
xor
fmul
mov
and
mov
push
push
and
add
ins
aaa
and
cdq
test
jle
bnd
out
and
punpckhdq
xor
sub
call
iret
dec
inc
and
enter
js
dec
sub
xor
sub
mov
sbb
repz
sti
pop
or
loope
xor
cwde
xchg
in
jbe
mov
mov
mov
shl
and
xor
mul
ss
aaa
sub
rcr
scas
push
ss
les
div
adc
mov
fisttp
adc
jne
aaa
inc
out
cmp
stos
fcomp
add
cmp
jo
bound
cmp
aas
lods
or
retf
xchg
jnp
mov
loopne
call
xor
idiv
cld
in
fucomp
push
stc
sub
xchg
ja
pop
test
inc
mov
in
lods
fwait
fs
(bad)
daa
sar
add
pop
pop
retf
pusha
mov
out
push
aas
cmps
jne
shr
jb
std
or
jp
movs
loop
aad
(bad)
fdivr
inc
scas
into
xor
push
mov
mov
xor
ror
jbe
xchg
icebp
push
xor
hlt
loopne
test
inc
mov
cmp
sahf
cdq
in
popf
jnp
cmps
dec
xchg
sbb
cli
jo
sti
test
cmp
pop
fistp
jge
xor
jg
es
or
push
xor
jle
mov
imul
pop
inc
xor
mov
push
jg
sub
cmc
pop
push
jae
mov
cld
bound
xor
and
add
lahf
inc
push
stos
xchg
ret
daa
jae
sbb
mov
xor
adc
xor
into
jb
dec
idiv
test
or
xor
loopne
mov
inc
lods
shl
mov
jp
fld
shr
loop
adc
aam
lea
stc
xor
shr
aad
jae
mov
xor
test
mov
inc
iret
and
jb
mov
dec
dec
enter
adc
xchg
jne
outs
add
push
or
sahf
dec
adc
cmp
sar
or
lahf
scas
xchg
bound
jg
adc
jp
jl
pop
test
sbb
popa
add
push
mov
push
cmp
out
jae
mov
jmp
mov
sbb
push
push
pusha
and
vmulss
call
lock
fadd
daa
add
xor
and
scas
es
ds
sbb
mov
inc
jmp
ins
in
sbb
mov
jno
or
pop
mov
rcr
call
aas
xchg
pop
sub
(bad)
xchg
sbb
stos
cmp
xchg
pushf
out
lahf
sub
clc
dec
das
enter
and
sti
int3
inc
pop
xchg
shl
(bad)
jg
jg
(bad)
jecxz
push
jno
cmps
xor
cli
dec
clc
rcr
push
dec
push
sub
and
dec
or
xchg
add
jg
aaa
sub
popa
mov
outs
or
add
and
and
out
arpl
and
test
sub
leavew
jmp
aaa
je
push
pop
ds
popf
pop
add
or
mov
jp
pushf
jecxz
dec
fidiv
retf
in
inc
scas
rcr
lock
mov
sub
jg
cli
test
fs
add
sbb
icebp
mov
rcr
test
in
mov
aas
fisubr
pop
movs
dec
and
test
(bad)
push
outs
mov
mov
leave
jmp
fnstenv
sub
fidiv
popa
pushf
add
push
out
popa
dec
push
fld
rcr
adc
adc
xchg
cmps
jnp
mov
cmp
ins
adc
cs
dec
in
xor
mov
push
add
push
jecxz
sti
aas
mov
push
adc
add
mov
inc
ret
or
inc
jmp
add
mov
or
cmp
inc
leave
sub
icebp
mov
or
adc
sbb
cmps
jae
add
ja
mov
pop
inc
dec
test
add
xchg
cmp
in
jbe
and
mov
jmp
inc
fadd
dec
iret
lea
mov
jbe
neg
and
out
fs
out
push
test
push
ret
popa
push
jo
jb
mov
imul
pop
jp
cmp
addr16
(bad)
jmp
mov
adc
push
inc
aas
add
call
jno
call
mov
je
ins
fwait
repnz
stc
inc
mov
cwde
pop
and
sbb
dec
xchg
jno
je
(bad)
mov
ins
pop
(bad)
aam
int
pop
stos
ror
inc
mov
inc
cmp
mov
scas
les
push
inc
stc
out
test
adc
add
jno
movs
outs
rol
leave
and
mov
ins
cmp
fst
jns
retf
jno
les
in
dec
(bad)
mov
lods
push
jmp
cmps
fist
sbb
jns
dec
jne
leave
div
out
rcl
adc
xchg
(bad)
aas
cmp
imul
xchg
pushf
xchg
cmp
or
shr
sbb
jp
fwait
cmps
es
fisubr
fcom
test
add
push
ret
xchg
push
scas
mov
mov
call
pop
pusha
add
shl
sbb
cmp
xor
int
lods
rcl
mov
les
add
mov
das
movs
and
xor
aad
pop
fldcw
daa
pop
rcr
xchg
jle
scas
push
ja
cs
pop
jno
bound
mov
mov
mov
icebp
or
(bad)
cli
leave
adc
sbb
bound
add
sbb
jo
and
adc
pop
movs
retf
dec
mov
shl
(bad)
shr
xor
lods
sbb
retf
ins
inc
inc
popf
lods
jmp
jno
jg
gs
and
xchg
fmul
and
pop
add
div
pushf
(bad)
pop
push
movs
sbb
xor
in
mov
gs
mov
(bad)
xchg
add
rcr
xor
mov
repz
ret
fcom
addr16
or
mov
enter
and
outs
xor
mov
icebp
pusha
out
pop
shl
pop
cmp
cli
retf
fst
and
jp
shr
adc
(bad)
sub
inc
mov
ins
js
adc
test
(bad)
xlat
fisubr
ret
imul
cmp
ds
retf
stos
leave
retf
movs
pop
data16
retf
cmp
loopne
or
rcr
pop
lea
ss
sbb
mov
fisubr
lock
ins
das
es
sar
popf
lea
ins
fs
pop
ret
(bad)
push
cmp
xor
out
js
imul
retf
ins
js
cs
cmc
ja
ja
popw
xor
sbb
gs
mov
mov
jno
inc
sub
dec
cld
mov
dec
sbb
nop
dec
es
aad
or
and
(bad)
les
out
shl
push
(bad)
out
retf
ret
push
push
fcmove
ins
dec
shl
jl
test
into
sbb
retf
xchg
sbb
cmovl
jmp
jmp
mov
shl
scas
xchg
iret
lea
or
cmp
ins
and
scas
sbb
je
test
nop
xor
ja
jae
out
cld
or
adc
loopne
mov
leave
dec
les
leave
xor
and
addr16
movs
in
shl
icebp
jae
les
or
sbb
das
jo
outs
adc
lahf
adc
add
aas
aaa
lods
je
push
addr16
(bad)
mov
mov
fld
pop
enter
mov
sar
inc
mov
test
sub
push
aaa
icebp
gs
inc
push
push
call
mov
dec
mov
pushf
jb
movs
sub
jno
aas
sahf
out
jbe
popf
mov
scas
sub
test
scas
(bad)
test
ficomp
mov
add
fs
in
fwait
into
adc
std
adc
push
out
mov
test
stos
mov
and
mov
ds
mov
or
lods
js
mov
enter
adc
xchg
inc
push
test
and
leave
jge
psrld
lods
sub
ja
push
ja
xchg
mov
shl
lods
pop
mov
cmp
dec
jnp
neg
jp
jle
stos
aas
push
adc
xchg
shl
neg
mov
fist
cmp
lods
and
add
aaa
retf
fcmovbe
movs
inc
or
mov
jg
adc
call
or
out
mov
aad
loope
outs
imul
mov
leave
jecxz
outs
arpl
push
pop
int
xchg
sbb
ins
add
pushf
enter
add
dec
int3
xor
movs
xchg
cdq
das
push
or
push
cmp
push
pop
sbb
push
ficomp
xchg
enter
or
inc
or
dec
call
in
inc
pop
mov
movs
in
imul
je
xchg
adc
xchg
and
and
push
push
lods
cmp
lods
cmp
and
movs
jbe
jmp
xchg
mov
xchg
push
and
rol
mov
jmp
jbe
cmp
out
mov
mov
cdq
shr
sbb
hlt
popa
jle
mov
outs
cli
dec
repnz
dec
stos
dec
dec
xchg
xchg
or
xor
(bad)
cld
dec
jmp
jmp
mov
aaa
int3
std
fdiv
sub
dec
ffree
enter
jl
popf
dec
jo
mov
mov
xchg
push
pop
pop
ret
inc
cwde
add
addr16
cmp
adc
dec
sub
add
enter
fldcw
sbb
movs
pop
xchg
adc
aad
inc
lods
cmp
iret
add
or
jmp
jnp
ret
jg
cmp
loopne
dec
or
sti
sub
xor
stc
mov
pop
and
lock
loop
les
sbb
(bad)
xor
mov
popf
out
data16
add
outs
push
sbb
lods
pop
out
in
inc
cs
inc
int3
int3
enter
add
aaa
in
cmps
lock
adc
mov
push
ins
ret
push
aad
test
or
enter
sti
inc
jne
dec
mov
call
movs
sub
fisub
pop
dec
pop
mov
mov
stos
mov
mov
cmp
gs
ret
out
add
es
adc
scas
push
jbe
push
jo
popa
mov
aam
pop
jg
fisub
mov
aam
aaa
lods
arpl
mov
not
sub
gs
dec
mov
fcomp
lock
cdq
lds
popf
jmp
sub
imul
lock
add
pop
mov
das
xor
xor
jmp
mov
jmp
sbb
in
aas
daa
cmp
xor
adc
cmc
loop
mov
or
mov
retf
push
fwait
sub
xor
mov
xchg
pop
pop
les
add
outs
mov
scas
and
retf
jno
pop
and
xor
stos
push
jle
repnz
inc
dec
push
sbb
ins
loopne
test
sub
xor
pop
ror
mov
push
movs
inc
bound
add
retf
or
loop
sub
sahf
mov
fcom
sbb
idiv
add
stos
pop
mov
movs
jb
jnp
mov
setl
mov
adc
mov
repnz
out
xchg
sbb
ret
aad
pop
add
(bad)
loopne
(bad)
call
je
pop
pop
pop
mov
test
jns
cs
mov
cmp
movs
and
stc
sub
stos
jmp
mov
or
or
mov
mov
push
mov
nop/reserved
pop
add
sub
shl
fist
enter
mov
mov
cmp
fild
sbb
mov
add
imul
mov
outs
mov
in
cmp
xchg
lods
inc
mov
cli
jg
daa
inc
cmc
stos
shl
in
add
repnz
and
bound
push
das
lea
cmp
leave
cdq
ins
cmp
fiadd
mov
repnz
int3
jo
inc
dec
xchg
test
inc
xchg
jecxz
in
sti
out
aam
aam
inc
sbb
rep
mov
jmp
dec
or
scas
das
adc
or
cmps
lods
sbb
ins
push
ins
sahf
cs
mov
cmp
call
push
push
dec
push
or
adc
jnp
add
daa
push
sub
jo
ja
ret
movs
sar
pop
and
arpl
cmp
sub
mov
cmc
in
rcr
mov
sbb
jge
fs
popa
loopne
mov
mov
cmp
sti
cmp
sti
push
out
pop
and
nop
xor
inc
jae
mov
in
out
sbb
sar
or
ins
xor
jecxz
mov
mov
adc
or
dec
out
std
or
push
pop
test
mov
push
(bad)
pop
mov
cwde
and
ret
cmps
or
mul
punpckhwd
ds
ja
mov
and
mov
cmp
sub
push
lods
sub
add
enter
sub
mov
mov
js
push
daa
stos
int
inc
xchg
and
(bad)
adc
cmps
ss
add
jno
fidivr
retf
(bad)
movs
icebp
cwde
mov
jmp
sbb
xor
pop
pop
xchg
xor
dec
jno
xchg
mov
cmp
xchg
sub
mov
call
xchg
add
data16
popa
add
mov
mov
addr16
gs
dec
dec
mov
mov
mov
and
fist
aad
sbb
frstor
cmps
jecxz
mov
cmp
push
data16
adc
mov
popa
rcr
(bad)
inc
sbb
sbb
fisub
repnz
sahf
in
or
idiv
xor
in
cmps
push
and
repz
jne
xor
ins
mov
pop
xor
dec
popf
ins
loop
adc
adc
mov
cmp
adc
add
lahf
or
sub
sbb
lea
cld
inc
mov
mov
aaa
(bad)
xlat
in
sbb
movaps
jle
push
leave
mov
mov
mov
cmps
dec
leave
mov
in
add
pushf
mov
mov
mov
inc
xchg
leave
aas
xchg
imul
mov
lea
ror
xchg
dec
add
out
cmp
jne
outs
into
add
iret
fst
cmps
pop
push
je
xchg
push
add
(bad)
mov
in
and
test
cdq
stos
push
out
pusha
sbb
dec
ret
aad
xchg
stos
push
fs
loope
mov
jb
jb
mov
xchg
cmp
jmp
push
addr16
int
popf
jmp
dec
imul
cmps
iret
movs
mov
mov
call
scas
xchg
or
cmp
adc
or
cs
mov
mov
fadd
xchg
jns
xor
loope
xchg
add
frstor
jg
fs
lock
cdq
aad
mov
adc
imul
jl
xchg
xchg
push
jne
clc
arpl
outs
and
ja
mov
or
loop
ret
xor
mov
mov
outs
popf
popf
sahf
hlt
jnp
out
test
loopne
in
std
sub
pop
mov
or
daa
stos
mov
shr
popf
sbb
or
adc
sbb
xlat
int3
mov
icebp
and
call
fstp
pop
adc
test
nop
test
popa
inc
test
mov
xor
adc
lock
xchg
mov
call
mov
sbb
pop
mov
lods
in
push
push
iret
jae
jmp
gs
or
jmp
xchg
pop
push
sbb
xor
imul
test
repnz
inc
and
add
add
and
pop
loopne
sar
jno
jmp
xor
lds
lahf
ds
jecxz
pop
sub
loope
jmp
jmp
aam
and
gs
cmp
mov
enter
aam
fucomip
push
push
dec
push
mov
daa
bound
nop
rol
(bad)
pop
scas
push
(bad)
ret
adc
mov
and
hlt
and
inc
cmps
lock
xchg
jo
shl
sub
inc
cmps
(bad)
xchg
icebp
int3
lahf
cmp
(bad)
jmp
imul
cmp
dec
xchg
pop
sar
aas
outs
idiv
mov
jg
xchg
lock
and
push
movs
in
ret
fwait
cmps
mov
jb
lahf
gs
lds
sub
push
mov
mov
sbb
push
xchg
adc
leave
cmp
pop
stos
hlt
test
shl
inc
sub
xchg
mov
fs
and
mov
mov
scas
repz
lock
add
daa
test
(bad)
stos
sub
mov
and
data16
test
cmp
popf
lods
in
push
mov
leave
repnz
stos
push
and
mov
stos
jecxz
(bad)
fcom
pop
adc
iret
mov
xlat
mov
sub
call
in
(bad)
mov
pop
pop
jb
or
dec
imul
push
fdiv
and
dec
or
push
daa
into
lods
add
out
add
outs
jno
pusha
lods
call
mov
fisttp
jnp
fst
stc
shl
push
sbb
pop
test
adc
sbb
in
fistp
cmp
push
bswap
xor
and
mov
fld
aad
cmp
jg
dec
call
mov
mov
cmp
xchg
xor
mov
and
scas
out
xchg
lods
jns
into
or
outs
pusha
push
mov
push
xchg
mov
(bad)
in
mov
adc
mov
add
(bad)
push
sub
pop
dec
cmp
sbb
popa
inc
push
imul
sbb
add
pop
and
or
repz
imul
repnz
cli
js
imul
pop
rcr
ins
inc
(bad)
pop
mov
mov
or
inc
aaa
in
cmc
lahf
mov
stos
and
fst
push
mov
fimul
cmp
rcr
inc
cmp
mov
ja
in
jnp
lock
dec
test
xchg
sub
cli
mov
mov
or
call
pushf
sub
mov
bound
div
jecxz
sub
pop
dec
jo
std
mov
adc
data16
popf
adc
pushf
repz
sbb
cmp
xchg
dec
jmp
lock
ins
rcr
cwde
cmp
dec
mov
jbe
sti
loop
adc
(bad)
push
mov
cmp
or
add
aad
jnp
inc
out
mov
jl
into
data16
push
outs
mov
dec
xchg
or
mov
xchg
movs
int
xor
(bad)
ror
mov
sub
pop
fnsave
cld
nop
mov
dec
adc
xchg
loop
sbb
test
xchg
rol
lods
xor
out
cmp
(bad)
icebp
inc
adc
adc
shl
xor
sar
add
outs
xor
cwde
js
nop
mov
jle
bound
sbb
mov
sahf
xor
xor
repz
mov
adc
or
int
mov
xor
jno
pop
jmp
test
repz
int
lds
int3
adc
dec
sub
xor
add
xchg
sbb
and
xor
lods
movs
jmp
sbb
sbb
sar
xchg
adc
jb
sti
lea
mov
sub
sysexit
lock
loopne
xchg
rcr
adc
rcl
pop
mov
lods
inc
dec
cdq
inc
cmp
xchg
(bad)
aas
mov
add
test
sbb
call
push
fnsave
lds
pusha
fild
sahf
cmps
mov
jge
add
lds
lds
mov
mov
test
fdivp
leave
retf
movs
fadd
and
(bad)
out
(bad)
inc
std
lods
push
adc
mov
sbb
icebp
outs
push
push
mov
xchg
dec
push
jge
into
je
ins
scas
lock
imul
shr
or
sub
mov
fwait
pop
xor
mov
inc
dec
and
push
add
out
mov
or
lea
adc
xchg
mov
mov
jp
retf
stos
out
pop
jp
pop
les
push
in
jb
xchg
mov
and
test
rol
push
adc
outs
in
movs
or
lock
cmps
push
cmp
ja
adc
mov
mov
pop
mov
pop
mov
add
inc
in
push
inc
jmp
fucomp
lock
dec
dec
ds
pop
sahf
sub
mov
jp
pop
jns
dec
daa
mov
test
lods
jmp
dec
loopne
jmp
sbb
push
test
xor
or
pop
push
outs
std
retf
xor
popw
cmp
jge
into
mov
pop
sbb
out
mov
mov
jno
dec
xchg
test
in
cmp
es
push
mov
out
ror
xchg
pop
pop
push
dec
add
inc
cs
bound
frstor
(bad)
cmp
pop
test
jge
sahf
das
dec
mov
sbb
scas
(bad)
and
jmp
sar
(bad)
jnp
xor
add
addr16
icebp
mov
xor
mov
push
dec
aaa
push
test
mov
stc
adc
xor
dec
lods
mov
adc
adc
jo
jae
in
hlt
unpcklps
push
js
daa
add
mov
ret
xor
(bad)
mov
jecxz
and
outs
cwde
dec
icebp
jo
pop
addr16
mov
xchg
dec
(bad)
xor
inc
mov
into
xor
push
adc
jmp
push
xlat
and
inc
cmp
les
loopne
mov
das
xchg
xchg
iret
cmp
inc
add
les
sub
push
mul
call
mov
sbb
xchg
xor
repnz
jecxz
call
jnp
icebp
pop
xchg
repnz
adc
ret
xchg
inc
inc
hlt
ja
mov
into
out
push
in
sbb
adc
sbb
mov
in
add
data16
fsubp
or
popf
std
fnstsw
cmp
outs
dec
xchg
imul
mov
jno
dec
adc
jno
sbb
loope
pop
adc
pop
je
fs
les
mov
je
stos
mov
and
ret
dec
inc
xlat
xchg
sub
mov
pop
clc
push
das
mov
cmp
sbb
add
push
xchg
ret
mov
adc
push
jo
js
mov
push
push
cmp
call
jnp
in
xor
fisubr
inc
ficomp
movs
ins
push
dec
push
repnz
xchg
lods
pop
(bad)
pop
mov
jge
call
cwde
jnp
fistp
inc
mov
imul
dec
xchg
fsub
mov
jg
test
cmc
retf
and
mov
inc
or
xchg
ror
xchg
and
sub
das
push
in
or
pop
push
xlat
xchg
or
pop
ins
sbb
inc
adc
push
(bad)
or
xchg
ss
es
bound
push
mov
retf
mov
(bad)
pop
sub
sub
in
pop
mov
cs
ins
cmp
call
scas
pop
xchg
dec
dec
(bad)
and
mov
ror
push
sbb
jecxz
loop
mov
cmp
inc
jg
mov
stc
les
bound
dec
mov
add
xchg
cmp
jmp
ja
inc
inc
rol
sbb
xchg
sbb
add
xchg
jne
stc
and
dec
xlat
jns
(bad)
cmps
rcl
pop
pop
or
xlat
mov
out
jb
cmp
mov
cmp
popa
test
inc
pop
out
xchg
cwde
xor
push
adc
daa
xchg
(bad)
xchg
ret
loopne
pop
push
stc
or
and
jne
dec
sub
mov
pop
pop
retf
cmp
xchg
cmp
and
arpl
je
out
imul
clc
sbb
dec
xor
ficom
xor
icebp
lea
or
std
dec
cmps
shl
mov
dec
xchg
or
adc
jnp
mov
fadd
clc
jbe
jmp
scas
xchg
(bad)
and
dec
push
xchg
dec
add
fist
mov
mov
push
(bad)
call
icebp
sbb
loopne
dec
repnz
mov
sub
xchg
xor
out
jne
loopne
adc
mov
jg
mov
lods
jmp
sub
xor
lahf
sbb
cmc
movs
mov
js
sub
xchg
pop
inc
or
jmp
mov
lock
(bad)
push
mov
int
stc
and
retf
xor
add
inc
test
or
cmps
add
pop
movs
push
push
sbb
xchg
xchg
cld
xchg
xchg
or
xlat
or
mul
hlt
int3
mov
pop
cmp
in
inc
es
(bad)
and
adc
std
sub
mov
shl
pusha
sub
idiv
fbstp
popa
icebp
(bad)
out
lahf
or
pop
pop
mov
arpl
loop
pop
adc
(bad)
cmps
xchg
dec
shr
jmp
xor
adc
jno
xor
imul
xor
mov
gs
jns
push
jae
ja
jle
dec
sbb
enter
xchg
xlat
out
pop
in
jmp
xor
popf
inc
sub
in
(bad)
mov
and
and
xlat
xchg
jmp
jmp
pop
sbb
imul
popf
jae
jns
sub
call
xchg
mov
cmp
fcmovu
sbb
sub
adc
dec
scas
add
and
inc
pop
mov
in
nop
aaa
inc
(bad)
push
ds
ret
mov
shr
add
xlat
xchg
(bad)
adc
inc
retf
or
in
adc
mov
mov
xchg
jo
test
pop
ds
pop
push
mov
xor
xlat
repnz
mov
enter
(bad)
dec
jmp
dec
mov
cmp
xchg
loope
sub
mov
mov
bound
inc
jge
in
mov
xchg
xor
lahf
retf
ins
xchg
xchg
sbb
mov
mov
data16
pop
inc
sbb
hlt
test
loopne
icebp
mov
ds
imul
in
inc
jp
fstp
out
std
retf
dec
xor
xchg
in
or
adc
jl
sti
dec
mov
shl
repnz
adc
rcl
mov
loopne
js
ss
and
daa
aad
(bad)
pusha
dec
ret
xchg
xchg
mov
pcmpgtb
mov
mov
loopne
lahf
mov
jno
inc
ins
sub
pop
mov
mov
or
cmp
push
fwait
repnz
sahf
(bad)
sub
inc
mov
push
pushf
xor
xchg
scas
repnz
mov
adc
retf
and
int
dec
mov
jns
push
jae
mov
inc
push
cmps
jl
(bad)
in
repnz
int3
push
das
mov
or
call
test
push
movlps
lahf
add
inc
sahf
push
and
pop
pop
clc
cmps
xor
inc
push
aam
jne
cwde
loopne
stos
jecxz
not
push
aam
jno
mov
inc
jae
xlat
sahf
imul
jne
pop
mov
push
lahf
mov
xchg
mov
pop
scas
jl
mov
cwde
or
out
mov
pop
push
inc
ret
pop
pop
jg
dec
ret
loopne
inc
xchg
and
push
call
fist
fist
scas
xor
sbb
pop
inc
movs
stc
or
es
adc
rcr
xchg
push
jbe
xor
sub
cmp
push
pop
iret
movs
sbb
jns
dec
(bad)
push
(bad)
xchg
leave
mov
in
int
xchg
sbb
movs
add
iret
xchg
out
repz
push
lahf
pop
jle
push
shl
in
dec
bound
mov
in
add
dec
jle
pop
mov
mov
in
(bad)
rcl
lds
mov
sbb
fs
aam
jae
stc
dec
jecxz
push
push
mov
clc
xor
jmp
mov
or
xchg
and
int
movs
add
cdq
jmp
mov
mov
(bad)
jg
cmps
push
(bad)
pushf
data16
dec
sub
mov
shl
popa
xchg
push
sbb
call
pop
sub
pop
mov
mov
clc
jmp
loopne
fst
push
dec
push
stc
outs
pop
mov
lahf
xor
fcomp
(bad)
cli
in
mov
cs
ret
sahf
test
xor
push
and
fwait
mov
sbb
clc
dec
jmp
dec
mov
push
inc
sbb
arpl
fild
fild
xor
sbb
or
dec
arpl
xchg
std
inc
(bad)
jp
xor
sub
ins
movs
fidivr
inc
sbb
and
jno
xor
cmp
imul
pop
mov
retf
test
jns
xor
shl
adc
mov
or
imul
sub
lahf
jecxz
mov
push
(bad)
sbb
dec
cli
stos
outs
outs
dec
add
sbb
jp
mov
cli
pop
jmp
enter
into
lods
sub
cmp
or
or
ficomp
xchg
(bad)
pop
jbe
cli
push
iret
gs
retf
aas
outs
xor
jae
aaa
dec
imul
test
mov
scas
call
xor
outs
in
pusha
or
cwde
xor
or
daa
call
aad
sub
or
sub
sub
sbb
inc
xor
(bad)
fst
and
sub
mov
(bad)
in
imul
bound
aam
push
clc
in
mov
loope
(bad)
sti
push
dec
or
mov
fst
xlat
lock
cmp
mov
cli
mov
sbb
ror
imul
lods
xlat
cmp
aad
aam
shr
and
or
cmps
in
dec
enter
add
sub
sub
das
aad
popa
adc
shl
cmp
lahf
mov
std
lods
retf
cmp
aam
mov
push
addr16
stc
sbb
cld
in
cmp
dec
push
mov
mov
xor
jg
inc
or
ds
cmp
mov
(bad)
adc
jle
jecxz
pop
test
clc
mov
jb
sahf
pop
aas
(bad)
jns
stos
dec
clc
bound
mov
and
sub
fcmovb
cwde
out
stos
or
sbb
and
pop
dec
push
retf
ins
js
cmp
ds
icebp
nop
(bad)
jg
mov
gs
stos
adc
and
int
mov
or
aaa
ficomp
dec
addr16
jmp
dec
sahf
pop
repnz
mov
aam
aaa
mov
jno
dec
adc
jns
arpl
dec
mov
push
inc
dec
adc
shl
adc
inc
pop
push
dec
push
(bad)
jno
mov
pop
mov
in
icebp
iret
lods
xor
idiv
and
inc
ds
mov
(bad)
scas
pusha
hlt
or
test
test
dec
push
es
neg
jns
cmp
xchg
sbb
sbb
sar
fs
(bad)
stc
outs
mov
sahf
mov
imul
in
jmp
addr16
stos
mov
xor
adc
(bad)
les
retf
mov
out
dec
push
mov
js
jl
(bad)
int3
xlat
pop
mov
inc
jb
mov
mov
push
in
jns
sub
push
cwde
cli
mov
call
stc
shl
daa
imul
xchg
es
xchg
and
in
cdq
pop
scas
mov
dec
adc
repz
xor
int
sub
out
addr16
ret
mov
into
in
fidiv
pop
dec
cmps
(bad)
(bad)
cmp
int
movs
mov
cld
dec
jno
dec
mov
sub
xor
ror
pop
inc
scas
call
and
jne
retf
(bad)
sar
sbb
loope
sub
test
adc
sti
enter
test
shl
cmp
out
loopne
aad
test
and
and
cmc
pop
ins
mov
mov
fistp
add
sti
pushf
sbb
(bad)
popf
mov
pop
icebp
(bad)
jns
pop
scas
jae
ins
ret
cmps
hlt
inc
pop
inc
mov
sub
mov
ror
and
dec
ds
push
repnz
cmp
pop
(bad)
mov
mov
jnp
data16
push
into
fst
dec
sub
ins
or
(bad)
inc
sti
jecxz
cmp
jmp
fs
xchg
inc
xchg
xchg
pop
fwait
lods
and
xchg
lahf
xchg
retf
pop
lds
cmps
gs
and
std
movs
push
push
pop
add
push
dec
xor
imul
mov
jo
aas
fidivr
sahf
pop
mov
adc
(bad)
lods
icebp
sbb
hlt
(bad)
iret
xlat
mov
popf
cwde
cmp
iret
in
and
adc
in
inc
maxps
(bad)
adc
outs
adc
sub
shl
test
cmc
xor
xchg
ss
mov
inc
js
fcom
js
ret
mov
dec
cs
cmp
mov
or
enter
and
imul
aaa
scas
mov
fstp
into
pop
inc
jo
cs
xor
test
mov
pop
mov
ret
inc
push
sahf
or
push
jns
push
pop
or
ja
iret
pop
adc
outs
sub
jmp
mov
inc
imul
loop
mov
cmps
sbb
in
adc
xor
xor
mov
jae
mov
int3
iret
mov
ja
in
aam
inc
mov
sbb
mov
mov
scas
in
and
(bad)
and
lods
and
cmp
dec
std
and
pop
fstp
mov
add
mov
or
loop
pop
pop
(bad)
cli
jge
(bad)
pushf
mov
push
scas
in
xor
lds
mov
adc
cmp
lds
call
and
leave
loopne
stc
in
bound
mov
push
rol
test
pushf
cmp
mov
pusha
loopne
push
nop
sub
sbb
call
je
xchg
push
out
(bad)
hlt
mov
cmps
adc
jbe
loope
xor
mov
imul
int3
lods
xchg
inc
lock
popa
sbb
adc
pop
popa
retf
add
loopne
lock
pop
sysexit
out
data16
fsubr
je
imul
aaa
xchg
imul
xchg
mov
dec
pop
pushf
imul
or
jnp
dec
outs
(bad)
hlt
repz
sbb
and
dec
cld
fstp
push
or
mov
(bad)
cmps
ret
or
inc
jo
stc
jo
loopne
aas
sbb
sub
icebp
or
mov
mov
xchg
inc
sbb
in
aad
push
call
test
mov
xor
retf
push
add
and
pop
xor
leave
stos
mov
pop
cs
jge
xchg
jne
fs
dec
xor
sub
mov
pusha
push
inc
icebp
pop
xor
sub
imul
push
hlt
test
data16
rol
neg
in
and
rcl
or
push
(bad)
mov
les
repnz
and
sub
adc
jno
pop
xor
pusha
and
and
shl
inc
pusha
adc
lds
retf
lods
cs
xchg
stc
movs
mov
icebp
add
mov
mov
pop
loope
stos
mov
dec
iret
out
inc
push
lds
adc
cli
jge
(bad)
out
mov
icebp
stos
data16
dec
(bad)
repnz
scas
pop
adc
xor
and
ffree
add
addr16
stos
inc
inc
cmp
ins
adc
jae
(bad)
lahf
mov
sahf
test
leave
out
movs
sar
out
mov
in
enter
add
dec
adc
test
add
fnsave
cmp
sti
lea
add
popf
lea
test
dec
adc
fdiv
popa
aas
ins
xchg
xor
lds
rol
push
push
cdq
sub
enter
data16
cmp
loope
pop
je
sbb
imul
add
mov
or
int3
jg
sub
sub
sbb
cmp
movs
out
stc
sahf
pop
ret
pushw
sbb
mov
mov
xchg
cmps
jmp
and
dec
in
jbe
or
mov
leave
bound
pop
add
loope
call
shr
stos
in
test
jbe
inc
popw
push
mov
nop
cmp
mov
aas
in
inc
enter
or
aad
inc
xchg
jle
sbb
aad
mov
cmp
mov
into
rcr
cld
aam
sbb
sbb
sbb
pop
add
iret
mov
daa
imul
jg
jmp
cmp
jb
mov
pop
fcomp
adc
neg
into
sbb
jbe
xor
fidiv
call
cmp
pop
inc
xor
inc
jns
add
adc
popa
lds
lds
jp
dec
jle
shl
mov
ret
pop
dec
pop
adc
and
idiv
cmp
xchg
mov
push
daa
pop
xor
rcr
cmp
pushf
ficomp
fimul
push
inc
(bad)
out
outs
add
mov
(bad)
pop
ficomp
ret
jne
hlt
sbb
fsubrp
push
dec
push
sbb
sar
fisub
push
xor
mov
movs
pusha
push
sahf
mov
imul
movs
push
mov
adc
inc
fstp
inc
sub
pop
pop
push
scas
push
mov
xchg
cmp
fwait
jno
add
mov
rcl
pop
movs
jge
loopne
or
push
push
inc
mov
cli
sahf
cmps
in
mov
retf
xchg
lahf
data16
jecxz
sbb
dec
cmp
cmp
shr
je
shl
or
inc
cmc
pop
outs
or
adc
sub
out
scas
and
push
ja
mov
mov
push
in
add
test
adc
aas
stos
xchg
fmul
je
call
cmp
jle
es
aam
movs
push
dec
dec
or
and
mov
bound
iret
jb
dec
cmc
push
xchg
pop
mov
push
or
mov
mov
movs
mov
or
mov
sbb
jge
or
test
push
stc
xchg
pushf
inc
repnz
ret
outs
inc
fs
add
sub
push
jg
inc
cmp
and
xchg
cmp
cmps
push
inc
and
fnstcw
imul
(bad)
or
fmul
xor
mov
adc
adc
daa
xor
cld
dec
scas
xor
xchg
shl
xor
movs
pop
ja
(bad)
push
xchg
inc
mov
fisub
ins
shl
mov
add
sbb
mov
es
ficomp
mov
repnz
mov
pop
div
sub
add
(bad)
out
jb
pop
das
js
jmp
dec
sahf
and
out
mov
pop
test
cmp
loope
jp
rcl
adc
sub
mov
or
pop
jle
icebp
shr
mov
or
in
outs
imul
pop
pop
push
inc
(bad)
test
pop
jns
(bad)
xchg
(bad)
cmps
mov
hlt
scas
sbb
iret
push
sbb
movs
cmp
sub
cmp
repz
pop
arpl
iret
imul
scas
ror
inc
dec
cmc
inc
jecxz
inc
fbld
dec
xchg
add
pop
(bad)
push
sub
cmp
mov
fs
jmp
and
in
in
imul
mov
pop
sub
sti
test
jnp
cmp
sar
sbb
jmp
and
xor
imul
jae
repz
dec
gs
cmp
(bad)
adc
cmc
mov
aas
pop
aad
jno
sbb
lea
or
sbb
sahf
jb
mov
xor
shr
and
xchg
push
cmps
jge
stc
data16
pop
add
popf
ffree
ss
cs
imul
inc
popf
jp
jnp
adc
pop
xor
xor
xor
xchg
js
sub
arpl
mov
mov
inc
out
cld
(bad)
shl
(bad)
hlt
pop
jecxz
daa
mov
je
xor
jne
add
mov
inc
and
push
outs
mov
push
mov
ss
sub
mov
inc
cwde
mov
pop
jns
into
cmps
and
icebp
sub
mov
push
lods
pop
sbb
sub
mov
iret
clc
or
retf
loope
jns
dec
call
fcomp
and
das
out
sub
cmp
ss
hlt
pop
dec
jne
mov
push
stc
inc
mov
adc
lahf
pusha
add
arpl
jmp
push
xor
cld
icebp
in
inc
fwait
jae
add
std
lahf
into
jne
pop
dec
and
cmps
mov
daa
xchg
mov
jbe
push
call
dec
movs
adc
mov
sub
rcr
xchg
gs
pushf
out
cmc
dec
push
cmp
xchg
in
dec
inc
pop
pop
into
test
xor
daa
mov
add
pop
fcom
fdivr
ss
inc
ja
(bad)
(bad)
leave
les
mov
lock
xchg
data16
sbb
push
xchg
push
jno
add
jne
mov
cmps
cmp
lods
or
sub
push
outs
push
mov
adc
icebp
dec
pusha
sbb
mov
aas
adc
(bad)
jae
push
xchg
in
adc
fwait
push
bswap
sar
ins
lds
call
adc
shl
das
inc
mov
loop
sbb
(bad)
and
push
xchg
pop
sub
push
cmp
pop
test
in
fwait
sub
cmc
sbb
xor
js
adc
fwait
and
mov
fisubr
in
xor
and
sbb
retf
(bad)
mov
or
ja
shrd
or
stc
out
jmp
shr
xor
add
add
call
int3
pop
push
aas
dec
mov
addr16
in
sbb
dec
fdiv
jle
test
add
dec
ja
cs
int
push
ja
inc
ret
jmp
je
mov
sub
adc
sar
or
inc
(bad)
fwait
jne
out
dec
test
add
hlt
xchg
ret
dec
movs
and
dec
push
sbb
mov
movs
jmp
icebp
sub
mov
inc
lock
jno
lods
jb
pop
pop
add
dec
cmps
xor
int3
lock
ins
bound
sbb
scas
scas
out
iret
iret
mov
loopne
adc
xor
cwde
inc
push
or
vsubps
sbb
mov
js
test
ret
inc
xlat
push
out
jg
dec
out
shl
aad
sbb
inc
das
xor
dec
stos
aaa
xchg
fnstcw
xchg
cmp
lods
xchg
ds
cmp
cmp
cmps
rcr
push
(bad)
loopne
dec
push
cmps
or
push
out
jo
ds
mov
loopne
das
mov
(bad)
sbb
call
mov
inc
xor
xchg
cmc
add
out
add
or
pop
pop
mov
shl
dec
movs
(bad)
cmps
pusha
rcl
stc
jg
sub
into
outs
pop
xchg
sbb
stos
add
mov
aam
lods
push
xchg
mov
mov
(bad)
popf
loope
sub
mov
fstp
sahf
out
cmp
push
(bad)
pop
jnp
enter
pop
retf
pop
mov
sahf
jle
outs
add
icebp
push
in
or
popa
call
stos
sub
adc
inc
into
js
xchg
mov
mov
popa
mov
inc
adc
aam
or
ds
jge
(bad)
nop
mov
and
cmp
mov
push
into
imul
sub
adc
and
ins
adc
fimul
and
inc
loopne
mul
dec
jae
pop
ds
int3
push
inc
in
loopne
xchg
rol
cmp
aaa
out
xchg
scas
mov
nop
ins
xor
push
ret
(bad)
fs
dec
ins
loope
mov
rcr
xlat
cld
call
or
dec
or
(bad)
rol
sbb
pop
or
sbb
pop
push
push
or
jle
push
outs
inc
push
hlt
fsub
mov
mov
nop
and
xchg
nop
hlt
mov
and
leave
xlat
outs
jge
pop
inc
xchg
mov
popf
cmp
fs
in
push
aaa
xor
jb
aas
xchg
cmp
mov
sbb
pop
ret
jmp
hlt
jl
lods
ror
xchg
int
in
sub
test
jmp
ins
movs
and
xchg
or
xchg
aam
xchg
cs
hlt
aaa
jns
nop
push
sbb
mov
or
bound
inc
jmp
sbb
jl
mov
loop
shr
adc
push
add
pop
in
leave
repz
xchg
lea
xchg
jae
leave
jge
call
pop
add
stos
stos
ds
and
ss
push
loope
outs
ret
outs
imul
adc
out
sub
in
mov
cld
idiv
call
ja
test
out
jecxz
inc
adc
jo
retf
pushf
add
xor
cs
popf
dec
in
sar
loop
and
mov
cs
lea
push
cs
pop
cs
push
push
je
mov
push
jmp
mov
xchg
xor
popf
ds
and
pop
mov
mov
sub
sub
test
jmp
cmps
push
jg
scas
cmps
fisttp
jno
repz
ins
lahf
shr
cwde
xchg
sbb
inc
add
jmp
sub
sub
arpl
mov
setge
and
addr16
or
pusha
cmp
add
jno
stc
hlt
lea
sub
mov
cdq
stc
outs
adc
cmc
mov
xchg
sbb
les
icebp
rcl
sbb
(bad)
cmps
repz
call
aam
loop
cmc
push
(bad)
clc
sub
movs
and
arpl
sbb
push
sbb
retf
fs
mov
xchg
and
fcom
fisub
in
pop
hlt
fwait
mov
into
mov
xchg
test
dec
jg
sbb
nop
in
(bad)
ror
fnsave
imul
ret
and
push
popa
sub
adc
retf
mov
inc
(bad)
dec
add
or
jne
imul
aaa
inc
data16
mov
retf
(bad)
outs
ret
push
fild
add
push
adc
or
in
cmps
icebp
sub
lods
scas
or
mov
push
mov
fldcw
cwde
push
enter
fdiv
xor
or
mov
pop
and
cmp
loopne
cwde
popa
es
sub
fwait
shr
in
mov
xor
mov
mov
les
push
das
les
mov
sub
stc
lock
ds
mov
or
sti
jmp
ja
loopne
sbb
(bad)
movs
cmp
pop
adc
push
jp
xlat
jmp
mov
mov
xchg
jmp
cmp
sub
pop
aam
adc
jno
movs
add
xor
pop
and
call
clc
inc
push
(bad)
hlt
xchg
pop
loope
fs
ret
push
adc
cmp
das
call
test
cs
jnp
leave
rcl
cmp
pop
jae
test
and
adc
jp
or
or
and
loope
cmp
in
jmp
inc
xor
pop
ds
aaa
push
fldcw
loopne
fwait
lahf
lahf
int3
rcl
(bad)
loope
jno
push
loopne
lods
into
push
mov
mov
js
jae
push
ds
push
and
pop
repnz
rcl
or
push
adc
fcom
push
sub
pop
sbb
lods
icebp
loope
(bad)
call
out
dec
fistp
sub
adc
mov
mov
enter
test
into
mov
mov
xor
stos
xor
mov
jg
mov
shl
cmp
xchg
adc
pop
and
fisubr
stc
fs
cmp
mov
xrelease
sbb
loope
pop
ret
int3
scas
add
loope
fs
mov
inc
and
mov
rcl
push
inc
fcom
push
sbb
sub
mov
cmp
jmp
jmp
add
lahf
jo
data16
adc
cli
call
mov
push
fild
push
mov
ins
and
mov
push
mov
sbb
aas
(bad)
shr
dec
xor
nop
or
mov
jne
imul
enter
call
(bad)
xor
das
out
inc
dec
addr16
dec
inc
jmp
push
mov
fld
retf
adc
sub
inc
and
stos
inc
cdq
sub
das
sub
and
out
or
scas
push
mov
ret
mov
and
hlt
sbb
push
inc
dec
clc
sub
pop
out
mov
mov
test
mov
pop
xchg
dec
inc
ins
jle
sub
test
retf
add
mov
mov
out
mov
xor
sbb
cmps
pop
push
ficom
data16
xchg
imul
jnp
repnz
iret
mov
ins
add
sbb
dec
jo
fisttp
out
int
(bad)
xchg
push
dec
retf
sub
cmp
cmps
cmps
ss
cvtdq2ps
jge
xlat
cmp
mov
data16
sub
in
and
mov
rcr
das
sub
das
loopne
scas
jmp
stos
cli
lods
mov
add
cmp
loopne
xlat
retf
xchg
movzx
push
sar
mov
xlat
xchg
fnsave
imul
xor
sub
inc
(bad)
stc
pop
cmp
fsub
push
pop
paddsb
aas
or
scas
scas
and
pop
push
into
stos
loopne
shl
add
mov
jmp
lods
adc
sub
test
in
std
imul
pop
mov
pusha
adc
dec
shr
ret
iret
xlat
dec
mov
inc
dec
rol
icebp
mov
adc
xchg
cmc
add
xor
jnp
add
jle
jmp
jo
aad
(bad)
mov
cmovo
cmc
jle
mov
push
mov
dec
adc
xchg
daa
jge
in
scas
mov
add
fdivr
inc
iret
cmps
dec
pop
mov
mov
jmp
es
or
pop
push
pop
mov
push
cwde
call
cmps
cmp
sub
dec
add
fmul
adc
mov
jb
jmp
lahf
inc
jo
sub
out
lds
xchg
aaa
sub
cmps
aam
popf
xor
fst
mov
pushf
xor
cmp
fwait
ret
xor
push
sahf
pop
pop
mov
enter
adc
div
mov
mov
nop
inc
mov
add
inc
sub
adc
addr16
rcr
cmp
jno
push
pop
push
pop
mov
addr16
fstp
dec
imul
fld
jae
shl
je
les
std
test
loop
int3
and
add
cmp
mov
pusha
mov
retf
jmp
xor
push
fstp
sub
push
mov
push
jae
(bad)
lahf
test
xor
das
sub
mov
inc
adc
les
arpl
push
std
retf
mov
fwait
push
loopne
fcmovnu
or
dec
ret
dec
(bad)
out
outs
out
pop
adc
and
mov
jno
ja
fisub
call
addr16
or
int3
mov
push
fcom
enter
ins
pop
jns
popf
lods
push
shl
dec
test
jle
add
jecxz
adc
popa
mov
push
mov
inc
cmp
jl
mov
in
jne
addr16
shl
push
je
cmp
or
test
(bad)
in
les
push
xchg
jb
xor
rcr
ds
and
mul
(bad)
push
ins
addr16
and
lock
popf
push
and
mov
sub
dec
jns
pop
inc
sub
jmp
and
test
or
add
jmp
shl
mov
xor
in
ins
cli
and
cmp
test
xchg
or
lods
std
dec
push
sbb
cmp
push
jnp
imul
adc
push
rol
xlat
jmp
das
xor
mov
sbb
adc
in
shl
cmc
cmp
push
cmp
(bad)
pop
dec
push
jp
movs
scas
add
and
adc
div
adc
dec
fmul
mov
and
das
jmp
sub
add
repnz
dec
xor
leave
ret
out
std
mov
sbb
push
test
data16
in
add
jnp
shl
inc
(bad)
into
cmc
mov
loopne
jno
push
sbb
test
mov
call
mov
cmp
xchg
ja
(bad)
ret
inc
aad
hlt
out
mov
dec
jge
and
jecxz
shl
dec
sahf
rep
cli
cmp
stos
jb
pop
bound
pop
fsub
inc
dec
fistp
push
push
jb
popa
mov
mov
loope
jo
(bad)
in
and
(bad)
adc
out
scas
gs
xor
add
sbb
shl
mov
mov
push
sub
inc
stos
ss
call
inc
adc
cmp
daa
hlt
push
push
sub
xchg
dec
inc
clc
fwait
test
retf
mov
into
add
mov
loop
int3
or
aad
pop
test
int3
sub
daa
scas
int
jge
jge
mov
and
loop
out
in
push
pop
push
inc
xor
xchg
dec
xchg
push
mov
pushf
sub
and
cld
mov
dec
sbb
cmp
sub
jmp
mov
ret
or
xor
xchg
ret
mov
aas
stos
or
sub
loope
clc
xor
lea
and
and
rcr
inc
dec
movs
sbb
stos
mov
(bad)
jnp
and
in
push
jg
arpl
movs
or
das
cmps
cmp
enter
cmp
push
xor
mov
fld1
push
sbb
jb
call
rcr
sbb
stc
sbb
pop
test
inc
dec
pop
cwde
cmps
mov
in
pop
adc
int
cmps
int
xor
addr16
xlat
daa
pop
rcr
jo
mov
push
jbe
dec
aaa
push
pop
inc
inc
adc
push
fild
shl
aad
popf
inc
add
lods
fmul
repz
ins
rcl
dec
mov
mov
lock
mov
and
test
test
mov
(bad)
loopne
pop
test
mov
xor
cmp
or
pop
sub
xor
popf
jp
shr
in
cld
imul
test
les
mov
fdivr
outs
push
or
xor
pop
ret
psrad
xchg
(bad)
lahf
pop
sub
imul
in
add
fs
shl
inc
(bad)
jmp
fisttp
int3
sbb
test
icebp
adc
js
stc
xor
rep
ror
retf
adc
(bad)
iret
inc
mov
test
add
cmps
shr
cmp
push
rol
retf
int3
in
mov
fmul
cld
xor
test
sub
adc
mov
mov
(bad)
lahf
dec
(bad)
adc
scas
jns
ds
stc
mov
mov
lods
mov
push
fmul
dec
addr16
xchg
mov
sbb
fisubr
loopne
jp
mov
pop
xchg
mov
mov
inc
and
mov
addr16
js
aaa
jmp
adc
xor
gs
out
sub
(bad)
xchg
outs
dec
loopne
pop
mov
hlt
push
jmp
cmps
cwde
(bad)
sub
mov
jp
ret
ds
xor
push
cmp
call
mov
mov
or
fwait
pop
xor
and
enter
lds
cmps
and
jl
add
cdq
push
or
out
lahf
pop
shr
jmp
mov
cmp
cmp
pop
mov
pop
sbb
xchg
dec
cs
test
dec
(bad)
sub
dec
sbb
add
cwde
shr
in
jmp
dec
js
sub
xchg
pushf
enter
xor
lods
add
ficomp
dec
push
jl
adc
sar
mov
xchg
adc
call
pop
stos
test
gs
sar
cmp
jb
shl
popf
jp
and
sub
nop
addr16
in
adc
push
inc
dec
retf
pop
pop
mov
ret
fwait
mov
xchg
mov
imul
mov
mov
mov
adc
inc
and
shr
outs
aad
clc
add
shl
icebp
lock
cli
adc
push
mov
mov
not
xchg
loope
inc
xor
pop
adc
retf
sub
rol
xchg
jno
sub
or
mov
fs
mov
cmp
mov
leave
icebp
pop
ror
xchg
mov
test
or
or
pop
xchg
popa
push
pop
push
out
iret
pop
shr
mov
mov
div
jne
test
mov
out
dec
pop
and
xor
xchg
jecxz
shl
retf
loop
or
(bad)
sbb
sbb
dec
jne
adc
(bad)
jne
mov
fs
or
add
in
in
add
fild
xchg
lods
mov
mov
mov
xor
inc
out
mov
retf
xor
jmp
rcl
adc
gs
les
int
inc
pop
fist
jb
xor
push
mov
sahf
add
in
add
lods
cld
retf
lds
cld
sti
or
mov
xlat
mov
lods
(bad)
aam
lock
jne
inc
out
shl
xchg
dec
jmp
fimul
ins
or
dec
scas
mov
cld
or
jno
cmps
ficomp
dec
fdiv
mov
jg
fst
jg
cmps
cmp
mov
dec
repz
sahf
xchg
fcomp
xchg
mov
inc
add
sbb
imul
jbe
xchg
int
(bad)
je
push
test
inc
xchg
lods
or
or
int3
xchg
cmps
data16
cmp
jmp
add
rol
ins
nop
jge
mov
addr16
xchg
aaa
jl
mov
xchg
sti
stos
retf
mov
jp
icebp
xor
jns
xchg
in
jne
ins
inc
call
sub
jg
fs
jae
inc
add
jp
out
cmp
test
loope
(bad)
xchg
bound
cmp
xchg
sub
aam
or
jmp
sbb
xchg
jbe
addr16
xor
js
push
cmp
sbb
retf
dec
test
xlat
push
pop
pop
dec
mov
add
(bad)
stos
dec
mov
jbe
mov
xchg
xor
pop
in
icebp
std
js
add
stos
cmp
int3
inc
sbb
sti
jbe
sbb
mov
push
inc
sub
lock
gs
lds
int
mov
inc
mov
mov
in
retf
mov
hlt
mov
adc
jg
xchg
aad
cli
in
push
mov
inc
sub
lock
stos
mov
fs
(bad)
clc
xlat
fwait
mov
mov
(bad)
mov
(bad)
pop
jae
(bad)
das
push
mov
call
imul
mov
imul
loope
in
movs
add
repnz
jmp
daa
retf
and
xor
arpl
call
jg
pop
push
push
sahf
cmp
std
ins
xchg
mov
movs
jmp
inc
jmp
lods
add
js
outs
mov
inc
in
sbb
mov
fwait
sbb
(bad)
movs
jp
xor
jne
xchg
ret
cdq
out
shl
xchg
test
jle
test
mov
jnp
xor
mov
xor
mov
in
fldenv
adc
jmp
mov
gs
leave
iret
(bad)
in
cmp
adc
test
mov
xchg
fcom
hlt
xlat
shl
pmaddwd
xor
sub
loopne
mov
sbb
jmp
into
mov
mov
mov
xchg
dec
push
ret
jno
scas
icebp
add
jmp
scas
add
aaa
cmp
repz
jae
ss
adc
shl
dec
dec
mov
mov
lods
hlt
and
cmovo
hlt
sub
sbb
jle
pop
fstp
pop
(bad)
add
repnz
test
jle
cmp
addr16
outs
push
pusha
add
pop
mov
fs
cmc
mov
or
iret
jg
pop
shl
mov
xor
mov
jg
or
bound
mov
popf
scas
(bad)
cmp
leave
fwait
stos
scas
lods
test
mov
add
xor
popf
retf
xor
mov
jb
or
ja
inc
xchg
(bad)
pop
int3
fcmovne
(bad)
aad
pushf
repnz
cmp
aam
popa
jo
pushf
test
dec
loope
clc
pop
xlat
adc
or
cmp
and
jnp
sub
repnz
es
test
rcl
mov
scas
pop
sub
cs
data16
and
int
jbe
xor
xor
mov
xor
ins
imul
push
adc
out
sub
mov
arpl
fisubr
pop
add
(bad)
loope
(bad)
cld
retf
pop
test
jnp
loope
push
fimul
jbe
fs
sbb
nop
xchg
dec
loopne
sbb
imul
dec
scas
neg
push
dec
push
jg
es
mov
into
push
or
dec
aad
sbb
mov
cli
push
inc
js
stos
daa
shl
mov
dec
mov
bnd
sbb
sub
mov
je
mov
outs
rol
inc
mov
xor
jbe
add
ja
xor
stc
loopne
xor
mov
mov
or
sub
(bad)
out
jnp
pusha
cmp
jmp
pop
cdq
aam
stos
retf
xchg
sub
test
cmp
frstor
sub
push
(bad)
int3
dec
addr16
dec
arpl
or
das
nop
out
mov
xor
fwait
xchg
(bad)
jmp
fistp
pop
jmp
inc
xor
gs
adc
sub
retf
mov
neg
icebp
xchg
cmp
repz
lahf
iret
xchg
icebp
or
lds
out
les
add
sbb
(bad)
xor
arpl
push
push
fdiv
gs
xlat
cmps
push
bound
mov
in
retf
stc
sub
xor
fisttp
call
inc
xor
mov
stos
inc
mov
jge
out
xchg
retf
dec
or
or
sbb
cmc
xor
mov
dec
adc
popf
popf
sahf
fwait
jnp
push
xlat
mov
push
fild
mov
mov
jecxz
sar
mov
mov
retf
xchg
aas
cs
or
in
sbb
or
ds
push
and
mov
and
lods
xor
adc
aas
out
mov
sbb
mov
shl
jecxz
or
dec
fwait
and
movs
pop
test
xor
and
in
pushf
cld
loopne
or
xor
aad
pop
push
repnz
add
test
or
iret
imul
push
push
jne
inc
mov
ins
imul
stc
sbb
cs
test
jb
xor
inc
jbe
int3
jno
dec
pushf
sbb
icebp
xor
sub
fs
ins
and
femms
mov
jmp
lods
(bad)
ret
add
test
pusha
xchg
mov
loop
mov
cmp
call
push
repz
jae
das
fs
or
jne
outs
sbb
pop
aad
pushf
sti
mov
adc
fstp
push
jle
adc
push
imul
iret
in
xchg
mov
inc
movs
xchg
add
pop
movs
or
mov
xor
mov
mov
into
mov
or
es
jmp
push
mov
mov
and
cmp
jno
or
mov
repz
shl
add
repz
lea
repnz
push
repnz
sar
sbb
aad
adc
arpl
nop
fild
push
lock
cmc
adc
mov
lock
or
push
jns
repnz
push
or
jnp
aam
xor
in
xchg
adc
cdq
das
sbb
xor
cmp
ja
mov
not
and
aam
sar
or
aas
repnz
mov
push
mov
push
fdiv
ret
lods
ins
jge
cwde
push
push
cli
out
fwait
xor
idiv
sub
sahf
mov
xor
ret
call
mov
ss
das
mov
leave
stos
sbb
pop
sahf
sahf
std
sub
xchg
and
mov
xlat
in
jge
add
mov
ds
sbb
sbb
push
add
cmc
arpl
pop
nop
cmp
fstp
mov
clc
lods
test
push
in
sub
aaa
xchg
push
fidivr
cmp
mov
dec
pop
aad
outs
(bad)
pop
sahf
pop
pop
lds
dec
or
mul
inc
sub
dec
in
add
scas
push
xchg
add
mov
ins
ss
or
push
test
sbb
ins
arpl
or
cmp
push
jb
in
mov
fdiv
add
mov
push
cmp
(bad)
jmp
aas
dec
sbb
mov
or
stos
inc
inc
and
pop
mov
inc
inc
xchg
mov
movs
mov
lock
mov
lods
sbb
scas
push
push
pushf
xchg
ja
les
add
pop
out
js
outs
scas
shl
pusha
xchg
lock
or
std
inc
cli
cs
int3
xchg
xchg
imul
inc
xor
cmp
sbb
(bad)
fcom
sbb
int3
ja
pusha
pop
(bad)
gs
loop
movs
icebp
jns
movs
or
mov
in
or
and
imul
add
popf
loop
ins
xor
shl
xlat
in
imul
sub
outs
sub
addr16
lahf
ret
aas
xchg
xor
adc
sti
cdq
xor
sbb
imul
adc
mov
or
loop
scas
inc
sbb
sub
xchg
es
jle
sbb
mov
cmp
leave
ss
mov
push
cmp
inc
add
xor
xlat
mov
push
arpl
inc
dec
push
mov
jns
mov
cld
imul
(bad)
adc
and
cmp
je
or
call
xchg
outs
xchg
sbb
ror
xor
pushf
cli
and
fist
clc
adc
add
mov
ins
sub
test
add
add
push
push
jne
sub
aad
fwait
ret
enter
xchg
xor
fst
in
data16
xlat
cs
iret
out
ins
adc
sub
inc
cmps
xor
loope
push
inc
pushf
int
loopne
push
jbe
popf
lock
add
stos
mov
xor
sar
dec
and
push
fwait
out
fcomp
sub
inc
push
push
jle
xor
test
mov
loop
or
or
jg
mov
mov
dec
aad
ret
ss
ja
jnp
rol
pop
cmc
add
imul
dec
test
lea
fild
dec
in
icebp
pop
dec
mov
lds
fs
adc
push
xchg
cmp
in
push
lods
bound
leave
aad
in
pushf
fisub
add
mov
sub
push
mov
ja
movs
mov
pop
inc
clc
jmp
fsub
add
stc
rol
loopne
retf
inc
or
pushf
sub
sbb
mov
inc
push
xor
inc
mov
dec
mov
jg
pop
cwde
sti
std
into
or
mov
retf
cmps
stos
or
push
lods
sbb
and
mov
je
mov
lds
dec
sbb
sub
xchg
sbb
fidivr
adc
fs
inc
jo
div
shl
stc
(bad)
arpl
fcmovb
xchg
jb
shl
add
and
call
fst
enter
push
mov
xchg
push
repnz
cdq
inc
mov
mov
add
sub
pop
fist
fadd
inc
or
and
arpl
loope
sbb
pop
lea
popf
mov
mov
sub
mov
xchg
mov
and
lahf
push
mov
inc
fstp
jmp
jo
int
sub
xchg
lds
ror
pop
pop
aad
loop
cmps
sub
movs
out
jge
dec
xchg
xchg
jmp
mov
push
push
pop
xchg
lahf
mov
js
mov
jne
sub
arpl
cmps
pop
or
xchg
push
mov
mov
ret
push
push
aaa
push
jmp
xor
imul
ja
push
cmp
test
ss
push
mov
and
aam
ret
mov
outs
sub
ror
shl
mov
mov
jg
(bad)
hlt
mov
pop
in
fdiv
ret
loop
adc
(bad)
stos
jcxz
shr
jmp
rcr
mov
sbb
push
sbb
xor
je
jecxz
daa
lods
pop
(bad)
pop
xlat
dec
mov
mov
adc
mov
call
bnd
mov
mov
xor
and
mov
fidivr
pop
js
rcl
xchg
(bad)
clc
fcom
mov
mov
test
pop
or
lock
mov
push
ss
hlt
xor
jge
add
data16
pushf
mov
js
loop
mov
dec
xchg
fist
xor
mov
dec
scas
sbb
and
mov
les
jge
sahf
pop
shr
hlt
sahf
push
out
jae
sbb
cmp
mov
mov
enter
dec
call
arpl
ret
add
imul
inc
xchg
scas
jle
push
lahf
imul
inc
xor
add
cwde
int3
dec
inc
popf
jae
test
lds
and
xor
xor
rcr
or
push
imul
loope
xor
jp
js
mov
gs
xchg
shl
xor
and
cmp
retf
es
jae
out
loop
in
jp
pop
leave
in
cmp
aam
add
jno
aad
cdq
neg
out
sub
in
int3
bound
retf
shl
xor
add
xchg
cmp
ss
pop
dec
inc
dec
aaa
int3
jmp
inc
mov
out
sbb
std
leave
jae
jge
sub
cwde
jno
jg
xchg
retf
in
mov
ss
mov
pop
cmp
out
push
rol
lods
dec
cmp
retf
inc
std
sbb
sbb
mul
inc
mov
out
out
fimul
test
adc
inc
in
xor
jmp
std
inc
dec
xchg
cmp
sti
push
add
(bad)
push
xor
mov
enter
xchg
sub
xchg
mov
sar
cmp
int3
and
movs
jge
test
lahf
ds
pop
inc
outs
inc
add
je
pusha
and
dec
into
push
sbb
push
mov
or
imul
call
jp
scas
xlat
push
pop
sti
add
pop
pop
ds
es
js
or
mov
call
and
loop
xor
push
outs
dec
dec
mov
push
pushf
lea
xchg
jmp
test
cmp
add
adc
and
pop
(bad)
jmp
fwait
retf
xlat
ror
push
(bad)
pusha
push
shl
push
push
in
popa
cld
add
call
sub
dec
in
add
inc
sub
call
(bad)
cmp
xor
popf
mov
retf
fs
out
(bad)
xchg
retf
cmp
xor
and
pop
(bad)
and
cli
adc
arpl
and
or
add
mov
xor
fdiv
inc
or
pusha
nop
sbb
xor
adc
or
into
or
cs
in
sbb
add
div
add
pop
out
(bad)
sbb
cld
addr16
aad
dec
popf
ja
sar
push
mov
nop
test
stc
mov
fwait
(bad)
scas
lods
inc
mov
inc
loope
(bad)
lock
cmp
scas
push
cmps
fs
mov
lods
jmp
push
retf
sbb
fadd
jl
ja
xchg
scas
push
push
out
adc
movs
fs
cmp
addr16
sbb
call
out
paddusw
(bad)
(bad)
rcr
jno
je
loopne
cld
dec
and
imul
arpl
and
or
xor
out
(bad)
mul
adc
jne
cld
lods
repz
sub
push
xchg
out
in
cmp
js
aad
mov
sbb
sub
iret
cmc
into
mov
loopne
push
into
pop
fsub
add
cmp
sbb
arpl
rcl
add
bound
cmp
(bad)
cmp
mov
sbb
mov
cmps
mov
cmps
pushf
les
sbb
dec
pop
push
dec
popa
out
inc
push
mov
sbb
mov
jecxz
push
out
xchg
push
cdq
jo
jne
(bad)
in
das
cmp
mov
pop
inc
ficomp
jge
aam
sbb
mov
mov
mov
or
enter
mov
dec
cli
jge
jno
bound
mov
es
add
retf
movhps
inc
movs
jp
aam
aad
inc
and
mov
and
fcmovnu
sub
scas
add
(bad)
pop
inc
in
out
arpl
aas
mov
lea
inc
mov
sub
mov
cmp
jnp
xchg
adc
push
sahf
pusha
bound
xor
cmp
les
mov
pusha
cli
inc
mov
dec
test
mov
dec
xor
or
push
push
daa
ret
cmp
mov
sbb
and
scas
gs
mov
bound
add
jp
pop
leave
(bad)
jle
pop
or
cmp
xor
jl
ins
loopne
test
cmc
ins
sbb
push
retf
aaa
(bad)
shr
neg
fidivr
xor
pop
push
mov
jae
xor
sub
das
mov
fidivr
jne
xlat
push
ss
into
inc
jge
movs
pushf
movs
ds
dec
sbb
popa
adc
xor
inc
fidivr
mov
mov
loop
cmp
adc
(bad)
push
dec
inc
add
inc
outs
pushf
rol
out
mov
cmp
or
ret
jge
and
outs
push
jae
push
lds
dec
mov
dec
dec
cwde
rol
call
movs
test
push
xor
or
and
adc
add
xchg
cmp
cmc
mov
xor
sbb
sbb
add
dec
test
fs
jmp
hlt
ins
mov
leave
(bad)
scas
add
imul
es
lea
inc
sbb
in
movs
and
enter
fisub
dec
adc
sbb
fdivr
mov
cmp
cmp
addr16
and
repz
sub
sub
mov
and
call
mov
pop
push
push
jp
call
jp
fcom
xlat
mov
or
mov
popa
daa
cli
fcomp
cmp
adc
scas
mov
out
mov
adc
sbb
hlt
push
adc
ret
mov
and
xchg
mov
inc
hlt
iret
imul
mov
sub
or
clc
xchg
rcl
cmp
mov
inc
test
push
xor
ins
test
shr
cmc
div
not
or
push
loopne
loope
fdecstp
loop
ds
xchg
fisttp
mov
cmp
jne
fnstsw
xchg
and
mov
inc
call
sti
xor
ins
pop
jmp
test
mov
aam
(bad)
out
push
mov
bswap
jecxz
push
cmc
pop
xlat
cwde
cmc
mov
xchg
cmp
or
out
cmps
pop
out
fnstsw
xchg
pop
daa
(bad)
pop
rol
aad
pop
and
xor
loopne
xchg
shl
sti
push
mov
xchg
pop
mov
out
rcr
sti
nop
and
div
xor
cs
add
ja
sub
bnd
inc
push
cmp
mov
retf
jb
ror
dec
arpl
jne
sub
pop
mov
jl
dec
in
xor
js
adc
(bad)
cmc
cmp
test
or
jbe
xchg
ret
repz
xchg
into
mov
or
dec
gs
sub
or
mov
icebp
pop
dec
jmp
inc
movs
inc
xor
call
inc
add
outs
xchg
cmps
sub
sbb
sub
mov
out
cmp
mov
stos
cdq
jbe
push
in
pop
pop
test
jb
and
(bad)
out
bound
sbb
cmps
mov
(bad)
cs
gs
inc
jbe
stc
cmp
mov
xchg
jg
repnz
movs
jnp
adc
enter
and
dec
mov
xor
int3
fnstcw
jb
dec
adc
pop
xchg
movs
scas
sub
or
stos
clc
loopne
mov
xor
sbb
jmp
gs
and
add
pop
xor
pop
mov
mov
aas
inc
test
mov
bound
sub
and
(bad)
(bad)
jp
cwde
push
add
jl
cmc
push
add
push
mov
popa
jb
inc
nop
and
cmp
(bad)
cmp
jecxz
fild
push
pop
mov
pop
xor
xor
in
scas
xor
fild
inc
jp
sbb
inc
adc
mov
cmp
lahf
scas
jb
and
test
cli
lea
mov
or
lahf
xchg
adc
retf
mov
(bad)
jnp
loope
push
sbb
add
stos
clc
jecxz
dec
(bad)
ror
mov
sbb
or
jmp
daa
add
mov
int
sbb
fdivr
mov
retf
cmps
push
in
jo
xlat
or
sbb
mov
pop
lea
xchg
out
xchg
xchg
in
fidivr
sub
call
cdq
sbb
int3
in
out
test
cmp
cdq
call
(bad)
sti
mov
rol
fwait
stc
mul
xchg
bound
sub
add
ins
mov
pop
and
shl
gs
(bad)
mov
lock
cmps
retf
jno
js
xor
mov
outs
sbb
(bad)
ret
add
pushf
jns
(bad)
iret
add
retf
push
xchg
pop
push
dec
ror
pushf
lds
push
leave
cmp
ret
imul
sub
jb
pop
add
push
iret
inc
or
in
mov
ja
arpl
cmps
dec
mov
mov
fst
popa
shr
push
pop
faddp
aas
inc
aas
cdq
aaa
or
and
mov
pop
nop
push
fnstenv
inc
call
add
pop
shl
je
fwait
pop
sbb
and
xchg
(bad)
bound
add
cmp
(bad)
mov
rcl
popf
int3
shl
and
mov
cs
dec
arpl
rol
jl
inc
xchg
jl
leave
call
or
xor
(bad)
cmp
xchg
jge
retf
loope
enter
scas
out
dec
scas
(bad)
cmp
outs
repnz
int3
mov
shr
adc
stc
mov
loopne
es
sbb
pop
pop
retf
out
inc
retf
scas
pop
call
fisttp
adc
test
add
jns
push
xchg
fnstcw
adc
nop
enter
adc
xor
cwde
and
xchg
loopne
inc
push
mov
dec
xchg
dec
out
dec
mov
jns
(bad)
lods
mov
cmp
sbb
out
test
lock
or
lods
cmp
xor
cmovns
inc
and
mov
inc
pop
pop
push
sub
call
dec
dec
or
cmp
retf
and
jmp
leave
mov
xlat
xchg
test
in
push
rol
jae
sub
or
xchg
sub
rcl
mov
sar
enter
gs
sbb
pusha
or
je
mov
dec
inc
adc
mov
rep
ds
out
popa
mov
clc
cmc
mov
or
shr
mov
sbb
adc
(bad)
adc
xor
hlt
nop
data16
cmps
jg
sbb
or
cld
dec
mov
cdq
lods
je
ins
fisub
stc
cmp
jge
dec
ja
pop
(bad)
retf
mov
pop
dec
mov
pop
jmp
ja
xlat
out
ret
xchg
pop
dec
push
jmp
repnz
adc
jae
imul
cs
xor
ret
in
jbe
cs
icebp
jne
dec
test
pop
jne
sahf
sti
mov
xchg
ins
dec
xor
loopne
fld
xor
in
imul
div
fcomp
ror
and
add
call
pop
in
dec
popf
jnp
xchg
(bad)
cmp
icebp
cmps
jb
rol
out
(bad)
mov
dec
push
aam
in
sti
(bad)
mov
addr16
and
cmp
adc
femms
sub
adc
test
push
js
into
push
sub
mov
mov
cwde
out
ror
sub
fwait
add
jl
xchg
pop
push
or
popf
test
sbb
inc
jnp
cmc
clc
fs
sbb
das
out
pop
ffreep
imul
sar
test
xchg
fidiv
adc
lock
push
fstp
ins
ss
push
jl
push
nop
jo
mov
pushf
push
sbb
dec
mov
pop
mov
and
adc
hlt
rcr
xlat
or
sub
pop
or
push
or
ror
int
xchg
imul
jns
pushf
test
or
xor
mov
mov
movs
mov
addr16
sbb
in
repnz
jns
mov
js
mov
retf
jnp
fnstsw
popf
xchg
pop
or
lock
clc
mov
xor
test
sbb
jmp
ret
or
sbb
sbb
mov
fsubp
test
popf
popf
and
frstor
sbb
and
lds
scas
popf
inc
cmp
pusha
ret
push
push
not
das
ins
and
jp
add
sbb
sub
data16
jmp
sahf
rcr
cmps
fistp
mov
cmc
call
ins
inc
mov
test
inc
xor
sub
mov
and
or
mov
or
adc
test
jecxz
jo
pop
cwde
out
out
jae
push
shl
scas
fwait
xor
adc
adc
pop
add
(bad)
out
dec
ja
xchg
cli
or
push
dec
in
jmp
jmp
xor
pop
xchg
inc
adc
add
jg
fldenv
or
repz
aas
jmp
sub
adc
cdq
test
xchg
add
add
or
xchg
mov
int3
int3
xchg
jmp
xchg
out
inc
div
cmp
jl
(bad)
into
test
imul
pop
repnz
sub
in
fsub
jmp
ret
pop
adc
repz
xchg
cwde
inc
add
push
and
jmp
sub
stos
ss
test
aam
and
jnp
xchg
push
in
sbb
mov
mov
pop
adc
mov
adc
and
mov
jge
(bad)
(bad)
jmp
mov
xchg
iret
pop
scas
clc
int3
sub
in
add
in
push
mov
cmp
call
loop
dec
ins
fnstsw
jne
jne
xor
mov
push
outs
es
mov
and
dec
(bad)
dec
adc
or
xor
ja
sbb
dec
mov
icebp
es
push
repz
popa
add
mov
fdivr
aad
icebp
sbb
mul
push
int
mov
dec
dec
dec
mov
mov
push
cmps
neg
or
in
mov
cmc
and
pop
fld
mov
mov
and
mov
cmp
cmp
cs
retf
test
sub
fwait
loopne
sar
in
and
or
and
pusha
lock
xchg
xor
cdq
or
pop
xor
ss
pushf
repnz
xchg
clc
popf
jno
push
and
ret
jp
inc
inc
adc
push
sbb
inc
xchg
pop
xor
mov
xchg
push
imul
adc
xchg
cmps
add
xor
rcr
outs
jns
sbb
test
aas
nop
retf
les
jbe
mov
xchg
mov
sub
xchg
inc
ror
repnz
and
xchg
hlt
jge
xchg
xor
adc
mov
push
adc
mov
lahf
lea
gs
enter
sbb
sbb
pushf
inc
bound
mov
sbb
iret
mov
les
dec
dec
and
sbb
cli
sub
dec
data16
(bad)
pop
jb
add
enter
xchg
push
jg
pop
sbb
sub
aad
xchg
outs
scas
shl
loopne
mov
cmp
out
fisttp
mov
shl
xchg
inc
bswap
pop
scas
mov
xchg
xchg
jmp
add
call
xchg
mov
sub
ins
add
pop
movs
fiadd
ss
push
(bad)
mov
fdivp
shl
jg
stc
mov
push
cmp
and
(bad)
pusha
dec
xlat
adc
test
xor
or
mov
push
call
call
mov
cmp
ficom
xor
sahf
dec
pop
dec
mov
mov
pop
int3
outs
inc
retf
rcl
out
push
in
jmp
xchg
and
mov
xor
arpl
or
cmp
test
and
repnz
hlt
mov
pop
xchg
mov
push
add
mov
std
outs
shl
mov
or
gs
dec
mov
in
pop
(bad)
jp
xchg
xchg
fdiv
ret
lds
pop
mov
lea
cli
or
outs
jne
xor
mov
pushf
lea
repz
push
retf
sar
shl
cmc
movs
xor
(bad)
gs
fisttp
push
jo
add
add
inc
lock
mov
rcl
push
sbb
mov
test
lahf
jecxz
cld
add
jb
adc
mov
fcom
shr
fist
jle
hlt
mov
and
lock
icebp
mov
mov
iret
scas
cmp
pop
jbe
pop
pushf
pslld
cmp
mov
mov
call
cli
pushf
outs
test
add
dec
mov
dec
or
cdq
sbb
cmp
mov
(bad)
std
aam
sub
xchg
and
push
pop
push
outs
dec
lock
mov
mov
xor
scas
inc
nop
xchg
lods
repnz
repz
cwde
push
jge
retf
(bad)
out
pop
inc
lahf
mov
xchg
(bad)
sub
mov
xchg
sbb
mov
addr16
aam
out
add
or
sbb
pop
sbb
jne
int
nop
call
lock
test
dec
sbb
adc
les
jl
call
js
cmp
cmp
sbb
or
cmps
jb
xchg
aad
xchg
jbe
mov
cmc
test
lods
xchg
and
and
pop
xor
pop
adc
(bad)
in
or
pop
xchg
(bad)
pop
and
dec
shl
pushf
repz
int
cmp
adc
stc
pop
mov
mov
push
sub
loop
dec
lock
aad
out
gs
jmp
pop
pop
rcr
mov
dec
imul
or
pop
push
xlat
xchg
pushf
sbb
push
shr
add
in
leave
add
dec
inc
dec
fistp
add
and
mul
push
test
push
out
xor
cmp
nop
jnp
retf
cmp
sub
stos
inc
setns
mov
lahf
stc
add
sub
cdq
(bad)
sti
mov
xor
icebp
lock
repnz
jo
cmp
jne
rol
mov
je
aad
jle
call
adc
(bad)
je
push
xchg
and
pop
xor
popa
repnz
mov
add
adc
push
sub
ret
cmps
sbb
pop
inc
jle
sbb
mov
cld
mov
and
cmp
ffreep
push
pop
(bad)
ins
scas
inc
mov
mov
mov
into
mov
jnp
or
cli
xor
imul
and
aaa
push
add
paddd
mov
xchg
push
jno
ins
repnz
lds
sbb
sbb
(bad)
xor
pop
(bad)
outs
enter
mov
adc
dec
sub
mov
pop
mov
imul
add
jb
add
cdq
mov
loopne
sbb
call
arpl
inc
jnp
add
inc
xor
stos
ins
aaa
loopne
loop
data16
jp
xor
jns
dec
sbb
xor
fst
jmp
aam
dec
pop
lods
push
push
lock
pop
movs
ficom
scas
dec
mov
std
dec
xlat
das
call
inc
jmp
sub
pop
sub
fdiv
sbb
xor
(bad)
lods
mov
pop
sbb
int3
push
adc
dec
js
aad
dec
test
sbb
ret
push
adc
adc
cmp
loop
xlat
cmps
imul
sbb
test
call
sti
clc
add
pop
daa
inc
push
dec
ftst
int
jp
or
jle
adc
jge
cmp
mov
sbb
(bad)
xchg
or
(bad)
fs
inc
jbe
adc
lods
repz
not
jns
mov
jge
jg
jmp
jmp
leave
arpl
pop
pop
outs
arpl
iret
inc
mov
cmps
mov
retf
loop
xchg
mov
or
jae
aam
retf
pop
and
or
icebp
stos
xchg
inc
jmp
arpl
(bad)
mov
ficom
js
and
xor
dec
inc
aaa
outs
mov
in
sbb
jge
push
xor
loope
jecxz
and
std
loope
mov
mov
out
pop
pop
sub
out
aaa
in
pmaxsw
ret
enter
stos
sub
jmp
fild
or
pop
dec
sub
push
push
jo
sbb
clc
mov
(bad)
(bad)
pop
mov
jp
scas
inc
mov
mov
(bad)
and
push
fldenv
cli
sbb
movs
push
iret
dec
push
repnz
cmps
repz
sub
dec
pushf
outs
add
pop
aad
mov
repnz
and
adc
or
inc
rol
pusha
sub
stos
cmc
pop
or
ds
lods
xor
mov
jle
test
xchg
cwde
fbstp
test
fisttp
inc
xchg
outs
ret
add
dec
mov
xor
mov
push
push
int
pop
push
ror
push
dec
ret
icebp
pop
paddq
stos
inc
es
sub
dec
sahf
push
shl
mov
repz
inc
cmps
add
dec
jp
xchg
and
xor
mov
push
or
mov
dec
scas
in
jge
mov
int
test
in
push
mov
movs
ror
mov
push
mov
jmp
out
fnsave
adc
jg
(bad)
mov
pop
bound
inc
jp
icebp
mov
fdiv
dec
aas
adc
cld
jmp
test
xor
adc
inc
sub
not
pushf
dec
pusha
cwde
fmul
dec
push
neg
push
repnz
hlt
repnz
sbb
bnd
adc
sub
dec
pop
lods
pop
pusha
xor
sub
nop
push
arpl
push
scas
sbb
not
test
xchg
cmp
sti
jmp
xchg
push
test
ss
mov
clc
fld
or
out
lock
push
ret
je
jno
in
ret
test
retf
cmps
xchg
xchg
jmp
out
xchg
cdq
fadd
add
call
fisubr
sub
(bad)
fnstcw
loopne
addr16
out
fld
cmp
jae
retf
xor
lock
xchg
xor
jbe
daa
jecxz
mov
cmp
mov
xchg
or
jbe
or
or
xlat
repz
jmp
rcl
jo
dec
stos
xor
mov
ins
mov
pusha
xor
dec
retf
dec
(bad)
in
dec
fidivr
mov
jnp
xchg
push
jmp
je
dec
pushf
pop
and
inc
xor
add
add
pop
dec
repnz
cdq
mov
jg
add
ss
push
xor
aaa
mov
std
loopne
(bad)
sub
test
std
pop
js
xchg
push
stc
mov
mul
fiadd
mov
mov
js
adc
pushf
lock
or
xchg
push
jne
scas
jb
pop
pop
jae
push
add
adc
cdq
and
std
fist
test
cld
jle
add
fwait
mov
ss
sbb
aad
stos
lahf
ret
stc
sub
adc
dec
cmc
inc
imul
scas
xchg
and
pushf
adc
ds
fst
sar
inc
cmp
clc
or
pop
test
push
(bad)
sbb
in
cdq
hlt
ins
cmc
jge
mov
xor
sbb
je
loope
cmp
loopne
(bad)
adc
and
je
sahf
sbb
mov
mov
daa
movs
jp
and
jecxz
xor
outs
arpl
test
repnz
sub
mov
ins
adc
adc
mov
test
sahf
inc
dec
adc
adc
or
dec
(bad)
(bad)
ret
push
cwde
sub
mov
adc
(bad)
mov
mov
in
adc
iret
mov
dec
aam
mov
movs
fmul
ss
scas
jmp
arpl
inc
in
push
fwait
dec
lods
xchg
adc
jp
out
inc
repnz
icebp
adc
stos
sbb
inc
js
pop
mov
push
and
ins
jl
mov
mov
and
fs
repnz
enter
repnz
frstor
scas
ret
getsec
add
shl
mov
adc
into
pop
lea
shl
pop
arpl
mov
ins
adc
sti
out
in
cli
xlat
ret
adc
pop
aad
add
in
cli
fmul
les
out
in
inc
sub
lahf
mov
stos
xor
stos
adc
sbb
or
cmp
retf
mov
xor
fdivrp
add
inc
mov
sub
and
(bad)
mov
adc
fld
mov
in
cld
std
dec
jae
fs
scas
pop
dec
paddsb
and
rcr
in
in
adc
call
inc
outs
cmp
adc
sahf
rol
pop
retf
out
sbb
mov
fstp
jnp
jmp
or
sub
sbb
mov
pop
stos
(bad)
shl
dec
cmps
pop
and
sub
cmps
fwait
(bad)
popa
cwde
lock
mov
mov
lds
leave
inc
mov
push
adc
jmp
ins
sub
int
cld
xchg
test
dec
xor
mov
imul
cld
jl
jmp
fsubp
jp
popa
inc
sub
cmp
sbb
fstp
outs
mov
jmp
stc
mov
add
jno
rcl
mov
sahf
adc
js
mov
pop
cmp
gs
(bad)
fmul
loop
bound
aaa
out
dec
jno
mov
in
pusha
pop
mov
push
mov
jb
jne
clc
xchg
pop
xor
je
push
sub
and
sbb
mov
cmp
cmps
jne
pop
lods
inc
jp
fadd
test
xlat
and
mov
push
(bad)
int3
retf
mov
vmread
push
jmp
into
daa
sub
js
jge
lea
pop
xor
add
xchg
fist
sbb
or
cmc
jp
nop
call
mov
cmp
cwde
xor
(bad)
cmp
nop
ja
popa
iret
mov
sbb
int3
push
outs
loop
sub
inc
fist
jmp
xor
or
repz
adc
clc
jl
push
loop
jne
mov
jg
popf
and
pop
jp
je
ret
sub
ins
add
xchg
xchg
push
push
fcmovb
push
push
adc
cmp
mov
pusha
dec
loope
enter
lock
imul
sbb
sub
bound
aas
loopne
jno
loopne
imul
adc
push
sbb
sbb
dec
dec
loope
sbb
pop
push
aam
push
lock
mov
mov
sub
ror
fdiv
mov
fmul
cli
sahf
xchg
xor
sbb
pop
mov
clc
loopne
sar
ret
jle
cdq
enter
mov
jecxz
fwait
call
ror
out
or
in
aam
adc
xor
call
xchg
cwde
jle
ss
fmul
jbe
popf
mov
jmp
jg
loop
adc
push
cmp
xchg
push
add
mov
fdivrp
push
xchg
les
pop
add
in
and
retf
xchg
cmp
fs
push
fwait
jnp
adc
dec
jbe
icebp
cmp
lea
push
int
stos
pop
jbe
enter
adc
out
jge
jmp
hlt
cli
xchg
push
mov
jmp
sub
add
mov
xor
loop
das
pop
adc
inc
jmp
pop
out
or
fbstp
add
sbb
sar
pop
and
lds
lock
xchg
mov
js
test
pop
fst
scas
sbb
mov
add
bound
in
inc
fimul
js
mov
inc
js
mov
xor
clc
clc
push
ret
inc
xor
jno
add
mov
ja
add
mov
jl
add
or
inc
push
xchg
bound
pop
scas
sbb
jo
inc
daa
add
and
fdivr
call
mov
mov
imul
jb
cmp
je
(bad)
retf
xchg
mul
nop
jg
lahf
mov
xchg
in
adc
leave
cmp
jmp
clc
dec
add
jmp
aaa
add
fist
adc
mov
jae
xor
lods
sub
or
cmc
cmove
sbb
call
sbb
sti
dec
jo
addr16
(bad)
iret
lods
add
mov
in
or
adc
inc
cli
cmp
test
adc
rcr
xor
(bad)
jg
nop
mov
mov
xor
xchg
mov
pop
cmp
es
xor
add
mov
inc
jo
addr16
mov
in
(bad)
(bad)
ss
aas
stc
mov
jmp
jmp
push
popaw
iret
adc
sub
jbe
jl
imul
jmp
mov
dec
dec
cld
ss
shl
sbb
fidivr
mov
mov
es
adc
push
lahf
pop
xor
mul
je
lock
mov
int
dec
sbb
sub
ret
pop
and
xchg
dec
(bad)
js
pop
and
stos
add
inc
retf
mov
ror
aas
mov
push
loopne
(bad)
out
(bad)
dec
lods
dec
scas
ret
gs
je
xor
mov
xor
je
in
dec
and
icebp
add
xchg
pop
dec
test
or
dec
mov
xor
inc
test
push
scas
cmc
adc
iret
outs
mov
es
push
das
mov
jp
xor
dec
add
adc
mov
pop
adc
xlat
test
jne
inc
jb
test
sub
icebp
xor
add
add
repnz
fisttp
hlt
sub
pop
mov
aas
or
daa
and
jg
hlt
cwde
sbb
loop
xchg
lea
inc
jne
cmc
inc
lds
es
lods
xor
cmps
xor
mov
inc
cld
popf
push
popa
int3
mov
mov
les
faddp
ret
jmp
mov
pop
sbb
lock
sbb
outs
sti
das
retf
out
jnp
(bad)
push
push
jecxz
adc
test
mov
mov
xor
gs
pop
packsswb
sbb
fldz
mov
sub
movs
jnp
dec
arpl
stos
ret
cmp
repnz
jl
fdivp
(bad)
and
cmps
jnp
rcr
mov
jp
cdq
inc
pop
cmps
mov
shrd
sub
mov
retf
pushf
test
sar
jnp
std
inc
sub
mov
push
mov
sbb
aaa
bndldx
adc
mov
in
add
sahf
xchg
vpaddw
dec
add
sub
(bad)
clc
in
mov
in
add
add
retf
retf
stc
ds
(bad)
cmp
out
cmp
daa
jge
or
mov
pop
xchg
aad
xchg
mov
ror
xchg
pop
jb
mov
call
ss
fwait
fs
adc
pop
hlt
pop
sub
push
jnp
scas
sbb
fidivr
sahf
(bad)
data16
jno
retf
shr
mov
repz
xchg
test
sub
push
pop
pop
or
imul
imul
mov
shl
fisubr
inc
or
enter
ds
adc
jecxz
adc
and
repz
out
or
mov
inc
rcl
loope
cmp
fdivr
push
dec
pushf
stc
mov
and
call
jecxz
mul
ret
add
mov
xor
xchg
jnp
in
neg
inc
gs
and
jmp
shl
repz
xchg
je
jne
fmul
and
dec
in
cmps
mov
xor
aaa
jl
std
shr
xor
(bad)
ffreep
scas
ss
mov
mov
(bad)
cli
push
loope
xor
aam
lods
mov
push
outs
sti
sub
fild
and
push
fidiv
and
mov
repnz
gs
xchg
mov
bound
addr16
cld
jg
fwait
pop
pusha
(bad)
push
jmp
jmp
sub
pop
ins
or
shl
add
and
jmp
into
stos
out
clc
or
pop
lahf
xchg
xchg
pop
das
add
int
inc
pop
out
adc
add
aam
pop
fcom
outs
movs
push
mov
adc
dec
jp
in
aaa
sbb
ror
jmp
jge
push
ja
mov
jnp
sbb
loopne
imul
mov
repnz
stos
data16
cmc
cli
mov
fstp
lea
sbb
push
jbe
sbb
lods
pop
mov
cmp
push
push
jge
out
xor
xor
jg
cmps
enter
cmps
mov
add
call
sub
aas
fbstp
pop
push
or
popa
xchg
in
outs
pop
cmc
cs
push
pop
rcr
add
or
repnz
sahf
test
mov
fimul
call
imul
sub
or
in
outs
mov
inc
ret
mov
fild
or
jno
dec
sub
in
sahf
sbb
jecxz
(bad)
push
cmp
push
inc
in
or
mov
mov
cmps
and
cld
ja
xor
push
sbb
xchg
mov
js
clc
jae
and
nop
inc
and
cmp
push
into
add
cmps
mov
sbb
mov
test
adc
lods
pop
or
nop
add
pop
sub
mov
retf
out
out
repz
cdq
push
pop
xchg
add
push
mov
jns
aam
cmps
fld
lea
push
or
mov
mov
out
popf
cdq
retf
(bad)
mov
stc
popa
xor
mov
xor
(bad)
in
lea
mov
repnz
inc
stc
xchg
jmp
fwait
into
dec
add
mov
push
adc
sub
xor
sti
adc
jl
pop
neg
sub
dec
and
cli
inc
imul
push
xchg
push
fcomp
out
not
adc
test
push
pop
sbb
(bad)
fwait
and
test
into
out
test
sbb
inc
mov
or
repnz
stos
and
jle
lahf
xchg
xor
shl
iret
add
xchg
jae
iret
push
add
dec
loope
aad
in
sbb
adc
sub
inc
and
lahf
jp
shl
stos
std
cmp
imul
pop
leave
clc
mov
sbb
dec
cmp
inc
das
sub
aas
pop
mov
mov
adc
push
mul
mov
pop
push
or
aad
xchg
mov
mov
mov
(bad)
jg
add
fs
call
jo
cmp
inc
jmp
out
stos
hlt
loopne
mov
sub
dec
test
inc
mov
ret
sbb
or
fldcw
cld
and
ret
cwde
test
ss
div
je
lods
icebp
in
push
xor
lock
lock
ret
std
mov
xchg
rcl
and
xchg
jle
mov
xchg
mov
in
pop
push
push
mov
add
inc
xor
aaa
or
sub
int3
lahf
adc
push
stos
clc
dec
enter
mov
inc
mov
sar
mov
addr16
inc
sbb
jo
add
or
data16
xor
mov
add
loope
in
aaa
push
sbb
out
mov
xor
repz
imul
sbb
and
out
jecxz
in
cwde
pop
xlat
out
inc
inc
cs
rol
push
lock
adc
xchg
lea
leave
leave
xchg
push
movs
lods
scas
sub
hlt
add
retf
or
xlat
xlat
call
push
inc
and
es
sub
into
test
out
scas
sub
dec
cmp
push
sub
adc
fldcw
cmp
and
dec
rcl
dec
lock
call
nop
jno
sub
sbb
sub
add
pop
es
test
and
outs
repz
mov
inc
imul
cwde
cwde
jl
(bad)
movs
hlt
ret
fidivr
add
addr16
icebp
push
pushf
out
or
jae
fbstp
dec
es
push
dec
pop
mov
inc
loope
(bad)
mov
mov
(bad)
fcom
pop
mov
(bad)
or
cmp
mov
dec
lods
jne
loope
and
sub
pop
mov
ror
push
jge
mov
cmp
mov
jg
imul
cwde
pop
clc
dec
or
pop
cwde
rcr
mov
mov
jg
shl
mov
pop
jb
or
jp
push
je
(bad)
ffreep
lock
sbb
pushf
ins
call
or
and
push
inc
icebp
dec
int3
dec
in
mov
retf
enter
mov
xchg
fild
arpl
jle
stos
xchg
push
pop
pop
pop
jg
icebp
fsub
(bad)
pusha
aad
mov
inc
movs
mov
dec
push
adc
out
jecxz
ins
es
pop
int3
pushf
mov
in
jge
push
mov
mov
outs
mov
xchg
mov
pop
mov
aad
out
dec
dec
dec
lods
and
xor
pop
pop
add
xchg
pop
jns
test
pop
data16
sbb
ficomp
jp
in
das
test
xchg
mov
mov
xor
sbb
pushf
imul
ins
cs
pop
dec
pop
ror
mov
or
mov
mov
dec
retf
ins
ror
push
adc
jns
mov
sub
cmp
repnz
(bad)
cmp
jae
dec
add
jo
cmc
pop
(bad)
iret
sbb
mov
(bad)
pop
mov
dec
out
scas
xlat
out
std
mov
jns
outs
data16
repnz
aas
push
xchg
rol
or
push
and
mov
push
fnstcw
push
retf
xlat
int3
stc
enter
xchg
mov
mov
cmps
test
mov
lahf
loopne
js
lods
cmp
fadd
xor
dec
iret
and
add
mul
jns
shr
aad
jp
xor
pop
push
mov
mov
xchg
pushf
and
push
(bad)
mov
add
enter
icebp
in
ins
fiadd
or
repnz
sbb
lds
out
sub
jg
hlt
adc
aad
adc
jae
test
cmps
bnd
stos
in
dec
into
and
mov
les
aaa
loope
gs
arpl
jo
push
es
mov
outs
aam
sbb
and
js
fisub
shl
shl
xor
mov
sub
sub
add
scas
(bad)
jl
mov
in
loopne
jmp
cmp
retf
out
inc
cmp
hlt
jmp
xchg
mov
jmp
xor
sub
sar
or
push
mov
push
push
inc
or
mov
sbb
js
push
call
inc
dec
xor
mov
into
in
adc
pop
pop
iret
cmp
inc
cli
mov
mov
xor
mov
pop
sub
fdiv
pop
inc
xor
xchg
jle
clc
fs
sbb
loope
jnp
jge
or
shl
popa
shl
mov
xchg
aad
mov
cmps
scas
push
and
sbb
ja
icebp
aaa
push
xor
pop
cdq
and
mov
retf
mul
popa
inc
jp
sbb
add
jecxz
push
icebp
test
movs
dec
scas
jo
test
and
mov
or
dec
and
dec
in
and
call
dec
mov
sbb
xor
out
ins
dec
or
mov
test
dec
pushf
lods
sub
jp
jecxz
daa
xchg
jbe
add
call
push
aaa
jae
add
jno
frstor
stc
mov
mov
xchg
push
ffree
sub
fwait
add
dec
repz
push
mov
outs
mov
xchg
dec
sub
scas
sbb
into
lahf
ret
push
clc
ret
enter
popa
dec
xchg
inc
cli
out
sahf
jb
adc
mov
pop
gs
add
(bad)
ds
fild
mov
sahf
adc
jo
pop
ins
loop
jle
lods
ret
out
rcl
jge
pushf
sbb
lea
ss
js
mov
in
add
outs
xor
or
push
add
adc
jg
retf
push
sbb
aas
popa
int
pop
mov
mov
retf
retf
loope
stos
adc
jbe
leave
scas
jle
ror
fld
mov
sti
inc
in
dec
jge
and
outs
lds
repnz
mov
jp
push
bound
and
xchg
movs
or
int
mov
mov
iret
cmps
jl
xchg
push
call
pushaw
test
aam
popf
cmps
mov
popf
add
aad
cwde
and
ret
cmp
outs
push
push
add
ret
push
or
jb
ins
jecxz
ror
outs
div
test
dec
xor
test
enter
pop
dec
and
xlat
iret
popf
dec
dec
out
stos
push
mov
push
adc
cmps
lock
and
fcomip
fst
cmp
pop
(bad)
mov
add
(bad)
mov
jno
dec
rol
push
pop
mov
aam
scas
lods
icebp
and
sti
inc
aam
mov
test
sub
sub
or
sbb
or
sbb
xor
adc
mov
jnp
xchg
dec
ja
mov
int
jbe
xor
call
into
cs
cli
mov
inc
jg
fldenv
adc
push
and
or
(bad)
mov
loopne
fild
cmp
jbe
jecxz
rcr
add
push
popa
call
sub
pop
xor
sbb
jecxz
mov
enter
sbb
out
jl
aad
hlt
add
cmp
add
xor
inc
sub
adc
jo
in
xor
or
dec
loopne
jmp
xchg
xchg
mov
imul
out
dec
lods
mov
(bad)
pop
mov
inc
retf
ret
ror
add
and
dec
hlt
stc
rcl
icebp
add
pop
nop
ds
stc
add
(bad)
std
sti
icebp
sar
rol
sbb
ror
xchg
xchg
xchg
imul
mov
inc
jecxz
jge
(bad)
cmps
mov
xchg
popa
xor
cmc
fidivr
mov
arpl
in
ins
mov
pop
test
call
jl
lahf
and
fwait
idiv
(bad)
call
mov
hlt
push
lods
mov
lods
clc
and
mov
jecxz
push
in
mov
add
cmps
or
sbb
aaa
dec
sbb
mov
aad
jbe
jb
sub
repnz
stc
repnz
or
inc
add
mov
test
push
mov
cmc
adc
push
dec
adc
cmp
test
add
sbb
push
cmp
and
cmc
mov
jg
aas
ja
xor
out
jle
or
in
shr
jmp
xchg
shl
or
adc
fwait
sbb
and
iret
repz
sbb
arpl
inc
in
cld
dec
and
push
sbb
cmp
pop
aaa
pop
pusha
ins
push
and
push
cmps
imul
inc
lods
cwde
iret
mov
sbb
test
jp
ror
push
mul
mov
rcr
sub
mov
xchg
adc
das
movs
mov
sub
jge
idiv
cdq
or
xchg
ins
mov
add
xchg
jge
mov
out
ss
rcr
mov
shl
or
in
or
push
retf
cdq
dec
sub
add
push
lahf
movs
inc
pop
dec
mov
push
xor
mov
repz
ins
lock
js
xchg
and
(bad)
xlat
fdivr
jl
jo
add
cwde
cmovae
cs
ret
stc
test
jp
add
dec
sbb
xor
mov
ret
les
sub
jne
sub
push
push
xchg
and
pop
imul
call
rcl
pop
mov
xor
loope
out
aaa
sbb
cli
jp
jle
aaa
in
mov
aaa
xchg
in
inc
xchg
int3
dec
inc
inc
addr16
cmp
lock
std
mov
aam
test
xor
call
cs
add
cmps
pop
sbb
movs
out
popf
xor
add
mov
inc
in
pop
arpl
aas
jl
stc
loop
dec
mov
loopne
pop
jno
mov
adc
call
jmp
mov
pop
xor
out
xlat
int
pop
mov
int
mov
rcl
outs
lahf
sbb
adc
call
jne
fs
ja
cdq
mov
mov
pop
inc
stos
ins
or
adc
xchg
fbstp
int3
push
mov
lea
pop
pop
sub
adc
call
mov
shl
movs
push
loop
fiadd
pop
fs
and
les
mov
xor
mov
stc
dec
or
loope
shl
fs
test
pop
push
cs
mov
ds
imul
(bad)
jge
dec
xchg
and
xchg
iret
mov
fld
mov
aam
loope
ja
jmp
(bad)
mov
pop
add
movs
cs
jb
or
jge
es
mov
stc
push
or
push
fadd
iret
xor
dec
aas
mov
cmp
push
ins
push
dec
dec
ss
mov
dec
leave
sbb
pop
xchg
push
aam
jb
aaa
mov
ja
jmp
cmps
movs
cwde
xor
aaa
cwde
mov
popa
xchg
xor
or
add
lock
jo
popa
mov
push
inc
jb
mov
xlat
jbe
mov
into
sub
test
pop
dec
out
ss
ror
adc
adc
lds
cmps
shr
or
jge
shl
repnz
icebp
lock
and
test
movs
pop
test
out
mov
lods
or
mov
mov
xchg
jnp
dec
js
or
push
repz
push
add
test
and
mov
popf
sbb
test
(bad)
in
jmp
dec
mov
outs
adc
xchg
or
add
jae
pop
adc
movs
push
imul
aad
mov
adc
repz
scas
pand
pop
push
dec
mov
mov
shl
xchg
shl
and
cwde
add
push
jmp
clc
rol
pop
mov
inc
xchg
(bad)
cmc
inc
jne
adc
mov
js
pusha
rcr
pextrw
mov
mov
cmp
inc
sbb
dec
(bad)
out
push
pushf
arpl
popa
sbb
adc
or
dec
and
(bad)
xchg
stos
mov
rcr
into
add
addr16
and
mov
add
paddw
aam
int3
add
cmp
nop
out
iret
push
xor
(bad)
adc
inc
and
movs
rcl
clc
xor
nop
push
mov
shl
aad
mov
and
ins
mov
outs
iret
inc
xchg
stos
mov
rcr
movs
call
shl
xor
add
or
lahf
mov
ins
hlt
add
pop
jnp
pop
or
cmp
fist
mov
loopne
mov
mov
inc
lahf
lea
ins
sbb
jne
or
xor
sub
aas
dec
jle
cmp
movs
sub
in
push
ret
xor
jmp
xchg
js
xor
mov
fisubr
loop
sbb
mov
cli
in
(bad)
fimul
dec
push
sub
jp
iret
outs
jmp
jecxz
mov
mov
es
push
test
frstor
jmp
test
push
mov
mul
inc
gs
(bad)
mov
jg
add
ins
and
jns
retf
not
xor
daa
loope
inc
aam
enter
fdivr
add
sbb
sti
fs
arpl
jl
sbb
sar
pop
jl
lods
mov
fadd
aaa
inc
jb
or
ss
jnp
xor
adc
nop
xchg
cli
jmp
push
fnstcw
adc
mov
push
or
jno
rcl
mov
adc
je
push
inc
das
(bad)
fsub
push
push
adc
ss
nop
jmp
xchg
add
inc
test
dec
mov
push
ins
add
test
test
test
jnp
scas
es
mov
add
test
or
xchg
adc
mov
dec
ja
scas
ins
push
pop
add
retf
and
mov
addr16
dec
cmps
inc
sbb
arpl
add
sub
into
loope
bound
cmps
jo
pop
std
xchg
(bad)
ss
push
sti
mov
sub
loope
clc
mov
(bad)
cmp
outs
add
lods
fnsave
inc
mov
ret
jmp
and
pop
xchg
mov
jo
rcl
xchg
test
xor
call
sar
adc
inc
xchg
mov
dec
xchg
loope
dec
int
fdivr
mov
mov
xchg
sub
pushf
push
enter
push
(bad)
jp
cmp
jl
push
les
inc
fs
xchg
add
pop
and
mov
fimul
ret
jecxz
inc
adc
and
lds
jge
cmp
(bad)
(bad)
pop
cmp
push
mov
xor
and
fwait
sub
xor
(bad)
or
pop
loopne
daa
cli
stos
mov
pop
lahf
test
mov
scas
xchg
adc
add
std
push
dec
mov
jmp
xor
dec
push
(bad)
jmp
ret
jns
stc
fsubp
fcomp
mov
outs
nop
(bad)
pop
push
daa
jl
mov
xor
push
sbb
out
inc
mov
xor
jecxz
ins
xchg
lock
adc
jl
cs
fstp
ret
into
test
retf
test
enter
mov
retf
xchg
inc
ret
adc
cs
jns
dec
iret
push
inc
xlat
js
lock
dec
mov
add
jge
inc
inc
adc
fs
dec
test
and
rcr
sti
inc
cmc
mov
das
std
cmp
emms
push
js
jo
popw
(bad)
(bad)
retf
sub
push
sbb
pop
fcomp
out
outs
pop
pop
push
mov
pop
jle
dec
dec
pop
sub
popa
push
(bad)
fcos
mov
jge
fistp
or
mov
sub
movs
push
ret
sbb
dec
scas
scas
jp
mov
jne
and
jecxz
outs
mov
aad
or
addr16
jmp
cmps
cs
out
in
int
xchg
stc
inc
test
inc
ds
xlat
pop
push
inc
out
mov
inc
mov
jl
mov
pop
push
add
ja
lahf
sbb
repz
fmul
xchg
jo
gs
xchg
xchg
lods
outs
aam
xor
out
dec
pop
ds
maxps
(bad)
cld
push
cmp
mov
dec
push
in
lea
push
and
dec
retf
adc
in
bound
push
in
cmp
fisub
(bad)
loope
jle
popa
je
fcmovbe
stc
movs
sub
jl
les
jb
jo
sar
pop
(bad)
mov
enter
stos
shr
out
imul
dec
jecxz
add
cmp
jecxz
popa
ins
cmp
mov
add
xchg
xchg
add
out
adc
jnp
mov
minps
mov
xchg
xchg
mov
fadd
in
ins
dec
push
jns
push
out
inc
dec
inc
xor
dec
scas
fisub
pushw
nop
or
inc
dec
je
xchg
(bad)
push
xlat
div
pop
xchg
adc
inc
shl
dec
add
mov
pop
sub
cdq
in
mov
mov
fs
leave
gs
fwait
in
pushf
popa
and
cmc
xor
push
pop
push
retf
stc
cmp
sbb
jns
movs
add
and
mov
and
in
xchg
aaa
mov
pop
adc
inc
xor
or
dec
mov
outs
fadd
nop
xchg
movs
cmp
es
lods
sub
bound
sbb
or
sbb
mov
ficom
loopne
dec
aas
mov
(bad)
jecxz
jmp
(bad)
movups
lock
sub
aas
cld
stos
cld
pusha
pop
inc
lahf
push
inc
push
loopne
retf
add
lock
aam
and
mov
aaa
ja
shr
and
mov
dec
push
jmp
pusha
mov
shl
aas
lock
and
addr16
stos
fs
dec
rcl
mov
repnz
sub
add
fisttp
mov
int3
jb
int3
ror
imul
adc
popa
or
push
and
or
sub
pop
dec
pop
fdivr
mov
nop
dec
movs
neg
pop
jb
aad
dec
les
mov
lds
push
jmp
sar
jnp
inc
enter
mov
sub
clc
sbb
pop
mov
div
push
call
sbb
mov
or
enter
hlt
inc
fdiv
jbe
and
and
sub
mov
pop
aas
cmc
lock
mov
inc
sbb
sub
rcr
pop
or
pop
rcr
dec
movs
mov
or
jb
jle
out
jns
adc
sbb
push
or
and
outs
neg
mov
or
jp
pop
xchg
and
mov
fwait
lahf
mov
movs
push
lahf
dec
sbb
aam
pop
or
mov
xor
add
test
aad
fld
scas
add
cld
icebp
push
dec
add
sbb
xor
add
mov
cmc
retf
adc
ss
cmp
jns
dec
fs
add
adc
loope
call
fucomi
scas
fbstp
jns
xchg
pushf
jbe
cli
cmps
mov
jbe
fwait
push
xchg
jecxz
or
fstp
daa
aaa
cmp
ret
out
jnp
iret
popf
mov
das
adc
mov
dec
mov
mov
in
mov
mov
fiadd
fs
jp
dec
cs
and
xchg
ret
add
jp
push
fiadd
add
cmps
adc
ins
test
inc
aad
jmp
or
sti
sub
xchg
leave
out
adc
adc
fwait
bound
pavgw
in
pop
or
call
pop
or
xor
div
test
aad
or
dec
imul
imul
mov
jns
cmp
in
pop
shl
xor
sbb
push
fwait
pop
cmp
out
stc
(bad)
aas
nop
push
sar
fsub
cdq
sub
retf
(bad)
cld
retf
inc
rol
iret
std
loop
mov
(bad)
pop
enter
fmul
movs
jb
dec
addr16
ins
xchg
dec
or
jbe
fmul
loop
sbb
in
mov
ins
xchg
jp
sub
test
cmp
mul
pop
stos
pop
std
aas
add
xor
(bad)
sub
das
call
scas
cmp
loop
mov
jmp
pop
test
loopne
adc
xor
movs
xor
(bad)
mov
adc
mov
sub
or
and
dec
inc
sti
sub
mov
test
cwde
add
push
ret
movs
push
movs
call
sub
add
stc
iret
inc
push
out
xchg
lds
test
aas
jge
mov
jns
leave
and
mov
arpl
jl
add
sub
frstor
sub
mov
xchg
pop
ds
idiv
add
sub
scas
xchg
ins
enter
mov
bound
cmp
ror
or
cdq
repz
fmul
mov
sub
and
test
xchg
mov
popf
aam
push
leave
xlat
out
push
out
stos
repz
fsub
call
call
aad
into
fstp
push
lea
add
dec
ficom
ret
xlat
push
and
or
xchg
mov
inc
jo
pmaxsw
fstp
pop
rol
les
jo
fs
mov
pop
cs
add
dec
jno
arpl
imul
ins
and
or
imul
mov
mov
std
nop
call
push
aaa
popa
cmp
repz
cmp
ja
push
mov
push
test
out
adc
add
push
sub
lock
and
cmps
call
je
fs
retf
sbb
mov
nop
movs
mov
cdq
pop
add
cld
(bad)
jne
enter
stc
mov
leave
aas
outs
ret
jl
lahf
adc
dec
ss
aam
sbb
(bad)
pop
mov
push
shr
xlat
fcmovnb
stc
mov
add
test
retf
neg
sbb
imul
inc
clc
lds
sti
ja
mov
aaa
mov
inc
add
xlat
mov
dec
js
frstor
and
fucom
retf
add
test
push
push
jno
dec
and
nop
fldcw
xchg
inc
add
jo
sbb
push
jl
jmp
and
xor
in
or
cmps
or
mov
mov
and
(bad)
jle
pop
mov
out
ds
jp
test
test
cs
pop
sbb
or
jmp
outs
(bad)
fs
add
stos
leave
ss
pop
mov
jbe
data16
scas
ror
sahf
inc
mov
adc
out
(bad)
dec
dec
mov
aas
pushf
sahf
aad
inc
inc
inc
dec
cs
mov
nop
call
jmp
fisub
retf
fs
dec
dec
movs
shl
std
inc
movs
ja
or
in
mov
push
and
out
and
aad
mov
pop
mov
xor
add
das
and
js
dec
jecxz
shl
mov
lods
enter
(bad)
sub
(bad)
out
mov
push
mov
and
push
jmp
std
pop
dec
pop
(bad)
aas
stos
enter
jae
sub
mov
scas
fist
and
jl
push
mov
mov
push
xor
dec
jbe
mov
nop
adc
pmuludq
xor
add
or
in
out
jbe
sub
mov
hlt
mov
cwde
and
rcr
inc
inc
pop
jmp
inc
jge
(bad)
pushf
or
mov
and
xor
sbb
mov
fistp
scas
mov
enter
cwde
jns
(bad)
icebp
jne
pop
rol
and
in
jno
push
xor
push
inc
int
mov
fwait
or
add
(bad)
pop
jp
jns
mov
dec
imul
cmp
xor
mov
scas
or
mov
push
mov
fdivr
out
pop
fld
enter
pop
mov
add
(bad)
xor
call
iret
xchg
cmp
lock
repnz
dec
jno
pop
popf
push
mov
(bad)
repnz
pop
sub
ror
cmp
sub
(bad)
pushf
neg
add
outs
mov
(bad)
lahf
jne
jae
(bad)
adc
or
push
mov
dec
mov
pop
push
test
xor
pop
xchg
loope
test
sar
or
cdq
mov
pop
mov
je
jbe
pop
pop
jge
dec
movs
cmp
stos
fild
cmp
push
sub
mov
fdiv
int
rcr
inc
sbb
inc
repnz
shl
xor
mov
cmc
mov
fistp
out
push
pop
lahf
add
out
sti
lods
movs
cdq
call
gs
sbb
fistp
xor
cmp
xor
mov
pop
mov
sbb
int3
sub
call
test
jo
mov
aas
push
or
mov
or
dec
call
das
test
ins
add
(bad)
jle
jnp
add
cld
leave
dec
dec
or
ss
sbb
mov
dec
das
in
enter
test
or
shl
pop
xchg
sub
je
inc
inc
xchg
mov
adc
sahf
scas
out
or
test
xchg
lea
or
jg
gs
sub
cmp
addr16
cli
push
mov
pop
mov
imul
push
lea
push
ror
jecxz
mov
lock
xchg
pop
nop
cmp
jge
dec
int3
add
xchg
shr
mov
gs
inc
loop
mov
add
ror
fcomp
jmp
das
inc
movs
jae
mov
xchg
mov
stos
(bad)
rol
cld
ins
outs
test
ret
dec
fdiv
(bad)
mov
jmp
idiv
bound
hlt
dec
arpl
jp
(bad)
xlat
aaa
ja
jo
(bad)
repz
sahf
jecxz
(bad)
xchg
add
(bad)
xchg
pushf
mov
fmulp
xchg
test
bound
imul
(bad)
imul
(bad)
mov
inc
inc
lahf
cmc
lods
mov
dec
mov
fdivr
stc
dec
arpl
das
sub
mov
inc
push
aas
(bad)
(bad)
cmc
div
popa
mov
dec
push
push
or
jb
sbb
loop
pop
adc
mov
sbb
push
jmp
push
int3
pop
sub
add
test
ftst
pop
sar
test
test
dec
daa
mov
hlt
imul
and
es
(bad)
ret
jl
pop
bound
stos
lods
or
popf
std
cmp
push
mov
imul
jnp
adc
shl
out
fidivr
xor
add
xchg
mov
xchg
or
in
inc
inc
fcom
cmps
leave
(bad)
cli
rcl
aaa
xchg
sbb
cwde
xor
or
stos
push
mov
shr
imul
xchg
add
or
xchg
mov
pop
inc
clc
loope
cmp
cmp
(bad)
cld
pop
push
mov
mov
mov
sub
xchg
sbb
mov
lds
in
cwde
and
call
fcmovne
pop
or
push
adc
xor
stos
xchg
rcl
mov
loop
mov
and
push
mov
adc
stos
pop
sbb
jb
mov
(bad)
adc
cs
scas
push
pop
fcomp
hlt
test
jb
aad
arpl
ret
or
lea
xchg
das
adc
loop
fwait
xchg
out
push
lods
sbb
loopne
js
sbb
push
(bad)
inc
mov
adc
jp
mov
sbb
aad
dec
cwde
dec
rcl
cmp
mov
add
push
sbb
pop
or
jmp
fild
xchg
pop
cdq
inc
xor
push
sbb
adc
aaa
jl
mov
dec
daa
cmc
scas
stc
cmp
call
bound
pop
inc
je
outs
xchg
imul
fs
addr16
xchg
rcr
mov
in
inc
push
lds
inc
leave
int
cwde
lods
jb
inc
cs
stos
push
dec
jmp
sub
xor
cmp
sub
mov
cwde
imul
out
pop
popf
jmp
mov
mov
cmc
arpl
adc
(bad)
pop
jno
ror
xchg
cdq
mov
jno
lea
jbe
sar
ins
and
cmp
mov
dec
fldenv
into
and
hlt
add
xchg
sbb
scas
sar
(bad)
ror
jne
inc
xlat
sbb
jnp
mov
in
mov
in
dec
call
leave
or
mov
push
inc
or
test
push
jle
(bad)
cmova
dec
lds
mov
add
add
inc
push
repz
dec
test
(bad)
les
push
inc
js
dec
xor
push
fiadd
stos
mov
sub
xor
xchg
sub
fnstcw
jne
or
xchg
mov
adc
pop
in
aaa
cmc
cmp
std
cmp
or
ins
dec
je
xchg
push
stc
lock
cmp
or
aad
mov
sbb
sub
mov
mov
cmps
mov
jecxz
test
or
pushf
jae
shl
repnz
jb
xchg
push
adc
jno
leave
jbe
ret
arpl
jmp
retf
shl
mov
out
(bad)
mov
(bad)
fdivr
add
ss
add
push
jns
mov
test
aaa
mov
lock
in
add
not
rep
repz
jecxz
add
stc
adc
pop
pop
in
jecxz
retf
enter
mov
cmp
mov
and
pop
pop
push
xor
mov
sti
adc
nop
xchg
push
and
xor
fdiv
hlt
lods
mov
dec
pop
sbb
mov
mov
and
fs
arpl
stos
adc
mov
inc
or
jno
ins
push
mov
cmp
(bad)
add
dec
mov
pushf
and
mov
or
add
sub
shr
cmp
add
js
repz
lock
(bad)
fcmovne
(bad)
push
sub
inc
push
and
scas
and
popa
scas
mov
dec
out
push
cli
int
shl
mov
mov
jnp
inc
pop
jmp
cmp
in
pushaw
pop
xchg
movs
jae
hlt
dec
xlat
push
lods
push
test
mov
add
adc
inc
retf
mov
xor
inc
fsub
out
jns
int
sbb
adc
lock
mov
mov
cmps
inc
mov
clc
loop
ret
mov
jl
js
cmps
lods
cdq
push
xor
dec
jb
aaa
and
enter
outs
(bad)
out
adc
aaa
mov
push
mov
add
lock
in
lock
sub
adc
daa
lea
sub
mov
jecxz
inc
adc
pop
cmc
add
pop
lods
xor
pop
dec
push
or
loop
fwait
push
and
inc
stos
int
iret
ss
mov
or
push
inc
lds
inc
in
mov
add
scas
or
clc
dec
leave
ret
add
pop
out
adc
nop
ret
lds
fnstcw
leave
fstp
mov
fdiv
jno
adc
push
adc
dec
aaa
nop
loop
xor
cmp
mov
iret
aad
dec
jmp
cmp
cs
movs
sbb
jge
call
xchg
movs
jmp
jbe
xor
mov
daa
movs
repz
mov
(bad)
push
sub
jb
clc
jle
out
and
dec
xor
iret
add
jne
fist
addr16
and
sahf
sub
in
sub
add
retf
push
push
sub
pop
mov
fwait
cmp
ins
addr16
loope
sahf
sbb
loop
ins
shr
pop
jg
xchg
je
rcr
das
jbe
(bad)
aad
pop
sub
mov
data16
adc
ret
mov
mov
fild
xchg
mov
(bad)
hlt
sub
xchg
inc
and
aad
cmp
adc
fs
mov
(bad)
inc
daa
rcl
pop
test
dec
imul
fsub
retf
repnz
mov
dec
rol
or
gs
xor
out
fs
fimul
mov
jnp
add
mov
mov
or
xchg
mov
pop
shl
mov
inc
sub
and
sar
inc
cmovae
mov
ret
pop
retf
adc
(bad)
mov
aaa
inc
sub
ficomp
retf
daa
mov
imul
pop
mov
dec
push
cmp
sbb
dec
retf
into
pop
dec
into
mov
pop
inc
btc
mov
nop
xchg
sar
shr
pop
xchg
sbb
popa
shl
imul
adc
adc
xchg
sub
imul
mov
xor
push
add
push
mov
sub
cmps
popa
jecxz
outs
push
adc
mov
mov
xchg
mov
mov
jmp
arpl
in
fldcw
ret
jb
sub
mov
(bad)
pop
xchg
xchg
aad
xchg
loope
push
and
and
fld
xor
push
loope
dec
mov
push
pop
adc
ss
xor
cmp
cmc
sub
add
mov
or
mov
pop
xchg
xchg
fadd
push
loope
sahf
addr16
cmp
or
pop
jb
mov
or
cmc
mov
pop
sub
and
mov
mov
out
iret
movs
add
pop
cmc
int3
or
pop
mov
inc
ret
hlt
fs
stos
dec
je
mov
icebp
push
mov
jnp
xor
inc
dec
sub
add
mov
repnz
mov
add
aaa
xchg
mov
xchg
(bad)
xchg
add
ds
aam
das
lods
in
das
stos
int3
addr16
popf
call
fcmovu
test
and
in
or
inc
out
xchg
cld
inc
mov
out
addps
dec
cwde
retf
mov
retf
lahf
mov
lahf
jmp
mov
jae
lea
stos
inc
push
xor
cli
ds
fidiv
test
inc
sub
pop
and
shr
adc
xor
gs
pop
pop
jmp
and
(bad)
addr16
test
sub
pop
ds
in
hlt
cdq
scas
mov
es
and
push
dec
gs
pop
mov
scas
or
cmp
sbb
jb
pop
and
call
and
lahf
ins
cld
adc
cmp
inc
scas
xor
sub
loopne
xor
cmp
mov
loope
pop
sub
int
je
addr16
dec
xor
and
adc
fild
xchg
inc
mov
push
or
in
pop
inc
fs
jo
jno
dec
fisub
fdiv
sbb
pop
test
cli
mov
or
dec
adc
cmp
lahf
aaa
xchg
jmp
mov
inc
mov
and
mov
nop
cmps
out
inc
(bad)
adc
nop
stos
inc
cmp
hlt
sbb
or
pushf
in
jle
mov
es
es
mov
and
int
sub
mov
sub
xor
adc
je
cmp
push
iret
jb
mov
dec
adc
adc
leave
cmp
xor
adc
push
adc
sub
addr16
cli
fwait
mov
sub
pop
rcr
jle
xchg
hlt
les
xchg
inc
aad
cdq
xor
sbb
stc
cmp
rcl
jmp
add
pop
adc
adc
xor
sbb
pop
inc
sub
mov
xchg
mov
pushf
cli
add
std
inc
repnz
imul
xchg
test
(bad)
xor
mov
or
in
mov
cmps
dec
les
int3
imul
dec
cld
and
mov
enter
leave
mov
mov
mov
popf
and
mov
loopne
sti
sub
adc
scas
add
jno
int
mov
ss
pop
sub
lea
jo
js
and
popf
dec
mov
test
jo
out
mov
aam
xchg
inc
xor
mov
inc
sub
mov
inc
(bad)
out
mov
jl
leave
fnstsw
leave
pop
sar
jbe
jo
and
xchg
sbb
add
push
cli
push
lahf
adc
rcr
push
mov
movs
aaa
(bad)
(bad)
int
bound
(bad)
inc
outs
dec
(bad)
lock
mov
xlat
cld
add
sub
mov
(bad)
cli
test
cli
mov
mov
or
cs
nop
mov
jle
mov
jns
jns
lods
je
stc
jl
es
outs
fs
push
inc
mov
std
xor
mov
cdq
sbb
push
dec
sub
inc
xor
jg
pop
leave
inc
stos
imul
jmp
jge
icebp
loope
loopne
mov
movq
imul
ss
dec
les
xor
add
fadd
jo
push
mov
pusha
sub
js
and
leave
out
int
lock
mov
mov
sub
mov
dec
xor
fld
dec
dec
adc
adc
cmps
fisubr
out
jmp
mov
hlt
add
je
mov
push
fisttp
fucomi
fisub
add
hlt
sbb
jae
dec
lods
scas
and
or
inc
loope
pop
push
jns
and
push
push
cld
jbe
mov
(bad)
push
in
in
addr16
in
arpl
mov
aas
jmp
inc
fisub
hlt
ins
sti
in
shl
femms
push
ins
mov
dec
cmp
jl
inc
lods
jge
and
daa
lahf
aas
retf
in
int3
sbb
out
clc
add
std
movs
mov
jnp
sub
jns
add
jnp
xor
shl
dec
pop
pop
mov
push
mov
lods
jo
test
loop
or
jl
xor
jg
add
inc
out
or
push
bnd
cld
xor
or
cdq
xchg
add
mov
call
retf
out
ds
movs
lock
cmovno
pop
(bad)
in
bound
movs
into
pop
jmp
movs
xchg
stc
xor
pop
pop
mov
out
in
les
imul
(bad)
shl
repnz
adc
(bad)
fist
bound
xor
movs
mov
mov
jg
in
rcl
dec
call
and
or
inc
das
sub
inc
(bad)
hlt
jo
fucom
pop
pop
ret
mov
dec
cmp
push
xor
and
pop
xlat
xchg
(bad)
movs
sahf
sbb
cmp
addr16
sbb
fnstsw
shr
cwde
jns
lock
push
and
pop
loop
daa
popf
push
sub
pop
adc
mov
iret
adc
rcl
xchg
jge
or
jb
das
jmp
and
nop
into
add
test
lock
dec
adc
imul
inc
adc
dec
sub
enter
les
pop
jge
imul
pop
fstp
push
test
nop
out
sar
push
sbb
inc
lods
ret
ds
and
test
retf
add
retf
sbb
mov
cmp
shr
aaa
daa
inc
inc
aas
fdivr
fst
bndstx
mov
xlat
out
xchg
js
gs
sbb
adc
inc
push
inc
das
jmp
mov
push
das
adc
out
push
jbe
into
xchg
and
or
in
in
daa
mul
mov
test
scas
push
dec
addr16
das
int
and
push
add
pop
in
aam
add
cmovg
lea
and
and
outs
push
mov
or
cmp
add
adc
repnz
push
pop
in
test
sets
cmp
fsubr
sub
cdq
and
leave
push
add
and
je
pop
sti
push
sahf
sahf
cwde
mov
sbb
pop
and
xchg
push
ins
xchg
aas
adc
cmc
add
and
mov
push
loope
jae
jno
imul
jbe
(bad)
push
cwde
and
dec
sub
and
fld
jo
jl
mov
call
mov
ss
adc
push
fld
jbe
lods
clc
jle
mov
shl
das
imul
stos
push
push
fs
(bad)
or
or
adc
out
enter
mov
pop
je
jb
sbb
icebp
retf
cdq
cdq
or
sbb
sub
outs
dec
push
xor
jp
adc
vpmuludq
cwde
jne
shr
call
stos
jmp
cmc
jbe
ja
pop
dec
sbb
cwde
inc
inc
shr
iret
xchg
movs
test
das
mov
test
mov
add
xchg
jae
mov
shr
mov
add
shr
mov
nop
cmps
outs
inc
movs
loopne
leave
or
mov
xchg
popa
dec
lock
inc
fs
outs
jp
pop
xor
inc
sub
push
mov
mov
or
inc
jmp
shr
mov
sti
fild
movs
lock
cmp
mov
adc
sub
xchg
jge
add
(bad)
jns
dec
mov
mov
mov
mov
retf
cmp
sbb
nop
rol
aad
je
mov
cmp
sub
or
cmps
mul
fld
cmps
out
jecxz
imul
dec
popf
stos
mov
xchg
rcr
rep
xor
cmp
fldl2t
or
jp
pop
sub
lds
dec
daa
push
loopne
mov
in
add
je
inc
outs
inc
mov
pop
hlt
mov
fwait
push
xor
fld
int3
and
mov
(bad)
loop
jecxz
push
lock
push
rcr
pop
scas
cmps
ja
jl
retf
jmp
lock
int
add
pusha
add
sbb
call
pop
mov
(bad)
xchg
adc
dec
loope
aas
push
arpl
push
fisttp
push
mov
out
popa
pop
test
lds
and
push
pop
push
rcr
push
pop
xchg
std
mov
(bad)
gs
out
enter
movs
(bad)
enter
neg
ret
popa
(bad)
cld
sbb
add
cmp
stos
int3
pop
sti
xor
and
dec
inc
ins
push
cmp
sub
sar
int
sahf
push
daa
(bad)
scas
stos
push
adc
clc
dec
pop
inc
lock
push
shr
push
cmps
cmps
repz
mov
bound
push
inc
xchg
xlat
(bad)
sub
add
cmp
xchg
call
push
sbb
dec
xor
out
jl
bound
js
(bad)
and
es
je
hlt
loop
adc
mov
xor
pop
cmps
inc
pop
xor
mov
(bad)
fidiv
sar
inc
sahf
push
out
movs
xchg
gs
out
mov
inc
(bad)
hlt
jp
dec
lea
push
fldenv
pop
jl
fild
mov
add
jl
pop
repnz
push
(bad)
outs
mov
dec
xor
in
inc
fiadd
push
popf
lock
stc
add
(bad)
mov
ficomp
or
popa
pop
add
adc
xor
pusha
out
ss
push
stos
es
mov
mov
mov
sti
dec
ds
adc
in
jg
push
aad
mov
mov
addr16
(bad)
push
xor
fwait
clc
jbe
inc
mov
ja
dec
xchg
in
movs
(bad)
pop
cdq
iret
(bad)
push
idiv
pop
jne
or
test
mov
xchg
cld
push
addr16
retf
in
(bad)
outs
sbb
dec
mov
imul
aam
(bad)
jmp
call
xchg
and
out
push
add
push
mov
jecxz
add
js
mov
ret
add
push
xchg
ret
lds
sbb
daa
aas
lds
jbe
push
mov
lahf
test
stos
push
push
cmps
jmp
mov
adc
dec
ret
add
scas
push
cli
inc
out
rol
mov
mov
fdivr
sbb
pop
es
sub
sbb
add
pop
nop
(bad)
jl
add
mov
rol
inc
jo
in
add
(bad)
mov
xor
out
outs
xchg
mov
popa
pop
(bad)
stc
push
movs
pop
inc
stos
ins
adc
and
push
pop
jno
jnp
xchg
fsub
mov
pop
jecxz
std
test
enter
outs
cmp
and
(bad)
repnz
js
jbe
add
call
push
sub
mov
mov
cld
jmp
lock
leave
ins
xchg
in
dec
jbe
mov
test
pop
dec
and
std
xor
xchg
xor
stos
add
cld
pusha
daa
add
daa
sub
call
add
int3
outs
sahf
ficom
jo
js
xchg
mov
sbb
mov
cli
sahf
popa
in
aam
pop
cmp
or
push
data16
out
push
pop
fwait
mov
cmp
enter
mov
and
cmp
sbb
xor
pop
mov
pop
cmp
jnp
or
mov
push
ror
or
fcomp
in
fisttp
sbb
or
cs
inc
push
jg
aas
jmp
imul
push
sub
icebp
sub
jl
out
add
sti
dec
out
mov
(bad)
dec
xchg
inc
mov
sub
leave
pop
xor
enter
outs
fs
mov
mov
sbb
aad
inc
out
mov
jbe
fstp
stos
into
enter
pusha
push
and
and
movs
test
lahf
jmp
clc
and
adc
push
jns
loop
bound
xor
int
mov
xor
sbb
fadd
sbb
nop
adc
jecxz
daa
pop
inc
std
jae
jmp
ins
mov
push
and
les
sub
je
dec
movs
jno
add
cs
cmp
and
jnp
fadd
push
xor
mov
xchg
jmp
sub
dec
call
sbb
outs
ins
add
mov
adc
mov
mov
cmp
mov
ins
dec
sub
jb
xchg
cmc
outs
ds
iret
jl
add
mov
push
pusha
push
stos
jmp
xchg
loop
mov
pop
icebp
daa
daa
iret
not
fild
ins
test
mov
jecxz
pop
push
scas
push
and
pop
mov
jb
shl
call
test
xchg
push
xchg
adc
mov
inc
mov
fwait
jp
inc
and
imul
jns
push
gs
xor
jmp
mov
or
sbb
in
cmp
pop
push
jne
aas
cdq
and
jbe
lahf
call
(bad)
mov
(bad)
cmp
out
aam
xchg
xchg
ins
xchg
stos
sub
cmp
xchg
(bad)
rcr
mov
test
(bad)
in
fwait
int3
retf
iret
fiadd
shl
jp
mov
les
iret
in
sub
adc
bound
add
inc
push
add
pop
push
xchg
fist
xor
push
addr16
xchg
cdq
mov
mov
pop
dec
jl
iret
ret
jnp
sar
aam
aad
cmp
out
lods
outs
push
or
fwait
outs
dec
stc
pop
lock
sbb
cli
js
pop
push
add
add
out
mov
in
and
cwde
and
push
pop
cld
xchg
out
(bad)
fisubr
push
cli
xchg
out
leave
out
cmps
pop
mov
arpl
lahf
inc
jnp
hlt
stc
(bad)
repz
jl
fldcw
pop
stos
mov
jmp
stc
push
lahf
jnp
(bad)
push
push
push
push
xor
or
pop
je
psrlq
shr
push
cmps
ret
mov
aaa
iret
push
pop
mov
loope
pushf
cmps
mov
jle
sub
xor
sbb
mov
lock
mov
jne
or
cli
out
and
jno
repnz
repz
dec
sti
enter
dec
mov
fs
or
dec
adc
(bad)
xchg
mov
arpl
xor
dec
pop
mov
rol
and
std
push
adc
sbb
sub
je
add
jns
jnp
ds
cmp
fadd
mov
jnp
popf
jne
xchg
push
shr
std
fs
mov
(bad)
je
loop
mov
(bad)
fwait
mov
sbb
(bad)
enter
loop
sub
mov
hlt
out
lds
scas
aad
ret
mov
ss
xchg
xor
shl
mov
movs
adc
scas
enter
loop
psubd
jns
aam
xchg
lock
(bad)
data16
and
rcr
in
movs
ds
sti
mov
jno
add
jle
dec
sub
xor
(bad)
arpl
sub
add
add
inc
mov
mov
jne
out
bound
or
inc
mov
(bad)
pushf
mov
xor
jmp
jo
push
daa
rol
jmp
and
push
and
cld
pop
retf
cmp
test
cli
imul
aaa
fisttp
ret
fnstcw
or
test
jb
xchg
mov
stos
mov
fimul
and
mov
nop
gs
inc
ficom
sub
add
add
push
xchg
push
sbb
popf
lds
push
push
jne
loop
mov
sbb
jo
jge
xlat
inc
in
icebp
adc
test
and
(bad)
dec
sbb
mov
sahf
loop
mov
fdiv
std
or
xchg
lds
and
mov
jg
das
sbb
div
jno
mov
sbb
xor
cdq
jo
test
rcl
call
cmp
inc
aam
mov
cs
test
push
lods
dec
(bad)
int3
push
push
lahf
mov
adc
mov
hlt
in
inc
inc
pop
push
inc
adc
xchg
mov
mov
ror
xor
stos
xchg
push
test
je
popf
cmp
rcr
push
out
ss
lds
mov
bound
xor
cdq
gs
jo
xor
ins
dec
mov
jmp
lock
xchg
or
cmp
icebp
jmp
enter
jmp
es
jne
xor
adc
push
jmp
aad
push
(bad)
aam
mov
test
cli
lock
adc
jo
push
shr
cmps
imul
cs
cmps
je
mov
and
(bad)
sub
fs
add
fs
in
(bad)
cmc
loopne
push
jae
mov
jnp
enter
sar
push
inc
jne
scas
nop
arpl
dec
iret
sub
and
sub
aad
lea
adc
push
inc
adc
outs
lods
adc
push
push
std
xor
pop
pop
xor
lahf
lods
addr16
popa
std
xchg
(bad)
jecxz
jl
cmp
cmp
dec
hlt
inc
mov
dec
mov
mov
cmc
rcl
mul
pusha
mov
ror
push
fs
test
xlat
mov
hlt
sub
adc
fadd
pusha
cmps
dec
mov
fst
add
xor
dec
add
and
pop
(bad)
leave
dec
inc
jb
cmp
cmc
inc
inc
pop
lock
pop
icebp
sahf
(bad)
cmps
es
dec
int
out
pop
xchg
daa
or
dec
in
dec
mov
sahf
pop
lds
cmps
xchg
xchg
scas
cmp
mov
push
imul
push
add
jo
neg
add
xchg
jno
and
adc
out
push
dec
jbe
aad
loopne
add
stos
lock
sbb
adc
pop
mov
popa
push
movs
ret
push
into
inc
and
push
pop
mov
lods
sbb
stc
or
(bad)
fistp
xchg
mov
(bad)
sahf
mov
mov
mov
aas
cmp
sbb
cmp
int3
xor
mov
mov
loopne
pop
inc
sbb
mov
nop
pop
in
fidiv
lea
ins
inc
sar
movs
retf
out
es
lahf
fs
int
or
add
(bad)
mov
das
jecxz
popa
pusha
cs
test
icebp
mov
lods
lock
stc
inc
mov
jge
stos
call
pushf
mov
dec
jmp
fadd
push
cmp
push
in
push
pop
int
out
or
sub
pop
xchg
inc
inc
jle
fld
pop
into
pop
lahf
push
mov
dec
jge
sub
jns
in
ficom
ss
dec
repz
adc
cmp
xchg
lea
mov
jnp
jns
gs
loop
in
xchg
cmp
stos
and
mov
and
xchg
mov
(bad)
cmp
aad
or
idiv
loop
sub
jo
addr16
(bad)
pop
and
add
retf
mov
mov
jg
sbb
ret
ds
in
jmp
loop
cmc
inc
sbb
fidivr
sbb
add
add
mov
mov
test
inc
or
mov
cmp
hlt
imul
ds
mov
mov
clc
(bad)
in
pop
sub
or
ret
dec
idiv
jmp
loopne
(bad)
or
pop
cld
pushf
mov
sbb
scas
cmp
(bad)
punpckhwd
pop
stc
retf
mov
xor
call
adc
stos
push
jne
les
cmps
sub
repz
mov
cmovle
fbstp
(bad)
call
ror
pushf
push
out
sub
jecxz
inc
pop
out
ror
adc
aam
mov
lock
ins
pop
loopne
out
in
jo
aad
adc
adc
jp
push
adc
mov
mov
or
pop
retf
push
retf
pop
and
inc
out
call
push
add
xchg
(bad)
retf
mov
clc
jno
adc
cmps
cmp
mov
shl
and
and
mov
arpl
jns
inc
hlt
push
inc
sbb
pop
inc
pop
sbb
dec
xchg
mov
call
movs
mov
ss
add
ror
mov
ficom
push
push
jg
imul
pop
jns
(bad)
inc
inc
mov
mov
mov
dec
push
sub
ins
or
out
movs
mov
mov
popa
mov
out
gs
pusha
mov
lahf
test
ins
mov
push
sub
jmp
jmp
daa
aad
xchg
ret
pop
sti
inc
adc
pop
pop
test
mov
jno
push
adc
sub
cwde
cli
fucomp
loopne
lahf
in
push
xchg
or
dec
xchg
push
out
xor
nop
xchg
sar
dec
inc
xor
sub
push
mov
mov
ins
mov
mov
fdivr
stos
addr16
xchg
sbb
aam
or
jge
mov
aam
jbe
jecxz
dec
mov
sbb
int
cmp
xchg
out
dec
shl
(bad)
hlt
mov
sub
mov
fistp
bound
mov
es
pop
pushf
js
ins
sub
ret
aas
mov
inc
mov
mov
cmp
add
test
cmp
mov
(bad)
cwde
pop
mov
pop
xor
mov
stos
lods
movs
or
cdq
jo
loopne
push
nop
nop
in
mov
and
(bad)
cmp
loop
sub
pushf
jns
cmp
and
xchg
pop
in
and
mov
adc
pop
jl
test
add
sbb
jmp
sbb
ins
jge
mov
push
aad
(bad)
fisub
jecxz
jmp
fbld
in
pop
repnz
mov
xor
adc
jo
jmp
cmp
cmp
rcr
stos
mov
sbb
dec
lea
fistp
push
cmp
add
jb
cmp
stc
adc
sub
lods
jo
push
sbb
call
mov
leave
pop
es
jecxz
inc
int
sub
gs
cdq
(bad)
in
and
js
adc
xchg
dec
scas
int
sti
lods
push
cld
or
xor
mov
outs
xor
jo
mov
arpl
inc
jmp
pop
or
add
add
cs
cmp
dec
pop
daa
jle
rcl
mov
loop
sbb
or
dec
pusha
call
jle
jp
sbb
mov
sbb
or
mov
jmp
sub
xor
loopne
ficom
push
aam
cli
xor
cmps
rcl
and
std
and
add
jge
loope
popa
das
dec
loop
pop
dec
sbb
sbb
sti
jmp
in
sbb
les
xchg
mov
dec
pop
xor
arpl
cs
or
jne
daa
aas
in
push
or
or
sub
outs
adc
xchg
arpl
lea
pop
push
cmp
ficomp
xchg
jbe
ret
rol
cwde
fadd
sub
ret
add
xchg
mov
mov
push
cmp
imul
sub
icebp
into
or
int3
xor
inc
mov
mov
mov
fs
jnp
inc
aas
(bad)
and
(bad)
and
ret
test
push
sub
mov
xor
ret
gs
out
jmp
mov
js
or
push
not
out
hlt
xor
jne
xchg
xchg
add
repnz
mov
pop
or
cdq
cmps
xchg
jnp
mov
inc
out
xchg
sub
gs
xor
jmp
rcr
rol
movs
pop
das
mov
inc
movs
xor
jb
fisttp
mov
dec
and
sbb
cmp
push
fdiv
jmp
scas
mov
cli
adc
cdq
inc
sub
mov
retf
adc
retf
sbb
xor
mov
fmul
movs
dec
arpl
xor
and
or
data16
sub
adc
sub
dec
outs
lds
xlat
push
icebp
lods
inc
out
shr
cwde
dec
sub
in
jle
push
fwait
out
les
dec
ret
jg
add
ror
xor
fmul
nop
pop
and
loopne
dec
mov
stc
addr16
and
mov
cwde
mov
dec
fadd
sub
xor
pop
push
jnp
pop
(bad)
aaa
cdq
or
xchg
ds
push
nop
call
cmp
or
repz
stos
fstp
mov
mov
mov
sub
cmp
das
inc
data16
pop
fld
lods
add
cmp
(bad)
shl
not
and
out
int
shr
add
bound
scas
ret
mov
ret
sub
enter
(bad)
sub
mov
mov
sbb
pop
mov
inc
dec
mov
mov
cmp
not
fs
bound
pop
ja
pop
xchg
mov
nop
mov
jmp
fmul
ins
cmp
cmp
and
shr
push
jmp
loopne
jp
(bad)
aas
jns
in
jmp
push
(bad)
xor
shl
or
jg
add
ins
data16
sahf
imul
(bad)
pop
test
std
loopne
add
adc
mov
xor
lahf
xor
and
mov
fldcw
mov
xor
mov
and
or
mov
cs
mov
inc
jnp
sub
jle
jmp
ret
adc
and
and
in
fiadd
jle
xor
(bad)
push
cwde
cwde
into
ins
cmp
add
or
and
icebp
sbb
adc
iret
mov
ficomp
daa
addr16
or
lahf
icebp
mov
popa
test
inc
les
in
std
xchg
loope
leave
aas
mov
or
stc
pushf
stos
inc
jl
mov
ss
fst
mov
outs
lock
das
cmp
ss
and
movs
(bad)
sti
movs
inc
jae
loope
mov
push
iret
or
cli
dec
xchg
push
in
cdq
adc
repnz
sahf
inc
or
sub
mov
push
push
sahf
and
push
or
in
cli
and
push
add
and
jo
mov
sub
int3
call
mov
xor
leave
adc
jns
cmps
imul
mov
jmp
cmp
xor
sbb
in
movs
inc
cmp
aam
out
scas
add
pop
xchg
jo
add
fld
mov
dec
adc
pop
mov
mov
mov
mov
jp
ffreep
dec
out
cs
gs
jb
jg
ret
test
mov
jne
ja
in
or
add
jns
jae
lods
int
sub
in
test
fiadd
jne
loopne
or
cs
inc
xor
mov
in
inc
mov
jecxz
mov
dec
xor
mov
sub
xor
rcl
push
add
pop
jp
(bad)
cmps
cmps
imul
js
push
xor
in
cmps
push
aam
ds
hlt
mov
loop
sub
mov
fidivr
(bad)
mov
sbb
xor
add
ds
push
jmp
sar
pop
sub
shl
xchg
inc
pop
xchg
dec
jmp
(bad)
clc
pushf
inc
pop
clc
stc
push
inc
ret
push
inc
(bad)
fldcw
pop
sti
inc
jp
jmp
mov
cmp
daa
inc
mov
inc
movs
aad
mov
sbb
nop
aas
popf
sub
aas
cld
add
xor
lods
popa
mov
clc
idiv
add
cs
bound
mov
lods
in
inc
div
dec
cmps
ds
outs
sbb
push
icebp
and
mov
inc
and
ds
fadd
out
mov
pop
xor
sub
scas
push
and
xor
cmp
jb
mov
adc
xor
dec
mov
test
xor
jp
js
int
psrlw
mov
and
jbe
pusha
mov
sub
std
in
pop
xor
add
pop
xor
dec
sar
cmp
frstor
or
pusha
adc
sub
and
dec
jge
mov
jg
jge
or
aas
xchg
fwait
inc
jecxz
loopne
mov
adc
inc
mov
mov
add
fsub
adc
in
sbb
(bad)
(bad)
dec
shl
and
(bad)
call
inc
or
inc
cs
(bad)
mov
cmc
adc
mov
push
mov
pop
cmps
ret
push
lock
mov
dec
push
pop
push
add
mov
loope
repz
cli
fadd
outs
retf
icebp
jg
dec
(bad)
cmc
mov
mov
fsubp
jg
inc
push
xchg
sbb
cwde
xchg
jnp
in
add
and
push
fcmovnu
xchg
jl
mov
cmp
dec
scas
fbld
push
div
test
not
(bad)
and
jno
int
xor
dec
sbb
test
or
je
pop
loop
xor
test
jnp
int3
or
push
lods
jb
sub
mov
sub
push
add
movs
mov
test
retf
mov
mov
xor
retf
outs
das
sbb
and
add
and
lods
rcr
sub
jmp
push
fnstsw
and
and
fdivr
jbe
call
gs
pop
jb
pop
jmp
pop
stc
pop
sbb
sub
mov
repz
setae
xchg
mov
aad
mov
pushf
add
push
dec
push
call
fwait
xchg
gs
xchg
test
pushf
dec
or
mov
repnz
cmp
sub
out
pop
adc
jns
mov
mov
and
stc
cs
push
std
sahf
retf
xlat
add
(bad)
loop
lods
stos
outs
mov
out
fmul
cdq
inc
push
nop
jbe
out
fsubr
adc
cmc
cmp
sub
sub
iret
out
push
nop
jmp
mov
gs
mov
jbe
loop
or
xchg
push
mov
mov
outs
sbb
mov
aaa
or
jg
push
adc
retf
mov
push
xchg
movs
adc
adc
inc
(bad)
or
and
je
out
(bad)
mov
sub
jmp
into
sub
adc
loop
mov
repnz
lahf
sub
sbb
sbb
call
pop
daa
repnz
ins
cmp
clc
pop
fdiv
hlt
push
sti
jns
inc
cmps
mov
out
xchg
push
inc
jo
sbb
js
mov
imul
xchg
cmp
retf
repz
jmp
add
mov
js
push
xchg
jmp
cli
or
adc
mov
loop
pop
cmp
mov
cmps
sub
mov
jbe
pop
(bad)
sub
push
mov
add
xor
and
dec
cmp
xor
and
mov
mov
cli
(bad)
mov
test
in
and
and
adc
cmc
cld
inc
mov
sti
fcmovu
(bad)
jmp
and
xor
daa
scas
sub
or
push
outs
mov
ins
in
ja
sub
dec
sti
test
shl
xor
sub
rcl
leave
(bad)
sbb
mov
test
jmp
xor
sbb
and
cli
retf
xchg
push
daa
or
push
jb
sbb
cld
adc
scas
int3
aaa
ffreep
add
dec
xor
sub
dec
add
xor
mov
and
and
sbb
and
pop
inc
div
mov
aaa
lock
leave
cmp
in
mov
jmp
js
xchg
mov
in
pop
int
inc
adc
stos
stos
fwait
adc
adc
push
jns
dec
retf
dec
fs
cmp
pop
rcl
stc
call
and
or
fwait
adc
in
mov
mov
fwait
add
in
push
cmp
mov
icebp
push
loope
and
cmp
xchg
pop
mov
fwait
repz
fsin
(bad)
cs
or
cmp
or
sub
sti
xchg
push
fcom
adc
pop
push
cdq
dec
movs
js
push
ror
pop
lahf
push
xlat
out
in
mov
fsubr
cmp
and
dec
mov
jo
dec
rcr
ror
mov
and
adc
add
pop
lahf
or
enter
(bad)
xchg
sub
addr16
add
jecxz
fldcw
rcr
pop
in
push
cld
adc
mov
mov
cmp
mov
fcmovnu
jmp
imul
xchg
daa
or
inc
test
call
test
dec
rcl
adc
fcomp
mov
push
add
add
dec
xchg
cdq
jle
mov
pop
ret
adc
pop
xchg
out
cs
xchg
or
mov
push
jne
dec
cmps
test
sbb
and
ror
fwait
mov
(bad)
(bad)
sub
lahf
retf
cwde
loope
add
and
xchg
mov
jge
pop
call
mov
xor
imul
les
lds
sub
jmp
fwait
int3
xchg
cld
sub
sub
sub
dec
repz
lock
mov
cmp
push
js
sbb
sbb
xchg
dec
fsub
je
push
and
lods
dec
pop
dec
xor
mov
unpckhps
push
cmp
mov
aas
xchg
pop
fs
ror
lods
pop
push
jecxz
inc
in
pop
jmp
jle
jmp
xchg
cwde
shl
pop
push
lock
xor
and
xlat
fld
push
jbe
leave
in
fwait
mov
in
out
jb
xchg
inc
lock
or
call
push
xchg
(bad)
cld
loop
imul
cmp
movs
add
test
and
adc
cmp
and
cli
pop
mov
jmp
imul
ret
cs
clc
add
cmp
(bad)
loope
ins
scas
or
je
mov
in
sahf
lea
push
pop
stc
dec
xchg
and
push
into
pop
out
and
stos
in
or
cmps
mov
pop
cli
mov
ret
lods
adc
movs
pop
lods
jmp
mov
sub
cwde
cdq
push
rcl
ror
inc
fisub
add
mov
push
rol
mov
sbb
push
xlat
into
lahf
out
loopne
(bad)
cli
icebp
cmp
cmp
movs
repz
std
push
retf
in
rcl
data16
scas
iret
cmp
mov
jp
lea
sub
add
out
xchg
or
sbb
ins
push
test
ja
in
retf
lock
adc
in
retf
jns
jmp
movs
dec
int3
in
shl
and
ins
aas
cmp
inc
jmp
sbb
inc
mov
adc
hlt
push
sbb
int
lods
out
cld
(bad)
dec
mov
jl
test
mov
lds
xor
push
stos
jae
dec
mov
arpl
jae
xchg
dec
lea
aad
mov
lds
push
leave
aaa
mov
mov
push
mov
and
test
push
test
mov
pop
dec
xchg
and
cdq
jle
pusha
pop
inc
leave
fcom
wrmsr
jmp
push
push
and
sbb
fsubr
ret
mov
cwde
gs
scas
bound
mov
mov
and
xchg
imul
jecxz
or
lea
dec
nop
or
push
clc
sti
xchg
push
cs
pop
xchg
lods
jmp
xchg
mov
adc
and
out
push
mov
into
js
mov
cwde
xchg
stos
movs
enter
aaa
xchg
xchg
cld
dec
jnp
add
into
adc
dec
repnz
inc
push
xchg
inc
push
or
push
dec
leave
jo
adc
xor
(bad)
iret
xchg
ja
dec
jecxz
mov
clc
out
ins
cmc
dec
test
inc
add
xchg
mov
mov
cmc
xor
sbb
add
mov
dec
dec
cmp
adc
and
jmp
imul
inc
mov
adc
aaa
and
adc
jp
xor
bndldx
dec
inc
push
sub
pop
pop
push
xchg
ins
sbb
adc
(bad)
jbe
pop
imul
add
scas
hlt
sub
jl
shl
out
mov
sbb
loopne
shl
add
cs
cmp
out
sbb
rcr
movs
xchg
repz
cdq
jb
popa
enter
mov
mov
xchg
jnp
xor
aam
add
sub
sub
adc
push
fisub
push
and
xchg
and
pop
xor
clc
dec
mov
sbb
push
pop
or
push
adc
daa
push
adc
cmp
mov
xor
int
or
in
jecxz
sbb
pop
loopne
movs
daa
mul
dec
fnstsw
and
jbe
into
cmp
mov
add
bound
jg
int
pop
pop
popf
xchg
iret
bound
pop
mov
cmp
shl
outs
in
sub
jp
aam
sub
loope
or
jecxz
xor
je
jg
out
sub
mov
sbb
leave
sub
xchg
push
or
stos
aas
in
dec
nop
mov
hlt
mov
pop
sub
lahf
fimul
mov
jb
mov
jns
gs
jae
(bad)
je
sbb
push
inc
fstp
hlt
cmps
dec
lea
adc
xchg
mov
mov
xchg
dec
cwde
xlat
fild
int
sub
xor
push
xor
sub
pop
and
dec
int3
ret
sbb
in
and
cmp
or
ss
inc
fld1
hlt
mov
jg
jmp
mov
push
std
inc
stc
dec
pop
int3
fistp
loopne
mov
mov
mov
xor
inc
dec
push
stc
push
pop
push
fbld
xchg
xor
and
pop
dec
mov
and
push
mov
cmp
push
(bad)
iret
fisub
std
int
(bad)
std
and
pushf
stos
outs
out
pop
lods
popf
movs
sub
sbb
clc
in
(bad)
jg
cmps
fld
shr
xor
inc
sub
(bad)
retf
and
call
cmp
shr
mov
add
gs
pop
lahf
xchg
sub
out
loop
sbb
jae
mov
retf
repz
repz
repnz
enter
(bad)
stos
(bad)
mov
sahf
loopne
xchg
xor
test
test
jg
sbb
lds
xor
sub
int
scas
(bad)
lods
ss
push
jg
cmp
mov
adc
push
dec
nop
ja
sbb
les
xor
out
lea
xchg
mov
sub
imul
enter
mov
ja
movs
scas
mov
dec
test
sar
pop
and
mov
xor
push
cmp
sbb
into
or
cld
or
dec
inc
in
popf
ret
sti
fsub
mov
movs
xor
xor
les
sbb
cmp
cmp
loopne
add
jno
xor
cs
arpl
mov
or
rol
sbb
fldcw
dec
xchg
xor
inc
sbb
mov
push
push
add
dec
(bad)
xor
sbb
(bad)
cmp
jmp
into
push
sub
add
dec
push
mov
outs
cmc
ret
pop
mov
inc
jo
pop
lock
ins
jp
cmp
rol
pop
js
xchg
xor
xor
out
jbe
imul
mov
cdq
and
icebp
xor
pop
stc
pop
ret
xor
ins
aas
hlt
mov
mov
jns
dec
in
scas
jo
shl
and
add
int
inc
dec
adc
dec
cmp
imul
arpl
call
mov
add
cdq
mov
retf
sub
adc
data16
jg
mov
and
test
popf
in
push
fcom
xchg
adc
in
ret
add
inc
cwde
push
movs
push
dec
xchg
and
mov
stos
cli
cli
adc
mov
je
inc
stos
add
rcl
in
inc
rol
push
xlat
xchg
shr
popf
and
push
dec
rcl
mov
clc
fidiv
sbb
cmp
fnstcw
enter
(bad)
xchg
(bad)
out
repnz
mov
repz
mov
(bad)
(bad)
xor
inc
mov
xor
cmp
jmp
mov
sbb
mov
ja
ret
inc
adc
outs
xchg
imul
or
pop
jbe
ins
xor
daa
test
sbb
sbb
dec
not
popf
mov
addr16
nop
lahf
imul
dec
pushf
fbstp
mov
movs
lods
push
sbb
not
sar
out
push
sbb
ins
popf
pop
cmps
pop
shufps
and
mov
sub
adc
mov
adc
mov
test
cmp
mov
add
pop
inc
cmp
repz
cmp
outs
push
popa
cwde
aaa
sub
xor
inc
cmp
ss
(bad)
inc
iret
out
mov
jl
imul
daa
push
enter
xor
adc
xchg
add
jge
push
cs
or
int
add
mov
(bad)
and
idiv
gs
xlat
and
cli
mov
ret
cli
inc
pushf
fld
ficom
dec
scas
repnz
dec
jp
je
pop
mov
and
cmp
cld
loopne
or
xchg
xlat
sub
mov
mov
rcl
jle
imul
and
sub
mov
(bad)
xor
cli
imul
mov
sbb
sbb
ins
inc
push
xchg
(bad)
mov
sar
outs
mov
sbb
jge
sbb
pop
in
mov
outs
xor
imul
in
idiv
xor
push
or
pop
jecxz
xchg
dec
mov
adc
mov
cmp
jns
sub
mov
dec
dec
dec
fidiv
inc
xor
adc
in
cld
and
push
mov
int
push
fstp
cld
pop
imul
inc
mov
ror
sbb
xchg
xchg
xlat
pop
mov
arpl
mov
stos
jecxz
push
int3
js
xchg
inc
mov
js
add
push
mov
pop
jmp
inc
xchg
lock
mov
push
in
mov
add
repz
ficomp
je
mov
sub
dec
int3
shl
call
out
sar
mov
cmp
sbb
aas
(bad)
xchg
ja
mov
jno
push
cmps
cmc
lods
xor
xor
and
clc
leave
popf
jb
rcr
int3
sbb
retf
pop
fild
inc
and
dec
mov
or
(bad)
movs
ins
add
mov
xor
ror
ficomp
ja
and
push
add
dec
or
jo
frstor
jp
pop
arpl
addr16
loope
ret
sub
sahf
pop
rcr
cmp
dec
mov
jne
sbb
and
fstp
mov
rol
(bad)
das
(bad)
mov
hlt
fcmovb
aam
scas
adc
(bad)
aam
inc
retf
mov
aad
sar
or
pusha
jnp
fist
mov
push
sbb
inc
movs
leave
loopne
(bad)
xchg
bound
dec
jbe
sbb
ins
shr
inc
shr
mov
or
fcmove
(bad)
xchg
mov
sub
(bad)
jecxz
cmp
adc
into
adc
inc
pop
cld
cdq
loop
cmp
jnp
cmp
jno
outs
mov
mov
popa
xchg
repz
cmp
xor
push
in
les
mov
scas
outs
cld
pop
or
outs
adc
dec
add
shl
dec
imul
mov
add
adc
mov
and
mul
mov
(bad)
push
push
movs
pusha
cmp
and
add
dec
(bad)
mov
cmc
stos
pusha
add
shr
cmp
and
push
cmp
nop
popa
popa
cmps
mov
lods
xor
gs
mov
(bad)
cwde
inc
mov
push
into
push
ins
push
test
mov
(bad)
cmp
fsub
inc
imul
test
cmc
sti
popf
add
sbb
cdq
cli
dec
les
jp
in
jmp
ins
lds
shr
(bad)
mov
push
xor
out
lahf
sbb
popa
daa
push
xor
push
rcr
jmp
movs
cwde
div
fstp
fwait
sub
jmp
je
and
push
and
sbb
dec
pusha
push
lds
out
enter
adc
xchg
repz
pop
iret
mov
cmp
push
push
lea
fidivr
cmp
mov
pop
mov
sbb
mov
mov
clc
hlt
mov
or
test
dec
add
cld
fsubr
mov
out
sub
addr16
adc
imul
stos
outs
bound
and
mov
daa
inc
sbb
shl
mov
(bad)
mov
in
mov
ja
add
dec
sub
cmp
in
jbe
adc
jecxz
adc
cmc
scas
xor
inc
sub
out
mov
sbb
and
push
(bad)
lods
mov
xchg
mov
(bad)
jg
push
and
or
ret
mov
mov
int3
rcl
add
iret
ret
push
rcr
inc
popf
jne
ins
jns
sub
mov
leave
in
les
test
lock
clc
mov
sbb
or
call
sbb
mov
pusha
and
stc
repz
clc
leave
mov
call
jmp
lods
shl
fild
mov
in
das
repnz
or
inc
adc
cli
aas
stc
mov
out
sbb
sbb
lahf
jo
sar
cmp
adc
les
pop
mov
addr16
push
rol
dec
ins
retf
dec
jae
fcmove
les
inc
fadd
mov
mov
shr
mov
les
or
and
mov
retf
push
jb
cmp
cmc
fsub
adc
mov
or
test
mov
mov
fnop
cmp
out
jmp
imul
cmc
or
sbb
mov
and
stos
fwait
inc
mov
pop
pop
cld
pop
int3
and
fld
or
pop
xchg
enter
js
dec
loopne
ins
movs
das
sub
xchg
add
call
mov
les
in
pop
retf
retf
mov
pushf
mov
jecxz
das
sub
pop
mov
pop
xchg
fbstp
lock
(bad)
imul
int
fcmovnbe
push
xchg
and
fwait
sbb
lea
xor
cli
sbb
sti
adc
fild
or
jne
sti
mov
es
jmp
dec
lea
adc
push
std
xor
and
scas
std
lock
mov
sub
jne
cmp
(bad)
push
popf
in
div
jecxz
sub
shr
adc
and
(bad)
popf
jecxz
cmc
sbb
cmp
jns
xchg
mov
jno
bound
scas
mov
xor
cli
jae
popf
cmp
sub
imul
inc
jns
mov
mov
ror
xlat
cmp
xchg
sub
outs
cmp
enter
push
hlt
out
or
push
sub
push
cdq
xor
jbe
cmp
loop
jnp
lock
call
mov
fstp
stos
inc
push
inc
dec
mov
mov
fs
into
adc
push
xor
xor
retf
ins
adc
(bad)
mov
jge
(bad)
lahf
in
mov
mov
ror
fsubr
mov
int3
lods
and
add
add
xor
pop
in
pop
inc
or
nop
ret
sub
sbb
sub
sbb
out
xchg
arpl
stc
inc
sbb
es
in
les
test
push
mov
lea
jno
cwde
std
push
scas
dec
pop
out
cmp
dec
jg
enter
adc
mov
xor
xor
cmp
arpl
imul
aad
jns
cmps
dec
or
and
sub
mov
ins
xchg
fld
and
xor
shl
xchg
inc
je
jns
sbb
ins
mov
ret
xor
movs
xor
outs
xor
mov
jecxz
or
iret
test
xor
jecxz
jne
clc
sbb
aad
inc
push
loope
jb
adc
sub
outs
out
cmp
xchg
inc
xor
xor
adc
jns
dec
(bad)
cmps
js
lock
lods
mov
push
mov
xor
xor
dec
sub
xor
and
stc
pop
adc
int
mov
or
ds
jo
or
nop
jno
fwait
jge
mov
cmp
cmps
or
in
repz
and
jmp
and
call
adc
rcl
call
cmp
adc
popf
cmp
inc
imul
in
lahf
dec
(bad)
ror
in
xlat
cli
sub
jns
nop
call
mov
mov
outs
mov
es
stos
mov
lahf
sub
mov
push
cmps
dec
sti
cli
xchg
loope
lds
imul
stos
pop
jns
adc
fdiv
sub
(bad)
scas
sub
mov
cmps
mov
test
cmps
xchg
fwait
adc
push
jbe
push
js
retf
lods
cmps
jmp
out
dec
ins
jo
inc
rol
es
xor
adc
aas
mov
test
arpl
add
inc
or
int3
pop
push
jp
cmp
adc
clc
(bad)
rcr
jne
cmp
sub
push
loopne
inc
ins
jae
stc
rol
in
stos
inc
je
xchg
mov
(bad)
pop
push
fdivr
sub
and
adc
(bad)
aad
lock
inc
and
sti
xchg
add
jns
loope
mov
clc
aas
jecxz
(bad)
aad
not
sbb
aaa
call
out
into
fcmovne
xchg
out
xor
mov
sbb
pop
mov
add
or
cld
pop
adc
push
pushf
pop
or
push
pop
fcomp
mov
sbb
xor
call
pop
js
xchg
addr16
sbb
in
jecxz
mov
dec
push
call
xchg
out
mov
sub
mov
push
mov
inc
add
xor
loope
cmp
aaa
cli
fs
mov
imul
jo
sti
push
mov
jbe
aad
popa
push
sbb
jmp
test
push
pop
popf
xchg
std
dec
pop
jle
push
scas
ins
leave
sbb
mov
hlt
bnd
jns
mov
sub
imul
mov
fcomp
xchg
cs
(bad)
jns
fldcw
jo
test
cmp
jge
xchg
scas
ja
(bad)
call
xchg
fwait
ds
in
mov
add
(bad)
xchg
aas
call
mov
stc
push
mov
loopne
mov
adc
push
iret
call
int3
rol
sbb
push
mov
sub
push
dec
daa
neg
pop
pop
test
add
or
(bad)
xor
push
inc
add
inc
or
mov
sub
ins
shl
addr16
add
(bad)
lock
pop
cmp
loop
stc
xlat
push
fnstenv
push
xor
repz
scas
adc
and
adc
mov
cmp
mov
std
les
xor
data16
push
jb
lds
cmp
fcmovnu
jb
(bad)
dec
and
xchg
jmp
jns
dec
inc
mov
push
pushf
call
and
inc
js
loope
out
aad
ds
xor
adc
dec
movs
cmp
(bad)
pop
mov
adc
xor
ret
sub
movs
jo
cmp
int3
arpl
inc
xor
cmp
inc
jo
stos
test
push
push
push
shr
sub
jg
arpl
add
mov
mov
(bad)
dec
fsub
in
jp
test
xor
call
jl
jbe
sbb
popa
or
or
and
nop
add
mov
and
pusha
pop
(bad)
repz
(bad)
cmps
retf
jnp
mov
arpl
xchg
pop
jbe
hlt
pop
(bad)
in
lahf
jo
add
(bad)
jb
jmp
fs
and
mov
and
ss
cmp
sub
inc
push
scas
fild
jae
inc
(bad)
push
sti
es
adc
in
push
adc
daa
cdq
scas
out
pop
mov
pop
shl
xchg
adc
loopne
pushf
cmp
cmp
pop
inc
sbb
dec
retf
sub
sub
ret
pop
scas
leave
aaa
adc
fsub
xor
call
xor
pop
sti
adc
stc
jbe
int
je
(bad)
mov
out
les
lods
sbb
mov
and
push
(bad)
mov
arpl
loopne
repnz
(bad)
fldpi
imul
fstp
push
inc
jge
jns
xchg
fs
ret
adc
pop
jle
scas
xor
mov
adc
ins
sti
rcr
cmp
add
mov
xchg
retf
fwait
adc
jle
jns
sti
out
daa
push
sub
test
sbb
data16
pop
in
push
dec
mov
std
cli
mov
dec
lds
sub
lods
adc
adc
mov
in
cli
add
lods
push
add
inc
call
pushf
adc
push
xchg
call
and
dec
ja
mov
mov
call
stos
mov
push
enter
xor
inc
jnp
scas
loopne
adc
ins
mov
cmp
rcl
ja
outs
ret
xor
rcl
jecxz
cmps
retf
dec
mov
lods
add
pop
mov
xchg
jns
repz
mov
popf
test
clc
je
mov
cmp
fs
retf
pop
add
mov
ficomp
jge
mov
push
mov
jbe
shl
cmps
ret
mov
adc
push
add
cdq
and
fist
pop
xlat
aad
mov
loop
sbb
pop
add
ror
out
into
out
jl
int3
sahf
xor
xchg
mov
push
mov
or
xchg
pop
or
add
fcomp
stc
fimul
sub
sub
fimul
retf
loopne
push
ror
xchg
inc
out
cmp
sti
dec
jns
sub
hlt
add
dec
push
imul
in
and
adc
pop
lods
int
mov
int3
mov
(bad)
pop
add
sub
dec
sbb
(bad)
mov
jae
jp
pop
jmp
es
movs
out
or
iret
gs
aas
adc
add
mov
arpl
aas
bound
xchg
jne
mov
and
imul
mov
xchg
retf
mov
or
push
push
cmc
movs
push
fsubr
xchg
ret
sbb
data16
mov
js
in
adc
push
mov
cs
rcr
mov
adc
xchg
shl
rcl
jl
and
inc
clc
(bad)
mov
in
jnp
xchg
push
popa
outs
shr
cmp
lods
lods
mov
(bad)
idiv
(bad)
pop
mov
retf
lahf
scas
sbb
stos
xchg
sbb
mov
xor
pop
mov
and
cli
(bad)
stc
aaa
mov
and
imul
pop
shl
ret
xor
data16
std
fnstsw
out
adc
in
add
pop
cmp
push
sbb
std
sbb
bound
lds
mov
fwait
xlat
xchg
pop
or
outs
and
sbb
int3
push
movlps
mov
mov
icebp
hlt
mov
test
in
retf
test
pop
xor
lock
xchg
xor
add
xchg
sti
add
shr
dec
jmp
movs
cmp
ret
adc
push
sahf
sti
sbb
aam
push
int
lds
push
fsubr
lods
arpl
cmp
dec
ja
push
cmp
test
cs
mov
dec
mov
pop
aad
test
adc
lods
sar
je
add
sbb
in
mov
dec
inc
pop
fwait
addr16
rcr
pop
or
(bad)
jmp
fwait
outs
adc
cmp
popf
sbb
cdq
aas
ret
push
(bad)
hlt
(bad)
(bad)
mov
ss
int
repz
inc
and
ja
ins
shl
fs
cmp
std
push
ds
stos
hlt
push
in
sahf
aas
idiv
(bad)
inc
mov
scas
dec
into
(bad)
sbb
xchg
loope
dec
pop
jnp
dec
pop
stc
loop
cmc
mov
call
mov
or
or
cmp
push
mov
add
inc
pop
mov
push
(bad)
push
cmc
push
mov
inc
pop
aaa
xor
jmp
ins
test
adc
adc
lea
in
mov
jmp
ret
dec
xlat
je
lods
add
jns
lods
in
out
inc
inc
sbb
data16
cmc
add
ficom
cmp
cmp
movs
call
mov
pop
sbb
push
inc
jl
add
ficom
inc
in
imul
loop
xchg
mov
iret
ss
pop
daa
mov
pop
cli
mov
pop
inc
mov
dec
lock
cmp
push
retf
inc
push
mov
mov
test
mov
imul
sub
xchg
daa
(bad)
or
xor
cmp
jmp
ret
lds
xchg
mov
movs
cli
js
nop
in
sub
cmps
loop
addr16
mov
or
cmps
ss
rcl
jmp
jecxz
push
cmp
sti
dec
jmp
or
add
sbb
cdq
xlat
gs
jno
jne
fild
pusha
ja
xlat
and
mov
lock
cs
push
adc
jnp
popf
in
or
xor
fsub
cld
imul
jge
ds
test
pop
inc
jb
pop
mov
xchg
loopne
push
cmp
aam
push
adc
int3
test
fist
adc
outs
and
mov
add
xchg
pop
call
adc
push
push
add
cmp
cmp
xchg
dec
test
inc
pop
adc
sbb
jb
mov
(bad)
xchg
sti
adc
add
sbb
(bad)
fdivr
fs
sub
int3
out
xor
in
jge
mov
std
pop
add
cmp
pop
aad
inc
test
inc
sti
mov
jo
inc
fstp
cmp
lock
mov
xor
push
js
cdq
add
hlt
shl
mov
cmp
pop
adc
pop
mov
inc
xchg
cmps
mov
fisub
or
aad
pusha
or
fdiv
call
or
cmp
sbb
int3
ror
push
dec
push
hlt
pop
test
inc
sub
xchg
add
int3
jne
repz
je
mov
shl
std
sbb
repz
and
rcr
and
or
and
adc
jns
test
mov
fisubr
mov
jmp
pop
inc
pushf
rcl
sbb
sub
(bad)
mov
jmp
shl
pop
adc
shl
es
jmp
inc
xor
std
pop
sub
xchg
scas
jno
sar
dec
ret
cmp
hlt
popa
repz
mov
mov
es
ja
push
mov
and
adc
sub
xor
jl
add
repz
xor
pusha
sub
dec
aam
iret
lds
popf
cmp
xor
lods
push
push
pushf
scas
iret
and
(bad)
outs
scas
push
gs
(bad)
add
and
ins
push
xchg
inc
mov
add
rcl
aaa
xchg
xchg
adc
arpl
and
mov
mov
inc
cdq
aam
add
loopne
push
hlt
fisub
mov
xor
jbe
or
rol
mov
or
gs
mov
cmp
iret
add
sub
and
in
ds
ins
iret
and
adc
inc
fs
mov
sbb
fst
into
call
sub
je
pop
aas
push
call
mov
mov
pusha
add
int
fnsave
stos
aam
pop
mov
or
pop
dec
xchg
jb
cld
repnz
jbe
adc
push
or
mov
clc
aas
push
test
mov
call
adc
add
enter
mov
mov
imul
pop
sbb
sub
ror
int
movs
add
xor
xor
or
(bad)
jmp
pop
cld
out
or
scas
movzx
cs
stos
mov
sbb
sbb
retf
xor
add
cli
fs
fs
jb
jmp
movs
cdq
gs
sahf
cmp
out
movsx
cdq
jl
mov
loope
in
mov
jnp
xor
pop
pop
fidiv
or
aas
add
fdivr
test
xchg
pop
fnstcw
test
int
pushf
add
inc
stos
jl
mov
lahf
jnp
push
jg
sar
mov
mov
clc
jecxz
add
push
daa
push
pop
cdq
xchg
out
sbb
or
pop
aas
lods
and
mov
xchg
jmp
inc
in
jns
jecxz
jle
add
repz
stos
jno
xchg
jb
lahf
nop
scas
call
fstp
fst
jg
inc
(bad)
daa
and
mov
(bad)
cmp
or
jl
sub
jo
cmp
jmp
xor
(bad)
cld
ds
sub
fisttp
mov
pop
jmp
jle
test
mov
sub
imul
mov
mov
ins
xchg
fnstcw
sbb
aaa
in
mov
(bad)
outs
sbb
retf
add
nop
jp
fmul
sahf
idiv
xchg
inc
mov
(bad)
xlat
or
out
pop
lds
enter
mov
inc
and
test
sub
xchg
mov
adc
div
(bad)
push
sub
les
(bad)
or
push
les
add
push
mov
mov
test
jecxz
add
and
loop
jne
fisubr
es
mov
fiadd
popf
mov
jmp
xchg
xor
int
mov
sub
sti
(bad)
cld
inc
ror
or
sbb
xchg
mov
scas
in
sub
in
cmp
sub
in
xor
(bad)
jbe
retf
inc
adc
retf
dec
cmps
fdivp
repz
xor
mov
into
push
pushf
sbb
inc
loope
mov
and
xchg
fwait
sbb
loope
xchg
or
jae
lea
sbb
fisubr
in
sub
ud2
pop
cwde
repz
ins
jo
in
inc
push
outs
stc
sahf
mov
dec
jo
sub
mov
jge
or
call
aas
and
adc
xchg
dec
push
rol
aas
push
and
lods
mov
or
add
cmp
outs
movs
and
xchg
push
ins
test
mov
sub
ins
rol
imul
les
rcr
jl
test
es
popa
dec
xor
test
jle
dec
fwait
mov
arpl
movs
out
mov
jne
(bad)
hlt
sti
mov
jge
fstp
pushf
daa
jecxz
adc
gs
jno
repz
mov
jne
inc
retf
fstp
cmp
shr
cmp
add
dec
adc
mov
mov
pop
loop
jne
mov
push
scas
movs
aas
push
les
sbb
je
push
pop
shr
test
fcmovb
es
ja
mov
cs
inc
retf
cmp
mov
jb
push
jle
jnp
inc
outs
imul
pop
pop
add
push
pop
jbe
into
xchg
mov
push
div
push
cmp
jns
clc
cmp
test
outs
sbb
jle
jne
cli
jmp
jmp
mov
test
jmp
rcr
stos
mov
sbb
cmps
mov
pusha
aam
test
sbb
ret
loope
leave
inc
and
rol
stos
cmps
jae
mov
mov
out
mov
sbb
(bad)
mov
push
pop
int
inc
or
(bad)
in
(bad)
push
(bad)
mov
imul
xchg
in
stos
(bad)
int
int3
sahf
pushf
call
sub
rcl
repz
hlt
ins
addr16
jne
adc
daa
inc
mov
imul
add
enter
fdiv
push
and
pop
out
test
sub
adc
rdpmc
in
inc
icebp
cmp
dec
dec
add
mov
aad
(bad)
jb
imul
adc
in
ds
stos
pop
push
jns
in
or
rol
retf
mov
ins
push
lea
jb
dec
(bad)
or
pop
clc
lds
arpl
sub
stos
mov
dec
in
bnd
rcr
fimul
and
jle
dec
inc
in
sti
pop
rol
xchg
push
xchg
push
mov
sbb
xor
and
rcr
mov
lds
enter
ret
or
mov
and
in
(bad)
mov
call
std
cmp
push
push
loopne
inc
repz
pop
mov
lock
pop
mov
cdq
or
push
adc
out
add
and
add
push
xchg
pop
pop
xor
fmul
jno
cli
inc
retf
movs
push
xlat
mov
nop
mov
jo
xchg
push
shr
cmc
xchg
jae
cmp
ds
fstp
out
xchg
mov
fild
jne
nop
fisttp
cli
xchg
inc
and
cmps
and
mov
daa
sbb
mov
and
mov
sti
sub
xchg
ins
adc
rcr
mov
sbb
xchg
pop
push
inc
outs
hlt
xor
mov
repnz
loope
std
ss
adc
fs
dec
push
out
sbb
push
fsub
mov
scas
(bad)
test
push
jg
movs
lods
mov
jbe
xchg
lock
repz
cmp
call
sar
aaa
dec
lods
imul
retf
or
push
movs
data16
shl
cs
stc
std
inc
jae
adc
sbb
xchg
jecxz
and
js
bound
test
jp
out
jle
sub
sbb
fmul
rol
(bad)
out
leave
adc
test
das
push
sar
(bad)
sub
fidivr
es
ret
outs
ins
(bad)
adc
and
fs
cmp
mov
fwait
or
fsub
mov
pop
in
cwde
lds
cmp
mov
retf
xchg
mov
sahf
mov
retw
pop
data16
cld
cmc
addr16
ror
hlt
ror
push
into
out
(bad)
addr16
call
lock
adc
rol
stos
push
fs
sub
sbb
mov
add
mov
in
outs
mov
jnp
dec
push
movs
adc
loope
add
nop
xor
cmp
les
imul
cmps
sub
pop
loopne
test
inc
mov
repnz
and
add
or
out
data16
push
xchg
repnz
call
pop
mov
leave
jae
adc
mov
mov
jp
fs
repz
cld
xor
popa
mov
xor
inc
(bad)
cmc
cmp
mov
push
sti
mov
outs
lahf
lods
sbb
push
xchg
test
sti
outs
and
adc
fstp
nop
mov
lods
pop
mov
cmp
stc
je
sub
jmp
push
xchg
push
out
loope
cmp
ror
or
jne
sub
sub
out
mov
push
scas
jmp
lods
out
sub
and
mov
dec
or
mov
mov
fiadd
imul
out
sub
mov
mov
inc
sub
mov
xlat
pop
push
xor
rcr
sbb
call
aaa
rcr
hlt
add
rcl
xchg
inc
dec
int
dec
cli
pop
pushf
ins
dec
sahf
outs
jmp
fbstp
pop
pop
arpl
outs
cdq
pop
int3
popa
inc
and
mov
ins
das
sub
clc
push
xchg
out
(bad)
sbb
add
fs
pop
cli
push
xchg
inc
sbb
jg
neg
add
inc
in
pop
fcmove
pop
push
dec
pop
lock
out
lea
sub
xchg
mov
popa
push
cmp
scas
in
lea
int3
sbb
loopne
les
es
push
mov
sub
sub
inc
test
cmp
ss
fstp
(bad)
data16
mov
cmp
out
pushf
paddb
xchg
pushf
(bad)
aad
rcl
ret
sahf
push
cmp
add
repnz
and
shr
and
push
enter
or
in
jge
frstor
in
mov
or
cmp
scas
shr
mov
or
adc
stc
jge
pop
pop
je
mov
and
or
loop
test
mov
icebp
scas
cmp
cmp
es
arpl
hlt
(bad)
(bad)
jmp
jle
dec
fs
loop
inc
mov
push
enter
gs
xor
xchg
xchg
xchg
mov
pop
dec
mov
cmp
xor
pop
cmps
add
sub
std
test
adc
movs
(bad)
adc
xchg
jnp
lea
das
cmp
push
or
(bad)
lahf
cmc
mov
lods
cld
mov
push
test
sbb
sub
ins
push
push
mov
cwde
out
stos
rol
push
push
es
shl
xlat
mov
cmp
mov
in
sbb
ins
movs
sub
xchg
test
sub
xchg
je
stos
lds
fwait
push
ficomp
sbb
rol
pop
mov
outs
jo
push
std
mov
lods
rcl
mov
mov
sub
lock
mov
rcr
push
je
lea
mov
mov
fmul
arpl
cmp
mov
mov
jbe
or
push
fxch
call
sbb
adc
ret
stc
jmp
or
push
popa
ror
aad
popa
div
(bad)
std
dec
mov
mov
xchg
push
cmp
cmc
add
mov
(bad)
ficomp
test
je
ret
xchg
(bad)
dec
pushf
pop
inc
or
mov
stos
js
outs
stc
dec
and
push
mov
jg
ins
(bad)
xor
jmp
jns
jae
outs
jno
xchg
push
dec
lods
and
inc
jg
fsubr
fwait
es
mov
lods
popf
jae
shr
movs
clc
ret
daa
loop
fwait
sbb
inc
dec
(bad)
fcmove
data16
icebp
dec
(bad)
and
mov
xchg
cli
pop
mov
xchg
arpl
mov
jbe
add
rol
mov
cdq
pusha
cld
and
(bad)
repnz
inc
dec
(bad)
(bad)
addr16
mov
pop
xchg
shl
cmps
jge
imul
sahf
out
cmp
lods
xor
gs
clc
cwde
add
cmp
cmps
push
pop
fisub
cs
outs
jae
xor
jge
stc
xor
cmp
jne
dec
jmp
fnsave
test
push
push
arpl
out
aas
arpl
call
fwait
test
(bad)
and
mov
(bad)
push
mov
or
inc
mov
push
in
jp
mov
push
or
inc
pushf
stos
out
jge
pop
lds
cmps
jbe
imul
ins
push
jmp
add
sbb
inc
test
int3
cmp
xlat
push
outs
push
push
iret
daa
jge
pop
jb
outs
push
ret
ret
enter
cs
das
aad
or
xchg
xchg
push
jns
push
icebp
into
daa
out
push
scas
mov
fistp
dec
mov
fstp
adc
jge
push
shr
jbe
jle
cmp
cmc
ss
repnz
test
ret
adc
inc
xor
lods
iret
test
rcr
jbe
ret
inc
push
aad
pop
neg
out
out
jle
loope
cmp
inc
pop
push
ud1
popa
push
ss
and
std
icebp
dec
adc
jno
int3
xchg
aaa
adc
xchg
push
mov
(bad)
pop
stc
movs
inc
sub
imul
mov
jns
cmp
not
sbb
cdq
mov
out
and
int
cmp
data16
aam
pop
push
push
push
pop
jle
and
or
stos
push
je
dec
fdiv
fst
add
cmp
ins
int3
mov
jl
cmp
int3
and
mov
mov
pop
inc
jmp
loope
dec
adc
xor
adc
pop
and
fsubr
cmps
arpl
mov
je
bound
in
mov
(bad)
in
xchg
shl
jno
mov
sub
xor
cmps
pop
in
jl
add
loop
jmp
inc
push
sub
arpl
movsx
mov
ror
xor
adc
sub
movs
dec
sub
xchg
fsubr
jmp
retf
mul
pop
shl
test
jne
xchg
aaa
adc
add
rcr
out
cmp
daa
xchg
das
lods
jge
jmp
test
push
popa
or
scas
pop
dec
std
rcr
jmp
mov
push
stos
clc
ins
scas
mov
(bad)
(bad)
das
adc
stos
inc
fist
fdiv
rcr
test
add
jge
xchg
inc
xor
in
jns
fisub
cs
push
loopne
xor
stc
pop
pop
es
jl
outs
aas
pop
cmp
(bad)
unpcklps
and
(bad)
jmp
mov
push
pusha
arpl
sbb
pop
es
lea
xor
nop
add
push
pop
xchg
mov
add
test
cmps
inc
dec
ret
jecxz
xor
call
pushf
(bad)
jp
sbb
pop
ins
dec
cld
fidivr
js
jno
lods
jmp
jecxz
daa
mov
push
ss
jmp
and
and
outs
pop
out
movs
inc
mov
adc
jb
jl
cmps
cmp
(bad)
enter
or
shr
fsubrp
fisttp
and
jno
mov
dec
stos
xchg
pop
pop
and
ins
cmc
jl
and
mov
pop
jg
mov
cli
jge
xor
aad
jnp
jno
jge
lods
sbb
mov
mov
push
xchg
mov
pop
cmp
and
jae
sahf
push
jno
jle
pop
sti
inc
popa
outs
movs
cs
nop
stos
mov
mov
xor
(bad)
(bad)
or
fwait
sbb
jl
clc
jg
sbb
out
lds
xchg
jb
or
(bad)
cmp
push
retf
mov
ret
jg
mov
fmul
call
cmc
retf
xor
or
jecxz
neg
ja
retf
test
(bad)
fcomp
iret
mov
cmp
aam
xchg
push
hlt
sar
arpl
lahf
outs
out
mov
clc
mov
jg
mov
call
div
(bad)
and
rcr
and
out
daa
mov
sti
jmp
xchg
add
push
mov
std
xor
and
mov
lock
fs
sti
repz
icebp
hlt
jnp
in
in
ret
sti
or
test
stc
es
test
outs
and
(bad)
out
rcr
cld
loop
test
xchg
pop
push
jle
mov
(bad)
cld
iret
pop
xor
jg
js
pop
in
pop
out
addr16
ds
call
pop
add
or
xchg
jmp
cli
cmps
aas
fmul
xor
pop
push
in
sti
call
mov
aas
xor
or
or
or
mov
maskmovq
neg
int3
pop
ficomp
fwait
mov
in
xor
adc
loop
retf
cmp
push
movs
pop
sbb
push
push
int3
sbb
add
sbb
rol
mov
mov
es
daa
inc
into
inc
fild
cmp
(bad)
out
jo
and
imul
dec
sbb
xchg
and
out
lods
fld
cmp
xor
movs
(bad)
jmp
(bad)
mov
mov
jo
inc
out
xor
or
clc
imul
leave
xchg
fld
push
pushf
shl
mov
xchg
inc
scas
pop
scas
mov
pop
(bad)
add
mov
lea
outs
in
test
sar
mov
push
or
loope
xor
movs
dec
retf
cmp
into
icebp
ror
dec
mov
mov
leave
lods
add
ret
(bad)
sar
xchg
leave
cwde
add
jno
jecxz
jmp
enter
or
sbb
xor
test
fmulp
dec
and
jecxz
data16
(bad)
dec
sub
rol
popf
cmp
pop
leave
(bad)
jns
mov
sub
mov
sub
mov
push
sahf
cwde
xchg
mov
jae
and
mov
sub
dec
mov
mov
out
xchg
sar
(bad)
pop
adc
fwait
loop
mov
aad
push
or
mov
bound
out
inc
outs
adc
mov
and
das
jl
add
mov
pop
inc
gs
jae
cmps
mov
movs
push
dec
xchg
int
xlat
in
(bad)
call
aas
out
mov
push
fisub
jns
enter
shr
jns
mov
xchg
pushf
push
fs
mov
addps
popa
cmps
fld
mov
lahf
ins
aam
stc
mov
inc
mov
lock
inc
jbe
lock
pop
mov
mov
sub
sbb
cmp
inc
jo
add
loope
mov
mov
cmp
fisub
pop
iret
scas
retf
push
pop
mov
inc
je
jo
gs
sbb
mov
and
mov
mov
scas
ret
dec
push
adc
xchg
popf
lds
cmps
lds
or
pop
(bad)
idiv
add
cmp
cmps
mov
mov
fsub
push
out
mov
rol
jne
jns
loopne
jb
pusha
xchg
mov
pmaxsw
sub
inc
ds
pusha
mov
xor
and
bound
adc
xor
push
clc
fstp
push
inc
shr
pop
fidivr
add
add
movs
int3
popa
ins
sbb
cwde
mov
mov
call
je
sbb
add
mov
xchg
push
or
loop
stc
jl
cmps
int3
inc
cli
je
(bad)
sub
aas
sti
pop
lock
push
loop
ror
stc
adc
std
sbb
xor
inc
jmp
or
addr16
jp
xor
dec
cmp
(bad)
sub
jg
outs
iret
data16
ss
ss
pop
add
inc
push
mov
xchg
mov
adc
loope
or
inc
call
mov
sbb
jmp
cli
aas
jae
sub
pop
inc
aas
mov
mov
popa
xlat
popa
cli
mov
in
sar
dec
jmp
jmp
jbe
pop
sub
pop
push
mov
cmps
mov
jl
jnp
push
ds
fstp
fs
push
scas
imul
ds
mov
jne
rcr
test
fs
sbb
dec
data16
adc
jae
gs
and
(bad)
loop
cmp
dec
pop
xchg
test
xor
push
js
mov
xor
cdq
xor
jo
cld
popf
xlat
push
(bad)
mov
mov
lock
outs
xchg
jmp
or
clc
(bad)
aam
rcl
sub
xchg
adc
fcom
cld
lds
or
mov
mov
push
xchg
stc
das
sub
jp
inc
(bad)
jns
inc
gs
mov
or
mov
dec
movs
xor
jne
cmp
xchg
mov
das
mov
lds
leave
in
sub
gs
(bad)
pop
fdiv
push
stc
pop
xor
or
fadd
adc
adc
enter
out
out
dec
call
xchg
rcr
or
fcom
hlt
jge
pop
into
or
adc
scas
mul
pop
jnp
sub
or
jmp
sbb
mov
in
ja
adc
add
cld
sbb
sub
mov
add
in
or
jae
ja
xor
out
or
js
xchg
stos
xlat
scas
stos
dec
out
mov
ins
cmp
inc
mov
ret
mov
pop
dec
pop
(bad)
sub
mov
add
and
cmp
mov
sub
fs
in
vmptrld
inc
dec
repnz
fstp
test
xor
cmc
sub
sbb
arpl
aaa
jae
(bad)
out
jp
lds
inc
out
jne
push
cmp
enter
stos
pusha
mov
cmps
push
aaa
mov
dec
lods
xchg
mov
mov
data16
stos
sub
jae
popa
ja
fxam
test
inc
mov
(bad)
gs
bound
push
and
add
mov
push
test
adc
pop
lods
adc
aaa
xchg
cmp
cwde
jnp
cmp
mov
ret
dec
add
inc
loop
jb
push
aas
or
adc
ins
jge
jae
fcom
xchg
xchg
xor
mov
mov
cld
pushf
adc
jb
sub
out
addr16
fdiv
sbb
jecxz
fwait
dec
adc
adc
scas
not
and
inc
jle
out
std
fst
pcmpgtd
push
cli
adc
or
ror
push
ins
ret
xchg
retf
rcl
inc
in
imul
add
xor
and
sub
mov
daa
ret
out
arpl
sahf
retf
add
loope
in
or
sbb
sub
xchg
out
xchg
cmp
push
test
mov
ss
mov
cmp
js
mov
in
sbb
pusha
(bad)
jnp
push
ins
sub
leave
cmps
or
data16
jns
mov
test
mov
pop
inc
aas
pop
dec
cld
xchg
xchg
mov
jb
adc
out
push
jmp
lods
pop
in
adc
fidiv
dec
(bad)
mov
xor
inc
sbb
or
jl
jle
and
nop
push
push
fcom
adc
push
int3
sbb
scas
les
xchg
loope
loopne
sbb
aam
mov
dec
jne
fisub
adc
cld
stos
test
fs
jae
inc
sub
mov
push
xor
mov
push
loope
or
mov
mov
imul
sub
push
and
ins
mov
jo
adc
cli
mov
out
scas
xchg
es
jg
(bad)
pop
mov
dec
mov
xlat
ror
into
push
scas
ret
pop
repz
jo
mov
ret
cli
sub
ret
cwde
mov
popa
add
lahf
cmps
test
call
xchg
sub
bound
cld
(bad)
retf
(bad)
sub
mov
jo
popf
iret
jg
or
in
dec
dec
or
xchg
data16
or
test
rol
add
repz
fadd
xchg
gs
jb
cmp
fist
push
or
xchg
pusha
dec
cmps
xor
dec
neg
movs
movs
imul
mov
and
add
fdiv
stos
stos
ss
mov
or
call
sub
outs
shl
xchg
pop
inc
mov
(bad)
push
push
shr
int3
xchg
adc
sbb
scas
sub
xchg
pop
xor
pop
push
mov
push
or
aad
jmp
jg
je
stc
adc
adc
mov
jge
into
cli
sbb
or
mov
pop
mov
jne
out
or
inc
test
lods
shl
int3
pop
(bad)
fcomi
mov
arpl
sub
push
xlat
or
cmps
cwde
cmp
xor
out
inc
aaa
xlat
push
icebp
jo
add
pop
loop
mov
mov
into
push
xchg
outs
pop
data16
pop
ss
ret
sub
sbb
scas
cmp
adc
push
pop
clc
cmc
sub
xor
mov
fiadd
xor
cmps
dec
inc
rcl
xchg
int
jnp
and
fsubp
mov
sub
imul
clc
mov
jmp
fadd
push
lock
fistp
mov
loope
sahf
xor
pop
dec
stos
inc
jns
retf
push
pop
repnz
mov
gs
pop
jne
cmc
or
mov
xchg
pslld
and
imul
xchg
jg
mov
fs
and
sti
into
test
ret
push
aam
sbb
imul
jae
jbe
iret
clc
push
icebp
lock
in
mov
dec
icebp
or
repz
mov
mov
cmp
fisub
call
xor
jle
push
xchg
mov
cmc
push
xor
xor
mov
mov
and
je
fdivp
push
sub
jp
mov
out
std
pop
into
xchg
push
cmc
or
xor
in
pop
scas
ss
pusha
outs
(bad)
pushf
mov
aam
loopne
imul
mov
mov
cmps
cwde
cmp
jae
in
jno
loop
loope
push
ins
mov
adc
mov
js
add
(bad)
push
pop
stos
inc
cmps
mov
test
dec
push
data16
retf
retf
xchg
cs
rcl
iret
ficom
fcomp
dec
mov
in
(bad)
ss
xchg
data16
push
xchg
imul
mov
mov
cmc
int
adc
lahf
mov
sub
cmp
sahf
or
cld
push
xor
xor
sub
xor
fnsave
mov
cwde
jl
loop
add
das
rol
fs
addr16
fdiv
hlt
jecxz
xchg
pop
scas
arpl
or
iret
push
adc
shl
and
call
dec
jns
or
popa
movs
repz
fwait
inc
mov
sub
pop
cdq
call
push
mov
dec
mov
and
aas
ret
add
add
jmp
mov
xchg
pusha
jae
sub
add
jae
jb
xor
(bad)
out
cmc
aam
jp
(bad)
(bad)
push
cs
(bad)
movs
in
add
push
sub
aam
xchg
sub
jnp
loope
ss
cdq
test
xor
nop
arpl
mov
or
pop
sti
fld
pop
test
and
lods
push
fdiv
repnz
inc
jns
es
shr
pop
mov
push
lods
mov
rcl
adc
adc
repz
lock
cmp
sbb
and
or
cmc
into
fidiv
jnp
ja
scas
mov
(bad)
dec
sub
lahf
neg
(bad)
dec
outs
int
test
cwde
jge
inc
jns
hlt
js
sahf
inc
stos
adc
cld
(bad)
cmp
ja
add
in
xchg
rcl
jnp
into
pop
fnstenv
jmp
lock
jmp
cmp
cmp
add
stc
push
sar
jno
mov
imul
jo
out
push
sub
jno
sbb
xchg
(bad)
pop
(bad)
in
mov
jmp
inc
movs
mov
dec
cmps
sub
inc
sub
jp
pop
(bad)
cmp
retf
cmc
aas
vphaddbw
jns
lods
int
aad
sbb
out
dec
imul
cmp
cmps
jle
push
fcom
ins
mov
mov
inc
lahf
pop
xor
lea
cmp
dec
mov
std
imul
jge
outs
(bad)
xchg
ror
scas
add
pop
aad
dec
adc
mov
push
repz
add
jno
pop
xor
jnp
test
cmp
iret
cli
call
xchg
cld
shl
or
push
and
pop
test
jp
pop
mov
jno
out
rcr
sbb
popa
outs
cdq
xor
call
push
stc
in
outs
rol
jbe
mov
cmps
out
xchg
pop
lock
sar
or
je
movs
mov
pop
add
clc
inc
mov
outs
jns
iret
lock
pop
scas
jle
call
xor
inc
je
mov
jl
or
mov
into
rcr
loop
pop
pop
mov
scas
jae
and
icebp
inc
mov
push
imul
out
jg
arpl
push
(bad)
adc
mov
stos
jmp
sub
push
inc
shr
xor
cmc
pop
cdq
adc
mov
jp
fst
and
hlt
arpl
pop
stc
ret
dec
or
ss
(bad)
fidiv
jae
aaa
das
jp
cdq
dec
sahf
test
xchg
lahf
pop
sbb
and
xchg
sub
or
and
inc
in
add
and
ss
cmp
mov
sub
sbb
popf
mov
mov
sar
xor
jle
push
cdq
jns
loope
ja
sbb
call
leave
push
mov
daa
mov
int3
dec
add
test
int
xchg
or
pushf
outs
add
(bad)
pop
(bad)
push
data16
sub
mov
mov
push
(bad)
in
push
xor
addr16
mov
aaa
push
test
and
addr16
adc
scas
dec
outs
or
push
xchg
movs
data16
cmp
jmp
mov
xor
into
cmc
nop
(bad)
test
call
rcr
sbb
and
fnstenv
test
push
in
add
outs
and
or
mov
cmp
loope
ror
push
dec
adc
je
ds
sub
jge
xor
ins
ror
std
call
fdiv
into
dec
ror
inc
xchg
daa
mov
std
sbb
xlat
xor
and
or
xor
ins
and
aas
sub
sahf
xchg
mov
(bad)
out
rol
push
popf
repz
ds
mov
js
int
(bad)
call
fisub
outs
or
cmp
jb
shl
inc
nop
xor
pop
pop
or
dec
(bad)
dec
ds
mov
in
int
shl
cmp
lods
or
cmp
je
dec
add
sahf
xor
test
adc
jmp
xor
into
adc
inc
ja
or
ins
cmp
mov
test
js
add
mov
mov
add
fisubr
mov
sub
pusha
sub
xor
lea
adc
clc
ret
sbb
add
or
es
mov
cmps
push
add
shl
xlat
pusha
data16
cmp
(bad)
pop
rcr
cmps
xchg
xchg
xchg
jns
je
xchg
out
and
xor
in
mov
pop
aad
ret
dec
cmp
push
jmp
ja
and
movs
outs
movs
mov
mov
inc
pop
push
mov
lock
push
idiv
out
retf
aad
mov
mov
dec
cs
idiv
cmp
sti
adc
or
jne
or
dec
das
js
push
fdivr
int3
outs
outs
xchg
stos
cmp
outs
(bad)
sub
test
aad
xchg
xchg
cli
cmp
retf
in
stos
test
movs
in
ror
(bad)
cmp
lock
out
aas
call
add
push
popf
leave
movs
popf
(bad)
sub
push
xchg
ds
js
ins
je
jno
xor
xor
aad
xchg
into
lods
inc
xchg
pop
adc
dec
cmc
jp
cld
out
test
out
ror
mov
dec
shr
stos
and
xor
and
hlt
fnstenv
sbb
lds
sti
push
add
mov
xor
mov
dec
mov
mov
inc
or
popw
gs
xchg
push
xor
mov
mov
and
and
les
stos
pop
mov
nop
lods
paddw
fdivr
out
(bad)
in
or
fmul
mov
sbb
cmovp
jl
adc
pop
and
int3
mov
hlt
popf
sub
adc
sub
xchg
mov
jne
add
aad
xchg
cmp
pop
mov
jmp
bound
(bad)
stos
mov
loop
call
xchg
pop
mov
mov
ins
ror
sahf
adc
shr
lea
and
jbe
and
dec
or
inc
cmp
pop
jns
rcr
repz
icebp
cld
out
rcl
xchg
inc
pop
ret
loope
test
clc
or
and
cmps
out
ss
mov
push
fild
mov
popf
clc
mov
aad
jbe
xchg
cmp
or
add
ss
mov
std
(bad)
enter
pop
enter
sub
dec
sub
push
or
xchg
dec
xor
jmp
icebp
(bad)
xlat
xor
cmp
pop
xchg
or
and
mov
dec
dec
fucomp
jmp
in
dec
mov
lods
das
pop
cmp
pop
loopne
imul
out
add
ds
lea
mov
mov
jle
cdq
pop
mov
or
outs
fwait
mov
xchg
sbb
cdq
pop
ss
hlt
mov
and
clc
mov
pop
pop
js
out
sub
push
scas
aaa
cmp
inc
daa
mov
cld
inc
mov
mov
sbb
push
sbb
retf
mov
or
xor
mov
xchg
mov
mov
test
xchg
out
ficomp
int3
or
(bad)
gs
(bad)
push
or
(bad)
xchg
xchg
and
lods
out
xchg
movs
sub
jle
cmp
adc
scas
retf
push
xchg
push
daa
xchg
xor
add
rcl
pop
pop
sub
dec
outs
cld
sbb
mov
cmp
movs
push
fist
xchg
(bad)
or
dec
sbb
sahf
lods
cmp
add
retf
mov
ror
out
mov
jno
fwait
call
in
popf
out
pop
mov
cwde
mov
inc
mov
fdivr
or
into
retf
mov
and
add
pop
and
pop
(bad)
cmp
pop
fmul
hlt
jne
sbb
jmp
jle
mov
icebp
test
cmp
cmc
cmp
mov
mov
dec
fdivr
cmp
jmp
cmps
outs
dec
sahf
lock
ins
push
pop
call
fbstp
hlt
xor
fwait
ja
imul
ret
mov
mov
rcr
mov
adc
dec
dec
or
je
fisubr
jp
pop
cmp
mov
sbb
mov
xchg
pop
inc
into
mov
cli
int3
jo
das
mov
hlt
jl
repz
ins
sbb
xchg
clc
jns
dec
jmp
leave
movs
mov
push
lods
mov
sbb
adc
sub
cmp
clc
daa
and
aam
stc
clc
mov
add
push
mov
lods
es
push
es
push
xor
xor
stos
fwait
cmp
xchg
add
stos
mov
mov
mov
pop
cmps
repnz
mov
inc
and
dec
retf
lock
leave
and
add
aas
bound
sub
or
add
sbb
push
stc
push
or
sar
mov
sbb
or
mov
inc
push
and
stos
and
jbe
sub
inc
xchg
xor
mov
mov
hlt
adc
or
jp
cmp
pop
adc
adc
inc
loopne
shr
sbb
gs
lods
adc
mov
mov
shl
ja
pop
or
mov
jne
jg
xchg
nop
mov
repz
in
out
and
push
aam
push
push
push
push
cmc
icebp
clc
aas
mov
sub
sahf
jns
aad
pop
movs
movntps
rcr
test
lds
ins
add
jmp
or
repnz
mov
dec
push
inc
mov
push
ret
jmp
push
stos
clc
out
push
rcl
out
movs
mov
jmp
mov
sahf
sbb
or
test
icebp
imul
pop
xchg
clc
mov
popf
jg
and
xchg
sub
sti
ins
mov
loop
dec
sub
or
push
inc
pushf
int3
sub
(bad)
mov
out
pop
sub
mov
aaa
cdq
mov
stc
jmp
imul
xor
adc
push
jnp
mov
add
jmp
add
fld
fadd
xor
xchg
sbb
xchg
and
outs
inc
inc
mov
pop
shl
popa
movs
pop
pop
cmp
test
dec
jnp
fcom
arpl
(bad)
rol
inc
jae
adc
fisub
fidivr
cmp
loope
fisttp
aas
mov
dec
in
nop
push
xchg
mov
push
xchg
xor
bound
jmp
inc
out
fisttp
add
xchg
push
push
aam
in
out
add
sar
or
push
inc
xor
dec
add
jmp
mov
mov
lods
add
add
sbb
in
add
sub
mov
inc
xchg
mov
and
xlat
pop
popf
ja
inc
and
leave
or
fs
xchg
or
push
and
into
jae
and
movs
jae
push
ss
mov
in
lods
xor
rcl
fxch
aas
push
outs
stc
inc
jne
jno
hlt
add
or
jle
test
dec
dec
movs
push
fs
dec
dec
scas
inc
inc
adc
cmp
out
cmp
push
jmp
dec
lea
adc
and
xor
in
xchg
sbb
cmp
and
lahf
cmp
jmp
adc
lds
xchg
mov
test
icebp
clc
sub
ret
repz
ja
and
sahf
retf
hlt
push
bound
rcl
ja
xchg
rol
add
fld
xchg
scas
and
xor
inc
and
pop
jnp
pop
bound
xor
adc
mov
add
adc
and
mov
push
(bad)
fstp
in
cmp
neg
jl
pop
pushf
jmp
pop
pop
es
push
mov
int3
push
fiadd
cmp
dec
inc
mov
cmp
mov
mov
xchg
shl
mov
xchg
or
mov
fld
dec
cmp
fsubr
movs
push
bound
add
mov
cmp
rol
stos
pop
out
jne
and
xor
pop
inc
sub
movs
fwait
call
sahf
inc
mov
imul
and
add
test
aaa
jae
xchg
xchg
pop
adc
push
in
(bad)
mov
adc
pop
xchg
sub
pop
and
mov
div
hlt
bound
mov
test
test
sub
out
mov
and
dec
dec
or
loope
xchg
in
iret
xor
jno
pop
shl
test
mov
mov
shr
dec
xor
and
xor
sbb
cmp
and
dec
push
outs
sahf
repz
push
push
cmp
inc
test
in
mov
pop
push
dec
es
rcl
add
rcl
fisub
cdq
mov
push
pushf
pop
je
pop
cmp
cmp
popf
jg
push
stos
test
sbb
add
aaa
leave
dec
xlat
mov
lahf
pop
push
cmps
dec
fwait
jb
out
pop
dec
jb
cmp
ret
fiadd
in
(bad)
xchg
pop
test
daa
loop
imul
call
jg
push
clc
xchg
(bad)
xchg
sub
div
test
mov
(bad)
daa
outs
mov
lea
or
in
lds
xchg
sbb
jne
xchg
mov
and
ret
dec
pop
jnp
pop
aad
push
and
sbb
adc
pop
jmp
std
pop
jmp
xor
and
push
push
jmp
inc
xor
pop
mov
xlat
mov
inc
mov
cmp
out
std
cdq
xor
jae
rcr
int
dec
popa
call
ret
xchg
in
arpl
dec
jne
in
and
mov
and
pop
nop
dec
sub
pop
ja
lahf
push
push
push
dec
enter
jns
pop
lods
adc
fnstenv
and
popf
xlat
out
ins
mov
push
(bad)
mov
out
bswap
mov
pop
jne
sub
push
inc
sar
adc
add
scas
mov
aaa
pop
addr16
jmp
je
cmp
cld
stc
fdiv
cmp
push
jns
xchg
dec
cwde
test
and
sub
stc
jg
imul
push
mov
and
mov
retf
fsubr
jo
mov
in
pop
xor
test
inc
shl
xor
daa
pop
fidivr
push
call
inc
sahf
or
(bad)
and
(bad)
xchg
std
out
test
iret
sti
add
sbb
adc
out
push
mov
pop
fs
xchg
pop
lahf
lahf
repnz
fstp
mov
push
(bad)
cld
push
ret
jge
cdq
or
jmp
xchg
mov
push
rcr
cmp
dec
shr
push
in
xchg
mov
inc
push
imul
and
repnz
or
xor
(bad)
cli
aaa
sti
add
sub
mov
mov
inc
jne
sbb
sti
mov
sbb
cmc
(bad)
sub
xor
scas
xchg
mov
cmp
cs
adc
jo
adc
add
lods
int
fidivr
jl
nop
scas
pop
pop
cmp
push
rcr
xor
dec
or
lock
sbb
out
out
icebp
in
popf
jge
jecxz
leave
retf
cwde
test
movs
in
cmps
das
and
das
push
push
dec
icebp
mov
loop
mov
stos
push
jb
xor
loop
dec
sub
sbb
cmp
mov
in
jecxz
jno
mov
outs
jl
cs
inc
leave
push
mov
push
dec
pop
mov
retf
pop
add
lods
in
mov
or
psraw
adc
jae
pop
lock
sub
repz
mov
dec
ja
retf
(bad)
das
pop
stc
ins
mov
cmp
dec
pop
fwait
push
push
and
loope
repz
cmps
mov
inc
and
pop
sbb
scas
pop
push
cmc
mov
push
sub
jg
sub
shl
push
and
pop
push
mov
xchg
les
cmp
int
adc
inc
sub
jo
xchg
jb
(bad)
cmp
jae
mov
imul
mov
das
pop
dec
adc
cmp
imul
fs
jnp
cmp
inc
inc
pop
out
lods
mov
hlt
cld
add
aaa
movs
or
gs
dec
cmp
(bad)
xor
fiadd
mov
loope
xchg
call
xchg
pop
mov
inc
cmovs
iret
push
adc
pop
retf
jmp
jae
out
or
jbe
leave
pop
ficomp
(bad)
cmc
or
js
aad
push
xchg
pop
aam
jmp
push
mov
mov
and
lea
inc
int3
inc
out
fistp
pminub
outs
inc
out
or
fdiv
mov
stos
xor
inc
loope
cld
mov
adc
cmps
xor
test
sbb
ja
mov
in
iret
sbb
fdiv
push
mov
sbb
outs
pop
mov
mov
sbb
xchg
and
mov
ret
mov
or
xchg
cs
imul
test
mov
arpl
xchg
add
ins
fisubr
popa
ds
in
cmc
push
lods
or
jle
push
dec
inc
test
ins
retf
icebp
cmps
cmps
xlat
push
enter
cmp
xlat
push
aas
lock
(bad)
int
dec
inc
sbb
add
ret
xor
cwde
mov
out
inc
sti
popa
loop
jmp
std
add
fcmovb
push
inc
and
int3
outs
ret
ss
add
fwait
sbb
push
loop
sbb
aaa
test
call
retf
mov
out
push
inc
sbb
(bad)
mov
fs
popf
retf
inc
and
cmc
push
clc
and
inc
xchg
or
loop
call
stos
fist
mov
int3
jae
push
pusha
(bad)
mov
cmp
add
and
out
pop
push
pop
dec
(bad)
jmp
pop
jb
ret
jae
jbe
(bad)
ins
js
sub
retf
dec
idiv
xor
jo
dec
sub
ds
pop
sbb
jl
test
repz
xor
lods
inc
aas
sub
imul
pusha
mov
cdq
popa
dec
leave
sub
cmp
or
mov
rol
mov
lods
dec
inc
out
test
adc
dec
cmps
shl
in
push
push
loope
pop
cmp
fs
xor
pop
hlt
into
push
mov
jp
cmp
test
dec
and
out
arpl
dec
sub
dec
and
add
cmp
lock
fmul
imul
mov
int
in
or
xor
jns
dec
(bad)
bnd
call
movs
or
or
pop
dec
sbb
jns
jle
fldenv
cld
movs
sahf
lds
jg
dec
jae
mov
lods
xchg
cs
add
repnz
neg
sub
out
repz
pop
loopne
and
icebp
int3
jo
out
sub
xlat
dec
mov
cmps
mov
ret
mov
jp
adc
mov
push
int
bts
or
or
shr
xchg
cmp
push
bound
jmp
push
lock
loope
shl
outs
cli
pop
repnz
addr16
(bad)
adc
jno
imul
in
mov
jg
xor
jp
ror
fs
(bad)
or
mov
fisttp
cmp
xor
lea
cmp
aas
and
rcr
dec
les
out
movs
jge
cmp
mov
adc
idiv
cmp
jmp
cmp
or
mov
in
repnz
fs
rcr
mov
pusha
or
aam
js
add
cmps
ucomiss
mov
div
loopne
adc
outs
mov
clc
inc
stc
pushf
(bad)
dec
dec
lds
cmp
or
adc
mov
shl
sbb
sub
add
inc
leave
cmp
movs
(bad)
push
ret
or
fisttp
pop
jnp
jmp
fs
xchg
adc
cmc
adc
enter
jmp
ret
pop
(bad)
xlat
mov
xchg
daa
mov
dec
mov
into
adc
or
mov
cmp
cmp
jmp
xchg
add
fdivr
xor
not
(bad)
ins
out
mov
jmp
jmp
xor
scas
push
inc
dec
in
mov
sbb
int
mov
cld
sub
cwde
fld
repz
(bad)
sub
inc
jecxz
ss
fcmovbe
jmp
mov
or
ret
sbb
pushf
ror
add
xor
jle
sbb
xchg
test
aas
add
sub
rol
fdivr
dec
pusha
cmps
xor
cmp
je
rcl
ins
xadd
dec
outs
iret
jnp
sahf
add
pop
mov
cli
xchg
mov
(bad)
cld
or
mov
test
add
dec
push
icebp
sub
push
lds
sbb
inc
dec
xchg
in
int
sbb
sub
std
pop
retf
cmps
into
js
adc
out
imul
mov
push
mov
inc
push
fidiv
stos
mov
xor
arpl
sbb
and
sbb
jp
cli
pusha
xchg
xor
mov
(bad)
ret
std
sbb
xchg
push
jnp
scas
mov
inc
push
sbb
imul
push
dec
sub
(bad)
scas
in
xor
(bad)
mov
outs
mov
jae
jne
jp
dec
adc
adc
or
fs
xchg
in
or
mov
sbb
mov
cdq
and
xchg
mov
pop
mov
idiv
js
xchg
push
xchg
cmc
mov
cmp
pop
xchg
push
pusha
shl
movs
sub
pop
into
dec
in
adc
push
mov
jmp
adc
or
(bad)
xchg
xchg
jl
fwait
in
or
xor
in
sub
(bad)
sbb
dec
out
mov
out
inc
and
pop
out
sar
dec
ss
jb
out
out
in
pop
or
pop
xchg
icebp
out
es
adc
(bad)
cmps
xchg
cmps
dec
scas
cmp
push
or
shr
(bad)
es
js
cli
sahf
mov
das
inc
cmp
jle
les
test
pop
(bad)
cwde
push
fiadd
jle
js
ret
div
jmp
adc
pop
push
and
push
push
push
pop
cmp
mov
mov
mov
lea
xchg
sti
push
sbb
and
adc
in
bound
test
int
adc
sti
inc
sub
mov
std
pop
popf
pop
cmp
mov
mov
push
(bad)
data16
jb
pop
fnsave
das
(bad)
mov
pop
push
gs
push
adc
and
mov
dec
repnz
out
adc
mov
mov
jmp
dec
popa
pop
xchg
push
mov
out
neg
outs
shl
(bad)
cmps
sub
ja
adc
dec
dec
push
in
inc
inc
call
int
in
ja
inc
adc
int3
out
(bad)
xor
xchg
(bad)
inc
sbb
(bad)
scas
push
adc
and
or
lock
ror
mov
jecxz
sub
inc
sbb
jge
mov
or
xlat
in
dec
xlat
out
pop
cmp
fld
xor
retf
stos
fcomi
jns
xchg
inc
mov
lahf
cmp
repz
ins
xchg
in
pop
inc
movs
aas
xchg
cmp
pushf
mov
sbb
sbb
fwait
mov
xor
ja
sahf
inc
sti
mov
add
stos
daa
xchg
jae
js
stos
dec
movs
retf
push
jbe
push
xchg
adc
adc
bound
fbstp
push
in
jge
mov
dec
lahf
dec
add
cmp
jl
xchg
push
xor
add
adc
add
inc
(bad)
test
push
shr
or
mov
push
sub
call
sbb
jne
scas
or
(bad)
pop
ins
add
or
ja
in
addr16
jp
lods
movs
out
inc
in
cmps
jbe
add
pop
adc
outs
cs
icebp
movs
jmp
cli
mov
dec
repz
jmp
dec
mov
lahf
sbb
js
sahf
xchg
xchg
mov
jge
cdq
cli
mov
and
mov
cmp
cmps
mov
sub
pop
sub
sbb
je
out
out
aas
repnz
movs
mov
and
imul
xor
(bad)
cmp
cmc
mov
in
stos
in
xchg
loopne
je
dec
xchg
mov
push
dec
inc
mov
xchg
jbe
jle
cli
or
aad
pop
movs
dec
ins
mov
cmp
dec
div
add
outs
mov
lea
jb
and
lahf
ins
push
cli
fwait
rcr
inc
sar
jmp
xchg
scas
jb
and
out
or
out
or
mov
aam
sbb
mov
jge
adc
mov
(bad)
cmp
jno
cmc
bndldx
leave
add
xlat
push
(bad)
popf
fwait
mov
sbb
stos
(bad)
xor
push
cld
push
jp
outs
loope
(bad)
push
mov
inc
das
repnz
loop
dec
mov
push
jecxz
adc
mov
sub
aaa
jl
xchg
xchg
jle
xor
cld
and
imul
cmp
jmp
mov
push
fnsave
xor
xchg
dec
push
jmp
xor
xchg
mov
xor
cmps
je
mov
pop
in
push
dec
inc
xor
enter
jp
jae
les
pop
pop
stc
sbb
dec
mov
(bad)
dec
mov
test
sti
(bad)
xchg
loopne
cmp
cmc
cmp
push
sar
ret
sub
jo
ja
xchg
mov
mov
xchg
xor
daa
sti
mov
int3
stos
xor
xor
jge
retf
or
in
sub
jle
cmp
pop
inc
or
pop
scas
lea
je
mov
jmp
fbld
sbb
mov
data16
xchg
mov
mov
mov
cmp
cmp
sub
(bad)
in
mov
push
bound
out
fistp
ret
iret
imul
js
jp
adc
sbb
test
sub
ja
lods
sbb
pop
cmp
mov
out
mov
es
rcr
inc
ss
call
cmp
repz
repnz
outs
jne
mov
repz
and
mov
pushf
mov
dec
sahf
je
mov
shr
sbb
int3
adc
scas
cmps
mov
mov
cmp
sbb
repz
in
dec
repnz
fnstenv
outs
outs
stos
in
ret
lahf
pop
pop
jge
pop
stos
jge
test
mov
ret
push
loop
xchg
lahf
add
stc
ror
or
stc
sub
sar
popf
inc
cld
int3
enter
rol
push
mov
fptan
(bad)
out
fiadd
inc
jmp
scas
jbe
cmc
ficom
ds
push
pop
test
push
mov
mov
loopne
ins
xchg
sbb
sub
push
lahf
adc
cmp
and
mov
lahf
test
and
in
xchg
idiv
push
push
test
test
loopne
dec
ds
mov
adc
or
sbb
stos
lds
nop
inc
jno
loopne
or
sub
sub
push
add
aas
fsubp
rcr
test
in
xor
inc
inc
daa
rcl
jp
cli
adc
xchg
pop
out
push
jge
and
adc
xor
int3
and
pusha
xor
movs
jmp
into
cmp
push
or
sbb
sahf
jg
not
pusha
jmp
pop
xlat
and
jno
inc
sbb
xor
jmp
cmp
jmp
jbe
mov
or
stos
aaa
inc
mov
(bad)
pop
nop
push
inc
sar
sbb
int3
xchg
adc
shl
mov
(bad)
movs
pop
push
outs
fsubr
aaa
sub
or
(bad)
pop
icebp
test
mov
ja
fstp
imul
out
ins
ror
mov
jns
push
mov
mov
aas
and
inc
add
(bad)
bnd
sub
jne
fcom
xor
into
loope
(bad)
mov
(bad)
popf
stc
push
xlat
pusha
(bad)
cmc
out
jmp
and
jecxz
lods
(bad)
add
shl
repz
repnz
out
sahf
mov
adc
(bad)
push
push
arpl
pushf
inc
mov
lods
mov
out
sbb
or
mov
jb
loope
ret
adc
cli
adc
and
enter
push
push
hlt
loop
adc
xchg
(bad)
mov
mov
mov
adc
(bad)
cmc
ins
shl
adc
push
adc
fwait
dec
sar
jno
pop
jmp
inc
add
pop
lahf
retf
jmp
xchg
outs
std
and
inc
test
iret
inc
jl
addr16
out
sub
pop
and
cmps
mov
hlt
push
xlat
mul
add
xor
repz
add
and
sbb
dec
aam
xlat
sub
into
mov
add
daa
shr
xchg
push
mov
dec
aas
fnstcw
xchg
repz
push
mov
scas
ror
mov
sub
sub
xlat
sub
sbb
dec
fld
sbb
inc
(bad)
push
xchg
sub
adc
and
int3
not
sbb
jle
imul
lds
loop
ins
outs
mov
pop
movs
mov
imul
and
xchg
fldcw
addr16
cmp
stos
mov
shl
xlat
lea
push
nop
sub
in
cmps
pop
stos
mov
in
pop
sti
ja
xchg
dec
cli
cdq
mov
lods
sbb
sub
cmp
(bad)
push
mov
mov
sub
or
dec
scas
sbb
(bad)
out
fwait
les
std
pop
call
and
or
pop
sub
fcmovnu
or
pop
test
sbb
fdivrp
inc
fdivr
cmc
mov
push
adc
fnsave
push
push
sti
mov
mov
jecxz
out
push
les
pop
sbb
bound
cmps
ret
sub
inc
jp
and
sbb
jb
jp
pop
inc
movs
jmp
les
int
out
ror
adc
sbb
sbb
inc
ins
iret
or
mov
je
test
hlt
mov
xor
mov
mov
xor
imul
lds
mov
adc
or
dec
jmp
xchg
or
fcmove
mov
repnz
dec
in
mov
aas
aaa
cmps
nop
lea
imul
mov
mov
adc
jmp
icebp
cmc
mov
inc
fwait
mov
pushf
jmp
clc
ret
sbb
fs
inc
cmps
add
aad
xchg
(bad)
and
inc
push
mov
jle
movs
jne
xchg
xor
aad
clc
or
jle
pop
fucomip
fld
xor
inc
stos
js
and
sub
stos
imul
out
jp
and
jg
dec
lea
ja
sub
sbb
and
push
fidiv
call
lahf
jp
and
pusha
sahf
pushf
fdivr
and
xor
ret
mul
cli
dec
mov
ficom
retf
xor
dec
(bad)
lds
adc
jae
pop
cmp
in
sub
xchg
lahf
push
mov
stos
or
xchg
mov
push
sbb
push
and
leave
jp
neg
loope
repnz
imul
pop
pop
imul
in
mov
add
outs
imul
mov
xor
cmps
ins
leave
(bad)
leave
scas
dec
add
stc
cmp
sub
jmp
xchg
dec
cmp
xchg
ja
dec
ja
adc
addr16
jns
push
jl
adc
jmp
mov
mov
jo
ret
test
mov
or
and
inc
rcl
enter
js
mov
scas
sub
push
call
jp
lods
out
jl
xchg
aam
xchg
cmp
and
setbe
mov
in
jle
call
xchg
xor
pop
imul
fcom
xchg
xor
push
jbe
jbe
in
inc
push
out
add
out
ja
sar
mov
rol
and
jmp
retf
imul
daa
enter
je
popf
mov
psubw
inc
sub
pushf
or
fidiv
dec
dec
repz
stc
retf
scas
cdq
mov
jg
movs
xor
retf
shl
rol
xlat
mov
pop
outs
mov
in
mov
cmp
aam
or
faddp
mov
lds
pop
cmc
inc
cdq
add
mov
ja
mov
and
sbb
mov
fdivr
movs
cmp
xor
xchg
mov
mov
ss
push
inc
addr16
mov
ret
sar
sbb
movs
lds
aaa
jb
in
je
addr16
mov
ins
mov
pop
jmp
dec
cmp
pop
and
test
mov
pop
or
lea
js
adc
ins
int
xchg
xchg
shl
int3
call
push
fwait
jo
mov
xchg
ins
in
stos
cmps
pop
je
and
jns
sub
mov
aad
retf
adc
sub
js
add
inc
and
stos
rcl
cmps
mov
scas
in
test
jmp
nop
cli
jg
in
adc
stc
jno
imul
sbb
popa
les
mov
pop
scas
mov
popa
shl
data16
sbb
in
cmp
adc
call
js
gs
outs
dec
daa
add
inc
pop
pop
xchg
xor
cmp
retf
xchg
or
les
repnz
add
inc
jge
jmp
(bad)
xlat
dec
loopne
cdq
cdq
pop
test
push
inc
into
or
ret
gs
call
mov
mov
int3
outs
out
xor
aas
push
or
(bad)
mov
jnp
dec
mov
push
inc
ins
and
inc
mov
test
hlt
test
dec
cld
dec
mov
inc
sahf
(bad)
jmp
mov
jae
sbb
push
pop
inc
xor
cmp
push
and
cmps
dec
jmp
mov
xchg
mov
add
repnz
mov
xchg
or
retf
xor
(bad)
or
or
xchg
inc
or
jmp
fs
jne
out
outs
out
push
rol
jns
(bad)
addr16
bound
dec
mov
jmp
xor
push
into
popf
adc
ins
sti
loope
das
push
and
and
addr16
xor
push
push
mov
sbb
adc
cmc
cmp
xchg
dec
jg
xchg
adc
ret
jno
clc
jg
(bad)
xchg
scas
shl
mov
jnp
movs
imul
sub
das
or
xlat
lea
rol
sbb
xchg
mov
loopne
jge
mov
aam
jmp
idiv
or
inc
daa
add
ror
fstp
cs
ror
add
and
and
or
jns
imul
(bad)
call
xchg
stc
(bad)
xchg
cmps
or
fwait
repnz
and
pop
xor
jl
pop
scas
cwde
xchg
sbb
fucom
adc
mov
arpl
int
inc
addr16
xor
or
adc
adc
call
mov
push
fdivp
movs
test
ins
inc
sub
nop
push
ds
aad
rcr
stos
in
jne
shl
mov
fsubr
mov
and
or
add
leave
push
stos
cmp
pop
rcr
push
stos
sbb
lds
je
jne
xchg
inc
test
sub
dec
loopne
push
cmp
enter
sub
xchg
scas
or
xor
loope
mov
and
test
call
out
jnp
repz
stos
stos
jg
mov
cmps
inc
sub
pop
int
dec
idiv
add
femms
push
gs
mov
mov
popa
or
out
jp
popa
and
sub
imul
jl
call
add
pop
sub
shr
mov
lods
jne
mov
shr
loop
sbb
ret
imul
imul
in
sub
or
arpl
inc
les
ficomp
outs
ficom
inc
in
cmps
xchg
jp
ret
cmp
sub
pop
retf
or
outs
and
xchg
stos
xchg
push
sbb
pop
aas
pop
pop
je
mov
arpl
dec
push
push
add
mov
fwait
call
aad
pop
shr
jg
int
fucomip
mov
xor
repnz
bound
push
rol
retf
cmps
scas
pop
sti
xchg
cli
jnp
mov
pop
mov
ds
mov
cmp
sbb
ss
sahf
sbb
sbb
sbb
imul
shl
dec
dec
or
adc
out
and
sahf
popa
ja
cmps
movs
pop
and
pop
rdmsr
js
jo
jns
mov
jnp
xchg
sahf
inc
jne
add
pushf
mov
mov
jo
dec
nop
jle
es
xchg
test
mov
xor
cmp
mov
stos
pusha
pop
stos
popa
push
fiadd
mov
pop
or
sub
adc
jmp
(bad)
cmp
and
pop
fstp
cdq
jp
push
in
test
sub
pushf
inc
pop
aam
int
pop
add
int
xchg
pushf
inc
xor
aaa
fdiv
pop
stos
mov
ins
jmp
pusha
add
std
pop
popa
imul
ins
mov
js
cmp
push
int
movs
sahf
mov
(bad)
rcl
mov
add
(bad)
sbb
mov
push
and
arpl
mov
repnz
pop
xor
(bad)
sbb
pop
aad
sbb
lock
dec
xor
add
cld
cdq
mov
push
std
push
pop
stos
mov
(bad)
ret
in
xchg
cmp
out
cmp
iret
std
sub
jns
jge
call
sbb
adc
stc
das
push
adc
outs
xchg
xor
in
sbb
inc
jmp
adc
and
push
push
imul
add
push
and
cmp
sbb
push
out
dec
addr16
or
dec
mov
jne
clc
cwde
mov
out
add
push
or
cmp
mov
mov
xor
(bad)
sti
jge
mov
sub
jp
mov
push
call
sbb
je
cs
jb
and
jo
and
fstp
inc
sbb
movs
mov
call
xchg
gs
into
aas
cli
xor
mov
(bad)
mov
push
adc
test
stc
xchg
add
or
cmp
int
jmp
ffreep
rol
mov
scas
inc
nop
and
std
jmp
sub
push
sbb
das
cdq
push
in
jo
fmul
ss
mov
loop
mov
ja
mov
or
or
fsubr
(bad)
int3
cld
stc
jmp
push
xchg
fsub
mov
in
rcr
jne
xchg
mov
(bad)
cmp
out
sbb
xchg
and
pop
aad
jo
sbb
(bad)
ror
mov
sar
dec
sti
ss
xor
daa
dec
ja
nop
cmp
stc
xor
enter
inc
movs
sub
addr16
(bad)
(bad)
cmc
cmps
(bad)
ins
popf
add
outs
inc
das
or
loopne
test
jge
in
push
xor
add
call
ins
mov
mov
rcr
mov
pop
les
(bad)
jge
adc
cmp
mov
jns
cvtpd2ps
dec
mov
xchg
lock
xchg
cmc
out
adc
mov
fwait
mov
mov
adc
cs
mov
cmc
fld
jg
pop
in
bound
lea
cmp
or
jge
adc
loope
mov
mov
or
retf
dec
lods
jge
lahf
xor
mov
pop
xchg
dec
cmp
ss
mov
repz
mov
push
xchg
fidiv
push
sbb
mov
neg
inc
xchg
lock
inc
and
ja
mov
enter
sbb
mov
lock
push
cmp
loope
sbb
sahf
cmp
mov
pop
pop
loope
or
loopne
call
je
sub
lods
lock
mov
cs
dec
add
or
mov
test
xor
in
dec
mov
jle
push
mov
stos
push
stos
lods
lahf
mov
cdq
jmp
rol
pop
scas
fwait
and
push
mov
in
sbb
shr
sbb
adc
shl
mov
mov
ins
je
daa
(bad)
(bad)
out
jl
dec
mov
push
pop
test
dec
push
and
lods
xchg
add
out
dec
movs
out
sbb
(bad)
jns
jo
sub
cwde
aam
mov
mov
jmp
jns
movs
dec
mov
adc
lods
lods
mov
dec
lahf
cli
sub
mov
xchg
call
(bad)
fisubr
mov
dec
sbb
out
sub
out
mov
sbb
das
jg
rcr
(bad)
in
fadd
call
fst
sti
mov
inc
ins
(bad)
inc
imul
lock
xchg
and
inc
and
int3
stos
mul
push
in
into
sub
loop
pop
mov
mov
mov
jno
pusha
out
xchg
not
pop
outs
jecxz
fisubr
repz
mov
pop
sub
sub
out
mov
xchg
jno
xchg
sub
adc
ret
inc
lods
cmps
xchg
ret
sbb
gs
shl
mov
cmps
push
fs
jns
adc
mov
mov
scas
or
icebp
sub
lock
mov
dec
aad
or
gs
in
ja
pop
stos
call
sbb
push
shl
pusha
mov
leave
jns
cmp
jmp
stc
sbb
and
sbb
push
or
fsubr
clc
call
dec
pop
imul
push
arpl
mov
dec
add
repnz
add
arpl
sti
inc
pop
or
test
into
fmul
jmp
je
lods
jecxz
rcl
jmp
test
mov
sahf
lods
test
retf
jg
add
outs
int
mov
pusha
ds
lods
or
push
add
mov
js
data16
scas
sub
js
loop
push
pop
mov
ret
dec
push
sahf
sub
aas
ss
sbb
push
and
and
xchg
adc
pop
in
lea
dec
out
adc
addr16
es
movs
loop
cmp
sahf
push
mov
mul
dec
pop
fiadd
xor
pop
test
mov
cmps
ins
out
or
(bad)
push
loopne
lahf
sbb
retf
push
sub
sub
int3
pop
into
call
push
dec
or
mov
dec
add
ffreep
and
std
add
jg
jne
stos
int3
ss
std
dec
xchg
sbb
int3
push
mov
xchg
jnp
into
jns
push
rol
retf
ret
mov
add
dec
popf
int3
xor
add
call
loop
sub
dec
fstp
jae
push
(bad)
dec
dec
jb
jge
inc
jge
(bad)
stc
and
and
rol
xchg
aad
stc
mov
push
rcr
jmp
movs
shl
and
xchg
(bad)
leave
sbb
xor
stos
loopne
push
xor
jle
pop
in
mov
sti
addr16
shl
dec
cli
add
pop
mov
shr
retf
mov
fwait
xchg
and
inc
jns
test
push
(bad)
ins
fsubr
repnz
cmp
or
sbb
pop
sahf
test
mov
mov
sbb
cmps
push
pop
(bad)
test
pusha
xor
push
mov
or
dec
lahf
mov
adc
xor
fwait
jl
mov
push
lea
lods
mov
add
aad
ins
xchg
or
jmp
or
aas
es
and
outs
mov
and
ja
mov
enter
cmp
mov
fmul
ret
inc
push
repnz
pop
aas
clc
lods
aaa
sub
mov
pop
dec
iret
ins
hlt
lds
and
mov
sbb
and
jg
jae
and
enter
int3
fwait
mov
repnz
pusha
stos
mov
jnp
shl
jno
(bad)
arpl
call
je
mov
inc
adc
daa
push
mov
ds
sub
sar
and
xor
retf
rcr
or
or
daa
pop
ins
lods
add
jl
mov
cmp
outs
ss
inc
dec
adc
scas
dec
add
dec
and
inc
dec
xchg
mov
rcl
dec
jno
or
addr16
push
fdivr
outs
pusha
cmp
enter
bound
adc
mov
loopne
push
sbb
inc
jb
call
sub
ins
pop
add
test
(bad)
out
inc
xor
les
jmp
jbe
pushf
gs
aas
or
cmp
add
jl
ins
sbb
sbb
cmp
mov
out
mov
xchg
inc
fild
sbb
sub
fimul
mov
(bad)
js
js
pop
fdiv
xor
mov
hlt
sub
cmc
cmc
ins
aad
push
mov
je
dec
or
xchg
mov
mov
lods
inc
xchg
nop
loopne
(bad)
xor
ins
xchg
loopne
aaa
xchg
leave
fcmovnb
push
pop
(bad)
adc
scas
sub
push
jecxz
and
lock
and
pop
outs
sbb
mov
and
pop
or
mov
imul
adc
in
stos
xchg
shl
ficom
je
or
push
pusha
cmp
xchg
mov
jno
xlat
jge
adc
lods
inc
sub
pusha
call
push
inc
mov
mov
adc
inc
adc
mov
jmp
lahf
cmp
add
into
mov
out
test
mov
jle
les
pop
dec
imul
dec
popf
sub
jg
mov
xor
push
and
jle
mov
ss
cld
mov
mov
adc
jle
mov
push
hlt
outs
sub
shl
retf
sti
push
sbb
inc
xor
repz
adc
inc
or
les
not
adc
lods
jb
cmp
mov
sbb
fnstenv
cmp
jo
movaps
dec
jno
cwde
fbld
stos
mov
js
mov
cmps
imul
mov
cmp
mov
jmp
adc
(bad)
xor
lods
gs
jnp
push
repnz
adc
push
clc
pop
loope
ja
mul
movs
(bad)
mov
jmp
adc
sar
dec
inc
iret
sub
jmp
xor
outs
out
inc
stc
ret
ja
cmp
enter
imul
(bad)
fstp
pop
cmp
jbe
cs
sbb
inc
push
repz
imul
xor
add
aam
mov
adc
lock
leave
jbe
xchg
dec
in
push
dec
je
dec
mov
xchg
cmp
add
shl
dec
(bad)
shr
cwde
test
pop
or
lock
mov
or
sbb
jnp
fwait
scas
inc
out
aad
rcr
jmp
dec
outs
pop
mov
pop
out
inc
lods
lods
leave
aas
sahf
rcr
xor
jbe
push
sar
out
ins
and
out
call
cmp
push
shr
jmp
fsub
inc
push
dec
call
xchg
repz
dec
inc
aam
cmp
or
cs
icebp
dec
jg
leave
ja
add
add
cmc
movs
into
clc
stos
jo
xchg
gs
xchg
adc
ss
in
mov
fstp
ins
xchg
mov
or
xor
fcom
popa
fsub
mov
adc
mov
or
sbb
mov
and
pop
mov
retf
mov
inc
mov
push
ins
mov
stos
mul
leave
shl
(bad)
js
push
xchg
adc
test
mov
cs
mov
push
jg
(bad)
xor
cdq
sar
repnz
sti
div
or
and
dec
in
or
in
sbb
mov
and
xor
js
loope
xchg
dec
mov
push
mov
xor
repnz
xchg
ror
lods
pop
jmp
ja
(bad)
push
push
or
mov
retf
fwait
int3
sub
psubsb
sbb
test
jae
(bad)
ja
cmp
imul
cld
sub
sti
cld
mov
ja
pop
dec
inc
inc
mov
test
mov
adc
in
pop
dec
out
sub
mov
jbe
pop
xchg
mov
sbb
fist
add
mov
mov
xchg
lahf
popf
fs
jmp
aam
pop
xlat
xor
call
cmc
dec
mov
out
pop
and
mov
jb
rep
dec
push
rcl
cmp
xchg
aam
mov
hlt
xchg
clc
pop
data16
mov
lds
cmps
(bad)
cmps
cmp
lods
inc
push
(bad)
retf
and
push
rcl
jmp
xchg
mov
dec
retf
in
fist
pop
int3
rcpps
dec
(bad)
xlat
test
int
and
jl
(bad)
loop
pop
out
jo
xchg
sub
and
lods
cmc
inc
mov
test
ins
push
cli
fild
mov
mov
sbb
dec
mov
mov
dec
sbb
push
stos
imul
inc
jecxz
or
add
cmp
shl
daa
mov
or
out
sbb
aam
fnstenv
mov
mov
ja
adc
stos
cdq
in
dec
stos
pushw
sub
ja
cld
jle
or
mov
out
mov
dec
mov
fldcw
pop
in
ins
and
pop
es
sbb
es
cmps
jbe
push
frstor
mov
repnz
test
icebp
pop
in
push
mov
addr16
pop
mov
inc
mov
cwde
pop
lods
clc
loopne
jge
dec
das
pop
outs
adc
mov
mov
mov
repnz
ins
mov
dec
fst
lods
test
dec
jp
enter
jecxz
pop
(bad)
jge
popf
test
xlat
xor
popf
addr16
xchg
xor
sti
mov
aam
jg
sub
aam
call
cmp
sbb
push
xor
jbe
jmp
mov
imul
mov
call
mov
aad
adc
jmp
mov
mov
or
(bad)
into
jne
daa
cmp
fwait
or
aad
push
add
jp
call
or
cmp
pop
cmp
repz
dec
jg
ds
add
dec
dec
and
data16
pop
adc
fsubr
dec
or
in
fwait
push
(bad)
sbb
movs
cmc
jmp
lock
mov
sbb
cmp
test
or
cmps
int
push
inc
aam
(bad)
jl
push
xor
pop
(bad)
test
push
stos
mov
hlt
rol
mul
popa
sti
imul
or
jnp
test
mov
mov
aam
ret
or
pop
push
push
add
mov
inc
cmp
and
out
les
mov
nop
fsub
ret
mov
pushf
xchg
xchg
iret
cmp
test
xchg
ror
push
enter
push
ss
sbb
retf
inc
push
push
push
pusha
cmp
call
scas
loop
retf
mov
data16
mov
push
loop
aam
mov
push
and
imul
sbb
push
dec
test
les
inc
cmc
xchg
pop
add
mov
dec
add
mov
push
sahf
adc
sub
xor
mov
xchg
es
imul
dec
movs
push
call
lds
retf
shr
mul
mov
pop
rcl
sbb
into
les
lds
jae
ss
mov
xor
xchg
outs
add
aaa
adc
pop
sbb
dec
(bad)
arpl
inc
aam
adc
nop
sub
mov
out
inc
cmp
mov
popa
popf
fs
pop
pop
fistp
fadd
adc
lock
mov
mov
push
mov
cmc
dec
(bad)
cmp
in
jg
xlat
sbb
ret
bound
or
push
ret
adc
(bad)
popf
bound
nop
in
fs
inc
mov
pop
and
dec
cld
push
jmp
retf
in
lgdtd
fbstp
ja
(bad)
mov
mov
inc
cdq
shl
xchg
retf
cld
add
xor
pop
push
dec
outs
ins
inc
xchg
loop
sub
inc
push
xchg
mov
pop
jo
cli
dec
pop
jb
xor
in
(bad)
les
inc
rol
fwait
adc
dec
lds
pop
out
(bad)
fild
jmp
mov
push
pop
jae
je
(bad)
fiadd
jne
(bad)
mov
adc
pop
pop
stc
sub
iret
test
loope
mov
in
pop
xchg
in
mov
shl
enter
iret
dec
inc
mov
dec
push
jno
pop
ret
mov
mov
mov
loopne
xchg
xor
xchg
xlat
xchg
jmp
ret
add
cdq
mov
and
sar
mov
ffreep
mov
push
repnz
lea
test
iret
lock
xchg
mov
dec
xchg
pop
add
daa
xchg
fld
mov
cmp
sub
jecxz
add
pop
add
mov
pop
inc
sub
sbb
rcr
call
add
cmp
mov
dec
popf
sub
pusha
pop
jg
int
sahf
into
jmp
(bad)
mov
jbe
or
std
es
stos
int3
sbb
aaa
bound
stc
stc
cwde
jne
ss
shr
imul
mov
sbb
aas
mov
rol
daa
rol
jmp
xchg
xor
jae
into
cmp
fistp
test
in
mov
cmp
add
and
xlat
xor
retf
jecxz
pop
jmp
add
bound
xchg
add
cli
push
or
out
cmp
imul
or
push
xchg
inc
mov
call
jmp
out
mov
adc
(bad)
and
(bad)
inc
xchg
and
mov
mov
cmp
les
rcr
jge
or
inc
sbb
inc
clc
nop
sbb
jmp
arpl
hlt
retf
inc
loopne
dec
outs
xchg
jne
enter
sbb
sub
adc
out
mov
int
out
pop
cld
out
ss
ins
(bad)
test
cmp
sub
shl
cdq
inc
xor
js
adc
mov
mov
es
push
xchg
fimul
jns
and
adc
mov
sahf
stos
ins
jmp
push
(bad)
jge
in
add
(bad)
cmp
lock
inc
dec
or
in
aas
push
jmp
cdq
push
es
xor
lock
sbb
les
or
test
mov
into
and
inc
xchg
imul
js
jbe
std
mov
leave
mov
nop
cmp
push
mov
mov
jp
push
push
popa
sbb
sbb
inc
leave
jge
retf
lods
out
xchg
(bad)
pop
mov
lods
xor
mov
add
jnp
inc
nop
fadd
stos
xchg
pop
mov
xor
inc
or
sahf
sub
xchg
xchg
test
inc
jno
add
adc
jl
sub
movs
popf
repz
aaa
lock
std
push
ja
movs
sub
call
xor
loope
add
mov
jecxz
inc
ss
aam
pop
mov
scas
ret
xlat
imul
fisttp
jl
and
enter
push
pop
js
call
jmp
(bad)
inc
daa
sbb
ss
jg
in
jo
mov
inc
fdivr
fwait
jae
aam
jle
in
ja
add
jnp
mov
mov
jg
dec
js
outs
sar
jo
jecxz
or
dec
das
push
int3
pop
sub
ret
push
aad
cwde
adc
mov
js
(bad)
cmps
xchg
jb
test
fldcw
not
sbb
lods
gs
mov
mov
ret
out
jle
mov
rcr
xchg
sub
mov
fistp
scas
(bad)
sti
das
mov
or
cmp
fsub
xchg
stc
(bad)
sti
sub
sub
int3
outs
pop
add
(bad)
ss
mov
imul
mov
in
in
jo
fldcw
test
jns
cmps
pop
cmp
pop
push
mov
aam
xor
adc
cmp
adc
shl
movs
in
shl
cmp
cmp
aas
pop
pop
mov
(bad)
mov
or
add
std
or
xchg
jb
jns
jmp
push
mov
xor
out
out
jno
mov
mov
scas
imul
movs
or
mov
in
xchg
xchg
cmps
add
add
sahf
push
inc
fldcw
dec
fisubr
div
icebp
push
shl
cli
pop
std
lods
gs
ss
mov
mov
arpl
dec
cmps
repnz
and
fadd
sub
xor
inc
pop
mov
pop
mov
cmc
das
call
std
mov
mov
inc
inc
pop
mov
mov
cdq
mov
ss
push
xchg
jp
or
in
mov
mov
mov
ss
mov
mov
cli
inc
cli
add
inc
sub
rcr
mov
push
mov
into
cmps
les
mov
sub
pop
mov
fwait
adc
push
dec
cmp
jge
mov
ss
fistp
aad
mov
dec
aad
cmp
adc
out
mov
sub
(bad)
mov
cmps
pop
mov
mov
add
fcmovb
inc
push
sbb
test
push
sub
pop
sbb
mov
fwait
jmp
inc
dec
xchg
ret
adc
pop
inc
jae
int3
mov
sub
jae
ss
cli
(bad)
ss
jmp
sbb
jp
(bad)
std
adc
(bad)
icebp
jns
jnp
aam
movs
test
test
inc
xor
adc
and
inc
jne
clc
cmp
push
cs
lods
out
repnz
retf
addr16
mov
add
pop
dec
dec
in
out
jecxz
rol
out
mov
mov
cmp
sub
jbe
repnz
xor
xchg
in
sti
or
ins
fneni(8087
ja
xchg
lea
iret
ret
ret
sub
or
mov
in
test
mov
and
jno
jle
mov
or
lock
cmp
out
lahf
(bad)
push
push
jl
iret
rdpmc
jnp
lahf
bnd
dec
push
mov
mov
adc
and
ret
stc
lea
repnz
fistp
aam
mov
xor
icebp
stos
out
mov
les
mov
sub
into
lock
or
xor
sbb
(bad)
jae
enter
jno
(bad)
adc
dec
lock
or
push
dec
in
retf
mov
push
enter
ja
adc
ins
jbe
lods
test
hlt
adc
in
mov
leave
xor
adc
stc
dec
imul
fstp
je
inc
in
int3
leave
sub
adc
mov
sub
adc
ret
scas
and
cwde
cmps
sub
and
cmp
cs
add
mov
les
mov
shl
imul
dec
js
cdq
cli
jbe
add
sub
sbb
push
outs
cmp
jnp
add
hlt
xor
ret
shl
call
cli
cmp
cmp
mov
add
fwait
sbb
cmp
gs
adc
push
icebp
mov
mov
das
lods
cwde
into
(bad)
pop
dec
add
(bad)
jge
sub
les
ficomp
popa
cdq
cmp
dec
std
mov
lods
mov
adc
sub
xchg
imul
nop
ds
in
vpsubusb
dec
or
xchg
fiadd
neg
movs
sbb
adc
sar
jmp
mov
mov
push
cmp
retf
pop
inc
mov
cmp
pop
cmp
jno
dec
aas
lea
gs
mov
pop
dec
pop
stos
ss
int
dec
iret
pop
inc
jbe
mov
mov
sbb
push
mov
retf
mov
and
adc
push
int
push
adc
test
push
sbb
(bad)
jnp
fdivr
push
shr
jmp
push
iret
inc
xchg
mov
daa
int3
sti
lods
adc
xlat
out
push
mov
(bad)
add
repz
movs
fnstsw
mov
pop
popa
jl
xor
loope
in
xor
popa
out
imul
js
mov
push
push
les
inc
push
or
out
xor
cmp
push
mov
je
cwde
aam
pop
dec
sub
push
cld
mov
pop
cmp
xchg
mov
xchg
ins
test
sbb
leave
retf
mov
les
retf
ds
in
(bad)
ror
cwde
pushf
inc
fmulp
dec
js
and
jnp
cmp
(bad)
sar
push
cmp
jmp
ficom
cmp
sub
loopne
and
js
ja
movs
xor
cmps
aaa
push
push
or
ins
jmp
movs
sbb
add
dec
jecxz
jnp
into
push
or
cmc
call
addr16
hlt
and
cwde
movs
and
mov
sbb
loopne
arpl
out
nop
xchg
sbb
cmps
pop
ja
adc
lahf
test
mov
mov
push
mov
push
arpl
ud2
xchg
pop
(bad)
sub
ins
(bad)
dec
retf
retf
fs
loopne
gs
cs
cmps
cmp
pop
pop
ins
scas
outs
xor
in
add
adc
xchg
cmp
pop
mov
into
scas
mov
inc
pushf
jp
(bad)
popf
add
stc
dec
pushf
ror
aam
push
inc
mov
mov
fiadd
popa
call
test
lods
retf
ret
push
lea
daa
pop
test
in
clc
add
jae
inc
pop
lock
ds
pop
xor
fwait
pop
xchg
call
in
sub
sub
ret
jbe
or
mov
je
ja
js
test
jecxz
xchg
cli
out
das
jp
(bad)
cmps
cmp
lock
xchg
int3
bound
imul
loope
test
or
shr
fwait
xchg
or
mov
xchg
sbb
sub
call
adc
fld
loopne
pusha
and
cli
inc
xchg
aas
cmp
xchg
mov
into
out
std
(bad)
pop
add
fidivr
mov
and
mov
enter
outs
cmps
popf
lock
xlat
adc
pop
stos
adc
sub
clc
pop
push
mov
mov
repz
mov
scas
pushf
xor
and
cld
in
jmp
mov
cmp
imul
lahf
dec
hlt
mov
jns
mov
cld
mov
cmps
in
sbb
iret
jmp
xor
mov
push
(bad)
(bad)
div
icebp
pop
add
mul
mov
movs
mul
gs
jno
mov
xlat
test
jnp
aam
add
pop
ret
and
xor
ds
sub
out
pshufw
ror
mov
in
add
fld
mov
cmps
pushf
sbb
mov
(bad)
nop
into
sahf
(bad)
xor
mov
pop
inc
pop
cmp
stc
jecxz
adc
jg
popf
retf
lods
inc
fdivr
add
jp
push
mov
ins
in
jne
cs
or
add
rcl
ffree
cmps
pop
mov
inc
jecxz
das
in
scas
mov
sar
sub
test
imul
adc
add
xchg
sub
pusha
fwait
enter
lahf
add
les
clc
mov
push
xor
mov
add
rcl
add
test
fmul
sti
rol
je
aad
mov
mov
cmp
cdq
cmp
call
cmc
pop
movs
mov
es
cwde
or
and
fsub
sbb
dec
loopne
push
pop
hlt
cmc
mov
dec
add
jle
add
cwde
jo
ret
lock
inc
dec
lods
adc
popa
sbb
add
sub
movs
ss
jo
jns
cmp
loopne
adc
sub
inc
add
lock
xor
inc
aas
inc
add
mov
fs
ins
ja
or
add
xchg
sbb
pop
sti
sti
xchg
jge
inc
mov
inc
sbb
out
sbb
fist
xlat
xchg
cmp
mov
shr
jbe
jecxz
adc
sub
cdq
arpl
lods
mov
inc
lahf
xor
inc
shl
outs
inc
xor
push
jmp
cmps
cmp
sub
outs
not
mov
outs
lea
mov
cmp
xor
inc
jne
adc
out
sbb
ds
(bad)
pop
jg
stos
stc
rol
lods
jg
outs
sub
and
cmp
adc
stc
es
addr16
dec
inc
or
fistp
addr16
cld
aas
xor
and
ret
push
fnsave
sahf
in
test
xchg
mov
sub
(bad)
adc
fistp
and
leave
mov
ja
push
jae
push
jecxz
cmp
mov
sbb
pop
and
fucomi
mov
lds
jmp
push
pop
add
cmp
fstp
popa
adc
das
pop
jmp
rol
jno
not
xcrypt-ctr
cmps
pop
xor
sub
(bad)
sub
mov
scas
or
jecxz
ins
mov
dec
push
jo
push
test
mov
inc
ins
test
pop
dec
sbb
(bad)
jp
inc
cmp
inc
retf
add
outs
rcr
cdq
push
(bad)
scas
js
out
cmp
mov
out
out
iret
cmp
add
mov
movs
and
call
scas
ror
(bad)
sub
les
out
retf
(bad)
pop
cli
rcl
add
cmp
and
mov
loop
pop
fmul
inc
inc
jmp
int
mov
and
(bad)
mov
(bad)
(bad)
xchg
jnp
inc
icebp
adc
in
jge
cmp
xchg
in
cmp
push
jmp
adc
and
dec
push
jae
pop
cdq
xchg
mov
and
nop
add
movs
into
iret
lock
les
dec
adc
out
jg
sub
mov
cmp
repnz
fldenv
push
xor
fwait
inc
mov
pop
fsubr
sub
xor
lahf
pop
shl
xchg
adc
loopne
xor
repnz
neg
pop
and
cs
pop
pop
push
adc
js
fbld
mov
out
movs
dec
popa
ret
adc
mov
adc
out
sbb
push
jnp
fisub
xchg
push
push
mov
cmp
pop
(bad)
mov
addr16
cmp
arpl
push
inc
ret
mov
iret
push
pop
jo
sbb
and
jb
inc
cwde
or
pop
add
pop
and
push
xor
loope
jle
mov
sbb
into
mov
int3
neg
dec
scas
rcl
xor
sub
pusha
sbb
scas
cmps
popf
(bad)
jp
push
int
xor
jae
int
stos
mov
(bad)
ins
pop
in
jnp
popa
ret
(bad)
push
rcr
fs
call
and
mov
add
xlat
adc
ror
lock
adc
pop
cwde
nop
sub
lahf
mov
push
pop
test
addr16
and
es
popf
js
pop
(bad)
gs
sti
jnp
repnz
aad
jl
jge
jg
add
add
pop
and
aad
retf
mul
sub
lods
sbb
lea
fld
add
int
mov
xchg
and
and
add
mov
retf
dec
xchg
leave
and
adc
mov
mov
stc
jno
sti
scas
std
out
cld
(bad)
xlat
cdq
or
inc
add
sub
cmps
or
stc
mov
lea
push
xor
stos
add
scas
mov
or
and
(bad)
lock
into
enter
arpl
adc
mov
nop
sub
out
fldenv
fdivr
lea
test
sub
adc
mov
pushf
push
mov
sbb
loop
mov
adc
and
ja
jp
cwde
xor
mov
xor
fdivr
dec
inc
or
push
sahf
rol
rcr
lahf
ins
int
rcl
and
leave
cmps
clc
mov
xchg
mov
aad
inc
ins
mov
jmp
adc
scas
daa
in
fcom
cmp
jl
pop
push
adc
mov
lods
aaa
or
pusha
into
jmp
cdq
cmps
add
sbb
leave
cld
js
mov
idiv
jns
adc
ins
pop
cmp
cwde
cdq
or
shl
retf
or
mov
call
mov
repnz
push
jg
pop
cmc
add
fsubrp
bound
sbb
in
rcr
hlt
cmp
fs
inc
dec
xchg
xchg
push
data16
mov
int
mov
icebp
jge
xchg
pop
stos
cmc
sbb
mov
dec
fild
and
pop
inc
pop
shl
mov
or
push
xor
inc
les
mov
or
push
lods
jo
add
jne
sub
xor
ds
retf
and
or
outs
loope
gs
cmp
out
rol
dec
ja
pop
push
rol
arpl
repnz
aam
adc
retf
fs
xchg
cli
mov
adc
test
cdq
(bad)
in
test
out
lods
mov
adc
or
cmp
push
es
(bad)
movs
fmul
sbb
jb
hlt
out
dec
idiv
sti
mov
mov
sub
xchg
fild
pop
inc
ss
add
mov
stos
and
fild
js
or
push
std
add
dec
pop
popa
xchg
stc
lods
test
mov
inc
scas
(bad)
cmp
mov
js
xchg
les
lods
adc
pop
push
aad
jnp
xor
sti
inc
mov
xchg
ins
(bad)
movs
sub
call
mov
cmp
inc
and
sbb
push
xchg
dec
leave
xor
stos
les
jnp
lods
mov
mov
sbb
(bad)
dec
icebp
sub
jno
rdtsc
imul
test
int3
jns
fcom
hlt
(bad)
test
pop
xchg
xor
aad
pop
lds
(bad)
adc
fidiv
inc
xchg
mov
lods
cmp
or
jl
sub
jnp
call
aad
(bad)
inc
jmp
cs
pop
jecxz
pop
scas
aas
xchg
mov
jbe
ss
pop
ror
mul
ins
inc
dec
mov
inc
aad
mov
sub
jo
(bad)
xor
fldenv
repz
loopne
jle
lea
(bad)
out
imul
or
cmp
push
ret
jl
adc
dec
dec
into
dec
and
stos
lahf
mov
sub
pop
sbb
fst
cmp
imul
sbb
scas
fmul
mov
or
cmps
lods
scas
xchg
fidivr
dec
xchg
rol
loop
mov
cmps
jnp
inc
pop
and
adc
jl
nop
inc
sub
mov
aad
call
loope
movs
cmc
sahf
inc
into
shl
jg
call
cli
cmp
push
pop
shl
addr16
sbb
pusha
xor
or
mov
popa
xchg
jns
clc
fimul
lods
cmp
inc
mov
fdiv
jns
pop
cmps
dec
pop
out
or
push
or
xor
add
pop
jle
retf
ins
mov
lahf
(bad)
jns
jl
hlt
enter
push
in
mov
ins
jne
retf
fld
adc
pop
cmps
dec
retf
mov
adc
jmp
fdiv
xchg
mov
popa
div
retf
iret
imul
pop
mov
mov
pop
sub
(bad)
xor
mov
xor
mov
stos
mov
jnp
rcl
jecxz
and
call
pop
icebp
in
ret
hlt
jmp
outs
aam
int3
retf
or
sub
mov
mov
xor
ins
mov
mov
cli
frstor
movs
push
aam
jnp
cdq
mov
cmps
inc
xor
inc
je
mov
mov
rcr
jmp
sbb
xor
mov
adc
and
daa
(bad)
mov
sbb
inc
cli
outs
mov
cmps
xchg
jb
pop
and
js
je
fadd
adc
les
cs
xlat
call
sbb
xchg
out
call
pop
test
xchg
jg
xor
mov
retf
popf
loope
pushf
shl
(bad)
repz
mov
test
lock
test
movs
jb
ja
pop
pusha
aam
call
pop
jg
pop
repz
dec
lods
sub
js
daa
stos
out
iret
xor
xchg
push
iret
dec
mov
fstp
and
in
mov
arpl
movs
adc
repz
xor
cmp
sbb
ror
pop
out
es
jb
cmp
(bad)
fs
sbb
adc
pop
adc
cmp
and
scas
or
cmp
sub
ret
lods
dec
jg
pop
push
popa
inc
aam
jecxz
cmp
add
cmp
sbb
(bad)
not
add
dec
xchg
xchg
or
xchg
xor
sub
hlt
jmp
cmc
inc
xchg
push
mov
es
rol
cpuid
stc
in
adc
dec
fs
packsswb
push
and
inc
enter
mov
out
mov
jl
outs
mov
mov
cld
mov
loope
xor
dec
cmps
stos
imul
fdiv
mov
dec
and
mov
push
sti
pop
and
mov
lds
js
js
push
mov
or
les
imul
xchg
sti
xchg
sub
mov
mov
shl
mov
dec
sbb
xchg
jb
clc
lahf
inc
sbb
mov
shl
cmp
test
(bad)
mov
rcr
push
pop
and
sbb
add
cmp
mov
enter
or
adc
mov
stc
mov
movs
movs
sbb
xor
lods
push
adc
jmp
mov
sar
pop
rcl
inc
mov
and
fld
push
iret
movs
jno
popa
cwde
cs
cmc
jno
(bad)
addr16
sub
sub
adc
push
or
adc
pop
and
jne
lahf
and
cmp
push
xchg
repz
sbb
mov
fstp
xchg
rol
pop
je
and
mov
(bad)
dec
mov
fadd
push
mov
or
call
pop
pop
add
vshufps
jge
fdiv
fld
add
out
dec
add
nop
leave
pop
mov
nop
mov
in
mov
sub
inc
mov
xchg
movs
outs
cld
cli
sub
or
adc
jbe
pop
xor
test
cmc
mov
mov
jp
lds
inc
xchg
or
pop
repz
sub
loopne
cli
mov
fsubr
pop
nop
ds
inc
jge
mov
jp
push
push
push
sahf
pop
lds
xor
adc
aas
jnp
repnz
jns
out
xchg
ins
test
call
or
xchg
pop
sub
sub
sbb
into
call
hlt
loop
jmp
mov
and
dec
cmp
or
sub
xor
jecxz
xor
mov
dec
pop
adc
ret
ret
(bad)
jbe
ds
mov
or
and
mov
sub
inc
jb
adc
retf
es
aad
cs
xor
inc
(bad)
out
cmps
add
ret
cmp
arpl
call
dec
mov
jmp
mov
ins
xor
repz
xchg
and
aad
push
mov
not
nop
xchg
lock
jns
mov
sub
xor
lods
jl
ret
jl
and
scas
mov
push
or
fidivr
push
fmul
add
dec
in
mov
push
lahf
ss
iret
xchg
imul
sar
add
cmp
loope
pushf
test
dec
test
test
or
jbe
adc
movs
pop
bound
sub
xchg
mov
loop
idiv
xlat
gs
adc
int
xor
and
sub
inc
or
push
ss
adc
mov
movs
sub
jle
cmp
jne
shl
pop
push
and
daa
jl
movs
dec
rcr
sub
mov
scas
cmps
push
mov
cmp
dec
ror
out
clc
xlat
out
cli
arpl
pop
js
inc
ins
ins
add
push
icebp
sub
imul
push
jb
retf
scas
test
push
push
push
jbe
popa
pop
mov
fisub
or
mov
fsub
jg
mov
scas
cmc
xchg
pushf
adc
mov
out
jnp
sbb
shl
ds
idiv
aad
shr
dec
(bad)
outs
test
push
mov
lahf
inc
sti
inc
cli
loope
jmp
mov
mov
adc
pushf
jecxz
and
cmp
pushf
add
aam
mov
xchg
gs
xor
sti
dec
or
xchg
test
sub
or
and
fcomp
stos
mov
xor
(bad)
imul
xchg
fst
or
scas
enter
mov
iret
xchg
and
push
mov
fadd
xchg
jae
nop
or
arpl
daa
(bad)
data16
or
int
ficom
pop
fadd
pop
dec
stos
iret
push
xchg
ds
(bad)
xor
sbb
mov
out
sub
mov
lock
ss
icebp
inc
adc
pop
mov
push
gs
jb
lods
iret
cwde
lahf
into
mov
cmovb
mov
pop
mov
and
ss
push
shl
std
ins
aaa
inc
pushf
sahf
lock
jp
shl
mov
enter
add
jnp
mov
dec
push
cmc
scas
add
cli
dec
adc
push
gs
fmul
not
outs
pop
aam
mov
cmp
rol
inc
xor
and
int3
sti
mov
add
aas
pusha
add
out
push
xchg
inc
aam
jnp
pusha
xor
mov
sub
and
sbb
cli
inc
add
mov
fcmovb
popa
cmp
cmp
repz
cmp
sub
xor
pop
enter
jnp
dec
test
mov
arpl
(bad)
fdivr
shl
call
push
cmp
xchg
or
jno
pop
mov
pop
xchg
pusha
add
jnp
lods
mov
bound
adc
(bad)
dec
aad
dec
ret
sbb
test
sub
push
(bad)
sbb
daa
fidivr
ss
imul
bnd
out
xchg
pop
mov
test
arpl
mov
outs
mov
pop
outs
jbe
xchg
xor
fcomp
sbb
cwde
push
jmp
cwde
outs
data16
push
fdiv
retf
gs
inc
pause
xchg
neg
sbb
inc
or
and
mov
sbb
xor
imul
push
enter
sub
push
xchg
xchg
sbb
lea
pop
sub
or
and
xchg
imul
outs
add
call
std
mov
add
psubd
or
add
mov
pop
ss
cmp
mov
and
stos
scas
jne
lds
int
not
shl
seta
icebp
pop
jnp
mov
lahf
jmp
bound
scas
and
outs
test
aam
cmps
lock
jl
dec
fisub
call
cli
xchg
adc
sbb
out
data16
pop
push
test
leave
mov
je
movs
pop
inc
push
cmp
hlt
dec
dec
addr16
aaa
das
jmp
push
daa
scas
xor
aam
xlat
retf
sahf
retf
xchg
xor
mov
ss
or
mov
dec
pusha
dec
pop
xor
push
mov
(bad)
dec
scas
loope
and
pop
xor
cdq
inc
xor
push
aas
dec
push
test
fiadd
jne
inc
mov
popf
leave
push
ficom
lods
retf
inc
cmp
fst
aas
jae
jl
cmps
into
jg
or
jmp
hlt
xlat
or
fwait
mov
pusha
out
stos
jb
mov
pusha
add
fsub
lods
test
add
and
or
sbb
mov
pop
test
fwait
dec
jge
int3
jnp
jnp
(bad)
cdq
sbb
hlt
pop
or
cs
adc
leave
mov
adc
xchg
add
inc
dec
lahf
out
sahf
movs
pop
popa
ins
sbb
cmp
imul
mov
scas
cmp
xchg
rcr
mov
fst
jo
ret
inc
jg
aam
ja
movs
mov
fadd
ficomp
arpl
fdiv
iret
stos
ins
inc
fisttp
cmp
mov
push
in
and
pop
cld
push
jbe
jne
out
gs
clc
and
jnp
gs
fstp
ds
push
adc
pop
retf
in
jp
mov
pop
out
shr
in
fmul
in
sbb
xor
adc
ss
or
mov
inc
dec
xchg
aad
cmps
lds
sbb
push
pop
or
mov
ins
shl
scas
xchg
adc
iret
leave
lock
aam
je
sub
xlat
imul
sub
cs
xor
lock
daa
(bad)
inc
data16
push
out
gs
jle
les
xchg
popf
inc
movs
jb
pop
aam
lea
and
xlat
push
xor
stc
jl
mov
stc
in
bound
out
loop
into
jbe
mov
rol
mov
xor
xchg
enter
icebp
sbb
retf
mov
retf
sar
popf
jae
xchg
int3
mov
mov
lock
fbstp
aam
js
fld
movs
xchg
sub
popa
dec
pop
push
mov
pop
cld
daa
arpl
pop
call
dec
jb
test
lds
inc
pop
jbe
fisubr
cdq
arpl
or
inc
lahf
ss
jo
stos
jg
jmp
int3
(bad)
and
cwde
out
sub
xchg
cmp
aam
pusha
(bad)
jb
jmp
adc
repnz
xor
jmp
inc
jle
add
retf
pop
lahf
mov
clc
xor
pushf
cmp
jge
shr
xchg
add
push
loopne
jl
push
mov
and
cmp
jb
push
bnd
je
mov
fiadd
rcr
scas
push
push
push
mov
pop
lods
out
or
(bad)
pop
pop
mov
add
sbb
ds
sti
pop
jge
xor
outs
sti
sar
mov
out
test
sbb
jns
jg
in
sbb
call
push
and
pop
(bad)
dec
pop
stc
adc
sbb
or
outs
fucomip
or
popa
pusha
clc
idiv
mov
jg
or
addr16
push
mov
jecxz
loopne
icebp
xor
push
imul
add
and
pop
mov
dec
and
adc
xor
inc
rcr
inc
push
test
out
mov
cmp
out
cmp
test
inc
mov
xor
int3
pushf
fcom
rcl
outs
or
jle
daa
pop
mov
mov
int
ds
shl
int3
sub
push
cmp
leave
sar
gs
mov
int3
call
mov
or
out
loop
adc
jecxz
sub
jmp
add
bound
xor
pop
inc
movs
cs
mov
aas
fisttp
dec
adc
mov
lods
xchg
cdq
daa
je
test
lods
xor
retf
retf
mov
push
push
test
lods
in
mov
repz
xor
retf
cmps
jp
or
mov
push
data16
add
test
mov
sahf
mov
xlat
add
ret
in
jne
addr16
mov
lahf
iret
push
adc
rcl
mov
or
mov
mov
sub
push
out
aaa
mov
mov
xor
retf
outs
loope
loop
bound
mov
xor
aam
lods
sub
xor
in
jecxz
sub
push
inc
jmp
or
xchg
mov
lods
pop
jmp
stos
cmp
mov
rcl
dec
out
pop
hlt
(bad)
sbb
rcr
in
addr16
mov
add
dec
mov
neg
cmp
in
push
in
mov
dec
adc
xchg
jle
adc
(bad)
jp
inc
and
xchg
dec
dec
stos
stos
or
imul
aaa
in
pop
jo
push
call
call
jae
aam
pop
push
int
retf
fsubr
adc
test
sbb
out
xor
xor
jg
(bad)
jl
mov
test
mov
inc
fcom
jnp
aaa
push
cmps
jp
cmps
add
xchg
ss
jecxz
sbb
sbb
sbb
push
pop
retf
les
cmp
jo
hlt
sub
mov
jmp
dec
mov
movs
test
ins
sub
ret
js
rcl
push
retf
cmp
push
imul
mov
pop
adc
jp
sbb
push
aaa
push
lock
iret
je
lahf
sbb
add
mov
aad
push
lahf
jo
fidiv
arpl
add
jbe
movs
pop
mov
adc
stc
ffreep
sub
std
jnp
jl
into
mov
test
lea
xlat
mov
jno
hlt
call
aam
enter
aas
retf
dec
mov
icebp
jb
sub
jb
pushf
aas
xor
add
xor
rcr
xchg
stos
daa
fimul
stc
loope
pop
enter
sbb
nop
xchg
push
mov
mov
mov
mov
retf
pop
xchg
(bad)
fwait
jns
pushf
dec
xchg
lea
mov
xor
imul
push
les
jne
dec
mov
jmp
inc
es
sub
lock
aaa
out
sub
imul
test
repnz
add
add
iret
lahf
in
push
fstp
add
pop
addr16
dec
jg
xor
mov
sahf
ins
repnz
imul
or
mov
ins
es
imul
and
pop
jp
xchg
lods
inc
ja
std
pop
sub
clc
bsf
leave
cmp
mov
xor
rcr
and
arpl
mov
cmp
jle
mov
sub
mov
or
(bad)
or
daa
or
cmps
xlat
ins
in
bound
xchg
ja
jb
(bad)
pop
dec
dec
push
shr
call
mov
or
out
daa
cmc
push
inc
pop
jg
(bad)
enter
pop
pusha
mov
or
dec
xchg
push
gs
dec
jnp
push
push
and
lahf
mov
inc
add
mov
movs
xchg
cmc
aad
dec
popf
pop
scas
jb
push
rcl
fmul
sti
and
fmul
sub
sub
int3
into
mov
adc
data16
xor
fbstp
sub
lods
out
retf
add
out
lods
xchg
push
mov
mov
push
test
jl
cmp
add
jb
sbb
out
lods
mov
mov
xor
gs
iret
pop
push
push
sub
mov
inc
loop
xchg
sbb
inc
or
push
jns
arpl
mov
(bad)
mul
(bad)
dec
inc
das
jmp
out
sub
mov
das
fs
clc
stos
loop
and
xchg
dec
out
add
jns
xor
inc
(bad)
add
jmp
or
dec
mov
sahf
stos
sub
test
movaps
mov
inc
mov
pop
cwde
xor
jmp
mov
cmps
jmp
mov
or
mov
and
scas
jl
push
xlat
pop
or
inc
jb
push
sub
and
mov
es
arpl
mov
das
xor
sbb
retf
in
adc
ins
(bad)
repnz
fild
cmp
div
xchg
mov
cmps
xor
into
push
test
fld
add
test
movs
repz
je
iret
inc
pop
push
add
mov
rcr
jge
pop
cmps
jmp
sbb
adc
retf
outs
mov
mov
loop
ds
leave
sbb
(bad)
aas
ins
dec
xor
cmp
inc
into
jge
jb
xor
arpl
push
xchg
int3
mov
xor
sub
mov
mov
js
es
fisttp
ins
movs
fsubr
dec
fst
fxch
sbb
dec
nop
call
repz
out
lods
jns
call
popf
pop
cs
cmp
xchg
les
adc
add
sbb
daa
lds
inc
add
mov
daa
cmp
xchg
add
mov
jno
xchg
sahf
jmp
stos
xchg
add
mov
test
jo
jo
fiadd
das
test
and
out
fcmovbe
lods
and
cmc
fild
xor
pusha
ins
cmp
sbb
addr16
cmps
jae
cld
bound
(bad)
arpl
rcl
call
fwait
int3
std
test
clc
pop
jo
sub
dec
in
jb
loopne
mov
(bad)
stc
ja
ror
xchg
adc
hlt
jb
jns
sbb
(bad)
jbe
nop
push
mov
daa
fimul
mov
mov
mov
nop
push
cmp
test
dec
sahf
out
loope
mov
adc
ret
popa
mov
fisttp
fmul
xchg
jg
lahf
out
adc
cmps
icebp
test
retf
sti
(bad)
cdq
test
adc
sub
or
mul
mov
mov
mov
inc
retf
fwait
mov
xchg
lock
add
or
ds
in
aas
fist
imul
xor
adc
mov
mov
ins
scas
or
push
mov
dec
xchg
or
mov
add
cmp
addr16
mov
call
cmps
dec
rol
call
or
cdq
fs
ror
inc
mov
lods
push
sbb
fidiv
or
cmps
pushf
lods
ds
retf
mov
repnz
test
ins
mov
and
shl
jns
xor
mov
daa
aad
sbb
push
mov
js
mov
clc
dec
les
fild
jge
stos
movs
push
sbb
fnstsw
sbb
std
call
sub
shl
movs
jmp
(bad)
mov
mov
jmp
mov
add
icebp
cwde
sti
call
xchg
xchg
push
pop
les
outs
lods
jl
pop
push
outs
xor
mov
push
(bad)
push
mov
jne
or
aaa
adc
outs
dec
xchg
jae
and
out
stos
xor
iret
hlt
repnz
ins
(bad)
lock
cmp
test
jmp
sub
pop
pop
iret
jecxz
mov
js
das
mov
sbb
test
jb
pop
and
sbb
imul
xchg
out
mov
sub
imul
shl
mov
outs
imul
sbb
mov
sbb
(bad)
jb
jo
sbb
push
mov
push
jmp
(bad)
push
jns
mov
sbb
mov
mov
sbb
xchg
sbb
aad
jae
repnz
shr
jp
inc
outs
sbb
push
mov
cmp
and
adc
adc
mov
gs
adc
add
sbb
add
dec
test
movs
sub
and
rcl
or
pusha
retf
mov
(bad)
fild
clc
in
ret
jge
shl
xor
gs
out
pop
dec
push
mov
adc
jae
pop
mov
mov
add
cmp
call
or
and
sbb
push
out
mov
fisubr
sub
sub
adc
adc
cmc
sti
and
not
loop
dec
sub
add
stos
adc
fcomip
sbb
mov
mov
push
test
push
retf
rol
(bad)
cld
jmp
ror
push
mov
mov
xchg
cmps
bnd
or
or
sub
mov
push
xchg
fild
movs
sbb
mov
std
jbe
xchg
(bad)
adc
dec
(bad)
(bad)
push
cmp
add
mov
add
cmp
mov
jb
in
fadd
push
mov
lock
adc
xlat
inc
push
xlat
push
push
gs
imul
ret
in
push
fs
add
retf
mov
mov
or
out
xor
fnstsw
out
sar
mov
adc
or
cs
rol
push
retf
fcmovu
and
jnp
cdq
lods
dec
inc
fadd
in
mov
loope
fcom
movs
xor
pop
push
mov
mov
and
mov
push
jbe
sbb
mov
fs
(bad)
in
mov
movs
sbb
popa
inc
fnsave
cmp
jno
inc
mov
mul
call
mov
ror
ins
out
fild
dec
xchg
outs
xor
mov
rcr
dec
pop
out
push
pop
lock
sub
or
fs
retf
mov
and
daa
add
in
ret
call
sbb
fdiv
mov
cmps
mov
popa
push
in
shl
xchg
pop
dec
mov
lods
stos
pop
pop
xor
test
adc
mov
xor
es
mov
dec
movs
outs
fist
fsubr
nop
lds
sbb
aam
pop
sub
inc
and
ds
mov
or
lea
jg
push
scas
out
ja
mov
sub
lea
push
jbe
mov
jne
(bad)
loopne
xchg
xor
cmc
(bad)
mov
outs
mov
lods
cmp
and
push
mov
push
sahf
movs
mov
mov
(bad)
ins
jmp
movs
sahf
lea
jecxz
fbstp
test
cdq
call
sbb
out
in
in
(bad)
cli
cmp
popf
jp
loope
inc
pop
shl
out
cld
mov
lds
mov
out
dec
stc
fs
hlt
pop
hlt
icebp
pop
jp
cmps
add
sti
hlt
push
hlt
test
iret
mov
or
ret
mov
fdiv
std
in
out
cmc
dec
stc
xor
stos
into
in
sub
leave
adc
sti
pop
or
jno
rol
movs
mov
js
xchg
jne
inc
or
and
add
sbb
mov
xlat
jl
fimul
mov
add
and
dec
cld
fldcw
mov
out
sub
pushf
mov
in
mov
loope
adc
add
push
mov
das
outs
int
icebp
stos
push
xchg
pusha
sbb
mov
inc
imul
xchg
sbb
fld
aas
sti
lods
mov
jl
inc
sub
dec
jg
pop
or
cwde
xor
xchg
das
inc
mov
jl
or
adc
or
add
or
mov
cdq
cmp
mov
dec
jmp
cmps
and
fld
test
je
jmp
inc
sbb
fld
xchg
dec
imul
add
pop
jecxz
mov
das
add
push
xchg
push
mov
arpl
adc
addr16
jle
and
sub
(bad)
std
call
mov
mov
or
mov
test
test
xchg
fbld
aad
xor
xchg
pushf
into
add
lea
imul
dec
pop
mov
rcl
xor
jmp
add
inc
push
and
jbe
jl
movs
xor
cmp
out
mov
lods
call
mov
fimul
adc
or
lea
ss
cmps
mov
sub
scas
or
scas
loopne
xor
rol
pop
imul
and
int
mov
inc
in
inc
rol
pop
pop
test
pushf
fisttp
xor
sbb
sbb
fild
adc
or
imul
shl
cs
mov
retf
cs
and
jbe
mov
xor
(bad)
cmp
cmp
jecxz
test
ror
in
hlt
dec
cmps
dec
mov
in
dec
cmps
retf
cmp
imul
xor
jecxz
int3
stos
adc
adc
cmps
mov
dec
sahf
push
ror
fisttp
cmps
aad
ret
dec
mov
aas
(bad)
jmp
aaa
aaa
add
push
movs
pop
(bad)
push
or
cli
push
jl
jmp
loope
add
add
loop
(bad)
jecxz
or
in
jp
jmp
and
mov
in
jno
shr
mov
div
fs
jl
lea
dec
or
sub
sub
cmp
ss
sub
scas
jg
pop
xchg
push
(bad)
mov
mov
push
in
ins
mov
add
test
mov
aam
adc
xchg
stos
mov
ret
push
pop
(bad)
(bad)
out
fld
jns
add
sub
push
fdivrp
fild
sbb
sbb
adc
ss
xchg
lock
popf
fdivr
ins
inc
inc
stos
push
sub
pop
dec
shr
jno
dec
fst
sub
add
adc
cmp
(bad)
(bad)
mov
push
pop
inc
sbb
(bad)
pushf
lahf
mov
jp
loop
xchg
mov
mov
sbb
outs
push
mov
mov
cdq
shr
push
dec
fcom
movs
pop
xor
les
pop
cmp
sti
aad
mov
push
pop
mov
add
rcl
jb
xor
adc
aad
jecxz
add
adc
xor
les
and
enter
adc
stos
or
(bad)
dec
fdiv
inc
pop
cmp
aad
bnd
in
inc
movs
ss
dec
das
add
retf
dec
(bad)
xchg
adc
iret
push
in
movs
js
fbld
adc
sbb
mov
mov
xchg
mov
jmp
addr16
test
enter
popa
test
pop
in
outs
mov
arpl
popf
std
pop
push
mov
loopne
inc
inc
mov
pusha
(bad)
jae
cmp
mov
jg
dec
outs
sbb
jmp
mov
cmps
add
in
or
shl
repz
jb
shr
iret
lea
inc
xchg
sar
test
inc
pop
jno
mov
ins
shr
out
aam
call
movs
xchg
fcmovnb
xchg
fmul
xchg
mov
into
mov
adc
pusha
inc
int3
lock
or
ss
sbb
(bad)
mov
addr16
js
rcr
popf
in
xor
test
jge
pop
sbb
inc
mov
cdq
sbb
inc
icebp
cli
aam
and
sbb
imul
mov
out
and
mov
add
xor
and
adc
fcomi
neg
out
adc
cmp
je
inc
mov
add
sbb
push
cmp
(bad)
jno
popf
ret
mov
into
aad
xchg
(bad)
inc
add
aas
adc
pop
mov
mov
inc
unpcklps
ret
and
sbb
jne
jbe
dec
or
and
cmp
or
fwait
mov
fst
movs
dec
dec
(bad)
adc
pushf
pop
pop
iret
adc
push
and
enter
mov
sbb
or
adc
daa
std
xor
test
or
repnz
aaa
fucomp
mov
adc
push
jb
xchg
sbb
sahf
rol
xchg
push
xchg
jae
add
mov
mov
stos
(bad)
cmp
in
mov
clc
popf
sbb
out
or
pop
div
sub
stc
push
inc
push
loope
es
clc
dec
stos
pop
addr16
icebp
sahf
pusha
popf
sahf
push
ja
hlt
(bad)
call
(bad)
fmul
pop
icebp
jge
mov
adc
pop
leave
cmps
fs
lea
sbb
pop
jl
sete
call
test
test
(bad)
fdivr
sar
inc
inc
mov
es
les
cld
mov
add
retf
enter
ss
pop
mov
or
hlt
mov
movs
dec
xor
in
out
mov
hlt
test
aaa
xrelease
xor
push
ins
push
or
hlt
cmp
ficomp
gs
xor
adc
loope
ret
xchg
mov
sub
call
mov
outs
out
or
dec
inc
sub
cdq
xor
imul
dec
leave
loopne
(bad)
mov
mov
rcl
out
gs
enter
mov
jge
pop
mov
xor
dec
dec
push
stos
cs
mov
xchg
sbb
mov
add
ins
fwait
mov
test
fldcw
mov
pop
cmc
or
sub
shr
jge
aaa
push
mov
iret
add
js
add
pop
adc
(bad)
aam
xlat
sub
(bad)
mov
pop
mov
(bad)
and
aas
inc
loop
sti
push
cli
mov
xchg
data16
mov
repnz
stos
jbe
test
push
nop
inc
imul
mov
ds
jae
push
out
movs
inc
into
sar
mov
mov
inc
jo
call
sub
push
aad
mov
inc
push
mov
jb
std
adc
out
adc
jmp
pushf
mov
pop
int
shl
xchg
add
lods
mov
test
pop
sub
aaa
lods
push
call
(bad)
(bad)
or
push
(bad)
jle
pushf
sub
pop
push
scas
out
sbb
jns
ror
int
or
out
daa
adc
xchg
sub
jge
in
stc
ins
mov
cmp
js
test
push
cmps
stc
sbb
stos
clc
test
out
xchg
retf
test
fidivr
ret
mov
cwde
and
cmp
push
mov
mul
pop
and
pop
mov
lods
mov
in
scas
(bad)
jmp
xor
and
push
push
dec
(bad)
jp
mov
xchg
out
sub
call
psrld
daa
mov
dec
jb
dec
fimul
ret
je
js
push
cwde
pop
push
jns
fistp
aad
enter
or
jle
add
nop
js
inc
mov
inc
repz
stos
adc
cs
push
outs
sub
(bad)
pop
adc
sbb
inc
dec
mov
fwait
xchg
add
fisub
pop
push
(bad)
xchg
pop
stos
fs
(bad)
leave
xor
pushf
ja
scas
cmp
shl
inc
loopne
retf
mov
push
sbb
adc
xor
and
pop
(bad)
dec
mov
adc
(bad)
xor
gs
fimul
out
cwde
rcl
ror
mov
and
imul
xlat
aas
arpl
jb
add
into
hlt
mov
cmp
jmp
fadd
inc
sysexit
aad
mov
xchg
fwait
jmp
sbb
mov
xchg
fisttp
xor
xor
cmp
add
xchg
fld
int3
push
iret
call
mov
mov
add
in
leave
mov
mov
mov
fcom
aas
or
movs
or
icebp
aam
lea
aaa
fs
mov
or
call
xor
call
mov
dec
repnz
and
fsub
sbb
jns
ror
sub
imul
icebp
inc
dec
inc
clc
ficomp
jns
mov
(bad)
outs
pop
mov
pop
mov
adc
push
add
xchg
xchg
mov
fs
popf
jb
add
dec
clc
cmp
pop
fwait
ret
sar
pop
push
adc
lods
sahf
aad
mov
(bad)
xchg
into
sbb
mov
push
cmps
shr
jmp
movs
pop
inc
push
xlat
sub
fst
dec
call
je
movs
cmp
and
add
sub
xor
xor
rol
je
mov
cmp
mov
cs
sub
hlt
mul
shr
test
or
dec
dec
xchg
cmc
rcl
xor
ret
(bad)
stos
out
into
xor
pop
not
out
fistp
bound
dec
and
push
test
dec
js
push
pop
sub
aas
xchg
jecxz
mov
jp
bound
inc
test
dec
mov
dec
jp
and
rcr
xor
adc
or
jg
and
div
pop
arpl
jge
(bad)
cmps
test
data16
imul
pop
or
mov
mov
retf
pop
cdq
mov
mov
and
fs
dec
sbb
dec
dec
push
jl
clc
shl
jno
rcr
adc
sahf
and
es
call
jne
movs
xor
movs
inc
dec
sub
ds
adc
sbb
ficom
adc
dec
and
ret
push
shl
adc
pop
jno
xchg
ins
stos
xadd
mov
jb
sbb
dec
dec
imul
out
dec
test
out
adc
push
fst
sti
inc
sub
stos
push
cli
jb
jae
imul
pushf
xor
lods
mov
push
je
loop
pop
stc
adc
es
or
xchg
pop
pop
cmp
ds
push
cmps
cmps
mov
dec
popf
in
jo
mov
(bad)
jge
push
repnz
test
out
push
push
out
mov
cld
cmp
aas
dec
jmp
mov
dec
and
das
repz
or
mov
push
lods
jg
imul
mov
and
retf
cmp
sti
mov
mov
sbb
dec
mov
sub
mov
mov
adc
mov
dec
stos
cmp
call
out
add
(bad)
mov
inc
bound
cmps
mov
and
pop
jge
rol
out
scas
mov
cmp
(bad)
mov
mov
sbb
cmps
inc
and
(bad)
mov
add
ins
push
scas
pop
or
jno
or
out
fs
imul
cld
xor
dec
sub
aaa
popf
xchg
xor
das
dec
mov
xchg
pop
out
xchg
je
jle
cs
in
mov
xchg
hlt
jmp
popa
ja
shr
shl
cmc
test
push
ror
push
mov
adc
scas
pop
push
dec
shl
xchg
mov
arpl
retf
xor
pop
inc
sub
mov
arpl
(bad)
adc
xor
adc
mov
push
jmp
sbb
xor
outs
ins
in
mov
cmp
and
loope
jl
inc
mov
or
enter
ins
fldenv
mov
push
push
(bad)
in
mov
push
xor
rol
fsubr
test
dec
cmp
fist
ins
push
xor
fild
dec
dec
addr16
or
push
aaa
push
mov
outs
imul
jmp
mov
mov
xor
lea
mov
sbb
push
data16
test
add
outs
sub
or
daa
xchg
inc
popf
fcomp
repnz
cmps
xor
jb
dec
xchg
sahf
adc
dec
jbe
stos
add
stc
mov
clc
stos
dec
sti
fldenv
loope
int
inc
pop
test
out
retf
dec
push
das
jmp
(bad)
leave
adc
scas
sbb
and
add
sub
pop
inc
or
mov
mov
pop
jecxz
jns
aaa
stos
arpl
arpl
cmp
(bad)
nop
jmp
es
fild
loope
idiv
mov
fs
dec
and
push
cmp
dec
call
sub
rcl
popf
xor
pop
(bad)
fcmovnu
push
movs
and
xlat
adc
jnp
fmul
out
pop
cdq
lods
jbe
push
sub
adc
jmp
xchg
sub
call
pop
mov
call
xchg
mov
mov
nop
jmp
mov
jmp
add
int
cdq
lods
jne
xor
pop
cmps
push
arpl
neg
sbb
lds
xchg
test
and
(bad)
mov
sti
xor
repz
jb
push
jge
in
mov
fld
sbb
stos
movs
and
mov
fisttp
call
xchg
jl
jnp
je
push
add
mov
and
aad
pop
cmp
ror
mov
movs
cmp
call
push
ss
mov
cmps
dec
mov
mov
sub
ins
cdq
das
shl
jns
popf
or
sbb
fst
push
out
scas
cmp
int3
aad
mov
aam
jge
(bad)
mov
(bad)
push
adc
sub
loop
leave
xchg
mov
jo
shl
dec
jne
sbb
lahf
jne
pop
aad
sar
jecxz
fst
(bad)
mov
fdivr
push
jl
ret
mov
push
and
stos
out
inc
test
jne
lock
push
mov
mov
sub
sub
and
mov
add
jg
and
dec
cmps
pop
sbb
or
jno
mov
test
scas
popf
into
cmp
jge
push
mov
mov
jp
or
inc
mov
jmp
imul
clc
push
mov
in
test
dec
mov
fiadd
add
mov
lods
and
neg
cmps
pop
dec
and
aaa
test
(bad)
cmp
lods
mov
cli
jnp
fwait
or
js
loope
sbb
(bad)
xchg
jcxz
fadd
fnstcw
push
pop
jp
inc
into
mov
dec
loope
add
jl
jb
push
xchg
loope
dec
hlt
sub
daa
repnz
popa
lods
shl
or
xor
cwde
mul
out
movs
jne
ss
movs
and
js
pop
loope
sbb
mov
xor
or
add
push
push
push
mov
sub
scas
mov
js
or
jle
pop
inc
xchg
xchg
rcr
and
lock
(bad)
sahf
xchg
cwde
push
shl
daa
inc
ds
adc
xchg
(bad)
mov
mov
add
pop
mov
add
lahf
or
inc
sahf
idiv
mov
(bad)
mov
lahf
mov
imul
imul
and
jg
jae
mov
test
dec
test
jl
and
hlt
adc
sub
ja
retf
scas
mov
inc
cs
(bad)
add
xchg
leave
inc
xchg
(bad)
xlat
adc
mov
arpl
dec
mov
ficom
jnp
icebp
add
repnz
shl
xchg
pop
repz
cmc
enter
stc
loopne
xor
push
mov
or
rol
clc
enter
dec
ins
call
cmp
pop
inc
(bad)
pop
lea
xor
ds
xchg
pop
sub
mov
fisubr
dec
out
rcl
push
or
sub
jno
or
in
inc
mov
in
push
out
jno
jno
mov
sub
pop
jo
mov
cmp
xchg
mov
ja
mov
daa
out
mov
dec
(bad)
idiv
scas
in
cmp
xor
jmp
adc
mov
inc
bound
add
push
push
or
lock
pushf
or
rcl
jae
mov
out
ror
xchg
je
jb
add
jb
inc
movsx
mov
mov
aam
call
jno
add
out
ror
mov
cmp
rol
test
cmc
pop
fsubr
repz
inc
cdq
adc
ret
push
outs
mov
push
dec
(bad)
fs
mov
aaa
pop
cmc
pusha
rcr
mov
gs
jb
mov
shl
loop
mov
push
cmp
pop
dec
add
fiadd
or
iret
jno
adc
jp
or
pop
nop
int
rol
add
mov
mov
scas
mov
add
jno
(bad)
call
aam
pop
cmp
call
fs
mov
mov
xlat
jge
scas
push
mov
inc
jp
xor
pop
(bad)
mov
jb
mov
mov
fs
cmp
push
sbb
xchg
sbb
pop
test
xchg
movs
jp
(bad)
into
div
arpl
mov
ss
jb
add
int3
push
cmp
push
mov
js
dec
popf
into
imul
stos
int3
and
mov
push
mov
and
pop
mov
xor
in
adc
pop
ja
cld
cmps
out
push
hlt
sbb
mov
cs
mov
cmp
ja
xor
and
cmc
int3
jae
jnp
jl
cld
sub
xor
xchg
aaa
cmp
jge
and
fistp
pop
cmp
jns
lods
cmps
mov
imul
out
rol
sub
inc
test
mov
sahf
cdq
inc
sbb
sub
xlat
lods
sti
pop
push
test
leave
or
mov
sbb
xor
push
int3
cdq
fwait
pop
xchg
aaa
pop
jp
and
mov
ret
mov
and
enter
int3
(bad)
fs
ja
aaa
call
cmps
pop
xor
loop
jl
dec
test
pusha
shl
jb
add
push
jl
mul
add
push
sub
xor
jb
inc
and
sub
mov
stos
push
test
ror
pop
push
mov
inc
lods
sbb
ins
mov
les
inc
nop
xor
bound
adc
cmp
ret
xchg
sbb
in
aam
stos
dec
cld
into
mov
xchg
aas
mov
fs
div
fisubr
lods
idiv
xor
push
(bad)
ret
sbb
int3
sub
jecxz
jae
in
ins
mov
cmp
shl
data16
push
sub
ss
lods
(bad)
xchg
mov
mov
cmp
pusha
out
push
je
sub
aaa
shl
in
mov
(bad)
and
dec
int3
ret
pop
cmp
pop
jp
jmp
xchg
dec
sbb
out
nop
das
mov
lods
iret
push
loope
(bad)
loopne
shl
xchg
mov
sbb
stos
dec
int3
sub
push
and
mov
inc
enter
in
std
inc
inc
xor
mov
xchg
xor
std
pop
jmp
push
inc
xor
fwait
sbb
jecxz
cmc
ja
neg
out
adc
scas
push
dec
mov
jecxz
lods
dec
call
pop
retf
dec
popa
inc
push
fwait
push
push
add
jmp
dec
xchg
ins
cmps
daa
(bad)
sub
adc
call
ins
mov
pop
add
mov
int3
lahf
repnz
mov
in
fst
push
and
jns
rcl
jae
xchg
mov
inc
push
mov
xchg
pop
mov
push
cli
pop
mov
test
mov
arpl
loopne
mov
cmp
inc
xor
adc
shl
fisttp
bound
std
mov
or
and
arpl
jnp
sub
ja
jle
sti
add
(bad)
movs
test
sub
sbb
ins
das
movs
mov
jl
movs
repnz
add
loopne
add
pop
and
imul
retf
outs
out
and
adc
pop
dec
xor
rcr
or
pop
add
scas
xchg
xchg
cld
jp
and
and
pushf
jp
mov
jo
add
outs
arpl
ret
adc
pop
fs
mov
out
push
(bad)
cmp
dec
sbb
pop
jb
sbb
inc
push
lods
sub
add
mov
xlat
call
mov
into
xlat
push
add
repz
in
mov
enter
mov
test
lods
cmp
xchg
fdivr
mov
sub
(bad)
pusha
mov
mov
fwait
inc
inc
dec
div
dec
push
cmp
or
(bad)
mov
jg
mov
mov
ret
leave
jmp
push
mov
sbb
in
(bad)
scas
xchg
cmp
pushf
arpl
jl
sub
push
jnp
push
ja
leave
add
mov
sub
mov
test
push
ins
dec
sub
xor
pop
add
(bad)
lods
mov
xor
mov
jo
mov
mov
retf
vpavgw
inc
or
int
retf
popfw
mov
jb
mov
repnz
lahf
add
ja
jle
imul
out
cli
retf
in
push
mov
dec
mov
mov
pop
jmp
loope
pop
mov
pop
or
mov
add
ins
xchg
aad
(bad)
add
cmps
inc
(bad)
loope
sub
dec
sbb
repz
gs
pop
pusha
sbb
mov
mov
lock
(bad)
(bad)
mov
push
mov
test
fild
sbb
xchg
or
stc
fimul
leave
mov
cmps
call
sbb
ss
fisubr
mov
inc
mov
sub
retf
dec
push
scas
div
sub
or
and
mov
add
mov
nop
mov
mov
inc
test
bound
xchg
jl
xorps
adc
xchg
in
pusha
fld
or
sbb
icebp
add
jle
push
ret
or
xor
sti
cmps
jo
inc
cdq
sub
cmp
cmp
sbb
mov
sub
cmp
shl
es
mov
bound
rol
sahf
inc
fnstenv
(bad)
jmp
scas
loope
pop
sbb
mov
cmp
adc
popa
mov
pop
popa
xor
push
pop
pop
(bad)
(bad)
add
xor
cmp
sub
retf
pop
xchg
mov
add
cmp
es
jnp
mov
dec
call
jbe
lock
outs
ret
dec
xchg
icebp
sti
dec
loopne
push
movaps
int
aaa
inc
pop
pop
jbe
mov
cli
sub
sub
arpl
inc
movs
std
jecxz
and
scas
mov
dec
outs
push
arpl
adc
jns
pop
inc
mov
cmps
(bad)
cmc
call
clc
fwait
and
(bad)
pop
sbb
in
dec
jno
ins
adc
aaa
push
add
dec
fisubr
psubusb
aam
ror
push
addr16
sbb
nop
push
push
dec
int3
adc
push
jmp
jmp
jnp
pop
sbb
push
(bad)
jno
iret
(bad)
and
mov
mov
aad
idiv
ins
fcmovu
add
sti
shr
jle
jnp
std
cmp
js
mov
out
fist
adc
in
ficom
xor
pop
xchg
nop
shr
sub
retf
xchg
(bad)
(bad)
and
pop
ret
sbb
inc
(bad)
mov
sti
sahf
fld
aam
test
das
add
jmp
jmp
add
jp
in
mov
add
dec
lods
sub
fdivp
push
mov
xchg
dec
xor
push
test
xor
shr
mov
inc
jp
dec
out
vorps
add
jnp
pop
cmp
bound
mov
(bad)
dec
(bad)
sbb
(bad)
and
lods
or
mov
xor
sti
mov
sti
out
or
mov
retf
fistp
ret
pop
and
add
lea
inc
hlt
push
sti
cwde
pop
call
out
test
sub
or
cmp
ret
bts
and
aad
lea
or
cmp
xchg
push
xor
clc
(bad)
xor
retf
inc
inc
push
(bad)
sub
ret
dec
adc
pop
push
sar
popa
int
and
cmc
addr16
ror
cmp
enter
adc
popa
mov
add
fs
fcomip
lahf
xchg
sub
xchg
xor
mov
inc
adc
sub
(bad)
cli
push
mov
aas
imul
out
mov
int
cmp
pop
sub
cmp
cmps
scas
mov
jns
sbb
mov
cli
into
mov
jo
js
int3
pop
aas
fsubr
cmp
sbb
in
push
push
add
mov
cmp
mov
jp
iret
inc
inc
dec
mov
add
dec
and
sub
add
mov
adc
(bad)
out
xchg
or
fs
sbb
cmp
inc
or
xor
xor
push
std
mov
adc
adc
sbb
xor
push
push
cmp
add
imul
sub
inc
mov
add
ss
and
lahf
sahf
push
mov
popf
inc
mov
cmp
out
inc
pop
add
cdq
xor
(bad)
in
loopne
out
mov
inc
stos
into
inc
dec
push
cwde
cmp
mov
aam
test
clc
sub
sub
call
dec
scas
sub
jl
ins
popa
mov
scas
sbb
xlat
cmc
fcom
or
in
jl
in
push
jle
mov
xor
dec
add
jb
mov
outs
lods
loopne
lock
jp
add
cli
cmp
call
or
xor
pop
ins
cmp
(bad)
lea
push
fist
xor
aas
mov
sbb
or
cs
les
push
test
dec
lea
mov
ins
sub
pusha
mov
pushf
fldenv
and
mov
mov
xchg
xor
xchg
aaa
arpl
jne
adc
dec
xor
xchg
inc
cmovg
iret
call
les
int
stos
cmp
adc
data16
dec
mov
in
daa
and
xchg
dec
test
test
or
pop
sub
(bad)
loope
ja
dec
mov
gs
pop
rcl
out
add
jl
aas
loopne
push
pop
xchg
jl
pusha
push
sbb
test
pushf
add
push
out
cmp
pop
retf
xchg
sti
adc
mov
aam
aas
jp
ret
pop
call
inc
and
mov
cmp
sbb
xchg
inc
push
jecxz
iret
aas
mov
test
rcl
mov
sbb
jl
xchg
or
dec
sbb
adc
or
mov
sbb
mov
push
dec
xor
and
stos
inc
pop
arpl
add
test
pop
push
and
mov
fsubr
stos
fldenvw
xchg
sbb
das
lock
test
jno
ret
cmp
xcrypt-cbc
cmps
rcr
adc
ret
in
xchg
jne
std
or
outs
lods
jg
stos
ja
cli
pop
lds
pop
cli
push
or
cmp
and
std
xchg
retf
arpl
retf
and
aaa
mov
dec
mov
les
xchg
ss
xchg
iret
adc
xor
sub
xor
ins
je
jbe
test
movs
fadd
cmps
outs
xchg
push
ja
mov
out
inc
outs
rcr
aad
cs
and
xor
mov
inc
adc
sub
dec
jb
dec
push
shr
xchg
jl
or
lds
pop
pop
jmp
sbb
mov
or
add
cld
or
das
cmc
mov
and
mov
mov
mov
ss
inc
add
mov
xchg
push
push
popf
stos
push
test
fisubr
sti
mov
jle
movs
sbb
dec
cwd
add
mov
add
or
es
mov
out
test
dec
push
jns
lahf
inc
pusha
lds
and
aam
sub
imul
xchg
std
aad
out
daa
mov
inc
mov
arpl
dec
xor
mov
mov
lods
pop
in
(bad)
fwait
out
sbb
(bad)
push
int
call
mov
mov
dec
ss
pop
iret
xchg
cmp
mov
rcr
and
outs
pusha
inc
call
jnp
mov
pop
lds
xor
movs
(bad)
sub
add
jbe
out
out
cmps
mov
adc
or
scas
ret
(bad)
pusha
imul
dec
fist
pusha
ret
sti
and
push
inc
cmp
loope
inc
or
mov
lahf
(bad)
adc
jmp
add
(bad)
mov
mov
mov
leave
inc
(bad)
xchg
inc
and
jns
push
cmp
imul
mov
(bad)
loop
fisubr
push
jecxz
mov
jb
mov
mov
jne
pop
mov
jge
xor
mov
xchg
popa
push
mov
movs
sbb
out
mov
mov
xor
iret
push
loopne
fdiv
dec
adc
or
bswap
test
ds
dec
sub
loop
inc
jb
xor
(bad)
pop
out
pop
mov
or
inc
stos
sub
mov
xchg
inc
bound
inc
mov
sub
jecxz
dec
stos
cmp
loope
pop
or
xchg
adc
leave
xchg
aas
cmp
and
cmp
call
loopne
jp
and
shl
stc
(bad)
out
in
cmp
cwde
into
ret
lea
daa
pusha
lods
mov
inc
mov
cdq
inc
aas
data16
fld
rcl
stc
out
jmp
aad
frstor
jmp
in
pop
push
add
(bad)
push
push
adc
push
or
cli
scas
xchg
loop
pop
les
fdiv
sbb
inc
push
loop
push
mov
mul
les
repz
leave
adc
fild
sti
push
cmp
ins
inc
test
jle
xor
enter
jecxz
ja
stos
sbb
call
cmp
js
adc
(bad)
aas
inc
mov
push
mov
sub
xchg
dec
jnp
inc
sbb
dec
cdq
popf
retf
jp
mov
jmp
jl
xchg
pusha
cli
jle
or
push
outs
mov
rcr
jl
sbb
call
jg
jo
inc
cmc
loope
dec
pop
idiv
mov
push
js
pop
sub
adc
icebp
pop
mov
scas
sar
mov
call
pop
push
and
lods
pusha
mov
into
pusha
retf
mov
mov
std
inc
fisubr
int
sub
rcr
or
inc
pop
inc
sub
(bad)
jb
dec
call
lock
mov
scas
shl
xchg
fisttp
push
mov
fcmovb
fdivrp
push
add
push
ja
mov
sti
xor
xor
dec
mov
adc
fs
and
sbb
nop
test
pop
jns
or
imul
cmp
neg
jmp
popf
clc
dec
shr
mov
sbb
cmp
jno
mov
mov
clc
in
push
adc
mov
push
add
inc
dec
and
mov
ss
pop
adc
mov
mov
or
xchg
in
mov
mov
hlt
(bad)
sbb
shr
sub
pushf
out
inc
sti
mul
fidiv
gs
inc
sbb
xor
mov
jg
les
fst
push
sbb
shr
cld
stos
(bad)
adc
push
jmp
popa
xchg
inc
in
xchg
xchg
movs
inc
xchg
dec
pop
add
jle
pop
xor
cli
test
mov
imul
cmps
ja
(bad)
shr
jmp
repnz
mov
jmp
rol
cmp
add
mov
pusha
and
aas
adc
mov
push
shl
rcr
pop
mov
aaa
sbb
mov
xchg
push
pop
mov
push
fist
sbb
shl
out
sub
ins
leave
clc
add
fisub
mov
cmps
mov
in
mov
mov
cs
inc
adc
xor
in
xchg
jmp
or
loopne
xlat
out
rol
inc
mov
hlt
cmp
mov
dec
jne
mov
and
fcmovnu
shl
sti
or
mov
inc
fbld
jmp
addr16
or
push
adc
push
or
repz
mov
pop
ins
xor
push
jmp
mov
pop
popa
pop
das
stos
mov
xor
cmps
lods
nop
or
or
es
push
scas
push
inc
add
mov
adc
jne
and
icebp
int3
push
and
inc
out
cmp
xor
mov
dec
mov
mov
jmp
popa
xlat
cmps
sub
inc
adc
into
xlat
cmp
enter
test
xchg
cld
add
sbb
jno
outs
inc
and
mov
sahf
add
dec
and
loop
loop
pop
mov
dec
cli
test
popf
add
aad
lods
and
fadd
in
pop
jne
jmp
pop
adc
stc
push
mov
jns
aas
jns
sub
dec
sub
or
cld
sbb
popf
sub
sahf
and
popf
xchg
sub
popa
jg
wrmsr
xlat
mov
adc
mov
dec
(bad)
xchg
test
stos
xchg
icebp
or
test
js
out
loope
dec
jnp
and
mov
push
xor
ds
pop
mov
adc
add
fnstsw
mov
sub
mov
add
imul
aam
jno
add
xchg
jns
jge
xchg
in
adc
rcr
cmc
jl
xor
loope
cmp
mov
rol
push
adc
aas
jmp
sbb
push
cmc
mov
or
mov
in
mov
ss
xchg
add
mov
pop
mov
xor
push
mov
out
shr
add
test
jge
out
lock
xchg
aaa
dec
dec
pop
mov
mov
pop
xchg
xor
and
mul
test
mov
lods
dec
loope
add
mov
fs
xchg
aad
or
cs
sbb
sbb
cli
nop
mov
dec
inc
in
aas
test
jno
xchg
retf
push
mov
mov
or
ins
stc
pop
ret
xchg
push
pop
rol
fiadd
leave
or
add
pop
pop
cmps
add
push
xor
xor
mov
and
cli
stos
dec
dec
and
retf
add
dec
gs
ror
bound
inc
(bad)
add
xor
data16
fisubr
dec
test
mov
mov
int3
push
sar
dec
and
popa
mov
call
mov
mov
repz
in
aam
jae
cwde
stos
mov
mov
pop
in
push
in
xor
call
repnz
int3
xor
cmp
add
ffree
loopne
and
sbb
push
push
in
push
sub
movs
inc
push
mov
add
ja
movs
inc
call
outs
in
dec
call
pusha
add
stos
pusha
iret
pop
fcomp
cs
ret
sub
mul
leave
jbe
or
sbb
sahf
pop
sbb
(bad)
mov
add
arpl
jnp
push
pop
je
pop
adc
and
(bad)
fcomp
pop
sub
push
pop
push
sbb
adc
cwde
sub
ja
test
daa
aam
xchg
shr
aam
or
adc
fstp
(bad)
data16
test
mov
pop
(bad)
rcr
sbb
jp
inc
push
lds
cmps
jmp
ret
xchg
in
rol
or
cli
cdq
jl
add
mov
stc
push
lods
dec
pop
push
and
into
dec
cmp
mov
nop
(bad)
repnz
pop
test
mov
aam
inc
cwde
aad
cdq
inc
add
push
jle
jecxz
sbb
mov
and
jne
ja
ja
sahf
xchg
call
(bad)
je
cmps
in
fsub
mov
inc
test
push
retf
and
in
and
pop
clc
(bad)
lods
fiadd
adc
mov
fidiv
nop
dec
inc
inc
mov
fst
jns
jns
and
mov
fwait
icebp
cmovb
xlat
dec
xorps
sbb
gs
inc
les
jge
lods
xchg
mov
pop
pusha
das
mov
push
pop
enter
(bad)
cmp
add
cmp
in
adc
push
ficomp
dec
xchg
ins
xchg
add
or
in
cmps
dec
sahf
ror
xchg
inc
adc
test
push
mov
jbe
mov
fcomi
jnp
lahf
aam
(bad)
sbb
mov
sbb
fisub
xchg
mov
sbb
mov
inc
lock
mov
mov
movs
pusha
xchg
push
cvtpi2ps
test
mov
push
or
cmps
adc
and
sub
out
xchg
dec
cmp
xchg
mov
pop
add
sahf
sbb
loope
jecxz
adc
fild
xchg
or
sub
inc
loopne
into
push
push
mov
sub
xchg
xchg
xor
mov
int3
in
xchg
inc
dec
mov
sbb
rcl
test
aam
scas
ja
jb
loop
call
fisttp
mov
je
fwait
stos
lea
cld
sub
push
enter
pop
sub
add
jb
and
xchg
loope
outs
lea
mov
xor
jo
aas
pop
push
cwde
sub
sar
pushf
add
into
(bad)
jmp
xor
cmp
dec
push
ins
jle
in
push
aad
scas
sti
lods
lahf
sbb
mov
sahf
jb
and
push
sbb
lock
mov
sub
hlt
pop
jecxz
push
retf
sbb
mov
not
inc
xchg
xchg
xor
dec
and
sub
pop
arpl
mov
adc
add
xchg
mov
gs
not
stos
push
jmp
(bad)
sub
enter
shl
sub
movs
mov
xchg
jnp
repz
pop
outs
mov
hlt
dec
imul
push
mov
jae
jp
inc
xor
mov
ret
movs
imul
cli
cmc
push
test
mov
scas
cs
dec
and
mov
sbb
xchg
xchg
and
(bad)
bound
jp
fidiv
stos
aaa
test
call
jmp
mov
ins
inc
push
arpl
jle
dec
or
cmc
loopne
inc
xchg
addr16
sbb
sub
xlat
or
jg
or
gs
test
pop
push
es
sbb
aam
inc
mov
sar
mov
repz
xchg
mov
sub
mov
push
mov
xchg
sub
sbb
push
arpl
dec
fwait
nop
mov
in
cmp
shr
sub
mov
push
loope
inc
pop
nop
xlat
dec
and
scas
pop
pop
clc
test
cmp
inc
cli
dec
xor
scas
mov
mov
test
mov
jbe
std
dec
jp
out
shr
sbb
scas
in
dec
cs
cmc
dec
cmc
push
scas
dec
pop
(bad)
cmp
mov
scas
popa
out
sub
or
aaa
jne
jns
adc
stos
dec
and
dec
jle
fdiv
(bad)
mov
xchg
repnz
push
div
call
out
movs
retf
aas
jg
jmp
add
rcl
test
inc
cmp
sub
or
std
cmp
(bad)
mov
jb
push
xor
mov
cmp
sbb
xchg
enter
dec
jns
pop
inc
scas
(bad)
cwde
aam
mov
repnz
inc
sbb
mov
aam
sub
pusha
push
jno
mov
dec
mov
cdq
movs
sahf
mov
test
jnp
pop
lds
xor
(bad)
dec
push
ficom
and
mov
cmp
rdpmc
mov
mov
add
aas
xor
fs
fst
sbb
mov
popa
outs
xchg
mov
in
dec
jp
mov
lds
push
pop
and
call
cmps
or
lds
jae
ficomp
popf
scas
sub
fwait
out
pop
test
popa
sub
rol
cmc
xchg
inc
loopne
call
sub
add
inc
inc
pop
jg
push
and
ret
mov
mov
mov
mov
add
in
aaa
popa
out
aas
(bad)
jmp
jl
lods
and
inc
in
sub
inc
add
int
lods
loopne
into
fdivr
pop
jnp
push
mov
mov
pushf
xor
pop
jg
repz
and
ret
adc
push
es
sub
mov
push
addr16
adc
xchg
jge
xchg
inc
test
fs
neg
pop
jbe
cmps
mov
ret
push
jae
or
mov
mov
jmp
mov
push
in
push
xchg
and
rep
outs
test
mov
and
or
ss
test
jo
das
cmc
test
in
or
sbb
(bad)
pop
jno
adc
xor
mov
sbb
dec
lock
sub
scas
jno
xchg
sbb
inc
cmp
lock
mov
into
das
pop
ds
add
js
(bad)
adc
xchg
cmp
cmp
push
test
lea
lahf
fisubr
stos
hlt
xor
cvtdq2ps
xchg
retf
sub
pop
xchg
dec
or
popf
push
add
sub
stc
lds
cmp
data16
pushf
ret
push
outs
jo
mov
(bad)
imul
xchg
mov
loop
div
dec
(bad)
call
int3
mov
imul
mov
and
jo
xchg
arpl
jmp
and
ins
out
mov
jmp
mov
daa
pop
push
push
fs
xchg
cmp
pop
mov
pushf
jl
out
popa
xor
in
xchg
fcomp
fimul
loope
mov
ret
mov
jo
and
retf
inc
mov
dec
mov
xor
sti
ret
mov
or
es
fimul
cmp
or
sub
mov
mov
outs
loop
and
fmul
pop
inc
cs
pushf
cmp
(bad)
repnz
arpl
in
ds
add
pusha
movs
pop
dec
rcr
call
sbb
test
dec
sti
stos
inc
xlat
push
push
pop
xchg
(bad)
enter
mov
popf
mov
popf
dec
inc
xor
pop
adc
adc
pop
adc
popf
sbb
ficomp
pop
pushf
pop
arpl
int
mov
sbb
cmp
or
sbb
pop
jo
xchg
scas
movs
rol
jecxz
sbb
cmp
sub
(bad)
push
fdivr
sub
shl
mov
icebp
push
jbe
xchg
cmp
pop
int3
xor
gs
adc
ins
jge
adc
clc
inc
(bad)
(bad)
mov
and
cld
fild
xor
bswap
js
cwde
test
cmp
in
xor
pop
jmp
pop
aam
shl
cs
xchg
sub
ficom
movs
inc
xor
or
(bad)
fnstenv
cmc
add
stos
xor
(bad)
aas
icebp
xchg
je
xchg
(bad)
call
je
pop
xchg
aas
mov
xchg
enter
aad
sbb
pusha
jge
dec
adc
imul
mov
cmp
dec
pop
inc
(bad)
xchg
push
mov
mov
cmp
je
push
call
leave
pop
call
push
dec
stos
fcmovnbe
and
test
xor
add
rol
movs
sub
jbe
sub
jne
xchg
xchg
sbb
xlat
mov
scas
inc
and
add
push
repz
pop
jnp
shl
xor
(bad)
push
sub
ret
(bad)
xchg
fs
jno
mov
or
adc
gs
jmp
cwde
xor
adc
sub
out
(bad)
daa
test
fisubr
pop
jecxz
pop
std
idiv
push
dec
cmp
dec
hlt
movs
lock
fwait
mov
jbe
add
add
jmp
retf
push
inc
cmps
in
ds
mov
loopne
pop
jmp
(bad)
jle
jecxz
movs
mov
leave
mov
hlt
xchg
call
mov
xchg
dec
jno
pop
ins
ins
sbb
test
shl
sub
sbb
cmp
add
stos
out
dec
fisubr
mov
mov
xchg
loopne
(bad)
in
(bad)
fcmovne
dec
push
movs
sbb
mov
xchg
xchg
mov
ret
sbb
fistp
and
xor
fwait
pop
adc
das
stc
and
in
fmul
rcr
cli
pop
std
sti
jmp
test
push
(bad)
es
jecxz
outs
outs
addr16
ror
sbb
jo
je
retf
mov
(bad)
add
xchg
cs
xor
out
sbb
xor
(bad)
dec
nop
push
jae
xchg
lods
push
addr16
out
sbb
popa
adc
sbb
retf
jae
jne
dec
les
jg
into
idiv
xchg
or
loopne
cmp
xor
les
nop
ins
int3
clc
int
mov
mov
in
mov
pop
push
pusha
dec
retf
cmc
movs
cdq
mov
mov
inc
cmp
sbb
mov
pop
mov
pop
scas
mov
add
mov
mov
dec
mov
fstp
das
outs
jl
loope
push
inc
sub
cmp
repz
fld
cmp
les
adc
data16
cmp
xor
pop
idiv
xchg
adc
push
adc
loopne
push
adc
call
jbe
pop
xor
ds
xchg
jnp
and
movs
fs
xchg
mov
mov
test
iret
cmp
ins
xchg
mov
retf
mov
pop
pusha
clc
mov
dec
ins
inc
or
test
sbb
mov
idiv
loop
adc
sub
sbb
idiv
xchg
sub
pop
push
pop
inc
(bad)
mov
sub
mov
dec
fcmovnu
nop
sub
push
inc
addr16
and
lock
ret
and
scas
mov
test
int
pop
and
adc
imul
and
mov
int3
mov
dec
cmp
in
sub
arpl
add
xchg
loop
int
repz
addr16
gs
add
cmp
ins
pop
mov
add
mov
sub
cld
mov
(bad)
fiadd
push
pop
int3
push
mov
xor
jg
retf
cmp
lahf
push
xor
stos
dec
cmp
cmp
mov
jmp
jno
xor
push
cwde
ror
fld
xchg
mov
fstp
jl
sub
inc
jne
mov
hlt
popf
adc
jg
mov
jnp
xchg
inc
mov
jle
das
fdiv
inc
add
mov
imul
dec
jg
xchg
mov
mov
shr
ret
outs
mov
add
xchg
clc
pop
and
std
setbe
pop
jmp
push
outs
inc
xor
pop
fwait
outs
ret
les
aaa
sbb
mov
push
lods
iret
jo
sti
push
hlt
fs
cmp
outs
push
mov
mov
stos
test
lods
in
fsubr
js
sti
mov
lahf
jp
xchg
jne
mov
dec
xchg
jmp
cmp
arpl
inc
mov
scas
add
jl
out
neg
mov
pop
add
in
call
sbb
lds
or
sbb
loop
retf
jo
or
inc
jns
inc
push
cmps
int3
lahf
pop
mov
inc
les
outs
dec
cs
jbe
ja
cmps
xchg
xor
adc
adc
add
(bad)
lds
jle
xchg
push
hlt
jmp
inc
xchg
sub
jae
push
and
inc
mov
push
pop
out
xchg
inc
lds
stos
push
mov
movs
mov
loopne
inc
sbb
xor
gs
or
test
adc
gs
push
xchg
mov
ss
in
or
test
scas
mov
inc
sub
test
(bad)
sub
ror
jge
(bad)
mov
or
jae
sti
in
push
dec
pop
adc
(bad)
mov
xchg
push
push
retf
stc
and
hlt
ins
(bad)
pop
ficom
cmp
pusha
cmp
and
sub
test
mov
out
je
xchg
sub
shl
fwait
aas
sub
enter
cwde
adc
adc
mov
call
pop
loop
xor
xchg
sub
cmps
mov
sahf
idiv
repnz
movs
mov
(bad)
sub
cmp
std
mov
dec
std
pop
dec
lods
sbb
or
ror
cld
adc
(bad)
adc
jne
push
adc
push
jg
enter
jb
sbb
jnp
(bad)
out
xlat
push
stos
les
shl
xor
add
jmp
xlat
push
outs
mov
inc
ficom
inc
test
cmc
das
push
xor
fs
jne
in
mov
int
and
lds
mov
das
repz
and
neg
and
dec
cld
xchg
inc
inc
adc
pusha
xchg
cmps
jge
lods
or
and
aad
shl
inc
mov
fmul
mov
cli
fisttp
add
bound
js
inc
add
ja
push
into
(bad)
adc
gs
stos
inc
daa
sub
aad
pop
sub
add
add
ins
shl
bound
(bad)
mov
push
push
lock
add
mov
ror
add
je
push
loope
sti
pop
inc
lock
sub
mov
test
sub
mov
fist
in
iret
stos
adc
dec
(bad)
jecxz
add
(bad)
push
cmps
movs
and
jg
mov
aaa
aam
xchg
outs
or
mov
or
imul
pusha
dec
nop
sbb
cmp
push
dec
dec
jmp
pop
sub
add
dec
mov
mov
jl
push
into
mov
div
dec
and
sub
adc
xchg
push
fs
or
xchg
pop
mov
dec
sub
in
dec
jns
imul
ret
(bad)
mov
les
dec
pop
xchg
pop
or
hlt
xor
adc
push
xchg
stc
pop
fs
xor
adc
lods
mov
data16
and
add
or
call
inc
mov
pop
and
cdq
push
jecxz
mov
dec
addr16
push
mov
mov
imul
fsubp
ins
xchg
fst
or
mov
xor
mov
enter
jmp
add
movs
sar
cwde
daa
out
fidiv
pop
or
out
cdq
sub
(bad)
nop
imul
imul
mov
fcomp
movs
adc
lods
inc
xchg
shl
inc
xor
xor
mov
jno
xchg
pop
test
inc
cmc
cmp
xor
fsub
outs
in
jbe
mov
in
push
aaa
scas
or
nop
ret
adc
neg
pop
mov
imul
and
cmps
mov
ficomp
inc
int3
mov
or
das
dec
(bad)
mov
shr
(bad)
mov
outs
dec
sub
pop
dec
mov
mov
mov
movs
cmp
fadd
fild
push
push
inc
lahf
cmps
mov
mov
movs
sub
ins
sbb
leave
aaa
inc
fwait
pop
xchg
out
ins
mov
ins
xor
(bad)
mov
repnz
xor
push
add
inc
lds
or
pop
lea
sbb
arpl
ins
ret
sub
fs
mov
mov
test
test
mov
in
xchg
leave
ror
xor
fidiv
fwait
je
nop
jge
inc
sub
retf
pushf
leave
adc
xchg
and
mov
xor
icebp
ja
mov
pop
inc
push
out
xor
mov
and
(bad)
jno
cmc
dec
mov
out
or
out
xchg
sti
icebp
call
movs
ja
mov
inc
or
lea
mov
dec
sbb
jno
mov
cmp
mov
inc
and
inc
adc
xor
rol
lods
and
jge
fwait
xor
loop
sub
add
lea
jae
xchg
and
mov
js
scas
cs
gs
in
sbb
arpl
sar
sbb
pushf
add
iret
push
add
jb
jg
or
mov
fimul
je
jb
stos
push
cmp
adc
adc
push
sti
call
retf
pop
icebp
inc
repz
cmps
xchg
add
inc
adc
push
sub
cmc
icebp
(bad)
fwait
ss
push
hlt
leave
sbb
loop
std
adc
sub
mov
jg
mov
push
dec
lods
ss
ss
in
fisttp
push
fisub
dec
out
mov
add
shr
sub
sahf
pop
out
adc
retf
jmp
cmp
outs
je
jge
in
dec
retf
xor
fwait
pop
xchg
add
adc
dec
cmp
imul
call
dec
pop
movs
mov
(bad)
das
jo
out
push
enter
test
dec
int
jecxz
call
hlt
cbw
jbe
and
arpl
jl
cmps
rcl
inc
mov
jp
enter
jecxz
lods
sbb
mov
ins
add
jmp
mov
movs
loope
inc
jle
mov
cs
cdq
jno
xor
push
mov
adc
inc
pop
not
aam
pop
jge
mov
cmps
xlat
mov
add
aas
pop
add
mov
jmp
test
mov
push
nop
fwait
push
mov
mov
sti
xchg
sahf
jb
jle
xor
mov
cmp
adc
push
pop
xacquire
sub
and
test
dec
cmp
push
dec
jnp
inc
ja
ret
pop
dec
cmc
xchg
jo
xor
loopne
fild
repnz
mov
pop
jle
pop
and
into
rep
mov
mov
and
xor
test
sbb
add
push
and
cmp
jge
xchg
and
fisubr
adc
mov
jge
xchg
inc
jnp
call
cmp
stos
je
mov
mov
add
retf
add
test
ja
ins
dec
stos
mov
xchg
pop
out
pop
sub
(bad)
adc
cmp
or
mov
jbe
sbb
mov
add
fistp
jo
push
mov
ja
mov
mov
cmp
aas
call
fnstenv
in
(bad)
je
ds
and
or
mov
rol
cmc
jecxz
loopne
fdiv
jg
leave
mov
call
add
push
mov
xchg
lock
push
inc
push
jge
shufps
aad
jle
stos
adc
enter
jle
neg
cmp
pop
pop
stos
jne
fistp
out
push
jl
test
nop
imul
sbb
stc
dec
js
add
pop
pop
mov
cmp
ret
or
and
in
inc
fidivr
xchg
jge
jmp
adc
ins
cmp
mov
das
call
in
inc
inc
arpl
adc
xchg
icebp
test
cmp
ja
sbb
cld
out
ja
leave
iret
ret
pop
dec
add
test
mov
nop
inc
pusha
ja
imul
gs
ins
pop
neg
popf
mov
(bad)
cmc
mov
mov
fsubr
cli
and
sbb
and
push
push
dec
ds
hlt
jg
or
dec
push
rol
sbb
out
cmps
add
out
mov
xchg
das
dec
pop
int3
or
adc
mov
ror
jb
pop
mov
jle
pop
jb
adc
mov
cmps
frstor
mov
or
mov
mov
cmp
icebp
jo
inc
inc
int3
iret
daa
aas
cmp
xor
test
push
sub
gs
inc
sub
mov
dec
push
leave
xchg
mov
pop
dec
test
jp
scas
or
add
sbb
les
and
fcom
pop
shr
outs
mov
mov
inc
sub
popf
jns
jno
jl
push
jmp
inc
out
addr16
jae
inc
into
add
cmc
pop
mov
(bad)
xchg
shl
rcr
nop
mov
jne
test
sbb
add
bound
mov
cmp
test
mov
aas
add
daa
dec
adc
xor
in
stos
mov
push
push
dec
(bad)
push
xchg
gs
cmp
scas
xor
repnz
jbe
pop
xchg
neg
ins
jp
dec
sar
jae
clc
frstor
popf
add
jg
adc
push
lea
cmp
inc
sbb
xchg
repnz
and
fdivr
call
je
out
xchg
out
sub
sbb
cmp
dec
xchg
shl
cmp
repnz
xor
jb
movs
sub
sbb
xor
pop
fisubr
mov
stos
fistp
inc
ds
or
js
daa
mov
call
(bad)
jg
xchg
retf
xchg
mov
or
jmp
movs
push
inc
mov
rcl
or
mov
mov
sub
lock
(bad)
das
add
inc
pop
fsubr
stc
clc
ins
out
and
xchg
aaa
add
(bad)
imul
arpl
mov
mov
out
cmc
movs
in
or
popf
sbb
or
call
addr16
lds
push
lahf
dec
mov
mov
dec
repnz
loope
mov
imul
xchg
rcr
test
mov
sub
lock
ret
xchg
inc
mov
fstp
pop
jmp
mov
addr16
sub
scas
hlt
arpl
loop
bound
or
int3
stos
sub
fcom
enter
sbb
pushf
cmp
rol
jnp
data16
out
das
fucompp
lahf
pop
neg
jns
add
ds
dec
int
mov
mov
sbb
adc
add
inc
jg
xchg
push
and
sbb
pop
arpl
ss
jmp
minps
jns
pop
repnz
xchg
js
and
mov
test
or
lods
ffreep
cmp
inc
jo
xlat
das
jle
les
adc
push
inc
or
mov
dec
xor
jbe
cld
jmp
stos
ds
ins
pop
das
cwde
xor
and
mov
inc
cwde
cli
mov
(bad)
repz
add
test
jmp
cmp
and
sbb
lods
out
outs
dec
xor
dec
push
ins
xchg
lods
outs
dec
jbe
and
pop
and
mov
sbb
test
push
jg
popf
mov
sub
add
sub
les
inc
test
mov
ja
test
xchg
mov
xchg
xlat
or
jmp
movs
adc
retf
pop
mov
out
sub
(bad)
mov
cmc
jle
cmp
inc
mov
imul
call
je
std
sbb
mov
inc
xchg
pop
push
mov
cmc
sbb
hlt
jecxz
jne
test
xor
ja
pop
popa
xchg
sbb
pop
mov
and
call
aad
jmp
and
inc
gs
mov
ret
cmc
test
jl
push
iret
jmp
int3
mov
enter
ret
inc
pop
adc
jns
loopne
dec
(bad)
int
rol
sbb
push
shr
ror
dec
add
into
sbb
mov
cmp
popa
adc
(bad)
and
sub
fwait
loope
xchg
fdivp
outs
gs
push
ror
fild
je
pop
xor
test
mov
aaa
jle
push
addr16
out
fstp
mov
ret
retf
bnd
xor
pop
out
cmp
xchg
dec
out
xor
daa
cmp
popa
xchg
push
and
mul
aad
fs
cdq
lahf
or
jle
movs
imul
(bad)
add
in
(bad)
mov
movd
dec
pavgw
mov
jle
xor
cli
fdivrp
pop
jb
push
outs
neg
add
cmp
dec
sbb
push
xor
sub
mov
out
sbb
ret
imul
pop
in
pop
repnz
les
mov
xor
inc
push
mov
and
mov
mov
ret
jg
into
inc
fs
out
add
mov
sub
fistp
jmp
jp
in
nop
repz
ss
(bad)
jae
int
push
retf
push
mov
bound
dec
neg
fbstp
aad
(bad)
std
aad
adc
cmp
mov
xchg
ret
push
or
cwde
jns
mov
ret
push
inc
test
lds
aad
push
mov
(bad)
loope
xchg
or
xor
ins
sbb
aam
add
adc
sbb
and
jecxz
xchg
mov
adc
repnz
ja
aad
mov
xor
int
adc
xor
out
dec
lahf
push
bound
rcr
mov
call
ds
jnp
in
pushf
(bad)
jns
movs
sub
jmp
inc
call
mov
daa
inc
jnp
or
stos
cmc
jnp
jecxz
push
mov
imul
xchg
pop
mov
or
scas
iret
push
rol
adc
dec
ins
test
pop
pop
stos
jnp
jg
xchg
lods
jns
jno
mov
mov
jne
mov
mov
cmp
retf
(bad)
or
daa
and
lds
adc
xor
adc
pop
mov
aam
cmp
xchg
xchg
cwde
lock
pop
enter
pop
xor
sbb
sbb
loopne
mov
jae
jl
jne
push
mov
ins
lods
push
stos
in
xchg
jnp
xchg
loop
pushf
pop
aaa
lahf
xor
cmp
mov
mov
repz
call
jns
and
mov
ds
mov
sbb
dec
outs
push
jp
adc
jg
call
add
retf
das
js
sub
pop
pop
cs
jle
arpl
in
xchg
add
retf
mov
fsub
outs
jp
fimul
and
or
std
lods
sar
enter
and
popa
cmc
pop
fild
add
mov
mov
sti
movs
in
pop
fwait
jne
nop
out
sub
lds
not
in
sbb
xchg
sbb
mul
(bad)
lock
pop
(bad)
std
pushf
xchg
xchg
sub
and
test
mov
add
arpl
scas
dec
add
rcl
sbb
jae
sahf
push
xlat
repnz
mov
xchg
inc
pop
push
cmp
daa
lods
retf
fcmovnbe
nop
push
jno
dec
mov
(bad)
inc
and
xchg
mov
and
loop
jmp
int3
out
iret
loope
add
popf
mov
data16
jge
adc
sbb
dec
cdq
ins
shl
sar
mov
xor
sbb
add
shl
cwde
cmps
jbe
xchg
sbb
mov
pop
cmp
mov
add
jle
push
stos
in
outs
xchg
mov
sub
(bad)
icebp
sbb
shr
call
call
aam
mov
inc
pop
(bad)
pop
jle
cmp
sub
jne
jns
sbb
cmp
aas
pop
outs
cmps
daa
pusha
jp
and
jbe
test
(bad)
jne
mov
popa
retf
xchg
inc
int3
in
movs
inc
arpl
cmps
nop
data16
das
and
mov
movs
push
pop
xor
inc
(bad)
jmp
test
or
mov
mov
sub
outs
aaa
retf
xchg
(bad)
mov
inc
cmp
loope
scas
jecxz
dec
jp
and
mov
aad
add
in
int
lahf
rol
int3
inc
(bad)
xor
(bad)
dec
jecxz
jne
jo
and
xor
shr
cmp
mov
sub
lods
outs
xchg
outs
mov
retf
leave
add
fxch
xlat
lahf
clc
shl
loopne
dec
xor
push
adc
inc
lods
out
jne
and
push
sub
pop
or
sar
test
popa
mov
mov
add
push
jno
jge
iret
int
and
sub
or
pop
add
fsubr
jno
xor
fiadd
cmp
adc
stos
cmps
push
fld
push
call
ret
in
mov
jae
mov
scas
and
das
and
enter
popa
pop
jp
sbb
sbb
mov
fisttp
scas
stos
js
push
icebp
punpckhdq
(bad)
std
dec
mov
cmp
(bad)
cmc
scas
or
gs
mov
inc
dec
add
mov
imul
test
pop
dec
enter
test
add
enter
popf
frstor
loopne
inc
fidiv
outs
jl
xchg
fdiv
iret
lea
xchg
jmp
sbb
push
or
leave
xchg
leave
fild
loope
adc
lock
imul
inc
shl
adc
test
mov
or
pushf
test
xor
fstp
aam
das
mov
jmp
jmp
sbb
sub
repz
mov
dec
mov
adc
mov
in
pop
mov
pop
adc
inc
and
add
in
xor
mov
es
xchg
adc
(bad)
push
xor
enter
lock
ret
inc
or
cld
in
dec
adc
xchg
mov
imul
fs
fst
inc
adc
test
mov
jno
mov
and
and
call
(bad)
call
and
(bad)
in
(bad)
faddp
pop
adc
scas
xor
and
pop
mov
ret
dec
pop
add
xchg
adc
data16
je
jbe
rol
into
scas
pop
pop
pop
fcmovnb
xor
cdq
out
inc
xchg
(bad)
cmp
mov
dec
push
cmc
and
fst
fimul
sub
mov
repz
jae
les
jge
push
das
in
push
rcl
fstp
mov
lods
sub
out
cmp
cmc
jp
pop
inc
sti
mov
(bad)
fld
loopne
pushf
lahf
adc
xchg
inc
test
sbb
mov
sahf
sbb
jle
shl
adc
lock
(bad)
mov
retf
imul
sub
add
cs
sahf
mov
(bad)
cmp
xor
popa
test
pop
aas
xor
in
sahf
cmp
fs
mov
retf
outs
push
inc
and
mov
sbb
loope
xchg
xchg
dec
lds
sbb
jle
aas
jmp
nop
mov
in
loop
std
ror
lods
cmp
pushf
movs
jg
mov
or
cmp
push
retf
jnp
test
movhps
mov
(bad)
leave
fwait
xor
xchg
mov
jge
out
pop
inc
inc
adc
jbe
mov
test
ret
pop
pop
test
fld
std
adc
dec
add
or
fdiv
call
loope
add
or
out
push
iret
pop
and
xchg
mov
ror
adc
cli
inc
pop
mov
pushf
gs
aaa
mov
mov
pop
gs
fild
aam
gs
iret
mov
cmp
clc
and
push
push
sub
adc
(bad)
push
mov
xchg
sar
jecxz
pusha
jb
jg
mul
add
jge
or
pop
xor
call
jmp
movs
adc
add
sub
leave
mov
and
sbb
js
jns
cmp
mov
inc
cmp
(bad)
sti
int3
xchg
pop
pop
cmp
inc
mov
mov
jmp
inc
or
rcr
push
iret
das
in
cmp
cld
inc
inc
pop
push
cmp
push
jle
ror
pop
fs
stc
add
jge
loopne
movs
fcmovnbe
mov
sbb
cmps
xchg
inc
adc
push
mov
inc
cmp
sub
inc
or
xchg
int3
ins
iret
adc
push
xchg
pop
mov
pop
push
xchg
(bad)
mov
pop
jg
repz
push
leave
movs
imul
rol
neg
mov
dec
jle
mov
mov
xchg
mov
cmp
mov
dec
inc
cld
and
xchg
jp
and
popa
fcom
sub
mov
xor
aam
sbb
in
sbb
or
xchg
test
aaa
imul
sub
sub
dec
adc
or
jo
aad
sub
mov
(bad)
ret
push
std
xchg
fs
iret
hlt
idiv
jae
pushf
add
push
lds
xlat
and
or
fsubr
sub
dec
(bad)
sub
push
mov
rcr
(bad)
in
jmp
dec
stos
mov
push
inc
icebp
in
sub
or
sub
unpcklps
(bad)
xlat
in
jae
inc
sub
sbb
jl
popa
and
sub
mov
nop
aad
push
imul
pop
mov
fsubrp
out
cmp
jae
stc
fild
xchg
fisub
dec
cmc
jo
jae
add
jb
pop
jle
xchg
int3
aam
(bad)
jle
push
push
inc
jns
into
mov
aaa
icebp
ss
xor
push
mov
cmp
sbb
pop
movs
ins
xor
jbe
cdq
pop
pop
jnp
test
push
(bad)
mov
cld
popf
movs
ret
movs
pop
add
and
push
fsubp
ret
call
mov
and
pop
fcomp
sub
loop
jmp
retf
retf
mov
dec
or
into
sbb
push
jp
pop
add
add
ret
mov
out
int3
jbe
test
cmp
xor
pop
or
cwde
pop
xchg
sbb
and
in
sub
outs
aam
das
push
aas
inc
bound
movs
adc
call
int
nop
mov
cmp
mov
or
xchg
mov
jg
movs
cs
ins
lahf
pop
test
jae
bound
cmp
sbb
sub
and
cdq
xchg
fcom
pop
jl
lahf
and
nop
in
movs
jo
or
daa
push
ret
(bad)
loopne
or
xchg
cdq
jg
and
out
ss
cs
scas
mov
mov
inc
cwde
aam
cmps
jo
inc
mov
jle
cmp
fs
adc
mov
inc
jecxz
or
fnsave
mov
es
xchg
mov
cs
cmps
fidiv
pop
fcom
into
(bad)
pop
stos
sbb
push
mov
and
cmps
retf
sbb
lods
ret
popa
fcom
xchg
ss
jmp
jp
(bad)
out
jmp
mov
or
retf
int3
add
mov
pop
aad
and
dec
sub
mov
mov
push
in
jmp
sbb
ret
mov
sub
cmc
sar
daa
(bad)
jno
fld
jb
fidivr
out
adc
enter
enter
js
or
outs
mov
std
dec
push
pop
xor
fsubr
sub
test
adc
in
jne
pop
lahf
jne
leave
stos
pop
inc
nop
push
xchg
popa
or
cmp
ja
leave
dec
push
call
push
adc
fstp
xor
jg
outs
mov
mov
test
pop
retf
dec
fld
jmp
xchg
sub
(bad)
xchg
out
sub
dec
pop
daa
or
pop
jge
or
add
xchg
in
mov
inc
xor
hlt
dec
inc
mov
sti
xchg
sub
rcr
shl
stos
push
nop
jne
call
call
pop
push
outs
cmc
mov
and
inc
or
sar
pushf
loopne
dec
pop
sbb
cmp
push
jecxz
bound
(bad)
pop
pop
and
jo
sti
fwait
sub
sbb
mov
dec
and
xor
and
repnz
std
xor
xor
shl
call
mov
sbb
sub
pop
test
sti
mov
adc
dec
outs
and
lods
mov
jb
stos
push
int3
or
cld
pop
cli
aas
cld
sub
jne
cmp
pop
cmp
int3
pop
stos
in
addr16
scas
cmp
xchg
test
xchg
lock
(bad)
adc
int3
pop
(bad)
mov
stc
(bad)
jbe
in
jmp
and
stos
and
or
shr
xchg
cmp
dec
int3
popa
stos
das
dec
ret
xor
mov
jns
retf
retf
cmps
out
je
iret
mov
(bad)
clc
dec
jle
xchg
loope
shl
or
aad
stc
lea
fst
stos
fisttp
fst
frstor
push
out
pop
mov
pop
aad
mov
scas
inc
xchg
adc
jle
(bad)
dec
cmp
xchg
ja
in
pop
rcl
out
fs
xchg
movs
and
cmp
and
pop
cmp
mov
pusha
and
xor
rcl
or
sbb
push
in
inc
add
and
into
or
xchg
mov
pop
pop
mov
pop
pop
mov
(bad)
fcom
movs
inc
retf
js
xchg
popf
icebp
addr16
(bad)
rol
jg
shr
pop
push
fldcw
fdiv
cmp
fs
inc
(bad)
inc
jb
jmp
sahf
aaa
rcl
sbb
clc
(bad)
lods
in
js
jb
mov
fistp
mov
add
cmps
out
enter
scas
retf
dec
shl
xor
and
loopne
imul
loope
int3
popf
cmps
jne
inc
jnp
push
xchg
shr
jle
fsubr
pusha
cmp
dec
loop
repnz
fst
inc
rcl
(bad)
in
xlat
xor
mov
pop
sbb
or
jo
pop
lea
mov
popa
dec
test
dec
arpl
mov
sar
mov
xchg
bound
shl
inc
aam
push
arpl
in
mov
in
jo
movs
cwde
inc
mov
add
add
in
add
fnstcw
push
repnz
jbe
xchg
jnp
adc
or
mov
retf
adc
pop
data16
sbb
scas
mov
or
iret
cmp
mov
and
test
bound
(bad)
aam
stc
mov
xor
lods
dec
(bad)
lahf
rol
push
test
stos
mov
sbb
mov
call
or
mov
fidivr
imul
bound
jae
pop
mov
and
and
pop
mov
aad
ins
jp
jle
js
data16
pop
out
ret
xor
aaa
push
sub
sub
rcr
jae
data16
mov
xor
leave
gs
pop
pop
xchg
and
push
sub
cmp
push
xchg
or
cs
inc
pop
lods
mov
xchg
push
cmp
ror
xor
sbb
jno
dec
xchg
inc
fcom
xlat
cmps
mov
pushf
out
sub
cmp
push
inc
xor
data16
(bad)
pop
push
int3
mov
mov
lahf
cmp
sbb
mov
add
(bad)
(bad)
out
cmp
in
daa
and
dec
mov
bound
push
push
and
shl
aad
add
and
or
sub
pop
cmp
xor
cmps
pushf
cmp
loope
and
or
imul
xor
xchg
outs
scas
cmps
jecxz
inc
in
outs
outs
cdq
mov
push
enter
cmp
or
add
mov
mov
add
mov
ret
jns
jmp
dec
push
aaa
jae
loop
out
cmp
fbld
das
sbb
cmp
cs
sub
daa
in
into
xchg
inc
pusha
jmp
mov
scas
and
cmp
dec
aam
add
enter
outs
stos
imul
popa
sbb
sub
dec
sahf
sbb
pop
(bad)
rol
xor
jmp
movs
test
cmp
jbe
mov
mov
pop
(bad)
mov
fistp
xor
xor
(bad)
and
test
sbb
jmp
ficomp
gs
stos
push
stos
into
dec
dec
outs
mul
ror
sbb
jnp
sub
lock
ja
fcmove
leave
jmp
add
das
mov
scas
les
in
push
jae
les
in
mov
aad
addr16
lods
dec
imul
loopne
xor
ins
xchg
dec
inc
xor
inc
stc
and
stos
mov
addr16
jne
xor
pop
aas
jb
xchg
js
mov
aad
sub
fwait
je
jo
mov
sbb
jbe
scas
in
push
aaa
add
jecxz
push
dec
mov
in
ret
repz
pop
cmps
sub
pop
jb
jmp
repnz
fstp
push
gs
mov
pop
cmc
push
in
jae
mov
hlt
scas
and
mov
repz
mov
and
or
retf
mov
shl
hlt
test
xchg
cmp
push
sub
xchg
inc
mov
aad
add
push
add
xor
xlat
cmp
jnp
dec
mov
pop
pop
fiadd
outs
je
sub
jge
mov
stos
test
sti
lods
stc
fistp
jmp
mov
push
loop
shl
fstp
shl
xor
lahf
fsubr
mov
aad
xchg
in
cli
retf
sbb
push
jmp
mov
add
imul
cli
ss
adc
and
mov
clc
push
push
mov
(bad)
imul
push
xor
out
(bad)
sbb
out
inc
(bad)
mov
retf
mov
sub
out
stc
fwait
loope
into
cmc
lea
xchg
mov
stc
jmp
xlat
hlt
out
dec
loop
sub
sbb
cmp
mov
xchg
popf
or
mov
xchg
xsha1
cmps
mov
push
shl
shl
inc
aas
cld
push
ja
or
hlt
jns
sbb
or
shl
xor
cs
mov
ins
cmp
jmp
cmp
mov
sti
rol
jge
imul
or
jmp
test
dec
cwde
(bad)
xor
or
test
jb
push
xor
add
loop
mov
movs
rcl
mov
jbe
or
ret
or
int3
stos
push
sub
add
jo
jae
retf
stc
mov
inc
pop
sbb
sti
push
push
push
out
or
ja
mov
xor
sub
(bad)
stc
mov
dec
mov
inc
hlt
mov
sub
aaa
fwait
sub
pusha
out
fld
pop
fild
dec
xchg
mov
aam
adc
retf
js
mov
jp
push
into
adc
and
sbb
mov
inc
int
adc
xor
stc
ja
test
gs
ds
adc
jb
adc
mov
mov
leave
loopne
scas
cmc
ja
and
iret
adc
cmp
aad
add
out
sub
jmp
loopne
push
xchg
cmps
test
adc
mov
mov
repz
std
lahf
outs
mov
inc
sbb
ficomp
push
jmp
call
jb
in
xchg
lods
mov
xor
push
mov
ds
(bad)
aaa
pop
jmp
jno
jb
mov
adc
jns
sbb
jbe
mov
sbb
out
cmp
sbb
call
sahf
xor
and
adc
xor
jno
icebp
(bad)
adc
or
sub
imul
mov
movs
das
jg
inc
jnp
xchg
inc
loope
(bad)
mov
into
cmp
inc
pop
(bad)
push
and
jbe
inc
jg
add
fwait
push
fdivr
cmp
jle
xor
mov
jne
retf
(bad)
or
movs
cmp
hlt
fstp
dec
lahf
jne
lahf
adc
or
add
xchg
jnp
mov
aas
aaa
rol
xlat
shl
jle
nop
dec
sub
ror
xchg
hlt
adc
movs
cdq
(bad)
jmp
pop
inc
inc
aas
sbb
aas
pusha
(bad)
xchg
pop
pusha
inc
mov
addr16
or
inc
pop
and
sti
add
fs
dec
enter
fcompp
jecxz
lea
inc
inc
loope
jb
adc
push
sbb
add
or
outs
inc
loop
xchg
adc
cmps
rol
dec
not
and
xchg
out
es
sub
xor
jns
ret
mov
jp
leave
into
push
jne
loopne
clc
cli
cmps
or
in
fs
adc
into
xor
scas
outs
sahf
push
mov
pop
pop
mov
cmp
push
mov
jmp
push
mov
jae
mov
adc
cdq
fs
daa
lahf
arpl
stos
stc
xchg
imul
aam
cwde
out
mov
mov
dec
or
push
sbb
or
imul
mov
mov
cmovae
jge
xchg
enter
cmps
xchg
aad
jns
mov
and
aaa
add
dec
pop
iret
pop
xor
fincstp
lods
test
mov
(bad)
(bad)
movs
and
stos
sbb
in
mov
jno
cmp
xor
sar
cld
adc
into
and
ror
push
sub
mov
adc
ror
loop
dec
leave
pop
jb
sbb
jo
(bad)
and
ss
dec
mov
sar
pop
dec
ja
mov
(bad)
dec
mov
lock
cdq
fst
cwde
add
push
xchg
jecxz
stos
out
mov
dec
or
mov
and
(bad)
mov
add
les
sbb
ins
retf
int
pop
jg
mul
add
and
sbb
pushf
sub
sahf
xor
ret
sub
pop
cmp
outs
push
test
loop
loop
pop
scas
jo
xchg
fs
sahf
adc
test
push
aad
dec
out
jmp
mov
cmp
mov
xchg
add
push
outs
jge
xor
pushf
in
mov
loopne
iret
push
addr16
or
sbb
stos
mov
xchg
movs
cmp
or
addr16
jmp
fwait
sbb
mov
push
out
js
sub
xchg
inc
pop
enter
ret
add
mov
(bad)
int
popf
jne
mov
(bad)
lods
cmp
sbb
mov
mov
add
mov
sar
clc
shl
xor
xchg
mov
mov
sub
movs
or
xchg
jge
cmc
test
leave
mov
dec
hlt
test
mov
cmp
xchg
inc
xchg
lea
es
cmp
sbb
mov
pop
jmp
push
mov
adc
mov
(bad)
mov
mov
sub
or
adc
mov
pop
(bad)
dec
in
push
cmp
clc
inc
and
aas
dec
cmp
ds
adc
mov
pop
xchg
cmp
stc
xor
sub
fnstsw
or
clc
adc
int3
pop
lahf
jp
adc
pop
sub
cmp
inc
adc
repz
iret
js
mov
sub
sbb
out
or
in
push
imul
int
jmp
ins
ins
cmp
test
push
mov
loop
sbb
call
sub
or
icebp
inc
bnd
(bad)
test
sar
test
stos
jae
add
aas
xor
ret
cmp
cmp
mov
and
mov
fdivp
adc
iret
sahf
pop
rcr
lods
mov
int
sub
dec
mov
in
repnz
mov
xchg
pop
mov
adc
repnz
push
mov
jge
cmps
les
sbb
mov
jae
mov
retf
xor
gs
daa
xchg
or
add
daa
inc
daa
push
iret
sbb
rcr
push
std
fstp
xchg
cmp
lahf
pop
or
pop
cdq
xor
cmp
mov
test
hlt
jo
ficomp
add
(bad)
jecxz
ret
mov
and
jg
inc
pop
pop
mov
popa
scas
mov
add
stos
push
pusha
mov
mov
dec
mov
out
pop
push
(bad)
xchg
mov
das
sbb
xor
and
inc
loop
add
test
repz
cmps
fidiv
std
adc
das
retf
jb
add
call
mov
sub
cmp
or
jmp
sub
sbb
dec
push
xor
xor
(bad)
in
lods
lahf
and
add
int
cmps
int3
or
jno
sahf
xchg
jae
into
addr16
xchg
aas
mov
add
xchg
out
ja
ja
cmp
bound
dec
enter
scas
cmp
mov
(bad)
hlt
adc
cmp
sbb
mov
(bad)
das
mov
out
mov
repz
jmp
cmp
les
push
push
sbb
push
pop
and
in
add
adc
dec
inc
push
jae
jg
sub
test
shr
fldcw
xor
jg
repnz
inc
sti
test
xchg
xchg
out
mov
xchg
call
aam
lock
xchg
call
mov
lahf
movs
js
not
bound
imul
dec
pop
cmp
call
iret
sub
movs
shr
daa
(bad)
dec
sar
rol
pop
shl
xchg
inc
push
or
xchg
pop
cmp
into
mov
mov
and
cwde
mov
inc
mov
mov
and
call
out
test
sub
not
ss
jp
dec
cmp
jae
add
push
xchg
ret
cdq
rol
inc
test
lock
pop
mov
call
xor
sar
imul
sub
retf
daa
sbb
push
jnp
mov
and
adc
dec
cmp
cmps
sub
movs
cs
dec
xor
aaa
cmp
sbb
lea
sbb
sbb
aas
test
mov
push
pop
out
(bad)
fnsave
push
(bad)
xor
sub
xor
inc
pop
mov
jb
icebp
jno
sbb
pop
cmp
mov
mov
push
outs
loopne
adc
xchg
or
sbb
arpl
pop
add
outs
rcr
pop
pop
sbb
int3
inc
(bad)
ds
or
jmp
outs
pop
jl
mov
shr
inc
and
dec
xchg
out
fs
dec
push
outs
cld
mov
fstp
dec
push
pop
and
pop
pop
sub
xor
cdq
imul
and
pop
mov
rcr
or
retf
test
sar
dec
add
adc
loope
or
pop
js
lahf
es
sbb
mov
cmp
rcr
cmps
lds
out
hlt
cdq
call
in
imul
pop
push
fst
xor
retf
not
xchg
imul
jno
mov
inc
pop
pop
(bad)
repz
popf
aad
sbb
fcom
pop
adc
nop
test
mov
jg
mov
pop
sbb
sub
retf
inc
mov
jnp
adc
gs
dec
push
out
out
xchg
push
jg
push
outs
mov
mov
cmp
mov
sbb
iret
ds
and
out
loop
shl
call
pushf
rcr
dec
test
ror
sti
push
sbb
push
cmps
push
aaa
jnp
xchg
and
adc
dec
adc
push
adc
xor
ja
ss
test
lahf
imul
mov
add
sub
clc
div
sbb
xchg
mov
sbb
iret
scas
dec
jnp
hlt
jmp
fdiv
mov
jmp
lock
mov
jbe
jns
ds
pop
sbb
je
inc
jnp
in
leave
inc
pop
cmp
stos
shl
into
jnp
int3
mov
stos
(bad)
xor
loop
sub
xchg
int
and
out
repnz
xchg
push
idiv
mov
nop
jge
xlat
adc
cmp
sbb
(bad)
xchg
ins
and
inc
pusha
or
jns
nop
mov
adc
pop
pop
repnz
mov
pushf
cmc
cs
dec
movs
clc
je
dec
mov
jmp
stc
pop
mov
mov
popf
outs
mov
arpl
in
iret
xchg
cdq
hlt
mov
and
dec
mov
xchg
mov
sbb
inc
xchg
les
sub
iret
add
mov
rcl
jg
lock
jnp
ret
jno
mov
retf
jmp
push
(bad)
mov
push
push
out
mov
out
rep
adc
or
repnz
or
not
sub
mov
pop
mov
sar
mov
std
push
mov
sub
lea
outs
fwait
loop
xchg
pop
mov
std
mov
icebp
imul
jge
aam
jl
retf
pop
sub
ds
inc
cmp
fld
or
sti
cwde
adc
cld
(bad)
cld
jnp
mov
(bad)
pop
sub
mov
enter
fwait
push
jae
cwde
fs
dec
or
pushf
push
je
adc
aam
retf
ret
or
mov
int
fwait
xor
aad
mov
mov
jmp
fnsave
out
push
or
(bad)
adc
xor
sub
add
repnz
and
in
shr
out
shr
mov
and
rol
sbb
fld
stc
mov
mov
mov
add
mov
mov
xor
add
and
(bad)
inc
pop
cmp
out
push
(bad)
sbb
movs
add
mov
data16
xchg
and
dec
lods
dec
xchg
mov
xchg
and
clc
sub
and
or
cmc
test
jge
sub
aad
mov
and
cdq
add
dec
or
mov
sub
push
aaa
into
mov
sub
les
push
retf
push
add
(bad)
ds
cmc
mov
pop
jecxz
enter
pop
outs
mov
pusha
jbe
pop
or
push
call
loop
rcr
xchg
(bad)
loop
loopne
jecxz
mul
add
xor
mov
dec
mov
scas
add
(bad)
cmc
mov
cmp
xor
or
retf
mov
sbb
sti
inc
out
pop
in
ja
cmp
mov
sbb
dec
jnp
(bad)
repnz
mov
scas
call
xchg
test
xchg
xchg
add
nop
lock
les
rol
jecxz
xchg
inc
and
inc
scas
adc
mov
into
dec
inc
sub
and
(bad)
sbb
das
mov
push
lds
(bad)
out
and
xor
mov
sbb
inc
mov
and
dec
mov
in
adc
push
push
outs
sub
cld
push
pop
jno
aam
ss
sub
xchg
gs
fcom
ret
rcr
fwait
xchg
retf
out
inc
mov
(bad)
jmp
popa
popw
pop
mov
int3
aam
cwde
cmp
or
jo
fdiv
sub
movs
mov
mov
push
call
mov
inc
pop
dec
sub
aad
add
(bad)
mov
into
fcomi
clc
sar
leave
jge
adc
jge
gs
aam
add
sbb
push
ret
adc
dec
(bad)
rcl
mov
xchg
xor
push
pushf
(bad)
in
jmp
test
mov
mov
sub
mov
mov
add
mov
inc
inc
movs
(bad)
adc
test
mov
pop
push
cmps
fistp
enter
sub
mov
dec
std
inc
clc
bound
xor
adc
mov
fcomp
int3
(bad)
xchg
popa
cli
dec
xchg
xor
mov
mov
scas
icebp
stos
push
jmp
mov
les
adc
dec
pop
jmp
cmc
pop
test
dec
pop
test
ins
jbe
adc
fwait
inc
xlat
daa
pop
xchg
jb
push
jmp
add
out
or
out
mov
cmp
es
sub
xchg
mov
xchg
or
cmc
cmc
mov
movs
mov
cmc
pop
push
retf
or
mov
sub
jmp
gs
dec
mov
loope
hlt
mov
int
cmp
scas
mov
aaa
cmp
shl
pop
outs
mov
cmp
into
int
adc
(bad)
sbb
sti
pop
aam
test
mov
mov
dec
in
push
xchg
repz
ds
jo
pop
adc
outs
outs
sub
hlt
not
or
cmp
sub
lods
inc
loope
or
pop
mov
popa
mov
pop
call
adc
cdq
ret
sar
or
out
push
jge
mov
in
dec
mov
enter
push
and
or
xor
arpl
les
push
inc
std
imul
mov
and
ja
sbb
pop
pop
scas
push
(bad)
adc
xlat
scas
inc
std
jg
mov
(bad)
outs
pop
sahf
mov
fdiv
fidiv
loope
retf
xor
inc
push
rcr
adc
not
sbb
inc
or
ins
cmp
ins
out
test
and
push
pop
jl
mov
ja
cdq
cmp
rcl
sar
out
outs
popf
leave
push
xlat
mov
adc
out
mov
cmp
xchg
lea
push
into
cmc
movs
xchg
adc
test
inc
fisubr
popf
(bad)
push
cwde
rcr
jmp
mov
hlt
sbb
fsubr
mov
bound
pop
pop
es
push
sbb
cdq
pop
sti
retf
adc
mov
(bad)
inc
jnp
mov
(bad)
fdiv
xlat
(bad)
pop
out
sti
jle
std
push
fstp
std
jnp
and
inc
inc
dec
cmps
lods
push
dec
mov
and
mov
sub
adc
out
pop
dec
pop
bound
jo
lods
mov
and
pop
fld
addr16
add
dec
jge
push
sbb
stos
pushf
mov
xchg
pop
xor
and
jae
xlat
test
push
les
cmp
mov
jb
push
sbb
push
je
ins
and
push
pop
mov
jo
out
inc
ins
popf
aaa
imul
jmp
mov
(bad)
cld
dec
into
sar
je
test
mov
push
int
sti
sub
fild
pushf
leave
sub
es
cmps
scas
and
mov
mov
adc
xchg
push
inc
lea
mov
clc
pop
shr
pop
jns
es
sbb
call
shr
loope
mov
pop
xor
pushf
cmp
enter
pop
jno
lock
(bad)
mov
jne
mov
mov
(bad)
cld
in
les
jle
or
mov
pusha
and
adc
sub
xor
xchg
les
or
jb
and
dec
mov
mov
jmp
pop
jns
leave
mov
adc
mov
mov
dec
test
cwde
sub
ins
and
dec
pop
ficomp
aam
sbb
xor
cmc
shl
out
rol
sub
stc
push
repnz
push
pop
fnsave
les
xor
rcr
sbb
loop
sbb
loopne
retf
mov
and
ds
push
mov
add
sbb
xchg
push
inc
pop
inc
mov
cs
jmp
imul
in
xchg
cwde
cmp
(bad)
loopne
mov
cmc
hlt
cld
call
ficomp
test
sbb
das
fs
jno
lods
js
div
mov
aas
or
pop
dec
movs
retf
xchg
cdq
repnz
std
test
aad
inc
xor
in
push
mov
push
push
int
fisttp
sbb
xor
mov
cwde
fsubr
(bad)
push
push
(bad)
(bad)
ror
mov
movs
iret
fdiv
iret
mov
test
mov
mov
jp
xor
je
push
ins
pop
movs
add
pop
out
sbb
push
mov
mov
repz
mov
lea
pop
cmp
mov
ror
invd
xchg
cmp
(bad)
inc
mov
cmp
cmp
push
or
mov
(bad)
pop
inc
(bad)
sub
retf
push
jb
jnp
adc
nop
(bad)
push
movs
(bad)
jmp
inc
cmp
inc
adc
cmp
clc
fwait
mov
and
pop
adc
xor
add
dec
jp
push
mov
test
cmp
or
call
xchg
stc
mov
in
push
int
test
pop
hlt
mov
adc
or
fst
add
mov
rcr
jno
scas
iret
push
fmul
fimul
outs
mov
mov
sbb
add
les
shl
lea
sub
cmp
adc
add
mov
pop
lock
or
out
cmp
leave
es
adc
jo
cmp
mov
mov
or
aas
ffreep
lahf
dec
or
sub
aad
out
mov
dec
lods
push
xchg
add
fsub
(bad)
enter
(bad)
sbb
out
ja
call
sbb
sub
push
inc
jne
fisttp
outs
imul
fsubr
scas
sub
push
xchg
pop
mov
pop
fmul
jecxz
and
xor
xchg
inc
idiv
(bad)
cmp
xlat
adc
mov
cdq
cld
add
mov
mov
sbb
loop
pop
(bad)
popa
jo
mov
mov
mov
pop
out
push
call
call
push
jae
cs
jge
leave
fs
dec
(bad)
jmp
cwde
add
mov
jo
push
sbb
mov
inc
cwde
aas
jnp
pop
add
inc
push
xor
jno
cwde
mov
add
xor
jo
push
xchg
int3
sbb
inc
fsubr
mov
retf
(bad)
mov
xor
aam
sar
cdq
cmps
gs
push
dec
cs
mov
or
jne
lahf
inc
dec
daa
pop
mov
out
pop
push
and
xchg
call
xor
pop
sbb
les
into
jmp
adc
and
adc
xchg
xor
ja
call
lahf
pop
and
retf
sub
adc
sub
xor
bound
adc
push
cld
(bad)
cdq
dec
push
(bad)
data16
adc
inc
mov
push
cmp
cwde
or
dec
shr
mov
inc
dec
xchg
cdq
push
sub
add
lea
daa
sub
gs
jmp
(bad)
jne
scas
xchg
or
(bad)
int3
cli
lea
arpl
out
scas
xor
sar
mov
jle
gs
shl
jmp
jp
and
dec
popf
inc
jmp
push
push
loop
and
mov
clc
adc
stc
sub
inc
mov
dec
push
cmp
sub
sti
pop
cmp
sar
sub
and
inc
out
ret
scas
xchg
imul
(bad)
in
imul
es
xor
test
(bad)
lods
ins
push
dec
data16
cmp
cli
test
sti
sbb
mov
(bad)
mov
sub
outs
jne
fmul
jmp
jp
mov
push
or
xor
mov
into
in
jmp
fwait
bound
xchg
jbe
int3
or
scas
loop
dec
jp
bound
jo
adc
iret
inc
popa
xchg
(bad)
xchg
inc
pop
mov
stc
into
pop
sar
mov
jge
jmp
into
jle
mov
dec
out
lahf
aas
inc
popa
inc
sub
push
add
dec
cld
pushf
add
and
xor
in
fist
jmp
dec
jp
jne
push
repz
xchg
out
mov
shl
mov
add
idiv
daa
mov
xchg
mov
xchg
je
ret
in
popa
push
shl
(bad)
cmp
fidiv
add
pop
das
and
outs
push
test
aaa
(bad)
call
add
int
pop
mov
inc
jne
out
mov
jae
pop
or
les
shl
inc
xchg
fld
push
and
cmp
imul
hlt
add
in
xor
idiv
pop
jmp
sbb
add
mov
fld
pop
xor
push
mov
sti
inc
hlt
xchg
jae
add
in
mov
xchg
lahf
push
repnz
dec
push
pop
add
mov
imul
jne
xor
mov
xlat
pop
movs
aaa
pop
pop
mov
(bad)
ds
sub
repnz
push
mov
adc
daa
addr16
pop
xchg
clc
cmp
jle
ss
dec
test
outs
xchg
mov
pusha
adc
ret
push
fist
sub
or
(bad)
xchg
in
mov
or
and
sbb
(bad)
out
nop
pushf
outs
scas
loop
xchg
ret
push
mov
cmps
enter
cmp
push
pop
(bad)
scas
mov
fcom
test
sbb
ret
pusha
mov
ja
imul
push
bound
or
add
mov
dec
shr
jnp
arpl
push
retf
or
adc
lods
(bad)
shl
fiadd
jl
ret
sbb
sahf
dec
call
cmp
xchg
or
jns
mov
push
dec
iret
pushf
dec
mul
mov
jmp
pop
sbb
stos
ds
neg
add
cmp
jge
xchg
repz
xchg
sti
xchg
push
in
out
ret
scas
pop
cmp
pop
inc
cwde
scas
jg
call
enter
repz
push
call
pop
jmp
sub
cmps
jb
mov
or
daa
pop
add
ret
mov
fmul
fimul
test
jnp
imul
pop
jg
cs
imul
sub
call
push
mov
stos
mov
xor
rcr
lahf
mov
popa
inc
mov
mov
adc
mov
gs
push
int3
push
xchg
add
retf
out
jo
jmp
leave
inc
ja
lahf
mov
hlt
fsub
out
xchg
inc
loope
daa
mov
ss
jno
mov
aaa
add
jp
scas
adc
sub
push
repnz
push
push
xor
jne
xchg
jmp
daa
mov
xchg
and
sub
mov
mov
add
mov
rcl
jno
dec
cmp
icebp
in
loopne
cmp
jge
pop
or
shl
push
(bad)
xchg
mov
leave
rcr
mov
out
les
les
jae
xchg
(bad)
dec
daa
add
ins
mov
jle
mov
jle
sub
cmp
jp
or
or
pop
repnz
stos
js
adc
fcom
je
scas
sbb
xlat
or
nop
pop
add
loopne
add
iret
sahf
pushf
lods
movq
loop
(bad)
imul
leave
mov
jg
fwait
jne
jmp
arpl
pop
mov
das
scas
call
add
dec
movs
nop
mov
(bad)
dec
push
cmp
fstp
inc
sbb
push
popa
int
mov
jns
popa
adc
fimul
dec
pop
cmps
and
sbb
fistp
sub
xor
call
enter
add
add
outs
imul
pop
add
xchg
jmp
push
call
cmp
adc
add
adc
mov
xchg
std
int3
aas
cmc
movs
ret
inc
add
mov
mov
dec
cld
mov
mov
and
in
inc
xor
sbb
add
hlt
jno
mov
jne
add
imul
pop
sub
and
into
cmps
adc
xor
arpl
mov
dec
lods
cmp
push
xchg
inc
inc
enter
repz
push
adc
jns
adc
dec
and
and
xor
cmp
and
addr16
in
pop
leave
out
or
mov
add
ja
pop
rcl
repnz
out
sbb
sub
cmps
fidivr
pusha
(bad)
cmp
adc
adc
add
out
(bad)
mov
push
cmps
mov
xchg
inc
jnp
xlat
mov
in
or
(bad)
mov
or
bound
(bad)
cmp
cmps
jb
mov
push
mov
out
jmp
ins
xor
outs
stos
inc
cli
xchg
rcr
outs
jg
push
enter
xchg
jecxz
mov
(bad)
scas
cmp
pop
nop
mov
mov
(bad)
push
mov
pusha
dec
mov
lea
xor
outs
popa
mov
and
imul
xchg
push
adc
or
mov
shl
jo
cmp
xor
adc
xor
push
inc
stos
icebp
pop
in
add
sub
xchg
pop
das
push
lea
mov
out
and
(bad)
jns
test
mov
fstp
out
add
jno
inc
inc
xor
shl
mov
fistp
ins
enter
nop
cwde
push
sub
xor
(bad)
fstp
js
retf
loopne
call
ds
fstp
sbb
jge
pop
jne
sbb
mov
xor
dec
inc
mov
popf
clc
int3
push
jecxz
cmp
dec
je
ret
imul
imul
popf
mov
cld
out
push
(bad)
dec
add
or
movs
xor
jl
lea
xchg
mov
cli
scas
lea
mov
jecxz
push
and
adc
jno
pop
mov
jmp
in
mov
sbb
repnz
into
aam
leave
nop
inc
cmps
(bad)
cmps
adc
in
xor
mov
aas
rol
cmps
jecxz
xchg
movs
adc
call
pop
cwde
aas
jns
in
mov
pop
repnz
cmps
lods
int3
lds
je
xor
jnp
mov
xor
fidiv
fld
sub
mov
xchg
pop
stc
dec
or
popf
cmps
jmp
imul
fdiv
mov
or
pop
imul
nop
sub
ss
aas
inc
mov
dec
loopne
daa
inc
xlat
lea
inc
lds
je
jp
call
(bad)
add
les
(bad)
leave
add
push
ins
in
adc
push
rcr
mov
mov
sub
xchg
adc
in
sub
push
fdiv
jmp
inc
add
out
push
cdq
data16
push
mov
ins
xchg
scas
cmp
ret
xor
adc
(bad)
imul
and
mov
mov
das
jg
sbb
add
xchg
rcl
in
stos
or
xlat
mov
sub
mov
clc
sub
or
ss
sbb
xchg
jl
(bad)
outs
ds
dec
mov
xchg
cmps
and
mov
cli
adc
imul
gs
sti
mov
add
inc
es
dec
sub
sbb
push
test
ret
fisub
cmc
xchg
in
inc
push
sub
loopne
mov
(bad)
mov
in
bswap
loope
mov
xor
pop
(bad)
xor
aaa
add
pop
aas
js
sbb
lea
pop
aad
inc
pop
xor
js
push
lods
jo
and
sub
cmp
push
push
or
adc
and
out
inc
arpl
add
xchg
(bad)
sbb
mov
mov
mov
xchg
sbb
sbb
mov
icebp
ins
test
lahf
push
cli
inc
adc
call
inc
shl
(bad)
js
and
inc
fisttp
and
cmc
out
nop
mov
ss
mov
pusha
sbb
popf
rcl
mov
xor
pop
(bad)
rol
retf
sub
fild
test
xchg
adc
in
push
idiv
or
outs
push
cmp
mov
in
sar
dec
mov
sbb
popa
int3
outs
jnp
adc
(bad)
dec
jne
jno
push
pop
lahf
into
enter
jmp
inc
add
sub
lock
cmp
xor
dec
fidiv
add
add
add
loope
(bad)
out
lods
adc
push
or
mov
aam
jmp
aam
cs
lock
ss
xchg
jmp
idiv
ret
out
add
int
fadd
sbb
(bad)
call
test
xor
mov
outs
cli
sbb
adc
mov
repnz
cmps
add
jb
pop
jp
and
ja
and
(bad)
adc
dec
cmp
cld
add
aam
push
adc
adc
mov
push
and
repnz
jp
inc
push
mov
push
nop
jb
cmps
xchg
xchg
loop
movs
shr
stos
mov
sbb
push
das
push
dec
test
mov
call
mov
sbb
jle
mov
out
lahf
daa
pop
push
xchg
es
mov
xlat
xchg
loopne
mov
push
out
dec
loop
sbb
movs
push
dec
cdq
xlat
mov
aam
(bad)
fild
mov
push
test
addr16
add
into
pop
sub
paddusw
push
and
sbb
inc
cli
std
lds
jo
fneni(8087
jb
jle
call
lahf
out
cmps
add
sub
repnz
jg
push
inc
imul
push
jmp
(bad)
in
sub
lock
retf
test
push
out
into
mov
aas
popa
popf
clc
test
jbe
sub
adc
cmc
pop
pop
lods
fnstcw
pop
mov
sub
push
xchg
or
fisttp
xchg
mov
sub
stos
mov
xchg
push
mov
out
and
dec
mov
sub
sbb
rcl
jmp
push
pusha
jne
add
test
dec
movntps
out
shr
out
add
cwde
std
cmp
sti
xor
adc
sti
dec
push
xor
or
hlt
xchg
outs
push
mov
in
ins
xchg
cmp
sub
aas
jmp
fmul
xchg
aas
std
into
push
(bad)
fistp
push
popa
loopne
inc
sbb
cmp
cmp
fdiv
lock
xchg
fidivr
adc
mov
das
lea
jp
xchg
js
jno
push
or
add
or
loopne
lahf
xor
push
hlt
sub
xchg
sub
xor
repz
dec
repz
inc
mov
mov
ror
push
jnp
sbb
sbb
jo
popf
stos
imul
pop
push
enter
lock
mul
inc
popf
ror
xor
repnz
out
ja
sbb
(bad)
std
or
add
lahf
or
lds
xchg
cwde
xor
xchg
dec
dec
xor
neg
adc
sbb
in
and
sahf
mov
leave
sar
out
ficomp
lods
xor
dec
iret
out
xchg
inc
push
pusha
(bad)
jo
gs
aad
jae
mov
scas
lock
cdq
shr
lahf
lea
ret
jle
push
rcr
mov
fadd
call
hlt
sbb
add
mov
xchg
and
es
dec
jmp
push
pop
cmp
ins
test
iret
mov
or
adc
loope
faddp
push
out
imul
inc
or
or
loopne
ret
out
add
jns
mov
cwde
data16
ret
inc
in
in
aas
cmc
gs
cdq
ds
pop
dec
mov
aaa
dec
jne
inc
push
fs
lea
mov
test
mov
sar
retf
ss
aas
pop
aaa
(bad)
sbb
inc
loope
aas
and
jb
adc
cmp
mov
nop
cdq
test
call
dec
ss
cmp
push
je
xchg
(bad)
ins
xchg
jmp
pushf
cli
jne
out
adc
aas
(bad)
jne
sbb
nop
loope
mov
xor
in
xchg
dec
je
jge
repnz
adc
sbb
xchg
mov
push
mov
push
pop
xor
test
hlt
movs
cwde
int3
pandn
add
fisttp
add
shr
adc
add
inc
sub
mov
adc
sahf
std
std
push
xlat
test
fld
and
daa
push
lea
aad
repz
or
out
add
lods
arpl
popf
add
pop
xchg
cwde
sub
xchg
sbb
add
cdq
push
xchg
je
xchg
fld
je
sub
dec
xor
jg
in
xchg
outs
loopne
das
fwait
call
in
pop
nop
adc
aam
mov
push
dec
jp
retf
in
mov
enter
mov
test
xor
lock
mov
jne
call
xchg
xchg
push
retf
xor
or
push
jl
aaa
and
stos
(bad)
sub
(bad)
sar
stc
inc
jg
fsubr
cs
out
mov
jns
jecxz
pushf
jp
jmp
mov
repnz
leave
aaa
repz
or
cmp
or
mov
mov
out
sub
or
inc
mov
jmp
pop
lods
or
mov
xor
retf
xchg
or
bound
vpsadbw
aam
aad
(bad)
push
push
pop
sub
add
push
cmp
into
mov
jbe
imul
out
sub
leave
movs
mov
div
sub
and
sar
adc
cmc
xchg
sub
inc
and
inc
shl
int3
or
sub
cli
cmp
pushf
lods
shl
call
jb
xor
add
pop
xor
jb
stc
cmp
outs
jno
dec
ins
in
int
fnstcw
dec
push
loope
or
shl
pop
jb
push
mov
mov
mov
pop
cmp
aad
bound
jae
sub
sub
sar
push
mov
cmp
cli
stos
xchg
push
into
pop
(bad)
mov
cmp
sub
ins
cmp
rol
leave
or
rol
test
fucomip
div
gs
neg
scas
call
push
and
mov
cmps
xchg
pop
dec
cmps
lds
leave
adc
and
rcr
sub
das
mov
(bad)
mov
aam
sub
les
cwde
repz
and
sub
mov
popa
stc
inc
out
cli
ss
repnz
dec
outs
ret
xor
cmc
in
dec
mov
out
cmps
fs
adc
call
imul
movs
scas
cmc
fdivrp
push
pushf
cmp
cmp
push
into
inc
leavew
mov
and
push
outs
test
xor
(bad)
mov
sti
pop
loopne
adc
mov
leave
popf
push
out
stc
xlat
mov
ins
inc
in
cmp
mov
jae
mov
jmp
fadd
stos
sub
retf
ficom
mov
retf
aaa
jmp
xor
ja
(bad)
push
jl
cld
cmp
aaa
mov
jns
ja
aas
and
and
bnd
fimul
fsubr
es
sbb
(bad)
cld
cmc
push
xchg
out
pop
xor
adc
xlat
(bad)
lock
xchg
mov
pop
fdivr
jno
sbb
or
mov
ror
(bad)
test
or
icebp
jo
ficomp
(bad)
mov
shl
icebp
or
aas
mov
movs
jmp
push
or
jmp
add
xchg
pusha
test
(bad)
mov
arpl
ret
sub
pushf
in
aaa
sub
and
dec
sbb
xchg
push
cmp
pusha
sub
xchg
and
sti
sbb
leave
pop
sbb
out
mov
out
jmp
sbb
clc
push
mov
jmp
stos
lea
push
lock
pop
sbb
sbb
pop
stos
push
mov
mov
repnz
mov
mov
push
dec
or
or
jnp
out
sbb
push
std
aad
int3
xor
sub
cli
call
sbb
push
adc
cs
gs
pop
jae
daa
mov
retf
mov
add
push
int
add
test
popa
pop
(bad)
and
rcr
lods
push
js
or
mov
out
adc
adc
and
fidiv
icebp
sbb
inc
pop
popa
pusha
sub
dec
push
rol
sbb
and
jl
aam
bound
jmp
mov
pop
jg
ret
test
cli
not
inc
xor
xor
pusha
arpl
jae
push
int
scas
hlt
mov
jae
pop
neg
xor
push
nop
cmp
jg
and
mov
mov
mov
aad
adc
inc
mov
test
jne
out
add
ret
jns
sbb
jecxz
addr16
push
cmc
cmp
mov
or
cmps
mov
jg
test
aas
pop
push
push
sub
add
lock
call
int3
mov
add
mov
cmp
pop
inc
les
fwait
shr
aad
enter
popa
pop
adc
jmp
and
lods
cmp
std
addr16
std
xor
push
lods
push
sub
nop
jmp
push
cmp
mov
daa
xchg
xor
sub
pop
repz
nop
or
mov
push
ja
dec
not
(bad)
(bad)
jmp
repz
mov
or
and
in
cdq
int3
and
xchg
and
jne
ins
add
jne
div
shl
mov
sbb
aam
js
mov
push
adc
mov
loope
jae
mov
loope
xrelease
pop
in
or
adc
inc
mov
dec
inc
xlat
sbb
fs
imul
ret
scas
rcr
mov
xchg
sbb
fadd
sub
and
sbb
cmp
sbb
mov
(bad)
push
ret
sahf
xor
(bad)
lock
ins
rcr
adc
xor
fild
(bad)
enter
aam
inc
mov
mov
pop
xor
out
scas
sar
jns
div
xor
xor
imul
adc
or
popa
xchg
sbb
sbb
int3
xor
jne
inc
add
(bad)
je
jb
xor
fstp
mov
xchg
in
icebp
jl
dec
cmps
stos
mov
add
dec
cmc
das
aas
lds
dec
xor
jle
aam
stc
xchg
or
repnz
and
dec
ds
fidiv
mov
sbb
push
repnz
inc
xor
and
daa
sbb
(bad)
mov
push
clc
jnp
mov
sti
hlt
jecxz
add
or
dec
xchg
bound
sahf
jno
xchg
add
xchg
(bad)
cmp
mov
or
icebp
(bad)
mov
pushf
mov
pop
sar
adc
or
ds
cli
add
ret
jae
inc
add
cmp
sar
fwait
add
dec
data16
loop
shl
movs
sbb
mov
fdiv
sub
cmc
mov
adc
std
jle
mov
or
mov
xlat
cmp
aad
dec
mov
sbb
shl
cmp
in
mov
jae
mov
fs
or
cs
xor
int
mov
dec
add
call
push
push
shl
mov
imul
hlt
stos
add
pop
lds
or
inc
pushf
sti
mov
add
ja
mov
repnz
test
icebp
push
adc
call
dec
bound
inc
bound
mov
js
(bad)
loop
dec
in
xlat
cmp
sbb
pushf
pop
pop
mov
shr
sub
xchg
call
int3
out
out
fimul
dec
call
aam
push
hlt
pop
hlt
jae
in
push
adc
pop
xor
mov
mov
retf
aas
pop
sbb
ins
xchg
popf
push
aaa
sub
push
sub
xor
icebp
neg
sub
add
jge
and
jnp
or
repnz
leave
pop
(bad)
adc
add
ja
xor
test
out
pop
or
das
neg
stos
test
pop
rol
imul
imul
adc
ret
and
fimul
out
gs
jge
jmp
sub
and
neg
shr
fwait
in
mov
out
sub
jge
push
dec
test
push
sahf
cmp
jle
ins
mov
jno
xchg
pop
shl
xor
and
jns
pop
mov
cdq
inc
sub
xor
movs
xchg
jnp
xor
and
mov
push
in
pop
repnz
jae
xchg
retf
and
cld
mov
je
push
push
pusha
xchg
dec
(bad)
sbb
outs
jmp
sub
ret
push
jle
je
jnp
(bad)
push
mov
sub
(bad)
cmps
xchg
pop
xor
lock
outs
jp
loope
dec
mov
leave
scas
cdq
ins
sbb
ret
out
test
fiadd
ja
outs
adc
cmp
inc
jmp
sub
sbb
stc
mov
adc
shl
fsubrp
icebp
rcl
push
push
in
into
mov
in
cwde
fs
bnd
inc
jno
psraw
ja
test
out
pop
out
inc
or
mov
sub
add
xchg
enter
dec
mov
or
pop
and
aas
jle
cmp
cmp
js
jns
js
xor
mov
ja
mov
into
rcl
fsub
ss
lds
outs
in
or
inc
jmp
push
dec
sub
outs
dec
push
pop
xchg
mov
lahf
mov
je
jmp
cmp
repz
clc
push
push
jb
xlat
in
std
and
and
bound
rol
mov
adc
inc
sbb
leave
jno
xchg
jbe
lock
jno
ffreep
jl
add
cmp
xchg
inc
cmp
fs
dec
call
xchg
jae
push
dec
lock
inc
jb
or
jo
push
inc
sbb
mov
mov
mov
cwde
mov
push
inc
int3
in
mov
pop
adc
(bad)
out
test
enter
cdq
sahf
sub
jle
mov
cmp
ror
jecxz
cli
sub
xchg
inc
xor
icebp
ret
sub
sahf
push
jmp
xor
mov
lea
fs
loope
push
neg
mov
jno
xchg
dec
jl
mul
(bad)
leave
jl
add
or
cmps
les
jbe
enter
inc
xor
loope
xor
rcr
in
jnp
mov
xlat
dec
jp
out
mov
and
popa
(bad)
mov
cs
aad
mov
(bad)
mov
int
call
addr16
xor
sub
dec
aas
lock
mov
sbb
xor
ins
repz
jbe
mov
dec
xchg
enter
lahf
sbb
add
dec
dec
addr16
push
movs
into
dec
out
dec
jp
ror
adc
xchg
sbb
out
add
dec
fld
dec
or
push
das
and
rol
pop
cmp
jg
(bad)
repz
dec
and
(bad)
mov
mov
test
pop
in
sub
shr
push
(bad)
jae
push
mov
(bad)
push
je
adc
cmp
call
int3
(bad)
in
out
std
jns
xchg
js
push
cmp
jbe
inc
jns
jo
and
xor
outs
add
popa
stos
inc
mov
inc
and
push
cmps
sub
outs
inc
lock
xchg
jmp
sbb
mov
add
les
pop
jae
in
aas
pop
and
and
push
push
xchg
inc
push
dec
mov
add
or
imul
add
(bad)
cmp
jmp
sbb
xor
fild
xor
add
xor
adc
sub
in
stos
jmp
mov
mov
xor
mov
int3
inc
in
jge
retf
push
mov
mov
cmp
icebp
scas
(bad)
call
xor
sbb
sbb
sbb
adc
loop
loope
sbb
movs
in
sbb
fild
(bad)
mov
cmp
mul
mov
ins
mov
cld
mov
mov
pop
mov
cld
inc
push
dec
xor
pop
jns
std
jne
out
mov
ror
jb
or
push
in
xlat
inc
(bad)
outs
sbb
jns
xchg
mov
sbb
sub
enter
adc
jbe
xor
xor
add
pop
mov
cli
bnd
jnp
scas
add
jg
inc
ss
mov
inc
or
aad
inc
inc
jmp
cmp
movs
jge
fadd
ins
loope
jg
dec
popa
jg
mov
movs
dec
xchg
out
jge
mov
jnp
pop
jp
xor
ss
mov
cmps
sub
mov
pop
inc
mov
scas
mov
xor
bound
xchg
mov
cmps
iret
sbb
mov
adc
iret
dec
fisub
aad
sub
inc
fist
xchg
pop
call
lea
push
pop
js
mov
xor
mov
xchg
sbb
jns
(bad)
aad
xchg
cmp
sbb
lock
into
jmp
adc
ins
or
les
jo
mov
cld
jle
pop
lahf
sub
test
mov
into
je
leave
push
jne
cmc
fucomip
daa
mov
sbb
jno
inc
hlt
jo
and
and
(bad)
loope
int3
xchg
int3
scas
adc
add
aas
dec
call
pop
mov
mov
and
pop
icebp
jle
(bad)
retf
push
mov
js
jmp
push
xor
iret
inc
call
mov
pop
push
mov
add
sub
jmp
mov
fsubr
pop
dec
xor
lods
into
lods
mov
jns
or
mov
push
pop
scas
ins
xchg
mov
cmp
sub
jb
jg
push
ja
pop
out
mov
xor
or
pop
aaa
adc
sbb
xchg
ss
pusha
dec
mov
(bad)
xchg
ss
loopne
cwde
pop
std
jno
jmp
movs
sbb
test
data16
add
(bad)
add
fild
jbe
add
or
rol
mov
repnz
nop
jbe
cmp
push
cmp
addr16
xchg
mov
mov
adc
xlat
loope
and
or
or
repnz
es
imul
shl
mov
jne
pop
fdivr
jp
adc
xor
mov
popa
mov
std
ja
addr16
sbb
dec
or
adc
arpl
clc
xchg
movs
adc
add
pop
mov
(bad)
stc
push
and
pop
xor
icebp
shl
pusha
mov
sbb
xchg
lds
xchg
fidivr
fcomp
xor
xchg
in
hlt
(bad)
(bad)
jmp
add
jnp
or
loop
pop
mov
jne
into
mov
adc
and
lods
loop
cmp
mov
and
jge
popf
mov
jmp
jno
int3
ds
adc
out
icebp
adc
sub
pop
(bad)
adc
push
ror
inc
test
mov
mov
jmp
push
xchg
mov
rol
adc
aad
or
mov
jmp
xlat
fidivr
lahf
dec
add
out
cmps
ds
or
inc
adc
sbb
test
in
jmp
mov
jmp
mov
inc
xor
or
pop
xchg
dec
hlt
(bad)
ss
movs
cmp
out
pop
enter
je
pop
xchg
mov
fidivr
dec
popf
push
mov
mov
scas
cmp
push
ret
popf
cmp
stos
lods
jp
push
push
inc
sbb
(bad)
xchg
jmp
sbb
mov
inc
enter
jl
pop
aam
test
repnz
add
jo
in
add
mov
cmps
mov
rcpps
sub
mov
xchg
ror
cmps
inc
mov
fwait
mov
dec
add
cmc
cs
push
xchg
daa
ret
cmc
aas
jnp
push
lock
lds
fcompp
inc
movs
neg
jb
cld
xchg
test
sbb
daa
xchg
pop
fcmovu
(bad)
imul
cmp
pop
repz
test
and
ror
sbb
fcomi
sahf
jl
mov
nop
mov
pop
(bad)
sub
inc
in
mov
sbb
add
inc
mov
push
adc
jecxz
movs
aad
xor
dec
lock
dec
dec
loopne
and
je
cmps
push
aaa
sub
or
push
push
int
pushf
xchg
loop
lock
outs
addr16
xchg
clc
xchg
fwait
rcr
repnz
push
push
xor
int3
dec
bound
lea
(bad)
sbb
and
jmp
add
pop
fdivr
add
sahf
shr
push
pop
and
xor
sub
adc
push
repz
(bad)
mov
test
mov
and
sbb
add
mov
jns
mov
out
xor
push
movs
(bad)
ja
jnp
push
cmp
add
or
jno
leave
xor
aas
nop
das
arpl
sbb
adc
xchg
xor
loop
ret
imul
test
cmp
mov
pop
loopne
rol
cmp
ret
test
mov
ret
enter
jle
(bad)
fs
aaa
mov
inc
nop
in
test
cmp
mov
(bad)
mov
jbe
hlt
adc
les
push
mov
and
imul
mov
push
dec
fdivr
ja
fsub
mov
cdq
xchg
out
sbb
mov
mov
dec
aad
mov
xchg
add
scas
xor
jecxz
aam
jmp
fstp
sar
xor
adc
pop
pop
loope
mov
sbb
push
movd
test
push
fdivrp
inc
retf
cmc
mov
jo
ins
test
stos
mov
sub
je
cmp
jmp
scas
fnstcw
dec
add
dec
ja
pop
mov
aas
add
jg
pop
dec
adc
leave
(bad)
xchg
std
xchg
call
add
test
fdivr
hlt
rcr
out
cmp
mov
lahf
mov
xchg
cmps
dec
(bad)
leave
aas
cmp
enter
outs
hlt
push
mov
xchg
adc
adc
leave
inc
mov
mov
push
sbb
ret
inc
rcr
loope
cs
adc
adc
iret
cli
push
aas
ret
jno
repz
lods
imul
inc
mov
or
push
pop
mov
pop
or
push
into
mov
nop
(bad)
push
jle
sar
sahf
(bad)
and
aad
add
push
sub
adc
inc
xchg
dec
std
ss
repz
jae
shl
adc
in
or
fcomp
pop
mov
scas
lods
ds
std
and
repz
leave
dec
int
imul
das
retf
mov
mov
fidivr
js
hlt
push
push
jl
jmp
ds
push
adc
stos
arpl
sub
sti
into
repnz
std
jg
imul
jecxz
std
mov
sub
ins
sub
into
int
imul
mov
(bad)
rol
mov
pop
rcr
icebp
retf
iret
mov
sti
and
lock
call
push
push
mov
adc
dec
aam
ds
int
mov
sbb
sar
loop
ins
scas
lods
and
sbb
xchg
cmp
in
js
push
dec
pop
push
jg
in
out
mov
add
jp
fs
add
add
retf
sub
sub
xchg
mov
xor
jbe
data16
add
iret
pop
pop
(bad)
xchg
adc
bound
hlt
mov
ret
es
rcl
jbe
xor
scas
rol
mov
retf
xchg
fs
jmp
adc
aad
jl
sahf
aad
adc
out
push
(bad)
jmp
into
call
adc
push
sbb
lods
mov
mov
dec
push
mov
ja
or
add
aaa
shl
pop
pop
push
jns
cmps
mov
push
addr16
aad
sbb
pusha
retf
test
sub
rol
sub
dec
xor
xchg
or
into
and
push
mov
in
push
jg
cwde
ret
test
xor
jge
leave
ret
mov
ins
enter
sub
repz
mov
(bad)
enter
retf
dec
mov
jmp
(bad)
mov
inc
mov
or
mov
inc
xlat
inc
dec
std
loop
dec
(bad)
sub
popa
add
shl
(bad)
movs
jne
lods
mov
xchg
mov
or
loop
pop
je
pop
shr
jmp
mov
add
xchg
shl
cmps
pop
dec
repnz
dec
dec
ins
ja
add
dec
xchg
inc
xor
fistp
pop
pop
leave
inc
sbb
fisttp
mov
dec
jbe
xchg
mov
lea
push
retf
loop
fmul
pusha
loopne
repz
scas
in
pop
shl
js
pop
cwde
aas
and
test
mov
jae
outs
das
or
scas
push
repz
mov
stos
adc
or
mov
icebp
out
sub
sbb
sbb
inc
inc
cmps
sub
inc
je
repz
test
jmp
adc
aam
cwde
popa
and
adc
mov
(bad)
out
and
jbe
fldcw
movs
lahf
mov
inc
inc
mov
xchg
xor
inc
jl
in
push
sub
call
sub
pop
xor
not
ds
std
or
mov
xor
fwait
mov
lods
pop
adc
clc
clc
outs
push
push
not
arpl
pop
xor
stos
mov
and
repnz
aad
loope
pop
xchg
mov
nop
and
les
daa
xchg
in
call
adc
in
cmps
js
mov
dec
cmp
loope
(bad)
out
sti
pop
or
daa
(bad)
loopne
call
cwde
stos
call
inc
repz
popf
or
jge
xchg
fst
fnstcw
push
pusha
or
push
scas
xchg
push
mov
dec
sbb
out
dec
push
jg
rcr
mov
add
je
xchg
adc
aad
repnz
fldcw
inc
repz
imul
(bad)
jo
jne
add
sar
sar
aam
fdivr
jp
enter
jnp
stc
jecxz
enter
xor
and
jmp
jmp
mov
xor
and
cmps
jl
push
dec
addr16
add
dec
add
jecxz
adc
fisttp
and
das
jnp
push
jp
xor
loop
(bad)
xchg
push
add
js
adc
dec
xor
jns
or
jle
and
mov
in
call
jmp
cmp
outs
dec
jle
mov
cmc
out
aam
(bad)
jmp
hlt
inc
mov
lds
dec
xchg
cmp
int
cmp
test
lea
fimul
movs
fucompp
sti
inc
mov
shl
rol
and
dec
adc
or
aaa
pop
stos
ins
and
jecxz
jecxz
arpl
in
add
mov
hlt
lahf
ds
cmps
nop
push
jno
xchg
movs
mov
xchg
hlt
xchg
push
out
mov
fistp
dec
out
add
jmp
push
pop
or
popa
lea
cs
clc
lods
dec
repz
fldenv
lea
movs
inc
daa
or
outs
(bad)
repz
aas
jmp
cmc
dec
xchg
xor
rcl
sbb
jbe
cmps
inc
scas
xor
outs
cmc
aam
stos
sub
aam
or
pop
cli
lea
jl
ins
stos
jl
push
dec
mov
retf
loop
cmp
lods
pop
out
jg
mov
fisttp
inc
hlt
dec
mov
and
frstor
mov
mov
pop
retf
mov
sub
jnp
pop
fild
call
test
adc
pop
push
or
imul
sub
cmp
or
and
and
pushf
enter
pop
hlt
sbb
loope
fdiv
nop
xchg
call
push
pop
pop
ds
push
mov
dec
adc
mov
push
in
fnsave
pop
xchg
jns
ret
test
push
mov
js
cmp
call
bound
jb
mov
push
push
cmps
fmulp
fcom
lods
hlt
cmp
xor
(bad)
mov
or
mov
aad
push
push
loop
xor
lds
ret
push
push
movs
and
clc
in
jmp
popf
loopne
jno
mov
pop
es
lock
lahf
in
add
out
sub
test
out
fstp
mov
inc
mov
inc
ret
mov
push
mov
jg
push
int3
push
not
cmp
int3
sbb
xor
jnp
int3
mov
jnp
xor
(bad)
mov
in
sahf
jl
fisttp
jne
shl
fwait
mov
xchg
cmp
add
sbb
jb
jmp
(bad)
clc
jb
repnz
leave
repz
adc
scas
test
pop
fwait
movs
test
js
add
sti
lods
cmp
outs
gs
cmps
mov
dec
xchg
lods
push
inc
add
dec
cmp
mov
or
ret
sub
inc
movs
je
movs
jmp
sahf
pop
jp
sub
daa
mov
mov
js
xchg
push
sbb
shr
push
sbb
lds
stos
fisub
pop
push
adc
jbe
xchg
pushf
cld
mov
outs
call
lahf
or
mov
imul
scas
(bad)
xor
loop
pop
pop
arpl
jnp
sbb
jb
ret
inc
sbb
les
clc
add
pop
cmc
aaa
bound
xchg
and
in
aas
push
test
add
jns
sub
ins
xor
aam
in
push
jmp
cmp
pop
sar
(bad)
ror
fld
pop
in
dec
inc
mov
retf
pusha
dec
ss
mov
ins
mov
(bad)
add
xlat
fwait
and
fcom
retf
jg
jnp
mov
fld
inc
ins
push
js
push
in
aaa
out
leave
adc
mov
pop
imul
xor
jno
push
sbb
(bad)
rol
cmp
retf
jecxz
es
jns
bound
cdq
loope
mov
lahf
jg
jb
lods
lock
sbb
addr16
das
cmps
pop
mov
adc
xor
cli
lahf
mov
pop
sub
retf
(bad)
adc
mov
lahf
(bad)
and
add
add
stos
pushf
imul
sbb
add
imul
scas
repnz
dec
data16
adc
dec
jl
test
ret
and
(bad)
outs
inc
add
adc
xor
lods
sbb
fbstp
xor
pop
push
stos
mov
stc
dec
push
add
sbb
cdq
xor
dec
dec
(bad)
aam
cmp
jno
xchg
shl
je
xchg
mov
push
or
test
pushf
leave
mov
jno
pop
or
and
or
popa
mov
adc
and
mov
retf
ret
xchg
js
dec
int3
stos
(bad)
repnz
or
push
jae
std
out
xchg
(bad)
sar
jo
shl
jmp
dec
ss
ss
mov
or
push
sbb
lock
test
repz
popf
inc
cmc
adc
adc
sbb
lds
test
xor
mov
mov
fsub
(bad)
(bad)
mov
fmul
leave
pop
adc
data16
ror
or
push
in
ins
mov
movs
or
outs
jae
xchg
fnsave
rcr
dec
inc
push
ja
retf
sub
add
or
dec
dec
mov
xchg
add
pop
cmp
adc
dec
cmp
repz
push
adc
sbb
(bad)
(bad)
mov
cmp
sub
sub
fsub
fsubr
lea
test
push
rcr
pop
(bad)
stos
sub
in
outs
sbb
shl
cwde
aam
add
movs
inc
dec
(bad)
lea
xchg
(bad)
sub
clc
das
das
iret
ret
or
push
cli
jmp
stos
ds
mov
push
xchg
out
scas
(bad)
ror
lods
fcomp
push
je
adc
push
aam
lds
jmp
mov
(bad)
gs
scas
pop
mov
pop
and
dec
cmp
sti
repz
mov
(bad)
fld
das
and
cmp
mov
shl
loop
loopne
jbe
scas
mov
out
jne
push
sbb
mov
pop
jl
inc
sub
stos
pop
and
out
adc
add
xor
in
rol
sbb
ret
cmp
ins
movs
sbb
push
call
jne
mov
out
and
enter
movs
(bad)
jnp
add
test
imul
sub
mov
jbe
fwait
bound
in
repnz
aad
mov
leave
or
lds
mov
adc
push
int
jge
mov
sub
sbb
jg
inc
cmp
inc
cmp
fcom
adc
adc
xor
xchg
imul
dec
push
adc
daa
sub
adc
repz
push
imul
pop
loop
or
shl
jle
jo
or
mov
pop
pop
pop
jno
cmps
aad
scas
push
ja
inc
mov
xchg
mov
dec
ret
and
fnstsw
pushf
repz
xchg
in
call
cmps
adc
stos
add
ins
pop
inc
jne
inc
mov
cmp
xor
push
sub
test
dec
adc
cmps
cmp
mov
inc
dec
mov
pop
cld
cmps
pop
and
push
popf
test
dec
aam
add
and
or
aad
jmp
fwait
sub
xor
adc
push
xchg
mov
jns
int3
pushf
imul
lods
mov
movs
jl
das
pop
dec
mov
adc
xchg
dec
xor
sbb
cs
jb
mov
pop
jge
popa
mov
into
mov
push
pop
sahf
fadd
push
xlat
xor
or
sub
loop
adc
ins
push
inc
jmp
xchg
xchg
push
push
push
mov
jo
arpl
mov
jne
shl
icebp
push
xchg
mov
mov
jne
push
pop
xchg
mov
adc
cmp
cmp
loop
rcr
inc
aad
push
ficomp
lods
cmp
scas
lahf
push
out
sbb
and
add
cmps
jb
sbb
(bad)
pop
sub
sub
dec
xchg
popf
int3
int
ja
in
stos
push
lods
cmp
push
adc
test
xlat
or
jnp
std
sar
add
pop
jmp
pop
and
add
dec
mov
sbb
loop
jecxz
lods
mov
test
push
(bad)
jl
aaa
or
mov
mov
push
ja
out
dec
inc
stos
cmp
in
mov
int
cdq
xlat
adc
mov
mov
movs
sbb
sbb
(bad)
add
mov
push
mov
dec
out
inc
inc
out
xchg
pop
into
jb
mov
mov
inc
lods
popf
iret
movs
stos
mov
int
cld
cmp
push
sub
xchg
and
push
mov
xchg
loope
loop
pop
inc
scas
mov
mov
gs
push
mov
mov
inc
dec
nop
retf
jecxz
and
rol
push
mov
mov
xor
enter
mov
loop
ja
mov
jo
cmp
mov
jl
retf
inc
add
mov
inc
sbb
xor
lahf
and
and
es
push
push
rcl
lahf
or
div
into
pop
jne
xlat
loop
lock
es
mov
pop
pusha
mov
xor
xchg
fucomip
mov
repz
pop
dec
fisttp
out
ret
out
jno
cmp
movs
outs
je
(bad)
popf
inc
(bad)
jns
jmp
out
icebp
aaa
jle
xor
ret
call
mov
xchg
lods
xchg
push
and
sub
pop
xor
jg
xor
xchg
out
push
or
push
movs
mov
mov
mov
jo
mov
pop
mov
adc
dec
outs
mov
and
inc
dec
lea
cmp
test
sub
pusha
jns
ds
add
pop
mov
imul
das
jno
adc
ds
xchg
mov
ja
mov
fbld
daa
inc
rcl
pop
int3
cmp
adc
inc
idiv
and
push
daa
repnz
adc
push
jb
jnp
mov
lds
and
jp
outs
pop
cmp
pop
(bad)
fwait
or
push
cmp
fld
pusha
fwait
and
and
cmp
cmp
test
add
int
ja
add
dec
inc
push
mov
and
movs
xchg
lea
int
dec
or
xchg
xchg
daa
lds
xor
adc
test
cli
dec
nop
sub
mov
movs
or
sub
imul
aaa
jmp
cmps
or
pop
in
fwait
mov
xchg
shr
cmp
and
int
bndldx
iret
jle
or
pop
mov
fdiv
cmps
cmp
mov
scas
mov
push
add
xor
les
xchg
xchg
aaa
(bad)
pop
mov
cmp
(bad)
or
jg
jmp
sub
jp
push
pushf
xchg
sub
ret
nop
icebp
imul
pop
cmps
or
scas
ja
xor
push
jne
adc
aaa
mov
gs
push
loopne
ss
xlat
(bad)
sar
sub
cmp
lea
add
sub
dec
sub
mov
xchg
fs
mov
inc
cwde
cwde
fs
stc
fadd
xchg
cmp
and
ja
aaa
lea
xchg
(bad)
ror
push
xlat
jo
enter
out
push
push
popf
sti
out
lods
jbe
test
jb
pop
sub
push
pop
adc
pop
pushf
jmp
sbb
xchg
nop
fimul
xor
jle
push
xchg
xor
fidiv
dec
lea
mov
xchg
imul
hlt
sub
push
pop
test
dec
movs
adc
xchg
add
retf
lock
es
mov
cmp
ins
mov
xor
lock
xlat
ds
lds
rcpps
xchg
mov
les
pop
fldcw
stos
mov
loop
mov
adc
not
int
adc
sbb
pop
jl
sub
hlt
mov
push
pusha
mov
or
push
iret
mov
jne
sbb
hlt
jb
fwait
push
das
ss
mov
sti
test
lds
mov
int3
mov
jecxz
fisub
xor
dec
xchg
aas
adc
pusha
leave
dec
ins
hlt
repz
mov
push
jl
add
jmp
push
std
sar
jo
pop
into
aas
mov
mov
push
jo
mov
push
inc
jbe
enter
mov
push
bound
xor
inc
cmp
aad
push
xchg
daa
cli
add
push
push
or
inc
mov
shl
and
cmp
ss
dec
fidiv
sub
push
outs
pop
fdivr
mov
push
xchg
enter
inc
push
cmc
mov
jae
push
add
push
out
bound
push
shr
push
movs
jb
or
mov
push
jne
pop
adc
push
pop
inc
ret
jbe
mov
ss
mov
xor
hlt
pusha
imul
inc
push
mov
push
nop
mov
nop
(bad)
dec
add
add
into
adc
nop
lods
in
and
mov
pop
dec
pusha
bound
(bad)
sub
mov
push
repz
push
dec
jmp
cwde
push
mov
or
int
movs
and
outs
adc
add
cmp
test
dec
mov
xchg
popa
sti
xchg
xchg
retf
or
or
outs
lahf
and
pop
jno
mov
mov
mov
jb
push
cmps
xor
loope
jl
jl
mov
and
fwait
ja
adc
mov
dec
adc
mov
or
and
cli
fs
scas
push
push
or
icebp
fcomp
popf
(bad)
or
pop
mov
add
imul
jno
jle
xor
retf
test
and
mov
jne
jae
int3
mov
cmp
jb
mov
shr
call
mov
sbb
jg
sbb
daa
push
dec
test
mov
rol
js
adc
pusha
and
(bad)
inc
lahf
sbb
or
sbb
adc
test
rcr
dec
push
in
shl
cld
pop
dec
pop
push
cmp
leave
pop
adc
jno
std
jp
pop
stc
xchg
enter
xchg
inc
ja
div
cs
adc
es
fst
cmp
xchg
pusha
clc
xor
cmc
cld
jmp
mov
add
test
pop
mov
pop
push
sub
jg
xchg
stos
sub
fbstp
adc
or
inc
and
or
push
ins
lahf
ret
out
push
mov
mov
int3
retf
add
shl
popf
xchg
neg
push
imul
push
in
sbb
out
fcmovne
lahf
xchg
sbb
or
mov
ins
into
jo
jno
push
pop
jns
pop
scas
sbb
das
dec
add
cmps
push
sbb
sub
push
xor
xchg
fstp
cmp
mov
sar
lds
jmp
cmp
inc
pop
or
sbb
mov
push
or
outs
outs
(bad)
test
(bad)
hlt
movs
mov
(bad)
call
cmp
push
cs
pushf
mov
inc
add
(bad)
jo
ja
cmp
jb
imul
shl
lea
cmp
dec
in
pop
sub
sbb
adc
pop
das
push
fidiv
jmp
xchg
jnp
sub
hlt
inc
arpl
mov
movs
lods
arpl
aaa
adc
xor
mov
outs
daa
and
xchg
addr16
xchg
jp
rcl
lahf
lods
and
mov
mov
out
std
and
(bad)
adc
dec
bnd
(bad)
std
inc
fstp
(bad)
pop
inc
jbe
push
shl
dec
push
mov
leave
clc
retf
inc
ja
ss
xchg
mov
shl
xchg
mov
(bad)
jno
add
loopne
sub
fs
cli
test
xchg
xor
pop
jmp
mov
inc
je
(bad)
push
jecxz
pop
push
maxps
icebp
in
ins
dec
cmp
outs
retf
or
dec
push
js
cmp
aad
add
mov
cdq
lock
and
fwait
ss
mov
and
sub
adc
push
jno
cmp
ja
test
push
in
jnp
and
push
dec
data16
(bad)
push
cmp
push
out
cmps
push
inc
dec
adc
inc
mov
mov
xor
sbb
movs
add
pop
sbb
inc
out
rol
in
ins
ja
pop
popa
and
pop
ins
jp
ror
movntq
rcr
fsubr
bound
test
dec
adc
scas
and
hlt
push
fwait
inc
bound
jmp
sbb
ret
mov
fnstcw
dec
lods
pop
dec
add
test
dec
cmp
scas
mov
or
arpl
inc
dec
xchg
and
in
add
and
or
loope
push
fisubr
push
clc
mov
ins
and
lock
fucom
scas
shr
sbb
jp
cmp
push
stos
jbe
ret
push
hlt
cmc
lea
push
cmps
out
je
inc
loop
jecxz
cmp
sbb
cmp
xchg
das
lock
jb
sti
mov
push
mov
sbb
sub
push
int
adc
xor
in
mov
test
arpl
loop
sub
lods
inc
jle
retf
out
pop
add
add
sub
or
adc
or
jl
movs
xor
adc
(bad)
mov
gs
add
xor
inc
or
mov
push
xor
test
sbb
cmp
pop
add
ins
jmp
outs
enter
xabort
jne
arpl
dec
das
hlt
test
or
xor
fmul
dec
test
test
fsub
and
ins
push
gs
addr16
test
push
imul
sbb
xchg
adc
and
ror
xchg
pop
(bad)
mov
dec
xchg
mov
(bad)
clc
mov
loop
fstp
lock
enter
push
sub
push
daa
mov
dec
sub
(bad)
iret
push
in
xchg
ss
pop
repz
loope
xor
rcl
xchg
loop
and
das
or
stos
push
clc
imul
jae
or
cmp
and
daa
fistp
push
hlt
into
call
call
push
dec
jns
push
mov
in
mov
nop
dec
call
adc
cmp
mov
jne
test
cmps
(bad)
sar
dec
jno
in
jnp
add
int3
mov
add
push
cs
jl
repnz
ror
add
sub
int3
(bad)
sub
in
call
ret
adc
pop
sub
mov
mov
int3
movs
mov
adc
pop
adc
repnz
rol
cld
push
out
xchg
dec
dec
icebp
jp
xchg
cmp
stos
arpl
mov
lods
cmps
pop
inc
push
or
loopne
jecxz
jmp
jle
inc
xchg
pop
je
jno
inc
sub
mov
cli
(bad)
jmp
push
push
shl
or
int3
sar
out
adc
repnz
ins
mov
xchg
xorps
adc
(bad)
mov
cwde
jns
mov
jb
adc
or
out
sbb
repnz
mov
stos
inc
inc
nop
mov
repz
dec
push
mov
mul
imul
not
mov
sti
adc
xchg
dec
pop
call
xchg
rcl
mov
push
retf
jo
cli
stos
or
clc
int
xchg
(bad)
push
adc
movs
cld
push
stos
jae
stos
sub
ins
es
and
cwde
movs
jmp
mov
and
lock
pop
loop
loopne
ja
pop
inc
ja
pop
cmps
inc
imul
fdiv
shl
dec
cmc
pop
imul
mov
inc
lea
and
push
(bad)
jnp
pop
aas
or
aaa
repz
scas
mov
and
sahf
or
inc
xchg
add
shl
fsubrp
push
inc
xchg
gs
ror
mov
aas
sbb
add
mov
sbb
xor
aam
and
rol
mov
imul
inc
fild
sub
ins
mov
aad
rcl
jno
mov
xchg
sbb
retf
and
add
add
mov
loope
push
gs
xlat
arpl
xor
push
and
fidivr
retf
mov
or
(bad)
jo
mov
dec
sbb
cmc
cmp
add
dec
inc
pop
(bad)
loope
inc
push
dec
aaa
aam
add
xchg
cmp
rcl
ins
xchg
mov
push
jno
movs
into
or
icebp
fist
sub
test
push
inc
xchg
pop
aas
adc
in
sub
or
mov
js
daa
ror
and
cmp
xchg
loopne
lock
enter
cmps
adc
jg
cmp
pop
mov
(bad)
push
int3
jl
add
sub
stc
(bad)
push
xor
scas
loope
sub
push
addr16
int
imul
gs
adc
aam
aam
mov
fst
jle
add
or
shl
(bad)
stc
stc
data16
out
fdivr
(bad)
mov
inc
movs
(bad)
mov
pop
ss
sub
dec
nop
and
into
(bad)
int3
pop
imul
mov
jne
mov
add
sar
dec
fisttp
aas
cdq
pop
sbb
int
std
sbb
add
rcl
and
mov
mov
push
outs
fnstsw
mov
inc
test
out
and
mov
inc
cmc
cmps
rdmsr
fsin
in
push
mov
icebp
sub
pop
push
push
inc
rcr
jb
xchg
outs
jae
pop
rol
lods
arpl
imul
call
cs
test
add
ins
push
dec
fild
sub
mov
pop
or
or
sub
cdq
aas
(bad)
push
mul
adc
dec
div
jbe
sub
ins
ins
jno
dec
pushf
or
xchg
mov
lock
mov
xor
mov
ret
bound
repnz
mov
push
pop
xchg
mov
or
(bad)
scas
(bad)
imul
pop
xlat
push
and
mov
jmp
jmp
stc
mov
popa
push
dec
push
pop
lds
cmp
into
inc
mov
or
push
or
xchg
xor
into
or
cmp
pop
mov
inc
in
mul
cmp
mov
ror
aad
loop
rcr
arpl
lock
scas
add
pop
adc
sbb
imul
add
jle
mov
dec
mov
xchg
fdivr
lods
hlt
mov
addr16
inc
cmps
les
ror
xchg
(bad)
sub
cmp
test
lods
test
call
lods
jl
dec
lods
mov
jmp
outs
jmp
rcl
xchg
dec
ds
inc
fcmovb
jl
adc
sbb
sar
sti
and
mov
push
jl
mov
movs
push
fwait
in
aad
cmps
into
aaa
add
jmp
popa
iret
xor
xchg
pushf
call
cli
add
ss
outs
ror
adc
into
xchg
and
cli
out
dec
xchg
pop
and
xchg
adc
test
(bad)
sbb
inc
mov
adc
call
lahf
add
inc
pop
xchg
mov
jmp
or
aaa
and
xlat
sub
cmp
mov
xchg
mov
loopne
add
loope
adc
pop
jp
adc
mov
jp
inc
shl
pop
sti
test
cmp
inc
retf
sbb
int3
scas
fstp
dec
mov
enter
in
push
jmp
cld
lea
push
js
lods
xchg
hlt
fdiv
cmp
push
sahf
test
test
mov
pop
int
mov
push
dec
mov
mov
mul
inc
adc
jne
inc
out
cmp
push
adc
ret
ss
xchg
addr16
out
sbb
ficom
gs
cmp
pop
mul
xchg
xchg
push
dec
jge
adc
mov
pop
pop
cdq
mov
fcmovne
add
jmp
fmul
inc
adc
movs
sahf
xchg
div
int
pop
sub
sub
not
and
adc
add
mov
xor
sub
mov
jmp
or
mov
push
sbb
retf
out
in
and
js
sahf
mov
pop
mov
fnsave
(bad)
cmp
(bad)
xchg
mov
outs
sti
pop
enter
adc
push
push
add
push
lock
outs
xor
jle
(bad)
mov
ret
nop
push
sbb
inc
mov
pop
popa
(bad)
and
push
inc
xor
es
cwde
in
dec
pushf
test
xchg
or
push
xchg
jns
mov
push
mov
push
mov
int
jae
mov
jnp
aad
cmp
sub
out
mov
inc
cdq
fist
sub
cwde
popa
cdq
pop
aas
popf
in
popa
out
adc
mov
fwait
call
(bad)
and
imul
ror
push
pop
fwait
scas
mov
mov
movs
xchg
pop
jl
push
or
sar
mov
push
mov
scas
xor
and
push
sti
xchg
aas
jmp
ja
scas
cwde
into
idiv
test
jecxz
sbb
jmp
inc
pop
repz
xor
pop
pop
sub
ds
mov
xor
mov
(bad)
push
push
jb
mov
cmp
cmp
add
pop
lea
inc
mov
imul
xchg
pop
popf
xchg
cmp
js
(bad)
out
int
es
xor
sbb
out
and
aaa
enter
mov
test
sahf
neg
rcr
or
pop
mov
(bad)
push
(bad)
xchg
pop
mov
iret
inc
xor
mov
stc
das
xchg
jge
lods
push
jmp
les
fs
jbe
out
xchg
pop
stos
mov
outs
adc
pop
xchg
jmp
mov
inc
xchg
stos
inc
clc
mov
add
sbb
add
xchg
mov
aam
pop
jb
xchg
and
mov
push
in
or
or
movs
sub
pop
mov
adc
in
out
sbb
dec
test
ins
into
cmp
adc
sbb
clc
loop
scas
xchg
sub
mov
jmp
sbb
(bad)
or
mov
sub
and
cmp
mov
pop
out
cs
inc
sub
sub
jno
ja
jmp
jbe
aam
inc
ror
xor
aad
pushf
xlat
cmps
je
das
aad
seto
pop
cmp
and
mov
and
mov
int3
pop
inc
gs
jae
cwde
pusha
dec
hlt
add
cld
jle
call
aas
leave
loopne
fs
cmps
shl
je
adc
add
std
xor
sbb
retf
adc
lods
add
sbb
pop
pop
or
aaa
ret
and
in
sub
mov
test
retf
(bad)
inc
hlt
or
add
cld
daa
popf
mov
and
cmps
test
punpckhbw
cmc
dec
inc
push
push
adc
inc
loop
xor
add
jns
cld
ins
adc
jo
xor
xchg
fimul
or
adc
mul
push
repz
and
imul
pop
aas
cmc
addr16
sahf
jmp
hlt
jo
and
sub
mov
add
jp
pop
jmp
adc
push
mov
call
inc
jo
mov
ss
pusha
and
inc
in
je
pop
pusha
loop
cs
adc
xor
dec
bound
and
sub
push
fistp
js
das
inc
cld
jmp
push
(bad)
dec
jmp
push
bound
add
in
f2xm1
outs
sbb
(bad)
cs
push
jle
(bad)
cmp
mov
test
push
sub
or
pop
gs
xor
data16
mov
mov
xor
outs
pop
icebp
stos
and
lahf
inc
jbe
cmp
sti
ja
jmp
in
push
sub
push
cmp
push
and
mov
adc
movs
pop
pushf
mov
mov
js
scas
rol
mov
pop
hlt
sbb
into
dec
mov
xor
call
sub
adc
adc
sub
mov
inc
cmp
inc
jbe
imul
xor
jmp
sbb
lea
mov
mov
fwait
and
push
daa
mov
push
inc
xor
ins
fwait
test
aas
stos
clc
dec
std
arpl
cmp
in
test
sbb
adc
mov
aad
xor
(bad)
adc
mov
gs
int
cld
cmp
outs
jecxz
push
push
and
les
clc
movs
addr16
sub
push
xchg
cmp
xchg
xchg
jle
and
xchg
push
test
xor
mov
jo
stos
lods
xor
xchg
or
ror
test
push
sbb
cmp
mov
jecxz
pop
call
cmp
aas
out
sbb
mov
inc
inc
retf
in
or
lfs
popa
push
and
sbb
les
loop
fwait
xor
mov
add
neg
mov
xlat
add
cmp
addr16
jecxz
scas
add
mov
lods
icebp
sar
jb
jmp
fwait
cmp
push
(bad)
out
pop
add
sub
rcl
add
jns
mov
std
sub
ror
jae
hlt
push
imul
dec
jno
xor
sti
cwde
mov
fidiv
or
fbld
stos
mov
xor
aas
mov
aam
dec
push
sub
loopne
or
sahf
pop
es
cld
in
cs
and
push
loop
push
sar
cmc
lods
movs
jg
and
xor
jle
mov
lock
ret
jno
cld
dec
and
sbb
shl
pop
pop
popa
inc
pushf
jmp
ret
loop
pop
inc
daa
sahf
std
imul
out
inc
push
pop
lock
scas
pop
rcl
mov
jmp
rcl
xor
lds
out
cmp
int
cmp
cmps
les
push
pop
sbb
xchg
mov
push
sub
inc
movs
cmp
cmp
pop
lock
adc
pop
cmp
out
in
push
pop
xor
adc
retf
add
cmp
lahf
cld
push
sbb
cmps
jo
ins
sbb
cli
mov
mov
jge
scas
nop
outs
dec
ja
xchg
push
pop
mov
mov
cmc
pop
add
xor
xor
push
dec
inc
and
add
je
mov
sbb
push
ret
pop
stc
mov
je
adc
ret
adc
test
xor
push
inc
cmp
push
les
mov
lea
mov
lods
mov
or
cmc
mov
std
ret
int3
repz
mov
call
mov
fsub
dec
mov
lahf
push
cmp
pop
jb
into
pop
jns
cli
imul
and
cmp
jmp
xor
push
mov
adc
push
daa
test
pop
cmp
sahf
das
mov
xor
xchg
inc
jo
push
lahf
(bad)
push
inc
dec
sbb
and
(bad)
mov
xor
jle
movs
dec
adc
or
adc
inc
fxch
stos
jmp
div
cmc
sti
movs
inc
adc
in
mov
sbb
jge
xchg
stos
xchg
xor
adc
jge
ret
inc
rol
xlat
mov
scas
xor
pushf
ror
mov
xchg
jae
repz
js
adc
push
les
icebp
icebp
inc
inc
and
xor
push
pop
sbb
movs
aaa
sub
and
and
repnz
push
lods
xlat
ret
test
adc
mov
test
dec
xchg
stos
sub
lods
out
xor
inc
loop
and
cwde
outs
add
pop
ret
sub
aam
push
add
out
popa
add
mov
pusha
cli
jns
or
js
bnd
aad
mov
movs
test
inc
or
cmps
fdivp
bound
imul
nop
and
add
ret
mov
mov
jbe
retf
push
dec
imul
lea
xchg
cmp
sub
xchg
cdq
test
test
fwait
les
push
or
nop
cmps
cdq
push
and
mov
les
fs
ret
xchg
cdq
xor
mov
push
mov
ins
in
repz
and
or
cs
pop
cld
idiv
add
sbb
clc
or
xchg
xchg
push
dec
inc
int3
or
mov
sbb
and
addr16
cwde
sbb
push
sub
movs
pop
mov
pop
jl
mov
adc
mov
arpl
adc
cld
outs
scas
data16
adc
stos
xor
lahf
sbb
jns
push
lea
data16
ror
call
mov
repnz
push
add
and
xchg
ds
(bad)
and
push
dec
das
and
out
test
cmp
push
mov
test
mov
cmps
retf
cmps
dec
icebp
fcmovne
xor
xchg
mov
jmp
lods
push
popa
ret
into
jl
or
mov
xlat
ret
mov
push
(bad)
loope
fist
jne
test
xchg
outs
imul
dec
or
lea
in
lock
jecxz
mov
sub
sti
mov
fisttp
das
cmp
(bad)
jmp
cdq
dec
and
cmps
cmp
jne
ins
cs
sub
inc
shl
shr
inc
ja
imul
xchg
mov
mov
add
test
iret
fist
pop
push
icebp
popa
inc
push
adc
adc
adc
loope
(bad)
pop
lahf
mov
adc
test
push
pop
or
jo
rol
lods
lds
sub
out
or
lods
call
sar
cld
scas
aas
jae
jnp
movs
mov
(bad)
sub
aas
(bad)
push
int
cli
sbb
faddp
xlat
outs
push
pop
aad
(bad)
jmp
retf
icebp
aas
scas
aam
inc
pushf
mov
pcmpeqb
repz
shl
dec
push
pusha
pop
jnp
ret
xchg
xchg
gs
cwde
cdq
(bad)
stos
lods
sub
scas
retf
cld
inc
call
cmps
sub
ss
adc
push
call
frstor
fild
sub
push
movs
dec
add
daa
arpl
out
cmp
xchg
arpl
(bad)
repnz
add
inc
xor
mov
lock
leave
mov
out
test
lahf
dec
dec
mov
add
dec
cmp
ret
push
lds
cmp
cmps
mov
and
in
xchg
dec
and
dec
inc
imul
call
pop
or
inc
cmc
pop
xchg
fstp
mov
push
cmp
js
pop
push
fdiv
and
(bad)
dec
movs
cwde
int
xor
test
mov
jno
sub
addr16
sbb
fadd
or
(bad)
in
mov
adc
mov
(bad)
mov
fild
sbb
cmp
dec
push
call
fisubr
jp
jns
scas
fild
xchg
dec
pop
and
in
imul
jb
jo
fdiv
call
sahf
call
pop
cmps
in
jo
ficom
repz
sub
repz
adc
test
pop
or
inc
pop
fsubrp
psllw
pop
fmul
scas
jb
imul
fs
fcomi
stos
mov
dec
inc
ds
out
inc
test
in
jmp
mov
ins
cmp
les
sub
movs
bound
nop
push
call
add
mov
sti
(bad)
shl
mov
aad
or
fcomp
(bad)
stos
jb
(bad)
lahf
sub
mov
pop
test
xchg
mov
inc
add
sub
dec
pop
lods
add
(bad)
cmps
mov
inc
pop
sbb
push
lods
xchg
jmp
jns
jmp
out
movs
jns
addr16
mov
and
mov
fidiv
je
xor
sbb
jp
test
mov
sbb
jnp
(bad)
pusha
add
pop
sub
push
leave
cmp
cmp
mov
popf
jo
sub
sbb
fdivr
sub
stc
inc
adc
or
mov
pushf
and
icebp
imul
call
xor
dec
iret
inc
xchg
test
pop
inc
add
fisubr
jb
in
cmp
scas
dec
mov
sub
fadd
push
sub
call
inc
sbb
or
movs
rol
aaa
test
pop
xchg
shl
int
repz
or
es
pop
addr16
and
cmc
push
ret
inc
cmp
xchg
add
loopne
mov
pop
bound
stos
mov
hlt
jnp
and
pushf
daa
lea
movs
rsm
call
(bad)
or
stos
rcr
xor
hlt
add
imul
repz
daa
inc
out
(bad)
cmp
add
xor
cmp
scas
adc
idiv
test
out
cdq
pop
imul
sub
push
gs
repz
inc
daa
sub
call
fisttp
mov
ds
pop
int
outs
ret
mov
xchg
movs
cwde
jnp
jne
mov
push
add
push
jmp
mov
and
cmp
retf
cmp
jle
jle
cwde
fbld
and
pop
jmp
mov
jg
fisttp
daa
push
scas
rcl
mov
adc
mov
es
rol
mov
(bad)
jns
cld
adc
mov
jb
mov
in
inc
aaa
xchg
(bad)
in
sti
pop
xor
mov
das
and
mov
lods
pop
dec
push
rol
hlt
xchg
add
sbb
adc
add
je
inc
(bad)
xor
pop
pop
ret
cmp
sub
outs
add
test
dec
sbb
(bad)
(bad)
jb
or
dec
movs
mov
adc
shr
dec
sbb
or
and
sub
test
push
push
leave
xchg
lods
int
test
scas
add
or
adc
pop
icebp
bound
fwait
and
retf
pop
aas
scas
call
sbb
add
clc
jecxz
adc
retf
movs
mov
xchg
lahf
inc
xchg
(bad)
xor
jmp
gs
and
cmps
add
stos
inc
gs
pop
test
pop
test
adc
stc
add
aas
lock
lds
add
or
pop
mov
xor
mov
sub
and
int
sbb
mov
cwde
pop
data16
push
retf
xchg
and
lea
sbb
movs
inc
sbb
or
and
dec
lods
movs
xchg
cmp
fwait
outs
add
imul
sbb
pop
dec
or
jbe
call
pop
mov
pop
mov
add
pop
cmps
sub
dec
adc
mov
(bad)
dec
popa
xchg
arpl
add
out
ins
scas
mov
scas
inc
movs
scas
mov
push
mov
mov
std
dec
scas
mov
lea
cdq
pusha
ror
xor
pop
lods
and
js
int3
call
(bad)
nop
xor
xchg
sbb
mov
dec
and
pop
ret
pop
repz
dec
xchg
(bad)
jp
in
aad
sahf
inc
sub
out
rol
inc
cmc
ss
adc
fcmovne
scas
pop
xchg
sub
in
aam
xchg
xchg
push
mov
mov
inc
shl
mov
cmp
sub
sub
ret
inc
lods
iret
aad
mov
retf
stc
lods
mov
mov
out
or
add
inc
mov
(bad)
fldenv
rcl
inc
jns
jnp
dec
mov
and
aam
sub
cmps
or
nop
cld
lahf
call
popa
jns
pop
ins
xchg
fidiv
in
xor
scas
mov
pop
jno
cmp
pop
mov
fcom
sub
cs
inc
daa
aas
mov
push
sbb
dec
sahf
cwde
push
retf
js
retf
add
mov
mov
inc
mov
aad
adc
clc
movs
and
inc
stos
add
fcmovu
push
in
mov
add
sub
in
pop
mov
test
mov
(bad)
and
jbe
fs
sbb
mov
mov
arpl
aam
dec
inc
mov
dec
pop
call
mul
xor
mov
sbb
jl
lea
push
lar
jb
ja
mov
mov
pop
and
repnz
aaa
pop
(bad)
mov
xchg
jl
or
aam
into
cmp
pop
xchg
cwde
cmp
adc
popa
fwait
rcr
mov
stc
popa
mov
mov
outs
call
inc
movs
ja
cmp
pop
(bad)
xor
push
adc
dec
cmp
mov
popa
xchg
adc
or
pushf
in
fdiv
or
jmp
xor
xor
cmp
jp
mov
movs
or
xchg
stc
push
mov
sub
(bad)
mov
dec
add
and
and
or
sub
adc
sbb
lds
gs
push
fnstcw
ret
push
sti
jl
mov
ins
(bad)
loop
ret
push
mov
xor
stos
(bad)
push
sbb
in
xchg
sub
push
xchg
jbe
inc
mov
ins
(bad)
mov
mov
repnz
adc
adc
pop
jmp
and
cmp
aad
mov
cmp
push
xor
jae
fstp
push
mov
arpl
pop
inc
pop
leave
xchg
jae
or
jmp
mov
cmp
adc
xchg
lock
pop
out
ror
out
sub
(bad)
sub
jb
jp
int3
aad
pop
jo
nop
mov
xor
inc
cli
(bad)
mov
inc
add
in
jo
xchg
test
mov
or
movs
lock
mov
rcl
lods
jb
repnz
popf
lds
popa
loop
jns
xor
cmc
adc
pop
pop
(bad)
cwde
and
arpl
retf
loope
lds
jmp
sub
mov
jg
add
imul
xor
js
push
out
inc
push
jne
shl
pop
and
cmps
inc
scas
dec
push
pop
pop
dec
dec
rcl
adc
and
imul
sub
push
or
mov
pop
ins
shl
in
mov
into
push
jg
div
pop
mov
movs
sbb
inc
adc
shr
jecxz
test
mov
or
out
cdq
cs
pop
and
stc
fs
addr16
adc
adc
jg
sahf
les
loopne
xchg
mov
jnp
or
movs
cmp
jmp
out
dec
scas
cmp
jge
pop
cmps
fild
loope
es
lods
ror
mov
pop
mov
xor
and
pop
pop
daa
cmc
jae
or
xor
in
mov
push
cmp
mov
mov
aam
in
sbb
pop
test
iret
cdq
or
dec
inc
mov
not
push
inc
xor
xor
mov
mov
je
jb
pop
call
test
xchg
nop
push
mov
or
popa
inc
test
clc
rcl
adc
xor
repz
inc
xchg
fst
mov
retf
mov
lock
rcr
xlat
(bad)
fild
(bad)
or
push
sti
xor
in
mov
or
jo
jle
xchg
xor
jecxz
jno
sbb
adc
mov
aam
mov
mov
push
mov
jp
imul
pop
xchg
jnp
inc
or
popf
into
fcom
mul
inc
jae
push
push
gs
cmp
lds
loopne
or
dec
cmp
out
add
aad
iret
mov
cli
jle
jmp
mov
jl
inc
xor
mov
mov
es
and
(bad)
inc
cmp
add
jge
retf
stos
ud0
jge
xlat
iret
adc
sbb
fcmovnbe
xchg
int3
xor
jge
dec
cs
int3
call
cmp
cmp
adc
stos
sbb
(bad)
fwait
clc
mov
scas
mov
mov
outs
cmc
sar
loopne
dec
ins
cmps
int
sti
add
cs
rcr
or
shl
inc
jo
std
and
mov
iret
(bad)
cld
sub
test
pop
dec
lds
in
xlat
mov
jp
inc
mov
jo
ss
cwde
add
mov
xchg
cmp
pop
jns
sar
(bad)
retf
fs
daa
mov
push
fdivrp
icebp
cmp
ja
sub
hlt
lds
and
mov
jmp
in
ss
mov
jge
out
repnz
fwait
popa
cmp
pminsw
or
fidivr
data16
nop
push
add
cmps
adc
es
inc
sbb
and
cmps
jno
xchg
or
mov
mov
js
adc
les
dec
stos
(bad)
jp
sbb
jmp
inc
leave
shl
adc
pop
(bad)
stos
pop
mov
xor
imul
sbb
loope
in
or
mov
cmp
xchg
dec
mov
jecxz
aas
imul
ss
lds
jecxz
add
aas
pop
xor
push
setl
inc
xchg
lock
clc
icebp
pop
aam
jns
add
rcr
pop
add
in
lea
std
xchg
jp
xchg
pop
push
fwait
nop
mov
mov
dec
jae
cli
nop
xchg
mov
arpl
mov
mov
fsub
add
or
(bad)
push
inc
mov
ficom
pop
aas
rol
cwde
out
jns
mov
pop
push
int
pop
jge
mov
cmp
lock
xor
pusha
xchg
xchg
jmp
and
xchg
out
(bad)
shl
jl
sub
div
cmp
(bad)
cli
inc
pop
imul
cwde
mov
cmps
sbb
psubd
cli
ss
fldenv
inc
push
call
in
neg
mov
movs
jbe
dec
adc
cmp
add
inc
adc
sub
out
adc
add
xlat
repnz
mov
mov
mov
add
xor
out
shl
out
jge
dec
add
sub
push
inc
or
mov
mov
sbb
pop
push
stos
add
cmps
pop
inc
scas
loopne
add
sbb
add
gs
repnz
jno
(bad)
out
xor
test
xor
mov
xchg
sbb
pusha
pushf
ins
push
aas
idiv
add
fistp
sti
ds
out
dec
push
jp
test
addr16
inc
mov
lea
inc
outs
ja
pop
out
fwait
arpl
pop
jge
cmp
idiv
sub
jnp
fmul
mov
adc
push
retf
call
mov
les
jmp
fisttp
in
push
mov
mov
jle
popa
adc
dec
jnp
jl
inc
stc
or
xor
adc
ins
hlt
xchg
sbb
jmp
shr
pop
or
(bad)
rcr
call
mov
cmp
dec
mov
xor
mov
or
iret
push
cmp
pop
movs
leave
fs
pushf
ret
mov
adc
mul
adc
retf
mov
jmp
shr
(bad)
or
repnz
xor
lods
inc
sbb
push
(bad)
(bad)
xchg
xor
aad
lahf
adc
iret
jp
cld
movs
xor
push
ret
cmp
iret
std
jmp
add
jl
xor
leave
ret
mov
imul
mov
out
dec
pop
test
push
pop
dec
mov
sub
out
les
xchg
clc
dec
ins
sub
adc
adc
shr
aas
jp
pop
outs
mov
outs
add
push
jo
aas
cld
or
pop
fwait
cmp
pop
out
clc
jbe
push
inc
xchg
sub
inc
lock
repnz
mov
loop
inc
scas
test
or
cs
adc
push
xchg
cdq
int
sbb
lods
add
pusha
pop
nop
mov
por
add
cmp
test
or
xchg
popa
scas
lock
scas
(bad)
push
fbld
jp
and
adc
je
das
in
stos
sub
cld
sbb
es
repz
inc
aam
test
push
fistp
jmp
rol
dec
sbb
pop
pop
pop
pushf
ja
test
push
lock
mov
push
jae
mov
movs
jo
arpl
dec
push
pop
fst
mov
push
neg
jg
sbb
ds
jnp
pop
test
gs
mov
jge
dec
cdq
mov
test
neg
loope
xor
mov
sti
sub
or
sbb
xchg
cmp
jmp
pop
cmps
outs
xchg
adc
loope
scas
ins
(bad)
imul
nop
or
test
push
pushf
sahf
jb
mov
je
push
loopne
sbb
sub
retf
mov
(bad)
in
mov
push
pop
cmps
adc
mov
cli
fcmovnb
cli
mov
les
mov
push
push
loop
xor
push
mov
test
test
loopne
nop
ins
jno
pop
mov
(bad)
and
retf
adc
dec
cmp
mov
mov
lds
mov
pop
rcr
fisub
arpl
mov
jnp
mov
fsub
jl
retf
lock
mov
mul
mov
pop
mov
jp
mov
mov
aam
nop
sbb
test
pop
or
xchg
push
mov
sub
ins
inc
mov
test
or
(bad)
cdq
jnp
mov
pop
sub
cmp
ds
jnp
ins
std
xor
fnstsw
out
not
outs
ss
xor
and
or
cmps
push
xor
sbb
fcomp
or
pop
test
add
rcr
xor
pusha
out
xchg
cmp
cmps
retf
inc
out
jmp
es
jnp
je
adc
(bad)
std
or
icebp
push
push
mov
cwde
sub
js
js
rol
out
aad
mov
ins
jne
(bad)
aad
push
ja
xchg
out
addr16
cli
aaa
mov
and
dec
movs
cmp
dec
in
ret
(bad)
int
mov
js
mov
das
pop
fcomp
pop
sbb
popf
add
dec
out
dec
pop
sbb
jae
inc
or
push
enter
dec
push
mov
(bad)
xchg
stc
mov
stos
pop
mov
repz
mov
imul
mov
add
push
dec
or
test
cmp
das
in
shr
sub
retf
mov
out
push
push
call
adc
fst
jns
cdq
test
jmp
call
icebp
leave
cwde
cs
pop
push
enter
cs
das
lods
add
dec
std
cdq
adc
mov
or
jmp
test
push
mov
jnp
xor
pop
in
jg
ds
push
sbb
mov
pop
iret
(bad)
or
push
pop
mov
leave
cld
push
outs
adc
dec
mov
sbb
popf
(bad)
bound
mov
adc
clc
cmp
out
bswap
test
xor
jmp
pop
mov
push
jmp
out
cmp
cmp
jns
test
mov
add
dec
xchg
jne
fucomi
jo
xor
jae
dec
push
or
fisttp
ds
lock
pop
ror
jl
das
imul
adc
daa
(bad)
(bad)
fcmovu
and
or
cmp
or
add
add
je
inc
fld
and
mov
(bad)
aam
fwait
lahf
shl
xor
xchg
xchg
jns
dec
lds
(bad)
cs
sub
cmp
cld
in
add
fbld
and
cdq
cmps
add
repz
cld
stos
out
pushf
fbstp
pop
sti
(bad)
pop
aas
in
int
xor
dec
lds
loope
cli
push
lods
mov
sub
cdq
push
outs
and
push
mov
sbb
mov
(bad)
push
stc
shr
call
xor
dec
int
rcr
imul
sbb
mov
lods
mov
xlat
rcr
jne
ss
xchg
out
lea
std
(bad)
xor
mov
stos
dec
mov
jo
jp
push
and
cld
push
mov
or
add
pop
xchg
std
mov
outs
mov
clc
push
mov
ret
je
icebp
push
sbb
cmp
adc
fcomp
xor
js
int
inc
and
ja
lods
(bad)
jle
fcomp
loopne
adc
mov
xor
cwde
imul
sbb
cmps
popa
push
inc
inc
mov
dec
dec
pop
pop
mov
dec
nop
int3
icebp
ins
aas
mov
mov
pop
mov
sbb
mov
mov
mov
mov
pusha
cmps
push
mov
push
loopne
pop
fwait
stc
fdiv
lods
dec
js
ret
pop
cmps
mov
and
mov
xor
outs
popf
loope
gs
dec
iret
push
or
jl
in
gs
(bad)
imul
and
pop
pusha
movq
(bad)
jo
stc
xchg
ret
add
dec
jle
pop
pop
xor
cdq
int
push
dec
fstp
lock
call
add
mov
mov
lahf
mov
ja
or
or
stos
adc
dec
jns
lea
nop
mov
sahf
pop
stos
xor
gs
fild
inc
mov
cmp
xchg
add
imul
adc
mov
xchg
sub
push
cdq
jmp
lock
dec
icebp
pop
inc
xchg
mov
test
jnp
enter
cmps
test
adc
shr
xchg
bound
dec
arpl
cld
push
and
jge
and
dec
shl
mov
(bad)
not
sbb
aam
jmp
push
iret
jbe
movs
fmul
xlat
in
sub
dec
sub
repz
mov
pop
int3
inc
std
(bad)
mov
sbb
add
(bad)
dec
sbb
dec
pop
fst
pop
mov
xchg
dec
stc
je
adc
sahf
imul
sbb
imul
jge
mov
inc
outs
lds
int
mov
fdivr
adc
out
(bad)
icebp
inc
xchg
fcom
movs
jbe
xchg
mov
mov
push
test
jmp
push
mov
push
fldcw
into
xchg
arpl
push
test
jg
stos
add
add
push
cmp
sbb
xor
fwait
mov
jp
enter
mov
stos
(bad)
test
into
vrsqrtss
mov
sbb
sti
xor
inc
into
les
aas
sbb
rol
scas
sbb
jno
test
out
xchg
fbld
cmp
les
jns
sar
loope
or
jl
call
leave
push
and
pop
sti
sbb
aam
add
out
(bad)
fndisi(8087
adc
sar
imul
je
or
test
mov
xchg
add
push
jb
pop
push
lahf
mul
mov
sbb
in
lods
in
ret
shl
and
pop
div
push
loopne
xchg
dec
sub
pop
add
repnz
sbb
div
xor
xchg
outs
arpl
mov
pop
cmp
push
cmp
sbb
mov
in
or
jb
std
add
in
out
movs
or
ins
and
div
int3
mov
dec
cmp
push
(bad)
jae
scas
or
aaa
out
retf
js
mov
cmp
xor
std
mov
test
dec
push
clc
js
fwait
xor
push
cli
sbb
aaa
inc
xchg
mov
fsub
push
sbb
test
(bad)
cld
gs
jmp
dec
pop
dec
cmp
in
push
jmp
das
jns
push
gs
in
aaa
cdq
jge
not
dec
inc
(bad)
sub
jmp
jnp
push
daa
xor
shr
xlat
jae
add
jp
mov
in
mov
js
mov
sahf
pop
in
add
dec
adc
ja
test
push
fs
and
test
gs
test
sub
pop
movs
push
cmp
retf
jno
dec
mov
pushf
jae
adc
mov
cld
dec
xchg
add
pop
jb
call
leave
dec
call
inc
inc
daa
jne
inc
hlt
and
out
jg
sub
data16
aaa
hlt
or
cli
add
outs
sub
nop
inc
add
int3
cmp
dec
cmps
or
xchg
in
or
je
push
adc
sbb
sbb
arpl
inc
mov
cwde
ret
adc
aas
push
xchg
les
lods
fisubr
sub
sbb
jmp
fmulp
cmp
add
iret
or
stos
fwait
dec
addr16
repz
sbb
(bad)
adc
or
add
in
stc
in
pop
xchg
mov
jae
and
cmps
xchg
add
push
jb
jne
mul
outs
xor
imul
outs
cmp
hlt
das
dec
test
and
pushf
pop
aas
fld
and
mov
dec
out
clc
ret
mov
dec
sbb
sbb
arpl
mov
push
sbb
fcmovnu
popf
sbb
push
hlt
sbb
sar
or
cmp
lods
xchg
jmp
jne
add
lock
test
cld
inc
mov
popf
or
xchg
fcomip
cmps
mov
mov
imul
test
out
fimul
inc
ret
mov
ins
pop
stos
push
iret
lock
jecxz
sbb
mov
outs
aaa
pop
sub
stos
fdivr
ins
xchg
jecxz
out
bound
add
sbb
inc
scas
in
ficomp
xchg
cmc
js
int3
nop
and
scas
jbe
mov
sub
in
ds
es
adc
xchg
mov
dec
sahf
shl
xchg
dec
xor
sub
and
aas
daa
aaa
push
test
fwait
add
pop
out
jle
jl
push
(bad)
ror
fdiv
jmp
(bad)
jo
stos
mov
stos
movs
push
sbb
mov
repnz
mov
loope
cmp
mov
mov
jnp
mov
(bad)
clc
xlat
(bad)
xchg
push
xor
pusha
push
pop
jo
(bad)
fild
jae
sbb
lahf
scas
loope
mov
mov
pop
int3
jmp
adc
addr16
inc
pop
es
pop
sub
push
sti
ror
out
push
cmps
pop
mov
or
fist
test
push
mov
mov
mov
into
imul
jp
retf
(bad)
fmul
jmp
pop
popf
cmp
mov
nop
add
mov
(bad)
cli
dec
fcmovb
xor
call
push
lea
lea
icebp
xor
ja
push
adc
lods
sti
hlt
and
sub
push
out
into
xchg
pop
pushf
jecxz
neg
lods
cmps
lock
or
push
call
add
lea
call
into
iret
push
xor
in
cwde
fs
dec
push
mov
xor
dec
cmps
and
aad
mov
xor
icebp
sub
in
out
fidiv
mov
fst
je
xchg
sub
pop
(bad)
pop
out
test
or
jp
repnz
push
sbb
dec
and
xor
xchg
cmp
repz
push
pusha
jbe
mov
cdq
fiadd
mov
or
fcmovnbe
inc
cmp
lods
xchg
dec
cmp
jecxz
in
or
inc
jbe
and
pop
pop
adc
sub
je
mov
and
test
mov
xadd
push
or
sub
sbb
(bad)
jmp
add
or
(bad)
mov
into
or
addr16
ss
sbb
shl
xor
cmp
stos
rol
mov
inc
dec
mov
sub
add
enter
jmp
ret
test
hlt
sub
xor
sbb
das
frstor
je
or
pop
addr16
(bad)
push
add
xchg
jl
push
out
ret
pop
push
fs
sbb
aam
das
sbb
mov
daa
push
hlt
retf
cdq
xchg
pop
cmp
outs
mov
push
xchg
gs
sub
jae
dec
dec
pop
add
and
pusha
popf
cmp
mov
and
xchg
sub
daa
ins
add
scas
cmps
xchg
sub
cld
push
inc
jbe
jno
mov
fwait
adc
xchg
test
xchg
mov
shl
xchg
inc
cdq
pop
jge
mov
iret
push
mov
stos
jg
aas
aas
push
sbb
pop
cmc
inc
or
out
addr16
xor
je
loop
mov
sub
int
movs
xchg
pop
in
inc
adc
inc
imul
mov
retf
cmp
test
aad
pop
pop
es
in
pop
mov
sbb
enter
into
(bad)
in
arpl
aaa
iret
repnz
icebp
fst
cmp
mov
pop
adc
int3
fist
dec
cwde
push
out
cmp
test
add
mov
dec
mov
pushf
(bad)
iret
inc
adc
(bad)
daa
imul
add
push
sar
aad
xchg
call
or
mov
pop
stos
arpl
jmp
dec
or
shl
mov
and
jecxz
aas
sti
ds
xchg
shl
sbb
xor
gs
lds
(bad)
jne
stos
in
jg
in
inc
xchg
stos
lahf
inc
clc
cmp
(bad)
shr
test
imul
or
jmp
jns
xchg
cli
mov
arpl
sti
ja
sbb
leave
pop
sub
je
out
inc
push
mov
adc
leave
mov
cmp
int
test
mov
push
jmp
mov
or
mov
jle
aaa
rcr
dec
jns
icebp
in
pop
dec
cmc
mov
mov
idiv
movs
cld
dec
aam
xlat
fisub
popf
arpl
mov
sub
pop
adc
jne
or
dec
(bad)
sub
xor
push
and
pop
and
ret
in
xchg
aad
mov
das
xchg
sbb
or
inc
inc
adc
cmps
inc
int
and
js
imul
add
data16
aam
or
ds
(bad)
outs
cmp
adc
inc
nop
jns
jmp
inc
test
jb
sbb
fbstp
cmp
out
in
push
outs
cmc
push
lods
(bad)
call
movs
inc
repz
gs
add
cmp
scas
push
call
(bad)
xor
add
lods
loope
cwde
push
push
jmp
xor
mov
je
call
xchg
lahf
lahf
fst
sbb
pop
pop
out
sub
inc
inc
and
jno
mov
xor
out
jns
jae
jp
add
pop
or
fisubr
mov
sahf
pop
test
lock
mov
mov
ja
btr
pop
outs
sbb
clc
push
cmp
cdq
mov
inc
sar
lea
lods
push
(bad)
jo
stos
pop
mov
inc
xlat
sar
arpl
push
xchg
push
stos
cmc
(bad)
inc
and
push
push
or
cmp
push
xor
idiv
das
mov
dec
aad
lds
(bad)
jecxz
cmp
jmp
jae
and
adc
imul
lds
div
(bad)
(bad)
mov
das
imul
cmp
pop
sahf
mov
adc
xchg
xor
xor
stos
mov
pop
xor
pop
repnz
in
add
lods
test
xchg
dec
jl
pop
ror
or
dec
clc
mov
fist
push
or
inc
ret
cmp
and
cwde
push
out
in
dec
inc
fistp
loope
(bad)
sub
push
retf
ss
push
pop
and
nop
outs
dec
xor
sub
stc
ror
ret
fiadd
xor
aam
jnp
adc
push
(bad)
push
cmp
shl
pop
lock
stos
push
jae
jmp
jp
movs
into
pop
scas
fisub
push
xchg
pop
cmp
jns
pushf
jmp
stos
jmp
pop
stos
inc
and
(bad)
loope
adc
adc
mov
out
jmp
repnz
mov
sub
fwait
mov
push
les
addr16
pop
(bad)
xor
adc
adc
push
mov
xchg
pop
adc
in
sub
addr16
push
stc
add
adc
inc
cs
ret
mov
jmp
out
shl
xor
dec
popf
jae
jbe
pushf
hlt
fnstsw
test
sbb
and
jns
test
lods
(bad)
fstp
lahf
repnz
mov
outs
sub
cmc
xor
popf
dec
mov
xchg
cmps
add
push
(bad)
mov
scas
cmp
fs
inc
stos
retf
mov
mov
or
pop
(bad)
pop
movhlps
inc
mov
push
dec
jno
xlat
shl
test
jmp
and
push
push
xchg
(bad)
mov
xchg
sbb
sbb
jl
int3
mov
fadd
lods
aad
add
jb
out
scas
mov
(bad)
data16
pop
inc
pop
imul
(bad)
(bad)
retf
pop
cmps
fcomp
shl
es
mov
mov
cmp
clc
jbe
xchg
jae
inc
mov
out
daa
inc
setp
fs
xor
and
push
jne
fwait
cmps
mov
ja
push
leave
pop
cmp
fmul
cmp
push
pusha
push
jbe
in
neg
xor
and
sub
xor
and
dec
pop
hlt
inc
xor
pop
cmps
adc
jnp
sahf
xchg
mov
jecxz
inc
frstor
mov
aas
(bad)
dec
loopne
jg
popa
pusha
xchg
repz
jmp
jb
jae
jbe
int3
dec
adc
pop
and
lds
dec
ret
cdq
sub
mov
mov
push
mov
ds
jmp
sbb
or
dec
push
mov
into
imul
jne
dec
cwde
jmp
jl
xchg
jmp
dec
xor
xchg
push
cld
inc
add
xchg
mov
cmps
xchg
stos
neg
adc
pop
pop
paddb
cmp
dec
mov
scas
mov
xchg
daa
mov
(bad)
stos
mov
cmp
repz
ret
call
nop
ins
movs
dec
jecxz
mov
dec
and
push
call
mov
nop
loopne
ss
xor
mov
js
imul
call
outs
dec
cmps
pop
(bad)
(bad)
movs
test
in
mov
mov
in
repz
and
call
mov
(bad)
into
jg
call
adc
xor
lods
push
pop
leave
test
jmp
lock
xor
add
push
neg
popf
popa
in
adc
cmp
es
int3
hlt
sbb
in
adc
xchg
mov
fstp
mov
xchg
mov
rcr
daa
push
sub
add
push
loop
or
leave
fistp
test
aas
out
repz
ret
inc
fsubrp
dec
mov
call
adc
jb
rcr
lea
push
dec
inc
rol
cwde
arpl
clc
xchg
add
or
cmp
ds
or
mul
icebp
repz
pop
ins
mov
test
ins
aaa
aaa
out
not
dec
push
ins
nop
stos
xor
sub
psubw
test
jmp
iret
mov
test
lods
rol
push
scas
jno
test
and
imul
or
push
sbb
dec
in
jo
pop
jmp
les
push
nop
sbb
nop
dec
stc
xchg
inc
xchg
mov
jnp
mov
xlat
jne
(bad)
adc
push
sub
ss
pop
sti
pusha
adc
push
pop
loope
lods
repz
lea
(bad)
push
mov
outs
xor
in
jge
dec
cld
mov
pushf
mov
cmp
cmps
loope
mov
out
cli
inc
mov
cmp
sub
imul
dec
push
cwde
adc
mov
ret
ins
or
inc
nop
cmp
add
xor
xchg
dec
and
stos
bound
or
movs
jne
iret
outs
and
lods
push
lods
mov
adc
or
iret
sar
inc
inc
in
jmp
jecxz
xor
fcom
jg
jns
jge
in
int3
dec
cmps
call
ret
pop
or
pop
out
out
inc
sbb
popf
inc
mov
(bad)
mov
pop
pop
xchg
cmps
add
repz
clc
add
(bad)
and
adc
dec
loope
mov
jae
stc
dec
fldcw
inc
fsub
retf
adc
mov
(bad)
sti
fcomp
sbb
sub
xchg
shr
push
push
jne
dec
push
mov
jmp
sbb
cmp
mov
mov
jnp
inc
sahf
mov
std
nop
idiv
or
repnz
mov
pop
stos
cs
sub
out
fs
sti
popf
ss
repz
and
adc
jmp
in
sbb
inc
cli
imul
or
pop
or
pop
push
fnstenv
inc
ja
int
mov
test
scas
xchg
clc
cld
cs
popa
and
cmps
inc
pushf
int3
xchg
sub
scas
and
xor
push
jmp
fs
popa
repnz
cmc
aaa
mov
mov
add
loopne
and
or
enter
enter
(bad)
sub
sahf
lahf
xor
in
cs
mov
nop
cwde
sahf
jne
pop
test
imul
lds
ret
sbb
dec
lahf
ins
add
(bad)
push
add
sahf
pop
jae
fistp
mov
enter
hlt
int
pusha
(bad)
push
scas
add
aam
imul
fwait
loopne
add
push
sbb
jge
mov
pop
cwde
nop
mov
retf
jge
pop
pop
push
int
std
into
movs
or
push
(bad)
sub
and
push
and
push
or
shr
popf
inc
add
add
and
(bad)
add
cs
int
or
loopne
test
xor
adc
sub
pop
and
pop
sub
push
sbb
push
ret
imul
and
dec
cmp
mov
mov
(bad)
and
jbe
mov
(bad)
jecxz
sub
add
sub
cmc
sub
leave
shr
inc
or
lods
pushf
xor
in
and
dec
push
jge
mov
xlat
gs
adc
mov
popa
loope
cs
call
and
fwait
inc
mov
in
sub
or
mov
movs
pop
sub
gs
inc
loopne
sbb
rcr
ret
enter
inc
or
jl
xchg
mov
mov
fistp
xor
dec
retf
and
clc
retf
sbb
xor
out
xor
xor
add
inc
aaa
add
loope
int
fwait
ins
inc
js
mov
cmps
outs
dec
cs
push
js
xor
popf
or
jmp
pushf
jns
inc
ret
pushf
cmp
test
ins
fsub
ja
std
out
mov
fstp
cmps
mov
pop
xchg
outs
xchg
cmc
sbb
lds
cmps
xchg
cwde
and
cmp
test
lds
add
push
mov
dec
adc
jbe
mov
sub
or
imul
dec
inc
sub
or
es
je
push
pop
cwde
jge
retf
adc
push
or
outs
push
xchg
(bad)
mov
dec
cmp
daa
xlat
cmc
jmp
add
push
sub
retf
ins
push
stc
jmp
ja
dec
into
call
xchg
call
mov
sub
cld
xor
test
in
push
push
stos
(bad)
and
cmc
add
jecxz
or
mov
popf
leave
fild
(bad)
(bad)
cmp
call
jnp
bound
inc
(bad)
cmp
pop
test
sub
push
(bad)
cli
cmp
push
add
or
push
adc
xchg
and
je
or
lds
and
or
push
adc
repz
in
lahf
popa
pop
sub
popa
aaa
mov
and
jecxz
ins
hlt
aas
inc
dec
(bad)
dec
fnstsw
mov
sti
test
adc
arpl
push
dec
loope
popf
xor
mov
pop
ds
scas
sbb
fsubr
je
mov
mov
in
mov
or
mov
cmp
sub
push
sub
pop
sbb
stos
getsec
mov
(bad)
xchg
dec
mov
sbb
sahf
cmp
mov
sub
sub
dec
movs
xlat
cmp
adc
into
adc
mov
cli
add
jbe
div
jg
jne
mov
sbb
ds
xor
retf
jecxz
je
pop
in
dec
jo
ins
adc
sbb
mov
xor
(bad)
adc
aas
enter
data16
add
jns
xchg
fucomp
outs
jnp
ins
les
je
aad
dec
and
imul
js
sub
sub
(bad)
into
pop
pusha
add
lods
xchg
sti
mov
les
rcr
dec
loop
movs
adc
push
mov
mov
int3
mov
push
sub
push
jmp
sbb
jl
fwait
arpl
fcomp
adc
jle
movs
jns
pop
in
movs
movs
outs
sub
xchg
and
imul
mov
in
mov
mov
xchg
stc
push
je
fucom
xor
div
in
out
mov
fstp
mov
imul
inc
fdivr
das
inc
pop
sbb
imul
cmp
out
inc
xchg
and
and
push
mov
inc
(bad)
xchg
or
inc
add
or
or
(bad)
jmp
xchg
inc
in
jbe
in
daa
ror
in
fisub
dec
jl
stos
mov
cmp
pop
add
in
add
into
mov
mov
aam
jns
out
pop
adc
push
mov
sbb
sbb
shl
out
fs
sbb
dec
mov
mov
cs
mov
pop
sbb
not
push
jle
(bad)
push
icebp
out
adc
hlt
sti
in
jne
mov
adc
aam
rep
stc
push
mov
out
fcom
ins
jg
mov
cmp
xor
loopne
pop
add
pop
and
shl
adc
mov
mov
mov
sbb
(bad)
mov
aaa
adc
mov
fwait
push
lods
add
int
(bad)
ffreep
pop
inc
dec
push
xchg
pop
sub
jl
(bad)
mov
ret
and
jl
pop
mov
sub
cmp
lods
adc
xchg
gs
mov
retf
test
mov
mov
mov
mov
inc
mov
inc
push
jbe
ins
mov
movs
dec
inc
cld
int3
jge
jmp
and
dec
xchg
or
sbb
test
add
xchg
push
jecxz
icebp
ret
cmps
xchg
jge
or
xchg
cld
jnp
inc
adc
out
pop
cmp
rcl
es
test
dec
cwde
fisttp
cmps
stos
test
inc
jl
jmp
sub
or
pop
sub
mov
inc
inc
ins
(bad)
jbe
out
add
mov
xor
cmp
adc
jecxz
mov
repz
jmp
sbb
mov
scas
xchg
(bad)
daa
sub
xor
or
add
sub
mov
cmps
add
addr16
inc
inc
mov
imul
push
mov
cs
xchg
into
mov
sbb
mov
sub
or
scas
cmp
cmps
push
xchg
test
rol
loop
in
sbb
scas
shr
fdiv
or
or
imul
js
(bad)
jecxz
and
test
add
scas
inc
pop
stos
neg
jg
mov
dec
shl
ss
xor
out
pushf
int
sbb
outs
stos
lds
loop
dec
xor
scas
adc
lods
xchg
neg
adc
rsqrtps
clc
test
rcl
in
dec
jecxz
cmp
cmc
stos
aas
mov
jmp
fimul
mov
inc
ja
mov
pushf
loop
pop
lea
or
add
shl
(bad)
loopne
pop
cli
mov
clc
fcmovnb
mov
cmp
jne
lea
add
(bad)
fcmovnb
cmp
lods
push
dec
push
pushf
fsubr
sub
fmul
xchg
sub
xlat
mov
cdq
inc
aas
and
pop
adc
iret
adc
cmp
(bad)
outs
inc
(bad)
jmp
mov
sbb
mov
xor
xor
sbb
push
repnz
dec
js
mov
adc
lods
out
fidiv
mov
movs
in
dec
test
cmp
cli
mov
cwde
and
stos
cmp
(bad)
movs
jle
or
add
xor
mov
xchg
xor
retf
sbb
jno
mov
inc
sar
into
and
rol
or
(bad)
xchg
ja
clc
in
bound
ret
jg
xchg
xchg
and
push
ffree
lds
leave
fs
(bad)
call
push
sbb
pushf
fwait
gs
inc
repz
jbe
sub
cmp
movs
xchg
ja
movs
inc
sbb
xor
inc
push
cmp
xor
into
cmp
and
outs
cli
dec
cmp
mov
out
push
hlt
adc
ret
mov
ins
sbb
and
jae
jo
lahf
pop
icebp
(bad)
mov
xor
xor
mov
clc
gs
mov
stos
mov
sbb
jno
hlt
mov
push
cmc
call
and
dec
es
mov
push
mov
mov
fmul
fs
mov
in
cmp
fsubp
aam
xchg
out
je
(bad)
sti
out
scas
retf
mov
icebp
je
jl
repnz
xor
add
mov
(bad)
inc
sahf
pop
pop
pop
xor
xchg
int
inc
test
lods
xchg
mov
xor
cmc
sbb
lods
xor
cmps
mov
xchg
adc
icebp
gs
adc
dec
dec
loop
xor
or
xor
in
(bad)
pop
leave
fisttp
or
jp
xchg
popf
or
popf
jno
mov
mov
mov
rol
add
mov
xor
mov
sbb
cmp
xchg
outs
das
pop
xchg
dec
jno
sahf
adc
pushf
aaa
into
scas
and
pop
mov
mov
inc
mov
jecxz
mov
adc
push
stc
xchg
outs
inc
add
jnp
imul
pop
adc
pop
xor
jo
nop
lods
add
sbb
adc
daa
add
push
adc
jo
out
ret
xchg
cdq
inc
arpl
iret
mov
cmp
push
in
jo
push
loopne
pusha
jge
stos
push
imul
push
mov
jl
jl
loopne
sbb
movs
aam
and
ret
or
les
outs
xchg
lahf
(bad)
sub
sahf
jge
movsx
dec
sub
xor
ds
add
lea
pop
xor
call
adc
mov
pop
cmps
dec
mov
push
inc
icebp
and
int
mov
ds
and
inc
ret
jne
add
addr16
mov
cmps
jnp
cmp
push
aam
mov
repnz
cmp
mov
dec
mov
dec
or
sbb
sub
adc
addr16
(bad)
dec
and
mov
lock
pushf
in
fstp
and
sbb
es
push
and
shl
adc
adc
sbb
test
xchg
ja
rol
xchg
jae
inc
push
mov
jb
push
xor
fnsave
ins
sub
bound
fld
call
jns
jmp
fwait
inc
lahf
xchg
xchg
xchg
dec
xchg
dec
mov
adc
jp
neg
int3
jmp
xchg
inc
sbb
cs
retf
jg
icebp
das
inc
sub
lods
inc
in
pop
jp
mov
dec
sahf
push
ret
out
or
ret
xchg
jge
inc
pop
int
push
fdivrp
(bad)
jb
shl
ret
lds
loop
pop
push
call
enter
mov
int3
inc
push
pop
pop
fld
dec
test
lahf
xchg
dec
adc
ins
mov
or
jle
cmp
or
je
sbb
movs
inc
hlt
add
jns
dec
call
dec
cmp
inc
(bad)
inc
nop
cmp
sub
or
or
sub
adc
stc
xlat
push
hlt
sub
test
sbb
sbb
(bad)
test
cmp
cmp
mov
jo
and
daa
pop
repnz
pop
add
xchg
inc
scas
ins
nop
jmp
push
adc
sbb
cdq
mov
dec
aas
lock
push
outs
aad
cmp
aad
pop
jp
je
jp
out
pushf
pop
aas
(bad)
xor
out
add
add
es
xchg
cmp
sbb
add
sti
fist
test
sub
hlt
pop
adc
cmps
pushf
dec
nop
enter
daa
jbe
push
mov
fisub
and
(bad)
sub
add
mov
push
mov
dec
stos
sbb
mov
pop
(bad)
dec
mov
in
(bad)
xchg
mov
xor
mov
test
ja
in
call
jge
push
push
push
fdiv
jp
lahf
add
leave
repnz
arpl
ins
mov
out
in
aaa
and
pusha
mov
mov
fsub
add
pop
sar
hlt
mov
stos
push
dec
sbb
pop
jnp
or
sbb
push
imul
jbe
add
sbb
mov
add
les
mov
cmp
stc
cmps
fstp
mov
add
cmp
xor
xor
fisub
xor
pop
stos
cli
icebp
dec
push
inc
pusha
and
sub
inc
fldenv
aaa
jp
xchg
test
(bad)
and
jnp
and
xor
mov
xchg
bound
and
mov
xchg
jmp
(bad)
fild
sti
das
retf
(bad)
xor
loope
movs
pop
cmp
into
out
cmp
and
sbb
das
add
dec
shr
or
pop
(bad)
pop
sub
cmp
and
add
adc
test
xor
jne
ja
nop
in
inc
or
inc
out
iret
pop
mov
call
pop
push
out
xchg
jge
mov
(bad)
xor
sub
ds
or
push
leave
or
jmp
lods
mov
(bad)
mov
push
add
int
test
addr16
outs
pop
xor
jb
in
pop
retf
mov
jno
jp
xor
jns
outs
push
sbb
call
sub
sti
cli
inc
add
mov
xchg
int3
pop
mov
cmp
rcl
enter
aas
je
push
(bad)
test
sub
addr16
lods
dec
jmp
ds
int
frstor
push
idiv
push
scas
jmp
dec
das
leave
cmps
ins
xchg
leave
push
xor
cli
sub
sbb
push
daa
dec
lods
outs
imul
pop
(bad)
mov
mov
pminsw
xchg
dec
push
jmp
test
jo
mov
push
fmul
jmp
dec
dec
std
xchg
retf
mov
mov
std
or
jns
dec
pop
(bad)
cmp
scas
sub
pop
in
sbb
cmc
mov
aas
mov
cmp
fucomp
sub
push
imul
retf
jmp
inc
jb
stos
dec
shl
shr
addr16
sbb
jecxz
das
adc
mov
xor
retf
bound
jmp
fiadd
dec
imul
por
push
lahf
mov
cmp
sbb
mov
dec
shl
pop
xor
push
cdq
dec
jmp
jle
jns
or
adc
fimul
xchg
pop
dec
out
jb
fimul
add
push
dec
mov
je
pop
(bad)
lock
mov
loopne
(bad)
pop
sub
inc
dec
push
mov
jnp
(bad)
aam
mov
repnz
icebp
fisttp
xor
stos
pop
jo
sbb
pop
pop
out
out
sti
lahf
fucom
in
cdq
push
into
push
in
jp
mov
hlt
xchg
xchg
pop
xchg
xor
int3
pop
les
pop
call
nop
je
shl
inc
mov
xchg
sbb
sub
adc
dec
outs
pop
sub
icebp
or
cmp
ds
jle
mov
aad
leave
dec
(bad)
jnp
mov
outs
aaa
hlt
push
les
fcomp
jbe
push
ss
ret
cmps
cmp
popf
mov
sub
in
call
xchg
push
mov
(bad)
cmc
mov
popf
dec
mov
test
push
mov
shr
lds
enter
or
repnz
and
mov
in
ror
mov
jne
rol
(bad)
mov
xor
xor
push
adc
jno
xor
pop
sub
clc
jle
lock
mov
dec
push
mov
sbb
and
mov
out
pop
xchg
jo
out
jle
sub
add
ins
mov
xor
mov
pop
fcom
inc
ror
mov
jge
jns
outs
inc
pop
cmps
popf
pop
mov
pop
aas
jb
mov
sbb
movs
jle
pop
mov
in
shl
ror
dec
hlt
push
adc
into
mov
leave
test
dec
dec
(bad)
push
pushf
clc
mov
push
scas
xchg
and
xchg
push
and
pmaxsw
sub
arpl
repnz
push
lds
les
dec
call
cmc
(bad)
gs
dec
sub
stc
xchg
push
mov
out
mov
push
and
fadd
dec
push
jmp
mov
inc
push
test
daa
loop
shl
jg
shl
in
xchg
in
aaa
stos
jo
pop
push
ret
mov
xlat
dec
imul
xchg
scas
mov
fcomp
test
push
push
dec
mov
mov
push
in
inc
loop
mov
jb
push
cmps
test
mov
lods
xchg
aam
xor
out
inc
les
dec
aad
ds
mov
ds
out
daa
jae
inc
cli
scas
mov
(bad)
aas
ss
(bad)
push
ins
sbb
jb
xchg
idiv
fstp
sahf
das
push
adc
jae
(bad)
xor
lds
cmp
dec
fmul
xchg
and
mov
inc
jo
pusha
jmp
cmps
mul
cmp
dec
xor
ret
mov
fdivr
ficomp
scas
push
mov
jg
test
int3
lds
outs
mov
je
je
in
jbe
stos
outs
pop
out
call
out
or
cmp
jne
outs
aaa
inc
push
je
daa
sub
shl
sbb
inc
movs
shl
call
aas
or
mov
call
mov
test
sub
repnz
inc
pop
dec
cmp
lahf
dec
dec
call
aad
xor
mov
lea
rcr
inc
cmc
push
push
and
sbb
push
or
sub
inc
xchg
xor
push
ret
mov
mov
sub
cmp
xchg
sbb
mov
or
icebp
push
adc
lds
fstp
jl
js
rcl
fs
cmp
nop
pop
pop
repz
mov
and
sbb
lods
fidivr
mov
enter
push
test
movs
pop
mov
sub
mov
js
scas
xor
inc
sahf
cs
sets
push
mov
mov
clc
jo
into
sbb
lock
shl
fwait
mov
outs
ret
jle
xlat
pop
cmc
xor
imul
out
mov
add
loopne
fimul
adc
or
xor
sub
fimul
mov
and
xchg
xchg
cli
scas
arpl
cmp
xor
in
popf
sbb
jg
out
shr
jp
add
aas
call
pusha
mov
das
(bad)
repz
sub
push
(bad)
gs
lock
xor
or
dec
jbe
pop
retf
add
cmp
into
ss
in
push
dec
inc
xlat
scas
into
out
lds
int
call
mov
mov
(bad)
mov
test
mov
sbb
mov
inc
add
(bad)
jmp
push
pop
mov
int
adc
xor
dec
push
call
sub
dec
cdq
jne
into
lea
or
jp
adc
les
mov
(bad)
fidivr
pusha
xor
jmp
push
mov
pop
test
sbb
and
aaa
cs
jae
sar
push
dec
addr16
xchg
cwde
hlt
sbb
int3
daa
div
add
shl
mov
or
enter
mov
ds
(bad)
xchg
cmp
mov
cdq
cmps
test
push
mov
out
adc
imul
mov
dec
loope
data16
inc
inc
or
lock
xor
test
test
lahf
mov
push
gs
mov
int
mov
push
add
dec
je
adc
mov
cmp
inc
push
mov
mov
hlt
stos
out
test
(bad)
sti
addr16
(bad)
mov
rcr
mov
leave
test
repnz
jecxz
sbb
hlt
in
call
dec
in
jmp
sbb
gs
int3
fnsave
and
cmp
test
mov
and
mov
push
sub
sbb
maxps
cmp
retf
nop
cmps
cld
cmp
sub
fnsave
sub
mov
lahf
bound
out
mov
or
pop
ficom
test
jne
push
adc
mov
inc
mov
shl
mov
inc
ror
xlat
gs
xor
cmp
pop
cwde
inc
je
jo
in
jnp
inc
fldcw
cmp
xor
dec
repz
add
das
mov
pop
and
jae
retf
loopne
push
add
cmp
sub
or
cmps
sbb
pop
fild
lods
ss
jmp
dec
push
xor
mov
cmps
cmps
dec
add
mov
pop
or
in
mov
aam
das
mov
jo
cmp
xlat
mov
loop
call
nop
iret
dec
ja
lock
jb
out
mov
push
mov
jle
sbb
jo
or
sub
sbb
or
in
jne
jle
pop
mov
and
retf
pop
pop
pop
push
stos
cmp
mov
iret
outs
mov
mov
shr
lods
sub
mov
loop
jg
pushf
jle
dec
lods
out
test
mov
(bad)
mov
xchg
sbb
mov
je
cli
mov
mov
scas
push
js
pop
movs
fdivr
ficomp
in
dec
mov
add
dec
lods
jns
jmp
jbe
popf
call
inc
inc
xor
shl
cwde
mov
jle
push
mov
push
addr16
pop
mov
sti
aad
lea
test
push
adc
ret
jns
mov
call
sbb
pop
mov
test
bound
bound
pop
pminub
mov
mov
int3
das
pop
lock
and
pop
aam
cmps
mov
pop
in
add
fcom
mov
daa
sub
je
lock
iret
sub
enter
jp
cdq
mov
cmc
stc
out
mov
or
sub
cdq
xor
push
mov
jns
sbb
jmp
xor
(bad)
out
pop
push
sbb
push
(bad)
xlat
dec
push
pop
dec
xchg
clc
and
mov
pop
sbb
leave
(bad)
sbb
loope
test
div
icebp
sub
add
xor
stos
clc
xchg
jge
and
dec
push
pop
pop
jle
push
mov
nop
add
loopne
jnp
call
js
push
sbb
jnp
addr16
cmp
out
repnz
or
retf
(bad)
shl
mov
scas
push
adc
ror
inc
test
pop
(bad)
push
adc
(bad)
fadd
les
aad
(bad)
out
stos
imul
mov
retf
lea
inc
jl
mov
sbb
mov
aas
mov
not
clc
xor
mov
mov
cwde
inc
mov
movs
cmc
shr
aam
iret
addr16
cmp
dec
mov
inc
pop
fidiv
pop
or
mov
fldenv
inc
xor
xchg
loop
cld
fwait
push
xchg
mov
fdivrp
and
mov
inc
sbb
sub
add
retf
jne
cmp
pushf
mov
ret
or
jl
cs
idiv
mov
fld
xchg
add
push
dec
js
leave
cmp
mov
mov
inc
pop
dec
sub
rep
into
leave
and
add
dec
pop
xor
(bad)
pop
cwde
mov
cld
inc
fs
aad
jmp
in
mov
ins
mov
clc
movs
and
push
push
ja
nop
inc
mov
loop
cmps
add
cmps
in
mov
sub
shr
inc
hlt
mov
cs
ret
and
or
xchg
fwait
test
mov
or
push
cmp
cli
pusha
xor
(bad)
or
jb
popa
cs
jmp
stos
inc
add
lods
sti
dec
mov
xchg
jno
push
into
cmp
cmp
push
es
cli
jns
mov
sub
xchg
and
in
mov
sub
add
(bad)
sbb
jp
cli
es
add
call
adc
sar
int
or
jno
sbb
ret
movs
xchg
je
shl
xchg
cmp
jl
js
mov
lds
sbb
push
xchg
outs
add
cwde
mov
out
jae
ret
js
cmp
fild
jmp
sti
jno
pusha
call
jecxz
mov
mov
pop
idiv
jg
dec
dec
jnp
inc
sub
xchg
sbb
and
sub
jmp
xor
iret
or
(bad)
jno
adc
xchg
jo
pop
cs
out
int
mov
inc
ffreep
jp
jno
sub
stos
xchg
mov
cld
into
int3
adc
lock
lahf
(bad)
leave
push
and
std
ret
xchg
(bad)
arpl
rol
sbb
stos
nop
daa
push
or
sbb
cdq
mov
les
or
mov
push
cmp
aam
movs
cmps
pop
mov
lock
fs
cmp
cld
pop
jecxz
fdivr
and
clc
push
xor
push
xchg
pop
push
sahf
bound
lea
dec
xchg
test
call
aam
adc
int3
out
xor
jge
cmp
fstp
and
sub
mov
mov
out
jnp
ins
lahf
and
adc
jmp
xchg
jnp
mov
mov
cwde
sbb
test
mov
jo
addr16
and
and
imul
fild
push
iret
sbb
mov
call
sbb
mov
aas
fiadd
push
sub
cwde
jl
jmp
fsub
mov
arpl
lea
inc
push
in
es
test
out
pushf
shl
into
dec
repnz
not
aaa
fucomi
jp
xchg
clc
fild
movs
jnp
(bad)
fcmovnb
mov
push
and
out
cmc
sbb
scas
cmp
push
dec
pop
pop
daa
mov
clc
addr16
mov
iret
lock
bound
xor
sub
mov
cs
mov
sbb
scas
std
int3
cdq
lock
iret
sti
sbb
cmps
bound
lods
je
pop
xor
or
add
sahf
(bad)
and
pop
in
mov
cmps
mov
out
(bad)
xor
fild
inc
push
add
pop
or
add
xor
xchg
or
mov
sbb
lock
xchg
leave
outs
movs
xchg
mov
xchg
(bad)
pop
(bad)
pop
in
cmp
dec
stc
movs
mov
call
imul
pop
int3
xchg
mov
dec
mov
std
jb
mov
xchg
mov
(bad)
mov
cmp
cmp
call
test
repz
xlat
xchg
xchg
fsubr
mov
es
inc
push
xor
jp
xor
jo
mov
leave
ficomp
jecxz
xchg
pop
cmp
psubsw
sub
push
sub
inc
dec
and
pop
mov
mov
pop
mov
add
xor
sti
cdq
leave
xchg
push
jmp
leave
ficom
mov
xchg
adc
sbb
cmp
mov
push
jmp
stc
add
or
inc
sbb
jecxz
add
jb
es
mov
outs
arpl
and
test
in
jno
idiv
inc
mov
push
cmp
out
push
or
aam
push
lds
add
jns
cmp
mov
xchg
in
test
pop
out
test
ss
pusha
cli
mov
cli
ror
sub
fldlg2
xchg
mov
mov
sub
xor
push
imul
ret
and
jne
jp
mov
sti
bound
pop
das
mov
pop
cmp
or
push
out
sbb
enter
push
mov
iret
push
xchg
jp
mov
sub
push
cmc
jg
inc
xchg
mov
dec
loope
arpl
inc
jns
adc
jae
in
daa
test
jbe
inc
and
jmp
sbb
xor
xchg
sar
cmp
dec
dec
mov
jnp
rol
inc
pop
movs
pop
adc
sbb
and
loop
inc
cmp
in
clc
stos
(bad)
sti
mov
nop
xlat
idiv
(bad)
fstp
jnp
aaa
retf
mov
ss
jno
hlt
out
push
inc
retf
outs
cmove
clc
xchg
mov
jnp
mov
daa
mov
pop
inc
fst
stos
push
icebp
dec
xchg
push
dec
mov
data16
ss
xor
xor
stos
add
lods
icebp
in
je
dec
shr
pop
cmc
xchg
jg
jecxz
fcom
mov
pop
movs
sbb
add
xor
xor
mov
aad
pop
adc
inc
adc
test
clc
inc
repnz
pop
and
mov
cmp
loop
shl
ja
jge
fcmovnu
in
syscall
setns
xchg
inc
shr
adc
inc
cld
jmp
jne
mov
out
dec
and
xchg
xchg
or
scas
sbb
test
xor
mov
pusha
inc
mov
sub
push
xchg
cld
jp
push
data16
pop
into
fisttp
push
mov
xlat
xchg
dec
das
push
push
stos
in
stos
mov
stc
pop
inc
inc
psllw
pop
(bad)
fild
adc
ds
cmp
mov
(bad)
mov
bound
push
dec
cmps
mov
cmps
jmp
icebp
fs
into
xchg
sbb
fld
add
inc
stc
xor
pop
sbb
mov
in
icebp
pop
ss
lds
fld
lock
mov
cmp
shl
mov
mov
enter
in
adc
out
inc
add
(bad)
icebp
sbb
adc
loop
mov
sbb
out
aam
dec
xor
pop
outs
mov
and
jne
fnsave
fcomi
fwait
adc
data16
nop
mov
aaa
aaa
mov
rcr
enter
mov
js
cmps
in
shl
pop
mov
mov
sbb
mov
test
jo
xor
hlt
clc
das
sar
lods
sub
rcl
pop
mov
in
popa
sahf
mov
jns
xor
sbb
js
push
xchg
push
and
and
push
pop
mov
mov
mov
push
fisub
dec
in
in
or
xor
fcom
inc
enter
adc
jbe
pushf
xchg
xor
daa
push
cmp
jbe
mov
add
dec
cmps
jle
lds
sar
in
in
jmp
int3
in
rol
push
in
or
dec
add
cmp
out
jle
sahf
mov
jmp
or
or
sbb
movs
fcomp
test
arpl
cli
xchg
arpl
xor
aad
push
cwde
enter
sub
jg
xchg
(bad)
fsubr
or
addr16
movs
adc
cli
arpl
jns
push
ror
mov
loopne
mov
in
dec
lea
call
test
and
or
iret
sar
jmp
test
push
out
aam
into
rcr
jbe
mov
icebp
rol
hlt
pop
mov
push
std
cmps
xor
pop
jmp
comiss
out
pusha
add
lahf
mov
stc
mov
in
inc
xor
jmp
and
sbb
inc
mov
dec
push
inc
ret
inc
ja
pop
imul
and
xchg
rol
lods
inc
fstp
pop
hlt
cmp
sbb
mov
mov
mov
add
iret
and
jle
ficom
jne
inc
test
das
cs
in
out
lea
mov
push
mov
icebp
mov
xchg
and
push
add
(bad)
outs
pop
pushf
or
or
mul
ja
or
push
pop
pop
retf
mov
push
outs
xor
push
daa
ss
cmc
int
adc
mov
leave
jo
push
add
jne
fsub
int3
lock
(bad)
aaa
retf
sub
(bad)
aad
pop
jge
push
or
es
or
movs
mov
push
mov
cmp
pop
call
mov
sub
mov
adc
add
ret
mov
sahf
adc
xor
cmps
adc
jb
inc
xchg
test
retf
push
cdq
outs
pop
mov
fcomp
cmps
stos
(bad)
sbb
sub
(bad)
xchg
xchg
mov
in
cmp
xchg
fld
mov
add
repnz
inc
jnp
sar
repnz
popf
cmps
shl
enter
adc
mov
jne
inc
loopne
imul
xchg
test
call
mov
inc
mov
call
out
xor
adc
or
push
dec
or
rcl
sbb
retf
in
or
inc
data16
fs
and
cdq
addr16
xchg
mov
in
shl
pop
mov
sub
xchg
xchg
(bad)
jmp
and
pop
mov
inc
add
ja
aas
or
out
mov
sbb
mov
fistp
inc
sar
out
dec
inc
jmp
inc
and
call
jmp
pop
(bad)
jl
imul
out
gs
add
mov
ret
inc
test
pop
jbe
dec
out
sub
pop
mov
xor
sub
dec
and
add
movs
ja
sar
cmc
jb
lods
loopne
jb
inc
pop
lds
cmp
and
dec
inc
mov
mov
ins
dec
push
repnz
jmp
and
sbb
ins
retf
jmp
or
dec
js
hlt
outs
mov
je
fwait
jmp
lahf
sub
fld
jo
and
sbb
out
retf
ret
je
and
(bad)
mov
dec
dec
jo
(bad)
jnp
jne
repnz
rcl
ror
(bad)
xchg
push
and
(bad)
rcr
jae
add
call
mov
jno
es
mov
mov
aaa
sahf
and
add
cmp
leave
adc
pushf
mov
or
pop
xor
out
ss
jne
push
pop
enter
out
ds
mov
jno
adc
sub
mov
add
shr
sbb
add
test
(bad)
in
or
dec
(bad)
cmp
test
das
mov
sub
inc
jb
mov
cmp
arpl
sbb
mov
cmc
out
call
repz
fiadd
out
sub
movs
jle
sbb
loopne
in
xchg
cmp
jno
dec
mov
inc
fs
hlt
inc
cld
mov
mov
fild
jge
scas
arpl
ret
data16
mov
(bad)
pop
xor
ret
xchg
cmp
mov
icebp
cld
in
cs
mov
test
jns
stc
mov
pop
sbb
and
inc
cli
and
inc
jno
cmp
sbb
dec
pop
ficom
and
icebp
dec
xor
outs
outs
xor
adc
ret
cld
shr
push
daa
push
sub
popa
pop
clc
ins
aam
mov
aad
jnp
jg
cmp
lock
mov
sub
mov
retf
(bad)
outs
in
push
(bad)
and
pop
iret
scas
inc
mov
addr16
xor
ins
and
mov
addr16
mov
or
push
add
gs
dec
retf
aas
addr16
bound
adc
inc
std
mov
data16
xchg
out
retf
and
call
or
fidivr
leave
mov
and
mov
sahf
or
pop
mov
imul
jae
cld
es
jl
out
adc
fistp
jnp
mov
mov
xor
(bad)
data16
xchg
mov
xchg
pop
aam
cdq
inc
sub
in
enter
xor
jl
push
mov
pushf
add
inc
cwde
add
push
mov
sahf
outs
dec
mov
bndldx
rcl
dec
push
test
pop
jnp
ret
mov
sbb
push
cmp
lods
push
cmps
add
(bad)
inc
jno
cld
mov
jecxz
xor
adc
shl
std
cmps
sub
inc
mov
and
or
dec
cmc
ss
mov
push
cmp
retf
sti
mov
stos
sub
adc
into
out
dec
test
jg
mov
aam
or
(bad)
jecxz
xlat
xchg
movs
stc
fdivr
dec
fmul
sub
push
jns
pop
pop
add
pop
push
or
inc
push
and
or
fist
call
movs
push
add
jmp
pop
pop
mov
push
mov
cmp
lock
pop
ins
dec
mov
shl
aaa
sub
adc
xchg
outs
sahf
dec
add
xor
push
sbb
lods
xor
js
mov
cmp
rol
stos
fmulp
dec
push
loopne
sub
ins
xor
jo
add
scas
loope
pop
add
push
call
xor
adc
xor
(bad)
fwait
cli
jmp
shl
fdiv
aaa
nop
push
cmp
cmp
movs
cld
adc
push
xor
jle
fadd
cmc
jmp
jl
and
fdivr
pop
loopne
mov
xchg
sahf
xchg
xor
add
shl
fistp
dec
jne
push
std
cmp
(bad)
hlt
ficom
sbb
fucom
test
int3
jle
arpl
mov
xor
imul
neg
ret
div
into
es
pop
sub
stos
push
nop
out
loope
pop
imul
ret
mov
jne
neg
movs
hlt
fs
push
movs
pmulhw
das
push
(bad)
mov
sahf
pop
out
and
dec
aam
or
out
(bad)
arpl
adc
adc
into
dec
mov
and
repnz
push
add
jno
call
aas
das
mov
pop
sbb
adc
test
into
mov
test
arpl
sbb
(bad)
sub
inc
push
and
cmps
mov
loopne
sbb
jnp
pop
xchg
dec
lds
mov
dec
pop
dec
mov
adc
jmp
adc
mov
mov
call
mov
fisttp
xchg
test
push
inc
jb
ror
pop
cld
pop
fwait
sbb
xchg
ins
push
or
popa
adc
popa
or
or
dec
mov
fidivr
or
inc
mov
mov
or
(bad)
(bad)
xor
and
outs
mov
add
xor
outs
mov
cmps
hlt
scas
bound
shl
shr
inc
hlt
lods
int3
pop
sub
sbb
popa
xchg
mov
adc
and
pop
out
and
or
and
pop
stc
sbb
mov
outs
inc
aad
cdq
arpl
lods
scas
mov
retf
int
scas
in
xchg
xchg
sahf
mov
add
xchg
jbe
mov
div
into
ficomp
mov
xchg
jmp
mov
mov
enter
sub
jg
inc
(bad)
in
in
push
lahf
neg
sub
bound
retf
push
repz
bound
sub
bound
outs
popa
push
pop
arpl
jecxz
(bad)
js
add
mov
fdivr
xchg
xor
jecxz
xchg
xchg
mov
dec
and
shl
jns
outs
sahf
pusha
adc
sub
jl
pop
call
push
xor
inc
stc
push
stos
out
pop
add
rcl
xchg
jae
loopne
cdq
mov
and
test
push
addr16
push
add
pop
(bad)
hlt
mov
lock
push
xchg
inc
xchg
ret
cmps
test
fistp
and
mov
movs
adc
xor
int3
shr
sbb
out
push
mov
bound
popa
std
push
loop
shl
sub
repz
in
cmc
dec
cld
xor
mov
mov
push
movs
mov
lods
sahf
jo
js
mov
and
cdq
xlat
and
sub
cmc
pusha
push
mov
pop
(bad)
jb
sub
xchg
popf
mov
xor
dec
pop
adc
mov
sbb
aas
out
xor
daa
add
(bad)
dec
fcomp
addr16
ins
jbe
add
and
movs
mov
test
mov
ja
js
jbe
jno
mov
xchg
and
pop
fdivr
pushf
mov
iret
inc
repnz
or
ret
xchg
and
mov
mov
mov
inc
inc
inc
xchg
jnp
lahf
fld
pop
push
mov
cmp
mov
and
or
fild
jmp
jp
dec
xchg
push
xor
cmp
dec
stos
mov
dec
mov
push
scas
pop
in
lods
xchg
sbb
mov
ret
pop
fucom
or
cwde
pop
retf
popf
in
adc
clc
cmp
fcmovb
pop
jae
fdiv
data16
out
iret
ret
sub
push
mov
mov
cmp
out
jo
aaa
mov
adc
pop
in
xor
(bad)
jmp
dec
push
cld
inc
dec
sti
aas
call
enter
in
xchg
pop
loopne
dec
mov
push
shl
imul
inc
and
mov
enter
push
cld
mov
or
xor
pop
xor
ficomp
xor
push
aas
imul
add
add
mov
xchg
stos
sbb
sub
mov
push
pushf
jle
repz
inc
pop
mov
outs
sub
(bad)
adc
test
add
movs
add
stos
nop
xchg
lods
jne
push
cmp
stos
ss
dec
pop
imul
or
fs
pop
push
ja
inc
imul
dec
pop
inc
xlat
add
mov
mov
mov
fwait
push
push
aam
into
stos
adc
sub
cmp
dec
je
(bad)
in
aam
movs
cdq
cmc
jmp
gs
ret
(bad)
test
gs
ins
test
mov
sbb
mov
scas
xor
cli
rol
xchg
sbb
lods
daa
loop
cld
mov
xchg
adc
mov
imul
and
mov
leave
add
into
shl
cmp
xor
fsubr
add
adc
mov
and
imul
pop
pop
repz
and
adc
xor
inc
cmc
out
fs
into
and
jmp
popf
stos
or
pop
jp
aas
jle
sub
js
mov
mov
leave
or
test
sub
pop
cs
lock
div
cmps
loopne
(bad)
fsub
push
in
mov
cld
in
push
nop
cld
fisub
(bad)
mov
dec
lock
sbb
mov
retf
adc
inc
adc
(bad)
xchg
add
adc
mov
or
xor
cdq
call
outs
cmps
cmc
inc
mov
sbb
(bad)
(bad)
lahf
ins
add
cmps
es
pop
je
cmp
xchg
(bad)
ja
pop
test
sub
inc
stos
hlt
daa
xchg
push
cmp
sar
inc
add
cs
xchg
jecxz
pop
push
mov
cmp
xchg
repnz
sbb
out
cmps
mov
clc
jne
add
mov
fs
mov
mov
test
push
pop
sbb
cmp
in
sahf
jl
mov
dec
sbb
(bad)
nop
jnp
xlat
into
mov
push
addr16
cmp
out
pushf
cmp
jle
inc
jmp
push
jmp
mov
ins
mov
lods
in
adc
push
mov
cmp
gs
stos
js
mov
mov
xchg
xor
jmp
in
aaa
dec
xchg
shl
outs
adc
mov
fist
sahf
jmp
mov
adc
dec
pop
mov
out
or
mov
gs
push
hlt
adc
dec
cmps
popa
add
out
rol
inc
nop
push
jbe
xchg
pop
(bad)
sbb
mov
lea
jp
pushf
test
ret
xchg
pop
lahf
daa
fcmovnbe
dec
push
jge
inc
push
inc
mov
loope
sub
push
cmp
test
retf
pop
inc
lds
add
mov
and
or
ins
sub
scas
and
jle
pop
jmp
jae
xchg
inc
and
ss
jbe
or
fdivr
mov
cld
scas
hlt
pop
shl
push
dec
clc
pop
js
lea
and
xor
mov
fild
mov
out
sub
pop
sbb
cmp
xchg
dec
push
mov
xchg
jmp
aaa
ffree
sbb
cdq
jle
sahf
es
sub
fsub
push
mov
or
xor
jbe
dec
push
test
outs
jo
xchg
sbb
add
push
fs
add
xchg
fldenv
aaa
ds
mov
inc
pop
and
sbb
pop
mov
fs
jae
push
jmp
mov
lods
mov
outs
ds
xchg
popa
lods
stc
callw
inc
pop
xor
sub
fild
popf
pop
xlat
sbb
mov
add
push
enter
je
sti
retf
hlt
add
jae
addr16
push
cmp
enter
ss
dec
call
pop
clc
mov
push
mov
mov
movs
pusha
lods
mov
das
js
pop
push
mov
ss
rol
push
aas
es
movs
sbb
aas
sbb
fcmovnu
and
into
mov
gs
mov
mov
dec
fiadd
inc
aas
fsub
and
rcr
fdiv
loope
jnp
out
fs
cmp
xor
mov
jb
aad
xor
(bad)
out
fs
sub
pusha
pushf
pop
add
gs
fisttp
or
mov
sbb
push
jne
cmp
inc
fdiv
loop
and
(bad)
jmp
fild
and
not
adc
mov
cmp
loop
sub
shl
fild
aad
pop
rol
bnd
stc
sbb
bnd
data16
adc
xchg
rcr
sub
fisubr
test
mov
xor
xor
mov
adc
cmp
mov
ret
push
jmp
dec
cld
dec
push
add
cld
push
sbb
jno
lahf
cmps
add
mov
add
in
stos
and
lock
out
aam
scas
in
mov
popf
sub
(bad)
in
jbe
jmp
cli
sbb
mov
dec
in
movs
mov
inc
enter
(bad)
push
cs
add
leave
and
fisubr
shl
lods
mov
stos
sub
add
dec
jno
call
add
pop
add
dec
rol
xchg
sub
fsubr
popa
mov
inc
je
mov
mov
and
clc
movs
cmp
sti
test
repz
xchg
cli
(bad)
mov
fwait
sar
jmp
and
xor
adc
push
pop
into
xor
jne
pop
jns
push
push
div
fldcw
mov
and
inc
xchg
(bad)
mov
jae
in
std
ds
cmp
or
pop
and
fmulp
std
ret
sub
into
aas
inc
pop
adc
out
mov
pop
call
ja
or
xor
xchg
cmps
retf
je
adc
adc
out
jle
sub
jnp
mov
inc
pop
xchg
ins
aam
mov
std
into
add
xlat
lods
dec
mov
dec
or
mov
ret
inc
leave
cli
call
icebp
icebp
mov
and
xchg
jg
sar
es
pop
ss
div
div
sub
inc
cmps
aas
cs
jae
or
fsubrp
jge
mov
pop
int
or
js
dec
jmp
mov
cmp
mov
jns
mov
mov
out
sahf
jns
pop
cld
adc
push
or
jbe
cli
stos
ins
add
xchg
scas
jl
sar
cld
and
mov
bswap
int3
mov
and
lahf
lods
xor
adc
fcomp
jge
xchg
mov
jmp
sbb
push
inc
mov
add
jb
dec
mov
cmc
cmp
cwde
sub
mov
lahf
add
mov
dec
stos
add
out
sbb
out
mov
xlat
lea
or
cmps
cmps
dec
pusha
stos
iret
add
popa
enter
call
inc
push
or
fdiv
pop
imul
dec
loopne
mov
xor
je
push
lea
lahf
xor
lods
std
imul
mov
dec
std
mov
inc
fdiv
cmc
cmps
jmp
sahf
lods
adc
imul
xor
cmp
shr
call
lock
lods
test
inc
es
or
mov
aaa
sub
mov
push
in
mov
stos
jb
mov
add
inc
popf
cmps
or
cmp
and
sbb
and
mov
push
imul
scas
jbe
lea
xchg
hlt
and
cs
ret
dec
es
ins
les
dec
and
nop
mov
sar
xchg
xor
fcom
mov
test
imul
cld
mov
fs
sar
fbstp
movsx
xor
xchg
out
push
sahf
or
add
nop
cmp
out
mov
xor
sbb
imul
sub
xchg
pushf
jecxz
aad
sub
sub
dec
pop
pop
jmp
repnz
stos
data16
xchg
fwait
daa
jmp
enter
(bad)
je
mov
push
call
scas
stos
loopne
scas
pop
lds
mov
je
mov
or
push
test
lock
cmps
cmp
xor
inc
add
inc
imul
xor
dec
jno
mov
lods
retf
inc
out
addr16
popf
repz
xchg
cmp
cmp
mov
cwde
mul
mov
js
cmp
ret
fsubr
jg
ror
jne
sub
mov
(bad)
adc
sti
add
or
lods
cwde
out
dec
mov
sub
mov
fs
int3
mov
pop
and
aam
enter
push
ja
jl
sti
mov
ss
push
test
add
scas
or
push
jno
pop
(bad)
lahf
outs
ss
xchg
movs
call
pushf
enter
mov
mov
pop
or
cmps
ror
sub
xor
jno
ins
mov
test
xchg
fisubr
enter
adc
(bad)
pop
shr
or
and
(bad)
out
jge
adc
ds
lds
inc
sbb
sbb
(bad)
xchg
or
cmp
xchg
fwait
shl
enter
aaa
cmp
push
jg
xchg
leave
out
rol
out
fisttp
fs
js
loope
stc
xchg
inc
loope
jle
and
xor
ror
mov
lea
xlat
retf
add
jle
sbb
mov
jno
outs
aam
aas
sbb
fcom
inc
xor
popa
push
cmp
mov
sub
add
frndint
push
and
test
scas
dec
movs
ins
cmp
repnz
mov
(bad)
mov
inc
mov
inc
mov
in
inc
mov
pusha
dec
mov
bound
sub
cmps
add
cmp
sahf
push
sbb
fsubp
(bad)
cwde
push
or
and
ss
xor
fnsave
or
push
pop
loop
hlt
ret
fcom
cli
mov
aam
imul
loope
inc
sbb
aaa
popa
ds
or
clts
mov
repnz
inc
test
mov
int
xor
hlt
xchg
add
adc
add
cmp
xor
push
xchg
add
jl
sbb
stos
sbb
cmps
add
dec
sti
mov
mov
jbe
xchg
aad
sbb
ins
fadd
mov
sbb
xchg
add
dec
sbb
sbb
loop
outs
aas
sub
aad
xchg
cli
add
into
cld
das
sbb
sub
cmp
repz
mov
mov
lock
inc
fsubr
jmp
sti
sbb
or
sbb
mov
call
add
mov
sahf
ret
jns
int3
and
sbb
and
jle
pop
push
es
outs
out
rcr
cdq
dec
(bad)
repz
sbb
pop
jmp
push
jge
jnp
test
push
jmp
pop
dec
out
sub
stos
fisubr
ins
mov
jbe
mov
es
mov
pop
cmc
dec
scas
push
adc
scas
iret
je
enter
and
and
push
fstp
push
pop
sbb
ficomp
popa
dec
fsubr
rcr
ss
xchg
lods
cmp
jnp
dec
(bad)
mov
fisub
cdq
scas
mov
push
dec
rcl
mov
test
push
jns
dec
(bad)
add
hlt
sar
retf
repz
add
(bad)
cmps
arpl
mov
cmp
pop
dec
jge
mov
daa
mov
push
jle
inc
icebp
in
sbb
cmp
(bad)
aam
in
mov
push
pop
jg
daa
call
and
ins
mov
scas
mov
adc
shl
aam
inc
ret
pusha
pop
mov
dec
in
dec
fild
adc
movs
sub
pop
jmp
rcr
mov
mov
push
int3
stc
std
stos
arpl
jl
xchg
push
cmp
out
fsub
mov
xor
push
mov
jnp
add
pop
inc
retf
cld
(bad)
adc
hlt
xor
inc
jmp
lock
fadd
and
jge
mov
inc
rcr
arpl
imul
inc
mov
fdiv
shl
xor
cmp
push
aad
pop
aas
outs
sub
es
or
outs
iret
stc
ins
adc
pushf
or
push
out
and
and
inc
(bad)
shr
xchg
push
push
clc
xchg
ss
or
sbb
test
sub
push
cli
jl
scas
leave
inc
jae
in
dec
sub
rol
loope
mov
cmp
shl
push
daa
addr16
pushf
jb
movs
cli
aad
stos
pop
mov
push
sub
in
ret
cmp
mov
ja
stos
jp
mov
movs
jl
ret
cmc
or
jbe
jmp
mov
cli
pop
jno
fnstcw
rcr
mov
adc
xor
(bad)
mov
sbb
cmc
adc
push
in
mov
int3
pushf
or
push
popf
xchg
sub
sahf
or
mov
dec
iret
xor
cmp
mov
push
jo
jb
mov
stc
xor
imul
xchg
int
(bad)
arpl
pop
sbb
jl
(bad)
pop
call
and
not
xchg
dec
les
cmpxchg
add
mov
sbb
mov
cmps
daa
loopne
mov
inc
pop
inc
cmp
sbb
mov
cwde
mov
leave
in
je
hlt
test
pop
hlt
mov
sub
ret
outs
rcr
loope
mov
sar
mov
inc
cld
cmp
push
pusha
add
push
push
sub
adc
mov
mov
adc
xor
inc
jge
iret
mov
xlat
ss
jmp
aas
mov
loope
push
lea
pop
bound
and
outs
xor
add
shr
dec
mov
in
push
push
sub
out
mov
sub
pop
sti
test
inc
jmp
in
xchg
(bad)
or
cmp
push
add
xchg
mov
shr
dec
fimul
or
mov
push
cli
dec
jle
dec
nop
mov
push
mov
call
inc
dec
jne
jl
call
dec
mov
or
dec
ss
or
icebp
push
pop
imul
xchg
jns
xchg
and
std
cmp
push
and
mov
dec
or
loopne
pop
mov
sub
clc
push
mov
(bad)
fsubr
out
mov
inc
je
fwait
call
pushf
sub
fnsave
pop
jge
bound
push
dec
into
push
lods
xchg
inc
push
ret
ret
jmp
cmp
shl
(bad)
jnp
test
in
outs
inc
push
xor
add
adc
cmp
ss
ins
add
pop
dec
cmp
stos
cmp
fmul
xchg
lock
cmp
(bad)
cli
or
loopne
int3
pop
les
ret
and
mov
adc
push
in
jmp
add
in
mov
mov
pushf
shr
sbb
xchg
sti
sahf
and
xor
dec
xor
inc
aam
sub
jns
pop
dec
scas
xchg
pop
mov
jno
push
push
lds
sbb
cmp
clc
mov
das
cdq
imul
pop
cmp
xchg
ror
bound
add
lods
in
sbb
arpl
lods
xchg
jp
jge
call
mov
and
adc
push
(bad)
dec
add
push
mov
dec
test
ret
test
add
and
cld
into
and
adc
and
mov
mov
xor
movs
mov
gs
mov
add
mov
int3
scas
sub
inc
push
jg
int
retf
out
(bad)
jmp
fsubr
mov
fcom
in
push
cmp
push
adc
push
(bad)
or
call
xchg
mov
stc
lods
pusha
daa
dec
into
into
movs
sbb
xchg
scas
aaa
cli
or
pop
(bad)
icebp
sub
call
std
sar
ja
xchg
sub
sbb
jbe
cmp
mov
mov
retf
aad
fstp
mov
pop
cmp
jle
(bad)
in
sub
add
cmp
std
jl
inc
push
dec
outs
mov
push
mov
or
dec
inc
ss
cmp
cmps
repz
sbb
jnp
mov
pop
ins
pop
push
jnp
or
fs
pushf
outs
aam
fwait
mov
sub
sub
fdiv
test
shr
popf
(bad)
sub
rol
test
mov
retf
fdivrp
mov
push
loopne
aaa
cmp
dec
add
jmp
mov
(bad)
mov
xchg
dec
adc
das
stos
sbb
or
mov
mov
push
aad
cmc
hlt
adc
(bad)
push
pop
cmp
dec
dec
push
mov
inc
aad
imul
bound
pop
sub
dec
sbb
das
mov
or
push
jmp
and
mov
inc
js
out
outs
inc
or
mov
jge
mov
cli
fwait
clc
pop
push
xor
popf
es
cli
mov
ficomp
pop
inc
not
push
mov
call
dec
pop
pop
sub
and
adc
out
cmps
test
(bad)
cmc
sub
and
mov
(bad)
fidiv
or
xchg
movs
pushf
or
shl
add
inc
je
adc
dec
inc
cli
dec
shl
neg
ins
jp
test
jmp
ret
rol
sub
imul
out
dec
fsub
pop
aad
sub
lds
pop
xchg
(bad)
shl
sahf
imul
jo
xlat
(bad)
push
ss
(bad)
and
ds
inc
push
test
std
mov
adc
pause
enter
push
pop
cmp
lea
cmps
rcr
shr
mov
das
mov
push
sbb
sub
aad
push
das
pop
pop
cmp
test
inc
les
or
cmc
sbb
or
push
(bad)
cmp
fiadd
cld
xchg
aaa
leave
ins
pop
or
cmps
mov
xchg
mov
addr16
mov
and
adc
pop
cwde
pushf
lods
iret
pop
push
mov
lds
dec
pop
in
not
jmp
dec
popf
dec
pop
pop
jle
nop
mov
add
int
mov
ret
in
mov
sub
xchg
mov
enter
xor
adc
cmc
adc
cmp
jmp
mov
sub
cmp
jmp
int
cmp
or
outs
mov
jo
loopne
(bad)
adc
mov
mov
out
mov
aaa
xchg
cmp
in
sub
es
(bad)
and
pop
mov
addr16
or
mov
imul
sti
adc
mov
inc
mov
adc
sbb
jmp
test
fisubr
lahf
xchg
sar
daa
add
add
mov
cmp
pushf
jb
push
and
mov
fcomp
jns
add
sub
adc
cmc
inc
movs
xor
adc
cdq
push
sbb
stc
mov
lahf
call
shl
xchg
test
lds
mov
pop
ins
cmps
inc
outs
loop
rol
imul
out
adc
es
in
push
jns
sbb
xor
sbb
push
xchg
stos
mov
ret
(bad)
out
xor
mov
pop
mov
jne
sbb
dec
xchg
movs
bound
sub
add
scas
add
mov
sbb
xchg
pop
ins
xchg
xchg
mov
or
frstor
cs
cmp
and
mul
fmul
daa
dec
cmp
idiv
mov
imul
jmp
pop
xor
mov
xor
outs
and
jae
enter
mov
mov
fwait
or
dec
stos
mov
or
xor
fwait
and
loopne
iret
cmp
icebp
adc
or
es
arpl
popf
sbb
sar
ins
lock
sbb
iret
pop
cmp
fnstsw
pushf
mov
dec
daa
fbstp
jl
add
push
dec
jle
mov
jno
xchg
lods
push
inc
call
xchg
loop
xchg
hlt
jae
mov
push
push
mov
cmp
dec
int
cmp
push
push
ds
fst
inc
neg
sub
pop
pop
jo
out
pop
lahf
push
movs
out
adc
push
icebp
jae
popa
int3
fmul
push
loop
mov
test
pop
mov
add
outs
dec
inc
or
jnp
inc
sbb
jmp
xor
inc
stc
retf
xchg
ror
fsub
jecxz
mov
xor
xchg
xchg
mov
sbb
jae
popf
aas
test
les
adc
scas
int3
in
add
push
sbb
in
sub
xor
mov
div
das
sar
leave
test
or
pop
or
pop
leave
int
inc
sbb
(bad)
fld
mov
loope
sbb
mov
ffreep
xchg
sub
xor
or
sub
push
sbb
inc
ins
cmps
clc
lods
mov
(bad)
xchg
daa
iret
in
inc
xor
in
popa
or
jecxz
jl
clc
test
mov
fadd
xchg
pop
in
mov
or
test
dec
stc
in
adc
sub
add
movs
and
inc
icebp
popf
adc
adc
and
mul
jmp
sbb
out
ins
jne
adc
call
jge
outs
xchg
adc
fcom
lds
inc
push
push
mov
ret
stos
ret
dec
jle
ja
in
sub
in
cdq
and
or
mov
mov
cmp
mov
push
or
sub
cdq
cmps
jbe
in
retf
and
xchg
jns
jno
dec
push
mov
daa
jle
add
pop
pop
rcl
stos
aaa
aas
fstp
jl
or
mov
bswap
or
dec
adc
pop
cmps
(bad)
xchg
cmp
mov
dec
jno
jne
xlat
dec
mov
and
xchg
push
cld
mov
mov
inc
xor
loop
loop
inc
movs
mov
or
and
dec
xchg
xor
lahf
add
cld
inc
clc
ficom
outs
xchg
movs
mov
(bad)
mov
mov
mov
outs
arpl
xor
sbb
or
mov
pop
jb
or
push
retf
gs
sahf
cmp
xchg
iret
fistp
pop
aam
fadd
pop
add
xchg
xchg
lods
lds
int
inc
shl
pusha
push
sub
shl
stos
pop
fdiv
dec
in
mov
and
jne
mov
hlt
inc
or
xchg
aam
js
leave
cmp
(bad)
fcomp
lea
sbb
sbb
stc
push
loop
jbe
mov
cmp
push
pop
fldcw
or
mov
xor
push
movs
das
sub
ins
push
jmp
clc
sbb
(bad)
popf
ror
sbb
xor
mov
xchg
or
popa
push
push
out
rcl
dec
ss
jp
or
int
sbb
inc
(bad)
xchg
xchg
push
cwde
push
jb
(bad)
pop
or
lds
loope
aam
sbb
aaa
das
inc
cmps
mov
rol
lahf
adc
outs
iret
and
xchg
pushf
mov
dec
stc
push
adc
repnz
repnz
mov
clc
jae
mov
aas
fwait
movs
mov
(bad)
scas
xchg
mov
scas
cli
enter
stc
nop
add
fnstsw
inc
dec
dec
js
out
xchg
call
or
cmp
aam
fldcw
mov
jecxz
fs
xchg
arpl
(bad)
out
mov
(bad)
pop
aam
push
cmps
dec
frstor
and
sbb
lods
std
(bad)
sub
pop
scas
stos
xor
xchg
fwait
sub
mov
sub
dec
and
mov
cmps
mov
neg
gs
push
sub
cmc
(bad)
jne
out
mov
pop
dec
mov
lds
xlat
lahf
ret
mov
pusha
mov
mov
pop
loop
or
and
mov
cmps
push
mov
aaa
adc
push
clc
fldcw
fstp
pop
adc
pop
xchg
adc
in
stos
gs
mov
push
xlat
push
fwait
jnp
mov
rcl
cmp
aas
(bad)
nop
mov
mov
fnsave
or
add
popa
xchg
or
mov
(bad)
pop
aaa
ud1
mov
mul
inc
add
leave
mov
das
cli
and
popa
inc
fisub
int
xchg
inc
mov
add
scas
(bad)
daa
inc
shr
in
inc
jle
sub
xor
mov
rcr
sub
mov
dec
pop
pusha
cmp
cmps
test
ds
mov
repnz
outs
add
add
loop
sti
mov
cwde
and
lods
movs
sub
mov
adc
lods
mov
and
sar
xchg
ss
pushf
push
retf
sbb
xchg
dec
ret
enter
call
xor
scas
dec
stc
dec
outs
mov
and
rcl
je
and
lahf
cmp
fs
add
jmp
sub
inc
push
jnp
cmps
aaa
popa
adc
push
lock
dec
mov
sub
sbb
dec
mov
ins
inc
mov
into
and
neg
data16
mov
(bad)
inc
rol
inc
jle
clc
jae
dec
(bad)
int3
fiadd
call
into
xchg
xor
adc
inc
or
mov
mov
jg
push
pop
sahf
sbb
push
imul
pusha
pop
out
shl
jmp
xchg
mov
push
mov
call
sbb
(bad)
(bad)
retf
xchg
lea
mov
fistp
inc
inc
outs
dec
adc
in
jg
cdq
imul
fnsave
retf
xchg
sub
adc
cld
aam
imul
xor
inc
mov
imul
or
xor
enter
fwait
jl
jmp
add
aas
push
add
add
les
inc
push
cld
or
inc
push
jne
icebp
lods
jp
jne
mov
or
inc
mov
cs
mul
adc
int3
ja
jne
nop
shl
pop
es
out
call
mov
jecxz
push
dec
sbb
dec
adc
in
cmp
dec
sub
(bad)
jle
jbe
cmc
mov
inc
fst
pushf
xlat
or
ds
xor
pop
cld
fidivr
cdq
retf
shr
in
push
(bad)
cmp
in
xchg
cmp
ds
ja
push
xor
adc
scas
inc
sub
out
or
or
ror
daa
fsubr
jmp
or
fcomi
hlt
rcl
add
jge
es
xchg
ret
mov
dec
loope
leave
(bad)
fnstenv
ds
pop
loop
mov
push
jge
loop
nop
aad
jp
lods
xchg
rcl
sti
add
(bad)
xchg
bound
outs
mov
test
movs
adc
sub
dec
dec
mov
pusha
mov
sub
push
mov
imul
mov
sub
or
xor
and
push
cdq
pop
(bad)
fisub
pusha
xchg
inc
sti
and
cli
stos
aam
adc
adc
(bad)
sbb
cld
in
lea
mov
stc
xor
mov
xor
in
sahf
in
add
dec
pop
jmp
sti
stos
push
xchg
mov
sbb
mov
and
push
mov
sub
aaa
loop
shl
test
(bad)
scas
ins
xor
jle
xor
test
mov
pop
jecxz
cwde
mov
add
daa
pop
mov
(bad)
xchg
cmc
inc
push
jb
xchg
and
cwde
jecxz
(bad)
sbb
inc
cmp
bound
xor
hlt
not
push
sar
iret
inc
jge
test
in
int3
ror
adc
movs
and
inc
in
imul
xor
pop
jg
mov
mov
icebp
cdq
imul
or
jno
(bad)
xor
mov
ficomp
mov
aaa
pop
(bad)
lds
outs
mov
mov
inc
movs
aaa
enter
add
sbb
cmp
sub
xchg
xchg
popf
imul
movs
push
pop
aas
aad
xchg
adc
ret
dec
ftst
ret
imul
mov
jp
or
shl
add
sub
mov
cmp
mov
rol
push
in
(bad)
jl
imul
(bad)
jns
aas
dec
adc
adc
pop
inc
mov
lods
add
cmp
mov
jb
cli
pop
and
add
(bad)
mov
mov
xor
ins
add
push
pop
pushf
add
and
xchg
cmp
jno
push
shr
jecxz
sbb
mov
stc
jo
mov
push
mov
(bad)
in
scas
cdq
dec
int
ja
in
out
dec
mov
pop
imul
fs
jg
pushf
loop
push
mov
adc
outs
sbb
mov
cld
cmp
push
push
lods
(bad)
mov
mov
mov
push
lock
mov
xor
pusha
xchg
and
into
in
stos
mov
outs
xchg
push
ret
sbb
(bad)
cmp
dec
jb
rcr
mov
mov
dec
inc
mov
cmp
push
add
adc
std
cmp
fcmovb
or
lods
pop
ret
sbb
sar
push
mov
or
mov
cs
bound
push
into
xor
mov
sub
movs
out
jne
dec
repz
mov
arpl
adc
(bad)
sub
cmp
mov
push
jp
adc
fisub
add
stos
fimul
ret
and
inc
std
sar
inc
call
adc
xchg
inc
and
xchg
sbb
dec
sahf
jo
fidivr
gs
sub
inc
stc
pop
push
jmp
in
jge
(bad)
enter
mov
jmp
xchg
inc
cdq
test
dec
repnz
dec
xchg
js
test
push
jmp
pop
sbb
loop
pop
pusha
gs
(bad)
clc
sbb
inc
xchg
out
xchg
in
or
jge
imul
xchg
inc
test
jbe
lods
leave
inc
fistp
jle
xor
daa
imul
mov
repz
sub
rcl
pop
or
and
pop
(bad)
xchg
cmp
pop
test
inc
test
sub
movs
xchg
pop
pop
scas
and
retf
xchg
pop
aad
or
movs
pop
add
test
ja
pop
es
sbb
or
sub
(bad)
into
fwait
leave
sbb
les
adc
push
jmp
aad
sbb
add
(bad)
add
xchg
and
pop
mov
scas
jl
jmp
xchg
jmp
jmp
mov
and
jb
pop
pop
gs
or
ret
jns
dec
outs
or
pushf
fldcw
adc
adc
cwde
cmp
loop
cwde
aam
or
add
mov
adc
jbe
jp
neg
shl
sbb
movs
arpl
or
push
sti
and
pop
inc
pop
mov
mov
movs
test
sar
lock
ins
and
loop
push
movs
mov
inc
jne
pop
pop
xlat
mov
test
sbb
hlt
ja
jecxz
jne
jg
retf
mov
or
cmc
mov
fwait
jnp
xchg
fninit
push
jno
mov
fisttp
adc
pop
inc
pop
stc
sbb
cwde
fcomp
push
scas
push
push
dec
fdivrp
test
pop
cmp
push
mov
sbb
dec
lea
mov
aas
dec
mov
in
or
mov
js
sbb
sbb
fist
and
jle
retf
sub
inc
push
rol
enter
adc
rcr
push
xor
popf
sub
and
(bad)
sub
repz
xchg
lock
hlt
pop
dec
add
mov
push
mov
pop
cmc
test
pop
push
icebp
push
loopne
sub
sub
icebp
push
das
retf
jbe
xlat
fimul
rcl
sbb
cmp
test
mov
jl
xchg
(bad)
pop
loope
push
js
mov
loope
xor
mov
hlt
sub
cmp
loop
stc
neg
push
daa
or
xchg
test
pop
outs
out
and
jecxz
test
aam
repnz
sub
xor
idiv
pop
cmps
jnp
dec
jl
ret
push
movs
stc
lods
xor
sbb
pop
jnp
movs
sub
dec
cli
repnz
in
je
inc
aaa
mov
xchg
mov
add
shr
test
int
adc
push
dec
push
push
jae
adc
push
call
gs
xchg
gs
ss
cmp
ret
mov
ret
out
push
out
iret
fstp
in
stos
mov
stc
mov
sub
cmp
rcl
jbe
mov
pop
fld
sub
sahf
cmp
popf
in
pop
mov
test
cmps
(bad)
dec
pop
cmps
push
fldcw
imul
xlat
pop
cmp
dec
aaa
or
popf
leave
jl
inc
dec
jo
xchg
jne
mov
add
stc
movs
mov
aaa
or
jo
movs
(bad)
push
dec
or
cmp
cmc
adc
or
sbb
or
sub
jle
cmp
fadd
add
ror
sbb
pop
mov
sbb
jb
int
mov
mov
jmp
aas
adc
aaa
rcr
daa
ins
jl
push
cmp
ret
ret
aas
lahf
xchg
mov
in
xor
add
ja
outs
pop
jns
adc
ins
pop
sbb
out
push
mov
or
(bad)
mov
inc
push
adc
jge
lea
push
cmp
ins
and
mov
stos
inc
ss
mov
out
jmp
scas
rcl
inc
test
pop
sbb
stos
pop
adc
lock
push
adc
out
leave
xchg
add
sub
push
mov
pusha
adc
clc
mov
gs
pop
sub
jne
push
ret
xchg
or
popa
pop
pop
mov
pop
clc
and
cmc
sbb
add
pop
pop
ins
xchg
dec
jl
hlt
shl
jnp
xor
pop
mov
xor
mov
inc
cmp
push
sbb
xchg
gs
mov
lds
mov
push
enter
mov
xchg
add
les
mov
stos
xchg
xchg
or
cwde
sar
fcomi
add
dec
jne
xor
std
jmp
xor
inc
push
sbb
pop
push
test
xor
ror
orps
xchg
adc
fisttp
enter
push
int
(bad)
test
icebp
add
mov
sub
xor
adc
dec
bswap
sbb
cmps
dec
dec
dec
addr16
fmul
mov
addr16
imul
imul
cs
(bad)
fldcw
fstp
mov
imul
rol
imul
cli
jb
(bad)
popa
std
ins
sub
xor
mov
test
loopne
add
fstp
sti
inc
scas
inc
jecxz
out
xchg
mov
jle
mov
popf
std
mov
and
mov
fist
aad
stos
sub
sub
addr16
mov
pop
ja
jp
sbb
jecxz
in
aaa
imul
cmp
mov
inc
mov
ret
neg
add
pop
jae
pushf
adc
sar
pop
mov
add
not
adc
(bad)
jmp
bsf
cmps
fbstp
mov
add
cmp
pop
mov
push
pusha
sti
out
ret
sbb
fidiv
js
inc
fst
jmp
iret
(bad)
push
addr16
fisubr
ror
addr16
cli
sub
xor
es
jns
(bad)
jmp
jp
popf
outs
mov
lea
aam
(bad)
push
(bad)
fstp
leave
adc
push
int3
sub
sub
mov
into
shl
call
sbb
dec
(bad)
mov
or
xor
mov
mov
and
out
push
xlat
imul
in
xor
adc
mov
jns
xchg
lods
cmps
ds
imul
out
scas
in
clc
dec
mov
mov
pop
pushf
gs
lock
push
idiv
cmps
sub
or
inc
mov
fidiv
movs
loopne
js
push
mov
neg
stos
pop
pop
adc
inc
test
push
sar
aas
leave
sar
shr
add
jne
pusha
es
test
mov
stc
outs
ins
and
mov
add
ins
adc
int3
inc
loopne
mov
js
test
ja
leave
mov
iret
mov
sub
scas
push
test
dec
xchg
cli
in
push
jmp
and
aaa
call
cmp
div
pop
pop
or
mov
mov
aad
scas
aam
sub
call
adc
pop
fsubr
pop
mov
xchg
outs
iret
in
imul
mov
mov
mov
push
push
xor
arpl
lods
pop
jb
xor
jge
xorps
adc
icebp
cdq
in
and
dec
push
push
add
fs
mov
sbb
mov
mov
daa
std
xchg
or
imul
repz
jbe
add
sub
pusha
pop
sti
sahf
push
adc
or
mov
sub
scas
mov
out
mov
imul
in
add
add
cmp
xchg
out
xchg
rcl
arpl
xor
mov
imul
int
mov
cmp
lock
retf
sub
stc
out
sub
fidiv
aas
retf
sub
int
call
cmovge
jl
loopne
dec
jg
in
(bad)
sub
xlat
sbb
stc
mov
mov
ss
cmp
rcr
sti
jp
push
mov
xchg
jmp
mov
jle
jmp
mov
push
mov
pop
test
pop
outs
adc
sti
das
or
aas
xchg
add
cmp
mov
retf
mov
div
jno
arpl
xor
aad
sbb
mov
mov
xor
mov
mov
ret
sub
popf
and
bound
mov
jns
inc
jmp
jp
out
mul
popf
sbb
sti
pop
pop
mov
push
test
clc
loope
push
mov
(bad)
fcmovne
adc
and
pop
addr16
loopne
movs
push
adc
in
push
shl
sbb
mov
sbb
or
not
push
aad
sub
or
pop
mov
call
push
sti
jmp
sbb
and
jle
xor
or
out
ins
jne
xor
retf
mov
shl
mov
pop
jne
loope
push
or
pop
out
popf
mov
and
int
in
inc
mov
mov
cmp
push
push
lock
cwde
lea
mov
pop
push
scas
iret
cmp
mov
mov
push
in
sub
mov
test
(bad)
rcr
aad
adc
(bad)
(bad)
pop
imul
stos
add
and
dec
adc
mov
movs
dec
loop
je
cmp
push
mov
push
jae
cmp
(bad)
sbb
aas
ja
push
repz
mov
gs
pushf
std
sub
mov
iret
arpl
inc
sub
fcmovu
push
ret
jecxz
and
neg
retf
jg
cs
pop
jns
pop
dec
xchg
fs
dec
arpl
(bad)
jge
pop
ret
jge
jbe
cmp
add
add
sbb
dec
das
test
idiv
jp
and
and
xor
pop
mov
ret
lods
icebp
add
movs
pop
or
xchg
dec
cmp
pop
pusha
jns
fisub
icebp
add
loope
sti
lds
pop
jle
inc
fnstenv
push
xchg
call
shl
in
and
push
les
and
mov
mul
xchg
into
inc
loope
das
in
scas
inc
mov
cmc
cmp
and
cs
ja
adc
jmp
mov
xchg
leave
lods
jns
iret
push
stos
or
fstp
cdq
adc
cmp
jecxz
inc
mov
xlat
pop
mov
fidivr
test
out
loope
cmp
retf
xchg
sbb
cmp
xor
pop
cwde
sub
jg
push
fiadd
sbb
pop
outs
push
add
out
add
cdq
dec
push
pop
pop
inc
mov
adc
fild
adc
loope
retf
test
mov
pusha
xlat
xor
or
lds
lahf
addr16
pop
cmps
cmp
pop
or
jmp
sub
xchg
div
mov
pusha
dec
out
fld
pop
cli
push
mov
jp
jo
sub
cmp
xchg
aad
pop
fld
mov
in
push
test
jns
ret
xchg
scas
jb
rol
movs
outs
mov
xor
pop
ret
mov
pop
cmp
mov
fisttp
sahf
jg
xchg
in
xlat
sar
mov
push
out
aam
mov
mov
mov
push
jb
push
or
push
inc
and
sbb
dec
or
scas
cmc
dec
(bad)
jo
test
out
test
cmps
mov
pop
data16
imul
in
fdecstp
mov
lea
push
xchg
std
xchg
mov
in
shr
or
scas
das
jecxz
mov
jg
cdq
data16
or
lods
je
xchg
pusha
add
fwait
dec
lds
ss
pop
fs
(bad)
mov
out
mov
(bad)
cmp
popa
dec
jnp
push
xlat
inc
and
sub
jp
xor
cmps
mov
pop
push
inc
cmps
mov
jl
pop
and
jno
loopne
retf
stos
push
cmp
out
rcl
jmp
loop
push
push
sub
mov
push
or
cs
or
test
std
or
(bad)
fsubrp
jnp
dec
adc
mov
int
mov
cmp
sbb
mov
mov
call
cmp
fild
and
adc
stc
add
dec
cwde
pop
aaa
ja
push
(bad)
call
mov
pop
loop
xchg
popf
sbb
test
outs
xchg
iret
cmps
adc
ds
mul
retf
inc
mov
push
pop
(bad)
lea
arpl
test
add
leave
mov
ret
movs
std
es
and
aam
das
ja
xor
shl
cmps
xchg
popa
jns
add
push
cmp
xor
sbb
xchg
jne
sub
repz
(bad)
retf
sbb
pusha
or
cmc
std
jge
pop
sbb
in
sbb
cwde
xor
leave
mov
add
pop
popa
popf
pusha
fs
mov
outs
mov
or
and
cmp
xchg
int
add
cmp
mov
jno
pop
push
aam
inc
push
pop
add
push
fadd
sbb
lock
in
cwde
xor
mov
or
push
mov
jmp
push
nop
adc
into
jno
loope
dec
ret
sbb
not
in
ret
aad
mov
hlt
xlat
mov
mov
shl
inc
xor
push
loop
inc
xchg
daa
push
pop
ss
mov
xchg
mov
mov
xor
scas
adc
pop
fcomp
sub
inc
(bad)
cmp
nop
and
add
retf
mov
cmps
dec
inc
(bad)
mov
test
out
out
hlt
jnp
dec
xchg
sahf
push
dec
call
push
push
pop
jb
dec
in
jae
mov
rcl
jl
mov
fcom
mov
jbe
dec
cmc
and
and
jle
sbb
adc
loopne
cmc
repnz
mov
or
popa
frstor
sbb
out
data16
mov
xchg
sbb
or
push
push
pop
add
and
jnp
push
fld
call
retf
ins
ja
mov
cmps
jl
cmp
and
(bad)
jp
adc
jae
or
leave
push
daa
pop
mov
shl
clc
out
mov
and
xor
and
adc
xor
xchg
cmp
in
xor
(bad)
mov
push
push
stos
mov
mov
pusha
in
mov
mov
mov
adc
das
dec
cmp
xchg
sub
fstp
fs
movs
scas
jmp
ret
and
out
mov
in
mov
jno
je
mov
cli
in
outs
loop
into
dec
push
aaa
adc
popf
jmp
hlt
push
xchg
pop
and
cwde
int
lock
out
imul
jns
cmps
adc
into
enter
std
and
inc
xchg
mov
lahf
in
inc
sbb
sub
mov
or
dec
mov
cwde
mov
fild
mov
pop
mov
pcmpeqb
xchg
lahf
lods
fmul
adc
aad
mov
sbb
das
xchg
pop
repnz
and
push
dec
fwait
psubusb
fdivr
push
dec
cwde
call
jae
fsub
es
outs
fwait
pop
popa
out
hlt
cmps
mov
call
addr16
cdq
shl
sub
dec
pop
xor
add
into
xchg
and
or
mov
lds
and
jp
push
add
loop
xchg
sbb
es
test
fadd
push
pop
jle
mul
adc
adc
add
imul
test
inc
(bad)
(bad)
and
(bad)
pop
stos
pusha
iret
clc
sahf
adc
mov
add
out
jb
jmp
ret
jg
mov
and
lds
outs
pop
in
dec
repnz
push
ja
inc
push
inc
or
aas
jp
and
mov
add
call
fs
int
adc
mov
sub
mov
fwait
loopne
push
jle
hlt
ss
scas
fidivr
and
jne
(bad)
lock
(bad)
fdivr
aaa
pop
xchg
shl
xchg
(bad)
je
dec
cli
or
hlt
inc
mov
mov
xor
out
cld
in
sahf
mov
in
cmp
loope
xchg
mov
mov
and
outs
push
push
or
ss
jne
dec
addr16
jb
add
cmc
mov
addr16
cld
inc
fild
mov
mov
sbb
jo
es
cmp
loop
dec
(bad)
std
out
out
xchg
mov
retf
push
push
pop
loopne
sbb
cmp
xor
add
inc
jge
inc
movs
iret
adc
mov
adc
bound
push
call
adc
dec
(bad)
popf
mov
fsubr
cmps
(bad)
xor
or
mov
pop
fadd
pop
ret
mov
xor
ret
xchg
(bad)
rcr
or
push
ror
xchg
mov
int
or
dec
nop
pop
enter
inc
fstp
iret
sti
pop
jmp
jp
(bad)
fistp
push
cld
jne
inc
fisub
cld
mov
add
add
pop
aam
lea
popf
js
out
sbb
or
fs
mov
mov
cmp
sub
inc
call
sub
xlat
retf
popa
sub
jnp
or
jno
or
cmps
das
arpl
mov
pop
push
jnp
sub
pop
loopne
sbb
xchg
inc
scas
pop
push
inc
jmp
xor
shr
cwde
cmps
jecxz
mov
cmp
hlt
(bad)
and
sub
(bad)
das
mov
or
in
or
movs
or
inc
scas
add
shl
xchg
push
call
xor
mov
out
mov
rol
lds
cmps
(bad)
xchg
repnz
rcl
scas
jo
stos
stos
aas
sbb
pop
jp
cmp
sbb
ret
and
sub
test
dec
lds
adc
imul
retf
arpl
or
jae
in
jmp
in
in
out
mov
push
cld
lods
push
sbb
push
dec
xor
jp
imul
fidivr
push
pop
cdq
inc
ret
add
mov
int
sbb
in
push
xor
xor
sub
mov
push
repz
jle
shl
lods
dec
out
inc
bound
fs
jo
dec
pop
test
out
aaa
repz
sub
push
fidiv
jbe
iret
imul
enter
js
(bad)
push
or
or
sub
sbb
sbb
mov
jmp
xchg
sub
inc
(bad)
push
xor
push
inc
test
retf
ins
out
jno
lds
(bad)
mov
iret
mov
jns
dec
mov
jmp
sub
and
jp
pop
call
fisubr
imul
xor
popf
pop
pop
adc
aas
fsubr
mov
cmc
xor
jg
sub
sub
not
jno
add
sub
rcl
ror
shl
mov
rcl
in
and
pop
cmp
test
mov
push
sub
mov
and
push
sbb
outs
mov
xor
add
je
jo
ror
add
call
mov
add
imul
ds
jb
movs
call
adc
sbb
cmps
sbb
cmp
arpl
add
jb
ret
es
push
pop
arpl
xor
out
cmp
shl
cmp
adc
dec
out
sbb
jecxz
push
aaa
mov
cmps
jle
xchg
cmp
pop
lahf
and
inc
mov
retf
(bad)
call
inc
dec
pushf
cs
mov
xor
int
sahf
jbe
sahf
push
shr
xor
cmp
test
pop
rcr
fsubr
sub
enter
out
mov
test
adc
xchg
or
js
(bad)
push
std
mov
sti
lahf
fincstp
push
or
loope
lds
xor
cmps
fs
scas
adc
dec
cmp
mov
inc
mov
lock
and
mov
pop
call
aaa
out
neg
aaa
sub
dec
loop
aam
or
sahf
xchg
hlt
enter
inc
jg
aad
shl
imul
pushf
ins
clc
ins
jle
inc
sbb
jecxz
add
retf
dec
out
cmp
xchg
add
jno
pop
aam
scas
xchg
cmp
ret
xchg
bound
pushf
adc
inc
mov
shr
adc
cmp
pop
add
aam
sub
call
lds
fwait
cmp
mov
imul
lods
mov
cmp
adc
dec
outs
mov
aas
xor
dec
retf
adc
add
mov
xchg
cdq
fwait
sbb
xor
pop
and
mov
cmps
loopne
ss
in
out
xchg
push
jns
mov
jnp
xor
hlt
into
(bad)
ret
inc
neg
clc
mov
push
sbb
retf
jmp
inc
push
push
hlt
cmp
out
lds
mov
gs
icebp
mov
daa
(bad)
jge
push
retf
test
cmp
ret
leave
cmc
(bad)
jb
jbe
jb
pop
(bad)
pushf
sub
cmp
out
jo
hlt
jb
fwait
xor
and
or
add
or
jg
add
mov
out
lea
and
test
rcl
(bad)
loope
aas
fild
dec
mov
dec
imul
imul
mov
cdq
fwait
and
loope
sub
pop
cmp
in
sar
sar
out
ins
jbe
out
xchg
das
push
jle
adc
cdq
jmp
jg
inc
lods
sub
xlat
sub
push
adc
setl
loopne
(bad)
mov
xor
ja
or
mov
mov
test
imul
pop
or
xor
idiv
scas
and
sbb
jg
push
mov
inc
pushf
xor
add
pushf
pushf
xor
shl
dec
mov
cmp
aad
cmps
retf
retf
add
imul
xchg
fbstp
loop
cmp
icebp
xor
inc
adc
scas
je
scas
(bad)
fsubr
inc
and
(bad)
ins
movs
icebp
scas
sub
adc
fisub
pop
test
mov
je
mov
add
adc
imul
pusha
cmp
and
push
js
cmp
xchg
stos
call
adc
(bad)
xchg
pushf
cmp
push
test
add
data16
int3
in
sbb
dec
mov
(bad)
popa
js
pushf
mov
and
lahf
mov
dec
ins
es
in
imul
xchg
mov
jmp
pop
xchg
mov
pushf
fcomp
dec
jp
jb
mov
icebp
adc
inc
fs
outs
jo
into
ror
or
sbb
add
retf
lahf
jmp
sbb
cld
xor
cmp
sar
shl
dec
sub
push
mov
cmp
cmp
sub
mov
out
push
ins
dec
or
mov
fidiv
xor
adc
shl
inc
lods
icebp
repz
adc
loopne
out
mov
lock
into
push
mov
aad
lds
wrmsr
data16
add
dec
hlt
iret
jmp
movs
aas
or
pop
idiv
mov
mov
xchg
in
mov
mov
or
add
loope
sbb
shl
or
sbb
(bad)
in
dec
aaa
mov
sbb
retf
cmps
adc
in
push
push
sub
mov
leave
mov
fwait
or
mov
or
repnz
pop
out
out
ins
into
ja
mov
and
push
dec
popf
adc
call
pop
ret
adc
lods
mov
mov
push
jecxz
mov
cmps
inc
inc
test
and
mov
outs
cli
xchg
sub
retf
inc
fisub
xlat
inc
add
push
and
xchg
or
ins
xchg
mov
sbb
pop
and
jae
sbb
pop
and
out
mov
mov
sbb
gs
aaa
cmps
jmp
inc
mov
cmps
sahf
sub
inc
je
cdq
mov
or
loopne
jnp
add
enter
dec
or
jmp
add
jb
jae
je
or
or
dec
and
int
js
dec
leave
jbe
cmp
ror
sub
sub
sub
cmps
adc
mov
jg
or
mov
sub
ins
ds
mov
add
lock
xor
out
mov
ror
ss
arpl
mov
push
mov
test
das
inc
xor
jb
loopne
inc
dec
sub
pop
sub
mov
je
or
rcl
in
outs
inc
jg
call
jge
cmp
das
mov
sub
scas
call
cmps
jo
fcom
fld
xor
fdivr
and
fdiv
loopne
pushf
in
retf
cwde
pop
call
add
ins
and
lahf
or
dec
cld
pop
int
dec
mov
movs
inc
or
or
cmc
mov
ss
icebp
add
ja
pop
bound
je
lods
or
push
in
pop
jle
inc
fxch
cld
adc
push
jns
aas
or
xor
les
dec
xor
jo
or
xchg
fdiv
outs
cli
xlat
loopne
xchg
jne
and
lahf
jne
pop
mov
add
cmc
jae
cmc
fs
cdq
add
xchg
daa
popa
ins
rcr
cli
shl
cmp
int3
jne
or
dec
in
sub
cmp
jl
hlt
add
push
fmul
inc
cli
dec
shl
cmp
daa
push
lahf
jb
xchg
xlat
test
push
aam
push
aam
out
and
cmps
out
std
jbe
bound
push
int
jle
ins
sub
push
add
mov
push
(bad)
iret
out
pop
rol
fdivrp
cmps
mov
sbb
movs
sbb
or
scas
sbb
pop
xor
push
jle
and
ins
pusha
test
fcom
movs
sahf
mov
xchg
jmp
sub
leave
xchg
xor
ficom
and
pop
push
or
push
xchg
cld
dec
jb
test
cmc
xchg
clc
dec
sub
popf
or
push
(bad)
adc
or
or
loopne
shr
xchg
cmps
ret
shl
call
sub
jb
sti
add
cwde
pop
scas
cld
div
(bad)
je
cmp
sub
repnz
mov
sub
jo
daa
repz
sbb
stc
mov
into
pop
cmp
call
dec
loope
dec
dec
(bad)
ss
lods
pop
jp
ja
popa
push
arpl
stos
xchg
cwde
add
xchg
lahf
add
movs
scas
aaa
xor
lds
mov
in
xor
inc
mov
add
jne
cmp
mov
adc
or
cdq
ret
int
ss
push
dec
and
fwait
and
jbe
push
loop
adc
aad
movs
into
sub
jbe
mov
fadd
cmps
aaa
pop
mov
test
add
addr16
mov
or
pop
push
rcl
pop
repnz
add
and
in
imul
xor
mul
jmp
xor
scas
out
scas
mov
fcomp
pop
pop
sub
mov
or
jmp
add
or
xor
iret
mov
pop
repnz
(bad)
xor
jle
ficomp
test
cld
inc
pusha
les
(bad)
sbb
int3
out
or
pusha
scas
jmp
xchg
out
mov
mov
iret
xchg
mov
sti
add
mov
ret
sbb
cli
repz
dec
push
mov
pop
test
les
jbe
sub
and
push
or
in
sbb
mov
ficom
sbb
iret
jae
xchg
dec
test
mov
xor
mov
mov
in
dec
in
pop
jno
ficomp
je
pop
call
shr
fwait
repz
in
(bad)
add
pop
adc
lahf
xchg
push
and
push
fwait
in
jbe
out
push
cmp
or
mov
xor
mov
pop
jbe
jnp
ins
mov
add
loopne
cdq
in
retf
cmp
rcr
(bad)
dec
mov
or
cmp
push
xor
dec
push
sbb
and
jmp
adc
fwait
push
rcr
shl
push
shl
ror
sub
popf
(bad)
pop
pushf
sti
pop
pop
push
test
in
sub
mov
mov
mov
sbb
neg
and
dec
cwde
jle
sub
loopne
sbb
pusha
call
sti
out
pop
out
pop
lods
fsub
xchg
jmp
(bad)
jmp
mov
test
push
lods
popf
call
das
mov
mov
iret
add
mov
add
xor
shl
dec
or
enter
bnd
lahf
xchg
sbb
xlat
add
and
jmp
jmp
out
jp
lahf
adc
imul
cmp
add
test
pop
in
dec
hlt
inc
xchg
dec
lahf
addr16
push
ret
mov
aad
sub
icebp
loopne
sbb
in
das
icebp
sbb
xchg
mov
inc
repz
rol
mov
scas
icebp
mov
adc
arpl
in
sbb
inc
dec
(bad)
and
stos
inc
pop
and
mov
addr16
mov
jae
add
push
pushf
mov
xor
mov
leave
fwait
je
jle
push
mov
mov
retf
enter
fnstenv
push
xor
(bad)
fisttp
mov
mov
test
loope
xchg
push
pop
(bad)
xor
in
or
cmp
cld
mov
pop
cmc
loope
ds
in
shl
lods
movs
addr16
out
into
std
adc
push
xlat
jbe
fisttp
out
out
sub
pop
clc
not
cmp
fs
repnz
mov
bound
mov
fcmovnbe
sahf
push
mov
push
mov
data16
dec
inc
inc
dec
sti
adc
sbb
lods
push
cs
cli
mov
cmp
in
mov
jae
xchg
ret
and
cli
add
jbe
xor
mov
mov
add
or
repz
test
rcr
iret
rcr
add
jb
ja
xor
sbb
ror
push
pop
in
cwde
sub
dec
xchg
iret
or
imul
sub
sbb
pop
scas
mov
pop
push
int
jbe
loop
pusha
arpl
and
loope
aas
cli
push
or
mov
ret
(bad)
mov
aad
lahf
scas
adc
jecxz
mov
sub
inc
cmp
ins
push
pop
adc
in
mov
jo
mov
ss
dec
dec
es
loop
sub
dec
inc
out
pop
adc
out
mov
push
push
and
jb
mov
in
adc
in
sbb
retf
leave
mov
sub
mov
mov
pop
xor
(bad)
outs
dec
xor
ds
rol
popf
cwde
iret
aam
pop
pop
repz
retf
pop
add
retf
jbe
push
or
adc
ins
mov
ror
hlt
fs
push
inc
or
add
jns
mov
cmp
hlt
int
push
out
and
add
sub
pop
mov
movs
cmp
cs
xchg
jns
fs
(bad)
xor
mov
jmp
sub
sbb
movs
sbb
stos
pushf
push
pop
loopne
in
sub
repz
sbb
dec
pop
test
(bad)
mov
adc
push
add
pop
mov
xchg
pop
(bad)
aaa
dec
popf
dec
mov
mov
outs
(bad)
xor
inc
(bad)
mov
sti
dec
(bad)
stc
mov
jmp
xor
mov
dec
aam
mov
cmps
jp
loop
and
push
xchg
bound
aaa
xchg
pushf
cmps
or
mov
popf
pop
jmp
mov
mov
enter
mov
xchg
lods
cwde
pop
mov
iret
jmp
pusha
inc
into
leave
sub
dec
cmps
and
cmp
lods
sbb
pop
or
xchg
mov
sahf
xchg
pop
mov
jl
sbb
push
in
xchg
retf
push
(bad)
shl
xchg
repnz
mov
sti
stos
and
addr16
call
lock
sub
pusha
ficom
jmp
test
imul
jmp
push
mov
rcr
cld
mov
cdq
das
mov
pushf
repnz
cli
xor
dec
ins
iret
mov
ins
bnd
jnp
ret
xor
cld
add
div
enter
or
cmps
jnp
xor
mov
stc
pop
ror
sar
dec
dec
xor
sub
retf
jo
retf
sbb
es
mov
mov
int
or
out
pop
aas
pop
call
ficomp
mov
or
nop
mov
ds
mov
lds
mov
push
sbb
sub
adc
sub
mov
dec
scas
jmp
ds
fisttp
jb
jmp
dec
xor
pop
xchg
es
cmp
xor
xor
push
jp
mov
dec
or
push
sub
or
cmc
pop
inc
jecxz
and
and
dec
js
test
(bad)
jns
repz
xchg
sbb
arpl
mov
dec
xor
outs
ret
fadd
or
add
jb
xchg
mov
in
jge
inc
outs
add
mov
and
scas
(bad)
cwde
mov
add
dec
jl
jmp
popw
(bad)
sub
jo
imul
mov
call
mov
rcl
mov
jge
push
in
mov
mov
jns
dec
xor
mov
sub
movs
push
retf
or
loopne
(bad)
cdq
jge
fsubr
jl
cmp
int3
sub
adc
pop
inc
in
div
ucomiss
test
adc
imul
test
and
or
stos
or
jl
add
jnp
xchg
and
dec
daa
dec
stos
xor
pop
mov
addr16
add
xchg
aad
fld
ss
sub
fsub
cli
int3
xor
arpl
es
(bad)
pop
loopne
and
jb
fimul
mov
mov
mov
pop
(bad)
jecxz
movs
or
push
mov
xor
cwde
mov
das
mov
cmp
div
(bad)
dec
stos
adc
mov
mov
add
jecxz
xchg
loop
sub
push
jne
(bad)
sbb
addr16
arpl
pop
mov
scas
xchg
sar
mov
and
adc
pop
xchg
lods
not
sub
pop
and
xor
pop
retf
sub
jnp
je
mov
pop
popa
(bad)
push
cmc
add
fdivrp
jns
xor
push
test
adc
xchg
stc
stos
add
xor
sbb
push
mov
imul
mov
icebp
adc
and
mov
cmp
mul
fwait
stos
ret
add
dec
jl
daa
rol
or
cmp
js
test
(bad)
addr16
add
rcr
jp
cmp
clc
lods
out
cs
or
jae
rcr
mov
in
ret
(bad)
xor
sbb
je
sbb
push
jge
inc
jmp
test
cmp
mov
sub
jns
lea
sbb
push
sbb
pusha
mov
jo
fisubr
fisttp
div
and
int
inc
(bad)
sub
icebp
adc
dec
mov
dec
call
rol
fwait
bound
scas
inc
out
jno
idiv
shl
test
xor
mov
inc
mov
in
mov
adc
pop
jbe
imul
mov
push
(bad)
dec
dec
and
xor
addr16
mov
fcom
popf
sahf
jg
dec
sub
mov
inc
add
loop
sar
mov
fadd
ror
add
dec
mov
nop
inc
je
push
fild
sbb
pop
jge
or
ins
popf
test
bound
mov
lods
mov
push
lods
out
or
cld
push
mov
leave
scas
cdq
inc
push
ins
ret
pop
jb
cmp
push
pop
pop
mov
mov
out
xchg
repnz
mov
mov
sbb
mov
arpl
adc
jge
cli
lock
xor
scas
das
mov
mov
mov
mov
add
ret
pop
jns
jbe
jbe
push
lahf
jns
fst
out
mov
xchg
rcl
cmc
call
mov
push
mov
in
fs
inc
xor
pop
xchg
jnp
lahf
stos
mov
push
fcmovu
xor
and
stos
mov
retf
outs
lea
loope
mov
jmp
jl
jg
mov
jbe
call
inc
jb
jo
sub
mov
cmps
mov
fcomp
push
dec
stos
movs
popa
inc
xchg
test
mov
arpl
or
cmp
shl
cmp
aam
sub
pop
pop
jle
and
sbb
fld
mov
push
inc
repz
mov
push
adc
inc
cmp
cmps
jns
xchg
xor
dec
fwait
add
mov
ja
pop
out
loope
cmp
aad
push
sub
loopne
jne
test
bound
pop
xor
outs
test
jns
fisub
xchg
into
lahf
dec
xor
mov
lock
repnz
gs
push
or
jle
push
xchg
push
sar
int3
ins
ret
or
mov
test
movs
add
(bad)
mov
push
pop
test
or
pop
hlt
imul
mov
mov
bound
push
test
add
jecxz
push
leave
test
xchg
lds
push
and
cs
popa
outs
mov
scas
cmp
jl
mov
sti
mov
or
(bad)
pushf
and
mov
and
test
lock
lahf
test
pop
adc
sub
xchg
jbe
in
sub
leave
lods
jae
or
adc
xor
cmc
push
xor
cmp
arpl
jmp
call
xchg
pop
das
jns
push
mov
aas
mov
ins
loope
int
fwait
lods
add
(bad)
and
cmp
xor
addr16
push
add
iret
(bad)
daa
cmc
mov
pop
fiadd
or
sub
add
and
xchg
test
lds
mov
add
sbb
mov
pop
jbe
dec
adc
mov
push
int3
jno
retf
(bad)
(bad)
sti
adc
popa
call
in
test
les
adc
rcl
cs
or
retf
int
push
call
mov
mov
es
cmps
and
push
mov
xor
cmp
lock
cs
and
sahf
repnz
jbe
fnsave
inc
adc
call
jo
pop
out
or
js
dec
mov
add
ss
dec
push
dec
int3
daa
movs
jg
pop
push
enter
mov
clc
jl
aad
ret
mov
arpl
pop
in
(bad)
and
pop
mov
lods
ror
jno
out
test
mov
cs
scas
cld
popa
and
outs
hlt
scas
mov
push
push
xchg
aaa
mov
mov
out
add
mov
push
loop
add
(bad)
mov
test
cmp
cmps
push
cmp
(bad)
mov
repnz
das
adc
mov
gs
dec
ja
adc
sahf
out
sti
ror
or
cdq
mov
xchg
push
xor
enter
stc
add
xlat
mov
push
xchg
das
call
repz
and
push
or
pop
xor
mov
pop
mov
stos
js
xchg
daa
sub
sub
sti
icebp
jge
test
call
mov
dec
cmp
cmp
push
mov
sbb
mov
adc
add
sbb
xor
bound
outs
add
ds
inc
push
cmp
nop
stc
jl
vcvtps2pd
out
jo
sub
jns
mov
ficomp
xor
retf
imul
lahf
std
inc
jno
pop
fstp
pop
sbb
adc
iret
jg
add
scas
mov
pop
test
bnd
outs
add
mov
cmps
xchg
ret
nop
imul
sbb
clc
repz
ror
and
push
fbstp
add
dec
sub
xor
pushf
sub
je
and
cmp
pop
mov
pushf
jg
int
jmp
mov
popa
jo
sub
hlt
cmp
and
fst
cwde
mov
cmp
xchg
imul
fnclex
sar
mov
mov
sbb
xlat
and
push
xlat
jecxz
mov
loop
lods
pop
sbb
mov
aad
fistp
dec
dec
sub
lea
test
ss
mov
sub
out
mov
mov
aam
xor
adc
adc
out
int
sbb
dec
mov
push
je
lock
add
popa
xor
rol
scas
arpl
fdivr
or
jae
mov
std
jne
ss
mov
scas
add
pushf
jmp
jmp
(bad)
mov
push
addr16
lea
loope
mov
jne
sub
push
mov
mov
dec
es
retf
test
enter
sti
mov
sub
jp
push
stos
cmc
rcl
ret
arpl
sbb
jo
or
pop
xor
popf
std
jecxz
push
ret
and
jle
inc
shr
not
leave
jecxz
mov
dec
lods
jae
push
mov
cmp
or
cmp
add
mov
adc
cwde
sub
fistp
popf
mov
add
stos
dec
xlat
mov
mov
jnp
push
jmp
and
movs
lods
xchg
inc
jbe
in
push
pop
mov
add
push
ret
xor
fidivr
loop
psubusw
mov
xchg
mov
push
outs
adc
jb
inc
xor
(bad)
mov
cdq
xchg
sbb
sti
adc
sbb
jp
repz
mov
fwait
mov
cld
mov
(bad)
xor
jmp
xor
push
(bad)
scas
add
ins
sub
mov
inc
cmps
into
mov
daa
cli
xor
fiadd
fs
fmul
push
ror
lahf
adc
mov
call
or
dec
pop
pushf
movs
mov
je
push
mov
adc
fptan
shl
ret
mov
fmul
pop
fucom
arpl
dec
cmp
lods
cmp
retf
cmps
(bad)
fstp
fild
add
mov
xchg
sub
cmp
div
hlt
fcmovb
in
and
cmp
add
repnz
push
icebp
fisubr
cmp
repnz
out
xchg
lods
xor
mov
aas
sub
xchg
rcl
adc
jbe
mov
xchg
add
popf
cli
inc
call
fs
add
iret
je
adc
sub
push
sbb
popa
sub
aas
jbe
(bad)
inc
push
cld
push
shr
std
data16
fcomp
out
dec
(bad)
mov
test
cmp
sbb
rcr
mov
cmp
call
push
mul
leave
ds
cmp
shl
dec
pop
int
adc
movs
cmp
sbb
xchg
arpl
add
adc
stc
inc
push
inc
daa
adc
imul
push
(bad)
mov
push
xchg
stos
faddp
add
mov
into
jge
xchg
es
pop
sbb
push
popf
and
xchg
adc
fild
call
or
jl
pop
jl
idiv
cmp
ja
cwde
rcr
fsub
and
in
and
cld
pop
pusha
adc
stc
scas
lods
jge
jg
jb
pop
je
fucomp
(bad)
call
dec
test
fst
jbe
xor
mov
jp
sbb
movs
mov
dec
push
mov
sub
adc
push
mov
mov
pop
bound
sub
jns
or
jno
test
repnz
loopne
sbb
or
inc
inc
shr
xor
or
or
mov
out
dec
or
fld
ja
out
push
push
mov
in
sub
jg
loop
mov
(bad)
out
push
xor
cmp
pop
sub
cwde
pop
dec
jns
adc
sub
xlat
push
jmp
std
xor
(bad)
clc
in
dec
rcl
fs
pop
push
mov
mov
sbb
push
dec
and
(bad)
mov
repnz
jle
sbb
mov
aaa
shr
cmp
ret
out
and
sub
add
mov
sub
jge
mov
add
xor
ja
jno
sbb
sbb
nop
outs
(bad)
aas
sub
mov
aaa
retf
xor
leave
and
pop
cmps
push
add
pop
xchg
or
xor
and
aas
cmp
inc
add
dec
fisttp
xlat
loopne
fincstp
ins
dec
mov
test
dec
fs
loope
cs
sbb
xor
mov
and
pop
jae
pop
push
mov
mov
add
xchg
and
rcl
(bad)
imul
hlt
mov
hlt
shl
pop
pusha
xor
jo
dec
xchg
(bad)
icebp
xor
mov
(bad)
cmp
sub
xor
adc
imul
mov
pop
sahf
retf
and
sub
(bad)
clc
jb
adc
popa
cwde
sbb
dec
jne
int
and
jb
sub
inc
push
mov
inc
idiv
mov
and
cmp
jmp
mov
xchg
push
sti
inc
fnstsw
sub
mov
movs
test
fisubr
jg
dec
fwait
retf
jl
std
shr
aaa
mov
pop
cmc
lahf
mov
push
retf
lods
out
in
xor
jnp
pop
sbb
lds
xor
(bad)
sbb
call
int3
aaa
cmovb
jae
fmul
cmp
bound
pop
jo
test
data16
xlat
mov
pop
sbb
mov
ins
push
xor
sub
repnz
ret
(bad)
ror
cs
stos
pop
stos
mov
lahf
dec
sub
adc
jecxz
fwait
add
inc
adc
jge
into
ret
les
xlat
push
cmc
retf
(bad)
pop
int
fwait
cwde
ret
das
loop
inc
sbb
pop
out
scas
bnd
(bad)
fld
clc
pusha
push
xchg
cld
pop
sub
push
cwde
or
int3
jge
stos
cli
mov
jg
stc
je
or
jl
adc
add
je
jb
repz
push
inc
outs
out
xor
jo
jg
imul
into
xchg
xor
inc
and
retf
xchg
push
cmps
xor
xor
sar
jbe
dec
pop
jge
lods
sbb
mov
inc
adc
cmc
xchg
ins
xchg
mov
jae
fcomp
jb
mov
jle
jl
pop
jb
mov
retf
xchg
sub
push
mov
pop
adc
push
mov
xor
ins
and
(bad)
in
sti
add
inc
mov
adc
outs
rcl
mov
fdiv
addr16
cdq
lock
jnp
sbb
(bad)
jmp
dec
mov
add
pop
sbb
lock
adc
xor
jae
mov
mov
mov
mov
mov
pusha
sahf
stos
jle
loope
aad
push
xchg
dec
lock
mov
mov
jl
das
jge
or
movs
or
or
push
mov
int
pop
sbb
sub
push
push
js
add
outs
and
sti
rcr
xor
ins
push
lahf
sysenter
(bad)
rol
loop
(bad)
or
push
mov
sbb
cmp
aam
arpl
imul
or
je
fnsave
nop
mov
pop
(bad)
mov
dec
fild
out
dec
cmps
pushf
xchg
xor
pop
push
jnp
sbb
in
int
or
shl
mov
and
fwait
jg
(bad)
mov
jno
jo
cwde
push
clc
lock
call
jle
mov
and
sub
out
sysret
mov
loop
xchg
fisub
or
or
jp
xchg
and
mov
cmp
test
jg
fnstenv
cs
pop
mov
es
jmp
rcl
ss
mov
pop
push
(bad)
cli
and
dec
dec
mov
mov
push
pop
lds
bound
and
sbb
dec
popa
mov
fld
pop
hlt
xor
hlt
mov
xor
call
rcr
dec
movs
cli
xchg
sbb
push
rol
cmps
dec
pop
inc
and
cli
pop
cli
sub
lds
dec
loopne
mov
shl
in
sahf
cs
cdq
mov
cmc
test
mov
les
ror
fdivp
out
xchg
call
mov
call
jcxz
jbe
cmp
jnp
ja
iret
inc
xor
mov
ret
(bad)
dec
adc
cmp
out
mov
outs
and
jno
inc
into
loope
cmp
fcomp
cmp
or
outs
push
mov
add
adc
or
xlat
fist
mov
imul
mov
add
hlt
pop
fadd
jl
and
inc
hlt
outs
jnp
mov
ins
shl
jg
cmc
in
call
fild
scas
sbb
mov
cs
push
clc
push
mov
fs
sub
sqrtps
push
or
jnp
inc
call
stos
mov
cmc
jg
sbb
icebp
xlat
std
pop
aad
test
sub
pop
mov
cmps
push
rcr
dec
es
js
scas
movs
push
mov
or
jp
icebp
aas
inc
fldenv
sub
mov
dec
cmp
bound
call
mov
cwde
fcom
cmp
repnz
aaa
int
sar
pop
dec
adc
or
sbb
push
xor
ins
or
dec
mov
push
jns
push
aas
push
sahf
sub
push
popa
mov
xor
idiv
pop
pop
adc
dec
jno
and
shl
shl
push
out
mov
in
shr
push
mov
fadd
fwait
ss
ins
bound
sbb
fistp
out
jge
adc
arpl
inc
lods
push
xchg
push
popa
pop
lahf
jg
pop
ins
mov
test
cwde
aam
das
adc
and
das
cli
add
push
loopne
addr16
mov
or
call
jno
call
xor
dec
xchg
rol
call
call
iret
or
addr16
pop
cmp
mov
test
push
jb
cmp
adc
fist
cli
inc
(bad)
out
jnp
cmp
xor
mov
push
mov
dec
out
sbb
(bad)
mov
js
ret
mov
aaa
fisttp
mov
outs
retf
out
jne
je
out
fs
and
fwait
sub
shl
cwde
movs
push
scas
test
sahf
mov
jmp
(bad)
push
pop
pop
fld
(bad)
and
(bad)
push
mov
mov
(bad)
neg
outs
retf
fcmovb
imul
jb
jno
inc
jmp
out
pop
dec
popa
jb
jne
jbe
jno
cwde
in
int3
mov
sub
mov
cmc
daa
retf
jns
es
adc
out
cmp
jecxz
sub
repnz
xchg
movs
imul
push
jb
lods
pop
addr16
add
jmp
daa
mov
icebp
lods
stos
sbb
repz
mov
and
ror
adc
in
call
mov
ret
or
sbb
fstp
pop
in
stos
out
mov
adc
sbb
sahf
aam
fild
in
sbb
cmp
pop
mov
jmp
xchg
or
rcr
mov
adc
ds
mov
cmps
dec
rol
xor
xchg
sub
test
cli
ret
pop
(bad)
sub
mov
imul
(bad)
mov
jno
and
movs
mov
mov
adc
out
inc
data16
repnz
fld
(bad)
sbb
xlat
push
test
mov
mov
neg
mov
jecxz
in
outs
fiadd
add
shl
ins
dec
(bad)
or
movs
push
cmp
lods
xchg
mov
push
fdivr
jne
mov
cmc
out
pop
hlt
sbb
add
aaa
pop
test
jne
repz
bound
add
nop
fwait
jle
sbb
test
(bad)
xor
jle
les
mov
mov
mov
(bad)
mov
gs
xchg
loopne
std
stos
pop
jecxz
out
and
inc
cmps
div
mov
lds
sbb
sub
out
fiadd
add
jmp
and
repnz
dec
lahf
test
add
cli
mov
ja
xor
push
cs
inc
ss
loope
popf
xchg
addr16
loope
retf
mov
call
pop
push
lahf
(bad)
(bad)
loop
lods
pusha
sub
inc
inc
xor
fmul
push
xor
in
out
(bad)
push
scas
cli
(bad)
repnz
mov
adc
cmp
jne
ja
jecxz
sahf
mov
in
js
jl
in
test
(bad)
mov
imul
enter
out
and
stc
add
ret
push
xor
adc
xor
sbb
pop
test
dec
mov
loopne
dec
ror
inc
iret
xchg
or
ins
push
aaa
add
lods
outs
fnsave
mov
xor
js
dec
dec
pop
pop
outs
jp
push
inc
push
loopne
arpl
cmps
stos
daa
xchg
add
mov
push
mov
add
jns
jns
pop
add
movs
mov
enter
adc
mov
jae
ja
sbb
mov
and
outs
add
push
xchg
xchg
cs
dec
sbb
jae
out
cdq
xchg
mov
push
imul
sti
test
adc
aas
lock
test
dec
stos
mov
cmp
(bad)
repnz
retf
xchg
shr
mov
stos
adc
or
andps
into
cs
sti
or
jnp
xchg
push
clc
sub
mov
fmul
in
das
and
repnz
ror
and
std
(bad)
fisttp
(bad)
inc
mov
test
test
push
(bad)
int
mov
jb
pop
outs
xchg
lea
addr16
mov
and
data16
jmp
popa
ss
jg
shl
pop
fadd
cmps
aaa
cmp
add
push
jb
adc
out
mov
mov
loop
shl
loope
dec
dec
cld
shl
dec
retfw
or
adc
fiadd
sbb
cld
cwde
sbb
dec
mov
mov
jnp
ror
lods
mov
adc
push
imul
ret
clc
call
jp
dec
retf
cmp
repnz
in
in
shl
test
js
(bad)
push
xor
mov
mov
cmps
xchg
scas
es
adc
sub
cmp
mov
mov
cmp
sahf
xor
js
aaa
pop
cwde
lock
push
adc
xchg
loope
into
xchg
or
inc
jle
xor
f2xm1
adc
ins
push
sar
push
imul
(bad)
push
lods
or
test
neg
outs
jg
inc
fstp
mul
xor
push
pop
ret
pop
cmps
sub
dec
idiv
sbb
mov
or
fs
xor
adc
ja
inc
sbb
inc
push
hlt
(bad)
ficom
dec
cmp
in
or
xor
mov
imul
retf
cmp
xchg
rol
movs
mov
inc
mov
inc
fcmove
sub
xlat
je
mov
retf
pop
sbb
das
jmp
movs
adc
pop
mul
test
fwait
cdq
repz
sbb
jl
outs
(bad)
scas
and
call
cmp
mov
popa
pushf
mov
int
data16
test
pop
out
inc
sub
add
cld
push
pop
xchg
test
dec
retf
jne
aam
inc
sahf
adc
xchg
pop
xor
mov
fnstenv
xchg
inc
aad
jne
push
pop
pop
sub
outs
call
jo
loop
(bad)
sbb
dec
inc
push
xor
or
cwde
mov
add
mov
jns
xchg
push
mov
not
dec
aas
nop
data16
fnsave
cmp
rcr
loopne
call
test
icebp
arpl
xchg
adc
push
and
push
add
repz
lods
jg
pop
xchg
cwde
jne
add
into
sub
sbb
sahf
mov
icebp
mov
lea
lock
mov
add
rcr
lods
stos
xchg
aad
xor
mov
push
movs
push
shr
jg
je
jb
(bad)
imul
adc
mov
push
xor
and
jns
xor
mov
retf
mov
mov
out
loopne
fsub
mov
add
loope
dec
dec
int3
fcom
sub
in
sub
push
dec
mov
push
arpl
xor
push
repz
nop
fwait
pop
xchg
mov
push
xchg
int3
cmp
movs
sti
fcomp
pop
pop
ins
hlt
cdq
popa
sub
jecxz
mov
fisubr
jecxz
int3
inc
xor
test
int
stos
adc
test
or
nop
sbb
idiv
scas
push
sahf
pop
jmp
jne
adc
sub
hlt
xor
iret
movs
sub
sub
adc
mov
repnz
nop
(bad)
in
mov
and
jnp
shr
inc
not
mov
pop
jp
add
xchg
cld
mov
jg
cmp
mov
arpl
dec
or
mov
es
aam
stos
mov
loop
cwde
mov
sub
fistp
mov
sub
adc
cdq
jmp
fwait
cmps
popf
js
cmp
and
jne
sbb
into
inc
fdivrp
movs
xchg
sbb
xchg
bound
jae
shl
clc
jo
and
repnz
and
push
xchg
adc
inc
adc
pop
dec
xor
call
sbb
out
sub
aam
js
adc
inc
xor
xchg
mov
dec
inc
mov
stc
mov
hlt
out
jmp
pop
jns
sar
push
and
sub
xchg
push
xchg
sub
cmp
lea
out
fisub
adc
int3
fdiv
mov
popf
jae
dec
sub
mov
call
clc
(bad)
xor
(bad)
and
(bad)
cld
push
addr16
imul
mov
sub
loop
mov
pop
fs
hlt
push
stos
pop
pusha
jg
nop
adc
pop
cmp
dec
arpl
popa
lods
ja
jl
dec
scas
mov
ror
mov
stos
inc
stc
add
cmc
or
jns
and
stos
in
jge
pop
in
(bad)
jae
retf
mov
adc
jmp
and
lods
mov
mov
sub
shl
rol
dec
inc
sbb
sub
push
fsubr
dec
adc
mov
mov
test
dec
mov
jns
inc
loope
push
push
outs
xlat
imul
mov
into
dec
stc
inc
fistp
sbb
xlat
test
fsub
mov
push
mov
aaa
sar
pop
cmc
jne
in
pop
(bad)
mul
inc
xsha256
cmps
push
movs
push
push
or
add
or
clc
and
call
enter
stos
cmp
leave
pop
push
jns
add
test
jne
out
lahf
js
test
test
test
add
dec
push
mov
fwait
stos
std
push
imul
jno
int
cwde
in
inc
int
pop
sub
jmp
and
imul
sub
push
jb
mov
jmp
arpl
dec
imul
rcr
dec
pop
js
jle
repz
std
int
cmp
shr
dec
or
popa
pop
jbe
sub
cmp
mov
jp
and
xchg
outs
xchg
mov
sub
push
cmps
pop
sti
icebp
les
add
jnp
mov
inc
push
inc
xor
and
in
aam
popa
pop
jp
jmp
loope
sbb
clc
jne
out
arpl
xchg
bound
ret
or
sub
call
inc
pop
mov
addr16
mov
sahf
out
jno
stos
jo
fisubr
pop
sbb
xchg
mov
mov
pop
or
mov
sub
xchg
cwde
add
movs
dec
add
cmps
hlt
fcmovu
test
push
mov
xor
sbb
les
test
aad
dec
mov
mov
stos
cwde
xchg
ins
mov
mov
scas
jle
ja
push
(bad)
fs
jb
aas
mov
xchg
out
fdivr
jle
adc
stc
ficom
retf
xchg
sub
sub
outs
retf
cmp
int3
movs
adc
call
icebp
out
aam
rcl
int
adc
in
add
pop
xor
mov
xor
out
fst
inc
stos
ja
xchg
fldlg2
nop
mov
pop
not
aas
adc
mov
fild
imul
fsub
(bad)
push
push
lock
(bad)
pusha
sar
push
cmp
mov
mov
sti
cmp
shl
jmp
pop
outs
es
movs
push
test
inc
(bad)
cmp
and
jae
mov
js
popa
jle
add
and
push
fistp
inc
xchg
inc
jno
mov
push
out
ucomiss
jecxz
mov
imul
cld
psraw
mov
inc
into
jg
movs
mov
imul
adc
add
dec
dec
mov
in
call
mov
lea
inc
test
int3
push
retf
sbb
jg
fs
sub
sahf
jg
mov
jnp
call
mov
push
mov
push
mov
frstor
pop
mov
adc
dec
scas
repz
aaa
je
frstor
int3
rcl
shl
fstp
out
sbb
pop
jmp
push
pop
pop
sar
xchg
dec
scas
xor
sub
jae
loop
adc
jmp
or
mov
adc
pop
and
pop
lods
xor
mov
(bad)
(bad)
xor
push
shl
test
imul
add
mov
mov
rcl
cmp
sub
cmp
xor
rol
sub
mov
ror
mov
in
rcr
dec
mov
jmp
aaa
mov
js
pop
inc
or
data16
sub
test
cmpxchg
arpl
pop
pop
xor
sti
nop
(bad)
push
cs
jnp
mov
sub
pop
jne
bound
int3
mov
mov
stos
or
bound
rcl
mov
and
mov
jno
test
sub
fwait
jmp
and
add
call
stc
movs
jne
popa
cli
fwait
inc
and
arpl
jnp
or
adc
cmp
pop
dec
inc
call
fmul
shr
inc
(bad)
in
in
int
sub
adc
std
push
mov
loop
lahf
mov
adc
scas
mov
jnp
mov
fdivr
in
cmp
outs
and
test
cmps
sbb
lahf
mov
jle
ret
gs
or
xchg
es
sub
fs
call
or
xchg
jle
xor
mov
mov
add
and
cwde
sbb
lea
js
and
repz
imul
add
mov
enter
popf
inc
pusha
xchg
lds
scas
push
out
mov
inc
or
dec
(bad)
sahf
cs
mov
imul
lahf
jno
mov
aad
aaa
mov
fstp
iret
pop
shl
mov
pop
push
int3
mov
retf
cmps
aas
loope
stos
jl
jmp
scas
sub
and
(bad)
fst
cmc
adc
pop
test
rep
int
lock
out
ffreep
sbb
aam
fwait
sub
fcom
pushf
cmp
mov
hlt
sti
ins
(bad)
int
call
popa
loope
cdq
aam
ss
fimul
gs
loopne
mov
mov
or
push
jnp
pop
pop
mov
sahf
repnz
add
add
std
push
jnp
xchg
ret
mov
in
sbb
ror
(bad)
xor
jno
das
aad
fld
pusha
daa
jno
fcom
or
sub
or
leave
inc
fcom
sub
dec
push
adc
sbb
jns
mov
push
adc
pop
shr
add
mov
jno
mov
rep
data16
fcomp
inc
jnp
retf
mov
jp
xchg
addr16
or
cmp
cmp
mov
push
clc
inc
adc
sbb
mov
xor
js
xchg
or
jge
mov
aad
pop
loope
xlat
(bad)
lock
add
pop
push
inc
dec
mov
pop
jae
cmps
in
in
jg
mov
inc
mov
movs
(bad)
in
jmp
sub
and
call
(bad)
cmps
in
cmc
inc
cmc
and
mov
iret
fldenv
xchg
cld
and
cmps
adc
out
lea
ror
mov
(bad)
push
gs
bound
inc
dec
and
out
lods
add
xchg
ficom
pop
cmp
(bad)
and
sar
mov
and
test
push
clc
in
pop
mov
push
mov
aas
clc
bound
aad
mov
mov
rcl
out
nop
jb
pop
mov
or
push
xchg
sbb
mov
ficomp
les
xchg
retf
sub
mov
sub
fld
cmp
sbb
jae
int3
dec
imul
push
add
push
adc
das
pop
fcom
push
pop
leave
xchg
fcomp
pop
je
fcomip
jo
adc
je
lds
push
lock
push
jns
in
jnp
scas
and
jge
xchg
xlat
sub
lahf
ja
stos
retf
ins
add
add
repnz
xchg
call
dec
imul
ja
xchg
in
sub
cmp
cmps
in
cmp
adc
mov
rcl
xor
aaa
test
stos
fwait
nop
xor
cmps
dec
inc
imul
pop
adc
rol
push
adc
loopne
lods
lea
or
add
mov
into
out
mov
out
test
fnstenv
leave
add
xchg
popa
loopne
xor
push
pop
add
mov
sbb
xchg
mov
push
jmp
call
cmp
popa
jmp
add
push
aas
mov
imul
jg
jb
mov
add
out
mov
mov
jmp
stos
xchg
and
imul
or
cmp
push
xor
shr
movs
fsubr
cld
and
cmc
push
jmp
fwait
jns
inc
pop
ret
out
sub
ror
in
(bad)
cwde
jmp
push
rcr
mov
mov
or
(bad)
lods
xor
dec
jae
jae
js
jle
add
cmps
jg
mov
xchg
std
(bad)
js
repz
imul
or
mov
xchg
sti
sub
call
sbb
ds
xor
cwde
or
sti
cmp
(bad)
jg
push
repnz
(bad)
fmulp
xchg
jmp
iret
mov
js
jle
dec
jecxz
in
movs
das
ds
inc
xlat
movs
bound
mov
je
in
xchg
scas
pop
daa
or
ret
xchg
mov
jg
jp
or
inc
xchg
cmp
cld
retf
fisttp
jecxz
mov
mov
pusha
xlat
sub
fist
lods
mov
aad
pop
mov
adc
jle
fs
push
int
sub
lahf
out
aam
mov
mov
enter
dec
ficom
outs
aam
dec
jae
xchg
fimul
push
popf
pop
pop
jl
xchg
stos
popa
sub
cmp
data16
sub
ins
pop
sub
imul
ret
mov
je
mov
jmp
sub
pop
pop
jbe
and
xchg
inc
add
jmp
ds
xchg
dec
fcmovnbe
push
xor
dec
push
sahf
push
and
cwde
iret
out
(bad)
sbb
mov
xchg
inc
mov
ins
scas
xor
pusha
add
inc
adc
inc
(bad)
gs
and
mov
call
not
sbb
adc
push
fisttp
repnz
jle
cmp
xlat
in
call
pop
in
popf
push
ins
sub
aas
pop
out
loopne
dec
xor
in
or
dec
mov
mov
cdq
pop
mov
cmp
push
pop
dec
pop
repnz
movs
sar
or
sbb
sbb
xor
shr
push
inc
test
or
xchg
pop
scas
jmp
in
xlat
jae
xchg
xor
fwait
mov
pop
inc
inc
lea
int
neg
mov
ficomp
rcl
sbb
loop
aaa
dec
mov
inc
pop
rcr
pusha
sub
scas
popa
jle
rcl
js
movs
pop
out
es
retf
and
pushf
shr
jge
dec
sbb
and
mov
test
fnop
rol
jmp
xchg
jmp
inc
xor
inc
dec
scas
pop
adc
xchg
mov
jecxz
push
imul
add
mov
imul
pusha
jg
icebp
add
jmp
mov
adc
stc
mov
jo
and
xchg
inc
or
test
pushf
std
sub
dec
(bad)
(bad)
xor
movs
mov
pop
nop
xchg
int3
push
or
pop
(bad)
retf
mov
cmp
jne
fiadd
mov
in
pop
xchg
loop
pop
push
mov
shl
call
daa
dec
mov
(bad)
cs
mov
mov
pop
mov
call
add
or
or
into
cmp
imul
ja
push
cmp
mov
out
adc
adc
sub
retf
jmp
or
inc
adc
aad
sbb
adc
adc
dec
js
shl
mov
pop
imul
lods
repnz
xor
sahf
jg
add
rcr
(bad)
ja
cs
jecxz
sbb
jmp
loop
jge
out
adc
fldcw
addr16
out
pop
inc
and
out
xchg
jp
jecxz
ins
mov
fs
xlat
jns
sub
ins
xchg
enter
pop
in
loop
ds
xor
movs
dec
call
sar
sbb
fisubr
sti
ins
adc
stc
fidivr
inc
aaa
xchg
mov
bound
lahf
shl
adc
cmp
sub
jo
push
mov
sbb
jae
out
cdq
out
cmp
adc
(bad)
daa
adc
adc
or
int
dec
mov
fnsave
sub
mov
outs
adc
mov
test
clc
sbb
jge
les
jno
inc
sar
push
aas
retf
mov
mov
sar
int
scas
popa
adc
push
xchg
jecxz
push
mov
addr16
(bad)
(bad)
hlt
mov
pusha
and
jl
aas
(bad)
out
loop
scas
adc
popf
sar
sub
mov
sub
jns
jp
ins
cmp
loopne
fadd
inc
push
movs
pop
xchg
inc
or
pop
imul
push
ret
les
mov
adc
out
jmp
add
sahf
je
bound
sbb
add
sbb
xchg
(bad)
sub
mov
movs
inc
push
adc
jne
test
jb
xchg
stc
sub
adc
inc
pop
std
xor
xchg
add
aad
jmp
daa
dec
adc
or
jl
sar
inc
xor
clc
retf
jp
push
scas
aas
outs
pop
cmp
add
daa
(bad)
int
adc
push
and
or
cmps
outs
or
inc
dec
push
aad
inc
(bad)
add
mov
icebp
sbb
pop
sbb
loopne
cmc
lock
inc
inc
iret
aam
jge
icebp
pop
(bad)
stos
pop
push
shr
push
imul
xchg
xor
das
out
retf
sub
inc
aam
cmps
jl
out
out
repnz
adc
or
or
cwde
add
mov
cdq
jnp
iret
cwde
outs
popa
cmp
add
dec
push
sub
mov
hlt
mov
xchg
and
popa
xchg
repnz
or
out
inc
out
sub
add
pusha
sbb
xchg
pop
and
(bad)
xchg
mov
sub
(bad)
and
xor
stos
jae
mov
aad
push
stc
mov
call
push
pop
jbe
mov
push
lods
sbb
push
push
call
lea
cmp
fidiv
pop
loop
xchg
sbb
mov
sahf
xor
js
clc
fisub
ficom
fdivr
test
inc
xchg
push
lods
stc
mov
fdivr
ficom
dec
lods
dec
sahf
add
mov
std
mov
push
jb
xor
add
sbb
sbb
out
mov
adc
dec
xor
mov
sub
jl
rcr
pop
hlt
cmp
(bad)
inc
cmp
mov
sahf
cmp
add
fs
lds
cdq
cmp
push
pop
test
xchg
imul
jle
inc
fist
xor
call
sbb
lock
out
xor
or
dec
loope
push
mov
scas
sahf
mov
(bad)
scas
ror
retf
outs
loopne
aad
mov
push
dec
adc
call
es
rcr
arpl
jp
sbb
inc
push
(bad)
mov
imul
ret
jl
arpl
fmul
add
sub
call
loopne
retf
inc
add
sub
imul
xor
and
xor
cmp
sahf
dec
mov
call
mov
mov
cmp
mov
(bad)
dec
mov
clc
or
invd
push
push
das
ins
push
cmp
das
sbb
cwde
imul
mov
sub
or
lods
popa
outs
xchg
fst
les
mov
shl
fisttp
mov
je
mov
mov
dec
fistp
adc
push
imul
cmps
inc
mov
mov
push
stos
iret
repnz
jl
cld
push
push
sar
ror
or
daa
ins
mov
(bad)
aas
iret
leave
pushf
mov
xchg
scas
mov
pop
adc
(bad)
retf
push
xchg
push
xor
cmp
xlat
mov
add
jmp
fwait
out
es
out
cwde
outs
stos
xchg
(bad)
fstp
xchg
jb
sbb
xchg
lock
aam
dec
fucomi
mov
cmp
dec
call
pop
mov
retf
add
clc
jns
jmp
push
test
outs
adc
in
lds
or
mov
sub
aas
mov
inc
loop
xor
mov
ja
dec
imul
cli
cld
xchg
jnp
test
mov
pop
cmps
push
(bad)
mov
movs
fisubr
shl
aam
mov
mov
xor
retf
stos
xor
loop
nop
inc
rcr
adc
xor
fsub
hlt
and
xor
push
(bad)
std
sbb
pop
jg
inc
ja
(bad)
stc
mov
in
shr
sub
into
mov
xchg
pop
gs
imul
pop
sbb
mov
gs
lahf
(bad)
sbb
add
shr
imul
jg
or
or
daa
retf
sub
or
inc
loope
lea
xchg
push
jmp
sub
adc
push
call
sbb
bound
(bad)
dec
xchg
lahf
mov
je
pop
cmp
xchg
mov
cwde
cmp
jge
mov
xchg
inc
mov
cmps
mov
je
cmp
sub
lock
sub
push
xor
xchg
lahf
xor
sar
sub
pop
shl
push
lods
ret
mov
mov
jecxz
mov
cs
outs
push
daa
push
push
inc
in
cli
mov
pop
sub
shr
scas
(bad)
jns
shl
xor
xchg
or
inc
jno
das
jo
mov
jne
mov
push
repz
jae
dec
fdivrp
sub
je
or
cmp
aaa
or
and
sahf
enter
cwde
dec
hlt
mov
pop
in
icebp
push
push
mul
push
or
sahf
sbb
push
xor
push
mov
and
jns
ss
cwde
bound
jmp
aad
cs
retf
jmp
pop
inc
sub
jno
adc
pop
inc
jp
cwde
mov
mov
push
loope
sbb
cmp
jmp
or
mov
xchg
gs
in
retf
scas
adc
push
fst
cmp
movs
cvtps2pi
out
inc
dec
mov
dec
in
mov
dec
neg
or
sub
test
(bad)
mov
mov
call
arpl
jmp
mov
and
call
mov
loop
or
pop
std
cmp
mov
(bad)
mov
push
cwde
loop
inc
ss
push
or
sub
xchg
ss
mov
dec
or
call
lea
cdq
add
jge
pop
inc
sub
add
iret
push
jp
lahf
inc
pop
add
ret
int3
das
shr
leave
dec
cmp
or
fild
mov
stos
mov
cli
loope
add
add
and
nop
mov
out
dec
mov
mov
int
pop
rol
lods
sub
retf
scas
mov
jmp
retf
jbe
mov
lahf
pusha
push
mov
push
jmp
cwde
push
sti
sbb
loopne
add
div
and
inc
test
mov
leave
pop
lea
or
push
les
lds
jbe
add
add
xchg
cmc
add
mov
imul
in
in
sbb
jmp
cdq
out
mov
push
in
aad
sbb
and
in
cmp
dec
cmc
out
fist
dec
pushf
jge
push
ins
rol
stc
cmp
sbb
data16
(bad)
mov
add
in
sbb
sbb
(bad)
jns
cli
mov
cld
and
jne
adc
test
mov
jg
loop
fucom
sqrtps
out
add
cld
cmp
scas
cmp
test
or
mov
push
inc
mov
gs
sub
dec
bswap
or
mov
jmp
arpl
arpl
addr16
push
inc
out
ret
(bad)
push
xchg
mov
fisubr
mov
cmp
xor
test
inc
dec
xor
popf
mov
(bad)
mov
ds
retf
mov
pop
das
stos
inc
xor
adc
(bad)
(bad)
in
shl
rcl
mov
lea
or
scas
pop
lods
cmp
xlat
(bad)
fst
gs
mov
dec
das
test
sbb
xchg
jge
adc
xchg
shr
jns
stc
xor
sbb
mov
rcr
sbb
fidiv
or
adc
or
sbb
pop
out
(bad)
arpl
xchg
inc
int
cmp
xlat
pop
ret
add
sub
add
cmp
lods
mov
xlat
leave
xchg
jmp
das
test
push
pushf
or
cmps
add
cli
popa
aam
movs
mov
int3
mov
pop
pushf
and
xor
xchg
fsub
or
test
mov
int
push
daa
add
lods
mov
aaa
dec
lods
lahf
scas
outs
mov
lods
xchg
xor
sbb
pop
dec
push
pop
cmps
icebp
les
push
(bad)
aam
gs
mov
mov
int
shl
test
push
loope
dec
inc
data16
sbb
add
into
xchg
pop
popf
inc
adc
(bad)
cmp
movs
fiadd
dec
out
or
data16
aam
retf
ss
popa
int
dec
and
xor
test
pop
mov
dec
xchg
sbb
or
sub
retf
clc
fidivr
push
xlat
pop
jmp
shl
imul
fsubr
pop
mov
ja
int3
jno
pop
xchg
aas
xchg
mov
sbb
lahf
xor
sub
cs
mov
and
ins
scas
push
test
dec
pop
or
out
sub
sbb
inc
xor
sbb
ss
ins
cmp
pop
iret
lea
shl
push
test
shr
push
push
push
popf
cmps
loop
sbb
sbb
pop
push
adc
and
cmp
push
mov
lea
cmp
aaa
inc
and
scas
sub
mov
outs
jns
(bad)
movs
jmp
add
push
shr
repz
jnp
(bad)
jl
pushf
ins
not
pop
mov
jb
dec
lock
movs
ret
jg
cmp
jmp
xchg
xchg
fimul
test
fidivr
sbb
mov
mov
and
cdq
sbb
cld
lods
sub
es
call
push
pop
sbb
ins
xor
mov
jmp
pusha
push
jl
addr16
cmp
repnz
dec
sub
dec
in
scas
fwait
test
aaa
push
xlat
in
xor
mov
jmp
dec
scas
pop
mov
adc
neg
mov
mov
pop
std
mov
push
mov
add
movs
arpl
push
mov
dec
pop
mov
fsubr
jae
pop
nop
jle
ja
movs
fistp
cmps
sbb
sahf
(bad)
stc
jae
call
jne
scas
pop
out
jmp
sbb
iret
cmps
sub
jne
sub
iret
(bad)
cmp
inc
and
sahf
xlat
std
repnz
test
pop
xchg
scas
popa
test
es
aas
(bad)
xor
sbb
jbe
or
test
mov
(bad)
or
pop
xchg
xlat
add
cmps
out
mov
aad
loopne
or
cmc
in
mov
loope
movs
sbb
rol
retf
xchg
sub
inc
loop
not
imul
sub
es
sbb
inc
popa
inc
sub
pop
lods
sub
pop
cmp
push
dec
(bad)
dec
or
std
lahf
mov
dec
or
dec
adc
movs
repz
xchg
inc
sub
add
sbb
xor
rol
aad
es
jnp
ja
ja
mov
xchg
xor
or
add
jmp
cmp
ret
jge
dec
lods
fisub
ss
icebp
in
mov
or
lock
rcr
pop
jno
lods
mov
cld
pushf
mov
je
and
in
(bad)
outs
pushf
mov
sub
(bad)
pop
pop
pop
push
clc
cld
xlat
test
gs
adc
adc
cwde
xor
scas
fbld
jb
add
cdq
push
mov
add
(bad)
div
xchg
dec
sbb
hlt
test
mov
push
mov
mov
and
mov
rcl
loopne
mov
and
dec
adc
cmp
push
test
fnstenv
popf
add
and
sti
dec
sub
in
mov
push
xchg
pop
shl
lea
mov
les
fstp
out
aam
stos
cmp
pop
sub
adc
dec
xor
pop
(bad)
jmp
add
dec
inc
(bad)
in
sub
cmp
mov
out
mov
dec
mov
cmc
jo
out
in
es
cli
cmp
aad
xor
data16
fldenv
gs
fild
das
gs
sub
jmp
stos
add
or
inc
add
cld
push
out
and
imul
scas
mov
adc
inc
retf
stos
add
sar
out
pop
fsubr
add
push
dec
fdiv
mov
daa
pop
fild
adc
push
cmp
call
pushf
adc
fsub
inc
adc
push
fs
pop
adc
call
push
repz
mov
add
jae
(bad)
in
cmc
jg
lods
loope
xchg
cmps
cmc
fadd
mov
dec
in
and
jge
ds
sub
mov
xchg
pop
adc
dec
cmps
xor
dec
mov
call
push
fiadd
push
and
into
xlat
fnstenv
mov
inc
js
dec
adc
or
arpl
mov
sub
xchg
aaa
or
(bad)
outs
pop
pusha
mov
cmp
mov
cmp
rol
dec
test
mov
ins
enter
and
scas
xchg
cmp
movs
bnd
sbb
xchg
jmp
repz
jae
popf
mov
int3
sbb
cs
rcr
dec
fxch
mov
ds
inc
int
pop
pop
loop
outs
mov
push
cmp
dec
push
mov
js
cmc
ds
test
arpl
push
mov
movs
jmp
mov
xlat
retf
xchg
cli
mov
mov
mov
vmovntps
test
fnstsw
(bad)
pop
ret
ror
icebp
mov
pop
js
push
push
mov
lods
scas
retf
sub
pop
sub
mov
or
and
xchg
retf
icebp
xor
test
inc
adc
adc
cdq
les
pop
clc
jle
pop
cmp
es
inc
imul
cmp
ror
test
jnp
pop
mov
jae
push
or
fwait
xlat
mov
call
repnz
int3
in
or
mov
test
pop
inc
in
ret
inc
outs
dec
cmp
stos
pop
push
enter
sti
push
add
lods
call
adc
(bad)
es
or
(bad)
jmp
(bad)
jno
sub
cmp
ins
(bad)
mov
repz
fisubr
mov
cld
pop
lods
cmp
push
loope
leave
imul
or
xor
lods
sub
push
inc
in
les
sbb
mov
push
dec
push
call
pop
fldenv
sub
inc
jmp
(bad)
mov
loop
addr16
fcomp
dec
xchg
stos
add
mov
xor
push
ficomp
pop
add
push
pop
jp
inc
sti
jno
xor
and
(bad)
enter
push
cmp
outs
sbb
fidivr
push
pop
arpl
std
jno
dec
and
iret
daa
mov
fiadd
outs
and
xor
sbb
push
xchg
fsubr
ins
push
pop
sbb
lods
shl
cmc
mov
dec
pop
fdivr
rcl
cmp
pop
sub
cmc
inc
and
or
shl
add
(bad)
int3
jmp
test
or
add
or
(bad)
call
test
jmp
inc
enter
sub
enter
mov
push
popa
and
jae
adc
or
out
pop
push
into
mov
popf
jl
into
xor
jle
(bad)
sbb
sub
inc
xor
fdecstp
out
mov
mov
sti
lods
adc
lds
xchg
in
dec
lds
mov
in
pause
push
cmp
sbb
out
cmp
les
xor
dec
lods
movs
jnp
cs
int
pop
mov
es
daa
mov
arpl
mov
xlat
mov
add
mov
je
call
cmps
test
clc
sbb
adc
(bad)
stc
mov
dec
gs
sbb
fisttp
jle
(bad)
cli
mov
mov
push
sub
inc
mov
js
jecxz
xchg
or
jge
jnp
(bad)
mov
loop
pop
or
inc
jbe
xor
sahf
dec
push
sbb
retf
in
loope
int
mov
pop
dec
adc
push
xlat
mov
pop
cmp
cld
mov
retf
mov
jge
push
sub
pop
mov
shl
je
push
fidivr
inc
adc
retfw
adc
pop
cmp
mov
outs
jp
mov
pop
push
xlat
ret
dec
jle
jmp
idiv
sub
fwait
push
inc
sbb
ins
xchg
in
out
iret
ja
mov
mov
hlt
pop
add
int3
ins
das
add
icebp
dec
imul
shl
jp
push
add
sub
fdiv
aam
and
cmp
fwait
push
dec
push
xor
mov
in
cmp
(bad)
movs
xor
add
add
aad
pop
je
pop
leave
cmp
fnstcw
xchg
sbb
xchg
(bad)
fwait
push
inc
push
mov
dec
jg
or
sbb
push
aas
ins
mov
lods
repnz
push
dec
push
pop
or
cmp
mov
int3
ins
dec
adc
call
ja
sub
jo
out
fstp
pop
xor
jns
adc
sbb
adc
jnp
adc
or
mov
xchg
cmp
adc
std
imul
scas
and
scas
and
mov
sub
in
dec
ds
jne
inc
cmp
sub
mov
je
jmp
das
sbb
cmp
dec
jne
pop
sar
into
cmp
pushf
cld
add
loopne
jmp
push
(bad)
xchg
cmp
jb
adc
lods
outs
mov
jmp
aaa
cmps
pop
rcr
mov
sti
xchg
and
jno
xor
popaw
xchg
mov
push
push
sub
jle
enter
mov
out
out
cmp
mov
add
push
mov
sub
(bad)
retf
leave
out
enter
xor
inc
pushf
xlat
jge
or
(bad)
les
adc
pop
pop
aam
cmps
cs
pop
loop
xor
scas
or
xchg
xlat
bound
cmp
pop
in
mov
rol
out
je
outs
lds
(bad)
fisubr
dec
fs
add
pop
cwde
in
lods
loopne
and
out
retf
scas
test
dec
js
gs
adc
mov
sbb
xchg
shr
jmp
mov
cmp
lahf
and
hlt
and
mov
(bad)
dec
in
fsubrp
arpl
outs
repnz
sbb
out
cmp
xchg
fucomp
mov
mov
outs
jle
sub
inc
pop
outs
pop
jb
cs
in
jo
sbb
scas
jg
(bad)
xor
mov
push
jnp
ror
arpl
clc
and
(bad)
mov
aam
out
mov
outs
jae
mov
call
jge
jne
jp
ds
js
cld
adc
loope
enter
push
sti
hlt
popf
int
(bad)
(bad)
mov
loope
in
imul
out
mov
loop
inc
pop
xchg
bound
out
mov
in
test
rcr
add
push
inc
jp
or
and
jg
pop
sub
mov
outs
sbb
add
xchg
add
sub
add
shr
inc
in
jo
mov
sti
icebp
fisub
aas
lock
std
push
ins
mov
sar
adc
mov
jge
xchg
xchg
adc
sub
mov
stos
inc
push
test
sub
mov
dec
sbb
jns
xor
adc
mov
(bad)
jns
js
std
and
hlt
push
(bad)
sar
pop
sbb
mov
jns
sbb
inc
jmp
ficomp
movs
adc
xlat
and
and
mov
jle
push
popf
xor
mov
pop
adc
nop
test
dec
add
and
repz
jno
dec
stc
movs
sub
shr
jns
addr16
fs
mov
inc
jp
ret
sar
popf
out
push
aad
shl
sub
enter
inc
data16
loop
push
adc
adc
dec
add
imul
mov
push
daa
inc
aas
retf
inc
out
sbb
popf
jmp
aam
jb
(bad)
dec
xor
out
mov
pushw
adc
repz
sbb
mov
(bad)
stc
cmp
rcl
mov
cmc
lods
push
push
adc
jns
mov
stc
push
sub
fldz
call
sbb
leave
and
add
scas
ret
dec
(bad)
frstor
sbb
mov
iret
sub
test
(bad)
aad
xor
or
shl
push
mov
ret
icebp
sahf
je
int3
lea
repz
xchg
cdq
retf
imul
cmp
xchg
xor
test
adc
repnz
fdiv
cli
fwait
je
push
fs
(bad)
scas
jg
cmps
mov
loopne
es
ja
mov
enter
aad
int3
shl
mov
xor
pop
add
fisub
mov
fwait
xchg
dec
ins
inc
stc
mov
xchg
xchg
sub
je
retf
mov
xlat
mov
inc
xchg
and
sar
in
movs
fdivr
mov
adc
sbb
sbb
sub
leave
inc
mov
bound
das
sbb
mov
mov
mov
cmp
stc
int
xor
jo
loope
ins
mov
cmc
ror
push
ins
pusha
test
adc
loopne
(bad)
ficom
jns
cmp
mov
addr16
and
and
dec
cmps
iret
repnz
and
add
add
stos
daa
mov
or
push
add
dec
(bad)
xchg
in
bound
add
stos
mov
mov
sub
fadd
push
fwait
aam
ins
cmc
inc
es
xchg
mov
fwait
out
fisttp
int3
test
pop
cmps
push
jecxz
loop
mov
jecxz
push
mov
cmp
je
cld
mov
fsub
out
fwait
popa
fs
mov
pop
inc
dec
add
rcr
sbb
mov
call
pusha
cmp
and
inc
inc
sub
push
mov
and
into
pop
mov
into
out
ja
into
xchg
pop
loopne
outs
sub
mul
out
lea
mov
idiv
aam
cmps
stos
xor
mov
cmps
jle
data16
in
mov
adc
hlt
mov
inc
inc
addr16
mov
aam
or
jge
leave
adc
bound
in
xchg
popa
inc
repz
xor
cs
lods
loope
push
mov
scas
jb
mov
pop
aad
xchg
pop
xchg
push
fld
jne
mov
aas
xor
retw
pmulhw
lea
std
ror
adc
add
cmp
dec
mov
dec
ror
enter
mov
retf
inc
fdivr
push
jmp
jge
xchg
fdivrp
jbe
sar
cli
xor
lahf
jne
and
test
cwde
out
mov
cmps
sbb
mov
push
aad
xchg
aam
xchg
jbe
out
dec
lds
push
sbb
ficomp
cmp
sahf
xchg
mov
stos
jmp
scas
stc
(bad)
jecxz
mov
dec
inc
mov
fsub
mov
les
inc
daa
mov
or
popa
sahf
test
xchg
aaa
stos
fstp
sbb
cmp
bound
mov
jmp
and
add
pop
add
pop
mov
adc
pop
cmp
shl
mov
mov
stc
inc
sbb
and
dec
movs
add
and
stc
mov
sti
add
xor
lds
cmp
jp
jmp
jne
jnp
mov
test
push
cmps
lea
js
inc
out
adc
xor
pop
add
dec
iret
(bad)
xor
ds
mov
sub
pushf
aam
test
(bad)
mov
dec
mov
iret
and
sbb
inc
xor
fdivr
or
mov
ss
sub
inc
scas
outs
lahf
shl
ftst
sar
mov
xchg
xor
fild
dec
xchg
mov
int
mov
pop
sbb
jmp
and
leave
(bad)
cwde
dec
add
dec
out
xor
cld
xchg
fnstsw
sbb
add
cs
int
jecxz
fwait
std
xlat
sbb
das
pop
data16
pop
jns
scas
mov
imul
cmp
fwait
and
dec
xchg
push
mov
push
in
xlat
sub
movs
les
mov
xor
call
and
nop
enter
adc
push
mov
mov
test
mov
jg
adc
inc
xor
jmp
mov
xchg
adc
in
xchg
xor
(bad)
add
retf
scas
push
jle
xchg
pop
lods
cs
sar
shl
push
imul
stos
mov
cmc
sbb
pushf
mov
jl
sub
mov
das
retf
mov
gs
mov
stos
sub
popa
sbb
(bad)
fwait
imul
push
mov
mov
in
sbb
(bad)
repz
lahf
popa
pop
outs
test
test
dec
in
aaa
xlat
sahf
and
loope
popf
xor
sbb
adc
iret
jnp
adc
cmp
cmp
pop
daa
ja
movs
loop
mov
sub
push
adc
loop
out
jbe
or
dec
cwde
movs
scas
jge
mov
mov
popf
xchg
and
fisubr
pushf
pavgb
add
mov
adc
aam
inc
gs
or
cmps
clc
cmp
sub
push
iret
cwde
sub
movs
push
pop
inc
xchg
scas
add
movs
retf
in
outs
div
xor
mov
dec
hlt
xchg
or
stc
adc
fadd
mov
sbb
enter
mul
and
pop
dec
inc
faddp
loop
pusha
inc
ins
(bad)
les
cdq
mov
push
dec
(bad)
mov
jns
ficomp
mov
sbb
idiv
cmps
movs
cld
mov
pop
call
sbb
sar
movs
push
sbb
mov
mov
cmps
in
cmovge
push
shl
fst
mov
mov
icebp
mov
or
ss
add
stc
outs
into
setge
pop
ror
rol
bound
int
shl
addr16
push
mov
mov
sub
call
repnz
stc
es
aam
cmp
pushf
mov
and
pop
push
mov
dec
test
jns
sub
stos
loopne
xchg
fist
push
cdq
inc
pop
mov
rcl
and
cmp
pop
fistp
fld
mov
jle
jmp
adc
lea
leave
data16
jns
fwait
xrelease
push
jns
jo
pop
mov
xchg
or
test
leave
mov
mov
je
rcr
xchg
cmp
dec
out
push
xor
int3
into
xchg
ret
psubusw
(bad)
mov
int3
cwde
cs
xchg
fldenv
enter
mov
mov
jns
cmc
xchg
or
jmp
aad
push
pop
aas
sub
pop
aam
movs
in
adc
fidiv
jl
dec
fwait
and
mov
scas
mov
lds
repnz
cli
pop
xor
and
mov
push
push
and
inc
pop
mov
int3
adc
outs
inc
imul
mov
cmp
fild
loopne
fbld
cmp
jmp
push
push
call
jp
mov
sub
int3
mul
cmp
ret
cmp
jnp
mov
std
stos
(bad)
xchg
out
iret
xlat
push
cmp
cld
cmp
fcmovnbe
(bad)
leave
mov
lods
ins
mov
das
clc
mov
or
movs
test
jb
push
mov
jmp
leave
mov
inc
dec
xor
cwde
fcom
faddp
mov
mov
mov
(bad)
cs
je
push
xor
cmp
lea
retf
cmp
push
cmc
jbe
xchg
es
push
pop
xchg
mov
int3
scas
icebp
mov
cmp
sbb
xchg
data16
xchg
mov
push
mov
adc
inc
dec
dec
bound
test
out
jl
xor
cmc
ins
hlt
das
mov
sti
and
push
(bad)
mov
ds
mov
add
stos
in
xchg
outs
mov
mov
ds
stos
in
ds
fsubr
cmp
sbb
inc
nop
mov
daa
clc
pop
jmp
inc
shl
retfw
fistp
xor
inc
nop
retf
std
jmp
and
push
(bad)
mov
pop
add
or
inc
add
clc
pop
mov
scas
repz
ret
cld
dec
mov
mov
jmp
push
lods
and
das
out
lods
mov
nop
iret
push
fimul
ror
pop
xor
jecxz
mov
ret
xchg
fneni(8087
jnp
push
or
popf
push
inc
push
pop
iret
test
fs
mov
stc
imul
cs
mov
add
or
mov
dec
add
dec
cmp
sahf
outs
cmp
push
add
sbb
add
mov
(bad)
xchg
(bad)
push
or
push
je
cmp
mov
pop
jecxz
pusha
or
cmp
pop
or
lds
mov
push
jle
sti
cwde
sub
mov
hlt
nop
scas
test
add
jmp
sub
sbb
fldcw
mov
push
mov
mov
jo
fst
das
cmps
scas
test
lods
je
iret
jge
jge
add
stos
inc
ins
mov
cs
dec
jb
mov
fist
mov
cld
lds
sbb
fbstp
pop
icebp
adc
add
mov
dec
clc
add
mov
enter
or
cld
dec
xor
int
xchg
mov
pop
adc
rcl
add
lock
cbw
out
jo
ds
jmp
jl
mov
add
call
cmps
push
imul
pop
adc
xchg
int3
mov
aad
xchg
dec
out
lods
add
ficomp
sahf
xor
repz
pop
jb
cmp
je
clc
in
aas
add
unpckhps
pop
dec
xor
mov
bound
mov
loopne
sub
mov
and
rol
pop
jae
push
in
aam
(bad)
cwde
mov
add
dec
or
mov
dec
sbb
dec
aas
ror
pop
out
retf
lea
mov
jmp
nop
sub
mov
jb
dec
into
ins
add
js
inc
test
stos
add
fwait
push
mov
cmp
pand
xor
xchg
fisub
dec
out
sub
jecxz
jmp
push
sbb
mov
adc
push
xor
mov
push
fadd
xchg
call
enter
mov
mov
call
mov
jmp
jmp
jb
mov
mov
or
jle
sbb
inc
test
xchg
data16
jnp
mov
push
fs
rol
call
sub
mov
std
stos
pop
mov
test
aaa
popf
xor
fdivr
jno
loop
retf
push
stc
int
mov
rcl
retf
sti
push
mov
pop
mov
mov
push
adc
aaa
mov
aam
lea
loopne
loop
mov
mov
jmp
das
sub
cmp
xor
fadd
retf
add
(bad)
sbb
pop
adc
ins
inc
cmp
sbb
or
mov
xor
cmps
and
fsub
xchg
pop
out
loope
and
mov
adc
movs
mov
mov
xchg
add
sbb
cmp
jmp
mov
cmps
jmp
test
(bad)
int
loopne
push
inc
and
mov
pop
cmpxchg
mov
loop
add
pop
stc
test
std
and
cmc
cld
push
and
mov
gs
or
or
pop
pop
cwde
test
ins
stos
xchg
cmp
and
es
icebp
mov
dec
jg
push
xchg
movs
in
fist
shl
nop
cmp
cmp
jns
xor
dec
std
shr
mov
frstor
pop
daa
test
leave
clc
hlt
mov
pop
es
in
mov
pop
xchg
inc
jnp
out
push
jnp
cmp
sti
xor
sbb
jle
and
fistp
movs
push
gs
jae
fwait
push
mov
add
add
mov
cs
push
loopne
pop
test
std
add
in
xor
pusha
iret
inc
dec
xchg
mov
add
outs
ins
das
mov
scas
inc
fimul
das
push
mov
inc
jle
mov
jae
retf
sbb
outs
xchg
leave
push
jae
shl
and
cmc
push
(bad)
out
hlt
mov
push
fild
pop
push
mov
jle
mov
dec
mov
loop
sbb
adc
aas
and
dec
pop
cmc
lea
and
cmp
dec
inc
or
cmp
dec
xor
mov
fnstenv
icebp
add
jb
xchg
not
xor
stos
jb
jne
(bad)
mov
jnp
add
add
push
pop
xor
cmp
sbb
xlat
retf
sbb
lock
dec
mov
pop
push
sbb
mov
cmps
aad
pop
sbb
js
cwde
iret
add
dec
nop
sbb
sub
adc
dec
jmp
mov
movs
mov
dec
into
gs
or
arpl
sub
dec
cmp
or
out
stos
call
xor
xor
push
pop
stc
xor
dec
cmp
(bad)
ja
inc
dec
mov
addr16
fsub
int3
in
mov
add
cdq
dec
cli
ins
xor
mov
dec
push
jbe
add
iret
repnz
(bad)
dec
lock
ins
pop
int3
xor
in
adc
fcom
scas
imul
mov
xchg
pop
push
mov
dec
es
add
std
dec
stos
test
sbb
cmps
push
pushf
jo
popa
xchg
fld
mov
and
xlat
inc
aad
mov
xor
jb
dec
cwde
add
test
jae
mov
inc
daa
dec
inc
add
dec
std
cmps
add
js
rol
xchg
adc
add
aam
(bad)
arpl
add
sbb
fdivr
stos
pop
gs
pop
(bad)
sub
xchg
push
cmp
xchg
pushf
mov
mov
les
mov
push
xchg
xor
mov
xchg
or
mov
int3
jl
sbb
fmul
mov
mov
in
(bad)
fist
mov
rol
xlat
cs
std
mov
call
leave
add
out
movs
xor
data16
shr
lods
rcl
test
sub
lea
xchg
fiadd
enter
mov
dec
cmps
call
adc
lds
xchg
dec
(bad)
sbb
adc
rcl
inc
xchg
popa
dec
adc
fsub
cmps
imul
imul
cmp
js
mov
xchg
xor
stc
retf
mov
fldenv
test
cmc
pop
and
xchg
sbb
xchg
mov
out
call
or
jns
add
sti
add
imul
cmp
mov
clc
fild
icebp
xlat
dec
mov
fistp
and
mov
into
jmp
mov
and
xchg
daa
push
inc
dec
enter
and
shr
xchg
aam
in
or
pop
mov
xor
jle
pop
pop
nop
es
not
sbb
or
inc
and
push
mov
push
movs
or
cmp
add
out
ja
jp
in
push
out
adc
loop
call
adc
in
sbb
nop
jns
push
add
add
pop
dec
dec
push
nop
pop
mov
sbb
dec
cld
adc
outs
sub
adc
inc
inc
sti
sbb
lods
dec
cmp
out
mov
cmp
aad
std
sti
frstor
lods
fsub
mov
adc
fmul
in
jmp
and
not
sub
fdivr
add
mov
iret
push
add
jae
jnp
push
(bad)
sbb
jg
cmp
cmp
mov
adc
lods
adc
pop
cmp
sbb
inc
imul
mov
repz
mov
call
addr16
xchg
bound
sbb
xchg
fcmovne
xor
ds
in
icebp
pop
jg
sub
sti
nop
les
and
retf
and
and
out
dec
jns
mov
mov
pop
xchg
push
dec
cmp
jge
(bad)
pop
sub
pop
xchg
(bad)
(bad)
fiadd
leave
fldcw
push
pop
push
fdivr
repz
fcmovne
xchg
pushf
mov
inc
stos
mov
fcmovb
sbb
dec
aaa
dec
je
cmp
push
push
stos
push
mov
sub
addr16
mov
push
jp
pop
mov
outs
mov
clc
jnp
mov
rol
push
jecxz
jne
push
pop
adc
pop
jns
push
jbe
push
arpl
push
aas
push
push
jmp
and
mov
adc
loop
inc
push
xchg
cdq
cdq
pop
call
fcom
sub
(bad)
loope
call
dec
or
outs
push
inc
xchg
sub
ja
and
fidivr
inc
adc
adc
sbb
je
mov
pop
xchg
sbb
test
pop
add
fidivr
jmp
jge
and
xchg
cmps
test
mov
xchg
sub
lds
and
aam
into
mov
daa
fstp
gs
ret
retf
and
ret
retf
pop
icebp
fmulp
call
int3
and
loope
mov
and
push
repz
inc
xchg
add
sti
jb
cmp
out
sub
stc
adc
test
and
test
push
stc
bound
mov
sub
imul
or
jmp
movs
xor
xchg
ins
loop
outs
mov
fiadd
out
pop
(bad)
pop
xor
inc
(bad)
mov
push
into
adc
jo
push
bnd
retf
call
adc
xor
mov
or
rcr
jmp
xor
fdiv
imul
ins
jo
dec
mov
or
xor
mov
cwde
cmps
in
adc
stc
mov
adc
in
jl
add
jnp
dec
xor
loope
lds
mov
rcl
xchg
pop
or
lea
xor
mov
inc
mov
scas
fldenv
xor
aaa
aaa
ret
jbe
jmp
dec
fucomip
and
mov
leave
shr
push
adc
sti
mov
call
push
push
pop
stc
xor
fsubr
ror
dec
inc
inc
mov
popf
and
push
shl
cmp
jnp
or
(bad)
js
(bad)
enter
push
scas
jge
xchg
cli
mov
fistp
out
and
cmp
jae
shl
cs
sbb
xor
mov
pop
fisub
add
lods
pop
inc
push
xchg
fist
outs
push
leave
mov
mov
das
jmp
into
pop
mov
or
inc
test
lahf
dec
test
xchg
(bad)
imul
adc
cmc
movs
mov
arpl
call
dec
fild
and
sbb
sub
mov
add
mov
mov
and
xlat
imul
dec
jmp
test
cmp
fcmovnbe
ret
xchg
or
mov
jne
push
pop
adc
mov
mov
inc
push
and
pop
mov
inc
xor
pop
rcl
adc
xor
fnsave
jmp
pop
dec
fstp
and
pop
mov
dec
dec
call
scas
add
sub
mov
sub
pop
test
adc
popa
push
les
add
add
pusha
ss
leave
push
xchg
adc
imul
stc
cmc
cli
inc
mov
push
dec
fistp
popa
push
in
inc
sbb
or
test
(bad)
mov
xlat
nop
addr16
xor
jl
gs
add
dec
aam
adc
mov
pop
ins
imul
jmp
add
aaa
dec
add
test
and
xor
iret
pop
xchg
pop
fldcw
pop
outs
xor
adc
cmp
mov
adc
mov
adc
stos
jnp
push
aas
mov
lea
icebp
lea
jl
xchg
push
xlat
mov
cmp
fs
out
push
outs
ret
push
retf
xchg
sahf
or
push
push
fist
xor
jno
aaa
dec
loop
sub
inc
nop
dec
cmp
retf
(bad)
movs
inc
enter
aad
dec
mov
repz
add
sub
into
enter
inc
pop
mov
mov
sahf
cld
pop
sahf
mov
mov
out
pop
cli
out
mov
data16
out
add
pop
jg
cmps
stc
out
pusha
cmp
stos
mov
aad
sbb
push
mov
xor
sbb
adc
repnz
dec
in
mov
(bad)
std
call
xchg
paddusb
int
stos
in
mov
ret
int
lods
pop
mov
mov
xchg
mov
ret
rcl
xor
(bad)
out
adc
cmp
out
out
mov
les
out
hlt
cld
sti
movs
pop
sahf
in
fist
mov
push
jmp
cmc
fwait
(bad)
mov
inc
sbb
add
aad
jbe
repnz
cmp
in
inc
ja
pop
movs
jb
in
test
jo
jae
xchg
enter
out
add
ins
bound
cld
xchg
add
adc
in
mov
add
and
imul
mov
push
je
arpl
cmp
cmp
mov
xchg
sbb
jo
int3
mov
sbb
mov
in
dec
push
cmp
movs
cmp
mov
imul
push
add
out
ret
fimul
in
cmp
out
pavgw
sahf
and
sbb
or
pop
add
and
add
jecxz
pusha
cmps
pop
cmp
adc
ja
test
fwait
ror
cmp
or
and
mov
xor
jnp
dec
add
fcmovu
push
add
xchg
dec
call
popf
push
mov
data16
add
push
(bad)
faddp
test
sbb
mov
push
xchg
xchg
mov
test
mov
xor
lock
gs
sbb
fist
ja
fnstcw
enter
sahf
cld
mov
push
dec
add
ret
push
adc
mov
shr
pop
mov
test
(bad)
inc
dec
imul
dec
dec
stos
sub
add
inc
push
ss
ret
or
and
hlt
jbe
(bad)
outs
sub
pop
dec
mov
mov
cmp
div
retf
outs
xchg
mov
lea
cmps
in
xchg
shr
ins
mov
fisub
and
(bad)
cmp
xor
outs
push
push
mov
push
inc
cmp
test
addr16
mov
push
jae
jbe
xor
xchg
mov
inc
bound
dec
nop
mov
inc
mov
adc
adc
mov
addr16
and
int
(bad)
inc
xlat
and
sahf
xlat
mov
punpckhwd
lea
jno
arpl
aaa
lahf
daa
lods
ficomp
and
outs
pop
ret
cld
out
dec
pusha
sub
mov
push
xchg
(bad)
jmp
jmp
or
or
ds
mov
pop
dec
sbb
dec
xchg
(bad)
adc
xchg
dec
pushf
lea
xor
mov
dec
imul
loop
ins
push
shl
(bad)
and
popf
pop
push
clc
shl
xlat
or
sbb
sbb
aad
aad
sbb
(bad)
sbb
or
mov
sub
jl
mov
push
and
enter
inc
imul
into
lods
sar
mov
call
jbe
push
aam
mov
push
mov
cmps
in
pop
ret
mov
bound
dec
scas
jp
(bad)
adc
pop
xor
mov
or
and
push
mov
sbb
stos
jo
enter
xor
stos
and
xor
loopne
xchg
adc
addr16
arpl
stos
push
dec
push
and
pop
mov
ins
pop
and
cmp
jo
mov
mov
gs
pop
jns
and
mov
xor
and
cmp
loope
test
loopne
gs
xchg
popa
repz
into
je
xor
retf
test
fucom
scas
imul
jae
push
xor
inc
fiadd
enter
js
inc
or
test
lock
add
or
sbb
lods
ja
(bad)
fucomip
sub
mov
pop
sub
lods
xor
in
paddw
repz
sti
jns
fist
cld
inc
scas
js
cmp
popf
addr16
add
mov
div
jb
addr16
je
xor
push
dec
sar
cdq
inc
push
call
and
fadd
loop
popf
or
add
addr16
mov
xor
jecxz
fs
test
mov
xchg
jecxz
xchg
daa
xor
(bad)
push
loop
jmp
or
(bad)
out
jg
dec
out
push
lahf
fild
mov
mov
adc
xor
sub
ss
icebp
adc
loop
das
pop
dec
or
and
xor
push
cmc
in
sbb
outs
in
cmp
rcr
dec
pop
mov
sbb
xor
mov
out
fcomp
sti
jno
push
popaw
xchg
push
push
xchg
add
mov
fwait
jns
jae
jge
pop
cs
ss
cmp
mov
cmp
outs
cwde
inc
xor
pusha
mov
inc
cmovs
and
clc
sbb
xchg
cmp
arpl
scas
mov
call
loopne
adc
jg
push
shr
xchg
jecxz
mov
arpl
test
hlt
inc
in
ins
pop
jmp
and
lods
scas
hlt
jo
retf
(bad)
push
push
and
aaa
or
(bad)
xchg
aaa
bnd
dec
mov
cmps
loope
push
mov
repz
loop
(bad)
xor
pusha
or
cmp
mov
sbb
adc
mov
inc
xchg
(bad)
xor
rol
mov
sub
icebp
inc
(bad)
jnp
dec
pusha
movs
test
ret
daa
jmp
or
sub
cmp
mov
push
sbb
cmps
iret
fwait
jecxz
xor
sbb
mov
cmps
mov
mov
jmp
jb
inc
enter
fadd
jmp
aas
mov
dec
iret
push
into
sahf
xchg
mov
aaa
xchg
jmp
loopne
adc
mov
test
cmp
or
ficom
stos
push
fiadd
(bad)
xor
push
in
ret
test
sbb
daa
popf
and
dec
mov
pop
adc
cmps
movs
mov
sbb
aam
jp
xchg
fsub
aad
mov
test
sar
std
xchg
and
dec
pushf
ja
test
sub
lock
ror
out
mov
push
aas
sbb
mov
jo
sbb
cmp
mov
aaa
popa
test
arpl
xor
out
sub
ret
(bad)
lods
inc
retf
fs
sbb
fist
mov
sbb
ja
(bad)
and
add
xchg
add
add
sbb
adc
sub
(bad)
jmp
or
mov
mov
jle
mov
adc
in
fdivr
mov
sub
nop
xchg
es
and
lahf
out
push
sub
push
jecxz
sub
adc
mov
sbb
mov
addr16
mov
fist
adc
hlt
icebp
pop
xchg
shl
sbb
mov
loope
xchg
sub
movs
aam
adc
dec
push
mov
sub
lock
push
pop
push
lea
cwde
nop
fisubr
sar
add
test
loope
retf
outs
je
dec
std
lods
jmp
test
sub
stc
push
and
add
cmp
mov
sub
pop
xor
mov
dec
mov
dec
aaa
adc
aam
mov
fprem1
pop
clc
jo
inc
xchg
ret
imul
add
bound
iret
xchg
mov
jb
add
adc
test
lea
or
imul
loop
addr16
jns
jmp
or
xchg
cmps
outs
add
jmp
xor
dec
inc
add
out
xor
push
sahf
inc
inc
hlt
imul
ror
mov
ins
mov
lds
cld
push
scas
js
sbb
mov
cmp
(bad)
or
ds
sbb
movs
aaa
stos
outs
jg
retf
cld
jp
imul
mov
in
out
dec
adc
ins
xor
inc
and
xor
das
retf
dec
jne
xor
inc
pop
popw
pop
in
sbb
xor
xchg
inc
cmp
pop
out
push
sub
in
call
jmp
rcr
lods
(bad)
add
fsubr
fst
xor
repz
sub
lds
xchg
inc
enter
ret
mov
or
inc
dec
hlt
loope
test
inc
test
push
jno
jae
xchg
or
rcr
shl
daa
fldlg2
sub
out
es
xor
mov
adc
outs
stos
into
mov
stc
pop
fdivr
aam
mov
sti
and
jo
jecxz
pop
jbe
pop
out
cmp
pop
mov
popf
cli
mov
popa
xchg
push
xchg
shl
sbb
call
xor
iret
mov
add
fwait
dec
test
inc
jo
shl
dec
and
jno
jne
mov
loope
jbe
sahf
add
cmp
cmps
call
pop
add
popf
test
retf
cs
into
(bad)
jge
mov
movs
dec
push
into
movs
xor
pusha
daa
sub
scas
push
cwde
push
adc
xchg
adc
ror
nop
sub
jo
dec
xchg
es
cs
es
pop
mov
xchg
fucomi
push
ins
push
aaa
fsubp
pusha
enter
addr16
sbb
cld
mov
loopne
inc
loop
add
imul
ror
dec
xor
nop
jmp
or
inc
mov
mov
cmps
aam
xor
movs
cmp
ret
sbb
xlat
jl
push
les
inc
jmp
xor
mov
mov
movs
and
outs
mov
mov
in
retf
(bad)
in
stos
mov
adc
add
mov
icebp
gs
std
cmp
inc
pop
sub
pop
(bad)
aam
cmp
std
mov
inc
mov
adc
in
(bad)
inc
jmp
pop
jae
fistp
ins
fisttp
add
in
sbb
loopne
dec
sub
mov
pop
mov
pusha
test
mov
cmc
mov
movs
inc
add
mov
or
mov
dec
ins
add
gs
lahf
xchg
push
sbb
sub
das
mov
(bad)
cs
mov
sub
(bad)
leave
cmp
ds
test
dec
and
lds
mov
fsubr
add
ret
mov
mov
inc
mov
and
mov
sahf
jb
pop
mov
sbb
jne
mov
jno
popa
js
outs
das
stos
leave
mov
mov
sbb
xchg
push
cmps
jmp
mov
mov
out
mov
rcr
adc
ret
int
adc
rcl
pop
shr
mov
xchg
ds
imul
dec
xlat
inc
mov
cdq
mov
push
inc
int
test
sahf
leave
mov
push
adc
(bad)
bound
add
sub
test
fs
or
fsubr
xor
sub
cmp
in
push
xchg
sbb
mov
push
cmp
cwde
and
or
outs
aaa
and
jmp
pushf
in
es
rcl
inc
hlt
mov
mov
call
cmp
jns
and
(bad)
dec
ja
sub
jle
xchg
sbb
fsub
ss
jno
out
ss
imul
daa
sbb
push
cmp
leave
pop
dec
jmp
adc
cmps
add
mov
jmp
(bad)
cmp
in
aas
out
ret
stc
xor
shl
cmp
lea
mov
in
pop
dec
ror
out
hlt
lods
pop
cld
and
jmp
loope
mov
cmc
std
loope
popf
mov
enter
cmp
dec
dec
test
and
jno
xchg
lock
and
lahf
or
(bad)
fsubp
xor
movs
popa
dec
inc
push
pop
loopne
fs
retf
fimul
dec
in
cmc
push
das
add
adc
jl
iret
addr16
jmp
push
fdivr
inc
and
out
pop
addr16
(bad)
sub
rcl
fisubr
scas
pop
pop
pop
enter
and
dec
repnz
adc
mov
cld
hlt
cmp
repz
push
(bad)
ss
mov
or
clc
test
rcl
out
stos
mov
jg
aaa
xor
dec
sub
xchg
xor
mov
fadd
xchg
movs
or
xchg
(bad)
dec
je
mov
nop
jle
jbe
or
neg
daa
push
mov
in
xchg
inc
xor
ror
mov
neg
popf
xor
add
or
or
pop
or
and
or
loopne
xlat
add
jmp
pop
cmps
call
push
sbb
jne
outs
mov
sbb
cdq
(bad)
ss
jmp
sbb
and
sub
movs
scas
imul
lods
jbe
cs
stos
or
xchg
(bad)
xchg
not
sub
and
pop
(bad)
retf
adc
inc
les
or
push
jbe
xor
mov
cli
xchg
jge
cwde
add
std
cmp
xchg
jae
dec
dec
(bad)
(bad)
or
add
outs
je
inc
cmp
jns
mov
inc
imul
mov
sti
pop
mov
mov
into
xchg
lock
(bad)
cmps
leave
adc
ret
push
clc
mov
loop
loopne
pop
mov
jbe
pop
mov
sbb
inc
aaa
outs
clc
sbb
ss
lods
and
pop
div
mov
in
scas
fnstenv
dec
mov
dec
or
sbb
mov
lods
mov
mov
nop
pop
fsub
jmp
idiv
or
cmps
shl
dec
dec
nop
add
mov
dec
rcr
sub
mov
test
scas
sbb
aad
add
mov
add
push
test
jp
aaa
adc
dec
xchg
scas
ret
aaa
jne
dec
mov
push
xor
jno
loope
push
mov
mov
cmc
cmp
sti
repnz
psraw
or
fidiv
aas
loop
sub
push
xor
scas
push
loopne
scas
pop
adc
adc
dec
jmp
lds
sbb
inc
inc
inc
jo
arpl
imul
pushf
xchg
rcr
mov
(bad)
jbe
(bad)
pop
xchg
jne
push
(bad)
xor
nop
imul
movs
mov
lods
test
jbe
in
pop
xor
mov
push
inc
dec
in
sti
mov
imul
(bad)
inc
mov
cs
add
cmp
scas
popa
shl
sti
mul
mov
repz
in
dec
pushf
mov
ja
nop
and
inc
movs
mov
test
dec
ret
push
cmp
and
loope
aad
sbb
rcr
xor
int
and
add
cmps
retf
or
in
cmp
jbe
jecxz
xlat
push
inc
sub
push
aas
inc
jmp
xor
pushf
jmp
jno
adc
jp
add
dec
sbb
dec
out
and
or
retf
xchg
ja
pop
cmp
call
mov
sub
or
cmp
sahf
outs
out
pushf
clc
cmp
mov
xchg
movs
inc
lods
das
cmp
pop
jbe
mov
pshufw
jecxz
loopne
add
sar
inc
out
push
pusha
loope
stos
sub
pop
push
scas
neg
mov
mov
popf
adc
and
mov
out
aaa
cmp
add
les
stos
and
stos
xchg
jp
pop
add
idiv
inc
push
in
pop
xchg
test
fadd
or
jg
mov
cs
mov
jno
cmps
or
xor
jge
lods
in
sub
data16
sbb
dec
fisub
outs
mov
and
pop
jae
out
fmul
stc
adc
push
mov
sbb
pop
adc
(bad)
jmp
inc
add
jae
sbb
out
out
scas
adc
(bad)
mov
sbb
cmp
rcl
cmps
xor
and
dec
or
nop
push
mov
fdiv
xchg
pop
dec
lds
mov
sbb
dec
mov
(bad)
inc
xchg
gs
stos
dec
or
les
cdq
xlat
test
dec
jge
je
dec
mov
sub
dec
mov
mov
cmp
je
pop
jne
gs
jb
xchg
jp
inc
adc
sbb
sbb
pop
clc
jbe
or
int3
pop
mov
dec
sti
pop
cld
mov
hlt
adc
add
pop
jbe
push
and
push
adc
pop
jnp
jno
test
aaa
jns
ret
fcomp
test
xor
(bad)
ficom
(bad)
imul
retf
jmp
sub
cmp
(bad)
pop
sub
push
mov
dec
mov
fst
mov
xlat
push
rcl
not
pop
les
popa
sbb
popa
(bad)
sbb
test
xor
add
push
cdq
add
cli
sub
div
rcl
cmp
sub
xchg
jl
dec
pop
mov
out
jecxz
call
or
loopne
dec
dec
adc
push
mov
cs
or
int3
adc
and
push
add
lahf
push
xchg
cmp
out
xchg
xchg
ja
daa
(bad)
or
sub
data16
dec
ficom
xchg
adc
mov
fdiv
cmp
push
lahf
xor
add
cli
sub
inc
and
sub
adc
rcl
push
nop
(bad)
inc
xor
cmp
js
sub
add
clc
xchg
(bad)
imul
aad
test
imul
lods
jl
sbb
loopne
mov
out
lea
add
rol
ret
popf
xor
not
lock
aad
dec
sub
ds
stos
push
mov
push
loop
les
test
xor
push
and
jno
inc
sbb
(bad)
mov
jmp
ds
pushf
sub
xor
mov
jp
pop
add
push
scas
push
dec
clc
cld
xor
sub
lahf
sbb
add
sbb
loope
dec
lahf
push
adc
daa
(bad)
call
icebp
pop
pop
dec
jl
ins
sbb
mov
add
pop
adc
or
add
in
fwait
psllq
int3
test
adc
jle
push
mov
(bad)
js
mov
adc
xor
mov
mov
jbe
jae
jecxz
sub
and
dec
and
mov
cdq
cmp
enter
and
sbb
stos
out
cld
sbb
enter
aas
and
add
push
dec
cmp
lahf
sub
xchg
rcr
sub
mov
mov
mov
outs
cmp
or
mov
sub
ds
(bad)
mov
fs
or
xchg
lahf
cmp
ds
rol
into
inc
fs
cwde
adc
dec
xchg
jno
mov
inc
push
jmp
cld
ret
xor
dec
or
mov
mov
cmc
sbb
cmp
loopne
or
repz
int
mov
sti
dec
and
es
xchg
cwde
xchg
aam
mov
xchg
cdq
ss
push
adc
jl
outs
push
fwait
fs
cmp
adc
cmp
xor
shl
data16
sub
(bad)
cmp
seta
jmp
jp
mov
cmp
faddp
push
ror
xor
loopne
pop
sbb
sahf
cli
pop
loopne
xchg
inc
loope
and
ror
mov
fwait
data16
nop
aad
xlat
adc
in
icebp
popa
jb
ret
xchg
jnp
cmp
jg
ja
mov
aaa
in
loope
mov
scas
out
daa
movs
sbb
inc
mov
test
cmps
out
cmps
add
xor
dec
fwait
mov
pop
mov
loop
push
push
shl
sub
aad
dec
test
mov
xchg
jno
out
adc
outs
pop
inc
lds
xor
lods
dec
push
cmp
das
mov
imul
(bad)
dec
sbb
xor
cmps
shl
xchg
inc
stos
fwait
(bad)
fnstcw
adc
lar
test
enter
or
sub
pop
loopne
dec
in
push
mov
or
iret
sub
and
(bad)
sahf
push
outs
jb
or
je
test
xchg
(bad)
rol
in
lock
mov
jbe
popf
inc
mov
xor
push
nop
sahf
aas
arpl
jnp
mov
sti
inc
std
in
popf
and
and
leave
sbb
clc
or
enter
inc
into
mov
adc
dec
sbb
iret
mov
or
ds
mov
cmps
pop
outs
or
dec
mov
(bad)
sbb
mov
inc
dec
or
push
shl
and
sbb
jns
sbb
in
adc
xor
add
or
outs
mov
scas
push
xor
es
sbb
lods
stc
call
ret
dec
sub
xchg
mov
lods
push
adc
jo
dec
xchg
(bad)
(bad)
sub
ja
es
test
mov
movs
mov
xor
aaa
imul
sbb
or
cmp
gs
jb
popa
jge
fcomp
dec
xchg
pop
pop
add
push
push
push
inc
push
jg
adc
or
ins
(bad)
adc
push
ror
test
and
push
pop
fcomp
push
push
pop
mov
cs
add
and
mov
mov
push
add
(bad)
and
(bad)
rol
jmp
mov
movs
dec
sub
jp
mov
inc
into
add
fcmovbe
iret
inc
adc
out
pop
sub
xchg
in
mov
(bad)
ja
mov
xor
mov
pop
xor
jo
push
shl
shl
aam
xchg
or
adc
xor
push
dec
dec
in
sbb
stc
mov
repnz
cwde
xlat
mov
stos
int
scas
push
or
dec
fdiv
hlt
icebp
mov
cmps
xchg
popa
add
pop
imul
adc
adc
gs
stos
into
rcr
outs
adc
stc
scas
mov
imul
add
dec
mov
mov
mov
xchg
adc
int
mov
sti
fcomi
cmps
pushf
push
xor
xchg
lea
or
dec
adc
std
cmps
loopne
mov
mov
cdq
xor
outs
add
add
inc
shr
xchg
test
icebp
and
push
int
movs
or
jge
mov
dec
mov
dec
xlat
sub
adc
cmp
fdiv
lahf
cmp
or
sbb
or
sbb
pop
jle
adc
repz
xor
fist
sbb
les
push
repnz
pop
push
ffree
stos
push
bound
and
pop
adc
in
js
mov
add
fadd
outs
or
pop
das
aam
mov
js
add
in
rcr
loop
call
imul
cs
in
ret
cmp
adc
mov
and
sbb
jo
in
mov
loopne
and
and
sbb
retf
push
sub
cmp
and
add
and
adc
or
ret
test
sar
not
popa
mov
dec
aaa
mov
sub
lea
mov
(bad)
idiv
cld
cmp
pop
xor
push
es
or
loope
dec
adc
push
sub
push
psraw
lods
fadd
jne
gs
and
std
jo
and
es
mov
jb
sub
jno
xlat
div
rcr
xchg
lock
stos
ins
mov
inc
and
scas
stc
and
pushf
jl
leave
sub
out
jge
add
mov
in
daa
mov
jnp
push
lea
int3
repz
pushf
addr16
inc
(bad)
xchg
cmp
or
push
mov
aaa
mov
movs
ret
imul
sub
add
shr
fisubr
jmp
cs
ja
add
test
in
lea
inc
sub
cmp
cmp
jbe
push
es
or
pop
mov
and
pop
sbb
mul
popa
cwde
push
icebp
jg
enter
jae
mov
pop
nop
lods
mov
pop
push
inc
jge
(bad)
in
xchg
or
mov
daa
stc
loopne
scas
mov
mov
(bad)
xor
cmp
xchg
scas
sub
push
mov
push
pop
mov
mov
inc
and
stos
lods
mov
sbb
mov
aam
push
xchg
jmp
sbb
cmp
aad
loopne
and
xor
out
in
inc
jle
jbe
sub
dec
pop
add
mov
add
push
inc
or
enter
jnp
pop
js
loope
add
pop
pop
mov
jo
cs
jbe
adc
mov
rcr
jp
pusha
test
data16
add
out
push
imul
stc
lea
push
xlat
mov
int3
xor
outs
jecxz
test
shr
retf
pop
movs
xor
in
cli
cmp
jmp
je
out
call
mov
mov
xchg
repz
xor
and
cs
mov
sub
test
or
(bad)
loope
in
jg
sbb
fadd
mov
push
cmps
aas
xchg
jbe
fwait
add
call
adc
jmp
xchg
mov
mov
pop
hlt
sbb
cwde
call
jne
sbb
mov
loop
movs
and
sbb
mov
adc
stos
hlt
sub
adc
(bad)
jno
sbb
int
inc
cmp
pop
movs
or
xor
shl
int
sti
ret
repnz
push
aam
fxch
jg
jmp
cmps
push
xlat
push
cmp
mov
iret
xor
dec
and
adc
out
jne
int
fmul
nop
retf
push
cwde
xor
lds
adc
stos
test
push
out
xchg
pop
into
mov
xchg
adc
pop
imul
loopne
ds
test
ror
es
jno
jecxz
jae
sub
and
call
aam
xor
dec
lahf
test
sub
sbb
mov
pushf
stos
push
sbb
div
push
mov
push
ret
ss
data16
jp
push
int3
xor
push
sub
call
shr
ja
es
sar
xor
call
and
fmul
jns
test
mov
dec
pop
pop
lds
scas
mov
jae
mov
repnz
xchg
cmp
mov
jl
push
add
ficom
or
cli
inc
mov
adc
jmp
mov
adc
test
stc
shl
dec
vfmsubadd231pd
jnp
out
fidiv
cmc
enter
xchg
fimul
int
jns
hlt
pop
js
pop
outs
jbe
fisttp
dec
mov
imul
xchg
jmp
(bad)
sahf
ret
gs
mov
or
bound
xchg
aam
pop
ins
pop
ins
rcl
fdivr
add
adc
dec
fmul
add
pop
pop
fsub
cmp
retf
rcl
mov
pop
pop
dec
dec
test
jg
gs
or
or
imul
cmp
cmp
jo
fld
xor
sub
inc
cld
dec
pop
push
dec
push
and
xchg
lahf
mov
push
stc
jae
mov
mov
and
call
mov
sub
sub
rol
popa
leave
cld
cmps
clc
(bad)
pushf
or
in
pop
add
push
xchg
adc
popf
mov
and
out
inc
pushf
jo
aad
push
cmp
out
in
sbb
outs
imul
inc
test
sbb
jne
mov
add
int
mov
push
mov
maskmovq
js
(bad)
push
in
test
jb
lods
push
pop
cmp
sbb
xchg
icebp
jbe
dec
mov
mov
jbe
sub
cmp
push
shl
pop
lods
add
inc
push
pusha
(bad)
xchg
hlt
test
jno
pop
jnp
int
mov
loope
xor
jle
es
rcr
loopne
stos
xlat
sub
fbld
inc
and
adc
jae
mov
aaa
or
stc
loop
inc
cmp
cmp
xlat
aad
push
retf
fld
ret
into
mov
push
or
mov
aam
iret
cmps
in
ja
and
adc
shl
addr16
inc
jmp
dec
test
xor
idiv
add
fcmovnu
icebp
out
iret
ret
shl
fwait
xor
xchg
mov
ins
adc
inc
xor
jmp
cdq
dec
scas
mov
jb
mov
call
xchg
mov
inc
das
in
inc
iret
or
ins
mov
aaa
test
add
mov
jbe
mov
cdq
sub
imul
adc
sub
(bad)
adc
das
adc
push
or
adc
fwait
ror
push
icebp
scas
dec
inc
mov
sbb
mov
lods
cmp
dec
mov
push
cwde
mov
push
js
adc
pushf
cdq
push
xor
jnp
mov
es
(bad)
sub
pusha
test
dec
mov
cdq
data16
call
sub
imul
pop
bound
add
jmp
xor
in
inc
je
cmps
add
jg
add
pop
dec
xchg
movs
adc
ret
fwait
or
ror
dec
mov
jnp
jp
ds
inc
scas
(bad)
lods
ins
outs
sbb
ficomp
push
cmp
ret
out
fadd
in
rol
out
lahf
jnp
out
push
mov
push
pop
aad
inc
cli
sub
fdiv
pop
and
repz
adc
hlt
dec
data16
(bad)
fld
cmp
jg
adc
push
aaa
or
repnz
pushf
and
sub
sub
xor
jno
or
ss
aam
inc
mov
and
scas
lea
push
ja
loope
or
out
inc
imul
test
lods
mov
xor
ficom
neg
ror
and
cmp
jle
stos
mov
sbb
enter
lods
mov
in
mov
or
pop
inc
and
cmc
dec
(bad)
add
cmp
call
add
add
mov
stos
add
sbb
stc
mov
je
les
shl
dec
cdq
aad
add
xchg
mov
mov
jle
es
sbb
push
or
movs
sar
stos
loopne
sar
into
inc
aaa
pop
dec
pop
inc
pop
push
(bad)
in
mov
inc
or
xor
xor
push
iret
pmullw
sub
xchg
call
pop
mov
mov
or
mul
jbe
jns
retf
aad
sti
cmp
push
jmp
and
inc
dec
xchg
sbb
jo
jmp
cmp
outs
dec
imul
sbb
test
pop
sub
test
ja
outs
out
jne
jo
jbe
icebp
ret
fsubr
jmp
bnd
rol
sub
cmp
rcl
jp
ins
test
or
in
je
mov
push
bound
and
add
dec
push
sti
xor
sbb
pop
or
sub
lock
lods
dec
add
add
ret
retf
and
adc
popf
pop
shr
call
jbe
rcr
mov
in
push
(bad)
cmc
ror
ror
dec
mov
adc
cmp
fsubr
mov
mov
fnstsw
adc
xor
cmps
pop
adc
and
push
gs
scas
lods
or
mov
ror
pop
arpl
lahf
out
sbb
pop
ins
outs
stos
in
not
neg
or
sar
cwde
adc
cmps
fsub
and
push
push
mov
and
xchg
int
jmp
cmp
push
cmp
dec
add
fsincos
(bad)
mov
xchg
sti
cld
in
pushf
inc
mov
pusha
adc
or
ror
iret
popa
mov
stc
int3
mov
pop
adc
push
sbb
scas
sbb
sub
jge
jecxz
add
jge
loopne
test
fwait
adc
outs
push
pop
jns
lds
ror
jne
or
loope
pop
mov
xchg
std
test
jno
xor
into
mov
cmc
out
aam
fild
(bad)
jg
or
push
xchg
dec
pop
dec
push
lds
in
cwde
mov
cwde
mov
mov
jns
inc
popf
je
cld
sbb
pusha
aaa
mov
mov
mov
dec
cmp
clc
mov
xor
xor
daa
test
pop
cs
loop
xchg
outs
jge
jno
out
cli
cdq
mov
gs
dec
inc
in
mov
hlt
dec
ins
nop
push
int3
jmp
xor
icebp
(bad)
stos
imul
sar
(bad)
cli
stos
push
adc
popa
movs
pusha
mov
xchg
xchg
imul
out
push
xchg
stos
rol
add
nop
(bad)
scas
mov
xor
sub
ja
fimul
pusha
push
je
cmp
mov
pop
cmp
fist
mov
cmc
add
dec
jg
jbe
xchg
jg
cmp
imul
push
xchg
add
test
xor
or
cmp
fstp
pop
mov
adc
push
je
cmp
push
test
lods
(bad)
jmp
fwait
pop
cmp
aaa
cld
rep
mov
sbb
jg
xchg
and
hlt
into
out
jle
fild
out
fcom
inc
pop
pushf
shr
inc
in
sbb
or
call
jbe
cmp
push
lea
movd
dec
push
outs
push
lds
fcom
stc
enter
stos
push
push
enter
js
ins
cmp
and
xor
add
and
or
ror
sbb
xchg
sub
dec
int3
jnp
icebp
jno
push
adc
cmp
cli
(bad)
daa
icebp
push
rcl
(bad)
loopne
and
dec
aaa
test
cdq
imul
(bad)
in
int
push
fwait
into
rol
outs
inc
pop
dec
adc
or
ins
fadd
sbb
aas
repz
inc
mov
mov
jmp
pop
push
or
cmp
arpl
test
loope
ror
adc
lods
mov
enter
jecxz
jle
retf
xchg
dec
push
add
pop
mov
or
push
lock
add
stos
pop
call
vpsllq
mov
stos
xchg
add
mov
dec
mov
out
xor
enter
and
adc
ret
ficom
scas
mov
or
in
dec
jle
cdq
mov
stos
pushf
push
push
or
xchg
aad
mov
repz
add
sub
jg
iret
or
dec
xor
cmp
sti
and
in
idiv
dec
mul
lods
xchg
shr
fdivr
sahf
xchg
xchg
sub
sub
cmpps
cmp
mov
cmp
dec
fwait
cmp
ror
ja
pop
push
push
stos
repnz
xor
pop
push
pop
sub
mov
mov
cwde
cmp
or
sub
dec
cmp
movs
idiv
fldcw
push
cmp
sahf
push
clc
div
test
mov
popa
xchg
xchg
les
scas
or
outs
popf
push
repz
jg
test
push
fld
mov
push
fnstenv
sub
outs
rol
sti
cmp
popa
or
call
leave
jbe
scas
sbb
(bad)
mov
mov
mov
inc
xor
adc
mov
jb
xchg
popf
jb
adc
jmp
(bad)
adc
pushf
sub
mov
cmp
or
mov
daa
pusha
pop
sub
bswap
or
add
mov
push
(bad)
shr
lds
arpl
dec
xor
cwde
mov
mov
jmp
cmp
xchg
push
xlat
and
lods
mov
gs
rcr
mov
fidivr
dec
rol
sbb
xor
jge
jmp
jp
cmp
mov
cmp
lahf
and
pop
test
psadbw
loope
pop
jmp
mov
sbb
push
inc
outs
scas
xor
dec
fistp
dec
nop
lock
pop
xor
sub
adc
(bad)
mov
lods
xchg
adc
lock
call
das
idiv
push
jmp
lock
data16
jne
hlt
popf
inc
add
or
out
and
dec
inc
mov
mov
add
jae
dec
aad
movs
pop
retf
pop
(bad)
cmp
sub
pop
inc
jp
fwait
in
push
mov
adc
scas
mov
loope
mov
cmp
sbb
out
shr
lds
loopne
push
mov
xor
sbb
daa
imul
fcom
inc
sbb
mov
lock
xchg
sbb
popa
mov
cdq
ret
jp
and
mov
sbb
dec
sub
ficom
add
call
push
(bad)
scas
movs
mov
mov
addr16
cs
data16
pop
ja
xchg
and
mov
mov
mov
push
sub
pop
les
xor
call
mov
fcomp
xchg
mov
pop
arpl
cmps
or
mov
ds
mov
jecxz
mov
sub
jns
mov
popf
pop
in
cmp
mov
mov
gs
mov
push
mov
jmp
mov
je
sub
push
imul
xchg
int
(bad)
nop
enter
aad
adc
jno
aad
leave
pop
or
loopne
cmp
fmul
mov
xor
test
popa
pusha
int
(bad)
xlat
push
inc
inc
ins
xlat
and
fisubr
xor
shl
cmps
add
xor
xchg
inc
(bad)
jmp
arpl
rcl
pop
mov
loop
in
and
(bad)
mov
retf
imul
add
inc
movs
retf
ins
adc
pop
lods
out
pop
rol
ins
ss
xchg
ja
mov
jne
cmp
shr
mov
nop
xor
push
rcr
mov
sbb
mov
cmp
lods
mov
popf
mov
popf
das
(bad)
icebp
push
test
cmp
fstp
sar
(bad)
lds
xchg
and
cli
cli
sub
mov
push
sbb
add
(bad)
ins
push
sti
lds
icebp
sahf
icebp
(bad)
pop
xchg
add
mov
jge
out
mov
fisttp
sets
mov
sbb
aam
xchg
mov
outs
fwait
inc
add
xor
daa
mov
add
cmp
jmp
inc
ficom
inc
loope
adc
push
push
or
push
dec
fdivr
mov
mov
push
mov
adc
dec
arpl
lock
test
sub
pop
aam
cld
loopne
daa
neg
sub
mov
ins
and
xor
mov
or
mov
stos
jb
dec
xchg
(bad)
and
ins
inc
mov
xchg
aam
sar
dec
fst
(bad)
sbb
jecxz
add
cmp
es
push
cmc
call
fs
mov
pushf
loop
pop
pop
cwde
dec
mov
(bad)
fisubr
hlt
leave
sahf
cmc
xor
jge
stos
jp
inc
push
jns
inc
ins
jle
pop
jno
fwait
loopne
iret
call
dec
mov
pop
jecxz
xor
xchg
leave
or
(bad)
nop
mov
pusha
jg
pop
idiv
ficomp
jecxz
xor
xor
jl
jb
leave
fcom
fmul
call
movs
cld
mov
call
sub
sbb
push
cmp
push
jmp
cs
enter
rol
je
aam
lds
pop
add
xlat
cld
in
stos
pusha
xchg
pushf
loop
test
je
or
mov
dec
xchg
jp
aam
pop
aad
cmps
pusha
pop
nop
out
xlat
enter
jne
retf
xor
sbb
mov
not
pusha
mov
and
jnp
jle
loopne
mov
or
outs
dec
xor
in
push
cmp
lds
mov
jne
je
push
pop
jb
sbb
fmul
daa
aaa
sbb
fmul
movsx
adc
mov
je
add
cmp
les
aaa
xor
leave
inc
cmp
fistp
xchg
jl
ret
cmps
push
outs
inc
mov
cmp
int
stos
mov
mov
popa
xor
inc
pop
dec
pop
sub
pop
xchg
iret
cmp
cli
mov
mov
jno
arpl
add
addr16
sub
test
imul
xchg
ja
ins
rcr
sbb
push
add
int3
ja
pop
push
rep
inc
xor
push
ds
cmp
aad
mov
pop
mov
fdiv
mov
or
jae
hlt
add
push
out
inc
mul
jmp
clc
xlat
shr
rol
adc
mov
js
adc
out
fstp
xchg
shl
fwait
retf
fs
xchg
adc
ins
pop
rcr
das
mov
repz
dec
push
daa
cmp
add
add
scas
jne
mov
cmps
and
outs
or
mov
pop
and
and
pop
mov
cmp
aas
add
stc
sar
js
daa
push
jle
popf
(bad)
iret
out
sbb
in
daa
inc
test
aaa
mov
loop
fs
adc
adc
ret
out
imul
sbb
mov
jmp
aas
mov
adc
or
mov
test
(bad)
ins
test
out
mov
mov
pop
das
jmp
popa
dec
test
cmp
mov
nop
push
mov
sbb
jb
(bad)
pop
xchg
adc
jns
outs
popf
xor
test
stos
lods
pop
cdq
sub
retf
lock
jle
push
aaa
test
mov
lahf
add
fld
xchg
dec
clc
adc
cdq
rol
jbe
dec
add
pop
arpl
in
cmc
int3
push
cmps
(bad)
xchg
js
jbe
and
inc
into
data16
jmp
sbb
xchg
rcl
(bad)
(bad)
xchg
js
cmps
and
mov
lods
mov
inc
or
cmp
add
cmp
jmp
not
xchg
push
fidivr
jecxz
sub
aad
shr
imul
movs
or
lods
test
icebp
or
xor
test
dec
sub
sbb
fistp
in
fwait
into
in
jb
push
mov
not
jno
(bad)
lock
jnp
int3
mov
sbb
popf
or
mov
ins
ret
ret
xor
sub
xchg
fld
push
adc
xor
cmp
stos
arpl
fcmovu
sub
mov
leave
clc
xchg
mov
or
and
fstp
mov
cmps
movs
fwait
in
xlat
xor
clc
dec
fisub
dec
add
or
test
shl
mov
jne
shl
arpl
push
sub
and
fcomp
xchg
push
xor
cdq
dec
rol
jb
pop
pushf
cmp
hlt
loopne
push
das
and
es
shr
xchg
xor
int
stos
hlt
ds
jg
iret
nop
dec
cmp
mov
out
rcr
nop
ja
fimul
les
loop
sbb
or
mov
xchg
loope
pop
loope
pop
sbb
in
xchg
sub
aaa
xor
pop
add
lds
xchg
xor
mov
pop
out
add
out
(bad)
lods
mov
push
jmp
lahf
fdivrp
mov
xchg
xchg
in
fdiv
shr
jns
xchg
pop
(bad)
xchg
mov
xchg
scas
push
pushf
and
cmps
jne
inc
hlt
mov
inc
pop
icebp
sbb
imul
nop
mov
gs
shl
sahf
jp
mov
lods
call
mov
sub
cmps
js
dec
fdiv
xor
jmp
add
mov
push
push
loope
cwde
dec
sbb
cmp
sbb
adc
mov
xor
repnz
ds
sub
ror
inc
jp
outs
sar
sti
(bad)
lods
cdq
jns
mov
stos
test
fmul
fistp
or
fistp
mov
aad
frstor
fsincos
pop
jle
mov
clc
mov
inc
push
jo
dec
inc
stos
das
mov
pop
mov
mov
ror
(bad)
call
hlt
mov
dec
lock
mov
iret
pop
(bad)
pcmpgtb
sbb
in
leave
xchg
dec
stc
(bad)
mov
sub
imul
hlt
mov
sti
mov
outs
iret
fdivr
into
mov
cmp
repz
adc
cmp
xor
ret
icebp
mov
push
cmc
scas
sbb
mov
ja
xor
pop
push
jbe
inc
sub
adc
add
dec
ret
out
xor
xchg
into
(bad)
push
xor
mov
js
ja
push
rcl
into
mov
mov
mov
cmc
pop
mov
ins
mov
sub
lods
push
lahf
xchg
adc
scas
sub
sub
movs
scas
or
imul
in
aas
fidiv
arpl
or
dec
mov
aaa
cmp
mov
bound
cdq
ds
cmps
xchg
jb
cmp
aad
jmp
test
xchg
outs
popf
das
mov
sbb
add
add
ja
and
repnz
test
mov
sub
out
and
add
rcl
jnp
shl
iret
pop
jmp
dec
sub
and
ins
pop
jnp
aam
cld
not
je
jnp
mov
sbb
lahf
mov
stos
enter
lahf
sbb
push
add
out
cmp
mov
mov
aaa
push
nop
cld
nop
dec
jecxz
ret
sub
push
pop
mov
scas
jp
jmp
xor
xchg
dec
mov
js
fisub
sub
unpckhps
xlat
icebp
bnd
or
test
and
out
cmp
dec
ror
in
xor
xor
inc
scas
mul
shr
mov
es
aam
cmp
sbb
in
inc
push
jg
les
jno
mov
shr
sub
popa
out
test
add
mov
inc
retf
test
and
sub
xlat
addr16
enter
and
fmul
stos
jnp
pop
add
(bad)
mov
data16
addr16
add
xlat
adc
fstp
mov
aad
out
rcr
push
cdq
icebp
push
loope
stc
mov
push
test
fwait
out
hlt
loop
mov
push
call
add
cmps
xor
mov
ins
adc
add
sbb
or
in
pop
outs
aaa
lea
adc
push
dec
mov
xchg
ret
je
mov
mov
dec
jmp
imul
xor
jge
adc
outs
aas
cmp
mov
sbb
ss
retf
mov
ds
out
xor
aas
fmul
xlat
std
bound
xor
fnsave
call
inc
xchg
lahf
mov
mov
ins
xchg
sub
sub
into
data16
cs
dec
mov
or
out
pop
push
add
push
pop
xchg
pop
(bad)
js
and
inc
lods
xor
arpl
icebp
cmc
pushf
dec
div
cld
sar
stos
jns
into
sub
cmp
cmp
mov
push
xlat
fcmovb
iret
mov
pushf
int
loope
mov
pop
cmp
ficomp
inc
ret
xchg
test
inc
neg
xchg
frstor
sbb
xchg
ret
inc
dec
mov
sbb
(bad)
nop
lea
les
aas
inc
dec
dec
call
test
cmp
jmp
add
imul
icebp
sahf
sub
pushf
push
std
add
fisubr
int
imul
add
(bad)
xor
sbb
pushf
js
mov
leave
mov
mov
push
arpl
cmp
or
mov
mov
pop
xchg
push
cmp
mov
mov
mov
fisttp
jae
cmp
mov
mov
cmps
add
pop
(bad)
mul
out
repz
mov
scas
aas
test
scas
or
outs
seta
iret
retf
int3
mov
cmps
and
fs
add
(bad)
sbb
in
inc
xor
ins
out
mov
fdivr
xchg
test
adc
sar
ds
pushf
push
inc
push
test
movs
test
jo
(bad)
mov
inc
std
sahf
ficomp
test
retf
addr16
adc
les
lods
push
retf
rol
lea
lea
xchg
inc
adc
dec
fldcw
jae
xchg
xchg
jne
or
fisttp
les
add
and
bound
mov
mov
ss
push
sar
xor
push
call
inc
cs
lahf
fdivrp
in
imul
nop
in
bound
and
aam
rcl
xchg
scas
pop
mov
imul
(bad)
fstp
in
jns
rcr
out
mov
icebp
add
adc
scas
xor
ins
xlat
push
and
add
cli
fcomp
pop
xchg
cmp
outs
jbe
jns
push
add
stc
pop
xor
xor
call
dec
jmp
add
cmp
fsubr
(bad)
mov
mov
mov
stos
fcmove
fidivr
jnp
stc
ds
adc
pushf
mov
enter
inc
shr
icebp
or
clc
add
aas
(bad)
(bad)
repz
mov
push
int
hlt
jb
mov
cli
retf
dec
leave
mov
outs
xchg
imul
das
cli
xor
or
adc
aaa
out
push
xor
or
xor
add
call
je
or
fsubr
push
outs
mov
mov
(bad)
and
gs
cld
push
int3
pop
addr16
les
mov
int3
outs
test
jb
ins
mov
pop
cmp
jg
xchg
inc
jno
xor
shr
inc
cs
mov
jo
jge
ins
js
sti
(bad)
dec
mov
fisttp
(bad)
xchg
(bad)
fcmovb
ins
xchg
pop
lods
(bad)
xchg
adc
xchg
xchg
fisub
jp
ins
mov
cmp
nop
in
ret
pop
jnp
pop
stos
xchg
movs
clc
and
xchg
mov
adc
mov
xor
dec
push
pop
mov
mov
test
xor
dec
cmp
xor
xchg
pop
into
xor
mov
les
inc
sub
mov
cdq
jae
add
(bad)
retf
nop
retf
retf
loopne
push
xor
jnp
or
add
or
es
jmp
add
movs
ror
sub
mov
or
dec
inc
fadd
and
and
div
adc
sahf
jmp
lods
(bad)
hlt
loopne
cdq
pushf
pop
(bad)
cdq
sbb
das
mov
sub
retf
adc
mov
jmp
mov
stos
or
xchg
and
sti
leave
lods
add
jb
inc
loopne
mov
int
add
jb
sub
test
gs
les
pushf
mov
dec
pop
cmp
sahf
dec
lds
push
dec
movs
ret
das
or
inc
cmp
mov
jns
mov
sbb
and
lods
inc
add
movs
jo
jo
ds
jno
mov
add
mov
mov
adc
mov
add
ds
popf
mov
popa
pusha
jmp
push
loop
push
xor
test
dec
lea
ins
cwde
push
xor
xor
mov
aam
retf
sub
daa
pop
mov
pop
pop
adc
adc
xchg
xchg
pushf
or
xor
push
loope
mov
rcl
xor
dec
or
call
out
xlat
push
pusha
data16
dec
stos
retf
cmovb
mov
retf
mov
mov
inc
shr
sub
mov
out
or
loope
xor
mov
mov
fist
std
aaa
ror
and
xchg
adc
pop
cmp
add
mov
jp
mov
xchg
xor
mov
in
jae
mov
loopne
or
cmp
xlat
add
or
add
sub
sbb
test
aaa
into
aas
in
add
(bad)
sbb
mov
jmp
jmp
ds
jno
into
sbb
shl
dec
adc
not
shl
and
push
adc
or
dec
xor
sbb
std
rol
or
push
(bad)
fadd
aad
(bad)
push
aas
es
adc
ds
adc
mov
es
std
adc
cmp
jmp
adc
je
sbb
push
adc
push
mov
mov
nop
mov
dec
jmp
jecxz
mov
ss
pop
test
and
into
(bad)
cmps
mov
popa
cmp
test
inc
stos
dec
mov
fld
clc
dec
adc
inc
mov
pop
jge
xchg
inc
dec
jl
add
mov
sar
ins
call
sbb
or
push
je
cwde
bnd
leave
xchg
jmp
fcom
leave
push
sti
dec
jg
lea
scas
mov
or
push
in
std
sbb
jp
popa
mov
jp
push
sub
cmps
pushf
jne
pop
cmp
rol
adc
add
sub
std
gs
push
aas
adc
ja
inc
push
and
and
sbb
imul
ror
test
sahf
jbe
push
int3
fisttp
sub
cmp
(bad)
movs
leave
rol
mov
inc
xchg
movs
retf
xor
adc
in
test
inc
(bad)
mov
push
jbe
mov
lds
xor
push
das
jmp
pop
fistp
out
cmp
ret
jns
cmp
inc
mov
popf
dec
outs
sub
call
sbb
sub
inc
pop
and
je
add
push
cmc
sti
stos
neg
dec
xor
clc
(bad)
(bad)
sar
fstp
pop
cmp
pop
mov
repz
enter
pop
pop
jns
pop
adc
lods
daa
dec
push
pop
sbb
popf
scas
sbb
cmp
mov
inc
fdiv
inc
xlat
adc
movs
cs
jmp
shr
and
and
push
jnp
shl
mov
fwait
mov
push
xor
lods
ins
pop
fstp
in
mov
inc
cdq
adc
and
std
mov
xor
dec
cmp
push
fisttp
outs
mov
push
frstor
js
xor
sub
mov
shl
adc
mov
xor
fidivr
mov
inc
inc
cmp
clc
ret
retf
adc
enter
xor
int
inc
xor
(bad)
cmp
gs
sub
dec
in
test
test
pop
(bad)
and
popf
sbb
and
push
and
mov
test
pusha
xchg
mov
aad
repz
jmp
dec
mov
xchg
nop
rcr
add
sbb
mov
mov
add
movs
add
mov
jno
pop
dec
out
or
sub
mov
push
push
je
test
xor
jp
call
jl
jno
mov
jb
loop
push
repz
pop
mov
(bad)
xchg
and
jg
(bad)
push
lods
or
das
inc
jne
sar
jnp
inc
push
sbb
jo
pop
ficom
outs
pop
in
mov
or
and
mov
push
out
pop
and
inc
adc
inc
push
and
out
mov
sub
inc
dec
cwde
fldcw
dec
xchg
fadd
gs
movs
mov
xor
cmc
jns
inc
mov
pop
jg
mov
popa
cmps
outs
pop
arpl
push
jmp
inc
jle
or
push
mov
and
ss
push
dec
inc
mov
div
pop
out
out
pop
mov
xchg
pmaddwd
fisub
call
pop
loopne
aaa
xor
stos
mov
fisub
push
sbb
adc
and
lods
les
pop
fiadd
lds
cmp
ret
sub
ret
sbb
pusha
dec
mov
push
pop
push
mov
lods
retf
mov
jle
add
sub
ins
sub
pop
gs
pop
or
fidiv
pop
or
inc
nop
xor
(bad)
push
std
daa
jmp
or
add
push
pop
test
mov
pop
ficom
jnp
mov
dec
popa
mov
xor
or
mov
adc
add
(bad)
int3
jp
jno
into
sar
leave
dec
xor
mov
mov
outs
cli
and
jo
gs
xchg
add
lods
mov
enter
jp
mov
jo
push
outs
scas
stos
push
cdq
or
enter
or
pusha
idiv
mov
dec
out
push
xchg
icebp
int3
scas
aad
aam
mov
aam
push
xlat
dec
jecxz
movs
sub
sbb
cld
ror
jae
mov
out
pop
jle
hlt
cmp
int3
jle
daa
mov
js
rcr
add
shl
sub
ret
ss
clc
scas
ret
nop
inc
test
fild
iret
lock
xor
imul
cmp
adc
mov
nop
dec
(bad)
dec
in
cmp
jg
popa
mov
dec
cmp
outs
popf
mov
mov
add
mov
in
cdq
jb
cmps
and
mov
popa
mov
std
shl
push
js
adc
mov
call
call
repz
pop
xchg
in
lock
push
cs
test
xor
xchg
xchg
or
lds
pop
std
and
jle
pop
hlt
stos
xchg
push
add
cmp
xlat
sub
mov
sub
(bad)
stc
(bad)
arpl
int
fiadd
outs
push
in
xchg
sbb
jl
add
(bad)
out
rcl
mov
pushf
jns
mov
mov
retf
call
bound
cmp
div
xchg
add
loope
into
inc
mov
xor
movs
xchg
xor
dec
xchg
fcompp
adc
mov
cmps
call
add
mov
mov
das
fldcw
jno
rcr
mov
repz
clc
sbb
mov
dec
fidiv
push
mov
pop
jb
pop
jno
mov
sbb
and
psubw
test
loope
add
dec
ret
inc
xor
mov
jae
and
xchg
ja
xor
mov
cmps
pop
sub
adc
pop
or
test
fidivr
adc
sar
jmp
or
or
mov
loopne
(bad)
cmp
or
lds
(bad)
xchg
mov
popa
jbe
icebp
ja
jmp
div
shl
inc
out
cdq
or
or
xchg
jecxz
scas
mov
dec
sub
in
add
jnp
and
cwde
sbb
ret
shl
dec
daa
nop
adc
jmp
cli
xchg
jbe
sbb
mov
jle
mov
add
cmps
push
push
push
mov
or
mul
xchg
fadd
rcr
sub
arpl
lea
inc
(bad)
pusha
adc
outs
enter
iret
or
test
repnz
and
test
ins
pop
add
or
cmp
(bad)
sub
sar
xor
lds
loope
test
xchg
dec
mov
cmp
xchg
xor
ror
mov
out
std
cmps
rcl
mov
(bad)
(bad)
ror
repz
aad
or
or
hlt
outs
iret
(bad)
out
mov
arpl
daa
scas
sub
pop
hlt
xor
icebp
jb
int
mov
xchg
ret
in
dec
add
xabort
cmp
stos
clc
mov
fldenv
sbb
inc
sbb
div
ret
imul
loope
push
jecxz
pushf
lods
in
pop
sub
or
mov
push
push
fbstp
arpl
ins
sub
stos
pop
les
jge
push
xchg
inc
cmp
adc
inc
mov
and
test
sar
mov
cmps
retf
inc
pop
(bad)
cld
adc
in
shl
call
add
dec
sub
pop
push
mov
outs
inc
mul
lahf
push
push
shl
or
pop
lods
repnz
or
test
sub
or
ret
dec
dec
int3
movs
in
xor
sub
mov
cs
cdq
push
iret
xor
inc
cld
repnz
ficom
pop
call
popa
cwde
lea
test
popa
cmp
mov
(bad)
mov
test
ret
dec
nop
xor
test
cmp
data16
(bad)
xor
inc
not
into
xchg
cmp
aas
sbb
stos
sbb
fmulp
xor
cmp
lods
add
mov
lods
shr
jmp
sbb
lods
pop
les
stos
repnz
cmp
jbe
dec
pop
dec
(bad)
pop
adc
sbb
mov
sub
sahf
mov
jbe
and
inc
int
mov
push
outs
nop
push
push
lods
shl
loope
sub
clc
fdiv
fsubr
popw
hlt
mov
lahf
int3
test
mov
mov
outs
imul
ret
stos
mov
pop
pop
adc
xlat
inc
int3
(bad)
out
daa
stc
adc
loopne
inc
es
ss
call
xchg
mov
adc
lea
popa
cwde
loopne
repz
into
cdq
ret
dec
daa
(bad)
jg
movs
retf
(bad)
bound
inc
add
(bad)
shl
ret
xor
adc
jge
hlt
cli
js
mov
inc
test
inc
or
sbb
or
mov
xor
enter
jl
xor
jmp
mov
push
push
(bad)
std
jbe
jae
inc
popf
cmp
lods
not
adc
push
test
xor
dec
sub
add
repz
adc
pop
test
dec
outs
pop
jecxz
jp
dec
and
sbb
adc
push
aas
lods
inc
inc
jae
jp
jnp
scas
pop
mov
cmp
stos
sub
ds
push
fcomp
outs
push
aaa
push
sub
neg
int
fs
adc
retf
or
ja
jmp
push
xchg
add
and
js
daa
sahf
daa
into
dec
jmp
xchg
push
xor
pop
adc
lock
pop
xchg
imul
imul
aam
push
add
ror
xlat
test
sub
jle
push
icebp
and
rcl
sti
in
xchg
cmps
cmp
loop
pop
jbe
call
jle
in
add
les
lea
inc
mov
mov
jno
call
push
cmp
adc
mov
jecxz
jne
sahf
jg
mov
xchg
xor
cmp
mov
mov
mov
jnp
sbb
mov
sbb
and
aam
imul
movs
jmp
ins
cmps
je
es
or
mov
jle
int3
sbb
inc
ret
jl
inc
mov
sub
xor
pop
and
pop
aas
rol
enter
or
(bad)
ja
sahf
std
ja
sbb
jecxz
ds
(bad)
dec
jg
outs
(bad)
jmp
dec
sbb
popf
(bad)
ds
jnp
ja
dec
in
(bad)
cmovl
mov
inc
jp
mov
jno
cmp
and
aas
call
mov
aam
stos
std
js
mov
inc
cmc
push
mov
pop
test
xchg
inc
bound
dec
jge
jo
mov
sti
js
dec
lock
fidiv
mov
ins
jmp
out
fwait
xor
pop
aas
xchg
mov
dec
sub
leave
ficomp
cmp
jns
fadd
neg
and
sbb
xor
ret
adc
jnp
in
cmp
sti
and
fadd
jno
sub
sub
pushf
ficomp
in
into
push
mov
xchg
adc
pop
retf
cmovg
outs
dec
mov
cmp
and
add
dec
bound
jnp
xor
cmp
ret
mov
adc
dec
mov
cmps
inc
jmp
mov
mov
int
cmp
stos
inc
xlat
and
rcl
test
jl
push
xchg
adc
ret
out
icebp
lods
test
xor
jns
(bad)
(bad)
aaa
and
sbb
push
sub
mov
add
jge
add
xor
pop
scas
outs
clc
sti
mov
push
jae
xor
push
pop
mov
or
adc
frstor
push
jmp
mov
mov
fcmove
dec
(bad)
test
stos
into
(bad)
mov
add
shl
enter
call
mov
out
dec
int
fstp
or
push
xchg
pop
jb
ins
les
pop
bound
imul
pop
mov
stos
or
shl
arpl
(bad)
(bad)
data16
sbb
into
add
and
inc
enter
aaa
iret
cmc
iret
lea
gs
pop
xchg
test
sub
cmc
dec
mov
and
cmc
mov
xor
ins
pop
xor
pop
inc
addr16
int
jbe
movs
push
adc
mov
mov
cmp
sbb
pusha
sbb
pusha
xchg
fs
call
cmp
push
sbb
mov
mov
mov
or
pop
mov
bound
xchg
popa
mov
shl
mov
add
add
push
cmp
sub
lods
cmps
push
add
hlt
call
xchg
inc
pop
pop
push
and
adc
movs
pop
push
jmp
xchg
clc
xchg
imul
lods
fist
aaa
data16
jl
mov
scas
xor
adc
into
lods
stos
(bad)
call
mov
ror
push
std
jp
out
fs
push
and
mov
imul
jge
aad
leave
pop
bound
xchg
and
lea
or
into
add
jecxz
test
push
mov
pop
clc
mov
sub
test
or
int
fcomp
mov
aam
pop
ror
or
data16
repnz
sbb
pop
pop
mov
sbb
arpl
and
and
test
inc
test
popf
push
ds
addr16
fst
test
and
pop
outs
lock
out
xchg
jo
stc
xor
push
stos
call
int3
je
mov
sbb
js
mov
push
mov
mov
sbb
je
imul
sub
sbb
(bad)
cli
les
inc
in
sub
pop
xchg
loope
cmp
jl
sub
mov
fist
repnz
cld
mov
ret
stc
aaa
enter
pop
dec
push
int
lahf
inc
and
mov
mov
lea
xchg
mov
bound
idiv
nop
jp
aad
test
push
push
(bad)
cld
cmp
fs
ins
jne
cmp
jmp
enter
fld
les
push
es
mov
or
jl
push
sub
dec
xchg
or
jno
mov
and
pusha
les
add
pop
and
push
js
aad
dec
and
jp
sub
lahf
pop
retf
mov
mov
les
xchg
call
(bad)
jbe
add
xlat
inc
mov
(bad)
or
(bad)
ror
dec
(bad)
fcmovnbe
or
push
dec
in
add
ins
pop
sub
mov
ds
dec
mov
in
cli
cmps
rol
out
es
enter
lock
sti
push
xor
jno
fsub
fcomp
movs
jle
mov
(bad)
mov
(bad)
loopne
or
mov
sbb
arpl
aaa
mov
call
mov
fist
repz
xlat
jge
pcmpgtb
ffreep
dec
repnz
fucomi
sbb
test
and
lods
call
jg
xor
mul
shl
not
gs
sub
cmps
imul
adc
xchg
cmp
lahf
cld
sti
add
pop
add
push
repnz
or
outs
jp
inc
cmp
js
adc
outs
(bad)
and
sbb
imul
cmp
or
xchg
(bad)
fcomp
jne
jecxz
pop
sub
adc
fsubr
jno
xchg
or
ds
jle
outs
fistp
xchg
sub
xchg
mov
test
xchg
ins
scas
in
mov
push
pop
cmp
sbb
cmp
inc
mov
std
leave
hlt
xchg
neg
jle
int
or
loop
aam
fld
shl
fs
push
fcom
cmp
jno
and
in
test
xchg
jno
and
js
jb
iret
or
add
es
lock
push
outs
inc
cmps
pushf
push
les
in
jns
xchg
and
loop
and
push
ja
dec
mov
xlat
inc
adc
push
xor
sub
mov
ins
sbb
jb
mov
ss
cdq
pushf
xor
daa
clc
stc
les
fsub
push
mov
cmc
repz
test
jno
popf
push
test
cmp
dec
push
mov
sub
sbb
or
xchg
fisttp
add
nop
xchg
xor
adc
jns
jno
xchg
jecxz
sub
mov
sbb
aad
stc
pop
mov
push
and
cld
test
push
jmp
arpl
int3
pop
sbb
dec
cdq
adc
rcl
fisub
cmp
out
mov
mov
or
test
fwait
adc
pushf
mov
dec
adc
leave
in
ds
mov
pop
xchg
(bad)
pop
daa
adc
ret
adc
retf
xor
mov
dec
dec
rcr
imul
div
inc
das
mov
jmp
xor
mov
test
lahf
mov
dec
dec
movs
das
and
push
sub
mov
lahf
(bad)
cli
pop
icebp
adc
call
out
lods
or
dec
inc
sub
push
iret
xchg
sub
aam
inc
dec
pop
jo
sub
fdiv
loop
push
fistp
xchg
rol
mul
rcl
rcr
aad
add
nop
(bad)
sub
mov
add
sub
mov
dec
popa
inc
or
call
in
out
(bad)
pop
add
cmp
pop
mov
out
pop
mov
xchg
cli
cmp
mov
in
pop
or
sti
jns
lods
mov
mov
out
adc
mov
jb
ds
adc
jo
outs
ins
sahf
cmc
add
mov
or
jg
mov
sti
push
push
arpl
bound
pop
and
push
and
or
cmp
inc
mov
push
pushf
pop
leave
dec
bound
stos
mov
into
cmps
popf
ret
popf
push
adc
mov
jo
aad
sahf
enter
cmp
mov
daa
pop
daa
push
cs
sbb
xchg
xor
aas
sub
dec
add
inc
jp
inc
cld
mov
mov
cmp
ret
std
jo
push
pop
mov
test
data16
or
cld
fild
push
mov
fmul
les
sahf
ds
mov
xchg
dec
fwait
gs
mov
nop
mov
xchg
call
push
test
cli
push
sub
ins
ja
pop
hlt
rol
pusha
in
or
outs
sub
into
mov
lods
mov
jne
pop
daa
inc
push
rol
adc
out
xor
bound
in
cmp
inc
xor
imul
push
dec
inc
xlat
xlat
xchg
push
out
jmp
cmps
lock
inc
lea
mov
int
mov
gs
sar
loopne
mov
out
mov
ficomp
repz
mov
jge
stos
xor
popf
jo
push
fdivr
sub
pop
in
lea
scas
cmp
test
and
sbb
dec
mov
stos
mov
xchg
std
in
repz
mov
rol
mov
arpl
(bad)
jae
iret
xchg
test
and
cmp
nop
push
mov
pop
aam
jne
xor
and
into
inc
ins
push
sti
mov
test
mov
mov
mov
push
xor
dec
jae
jle
sub
ror
out
mov
sub
mov
out
and
dec
cmps
(bad)
and
and
push
fnstenv
xor
ds
retf
fisttp
dec
add
and
xchg
mov
sahf
pop
push
sbb
adc
scas
mov
sub
es
and
sub
push
ds
push
jnp
fdiv
adc
stc
daa
sahf
mov
retf
loopne
out
(bad)
retf
push
and
sub
and
sahf
sub
push
pop
adc
and
stos
dec
cmc
cmp
int3
mov
lahf
cmp
inc
sbb
addr16
js
cld
cmps
(bad)
jo
add
lea
add
movs
jecxz
in
xchg
mov
mov
retf
loop
iret
jbe
cmp
ss
jae
arpl
add
mov
mov
out
aaa
push
lods
xchg
or
mov
push
or
stc
sbb
or
xor
(bad)
fdivr
icebp
dec
outs
and
and
push
sub
mov
jnp
or
mov
add
ins
ret
sub
shl
scas
pop
stos
pop
ret
cld
aas
js
mov
jg
(bad)
push
nop
push
js
call
mov
test
iret
gs
xor
xor
sar
mov
scas
lahf
pop
sbb
jp
xor
xor
pop
cld
mov
js
retw
push
fst
leave
pop
outs
scas
in
ins
jmp
push
pop
adc
mov
out
popf
or
iret
jecxz
imul
aam
mov
fldl2t
lock
js
adc
call
inc
loop
cmp
pop
int
(bad)
fstp
mov
xchg
stos
pop
lods
and
adc
pop
ins
or
(bad)
neg
cmp
int3
cmps
or
mov
cmp
call
jo
mov
adc
scas
pop
hlt
iret
fwait
pop
fisttp
retf
loope
xchg
int
jmp
jle
push
and
scas
ins
ficomp
jae
div
jne
cmps
test
jns
jecxz
xchg
cmp
sbb
mov
dec
inc
push
data16
cmp
mov
adc
ret
pusha
test
and
int
jmp
fimul
jo
imul
pop
cmps
loope
retf
sbb
xchg
mov
jl
or
sbb
mov
sub
movs
push
sbb
or
adc
lods
call
jle
sub
cmc
xchg
fcom
cmp
pop
push
test
xor
mov
scas
aaa
loop
call
mov
dec
pop
jae
mov
outs
adc
call
cli
push
push
inc
push
repz
and
sub
cmp
iret
mov
jp
jmp
cwde
inc
add
loope
mov
loope
(bad)
dec
loop
sbb
pop
cmp
mov
jns
push
fisubr
lock
adc
xor
jge
leave
mov
push
cdq
jbe
aad
js
(bad)
push
push
xchg
movs
sub
cmps
cmp
out
push
push
fmul
push
add
(bad)
repnz
mov
mov
xlat
in
push
add
nop
icebp
es
push
in
xchg
pop
adc
adc
and
jmp
std
sbb
jmp
sbb
and
scas
xor
stos
lds
dec
sub
scas
(bad)
icebp
xor
retf
jb
loope
aaa
adc
or
in
test
add
and
arpl
(bad)
jmp
xchg
and
mov
ficomp
popf
stc
jg
push
in
add
inc
cmp
shl
stc
daa
xor
mov
test
data16
xchg
and
cwde
and
iret
xor
sub
mov
jmp
pop
jmp
push
jmp
mov
std
push
outs
dec
sub
and
mov
js
mov
aam
mov
cmp
(bad)
mov
dec
mov
or
retf
scas
mov
pop
sub
arpl
sahf
int3
xchg
dec
loopne
mov
out
shr
sbb
aas
add
push
int
add
mov
mov
mov
mov
push
cmp
loope
(bad)
jp
xor
lea
adc
inc
pop
outs
push
shr
addr16
inc
mov
(bad)
in
jno
mov
neg
mov
and
and
shl
out
xchg
mov
sbb
fnstenv
rol
jecxz
bound
ja
mov
fisubr
pop
push
xor
mov
and
in
scas
ret
inc
popa
pop
jns
mov
repz
out
hlt
leave
pop
mov
out
push
and
sub
inc
jae
push
mov
and
paddd
lea
rcl
fimul
xor
lods
sbb
test
loopne
(bad)
jle
xor
inc
sub
push
enter
sbb
or
cmp
cmps
retf
int
or
into
popf
sbb
mov
pop
jne
rol
les
dec
xchg
push
lea
idiv
and
or
jae
mov
not
mov
les
xor
or
aaa
mov
xchg
pop
mov
(bad)
cld
aaa
inc
xor
aas
jmp
loopne
leave
in
outs
ins
mov
xchg
pop
lock
dec
xchg
mov
popf
mov
add
xor
xchg
in
mov
aas
cwde
adc
push
jge
cmp
add
adc
fisubr
ds
jg
movs
iret
fnstcw
xchg
clc
jecxz
mov
icebp
and
les
add
mov
cmp
mov
or
hlt
sbb
ins
hlt
sahf
push
fs
cmps
lods
mov
dec
call
pop
add
pop
fldcw
les
leave
call
mov
jp
aas
fisttp
loopne
jb
int
mov
pop
pop
jno
fcomip
inc
cmc
stos
or
icebp
dec
sbb
cdq
pop
mov
mov
or
ror
daa
jbe
jecxz
sub
mov
inc
pop
and
repnz
and
pop
das
les
sbb
fdivr
push
int3
mul
nop
sbb
dec
or
jo
xor
jmp
adc
mov
shl
(bad)
clc
ja
cmps
push
movs
loop
lds
mov
call
mov
les
popf
xor
push
inc
cdq
je
xor
push
rcl
(bad)
cmp
inc
xchg
adc
rol
pop
in
data16
int3
push
fistp
or
repz
adc
mov
cdq
aam
and
sbb
xor
repz
add
and
xor
ja
lahf
push
sbb
int
xchg
jnp
push
movs
jg
push
jbe
dec
sub
dec
push
cmps
bound
cmp
rol
aam
ins
inc
test
nop
ret
test
imul
add
push
sbb
fs
pop
popf
add
mov
gs
push
add
sbb
dec
sbb
cmp
aad
add
cwde
hlt
popf
and
ror
mov
pop
sbb
inc
stos
xor
arpl
sti
and
rol
add
(bad)
rcr
stos
pushf
jl
or
(bad)
sub
sub
mov
mov
add
inc
mov
sbb
pusha
jl
sub
mov
stc
aam
xchg
daa
imul
in
jb
das
mov
dec
mov
ds
or
mov
jb
cld
xchg
cmp
pushf
retf
leave
mov
mov
add
fisub
lar
test
sub
xor
cld
shr
sbb
wbinvd
xchg
push
adc
adc
je
mov
xchg
mov
push
mov
lea
mov
xor
xor
mov
lock
mov
mov
mov
fld
push
jg
aad
sub
in
sbb
repnz
mov
mov
push
mov
(bad)
xor
lds
cmc
and
daa
imul
jmp
mov
pop
nop
xor
out
pop
ret
test
ja
cmp
add
lods
pop
in
mov
push
mov
cmp
(bad)
xchg
inc
or
sahf
in
and
and
sub
xchg
pop
push
and
in
and
mov
fisubr
cmp
ds
call
cmova
repz
int3
pop
and
inc
cmp
mov
out
shr
outs
sub
stc
dec
add
iret
inc
push
lods
cld
sub
pushf
mov
xchg
imul
call
data16
sub
lods
nop
push
dec
xor
jno
pusha
jmp
mov
call
sbb
fdiv
idiv
mov
shl
adc
rcr
fwait
aas
and
cld
data16
jle
je
mov
lods
inc
test
xor
ret
bound
pop
das
pop
jbe
or
retf
adc
fwait
mov
fs
pop
test
cmps
adc
imul
lahf
jns
pop
push
out
int3
sahf
xchg
imul
test
push
cmps
sbb
icebp
xchg
lea
inc
aaa
ins
adc
std
scas
mov
push
mov
mov
test
mov
js
and
test
repz
xchg
mov
and
push
sbb
ffreep
lds
sub
ficom
or
retf
mov
shl
or
or
dec
cdq
adc
stos
call
in
mov
(bad)
lahf
sub
mov
or
sahf
fidivr
mov
jns
add
pop
mov
call
mov
jp
xor
dec
leave
mov
mov
inc
(bad)
xor
lds
push
inc
adc
mov
pop
pop
cmp
clc
jno
scas
mov
jb
out
loopne
push
je
sbb
mov
xor
mov
enter
push
ss
pop
push
jb
jl
adc
popf
jge
into
pop
mov
mov
in
fidivr
mov
sbb
xor
adc
sbb
cmp
push
dec
jecxz
sbb
std
test
xor
icebp
pop
pushf
xchg
mov
pop
jo
(bad)
call
dec
out
loopne
and
mov
icebp
sub
les
mov
not
add
lods
and
push
idiv
imul
mov
push
pop
mov
ja
mov
into
push
loopne
int3
mov
dec
pusha
in
je
pushf
dec
mov
inc
cmp
mov
addr16
dec
push
les
jae
retf
cmps
pop
ins
add
clc
aam
mov
loop
gs
inc
push
loopne
scas
es
stc
ret
push
inc
imul
sub
imul
pop
inc
jae
xchg
imul
sbb
cld
sub
mov
nop
fmul
or
add
adc
add
call
and
or
sbb
xor
jle
adc
xchg
out
add
or
cmc
cmp
adc
mov
retf
inc
loope
and
adc
sbb
inc
ins
mov
(bad)
pop
(bad)
add
inc
repz
adc
sbb
shl
add
je
(bad)
xor
in
cmps
adc
jns
jg
pop
pop
mov
sbb
fild
jo
gs
popf
cwde
inc
or
push
push
std
push
push
ja
sub
push
dec
push
repnz
xor
mov
fadd
gs
mov
or
and
aas
std
ins
ss
adc
dec
pop
jp
inc
pop
mov
pop
repnz
int
push
push
jecxz
jo
cmp
xchg
or
scas
dec
in
popa
push
push
hlt
ins
mov
push
sub
and
xchg
mov
xchg
xchg
inc
scas
cmp
jae
test
ins
ins
mov
popa
pop
xor
push
jnp
sbb
cmp
mov
sub
dec
xor
push
jecxz
pop
add
push
add
es
in
mov
rcr
cmps
pop
(bad)
in
lods
lods
xor
inc
pop
or
cmp
(bad)
jmp
dec
sbb
push
les
cmp
(bad)
pop
pop
(bad)
xor
mov
sbb
inc
movs
jle
push
stos
in
and
sahf
inc
stos
rcl
ds
add
nop
cmp
ss
sbb
inc
cmp
jnp
mov
mov
xchg
clc
adc
out
pop
or
jb
or
push
cli
mov
aam
sbb
mov
sbb
xor
mov
or
jne
sub
scas
xchg
lds
dec
stos
mov
mov
push
push
movs
cmp
hlt
mov
mov
cmp
xor
lods
mov
push
dec
cmp
cmp
mov
fadd
scas
pusha
call
sbb
jb
xor
sub
outs
(bad)
jecxz
pushf
sbb
mov
mov
in
mov
jg
inc
into
mov
out
push
cmp
mov
rcl
ss
jae
cmp
adc
mov
pop
push
in
(bad)
in
cmp
xchg
aad
call
push
pop
or
cmc
push
into
pop
and
lods
fild
sar
jge
mov
sbb
pop
adc
jne
push
int3
jmp
shr
mov
rol
stc
and
pushf
dec
dec
cmps
dec
imul
adc
mov
push
cmp
jne
adc
jecxz
and
cmp
cmp
push
jb
jg
sub
cmp
xchg
jl
cld
jmp
fimul
icebp
mov
adc
in
aaa
pushf
fldenv
jae
rcr
and
ins
dec
test
inc
aam
mov
xor
push
push
ret
fidivr
cmp
cmps
jb
movs
scas
fldenv
pop
stc
scas
pop
loope
or
cs
or
fcmovu
push
add
fdivr
mov
repnz
sub
dec
mov
mov
mov
push
cld
pop
into
aam
push
bound
inc
pushf
pop
xor
xor
ja
and
pushf
jg
add
bnd
int
add
mov
clc
mov
jb
inc
int3
js
imul
dec
movs
aaa
pop
jo
cwde
movs
mov
adc
jmp
in
jecxz
leave
addr16
inc
repnz
jnp
mov
mov
test
pop
pop
cmps
dec
and
enter
mov
fsub
sbb
xor
inc
(bad)
mov
push
lock
cmp
outs
imul
push
xor
fwait
retf
push
sbb
fidivr
or
add
or
mov
pop
mov
mov
or
pop
lahf
ins
or
lds
shr
daa
cmp
call
retf
or
call
mov
or
lock
in
popw
leave
mov
lods
ja
adc
(bad)
test
enter
adc
sbb
aam
dec
js
dec
push
arpl
nop
add
inc
nop
dec
clc
and
sbb
ret
cmc
mov
mov
std
pop
call
inc
sub
pop
clc
mov
outs
loopne
int
mov
mov
shl
lea
cmp
sub
mov
cmp
imul
mov
fs
pop
add
pop
aaa
std
and
out
icebp
out
push
dec
sbb
cmp
sahf
push
pusha
aam
in
bound
inc
repnz
inc
popf
lgs
jecxz
dec
icebp
outs
fsubr
scas
retf
pop
mov
mov
mov
sub
je
pop
or
mov
add
pop
test
add
scas
repnz
not
mov
in
test
xor
adc
add
mov
fmul
push
in
adc
retf
jl
push
push
jnp
js
inc
push
shl
xchg
jp
xor
and
add
adc
push
aaa
sbb
nop
js
xchg
aaa
test
push
out
xor
lea
jno
fcmovnu
rcl
repnz
jmp
jmp
dec
fisubr
lock
repnz
popf
fidivr
sahf
jge
(bad)
or
int3
pop
jmp
sahf
mov
dec
cmp
xchg
ret
mov
out
call
mov
mov
mov
sub
cmp
fistp
dec
in
push
pop
das
xchg
inc
mov
sub
push
gs
nop
call
leave
push
and
call
mov
xchg
test
mov
addr16
cld
leave
xor
adc
fidiv
jae
push
pop
or
nop
jns
pop
sahf
lahf
cmp
repnz
dec
fisubr
cdq
jmp
popf
shl
xor
ja
movs
das
pop
pop
jmp
scas
or
lods
mov
fsub
shl
popf
sbb
adc
cmp
pusha
and
(bad)
nop
pop
cmp
hlt
jno
or
push
addr16
jge
mov
push
xor
vpslld
mov
pop
jae
push
push
lds
pop
mov
or
shl
jnp
popf
jle
lea
out
movs
adc
imul
pop
jle
mov
(bad)
push
into
adc
test
sbb
movs
mov
or
xchg
xchg
fwait
inc
aaa
les
mov
(bad)
fild
loope
push
ret
push
ret
fcom
add
rol
mov
inc
dec
je
sbb
int
dec
jo
ja
call
cmp
sti
mov
push
je
pop
sbb
push
or
xor
mov
push
push
mov
fwait
mov
sub
mov
in
sub
shl
icebp
cmp
stc
inc
jl
or
cmp
xchg
out
mov
mov
and
pop
ficomp
pusha
xchg
mov
xchg
test
scas
pop
daa
fwait
loop
sub
ret
adc
inc
cmps
and
inc
push
xor
dec
add
sub
jecxz
jno
loope
outs
push
clc
cmps
push
bound
mov
mov
dec
xor
pop
mov
add
mov
add
push
arpl
or
sti
aam
mov
sbb
cmp
and
cli
mov
xor
outs
aaa
push
(bad)
hlt
push
fist
push
push
jnp
push
test
or
in
loope
jp
inc
ss
sub
xchg
jecxz
addr16
and
pop
ss
shl
popf
loop
add
retf
adc
push
and
mov
fidiv
js
pop
mov
cmp
xchg
test
inc
jg
cmp
push
xor
fnstenv
loop
(bad)
adc
mov
movs
or
repz
and
and
xlat
je
dec
test
sbb
popf
(bad)
sub
add
sbb
mov
pop
aaa
mov
or
cmp
or
arpl
nop
hlt
mov
shl
push
fucomip
popa
push
push
fcmovbe
inc
outs
push
jge
sub
(bad)
leave
cmps
cwde
shl
rol
add
(bad)
cmc
cli
aas
aam
or
push
and
jecxz
test
jmp
bnd
retf
ins
nop
jno
repnz
sbb
int3
xchg
pusha
rcl
pop
push
mov
cmp
movs
lods
fidivr
std
jb
mov
xchg
pop
push
call
in
sbb
ret
xlat
cmp
into
sbb
adc
jmp
(bad)
pop
xor
inc
mov
fwait
jbe
fadd
cli
ins
mov
push
pop
and
ins
adc
rcr
cmp
hlt
js
repnz
push
fwait
mov
fs
xor
and
fidivr
mov
mov
inc
mov
lock
retf
dec
into
repz
dec
fdiv
das
or
cld
xchg
pop
retf
call
push
popa
mov
stos
call
test
je
ror
adc
inc
mov
fs
(bad)
mov
lock
push
test
mov
dec
inc
aam
push
sub
push
mov
les
mov
imul
pop
test
sub
les
push
push
xchg
or
aam
jl
add
mov
sar
push
rcl
call
std
push
xchg
sar
inc
pop
fstp
arpl
push
aas
cmc
mov
sbb
or
test
pop
sbb
lock
jo
sub
test
dec
xor
jp
or
inc
mov
mov
das
adc
bound
mov
(bad)
jge
leave
or
and
xchg
jae
sub
clc
out
into
pop
mov
dec
or
mov
sub
arpl
jp
cmps
int3
test
call
rol
sbb
adc
xlat
iret
mov
sub
aaa
ret
xchg
fldenv
cwde
xchg
push
ficomp
sub
inc
xor
call
adc
ins
jmp
mov
xor
repnz
cld
or
inc
inc
mov
dec
outs
scas
xor
cmp
(bad)
ja
cmp
xchg
inc
les
adc
neg
popa
fld
mov
je
aas
sub
les
and
adc
and
dec
and
cli
sub
sbb
fsubr
popa
(bad)
adc
lds
fisub
lahf
sar
imul
dec
or
ins
call
dec
cmps
pop
fdivr
mov
ds
aaa
stos
or
adc
out
inc
pop
sti
retf
sub
xor
ret
sbb
in
retf
push
mov
mov
rcl
pop
mov
daa
test
enter
mov
popa
cmp
daa
dec
jb
cdq
int3
test
sub
arpl
cmp
call
and
addr16
rcr
jns
aas
and
jo
mov
adc
push
leave
outs
jecxz
push
and
lds
inc
sbb
and
mov
arpl
xchg
(bad)
xchg
xchg
imul
mov
add
xchg
xor
dec
xor
cmp
add
clc
outs
xor
jne
mov
push
mul
call
div
lods
xor
xchg
je
fist
jg
add
mov
aaa
dec
nop
cs
adc
dec
aaa
enter
rol
cmp
xchg
movs
js
jp
aaa
ins
das
pop
jae
iret
xlat
jmp
or
cmp
mov
lods
pop
sbb
xchg
cdq
jbe
xchg
imul
ja
xchg
jmp
jmp
and
jb
add
fisubr
cmp
mov
xor
xchg
dec
push
ja
push
push
push
cmp
out
movs
cli
mov
xchg
mov
jnp
(bad)
shl
ss
inc
imul
push
ins
aam
cmp
test
push
lds
sub
repz
mov
mov
mov
mov
repnz
dec
jmp
out
sbb
jbe
mov
sbb
adc
ins
(bad)
or
pop
stc
stos
cmps
xchg
inc
add
fiadd
pop
mov
call
cmp
push
mov
adc
cmp
and
mov
xchg
data16
rcr
cmp
xor
(bad)
cmp
push
jo
mov
jnp
sahf
popf
sub
push
mov
je
xor
call
arpl
repnz
cmc
inc
pusha
pop
test
mov
scas
dec
dec
xor
or
cdq
cmp
sub
cmps
(bad)
lods
lods
or
into
sbb
mov
mov
aas
imul
cmp
fldenv
adc
xchg
inc
fcom
in
sub
loopne
stc
mov
inc
int3
popa
popa
fimul
movs
out
fldcw
ret
xchg
mov
ja
aas
mov
push
sbb
(bad)
adc
shr
cmp
mov
push
(bad)
int
jns
push
ja
test
mov
sar
popf
sub
sbb
sbb
jno
and
call
jmp
xchg
xchg
sub
dec
mov
push
jmp
mov
adc
lods
scas
xchg
mov
sbb
cdq
cmp
push
arpl
scas
lea
mov
and
(bad)
hlt
call
xchg
out
stc
mov
jmp
stos
loopne
add
dec
mov
fcomip
mov
fnstcw
(bad)
out
ds
(bad)
dec
sbb
sbb
mov
sbb
inc
cmp
mov
in
inc
or
ds
hlt
shl
pusha
cwde
mov
adc
push
int3
and
xlat
stc
xor
jbe
clc
ds
adc
push
push
outs
call
push
jmp
mov
or
jg
mov
jle
inc
sbb
inc
leave
inc
addr16
jmp
mov
fnstenv
inc
dec
(bad)
out
scas
mov
mov
addr16
ins
mov
xor
push
and
fbld
mov
inc
out
cmps
jl
dec
in
mov
enter
xor
add
scas
retf
cld
mov
jp
imul
and
add
cmp
push
outs
push
adc
add
or
pop
sub
(bad)
jns
inc
sbb
mov
dec
lahf
jbe
dec
lods
mov
adc
push
ret
stc
in
aam
dec
jbe
push
mov
sti
cli
mov
es
icebp
repz
mov
mov
outs
scas
jl
(bad)
call
out
(bad)
popa
int
jecxz
mov
into
fnstenv
jne
xchg
fsub
pop
(bad)
xchg
ins
sti
and
xchg
pop
movs
mov
jl
pop
mov
pushf
psllq
inc
in
xchg
lods
out
sbb
test
xor
inc
outs
sub
cs
add
jecxz
sub
aam
jl
aam
inc
aad
dec
cmc
cli
xchg
xorps
mov
dec
int
cmp
in
mov
push
call
lds
ja
fadd
push
jp
les
repz
adc
test
and
or
cdq
sahf
hlt
xor
ja
fwait
mov
and
push
daa
xor
sub
xor
push
inc
sti
sub
cmp
lahf
xchg
out
xor
sub
(bad)
xchg
mov
inc
mov
pop
aaa
jle
je
push
iret
clc
xor
inc
and
pop
xchg
push
add
jnp
dec
xchg
lds
lods
push
ja
pop
data16
cmp
stos
aas
loopne
cmp
and
ficom
jmp
sar
add
loope
fs
cmp
cmp
jae
iret
mov
xor
cmp
arpl
frstor
outs
push
mov
arpl
xor
cli
pop
dec
and
lock
inc
pop
(bad)
imul
lea
sub
sbb
xchg
mov
push
cmps
lods
cdq
(bad)
in
pop
xchg
fs
xchg
femms
leave
and
std
jo
cmp
test
push
ja
mov
add
mov
gs
push
xchg
dec
fwait
sub
mov
lds
test
push
je
adc
dec
push
lods
jbe
mov
movs
mov
aaa
xlat
mov
int3
xchg
adc
loop
push
ss
imul
rcr
or
clc
xchg
or
add
sbb
addr16
movs
cs
push
mov
(bad)
popf
xchg
repz
shl
and
rol
push
xor
pop
xchg
call
fst
mov
(bad)
popf
sbb
sbb
or
add
mov
(bad)
jmp
and
xor
es
add
cwde
sbb
add
mov
ins
imul
dec
sub
xchg
sub
cli
imul
push
pop
sub
pop
push
mov
jns
inc
addr16
das
hlt
xor
into
out
adc
xor
pop
jp
jge
push
jne
pusha
in
inc
add
sub
(bad)
push
pmuludq
push
jg
xchg
jp
push
mov
sar
add
push
xchg
(bad)
ror
(bad)
pop
jp
loopne
ds
ret
jmp
(bad)
push
inc
xor
int
aaa
xor
mov
mov
pop
nop
cmp
xchg
jge
sbb
or
or
cmp
and
adc
sbb
out
jno
pop
icebp
popf
mov
into
aam
(bad)
(bad)
ja
fild
movs
add
sbb
push
xchg
aad
jecxz
cmp
lods
repnz
inc
mov
mov
mov
repnz
cld
ror
outs
or
rcr
stos
cmp
jmp
inc
nop
dec
sub
fidivr
mov
mov
fist
popf
xchg
sbb
pusha
add
sbb
mov
fldcw
test
popf
aas
int3
call
add
dec
fs
fcomp
add
add
icebp
xchg
mov
sbb
cmp
ins
call
push
mov
push
mov
or
pop
push
inc
or
adc
(bad)
(bad)
loop
push
jecxz
mov
je
inc
sar
mov
shl
mov
push
add
inc
ret
inc
ret
sbb
loope
outs
call
dec
stc
dec
repnz
hlt
arpl
ficom
fild
dec
pushf
add
dec
fwait
mov
push
cli
outs
or
(bad)
cmp
cwde
dec
daa
xor
shl
push
jbe
push
adc
cmps
pop
sub
and
dec
sub
xchg
add
xor
mov
and
in
sub
jns
sbb
mov
inc
popf
push
pop
xchg
ret
mov
cli
loop
call
int
jae
daa
int
movs
and
gs
leave
lea
test
lea
jmp
push
xlat
sub
pop
shl
pop
cmp
adc
jne
jmp
sbb
add
mov
fnstcw
add
imul
aam
mov
xlat
adc
test
std
or
xchg
push
lds
xchg
jno
mov
cmps
mov
nop
mov
(bad)
push
(bad)
call
jne
or
jecxz
push
stos
daa
mov
arpl
adc
or
dec
pop
je
xchg
mov
das
add
mov
(bad)
add
adc
fsubr
jg
clc
push
pop
add
xor
jo
sub
cwde
or
push
pop
fldenv
sub
pop
mov
jge
inc
push
int3
xor
ins
push
scas
mov
mov
push
out
icebp
jo
pop
in
mov
ds
push
pop
sti
dec
popa
jle
rol
leave
bound
call
jecxz
jne
xchg
adc
xchg
add
xchg
pop
inc
fisubr
sub
sbb
mov
pushf
(bad)
out
jge
(bad)
mov
ss
and
idiv
shl
sbb
out
sbb
jno
rcl
sub
leave
sbb
or
inc
es
ret
cmp
cmp
or
retf
lods
sbb
pop
out
scas
or
clc
les
nop
and
mov
ja
jge
cmp
aad
mov
lea
ret
sbb
dec
(bad)
aad
(bad)
sbb
and
mov
mov
pop
enter
into
dec
int3
cmp
int3
pop
add
jb
push
arpl
ds
cmps
xchg
xchg
mov
hlt
fs
cmp
pop
inc
mov
push
lods
or
cdq
sbb
hlt
inc
and
nop
jo
xor
div
mov
imul
jle
push
fstp
fist
ins
push
mov
push
loopne
sbb
inc
lahf
dec
jb
imul
mov
dec
add
adc
mov
sbb
add
cli
ficomp
mov
stos
xchg
mov
xor
adc
call
cld
mov
out
outs
and
sub
mov
mov
std
loopne
ret
aad
sahf
sahf
cmp
mov
in
dec
mov
scas
xor
daa
ds
sbb
mov
popf
loop
icebp
pop
xlat
icebp
adc
(bad)
test
xor
in
test
and
xlat
fs
dec
pushf
mov
js
mov
xchg
idiv
sub
aas
mov
idiv
ja
xor
and
or
sub
(bad)
hlt
(bad)
fcmovne
sbb
mov
arpl
arpl
sar
or
mov
mov
out
push
(bad)
ret
aaa
aaa
lods
jg
pop
gs
and
push
mov
pop
or
movs
enterw
ror
loop
bound
and
test
pop
sub
imul
pop
in
lahf
or
add
cmc
jp
adc
pop
repz
fistp
leave
jae
ficom
call
aad
jmp
cwde
(bad)
fisubr
push
jmp
adc
sbb
cs
inc
pop
jmp
out
loop
test
inc
es
cdq
pushf
mov
push
adc
xchg
push
jnp
(bad)
push
cmp
mov
mov
je
and
aas
or
push
(bad)
inc
retf
mov
pop
mov
scas
scas
inc
mov
push
mov
arpl
sub
outs
cwde
enter
inc
movs
cmp
int3
je
xor
sahf
(bad)
aad
or
loop
int3
jo
loope
scas
cs
ins
adc
cdq
jmp
sahf
pop
inc
or
ja
inc
arpl
push
sbb
mov
retf
mov
xchg
lods
push
jae
hlt
xlat
sti
pop
jb
and
int
lock
es
punpcklwd
pop
sbb
scas
push
(bad)
and
push
repnz
jecxz
add
mov
lea
sub
hlt
cld
out
push
jbe
xchg
xchg
into
and
cdq
mov
sar
js
or
mov
fdivr
loopne
fldenv
ins
inc
xor
movs
xchg
dec
push
jp
fxtract
iret
xor
jae
int
js
inc
mov
or
shl
retf
movs
sub
cmps
adc
ret
push
mov
fdiv
repnz
js
pop
jg
es
call
inc
inc
adc
das
int
jmp
rcr
jmp
or
and
ret
movs
push
cmps
lds
rcl
push
jae
push
push
(bad)
and
mov
push
push
pushf
jg
hlt
or
jnp
push
mov
add
ror
bswap
jns
call
cld
cmp
mov
out
fidiv
mov
aam
cs
mov
pop
sar
mov
push
test
retf
cmp
hlt
sahf
aas
test
xor
sbb
adc
sbb
outs
jmp
clc
add
mov
and
test
cmp
sti
and
daa
nop
setnp
imul
mov
xor
(bad)
or
dec
adc
hlt
adc
mov
aaa
gs
cmp
sbb
sbb
adc
push
lods
fdiv
test
add
sahf
ret
mov
cs
leave
jmp
xchg
or
jmp
mov
jno
repnz
mov
lahf
dec
adc
pop
popf
dec
mov
std
jae
or
test
fucomi
retf
ret
rcl
xchg
pusha
lds
and
retf
mov
(bad)
mov
lods
aad
cld
jo
xor
retf
mov
jle
jl
inc
mov
mov
jne
mov
jp
fwait
mov
leave
repnz
outs
push
icebp
mov
mov
xor
(bad)
std
jle
retf
aad
lahf
jmp
add
mov
fadd
xor
sub
and
pop
mov
(bad)
jp
push
sbb
xor
bnd
push
jl
mov
pop
pop
jmp
loop
mov
push
sub
stc
or
(bad)
xchg
sbb
xchg
les
xor
mov
shr
mov
fwait
scas
popf
inc
jl
int3
sahf
aas
cli
sub
cdq
xor
sub
outs
adc
pop
inc
sub
sar
or
dec
test
push
xchg
das
push
fidivr
ror
test
out
lds
shl
call
leave
sub
jae
iret
jmp
dec
cmp
into
jns
popf
clc
xor
mov
dec
sub
outs
and
call
mov
jmp
xor
stos
test
pop
inc
ffreep
jne
fisttp
sbb
inc
mov
pop
xor
sbb
and
push
xchg
inc
not
jmp
push
cwde
or
jp
jae
mov
sub
pop
ds
(bad)
xchg
adc
xchg
out
push
jmp
adc
add
aaa
sti
rcl
dec
adc
cmps
call
inc
pop
push
cmp
scas
or
sub
mov
mov
xor
adc
sbb
mov
xor
lahf
adc
test
std
mov
dec
sub
pop
int3
or
push
fxam
and
(bad)
adc
(bad)
rcl
outs
pop
or
mov
es
outs
jno
sbb
inc
and
sbb
ins
adc
xchg
mov
fmul
enter
je
sub
mov
pushf
mov
neg
sbb
mov
inc
ret
inc
sbb
dec
(bad)
xchg
test
push
and
fst
out
movs
out
into
lods
ror
aaa
and
add
mov
jb
add
call
jp
mov
out
xlat
xor
jns
int
bound
mov
mov
mov
or
(bad)
je
mov
pop
xchg
dec
pop
ret
sti
mov
mov
push
not
push
push
movs
jp
xrelease
xor
jb
xchg
mov
push
inc
out
cmp
(bad)
cmc
and
sbb
stos
pop
aam
in
in
in
dec
jbe
sbb
fisubr
jg
dec
pop
push
or
repnz
je
mov
xchg
jecxz
and
and
outs
shr
cs
mov
push
xchg
les
fldcw
or
inc
mov
pop
xchg
out
pusha
mov
imul
inc
in
aaa
nop
jbe
jg
leave
lea
push
and
xchg
loope
fwait
push
adc
rol
shl
jae
adc
jl
sub
add
iret
jecxz
pop
xor
jae
out
dec
pop
pop
out
les
or
ins
push
mov
fdiv
and
inc
cmps
pop
xor
loop
repz
das
mov
cmp
add
js
(bad)
ficom
popa
pop
das
into
and
jecxz
jmp
cmp
xchg
lods
pop
or
fisubr
sub
xchg
cmp
sbb
aad
imul
clc
jmp
call
leave
aam
imul
and
add
cmp
test
xchg
leave
mov
mov
pop
jg
int3
sub
mov
dec
cwde
and
and
stos
and
jnp
inc
pop
rcl
push
fldln2
mov
cmp
mov
push
scas
(bad)
in
idiv
pushf
stc
shr
cmp
and
and
inc
lods
push
adc
ss
jecxz
xchg
into
repz
ret
xor
out
push
push
aas
pop
das
sub
call
inc
pop
sahf
(bad)
cmp
mov
adc
cmp
mov
ret
or
(bad)
fmulp
sub
pop
lds
nop
push
ins
add
in
inc
aas
popa
cmps
jl
in
das
outs
xchg
mov
push
push
fcom
stos
jmp
sbb
sub
dec
fbld
and
repnz
adc
jnp
and
adc
arpl
sub
retf
or
and
(bad)
bound
sbb
bound
les
not
cmp
add
daa
loop
sbb
(bad)
sub
sub
mov
popa
into
fucom
test
mov
or
or
pop
cmps
stos
pop
jae
push
adc
adc
scas
pop
and
mov
movs
repz
loop
and
stos
pushf
dec
fstp
fst
lods
dec
mov
push
jmp
rol
fimul
mov
and
and
sub
js
js
cmps
mov
inc
movs
or
or
mov
(bad)
int
pop
shl
pop
icebp
cmps
gs
test
jmp
in
loope
and
add
movs
ror
xor
add
rcl
out
out
push
scas
mov
cdq
mov
push
call
out
mov
jns
inc
jg
xlat
daa
outs
xor
test
pusha
inc
sub
mov
push
xor
sub
and
mov
fisubr
ss
push
test
movs
mov
sar
pop
mov
inc
aas
dec
stos
cld
outs
scas
mov
jo
mov
bound
and
push
lock
cdq
shl
stos
movs
jne
aaa
int
call
and
adc
test
add
push
enter
dec
loopne
adc
push
pop
lock
imul
lods
mov
jg
push
adc
loope
pop
outs
or
shl
mov
mov
retw
mov
out
lock
jmp
cs
fnstenv
or
pop
addr16
xchg
push
push
(bad)
shl
xchg
sub
add
mov
sub
and
fcom
aad
pop
xchg
jo
(bad)
cmc
arpl
out
call
into
out
push
dec
aam
retf
outs
js
dec
sbb
aam
xlat
add
jne
movs
mov
and
or
jns
jns
shl
xchg
push
sbb
cmp
xchg
fwait
jg
fistp
mov
daa
xor
push
mov
lods
popa
stos
cvtps2pi
jo
fisub
mov
fst
dec
out
shl
jge
pop
imul
call
arpl
sub
repz
outs
cmp
cmp
mov
shl
(bad)
mov
fst
daa
cmps
aas
out
xchg
outs
stc
sar
add
sahf
daa
push
pop
and
or
push
jo
sub
mov
test
mov
out
in
sbb
push
add
xor
fnstcw
mov
rol
pop
adc
push
into
(bad)
pushf
push
stc
imul
ja
(bad)
popa
fcom
push
pop
aam
fst
pop
sub
test
repz
mov
or
xchg
adc
mov
popa
jle
dec
cmc
scas
in
push
mov
rcl
add
call
or
mov
pusha
cmp
jmp
adc
jae
ins
arpl
dec
dec
imul
jmp
pop
adc
aad
cwde
(bad)
in
or
mov
cmps
sbb
mov
cdq
cld
ret
pop
and
and
retf
rol
loopne
push
mov
das
scas
out
push
fidivr
fbstp
repz
lds
xchg
dec
inc
dec
je
dec
mov
shl
not
loop
fld
sti
repnz
fistp
cmps
aaa
das
leave
and
and
call
xchg
shl
sub
pop
rol
and
add
cmc
pushf
loop
daa
cmp
rol
or
xchg
nop
inc
pop
test
mov
rol
jmp
mov
(bad)
retf
xchg
aam
enter
sbb
jecxz
dec
je
add
fistp
retf
lods
xchg
pop
sti
push
mov
cmps
test
ret
mov
daa
jmp
test
rcl
sti
movs
fnstcw
imul
push
xlat
pop
add
mov
cmp
call
outs
xchg
addr16
mov
xchg
cmp
push
push
xor
(bad)
jo
daa
adc
pop
ret
adc
imul
push
jno
inc
mov
outs
fld
and
imul
or
aaa
mov
and
call
and
test
(bad)
imul
into
xchg
std
xchg
aaa
rcl
xchg
pop
or
dec
das
push
pop
add
cdq
push
sbb
jge
mov
test
dec
loopne
adc
ret
sbb
or
lods
mov
cmp
(bad)
cmc
pushf
adc
das
outs
sub
lock
out
sbb
mov
loope
not
dec
loopne
sbb
fiadd
inc
push
cwde
mov
push
outs
jecxz
lods
or
mov
cmc
cmp
je
or
(bad)
(bad)
icebp
ds
hlt
gs
or
retf
xchg
out
jg
add
sub
pop
mov
icebp
adc
retf
gs
mov
enter
sbb
test
cli
cmps
fwait
aas
mov
rol
sbb
xchg
jg
and
or
(bad)
xchg
cld
sub
stos
stc
mov
out
pushf
loopne
add
(bad)
push
jae
rol
jmp
cdq
mov
xor
gs
pushf
or
outs
loopne
or
and
cmp
iret
imul
call
loope
call
movs
hlt
cmp
pop
dec
dec
mov
pop
loope
(bad)
out
mov
cdq
xor
(bad)
sub
icebp
scas
mov
std
daa
nop
std
ja
iret
test
add
push
sbb
push
call
pop
or
add
mov
sub
sub
jns
cwde
xchg
loope
pop
dec
ret
loopne
sbb
aas
push
scas
add
jg
data16
ret
push
or
ret
outs
mov
fadd
push
xchg
mov
add
in
or
retf
and
shl
sbb
ror
leave
ins
cmp
test
adc
sbb
loop
xlat
movs
sub
dec
imul
arpl
mov
test
sbb
lahf
in
push
and
in
inc
clc
dec
leave
cmp
sub
lea
popa
push
mov
inc
dec
daa
dec
mov
inc
jmp
test
mov
dec
mov
cmc
div
aaa
cmp
xor
xor
fcmovb
pop
xor
xor
test
add
popf
arpl
arpl
pusha
rcl
loope
mov
pop
push
fst
mov
sub
inc
xchg
dec
and
adc
sar
dec
inc
jae
push
pop
add
jne
xchg
cmps
mov
add
sub
test
cmp
sti
mov
jae
aad
imul
movs
mov
ret
inc
scas
cmp
mov
pusha
shl
in
xor
push
std
sbb
push
shr
push
xchg
dec
(bad)
and
lods
mov
push
test
(bad)
out
mov
mov
ins
into
adc
xchg
add
pusha
jnp
sar
rcr
jle
(bad)
jmp
or
div
jae
cld
les
xchg
fwait
iret
push
jp
push
cli
test
aad
in
(bad)
in
jmp
sbb
cld
out
jp
sahf
sub
pop
inc
sub
cmp
leave
js
test
rcr
jp
daa
inc
xor
cmp
dec
mov
stos
out
aas
pushf
push
imul
mov
out
adc
dec
xchg
mov
add
push
arpl
lea
sbb
mov
xor
or
daa
push
mov
mov
call
add
inc
jmp
sub
pop
jl
out
mov
lahf
xchg
movs
pop
push
aam
xor
inc
int
mov
add
popf
sub
repz
pop
mov
loopne
inc
dec
push
sbb
bound
jp
jecxz
call
push
jbe
dec
lods
or
dec
xor
nop
push
loop
ss
das
jg
lods
pop
test
cmps
les
shr
adc
mov
fcmovnb
or
outs
adc
repnz
ret
mov
adc
fisttp
or
lods
jno
out
scas
ret
mov
cmp
hlt
lahf
fild
push
(bad)
daa
imul
nop
pop
and
ret
ror
addr16
jmp
leave
iret
xchg
inc
call
jae
and
mov
mov
sub
stos
lods
les
jbe
pop
scas
push
xor
jmp
je
fst
dec
cdq
icebp
shl
xor
dec
clc
adc
shl
adc
cmp
jmp
xchg
sbb
mov
pop
or
add
pop
pop
inc
cmp
sub
sbb
cmp
leave
das
jb
mov
lods
push
xchg
push
shl
cmp
fisubr
cmp
shr
pop
mov
dec
mov
aam
inc
push
pop
popf
jae
retf
mov
xchg
movs
add
adc
pushf
and
mov
bound
call
jp
fcomip
mov
out
cmp
mov
fld
gs
shr
mov
and
mov
pop
pop
pop
aas
fs
into
jp
adc
out
pop
cmp
fnstenv
mov
sbb
push
ds
push
add
sbb
jl
mov
xor
xor
aam
js
dec
dec
mov
xchg
js
(bad)
out
fistp
cs
mov
push
imul
dec
rcl
int
or
sub
ror
scas
das
mov
or
jno
sub
lea
ja
inc
jmp
sub
lods
sahf
xchg
fldcw
cli
lods
xor
ret
or
jbe
fwait
sub
mov
mov
fmulp
leave
cli
or
jne
adc
dec
hlt
mov
add
mov
xor
fcom
cmps
in
and
jmp
(bad)
sbb
jecxz
stos
xor
jecxz
mov
mov
lock
fld
call
push
lods
xchg
xchg
lock
ror
(bad)
retf
push
xchg
and
outs
scas
outs
add
sub
xor
imul
jle
dec
or
les
pushf
int3
mov
inc
mov
(bad)
mov
(bad)
xchg
cmp
xor
loope
xor
xchg
dec
cmp
mov
dec
pop
xor
or
inc
(bad)
push
mov
leave
in
pop
xchg
ror
cmp
test
out
pop
adc
ss
xor
pop
cmps
mov
int
nop
mov
add
cmp
in
xchg
fcmovnu
push
xchg
xchg
iret
aas
cmp
or
mov
mov
push
and
sbb
pop
out
dec
add
xchg
or
adc
in
jne
pusha
neg
cwde
(bad)
fistp
jge
ss
mov
mov
adc
in
stos
mov
call
jno
imul
or
pop
mov
add
into
(bad)
repz
es
jecxz
and
mov
or
push
inc
scas
xlat
aas
mov
shl
xchg
xchg
and
dec
or
setle
je
test
xchg
mov
push
call
mov
aas
mov
jmp
nop
cmp
fs
jnp
adc
mov
scas
sub
add
addr16
push
ja
fdiv
jno
mov
dec
pop
jnp
cmps
add
mov
movs
in
mov
mov
shl
gs
fdivr
xor
(bad)
call
mul
lock
or
push
ds
retf
lahf
test
dec
and
xor
fwait
mov
jmp
add
(bad)
into
pop
shl
ror
add
addr16
mov
xchg
jge
scas
xchg
outs
mov
jecxz
retf
(bad)
pop
xchg
fstp
inc
sbb
jmp
mov
cdq
movs
cmps
(bad)
jo
ret
idiv
inc
inc
cmp
push
xor
mov
mov
push
xor
stos
cmp
(bad)
pushf
jo
cmp
cmove
mov
cmp
mov
and
inc
adc
inc
stos
pop
loopne
and
xchg
daa
sub
push
pop
xchg
pushf
xchg
adc
pop
inc
mov
dec
sbb
(bad)
jecxz
les
push
out
(bad)
scas
dec
ss
pop
fs
pop
adc
push
int
push
ins
imul
sub
cmc
pop
add
cs
in
mov
in
adc
adc
ins
popf
fiadd
inc
pop
mov
lock
(bad)
aas
retf
sbb
sbb
cli
fimul
push
pop
data16
(bad)
(bad)
loopne
shl
pop
daa
sub
mov
sub
(bad)
sahf
pop
sbb
dec
xor
ror
lahf
inc
retf
xlat
mov
repz
push
mov
dec
sbb
adc
mov
pop
bound
movs
jg
xor
in
hlt
ja
jbe
cmp
pop
sub
xchg
dec
pop
dec
scas
add
push
in
xor
ins
into
pop
add
(bad)
(bad)
or
sbb
jge
inc
ret
nop
rol
mov
int
pop
xlat
cmp
neg
stos
pop
dec
pop
inc
stos
movs
pop
outs
lea
and
scas
or
ror
add
addr16
int
xlat
call
shl
int3
sar
xchg
rcr
mov
js
xchg
xchg
loopne
imul
lods
mov
mov
jle
test
cmps
lock
dec
xchg
pop
sbb
push
nop
mov
cld
mov
shl
xchg
and
je
cmp
inc
adc
xor
and
xor
jg
jge
jae
dec
xchg
(bad)
cmp
repnz
into
mov
and
and
cdq
(bad)
shr
cmp
icebp
sbb
jo
inc
push
sub
add
ja
or
xchg
fwait
cmp
xchg
stc
scas
test
lods
mov
sahf
mov
xchg
jp
aas
lods
cs
ret
mov
xchg
jge
fnstcw
(bad)
cmp
sbb
shl
mov
mov
out
adc
or
(bad)
int3
ins
xor
les
rcl
aaa
jmp
cmps
sub
(bad)
fbstp
pop
mov
mov
test
nop
in
cmp
dec
imul
jno
cld
xchg
inc
and
call
xlat
lods
hlt
cmp
ins
mov
stc
hlt
inc
xchg
std
sbb
push
mov
or
mov
ins
loopne
cwde
or
sub
fist
call
pop
psubq
lods
xchg
mov
or
icebp
mov
sar
(bad)
jmp
xchg
xor
stos
fdiv
push
cli
push
pop
jmp
sbb
sar
inc
dec
sbb
and
mov
fld
aas
in
pusha
in
mov
in
sbb
pop
cs
adc
push
and
outs
mov
pop
mov
sbb
scas
adc
aad
sub
ret
or
pop
push
xchg
in
shl
add
shl
iret
xlat
dec
mov
fstp
ficomp
fbld
or
jl
xchg
xchg
inc
cwde
jp
mov
stos
sub
pusha
mov
int3
inc
or
leave
gs
lahf
and
sub
sub
and
rcr
mov
add
dec
shr
repz
jp
push
retf
test
pop
movs
push
cwde
cmp
scas
push
int3
aam
jns
ret
jmp
in
mov
daa
dec
jo
xchg
pop
mov
lods
std
mov
sub
cmp
mov
sub
xor
std
and
xchg
and
in
test
jl
cmp
xor
movs
pop
test
push
xor
pop
mov
or
out
adc
popf
mov
xchg
or
les
lods
hlt
xor
sbb
out
fistp
and
or
push
push
push
imul
add
loopne
cmc
lods
inc
dec
call
or
(bad)
pop
scas
std
mul
scas
nop
out
out
mov
jmp
and
jg
sub
(bad)
pop
push
jbe
ror
push
mov
test
jp
sar
push
and
cmp
lahf
xchg
sbb
pop
or
jl
xchg
jmp
js
or
mov
ret
mov
inc
and
fidiv
ror
pop
mov
int
sub
cmps
sbb
xor
nop
movs
gs
ins
push
icebp
das
jo
push
inc
mov
les
fmul
ss
lods
and
retf
xchg
adc
jg
mov
clc
pop
aaa
arpl
hlt
mov
cmp
(bad)
cmps
cmp
sub
mov
cld
retf
mov
pop
retf
sub
rol
dec
sub
fcomp
dec
pop
add
stos
icebp
xchg
(bad)
ds
jmp
and
mov
mov
adc
sub
jne
inc
push
adc
out
sbb
outs
cmc
dec
inc
lods
cmp
add
push
inc
mov
lahf
pusha
sbb
xchg
scas
mov
int3
cmps
test
scas
mov
jae
cmp
mov
mov
xchg
out
dec
repnz
jno
sub
jae
(bad)
mov
jb
call
add
out
mov
xor
dec
inc
jecxz
or
push
daa
in
paddusb
daa
adc
jg
int3
add
sub
in
cmp
mov
out
add
bound
jmp
daa
out
mov
xor
dec
scas
stos
pop
or
xor
ja
in
dec
fnstenv
int
lea
push
imul
cmp
cmps
cmp
cmps
mov
leave
aas
sub
fiadd
repnz
cmp
jb
stos
mov
jne
cmps
pop
and
addr16
push
cmp
jbe
mul
or
test
pop
mov
or
dec
mov
retf
in
cmp
mov
outs
sub
pop
in
inc
or
scas
test
ror
inc
mov
xchg
xor
test
lea
mov
pop
adc
dec
or
push
movs
jg
inc
cmc
cdq
stos
jnp
mov
(bad)
xor
fwait
pop
cs
pop
in
sub
sbb
neg
lods
dec
loopne
mov
dec
jmp
fsub
and
mov
dec
test
add
xor
jae
lea
loopne
addr16
cmp
or
jo
pop
jbe
add
dec
in
or
popa
pop
sbb
sbb
rcr
fild
(bad)
xchg
in
push
test
adc
cwde
retf
iret
mov
ror
imul
aaa
jae
push
cmc
rcl
loope
xchg
nop
ins
popa
js
scas
jle
xchg
shr
jmp
ficom
mov
adc
ja
jg
fcom
and
sbb
inc
cld
push
xor
dec
pushf
enter
sbb
cmps
jns
out
in
pop
add
stc
retf
jne
jns
in
xchg
mov
sub
imul
mov
sub
add
push
xor
(bad)
clc
ret
cmp
jnp
mov
outs
(bad)
enter
cs
cmp
stos
ds
sub
inc
pop
push
inc
xor
mov
(bad)
cmp
mov
enter
mov
int
mov
mov
add
cdq
pop
(bad)
jle
dec
adc
mov
and
pushf
push
(bad)
movaps
les
imul
scas
(bad)
stc
rol
call
sub
stos
mov
shl
lea
jo
mov
pop
adc
xor
lock
loope
popf
mov
mov
mov
and
ret
ja
and
ds
shr
mov
adc
dec
xor
push
loope
lds
test
push
and
sbb
adc
in
xchg
xlat
inc
cmp
jb
fnstsw
(bad)
mov
adc
mov
clc
sub
aaa
sub
(bad)
pop
lods
push
arpl
and
(bad)
out
inc
test
mov
ds
xlat
and
rcr
iret
hlt
or
fcomp
inc
call
punpcklbw
mov
aam
xchg
xor
jp
adc
ret
xor
out
ins
mov
push
ret
add
call
cmp
push
daa
xchg
mov
ja
push
xor
and
mov
pop
movs
das
ret
call
adc
sbb
mov
sar
jecxz
iret
inc
jg
push
sbb
repz
mov
pusha
ins
hlt
jbe
fisub
jmp
add
in
stc
cmp
enter
fisubr
stos
mov
popa
jbe
lea
imul
call
and
shr
rcl
fdivr
fwait
sbb
mov
ja
aaa
mov
dec
in
dec
mov
pop
test
inc
(bad)
stc
icebp
retf
fnstsw
and
pop
push
adc
mov
les
or
loope
test
mov
dec
push
enter
pop
push
jne
jno
xchg
dec
shl
call
jno
loope
cli
sbb
dec
mov
retf
sub
pop
icebp
sar
push
out
mov
test
inc
repnz
lahf
xlat
fistp
push
test
rcr
int3
cmp
inc
lea
sub
idiv
xor
aaa
add
out
ds
std
mov
dec
gs
add
repnz
lods
test
js
adc
ds
add
fwait
test
mov
add
push
jae
mov
dec
pop
sahf
push
xor
add
loop
scas
jbe
mov
outs
sub
adc
xchg
or
call
jno
xchg
jg
out
icebp
dec
xor
pushf
add
xor
xchg
push
jo
push
jo
pop
push
inc
jb
cdq
outs
add
daa
push
and
mov
dec
sbb
movs
dec
mov
and
xor
mov
mov
jge
mov
test
pop
mov
call
mov
ror
cmp
mov
jmp
push
hlt
jmp
int
push
retf
push
fs
mov
clc
call
cmp
sbb
nop
cmp
in
sub
in
pop
xchg
test
mov
or
sti
push
es
test
mov
ins
scas
pop
cdq
ret
imul
jg
jns
jns
xor
std
jge
sbb
leave
xchg
js
sub
jmp
fmul
pop
push
ret
or
arpl
(bad)
in
cmp
xchg
xchg
lea
call
neg
pop
fsubp
xchg
repnz
pop
sbb
into
xchg
inc
loope
xchg
das
in
dec
sbb
loop
fstp
ds
inc
jecxz
(bad)
scas
mov
cwde
mov
cmp
lods
aad
pop
push
add
movs
dec
test
sahf
push
push
mov
xor
xlat
push
or
ss
mov
hlt
fild
shr
shr
int
(bad)
push
popf
jmp
jns
xchg
aaa
sub
(bad)
div
push
cli
or
in
sub
in
inc
sbb
retf
jmp
push
inc
mov
and
rcr
les
in
hlt
stc
test
jmp
or
mov
pop
push
jle
ins
lods
mov
xchg
aas
bound
and
inc
jmp
shl
pop
dec
mov
xlat
fimul
das
pop
js
jno
and
repz
sub
sbb
jbe
popf
cld
pusha
gs
xor
nop
cmp
sub
fnstenv
dec
adc
int3
dec
sbb
rcr
or
(bad)
sub
movs
popf
pop
popa
add
in
pop
adc
pop
sub
cs
mov
pop
shl
or
fisubr
add
jo
xlat
pop
gs
jecxz
push
in
std
and
call
jb
inc
pop
pop
xchg
fbld
loope
mov
push
mov
lea
and
lidtd
sbb
ja
xchg
(bad)
arpl
loop
mov
into
mov
mov
in
jo
out
shl
rcr
and
mov
push
sahf
push
cwde
cld
xchg
mov
push
xor
xchg
retf
inc
icebp
es
push
enter
fdivr
jb
mov
sbb
jg
test
mov
aad
sub
pop
xchg
xchg
xchg
data16
mov
cdq
movs
or
movs
and
xchg
sbb
dec
push
ins
xor
iret
mov
jmp
sbb
out
outs
lods
sbb
push
jmp
push
mov
adc
xchg
or
inc
xchg
sub
push
dec
aas
jg
out
ja
ret
jae
pop
dec
xchg
out
lods
aas
lock
je
jl
jae
loopne
hlt
fisub
loopne
ror
or
ins
cld
push
adc
pop
xor
push
pusha
add
pusha
inc
retf
leave
lds
test
test
lock
jnp
cs
sub
cmps
lea
aaa
ss
or
adc
mov
inc
pop
inc
std
or
loop
mov
sbb
ds
or
aaa
dec
jne
dec
jb
shl
push
adc
inc
xchg
out
stos
ret
push
loope
xchg
mov
xchg
mov
imul
xor
das
addr16
leave
sub
push
push
in
dec
mov
lahf
xchg
cld
inc
leave
or
jecxz
and
bound
jge
push
shl
pop
leave
out
shr
or
adc
or
cmp
mov
mov
pop
pop
ins
popf
icebp
inc
xchg
xor
dec
ss
fild
dec
dec
icebp
adc
mov
adc
aaa
mov
outs
sub
sbb
sub
dec
dec
out
dec
or
mov
mov
xor
mov
xchg
or
in
xchg
push
jg
lods
stc
adc
loop
xor
pusha
repnz
jp
inc
nop
cdq
cmp
jp
push
scas
mov
test
out
push
mov
inc
mov
je
push
call
jecxz
aaa
jne
mov
push
das
cmp
fmul
jns
lods
std
das
jo
inc
mov
out
mov
jle
jbe
fild
cld
or
xchg
in
xor
sbb
(bad)
sbb
fs
add
inc
arpl
test
sbb
push
cmp
xlat
ret
push
(bad)
jno
retf
mov
jo
test
mov
fmul
mov
sti
in
mov
mov
sbb
enter
movs
add
jb
adc
mov
cld
adc
mov
push
imul
(bad)
fidivr
jle
fxch
test
es
cmc
out
mov
mov
cmps
pop
xchg
pop
enter
sbb
sub
popf
dec
test
aas
mov
sti
mov
jge
sub
adc
retf
mov
iret
repnz
dec
imul
xchg
cld
pop
xchg
mov
lock
sbb
mov
mov
retf
adc
pop
xor
push
inc
mov
cmp
push
push
push
jno
std
pushf
lea
lock
sbb
test
cmp
gs
inc
push
and
div
pop
rcl
mov
inc
in
inc
adc
add
jne
mov
int3
fnstcw
jns
scas
pusha
ret
test
out
mov
mov
pop
and
fs
add
push
sub
ja
cmp
or
loope
inc
(bad)
rcl
xor
jmp
fist
mov
stc
fs
pushf
or
popf
in
push
out
and
(bad)
push
test
jmp
pop
push
xchg
ja
js
aad
in
int3
add
in
or
jmp
jge
shr
ins
sar
sbb
xchg
popf
or
jg
jne
test
repnz
ins
adc
cmp
mov
xor
xor
je
(bad)
pop
movs
push
loop
out
jnp
mov
push
test
xchg
sbb
push
pop
inc
mov
xchg
loope
mov
push
nop
ret
das
jecxz
pop
popf
push
fsub
ja
cmp
dec
(bad)
scas
add
jno
ins
fmul
aam
push
and
xor
xchg
or
xchg
dec
pop
mov
jns
inc
rcr
daa
(bad)
jmp
jg
pop
push
add
popf
add
ret
outs
pop
mov
and
xchg
fwait
sar
imul
mov
iret
xchg
cdq
add
add
pop
je
dec
or
jle
xor
xchg
stos
(bad)
fs
cld
jae
(bad)
mov
mov
call
mov
mov
lods
(bad)
fstp
cdq
push
cdq
call
cwde
in
xor
xchg
outs
push
add
pop
loopne
sbb
or
jecxz
or
push
out
retf
and
mov
mov
jge
out
cdq
(bad)
xor
stos
push
in
mov
sbb
push
sub
rcr
dec
dec
inc
sbb
mov
inc
pop
xor
inc
and
scas
repnz
push
(bad)
test
stc
retf
mov
fwait
(bad)
test
out
inc
je
add
addr16
inc
push
es
add
test
sub
pop
pop
xor
retf
popa
mov
ror
je
sub
mov
dec
sub
call
ss
ror
in
sub
push
xor
xchg
retf
cmp
loop
xor
in
mov
jae
mul
leave
fdivr
jb
out
repz
iret
and
and
shr
fnstenv
xor
stos
ins
xchg
fldcw
popf
mov
jecxz
adc
push
mov
mov
nop
inc
cmp
sub
jge
xchg
pop
mov
sbb
or
daa
mov
pop
js
add
out
xor
int
mov
outs
or
inc
push
or
out
sub
mov
scas
xor
mov
stos
in
mov
retf
push
imul
das
adc
sub
or
sub
pop
jne
xchg
xchg
mov
out
sbb
xor
shl
adc
stos
cli
add
fs
jb
cdq
push
call
je
fild
adc
push
mov
cmp
dec
dec
adc
repnz
stos
dec
jl
cmp
xchg
lock
push
sti
cmc
mov
jb
ret
jg
sbb
ds
sbb
adc
sbb
mov
mov
push
mov
(bad)
mov
push
fisubr
aam
sbb
mov
(bad)
loopne
outs
cmp
loop
inc
loopne
and
sti
mov
pop
jp
test
repnz
in
sub
mov
mov
sar
stos
xor
imul
icebp
xchg
jno
lahf
cmp
jp
xor
pop
dec
xchg
rol
jns
into
cdq
push
pop
aam
jae
hlt
lea
pop
retf
(bad)
mov
nop
and
pop
xchg
add
xor
and
cmp
push
jne
inc
inc
mov
lahf
or
sbb
loopne
dec
mov
add
sub
sahf
aas
mov
xchg
and
push
xchg
test
push
cmp
cmc
jno
mov
js
and
sbb
adc
shr
sub
popa
(bad)
mov
cmp
int
std
ret
xchg
xchg
in
fsub
mov
les
jmp
stos
mov
add
pop
cwde
and
sub
jno
and
outs
mov
fwait
hlt
add
push
scas
shl
mov
jmp
or
fadd
cmp
movs
jle
push
adc
pushf
pop
mov
sbb
(bad)
aad
adc
fbld
into
aam
pop
fsubr
in
mov
test
loop
pushf
xchg
sbb
jecxz
scas
mov
push
and
pop
pop
cmp
(bad)
arpl
cmp
fistp
std
push
inc
pop
fist
push
dec
mov
add
push
(bad)
out
jne
js
(bad)
out
in
or
sbb
retf
inc
fld
jge
mov
es
jb
cmp
pop
adc
add
clc
aas
retf
dec
lock
in
jnp
in
enter
mov
inc
aas
add
mov
inc
pushw
mov
adc
retf
loope
bound
lea
mov
sub
pop
movs
es
scas
sub
cmp
fdiv
sbb
pop
fbld
inc
or
sbb
mov
es
jo
cmc
sbb
adc
leave
idiv
shr
xchg
dec
(bad)
js
sub
loop
movups
jbe
iret
dec
inc
imul
xor
das
xchg
inc
fwait
push
loopne
retf
cmp
adc
xchg
adc
jno
mov
dec
mov
xor
inc
into
jmp
mov
loop
cmp
icebp
push
sbb
mov
pop
retf
jae
cli
enter
ja
js
fsubr
sbb
mov
outs
mov
jmpw
loop
pop
stos
xor
iret
movaps
adc
jmp
mov
jle
dec
push
scas
pop
popf
out
arpl
xchg
sub
pop
cmc
pop
stc
div
push
mov
lahf
cvtps2pi
bound
inc
jl
xlat
or
not
test
mov
jo
(bad)
into
cmp
jmp
addr16
mov
dec
mov
imul
adc
sub
or
rol
add
pop
mov
add
rol
push
add
retf
or
in
push
ins
pop
add
ret
pop
outs
cmc
xor
js
arpl
pop
test
(bad)
xchg
jge
sar
pop
in
or
not
mov
(bad)
lock
les
aam
jmp
dec
ins
dec
jmp
jnp
loopne
and
mov
jns
out
lea
pcmpeqd
push
lea
repnz
into
jmp
pop
shr
sar
loopne
xchg
xchg
adc
sub
sub
xchg
xor
cwde
adc
jecxz
rcl
jecxz
mov
pop
mov
push
hlt
push
inc
mov
std
stos
(bad)
mov
push
push
cmp
mov
fwait
sub
cdq
loopne
xlat
mov
cs
data16
dec
pop
out
retf
push
ret
mov
push
xchg
xor
ret
sbb
xchg
push
adc
dec
push
lods
movs
xor
enter
pop
cs
std
repz
dec
hlt
jge
adc
in
iret
or
das
fidivr
cmp
imul
(bad)
xchg
ins
sub
inc
add
and
shl
aad
inc
pop
js
and
cmp
jb
mov
repnz
imul
cmp
ror
jge
pop
jbe
movs
test
push
fadd
fs
or
sti
dec
gs
inc
daa
scas
rcl
inc
and
bound
fwait
shr
outs
repz
iret
xchg
xor
sub
(bad)
xchg
fisttp
cld
icebp
(bad)
and
sbb
stc
and
xor
push
fxrstor
pop
xor
movs
cdq
xchg
sbb
popa
mov
pop
add
cmc
scas
inc
js
stos
sahf
sbb
(bad)
sub
pusha
adc
or
popf
les
pop
nop
fwait
mov
xchg
push
push
retf
popf
xchg
mov
inc
push
loop
xchg
push
bound
rcr
add
stc
repz
fsubp
xchg
pop
loop
rcr
(bad)
stc
xchg
sub
push
xchg
mov
dec
mov
cmp
jne
cmp
push
dec
xchg
jae
mov
rcr
div
aaa
mov
dec
mov
into
adc
jp
or
pop
jne
test
and
inc
shr
out
out
or
jo
clc
cmp
rcl
fsubr
sti
cmp
fstp
idiv
mov
pusha
out
aas
jle
lgdtd
sahf
cmp
js
es
aaa
mov
and
cmp
int
pushf
or
nop
xlat
popf
inc
cmc
jns
sbb
inc
ret
(bad)
(bad)
mov
xor
pop
inc
cld
je
pushf
add
nop
inc
ret
pop
cmc
cmps
jl
adc
(bad)
dec
(bad)
lods
mov
mov
sbb
sar
repnz
cmps
or
jge
mov
stos
push
int3
ror
xchg
jb
fdivr
push
lods
iret
jmp
clc
push
movs
jns
push
std
mov
repz
and
pop
repnz
add
adc
icebp
mov
mov
ja
cmc
mov
pop
cmps
inc
mov
sub
pusha
ins
cmp
stos
mov
loope
sub
sbb
jge
in
sub
outs
inc
push
aad
add
gs
ds
test
mul
mov
idiv
movs
push
test
sbb
aam
sub
aaa
stos
(bad)
mov
aaa
lods
pop
mov
adc
(bad)
fisubr
jnp
aad
pop
cmp
fsub
adc
dec
mov
lods
sub
jmp
cld
xor
mov
dec
push
icebp
test
cmp
push
mov
or
pop
dec
lods
call
cmp
js
(bad)
cmps
cs
or
jne
test
xchg
mov
(bad)
mov
daa
cmp
clc
js
lock
stos
pop
ret
aas
(bad)
mov
daa
xchg
or
pop
xchg
loop
ins
mov
jb
mov
jno
sahf
pop
and
imul
push
pop
jle
pop
pop
mov
sub
pop
xchg
(bad)
pop
jne
and
stos
and
mov
outs
inc
or
pop
or
lods
out
sbb
(bad)
arpl
push
js
mul
in
jl
scas
xchg
adc
add
repz
(bad)
in
mov
mov
pushf
push
ret
daa
aad
test
ror
jle
(bad)
fcomp
rcr
pop
std
sbb
jg
lahf
popf
mov
sub
mov
pushf
je
mov
data16
pop
sub
push
adc
xor
dec
pop
pop
in
pop
retf
mov
fs
dec
(bad)
jge
add
cmp
inc
pop
scas
mov
xchg
dec
icebp
fwait
jge
and
stos
sub
test
xchg
inc
or
sbb
iret
aaa
ds
xor
dec
push
jmp
imul
fucomi
dec
call
loope
repz
or
cmovl
cdq
sti
mov
mov
xor
and
jmp
pushf
dec
push
test
adc
dec
ret
cmp
xchg
cmc
(bad)
xchg
ins
mov
aam
retf
jb
retf
add
dec
pop
cmps
mov
pop
shl
(bad)
outs
not
aam
sub
fist
into
jo
push
gs
fidiv
or
dec
push
lahf
mov
sbb
pop
mov
jbe
add
and
push
cmp
sbb
add
sbb
inc
or
nop
outs
ss
loop
sbb
adc
cld
loope
test
test
or
mov
cmc
ins
inc
sahf
cmp
lock
push
pop
jnp
(bad)
loop
cmc
fsub
enter
add
push
jns
mov
jg
movs
push
rcr
pop
in
dec
adc
add
and
add
cmp
and
fcomp
mov
paddsw
aam
jbe
gs
call
and
cmps
mov
mov
shr
cmp
push
out
xor
add
dec
mov
(bad)
sti
lahf
inc
pusha
ficomp
jo
xor
in
mov
add
mov
adc
jge
aas
sub
push
cwde
and
mov
cmps
pushf
stc
lods
push
cwde
setbe
push
aas
mov
movs
mov
cs
enter
jge
gs
sub
stos
jb
fs
retf
push
in
adc
mov
push
clc
or
sbb
cmp
fstp
prefetch
pusha
enter
icebp
cmp
stos
mov
cmp
xchg
inc
and
arpl
ret
adc
push
jp
sub
js
push
ret
loope
not
sar
loopne
sbb
pop
es
push
je
push
fisttp
inc
xchg
push
stc
xchg
xchg
add
fs
xchg
fwait
pop
in
mov
loope
mov
test
sbb
sub
mov
inc
stos
fstp
cmp
in
fnstcw
mov
out
mov
popf
jo
fst
xor
adc
push
xchg
or
adc
and
lods
jae
outs
cli
and
cmc
enter
cs
xlat
add
ins
add
(bad)
xor
gs
push
loopne
mov
xor
add
(bad)
cmp
or
daa
aas
(bad)
lea
in
sbb
push
cmp
dec
repz
mov
dec
shl
adc
retf
pop
fst
sti
adc
add
cmp
or
adc
mov
shr
xchg
mov
xor
(bad)
(bad)
ror
ret
adc
enter
fstp
push
add
ret
jecxz
mov
pop
and
add
cld
push
imul
int
adc
int
mov
pop
movs
dec
cmp
cmc
ficomp
xlat
stc
pop
hlt
es
lods
stc
xor
in
dec
xchg
xchg
out
sbb
fwait
mov
pop
or
dec
sub
(bad)
mov
lahf
sbb
rcr
out
inc
mov
mov
test
clc
lods
jb
jbe
(bad)
dec
sub
xor
in
pushf
and
sub
in
and
lahf
push
inc
icebp
xor
in
xor
add
je
mov
pop
pusha
cmps
xchg
inc
sbb
pop
xchg
adc
ror
add
scas
mul
fsub
repnz
or
dec
out
ret
xlat
mov
aas
mov
bound
repnz
and
cdq
and
div
aas
sbb
scas
add
and
popf
ss
xor
xchg
sar
sub
dec
mov
xor
xor
ud1
stc
dec
shl
push
mov
mov
dec
push
or
pushf
retf
(bad)
enter
mov
call
inc
pop
add
jb
outs
pop
jbe
setge
out
scas
mov
imul
push
and
jmp
cmp
mov
push
push
pop
mov
xchg
adc
fcmovb
inc
popa
or
(bad)
stc
mov
in
push
repnz
fwait
outs
sbb
bound
fimul
xchg
push
push
outs
mov
push
movs
dec
movs
inc
shl
repnz
shr
sbb
into
ins
cmc
xor
(bad)
test
cdq
loope
(bad)
xor
pusha
fldcw
add
xor
aam
fxch
xlat
test
mov
jbe
jmp
and
adc
jmp
mov
dec
or
mov
sar
dec
outs
add
int3
out
sbb
pop
jp
cmc
and
mov
inc
lahf
inc
stos
imul
sbb
xor
mov
pop
outs
in
push
out
adc
addr16
pop
cmp
mov
pop
or
out
bound
cmp
pop
pop
mov
js
mov
jns
jae
ret
adc
jl
das
adc
cdq
inc
sbb
imul
mov
or
mov
pushf
inc
mov
xchg
pop
mov
cdq
inc
cmps
adc
dec
or
retf
mov
ja
mov
shr
push
mov
jmp
leave
mov
ret
or
inc
push
retf
sbb
psubd
jno
mov
movs
imul
and
cmps
fild
(bad)
jmp
adc
or
inc
jmp
mov
pop
in
ins
les
gs
shl
or
mov
fwait
or
aam
sbb
xor
jl
aam
jns
icebp
stos
jecxz
add
xchg
not
ins
adc
addr16
mov
or
fwait
push
nop
rol
pop
adc
dec
adc
mov
ja
fcom
mov
ins
sub
pop
jmp
out
ja
icebp
cmp
inc
aam
call
mov
mul
mov
jne
out
retf
sub
pusha
or
push
cdq
scas
xchg
sub
test
jg
cmp
push
adc
and
test
shl
dec
cmps
cli
mov
xor
xor
jno
pushf
sbb
xchg
div
es
retf
in
test
pop
out
out
sbb
in
and
iret
pusha
dec
add
in
clc
shr
fisttp
dec
cmp
aaa
and
mov
mov
sbb
stc
jmp
xor
or
add
addr16
xchg
adc
mov
popa
xchg
(bad)
and
cmp
(bad)
push
test
scas
iret
outs
add
mov
jge
dec
call
fsubr
ds
push
popf
mov
out
jle
push
je
pusha
mov
ficom
sbb
pop
sbb
jb
sub
pop
cwde
mov
or
lea
mov
fstp
xchg
pop
inc
das
loope
ss
repz
icebp
xchg
mov
xchg
inc
pop
mov
push
mov
pop
lods
test
out
mov
aam
dec
push
jb
fs
cmp
sub
mov
push
clc
or
or
shl
sbb
icebp
data16
cmps
jb
rol
pop
cmp
sbb
xor
inc
dec
hlt
scas
pop
retf
stc
add
add
out
xlat
(bad)
loopne
ja
stc
(bad)
clc
cwde
and
adc
mov
ret
sub
fs
rcr
sub
inc
stc
mov
shr
arpl
jne
nop
dec
cmp
stos
(bad)
fnstsw
jns
xor
sub
test
test
icebp
stos
retf
in
sbb
mov
(bad)
inc
mov
cdq
jb
dec
push
loope
sbb
cld
and
xor
pop
js
test
sahf
jmp
cdq
leave
out
fnstenv
jnp
popa
fdiv
repnz
pop
hlt
std
in
pop
mov
adc
imul
or
loopne
aad
inc
fmul
test
jmp
xchg
xchg
xchg
cmps
dec
or
or
mov
(bad)
mov
adc
xchg
imul
sti
movs
out
xchg
stc
in
test
dec
or
or
jo
or
add
popa
sbb
(bad)
popf
cmps
pop
jmp
mov
paddsw
jg
ins
xchg
loope
pop
adc
mov
xchg
fild
(bad)
lods
mov
mov
lods
ins
and
cmp
ror
dec
jecxz
mov
add
call
ins
or
(bad)
addr16
sbb
js
loope
retf
(bad)
sbb
pop
dec
or
sbb
out
(bad)
ficomp
iret
dec
jl
or
shl
jmp
mov
out
cmps
cmp
add
xchg
xchg
stc
sbb
(bad)
imul
in
sub
sub
fidivr
mov
jnp
jg
adc
xor
inc
inc
sbb
push
pop
xchg
imul
push
jl
mov
inc
and
fldcw
mov
add
pop
push
jbe
inc
sbb
dec
jb
pop
mov
cmp
cmps
sahf
sbb
popa
retf
lahf
jmp
mov
retf
xor
sbb
jno
out
imul
imul
mov
xchg
jno
out
sub
dec
adc
in
inc
hlt
mov
je
cmc
mov
ret
test
out
mov
mov
(bad)
mov
test
icebp
or
repnz
(bad)
xchg
bound
cdq
pop
inc
add
sub
and
pushf
ins
xlat
jp
sahf
xchg
push
adc
fbld
pop
movs
daa
or
or
mov
retf
xor
mov
add
push
and
mov
pop
test
jmp
fsubr
idiv
mov
enter
mov
(bad)
sti
sub
pop
jge
xchg
mov
stos
fisubr
fadd
adc
dec
push
stos
fiadd
pushf
test
xchg
mov
into
in
inc
int
fnsave
(bad)
push
mov
jns
xchg
dec
inc
cmp
push
aam
mov
push
es
in
daa
or
pushf
mul
cwde
or
inc
mov
div
rcr
test
xchg
push
xchg
stos
xchg
addr16
jl
sahf
and
cmps
out
xchg
mov
dec
ins
mov
dec
or
pop
jge
adc
mov
inc
cdq
sub
mov
cmp
push
lea
jecxz
fidiv
jns
pop
loopne
int
jne
ret
and
dec
in
dec
sbb
adc
inc
rcl
fild
ficomp
adc
mov
dec
int3
sbb
mov
push
inc
inc
mov
(bad)
mov
cmp
lock
aaa
cdq
xchg
daa
mov
in
inc
pop
retf
jecxz
mov
bound
sbb
xchg
xor
dec
fs
icebp
cmp
sub
jno
and
iret
mov
cmc
and
mov
pop
add
xchg
xchg
(bad)
inc
sbb
xor
out
push
in
sar
retf
pushf
jmp
sub
mov
jnp
fidiv
inc
cs
ja
pop
jno
retf
jbe
idiv
arpl
pop
dec
(bad)
stos
mov
and
jmp
loop
inc
jb
adc
xchg
mov
and
gs
mov
inc
dec
mov
jae
das
add
mov
mov
out
jge
mov
jnp
popf
jo
lods
jmp
(bad)
(bad)
data16
fnstenv
sub
pop
mov
sub
daa
mov
sbb
int
inc
sub
inc
sbb
je
mov
icebp
fnstcw
pop
aas
mov
scas
(bad)
dec
scas
data16
inc
mov
ja
jmp
sub
mov
push
scas
rol
test
std
inc
(bad)
mov
jl
jg
inc
push
lods
lock
rol
outs
repnz
add
pop
jge
jnp
ficom
xor
call
movs
movs
sub
jmp
adc
sbb
inc
mov
jbe
sbb
shr
mov
xchg
das
mov
je
mov
(bad)
mov
xchg
mov
test
div
and
cli
ret
mov
mov
std
test
dec
pop
stos
or
dec
fnstcw
xchg
stos
pop
shl
das
or
sbb
repz
adc
jno
iret
cmp
stos
xor
pop
inc
test
or
mov
cli
cmp
pop
xchg
nop
sub
pop
fcomp
int
pop
cmp
jnp
(bad)
pop
sub
pop
(bad)
push
sbb
cmps
inc
fwait
pop
retf
iret
push
int
cwde
popf
ss
std
aas
idiv
mov
pop
xor
adc
retf
jle
fsubr
sbb
push
aas
dec
jno
and
ret
sbb
not
out
push
outs
dec
sahf
ins
xor
sub
push
jmp
cdq
xlat
add
loop
in
mov
inc
and
lds
stc
mov
add
xlat
rol
mov
inc
sub
call
out
shl
sub
mov
jg
nop
retf
dec
pushf
cmp
das
jecxz
pop
jb
xchg
nop
addr16
clc
(bad)
mov
xchg
and
mov
push
sbb
sti
repz
out
test
pop
cmp
clc
dec
ja
in
lods
mov
xchg
dec
pusha
xor
into
jne
out
sbb
jnp
fiadd
inc
gs
push
xor
cmp
int
mov
enter
xor
cmp
rcl
idiv
jbe
fld
xchg
fucomi
push
mov
pop
fwait
jle
cmps
sub
rcpps
test
jp
mov
sub
bound
mov
push
jnp
call
stos
dec
xor
fbstp
aas
inc
fistp
stos
adc
pop
bound
sahf
or
sub
mov
retf
adc
bound
mov
popa
int3
cmp
ret
sub
jecxz
loope
test
call
pop
sti
add
retf
and
jle
mov
mov
adc
bound
pop
push
jae
(bad)
mov
pusha
push
mov
xor
jb
and
dec
fwait
out
dec
pop
push
cmps
or
scas
or
sbb
add
(bad)
popf
or
iret
fwait
sahf
pop
mov
cmp
add
gs
fld
pop
ror
ja
call
je
add
rol
jg
dec
lea
pop
dec
xor
fld
mov
mov
dec
xlat
das
aas
jp
push
(bad)
movs
movs
dec
ffreep
pop
repz
fsubr
mov
add
adc
sbb
int
psubd
test
add
push
retf
ins
lods
stos
xchg
or
jns
cmp
nop
dec
inc
jno
pop
stc
mov
xor
add
xchg
lods
movs
jae
retf
sub
dec
pop
pop
dec
mov
mov
lods
popf
cmp
rcr
cmp
mov
in
shl
into
jbe
adc
adc
mov
and
pop
fcmovbe
and
lds
pop
ins
mov
aad
xor
aaa
add
stos
mov
aaa
jmp
mov
lahf
push
leave
push
popf
imul
sbb
retf
mov
lock
or
movs
jecxz
nop
popf
loopne
sub
test
pop
pop
dec
push
ss
xchg
adc
pop
ins
daa
data16
bound
jne
outs
fidiv
inc
jbe
cmps
xchg
loope
js
jl
dec
xchg
ss
inc
lea
ins
dec
sub
aas
adc
xchg
pushf
iret
sbb
cmps
jmp
jl
es
pop
icebp
push
call
pop
push
push
inc
pop
push
sar
pop
xchg
scas
mov
pop
mov
out
push
test
sub
cmps
jnp
frstor
cmc
ss
jge
adc
push
and
enter
call
test
xchg
adc
rcl
rcr
pop
push
das
dec
xlat
mov
dec
push
push
inc
cmp
pop
xchg
inc
jle
loope
fidivr
mov
lds
jns
cmc
xchg
stc
jno
call
push
add
jo
iret
test
adc
test
xchg
stc
std
add
mov
mov
push
lahf
(bad)
pop
ficom
mov
or
mov
in
pop
test
sbb
pop
lods
rcr
out
jle
cli
push
cmp
inc
jb
mov
add
hlt
jb
sub
or
mov
mov
loopne
(bad)
aas
adc
stos
mov
imul
jl
xchg
and
je
jb
jmp
lock
or
fmul
mov
call
cmp
jle
std
lock
adc
pop
sbb
pop
out
add
dec
int3
jg
addr16
pop
pop
mov
cmps
cmps
shl
xchg
adc
loope
add
pop
sbb
test
cld
dec
mov
stos
jp
imul
or
test
lea
stos
mov
into
dec
mov
and
fiadd
sub
out
(bad)
in
hlt
das
sbb
imul
aam
xchg
pop
cmps
out
inc
xor
cli
and
mov
mov
ss
xor
mov
xchg
aas
cld
es
faddp
or
dec
adc
jg
sub
mov
ficomp
test
sbb
test
jge
push
mov
(bad)
cli
ss
xor
sub
(bad)
mov
and
and
rep
nop
test
jmp
leave
add
fmul
sub
mov
adc
lahf
push
xchg
add
outs
sbb
inc
dec
pop
mov
or
ds
dec
outs
add
mov
sbb
lahf
pop
xor
inc
sub
mov
inc
es
push
adc
sub
push
mov
ja
push
mov
xchg
mov
ds
(bad)
mul
outs
fcom
sti
gs
push
sbb
jg
fwait
jg
stos
dec
pop
jmp
bound
adc
into
xchg
jmp
arpl
ins
test
pop
dec
icebp
mov
fdivp
mov
push
clc
je
xlat
ret
test
in
test
pop
lods
mov
cdq
inc
stos
fs
scas
fcomip
pop
jbe
repnz
dec
addr16
pop
popa
pop
pusha
int
mul
mov
ret
sbb
in
int3
pop
out
sti
loopne
dec
es
mov
pop
inc
cmp
std
xchg
sbb
mov
fcmovnbe
sahf
sub
dec
mov
dec
mov
cmp
push
lock
push
(bad)
mov
xor
lahf
sub
loopne
mov
ror
aam
add
add
dec
(bad)
in
push
push
cdq
(bad)
or
outs
sbb
push
adc
xchg
fcmovnbe
mov
mov
test
pop
inc
(bad)
push
jne
shr
test
ins
sub
jae
cmp
push
add
xchg
mov
sub
mov
mov
mov
not
mov
mov
cmp
jno
into
adc
ror
enter
pop
(bad)
fcmovbe
inc
xor
int
test
repz
jp
adc
mov
sub
xchg
pop
fbstp
adc
das
xlat
popa
xchg
dec
scas
mov
xchg
mov
cmp
retf
pushf
pop
xor
popf
ret
xchg
push
mov
jae
add
dec
mov
cmps
movs
repnz
mov
bound
mov
es
call
fcmovnb
jg
or
es
call
div
mov
sub
clc
mov
xor
adc
cdq
jmp
scas
retf
jg
pop
leave
imul
cwde
mov
mov
sbb
movs
push
fs
inc
popf
fstp
gs
mov
lahf
int
ud0
xor
ins
icebp
cs
lods
mov
movs
pusha
pop
inc
les
jne
push
pop
push
cmp
mov
imul
loop
fcmovu
and
xchg
adc
push
fisttp
inc
fisub
jnp
in
mov
fwait
mov
xchg
fcomp
push
out
aas
xchg
and
inc
ins
aad
cmp
fdivr
lods
cmp
int
jl
jbe
add
mov
pop
mov
xchg
out
add
dec
aaa
jecxz
lds
lock
dec
push
sub
sub
mov
adc
inc
pop
push
ror
cmp
mov
mov
leave
cmp
inc
imul
push
test
loopne
xchg
ss
mov
and
fdiv
xchg
fdivr
ins
add
sbb
ffreep
sbb
out
dec
jmp
lds
xchg
stos
mov
les
jg
sbb
sbb
outs
fbstp
fnstcw
add
shr
and
sub
sbb
adc
mov
out
pop
ss
(bad)
cmovno
jmp
fld
(bad)
gs
mov
mov
in
ds
pop
ret
push
adc
cld
retf
pop
sub
out
and
mov
imul
(bad)
icebp
or
pop
rol
jo
jl
imul
xor
dec
add
cmp
addr16
mov
cmp
cmp
pop
lock
dec
push
pop
xor
pop
dec
fsub
sub
bound
nop
lock
ret
movs
test
test
jmp
xchg
int3
add
dec
mov
popa
add
or
mov
rcr
stc
aad
nop
or
pushf
fnstenv
(bad)
add
jg
dec
cdq
and
xchg
mov
(bad)
loopne
in
xchg
rol
adc
mov
mov
sbb
movs
push
jno
mov
hlt
xchg
cmp
mov
fwait
mov
mov
sub
stc
xchg
or
in
push
dec
inc
jp
cmp
ins
adc
dec
push
ret
inc
and
hlt
sub
cmps
jmp
mov
pop
iret
aam
ror
pop
outs
sbb
jae
test
inc
mov
adc
out
test
imul
outs
pop
sbb
xor
(bad)
dec
test
ins
pop
js
xchg
push
dec
jno
sahf
mov
retf
dec
or
sub
mov
sahf
call
les
call
in
dec
push
pop
mov
dec
cmp
iret
cld
mov
jmp
sub
(bad)
xchg
mov
mov
fs
(bad)
lock
dec
or
(bad)
lds
cmp
mov
repz
mov
sbb
enter
and
call
mov
cmp
inc
mov
mov
gs
or
neg
aas
jbe
mov
jg
push
xchg
add
int3
idiv
stos
pop
data16
xor
icebp
or
add
mov
fs
icebp
cld
out
pop
gs
mov
pusha
mov
push
dec
mov
or
test
out
and
lahf
je
and
jne
hlt
xchg
fucomp
xchg
push
ds
sub
test
and
retf
cmp
mov
xchg
mov
jmp
int3
(bad)
in
stc
mov
dec
pop
mov
dec
sti
mov
in
add
and
cs
sbb
pop
into
mov
sub
adc
mov
jmp
xchg
lock
inc
aas
mov
test
pop
arpl
xor
outs
mov
push
push
loop
cmps
cmps
xor
add
mov
fsubr
mov
fwait
push
mov
and
mov
sbb
shr
inc
push
nop
ret
xor
mov
jge
(bad)
push
push
dec
iret
ret
stc
sbb
xor
cwde
cmp
jbe
push
push
xor
sti
pop
imul
scas
data16
push
jns
lds
cld
or
push
ret
and
mov
cmc
push
pslld
jmp
loope
xchg
out
loopne
dec
or
mov
cmp
fild
sbb
enter
xor
and
std
scas
test
mov
test
mov
dec
inc
in
cmc
and
pop
in
and
sbb
cmp
imul
xchg
js
mov
pop
cmp
ret
xor
pop
mov
jns
fidivr
loopne
mov
jg
add
sub
jns
adc
das
dec
int3
xlat
or
dec
mov
fs
sub
movs
cmps
push
mov
push
jno
ds
lds
sbb
lock
lahf
jmp
aad
push
ss
scas
inc
jns
jmp
and
shr
mov
in
fmul
mov
mov
dec
gs
or
inc
add
test
mov
daa
outs
inc
loope
pop
ins
sbb
repz
pop
dec
cmp
mov
sti
cs
pop
mov
fistp
ffreep
aad
xchg
add
(bad)
mov
movs
mov
call
sub
or
mov
sub
pop
add
sbb
jecxz
into
cmc
sub
push
out
mul
add
test
mov
cmp
dec
outs
pop
pop
mov
dec
push
cmp
sar
sahf
cmps
stos
(bad)
stos
mov
outs
mov
std
pop
imul
pushf
cmp
mov
in
cwde
xor
ficom
fsub
jbe
jnp
cmc
jle
fsubp
shr
inc
pop
push
scas
loop
es
aas
fbstp
adc
inc
or
pushf
mov
jmp
jb
stos
rcl
and
aad
sub
mov
repnz
loopne
aad
adc
aam
mov
pop
pop
out
ficom
aas
aad
jmp
mov
sti
sbb
pop
cdq
xor
or
imul
xor
scas
rcr
cdq
xor
iret
mov
leave
mov
cwde
mov
movs
xor
ret
adc
sub
cmc
adc
das
dec
inc
(bad)
adc
imul
pop
ins
inc
clc
push
(bad)
out
pop
lock
push
cwde
adc
mov
cmp
shl
imul
scas
int
dec
out
idiv
(bad)
fdivr
cli
dec
push
loope
cmp
and
inc
pop
(bad)
and
or
pusha
test
dec
(bad)
dec
and
arpl
inc
pop
adc
xchg
pushf
pop
push
aas
dec
mov
push
fimul
fwait
cmp
or
or
adc
movs
xor
repnz
das
stos
push
ret
(bad)
jecxz
outs
les
lock
popf
inc
setg
nop
cmp
jge
or
add
jecxz
mov
add
cs
dec
std
mov
mov
pop
mov
xchg
push
add
(bad)
xchg
mov
fmul
push
int
push
or
sub
xor
int
mov
mov
aam
ret
(bad)
push
ss
rol
lods
out
inc
mov
sub
adc
jne
mov
ror
scas
call
rol
sub
push
mov
icebp
jmp
aas
inc
lahf
cmp
loope
dec
mov
xor
hlt
xor
shl
ss
retf
xor
mov
loope
jo
mov
cmp
mov
push
push
into
sbb
cbw
xchg
pushf
sub
std
sbb
outs
push
pop
sbb
mov
mov
pop
repnz
fwait
iret
pop
inc
data16
mov
pop
add
clc
mov
mov
cmova
adc
pop
pop
in
daa
adc
cmc
mov
cmp
cmps
add
lahf
mov
adc
add
mov
into
mov
push
push
aam
push
add
inc
mov
jl
mov
test
xor
sbb
push
pushf
xlat
jns
adc
xor
pop
xchg
mov
test
adc
call
popf
adc
jne
ins
sti
cmp
scas
lea
in
xor
push
(bad)
sbb
xchg
pop
pop
gs
xchg
in
cdq
cmp
jl
or
jmp
cmp
and
xor
fimul
ins
das
gs
mov
dec
mov
les
arpl
mov
pop
and
sub
jge
and
add
retf
inc
mov
in
fwait
sbb
add
mov
stc
sub
or
push
js
xor
pop
dec
pop
mov
movs
jb
add
inc
adc
fwait
cmp
mov
sub
sub
movs
pop
push
pop
mov
inc
test
push
pop
sub
into
in
dec
retf
mov
dec
xor
jne
mov
mov
or
inc
xor
js
sbb
sahf
addr16
mov
mov
xor
cmp
jae
add
int
xor
ds
xchg
mov
mov
fs
inc
mov
mov
mov
inc
not
repz
fld
mov
jmp
sahf
pop
inc
xchg
jg
cmc
jle
adc
push
and
sub
pop
cwde
ja
ror
outs
mov
cdq
inc
cmp
mov
iret
in
inc
div
retf
or
sbb
mov
into
fnsave
or
mov
xchg
mov
out
jb
fmul
mov
gs
(bad)
jmp
retf
xchg
jmp
es
sub
test
popa
dec
cmps
xchg
popf
pop
jmp
popf
add
fst
cmp
cmps
(bad)
sbb
sub
jle
rcl
mov
mov
ret
push
cmp
and
idiv
push
shr
inc
jbe
fdiv
ret
mov
pop
jbe
(bad)
outs
fiadd
xor
add
xor
dec
mov
add
sti
push
pop
lahf
clc
sahf
ficom
cs
push
push
fucomp
pop
sti
mov
popa
call
outs
inc
(bad)
mov
add
mov
jecxz
add
add
gs
and
pop
into
cmp
inc
dec
mov
cwde
test
pop
jo
out
ficomp
shr
and
fwait
inc
mov
and
mov
call
fwait
xchg
push
adc
and
loope
pop
test
inc
pop
mov
cs
mov
daa
adc
pop
rcr
loopne
popf
jmp
xchg
xchg
cmp
sbb
stos
popf
in
fwait
hlt
fs
jecxz
daa
inc
ds
pop
popa
jns
popf
push
mov
std
or
inc
dec
and
addr16
pop
and
rol
mov
int3
cmp
hlt
into
cmc
outs
add
mov
jne
xchg
sbb
adc
(bad)
movs
shr
cld
cli
ret
pop
(bad)
fwait
mov
xchg
int
inc
mov
xchg
mov
dec
aas
sbb
je
stos
mov
mov
jb
pusha
mov
sbb
in
jle
mov
mov
push
sub
sub
jp
and
std
mov
pushf
bnd
icebp
imul
xor
cmp
add
sahf
rcl
xchg
or
nop
xor
pushf
push
stos
dec
mov
or
add
xor
aad
mov
sbb
cmp
or
(bad)
pop
sub
lock
(bad)
retf
xchg
jl
cmc
or
scas
jne
xor
pop
add
mov
dec
fbld
outs
push
iret
int
js
ret
add
and
pop
or
ret
cmp
pop
nop
gs
bound
inc
xchg
fimul
retf
xor
push
rcr
mov
dec
push
ds
xor
mov
in
(bad)
cmp
jb
cmps
pop
mov
jle
arpl
push
mov
ret
pushf
outs
and
mov
inc
jmp
les
arpl
add
loop
pop
cmp
cmps
lock
add
push
push
or
retf
shr
jp
in
ins
push
push
jl
pop
retf
pop
push
cdq
(bad)
imul
mov
in
sbb
in
or
dec
cmp
aas
stos
cmp
pushf
pop
cmp
and
mov
add
sub
adc
xchg
lods
lods
mov
rcr
scas
cmp
ret
ffree
or
mov
std
mov
xor
mov
test
test
xor
sub
adc
inc
out
cmp
push
adc
call
xchg
outs
ret
out
and
pop
pop
pop
jmp
xchg
jg
sbb
cli
inc
sub
push
(bad)
xor
popf
push
arpl
outs
push
mov
inc
push
dec
imul
imul
xchg
dec
loop
dec
scas
(bad)
in
in
cli
adc
loope
xchg
jae
xor
jnp
mov
mov
mov
addr16
xchg
mov
jne
mov
ficom
mov
push
pop
daa
cmp
movs
ss
out
(bad)
jge
ror
push
nop
sbb
cwde
mov
sbb
adc
(bad)
dec
sub
or
cmp
loopne
jmp
mov
out
retf
xchg
mov
or
fidiv
jb
cmp
push
cmp
repz
dec
push
loop
rep
xor
out
cmps
xor
sbb
dec
inc
mov
jmp
adc
not
adc
xchg
xor
ja
outs
retf
sahf
sbb
(bad)
cmc
xchg
repnz
xchg
(bad)
fcom
in
imul
aaa
push
push
jo
leave
lahf
jg
add
xchg
mov
out
pusha
(bad)
xor
cs
in
cmps
neg
adc
mov
and
cs
sbb
repz
push
ret
jns
jbe
int
jo
fidivr
sar
cmp
aad
cmp
icebp
in
inc
and
mov
inc
adc
inc
inc
jge
aaa
mov
cmp
ficomp
test
pop
inc
cwde
js
jnp
sar
das
mov
pushf
retf
inc
cmp
cmp
fistp
scas
push
xchg
test
cmp
xchg
push
repnz
js
or
dec
mov
mov
out
imul
or
fdiv
cmp
mov
call
mov
xchg
jp
dec
adc
out
daa
xchg
cmps
(bad)
mov
mov
cmp
enter
int3
mov
xchg
lds
cmp
add
outs
into
into
test
dec
imul
mov
add
pop
adc
movs
pusha
loope
cs
mov
cmp
jecxz
cs
adc
fdivr
mov
adc
enter
adc
fadd
xchg
or
call
add
and
inc
fwait
push
lods
jo
aad
cmp
dec
stc
and
mov
rcl
shl
adc
adc
jns
sbb
(bad)
xchg
fwait
push
in
mov
(bad)
xlat
scas
aaa
div
xor
adc
xor
sub
icebp
in
out
sti
loopne
pop
mov
mov
jnp
movs
jle
retf
call
pop
ror
sti
sbb
xchg
xor
cmp
jle
push
mov
sbb
or
cmp
lea
mov
(bad)
sti
loop
mov
mov
dec
mov
stc
sub
pop
popa
dec
dec
rcl
add
or
mov
sub
cli
gs
jne
sub
mov
mov
imul
mov
jmp
jmp
inc
jmp
scas
and
out
arpl
mov
cwde
lahf
xchg
dec
outs
ret
sub
add
cmps
movs
nop
add
pop
loope
jge
lahf
bound
mov
dec
bnd
retf
add
loop
loope
cmp
je
dec
movs
shl
dec
je
out
push
bnd
fnsave
jne
xor
ret
mov
inc
inc
push
jl
sbb
test
in
mov
ret
adc
pushf
xor
push
xor
ja
push
cs
test
jmp
pusha
inc
xchg
and
icebp
rcl
lahf
push
mul
mov
mov
ins
neg
push
jge
xchg
push
setne
and
std
test
movs
add
das
jae
add
ret
inc
sahf
sbb
dec
and
int
aas
idiv
mov
mov
xchg
call
cmp
or
lea
test
sar
mov
or
mov
fwait
push
dec
dec
and
dec
add
data16
push
mov
or
ror
test
push
test
xor
(bad)
xor
aaa
mov
jbe
and
xor
movs
test
mov
outs
push
cmp
fucomp
mov
mov
xchg
aaa
lock
xchg
push
test
loop
in
add
mov
adc
call
pushf
push
push
shl
xor
popf
xor
mov
adc
dec
push
addr16
cwde
fild
int
(bad)
mov
sbb
pop
inc
or
push
add
aaa
adc
inc
xchg
(bad)
mov
jecxz
pop
cld
jbe
fild
and
stos
sub
fistp
pushf
cmp
pop
jl
loop
popa
and
(bad)
dec
xor
push
daa
cmp
movs
loopne
jle
fadd
or
sar
inc
scas
inc
mov
ret
aam
enter
sub
inc
pop
xchg
je
xchg
in
jge
ficom
or
sbb
mov
and
dec
call
ds
ret
fcmovbe
cli
into
and
jno
push
pop
jb
xchg
sub
add
push
aam
cs
xchg
js
and
and
or
fiadd
mov
mov
xchg
gs
sbb
mov
ror
in
push
push
pop
repz
in
and
and
sbb
cmps
mov
jl
cmc
or
push
dec
cmp
nop
xor
das
(bad)
imul
inc
jo
mov
cmp
rcr
xor
add
jmp
mov
xchg
mov
outs
inc
mov
into
xchg
cmp
adc
ret
js
inc
xchg
push
sub
cmps
test
pop
stos
hlt
dec
std
in
xor
into
stc
dec
xchg
test
jmp
cmp
jle
in
test
cmp
test
je
sub
jl
movs
jle
fidiv
cs
sbb
pop
push
rcr
stc
ins
out
daa
lods
int3
pusha
icebp
(bad)
sub
push
mul
lods
add
push
icebp
jg
mov
add
mov
leave
lahf
ins
enter
or
pop
sti
cli
sbb
adc
daa
and
jae
inc
jle
out
jbe
cmc
adc
push
sub
movs
outs
and
jbe
xor
sbb
int
int3
loopne
xor
push
scas
pop
cld
mov
and
mov
aam
jno
sbb
pusha
out
adc
test
xor
dec
loopne
lock
pop
inc
aam
cmp
ds
jecxz
push
dec
scas
adc
out
fnstsw
sub
and
movs
(bad)
xchg
nop
lea
mov
dec
iret
inc
jbe
test
std
lods
sbb
bound
into
imul
int
xor
push
fmul
in
loopne
fsub
fs
xor
mov
push
outs
push
adc
adc
mov
adc
and
sub
sbb
jmp
loopne
pop
xchg
sub
and
mov
or
mov
cwde
pop
ror
imul
push
in
cmp
dec
pop
les
and
fisttp
loopne
enter
nop
sbb
adc
stc
ds
call
into
mov
dec
sub
fwait
push
imul
outs
jmp
ret
popa
push
pop
pop
mov
xchg
push
cmp
addr16
adc
push
mov
fwait
and
sub
xor
lods
bound
inc
mov
test
xchg
das
loopne
add
mov
cmps
rcr
pop
ret
jno
or
aaa
int
(bad)
mov
repz
inc
sar
leave
popf
push
pop
out
add
add
call
sub
iret
mov
scas
retf
cmps
enter
aaa
outs
cld
dec
stc
cli
or
and
push
cs
mov
out
xlat
in
daa
lods
in
inc
mov
movs
popf
sbb
push
fcmovnu
(bad)
test
xchg
pop
sti
xchg
and
stos
movs
fstp
pop
xchg
cmp
retf
pusha
sub
sub
sahf
pop
gs
pusha
push
sbb
fldlg2
ins
retf
xchg
test
jp
addr16
sub
xchg
bound
repnz
les
imul
dec
mov
ins
aaa
mov
test
imul
repnz
cmp
add
(bad)
push
clc
mov
push
xlat
cs
xchg
popf
rcr
push
pop
int
test
push
mov
sub
add
retf
inc
inc
cmp
inc
add
jo
shl
add
and
sub
hlt
leave
mov
js
mov
fiadd
mov
lahf
mov
pusha
mov
adc
nop
into
add
pusha
and
stos
mov
ins
pop
cmp
ins
jecxz
mov
inc
and
mov
imul
inc
lahf
aad
sbb
movs
sahf
rol
scas
xor
cld
pop
das
mov
rcr
push
xchg
into
mov
adc
mov
and
push
jecxz
int
xchg
cli
push
add
mov
pop
jns
adc
xchg
adc
cmp
out
or
xchg
lea
add
aam
push
pop
sub
add
imul
movs
pop
pop
pop
jns
inc
xchg
stc
lods
pop
and
mov
add
cmp
cli
push
mov
pop
in
sahf
das
fbstp
push
pop
ror
lock
push
push
pushf
pushf
xchg
sti
inc
or
xor
mov
stos
out
inc
pop
jns
sbb
dec
push
retf
cmp
sti
adc
mov
fwait
sbb
xchg
xchg
mov
sahf
adc
pop
rol
out
test
das
push
outs
pavgb
sub
mov
jmp
fadd
lods
outs
mov
and
icebp
arpl
es
(bad)
dec
push
(bad)
jb
sub
pop
xchg
fcomp
xor
test
stos
inc
or
call
in
sbb
sahf
(bad)
(bad)
jnp
lds
jne
jmp
mov
les
in
loope
ins
push
arpl
jp
fwait
js
jmp
pop
add
sbb
aad
mov
cs
mov
jns
inc
xchg
imul
or
neg
mov
push
sub
push
mov
inc
icebp
dec
pop
push
xchg
mov
retf
icebp
pop
test
jae
add
sahf
and
pop
ds
dec
adc
mov
out
jns
mov
pop
retf
adc
lods
(bad)
inc
mov
inc
or
xor
(bad)
in
sub
in
push
test
loope
rcl
inc
fdivp
fmul
mov
adc
in
jg
sub
xchg
in
lea
fdiv
or
jg
cmp
and
retf
mov
jmp
popa
popa
jae
xor
aaa
jl
add
int3
sar
out
push
aas
hlt
xor
dec
ss
push
jnp
sbb
test
call
(bad)
mov
ja
int
pop
dec
cdq
cmp
pop
xor
push
adc
xor
and
jmp
push
jg
call
add
cmp
push
push
jg
jmp
ins
add
popa
xor
xchg
ficom
adc
enter
ins
push
gs
mov
cld
pop
fcmovnu
cwde
dec
adc
cmp
call
xor
scas
fwait
mov
cmp
mov
mov
ja
mov
pop
outs
shl
inc
mov
retf
xor
fsubr
jb
(bad)
sub
sbb
test
ss
popf
mov
push
jecxz
sub
fstp
mov
fild
(bad)
hlt
popf
je
jbe
call
mov
pop
xor
mov
jbe
push
jnp
imul
sbb
scas
in
xor
in
add
aad
loopne
in
imul
xchg
xor
pop
sar
lods
cmp
test
neg
das
in
mov
pop
test
push
dec
imul
sbb
ret
jmp
repz
inc
iret
add
adc
lock
mov
jno
push
push
es
add
push
mov
pop
push
mov
inc
mov
cmp
mov
cli
mov
call
adc
jmp
call
(bad)
sub
or
hlt
add
or
pop
sub
mov
sub
out
pop
in
sub
mov
mov
sub
dec
into
adc
aad
and
daa
ror
fnsave
aaa
loopne
jo
aas
push
sbb
pmaxsw
push
or
int
dec
scas
push
mov
jbe
add
push
into
sahf
inc
idiv
mov
(bad)
dec
or
enter
push
mov
mov
js
inc
pop
or
mov
iret
les
popf
xchg
adc
xor
or
mov
or
popa
stos
out
imul
xchg
dec
mov
push
add
inc
push
xchg
cmp
mov
fdivr
xor
jnp
pop
inc
push
sbb
pusha
xchg
push
push
scas
fs
leave
out
jns
sub
xor
inc
xchg
std
cli
icebp
test
push
mov
scas
cli
fst
ins
and
add
jns
jmp
jmp
adc
in
cld
mov
jbe
ins
adc
int3
outs
loope
xor
std
aad
stc
arpl
stos
neg
add
call
or
and
xchg
pop
imul
not
dec
adc
ret
mov
mov
cmp
repnz
push
jns
jno
jb
call
les
xor
jg
jae
cmp
je
ins
xor
and
test
mov
lea
lea
stos
aam
add
sub
paddw
sbb
sbb
jp
adc
xor
mov
mov
xor
aad
xchg
mov
xor
xchg
add
scas
stc
popf
and
sub
jo
fsub
xchg
sbb
push
leave
iret
inc
mov
cld
sub
not
bound
adc
push
push
outs
adc
movlps
xor
adc
xor
push
ret
mov
loope
aad
mov
loope
gs
cdq
xchg
or
sahf
push
rcl
mov
pushf
mov
lahf
out
stc
adc
loop
mov
sub
inc
dec
add
push
lahf
adc
or
adc
ror
(bad)
dec
add
add
jb
push
aas
outs
sbb
gs
addr16
bound
sti
cmp
adc
xor
out
psrlw
in
fs
clc
mov
leave
sub
dec
mov
cdq
pop
lahf
out
(bad)
leave
call
inc
dec
retf
dec
pop
aad
push
add
arpl
fdiv
sub
fimul
push
add
(bad)
aam
mov
push
mov
out
jecxz
inc
mov
cmp
mov
test
rol
and
mov
mov
lods
mov
adc
test
push
dec
loope
xchg
cmp
pop
xor
cwde
jg
and
test
retf
(bad)
mov
mov
inc
xchg
mov
mov
lods
add
ins
jmp
jno
jo
xor
push
cmps
lock
sbb
ds
stos
stc
lea
jae
jbe
xor
jne
dec
int
mov
pop
push
jne
arpl
ja
lahf
sub
aas
sub
adc
in
lahf
mov
out
dec
push
test
in
sbb
div
push
dec
popa
leave
int3
mov
in
es
aaa
cmp
cmps
xor
test
in
test
mov
pop
call
jnp
inc
inc
ins
data16
or
fbld
mov
sbb
imul
mov
(bad)
cmp
mov
enter
je
cmp
out
fidiv
pop
cdq
ret
mov
xor
outs
jbe
call
(bad)
loopne
mov
or
pushf
mov
hlt
jne
pushf
out
push
push
daa
cmp
ins
mov
sahf
fsub
fimul
loop
lods
sub
addr16
pop
retf
pop
xchg
xor
movs
mov
xor
fsub
xor
add
frstor
cli
movs
adc
test
repz
out
fsub
sub
push
xchg
push
shl
mov
movs
cmp
icebp
call
sub
out
inc
ss
mov
adc
jp
loopne
out
ja
fstp
push
mov
out
scas
mov
loopne
call
mov
inc
push
out
rcr
mov
int3
dec
pusha
retf
xor
jmp
jne
cmp
push
shr
push
(bad)
push
xchg
jae
xchg
fbstp
mov
mov
sub
outs
cmp
mov
lock
js
or
dec
jle
mov
jns
sub
sub
or
push
mov
push
fcom
sbb
dec
add
jno
inc
xchg
mov
imul
(bad)
ins
mov
cmp
pop
fst
xlat
outs
xor
dec
pop
shl
(bad)
add
mov
(bad)
jb
adc
xor
jecxz
outs
fistp
jbe
ret
ffree
xor
bnd
lock
repnz
push
adc
dec
jmp
mov
xchg
jns
jmp
dec
xor
mov
out
and
cmp
jmp
call
and
push
jnp
jmp
aam
lahf
sbb
mov
push
cli
mov
js
push
or
cmp
push
fwait
retf
movs
mov
retf
adc
pop
and
mov
scas
fcom
int
in
fldcw
jecxz
inc
xlat
jecxz
ins
mov
inc
sub
dec
dec
mov
das
jl
xchg
movs
or
push
scas
pop
les
std
(bad)
imul
xchg
pop
es
out
add
enter
lods
sub
push
mov
and
out
ds
jmp
xor
jno
movs
mov
mov
int3
pushf
(bad)
xchg
stc
fwait
cmp
sti
cld
and
add
adc
cmp
test
dec
cwde
fsubr
cmc
or
imul
jp
retf
xor
outs
call
icebp
xchg
sub
push
stos
jns
shl
mov
cli
imul
pop
jecxz
ds
cmp
pushf
cmp
hlt
xchg
imul
inc
sub
pop
push
and
inc
jo
adc
mov
cmp
js
pop
push
push
arpl
sbb
mov
mov
xchg
aaa
(bad)
or
jno
lahf
jle
mov
pop
ins
sub
fidiv
dec
iret
retf
xchg
test
aad
and
dec
cmp
cwde
push
sbb
out
mov
or
imul
(bad)
lods
movs
xor
lods
xchg
inc
and
es
pop
dec
adc
scas
inc
int3
int3
data16
neg
jle
shl
mov
into
scas
out
xchg
adc
pusha
jnp
mov
mov
mov
inc
shl
popfw
and
std
adc
pushf
call
and
clc
and
pop
movs
imul
jnp
add
gs
aad
xor
les
fstp
mov
into
pushf
and
xor
sbb
leave
and
inc
stos
arpl
in
adc
mov
mov
mov
fisub
ds
inc
inc
push
iret
dec
pop
cmp
jecxz
ja
fsubr
in
inc
movs
push
in
mov
or
sar
or
jo
ss
ins
sbb
mov
mov
mov
or
sub
add
movs
or
mov
loopne
xchg
rcl
fldcw
sub
jmp
(bad)
sahf
aas
ja
out
in
or
lahf
and
sbb
iret
aas
shl
xchg
add
std
fadd
fist
call
scas
mov
iret
adc
stos
mov
dec
out
mov
xchg
mov
aam
movs
jmp
stos
(bad)
fiadd
pop
nop
addr16
lahf
jns
adc
clc
and
jo
pop
push
inc
mov
repnz
and
sub
pop
fadd
js
int
cmp
out
sar
cli
adc
test
sub
nop
push
fcomp
inc
arpl
dec
data16
iret
mov
push
popf
int
jp
inc
sar
pop
sbb
push
movs
mov
push
jno
scas
(bad)
dec
jb
jmp
mov
xchg
push
jecxz
ins
mov
sahf
ror
add
mov
push
in
lahf
fmul
or
aad
dec
das
fdivr
mov
xlat
data16
repnz
ror
push
and
adc
enterw
sbb
not
push
mov
dec
push
out
test
or
fimul
retf
cld
ins
leave
or
xchg
mov
sub
inc
cmp
add
and
bnd
xlat
int3
adc
loopne
cdq
pop
out
dec
or
outs
adc
xchg
jle
cs
pop
jmp
add
pop
fnstcw
push
ds
icebp
fdivr
pop
mov
outs
push
push
mov
(bad)
xlat
mov
rcr
or
std
adc
mov
pop
and
fwait
inc
in
jmp
in
stos
cmp
out
and
add
iret
fidivr
lods
pop
(bad)
cld
(bad)
xor
stos
shl
div
movs
sbb
cdq
mov
mov
cmp
dec
shl
imul
push
mov
mov
out
dec
dec
inc
in
inc
cdq
sbb
inc
push
aaa
sub
pushf
push
adc
out
ficom
adc
mov
mov
sbb
mov
jmp
repnz
lds
(bad)
xor
lahf
mov
xor
inc
dec
pop
adc
in
andnps
push
xchg
addr16
pop
test
and
je
dec
(bad)
cli
arpl
sub
mov
add
stc
iret
push
syscall
stc
mov
adc
mov
jl
out
in
inc
(bad)
cmp
retf
mov
inc
xor
mov
cmp
jg
movs
sbb
xchg
cmps
jmp
lods
lods
adc
inc
stc
and
sar
and
jb
xor
xchg
pop
in
repz
out
mov
imul
nop
cwde
leave
and
or
mov
test
xor
imul
cld
hlt
inc
scas
inc
sub
mov
int
lods
test
dec
fs
or
test
jl
mov
pop
jl
or
mov
mov
sbb
or
xchg
inc
lods
call
out
int3
xchg
shl
(bad)
xlat
adc
pop
xchg
mov
mov
sahf
jg
xor
dec
fidivr
nop
jbe
fwait
mov
cmps
sub
shl
dec
gs
stos
fisub
cmps
daa
lock
out
lock
add
int3
out
jecxz
cmps
dec
test
mov
je
mov
add
call
xlat
adc
mov
xchg
and
cmps
hlt
iret
lds
jmp
pop
or
ret
xchg
or
fadd
jno
cmc
sbb
or
add
rcr
push
or
vpunpckhwd
jp
xchg
popf
and
jmp
aaa
int3
mov
call
aas
fdivr
inc
dec
stos
mov
out
outs
mov
retf
fsubr
jle
(bad)
inc
pop
mov
(bad)
int3
pop
pop
in
mov
xchg
xor
add
mov
push
mov
or
iret
clc
mov
mov
mov
or
out
in
cmp
push
jp
cmp
scas
sahf
jae
mov
pop
(bad)
into
mov
in
dec
out
cmps
ja
jle
in
jno
aad
xor
hlt
mov
sbb
xor
test
aad
popf
repz
sbb
cli
add
leave
into
mov
mov
mov
idiv
mov
test
mov
inc
gs
sbb
dec
sbb
fwait
xchg
ins
fistp
and
mov
xchg
inc
cmps
dec
and
or
jecxz
and
or
xchg
inc
or
ror
leave
mov
push
jo
js
push
lods
pop
push
bound
jb
push
in
data16
ins
adc
sub
or
xchg
stos
and
pop
(bad)
pop
sub
lds
fimul
rcl
inc
push
sub
daa
not
and
pop
dec
mov
fmulp
xor
pop
inc
cwde
int
aas
add
(bad)
int
(bad)
test
daa
dec
pop
mov
pop
mov
nop
cmp
aam
sub
les
cld
xchg
inc
xchg
push
repz
or
(bad)
sub
jbe
dec
xchg
mov
sub
dec
shl
push
inc
mov
stos
idiv
mov
xchg
add
hlt
sub
repnz
cli
xchg
pop
inc
and
loopne
sbb
add
out
in
int3
popf
mov
out
js
push
clc
mov
pop
mov
lods
inc
adc
mov
push
xchg
jbe
jmp
push
or
cmc
in
mov
cwde
test
mov
dec
jg
sti
pop
jp
sbb
pop
dec
add
jmp
fstp
inc
enter
jge
mov
add
and
dec
mov
lods
in
loope
je
jl
ss
jl
aaa
jmp
xor
pop
imul
and
mov
inc
not
imul
jg
int3
mov
mov
mov
dec
ret
inc
(bad)
mov
mov
dec
xor
scas
mov
adc
cmp
cmps
push
mov
pop
out
stc
std
mov
cmps
and
dec
cmp
push
daa
mov
or
loop
add
out
push
add
mov
movs
adc
dec
repz
daa
rcl
dec
fldcw
repz
loop
sub
and
in
bound
sub
and
ss
xor
(bad)
fwait
rcl
lock
push
leave
addr16
push
(bad)
xchg
test
jge
mov
push
loopne
xchg
xor
repz
jmp
bound
dec
js
out
xor
pusha
fnstcw
ror
ror
xchg
outs
fsub
pusha
sbb
dec
movs
jle
mov
ss
rcl
int3
(bad)
push
mov
mov
xor
xchg
push
imul
or
test
sub
aas
pushf
(bad)
aas
cmp
push
out
neg
ins
cmp
call
xlat
test
daa
fsubp
mov
outs
xor
ret
nop
aaa
(bad)
and
and
mov
adc
rcl
inc
and
adc
movs
test
enter
push
loop
adc
lds
jno
sub
mov
aaa
into
out
nop
bound
sub
mov
sub
(bad)
xchg
inc
push
movs
add
mov
add
pusha
xor
fadd
jg
adc
test
pop
fistp
and
into
mov
fist
arpl
inc
adc
mov
les
xchg
add
ja
and
in
mov
jne
lods
mov
fadd
mov
enter
inc
jb
fs
jno
out
or
out
sbb
mov
push
fnstenv
cmc
jle
pop
mov
mov
mov
dec
xor
or
inc
pop
movs
test
aad
dec
cmp
inc
dec
test
test
xor
outs
inc
sub
dec
mov
cwde
mov
and
imul
int3
sahf
(bad)
int
or
test
xor
mov
jle
test
and
pop
es
xchg
xchg
scas
(bad)
(bad)
add
sbb
dec
cmp
loope
int
je
outs
or
cli
pop
inc
push
or
and
xor
imul
imul
lods
dec
or
mov
pushf
not
jg
dec
std
test
sub
(bad)
mov
sbb
loope
std
sbb
imul
cdq
push
xchg
fidivr
daa
sub
mov
xor
leave
data16
or
mov
or
and
lea
adc
dec
adc
aad
aam
in
xchg
mov
mov
ja
jne
pop
(bad)
lods
hlt
sub
mov
sbb
(bad)
ja
in
push
xchg
pop
dec
or
imul
lahf
dec
in
sub
dec
ret
sbb
repz
movs
adc
and
stc
out
cs
sub
in
out
cmps
adc
out
or
aam
xor
xor
pop
jmp
call
(bad)
nop
retf
iret
aad
push
cmp
xchg
imul
cld
cmp
je
xchg
push
and
add
lea
out
call
xchg
or
cmp
mov
jp
mov
or
xchg
pusha
pop
cwde
xchg
sub
or
mov
sbb
adc
fstp
inc
loopne
add
adc
loope
jbe
mov
imul
sbb
shl
xchg
icebp
das
push
outs
cwde
mov
push
cwde
jbe
loopne
or
in
mov
shr
retf
dec
xchg
mov
xor
push
xchg
pop
jbe
lods
cmp
lods
jnp
jecxz
cmp
inc
aas
cmps
(bad)
(bad)
idiv
aad
pop
retf
pop
fisub
(bad)
in
rol
cmp
or
cmp
mov
dec
and
int
xchg
and
add
loope
mov
imul
jmp
cmp
rol
sbb
stos
jno
pop
jne
dec
(bad)
std
int3
push
jno
dec
jge
and
movs
dec
cmp
popf
dec
sub
jbe
sbb
pop
bound
bound
(bad)
xchg
cmp
pop
sub
pop
ret
mov
jmp
in
sahf
scas
add
mov
mov
out
test
or
or
sub
cld
sbb
stos
mov
ret
and
xor
cdq
mov
sub
mov
dec
and
mov
dec
ror
mov
in
sbb
imul
xor
jns
cmp
sar
jae
jbe
and
loop
btc
xchg
mov
sbb
in
imul
dec
adc
sar
push
adc
int3
mov
jne
movs
xchg
mov
jae
in
mov
ret
or
ds
lock
stos
dec
inc
cld
push
pop
xor
pop
iret
add
cmps
enter
and
leave
or
inc
cmp
aaa
pushf
lds
rcl
mov
xlat
retf
jmp
out
xchg
inc
mov
daa
mov
jecxz
mov
hlt
fbld
repz
push
jle
lahf
sbb
xor
add
out
mov
loop
dec
add
pusha
or
cmps
jns
mov
js
pusha
dec
jno
push
movs
mov
xor
outs
fs
cmp
je
jbe
inc
cmp
and
push
mov
(bad)
shl
jecxz
add
mov
cmp
inc
bnd
retf
call
inc
int3
fiadd
sbb
iret
pushf
(bad)
mov
clc
push
test
loop
fsub
push
icebp
pushf
inc
sbb
rol
and
scas
ins
dec
out
fdivrp
das
mov
fimul
and
int3
dec
push
and
xchg
dec
out
int3
int3
and
pop
es
push
xor
cs
(bad)
cli
bound
ja
xchg
fs
out
and
ins
inc
aad
push
xor
cmp
jnp
sub
inc
mov
(bad)
rcl
mov
leave
sub
mov
repnz
in
rcl
leave
jmp
jne
sbb
scas
(bad)
js
pop
and
mov
movs
mov
in
pop
movs
ins
int3
clc
repnz
cmc
mov
dec
fistp
pop
call
daa
loope
cmp
imul
ret
ror
pop
inc
pop
dec
push
cmps
js
(bad)
aas
pusha
and
push
or
adc
push
push
test
shl
mov
mov
cwde
xchg
mov
sbb
push
mov
jo
dec
jmp
and
les
cmp
outs
(bad)
retf
or
and
inc
fisttp
int3
adc
dec
das
mov
push
xor
sbb
inc
cs
cld
jne
xlat
jnp
sahf
out
in
xchg
shr
xor
cwde
jmp
pop
in
and
aad
test
sub
int3
inc
cwde
call
test
mov
lds
push
cmp
enter
add
mov
fcomp
mov
jmp
sbb
popa
lahf
adc
mov
inc
retf
hlt
inc
mov
daa
xor
xor
(bad)
iret
mov
jns
int3
push
mov
xor
call
sbb
mov
xor
je
ja
inc
dec
aas
add
call
sbb
mov
jns
dec
pop
loope
lea
arpl
rcr
dec
aaa
popa
push
clc
push
inc
inc
sti
mov
stc
jbe
(bad)
sub
push
iret
rcl
mov
mov
jb
add
clc
jb
mov
mov
fs
jg
sbb
out
cs
imul
jae
call
sahf
inc
sub
xor
or
mov
push
dec
mov
or
lahf
adc
out
sub
push
cmps
mov
test
les
cmp
inc
cli
ret
in
jl
out
cs
dec
int3
in
mov
mov
test
(bad)
mov
mov
imul
pop
pop
jecxz
and
push
pop
scas
sar
shl
sbb
test
adc
in
jae
pop
fs
push
sahf
imul
lds
ins
sbb
data16
lds
lea
cmc
ds
inc
scas
sbb
jg
out
jmp
(bad)
lds
je
int3
push
cmps
mov
out
mov
mov
lods
push
cmp
repz
add
jmp
sub
jecxz
mov
shl
sub
add
loope
jle
dec
pop
out
stos
addr16
pop
sub
push
jmp
cmps
pushf
rcl
mov
mov
mov
icebp
cmps
mov
out
pushf
sub
in
pop
mov
into
xor
inc
(bad)
aam
neg
inc
jbe
or
dec
xlat
sub
pop
jl
push
pop
push
or
and
dec
add
push
inc
call
(bad)
mov
or
dec
push
movs
add
out
jb
mov
jl
ja
jmp
dec
sbb
sub
popf
fld
pop
inc
xor
push
mov
add
or
sub
push
cs
pop
cmps
jg
adc
frstor
sub
cmp
sbb
or
mov
xchg
test
shr
add
fwait
dec
enter
pop
gs
xchg
jge
fsub
mov
int
xchg
xchg
pop
jecxz
(bad)
(bad)
xchg
cmp
adc
dec
rcl
adc
out
repnz
ds
mov
dec
push
sbb
cdq
test
xchg
sbb
in
pop
fistp
add
jne
mov
xchg
sti
dec
and
scas
in
xor
sbb
sbb
cmc
aad
and
cmp
sbb
rol
cmps
ret
xor
ja
pop
push
add
out
pop
cdq
ins
sar
les
sub
mov
inc
icebp
in
pushf
(bad)
pop
fiadd
adc
cmp
stc
inc
push
cmp
add
or
int3
dec
or
adc
mov
nop
imul
pushf
fs
mov
add
xchg
add
stos
pop
test
xor
in
xor
and
push
ret
icebp
aam
pop
stos
and
dec
xchg
jb
sbb
repz
mov
pop
pop
ret
sbb
cmp
xchg
cmc
out
jl
fidivr
xor
out
push
pop
add
push
dec
mov
add
repnz
cmp
adc
loope
(bad)
jmp
push
sbb
les
mov
jns
ret
xchg
mov
loope
arpl
aaa
jmp
imul
fimul
jmp
out
push
cmp
jne
iret
dec
push
cmp
daa
mov
xor
push
xchg
pop
stc
xchg
cs
dec
hlt
movs
add
cmp
dec
and
int3
ficom
sbb
add
lds
add
mov
inc
dec
scas
cmp
mov
pusha
out
cli
sbb
mov
ret
cmp
xchg
mov
xchg
push
dec
dec
movs
sub
inc
loop
scas
retf
or
(bad)
lahf
mov
push
std
dec
sub
xchg
push
sub
xchg
mov
xlat
dec
pop
and
sub
jg
xchg
pop
add
mov
pop
lods
mov
xchg
cmp
pop
ja
xor
cmps
xchg
cld
mov
pop
inc
push
das
sbb
mov
sar
in
jp
mov
add
loope
(bad)
jg
fisub
pop
pop
xor
adc
outs
inc
mov
pop
push
bnd
cmp
pop
rcr
xlat
in
ret
arpl
pusha
mov
adc
in
dec
pusha
pop
push
adc
sbb
mov
shr
arpl
adc
es
push
mov
dec
and
sbb
popf
sub
movs
outs
(bad)
addr16
lea
push
mov
jns
add
jbe
xchg
sar
jl
add
rcr
mov
push
mov
jge
inc
hlt
(bad)
out
add
clc
sbb
loope
fild
outs
mov
or
stc
jle
xchg
out
outs
cmp
test
ins
add
not
or
inc
fistp
cmp
mov
adc
ficom
cli
xchg
sbb
and
mov
xchg
scas
loop
inc
mov
loope
mov
daa
movs
pop
push
(bad)
push
jnp
call
in
js
and
or
pushf
and
pop
fs
add
push
adc
imul
xchg
mov
and
loop
sub
repnz
xchg
xchg
shl
int
or
mov
mov
push
or
push
sub
and
sbb
lahf
test
xchg
not
and
mov
mov
sbb
xchg
and
inc
inc
sahf
and
jae
clc
mov
lock
ins
cmp
mov
enter
xchg
idiv
push
mov
fcom
sub
xchg
shl
ins
(bad)
xlat
hlt
cs
push
jecxz
ss
xchg
jae
cmp
cmp
in
add
rcr
jnp
mov
pop
push
jmp
jmp
lea
nop
repz
xchg
jecxz
push
dec
idiv
sub
into
mov
jecxz
(bad)
ins
sbb
mov
shl
pop
jo
lods
xchg
ds
mov
sbb
cmp
jmp
gs
in
int3
add
pop
or
inc
sbb
xor
jnp
repz
loopne
mov
dec
retf
fwait
in
loopne
enter
push
test
jno
pop
add
sbb
sub
sbb
addr16
in
(bad)
stc
addr16
inc
out
cs
out
mov
xchg
push
sbb
or
jl
dec
sbb
imul
data16
stos
setg
or
mov
and
loop
sbb
pop
dec
xor
add
rcr
test
adc
repnz
pop
cs
cmc
jbe
dec
fdiv
xor
jo
into
cmp
dec
lods
add
shr
push
call
pop
jl
test
aad
pop
adc
lock
add
popa
xor
add
xchg
xor
out
mov
xor
xchg
aam
stos
mov
pushf
xchg
xchg
movs
popf
dec
rcr
dec
and
mov
mov
mov
sbb
or
dec
xor
cmps
add
in
xlat
sbb
(bad)
loopne
and
dec
inc
add
rol
pop
cmps
xchg
jbe
sub
inc
mov
push
mov
xchg
js
or
or
fs
cld
and
loop
xchg
imul
cmp
push
movs
or
hlt
int
sbb
call
cmps
xchg
mov
push
and
fnstcw
fdivr
mov
push
rcl
call
retf
sbb
arpl
cmps
xor
mov
js
xchg
(bad)
xor
xor
popa
into
cmp
sub
push
inc
icebp
mov
jo
xor
or
aad
xchg
stos
into
add
arpl
cld
pop
cdq
outs
(bad)
std
std
inc
dec
lock
or
push
sub
mov
daa
sbb
dec
lahf
mov
xor
icebp
pusha
daa
inc
(bad)
int
arpl
jl
addr16
adc
or
test
mov
mov
pop
stos
xor
cmc
mov
push
mov
int3
and
scas
(bad)
or
xchg
cmp
mov
aaa
jmp
je
xor
push
adc
xor
in
cmp
repz
xchg
cmp
xchg
xor
sub
fiadd
test
pop
jbe
retf
xlat
repnz
gs
or
jecxz
je
xchg
jbe
mov
push
xchg
scas
and
pop
jl
sub
inc
fmul
mov
jp
in
pop
sub
popf
popa
loop
dec
sti
rcl
outs
xchg
pushf
out
adc
mov
rcr
imul
(bad)
push
std
outs
jbe
add
(bad)
jae
in
cs
call
dec
mov
mov
push
out
jge
xchg
pop
test
daa
loope
out
loop
and
daa
push
push
lds
pushf
add
push
xchg
xor
mov
sahf
mov
(bad)
cmp
std
ss
popf
sbb
or
(bad)
dec
adc
adc
jmp
pushf
dec
rcl
push
mov
jmp
movs
jmp
fsub
inc
ror
daa
sbb
mov
aaa
add
pop
lds
es
hlt
xchg
sub
mov
sahf
rol
fidiv
nop
mov
push
ins
iret
or
sti
call
sub
xchg
pop
push
ds
or
mov
fisubr
jl
or
xchg
pop
mov
cld
mov
cmp
mov
aaa
push
test
xor
imul
xlat
inc
sbb
adc
out
mov
push
mov
lods
jb
femms
stos
hlt
sbb
(bad)
scas
and
outs
xchg
ss
push
ret
pop
jns
sbb
sub
mov
rol
in
jl
popa
movs
aam
int3
xor
push
js
pop
or
repnz
lahf
cmp
pop
jle
sbb
mov
fdivr
icebp
or
bound
sbb
mov
adc
popf
sbb
(bad)
push
jle
jo
das
cmp
shl
retf
push
mov
pushf
(bad)
push
dec
es
mov
ins
inc
xchg
dec
mov
inc
call
aas
shufps
jb
lahf
and
xlat
aad
rcl
inc
stc
adc
inc
ret
(bad)
repnz
push
out
xchg
xor
outs
mov
stc
mov
test
es
or
cmp
or
popf
test
jo
dec
lahf
jmp
ins
sub
xor
sub
pop
rcl
ds
xchg
cmp
test
inc
fsubrp
xor
test
cli
pop
iret
add
stos
lds
push
pushf
jne
(bad)
sub
test
dec
cmp
prefetchwt1
xchg
jmp
repz
fcmove
or
mov
inc
fwait
lea
add
inc
les
jns
hlt
mov
push
adc
ret
out
cs
aam
add
sbb
addr16
mov
into
sub
cmp
inc
xchg
rcr
xchg
jne
sbb
xor
pop
mov
inc
imul
mov
xor
scas
loopne
add
test
inc
mov
clc
into
push
xchg
scas
adc
nop
imul
jge
adc
out
dec
cld
cmp
inc
pop
inc
in
push
stc
adc
scas
push
in
sub
fs
shr
sbb
mov
into
into
stos
sub
shr
fcomp
loop
inc
inc
mov
and
in
adc
popa
loopne
dec
cmps
jne
hlt
lahf
inc
(bad)
push
inc
mov
test
js
addr16
push
loop
cmp
mov
js
scas
or
fwait
push
mov
sahf
(bad)
jae
add
xchg
jns
aam
push
sub
movs
inc
cwde
and
add
test
pushf
dec
lds
inc
lea
push
test
cmp
out
inc
push
movs
call
lds
in
or
dec
push
idiv
pushf
mov
cmp
loop
arpl
mov
imul
xchg
push
sar
cmp
xor
push
je
and
ins
out
in
(bad)
adc
lahf
cwde
jno
sbb
int
mov
test
arpl
and
mov
jb
jnp
mov
ret
gs
mov
xor
ss
jno
aam
mov
in
sub
lahf
pop
js
enter
jno
fldcw
jg
mov
jno
mov
mov
out
ins
or
mov
pop
lock
idiv
scas
dec
repz
jae
inc
xchg
call
jg
adc
push
push
mov
adc
out
stos
xlat
mov
ss
enter
sub
jecxz
inc
ins
ficomp
iret
movs
jle
imul
inc
outs
(bad)
push
loope
cmp
(bad)
dec
add
dec
inc
and
dec
test
push
repz
dec
adc
or
xor
or
pushf
xor
call
js
movs
push
sub
outs
add
pop
mov
push
sbb
pop
fcomp
push
and
(bad)
fidivr
je
or
(bad)
cmps
repnz
std
inc
fsub
dec
push
addr16
mov
idiv
and
test
in
add
stos
pop
xchg
jbe
mov
out
popa
add
push
outs
dec
sbb
shl
cmp
mov
shr
pop
add
arpl
out
loop
movs
fldcw
pop
sbb
repnz
in
push
cdq
icebp
call
jo
adc
jne
xor
les
jle
pushf
hlt
mov
mov
test
mov
nop
adc
xchg
out
(bad)
mov
push
sbb
in
nop
lds
sbb
inc
loop
adc
sub
sbb
cmp
mov
aaa
mov
adc
and
jge
pop
mov
sbb
ror
outs
js
inc
xor
shl
repnz
call
jbe
xchg
adc
mov
es
movs
jne
jnp
pcmpgtw
add
ins
pop
push
xchg
in
pop
and
adc
loopne
gs
sti
cmp
sbb
ins
jl
aad
pop
mov
daa
mul
xchg
push
push
repnz
arpl
out
loopne
data16
sbb
sbb
sub
call
in
clc
jg
add
dec
test
sbb
and
xor
mov
mov
ror
or
cmp
fucom
mov
mov
adc
mov
sahf
mov
mov
sbb
xchg
mov
pop
stos
iret
cmc
sub
mov
push
call
and
xchg
ja
clc
jp
inc
mov
fmul
repnz
mov
lods
bound
inc
jae
fistp
mov
jmp
pop
popa
(bad)
aad
dec
call
inc
clc
ret
xor
pop
inc
mov
iret
inc
sub
push
adc
call
and
xlat
jmp
shl
sahf
in
sbb
out
jle
add
adc
out
xchg
mov
ins
mov
jb
xor
push
dec
minps
cmps
int
imul
or
(bad)
(bad)
jo
add
pop
into
dec
lea
test
xchg
sub
(bad)
jns
xchg
xchg
sbb
push
stos
into
adc
cmps
jecxz
mov
xchg
cmp
call
xor
xchg
mov
pop
jno
inc
mov
xchg
mov
and
push
or
cmp
mov
mov
call
out
jno
push
in
mov
fstp
movs
enter
xchg
xchg
leave
aas
inc
ss
xor
jge
pop
shl
and
test
mov
mov
retf
sahf
es
rol
mov
jge
jmp
mov
test
dec
bound
retf
retf
push
bound
stos
sub
mov
push
jnp
xchg
js
sbb
pop
jbe
xor
xchg
push
push
pop
add
pop
mov
jg
push
gs
pop
mov
aaa
cmp
xchg
pop
ins
fdivr
add
jp
dec
inc
jmp
(bad)
(bad)
push
cmp
mov
lea
dec
repnz
sar
scas
push
jnp
rcr
adc
push
mov
sub
shr
sbb
mov
bound
les
jo
ss
mov
ins
add
jmp
lahf
dec
mov
xor
adc
cmp
arpl
pop
pushf
add
and
pcmpeqd
out
aad
fadd
cmp
cmp
repnz
push
fistp
jle
das
push
retf
mov
mov
cmps
mov
and
add
sbb
call
pop
in
iret
dec
das
(bad)
in
cmps
rol
dec
loopne
fcmovbe
dec
dec
call
jno
(bad)
(bad)
lea
push
xor
retf
pop
push
inc
sub
xchg
jne
or
movs
aad
mov
retf
popf
dec
stc
jecxz
jl
sbb
rcr
jnp
sahf
idiv
stos
cmp
xchg
in
int
in
mov
xchg
xchg
jns
jbe
fadd
or
jo
xor
mov
stc
adc
pop
das
movs
aas
sbb
or
retf
pop
pop
leave
lods
div
jbe
lock
addr16
test
fst
dec
inc
cmp
mov
mov
sub
ins
adc
cli
mov
jl
or
(bad)
dec
cs
dec
pop
fndisi(8087
cdq
mov
ficomp
cli
cli
xor
mov
or
jecxz
inc
push
fadd
in
ins
je
fist
xor
push
imul
pop
retf
mov
or
lds
sbb
push
sbb
std
dec
jno
pand
inc
sti
std
ins
or
push
or
jecxz
jg
loop
loope
test
and
call
mov
imul
adc
or
retf
in
pushf
std
pop
push
sbb
les
xor
pop
dec
shl
clc
and
ret
call
xor
xor
retf
mov
(bad)
cmp
mov
push
pop
(bad)
in
push
adc
push
js
pop
js
or
push
dec
movs
mov
mov
cs
in
push
hlt
pop
mov
popf
in
lds
(bad)
adc
lahf
in
mov
cmps
mov
mov
dec
pop
add
mov
outs
inc
ds
mov
nop
pop
or
(bad)
enter
call
pusha
in
aad
xor
jecxz
mov
push
xor
and
or
pop
test
daa
into
push
cmp
in
call
cli
pop
sbb
cld
pop
mov
popa
adc
std
stc
adc
lods
rcl
ret
add
fs
inc
shl
dec
jecxz
jne
add
scas
popf
jp
inc
jg
jae
fwait
ret
aad
jae
lods
jg
mov
and
adc
sbb
sbb
and
test
and
pop
in
cmp
movs
mov
inc
mov
adc
mov
arpl
and
mov
cmp
das
dec
push
gs
fstp
js
je
xor
sar
or
retf
push
out
stos
sbb
out
jp
push
jmp
cmp
xor
sbb
aaa
movs
sbb
scas
adc
push
push
repz
(bad)
scas
dec
xchg
mov
mov
fstp
mov
mov
jl
push
inc
xchg
test
mov
cdq
into
ror
pop
sub
dec
mov
jns
cmps
and
pop
adc
out
inc
xchg
sbb
test
pop
in
cwde
mov
inc
loopne
add
ret
xlat
pop
(bad)
dec
pop
mov
jns
or
and
sti
ja
mov
int3
inc
int3
or
icebp
mov
mov
lahf
dec
and
push
nop
lods
loop
push
dec
push
fcomp
add
pop
jl
pusha
cmp
cmp
mov
inc
sbb
xchg
mov
pop
jmp
xor
into
cmp
fisttp
ror
jbe
inc
or
and
ja
lahf
cmp
je
adc
lock
mul
enter
pusha
jmp
push
and
aaa
sub
ins
push
pop
(bad)
cmps
fucomip
mov
mov
mov
push
mov
add
sbb
and
jmp
or
arpl
xchg
xchg
ja
call
fiadd
mov
or
sbb
pop
push
or
push
inc
sbb
jg
dec
test
outs
out
xchg
or
(bad)
push
inc
push
sub
mov
and
push
jp
sbb
fidivr
fbld
retf
inc
mov
dec
jbe
test
cld
mov
inc
inc
fisubr
pop
(bad)
inc
jns
(bad)
rol
mov
mov
dec
scas
jne
fwait
xor
sub
pop
je
call
inc
repnz
cmp
add
push
xchg
adc
mov
shl
out
adc
sbb
jo
lea
push
(bad)
and
adc
cmp
pop
add
out
lods
jle
xchg
fwait
adc
inc
inc
(bad)
iret
sub
retf
icebp
xchg
sub
aaa
push
mov
pushf
aas
and
int
jle
and
or
pop
mov
pop
inc
mov
in
shl
jmp
push
scas
int3
xor
stos
jo
jmp
test
add
test
push
jmp
inc
clc
int3
xchg
dec
jmp
mov
clc
mov
pop
inc
mov
(bad)
mov
call
lds
jmp
xor
or
repnz
and
sti
xor
mov
mov
xor
add
xor
sbb
test
pop
fwait
lock
pushf
data16
iret
imul
cmp
dec
in
push
idiv
test
mov
sub
in
pop
out
inc
jo
add
pop
mov
mov
jle
dec
ja
sub
cwde
mov
sbb
int
jl
sti
pop
jmp
mov
sub
sbb
dec
jb
push
sbb
jmp
mov
pusha
sbb
or
jne
clc
pop
ds
popf
test
mov
stos
fsubr
push
push
fcomp
sar
xor
aad
adc
cli
shl
adc
lods
add
push
and
js
jae
(bad)
hlt
stos
adc
(bad)
(bad)
shl
and
mov
int
dec
repz
repnz
push
out
push
add
in
jae
out
pop
shr
clc
fcomip
lds
inc
mov
sbb
sti
mov
sub
cmp
mov
arpl
loop
and
mov
stos
ins
ins
or
push
js
pop
mov
retf
add
mov
jmp
iret
add
push
cmps
daa
mov
xor
push
adc
add
mov
push
cmp
lods
mov
(bad)
or
pop
pop
adc
test
jmp
imul
add
test
movs
sub
jge
mov
cwde
dec
scas
mov
xor
addr16
jle
scas
sub
inc
mov
fwait
aad
cld
mov
adc
scas
mov
lock
pop
das
popa
mov
test
pop
iret
or
cmps
pop
xchg
pop
sbb
div
push
mov
jno
xor
shl
pop
mov
shl
mov
repnz
mov
dec
push
and
popa
jge
mov
test
movs
movntps
sbb
(bad)
pop
outs
dec
mov
movs
out
inc
and
(bad)
pop
adc
or
popf
mov
(bad)
mov
das
cmps
push
xor
sahf
cmp
mov
out
jb
and
mov
pop
(bad)
mov
or
xchg
xchg
or
call
push
clc
hlt
jnp
imul
imul
mov
lods
push
into
js
aam
fnstcw
and
(bad)
pushf
cld
sub
push
jmp
movs
lahf
mov
and
rcr
cmp
sbb
and
add
jge
jp
pop
test
cmc
aad
mov
inc
jmp
mov
repnz
jnp
and
stc
arpl
pop
icebp
xor
fisub
mov
bswap
and
inc
mov
scas
movs
ja
fs
sbb
push
aad
leave
es
push
lea
dec
adc
mov
or
repz
and
pop
jg
cmp
add
xor
mov
jmp
aam
or
and
push
mov
jge
arpl
mov
sti
lds
cmp
in
inc
or
inc
mov
es
mov
cld
pop
cmps
push
pop
push
mov
pop
xor
jb
movs
add
xchg
xchg
mov
clc
pop
or
popa
imul
jg
mov
ret
in
movs
pushf
loope
std
xchg
push
inc
sbb
pop
ret
cmps
sub
ins
lods
cwde
arpl
icebp
sahf
push
push
or
shl
sahf
call
pop
jns
or
scas
lods
(bad)
pop
je
mov
jecxz
mov
jg
cs
fwait
mov
call
adc
push
call
mov
push
push
imul
pop
mov
push
(bad)
cmp
(bad)
mov
jns
add
jg
jmp
imul
sbb
jnp
and
sbb
xchg
jecxz
scas
push
xchg
xchg
ins
xchg
es
dec
cmc
lahf
mov
dec
mov
or
movs
jns
nop
fnsave
or
cmp
mov
mov
in
xchg
pushf
in
ret
adc
xchg
push
add
cmp
popa
(bad)
add
cmc
fcmovu
enter
test
cld
mov
pusha
adc
imul
cwde
(bad)
xor
nop
ss
mov
cmps
inc
mov
dec
xchg
fstp
ins
stos
movs
dec
xor
int3
push
cmp
repz
add
aam
push
addr16
and
push
dec
ficom
adc
xchg
lds
xchg
pop
mov
inc
cmp
(bad)
adc
test
mov
mov
xlat
or
mov
stc
xchg
ret
rcr
cmc
sbb
or
mov
(bad)
call
add
out
mov
pop
xor
dec
inc
sahf
rcr
xchg
(bad)
xchg
fcmovbe
pop
lods
aam
jp
sub
bound
cli
or
or
cmp
xlat
mov
imul
mov
adc
jmp
cmp
data16
pop
pop
cmp
inc
popa
or
fbstp
inc
mov
aad
(bad)
gs
pop
rcl
and
(bad)
mov
sub
(bad)
cmc
shl
mov
(bad)
loopne
push
mov
and
fistp
jbe
inc
add
pop
jmp
sub
out
rcr
push
movs
stc
fwait
mov
(bad)
jl
fimul
pusha
xchg
inc
mov
add
adc
sbb
xchg
pop
sbb
xor
add
dec
dec
pushf
outs
and
xor
test
fiadd
leave
(bad)
mov
cmp
pop
sbb
hlt
lahf
inc
sahf
mov
in
mov
int3
mov
ds
sub
into
ss
test
stc
out
mov
(bad)
aaa
mov
shl
mov
pop
mov
xor
mov
dec
jns
lahf
jo
repnz
add
test
ja
dec
jge
add
loope
inc
jg
je
add
shl
rcl
ror
xchg
test
inc
jne
dec
shl
dec
pop
add
and
fnstenv
scas
xor
ret
mov
in
sbb
dec
(bad)
std
adc
mov
sub
xor
(bad)
loop
lea
clc
push
pop
lock
in
pop
jp
int3
xchg
dec
(bad)
cld
jns
shl
shr
add
das
sbb
lods
iret
mov
ret
xlat
add
xor
xchg
out
rcl
jb
adc
out
repz
mov
mov
mov
jp
out
cmc
repz
fsincos
push
arpl
fisubr
mov
sub
add
(bad)
lock
push
mov
inc
into
or
push
mov
aaa
loop
stc
pop
jle
in
sub
mov
emms
mov
cld
call
into
jmp
addr16
mov
fninit
sti
xlat
mov
fiadd
push
int3
test
rol
shl
cmp
inc
xor
push
imul
(bad)
mov
cmps
adc
xor
mov
and
mov
out
sbb
es
jge
dec
mov
cdq
jo
add
imul
or
pop
and
and
int3
sub
scas
inc
lods
sub
movs
stos
mov
sbb
outs
inc
pop
data16
dec
popa
lods
inc
cmp
mov
push
dec
mov
aad
jmp
cld
pop
cmp
xchg
and
dec
mov
or
aam
js
mov
jnp
adc
xchg
sti
jl
cld
aaa
icebp
pop
mov
jbe
lock
in
sub
aad
fdiv
bound
rep
mov
dec
outs
pop
retf
adc
pop
dec
(bad)
mov
call
(bad)
push
jge
idiv
mov
adc
cli
push
ret
jo
dec
out
fldcw
ret
mov
pusha
fidiv
mov
pushf
bound
leave
pop
lahf
loopne
push
das
sbb
jo
je
pop
int3
out
xor
mov
pop
jecxz
ins
jne
call
test
test
mov
dec
jl
ja
(bad)
rol
pusha
mov
ss
dec
(bad)
sbb
bound
and
bound
in
ficom
sar
add
(bad)
dec
fxch
popa
cmp
popa
imul
xor
sbb
add
cmps
xor
test
out
gs
cmc
sub
js
adc
ins
repz
outs
or
loopne
test
and
push
cld
test
(bad)
cmp
add
ror
cmps
out
sbb
pop
mov
lahf
mov
xchg
sbb
int
div
out
jecxz
adc
ss
popf
ja
jl
jmp
inc
jne
push
or
jne
add
sbb
std
inc
mul
dec
sbb
jl
cli
cli
inc
mov
call
sbb
in
jns
addr16
sbb
add
shr
mov
jg
ss
data16
ret
mov
mov
lock
jmp
xor
inc
sub
sbb
inc
mov
or
pushf
pop
cmp
test
cmp
jns
push
jp
pop
pop
mov
sti
movs
pop
loopne
push
sub
pop
mov
mov
arpl
repnz
add
xchg
and
push
pop
daa
sbb
pop
shl
into
mov
push
dec
adc
cld
movs
mov
fstp
mov
push
test
add
cld
jmp
push
xchg
dec
cmc
jl
(bad)
(bad)
xor
retf
int
loopne
test
cmp
mov
hlt
out
jae
loope
daa
ss
jmp
xchg
aad
pop
mov
ret
mov
pop
push
dec
into
movs
fcomi
shr
sub
add
in
neg
cdq
icebp
push
cmc
rol
jo
sbb
xchg
adc
int3
mov
gs
xor
cmps
mov
jle
popf
pop
jg
push
dec
inc
je
fcom
dec
mov
mov
movs
dec
pop
mov
jge
cmc
rcr
or
lods
mov
iret
mov
dec
jecxz
push
sbb
inc
vshufps
adc
ins
xor
pusha
jmp
pop
cmps
dec
inc
jg
ins
and
clc
pop
adc
mov
scas
lea
pop
sti
mov
sahf
je
fistp
sub
(bad)
jl
xor
adc
jg
sbb
push
inc
loopne
inc
push
push
or
aaa
ss
jp
push
xchg
xchg
mov
cli
adc
icebp
scas
(bad)
movs
sbb
jbe
test
dec
(bad)
aaa
bnd
push
jp
pop
mov
(bad)
gs
dec
loop
in
cmp
dec
scas
test
into
jmp
clc
imul
cmc
jns
test
jmp
xor
in
mov
mov
gs
pop
and
add
mov
mov
cmp
(bad)
ss
or
hlt
push
add
dec
out
fist
sbb
pop
call
shl
shl
iret
dec
jne
push
inc
push
data16
mov
jnp
fs
mov
mov
sahf
mov
mov
out
fwait
(bad)
(bad)
aam
mov
cmc
or
push
shl
inc
jnp
ficomp
xchg
xchg
adc
xchg
es
jno
add
pop
and
out
aam
mov
mov
adc
pop
nop
push
adc
xchg
add
lock
xlat
out
cs
mov
push
mov
int3
cmp
pusha
cld
hlt
lods
outs
mov
cmp
gs
in
mov
bound
and
mov
test
jae
and
ja
or
sub
stos
push
scas
shl
repnz
adc
push
pop
xchg
repnz
pop
out
enter
fdivr
xchg
ins
scas
fwait
cmp
ret
push
mov
push
xchg
cmp
push
fs
out
mov
cmps
fsub
hlt
mov
inc
and
add
iret
ins
stos
xor
add
es
mov
pop
std
mov
ins
cwde
fwait
jns
lods
sbb
stos
inc
jg
add
sbb
jnp
pop
add
call
sbb
add
xchg
mov
fwait
in
and
loop
repnz
gs
popa
cmp
rol
test
lahf
scas
int3
icebp
shr
mov
(bad)
push
mov
and
or
fild
(bad)
xchg
ins
int3
inc
(bad)
xor
jae
arpl
rol
push
nop
aam
cmc
fdiv
nop
jmp
xchg
mov
shl
cs
jmp
(bad)
(bad)
push
cmp
mov
mov
hlt
and
cmp
mov
mov
push
(bad)
xchg
push
fucomp
js
fucomp
loope
hlt
xchg
push
jp
enter
cdq
xor
fistp
dec
mov
mov
ret
dec
loope
cld
and
mov
rcl
scas
fmul
addr16
mov
adc
mov
sbb
xor
nop
pop
xor
icebp
jns
call
lea
pop
cmps
into
adc
xchg
jecxz
dec
push
test
xchg
xor
sub
mov
mov
adc
lods
ror
cs
fbld
test
mov
and
repnz
xor
outs
or
sbb
loopne
jne
adc
fldenv
jge
and
faddp
add
xchg
ds
es
sbb
cmc
out
or
cmp
pop
cmc
ror
add
pop
jmp
inc
retf
or
xchg
aaa
jge
out
test
jae
lea
add
rcr
es
repnz
xchg
mov
or
add
push
add
scas
fld
out
mov
jo
pop
int3
imul
pop
test
push
pop
cmp
push
(bad)
dec
mov
push
sbb
add
std
jno
aad
push
enter
mov
xchg
pop
push
pop
xchg
mov
retf
add
push
push
mov
sub
push
cdq
cmp
je
add
pop
sbb
jmp
retf
push
pushf
ins
sbb
repz
out
mov
dec
data16
xchg
lods
retf
mov
sbb
push
mov
leave
(bad)
lea
mov
or
test
stos
jl
popf
dec
xchg
sbb
mov
shl
dec
popa
test
or
inc
lahf
and
add
arpl
fidivr
add
fisubr
fs
out
and
jg
pop
into
xchg
xor
and
in
jl
lods
sub
mov
and
(bad)
out
mov
jae
(bad)
mov
mov
dec
jmp
aad
leave
adc
jno
into
pushf
in
mov
vmovd
test
sub
dec
test
sahf
std
test
ret
xchg
(bad)
adc
pop
inc
mov
hlt
leave
jae
and
cmp
leave
add
pop
jmp
fstp
(bad)
sbb
jmp
sbb
jns
add
(bad)
dec
sub
out
push
mov
or
add
das
out
inc
pop
mov
aas
xlat
shl
in
jg
cli
icebp
xor
or
mov
sbb
pop
mov
sbb
jmp
cmps
pop
and
and
adc
jmp
push
stos
retf
out
xchg
gs
push
and
and
out
dec
mov
(bad)
ins
push
outs
sbb
stos
jmp
sbb
push
rcr
jmp
in
mov
jp
pop
je
or
pop
or
lock
pushf
add
fwait
mov
and
mov
clc
add
mov
jb
es
inc
push
loop
gs
into
stc
jb
mov
mov
and
ret
add
outs
mov
js
add
jbe
(bad)
sub
in
dec
les
jmp
ja
aad
mov
ja
lahf
pop
into
cmp
nop
xor
imul
out
test
in
adc
aas
cld
(bad)
pop
popf
movs
mov
mov
pop
jns
out
push
pop
push
or
xchg
out
and
or
push
pop
mov
inc
mov
aas
js
fisub
adc
cmp
ret
imul
test
cld
mov
shr
push
jl
mov
xor
sti
leave
aam
fs
test
stc
sub
hlt
lock
stc
or
scas
nop
aas
xchg
dec
sub
jnp
pop
mov
jne
push
sbb
(bad)
fistp
ret
pop
add
mov
dec
xchg
gs
and
dec
in
(bad)
mov
(bad)
push
jmp
sub
jno
xor
inc
sbb
jg
dec
aas
jge
xchg
cmp
(bad)
cmc
pop
fwait
pop
jecxz
scas
add
shl
cmp
adc
add
retf
add
cmc
lods
adc
cwde
pop
dec
sub
and
inc
and
(bad)
jnp
sbb
sbb
inc
jmp
div
cmc
into
aas
shl
movs
in
icebp
jbe
arpl
int3
cli
icebp
cli
cli
sbb
adc
hlt
inc
mov
or
push
je
add
cmp
(bad)
nop
test
and
add
or
mov
out
push
jmp
mov
mov
pop
es
int3
and
add
mov
ror
inc
adc
les
mov
int3
pop
nop
mov
or
dec
jg
push
out
jecxz
out
xor
xchg
xchg
mov
pop
rol
or
push
stos
repnz
xchg
push
inc
aad
ret
jecxz
outs
out
ss
adc
movs
sub
movs
push
xchg
sbb
dec
call
test
mov
inc
(bad)
mov
int3
gs
sbb
or
repnz
add
int3
fwait
pusha
fcom
xor
xchg
cmp
push
mov
dec
test
loopne
and
jmp
jmp
xor
mov
push
or
xlat
pop
pop
imul
adc
inc
ins
repz
mov
imul
inc
xchg
jb
push
sub
pop
call
mov
jae
ret
or
mov
leave
pop
push
sub
not
les
or
or
mov
adc
dec
lds
or
fsub
inc
mov
or
push
cmp
call
inc
sbb
mov
std
popf
lock
ret
cld
loop
sar
xor
and
xor
retf
std
icebp
or
xchg
jmp
ret
retf
cmp
ret
retf
mov
sar
int3
jmp
push
daa
mov
in
mov
mov
or
jge
(bad)
std
idiv
jge
inc
jecxz
xchg
std
inc
loop
std
mov
les
fild
jle
in
jmp
ret
dec
dec
outs
inc
aaa
inc
adc
sbb
inc
dec
out
mov
std
or
stos
mov
mov
fucomp
cdq
mov
or
sbb
dec
or
and
xchg
int
sub
ficom
(bad)
stos
dec
inc
or
pop
sar
imul
xor
jge
push
or
xor
loope
pop
sub
xor
add
lock
outs
scas
xchg
inc
repz
and
push
xchg
mov
dec
leave
sbb
test
add
lock
es
(bad)
loope
das
push
sub
mov
and
sti
ins
jl
(bad)
pop
xchg
and
lods
out
xor
imul
dec
fisubr
cmp
and
ds
test
xor
adc
out
cli
cwde
nop
lods
or
call
dec
jo
mov
dec
dec
mov
outs
mov
add
push
cmp
xchg
push
sti
mov
pop
test
xchg
adc
ficomp
push
mov
push
or
jb
aam
(bad)
cwde
and
(bad)
sahf
inc
jecxz
or
xchg
push
inc
xor
xor
inc
cmps
dec
mov
stos
mov
aas
jl
iret
sbb
cmp
jbe
dec
inc
fdiv
and
jp
add
jmp
gs
jp
out
lods
dec
repnz
jl
data16
retf
(bad)
fst
or
push
hlt
ja
fdivr
pop
movs
rcr
lods
pop
movs
imul
sti
pop
adc
sbb
fcomp
imul
rcl
sub
xchg
cmp
rcl
sub
push
lahf
sub
and
push
lods
push
fdivrp
in
lds
leave
mov
fs
mov
lds
xchg
adc
jge
adc
mov
dec
mov
mov
adc
xchg
clc
xor
sub
arpl
shl
adc
sti
and
push
call
sti
or
fld
stos
sub
mov
sub
dec
cdq
cmp
std
cmp
leave
jge
dec
xor
sub
lock
mov
out
aas
mov
cli
push
and
or
out
xor
leave
and
mov
les
out
mov
mov
mov
pop
add
sbb
retf
outs
inc
mov
retf
mov
enter
xor
and
cmp
mov
mov
ins
dec
jne
jnp
push
sahf
(bad)
cmp
pop
arpl
sbb
retf
pop
test
shl
(bad)
(bad)
mov
add
inc
xor
aam
ret
retf
push
jmp
push
loope
xor
into
in
test
add
test
leave
pop
push
nop
add
push
mov
imul
inc
inc
jmp
xchg
mov
gs
movs
popa
pop
mov
out
inc
add
leave
movs
mov
inc
add
int
jl
jecxz
xor
push
pop
mov
mov
pop
or
stc
sub
add
xchg
mov
jbe
dec
retf
stos
mov
sub
xor
xchg
cwde
loopne
mov
push
mov
sbb
mov
mov
push
daa
inc
sub
dec
adc
lds
in
(bad)
add
loope
cmc
ja
call
mov
xchg
mov
jle
mov
dec
xchg
mov
adc
lahf
inc
retf
or
idiv
push
jmp
adc
adc
ret
xor
push
pop
pop
bound
push
or
mov
inc
pop
(bad)
xor
pop
xchg
mov
jmp
in
cmps
xor
mov
aas
nop
or
icebp
std
sbb
or
inc
jecxz
fstp
jg
clc
push
sub
test
imul
fucomip
mov
in
scas
jmp
pushf
int
jmp
adc
sti
loope
je
mov
cmp
add
and
xor
add
xchg
in
stc
xor
jbe
mov
sbb
xor
jg
sbb
(bad)
mov
inc
in
push
mov
icebp
pop
or
sbb
adc
add
outs
and
add
or
mov
xchg
dec
inc
push
rcl
adc
pop
aas
scas
push
out
push
and
add
jmp
fistp
loop
and
push
dec
movs
iret
mov
inc
inc
jmp
imul
loope
jae
push
mov
or
or
mov
push
jmp
xor
int
xor
ret
sbb
es
cmp
push
adc
shl
sbb
shl
or
movs
cmp
test
scas
mov
mov
test
inc
xchg
jl
push
push
jge
loopne
pop
mov
fmul
inc
mov
leave
idiv
xor
leave
dec
ret
add
pop
cmp
lock
outs
fdivr
inc
bswap
push
pop
adc
xchg
xchg
ret
cmp
push
dec
jl
cmps
dec
add
or
push
aam
repnz
and
(bad)
mov
jg
pcmpeqw
and
fcmove
test
or
sbb
pop
mov
mov
fs
(bad)
xor
pop
cvtdq2ps
and
xor
mov
sub
push
xchg
into
dec
mov
psubb
stos
cmp
pop
mov
ficom
pop
(bad)
cmp
lahf
fnstsw
mov
mov
into
and
(bad)
rol
sbb
push
pop
jg
fsubr
nop
push
adc
dec
mov
sub
xor
mov
sub
jecxz
push
xchg
add
dec
sub
loop
mov
stos
xor
(bad)
or
pop
jo
outs
cmps
lods
test
js
sahf
inc
inc
leave
pop
sbb
std
in
pushf
mov
nop
jo
repnz
ins
sti
in
or
jmp
shr
xor
sub
jcxz
call
out
adc
retf
popf
ins
cmp
xchg
in
inc
add
div
add
iret
popa
mov
cmp
mov
ffreep
test
addr16
mul
in
outs
retf
mov
mov
mov
push
int
cld
arpl
mov
fsub
xlat
xchg
test
sub
leave
jno
in
fisttp
ret
ins
ret
pop
sub
aas
add
inc
scas
cmp
dec
mov
add
stos
xor
js
arpl
test
inc
nop
inc
out
jns
sbb
sahf
div
(bad)
fs
nop
and
mov
push
nop
mov
ins
inc
ins
(bad)
jno
aam
inc
fcomp
pop
jae
pop
push
dec
sahf
push
cmp
mov
fldenv
imul
(bad)
hlt
jecxz
jno
mov
ins
mov
mov
ror
aaa
mov
ret
inc
repz
sbb
cmp
mov
xchg
push
cld
jne
aas
pushf
push
arpl
adc
or
cmp
sub
js
fcomp
xlat
in
out
sub
daa
clc
in
sbb
push
mov
(bad)
daa
or
mov
jb
mov
mov
hlt
gs
test
in
xchg
bound
mul
add
test
(bad)
or
cmp
dec
(bad)
push
scas
push
int3
iret
add
adc
push
push
mov
push
test
sti
cmp
imul
inc
add
fabs
push
scas
jbe
les
xor
into
push
test
xor
cdq
add
sbb
sub
add
cmc
inc
mov
xlat
sub
dec
ds
or
movs
add
pop
push
stc
mov
fldlg2
js
jecxz
mov
xchg
push
mov
shl
les
xchg
ror
inc
mov
(bad)
push
(bad)
scas
fdivr
jo
inc
scas
jne
(bad)
out
jg
jmp
sti
gs
pop
in
xchg
jp
inc
int3
in
inc
push
inc
aad
cmp
scas
xlat
mov
stos
shl
jne
call
cmp
adc
lea
pop
pop
jo
pop
push
xchg
sahf
ins
in
ins
dec
dec
or
pusha
popa
ins
pop
retf
lahf
ja
cld
push
xchg
cmp
jne
sub
mul
mov
push
shl
xchg
dec
sahf
cli
jl
mov
push
pop
and
sbb
jae
stos
or
scas
jbe
jbe
inc
movs
mov
hlt
inc
sub
lods
ds
data16
pop
jecxz
pop
into
mov
xchg
pushf
push
cmp
or
inc
rol
cmp
jnp
test
in
stos
lock
push
fdiv
je
mov
loop
mov
mov
imul
push
xor
jle
pop
xchg
stc
ret
scas
mov
cdq
pop
mov
mov
xor
mov
sbb
xor
movaps
push
dec
xchg
idiv
movs
and
shl
push
cmp
inc
mov
mov
sub
push
sub
(bad)
jg
ins
xchg
into
cmp
pusha
or
addr16
cmp
aam
and
push
mov
and
or
jbe
sub
push
and
loop
addr16
call
movs
mov
out
add
add
sub
dec
rol
jp
xor
int
mov
and
dec
pop
das
imul
cmc
mov
out
jecxz
jne
cwde
in
pop
mov
mov
shl
retf
movs
push
pop
pop
data16
mov
push
cli
jns
pop
cmp
jno
pop
cmps
cmp
push
mov
movs
addr16
rcl
fst
in
call
lock
fnstenv
movs
fwait
xlat
jo
cmps
dec
inc
jb
or
or
push
mov
add
mov
pop
neg
pop
xchg
call
mov
mov
cmp
int3
or
cmp
test
(bad)
cli
ins
rcr
movs
mov
fcom
push
(bad)
lods
sbb
and
xchg
retf
shr
xchg
fadd
inc
push
cwde
in
rcr
lds
cmps
adc
fwait
pop
mov
mov
stos
pop
or
add
inc
xchg
lods
neg
test
mov
push
sbb
jmp
ret
cmps
mov
xchg
ficom
xchg
xchg
mov
fild
adc
imul
pop
fwait
xor
mov
dec
push
adc
jno
adc
push
mov
pop
inc
xchg
je
or
icebp
pop
arpl
(bad)
jmp
push
sbb
leave
and
cmc
loop
inc
lea
dec
nop
dec
outs
inc
xor
mov
cmp
xchg
add
iret
sub
add
lahf
jo
mov
mov
rol
jnp
test
sbb
pop
jmp
jb
jo
pop
and
xor
mul
push
test
push
les
sbb
push
sub
adc
jnp
adc
shl
ja
and
cmps
std
das
int3
cmp
jp
loopne
jmp
adc
xor
mov
mov
jo
cld
mov
and
inc
fsubr
daa
sbb
in
inc
call
gs
sub
jae
ja
jns
dec
mov
jg
inc
fisub
cmp
je
cmc
stos
leave
mov
mov
movs
and
pop
dec
out
retf
jl
xchg
pushf
pop
push
rol
cli
rcr
xchg
xacquire
jbe
arpl
add
or
sbb
out
sbb
add
mov
mov
sbb
loopne
xlat
pop
test
cmc
in
push
stos
jne
enter
movs
test
stos
mov
arpl
push
retf
jbe
pop
outs
jl
mov
popf
mov
mov
push
fimul
(bad)
stc
adc
ss
ins
stos
in
add
cs
ins
cmps
inc
popf
xor
add
(bad)
out
aad
in
mov
sahf
add
outs
and
xchg
cmp
cdq
pop
mov
daa
call
pop
movd
push
jmp
jno
jecxz
ja
clc
lods
ds
loop
mov
stos
dec
sbb
out
xor
std
outs
ins
add
dec
add
pop
fild
dec
add
jbe
stos
cs
pop
add
mov
inc
(bad)
out
and
aad
ins
cmp
into
ins
xor
daa
sbb
mov
out
push
mov
aas
test
stos
add
int
fnsave
idiv
sub
jmp
out
pop
aad
fst
retf
cmp
mov
fcmovne
pop
rcr
cmp
push
(bad)
mov
push
ja
js
das
hlt
sbb
add
add
loopne
retf
mov
adc
inc
mov
call
sar
dec
pop
push
call
adc
pop
mov
rcr
call
fcom
les
enter
xchg
jo
push
sti
dec
nop
iret
inc
imul
lods
dec
and
sub
mov
pop
and
jg
mov
ins
or
dec
movs
cld
aas
xchg
fldenv
nop
fsub
scas
retf
and
pop
mov
mov
mov
pop
push
ret
mov
fidivr
push
mov
mov
sar
test
push
ret
stos
xchg
sahf
fnstsw
fdivr
or
inc
xchg
dec
pop
jmp
setle
sbb
imul
lds
loopne
movs
mov
adc
push
lods
loop
jmp
mov
ins
xlat
outs
inc
add
sbb
sar
mov
test
pop
jecxz
pop
int
(bad)
popa
xchg
movs
shl
jbe
cmps
out
lahf
fstp
mov
clc
outs
pushf
sahf
inc
push
or
xor
dec
sbb
xor
inc
mov
push
mov
mov
repz
lock
add
mov
inc
sub
outs
xchg
mov
cli
rcr
or
ins
xchg
mov
mov
push
push
adc
xchg
inc
jo
cmp
mov
outs
cmp
jecxz
scas
xchg
push
das
ret
mov
xchg
sub
pop
call
fs
pop
adc
push
and
xchg
cmp
enter
sbb
sbb
sbb
mov
enter
xor
jb
push
sbb
mov
jnp
or
(bad)
out
pop
data16
or
push
retf
lds
xchg
adc
mov
out
push
gs
mov
add
add
push
pusha
pop
push
out
push
call
ror
movs
int3
adc
xchg
js
in
sbb
or
enter
data16
call
sbb
shr
les
mov
jge
jmp
clc
sub
pop
aam
repnz
adc
jno
inc
addr16
pop
aam
rcr
and
jne
adc
repnz
les
mov
jp
(bad)
mov
fcomp
cmp
mov
jp
and
lods
outs
xchg
mov
in
sub
ja
das
les
sub
mov
mov
sbb
shl
or
jmp
xchg
fadd
je
retf
jecxz
jle
idiv
imul
call
outs
mov
xor
loope
mov
std
pop
cmp
aam
lds
or
add
cmp
test
pop
push
pop
repz
push
stos
jae
sub
fldcw
adc
and
bndldx
cmp
inc
adc
daa
xchg
faddp
repnz
sbb
cmp
repz
pop
push
dec
mov
pop
call
mov
call
cmp
xchg
dec
shl
push
(bad)
mov
ins
dec
stos
push
repnz
dec
loop
or
cmp
xchg
test
(bad)
sub
jb
call
dec
(bad)
pop
inc
sahf
cmps
loope
pop
(bad)
pop
add
rol
enter
das
(bad)
jno
pop
adc
sbb
jo
mov
mov
sbb
aas
mov
cmps
dec
outs
add
data16
cmp
jg
test
jo
loope
adc
lea
pushf
cmc
xlat
out
mov
call
mov
fldlg2
sbb
imul
mov
mov
les
out
(bad)
sbb
sub
mov
cmp
xchg
call
push
sbb
xlat
ins
push
sub
ins
push
sub
mov
sub
add
imul
call
gs
fucomi
mov
cmp
xchg
and
xchg
pusha
adc
fistp
and
nop
je
imul
call
not
sub
mov
add
in
cmp
adc
jecxz
pop
inc
loope
dec
jmp
sub
jbe
and
fiadd
ins
test
jb
adc
int3
data16
nop
lods
lahf
aas
fsub
es
ja
arpl
mov
mov
xor
push
lods
cmc
shl
nop
mov
mov
sub
mov
(bad)
call
xor
sub
xlat
mov
std
ins
(bad)
out
fucom
xor
cmps
in
mov
and
mov
outs
jo
popa
data16
dec
(bad)
fld
jg
gs
mov
xor
or
call
sbb
mov
enter
retf
inc
sbb
pop
or
xchg
mov
call
xor
cmp
cmp
out
lahf
mov
out
and
dec
(bad)
cmps
add
icebp
imul
mov
inc
dec
icebp
xor
and
lods
scas
mov
lea
mov
inc
sub
push
addr16
(bad)
rol
dec
and
je
sub
pop
mov
cmc
sahf
push
adc
dec
movs
push
inc
hlt
mov
inc
cmps
xor
mov
or
scas
adc
cdq
mov
pop
int
jno
sbb
retf
int
pop
jae
jne
pushf
sbb
mov
clc
inc
xchg
retf
add
xchg
dec
fstp
mov
jno
das
jno
sbb
adc
fist
mov
or
pop
aas
push
scas
jmp
or
enter
mov
outs
cmp
mov
dec
icebp
pcmpgtb
or
push
test
test
cld
xor
mov
pop
xchg
push
(bad)
out
sub
and
pop
jns
int
mov
xlat
mov
add
shr
sbb
test
ror
mov
rol
adc
push
adc
das
call
and
mov
dec
cmps
or
mov
add
sub
jbe
or
inc
cmps
ins
sub
in
inc
std
ret
enter
or
dec
mov
pop
cmp
(bad)
mov
cmp
test
jg
ret
add
out
or
int3
mov
mov
dec
and
jmp
xor
mov
outs
data16
in
inc
sti
pop
ficomp
pushf
js
outs
rol
mov
fcom
mov
shl
cdq
pushf
imul
aaa
fld
cwde
clc
or
or
or
cmp
mov
ja
push
stc
iret
mov
aas
bound
push
imul
add
pop
int
cmps
pushf
ror
adc
mov
mov
cmp
sbb
aad
outs
jmpw
popf
sbb
shr
mov
inc
push
lods
movs
jle
jg
mov
dec
es
cwde
cmp
dec
or
lock
pop
pop
mov
stos
jnp
add
(bad)
adc
rol
int
add
jnp
retf
cmp
nop
cmps
push
shl
jg
(bad)
test
push
es
cmps
or
jmp
into
inc
sahf
fsub
cwde
cs
lods
les
jmp
mov
adc
(bad)
in
sbb
arpl
or
repnz
das
dec
cld
and
in
xor
inc
hlt
retf
and
nop
push
inc
jp
out
adc
cwde
dec
popf
add
jo
scas
sub
push
test
jecxz
das
pop
sti
arpl
cmp
jge
in
jnp
in
push
popf
jo
iret
fisub
xor
mov
in
fsubr
pop
jg
xor
(bad)
ds
dec
movs
loope
sti
scas
retf
stos
cdq
imul
push
pop
dec
in
jl
jb
loope
pusha
cmps
inc
loopne
(bad)
enter
mov
xlat
inc
jmp
pop
jmp
mov
movs
lds
jl
sub
psraw
push
push
(bad)
fsubr
inc
add
pop
cmp
xchg
jne
iret
pop
jge
outs
shl
test
mov
ret
ret
dec
data16
sub
mov
and
xor
push
test
inc
mov
into
jge
mov
imul
jl
push
ds
imul
and
or
jg
out
popa
aas
movs
scas
not
mov
inc
or
push
jg
push
fsub
pushf
fdivr
xchg
add
dec
cmp
loopne
out
xchg
mov
popa
das
xor
jbe
out
outs
push
cmp
icebp
repnz
out
sbb
or
jne
sbb
jb
clc
mov
jge
xchg
shr
nop
in
xchg
pop
push
clc
adc
xor
ret
jmp
into
fldenv
ds
sbb
pop
mov
data16
