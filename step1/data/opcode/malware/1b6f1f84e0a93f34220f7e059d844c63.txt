mov
addr16
into
push
and
sub
push
outs
add
jle
jne
sub
cmps
sar
(bad)
push
aaa
xor
xchg
push
add
daa
sub
in
cmps
sub
and
ins
or
out
aad
inc
mov
xor
(bad)
or
ins
or
out
cdq
and
std
fdiv
xor
int3
mov
movs
and
sub
out
es
fldl2t
jb
addr16
xor
inc
daa
jb
sub
adc
sub
fdiv
mov
jmp
movs
mov
mov
das
(bad)
push
call
shr
and
and
in
(bad)
shr
and
bound
icebp
lods
push
mov
(bad)
sub
imul
sub
aam
stos
push
xchg
mov
lods
and
xchg
daa
and
push
xor
out
shr
pop
xor
xor
jnp
jno
sub
call
and
xchg
daa
cmps
sbb
push
xchg
daa
xor
jge
test
fbstp
mov
out
stos
push
adc
stc
and
aad
call
jno
push
fstp
(bad)
push
out
xchg
jae
mov
push
out
mov
into
pop
jge
fcom
push
xor
inc
aaa
(bad)
jns
lock
fsub
inc
es
gs
das
aaa
aad
sub
push
pop
sub
inc
call
call
call
sub
out
and
movs
imul
daa
mov
add
mov
xchg
daa
add
sbb
aad
jne
push
daa
gs
and
sub
fbstp
ds
jp
add
or
shr
adc
sub
lea
push
xchg
daa
add
bound
sub
mov
xchg
sub
xor
iret
dec
call
mov
add
(bad)
sub
mov
dec
iret
xor
add
add
repz
out
and
add
stos
call
add
shr
dec
(bad)
sub
call
adc
push
xchg
daa
and
(bad)
ficomp
gs
aas
push
dec
mov
adc
cmps
out
daa
sub
xlat
mov
es
push
cmp
cmp
mov
mov
in
inc
inc
daa
jb
inc
daa
or
jmp
sbb
add
lea
sub
sahf
jge
and
jle
and
xor
and
xor
sub
lea
daa
gs
dec
fs
push
jp
fstp
sub
mov
sub
pusha
mov
mov
jb
sub
out
cmp
jbe
fstp
fnsave
inc
jg
add
sub
aad
xlat
and
scas
popf
adc
mov
movq
xor
and
jb
pop
das
lea
push
daa
gs
cmps
mov
mov
push
popa
mov
int3
and
pop
aas
call
daa
call
loope
sub
mov
sbb
gs
push
popa
mov
int3
jl
push
fbld
lahf
sub
mov
mov
push
movs
ret
lods
inc
jg
adc
jo
mov
cli
dec
or
push
popf
or
stos
and
dec
jl
sub
jb
pop
das
(bad)
ficom
gs
cs
imul
push
movs
imul
push
jno
pop
cmp
adc
jne
pop
fisttp
or
fcom
jle
add
xchg
imul
push
movs
imul
and
inc
xchg
bound
jne
lods
inc
jg
add
add
aam
lods
adc
inc
add
or
in
(bad)
fisubr
xchg
or
in
(bad)
rcr
pusha
neg
shl
dec
(bad)
inc
push
mov
(bad)
into
scas
and
inc
or
rcr
pusha
neg
int3
pop
or
fs
jb
lea
pop
mov
mov
addr16
sub
adc
in
xchg
aad
xchg
or
pop
(bad)
ficom
or
mov
sub
lds
addr16
sub
adc
loopne
xor
bound
inc
test
sbb
ficomp
sub
clc
aad
call
jns
dec
jmp
and
sub
pop
imul
daa
ss
lods
adc
scas
fistp
xor
jle
fstp
jge
push
rol
sub
dec
aad
in
sub
adc
loope
mov
mov
imul
popf
stos
fisubr
or
fsub
mov
scas
fistp
stos
call
fstp
inc
scas
and
fsub
scas
es
js
(bad)
in
or
movs
mov
ja
mov
iret
jnp
and
bound
out
scas
and
bound
push
pop
and
pop
xchg
jnp
movs
jne
out
test
fidivr
loopne
mov
mov
scas
jno
ins
push
mov
mov
and
mov
retf
in
mov
bound
fdiv
cmps
xlat
mov
je
aad
jp
inc
outs
fild
retf
and
cmps
stos
call
ror
sub
sbb
cmp
inc
(bad)
movs
js
out
popf
add
in
push
jae
cmps
add
inc
in
xchg
sbb
icebp
call
bound
cs
or
in
(bad)
shr
popf
or
in
(bad)
(bad)
js
(bad)
in
or
movs
mov
pop
aaa
out
fistp
loopne
jle
outs
jb
mov
cmps
or
call
ror
lea
xchg
or
push
ds
push
pop
and
int3
jl
adc
sbb
bound
(bad)
(bad)
add
bound
inc
jne
ds
jmp
jno
or
fisubr
dec
add
in
jl
sub
pusha
neg
sub
aam
fs
jge
scas
and
pop
imul
push
ficomp
jle
jo
push
ficomp
fnsave
xlat
mov
jo
fbld
cwde
and
mov
fucomip
inc
aad
ins
push
push
and
or
sar
mov
jb
sub
popa
mov
scas
xchg
imul
daa
xchg
mov
js
(bad)
in
or
jbe
aam
lods
adc
stmxcsr
add
mov
adc
sub
call
call
das
out
test
adc
call
or
fucomi
inc
ret
sub
cmp
jecxz
xor
iret
movs
mov
pop
das
fiadd
xor
and
shl
popf
or
movs
inc
sub
lea
pop
daa
gs
xor
add
adc
sub
inc
sub
movs
mov
sub
inc
mov
push
cmp
inc
xchg
xchg
sub
call
jp
or
sub
in
inc
sbb
ins
pop
and
iret
ins
inc
pop
adc
jb
out
rol
xchg
sub
jge
xor
sub
in
inc
mov
bound
mov
sub
inc
mov
push
pusha
mov
mov
ins
jge
fdivr
lds
sub
movs
fnsave
inc
jg
cmp
daa
fs
adc
sub
xchg
test
fild
cmps
adc
add
pop
rol
sub
call
pop
rol
sub
(bad)
cli
sahf
gs
jecxz
and
daa
adc
xchg
scas
call
add
mov
adc
sub
mov
jno
add
push
sbb
mov
sub
or
imul
call
iret
(bad)
icebp
sub
jae
sub
call
movs
mov
sub
imul
sub
mov
sub
cmp
(bad)
in
pop
(bad)
fcomp
(bad)
fidiv
(bad)
and
jge
cmp
(bad)
(bad)
movs
sbb
sub
mov
push
(bad)
scas
aas
sub
add
cmps
pop
(bad)
sahf
gs
daa
test
xor
cmps
jge
pop
rol
sub
ss
add
ss
xchg
daa
and
xor
sub
xor
stos
repnz
cmps
in
bound
jp
bound
and
test
(bad)
aaa
in
gs
and
sub
ror
das
out
std
cs
mov
outs
fnsetpm(287
jno
push
and
adc
inc
mov
movs
popa
push
ja
mov
sub
or
ins
inc
pop
sbb
pop
ffree
in
pop
cli
fcomp
pop
neg
fwait
jge
xchg
and
xor
push
sub
or
ins
inc
pop
xor
adc
and
call
push
mov
push
mov
sbb
push
mov
shl
fsub
jp
bound
add
fcomp
and
gs
push
mov
(bad)
in
or
movs
mov
or
jbe
mov
loopne
je
aam
jp
fucomip
inc
test
bound
push
pop
popa
lea
cs
jle
daa
and
gs
in
jb
jmp
loop
bound
outs
and
mov
pop
push
popa
add
or
call
jmp
adc
stos
enter
daa
mov
sub
clc
jne
fsubr
sub
in
jp
fucomip
inc
test
jae
(bad)
mov
and
daa
add
in
leave
or
test
cld
mov
mov
and
and
ins
or
pop
pop
mov
push
and
out
daa
in
pop
pop
sub
stos
sbb
and
fsub
out
daa
out
(bad)
daa
adc
sbb
or
ror
popf
or
dec
gs
sub
jmp
sti
ret
sub
push
repnz
in
(bad)
ror
call
ret
sub
and
aad
in
sub
adc
in
and
adc
mov
daa
call
add
shr
adc
pop
adc
fst
fisttp
fnsave
inc
jg
cmp
daa
addr16
or
xchg
test
scas
mov
inc
scas
ficomp
enterw
mov
mov
call
jge
iret
loope
aad
cmp
jmp
or
push
mov
push
push
gs
adc
dec
aad
call
ja
pop
out
fcomp
jle
fsub
inc
movs
pop
push
mov
sbb
jno
and
cmps
mov
xor
cmp
jge
outs
in
(bad)
(bad)
movs
neg
fstp
shr
loopne
aad
call
daa
sub
and
in
lds
daa
ins
inc
and
daa
call
jge
xchg
and
xor
cli
mov
push
mov
jle
sub
cwde
and
gs
movs
jge
fmul
add
das
in
inc
ins
scas
fdivr
fstp
jl
test
and
in
data16
xor
cmp
jge
pop
in
(bad)
(bad)
movs
lea
inc
out
xchg
fcomp
sbb
daa
add
daa
push
lahf
and
inc
es
imul
call
fcomp
inc
dec
scas
fdiv
aad
call
mov
lea
fcomp
aad
lea
sub
pop
cwde
fcomp
pop
xlat
fcomp
and
lea
out
sub
scas
xchg
call
xchg
sub
sub
lea
lahf
ret
daa
xchg
popa
mov
fsubr
inc
inc
es
jmp
xchg
jge
movs
mov
sub
inc
call
push
fcomp
je
fsub
inc
sbb
mov
mov
sub
jae
sub
and
lea
out
sub
aad
test
daa
and
xor
rcr
mov
pop
sub
fwait
jge
daa
add
das
enter
jp
and
ret
jge
movs
mov
sub
inc
call
push
fcomp
ja
fsub
inc
sbb
mov
mov
sub
in
fcomp
add
and
gs
nop
jge
movs
mov
sub
inc
call
push
fcomp
ja
fsub
inc
sbb
mov
mov
sub
jae
sub
and
(bad)
ret
(bad)
call
daa
mul
loopne
ss
call
dec
out
push
gs
rcr
mov
pop
sub
fwait
jge
daa
add
cli
enter
jp
and
ret
jge
movs
mov
sub
and
sub
pusha
push
fcomp
jbe
fsub
inc
sbb
lahf
inc
es
seta
call
fcomp
jge
daa
mul
loopne
ss
call
pop
push
sub
fdiv
aad
call
xchg
daa
sub
loopne
aad
call
jle
xchg
in
and
and
daa
or
mov
inc
scas
ficomp
test
daa
gs
push
mov
pop
aad
call
fdiv
fisub
sub
test
daa
imul
out
pop
repnz
jge
pop
in
(bad)
(bad)
scas
mov
add
lea
movs
rcl
call
in
daa
cli
fcomp
cmp
fstp
sub
in
mov
loopne
sub
fstp
xor
fstp
imul
call
jge
lods
loopne
aad
call
cmps
cmps
cdq
adc
repz
gs
ja
mov
sub
or
ins
inc
and
daa
call
jge
lods
loopne
aad
call
daa
and
mov
jle
sub
xchg
cs
gs
call
fcomp
jge
pop
in
(bad)
(bad)
movs
test
mov
sub
call
jge
lods
loopne
aad
call
scas
and
dec
in
call
daa
push
iret
and
and
sar
fsubr
inc
cmps
mov
xor
jl
ja
mov
outs
fld
mov
fstp
dec
daa
gs
scas
loopne
aad
call
fstp
jge
fmul
imul
call
daa
gs
sub
daa
(bad)
fcomp
sub
add
sub
mov
jge
retf
call
fstp
shr
loopne
aad
call
movs
mov
adc
fstp
outs
aad
call
stos
loopne
aad
call
fsub
outs
cmp
gs
call
jge
retf
jne
int
popa
sub
xchg
daa
mov
fdiv
or
bound
sub
movs
lea
movs
shr
fstp
jge
fdiv
and
xor
mov
mov
sub
sub
movs
lea
stos
loopne
aad
call
fdiv
out
mov
pop
gs
in
pop
cmps
fcomp
call
daa
push
sub
sub
gs
add
scas
inc
daa
(bad)
mov
in
inc
dec
loopne
repnz
call
fstp
jl
stos
loopne
aad
call
fsub
outs
cmp
gs
call
jge
retf
jne
int
popa
sub
xchg
daa
mov
fdiv
or
bound
sub
movs
lea
movs
ror
fstp
jge
fdiv
and
xor
mov
mov
sub
popf
sub
add
daa
push
cmp
and
xor
jbe
fstp
jl
ja
mov
outs
fcmovnu
adc
gs
scas
loopne
aad
call
sub
pop
sub
gs
call
scas
jmp
aad
call
daa
call
jge
fcom
jmp
call
pusha
in
aas
jle
cwde
jge
aam
cmps
sub
in
jae
cwde
jge
sub
or
scas
xlat
call
dec
popa
jge
mov
jg
fstp
shr
loopne
aad
call
movs
mov
pop
mov
fcomp
ret
sbb
pop
rcr
fwait
jge
xchg
xor
fsubr
pop
jae
cwde
jge
lods
loopne
aad
call
fdiv
sub
loopne
aad
call
stos
loopne
aad
call
movs
mov
pop
mov
fcomp
or
ja
mov
jno
cmp
(bad)
in
pop
jle
fwait
jge
in
pop
xchg
fwait
jge
mov
pop
pop
xchg
fwait
jge
movs
arpl
out
pop
sbb
jge
lods
push
jge
das
out
pop
mov
fwait
jge
lods
push
jge
das
call
mov
pop
pop
(bad)
fcomp
jle
fsub
aas
fcmovu
fwait
jge
push
bound
call
(bad)
in
inc
mov
fdiv
mov
fsub
lods
loopne
aad
call
lahf
push
sub
xchg
popa
mov
fsubr
inc
test
fsub
lods
loopne
aad
call
lods
loopne
aad
call
lods
loopne
aad
call
lahf
jno
sub
xchg
popa
mov
fsubr
inc
mov
fdiv
mov
aas
xchg
jge
js
(bad)
in
or
dec
call
mov
les
dec
scas
inc
sub
gs
aas
ss
scas
add
bound
or
in
jp
shr
retf
bound
(bad)
sub
in
into
pusha
push
sub
cmp
sahf
inc
daa
gs
and
add
cmps
rol
sub
adc
fnstsw
daa
gs
ret
in
(bad)
imul
inc
outs
fistp
cmps
in
bound
or
cmps
or
mov
sub
mov
gs
mov
jge
js
fnstcw
test
sub
hlt
dec
call
ret
jge
jae
push
jb
jp
fucomip
inc
inc
cmps
rol
sub
call
push
jb
dec
daa
gs
jno
outs
dec
daa
cmp
or
sbb
in
(bad)
(bad)
scas
mov
xlat
mov
je
or
(bad)
push
das
xor
loop
lods
or
fsub
sahf
gs
movs
inc
xchg
scas
jp
sub
test
outs
fucomi
inc
test
daa
add
pop
cli
ret
sub
out
and
pusha
outs
mov
xchg
daa
gs
repnz
sub
gs
popa
out
or
rol
and
push
lods
and
sub
jmp
mov
in
xor
or
sub
call
out
mov
bound
jbe
and
imul
retf
add
aas
cli
ret
sub
test
sub
mov
das
addr16
ret
sub
adc
sub
pusha
mov
sub
pusha
mov
ret
xor
sub
je
sub
call
and
sub
pusha
neg
aas
cli
ret
sub
adc
sub
cmp
(bad)
in
(bad)
fisubr
cli
ret
sub
(bad)
data16
mov
add
call
data16
push
inc
ret
xor
sub
add
aas
cli
ret
sub
mov
das
aas
cli
ret
sub
adc
sub
add
aas
cli
ret
sub
in
dec
sub
in
inc
mov
ret
sub
mov
fcomp
ret
sub
adc
sub
add
aas
cli
ret
sub
in
or
mov
imul
sub
mov
aam
call
and
mov
sub
gs
push
lods
or
cmps
push
sub
and
imul
sub
mov
aam
call
fsub
mov
gs
push
lods
or
cmps
push
ret
sub
mov
imul
xchg
mov
fs
mov
mov
mov
mov
gs
and
and
ret
std
sub
and
imul
xchg
mov
add
sub
mov
imul
xchg
mov
sub
pusha
neg
pop
cli
ret
sub
gs
sub
ffree
in
mov
pop
cli
ret
sub
adc
daa
gs
into
mov
(bad)
xor
add
arpl
scas
xchg
les
gs
ins
inc
push
jae
jp
pop
bound
mov
pop
add
daa
gs
imul
sub
sbb
pushf
gs
aas
cli
ret
sub
mov
and
ss
retf
clc
ret
sub
pusha
mov
or
pusha
mov
jmp
inc
sub
push
ret
push
inc
ret
jnp
sub
lods
stos
loop
movs
jge
push
rol
sub
pusha
call
mov
jb
lods
and
daa
and
xchg
or
sub
xchg
daa
or
sub
and
xchg
pusha
repnz
add
and
(bad)
fsubr
rol
fstp
movs
sub
push
mov
pop
xchg
ret
call
sub
sub
test
outs
retf
in
inc
and
cmps
sub
outs
and
and
sub
ins
adc
out
outs
mov
jo
push
shl
cmps
sbb
and
das
das
cmc
ret
mov
pop
add
(bad)
xor
lods
and
movs
or
popa
out
or
rol
test
shl
(bad)
fsub
adc
pop
and
xchg
mov
sub
inc
mov
aas
in
jb
lods
jo
mov
scas
popa
xchg
adc
imul
mov
sub
ret
mov
sub
inc
mov
aas
in
jb
lods
jo
mov
scas
popa
xchg
add
push
les
das
sub
ret
mov
shr
xchg
stos
repnz
push
push
inc
push
arpl
jmp
inc
sub
ds
jmp
ja
aad
cmp
and
lahf
clc
retf
xchg
mov
fsub
sahf
gs
add
jmp
cmp
sub
(bad)
fimul
popf
daa
cmp
loop
daa
(bad)
xchg
mov
cmp
in
(bad)
shr
daa
cmp
loop
daa
(bad)
jbe
gs
jge
js
sub
(bad)
mov
gs
jge
push
fimul
out
cmps
xlat
mov
je
aad
imul
scas
mov
jge
push
rol
sub
cmp
call
xchg
jbe
daa
sub
lea
repnz
outs
sub
xchg
inc
outs
shl
out
daa
in
dec
xor
test
and
ss
daa
fstp
daa
gs
scas
and
mov
daa
mov
sub
and
daa
and
in
(bad)
retf
neg
xchg
sub
in
stos
cmp
rol
dec
lahf
xorps
pusha
sub
xchg
daa
cmps
bound
test
stos
and
fdiv
mov
gs
(bad)
pop
sub
and
jp
movq
gs
pop
ret
lea
dec
daa
movq
call
add
pop
sub
pusha
neg
fcom
and
jb
aad
sub
int3
xchg
fldcw
daa
call
daa
call
bound
movq
xor
ret
sub
jno
pop
xor
dec
jmp
retf
jns
outs
fist
rcr
scas
cmps
stos
call
bound
outs
xlat
out
iret
cmp
xchg
sbb
in
xlat
(bad)
scas
and
and
add
(bad)
shl
mov
dec
gs
xor
mov
xor
imul
(bad)
fmulp
imul
ins
gs
cdq
or
in
(bad)
(bad)
out
cmps
xlat
mov
jo
fwait
stos
rcr
jmp
daa
call
push
ins
call
mov
fnsave
xor
iret
movs
mov
pop
das
out
fbld
fsub
sahf
gs
sub
xchg
call
xchg
and
sub
adc
sub
call
xchg
and
sub
adc
sbb
push
and
jne
outs
and
or
sbb
xchg
adc
and
sub
(bad)
aad
rol
sub
rcl
scas
mov
sub
lahf
enter
xchg
adc
push
mov
fucom
push
cmp
cmps
not
lahf
add
and
xor
xor
dec
in
jp
iret
popa
lea
sbb
xor
fmul
inc
and
fwait
daa
cmp
fild
daa
push
jg
push
push
ds
jno
clc
fwait
daa
cmp
(bad)
ja
or
out
aad
xor
sub
out
cs
mov
outs
(bad)
push
scas
and
bound
outs
and
adc
lea
and
daa
mov
inc
out
add
and
mul
into
push
jge
fcomp
sub
in
jp
cmps
pop
test
push
cs
movs
lea
pop
addr16
jp
iret
data16
and
pop
scas
popf
add
and
and
pop
xor
mul
scas
popf
add
and
mov
mov
stos
xor
test
xor
daa
in
adc
adc
mov
and
jbe
popf
add
and
adc
mov
cmps
pop
test
push
and
shl
test
iret
sub
bound
pop
or
dec
aad
xor
sub
out
cs
mov
repnz
lea
outs
aaa
call
jp
iret
popa
or
in
xchg
das
es
pop
mov
shr
mov
mov
cmps
pop
test
push
pop
or
movs
lea
pop
adc
jp
iret
popa
lea
imul
and
sub
div
iret
(bad)
fldcw
daa
out
xlat
cmp
lahf
add
and
xchg
es
in
sub
and
cmp
jno
cmps
xlat
mov
je
aad
and
ss
int3
jns
aad
bound
push
sbb
and
jge
and
sbb
ret
sbb
or
dec
push
daa
gs
ret
daa
sub
rol
sub
rcl
cmp
xchg
mov
scas
popf
xor
lea
(bad)
call
daa
push
cmp
sub
test
adc
shr
pop
sub
or
and
xchg
sub
and
and
ret
and
iret
mov
cs
(bad)
xor
bound
stos
cli
scas
lahf
xor
mov
outs
shr
(bad)
xor
out
xlat
fisubr
cmc
ret
sahf
xchg
out
aad
xchg
xor
mov
shl
mov
xchg
adc
movd
or
in
xchg
aad
adc
push
push
popf
movd
pusha
cmp
lea
sub
es
xor
enter
aas
jg
shr
adc
fsub
inc
es
(bad)
in
or
lahf
cmp
jae
sar
jl
fcomp
jge
daa
lea
jo
gs
pop
and
jge
loope
jno
fcomp
ss
les
xchg
and
fcomp
ds
cmps
fsub
fcomp
xor
aam
jge
cmps
pop
xchg
daa
sub
imul
call
fmul
dec
and
fwait
daa
cmp
fsubr
daa
out
pop
cmp
jge
and
shl
mov
ins
aad
push
dec
xor
imul
mov
fcomp
ret
sub
mov
pop
mov
call
add
jge
es
scas
aam
jge
dec
movs
pushf
stos
sbb
xchg
gs
mov
jge
sub
pop
fxch
call
xor
push
lea
sub
pop
fxch
call
xor
pop
(bad)
clc
call
daa
in
leave
clc
call
daa
gs
ficomp
pop
aad
call
mov
pop
aad
in
push
jmp
jae
leave
xor
pop
das
daa
gs
loopne
(bad)
mov
int3
inc
jmp
rcr
daa
in
inc
test
and
mov
pusha
in
sub
adc
xchg
ins
aad
adc
mov
xor
adc
adc
push
enter
into
jmp
jge
daa
gs
retf
mov
fcom
pop
cmc
fcomp
jge
jecxz
or
ins
inc
pop
inc
out
stos
stc
call
fcomp
or
out
sub
cmp
add
fcomp
jge
and
pop
cli
in
aad
sbb
pop
das
daa
jne
sub
call
daa
gs
daa
xchg
sub
sar
fisttp
fld
fsub
sub
out
pop
cmps
stc
call
push
loopne
(bad)
lea
pusha
neg
(bad)
mov
fisubr
daa
mov
sub
lea
movs
pusha
sub
and
out
fmulp
call
fcomp
pop
jmp
addr16
retf
and
imul
mov
out
and
test
loopne
outs
adc
xchg
ins
aad
in
fmulp
call
nop
call
call
jno
cmp
push
daa
or
scas
cmps
cmp
daa
in
pop
mov
call
scas
loopne
hlt
fcomp
jge
lods
lock
fcomp
and
out
pop
mov
call
fsub
mov
fsubr
pop
xchg
call
fsubr
pop
idiv
call
clc
call
fcomp
and
pop
pop
xchg
clc
call
clc
call
fsub
clc
call
fsub
jmp
pop
jb
aad
movs
push
xchg
clc
call
sub
sub
lock
fcomp
neg
mov
ins
aad
movs
pusha
sub
test
aad
imul
(bad)
inc
enter
aas
pop
hlt
ret
lock
fcomp
cmp
aad
daa
in
pop
call
pop
dec
es
pop
sub
out
pop
fmulp
call
daa
sbb
jmp
es
push
es
sub
loopne
(bad)
or
and
daa
out
aad
and
cmc
fcomp
jge
daa
out
into
clc
call
fcomp
mov
fisub
div
xchg
add
and
mov
fisub
mul
scas
xchg
add
and
mov
shr
xchg
daa
and
call
cmp
hlt
fcomp
mov
pop
xor
xchg
es
lea
arpl
mov
fmul
lea
fsub
xlat
out
xchg
mov
ret
mov
add
es
mov
out
and
call
es
adc
sub
sbb
mov
sub
adc
sub
sbb
mov
sub
adc
pushf
mov
ins
inc
push
and
and
adc
(bad)
rcl
xchg
mov
aaa
(bad)
clc
call
movs
mov
pop
aad
imul
shl
call
fsub
ret
and
sub
mov
call
enter
call
sub
pop
push
aad
adc
push
fcomp
jge
es
scas
aam
jge
dec
movs
pushf
stos
sbb
xchg
gs
cmp
jno
cmps
xlat
mov
je
aad
jp
inc
outs
fcomip
int3
fs
fst
dec
fucomip
(bad)
out
and
bound
nop
shr
je
sub
xchg
mov
push
cmps
or
call
pop
xchg
gs
sub
sti
stos
push
push
xchg
gs
and
dec
push
push
mov
push
cmps
or
in
aad
mov
xchg
mov
fstp
aas
rcl
stos
bound
(bad)
aam
in
aam
pop
stos
dec
popf
mov
daa
gs
outs
fisub
mov
and
pop
(bad)
aas
jmp
mov
bound
adc
sub
or
outs
je
sbb
popf
or
in
(bad)
shr
rol
sub
movs
sub
out
push
popa
add
lea
xchg
and
jp
pop
popa
add
lea
movs
mul
movs
test
cmps
and
sub
shr
movs
sub
pop
add
daa
imul
cmps
and
cmps
and
sbb
and
daa
sbb
shr
adc
stos
bound
lea
fsub
xchg
mov
fistp
aas
not
test
sub
in
(bad)
and
mov
out
in
(bad)
out
rol
dec
mov
fild
sub
out
sub
adc
and
jns
dec
jmp
je
aad
push
ins
cmp
xchg
jl
sub
or
fucomi
inc
inc
fsub
sub
add
aaa
sub
xchg
add
fsub
not
scas
mov
mov
outs
adc
and
add
sbb
jns
dec
jmp
das
inc
sub
ins
shr
daa
xor
xchg
mov
or
popf
sub
xchg
mov
fsubr
inc
cmps
push
imul
scas
daa
test
ja
cmp
cmp
shr
sar
call
(bad)
call
daa
out
cmp
xchg
or
push
popf
or
js
dec
jmp
jo
adc
bound
dec
gs
in
(bad)
(bad)
scas
mov
jge
das
jb
sub
inc
jg
add
aaa
ss
cwde
icebp
rcl
in
cs
add
add
daa
gs
sub
sub
call
daa
in
inc
test
movs
sbb
outs
sub
mov
addr16
gs
int3
xor
sub
pop
jnp
gs
movs
movs
xchg
jp
and
and
gs
in
(bad)
fisubr
sbb
outs
sub
(bad)
fcmove
arpl
outs
fucomip
(bad)
fcmovu
adc
fcom
jle
iret
cld
shr
daa
xor
jbe
and
out
(bad)
(bad)
js
(bad)
in
or
jbe
sar
out
in
xor
(bad)
sub
gs
jb
sub
movs
jge
das
(bad)
into
js
gs
movs
fwait
jge
and
inc
in
movs
arpl
inc
and
xor
jne
and
lods
jge
cmps
pop
sub
pushf
or
dec
gs
aaa
rcl
push
imul
sub
movq
xor
pusha
push
jne
cmp
sub
fst
daa
gs
scas
and
bound
sub
cmp
jno
cmps
xlat
mov
jo
push
inc
mov
pop
sub
gs
jb
sub
movs
jge
das
lea
jnp
gs
scas
popf
adc
mov
xchg
out
mov
and
xor
jbe
add
(bad)
(bad)
ja
idiv
fcom
mov
shr
daa
xor
ja
adc
or
fucomip
inc
sbb
and
xlat
mov
je
aad
push
ins
inc
outs
fld
not
(bad)
imul
int3
bound
jmp
pop
xchg
rcl
push
imul
ret
sub
and
in
inc
mov
lds
add
xor
sbb
mov
jp
push
pusha
push
daa
gs
das
es
sbb
mov
pop
and
mov
jl
dec
pusha
push
daa
gs
das
out
(bad)
(bad)
scas
and
bound
(bad)
fisubr
ds
jmp
retf
jne
jl
out
fbld
lods
adc
aaa
movups
outs
fucomi
(bad)
shr
popf
or
in
(bad)
(bad)
dec
pop
pusha
push
daa
fistp
fmul
mov
push
daa
gs
das
and
or
daa
add
sub
in
(bad)
xor
sub
(bad)
in
or
movs
mov
and
icebp
call
xchg
outs
sti
in
inc
dec
loopne
pusha
sub
out
(bad)
daa
out
ret
out
daa
call
sbb
daa
gs
in
loopne
sub
add
lds
mov
addr16
mov
bound
(bad)
aad
rol
das
(bad)
out
xor
and
pop
call
and
in
aad
adc
minps
outs
(bad)
in
inc
mov
addr16
mov
and
movs
movs
pushf
sub
add
imul
push
scas
mov
add
add
gs
lahf
loop
sub
xchg
popa
mov
lods
and
jg
push
cmp
mov
jmp
xlat
enter
sub
or
in
dec
add
lea
scas
and
bound
sub
and
mov
jne
stos
cli
sub
xlat
enter
sub
or
push
push
out
xlat
and
rcl
and
mov
outs
ret
out
(bad)
into
js
(bad)
in
adc
daa
jne
sub
adc
mov
inc
mov
or
adc
mov
adc
cmc
adc
mov
adc
cmc
adc
mov
adc
push
adc
mov
adc
mov
push
leave
gs
mov
inc
mov
cmp
adc
mov
adc
mov
pop
mov
retf
cmc
adc
mov
adc
in
xchg
xlat
fsub
adc
daa
fidivr
and
mov
jp
and
adc
and
adc
mov
mov
mov
adc
mov
mov
mov
mov
add
sub
adc
mov
mul
mov
adc
mov
in
xchg
je
aad
jne
sub
ret
imul
sub
xchg
sub
and
mov
daa
jne
sub
cmc
adc
cmc
adc
mov
adc
cmc
adc
adc
adc
mov
adc
cmc
cmc
adc
mov
adc
mov
jne
mov
adc
mov
adc
push
aaa
add
cmc
adc
fcomip
adc
mov
adc
mov
jp
mov
adc
cmc
adc
gs
mov
inc
mov
cmc
cmc
adc
mov
adc
mov
jne
mov
adc
mov
adc
adc
mov
mov
mov
mov
adc
fcomip
adc
mov
adc
cmc
adc
ss
jge
in
or
movs
mov
ja
out
(bad)
es
in
(bad)
es
jle
inc
out
stos
dec
cdq
xchg
cmp
lods
and
bound
out
scas
and
bound
sub
test
sub
xor
jge
scas
cmps
or
out
(bad)
(bad)
scas
cmps
sub
xor
pop
sahf
sbb
(bad)
shl
mov
sub
sbb
sub
push
jg
in
jnp
idiv
jne
scas
movs
or
cld
jne
scas
cmps
or
out
xchg
adc
cmc
cmp
push
cmp
ror
ror
scas
or
sub
xchg
xchg
mov
sub
xchg
and
in
in
xchg
xchg
mov
sub
add
bound
mov
sub
and
iret
xor
sub
push
outs
fdiv
shl
jb
cmp
lea
sub
and
scas
mov
mov
out
add
(bad)
(bad)
scas
cmps
mov
scas
xor
loope
in
bound
retf
push
cmp
call
jb
addr16
jo
jne
mov
or
sti
in
inc
ret
sub
push
or
ror
(bad)
jmp
jp
loopne
mov
mov
scas
xchg
jne
scas
and
loope
mov
sub
mov
into
sub
(bad)
retf
mul
iret
sbb
fsub
inc
and
loope
sub
lea
out
xchg
pop
mov
shr
jno
sbb
or
xor
int
call
scas
mov
shr
(bad)
fisub
cmp
gs
in
(bad)
(bad)
scas
mov
or
and
inc
xchg
gs
sub
daa
and
mov
xchg
cli
call
sub
in
inc
test
out
fadd
sub
dec
xchg
gs
mov
fadd
sub
in
jb
xlat
in
inc
mov
lods
jo
xchg
gs
movs
and
xchg
xchg
call
repz
cwde
iret
sub
in
(bad)
cli
iret
nop
iret
sub
out
(bad)
cli
sub
jge
in
xor
and
in
mov
ret
sub
and
cmc
sub
and
sub
push
jmp
jne
std
scas
pop
pop
xchg
gs
pop
jp
sub
jmp
xchg
call
sub
out
xchg
(bad)
fmulp
jg
fcmovbe
or
out
in
inc
mov
lods
jo
xchg
gs
movs
and
xchg
xchg
call
cld
xchg
(bad)
fcmove
jb
fisub
xchg
or
scas
mov
xchg
neg
out
fisub
les
gs
push
and
(bad)
in
pop
sub
mov
xor
enter
xor
bound
neg
shr
imul
and
(bad)
mov
lods
push
or
sbb
in
(bad)
loop
mov
imul
movs
or
sub
mov
and
push
fistp
call
sub
call
sub
mul
iret
call
(bad)
into
dec
gs
xor
jge
ret
lea
les
adc
mov
(bad)
into
arpl
gs
addr16
jno
cmps
xlat
mov
and
xor
xor
inc
mov
daa
in
pop
xchg
daa
add
call
xlat
in
inc
ret
sub
mov
dec
aaa
xor
jmp
pop
and
cli
jle
inc
test
scas
lock
fcomp
imul
push
push
fcomp
push
addr16
jne
mov
frstor
sar
dec
dec
mov
movs
cmps
jecxz
mov
jge
fcomp
or
pop
mov
pop
sub
iret
xchg
leave
sub
in
inc
fsub
mul
loopne
aad
call
fcom
fcmovbe
or
retf
cwde
jge
scas
mov
jge
ja
adc
(bad)
daa
and
xor
add
add
add
sub
and
jge
ja
jmp
cwde
jge
scas
xchg
stos
fisubr
fisttp
out
gs
mov
sub
gs
cwde
jge
ja
xor
gs
xchg
jg
fmul
jge
rcr
lds
daa
call
dec
mov
pop
aad
call
daa
in
jb
xlat
in
inc
cmps
mov
xor
and
xor
add
arpl
sub
pusha
neg
(bad)
daa
add
shr
loopne
aam
call
iret
inc
sub
ss
test
sub
sub
lea
jae
je
jb
xor
dec
jmp
ja
aad
push
jno
mov
pop
stos
enter
daa
call
loopne
les
daa
out
(bad)
daa
call
(bad)
(bad)
ja
add
lea
dec
gs
pop
sub
retf
sub
in
jp
fucomip
inc
mov
addr16
sub
adc
bound
call
pop
aaa
call
daa
call
daa
cmp
jecxz
xor
iret
jbe
cmp
mov
bound
xchg
ret
sub
fs
push
jno
pop
aaa
call
push
sub
mov
xlat
mov
jge
mov
sub
jbe
ds
idiv
fcom
mov
push
ins
push
daa
sub
xor
iret
jbe
aad
les
cmps
xchg
or
gs
xor
call
sub
jb
aad
imul
daa
gs
push
popa
mov
int3
push
jge
aas
call
daa
call
xor
movs
mul
fcom
jle
lds
imul
scas
mov
push
bound
gs
cmp
jb
addr16
lods
adc
mov
es
jp
loopne
test
scas
popf
mov
scas
mov
jmp
call
mov
movs
imul
push
movs
imul
jno
add
idiv
fcom
jle
lods
sub
mul
fcom
jle
inc
sub
imul
sub
(bad)
xor
ins
or
rol
inc
jne
lods
inc
jg
adc
jno
cmp
mov
loopne
mov
sub
push
arpl
jp
sub
sub
in
(bad)
shl
gs
lock
adc
popf
test
loopne
sub
gs
dec
(bad)
daa
add
and
push
pop
and
adc
aad
cdq
push
push
daa
or
mov
daa
cmp
jecxz
fcomp
fisttp
and
retf
gs
cmps
xlat
mov
jo
mul
pushf
outs
mov
cmp
and
pop
mov
outs
sub
js
in
or
cmps
rcl
push
jne
sub
jecxz
or
or
mov
and
movs
add
in
pop
add
in
inc
ins
cmps
pop
mov
push
sub
push
cmps
pop
mov
shr
mov
mov
daa
in
pop
ffree
in
(bad)
(bad)
scas
cmps
or
and
sub
and
in
inc
and
adc
ja
idiv
iret
inc
shr
in
pop
ffree
in
(bad)
(bad)
scas
cmps
or
fs
sub
cs
pop
ffree
in
(bad)
(bad)
scas
cmps
fnsave
inc
jg
add
xor
aam
lods
cmp
sbb
pop
add
jno
sub
ss
arpl
mov
test
push
js
sub
in
(bad)
fisubr
inc
mov
int3
jae
pushf
and
ficom
inc
pop
sub
out
pop
scas
popa
mov
sbb
jp
ret
outs
fldenv
shr
push
fldcw
push
sbb
jp
cmp
xchg
jnp
icebp
out
dec
jno
jp
cmp
sub
imul
push
test
pop
xchg
aad
jge
shr
lea
out
xor
jge
fldcw
outs
fstp
rcl
or
mov
call
xlat
cmp
jno
cmps
xlat
mov
and
cmp
cmp
jmp
in
daa
(bad)
fwait
jge
movs
shr
call
fdiv
rcr
fcomp
inc
stos
in
enter
je
and
push
outs
sub
fdivr
fstp
push
fs
mov
pop
xor
or
lahf
jl
sub
xchg
daa
rcr
fwait
jge
mov
out
aas
repnz
jge
fcom
mov
stos
fnstcw
jge
and
and
fstp
daa
gs
scas
loopne
aad
call
and
iret
pop
shr
(bad)
jnp
gs
scas
loopne
aad
call
mov
in
inc
test
sbb
fsubrp
inc
inc
das
out
pop
loop
cwde
jge
fnsave
push
jmp
jge
jecxz
jmp
ins
push
popa
sub
daa
adc
cdq
jge
fmul
add
das
lea
outs
daa
cmp
daa
xor
sbb
sub
sar
fstp
sub
adc
xchg
jnp
frstor
or
sbb
sub
fsub
sub
gs
fidiv
or
jo
mov
ret
sub
mov
pop
mov
daa
cmp
daa
xor
sbb
sub
sar
fstp
sub
daa
adc
cdq
jge
fmul
add
das
lea
and
xor
sbb
sub
sar
fstp
sub
adc
xchg
jnp
frstor
or
test
sub
fsub
sub
gs
fidiv
or
jo
mov
ret
sub
mov
jmp
cdq
jge
fdiv
cmp
(bad)
sub
out
ds
mov
push
arpl
xchg
sub
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
shr
sar
fstp
sub
adc
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
shr
sar
fstp
sub
push
sub
inc
(bad)
sub
fmul
fstp
out
das
pop
inc
push
arpl
xchg
inc
sub
xchg
jnp
lods
fdivr
fstp
shr
lea
out
aaa
lea
daa
gs
and
xor
test
sub
call
stos
loopne
aad
call
fistp
push
retf
rol
cmc
sub
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
lea
imul
xor
cdq
jge
fdiv
jmp
clc
shr
out
cmp
xchg
popa
mov
fsubr
inc
ret
sub
outs
sub
cld
jne
movs
lahf
xchg
or
jge
fistp
shr
out
and
sub
sub
fmul
fstp
out
das
pop
jbe
loope
daa
adc
cdq
jge
fmul
add
das
lea
and
xor
sbb
sub
sar
fstp
sub
cmp
bound
call
fstp
shr
lea
daa
gs
xor
cmp
daa
xor
sbb
sub
sar
fstp
sub
adc
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
lea
push
daa
xor
cdq
jge
fdiv
jmp
sbb
sub
out
cmp
imul
daa
add
daa
mov
sub
gs
scas
daa
gs
daa
fstp
leave
scas
loopne
aad
call
ficomp
pop
jmp
jge
fcomp
rcr
fwait
jge
dec
out
aas
jmp
jge
fsubr
push
sbb
jp
cmp
xchg
jnp
in
shl
daa
cmp
mov
push
aad
call
stos
fadd
inc
jge
shr
fadd
ret
sub
mov
jge
fsub
aas
xchg
fcomp
sbb
aaa
(bad)
fwait
jge
push
jge
scas
daa
gs
ja
pop
(bad)
fcomp
bound
xor
sub
adc
sub
fmul
fstp
out
das
pop
jbe
ja
daa
adc
cdq
jge
fmul
add
das
(bad)
fisubr
cmp
daa
xor
sbb
sub
sar
fstp
sub
adc
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
jge
fsub
sub
call
mov
pop
pop
jmp
jl
fsubr
pop
(bad)
fcomp
jmp
daa
mov
sub
or
in
pop
rcr
fwait
jge
push
fadd
and
daa
in
pop
jle
and
adc
popf
jge
fsubr
data16
in
pop
(bad)
fcomp
jmp
xchg
jge
fdiv
sub
call
cmps
pop
sub
pushf
or
inc
in
aas
call
jmp
in
pop
sub
call
fcomp
jbe
ficomp
sub
loopne
aad
call
movs
mov
jge
fcomp
jge
push
jge
lahf
xlat
call
fstp
shr
lea
out
aas
lea
and
xor
sbb
sub
sar
fstp
sub
sbb
mov
sub
gs
fsubp
js
pop
jbe
loope
daa
adc
cdq
jge
fmul
add
das
lea
daa
cmp
daa
xor
sbb
sub
sar
fstp
sub
call
daa
call
call
jge
fsubr
inc
cmps
mov
xor
jl
jno
mov
fcomp
pop
rcr
fwait
jge
out
pop
cmps
fstp
shr
sar
fstp
sub
pop
sub
and
sub
gs
fsubp
js
pop
jbe
ja
daa
adc
cdq
jge
fmul
add
das
lea
and
xor
sbb
sub
sar
fstp
sub
adc
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
shr
sar
fstp
sub
mov
mov
sub
gs
fsubp
js
pop
inc
push
sbb
xchg
inc
sub
xchg
jnp
lods
fdivr
fstp
shr
lea
adc
gs
aaa
lea
adc
cmp
daa
xor
sbb
sub
sar
fstp
sub
adc
xchg
jnp
frstor
cmp
bound
call
movs
pop
sub
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
or
jge
fistp
mov
and
gs
sbb
xchg
sub
xchg
jnp
frstor
or
fs
sub
gs
fidiv
or
jo
mov
ret
sub
mov
shr
sar
fstp
sub
adc
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
sub
xchg
scas
out
jg
scas
cmps
jmp
cdq
jge
fmul
add
das
lea
pop
daa
cmp
daa
xor
sbb
sub
sar
fstp
sub
daa
adc
cdq
jge
fmul
add
das
(bad)
add
scas
loopne
aad
call
daa
fmul
fstp
out
das
pop
jbe
fcmovb
daa
adc
cdq
jge
fmul
add
das
call
jge
lods
loopne
aad
call
ja
sahf
pop
daa
gs
aaa
lea
daa
cmp
daa
xor
sbb
sub
sar
fstp
sub
daa
adc
cdq
jge
fmul
add
das
in
mov
gs
pop
sub
outs
sub
cld
jne
movs
lahf
xchg
or
jge
fistp
mov
and
cld
mov
sub
gs
fsubrp
push
stos
loopne
movs
sub
xor
xchg
fistp
push
gs
test
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
or
jge
fistp
mov
and
xchg
popa
mov
fsubr
inc
inc
stc
mov
jle
fstp
sub
adc
xchg
jnp
frstor
cmp
pusha
push
fcomp
sub
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
lea
daa
cmp
xor
cdq
jge
fdiv
jmp
mov
cmp
pop
push
fcomp
sub
mov
add
add
sub
and
cli
adc
or
scas
mov
jge
fistp
mov
cmps
call
aad
cdq
jge
fcomp
jge
icebp
pop
sub
shr
ficomp
adc
cdq
jge
fmul
add
sbb
push
pop
and
cmp
jno
cmps
xlat
mov
es
cld
stos
data16
jp
fucomip
inc
in
bound
jp
fucomip
inc
and
dec
out
pop
push
fstp
mov
inc
mov
loopne
aam
call
iret
mov
aad
out
cmps
and
lods
and
and
cmp
daa
or
jmp
sub
or
jmp
mov
sub
(bad)
loope
fcomp
jp
fucomip
inc
jne
cmps
xlat
mov
and
xor
mov
mov
in
inc
test
fsub
outs
das
in
sub
icebp
inc
test
mov
jge
lods
and
sub
or
scas
popf
jne
scas
loopne
xlat
fcomp
or
in
inc
test
cdq
push
sub
xor
push
fcomp
sub
loopne
xlat
fcomp
jge
iret
cld
mov
daa
out
xlat
and
movd
shl
in
jp
fucomip
inc
jl
adc
pop
ficomp
jg
fmul
or
fcom
sbb
fcomp
and
cwde
jge
stos
xor
xlat
fcomp
movd
in
jg
fsub
inc
cmp
inc
daa
mov
mov
daa
in
pop
mov
sar
in
sub
setb
call
jge
iret
adc
pop
daa
gs
xchg
pop
sub
popa
sub
call
jge
dec
retf
daa
or
jmp
mov
movs
mov
xchg
jl
jl
sub
push
inc
ret
inc
sub
mov
daa
gs
fstp
jp
loopne
xchg
daa
gs
fwait
jge
ja
pop
sahf
ficomp
mov
daa
call
xchg
cmc
jg
fcomp
jge
xchg
in
jg
fcomp
jge
xchg
lds
fdiv
imul
lea
out
pop
in
pop
mov
call
iret
shl
aam
sub
lds
call
jge
iret
je
sub
in
aas
and
cmps
mov
xor
jge
ja
jp
daa
gs
enter
mov
in
mov
add
and
xor
sub
popa
sub
loopne
aam
call
ret
fwait
jge
es
mov
jge
daa
out
scas
ficomp
in
mov
and
call
jge
iret
test
imul
call
jge
dec
gs
sub
call
aam
call
daa
gs
sub
pusha
sub
gs
(bad)
cwde
jge
iret
jl
sub
(bad)
daa
gs
scas
loopne
xlat
fcomp
push
xlat
fcomp
add
shr
loopne
aam
call
movs
mov
jg
fsub
add
popf
stos
shr
fwait
jge
ja
div
gs
adc
mov
cmp
push
daa
gs
adc
stos
mov
or
sbb
loop
mov
cli
sub
lea
push
daa
add
daa
adc
sub
hlt
mov
daa
or
imul
fwait
jge
ja
push
adc
inc
es
imul
fwait
jge
ja
pop
xchg
fcomp
jge
daa
div
fcomp
daa
mov
call
daa
imul
mov
xor
sub
xor
adc
add
aaa
mov
call
fcom
xlat
fcomp
and
mov
mov
fsubr
inc
jne
ds
call
ret
ss
aad
jp
cmp
mov
loopne
mul
iret
pop
mov
daa
in
inc
dec
scas
xor
outs
iret
sub
call
daa
in
inc
dec
scas
xor
push
jne
cmp
in
or
ss
adc
mov
shr
outs
fldcw
jg
fs
and
imul
jg
call
call
sub
in
inc
xchg
mov
sub
or
xlat
in
inc
sbb
out
ss
jmp
xchg
xlat
and
sub
mov
or
movs
movs
xchg
clc
mov
daa
in
push
ss
imul
jp
loopne
sub
call
stos
and
stos
and
sbb
shl
arpl
and
imul
jg
call
push
push
adc
or
iret
in
inc
cmps
bound
jmp
jb
sub
lea
outs
fbstp
sub
popf
jne
scas
and
loopne
push
push
and
lods
inc
jg
cmp
cmp
ret
sub
xor
mov
or
leave
mov
loopne
mov
fsubr
inc
in
mov
and
pop
xchg
(bad)
call
fcomp
shr
js
sub
in
inc
and
push
mov
shl
sub
ss
jecxz
jge
iret
mov
and
movs
div
fcom
dec
retf
jge
sub
or
push
popf
or
push
movs
ret
mov
jge
cmp
cmps
mov
xor
jge
ja
push
or
and
adc
mov
jecxz
jge
iret
lock
daa
out
and
movs
div
fcom
dec
retf
jge
sub
add
sub
push
movs
ret
mov
sbb
mov
loopne
fdiv
cmps
xlat
mov
daa
gs
or
jns
xor
ja
(bad)
pop
icebp
pop
add
mov
sub
xchg
sbb
mov
sub
aam
sub
in
pop
test
sbb
fsubrp
inc
inc
das
in
pop
sub
aaa
push
pushf
call
es
or
dec
xor
daa
ss
adc
test
rol
jge
lods
loopne
cmc
fcomp
arpl
call
jge
iret
sub
and
dec
mov
daa
fmul
fstp
out
das
pop
jno
fcmovb
daa
and
xor
sub
adc
xchg
jnp
frstor
add
nop
mov
daa
fsub
sub
gs
fidiv
seta
test
jo
(bad)
gs
test
jo
outs
sbb
gs
aaa
lea
daa
cmp
daa
xor
sbb
sub
call
movs
mov
mov
retf
gs
test
ja
push
sbb
gs
das
lea
sbb
cmp
daa
xor
sbb
sub
call
movs
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
(bad)
(bad)
sbb
cmp
xor
gs
aad
xor
jb
daa
and
xor
adc
sub
or
imul
test
ja
mov
scas
daa
test
ja
stos
sbb
gs
xor
jb
xlat
in
inc
ret
sub
outs
sub
cld
jne
movs
lahf
xchg
or
imul
test
ja
mov
out
das
or
imul
test
ja
mov
daa
gs
das
lea
daa
cmp
daa
xor
sbb
sub
call
movs
mov
shr
loopne
retf
rol
cmc
push
sub
mov
jb
loope
or
daa
cmp
daa
xor
sbb
sub
cld
jne
jne
aas
sub
call
daa
call
jge
iret
or
cmp
bound
call
jge
iret
sbb
and
pop
mov
daa
fmul
fstp
out
das
pop
jno
fcmovb
daa
and
xor
sub
gs
in
pop
(bad)
call
gs
test
ja
mov
daa
gs
das
lea
daa
cmp
daa
xor
sbb
sub
call
movs
mov
shr
loopne
retf
rol
fst
movs
mov
loop
daa
lea
sbb
cmp
daa
xor
sbb
sub
call
movs
mov
imul
test
ja
lods
hlt
gs
test
ja
push
sbb
gs
aaa
(bad)
out
sbb
cmp
daa
xor
sbb
sub
call
movs
mov
shr
loopne
retf
rol
push
push
sub
mov
sub
outs
sub
cld
jne
movs
lahf
xchg
or
imul
test
ja
rcr
daa
gs
das
fisttp
gs
scas
loopne
cmc
fcomp
mov
daa
fsubr
daa
gs
fsubrp
push
stos
loopne
movs
sub
xor
xchg
daa
test
jo
xchg
hlt
gs
test
jo
outs
sbb
gs
aaa
lea
daa
cmp
daa
xor
sbb
sub
call
movs
mov
shr
loopne
retf
rol
icebp
push
sub
mov
mov
fsubr
inc
ret
sub
outs
sub
cld
jne
movs
lahf
xchg
or
imul
test
ja
sbb
gs
das
(bad)
loop
daa
cmp
daa
xor
sbb
sub
cld
jne
jne
aas
sub
call
daa
call
jge
iret
and
cmp
pop
push
(bad)
call
daa
out
and
call
sub
jmp
mov
sub
in
pop
(bad)
clc
call
daa
call
jge
iret
xor
cmps
call
cmps
call
lahf
fstp
scas
sub
call
loope
sub
movs
ret
in
add
xor
dec
jmp
retf
cmc
xchg
daa
ss
cwde
in
lahf
dec
or
inc
cmp
sub
gs
cmps
mov
ja
ss
or
mov
and
cwde
jge
scas
popf
jne
scas
loopne
rcr
call
daa
xor
add
xchg
jge
lahf
cld
jmp
in
aad
in
inc
inc
daa
mov
test
mov
call
mov
in
inc
inc
aaa
jb
aad
xor
add
sub
loopne
xlat
fcomp
shr
rcr
or
push
ret
test
sub
push
sub
gs
cdq
jl
fdiv
jge
ja
test
gs
push
popf
or
fcom
and
fcomp
jg
fdiv
jge
jecxz
mov
sub
adc
daa
gs
cdq
jl
fdiv
and
xor
jge
ja
push
add
gs
ret
mov
fsub
jne
adc
add
and
xor
sub
gs
in
pop
push
fcomp
pop
xchg
fstp
sub
cmp
out
mov
call
mov
adc
or
push
sahf
jge
scas
mov
jge
ja
sbb
fcomp
jg
fdiv
jge
ja
add
mov
inc
daa
call
jge
dec
gs
or
and
push
mov
xchg
int
aad
lea
daa
gs
es
or
fcom
and
fcomp
add
shr
loopne
aam
call
movs
mov
jns
fsub
push
scas
popf
jne
scas
loopne
rcr
call
fcomp
shr
sub
and
adc
sub
lock
daa
in
pop
fcomp
cmc
rcr
call
sub
call
gs
dec
sub
popa
sub
call
jge
jno
jb
daa
gs
div
sub
fs
cmc
jle
fdiv
jge
jecxz
mov
and
daa
call
jge
je
(bad)
fstp
call
mov
jb
aad
call
jge
iret
adc
sub
call
jge
fcom
push
xlat
fcomp
jge
loope
sti
pop
daa
gs
scas
loopne
rcr
call
fcomp
add
shr
push
test
daa
xor
cmp
sub
out
ds
test
daa
lea
mov
cwde
jge
movs
mov
fnstenv
mov
mov
mov
pop
mov
call
fcom
push
xlat
fcomp
jge
jecxz
add
test
sub
lea
scas
mov
sub
popf
mov
scas
mov
jge
ja
pop
add
gs
xlat
fcomp
and
adc
fsubr
inc
aad
sar
lea
scas
mov
cmp
jecxz
popa
cmp
add
aaa
ss
lods
cmp
push
cmps
mov
rol
dec
dec
sub
and
push
imul
jb
movd
lea
add
gs
scas
popf
stos
shr
push
movs
sub
ss
push
gs
imul
ret
sub
(bad)
test
or
push
popf
or
stos
and
dec
gs
imul
call
sub
in
inc
inc
fdiv
push
pcmpgtw
sub
or
shr
inc
cmps
bound
movs
sub
xor
add
mov
scas
popf
jne
scas
and
loopne
fdiv
cmps
xlat
mov
daa
gs
add
jl
ficom
dec
inc
or
push
popf
or
dec
pusha
jge
das
lea
in
cs
imul
push
movs
imul
mov
and
xor
sub
fs
sub
pop
sub
call
fsub
inc
sbb
xchg
and
and
lods
inc
jg
add
xor
cmp
mov
bound
(bad)
aam
imul
mov
rol
mov
ins
jp
mov
sub
call
add
sub
push
add
push
and
data16
mov
ins
jp
int3
test
daa
out
xor
gs
dec
sbb
add
gs
and
sub
call
movs
popf
(bad)
push
test
dec
jmp
ja
aad
lahf
addr16
int3
scas
and
loope
add
add
xchg
jb
inc
mov
sub
gs
cmp
and
inc
es
sbb
push
push
mov
push
pcmpgtw
sbb
push
push
gs
pcmpgtw
mov
dec
fs
pop
call
pop
dec
sub
fs
pop
call
dec
dec
sub
fs
pop
call
jge
sub
fs
pop
call
ins
dec
sub
mov
inc
daa
gs
aad
inc
sbb
add
gs
aad
cmc
and
lea
sub
mov
adc
and
lea
les
fs
pop
call
fld
sub
aad
pop
call
leave
inc
sub
fs
pop
call
stc
inc
sub
fs
pop
call
jmp
cmp
jo
xor
dec
rcl
popf
or
dec
cdq
jge
iret
clc
ret
sub
cmp
mov
mov
call
jne
sub
cdq
jge
cmps
(bad)
shr
pop
movs
sub
(bad)
mov
ret
mov
call
or
sub
jge
or
ret
sub
jo
sub
(bad)
cmps
mov
gs
call
sub
popf
stos
shr
push
sahf
mov
add
mov
cmc
ret
mov
aad
jns
push
lea
daa
gs
mov
gs
add
mov
shr
mov
aad
dec
sbb
or
gs
mov
gs
add
mov
cld
ret
mov
aad
inc
sbb
or
gs
mov
push
add
mov
cli
ret
sub
add
aad
loope
push
daa
gs
jb
addr16
cwde
fsubp
jo
in
jp
fucomip
inc
inc
sar
mov
sbb
cmp
aad
out
cmp
cmp
movs
sub
in
mov
and
in
cmps
sub
jb
imul
cmp
add
shl
xlat
xor
jmp
test
sub
pop
push
daa
gs
add
mov
ret
sub
jge
adc
ret
sub
rol
out
(bad)
ror
jb
iret
add
inc
xor
xchg
inc
daa
add
mov
pop
mul
call
sub
mov
sub
sub
gs
adc
ret
sub
jge
arpl
ret
sub
sub
out
(bad)
ror
jb
iret
add
inc
jbe
xchg
inc
cs
mov
pop
mul
call
sub
(bad)
loop
gs
sub
call
sub
call
sub
jb
inc
xor
or
dec
fs
pop
call
movs
inc
sub
gs
adc
ret
sub
jge
arpl
ret
sub
jmp
rsm
inc
daa
cmp
pop
push
gs
sub
(bad)
dec
fcom
mov
gs
mov
call
sub
psubd
or
jmp
mov
push
add
mov
popf
jne
scas
and
loopne
adc
push
sbb
aad
and
imul
xchg
inc
mul
dec
lds
inc
daa
cmp
pop
push
gs
sub
(bad)
mov
fcom
mov
gs
mov
call
sub
or
call
sub
or
gs
lea
daa
and
mov
call
daa
call
inc
(bad)
inc
lea
sub
jmp
test
sub
pop
push
test
lea
imul
inc
push
inc
add
shr
gs
sub
mul
call
sub
call
adc
sub
jge
adc
ret
sub
jge
inc
(bad)
dec
dec
sub
cmpxchg
sub
pop
jmp
test
sub
pop
push
add
sub
adc
push
sbb
aad
add
scas
sub
gs
sub
or
jmp
test
sub
pop
push
int
sub
dec
sbb
rcr
call
gs
push
(bad)
mov
call
int3
daa
add
sub
sub
or
jmp
lea
or
and
fist
or
dec
gs
adc
ret
sub
jge
arpl
ret
sub
jmp
sub
jno
sub
or
jmp
mov
push
add
or
gs
adc
ret
sub
jge
arpl
ret
sub
call
sub
or
jmp
mov
pop
push
or
sub
adc
push
sbb
aad
and
imul
xchg
inc
fisub
sub
sub
(bad)
inc
daa
cmp
pop
push
gs
sub
(bad)
jb
gs
push
mov
gs
push
(bad)
mov
call
pusha
es
sub
sub
or
jmp
lea
or
and
daa
call
daa
call
aas
or
jmp
or
jmp
mov
sub
lea
or
and
daa
call
daa
call
aas
or
jmp
or
jmp
mov
sub
(bad)
(bad)
or
and
mov
sub
jb
imul
adc
add
call
gs
stos
ja
pop
retf
gs
sub
pusha
mov
mov
gs
mov
gs
mov
call
fbld
add
sub
xor
add
shr
sub
lea
daa
and
mov
call
daa
call
xor
jmp
or
jmp
mov
push
push
or
adc
fsubr
jp
fucomip
inc
ret
jge
js
dec
jmp
retf
jno
jge
dec
int
and
add
shr
adc
aad
mov
cmp
aad
out
cmp
mov
int
and
loopne
adc
ins
sbb
or
gs
xor
sub
xchg
cmp
daa
gs
mov
gs
(bad)
or
jbe
lods
and
bound
add
add
mov
arpl
gs
inc
sub
and
imul
adc
push
sbb
jp
pop
or
dec
(bad)
fisub
call
stos
ja
dec
icebp
gs
lea
or
and
mov
call
daa
call
or
lods
and
bound
call
and
in
inc
sti
test
sub
pop
push
push
inc
sub
add
add
add
xchg
jb
inc
fwait
sub
gs
ds
shl
stos
loopne
sub
jae
pop
and
ret
sub
push
adc
push
sbb
aad
add
out
inc
setbe
or
jmp
mov
push
pop
or
popf
mov
scas
mov
add
shr
gs
iret
clc
ret
sub
fcomp
mul
call
sub
call
cmp
mov
mov
xor
add
int3
sub
gs
iret
clc
ret
sub
in
popf
sub
mov
inc
imul
gs
cmp
inc
daa
call
daa
call
or
dec
push
call
sub
in
inc
sti
test
sub
pop
push
inc
jp
sub
jp
fucomip
inc
inc
daa
call
daa
call
or
dec
pop
call
sub
or
jmp
mov
push
cmp
mov
cli
ret
sub
pop
ja
fmul
adc
push
sbb
aad
and
imul
xchg
inc
cmps
sub
or
ds
cmp
pop
push
gs
sub
(bad)
test
or
pop
adc
ret
sub
jge
arpl
ret
sub
call
sub
or
jmp
mov
pop
push
lea
sub
adc
push
sbb
aad
and
imul
xchg
inc
fisub
sub
sub
(bad)
inc
daa
cmp
pop
push
gs
sub
(bad)
jb
gs
push
mov
gs
push
(bad)
mov
call
xchg
daa
add
sub
sub
or
jmp
lea
mov
daa
call
daa
call
aaa
or
jmp
or
jmp
mov
push
cmp
mov
shr
popf
mov
scas
mov
mov
gs
push
(bad)
mov
call
sub
or
call
sub
aad
gs
lea
daa
and
daa
call
daa
call
aas
or
call
sub
in
inc
mov
shr
fs
push
daa
gs
cmp
mov
lock
gs
adc
ret
sub
jge
inc
(bad)
dec
jge
add
call
stos
ja
pop
retf
gs
sub
xor
sub
(bad)
stos
mov
gs
das
xor
sub
jge
adc
ret
sub
jge
inc
(bad)
dec
jge
dec
dec
cmp
ds
sub
gs
sub
jo
sub
(bad)
mov
sub
push
mov
gs
push
(bad)
mov
call
sub
or
call
stos
ja
popa
icebp
gs
lea
daa
and
out
jge
iret
mov
inc
outs
inc
xor
inc
jg
add
aas
ss
cwde
sub
cs
gs
scas
and
loopne
add
sub
callw
jmp
aad
ins
push
cmp
out
aad
loope
sub
gs
xor
gs
cmps
mov
ret
sub
add
loopne
jbe
daa
and
xchg
shl
push
jne
pop
xchg
daa
add
sub
out
xor
and
loopne
(bad)
push
sub
sub
adc
jne
shr
xor
daa
call
pop
cmp
mov
or
es
or
movs
sbb
push
js
cs
popa
movq
xor
mov
sub
gs
movs
les
movs
mov
dec
jmp
retf
popa
sub
ss
pushw
scas
xchg
mov
scas
mov
sub
(bad)
xor
call
jge
iret
or
sub
lea
and
rcr
stos
pop
call
gs
call
daa
add
idiv
dec
mov
pop
sub
call
daa
in
inc
pop
sub
or
imul
call
daa
add
popa
idiv
dec
jno
push
fcomp
xchg
sub
in
aad
adc
sub
call
cmps
sbb
push
je
popa
xchg
daa
and
xor
sub
in
aad
adc
sub
call
cmps
sbb
push
je
test
mov
xor
sub
or
imul
call
daa
add
outs
idiv
dec
mov
pop
sub
call
daa
in
jb
shr
(bad)
fstp
call
sub
xchg
inc
xlat
shr
loopne
aad
call
cmps
sbb
push
je
or
gs
fdiv
sub
or
imul
call
daa
add
imul
dec
xor
push
fcomp
xchg
sub
jb
icebp
gs
gs
fdiv
add
cmp
daa
or
jmp
cwde
jge
dec
movs
movs
and
lea
out
paddsb
xlat
in
inc
ret
adc
ds
call
ret
jl
out
mul
cwde
sub
cmps
push
(bad)
int
and
loopne
jne
iret
lock
xor
ret
jge
movs
mov
mov
xor
aas
xor
dec
call
ret
push
das
cmp
cmp
add
in
mov
loope
jb
xlat
in
inc
inc
push
xlat
shr
loopne
fstp
call
iret
mov
sub
fmul
fstp
in
pop
(bad)
call
fsub
dec
leave
xor
call
jge
iret
push
fisubr
daa
gs
scas
loopne
fstp
call
fcomp
inc
cwde
gs
xchg
jge
ja
data16
daa
add
and
xchg
inc
rcl
sub
call
cmps
fdiv
fcomp
sbb
xchg
jge
ja
xor
daa
add
and
xchg
inc
ds
shr
loopne
fstp
call
scas
xchg
jne
scas
loopne
fstp
call
fcomp
mov
gs
xchg
jge
ja
repnz
daa
add
and
xchg
inc
push
loopne
fstp
call
cmps
fdiv
fcomp
out
cdq
gs
xchg
jge
ja
mov
fcmovbe
or
sti
xchg
jge
scas
mov
jge
adc
sub
call
cmps
fdiv
fcomp
sub
retf
aad
lea
daa
add
sub
xchg
inc
out
(bad)
shr
loopne
fstp
call
cmps
fdiv
fcomp
push
gs
xchg
jge
ja
dec
ds
gs
icebp
push
sub
fdiv
fcomp
sbb
ja
sub
daa
add
sub
xchg
inc
pop
rol
sub
call
dec
adc
pop
(bad)
rcr
outs
aad
in
jnp
add
shr
jmp
fcomp
pop
ret
jge
call
daa
movs
fsubr
fcomp
sub
xlat
in
inc
stos
loope
mov
daa
push
pop
inc
daa
or
push
in
jge
jecxz
or
movs
lea
into
xchg
(bad)
fistp
sub
daa
add
sbb
sub
pop
lea
loope
jge
fcomp
jb
loope
pop
rcr
call
daa
call
jge
iret
clc
call
fdivr
fcomp
fidiv
daa
gs
mov
loopne
scas
movs
jne
out
test
fidivr
loopne
mov
mov
fistp
mov
daa
add
inc
clc
ret
sub
(bad)
shr
dec
pop
push
fstp
call
add
shr
jp
push
fistp
call
es
cdq
jp
fdiv
sub
call
jge
dec
jne
push
fstp
xchg
sub
or
imul
popf
jge
ja
jbe
daa
gs
xor
pop
(bad)
fstp
xchg
sub
call
jge
out
shl
fdiv
and
xor
sub
loopne
rcr
call
dec
fs
cdq
jle
fdiv
jge
jecxz
mov
sub
aad
daa
gs
cdq
jge
movs
movs
xchg
fs
sub
cmp
scas
fistp
sbb
mov
jge
sub
gs
popf
jp
fmul
jmp
cdq
jp
fdiv
sub
daa
and
xor
and
xor
and
mov
fsub
ds
fistp
xchg
mov
fsub
jge
daa
mov
aad
out
repnz
add
cwde
sbb
rcr
call
ja
push
lock
fwait
jge
ja
xor
gs
aaa
call
jge
iret
nop
xchg
sub
in
pop
(bad)
rcr
jl
fdiv
push
xor
and
call
call
sub
in
pop
(bad)
call
fdiv
jge
iret
enter
call
jge
iret
enter
call
jge
lods
fdiv
fcomp
aad
lods
je
sub
gs
popf
jge
ja
adc
xchg
jp
fmul
call
mov
iret
pusha
nop
sub
call
jge
je
aaa
(bad)
fistp
jge
movs
mov
inc
and
fcomp
jge
test
mov
inc
daa
gs
jo
sub
dec
rcr
call
daa
xor
iret
lahf
or
cmp
sar
lods
adc
or
jmp
scas
mov
jmp
or
push
xor
shr
inc
pop
sub
add
mov
daa
(bad)
mov
cmp
or
scas
cmps
inc
das
ja
ret
sub
xor
adc
daa
gs
(bad)
shr
xor
sub
(bad)
out
daa
gs
imul
push
daa
gs
aam
aad
xor
jle
daa
gs
push
leave
call
fsub
inc
cmp
call
es
ins
push
rcpps
shr
pusha
neg
sbb
ffree
in
pop
mov
call
daa
gs
push
xchg
jnp
movs
jne
out
test
fidivr
loopne
mov
mov
scas
lahf
or
loope
xor
fcomp
sbb
daa
lea
fist
inc
jne
mov
frstor
sar
dec
dec
mov
movs
mov
push
pop
test
xor
fcomp
outs
aad
pop
mov
pop
or
xor
sub
in
inc
fsub
mul
loopne
(bad)
fcomp
outs
aad
push
or
es
and
fcomp
shr
test
pop
mov
call
daa
jb
aad
xor
jge
ja
idiv
daa
imul
lea
call
ja
loop
fcomp
pop
sbb
in
inc
inc
daa
call
jge
iret
dec
xchg
sub
fstp
leave
scas
loopne
(bad)
fcomp
push
sub
inc
call
push
gs
jbe
sub
seta
jge
stos
push
xchg
gs
daa
gs
shr
std
daa
add
shr
mov
repnz
push
xor
and
call
adc
add
mov
in
sub
gs
mov
adc
(bad)
fidivr
daa
gs
mov
stos
push
add
gs
daa
gs
shr
std
daa
add
shr
mov
xor
sub
mov
stos
push
inc
repnz
daa
gs
in
(bad)
pop
add
add
add
sub
and
add
push
sub
jb
jmp
in
cwde
sub
mov
sub
and
jp
loopne
(bad)
rol
inc
imul
fcomp
add
es
dec
maxps
shr
fdiv
jge
xchg
lea
daa
gs
jp
addr16
shr
sub
in
(bad)
fnstsw
daa
movq
mov
ja
or
daa
gs
cmps
xchg
mov
movs
lods
jge
cmps
pop
sub
pushf
call
jl
call
jge
fcom
ss
sub
movq
xchg
pusha
push
iret
loopne
sub
call
daa
in
pop
sbb
in
inc
cmps
and
retf
sbb
out
pusha
pop
push
or
or
call
sub
in
(bad)
(bad)
lahf
ret
int3
sub
xchg
popa
mov
fsubr
pop
call
adc
lods
lea
daa
in
(bad)
cli
loopne
pop
sub
add
sub
daa
or
mov
sub
mov
outs
jecxz
sub
mov
sub
and
jp
int3
lea
daa
jb
imul
add
add
add
sub
gs
mov
push
aaa
or
icebp
xor
jb
and
gs
aad
out
cs
in
(bad)
sub
in
adc
lock
push
daa
gs
pop
(bad)
pop
xchg
call
rol
jge
lods
loopne
(bad)
fcomp
mov
daa
jae
(bad)
fcomp
jge
and
sub
imul
call
jge
dec
or
push
gs
sub
out
xor
movs
imul
gs
or
push
daa
lea
(bad)
fcomp
or
stos
loopne
(bad)
fcomp
add
ret
gs
sub
xor
and
xor
jmp
jb
sub
repnz
gs
sub
jae
imul
loop
daa
imul
iret
movs
mov
daa
in
pop
add
in
inc
cmps
bound
sub
gs
outs
ret
xor
and
adc
jns
dec
call
ret
push
and
xor
stos
enter
daa
out
(bad)
movs
popf
xchg
and
daa
sbb
push
sub
cmps
mov
daa
pop
xchg
sub
lea
sbb
sub
adc
sub
jmp
mov
and
daa
mov
and
add
dec
rol
sub
push
lock
add
shr
push
jmp
call
fsubr
jp
shr
out
ficomp
outs
mul
jge
retf
cwde
jge
iret
js
aad
out
cmp
call
ja
aaa
ret
jge
xor
movs
lea
stos
loopne
xlat
fcomp
and
lea
daa
gs
push
or
scas
(bad)
cwde
jge
or
pop
xlat
fcomp
pop
cli
ficomp
jg
fcomp
cmp
pop
into
ficomp
jg
fsub
push
lods
lock
xlat
fcomp
jge
push
mov
sbb
or
or
pop
xlat
fcomp
jg
fmul
repnz
call
mov
push
sub
mov
loopne
mov
sub
loope
sub
xchg
daa
or
popf
adc
mov
shr
in
pop
xchg
daa
sub
imul
iret
mov
add
push
rol
sub
push
push
and
aad
or
fmul
fcomp
sub
popf
mov
scas
mov
adc
ins
lea
dec
gs
sub
ret
outs
bound
imul
(bad)
and
jge
das
lea
rcl
popf
or
into
dec
test
daa
out
(bad)
ds
loopne
aam
call
sbb
adc
sbb
test
pusha
mov
data16
sbb
jb
data16
pusha
push
mov
test
pusha
dec
sbb
and
sbb
mov
sbb
xchg
mov
lea
dec
gs
aaa
lea
daa
or
sbb
dec
sbb
and
sbb
mov
mul
dec
aad
cmp
call
daa
or
jge
aaa
lea
es
gs
popa
data16
shl
call
fsub
scas
(bad)
cwde
jge
ja
push
es
or
into
push
test
daa
in
jp
fucomip
inc
ret
jg
sub
mov
jmp
fs
fdiv
ret
sub
nop
mov
daa
in
sub
call
dec
gs
(bad)
loop
daa
gs
iret
clc
ret
sub
push
jno
daa
gs
sti
push
sub
loopne
aad
call
loope
je
fcomp
ss
mov
sub
call
fcomp
push
mov
push
sub
fs
fsub
dec
aad
in
sub
adc
fbld
aaa
dec
fs
fs
fdiv
push
mov
jge
jecxz
mov
pop
pop
jb
lock
sub
call
pop
outs
sub
add
sbb
in
inc
cmps
mov
xor
jge
ja
scas
lock
cwde
jge
ja
push
es
gs
aaa
or
imul
call
mov
add
ins
sub
fadd
pop
pop
jb
lock
sub
call
xor
sub
cdq
xchg
daa
call
jge
out
call
fsubp
jp
push
inc
call
int
daa
add
mov
daa
gs
cmp
ret
test
cs
gs
scas
daa
call
xchg
loopne
aad
call
fcomp
push
and
push
pop
jb
repz
sub
call
test
into
in
xchg
daa
in
sub
call
fcomp
or
es
or
stos
loopne
aad
call
fdiv
and
xor
sub
and
xor
shr
je
sub
in
sub
call
dec
gs
(bad)
(bad)
and
gs
cmps
(bad)
shr
dec
mov
daa
mov
arpl
gs
in
pop
(bad)
ficomp
pop
sub
call
fcomp
shr
loopne
xlat
fcomp
sub
mov
sub
loopne
aad
call
daa
lea
and
add
daa
adc
inc
(bad)
mov
push
cs
dec
sbb
and
imul
jge
fdiv
jge
ja
and
gs
cwde
jge
ja
push
and
gs
aaa
or
imul
call
mov
ins
sub
fadd
pop
pop
jb
repz
sub
call
jno
sub
pop
sub
fcomp
ret
sbb
jp
push
inc
call
push
(bad)
daa
add
mul
daa
gs
psubd
sub
inc
mov
daa
mov
scas
fcomp
mov
aam
call
fcomp
push
and
push
pop
jb
repz
sub
call
lds
sub
lods
sub
in
aad
call
fcomp
or
es
or
stos
loopne
aad
call
fdiv
and
xor
sub
and
xor
ret
sub
xor
sub
in
sub
call
dec
gs
lea
sub
pop
cli
ret
sub
or
sub
mov
sub
gs
scas
fstp
mov
aam
call
fcomp
push
and
push
pop
jb
bnd
sub
call
or
jne
sub
in
aam
call
fcomp
add
es
sub
pop
aam
call
fist
jg
fsubr
pop
ret
jge
loopne
pop
sub
call
fcomp
shr
loopne
xlat
fcomp
sub
mov
mov
fsubr
pop
into
ficomp
add
xchg
jb
push
and
push
das
daa
or
dec
addr16
lahf
rcr
xchg
daa
in
pop
xchg
daa
sub
and
daa
pop
cld
ret
lods
jge
cmps
pop
sub
pushf
or
dec
gs
cwde
jge
jne
jmp
xchg
jl
fmul
call
xlat
fcomp
jb
gs
rcr
xchg
daa
call
jge
out
call
fimul
and
aaa
shl
fdiv
jge
rcr
xchg
daa
jb
aad
xor
pusha
push
fstp
sub
popf
adc
mov
jge
iret
je
sub
call
cdq
arpl
sub
call
sub
gs
cmc
ret
fadd
fcompp
call
daa
jo
aad
xchg
jl
fmul
(bad)
mov
shr
lods
jge
cmps
pop
sub
pushf
or
dec
gs
cwde
jge
jne
jmp
xchg
jl
fmul
call
xlat
fcomp
outs
bnd
rcr
xchg
daa
call
pop
data16
pusha
out
sahf
gs
gs
es
or
dec
popa
call
push
gs
sub
out
xor
jge
das
cli
ret
sub
test
ffree
in
pop
retf
jge
loopne
xchg
aad
jno
pop
aaa
call
aad
sub
cmp
jecxz
jne
jg
add
sub
aam
lods
adc
sub
xchg
mov
lods
and
sub
loopne
sub
add
ins
lea
sbb
push
mov
mul
fcom
mov
gs
and
xchg
adc
or
in
inc
adc
lea
imul
mov
adc
and
lea
cs
gs
sub
jge
or
ret
sub
adc
push
mov
call
inc
popa
sub
popf
stos
shr
lock
outs
jge
psubd
sub
sub
sub
pop
mov
mov
call
adc
sub
mov
cmps
pop
repnz
gs
mov
mov
popa
sub
popf
stos
shr
cli
ret
sub
add
push
rol
sub
adc
push
daa
gs
sbb
push
imul
js
mov
push
popf
or
sbb
add
lods
js
mov
gs
sub
or
add
ret
sub
sahf
mov
lods
js
mov
psubd
sub
or
pop
(bad)
shr
xchg
test
gs
sub
or
or
ret
push
push
mov
imul
js
mov
gs
push
ja
pop
xor
mov
(bad)
cs
imul
daa
xchg
mov
js
(bad)
in
sub
gs
das
xchg
shr
cmc
sub
gs
sub
sub
gs
aaa
xchg
shr
cmc
sub
gs
xor
sub
gs
pop
xchg
shr
cmc
sub
gs
or
sub
gs
pop
xchg
shr
cmc
sub
gs
adc
sub
xlat
mov
cdq
sub
mov
mov
push
(bad)
shr
daa
gs
das
in
(bad)
(bad)
movs
test
mov
add
cmp
lea
out
or
imul
movs
imul
movs
popf
mov
ret
sub
fs
daa
xor
jge
out
cmps
fld
daa
dec
cmp
gs
add
cmp
gs
ror
pop
add
or
ins
mov
sahf
call
mov
or
ins
adc
pop
inc
xchg
xor
std
lods
and
sub
gs
addr16
shr
cmc
sub
gs
arpl
sub
gs
outs
xchg
shr
cmc
sub
gs
imul
sub
gs
ja
shr
cmc
sub
gs
jae
shr
cmc
sub
gs
jg
shr
cmc
sub
gs
jnp
shr
cmc
sub
gs
inc
xchg
shr
cmc
sub
gs
inc
xchg
shr
cmc
sub
gs
dec
xchg
shr
cmc
sub
gs
dec
xchg
shr
cmc
sub
gs
push
xchg
shr
cmc
sub
gs
push
xchg
shr
cmc
sub
gs
pop
xchg
shr
cmc
sub
gs
pop
xchg
shr
cmc
sub
gs
cmps
xchg
shr
cmc
sub
gs
mov
cmc
sub
gs
scas
xchg
shr
cmc
sub
gs
stos
xchg
shr
cmc
sub
gs
mov
shr
cmc
sub
gs
mov
shr
cmc
sub
gs
mov
cmc
sub
gs
mov
cmc
sub
gs
xchg
sub
gs
adc
sub
gs
(bad)
xchg
shr
cmc
sub
gs
mov
sub
gs
xchg
xchg
shr
cmc
sub
gs
xchg
xchg
shr
cmc
sub
gs
lahf
xchg
shr
cmc
sub
gs
fwait
xchg
shr
cmc
sub
gs
out
shr
cmc
sub
gs
jecxz
shr
cmc
sub
gs
out
xchg
shr
cmc
sub
gs
jmp
shr
cmc
sub
gs
not
sub
gs
repz
shr
cmc
sub
gs
call
sub
gs
sti
xchg
shr
cmc
sub
gs
(bad)
xchg
shr
cmc
sub
gs
ret
xchg
shr
cmc
sub
gs
iret
xchg
shr
cmc
sub
gs
retf
xchg
shr
cmc
sub
gs
fist
sub
gs
fist
sub
gs
daa
xchg
shr
cmc
sub
gs
and
sub
gs
das
xchg
shr
cmc
sub
gs
sub
sub
gs
aaa
xchg
shr
cmc
sub
gs
xor
sub
gs
aas
xchg
shr
cmc
sub
gs
cmp
sub
gs
pop
xchg
shr
cmc
sub
gs
add
sub
gs
setno
sub
gs
or
sub
gs
pop
xchg
shr
cmc
sub
gs
adc
sub
gs
pop
xchg
shr
cmc
sub
gs
sbb
sub
gs
addr16
shr
cmc
sub
gs
arpl
sub
gs
outs
xchg
shr
cmc
sub
gs
imul
sub
gs
ja
shr
cmc
sub
gs
jae
shr
cmc
sub
gs
jg
shr
cmc
sub
gs
jnp
shr
cmc
sub
gs
inc
xchg
shr
cmc
sub
gs
inc
xchg
shr
cmc
sub
gs
push
xchg
shr
cmc
sub
gs
push
xchg
shr
cmc
sub
gs
pop
xchg
shr
cmc
sub
gs
pop
xchg
shr
cmc
sub
gs
cmps
xchg
shr
cmc
sub
gs
stos
xchg
shr
cmc
sub
gs
mov
shr
cmc
sub
gs
mov
shr
cmc
sub
gs
mov
cmc
sub
gs
mov
cmc
sub
gs
xchg
sub
gs
adc
sub
gs
(bad)
xchg
shr
cmc
sub
gs
mov
sub
gs
lahf
xchg
shr
cmc
sub
gs
fwait
xchg
shr
cmc
sub
gs
out
shr
cmc
sub
gs
jecxz
shr
cmc
sub
gs
out
xchg
shr
cmc
sub
gs
jmp
shr
cmc
sub
gs
not
sub
gs
repz
shr
cmc
sub
gs
call
sub
gs
sti
xchg
shr
cmc
sub
gs
(bad)
xchg
shr
cmc
sub
gs
ret
xchg
shr
cmc
sub
gs
iret
xchg
shr
cmc
sub
gs
retf
xchg
shr
cmc
sub
gs
xlat
xchg
shr
cmc
sub
gs
rcl
sub
gs
fist
sub
gs
fist
sub
gs
