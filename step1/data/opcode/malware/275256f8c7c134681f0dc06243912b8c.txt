jg
(bad)
call
in
mov
cmp
ja
movzx
lea
jmp
neg
push
out
push
push
pop
ret
lea
add
push
sbb
lods
sbb
add
add
or
fcom
add
int3
pop
fisubr
add
xor
pop
push
or
aas
clc
jmp
js
mov
mov
push
push
call
test
jne
pop
pop
(bad)
(bad)
sub
or
sub
or
dec
adc
mov
pcmpeqd
jmp
mov
lock
dec
movzx
lea
jne
sbb
pop
imul
pop
pop
xor
jp
push
neg
sbb
and
pop
xchg
int3
fcomip
in
jnp
push
mov
mov
add
or
enter
push
cmc
or
movs
pop
push
dec
sub
les
sub
lea
or
lock
dec
test
jg
add
mov
call
mov
jmp
sub
call
aas
jl
sahf
sub
xor
add
jl
and
adc
mov
or
pop
push
push
mov
or
push
push
adc
inc
push
xor
push
lea
mov
jge
cld
mov
or
leave
and
xchg
rol
inc
add
sub
adc
pop
mov
mov
test
sbb
mov
sbb
jle
xor
scas
clc
add
jmp
ss
mov
lea
lea
ret
push
hlt
mov
add
cmc
sub
shr
push
nop
adc
rcr
mov
in
mov
lahf
push
pop
stc
fdiv
jae
mov
cwde
pop
pop
pop
aas
mov
mov
jo
and
js
(bad)
pop
push
mov
popf
stc
add
dec
push
push
xchg
sbb
push
cmp
lock
(bad)
jle
je
cmp
push
or
and
clc
add
push
add
mov
inc
hlt
xchg
push
xchg
mov
pop
ret
cs
mov
or
or
jg
inc
mov
push
sbb
aas
dec
mov
xchg
inc
cdq
shl
aas
popa
inc
das
mov
je
pop
fldenv
pop
jne
mov
ret
push
ds
jns
mov
mov
aas
sub
mov
sub
or
cmc
retf
cmp
mov
je
sbb
jae
cmp
ret
pusha
push
dec
sbb
pop
sub
iret
add
add
call
sub
js
jg
mov
mov
sbb
add
add
jp
mov
adc
fimul
ror
dec
or
dec
call
out
mov
or
shl
call
sbb
lahf
retf
or
push
shr
mov
push
mov
xor
pop
outs
outs
fcom
js
cmps
cmp
jns
adc
int
adc
dec
movs
pop
fidiv
xor
test
ficom
iret
movs
call
js
nop
fcom
rol
pop
mov
jg
push
mov
ins
mov
push
jne
cmps
pop
pop
pop
pop
(bad)
mov
mov
jno
mov
dec
hlt
sub
sar
mov
jne
jg
call
fs
clc
lea
add
push
cmp
or
push
in
in
lock
inc
pop
stos
jmp
push
sbb
adc
jmp
push
das
lea
pop
sbb
cld
aaa
or
sbb
ss
mov
cmp
jle
mov
sar
jle
sar
jg
cmp
jge
je
cmp
and
or
jmp
cdq
inc
add
cmp
jge
inc
mov
outs
not
mov
jo
cmps
mov
mov
sub
shl
adc
add
add
(bad)
(bad)
jnp
cmps
sbb
cmp
vpclmullqhqdq
push
lea
push
lea
push
push
aad
cmp
or
ret
add
inc
or
stos
rdpmc
xor
push
test
add
ss
push
cld
adc
or
pop
and
sbb
ror
push
cmp
jge
mov
jo
mov
adc
push
inc
or
(bad)
jne
sub
sbb
ficom
adc
inc
not
or
cmp
repnz
cmp
xor
repnz
aas
pop
stos
ja
and
in
(bad)
push
stos
and
into
sar
push
test
jl
pop
add
and
loopne
rcl
dec
or
jl
or
sbb
adc
imul
push
or
fiadd
je
push
adc
popa
aas
sub
call
add
inc
sbb
stos
jle
push
mov
(bad)
sub
xor
xor
dec
add
sbb
xor
lds
sti
(bad)
call
mov
ficomp
cmp
test
popf
data16
or
hlt
cwde
fs
in
ja
rcl
mov
lea
(bad)
cs
outs
cmp
cmc
ror
div
mov
mov
sbb
add
jmp
inc
xchg
shl
jae
xchg
push
loop
daa
enter
mov
push
push
movs
mov
add
add
ror
in
sar
or
dec
ret
jg
push
enter
dec
jns
add
jmp
pop
sub
and
or
inc
and
aaa
ins
ret
pop
add
stos
pop
sub
mov
or
dec
lahf
cmp
enter
push
sbb
sub
mov
lock
cwde
sti
adc
inc
add
or
push
mov
dec
sbb
jmp
xor
dec
(bad)
jmp
or
xor
sbb
mov
in
shl
pusha
fist
aas
aaa
mov
lea
test
sbb
enter
sbb
es
out
or
popf
mov
aaa
aas
sahf
push
out
mov
pop
or
adc
call
jmp
sbb
inc
mov
out
test
and
push
scas
push
test
in
push
fadd
mov
adc
cs
mov
retf
and
lahf
pop
gs
inc
hlt
nop
adc
repnz
lock
xor
mov
add
cli
loopne
out
pop
ins
mov
or
mov
mov
xor
pop
push
test
test
sub
add
cmp
mov
cli
jae
je
aam
xor
(bad)
enter
retf
mov
aam
fcom
in
in
lock
mov
push
add
add
push
or
adc
push
and
pop
sahf
retf
sub
xor
sub
or
in
mov
loopne
mov
fs
in
je
jl
test
mov
outs
xchg
inc
cwde
pushf
ins
xchg
pusha
test
push
mov
(bad)
bound
clc
fist
mov
and
push
(bad)
in
dec
add
inc
pop
jne
jo
push
repnz
push
test
pop
mov
movs
jo
lods
mov
push
cs
in
mov
retf
jae
enter
fsub
repnz
cs
sub
mov
lock
or
gs
repnz
add
push
or
lock
dec
gs
adc
sbb
iret
in
mov
mov
cmp
inc
pop
cs
retf
movs
dec
push
push
pop
xchg
dec
in
je
fs
cmp
je
jl
push
cs
and
mov
xchg
idiv
pushf
mov
cs
mov
aaa
xchg
iret
fwait
adc
not
aam
pop
nop
idiv
and
and
fistp
pop
or
cs
aam
pop
inc
or
push
lock
out
sahf
xor
cmp
mov
xchg
out
mov
enter
movs
jb
shl
iret
in
in
lock
iret
retf
push
pop
add
pop
or
mov
push
cs
and
clc
iret
push
test
sub
sub
add
xor
scas
cmp
inc
add
scas
fld
push
mov
mov
cmps
ret
mov
dec
(bad)
call
movs
push
gs
xor
push
push
push
mov
mov
aaa
in
jle
enter
xchg
sbb
add
fucomp
ror
mov
xchg
shr
adc
cmp
cmp
or
les
pop
or
add
or
add
jo
or
pop
js
or
or
or
test
push
ins
or
xor
add
or
std
pop
sub
fild
xchg
mov
push
push
or
dec
mov
add
push
push
or
jle
outs
xchg
adc
push
ss
mov
mov
xchg
jb
adc
and
adc
inc
and
adc
and
push
adc
and
inc
push
adc
and
pop
pop
test
sahf
ins
jecxz
mov
mov
not
sahf
lods
(bad)
sbb
pusha
pop
push
xchg
mov
test
add
xor
(bad)
lods
retf
push
rcl
pop
test
ins
ss
jno
pop
enter
int3
and
vmovsd
and
lea
xchg
jbe
out
and
sub
mov
ja
aam
xchg
scas
add
push
call
jbe
dec
add
cld
mov
mov
ins
inc
add
push
(bad)
mov
repz
add
sub
mov
fsubr
mov
rol
inc
xor
push
add
jne
fdivr
out
jne
mov
pop
enter
cmps
test
mov
in
add
dec
sar
pop
loopne
or
push
push
pop
add
adc
daa
repnz
or
mov
and
jmp
sub
imul
push
jb
xchg
jg
sub
cmp
sub
sbb
and
test
rol
loop
cmp
jne
inc
or
fld
les
jb
add
mov
or
inc
iret
mov
mov
rcl
test
mov
adc
cmps
mov
es
inc
ret
enter
sub
call
adc
and
inc
jo
je
inc
and
xor
and
inc
and
xor
adc
lea
adc
lahf
add
sbb
cli
lock
fwait
jmp
enter
fst
dec
int3
push
call
xor
and
mov
push
mov
pusha
fstp
test
jp
aaa
mov
jl
sub
inc
int3
xor
pop
and
(bad)
loopne
mov
push
call
or
in
ret
dec
add
mul
and
xchg
inc
sar
inc
iret
maskmovq
dec
mov
and
push
cmp
nop
cld
and
push
cmp
jb
xor
sub
add
push
ret
cmp
lock
push
cmp
xchg
xchg
jae
fsub
fbld
enter
(bad)
out
pop
push
push
mov
ficomp
pop
cmps
aas
pop
xor
pop
lds
sbb
outs
and
cmp
jne
rcr
or
dec
add
dec
add
mov
loope
js
add
fisubr
sbb
sbb
test
add
add
fcmovnbe
not
cmp
retf
and
js
and
pop
cmp
adc
push
ficom
add
dec
es
inc
inc
xchg
test
inc
es
cmps
cmp
push
jns
mov
pushf
sbb
movs
inc
or
scas
fnstsw
fdiv
xchg
sbb
dec
adc
inc
or
or
pop
or
les
dec
add
xchg
or
test
inc
pusha
mov
nop
inc
loopne
test
adc
add
xor
jmp
push
enter
pop
inc
in
jae
enter
push
inc
enter
xchg
dec
push
dec
aad
add
enter
dec
jae
ret
enter
push
or
jns
and
call
mov
ret
call
leave
sbb
push
call
adc
push
xor
xor
push
rcl
push
mov
sbb
femms
mov
add
ins
lea
xor
lods
leave
xor
(bad)
push
cld
mov
lock
adc
stos
(bad)
ss
in
jecxz
call
or
test
rcl
add
xor
pop
inc
xlat
sti
cdq
imul
add
loopne
fdivr
fdiv
inc
hlt
inc
xchg
push
xor
fidivr
push
mov
inc
inc
or
lods
iret
aaa
adc
test
ret
jl
dec
popa
sub
lock
mov
test
jo
and
fnstsw
mov
push
push
int
dec
loope
pop
sbb
pop
add
je
or
js
das
pop
and
add
and
in
ss
dec
fwait
movs
add
add
xchg
mov
xor
ins
fbld
js
mov
adc
dec
or
push
inc
push
cmp
pop
es
or
sub
stos
or
sahf
push
mov
loop
aas
xchg
lock
out
mov
xor
mov
loope
je
cmp
mov
push
and
sbb
xor
in
dec
sbb
inc
xor
adc
sub
dec
or
add
xor
clc
mov
mov
mov
sub
pushf
cwde
cmp
xchg
xchg
nop
mov
test
inc
jl
es
mov
jo
aas
push
dec
push
lea
add
dec
mov
ss
dec
cmp
cmp
jge
or
add
lea
sub
retf
test
dec
xorps
xchg
dec
and
push
adc
add
push
xchg
xchg
push
fcom
add
pop
add
ja
sahf
add
add
mov
adc
push
fld
xor
xchg
push
mov
pushf
das
sub
push
sub
or
mov
adc
leave
inc
xor
and
and
leave
inc
xor
adc
or
(bad)
jno
mov
popa
and
sbb
fmul
cmp
lea
xor
push
inc
pop
inc
sub
lahf
fadd
sbb
fdiv
dec
add
or
mov
mov
push
pushf
cmp
shl
icebp
push
push
or
retf
dec
outs
scas
push
aaa
add
test
add
stos
fidiv
nop
sub
nop
or
xor
sbb
fs
and
ins
pusha
cmp
xor
and
dec
dec
adc
inc
xor
add
test
stos
dec
shl
inc
add
or
pop
test
test
fbld
inc
jns
push
adc
mov
adc
mov
or
add
pushf
pop
mov
movs
jns
add
dec
and
cdq
dec
call
mov
ja
push
push
push
nop
movs
sbb
int
ror
sbb
or
xchg
sub
fsub
pop
clc
add
fcom
mov
xor
and
push
int3
adc
xor
pop
adc
xor
dec
push
adc
push
dec
xor
dec
adc
dec
xor
das
xchg
sbb
and
dec
and
sbb
sub
movs
dec
or
or
in
loopne
arpl
int3
retf
mov
sub
adc
add
das
ret
pop
cwde
dec
ds
dec
js
sub
or
add
or
dec
xor
js
je
dec
xor
xor
xor
add
lea
das
dec
iret
jnp
inc
add
enter
mov
sbb
add
cwde
and
lods
fst
and
mov
clc
inc
fiadd
pusha
sbb
test
das
lock
adc
jge
fs
push
or
fwait
jl
shl
shr
(bad)
retf
movs
sti
loopne
jmp
push
lea
sub
push
dec
mov
push
xor
push
mov
pop
in
test
push
adc
push
adc
pop
or
jo
sbb
or
mov
sub
fdivr
push
xor
and
mov
jae
inc
out
pop
and
dec
aas
int3
push
ins
sub
mov
cmp
je
in
add
gs
or
pop
inc
aaa
or
mov
imul
adc
cmp
sti
or
add
add
cwde
pop
lock
mov
push
push
and
cwde
adc
lock
jo
std
(bad)
or
add
adc
push
and
loope
or
and
or
test
lahf
inc
adc
dec
arpl
out
sub
ins
repnz
push
push
pop
(bad)
int
scas
push
add
lods
dec
hlt
push
adc
fild
inc
add
je
add
mov
test
shl
add
add
(bad)
dec
push
ss
push
jbe
rcl
je
mov
add
nop
sar
pop
pusha
xlat
pop
loope
ins
out
fcom
jns
push
ds
int
mov
movs
jmp
(bad)
stos
pop
(bad)
mov
sbb
fucomi
adc
jno
dec
adc
xor
push
sbb
fidivr
ja
xchg
sub
inc
sbb
dec
push
clc
inc
mov
sub
inc
push
and
push
cdq
cmc
movs
add
sub
div
fs
adc
pop
push
push
push
pop
shr
push
movaps
not
enter
(bad)
adc
add
xor
dec
sahf
cs
dec
push
sbb
mov
add
loopne
dec
mov
in
rol
pushf
xchg
scas
loope
sbb
mov
mov
inc
in
ret
push
je
mov
sbb
pop
ret
mov
mov
bound
shr
pop
loopne
sbb
pop
sub
dec
sbb
cmp
add
push
adc
ret
int3
repz
jb
push
jno
inc
adc
test
mov
mov
cs
dec
cmp
xchg
adc
shl
xor
test
or
sbb
or
cmp
bound
ins
push
push
dec
lock
push
or
or
sbb
lock
movups
daa
pop
repnz
mov
push
add
or
add
or
aam
(bad)
xchg
in
lahf
xchg
or
xor
arpl
inc
jle
je
push
and
add
adc
add
sar
jne
push
es
test
call
push
push
leave
rcr
and
push
xchg
lods
in
(bad)
repnz
imul
(bad)
rol
add
pop
dec
push
pop
sbb
inc
push
sbb
push
cmp
and
dec
lds
mov
in
add
aam
jg
stos
stc
cmp
mov
mov
pop
inc
and
call
test
popf
nop
cmp
pop
inc
and
cld
adc
cld
jg
pop
inc
mov
in
xlat
test
js
push
iret
pop
jne
xchg
cmp
shl
cld
clc
sbb
pop
lds
lods
nop
sbb
cmp
aaa
ss
in
es
and
aad
shr
sub
je
mov
cmp
je
cmp
(bad)
mov
pop
jmp
add
sub
ds
aaa
mov
jle
push
ss
cmps
imul
inc
lds
push
and
push
leave
enter
pop
ret
mov
cmp
jl
mov
imul
aam
cli
aaa
fadd
les
xchg
jmp
cmp
je
movzx
sar
mov
mov
loopne
or
push
push
push
cdq
add
mov
mov
rcr
mov
imul
or
xor
pop
aaa
mov
in
jmp
stc
dec
in
pop
xor
mov
push
dec
sub
out
cld
idiv
out
pop
or
sub
xor
xlat
xchg
and
das
stc
xor
enter
push
xchg
add
add
or
data16
push
push
stos
loop
pop
fisttp
jl
add
adc
enter
stos
inc
cs
ror
mov
neg
mov
xchg
in
shl
push
ret
pusha
pop
xor
std
jecxz
pop
push
div
mov
or
inc
test
pop
cmp
inc
data16
xchg
jo
sbb
int3
test
pusha
xor
inc
fstp
xor
sbb
lahf
test
xor
mov
or
test
add
sbb
sbb
(bad)
mov
add
mov
cmp
push
je
hlt
cmp
sbb
push
sub
rol
movd
fwait
xor
int
adc
cmp
cmp
push
push
rol
xlat
into
push
jne
cmp
lock
cmp
jge
push
jmp
mov
dec
mov
cmp
xchg
cmps
mov
jmp
mov
mov
cmp
retf
fisttp
mov
add
pop
jns
cmc
cmp
loop
pop
push
fiadd
sub
sbb
and
push
sbb
sub
les
jno
jbe
xor
xor
push
jne
add
rcl
push
pop
mov
dec
inc
pop
mov
dec
icebp
cmp
sti
test
mov
or
out
rol
call
mov
stc
push
cdq
mov
dec
jns
mov
cwde
scas
sub
inc
mov
jb
(bad)
push
and
(bad)
jl
cmp
cmps
mov
adc
imul
xorps
cmp
and
adc
push
and
les
push
repnz
jo
dec
jmp
cwde
and
jmp
fist
out
jae
fnstcw
sbb
sub
clc
(bad)
hlt
sbb
(bad)
rcl
loop
popa
nop
pop
(bad)
test
and
add
cmp
and
out
repz
dec
cs
dec
xor
fist
pusha
xor
mov
pushf
call
mov
push
push
mov
xor
and
add
sub
fdivr
cld
push
xchg
sub
repnz
xor
mov
push
mov
(bad)
sub
jo
xlat
dec
in
dec
sahf
add
add
adc
mov
xchg
mov
add
xor
push
out
adc
inc
add
test
adc
mov
jle
dec
cli
mov
cmp
xor
inc
clc
sahf
jb
jns
add
lea
imul
mov
sub
sub
or
push
push
cld
mov
push
outs
ret
frstor
mov
or
xor
cmp
or
xor
add
punpckhwd
pop
clc
add
jge
sbb
mov
dec
sbb
repnz
pop
and
add
push
jbe
(bad)
push
jno
jb
or
dec
setnp
cmp
pop
scas
rol
call
and
jp
sbb
adc
sub
jle
bound
sub
cmp
das
jecxz
push
cs
cmp
and
sbb
div
ret
pop
cmp
and
out
sub
int3
test
outs
inc
add
nop
sbb
or
push
xor
inc
cmp
cmp
push
mov
mov
sbb
sub
adc
adc
scas
inc
or
mov
add
mov
lods
mov
test
sub
ss
pop
cmps
inc
or
push
jb
or
add
add
fst
pusha
shr
or
sub
sub
pop
pop
movs
mov
dec
lea
push
imul
xchg
adc
shr
outs
test
mov
hlt
xchg
sbb
add
dec
in
mov
ss
xchg
or
int3
pop
stos
dec
shl
ds
out
rol
and
shl
or
inc
push
in
push
add
mov
sbb
inc
push
in
pop
push
or
inc
adc
adc
dec
and
add
in
mov
aaa
jo
push
mov
lock
movs
pop
pushf
push
adc
add
mov
movs
dec
adc
sbb
push
adc
cmp
push
cmp
sbb
in
sbb
sub
dec
repz
mov
pop
test
lahf
push
add
push
jecxz
aam
pushf
movs
mov
cmps
sbb
adc
js
sbb
sub
fcom
or
adc
cmps
ret
sbb
sbb
sub
adc
inc
inc
push
enter
pop
test
mov
and
xor
add
and
and
mov
sahf
fild
repnz
xchg
adc
rol
mov
enter
push
xor
mov
sub
and
mov
rcl
and
xlat
sub
sub
xor
xor
sub
xor
push
sub
inc
mov
inc
sub
cmp
add
mov
push
mov
cmps
push
inc
das
adc
cs
cmp
inc
inc
dec
mov
jl
clc
shl
in
cmp
inc
lds
adc
xor
jl
xchg
or
dec
pop
xor
add
add
wrmsr
add
add
inc
dec
ja
mov
add
in
push
retf
rol
jae
or
push
push
enter
pushf
pop
(bad)
mov
js
aam
aas
lock
(bad)
push
dec
loopne
mov
adc
xor
xchg
dec
fmul
jbe
dec
push
inc
shl
jbe
ret
xor
mov
push
adc
add
mov
cmp
xchg
add
add
cmp
mov
xchg
pop
add
cmovp
push
ret
sub
mov
push
cdq
sbb
xchg
ror
pop
int
aad
push
ror
pop
pop
add
push
loop
in
mov
cmp
jmp
call
sub
stos
iret
fs
and
or
outs
xchg
shl
xor
(bad)
fwait
cli
mov
adc
cmps
ins
shr
call
lea
dec
jnp
push
movs
mov
mov
call
neg
xor
xor
xor
stos
sbb
sub
test
les
push
lahf
push
nop
xchg
push
or
and
pop
push
jb
pop
mov
pop
jbe
cmps
mov
push
push
cdq
movs
sbb
push
sub
xor
repnz
enter
and
pushf
in
add
mov
cmp
mov
mov
dec
push
jb
sub
inc
leave
adc
les
xchg
adc
add
fcomip
xchg
in
inc
out
setae
jns
rcl
les
pop
push
inc
or
pusha
call
pop
ret
pushf
push
movlhps
enter
or
mov
jge
add
cli
add
les
add
outs
and
push
cs
js
leave
mov
ins
add
add
sbb
adc
movs
data16
ins
xor
sbb
cmp
push
fs
mov
add
xchg
sbb
xor
cmp
arpl
adc
sbb
fsubrp
or
jo
cwde
retf
das
dec
jmp
push
enter
shl
and
mov
cs
push
test
addr16
push
dec
push
cs
pop
in
and
mov
mov
imul
(bad)
in
push
test
xchg
xor
fdivr
rcl
cmp
imul
jo
fcom
ss
or
add
sbb
adc
fimul
push
(bad)
mov
loopne
or
add
mov
xchg
add
pop
movs
mov
pop
sahf
cmps
and
test
add
rcl
das
mov
arpl
add
jecxz
cmp
rcl
int3
daa
enter
mov
ret
push
push
mov
mov
cmp
in
aam
mov
mov
inc
sub
stos
addr16
mov
fst
fwait
cmp
aad
fwait
mov
shr
mov
push
jnp
pop
add
cmp
in
lods
movs
aad
mov
jge
shl
cmp
inc
cs
fmul
pop
mov
lds
mov
pushf
push
cmps
cmp
lds
sbb
pop
xchg
xchg
xchg
mov
inc
or
add
mov
jns
xchg
mov
add
call
jo
inc
inc
mov
dec
or
dec
rol
mov
mov
mov
inc
movs
and
and
jne
push
cmps
xchg
or
or
jmp
xor
add
sar
sbb
mov
push
adc
adc
cmp
xor
push
(bad)
xchg
xor
int
ins
sbb
sub
cli
sbb
xor
or
(bad)
out
xchg
ficomp
mov
clc
push
ins
sti
out
shl
inc
pushf
call
inc
sub
sub
(bad)
sub
pop
aad
mov
fistp
cmp
test
sub
gs
pop
and
push
mov
rcl
mov
adc
lea
lock
pop
pop
pushf
sub
add
push
pop
mov
mov
shl
aad
outs
pushf
xchg
add
call
cmps
inc
and
call
ss
add
jne
cdq
cmp
inc
sbb
cmps
jo
lahf
pop
out
in
xor
rol
and
leave
call
leave
inc
enter
or
jmp
dec
pop
test
and
xor
sbb
stos
mov
dec
inc
(bad)
cs
mov
push
xor
pop
pop
inc
aad
outs
xchg
fdivr
push
inc
push
and
fnstcw
cs
mov
mov
popa
or
jmp
test
call
clc
rcr
cmp
pop
xlat
mov
push
xchg
and
dec
push
xor
mov
lock
ins
jae
clc
dec
in
and
add
or
ins
push
xchg
dec
mov
sbb
jl
add
mov
scas
popa
sbb
xchg
retf
call
push
mov
arpl
inc
pop
push
push
icebp
adc
test
sub
push
fild
push
jmp
pop
add
sbb
dec
hlt
sub
icebp
jmp
mov
inc
dec
inc
or
shl
cmp
add
mov
scas
popa
pop
pop
xor
neg
pop
repnz
je
dec
add
nop
retf
push
es
or
inc
inc
pusha
mov
add
dec
popa
push
jbe
sbb
lahf
pop
cmps
movs
mov
sub
test
pusha
xchg
enter
and
lahf
fild
mov
(bad)
(bad)
lods
jo
mov
sti
inc
pop
and
inc
das
push
lds
(bad)
int3
mov
add
loopne
adc
loopne
in
test
icebp
sbb
sbb
mov
pop
and
ret
jns
or
xchg
sub
mov
or
fsub
pop
mov
cmp
mov
mov
pop
loope
jmp
cwde
cmp
or
sub
add
push
and
clc
push
stos
shr
movs
add
loope
and
mov
add
outs
or
and
push
add
jb
add
push
jns
inc
pop
jne
cmp
clc
push
inc
lea
and
xor
push
test
pop
add
adc
retf
add
or
and
loope
dec
inc
(bad)
fldcw
cmp
test
lods
jo
(bad)
jmp
and
push
fwait
cmp
pop
aaa
sbb
mov
cwde
push
or
test
push
(bad)
shl
shl
sbb
popa
pop
pop
ret
mov
pop
push
shl
bound
xchg
shr
inc
inc
inc
aad
data16
jb
aas
push
xor
and
test
pop
pop
xor
aas
icebp
jo
xchg
pop
pop
cmp
mov
add
push
(bad)
xor
cmp
sub
adc
pusha
in
fs
lods
test
js
mov
pop
or
ja
(bad)
sub
push
adc
add
push
jbe
or
mov
lock
cwde
popa
ja
jno
adc
adc
cmp
xor
fild
in
mov
movs
mov
add
pusha
or
js
cmp
push
xchg
sbb
shl
mov
mov
xor
push
push
mov
xchg
inc
stc
or
test
mov
xchg
(bad)
jae
xor
xor
or
ds
cmp
sub
xor
and
cwde
ror
mov
retf
mov
dec
fbld
jmp
test
mov
loope
(bad)
jg
ins
and
adc
call
pusha
xlat
jo
mov
cdq
ja
and
jo
inc
xor
arpl
add
and
mov
fnsave
adc
and
push
adc
jno
pminub
cmp
sahf
mov
jmp
mov
adc
push
xchg
jns
imul
pop
or
js
sar
imul
stc
push
test
jge
jnp
sbb
shr
sbb
sbb
in
add
in
movs
dec
push
mov
xor
adc
sbb
inc
cmp
push
and
mov
sar
mov
sar
mov
cmc
xor
push
(bad)
adc
pop
and
loop
dec
push
dec
add
js
test
push
jg
clc
in
lea
scas
jmp
cwde
sbb
cmp
fmul
std
jecxz
and
pop
jne
cmp
mov
push
sub
push
cwde
rcl
hlt
and
movs
or
popa
sub
sbb
inc
(bad)
stc
mov
lea
frndint
mov
push
xor
ret
push
jnp
push
and
dec
pop
sub
sbb
adc
sub
mov
ret
les
add
or
imul
mov
xchg
sbb
and
shl
stc
sub
or
std
test
adc
jns
(bad)
pop
push
push
add
ins
adc
jecxz
(bad)
repz
jns
sub
leave
and
dec
and
add
loop
push
sub
xor
mul
cmp
test
mov
xchg
add
mov
cmp
sbb
add
sub
push
icebp
outs
mov
outs
movs
mov
repnz
inc
xchg
xchg
and
std
jecxz
jbe
or
sub
sub
mov
pop
pusha
or
cmp
imul
stos
mov
mov
xchg
xor
xchg
cmp
scas
and
sbb
xor
pop
push
je
push
adc
repz
scas
xor
mov
pop
pop
pop
or
add
btc
or
push
jo
inc
mov
popa
cld
arpl
and
outs
and
rcl
clc
dec
int3
pop
jo
sub
sub
xchg
mov
push
inc
in
push
fadd
lods
fidivr
dec
sti
push
push
and
int3
scas
xor
nop
cmp
xor
or
jno
test
mov
rcr
(bad)
aam
jmp
dec
inc
aam
into
push
test
mov
les
inc
clc
jmp
mov
pop
pop
aad
add
add
loopne
es
(bad)
adc
fcom
adc
inc
mov
mov
adc
jmp
or
push
loopne
xchg
shl
xor
inc
movs
push
xchg
out
cmps
cmp
mov
popf
(bad)
cmps
xchg
dec
cmp
xchg
jle
mov
inc
mov
mov
dec
sbb
push
mov
push
mov
push
pop
je
sbb
add
or
adc
and
and
xchg
sbb
sub
xor
push
jb
cmp
sbb
inc
inc
inc
inc
leave
push
jb
dec
push
jb
sbb
push
pop
and
leave
push
pop
pusha
sub
retf
and
mov
push
fs
sub
xchg
jle
in
xchg
and
mov
xor
add
out
push
xor
xchg
mov
or
xor
and
ret
push
sub
and
xchg
outs
jb
daa
inc
push
dec
or
add
xor
iret
leave
repz
adc
adc
sbb
pushf
cmp
sbb
and
iret
leave
and
sub
leave
jae
pushf
sub
xor
pushf
cmp
iret
xor
cmp
cmp
leave
jae
cmp
inc
inc
inc
repnz
cmp
dec
dec
dec
dec
daa
iret
leave
jae
push
push
push
pop
jae
pushf
cmp
pop
pop
pusha
das
(bad)
pusha
fs
push
mov
sub
mov
lea
mov
mov
call
outs
nop
push
enter
ret
xor
dec
lock
push
popa
icebp
in
mov
mov
into
(bad)
xchg
jo
and
clc
mov
fsubrp
push
(bad)
xchg
sub
in
clc
cmp
add
fidivr
dec
add
lock
test
test
inc
mov
mov
cmp
jne
push
aad
jle
push
jl
xchg
adc
push
jne
cwde
stc
and
and
push
jmp
cwde
pop
push
inc
push
das
fmul
test
pop
dec
mov
add
sub
sbb
inc
add
std
in
and
dec
enter
mov
or
scas
pop
cld
xchg
jmp
inc
hlt
cmps
inc
xchg
dec
mov
mov
lea
cdq
push
adc
xchg
or
pcmpeqw
adc
mov
pop
or
popa
or
retf
push
push
or
add
pushf
nop
push
aaa
enter
mov
mov
and
cmp
add
adc
adc
push
cmps
push
mov
mov
pop
jo
clc
add
inc
push
adc
and
or
dec
cmp
pop
aaa
aas
add
or
mov
add
inc
mov
arpl
and
mov
pop
adc
mov
push
pop
adc
push
loope
xor
cmp
pusha
xor
sub
add
out
test
add
and
outs
xor
cli
jmp
push
hlt
push
adc
inc
add
and
mov
cmp
stos
add
ficomp
shl
ins
iret
and
pushf
add
and
and
inc
cmps
mov
or
xor
mov
adc
outs
or
xchg
stos
xchg
and
mov
push
xor
dec
cld
adc
adc
xor
adc
sti
out
cmps
dec
adc
leave
and
sbb
(bad)
out
pop
enter
mov
xor
les
and
dec
sbb
push
adc
inc
mov
push
fld
or
and
adc
fistp
or
or
or
pop
or
and
es
adc
push
out
stc
push
sub
or
enter
jo
dec
inc
arpl
push
push
pop
test
inc
enter
xchg
sbb
aam
xchg
jl
push
pop
push
mov
adc
gs
mov
fnstenv
or
std
dec
xchg
clc
retf
mov
cld
or
cmc
movzx
or
add
pop
xchg
retf
add
or
sbb
or
mov
or
gs
or
or
retf
push
push
(bad)
pop
mov
mov
pop
mov
inc
xchg
aas
jge
aam
fwait
or
cmp
cmp
int3
(bad)
ror
fild
add
call
sub
and
aas
das
sub
xchg
les
sahf
jmp
mov
ins
mov
sub
out
fst
or
mov
lea
int
fwait
out
(bad)
je
push
pop
xor
cmp
jne
sbb
jge
and
enter
test
fild
movzx
push
push
mov
sete
or
jne
loop
adc
cld
dec
xor
xor
add
(bad)
jg
dec
and
and
nop
rol
xchg
adc
inc
dec
push
push
xor
mov
movs
pop
fwait
mov
add
cmp
jne
cmp
mov
adc
adc
cmp
xor
fld
xchg
dec
bound
pop
add
scas
adc
fs
div
popa
lea
jo
leave
call
or
lods
and
test
push
xlat
inc
cmp
fwait
or
add
repz
mov
and
push
pop
dec
(bad)
rol
mov
das
sahf
mov
sbb
and
and
sbb
add
add
mov
xor
fidiv
test
mov
jg
js
mov
test
push
pop
ret
icebp
mov
or
and
xor
or
lock
div
mov
add
xchg
enter
inc
xchg
sub
test
adc
repnz
or
enter
or
mov
es
push
push
push
mov
push
pushf
push
and
loope
in
test
sbb
mov
pop
dec
add
sbb
loop
cmp
sbb
stos
push
push
pusha
jae
inc
or
les
and
pusha
pop
js
and
ret
inc
sub
retf
add
push
xchg
push
or
jmp
dec
cld
jnp
adc
or
call
stos
mov
jp
idiv
cs
sbb
add
sub
mov
pusha
std
pop
add
dec
dec
xor
xor
or
(bad)
pop
ja
or
fsubr
or
push
xor
sbb
jns
ins
js
pusha
or
or
test
add
call
nop
dec
and
pop
nop
rol
in
and
pop
adc
add
add
mov
enter
or
or
and
mov
call
push
jbe
lahf
xchg
pop
push
jne
cmp
stc
shl
stos
fs
sti
outs
mov
mov
out
push
xor
adc
aaa
sub
pop
enter
add
fbld
hlt
mov
and
jp
pop
pop
dec
and
sbb
add
inc
push
out
mov
out
cmp
push
cmp
inc
add
xor
sub
pop
xor
push
mov
stos
sbb
or
nop
sbb
pop
test
lods
xchg
movs
int
call
or
and
mov
xlat
lock
mov
ins
inc
sub
or
dec
test
inc
push
les
scas
test
push
ret
and
dec
mov
fmul
imul
outs
mov
mov
rcr
sbb
or
cmc
adc
(bad)
icebp
popf
xchg
sub
ret
das
fs
stos
xor
add
movs
js
or
imul
mov
adc
pushf
and
pop
scas
or
loop
push
clc
mov
rcr
dec
ins
xor
push
cmp
fld
and
movs
sar
add
sbb
mov
or
or
or
in
clc
cmp
adc
sbb
repnz
sbb
mov
push
jmp
cs
fst
bswap
pop
push
jb
xchg
adc
or
cmp
sbb
inc
adc
leave
nop
or
cmp
pushf
or
push
sbb
leave
nop
or
cmp
retf
adc
xor
xchg
jo
jge
imul
sbb
in
leave
and
xor
and
pop
sbb
sbb
mov
sbb
adc
not
jo
sbb
sbb
xchg
lods
je
bound
sbb
leave
mov
jo
or
sbb
stos
dec
aas
push
push
sub
pop
pushf
mov
mov
ins
push
dec
add
outs
add
xchg
mov
sbb
cmp
or
or
test
inc
das
sbb
and
mov
mov
inc
push
ins
mov
aas
jge
in
push
sbb
sub
adc
int
ss
mov
retf
pop
inc
nop
pop
add
or
push
shl
xchg
cdq
sub
or
push
mov
xor
xchg
push
pop
loopne
lock
cli
in
jb
cmp
pop
and
pop
dec
adc
cmp
xor
xchg
and
pop
xor
enter
or
or
xor
xor
add
sbb
es
mov
sub
movs
dec
sbb
and
inc
or
add
push
sbb
or
dec
jb
sbb
cmp
jg
and
shl
sub
(bad)
push
xor
mov
cmp
sub
sub
clc
je
icebp
inc
cs
lahf
mov
push
lea
jmp
lea
sbb
sub
push
jle
xchg
and
push
dec
push
ror
cmp
mov
js
pop
adc
jmp
pusha
mov
jge
lahf
jg
dec
mov
(bad)
ins
adc
push
or
mov
pop
add
dec
pop
xlat
js
rcr
leave
add
retf
mov
pop
push
lea
add
dec
jae
push
inc
ins
add
sbb
inc
push
pusha
inc
loopne
adc
mov
ja
xchg
and
push
cmps
rcl
cmp
mov
dec
dec
sahf
inc
imul
das
ret
imul
outs
adc
mov
jo
mov
imul
cmp
dec
sub
or
xor
cmp
inc
adc
ss
mov
pusha
les
mov
push
dec
xor
xor
mov
ins
popf
cmp
inc
leave
and
sbb
xchg
dec
cmp
push
ror
sbb
add
enter
ds
xor
leave
test
inc
add
push
in
sub
xchg
inc
nop
add
inc
adc
sbb
outs
sbb
into
add
sahf
cmp
inc
mov
inc
inc
add
shr
inc
xor
sub
hlt
test
push
int
outs
jmp
inc
dec
cmp
mov
mov
xchg
add
lods
das
inc
jmp
cdq
jb
pop
dec
mov
dec
das
pusha
ret
add
bound
pop
pop
cmp
jns
int
test
push
and
and
clc
and
xor
(bad)
dec
lahf
push
push
lods
add
xchg
or
pop
add
mov
or
mov
mov
sub
mov
(bad)
or
push
mov
mov
icebp
inc
sub
and
fdivr
mov
adc
dec
cwde
(bad)
and
aam
bound
and
mov
or
mov
mov
lea
jo
adc
cwde
dec
add
jns
xchg
add
shl
enter
xchg
jo
nop
add
add
lea
call
clc
in
sbb
dec
cmc
fs
push
pop
add
push
lea
push
mov
cmps
ja
inc
push
rcl
and
lock
sbb
das
xor
out
hlt
mov
cmp
scas
and
(bad)
call
jg
cmp
inc
test
into
push
sub
ror
fucom
add
add
rol
sbb
in
pop
push
stos
shr
push
stos
popa
add
mov
mov
sub
sbb
push
jecxz
ins
fs
push
sub
cli
dec
cwde
adc
dec
push
nop
test
mov
sub
fsubr
outs
leave
nop
xor
mov
pop
adc
mov
xchg
xchg
jl
clc
mov
mov
and
xor
xor
into
enter
push
outs
push
push
out
push
je
push
add
dec
add
add
add
pop
and
add
enter
jmp
out
cmp
and
imul
test
mov
or
out
add
pushf
jmp
imul
sub
or
loope
add
adc
jne
add
pusha
aad
pop
pop
test
add
mov
mov
xchg
pop
pushf
shl
jmp
je
outs
out
movs
mov
sub
or
and
add
ret
lock
iret
shl
cmp
xor
sbb
int
(bad)
pop
pop
enter
or
shr
jb
das
sbb
nop
push
js
add
ja
pop
in
dec
enter
cs
sbb
dec
sbb
sbb
dec
dec
push
and
xor
mov
sub
or
xchg
test
iret
sbb
pop
leave
or
xor
xor
adc
nop
jg
add
and
or
push
sti
jnp
sub
je
jl
jl
sahf
sub
mov
mov
jno
add
fcom
scas
inc
sbb
sbb
ins
ret
mov
mov
jg
jne
popa
sbb
loopne
add
mov
leave
inc
fs
pop
es
dec
push
adc
or
adc
pop
sub
adc
retf
push
mov
mov
repz
push
xchg
mov
adc
js
or
xchg
push
push
mov
rcl
and
sbb
adc
loope
aam
add
adc
adc
sbb
inc
out
xchg
cmp
pusha
xchg
jg
cmp
jns
stc
xchg
cmp
adc
and
repz
add
mov
add
jecxz
outs
sub
in
push
lahf
clc
xor
(bad)
fbstp
push
popa
imul
cdq
ds
or
add
or
xor
psllw
loopne
mov
push
pusha
inc
mov
dec
enter
mov
sbb
add
or
sbb
push
ret
test
shl
fst
push
mov
push
jb
dec
add
jae
je
dec
add
add
mov
pop
sub
sbb
inc
fadd
add
mov
push
push
xchg
(bad)
push
jo
push
in
mov
test
mov
int
fisubr
mov
push
dec
add
popf
lea
in
sub
sub
mov
add
adc
call
add
or
xor
mov
inc
adc
sub
add
jne
sbb
xor
push
mov
add
push
out
xlat
mov
les
inc
pop
pusha
sub
sub
inc
sub
xor
xor
je
push
adc
adc
mov
daa
ins
fnstenv
adc
jne
xlat
out
or
mov
sub
xor
push
xchg
(bad)
sbb
popf
pop
cs
lsl
bound
stos
in
sub
and
or
imul
xor
cs
xor
rol
pushf
adc
in
fmul
xor
cmps
or
fldcw
call
nop
fsubrp
cli
cdq
or
add
fimul
mov
mov
lea
sti
inc
inc
mov
or
push
test
pushf
int3
sub
add
mov
adc
push
fs
adc
pop
nop
mov
push
xor
dec
adc
in
jl
or
xchg
mov
adc
dec
sbb
mov
jnp
dec
ja
inc
iret
inc
xchg
mov
adc
es
push
aas
push
fs
sub
sbb
add
mov
aad
in
cmc
mov
and
mov
mov
clc
add
cmp
push
sbb
mov
inc
test
lods
outs
and
xor
xchg
pop
ins
hlt
mov
sbb
cmp
cs
test
sar
mov
and
sub
push
adc
mov
add
add
jecxz
ret
adc
push
loopne
lea
adc
inc
pop
xchg
daa
mov
mov
adc
adc
inc
ret
inc
loope
mov
mov
push
push
mov
cld
push
sti
loop
push
mov
push
adc
cmp
push
push
jecxz
push
(bad)
lea
loopne
retf
or
jo
adc
aam
ja
pop
call
lds
fnstenv
ret
cmp
(bad)
xor
(bad)
and
bound
popf
mov
mov
(bad)
adc
or
fmul
mov
test
or
mov
(bad)
call
fiadd
fwait
addr16
lock
lea
xor
adc
cmp
inc
or
adc
mov
or
arpl
push
clc
xor
(bad)
and
xchg
sub
cmp
fsub
inc
mov
push
inc
xchg
sbb
xor
imul
gs
mov
sub
or
ret
xchg
pusha
mov
inc
pop
xor
jnp
sbb
inc
enter
(bad)
adc
push
sbb
loope
outs
add
add
ja
jns
lods
mov
push
mov
cmp
cmp
add
nop
(bad)
sub
in
add
scas
mov
push
movs
xor
sbb
add
adc
cmp
fst
sbb
movs
mov
aaa
xor
mov
imul
lahf
fwait
lods
mov
mov
xchg
(bad)
mov
and
and
xor
call
push
mov
jo
and
popa
test
test
cdq
dec
call
imul
rol
add
push
outs
and
push
enter
and
and
rcl
and
movs
xchg
cmp
lds
es
sub
mov
mov
aam
mov
jne
rcr
or
mov
and
sbb
pop
add
loope
adc
mov
jbe
cmp
mov
neg
and
inc
sub
push
cmp
inc
sbb
dec
jmp
jl
push
psrld
mov
cmp
jp
add
add
add
xchg
cld
nop
and
call
add
jb
jmp
popf
call
das
sub
lea
sbb
lahf
sbb
aaa
mov
xor
jg
push
xchg
push
xor
dec
jle
jl
sbb
xchg
xor
mov
sub
fiadd
inc
hlt
push
push
cmp
lea
loope
cmps
mov
sbb
xor
outs
or
dec
add
xchg
mov
push
mov
sub
(bad)
mov
lea
ret
pop
dec
jl
dec
dec
or
push
imul
push
mov
push
inc
dec
dec
add
sbb
adc
out
add
sahf
or
push
stos
ins
lods
daa
cmp
mov
loope
xor
xor
xor
xor
bswap
sub
push
dec
sub
cs
mov
das
mov
sub
out
mov
clc
(bad)
push
dec
push
push
mov
test
leave
xor
mov
rol
adc
push
xor
leave
push
dec
sub
jns
popf
add
jns
daa
stos
fldcw
cdq
dec
pop
ror
inc
xor
mov
lahf
push
pop
sbb
das
push
ja
nop
dec
jne
sbb
add
add
pop
pusha
movs
pop
cmp
adc
mov
(bad)
cmp
fist
xchg
leave
pop
in
lahf
xor
mov
in
cdq
adc
test
xchg
push
shr
xchg
add
mov
adc
mov
xlat
mov
repnz
sbb
and
xor
and
sbb
dec
lods
or
loop
mov
mov
xor
(bad)
or
cmp
inc
xor
std
push
push
out
(bad)
mov
(bad)
cmp
add
movs
xor
xor
test
push
leave
xor
xor
test
xchg
lods
leave
and
mov
adc
or
dec
jo
loopne
fist
or
sub
mov
imul
inc
cmp
das
pushf
adc
add
les
fcomp
add
cmp
xor
or
in
xchg
pushf
cmp
(bad)
cmp
mov
sbb
jmp
sbb
push
inc
cmp
push
push
scas
or
push
jb
sti
xor
xchg
dec
and
daa
push
ret
mov
add
outs
inc
dec
loopne
inc
fs
mov
cmp
je
or
dec
pushf
jle
or
jne
jne
popa
or
out
and
ret
sbb
inc
pop
enter
punpckhbw
inc
pop
sbb
mov
ins
jecxz
add
pop
repnz
pop
adc
push
cld
stc
mov
test
retf
js
add
mov
fmul
sub
std
test
jmp
pop
aas
adc
jp
xchg
xchg
aaa
popf
cmp
arpl
pop
int3
popf
xchg
jp
fwait
dec
enter
inc
stc
(bad)
cmps
outs
pusha
cld
mov
jmp
mov
pop
imul
ficom
pushf
test
popa
mov
bound
(bad)
lock
push
in
push
mov
ret
inc
shr
mov
pusha
cmp
add
adc
xor
sti
out
xchg
pop
add
push
mov
push
cld
push
adc
add
mov
retf
in
and
clc
and
das
or
pushf
xor
add
xchg
inc
pop
in
inc
push
mov
fadd
add
fwait
lea
loopne
enter
dec
adc
imul
xor
adc
push
test
adc
ror
mov
stc
or
ret
xor
repnz
fcom
xchg
repnz
into
lahf
xchg
aam
loope
(bad)
or
and
push
pop
mov
mov
out
sub
lods
push
stc
xor
mov
gs
stc
repnz
arpl
mov
lds
or
mov
add
shl
mov
and
cmp
cmp
imul
mov
pop
mov
inc
mov
mov
push
es
pop
adc
inc
clc
ror
or
push
test
and
dec
sahf
sbb
add
mov
mov
add
xchg
jl
mov
les
cdq
test
xlat
add
sub
add
jae
and
mov
mov
sub
cmps
jo
lock
pushf
idiv
lea
mov
test
je
xchg
icebp
sbb
pushf
(bad)
cmp
pop
mov
mov
lock
push
retf
sub
push
push
sahf
mov
fsubr
inc
imul
lods
push
or
pop
test
or
dec
ret
bound
(bad)
aam
or
inc
or
or
cld
push
xor
mov
jg
jge
pop
push
push
jo
mov
adc
dec
dec
sbb
setne
leave
or
push
xor
push
(bad)
mul
in
adc
push
push
ss
or
mov
loope
lods
or
mov
scas
es
sub
out
cmp
mov
loope
imul
sbb
push
or
push
repnz
rol
push
ror
or
adc
js
xchg
jg
cpuid
inc
ror
test
add
es
mov
loope
icebp
fst
push
lods
push
push
xchg
mov
int
adc
mov
jno
mov
push
int3
enter
cwde
push
adc
test
cmp
adc
cmp
mov
or
jns
loopne
push
sbb
xchg
and
xchg
cdq
pop
mov
or
rcr
mov
outs
dec
push
xor
sbb
inc
je
dec
repz
in
outs
mov
sbb
cmps
xchg
test
and
and
add
xchg
cmp
mov
push
or
add
push
inc
call
cmps
cmp
and
or
dec
mov
add
and
fbld
ror
js
fdecstp
push
movs
sbb
push
loop
xor
test
and
fist
das
pop
and
xor
fisub
push
call
dec
mov
stos
in
lea
xor
mov
sahf
add
nop
retf
adc
push
adc
or
pop
xlat
xlat
xchg
and
sub
mov
dec
xor
jno
(bad)
cmp
ror
leave
sbb
lock
mov
cmp
add
adc
push
jp
push
ins
loopne
mov
out
popa
int3
in
and
push
and
scas
sbb
push
dec
dec
mov
pop
or
fistp
pusha
test
movs
mov
push
in
xchg
xchg
and
adc
movs
mov
movs
or
retf
mov
or
dec
xor
mov
adc
test
push
test
xor
xchg
sbb
sub
ret
add
xor
out
pop
cs
dec
push
aaa
or
push
pop
loopne
dec
mov
addr16
pop
lock
pusha
dec
sbb
inc
mov
xor
push
pop
stos
adc
add
mov
or
sbb
mov
xchg
or
or
adc
sub
mov
mov
push
call
and
ret
push
xchg
xchg
fstp
or
jge
push
das
shl
or
leave
xchg
jo
dec
int
push
push
xadd
and
and
stos
(bad)
xor
push
mov
(bad)
iret
adc
nop
or
dec
rol
jecxz
daa
sub
xchg
sbb
loop
dec
enter
push
pop
fstp
mov
sbb
mov
gs
mov
lea
lds
sbb
pop
les
adc
cmp
and
mov
push
xor
mov
imul
adc
cmovns
jge
dec
push
push
sbb
xlat
sbb
sbb
xor
xchg
jo
dec
test
xor
rol
lea
sbb
dec
push
adc
xchg
push
jb
shl
pop
add
sbb
push
lea
sbb
push
pop
mov
das
nop
pop
xor
xor
mov
js
cs
or
and
loope
add
xchg
dec
xchg
adc
push
dec
jecxz
pop
cmp
xchg
mov
popa
xchg
retf
add
popa
mov
test
mov
nop
adc
jo
add
scas
cmp
fsub
and
pop
lea
mov
nop
mov
xor
push
or
popf
xor
femms
push
and
lea
loopne
and
or
and
add
loope
mov
xor
pop
mov
and
adc
aam
cmps
xchg
add
or
les
pop
mov
daa
leave
add
push
xor
aad
or
cwde
ret
and
jne
pop
lea
aad
push
and
adc
enter
dec
sub
add
fs
pop
or
mul
lods
sbb
mov
or
fs
daa
cmp
jne
inc
sub
pop
push
rol
dec
jmp
lods
push
icebp
(bad)
cmp
lahf
add
loopne
cmp
lea
rcr
test
cwde
pop
out
daa
and
sub
jnp
push
mov
and
hlt
and
imul
inc
dec
push
pusha
inc
and
clc
(bad)
sbb
sahf
xchg
sbb
push
add
sbb
scas
inc
lods
adc
mov
mov
inc
push
pop
push
or
add
das
sbb
ret
push
ins
mov
sub
pop
xor
cmp
aad
dec
adc
xor
sbb
idiv
sub
cmps
lds
inc
push
cmp
xor
push
je
fcmovne
rcl
loop
rol
ja
sbb
mov
mov
sbb
mov
popf
xor
push
sub
xchg
mov
xor
aas
test
pop
movs
push
add
sub
inc
sub
inc
popa
xor
mov
into
inc
loop
jmp
inc
pop
and
cmp
aas
pop
xor
sbb
push
enter
pusha
shl
adc
sbb
sar
pop
or
xchg
mov
sar
(bad)
cmps
lock
call
fdivr
sub
sbb
or
mov
retf
ins
add
sub
test
push
add
jns
or
sub
push
nop
add
adc
or
add
add
add
push
lea
add
cmp
imul
and
mov
push
rcr
cmp
cs
add
xchg
sbb
outs
test
fdivr
mov
lea
es
stc
add
cmp
xlat
out
push
pusha
inc
test
cwde
int
jmp
aam
xor
ror
out
dec
push
mov
pop
sbb
(bad)
js
pop
mov
pop
hlt
sub
pop
shl
or
nop
push
or
test
pop
and
sbb
ins
call
sbb
add
xor
add
and
es
and
sar
dec
mov
push
sub
adc
jae
data16
xor
inc
dec
mov
aas
xchg
or
loop
sbb
in
push
imul
and
retf
fisubr
mov
arpl
mov
push
dec
rcl
adc
fist
add
in
adc
and
js
mov
rcl
jns
dec
add
or
sbb
cmp
add
add
in
mov
mul
jnp
not
inc
add
add
cmp
dec
and
pop
popa
xor
shl
push
and
jo
and
push
push
bound
dec
loopne
fs
cmp
adc
mov
nop
lods
cmp
ins
pop
cmp
cmp
cmp
jp
outs
cmp
mov
add
(bad)
sub
dec
and
dec
or
sbb
imul
jo
and
sbb
add
cwde
sar
fmul
xchg
ret
jmp
sub
add
mov
add
xor
mov
adc
iret
jl
cmp
aam
push
lea
inc
pop
stc
ss
push
dec
(bad)
xor
repz
sbb
sub
mov
fmul
ss
(bad)
mov
lods
cmp
jl
idiv
movs
test
(bad)
hlt
cmp
out
jle
jl
sub
clc
into
repz
push
fs
push
jb
adc
push
jns
cmp
push
inc
xor
adc
cmp
int3
mov
mov
jne
mov
test
xor
inc
and
ja
and
pusha
xchg
jno
bound
push
and
test
cmp
(bad)
call
imul
add
lea
std
cmps
mov
test
xchg
xchg
dec
and
adc
stos
and
in
or
and
mov
push
add
loope
or
adc
bound
mov
mov
adc
outs
pop
xor
dec
mov
rcr
jo
add
(bad)
jge
or
or
add
add
ds
cmps
xor
and
xor
or
xor
mov
sub
and
sti
pop
enter
xor
add
cmp
fs
hlt
hlt
inc
jmp
mov
shr
in
mov
inc
cmps
or
imul
mov
push
push
cdq
xor
sbb
adc
loopne
out
jne
rcr
das
xor
xor
and
nop
inc
call
(bad)
sbb
test
es
sbb
stos
in
push
ret
dec
sub
lods
mov
test
nop
or
scas
xchg
cmp
inc
dec
add
(bad)
mov
nop
cmps
adc
mov
dec
mov
mov
pop
push
cmp
rcl
xchg
je
fs
xor
inc
inc
and
push
daa
es
adc
jns
test
popf
or
sbb
stos
sub
push
mov
outs
sbb
mov
or
int3
es
inc
mov
push
js
lods
shl
and
mov
jge
jmp
or
and
and
adc
call
loop
ret
inc
call
inc
xor
pop
stc
lea
loopne
imul
pusha
mov
push
bound
cdq
push
in
sbb
les
jb
jmp
jle
lahf
push
mov
dec
fdivr
add
adc
call
loopne
retf
adc
mov
mov
jecxz
test
nop
xchg
mov
and
and
pop
push
xchg
jl
rcr
push
cmp
int
sti
jmp
jl
test
xor
mov
daa
iret
in
add
mov
sub
loopne
leave
push
mov
pop
and
es
sub
add
arpl
in
or
add
arpl
mov
add
fcom
or
pshufw
sub
sub
push
mov
shl
ins
mov
push
push
mov
or
inc
stos
lods
outs
enter
sbb
add
push
cmp
push
and
lods
mov
sbb
xchg
icebp
icebp
mov
dec
or
sbb
repnz
mov
(bad)
movs
gs
mov
out
(bad)
movs
sub
std
vmread
ja
push
fist
jb
inc
inc
add
call
movs
push
and
test
shl
int
dec
mov
and
push
inc
in
add
mov
lods
jne
cmp
je
push
push
adc
adc
ins
femms
fadd
mov
call
mov
add
push
(bad)
xor
pop
aam
jecxz
pop
stc
xor
aaa
lea
movs
mov
js
sub
mov
xchg
cmp
mov
sub
and
pusha
cmp
mov
mov
sbb
add
sub
or
pop
inc
or
sbb
test
or
or
sub
or
in
and
call
or
and
sbb
xor
xchg
or
or
push
pushf
sub
fist
push
mov
in
xor
ins
jnp
in
stc
test
es
test
js
(bad)
dec
into
and
les
add
imul
lock
and
es
bound
nop
mov
or
add
dec
jp
add
adc
mov
in
pop
push
fsubr
xchg
movs
sub
or
jo
xchg
or
and
cmp
and
stos
dec
dec
inc
pop
sub
mov
cmp
jne
js
test
div
std
add
js
(bad)
inc
mov
and
cmp
pusha
push
and
inc
jle
inc
jnp
jl
test
inc
outs
mov
mov
jle
lea
sub
mov
sbb
dec
jne
test
mov
setnp
xchg
xchg
les
xor
dec
call
mov
or
mov
push
setnp
aaa
and
or
jae
pop
push
sbb
out
adc
push
imul
add
sub
jmp
or
ret
xchg
jecxz
xor
lock
lock
and
repnz
pop
adc
sahf
cmp
int3
jp
or
push
lock
pop
call
xchg
xor
cwde
xor
add
sub
sbb
pop
adc
xor
and
sub
push
loope
mov
add
sbb
inc
sbb
mov
push
and
jecxz
push
aaa
push
push
stc
call
sbb
sub
fisttp
adc
ds
xor
jne
imul
cs
js
mov
test
push
jbe
lea
sbb
jae
stos
pop
cmp
je
mov
xchg
dec
stos
jmp
cmps
or
xor
jne
cmp
ret
inc
test
scas
inc
fist
inc
loope
cmp
dec
rcr
movs
add
enter
xor
or
mov
into
push
or
sar
xor
sub
cmp
or
pop
aam
pop
sbb
mov
inc
sbb
mov
adc
add
pop
lods
push
push
mov
ss
pop
sbb
fnstsw
adc
ds
ret
fcom
sub
loopne
retf
cmp
push
or
fiadd
push
adc
push
cmp
xor
push
jb
rcr
xlat
lea
add
in
sub
add
retf
cmp
sub
fidivr
and
push
dec
pusha
adc
inc
xchg
data16
cmp
xchg
xor
inc
sbb
or
mov
fs
addr16
jns
add
enter
ins
ins
add
add
sbb
dec
push
popf
dec
add
jns
xchg
sbb
adc
inc
or
inc
adc
mov
sbb
lea
mov
outs
pop
inc
pushf
jmp
test
jo
lahf
pop
fwait
in
mov
test
jne
repz
retf
enter
sbb
dec
push
jo
push
(bad)
mov
les
addr16
inc
dec
inc
push
pop
lock
fwait
mov
jno
or
mov
push
or
add
xor
in
adc
pop
mov
aaa
xchg
retf
add
mov
add
nop
push
out
cmovge
add
xchg
push
loope
fnsave
inc
rcr
sub
in
or
inc
outs
adc
or
sbb
push
add
push
out
mov
and
add
adc
add
add
pop
add
sbb
(bad)
rol
or
pop
cmp
pusha
cmp
adc
adc
movs
pop
sbb
xor
call
sbb
call
es
mov
aam
add
or
aam
xor
mov
or
loope
cmp
or
nop
je
push
push
test
sub
loopne
data16
arpl
push
pop
loope
adc
test
sahf
addps
xor
mov
mov
imul
adc
imul
ss
adc
add
outs
and
xor
mov
sbb
pavgw
xor
leave
mov
movs
xor
outs
nop
cmp
loopne
xor
cmp
mov
mov
pop
shl
mov
add
popf
(bad)
into
pop
sub
hlt
loope
les
nop
adc
orps
adc
rol
jbe
lds
xor
dec
cmp
push
pop
test
push
adc
push
lods
sub
adc
jne
ja
fstp
pop
inc
ret
push
adc
mov
idiv
sub
sbb
pusha
add
call
or
xor
sbb
iret
jp
fiadd
add
adc
sbb
add
cmp
cmp
mov
cs
adc
jb
dec
jg
sbb
dec
cmp
xchg
pop
lea
xor
rcr
out
sub
retf
pop
mov
add
adc
pop
(bad)
loope
out
push
adc
imul
jo
out
mov
clc
inc
sub
sub
or
jge
push
jle
push
mov
push
push
jo
push
cmp
jg
inc
aam
es
jae
inc
jae
pop
cmp
fwait
mov
je
std
inc
jle
jmp
or
push
cmp
mov
add
jmp
inc
push
jo
pop
mov
into
xlat
sbb
(bad)
loopne
push
cmp
cmp
fldenv
jmp
movs
fstp
mov
push
xchg
pop
and
ja
clc
xor
imul
and
ret
add
sub
pop
sub
hlt
sbb
xor
sbb
data16
pop
inc
mov
pop
dec
cmp
inc
(bad)
lock
je
pop
xor
adc
jmp
sbb
mov
inc
loope
push
adc
pusha
mov
pop
sbb
pushf
xchg
enter
imul
cmp
pop
or
fistp
sub
add
mov
loopne
setns
pushf
out
test
add
add
repz
sbb
not
enter
out
mov
stos
jne
ret
xor
jg
add
push
repnz
cmp
push
je
bnd
ret
loopne
mov
dec
inc
jno
(bad)
icebp
xor
icebp
punpckldq
nop
add
mov
and
loope
ja
xchg
nop
jo
mov
and
inc
jne
xor
mov
adc
mov
fnstenv
pop
sti
jbe
test
popf
mov
pop
fwait
mov
add
shr
xor
or
cmp
(bad)
je
shl
or
add
adc
loop
sbb
xlat
dec
retf
and
xchg
and
pop
(bad)
fiadd
mov
sar
inc
test
jne
shr
mov
sub
dec
mov
mov
push
(bad)
and
inc
fcomp
add
scas
lods
stos
add
iret
add
pop
adc
add
add
jae
ret
inc
sbb
inc
test
seto
push
dec
in
sub
pop
sub
mov
call
add
shl
add
inc
(bad)
cld
inc
ins
clc
dec
in
xchg
add
xor
sub
add
mov
add
cmps
and
xchg
hlt
sub
mov
(bad)
add
and
sub
aad
sbb
mov
jo
jle
or
inc
push
pop
push
adc
cs
jne
data16
(bad)
sub
out
aam
inc
in
cmp
and
and
fld
push
inc
and
push
push
loop
sub
cmp
pop
jg
jl
sub
add
fidivr
sub
add
out
sub
jno
adc
add
xor
inc
xchg
dec
dec
out
inc
dec
jae
jnp
mov
test
inc
pop
daa
or
pop
jne
push
fistp
cld
jp
sub
xchg
adc
cmp
and
cmp
loop
pop
sar
push
lea
es
add
test
xchg
jmp
cmp
adc
inc
test
jmp
pop
or
pusha
and
xchg
stos
jp
add
cdq
dec
in
adc
add
mov
mov
lea
add
cmp
dec
dec
add
cmp
push
add
mov
dec
or
call
xchg
pop
add
dec
adc
jo
add
push
popf
push
adc
mov
sub
add
add
lods
sbb
inc
add
push
(bad)
out
scas
cld
fsub
cmp
ja
adc
int3
push
in
add
in
(bad)
ret
punpcklbw
add
sub
out
or
sbb
or
daa
jns
out
add
sbb
cmp
sbb
adc
xchg
add
mov
cdq
int
mov
imul
inc
pop
or
push
dec
xor
int
mov
call
loope
and
xor
les
sub
fiadd
add
add
add
sub
pop
jns
push
(bad)
std
movs
je
xor
je
into
fsub
sbb
aas
and
or
push
fwait
sbb
lock
add
lea
fstp
jmp
mov
mov
xor
je
sub
jge
xchg
(bad)
add
in
xor
xchg
lahf
movs
in
mov
push
daa
addr16
pop
xchg
std
jbe
push
push
sbb
mov
lea
jne
jae
xchg
aam
push
cmps
dec
lock
pusha
aad
adc
add
out
pop
add
shr
pop
(bad)
rcl
jb
dec
dec
div
push
sbb
adc
loope
cmp
(bad)
xlat
cld
mov
gs
adc
mov
jno
loop
sbb
pop
mov
adc
sub
stc
popf
mov
test
call
or
test
sbb
test
or
inc
xor
dec
sahf
add
call
jg
outs
xor
cmp
shr
sub
mov
test
imul
lea
add
dec
sub
or
pop
cmps
pop
leave
in
add
cmp
jae
jge
sub
mov
mov
sub
xor
sahf
cmps
mov
jnp
imul
add
push
popa
inc
push
lock
jmp
icebp
int3
not
bound
cs
mov
call
or
sub
test
cdq
fld
movs
sbb
xor
in
cmps
xchg
pop
sub
pusha
add
and
and
add
pushf
pop
sbb
dec
js
ficom
adc
test
pop
shl
cmp
sub
daa
ss
add
lea
adc
les
mov
cmp
jo
and
or
push
test
fisub
push
(bad)
mov
rcl
dec
add
xchg
xor
dec
sub
push
and
xor
xor
pop
rcr
xor
aaa
add
sbb
jns
jae
movs
pop
test
or
mov
or
mov
push
stos
adc
sbb
ss
jl
test
(bad)
cmp
mov
sub
add
mov
call
or
push
sub
adc
push
push
xor
aas
ins
inc
(bad)
xor
jg
pop
movs
push
cdq
dec
cmp
sbb
inc
add
push
test
loope
test
add
xor
cmp
call
dec
sbb
cmp
int
or
rcr
popf
in
push
test
mov
cmp
imul
adc
xor
imul
sbb
adc
or
jb
push
dec
fwait
dec
push
dec
and
dec
xor
ins
lock
push
das
jb
(bad)
and
retf
xchg
fmul
jno
add
pop
or
sub
dec
dec
jl
pushf
sbb
test
fnstenv
scas
adc
cmp
mov
ficomp
int
fild
or
or
cdq
mov
and
sbb
jge
pop
push
cmp
adc
mov
mov
inc
es
mov
mov
xchg
push
cli
and
sahf
in
mov
xchg
jb
inc
cmp
seto
or
jmp
dec
mov
jecxz
jecxz
retf
in
shl
aaa
test
mov
add
jae
mov
jge
or
add
test
mov
popf
dec
popf
mov
imul
std
add
dec
pop
add
clc
mov
lea
movs
test
sbb
ss
dec
xor
sub
push
lods
cmp
or
fcomp
jmp
push
mov
leave
inc
nop
fwait
add
push
lea
mov
aas
add
cmp
nop
ss
xor
xlat
jl
cmp
and
je
or
mov
pop
cmps
pop
push
aam
adc
adc
dec
sub
xor
mov
mov
jns
fwait
jnp
xor
push
jb
ficom
(bad)
out
xchg
xor
inc
pushf
je
jno
adc
lock
ja
mov
mov
(bad)
dec
nop
sbb
inc
sbb
ds
in
mov
and
pop
test
sbb
pop
or
inc
pushf
lahf
xor
cmp
jle
dec
add
add
les
movs
or
xlat
pop
jmp
push
dec
and
add
(bad)
mov
rcr
and
jno
sbb
sti
xchg
inc
aaa
sub
fsub
mov
and
push
pop
rcr
adc
add
je
add
repnz
lahf
and
jp
and
mov
sbb
pop
ja
test
loope
mov
xor
xchg
mov
mov
jle
int3
push
push
and
add
popf
test
(bad)
lea
sub
in
outs
or
sub
jne
push
xchg
adc
pop
popa
xchg
inc
call
add
dec
cwde
add
movs
xlat
and
mov
jmp
push
lahf
cmp
(bad)
stc
in
lahf
dec
mov
sub
fdiv
dec
pusha
dec
mov
sbb
popf
mov
inc
(bad)
jmp
push
(bad)
pop
add
pop
aad
cmp
xchg
lock
jp
and
iret
cmp
pop
test
inc
test
mov
in
mov
mov
fwait
sub
add
mov
cs
pop
fwait
cmp
pop
nop
sub
pop
mov
push
movs
cdq
add
push
movs
ret
mov
ror
push
push
aaa
das
mov
dec
xchg
sub
nop
push
data16
and
sub
push
xor
pop
dec
ror
sub
int
sub
out
add
adc
cmp
mov
push
sbb
or
xor
cmp
xor
dec
aas
cmp
nop
xchg
xor
pushf
dec
xor
xor
dec
sub
xor
test
xor
cdq
dec
xor
xor
adc
push
(bad)
fist
sbb
dec
sbb
sbb
sbb
and
mov
jno
dec
ror
mov
sub
pop
out
popf
imul
ss
push
loop
push
lea
or
cmp
adc
test
cmp
je
ror
or
mov
enter
xchg
mov
lea
xchg
(bad)
neg
mov
fsub
pop
lods
mov
push
aad
mov
xchg
ret
ins
popf
cmp
ds
sbb
xchg
retf
inc
iret
cld
and
jb
sbb
les
test
mov
cdq
dec
call
call
test
pop
adc
je
repnz
in
lea
sbb
or
mov
enter
ss
or
mov
or
sbb
mov
into
push
dec
cld
mov
mov
je
icebp
sbb
jns
out
adc
mov
inc
push
pop
rcr
xor
cmp
sbb
mov
aaa
cld
xor
push
test
mov
imul
jg
int3
call
mov
iret
ins
cwde
out
or
add
cmc
gs
sbb
dec
xor
or
int
sbb
jmp
mov
jge
mov
mov
mov
mov
(bad)
test
cmps
inc
in
ret
mov
and
push
and
pushf
hlt
pop
cli
jmp
call
xchg
cmp
ja
sar
inc
jle
enter
push
fs
pop
mov
adc
lahf
hlt
ror
out
adc
mov
and
test
add
not
out
xor
sbb
int
int
adc
rcl
and
adc
jge
(bad)
add
jo
xor
ins
arpl
add
mov
pushf
fst
into
dec
loopne
mov
cdq
pushf
add
and
mov
push
sbb
dec
adc
pop
ret
call
mov
hlt
in
jae
or
push
popf
push
xchg
movs
pop
mov
pushf
nop
fistp
sbb
imul
pop
stos
mov
jno
jae
xchg
stos
bound
cmp
cmp
cli
leave
gs
or
mov
mov
or
call
inc
sub
jl
dec
jp
inc
push
mov
aad
ror
loope
rcr
int3
sahf
retf
and
jnp
add
xchg
and
inc
push
adc
dec
adc
add
adc
cmp
js
test
or
mov
movs
aad
add
push
add
cmp
cmc
enter
nop
test
js
sbb
jo
add
test
rcl
rcl
or
jl
add
sub
mov
add
xchg
dec
enter
jno
cld
dec
int
pop
add
or
or
cld
adc
not
jno
inc
fbstp
lea
int3
push
sub
(bad)
pop
call
add
sub
movs
jge
popa
test
inc
inc
jnp
js
pop
stc
or
cmp
jecxz
aad
hlt
in
dec
std
xchg
cmp
jmp
cld
push
fst
pop
sub
lea
mov
and
mov
and
stc
(bad)
call
push
mov
jl
xchg
jbe
movs
je
shr
scas
test
add
sar
mov
mov
fs
mov
push
fwait
not
bound
pand
cmps
call
and
pusha
call
sbb
cmp
test
sub
and
add
or
pusha
sbb
outs
jae
je
imul
adc
(bad)
es
fs
fidivr
push
ja
push
imul
push
or
popf
add
(bad)
mov
inc
add
or
add
cmp
push
jo
pop
add
dec
jnp
push
mov
cmp
cwde
cmp
xor
push
sub
or
rol
pop
push
push
outs
test
mov
popa
push
imul
add
jo
movsx
test
cmp
cmp
ins
mov
in
stc
je
push
in
xchg
pop
dec
push
jo
cmps
nop
out
inc
pop
jo
fidiv
dec
stos
daa
jle
ret
xor
iret
repz
sub
push
push
cmp
mov
cwde
mov
cmp
jp
and
xor
xchg
xchg
sub
cdq
inc
inc
add
jge
cwde
out
push
jmp
and
push
icebp
mov
movs
je
push
shr
rcr
mov
mov
rcr
loope
add
lea
add
test
lahf
push
mov
or
aam
ret
leave
imul
jmp
daa
ss
stc
sub
cmp
dec
push
sti
or
sbb
scas
outs
dec
test
push
adc
xchg
je
and
cmps
xchg
or
dec
cwde
fst
xor
pop
sbb
inc
push
pop
rcl
std
and
loope
adc
sbb
push
push
enter
jmp
sub
cld
or
add
adc
and
sar
push
jge
inc
inc
mov
or
sub
data16
rcl
sbb
sub
push
sbb
in
mov
mov
sti
inc
push
add
inc
ret
sbb
sub
loopne
fcom
cs
xchg
call
add
cmp
or
mov
xchg
or
and
into
xor
in
xor
repnz
sbb
fmul
push
and
and
jns
ror
adc
movs
shr
xchg
dec
ds
mov
scas
add
push
add
(bad)
adc
push
bound
sub
inc
rol
pop
pop
nop
or
cmp
xchg
xchg
push
cmc
mov
in
pop
add
and
xlat
sbb
mov
jb
sbb
lahf
pop
add
add
push
sub
adc
dec
inc
es
sbb
jmp
adc
sbb
es
rol
gs
or
xchg
mov
inc
push
pushf
and
pop
in
sub
jne
shr
cwde
inc
xchg
dec
inc
or
sub
ds
test
pop
sahf
jo
jp
inc
lahf
je
xchg
push
enter
sbb
test
pushf
out
and
aas
sbb
scas
test
sbb
pop
fisubr
or
sbb
jo
cmp
push
dec
mov
mov
(bad)
hlt
fdivrp
mov
mov
mov
or
adc
add
dec
push
adc
test
cmp
push
dec
sub
push
add
jge
adc
mov
add
fsub
imul
shl
jg
xchg
adc
push
or
dec
movs
xor
inc
adc
xor
or
fist
and
stos
xchg
addr16
push
ret
or
pop
fisubr
inc
xchg
add
or
mov
cmp
shr
jmp
xor
push
(bad)
and
in
xor
mov
and
or
pop
xor
sub
add
mov
jo
xor
xor
xchg
dec
add
mov
enter
xor
in
cmp
jb
xchg
cmp
add
cmp
or
xchg
jno
scas
ins
pop
cmp
inc
mov
sbb
scas
cmp
or
cmp
xor
or
push
adc
mov
cli
or
add
push
push
adc
xchg
(bad)
push
sub
out
push
mov
pop
popa
test
popf
in
sbb
push
sbb
dec
cmc
fild
test
jmp
push
and
sar
sub
add
add
add
int
or
fisttp
jle
jg
mov
popa
shl
xchg
add
sub
lock
retf
sub
mov
xchg
in
push
and
loop
mov
(bad)
in
nop
jg
ja
aam
add
cmp
and
in
and
sub
push
dec
add
aad
push
bnd
out
aas
sub
cmps
xchg
inc
and
inc
enter
xchg
jno
and
add
leave
push
and
mov
nop
test
das
mov
pusha
cmp
loop
add
jo
jecxz
into
into
fst
push
and
push
rcr
jo
xor
push
inc
jmp
inc
mov
xor
lea
test
xor
outs
jl
jmp
sbb
(bad)
jmp
lea
icebp
push
clc
adc
call
clc
mov
jle
adc
push
inc
push
adc
in
add
mov
inc
pop
repnz
(bad)
dec
pop
je
dec
aaa
push
and
cmps
or
inc
inc
push
bound
xor
xchg
pop
aad
jl
sbb
out
push
cdq
push
pop
pop
loop
aad
je
inc
fsub
pop
mov
xchg
cs
mov
mov
(bad)
xchg
push
mov
pop
movs
push
ror
inc
push
fs
mov
lea
ror
sbb
jb
mov
gs
iret
les
dec
mov
inc
lds
add
dec
aaa
sub
mov
mov
dec
jne
into
(bad)
div
cmp
adc
repnz
and
fmul
and
enter
xchg
inc
or
push
mov
jno
inc
(bad)
ins
push
je
push
rcl
inc
xchg
cwde
sub
adc
and
mov
popa
fstp
add
pop
inc
clc
xchg
jbe
and
or
or
pusha
loopne
lea
adc
xor
add
jle
retf
xchg
xchg
sti
sbb
cdq
push
rol
call
cmp
and
jb
test
mov
xchg
pop
sbb
ins
inc
jle
dec
push
or
rol
push
push
sub
xor
push
push
outs
push
jo
sub
push
push
push
out
mov
or
pop
jnp
mov
(bad)
mov
pop
aam
repz
jge
lea
push
adc
cmp
add
lea
dec
test
js
popf
pop
jmp
loop
or
and
lea
add
leave
inc
es
add
mov
xchg
xor
es
and
add
clc
lea
repz
sbb
and
lds
dec
aas
bound
add
pop
xor
xchg
outs
mov
jmp
jecxz
(bad)
popf
pop
mov
cmp
ficom
jle
jle
loop
sub
das
pop
push
fwait
adc
inc
mov
xlat
test
scas
adc
mov
ret
clc
pop
jmp
in
mov
add
rol
pop
aad
jp
adc
pop
adc
mov
cmps
stc
and
and
ret
xlat
xchg
pop
movs
push
jno
dec
mov
pop
test
mov
stos
adc
ja
adc
pop
sbb
pop
pop
pusha
xchg
sbb
or
xor
shl
les
mov
mov
adc
cwde
ror
(bad)
mov
add
sbb
jmp
jp
popf
and
sub
push
ds
test
sub
or
movs
lds
movs
bound
arpl
aaa
data16
and
adc
arpl
or
push
mov
dec
(bad)
mov
mov
cmp
hlt
inc
cwde
xor
push
loopne
shl
push
dec
scas
ror
mov
sub
mov
mov
jecxz
dec
mov
xchg
js
popf
movs
ret
sbb
jl
xchg
movs
shl
push
jo
and
jbe
push
dec
xor
jl
xchg
mov
mov
push
pop
inc
pop
jle
rcr
fcomp
test
adc
xor
call
or
or
loopne
mov
shl
or
push
sbb
cmps
lods
xor
mov
pop
repnz
dec
cdq
adc
push
and
jo
outs
je
lods
hlt
mov
or
ins
ja
and
jo
jno
jo
adc
dec
and
test
push
sub
xchg
test
fcom
rol
jo
push
or
fs
jle
adc
mov
pop
jge
jae
loope
or
push
test
xor
jbe
mov
cmp
adc
mov
dec
push
lock
cmps
movs
add
jl
mov
inc
mov
popa
push
in
aad
cmp
jb
jl
dec
(bad)
fidivr
in
cmp
sbb
push
lea
sub
push
push
add
(bad)
pop
adc
js
call
xchg
es
or
ja
adc
mov
push
pop
mov
inc
fmul
pusha
xchg
cmc
aas
pushf
add
sub
push
xchg
jge
mov
push
cmp
cwde
and
mov
jb
pushf
or
mov
in
jl
in
pop
adc
icebp
add
test
sbb
icebp
js
push
pop
add
xor
dec
mov
or
jl
or
xor
push
fisub
int3
and
rcr
rcr
lahf
pusha
cmc
shl
or
pop
or
mov
sbb
push
or
jle
sbb
mov
mov
push
lock
add
inc
movs
xlat
dec
mov
rcl
cwde
sbb
xchg
les
xchg
push
pusha
or
ficom
lea
ins
mov
inc
cmp
into
dec
lock
mov
cmps
xchg
push
add
dec
xchg
push
pushf
jne
or
or
adc
jb
pop
pop
or
or
dec
push
pop
enter
add
nop
pop
push
xchg
imul
cld
xchg
enter
add
cmp
xchg
out
sub
push
mov
ins
test
push
pop
xchg
pop
and
leave
xchg
popa
cwde
add
dec
add
xchg
mov
xchg
cmp
mov
mov
cwde
push
das
iret
and
loopne
out
mov
push
push
stos
mov
in
fmul
lods
inc
pop
outs
push
cmp
add
nop
add
pushf
je
iret
mov
rol
idiv
jne
or
gs
mov
cs
imul
mov
push
fnstcw
adc
or
xchg
xchg
xchg
mov
add
add
in
call
test
rcl
cmp
add
jne
push
bound
scas
inc
jb
xchg
xlat
adc
mov
gs
cdq
cdq
mov
mov
jmp
test
mov
sbb
mov
dec
xor
inc
les
imul
push
pop
iret
jbe
imul
sbb
mov
xchg
es
test
mov
movs
iret
push
call
jge
adc
push
nop
xor
ror
jnp
leave
dec
ds
icebp
mov
lds
dec
xchg
inc
cmps
fcomp
and
sub
lahf
dec
push
push
lock
js
push
clc
or
jl
sub
movs
pop
adc
aad
xor
call
aas
sub
mov
punpcklwd
dec
sbb
jmp
push
mov
xchg
movs
ss
sahf
test
das
cmps
xchg
out
adc
and
pop
push
pusha
test
xchg
or
test
mov
bound
icebp
test
xchg
and
cmp
nop
movs
stos
jmp
aam
aaa
scas
fwait
scas
add
add
dec
ret
mov
or
mov
ret
add
fsub
(bad)
add
sar
add
pop
inc
push
mov
aad
sub
xor
shr
and
pop
adc
dec
cwde
mov
mov
in
adc
xchg
mov
and
fist
packssdw
or
rcr
push
xor
and
add
fsubp
xor
or
stc
adc
or
sbb
xor
mov
jb
fwait
loopne
dec
mov
lds
sbb
(bad)
je
sub
add
repnz
enter
pop
sub
pop
lock
mov
push
cmc
les
dec
fld
jmp
loopne
inc
mov
sbb
inc
lea
mov
mov
test
pop
cmp
rol
mov
adc
lahf
xchg
push
or
inc
fbstp
inc
and
jae
mov
test
mov
jmp
cli
int
xor
pop
push
push
sub
dec
ror
cs
add
dec
push
xor
cmp
pushf
fldenv
cdq
in
movs
push
adc
xchg
dec
push
lock
lea
(bad)
pop
push
dec
sbb
outs
aaa
inc
sti
push
clc
or
mov
mov
xchg
mov
test
jb
mov
sbb
cmp
(bad)
mov
mov
test
jp
scas
add
in
jnp
mov
dec
fimul
or
out
sub
les
adc
or
xor
add
call
fs
or
push
in
or
and
xchg
iret
psllw
dec
push
cdq
push
mov
cmps
jne
jp
cmps
mov
call
jmp
add
lea
inc
call
loopne
cld
sub
(bad)
nop
fnstenv
add
aam
xchg
or
pop
shr
mov
hlt
sub
mov
mov
icebp
ret
pop
mov
pop
push
mov
icebp
fdiv
pop
or
out
mov
push
(bad)
dec
test
cmp
fdivp
add
mov
call
fsub
jne
push
cmps
sub
add
mov
jp
and
pop
ins
adc
or
mov
cmp
mov
dec
pop
test
pop
cwde
jmp
aaa
ret
cld
frstor
adc
adc
daa
mov
bound
daa
nop
test
inc
stc
mov
cmp
test
add
adc
or
mov
test
add
or
test
cmp
hlt
add
add
in
add
test
addr16
lea
push
or
rol
push
dec
rcl
adc
mov
and
add
sub
add
nop
and
and
and
sbb
add
enter
mov
push
call
fld
out
xchg
(bad)
push
jb
mov
les
inc
mov
vcvtdq2pd
outs
data16
pop
movs
add
cmp
xor
xlat
iret
(bad)
or
test
sbb
mov
jmp
and
or
cmp
pop
sbb
jge
lods
dec
add
es
mov
xor
mov
aam
and
imul
fwait
adc
inc
push
test
rcl
fwait
pop
and
mov
dec
and
inc
icebp
adc
dec
inc
push
and
add
adc
das
mov
mov
xchg
div
ins
out
adc
test
jo
push
add
pop
rol
sbb
ins
dec
sub
sbb
inc
ffree
stos
sub
add
xor
loopne
and
enter
sub
nop
popf
sub
dec
and
(bad)
fldenv
cmp
mov
mov
mov
adc
dec
cmps
nop
cs
adc
shl
mov
or
xor
test
das
mov
or
or
mov
sub
rol
mov
cwde
mov
adc
sbb
jb
sti
or
out
xor
or
push
xor
or
or
dec
cmp
adc
mov
ja
pusha
nop
or
lock
or
data16
adc
inc
cmps
xchg
pop
or
enter
je
shl
push
push
adc
pop
or
and
leave
push
adc
cmp
push
in
or
int
test
enter
clc
inc
popf
mov
push
mov
dec
scas
push
jp
and
div
lods
stc
dec
mov
or
mov
cdq
xor
mov
mov
xchg
push
loopne
(bad)
fst
xor
xor
add
scas
push
push
push
hlt
pop
loopne
adc
jl
pop
mov
mov
sbb
sub
dec
pop
push
dec
mov
push
cs
push
retf
fwait
pop
rcr
sbb
or
enter
inc
loopne
int3
cmps
cmp
pop
mov
scas
cdq
cmp
add
dec
mov
sub
lea
xchg
add
dec
add
cmps
sub
cmc
jp
fldcw
sub
xor
jle
push
jle
cmp
xor
xor
push
mov
jmp
inc
jle
cmp
fnstenv
ret
sahf
loopne
test
jnp
adc
push
xchg
adc
push
mov
imul
xchg
inc
sub
pop
inc
es
int
les
inc
sbb
ins
inc
lods
rcl
in
inc
xchg
add
inc
mov
xchg
sbb
inc
push
into
mov
mov
xchg
retf
dec
dec
dec
add
add
add
in
in
dec
add
push
jmp
outs
imul
jb
sub
xor
mov
je
rcl
push
jnp
cdq
sbb
(bad)
ins
push
call
addr16
push
jbe
xchg
xchg
or
jns
mov
or
nop
mov
es
cmp
push
sti
retf
add
xchg
inc
test
js
add
nop
or
add
mov
pop
sub
adc
pop
xchg
pop
lods
mov
pop
adc
sub
and
pop
sub
cmp
cmp
jle
test
(bad)
pop
adc
push
nop
or
xor
xchg
daa
pop
test
pop
and
push
add
inc
mov
sbb
pop
fwait
sub
stos
pop
test
add
jb
les
lods
outs
pop
sub
shl
xchg
icebp
jne
cmp
push
sahf
xchg
nop
test
mov
cdq
pop
adc
fwait
test
cmps
rcl
adc
dec
popa
pop
bound
nop
xchg
inc
arpl
fs
call
xchg
icebp
sub
xchg
pop
and
test
jne
(bad)
cmp
lods
jbe
mov
icebp
pusha
xchg
or
gs
movs
pop
xor
sbb
out
movs
test
mov
std
push
push
jbe
cmps
add
jo
push
inc
mov
jns
inc
sar
mov
enter
xchg
xchg
imul
cmp
push
mov
sub
or
jmp
cmp
ins
lldt
sahf
cld
inc
cld
mov
push
push
push
bound
add
jo
in
lods
shl
inc
or
xor
(bad)
xchg
outs
lods
in
rcr
outs
or
pop
adc
mov
xor
ret
sar
cmp
mov
shr
mov
dec
int3
sbb
dec
jb
imul
mov
mov
mov
jb
push
pop
enter
call
jae
dec
in
inc
push
pop
dec
gs
jne
movs
rcl
call
xchg
ins
ja
into
xor
mov
and
add
out
into
test
enter
jle
pusha
xor
or
js
leave
add
dec
push
cs
pop
test
push
arpl
mov
or
mov
and
xor
mov
test
mov
mov
add
xchg
xchg
mov
mov
mov
push
mov
(bad)
ja
inc
sub
nop
add
fist
jno
pop
imul
xchg
dec
or
lods
movs
dec
mov
pop
cmp
pop
pop
adc
xchg
popf
int3
test
xchg
pop
adc
ins
sbb
and
sub
popa
iret
xor
jne
jl
jmp
mov
and
xor
sub
je
pusha
and
mov
int
pop
xor
shl
mov
pusha
add
cdq
sub
jo
cmp
pop
push
rcr
pop
call
mov
rcr
or
test
xchg
rcl
and
iret
inc
(bad)
in
es
fwait
inc
pop
retf
sbb
and
inc
jae
push
fdiv
or
adc
or
xlat
push
cmp
cmp
stos
jmp
test
sbb
add
lea
sbb
mov
adc
inc
popf
pop
hlt
add
in
pusha
push
mov
mov
cmp
mov
xor
inc
and
inc
jb
shr
pop
js
lock
xchg
pusha
aaa
int3
xor
loop
sar
xor
nop
mov
in
push
or
ins
test
push
cwde
ja
dec
jmp
add
clc
gs
jecxz
sar
mov
and
push
mov
aas
cwde
mov
cmp
mov
adc
adc
stc
ds
sub
push
push
lods
jo
push
inc
arpl
lods
sub
pop
sbb
jo
sbb
ss
cmp
sbb
dec
dec
call
and
popa
sbb
or
lea
xchg
movs
and
or
jmp
jmp
imul
stos
add
call
add
add
and
mov
in
fdiv
retf
cmp
aas
adc
sbb
clc
ror
push
ds
mov
xor
or
or
or
push
add
jge
sbb
or
pop
xor
push
iret
push
xor
inc
xor
int3
adc
push
add
inc
add
jo
icebp
test
cpuid
or
test
mov
or
repz
push
push
out
enter
sbb
gs
inc
dec
pusha
xor
scas
lea
ins
jb
fidiv
cmp
cld
jb
xchg
dec
jne
daa
(bad)
call
mov
inc
sub
jnp
adc
les
or
jns
sbb
inc
ins
dec
jne
and
mov
test
xlat
push
mov
and
(bad)
loope
rol
cmp
or
(bad)
and
push
sbb
es
mov
jle
sub
movs
repnz
loop
sub
add
cmp
jp
mov
das
and
xor
ret
cmps
jg
xor
mov
cmp
rcr
and
ss
xchg
dec
mov
and
sbb
mov
das
mov
push
inc
sub
mov
sub
and
call
adc
sahf
and
aad
retf
dec
inc
sahf
sbb
(bad)
test
lahf
iret
lock
or
and
or
in
sbb
dec
adc
mov
cmp
test
inc
iret
leave
adc
loope
or
rcl
and
push
mov
lods
shl
test
and
pop
in
mov
aas
data16
mov
push
out
and
inc
inc
cmps
cmp
inc
push
mov
push
xchg
xchg
in
rol
sbb
adc
xor
or
xchg
int3
ss
pop
cmc
push
pop
cmps
mov
add
cs
aad
add
dec
or
inc
lahf
add
retf
dec
cld
adc
mov
or
push
adc
(bad)
inc
pop
xchg
aaa
sar
pusha
cmp
(bad)
out
fs
imul
dec
(bad)
ins
add
dec
and
dec
sbb
int3
clc
icebp
or
xchg
sbb
add
call
jle
shr
pusha
ret
fs
sbb
or
lea
push
or
dec
add
push
add
and
int
popf
test
push
ficom
jno
imul
sub
push
sar
adc
push
push
add
call
jbe
(bad)
and
loope
enter
xchg
push
sub
(bad)
adc
xchg
call
int
add
xchg
xchg
push
sub
ror
mov
aam
mov
mov
jb
call
push
rcl
sub
add
outs
sub
xchg
int
test
inc
add
or
sbb
fcmovb
sub
(bad)
sbb
cmc
mov
pop
fadd
add
test
scas
adc
add
adc
sub
and
int
push
push
jb
or
(bad)
push
and
sbb
and
adc
out
inc
add
add
push
loop
and
sbb
xor
sub
pop
add
popf
cs
adc
stos
sbb
test
dec
mov
xor
(bad)
js
jge
cmp
mov
aam
push
add
in
mov
es
sbb
into
inc
add
add
hlt
sbb
dec
jns
aaa
outs
inc
adc
loopne
cmp
imul
popf
mov
pop
sbb
inc
sub
mov
or
movs
aaa
push
ja
lods
inc
and
push
jecxz
mov
mov
in
leave
inc
js
mov
cmp
adc
mov
enter
fistp
mov
and
cmp
push
mov
and
mov
add
xchg
mov
inc
push
sub
aad
jnp
jecxz
cmp
jg
and
mov
test
clc
and
or
push
ror
pop
fadd
call
popa
jns
adc
push
push
xchg
movs
int
add
retf
xchg
sar
sub
xchg
xchg
test
adc
sub
hlt
jl
(bad)
clc
(bad)
sbb
jp
mov
mov
lahf
cdq
nop
inc
pop
sbb
ror
or
and
fistp
sub
adc
dec
sbb
outs
pop
xor
adc
dec
scas
sub
xchg
das
cmp
inc
sbb
adc
clc
mov
mov
sbb
sub
ret
lahf
cmp
aam
adc
adc
aam
adc
push
push
rcl
sub
fld
scas
nop
sbb
les
pop
xorps
and
xchg
adc
pop
xchg
push
pusha
inc
sahf
inc
push
sbb
xor
sbb
xor
mov
pop
adc
mov
das
add
jp
inc
push
sbb
xlat
frstor
pop
pop
cmp
and
add
cmp
sbb
dec
or
add
sbb
or
xchg
rol
xor
add
shl
leave
movs
dec
push
add
inc
pop
cmps
ficom
adc
and
cld
sub
fcom
ret
sub
jmp
mov
pop
and
pop
mov
push
and
inc
add
jae
daa
mov
scas
xchg
mov
jno
rol
push
stos
test
test
mov
inc
fld
pop
sbb
dec
mov
cmp
xor
inc
ret
fwait
(bad)
gs
xchg
add
sbb
inc
call
add
lea
or
jne
mov
inc
clc
pop
and
and
jb
inc
adc
frstor
inc
push
fnstcw
jns
cmp
jge
rol
aad
nop
cmps
dec
xchg
and
aam
ss
enter
and
mov
repz
scas
dec
(bad)
mov
cmp
(bad)
xor
inc
in
sbb
and
or
xor
push
gs
adc
sub
loopne
rsm
in
mov
cmp
or
sub
sbb
xor
imul
xchg
sub
push
enter
popa
jmp
rcr
iret
ins
popa
popa
mov
std
sub
fcmovbe
mov
push
lea
push
in
cld
cmp
sbb
aad
in
add
mov
loopne
inc
xor
cmp
jl
jle
mov
mov
pop
or
les
enter
fimul
test
ja
push
shl
pop
xor
or
sbb
cdq
pop
xchg
add
movs
mov
push
movs
repz
cmp
and
xor
cmp
outs
sbb
inc
scas
and
xor
dec
push
in
hlt
ss
and
aaa
mov
inc
mov
dec
js
xor
add
push
mov
or
ret
push
push
mov
push
push
xchg
les
cdq
or
sbb
rol
repz
aaa
lds
xor
loopne
push
mov
mov
ins
out
add
or
fs
in
or
ret
push
inc
add
adc
daa
adc
sbb
cmp
and
addr16
push
mov
popa
ins
retf
gs
mov
mov
pop
test
adc
mov
xchg
fistp
push
add
push
push
and
adc
outs
leave
movs
fwait
push
mov
jmp
ins
test
sbb
push
repnz
sbb
cmp
sub
sub
dec
or
add
cmps
xchg
dec
jae
clc
rcr
aaa
in
test
arpl
dec
nop
fsubr
push
sub
nop
or
xchg
mov
pop
cmps
add
cli
add
xchg
dec
mov
cmps
in
and
mov
add
sub
fs
and
movs
jns
and
and
mov
and
jno
jb
or
and
and
push
or
rol
sbb
xchg
xchg
pop
or
int
and
xchg
xchg
or
sbb
push
cmc
push
add
cmps
in
test
sub
and
push
add
xchg
adc
pop
jne
mov
inc
test
and
jne
stc
or
mov
jp
inc
icebp
inc
sbb
jne
mov
fmul
sahf
inc
or
add
dec
out
inc
pop
dec
xchg
add
mov
sbb
pop
shr
cdq
cwde
or
cmp
jne
stc
ret
dec
gs
add
xchg
push
fldz
adc
adc
add
push
mov
add
inc
push
fcmovu
mov
gs
fldenv
pop
orps
rcr
outs
loope
cmp
xchg
add
mov
mov
xchg
add
pop
sbb
int3
push
dec
repnz
sahf
jbe
(bad)
ins
push
outs
sbb
aam
mov
lock
fnsave
fdivp
fstp
ror
push
stos
jne
add
inc
fst
loopne
rcr
loopne
les
pop
and
fdiv
add
and
fnstcw
push
imul
sahf
inc
dec
ins
xchg
adc
lods
pop
mov
jmp
cmp
sbb
out
xchg
js
add
sbb
add
sbb
add
mov
mov
fstp
call
cmp
sbb
add
fld
fstp
ffree
imul
or
jae
ja
inc
mov
push
dec
inc
push
inc
fstp
pop
sub
push
sub
lds
ins
pop
fcomp
fs
je
push
fld
sbb
mov
stc
fld
fcomp
fxch
jbe
fld
or
fstp
fisub
fstp
xor
loopne
sub
jmp
mov
fxch
mov
fsub
jns
dec
jmp
cmp
inc
cmps
dec
and
mov
pop
mov
fnsave
inc
adc
jo
mov
sub
cmp
jmp
repz
push
inc
cdq
inc
jle
rcl
push
pop
add
enter
sbb
inc
add
enter
pop
dec
out
adc
repz
inc
add
and
ret
popa
imul
lock
push
sub
add
loopne
loopne
push
jb
add
inc
test
sbb
adc
call
add
mov
test
lea
(bad)
fiadd
in
test
jne
sbb
outs
or
jmp
inc
and
add
mov
push
cs
fld
pop
popa
and
test
and
fistp
lea
sub
jnp
push
adc
sub
in
or
xor
(bad)
hlt
pop
add
pusha
ror
or
xor
lock
jl
ds
cld
adc
in
out
enter
int
inc
(bad)
pop
inc
mov
or
mov
iret
ins
add
lahf
loop
or
fcomp
mov
push
int3
mov
ins
mov
or
pop
jnp
dec
sbb
cmp
call
dec
movs
and
arpl
(bad)
sub
dec
and
cmp
nop
xchg
sbb
adc
or
adc
or
or
ins
mov
rol
and
rcl
add
ret
and
adc
movs
iret
frstor
xchg
cmp
push
mov
push
jo
push
push
aam
add
adc
clc
add
aad
mov
push
addr16
and
pusha
add
jle
fs
pop
cs
cs
cmp
aas
adc
sbb
add
les
stos
movs
mov
push
and
pop
dec
sbb
inc
jb
aaa
mov
xchg
jno
jecxz
xchg
xor
(bad)
aaa
movs
sbb
mov
aaa
mov
dec
jb
add
mov
mov
sti
cwde
mov
test
mov
mov
mov
or
scas
xchg
sub
and
out
int3
shr
cdq
mov
test
out
shr
scas
ja
sbb
cmp
ret
add
jne
hlt
push
adc
mov
loopne
sub
jne
ss
or
mov
inc
ss
das
daa
(bad)
les
dec
mov
inc
add
loope
jo
and
fild
test
xor
ror
push
or
sbb
and
xchg
mov
push
adc
cmp
push
dec
pop
and
nop
retf
push
sbb
cmp
dec
adc
mov
movs
mov
mov
add
rol
xor
xchg
adc
xor
or
adc
aaa
xchg
or
or
sub
ja
mov
pop
jge
mov
mov
pop
dec
adc
sub
or
adc
dec
mov
ret
adc
movs
jns
push
les
push
les
mov
cmp
jmp
sbb
(bad)
fistp
test
in
mov
cmp
(bad)
mov
or
and
dec
adc
or
cmp
shl
add
push
mov
bswap
or
sub
iret
imul
and
sbb
push
lds
add
add
sbb
mov
push
lock
addr16
xor
int
pop
dec
dec
push
movs
xor
add
sub
adc
cmp
adc
xor
fs
mov
and
mov
jle
and
pop
test
xchg
out
push
nop
mov
ins
rcl
call
pop
ror
inc
jbe
not
add
inc
lahf
std
shl
xor
or
sub
push
daa
je
pop
sub
inc
cmp
inc
ror
into
push
pop
jle
or
and
dec
push
ins
stos
adc
adc
arpl
sub
sub
aam
and
add
push
push
lsl
pop
sub
aam
adc
and
adc
push
and
adc
dec
xlat
sbb
add
sbb
adc
pop
xor
adc
and
in
pop
mov
xchg
mov
adc
les
push
cmps
mov
movs
xchg
add
icebp
adc
dec
sti
out
adc
ret
add
int3
jecxz
pusha
sti
xor
adc
ins
or
je
enter
dec
nop
lods
add
push
repz
pop
fimul
inc
pop
mov
push
es
xchg
les
mov
push
cmp
jecxz
xchg
fimul
in
call
mov
inc
jl
jmp
add
loop
push
enter
jp
addr16
cmps
mov
push
dec
adc
inc
imul
and
adc
cmp
push
jno
in
dec
dec
inc
stc
dec
pop
xor
ret
inc
das
push
mov
ror
sub
and
cmp
pop
cmps
mov
sbb
or
ins
xchg
mov
ret
pop
push
sub
(bad)
mov
push
or
imul
add
mov
cmc
stc
push
push
lds
sbb
ss
ret
xchg
push
pop
cmp
adc
sbb
imul
call
in
mov
loopne
stc
push
neg
xchg
push
ror
test
arpl
lods
cmps
inc
rol
pop
adc
sbb
mov
xor
js
and
inc
les
inc
ins
jns
add
test
xlat
inc
imul
je
xor
add
and
out
dec
and
das
xchg
popa
jno
dec
sahf
cs
push
and
mov
out
pop
ret
sbb
xchg
mov
(bad)
int3
and
pop
es
daa
mov
push
and
xchg
rcr
shl
xchg
pop
xchg
sub
add
sub
dec
enter
and
fsubr
or
cs
xor
inc
xor
xor
cmp
add
push
leave
or
pop
xor
xor
jb
ss
or
sbb
cmps
ret
(bad)
adc
cmp
jecxz
je
xor
ins
cmp
mov
pop
jns
outs
push
or
add
inc
add
sbb
or
mov
mov
cmp
xchg
xor
adc
mov
pop
cwde
mov
aas
fmul
inc
aaa
xor
inc
xor
retf
push
pop
loop
data16
cmp
data16
cmp
inc
test
aaa
iret
xor
inc
addr16
and
arpl
xor
push
sub
and
xchg
dec
xor
mov
jl
sbb
xor
or
inc
push
sub
in
or
adc
and
test
movs
lds
push
das
sbb
pop
fs
nop
inc
fisubr
test
or
std
push
cmp
inc
mov
imul
adc
popf
int
fidiv
add
(bad)
and
inc
dec
rcr
dec
add
add
enter
pop
inc
or
inc
(bad)
dec
add
jl
sbb
ins
enter
push
mov
xor
js
js
push
imul
ds
sbb
out
xor
sbb
jb
cli
test
or
and
dec
dec
adc
dec
shl
je
lds
scas
sbb
fs
shl
push
loop
sbb
repnz
cmp
ds
adc
dec
push
jmp
inc
and
mov
je
loop
mov
push
cmps
jecxz
inc
je
lahf
test
fs
sahf
(bad)
rcl
leave
adc
lock
jb
les
push
sub
imul
inc
(bad)
cwde
add
or
das
and
shr
push
ror
lods
inc
inc
data16
leave
in
sub
push
gs
cmp
push
xchg
sub
push
pushf
push
xor
sbb
jb
pop
mov
adc
cwde
sbb
xchg
pop
lahf
mov
pop
or
add
loopne
mov
fs
pop
xor
cld
lahf
pop
iret
daa
leave
loopne
pop
lea
adc
and
push
test
jne
lea
into
pop
fwait
shl
jmp
in
jl
xor
add
gs
xchg
mov
pop
add
add
ret
sbb
jns
dec
lock
or
repnz
and
cmp
in
cmp
xor
popf
arpl
add
xchg
and
inc
sbb
xor
int3
or
fnsave
adc
aas
push
or
xor
(bad)
sti
adc
push
jmp
mov
imul
fwait
rol
jmp
mov
xor
sub
int3
out
fmul
stos
stos
sbb
loopne
iret
sti
mov
ins
xor
pop
mov
pop
pop
ret
mov
pop
pushf
nop
sub
jne
enter
mov
inc
or
xchg
dec
es
nop
cwde
test
shr
cmps
movs
xor
cmp
add
mov
pop
mov
pop
mov
sub
pop
nop
je
lods
sbb
lock
outs
movs
inc
add
inc
add
inc
or
imul
pop
xor
sbb
adc
sar
adc
add
sbb
push
sbb
sar
sbb
and
cmp
sar
and
or
cmp
shr
sub
sub
sar
sub
xor
cmp
sar
xor
or
cmp
retf
inc
cmp
push
add
mov
jns
inc
inc
adc
adc
movs
jns
dec
adc
movs
jns
push
push
adc
jns
movs
push
push
adc
es
push
pop
pop
jns
movs
jns
pusha
pusha
sbb
push
add
ja
sbb
dec
mov
push
ds
push
push
and
loopne
repnz
xchg
add
ror
xor
xchg
or
int
jns
add
pusha
and
or
push
inc
push
pop
push
or
into
mov
add
pusha
mov
or
outs
outs
jns
or
pop
clc
or
xchg
dec
das
or
(bad)
mov
xchg
xchg
cmps
mov
or
xchg
xchg
xchg
retf
ins
xchg
dec
or
or
pop
inc
and
sbb
or
adc
mov
stos
add
scas
inc
pop
sub
mov
adc
or
sbb
fsub
addr16
add
push
icebp
jg
xor
or
add
add
add
and
loopne
and
inc
and
and
and
add
cs
adc
adc
sbb
pop
add
xor
or
outs
add
or
push
adc
test
and
aas
or
jge
mov
hlt
push
fmul
mov
fwait
and
ret
mov
ss
ja
xor
cmp
jg
jns
test
jne
mov
lea
test
inc
pop
dec
clc
or
out
add
sub
or
jge
movs
in
adc
dec
loopne
mov
mov
cmp
mov
pop
dec
and
push
lds
push
scas
cmp
mov
pop
leave
out
mov
leave
test
retf
jae
dec
sbb
(bad)
enter
mov
add
jne
movs
add
jmp
mov
inc
imul
je
mov
jb
sbb
jbe
xor
sbb
cmp
push
stc
push
stc
popa
jb
adc
push
add
mov
add
cmp
ret
add
jne
sbb
pop
jne
aam
in
jl
je
xor
add
mov
mov
mov
add
js
jg
in
mov
mov
aas
clc
pop
xlat
sbb
lea
add
dec
cmp
mov
inc
jbe
and
ja
cmp
jl
pop
test
mov
push
cmp
pop
jmp
aas
mov
cmp
push
adc
or
xchg
sbb
fdiv
daa
mov
stos
mov
xchg
adc
mov
lods
or
push
mov
bound
mov
lock
add
in
lahf
push
js
rcr
or
or
dec
dec
push
cmps
cmp
adc
adc
push
dec
test
xchg
bound
jo
sub
add
push
lea
push
add
push
sbb
outs
dec
cmp
out
cmps
fimul
jne
push
sub
mov
or
dec
xor
(bad)
push
add
inc
and
sub
mov
movs
mov
add
inc
test
aam
push
inc
pop
and
inc
push
outs
sbb
xor
es
xor
pop
pop
mov
xor
pop
cmp
and
jne
sbb
or
pop
test
push
or
cs
push
jne
mov
add
mov
add
sub
sbb
adc
xchg
aam
mov
int3
inc
ins
xor
sbb
pop
push
imul
fwait
add
fnsave
rol
sti
push
jmp
dec
or
sub
jl
add
add
mov
and
pop
lock
stos
mov
in
add
or
dec
jae
add
add
or
fsub
cmp
pushf
adc
jmp
shl
(bad)
add
sbb
and
or
push
lock
sbb
loopne
mul
daa
add
push
repnz
cmc
enter
mov
fimul
dec
push
pop
adc
push
jbe
push
cld
pop
mov
add
ins
add
scas
dec
push
loop
push
xor
sub
fdivp
adc
jmp
sbb
ins
arpl
push
sub
ss
std
sub
mov
inc
mov
lea
xchg
scas
xor
lea
in
fcmovu
push
mov
sub
std
xor
ins
push
test
pop
loopne
fld
jmp
add
loopne
add
ret
pop
dec
or
and
fild
cwde
add
call
xor
dec
lods
loope
repnz
mov
cmp
adc
jb
ret
sub
pop
jbe
bound
sbb
fimul
push
test
mov
xor
and
inc
ficom
mov
mov
add
fs
mov
jo
lea
mov
cmp
fwait
dec
ins
stos
mov
out
dec
add
pop
and
sbb
iret
xor
xchg
cmp
loop
xchg
mov
inc
out
xor
leave
dec
push
movs
and
sub
xchg
dec
push
ret
add
or
mov
je
jbe
mov
loopne
out
and
push
mov
shr
sub
add
in
mov
icebp
mov
mov
add
mov
ficomp
push
adc
add
add
inc
inc
mov
or
add
push
mov
rol
stc
dec
or
push
add
aaa
popa
push
pusha
pop
and
paddd
inc
xor
je
test
mov
sbb
iret
loopne
or
jne
add
add
retf
outs
inc
or
jne
jmp
loope
adc
push
adc
sti
pop
hlt
les
int
jecxz
jnp
clc
mov
xlat
or
and
pusha
cmps
push
or
jmp
out
pop
lahf
add
inc
adc
out
inc
or
add
xor
dec
add
test
iret
movs
test
inc
(bad)
xor
shl
sub
mov
mov
daa
loopne
xchg
cmp
inc
clc
aam
mov
ret
add
xchg
fistp
sub
sbb
add
ret
add
popa
fdiv
add
pop
sub
push
dec
clc
lea
sbb
sub
or
ds
(bad)
adc
je
add
jne
jb
into
in
xchg
xor
sahf
xchg
jne
lock
push
lock
imul
mov
hlt
dec
mov
fidivr
idiv
iret
sbb
xor
std
stc
mov
movs
lock
mov
xlat
pop
ror
jo
mov
jbe
cmp
fst
adc
add
aaa
mov
push
push
test
fistp
sub
lea
rcr
cmp
lahf
push
clc
push
push
add
push
pop
ja
xlat
pop
ficom
add
mov
adc
push
push
fbld
mov
fwait
nop
sbb
xchg
mov
je
mov
cmp
jle
or
sub
das
test
enter
sub
pop
push
jecxz
inc
pop
in
and
loopne
cmp
adc
add
leave
inc
xor
and
dec
jbe
or
mov
mov
sbb
popa
sub
push
sub
retf
aaa
mov
mov
add
pop
push
push
jbe
loopne
not
inc
dec
or
xchg
push
xchg
cmp
or
rol
jle
cmp
je
jl
xor
sub
(bad)
dec
cld
mov
stos
mov
or
ss
ins
sub
mov
retf
xor
psraw
call
and
sti
pop
mov
or
sbb
fwait
xlat
movs
rol
lods
jge
adc
cmp
mov
add
push
add
lea
dec
pop
mov
movs
add
dec
popa
call
pusha
sbb
js
movs
push
add
push
es
jmp
xchg
sub
pop
add
jne
sbb
daa
sbb
gs
pushf
inc
lods
pop
outs
xor
shl
xor
mov
adc
test
(bad)
jg
(bad)
cmp
in
or
std
cvtdq2ps
aaa
cmp
jle
inc
sub
cmp
mov
(bad)
jle
add
push
jne
test
sbb
adc
push
ins
out
xor
push
push
int3
jns
sub
sub
test
add
add
test
pop
ror
mov
fscale
add
push
clc
jno
push
add
sbb
inc
adc
ret
pop
test
jp
test
mov
and
xor
dec
adc
inc
lea
cmp
jb
push
into
add
sbb
adc
ffree
cmp
pop
adc
or
cmp
cwde
adc
sbb
inc
sbb
push
nop
sub
mov
and
adc
cld
add
xor
ret
inc
push
sub
mov
pop
hlt
and
and
jb
cmp
fild
rcl
inc
mov
mov
rcl
js
mov
add
inc
add
cmp
je
push
rcl
push
mov
push
lea
bound
xor
(bad)
repz
jne
imul
push
and
jmp
aam
jg
cs
mov
scas
ja
sbb
add
adc
push
call
neg
movs
sub
imul
cmp
jmp
cwde
leave
mov
lods
aam
push
enter
(bad)
(bad)
pop
adc
rol
div
leave
adc
cmp
xor
jno
jne
repz
leave
push
ror
xor
ds
inc
sbb
inc
stc
sbb
mov
jl
popf
xor
dec
add
cmp
or
(bad)
retf
add
adc
ret
(bad)
cld
dec
ss
inc
pop
xor
push
adc
inc
mov
dec
mov
xchg
in
xchg
retf
gs
aaa
movs
add
sub
test
aas
add
adc
push
dec
or
push
lods
lods
les
ss
push
pop
fwait
or
dec
push
icebp
xchg
jnp
iret
jnp
js
add
jnp
adc
and
mov
aam
push
push
bound
aaa
push
enter
or
cvtps2pi
push
push
imul
sub
add
lods
inc
adc
cmps
pop
pop
pop
test
mov
inc
or
sti
int3
pop
lods
test
sub
loopne
ret
push
mov
les
adc
movs
sbb
cmps
retf
into
sbb
neg
push
push
xchg
mov
adc
add
push
sahf
or
in
adc
sbb
add
mov
xchg
and
or
pop
mov
xor
push
pop
sub
arpl
fcmovbe
fdiv
jb
xchg
je
sbb
es
fisttp
sbb
adc
add
push
add
add
xor
mov
aaa
pop
sbb
xchg
aaa
(bad)
jo
mov
addr16
inc
dec
mov
inc
imul
(bad)
jge
push
push
jp
add
adc
mov
in
sti
jecxz
xchg
cdq
loope
pop
icebp
clc
repnz
les
mov
or
pop
or
cmp
je
xor
pop
pop
test
jge
add
test
push
push
mov
sub
xor
push
sub
dec
jno
push
mov
mov
push
push
pop
test
mov
(bad)
lds
pop
pop
mov
adc
jmp
call
movs
test
ret
inc
nop
arpl
adc
jnp
add
inc
xor
xchg
xor
sub
and
and
aas
pushf
std
push
sbb
cmp
jne
fcmovu
push
mov
and
xor
inc
jmp
ss
jne
retf
xor
xchg
ds
iret
inc
xchg
or
out
mov
into
outs
aaa
les
cmp
je
pop
cmp
shl
mov
sub
test
js
jne
sub
adc
aas
push
test
cmp
cmp
jne
lock
in
fdiv
add
cmp
pop
fild
jg
cmp
jne
mov
adc
out
add
sub
and
fstp
dec
cmp
fadd
pop
add
(bad)
xor
adc
mov
inc
pop
mov
sub
adc
jle
js
dec
jl
jg
ds
jne
ja
aam
cmp
pop
(bad)
sbb
cmp
sbb
not
test
mov
and
or
adc
fs
aam
or
xchg
dec
mov
dec
clc
cmp
mov
and
outs
xchg
sub
int
sbb
and
xchg
or
inc
pop
push
ins
nop
push
push
jmp
pop
jo
loopne
imul
dec
dec
dec
call
dec
movs
xor
push
sbb
cmp
lock
sahf
add
adc
mov
and
fild
mov
xchg
mov
pop
enter
lock
jns
jns
ret
mov
stc
jne
shr
sbb
dec
adc
adc
and
ins
dec
out
push
ja
xchg
xor
xchg
test
push
je
bound
push
(bad)
jne
and
or
std
xor
bound
adc
ss
pop
addr16
leave
adc
or
mov
mov
jmp
cmp
jnp
ins
(bad)
cmc
or
int3
mov
add
mov
loop
push
dec
into
dec
lds
or
cmp
add
pop
xchg
dec
test
mov
adc
and
mov
sahf
or
pop
pop
sub
mov
aad
call
ss
sub
push
dec
pushf
clc
sbb
je
jnp
imul
pop
inc
sub
or
cmp
shr
cmp
xor
cwde
dec
js
mov
cmp
(bad)
add
mov
or
in
fiadd
mov
adc
mov
sub
sub
or
js
xchg
fmul
mov
adc
fcmovnu
ss
shl
cmc
ret
aas
enter
cmp
mov
pop
adc
jmp
(bad)
adc
mov
(bad)
pop
les
in
out
adc
xor
push
mov
imul
xchg
mov
mov
add
rol
dec
jno
(bad)
pop
psllw
js
arpl
xchg
jns
mov
jmp
ret
sub
jo
aas
pop
xor
or
or
sar
in
push
ds
mov
mov
rol
push
push
adc
sub
inc
int3
pop
mov
lock
mov
xor
popa
popa
adc
cmps
movs
shr
ret
jg
cmp
je
aam
shr
imul
jno
jno
jl
inc
jl
sbb
(bad)
mov
sub
cmp
jae
sbb
out
inc
mov
pop
sbb
adc
icebp
mov
outs
es
cmps
jmp
mov
cmp
mov
sahf
lea
inc
cmc
arpl
jmp
push
lahf
ret
adc
push
adc
rol
push
pushf
jo
push
push
cld
test
mov
mov
mov
enter
jmp
pop
out
or
sub
rol
inc
mov
or
jbe
mov
adc
aaa
push
adc
sub
aas
sub
ret
in
push
lods
call
dec
push
push
pop
add
sub
pusha
retf
sahf
xchg
add
lods
pop
loopne
push
fisub
or
repnz
xor
cmp
adc
jmp
ja
pop
lock
loopne
fisub
loopne
dec
int3
lock
mov
push
adc
pop
in
lock
mov
push
jp
xchg
jne
push
push
clc
shl
mov
xchg
push
push
popa
mov
xor
outs
les
or
add
in
push
fisttp
push
imul
push
or
es
(bad)
sbb
dec
xor
xor
adc
sub
mov
mov
(bad)
and
pusha
add
ins
enter
inc
pop
clc
inc
jb
pop
(bad)
aaa
test
add
fistp
or
bound
popa
inc
inc
pop
or
adc
in
dec
out
or
and
inc
imul
cmc
lahf
pop
adc
xchg
and
sub
movs
dec
pop
jmp
test
js
mov
hlt
and
fwait
mov
adc
into
test
data16
retf
imul
mov
ret
retf
push
scas
mov
rcr
add
jecxz
xor
and
outs
stc
and
mov
and
sbb
inc
jecxz
sbb
out
push
push
in
ja
in
mov
add
adc
jbe
push
mov
xor
js
push
sbb
sub
mov
add
jo
stos
adc
cmc
sbb
fdiv
stos
sbb
jecxz
mov
(bad)
and
cs
adc
add
jle
push
jmp
xchg
jmp
jl
je
data16
push
push
or
cs
push
sbb
popa
ret
dec
mov
jmp
mov
fist
xor
cmp
push
aad
sbb
push
rol
lods
sub
sub
sub
push
jmp
es
ss
add
pop
cld
mul
cmp
cmp
inc
sbb
cmp
inc
inc
jo
pop
ss
(bad)
(bad)
cdq
(bad)
test
pop
cmp
or
pop
mov
add
push
pop
loopne
rcl
mov
adc
lods
pop
push
adc
or
pop
sti
or
jle
mov
adc
and
bound
add
das
std
scas
xor
mov
or
push
inc
aas
push
rol
push
inc
pop
mov
popa
push
pop
adc
inc
sbb
push
cmps
ds
jl
jne
sub
dec
mov
scas
inc
lds
scas
or
cld
movs
push
sbb
jmp
movs
imul
test
add
mov
pop
xchg
inc
push
pop
or
add
adc
or
popf
lods
pop
cmps
shl
push
push
sbb
retf
mov
dec
jp
jl
dec
xchg
inc
mov
ret
mov
test
jbe
or
jne
test
xor
ins
shr
cmp
jb
repnz
dec
sbb
cld
fidivr
cmc
bound
(bad)
ret
popa
or
jmp
xchg
jge
push
inc
cmp
mov
mov
adc
add
cmp
iret
test
mov
xor
push
shr
nop
sub
jne
imul
fld
test
lock
inc
fcmovbe
iret
aas
sub
mov
or
and
dec
jle
js
std
inc
bound
int
andnps
or
push
sbb
jge
jge
lea
scas
adc
cmp
mov
mov
cs
jl
cmp
lock
pop
les
lods
ds
inc
cs
or
xchg
inc
cs
test
cmp
xchg
lods
call
mov
test
lea
cmp
add
mov
inc
lahf
xchg
or
push
dec
xchg
ret
jge
push
scas
es
popf
(bad)
rol
ins
popf
loop
int3
rcr
js
add
stc
call
rol
add
inc
push
mov
out
int3
inc
jmp
jg
fst
sbb
or
dec
pop
aas
xor
add
add
cdq
inc
or
test
xchg
push
jg
mov
xor
lods
std
xchg
int
push
or
std
or
fsub
daa
mov
jnp
add
push
xchg
movs
imul
push
js
sar
pop
ins
pop
mov
xor
fsub
test
pop
push
mov
pop
les
xchg
aad
mov
adc
vmwrite
inc
xor
push
stos
call
in
adc
jno
stos
lods
jns
inc
mov
scas
or
pusha
out
cli
js
xchg
mov
cdq
icebp
dec
sub
inc
push
mov
pop
das
mov
lods
jp
shl
rcl
cs
das
add
and
test
jb
pop
test
xchg
sub
or
and
inc
cmp
repnz
das
jg
push
pop
and
mov
inc
scas
nop
mov
enter
xor
dec
lods
movs
inc
pop
movs
in
mov
bnd
jo
arpl
xor
mov
xor
imul
jl
and
sbb
jmp
sbb
inc
dec
inc
add
setp
pop
or
psadbw
adc
jecxz
in
and
test
dec
push
in
movs
and
nop
or
sub
sbb
mov
shr
push
inc
mov
test
fmul
cmp
fadd
mov
clc
jmp
mov
pushf
dec
test
add
popa
sub
test
movs
mov
leave
jae
inc
ror
lods
and
mov
sub
and
and
fidiv
and
push
add
sbb
mov
pop
inc
je
mov
dec
test
test
and
mov
jle
pop
cdq
xchg
stos
pusha
rcl
addr16
mov
mov
fbstp
pop
mov
js
push
ss
ss
mov
add
jg
mov
mov
push
test
adc
add
test
lods
loope
mov
psubusb
sti
or
inc
stc
sub
rol
push
add
mov
mov
and
xchg
add
sbb
inc
iret
adc
sub
or
pop
fs
sub
mov
(bad)
(bad)
call
jmp
pop
mov
test
les
mov
dec
fdiv
rcr
aad
std
retf
push
lods
std
das
mov
nop
xor
add
mov
cmps
push
cwde
mov
push
pop
enter
es
cmps
popa
scas
pushf
daa
pop
push
mov
sub
enter
jmp
loope
lock
repz
test
je
popf
mov
call
(bad)
push
int3
or
imul
adc
mov
int
jo
jmp
or
jne
sahf
hlt
or
cld
dec
sbb
int
mov
or
push
jo
sub
sbb
jge
scas
mov
sahf
jecxz
les
xchg
add
retf
inc
ja
ds
add
out
sbb
hlt
jl
stc
hlt
dec
push
sub
xor
mov
push
sub
cmc
mov
and
pop
and
iret
loopne
test
lock
xor
or
adc
inc
or
xor
add
or
adc
push
test
jl
mov
push
and
xor
ins
xor
pop
adc
lahf
shl
outs
fadd
adc
sub
pusha
xor
and
xchg
sub
jmp
inc
int3
add
(bad)
aas
jg
and
aaa
sbb
scas
pop
jp
cmp
sbb
hlt
shr
int
cmps
pop
push
sbb
in
int
nop
out
int3
in
xor
repnz
lds
(bad)
(bad)
call
or
and
or
adc
rol
mov
add
push
paddb
in
dec
fmul
or
sar
push
mov
lods
shr
sub
jg
sub
adc
cmp
mov
cmp
adc
inc
rol
rcr
push
adc
shl
push
nop
clc
and
pop
fld
pop
(bad)
inc
clc
jg
inc
hlt
adc
pop
xor
das
clc
ss
jle
lods
movzx
shl
push
std
pop
adc
ret
rep
adc
data16
inc
or
xor
hlt
and
mov
cs
xor
push
adc
movs
shl
push
sar
xchg
add
popf
add
sub
sub
and
retf
sub
dec
pop
loopne
inc
dec
ja
add
jne
pop
sub
dec
movs
pop
or
outs
or
add
adc
mov
adc
cld
pop
and
xor
xor
add
movups
push
imul
fcom
xor
push
and
and
aam
fdiv
push
lock
pop
push
mov
pop
or
push
mov
xor
and
dec
ficom
add
and
jmp
sbb
xor
push
add
add
shr
inc
call
mov
rcr
call
xchg
sub
out
inc
retf
mov
xlat
add
inc
sbb
in
test
mov
and
add
ja
add
es
push
add
test
jne
mov
mov
xor
dec
mov
les
xor
xor
enter
mov
das
add
xor
cld
enter
dec
inc
xchg
loop
dec
pop
add
pop
jle
inc
test
mov
xor
mov
inc
inc
hlt
std
ins
and
mov
test
add
dec
clc
dec
clc
mov
cmp
jl
mov
mov
jmp
push
mov
inc
jb
xor
inc
jmp
cmc
or
pop
cmps
push
sub
mov
aas
les
sub
cmps
jae
fisubr
jns
pop
out
add
retf
or
inc
and
or
jo
and
jns
add
lahf
test
int3
mov
or
jg
jae
aam
mov
movs
fdivr
cld
inc
call
enter
mov
push
rcr
sbb
or
add
inc
add
push
repnz
and
adc
nop
adc
shl
xchg
outs
mov
or
or
push
cli
icebp
ds
test
push
push
xlat
adc
jns
or
push
inc
sub
xchg
or
jns
in
adc
or
cmp
adc
adc
(bad)
out
pop
push
(bad)
adc
not
pop
push
stc
inc
push
sub
lods
into
rcl
or
nop
jb
mov
inc
xchg
fcom
xchg
imul
leave
sbb
push
adc
mov
rcr
jl
lea
imul
push
adc
cwde
popa
sbb
cmp
(bad)
pop
enter
rcl
add
pushf
jb
xor
pushf
das
inc
and
adc
xchg
push
nop
or
xchg
xchg
cmp
sub
cwde
js
xor
sahf
cmps
(bad)
jle
(bad)
push
push
scas
pusha
ins
test
push
cwde
dec
or
inc
cwde
cmp
cmp
xlat
clc
and
or
push
mov
and
shr
(bad)
fimul
in
movs
into
adc
nop
and
and
xchg
push
lods
enter
lods
lods
xchg
stos
push
dec
pop
cmp
inc
inc
or
loopne
xor
jmp
aaa
lock
das
idiv
push
xchg
and
cmp
adc
aas
nop
and
popa
inc
idiv
jo
add
fs
and
neg
add
pop
and
nop
sub
cmp
ds
fs
and
add
and
adc
push
and
xchg
fs
cmp
fs
or
pushf
adc
xor
bnd
daa
add
xchg
push
push
nop
ins
sub
xchg
ds
nop
inc
push
inc
cwde
sub
add
or
retf
movs
nop
or
nop
movs
movs
je
xor
sub
inc
push
outs
lock
push
sar
fisubr
xchg
fs
push
and
sub
dec
out
int3
stos
movs
jb
lods
push
push
lods
lods
int3
dec
and
dec
mov
sbb
xor
inc
es
cmp
adc
div
clc
es
adc
dec
mov
sub
sbb
repz
test
push
das
inc
cmps
dec
sbb
loopne
call
xchg
xchg
lea
inc
inc
adc
jg
cmp
imul
jl
je
cmp
mov
leave
mov
and
les
out
sub
mov
iret
outs
in
je
rcr
test
inc
inc
xor
je
test
pop
xor
pop
inc
call
push
inc
iret
add
and
xor
daa
nop
inc
outs
jmp
mov
push
imul
push
jmp
hlt
shl
mov
movs
mov
pop
mov
scas
inc
xor
sub
jmp
xor
push
dec
cmps
aaa
in
or
or
xor
xchg
or
adc
and
repz
jmp
xor
pop
adc
outs
inc
mov
or
pop
stc
add
(bad)
mov
dec
stc
cld
(bad)
dec
jno
movs
and
mov
sbb
pop
sub
cmp
xor
adc
call
jno
push
scas
xlat
test
data16
std
push
add
add
and
adc
stos
in
adc
sub
cmps
push
sbb
push
inc
fdivr
in
adc
push
xor
push
fsub
in
and
adc
retf
inc
or
jno
int3
pop
jb
nop
cmp
cmp
xchg
xchg
retf
(bad)
fdivr
push
bound
push
aas
push
mov
cmp
cmp
pop
push
data16
xor
ss
push
cmp
push
add
enter
sbb
shl
or
add
fld
ret
adc
mov
or
lea
inc
and
icebp
sub
out
std
push
jo
and
das
sbb
aam
out
add
jmp
repnz
xor
jge
call
hlt
ja
mov
lds
call
and
jg
or
popf
push
in
dec
or
out
mov
out
pop
sbb
call
xchg
ror
cmp
jb
dec
or
nop
sub
dec
cwde
(bad)
pusha
jecxz
imul
fcomp
jne
icebp
and
shr
and
sub
ret
xor
jne
or
and
adc
lock
and
outs
arpl
xchg
sbb
aam
and
xchg
mov
or
dec
push
dec
inc
xor
xor
loopne
pop
adc
mov
xchg
jnp
enter
call
add
adc
mov
and
lahf
fnstcw
shr
call
lds
aas
pop
add
adc
push
or
into
xor
jne
sub
in
mov
jbe
int3
stos
sub
retf
sbb
iret
pusha
xchg
jno
sbb
sbb
dec
(bad)
push
mov
imul
inc
jo
mov
fs
adc
jb
xor
adc
mov
xchg
mov
rcl
sbb
int
dec
and
fcomp
scas
sbb
mov
test
rcl
inc
(bad)
push
lock
popa
ss
mov
sub
pushf
mov
jns
call
(bad)
lds
sub
mov
xchg
movnti
rcr
adc
mov
js
xor
sub
push
sbb
fcom
adc
xchg
mov
ss
outs
and
fcom
cmp
mov
aas
in
mov
push
sar
and
cld
mov
inc
jecxz
iret
and
mov
ins
or
loopne
loope
add
adc
dec
mov
add
or
and
cmp
jo
cmp
xchg
(bad)
jo
jmp
mov
leave
pop
gs
xor
loopne
sbb
sbb
cmp
sbb
outs
sub
mov
das
push
dec
inc
je
bound
xchg
test
mov
js
mov
repnz
shr
dec
add
js
sub
es
adc
mov
in
mov
jp
cs
shl
inc
pushf
jne
push
sbb
mov
call
mov
pop
and
or
adc
jno
xchg
xchg
xor
repnz
adc
cmp
cli
push
in
retf
add
(bad)
mov
and
sbb
mov
(bad)
and
icebp
lea
bound
push
inc
fnsave
mov
add
add
test
hlt
pop
jmp
aam
add
or
(bad)
(bad)
nop
mov
(bad)
push
pusha
add
jne
add
cwde
push
rol
and
rcr
pop
adc
inc
icebp
shl
jge
add
xor
dec
pushf
nop
idiv
jns
and
test
and
gs
lods
xlat
pop
in
es
cmps
mov
jmp
nop
mov
xchg
or
scas
inc
push
adc
(bad)
jmp
inc
les
cmp
mov
cmp
lods
lea
mov
jae
push
sub
mov
gs
mov
movq
dec
mov
push
(bad)
lea
js
icebp
lds
test
and
dec
push
loopne
cmps
lea
jmp
pop
push
xchg
rol
or
inc
xor
push
test
aad
aad
sub
jne
jecxz
pop
aad
dec
mov
push
dec
adc
add
push
movs
adc
add
inc
mov
adc
daa
add
lahf
adc
adc
sbb
repz
dec
outs
or
mov
or
push
nop
and
or
or
or
outs
add
jl
not
mov
inc
pop
sbb
jmp
sbb
dec
mov
sbb
add
pusha
sub
imul
dec
lea
leave
dec
add
test
std
icebp
push
mov
or
mov
out
and
mov
jmp
fsubr
mov
sbb
ja
sahf
inc
or
cmp
sti
es
or
and
inc
sub
(bad)
xchg
retf
and
xchg
jbe
xchg
sbb
xor
sbb
popf
fild
sub
cwde
or
dec
sub
mov
and
xor
sub
push
sub
mov
fdiv
dec
jle
sbb
pop
push
push
test
imul
xchg
and
cmp
push
int3
add
inc
jnp
ret
enter
mov
pop
ja
and
push
jne
lea
dec
jmp
mov
call
add
sahf
add
outs
or
test
sbb
pusha
mov
aam
js
in
jl
mov
retf
pop
or
cmps
lods
inc
sub
sub
mov
or
cmp
and
push
and
cmp
pop
adc
psrlw
rcr
xor
nop
add
xor
xchg
add
push
and
pop
lods
or
les
mov
adc
fmul
cli
fnop
push
mov
dec
int
pop
adc
bound
or
gs
fistp
push
ins
shr
jo
jno
jae
enter
adc
int3
jns
inc
inc
and
inc
inc
fisttp
dec
dec
and
dec
mul
lock
dec
mov
push
or
outs
mov
pop
pop
call
in
jge
pop
pop
hlt
xor
out
inc
xor
push
push
xchg
jae
dec
adc
jae
mov
shl
pusha
or
movs
es
jmp
fadd
ja
retf
or
lods
call
jb
xchg
pop
push
aad
repnz
or
mov
inc
cmp
jb
mov
xchg
push
pop
inc
cli
or
mul
clc
call
adc
mov
jmp
inc
mov
push
mov
test
pop
push
test
xchg
inc
push
or
enter
add
inc
xchg
pop
test
xor
(bad)
loope
sbb
out
push
push
into
and
dec
xor
fidivr
xor
jbe
fstp
adc
adc
cmps
jg
xor
shl
out
mov
xchg
ss
inc
enter
fld
pop
(bad)
fild
push
test
popf
lea
inc
sar
jmp
fstp
clc
push
adc
ror
cwde
inc
or
push
iret
dec
inc
shl
inc
adc
mov
loopne
add
cmp
and
(bad)
and
(bad)
enter
stos
pushf
(bad)
mov
enter
je
pusha
or
or
ja
fs
cmp
ss
adc
jb
jne
data16
sub
movs
movs
cmc
test
je
in
popf
inc
add
xor
fldcw
xlat
push
mov
sar
pop
dec
add
adc
adc
push
popf
dec
cmp
lock
cmps
sub
in
lea
mov
test
push
adc
out
out
stos
retf
dec
ins
dec
add
mov
add
mov
push
fadd
sub
iret
dec
rcr
wrmsr
pop
mov
and
and
pop
push
add
movs
dec
stc
push
push
adc
lea
xchg
push
and
pop
and
or
mov
out
add
push
imul
push
loop
loop
leave
sbb
test
push
bound
cwde
inc
push
pop
ins
jp
push
sub
adc
or
rcl
and
les
ret
fcom
div
lods
aad
mov
jne
adc
std
jmp
inc
in
lds
ins
ds
xchg
or
das
mov
enter
imul
push
mov
pop
movs
cmp
inc
adc
test
inc
or
stos
popf
and
xchg
inc
inc
xchg
rcr
cmps
in
jno
pusha
mov
aam
ror
dec
dec
inc
(bad)
ror
out
pop
ror
inc
test
pop
fisub
mov
pop
push
lea
jo
lock
or
mov
push
(bad)
(bad)
mov
dec
mov
dec
sbb
xor
cmc
cmps
sar
sbb
out
xchg
mov
pop
mov
jbe
xchg
dec
cmp
adc
add
inc
and
xor
pop
mov
inc
adc
xor
push
push
push
push
inc
xchg
xchg
jno
jns
add
push
xchg
jp
sbb
jne
or
and
jmp
sub
in
imul
jbe
clc
cld
xchg
pop
mov
(bad)
mov
cmp
test
loopne
push
es
outs
fild
dec
cmp
and
loope
mov
and
mov
imul
push
add
inc
jae
test
push
ret
ja
jle
cmp
adc
push
ss
pop
or
mov
test
or
jg
loope
sbb
movs
nop
push
jno
fs
inc
and
(bad)
cld
in
add
push
or
movs
scas
inc
inc
pop
stc
and
movs
push
xchg
std
jmp
mov
daa
mov
mov
call
add
ror
movs
and
imul
and
push
cmp
mov
inc
sbb
jne
jnp
pop
cmps
out
mov
aaa
xor
nop
mov
and
test
mov
dec
dec
popa
sbb
or
rcr
lods
or
dec
xchg
mov
je
sbb
outs
pop
imul
lods
fild
xchg
mov
add
mov
or
sbb
mov
gs
push
gs
xchg
cmpps
add
push
rol
jecxz
es
leave
push
xor
and
jge
lods
inc
or
mov
sub
and
sbb
and
push
shl
enter
pop
inc
(bad)
(bad)
cmp
and
mov
add
test
test
cmp
push
je
ror
push
sub
ja
or
push
sub
hlt
rol
mov
add
sbb
fnstcw
xchg
or
sbb
xchg
dec
inc
adc
je
rcr
mov
mov
mov
mov
xor
shr
dec
(bad)
xor
cmc
sub
xor
xchg
cmc
outs
sub
cmp
and
sub
dec
call
and
pop
sti
xchg
cmp
dec
lock
jmp
or
adc
movs
sub
jns
and
std
jge
add
lea
or
cmp
xchg
and
xchg
mov
dec
adc
mov
mov
add
xchg
xor
mov
mov
neg
sub
dec
add
out
jo
into
adc
ins
lds
retf
fst
inc
mov
mov
call
mov
mov
sbb
or
xchg
fidivr
mov
jmp
push
or
(bad)
(bad)
dec
cmp
jmp
js
stos
dec
cmp
pop
loopne
push
mov
push
sbb
mov
xchg
cmps
pop
addr16
xor
dec
bound
clc
cld
cmp
in
adc
xor
or
inc
jg
leave
rol
push
sbb
stos
das
add
popf
ret
push
xor
fbld
and
je
push
mov
popf
adc
test
jp
pop
inc
mov
inc
js
xchg
dec
test
xchg
or
imul
mov
int3
test
adc
cmp
mov
mov
cmps
loope
jb
mov
es
mov
or
and
mov
pop
mov
xor
inc
aad
cmc
push
pop
mov
dec
call
test
retf
pop
cmp
call
aas
imul
fs
cmp
add
movs
pop
daa
cmp
mov
dec
xchg
addr16
cdq
mov
jb
cmp
push
cmp
mov
xor
mov
nop
dec
add
jno
cli
inc
lea
xchg
mov
aaa
int3
and
add
cmps
cmp
push
fwait
xor
jne
add
movs
in
dec
std
mov
stc
jge
lea
push
xor
shr
and
rcl
fmul
inc
cmp
std
adc
sub
dec
or
inc
pop
mov
pop
and
cmp
xor
mov
pop
loope
dec
xor
xlat
popa
add
ins
test
jo
add
lahf
xchg
inc
xor
call
in
mov
in
out
add
jp
or
lds
nop
and
mov
adc
shr
and
or
shl
es
mov
cmp
push
mov
add
push
cmp
loopne
fisttp
cmp
inc
leave
dec
cmp
mov
leave
xchg
shl
and
stc
fldcw
retf
out
fwait
add
mov
dec
sbb
and
in
xor
inc
and
dec
jno
fs
fwait
xchg
sub
dec
mov
cmps
ss
dec
pop
dec
enter
shl
test
xchg
in
adc
ss
add
adc
push
xchg
mov
enter
adc
jb
(bad)
xchg
out
call
mov
cmp
je
inc
mov
mov
scas
and
jge
add
or
pop
daa
nop
xchg
je
vmovntps
pusha
call
add
stc
nop
add
add
or
mov
enter
stos
xor
int3
loopne
arpl
adc
push
xchg
mov
in
add
push
inc
adc
dec
dec
ret
xor
and
sahf
int
push
push
movs
sqrtps
sbb
adc
xor
and
mov
inc
mov
ffree
add
or
loope
xchg
push
je
push
lahf
add
addr16
fmul
dec
repz
xchg
add
or
adc
sbb
push
je
or
lock
(bad)
mov
mov
jns
jecxz
call
dec
cmp
les
sbb
stos
ret
imul
addr16
call
push
and
mov
pushf
or
fwait
test
ds
mov
add
mov
sbb
add
dec
nop
outs
std
leave
call
or
sub
rol
jmp
add
jg
dec
adc
xor
(bad)
cmp
dec
test
sbb
cmp
or
adc
xor
add
or
fwait
push
sbb
mov
pop
test
sar
xchg
adc
lds
hlt
xor
test
xchg
add
mov
jne
add
add
cmovo
in
add
loope
imul
pop
xlat
pusha
test
shl
or
iret
inc
lock
dec
inc
sub
sbb
stos
xor
cmps
ror
adc
lahf
or
sahf
popa
retf
bound
scas
jne
movs
mov
jge
dec
add
call
jecxz
xor
pop
push
or
dec
cs
cwde
xor
add
push
shl
push
loopne
mov
push
movs
fcomp
test
clc
pop
mov
jl
push
xor
xlat
dec
pop
xchg
out
ins
push
mov
data16
sub
ror
and
xor
jno
inc
add
adc
test
jl
jg
clc
(bad)
sub
inc
cmp
and
push
add
imul
es
(bad)
dec
fsub
and
or
nop
les
dec
pop
inc
jo
add
movs
push
loopne
shr
call
fistp
jno
add
and
mov
dec
cmps
xchg
mov
or
fmul
jo
or
add
cmp
push
pop
pop
hlt
ins
popa
sub
jne
lock
shl
add
bnd
cmps
or
int3
pop
inc
inc
sub
push
ror
fwait
shl
sbb
out
int3
jmp
rol
cwde
jmp
js
sub
mov
add
sbb
or
push
push
sbb
xor
test
hlt
iret
addr16
pop
xchg
pop
push
stos
jmp
lods
pop
sub
xlat
cmps
xchg
ret
cdq
dec
retf
ret
xchg
or
rol
mov
push
into
hlt
pop
adc
jle
add
cs
sub
das
adc
inc
add
ins
push
inc
adc
jne
inc
adc
sbb
lahf
or
push
mov
adc
fwait
sub
push
lock
jae
push
jg
fwait
dec
sar
and
cmp
(bad)
pop
movs
ss
sar
lea
xor
mov
or
inc
inc
or
mov
sbb
(bad)
and
inc
ss
mov
mov
lock
cmp
xchg
mov
fmul
push
push
jle
test
push
cmp
sbb
call
xor
sbb
push
jle
mov
jge
and
mov
or
mov
add
hlt
and
add
je
push
movq
push
xchg
test
(bad)
pop
aas
push
fcom
push
repnz
mov
or
and
loop
jl
mov
mov
mov
pop
dec
push
push
cdq
call
adc
mov
movzx
mov
pop
add
pusha
nop
dec
and
ins
dec
adc
inc
add
loope
sub
jne
add
sub
xor
rcl
repnz
dec
clc
mov
cmp
stos
mov
sbb
stc
sub
ffree
mov
inc
add
mov
jne
(bad)
(bad)
xor
clc
mov
je
cmp
mov
xchg
bound
clc
jg
xor
adc
or
jge
push
out
sub
lea
or
cmps
js
add
add
mov
lock
ja
pop
shl
add
js
pusha
int
xchg
mov
jns
retf
aas
dec
sbb
sub
pop
aam
nop
mov
cmp
jne
add
add
add
in
mov
loopne
or
ret
pop
ret
fidiv
add
sub
jne
or
add
jno
push
push
ins
sahf
out
add
or
dec
add
aaa
lods
sar
fiadd
jnp
es
rcr
dec
sub
add
lods
shr
mov
or
ror
dec
mov
adc
push
adc
jnp
mov
mov
shl
cmp
mov
rol
push
adc
shl
mov
das
mov
rol
sbb
xor
adc
pop
adc
test
pop
mov
(bad)
lock
sub
inc
mov
aas
je
add
aas
dec
adc
(bad)
xor
loope
(bad)
mov
inc
jb
or
jbe
mov
push
test
adc
inc
js
mov
sbb
fimul
loopne
cld
lods
mov
lock
push
pop
cmp
jne
sbb
push
jge
ret
dec
cld
jne
rcr
sbb
fsubr
clc
or
int3
sbb
adc
gs
shl
or
inc
push
mov
cwde
jno
rcl
and
pop
out
or
sbb
call
mov
or
adc
sbb
mul
sub
(bad)
pop
inc
loopne
or
enter
(bad)
icebp
lods
xor
dec
in
fs
push
mov
and
loop
call
mov
xor
fwait
xor
pop
add
or
cs
mov
cs
adc
add
cdq
or
call
sub
cld
movs
data16
add
fs
jno
push
mov
adc
fmul
sub
shl
jle
ret
les
mov
mov
std
das
hlt
imul
sbb
not
inc
and
jg
dec
int3
xor
cmp
sub
lahf
pushf
cmp
lds
xchg
cmp
(bad)
pop
add
push
dec
pop
xchg
test
jb
pop
mov
lahf
out
daa
jo
push
rcl
add
sbb
mov
jbe
push
mov
arpl
or
retf
mov
push
dec
push
adc
jnp
sar
add
adc
or
mov
xchg
sbb
jne
push
test
(bad)
cli
add
adc
outs
sbb
mov
into
sbb
add
or
or
pushf
jecxz
xor
xchg
lock
mov
push
xchg
imul
jno
dec
lods
mov
js
pop
movzx
add
adc
(bad)
iret
adc
xchg
fistp
in
or
and
push
lea
pop
push
push
push
mov
inc
fld
inc
pop
mov
loop
das
imul
pop
inc
ret
es
push
pop
inc
mov
lock
push
sub
int3
pop
retf
or
jg
or
enter
mov
(bad)
xor
cmp
or
cmps
shr
push
inc
inc
inc
adc
int3
push
icebp
fstp
and
dec
mov
push
lea
and
mov
js
add
xor
clc
mov
push
push
jns
in
or
je
xor
xor
mov
and
mov
int3
outs
or
inc
jle
lock
mov
jl
in
push
imul
cmp
in
push
scas
sbb
inc
xor
scas
aaa
test
loopne
inc
mov
jmp
xor
cmps
add
enter
or
add
addr16
and
and
(bad)
sets
(bad)
fbstp
push
xchg
mov
or
or
and
mov
or
add
adc
retf
clc
mov
pop
pop
fcom
adc
dec
fisttp
push
lock
cmc
xor
jmp
ficomp
or
pop
rol
fsubr
daa
popf
dec
and
dec
mov
test
push
sub
push
lods
cmp
or
push
xor
pop
pop
pop
sbb
lock
fwait
clc
add
ficom
jnp
lahf
fs
je
lods
lea
or
push
jmp
(bad)
iret
pop
pop
jo
jb
fistp
and
mov
xor
push
enter
jl
add
daa
in
mov
mov
jl
push
call
add
mov
retf
sub
outs
and
(bad)
pop
push
jl
push
or
sbb
cs
shr
inc
sub
sub
xchg
inc
inc
push
and
sbb
mov
jp
aaa
ret
outs
test
enter
push
push
(bad)
int3
cmp
out
adc
dec
pop
xor
push
mov
or
cli
add
fwait
or
(bad)
ret
pusha
stc
pop
popf
sub
nop
stc
mov
dec
sar
cmp
inc
(bad)
(bad)
cmp
dec
cwde
sti
addr16
cmps
adc
sahf
ffree
inc
out
lea
test
test
mov
xor
pop
cdq
dec
pop
xchg
dec
xchg
adc
test
jmp
fmul
mov
xor
sub
ret
(bad)
or
rcr
adc
sub
ret
movs
sub
push
popf
push
cmp
inc
sahf
cld
add
jmp
fmul
push
ins
mov
dec
xor
and
xor
pop
add
stos
dec
ret
aas
xor
and
xchg
push
adc
pushf
scas
(bad)
mov
ins
cld
push
xchg
add
mov
xchg
push
push
test
xchg
test
adc
js
cmp
pop
jmp
rcl
in
cmp
mov
adc
adc
pop
pop
dec
or
call
add
push
push
mov
and
cdq
(bad)
jne
jae
sbb
les
add
lods
push
scas
add
push
inc
inc
add
fs
cmp
mov
jne
sbb
mov
arpl
pushf
icebp
jo
mov
pop
repz
jge
mov
bound
add
addr16
mov
fs
in
push
(bad)
(bad)
xchg
push
cs
out
add
and
push
or
ret
repnz
inc
call
mov
adc
ret
push
aam
xor
inc
dec
xor
inc
pop
inc
push
push
or
push
sbb
jns
xchg
pop
and
sbb
fcmovne
or
das
mov
mov
or
mov
ficomp
adc
cdq
inc
xor
es
fs
cmp
mov
push
clc
bound
fild
push
out
cwde
out
pushf
call
push
add
xor
jb
cs
cmp
xchg
add
mov
jecxz
or
stos
cli
pop
call
cmps
lea
sub
ja
fnsave
mov
popa
dec
and
stos
push
xor
push
ret
ss
sbb
fsubr
jo
fldcw
shl
lock
sub
inc
sbb
les
hlt
pop
ret
cld
inc
add
es
or
cmp
cmp
and
stc
sub
inc
mov
push
push
in
pushf
push
movs
pusha
or
jo
or
ror
adc
xchg
pop
pop
adc
push
xchg
lds
sub
push
mov
daa
js
pushf
sbb
in
or
mov
call
gs
out
and
add
cmp
lds
sub
into
inc
(bad)
gs
fild
or
dec
push
in
popf
mov
and
push
cmp
imul
and
inc
jb
push
mov
rcl
and
leave
dec
jae
or
fs
and
fmul
and
dec
sahf
push
es
fs
daa
in
inc
sub
sbb
sub
xor
jb
xor
sub
int
pushf
sbb
dec
inc
int3
mov
and
daa
adc
sub
pop
stos
push
sbb
cmp
test
loopne
test
xchg
dec
cmp
mov
leave
and
sbb
xor
and
or
and
sub
add
lock
xlat
and
xor
(bad)
sbb
fwait
in
xor
inc
imul
xchg
xor
sub
adc
js
xor
shl
sbb
push
test
inc
out
dec
fidivr
xor
push
xchg
and
adc
cmp
sbb
adc
jno
arpl
dec
sub
ds
or
mov
js
rcl
loopne
loopne
or
sbb
add
fs
inc
push
cmp
add
adc
inc
xor
lock
sbb
push
pop
cmp
cmp
mov
sub
popa
cmp
fwait
pop
mov
popf
gs
rol
jns
pop
mov
add
adc
add
or
into
push
inc
call
cmp
lea
push
sbb
pop
cmp
aam
inc
imul
or
ins
push
xchg
inc
jb
jmp
jmp
sar
test
add
push
xchg
scas
cmp
je
xchg
and
xor
xor
mov
iret
ds
inc
ret
jo
mov
mov
dec
arpl
mov
xchg
es
xor
mov
push
pop
add
xor
inc
call
(bad)
jb
dec
jg
ins
sbb
out
loopne
daa
test
mov
mov
mov
adc
sub
repnz
inc
pusha
fnstsw
adc
movs
xor
push
pop
and
cs
not
pop
jmp
pop
bnd
xchg
inc
push
and
shl
and
jo
mov
dec
hlt
sar
icebp
sbb
mov
sbb
es
aam
data16
lods
xchg
fld
mov
jns
inc
sti
push
sti
xor
test
push
sub
scas
inc
mov
les
push
xlat
jmp
enter
mov
add
pop
shl
ins
popf
cli
pusha
or
push
jnp
cmp
or
dec
mov
cmp
jl
push
int
xor
loope
ret
sbb
aam
sub
in
clc
or
push
sub
xor
add
push
jae
inc
xchg
dec
hlt
je
rol
fwait
pop
ds
sti
push
imul
and
or
dec
push
or
jge
xor
push
movs
mov
add
outs
inc
add
bt
jnp
ins
je
or
or
jmp
sub
and
out
retf
add
pusha
cld
xchg
xor
jmp
cmp
je
or
add
test
and
jb
ds
jg
bound
pop
add
pop
mov
add
mov
ror
mov
lea
xchg
mov
out
lods
add
in
add
comiss
arpl
shl
and
inc
sar
fbstp
sub
(bad)
out
sbb
out
pop
jmp
lods
fmul
mov
cmp
jl
dec
adc
inc
adc
push
out
enter
sti
sub
push
sti
push
push
dec
push
test
push
sub
ja
cmp
loopne
cmp
lea
test
xor
push
sbb
fiadd
push
cmp
sahf
je
daa
xchg
inc
push
xlat
push
mov
into
(bad)
dec
add
cmc
int3
lea
cs
dec
cmp
test
cmp
arpl
xchg
jl
cvtpi2ps
test
jecxz
mov
jno
out
test
xchg
(bad)
pop
add
fadd
cmp
add
mov
hlt
fwait
xor
push
add
adc
inc
loop
gs
or
mov
jmp
mov
sbb
fdiv
jg
cmp
inc
ja
hlt
cmp
ins
and
or
pop
add
mov
push
or
or
cmp
sbb
jp
cmp
pop
inc
pushf
xor
push
les
jne
push
fidivr
movs
cmp
push
cs
sbb
cdq
add
loope
inc
jecxz
pop
cmp
dec
pop
and
movs
sub
inc
push
rol
xchg
pop
sbb
ret
xor
js
jno
push
(bad)
jb
loop
jno
dec
push
mov
or
inc
cmp
jbe
cmps
shl
inc
or
idiv
ret
shr
cmp
sbb
outs
rcl
cwde
mov
cmp
gs
in
repnz
cli
adc
xchg
mov
pop
add
jno
icebp
cmp
adc
mov
lods
je
ins
jo
xor
xchg
or
mov
call
pop
mov
stos
jmp
mov
sub
add
test
rcl
adc
pop
add
cmp
xchg
xchg
and
push
ja
cmp
adc
push
dec
add
enter
ficom
fnstsw
fucomi
loopne
mov
test
cld
push
aad
addr16
nop
cmc
repz
(bad)
push
in
xchg
add
push
fdiv
ret
mov
sub
clc
mov
sub
or
scas
push
cmp
and
mov
mov
cmp
es
mov
push
jne
mov
mov
xor
add
sbb
mov
mov
jno
icebp
inc
and
add
xor
pop
or
loop
cmp
es
in
js
jb
cmp
clc
add
jmp
add
mov
inc
mov
mov
test
jmp
inc
and
pop
sbb
shl
(bad)
mov
jg
sbb
pop
(bad)
sbb
or
mov
xor
mov
dec
or
(bad)
call
adc
mov
pop
or
inc
arpl
xor
dec
add
push
test
not
jg
adc
jbe
hlt
inc
mov
pop
mov
push
(bad)
jl
jg
add
inc
mov
(bad)
stos
jl
imul
jae
push
mov
sbb
xchg
push
pop
es
and
mov
rcl
sub
jge
sub
push
add
jmp
(bad)
cmp
sbb
cmp
je
in
pmaxub
add
adc
push
or
clc
or
push
adc
(bad)
xchg
out
mov
nop
xchg
pusha
xchg
push
into
jno
outs
add
mov
jl
dec
and
push
nop
sub
mov
xchg
pop
lock
(bad)
int
int3
rol
xchg
add
rol
sub
dec
add
jo
test
mov
push
add
xor
mov
call
popa
jl
or
xor
pop
test
pop
and
cmp
pop
mov
xchg
jmp
push
jo
jmp
fild
leave
jg
lock
popf
ret
fimul
inc
pusha
int3
mov
hlt
jne
mov
sbb
pop
add
or
aas
inc
mov
or
jnp
push
mov
mov
jmp
sbb
mov
jne
movs
add
inc
inc
adc
xchg
cmps
hlt
daa
add
push
mov
lods
lea
push
adc
fwait
out
mov
dec
sbb
sbb
mov
cmp
push
add
dec
add
push
sub
sub
fisttp
test
aam
and
dec
adc
mov
mov
sbb
and
pop
sub
pop
hlt
push
dec
dec
or
jb
test
enter
std
cwde
mov
daa
adc
add
clc
cmp
jno
pop
push
push
pop
nop
sub
xor
pop
mov
ret
fild
arpl
jo
arpl
cli
mov
test
sbb
jne
in
adc
push
mov
push
xor
(bad)
ja
lea
cmp
jne
mov
mov
mov
das
push
dec
and
push
cmp
fiadd
cmp
ret
(bad)
in
xchg
adc
fadd
jge
les
dec
push
out
ret
adc
ins
or
mov
xor
sub
pushf
into
imul
aas
sub
add
sbb
les
xchg
scas
pop
push
adc
jl
jo
jp
jnp
dec
pop
nop
inc
jno
jl
aas
and
popa
pop
adc
sub
and
shr
dec
dec
jne
xor
sar
nop
(bad)
in
enter
adc
mov
sar
retf
mov
jg
sub
mov
mov
std
or
push
cmp
xor
add
les
inc
sbb
push
test
ret
mov
call
jbe
arpl
popf
add
fwait
mov
ror
pushf
dec
or
push
pusha
mov
dec
adc
lea
mov
add
mov
int3
cdq
xor
mov
call
push
out
fstp
mov
xchg
enter
dec
jne
sub
je
sbb
call
test
es
movs
adc
dec
sbb
add
ret
ss
jge
and
pop
or
sbb
pop
cld
js
icebp
rol
jne
adc
or
inc
rol
je
add
adc
es
ins
jmp
push
mov
mov
xor
sbb
mov
adc
dec
in
nop
aas
(bad)
pop
(bad)
js
ins
sub
es
je
push
mov
(bad)
push
dec
leave
clc
sbb
jbe
and
push
lea
xor
movd
ret
shl
inc
aam
pop
cmp
dec
cmp
push
imul
jge
jne
dec
rol
lods
push
cmps
je
loop
or
or
xor
xor
inc
arpl
ins
adc
fisttp
rol
cmp
int
test
and
push
sbb
leave
add
pop
and
adc
or
jo
sbb
stc
or
sub
in
mov
mov
or
enter
pop
xor
adc
push
pop
mul
mov
cmp
jo
add
enter
inc
inc
mov
mov
dec
inc
adc
inc
mov
sub
add
nop
ror
add
pop
jmp
mov
pop
pop
sti
aam
shl
pop
ds
adc
jmp
lock
xchg
jb
das
test
or
(bad)
dec
xchg
push
call
or
paddb
pusha
pop
push
shr
ins
mov
jne
outs
bound
adc
int3
in
mov
int3
fnsave
add
clc
push
jb
jbe
xchg
jmp
inc
enter
xchg
ss
inc
push
(bad)
pop
and
iret
rcr
fs
add
push
aam
int3
cdq
inc
ret
enter
lods
rcl
push
(bad)
sar
les
jle
cmps
add
sbb
jb
pop
inc
push
jo
mov
movs
call
jne
mov
stos
(bad)
(bad)
cmp
les
outs
adc
add
adc
sub
jnp
bound
xchg
sbb
jo
jne
sub
cli
pop
jle
inc
xchg
dec
push
dec
push
fwait
xor
sub
jg
or
xchg
push
or
lds
pop
push
dec
push
inc
jne
lods
adc
adc
add
push
in
mov
push
mul
inc
jg
add
adc
gs
jbe
sbb
sbb
ror
(bad)
jne
jns
push
imul
adc
sbb
xchg
data16
test
xor
dec
jnp
xor
mov
test
add
movs
ins
inc
lods
cmps
stos
xor
loope
aam
(bad)
add
push
or
icebp
fcmovne
xchg
sbb
pop
ss
leave
pop
mov
or
dec
mov
xor
(bad)
add
mov
add
xor
dec
jb
cmp
xchg
mov
or
cmp
retf
je
push
jle
int
rcr
dec
inc
push
push
adc
sbb
push
adc
retf
lds
cs
add
pop
mov
daa
jmp
in
jno
pop
or
das
sahf
imul
mov
mov
jl
push
or
sar
(bad)
jbe
add
int3
lods
ins
dec
popa
jno
js
push
sbb
jp
and
jl
mov
dec
fiadd
sbb
adc
add
xor
jle
pop
ins
mov
lea
or
aas
jp
clc
das
jge
jecxz
cmp
inc
add
or
mov
pop
fcom
adc
pop
pop
or
sbb
test
mov
xchg
adc
inc
ud0
test
or
test
or
out
or
mov
adc
push
jbe
in
cdq
mov
adc
shl
sbb
ins
(bad)
or
mov
ret
mov
fstp
mov
xor
cmp
or
outs
mov
push
add
or
cmp
(bad)
xor
iret
jae
push
push
jmp
push
cmp
cmp
xchg
inc
imul
mov
push
(bad)
mov
dec
ss
or
or
add
mov
adc
push
sbb
adc
push
(bad)
movsx
push
add
push
jge
mov
mov
movs
lods
lea
jg
adc
push
mov
mov
rcl
cmc
cmp
jae
and
shr
rol
mov
(bad)
sub
dec
add
mov
add
ja
call
add
rcr
pop
push
in
add
push
push
rcr
out
mov
inc
cmp
push
xor
dec
cs
aas
and
or
xor
and
pop
xchg
fsubr
pop
jne
lock
loopne
push
pusha
pop
pop
mov
enter
enter
dec
mov
pushf
dec
add
ror
inc
rcl
push
dec
clc
inc
call
push
je
and
xor
ret
test
add
jg
add
or
push
add
inc
push
test
sbb
pop
test
xor
dec
out
sbb
sbb
jae
push
mov
sub
mov
int
mov
add
push
dec
shl
sbb
or
add
dec
jo
fcmovbe
xor
sub
jo
cld
push
adc
sub
sbb
push
or
sub
mov
add
fs
inc
adc
xor
fcom
lea
lea
push
test
(bad)
cwde
push
cmp
inc
pop
dec
dec
mov
cmp
clc
call
stos
(bad)
and
stos
add
adc
sub
cmp
xchg
pop
mov
add
push
stos
adc
hlt
inc
mov
push
add
pop
jmp
cmp
shl
inc
popf
fsub
je
inc
test
and
cmp
ficomp
pop
inc
mov
sub
shl
icebp
dec
test
xchg
ret
adc
lea
inc
dec
rol
inc
test
cmps
sub
sub
stos
jae
cs
push
add
dec
push
imul
das
inc
ret
loop
dec
dec
cmp
jne
xor
adc
cmp
test
leave
sub
pop
xor
lock
xor
adc
outs
stos
into
ss
and
aaa
pop
sbb
jo
shl
ja
rol
test
dec
fdiv
add
push
sub
pop
cmp
lock
add
add
pop
stos
pop
adc
fidivr
cmp
add
pop
adc
add
add
jl
sub
adc
enter
add
cmp
shr
jae
adc
push
imul
pop
mov
outs
neg
scas
add
cmp
int
jmp
mov
(bad)
adc
mov
pusha
pop
fs
pop
or
sub
jmp
aas
adc
outs
cdq
inc
pushf
mov
movs
pop
cmps
or
mov
pop
adc
xchg
cwde
jbe
pop
or
mov
fist
pop
sub
adc
pop
add
shl
(bad)
cmp
dec
gs
mov
ror
movs
nop
(bad)
daa
inc
and
add
push
mov
jbe
nop
fdivr
and
mov
push
push
inc
dec
arpl
mov
or
add
inc
push
or
mov
call
add
shl
shr
mov
in
arpl
and
add
inc
ins
call
popa
les
in
and
es
sbb
not
lock
(bad)
outs
push
mov
mov
out
retf
add
or
shr
shr
cmp
jbe
add
lea
cmp
jbe
sbb
adc
pop
in
dec
add
jbe
sbb
sbb
push
xchg
nop
push
cmps
add
mov
push
jp
fdiv
adc
mov
fsub
dec
cmc
xor
push
inc
sub
mov
sub
sbb
add
sbb
jp
ror
jne
and
sbb
out
cmps
pop
(bad)
push
push
jp
xchg
xor
fwait
cld
push
mov
push
cmp
pop
fwait
sub
(bad)
pop
mov
mov
(bad)
clc
scas
pop
add
ins
xor
xchg
push
adc
mov
in
inc
repnz
and
jg
fmul
icebp
adc
inc
jge
(bad)
int3
pop
loopne
or
adc
fdivr
dec
sahf
bound
lock
loopne
mov
add
ins
xchg
adc
mov
jne
xchg
fbstp
jne
xlat
hlt
mov
push
pushf
hlt
push
push
mov
mov
xchg
push
sub
shl
(bad)
enter
dec
outs
dec
mov
dec
jne
inc
in
aaa
jne
repnz
jae
mov
les
or
enter
xor
and
jae
mov
outs
test
sbb
js
add
xor
mov
mov
leave
jmp
cmp
shl
xchg
gs
push
dec
sbb
jmp
add
xchg
rcr
sbb
lock
add
lods
sbb
jne
scas
sub
push
pop
in
sbb
(bad)
push
sub
aam
stos
cmps
jg
jo
repnz
inc
dec
shl
dec
xchg
sbb
jo
jo
adc
add
fwait
sub
movs
pop
bound
ins
jle
xchg
or
js
cmp
js
cmp
push
dec
leave
push
and
repnz
push
sub
aaa
push
int3
push
dec
pop
test
mov
adc
or
inc
xchg
inc
into
icebp
push
bound
aaa
add
and
sbb
sbb
xor
into
sar
add
or
ret
mov
add
test
mov
cdq
clc
add
mov
push
mov
fadd
int
mov
mov
pop
pop
or
scas
inc
inc
xchg
or
clc
adc
enter
or
pop
or
pop
and
mov
mov
pop
lea
les
inc
pop
fld
add
pop
sar
adc
dec
loop
cmp
lods
mov
adc
ud1
push
inc
mov
push
call
iret
and
test
inc
(bad)
push
out
ins
push
inc
into
pusha
mov
push
pop
pop
dec
mov
sub
test
jne
sub
pop
adc
or
xor
sar
clc
sar
sub
(bad)
out
jge
sub
push
cs
cmp
jle
jne
jl
test
cld
push
iret
push
dec
fdivr
or
add
sbb
adc
xor
popa
shl
(bad)
mov
int
push
inc
add
scas
inc
lock
int3
cmp
add
and
dec
pop
dec
sahf
mov
adc
sub
mov
cmp
ds
data16
rol
in
push
sbb
les
sbb
cmp
movs
and
fisubr
in
test
fisub
push
stc
sub
and
hlt
arpl
add
sub
and
sub
call
jl
not
push
ror
xchg
xchg
adc
xor
or
pop
loopne
sbb
push
mov
push
fiadd
push
xlat
adc
retf
mov
je
or
fisttp
push
inc
(bad)
arpl
arpl
lea
add
mov
adc
jne
xchg
mov
in
inc
add
inc
test
add
pop
sbb
xchg
adc
sbb
dec
sbb
jne
and
dec
lahf
(bad)
das
jmp
aam
enter
mov
rol
push
dec
push
dec
gs
push
sbb
add
test
xchg
mov
push
sub
lds
lea
int
ror
(bad)
jmp
and
stc
or
mov
jbe
and
lea
pcmpgtb
cmp
jae
ja
mov
sub
sbb
(bad)
and
xchg
xchg
sbb
je
sub
push
ds
test
loopne
cmc
loope
fiadd
jmp
or
mov
xchg
out
lea
dec
xor
les
ret
inc
cwde
xchg
stc
stos
lods
xor
inc
or
hlt
ret
cmp
push
dec
mov
bound
fiadd
hlt
pushf
mov
gs
push
das
add
test
adc
push
iret
and
and
push
in
dec
les
and
dec
xor
mov
xor
movs
(bad)
in
in
dec
xchg
xor
fcomp
leave
fsubr
xchg
mov
push
xor
call
sbb
call
pop
xor
aam
jb
or
or
cmp
sbb
in
in
or
xchg
add
sub
stos
arpl
push
dec
xor
retf
push
aam
aaa
dec
jmp
rcl
cmp
mov
lods
mov
push
adc
sub
ins
inc
and
ret
inc
push
pop
mov
xor
pusha
jmp
mov
xchg
pushf
adc
add
and
dec
xchg
sbb
inc
add
and
(bad)
fs
dec
add
xchg
test
push
sub
lods
pusha
test
xchg
push
or
xor
pop
mov
(bad)
push
ss
cmp
shl
sub
int3
pop
lds
fcom
enter
test
movs
add
retf
in
pop
(bad)
movs
test
mov
xchg
mov
inc
rcl
mov
cmc
mov
push
push
scas
inc
xchg
pushf
movs
icebp
and
push
adc
sbb
std
push
mov
jge
sbb
mov
scas
lahf
jne
sub
ret
cmp
pop
dec
mov
in
inc
and
add
adc
pop
push
mov
sub
pusha
fs
dec
je
mov
in
mov
movs
mov
enter
cs
dec
sub
mov
adc
xchg
retf
sub
inc
movs
jb
in
push
fs
js
mov
mov
and
fdivr
dec
in
loopne
hlt
push
add
mov
and
sbb
cs
inc
push
dec
sub
xchg
retf
jl
nop
xchg
movs
jb
in
test
mov
int3
shl
in
xchg
push
cs
clc
push
or
or
dec
sub
and
xor
dec
pop
mov
ins
jo
cs
cwde
test
sub
xchg
retf
rcl
in
lods
cmp
clc
cld
push
or
adc
push
mov
xor
push
cs
pusha
xchg
dec
sub
in
retf
pushf
lods
mov
rol
lea
push
fcomp
pop
sub
imul
lock
jne
push
xchg
push
imul
inc
xor
push
inc
addr16
sar
xchg
cli
cmp
add
sub
add
mov
movs
cmc
add
push
adc
pop
mov
mov
jmp
xchg
cwde
cwde
add
pop
xchg
sar
outs
cmp
dec
inc
or
sbb
pop
inc
mov
xchg
push
mov
inc
xor
xchg
pop
adc
out
mov
pusha
jmp
push
add
lods
bound
test
fs
cmp
(bad)
call
or
push
nop
add
xchg
or
mov
shl
inc
je
dec
and
adc
xor
(bad)
nop
mov
call
sub
jl
push
pop
and
sub
sti
outs
cmps
enter
leave
and
rcr
adc
dec
sbb
lahf
push
std
movs
and
xor
retf
mov
add
aad
icebp
inc
in
jp
pop
test
daa
xor
lea
xor
imul
push
and
mov
or
push
pop
add
inc
cmp
hlt
pusha
mov
mov
test
jae
(bad)
call
push
mov
and
add
add
sub
or
or
adc
out
es
jo
mov
or
pop
add
xchg
push
pop
pop
pusha
lods
adc
vmaxsd
pusha
jmp
push
loopne
out
inc
inc
adc
rol
loope
call
aad
pop
clc
push
ret
push
pop
imul
data16
add
(bad)
mov
pop
push
lods
add
std
aam
pop
push
enter
adc
cld
(bad)
clc
div
sar
inc
mov
xor
jl
cwde
add
mov
push
pop
test
retf
fcom
movs
ins
xchg
std
in
fild
add
add
pop
jne
xor
fcomp
adc
cmps
add
scas
push
js
fbstp
out
mov
int
push
dec
jmp
push
add
int
es
dec
adc
ror
or
or
loopne
mov
outs
cmp
cmp
mov
aad
sahf
sub
cmp
aas
dec
push
adc
or
nop
push
js
sub
(bad)
jmp
aas
cmp
mov
aaa
add
pop
outs
test
mov
or
xchg
push
push
pushf
and
jb
xchg
imul
nop
sub
leave
xor
fcmovb
mov
add
sub
popa
daa
sbb
mov
lods
add
add
enter
inc
std
je
retf
cmps
mov
jae
es
jmp
sub
xor
test
movs
arpl
add
jno
outs
add
dec
mov
inc
add
add
add
arpl
add
and
add
dec
push
mov
repnz
cwde
std
cwde
std
fst
and
cwde
std
add
sbb
outs
ins
daa
test
test
and
in
pop
scas
dec
push
push
add
cwde
or
inc
test
or
add
mov
jae
test
mov
xchg
call
ret
and
test
clc
test
inc
jns
or
add
loope
add
push
repz
xor
push
mov
nop
test
add
nop
nop
xchg
sub
ins
inc
sbb
mov
add
fwait
and
xor
xor
nop
std
cmp
push
test
dec
mov
(bad)
aam
sbb
sti
aam
adc
arpl
shl
push
cmp
push
fdivr
into
movs
and
push
pop
sub
push
cmp
and
leave
repz
loopne
pop
or
or
cmps
rol
xchg
push
in
mov
fdivr
int3
sti
mov
imul
xor
add
mov
dec
xor
cmps
int3
dec
add
pop
add
push
push
ret
mov
adc
adc
xchg
sbb
dec
sub
add
call
push
adc
fild
or
aam
mov
inc
das
lods
mov
adc
loop
jg
xor
cmp
icebp
sub
xor
add
les
lock
ss
jno
pop
sub
rcr
popa
aam
lods
mov
jae
add
stos
mov
mov
sar
push
scas
ror
fild
add
xchg
and
das
nop
mov
enter
cmp
push
loop
out
lea
daa
mov
pop
mul
add
jo
xor
sti
xor
add
cmp
movs
popf
inc
mov
sbb
les
test
or
add
push
jmp
stos
or
leave
daa
add
jle
pop
jb
je
sti
loopne
jmp
retf
and
push
mov
es
mov
imul
inc
push
jo
into
jo
adc
and
add
inc
mov
xchg
cmps
inc
nop
test
mov
int
push
nop
or
stos
push
lock
es
cli
jo
je
pop
fnstcw
jne
dec
cmp
inc
mov
fimul
push
lahf
xor
lea
jmp
fs
fabs
push
pop
mov
test
push
add
scas
push
ret
mov
sub
add
pusha
or
and
push
(bad)
mov
add
in
and
nop
jl
fist
pop
shl
pop
and
adc
xor
xchg
loop
xor
pop
jnp
mov
xchg
cmp
test
mov
xlat
in
xor
inc
stos
dec
je
or
sub
adc
dec
js
jnp
imul
inc
in
cmc
mov
outs
push
stc
sbb
push
xor
enter
mov
push
sbb
dec
test
imul
pop
adc
adc
ret
ins
pushf
mov
repnz
bound
push
xchg
xor
push
sbb
sbb
aas
fisttp
es
cmc
cmp
and
and
pop
sbb
jns
pop
xchg
push
sbb
mov
cmp
mov
mov
adc
sbb
int3
cmp
jno
or
dec
push
xchg
dec
push
shl
ret
mov
in
add
or
arpl
add
jecxz
inc
jae
gs
enter
mov
adc
xchg
mov
xchg
pop
outs
nop
sti
push
or
lahf
and
and
(bad)
retf
jp
push
das
jmp
loopne
(bad)
xor
pusha
test
adc
xor
mov
xor
mov
adc
xchg
pop
xchg
retf
scas
or
adc
sbb
fs
add
add
and
sbb
add
xchg
mov
push
daa
sbb
add
or
inc
arpl
adc
xchg
fst
mov
and
mov
pop
add
call
inc
inc
and
je
cmps
dec
dec
enter
fwait
stc
sbb
cld
cwde
in
push
push
push
or
test
mov
out
jg
pop
push
push
mov
cmp
sub
es
lods
dec
retf
movs
or
popf
mov
les
push
call
push
fs
(bad)
aam
inc
fnstenv
inc
bound
xchg
and
and
mov
shl
fwait
xor
jo
hlt
xchg
sbb
les
add
ret
add
dec
mov
push
mov
mov
in
sbb
int3
pop
mov
jge
xor
fisttp
dec
dec
push
push
jmp
cmp
push
std
fwait
and
xchg
dec
jnp
xchg
lea
xchg
push
pop
sbb
mov
or
inc
mov
gs
or
in
and
pop
adc
add
cmp
cmps
mov
sbb
dec
mov
push
nop
out
inc
std
sub
xchg
inc
sbb
scas
pop
loope
movsx
call
push
inc
add
mov
(bad)
push
cmps
inc
loopne
mov
shr
mov
test
or
adc
dec
shr
nop
das
sub
add
aaa
push
adc
lds
into
xor
push
inc
fld
cmp
cmp
mov
sbb
scas
(bad)
pop
mov
call
push
test
adc
iret
lahf
test
pop
adc
adc
push
xor
bound
sbb
xchg
inc
rcr
(bad)
dec
adc
xor
xor
stos
dec
sti
sbb
cmc
hlt
dec
movs
pop
ret
mov
dec
bound
nop
cmp
jle
mov
sbb
mov
push
cmp
div
test
jb
lea
das
movs
pushf
scas
mov
stos
scas
mov
imul
sub
(bad)
cld
and
push
dec
xchg
xchg
cmp
movs
inc
sbb
cdq
xor
mov
sub
cmp
(bad)
out
mul
das
jg
gs
add
or
xchg
mov
jns
pop
nop
sbb
cmc
mov
out
inc
les
adc
push
enter
add
mov
les
or
pop
test
daa
lea
add
daa
bound
add
add
fsubr
sbb
xor
movs
hlt
add
mov
sub
or
cmp
mov
dec
push
mov
pop
aam
cmp
test
xor
sub
jnp
mov
push
mov
push
shl
mov
push
inc
jbe
dec
sub
or
cmp
cmp
arpl
adc
xchg
pop
adc
and
stos
push
into
clc
pop
push
sbb
mov
and
jne
sub
loopne
or
out
loopne
stos
inc
repz
sub
mov
repz
stos
sbb
add
sbb
and
stos
adc
dec
add
iret
pop
jb
push
pop
add
lea
in
add
mov
retf
dec
add
hlt
inc
xchg
dec
and
add
repnz
fistp
cmp
and
repz
loopne
test
add
and
mov
hlt
xchg
inc
leave
adc
clc
call
add
mov
jmp
xchg
fisub
and
pop
std
dec
test
add
mov
sbb
add
xchg
dec
cli
loope
xchg
cmps
jmp
dec
sbb
inc
mov
aas
sub
rcl
or
bound
and
dec
mov
push
mov
and
push
stos
test
sub
adc
test
mov
leave
dec
add
sub
mov
inc
test
mov
das
add
mov
push
shl
ss
mov
imul
test
add
lea
mov
fstp
inc
dec
call
pop
ret
mov
sub
xchg
mov
jbe
jp
ja
sub
sar
cmp
and
push
and
xchg
(bad)
jl
mov
ja
jne
push
cmp
mov
jae
add
push
sbb
icebp
je
adc
push
imul
test
fild
loopne
sub
sar
cmp
jp
in
mov
inc
rol
ret
push
mov
shr
mov
aam
(bad)
cmp
pop
jae
xor
sub
(bad)
cmp
rcl
rcl
or
inc
push
mov
call
jmp
push
sbb
push
xlat
pusha
clc
pop
lods
sbb
add
addr16
push
push
xchg
cmp
adc
dec
add
fldcw
je
loope
retf
sti
push
adc
pop
jp
sub
lahf
jns
jge
aam
adc
enter
xor
imul
push
cmp
adc
add
ja
stos
(bad)
aad
add
push
lods
mov
sub
cmps
lock
pop
mov
lock
jns
or
or
arpl
pop
mov
inc
fbld
inc
or
cmp
scas
sbb
and
adc
ja
popa
xor
fdivr
add
imul
aam
scas
adc
or
ret
and
ja
add
mov
inc
sbb
ret
jmp
or
and
rcl
mov
mov
lea
movs
je
popa
push
mov
jl
mov
xchg
or
inc
rol
pop
add
fs
or
add
out
xchg
and
or
and
mov
sbb
adc
dec
lahf
iret
mov
cmp
(bad)
mov
mov
inc
mov
sub
adc
ficomp
xor
pushf
xchg
adc
add
or
cwde
popf
adc
imul
in
jecxz
xchg
xlat
cmp
cs
cli
jmp
repnz
sahf
fs
pop
fisttp
vmread
xchg
add
mov
cmp
fld
and
pop
pushf
or
leave
mov
fidivr
movs
sub
test
ja
mov
mov
cmp
test
mov
inc
ret
lahf
leave
sub
pop
add
jo
add
or
push
icebp
sbb
movs
fbld
enter
inc
std
aad
xchg
pop
cwde
xchg
mov
push
ss
pop
and
xchg
push
mov
push
test
cmp
(bad)
ds
sub
fadd
cmp
loop
mov
xchg
add
jne
not
imul
leave
xor
movs
mov
or
sbb
and
add
sar
xor
ror
mov
fistp
and
fcom
add
cs
lock
gs
pop
mov
mov
adc
pusha
sbb
xchg
push
jo
scas
in
cmp
nop
fstp
adc
and
adc
push
mov
clc
dec
or
lea
add
fmul
cmps
icebp
pop
xlat
lea
or
adc
or
sar
mov
jle
movs
mov
xchg
or
arpl
call
xor
inc
mov
sub
dec
inc
adc
inc
mov
or
add
or
jmp
push
out
mov
xchg
or
pop
lea
add
call
out
dec
cmps
ret
inc
aas
fisttp
pop
cmp
adc
xchg
sbb
or
pop
test
dec
adc
and
iret
aaa
clc
js
adc
loopne
ja
fadd
ja
call
nop
ror
dec
or
cmp
push
dec
bound
jmp
jb
xor
ins
int3
fidiv
push
lock
and
popf
xor
or
inc
dec
or
sub
popf
sbb
rol
inc
data16
inc
out
(bad)
(bad)
dec
js
mov
push
push
pop
push
pop
jle
mov
push
(bad)
push
sbb
dec
push
push
push
gs
jb
push
push
push
xor
xchg
mov
xchg
test
(bad)
or
or
shl
cmp
xor
inc
adc
and
dec
hlt
push
push
mov
cmp
pop
xchg
or
jbe
out
pusha
pop
(bad)
popa
mov
(bad)
cli
cmps
sub
jmp
(bad)
pop
nop
scas
add
mov
mov
xor
arpl
xchg
adc
dec
add
ret
stc
or
sbb
or
adc
xor
push
pop
fwait
cmp
xchg
sbb
adc
and
jno
int3
adc
sbb
bound
(bad)
jbe
push
loopne
and
xchg
and
and
pcmpgtb
std
in
fdivr
or
add
mov
js
cs
add
push
setb
add
add
push
inc
dec
popf
mov
mov
fdivr
(bad)
aad
shr
xchg
dec
push
aaa
enter
push
sbb
sahf
lods
pop
addr16
adc
mov
push
inc
loope
cmp
adc
pop
cs
pop
xor
mov
cmp
inc
sbb
dec
enter
inc
mov
fisttp
mov
ret
push
sub
cmps
xor
adc
add
sub
adc
pop
rcr
dec
push
test
call
in
push
add
mov
popf
mov
sbb
inc
or
pop
stos
mov
mov
mov
mov
shr
mov
ret
mov
aaa
movs
aaa
hlt
dec
sub
repz
test
sub
ror
aam
stc
add
inc
lods
add
daa
cld
rcl
adc
pushf
dec
ins
and
pop
mov
push
mov
stos
pop
jp
jmp
push
sub
sar
cmp
ja
iret
mov
dec
clc
push
add
mov
iret
jbe
js
je
add
jp
in
dec
shr
clc
add
or
clc
sar
iret
fdiv
loop
xor
push
push
push
movs
fldcw
sbb
pop
add
push
push
enter
mov
push
add
imul
and
les
cmp
sar
sbb
push
fwait
adc
dec
jbe
and
sub
in
jne
xor
adc
rol
jmp
(bad)
sbb
cmp
lea
push
sahf
stos
add
lahf
pop
int
sub
push
daa
inc
jl
inc
in
push
xchg
or
inc
std
inc
loop
dec
(bad)
xor
sub
sbb
fisttp
pop
loop
loopne
mov
retf
popa
imul
cmps
nop
xchg
sub
mov
pop
or
add
pop
aam
inc
adc
or
popf
fwait
push
or
lahf
inc
mov
loopne
into
aas
mov
test
sar
adc
movs
xlat
add
push
or
mov
adc
or
add
jns
xchg
cmp
mov
test
mov
adc
push
or
inc
mov
jb
and
xor
cli
dec
xor
addr16
ins
inc
jne
ret
adc
mov
rol
daa
stc
cmp
sub
and
push
hlt
cmp
pop
push
iret
jo
push
dec
sub
sbb
and
test
pop
and
sub
jg
sbb
popa
add
and
xor
add
xchg
shl
movs
(bad)
shl
dec
imul
cmp
jbe
jo
xchg
in
test
retf
adc
es
mov
lahf
or
xor
or
rcr
mov
sub
jo
push
sub
inc
into
xchg
dec
jmp
or
jb
push
fstp
loopne
mov
test
test
sahf
ja
or
bnd
or
shl
push
sar
fnstcw
xchg
pop
sub
inc
sar
jbe
mov
shr
mov
aas
fidivr
fnstcw
retf
sbb
fwait
enter
push
or
xor
mov
dec
cmc
add
dec
loopne
push
sti
or
pushf
mov
mov
push
push
or
mov
jbe
sub
jb
ss
add
xor
push
pusha
test
repnz
call
add
push
add
adc
add
adc
xchg
or
in
dec
cmp
pop
repnz
add
test
push
in
adc
addr16
(bad)
in
sti
sbb
sub
sbb
mov
icebp
cmp
pop
push
adc
pusha
adc
daa
and
loopne
mov
xor
pop
mov
jl
(bad)
ret
loopne
lock
jno
test
add
or
addr16
inc
push
pop
mov
outs
push
retf
add
test
push
shr
mov
mov
and
mov
jl
cmp
int
push
or
dec
test
xor
cs
cmp
sar
dec
add
es
mov
shr
sbb
push
add
ret
add
xchg
dec
and
nop
mov
loop
and
xor
adc
call
push
fcomp
sbb
dec
push
enter
xor
jo
inc
cmp
dec
add
pusha
and
dec
xchg
int
xor
js
push
adc
and
loope
adc
das
mov
ret
sbb
jmp
out
out
inc
call
call
inc
mov
mov
dec
push
and
mov
inc
dec
lods
stos
in
push
xor
loopne
inc
mov
inc
add
lods
addr16
and
stos
inc
xor
pop
dec
adc
(bad)
cli
sbb
hlt
dec
test
mul
push
mov
xchg
mov
jo
xor
pop
and
and
shl
jnp
or
sub
je
inc
mov
shl
or
add
inc
and
out
push
sub
cmp
popa
add
lea
into
add
xchg
jg
mov
jns
in
xor
bound
hlt
push
adc
lahf
shl
inc
and
call
xchg
jge
rcl
(bad)
adc
mov
mov
mov
fdiv
mov
ss
test
dec
loope
cmc
add
test
sar
adc
dec
push
sub
shl
add
or
mov
push
xor
xchg
xor
cmp
add
pop
mov
icebp
mov
popf
daa
into
call
nop
sbb
xchg
jne
sub
hlt
shr
dec
jmp
ds
iret
bound
shl
in
addr16
inc
dec
stc
jb
sub
dec
add
dec
jnp
nop
jns
push
dec
push
xor
inc
ja
ret
mov
inc
add
jo
test
popa
pop
jmp
pop
dec
pop
xchg
call
test
sbb
inc
push
or
ret
adc
ds
les
mov
popf
inc
or
pop
add
add
rcl
rcr
shl
lods
fsub
add
pop
sub
aad
inc
mov
popf
xor
ss
or
pop
dec
dec
lods
fisubr
add
push
dec
inc
push
push
je
inc
jg
adc
fadd
test
sub
pop
in
dec
sub
pop
nop
sbb
outs
popf
and
add
add
movs
es
xchg
jo
xchg
lahf
cmp
cmp
sub
xchg
xor
pop
pop
in
es
xchg
gs
or
mov
popa
movs
sbb
xor
add
cmp
dec
inc
out
xchg
or
pop
mov
ror
popa
add
and
cmp
leave
and
jp
rol
aad
add
add
add
ficomp
push
xor
inc
or
mov
es
cmp
stc
mov
push
dec
push
sbb
ret
call
dec
and
retf
pop
retf
enter
jbe
sbb
inc
jo
or
(bad)
fsub
ficom
add
in
outs
mov
cwde
in
or
out
sbb
adc
js
xchg
pop
jno
cs
cdq
call
sub
popa
or
or
je
in
cdq
test
cmp
jne
push
les
push
rcr
(bad)
popf
jo
jmp
xchg
inc
sbb
shr
pop
aas
movs
xchg
mov
loopne
imul
cmp
inc
pop
inc
or
int
je
loopne
(bad)
jae
xor
and
jmp
or
sti
or
add
dec
sti
and
xchg
mov
inc
loopne
hlt
sbb
ret
int
div
pop
in
adc
xor
xchg
lea
mov
push
mov
mov
bound
lea
fadd
hlt
mov
adc
adc
mov
pop
add
or
add
int
(bad)
mov
loopne
lea
std
popa
ins
popa
or
mov
jl
sar
pop
scas
or
in
and
xchg
int
mov
inc
xor
pop
(bad)
out
sub
mov
gs
push
push
(bad)
loopne
xor
inc
mov
dec
lods
mov
mov
inc
mov
push
sub
push
mov
push
pop
xor
sbb
and
inc
push
(bad)
add
repnz
or
cdq
dec
cmp
or
adc
and
or
and
add
mov
cmp
ret
js
dec
xchg
sbb
cwde
jae
jns
add
sbb
push
ret
lods
aas
or
enter
add
pop
pop
pop
rcl
dec
lea
pop
jo
push
idiv
xlat
sub
push
int3
xor
test
and
mov
jmp
push
push
mov
mov
stos
or
ret
test
sub
sub
es
push
add
aaa
ins
shl
sub
loope
inc
add
dec
xor
loopne
push
aam
push
add
push
test
lds
or
push
pop
imul
inc
or
adc
pop
sbb
ror
mov
sahf
cmp
and
cld
xchg
lea
add
lds
enter
xor
cmp
or
and
dec
aam
cmp
out
add
adc
leave
push
inc
jecxz
xchg
adc
add
xor
jbe
retf
test
fcmovnb
ror
jns
inc
pusha
aaa
mov
inc
sbb
dec
ror
adc
rol
cs
push
shl
xor
add
and
mov
movs
das
push
add
adc
das
or
add
rol
pop
cmp
stos
push
cs
push
jmp
add
mov
sub
pop
je
add
cmps
or
pop
xor
mov
sub
sub
push
popf
mov
push
xor
fld
push
lock
ret
jae
mov
sbb
mov
sahf
(bad)
out
jmp
jg
jmp
bound
sbb
or
jp
push
or
imul
in
adc
sub
push
and
fiadd
jb
sbb
add
cmp
es
pop
pusha
in
push
add
dec
stc
jo
test
or
jns
cmp
push
mov
lods
sbb
dec
dec
xchg
adc
mov
cmp
lods
pusha
mov
adc
or
(bad)
ins
bound
and
sbb
sub
dec
je
adc
cdq
cmovo
and
inc
sbb
bound
sub
repnz
mov
dec
test
cmp
or
in
fmul
nop
sub
mov
mov
int3
dec
cs
retf
and
cmp
adc
xor
cmp
adc
push
js
push
clc
xchg
loopne
ja
and
pop
ins
cmp
fs
loop
jo
mov
and
mov
mov
and
js
mov
mov
xor
jb
push
add
add
mov
mov
push
sbb
xchg
fnstcw
and
imul
mov
adc
cmp
jbe
iret
enter
mov
jmp
xchg
pop
add
jo
fisubr
daa
cmp
xchg
add
idiv
dec
sbb
sbb
xchg
cmps
add
add
cwde
sbb
repnz
mov
stos
fidivr
iret
push
push
enter
and
adc
mov
inc
pushf
mov
je
cdq
adc
xchg
popf
pushf
std
pushf
and
mov
outs
adc
movs
add
inc
adc
jb
cwde
push
pusha
jl
push
jp
movs
or
popf
imul
shl
sub
(bad)
cdq
jecxz
or
lock
sbb
aad
and
lods
movs
or
in
pushf
int3
(bad)
fs
addr16
enter
nop
dec
jb
std
push
cmp
mov
rcr
dec
sti
adc
dec
pop
popa
adc
push
lea
jnp
add
xlat
test
xor
push
retf
dec
inc
jl
sbb
or
dec
xor
adc
dec
and
inc
mov
adc
pop
sub
pop
retf
jae
inc
jle
mov
scas
inc
dec
fwait
imul
loopne
mov
sub
xor
mov
test
imul
call
popf
sbb
mov
inc
jbe
popf
(bad)
and
dec
or
or
inc
mov
ror
mov
jg
inc
or
cmps
inc
sub
adc
jecxz
loopne
test
jmp
xchg
inc
stos
add
loopne
add
movs
pushf
push
jb
sub
aas
mov
(bad)
xchg
cli
pusha
ins
test
push
pop
add
add
rcr
adc
sub
add
cmp
mov
push
xor
(bad)
push
jp
xor
scas
aam
sar
leave
and
add
or
mov
cmp
fldenv
mov
adc
retf
push
adc
pop
in
call
and
enter
lds
stc
ret
and
inc
adc
int3
add
fsub
or
mov
inc
mov
bound
pop
int
push
adc
inc
mov
repnz
xor
mov
cmp
mov
cwde
add
mov
pop
lock
and
add
fld
sbb
mov
mov
rol
push
jns
mov
xchg
pop
inc
in
in
in
test
lahf
punpckhwd
enter
imul
in
mov
jg
pusha
nop
cmp
add
push
je
push
sbb
push
dec
(bad)
nop
jo
push
test
xor
mov
repnz
xchg
or
adc
pop
cwde
cwde
movs
aam
test
test
pop
adc
inc
cmp
jb
or
jb
inc
out
pushf
leave
mov
or
test
(bad)
adc
enter
jecxz
test
jnp
push
pop
dec
push
add
mov
test
out
push
inc
test
add
dec
and
add
cmp
or
add
ins
inc
add
popa
pusha
sub
push
and
dec
sub
test
mov
(bad)
movs
int
and
dec
add
popa
ja
aas
push
and
pusha
inc
pop
inc
pop
dec
mov
and
(bad)
stos
mov
mov
and
and
add
js
add
dec
leave
pop
xchg
repz
or
cmc
adc
sbb
jmp
data16
sbb
pop
out
pop
cdq
inc
and
pop
sbb
mov
jo
add
das
out
sub
ins
adc
adc
mov
pop
fstp
or
inc
jb
jmp
or
and
or
xor
jl
adc
add
je
dec
xchg
data16
pop
adc
les
ins
and
cmp
pop
push
pusha
rol
pop
mov
mov
rcl
arpl
nop
adc
add
add
shr
fcom
and
adc
cmp
in
test
or
and
inc
add
pop
out
fwait
adc
push
push
pop
add
outs
ret
stos
push
adc
and
cld
sbb
enter
mov
or
add
or
popa
repz
jge
push
or
inc
popf
mov
xchg
sahf
popa
shr
in
cwde
push
mov
pop
je
xchg
push
xor
pop
clc
mov
sbb
sbb
dec
mov
ins
pop
adc
ins
jb
adc
mov
mov
pop
jmp
adc
cwde
rcl
mov
or
aas
loopne
ins
cmp
push
test
xchg
mov
push
mov
and
sbb
pop
dec
in
ret
push
imul
popf
xchg
push
aam
js
dec
push
inc
sub
or
test
xchg
mov
mov
mov
test
mov
or
pushf
popf
(bad)
pop
test
les
js
jne
xor
and
in
adc
rol
push
mov
shl
in
cmp
cmp
and
cmps
dec
dec
(bad)
mov
cli
jge
fs
(bad)
dec
inc
fmul
inc
push
add
es
dec
cmps
loopne
fdivr
cmps
inc
or
sub
in
inc
push
sbb
and
aam
sbb
fdivr
movs
(bad)
push
nop
dec
xor
rcr
int3
(bad)
sub
cmps
adc
out
mov
cmps
pop
in
and
sbb
fist
jne
and
mov
es
inc
lock
out
add
jmp
adc
pop
into
enter
push
sahf
bound
add
scas
repnz
add
(bad)
fisubr
rcr
adc
sbb
xchg
test
xchg
call
movs
leave
sub
and
jne
jnp
mov
jno
mov
sub
push
scas
and
push
leave
gs
adc
scas
inc
adc
push
repnz
push
push
inc
imul
and
call
jns
cmp
sbb
add
dec
mov
sub
sbb
je
rol
add
stos
add
pusha
das
pop
or
dec
lahf
mov
dec
jmp
fucomi
lds
in
jbe
out
mov
mov
add
cmp
push
pop
inc
add
ret
add
mov
es
add
lock
mov
push
inc
push
jmp
dec
dec
pop
or
dec
ja
rcr
mov
(bad)
je
xchg
cmp
clc
cmp
jne
sbb
sbb
push
mov
mov
shl
or
lods
push
arpl
mov
retf
inc
pusha
mov
fidiv
data16
add
sbb
imul
or
repz
inc
add
push
ret
mov
mov
xor
jb
outs
adc
test
and
push
mov
adc
lods
xor
inc
or
mov
cmp
jmp
cmp
je
(bad)
sbb
adc
jns
adc
call
push
sbb
fnsave
outs
cmp
mov
adc
jb
push
or
jg
inc
or
pop
adc
sbb
inc
adc
mov
add
pop
xchg
push
jbe
rol
outs
mov
cmp
in
push
ins
mov
bound
or
lods
jb
jo
cmp
push
and
sub
fnstcw
or
(bad)
mov
call
pop
fwait
push
jp
mov
cmps
imul
call
xor
or
mov
ss
cmp
pop
adc
adc
jle
or
sub
dec
prefetcht0
and
adc
or
mov
ds
movntq
sub
push
xchg
in
sbb
lods
jno
xchg
jo
fimul
call
mov
xchg
or
xor
aaa
iret
and
sahf
sar
add
and
pop
or
loope
stc
push
push
dec
ret
inc
mov
sbb
mov
pop
ss
adc
cli
ss
adc
fucomip
and
or
jge
add
and
cli
add
and
scas
and
fxch
mov
fdiv
push
xchg
cmp
sub
ss
data16
sub
add
arpl
dec
cmp
je
pop
add
dec
and
or
in
sbb
rcl
adc
js
pop
fsub
dec
fcom
das
inc
fadd
or
ret
add
(bad)
mov
scas
jne
div
adc
dec
clc
inc
cwde
mov
adc
ja
mov
sbb
add
shr
shr
iret
and
and
pusha
bound
push
retf
add
xchg
jl
mov
sar
dec
adc
push
push
push
popa
jl
popf
and
jecxz
call
push
push
inc
adc
push
je
push
push
or
ror
das
dec
and
pusha
shl
sti
into
push
imul
pop
ficomp
int
dec
or
or
test
push
pop
clc
add
dec
sub
aaa
lds
outs
movs
jmp
cmp
jg
sbb
outs
xchg
sbb
sub
(bad)
jo
pop
ret
mov
call
add
mov
pop
fst
inc
clc
sbb
lea
mov
mov
xchg
and
mov
ins
js
pop
call
(bad)
inc
xchg
adc
int3
pop
pop
dec
cmp
add
or
fidivr
lods
jae
pushf
dec
mov
leave
push
ror
adc
or
inc
jb
scas
mov
xor
inc
cmp
xor
xlat
mov
repz
xor
rol
movs
bound
inc
mov
mov
mov
push
push
ins
shr
pop
xor
and
out
mov
xchg
ins
hlt
adc
mov
cli
push
pop
div
and
jne
mov
outs
sub
imul
and
or
lock
das
jne
retf
ss
ret
sub
jne
call
js
pop
scas
retf
xchg
sub
ins
daa
jno
jo
cmc
lds
add
jb
ret
ss
enter
pop
jge
inc
cdq
cwde
pop
add
sub
out
cli
add
add
into
cmp
adc
addr16
nop
jo
cmp
push
push
sti
add
add
adc
jno
xchg
sub
sub
mov
rol
mov
xlat
ds
dec
lock
push
jmp
cmp
pop
fimul
imul
add
pop
lods
sbb
lock
push
or
cdq
imul
pop
dec
sbb
push
push
imul
nop
add
xchg
popa
jb
test
arpl
or
push
or
jo
push
dec
xchg
mov
cmp
jo
dec
sahf
mov
jmp
clc
sar
push
clc
adc
dec
repnz
mov
je
pop
lods
mov
fidivr
cmp
and
adc
push
sub
dec
ret
(bad)
mov
data16
xor
mov
mov
nop
inc
pop
lds
lock
jp
and
and
xor
dec
inc
jb
push
pushf
test
xor
xchg
or
jae
mov
sbb
test
dec
bound
pusha
add
inc
xchg
add
or
lods
jo
cmp
stos
mov
(bad)
mov
sub
or
(bad)
cld
movs
dec
lea
dec
fsubr
es
mov
push
jne
dec
cmps
nop
loopne
sar
mov
inc
xor
add
jns
mov
xor
out
add
pop
daa
movs
das
push
sbb
xchg
inc
loopne
xchg
lock
jp
pop
(bad)
mov
xor
jnp
dec
punpcklbw
and
mov
mov
add
xor
jmp
and
xchg
xchg
add
dec
add
icebp
push
outs
retf
sub
push
and
and
test
mov
mov
lods
sbb
mov
test
inc
pushf
jg
sbb
add
push
jns
nop
inc
sub
ror
in
adc
cmp
jne
push
test
loope
jmp
cmp
dec
inc
pop
add
inc
stos
rcl
call
cmp
cmp
or
add
loope
aaa
or
test
jmp
push
add
pop
movs
push
add
lea
retf
adc
jbe
adc
cld
dec
mov
jnp
mov
pop
inc
add
add
cmp
(bad)
jecxz
sbb
add
je
dec
sub
or
lea
jae
add
xor
dec
xor
es
push
hlt
push
adc
clc
xor
rol
xor
inc
xchg
sub
retf
jno
adc
(bad)
dec
(bad)
rcl
test
shl
outs
push
dec
ret
clc
mov
lea
test
enter
xchg
jns
test
inc
mov
mov
add
sbb
imul
or
jno
cmp
int
retf
enter
test
leave
fild
mov
ja
fidivr
jne
loop
adc
nop
aam
(bad)
adc
push
mov
(bad)
push
lock
add
inc
xor
clc
pop
or
or
test
xor
mov
add
ss
cmps
lock
adc
mov
xchg
xor
or
dec
or
xchg
inc
rcl
cmp
adc
fs
add
add
rol
nop
pusha
adc
clc
adc
in
cld
dec
mov
sub
add
and
or
adc
inc
cmp
add
push
sub
xchg
das
xchg
inc
in
push
push
push
xor
sub
and
xchg
jmp
mov
sub
sub
push
push
add
mov
fs
cdq
cld
pusha
inc
mov
and
or
xchg
cmp
adc
jmp
pop
push
enter
lahf
inc
mov
fild
cmp
aaa
pop
gs
add
enter
unpcklps
dec
js
push
xor
xor
push
fst
mov
push
sbb
dec
push
les
(bad)
jecxz
adc
sar
fcomp
les
test
ud1
mov
rol
mov
sahf
fs
sbb
cmps
ficomp
out
cmp
retf
and
pop
leave
lock
push
or
fidivr
adc
dec
repnz
sub
and
es
mov
lahf
inc
jge
xchg
(bad)
paddd
push
add
sar
and
das
sub
push
mov
or
push
ror
xor
dec
and
sub
retf
adc
loopne
pop
lea
fsubr
leave
out
add
aam
shl
add
push
mov
rcl
push
jp
push
xor
adc
jmp
and
pop
iret
inc
or
push
xchg
adc
mov
popf
shr
dec
ret
lahf
retf
or
jmp
inc
pusha
inc
daa
je
mov
or
lods
inc
push
bnd
mov
push
push
xor
push
push
push
cmp
js
clc
push
pop
pushf
(bad)
aam
or
(bad)
mov
pop
ftst
mov
or
or
sbb
clc
repnz
ret
cwde
jge
test
and
repnz
add
jae
dec
rol
loop
lods
loope
dec
lea
sub
mov
pop
dec
xor
sub
ins
jns
out
add
or
pop
nop
xchg
and
nop
xchg
and
xchg
and
or
mov
push
xchg
in
aam
mov
ret
or
push
dec
mov
jae
and
shl
mov
push
test
add
inc
inc
sub
dec
xor
adc
popa
sub
adc
adc
in
pop
sbb
cli
and
pop
mov
jmp
(bad)
mov
mov
sbb
mov
sbb
cmp
adc
out
pop
add
jle
mov
sub
cmc
add
test
or
fst
adc
stos
push
inc
rcl
jp
pusha
and
or
int3
add
inc
jnp
loopne
mov
loope
push
push
daa
call
and
and
imul
jne
sub
add
movs
sbb
add
rcr
push
test
ss
and
out
and
test
add
pop
sub
xchg
rcl
(bad)
adc
mov
pop
shl
jno
push
in
sbb
rcl
dec
and
ret
xor
and
fstp
xchg
add
sub
xor
jmp
and
inc
fwait
test
shl
in
cdq
pop
push
sub
in
or
inc
inc
xor
mov
jmp
sub
arpl
inc
xor
rcl
pop
sub
xchg
and
mov
je
imul
jne
xchg
mov
sbb
mov
popf
cmp
xor
cmp
inc
inc
mov
xor
lock
clc
add
cmp
push
sbb
or
add
or
mov
or
add
das
xchg
out
pop
xor
adc
mov
cmp
sub
cmp
mov
cmp
movs
adc
shl
sbb
sbb
test
scas
add
data16
add
pop
int
cdq
nop
enter
shr
jne
or
shr
loopne
mov
or
xchg
push
sbb
push
add
(bad)
adc
imul
stos
dec
sbb
lock
sbb
fs
cmps
mov
(bad)
cmp
mov
adc
dec
js
mov
lea
jmp
push
sub
jno
fmul
aad
popf
outs
fsub
adc
test
and
adc
outs
jns
ror
jl
pop
xor
pop
mov
outs
les
jbe
push
push
je
sbb
adc
cmps
ins
mov
mov
adc
loopne
jnp
mov
ja
xor
and
inc
pop
cmp
mov
and
out
dec
stc
sbb
xor
push
and
add
cmps
xor
add
inc
leave
and
add
iret
xchg
push
mov
rol
adc
gs
mov
inc
mov
leave
pop
arpl
js
or
ret
imul
hlt
std
sahf
ss
adc
or
jns
adc
sbb
inc
les
sbb
call
and
push
push
push
push
inc
movs
pop
adc
aam
push
pop
push
jg
push
cmp
cdq
add
push
leave
mov
movs
sbb
and
jmp
imul
cmp
mov
inc
scas
lahf
sbb
and
adc
mov
xlat
push
sub
push
(bad)
pop
movs
xor
(bad)
mov
mov
jmp
pop
fld
adc
mov
and
daa
sbb
cmp
punpckhbw
ins
popf
inc
push
xchg
and
pop
cmp
or
xchg
dec
jbe
(bad)
xchg
inc
or
call
mov
adc
inc
or
push
xor
xor
inc
inc
push
cs
sbb
repnz
cmp
icebp
xor
enter
and
test
cmp
cmp
add
fcmovbe
push
xchg
clc
sti
mov
inc
and
adc
stos
aaa
sub
xchg
sbb
jno
push
bswap
lock
mov
xor
movs
jns
cmp
aas
xor
nop
jne
nop
pop
ss
lock
jb
pop
cmp
push
adc
add
xchg
pop
add
pop
sbb
jae
add
dec
dec
mov
add
xlat
inc
or
or
jb
sub
es
pop
ret
shl
aaa
cmp
or
add
fiadd
and
mov
inc
xchg
and
bound
cs
outs
sbb
dec
sub
inc
adc
xor
sub
dec
sub
cmp
xor
sub
pop
test
add
pusha
enter
and
and
popf
pop
push
sub
clc
in
xor
sub
and
loope
cs
stc
das
outs
or
cs
lds
sub
push
repnz
and
repnz
and
inc
es
push
push
sub
push
mov
pop
fwait
lds
movs
fwait
adc
and
xchg
xor
inc
xor
xor
push
rcl
xchg
mov
je
xchg
add
daa
xchg
outs
dec
frstor
sub
and
sbb
movs
sub
sub
inc
xor
add
cli
or
xchg
pop
and
add
push
sbb
mov
or
ret
cmp
inc
ret
or
or
and
add
push
jp
dec
mov
push
loop
or
sbb
mov
dec
inc
(bad)
pop
dec
dec
cmp
mov
sub
ss
add
or
sub
xchg
pop
push
scas
pushf
in
pop
add
pushf
cwde
test
push
cmp
in
push
pop
jecxz
cld
mov
(bad)
push
or
jecxz
(bad)
mov
push
inc
ret
pop
dec
inc
pop
or
pop
inc
push
and
inc
and
dec
sub
loop
mov
pop
mov
xchg
push
xchg
je
loope
icebp
rol
movs
add
loopne
push
jne
mov
int
push
dec
loope
dec
enter
inc
stos
or
push
add
xchg
test
lods
fld
or
jmp
sub
mov
inc
push
hlt
stos
int
xlat
xchg
ud1
aam
shr
aam
in
sub
pop
mov
and
in
aaa
xchg
mov
and
pop
arpl
(bad)
add
and
add
mov
push
call
call
loope
xor
cmp
push
sbb
and
mov
rol
inc
cmp
sub
push
inc
add
inc
cli
enter
call
test
jnp
push
push
sbb
clts
sub
shr
push
cmp
xchg
sar
(bad)
lds
sar
test
fadd
test
dec
pop
shl
aam
leave
dec
inc
sbb
fcomp
sbb
add
test
push
jl
loop
int
mov
dec
lea
mov
ror
or
push
add
rcr
movs
add
les
(bad)
les
sub
xor
add
(bad)
(bad)
std
add
add
mov
scas
xchg
pop
adc
das
scas
jmp
pop
int3
push
dec
dec
or
lods
std
jle
sbb
inc
mov
test
lock
mov
bound
mov
ins
add
mov
add
sbb
jae
test
mov
call
imul
sub
inc
inc
xchg
cmp
push
mov
repz
scas
jne
std
loopne
hlt
pop
cmp
push
es
or
mov
sub
nop
mov
les
gs
inc
cmp
jl
mov
jmp
dec
push
adc
sar
sub
pop
jb
adc
sub
and
push
enter
call
or
mov
xchg
rol
les
dec
ss
and
and
aam
mov
enter
xchg
push
mov
xchg
mov
xor
inc
add
xchg
jns
(bad)
xchg
mov
mov
push
dec
and
or
daa
push
enter
test
jge
nop
adc
or
int
or
cmps
imul
in
push
mov
or
or
xchg
mov
shr
add
dec
xchg
or
test
xchg
stc
inc
js
shr
add
(bad)
fsubr
mov
addr16
or
bnd
jb
call
adc
dec
imul
mov
pusha
jge
es
cmp
pop
sti
add
xor
test
inc
xor
sub
pop
dec
add
dec
jne
add
pop
sar
or
add
test
nop
push
or
jne
pop
faddp
es
add
or
lock
cmps
pusha
xor
push
shl
add
inc
dec
comiss
inc
les
mov
(bad)
mov
adc
retf
test
ins
mov
dec
mov
xchg
add
mov
pushf
push
and
add
pop
adc
dec
leave
push
sti
aam
lods
pushf
call
sahf
or
push
inc
enter
add
pop
mov
adc
cwde
mov
add
aam
stc
test
sbb
xchg
enter
nop
or
sbb
enter
or
sbb
jns
jo
fcom
and
inc
cmps
fs
int3
dec
push
mov
adc
and
inc
or
outs
les
sbb
imul
repz
and
and
int3
es
push
loopne
daa
mov
nop
sbb
and
es
popa
aam
scas
adc
cmps
sbb
and
retf
inc
and
mov
lods
fadd
pop
cmp
in
sub
add
(bad)
sbb
sbb
sub
pusha
sbb
aam
sub
mov
sbb
in
sub
cmp
sub
dec
out
pop
sub
call
add
sub
add
ja
xor
xchg
adc
mov
push
or
pop
pop
or
dec
push
inc
loopne
fs
xchg
sub
nop
and
cwde
xchg
pop
and
pop
add
inc
sub
or
mov
xor
std
inc
adc
xchg
in
std
sub
jae
mov
add
adc
sbb
cmp
cs
nop
out
dec
imul
xor
mov
or
mov
xor
leave
das
mov
adc
and
cmp
leave
shl
sbb
fs
je
push
mov
inc
cmps
xor
xor
ss
xor
xor
shl
xlat
les
daa
xor
pop
sub
add
xchg
pop
leave
and
pop
enter
pusha
rol
retf
adc
xor
enter
jp
loopne
enter
dec
mov
push
test
add
int
fs
cmps
cmp
in
xchg
sub
cmps
xchg
test
add
sub
iret
and
mov
mov
outs
add
aad
add
xor
in
in
add
mov
test
add
inc
xor
push
pusha
leave
xor
or
mov
cmps
and
and
data16
(bad)
cmp
or
pop
add
push
bound
pop
inc
push
(bad)
outs
jae
adc
rol
loop
enter
outs
test
dec
stos
or
xor
sub
add
outs
cld
and
inc
(bad)
js
not
xchg
(bad)
cmp
mov
or
push
mov
mov
push
imul
jg
inc
dec
lods
sub
push
push
rcr
cmp
js
xor
push
add
add
xor
push
cli
js
cmp
jb
and
cmp
inc
xor
aaa
sub
or
adc
sar
sbb
movs
pop
inc
jno
cmp
lock
int3
push
push
add
pop
xor
and
call
lock
test
xchg
mov
call
adc
movs
pop
push
inc
(bad)
(bad)
sbb
ret
arpl
dec
xchg
mov
cmp
push
add
push
push
pop
icebp
lods
push
xor
ins
pop
mov
imul
sub
cmp
mov
loopne
push
leave
adc
sbb
lods
sar
movs
xor
mov
push
int3
push
in
and
pop
and
ficom
sbb
stc
int3
and
and
xchg
xor
and
mov
(bad)
push
push
sbb
or
sub
push
adc
sub
and
cmp
sub
push
call
test
rol
inc
sbb
int3
and
es
test
jns
scas
xlat
shl
pushf
sbb
push
je
xchg
movs
sub
aas
sub
retf
add
dec
aad
lds
mov
and
sahf
(bad)
or
push
leave
leave
in
or
daa
cmps
mov
sub
pop
adc
in
stos
arpl
shr
xchg
sbb
dec
sub
test
push
jb
lea
push
rol
push
add
dec
add
add
stos
cmp
mov
call
(bad)
xchg
or
mov
and
adc
stos
test
or
xchg
ins
cli
xor
inc
mov
inc
(bad)
dec
sub
mov
shl
mov
push
inc
push
mov
leave
adc
xor
add
enter
nop
retf
xchg
aaa
nop
sub
test
adc
xchg
and
ss
push
push
aam
mov
sahf
mov
enter
call
hlt
xor
xchg
push
(bad)
cmp
rol
in
call
mov
jmp
mov
popa
mov
nop
lahf
mov
mov
cmp
add
cmp
cmp
add
nop
xor
inc
leave
xchg
add
add
jne
pop
sbb
mov
cmovge
mov
aam
jmp
adc
test
or
and
sub
add
adc
and
lock
bound
movs
adc
js
push
xor
sar
and
cmp
xor
and
es
imul
jae
sahf
xchg
mov
es
(bad)
cmc
mov
push
iret
or
dec
scas
call
das
sub
add
gs
mov
mov
adc
push
imul
inc
cli
mov
std
inc
jl
pushf
xlat
fst
inc
mov
test
and
pop
inc
cmps
mov
xlat
inc
dec
cmp
or
inc
add
test
aas
and
sub
add
sub
add
push
sbb
jge
not
ja
sbb
(bad)
adc
jno
mov
mov
rol
dec
push
mov
mov
cmps
je
invd
mov
push
adc
ret
and
je
mov
adc
movs
and
xchg
inc
dec
sbb
push
and
lea
pop
and
or
lods
loopne
xlat
push
fmul
repnz
sbb
mov
inc
rol
adc
adc
xchg
ror
out
sbb
mov
push
fcomp
and
sub
inc
and
xchg
call
dec
inc
dec
xor
not
push
sbb
out
sub
shl
jg
sbb
aas
das
pop
lahf
add
sbb
or
sbb
aam
mov
jg
sub
fldz
(bad)
fstp
mov
push
fdivr
pand
fidiv
cvtdq2ps
mov
jle
inc
imul
cmp
vunpcklps
jo
xlat
fnstenv
mov
call
push
mov
xor
push
add
jmp
cmp
lods
aam
xor
test
sti
enter
pop
sbb
sub
cmp
adc
push
and
enter
push
lods
dec
mov
fmul
movs
jne
je
add
xchg
jl
je
add
sbb
fwait
pushfw
add
mov
sbb
(bad)
enter
sahf
out
je
add
mov
or
data16
push
push
and
push
je
dec
inc
stos
in
dec
add
movs
or
add
pop
mov
stos
pop
mov
jge
or
push
clc
(bad)
and
xor
shr
dec
fdiv
or
sbb
jl
push
stos
push
push
sub
mov
xchg
pusha
or
pop
imul
pop
imul
push
daa
lods
or
jbe
mov
inc
mov
mov
or
cdq
or
scas
xchg
and
xchg
shl
push
push
cmp
(bad)
cmp
daa
mov
lea
dec
cwde
xchg
adc
cmp
nop
stos
jg
adc
pop
test
stos
and
sub
in
ror
adc
mov
jmp
mov
or
ins
jne
sub
inc
cli
inc
add
jle
add
fcomp
mov
lds
xchg
scas
mov
popf
and
outs
pop
popf
and
mov
cwde
adc
inc
add
xchg
sbb
add
rcl
jg
and
mov
je
ins
cld
lea
mov
fwait
retf
(bad)
fnsetpm(287
in
shl
inc
adc
push
jle
adc
shr
add
add
add
fs
stos
and
cdq
adc
sub
out
sub
jno
push
aam
call
adc
es
mov
adc
push
out
push
adc
test
xor
shl
jnp
pop
sub
mov
ret
test
inc
cmp
lea
push
jle
or
imul
ja
push
cmp
adc
mov
mov
hlt
adc
sar
cmps
pop
add
mov
fs
js
je
test
rcl
mov
add
add
or
ss
mov
pop
dec
jmp
adc
fild
jnp
jl
mov
xor
add
js
pop
xchg
or
fnsave
enter
cmp
inc
or
sub
cmps
shl
sbb
sub
sub
data16
mov
in
jmp
inc
(bad)
xor
cmps
xor
jmp
xor
cmp
dec
mov
lock
sbb
mov
sbb
or
or
push
cmps
repz
(bad)
iret
sbb
fdiv
xor
in
sbb
out
push
test
mov
enter
xchg
sbb
nop
push
leave
add
push
pop
into
push
mov
lods
mov
add
xchg
loope
push
mov
add
mov
inc
mov
out
adc
in
and
inc
dec
jo
mov
loopne
or
bswap
add
add
mov
loopne
add
out
jl
pop
xor
rcl
and
cmp
adc
hlt
lds
jo
add
mov
dec
dec
pop
or
push
mov
add
sub
imul
and
jb
rol
pop
sub
cs
sub
and
push
enter
and
dec
adc
and
inc
add
pop
mov
mov
pop
leave
push
leave
in
sub
pop
and
jb
or
in
xor
pop
sub
or
test
add
sub
jb
pushf
stos
sbb
sub
inc
and
sub
inc
push
and
add
mov
dec
pop
sbb
scas
test
mov
push
sbb
mov
inc
mov
xor
fcom
push
mov
rol
fs
xchg
cmp
es
scas
xor
xor
inc
es
das
cs
cs
cs
xor
cmp
enter
pop
jb
xor
xor
ss
xor
inc
xor
mov
push
push
mov
adc
call
je
and
arpl
cmp
xor
sub
aaa
out
add
mov
fs
jecxz
sbb
or
cmp
sbb
xchg
jno
mov
push
sbb
cs
cdq
xor
repnz
cmp
sbb
push
push
sbb
and
inc
inc
xchg
cmp
test
xchg
inc
ret
and
add
inc
jb
cmp
jb
cmp
fwait
cmp
sub
push
mov
cmp
ds
sar
cmp
add
jmp
aam
and
and
nop
push
and
(bad)
sbb
or
mov
xor
sbb
sbb
vmread
adc
xor
xor
inc
add
call
test
mov
inc
jns
rcl
push
adc
add
add
clc
inc
mov
push
jno
mov
aam
push
aad
adc
test
or
mov
pop
movs
jl
dec
sahf
or
mov
mov
dec
call
mov
call
push
mov
dec
adc
lock
pop
call
add
lea
or
or
inc
ret
std
scas
cmp
mov
and
aad
cmp
push
inc
dec
and
cdq
push
lods
adc
pop
sar
mov
xchg
or
jl
dec
xor
and
cwde
sub
xor
push
inc
dec
sbb
and
adc
(bad)
dec
sub
inc
jge
mov
es
call
loop
movs
cdq
push
sub
mov
jno
mov
sbb
xchg
dec
stos
dec
sbb
dec
pop
sbb
and
ror
popa
lea
push
push
xchg
cwde
mov
jns
sbb
inc
xchg
mov
loop
daa
cs
jl
je
pop
arpl
and
sub
or
test
add
lds
xor
dec
iret
jne
cmp
mov
jns
jg
adc
in
je
mov
outs
add
pop
mov
pop
dec
sbb
jae
sbb
push
or
mov
or
add
fs
outs
fcmovb
pop
mov
push
test
cmp
test
add
push
bnd
dec
pop
cmp
push
mov
add
popf
adc
sub
scas
iret
add
inc
sub
jb
pop
jo
push
arpl
test
mov
mov
ret
adc
mov
inc
xchg
sub
jb
cmp
inc
or
xor
shr
std
sbb
mov
xchg
movs
push
shl
inc
stc
add
mov
add
add
test
or
or
ret
repnz
das
sub
xor
or
cmps
lock
or
mov
call
pop
lock
cli
aaa
sub
inc
push
or
inc
(bad)
mov
sti
(bad)
ins
imul
push
push
xchg
pop
cmp
pusha
pop
movs
pushw
mov
xchg
cld
dec
es
mov
push
pop
adc
or
jecxz
pop
jge
xor
sti
cs
xor
pop
pusha
retf
enter
popa
popa
bound
shl
addr16
xchg
pop
fistp
inc
and
and
jne
in
sbb
je
mov
push
inc
add
mov
pusha
and
xchg
mov
js
push
dec
adc
mov
sbb
rcr
sub
xchg
and
push
enter
retf
inc
enter
add
add
xchg
xor
add
pusha
dec
pmulhuw
fist
(bad)
mov
push
inc
inc
xchg
mov
mov
inc
push
pop
xor
inc
mov
xor
mov
mov
les
jne
lods
and
sbb
sub
repnz
jb
mov
and
xchg
mov
in
jmp
mov
lahf
push
push
lea
mov
add
test
xchg
mov
in
mov
dec
push
sbb
ja
pop
xchg
hlt
movs
movs
lahf
add
je
xor
adc
xchg
fwait
lock
popf
call
dec
or
adc
push
mov
xchg
sbb
push
push
jle
into
cmp
add
popa
imul
(bad)
and
push
and
daa
dec
push
fdivr
dec
movs
mov
mov
(bad)
mov
and
ins
daa
fcom
jl
rcl
pop
adc
mov
mov
aam
push
sbb
cdq
dec
xor
inc
popa
inc
cmps
push
adc
jb
adc
xchg
jmp
push
mov
loopne
dec
inc
push
push
inc
out
sbb
mov
je
xchg
mul
nop
adc
lea
push
test
repnz
pop
cwde
ins
sub
pop
push
sub
inc
mov
mov
imul
xchg
cmp
add
lods
icebp
jl
add
sbb
mov
mov
pop
mov
xchg
shl
dec
mov
and
xchg
pop
icebp
adc
or
mov
pop
ret
jmp
sub
dec
leave
adc
loop
hlt
rcr
pop
and
push
lods
add
and
lods
cli
push
push
add
or
lea
sub
pusha
and
shl
int
mov
ins
imul
inc
lea
ins
jmp
jb
mov
xchg
pop
enter
add
enter
xchg
nop
cmps
scas
push
stos
push
mov
cmps
aas
cmp
mov
adc
pushf
dec
pop
adc
sbb
mov
(bad)
nop
xchg
ins
pop
in
repz
sbb
inc
xchg
movs
int
mov
add
push
mov
out
loope
inc
or
xor
ret
(bad)
pop
push
push
es
mov
lea
rcl
mov
cmps
movs
or
in
leave
mov
add
aad
movs
xor
repz
movs
or
in
cmovo
sbb
cmc
shr
bound
inc
jbe
rcl
adc
xchg
pop
mov
add
mov
sti
ja
outs
or
ret
cmp
cmp
iret
iret
or
dec
pop
push
popa
imul
or
push
push
std
sbb
cmp
cmc
mov
nop
fdiv
jg
sub
jne
inc
lock
cmp
(bad)
iret
out
pusha
sub
adc
repnz
or
xchg
sub
or
sbb
pop
push
pop
add
fadd
mov
lods
pop
sub
sub
das
call
in
or
in
cmp
and
and
pop
ret
adc
push
push
in
mov
jno
pop
or
mov
mov
lds
sbb
scas
add
pop
push
xchg
add
pop
jne
push
and
and
in
inc
pusha
sub
dec
push
fisub
add
cdq
dec
add
push
xchg
test
and
leave
push
xor
add
dec
and
or
test
js
push
sub
or
sub
call
adc
lea
retf
ins
xor
push
mov
pop
ror
dec
es
jnp
and
jne
pop
aaa
mov
inc
pop
ins
lea
mov
xchg
ror
jl
push
in
cdq
sub
or
or
and
jle
call
loopne
jmp
add
movzx
inc
xchg
mov
sbb
push
or
xchg
mov
or
push
cs
cmp
sub
dec
arpl
mov
daa
ins
iret
dec
je
push
movs
adc
and
inc
or
add
cmp
mov
frstor
mov
jge
xor
movs
in
mov
mov
xchg
loopne
xchg
xchg
push
jge
fcomp
pop
adc
adc
sub
movs
rcl
ret
xchg
sub
xchg
jne
test
icebp
fwait
mov
dec
test
std
mov
in
adc
dec
jg
add
mov
jnp
loopne
xchg
retf
pop
fstp
xor
lahf
push
pushf
and
punpckhwd
add
and
mov
retf
loopne
test
jmp
enter
inc
lea
xchg
sbb
fcomp
cli
jbe
jb
nop
adc
fcom
and
and
push
xor
aam
xor
add
aam
or
adc
outs
or
add
adc
fwait
push
mov
dec
sub
pop
pop
cmps
inc
sbb
test
inc
and
xchg
mov
rcl
xchg
in
dec
push
dec
fisttp
sbb
into
repz
or
leave
add
fsubr
sub
push
retf
sbb
xor
mov
popa
and
sbb
mov
(bad)
xor
pop
push
cs
adc
call
sub
lahf
sbb
jne
jbe
arpl
dec
and
inc
dec
popf
pop
xor
inc
dec
out
jge
leave
and
pop
ror
mov
mov
imul
pop
xchg
leave
inc
dec
inc
jbe
jns
dec
and
fs
or
xchg
pop
clc
add
inc
add
or
and
bswap
adc
adc
dec
or
xor
int
fs
and
and
or
xor
and
sub
adc
sbb
pop
adc
inc
movs
sbb
sbb
test
or
add
add
inc
sbb
test
aam
xlat
nop
add
jnp
data16
idiv
in
daa
rcl
stos
ror
sbb
add
add
adc
pusha
shl
sbb
inc
and
or
test
das
xor
jp
and
and
mov
test
shr
fst
rcr
cli
push
adc
mov
xchg
test
push
(bad)
sub
pushf
add
xor
and
jmp
mov
adc
dec
jp
cmpps
push
cmps
cmp
or
in
les
and
xchg
(bad)
jae
inc
rcr
jne
mov
push
mov
sub
test
lahf
nop
add
dec
sbb
xchg
push
mov
inc
or
mul
fadd
aaa
mov
adc
call
pop
xor
imul
adc
or
enter
or
or
adc
and
or
enter
push
ins
or
adc
jge
pop
imul
clc
ret
push
inc
cmps
or
jnp
push
sbb
push
jge
dec
sub
adc
mov
lods
pop
add
sbb
in
adc
and
add
dec
cli
or
push
test
mov
ror
xchg
fmul
cmp
sbb
imul
bound
cwde
push
stos
jg
push
or
ja
or
ror
shl
adc
add
inc
sbb
mov
and
push
adc
pop
dec
inc
and
sbb
in
jo
loopne
sub
and
push
mov
and
call
push
mov
enter
jne
fcom
adc
push
jb
fdiv
or
fsubr
pop
inc
push
sub
or
or
add
xchg
push
fmul
add
or
jl
jge
adc
jb
push
xchg
mov
ja
lea
sub
adc
dec
adc
cwde
call
sub
push
or
mov
or
adc
enter
or
xchg
pop
jb
or
jo
fwait
(bad)
and
or
leave
adc
adc
adc
add
adc
jb
adc
inc
xor
xor
inc
push
and
adc
(bad)
mov
ja
mov
and
aas
sbb
inc
scas
jl
jecxz
push
adc
inc
jns
pop
stc
mov
in
cmc
enter
sub
test
dec
or
idiv
push
mov
add
pop
inc
add
inc
xor
lods
sbb
sbb
test
jb
or
adc
add
or
stos
sub
or
push
and
sbb
add
sbb
adc
adc
pop
lar
ror
sbb
xchg
pushf
dec
adc
dec
add
adc
adc
push
mov
pop
enter
pop
adc
cmps
mov
adc
sbb
dec
sbb
test
ret
cmc
inc
pusha
push
and
stos
(bad)
jp
or
add
in
dec
daa
sub
pop
in
add
sbb
sbb
jb
or
loopne
xor
xor
aam
and
push
sbb
es
test
mov
nop
imul
push
add
or
fsubr
inc
push
nop
or
or
sbb
cwde
nop
and
pop
mov
fdiv
stos
xchg
sbb
adc
adc
test
movlps
and
cdq
inc
call
in
or
and
xchg
pop
sbb
sbb
jb
or
sbb
jb
pop
and
xor
or
sbb
sbb
in
push
inc
dec
leave
sbb
fs
adc
mov
js
dec
and
mov
dec
and
adc
dec
and
adc
dec
dec
and
mov
mov
retf
pop
mov
js
xchg
dec
and
adc
dec
and
adc
dec
dec
and
mov
dec
and
retf
mov
and
push
inc
pop
and
and
mov
xchg
dec
dec
and
mov
dec
and
adc
dec
and
retf
mov
loopne
adc
fistp
enter
mov
add
jnp
mov
cld
push
push
in
nop
pusha
sub
cmp
xchg
push
(bad)
push
clc
mov
enter
(bad)
js
xor
push
add
fcom
push
cmp
xor
test
mov
fs
rol
pop
int3
or
int3
add
xor
push
enter
stc
xor
enter
enter
xchg
enter
fcmovb
add
retf
xchg
add
and
aas
mov
and
fadd
sbb
pusha
cld
ins
arpl
or
es
inc
aam
sub
sbb
xchg
(bad)
aam
in
jb
fmul
adc
cmp
or
ins
or
dec
call
in
or
sbb
and
fadd
xchg
push
push
fmul
dec
(bad)
rcl
dec
addr16
fsubr
not
push
sbb
mov
jge
ins
dec
add
push
sub
inc
sar
xor
adc
mov
xor
xchg
mov
nop
mov
stc
adc
mov
repz
add
adc
pushf
push
mov
add
adc
sub
scas
sbb
mov
ds
fcmovne
aam
push
enter
stc
add
mov
sbb
xchg
mov
push
mov
movs
and
aas
ja
adc
jmp
mov
pop
(bad)
lods
adc
dec
mov
call
outs
inc
sahf
and
sar
(bad)
neg
xor
or
or
ss
fcmovnu
out
or
dec
and
je
js
sbb
test
push
mov
add
sub
not
nop
xor
shl
mov
add
jecxz
sbb
loope
push
push
int3
inc
add
adc
adc
mov
nop
stos
call
inc
add
jb
push
xchg
jae
pop
push
adc
shl
add
or
ins
or
ret
adc
in
cld
cmp
dec
or
scas
nop
add
stos
fcomp
or
popa
mov
test
adc
lods
test
xchg
sub
add
test
sub
push
xchg
fadd
mov
push
leave
adc
xor
or
fsubr
adc
push
mov
pop
imul
push
popf
sbb
bound
cmps
nop
retf
rcr
shl
cmp
pop
add
nop
arpl
popf
jg
sbb
aaa
movs
mov
xlat
adc
cmp
fcomp
sbb
test
arpl
pop
inc
xchg
and
push
scas
inc
dec
xchg
rcr
fsubr
push
mov
clc
lea
mov
shl
loope
jge
add
inc
and
inc
lea
inc
and
push
enter
jbe
pop
jne
mov
xor
mov
adc
dec
add
and
nop
sbb
jb
sub
repz
pop
and
and
aam
jb
dec
aam
inc
sbb
adc
test
add
add
lods
dec
adc
mov
in
out
push
sbb
lods
sub
adc
mov
cwde
shr
mov
add
dec
rcl
adc
pushf
dec
xchg
out
nop
sub
xor
adc
les
lahf
mov
mov
mov
aam
mov
das
mov
push
inc
sbb
lea
sbb
cmp
rcr
sbb
pushf
mov
ds
scas
and
inc
cs
sbb
and
mov
jns
fs
mov
and
test
or
fist
inc
loopne
sub
enter
enter
jb
fcom
test
int3
aam
cmps
add
movs
or
and
int3
adc
mov
enter
xor
jb
aam
pusha
or
lahf
int3
aam
nop
pop
cmp
icebp
add
push
xchg
mov
cmp
mov
adc
sbb
das
es
xor
or
add
cdq
or
enter
in
xor
pushf
enter
cmp
movs
pop
adc
push
push
mov
bound
push
cwde
aam
mov
or
clc
sub
jbe
add
aas
sbb
pop
repnz
nop
cmp
jge
inc
test
cmp
mov
add
enter
mov
cmp
je
cmps
test
rcl
nop
push
dec
into
push
pop
jmp
add
dec
les
(bad)
jo
rcr
inc
leave
retf
xor
outs
mov
xchg
and
fst
and
enter
shl
xchg
movs
jae
movs
push
mov
(bad)
dec
mov
mov
lea
inc
jecxz
adc
lahf
aam
cmp
ror
sub
xchg
lock
sbb
mov
popf
adc
push
(bad)
fcmovne
jp
imul
mov
inc
mov
les
mov
sub
jno
cdq
or
pop
repz
pop
sbb
pop
adc
repz
test
jns
fnstsw
pop
mov
xchg
inc
ret
jmp
push
int
rcl
mov
lods
or
arpl
jne
adc
or
loopne
push
dec
sbb
mov
lods
inc
push
sbb
test
adc
xchg
data16
shr
jns
mov
jbe
rol
pusha
mov
aam
mov
mov
sub
push
xor
add
push
push
mov
pop
and
or
pop
sbb
mov
pop
scas
xor
sub
or
pusha
dec
outs
dec
jecxz
push
icebp
inc
add
adc
add
pop
mov
jmp
xor
movs
idiv
adc
and
ins
sub
stos
arpl
mov
sbb
jo
(bad)
(bad)
fcomp
add
and
push
and
xor
mov
xor
repnz
test
pop
or
push
dec
pop
or
push
es
cmp
mov
cmp
add
sub
adc
cs
scas
xor
inc
(bad)
cwde
cmps
jns
mov
add
add
cmp
cmp
and
and
xchg
jl
or
call
sar
invd
inc
cmp
enter
icebp
dec
and
dec
fdivr
push
stos
es
xchg
dec
mov
int3
sbb
test
jg
mov
es
and
sbb
sbb
and
push
add
push
fnstcw
or
ret
fcom
sbb
cmp
and
in
int3
and
rcl
(bad)
ret
sub
sbb
add
sbb
pop
je
enter
in
sub
aas
xchg
mov
rcr
and
sub
mov
adc
jle
sysret
test
jne
(bad)
jl
shl
add
enter
jbe
(bad)
and
inc
lds
add
outs
cli
shr
imul
(bad)
stos
jg
push
or
test
or
imul
dec
rol
clc
adc
int
pop
xchg
test
mov
add
loopne
es
iret
loopne
sub
out
pop
add
mov
repnz
adc
push
and
and
and
jb
movs
or
or
enter
add
inc
scas
add
add
leave
add
adc
adc
dec
dec
adc
adc
and
nop
adc
mov
adc
pop
jb
movs
push
mov
ret
xchg
xchg
in
mov
xchg
or
and
jns
rol
mov
(bad)
and
xor
adc
test
or
js
pop
mov
sbb
mov
pop
xchg
les
sub
add
jb
lods
push
cmps
push
lea
add
mov
lea
add
xchg
xor
lea
sbb
rcr
lea
jae
dec
cmp
inc
jecxz
rcl
and
cmovns
jg
add
ror
sahf
jmp
ret
push
jnp
fldcw
add
sbb
dec
sub
inc
push
pop
or
jns
inc
xor
in
and
dec
push
mov
and
stc
xchg
mov
jl
jo
xor
call
shl
inc
mov
out
add
jnp
enter
or
push
ret
sar
popa
sar
adc
mov
cld
add
pop
stos
push
inc
jae
push
or
daa
or
stos
dec
pop
adc
dec
add
adc
xchg
or
xor
xor
test
pop
nop
movs
add
adc
fprem1
cmp
dec
movs
cs
xchg
cmp
push
mov
cs
dec
or
sahf
mov
xor
aad
mov
pop
cmp
dec
jecxz
dec
add
mov
add
jp
push
in
fs
mov
popa
xchg
or
(bad)
jmp
mov
or
add
or
xor
sbb
mov
add
inc
pop
add
in
xor
inc
sbb
lods
inc
adc
fmul
xor
cld
pushf
adc
inc
stc
in
and
pop
cli
jne
lea
mov
psadbw
cli
pop
or
inc
xlat
dec
mov
in
(bad)
and
dec
or
cmp
xor
ja
push
push
push
aaa
push
retf
mov
inc
or
cmp
add
scas
sub
adc
push
sub
pop
push
push
inc
push
sub
add
mov
call
cwde
mov
cmp
sub
aaa
sub
add
mov
mov
clc
jmp
gs
call
in
and
add
push
popf
les
lea
or
sub
test
or
dec
cs
les
add
jge
push
jecxz
or
or
aam
pop
outs
dec
retf
lods
mov
jmp
shl
mov
aam
mov
sar
js
ret
add
aam
xor
or
sbb
add
add
test
das
sub
or
enter
inc
adc
add
and
ret
ret
and
pop
add
and
or
sub
mov
adc
std
fsubr
and
push
adc
xor
loop
loopne
add
fist
add
jge
xchg
cmps
rcr
fistp
xchg
add
inc
sub
mov
dec
pop
sub
test
outs
leave
jns
lea
mov
fmul
pop
loop
ror
inc
or
test
movs
nop
or
sahf
jle
cmp
push
bound
imul
iret
sub
add
or
or
jl
or
lahf
daa
push
pop
or
fwait
xchg
cmp
cmp
add
inc
add
nop
or
mov
pusha
mov
and
inc
xor
push
imul
dec
stos
or
xchg
mov
lods
mov
adc
sub
loopne
(bad)
mov
ja
adc
cli
lea
lds
mov
test
or
mov
dec
es
inc
mov
mov
add
in
push
inc
imul
aad
add
mov
or
outs
and
mov
(bad)
les
xor
add
jne
push
add
arpl
je
dec
mov
jne
jle
cmp
dec
push
mov
call
or
lds
inc
adc
mov
inc
movs
cmp
mov
mov
push
jo
mov
and
leave
repz
add
add
fcomp
mov
add
adc
shr
add
cs
xchg
and
bound
sbb
ret
ret
add
mov
in
mov
add
test
test
iret
retf
aam
xchg
bound
or
lds
add
stos
clc
xor
inc
fcom
add
adc
jno
dec
adc
nop
sub
or
fcomp
cmp
sbb
(bad)
cmp
push
sti
inc
pop
pusha
xchg
jb
xor
mov
and
push
in
movs
imul
jnp
push
es
sbb
pop
rcl
push
shl
std
mov
sahf
jmp
retf
in
adc
add
mov
or
or
and
sbb
leave
push
(bad)
push
sbb
lea
push
mov
dec
inc
mov
sub
pushf
out
dec
shr
xchg
inc
add
dec
sti
lods
jo
(bad)
mov
adc
sub
(bad)
xor
nop
inc
mov
sub
ds
mov
and
rol
add
push
inc
xchg
ss
mov
inc
popa
pop
ror
repnz
jae
ret
xor
adc
in
add
ror
sbb
sbb
jns
jp
jg
int
push
jo
jg
gs
push
sub
jp
jle
icebp
xchg
xchg
jno
call
and
mov
sbb
arpl
sub
mov
push
sbb
mov
pop
or
ss
cmps
cdq
dec
leave
pop
add
push
add
lock
in
xchg
dec
xchg
mov
or
aad
cld
stos
lock
movs
rol
push
xor
in
push
mov
mov
jg
mov
je
outs
pop
das
outs
sbb
cwde
popa
dec
jno
mov
xchg
sub
or
add
sbb
cmp
popa
add
mov
fbstp
sub
cmp
leave
and
jno
add
xchg
dec
add
rol
sub
add
adc
jg
rcr
dec
add
push
out
cs
add
sub
call
pop
inc
jo
retf
test
dec
cmp
bound
cli
sub
or
test
xchg
dec
cwde
xor
and
or
push
add
push
jg
mov
jmp
ja
daa
push
adc
push
sbb
mov
loop
lahf
je
inc
ret
mov
inc
mov
jne
stc
dec
fs
add
push
jmp
fwait
mov
xchg
xchg
dec
(bad)
repz
push
adc
imul
jno
hlt
jmp
mov
sub
push
jg
xchg
jp
add
mov
add
outs
cmp
add
out
jp
sbb
mov
xor
add
fstp
dec
nop
mov
push
dec
movs
popf
add
lods
cwde
add
mov
add
inc
stos
mov
ins
push
jmp
lods
and
movs
sbb
xchg
or
sub
pop
adc
mov
std
add
add
and
cmp
xchg
fild
or
test
xchg
pushf
cmp
push
js
into
mov
xor
mov
jno
adc
test
fcomp
jecxz
fisub
idiv
dec
add
push
push
or
out
ins
mov
shr
(bad)
adc
lods
or
fwait
and
test
adc
ror
push
inc
ret
ficom
push
pop
(bad)
inc
stos
mov
loopne
les
ret
pop
dec
push
in
mov
mov
sub
(bad)
cli
mov
xchg
ror
xchg
and
sbb
jo
shr
push
push
push
add
xor
inc
ror
ret
push
call
xchg
sar
mov
call
cmp
push
sub
mov
adc
add
pop
xchg
or
(bad)
xor
ror
in
push
sub
dec
xor
dec
add
mov
add
call
push
and
stos
imul
xchg
pusha
jbe
jg
and
dec
pop
push
push
push
mov
mov
cwde
push
push
fild
push
pushf
jge
xlat
pop
sub
loope
push
rol
movs
fs
or
jo
and
ins
pop
sub
jo
push
sub
mov
ins
dec
inc
push
add
add
cli
jge
xchg
sbb
adc
inc
mov
cmp
push
push
sar
sbb
and
cmp
push
sahf
into
inc
xchg
sub
pop
icebp
push
lods
and
mov
pop
or
sub
repz
in
inc
xchg
js
inc
cmps
in
fbld
push
lock
and
stos
or
jno
iret
rcl
add
out
out
sub
and
mov
cmp
scas
push
call
xlat
cld
std
stos
cs
cmp
retf
push
add
lahf
test
rol
jb
and
mov
add
jb
inc
pusha
nop
dec
js
cs
add
or
popa
daa
cmp
add
pop
sub
int3
add
push
inc
stos
jno
mov
fsubr
add
repnz
dec
adc
cmp
enter
dec
gs
daa
and
aam
aas
add
aam
int3
push
lea
(bad)
fs
xchg
push
fcom
adc
adc
add
ror
and
pusha
mov
lea
push
cmps
ret
xlat
ror
push
jb
add
leave
mov
jnp
or
mov
mov
xor
pop
jo
cmp
push
je
mov
push
cmp
cmp
(bad)
les
out
add
rcl
mov
sbb
add
stos
cmps
inc
fsubr
xchg
dec
jl
cmps
adc
mov
dec
inc
pop
push
or
or
or
lock
jnp
or
es
js
mov
pavgb
mov
mov
lods
sbb
pop
call
ret
mov
iret
jg
push
add
(bad)
test
cmps
push
(bad)
test
sbb
inc
js
dec
aad
test
pushf
or
and
xor
ror
aas
imul
and
repnz
inc
push
(bad)
test
and
mov
mov
js
jb
mov
mov
pop
lods
neg
jb
lods
div
inc
repnz
push
mov
movs
div
jns
sbb
mul
mov
test
or
not
maxps
push
or
popf
retf
inc
jae
dec
adc
push
test
xchg
sub
in
scas
mov
add
add
mov
push
jo
or
int3
retf
lea
repz
lea
push
loopne
push
xor
mov
cmp
sub
inc
adc
fld
xadd
add
lea
ret
inc
dec
les
jl
add
test
mov
iret
leave
add
add
call
test
cmp
jge
dec
xor
sar
sbb
shl
sub
jne
cmc
lds
add
adc
inc
pushf
and
pop
ins
clc
push
jge
jg
push
mov
pop
dec
mov
and
shl
nop
or
test
les
or
cmp
or
dec
push
aas
loopne
ret
push
xor
and
or
cmp
sbb
pushf
popa
cmp
jle
inc
sti
add
jge
mov
shl
mov
or
les
stos
ss
popa
inc
in
mov
pop
mov
or
jge
cdq
and
ror
mov
adc
fcmovnu
add
loop
adc
push
mov
push
xlat
(bad)
aaa
or
lods
push
mov
mov
push
xor
jge
cmps
mov
xor
call
and
popa
aam
dec
je
ror
pop
fst
fbld
mov
(bad)
leave
lock
nop
add
iret
and
je
adc
cwde
pop
dec
enter
mov
ret
test
(bad)
sub
mov
add
in
in
and
push
fistp
popf
jl
sbb
xor
lock
mov
push
and
xchg
imul
mov
mov
shr
xchg
arpl
dec
enter
or
push
and
xchg
cwde
and
faddp
enter
mov
cmc
sbb
and
and
add
mov
mov
mov
xchg
push
and
push
pop
inc
cmp
out
ret
fs
or
xor
rcr
int3
mov
test
xchg
push
loopne
(bad)
mov
ror
rcl
js
popf
movs
fs
es
pop
add
in
retf
mov
fmul
push
cmp
sbb
mov
mov
mov
das
cmp
adc
pop
cld
adc
adc
or
rcl
test
enter
add
xchg
dec
inc
or
pop
xchg
push
arpl
cmp
or
or
sbb
and
push
push
dec
push
sub
mov
icebp
ins
cmc
inc
outs
or
out
add
xchg
and
test
add
pushf
jl
add
sub
es
addr16
push
rol
fild
cmc
inc
pusha
adc
scas
pop
and
cmc
jl
xchg
data16
dec
or
lock
mov
or
pushf
and
adc
or
dec
pop
ja
cs
leave
ret
add
mov
femms
retf
or
outs
mov
(bad)
and
sub
cmps
adc
ror
nop
ror
adc
adc
inc
outs
enter
xor
push
popa
jo
or
inc
sbb
pushf
or
outs
push
and
push
sbb
imul
and
cmc
(bad)
in
add
out
ss
ret
and
call
sbb
and
xor
pusha
dec
xor
aam
sub
(bad)
scas
lods
cmp
pusha
xchg
out
cmps
and
fwait
popa
addr16
fiadd
(bad)
adc
nop
add
dec
xor
mov
movs
push
mov
mov
movs
mov
mov
sub
cmp
fs
ror
inc
and
movs
dec
pusha
sbb
sbb
sbb
jo
aam
or
mov
mov
call
rol
and
cli
inc
push
jmp
repz
cmp
add
ror
mov
xchg
sbb
sahf
sbb
ins
js
(bad)
loop
loopne
hlt
shl
push
sub
sbb
add
push
int
xchg
out
movs
dec
test
mov
push
xchg
dec
add
les
iret
pop
push
das
in
mov
ds
xor
ins
and
(bad)
fdivr
mov
and
dec
sbb
pop
rcr
xchg
les
mov
mov
fiadd
mov
nop
out
and
ins
xchg
mov
lods
mov
xor
and
mov
sti
push
cmp
xor
mov
dec
leave
jo
in
retf
dec
call
push
dec
fwait
and
mov
xor
and
mov
add
and
mov
pusha
jno
mov
jmp
push
leave
cmp
(bad)
ret
inc
enter
sbb
sbb
adc
dec
dec
add
add
fld
pop
inc
or
xor
push
clc
cwde
and
lock
popa
sub
mov
call
test
pop
sbb
out
cmps
call
cmp
test
mov
in
mov
or
popf
lock
and
shr
test
add
pop
inc
mov
push
xchg
ret
adc
test
xor
or
or
xor
mov
dec
pop
jg
das
push
or
inc
popa
movs
nop
and
mov
adc
mov
xor
add
add
and
sub
xor
cmp
dec
shl
inc
dec
dec
push
shl
pusha
fs
shl
js
in
push
ror
mov
retf
mov
in
mov
mov
mov
mov
jb
enter
jb
pop
cs
loopne
cs
retf
in
in
lock
clc
jb
mov
add
cs
retf
in
adc
sbb
jb
pop
and
sub
cs
retf
xor
cmp
retf
in
mov
mov
pop
pop
pusha
fs
retf
in
push
mov
test
ins
or
test
call
push
mov
cmp
cmp
inc
or
lock
mov
push
add
or
les
loopne
(bad)
mov
and
xor
xlat
loopne
adc
cmp
cmp
inc
and
or
ja
push
cmp
adc
(bad)
mov
outs
cmp
ret
call
mov
inc
lock
bound
inc
inc
add
pop
push
call
js
inc
add
xor
mov
rcr
aaa
stc
push
push
push
in
lds
rcl
or
and
cmp
adc
lahf
scas
movs
adc
or
ret
(bad)
shr
adc
pop
dec
loopne
je
add
sub
adc
or
leave
push
pop
icebp
add
and
pusha
push
xchg
push
xor
ins
in
sbb
and
ror
mov
dec
lods
sbb
inc
mov
push
ins
sub
les
adc
pop
sbb
inc
or
add
push
mov
add
cli
add
cmp
cmp
arpl
mov
xor
inc
sbb
fld
sub
mov
int3
mov
js
sub
jp
push
lods
jmp
mov
or
push
push
dec
add
adc
xor
imul
mov
std
push
sub
add
xor
dec
push
push
or
retf
inc
lock
add
jmp
lahf
xchg
mov
xor
ret
xor
cdq
add
jmp
sar
lods
or
sbb
enter
jns
cmp
or
adc
cmp
mov
mov
sbb
and
fild
xor
and
add
fs
daa
sahf
or
or
out
rcl
inc
sbb
in
call
loop
outs
aas
xchg
sub
cmp
jne
int
xchg
and
inc
push
leave
dec
mov
cmp
add
loopne
jnp
xchg
or
adc
mov
test
mov
push
test
and
sub
cmp
dec
dec
ficomp
shl
push
nop
ds
jo
inc
or
sbb
rcl
popa
in
test
shl
add
rol
cmp
dec
add
or
sar
call
pop
test
iret
fcom
adc
std
jne
sbb
sbb
mov
dec
loopne
popa
fwait
inc
jno
sbb
push
jbe
pop
gs
cmps
add
dec
test
cmp
arpl
pop
lods
push
jo
dec
(bad)
cmp
or
sti
sbb
push
rcr
mov
xor
and
or
fisub
cmp
(bad)
cmp
xor
inc
cmp
movs
mov
lds
movs
popa
jne
call
adc
in
cmp
ret
fist
mov
lods
in
jl
add
pusha
inc
pop
push
loopne
push
ins
mov
(bad)
pusha
pop
lea
push
daa
pop
push
sub
sbb
xrstors
scas
sub
or
adc
das
pop
jecxz
xor
add
cdq
mov
push
mov
mov
add
push
inc
add
dec
(bad)
jmp
add
sub
test
xor
js
imul
jae
enter
fisubr
cmps
xchg
rol
call
les
pop
jb
xchg
xor
dec
sahf
inc
ss
dec
or
push
and
adc
push
sbb
push
fs
and
retfw
pop
dec
and
nop
out
or
jge
or
dec
cmp
jmp
mov
sbb
sub
jnp
mov
lds
dec
lahf
fld
mov
push
adc
cmp
xor
dec
push
push
jmp
adc
cmps
cmps
cld
xchg
ss
enter
or
pop
jo
sub
add
inc
sub
or
xor
out
xchg
or
inc
and
mov
xor
xor
xor
outs
pop
ss
push
mov
inc
and
cmp
loopne
xor
ret
xchg
push
xchg
stos
repz
mov
es
or
push
pop
sbb
adc
jecxz
mov
push
and
lods
add
rcr
sbb
dec
movs
(bad)
mov
cmp
out
mov
mov
adc
push
push
nop
out
enter
dec
or
or
mov
add
cmp
cmp
mov
sbb
and
adc
and
ins
cwde
pop
sbb
pop
push
push
push
outs
push
add
jmp
pop
push
loope
gs
aaa
or
push
outs
xchg
sub
mov
xor
(bad)
jl
sbb
dec
into
jecxz
push
dec
call
or
ds
or
cmp
pushf
bound
xor
push
mov
sub
push
dec
dec
nop
sar
push
(bad)
inc
inc
fmul
jno
popf
aaa
outs
and
adc
or
sbb
inc
and
sub
sub
in
stos
and
pop
add
inc
retf
retf
xor
je
pop
inc
adc
cmp
add
ret
jg
or
in
jmp
mov
or
aas
es
cwde
push
movs
aad
xor
add
sub
add
(bad)
fdivr
in
addr16
xchg
xchg
(bad)
popf
adc
lea
cmp
xor
mul
mov
aam
push
jmp
imul
or
mov
lods
in
or
or
mov
xor
mov
out
sub
ror
dec
mov
or
pusha
sub
les
test
xchg
mov
js
push
loopne
das
in
jecxz
mov
rol
xor
cmp
inc
adc
push
and
cmp
adc
push
pusha
add
jle
nop
dec
enter
or
sub
mov
xlat
int3
add
adc
xchg
shl
add
or
or
push
mov
test
xor
(bad)
(bad)
sbb
xlat
dec
jb
mov
push
cmps
repnz
rcr
xor
out
shl
pop
sahf
fadd
cwde
imul
push
add
adc
cwde
imul
nop
cmps
mov
push
fsubr
or
or
or
loope
loopne
pop
pusha
push
xor
and
push
adc
and
or
add
movs
sbb
sbb
pop
add
pop
dec
xor
popa
inc
pop
push
sbb
add
jmp
in
jmp
call
or
js
xchg
jmp
imul
movs
xor
psubusb
sbb
rol
and
push
adc
adc
adc
cmps
stos
push
or
inc
repnz
sbb
dec
ins
xchg
xchg
dec
cmps
adc
adc
push
pop
sbb
mov
ins
cdq
dec
cmps
xchg
sbb
pop
xchg
test
scas
add
adc
outs
push
cs
pop
mov
add
jne
jnp
dec
and
mov
shr
push
call
push
adc
inc
int
add
mov
iret
xchg
cwde
adc
test
enter
retf
mov
das
lods
cs
cmc
mov
imul
out
test
leave
mov
sub
push
or
xchg
xchg
add
add
and
loop
lea
outs
sub
sub
nop
add
sub
ins
jb
sbb
mov
sbb
fwait
jns
test
jns
add
or
or
push
xor
pop
cmp
addr16
xor
or
into
xor
add
aad
dec
or
jbe
imul
sbb
push
push
mov
dec
sub
inc
dec
je
push
and
sbb
sti
sbb
cdq
test
movs
xor
jmp
aam
mov
xchg
pop
add
jl
push
sbb
add
sub
fbld
mov
add
xchg
fistp
enter
enter
data16
pop
shr
dec
adc
sti
dec
jb
xlat
and
ret
imul
lock
dec
push
sbb
cmp
bound
retf
push
mov
lea
xchg
lock
xchg
lock
lock
cmp
retf
push
jmp
or
mov
in
sub
(bad)
out
mov
and
daa
push
xchg
pop
lea
je
aas
xchg
xor
or
mov
mov
pop
pop
iret
jns
add
push
loopne
in
push
call
add
inc
pop
push
scas
stos
or
mov
lahf
test
popa
add
pop
pop
jp
sbb
popf
pop
pop
les
fdivr
sbb
lds
lds
inc
out
loopne
orps
xchg
fcom
push
sbb
dec
test
jno
push
jns
sbb
add
mov
inc
int
mov
test
mov
sub
adc
jno
(bad)
mov
mov
enter
push
fisttp
nop
xor
call
pusha
mov
pop
int
mov
inc
xor
dec
xor
pop
xor
pavgb
pop
inc
lods
data16
nop
adc
mov
jbe
ret
dec
stos
mov
call
popf
jbe
add
cmp
inc
fcom
sbb
(bad)
out
aas
cmp
sub
mov
mov
test
pusha
or
mov
scas
xlat
pop
inc
(bad)
cmc
push
xchg
push
mov
jp
jae
mov
jmp
fs
test
adc
adc
or
inc
enter
cmp
fmul
idiv
xor
mov
nop
xor
mul
seto
neg
or
push
out
inc
cmp
(bad)
jo
sahf
add
test
jmp
mov
xlat
fsubr
pop
mov
push
inc
shl
xor
mov
xchg
loop
mov
sub
add
fst
xchg
fcmovnu
sbb
leave
loopne
add
popa
mov
mov
rcl
test
int
push
jmp
push
push
fld
inc
mov
nop
jmp
das
sub
mov
pop
into
inc
daa
pop
mov
cmps
push
stos
push
jno
xor
arpl
or
inc
(bad)
push
and
push
add
hlt
aad
sbb
cmp
or
mov
out
sub
inc
loopne
inc
mov
and
or
popa
test
adc
dec
aaa
loope
mov
das
into
cmps
pop
jg
test
sub
or
or
inc
repnz
fistp
loopne
retf
sbb
pop
mov
loopne
add
loope
pop
or
stos
pusha
mov
jmp
or
mov
adc
push
and
test
(bad)
enter
aaa
sub
xor
jne
xchg
sbb
sub
nop
or
daa
dec
das
dec
sbb
mov
lods
cwde
aam
sar
push
je
stos
add
push
lea
fist
xor
fs
mov
or
arpl
fbld
mov
adc
ror
push
lock
add
push
(bad)
int3
and
in
clc
adc
and
mov
mov
and
jne
sub
sub
xor
out
inc
rcr
add
pop
test
cmc
mov
add
add
and
in
ds
dec
rcl
daa
sbb
inc
rcl
lea
push
push
xchg
mov
push
sub
and
das
cmps
xchg
push
pop
lahf
sbb
imul
add
mov
xor
mov
mov
or
jge
inc
push
enter
inc
int3
jmp
fstp
sbb
xor
fiadd
iret
es
enter
das
and
js
shl
jg
pop
mov
mov
xor
push
mov
xor
and
mov
sub
adc
rcl
pop
add
sbb
(bad)
xor
ja
pop
daa
cmp
adc
push
adc
in
pop
push
mov
mov
push
or
(bad)
jnp
pop
sbb
(bad)
rol
push
div
aam
xor
scas
pop
push
sbb
cs
nop
jns
jmp
(bad)
in
call
xchg
dec
jb
sbb
xor
mov
jg
fld
shl
sar
jb
push
stos
cmp
dec
adc
and
adc
or
adc
xchg
and
scas
mov
sbb
jbe
dec
jb
sar
ror
add
test
inc
loopne
push
push
cmp
pop
mov
sub
inc
mov
aad
inc
jmp
xchg
sbb
clc
and
xchg
arpl
in
movs
push
add
sub
pushf
adc
jge
loopne
retf
add
or
adc
fsub
imul
push
and
fdiv
mov
or
pop
xchg
sar
and
shl
stos
jl
add
xchg
das
ins
adc
add
sti
mov
push
add
push
add
dec
pop
sbb
jb
imul
cmp
imul
ror
pop
add
fs
mov
xor
push
addr16
sahf
and
mov
pop
dec
in
mov
push
cs
push
loop
mov
pusha
push
imul
and
int
xor
or
loopne
mov
sub
add
or
lods
lods
xchg
mov
mov
imul
je
stos
enter
xor
push
pop
sahf
cmp
mov
mov
jo
into
adc
jmp
dec
ror
loope
aad
pop
cmp
xor
outs
adc
inc
dec
cmp
or
in
aam
xor
mov
in
xchg
aas
pop
fmul
sbb
and
push
cmp
dec
call
or
es
cmp
adc
retf
cmp
iret
push
xor
and
nop
test
push
inc
outs
cmp
sub
dec
jl
add
mov
mov
out
push
daa
sub
mov
push
and
je
movsx
add
imul
dec
je
shr
inc
xor
mov
in
lea
int3
sti
push
outs
rol
jmp
add
cmp
mov
test
jmp
add
pop
ret
dec
adc
inc
or
inc
ss
jp
mov
dec
mul
sbb
add
lahf
jl
arpl
jmp
and
dec
test
sub
mov
sub
cmp
or
rcr
dec
push
out
or
xchg
pop
xor
fwait
movs
and
pop
add
adc
push
adc
aam
mov
mov
fst
(bad)
sbb
mov
hlt
popa
repnz
inc
hlt
and
and
sub
xor
mov
test
adc
jecxz
mov
add
adc
lea
push
mov
in
and
xor
xor
or
and
dec
inc
dec
adc
and
add
enter
mov
or
rcr
inc
xor
jmp
cmp
lods
scas
outs
sbb
inc
jns
xor
jmp
sbb
pop
and
dec
sbb
in
and
inc
es
repnz
aad
repnz
and
push
lea
push
add
inc
push
add
jns
je
add
add
pop
enter
sbb
push
aaa
sub
sub
cmp
jns
inc
sar
dec
hlt
cmp
dec
dec
ret
mov
jo
outs
dec
and
add
and
fs
add
xchg
adc
inc
add
add
xchg
xchg
sub
inc
push
cmp
or
xor
jl
jne
aas
xor
mov
inc
dec
xor
push
in
mov
jg
jmp
inc
sbb
shr
xor
ret
adc
pop
pop
pop
movs
popf
add
fcmovnb
and
cmp
mov
jbe
jb
fs
sub
dec
ins
call
and
retf
jmp
jg
or
inc
sbb
push
ret
sbb
ret
mov
inc
mov
add
clc
or
xchg
into
jle
xchg
test
lods
inc
push
mov
cmps
push
out
push
sbb
add
arpl
sub
add
in
or
imul
and
js
and
popa
inc
sbb
xchg
dec
es
and
inc
sbb
adc
pop
adc
inc
loope
adc
fisubr
pop
mov
rol
addr16
xor
add
scas
loopne
sub
cmp
repz
xchg
mov
repz
and
rcl
ss
leave
pusha
add
and
add
xor
xchg
dec
jl
dec
jnp
mov
jl
out
adc
ins
push
sbb
or
or
in
xor
mov
int
fwait
push
dec
mov
add
loope
cmp
aaa
or
add
int3
inc
cli
cmp
mov
iret
(bad)
dec
retf
ja
and
ss
inc
sbb
popa
cmps
dec
jl
and
sbb
scas
call
sub
imul
add
sub
std
and
cmp
dec
pop
cmp
and
push
push
or
or
mov
adc
in
aaa
es
iret
popa
sbb
test
mov
or
xlat
fsub
xor
test
xor
jnp
add
retf
inc
rol
mov
inc
sbb
xchg
pusha
fild
cmp
jb
and
fsub
mov
pop
sbb
lods
fstp
sar
mov
jp
sbb
sbb
adc
fneni(8087
aas
cmp
dec
or
push
lea
or
mov
and
daa
jbe
sub
movzx
les
aam
mov
xchg
mov
sub
sub
aas
push
push
and
cmp
add
cwde
lods
fcomi
lahf
cmp
adc
xor
or
leave
ret
xor
sub
dec
cmp
push
fwait
xor
add
sbb
aas
mov
cmps
push
sbb
enter
icebp
or
add
mov
sbb
(bad)
mov
rcl
pop
pop
push
pop
test
push
xchg
inc
or
ret
jnp
push
inc
and
rep
and
xor
in
push
arpl
xor
(bad)
inc
stos
mov
fild
dec
clc
mov
lea
xor
or
or
jns
adc
mov
orps
or
xor
add
cdq
push
pop
out
or
out
mov
push
mov
in
movs
fs
dec
fwait
or
and
aas
pop
xlat
sbb
adc
test
fdiv
sub
push
es
bound
jp
fcmovu
mov
cmp
rol
jecxz
or
rol
push
push
sar
daa
sbb
add
adc
push
cmps
push
add
cli
bnd
jo
push
mov
add
data16
inc
int
aas
push
jmp
cmp
js
inc
scas
push
shr
retf
or
(bad)
ret
inc
cmp
gs
xor
fs
out
lea
cmp
jb
mov
cld
jbe
add
pop
fwait
jle
jo
jb
fidiv
lea
push
ror
ret
inc
or
add
adc
inc
ret
dec
test
push
mov
pop
mov
push
xchg
push
das
dec
and
add
cs
xchg
mov
sbb
push
movs
and
in
inc
pusha
or
push
push
or
jp
mov
xor
cmp
pop
sti
inc
add
ss
dec
xchg
add
xchg
add
pop
add
cmp
(bad)
movs
cld
push
add
push
cmp
and
je
js
test
in
pusha
add
fs
mov
pusha
or
push
mov
test
mov
and
adc
mov
and
lods
lods
sahf
int
jo
mov
or
sub
je
jae
repnz
js
jl
rol
pop
(bad)
jno
jge
fs
test
in
fs
sbb
nop
sbb
(bad)
in
xchg
sbb
mov
ins
fcmove
add
jge
xchg
xchg
or
xchg
movs
and
aad
in
inc
fs
mov
mov
pop
sub
mov
daa
sub
push
mov
and
push
fld
(bad)
pop
iret
xor
xchg
mov
inc
stc
mov
lods
aaa
popa
test
pop
inc
test
out
and
add
cmp
mov
loope
imul
push
mov
xchg
mov
sbb
mov
xor
add
and
sbb
mov
cmp
cmp
inc
cmp
add
push
or
add
inc
cmp
mov
pop
or
(bad)
jmp
push
dec
add
lods
push
ror
push
pop
xor
xchg
push
add
and
sub
push
push
cdq
push
nop
sar
adc
shl
dec
jo
loopne
imul
(bad)
das
imul
adc
jmp
in
cmp
loopne
push
je
and
or
(bad)
fmul
stos
or
adc
adc
in
pushf
sbb
or
js
in
out
or
or
mov
dec
rcr
and
jp
dec
out
pop
or
push
inc
cmp
adc
ss
pop
jne
fimul
dec
sub
xchg
out
retw
arpl
pop
aam
and
jg
dec
mov
loopne
(bad)
dec
pop
push
je
sar
cmp
(bad)
std
(bad)
int3
or
pushf
xchg
lock
xor
jl
mov
add
inc
iret
fidivr
or
lea
data16
or
and
cmp
pop
push
cmp
push
pusha
les
mov
or
lea
aam
sbb
xor
adc
cmp
sbb
push
rcl
push
mov
mov
imul
call
shr
add
adc
sub
mov
leave
leave
leave
leave
int3
aam
enter
leave
fcomp
loopne
or
sbb
push
push
sub
loope
or
xor
pop
inc
xor
loope
ss
dec
pop
es
and
xchg
js
and
push
pop
(bad)
stos
xchg
xchg
dec
cwde
sbb
nop
out
jae
lea
sbb
dec
jns
movs
sbb
cmps
nop
cwde
cdq
nop
test
inc
sub
popa
fld
lods
adc
daa
outs
mov
add
dec
ins
inc
sahf
test
(bad)
(bad)
ds
mov
inc
rcr
mov
lods
in
pop
push
je
cdq
dec
sub
sub
fs
ins
pop
add
xor
shl
mov
pop
stos
mov
lods
std
mov
sub
dec
push
lock
imul
inc
jge
lea
or
jo
push
inc
cmps
call
inc
mov
lea
test
add
xchg
and
lea
mov
push
sub
dec
pop
mov
add
mov
test
mov
xchg
fstp
dec
xchg
inc
call
ja
add
mov
inc
xchg
inc
sbb
fmul
rcl
ror
out
or
bound
imul
sub
push
je
repnz
inc
sbb
sbb
or
inc
ror
enter
push
and
jb
int
xor
mov
clc
add
dec
mov
pop
mov
adc
and
gs
out
push
inc
cld
test
push
xor
mov
sbb
pop
sar
push
inc
dec
shl
inc
push
add
jmp
adc
out
sar
pop
lods
shl
inc
inc
cwde
or
lods
mov
fisub
(bad)
jmp
aad
mov
scas
dec
xor
mov
lods
adc
xor
pop
and
mov
push
gs
adc
daa
enter
add
mov
lods
lahf
mov
daa
je
dec
shr
jmp
test
or
and
push
mov
mov
inc
push
jg
fdivr
mov
jmp
shr
cmp
jmp
daa
dec
test
xor
ss
sbb
test
xor
push
inc
mov
cmp
jo
test
jno
inc
add
push
das
mov
add
mov
jl
rcl
fninit
lea
sub
xor
(bad)
xor
stc
inc
pop
je
push
ja
add
adc
pop
sbb
popf
enter
or
and
xchg
scas
ficomp
mov
sub
xlat
leave
sub
jecxz
adc
shr
ss
xchg
push
retf
in
sbb
inc
adc
pop
ficomp
nop
sub
loopne
retf
cmp
and
fdivr
pop
pop
test
test
ror
(bad)
pop
jle
retf
pop
sbb
les
ss
jns
add
sub
bound
push
sub
cmps
bound
cmps
hlt
clc
retf
mov
sub
ds
sub
sub
pop
mov
call
add
jns
scas
iretw
push
lock
scas
push
and
es
add
fsubr
pop
popa
les
test
jmp
mov
stc
int3
cs
mov
out
daa
sub
das
sbb
jmp
nop
sub
xor
scas
int3
shr
push
shr
mov
push
enter
enter
stos
or
out
sbb
and
dec
ss
dec
shr
jmp
test
sub
or
aas
enter
ins
push
das
add
in
or
das
jge
lock
test
fwait
inc
leave
inc
jmp
adc
cmp
hlt
push
imul
test
or
xor
push
movs
jns
clc
xor
test
enter
shl
jae
sar
shl
daa
xchg
int
call
adc
hlt
push
jo
fild
cmp
xchg
out
xor
lock
les
outs
cmp
xor
cmp
jle
pop
repnz
cwde
jmp
(bad)
call
inc
xlat
imul
out
mov
jb
nop
aas
pop
out
fs
jmp
mov
inc
addr16
jmp
ds
imul
mov
dec
int3
cmp
inc
leave
and
jmp
adc
and
inc
leave
ss
xchg
push
jmp
ds
call
and
cmp
jmp
js
adc
sbb
fwait
aaa
dec
jmp
xor
data16
in
xor
fdivr
xor
and
mov
lea
cmps
pusha
gs
push
and
pop
cwde
cmps
inc
gs
mov
mov
nop
xor
pmulhuw
ror
dec
mov
dec
dec
cwde
xchg
xchg
dec
inc
dec
push
dec
sbb
jmp
push
nop
push
dec
pop
inc
fwait
dec
call
ss
dec
push
dec
cwde
jmp
test
dec
cli
xor
nop
jmp
dec
push
nop
jmp
and
jmp
push
in
add
cmp
or
push
jns
out
xor
adc
push
mov
cmp
cmp
xor
xor
mov
inc
call
dec
and
and
cdq
inc
sahf
sub
push
push
leave
add
cs
xor
or
shl
adc
out
data16
aam
push
dec
mov
call
push
ret
push
or
xor
in
mov
shrd
and
mov
push
shl
and
mov
sub
jb
cmp
xor
xchg
pop
push
pop
dec
push
inc
dec
xor
adc
loopne
jge
sbb
mov
push
inc
inc
(bad)
pop
inc
dec
nop
pop
movs
xor
cmp
mov
sub
loop
popf
pop
pop
leave
je
fs
and
xor
and
sbb
sub
test
and
out
clc
in
bound
arpl
dec
out
rcl
jecxz
retf
mov
or
enter
jmp
push
xchg
dec
and
mov
data16
xchg
xor
leave
mov
add
jo
(bad)
clc
in
sub
sbb
popa
sub
js
xchg
out
lock
jecxz
push
sbb
call
add
loopne
jmp
xchg
push
in
push
and
enter
push
push
mov
jmp
fstp
shl
shr
dec
es
and
xor
jo
jmp
or
enter
mov
sub
stos
enter
sahf
rol
or
add
test
inc
jo
push
inc
push
push
jmp
in
pushf
in
jns
jno
jb
in
nop
dec
push
adc
cmps
add
xchg
pusha
cmp
xor
test
imul
cld
dec
clc
jg
data16
cmp
jmp
nop
add
lock
sbb
push
les
xchg
stc
mov
add
sub
add
dec
mov
in
inc
test
js
push
or
imul
es
and
popf
sbb
mov
jbe
leave
jnp
in
jl
xor
leave
add
mov
popa
jnp
cmp
jg
imul
and
test
push
xor
mov
jns
xor
in
mov
scas
jecxz
cwde
mov
out
mov
call
jno
add
das
add
pop
mov
fmul
xor
loopne
mov
inc
ja
push
or
inc
pop
and
or
xchg
sbb
mov
pop
sub
lock
xchg
or
pop
bound
fs
push
cs
xchg
mov
pop
sub
aas
das
xchg
nop
push
dec
xor
pusha
sub
mov
inc
add
ret
xor
mov
in
js
dec
xor
mov
leave
xchg
pop
xor
jb
mov
mov
cwde
push
and
xchg
mov
mov
push
and
or
or
int3
pop
add
mov
xchg
mov
shr
lods
pop
xchg
and
pop
and
retf
retf
mov
lock
xchg
xchg
sub
xchg
lds
xor
lods
out
xchg
xchg
add
xchg
push
nop
xchg
and
(bad)
pusha
mov
xor
xchg
pop
pop
js
in
out
jne
sbb
mov
or
fsubr
xlat
retf
or
or
mov
rcl
sub
or
shl
xor
cmp
add
lea
mov
add
movs
je
dec
pop
rcr
gs
push
ret
fcom
addr16
lods
lock
mov
ins
add
and
adc
aam
fwait
out
xchg
jge
imul
sub
and
arpl
push
sub
sahf
mov
popf
sub
add
cmp
inc
lods
out
mov
imul
mov
imul
mov
pusha
cmp
push
cmp
ss
adc
pushf
pop
cmp
dec
jle
pushf
aas
push
push
adc
push
jno
ja
mov
pop
inc
push
inc
push
add
jbe
into
adc
lahf
mov
add
jb
outs
and
dec
dec
dec
mov
xlat
outs
iret
mov
xchg
cwde
shl
sbb
push
push
aad
xor
and
xchg
add
push
and
cmps
popf
push
xchg
clc
mov
jle
mov
mov
xchg
push
in
dec
leave
mov
cwde
add
pop
mov
aas
je
adc
jno
movs
setne
ror
aad
out
adc
sub
mov
fmul
test
lahf
add
cdq
xor
cdq
nop
pop
push
stos
push
cwde
stos
imul
ins
sub
push
sub
cmps
dec
jmp
cmp
daa
inc
leave
add
cwde
mov
leave
xchg
cmp
cwde
mov
test
mov
push
and
xor
cmps
clc
jmp
jnp
push
mov
jmp
mov
push
sbb
sbb
sbb
imul
mov
adc
out
scas
or
push
push
xor
push
test
add
sbb
mov
add
mov
mov
and
lock
dec
in
mov
jmp
dec
clc
mov
jbe
lock
and
jmp
xor
stos
fnsave
dec
adc
xchg
mov
sbb
mov
and
mov
xchg
push
and
test
xor
sbb
pop
mov
js
xor
ds
mul
scas
mov
jl
mov
(bad)
mov
popa
int3
hlt
and
cmp
xlat
push
gs
and
dec
rcr
push
fadd
out
xchg
pop
sbb
and
sub
test
js
imul
loopne
sti
in
add
hlt
adc
sub
add
fadd
cmp
xchg
dec
and
sub
mov
mov
pop
mov
push
mov
jo
xchg
adc
cmp
xor
rcr
lods
pop
adc
in
call
rcl
mov
mov
mov
pop
daa
and
ret
cmp
cs
mov
and
test
leave
rol
cmp
jmp
fs
xor
xlat
test
push
loopne
sbb
cld
(bad)
in
mov
push
push
fs
inc
leave
fwait
enter
xchg
fmul
jmp
imul
mov
ret
jmp
dec
mov
aas
movs
jns
push
adc
in
retf
add
sub
call
adc
jmp
fnstcw
enter
pop
lock
or
jmp
shl
push
and
test
fsubr
mov
repnz
xchg
xchg
in
movs
ror
xchg
jmp
push
aad
leave
add
test
imul
xchg
mov
ror
stos
je
int
pop
mov
in
shr
(bad)
scas
call
in
shl
pop
and
jne
xchg
xor
push
jmp
jb
mov
sub
enter
or
push
ret
add
fadd
mov
fcmovnb
dec
call
jne
inc
cmp
mov
cld
and
scas
mov
stc
popf
loopne
push
xchg
pop
dec
rcl
sub
dec
jne
daa
dec
call
mov
mov
inc
push
mov
imul
retf
push
fimul
jb
dec
js
fmul
dec
ficomp
push
cmp
and
jmp
mov
psrld
test
enter
retf
pusha
adc
mov
ins
jl
std
fstp
cmps
xor
ret
cmp
push
fisttp
cmp
movs
enter
cmp
fidiv
dec
test
retf
sub
enter
fst
adc
loope
loop
add
nop
sti
push
mov
mov
test
pop
es
nop
in
or
sbb
xchg
cld
test
loope
test
in
in
cwde
push
nop
iret
xchg
sub
sbb
fimul
mov
dec
call
stos
cmp
rol
sar
fistp
pusha
inc
mov
in
fwait
test
int
jecxz
cvtps2pi
lea
xor
sub
call
mov
xor
mov
or
ret
mov
dec
sbb
mov
jae
pushf
add
sbb
imul
sar
jnp
mov
cmps
loopne
enter
xchg
jl
jmp
in
in
jmp
cwde
jmp
in
mov
in
pop
rol
out
mov
inc
fist
pusha
in
call
ret
icebp
dec
shl
out
xchg
pop
mov
shr
cdq
dec
call
and
jmp
loop
enter
les
out
jp
or
push
loopne
in
repnz
and
xchg
loopne
retf
mov
nop
out
mov
mov
sbb
and
cmp
out
mov
or
movs
div
xor
xor
add
mov
cmp
out
stc
enter
add
xchg
cli
xchg
add
sti
push
cld
dec
mov
fs
dec
cld
call
stc
xchg
and
jl
xor
add
mov
mov
dec
and
dec
or
jecxz
or
pop
add
inc
sbb
sbb
sbb
cmp
xor
shr
push
cwde
inc
dec
add
jmp
add
mov
or
add
imul
mov
or
jmp
addr16
rcr
or
dec
jmp
add
jo
int
shl
add
mov
mov
and
in
call
mov
js
xrelease
add
test
data16
adc
or
dec
pusha
adc
push
in
push
ffree
imul
or
out
out
pusha
or
sbb
add
pop
add
pop
pushf
sbb
lods
mov
or
xchg
pop
js
inc
mov
add
xor
push
ror
popf
adc
call
xor
cmps
stos
(bad)
les
xchg
or
xor
arpl
movs
out
adc
movs
pusha
nop
adc
adc
ja
ss
sbb
mov
in
mov
jno
mov
cmp
mov
pop
dec
ds
outs
ins
out
pop
cmp
retf
or
jl
xchg
retf
or
(bad)
in
mov
sbb
mov
popf
in
sbb
fwait
dec
sub
xchg
sbb
xor
sbb
sbb
dec
xor
ins
push
fs
push
xor
call
pop
pushf
mov
scas
push
out
cdq
xchg
or
pop
or
xor
xor
cmp
inc
int
push
jb
and
inc
push
loopne
and
pop
sub
xor
and
and
and
add
sub
add
(bad)
and
or
and
inc
es
cdq
pop
pop
dec
movs
pop
and
int
mov
adc
xor
and
add
sbb
adc
ret
cld
lahf
sub
shr
push
sub
dec
or
xchg
mov
shl
jle
adc
bound
cld
test
outs
idiv
test
cmp
sar
sbb
cmps
repz
enter
in
out
mov
fild
sub
pop
adc
mov
cmps
push
dec
shr
fdivr
adc
loopne
out
pusha
stc
imul
xor
cld
nop
aam
iret
or
jne
dec
add
sub
into
adc
xchg
xor
inc
push
xchg
lahf
push
xchg
or
fsubr
add
sbb
sub
or
sar
das
dec
cs
dec
ficom
fsubr
pop
mov
(bad)
pop
in
add
and
pop
jne
nop
(bad)
xchg
or
fild
sahf
test
xchg
cmc
and
mov
lods
or
test
lds
iret
xchg
and
sbb
test
sub
les
mov
push
js
lods
mov
test
fwait
ss
add
xchg
sbb
cmp
mov
pop
push
mov
call
cwde
out
jle
pop
xchg
push
pcmpgtb
mov
int
sbb
cmp
jl
loopne
mov
cmp
sub
aas
sbb
jne
push
pop
in
cmp
aas
jmp
fs
lods
cmp
xor
dec
aad
(bad)
pushf
jg
push
xor
add
mov
fisub
fisub
(bad)
iret
movs
call
repnz
ins
inc
fsubr
fs
nop
xchg
inc
adc
fdivr
mov
jp
aaa
test
(bad)
adc
popf
dec
add
xchg
sub
cmp
add
cli
shr
aad
jo
push
dec
lea
std
push
mov
in
inc
push
xchg
arpl
pop
jp
std
sub
cwde
dec
stos
dec
cmp
xchg
inc
and
mov
xor
mov
pop
stc
cld
lods
inc
ins
adc
movs
cdq
inc
cmps
mov
and
in
lea
add
data16
rcl
push
and
dec
ss
and
push
adc
sbb
add
jmp
(bad)
push
lahf
mov
lahf
fwait
es
imul
lods
jae
push
in
mov
mov
ror
and
imul
test
and
std
jae
imul
sub
or
dec
push
rcr
inc
xrelease
push
mov
bound
mov
dec
dec
call
imul
adc
outs
push
adc
test
sub
lock
sub
adc
mov
dec
pop
jb
xor
push
adc
pop
cli
or
pop
in
and
imul
pop
pop
mov
movs
push
pop
push
push
dec
dec
cmps
xchg
ss
push
xchg
inc
push
xchg
data16
push
xor
xchg
ins
cmps
dec
inc
out
dec
xchg
xor
dec
sub
adc
and
in
pushf
push
xor
sbb
cmp
ins
push
push
pop
push
leave
push
ror
mov
mov
and
jl
call
xchg
test
or
in
fldenv
push
pop
dec
xchg
xor
adc
add
cld
in
hlt
in
push
leave
out
cmp
cwde
add
pop
in
adc
mov
push
push
jnp
adc
cmp
mov
fs
test
cmp
les
or
pusha
int3
in
mov
enter
aam
(bad)
leave
xor
arpl
test
dec
sub
in
mov
in
(bad)
in
push
lds
mov
nop
retf
add
mov
mov
mov
jnp
xchg
sub
xor
mov
nop
retf
mov
data16
nop
dec
mov
cdq
xchg
out
mov
rcr
addr16
add
les
push
je
mov
fs
out
cmp
xor
jl
test
fs
clc
out
mov
or
push
outs
shl
dec
mov
push
imul
dec
mov
shr
imul
sbb
cwde
add
jns
xchg
adc
jmp
enter
dec
add
sub
movs
cmp
xor
mov
xor
cmp
pushf
dec
jb
xor
nop
retf
jne
imul
sub
jb
data16
jno
and
push
cmp
stc
sbb
ja
fcom
js
in
inc
call
repnz
in
sbb
xor
jb
xchg
in
jns
jp
mov
aad
pop
stos
sbb
neg
jns
out
clc
out
ins
jle
mov
clc
out
sub
lea
push
add
movs
movs
sub
sbb
xchg
fs
sbb
xor
test
cmp
mov
xor
popf
stos
and
sub
into
push
lods
iret
add
xchg
mov
ret
xchg
push
pushf
sbb
and
add
mov
cmp
fld
push
sbb
lods
mov
mov
jmp
and
jno
test
and
test
pushf
sbb
out
xchg
push
adc
popa
or
clc
dec
xor
mov
inc
jmp
jmp
add
jne
aaa
or
xchg
mov
push
add
and
or
dec
rcl
out
hlt
mov
dec
add
sbb
xchg
or
aam
xchg
fsubr
aad
ja
in
fcom
mov
pop
in
in
or
pop
dec
repz
jmp
xchg
lods
mov
in
jmp
dec
into
add
and
dec
stos
xor
or
and
aam
xchg
clc
int3
call
mov
mov
jle
mov
clc
add
shr
stos
scas
sbb
sbb
or
shr
lods
dec
dec
mov
dec
loop
popa
sub
lea
icebp
hlt
sub
push
ret
jns
inc
push
out
pop
icebp
inc
mov
xor
push
call
bound
push
jo
cmp
pop
mov
xchg
adc
ins
push
add
pop
sub
jl
lock
sub
popf
cld
ret
cdq
cwde
dec
push
vpunpcklbw
push
nop
add
sbb
xchg
xchg
dec
sbb
sbb
es
add
mov
call
enter
lock
in
and
push
pushf
popf
xor
pop
jno
sahf
xor
or
cmps
lods
pop
add
sub
dec
push
push
lods
cmp
push
mov
push
dec
cmp
movs
shl
mov
push
xor
xor
mov
dec
lods
js
out
lds
jp
pop
ss
sub
xchg
mov
sub
inc
jbe
fisub
loopne
dec
cmp
dec
add
add
cmps
and
mov
out
xchg
add
movs
fild
pop
mov
mov
pusha
push
add
bound
or
dec
add
inc
movs
dec
and
dec
mov
adc
mov
movs
rcl
dec
mov
pshufw
push
dec
xor
xor
xor
add
pop
loopne
inc
jg
call
(bad)
dec
push
aaa
pusha
dec
inc
push
push
or
jg
add
pop
mov
(bad)
sbb
and
add
fs
adc
test
jns
pop
gs
add
sub
cmp
push
jmp
xor
sub
jmp
xor
mov
mov
out
add
pusha
sub
sbb
cmp
and
fdiv
fadd
adc
outs
inc
push
jbe
rcl
xchg
inc
jmp
shl
sbb
loope
pushf
pusha
sub
(bad)
in
add
repz
sbb
xchg
xchg
mov
lea
pop
and
jle
and
dec
mov
mov
movs
or
xlat
loop
cdq
adc
mov
mov
cmps
add
push
push
stos
loop
aad
cmps
aas
sbb
dec
mov
nop
sub
mov
adc
cmp
(bad)
sub
or
test
or
in
lods
in
jmp
lods
sbb
jmp
add
test
push
and
xchg
mov
jmp
dec
je
arpl
mov
cmps
retf
scas
mov
arpl
out
fcomp
jno
imul
test
pop
sahf
xchg
cmps
pop
ret
mov
mov
adc
push
mov
jns
loopne
pop
data16
and
pusha
adc
mov
dec
movs
test
xor
xchg
ss
mov
int3
mov
data16
mov
lds
imul
mov
mov
dec
retf
test
push
mov
pop
cmps
popf
sbb
mov
mov
test
call
in
mov
add
or
and
dec
xor
stos
lods
and
push
push
pop
mov
push
mov
(bad)
and
add
mov
cmps
cmp
rcl
sbb
dec
jb
jmp
mov
inc
xor
das
mov
xchg
add
fsub
fs
pushf
jmp
pop
cmc
je
popf
inc
and
sub
sub
and
test
push
popf
pushf
rol
nop
push
push
mov
sub
add
mov
jne
js
mov
inc
jmp
jg
pop
popa
cmp
test
cmp
jg
jmp
movs
loope
pop
fnsave
out
dec
and
fs
add
jmp
lock
add
dec
movs
cmp
xor
push
ror
mov
les
cdq
add
and
add
in
leave
dec
pop
and
leave
ins
mov
and
xor
pop
stos
or
inc
mov
leave
add
cdq
sbb
int3
aad
add
sbb
imul
movs
cmp
add
dec
sub
mov
push
adc
pop
adc
and
push
out
pop
pop
xchg
fsubr
hlt
jmp
sbb
lock
jmp
pop
sbb
sar
jmp
iret
repnz
jmp
aad
sbb
mov
jnp
jmp
sbb
mov
mov
sub
mov
dec
push
movs
call
gs
dec
popf
and
add
push
cmp
sbb
xchg
cmp
mov
mov
push
aam
fsubr
in
mov
cmp
loope
add
jmp
aad
out
fs
test
jecxz
test
ficomp
shr
ret
adc
movs
sbb
sub
fcom
push
lea
outs
ret
fsub
cdq
fcmovnb
mov
cmp
push
or
dec
mov
xchg
les
pop
xor
add
jno
push
cmps
jne
out
ror
out
icebp
and
sbb
ins
call
push
dec
or
or
fild
push
adc
mov
jl
ja
loope
add
test
lods
xor
dec
xchg
adc
sub
cmp
adc
or
fwait
loope
movs
aam
push
mov
xchg
jb
test
sbb
pushf
xor
rcr
xchg
xlat
je
lea
ror
xor
in
xor
daa
xchg
sbb
call
fild
test
inc
mov
iret
push
rcl
xor
jae
xor
(bad)
(bad)
jmp
aas
add
ins
test
lock
or
dec
sbb
sub
test
in
dec
shl
add
adc
stos
adc
in
inc
ror
mov
fadd
inc
sbb
adc
cmc
adc
es
add
pop
scas
es
fdiv
add
and
pop
mov
adc
in
mov
pop
pop
js
ins
nop
sbb
add
mov
ins
movs
xchg
push
mov
pop
dec
jmp
retf
mov
ja
es
pop
xor
call
push
or
inc
lods
or
add
imul
es
pusha
push
jbe
adc
inc
mov
inc
or
or
mov
test
scas
in
and
xchg
dec
and
pop
leave
sub
xchg
xchg
jmp
push
mov
add
jle
ret
pusha
div
aas
jne
xchg
jl
push
enter
add
bound
fsubr
out
push
sbb
mov
mov
mov
mov
xor
and
mov
add
and
adc
lods
jne
popa
xor
repnz
pop
fld
or
ret
dec
mov
leave
adc
(bad)
push
push
sub
add
cmp
push
adc
rol
jo
inc
push
lods
push
sbb
add
mov
sbb
add
cmp
and
pop
adc
inc
and
add
rcl
sbb
sub
and
pop
(bad)
lods
or
test
or
mov
and
cmp
add
adc
test
movs
or
adc
popa
xor
inc
ds
das
retf
mov
aaa
mov
adc
and
in
inc
dec
xchg
or
rol
push
pause
cdq
or
xchg
mov
jecxz
xchg
imul
(bad)
stos
push
mov
shr
or
dec
sub
mov
mov
test
dec
int
ins
out
scas
test
and
pop
imul
inc
push
cdq
mov
xchg
cwde
add
inc
test
or
push
mov
xor
in
lea
mov
xchg
adc
enter
test
adc
cwde
lea
or
nop
adc
pop
push
test
xchg
pop
leave
mov
sbb
push
adc
add
std
xor
mov
xchg
or
add
adc
shr
or
es
sbb
sti
imul
push
movs
adc
pop
sbb
rcr
sub
xchg
cmp
shl
dec
test
pushf
retf
and
pop
mov
push
push
and
fst
pop
sub
ret
sbb
out
mov
mov
sub
daa
and
test
js
push
imul
(bad)
fs
cwde
sub
dec
jns
fisttp
sbb
mov
mov
xchg
push
add
xor
sbb
in
test
imul
sub
and
cwde
dec
clc
sub
mov
pop
pop
pop
das
xlat
mov
movs
inc
jmp
es
shl
mov
add
and
or
push
mov
mov
das
xchg
pushf
(bad)
fdivr
add
push
shr
shr
(bad)
push
cmp
dec
sub
daa
xchg
mov
mov
pushf
cmp
enter
jo
je
pusha
movs
ror
das
xor
xor
sbb
dec
sbb
xchg
xor
pop
shl
mov
retf
shl
xor
jo
xor
rol
das
in
cs
xor
jg
sti
mov
sub
and
cdq
dec
cmps
sub
pop
out
push
retf
retf
and
push
sbb
add
sub
nop
pop
and
and
data16
nop
cmp
cmp
js
pop
sub
in
rol
mov
ds
mov
cmps
sub
jae
ror
into
stos
fisttp
sbb
inc
or
(bad)
sbb
pop
adc
sbb
cmp
sbb
cmp
test
ss
push
int3
cwde
into
mov
icebp
add
jb
iret
hlt
cmp
jmp
fs
add
sub
shl
daa
sar
clc
repz
push
pop
xchg
pop
ins
inc
mov
and
gs
xchg
push
(bad)
jmp
cld
inc
inc
in
enter
test
nop
fs
fisttp
stos
inc
pushf
sbb
mov
pop
pusha
inc
(bad)
or
lahf
and
mov
pop
inc
out
loope
pop
push
push
in
pop
xchg
mov
aaa
push
ja
retf
mov
mov
mov
mov
das
jmp
aad
xchg
mov
push
mov
lea
rcr
mov
and
push
jno
xchg
pop
int3
or
aam
rol
loopne
cld
xchg
mov
or
inc
sub
dec
jg
sti
ror
push
jmp
push
inc
inc
mov
ror
adc
out
sar
mov
call
ret
adc
jg
jle
push
jmp
push
add
call
add
nop
inc
sub
xor
cmp
sar
pop
cmp
jae
push
sti
xor
imul
loopne
mov
or
mov
lods
push
adc
mov
inc
aad
aad
fwait
aad
adc
mov
sbb
sti
adc
mov
xor
push
aam
in
pop
inc
xchg
dec
xor
imul
(bad)
dec
cwde
dec
jecxz
icebp
adc
xor
loop
pop
adc
push
sub
pop
add
cmp
jmp
fs
and
fdivr
les
push
push
pop
scas
aas
es
aaa
push
sar
push
jg
mov
fdivr
test
or
xor
add
shr
mov
xor
retf
in
rol
in
das
lock
ror
dec
rol
fwait
cmp
sub
fcom
and
sbb
add
add
ret
add
fdiv
xchg
mov
dec
mov
push
sub
test
loop
nop
add
aam
add
pop
and
leave
je
mov
jmp
rcr
enter
push
or
pop
xor
xchg
lock
das
and
push
xchg
shl
cdq
and
dec
inc
jns
xor
or
leave
dec
call
push
pop
imul
js
and
push
xchg
call
dec
mov
lea
mov
jge
jne
test
push
fcomp
xchg
mov
or
jnp
out
inc
and
sbb
or
into
rol
jg
(bad)
into
push
add
xor
sbb
mov
loopne
test
or
shl
or
scas
dec
fsub
and
retf
sub
sbb
js
add
hlt
jg
scas
adc
ret
cmp
test
jns
push
out
inc
sub
icebp
jg
lea
test
mov
xor
lock
daa
movs
push
pop
push
mov
jne
adc
add
mov
scas
jecxz
pop
xor
push
dec
in
pop
iret
in
xchg
cmc
in
or
rcl
or
dec
add
adc
mov
or
fistp
(bad)
or
lock
loopne
das
cmps
mov
add
fimul
add
cld
loopne
retf
repz
xor
lock
pop
xlat
add
or
and
pop
ins
and
sbb
gs
rcl
lods
xchg
retf
mov
lock
or
test
mov
and
xchg
lea
mov
loop
or
push
or
clc
cmp
dec
adc
repnz
inc
hlt
push
push
stos
add
jle
js
jno
inc
fs
inc
jo
icebp
mov
adc
push
retf
or
xor
push
enter
call
or
add
dec
sub
sub
sahf
add
mov
call
call
adc
inc
ins
add
and
dec
repnz
adc
push
in
push
sub
push
pop
and
cmps
add
cmp
sbb
cmps
ins
cwde
and
nop
or
lock
jns
imul
test
ss
in
data16
pusha
inc
inc
and
jecxz
lods
adc
or
xchg
fadd
cmp
fdiv
fisttp
(bad)
pop
xor
push
or
fcomp
fwait
and
add
lahf
dec
dec
fcom
add
xchg
xchg
adc
out
pop
sbb
and
(bad)
(bad)
cmps
or
call
out
fistp
or
mov
pop
mov
movs
imul
adc
and
push
sub
sbb
add
fdiv
adc
call
enter
adc
sub
adc
inc
nop
(bad)
and
mov
push
jl
sub
inc
xor
(bad)
mov
add
call
std
mov
cmp
mov
pop
add
xlat
or
ds
xor
aam
cmp
pop
or
mov
in
push
(bad)
out
aaa
mov
add
add
enter
mov
pusha
inc
sar
pop
shl
cwde
or
mov
or
les
xor
xor
mov
aaa
test
stc
xchg
sbb
pop
rol
mov
dec
sbb
xchg
cmp
mov
adc
test
das
rcr
dec
xchg
jo
or
cs
repnz
mov
adc
iret
dec
rcl
(bad)
imul
mov
xor
dec
aam
adc
mov
(bad)
adc
xchg
dec
mov
jmp
xor
mov
push
or
cwde
adc
and
pop
push
xor
push
out
xor
rol
dec
mov
inc
(bad)
cmp
movs
nop
add
sbb
cmp
in
mov
(bad)
mov
movs
or
mov
cmp
xor
dec
lods
bound
mov
ins
xchg
and
pushf
cmp
adc
sbb
mov
arpl
loope
ja
xchg
(bad)
mov
enter
je
xor
dec
outs
inc
or
sbb
xchg
and
xchg
push
aas
pop
enter
mov
pop
movs
cdq
and
sub
xchg
fs
fsub
movs
or
sbb
mov
xchg
les
out
sub
sbb
mov
mov
inc
(bad)
sar
inc
jmp
mov
movs
push
or
jle
rol
push
call
in
inc
push
movs
pop
sub
vpshaw
add
rcl
pop
jb
xor
sub
jecxz
dec
or
xchg
imul
xor
sub
adc
inc
push
mov
retf
dec
dec
dec
fiadd
pushf
or
mov
das
add
add
pop
xchg
add
stos
or
push
cmp
push
xor
push
leave
add
sub
mov
mov
popa
add
jg
dec
pop
stos
add
xor
ins
cmps
or
or
adc
push
dec
pop
fwait
aam
add
and
shl
sbb
add
sbb
sbb
sub
pop
call
ret
ret
ins
xor
aad
xor
or
xor
mov
out
pop
xchg
inc
lahf
xchg
mov
inc
scas
lds
ss
mov
dec
add
mov
sbb
fwait
test
add
movs
push
inc
mov
loope
loop
test
and
in
je
mov
jb
cmp
push
adc
mov
(bad)
and
jg
pop
enter
inc
add
sub
xchg
pop
jmp
shl
das
iret
cmp
fadd
and
jo
dec
pushf
cmp
fincstp
aas
mov
mov
rol
push
jb
enter
pop
dec
rol
sar
dec
xor
adc
cmp
movs
add
inc
fst
loopne
inc
push
inc
(bad)
mov
adc
int
repnz
sub
cs
add
inc
sub
in
inc
and
repnz
adc
jb
dec
enter
out
xor
add
fsub
adc
out
push
lds
dec
or
dec
and
inc
(bad)
push
xor
and
dec
lods
nop
fisub
add
mov
adc
pop
adc
dec
call
and
outs
pop
pop
pop
mov
dec
int3
in
add
inc
push
adc
rcr
rol
loopne
xor
cdq
jne
or
stc
pusha
(bad)
xchg
and
adc
movs
scas
dec
pusha
adc
and
add
sbb
(bad)
dec
sbb
push
push
arpl
retf
pop
cmp
not
jge
push
loopne
jne
pop
inc
lods
push
es
in
push
push
or
xchg
push
inc
dec
in
add
jb
int3
int3
push
stos
mov
xor
outs
sub
aam
test
inc
mov
lds
sub
mov
add
sbb
inc
pop
add
retf
mov
es
pop
add
mov
cmp
repnz
rcl
in
and
push
push
and
mov
inc
enter
pop
jno
adc
nop
sbb
in
fild
add
imul
and
sbb
enter
add
data16
inc
pop
pop
jne
test
xchg
scas
sub
and
std
js
aaa
(bad)
in
retf
pusha
inc
jo
push
mov
mov
dec
stos
shld
push
nop
push
mov
mov
gs
jno
enter
sub
scas
nop
nop
inc
xor
popa
sub
scas
mov
jno
push
xchg
sub
xchg
sbb
adc
push
aad
push
dec
push
jmp
dec
call
inc
call
xor
and
pop
aaa
or
movs
pop
ret
pop
push
jne
movs
add
shr
pusha
add
pop
arpl
pusha
add
dec
mov
adc
pop
loope
sbb
push
imul
or
adc
mov
dec
cs
fs
rcr
lahf
stos
rcl
push
lahf
pop
sbb
push
jmp
lock
xor
or
in
in
nop
inc
xchg
mov
dec
add
inc
mov
pop
les
pusha
lods
das
mov
mov
imul
mov
add
pop
xchg
in
mov
dec
sti
push
(bad)
and
fs
xor
daa
pop
jp
xchg
fcom
xor
pop
repnz
mov
xchg
mov
lock
and
fdiv
and
add
fistp
jne
push
mov
shr
push
pop
in
pop
out
sub
or
pusha
pop
mov
pusha
sub
adc
xchg
xor
aam
xchg
or
inc
push
xor
sub
mov
add
adc
cdq
cli
mov
mov
hlt
push
mov
push
add
or
aad
cmp
jg
sbb
gs
int
lods
sbb
xor
mov
or
movs
aad
mov
or
xchg
inc
ret
loopne
mov
dec
in
adc
or
inc
rcr
ins
pop
xlat
xchg
sub
jecxz
adc
push
xor
inc
mov
xor
gs
adc
sub
mov
add
dec
mov
sbb
pop
and
or
pop
mov
add
push
jo
push
test
push
adc
mov
lock
xchg
mov
in
fs
sub
adc
test
add
adc
cwde
adc
jne
inc
aaa
jno
movnti
jb
push
fst
mov
pop
push
and
mov
pshufw
test
push
cwde
sahf
stos
sar
xlat
xchg
les
xor
cli
add
ss
jg
nop
push
jmp
cmp
cwde
pop
sub
push
add
imul
fst
add
and
mov
mov
push
test
mov
lock
sbb
and
gs
sbb
shr
popa
fbstp
dec
cwde
nop
add
sbb
loope
inc
test
sbb
sub
sub
mov
xchg
dec
jne
sbb
sbb
cmp
fs
inc
stos
idiv
jl
cmps
ror
adc
pop
or
push
in
push
ret
in
xor
cmp
rol
mov
ins
adc
rcr
jge
loopne
jno
addr16
in
loopne
jno
push
dec
push
and
icebp
and
xchg
xor
jge
shl
push
lds
and
and
pop
repnz
stos
jge
loopne
ins
sbb
xchg
fs
imul
jg
mov
adc
loopne
push
or
test
cmp
pop
mov
xchg
popf
mov
imul
jmp
jnp
pop
repnz
pop
mov
jmp
enter
lds
jmp
push
sub
dec
and
inc
xor
inc
adc
daa
cs
xchg
and
inc
lds
cmp
push
push
lock
xchg
pusha
inc
call
adc
mov
popf
lods
add
xor
aam
dec
aam
inc
dec
add
xor
mov
cmp
or
jecxz
and
sbb
push
jnp
add
cmp
sahf
adc
xchg
ret
dec
adc
sbb
adc
mov
into
add
nop
or
push
jne
cmp
movs
fst
mov
and
leave
cwde
in
inc
gs
std
adc
imul
mov
aad
lock
fadd
in
add
push
mov
sbb
in
std
cmp
gs
push
and
mov
cmp
pop
mov
add
and
nop
jg
add
add
pop
ret
add
xor
mov
cmps
in
retf
call
push
push
mov
in
pop
test
dec
jg
jge
xchg
add
mov
mov
add
sub
test
cmp
sbb
neg
leave
dec
or
outs
xchg
cmp
dec
push
xchg
mov
push
jo
sahf
out
xchg
ror
xor
or
jns
in
fmul
adc
jno
movs
fmul
add
cmps
mov
popf
mov
and
sub
or
loop
outs
call
sub
lock
loope
mov
mov
mov
xor
nop
inc
adc
xor
fcom
aam
dec
xor
xor
xor
sbb
xor
dec
rcr
push
mov
or
xchg
mov
pop
cmp
xor
or
dec
data16
jne
adc
jmp
repnz
push
rcr
jle
in
or
push
inc
movs
mov
mov
xor
movs
rcl
adc
retf
shr
xchg
or
inc
test
into
jb
fdivr
jecxz
push
jl
clc
lock
xor
jo
inc
in
mov
out
aad
fs
push
cmp
cmps
mov
sub
ret
test
sahf
outs
jb
jnp
mov
inc
sub
add
mov
mov
lock
pop
sub
push
and
adc
push
pop
sub
ffree
fldcw
and
xchg
addr16
sub
or
int
fst
arpl
stos
cmp
push
pop
fsub
cmp
add
adc
or
mov
xchg
in
imul
or
xlat
shl
hlt
shr
jnp
loopne
xor
je
sbb
inc
ss
aas
in
or
loopne
fcom
enter
nop
les
mov
dec
cmp
cmp
add
in
out
jns
push
call
push
sub
stc
xchg
add
cmp
sbb
add
mov
fcom
sbb
rol
inc
push
or
or
sub
dec
in
ror
and
and
xchg
sbb
test
sub
adc
adc
mov
xor
js
sbb
popf
movs
inc
leave
inc
xchg
adc
mov
mov
sbb
pop
adc
ror
mov
cmp
add
push
enter
add
add
mov
int
or
push
xchg
mov
mov
test
adc
pushf
mov
cmp
popa
adc
cmp
add
ins
test
cmp
add
inc
mov
cmp
jecxz
xchg
xchg
or
xchg
mov
add
xor
jo
xchg
int3
or
scas
or
or
ins
or
adc
sub
add
or
mov
pop
(bad)
mov
sub
lahf
out
add
push
inc
out
movs
jecxz
adc
xchg
dec
cwde
mov
je
pop
neg
xor
sbb
sbb
sbb
sbb
rcl
aas
add
cmp
retf
pop
mov
test
and
mov
mov
xchg
je
and
pushf
stos
mov
and
add
daa
test
pop
pop
mov
mov
mov
jb
imul
lahf
mov
inc
dec
xor
xchg
inc
sub
fadd
xor
jns
mov
in
movs
xchg
dec
xor
pop
mov
cmp
fmul
push
sbb
xchg
ss
pop
dec
int
push
loopne
out
sbb
push
xchg
fcmovbe
jbe
addr16
mov
dec
push
dec
rcl
or
xchg
pop
out
(bad)
ror
push
pop
mov
pop
loopne
in
mov
les
lock
and
shl
ror
dec
push
and
sbb
(bad)
push
sbb
or
mov
mov
push
movs
cmp
repnz
mov
adc
in
sbb
outs
xor
enter
cmp
jb
ret
add
mov
rcl
sbb
rcl
std
daa
jg
das
adc
mov
pop
xchg
shl
in
mov
pop
mov
jmp
sub
adc
add
adc
pop
sar
mov
pop
fs
add
fsub
mov
push
loopne
inc
mov
les
push
in
int3
sbb
push
in
mov
pusha
out
fcom
retf
push
popa
sbb
xchg
ret
add
mov
sbb
sbb
pop
pop
adc
pop
xor
adc
ret
fdivr
aam
pusha
push
pop
and
push
jns
sub
add
inc
rcl
sub
jno
movs
xchg
ror
jbe
add
mov
popf
inc
add
mov
mov
(bad)
in
add
inc
push
cmp
aam
jecxz
and
arpl
cmps
fisubr
pusha
mov
int
or
into
mov
add
inc
arpl
push
dec
call
add
jo
arpl
or
mov
or
xchg
and
dec
call
jb
rol
bound
or
jle
add
test
cmp
jbe
push
sbb
mov
sub
cmp
jbe
call
sti
jne
jmp
sub
adc
iret
mov
push
dec
push
push
bound
jbe
cmp
inc
and
popw
push
in
fidivr
inc
clc
add
sub
cld
cmp
push
inc
inc
push
imul
xor
add
push
xor
aaa
shl
xor
adc
stc
cmp
clc
add
jbe
(bad)
mov
jg
adc
jp
push
shl
call
fnstsw
ficom
jecxz
rol
clc
pop
dec
mov
add
movs
adc
loopne
dec
sub
(bad)
fbstp
pop
mov
mov
mov
dec
scas
mov
adc
lock
xchg
mov
push
sbb
and
add
xchg
add
cmps
and
jl
jo
add
movs
cld
mov
inc
rcl
xor
and
push
mov
cmp
inc
sub
sbb
aam
jmp
pop
and
mov
mov
adc
loope
jl
or
mov
lahf
inc
rcr
int3
enter
push
cld
or
call
sbb
lods
xchg
call
adc
shl
or
pop
xor
test
dec
dec
call
ins
jle
xor
dec
pop
and
xor
xor
fadd
loop
add
add
pop
mov
in
mov
mov
push
or
or
mov
arpl
(bad)
fwait
js
popa
(bad)
mov
pushf
sub
rcr
jp
push
xor
jmp
movs
iret
shl
aas
add
or
sub
xor
mov
xchg
push
fsubrp
dec
and
movs
ins
xlat
jle
ds
ins
push
enter
add
stos
test
sub
add
inc
jo
pop
push
inc
test
je
mov
shl
xor
push
adc
adc
inc
inc
jne
mov
push
fiadd
dec
add
sbb
push
fsub
mov
pop
mov
pusha
fimul
cmp
cmp
sub
retf
inc
pop
and
in
cld
and
mov
xchg
ret
(bad)
in
mov
sbb
push
retf
xor
push
leave
fldcw
repz
mov
mov
jb
and
test
mov
xor
call
add
add
and
sbb
cmp
push
jb
add
dec
push
not
or
sub
add
scas
rol
xor
shl
shr
loopne
jbe
ret
shl
test
lahf
jns
(bad)
lock
or
js
add
push
or
jne
dec
test
jmp
adc
ror
push
mov
pop
jge
cld
cwde
mov
stos
or
push
mov
pop
nop
shl
mov
and
ror
xchg
(bad)
bound
push
loopne
mov
mov
or
dec
inc
leave
dec
mov
dec
push
addr16
je
loopne
ins
jne
cmp
adc
dec
or
adc
dec
imul
sbb
cmps
xchg
movs
add
clc
or
icebp
fs
jo
sbb
dec
cmp
mov
and
iret
pop
push
sub
push
mov
mov
mov
push
jmp
std
jmp
cmp
stos
lock
pop
jbe
mov
sub
pop
xchg
mov
out
mov
je
call
es
and
add
or
stos
jne
adc
sbb
pop
sbb
or
inc
inc
mov
push
cli
mov
cmp
push
mov
mov
addr16
xchg
or
call
clc
add
pop
jne
add
xchg
dec
fadd
dec
not
ror
sbb
jb
inc
xor
xor
inc
loopne
cmp
sbb
popf
mov
xchg
adc
xlat
xchg
daa
clc
fwait
adc
xchg
and
jle
xchg
adc
dec
outs
lahf
call
out
push
cmp
addr16
and
xor
push
or
fwait
ret
test
push
sub
jge
xchg
adc
and
push
adc
dec
or
ret
push
sub
xchg
and
cmp
or
xor
or
xchg
hlt
jns
mov
ret
or
mov
cmps
or
sbb
and
retf
nop
test
fsub
sbb
fdiv
in
out
cwde
push
loope
aam
add
int
lahf
add
hlt
mov
push
hlt
mov
adc
inc
add
sub
or
add
mov
cmp
mov
pop
and
shr
sub
mov
dec
shr
add
and
shr
data16
outs
xor
mov
js
lds
scas
clc
mov
add
mov
inc
mov
cmps
int3
mov
fisttp
shr
pop
add
add
dec
mov
daa
add
xchg
inc
aas
dec
adc
not
and
aad
adc
ret
hlt
inc
inc
sub
mov
sbb
or
add
pop
pusha
ins
inc
or
cmp
in
push
adc
add
mov
cli
jne
inc
pop
and
test
loopne
jae
pop
sbb
dec
push
(bad)
pop
or
call
cmps
pop
push
or
inc
jo
jmp
add
sub
movs
int
aaa
or
outs
cmp
jne
push
scas
rcr
sar
dec
mov
mov
or
lods
fs
in
sahf
add
jp
add
push
in
cmp
mov
ins
ret
pop
dec
jnp
add
add
and
lock
push
pop
add
sar
ficomp
rol
fwait
and
and
mov
into
pusha
sbb
adc
mov
or
sub
or
sub
push
xor
xor
push
sbb
mov
add
mov
jmp
or
mov
sub
js
adc
jbe
add
pop
stc
mov
add
loopne
aaa
mov
(bad)
sbb
sbb
stos
jge
fdiv
mov
in
and
push
or
mov
add
dec
fsub
(bad)
cmp
jb
test
push
pop
add
pop
xchg
dec
add
or
cld
dec
pushf
xchg
in
ss
repnz
ret
xchg
pop
loop
or
inc
pop
lock
mov
pushf
loopne
mov
addr16
mov
mov
retf
bound
loop
adc
enter
dec
add
aam
mov
push
or
jae
xchg
mov
ficomp
pop
sub
sub
ret
loopne
adc
pop
dec
dec
repnz
nop
cdq
xchg
sub
or
mov
add
loopne
inc
pop
loop
cmp
rcr
adc
clc
pop
ins
lds
mov
jge
xchg
rcr
les
nop
call
imul
sub
dec
add
sbb
sbb
fcom
jne
push
(bad)
loop
out
add
or
adc
mov
pusha
retf
popa
es
mov
repz
add
js
stos
inc
lock
sub
sub
fcomp
mov
imul
push
js
stc
icebp
loop
pop
or
into
mov
sbb
add
int3
xor
xchg
mov
push
shr
fcom
rcl
jl
test
xchg
mov
cmc
ret
cmp
mov
cmp
adc
or
push
or
and
dec
sub
dec
adc
ret
jno
sub
call
(bad)
lods
xor
int3
inc
sub
inc
and
call
test
mov
pop
int3
faddp
rol
in
jbe
pushf
xor
scas
pushf
lea
and
jbe
stc
inc
mov
hlt
jl
inc
jnp
push
sbb
lock
ins
cmp
lahf
adc
sahf
lods
into
cmp
and
imul
mov
std
imul
jmp
dec
jo
lds
mov
aaa
sub
das
iret
inc
or
inc
pop
cmp
mov
add
pop
or
test
jp
lods
adc
or
bound
push
arpl
sub
jne
pop
or
gs
cwde
sub
mov
inc
mov
(bad)
lock
inc
mov
sbb
inc
jmp
sub
cmp
add
push
jb
and
stos
and
adc
ret
pop
jnp
push
push
fdivr
dec
xor
dec
push
fisubr
js
jp
mov
mov
push
push
popa
xor
push
cmps
xchg
(bad)
iret
test
add
mov
out
shr
mov
ins
rol
push
iret
jnp
mov
push
sub
or
xchg
arpl
je
dec
push
ins
mov
ins
xor
inc
xchg
push
sbb
fisub
push
add
outs
rcl
dec
pop
sbb
push
cmps
push
sbb
sbb
sub
outs
mov
sbb
and
mov
stos
or
ins
mov
dec
gs
dec
and
cmp
xchg
ins
mov
or
push
dec
shl
enter
inc
icebp
imul
aas
xchg
inc
xchg
xlat
sahf
or
inc
adc
push
xor
adc
mov
adc
ins
xor
inc
xchg
pop
aaa
cld
cmp
je
nop
cmp
push
inc
add
jbe
shl
cmp
mov
stc
mov
jecxz
test
dec
jne
mov
sahf
ds
cmp
mov
jecxz
adc
sub
mov
jbe
(bad)
es
add
jb
(bad)
fiadd
sahf
out
hlt
xchg
pusha
dec
or
push
sub
std
imul
xor
dec
mov
ins
add
je
xor
xor
push
fwait
jg
cs
fisubr
sbb
pop
push
aas
mov
push
xchg
mov
xor
lea
inc
jo
or
cs
dec
add
cmp
rol
sub
cmp
neg
push
out
jge
jb
mov
or
inc
mov
scas
jo
pop
std
out
repz
or
sbb
clc
pop
push
mov
add
aad
xor
shr
pusha
push
fcomp
(bad)
mov
sbb
xchg
inc
call
sbb
mov
jbe
hlt
inc
lea
push
mov
mov
pop
call
add
inc
shl
add
sub
jbe
jbe
fcomp
jnp
cmp
fld
leave
add
xchg
addr16
in
mov
push
sub
and
jmp
in
adc
aas
add
mov
dec
jb
clc
ds
(bad)
xor
mov
xchg
adc
mov
ja
adc
cmp
cmp
push
jle
test
or
dec
mov
xchg
jbe
mov
(bad)
loope
push
fcmovbe
call
imul
icebp
mov
out
or
mov
fistp
ror
aaa
rol
mov
or
test
(bad)
popa
ins
mov
mov
sub
mov
cmps
sahf
test
or
add
mov
ror
jae
cmp
loope
push
pop
lock
lock
jb
call
or
push
jl
xor
call
shl
push
imul
push
cmp
jae
add
jo
mov
aad
nop
std
dec
mov
add
dec
repnz
jne
mov
out
ins
outs
test
clc
shr
push
jne
mov
loop
cwde
push
(bad)
(bad)
cmp
pop
mov
dec
inc
clc
jno
mov
aaa
imul
sub
inc
mov
add
dec
sbb
popf
sti
aad
in
ins
sti
xor
ja
sar
dec
js
or
mov
push
mov
cmp
lea
ins
test
push
lock
adc
mov
mov
inc
cdq
and
rcl
in
pop
in
std
fs
sbb
dec
push
rol
mov
movs
shl
in
cmps
mov
pop
push
je
adc
out
add
cmp
add
std
imul
and
jge
clc
outs
cmp
sar
ror
xor
mov
ins
add
sbb
sub
ror
cmp
pop
inc
jge
cmp
test
pop
sbb
push
push
sti
add
outs
gs
sub
inc
sti
mov
cmp
cld
je
cmp
ret
icebp
add
adc
loope
add
xor
xchg
int3
mov
sar
cwde
add
dec
out
add
dec
xor
stc
xchg
stos
cmps
jo
hlt
rcl
xlat
dec
hlt
jmp
mov
sbb
mov
dec
mov
mov
dec
push
xor
jo
add
or
ficomp
icebp
inc
jb
mov
and
cmp
retf
loopne
imul
push
outs
sbb
or
inc
mov
or
shl
add
pusha
jo
aas
and
jecxz
pop
sub
push
in
not
fsubrp
repnz
sbb
sbb
js
and
inc
and
jb
mov
js
(bad)
lea
inc
dec
add
mov
data16
sbb
test
repz
adc
(bad)
add
rol
data16
call
bound
dec
sbb
ror
pop
sbb
jbe
jae
sbb
loop
jb
mov
es
or
pop
hlt
lods
push
retf
adc
(bad)
ss
and
cmp
sub
sub
add
push
cmp
push
cli
jp
loop
test
fisttp
cmp
jbe
sub
nop
mov
mov
inc
cld
or
sbb
and
imul
dec
add
or
fwait
cli
pop
add
data16
pop
jmp
ficomp
jmp
ds
aam
sub
mov
xchg
mov
inc
mov
pop
jmp
sbb
or
or
stos
fadd
aam
or
add
das
jl
mov
int
cmp
(bad)
mov
sbb
push
adc
mov
pop
jnp
jmp
push
ins
or
pop
xchg
and
sub
and
pop
daa
lods
and
mov
push
mov
test
push
cmps
leave
fisttp
sub
mov
add
push
imul
loopne
jmp
retf
shr
push
(bad)
cmp
xor
and
sub
add
aam
sub
jns
sub
nop
add
add
add
add
inc
add
add
or
inc
push
dec
mov
push
sbb
xor
and
adc
loop
mov
in
inc
mov
xor
xor
loope
push
mov
sub
rol
call
jbe
imul
stos
aam
mov
sbb
shl
pusha
xchg
test
sub
loop
or
fisubr
js
xor
scas
fimul
xor
fdivr
xor
rcr
pop
call
add
rcr
fstp
imul
jmp
xchg
pop
and
sub
jp
iret
jbe
and
into
mov
push
test
loope
mov
(bad)
mov
je
jle
inc
cmp
mov
cmps
or
ror
add
pop
(bad)
fcmovnb
jecxz
add
fistp
cmp
ficom
pop
add
stc
lar
cmp
cmp
add
push
pop
cmp
cmp
or
or
cmp
cmp
or
push
pop
or
dec
push
mov
or
cld
pop
in
ins
int3
xor
add
inc
xor
mov
mul
int3
int3
ss
(bad)
sldt
and
mov
cld
jp
(bad)
pop
shl
pop
push
movs
shl
or
pop
pop
jg
fadd
js
daa
mov
mov
add
fild
or
ins
enter
add
or
pop
jp
cmp
je
or
in
jo
sbb
add
rcr
xor
or
add
mov
(bad)
sbb
jb
into
inc
inc
mov
ret
fcom
jle
ss
mov
pop
mov
je
push
jo
je
sbb
pop
or
call
and
rcr
loopne
dec
mov
cmp
jne
add
xor
in
push
(bad)
inc
sbb
and
pop
and
jno
ror
popa
sbb
test
repnz
sbb
and
xor
mov
add
xor
inc
xor
pop
js
gs
jp
mov
push
push
mov
lods
std
shl
inc
adc
pop
and
sbb
(bad)
mov
jl
push
adc
lahf
sub
or
inc
push
das
aas
xor
dec
mov
add
pop
js
ja
sub
and
fild
cmp
jg
(bad)
inc
and
xor
cmp
je
cli
mov
or
mov
add
xchg
fyl2xp1
ror
mov
cmp
jbe
mov
out
sbb
adc
frstor
jge
xor
lods
shl
pop
mov
rcr
add
pop
cld
add
lock
cdq
loopne
push
sub
mov
push
mov
adc
(bad)
push
mov
and
std
jne
jnp
imul
dec
add
xchg
xchg
out
dec
jno
in
int
add
pop
or
js
addr16
or
(bad)
cdq
pusha
xor
loop
mov
mov
jl
add
pop
scas
call
adc
dec
push
pop
nop
imul
add
pop
add
je
push
mov
mov
dec
inc
and
cmp
cmps
and
jno
mov
push
cmps
add
or
mov
cmp
out
sub
or
out
push
inc
(bad)
enter
add
test
adc
xlat
add
xor
xor
icebp
push
mov
pop
jnp
pop
call
fmul
ffree
or
add
test
nop
mov
cld
jns
addr16
fsubr
sub
iret
rep
out
loopne
leave
push
fnstenv
pusha
lea
fisttp
sbb
sub
mov
mov
mov
add
hlt
ins
inc
pop
xchg
lods
sbb
xlat
cmp
es
and
inc
mov
pop
push
xor
or
call
pushf
mov
mov
push
cmps
lods
cbw
sub
xchg
lods
out
or
cmp
pop
je
ja
test
lar
repz
fimul
scas
test
jl
mov
jb
push
inc
cmps
xor
or
add
div
jle
push
aaa
cmp
lea
fadd
nop
stos
push
add
sbb
push
sub
xor
cmp
mov
pusha
add
in
adc
push
and
clc
cmp
jecxz
and
sbb
jge
jmp
into
jnp
and
cmp
fcmovbe
pop
or
mov
call
add
mov
add
rdmsr
xchg
adc
xor
int
or
je
cmp
xchg
ror
cld
das
mov
push
xchg
cld
push
mov
sbb
int3
stc
add
and
cmp
inc
xor
xor
fst
arpl
sub
push
push
adc
sub
xlat
pop
mov
pop
cmps
loope
dec
ror
xor
cmps
pop
sbb
cmp
push
mov
inc
pop
xor
jns
xor
je
aaa
and
ret
push
mov
lock
retf
mov
add
rol
inc
add
popf
add
push
loopne
cmps
push
jae
push
mov
call
jmp
pop
and
or
mov
and
loop
mov
nop
and
outs
aad
int3
mov
sbb
jnp
in
and
inc
in
sti
lods
add
mov
add
stos
dec
mov
add
enter
jl
into
mov
sbb
aas
popa
je
adc
and
call
add
enter
xchg
push
test
xchg
lahf
pop
add
(bad)
inc
or
repz
dec
lea
aas
push
fadd
cmp
repz
push
jne
cmp
push
or
add
je
push
add
push
add
(bad)
add
out
cmp
ins
cwde
xor
ror
adc
mov
sub
rol
cmp
add
fdivr
fnstsw
shl
stc
add
aas
sbb
sbb
out
cmp
or
push
lea
ficomp
add
dec
fsubr
mov
push
mov
jne
std
pop
or
jl
ret
inc
jmp
pop
je
mov
clc
pusha
jg
push
(bad)
lock
xor
xor
xor
mov
mov
mov
cmps
add
adc
mov
mov
mov
mov
xchg
loope
inc
icebp
mov
and
lock
sbb
cdq
cmp
and
lods
cs
int
(bad)
aam
jp
mov
jmp
fidiv
loopne
mov
jl
xchg
vmread
mov
mov
aad
cmp
mov
jb
adc
xor
or
nop
movs
adc
aad
add
call
mov
add
scas
adc
das
mov
scas
push
(bad)
mov
jo
and
mov
jns
lea
movs
add
in
cmp
push
stos
cmp
add
or
lea
je
adc
rcr
dec
lods
cmp
add
push
sub
pusha
vmwrite
push
push
dec
sbb
mov
sub
adc
mov
adc
rcl
add
cld
mov
movs
sbb
sbb
pop
clc
sbb
mov
clc
test
adc
movs
mov
dec
inc
dec
lods
lods
mov
xchg
mov
test
and
pop
aad
mulps
mov
cli
push
shr
inc
push
sbb
(bad)
loopne
add
mov
cdq
test
lods
rcl
and
ret
xchg
pop
cmp
push
mov
aas
add
stos
mov
or
(bad)
adc
aaa
mov
mov
ror
movs
movs
enter
xor
int3
rcl
inc
dec
mov
movs
(bad)
fcomp
sub
and
clc
adc
push
loope
stos
sbb
push
adc
lock
cdq
add
or
or
xchg
dec
shr
test
mov
mov
(bad)
test
add
mov
adc
dec
inc
int
cdq
clc
ret
or
or
mov
retf
dec
js
mov
ins
mov
ret
pusha
dec
mov
pop
pop
adc
movs
adc
int3
mov
pop
pop
rol
daa
icebp
adc
dec
inc
or
inc
js
mov
and
jo
std
mov
cmp
push
or
rol
test
movs
dec
add
hlt
adc
sbb
inc
sbb
loop
mov
add
lea
movs
sub
hlt
xchg
pop
ins
xor
hlt
hlt
ja
cmp
sbb
sub
add
xor
das
lea
and
stos
sbb
push
or
sbb
inc
jb
sub
pushf
loope
sub
(bad)
mov
(bad)
jge
adc
je
test
cmps
(bad)
sub
jle
sbb
push
inc
popa
mov
add
inc
lahf
xor
stos
rcr
push
popa
or
call
jg
ret
mov
or
pop
dec
in
cmp
push
aaa
add
(bad)
sbb
sbb
inc
push
adc
add
unpcklps
push
js
inc
sbb
mov
hlt
inc
dec
fcom
(bad)
or
push
and
inc
out
adc
or
mov
fistp
mov
jae
je
push
or
sti
or
inc
nop
adc
mov
and
pusha
sub
in
pop
mov
mov
sahf
in
adc
test
push
sub
mov
mov
rcl
imul
cwde
pushf
add
or
mov
(bad)
hlt
(bad)
or
xor
push
sbb
push
xor
shr
imul
mov
and
or
push
aaa
lods
or
add
sub
ja
xlat
sub
inc
inc
addr16
inc
mov
xchg
fsub
pop
mov
and
ins
sub
sar
outs
sub
cmp
adc
or
aas
mov
test
cmp
jo
jl
js
xor
and
addr16
and
nop
sbb
add
mov
push
jp
in
mov
cmp
jne
sar
jbe
and
pop
push
push
jl
or
inc
sbb
popa
xor
xor
adc
rol
adc
ja
mov
jo
(bad)
in
sub
cwde
jmp
mov
mov
xlat
adc
mov
inc
ja
mov
mov
adc
jle
call
ss
sub
ret
mov
dec
pop
and
or
mov
sbb
in
xchg
dec
push
cmps
popf
inc
mov
cs
push
cld
mov
shr
ds
add
sub
cmp
push
cmc
add
mov
ret
pop
test
je
add
jp
mov
xchg
mov
pop
inc
repnz
add
and
rcl
das
or
cmp
mov
sub
sub
sub
dec
cmps
cmp
xor
ret
movs
gs
jo
dec
add
cmp
pop
enter
dec
fidivr
nop
adc
jb
mov
pusha
jne
pusha
pushf
xlat
psrlq
mov
push
jle
add
adc
jle
sbb
mov
rol
nop
push
push
dec
mov
jmp
cs
call
in
lea
jecxz
xchg
mov
hlt
push
sub
mov
mov
mov
imul
mov
fwait
cmc
mov
(bad)
add
add
pushf
and
test
pusha
test
pop
(bad)
fwait
add
xor
pop
clc
mov
sub
bound
push
jno
or
popf
aaa
push
xchg
cmps
loope
mov
adc
movs
repz
divps
inc
push
imul
rsqrtps
add
push
adc
jmp
mov
adc
dec
inc
das
jg
inc
inc
jg
fs
rol
icebp
jmp
(bad)
data16
mov
es
sbb
push
dec
out
adc
mov
push
jmp
mov
outs
inc
loop
mov
mov
dec
leave
jp
jb
adc
xchg
dec
add
mov
push
add
fimul
js
pop
adc
stos
inc
xchg
xor
inc
cdq
push
dec
mov
mov
out
test
push
ficomp
or
pop
xor
data16
inc
and
adc
hlt
mov
sbb
rol
jmp
or
dec
mov
mov
pop
and
bound
mov
out
or
push
pusha
and
sbb
repnz
mov
cld
mov
test
cmp
push
scas
mov
jnp
or
xor
call
sub
mov
ja
mov
and
sbb
jp
inc
xchg
pop
xor
pop
inc
xor
dec
push
fidiv
mov
push
xchg
or
adc
xchg
retf
in
sbb
and
mov
pop
sub
mov
push
adc
lahf
pusha
mov
cmp
push
dec
mov
jb
sbb
shl
jb
mov
or
dec
push
adc
lea
add
ds
js
inc
aad
cs
(bad)
sub
outs
sbb
inc
sbb
adc
add
add
mov
cmp
sbb
mov
pushf
or
pusha
loope
ins
iret
bound
push
cmp
cld
mov
adc
sbb
pop
sbb
nop
and
add
fistp
add
or
gs
inc
inc
imul
push
jg
add
xchg
xchg
cmp
fadd
sbb
test
cld
or
mov
mov
dec
xchg
mov
or
sbb
std
add
aas
bound
nop
pop
data16
cmp
add
add
jne
pusha
jmp
test
add
int
loop
cmp
xchg
add
xchg
scas
retf
jg
lea
jmp
sub
cmp
ins
or
cmp
lock
aaa
fcom
sub
adc
test
cmp
js
and
ret
mov
loop
lea
shl
mov
ja
icebp
mov
add
xchg
pop
je
ins
aaa
mov
or
je
push
jne
nop
shr
mov
stos
add
loopne
mov
xor
and
jmp
mov
mov
lock
enter
sbb
test
sbb
lock
or
add
dec
push
inc
cld
out
int
mov
test
test
xchg
cmp
add
and
ret
sub
xchg
les
cld
or
mov
out
ds
cs
in
add
pop
mov
mov
sub
mov
xchg
add
mov
test
sub
xor
push
and
sub
adc
adc
stos
adc
adc
push
cwde
xor
and
in
into
xchg
dec
push
lock
aaa
add
pop
js
adc
mov
inc
aaa
add
jno
push
sub
not
xchg
cmp
jecxz
xchg
loop
dec
outs
je
jne
add
dec
hlt
jne
or
adc
adc
sbb
ror
mov
adc
das
shl
mov
iret
xchg
jecxz
push
out
ror
sbb
jb
push
adc
pop
mov
enter
xor
sar
imul
or
pop
inc
sub
mov
rep
mov
or
push
inc
xchg
and
xchg
add
mov
lods
adc
push
mov
or
adc
add
fidivr
sub
leave
inc
data16
push
inc
adc
cmp
add
push
dec
xor
sub
sar
lea
push
add
cmp
mov
leave
push
cmp
mov
cmp
daa
pop
fiadd
test
inc
sbb
fldenv
dec
adc
adc
mov
sbb
loope
add
icebp
and
fmul
nop
sub
pop
pop
fisttp
cmp
(bad)
hlt
cld
ss
mov
add
dec
ror
sub
xchg
pusha
data16
pavgw
lods
mov
or
scas
ss
daa
fbld
mov
push
push
mov
fs
popa
push
jg
or
inc
lods
js
jl
push
test
js
jge
mov
xchg
rcr
es
scas
and
ror
add
mov
jg
mov
add
mov
push
js
lea
push
popa
jl
aaa
lea
adc
dec
jmp
pop
jl
push
test
adc
cli
daa
sbb
jnp
add
or
adc
jo
push
add
jae
push
dec
push
test
lods
pop
ret
or
cmps
and
in
ret
sub
mov
stos
js
fistp
repz
cmp
popf
mov
lea
inc
mov
pop
and
rcr
cmp
scas
mov
push
dec
mov
or
dec
mov
jo
and
jmp
ret
mov
xor
or
shl
and
xchg
dec
ret
loop
lods
cmp
pop
retf
sbb
test
out
ss
xor
adc
ins
pop
push
in
(bad)
das
loope
mov
mov
enter
ss
cmp
lock
adc
rcr
or
mov
mov
adc
mov
outs
repnz
push
xchg
je
xchg
fwait
inc
inc
sub
lea
mov
addr16
dec
movs
stc
push
push
call
cld
sub
pop
aaa
mov
jmp
push
mov
add
add
mov
lahf
adc
sti
int3
xor
mov
sub
mov
aas
mov
add
movs
fwait
or
sub
mov
and
dec
add
inc
lea
push
enter
mov
jl
mov
das
jbe
xchg
jmp
xor
in
lods
call
adc
ficomp
add
les
mov
push
jo
inc
add
in
sub
ss
cmp
imul
pop
push
int3
adc
sbb
nop
inc
and
push
test
mov
retf
add
or
xchg
xchg
ss
jne
mov
add
add
push
cmp
leave
(bad)
nop
or
pop
push
inc
pop
adc
xor
jbe
pushf
jbe
xor
arpl
dec
fwait
or
clc
push
imul
sub
popa
add
push
push
ss
mov
push
sahf
test
sar
dec
mov
cmp
xor
inc
jmp
cmp
push
(bad)
and
(bad)
loopne
rol
imul
popf
aas
call
sbb
dec
lock
xchg
les
inc
jecxz
pusha
clc
ss
dec
inc
add
and
js
call
mov
sub
mov
jb
dec
adc
and
fs
lods
sbb
pusha
sbb
and
push
dec
iretw
jbe
ret
or
sub
or
ror
xor
mov
cdq
in
or
inc
or
les
popa
push
dec
dec
es
mov
push
and
sub
leave
add
mov
jmp
leave
aam
adc
jbe
pusha
jo
fsubr
mov
mov
adc
pushf
mov
mov
repnz
push
push
pop
sub
jns
pop
in
fisttp
inc
popa
popf
cmp
pop
mov
dec
pop
sub
dec
in
sbb
daa
daa
adc
sbb
cmp
test
enter
dec
pop
dec
mov
cmp
pop
aam
fsub
in
push
cmp
loopne
dec
sub
and
lock
xchg
pop
dec
or
stos
cmc
fcmovne
outs
xchg
and
das
jmp
xchg
inc
sbb
es
sub
jns
daa
mov
pop
mov
je
adc
xchg
mov
jmp
movs
pop
jl
popf
pushf
pushf
sub
mov
cmp
in
in
sub
and
xchg
mov
fdivr
hlt
xor
add
xchg
xor
add
xlat
xor
ins
mov
es
cmp
cld
xchg
dec
push
stc
adc
jmp
cmps
dec
xor
push
ins
sbb
fs
push
dec
jns
fs
or
sbb
adc
fsub
nop
js
fisub
adc
dec
es
push
dec
xchg
dec
es
inc
cmp
dec
es
sub
sbb
cdq
fs
adc
add
dec
and
call
xchg
fcom
add
daa
in
jne
push
mov
push
push
ficomp
arpl
jmp
cmps
mov
movsx
xor
xor
sbb
outs
xchg
xchg
xchg
jbe
or
xor
xchg
xchg
xchg
xchg
xor
ss
sbb
xchg
cmp
je
mov
dec
mov
lods
jl
pop
push
and
stos
inc
cmps
outs
out
push
test
fwait
and
xchg
xchg
or
in
cmps
inc
add
xor
push
mov
adc
lock
pop
dec
fmul
pop
adc
inc
and
pop
or
jo
pop
jg
inc
inc
sbb
(bad)
(bad)
sub
mov
mov
out
imul
adc
and
(bad)
fcom
mov
lea
add
sbb
push
mov
push
sbb
add
cmp
scas
mov
loope
mov
cwde
fiadd
or
add
pushf
gs
dec
pop
inc
cmp
sbb
mov
adc
or
adc
sbb
sub
(bad)
and
add
mov
loope
or
setp
mov
ficomp
mov
fbld
aaa
pusha
and
fs
inc
iret
aaa
add
or
(bad)
out
fmul
shr
fistp
push
cmp
push
push
mov
cdq
jp
add
jns
nop
sub
push
or
cmps
call
mov
ins
sub
repnz
xchg
mov
test
and
movs
cmp
and
inc
mov
or
or
push
shr
mov
xor
or
call
sbb
mov
add
sar
leave
xchg
sbb
push
(bad)
fisttp
popf
dec
or
sbb
ret
mov
pop
sub
inc
pop
cld
(bad)
mov
ja
adc
ins
inc
and
mov
add
dec
loop
pop
loope
dec
cdq
les
sub
mov
mov
sbb
hlt
call
mov
push
cmp
jne
push
sbb
add
push
adc
mov
adc
jo
jo
and
and
loope
inc
dec
popa
mov
enter
inc
inc
sbb
xchg
test
jo
dec
inc
daa
push
ror
pop
addr16
dec
ret
ror
or
mov
add
inc
adc
add
inc
pusha
jns
imul
lea
sub
mov
mov
aas
ret
sar
ret
add
add
xchg
mov
inc
cs
xchg
cwde
pop
sub
gs
mov
cld
push
adc
pop
pop
cmp
call
mov
and
scas
in
cmp
fisttp
stos
loop
test
daa
call
mov
popa
aam
or
sahf
dec
adc
adc
ret
cmp
pop
lea
xchg
sbb
xchg
stos
in
or
inc
xchg
xlat
call
push
pop
push
xor
adc
mov
jecxz
cli
add
mov
adc
ret
sub
fsub
fsub
cmp
mov
sbb
enter
and
test
jne
stos
push
imul
jbe
xor
in
pop
and
mov
inc
push
and
dec
gs
and
sbb
cwde
loop
in
push
(bad)
xchg
adc
jnp
push
shl
dec
cmp
xor
sysexit
xchg
jecxz
add
enter
sar
and
and
shl
in
int
inc
in
daa
enter
pop
inc
sub
rol
rcr
leave
xor
test
inc
sub
daa
loopne
call
cmp
adc
into
cmp
ret
leave
add
(bad)
push
test
mov
jae
push
add
fiadd
add
xor
in
push
adc
xor
mov
xlat
add
inc
fisttp
add
and
int3
outs
test
adc
(bad)
fdivr
xchg
inc
adc
adc
jg
jge
mov
pop
shl
rdmsr
mov
das
aam
adc
mov
xor
loopne
retf
xor
xor
mov
xchg
mov
iret
ret
add
ss
jb
aaa
ss
push
pusha
xchg
mov
mov
and
lods
dec
add
or
sbb
enter
stos
jecxz
push
loope
mov
mov
pusha
test
cmp
mov
push
loope
inc
cmp
pushf
mov
enter
push
xor
aam
add
push
push
popa
xor
adc
test
jb
push
jge
shl
iret
xor
shr
rol
adc
daa
stc
or
jmp
mov
push
xlat
xor
adc
ins
push
movs
inc
xchg
dec
fs
cmp
adc
inc
mov
xchg
inc
mov
push
sbb
fild
jg
adc
push
lods
mov
xchg
loopne
adc
sub
or
shl
inc
inc
popa
add
sbb
xor
and
add
jmp
sbb
jno
lods
ret
in
inc
inc
sbb
inc
or
frstor
ss
dec
inc
leave
push
mov
xchg
sbb
loopne
inc
push
xor
out
fadd
mov
push
leave
inc
mov
rol
mov
pop
sub
sub
stos
dec
aas
xlat
outs
dec
cmc
icebp
pop
repnz
inc
mov
adc
inc
fimul
adc
pop
cmc
mov
mov
les
ret
nop
jno
push
mov
sub
sbb
(bad)
sub
jg
inc
add
mov
xchg
inc
sub
xor
(bad)
dec
xchg
sbb
mov
out
xchg
add
sub
xor
call
test
xchg
pop
add
mov
dec
mov
mov
pop
jne
adc
adc
and
jne
inc
push
in
fstp
xor
dec
or
jne
or
retf
jne
or
jne
add
inc
mov
and
lods
sbb
sub
add
lahf
inc
lsl
les
push
mov
ret
or
or
or
daa
bound
pop
jbe
mov
ret
jo
mov
mov
pop
fiadd
mov
or
data16
cmp
data16
dec
test
sbb
sbb
xor
aaa
push
les
and
or
inc
and
jmp
je
std
test
add
push
hlt
cmp
repz
(bad)
jle
gs
jl
inc
hlt
mov
add
(bad)
(bad)
pop
push
add
popf
add
fsubr
sti
fst
idiv
repnz
nop
inc
je
fcomp
sbb
jbe
pop
mov
and
test
adc
push
mov
fwait
shl
mov
inc
sub
inc
mov
inc
or
ret
or
and
daa
ins
ret
sbb
popa
scas
pusha
mov
pop
sbb
sub
dec
fild
addr16
shl
or
aad
popa
pusha
cmp
sbb
jmp
jbe
fldcw
les
inc
pop
leave
fwait
dec
aas
push
movs
adc
dec
jns
pop
jb
mov
retf
push
mov
cmps
push
fnstsw
fiadd
ret
inc
push
and
pop
das
fcomp
xchg
sub
and
dec
adc
sahf
push
xchg
loopne
scas
and
sbb
jl
add
gs
jbe
or
cmc
jle
loopne
and
sti
je
push
cld
or
pop
dec
or
std
inc
mov
loopne
sbb
adc
add
lods
fdivr
dec
fcomp
add
call
sub
add
mov
add
jb
sbb
or
rol
and
and
sbb
push
add
add
aad
loop
sub
ret
and
add
inc
dec
xchg
adc
fiadd
cmp
push
adc
pop
add
mov
in
test
or
inc
mov
inc
pusha
setne
pop
jns
jg
mov
jo
xor
and
sbb
pusha
inc
test
loopne
push
add
cmp
or
ror
cs
cdq
and
pop
push
jg
into
mov
xchg
sub
fmul
dec
pop
xchg
inc
(bad)
pop
scas
inc
mov
dec
imul
push
xchg
(bad)
adc
into
or
(bad)
adc
dec
mov
mov
fldz
mov
cwde
or
int3
ret
lock
cwde
mov
mov
repnz
mov
cmp
(bad)
xchg
pusha
daa
sbb
xor
aad
add
inc
mov
add
dec
lods
sbb
nop
dec
mov
fisub
(bad)
ror
in
add
mov
dec
mov
lahf
outs
fmul
xchg
mov
test
and
movs
or
pop
hlt
ret
sbb
mov
cmps
pusha
adc
(bad)
movs
push
mov
movs
cmp
push
movs
mov
xchg
mov
rcl
in
inc
cwde
mov
popa
ins
mov
das
es
fld
xchg
aas
or
push
push
push
cmc
dec
test
(bad)
faddp
dec
cwde
mov
dec
cmp
adc
imul
and
test
inc
and
fstp
push
jmp
pushw
fmul
icebp
jb
mov
fadd
stos
add
or
pop
adc
cmp
aaa
test
mov
(bad)
jmp
jno
inc
je
and
lock
rcl
inc
xchg
push
and
test
lock
aas
gs
mov
(bad)
fild
xchg
xor
hlt
in
mov
mov
jg
scas
and
add
ds
jl
in
xor
push
cmp
sbb
sub
pusha
dec
and
jle
add
xor
ret
ss
inc
xchg
mov
mov
into
cmp
inc
rol
call
(bad)
sub
lods
xchg
call
xlat
adc
ficom
shl
add
ror
sbb
scas
adc
daa
ds
push
pop
jnp
mov
inc
fild
dec
push
es
or
push
sbb
or
pop
addr16
push
adc
inc
sub
jb
clc
dec
movs
pop
xor
mov
xchg
pop
or
and
add
jo
xor
push
xchg
sbb
or
stos
pop
in
ret
dec
dec
and
aas
lock
icebp
or
jl
or
push
mov
mov
add
mov
sar
and
inc
je
add
(bad)
push
push
lea
nop
xor
or
jmp
and
dec
and
xor
xchg
stc
adc
ret
sub
popf
xchg
mov
ret
adc
lahf
xor
or
jbe
ficom
sti
push
gs
lock
xor
sbb
jae
adc
and
push
sbb
xchg
pop
es
bound
pop
in
test
add
es
call
pop
pop
xlat
adc
cmps
inc
mov
dec
sub
and
mov
add
sbb
mov
add
mov
or
sti
adc
inc
popa
cld
push
or
ss
lahf
sar
js
or
xor
adc
add
iret
adc
in
sub
icebp
or
adc
push
and
or
pop
nop
mov
or
jne
jge
add
mov
mov
add
pusha
movs
or
or
add
inc
retf
adc
dec
loopne
dec
push
cmp
sub
or
out
retf
adc
mov
sub
or
mov
and
sbb
pop
pop
inc
or
shr
add
test
xchg
dec
adc
sub
and
js
call
jbe
xchg
(bad)
xor
pop
push
mov
shl
mov
adc
adc
ss
(bad)
and
or
adc
mov
mov
les
mov
xor
adc
pop
mov
adc
ins
pop
add
jge
sub
in
shr
(bad)
(bad)
out
sbb
imul
das
or
sbb
pop
xchg
xor
int3
ins
or
adc
int3
and
push
push
lahf
add
pop
adc
inc
adc
or
enter
sub
loopne
dec
loopne
dec
(bad)
pop
sbb
or
popa
xor
out
cmp
push
aaa
mov
xchg
adc
push
sub
or
and
mov
inc
dec
add
and
fmul
xor
adc
arpl
leave
adc
push
add
dec
push
dec
sbb
es
sahf
or
loopne
call
loopne
jmp
or
jo
cmp
fidivr
leave
je
mov
mov
sbb
inc
push
adc
sahf
ss
and
adc
ins
adc
iret
inc
add
pop
dec
cmp
mov
hlt
dec
add
push
rol
les
add
rcr
and
bound
pop
or
inc
movs
sbb
jb
inc
mov
imul
out
mov
add
add
or
out
mov
adc
push
in
test
pop
inc
mov
fs
dec
sub
mov
inc
pop
cmp
or
xchg
mov
and
adc
imul
xchg
push
lods
sbb
mov
push
push
test
push
mov
leave
xchg
push
add
add
sti
add
add
jnp
cs
nop
nop
or
rcl
cwde
and
pop
push
add
pop
rol
retf
not
test
imul
iret
push
aas
pop
mov
call
sbb
nop
sub
out
loope
scas
test
dec
add
adc
mov
aaa
inc
inc
dec
ja
aad
mov
push
mov
sbb
aas
sar
mov
pop
xchg
add
sti
and
test
xchg
stos
mov
leave
arpl
test
ds
imul
push
ss
ins
adc
popf
xor
mov
push
mov
xchg
aaa
or
xor
xor
or
push
enter
mov
dec
cmc
add
cmp
(bad)
inc
jle
rcr
mov
jnp
and
and
sub
push
cmp
xchg
jl
xchg
mov
pop
xchg
gs
lods
nop
inc
ja
cmp
xchg
inc
jmp
in
cmp
pop
ret
jge
popa
mov
not
js
push
pushf
pop
in
adc
jle
test
adc
fmul
in
cmp
push
jmp
leave
add
dec
mov
retf
xchg
test
(bad)
mov
cmp
pop
inc
cmps
in
inc
xor
sub
pop
lea
imul
jno
jae
arpl
inc
fs
inc
pusha
adc
in
mov
js
lods
out
sub
in
dec
es
xor
imul
push
mov
dec
pop
adc
xchg
test
in
and
xor
mul
jne
std
leave
xor
syscall
jmp
jmp
stos
sub
jmp
or
mov
sub
add
sahf
aaa
popf
sub
stos
or
dec
dec
jbe
xchg
data16
lods
dec
add
and
add
mov
dec
jle
int3
push
or
mov
in
ret
dec
push
mov
xchg
or
shl
or
je
or
adc
or
add
pop
inc
add
pop
mov
cdq
aam
xchg
ret
or
add
repz
je
mov
movs
or
or
inc
test
push
and
and
nop
retf
sub
inc
dec
in
sub
add
jbe
das
mov
stos
inc
dec
movs
add
iret
xor
adc
pop
inc
sub
cmp
adc
sbb
inc
pop
jb
push
cmp
jno
or
shl
add
data16
movs
sbb
popf
rol
lea
fimul
pop
lods
inc
movs
push
push
jns
xchg
daa
xchg
jns
push
lock
cmp
std
dec
inc
add
or
add
push
push
pop
ins
xor
fmul
and
push
mov
int
clc
add
scas
push
xchg
lea
adc
mov
sbb
rcl
scas
sete
adc
cmp
setno
mov
sbb
imul
leave
inc
push
adc
enter
int
cmps
dec
jl
cmps
and
pop
adc
add
ret
stos
in
and
push
sbb
and
adc
pop
dec
push
jae
and
and
inc
or
or
xchg
mov
pop
and
jb
and
cmp
and
test
adc
add
in
fs
sub
sub
sbb
dec
sub
cmp
leave
and
pusha
cs
outs
and
das
lea
sub
adc
xlat
add
lea
sbb
push
das
add
jb
xor
icebp
out
adc
jmp
sub
push
dec
add
dec
sti
push
and
xor
mov
xor
xor
data16
pop
iret
ss
out
xor
into
jge
test
in
imul
inc
mov
jge
mov
inc
cmps
add
mov
add
xchg
ins
(bad)
movs
xchg
lods
xor
adc
das
gs
xor
addr16
ins
xor
call
cmp
dec
dec
xchg
js
add
cmp
mov
cmp
or
adc
xchg
and
nop
add
jno
or
sti
fst
mov
cmp
ss
pop
or
adc
inc
cs
ds
inc
sub
add
aas
ds
xlat
jb
inc
sub
and
stc
inc
mov
ss
ss
shr
stc
push
test
enter
test
jl
dec
push
pop
sar
inc
pop
xor
and
sbb
push
jb
and
push
push
push
nop
add
xor
or
sub
xor
inc
loopne
inc
ror
add
jns
movs
repz
sbb
stos
or
mov
mov
or
fs
dec
cmp
fs
dec
mov
or
mov
push
inc
cmp
and
dec
adc
sahf
arpl
nop
push
test
pop
add
inc
lea
xchg
push
add
aad
sbb
adc
push
push
cmc
in
xchg
push
add
stos
push
push
pusha
sar
dec
push
or
loop
adc
mov
adc
(bad)
xlat
stos
or
inc
int
xchg
push
nop
adc
xchg
push
test
sub
push
dec
add
mov
fwait
dec
nop
sbb
add
pop
test
imul
inc
jb
int
pop
pop
jns
inc
xor
push
test
mov
pop
sub
and
and
pop
nop
out
cmp
dec
add
cdq
and
bound
js
cdq
pop
pop
push
jo
pusha
xchg
or
es
or
sub
and
addr16
add
popa
and
xchg
mov
and
dec
outs
shr
or
adc
jns
icebp
and
pop
movs
loope
push
sub
inc
dec
add
add
das
in
in
icebp
mov
cmp
add
cs
lea
or
xchg
inc
ins
ins
mov
xchg
sub
or
add
out
jg
mov
inc
push
mov
or
js
enter
inc
icebp
and
fucomp
push
pusha
pop
inc
pop
lds
(bad)
jl
pushf
fucomi
and
sbb
popf
push
or
cld
mov
cmp
add
add
or
adc
jo
push
in
mov
xor
or
mov
sub
pop
hlt
xor
sbb
in
jl
stc
jg
jb
pop
inc
mov
cld
cmp
nop
xchg
xchg
cwde
pushf
jae
fsub
leave
enter
loop
je
adc
add
pop
and
test
push
nop
mov
loope
add
cmp
sbb
leave
iret
mov
js
nop
lock
sbb
push
sti
sub
jnp
xor
jns
loopne
add
enter
and
adc
jae
jnp
dec
and
pop
sar
nop
mov
and
jge
in
fs
xchg
xchg
mov
jg
and
leave
cmps
(bad)
or
cmp
nop
out
fstp
and
and
adc
xor
xchg
xchg
mov
test
pop
leave
fcmovnu
in
mov
jg
xchg
xchg
sbb
and
and
xor
fs
mov
xchg
xchg
mov
mov
es
psubb
mov
cld
mov
xchg
sbb
push
add
pop
bound
jb
mov
jbe
leave
and
repnz
std
push
push
push
push
sbb
sub
xchg
(bad)
cwde
xor
test
cs
sub
test
lods
popa
xor
and
push
js
or
fisttp
mov
daa
cmps
inc
adc
out
jb
and
cs
(bad)
add
or
add
xor
in
cwde
outs
and
sbb
xchg
in
xchg
mov
mov
fcomp
dec
call
mov
test
pop
push
arpl
loop
test
adc
add
or
adc
movs
test
push
sbb
mov
enter
and
aaa
jge
out
and
and
or
pop
xchg
mov
and
mov
daa
and
mov
xor
inc
mov
add
cdq
cwde
and
mov
cwde
fs
add
dec
clc
fwait
sbb
pushf
mov
xor
pushf
imul
and
dec
or
adc
dec
mov
enter
(bad)
popa
inc
sub
in
inc
jp
test
inc
arpl
repz
(bad)
(bad)
or
push
lea
or
in
mov
pop
pushf
gs
lea
jnp
jge
hlt
lds
popf
mov
data16
xchg
push
xor
test
and
mov
fist
scas
pusha
aad
jo
lea
stos
mov
test
xchg
xchg
sub
mov
mov
push
add
icebp
and
jb
xchg
cmps
inc
pop
xor
popa
cmp
mov
xor
xchg
lock
pop
xor
sub
push
movs
movs
stc
enter
xchg
shl
dec
les
xchg
and
cmps
loopne
xchg
or
add
and
shl
test
shl
stos
and
xchg
sub
stos
in
enter
test
mov
inc
lods
mov
push
or
out
enter
aam
out
push
xor
adc
mov
mov
fdiv
mov
cmp
and
mov
add
xchg
and
and
loopne
sbb
xchg
inc
pop
xor
mov
out
mov
in
mov
mov
ret
push
inc
je
mov
sbb
mov
sbb
cwde
hlt
mov
cwde
enter
xor
enter
movs
out
in
xor
call
dec
inc
mov
shl
sub
in
push
or
dec
inc
cmps
fs
ret
fs
adc
popf
das
xchg
ror
repnz
and
bnd
test
fstp
jg
data16
push
mov
test
movs
mov
and
xor
push
and
add
and
add
(bad)
mov
adc
add
xor
clc
lea
cmp
(bad)
adc
adc
(bad)
or
icebp
mov
sub
add
adc
adc
cmp
inc
stos
xor
push
or
js
and
leave
js
pop
xor
retf
fadd
jg
aaa
icebp
push
sub
dec
push
sbb
test
sub
adc
retf
or
retf
sub
sbb
push
sbb
dec
xchg
mov
retf
test
into
xchg
aam
cmps
push
or
adc
(bad)
dec
enter
rcl
mov
lds
mov
mov
inc
mov
adc
push
xor
mov
stc
push
xchg
mov
sbb
fs
mov
mov
rcr
(bad)
nop
sub
sar
mov
mov
stc
aad
sbb
js
and
inc
xchg
nop
inc
sbb
adc
popf
leave
enter
leave
inc
sbb
cmp
sub
in
dec
ret
and
scas
popf
rcl
push
sahf
fisttp
xchg
push
cmp
les
push
(bad)
xor
sbb
jns
les
ins
xor
inc
fcmove
shl
arpl
or
and
or
fst
mov
out
sbb
outs
cdq
dec
inc
std
fdiv
shl
add
push
je
enter
inc
mov
test
mov
or
add
push
mov
cmp
mov
and
sub
jo
push
dec
fnsave
dec
mov
fcomp
dec
fidiv
and
sub
dec
pop
add
aam
push
sbb
out
or
xacquire
dec
icebp
cmp
out
lea
jns
add
pop
shr
sbb
pop
dec
sub
xchg
rol
loop
fisub
nop
loope
shl
jecxz
xor
sbb
repnz
test
push
sbb
loope
out
call
cmp
xchg
sub
push
and
push
jb
enter
or
in
enter
rol
inc
leave
pusha
add
cmp
mov
jb
add
sbb
add
adc
leave
push
mov
mov
stos
xchg
xchg
xor
adc
outs
mov
mov
xchg
adc
in
inc
loopne
pop
push
mov
and
jl
pop
out
mov
jl
je
or
jmp
in
out
sub
aad
mov
enter
sbb
xchg
mov
mov
nop
out
adc
mov
mov
cmp
sbb
int3
repnz
and
repz
enter
mov
leave
add
pop
and
lea
jg
jns
jne
or
dec
inc
es
lock
xor
data16
add
aad
jl
sub
and
cdq
and
out
or
lods
lods
sbb
push
(bad)
enter
mov
fs
xchg
inc
and
and
sub
add
or
iret
psubq
adc
mov
test
and
jg
sbb
mov
lock
pushf
mov
dec
sub
mov
cwde
xchg
mov
sub
dec
push
mov
sar
adc
or
inc
or
ror
sbb
inc
outs
push
int3
xchg
(bad)
sub
(bad)
push
xor
sbb
test
loopne
sbb
and
xchg
inc
add
lock
xor
fadd
and
aam
xor
inc
push
sub
aam
nop
push
and
pop
mov
stos
int3
lock
and
popf
inc
es
les
fs
les
sub
inc
mov
xchg
mov
or
nop
adc
in
sub
(bad)
es
dec
mov
lods
xchg
fdivrp
and
mov
or
ror
adc
movs
cmp
cmp
and
cvtpi2ps
add
test
jl
loope
jl
sbb
inc
push
or
and
ss
fist
mov
or
pushf
cmc
pop
sbb
xor
adc
mov
retf
imul
inc
or
push
movs
retf
pop
sub
adc
ins
aam
fidivr
add
std
icebp
mov
daa
and
xchg
xchg
adc
nop
mov
clc
lock
adc
and
lock
leave
enter
mov
pop
and
leave
add
pop
and
add
pop
bound
pop
xchg
aam
enter
adc
xchg
push
xor
sbb
sbb
hlt
sbb
fadd
sbb
sbb
push
inc
movs
inc
test
leave
push
fwait
pop
stc
jl
pop
and
mov
jl
in
movs
push
or
hlt
lock
lock
or
jmp
sbb
mov
in
lea
in
and
xchg
inc
or
aaa
cdq
pop
push
rcr
call
xchg
and
adc
mov
xor
inc
data16
pusha
xor
and
icebp
xor
fs
add
push
loopne
test
int
push
mov
sub
add
ja
xor
es
(bad)
lock
dec
sbb
dec
dec
fisubr
inc
data16
pusha
nop
fild
mov
fs
lock
xchg
push
lock
adc
or
add
lahf
jmp
call
push
dec
xchg
cwde
xor
loope
loope
xchg
pop
cmp
loope
movs
test
xchg
xchg
adc
imul
sub
adc
repnz
mov
(bad)
mov
call
out
out
xor
mov
sub
push
mov
mov
push
mov
and
das
movs
out
retf
push
shr
ins
or
sbb
add
add
add
xor
enter
adc
push
push
in
xor
sar
mov
ss
repz
or
dec
popa
sub
test
and
and
sbb
push
push
das
or
shl
je
sbb
popf
xchg
adc
enter
clc
in
push
pop
rcr
cmp
retf
sub
adc
mov
push
and
pushf
or
or
add
enter
or
inc
mov
rcl
mov
add
je
push
stc
mov
xchg
push
pop
inc
ss
test
movs
inc
xor
and
pop
add
fisub
push
push
push
jo
ins
or
inc
adc
arpl
call
dec
pusha
cmc
xor
sub
cmc
popf
sub
test
nop
jp
xchg
pop
dec
mov
mov
cwde
jns
sub
cwde
sub
cmp
add
add
in
or
movs
add
jg
or
push
mov
inc
(bad)
jmp
aaa
adc
xchg
xchg
inc
out
and
and
cwde
pusha
daa
add
cmps
mov
pop
jl
push
jne
sbb
aaa
test
mov
(bad)
loope
jl
aad
jb
loope
xchg
pushf
icebp
sbb
mov
add
mov
pop
jnp
cs
(bad)
imul
cmp
cmp
nop
movs
pop
movs
push
call
xchg
mov
adc
test
aas
mov
test
dec
adc
fs
out
sub
xchg
mov
in
dec
jl
xchg
xor
dec
adc
dec
aam
cdq
xor
cmp
into
mov
pinsrw
jb
pop
push
sub
inc
sahf
jno
ror
mov
ret
rcl
popa
fcomp
pop
xchg
sub
loopne
inc
ss
pusha
mov
mov
xor
inc
rcr
daa
xor
and
icebp
inc
sub
inc
mov
ins
xor
mov
push
push
sub
push
mov
and
call
fs
sub
xor
call
scas
cmp
nop
xor
jo
ins
and
dec
test
pop
xor
data16
inc
inc
and
imul
das
adc
imul
in
jb
arpl
sub
adc
push
sbb
push
push
jno
leave
or
push
call
jmp
xor
mov
sbb
jno
xor
aas
jb
adc
mov
jb
and
adc
mov
lea
cmp
inc
inc
inc
test
inc
neg
(bad)
pop
and
cmp
lods
add
xchg
in
rol
xor
pop
xor
fwait
add
push
pop
mov
adc
inc
mov
cmps
add
cmp
retf
xchg
test
movs
dec
add
imul
and
aaa
mov
xor
adc
ret
or
cmc
adc
jae
or
inc
loope
retf
sub
push
mov
xchg
xchg
xchg
mov
jne
fdiv
ins
push
add
inc
xlat
shl
xchg
and
pop
inc
call
pusha
push
push
mov
test
in
mov
pusha
fwait
nop
sub
and
dec
mov
pop
aas
out
aam
jo
push
or
adc
icebp
push
xor
sbb
ins
repnz
call
mov
or
int
or
lea
dec
add
inc
cld
lods
add
mov
in
lds
sub
cmp
xchg
and
cli
push
push
inc
sahf
add
and
out
add
fld
push
lea
push
pop
enter
mov
pushf
inc
dec
adc
repnz
cmp
xor
adc
push
scas
nop
out
inc
loopne
inc
xchg
imul
jnp
nop
sbb
sti
jo
mov
or
pop
mul
jl
nop
push
out
loopne
push
add
xchg
lea
push
adc
jo
or
(bad)
sbb
push
mov
push
jne
adc
inc
pop
test
movs
sbb
pop
xlat
and
test
sub
dec
mov
sbb
jmp
bnd
sbb
test
es
push
pop
jmp
jb
cwde
loopne
call
test
shl
inc
icebp
scas
loopne
and
push
and
(bad)
adc
nop
adc
ret
sub
or
xor
cwde
and
das
and
and
mov
and
daa
iret
and
and
and
adc
push
leave
add
lock
ror
push
dec
push
add
cwde
nop
mov
sub
add
sbb
aas
sub
aad
dec
dec
pop
js
pop
mov
adc
js
pop
ss
pop
fsub
push
dec
mov
cmp
lods
jb
lock
sbb
sbb
xchg
mov
ror
xor
cdq
rcr
sub
xor
push
bound
shl
pop
and
sub
or
dec
push
mov
shl
int
jno
adc
ins
sbb
test
xchg
adc
mov
xor
das
in
out
push
(bad)
icebp
ins
fadd
xor
xchg
fisttp
mov
int3
retf
xor
add
ss
pushf
dec
cmp
aam
xlat
pop
xchg
pop
cmps
dec
popf
cmp
sbb
xchg
xchg
repnz
push
pop
xchg
adc
pop
mov
add
sub
hlt
out
fdiv
stos
in
repnz
lock
lods
xchg
push
leave
jo
int3
icebp
and
popf
les
inc
sbb
cld
inc
push
mov
mov
sub
jecxz
dec
ficom
sub
aaa
nop
repnz
out
lods
add
add
imul
pop
repnz
or
jl
sbb
stos
or
setl
sbb
mov
cmp
add
mov
mov
cmp
loop
test
push
pop
ds
aas
repnz
cs
ins
lock
mov
push
sbb
pop
xchg
cs
sbb
inc
pop
je
inc
sbb
in
mov
sub
in
xchg
xchg
xchg
out
push
cwde
dec
call
ficomp
cmps
outs
push
pop
aas
sbb
cmps
xchg
jl
and
push
jno
jno
fs
ja
mov
push
and
in
stos
out
je
sbb
adc
mov
dec
das
stc
inc
call
dec
and
lock
pop
lock
outs
dec
xchg
fdiv
cmp
xchg
dec
out
adc
adc
push
leave
dec
cmp
sub
add
and
sbb
sub
pop
rcl
dec
xchg
pushf
add
jo
shl
push
xor
xchg
sbb
cmp
fsub
mov
(bad)
clc
xor
xor
cmps
lahf
nop
pop
and
xchg
sbb
rcr
arpl
out
aaa
inc
in
ret
push
icebp
pop
jne
pusha
sub
push
bound
mov
shr
inc
adc
push
push
stos
test
sub
push
xchg
add
sbb
bt
popa
add
bound
or
and
dec
cmp
sub
icebp
push
imul
sbb
daa
pop
gs
mov
pop
jmp
pop
inc
leave
je
fs
lea
or
mov
xchg
cmp
addr16
retf
pop
stos
jo
mov
inc
jo
inc
push
or
pop
sbb
mov
fs
pusha
pop
loopne
fsubr
push
push
pop
fstp
add
xchg
pop
inc
sbb
sbb
cmp
add
popa
add
adc
adc
repz
adc
add
push
jmp
nop
push
add
out
xchg
and
jne
adc
xor
les
push
jb
bound
or
test
sub
or
fs
sbb
arpl
aaa
add
fs
push
pop
inc
or
and
jb
lock
adc
arpl
add
(bad)
xchg
retf
sbb
bnd
mov
sub
mov
push
add
inc
dec
pop
pop
mov
xor
jp
cld
imul
imul
and
aam
dec
and
repnz
pop
jno
ins
repnz
shl
xor
out
gs
cmps
in
hlt
imul
test
fcom
xchg
out
or
xor
dec
leave
enter
outs
stos
inc
cmp
ins
icebp
lods
test
sti
(bad)
xchg
xchg
cmp
mov
push
push
jb
pop
repnz
lock
nop
out
imul
push
imul
xchg
aam
push
mov
ret
jne
in
push
mov
jne
in
fs
ja
js
dec
ds
ins
in
mov
add
mov
aam
jmp
inc
ins
or
and
test
or
movs
xor
pop
push
add
or
scas
adc
fcomp
mov
out
jns
pop
mov
add
cmp
xor
sub
sbb
pop
or
jl
pusha
sub
xchg
cmps
cs
lock
jle
mov
pusha
jg
jne
shr
jmp
daa
pusha
push
and
add
test
cs
and
jne
repz
or
jae
mov
mov
movs
fwait
add
into
jl
add
vpmacsww
mov
or
movs
lods
adc
xchg
pop
lea
push
jne
daa
xlat
jo
jb
test
test
push
dec
jl
or
sbb
pop
mov
xlat
fidivr
test
dec
xchg
add
mov
jl
daa
and
dec
loopne
add
or
adc
xchg
or
xlat
push
or
mov
lea
push
mov
dec
jnp
scas
and
movs
out
sub
add
push
push
or
jl
sub
stos
jae
mov
dec
push
out
pop
pop
movs
sbb
or
hlt
sti
jo
mov
and
sbb
add
xchg
mov
dec
or
rol
fs
push
inc
call
mov
and
int
loope
lods
xchg
jnp
or
push
or
ins
mov
mov
push
jo
push
mov
or
popf
cs
fst
inc
xchg
xchg
mov
xchg
dec
mov
sub
jo
pop
dec
add
jo
int
fisttp
adc
mov
inc
dec
adc
test
(bad)
jmp
out
inc
and
push
add
xchg
int
stc
inc
cwde
push
inc
push
imul
or
das
movs
cmp
xchg
jg
ret
push
arpl
jb
pop
sbb
in
push
sbb
ficom
sub
cs
push
push
sbb
mov
jb
sbb
mov
popf
daa
das
pop
adc
sahf
cld
icebp
or
aas
and
icebp
pushf
jae
popa
mov
nop
scas
sub
mov
in
sbb
sbb
mov
dec
mov
lahf
mov
or
retf
rcr
pop
push
sub
js
or
mov
add
jo
cmp
cmps
call
test
and
movs
clc
test
ret
dec
loopne
push
push
dec
inc
sub
lods
cmps
dec
cs
cmps
dec
push
icebp
test
xchg
retf
dec
pop
icebp
test
cs
pop
fild
cwde
lods
scas
mov
inc
mov
add
add
(bad)
add
enter
add
xchg
mov
sbb
jmp
add
sbb
dec
sbb
pop
sub
and
scas
ins
or
ins
shr
lods
mov
je
adc
sbb
xchg
sub
adc
mov
mov
leave
or
and
mov
pop
and
lock
xchg
mov
dec
push
stos
(bad)
xor
nop
xor
lods
xchg
iret
movs
add
ret
sub
mov
mov
stos
or
outs
mov
push
mov
dec
stos
in
jle
fdiv
ins
nop
test
mov
pop
and
shl
int
pop
div
lock
dec
mov
mov
sbb
mov
arpl
sbb
mov
push
mov
xchg
xor
cmp
cli
test
pusha
xchg
sbb
jb
dec
cmps
mov
add
push
cdq
ret
or
nop
ss
or
xor
add
ret
pop
pop
enter
js
les
lds
dec
or
bswap
leave
imul
mov
and
lock
and
jo
jo
ret
lea
jo
mov
shl
push
bnd
mov
push
aam
mov
cmp
or
leave
retf
fadd
in
test
xchg
test
fst
push
cdq
xchg
retf
int3
retf
sbb
mov
cmp
lock
out
push
lods
cmp
cmp
cmp
nop
xchg
cmp
inc
rcl
sbb
rcl
je
fsubr
in
test
xor
mov
add
jo
xchg
and
sbb
push
repnz
enter
sbb
aam
push
inc
ror
ror
push
jno
arpl
aad
test
pop
jb
and
(bad)
clc
out
add
cdq
xchg
xlat
add
or
fcmovu
add
je
or
dec
or
xlat
imul
sbb
xor
aad
ret
lods
mov
xchg
in
sbb
repnz
test
(bad)
or
push
clc
icebp
fnstsw
adc
mov
or
push
push
add
inc
mov
repnz
xchg
retf
dec
repnz
fldcw
dec
call
inc
mov
fisttp
movs
scas
xchg
out
xchg
xchg
loop
or
sub
xchg
cld
adc
fbld
xchg
imul
lods
pop
and
dec
add
mov
les
mov
add
cmp
retf
add
cli
cwde
stos
inc
mov
aam
adc
imul
call
xor
push
push
push
mov
dec
in
in
mov
aas
mov
push
rol
xchg
dec
xchg
jbe
in
movs
call
sub
mov
sbb
xchg
dec
mov
movs
xchg
cmp
inc
xchg
vpcmpgtb
gs
adc
or
pop
jmp
pop
xor
or
dec
push
xchg
stos
jo
jne
call
out
push
je
jmp
sub
mov
movs
cmp
enter
lock
out
or
repz
cmp
icebp
mov
push
push
cmp
dec
fwait
les
push
(bad)
out
or
push
out
pop
and
and
in
mov
add
in
enter
lock
mov
adc
add
iret
add
sub
xchg
inc
push
dec
cmp
and
repnz
cli
hlt
test
sbb
sbb
push
pop
sti
mov
inc
in
out
call
xchg
sbb
mov
mov
in
jno
retf
ret
rcl
inc
cs
pusha
xor
mov
test
pop
clc
dec
push
dec
and
xchg
leave
add
pop
std
and
push
gs
and
pop
pusha
pop
pop
mov
nop
(bad)
in
pop
pop
or
popa
push
rol
push
push
add
and
push
fwait
add
adc
sub
ds
(bad)
push
std
rol
sbb
push
cs
or
in
stc
dec
pop
test
add
inc
lea
hlt
lea
add
cmp
xchg
dec
xor
mov
xchg
jl
fs
rep
add
es
jbe
cld
arpl
push
dec
movs
cdq
dec
call
sub
pop
adc
mov
jle
cli
mov
cmp
inc
cmp
mov
xor
and
push
repnz
mov
and
xor
add
xchg
test
dec
add
sub
movs
and
pop
adc
pop
cmps
mov
leave
add
or
xor
fdivr
xor
pusha
lea
jno
mov
arpl
xchg
sbb
xchg
push
add
sti
pop
or
add
(bad)
or
lods
daa
inc
in
out
mov
and
or
and
dec
xor
pop
aam
or
push
push
inc
adc
fistp
jno
inc
(bad)
daa
lods
or
add
sbb
and
add
mov
test
dec
push
repnz
and
push
loope
and
fwait
(bad)
push
nop
icebp
add
inc
pop
sar
test
mov
or
nop
xchg
ins
inc
ss
dec
dec
adc
dec
and
pop
lods
push
inc
push
cdq
jl
add
sbb
adc
cmps
add
push
lods
aas
xor
iret
xchg
dec
icebp
ficomp
cmp
lea
cmp
sbb
jecxz
push
cmp
sbb
jns
adc
push
add
and
dec
mov
add
or
aad
cmp
fcomp
pop
mov
sub
or
outs
dec
and
dec
or
dec
arpl
cmp
push
xor
jno
fs
sahf
sbb
add
clc
outs
or
inc
ret
add
add
into
push
sub
js
movs
adc
dec
lahf
sub
push
das
jo
pop
leave
(bad)
dec
hlt
fwait
add
leave
push
inc
pusha
imul
mov
daa
push
fs
es
adc
call
test
add
xor
mov
(bad)
xchg
add
push
push
paddusw
mov
mov
mov
mov
(bad)
stc
cmp
js
cdq
rcl
lock
pop
jge
push
inc
nop
cld
retf
or
jno
or
out
mov
push
in
arpl
adc
test
movs
sbb
fadd
inc
dec
fmul
push
mov
dec
push
fimul
inc
jmp
jbe
pop
cmp
cmp
outs
mov
call
lea
(bad)
fs
cli
aas
add
bnd
pop
add
test
jne
bound
fsub
cwde
nop
lock
loopne
push
and
loopne
pusha
ror
imul
jo
and
rcr
jmp
mov
mov
adc
or
adc
pop
sub
or
jp
jae
jo
retf
jne
in
in
and
arpl
loope
outs
and
test
mov
into
scas
push
mov
xchg
xchg
push
lods
mov
xchg
rcl
call
in
cld
pop
adc
adc
push
mov
xor
push
cs
pusha
xchg
dec
sub
in
retf
xchg
movs
mov
mov
int3
cs
in
xlat
mov
or
or
sbb
xchg
dec
sub
xor
in
retf
pop
pusha
push
mov
test
cwde
pushf
mov
xchg
dec
sub
jmp
and
retf
daa
push
xor
or
cmp
xchg
sbb
xor
cs
push
cmp
xchg
push
push
and
cwde
movs
jb
in
lods
pushf
shr
(bad)
in
xchg
push
cs
in
bound
in
retf
add
mov
sub
cs
pop
fs
sub
xchg
retf
mov
in
mov
push
mov
hlt
xchg
dec
ds
sbb
sub
in
retf
sub
jb
cmp
jl
test
jo
dec
sub
xchg
retf
int3
movs
loopne
push
cmp
hlt
les
fdivr
pop
sbb
xor
dec
sub
in
retf
xor
mov
xchg
pop
test
test
je
dec
sub
dec
in
xchg
clc
mov
or
push
mov
dec
in
cs
gs
dec
sub
in
retf
inc
rcl
jb
push
aam
nop
jne
call
repz
push
and
jns
jp
add
dec
sub
or
je
xlat
push
dec
cmp
push
shr
jo
add
add
ins
sti
jne
add
js
mov
cmp
cmp
lea
add
cs
and
jo
nop
push
cdq
or
adc
add
ins
test
add
jo
xor
add
push
or
or
out
push
addr16
pop
and
sub
das
push
xchg
inc
adc
dec
and
add
and
inc
imul
mov
ins
jl
mov
not
jo
mov
cdq
push
lds
sti
dec
scas
push
js
imul
xor
sti
sub
out
(bad)
cmp
sti
or
push
mov
sti
sti
sti
sbb
or
push
xor
sbb
pop
xchg
add
cmp
mov
inc
push
push
push
xor
(bad)
inc
adc
sbb
mov
je
mov
mov
add
mov
and
mov
adc
xchg
pop
jae
adc
xchg
sbb
cld
out
daa
add
adc
push
leave
stos
in
sti
pop
sti
push
dec
call
sub
mov
or
or
ret
pop
and
push
lods
inc
outs
jge
add
cdq
je
lea
and
mov
fs
and
jmp
inc
repnz
jne
cmp
into
add
in
adc
mov
add
sbb
xchg
aam
add
mov
mov
mov
aas
xor
repz
sti
pop
mov
inc
add
inc
add
jmp
add
dec
xchg
inc
movs
test
adc
pusha
rol
imul
sbb
aas
out
ja
and
mov
push
sbb
push
jecxz
or
sti
dec
or
sbb
loope
and
and
adc
loopne
and
and
and
sbb
rcr
test
mov
sti
retf
fisttp
jne
dec
pop
push
xor
cmp
fwait
test
sub
push
cpuid
mov
xchg
out
and
xchg
or
add
xchg
je
clc
push
add
stc
lods
ror
popf
or
jb
nop
sbb
pop
cmp
movs
sub
cs
enter
push
mov
cmp
xor
add
sbb
sbb
add
test
setae
pop
bound
pop
jo
adc
or
adc
popa
sub
xchg
sbb
adc
(bad)
in
sub
loopne
call
push
jns
or
cli
dec
and
xlat
jae
mov
mov
adc
push
adc
sbb
cs
fst
add
test
out
mov
add
sub
push
push
push
sbb
sbb
add
test
add
add
ins
add
and
and
and
and
je
inc
sbb
xchg
retf
inc
inc
cmp
enter
cmp
push
dec
in
mov
(bad)
mov
jle
xchg
adc
jb
sbb
dec
cs
xchg
push
in
dec
sti
pusha
sti
jb
mov
(bad)
adc
or
(bad)
mov
add
push
add
or
dec
pop
add
(bad)
sbb
jb
or
jo
adc
inc
add
jl
or
mov
icebp
sbb
jmp
imul
dec
call
and
ss
adc
rcr
sar
dec
cmp
pop
xor
fdivp
xchg
je
push
jmp
shl
push
jo
mov
pop
xchg
sbb
lods
bound
ror
mov
add
mov
pop
stc
cld
dec
pusha
xor
dec
fs
sbb
lds
sbb
retf
movs
and
stc
pop
sbb
sbb
arpl
mov
push
rcl
adc
jae
pop
fs
rcr
cmp
push
je
retf
dec
test
ror
cmp
lea
nop
es
test
ins
pop
mov
fs
xor
push
in
cmp
cmp
inc
and
dec
rcr
nop
retf
les
and
sbb
mov
sbb
(bad)
inc
fs
dec
push
js
mov
jo
sti
stos
outs
pop
and
arpl
inc
push
xor
in
lahf
in
xor
cmp
mov
and
xor
leave
sbb
aad
leave
and
enter
pop
or
xchg
add
test
out
pusha
push
pop
aas
movs
and
and
sbb
lea
or
sbb
js
and
xchg
push
xchg
lock
and
stc
push
lea
push
daa
jae
sbb
push
adc
xchg
and
push
pop
jp
aad
add
adc
fs
mov
daa
pop
daa
adc
sub
sub
loopne
dec
push
leave
or
mov
pop
pop
mov
loope
sbb
push
out
dec
jae
dec
add
push
pop
xchg
fwait
jmp
xchg
lea
sbb
and
bound
xchg
inc
sbb
dec
popf
test
push
movs
add
add
mov
push
mov
add
cdq
lods
std
dec
or
and
cmps
push
(bad)
dec
and
xor
mov
cdq
adc
nop
les
and
nop
std
lods
xchg
inc
jge
cmp
inc
mov
mov
and
pop
ins
adc
std
sub
test
mov
in
mov
mov
adc
push
pop
test
movs
or
dec
push
inc
loope
std
cmps
push
xor
pop
cmps
push
sbb
mov
xchg
stc
and
or
lods
xor
adc
xor
js
inc
mov
adc
dec
jecxz
pop
mov
dec
mov
push
test
nop
adc
mov
ins
cdq
test
(bad)
inc
imul
fsub
xor
dec
push
and
xor
mov
test
xor
les
pop
mov
or
shl
fxch
(bad)
aaa
sub
and
icebp
inc
pop
xor
cld
or
sub
(bad)
daa
add
xchg
and
jecxz
cmp
jmp
or
loope
add
pushf
dec
and
xor
add
push
jb
movs
add
xchg
in
adc
push
add
sub
jnp
and
jmp
lea
mov
int3
icebp
push
add
jmp
push
or
aaa
in
or
rol
adc
xor
data16
ja
jb
jne
sbb
xchg
inc
push
mov
adc
jle
push
pop
aam
ret
sbb
add
leave
sub
mov
inc
mov
mov
mov
or
outs
adc
pop
ror
jns
add
je
fcmovnbe
iret
call
or
cld
mov
out
pop
mov
xor
inc
mov
xchg
xor
xor
ret
push
sub
(bad)
push
cmp
ja
mov
sub
adc
sti
pop
in
mov
jne
div
and
push
push
aaa
daa
mov
lea
in
pop
idiv
sub
imul
and
pop
sbb
test
push
and
sub
popa
jge
jne
fdivrp
repz
push
push
push
ret
add
sub
push
iret
repz
xor
dec
push
popa
cmp
repz
jge
cmps
mov
fucomi
imul
cld
mov
cmp
cs
pushf
cmp
mov
pop
ror
inc
cmp
adc
inc
push
call
add
aaa
hlt
sbb
or
push
and
push
mov
scas
retf
mov
dec
add
jmp
cmp
sub
push
not
add
jmp
or
es
das
adc
pop
sbb
cli
call
add
(bad)
mov
shr
std
or
scas
inc
loop
clc
and
pop
enter
mov
adc
push
push
jns
es
lock
pop
add
jmp
pop
outs
push
push
int
dec
ret
adc
push
call
mov
pop
sub
mov
adc
hlt
sbb
and
sub
fistp
pop
push
mov
sbb
jl
or
fadd
sub
adc
push
push
push
xor
mov
sahf
into
out
and
je
mov
xor
ret
xor
add
ja
push
shl
mov
sub
or
and
dec
shl
or
sbb
sahf
or
pop
jbe
add
cli
push
push
mov
adc
dec
push
hlt
and
es
push
mov
in
inc
in
push
xchg
pop
pop
cmp
push
cld
cmp
adc
sbb
push
sub
and
add
inc
jmp
shl
fdivp
xor
fdivr
add
call
or
sbb
lock
fwait
dec
lea
loop
imul
scas
shl
sbb
mov
test
inc
and
lods
(bad)
push
mov
adc
lock
jb
cli
pop
or
push
or
std
add
or
mov
jno
sbb
dec
cmp
bound
(bad)
aam
mov
sbb
adc
lock
push
mov
inc
and
ja
sbb
rcr
(bad)
push
push
push
ret
jo
xchg
lock
mov
adc
pop
add
leave
push
add
test
xor
pusha
pop
push
sbb
cld
jmp
adc
and
push
sete
test
test
sub
push
imul
and
or
sbb
call
push
push
add
fild
and
xor
fbstp
cmps
or
ret
inc
test
pop
cmps
xor
out
sub
aaa
idiv
outs
sbb
mov
ins
or
dec
rol
int
sti
sub
add
add
aas
sbb
jle
push
pop
inc
jle
fs
inc
cld
pop
lea
sar
jg
shl
add
clc
sub
pop
fldenv
cmp
jle
push
pop
jo
pop
xchg
cmp
adc
jne
lea
mov
scas
mov
cmp
and
add
jns
add
inc
cmp
jmp
in
dec
lock
add
add
mov
std
inc
adc
jne
lods
out
add
mov
push
sub
(bad)
je
xor
fadd
std
jmp
jmp
jecxz
repnz
inc
add
adc
(bad)
leave
fnstenv
cmp
push
add
or
or
push
xchg
cmp
dec
xchg
xor
cmp
repnz
xchg
sbb
xor
sbb
xor
pop
sub
jge
or
lock
lds
mov
dec
sbb
dec
pop
sbb
inc
add
jne
mov
cwde
or
inc
lahf
push
hlt
cmp
jmp
iret
fdivr
lea
push
jecxz
ret
add
sahf
or
dec
and
pop
call
push
xchg
add
cmp
push
fmul
movs
int
fwait
mov
jmp
daa
cwde
dec
clc
or
push
fdiv
ficomp
mov
cmp
call
cmp
push
loopne
jmp
or
test
push
loopne
inc
es
xchg
jl
nop
mov
mov
int
push
xor
stos
in
jge
push
and
sbb
mov
scas
test
(bad)
(bad)
or
popf
sbb
xor
pop
neg
shr
pop
pop
add
repz
push
jmp
jmp
add
rol
or
sbb
cld
icebp
jb
lea
test
jne
sub
add
test
hlt
ins
mov
fistp
(bad)
out
pusha
mov
push
and
mov
push
xchg
or
neg
push
inc
mov
adc
mov
imul
pop
inc
call
sahf
shr
bound
sub
pop
mov
adc
mov
pop
nop
adc
sub
or
xchg
hlt
and
push
xor
xchg
add
leave
push
mov
inc
dec
add
pop
ror
add
pop
xor
xchg
arpl
inc
push
aaa
add
jmp
stc
mov
fs
sar
(bad)
pop
mov
inc
popa
stos
loopne
fst
mov
cmp
inc
jbe
push
and
jmp
inc
push
(bad)
push
nop
jle
popa
add
sbb
sbb
outs
movups
dec
mov
sbb
outs
pusha
sbb
fcmovnu
dec
inc
cmp
add
push
jne
dec
pusha
dec
xchg
jmp
rcr
das
mov
inc
mov
gs
test
mov
mov
add
cmps
mov
sub
(bad)
adc
int
inc
lods
xor
xchg
out
and
lock
add
mov
sbb
rcl
xlat
push
push
dec
jns
mov
fdiv
(bad)
push
and
sbb
dec
into
shr
jns
sbb
mov
mov
push
mov
adc
cmp
and
mov
sbb
in
(bad)
jne
or
sbb
xrelease
push
or
jne
cmp
xor
sbb
shr
inc
adc
xor
imul
mov
mov
pop
pop
pop
or
loopne
(bad)
jge
sub
fisub
or
je
add
and
adc
jmp
add
in
test
pushf
or
mov
xchg
push
retf
adc
xchg
add
or
push
cmp
add
lods
or
inc
shl
xchg
jb
cmp
jmp
and
retf
push
addr16
push
sbb
mov
dec
pusha
xchg
mov
or
inc
aas
icebp
cmp
ror
push
push
adc
movs
stos
pusha
sbb
hlt
jne
retf
(bad)
push
call
jmp
sbb
daa
sub
pop
je
cmp
xor
or
push
add
call
push
sbb
jbe
test
xchg
scas
or
add
lock
xchg
sbb
hlt
mov
les
pop
or
push
add
mov
adc
lods
add
jp
push
xchg
arpl
sbb
mov
jl
cld
cld
aas
dec
and
add
inc
lock
in
jge
or
mov
jmp
not
and
out
push
pusha
jmp
clc
cmp
scas
xchg
sub
push
jp
dec
inc
adc
pop
mov
movs
or
fdiv
push
nop
push
cmp
mov
and
sub
(bad)
pop
cmp
xchg
push
into
sub
sub
loopne
nop
test
ret
cmp
faddp
stc
cld
call
gs
pop
cmp
adc
pushf
adc
sbb
std
mov
mov
adc
pop
or
call
sbb
adc
or
fld
ja
xchg
js
xchg
adc
ins
pop
je
push
je
pop
cmc
add
jmp
ret
pop
into
(bad)
pop
movs
add
xor
pop
push
jge
loope
leave
and
(bad)
out
xor
adc
or
fldenv
shl
rcl
push
sub
dec
inc
sub
pop
dec
jp
mov
xlat
ss
(bad)
push
inc
ror
ss
pop
fcom
xchg
and
ins
sbb
push
pop
test
mov
sbb
fs
or
sahf
retf
add
mov
popa
fisttp
iret
enter
inc
inc
clc
xor
cs
add
sub
sbb
pop
bound
adc
inc
sbb
cli
test
add
cwde
xchg
(bad)
add
add
fwait
dec
test
je
sub
je
mov
sbb
cmp
pop
or
add
and
push
adc
sub
stos
sbb
push
xor
jge
pusha
test
aam
push
iret
mov
mov
hlt
pop
push
pushf
cmps
jne
add
jnp
push
xchg
pop
ins
cdq
loopne
cmp
inc
or
pop
xchg
jb
lock
sbb
sbb
adc
add
in
loope
lods
sbb
add
sub
or
lahf
and
push
mov
sbb
pushf
shl
jecxz
push
push
js
xchg
jno
ret
scas
out
lock
(bad)
cmp
fcomp
lea
lock
scas
dec
pop
loopne
fs
ror
sbb
pop
inc
mov
in
je
test
cmps
push
add
lock
aas
dec
es
jae
stos
int
movs
mov
push
cld
cmp
les
mov
fnstsw
xor
dec
pop
cmp
dec
sbb
mov
and
retf
dec
mov
and
stc
gs
dec
shl
inc
mov
aam
xchg
in
inc
in
push
cs
leave
or
xor
adc
cdq
jp
cmp
or
mov
cmps
or
sbb
mov
ja
jle
bound
inc
xlat
adc
in
sub
sbb
into
jl
mov
call
nop
mov
sti
and
push
or
test
loope
rcl
or
xchg
mov
lock
jo
inc
or
shl
sub
jmp
cmp
or
jge
push
pop
sahf
into
hlt
loop
aaa
test
add
jle
pushf
mov
inc
push
add
clc
(bad)
xchg
lea
data16
pop
jne
xchg
dec
xor
jmp
add
clc
js
sub
and
sub
(bad)
ins
in
push
sbb
ror
pop
(bad)
pusha
jno
aam
push
cmp
lock
lods
xchg
fdiv
inc
jle
add
ins
mov
and
add
mov
retf
xor
xchg
jl
scas
adc
lods
ss
or
mov
push
imul
sbb
inc
and
nop
push
and
xor
add
pop
dec
pop
cld
add
mov
adc
movs
jecxz
dec
fsub
movs
int
pop
mov
push
jnp
sub
add
out
shr
cmp
ss
sbb
imul
pusha
jmp
lock
mov
xor
gs
pop
test
and
call
or
jl
xor
xchg
xchg
mov
dec
or
aam
int
adc
ret
sbb
sahf
sub
mov
or
fdiv
add
adc
mov
aaa
push
pusha
cmp
int3
and
dec
sbb
mov
je
push
out
dec
adc
sbb
nop
inc
scas
adc
and
cmp
mov
jmp
xchg
mov
add
xor
loopne
(bad)
adc
addr16
lods
ret
adc
pop
jnp
mov
push
sbb
aas
cdq
mov
pop
mov
mov
lods
outs
fsubr
cmp
fwait
lea
lock
sti
dec
sbb
mov
xor
pop
sub
xor
js
fwait
shl
mov
sub
repz
mov
adc
mov
rcr
mov
ja
mov
xchg
or
jb
int
js
pushf
movs
pusha
fucompp
mov
mov
push
mov
test
jle
xchg
add
mov
cmps
jne
shr
test
lock
fst
test
mov
jmp
mov
inc
cmp
lods
ss
mov
dec
(bad)
in
and
inc
jl
or
lods
mov
fisubr
and
movs
movs
bnd
jge
and
pop
pushw
repnz
loope
pop
ja
and
adc
dec
or
xchg
mov
cmp
or
mov
sub
xor
leave
dec
cmp
(bad)
push
pop
fs
pop
retf
leave
push
mov
adc
push
sbb
jmp
jecxz
add
sub
pop
lea
jo
(bad)
jp
enter
inc
sbb
popf
test
jb
push
and
adc
mov
daa
push
push
push
and
mov
add
xchg
jnp
jmp
leave
adc
xor
inc
jne
push
xlat
pop
pop
jns
adc
fidivr
xchg
sub
adc
retf
cli
add
bound
pop
or
lds
cmps
sbb
jo
(bad)
adc
in
xor
xor
ds
push
clc
xchg
push
sbb
xchg
icebp
sub
(bad)
fs
sub
loop
retf
popa
xor
aam
xchg
add
fdivr
jge
push
push
aad
mov
add
mov
pop
pop
inc
xor
call
cmp
test
movzx
push
or
push
test
jmp
mov
dec
movs
jmp
in
and
lds
test
bound
fcom
mov
mov
jae
push
lahf
cli
pop
ja
mov
leave
imul
sub
push
cmps
jle
test
and
lea
das
cmp
pop
jmp
push
and
fsubr
xchg
adc
aam
retf
cli
and
lahf
popf
pusha
mov
and
pop
(bad)
push
or
push
fidivr
cmps
in
inc
mov
add
rcl
aaa
(bad)
add
xchg
clc
dec
jns
fcmovnbe
pop
nop
adc
pop
lock
jmp
sub
pop
or
pusha
fcomp
cmps
pop
cmps
add
xor
add
add
xchg
pushf
fdiv
cmp
rcl
push
jmp
pop
or
popa
add
sub
scas
push
gs
mov
jbe
loop
pop
add
clc
sbb
push
inc
je
inc
outs
rol
inc
ins
adc
pop
fistp
inc
mov
retf
js
add
gs
scas
lea
test
dec
(bad)
push
pop
add
sar
cdq
stc
mov
pop
push
in
out
add
lock
lea
mul
je
fs
adc
clc
inc
add
mov
add
xchg
(bad)
sbb
popf
mov
pop
sbb
je
xor
mov
sub
pusha
add
cmp
js
sti
dec
push
or
cmp
pop
ins
je
add
jns
mov
ret
cmp
mov
jae
inc
fsub
fisubr
stos
clc
rcl
cmp
test
test
int
jmp
push
pop
jne
test
pop
add
les
mov
in
fimul
cmc
push
(bad)
xor
js
adc
push
fnstcw
or
xor
lods
cmps
icebp
adc
xchg
push
ror
and
stos
inc
cmp
push
lods
mov
or
inc
adc
outs
movs
cmp
je
push
mov
sbb
lock
jno
jmp
jmp
movs
ins
(bad)
shr
push
adc
inc
je
cmp
mov
and
int
mov
mov
push
sbb
adc
jno
sti
rcl
add
(bad)
jnp
cmp
mov
sti
cld
inc
mov
dec
aaa
pop
enter
push
cmp
jno
les
add
aas
add
jno
fldenv
mov
inc
xchg
sub
fld
test
adc
add
clc
imul
retf
leave
ror
fld
add
aad
(bad)
sahf
sbb
pushf
mov
test
sbb
mov
add
popa
push
ret
ret
outs
aaa
mov
push
cmp
sub
loopne
cmps
or
cmp
or
mov
mov
fcom
icebp
out
push
shr
xchg
push
(bad)
jo
jae
mov
je
popf
pop
push
ds
pushf
inc
pop
arpl
lock
cmp
cmc
shl
retf
pop
nop
loopne
lods
(bad)
leave
push
pop
and
in
shl
cmp
xor
adc
add
mov
lods
sub
enter
add
xchg
shl
loopne
adc
push
clc
push
dec
push
add
(bad)
jl
dec
pop
hlt
cmp
jg
inc
test
cmp
mov
dec
shl
add
pop
inc
jecxz
mov
xor
sbb
add
jl
loopne
sbb
add
inc
cmp
and
dec
inc
sbb
and
ret
xchg
inc
ja
(bad)
pop
gs
or
pop
addr16
pmuludq
or
test
sub
or
mov
or
push
fist
mov
cmps
mov
dec
sub
in
pop
movs
cmp
fadd
dec
dec
cmps
loopne
imul
(bad)
out
popf
push
fs
push
xchg
aam
jbe
adc
fidiv
jmp
add
sbb
adc
sub
cdq
jmp
xchg
xchg
push
dec
push
lahf
shr
add
jmp
push
jle
aaa
cmp
test
pop
mov
ret
mov
pusha
mov
pop
push
mov
cmp
pop
or
pop
or
push
ret
push
push
sar
cwde
xchg
mov
int3
mov
retf
leave
or
ret
or
mov
cmovns
or
adc
or
mov
outs
loopne
aaa
add
int3
mov
inc
ins
pop
and
jle
xor
xor
mov
add
(bad)
pop
cmps
dec
xchg
ret
mov
imul
arpl
and
add
xadd
mov
sbb
lea
(bad)
fidiv
and
sbb
fstp
sbb
sub
push
stc
mov
loopne
push
adc
mov
jnp
xchg
push
call
fwait
pop
sub
cmp
cmp
add
or
adc
adc
loope
mov
pop
rcr
and
lods
pop
aas
inc
adc
cmp
cmp
pop
arpl
mov
cmps
push
xor
xchg
aaa
push
scas
fistp
pop
shl
mov
and
add
pop
ins
jecxz
sub
out
fild
push
sar
push
mov
add
loope
or
add
or
ret
xchg
fs
fwait
adc
or
icebp
push
(bad)
add
cmp
sub
mov
cmp
mov
aam
dec
and
je
or
xchg
push
shl
xchg
or
cmps
fs
inc
jmp
or
jns
adc
nop
sbb
sub
mov
adc
(bad)
ss
call
inc
push
sbb
cmp
les
mov
push
xor
sti
imul
out
arpl
xor
mov
neg
sub
or
inc
dec
in
or
cmp
and
inc
sub
mov
sub
xchg
cdq
not
sub
mov
popa
enter
cmp
sbb
cmp
cs
loope
push
and
std
iret
test
xor
es
mov
push
shl
jbe
push
mov
xor
jbe
mov
pushf
add
in
dec
add
push
test
add
sbb
xchg
add
mov
test
lock
pusha
loopne
push
add
add
std
push
ja
pop
ret
add
xor
add
push
jmp
xor
mov
ret
dec
xor
mov
cmps
push
mov
push
loop
or
out
dec
ret
dec
fadd
stos
or
fimul
mul
test
push
and
sbb
mov
(bad)
cwde
(bad)
in
sub
test
arpl
mov
mov
adc
fdiv
movs
push
out
rol
bound
retf
pop
xor
jne
xor
push
add
cwde
push
or
xchg
pop
clc
cdq
dec
rol
adc
mul
or
xor
sbb
ds
or
fisubr
cs
fcomp
sbb
dec
ss
cmp
mov
xchg
ins
pop
jmp
lods
inc
jecxz
xor
xor
push
mov
test
push
cmp
push
(bad)
mov
mov
inc
cmp
push
imul
dec
sbb
or
mov
hlt
cmp
imul
std
loopne
sbb
jmp
call
pop
xor
das
mov
inc
and
dec
or
inc
jne
iret
cmp
inc
sub
xchg
out
fmul
aaa
movs
ins
add
jno
or
or
dec
adc
(bad)
aaa
cmp
xor
or
or
scas
xchg
xchg
std
push
fs
inc
ret
or
push
or
push
(bad)
(bad)
sbb
push
repnz
adc
cmp
js
int
jae
aaa
sar
leave
xor
or
xchg
(bad)
xor
test
and
dec
push
push
fmul
lock
jae
xchg
push
mov
ds
ja
rcl
adc
jbe
out
pusha
push
push
mov
fidivr
or
ror
jb
sub
mov
int
cmc
push
dec
sbb
pop
add
xor
loopne
enter
cmc
or
(bad)
enter
fsubr
pop
in
dec
inc
xchg
add
cs
inc
mov
fmul
(bad)
jno
gs
push
mov
push
(bad)
add
jne
adc
sub
sub
sbb
push
ret
fstp
sub
ret
or
pop
cmps
shr
or
sub
and
clc
xchg
sar
sbb
xor
daa
lea
jmp
popf
pop
fs
adc
inc
sbb
aas
repnz
dec
test
or
and
adc
sbb
enter
xchg
adc
xchg
add
mov
aad
jl
lea
push
dec
les
movs
mov
pop
aaa
mov
repz
pop
inc
shl
xchg
push
fmul
mov
rol
inc
cdq
je
(bad)
test
nop
clc
jecxz
shl
push
mov
inc
je
or
cld
push
mov
das
test
push
adc
add
scas
add
add
iret
(bad)
bound
push
adc
sbb
imul
(bad)
(bad)
in
dec
add
mov
dec
pop
or
std
in
popa
jmp
dec
sbb
add
mov
mov
push
cld
mov
mov
add
data16
pop
sub
rcl
xchg
mov
pop
je
push
and
sub
fist
push
cmp
ror
cld
push
shl
sub
je
cs
hlt
or
push
or
rcl
sub
jecxz
mov
jg
in
sub
push
(bad)
xchg
push
adc
jp
leave
lea
into
pop
les
mov
imul
cmp
pop
mov
add
adc
push
add
pop
or
lods
nop
pop
pop
mov
in
xchg
add
jecxz
pop
ret
add
mov
into
ret
cmps
xlat
mov
inc
pop
jae
pushf
ret
test
ret
cdq
sbb
or
pop
test
test
retf
shl
js
lock
cmp
mov
iret
add
test
pop
jne
nop
aam
loope
loopne
stos
je
ja
stos
aas
adc
adc
call
mov
rcl
mov
mov
push
sbb
pop
pop
out
mul
stc
or
jmp
data16
mov
or
nop
pop
inc
or
(bad)
repnz
mov
cmp
push
xor
adc
mov
test
or
xchg
loop
test
bound
lea
sbb
movs
xor
inc
inc
clc
push
and
ret
mov
mov
test
cld
clc
xchg
inc
lsl
sbb
mov
mov
hlt
add
into
add
adc
call
rol
mov
and
int
pop
loop
pop
pushf
add
icebp
lock
xchg
push
out
mov
mov
rol
test
adc
out
lock
mov
sbb
xor
mov
or
add
(bad)
push
cmp
jmp
jl
mul
xor
inc
setbe
enter
ss
pop
sbb
inc
les
jne
jl
sub
or
adc
or
xor
test
inc
and
test
dec
mov
add
pop
daa
or
jl
fild
mov
rol
adc
xor
jo
push
lods
jecxz
aaa
adc
and
sbb
pop
fmul
loope
ror
dec
retf
xor
pop
cli
iret
lds
pop
stos
or
or
bound
clc
fisubr
push
daa
dec
imul
ret
jno
fisttp
nop
ja
inc
jno
inc
pusha
mov
jmp
or
adc
mov
test
cs
(bad)
mul
cmp
repnz
dec
add
sbb
add
retf
lock
xor
xchg
mov
and
mov
sbb
jns
pop
mov
mov
xchg
add
xor
mov
mov
lods
and
push
pop
lds
nop
lock
dec
ret
pop
add
jmp
adc
mov
sbb
mov
cmp
jns
cmp
retf
js
dec
sbb
fldlg2
push
scas
add
sti
aaa
pop
leave
inc
(bad)
(bad)
xchg
adc
xor
cmp
ins
jae
dec
cmp
ins
neg
mov
mov
push
test
inc
adc
sub
ss
and
loopne
sub
or
cmp
push
icebp
inc
jp
(bad)
xor
inc
ret
push
jnp
or
pop
call
jmp
clc
add
mov
fnstsw
stos
add
push
loop
add
adc
iret
test
sbb
loopne
movs
and
das
test
test
or
or
inc
jecxz
xor
add
mov
mov
mov
add
push
not
fcomp
jmp
mov
lea
fmul
js
data16
scas
inc
cmp
add
jb
aam
pop
inc
sbb
stos
add
lock
arpl
sti
and
ins
pop
aaa
xchg
rol
sbb
xchg
mov
aam
adc
mov
jns
jo
aam
and
xchg
js
xor
retf
test
dec
imul
pop
or
imul
jb
push
test
cmp
retf
mov
mov
push
cmc
push
jge
jne
lods
inc
clc
sub
mov
dec
adc
or
push
in
or
adc
ret
adc
loopne
pushf
pushw
fcomi
mov
adc
adc
inc
jmp
rcr
call
push
and
xor
push
inc
push
or
in
int
or
add
xor
rcl
add
xor
repnz
inc
mov
loopne
int3
pusha
rcl
pop
cmp
mov
outs
shr
sub
aas
xor
jmp
fistp
in
sub
mov
movs
dec
xor
mov
xor
sub
fdiv
mov
test
inc
or
dec
test
aad
pushf
scas
out
in
lods
fnstenv
mov
sub
pop
add
lods
push
sbb
popa
mov
stos
push
add
add
fimul
mov
jg
inc
and
push
pop
sub
add
lea
add
push
sbb
js
adc
cmps
inc
pushf
dec
lahf
jo
fisubr
jp
sub
pusha
adc
push
mov
test
add
ror
jnp
xor
and
pop
mov
movs
xchg
and
mov
mov
test
mov
and
add
sub
mov
lods
or
sub
add
mov
fisub
mov
adc
and
push
push
pop
push
or
imul
cmp
push
xor
int3
add
test
adc
sub
mov
test
js
movs
add
loopne
cmp
data16
xchg
push
or
dec
pushf
mov
ret
mov
push
movs
mov
sbb
in
adc
add
xchg
xor
femms
xchg
dec
sub
jmp
sbb
out
test
and
aad
dec
(bad)
mov
dec
in
aaa
push
loop
inc
xchg
push
and
xchg
xchg
and
retf
es
xor
and
pop
(bad)
jmp
pop
mov
cmp
sar
sahf
pop
add
into
fisubr
push
(bad)
adc
je
cmps
stc
in
call
cmp
mov
adc
jmp
adc
fwait
hlt
sub
cld
je
mov
or
inc
mov
inc
pop
inc
push
inc
push
pop
sbb
rol
lock
xor
pop
dec
inc
in
lock
ret
add
or
daa
adc
dec
or
push
push
ficomp
mov
add
sbb
jne
fadd
mov
xor
pushf
add
xor
add
lods
adc
dec
mov
je
sar
ficom
movs
sub
loope
hlt
pop
sbb
jo
ret
addr16
add
adc
adc
sbb
or
xor
clc
and
or
bound
pop
xor
jl
(bad)
adc
fidivr
cmp
mov
retf
iret
pusha
or
dec
push
repz
or
inc
add
pop
test
movs
in
shl
and
sbb
jns
mov
ss
in
in
push
mov
out
std
or
ret
sbb
icebp
movs
inc
sahf
xchg
in
cmp
jbe
sbb
pop
fisubr
xor
push
adc
in
inc
add
pop
mov
mov
aaa
into
pop
dec
sbb
inc
sub
xor
fstp
and
scas
xor
cmp
ret
sub
mov
je
sub
sbb
fmul
xor
hlt
mov
ss
lock
add
arpl
add
xor
pusha
mov
icebp
imul
shr
div
jo
fs
or
popf
retf
cli
in
inc
inc
mov
xor
cmp
add
add
icebp
mov
pop
mov
add
mov
pop
inc
and
fdiv
inc
jne
aas
mov
or
cmp
adc
call
jo
sbb
xchg
fld
add
fnsave
or
sub
jne
nop
mov
jb
push
mov
pop
out
cmps
jo
jnp
rol
cli
inc
aad
pushf
or
mov
repz
sbb
sbb
or
mov
je
push
out
scas
test
push
jl
adc
test
jne
adc
pusha
or
dec
add
not
dec
in
adc
and
hlt
pop
push
or
sub
mov
fadd
add
push
push
dec
adc
cs
fcmovb
cs
out
pop
xor
addr16
stos
popa
sbb
ds
or
hlt
add
or
cs
ret
jmp
push
aaa
adc
sbb
sbb
fistp
ins
jbe
dec
sub
cmp
jo
sub
and
sti
arpl
cli
inc
dec
mov
cs
adc
jmp
inc
in
push
test
inc
or
ror
js
mov
push
pop
stos
cmp
mov
pop
shr
jge
pop
add
imul
test
and
les
test
daa
mov
adc
retf
stos
int3
pushf
dec
pusha
pusha
mov
push
push
mov
addr16
mov
inc
and
xor
lods
loope
jne
add
jbe
js
push
lea
loop
ds
aam
and
mov
or
push
ror
cmp
add
or
test
mov
adc
jle
jne
xor
hlt
shl
imul
push
shr
jo
sub
mov
jo
cmc
pusha
mov
test
xor
pop
pushf
push
js
cmp
imul
sub
push
lahf
sbb
icebp
je
dec
dec
sub
(bad)
lock
sar
cmc
mov
ins
or
dec
(bad)
or
push
mov
mov
popa
cmp
lock
sbb
and
mov
adc
movs
pop
cmp
loope
bound
inc
(bad)
jmp
and
pop
cdq
aaa
jo
bnd
xchg
xchg
loopne
out
ja
mov
test
lods
es
es
shl
outs
cmp
fist
mov
cmp
add
mov
rep
ror
inc
xlat
clc
pop
push
dec
inc
push
push
adc
movs
mov
fld
or
(bad)
fidivr
and
mov
ffreep
int
cdq
inc
jne
push
js
and
add
push
ss
pop
pop
and
cmp
and
clc
inc
dec
sbb
js
jge
sub
sbb
push
neg
xlat
xchg
repz
or
push
test
outs
cmp
arpl
mov
cs
cmp
rol
aad
imul
pop
addr16
xor
ins
push
jl
push
and
mov
mov
push
mov
mov
pop
call
jmp
or
xor
(bad)
cmps
add
stos
add
jb
mov
or
call
or
jo
mov
or
sbb
inc
inc
shl
ja
xor
mov
cmp
shr
and
push
and
mov
add
bound
mov
inc
and
dec
mov
mov
mov
xchg
xchg
sar
push
fdiv
push
ret
ja
pop
adc
inc
in
mov
xchg
clc
or
shl
pop
ds
mov
jmp
rcl
es
icebp
lock
push
int
loope
mov
ins
pop
ret
jecxz
data16
adc
sbb
ins
pop
sub
push
(bad)
or
push
stos
dec
xchg
inc
xchg
movs
fnstsw
jbe
add
call
sbb
jecxz
sbb
nop
aam
or
add
enter
ret
enter
inc
cmp
in
adc
bswap
push
inc
je
adc
ss
xor
mov
call
or
xor
call
aas
shl
push
adc
loop
fidivr
daa
test
cld
je
push
jbe
fadd
jecxz
adc
loop
sbb
mov
pop
cmps
(bad)
fld
inc
icebp
mov
pop
iret
not
into
je
and
jo
dec
imul
into
mov
scas
ror
dec
stos
outs
ror
inc
pusha
or
dec
sbb
ret
ja
xor
stos
in
call
adc
lahf
mov
dec
mov
dec
sbb
je
ret
test
mov
adc
pushf
clc
iret
add
repnz
clc
pop
gs
or
cmp
sub
add
fiadd
outs
or
test
rcr
mov
push
jmp
lods
cmps
cli
std
pushf
jns
nop
or
xchg
outs
or
or
dec
retf
sbb
mov
pop
aas
das
and
movs
outs
les
jo
into
imul
cmp
in
push
ja
mov
inc
imul
pop
sbb
push
(bad)
adc
or
repz
push
or
rcl
push
mov
sbb
pop
or
sar
adc
add
rcl
add
jno
ja
test
jl
imul
xchg
test
push
popa
xchg
push
adc
fld
inc
aaa
and
arpl
jb
cli
mov
mov
cmp
pop
cmps
clc
sbb
sbb
jne
push
aaa
addr16
mov
test
inc
push
dec
dec
and
mov
xor
mov
pop
mov
pop
pop
repnz
jbe
rcl
or
inc
out
and
jl
pop
arpl
and
sub
mov
int3
dec
inc
test
inc
xchg
popa
pop
jb
mov
jo
lahf
inc
pop
int
retf
jb
xor
lods
adc
inc
scas
cmp
in
inc
out
push
xor
div
inc
sbb
mov
mov
lea
arpl
dec
push
push
scas
pusha
aam
cmp
sbb
je
cmp
(bad)
fcmovne
into
rol
xchg
fcom
and
ins
and
imul
(bad)
sbb
adc
repz
dec
sar
push
nop
int3
xchg
jp
push
in
retf
test
out
push
cmps
push
and
push
add
inc
sub
adc
sub
mov
inc
mov
(bad)
adc
adc
push
sub
js
add
popa
cmp
adc
pop
outs
inc
pop
inc
or
and
pop
push
add
cmp
sub
les
clc
dec
push
push
or
xchg
add
sub
dec
sub
push
leave
jne
pusha
mov
outs
jmp
add
ja
js
inc
outs
jl
or
scas
scas
push
lahf
push
add
je
and
lock
add
add
outs
hlt
pop
sbb
jl
mov
push
and
xchg
retf
aas
add
jmp
imul
popa
pop
sti
shl
lock
imul
mov
xor
mov
push
(bad)
cmp
js
or
ret
pop
or
loop
add
sub
adc
pop
or
adc
inc
add
sub
dec
loop
je
int
imul
out
pop
push
pop
add
cmp
mov
push
loopne
mov
ret
loop
or
pop
adc
loopne
cmps
dec
cdq
cld
push
inc
mov
pop
imul
or
fisubr
mov
mov
pop
fstp
ja
fwait
pop
aaa
iret
and
clc
mov
and
loopne
in
push
call
pop
rcl
call
or
ret
mov
aas
push
push
enter
fidivr
cmps
rcl
sbb
mov
cmp
sbb
(bad)
pop
sbb
push
aaa
aad
sbb
inc
pop
adc
inc
mov
test
cmp
clc
sbb
mov
or
cmp
test
jmp
jmp
aam
fdivr
pushf
xor
lds
ja
xor
mov
cvtdq2ps
dec
add
ret
cmp
js
sbb
push
ss
ret
add
add
je
and
clc
and
cmps
outs
or
js
jo
inc
daa
arpl
mov
xchg
push
pop
js
mov
adc
aaa
xchg
ins
(bad)
dec
inc
jl
call
mov
jbe
push
push
rol
rol
call
jnp
push
shr
mov
in
cld
cmc
ret
jns
push
jae
mov
and
and
fcom
add
push
ins
hlt
cmp
je
inc
arpl
mov
aaa
cmc
push
je
mov
lods
jbe
cmp
push
xor
jmp
push
test
call
movs
js
imul
jbe
cwde
je
loope
xchg
test
add
jnp
test
add
pop
push
and
mov
push
or
and
retf
mov
adc
cmp
aam
or
cmc
movs
push
sbb
add
pop
outs
or
jmp
int3
nop
mov
pop
or
call
push
pusha
lahf
js
sbb
into
andnps
retf
xchg
sbb
jecxz
cdq
inc
jno
push
fwait
les
pop
jne
push
push
test
mov
jge
stos
push
xchg
push
(bad)
clc
dec
adc
leave
add
sub
pop
and
dec
(bad)
cli
jns
std
push
sbb
xor
pop
or
xchg
and
dec
stos
jg
and
mov
fadd
xor
pop
add
pop
push
push
xor
in
es
jl
cmp
push
pop
push
in
dec
in
out
sub
test
int
jp
sbb
and
or
xor
cmp
sub
mov
mov
dec
in
add
adc
pusha
push
or
add
scas
adc
or
cmp
je
xor
adc
outs
das
cmp
xchg
mov
mov
ror
jb
push
mov
in
cmp
jns
add
cmps
sar
and
cmp
or
dec
push
inc
ror
ins
mov
cs
test
fdivr
cs
ret
imul
jmp
xchg
adc
jmp
dec
mov
ret
call
and
add
retf
test
mov
add
sub
out
in
bound
mov
xchg
mov
and
push
dec
sbb
test
popa
leave
ret
dec
cmp
jmp
inc
mov
mov
dec
push
sub
jg
out
mov
out
ret
mov
xchg
mov
data16
jnp
clc
sbb
pop
mov
adc
and
pop
mov
pop
pushf
cld
scas
div
inc
add
xchg
mov
push
cmps
rcl
xor
add
or
test
mov
sub
adc
(bad)
sub
jae
ret
or
add
push
and
jo
mov
fsub
shl
or
ja
xchg
mov
sahf
lock
cs
enter
jo
fbstp
or
lds
push
pop
jnp
xchg
arpl
rcl
test
pop
pop
xor
push
and
fadd
mov
xor
xchg
jge
popa
or
or
xor
adc
push
dec
dec
popf
cmc
dec
adc
je
or
xchg
arpl
add
scas
lea
jmp
fist
inc
dec
pop
inc
dec
jnp
movs
test
aam
js
shl
or
mov
retf
and
add
ds
int3
ret
retf
cmp
mov
xchg
cwde
mul
and
nop
push
cmp
jne
fwait
adc
(bad)
xor
mov
icebp
pop
xchg
int
mov
shr
or
jge
inc
add
and
sub
mov
add
dec
sbb
jne
jns
js
inc
sbb
cs
ret
sbb
xor
dec
lock
push
mov
pop
add
int3
add
jl
adc
mov
cmp
or
push
push
and
add
lods
lds
icebp
fcom
lods
and
mov
or
movs
loop
hlt
or
adc
loop
xor
inc
cld
mov
push
pop
popf
jl
(bad)
ja
cld
int
aas
jge
aas
fistp
rcl
movzx
or
pusha
xor
cmp
push
or
fist
pusha
inc
mov
nop
int3
jg
pop
sbb
mov
(bad)
adc
push
(bad)
mov
xchg
inc
popa
add
cli
pop
loope
dec
mov
sbb
inc
repnz
movzx
lock
or
dec
je
dec
ficom
scas
(bad)
or
dec
push
in
add
add
int3
jo
rcr
adc
and
stc
or
dec
rol
push
add
lods
das
add
xchg
mov
xor
cmp
sub
shr
and
mov
rcr
xor
cmp
movs
or
sub
or
dec
jl
stos
and
inc
in
movs
rol
loopne
movs
jmp
mov
scas
sub
sbb
rol
mov
jo
rcl
and
jb
push
mov
add
add
shl
adc
mov
and
das
cwde
inc
push
push
jl
push
inc
inc
cli
add
and
mov
movs
sahf
loop
das
xlat
out
xlat
xchg
stos
retf
addr16
push
add
sbb
inc
ret
inc
pop
ja
mov
adc
xor
add
inc
sbb
pop
adc
enter
cli
push
adc
mov
and
mov
mov
out
cs
aam
hlt
punpcklbw
sub
and
push
inc
adc
cmps
popa
movs
jbe
fld
jno
mov
cli
sbb
test
and
and
jp
pushf
fiadd
xchg
inc
jno
jno
jmp
xchg
mov
cmp
ins
xor
mov
dec
mov
ret
or
mov
cmp
push
es
mov
mov
inc
cmc
and
push
inc
sub
xchg
mov
dec
nop
mov
xor
pop
sub
lods
and
in
xchg
add
ds
xchg
adc
or
sar
adc
pop
repz
(bad)
pop
ret
push
ins
in
push
ja
push
out
inc
popa
js
cmp
(bad)
xor
mov
sti
and
add
fwait
aad
mov
xor
adc
loopne
mov
sbb
lods
ss
cmp
pushf
cmp
mov
mov
xchg
popa
xchg
mov
adc
jb
push
adc
in
jge
das
add
in
xchg
stos
jecxz
xor
sub
test
mov
bound
adc
adc
int3
dec
push
ficom
out
aam
ret
pop
sub
pop
xor
imul
or
ja
add
ds
fldcw
repz
inc
xor
add
mov
adc
and
adc
ds
or
push
cmp
daa
add
adc
add
es
scas
pop
mov
fs
cmp
pop
mov
sub
movs
stos
popa
mov
data16
cmps
push
out
stos
lods
loopne
or
sbb
ret
or
sbb
xchg
sub
mov
or
aaa
retf
cmp
push
data16
or
dec
add
ret
add
add
sbb
add
out
mov
or
inc
add
cmc
scas
or
pop
leave
or
jmp
push
lock
loopne
mov
jecxz
pop
push
enter
add
rol
fadd
jge
scas
pop
add
fsub
mov
jmp
push
mov
mov
mov
sar
into
add
xor
mov
push
lea
ins
fs
and
adc
sahf
mov
shl
mov
add
mov
loopne
(bad)
movs
fadd
call
add
mov
out
pop
inc
mov
mov
adc
(bad)
jle
cmps
lock
shl
sbb
sub
cmp
add
xchg
cmp
cwde
mov
push
or
mov
add
and
dec
jmp
jmp
push
int3
sbb
xor
mov
adc
dec
aas
xor
pop
push
push
mov
stos
fucomip
movs
jmp
or
pop
cs
loope
jno
jp
pusha
cmp
mov
das
jns
push
fyl2x
or
mov
lock
es
adc
xor
fs
cmps
cmp
sar
aam
call
mov
cld
xchg
pop
or
ror
jmp
push
test
loopne
in
fcom
jbe
push
jns
and
add
or
add
add
les
sbb
std
jnp
or
ds
push
into
xlat
mov
fadd
ret
rcl
pushf
push
xchg
jb
pop
pushf
das
(bad)
test
sub
and
in
push
dec
sbb
adc
call
jg
xor
inc
repz
inc
sbb
sub
jne
scas
pop
push
ins
dec
inc
(bad)
in
cmp
xor
adc
(bad)
and
imul
repnz
lock
jg
lea
test
pop
mov
retf
inc
inc
shr
(bad)
push
shl
mov
bndstx
jge
retf
sub
je
jecxz
pop
dec
cmp
in
enter
push
test
lock
(bad)
fcmovu
add
std
dec
jmp
into
add
or
fadd
cmp
cwde
sub
fdiv
les
jae
mov
fsub
mov
xlat
loopne
fisubr
and
inc
call
adc
lahf
adc
push
call
dec
adc
push
cld
call
adc
adc
add
mov
loop
mov
xchg
dec
pmulhw
xlat
test
push
repnz
pop
test
test
cmps
adc
retf
sbb
fst
push
fdivp
in
js
and
pop
pushf
movs
pop
in
mov
adc
lods
ja
gs
mov
add
out
sbb
mov
mov
sbb
call
and
fcomp
daa
or
jl
xchg
cmp
jle
and
lea
xchg
mov
inc
or
add
cmp
jl
mov
or
sub
es
rcl
xor
fdiv
loopne
lock
and
inc
fcom
or
dec
fisub
call
fisub
push
jne
sar
or
in
cdq
sbb
lock
test
push
mov
mov
sub
fwait
sub
dec
gs
xchg
mov
pop
sahf
sbb
js
sbb
ror
out
push
loopne
adc
bnd
add
inc
clc
and
adc
add
and
mov
pop
mov
fdivr
push
or
or
inc
rcl
xchg
into
(bad)
sbb
ins
lods
adc
pop
and
adc
or
lock
mov
adc
lock
mov
clc
push
enter
hlt
sbb
in
scas
seta
(bad)
pop
xchg
dec
dec
clc
dec
add
ss
mov
sbb
cdq
in
and
add
xchg
call
xor
cdq
add
clc
xor
lea
sub
inc
enter
mov
push
loopne
call
fnclex
dec
dec
cmp
or
dec
add
add
push
sbb
nop
sbb
adc
je
(bad)
sub
pusha
mov
mov
fcmovnb
add
ins
dec
sub
ficom
and
sub
lock
mov
mov
inc
or
cmps
mov
lock
data16
xchg
mov
addr16
xchg
sbb
int3
adc
das
test
or
sbb
in
mov
sub
call
push
cmp
sbb
lock
(bad)
das
mov
and
pop
test
shl
fcmovbe
xchg
cmp
cs
adc
or
or
pusha
mov
loop
rcl
add
js
repnz
mov
push
add
(bad)
push
xchg
lods
cmp
int3
cwde
sub
jae
pop
push
adc
je
push
add
sub
add
pop
cli
adc
cmp
(bad)
jo
js
mov
jmp
push
cmp
push
dec
add
pop
test
or
push
imul
je
mov
inc
and
sbb
ds
adc
loope
push
pop
ret
mov
mov
arpl
jnp
test
mov
sbb
mov
and
add
(bad)
cmp
mov
mov
xchg
push
retf
or
jo
out
mov
or
les
arpl
and
and
imul
aam
push
int3
xor
xchg
ds
xor
sbb
sub
push
xchg
xchg
or
pusha
inc
inc
fs
loopne
pop
les
add
jnp
jno
shr
jge
inc
aam
push
cmp
sbb
adc
cmp
jge
mov
sub
(bad)
das
adc
cmp
je
inc
sub
pop
(bad)
in
adc
test
pop
cld
daa
sub
and
sbb
dec
push
cwde
pop
inc
mov
fidiv
lea
push
outs
cmp
sub
packuswb
shl
or
js
jno
mov
push
push
or
out
mov
adc
mov
popa
xchg
mov
jmp
aas
push
add
or
adc
push
xor
daa
pop
ds
mov
push
inc
xor
adc
in
movs
dec
fwait
push
sub
push
lods
dec
aad
cld
sbb
and
pop
stc
push
mov
jmp
jb
push
jb
or
add
cmps
and
jmp
pop
loope
adc
jae
bound
mov
je
pop
jp
add
pop
jns
or
js
dec
push
test
stos
inc
cmp
mov
inc
sahf
jmp
and
adc
xchg
ds
fiadd
pop
pop
jmp
sub
scas
jmp
call
jmp
push
jmp
push
add
mov
call
jmp
push
call
or
leavew
jecxz
pusha
lea
xchg
popa
test
rcr
xchg
cdq
fcmovbe
cwde
push
push
or
jecxz
lods
inc
jl
pop
pop
neg
cmp
jae
inc
mov
pop
rcl
inc
adc
fnstcw
dec
ret
inc
aam
adc
push
push
stos
push
cmp
jl
adc
push
jo
loopne
sub
mov
dec
sbb
or
(bad)
imul
shl
sbb
adc
dec
cmp
mov
push
mov
or
and
mov
or
push
cmp
das
and
jo
xor
push
jg
lods
loope
pop
hlt
mov
pusha
fcom
clc
jl
pop
jae
(bad)
fisub
mov
add
dec
add
push
push
pop
ret
pop
push
lods
pop
cli
mov
test
(bad)
out
fmul
push
jl
push
in
sbb
cs
add
push
mov
sbb
je
pop
add
dec
mov
fsub
add
test
ds
movs
jmp
ins
push
mov
push
dec
movs
add
sbb
xor
add
mov
xor
cmp
sbb
push
jno
adc
add
fsub
pop
sub
add
adc
jge
push
test
cmp
jmp
push
jle
loopne
ret
inc
pop
loopne
shr
push
ror
add
loopne
adc
jmp
add
movs
into
in
or
sbb
cmp
rcr
test
push
loopne
lods
xor
xor
dec
lods
fdivr
xor
push
fcom
and
add
sbb
aaa
sar
or
push
push
jns
inc
xchg
jmp
add
mov
ins
cmp
sub
in
imul
cwde
xor
pushf
out
or
xor
push
mov
mov
js
fimul
jae
popa
mov
and
(bad)
call
ror
fs
xor
fdivr
cs
fucomi
jo
mov
or
into
aam
xor
pop
aam
mov
and
cmp
dec
movs
fadd
dec
gs
push
movs
jnp
outs
xor
dec
sbb
call
sub
xor
sbb
xor
add
loopne
add
xor
enter
dec
movs
xchg
add
rcr
mov
leave
push
lods
mov
xor
sub
sub
add
inc
mov
mov
add
jbe
xchg
punpckhdq
adc
sbb
mov
jnp
pop
xchg
pop
mov
sub
test
jmp
adc
cmp
jge
xor
xchg
cmp
je
sbb
or
jmp
push
lods
add
sbb
push
add
mov
jge
xor
(bad)
adc
jge
mov
xor
or
jbe
test
push
push
in
or
sub
inc
push
test
or
arpl
fmul
pop
xor
cmp
pop
cmp
mov
sbb
popf
jecxz
inc
mov
add
and
sbb
adc
cmp
dec
adc
adc
mov
adc
movs
hlt
shr
and
sahf
or
aas
(bad)
jne
add
inc
loop
(bad)
push
lods
mov
icebp
fsub
xchg
sbb
xchg
pop
dec
leave
jo
add
scas
test
adc
dec
movs
sub
test
adc
mov
cmp
add
cdq
js
pop
sub
mov
push
mov
(bad)
in
inc
inc
dec
pop
ret
imul
fldenv
or
mov
outs
pushf
pusha
or
or
rol
dec
fidiv
inc
jle
inc
sbb
ins
sub
push
(bad)
js
push
outs
adc
adc
mov
mov
add
or
jl
ror
mov
jl
inc
(bad)
(bad)
cmp
sbb
cmc
push
and
aaa
jle
xlat
inc
push
pop
push
mov
sahf
pop
inc
mov
cdq
pop
xchg
rol
in
xor
test
inc
test
mov
add
push
pop
pop
rol
call
jl
dec
adc
xchg
dec
rcl
popf
loope
mov
mov
pop
stos
pop
jmp
rcl
inc
sbb
adc
sub
nop
mov
mov
pop
js
or
pushf
mov
das
cmp
sub
inc
adc
jbe
and
mov
xor
mov
test
dec
cmp
cwde
js
sbb
add
xor
push
jne
pop
mov
push
adc
jne
xor
inc
and
and
inc
clc
aad
cmp
fwait
test
neg
add
sbb
adc
cmp
push
mov
adc
ds
push
and
add
lea
sbb
cli
sbb
or
sbb
xchg
add
loope
lock
pop
mov
call
jne
js
mov
or
xor
cmp
inc
pop
sub
adc
out
pop
add
sub
xor
mov
and
ror
inc
xchg
push
gs
shl
xchg
xor
xchg
adc
push
pushf
pop
mov
jmp
mov
xchg
push
cmp
or
push
fisttp
add
jbe
xchg
and
push
cmp
das
mov
add
mov
xor
sbb
movs
call
add
sub
xor
fld
push
(bad)
jnp
mov
mov
je
mov
js
cmps
jge
push
mov
sbb
sbb
ds
push
pusha
mov
retf
add
sbb
int3
call
add
(bad)
clc
xchg
sbb
je
outs
xor
sbb
mov
push
jo
hlt
jne
shr
add
out
sub
pop
hlt
cmps
pop
and
mov
call
ret
mov
sub
xor
or
mov
mov
push
push
fnstenv
push
dec
arpl
and
adc
xchg
enter
repnz
inc
push
rol
inc
hlt
movs
sub
imul
faddp
dec
repz
or
inc
sub
mov
jbe
push
aam
(bad)
push
mov
pop
lods
std
(bad)
rol
add
mov
xor
or
repz
xor
lods
push
push
xchg
mov
loopne
hlt
rol
mov
or
js
sub
cmp
stos
dec
sbb
enter
jno
inc
shr
cmp
int3
push
xor
mov
ds
call
es
(bad)
aam
aaa
and
or
adc
fs
jbe
loope
sbb
nop
add
nop
or
push
stc
inc
jmp
push
push
cld
or
add
add
pop
(bad)
cmp
test
and
dec
arpl
cmp
(bad)
xchg
adc
sub
add
icebp
call
in
ret
xchg
mov
cmps
and
xchg
retf
pushf
mov
fst
lods
inc
add
cmp
push
sbb
mov
scas
push
dec
cmps
nop
ret
mov
add
mov
xor
call
mov
vunpcklpd
add
iret
call
cli
mov
sar
lea
jbe
sbb
push
sbb
loopne
movs
ret
mov
adc
mov
loop
sub
loope
xor
or
loopne
mov
rcl
add
xchg
popa
xchg
loopne
pop
aaa
sub
sar
out
dec
or
jae
fcom
and
std
xchg
dec
lods
jnp
add
les
frstor
add
xchg
and
pop
cmp
aaa
aas
xor
adc
xchg
push
xchg
mov
pusha
lea
imul
jbe
fldcw
add
push
jg
pop
lock
add
dec
sbb
cmp
adc
punpcklwd
leave
shl
push
iret
or
sbb
cmp
outs
mov
(bad)
mov
push
cmp
fs
inc
loop
or
cs
cmp
ins
mov
div
push
mov
out
fnstsw
in
jbe
push
xchg
sub
mov
add
add
push
loope
jno
movs
mov
test
imul
xor
sbb
outs
xor
imul
push
fiadd
jb
mov
into
adc
pop
ja
into
sar
sbb
and
xor
adc
data16
(bad)
aam
and
and
test
adc
or
add
xchg
xchg
scas
popf
or
fadd
push
fdiv
sbb
adc
and
xchg
aaa
adc
pop
add
les
jecxz
lahf
loopne
mov
cmp
push
mov
or
push
jge
add
sbb
int3
sbb
rcl
fmul
fdivr
add
ins
lea
or
push
ret
outs
and
ja
sbb
rcr
mov
sbb
cmp
sbb
jns
fs
mov
push
push
mov
cmps
aam
mov
xor
imul
sub
push
cmp
sbb
call
ins
cmp
cmp
sbb
sahf
enter
int3
cmp
push
add
sar
push
rcr
or
call
and
lea
les
push
or
pop
or
push
jmp
adc
xchg
sub
frstor
pop
nop
out
xor
out
inc
pop
test
jae
inc
xchg
sub
test
inc
push
ret
xchg
cmps
not
mov
pop
lea
popf
ss
dec
test
pop
add
das
adc
fs
dec
inc
push
sub
xor
mov
jo
dec
leave
mov
dec
sub
test
push
test
mov
cmps
push
leave
mov
and
or
(bad)
int
je
mov
jb
push
pushf
dec
cmp
mov
xor
pop
push
add
ins
xchg
or
dec
adc
pop
dec
adc
cmp
sbb
sbb
outs
jmp
jp
js
retf
push
aas
fcmovb
ins
sbb
lods
pop
ficomp
(bad)
sub
int
mov
loopne
popf
or
fldenv
sub
jo
sbb
jge
push
mov
or
outs
inc
clc
mov
or
sar
cmp
int3
jae
adc
cmps
(bad)
dec
in
add
icebp
pop
fsub
sbb
mov
outs
lods
push
(bad)
mov
push
leave
cdq
add
pop
mov
push
add
mov
cmp
mov
push
and
mov
mov
add
je
dec
je
add
mov
sbb
dec
jne
mov
cdq
fs
push
adc
add
xor
and
add
add
aaa
jmp
je
rcl
sbb
jo
loopne
pop
das
lods
mov
add
cmp
in
push
adc
sub
xor
cdq
mov
std
push
in
ret
clc
shld
push
pop
sbb
cli
leave
shr
add
dec
pop
pop
mov
sbb
xor
mov
sbb
test
and
dec
sti
push
or
push
push
call
dec
and
test
dec
pusha
inc
mov
xor
fwait
add
in
cmp
dec
xor
xchg
pushf
mov
sub
ror
dec
xor
jge
mov
cmp
xor
jmp
jb
inc
call
ja
add
sub
push
pop
ja
ror
xor
mov
push
(bad)
in
loope
ror
add
enter
fimul
and
push
(bad)
out
push
sbb
mov
cmp
pop
pop
dec
inc
adc
mov
add
and
and
mov
push
stos
ins
or
inc
mov
cmp
push
or
or
jecxz
dec
test
push
ret
or
dec
sbb
add
stos
push
popf
ret
or
leave
in
inc
sbb
adc
mov
cwde
sub
lea
inc
nop
xchg
xor
cmps
sahf
sub
inc
rcl
je
mov
call
aaa
mov
adc
cli
jne
jmp
or
retf
xchg
xchg
out
xor
stos
bound
push
hlt
push
ror
mov
cmp
mov
inc
dec
jnp
add
test
jle
sti
(bad)
push
dec
sbb
dec
bound
jl
pop
jb
jmp
or
stos
in
mov
fwait
inc
int
sbb
push
adc
ins
arpl
push
js
xchg
jl
icebp
or
mov
pusha
inc
pushf
cmp
or
adc
pop
cmp
ficom
stos
mov
pop
clc
pop
outs
popa
add
adc
mov
add
pop
inc
cmp
repnz
lods
push
adc
add
sbb
pop
push
add
dec
sub
lods
jle
cmp
jbe
inc
jmp
test
jmp
in
and
pop
jmp
mov
mov
xorps
inc
or
push
sub
scas
fsub
xor
js
es
cmp
ja
pushf
add
push
push
add
pop
loope
loopne
jo
and
pop
adc
add
ret
lods
pop
sbb
jae
enter
lds
adc
jbe
dec
gs
int3
test
adc
inc
pop
mov
fnstenv
xchg
cmp
rcr
inc
xor
pop
(bad)
xchg
loopne
xchg
or
mov
es
jg
fld
(bad)
adc
push
lods
les
hlt
mov
test
sub
cmp
sub
stos
aaa
ret
and
add
add
xor
test
and
cmp
mov
add
mov
pop
clc
fwait
jns
outs
add
(bad)
fisttp
mov
xchg
jb
add
outs
or
and
jb
mov
dec
jp
outs
movs
sub
inc
shr
and
jb
iret
and
sbb
dec
mov
nop
ror
push
sub
lahf
push
sbb
cmp
or
js
movs
pop
(bad)
ret
xchg
push
cmp
cmp
push
xchg
popf
(bad)
scas
(bad)
sub
xor
sub
xor
inc
inc
sub
push
add
clc
adc
mov
pop
sbb
dec
or
jl
ror
lods
sub
loope
fisttp
(bad)
or
push
ror
adc
mov
adc
jae
inc
ret
xlat
push
cmp
mov
(bad)
push
push
cmc
sbb
sbb
inc
jmp
inc
loope
inc
inc
shr
add
lock
bound
popf
cwde
mov
(bad)
je
jnp
inc
adc
xor
in
push
repnz
dec
mov
dec
test
push
sbb
jle
je
or
lods
jmp
inc
jne
xchg
sub
je
dec
je
sub
in
repnz
mov
mov
js
rol
push
mov
das
js
inc
adc
sub
fdiv
pop
clc
ds
and
pop
push
push
cdq
or
sahf
xor
pop
cdq
es
fidiv
pop
test
add
cdq
push
mov
xor
loop
push
dec
sub
xchg
add
dec
add
xor
adc
nop
xchg
push
cmp
dec
or
push
pusha
dec
jne
jmp
sub
add
test
mov
adc
fs
xchg
adc
(bad)
daa
xchg
das
aaa
pusha
xchg
sub
jp
mov
add
sahf
cmp
push
dec
test
sub
xchg
fucomi
mov
xchg
add
in
adc
xchg
cmc
inc
imul
adc
sti
push
add
push
imul
aas
ins
mov
lea
mov
rcr
push
mov
mov
dec
xor
xchg
or
or
sub
rol
mov
or
push
fiadd
pop
or
pop
and
sbb
sbb
ret
add
lock
sbb
mov
or
sar
jo
test
mov
adc
xchg
icebp
jbe
sub
fild
cmp
inc
jmp
outs
lea
movs
loop
or
adc
rcl
into
pop
mov
adc
jae
iret
lahf
aaa
mov
addr16
xchg
aaa
dec
xchg
cmp
ja
cmp
mov
in
adc
test
push
shl
adc
push
call
cmp
xor
mov
push
test
add
mov
mov
movs
movs
loope
(bad)
cld
inc
pop
movs
arpl
adc
in
ja
(bad)
cld
sbb
jmp
push
test
sub
cmps
adc
or
mov
inc
dec
call
bound
xchg
test
and
push
nop
cmp
lods
mov
mov
pop
mov
call
inc
ret
sub
inc
mov
jmp
fcomp
jo
test
aam
gs
fwait
xchg
dec
add
sub
xor
(bad)
nop
lock
mov
dec
pop
and
xchg
dec
mov
retf
and
outs
xchg
mov
retf
outs
jecxz
push
ins
sub
push
and
shl
xchg
dec
mov
enter
inc
retf
jo
xor
je
test
push
sbb
mov
mov
add
add
push
cmps
outs
push
push
pop
adc
mov
movs
cli
push
dec
cmps
add
pop
ds
mov
test
inc
call
hlt
sbb
movs
push
cmp
mov
cmc
mov
xor
mov
xchg
ins
dec
js
addr16
adc
xlat
jo
or
dec
push
inc
cmp
sbb
and
add
or
mov
addr16
mov
addr16
(bad)
aad
loope
mov
and
or
mov
mov
adc
xor
loope
cmps
push
push
outs
jnp
inc
cs
pop
adc
inc
std
inc
imul
inc
loop
pop
jae
jo
ins
in
lahf
push
jl
test
out
hlt
xor
pushf
inc
fisttp
push
pop
adc
push
pop
add
jo
xchg
lea
das
lods
retf
push
inc
(bad)
mov
add
and
push
add
in
adc
xor
inc
xchg
and
dec
ja
loopne
ins
sbb
les
cmps
adc
int3
jnp
pop
das
inc
and
xor
push
lods
test
dec
jnp
inc
mov
fnstcw
lods
adc
jae
les
jl
push
mul
test
inc
call
test
adc
mov
jb
stos
or
adc
jmp
pushf
test
imul
push
sbb
or
sub
sub
or
(bad)
adc
hlt
lea
scas
hlt
lea
cld
add
dec
ror
(bad)
aad
int
or
int3
dec
pop
add
mov
test
(bad)
sahf
cmp
jne
pop
mov
add
xchg
mov
fstp
sar
xchg
push
mov
mov
pushf
mov
adc
pop
inc
outs
test
int
ror
in
mov
outs
or
cmovo
cmps
inc
add
movs
loope
or
adc
or
movs
adc
cmp
aaa
add
or
enter
sbb
call
jno
or
stc
xor
ins
mov
ret
pop
add
dec
or
mov
mov
sub
ins
adc
popa
jno
cmp
inc
movs
and
ins
sbb
mov
cwde
mov
jbe
or
call
or
in
fsubr
stos
movs
sar
enter
adc
je
mov
pop
je
push
dec
jecxz
jnp
sbb
cmp
sub
dec
xor
push
popa
xchg
test
jle
jl
xlat
add
mov
sub
pop
movs
aam
adc
das
fnstenv
fs
loope
mov
push
popa
inc
loopne
inc
jmp
(bad)
aam
sbb
lds
ret
adc
xor
xor
nop
sbb
fmul
jo
push
jp
cmp
ret
inc
call
(bad)
sbb
push
dec
cmps
jmp
mov
pop
nop
les
add
dec
aas
inc
or
add
dec
hlt
dec
cwde
inc
jo
pop
mov
xor
fadd
push
(bad)
sbb
fmul
cmp
cmp
jae
or
and
cmp
xor
mov
loopne
push
push
add
add
mov
inc
push
mov
push
mov
push
lods
lea
ror
and
mov
mov
loope
in
shl
mov
push
jmp
test
mov
mov
cs
dec
out
adc
inc
je
or
push
sbb
sub
dec
stos
lock
loopne
push
invd
push
jo
inc
jo
mov
cmp
ret
push
push
pop
adc
pop
mov
rcl
lahf
push
dec
imul
or
scas
add
or
lea
mov
in
mov
push
sar
pop
sbb
sar
nop
imul
jae
or
cdq
add
lock
sbb
push
dec
pop
sub
ret
pop
dec
mov
sub
inc
push
jbe
jle
or
daa
les
nop
cmc
sahf
dec
test
(bad)
pop
mov
jmp
add
nop
(bad)
push
fsubr
add
or
in
lds
cmp
push
pop
ins
add
sub
dec
gs
ds
lea
mov
pop
mov
xchg
pop
aam
and
dec
pop
mov
add
pusha
sub
ror
ss
loope
and
sbb
call
shr
imul
mov
scas
xor
jmp
sub
jnp
sbb
cmp
inc
in
or
pop
push
pop
test
jb
cwde
ret
cmp
dec
add
and
stos
ret
adc
push
xchg
inc
pop
ins
pop
retf
in
mov
dec
push
test
in
jmp
ret
outs
or
push
or
cmp
add
cmc
push
adc
leave
popf
inc
icebp
(bad)
retf
cmp
dec
dec
(bad)
test
xchg
rcr
retf
lea
push
lods
mov
mov
sti
mov
lock
mov
in
sbb
sbb
cld
lods
or
push
add
(bad)
sbb
call
data16
fdiv
sub
inc
push
mov
push
repz
popa
iret
push
mov
push
loopne
or
ficom
jbe
sub
push
jnp
outs
fstp
xor
inc
mov
jnp
enter
mov
in
adc
push
loopne
push
jb
cmp
leave
fdiv
jno
aam
cmp
mov
mov
and
xchg
push
jbe
mov
movs
ror
push
jb
aaa
add
and
ss
or
cmp
rol
dec
sbb
jle
test
push
cdq
sbb
and
adc
adc
mov
mov
or
(bad)
loopne
popa
sbb
xchg
retf
in
push
ins
mov
fsub
adc
and
sub
jl
sbb
dec
push
add
add
push
push
add
cmp
cdq
pop
adc
fsub
or
push
push
dec
movs
adc
sub
pop
pop
cmps
loope
js
cmp
and
(bad)
jbe
aas
push
sbb
xchg
mov
xchg
xor
inc
(bad)
iret
lea
cwde
mov
sub
and
dec
aas
dec
push
xor
xor
dec
pop
push
loop
imul
rol
shr
sbb
mov
adc
clc
and
cld
in
popa
aad
add
clc
xchg
popa
adc
dec
inc
push
mov
loope
hlt
sbb
xor
ucomiss
xchg
push
cmp
sqrtps
sub
push
or
loope
and
mov
sub
cs
addr16
cmp
out
and
mov
jb
enter
mov
bswap
or
(bad)
add
push
in
xor
push
xor
out
sub
mov
pop
rol
jb
enter
inc
cmp
and
mov
mov
pushf
sbb
push
leave
xor
add
adc
sbb
cwde
push
sbb
cli
mov
ss
mov
nop
scas
fwait
mov
add
in
sbb
test
ins
jo
cmps
pop
adc
and
adc
pop
fs
iret
cmp
adc
pop
jbe
pop
push
repz
xor
retf
pop
pop
and
mov
hlt
mov
mov
and
dec
push
jbe
test
lock
inc
sub
and
and
inc
pop
add
xchg
xor
xor
repnz
adc
xor
pop
imul
and
mov
push
adc
fcomi
or
pusha
and
push
jne
or
jle
leave
shr
or
hlt
or
jmp
and
lahf
add
jg
push
pop
daa
jno
xor
(bad)
ss
add
cwde
pusha
cmp
inc
cmp
dec
and
cs
lods
test
(bad)
(bad)
dec
sbb
mov
sbb
loopne
add
or
cmp
mov
ret
gs
int
cmp
aad
adc
sub
(bad)
pop
idiv
sub
or
or
adc
sub
or
cmp
adc
jns
les
mov
cmp
sbb
cmp
mov
lea
bound
test
jbe
in
mov
aas
sbb
enter
inc
out
inc
inc
test
lea
popf
sbb
mov
sbb
test
sub
fadd
add
and
cmp
add
and
and
cmp
mov
(bad)
xchg
and
sub
or
fld
mov
adc
outs
xor
pop
xlat
and
je
fmul
push
retf
jle
or
(bad)
sbb
lock
add
cwde
add
add
push
jnp
es
mov
jmp
push
jg
pop
add
pop
xor
aaa
or
adc
xlat
lods
fdivr
inc
retf
sub
pop
popf
jmp
add
mov
aaa
pop
pop
inc
scas
xor
fst
sbb
fbld
add
addr16
bound
sub
enter
fimul
push
sbb
mov
adc
ror
xor
push
fst
ficomp
adc
or
int
adc
add
aad
jge
dec
mov
sub
popf
in
or
mov
daa
mov
and
cmp
mov
lods
fst
sbb
lods
jge
xor
mul
scas
push
ret
xor
push
add
add
cmp
mov
es
adc
jnp
cmp
push
push
or
imul
sbb
mov
pop
pop
cmp
out
dec
xchg
push
push
setl
test
push
pop
xchg
test
loop
fdiv
popa
xchg
add
pop
push
dec
push
jmp
adc
pop
jbe
mov
push
js
xchg
sbb
adc
or
fisub
into
lahf
add
and
sbb
push
(bad)
jecxz
mov
std
cmp
cmp
inc
and
add
pop
sbb
enter
cs
push
jo
mov
dec
pop
sbb
adc
and
mov
fldenv
cwde
imul
mov
jb
repz
jno
xor
imul
mov
push
xor
in
mov
add
mov
test
sbb
add
push
xchg
cmp
push
sbb
mov
cmps
movs
rcr
pushf
cwde
fdiv
mov
in
cdq
cmps
fiadd
or
fcomi
add
xor
fisub
ja
rcr
outs
je
sbb
push
js
in
xchg
xchg
dec
inc
mov
add
clc
int
mov
dec
imul
call
aas
leave
or
mov
lea
rcr
fdiv
mov
fisub
call
call
sbb
pop
leave
mov
jno
add
std
cdq
sub
add
adc
push
push
or
jne
mov
pop
loopne
scas
mov
mov
mov
test
test
fs
add
popa
mov
aaa
popa
inc
(bad)
movs
push
inc
scas
xchg
push
cmp
jb
shl
loope
or
jne
or
add
movs
jne
jo
jge
mov
xchg
and
cmp
jbe
fcmovb
ins
push
hlt
jl
mov
mov
mov
aaa
adc
repnz
je
mov
sahf
out
cmp
jb
cmp
jae
test
xchg
jge
shr
je
pop
sub
sbb
cwde
push
xchg
enter
xchg
sar
jmp
sub
mov
sar
in
push
adc
and
sar
xor
or
call
adc
xchg
mov
push
pop
fisttp
sbb
xor
pop
add
jge
pop
int
jbe
(bad)
push
fs
pop
imul
pop
inc
mov
pop
add
pop
push
int
jo
pop
or
xchg
jne
sub
push
(bad)
retf
fcomp
adc
in
pusha
fnstenv
pushf
cmp
xchg
jne
rcl
ror
fs
add
shl
or
das
inc
pop
push
test
je
test
je
sub
pop
test
ins
cdq
les
dec
loop
mov
add
ret
pop
xor
xor
loopne
push
call
in
dec
dec
pop
repnz
add
adc
cmp
sub
jmp
retf
add
xchg
dec
push
sbb
mov
inc
out
je
fsubr
addr16
popa
out
sar
push
sbb
push
enter
push
inc
jmp
jge
and
sub
ins
adc
jo
xor
fiadd
sar
xor
sbb
pop
mov
or
add
sahf
mov
das
sahf
inc
dec
push
mov
add
mov
movs
shl
add
xchg
add
and
adc
dec
in
imul
xor
scas
cmp
inc
adc
xor
fist
test
test
je
push
test
sub
rol
cmp
retf
push
jmp
or
(bad)
pusha
push
js
push
pop
mov
push
inc
ins
jmp
clc
inc
xchg
retf
jle
sub
jne
jmp
jle
push
int3
sub
jae
pop
xor
cli
mov
ins
cmp
jge
sahf
jae
xor
add
mov
push
je
cmps
inc
sub
add
xor
cmp
ss
pop
fs
push
mov
jecxz
shl
iret
mov
or
dec
pop
and
sahf
addr16
inc
mov
out
scas
xlat
jmp
sbb
or
loopne
test
sub
mov
icebp
pop
add
cli
push
jle
and
sbb
mov
dec
pusha
sti
lahf
(bad)
dec
cmp
pop
xor
xchg
jmp
lahf
push
mov
sub
dec
test
jns
lock
xor
inc
loope
and
mov
cmps
mov
sub
pop
imul
shl
jo
retf
inc
dec
dec
push
bound
adc
mov
cmp
aad
cmp
not
and
or
add
sub
jg
dec
pop
mov
enter
out
pop
push
push
add
and
push
pop
jb
adc
aaa
in
loope
adc
das
aaa
enter
dec
in
mov
adc
pusha
pusha
jmp
nop
or
es
pop
cdq
xlat
add
jbe
in
inc
gs
aam
push
sub
xchg
les
das
stos
movs
xchg
ret
cmp
pusha
add
shr
sub
xor
(bad)
shl
inc
adc
std
ins
sbb
add
cwde
dec
add
test
xchg
push
out
or
sti
sbb
pop
jo
jne
or
cmp
push
pusha
mov
ja
xor
sub
pusha
mov
push
jmp
or
(bad)
ret
sbb
push
xchg
xlat
dec
loope
xlat
jmp
xchg
sbb
jecxz
jle
or
sbb
or
sbb
icebp
cmp
jne
cmp
jb
dec
arpl
fst
or
dec
or
mov
pop
mov
daa
mov
movs
nop
into
icebp
nop
ss
ffree
jp
push
sub
aas
sahf
cmp
enter
inc
pop
lods
xchg
mov
adc
xor
add
scas
fdivp
xor
inc
fisubr
cli
push
dec
stos
xchg
pusha
js
jo
ret
adc
jp
stos
and
push
(bad)
je
mov
mov
pop
jle
jg
mov
push
ret
test
or
jae
mov
xchg
outs
ret
clc
es
fadd
pop
je
cmp
xchg
call
push
cmp
add
pop
lock
rcl
hlt
mov
icebp
xchg
aas
nop
inc
add
push
push
pusha
xor
inc
cld
adc
sub
push
fsubrp
hlt
or
aaa
test
mov
mov
jmp
icebp
pop
and
adc
ret
add
stos
iret
push
outs
push
imul
gs
pushf
xchg
aad
dec
cwde
popa
loopne
jbe
pop
adc
das
sar
dec
xchg
mov
in
fistp
adc
nop
mov
jge
stos
or
outs
pusha
cmp
(bad)
and
loope
cmps
clc
push
dec
pusha
adc
add
adc
mov
or
retf
loopne
pop
addr16
mov
cmp
das
dec
fs
rcl
add
sbb
bound
sub
or
and
mov
nop
or
lods
mov
nop
mov
and
test
pusha
dec
adc
rol
mov
xchg
sbb
int3
stos
pop
xor
shl
sbb
and
enter
and
inc
and
sub
sar
inc
dec
fcom
xchg
and
loopne
imul
sbb
sbb
enter
jnp
and
push
xchg
int3
mov
pop
call
mov
(bad)
add
pop
push
lahf
add
xlat
xchg
clc
cwde
in
adc
pop
ja
jo
push
mov
xor
out
lea
(bad)
movs
inc
outs
push
push
cld
imul
cli
jno
sbb
xor
pop
mov
xor
sub
pop
jl
add
push
jmp
retf
mov
dec
fs
and
adc
or
sub
or
or
xor
or
or
cmp
push
cdq
rcl
inc
inc
ror
inc
push
stc
cdq
inc
sbb
scas
popa
repz
dec
and
add
push
retf
dec
sbb
out
sbb
fisttp
xchg
retf
pop
sbb
outs
or
je
dec
sbb
or
adc
(bad)
addr16
push
inc
dec
loop
ret
sbb
or
and
not
sub
push
dec
push
bnd
adc
mov
ret
test
dec
or
push
scas
mov
icebp
mov
push
adc
push
int3
inc
enter
push
das
fcomp
dec
pusha
jno
pop
outs
cwde
rol
in
test
add
ror
cmp
or
or
mov
mov
leave
or
pop
lods
lock
or
out
xor
or
call
sub
ret
xor
sbb
pop
gs
ja
or
cmp
aaa
icebp
inc
dec
mov
shl
sub
aas
inc
add
ror
and
aaa
sbb
dec
inc
scas
dec
es
dec
xchg
or
fisubr
push
in
xor
xor
xchg
mov
xchg
sub
sti
enter
dec
mov
enter
sbb
add
sbb
push
fidiv
dec
lea
loope
adc
adc
shl
(bad)
ret
retf
or
ror
shl
jmp
mov
je
push
das
ret
sbb
mov
in
sub
ret
sbb
stos
enter
sub
cmps
jne
add
or
pop
add
mov
test
je
and
inc
fild
loope
jl
push
and
sbb
cli
push
push
cmp
inc
and
sbb
adc
mov
mov
xchg
ss
mov
movs
add
fild
pop
stos
rcl
add
aam
pop
and
mov
je
loopne
mov
add
push
aam
fimul
jmp
mov
jp
cmp
mov
mov
aas
pop
or
test
daa
leave
gs
je
jg
inc
xchg
or
shr
(bad)
pop
pop
or
jg
inc
(bad)
cmp
and
xchg
add
shl
push
or
jo
pop
add
sub
dec
jb
jmp
adc
cmova
cs
(bad)
mov
ss
repz
cmp
imul
and
shl
add
or
ins
cli
imul
inc
mov
or
imul
data16
dec
mov
add
add
popf
xchg
and
inc
int3
pop
cdq
mov
add
push
sbb
cmp
xor
mov
pop
sbb
jb
bnd
shr
pop
jbe
shl
inc
cmp
outs
xor
or
sbb
pop
mov
movs
clc
xchg
lods
rcr
sub
stc
out
xchg
pop
mov
push
pop
idiv
sbb
adc
popf
ja
pop
in
outs
or
scas
iret
push
test
mov
add
inc
add
cmp
mov
lods
mov
add
js
les
(bad)
les
adc
inc
xchg
cmc
or
xor
jp
push
jmp
or
sbb
or
idiv
dec
adc
push
sbb
push
jg
mov
jmp
pop
fwait
sub
and
mov
push
test
scas
adc
fs
rcr
push
xchg
cmp
cmp
mov
add
pop
punpckhbw
subps
mov
pop
cmp
lods
iret
push
cmp
les
sbb
or
mov
pop
movs
xchg
jmp
dec
outs
xor
dec
cmp
sbb
and
sub
ss
mov
cmp
or
sbb
inc
sbb
inc
push
adc
sbb
or
add
pusha
push
dec
loopne
jl
cmp
jne
aam
adc
movs
push
in
adc
lock
clc
or
add
sbb
test
push
push
adc
loopne
push
cmps
mov
pop
adc
mov
call
std
pop
cmp
je
jmp
push
and
scas
inc
adc
and
sbb
sbb
mov
xchg
hlt
add
xchg
push
inc
xchg
std
arpl
sbb
sbb
pop
sbb
loope
add
pusha
jge
arpl
inc
add
mov
add
mov
dec
add
and
add
mov
pushf
jno
or
dec
ret
jmp
loop
lea
push
lods
out
pop
outs
jne
push
push
aas
das
xchg
ret
xchg
fs
or
in
mov
lods
fiadd
pop
in
aaa
or
adc
jle
sbb
adc
add
add
cmp
adc
xchg
rcr
mov
shr
(bad)
fbld
and
lock
fimul
repnz
daa
add
fs
frstor
add
mov
push
inc
nop
and
jno
dec
lea
int3
xor
add
pop
and
or
aaa
xchg
push
sbb
jmp
add
cmp
cmp
(bad)
jmp
jl
fist
push
mov
int3
mov
lods
ins
cmp
sti
adc
dec
stos
aas
pushf
add
int3
push
loopne
je
es
inc
mov
cmp
jle
sub
add
cmp
jge
mov
add
or
(bad)
adc
push
push
jle
movs
sub
je
cmp
pop
add
je
xchg
pop
inc
pop
jmp
inc
xor
xor
loop
cmps
pop
xchg
je
icebp
xchg
mov
(bad)
or
add
jbe
xchg
mov
js
(bad)
popa
add
jmp
push
add
inc
or
or
pushf
ins
add
push
outs
sbb
test
call
adc
push
pop
mov
in
pop
inc
add
cs
xchg
stos
jg
hlt
stos
retf
jo
jne
(bad)
push
into
je
and
add
and
test
add
mov
hlt
dec
jecxz
ror
sub
and
out
push
add
clc
and
pusha
pop
test
adc
cmp
and
sbb
dec
aad
xor
sar
movs
shr
jno
and
sub
dec
cmc
je
jb
inc
mov
loope
dec
xchg
xor
dec
imul
adc
jne
mov
xor
fnsave
les
add
cs
push
sbb
int3
inc
lea
fcom
mov
push
aaa
addr16
add
pop
ins
das
cmps
push
inc
and
cmp
lds
aad
gs
in
mov
cmovo
add
ret
mov
test
dec
dec
mov
inc
outs
loopne
pop
hlt
and
push
mov
aaa
adc
movs
jb
xor
adc
add
push
aam
vpacksswb
jge
in
cmp
fmul
cmp
ret
push
stc
sbb
mov
or
in
dec
push
or
(bad)
mov
mov
or
adc
or
cmp
dec
pop
jmp
fldcw
es
jle
mov
inc
jo
dec
and
xchg
pop
pop
sti
int
inc
dec
sti
jo
mov
or
into
pop
adc
jecxz
xchg
sbb
xchg
jns
and
adc
or
and
pop
mov
ins
adc
cmp
je
push
sbb
pop
xchg
rcr
pop
jmp
push
lock
dec
(bad)
aam
ds
pushf
push
pop
sbb
es
xchg
mov
popa
mov
test
mov
hlt
psllw
mov
movs
and
sbb
cs
and
sub
lea
add
inc
and
pop
sub
xor
push
or
rcr
sub
sbb
retf
imul
cld
xor
ja
jne
rcr
adc
pop
adc
clc
out
and
sbb
push
adc
fiadd
adc
and
cmp
push
add
pop
pusha
inc
loop
ja
test
je
cmp
adc
js
hlt
cmp
adc
aaa
push
and
mov
enter
mov
shr
mov
mov
inc
rol
inc
jp
push
cmp
push
icebp
out
sub
and
inc
aaa
enter
xchg
or
mov
fist
das
test
cwde
ror
retf
inc
sbb
test
ins
push
je
mov
je
or
js
dec
add
push
fcmovnb
movs
and
ret
inc
xchg
push
dec
movs
adc
push
or
rol
sbb
adc
adc
es
stos
rol
fcomp
ds
xor
xlat
movzx
sbb
push
sbb
cmp
movs
push
pop
pop
add
nop
out
push
pop
es
inc
push
fcom
sub
dec
cmp
(bad)
pop
adc
mov
pop
add
add
inc
push
sub
sub
adc
sbb
mov
call
icebp
sbb
test
test
imul
enter
les
sti
retf
enter
mov
push
out
jno
mov
pusha
inc
sti
pop
mov
gs
jmp
pusha
add
sbb
mov
pop
ds
jne
fmul
mov
inc
jbe
push
sbb
xchg
add
dec
cmps
pop
ret
and
push
jle
add
push
inc
adc
push
cli
and
cwde
jb
popf
(bad)
ror
or
mov
push
in
pop
sbb
sub
jne
jnp
sti
or
xchg
inc
pop
fcom
fwait
and
push
fild
mov
jp
shl
sbb
gs
push
xor
inc
loopne
ins
fcom
loope
(bad)
into
fchs
outs
js
mov
fmul
and
inc
cmp
fs
fldcw
scas
in
das
sbb
inc
inc
rcl
rol
or
clc
ret
cdq
mov
push
imul
inc
cmp
lock
or
and
xchg
add
js
inc
pusha
inc
sbb
mov
in
into
dec
cmp
push
push
mov
dec
bound
sub
sub
lock
mov
jno
outs
jmp
cmp
ret
or
push
adc
pop
and
cmp
pop
ret
stos
test
add
pop
hlt
push
(bad)
mov
pop
mov
push
es
xlat
test
push
xchg
push
xchg
adc
pop
shl
jl
inc
push
pop
push
lods
xlat
cs
adc
dec
shl
or
xor
mov
mov
mov
xlat
jmp
pop
punpckhdq
and
jle
stc
cmps
jne
push
and
imul
(bad)
add
or
ins
ror
clc
das
lock
dec
je
pushf
or
jo
jmp
in
js
adc
dec
dec
or
or
inc
imul
xor
ror
outs
mov
std
js
sahf
inc
jmp
push
jb
or
push
inc
pop
mov
int3
pusha
pop
popa
mov
pusha
cmps
xchg
arpl
mov
push
aam
and
sub
out
jne
push
jo
mov
js
add
cmp
jmp
adc
fprem
or
push
fidivr
hlt
or
call
or
or
dec
call
ins
in
div
add
scas
inc
sbb
jp
hlt
xor
pushf
fdiv
in
cmp
pushf
call
push
mov
push
push
je
movs
pushf
fadd
pop
pushf
or
sbb
jl
adc
aad
and
jg
and
or
pusha
lods
sbb
gs
out
call
or
fild
or
cmp
cmp
test
mov
fld
sub
adc
and
inc
sub
fsubr
jno
xor
or
or
cmp
add
add
das
add
pop
fwait
xsave
lock
jns
jmp
inc
or
cmc
inc
sbb
or
adc
jno
sub
jmp
sti
sub
cmp
cli
rol
fwait
cmp
jmp
and
movs
xchg
dec
mov
call
test
cmps
pop
mov
out
or
xor
pop
xchg
pop
sbb
xor
inc
and
add
sbb
mov
fadd
mov
dec
fsub
ins
xchg
fist
xchg
and
jne
dec
add
sar
push
popa
and
adc
cmp
pop
push
call
push
and
or
mov
rol
push
and
or
or
mov
add
inc
or
and
sbb
clc
push
lods
imul
sub
mov
mov
js
rol
adc
push
sbb
add
push
test
cmp
arpl
fwait
daa
jo
cs
imul
jb
ret
jg
mov
mov
mov
sbb
push
sub
push
jbe
xchg
neg
cmps
dec
sub
adc
inc
and
adc
dec
and
and
or
push
gs
and
xor
push
(bad)
out
jno
or
hlt
or
out
pop
pop
les
jmp
pop
pop
and
jb
xor
push
scas
sbb
xchg
adc
test
adc
push
adc
adc
mov
loope
and
cmp
gs
cwde
mov
or
adc
int
push
out
xor
and
and
jnp
adc
jae
xlat
into
test
stc
or
cmp
or
pop
push
inc
inc
adc
xor
imul
test
stos
xchg
jne
icebp
adc
ret
push
jne
mov
inc
daa
jo
mov
xchg
mov
or
jne
adc
ss
shl
and
(bad)
iret
ror
dec
fild
ret
dec
cmc
or
add
lods
dec
shr
in
shl
inc
es
sub
leave
push
or
addr16
add
xchg
(bad)
(bad)
ret
push
sbb
jae
lea
ret
cmp
inc
pusha
or
mov
mov
push
fs
dec
push
cmp
icebp
test
push
push
imul
add
in
sbb
pusha
loop
cmp
lock
test
in
shr
xlat
into
push
out
adc
xchg
sahf
push
cmp
dec
push
aaa
xor
dec
jmp
xchg
cmp
jmp
pop
repnz
jbe
pop
icebp
dec
loopne
je
rcr
sbb
inc
sbb
int3
lea
pop
lea
stc
ret
xor
adc
add
inc
xor
ss
pop
ins
bound
adc
out
mov
leave
push
in
jmp
sar
xor
es
sbb
and
je
in
mov
adc
test
jecxz
ret
push
pop
sbb
rcl
mov
or
sub
inc
fisubr
test
add
jo
pop
xor
inc
sbb
sub
dec
push
iret
jae
push
jo
push
push
jmp
pushf
sbb
push
std
cdq
call
mov
dec
or
mov
(bad)
adc
add
cld
call
mov
pop
adc
arpl
mov
ret
push
stos
test
or
stc
push
mov
add
pop
or
jns
or
dec
push
or
jo
std
aam
sub
mov
pop
jnp
adc
add
ss
es
add
arpl
xor
xchg
shl
push
sbb
jno
imul
les
jmp
jmp
mov
sub
xlat
jno
push
movs
sub
in
mov
mov
jno
popf
ins
sub
ins
or
pop
mov
lods
add
mov
and
repz
xchg
push
aam
or
mov
nop
je
push
and
xchg
inc
and
stos
push
lea
fidiv
sbb
adc
test
xchg
xchg
inc
push
ds
push
les
inc
add
stos
jge
jo
push
xchg
fnop
out
sub
pop
and
je
push
je
je
rcr
and
rol
jp
gs
ins
or
popa
xor
adc
sbb
add
jnp
sbb
adc
icebp
push
test
or
or
mov
or
jb
clc
push
mov
adc
push
sti
add
aaa
test
add
pop
sub
mov
add
mov
bound
inc
hlt
hlt
jecxz
xchg
add
lahf
imul
retf
push
movs
sub
or
fmul
ret
pop
sub
mov
adc
sub
les
and
push
mov
mov
fidiv
adc
pop
je
sbb
fidivr
mov
je
push
je
mov
je
or
lds
aad
loope
push
jmp
mov
and
sar
or
add
push
add
or
xor
popa
hlt
rcr
push
push
fld
and
mov
fimul
sbb
inc
cmp
cmp
movs
mov
push
jmp
stos
pop
and
adc
cmp
addr16
and
push
das
pop
not
push
add
mov
mov
(bad)
jmp
mov
lods
add
in
enter
dec
cmp
ffree
jle
test
in
and
add
cmp
push
data16
ret
or
pop
xor
inc
mov
xor
jge
xor
into
push
loopne
(bad)
cmp
sub
mov
pop
mov
sub
(bad)
adc
icebp
loopne
push
add
cmp
push
xor
(bad)
push
mov
mov
adc
xor
add
add
sbb
xchg
push
jp
push
or
inc
sub
or
ins
lods
push
ror
jmp
ss
fwait
xchg
adc
pop
sbb
pop
rcr
(bad)
js
sahf
adc
or
inc
add
or
sbb
add
inc
adc
jle
push
jecxz
sub
jp
and
hlt
and
or
push
ficom
xor
ret
mov
push
or
mov
jne
pusha
mov
aam
ret
xchg
mov
mov
retf
cs
xor
and
add
push
mov
jle
pushf
mov
jns
jns
pop
dec
and
add
inc
xor
fcmovb
and
xor
imul
adc
dec
cmp
fmul
adc
or
jo
test
dec
adc
repz
mov
shl
jmp
add
mul
sub
and
add
daa
push
cmp
les
lods
adc
adc
xlat
jecxz
jl
fisubr
mov
or
pop
dec
ret
icebp
push
sub
add
or
sub
sub
daa
clc
jb
mov
dec
push
mov
cmps
add
push
inc
dec
(bad)
(bad)
push
ret
add
mov
les
das
mov
or
sar
xor
mov
or
adc
mov
sbb
push
push
and
and
mov
mov
adc
cdq
or
shr
les
arpl
sbb
and
mov
or
js
jne
daa
mov
adc
mov
xchg
rcl
cmpxchg
mov
mov
mov
shr
movs
or
sub
loope
mov
mov
jne
xor
push
jle
mov
jmp
adc
adc
pushf
(bad)
add
cld
sbb
dec
add
pushf
pushf
cmp
xor
cmps
or
loopne
push
mov
mov
(bad)
imul
retf
pop
js
pop
imul
es
push
sbb
loopne
(bad)
jmp
loopne
rol
sub
jnp
fucomp
into
cmp
cmc
push
inc
mov
call
hlt
push
sub
test
adc
daa
fisub
sbb
imul
push
adc
daa
add
xor
(bad)
jmp
shr
hlt
rol
jno
ins
das
je
ds
jmp
lock
mov
sub
movs
pop
jbe
mov
mov
pop
cmp
mov
pop
imul
retf
mov
add
outs
rcr
cdq
pop
adc
add
push
loope
test
mov
xlat
mov
(bad)
fld
pop
sbb
adc
jne
mov
or
dec
adc
mov
movs
and
(bad)
dec
and
mov
addr16
mov
and
adc
pusha
xchg
mov
and
rcr
cmp
cmp
jb
rol
mov
adc
pusha
push
nop
rcr
dec
popa
push
sub
imul
and
dec
push
mov
fs
mov
inc
fadd
in
popf
gs
(bad)
or
and
jmp
fisttp
jge
mov
ret
xchg
mov
movs
jo
add
xor
cmp
push
out
adc
dec
add
mov
push
das
add
icebp
xor
xor
js
push
inc
dec
sub
shl
mov
and
jb
je
(bad)
outs
mov
das
push
push
push
dec
xor
aam
gs
cmps
repnz
mov
pop
or
inc
dec
(bad)
fdivr
retf
fincstp
or
je
test
adc
in
mov
mov
call
jae
dec
imul
cmp
cmp
mov
xor
dec
sbb
shl
leave
adc
fadd
(bad)
sahf
sub
sbb
pop
cli
hlt
xchg
xchg
pop
sub
xor
fist
in
inc
ret
mov
add
loopne
push
sbb
jne
popa
add
jg
adc
inc
sbb
mov
push
daa
xor
xor
inc
dec
or
retf
into
sub
call
and
aam
or
loop
dec
orps
mov
push
call
dec
or
push
push
shr
lods
sub
add
gs
or
int3
jmp
imul
ret
push
icebp
inc
aaa
jbe
xchg
push
sub
sbb
jmp
inc
adc
push
push
loopne
inc
inc
std
sub
inc
stos
icebp
push
xor
pushf
test
sbb
push
es
lock
lea
test
sti
(bad)
xchg
mov
loopne
cmp
ins
jne
push
pop
add
adc
jnp
pop
sbb
adc
sbb
nop
or
fsubr
clc
mov
out
pop
loopne
adc
push
jo
clc
cmp
push
sbb
sahf
jbe
mov
xchg
push
mov
inc
adc
jo
dec
xchg
shl
cmp
adc
adc
in
(bad)
pop
loop
inc
adc
sbb
out
das
mov
xchg
push
les
shl
fstp
jbe
loop
xor
and
pop
pushf
jecxz
cmp
adc
dec
loop
xchg
add
cmp
mov
add
cdq
sbb
mov
sbb
mov
lods
cmp
jne
jno
push
inc
popf
or
mov
add
fisttp
out
pop
cs
jb
sub
enter
in
imul
imul
imul
xor
scas
sub
out
aam
shl
in
sbb
push
rol
dec
outs
lods
test
mov
loopne
jecxz
mov
ret
add
cld
(bad)
sti
or
clc
cdq
and
cmp
jmp
add
or
pusha
ds
test
or
int
aam
add
add
ret
sbb
mov
push
icebp
adc
out
imul
push
mov
outs
retf
js
pop
sbb
sti
out
push
pop
dec
adc
inc
mov
mov
cmp
push
cmp
mov
cmp
jo
xor
sbb
jmp
push
mov
mov
bound
or
add
rcl
ror
push
fadd
push
jg
pop
xchg
push
adc
je
imul
or
iret
xchg
div
push
add
add
lea
or
adc
dec
or
hlt
push
and
in
ins
rcr
data16
or
xchg
sbb
dec
iret
(bad)
push
adc
or
and
mov
dec
call
inc
imul
js
das
into
je
push
mov
cwde
dec
dec
sbb
rcl
dec
ret
push
jmp
cmp
sahf
mov
sbb
sub
in
rcl
jecxz
cmps
inc
les
push
add
shl
add
or
jo
sahf
ret
pusha
pop
fdivr
xor
pop
add
pop
adc
pop
dec
xchg
jb
adc
add
xchg
pusha
inc
add
int
inc
sbb
aam
or
cmp
popa
enter
xchg
inc
mov
or
push
push
push
jb
scas
pop
inc
les
push
push
ja
pop
and
push
outs
imul
add
ins
mov
rol
push
xor
xchg
jae
sub
clc
loope
push
out
adc
mov
push
push
add
arpl
and
sub
pop
imul
and
mov
test
and
iret
mov
pop
scas
popa
sbb
dec
repz
retf
jl
add
rcl
inc
mov
lods
sub
mov
mov
mov
jnp
fld
mov
mov
xor
and
ins
lods
(bad)
imul
jbe
lods
or
add
loopne
enter
mov
scas
sar
fisttp
aas
push
fist
jmp
dec
dec
jnp
stc
ror
adc
jbe
jl
jno
fucomp
out
jge
sbb
fidiv
jmp
cmp
push
add
adc
aaa
in
or
adc
or
mov
push
sub
stc
aam
loop
pushf
sub
mov
jmp
(bad)
push
lock
ss
jmp
sahf
fisttp
pusha
rol
jmp
or
sar
sub
inc
jnp
ja
dec
jns
push
push
retf
push
sbb
pop
mov
push
lods
popf
shl
sbb
xchg
(bad)
ffree
add
jne
rcr
bound
push
sub
test
sub
mov
push
fistp
movs
cmp
add
push
and
adc
jp
mov
addr16
into
das
pop
sbb
pop
jmp
sbb
dec
in
test
xor
jne
add
sub
test
cs
or
xor
ins
sahf
out
push
js
ss
cmp
cs
push
dec
push
jno
pop
cmp
addr16
jo
cmp
mov
iret
mov
cmc
leave
cmp
aaa
or
aaa
dec
fcmovb
fldenv
aaa
ins
pop
sahf
adc
jnp
aaa
aaa
jp
aas
push
xchg
mov
mov
pop
aaa
aad
push
jmp
push
hlt
out
iret
push
push
cmp
lea
jnp
push
inc
pop
fbstp
jno
mov
xchg
loope
jae
rcr
je
push
clc
lea
or
push
dec
ror
gs
adc
pop
in
inc
cmp
test
and
jmp
inc
push
movs
retf
jg
push
push
mov
aaa
std
cmp
ja
je
mov
jb
outs
sbb
mov
or
je
dec
jne
les
or
add
push
or
pop
mov
or
push
or
fsubr
(bad)
mov
add
shl
nop
inc
adc
and
test
cmp
adc
mov
cmp
add
sbb
int
xor
add
xchg
cli
push
ja
rcr
add
sub
cmp
push
dec
xchg
bound
mov
dec
and
in
sbb
push
test
movs
adc
inc
ss
mov
out
mov
in
add
and
dec
mov
push
xor
test
xor
adc
add
xchg
pop
and
ss
je
adc
fidiv
add
fs
lea
mov
xchg
je
inc
push
adc
xor
jmp
push
dec
(bad)
fild
sar
in
inc
ins
or
pop
sbb
sub
dec
cmp
daa
fs
add
pop
and
nop
pop
test
adc
mov
lds
bound
retf
ins
cmp
xor
hlt
mov
xor
or
jmp
or
push
lock
aad
pop
push
xor
cmp
repnz
in
add
fs
jmp
fisubr
xor
sub
or
popf
sbb
lea
sub
jo
(bad)
sbb
push
pop
ja
mov
sbb
aam
dec
push
push
inc
out
dec
xor
fnstenv
cmp
das
and
iret
cvtpi2ps
xor
dec
jne
mov
mov
shl
daa
xor
xchg
loopne
lods
adc
mov
(bad)
inc
mov
rcr
inc
hlt
mov
mov
lock
js
adc
xchg
stc
repz
ret
cmp
sbb
lds
sbb
xor
jle
mov
lds
and
jo
mov
or
adc
push
ret
(bad)
dec
pop
(bad)
icebp
or
add
mov
xchg
jl
pop
mov
push
mov
or
jne
adc
sub
out
imul
and
pop
push
push
mov
inc
dec
std
jmp
push
adc
or
pusha
popa
arpl
sub
push
and
cmp
push
push
inc
inc
mov
imul
push
inc
inc
adc
ins
iret
aam
bnd
imul
sbb
jmp
js
xchg
ficom
nop
mov
jl
rcr
cli
push
icebp
jo
sub
cmp
call
dec
cmp
loope
inc
jo
adc
jl
cmps
retf
aaa
cmp
sbb
adc
add
adc
rol
out
pushf
mov
pop
pop
shl
sub
xchg
into
adc
rol
mov
inc
fwait
sbb
in
mov
repnz
xchg
(bad)
in
enter
enter
les
lock
sbb
mov
enter
outs
and
inc
hlt
mov
add
int3
jle
and
add
and
jo
push
arpl
emms
sub
cmp
or
push
sbb
pop
or
ret
jg
push
xchg
test
jecxz
add
ss
lods
cmp
jecxz
adc
mov
cli
jge
mov
jns
adc
ins
cmp
popa
shl
mov
pusha
ret
and
xlat
cld
pop
int3
lods
jecxz
call
faddp
test
and
je
data16
gs
xor
push
ret
pop
es
int3
push
cmp
pop
psubsb
cmp
jne
and
push
leave
test
and
add
add
mov
or
in
ins
mov
sar
push
or
jnp
jge
sbb
or
shl
fisub
mov
or
inc
push
dec
add
jecxz
ret
and
jp
mov
imul
cmp
sbb
data16
dec
add
pop
or
add
aaa
xor
inc
pop
push
inc
jae
or
cmp
push
ror
clc
inc
xchg
or
and
mov
inc
inc
sbb
pop
xchg
adc
je
push
dec
cdq
xchg
mov
xchg
arpl
push
mov
dec
clc
xor
iret
jnp
fist
push
imul
add
pop
push
xchg
test
add
jge
push
fild
lods
mov
cmp
and
and
jge
fbstp
or
add
ror
cmps
cmp
fild
jb
add
imul
sbb
adc
or
mov
mov
push
jo
and
into
or
lods
xor
adc
mov
push
ror
and
mov
ficomp
test
push
xchg
sbb
push
aad
inc
add
out
or
inc
gs
add
sbb
data16
push
imul
jp
jb
mov
xor
xchg
fadd
(bad)
clc
rol
adc
add
jle
clc
mov
xchg
ds
mov
test
sub
pcmpgtd
push
rol
add
cmc
sbb
jp
test
pop
jb
(bad)
push
mov
mov
ret
xchg
mov
mov
jo
ret
sbb
pop
aam
cmp
add
push
dec
sbb
cmp
cmp
mov
jmp
mov
mov
and
push
aaa
jge
les
add
adc
cs
adc
jge
pop
or
sbb
xor
push
mov
ret
and
mov
aaa
test
push
sub
or
mov
push
cmp
popf
push
pop
pop
adc
lock
jge
call
jmp
mov
xlat
mov
mov
push
push
movs
mov
sub
ficomp
mov
push
mov
call
ficom
jbe
pusha
push
popf
adc
dec
xchg
iret
stos
leave
fcomp
mov
ret
jo
sub
xor
(bad)
ja
ja
pop
add
add
or
fisubr
or
mov
cmp
cmp
push
sbb
mov
jmp
imul
mov
xor
imul
dec
or
jo
sub
push
xchg
add
push
mov
adc
or
mov
inc
jo
xor
in
je
mov
jmp
jb
enter
xor
xor
aaa
loop
adc
in
retf
dec
and
les
dec
xchg
add
ficomp
test
das
scas
or
fiadd
stos
pop
push
cmp
inc
rcr
push
cmp
and
mov
jo
ret
jg
mov
cmc
ret
ss
or
cmp
push
mov
and
mov
jns
movs
lds
sub
and
push
add
ret
mov
inc
and
or
push
(bad)
jno
sub
dec
mov
pop
xchg
inc
add
xor
lea
jo
sub
lods
dec
add
add
ret
cmp
shl
xor
test
adc
dec
jo
lock
sahf
pop
add
lods
push
add
int3
nop
hlt
xor
ins
sub
push
and
mov
push
cmps
je
push
xchg
std
mov
(bad)
push
xor
sub
repnz
lock
dec
aas
xchg
dec
jmp
cmp
jb
bound
mov
adc
add
leave
mov
test
ins
dec
jne
sbb
and
popa
fsub
icebp
push
bound
xor
pop
adc
dec
xor
pop
adc
mov
test
add
ss
pop
add
imul
dec
imul
mov
push
jl
mov
cmp
jbe
sub
cs
ja
shr
fild
sar
add
jge
cmp
icebp
push
sahf
pushf
cmps
add
xor
mov
ror
adc
sbb
addr16
cmp
sbb
cmp
push
or
dec
sbb
sub
mov
mov
adc
push
jo
call
sbb
and
movs
xor
ret
jne
xchg
adc
mov
rcr
shl
hlt
test
or
mov
jnp
dec
cmp
inc
clc
test
jb
xchg
or
xor
in
push
lock
cmp
neg
rol
inc
(bad)
pop
fmul
jae
xchg
hlt
fyl2xp1
push
ds
icebp
test
call
mov
rol
loope
imul
je
dec
jne
(bad)
ins
xchg
cwde
shr
pop
inc
jmp
adc
and
mov
or
je
xor
ss
jp
mov
cmp
pop
jmp
jg
test
pop
not
into
xor
pop
add
test
das
sbb
or
shl
dec
and
scas
adc
enter
pop
push
jmp
add
add
into
pusha
add
add
sub
adc
dec
sbb
inc
loop
push
push
dec
xchg
xchg
sbb
or
cmp
or
jmp
aaa
(bad)
adc
jle
nop
aaa
xchg
jmp
loope
pop
pop
rcl
shl
mov
retf
in
and
mov
addr16
lock
xor
dec
add
pop
sbb
loope
outs
add
and
inc
push
je
sbb
cmps
jno
leave
adc
sbb
mov
and
dec
ficomp
adc
xor
mov
pop
mov
stos
pop
in
adc
call
or
sbb
or
leave
enter
mov
and
call
and
inc
push
or
or
xor
ss
popa
and
mov
jo
cmp
imul
pop
dec
or
adc
add
(bad)
lods
inc
push
clc
inc
jle
push
lea
push
dec
sbb
mov
sub
and
inc
push
ins
sbb
inc
adc
lock
and
fwait
xor
or
leave
and
cmc
adc
bound
jne
mov
inc
jo
aad
xchg
mov
pop
mul
and
adc
ret
fs
dec
dec
jmp
hlt
mov
inc
mov
call
inc
popa
mov
push
ins
in
jp
dec
mov
retf
mov
(bad)
call
out
cmps
sub
sbb
sbb
mov
popf
addr16
xor
cmp
cmp
mov
jle
or
stos
fadd
call
mov
stc
add
lds
clc
mov
jp
dec
stc
add
mov
lahf
sbb
fimul
(bad)
ror
jp
pop
jbe
xchg
adc
xor
mov
mov
dec
bound
xchg
add
sub
pop
xlat
xor
xchg
dec
pop
pusha
xchg
fsubr
xchg
pop
mov
dec
(bad)
call
jl
movs
jae
dec
popa
call
jns
in
(bad)
push
aad
in
mov
ins
mov
dec
mov
fldenv
std
ja
mov
sbb
aas
adc
popa
test
dec
hlt
pop
adc
inc
xor
jle
push
sti
sti
sahf
mov
jmp
nop
mov
dec
int
mov
inc
pop
xchg
movs
push
sbb
dec
or
aas
jmp
and
jns
fcomp
add
mov
xchg
ret
push
clc
movs
xor
cmp
sbb
push
loopne
sbb
pushf
and
test
movs
adc
test
test
ret
sbb
jge
fs
lods
cli
xor
dec
xor
outs
inc
retf
les
inc
shl
push
sub
test
jp
dec
loop
add
jp
aam
test
and
test
xor
inc
push
inc
lods
and
xor
gs
xchg
pusha
push
jno
shl
shr
icebp
enter
sbb
mov
adc
add
cmps
jecxz
sbb
add
gs
push
call
cmp
add
cmp
or
nop
in
in
adc
call
push
inc
shl
jo
aam
or
icebp
cmp
loopne
adc
or
sub
add
mov
(bad)
test
add
push
xor
push
xor
xor
test
adc
cbw
fstp
sub
add
cs
add
or
test
in
cli
test
jge
sub
sbb
inc
retf
push
push
mov
mov
test
inc
(bad)
sub
inc
or
xor
inc
xchg
xlat
(bad)
jp
jp
test
aam
int3
repnz
jl
jmp
test
je
pop
jns
xchg
je
sub
mov
mov
je
repz
(bad)
pusha
lock
retf
push
add
mov
ret
push
les
out
mov
add
jp
ins
call
xchg
loopne
fist
call
out
loope
adc
sbb
loope
pmaxub
dec
hlt
outs
inc
add
cmp
and
cmp
sbb
dec
push
lock
repz
in
call
imul
ror
enter
and
sub
cmp
and
dec
push
jge
mov
add
(bad)
fmul
mov
lods
cmp
jns
xor
cmps
pushf
pop
dec
inc
jbe
aam
sbb
push
fwait
push
inc
cmp
or
and
push
je
add
pop
inc
unpckhps
(bad)
sbb
mov
sub
and
outs
cmp
or
mov
mov
cmp
retf
add
daa
ins
clc
xor
adc
test
dec
pusha
adc
nop
sub
test
xchg
clc
(bad)
std
jne
cmp
je
add
xchg
movs
in
repnz
aaa
mov
sbb
mov
mov
mov
push
sbb
pop
push
jmp
sub
push
out
out
data16
sub
jg
ins
in
push
add
pusha
int
push
cmp
aad
inc
movs
xor
fimul
fiadd
test
mov
ins
lock
sbb
inc
ret
mov
pusha
pop
addr16
sub
and
das
push
jmp
sbb
dec
sub
aam
sbb
gs
pushf
mov
ror
push
jl
loopne
xchg
mov
xor
ins
outs
xchg
pop
stc
fild
jmp
pop
pop
in
pop
add
or
inc
addr16
or
hlt
ret
jmp
adc
push
jo
mov
xor
xor
popa
jb
test
sub
sub
adc
adc
shr
pushaw
jne
mov
inc
mov
bound
push
add
add
imul
sub
mov
jne
adc
nop
push
add
push
sub
jecxz
jge
(bad)
and
mov
pop
mov
movs
in
push
or
jecxz
ins
sub
xor
enter
loopne
loope
lea
add
in
hlt
inc
dec
sbb
add
add
push
or
imul
sub
pop
fidiv
add
clc
and
dec
arpl
jo
daa
add
(bad)
daa
adc
ss
cdq
fwait
dec
add
imul
mov
ja
in
or
or
adc
pop
or
xchg
adc
test
out
or
lsl
cmp
xchg
mov
cmp
mov
test
jmp
mov
pop
and
add
push
repz
movs
in
cmp
push
xchg
mov
adc
call
pop
ss
pusha
(bad)
enter
xchg
inc
out
jecxz
adc
out
(bad)
jecxz
inc
add
cmp
push
shr
sbb
jns
cli
fiadd
test
cmp
push
int
mov
sbb
cmp
cs
push
inc
sbb
mov
pop
(bad)
ret
ja
pusha
outs
xor
push
repnz
jmp
lods
jne
fiadd
or
in
push
sbb
or
and
mov
dec
mov
mov
je
or
test
push
inc
fcomp
in
imul
rol
mov
xchg
jmp
dec
icebp
pusha
popa
add
pop
call
les
clc
cmc
pop
sbb
jle
cmp
lea
cmp
push
push
cmp
je
in
or
mov
cdq
adc
xor
push
aas
ins
nop
icebp
xor
adc
push
or
les
and
jmp
sub
lock
or
imul
inc
pop
or
inc
loope
jo
or
ret
adc
pop
fisub
or
shl
sub
call
and
inc
out
data16
mov
mov
jmp
mov
xchg
pusha
sub
loope
mov
jo
push
popa
push
add
dec
cwde
jmp
into
movs
sub
shl
lods
les
into
scas
int
inc
lods
enter
adc
adc
add
inc
mov
(bad)
rcr
mov
loope
fstp
adc
or
ret
pop
xor
add
mov
es
mov
imul
push
sub
jp
dec
cmp
or
adc
jmp
and
dec
push
and
retf
add
pop
ret
inc
out
lods
sbb
and
inc
js
adc
push
lds
sub
mov
jns
xor
sbb
add
es
out
cmp
add
add
mov
push
int3
adc
pop
add
adc
and
adc
iret
adc
out
and
js
retf
and
or
mov
push
and
or
arpl
or
retf
and
mov
jmp
repnz
pop
inc
inc
or
or
sti
dec
lahf
arpl
sub
ins
inc
pop
mov
inc
adc
inc
and
add
pop
add
pop
retf
data16
test
jg
mov
and
pop
loopne
pop
je
movs
adc
aad
jns
adc
scas
popa
jno
mov
adc
sub
jns
push
mov
inc
add
add
jmp
dec
ja
xlat
push
into
test
not
adc
jmp
aas
je
mov
adc
ds
adc
sub
fucom
mov
push
sub
sbb
push
ret
fild
adc
xor
sbb
inc
cld
ins
aaa
dec
jo
imul
ror
cmp
or
dec
test
pop
jo
call
mov
int3
and
pop
or
jle
or
data16
adc
dec
cmp
adc
adc
or
loopne
add
mul
sbb
pop
and
rol
jnp
jl
pop
ror
mov
ret
(bad)
adc
out
addr16
test
jmp
sub
rcr
fiadd
xor
push
test
jne
or
add
add
retf
test
xor
xchg
mov
and
ret
xchg
or
push
test
ja
jecxz
pop
cli
cmp
xor
shl
cdq
mov
jl
inc
pop
arpl
jmp
adc
retf
shr
jge
dec
in
push
add
sub
push
(bad)
sub
jne
cdq
inc
pop
pop
mov
pop
fdivrp
add
xor
pop
sbb
mov
lock
dec
adc
cmps
int
rcl
or
mov
jnp
ins
sti
pop
and
nop
jb
mov
retf
ins
pop
sbb
mov
gs
sub
pop
pop
sub
js
ret
and
inc
inc
jmp
mov
in
mov
dec
les
pop
pop
hlt
les
mov
repz
adc
je
std
cmp
push
inc
rdmsr
hlt
ins
fisttp
repnz
fwait
lea
jmp
movs
xchg
dec
daa
mov
iret
xor
shl
lea
xchg
outs
sub
xchg
or
lds
or
inc
xor
and
add
dec
cmp
xor
cli
cmp
xor
and
mov
and
push
push
call
xchg
pop
jbe
xchg
stc
sbb
push
and
lods
sbb
ja
jecxz
or
xor
icebp
test
imul
add
jmp
pop
and
adc
outs
push
stc
xor
push
ret
fisttp
(bad)
pop
push
cmp
sbb
std
or
jae
sbb
mov
add
jno
mov
pop
(bad)
and
jbe
cmp
sub
push
sbb
ss
sub
aas
or
and
fadd
imul
pop
add
sbb
sahf
sub
mov
xchg
(bad)
sahf
(bad)
ret
pusha
sub
inc
outs
loop
mov
jb
scas
fucom
movs
xor
and
ret
xchg
add
out
in
pop
jne
or
cmp
mov
mov
in
dec
(bad)
into
add
lock
dec
test
dec
push
cmps
mov
xchg
(bad)
xor
jmp
daa
int3
jge
sbb
mov
or
push
call
adc
ret
cmp
jge
pop
lea
rcl
lock
fst
clc
jge
inc
mov
(bad)
jnp
fdiv
push
push
push
jne
add
mov
add
cmp
jl
dec
add
cdq
movs
jae
sub
mov
sahf
mov
mov
dec
cmp
imul
outs
jg
cmps
daa
xchg
or
leave
push
jae
imul
popa
loope
aam
pushf
adc
icebp
adc
jo
scas
push
dec
aas
loope
dec
inc
add
push
mov
mov
xchg
add
xor
mov
and
lds
fs
add
lock
adc
xchg
stc
push
jne
mov
add
out
xchg
sub
movs
pop
xchg
dec
xchg
std
std
shl
(bad)
je
daa
nop
outs
cwd
pop
inc
daa
pushf
pop
loopne
call
or
leave
jmp
lods
adc
sub
push
and
dec
je
mov
jle
inc
fwait
inc
and
cmp
xlat
add
mov
push
mov
or
or
std
fwait
cmp
add
cmp
test
sahf
pop
popf
dec
sbb
push
xor
fs
in
dec
pop
pushf
xor
jne
imul
or
dec
sbb
or
or
mov
push
sub
jmp
push
pop
xchg
inc
scas
or
dec
arpl
test
hlt
inc
call
dec
add
int3
stc
rcr
aam
sub
mov
addr16
mov
push
xchg
out
xchg
adc
and
push
dec
dec
cli
nop
scas
fxch
xor
and
cmp
fs
push
push
cmc
push
arpl
pop
sbb
xor
xchg
mov
dec
xchg
cmp
jns
xor
push
adc
xchg
lea
xor
or
cmp
xchg
cmc
or
dec
add
loopne
ret
push
sbb
xchg
xchg
mov
cmc
or
pop
jo
sub
xchg
xchg
dec
inc
mov
and
jbe
jmp
fidiv
test
add
in
xor
dec
xchg
push
stos
retf
cmps
pushf
loop
sbb
fcmovne
shl
loopne
adc
je
adc
adc
fucom
enter
push
push
jo
sbb
js
out
ins
mov
xchg
inc
cdq
or
cwde
js
dec
test
mov
(bad)
pushf
mov
add
ja
ja
test
or
cmp
sar
push
jbe
ss
mov
cwde
inc
jo
adc
cld
push
sub
inc
or
cld
jno
jmp
mov
test
cmp
sub
adc
imul
adc
dec
mov
(bad)
retf
iret
inc
outs
jmp
imul
push
push
or
iret
cmp
push
das
sbb
rcr
dec
mov
push
lea
add
fistp
in
cmp
aas
mov
push
lock
stos
sub
shl
in
pop
push
ja
js
push
jmp
idiv
pop
loopne
or
ss
sbb
add
cmp
lods
inc
and
mov
dec
xchg
in
pusha
mov
pop
iret
adc
push
mov
push
jae
(bad)
jns
xor
cmc
ret
mov
push
or
jae
jno
dec
or
std
adc
jge
je
shr
add
in
pop
mov
push
cvtps2pi
adc
push
jne
in
or
scas
sub
sub
lods
xor
jo
mov
jle
push
inc
mov
imul
pop
ja
sub
push
loope
or
mov
pop
adc
xor
push
mov
sub
add
ja
push
push
adc
mov
inc
mov
inc
jl
movs
out
and
cmp
pop
in
inc
loopne
cmc
ret
xor
ss
and
test
shl
popa
xchg
adc
bound
popa
push
data16
sbb
rol
xchg
add
fsubr
mov
out
ja
mov
or
loope
out
icebp
adc
sub
iret
pusha
pop
(bad)
lods
into
and
pop
add
adc
rol
inc
mov
jb
adc
cmp
or
jmp
mov
adc
cmp
cs
(bad)
pusha
sub
rcl
dec
jecxz
cs
jp
mov
nop
fwait
sub
xchg
cmps
sar
adc
adc
addr16
(bad)
loope
outs
jmp
js
push
xlat
je
jg
mov
cmps
fcomp
mov
mov
sbb
sub
loopne
jns
push
add
xchg
enter
jmp
pop
ror
outs
and
add
fisttp
fcmovu
ss
daa
mov
cmp
dec
ja
(bad)
inc
(bad)
xchg
movs
mov
jg
ja
mov
and
test
or
adc
loopne
test
sbb
pop
sbb
js
rol
stos
jmp
sbb
out
aam
loopne
mov
test
push
sub
rcl
ja
sub
dec
adc
jmp
cli
jnp
imul
and
pop
in
or
inc
or
and
push
adc
mov
fxch
pop
xchg
and
jne
test
cmps
and
daa
inc
pop
mov
lahf
nop
and
push
push
push
push
fidiv
stc
ror
movs
push
inc
lods
and
popf
or
inc
int
xchg
test
mov
(bad)
out
add
popa
or
fidiv
sbb
xor
or
push
div
pusha
and
dec
loope
xor
das
mov
dec
adc
clc
inc
xchg
(bad)
pop
fsubr
xchg
push
add
repz
loope
jbe
leave
and
mov
mov
sbb
rcl
mov
sub
arpl
mov
enter
pop
fsubr
xor
xor
inc
dec
call
(bad)
xor
or
(bad)
in
mov
std
shl
jno
or
rcr
jp
das
movs
xchg
xchg
mov
stos
test
xchg
fadd
sub
mov
xor
add
pop
mov
mov
mov
aam
fdivr
mov
lea
push
or
cmps
xchg
test
push
sbb
ss
pop
mov
cs
out
les
mov
fistp
aad
shr
dec
cmp
xchg
add
je
(bad)
mov
xor
adc
adc
or
shr
pop
push
test
add
faddp
push
or
pop
pop
push
cli
mov
inc
cmp
jge
xchg
mov
adc
add
cld
and
and
jge
and
xor
out
jle
test
push
add
pusha
gs
mov
sub
pop
fwait
sbb
push
pop
xchg
jg
pushf
and
jge
gs
test
or
adc
and
dec
loopne
mov
adc
sbb
jl
mov
xchg
sbb
mov
add
jmp
push
mov
xor
mov
mov
ret
add
dec
sub
push
add
add
or
add
sbb
adc
icebp
or
push
sbb
push
test
js
mov
sar
adc
fidivr
and
stc
shl
push
add
mov
add
loope
in
adc
push
mov
cmp
ins
test
(bad)
mov
das
mov
and
sub
les
add
push
sub
ins
test
push
jne
inc
rol
imul
push
pop
sar
add
inc
fwait
imul
add
jg
or
pusha
xchg
jge
pop
push
imul
dec
sub
pop
dec
add
outs
sub
adc
loopne
add
jl
test
push
add
xchg
mov
fbld
ja
movs
cmp
mov
int3
imul
mov
out
mov
jno
mov
jno
in
mov
adc
retf
or
daa
push
sbb
(bad)
nop
add
or
out
jmp
cwde
fwait
inc
inc
push
cmp
inc
nop
pop
or
and
adc
movs
sub
mov
retf
jp
icebp
ds
add
ja
dec
clc
sbb
sub
and
ror
fwait
dec
ins
sbb
add
push
daa
fstp
icebp
ja
je
cs
je
and
std
mov
movs
data16
or
or
and
jo
movs
repnz
je
dec
inc
pop
push
or
punpckhwd
dec
int3
push
or
push
aam
(bad)
or
mov
ins
retf
inc
push
call
test
data16
add
ja
dec
dec
clc
push
sti
fld
cli
add
jmp
push
push
xlat
imul
jae
je
push
xchg
daa
push
sar
jb
or
jbe
mov
jg
ja
je
aam
ja
je
pop
ins
hlt
pop
xchg
add
cmp
mov
jbe
push
jmp
cmp
xchg
(bad)
sbb
adc
cmp
scas
push
mov
mov
xor
fsubr
jecxz
mov
or
std
lock
xchg
imul
add
push
sub
or
repnz
pop
fnstenv
jecxz
lahf
inc
test
adc
cmp
add
mov
mov
out
xchg
xchg
push
rol
ins
jnp
jbe
pop
cmp
pop
pop
jbe
mov
loope
shl
add
adc
jne
jbe
adc
pop
aas
sbb
outs
pop
add
push
push
push
mul
mov
lods
or
adc
mov
mov
add
push
leave
sbb
add
inc
imul
cmc
push
lods
lock
xchg
inc
imul
movs
push
add
and
inc
out
dec
jne
stos
sub
jnp
mov
pop
inc
or
leave
cs
xchg
xchg
inc
in
push
mov
imul
test
mov
ja
push
sbb
lock
js
popf
pop
nop
xlat
xchg
inc
mov
test
xor
and
movs
jno
rol
adc
aaa
adc
push
sbb
mov
xor
cmp
cmp
je
xchg
and
add
cld
xor
xlat
xchg
mov
ss
and
das
add
jmp
jo
nop
and
sar
and
dec
push
pop
je
push
push
pop
cmp
push
or
adc
retf
add
in
(bad)
xchg
movs
push
push
aad
test
sar
pop
push
je
push
push
into
xchg
adc
inc
push
mov
aad
xlat
push
xchg
test
imul
cmp
lea
push
cmp
push
xchg
inc
add
scas
xor
pop
add
cmp
sbb
dec
or
jl
inc
outs
mov
xor
dec
inc
mov
jmp
(bad)
push
repnz
sbb
aas
and
or
xor
jmp
push
enter
pop
mov
ret
pop
test
push
adc
add
xchg
lods
add
out
xchg
ror
stc
sbb
push
mov
jnp
pop
retf
mov
jo
sbb
in
js
test
aam
or
push
(bad)
sbb
push
sub
push
add
inc
je
movs
call
pop
pop
mov
pop
(bad)
or
add
or
mov
jae
hlt
fcmovnb
or
xor
adc
push
repnz
jmp
push
ror
or
adc
sbb
push
fst
jmp
fst
(bad)
pushf
cs
mov
pop
or
push
(bad)
inc
int
dec
in
cmp
push
and
je
adc
ud2
ss
jno
jmp
adc
inc
or
and
imul
mov
sbb
sbb
sbb
push
imul
ret
data16
test
popf
bound
jae
movs
push
or
jecxz
es
add
rcl
mov
sub
inc
mov
sbb
sub
cmps
test
cmp
pop
add
repnz
data16
sbb
pop
sbb
inc
(bad)
jmp
movzx
add
test
jne
dec
arpl
pushf
data16
neg
(bad)
dec
push
pop
or
mov
jo
fstp
pusha
push
and
or
and
or
xchg
jnp
mov
push
pop
shr
imul
inc
popa
movaps
jge
push
jecxz
or
fs
in
ss
sysexit
sbb
pop
push
fwait
hlt
(bad)
cmp
sbb
push
mov
pop
add
and
adc
movs
fstp
fidiv
hlt
adc
sbb
imul
or
mov
sub
push
dec
or
inc
xchg
fld
add
or
(bad)
inc
mov
bound
loopne
push
push
push
pop
int3
or
js
xchg
inc
mov
pusha
gs
cmp
jg
hlt
mov
add
into
retf
xchg
dec
mov
jne
mov
mov
pushf
bnd
cs
loop
mov
leave
xchg
rcr
(bad)
out
or
and
repz
iret
or
enter
xchg
pop
cmps
imul
and
jl
mov
cmp
push
jb
pop
movhps
add
and
jae
stos
adc
push
and
mov
sar
jne
sub
fucomi
and
and
adc
mov
lea
ins
mov
fmulp
sub
fdivr
gs
jbe
cli
lock
fild
mov
inc
sbb
or
xchg
xor
clc
dec
pop
das
test
addr16
or
pop
mov
in
mov
(bad)
(bad)
jp
xchg
mov
xchg
in
add
inc
outs
adc
pop
fnstsw
xor
and
push
inc
into
and
in
movs
sub
add
js
ja
loopne
ret
add
inc
imul
(bad)
int3
push
add
or
aam
inc
movs
test
or
call
js
dec
dec
stos
and
sub
push
aam
mov
or
fdiv
ins
and
mov
and
dec
jbe
pushf
test
mov
in
push
or
mov
push
inc
push
jns
or
mov
adc
mov
sub
or
fimul
call
adc
pop
test
cld
pop
xchg
mov
mov
ins
lock
jl
xor
adc
stos
xchg
jns
inc
pop
lea
movs
outs
sub
dec
cdq
add
leave
jnp
popa
rcr
inc
mov
pusha
dec
push
inc
es
xchg
push
mov
inc
sub
fisub
pop
dec
pop
add
call
xchg
adc
jl
in
xor
xchg
mov
call
int3
mov
ja
or
retf
in
test
nop
xlat
(bad)
mov
inc
(bad)
ror
push
repnz
nop
pop
xchg
sub
sub
loopne
mov
and
push
mov
dec
pop
push
jae
cli
mov
test
aam
fst
sub
sub
test
or
inc
sub
cwde
test
test
xlat
push
loopne
dec
fwait
and
retf
inc
imul
pop
inc
xchg
(bad)
jmp
xchg
sub
pop
mov
sbb
sbb
mov
inc
xchg
aaa
mov
mov
or
sbb
adc
ror
mov
jb
mov
sbb
inc
push
and
inc
sbb
mov
pop
movs
fs
sub
movs
movs
cmp
mov
daa
leave
xchg
popf
pop
ins
inc
jb
rcl
xor
xchg
retfw
inc
jb
push
adc
pop
mov
xchg
and
and
in
inc
sub
and
xchg
imul
xchg
cmp
test
mov
add
mov
push
push
sbb
xchg
sub
(bad)
push
push
scas
pop
shr
repnz
adc
xchg
aam
fild
add
pop
xchg
push
xchg
push
ret
sub
add
adc
adc
jle
shl
push
int3
add
or
pop
loope
into
push
jecxz
jmp
ins
or
arpl
mov
sti
jns
enter
loop
cmp
pop
and
mov
(bad)
inc
gs
cwde
dec
(bad)
adc
pop
or
mov
inc
ins
pop
add
into
es
dec
xor
rcl
and
add
mov
jge
xchg
add
mov
std
sbb
enter
mov
or
mov
jne
add
xor
dec
and
jns
js
cmc
cmp
inc
adc
popa
dec
pop
push
jo
sbb
or
(bad)
inc
call
sub
int
cwde
dec
adc
and
jne
cmp
and
mov
jne
call
loop
pushf
(bad)
mov
cmp
jg
add
xchg
mov
mov
adc
sahf
inc
ins
push
cmp
stos
and
test
test
leave
inc
(bad)
sbb
daa
xor
pop
add
shr
or
lea
pop
add
jle
and
sub
jns
jle
cmp
loopne
inc
test
dec
lods
adc
pop
or
and
shl
in
or
xchg
jl
or
jo
inc
jmp
add
popa
xlat
push
mov
jge
jnp
and
adc
ins
push
stc
out
jp
mov
test
add
or
add
fisub
into
jecxz
pop
xchg
xchg
cmp
test
add
push
ja
mov
fidivr
repz
adc
jo
dec
adc
lods
jp
push
addr16
dec
cmp
daa
sbb
(bad)
sub
jmp
or
xor
repz
push
bound
call
sbb
xor
dec
xchg
or
mov
sbb
inc
add
aam
and
cmp
jb
jne
sahf
fcmovnu
push
loopne
sub
inc
ds
mov
call
addr16
sbb
add
pop
sub
xlat
push
les
mov
test
pop
push
cmp
cld
mov
lods
pop
sbb
add
jecxz
daa
cmp
test
and
daa
inc
call
cmp
jge
sub
mov
iret
mov
add
loop
leave
jp
popf
jmp
fadd
pop
pop
or
push
push
dec
enter
pop
cmp
sub
push
out
xchg
or
add
ret
ss
fist
mov
das
sti
das
or
or
inc
add
ja
sub
fwait
xor
push
je
inc
jle
inc
push
cmp
jne
mov
add
xchg
sub
(bad)
(bad)
mov
cmp
(bad)
adc
lock
jmp
es
adc
mov
ins
add
or
or
or
lds
jle
sti
jge
and
dec
jp
test
push
cmp
outs
jae
cmp
jle
es
test
or
sub
cli
mov
ret
rcl
add
xchg
sti
lods
aas
stos
hlt
jmp
sub
call
les
and
ins
pop
and
push
imul
sub
or
inc
mov
add
jbe
jo
ret
clc
pushf
inc
and
jl
sbb
in
in
inc
movs
sbb
sbb
dec
and
popa
in
add
cdq
adc
and
jl
adc
push
xor
push
or
pop
cmp
inc
cmps
push
push
jae
push
cmps
int
xchg
xchg
cmp
mov
(bad)
out
shr
and
mov
mov
mov
cmp
xor
jne
mov
and
jmp
ret
pusha
xchg
adc
xor
shl
stc
jle
ja
sub
lods
xchg
in
inc
nop
addr16
xchg
sti
pop
inc
or
(bad)
repnz
push
cmps
aaa
popa
(bad)
inc
pop
repz
push
pop
mov
and
or
pop
call
push
pop
jmp
loop
hlt
rol
int3
nop
xchg
int3
imul
fbld
ins
test
in
or
ja
jl
js
add
outs
pusha
or
inc
and
mov
push
pop
push
or
add
or
aad
mov
or
loopne
mov
outs
lahf
xchg
jo
xchg
loope
sub
mov
push
push
arpl
mov
outs
jp
mov
sbb
jb
jmp
jle
xchg
and
add
inc
(bad)
cmp
lock
and
sbb
les
add
and
add
loopne
dec
call
in
xchg
add
push
cmp
cmps
not
arpl
push
pop
add
sbb
sub
adc
sub
or
push
push
sub
inc
mov
test
ins
mov
out
push
jo
imul
or
daa
push
push
ss
jne
mov
loopne
(bad)
movs
mov
push
or
pop
sti
mov
sub
outs
mov
mov
push
cmp
loopne
jns
mov
mov
pop
adc
sahf
push
retf
mov
es
ins
pop
jne
jo
add
add
push
mov
in
stos
mov
repnz
adc
call
(bad)
sbb
test
mov
mov
add
or
push
ins
xor
movs
and
fwait
and
jo
es
xor
mov
mov
adc
or
cmp
or
cmp
cmp
or
popf
inc
aad
shl
call
test
fidiv
pop
mov
cmp
sub
sbb
scas
xchg
adc
pop
mov
push
add
outs
pop
xchg
(bad)
cdq
xor
mov
add
or
and
add
sub
ret
sbb
mov
add
add
les
stos
push
and
add
cwde
xchg
ds
push
sub
imul
mov
or
pop
arpl
or
mov
das
cmp
(bad)
test
sti
and
leave
mov
pop
out
adc
pop
sub
pusha
mov
(bad)
push
das
or
or
and
out
jno
pop
add
jl
mov
sbb
lods
fisubr
ins
xchg
adc
pop
or
pusha
mov
adc
push
sub
in
sbb
sub
dec
push
or
cld
sbb
push
push
je
push
push
imul
or
popf
or
fs
push
bound
add
add
push
add
xchg
call
pop
add
mov
xchg
or
push
and
sub
dec
or
xor
fwait
clc
mov
mov
sub
das
cmps
adc
inc
and
and
add
mov
das
jmp
hlt
adc
call
rcl
jne
cs
fild
or
cmp
pop
inc
adc
push
ins
fcom
push
pop
aam
jmp
dec
stos
rcl
cmp
or
or
nop
js
sub
sar
jecxz
hlt
lods
mov
adc
inc
push
cmp
jmp
rol
dec
jo
push
push
mov
push
push
and
ja
add
dec
push
cmps
(bad)
jmp
addr16
ret
mov
jno
pop
stos
xor
xchg
aam
xchg
aam
pop
iret
(bad)
push
jmp
lea
jecxz
ret
mov
cmp
adc
hlt
add
or
xchg
inc
pop
mov
pop
out
iret
out
push
mov
xor
scas
push
imul
add
gs
shl
xchg
lods
lods
fucomi
out
(bad)
push
test
cmp
popa
inc
inc
(bad)
push
inc
sbb
pop
fyl2x
movs
push
ret
jbe
add
cmps
jmp
shl
aam
xchg
retf
div
out
in
mov
xor
add
and
xor
sub
dec
adc
repz
scas
repz
xor
push
jecxz
jmp
test
sbb
cmp
rcr
into
inc
(bad)
call
jnp
jnp
or
dec
inc
mov
sub
sbb
add
fisttp
sub
cmp
lea
jl
ret
or
dec
setns
repz
test
add
je
mov
sub
xor
and
or
add
out
sub
sbb
xor
mov
mov
pushf
ror
test
js
rol
(bad)
shl
retf
jmp
or
mov
jl
fcom
sbb
sar
mov
xchg
inc
push
fwait
lock
xchg
loopne
dec
jge
jne
ins
fldenv
(bad)
test
pop
(bad)
mov
call
push
cmps
pop
push
out
or
sbb
inc
or
dec
stc
and
and
mov
(bad)
nop
movs
ds
pop
xchg
xlat
xor
fwait
and
mov
sbb
sub
pop
xor
loop
jg
push
gs
mov
cmp
mov
add
sbb
cmp
test
adc
add
outs
sbb
sti
add
jnp
fistp
add
ret
test
dec
sbb
and
inc
cmp
and
call
add
push
adc
fld
jl
add
int3
adc
push
jae
sbb
sbb
sub
loopne
sub
cmp
mov
fist
clc
ja
push
jae
ins
and
xor
adc
dec
int3
cmp
in
cmp
movs
push
dec
mov
data16
shl
(bad)
es
test
jp
mov
mov
xchg
sbb
aaa
pop
and
xor
rcr
test
mov
mov
mov
movs
pop
and
mov
ja
les
test
ins
inc
int3
pop
add
daa
rcl
mov
xor
push
test
int3
das
cmp
dec
and
test
inc
push
add
into
clc
or
push
(bad)
sub
sbb
jbe
daa
rcpps
shr
add
mov
inc
and
test
call
or
mov
mov
nop
mov
or
add
int
or
cmp
dec
stc
fcom
dec
and
pop
and
in
dec
pop
push
hlt
clc
add
adc
adc
push
and
push
popf
test
cmp
inc
add
xchg
sbb
adc
push
scas
push
in
push
jmp
xchg
call
aam
(bad)
cdq
shr
jle
or
nop
and
cwde
pop
push
xchg
xor
loopne
shl
call
test
fcomp
push
jo
jl
nop
cmp
add
and
mov
xchg
xor
imul
jo
sub
xor
push
xchg
cmp
pusha
cld
mov
push
push
lock
cmp
sub
je
inc
sub
mov
push
(bad)
add
pslld
cmps
jns
mov
inc
sub
sub
xor
addr16
cmp
or
and
and
jg
sar
push
mov
repnz
push
sar
out
or
or
sub
mov
add
repz
or
sbb
fsubr
push
xlat
dec
imul
push
sbb
sbb
aaa
pop
js
in
xchg
mov
push
push
adc
and
add
call
push
xchg
add
int
imul
inc
pop
add
shr
push
jae
xchg
cmp
dec
push
(bad)
lock
out
dec
data16
outs
arpl
fcom
test
inc
sbb
(bad)
or
int
or
push
icebp
dec
inc
and
xor
sub
adc
sar
dec
mov
loope
inc
or
cmps
sbb
outs
and
cmp
push
(bad)
or
jl
sub
dec
mov
pusha
repz
fcom
rcl
jbe
inc
push
leave
or
or
adc
inc
push
mov
add
rol
xor
sub
pop
adc
fistp
and
pop
xor
adc
jbe
dec
sub
rcl
jo
retf
xchg
cmp
and
jle
cmc
mov
cmps
xchg
sub
pop
clc
inc
fcmovnu
mov
or
add
and
add
inc
xchg
mov
or
popf
add
mov
push
push
cmps
jb
push
lea
dec
sub
cdq
outs
data16
adc
scas
popf
adc
je
mov
mov
and
sbb
pop
xchg
mov
adc
or
out
push
bound
aad
jb
mov
inc
sar
pop
push
jne
out
repnz
fidiv
push
push
sub
daa
and
pop
adc
sub
and
xor
movs
push
cmp
inc
fdiv
push
sti
push
test
hlt
mov
movd
retf
fadd
(bad)
cmc
cmp
mov
jbe
add
sbb
stos
mov
sub
push
sub
iret
push
dec
adc
and
jp
add
or
mov
sbb
xor
push
xor
cld
or
lds
lock
stos
es
fisubr
sbb
xlat
loop
or
aas
sub
add
dec
ret
push
not
jecxz
xchg
popa
add
or
or
mov
cmp
sub
sub
sbb
xor
or
jmp
jb
aam
jmp
pusha
das
pusha
(bad)
jns
adc
sbb
xchg
inc
leave
or
add
xchg
add
or
pop
push
ret
push
test
adc
loop
hlt
rol
pop
outs
mov
repz
mov
add
imul
mov
push
mov
add
xchg
pop
add
add
inc
adc
xor
inc
mov
stos
ins
sub
or
mov
jae
movzx
lods
mov
or
popa
fwait
mov
and
ins
add
leave
pop
push
shl
pop
outs
or
mov
or
mov
cmps
pop
ret
sahf
clc
test
mov
mov
or
mov
mov
push
mov
mov
daa
mov
push
xchg
xchg
iret
cmp
jae
push
xor
jnp
jnp
es
sub
dec
imul
iret
inc
xor
jb
cmp
adc
(bad)
int3
fdivr
xchg
push
(bad)
mov
jmp
xchg
or
adc
icebp
enter
loopne
jne
push
or
nop
sbb
test
sahf
lock
and
inc
mov
js
mov
and
outs
jmp
jae
sbb
adc
out
ins
test
mov
mov
mov
data16
push
ins
add
add
iret
push
add
lock
cmp
push
rcl
cmp
inc
push
scas
je
or
cmp
lahf
mov
xchg
push
cmp
dec
mov
sbb
add
pop
sbb
pop
rcr
hlt
repz
rcr
xor
fucom
mov
push
sub
sub
mov
mov
lods
or
cld
icebp
clc
ficom
jmp
aaa
gs
add
fwait
and
in
hlt
and
xor
mov
int
xor
or
enter
out
or
and
js
lds
pop
pop
or
pusha
sub
inc
icebp
sbb
jne
and
mov
leave
sub
imul
push
sub
jg
or
add
dec
adc
and
dec
imul
sub
fs
xchg
xor
call
and
fistp
adc
inc
push
cs
adc
xor
pop
pop
loope
add
cmp
inc
gs
mov
jno
cmp
mov
adc
inc
adc
xor
and
pushf
dec
add
sti
shl
cmp
bound
inc
mov
fidiv
jmp
pusha
sbb
test
mov
rcr
fs
ror
push
or
pop
mov
cmp
jp
push
adc
test
clc
or
push
adc
aad
out
loopne
cmp
jmp
stos
and
dec
or
not
aas
and
fs
or
std
cmp
dec
adc
jne
sbb
fistp
push
push
push
jmp
adc
dec
idiv
pop
jmp
sbb
jmp
adc
jo
movs
in
jns
mov
jmp
mov
out
rcr
cmp
sbb
push
adc
jno
or
lock
inc
dec
mov
pop
ds
push
dec
inc
add
xchg
popa
aaa
xor
pop
ror
xchg
or
ret
adc
inc
and
jo
or
call
cmps
out
ins
sub
ds
add
int3
sbb
dec
push
pop
sub
push
ret
ja
mov
js
jle
lahf
add
sbb
daa
call
xchg
adc
scas
gs
test
sbb
mov
add
cmp
or
add
xor
sbb
fdivr
add
push
add
jae
outs
inc
pop
dec
dec
adc
test
jae
mov
cmp
dec
or
push
push
addr16
shr
movs
push
jmp
pop
jmp
jo
inc
or
pop
lods
push
je
rcr
(bad)
(bad)
jnp
pusha
ud2
js
jmp
int3
add
push
jg
pop
(bad)
mov
loopne
adc
lods
and
inc
add
pusha
test
sar
lds
test
dec
rol
cmps
push
and
sahf
out
sahf
or
adc
adc
icebp
sahf
out
sbb
sbb
js
push
xchg
fld
pushf
xchg
xchg
cmc
mov
or
mov
mov
mov
jp
je
cmp
je
adc
and
pusha
ja
jmp
or
push
frstor
mov
push
xchg
test
add
data16
mov
cmp
(bad)
xlat
xor
pop
stos
jns
js
iret
cmp
ds
lea
adc
jb
mov
or
add
inc
and
add
pushf
dec
dec
es
add
add
sub
popa
fnstenv
inc
loop
jge
sbb
fisub
imul
scas
out
(bad)
int3
ss
dec
cdq
pop
push
add
(bad)
cmp
pop
(bad)
retf
movs
retf
adc
xor
add
repnz
adc
jae
iret
add
test
enter
dec
or
(bad)
cmc
adc
inc
or
rol
mov
in
(bad)
and
lds
xchg
or
loopne
pop
xchg
sar
adc
enter
cli
or
xchg
aaa
mov
das
scas
fldenv
cmc
loopne
pop
jmp
and
add
xchg
xor
dec
push
call
dec
fnsave
test
inc
jg
mov
in
xchg
cmp
enter
cmp
dec
ffree
inc
dec
pop
sbb
in
cwde
mov
add
sub
je
jns
cmp
cmp
or
adc
adc
out
stos
and
mov
mov
rcl
xor
cmp
gs
add
sbb
cwde
test
jb
cs
and
and
mov
add
test
or
add
push
pop
add
sub
dec
push
push
dec
in
scas
or
pop
nop
jne
mov
mov
push
inc
in
mov
iret
in
add
adc
dec
(bad)
cdq
ret
cmp
lods
xchg
pop
gs
lock
leave
add
bound
mov
and
(bad)
in
adc
pusha
mov
rcl
dec
push
repnz
lahf
and
inc
imul
xchg
sub
or
add
(bad)
inc
mov
add
(bad)
sub
and
pmuludq
hlt
jg
adc
hlt
out
xor
dec
jnp
mov
fwait
ss
xchg
mov
xor
aaa
je
or
ja
sbb
xor
lea
add
sbb
pop
loope
sbb
(bad)
jp
adc
jl
mov
xchg
sub
or
xor
rcl
nop
xchg
clc
push
cmp
mov
shl
aas
je
push
in
adc
movs
or
out
int3
pop
sbb
xchg
stos
sar
pop
pop
push
cli
add
fwait
jecxz
or
xor
push
mov
test
mov
mov
sbb
or
scas
js
hlt
adc
mov
pop
adc
gs
pop
fidivr
daa
inc
mov
inc
popf
mov
pop
jnp
sbb
popa
sub
xor
mov
inc
(bad)
fcomip
cmps
fild
push
into
stos
stos
push
push
mov
inc
cmp
jl
imul
add
and
ins
ins
and
add
and
push
(bad)
int
cmp
(bad)
pusha
movs
jmp
pop
add
push
xchg
inc
ins
test
int
outs
daa
retf
inc
adc
or
jmp
sub
pop
sub
int
int
pop
sbb
push
and
dec
xor
dec
and
int
int
inc
xor
aas
cmp
cmp
push
jmp
ins
jmp
jo
es
and
add
add
jae
adc
mov
movs
cmp
repz
xor
aaa
push
push
vmwrite
repz
and
ds
neg
sbb
in
icebp
push
or
sub
dec
add
test
mov
lock
push
aaa
js
ins
add
cld
(bad)
(bad)
cmp
dec
sbb
jb
ffree
(bad)
fbld
cmp
sbb
packssdw
dec
js
push
cli
lds
movs
lock
inc
push
ret
add
call
mov
arpl
xor
je
out
push
push
xor
lds
test
repnz
in
sub
jl
stc
push
mov
(bad)
dec
ds
fcomp
mov
adc
mov
or
adc
jmp
les
enter
xchg
enter
jmp
jnp
or
xor
and
jmp
adc
xor
jo
ds
mov
dec
lock
push
aaa
jg
mov
cmp
push
icebp
test
idiv
iret
loope
outs
adc
aad
mov
mov
mov
(bad)
adc
or
ficom
pop
sub
int3
adc
pop
rcl
sbb
inc
inc
rcr
lea
int3
cmp
test
scas
xor
mov
stc
(bad)
setge
dec
and
cmc
adc
enter
mov
call
and
test
jns
jnp
test
adc
ins
sahf
pop
add
xor
sti
push
retf
push
lock
pop
cdq
js
dec
push
bound
mov
scas
mov
sbb
jne
push
je
iret
adc
sbb
adc
add
mov
out
cmp
pop
inc
cmps
sub
pop
mov
xlat
pop
retf
fild
test
enter
pop
add
xchg
fcomp
fldlg2
sub
adc
leave
and
dec
sbb
mov
call
add
adc
mov
and
add
cld
rol
call
or
in
rcr
mov
test
stos
add
lock
aaa
(bad)
add
xchg
mov
out
and
imul
jnp
(bad)
fisttp
loope
es
addr16
inc
or
cwde
or
cmp
outs
iret
jmp
mov
lahf
ins
(bad)
imul
dec
push
mov
jnp
rcl
push
popf
or
jmp
inc
xor
adc
mov
or
push
xchg
mov
lds
xor
cmp
add
xchg
push
sub
clc
xor
and
or
sbb
imul
ss
mov
cmp
je
dec
push
outs
shl
push
push
sub
mov
call
or
dec
out
dec
or
fist
pushf
push
cmp
je
dec
cld
cmp
mov
(bad)
mov
lahf
sbb
repz
xchg
mov
nop
and
mov
sbb
hlt
ror
mov
inc
ins
sub
rcl
add
fild
loop
mov
pop
pop
ror
xchg
jmp
push
xchg
loope
jp
and
push
inc
retf
rol
dec
mov
xchg
or
aas
jo
scas
imul
and
ficom
pusha
stc
ja
pop
js
or
jmp
jmp
jae
pop
sbb
xchg
shr
neg
lahf
sbb
enter
into
sbb
or
int3
lods
in
push
push
iret
adc
jns
jecxz
push
and
dec
cwde
aam
les
pop
cmp
jmp
ret
je
frstpm(287
js
push
and
inc
pop
pushf
mov
mov
push
and
or
imul
inc
sub
inc
mov
mov
test
sbb
mov
cmp
out
mov
stos
add
jbe
(bad)
mov
fs
lods
push
dec
jb
mov
pushf
xor
or
in
data16
imul
out
(bad)
retf
loop
and
shl
jne
dec
in
or
and
add
movs
clc
inc
sti
fcom
add
push
sub
push
push
inc
ins
dec
jae
inc
(bad)
movs
or
and
popa
iret
mov
movs
push
and
dec
dec
mov
xor
adc
cmp
mov
mov
(bad)
sbb
and
pop
inc
ins
or
sbb
jo
fld
push
mov
hlt
sub
call
inc
call
loop
cdq
push
push
mov
icebp
and
mov
rcr
push
into
scas
push
dec
inc
xor
push
jo
push
fnstenv
cs
push
xor
in
push
xchg
xor
rcl
pop
pop
mov
in
mov
push
push
jnp
xor
mov
sub
or
ficomp
enter
sub
push
push
mov
aam
adc
fcomp
cmp
dec
addr16
xchg
daa
xchg
jle
lds
and
jnp
mov
jns
sub
call
test
arpl
pop
sub
(bad)
dec
sbb
inc
xor
fsubr
leave
cmp
in
fbstp
clc
je
mov
fsubr
mov
shr
dec
push
and
pusha
addr16
inc
lock
and
adc
scas
das
mov
or
imul
mov
ror
xchg
push
fadd
loop
fdivr
and
sub
add
hlt
sub
cmp
jnp
lods
lahf
adc
cmp
fld
pop
xchg
push
pop
add
jle
xlat
inc
jecxz
xchg
inc
jae
mov
mov
fcmovu
popa
xor
rcl
clc
jle
jae
cmp
(bad)
outs
aas
xor
pop
sbb
jmp
xor
je
mov
test
jecxz
mov
cli
cmp
dec
sub
jae
call
jne
xchg
or
add
loopne
and
test
js
push
(bad)
sbb
mov
and
xor
sub
xor
xor
xlat
aas
fwait
je
and
mov
popa
sub
cmps
mov
mov
mov
push
inc
inc
push
jns
adc
in
xchg
inc
adc
inc
push
sbb
xor
sub
in
xchg
inc
and
sbb
sbb
or
loopne
ficomp
mul
or
cmp
popf
fsub
or
pop
outs
cmp
popf
sbb
inc
dec
push
rol
mov
and
add
jb
add
cwde
and
nop
and
movs
shl
or
adc
push
call
mov
xchg
icebp
or
adc
mov
push
mov
out
or
and
mov
leave
sbb
lods
adc
sbb
and
(bad)
shl
enter
stos
ror
push
push
dec
inc
hlt
push
jecxz
not
rcl
dec
pop
adc
adc
mov
bound
out
xor
and
xor
in
xor
dec
dec
adc
or
cmp
sar
ins
add
add
int
je
js
and
jae
cdq
adc
test
fcmovnbe
mov
adc
sub
sahf
out
xchg
sub
xor
pop
jmp
sbb
(bad)
push
inc
jmp
add
adc
add
pop
arpl
lods
sub
or
push
adc
jecxz
xlat
aas
in
mov
xor
xchg
outs
xchg
enter
mov
dec
jb
je
mov
cs
xor
cwde
test
test
xchg
dec
shl
(bad)
enter
and
and
mov
push
cld
push
rcr
cmp
fs
arpl
loopne
mov
nop
inc
loopne
mov
stos
or
ds
cmp
dec
push
inc
mov
and
inc
push
push
shl
call
adc
enter
xor
adc
cli
add
inc
push
repz
cmp
add
rcl
scas
and
xor
mov
add
jo
pop
mov
inc
push
out
add
push
jbe
mov
pusha
mov
add
nop
inc
stos
aas
enter
popa
lods
and
push
jne
jmp
and
push
loop
fdivp
movs
xchg
add
dec
clc
in
movs
xor
iret
inc
in
xchg
mov
ja
mov
ret
int3
mov
inc
inc
outs
mov
(bad)
and
cwde
add
rcr
imul
call
inc
jne
or
in
and
jl
test
or
shr
mov
add
and
sbb
(bad)
push
shr
xor
pop
cmp
popf
popf
jo
push
bound
outs
dec
pop
xor
add
in
or
xchg
adc
aad
sti
aam
xchg
mov
adc
ins
mov
xor
inc
pusha
cld
scas
inc
leave
movs
aam
pop
add
push
jmp
sbb
inc
sub
jne
aaa
mov
lea
popf
mov
ror
rol
cs
fisttp
push
xchg
fst
shl
pop
xchg
sbb
add
rcl
fstp
jmp
push
dec
aas
or
cmp
shr
add
sub
xchg
stos
cmp
nop
aad
dec
and
addr16
es
retf
xor
cmp
stos
lods
nop
push
ret
dec
xor
push
(bad)
cmps
test
cmp
test
pop
(bad)
adc
cmp
xor
add
shr
push
push
div
xor
xor
mov
mov
mov
test
sub
cmc
cdq
xor
movs
mov
pop
fsubrp
add
mov
jge
cmp
and
mov
mov
jne
pop
call
xchg
and
ja
jecxz
and
frstor
fisttp
stos
mov
adc
ins
test
add
jno
adc
sar
push
pmulhuw
push
bound
retf
adc
and
xchg
test
or
fsub
fdivr
fadd
mov
not
fadd
jge
neg
lahf
push
sbb
js
xchg
iret
movs
sti
mov
mov
leave
movs
sti
(bad)
hlt
cld
lock
ret
sti
xor
mov
mov
ins
pop
iret
inc
jmp
dec
mov
pushf
movs
mov
mov
nop
pop
stos
sub
out
push
inc
stos
add
pop
pop
ds
sbb
or
repz
daa
dec
xor
(bad)
out
mov
jnp
imul
dec
dec
xchg
or
add
sar
sbb
mov
pop
add
mov
add
dec
sub
mov
add
out
push
pop
cmp
adc
lahf
repnz
push
sbb
push
push
push
lock
lea
inc
icebp
cmp
iret
(bad)
fcmovnbe
pop
add
and
sbb
adc
push
ss
dec
loop
sbb
sbb
or
sbb
popa
(bad)
nop
test
cmp
fidiv
dec
movs
loope
mov
sub
push
mov
jns
or
jbe
popa
mov
arpl
mov
add
rol
jae
xchg
cs
test
push
movs
mov
pop
test
mov
pop
cs
retf
mov
dec
jmp
loopne
pusha
cmp
rcr
div
jl
fsub
loopne
add
push
mov
inc
adc
cmp
add
xchg
dec
jae
push
and
and
jb
pop
xor
xor
cs
retf
inc
cmp
inc
push
retf
in
mov
and
(bad)
xor
jb
or
jo
(bad)
and
xchg
dec
and
cmp
push
xchg
or
std
mov
loopne
and
sbb
add
adc
push
mov
lock
jl
lods
movs
push
movs
in
and
sbb
cmp
add
add
pop
(bad)
mov
leave
enter
and
and
clc
and
add
inc
push
test
xor
shl
mov
pop
cs
push
xor
add
xor
test
sub
adc
cmp
or
fsub
pusha
mov
lock
push
mov
add
lods
out
dec
dec
das
cld
or
neg
add
(bad)
sti
or
adc
mov
out
pushf
stos
jae
icebp
(bad)
cwde
inc
call
in
adc
test
or
add
and
push
sbb
add
xor
adc
inc
cli
cmp
lods
mov
mov
fwait
push
repnz
js
outs
adc
(bad)
arpl
sbb
adc
scas
sub
push
inc
pusha
pusha
nop
add
popa
mov
adc
push
or
push
dec
dec
fldenv
scas
sbb
cmp
xchg
daa
ret
mov
add
adc
xchg
and
add
movs
cmps
xchg
lods
pushf
jmp
sub
adc
adc
mov
push
retf
js
imul
cs
cmp
adc
adc
sub
jge
dec
std
xchg
retf
pop
jmp
inc
(bad)
dec
loop
adc
outs
ins
or
(bad)
call
(bad)
dec
pusha
psrlw
push
or
pop
adc
add
dec
sub
pop
jp
jp
mov
pop
add
pushf
lea
rol
imul
fdecstp
sbb
jmp
add
scas
jecxz
dec
dec
rol
jle
fbld
hlt
inc
push
push
loop
or
hlt
stos
push
ror
push
add
mov
xor
inc
inc
fiadd
or
loop
hlt
dec
inc
sbb
push
cld
dec
mov
adc
pop
dec
sar
mov
or
sub
adc
mov
pop
and
ret
mov
outs
inc
inc
hlt
call
push
jl
adc
ret
inc
inc
mov
fcomi
dec
add
dec
adc
lds
cmp
jne
test
and
pop
and
rol
sbb
popa
or
push
sbb
ins
sub
test
hlt
add
stos
fild
hlt
push
enter
push
mov
sbb
ret
push
mov
xchg
push
add
leave
mov
test
scas
lock
push
jmp
pop
stos
and
loop
(bad)
cmps
jmp
ins
imul
stos
pop
pop
xor
jae
bound
psubq
daa
add
rol
add
dec
sbb
mov
pop
xchg
xor
mov
movs
jne
adc
dec
shl
sub
cmp
imul
xor
adc
push
xchg
inc
shl
pushf
pusha
mov
ror
cmp
dec
aaa
fild
pop
adc
adc
sub
mov
cmp
ror
or
xchg
adc
or
cwde
sub
and
cmp
jnp
jne
push
jb
loope
rcl
enter
and
lods
addr16
xchg
add
dec
inc
sub
xchg
cmps
adc
mov
adc
jmp
push
mov
dec
popa
sub
sar
and
movs
loop
push
mov
imul
loopne
mov
sub
dec
jge
(bad)
arpl
jbe
add
xchg
mov
sbb
sbb
ror
ror
shl
or
lea
jmp
test
pop
mov
inc
daa
test
scas
sub
pop
dec
sbb
sbb
xor
push
fprem
jmp
call
xchg
lock
mov
or
jb
jmp
imul
test
dec
mov
xchg
mov
cs
cmp
mov
(bad)
ins
sbb
fcom
inc
test
sub
push
mov
(bad)
push
lds
sbb
sbb
dec
and
mov
or
jmp
jno
jne
popa
loopne
and
adc
das
push
push
das
pop
adc
sub
daa
cli
call
sar
push
cmp
repz
jmp
pop
je
nop
icebp
leave
popf
mov
or
or
enter
mov
add
pop
push
adc
imul
imul
rol
shr
movntps
and
int3
mov
scas
and
mov
imul
pop
add
and
lds
xchg
jecxz
xchg
fsub
mov
pushf
aam
mov
jo
sbb
sbb
pop
rol
cdq
sbb
xchg
cwde
and
out
mov
pop
sbb
cmp
cld
ror
call
push
stos
punpcklbw
pop
and
push
adc
ja
js
add
xchg
nop
inc
adc
(bad)
sbb
int3
and
lock
xor
xchg
rcr
sbb
aaa
cmp
inc
rol
fsub
mov
neg
sbb
sbb
inc
je
push
cwde
cli
inc
fidivr
xor
shl
jl
add
xor
inc
pop
in
mov
pushf
sub
shl
fisttp
test
jne
jne
inc
add
lea
call
xchg
in
adc
pop
mov
adc
xchg
sub
mov
mov
xor
out
pop
add
xor
pop
push
out
loopne
(bad)
mov
push
das
or
and
gs
and
xchg
mov
and
or
mov
inc
and
and
jmp
popf
mov
shl
imul
(bad)
enter
xchg
rcr
lock
mov
sbb
and
cld
and
add
jecxz
(bad)
jbe
cmp
arpl
test
sub
xchg
push
sub
push
jns
test
xor
or
aaa
jecxz
fcmovnb
adc
loope
mov
and
repnz
sbb
inc
push
js
or
sahf
or
int3
jo
mov
mov
fsubr
or
popa
adc
dec
push
imul
sbb
add
outs
adc
pop
mov
jno
div
inc
push
mov
cmp
out
pop
loopne
and
nop
pop
mov
jmp
ins
mov
sahf
rdpmc
mov
xor
push
and
lods
jmp
inc
sbb
cmc
or
push
aas
pop
fiadd
ret
push
sar
fidivr
pop
(bad)
mov
or
or
xchg
scas
adc
mov
mov
mov
add
mov
xchg
mov
cmp
cmp
and
inc
cmp
dec
jnp
push
push
jb
jmp
lahf
and
mov
mov
call
enter
mov
mov
pop
pushf
xlat
gs
sahf
sahf
mov
dec
ret
lock
ret
jno
adc
stos
call
jecxz
inc
loopne
lds
out
add
xlat
xchg
cwde
pusha
repz
js
inc
mov
(bad)
jmp
sbb
fmul
jge
loopne
push
mov
test
sub
dec
pop
inc
jecxz
push
ds
push
adc
xor
call
fdiv
jns
shl
or
or
lahf
std
adc
loopne
add
cli
shl
js
xor
add
push
mov
dec
jns
mov
mov
pusha
loopne
add
inc
mov
daa
add
mov
or
jbe
sbb
mov
std
not
xchg
or
and
or
jns
xchg
cmc
shr
mov
xor
adc
xor
jp
mov
xor
xor
pop
sbb
fld
or
xchg
add
add
add
adc
adc
rol
dec
mov
xor
and
pop
and
pop
jge
push
add
repnz
call
inc
es
jecxz
add
fwait
mov
dec
popf
and
adc
(bad)
test
sub
sti
loop
dec
cdq
nop
fcomp
imul
push
fsub
or
out
push
aaa
movs
pusha
inc
or
or
loopne
push
push
cmps
mov
sbb
rol
add
xchg
pop
adc
or
inc
cmp
sub
ret
jnp
ds
xor
mov
xor
outs
pop
or
jge
mov
pop
jns
ja
add
inc
adc
ror
push
add
dec
jo
mov
xchg
cld
test
je
and
dec
adc
jne
cmp
sub
movs
pop
push
loop
lock
in
pop
ja
pusha
out
movs
push
dec
pop
push
int3
pop
pop
cmp
loop
mov
and
pop
fs
xchg
or
call
fcom
add
mov
loopne
jo
jb
jle
and
adc
add
push
mov
inc
(bad)
ret
sub
mov
fs
pop
(bad)
shr
fstp
ins
inc
call
data16
jno
loop
pusha
cmp
or
sub
jl
pushf
addr16
xlat
adc
ror
push
movs
les
sbb
and
inc
cmp
or
xchg
mov
je
ja
dec
push
dec
push
in
stc
test
add
push
fcmovnbe
nop
dec
lock
test
lds
sti
mov
ret
add
mov
shl
add
sub
loope
jbe
lods
in
sbb
dec
fld
icebp
add
(bad)
fs
out
lea
push
daa
in
sbb
push
mov
pop
popf
outs
pop
in
je
sti
push
pop
sar
das
scas
std
nop
lea
add
jns
fimul
iret
and
fdivr
and
lea
je
and
sbb
cs
mov
adc
popf
cmp
in
lock
add
dec
mov
ret
pop
add
add
retf
sbb
pop
mov
xchg
xchg
inc
aaa
or
push
push
test
imul
pop
pop
xor
and
adc
and
adc
cs
adc
dec
sub
push
xor
sub
rol
pop
add
jle
in
push
(bad)
jecxz
outs
pop
mov
sub
stos
das
pop
push
push
or
sub
inc
dec
loopne
stos
outs
loope
mov
scas
fdivr
push
fisub
or
cmps
push
xchg
loopne
in
in
pop
add
xor
addr16
shl
mov
add
in
jge
mov
sbb
lahf
and
repz
daa
mov
fist
cmc
lock
out
sahf
bound
lock
push
loope
adc
cmp
jp
jmp
fdiv
rcl
movs
jbe
pop
pusha
shl
(bad)
xchg
or
fiadd
or
lock
jmp
pop
add
fwait
add
nop
xchg
leave
push
lock
fistp
aaa
(bad)
cmp
dec
(bad)
mov
movs
je
jnp
push
or
or
jno
mov
or
scas
push
add
fdiv
cli
inc
and
pop
adc
xor
les
jno
add
bound
dec
in
lods
ins
xchg
sti
or
inc
in
adc
cmp
push
push
cmp
pop
add
dec
jg
push
js
xchg
jne
sbb
lods
adc
push
dec
shr
loopne
mov
xchg
xor
adc
lds
aam
pusha
fcom
daa
jo
pop
xchg
mov
or
mov
ror
add
pusha
mov
sbb
adc
ds
ret
mov
adc
bound
push
rol
add
ror
xchg
sub
pop
test
dec
shl
lea
out
sbb
mov
enter
mov
fdivr
add
sub
jp
inc
add
mov
mov
shl
push
sbb
cdq
or
into
out
add
mov
fstp
sbb
aam
test
inc
cmps
ror
pop
dec
dec
popa
or
pop
lea
xchg
rol
pop
stc
xor
bnd
dec
scas
inc
push
pcmpgtb
bound
adc
repnz
mov
int3
cwde
mov
pusha
lods
jb
jno
sbb
ret
and
mov
and
test
jae
ret
(bad)
adc
adc
lods
or
xchg
mov
mov
push
sub
mov
and
mov
mov
rcl
xchg
add
movs
jo
movs
shl
cmp
outs
loope
jne
dec
cmp
lds
mov
sub
jmp
adc
inc
test
ins
mov
dec
mov
cmp
cmps
shr
loopne
shr
stos
add
inc
lds
movs
test
inc
adc
xor
jecxz
inc
test
iret
dec
movs
lock
sbb
adc
sbb
jmp
pushf
cli
cmc
sub
pop
or
pop
retf
test
cmps
jp
mov
sub
and
add
xchg
and
and
xor
test
mov
dec
mov
push
dec
pop
arpl
fld
stos
pop
pop
data16
int
in
cdq
in
mov
fs
push
or
dec
outs
call
arpl
in
jmp
repz
adc
dec
ds
test
or
mov
shl
jge
or
or
lock
test
retf
or
movs
or
cmps
or
movs
xchg
callw
and
cmp
push
or
mov
call
mov
add
icebp
add
ja
add
add
pop
push
sbb
adc
mov
dec
fnstcw
sbb
mov
cmc
jnp
in
call
cmp
test
inc
pop
fxch
xchg
mov
test
and
sar
clc
push
mov
sub
lock
aaa
cs
rcr
push
push
push
mov
ret
pop
xor
sbb
inc
pop
je
fnstenv
les
mov
loopne
ins
mov
ins
out
sub
add
rcr
mov
js
popa
rcl
rol
jbe
dec
sub
push
or
cmc
and
dec
movs
clc
adc
or
pop
lahf
or
cmp
ss
sbb
es
add
sbb
add
inc
fld
inc
inc
cwde
(bad)
sub
fcomp
push
lock
adc
xchg
loope
test
addr16
test
dec
and
repnz
cbw
inc
scas
sbb
(bad)
sub
(bad)
out
pop
and
popf
mov
add
lods
cmp
fsubr
xor
sti
pop
mov
cmp
jne
aas
movs
jmp
and
push
fild
lock
mov
rcl
imul
jecxz
lods
inc
pop
mov
inc
shr
push
sbb
add
mov
push
jle
pop
pop
jbe
sub
int
xor
xchg
sbb
jbe
ret
sbb
push
je
or
cld
inc
or
mov
test
jle
cmp
add
jl
sar
dec
jmp
mov
loope
push
push
push
call
push
pusha
sub
int
push
int3
or
pop
add
or
aad
int3
inc
jmp
das
(bad)
fnsave
int
inc
jge
ffreep
lahf
fnstenv
adc
and
fild
push
cli
pop
adc
inc
jmp
enter
xor
fst
dec
xchg
js
inc
pop
xchg
fdivr
jmp
fisttp
and
mov
es
cmps
sbb
pop
imul
pop
pop
push
sub
push
in
call
xchg
gs
or
movs
fucom
add
mov
addr16
stos
jne
ret
cmp
xor
addr16
dec
push
cmp
inc
loopne
ret
mov
inc
pop
mov
test
sub
daa
retf
cmp
daa
push
push
loopne
imul
mov
and
neg
add
imul
(bad)
jo
mov
es
pop
mov
in
adc
or
sbb
pop
pop
jmp
push
add
or
bound
or
jmp
mov
jmp
inc
hlt
shl
movs
jb
push
pushf
fwait
call
xor
jo
dec
enter
hlt
enter
jno
xor
inc
adc
add
cmps
pop
js
adc
cmp
xor
mov
add
jp
cli
or
pop
inc
add
cmp
sahf
inc
jbe
push
gs
les
pop
(bad)
fwait
mov
adc
add
(bad)
dec
retf
cmp
shr
cmp
pushf
pop
ss
inc
xor
mov
outs
sbb
mov
push
push
push
inc
or
sar
lods
sbb
push
and
or
(bad)
dec
out
pop
or
and
cmp
jbe
add
xor
sbb
int
int
lock
pop
stc
push
ret
jp
int
pushf
push
add
mov
push
data16
or
xor
xchg
repnz
lock
cmp
ret
inc
fwait
lods
scas
(bad)
aas
cmp
jl
pushf
jle
sub
or
bound
dec
idiv
add
xor
push
add
xchg
gs
jmp
mov
sub
ret
dec
push
adc
lods
add
pop
sub
inc
inc
stos
push
xchg
push
jbe
xor
retf
or
aas
push
cmp
xor
lods
dec
adc
daa
add
pop
ja
xlat
sbb
inc
ja
push
int3
xor
in
sbb
rcl
in
push
adc
rcl
xchg
adc
aam
add
adc
sbb
push
ins
xchg
in
cmc
cmps
and
fcomp
inc
pop
pushf
shl
xor
dec
je
rol
loope
dec
pop
pop
lahf
fmul
jge
mov
out
mov
add
shl
into
xchg
xor
add
retf
es
sbb
inc
ret
ror
mov
xchg
sub
jmp
inc
or
rcl
cmps
int3
dec
sahf
cld
cmc
adc
push
cmps
add
sub
or
in
loopne
adc
xchg
not
jo
mov
inc
add
lods
mov
jg
xchg
cmc
cs
and
or
add
popf
add
mov
sub
adc
push
add
jb
xchg
aam
imul
imul
dec
les
push
mov
fwait
inc
push
or
pop
dec
push
mov
sar
push
cmp
mov
sar
push
add
in
icebp
mov
cmp
mov
mov
sbb
jmp
in
fld
lds
or
fwait
pop
mov
add
mov
ror
xor
cld
jno
mov
test
or
jbe
mov
inc
ret
lea
pop
pop
test
rol
xchg
pop
and
jmp
sub
mov
xor
stos
mov
dec
rol
jg
xor
inc
mov
jmp
sub
dec
jne
aaa
les
jb
pop
adc
xchg
enter
imul
mov
adc
mov
(bad)
push
stc
cmp
aad
inc
leave
sub
aad
shr
adc
and
es
pop
sub
push
sbb
pusha
jno
bound
jmp
stos
push
das
add
es
inc
cmp
ror
leave
sub
mov
or
push
pop
add
adc
lock
js
mov
add
pop
and
or
mov
adc
push
mov
in
add
mov
add
scas
movs
jle
add
pop
sub
xor
mov
ja
fdivr
out
inc
cmp
icebp
xchg
or
(bad)
jl
push
sub
inc
sbb
and
pop
test
sbb
dec
adc
push
ret
hlt
cmp
add
pop
jo
es
and
imul
or
ret
add
push
xchg
cdq
pop
pop
xchg
push
stc
jg
sbb
cmp
test
jb
or
add
nop
lock
lea
adc
out
or
and
clc
adc
in
lea
mov
cmc
or
nop
push
push
adc
imul
mov
push
pavgb
sbb
dec
call
jne
add
and
or
add
mov
cli
or
cmp
inc
idiv
mov
inc
jmp
retf
test
xchg
nop
push
mov
enter
cmp
inc
push
xchg
jge
adc
sub
push
xchg
ja
aam
stos
pop
arpl
sub
add
add
mov
pusha
add
das
add
sub
js
push
pop
cmp
inc
pop
(bad)
mov
or
pusha
cwde
or
add
iret
test
in
jne
cmc
adc
inc
sbb
nop
cmp
je
jg
mov
sub
or
stos
rol
or
and
adc
clc
xor
mov
mov
inc
pop
fwait
icebp
add
add
and
jo
not
xor
sub
fld
imul
adc
push
inc
mov
loopne
sbb
mov
sbb
xor
pop
outs
call
and
loopne
pop
rcl
or
fs
sahf
fwait
dec
aam
push
shl
dec
pusha
pusha
cmc
mov
jmp
fmul
sub
lods
enter
push
push
movs
adc
add
bound
mov
mov
jne
nop
clc
mov
or
mov
xor
repz
ins
sub
or
cwde
sbb
push
shl
(bad)
jo
js
push
xchg
xchg
cmc
add
jl
adc
in
js
sar
mov
jo
lds
test
pop
or
adc
sub
jmp
adc
and
sbb
js
pop
inc
mov
fiadd
jp
pop
test
sub
clc
pop
cs
ror
sbb
push
call
mov
pmulhuw
push
pop
push
dec
pop
and
lds
ret
sub
dec
dec
push
pop
inc
xor
sub
dec
imul
cs
jnp
lods
sbb
loope
pop
sar
fcom
mov
jle
mov
sub
ins
cwde
dec
data16
ret
sub
clc
dec
ret
cmp
jno
cmp
jmp
stos
retf
mov
and
out
jmp
pop
pop
shl
dec
ret
cmp
fisubr
pop
xor
fs
iret
pusha
lods
and
idiv
int3
inc
es
and
js
sub
int
jecxz
js
and
outs
jne
fidivr
mov
and
outs
fld
nop
movs
in
dec
push
xchg
dec
dec
rcr
aaa
cmp
jp
xor
jbe
inc
add
fisttp
inc
add
jl
adc
adc
xchg
xchg
or
mov
mov
dec
sar
mov
mov
dec
fsubr
push
or
sub
dec
aam
or
aaa
int3
repnz
cmp
imul
and
mov
shr
aad
push
mov
and
adc
retf
cld
test
sub
fst
sub
enter
sbb
xor
movs
movs
xor
das
adc
mov
adc
inc
stos
dec
retf
push
jns
pop
or
inc
pushf
inc
fst
enter
xor
int3
lock
(bad)
jns
cmp
aaa
jo
test
popf
aas
mov
xchg
shl
ss
xor
mov
ds
sub
sub
sbb
leave
popa
in
or
mov
sub
mov
dec
ja
push
or
jbe
cmp
je
or
push
and
sbb
cmp
jbe
push
add
les
mov
out
test
test
iret
xchg
adc
ds
pop
sub
je
mov
rcl
mov
inc
push
sub
xor
and
add
or
push
mov
and
xchg
or
pop
shl
test
sbb
mov
dec
das
adc
push
nop
fistp
xchg
aad
mov
adc
adc
push
aam
and
je
push
inc
or
or
xor
sub
or
in
add
push
bound
push
inc
push
js
in
adc
sub
jne
rol
(bad)
xchg
pop
(bad)
not
push
and
shr
cmp
push
inc
cli
test
dec
inc
int
out
xlat
inc
fidivr
retf
mov
int3
jmp
cmp
movs
mov
test
cmp
sar
jae
int3
jge
aam
js
cmp
jne
and
clc
mov
add
into
stos
mov
adc
repnz
sbb
in
adc
or
or
push
push
and
clc
adc
push
adc
pop
add
icebp
shr
or
push
fidiv
je
add
mov
sar
adc
in
and
inc
lods
inc
out
xor
push
add
inc
test
inc
xchg
cmp
cmp
sub
cmp
push
movs
test
dec
pop
push
(bad)
in
xor
mov
sub
test
and
add
or
or
add
or
dec
out
ret
add
or
xor
repnz
push
sbb
sub
int3
push
(bad)
jae
rol
fwait
adc
lahf
outs
jne
cmp
add
lock
pop
cmps
and
push
lock
mov
jl
ret
xchg
hlt
fsubr
jl
test
cmp
sbb
cwde
push
and
push
outs
js
and
xchg
push
or
int3
lea
pop
test
add
in
or
lahf
loopne
ins
loope
dec
and
sbb
rcl
or
rcl
mov
add
aam
int
cmp
sub
or
mov
cmp
mov
push
pop
pushf
and
dec
cmp
test
inc
sub
cmp
dec
clc
mov
cmps
push
jp
add
mov
cmp
mov
jl
and
stos
out
and
fstp
and
call
sub
xor
pop
adc
and
lahf
ds
dec
pop
adc
adc
js
das
arpl
sbb
xchg
enter
test
hlt
adc
lea
test
(bad)
mov
adc
je
mov
stos
int
sbb
test
js
jl
sub
fiadd
leave
inc
mov
mov
sahf
lea
pop
push
rol
ins
les
hlt
outs
sub
inc
loope
movs
jb
(bad)
fs
push
add
addr16
ds
pop
nop
push
mov
stos
lods
pop
and
cmp
sti
xchg
adc
xchg
fisttp
dec
push
shl
pop
adc
fld
and
nop
test
pop
push
sgdtd
daa
inc
or
cmp
mov
out
test
jp
imul
out
add
(bad)
ret
pop
rcr
data16
push
inc
dec
add
bound
xor
pop
addr16
adc
sub
pop
dec
pusha
mov
sub
xchg
stos
sbb
retf
push
pusha
add
pop
call
adc
push
test
add
cwde
jo
ret
and
sub
mov
or
add
movs
pop
inc
out
inc
jns
std
imul
dec
xchg
push
outs
sub
or
inc
cmp
jl
sbb
mov
or
fbstp
or
sbb
dec
push
or
mov
call
sbb
icebp
outs
and
lods
pop
or
mov
test
mov
out
(bad)
mov
repz
addr16
js
es
nop
(bad)
push
outs
adc
cmp
stos
adc
call
add
push
pop
or
mov
div
movs
mov
or
aaa
inc
test
scas
xchg
xor
sbb
and
add
inc
adc
fidiv
sub
mov
or
sub
inc
sub
test
add
int3
dec
add
push
jo
mov
in
push
mov
adc
adc
ins
rcl
sahf
cmp
call
jbe
fwait
test
popa
adc
add
xor
pop
jne
pop
movs
ficom
cmp
(bad)
or
jb
in
mov
ficomp
or
sbb
adc
adc
addr16
test
and
jmp
in
pop
adc
xor
push
and
xor
out
shl
and
mov
pushw
sbb
push
sbb
xor
sub
retf
(bad)
pop
jnp
sbb
or
dec
cmp
mov
xchg
inc
xor
cmp
add
or
or
loopne
xor
jns
mov
jno
test
imul
sub
mov
inc
push
xor
(bad)
jb
addr16
or
cwde
cs
cmp
xchg
push
dec
pop
push
scas
add
push
ja
cmp
mov
adc
add
mov
aad
pop
mov
and
add
jmp
outs
sti
mov
dec
jg
je
sbb
push
adc
mov
ja
inc
lea
mov
mov
dec
je
add
cmovnp
mov
sahf
or
push
push
imul
fwait
xchg
ins
fild
mov
es
dec
and
adc
jae
mov
movs
xchg
xor
or
add
adc
lods
xor
imul
cmp
daa
adc
and
test
mov
adc
adc
ret
inc
leave
cwde
mov
or
xchg
and
sub
or
sar
cmc
fs
dec
push
and
test
mov
and
lods
into
xchg
fmul
add
push
and
adc
cmp
push
or
push
dec
cli
sbb
imul
cmp
lea
imul
pop
add
xchg
inc
aas
pop
movs
adc
sbb
mov
lds
test
cld
fdiv
push
stc
scas
adc
jge
cld
retf
adc
cli
call
inc
jo
push
test
pop
push
sbb
daa
xor
and
(bad)
inc
nop
push
pop
mov
xor
shr
mov
pop
sbb
out
pop
je
mov
lock
aaa
push
and
stos
aaa
sbb
rol
push
retf
daa
mov
or
movs
adc
int3
xor
imul
enter
inc
jb
mov
jmp
jp
xchg
mov
daa
hlt
or
mov
push
adc
hlt
add
and
pop
sub
loope
mov
xor
fst
int3
sbb
and
add
push
xlat
adc
mov
pop
iret
enter
mov
mov
shl
repz
dec
add
adc
and
xchg
popa
mov
cmps
push
push
mov
push
xchg
rol
addr16
popa
jmp
mov
or
or
aad
nop
xchg
in
or
js
in
push
mov
shl
pop
push
cmps
or
into
xor
call
push
dec
loopne
clc
and
dec
xchg
pop
inc
jge
les
cmp
sahf
push
fidiv
lock
call
js
sub
(bad)
xchg
pop
push
xor
fmul
sub
mov
rol
inc
and
nop
mov
lea
pushf
xchg
mov
mov
or
jns
push
jo
and
push
or
ja
in
clc
or
xor
dec
xchg
lods
and
add
imul
jl
or
les
clc
popa
mov
push
cmps
nop
sbb
rcl
xor
inc
add
inc
lds
jp
and
scas
cmp
jbe
rcr
sbb
xchg
mov
push
add
lds
xor
rol
jl
jmp
jg
js
mov
pop
xchg
bound
add
and
inc
adc
jle
int
fsub
jbe
xor
push
pop
jb
lods
dec
scas
rcr
cmp
or
sbb
jp
inc
(bad)
fisttp
pusha
and
sbb
not
je
cli
movs
in
add
push
sbb
fidivr
dec
cmp
jo
jmp
loopne
push
cmp
adc
je
cmp
push
ret
rcl
fistp
lock
mov
nop
ud2
push
pop
and
and
sbb
cmps
dec
sbb
sbb
aam
(bad)
outs
push
jmp
push
mov
adc
pop
pop
adc
xlat
dec
mov
repnz
or
jne
push
popa
fidiv
sbb
and
js
jecxz
add
bswap
dec
jecxz
or
dec
(bad)
enter
mov
sbb
or
and
cmps
add
les
lea
(bad)
xor
mov
or
or
push
(bad)
sbb
inc
dec
retf
test
adc
or
inc
or
push
add
retf
adc
popa
or
ret
outs
fs
or
jmp
add
push
lea
mov
js
jmp
imul
mov
fdivr
pop
and
and
sbb
mov
jle
adc
movs
adc
rol
sahf
xchg
push
push
or
and
dec
inc
jl
lea
jmp
and
jb
loopne
and
push
or
(bad)
or
popa
xchg
js
outs
push
ins
ret
(bad)
addr16
ja
icebp
dec
shl
test
jl
adc
sbb
xchg
sbb
dec
xor
add
enter
cmp
dec
mov
xlat
iret
and
not
and
or
(bad)
and
dec
sbb
xchg
aad
jg
clc
je
push
mov
not
and
push
sbb
js
xchg
inc
push
push
jb
push
dec
mov
and
pusha
add
pop
movs
sbb
mov
call
mov
rcl
pop
(bad)
(bad)
xor
or
jl
xchg
push
and
sbb
push
and
mov
(bad)
mov
dec
mov
in
popa
and
push
leave
xor
sub
loop
sub
fmul
add
gs
or
aaa
and
push
pop
pop
cmps
push
mov
push
xor
mov
xor
add
sub
sub
cmp
icebp
xchg
mov
bound
mov
mov
pushf
jg
push
fs
imul
pop
shl
inc
add
ficomp
shl
sbb
rcl
sub
mov
sbb
dec
call
and
js
or
xor
imul
dec
ret
fld
push
int
jo
mov
cmp
ret
adc
jmp
lahf
adc
and
into
sti
shr
ret
rol
outs
xor
mov
test
pusha
fidivr
leave
icebp
cmp
mov
int
cmp
fcomp
leave
xor
add
adc
bound
imul
push
inc
sub
fnstcw
imul
xor
mov
daa
sub
and
or
movs
addr16
or
xor
iret
mov
push
imul
mov
dec
pop
mov
dec
adc
or
(bad)
js
xor
pushf
cli
inc
or
or
int
fbstp
add
push
and
pop
fstp
enter
jmp
pop
retf
call
lahf
mov
pop
sub
mov
fld
push
fld
clc
and
arpl
adc
mov
or
or
mov
dec
imul
nop
mov
add
dec
lock
xlat
aas
inc
xor
sub
stc
rol
call
add
sub
call
xlat
and
ret
test
les
test
sbb
rol
xor
dec
or
retf
stc
idiv
or
cmp
pop
add
mov
cli
shl
inc
dec
dec
dec
adc
dec
push
push
pop
pop
iret
jo
sbb
mov
xchg
or
adc
push
jge
leave
les
mov
or
and
das
mov
stos
sbb
xor
adc
jo
mov
pop
or
mov
out
cmc
jmp
adc
sub
mov
dec
push
add
jmp
fmul
mov
adc
jmp
pop
and
add
movs
les
shl
pop
cmp
sbb
in
add
fcom
pop
stos
pop
jmp
ret
and
xchg
pop
bound
mov
mov
sbb
push
hlt
and
pop
and
cmp
(bad)
sahf
(bad)
loop
or
dec
lods
movs
shr
or
sub
mov
loop
lock
sbb
lea
add
int3
push
or
push
dec
or
ret
mov
and
and
xor
mov
sar
inc
les
test
or
mov
pop
mov
shl
jmp
cli
lea
cmps
fidiv
ret
imul
fistp
pop
jb
enter
cmp
adc
out
or
mov
dec
mov
add
mov
add
xchg
xchg
inc
(bad)
dec
xor
jecxz
mov
jo
jb
or
cmp
cmps
xor
jle
add
test
lods
mov
sub
and
loopne
test
jne
jne
or
push
add
push
pusha
(bad)
pop
sub
xor
and
adc
movs
adc
shr
and
push
sub
push
add
sub
xchg
stos
add
or
mov
jae
movs
into
rcl
ret
sub
call
aaa
jge
cmp
xor
pusha
sbb
fimul
mov
push
fcmovnb
outs
adc
dec
pusha
sar
ja
inc
or
inc
inc
pop
add
fwait
in
push
add
scas
mov
add
lea
sar
(bad)
leave
push
push
xor
mov
fldenv
lods
rcr
mov
mov
ds
and
ss
cmp
sbb
jnp
adc
mov
inc
cmp
or
push
movs
fmul
xlat
pop
sub
and
dec
push
and
test
shr
jmp
jmp
xor
jbe
mov
dec
mov
xor
adc
xchg
call
cdq
mov
dec
mov
lods
mov
and
inc
inc
popf
xor
sub
sbb
and
fist
xor
fsub
inc
jbe
sahf
test
int3
(bad)
call
inc
(bad)
lock
jmp
sub
icebp
test
and
mov
cmps
in
mov
inc
or
repnz
ins
aaa
cmp
push
mov
inc
adc
xlat
or
movs
test
add
aas
fyl2xp1
jmp
out
adc
rcr
ret
into
push
add
jnp
or
dec
inc
cs
pop
xor
and
pop
or
or
cmps
pop
cmp
and
enter
pop
xor
and
(bad)
jl
and
jne
jnp
lea
mov
pop
movs
sub
mov
or
add
add
push
jg
pop
pop
adc
inc
push
ins
das
pop
sbb
push
mov
jb
and
ins
dec
push
xchg
test
sub
add
inc
inc
imul
popf
sub
sub
imul
call
cmp
sbb
lahf
in
push
push
add
je
call
mov
mov
mov
or
push
cmp
inc
sub
jmp
mov
sub
jmp
aas
jp
xchg
jl
fsub
std
xor
add
dec
or
inc
jo
sar
ins
in
adc
cmp
xor
pop
jo
jmp
mov
adc
(bad)
je
mov
or
push
in
or
fs
xor
fistp
pop
outs
outs
mov
mov
bound
mov
mov
mov
test
xor
jecxz
test
inc
jl
pop
test
and
push
push
cs
adc
mov
les
push
and
push
imul
cdq
inc
loopne
data16
sbb
retf
shr
xchg
add
sbb
sub
adc
push
and
ror
sub
adc
xor
lea
mov
daa
popa
mov
js
jmp
or
call
pop
stc
and
ret
je
xchg
out
pop
test
fmul
add
add
sub
mov
test
inc
shl
xchg
adc
mov
mov
jbe
iret
add
inc
test
xor
je
xchg
or
push
sti
cmp
jmp
pop
push
call
inc
(bad)
cwde
inc
xor
pop
jb
xor
movsx
inc
mov
xor
mov
imul
popf
push
inc
or
add
or
pusha
and
push
sub
xor
call
data16
mov
nop
jp
cmp
push
xchg
ret
push
jle
lock
pop
dec
pop
repnz
cmp
xor
int
sahf
dec
or
call
or
xor
imul
pop
mov
inc
lods
add
add
add
outs
dec
add
(bad)
iret
arpl
je
xor
jge
adc
sbb
fwait
adc
retf
ret
push
cs
dec
call
add
mov
clc
adc
xor
and
lods
dec
daa
cwde
pushf
mov
adc
push
jmp
cdq
jge
jne
mov
add
push
pop
and
cmp
sub
mov
ins
cli
stos
fstp
or
ret
pop
in
adc
add
aam
xchg
pop
ja
jo
mov
in
out
mov
cmc
dec
ficomp
push
pushf
or
pusha
(bad)
push
push
pop
stc
add
pushf
idiv
adc
jmp
or
push
lds
or
or
(bad)
fldenv
xor
xor
shl
push
or
xor
add
and
adc
aam
jge
xchg
jecxz
mov
or
ret
mov
sub
outs
in
js
test
jl
push
adc
enter
in
dec
call
sbb
in
jmp
mov
hlt
jae
sbb
shl
jl
clc
repnz
push
outs
fdiv
inc
xor
add
push
push
dec
jge
pop
jle
jno
adc
jae
cmps
pop
cli
xor
cwde
je
lods
xlat
and
rcl
dec
rol
inc
or
or
pop
in
neg
push
push
push
sub
push
loope
sub
pusha
mov
cmp
(bad)
push
sbb
adc
js
cmc
sbb
ret
xor
leave
nop
aam
xchg
mov
mov
and
rcl
jo
lods
ja
xchg
push
inc
or
inc
add
inc
or
add
leave
popf
adc
dec
ret
adc
xlat
and
dec
sahf
clc
sti
test
cmp
mov
adc
retf
inc
bound
int3
cmp
sub
jmp
daa
popa
inc
jl
sbb
push
ret
or
dec
cmps
call
sub
jae
ds
clc
pop
jo
mov
sbb
loopne
adc
pop
inc
call
inc
loop
add
push
mov
in
jmp
and
(bad)
or
je
stos
or
adc
inc
gs
add
rcr
ins
lock
cld
not
xor
jo
inc
ins
or
fnstenv
nop
xor
mov
xchg
lods
add
xor
cmp
iret
inc
add
shr
rcr
sub
xor
add
scas
dec
or
fidiv
pop
sbb
imul
pop
clc
sub
push
mov
popa
imul
scas
jmp
(bad)
stc
jl
call
cld
in
or
ret
sub
sbb
cmp
adc
or
sahf
mov
(bad)
jmp
jmp
push
in
inc
or
mov
sbb
out
mov
add
xchg
xor
add
shl
stc
jne
ror
data16
outs
(bad)
xchg
cmp
loope
mov
mov
mov
add
mov
mov
xchg
inc
add
ror
sahf
fsub
add
mov
mov
jle
xchg
jp
pop
xchg
jo
add
or
xchg
test
push
xchg
add
pop
jmp
or
aam
inc
xor
test
clc
push
test
xchg
nop
xor
adc
sbb
into
cli
sbb
push
push
sbb
and
mov
cmp
call
test
and
add
and
mov
ret
sbb
add
mov
sub
mov
push
push
loope
jmp
push
movs
sub
rol
xor
cs
add
ret
neg
push
dec
adc
nop
dec
(bad)
push
cli
loopne
inc
test
jne
inc
je
add
leave
sar
pop
jno
mov
add
invd
lods
jno
add
sbb
sbb
add
je
retf
xor
dec
pop
and
mov
xor
lods
adc
in
(bad)
push
shl
in
lea
or
push
pop
arpl
sub
and
mov
cs
ret
mov
xchg
imul
or
jbe
stos
adc
loopne
xchg
aaa
in
xor
inc
or
or
pop
and
daa
push
dec
fisttp
add
test
pop
add
pop
mov
mov
push
adc
pop
or
sahf
pop
jmp
pop
int
or
imul
mov
adc
and
dec
or
adc
repz
xor
std
jg
lea
(bad)
pop
mov
mov
imul
inc
mov
(bad)
loopne
je
sbb
jp
push
mov
xor
test
(bad)
adc
xor
add
mov
scas
cmps
imul
and
add
call
inc
outs
pop
mov
sub
js
or
xchg
sbb
out
arpl
or
xchg
push
sub
mov
push
in
sbb
mov
add
push
in
arpl
pushf
test
inc
push
sbb
lods
inc
int
lods
push
pusha
cmps
and
imul
loop
rcr
push
or
(bad)
push
cmp
fnsave
shl
clc
adc
cmp
jno
nop
xchg
lahf
fdivr
cli
dec
jmp
(bad)
fsubr
xchg
jno
in
cs
or
fld
fs
movs
sbb
xchg
sbb
mov
sbb
sar
int3
int
ret
aam
or
ror
cmp
and
inc
sbb
adc
cmps
mov
mov
aam
bound
mov
cmp
pop
rcl
shl
push
push
les
push
add
or
push
add
mov
add
mov
cs
and
push
pop
cmp
je
or
ret
imul
ds
xor
and
xor
sahf
neg
clc
sar
lock
jbe
mov
adc
mov
dec
push
add
xchg
lea
inc
or
dec
sub
sub
loope
popa
or
push
pop
push
int3
and
or
add
pop
dec
lea
clc
push
sub
pop
cmp
mov
pusha
fadd
in
pop
jle
test
hlt
mov
iret
repz
mov
ins
xor
push
je
pop
pop
xchg
in
dec
adc
add
pop
pop
add
je
or
add
pop
add
add
test
and
cmp
add
jbe
push
xchg
test
mov
push
test
loopne
rol
jb
xchg
out
push
and
push
int3
mov
mov
mov
or
mov
dec
(bad)
sub
pop
push
push
adc
xor
xchg
mov
push
add
mov
jne
pop
iret
sar
mov
and
call
pop
or
dec
call
adc
aam
movs
movs
mov
pop
and
add
pop
pop
sub
mov
xor
jnp
or
fsubr
call
xor
push
adc
sub
shl
adc
push
add
dec
sbb
mov
outs
fld
fstp
leave
add
jo
out
es
sbb
inc
bound
add
mov
sbb
sbb
icebp
fnstenv
jb
adc
lea
cmp
add
add
iret
cmp
push
xchg
jl
adc
inc
add
ret
shr
add
arpl
stos
in
inc
call
fcmovb
repz
les
outs
out
jne
xor
into
retf
(bad)
xor
dec
into
and
dec
movs
mov
xor
movs
sbb
jmp
out
xor
cmp
inc
movs
push
pop
mov
nop
sbb
push
xchg
ret
pop
addr16
pop
stos
sub
sbb
loop
add
out
pop
fs
leave
aas
loopne
mov
shr
rcl
adc
jl
adc
sub
jno
nop
and
add
(bad)
repnz
int3
or
mov
and
pop
lods
popa
arpl
fsubr
mov
cmp
scas
add
gs
dec
push
cmp
test
ret
outs
push
or
test
mov
push
jg
inc
int3
ficomp
push
push
popa
sbb
repnz
mov
rcr
out
enter
add
stos
cmp
add
inc
sub
adc
mov
push
xchg
xchg
cmp
shl
add
icebp
inc
or
ins
push
pop
pop
scas
and
call
ss
(bad)
add
std
les
pop
pop
lods
or
or
adc
int
or
sub
lods
call
shl
jmp
mov
push
mov
or
or
push
xchg
or
jg
in
xchg
cmp
in
xor
lea
and
fild
je
nop
dec
adc
pop
add
in
or
add
push
jg
and
lods
in
xchg
add
test
sub
in
or
loop
je
stos
sub
adc
sbb
es
cwde
pop
push
adc
pop
mov
pusha
add
add
shr
out
add
dec
mov
jp
cwde
shr
inc
jmp
add
movs
xor
or
pop
pop
and
sub
cmp
ss
fidiv
test
test
add
and
pop
add
xor
divps
and
ss
mov
push
das
add
add
dec
add
les
push
sub
retf
test
aas
aam
xchg
jbe
movs
fdiv
push
and
cmp
mov
xchg
adc
adc
push
pop
call
adc
and
ret
cs
jne
inc
sub
adc
lods
arpl
adc
hlt
add
je
mov
neg
call
or
adc
inc
retf
jae
xchg
cmp
hlt
pop
dec
retf
test
data16
mov
iret
xor
mov
and
or
add
aaa
mov
mov
push
xor
or
mov
dec
ret
addr16
je
xchg
cld
aam
call
ror
jecxz
and
addr16
loopne
call
rol
gs
push
(bad)
or
in
add
mov
je
adc
loope
sbb
adc
es
pop
and
inc
sbb
shld
adc
mov
jmp
js
or
sbb
pop
sub
add
add
pop
int3
jge
push
push
outs
sahf
movs
dec
sahf
or
lea
xchg
xor
mov
mov
pop
sub
xor
jmp
int
sub
daa
mov
mov
sub
jecxz
rol
mov
push
jbe
leave
cmp
and
dec
js
icebp
aas
push
inc
xlat
xor
sbb
xchg
and
cmp
mov
push
cmp
inc
cmp
lea
xchg
add
jnp
bound
pop
pop
pop
add
fldcw
ret
jp
call
inc
xor
pop
push
or
xchg
or
dec
xchg
and
imul
pushf
push
cli
mov
adc
popa
rcl
pop
fcom
sbb
xor
arpl
fdiv
xchg
push
fdivp
mov
sub
push
sub
fwait
rol
je
or
jle
inc
fisub
add
cmp
rol
mov
mov
mov
push
cmp
jb
outs
es
sub
cmp
jle
mov
pusha
and
add
inc
mov
cmp
pop
dec
loopne
jl
push
(bad)
jle
call
xor
jmp
mov
test
clc
xchg
call
pushf
js
scas
and
xor
fucomip
push
xor
add
inc
js
or
into
push
ins
cmp
cmp
pop
dec
nop
or
fisubr
nop/reserved
and
dec
pop
and
sbb
inc
and
fist
(bad)
sub
and
or
jne
in
inc
hlt
push
cmp
dec
mov
push
je
retf
add
fnstcw
push
add
adc
je
inc
mov
pop
and
add
pop
pop
movzx
sbb
les
call
fmul
and
call
jmp
sbb
sub
jo
inc
inc
call
inc
inc
mov
add
hlt
lea
or
retf
pop
call
cmp
cmp
dec
mov
sahf
xchg
adc
test
mov
les
cmp
sbb
arpl
mov
jo
add
push
fcom
add
adc
add
retf
add
pusha
ins
(bad)
stos
out
jl
lods
dec
je
cmp
add
or
ja
adc
stos
shl
(bad)
cmp
or
shl
mov
xor
add
in
mov
adc
mov
adc
inc
sbb
jb
test
push
adc
adc
dec
daa
push
fcomp
movs
push
push
daa
lods
push
pusha
cmps
and
ds
ror
(bad)
out
lea
movs
or
inc
push
adc
and
xor
cmp
lahf
push
pushf
icebp
les
inc
mov
add
cmc
shl
outs
rol
jae
(bad)
add
test
test
mov
rol
xchg
ror
es
pop
inc
xor
or
xchg
push
dec
add
outs
mov
dec
mov
sbb
lock
idiv
mov
or
add
add
xchg
inc
inc
mov
inc
mov
movs
pop
fsub
cmp
jae
mov
mov
jno
jo
retf
mov
fwait
sahf
leave
ret
mov
mov
inc
(bad)
sbb
and
cmp
adc
js
popa
ret
cs
mov
aam
fwait
add
and
stos
xlat
pop
add
gs
push
ds
js
ret
adc
mov
add
mov
push
das
add
or
and
rol
or
sahf
dec
xor
adc
xor
push
(bad)
mov
pop
and
fld
pop
ror
js
inc
jo
mov
sbb
cmp
mov
scas
add
fcmovu
pop
xchg
fwait
or
into
aam
mov
add
jo
cs
cmp
cmp
push
push
(bad)
rol
add
push
and
sub
jb
dec
xor
xor
push
and
(bad)
xor
push
jne
push
call
movs
sbb
mov
sahf
retf
(bad)
adc
or
mov
ja
pop
mov
adc
push
jmp
push
mov
movs
icebp
push
jmp
(bad)
dec
cs
push
fadd
mov
inc
fcom
enter
pop
cmp
or
test
dec
popa
sbb
jne
adc
push
test
(bad)
mov
and
jne
jp
js
sbb
retf
pop
xor
inc
xchg
leave
ret
mov
push
or
mov
ss
rol
xor
push
or
or
sbb
and
pushf
inc
adc
or
sbb
sbb
lea
add
sub
mov
push
ret
cmp
add
mov
adc
sbb
inc
or
sbb
or
pop
shl
mov
xchg
xor
enter
imul
jns
jle
cmp
std
xor
in
retf
push
add
pop
pop
mov
and
xor
add
inc
dec
sub
aaa
mov
cs
adc
pop
sub
out
leave
wrmsr
push
and
mov
add
ror
js
xchg
cmp
or
pop
or
adc
std
aad
loope
fadd
push
jnp
les
movs
add
int3
dec
jbe
fdivr
lock
mov
ins
movs
add
or
push
adc
inc
or
mov
inc
les
adc
dec
pop
push
out
retf
jp
add
mov
in
push
mov
cwde
xchg
push
jl
test
adc
pop
dec
xlat
cmc
fadd
imul
and
jmp
dec
stc
push
sbb
in
xor
lea
push
loopne
ret
gs
jae
sbb
and
sar
mov
bound
xchg
out
dec
add
mov
lods
pop
(bad)
push
pop
and
cmps
test
adc
or
mov
and
inc
jae
adc
xor
ror
test
sar
adc
ja
idiv
cmp
or
ins
stos
imul
pop
push
inc
scas
ins
cmp
dec
adc
lea
pop
cmp
loop
cld
adc
sub
xchg
sahf
call
mov
inc
popa
xor
adc
pushf
lock
add
add
adc
ins
dec
adc
outs
test
mov
inc
inc
(bad)
daa
mov
cmc
outs
rcl
mov
je
dec
lods
add
adc
test
nop
sbb
mov
adc
and
or
sub
push
sub
mov
adc
aas
loopne
inc
pop
jnp
mov
out
xchg
or
(bad)
push
(bad)
outs
in
fwait
mov
fs
or
call
inc
push
sbb
addr16
movs
pop
mov
ret
aad
cli
inc
sbb
xor
xlat
mov
rcr
sbb
xchg
cmp
(bad)
sbb
pop
mov
sbb
jmp
inc
or
xor
mov
pop
imul
cmp
add
sub
inc
add
mov
js
add
push
hlt
les
in
or
test
mov
adc
xor
pop
ror
sub
dec
sub
inc
call
mov
or
icebp
(bad)
ret
adc
jp
xchg
loope
cmp
idiv
lock
adc
inc
rol
push
jle
ror
das
mov
add
imul
sbb
add
pushf
mov
xchg
into
adc
test
ins
add
cmp
pop
in
jge
or
and
push
or
shl
cs
ds
repz
lea
mov
cwde
aaa
add
add
dec
sbb
add
pushf
mov
mov
adc
add
push
lock
or
jns
or
and
push
inc
adc
or
ins
xchg
into
inc
aas
dec
hlt
push
sbb
cmp
rol
or
dec
pusha
call
bound
outs
outs
inc
xchg
add
leave
fwait
bsf
add
xor
pop
push
adc
or
or
out
add
mul
bswap
sub
mov
dec
dec
mul
inc
nop
add
cmp
add
rol
dec
and
adc
sbb
inc
ins
imul
movs
adc
add
outs
xor
add
xchg
push
push
or
lahf
sbb
adc
in
fwait
dec
adc
sbb
adc
dec
xor
dec
repz
xchg
inc
jnp
mov
or
stos
mov
fidiv
je
adc
call
es
mov
sti
test
scas
imul
out
ficomp
fidiv
pusha
dec
push
and
sub
jmp
jnp
(bad)
add
mov
rcl
cwde
rcr
jl
jge
mov
jg
and
fsubr
add
add
mov
dec
stos
stos
bound
sub
add
stos
cmp
jle
push
add
cdq
or
out
pop
jmp
or
out
pop
and
pop
fimul
popf
retf
or
add
loopne
add
add
bound
push
scas
jle
je
mov
ret
cmp
cdq
int
inc
cdq
jge
ret
das
pop
push
int3
push
sbb
dec
loopne
cmps
clc
popf
retf
xor
jne
push
sub
push
sbb
adc
aad
push
sbb
std
retf
add
add
fisubr
cwde
rol
push
repnz
pop
inc
stos
push
dec
test
or
aam
fcmovnb
or
xor
nop
or
inc
mov
(bad)
sbb
loope
cli
mov
lea
jno
jmp
sbb
adc
add
fcmovnbe
fabs
loope
in
mov
aad
dec
icebp
mov
(bad)
je
dec
mov
sbb
mov
sub
jb
sbb
ja
loope
scas
lods
or
push
je
cmp
nop
inc
xchg
bound
cmp
add
sbb
pop
push
push
(bad)
xchg
jecxz
mov
xor
add
daa
loop
mov
js
or
push
xchg
cs
mov
int
add
jno
xchg
jbe
jmp
adc
jne
mov
je
or
mov
mov
and
mov
cmp
xor
push
(bad)
xor
xor
add
adc
inc
js
pop
pop
or
jbe
or
pop
lods
test
adc
ret
jl
xlat
movs
jl
test
inc
adc
push
push
mov
adc
cmp
add
(bad)
jle
dec
inc
xchg
ret
lea
xor
pop
pop
daa
mov
inc
(bad)
pop
cs
sbb
dec
add
jno
fisub
sub
xchg
dec
idiv
add
cwde
jns
test
and
xchg
push
mov
stos
out
in
cmp
icebp
mov
inc
enter
pop
mov
adc
call
mov
sub
mov
or
or
sbb
inc
add
fsub
shl
and
push
and
push
cmp
ins
fst
dec
push
inc
pop
mov
daa
dec
or
mov
lar
fmul
lock
pop
cmp
xchg
mov
mov
es
test
hlt
sub
cmp
(bad)
sub
jmp
mov
jl
rcr
xor
inc
adc
pop
and
xor
fucom
je
cmp
cmp
fadd
inc
mov
jl
cld
test
push
mov
dec
add
adc
inc
sub
stos
inc
sar
cmp
pop
inc
or
xor
inc
repnz
and
xor
movs
cld
adc
pusha
pop
add
cmps
fs
retf
leave
shl
mov
mov
pop
movs
add
push
add
adc
lahf
enter
xchg
not
adc
lea
xor
aam
xor
mov
fmul
push
loopne
lea
sbb
and
enter
and
jge
js
adc
jg
mov
and
jle
(bad)
push
push
jle
movs
nop
xor
mov
(bad)
mov
cmp
mov
sub
or
adc
sub
or
or
dec
sub
mul
inc
icebp
fs
aam
mov
or
scas
dec
mov
dec
mov
cmp
and
push
icebp
jne
cdq
or
sar
sub
add
add
mov
test
cmp
xchg
test
adc
mov
xor
and
adc
xlat
and
mov
xor
test
fiadd
jae
xchg
aaa
xor
mov
sbb
xor
int3
mov
mov
out
mov
inc
push
loop
dec
push
push
int3
ins
pop
fadd
fs
jb
aam
push
and
sbb
sbb
dec
call
das
add
fadd
and
push
jb
shr
pop
cmp
fimul
mov
pop
push
mov
(bad)
jmp
xor
mov
es
xchg
pop
pop
data16
daa
and
cmps
add
ficomp
fs
adc
mov
outs
cmp
ins
pusha
pop
and
xchg
mov
or
arpl
pop
sbb
adc
jg
loopne
sbb
sub
lock
mov
and
sub
mov
pop
push
jb
gs
inc
loope
out
jnp
fwait
and
sub
cmp
pop
adc
or
dec
test
jns
sbb
mov
mov
jl
or
sbb
xor
ret
ficomp
adc
add
and
push
cld
inc
xchg
jo
inc
sbb
popf
add
xor
sbb
out
adc
cmp
cmp
mov
mov
dec
rol
sbb
adc
mov
jle
cwde
inc
cmp
add
cli
xchg
jmp
outs
add
push
or
jge
sub
ins
pop
cmps
dec
sub
mov
movs
mov
mov
push
dec
in
inc
xor
sbb
or
repnz
mov
cmps
punpckhwd
push
jbe
(bad)
nop
sub
mov
aam
cmp
adc
mov
inc
mov
cmps
xor
jno
cmp
aad
je
rol
jp
add
adc
sub
push
psraw
es
push
ds
out
sbb
adc
idiv
test
(bad)
jb
ds
adc
mov
jne
imul
ror
js
cmps
jo
or
push
or
sbb
cmp
jge
js
in
or
fild
mov
push
call
or
inc
in
lods
ror
enter
push
mov
and
inc
pop
mov
jl
adc
pop
cli
repz
rol
lods
fstp
mov
mov
sub
jmp
sub
(bad)
jmp
xchg
daa
aam
push
aam
fs
iret
cmp
nop
test
fs
push
add
shl
jne
mov
mov
and
shr
pop
pop
inc
pop
leave
loopne
data16
not
adc
jmp
sbb
mov
stos
xchg
pop
jmp
mov
movs
adc
cmp
adc
add
sbb
mov
xchg
pop
das
lea
inc
pusha
dec
inc
and
mov
frstor
add
test
or
or
movzx
sub
int
cmp
sub
jo
mov
xchg
pop
mov
jns
fnsave
push
fiadd
xor
in
jl
je
jno
push
jb
fld
fstp
and
pop
retf
stos
jle
inc
dec
es
or
sbb
stc
dec
shr
pop
adc
(bad)
jle
mov
or
je
adc
xor
add
daa
pop
mov
cmp
and
pushf
mov
(bad)
cs
das
lea
mov
push
pop
mov
dec
sub
mov
sbb
leave
xchg
xchg
neg
jmp
push
stos
fadd
cwde
add
leave
add
xchg
ds
loopne
(bad)
sbb
lods
or
push
das
jmp
(bad)
enter
es
clc
daa
pop
or
jmp
lds
mov
call
in
jmp
stos
push
into
jbe
jo
loop
jp
test
fs
push
pop
test
ins
inc
sbb
cmps
into
push
dec
int3
push
retf
jge
sub
inc
and
or
sar
rcl
sub
mov
push
adc
add
push
fucomip
(bad)
push
(bad)
out
call
out
inc
fisubr
push
push
imul
inc
sahf
and
dec
jecxz
fsubr
daa
xchg
pop
adc
dec
dec
in
mov
repnz
pop
pushf
mov
jmp
xchg
mov
cld
call
xchg
ins
(bad)
cmp
jbe
dec
jmp
mov
jne
fchs
daa
daa
int
(bad)
pop
mov
test
inc
jno
lock
and
enter
push
mov
popa
sub
xchg
(bad)
fs
mov
adc
cmp
leave
cmp
pop
mov
pop
and
push
mov
xchg
mov
push
shl
fdiv
sub
es
push
adc
xchg
xor
popf
outs
loopne
sub
jo
sub
std
sub
fstp
pop
jmp
or
enter
and
icebp
jle
shl
cmp
mov
mov
inc
cs
cwde
push
call
inc
inc
ret
inc
mov
cmp
inc
fs
lock
cmp
test
mov
add
adc
and
cmp
add
sbb
nop
xchg
xchg
cmps
mov
adc
xchg
mov
and
fiadd
dec
stos
push
pop
jbe
je
or
mov
push
add
or
ror
test
push
mov
mov
inc
jnp
mov
lahf
push
leave
jg
push
adc
jbe
mov
loopne
movs
xor
or
pop
pop
cld
arpl
jbe
add
xor
xchg
push
xor
rcr
push
ds
adc
popa
push
lahf
and
and
sbb
aad
adc
xor
or
imul
pushf
aaa
and
das
lahf
jnp
adc
xchg
pop
dec
pop
je
add
or
jb
and
imul
loopne
add
and
imul
xchg
inc
mov
add
dec
jne
and
and
dec
fld1
cmc
test
add
sub
cmps
add
das
ins
fild
inc
add
fadd
sbb
or
adc
xchg
mov
pop
das
adc
popa
lea
gs
push
adc
and
cmp
dec
movs
push
aam
enter
add
test
jno
sbb
data16
(bad)
cmp
dec
ins
mov
or
jge
xchg
test
push
mov
and
ss
adc
push
test
add
in
and
pusha
cmp
(bad)
push
sbb
add
mov
and
es
xchg
xor
and
mov
inc
jmp
add
mov
mov
or
mov
aaa
jmp
clc
pop
pop
inc
fisttp
sbb
shl
popa
cmp
mov
retf
sub
push
lock
repz
fwait
outs
mov
adc
test
and
je
inc
xchg
add
sub
mov
ss
and
mov
inc
call
movs
lods
adc
or
push
jmp
xor
add
push
ret
ins
es
nop
sbb
call
lock
push
ss
xor
adc
inc
xchg
push
add
jae
cmp
(bad)
pop
or
adc
pop
jo
stc
jae
push
data16
dec
inc
scas
pop
cmp
push
add
cli
nop
inc
shl
lock
and
and
sbb
xchg
lods
out
in
sbb
jnp
xor
jmp
ret
fiadd
iret
jne
mov
push
inc
enter
xchg
cmp
dec
jnp
cmc
pop
mov
dec
adc
(bad)
loope
movs
movs
jg
cwde
dec
(bad)
jmp
(bad)
mov
cld
or
jmp
lea
arpl
push
inc
mov
cmp
hlt
call
push
icebp
jo
je
push
inc
jne
push
fld
dec
dec
fldpi
xor
int3
neg
sahf
mov
mul
mov
pop
pop
adc
js
jae
cmp
add
add
inc
sub
out
hlt
sub
pop
mov
mov
fwait
and
scas
aas
push
sbb
rcl
js
push
mov
sbb
jp
fucom
ret
fwait
xchg
pop
push
add
sub
js
add
mov
mov
pop
addr16
push
jne
inc
push
push
ins
test
test
mov
fsubr
dec
ja
pop
adc
sub
fist
inc
scas
xor
lahf
lds
je
stos
push
or
sahf
outs
cmps
push
add
mov
sbb
push
popf
mov
lods
rcl
mov
sub
and
push
and
mov
and
push
pusha
loop
jno
or
sub
xchg
cmp
or
mov
inc
idiv
jp
cmp
adc
mov
les
sub
fs
push
sub
sbb
mov
js
jge
mov
dec
mov
loopne
imul
cmps
xor
inc
je
and
ss
test
imul
push
imul
or
jl
ret
add
in
mov
pop
add
es
ss
scas
loopne
and
je
xor
pop
cmp
ins
das
add
pop
lods
es
(bad)
fidivr
clc
dec
add
je
and
sbb
mov
(bad)
or
dec
mov
pop
or
cmps
cmp
mov
not
out
mov
dec
add
jo
es
jne
pop
inc
or
icebp
shr
pop
and
ins
pusha
push
mov
push
jne
div
pushf
cdq
adc
in
sti
neg
cmp
cmp
fdiv
aaa
adc
sbb
sub
loopne
add
xchg
adc
cld
mov
add
adc
(bad)
pop
jl
adc
stos
sub
dec
pop
jb
push
push
mov
inc
aam
and
inc
pop
inc
scas
ja
test
xor
retf
sbb
adc
mov
sub
movs
dec
jno
adc
sbb
cwde
pop
test
movs
cdq
xor
ret
in
add
imul
xor
fstp
or
pop
add
xor
push
sahf
fwait
adc
or
cdq
sar
loope
and
pop
mov
fdiv
jp
ins
or
xchg
rol
fmul
mov
xor
mul
or
xchg
fwait
add
sbb
add
fwait
js
xchg
enter
call
mov
push
(bad)
mov
sbb
push
dec
add
sub
mov
add
fbstp
test
inc
js
sub
loopne
push
mov
loopne
cld
adc
das
add
test
sbb
push
neg
stc
or
add
adc
xchg
cs
add
fadd
das
cmc
cmp
test
jge
cs
(bad)
int3
xchg
mov
or
call
mov
adc
pop
push
js
movs
ss
mov
adc
loop
or
sbb
mov
bound
cmp
pusha
mov
xlat
inc
outs
mov
pop
dec
aam
add
mov
sub
xlat
call
das
push
outs
fs
pop
and
jns
ret
mov
add
addr16
cmp
adc
mov
push
or
jle
leave
mov
jmp
les
sbb
xchg
cmc
test
sbb
push
dec
push
movs
loopne
push
push
jg
and
push
es
or
sub
add
pop
mov
push
mov
loopne
xor
pop
jmp
mov
dec
sbb
sbb
or
fsubr
test
test
daa
idiv
fst
sahf
(bad)
inc
ins
ds
push
cdq
add
pusha
fist
jne
cmp
add
pushf
mov
sub
jb
push
adc
adc
rol
jmp
add
add
or
jnp
(bad)
or
xor
push
xor
call
sti
xor
xlat
lock
mov
mov
mov
mov
mov
mov
loop
das
es
xchg
out
cmp
adc
or
addr16
or
stos
(bad)
cmp
xchg
rcr
jle
sbb
and
xor
iret
and
dec
mov
or
add
push
les
addr16
test
push
loop
and
adc
jl
and
loopne
dec
rcr
adc
fisub
xor
inc
and
push
and
and
mov
dec
mov
xor
pop
add
or
and
xor
enter
add
sbb
xor
xor
adc
test
add
mov
stc
aad
push
push
shr
lods
or
call
fs
fimul
push
or
or
and
loop
dec
sbb
mov
push
xor
add
aam
jo
cmp
sbb
(bad)
ds
ja
jb
add
mov
mov
dec
xor
jge
ret
enter
xchg
jae
clc
mov
add
fs
fcom
lahf
add
dec
lahf
rcl
cmp
xor
cwde
dec
jo
inc
push
sub
fwait
sub
jnp
dec
inc
lock
and
push
or
mov
into
test
ja
enter
jb
adc
lods
mov
ins
and
add
fs
adc
or
or
popa
retf
push
add
adc
sar
in
push
ins
mov
loope
sub
pop
or
lahf
push
mov
xchg
sub
loop
mov
sbb
inc
mov
cmps
cmp
je
ret
inc
cld
and
cwde
sub
add
adc
adc
adc
fsubr
loope
cwde
xchg
inc
sub
or
dec
sbb
dec
cmp
or
inc
dec
or
jl
icebp
jne
and
jb
or
push
cmp
inc
pop
mov
push
adc
add
push
sar
pop
lea
sbb
pop
push
mov
lock
movs
cmp
mov
sub
push
daa
add
or
pop
call
int
dec
enter
pusha
clc
rcr
ja
and
movs
mov
adc
ret
lods
push
repnz
movs
xchg
dec
xor
sahf
xchg
jp
pop
mov
and
loop
add
and
fst
das
push
or
rcr
cmp
dec
jo
out
mov
add
cmp
test
div
push
push
inc
adc
cmp
xchg
adc
sub
pop
or
fcom
inc
add
cmp
into
pop
or
xchg
or
loopne
mov
imul
jmp
push
sbb
pop
mov
xchg
sar
sbb
mov
cli
jl
add
int3
sub
(bad)
shr
xor
out
lahf
(bad)
push
sub
sub
adc
jmp
or
add
cwde
ja
cmp
dec
or
mov
outs
inc
rcr
pop
clc
je
sub
xor
popf
and
add
nop
sub
mov
scas
repnz
sbb
xchg
dec
call
sub
cmp
aaa
loope
adc
adc
push
mov
and
jmp
or
inc
aaa
push
sub
inc
sub
and
cmps
arpl
push
inc
cmps
inc
inc
ud2
adc
pop
pop
les
cmp
add
rol
mov
sbb
adc
add
push
mov
mov
and
push
adc
(bad)
popa
add
cmp
mov
dec
cmp
push
in
mov
or
in
fwait
cmp
out
pop
pop
mov
scas
mov
sbb
lods
scas
sub
push
add
movs
sub
cmps
sbb
pcmpeqw
or
inc
add
test
pusha
jg
xchg
scas
sbb
mov
cwde
test
sub
dec
sbb
adc
sub
mov
pop
add
xchg
xchg
adc
adc
add
and
icebp
data16
add
mov
sub
pop
rcr
lahf
add
pop
adc
add
or
fld
cld
mov
mov
lea
add
pop
mov
sub
xchg
sub
cld
add
adc
inc
mov
jmp
aas
push
inc
inc
pop
inc
pusha
scas
push
xchg
or
gs
shl
jb
(bad)
in
push
ins
popa
mov
mov
inc
mov
retf
or
xchg
ret
fst
jmp
nop
or
int
mov
aaa
cmps
mov
mov
mov
(bad)
mov
jo
jo
jns
jp
aaa
cmp
enter
cmp
inc
adc
or
add
jge
inc
lods
sub
pop
push
pop
pop
dec
inc
mov
nop
mov
dec
pop
sub
fwait
inc
add
sbb
out
nop
(bad)
out
(bad)
out
add
mov
push
push
or
je
ss
shr
push
push
ror
sbb
cmp
dec
bound
lods
inc
push
test
inc
mov
cmp
ror
jmp
sub
add
movs
and
and
imul
inc
(bad)
or
add
shl
out
in
dec
pushf
mov
cmps
inc
mov
aad
mov
rcr
mov
push
jg
pop
les
pop
mov
adc
push
sub
and
mov
clc
pushf
push
push
clc
jnp
ins
mov
and
mov
dec
push
push
mov
xchg
rcl
add
arpl
mov
adc
pop
test
test
cmps
loope
cmp
mov
xor
aam
pop
aaa
lock
je
mov
push
cvtps2pd
mov
jmp
dec
inc
mov
retf
fst
and
adc
ins
ret
push
push
or
aaa
push
cmp
sub
adc
cmp
jle
cmp
add
inc
enter
shr
and
mov
xor
add
jl
xor
add
sub
pop
fld
mov
aam
add
xchg
icebp
pop
adc
sub
pop
mov
loop
dec
jge
jl
push
(bad)
mov
cmp
adc
repnz
add
test
sbb
mov
inc
push
ins
loope
test
push
adc
(bad)
or
popa
rcl
dec
push
adc
cmp
sbb
rol
sub
mov
push
mov
or
fdivr
sbb
xchg
jno
add
scas
push
(bad)
stos
cmps
adc
test
mov
xor
dec
add
adc
inc
fcompp
push
or
push
shl
fsubr
mov
add
stos
pushf
mov
mov
mov
sub
push
pop
push
fnsave
dec
xlat
adc
sbb
dec
(bad)
stc
mov
(bad)
aam
pushf
pop
mov
iret
add
sbb
and
mov
pusha
push
sbb
mov
push
add
adc
lahf
push
add
xchg
push
or
js
or
push
mov
adc
push
popa
jge
or
and
push
and
add
(bad)
out
jecxz
pop
adc
stos
add
pop
fstp
imul
aas
fs
retf
adc
ret
dec
rcl
nop
ret
sbb
jo
js
push
sbb
mov
mov
jg
sbb
sub
js
cmp
jge
pusha
xor
cwde
sbb
or
imul
inc
sub
sbb
and
push
in
repnz
or
sub
(bad)
add
cs
pusha
pusha
inc
pusha
(bad)
cmp
je
movs
(bad)
add
push
xchg
cmp
scas
xchg
mov
mov
loopne
loop
jae
pushf
and
dec
into
mov
sub
in
and
sbb
addr16
push
or
push
and
or
shr
xor
sbb
inc
ret
or
les
and
push
and
fidiv
jne
inc
mov
jmp
cmp
cmove
mov
aad
sbb
or
and
addr16
dec
mov
call
cmp
loop
inc
inc
inc
cmp
mov
ss
inc
cld
in
sbb
and
ss
std
add
or
test
or
loope
dec
arpl
push
in
fisub
xor
imul
leave
cmp
sub
es
imul
mul
stc
inc
fisub
lods
repnz
and
in
in
in
in
sbb
mov
mov
cmps
sbb
mov
(bad)
and
enter
pop
sbb
dec
gs
lock
ins
or
ror
test
aam
jo
jns
sbb
mov
repnz
enter
jle
and
jecxz
pop
push
popa
dec
or
fs
ds
sbb
test
or
out
inc
mov
and
or
ficom
inc
(bad)
xor
in
mov
loope
push
xlat
mov
cld
pop
or
(bad)
hlt
test
loope
clc
adc
mov
sub
addr16
push
clc
imul
xchg
lea
inc
test
enter
sub
inc
loopne
jno
adc
or
sub
iret
iret
mov
xlat
jb
iret
jne
stc
xor
shr
push
cmp
pop
aam
iret
adc
and
aaa
and
nop
push
dec
and
jmp
pop
mov
fidiv
xor
adc
lods
adc
xor
pop
nop
mov
sub
xor
inc
push
xchg
add
push
cmp
cmp
daa
push
inc
cmp
push
mov
sub
mov
cmp
aas
inc
add
cmp
jne
jmp
dec
jne
jmp
imul
sub
call
cmps
mov
sbb
mov
xor
in
xor
jne
jp
cmp
fmulp
in
loopne
les
adc
pop
cli
inc
inc
add
or
lea
sub
push
xchg
cmp
cmc
(bad)
mov
xor
mov
push
sar
ds
lds
push
mov
(bad)
aam
push
ret
adc
and
pop
mov
jmp
pop
aas
or
sub
xor
sbb
push
and
and
ret
mov
aad
icebp
push
adc
mov
test
xor
push
push
(bad)
call
and
mov
aaa
out
lods
inc
out
int
add
loopne
sar
pop
addr16
cmp
leave
and
jecxz
lahf
xor
not
je
add
test
call
(bad)
xlat
xchg
inc
stos
aam
into
mov
and
jo
add
sub
jmp
sbb
inc
icebp
jnp
daa
adc
add
hlt
hlt
dec
lods
out
imul
popf
jmp
or
pop
cmp
jg
mov
and
xlat
pusha
or
add
lods
inc
inc
xor
mov
ror
or
sbb
cli
retf
pop
jge
cmc
add
xor
add
nop
(bad)
aad
shl
mov
ret
dec
mov
cmp
push
fsub
cmp
mov
ficom
in
or
ret
mov
je
ss
jae
push
jl
add
xchg
pop
jb
jmp
iret
call
cmp
adc
stos
loopne
pop
push
pop
add
or
xchg
lds
mov
dec
loope
mov
loop
ins
xor
stos
jl
mov
push
sbb
daa
enter
loope
sti
jae
dec
jno
pusha
push
mov
sbb
push
sbb
mov
jae
call
sar
pop
mov
xor
pop
sar
dec
push
pop
imul
xchg
mov
dec
or
mov
fstp
or
js
add
adc
xchg
or
loop
push
and
inc
cmp
lods
hlt
fstp
fsub
mov
adc
lea
out
das
sbb
outs
mov
idiv
cmps
push
add
push
sub
popa
in
data16
push
add
push
fistp
lods
mov
call
sub
push
lods
push
and
fs
mov
dec
sbb
and
adc
imul
sbb
or
or
cld
(bad)
(bad)
adc
enter
cwde
adc
mov
or
ins
and
mov
ret
xor
imul
jge
ja
ror
push
jp
mov
and
push
fcomp
retf
xor
jne
or
mov
mov
iret
shl
or
push
cmp
push
movs
sbb
adc
mov
mov
add
sbb
and
or
ds
leave
sbb
adc
add
jne
in
mov
cmp
push
int3
dec
call
xchg
add
sbb
adc
jle
fisub
(bad)
dec
inc
punpckhbw
pop
in
in
daa
cmp
add
push
push
jnp
test
in
lods
inc
push
fsubr
sbb
add
sbb
mov
xchg
out
rol
add
pop
call
leave
aas
push
shl
inc
dec
sub
mov
mov
push
sbb
and
movs
mov
adc
and
xchg
add
or
add
in
and
adc
neg
shl
or
pop
lods
movs
xchg
push
lods
and
dec
inc
mov
xor
loop
fstp
xchg
mov
mov
sbb
rcl
pop
test
dec
mov
or
add
pusha
pop
inc
pop
cmp
mov
mov
fs
push
push
jmp
jl
stc
sar
cmp
retf
push
mov
pop
push
fdivr
out
in
mov
xchg
sbb
mov
fstp
enter
jge
int3
(bad)
fstp
push
pop
xor
cs
sub
mov
push
loope
pusha
in
rep
jecxz
int3
mov
test
ja
push
fcom
xchg
push
or
mov
leave
test
stos
sbb
ret
mov
inc
sub
inc
xchg
inc
clc
add
cdq
xchg
pop
iret
sbb
frstor
or
test
mov
jae
adc
fst
push
popa
leave
mov
add
retf
xchg
stos
loop
aam
push
adc
or
dec
jmp
loope
inc
xor
ror
movs
aaa
push
add
sbb
mov
pop
fsub
ds
or
inc
jmp
add
cmp
into
xchg
into
aam
adc
mov
pop
aaa
mov
and
into
or
xchg
pop
pop
(bad)
dec
jno
inc
imul
movs
(bad)
adc
test
and
in
not
loopne
xchg
inc
push
lds
jmp
ror
mov
mov
out
jo
cmp
cwde
imul
test
push
or
fcmovb
(bad)
mov
inc
adc
cmp
inc
pop
mov
mov
sub
adc
iret
sub
jb
jmp
dec
and
dec
xor
out
mov
xor
push
pushf
sar
call
pushf
or
movs
jge
push
xchg
cmp
ins
xchg
mov
mov
and
xor
or
xchg
(bad)
mov
mov
jo
push
pop
pop
add
ins
addr16
pop
je
imul
adc
dec
inc
ds
jl
inc
ss
pop
adc
push
xor
lods
cmc
push
jns
test
jbe
add
or
add
dec
cli
or
push
sbb
addr16
mov
jp
inc
lock
js
loope
rol
mov
jmp
cmps
adc
mov
inc
pusha
dec
cmp
jne
mov
call
sar
int3
cs
neg
lods
dec
adc
dec
jge
fadd
bound
cs
stos
mov
out
dec
mov
call
in
push
jle
adc
jne
push
mov
fsub
(bad)
fdivr
call
add
es
cmp
and
jo
mov
jge
xlat
cmp
call
mov
and
xchg
add
iret
dec
xor
fist
retf
or
jnp
leave
or
xchg
jl
enter
mov
pop
test
scas
inc
es
test
cdq
nop
nop
cmp
mov
and
cwde
cwde
dec
add
xor
xchg
or
leave
sub
test
test
retf
pushf
pop
stc
sti
mov
push
pop
jbe
push
fstp
icebp
push
sub
(bad)
jge
dec
cmps
lods
iret
leave
loop
adc
mov
pop
ret
enter
cmp
movs
cmp
inc
inc
lods
ja
stos
into
ins
mov
gs
add
or
push
je
call
sti
inc
jnp
inc
mov
xchg
or
mov
or
or
jmp
adc
movs
hlt
xchg
cmp
push
dec
pop
add
sbb
and
mov
inc
xor
scas
outs
mov
push
ret
lods
stos
add
sbb
mov
(bad)
jg
mov
pop
jnp
or
je
or
dec
cmp
loop
jne
in
or
mov
xchg
cmp
push
mov
or
add
and
sbb
imul
jne
push
pushf
add
mov
adc
dec
fs
icebp
mov
jb
mov
add
or
mov
movs
dec
ret
push
add
adc
jmp
jae
and
sbb
in
mov
pop
add
hlt
mov
dec
adc
or
icebp
loopne
pop
add
sbb
dec
movs
push
aam
loope
sbb
adc
test
out
inc
ret
rol
add
in
add
clc
or
mov
clc
xchg
jo
leave
rcr
adc
sbb
and
lahf
sahf
pop
inc
and
in
loopne
inc
mov
leave
mov
fmul
jg
xor
ret
mov
push
mov
mov
pop
add
add
or
xchg
xchg
or
cmp
ret
or
sub
ret
mov
ins
lods
in
sbb
jl
mov
mov
aas
outs
or
arpl
out
fild
and
or
das
and
inc
scas
dec
xor
es
mov
fld
fucomp
retf
aas
xor
clc
inc
jp
pop
cmp
or
xchg
inc
pusha
cmp
xor
xor
jae
call
inc
mov
punpcklwd
out
cs
mov
push
mov
add
and
jmp
sbb
lods
movs
jae
xchg
int
mov
xchg
test
push
in
pop
jbe
mov
or
pop
in
sub
sbb
or
jnp
cmp
das
inc
or
leave
retf
add
or
adc
dec
or
xchg
xchg
gs
pop
push
xchg
fwait
ror
pop
inc
jmp
cmp
mov
or
and
sub
xor
repnz
fmul
test
xchg
mov
mov
cmp
mov
adc
shl
cdq
mov
ds
loopne
stos
mov
mov
and
in
loopne
cmp
dec
popf
scas
mov
cli
add
retf
add
push
jmp
xchg
(bad)
cmp
dec
add
retf
dec
and
loop
sub
or
cmp
inc
test
and
mov
(bad)
or
clc
sbb
retf
mov
xchg
rol
dec
push
inc
and
and
in
push
sbb
je
rcl
fcom
mov
xor
cs
cmp
dec
cmp
push
jecxz
jno
push
enter
loope
mov
movs
pop
cdq
and
jne
pop
pop
and
fmul
arpl
and
dec
pop
test
sbb
jl
inc
pop
ins
pushf
inc
or
fild
in
jns
sbb
imul
add
dec
rcr
in
clc
sub
out
push
or
cmp
ret
or
adc
and
jmp
(bad)
les
push
int
or
daa
fnsave
adc
sbb
cld
jns
js
jnp
and
stc
in
lahf
jecxz
mov
pop
push
je
or
inc
retf
shl
push
lods
popa
pusha
or
jns
mov
and
xchg
or
cmp
adc
sbb
or
sbb
adc
loopne
pusha
sahf
add
je
jle
pop
push
push
push
add
rcr
add
sbb
mov
and
mov
inc
push
cmc
and
sbb
jmp
add
or
jmp
rdmsr
sub
ret
sub
or
cmp
inc
mov
inc
xchg
(bad)
sub
sbb
jne
pushf
jmp
test
mov
adc
adc
mov
push
xchg
mov
and
cmp
add
clc
or
cmp
mov
adc
enter
in
and
push
adc
pop
test
pop
test
cwde
sub
inc
cmp
arpl
fild
sub
jnp
shl
sub
stos
sar
push
out
xchg
cli
sub
or
xor
sub
add
push
mov
stos
clc
(bad)
push
jle
bound
lea
aaa
sbb
stc
out
add
ficomp
clc
or
jae
lds
inc
add
ret
jle
mov
adc
or
jb
or
jbe
loopne
test
push
push
adc
inc
push
scas
or
inc
fld
and
xchg
pop
xchg
call
mov
xchg
cmp
popf
jno
ret
pop
push
fs
movs
add
dec
aas
les
outs
(bad)
(bad)
retf
mov
xor
sub
inc
jg
cmp
push
invd
loopne
mov
pop
scas
dec
adc
inc
sbb
fdiv
xchg
cmp
sbb
dec
push
neg
pop
std
adc
jbe
adc
or
jmp
repz
sub
xchg
push
ja
add
les
and
xlat
push
jae
pop
leave
fs
int
inc
(bad)
and
fdiv
test
adc
cmp
dec
push
(bad)
and
dec
jno
fld
out
cmp
hlt
sub
stos
and
and
(bad)
(bad)
push
or
aam
add
sub
push
dec
dec
enter
int3
aaa
push
sbb
mov
inc
repnz
add
or
test
or
pop
mov
adc
ss
lea
mov
xchg
adc
in
adc
or
or
repnz
pop
cmp
(bad)
cmp
push
jns
ja
push
push
add
or
movs
ds
fisub
add
sbb
push
cmp
popa
mov
inc
cmp
aas
nop
sub
sub
sub
inc
xchg
or
adc
fiadd
into
in
pushw
pop
push
add
xchg
stc
push
xchg
out
and
cmc
xor
and
and
mov
lods
add
loopne
lods
xor
pop
loopne
loope
aad
mov
xchg
lea
addr16
nop
cmp
mov
pop
xchg
pop
ret
jo
ja
sbb
js
mov
push
sahf
mov
push
or
sub
aad
add
pusha
movzx
xor
pushf
pop
pop
adc
push
popf
aam
jmp
xor
inc
lods
call
adc
stos
mov
test
sbb
jo
ret
ret
mov
or
mov
daa
js
jnp
retf
xchg
ss
pop
les
outs
jo
test
test
lahf
enter
cs
adc
add
mov
(bad)
fld
jmp
mov
xor
fcomp
mov
sub
or
add
jne
std
jnp
or
pop
mov
or
add
cs
mov
mov
xor
push
xor
arpl
ror
rcl
inc
jnp
sub
and
dec
dec
add
add
pop
js
idiv
push
lock
(bad)
rol
ffree
push
cmp
lds
pushf
popa
sbb
xor
push
or
push
loope
xor
call
int3
adc
shl
hlt
rcl
iret
sub
or
push
js
add
add
loopne
push
dec
xchg
std
push
mov
les
pop
nop
add
pop
pop
les
adc
add
shld
inc
mov
(bad)
mov
cmp
mov
icebp
imul
xchg
(bad)
fisttp
mov
gs
xchg
mov
loopne
sbb
and
sbb
and
jae
sbb
jo
popf
adc
or
movs
sub
sbb
jl
nop
push
loop
rcl
movs
push
push
cwde
mov
or
mov
xchg
sbb
fdiv
outs
jge
and
jne
or
ret
adc
sahf
adc
xor
out
ror
or
add
ret
add
push
cs
scas
add
cwde
loopne
jmp
pop
add
pop
mov
ret
pop
(bad)
add
add
fcmovne
and
jne
sub
add
sbb
push
push
adc
sub
popf
sub
push
and
adc
push
jmp
call
mov
inc
xor
outs
cli
cmp
mov
adc
in
mov
xchg
push
js
adc
add
dec
lea
repz
call
xchg
adc
adc
dec
jne
out
rcr
mov
jmp
or
out
adc
jle
ins
loopne
xor
cwde
sbb
ss
dec
xor
fdivr
sub
hlt
je
mov
call
sahf
inc
push
jb
aam
push
jmp
fld
pushf
rcr
out
ds
jbe
sub
fstp
nop
(bad)
leave
fimul
push
jmp
cmc
push
mov
fmulp
fistp
cmps
or
add
inc
adc
stc
in
scas
mov
or
lock
adc
cmp
loop
sbb
xor
jno
sahf
cdq
push
and
addr16
mov
cmp
pop
enter
movs
mov
pop
loop
shr
jo
sbb
cmp
inc
xchg
mov
iret
das
loopne
push
mov
cwde
out
or
lock
dec
mov
adc
rol
add
inc
aas
inc
mov
out
rcl
adc
dec
mov
les
dec
push
or
sbb
xor
sbb
shl
jno
les
sub
or
inc
sbb
stc
cmp
call
scas
and
xchg
scas
in
fsubr
jl
cmc
cmp
adc
leave
int3
ss
scas
push
scas
pop
adc
or
outs
outs
or
je
and
lods
fnstsw
sbb
loop
sub
ins
imul
dec
push
push
or
scas
push
adc
sub
cmp
cld
mov
mov
lock
or
jmp
jno
mov
mov
ret
in
test
scas
and
ins
(bad)
inc
retf
pop
push
and
lahf
mov
cmp
xchg
movs
jne
add
shr
fsubr
pop
and
imul
mov
and
dec
add
test
pop
leave
add
test
adc
or
lods
jno
jnp
rol
dec
mov
mov
sahf
outs
push
or
pop
add
or
push
add
enter
and
out
adc
adc
cs
and
xor
arpl
or
mov
cmp
sub
fadd
pusha
xor
and
jne
in
in
add
fist
xor
dec
les
and
adc
sahf
xor
cli
xor
test
adc
rol
jg
ret
enter
sbb
dec
fsub
sub
enter
mov
adc
in
call
inc
cmp
pushf
out
push
xor
lahf
push
(bad)
pop
repnz
mov
(bad)
(bad)
cmp
or
cmp
ret
jecxz
add
adc
test
lea
shr
xchg
add
cmps
mov
ret
sub
or
jg
jmp
xchg
dec
push
mov
dec
fimul
pop
cmp
and
sbb
and
pop
and
xor
xlat
dec
sbb
inc
fiadd
loopne
add
sti
pop
add
and
add
in
add
(bad)
sahf
ret
jg
(bad)
test
xchg
stc
je
push
jmp
add
push
nop
dec
lock
jno
push
rcl
push
pop
rol
pop
sahf
sbb
jmp
sub
adc
das
add
add
cmp
pushw
or
xchg
in
sti
sbb
or
leave
fld
sahf
in
push
lock
push
rcl
aad
(bad)
cli
push
add
push
xchg
retf
add
cmp
cmp
push
xor
push
and
cmps
int
and
pop
popa
clc
fimul
repz
movs
add
inc
adc
jecxz
clc
mov
addr16
mov
and
dec
add
add
call
push
ss
add
mov
adc
mov
outs
cmp
pusha
jge
inc
add
mov
mov
mov
ja
mov
or
jb
mov
jnp
push
sbb
add
js
in
pop
add
sahf
pop
add
xchg
imul
(bad)
out
(bad)
push
push
and
test
push
pop
sub
mov
cdq
pop
mov
xchg
fcomp
popa
dec
sbb
leave
sub
inc
mov
int
ins
in
adc
jb
cld
ins
and
rcl
movs
loopne
dec
cld
clc
dec
mov
add
mov
mov
xchg
imul
sub
rol
or
ins
arpl
popa
mov
and
das
and
add
sub
neg
xor
inc
add
shr
pushw
ss
test
out
push
add
push
pop
xchg
push
in
fcmovbe
push
cs
push
cdq
in
lahf
sub
ret
in
jmp
push
in
(bad)
push
loopne
jne
inc
push
jnp
sub
and
sbb
xor
pop
xchg
bound
fs
cmp
ins
push
mov
jo
das
call
jne
out
das
sbb
shl
loope
adc
cld
cmp
and
es
xor
sub
(bad)
sbb
and
xor
mov
or
adc
adc
ins
sub
out
and
xor
mov
out
rol
mov
inc
mov
jne
jl
push
or
sub
jge
movs
and
mov
mov
pop
loope
js
cmp
popa
and
in
mov
outs
cld
adc
cmp
add
fsub
mov
add
add
and
pop
test
dec
inc
sbb
aam
mov
inc
mov
ds
and
and
popf
xchg
outs
adc
pop
ins
jb
cmp
or
lods
mov
test
or
rcl
mov
sbb
inc
mov
sbb
or
lods
clc
or
mov
leave
xor
add
lea
xchg
xor
push
iret
out
cs
dec
mov
sbb
lahf
cmp
mov
pop
fwait
in
or
rcr
mov
(bad)
push
sub
mov
aam
add
fucomp
mov
jnp
lock
push
ret
xor
xchg
sbb
or
xchg
popf
inc
add
cmp
popf
inc
push
xor
push
sub
xor
xor
clc
push
fisttp
fmul
in
sub
je
retf
mov
xor
inc
daa
test
lods
fld
sub
fld
(bad)
sbb
stos
call
shr
test
fcom
mov
mov
pop
fiadd
jmp
inc
or
out
clc
mov
inc
(bad)
mov
das
push
dec
jle
xor
fidiv
dec
sub
(bad)
cmps
je
in
inc
sbb
test
movs
aas
push
add
or
pushf
jl
nop
sub
pop
les
sbb
movs
aad
adc
inc
movs
mov
add
inc
(bad)
ins
dec
cmps
inc
pop
in
scas
aad
xchg
sbb
das
and
or
cmp
(bad)
clc
mov
or
push
add
mov
rcr
sub
adc
sub
rcr
xchg
xor
mov
push
out
loopne
and
shl
jo
out
sbb
test
push
jmp
add
rol
sub
ror
test
ins
push
or
pop
loopne
push
and
jl
add
xor
xchg
sbb
setno
(bad)
push
popf
jbe
fidivr
push
or
xlat
adc
dec
fsubp
popf
icebp
jmp
cmp
mov
rol
xchg
retf
jne
push
add
add
pop
daa
dec
test
cmc
sbb
gs
xor
sub
mov
js
test
(bad)
jnp
cmp
je
and
in
call
sub
or
dec
es
cmps
push
xchg
sub
add
push
mov
jno
ins
sub
loopne
jb
pop
or
jb
inc
add
test
bound
mov
jge
mov
jl
or
xor
fdivr
pavgb
inc
jb
pop
xor
push
or
scas
outs
std
xchg
out
pop
add
inc
(bad)
mov
pop
mov
je
mov
scas
sbb
add
lea
shl
call
movs
jle
shl
imul
inc
mov
je
or
mov
loope
jne
cs
sub
std
sub
inc
mov
jno
push
cmp
mov
dec
aad
cmpps
inc
sub
push
mov
and
cld
sub
xchg
aaa
xchg
xchg
icebp
fsubr
pop
inc
jo
ins
pop
test
sbb
outs
in
cs
call
push
clc
push
pop
push
pop
mov
adc
mov
clc
push
dec
ficomp
out
int
mov
push
sub
js
out
or
lods
cdq
sbb
rcl
pushf
and
cmp
call
add
mov
add
jmp
xchg
adc
cdq
dec
mov
inc
xchg
inc
ja
mov
and
inc
js
or
fwait
mov
push
and
mov
mov
xchg
cmp
lods
pop
pop
xchg
jae
ins
int
and
arpl
or
fidiv
mov
and
or
mov
pop
xor
cld
cli
out
pop
push
arpl
nop
sub
dec
fdivr
push
add
rcl
add
ret
pop
jecxz
mov
pop
adc
into
rcl
adc
pop
loopne
jno
sti
call
or
or
popf
mov
dec
cmp
jle
cmp
popf
mov
sbb
out
sti
aam
in
or
mov
out
pop
mov
or
mov
gs
jge
add
and
xor
mov
push
cmp
adc
sbb
and
or
sub
cmp
add
in
sbb
inc
into
and
pop
push
adc
sub
push
inc
loopne
sar
rcl
sub
mov
jecxz
push
mov
sbb
dec
push
mov
aad
pop
(bad)
mov
inc
js
es
push
cmps
jnp
mov
movs
pop
jns
add
push
push
or
leave
std
adc
mov
xchg
jecxz
adc
mov
mov
xchg
fwait
loop
cmp
jne
mov
push
or
sub
push
ret
add
fisttp
push
jbe
adc
jp
mov
sub
and
lahf
inc
(bad)
loopne
add
or
sub
mov
mov
not
fsubr
cmovl
xchg
fsub
lock
shl
and
clc
dec
add
add
mov
js
pop
jae
pop
or
lahf
fs
mov
sti
mov
sbb
push
sbb
push
das
mov
jge
pop
add
mov
scas
add
add
adc
dec
addr16
cmove
inc
jg
out
jl
jb
sbb
in
out
mov
jmp
add
nop
mov
adc
xchg
mov
es
sub
clc
movs
bound
hlt
iret
mov
pop
lea
push
add
js
push
out
into
test
(bad)
retf
imul
or
cmp
rcl
inc
fadd
adc
inc
jge
xor
mov
and
xchg
jp
retf
jle
dec
jmp
pushf
sbb
retf
jle
mov
inc
shl
in
sbb
sbb
add
push
sbb
mov
adc
pop
adc
mov
punpckhbw
sbb
movs
or
xor
ins
adc
daa
outs
and
or
pop
outs
add
inc
mov
add
add
add
(bad)
jge
popa
inc
jecxz
jo
add
fmul
sub
int
mov
loopne
(bad)
pop
js
aas
cmp
sbb
sub
dec
inc
cmp
loope
mov
(bad)
jae
cmp
inc
je
lds
push
stos
mov
test
sub
and
adc
or
into
xor
cmp
popw
mov
xchg
add
dec
adc
clc
sbb
mov
sbb
repnz
inc
push
mov
mov
push
pop
sar
dec
popa
or
add
or
mov
or
cmp
xchg
xor
or
adc
jo
push
neg
cmp
mov
add
push
ret
daa
test
(bad)
mov
push
loope
push
test
and
or
test
rol
or
inc
cmp
sub
mov
jle
mov
dec
clc
push
or
inc
xor
inc
mov
imul
jo
cld
add
or
mov
xor
cs
pop
fmul
out
xchg
(bad)
mov
cmp
jb
add
hlt
push
mov
ficomp
push
in
and
inc
jne
cmp
xor
aam
bnd
dec
or
push
and
inc
lea
movs
pop
les
mov
lock
or
sahf
push
jmp
out
fadd
dec
in
or
inc
adc
mov
ins
ret
fmul
ror
sub
xchg
bnd
mov
cmp
scas
mov
dec
mov
sub
sbb
imul
retf
dec
sub
dec
sbb
sbb
jle
scas
leave
sub
in
or
fnstenv
mov
or
sti
ds
xchg
jmp
sub
out
inc
shr
retf
shl
sti
pop
jle
inc
push
or
jmp
xor
mov
movhps
inc
call
stc
xor
test
xor
jb
mov
xor
dec
or
(bad)
and
sbb
in
jle
or
imul
jb
xor
add
sub
push
mov
jbe
xchg
out
push
ss
or
or
fs
mov
mov
add
ins
xor
sub
test
scas
or
adc
and
out
mov
sub
repz
bound
pop
add
push
cmp
retf
lock
lock
xadd
test
imul
and
rcl
push
and
int3
jp
imul
popf
push
sbb
in
adc
stos
xchg
dec
clc
sar
push
dec
mov
inc
and
push
fcom
les
mov
popf
jle
cwde
or
add
jecxz
jno
sbb
nop
repnz
fld
xor
int
daa
bound
cmps
xor
or
cmp
imul
loopne
inc
cmp
push
jb
repz
mov
sbb
fwait
xchg
add
call
cmp
test
repnz
hlt
push
or
push
push
dec
lea
pop
xor
test
xchg
mov
outs
push
inc
jae
dec
das
in
dec
aam
jp
idiv
xchg
dec
js
fst
cmp
adc
adc
sbb
mov
mov
iret
dec
ss
outs
or
fisttp
dec
jns
icebp
dec
jns
shl
imul
push
fs
dec
repz
js
pop
and
mov
xchg
scas
mov
push
and
jmp
pop
mov
dec
push
and
or
pop
fst
sub
push
scas
ret
gs
inc
mov
or
mov
cs
ror
sub
rep
cmp
jae
pop
xlat
je
jae
dec
sub
call
sub
inc
push
dec
cmp
lahf
ror
mov
and
inc
pop
push
iret
sub
rcr
adc
fcom
sbb
popa
pusha
xor
rol
rol
or
pop
fs
inc
jp
adc
sbb
lea
mov
ror
stos
icebp
dec
push
adc
inc
fld
gs
outs
jns
inc
add
jno
and
pusha
dec
inc
pusha
jne
lods
dec
rcr
sbb
adc
mov
sub
pusha
xor
xlat
pop
mov
sub
add
jo
add
inc
cmps
call
sub
push
jge
and
arpl
cs
or
bound
cmps
and
and
jae
add
and
dec
pop
or
cmp
test
xor
dec
mov
xor
jns
push
in
sub
sbb
enter
dec
(bad)
and
push
nop
imul
ins
call
jo
inc
pushf
adc
dec
or
dec
shl
inc
dec
xor
aad
mov
xchg
mov
cmps
inc
push
loope
cmp
jg
xchg
jno
in
push
push
mov
out
and
push
fcom
jp
ret
jmp
sbb
inc
jge
lock
retf
cmp
push
sub
adc
in
inc
mov
dec
add
and
cwde
cmp
xor
mov
repz
imul
sub
ins
dec
out
inc
leave
dec
inc
ret
out
or
and
or
imul
daa
dec
pusha
and
push
je
mov
xlat
les
mov
sbb
loopne
addr16
xchg
les
adc
add
rol
inc
dec
add
push
push
dec
xchg
jp
or
aaa
fdiv
jle
jbe
pusha
fild
or
cdq
push
sub
pop
adc
fnstenv
xchg
std
mov
pop
jmp
(bad)
push
mov
out
xor
(bad)
jmp
orps
push
jg
fs
dec
out
add
mov
ja
in
pop
push
mov
movs
mov
push
fmul
mov
and
mov
mov
add
(bad)
cmp
adc
fimul
addps
cmps
add
xor
dec
imul
mov
push
jmp
cmp
loopne
or
fdiv
sub
jmp
pop
add
or
test
push
idiv
mov
call
lea
mov
push
xor
xor
push
aas
sbb
popf
dec
jge
iret
add
mov
jne
and
and
or
adc
cmp
lods
add
xor
into
in
scas
sbb
aam
dec
nop
mov
jge
adc
ss
pusha
xchg
sbb
mov
and
enter
jmp
dec
call
loopne
push
dec
sub
xor
mov
jo
rcl
jnp
sub
sbb
adc
das
pop
add
movs
pop
gs
mov
daa
loop
mov
add
shl
fsubrp
sbb
and
adc
add
xchg
mov
pop
or
inc
inc
out
mov
iret
emms
inc
and
ss
push
jg
or
push
lock
push
push
adc
adc
mov
add
cwde
mov
jnp
cmps
mov
sahf
imul
mov
daa
or
push
mov
xor
adc
and
add
add
xor
test
fcom
dec
pop
jne
adc
adc
push
xor
jmp
push
adc
push
test
cwde
adc
add
out
xchg
fcomi
test
add
adc
test
pop
xchg
jle
push
daa
or
xchg
dec
test
retf
rcl
inc
jmp
sub
ret
dec
xchg
es
test
popa
sub
push
mov
pop
xchg
fidiv
fbstp
fild
mov
mov
xchg
ds
movs
ss
cmp
std
dec
cld
mov
push
lds
ins
ins
call
leave
mov
push
inc
cmp
xlat
lea
leave
adc
pop
add
je
adc
fistp
mov
mov
adc
jnp
scas
jg
or
jmp
aas
pop
push
fldenv
cmp
dec
js
stos
adc
mov
dec
push
cdq
xor
sbb
repz
dec
fwait
shl
sbb
push
add
jne
mov
dec
and
push
pop
fbstp
mov
popf
test
icebp
push
lahf
shl
or
fimul
cmp
enter
mov
adc
add
clc
dec
push
mov
(bad)
mov
add
dec
ins
jne
or
push
lods
clc
sub
xor
xlat
cli
cmp
mov
and
or
sbb
or
mov
mov
inc
add
sar
inc
cmp
clc
jl
add
or
inc
add
push
push
fisttp
lods
add
inc
cmp
dec
mov
jne
retf
cmp
inc
cmp
(bad)
jns
je
inc
out
das
cmp
and
xchg
pop
not
lahf
mov
(bad)
push
inc
add
shl
loop
cwde
pusha
mov
cmp
ins
in
test
sti
inc
pop
int3
aam
movs
pop
mov
add
and
mov
jp
imul
inc
(bad)
pop
add
mov
int
cmp
pusha
(bad)
xlat
sub
or
sub
sar
sbb
or
test
sti
push
inc
popf
test
outs
cmp
pusha
popa
hlt
jae
or
add
adc
cmp
inc
xor
push
cs
pop
into
lods
add
sbb
cmc
or
inc
cmp
test
dec
and
add
add
adc
xor
lods
and
rcr
mov
pusha
adc
int
js
ds
into
in
hlt
push
jp
push
ins
push
in
test
leave
fstp
dec
mov
hlt
fwait
mov
(bad)
mov
out
jge
jmp
mov
lock
jns
sub
js
pushf
xor
pop
mov
mov
mov
sbb
xchg
inc
add
push
sahf
xlat
and
pop
push
xchg
cmp
leave
or
and
jge
cmps
sbb
mov
xchg
sub
gs
dec
xchg
mov
pusha
jne
sar
rcr
rcr
pop
cmp
enter
add
dec
push
push
pushf
push
xchg
in
imul
add
test
mov
(bad)
push
dec
push
mov
fmul
cmps
scas
push
adc
and
pusha
cmp
mov
or
dec
(bad)
fmul
dec
test
imul
or
ret
mov
xor
gs
or
cmp
add
xor
outs
repnz
xor
xchg
mov
sbb
and
mov
mov
mov
daa
jno
or
sbb
cmp
adc
push
outs
add
sbb
iret
push
or
xor
mov
out
add
ins
call
xchg
call
adc
push
dec
xchg
nop
inc
iret
sbb
and
cmc
ja
add
sub
mov
mov
sub
jno
pushf
xor
sub
les
xor
pusha
popa
cdq
inc
inc
push
rol
ins
jg
jecxz
and
push
push
pop
xor
mov
xchg
cmp
dec
add
dec
adc
mov
mov
out
cmp
nop
sahf
mov
inc
movnti
out
push
cwde
mov
mov
add
rcr
add
dec
sbb
xchg
or
push
jmp
mov
aas
add
cmps
pop
push
clc
mov
sbb
popf
pop
xchg
inc
ror
test
arpl
mov
je
adc
cli
lea
add
shr
ficom
push
adc
push
movs
into
ret
inc
loope
ret
xor
cmp
pop
cmp
movs
push
sub
je
(bad)
je
(bad)
pusha
xchg
je
sub
iret
mov
in
sbb
inc
adc
sub
xchg
and
fadd
into
in
add
jmp
mov
sbb
push
rcl
(bad)
mov
retf
sar
ins
es
rcl
or
ret
imul
push
loop
movs
xchg
je
retf
inc
pushf
sbb
imul
xchg
jecxz
push
movs
mov
(bad)
fcom
xor
jae
das
rol
cmp
js
inc
fmul
cld
sub
pop
sahf
jmp
dec
in
sub
and
xor
movs
and
add
into
in
and
push
not
repz
in
adc
sub
imul
pop
jmp
loope
jmp
jmp
sbb
fsubr
cmp
aad
js
sbb
fcomp
add
jmp
nop
sub
or
xchg
sbb
ins
xor
add
add
cli
inc
arpl
test
xor
or
cmp
xor
push
push
and
or
adc
fild
jo
mov
sti
mov
cmp
mov
cmp
sbb
push
out
and
fsubr
push
cmp
inc
daa
cmps
cmp
and
xor
jo
mov
es
leave
shl
ret
inc
aaa
add
pop
lds
loope
add
dec
mov
and
in
and
push
cmp
add
add
adc
call
inc
lock
pop
inc
push
add
js
adc
mov
fcom
les
add
xlat
add
pop
or
push
jb
shl
add
cmp
push
xor
imul
and
imul
add
retf
push
sbb
movs
push
cmp
cmp
or
fsubr
sbb
xchg
les
adc
and
and
cmp
sbb
cmp
inc
sub
cli
dec
xchg
xor
mov
dec
adc
or
clc
jle
push
jne
pop
test
sub
stos
test
jne
lods
(bad)
mov
ds
cs
lds
adc
(bad)
sub
aas
sbb
pop
jp
or
sub
and
imul
mov
div
(bad)
movs
or
and
sub
dec
push
mov
push
add
pop
aas
sbb
je
call
test
daa
hlt
sbb
adc
xor
cmps
adc
rcr
xchg
add
jnp
jne
jge
ins
inc
jl
fidivr
xchg
les
lods
into
mov
push
lea
je
sbb
add
jmp
popf
bound
jle
movs
ret
cmovg
push
or
imul
cmp
daa
xchg
xor
xchg
add
aam
mov
dec
or
jecxz
jge
push
mov
cld
ror
mov
push
sbb
mov
leave
aad
retf
out
xchg
(bad)
pop
inc
cmp
cmp
fsub
push
push
cdq
dec
aam
xchg
pop
xchg
ins
cmp
lock
inc
ds
inc
mov
dec
add
dec
lds
inc
push
or
loopne
push
or
jno
and
mov
mov
mov
imul
jg
mov
pop
mov
sub
inc
or
inc
call
dec
jmp
xor
adc
sar
push
dec
jg
sbb
jp
fild
dec
ins
shr
mov
shl
xor
loope
pop
addr16
and
je
fisttp
adc
mov
sahf
mov
jecxz
cli
fst
fild
test
jnp
or
sbb
adc
call
sti
or
push
pusha
mov
add
test
je
dec
gs
and
fst
movs
lds
cmp
mov
outs
pop
aad
sub
adc
inc
or
inc
jecxz
cmp
and
adc
dec
fwait
bound
(bad)
sbb
adc
(bad)
jl
pop
ins
adc
jbe
icebp
retf
clc
and
dec
sub
dec
(bad)
nop
add
inc
sub
push
inc
xor
or
jge
pusha
sbb
and
xor
push
adc
cmp
inc
leave
push
(bad)
je
jmp
fadd
xor
push
xchg
nop
aaa
push
fsub
clc
and
mov
xor
test
add
mov
addr16
dec
fisttp
enter
xchg
movs
rcr
inc
jno
xchg
cmps
fimul
stos
or
mov
cwde
pop
shl
test
(bad)
add
mov
and
push
mov
pusha
repz
ja
rol
pop
and
adc
out
cmp
sub
int3
push
shl
and
test
movs
add
sub
fiadd
rol
jl
xor
ret
nop
add
sub
popa
or
les
inc
scas
aad
imul
mov
jbe
movs
shl
jo
ins
inc
js
pop
push
mov
push
xchg
sbb
xor
xchg
xlat
rcr
or
clc
adc
scas
push
add
sbb
xchg
inc
or
inc
or
sbb
sub
mov
pop
cmp
inc
iret
jge
inc
lods
aas
loope
sub
jg
dec
xor
push
mov
lock
mov
dec
(bad)
dec
sbb
jge
push
pop
jne
mov
add
retf
push
les
inc
imul
lock
aam
or
mov
adc
call
push
or
push
cmp
repz
mov
and
add
jo
retf
enter
sub
adc
test
daa
push
cmp
inc
or
mov
and
rcr
xchg
sub
sub
adc
pop
xchg
and
xchg
imul
pop
push
inc
fisubr
and
ret
xchg
xor
clc
adc
dec
pop
jmp
cmp
je
test
inc
add
sub
mov
fdivp
jl
mov
lods
or
xchg
adc
loopne
pop
push
ret
shl
les
inc
and
lea
cmps
aas
xchg
(bad)
xlat
mov
and
lods
dec
xchg
call
and
cdq
leave
lea
fbstp
adc
pop
dec
popa
test
stos
ds
mov
cmp
loop
inc
test
ins
scas
inc
push
jnp
mov
cwde
add
sbb
retf
push
aaa
(bad)
mov
or
mov
dec
add
xchg
mov
ret
push
add
out
(bad)
mov
inc
jmp
sbb
retf
inc
(bad)
sub
nop
push
jge
ins
js
nop
sbb
cmc
lea
add
inc
lahf
add
in
aam
jmp
push
jne
cmp
stos
lock
in
addr16
jle
mov
jno
sbb
xor
adc
(bad)
test
in
imul
cmp
fucomi
inc
movs
out
daa
in
out
cmp
je
mov
stc
rol
in
mov
and
out
jle
add
inc
gs
into
fs
das
in
jecxz
and
pop
jp
sub
into
lds
call
ficom
pop
mov
add
xchg
in
fiadd
mov
mov
inc
push
cmps
stos
lea
sbb
popf
sbb
or
xchg
adc
sub
push
mov
dec
(bad)
jne
into
or
aaa
movs
test
cmp
sub
ds
inc
loopne
adc
xor
add
sub
outs
add
pusha
in
pushaw
call
push
movs
lock
rcl
jg
dec
adc
out
daa
inc
and
pusha
xchg
mov
movnti
pop
ror
hlt
adc
shl
jne
jmp
or
test
adc
ss
(bad)
pop
push
inc
js
jge
push
adc
in
adc
pop
nop
inc
pop
or
into
popf
adc
xchg
cdq
xchg
lock
fild
mov
sar
add
ret
push
push
cmp
xchg
les
push
adc
jmp
popa
popa
add
adc
sub
push
add
or
loopne
aam
inc
sub
inc
and
nop
xor
iret
dec
xchg
xor
aaa
xchg
push
adc
mov
and
inc
and
dec
fwait
sub
es
or
icebp
or
mov
sbb
cmp
jno
add
dec
sbb
imul
xor
mov
mov
xor
je
pop
mov
mov
mov
clc
add
mov
retf
loopne
pop
adc
dec
and
pop
push
bound
and
add
mov
test
inc
addr16
in
sbb
inc
mov
cmp
lods
push
jmp
push
test
cmp
fs
cwde
cmp
sbb
mov
push
push
inc
jbe
push
ss
add
mov
or
xchg
mov
mov
rol
cmp
cmp
in
push
xchg
ret
ja
add
adc
hlt
or
push
outs
add
outs
mov
pop
sbb
push
or
mov
or
xchg
addr16
cmp
adc
mov
test
sub
aaa
or
test
imul
cmps
lea
or
mov
shl
sub
rcl
add
mov
and
mov
loope
pop
les
mov
leave
into
push
pop
push
add
gs
sbb
xor
cld
sub
pop
jge
outs
xor
imul
lock
test
push
sbb
or
int
imul
pop
and
cmp
add
xchg
ins
cdq
add
adc
stos
inc
stos
dec
adc
jo
retf
ss
call
ror
xor
push
test
iret
push
lock
fstp
sbb
pop
nop
stos
ins
(bad)
cli
push
mov
mul
aad
mov
mov
dec
ins
jno
mov
xor
mov
pop
pushf
and
cdq
test
push
xor
xchg
jns
je
mov
cwde
gs
lock
push
test
aam
out
stos
lock
add
fwait
mov
xchg
or
clc
sub
sbb
fcom
jmp
cdq
and
push
(bad)
ins
movs
mov
add
or
dec
mov
sub
and
aam
loope
mov
inc
jne
add
adc
mov
pop
cvtps2pd
daa
nop
mov
inc
rcl
or
pop
out
hlt
or
sub
(bad)
cmps
hlt
cli
ror
fnstenv
cmp
mov
aad
or
add
jp
or
loopne
je
mov
(bad)
inc
xchg
mov
std
sub
and
in
ficomp
push
test
lods
add
adc
fild
mov
inc
mov
das
and
add
sub
test
shl
sbb
test
(bad)
lods
inc
pop
inc
ins
add
pop
jb
inc
outs
aas
xor
mov
sub
jae
push
pop
add
movs
ds
adc
or
jmp
inc
sub
loope
mov
call
and
add
aaa
mov
jg
mov
cmp
retf
dec
sbb
fcompp
jmp
inc
mov
clc
and
push
loopne
test
lahf
pop
pop
push
or
adc
mov
sbb
std
xchg
push
xor
pop
outs
test
sub
pushf
iret
outs
imul
cmp
or
mov
push
cmp
pop
push
add
mov
push
cdq
jbe
pop
inc
cmp
repz
jne
fisttp
jmp
(bad)
push
jge
cld
cmp
pop
jo
cmp
rcl
push
jge
sbb
or
dec
call
(bad)
xor
xor
xchg
push
sub
or
in
xor
nop
test
or
loop
push
pop
and
fs
pop
ret
pop
fcmovnb
push
mov
inc
and
aam
mov
je
add
adc
test
pop
push
mov
pop
sbb
mov
dec
jmp
cmp
dec
push
inc
mov
add
jae
jmp
push
mov
sub
adc
mov
leave
enter
add
aas
lock
add
push
jp
retf
mov
mov
and
adc
sub
sbb
bsf
movs
jno
ret
xchg
imul
add
cmp
call
clc
xor
or
jo
jmp
leave
dec
or
xor
or
sub
jecxz
scas
cmp
sbb
xor
stos
outs
call
arpl
mov
adc
add
sbb
inc
push
(bad)
xchg
xor
and
(bad)
mov
loop
ret
sub
cmp
or
je
mov
add
rol
add
cwde
add
cwde
cmp
xchg
or
adc
fdivr
mov
sub
xchg
cmp
cmp
jg
test
in
sub
dec
daa
fmul
mov
adc
inc
dec
xor
enter
in
ins
cmp
push
pop
xchg
dec
dec
jb
loopne
aas
sbb
mov
and
jmp
sbb
lock
add
jo
inc
daa
sti
sub
test
adc
out
add
mov
sub
adc
pop
aad
scas
jnp
test
sbb
hlt
shr
aaa
inc
sbb
xlat
push
mov
sbb
jb
aaa
mov
sbb
xchg
retf
push
sbb
sbb
retf
and
mov
scas
sbb
xchg
or
cmp
jg
cmp
push
lods
push
sub
jmp
leave
xchg
mov
aam
test
cmovno
push
or
sub
scas
mov
ja
mov
stos
and
(bad)
es
cmp
lds
pusha
push
adc
adc
rcr
movs
push
add
adc
xchg
add
jo
add
or
or
xor
rol
popa
daa
paddsw
test
cmp
rcl
dec
frstor
data16
xor
(bad)
xchg
pop
or
or
pop
or
push
or
movs
ret
or
xlat
loopne
out
sbb
retf
jno
xor
jbe
stos
xor
adc
pop
adc
sbb
dec
add
adc
add
sub
loopne
lahf
push
or
adc
cmp
add
add
cmp
pop
aam
test
dec
mov
push
push
jp
call
or
xchg
dec
add
add
ret
add
cmp
in
add
push
adc
loope
rol
or
cld
sub
mov
jp
push
mov
lea
or
je
ja
jo
sub
mov
test
push
adc
fld
lahf
add
inc
jbe
pop
test
mov
or
mov
pop
clc
mov
fild
test
fstp
add
inc
ffreep
dec
cmp
and
fisub
rol
int
adc
inc
call
inc
adc
cmps
push
or
pop
(bad)
and
aad
ja
je
shl
push
xor
aaa
mov
mov
fcomip
add
mov
dec
pop
xor
int3
js
das
adc
pop
int3
or
mov
sub
add
lock
setg
inc
fstp
movs
sub
or
shl
and
loop
mov
cld
jne
xchg
sbb
ror
and
cmps
push
adc
inc
jecxz
and
popa
mov
push
ja
mov
pop
in
sub
add
test
enter
cmps
sbb
pop
fwait
imul
mov
pop
adc
lds
jb
lods
sub
adc
or
das
pop
cmp
into
call
xlat
or
mov
xchg
cs
add
js
scas
mov
xor
ja
aad
or
ja
loopne
sbb
mov
aam
and
pop
rol
jg
mov
dec
pop
out
fnsave
dec
pop
mov
sbb
dec
or
sub
mov
or
pop
test
add
jmp
ror
add
mov
adc
mov
add
xor
lea
ficom
adc
and
or
fs
push
push
and
mov
lds
cli
icebp
adc
push
xor
mov
out
mov
cmp
mov
xor
and
jge
xchg
inc
nop
and
xchg
cmp
add
dec
scas
or
fidivr
xchg
fwait
aad
test
adc
scas
cmp
add
nop
dec
cmp
jmp
and
jl
mov
out
xchg
adc
mov
test
movs
push
adc
(bad)
xlat
jo
loop
je
xchg
outs
or
adc
repnz
mov
sub
push
jo
inc
inc
xor
out
sub
xchg
mov
mov
cwde
mov
adc
push
and
(bad)
sbb
add
or
ja
jg
add
or
adc
and
cli
retf
push
(bad)
and
push
and
dec
in
sub
pop
ja
aad
xor
add
push
or
in
nop
lods
popa
push
sub
movs
push
out
loopne
add
mov
xchg
fs
inc
retf
sbb
lea
pop
outs
fistp
mov
lea
pop
out
or
movs
dec
das
sub
mov
in
adc
test
dec
dec
stos
out
add
and
clc
pop
xchg
rol
sbb
or
sub
mov
xchg
xchg
mov
jmp
and
cmc
test
cmc
xchg
xchg
test
xchg
pop
dec
cli
retf
or
mov
push
clts
into
adc
loop
cmps
adc
adc
and
cmp
or
dec
and
inc
push
pop
or
out
retf
rcl
adc
add
or
pop
and
lods
ins
or
dec
xchg
adc
pop
adc
ds
loop
mov
mov
mov
dec
xchg
lock
sub
xor
(bad)
ss
and
dec
cmp
inc
neg
pop
dec
jmp
call
cmps
cli
xchg
add
leave
mov
sub
xchg
adc
sbb
dec
cmp
push
xor
in
add
pop
inc
cli
loopne
outs
push
xchg
aam
xchg
add
mov
shr
mov
pushf
cmp
les
pushf
inc
xor
xchg
lahf
test
jmp
mov
mov
sbb
or
dec
jo
dec
in
dec
mov
ret
into
test
push
cmp
ins
daa
or
or
dec
std
test
push
je
mov
pop
(bad)
ret
inc
cwde
xchg
outs
and
xlat
mov
(bad)
push
push
xor
int3
test
ins
inc
ds
aam
(bad)
and
or
test
sbb
les
ret
inc
dec
test
pop
dec
adc
mov
movs
pop
dec
pop
ja
rcr
dec
rcl
les
mov
std
dec
rcr
cmp
je
es
add
retf
adc
idiv
and
loope
add
out
adc
nop
add
add
mov
push
enter
sub
and
inc
adc
rcl
dec
pop
ret
jnp
cli
adc
xor
mov
mov
ret
lods
cwde
xchg
pushf
jg
add
xor
pop
sub
enter
xor
sbb
in
jmp
push
mov
cmp
sub
cmp
jg
loop
loop
jmp
pop
retf
jle
test
cmp
enter
lea
cdq
sbb
movs
shl
das
or
out
and
adc
ret
dec
xor
mov
and
dec
idiv
mov
adc
add
xchg
ret
xchg
push
cmp
pop
push
push
sub
or
add
dec
or
jl
mov
jo
inc
sbb
mov
mov
scas
and
inc
push
jecxz
xor
xor
test
jo
pop
jo
and
and
retf
add
add
push
mov
jne
fisubr
push
inc
into
nop
jne
mov
cmps
daa
pusha
jmp
test
repz
stos
pop
imul
jl
les
lods
mov
or
loope
les
je
pop
push
xor
inc
les
cmp
sar
mov
and
ret
ret
sub
xchg
xor
xor
test
shl
sub
sbb
imul
jl
mov
adc
clc
ja
lock
test
or
cmc
dec
fidivr
push
and
ror
jp
push
jp
into
cmps
lahf
or
aaa
sub
pop
mul
nop
je
sete
inc
or
or
and
aam
pop
ret
mov
retf
pop
cld
sub
out
or
sub
push
popf
add
and
xchg
or
sbb
les
ds
mov
jp
(bad)
push
and
in
jg
mov
xor
lock
mov
add
(bad)
adc
add
pop
rcr
sub
pop
sahf
and
pop
js
ror
aas
sbb
shl
je
aaa
stos
mov
sub
hlt
or
xor
(bad)
cvttps2pi
pushf
add
enter
mov
cli
shr
mov
mov
popa
jp
pop
mov
mov
dec
daa
mov
pushf
or
push
adc
jb
imul
scas
lods
inc
shl
and
add
pop
sbb
push
test
mov
movs
adc
cmp
in
xor
mov
mov
xor
push
adc
adc
inc
cwde
inc
dec
cmp
mov
pop
cmp
(bad)
clc
fwait
and
add
adc
and
add
pop
pop
and
dec
icebp
add
fisub
jne
xor
mov
pop
and
test
adc
push
test
in
or
pop
add
or
xchg
adc
and
add
push
cmc
adc
cmp
stos
xchg
pop
mov
sub
xor
pushf
push
adc
adc
xchg
dec
add
cwde
loop
mov
and
shl
xchg
test
and
cmp
xor
sti
cmp
(bad)
hlt
jmp
aad
jmp
rcr
push
test
mov
dec
add
or
lea
jle
push
xchg
add
push
mov
stc
aad
dec
xchg
bound
call
inc
mov
pop
cmp
fstp
hlt
sub
add
fist
xor
sahf
sbb
cwde
jb
fnstsw
sbb
add
lea
mov
inc
ret
lds
and
and
dec
sub
mov
push
das
add
imul
lahf
or
dec
or
add
(bad)
shl
dec
or
cmp
jecxz
jge
and
dec
add
mov
ins
adc
jmp
sbb
sbb
retf
fldenv
lock
cmp
fidivr
call
sub
loope
push
and
inc
out
test
cwde
mov
pop
jmp
cmps
adc
adc
and
or
or
inc
sub
test
ins
push
daa
loopne
pusha
xchg
pop
dec
jmp
es
popa
nop
imul
xor
inc
inc
or
xchg
add
add
xchg
mov
cli
and
bound
nop
pop
leave
push
cmp
call
sub
inc
je
inc
cmp
mov
cdq
out
adc
add
dec
dec
dec
(bad)
scas
cmp
bound
xchg
cwde
popf
adc
pop
cmp
daa
pop
xchg
dec
enter
push
lods
ja
adc
mov
in
hlt
fdiv
inc
and
jp
ss
shl
call
in
clc
pop
cmp
cmp
cmp
and
and
push
push
(bad)
cmc
xchg
iret
in
xor
js
fwait
mov
or
popf
xchg
push
daa
fmul
inc
cwde
xor
inc
shr
movs
cmovle
nop
pop
test
push
lock
push
mov
xchg
retf
pop
into
and
sbb
test
push
lock
sub
or
call
add
mov
dec
ret
pop
or
pop
dec
push
repnz
je
leave
and
(bad)
test
add
sbb
adc
in
pop
mov
inc
cmp
in
xchg
dec
mov
mov
mov
xor
sbb
xchg
xor
js
jmp
call
and
adc
mov
retf
daa
ins
xchg
ds
add
ror
in
xchg
dec
add
add
pop
xchg
in
mov
mov
adc
rol
(bad)
fmul
xchg
add
mov
pop
mov
daa
dec
inc
add
mov
or
sub
adc
pminub
ss
dec
jmp
loopne
pop
dec
push
mov
mov
xor
fdivr
jne
retf
into
out
or
cmp
xchg
aam
mov
mov
pop
in
add
cwde
nop
cmp
or
mov
xchg
es
ds
test
mov
test
pusha
and
js
inc
cmc
pop
fmul
xchg
hlt
xchg
push
pop
dec
je
je
nop
dec
movs
jns
sbb
push
adc
xchg
dec
pop
outs
pop
or
cmp
xchg
cmp
mov
data16
aam
lea
(bad)
mov
push
sub
cmp
ja
cs
and
mov
scas
imul
lea
xchg
xor
clc
cmp
je
ret
cwde
push
jnp
or
xchg
cmp
fist
xchg
pop
scas
das
adc
iret
dec
ror
movs
addr16
cmps
movs
bound
add
(bad)
jmp
add
inc
les
es
aas
inc
fst
push
xchg
xor
push
icebp
add
daa
dec
mov
jbe
push
icebp
lods
in
xchg
xchg
mov
shl
xor
inc
xchg
jl
xchg
sub
cli
sub
sbb
xchg
mov
xchg
loope
xor
enter
xchg
add
loopne
xchg
daa
xchg
pop
add
mov
pop
push
test
mov
out
ror
or
xor
and
xchg
movs
test
mov
xor
in
jae
push
cwde
enter
rcr
cmp
or
and
cmp
or
sbb
or
push
mov
cli
loop
sbb
or
xchg
retf
in
push
loopne
pop
jl
xchg
out
jl
xchg
sbb
or
mov
js
jl
test
push
je
add
cmp
in
xchg
adc
adc
and
mov
pop
or
repnz
pushf
mov
mov
cwde
loope
mov
adc
or
repnz
and
cmp
mov
lods
je
xor
test
inc
test
test
add
dec
or
mov
adc
sbb
bnd
cmp
inc
and
mov
rol
inc
or
movs
mov
pop
push
or
int
out
xchg
and
cs
mov
xor
movs
mov
(bad)
add
jecxz
inc
jl
nop
sbb
xchg
and
adc
or
lea
and
inc
lea
or
cmp
jno
loope
or
ss
xor
pop
ret
adc
test
pop
dec
add
mov
sub
mov
cwde
mov
sbb
jbe
or
in
retf
popa
and
mov
sub
add
or
mov
jo
dec
ret
or
leave
pop
push
sub
push
adc
adc
mov
pop
out
add
push
push
lahf
lgs
mov
loop
into
inc
inc
cdq
cmp
je
mov
push
icebp
shl
sbb
cmpps
lods
js
inc
mov
cmp
xor
inc
js
sbb
fst
dec
loopne
pop
jle
shr
shl
mov
int3
lods
shr
mov
xchg
shr
mov
pop
adc
sar
cmp
pop
inc
daa
and
xchg
(bad)
dec
cdq
pop
int3
inc
pop
lods
jno
ret
jo
or
pop
pop
push
mov
mov
dec
cmps
into
sub
mov
fisttp
and
movs
push
xor
sub
dec
jnp
lods
push
xchg
jbe
sbb
call
adc
add
add
add
sbb
push
pusha
fstp
xor
loopne
add
ins
test
fdiv
sbb
ins
adc
sbb
jb
mov
add
outs
xchg
popa
inc
lahf
sbb
xor
inc
or
test
dec
das
das
dec
ret
pop
adc
dec
ret
pop
ror
xchg
lock
leave
add
ins
pop
push
stc
jnp
pop
clc
mov
push
fwait
mov
or
test
sub
add
popf
cmp
cs
in
mov
push
push
adc
icebp
int3
rcl
mov
inc
jecxz
mov
mov
cs
scas
cmps
iret
pop
sbb
adc
push
test
add
adc
ret
xor
jge
jbe
inc
nop
sbb
inc
adc
mov
or
push
(bad)
aaa
je
outs
push
sbb
inc
lods
jnp
sbb
and
les
pop
xchg
inc
sbb
or
mov
mov
imul
sub
mov
jmp
mov
and
push
fisubr
or
pop
xor
das
dec
add
add
not
and
sbb
and
push
ss
jmp
int
jmp
add
and
shl
mov
nop
mov
shr
jae
(bad)
call
hlt
push
out
cmps
adc
loopne
pop
aaa
cmp
ret
mov
xor
mov
nop
lods
inc
dec
xchg
je
sbb
test
test
or
jns
xchg
pusha
or
stos
add
xchg
rcl
pusha
add
leave
and
cmp
add
and
and
add
jno
xor
mov
in
push
imul
cmp
inc
outs
ss
sbb
(bad)
dec
loope
inc
add
inc
shl
repnz
(bad)
sbb
jmp
push
(bad)
cmp
or
daa
int3
cmp
cmp
sbb
inc
jo
rcl
mov
mov
inc
inc
ins
xchg
dec
add
adc
in
cmp
aam
shl
xchg
sub
sbb
adc
xor
mov
and
mov
jge
or
adc
hlt
mov
jge
test
cmp
sbb
and
cmp
jg
jnp
out
jmp
xor
jmp
mov
add
das
push
pop
ret
sbb
lahf
es
mov
or
test
icebp
lock
inc
jne
jge
add
push
mov
push
cmp
inc
xor
ret
in
test
loopne
xchg
adc
mov
xor
mov
ror
sbb
xor
es
sub
or
jmp
fwait
sub
or
movs
gs
pop
xor
fs
(bad)
fnsave
mov
add
jl
sbb
sub
jecxz
les
or
xchg
push
dec
sub
retf
fwait
sub
mov
nop
adc
jg
add
out
ss
aam
adc
call
jae
pop
sub
mov
pop
ins
fmul
pop
pop
add
mov
add
xchg
rcl
push
in
dec
cmp
out
jl
or
mov
sub
mov
xor
les
movs
dec
add
xchg
fisttp
jbe
sbb
dec
sbb
scas
sbb
bound
dec
add
or
cwde
sahf
or
fs
fisubr
pusha
cwde
(bad)
sub
jbe
aaa
dec
mov
mov
cmps
lods
out
xor
hlt
and
rol
or
cld
mov
adc
jo
lods
add
jo
test
add
inc
adc
add
enter
push
cmp
adc
stc
or
pop
add
xor
sbb
in
bound
icebp
or
push
sbb
and
xor
lods
stos
aas
sbb
iret
lods
or
xor
mov
sbb
jne
dec
mov
push
in
add
or
sbb
icebp
aas
push
fwait
ins
pop
cmp
jne
mov
jmp
xor
pop
add
nop
call
jne
loop
aas
(bad)
cwde
je
push
sub
or
or
mov
push
pusha
imul
and
jle
dec
or
push
push
jp
cmp
pop
mov
xor
mov
jle
in
adc
mov
popa
jl
mov
test
add
add
mov
sbb
sbb
pop
pop
ror
adc
shld
mov
rcr
sbb
mov
inc
pusha
fadd
std
jge
cmp
and
pop
adc
push
pop
mov
mov
pop
sub
loopne
or
loope
scas
dec
push
mov
or
into
pusha
repz
js
(bad)
jmp
and
jl
mov
cmp
and
popa
popa
xchg
jmp
sub
cwde
or
test
daa
test
xor
or
enter
push
test
push
push
inc
nop
loope
(bad)
jmp
mov
iret
xchg
sbb
inc
mov
aas
inc
shl
add
test
pop
xchg
xor
scas
push
mov
test
adc
push
arpl
and
adc
out
xchg
inc
jl
xor
dec
jne
adc
mov
jmp
and
push
(bad)
imul
mov
call
mov
jne
or
std
jmp
repz
add
mov
jb
in
dec
cmp
jb
retf
cmp
sub
pop
sbb
cmp
inc
cmp
xor
test
or
xchg
ja
ds
add
pop
adc
push
push
and
cmp
test
adc
xor
jecxz
jnp
xchg
sysret
cmp
sbb
add
test
jecxz
scas
lods
sub
mov
xor
mov
iret
pop
push
mov
sbb
inc
xchg
sub
shr
and
fs
jbe
push
lock
mov
and
pusha
lock
dec
mov
xchg
sbb
clc
dec
inc
je
push
or
test
dec
test
scas
jo
and
push
stos
jp
push
rcl
dec
dec
push
ror
and
pop
mov
push
mov
test
inc
sub
and
add
movs
outs
sbb
push
add
test
pop
and
pop
adc
cmp
aas
add
xor
cmp
call
pop
add
cmp
js
sub
movs
jmp
inc
or
test
or
adc
mov
jno
shr
add
or
inc
(bad)
popa
or
adc
fild
mov
xor
test
push
ins
dec
mov
push
clc
or
pop
inc
add
push
mov
fs
sub
push
adc
mov
sbb
mov
add
sub
cmp
ins
pop
adc
inc
icebp
mov
push
in
or
dec
inc
jecxz
or
push
pop
jecxz
into
ja
cmp
mov
call
mov
adc
call
adc
lods
arpl
aam
xchg
test
and
xor
(bad)
in
inc
bound
neg
(bad)
div
repz
add
aas
retf
dec
sbb
dec
and
push
xor
sub
jo
jmp
pop
das
ror
push
dec
pop
jl
rcl
push
or
sub
sub
(bad)
(bad)
mov
out
and
jle
jg
add
loope
pop
push
xor
call
jo
sar
psrld
add
cmp
jl
or
dec
sbb
loopne
adc
pop
push
test
ds
xchg
cld
mul
shl
and
lods
int3
adc
fsubr
pop
dec
jo
daa
push
sub
inc
aaa
(bad)
and
pop
xchg
cmc
lahf
cmp
fmul
mov
adc
sbb
or
adc
jo
xor
or
mov
mov
mov
rcr
add
fs
shl
out
lods
or
add
(bad)
and
lea
mov
fcmovne
push
das
add
inc
and
pushf
test
ins
shr
fwait
push
inc
(bad)
jae
or
adc
cmp
pop
jg
fdivr
adc
jno
scas
mov
scas
jmp
push
xchg
stos
mov
jno
repz
add
lock
mov
bound
inc
sub
shl
jecxz
clc
mov
dec
sub
adc
push
jnp
inc
jecxz
rcr
push
cmp
jp
fnstsw
cmp
movs
xor
jo
or
pminsw
ss
and
dec
cwde
or
mov
push
fsubr
mov
std
mov
es
adc
add
push
icebp
or
cmp
imul
lock
ficom
xlat
xchg
adc
outs
push
mov
popf
in
sub
add
adc
mov
or
adc
and
nop
dec
call
jge
xchg
(bad)
mov
mov
jecxz
fwait
sub
ret
pop
and
cmp
inc
sbb
jo
pusha
(bad)
dec
dec
push
lea
movs
mov
or
xlat
push
sub
xor
sub
fbstp
dec
cmps
sub
xchg
outs
lods
push
cmp
push
fcom
sar
or
daa
xchg
push
add
retf
push
add
enter
call
mov
in
lock
shl
aam
test
adc
ins
ror
sub
lods
test
dec
rcr
in
cmp
loopne
in
sbb
or
pushf
xor
cmps
and
adc
dec
push
push
sub
mov
and
outs
adc
loope
or
cmps
call
into
mul
loopne
mov
outs
fsubr
sub
dec
mov
adc
push
mov
push
(bad)
jae
adc
or
mov
adc
mov
mov
loopne
xchg
adc
mov
mov
pushf
add
cwde
mov
and
repz
inc
daa
and
sbb
adc
pop
ins
cmp
(bad)
ins
add
call
arpl
xchg
mov
dec
add
addr16
pop
sub
sti
mov
or
pop
push
sub
pop
push
inc
addr16
addr16
mov
stc
mov
adc
and
xchg
xchg
mov
add
(bad)
rcl
aas
ret
sbb
pop
popa
pusha
int3
dec
repz
leave
xor
cmp
mov
dec
jmp
iret
ja
and
and
mov
mov
lahf
mov
adc
adc
push
xor
mov
push
mov
addr16
add
fmul
pop
(bad)
pop
stc
xchg
imul
jecxz
dec
dec
add
sub
pop
inc
push
mov
jnp
mul
add
push
mov
xchg
mov
fsubr
inc
jmp
jb
pop
mov
gs
adc
or
xor
test
push
push
data16
push
into
sahf
lock
lahf
mov
xor
(bad)
mov
pop
ins
and
mov
mov
clc
inc
idiv
dec
jmp
aam
mov
inc
jmp
fsub
adc
sub
mov
pop
dec
dec
lods
or
add
dec
inc
dec
inc
or
cmp
sahf
fs
xor
push
adc
mov
fist
outs
add
ss
sbb
adc
sbb
pushf
sub
dec
mul
mov
jno
or
push
sbb
ret
cmp
pop
dec
sbb
jg
and
inc
pushf
xchg
aam
in
inc
in
jo
mov
pop
inc
dec
imul
movups
out
(bad)
jecxz
shr
push
cmp
cs
or
adc
jge
sbb
lods
cmp
adc
push
xchg
ds
add
xor
mov
or
sahf
ror
outs
or
add
add
mov
sbb
ins
ins
cmc
lahf
ret
aas
jg
mov
pop
das
inc
or
sbb
fwait
push
arpl
fneni(8087
xor
cmps
or
mov
cmp
add
inc
xchg
pop
add
push
unpckhps
sbb
dec
fs
add
std
out
hlt
rcl
jmp
add
mov
(bad)
jle
les
adc
cmp
push
adc
add
pop
jmp
ja
sbb
cmp
repnz
push
xor
push
sub
sbb
and
sbb
loopne
jg
xor
sbb
cs
pop
rol
or
pop
ret
jb
inc
mov
push
mov
add
dec
dec
inc
adc
cmp
push
mov
add
ror
xchg
add
sub
dec
push
mov
push
or
loopne
sub
sbb
daa
sahf
or
pusha
and
les
cmp
shl
pushf
pop
mov
dec
in
ins
add
or
fild
push
adc
push
jle
mov
jl
xchg
pop
sub
movs
mov
xor
push
mov
cmp
daa
mov
jmp
in
add
and
stos
or
mov
lods
add
xor
cs
xchg
and
mov
mov
call
out
or
xor
call
mov
adc
or
push
shl
adc
xor
adc
outs
xor
ins
test
movs
in
mov
sub
add
push
(bad)
xchg
push
in
and
int3
sub
into
ins
fcomp
push
or
(bad)
das
aad
shl
add
add
sbb
arpl
pusha
sub
clc
retf
les
iret
nop
stos
sbb
mov
outs
lea
aad
or
rcr
retf
movs
faddp
adc
cmp
loop
rcl
cmps
xchg
in
xor
out
push
movs
adc
test
mov
mov
repnz
repnz
mov
jl
bound
fs
jle
mov
ficomp
jp
movs
dec
and
les
popf
sub
repz
pop
ret
loopne
data16
mov
add
pop
btr
dec
adc
icebp
aad
test
cmp
push
cmp
ins
or
push
or
fbstp
push
inc
scas
mov
mov
mov
jne
xchg
popa
lea
add
mov
or
retf
or
out
mov
jecxz
adc
jg
add
add
or
adc
jnp
xchg
add
jb
rol
inc
push
mov
xchg
jecxz
js
lock
shl
lods
cmp
lea
retf
aam
add
inc
pushf
mov
dec
add
mov
inc
fadd
xchg
push
mov
sub
pop
mov
outs
push
add
xchg
adc
adc
pop
mov
push
fistp
xor
inc
cli
je
setl
lods
adc
or
mov
aaa
cld
clc
jle
int3
push
inc
cmp
cmp
mov
add
sub
inc
ins
or
lds
out
xor
xor
(bad)
adc
add
push
mov
pusha
sbb
nop
lahf
pusha
clc
loope
setle
add
sti
loop
add
inc
mov
lea
paddusw
inc
ror
mov
xchg
jne
or
dec
and
or
repnz
movs
dec
and
bnd
inc
outs
or
jmp
movs
mov
stos
movs
cmp
(bad)
xor
xor
ins
jle
sbb
sbb
imul
sub
aas
and
(bad)
in
aam
ins
pop
ret
mov
sbb
dec
dec
inc
int
cs
popf
sbb
jnp
ror
mov
add
push
inc
movs
add
loope
ret
mov
push
pop
stos
mov
pop
mov
jmp
sub
jge
loop
add
mov
mov
and
pop
in
add
xchg
mov
or
or
or
and
rol
cmps
xchg
je
fisttp
xchg
dec
push
pusha
add
jb
sub
jb
les
xchg
pop
inc
pop
push
or
mov
in
in
add
popa
or
iret
mov
and
cmp
xchg
mov
sbb
(bad)
dec
enter
cmp
add
or
push
rcl
inc
sahf
pop
ja
ins
and
xchg
outs
push
dec
push
lahf
sub
mov
mov
dec
inc
push
pusha
(bad)
mul
inc
cmp
scas
lods
jne
into
jmp
and
js
aas
mov
add
jmp
or
sbb
(bad)
sub
dec
ins
jl
cs
out
and
shl
in
nop
dec
je
jp
mov
push
loop
add
jbe
sbb
jge
adc
inc
jno
enter
inc
les
(bad)
or
mov
outs
shl
sbb
mov
popf
or
mov
inc
arpl
xchg
aad
pusha
rol
shl
icebp
xchg
adc
or
cmps
std
les
les
in
xchg
jno
ins
(bad)
ins
xchg
pop
add
repz
int3
push
int3
int3
rcr
pusha
xchg
jb
aam
rcl
retf
fild
sbb
push
jl
and
sub
dec
add
mov
xor
in
jo
inc
rol
xor
movs
out
aam
movs
mov
jo
jp
mov
jmp
fimul
ret
jmp
push
cmp
or
test
popa
mov
jns
push
dec
or
xchg
cmc
ss
cmp
in
loopne
sub
xor
into
clc
xor
xor
fisttp
pop
add
ds
adc
add
jo
sub
and
in
sub
push
xor
cmp
add
add
or
retf
movs
pop
rcl
xor
jge
add
movs
test
int3
popa
jns
mov
bound
into
test
jp
mov
mov
(bad)
jae
mov
cmps
xchg
adc
in
jo
xor
inc
mov
pop
dec
inc
ror
loope
jne
adc
push
js
mov
imul
push
jne
sub
sbb
push
pusha
mov
inc
add
push
hlt
and
mov
pop
dec
sub
popa
imul
pop
int3
xor
in
add
sbb
inc
xor
sub
inc
(bad)
loope
std
ds
pop
or
in
push
cmp
pop
cmp
inc
push
pusha
dec
(bad)
rcl
push
or
sub
push
mov
mov
shr
pop
cld
cmp
jge
stc
dec
xchg
inc
cmp
add
push
lock
hlt
pop
mov
sbb
nop
js
fdiv
xchg
push
jecxz
sbb
js
adc
hlt
or
add
into
fisttp
and
aaa
and
adc
lea
mov
cmp
lds
add
push
pop
or
dec
or
pop
inc
pop
xchg
pusha
mov
in
into
cmp
jle
add
mov
and
lock
xchg
adc
adc
dec
lock
push
hlt
cmp
sub
jne
cmp
jbe
mov
or
jbe
pop
push
aaa
sub
mov
call
mov
lea
mov
or
rol
sub
push
inc
js
js
ss
inc
push
jae
push
sub
adc
inc
pop
adc
shl
std
mov
mov
cmp
jbe
sbb
dec
add
add
loope
inc
xchg
cmp
xor
push
push
adc
icebp
or
push
clc
shl
or
ja
and
mov
jmp
pop
dec
adc
adc
aad
add
add
jmp
scas
or
push
dec
popa
xchg
pop
and
ror
add
cdq
add
xchg
les
add
push
mov
bswap
ret
inc
call
in
add
fsubrp
clc
add
int
popa
jb
xchg
cmp
cwde
pushf
pushf
fsubr
and
pop
inc
and
xor
push
pop
iret
push
pop
inc
jp
int3
pop
xchg
add
xor
mov
ins
cmp
mov
sbb
aaa
pop
cmp
mov
jl
lock
pop
push
pop
jmp
jne
leave
in
sbb
pop
pop
je
loop
ret
or
mov
dec
adc
bound
xchg
pusha
fist
cs
inc
push
add
cmp
jmp
icebp
sti
inc
and
push
jnp
cmp
sbb
or
das
call
or
movs
add
lea
movs
aam
mov
pop
mov
push
adc
add
and
cmp
push
jmp
jle
mov
push
(bad)
jmp
mov
xchg
lods
cld
dec
sub
jmp
mov
daa
and
push
sbb
sbb
pop
sub
lahf
ror
mov
mov
push
xor
inc
pop
fst
add
and
mov
sbb
je
clc
xchg
mov
push
mov
je
pop
xchg
cmps
mov
sbb
inc
cmp
mov
pop
pop
test
cmp
add
pusha
gs
pusha
test
xchg
dec
or
rol
cmp
sub
adc
ss
xchg
jl
mov
pop
add
pop
dec
cmp
pop
mov
nop
outs
fisub
or
sub
dec
push
xor
les
js
sub
imul
sbb
xchg
clc
xchg
push
mov
or
sbb
fst
fimul
push
or
adc
ja
xchg
push
mov
(bad)
cmps
and
add
sub
xchg
sahf
add
xchg
mov
into
xchg
push
aam
loope
fwait
xor
cmc
mov
xchg
and
loopne
cli
mov
sahf
aam
add
sbb
sub
push
stos
pushf
pop
xchg
cmp
mov
retf
ret
push
test
cmp
push
push
cmp
pop
push
sbb
add
inc
push
cwde
sbb
test
inc
imul
jmp
or
frstor
sbb
add
pop
pop
or
mov
mov
sbb
loopne
enter
pop
xor
xor
push
cmps
popa
cwde
in
sub
daa
jne
loop
xor
loope
cmp
mov
push
fnstenv
dec
push
add
not
add
inc
jmp
jno
and
sahf
leave
inc
and
adc
and
retf
ins
dec
loopne
jge
jae
push
push
dec
add
dec
int3
push
push
push
pop
int3
jp
mov
mov
sub
cmp
mov
inc
int3
dec
mov
inc
jne
repz
and
fdiv
int3
in
out
or
test
mov
sar
test
sub
or
sub
mov
and
adc
mov
cmp
je
sbb
(bad)
retf
jp
fsubr
jle
inc
mov
popf
pop
add
call
jnp
xor
and
lods
imul
mov
push
or
push
mov
add
push
lods
in
pop
adc
es
cmps
lods
push
jno
out
sti
(bad)
add
sti
movs
push
cmp
es
cmp
xchg
scas
add
dec
(bad)
sbb
push
jmp
je
dec
je
add
dec
mov
mov
adc
mov
and
movs
cmp
call
jo
xor
repnz
mov
dec
call
adc
(bad)
jne
push
pop
add
stos
add
fisub
push
jae
or
mov
adc
imul
adc
xor
loope
ret
mov
inc
aad
cmp
movs
fmul
pusha
sbb
js
js
pusha
repnz
out
pop
xor
sbb
les
pop
in
add
pushf
rcr
rcl
xchg
cdq
pop
ret
jg
xor
popf
rcr
(bad)
aam
xchg
lds
popf
push
test
aam
ret
or
test
xor
mov
xor
push
repz
adc
pop
and
jno
lahf
or
xor
mov
test
push
push
nop
test
mov
jle
lea
jmp
sbb
fimul
pusha
inc
movs
cmp
daa
pushf
dec
mov
ror
adc
hlt
cmps
rol
mov
add
sub
mov
hlt
lock
xor
test
sbb
or
dec
pop
dec
in
test
lea
or
dec
cmp
pop
popa
(bad)
jmp
mov
push
or
lea
jl
cmp
into
fistp
(bad)
cwde
push
xor
xlat
ins
mov
call
stos
movs
cmp
xor
jmp
mov
mov
ins
jl
dec
push
push
inc
sbb
adc
cmc
push
mov
adc
inc
call
mov
cmps
mov
ja
rol
adc
pop
cs
call
paddw
gs
addr16
mov
sbb
push
lods
sbb
(bad)
fmulp
mov
ficomp
xchg
rcr
jno
nop
dec
sub
xor
mov
or
dec
sub
lds
repz
rcr
aaa
adc
mov
or
cmp
mov
add
add
sbb
and
cs
mov
adc
xchg
mov
movs
test
xor
das
mov
call
mov
test
push
bound
inc
jle
ja
sbb
lods
push
movs
sub
sub
sbb
push
cmp
sub
or
push
pop
sub
xor
sub
xor
sbb
mov
jne
adc
jecxz
sub
inc
stc
adc
add
lds
pushf
aad
fmul
in
or
not
ins
xchg
push
push
in
loop
sub
into
xchg
loopne
loopne
mov
dec
jae
imul
mov
cmp
mov
and
fadd
(bad)
jnp
push
inc
dec
repnz
jne
cwde
ret
cmp
inc
jns
cmps
add
js
mov
mov
mov
mov
inc
inc
les
push
mov
(bad)
jo
pop
mov
inc
mov
and
pop
mov
cmc
test
rol
sbb
dec
enter
enter
adc
dec
and
retf
dec
jne
bound
cmp
adc
repnz
sub
jmp
jp
test
sti
lods
pcmpeqb
cmovns
adc
sbb
clc
dec
mov
inc
adc
sbb
pop
shl
sub
hlt
(bad)
pusha
add
les
dec
jp
mov
wrmsr
xor
lds
enter
daa
in
pushf
mov
fmul
xchg
cld
aad
or
add
add
inc
data16
sar
dec
inc
ja
adc
or
pushf
adc
enter
xor
nop
ret
clc
ins
jmp
push
or
cld
sbb
rol
jmp
inc
or
or
call
xor
shl
fmul
outs
cmp
xor
out
dec
xor
or
xchg
aas
push
pop
pop
sbb
ret
or
push
mov
call
neg
push
fisubr
out
sub
or
fadd
(bad)
or
xor
or
sbb
(bad)
enter
imul
xchg
mov
sub
enter
mov
out
add
popf
sbb
add
rol
sbb
jle
call
xor
mov
adc
sub
mov
add
cwde
jl
mov
aaa
fsubr
or
pop
repnz
je
outs
call
mov
clc
imul
clc
dec
add
push
loop
add
add
jne
out
lea
mov
xor
(bad)
hlt
inc
cmp
loopne
dec
ret
sub
xor
lock
(bad)
pop
sbb
mov
std
jl
cmp
add
(bad)
and
push
sbb
dec
mov
inc
mov
xchg
shl
ja
sbb
adc
pop
mov
push
sub
mov
and
push
in
arpl
jne
push
inc
sub
(bad)
xor
xchg
xchg
xor
jbe
je
std
inc
es
adc
and
or
int
sbb
ja
sbb
sbb
ja
stos
retf
fwait
or
and
or
std
jmp
adc
jo
les
xor
and
dec
pop
pop
test
dec
and
das
sub
add
dec
adc
add
mov
mov
daa
jo
fs
pop
sub
cmps
jl
pop
int3
adc
fisttp
pop
sbb
sar
sub
jae
push
jge
xor
outs
add
in
mov
je
mov
pop
cwde
or
pop
fidiv
clc
cmps
jne
jl
popf
stos
dec
movs
xchg
inc
mov
lods
test
sbb
lods
xor
dec
jge
aam
(bad)
ficomp
into
xor
jp
call
bound
dec
adc
xor
fdiv
enter
ja
lahf
xlat
inc
cmps
push
addr16
out
add
fdiv
pop
clc
test
mov
xor
ror
sahf
xor
dec
call
add
clc
and
push
and
mov
jp
mul
add
push
inc
xor
jo
sub
adc
sub
repz
jb
mov
adc
(bad)
dec
jp
sub
cmp
jle
sub
sbb
mov
popf
add
inc
inc
pop
mov
int
jge
xchg
mov
jecxz
adc
jl
mov
and
and
inc
mov
add
(bad)
xor
outs
enter
jns
test
push
inc
sbb
je
mov
fst
dec
clc
mov
or
shl
xlat
or
xchg
push
lods
or
mov
and
xor
dec
jmp
dec
add
inc
ss
sbb
mov
or
mov
inc
mov
adc
loopne
and
add
das
mov
repnz
sub
or
mov
inc
and
adc
xor
or
pop
pop
fild
or
sub
popf
fild
popa
xchg
sbb
bound
into
cmp
and
pop
repnz
sbb
or
dec
imul
lea
icebp
pop
pop
and
pop
adc
sbb
mov
xor
loopne
les
out
xor
std
and
push
fisttp
or
into
push
cmp
inc
sar
pop
(bad)
pop
retf
sahf
xchg
ret
add
or
mov
ret
std
jle
add
loopne
scas
shr
dec
adc
ja
jnp
adc
sbb
mov
mov
cmps
push
out
push
(bad)
cmp
icebp
xchg
test
or
ja
dec
in
pop
push
mov
pop
or
add
inc
cmp
push
and
and
pop
je
loop
xchg
inc
jne
loope
les
jbe
nop
in
outs
add
movs
xchg
push
jbe
dec
or
pop
push
push
mov
and
(bad)
mov
pop
aaa
adc
dec
sbb
mov
ja
ret
dec
jmp
inc
jmp
adc
and
shl
sbb
jno
sbb
or
or
jns
js
push
outs
jmp
xor
push
loopne
inc
or
add
and
clc
xchg
or
and
jge
or
repz
sahf
mov
xor
jne
and
jae
(bad)
cmp
jmp
cdq
pop
pop
scas
sub
ins
cmp
adc
and
inc
add
outs
enter
and
dec
or
(bad)
jae
icebp
mov
ins
cmps
mov
jl
jne
dec
sbb
pop
xor
or
xchg
pop
or
ja
pop
aam
icebp
add
(bad)
rol
dec
clc
xor
sbb
push
dec
scas
sahf
fld
cvtps2pi
sbb
cwde
mov
mov
jne
jns
mov
bound
mov
adc
add
sbb
jge
cmp
push
mov
mov
mov
fdivr
outs
imul
jmp
gs
xchg
cmps
xor
sbb
adc
movs
mov
retf
jne
sub
pop
loop
jg
mov
jmp
movs
fmul
popf
mov
popa
xchg
push
or
xchg
cmp
clc
outs
pop
cmp
cmp
retf
sub
clc
retf
data16
jg
cmp
jle
rcr
adc
dec
push
mov
pop
sub
mov
loop
push
inc
mov
pusha
adc
or
push
push
test
mov
test
addr16
xlat
mov
xchg
in
mov
iret
jle
bound
or
adc
shl
cli
dec
mov
cmp
je
push
popa
lds
loopne
xor
add
cmps
sbb
sbb
mov
sbb
xor
mov
pop
pop
shr
push
das
js
or
pusha
sub
popf
mov
inc
sbb
inc
inc
add
lods
adc
lea
fcmove
daa
cs
pop
mov
dec
and
push
adc
mov
mov
loopne
sub
push
sahf
leave
cwde
sub
jb
sbb
sub
and
add
push
cmp
div
sbb
mov
or
pop
sub
shl
cmp
push
pop
xchg
ret
jnp
push
jmp
das
sub
dec
(bad)
push
cmp
pop
inc
sbb
inc
mov
or
test
shr
outs
fld
inc
scas
jo
call
pop
(bad)
das
bound
cmp
adc
test
pop
or
push
test
dec
cld
out
jle
fisubr
shr
cmp
je
push
hlt
adc
ds
cmp
push
clc
jmp
xchg
inc
sahf
movs
ds
in
jmp
in
hlt
push
mov
mov
sbb
jno
sub
push
and
fucom
inc
or
js
add
xor
test
call
shr
sbb
or
lods
xchg
or
ds
xor
mov
cmp
push
retf
push
sti
or
(bad)
push
clc
retf
stc
ret
sahf
mov
mov
fiadd
test
push
xor
add
pop
fs
mov
push
les
into
push
cmp
test
mov
cmp
je
push
adc
adc
xchg
dec
adc
inc
les
mov
cmp
fidivr
test
jmp
shr
mov
pop
xor
pushf
in
add
pop
fst
addr16
std
and
fwait
or
mov
mov
js
jb
sti
sub
xchg
popf
fcom
inc
jmp
in
movs
xor
or
sub
mov
add
mov
sbb
aad
push
dec
test
stos
pop
adc
add
fdivr
xor
sub
aam
call
or
inc
outs
pusha
dec
ret
xor
adc
mov
int3
mov
test
push
js
sbb
inc
add
sub
(bad)
add
movs
les
jne
leave
retf
fwait
xchg
adc
cwde
add
xor
add
adc
ret
sbb
fst
jmp
adc
ror
jle
add
xlat
mov
push
mov
stos
mov
or
sar
mov
aad
mov
xlat
outs
xchg
jge
adc
test
retf
pop
mov
ret
fcmovnu
add
cmps
sbb
cwde
fdivrp
fmul
mov
loopne
add
xchg
call
loope
add
xchg
imul
out
xchg
(bad)
sub
les
or
jno
push
rol
or
and
push
jno
rol
cmps
adc
xor
dec
cwde
and
mov
jns
push
shl
jge
xor
push
adc
ss
pop
xchg
jmp
not
ss
mov
push
xchg
and
mov
mov
push
add
adc
adc
push
push
outs
jp
dec
inc
dec
or
adc
pop
add
jne
or
sub
cld
mov
mov
jo
cmps
jle
xor
sub
test
mov
ror
sti
inc
jb
cld
movs
ret
xchg
push
leave
mov
movs
das
jns
stc
movs
mov
mov
xchg
mov
push
xor
fidiv
ret
dec
lock
push
mov
ret
popa
mov
arpl
mov
inc
push
push
xor
inc
fdiv
or
mov
stc
fld
lods
or
je
lods
cmp
shl
lahf
fucomip
jbe
adc
adc
je
test
jecxz
ss
push
loope
arpl
add
jecxz
aam
dec
cli
push
pop
je
add
(bad)
or
and
push
test
loope
mov
je
dec
xchg
ror
add
or
cli
loopne
repz
test
add
jle
mov
add
sbb
loopne
das
outs
mov
jbe
pop
out
fcmovu
mov
popf
out
sub
or
or
add
lock
add
and
pop
inc
adc
sbb
nop
inc
outs
test
(bad)
es
fcomp
mov
pop
cmp
lea
mov
movs
mov
push
hlt
in
sub
push
push
cmp
aas
cmp
dec
cli
lock
loopne
sets
mov
mov
lods
jbe
xchg
fst
fwait
push
push
test
imul
add
fisub
mov
aas
adc
push
adc
ins
sbb
add
inc
inc
mov
icebp
enter
ss
pop
aas
outs
mov
fld
fldcw
and
mov
jmp
sar
or
into
ret
pushf
sub
push
adc
pop
xchg
inc
inc
loop
pusha
dec
or
pop
retf
push
pusha
clc
jle
scas
add
add
mov
repnz
aas
xchg
add
pop
call
and
icebp
inc
pushf
xchg
lods
sub
sub
or
pop
arpl
inc
push
lock
sti
add
xchg
outs
loopne
jmp
cmp
clc
push
and
mov
inc
movs
jae
xor
dec
and
jmp
mov
jl
or
lock
bound
adc
test
cwde
pusha
xor
mov
pop
mov
and
push
arpl
sub
aaa
jl
hlt
or
and
mov
lahf
fsubr
out
outs
mov
test
inc
ss
or
lds
xchg
inc
xlat
xor
xchg
fimul
and
push
xor
imul
push
es
xchg
jmp
fcmovnb
outs
inc
lahf
adc
pop
(bad)
lds
inc
sbb
inc
xor
clc
ds
dec
xor
loopne
and
call
or
lods
and
pop
repnz
xor
adc
and
loope
jb
test
adc
mov
and
data16
pop
push
mov
push
adc
cmps
pop
and
mov
pop
test
sbb
daa
push
inc
adc
lahf
test
mov
fcomp
xor
dec
pop
jmp
add
ins
xchg
call
in
cld
xlat
into
push
outs
in
jae
fadd
mov
rcl
cld
test
pushf
adc
push
push
mov
sar
in
xor
xchg
out
inc
mov
std
adc
sbb
clc
es
xchg
xchg
dec
jbe
xchg
gs
and
sbb
pop
aam
sti
lea
add
mov
rol
mov
push
lds
adc
push
int3
add
shr
outs
movs
mov
cmp
imul
das
adc
push
sub
sub
mov
add
addr16
ror
cld
clc
mov
jbe
cmp
xchg
outs
sbb
icebp
pop
sbb
setns
add
inc
and
inc
and
lods
cmp
xor
push
rol
adc
adc
adc
loope
push
xchg
or
xchg
push
push
lds
inc
clc
not
pop
pop
add
jbe
pop
pop
unpcklps
sbb
test
(bad)
push
pop
int3
fadd
ds
test
mov
xor
dec
push
test
add
cld
pop
ins
xchg
(bad)
add
arpl
mov
pop
test
add
adc
cmp
rol
dec
(bad)
xchg
sub
lods
sti
mov
movs
pop
add
cmp
mov
xchg
cmps
mov
pop
and
outs
push
xor
or
mov
ror
aam
fldenv
xor
sub
mov
xor
clc
inc
xor
or
cmp
pop
push
call
jne
int3
inc
add
bound
stos
cwde
push
pop
enter
add
and
shr
in
or
pop
les
cmp
or
cwde
cdq
sbb
jnp
dec
jb
or
ins
add
mov
jno
inc
jns
cmps
gs
dec
push
push
and
dec
xchg
out
sbb
cmp
sbb
xchg
and
outs
arpl
(bad)
xchg
push
push
ror
popf
das
ficom
das
pusha
mov
sbb
loopne
add
call
inc
mov
xchg
sahf
scas
enter
mov
call
ins
sbb
sbb
cmp
and
clc
fimul
call
arpl
imul
lods
adc
pop
lods
add
xchg
fsub
pop
fmul
fiadd
fnstenv
cmp
add
xlat
adc
fsubr
or
dec
pop
or
adc
cmp
dec
les
pop
inc
sub
push
dec
sub
or
es
xchg
cmp
xor
mov
stos
(bad)
in
addr16
jae
adc
push
mov
xor
sbb
xor
sbb
movs
pop
and
sar
cmp
retf
mov
push
int3
push
loopne
mov
shl
popa
sbb
sbb
adc
int3
sub
or
push
push
jmp
sbb
mov
xchg
and
mov
sbb
sub
cmp
repz
xor
ret
adc
and
mov
pop
rsqrtps
fs
inc
inc
(bad)
xchg
pop
hlt
mov
movs
adc
add
sahf
add
sub
cwde
mov
cdq
add
push
inc
int3
dec
mov
sbb
cwde
rcr
mov
lods
out
into
and
out
inc
inc
aas
mov
mov
and
push
push
retf
dec
int3
ins
fiadd
je
fdiv
fwait
call
jae
dec
nop
test
xchg
sti
push
gs
call
shl
mov
lea
and
mov
and
(bad)
pusha
inc
lea
popf
sbb
inc
add
ja
xchg
std
jg
hlt
adc
clc
or
pushf
retf
add
add
or
mov
or
adc
dec
add
adc
push
pop
mov
dec
mov
movs
mov
lods
enter
int
ja
jecxz
or
in
jge
pop
call
adc
inc
nop
dec
outs
rcl
inc
or
mov
mov
xchg
jne
adc
cmp
add
push
ins
sbb
inc
inc
inc
or
adc
bound
xor
xor
mov
int
mov
jb
loop
push
lahf
xor
sbb
retfw
lock
mov
sbb
adc
mov
ins
or
fnsave
pusha
add
jnp
xchg
inc
sahf
and
lods
add
movs
add
add
push
xor
push
aas
movs
ret
out
push
mov
sbb
jno
loope
js
fimul
cdq
div
imul
mov
jecxz
adc
add
add
mov
jne
das
mov
je
sbb
adc
sub
lock
jo
fistp
adc
loop
adc
push
call
outs
add
in
mov
adc
popf
lods
mov
dec
jnp
cmp
nop
sbb
scas
mov
cli
test
popa
movs
fadd
mov
loope
mov
retf
loope
jp
addr16
mov
imul
ret
arpl
test
jb
jo
or
mov
push
cmp
lds
adc
retf
or
cmps
mov
pop
std
inc
push
dec
add
pushf
mov
cmp
mov
cwde
cwde
mov
adc
xchg
adc
arpl
or
pop
shl
mov
jns
rcr
cmp
inc
fnstsw
push
mov
and
cmps
jle
push
mov
mov
enter
adc
mov
adc
fidiv
push
int3
push
outs
dec
pop
test
(bad)
das
mov
ss
ret
jge
(bad)
mov
cdq
add
sbb
adc
test
test
add
mov
loope
test
cmp
clc
xchg
jno
mov
mov
(bad)
mov
mov
add
in
mov
lds
sub
xor
inc
cmp
xor
mov
cdq
push
or
mov
jl
or
inc
jge
or
jo
les
stos
pushf
adc
test
mov
xchg
sar
(bad)
data16
sbb
or
xchg
adc
or
lea
push
push
xor
call
xor
cmps
xchg
push
fs
nop
and
das
add
push
popa
xchg
mov
sti
add
loopne
pop
or
arpl
or
push
push
push
inc
sbb
or
ret
rcr
inc
pop
xor
adc
adc
mov
pop
xchg
or
int
inc
or
adc
icebp
ror
adc
(bad)
call
iret
pop
or
add
retf
int3
call
int3
jecxz
mov
dec
push
xor
gs
pop
push
sbb
adc
mov
shr
ja
or
mov
sar
jmp
sbb
movs
mov
xor
mov
cmp
in
sbb
cmp
je
fdivr
in
pop
sahf
adc
mov
mov
pop
cmp
adc
xchg
sbb
mov
or
push
sub
in
mov
sbb
mov
lods
push
inc
adc
pop
or
mov
dec
jecxz
push
dec
js
mov
fld
mov
xlat
fcom
rcl
dec
xchg
add
xor
int3
and
pop
inc
imul
sub
test
pusha
ins
mov
or
clc
push
fst
nop
push
hlt
mov
xchg
or
lea
mov
dec
add
mov
adc
mov
xor
push
xor
movs
jbe
pop
retf
int
or
xor
inc
adc
gs
or
jns
stc
pop
movs
xchg
adc
push
test
shr
pop
fcomp
or
or
inc
jmp
lods
ja
shr
retf
inc
mov
(bad)
push
push
sbb
retf
xor
mov
pusha
xchg
(bad)
ret
iret
and
add
retf
(bad)
xchg
push
loop
mov
loop
rcl
retf
stc
sbb
xor
loopne
xchg
xor
sbb
add
call
sbb
adc
ja
sbb
jmp
cmp
or
adc
call
loopne
mov
mov
sub
push
das
lods
dec
inc
nop
lahf
and
push
adc
add
call
icebp
imul
fnsave
popa
pushf
mov
stos
xor
jo
adc
push
jmp
es
test
cmps
dec
adc
mov
and
lods
aas
add
jmp
push
push
cmp
es
(bad)
pop
or
dec
outs
cmp
and
mov
inc
add
cmp
jl
or
movs
cmp
xchg
movs
or
dec
jmp
pushf
shl
or
fcomp
in
jb
sahf
call
and
out
or
sahf
or
ret
sbb
xor
cmp
jmp
cmp
sti
sub
jne
cld
lahf
gs
mov
jae
and
or
test
pop
cs
loope
xor
sbb
mov
movs
aad
nop
sahf
bound
xchg
ja
inc
pop
into
mov
pushf
dec
sbb
int3
or
mov
ror
out
aam
stos
imul
sbb
xchg
mov
cmp
adc
push
mov
aaa
inc
stos
rcl
or
pushf
je
fmul
outs
jmp
cmp
add
inc
adc
and
loope
imul
inc
jl
cmp
test
das
popa
mov
adc
mov
ins
jno
sub
or
push
shl
test
sub
fstp
and
fstp
sbb
ins
inc
test
or
sub
dec
jge
lods
mov
jne
or
push
cli
or
inc
mov
int
push
sbb
adc
jle
and
and
jle
push
js
dec
movs
fsubr
jne
lock
shl
(bad)
push
int3
lods
and
push
aam
cmp
aam
inc
or
fwait
xchg
inc
int3
sbb
outs
sbb
inc
pop
pop
inc
jecxz
xchg
pop
xor
bound
push
or
adc
cmps
inc
adc
ins
add
ja
xor
sub
mov
fmul
mov
adc
ins
jmp
pushf
xchg
jnp
dec
lea
push
imul
ror
lahf
fst
dec
and
lods
and
sbb
mov
xor
mov
nop
push
mov
imul
cmp
lods
lock
dec
movs
adc
dec
ins
cmp
mov
sbb
sub
and
test
movs
xor
sub
outs
push
push
adc
dec
and
cdq
pop
les
jmp
mov
mov
mov
mov
adc
add
lea
push
push
inc
rcr
(bad)
mov
nop
xchg
clc
sar
jo
dec
popf
adc
jge
or
cmp
mov
je
fld1
xchg
ins
adc
jl
mov
pop
xor
jmp
shl
and
sbb
adc
call
cmps
(bad)
fisttp
or
std
or
mov
push
push
mov
dec
xor
in
gs
xor
std
movs
inc
or
push
fisub
mov
or
cmp
cmp
xchg
mov
test
sub
cmps
jne
xchg
cmp
fxtract
clc
dec
pop
repnz
mov
inc
sub
mov
inc
sub
adc
jmp
jo
mov
mov
ss
mov
and
sahf
add
rcl
and
adc
xchg
cmp
add
movs
pop
xor
ficomp
pushf
sub
inc
dec
bound
xlat
push
add
xor
scas
xchg
add
or
dec
mov
movs
adc
push
rol
or
jmp
jns
dec
std
add
pop
cmp
mov
sbb
into
add
sbb
dec
or
mov
ret
adc
out
fs
lods
ret
pop
add
adc
add
mov
aad
lea
xor
push
clc
add
scas
cdq
sar
push
mov
pop
push
popf
xor
ret
pop
retf
add
fmul
xor
xor
movs
or
jge
js
xor
sar
xor
and
inc
add
or
arpl
stos
mov
addr16
sahf
loope
mov
sbb
jo
les
or
or
mov
add
ret
add
adc
sub
or
into
push
pusha
push
adc
sbb
xor
inc
sub
adc
leave
mov
push
mov
jae
sbb
retf
cmps
cmp
(bad)
xlat
jg
xor
mov
sub
nop
inc
mov
cmps
and
or
mov
sub
pop
sbb
sub
cmp
(bad)
movs
pop
xchg
cmp
mov
ins
or
push
add
js
or
push
jne
aas
adc
fwait
adc
cmp
cmps
test
jns
xchg
or
ror
push
sbb
test
add
sahf
xor
cli
push
push
pop
pop
push
mov
shl
es
push
pop
sbb
stos
popa
aaa
mov
and
cmp
jp
jge
rol
jmp
cmp
out
mov
ret
(bad)
ja
adc
imul
es
push
pop
xor
add
xor
mov
sbb
cmovo
popf
sbb
cmp
jmp
inc
or
sub
inc
inc
sbb
add
pop
ja
or
or
(bad)
sub
cmp
jne
daa
add
push
mov
mov
mov
push
pop
inc
pop
mov
test
mov
inc
sub
add
sub
push
adc
dec
jg
and
adc
add
pop
or
pop
push
mov
jmp
and
lods
je
sbb
pop
xchg
in
les
push
mov
add
mov
cmovo
imul
sub
push
pusha
les
add
or
leave
idiv
or
dec
adc
fsubr
mov
xchg
add
push
mov
cmp
sub
or
pop
add
add
pop
cmps
rcr
sbb
mov
dec
xlat
fadd
popa
out
mov
pop
stos
xor
mov
lds
dec
inc
clc
sbb
and
cmp
cmc
adc
clc
movs
(bad)
fist
or
test
shl
loope
pop
jg
push
loop
adc
sub
ss
jae
fdivrp
jne
mov
sbb
and
mov
pop
data16
sbb
xchg
and
xchg
adc
inc
cmc
int3
mov
adc
cld
js
inc
add
aas
or
lahf
and
icebp
js
cwde
stc
fmul
jp
jmp
nop
add
ins
cmp
repz
stos
clc
pop
pop
cmp
outs
sti
dec
xchg
outs
or
and
mov
aaa
gs
push
add
rcr
and
add
ins
pop
adc
leave
adc
add
mov
in
pop
cmp
add
pusha
mov
or
mov
or
and
mov
xchg
into
xchg
mov
scas
mov
pop
mov
dec
test
mov
je
sub
sbb
push
xor
sbb
push
(bad)
in
push
outs
pop
or
add
inc
mov
(bad)
sub
mov
add
mov
mov
push
call
push
or
xor
pop
test
test
or
and
jmp
adc
ins
jno
push
movs
cmp
and
lods
xchg
(bad)
push
add
inc
and
pop
test
je
jmp
outs
inc
push
xchg
inc
push
pop
or
mov
and
scas
mov
and
dec
movs
push
idiv
jb
lods
mov
sbb
push
adc
push
cmp
shl
pop
sub
dec
pushf
jmp
mov
xchg
(bad)
xor
adc
add
int3
(bad)
push
mov
addr16
fwait
les
mov
call
std
ins
dec
lods
sbb
cmp
outs
mov
pop
jae
retf
les
jge
or
loopne
mov
xor
data16
shr
and
fwait
les
cmc
xlat
sbb
sbb
xchg
cmp
add
popa
sbb
mov
sbb
pop
inc
xor
lods
dec
js
test
in
loopne
mov
sub
cdq
clc
adc
mov
pop
lahf
jge
and
adc
mov
push
jo
mov
ins
dec
sub
jmp
addr16
jae
and
add
test
jp
stos
jmp
mov
ds
and
push
mov
add
xor
fs
inc
xadd
shl
inc
push
aaa
cs
sbb
nop
push
mov
pop
mov
(bad)
cwde
mov
xchg
cmp
xchg
or
push
cwde
adc
cmp
pop
cmps
outs
dec
push
push
sbb
xor
add
movs
xchg
adc
movs
ds
in
xchg
mov
jno
mov
inc
inc
or
mov
xor
rcr
ja
inc
imul
add
lock
lahf
jg
and
ret
jne
(bad)
in
xchg
shl
scas
push
xor
sahf
mov
and
nop
add
sbb
ss
mov
cmps
lock
out
jl
test
icebp
cmp
inc
push
adc
xchg
iret
call
push
inc
push
mov
cmc
cmc
or
and
sub
(bad)
les
adc
lea
dec
or
test
outs
or
pop
and
push
push
popa
push
mov
je
adc
je
fwait
pop
xchg
add
test
shr
add
in
add
sbb
or
and
mov
mov
cmp
std
add
cmp
push
pop
std
mov
pop
mov
cmp
shl
dec
inc
sti
iret
mov
dec
js
sti
dec
in
cmp
jbe
pop
stc
test
iret
mulps
aam
sub
add
and
rcr
lea
jmp
add
ja
inc
leave
es
mov
adc
push
push
pop
bound
cmp
sub
std
and
shl
into
test
std
mov
lods
rcr
jg
dec
push
dec
xor
mov
and
xchg
es
gs
loop
mov
and
xchg
or
sbb
(bad)
mov
test
je
push
lea
cmp
retf
push
sti
sub
add
inc
hlt
pop
adc
pop
in
push
into
shl
loop
mov
push
xlat
cwde
aas
jne
fld
sbb
retf
in
sub
test
(bad)
mov
lods
jmp
jge
sbb
push
mov
and
ins
jmp
in
scas
pushf
mov
or
mov
or
out
sbb
scas
or
mov
xchg
jne
call
daa
adc
add
pop
cmps
jmp
aam
push
lock
aam
adc
add
shl
jnp
sahf
dec
dec
xchg
fmul
jmp
shl
neg
xchg
or
jmp
cmp
push
adc
es
or
push
vmovhps
sbb
fisttp
clc
sbb
inc
and
stos
pop
add
enter
or
add
dec
(bad)
das
dec
and
mov
pop
add
add
cdq
pusha
retf
pop
push
push
push
test
fsubr
loopne
(bad)
add
or
inc
add
sbb
sbb
dec
loopne
inc
sub
adc
inc
hlt
pusha
or
add
enter
jne
cmps
cmp
or
movs
(bad)
sahf
jmp
ret
adc
fcomp
add
dec
and
add
call
inc
inc
aas
es
nop
or
and
test
ret
add
or
adc
loopne
sub
jge
jge
aam
and
push
push
cdq
cmp
push
shr
add
add
cmp
jg
sbb
ins
or
scas
adc
enter
sbb
loopne
jmp
rol
dec
xor
lock
xor
cmp
cmp
pop
or
adc
clc
dec
xor
test
cmp
add
xchg
add
add
sbb
fnsave
lods
xchg
xor
mov
outs
repnz
or
mov
mov
mov
adc
jg
push
es
fwait
or
shl
repz
loopne
rcr
stos
sbb
mov
mov
pop
in
mov
push
pop
mov
ss
push
xchg
jecxz
inc
xlat
dec
shl
jae
js
in
repz
adc
or
mov
cmp
enter
pop
or
push
sbb
jo
push
xchg
lods
adc
inc
je
fcom
and
shufps
div
jp
in
mov
dec
sbb
call
mov
push
adc
cmp
sub
jo
pop
sbb
inc
xor
test
push
mov
push
cwde
jmp
push
add
jne
arpl
sub
mov
adc
jmp
out
icebp
or
pop
iret
cmps
ins
pop
(bad)
mov
jl
enter
inc
jmp
xchg
or
in
cmp
pop
dec
pop
test
cmps
mov
inc
stc
popf
shl
pop
add
jmp
jbe
cmp
imul
out
xor
and
sbb
scas
das
dec
es
je
and
push
and
push
inc
pop
pop
nop
enter
sub
call
sbb
pop
mov
push
bound
adc
jge
int3
or
dec
cmc
mov
and
xor
shr
fisubr
iret
xor
addr16
cmp
ror
sub
pusha
daa
fcom
mov
and
out
mov
cwde
ret
and
add
add
(bad)
ins
pop
repnz
nop
inc
push
inc
add
seto
mov
jne
pushf
jo
add
sub
fnsave
adc
in
mov
sub
or
dec
mov
and
ds
cmp
dec
inc
enter
dec
pop
shl
loopne
jb
dec
ror
dec
or
leave
retf
dec
jmp
shl
dec
push
jne
outs
add
pop
inc
sbb
xlat
pop
mov
scas
pop
adc
mov
mov
mov
xchg
jne
das
shr
popa
adc
stos
mov
pop
push
add
xor
pop
mov
sbb
test
xchg
int3
mov
sbb
cmp
add
inc
and
ret
shl
ds
std
outs
pop
add
fadd
cwde
dec
test
mov
sub
shl
shl
enter
dec
and
xor
and
jbe
pop
(bad)
aaa
lea
push
mov
in
out
sbb
cmps
test
cmp
inc
push
mov
xor
cmp
adc
sbb
(bad)
scas
adc
mov
retf
jmp
aam
mov
add
sbb
aas
mov
and
adc
inc
add
sub
or
dec
sbb
or
xor
or
sub
adc
leave
push
and
jae
cmp
popa
mov
mov
xor
dec
inc
add
sub
jge
(bad)
popa
jecxz
or
and
adc
inc
loope
ins
sub
inc
push
les
adc
jns
or
test
fmul
ud1
push
(bad)
cmp
or
xchg
mov
xor
push
nop
and
add
adc
mov
jae
fcom
lock
test
push
or
adc
cwde
sahf
or
sbb
cmc
cs
aam
mov
bound
mov
loop
sahf
sub
ret
dec
add
gs
in
mov
ss
ret
push
push
arpl
pop
mov
sub
push
enter
add
leave
inc
sbb
stos
push
jae
mov
in
imul
jne
add
push
dec
add
push
dec
push
or
adc
cmp
jae
pop
retf
mov
je
xchg
push
je
or
mov
sub
idiv
sbb
mov
push
xor
push
dec
xchg
xor
jo
xchg
fisttp
push
popf
mov
mov
push
les
jmp
fstp
fidiv
xchg
stos
dec
inc
(bad)
ror
inc
cmp
mov
test
adc
push
mov
ss
or
mov
icebp
push
or
push
jge
pop
add
inc
and
xor
loop
pop
xor
aaa
mov
in
sub
ins
mov
ins
test
test
enter
cmp
xor
push
cmp
pop
ficom
jl
cs
xchg
push
and
adc
adc
in
pop
inc
stos
mov
mov
push
dec
jnp
and
ins
sbb
and
dec
imul
and
cmps
into
adc
and
sahf
xor
test
sbb
retf
sbb
jecxz
fisub
js
or
push
or
and
xor
loope
push
cmp
bound
js
rcl
adc
jne
adc
cmp
add
gs
and
mov
int
push
dec
ret
daa
mov
jbe
scas
mov
pop
rol
jle
inc
cdq
mul
jb
nop
jl
or
mov
mov
imul
lea
xchg
adc
push
sbb
adc
adc
or
sahf
cwde
rcl
pushf
dec
jmp
pop
cmc
sti
lea
movs
mov
or
les
ror
outs
or
cmps
inc
inc
xor
(bad)
arpl
or
movs
sub
mov
or
or
pop
mov
call
jbe
imul
loope
dec
push
pop
repnz
gs
cmp
add
cmp
pop
dec
imul
sbb
jmp
mov
sti
mov
lock
(bad)
inc
mov
xor
dec
sahf
push
add
mov
in
add
pop
and
adc
sbb
in
push
mov
add
or
xchg
fsub
sbb
gs
xchg
push
pop
lods
sbb
popa
add
dec
jae
inc
add
jnp
jmp
icebp
outs
aaa
hlt
ret
cld
stos
dec
push
or
shl
adc
je
ss
lds
daa
int3
push
adc
xor
aas
fwait
xor
(bad)
addr16
retf
push
add
and
mov
bound
addr16
inc
inc
push
and
add
cmp
pop
enter
dec
rcr
adc
dec
fstp
xchg
inc
or
fs
jg
add
pop
push
add
sub
inc
rcr
add
jge
push
dec
pop
bound
loopne
dec
adc
js
int
inc
in
pop
adc
jmp
out
xchg
lock
ds
sub
fs
icebp
clc
scas
push
push
aaa
mov
adc
fwait
jp
les
adc
push
jne
jns
push
sbb
gs
mov
ins
and
sbb
dec
(bad)
and
fimul
cmp
jb
xlat
and
ret
push
mov
dec
xor
mov
inc
inc
stos
mov
retf
add
fsub
and
mov
shr
push
inc
shl
dec
das
mov
ins
retf
add
jg
lahf
xchg
les
push
sbb
data16
ret
push
mov
inc
int3
or
push
leave
adc
outs
sahf
fstp
aam
movs
pop
or
or
in
jb
dec
adc
add
(bad)
push
loop
fild
pop
js
add
inc
cs
inc
push
and
stos
pusha
rcr
sbb
ret
stos
inc
add
mov
shl
push
mov
ret
(bad)
pop
jb
lea
push
dec
retf
dec
mov
int3
ins
or
in
add
sub
or
lds
les
xor
or
sub
das
jecxz
jne
and
dec
pop
stos
push
xor
lock
shl
scas
bound
sbb
mov
fmul
and
dec
dec
div
and
in
sbb
fwait
inc
shl
lock
dec
out
es
aaa
add
fsub
sbb
mov
push
push
mov
clc
js
stos
push
shr
aad
adc
push
call
jo
jmp
sub
data16
add
movs
aad
dec
or
sbb
jle
adc
shl
xchg
dec
adc
jecxz
add
push
jne
mov
and
jmp
and
jbe
shl
ds
retf
mov
or
movs
adc
(bad)
push
dec
push
std
pushf
add
ja
aas
ins
mov
call
adc
pop
shl
mov
in
int
push
push
cmp
sub
ret
fidiv
mov
xchg
cmp
out
push
and
dec
cdq
rol
or
xor
daa
sbb
loope
adc
inc
cmp
ror
mov
inc
mov
inc
fs
adc
inc
add
sub
dec
stos
push
cmps
icebp
jae
inc
pop
add
jmp
sahf
mov
dec
loopne
in
mov
les
pop
and
xor
cli
into
adc
push
sub
jmp
rol
popf
repnz
push
es
push
xor
or
imul
jle
xor
lds
adc
sub
adc
ds
mov
add
mov
mov
pop
cwde
xor
loope
mov
sub
adc
in
shl
dec
add
nop
xor
adc
push
int
lods
ss
pop
call
in
add
jl
popa
sbb
scas
sahf
mov
cmp
lock
fcom
mov
ins
mov
mov
xor
xchg
xchg
pop
xchg
sbb
cmp
adc
mov
inc
sbb
add
sbb
fisttp
cmp
push
(bad)
sub
(bad)
or
add
ja
sub
and
adc
scas
push
pusha
ja
add
addr16
push
test
pusha
or
mov
std
iret
cmp
jle
(bad)
sub
lahf
sub
jae
push
xor
lea
cld
and
xor
dec
shl
push
push
jl
test
clc
xor
popa
sbb
sub
or
jecxz
push
sub
and
xchg
and
pop
ror
mov
shl
bound
pop
out
je
add
cmp
mov
ds
push
xor
and
cmp
sbb
cdq
mov
cmp
imul
movs
mov
mov
xchg
sub
or
test
mov
jo
inc
jecxz
(bad)
adc
jno
jb
push
jbe
leave
cmps
pop
or
xchg
sub
sub
mov
lea
cli
ja
ret
push
push
in
jb
jmp
popa
mov
xlat
adc
sbb
lea
sbb
adc
push
jge
retf
pop
xchg
jbe
add
enter
sbb
push
or
sbb
dec
cmp
mov
call
(bad)
sub
adc
sbb
cmp
fist
push
push
add
push
sahf
inc
inc
mov
dec
hlt
aam
in
xchg
adc
mov
je
push
ds
adc
jb
or
jbe
pop
fwait
jb
inc
jb
sbb
ja
es
mov
jl
push
jle
sbb
ins
add
add
push
xchg
cld
scas
mov
fcmovu
es
int
pusha
push
outs
sbb
enter
or
fsubr
push
mov
ret
add
fidivr
and
mov
ss
pop
(bad)
pop
clc
cmp
pop
clc
xor
aaa
pop
popf
inc
or
inc
mov
or
imul
dec
add
xor
xlat
jp
xchg
clc
pop
dec
xor
(bad)
push
dec
adc
rcl
adc
adc
xchg
or
adc
jne
(bad)
pop
jo
or
push
adc
xor
push
jnp
mov
inc
icebp
(bad)
push
icebp
out
jmp
sub
cmp
icebp
(bad)
push
dec
mov
loopne
lods
inc
mov
jb
lods
gs
int
call
mov
mov
xor
inc
inc
dec
enter
adc
out
inc
add
inc
adc
push
pop
hlt
push
out
pop
and
pop
dec
inc
mov
xor
and
add
jbe
mov
loope
repz
jecxz
mov
sbb
cwde
and
mov
inc
fild
scas
shl
or
stos
lods
mov
lods
stos
sbb
icebp
adc
mov
pop
(bad)
ins
(bad)
repnz
enter
ja
adc
ins
adc
xchg
cmp
and
inc
add
aas
clc
jle
add
jge
into
push
xchg
ror
adc
dec
jl
cmp
jns
mov
mov
pop
push
stos
mov
ror
pusha
lods
and
mov
inc
into
or
mov
or
movs
lods
mov
mov
movs
test
ds
push
push
inc
ficomp
inc
xor
xor
movs
adc
nop
imul
movs
add
iret
sti
(bad)
mov
sub
push
push
repnz
adc
cmp
retf
inc
add
stos
mov
or
aaa
mov
adc
pop
rol
push
inc
push
(bad)
shr
push
jg
cmp
push
sbb
push
jne
cmp
sbb
push
pop
add
sbb
pop
xor
jmp
mov
adc
add
arpl
cdq
mov
pavgb
cmp
add
and
or
push
dec
(bad)
jo
loop
cmp
in
pusha
inc
ret
sub
xchg
add
arpl
mov
ss
pop
out
pop
jne
aam
xor
adc
ret
mov
or
mov
sti
sbb
jg
sbb
inc
and
add
xor
jl
mov
dec
icebp
fiadd
shl
or
sbb
push
(bad)
(bad)
adc
push
sbb
jne
gs
sbb
jo
movd
jg
xor
mov
lods
lods
sbb
fcomp
pop
xor
cmp
outs
out
mov
or
out
sar
and
or
lds
inc
dec
add
(bad)
jl
sahf
mov
xchg
pop
mov
into
dec
add
add
pop
sbb
inc
movs
test
ds
jle
aam
hlt
icebp
dec
call
stos
ret
push
enter
inc
in
pop
ds
gs
cmps
cs
js
stc
neg
cmps
adc
jbe
add
lods
ror
or
sbb
push
push
jne
dec
push
pop
shr
fist
cmps
sbb
adc
scas
add
or
add
sbb
mov
xor
int
and
cdq
sub
add
movs
cmps
jns
push
push
dec
sub
or
aam
sub
stos
fcomp
mov
fisttp
popa
sbb
ss
cmps
push
test
cmps
dec
pop
loopne
mov
adc
jb
mov
fmul
add
sub
cmp
(bad)
in
cmps
inc
add
call
ja
xchg
xchg
add
and
arpl
and
lods
pop
inc
cmp
mov
pop
dec
xchg
mov
or
int3
cmp
fwait
inc
xchg
enter
add
lods
mov
jge
cwde
dec
xor
sub
xor
push
sub
pop
mov
or
mov
cmp
inc
mov
add
cmp
sub
jne
xchg
icebp
fidiv
xor
call
sahf
and
cmc
rcr
push
sahf
adc
imul
imul
add
inc
in
adc
ret
jb
inc
pop
mov
dec
adc
inc
repz
pop
test
rcr
adc
cmc
pop
ror
adc
bound
mov
adc
cvtpi2ps
pop
xor
gs
xor
je
(bad)
jne
pop
inc
add
test
je
mov
cwde
mov
push
add
push
fild
adc
xor
push
adc
mov
jns
mov
stos
leave
pop
cmps
pop
xchg
or
fnstenv
les
mov
cmp
mov
sbb
sbb
add
push
test
scas
mov
jge
popa
shl
push
pop
es
int
xor
cmps
push
stos
push
sub
jnp
add
push
add
imul
je
cmp
and
daa
push
or
mov
mov
sub
push
mov
inc
imul
ret
push
es
jecxz
sub
(bad)
in
stc
stos
(bad)
xor
stos
and
movs
adc
jne
xchg
sub
outs
xor
xchg
stos
repnz
ror
or
nop
jmp
or
jge
pop
sub
test
clc
or
aad
xchg
clc
fwait
push
pop
add
mov
dec
out
rol
mov
sbb
xchg
fistp
or
mov
or
add
or
sbb
ins
movs
push
dec
nop
pop
(bad)
add
es
dec
add
rol
lahf
xor
inc
cmc
adc
not
imul
aam
call
jb
cmp
inc
push
cmp
fisub
fadd
xchg
xor
jnp
push
fstp
add
out
mov
inc
in
scas
pop
push
and
call
push
xchg
(bad)
jmp
nop
push
jle
xchg
pop
mov
cmp
rol
pop
inc
and
fs
add
loope
mov
test
pop
pop
cwde
and
std
xor
inc
adc
lods
leave
add
or
inc
in
push
repnz
call
push
cmp
ror
xor
sbb
cmp
pop
nop
pop
push
add
or
call
lods
xchg
inc
cs
nop
sub
pop
test
or
push
push
add
and
dec
adc
jo
loopne
sub
pusha
std
xor
sub
mov
clc
add
push
and
rcl
mov
xor
retf
call
or
add
std
fcomp
ret
pop
adc
inc
mov
mov
jb
xor
mov
lock
inc
pop
ins
mov
dec
aaa
add
push
popf
jle
aaa
ret
bound
xchg
jne
dec
sub
(bad)
jnp
push
adc
mov
test
xchg
sub
or
pop
js
into
sub
adc
sbb
test
and
xchg
or
sbb
ret
mov
cmp
dec
je
jmp
jge
lock
dec
add
adc
or
push
xchg
scas
in
push
lock
jmp
mov
pop
inc
or
xor
jb
add
pop
add
add
rol
adc
cmp
xor
pop
and
int
push
or
std
popf
or
dec
cmp
(bad)
leave
or
add
adc
push
lods
mov
gs
push
jl
inc
into
adc
and
dec
loope
pop
or
mov
leave
ret
outs
adc
mov
in
add
pop
add
mov
cmp
ss
das
inc
int3
mov
and
retf
push
mov
mov
cli
retf
mov
cmps
bound
dec
shl
fimul
sbb
jb
fistp
sub
add
sbb
cmp
inc
inc
mov
sti
inc
sbb
dec
add
sub
pand
sub
and
and
cmp
or
xor
and
and
out
add
jb
cld
push
ja
adc
push
xchg
test
pop
xor
inc
xor
sahf
inc
or
jne
mov
les
imul
jmp
mov
push
mov
jno
jo
js
push
sub
sbb
add
cwde
fild
je
inc
xor
and
add
jmp
jbe
sti
and
pop
adc
push
dec
mov
mov
cli
imul
mov
push
mov
rcl
mov
mov
dec
or
cs
bound
pop
inc
dec
fld
add
push
pop
pop
add
xrelease
cld
fimul
push
xchg
adc
xchg
cmp
adc
movs
sbb
dec
jnp
or
je
sbb
ja
mov
sahf
push
jmp
sub
hlt
mov
popa
out
xor
jl
inc
lea
jne
xchg
fs
push
jmp
add
aas
xor
pop
jnp
sub
xchg
add
pop
add
mov
sbb
inc
and
loopne
mov
add
add
pop
paddq
into
mov
test
test
sbb
adc
cmp
adc
pushf
and
sub
and
hlt
pop
xchg
imul
mov
sbb
add
mov
loopne
push
fmul
and
dec
pushf
adc
mov
jecxz
les
pushf
jmp
jl
shr
outs
sbb
cmps
imul
add
(bad)
outs
aaa
ror
xchg
jne
jae
pop
jne
cmp
dec
lea
nop
clc
lock
adc
mov
xchg
nop
out
sub
push
call
push
push
sub
sbb
mov
rcr
out
bswap
and
cmp
call
xsave
add
out
jne
in
mov
xchg
mov
push
inc
cmp
call
cmps
iret
icebp
loope
gs
je
push
xor
aas
mov
push
les
add
pop
movs
adc
and
dec
or
add
dec
xor
sbb
ins
inc
ret
mov
popf
mov
sbb
add
arpl
and
adc
mov
div
dec
mov
pusha
xchg
in
movs
adc
xor
int
push
mov
shl
xchg
or
add
ret
pop
jmp
sub
xlat
push
adc
mov
add
xchg
js
sbb
xchg
or
jle
dec
pop
xchg
add
repnz
loopne
jbe
gs
mov
lock
ins
test
jno
imul
outs
jo
adc
nop
sbb
stos
xchg
xor
or
mov
jno
cmp
cmp
test
or
jno
popa
jle
clc
pop
pop
pushf
or
or
(bad)
movs
fidivr
dec
push
cmp
cmp
fwait
adc
push
test
loope
and
inc
or
or
add
aam
push
dec
jmp
mov
movs
bound
inc
adc
fimul
xchg
fistp
sub
sub
and
mov
add
add
mov
xor
ins
mul
jne
ins
sbb
imul
sbb
scas
imul
and
ins
mov
out
ret
ret
js
and
dec
ss
xchg
adc
sub
cmp
sahf
jne
and
xor
mov
and
lahf
daa
mov
push
or
push
sub
dec
in
mov
arpl
mov
(bad)
and
sbb
fwait
xlat
in
add
fwait
out
data16
call
jno
rol
jp
mov
cmp
loopne
(bad)
aas
retf
nop
adc
pop
cld
push
cld
lock
pop
cmp
or
test
arpl
ins
shl
sahf
loope
add
mov
add
shl
data16
jmp
mov
mov
(bad)
cmp
das
xchg
xor
adc
imul
adc
add
xor
in
sub
jo
cdq
aaa
adc
test
adc
cmps
jbe
daa
and
mov
push
out
inc
sbb
test
lahf
out
or
sub
push
cmp
pop
test
mov
cmp
cmps
je
mov
pop
xlat
push
mov
pusha
repnz
mov
xor
test
push
not
xor
add
mov
sub
and
xchg
aaa
xchg
mov
mov
ds
mov
sbb
add
std
ret
je
ret
(bad)
fcomp
pop
push
enter
pop
mov
dec
and
in
xor
jmp
inc
jne
push
in
add
shl
ds
mov
cmp
mov
push
inc
nop
ficom
ins
inc
add
leave
imul
and
and
scas
xchg
push
jnp
and
push
cmp
sub
push
mov
xor
pop
push
mov
into
pop
push
inc
sbb
add
mov
adc
add
mov
and
sbb
dec
push
cmp
adc
xchg
push
jecxz
ret
(bad)
cmp
and
cmp
mov
adc
popa
jg
adc
inc
popa
sub
pusha
adc
xchg
and
int3
xor
je
cmp
or
sub
mov
push
add
mov
sbb
cmp
adc
ins
pop
div
push
adc
dec
xor
adc
rol
push
(bad)
pop
pop
jo
pop
enter
adc
dec
mov
sub
dec
jae
or
pop
add
or
pop
cmp
mov
adc
jmp
jg
push
adc
push
xchg
or
or
sti
lods
ins
das
aaa
and
out
fstp
xchg
les
frstor
sub
or
mov
xor
inc
dec
jo
clc
fwait
mov
repz
sub
popa
pop
dec
sbb
(bad)
rol
xor
test
mov
inc
je
ss
xor
movs
sbb
or
je
jecxz
add
sbb
clc
dec
in
or
add
enter
or
leave
ficom
cwde
lods
cwde
pop
adc
push
or
cmp
add
retf
mov
sbb
jb
stos
adc
dec
sbb
jmp
movs
stos
sub
les
icebp
push
nop
hlt
pop
adc
int3
dec
jmp
add
push
adc
sub
ja
adc
or
and
add
adc
xchg
pop
push
adc
sub
cmc
dec
dec
pop
nop
adc
inc
inc
add
add
and
push
call
push
mov
clc
or
repz
inc
inc
sbb
rcl
stc
add
push
sbb
or
shl
daa
in
repz
or
dec
loopne
rcl
or
inc
add
inc
das
jmp
pop
lods
mov
iret
loopne
movs
ss
shl
lods
div
inc
push
mov
sbb
and
cli
cmp
hlt
push
pop
mov
jne
pop
add
push
fs
sti
(bad)
fadd
fs
cmp
add
mov
lea
inc
xchg
xlat
imul
and
ins
sub
jp
cmp
paddb
cwde
xchg
jne
pop
push
jge
into
syscall
mov
rcl
mov
or
push
sbb
or
push
loopne
daa
sub
pop
adc
fcmovbe
add
cmp
test
cli
mov
or
or
cmp
lahf
jno
inc
jmp
cmp
or
add
mov
fdivrp
movs
fisttp
sub
and
fimul
mov
js
rol
pop
xor
xor
add
(bad)
cwde
and
push
shl
lahf
arpl
loop
pop
std
daa
add
push
movq
in
dec
ins
sbb
push
mov
dec
and
movs
ret
enter
fmul
jbe
cmp
lock
mov
cmp
inc
or
not
js
mov
call
sub
sbb
or
pusha
push
xor
outs
jmp
int
sar
es
mov
jecxz
pop
in
and
and
sub
push
ds
push
push
sub
push
leave
std
jno
inc
xor
xlat
adc
loopne
in
jb
pop
ret
or
out
push
addr16
and
or
popa
xor
dec
cmp
inc
mov
xchg
aam
pushf
(bad)
out
jge
adc
xchg
cmp
jbe
shr
add
mov
jbe
sub
enter
shr
xchg
sahf
outs
mov
add
test
arpl
jno
ret
push
xor
mov
in
scas
or
sbb
stos
in
bound
popa
enter
and
cmp
stc
xchg
and
or
xor
adc
pop
mov
mov
mov
and
xor
add
dec
ret
lahf
pop
int3
mov
adc
mov
push
lods
add
ret
mov
xor
lea
int3
and
jne
dec
jg
inc
je
jge
mov
dec
inc
add
cli
fs
cmps
icebp
sub
sub
fidivr
neg
and
or
add
(bad)
lods
xor
pop
inc
cmp
adc
jl
jmp
aas
fs
test
push
cwde
enter
mov
fsubr
fwait
mov
push
mov
rol
fdivr
call
retf
fmulp
add
cmp
es
sti
or
inc
mov
ficom
inc
call
mov
add
jnp
or
adc
sub
sub
add
or
shr
enter
jno
les
ins
sbb
xchg
cmp
push
cmp
cli
or
hlt
pop
jo
cmp
mov
retf
pushf
lods
adc
xor
lods
or
jo
(bad)
ja
mov
je
pop
and
rol
rcl
shr
or
les
(bad)
iret
inc
hlt
push
aaa
xor
stos
xor
pop
xchg
or
repz
push
call
imul
add
lea
ins
fdivr
push
adc
add
add
adc
call
push
mov
icebp
or
div
(bad)
cli
push
pop
jns
jp
xor
add
mov
adc
cmp
push
or
ucomiss
or
retf
add
or
add
out
push
sub
sbb
mov
push
jne
jmp
mov
sbb
outs
push
pushf
mov
ror
rcl
or
and
(bad)
xor
fs
int
or
adc
xor
ins
or
mov
lock
adc
test
into
scas
sub
test
loopne
mov
or
ret
in
sub
or
shl
sub
pop
mov
pop
call
frstor
jne
lods
add
dec
imul
mov
dec
adc
mov
dec
retf
push
inc
mov
pop
cmc
sbb
xor
xchg
mov
inc
test
sbb
adc
mov
repz
(bad)
loopne
out
leave
ret
(bad)
jne
nop
adc
dec
in
xchg
lods
xchg
jle
cmp
push
mov
push
loop
sahf
and
xor
cmp
test
movs
repnz
or
adc
retf
push
fcom
or
mov
stc
nop
enter
mov
or
cmp
mov
stos
add
out
es
iret
cmp
test
loope
fcomp
or
inc
xor
add
dec
stos
or
sub
or
std
(bad)
cmps
xchg
sti
leave
dec
pushf
mov
jp
inc
sub
mov
loop
movs
jo
adc
inc
mov
in
sbb
popa
cmps
mov
mov
add
or
add
or
mov
movs
aam
mov
xor
jns
mov
imul
mov
push
cmps
sbb
lahf
sub
rol
mov
and
and
push
push
and
add
rol
sub
and
dec
fsubr
mov
mov
rcl
test
jl
movs
and
add
leave
fldcw
pop
cmp
adc
(bad)
xor
cmps
xchg
adc
dec
imul
add
aaa
and
and
mov
push
cmp
or
call
jmp
leave
dec
in
mov
xchg
inc
add
popa
mov
sub
cmp
cmp
jne
and
or
pop
call
inc
pushf
imul
pop
nop
lods
icebp
xchg
rol
xor
int
jo
lods
adc
or
and
retf
(bad)
mov
sub
lea
in
mov
mov
xchg
mov
adc
mov
xchg
pop
popf
inc
pop
aam
(bad)
jmp
xchg
mov
jno
adc
cmp
sbb
and
mov
adc
xchg
in
mov
cmc
popa
sti
jae
and
enter
add
adc
fcmovnu
nop
(bad)
and
push
jmp
ficomp
xchg
les
dec
and
jo
mov
mov
shrd
mov
scas
stc
out
pop
popa
xor
das
mov
add
mov
shr
sbb
jmp
push
push
mov
sbb
retf
js
fnstenv
push
mov
add
adc
mov
pop
enter
dec
push
push
dec
test
or
cwde
cwde
lea
and
repz
in
je
shl
test
adc
lahf
ja
int3
adc
or
cdq
pop
add
stos
and
inc
and
push
scas
push
pop
adc
or
xchg
scas
sahf
or
inc
jne
push
and
push
mov
test
dec
aad
sbb
add
xchg
push
nop
pop
lock
inc
hlt
clc
sub
hlt
push
fs
push
inc
and
cmp
(bad)
rol
cli
push
movs
lea
call
rol
retf
adc
sbb
mov
fwait
sbb
(bad)
movs
xchg
sub
jne
push
sbb
adc
or
mov
daa
mov
mov
pop
pop
gs
mov
sub
fmul
mov
mov
pop
push
cwde
push
mov
int
addr16
mov
jne
rol
mov
jl
jmp
ins
mov
mov
mov
and
adc
inc
mov
dec
cld
ja
je
cmp
pop
test
mov
jge
fsub
stc
mov
push
xchg
pop
add
push
push
push
mov
sub
sbb
jmp
add
xchg
jbe
outs
hlt
and
cmp
idiv
std
jae
dec
fdiv
clc
test
into
leave
xchg
js
dec
lods
sbb
bound
adc
adc
adc
jbe
pop
bound
imul
jne
xchg
dec
lods
xchg
and
aad
or
push
pushf
scas
adc
mov
mov
retf
hlt
les
outs
jne
jmp
dec
dec
jne
add
push
jmp
sbb
ret
data16
or
mov
mov
jne
cmp
jp
out
rcl
xchg
fmul
cmp
pop
gs
out
(bad)
xchg
movs
jmp
test
cmp
xor
adc
xor
cdq
jb
rol
iret
xchg
jecxz
aaa
xchg
sbb
add
rol
add
xchg
daa
xchg
and
mov
call
cmp
add
mov
retf
(bad)
sar
pushf
pop
fdivr
cmps
mov
in
and
aad
xchg
outs
cmp
push
lock
jne
outs
adc
mov
push
leave
xchg
mov
adc
xchg
and
mov
je
mov
add
cmc
not
mov
sbb
cmp
xor
cmp
in
stc
cmp
push
push
cwde
mov
xchg
push
jo
xchg
pushf
push
pop
add
mov
gs
xlat
xchg
mov
fs
cmc
ss
adc
push
and
cwde
mov
push
pop
push
sbb
jmp
dec
adc
pop
mov
lock
push
mov
fdivr
jo
add
add
dec
cmps
cwde
pushf
in
cs
pushf
pushf
inc
mov
xchg
or
jns
or
sub
cdq
pushf
push
sbb
sti
mov
clc
mov
rcl
mov
cmp
sub
adc
cmp
push
cmp
je
mov
ins
add
sub
xchg
sbb
inc
cs
pop
pop
movs
inc
mov
dec
pushf
add
inc
cmp
mov
les
inc
cwde
cdq
and
cwde
cwde
cmc
inc
or
and
clc
lock
inc
add
imul
les
or
les
inc
cmps
mov
aad
xor
int3
add
loop
cdq
or
add
sub
xchg
adc
and
sbb
movs
or
(bad)
mov
xlat
xchg
xchg
cdq
mov
pushf
or
repnz
jb
cwde
mov
mov
mov
mov
ret
and
loopne
mov
or
popa
stos
and
sub
jo
repz
jo
jmp
inc
adc
xchg
xor
cmp
sub
add
sub
call
push
out
pop
cmp
adc
add
jge
sbb
jl
sub
jecxz
ret
addr16
aaa
in
sbb
leave
imul
aad
cmp
aad
enter
jmp
add
adc
xchg
inc
dec
dec
xor
xor
inc
cmp
sahf
dec
add
pusha
or
in
loopne
fs
shl
push
push
imul
push
cmp
inc
mov
push
sub
sbb
inc
mov
rol
inc
and
mov
inc
push
cmp
mov
and
cdq
fadd
push
and
imul
xchg
xchg
jecxz
pop
fisubr
push
and
push
mov
adc
outs
test
daa
pop
mov
cmp
xchg
je
pusha
push
dec
rol
push
xor
adc
sbb
add
mov
jo
or
add
mov
les
and
bound
imul
xchg
mov
hlt
div
adc
in
push
xchg
out
xchg
hlt
xor
xchg
in
retf
nop
adc
dec
add
add
jns
xchg
popf
dec
add
and
add
xchg
pushf
inc
dec
add
mov
jp
(bad)
jge
mov
ins
push
push
nop
jmp
push
sbb
lods
daa
xchg
push
add
jp
imul
movs
adc
mov
or
pop
sbb
pop
xlat
dec
dec
and
xor
dec
mov
rcr
add
test
mov
push
mov
mov
pop
repnz
pusha
sub
popa
jmp
movs
stc
jbe
mov
mov
ret
jns
mov
or
lods
inc
and
mov
push
or
es
or
add
ins
(bad)
and
inc
add
xor
or
shl
inc
call
xor
mov
push
fdiv
xor
jp
imul
jl
das
test
rol
push
fbld
movs
jo
scas
add
adc
and
imul
xchg
mov
shr
add
enter
aaa
dec
enter
scas
bound
add
or
pop
add
test
pop
adc
sub
stos
push
mov
retf
leave
out
test
add
in
mov
push
int3
mov
pop
mov
cmp
xor
mov
sub
cmpxchg
test
(bad)
(bad)
aaa
sbb
das
dec
push
repnz
jne
adc
pop
mov
(bad)
sbb
mov
push
pop
xor
outs
mov
rol
daa
dec
sbb
call
jmp
push
mov
test
xchg
xlat
pop
cmp
pusha
xor
or
call
mov
sbb
cmp
inc
pop
inc
cmp
add
(bad)
pop
or
dec
dec
add
push
div
pusha
mov
and
push
ja
pusha
jbe
loope
sub
imul
(bad)
pop
pushf
pop
mov
shr
dec
pop
dec
dec
mov
sbb
push
sti
movzx
shr
jecxz
sbb
mov
cmp
mov
jnp
adc
je
js
add
(bad)
jne
fs
std
dec
or
jle
lea
aas
mov
cmp
fnstenv
push
pop
adc
cmp
pop
ss
pushf
xor
test
add
or
pop
pop
mov
sub
and
mov
pop
mov
push
add
dec
in
xor
and
test
or
adc
or
push
scas
sbb
mov
mov
jo
mov
int
xchg
hlt
pushf
xchg
stos
dec
sbb
dec
xor
and
dec
and
fmul
jne
test
adc
and
pop
stos
shr
jecxz
mov
je
xor
test
sub
popf
cmp
and
mov
mov
xchg
dec
(bad)
and
xchg
hlt
push
or
and
jmp
xlat
jge
les
and
stc
pop
leave
inc
out
pop
and
mov
adc
and
xor
leave
sahf
xor
cmp
jae
es
mov
fcom
jbe
test
inc
mov
ins
mov
or
int3
adc
data16
imul
sub
or
rcl
jmp
mov
dec
jl
jecxz
push
jge
push
sbb
and
sar
mov
or
cmp
scas
aad
adc
adc
sahf
aad
mov
ja
into
sbb
or
and
js
pop
nop
or
into
ret
(bad)
iret
and
pop
xor
jmp
clc
adc
push
mov
ret
lea
pop
add
in
mov
adc
cwde
sub
pushf
clc
xchg
adc
ja
test
or
fcom
lock
mov
mov
mov
das
cmp
pusha
mov
sti
adc
dec
pop
mov
lods
lea
cld
inc
shl
test
pop
xchg
or
mov
add
outs
push
add
inc
and
call
inc
inc
push
and
push
mov
ins
mov
aaa
ins
mov
and
push
pop
add
ins
aaa
ins
and
gs
push
xchg
and
test
xchg
mov
imul
sbb
mov
inc
xchg
arpl
clc
das
sbb
loop
jne
lea
mov
dec
inc
and
or
sbb
add
cli
add
push
fdivr
ror
cmp
xchg
into
cs
cld
ret
sub
jo
movs
mov
push
sbb
dec
ficom
pop
loope
mov
adc
push
add
ja
push
add
rol
sub
push
dec
dec
mov
in
jmp
jae
adc
push
and
jecxz
add
jns
and
sub
jns
popa
xor
mov
les
mov
dec
inc
mov
hlt
cmps
daa
mov
scas
mov
fistp
pop
cmp
stc
xchg
xor
mov
pop
shr
add
fisttp
mov
mov
ins
in
cmp
data16
movs
sub
or
cli
xlat
jmp
(bad)
pop
rcl
jne
add
sub
mov
ins
push
daa
xor
jecxz
xor
jl
add
lea
inc
pop
mov
push
fimul
and
add
fisub
add
icebp
inc
das
xor
cmp
hlt
inc
mov
(bad)
xchg
pop
fstp
mov
xchg
dec
in
icebp
dec
dec
fs
imul
out
cmp
add
pop
dec
jge
adc
jnp
sub
push
adc
add
add
add
push
movs
scas
push
retf
neg
add
outs
push
mov
fldlg2
iret
or
xchg
cwde
mov
adc
ja
inc
stos
push
sub
loop
mov
jl
inc
mov
ret
inc
fs
adc
inc
popa
sbb
cmc
and
stos
das
pop
push
stos
mov
enter
adc
add
cmp
repz
pop
pop
(bad)
adc
shr
jb
test
pop
and
cmp
push
push
mov
push
leave
mov
cmp
and
nop
add
and
into
xchg
shl
jnp
inc
add
inc
jl
clc
push
xchg
mov
test
dec
sahf
sbb
pop
mov
cmp
or
dec
sti
mov
and
(bad)
scas
push
push
pop
nop
pusha
push
lds
adc
jae
imul
jecxz
add
add
and
popf
and
inc
dec
ss
ror
rcr
sub
xchg
mov
ins
pop
sar
daa
inc
pop
and
jno
inc
cwde
pusha
add
mov
add
dec
xchg
xchg
imul
sbb
adc
jne
add
clc
or
sub
div
sar
jl
inc
fcomp
xchg
inc
call
mov
push
dec
retf
adc
push
sbb
jl
mov
imul
push
xor
mov
cmp
sub
push
sub
push
jmp
into
add
push
jo
push
ins
and
ins
add
mov
jne
sub
out
sub
data16
jne
add
xchg
pop
and
fcmovb
sub
ja
inc
int3
inc
add
dec
add
hlt
pop
movs
iret
fild
adc
inc
aaa
mov
sbb
mov
xor
jmp
mov
daa
xchg
jp
ror
pop
xor
or
int
sbb
(bad)
mov
push
jmp
push
adc
adc
add
imul
imul
xchg
fwait
adc
and
call
cmp
xchg
xchg
es
dec
add
inc
adc
mov
push
aaa
mov
adc
outs
adc
cmp
mov
jbe
adc
adc
or
xor
mov
or
pop
lock
(bad)
mov
ror
es
shl
lock
sbb
jne
jo
adc
lock
jle
sub
xlat
and
or
adc
and
pop
jne
hlt
add
hlt
and
xchg
and
push
push
jmp
sar
add
sub
mov
mov
mov
cs
dec
pusha
js
and
out
je
test
or
jecxz
dec
add
pop
in
pop
or
popf
sbb
mov
cmp
adc
rcr
adc
mov
push
je
leave
test
fs
mov
jmp
fistp
retf
add
ins
call
repnz
inc
cmp
movs
neg
add
mov
(bad)
adc
add
(bad)
(bad)
adc
or
xor
or
dec
jb
popf
sahf
mov
in
fbstp
outs
push
dec
les
or
xor
mov
or
loopne
jmp
xchg
fwait
dec
or
add
xchg
or
cmp
mov
das
push
push
pop
and
push
push
icebp
or
cmp
mov
pop
pusha
and
imul
adc
or
inc
lahf
cmp
or
and
mov
cmp
jne
push
sbb
dec
shr
fs
xlat
sbb
mov
and
jnp
jl
pop
pop
adc
shl
pop
inc
sbb
inc
inc
pop
push
or
sahf
push
push
adc
pop
mov
inc
imul
in
stc
add
xlat
or
in
stc
fcmovbe
or
push
rcl
dec
adc
mov
jg
in
shl
inc
mov
fs
push
inc
call
clc
adc
inc
xor
xchg
ret
adc
xchg
xor
mov
add
sbb
xchg
retf
mov
sub
or
adc
mov
push
adc
fadd
xchg
jne
sub
sbb
fdiv
push
pop
sbb
je
pop
int3
iret
sbb
sub
mov
ret
scas
lods
inc
xchg
mov
les
ffreep
mov
sub
fwait
add
and
fcom
add
mov
push
add
shr
ror
lock
jg
sbb
xor
popa
or
sbb
les
or
test
ret
dec
mov
loop
jmp
lock
jge
mov
xchg
icebp
popa
push
or
dec
or
mov
fsubr
jmp
call
int3
pop
or
adc
mov
mov
cmps
and
sub
push
xchg
and
lea
(bad)
push
not
cmps
dec
add
inc
inc
jg
in
bound
and
in
mov
and
add
push
inc
test
mov
sbb
les
xchg
and
cmps
mov
sbb
stc
xchg
push
or
test
sbb
or
add
enter
adc
adc
sub
inc
xchg
shl
sub
in
sub
fwait
and
and
sbb
push
mov
lods
mov
inc
push
and
add
test
mov
jns
and
les
add
and
in
repnz
and
sub
pop
and
sub
jb
sub
rcr
and
inc
pop
pop
sbb
lea
adc
cs
push
and
pop
lea
push
arpl
add
(bad)
cdq
xchg
(bad)
push
imul
xchg
shl
bound
pop
movs
xor
js
adc
xchg
shr
dec
dec
push
inc
dec
lahf
inc
stos
scas
leave
inc
or
push
jmp
add
pusha
add
inc
adc
add
xchg
cmp
leave
jne
xor
inc
and
scas
mov
mov
ins
sub
dec
push
pop
add
add
loope
push
and
enter
and
xchg
inc
leave
and
add
or
pop
mov
sbb
xchg
sub
mov
adc
inc
cwde
test
pop
xchg
inc
and
loopne
or
repnz
push
sbb
js
xor
or
or
shr
push
push
mov
and
xor
gs
jne
mov
enter
add
cdq
test
es
rol
int
dec
call
test
push
cmp
add
cmp
pop
xchg
retf
cmp
(bad)
adc
pop
add
and
pop
mov
ret
inc
das
hlt
add
cmp
clc
clc
and
push
repnz
hlt
clc
jb
sub
add
pop
cmp
cmp
psubsw
pop
adc
mov
std
lods
std
call
add
lock
xchg
sub
hlt
lock
imul
mov
das
push
xchg
and
leave
dec
ret
hlt
stos
inc
mov
sbb
das
dec
test
and
add
xchg
int
mov
or
jecxz
sar
cmp
ret
in
pop
ja
lock
mov
xor
jb
ret
add
push
push
(bad)
inc
dec
dec
shl
jno
and
add
es
add
(bad)
adc
mov
push
or
push
push
bsf
mov
rcr
push
mov
push
add
and
add
cwde
retf
push
add
add
lea
test
xchg
xchg
outs
sub
ja
add
add
add
jo
xchg
fstp
push
jp
in
add
push
add
push
leave
mov
in
add
rol
lods
icebp
sbb
(bad)
dec
ror
sub
and
nop
or
and
or
sahf
test
mov
les
add
adc
push
xchg
mov
jg
into
push
xchg
mov
dec
rcr
shr
jne
stc
xor
xchg
sub
popa
fdiv
adc
cmp
pop
pop
ret
jle
add
xchg
jb
test
sbb
sbb
sbb
aaa
ja
add
test
xchg
add
add
or
sbb
push
mov
imul
popf
dec
add
add
and
or
or
sbb
enter
mov
cmps
pop
dec
add
and
sbb
inc
jl
sub
adc
add
xor
nop
adc
and
leave
push
pop
and
outs
pusha
and
dec
xchg
mov
xchg
push
es
mov
adc
and
jbe
cmps
push
jbe
sbb
(bad)
int
jb
bound
mov
lods
dec
xchg
and
retf
jbe
xor
cwde
mov
data16
mov
ins
dec
nop
pop
sbb
ss
sbb
fst
add
or
movs
fidiv
push
push
xor
pusha
and
mov
pop
add
(bad)
dec
sbb
or
adc
and
test
pop
push
pop
cwde
adc
adc
pop
pop
inc
mov
mov
sub
in
sbb
popa
rol
inc
retf
sub
ret
idiv
and
xlat
or
xor
or
adc
xor
call
sbb
shl
and
push
xchg
xor
sub
xor
xor
mov
and
add
cmp
loopne
mov
adc
push
jne
xchg
or
mov
inc
mov
dec
enter
or
xchg
(bad)
js
mov
mov
jbe
(bad)
not
fnsave
jo
mov
in
adc
sub
scas
test
adc
or
outs
pop
pop
loopne
dec
daa
mov
and
mov
adc
xchg
ror
mov
sbb
sub
pop
icebp
fstp
sub
pop
mov
dec
add
mov
and
mov
mov
nop
sub
lea
xor
jo
cmp
loop
fnstenv
xchg
and
add
loope
or
mov
iret
imul
adc
das
xor
mov
neg
push
and
add
dec
push
mov
and
mov
pop
push
inc
inc
adc
adc
ins
pushf
pop
sbb
xchg
cmp
mov
cmps
outs
or
adc
and
adc
out
cmp
scas
dec
push
js
icebp
xchg
xchg
xchg
jecxz
cmp
push
outs
push
dec
sbb
ret
loopne
push
mov
mov
sub
mov
mov
xor
xchg
inc
bound
jno
lds
clc
mov
int
stc
cmps
cmc
add
mov
mov
xor
cmp
aaa
std
movs
or
jp
fistp
xchg
push
jne
push
xchg
jecxz
call
gs
cdq
push
dec
jmp
add
inc
outs
or
dec
aad
adc
into
pop
inc
push
adc
cs
lock
sbb
idiv
fidiv
movs
cmp
loopne
mov
mov
fisttp
or
cmp
or
mov
test
movups
push
sub
pusha
js
dec
add
push
cmc
xchg
or
sti
or
sub
sub
mov
lods
dec
or
call
dec
aaa
add
jbe
push
aam
test
and
icebp
shr
push
ja
xor
and
or
scas
mov
push
xchg
fcmove
sub
jb
adc
js
xchg
adc
inc
mov
sub
fiadd
(bad)
std
pop
jmp
and
and
(bad)
in
jg
mov
lahf
ins
pop
dec
mov
retf
ret
or
shl
aas
dec
ins
jne
push
scas
jmp
sqrtps
mov
mov
pop
dec
add
mov
ins
fs
add
popa
retf
pop
sbb
pop
retf
xchg
vpunpcklbw
add
mov
rol
or
aaa
sbb
(bad)
jno
cmp
inc
clc
rcl
sbb
adc
dec
shr
sbb
out
mov
in
jp
dec
push
pop
inc
inc
inc
aaa
in
(bad)
outs
bound
pop
(bad)
mov
dec
jl
jmp
dec
es
loope
cdq
push
and
ret
pusha
jns
jo
dec
or
inc
popf
sub
or
je
or
jne
enter
adc
add
push
(bad)
ins
int
loop
inc
dec
cmp
sub
sti
dec
adc
jmp
and
jbe
or
or
and
add
ins
and
aam
sbb
push
push
pop
es
jne
inc
repnz
test
dec
add
xchg
sbb
mov
jns
mov
sbb
bound
mov
aaa
cli
xchg
cwde
push
adc
les
aam
push
push
add
push
rep
mov
pop
sbb
lea
add
movs
repnz
sbb
js
mov
xor
jmp
dec
mov
add
add
push
push
nop
dec
rol
push
mov
dec
sahf
sub
out
inc
dec
cmps
add
int
sub
aam
jo
and
adc
xor
push
push
mov
hlt
sub
jmp
sbb
sub
or
fcom
xchg
or
aad
push
or
add
add
xor
xor
rol
loopne
mov
aas
and
test
cmps
push
and
ror
cmp
mov
jbe
inc
ins
je
adc
mov
sub
jecxz
dec
sub
dec
clc
push
dec
rcr
leave
pop
jmp
push
ja
ror
cmp
sub
lock
push
sbb
inc
push
mov
xchg
inc
xchg
mov
ret
cmps
iret
xor
sbb
jg
xor
pop
xor
push
add
xor
sbb
pop
mov
in
jg
push
pop
push
mov
or
gs
cmp
cmp
push
ja
sti
adc
or
mov
nop
aaa
push
dec
mov
sub
clc
adc
or
dec
lods
push
jecxz
jmp
pushf
inc
out
push
pusha
test
adc
push
dec
pop
rcr
add
(bad)
mov
xor
js
adc
lods
rcl
xor
xor
lods
cmp
add
pop
add
push
jmp
fild
add
pop
inc
jmp
jge
cmps
and
dec
movs
pop
loope
jmp
push
imul
xchg
xchg
adc
push
inc
add
jp
or
sbb
push
iret
push
xchg
jne
ficomp
adc
imul
xchg
push
gs
push
pop
imul
icebp
xor
mov
loopne
and
pop
pop
pop
(bad)
mov
outs
imul
sbb
sbb
shl
xchg
add
mov
push
jbe
mov
(bad)
je
or
inc
sbb
dec
lods
dec
mov
inc
or
push
sbb
sub
popf
pusha
fisttp
push
sbb
and
data16
xchg
popf
pop
ja
xor
adc
cmp
popa
out
out
daa
mov
pop
and
rcl
sub
in
mov
ja
sbb
and
cmp
sub
call
sub
cmp
scas
sbb
mov
push
clc
pop
pop
sbb
sub
or
xor
daa
fisubr
sti
add
add
mov
add
mov
xor
jnp
aam
add
or
retf
call
and
push
bound
jae
loope
jmp
add
dec
inc
adc
sbb
sbb
adc
adc
or
xor
movs
test
cmp
sub
pop
sbb
xor
or
push
cmps
add
icebp
mov
sub
into
adc
cmp
rol
(bad)
add
cmp
inc
mov
sub
push
in
push
stos
add
or
jmp
mov
dec
xchg
and
cmp
mov
test
inc
and
mov
pop
inc
add
movs
add
lea
mov
mov
xor
push
daa
or
adc
data16
movs
mov
ror
ret
test
cld
mov
adc
jmp
enter
mov
pop
xor
inc
dec
dec
add
fstp
cwde
xchg
push
sub
dec
sub
adc
retf
test
popf
or
adc
ja
fs
mov
and
pop
sbb
pop
neg
pop
ds
je
test
mov
stos
cmp
mov
pop
int
or
add
or
sbb
jb
cmp
or
ret
sub
push
call
and
je
dec
test
mov
lock
addr16
push
push
pop
sub
sbb
xchg
or
in
sbb
(bad)
and
mov
pop
out
je
or
je
sub
cmp
das
jno
jmp
sbb
cmc
jmp
(bad)
jmp
add
das
jp
inc
nop
sahf
sub
mov
jae
fcom
mov
xor
mov
imul
push
dec
les
dec
cmp
adc
mov
xchg
xor
add
push
jo
ret
push
push
clc
dec
or
fwait
cmp
xor
inc
sbb
mov
fsubr
loopne
sub
aam
add
inc
gs
stos
dec
shl
mov
dec
addr16
push
push
test
jmp
and
jge
and
jg
add
inc
xor
dec
and
sub
adc
push
sub
cmps
sub
jnp
retf
lock
push
jmp
add
jl
inc
imul
movs
and
push
mov
pop
enter
sub
jno
pop
and
movs
pop
xor
add
adc
pop
xor
xor
fwait
xor
dec
dec
push
mov
dec
mov
xchg
imul
add
scas
loop
mov
add
dec
add
mov
in
adc
pop
pop
sbb
pop
adc
pop
xor
adc
cmp
inc
inc
xor
test
repz
cmp
dec
rol
pop
fnstsw
xchg
push
shl
add
dec
sbb
icebp
jb
popa
inc
add
dec
lea
adc
(bad)
mov
inc
je
in
xchg
cmp
enter
xchg
icebp
sub
mov
cmpps
add
loopne
loopne
inc
inc
push
jb
cmp
push
(bad)
shr
or
xor
xlat
add
inc
sbb
dec
fcmove
popa
mov
and
xor
ss
jg
sbb
sub
fs
in
and
or
dec
xor
ret
adc
push
mov
xchg
ret
push
adc
dec
jnp
adc
xor
push
mov
or
mov
jbe
jb
loopne
int
fisttp
mov
mov
mov
xor
out
mov
mov
add
cmps
imul
add
das
inc
add
sub
cwde
push
pop
or
sbb
mov
or
mov
push
in
add
push
in
repz
or
loopne
iret
cwde
push
cmc
call
sub
or
pop
add
or
mov
call
rcl
or
gs
rol
in
call
add
sbb
sbb
or
fmul
jecxz
cmp
add
das
push
push
in
adc
mov
add
jecxz
(bad)
xchg
fsub
lds
and
leave
or
ins
(bad)
shl
imul
ds
pop
push
inc
js
movs
push
lds
pop
inc
push
inc
inc
test
and
daa
jns
add
sub
mov
and
arpl
xor
add
jge
sub
or
stos
jmp
cmp
sub
mov
sbb
mov
and
(bad)
xchg
sbb
dec
push
clc
adc
dec
jnp
sbb
adc
add
dec
shl
push
push
adc
adc
dec
xor
and
sbb
xor
and
and
sub
and
dec
xor
and
dec
xor
inc
jo
cmp
dec
pop
ret
jnp
xchg
and
sub
pop
and
lea
or
or
add
cdq
xor
jns
adc
adc
pop
test
retf
adc
leave
xchg
(bad)
and
pop
cmp
xor
test
jg
or
jge
rcl
mov
fwait
xchg
fsubr
dec
mov
adc
pop
dec
nop
clc
test
jne
pop
and
fucomp
daa
push
and
pop
and
or
das
cmp
cmp
dec
cmp
add
inc
sub
push
push
or
je
mov
mov
sbb
sub
mov
adc
mov
fdivr
ins
dec
mov
es
adc
fdiv
adc
ror
(bad)
movs
shr
push
push
push
and
sbb
imul
sbb
popa
inc
pop
rol
lds
cmp
lock
push
push
adc
dec
mov
mov
sub
adc
push
pusha
adc
loope
or
popa
add
cmp
jne
icebp
inc
fs
fwait
push
aas
sar
or
pop
xchg
sub
or
or
pop
sbb
mov
pop
call
lods
lock
cmp
jnp
push
fwait
test
loope
sbb
das
xchg
cld
or
inc
mov
push
retf
and
ja
xor
xor
add
loope
(bad)
dec
mov
ficomp
sub
push
(bad)
and
and
sbb
jg
cld
sbb
popa
add
sub
ja
ret
rcl
add
mov
ss
push
xchg
ret
jmp
not
imul
movs
inc
sub
hlt
cmp
and
jl
ss
inc
adc
sub
sbb
mov
call
or
adc
out
dec
xor
fnstsw
cdq
mul
fs
xchg
inc
add
pop
adc
mov
push
sbb
cwde
outs
push
cmp
cld
mov
sbb
dec
dec
jo
ror
add
or
rcl
inc
and
mov
inc
stc
xor
push
loop
(bad)
push
lock
or
lea
movs
cld
cmps
in
shr
mov
push
and
push
xchg
aas
addr16
shl
pop
into
or
mov
or
xor
inc
mov
movs
sbb
movs
adc
push
in
or
mov
or
leave
jne
inc
add
scas
bound
lds
sar
test
jne
fstp
imul
mov
adc
adc
pop
scas
addr16
aad
mov
or
sub
push
mov
inc
and
xchg
shl
and
imul
mov
push
loope
xlat
sbb
sub
adc
fisttp
xchg
xor
xor
and
sbb
sub
pop
add
pop
loope
sub
adc
cmp
inc
data16
sbb
mov
or
push
pusha
fs
pop
sahf
mov
aad
dec
arpl
test
test
jno
sbb
pop
xor
test
inc
mov
or
movs
push
sub
jo
mov
lea
clc
jae
sbb
push
jl
mov
push
sub
or
(bad)
rcl
popa
jp
rcr
sub
mov
sbb
adc
mov
gs
retf
push
fld
push
nop
nop
das
es
add
jmp
and
xor
leave
test
push
stc
push
pop
push
push
push
stos
cdq
jecxz
pop
jne
cmps
adc
aaa
sub
ret
mov
retf
adc
je
ins
mov
cmp
add
inc
push
or
inc
and
(bad)
push
add
adc
sub
dec
push
hlt
cmps
push
jl
push
xchg
jno
out
inc
fcomp
pop
and
cmp
stc
adc
sbb
mov
lds
cmp
adc
push
movs
aad
inc
punpckldq
or
es
xchg
or
sbb
aaa
adc
ja
fst
and
add
pop
mov
in
jbe
jecxz
neg
push
adc
rcl
daa
sbb
sbb
adc
lea
pop
shr
or
mov
sbb
enter
jns
adc
adc
adc
cmp
mov
sub
ss
mov
pop
(bad)
mov
push
clc
add
mov
cmp
mov
loopne
shl
leave
and
cmp
out
add
jns
jo
dec
scas
jns
adc
cmp
mov
xchg
ret
mov
and
or
jmp
jl
add
push
push
jnp
inc
scas
add
add
movs
pop
jns
push
mov
inc
push
ret
xchg
sub
inc
jl
test
or
or
xchg
rcl
inc
push
icebp
sub
aad
push
sub
pop
mov
lods
xor
xor
sub
lock
pop
pop
push
sbb
cmp
jne
dec
cli
aad
sub
xchg
push
loopne
mov
aam
add
adc
inc
and
ins
cmp
outs
and
popf
push
mov
loopne
into
hlt
mov
aam
sbb
push
jae
xor
pop
push
pop
xchg
in
sub
inc
mov
in
cmc
xor
xor
cld
mov
jo
mov
jns
fwait
imul
adc
sbb
sub
add
int
sahf
inc
enter
push
test
mov
and
and
add
mov
and
add
inc
add
push
rcr
stos
ret
int
mov
xchg
clc
enter
out
imul
lea
sbb
mov
inc
mov
or
and
jno
sub
mov
idiv
stos
push
jmp
push
test
jmp
dec
shl
lea
push
xor
mov
push
ret
das
push
fdiv
add
popf
arpl
dec
pusha
adc
fist
mov
sar
mov
sbb
mov
out
out
jl
loopne
jl
mov
pop
aaa
push
jne
movs
lds
adc
stc
add
push
xor
push
je
sbb
adc
(bad)
push
(bad)
inc
adc
mov
ret
adc
retf
shr
les
pop
cli
stc
mov
ss
adc
pop
fidiv
sbb
add
push
ins
das
mov
lock
adc
sub
push
(bad)
xchg
ret
sahf
outs
pop
pop
bound
test
loope
and
iret
sub
in
sahf
hlt
add
lock
sub
push
dec
sbb
(bad)
lea
and
push
out
cmp
test
push
lods
push
sbb
add
and
mov
sbb
mov
(bad)
call
add
(bad)
rcl
adc
popa
xchg
pop
shr
(bad)
call
sbb
and
and
iret
gs
and
jo
and
mov
pop
retf
fadd
mov
or
mov
loopne
loopne
mov
and
(bad)
pop
bound
or
je
or
pop
add
mov
jo
mov
pop
pop
mov
sub
(bad)
neg
sub
jge
(bad)
push
sbb
cli
scas
push
add
rcr
pop
cdq
cmps
and
sub
xchg
jle
ds
or
das
pop
xor
jb
adc
stc
push
dec
and
sar
xlat
mov
sub
inc
dec
rcr
adc
call
dec
ret
xchg
or
fisttp
aas
xchg
lahf
add
sbb
out
sbb
dec
jnp
sbb
xchg
mov
add
pop
ret
adc
push
mov
xchg
enter
sbb
dec
es
pop
push
das
loop
ins
data16
sub
and
retf
aaa
add
jne
mov
sub
mov
cmp
jo
sahf
inc
and
xor
xor
icebp
adc
popa
cld
xchg
mov
or
pusha
fmul
push
es
sbb
cmp
adc
mov
lods
or
ret
push
mov
shl
fist
leave
adc
add
and
xor
lods
sbb
mov
sub
jl
out
push
add
adc
in
push
in
cmp
add
jmp
push
icebp
jmp
or
dec
push
jo
xchg
pop
in
sub
test
cmp
mov
loopne
sub
and
cmc
xchg
leave
xchg
ror
mov
and
je
add
movs
leave
xchg
cmps
in
inc
or
jne
adc
(bad)
in
fbstp
xchg
adc
jno
mov
jp
cmp
jmp
jne
outs
mov
in
cmp
adc
mov
xor
aas
xor
or
adc
xor
dec
in
in
test
or
xchg
pop
push
cmp
cmp
pop
rol
add
mov
cmps
dec
push
stos
(bad)
stos
mov
icebp
pop
and
jne
and
pusha
pop
enter
cmp
adc
and
xchg
(bad)
stc
sub
inc
inc
mov
or
sahf
je
(bad)
adc
inc
inc
and
sub
or
lods
or
arpl
(bad)
loopne
or
mov
ins
mov
dec
dec
pop
pop
ret
inc
fidivr
sbb
ja
fidivr
adc
inc
cs
loop
xchg
mov
xor
inc
pop
enter
adc
xchg
repnz
xchg
pop
push
test
out
sbb
or
ss
das
pop
ins
and
das
inc
mov
sub
push
xor
and
xor
xor
inc
sub
and
(bad)
fs
sbb
inc
inc
xchg
jno
jne
pop
rcr
push
dec
pop
or
cmp
mov
imul
inc
ds
repz
into
rcr
stos
jae
ins
add
fsubr
lahf
sar
imul
mov
mov
add
and
fiadd
xor
enter
xor
cwde
ret
dec
jo
add
mov
add
push
and
sahf
or
call
push
inc
dec
jl
in
test
add
add
xor
je
add
mov
jmp
bound
or
inc
and
mov
xor
inc
sub
inc
add
rol
div
or
jne
pop
fsubr
and
jae
shl
push
inc
and
inc
jbe
(bad)
repnz
fsub
add
xor
mov
sbb
xchg
xchg
push
ror
add
jg
clc
jo
add
mov
mov
xor
add
outs
mov
mov
cmp
addr16
adc
push
mov
mov
hlt
stos
fmul
xor
xchg
adc
int
mov
test
adc
test
or
repz
cmp
test
xchg
movs
loope
adc
pop
movs
or
shr
adc
xchg
mov
pop
arpl
and
mov
stos
adc
les
adc
call
inc
(bad)
(bad)
aad
scas
jo
pusha
cwde
jne
cmp
or
cmp
inc
(bad)
sar
cmp
jmp
add
xor
sbb
lea
mov
movs
and
push
push
sub
cdq
and
jge
pop
sbb
pop
adc
fisub
cmp
scas
cmps
into
setne
out
and
and
xchg
ins
sub
je
adc
call
sub
jg
hlt
add
dec
pop
add
push
cmp
pop
pop
rcl
xchg
daa
or
cs
nop
icebp
fwait
or
or
imul
gs
jo
adc
cmc
jne
jb
jg
sbb
bnd
push
cld
stc
or
addr16
pop
fidivr
sahf
dec
xchg
mov
ss
(bad)
cwde
push
xchg
(bad)
(bad)
inc
ds
pushf
mov
push
lahf
and
in
es
sub
and
jbe
sub
add
jbe
fisubr
call
arpl
adc
dec
(bad)
in
ins
mov
shl
clc
dec
push
push
adc
das
test
sbb
pop
hlt
dec
lahf
dec
repnz
iret
jb
mov
sub
(bad)
cmps
aam
sub
retf
mov
aaa
fsubr
arpl
das
and
add
sub
ds
jl
jmp
or
outs
jecxz
push
ja
xor
cmp
movs
push
retf
fist
mov
jbe
or
(bad)
lahf
scas
push
pushf
js
xor
jmp
inc
fsubr
adc
into
inc
pop
xor
xchg
out
xchg
mov
sbb
inc
or
mov
add
popa
in
fwait
in
mov
dec
data16
unpcklps
cmp
enter
and
retf
and
mov
test
fs
jmp
adc
popf
push
bound
jno
xchg
leave
lahf
pop
pop
aad
or
imul
ins
movs
lea
cld
adc
adc
inc
push
arpl
push
cmp
scas
push
pshufb
(bad)
jmp
into
movs
or
fdivr
sub
mov
sub
sub
push
adc
iret
in
mov
mov
mov
mov
mov
sub
cmp
cs
add
pop
pop
sub
(bad)
out
cmp
or
inc
jg
bound
add
mov
mov
pop
and
repnz
retf
inc
imul
or
push
mov
lock
popf
mov
mov
mov
push
shr
retf
fidivr
adc
pop
mov
xor
mov
cwde
sbb
jmp
loope
jg
imul
mov
mov
push
or
test
dec
push
mov
ror
sbb
pop
aam
inc
sbb
pop
dec
sub
lods
cwde
outs
popa
or
add
aad
sbb
sub
push
xchg
repz
movs
test
cmp
mov
inc
and
xchg
aam
or
mov
retf
xor
cmc
or
push
aas
add
loop
sbb
mov
cmc
call
add
in
mov
scas
call
add
mov
mov
lea
inc
adc
mov
mov
mov
int3
dec
add
sub
add
dec
push
loopne
adc
mov
mov
cmp
pushf
ins
call
cmp
test
and
sub
push
mov
ins
or
shl
in
fwait
icebp
mov
sbb
mov
add
mov
push
mov
sub
push
fdiv
iret
add
in
add
inc
test
movs
add
popa
push
popf
sbb
in
dec
adc
add
pusha
inc
jecxz
sti
ins
loop
ret
mov
sub
mov
xor
adc
sbb
dec
push
or
pop
cmp
lea
pop
mov
and
mov
inc
or
in
xchg
sub
sbb
adc
les
(bad)
inc
sub
sub
cmps
add
repz
xor
cmps
inc
xor
xor
ins
or
mov
cmp
or
push
xchg
retf
adc
xor
push
std
xor
enter
pop
mov
mov
mov
(bad)
sbb
push
stos
push
repz
add
inc
and
dec
call
or
lock
loope
add
push
aam
cs
lds
or
dec
ss
inc
icebp
mov
dec
sbb
push
xchg
shl
push
jns
sub
loopne
ds
and
or
mul
jmp
jmp
dec
xchg
call
mov
push
ret
mov
fisub
add
jmp
pop
lods
inc
int
mov
lea
jmp
(bad)
call
loopne
push
add
popa
sub
sub
xlat
sbb
ret
adc
xlat
xchg
(bad)
pushf
mov
push
imul
aas
cwde
(bad)
test
sar
or
outs
add
jo
mov
ins
mov
add
dec
jmp
add
sbb
sbb
add
pop
push
mov
fs
add
pop
jl
jbe
adc
and
retf
jg
lea
inc
sbb
test
mov
fdivr
ficom
or
add
sti
push
push
shl
and
rcr
and
or
push
add
xchg
sbb
or
fst
loopne
sbb
sub
xor
adc
mov
push
int3
dec
lds
imul
enter
ss
dec
and
pop
and
fst
push
dec
sub
movs
lods
sbb
es
jge
add
and
adc
push
ret
xor
jo
dec
fmul
xor
add
and
out
and
iret
jnp
add
das
in
cmp
jge
ret
jbe
inc
(bad)
mov
add
add
push
sbb
inc
sub
pop
push
sub
push
inc
imul
pop
bound
mov
imul
aaa
dec
loope
pop
add
xchg
push
sub
inc
jmp
ret
mov
inc
mov
push
adc
imul
pop
in
call
or
cmp
push
fidivr
dec
dec
ins
inc
in
jmp
adc
xor
or
pusha
rcl
and
push
movs
loopne
sub
pop
rol
or
mov
cmp
or
push
pop
xor
aaa
or
sub
add
cwde
xchg
(bad)
push
mov
fsub
pop
adc
int3
mov
mov
and
sub
mov
test
xlat
mov
ss
jno
push
jg
popa
cmp
je
push
enter
adc
lock
in
xor
ror
mov
inc
xor
popa
add
xor
js
test
call
cmps
aam
mov
sbb
jl
mov
xchg
sar
mov
fs
xchg
add
das
popa
xor
mov
ficom
ss
sbb
in
sar
add
fiadd
sar
sbb
xlat
loop
dec
int3
gs
ror
ins
sbb
or
sub
lds
sbb
in
xor
(bad)
sbb
adc
and
xchg
push
inc
pop
inc
mov
sub
inc
mov
pusha
sbb
cmp
jge
xchg
sbb
add
push
xor
ror
scas
jbe
ret
les
clc
cwde
adc
cmps
sub
sbb
push
xchg
cmps
push
adc
lea
push
adc
push
push
(bad)
hlt
test
shl
jo
push
inc
fmul
or
cs
add
xchg
mov
adc
imul
lods
mov
int3
sbb
and
jecxz
je
shr
push
xlat
call
pop
push
jmp
and
dec
and
movs
xor
in
xchg
adc
sub
inc
xchg
inc
sub
mov
mov
imul
xor
push
sbb
pop
dec
pop
cmp
movs
push
and
or
test
xor
loopne
cdq
idiv
jg
jbe
mov
aam
sbb
jp
into
sbb
shl
fst
imul
mov
js
dec
in
mov
retf
les
adc
cs
xchg
push
xchg
loop
movs
jmp
xor
adc
bound
je
push
lods
clc
mov
inc
cwde
cld
mov
xchg
pop
loope
push
mov
adc
mov
aam
adc
inc
mov
pop
and
and
push
cmp
ins
xor
xchg
and
pop
push
(bad)
jb
dec
sti
leave
or
popa
sti
(bad)
push
xor
nop
rcl
cmc
jne
(bad)
jne
dec
xor
push
movs
push
sti
push
add
dec
or
adc
add
jne
nop
pop
or
sub
adc
dec
cld
ret
lea
xchg
and
scas
pop
call
enter
or
loop
imul
ins
or
push
in
jle
sbb
arpl
jmp
into
mov
je
push
cmp
sbb
dec
push
xor
dec
or
xchg
add
(bad)
push
xchg
movs
adc
mov
dec
xchg
loop
ret
jle
add
add
(bad)
add
push
loopne
inc
sti
mov
aam
fdiv
push
xor
xchg
movs
push
fsubr
cmp
daa
push
adc
pop
call
xor
inc
jle
or
inc
lea
dec
mov
jge
add
cdq
mov
adc
sbb
in
movs
mov
xor
pop
das
xor
adc
mov
xchg
arpl
pop
add
push
mov
cmp
test
fdivr
mov
jne
dec
inc
lea
pop
loopne
cmps
mov
adc
gs
mov
pop
jge
dec
lock
jle
outs
mov
dec
push
inc
or
sub
sti
push
das
rcl
xchg
lock
ins
arpl
call
or
sub
iret
ja
dec
jne
addr16
mov
jmp
sub
fcom
nop
fs
pop
inc
xchg
push
add
gs
pusha
jo
add
mov
push
mov
adc
and
xor
mov
cdq
iret
xor
adc
sbb
ins
xor
jp
retf
clc
aaa
and
jno
mov
enter
xchg
dec
mov
xor
adc
out
push
call
movs
sbb
or
(bad)
mov
and
sbb
pop
or
xchg
pop
fwait
add
or
out
or
ret
xchg
add
xor
mov
inc
cmp
popf
sub
push
adc
sub
(bad)
and
mov
ret
mov
aad
and
sub
add
push
jle
xchg
inc
mov
shl
clc
jg
dec
inc
pop
cmp
or
inc
scas
jo
sbb
jle
cmp
cmp
adc
rol
adc
jg
mov
call
cmp
pop
ret
mov
rol
retf
jl
jmp
push
rcl
pop
push
mov
sbb
jmp
sbb
daa
dec
(bad)
call
call
inc
xchg
(bad)
or
mov
pop
adc
retf
mov
inc
mov
js
sbb
mov
add
enter
xor
or
adc
(bad)
dec
lds
sti
xor
jno
or
sub
cwde
xor
loop
jmp
xchg
les
cld
loopne
add
or
xor
jecxz
mov
xor
dec
arpl
sar
(bad)
cmp
sar
imul
cmp
sub
not
pop
imul
jge
mov
sbb
push
ret
push
sub
adc
xor
mov
dec
mov
mov
aaa
inc
hlt
nop
fild
iret
hlt
jae
push
pop
movs
sbb
and
jns
jmp
sub
mov
cwde
movs
push
imul
sbb
retf
stos
stos
dec
inc
add
stos
aas
push
dec
push
les
mov
movs
xchg
pop
dec
adc
inc
out
dec
int
cmp
push
cmp
(bad)
lea
mov
push
inc
sbb
rcr
xchg
mov
sub
repz
inc
rol
daa
pop
test
jmp
inc
cwde
mov
mov
push
wbinvd
cmovge
(bad)
icebp
jns
jmp
mov
or
rol
add
aas
mov
push
cmps
dec
and
push
sub
add
mov
sub
and
pop
add
cmps
loopne
xchg
push
xchg
mov
aam
aad
repz
outs
ins
stc
int
pushf
or
fisubr
cwde
mov
dec
sub
jne
push
jbe
lea
or
test
adc
sbb
inc
or
jne
push
jmp
pop
sar
inc
out
in
jmp
das
cmp
mov
(bad)
adc
arpl
add
and
inc
sbb
(bad)
mov
inc
push
add
fwait
mov
shl
hlt
inc
xor
gs
imul
dec
cmps
mov
sub
std
or
dec
repnz
dec
retf
hlt
(bad)
sub
popa
test
fs
fstp
or
and
xor
cmc
add
cmp
xor
push
cmp
popf
out
xor
push
shl
inc
mov
dec
lods
test
sub
push
xor
add
jb
and
mov
mov
call
mov
lea
add
xchg
xor
mov
cmp
xor
add
cwde
(bad)
fcomp
cmps
ret
adc
inc
xor
les
rol
xchg
push
mov
add
adc
cmp
push
or
loope
xor
add
or
mov
inc
jo
mov
adc
cmp
and
sbb
test
xor
xor
icebp
fisubr
cs
ret
and
fst
and
dec
pop
pop
or
sbb
das
cdq
popf
jle
or
cmps
inc
rol
adc
dec
sti
cmps
push
cmp
out
add
xor
jne
clc
ret
add
sbb
cld
mov
push
jo
dec
add
adc
popa
jns
adc
xor
adc
or
sbb
sub
inc
push
cmp
inc
sar
or
repz
inc
das
jmp
xor
(bad)
rol
or
(bad)
cwde
sbb
imul
sbb
sbb
cmp
xor
mov
cmp
stc
movs
je
push
sub
mov
adc
adc
and
in
adc
inc
cmp
data16
cmp
adc
mov
out
mov
inc
bound
push
add
pop
bound
and
lahf
add
je
sbb
pop
imul
add
hlt
daa
mov
rcl
sbb
sbb
and
jmp
dec
or
jb
daa
xor
cmp
sub
mov
mov
push
pop
loopne
stos
sar
sub
mov
fstp
pushf
jns
xlat
sub
adc
hlt
pushf
or
mov
xchg
imul
nop
sbb
ret
jmp
scas
jno
js
popa
mov
and
or
add
sub
cmp
ss
iret
pop
loope
and
sar
push
cmp
jmp
adc
xor
in
(bad)
pop
inc
inc
push
mov
popa
or
in
(bad)
movs
test
imul
(bad)
inc
sub
outs
dec
popa
test
pop
push
cld
and
mov
or
jle
cmps
inc
or
shl
push
xchg
add
dec
movs
hlt
sbb
and
and
inc
adc
leave
and
sub
adc
mov
xchg
and
jp
ja
mov
jge
dec
jbe
inc
pop
dec
xor
sub
bound
aam
pop
loop
and
aad
mov
xchg
mov
add
scas
sub
xchg
inc
fsubr
out
test
test
pop
ins
add
sub
aam
push
cmc
mov
aaa
push
mov
jecxz
popa
xor
fwait
sub
pop
xchg
or
out
call
xor
and
xor
add
inc
adc
add
mov
sbb
mov
pop
and
add
push
mov
add
push
mov
add
sti
int3
or
mov
inc
int3
mov
ret
fcmovnu
test
out
mov
inc
push
ss
adc
mov
dec
sub
mov
inc
xor
shl
jp
dec
(bad)
xchg
xor
retf
outs
push
clc
rol
lods
mov
and
je
ret
sbb
mov
pop
sub
sbb
fwait
jl
and
es
or
jbe
cmps
push
xchg
js
or
or
mov
icebp
call
cmp
jbe
xchg
mov
adc
and
test
xchg
dec
jecxz
nop
inc
inc
inc
sbb
rol
fst
jmp
inc
add
or
cmp
cmp
xor
shl
cmp
adc
adc
jecxz
out
jo
(bad)
or
sar
push
ret
or
sub
movs
and
or
xchg
jp
aas
add
test
and
push
push
loopne
sti
sbb
xchg
push
add
(bad)
retf
add
adc
xchg
(bad)
ret
iret
push
movs
call
lods
xlat
ret
push
dec
or
scas
shl
add
add
sbb
fs
lahf
sbb
mov
push
sbb
xchg
arpl
shld
loope
in
sti
xchg
aaa
pop
jge
out
clc
dec
push
pop
sbb
inc
ret
bound
lods
outs
inc
(bad)
xor
sbb
push
add
mov
popf
jae
inc
pop
and
repnz
mov
imul
jmp
test
push
sbb
retf
pusha
leave
fist
adc
aam
enter
mov
mov
or
push
stos
inc
pop
xor
call
pop
shl
mov
(bad)
nop
push
cmp
fwait
mov
or
inc
jne
add
test
add
jmp
adc
jnp
push
fisttp
sub
fadd
push
pop
push
into
mov
pop
pop
fiadd
push
and
inc
rcl
lds
sbb
add
vmwrite
mov
and
jl
inc
pop
push
push
and
xchg
ja
cs
mov
inc
gs
push
add
(bad)
mov
imul
or
xchg
fld
push
nop
adc
mov
lods
in
mov
inc
add
add
faddp
add
movs
pop
or
cmp
and
retf
inc
enter
dec
inc
sbb
scas
dec
movs
add
retf
sbb
lock
mov
ja
jmp
fidivr
mov
fwait
xchg
pusha
mov
push
clc
push
push
jne
dec
push
xchg
sahf
mov
xor
stc
dec
mov
or
xlat
jns
xchg
in
mov
cmp
movs
xchg
inc
add
inc
sub
mov
push
and
xchg
and
and
outs
add
xor
xchg
mov
mov
mov
adc
pop
adc
jbe
aaa
mov
nop
adc
or
ins
dec
pusha
jl
xchg
fisubr
sub
xor
mov
push
mov
pop
sub
rcl
mov
fwait
pushf
or
mov
mov
jge
in
cmps
mov
je
cmps
clc
or
mov
pop
push
or
pop
test
shl
sti
fild
push
test
jle
dec
mov
and
sub
jl
xchg
imul
rcr
stos
(bad)
cmp
mov
push
sbb
jbe
mov
mov
loopne
push
or
ror
loopne
add
les
enter
inc
push
aam
test
ret
push
movs
sub
std
xor
fldcw
or
xor
call
mov
mov
or
xchg
and
call
ret
mov
push
je
lock
adc
inc
mov
add
cli
or
xor
rol
rol
add
dec
sub
xchg
pop
cwde
div
and
dec
pop
xchg
mov
xchg
clc
mov
nop
or
pop
push
adc
mov
push
imul
iret
(bad)
mov
(bad)
xchg
(bad)
movs
xor
jbe
sbb
jns
jne
xor
mov
movs
inc
lahf
(bad)
sbb
popf
cmp
call
mov
cmp
or
push
gs
push
test
fadd
call
mov
into
mov
test
adc
shl
in
add
(bad)
fld
icebp
lea
mov
(bad)
movs
xchg
jne
mov
xor
fist
cmps
cld
cmp
adc
enter
fs
lea
mov
es
lea
dec
(bad)
frstor
push
cmps
mov
dec
or
not
inc
sub
mov
loopne
rcr
push
mov
les
shl
adc
sbb
add
push
push
retf
mov
aas
call
add
je
and
mov
dec
aaa
mov
fwait
sub
jno
sbb
jge
mov
push
jne
sub
add
rol
mov
pop
adc
in
and
xchg
and
or
addr16
loope
cmp
push
stos
daa
loopne
xlat
sub
mov
mov
add
icebp
fs
stos
sbb
jl
jl
push
push
test
add
fs
sub
cmp
and
push
je
xchg
clc
ror
int3
jo
pop
pop
dec
add
sub
jo
lods
pop
in
leave
gs
fdiv
pop
mov
xchg
xchg
test
ins
xchg
mov
out
push
retf
cwde
inc
or
or
xor
mov
jge
fnstcw
push
dec
or
loopne
sub
in
cmps
xor
fcomp
adc
fst
cwde
pop
dec
pop
jmp
ret
into
aad
pop
rol
dec
sbb
and
or
and
sub
inc
sub
mov
inc
shr
lods
pusha
dec
and
xchg
enter
dec
and
or
out
rcl
jle
jne
or
xlat
adc
sub
mov
jnp
rol
fdivr
jmp
sbb
and
mov
bound
dec
add
dec
mov
jecxz
jecxz
inc
pusha
movs
adc
xor
push
(bad)
and
pop
nop
sbb
xchg
(bad)
adc
add
loopne
pop
push
lock
data16
dec
ins
add
xor
js
mov
pop
dec
sbb
pop
or
mov
ins
adc
hlt
mov
stc
push
add
push
pop
or
not
in
inc
jo
shl
fisttp
je
ss
fsubr
bound
push
aam
push
xchg
mov
je
jle
adc
dec
fwait
adc
sub
and
pop
inc
scas
jmp
je
xchg
mov
imul
mov
into
adc
pushf
jne
and
mov
jle
push
inc
mov
ror
outs
mov
(bad)
dec
mov
push
xchg
fisttp
aas
movs
sbb
cwde
cmps
xchg
add
dec
retf
fcom
adc
xchg
arpl
cmc
xchg
mov
dec
jg
imul
cmp
xor
jbe
dec
mov
and
adc
add
cmp
pop
inc
adc
jno
or
mov
rol
xor
push
add
fnstcw
mov
mov
xor
xchg
and
dec
fs
rcl
add
not
xchg
mov
xchg
call
and
and
stc
(bad)
jmp
sti
ss
mov
and
push
scas
adc
mov
rol
out
sbb
and
push
xor
pop
pop
daa
movs
fwait
inc
cmc
aaa
daa
dec
and
icebp
pop
sbb
ret
dec
inc
fist
dec
loop
add
fidiv
push
push
out
fldenv
sbb
push
mov
mov
cwde
movs
imul
jno
xor
push
pop
jmp
jo
xchg
push
or
cmp
(bad)
test
jmp
adc
fcom
cld
aas
inc
or
ins
and
add
jbe
mov
jo
xchg
dec
adc
push
add
cmp
pop
adc
jmp
std
push
jne
stos
pop
lods
push
ror
mov
mov
mov
mov
sbb
lods
aam
inc
cdq
mov
sub
test
and
(bad)
sbb
add
clc
test
inc
test
out
shl
push
and
ins
mov
enter
xor
std
mov
adc
add
push
adc
push
adc
cmp
inc
mov
rcl
fild
ja
mov
cmp
pop
movs
js
mov
scas
dec
or
fldcw
lods
sub
or
push
mov
(bad)
cmp
hlt
sbb
and
js
or
out
or
add
cld
or
pop
out
jge
add
retf
add
or
in
cmp
or
push
pop
mov
jae
pop
or
push
aad
je
aam
push
pop
pop
fild
or
in
aas
pop
adc
ds
(bad)
lock
or
pop
retf
or
cmovno
push
iret
jl
out
cmp
mov
jmp
jne
sub
in
sbb
push
push
xor
das
jne
push
add
add
or
sub
sub
in
iret
cmp
je
test
inc
xor
ret
xlat
inc
mov
push
adc
and
mov
sub
out
inc
add
xor
xor
jno
fs
pop
sbb
inc
loope
and
pop
push
movs
adc
sbb
inc
cli
sbb
sub
loopne
lahf
int
pop
push
cmps
push
jno
repnz
xchg
or
retf
test
sbb
add
or
push
test
stos
pop
jnp
cmps
and
push
or
inc
out
lea
mov
aas
xchg
mov
push
inc
ror
leave
arpl
xor
sbb
mov
sub
or
dec
movs
fsub
arpl
loopne
adc
or
mov
mov
shl
repnz
mov
adc
xor
sbb
add
mov
or
sub
cdq
sbb
add
inc
mov
dec
sbb
add
cmp
jne
pop
add
or
enter
add
sub
dec
clc
movs
jl
or
jmp
cmps
jo
test
sub
jno
retf
xchg
xchg
cmps
ins
mov
inc
shr
push
add
cmp
scas
out
or
xor
adc
inc
xor
xor
sub
or
outs
mov
xor
sbb
jl
(bad)
nop
adc
dec
pop
add
push
in
(bad)
nop
jmp
(bad)
call
and
jmp
dec
inc
inc
dec
arpl
loopne
lea
xchg
pop
(bad)
push
and
mov
jae
movs
mov
cmp
cmp
and
jge
les
retf
or
test
and
cmp
pop
mov
je
sbb
in
popa
(bad)
mov
xchg
in
cmp
mov
cmp
aas
nop
push
ret
pop
push
cdq
rcl
or
mov
pop
lods
cdq
je
jmp
and
jb
gs
shl
jmp
push
pop
mov
arpl
xchg
xchg
mov
or
addr16
(bad)
lock
pusha
and
jae
or
outs
cs
rcl
push
xchg
pop
dec
or
pop
into
and
adc
jp
retf
mov
dec
xchg
adc
retf
cmc
in
(bad)
call
imul
ins
xor
dec
fsub
xor
add
fisttp
out
or
aas
pop
jecxz
or
mov
dec
mov
adc
test
or
sub
add
dec
js
adc
xchg
int
jbe
and
push
jb
xor
mov
scas
jge
cmp
outs
test
hlt
or
pusha
js
popa
aad
add
loope
sbb
sbb
pop
lock
push
jle
push
mov
add
mov
jo
mov
std
rcl
push
ins
mov
bound
rcr
mov
mov
call
add
adc
add
mov
lahf
xlat
or
sub
add
rol
mov
js
sub
pop
sub
xchg
mov
add
adc
or
xchg
adc
mov
xor
fst
fld
or
or
push
inc
mov
cmp
xchg
xor
mov
sbb
jl
into
pop
push
in
loope
dec
movs
jo
or
pop
mov
stos
sub
aas
and
pop
fmul
add
adc
push
rcl
dec
sbb
jnp
xchg
add
sub
adc
je
adc
movs
mov
dec
(bad)
test
mov
pop
jmp
xchg
inc
jmp
call
jmp
add
mov
in
loopne
cmp
add
nop
or
mov
jmp
mov
add
mov
push
dec
mov
sub
dec
or
jg
inc
mov
movs
dec
push
and
inc
pop
mov
or
mov
movs
movs
addr16
xor
xchg
sub
js
pop
or
push
add
add
and
jno
cs
pop
jmp
(bad)
retf
or
or
cmp
and
call
in
push
push
mov
sub
add
add
adc
es
mov
push
js
retf
push
sub
push
hlt
adc
jmp
test
push
loop
jo
lahf
test
pushf
(bad)
fld
inc
jmp
outs
fstp
mov
adc
test
jno
xlat
add
and
sbb
inc
(bad)
jl
loop
dec
iret
push
or
mov
add
out
je
add
mov
or
shr
sbb
xor
cmp
ins
jmp
dec
add
or
lods
add
adc
pop
mov
add
fdivr
fisub
mov
aaa
int3
and
inc
mov
xchg
mov
js
sbb
fsub
clc
and
xchg
pop
xchg
ss
cmp
sub
imul
mov
inc
inc
sub
fsub
stos
sbb
mov
dec
inc
outs
mov
sub
dec
sbb
dec
aas
or
add
jbe
cmp
ins
sbb
dec
aam
ss
ror
or
push
inc
or
cld
adc
push
bound
inc
jne
or
cmp
mov
int
loop
sbb
add
rcl
loop
call
add
loopne
rol
loope
retf
mov
cmovno
lock
xchg
mov
call
call
les
xor
cmp
add
in
cmp
ret
mov
(bad)
and
cmp
mov
add
xchg
push
mov
push
or
movs
fs
(bad)
in
cwde
sbb
in
jae
inc
sbb
jp
add
ret
jb
xchg
rcl
xor
movs
jmp
imul
sub
sbb
aam
or
adc
rcl
xor
in
imul
retf
js
ja
and
dec
push
inc
xor
cmp
retf
adc
fidivr
cmp
inc
mov
fadd
adc
cmp
test
push
mov
mov
mov
add
test
push
sar
xor
pop
push
mov
fcmovne
dec
add
add
pusha
in
xchg
lods
cmps
sub
sub
jp
add
sub
jbe
push
mov
retf
add
add
mov
dec
mov
add
adc
ret
add
or
add
xor
jo
shl
adc
mov
or
sbb
push
fcom
push
adc
and
leave
mov
ds
mov
inc
test
dec
push
stc
je
movs
sahf
dec
push
adc
push
dec
test
mov
mov
dec
jns
test
dec
mov
imul
mov
push
add
push
push
call
push
aam
or
push
popf
lock
test
fistp
mov
or
or
dec
cli
add
jae
pop
in
dec
in
xor
bound
xor
leave
not
stos
fdivr
imul
sbb
xchg
sbb
(bad)
adc
loopne
add
sub
dec
pop
pop
xchg
add
sub
pop
push
add
mov
and
adc
cmp
push
test
daa
xlat
(bad)
pop
jb
(bad)
jmp
stc
(bad)
mov
or
inc
les
cmp
pop
inc
jne
jle
shl
lea
es
xchg
jnp
sub
cwde
hlt
es
add
mov
mov
jbe
mov
fisub
inc
inc
imul
lods
xchg
lea
cmp
adc
movs
add
pop
out
sbb
xchg
or
pusha
add
aas
sub
dec
(bad)
sar
inc
mov
dec
adc
pop
shl
lods
adc
inc
lods
sbb
add
sub
jle
mov
sub
push
jmp
or
xor
add
ins
leave
rol
push
inc
add
sub
mov
mov
sbb
cmp
jle
test
add
shl
jo
push
rcr
sbb
jg
stos
and
mov
fdiv
clc
lock
mov
and
pusha
adc
pop
push
movs
inc
aas
mov
push
sub
push
rol
and
hlt
movs
js
ror
fist
outs
aaa
rol
shl
and
pop
jmp
adc
xor
pop
cmps
lldt
and
inc
mov
jmp
mov
test
pop
mov
outs
adc
cmps
sub
jle
les
or
loop
test
jae
stos
nop
enter
xchg
xlat
es
or
jmp
cmp
fadd
es
jmp
sub
nop
arpl
xchg
loopne
or
mov
pushf
dec
scas
jb
and
push
loop
lds
adc
sub
rol
movs
cmp
and
push
push
clc
adc
jns
hlt
rol
cmp
push
in
mov
pop
ss
push
aam
pop
or
les
test
xor
mov
push
push
sub
fs
add
dec
lahf
mov
pop
call
(bad)
aad
or
sbb
and
dec
repz
lahf
mov
pop
push
lea
add
pop
mov
xor
dec
lea
imul
daa
sbb
test
and
jmp
push
nop
loope
dec
cmp
add
ror
mov
jb
sub
inc
test
push
and
ins
inc
pop
sub
imul
inc
pop
jno
js
mov
(bad)
nop
jb
aas
call
cld
and
sub
adc
jmp
jne
xchg
loopne
pop
icebp
mov
or
sbb
call
ror
je
test
int
xchg
jl
xchg
ss
mov
adc
mov
test
push
inc
mov
dec
sbb
pop
mov
push
test
inc
test
test
or
xor
(bad)
pop
jl
add
js
test
mov
pusha
xchg
mov
xchg
mov
mov
lock
ins
bswap
iret
stos
enter
lock
sub
test
daa
sbb
sub
mov
xchg
sbb
xor
pop
xchg
ret
dec
sbb
shr
and
and
stc
lea
or
rcl
adc
xchg
add
mov
repnz
mov
jae
mov
ret
cld
pop
ja
pop
xor
or
ret
jo
je
mov
pop
popa
fld
adc
xchg
xchg
xor
sbb
sbb
jno
retf
sbb
mov
seto
pop
mov
dec
dec
cmp
inc
lahf
add
xchg
test
mov
push
mov
cdq
call
xchg
imul
xor
pop
stc
xor
pop
inc
push
sub
daa
sbb
mov
pop
outs
add
adc
pop
xchg
or
push
push
mov
fimul
xchg
movs
pop
jl
cmp
adc
adc
push
cli
test
je
fld
lock
and
xor
inc
outs
loope
movs
in
fidiv
sub
std
adc
ror
je
and
ret
inc
and
movs
xchg
inc
jl
lahf
dec
push
lahf
mov
in
add
jns
mov
or
add
push
test
or
les
jge
sub
mov
hlt
add
and
ss
jl
js
pushf
je
lock
les
test
mov
push
ins
mov
fist
pop
push
imul
jo
dec
adc
xor
jne
iret
and
sub
mov
aas
aaa
(bad)
mov
and
xchg
adc
or
jo
nop
xor
pop
out
adc
mov
mov
imul
mov
rol
ja
push
pop
pop
ja
cmp
test
inc
lahf
ja
mov
add
scas
fwait
add
loopne
mov
push
xor
dec
lock
js
or
or
in
fs
mov
pop
adc
jle
adc
inc
ins
cdq
setge
push
fs
(bad)
xor
(bad)
std
cmps
sahf
movs
or
mov
addr16
mov
mov
mov
fiadd
imul
outs
loopne
mov
sub
stos
adc
enter
push
ins
out
jge
xchg
push
mov
cs
mov
xchg
xchg
and
fwait
lock
fisttp
xchg
(bad)
and
xchg
add
jae
fsub
mov
mov
add
hlt
sbb
rcl
jmp
les
cmp
jne
or
aad
(bad)
fidiv
push
mov
ret
mov
sub
inc
rol
push
xchg
mov
and
xor
or
xor
mov
push
enter
mov
and
out
sub
ret
dec
inc
mov
adc
dec
jle
mov
daa
xlat
lea
mov
lea
and
je
shr
pop
inc
dec
adc
enter
je
inc
sbb
dec
or
cdq
rcr
shr
lods
pop
jp
cmp
clc
fs
add
ins
xlat
call
jle
jnp
jne
adc
clc
outs
movs
pop
dec
cmp
stos
jmp
jno
jo
or
jns
(bad)
cmp
call
adc
xor
or
pop
pop
out
and
mov
test
add
pop
push
push
hlt
pop
lods
daa
mov
xchg
mov
aam
jl
loope
imul
test
or
fcom
sahf
sbb
pop
pushf
add
out
ret
pop
mov
cs
repnz
or
test
and
mov
movs
cmps
lods
xor
add
xor
mov
outs
add
sahf
add
les
test
fiadd
xor
pop
xor
and
cwde
shl
xchg
adc
push
loope
push
push
sbb
test
rcr
scas
lods
add
test
xchg
sbb
fcmovnbe
and
test
inc
jne
(bad)
adc
rol
data16
int
mov
cwde
lods
xchg
cmp
sbb
mov
int
mov
fsub
(bad)
cmp
out
pop
clc
pop
xchg
mov
mov
cmp
fs
pop
add
loopne
sub
dec
(bad)
and
sbb
mov
sub
push
lods
test
push
ss
cdq
push
shl
xor
mov
push
lea
or
pop
dec
jo
jbe
add
ins
mov
aas
xchg
jne
retf
clc
clc
stos
fld
outs
jge
pop
adc
sbb
sbb
or
sbb
jmp
dec
mov
add
in
adc
push
das
adc
mov
push
js
jl
mov
push
inc
sbb
push
lods
mov
jl
repnz
jne
fcomp
add
cwde
cld
retf
sti
cmp
pop
push
push
sub
add
test
mov
xor
push
pop
test
dec
jge
inc
adc
push
scas
jne
loope
nop
fcom
fs
adc
adc
xor
jne
dec
(bad)
jmp
add
pop
lods
and
cmp
adc
jge
pop
outs
xchg
loop
movs
pop
cmp
xchg
xor
mov
add
jmp
movs
cdq
imul
xchg
push
sbb
data16
adc
fsubr
out
mov
pusha
jb
dec
mov
test
neg
lahf
nop
es
fcom
jp
(bad)
cmp
adc
push
push
pop
movs
xchg
mov
inc
jbe
popa
sti
sbb
mov
inc
push
out
mov
cmp
add
cwde
jl
or
rcr
fdivr
cmp
popa
cmp
add
mov
pop
ds
adc
rol
mov
retf
aaa
push
pop
mov
mov
fcomp
xchg
mov
push
dec
retf
aaa
cmp
xor
add
jmp
out
scas
jge
jne
add
test
push
xchg
cmp
jl
(bad)
xchg
sub
and
rcl
or
sub
jno
and
ror
push
scas
stc
jne
mov
ss
fld
rcl
inc
or
(bad)
xor
je
lock
and
dec
(bad)
test
pop
movs
mov
mov
add
push
adc
inc
lods
fwait
sub
sbb
cmc
pop
jnp
mov
aam
call
add
push
push
push
dec
or
mov
add
and
or
scas
xor
mov
xchg
push
shl
mov
sub
dec
adc
mov
jne
out
mov
test
mov
mov
push
mov
in
sub
mov
cmp
inc
mov
or
mov
add
cmp
and
and
add
add
add
pop
sbb
xchg
inc
div
aam
cmc
adc
inc
push
addr16
push
nop
xchg
adc
push
inc
dec
inc
push
push
push
jne
add
or
or
leave
add
inc
movs
mov
adc
sub
dec
fs
imul
cmps
mov
loope
outs
sub
arpl
and
iret
or
mov
xchg
mov
xchg
clc
sub
push
adc
rcl
or
xchg
data16
lock
adc
lahf
loopne
pop
pusha
sbb
movs
mov
add
xor
mov
pop
adc
sub
dec
sbb
pushf
add
popa
ror
shl
add
mov
je
inc
pop
fmul
lock
add
gs
bound
in
sar
adc
fadd
pop
hlt
jmp
pop
inc
adc
pop
dec
add
xor
add
push
das
dec
jno
fdiv
test
psubq
and
call
retf
mov
mov
xchg
hlt
add
test
pop
add
mov
out
sbb
sub
int3
popa
popa
ret
mov
(bad)
adc
and
call
sbb
push
sar
fst
cmps
lock
add
cdq
mov
pop
xchg
les
add
int
nop
pop
lea
jb
in
xchg
xchg
or
sar
adc
test
mov
lods
dec
and
and
sbb
imul
in
xchg
ret
retf
inc
and
cmp
cmp
jae
dec
int
test
in
pushf
jne
mov
(bad)
and
scas
sub
or
nop
xor
push
sub
mov
push
aaa
adc
mov
mov
and
pop
and
outs
and
mov
xchg
(bad)
inc
retf
pop
mov
mov
jnp
adc
out
mov
inc
xor
push
adc
inc
mov
outs
mov
lock
enter
sbb
jnp
ret
push
gs
pop
pop
pusha
adc
sub
xchg
push
nop
ret
sub
lock
shr
xor
pop
add
or
push
pop
mov
mov
adc
inc
rol
pop
shr
xor
nop
push
jbe
mov
adc
xor
sbb
inc
and
pop
addr16
loope
sahf
mov
sbb
leave
xchg
sub
mov
(bad)
ror
shl
outs
call
imul
add
lds
out
imul
add
or
jmp
push
sbb
stos
and
adc
jmp
lods
enterw
push
inc
push
sub
ret
les
call
bnd
mov
cmp
loopne
test
cmp
stos
enter
dec
pop
ror
ja
push
and
add
push
test
inc
scas
lods
(bad)
and
sub
daa
xchg
int3
inc
(bad)
inc
add
cmps
mov
rol
sub
ret
mov
(bad)
xor
sub
pop
push
jp
pushf
movs
stc
dec
test
cmp
xor
cmp
fadd
inc
xor
jne
fild
mov
cmp
jne
pop
int3
shl
mov
jb
add
mov
push
movs
xchg
xchg
jno
mov
add
mov
inc
mov
dec
mov
sub
movs
je
dec
js
mov
xor
push
sbb
dec
inc
cmps
inc
or
aad
adc
test
inc
add
clc
inc
repnz
and
loop
push
or
cmp
mov
and
jbe
xchg
pop
push
add
inc
cmps
adc
add
ret
sub
je
cmp
inc
clc
or
(bad)
dec
mov
add
cmps
jae
or
(bad)
jmp
push
test
and
lods
lods
or
cmps
cmp
or
or
(bad)
test
adc
cdq
movs
inc
movs
je
push
movzx
sub
lahf
or
mov
push
push
jo
je
mov
stc
pop
pop
or
mov
jno
push
and
ret
adc
fsub
in
or
sbb
les
enter
addr16
and
popf
sub
in
jb
xor
jb
lds
lahf
in
and
imul
jo
mov
shr
in
jae
in
or
hlt
or
xchg
jbe
push
or
ret
out
or
pop
pop
cmp
cmp
loopne
mov
ret
sbb
xor
aas
pop
cmp
push
push
sub
add
add
call
dec
inc
xor
push
rol
mov
in
shr
add
mov
test
pop
das
adc
and
pminsw
sub
mov
cli
adc
add
mov
or
movs
pop
(bad)
add
sub
or
cmp
icebp
ins
ret
push
push
(bad)
dec
call
xchg
fwait
adc
fnsave
adc
icebp
pop
add
lea
sbb
push
repnz
or
sub
dec
sbb
call
xor
sub
adc
push
mov
mov
mov
and
sti
mov
je
add
dec
fsub
ds
fadd
push
adc
cmps
jno
int3
add
pop
outs
inc
stos
mov
std
or
sbb
arpl
push
and
push
dec
ror
xchg
add
ds
mov
ret
ror
cmp
mov
sbb
or
sbb
ins
jmp
pop
jmp
sbb
or
mov
pop
lods
test
push
rcl
je
and
sbb
push
mov
shr
jmp
jp
sbb
loopne
xor
popf
add
js
fadd
and
lock
shl
or
and
push
test
(bad)
imul
jbe
jae
sbb
stos
xor
sbb
inc
inc
mov
pop
sub
lds
add
stc
test
js
loop
dec
mov
push
mov
cmp
aad
popf
dec
ret
iret
fimul
fwait
xchg
inc
sub
mov
test
inc
xor
adc
sbb
inc
push
or
push
and
or
shl
pop
ficom
sub
pushf
enter
neg
lock
xchg
leave
mov
out
bound
fnstsw
cmp
jge
xchg
push
sbb
or
sbb
int3
jne
mov
aaa
mov
xor
scas
sbb
ss
daa
mov
(bad)
cdq
cmp
adc
ins
loopne
out
dec
pop
or
or
sub
sbb
in
imul
fcomp
inc
stos
adc
mov
out
mov
retf
xor
and
inc
ds
sub
arpl
xor
jne
sub
sbb
shl
arpl
or
sub
adc
sahf
jmp
sub
add
sub
jae
fild
sub
push
or
push
sbb
xchg
fnstenv
iret
mov
and
mov
pushf
sbb
or
adc
movs
movs
and
add
inc
mov
mov
test
lahf
jmp
push
fcmovbe
clc
pop
mov
pusha
ss
jp
push
or
sbb
and
ins
sub
in
dec
jp
mov
nop
mov
lods
fbld
dec
outs
adc
popa
and
sbb
shl
xor
jmp
nop
xchg
jo
imul
mov
cld
push
dec
jo
add
adc
out
add
popf
mov
inc
sub
and
and
lea
sahf
xchg
inc
inc
mov
sub
mov
fistp
or
xchg
lock
les
cmp
ret
jns
or
mov
or
and
ins
add
pop
sbb
sub
mov
(bad)
cmp
test
dec
xchg
stos
outs
add
inc
push
(bad)
cmp
adc
fsubr
inc
stos
out
dec
in
mov
scas
pop
xchg
sub
stc
into
xchg
dec
cli
add
fadd
push
ins
nop
sub
aad
adc
fisubr
push
hlt
and
or
les
adc
fisubr
sub
pop
sti
mov
add
call
test
push
loop
push
test
repnz
mov
push
inc
sbb
adc
adc
jmp
xchg
iret
iret
mov
outs
daa
mov
(bad)
hlt
mov
adc
cmps
sbb
mov
rcl
and
sbb
cmp
or
mov
sar
inc
mov
dec
rcl
int3
sub
push
sbb
pop
vmovhps
je
shl
mov
xcrypt-ctr
cmps
sbb
movs
loopne
fld
movs
std
and
push
rol
add
leave
test
test
xor
and
mov
es
ds
(bad)
loop
(bad)
or
mov
cmp
sub
sbb
loop
push
les
push
loope
fdiv
xlat
aad
ins
push
lods
aaa
fild
rcl
xchg
add
movs
rcl
lea
hlt
iret
xchg
xchg
adc
out
shl
or
jp
mov
dec
lods
imul
push
xor
inc
push
adc
pop
jmp
outs
lods
xor
les
mov
fimul
(bad)
je
pop
clc
rol
lods
mov
xchg
seta
sbb
adc
arpl
add
ret
sub
add
sbb
lock
int3
xchg
js
dec
pop
mov
sub
loop
push
mov
or
aam
std
sub
or
ret
push
and
add
leave
in
test
and
mov
fwait
enter
sub
outs
adc
mov
add
inc
dec
fcomp
ret
test
and
or
jo
pop
arpl
lea
dec
and
es
xor
mov
inc
adc
or
push
sbb
add
aam
fmul
jbe
xor
arpl
add
push
hlt
push
lahf
xor
fs
inc
jb
adc
dec
jae
retf
fwait
add
jbe
fstp
sbb
das
aaa
push
mov
xchg
xchg
inc
or
add
add
xor
adc
and
rol
mov
pop
xchg
loope
pushf
mul
aaa
mov
or
rcl
mov
inc
mov
xor
div
push
adc
mov
fld
xor
(bad)
icebp
arpl
add
repz
sbb
ror
js
and
push
and
adc
fdivr
jle
adc
cmp
in
sub
sbb
dec
mov
xor
aam
(bad)
push
inc
nop
jmp
inc
rol
int
adc
test
push
pop
inc
sbb
jecxz
stos
adc
jecxz
adc
add
sbb
add
inc
adc
aam
(bad)
imul
lds
sub
sub
push
sub
xchg
je
sbb
mov
adc
pop
test
sbb
nop
fdiv
dec
adc
adc
or
dec
and
xchg
lahf
dec
jmp
(bad)
lock
sub
push
lock
(bad)
stc
push
sub
mov
pop
das
or
xchg
jle
imul
rol
mov
hlt
xor
das
loop
iret
je
inc
dec
push
jmp
lds
pop
mov
xchg
add
popa
push
adc
popf
push
test
adc
inc
and
xchg
fadd
xor
add
fsubr
and
mov
pop
dec
sub
cdq
imul
sahf
mov
and
mov
or
sub
iret
adc
mov
scas
call
pop
repz
nop
push
pop
or
dec
jecxz
dec
xor
lea
xor
cwde
jmp
mov
push
xchg
sbb
mov
jmp
pop
jb
loope
cmp
add
jbe
inc
and
dec
pop
js
inc
mov
das
shl
jmp
test
xchg
jne
pushf
enter
test
xchg
inc
or
fist
inc
add
pop
mov
xchg
mov
xlat
mov
push
sbb
enter
cmps
mov
add
popf
les
loopne
jae
sbb
push
jae
imul
dec
cmps
add
push
bound
leave
retf
mov
dec
jb
dec
sub
xchg
and
add
clc
or
cmp
lods
je
cmc
jno
pop
rcl
(bad)
jecxz
in
mov
inc
jnp
cmovno
xor
sbb
fwait
xor
mov
cmp
hlt
das
cmp
repnz
sbb
push
rcr
mov
(bad)
jmp
(bad)
scas
movs
sbb
jns
add
les
sub
movs
sahf
mov
push
add
sub
ret
call
jl
jg
aaa
dec
inc
cmp
(bad)
mov
rcr
jnp
shl
sbb
cdq
xchg
jl
mov
mov
and
sub
or
xor
and
std
push
mov
bound
pop
push
retf
sub
je
or
or
mov
ins
add
mov
add
and
test
and
in
add
cs
pop
adc
sbb
daa
jo
ret
daa
cmp
pop
adc
xor
inc
addr16
mov
push
mov
add
sbb
lea
adc
fwait
add
ss
pop
push
(bad)
sub
jecxz
sbb
push
(bad)
pop
add
xor
mov
jne
ror
inc
push
mov
inc
movs
adc
gs
and
cdq
nop
push
(bad)
movs
bound
ja
in
lods
dec
push
mov
adc
call
sahf
cmp
xchg
fxch
(bad)
pop
xchg
sbb
adc
jb
and
add
adc
push
xor
arpl
loope
je
arpl
mov
sahf
inc
sub
push
je
(bad)
cmp
mov
fisttp
dec
rol
or
add
test
das
add
push
add
mov
pop
aam
jle
out
iret
xchg
fwait
jp
mov
sub
xor
in
or
xchg
or
jecxz
mov
adc
repnz
or
and
imul
push
dec
cmps
fnstenv
hlt
cld
pop
pop
dec
sbb
lods
sbb
adc
adc
adc
xor
cmp
add
xor
sahf
adc
jns
and
push
into
jo
inc
sbb
mov
pop
movs
xor
inc
adc
cld
jmp
sub
mov
jno
out
xorps
into
sbb
and
sub
xchg
sbb
test
cld
add
xchg
adc
mov
call
xor
sbb
sub
jmp
mov
sbb
sti
xchg
ret
call
and
packssdw
mov
lods
push
ins
jne
rol
add
xchg
jo
xor
pop
test
push
mov
shl
call
push
neg
pop
sbb
and
jl
pop
ja
fdiv
rol
dec
push
lock
or
call
rcl
and
test
cmp
pop
lock
push
mov
mov
mov
sbb
sub
dec
in
xor
(bad)
call
cdq
(bad)
arpl
arpl
and
xchg
jne
xchg
popa
bnd
jg
dec
push
push
dec
(bad)
mov
adc
jb
adc
or
jbe
cmp
or
jne
mov
cmp
or
sti
outs
iret
loope
add
dec
cld
jb
mov
mov
xor
cmp
arpl
fld
push
popa
movs
int
cmp
or
test
or
xchg
xor
sbb
stos
or
out
sar
jg
hlt
add
shr
dec
mov
push
inc
dec
and
hlt
shl
(bad)
or
adc
push
push
pop
enter
call
mov
jo
sub
pop
dec
mov
(bad)
pop
out
bound
adc
mov
push
sbb
sub
dec
aas
push
sbb
in
out
lods
and
adc
or
sub
hlt
test
jne
or
sub
and
and
push
call
dec
mov
test
mov
xlat
push
cmps
mov
and
cmp
adc
or
inc
sub
add
aaa
jae
push
dec
xchg
nop
int
and
xor
or
mov
xor
or
adc
inc
jmp
mov
sub
add
loopne
pop
mov
shl
scas
push
cmp
push
sub
inc
add
enter
xchg
inc
dec
loopne
push
xor
or
retf
add
mov
inc
shr
cwde
ja
and
mov
sub
jne
jnp
push
mov
dec
nop
sbb
loopne
xchg
int
adc
or
adc
xchg
xor
imul
ins
xchg
daa
mov
int3
or
inc
add
add
and
sub
clc
push
popa
inc
loopne
sub
or
fld
mov
aas
xchg
jae
push
scas
ja
push
xchg
imul
lods
xchg
test
into
rol
jo
aam
(bad)
adc
sub
hlt
pop
push
jle
cmp
adc
popa
je
sbb
sbb
jge
adc
or
add
sub
cmp
aas
jg
or
rcr
mov
cmp
mov
push
xor
push
push
inc
dec
cmp
jl
test
sub
(bad)
imul
and
and
idiv
sar
mov
pop
pop
add
and
mov
out
test
test
sbb
add
add
inc
jns
or
and
add
sub
or
pop
popa
and
ret
(bad)
scas
mov
jnp
dec
jecxz
jmp
shr
cmp
inc
test
mov
jne
dec
popa
pusha
lea
call
aad
push
hlt
hlt
mov
imul
js
mov
add
push
out
xor
jecxz
xor
sub
xor
inc
loope
and
loope
jl
pop
lock
fadd
sub
sub
inc
out
dec
shl
or
xor
adc
lods
jne
inc
adc
daa
cdq
sbb
aaa
xor
test
adc
ins
test
shl
mov
pop
jnp
cmp
cmp
sahf
mov
dec
cmp
xor
cmp
adc
test
jnp
aaa
dec
pop
adc
xchg
adc
mov
rol
push
dec
lahf
lods
mov
mov
jp
mov
pop
rol
mov
pop
inc
pop
stos
pushf
mov
cmc
push
pop
push
jle
adc
sub
jge
xlat
push
arpl
push
out
xor
push
dec
repnz
jns
xchg
cmp
fwait
cmp
call
push
ja
int3
inc
popa
call
push
loopne
cdq
(bad)
popf
cmp
popa
lds
cld
add
mov
repz
mov
and
gs
in
sub
pop
add
sbb
cmp
es
scas
and
test
imul
mov
std
pop
and
inc
xchg
push
adc
sub
fsub
push
sub
cmp
or
pop
sbb
int
or
lods
addr16
(bad)
push
or
xchg
inc
clc
dec
and
fcmovnbe
daa
fstp
inc
mov
add
adc
fcomp
ss
sbb
lea
and
inc
ret
hlt
jp
xor
in
push
and
fld
push
sbb
push
dec
lock
imul
adc
jmp
sbb
push
add
fld
xchg
xchg
add
push
imul
pop
fnop
sub
int3
repnz
pop
int3
or
pop
fsubr
inc
push
cmc
repz
xchg
popa
leave
or
sbb
or
dec
int3
or
(bad)
xchg
xchg
js
push
add
xor
adc
jb
ror
or
sub
sbb
lahf
adc
retf
enter
scas
in
ss
mov
enter
enter
inc
push
or
dec
in
sti
loopne
imul
das
ins
jb
aaa
gs
sbb
sbb
dec
or
mov
sbb
(bad)
mov
sbb
(bad)
into
cwde
ret
and
test
int
or
mov
push
dec
dec
dec
aad
dec
pop
pop
xchg
retf
add
(bad)
or
or
sbb
adc
pop
lock
dec
lods
cmp
pop
mov
aas
lea
jne
or
add
scas
xchg
inc
out
or
mov
test
push
adc
popf
popa
cld
or
cs
inc
xor
and
inc
lods
inc
adc
adc
mov
xor
sbb
mov
sub
cmp
fimul
mov
fmul
mov
movs
and
xor
in
in
daa
mov
shr
mov
loop
add
sbb
(bad)
add
loopne
push
and
clc
sub
lods
or
mov
call
sbb
shr
sbb
das
or
xor
sbb
imul
add
adc
stos
push
and
aam
sbb
mov
mov
add
fisubr
mov
adc
(bad)
and
imul
outs
ror
xor
dec
rcl
pop
cmp
push
push
mov
fild
ss
mov
aas
jno
and
mov
jne
call
jmp
push
pop
adc
push
aam
cmp
retf
test
gs
(bad)
lahf
inc
jmp
pop
loop
pop
and
xchg
sbb
stos
je
int
mov
xor
mov
sub
std
push
dec
loop
and
xchg
cmc
sub
inc
hlt
xchg
(bad)
adc
jno
popa
nop
icebp
push
xor
pusha
call
ret
pop
pop
popa
lock
ja
sbb
jmp
and
je
pop
mov
adc
cmps
inc
test
stos
and
xor
jmp
and
js
out
adc
ret
mov
mov
(bad)
fsubrp
jno
test
push
cmp
mov
dec
daa
or
fdiv
jmp
ss
sbb
and
and
nop
pop
imul
loop
push
or
push
lds
jmp
fidiv
and
adc
add
call
cwde
xlat
mov
ret
push
or
in
xor
popa
mov
or
add
adc
loop
mov
movs
mov
daa
loopne
cmp
xor
pop
pop
mov
push
lahf
and
in
dec
cwde
je
dec
xchg
inc
and
add
in
fs
push
mov
jno
int
loope
test
jmp
dec
xor
loop
mov
sbb
fsubr
pusha
sub
jmp
add
iret
mov
xchg
rcr
cmp
inc
bound
daa
adc
jecxz
or
retf
mov
sub
and
bound
cld
jmp
and
push
dec
(bad)
jl
test
jb
test
idiv
mov
ret
js
pop
sbb
fcomp
pop
clc
jl
cmp
mov
out
mov
jmp
push
add
nop
repz
add
aaa
push
ss
add
adc
jl
sub
adc
pop
mov
sbb
(bad)
ror
inc
adc
mov
ret
mov
mov
cmps
popa
push
cld
adc
ja
retf
mov
nop
inc
dec
jmp
dec
dec
add
mov
sub
pop
adc
pushw
xor
mov
or
stos
mov
sub
test
and
sbb
imul
xor
add
push
cmp
or
cmp
lock
jo
jo
and
cmp
repz
inc
sub
jne
jecxz
sub
pusha
xor
sbb
(bad)
int3
xor
jno
pop
hlt
ds
mov
(bad)
xchg
xchg
adc
ret
inc
fwait
call
jns
or
sbb
popf
sbb
hlt
xor
pusha
test
mov
xchg
xor
repnz
xchg
neg
dec
jmp
adc
xor
es
pop
retf
sub
inc
inc
mov
jle
js
movs
loop
lods
pop
div
imul
inc
fs
outs
push
add
(bad)
cli
push
push
retf
jb
rcl
add
jl
sub
add
mov
jl
push
(bad)
aaa
into
les
daa
nop
or
xchg
fimul
push
cdq
test
lock
retf
hlt
mov
popa
adc
pop
cmps
loope
mov
jo
ret
pop
dec
adc
inc
cmp
ss
ja
mov
jnp
dec
adc
popa
adc
and
pop
add
clc
fsubr
aad
or
adc
aaa
sbb
fcom
mov
mov
fistp
int
add
pop
jo
fisttp
adc
jmp
jne
and
outs
retf
adc
push
sub
or
mov
pop
xor
inc
fmul
pop
xor
add
lods
or
nop
leave
adc
xchg
loop
add
mov
adc
mov
push
cmp
add
pop
xchg
xor
(bad)
adc
fsub
rol
add
dec
sub
jae
shl
sbb
cmp
mov
inc
(bad)
adc
sar
mov
mov
adc
imul
add
push
pop
les
jl
mov
inc
mov
jge
mov
pushf
pushf
add
xchg
xor
lods
and
shr
pop
loopne
lods
sub
mov
pop
jg
arpl
pop
mov
enter
cmp
fcomip
imul
sti
and
and
dec
xor
jno
pop
dec
jecxz
or
sbb
stos
pop
dec
aaa
or
inc
shl
lds
add
sub
xor
mov
cmc
push
call
sbb
and
push
sub
mov
jbe
inc
xor
out
add
xchg
leave
(bad)
(bad)
cdq
jp
sbb
inc
test
jmp
and
aam
addr16
and
popa
sahf
sub
in
sbb
or
sbb
mov
add
pusha
cmp
leave
test
popa
aaa
push
shl
pop
push
dec
inc
inc
popf
enter
or
ss
pop
ret
lahf
loope
xlat
push
je
dec
imul
sub
mov
sbb
in
(bad)
jmp
push
aaa
ds
mov
mov
pop
loop
retf
cmp
lods
je
add
add
xchg
(bad)
adc
xor
cmps
adc
mov
cli
xchg
dec
mov
mov
loope
add
jnp
dec
test
nop
cwde
and
jb
sbb
cmp
mov
cmp
sbb
xor
nop
or
jne
add
inc
pop
data16
mov
sub
movs
iret
jecxz
push
jg
dec
fisubr
push
popa
es
or
ss
mov
cmp
scas
cmp
int3
sbb
outs
and
enter
fisub
inc
inc
xor
push
std
cmp
lods
mov
add
add
repnz
push
ds
add
mov
jg
nop
add
jmp
and
mov
lods
fs
and
pop
mov
cmp
es
xor
jno
cmp
xor
jne
mov
aaa
adc
(bad)
and
imul
push
test
xchg
lea
xor
xlat
rol
xlat
adc
cwde
cs
dec
iret
adc
lods
dec
add
sbb
movs
add
ret
xor
and
mov
and
xor
cmp
or
cdq
xchg
pusha
inc
rol
mov
neg
test
adc
or
dec
rcl
xchg
push
clc
jmp
out
fnsave
mov
enter
in
push
pop
dec
cmp
push
xchg
lea
push
mov
aam
stos
enter
sub
or
rol
ror
adc
shl
push
into
xchg
mov
lods
rol
es
inc
add
mov
cdq
jbe
fdiv
inc
enter
sbb
xor
in
push
adc
xchg
xchg
or
push
adc
push
daa
call
cmps
jns
xchg
xor
jb
(bad)
pop
cmp
popa
cmp
imul
and
and
adc
je
ret
or
fisttp
clc
lock
sub
enter
fsubr
or
cmp
sub
dec
test
les
fld
rcl
xchg
sbb
pop
mov
adc
add
adc
nop
call
in
add
push
jns
fcom
sar
mov
jo
movs
sub
mov
je
inc
add
retf
cmp
pop
add
aam
push
or
pop
sub
xchg
and
add
sbb
push
je
cmp
cmp
push
mov
adc
mov
call
and
dec
sub
push
push
ins
push
adc
fs
adc
in
fnstsw
lods
mov
mov
jmp
sub
out
je
jecxz
ins
sub
loopne
fstp
in
imul
jg
stos
and
adc
std
sahf
test
mov
cmp
add
xor
fmul
sub
mov
jae
and
xchg
sbb
int3
jp
fwait
mov
mov
lock
cmps
shl
mov
rcr
fnstsw
(bad)
push
rcr
cmp
call
inc
sbb
mov
xor
clc
add
imul
call
push
cmp
hlt
test
cmp
pop
iret
add
sub
lods
inc
sub
jnp
sub
jo
jmp
xchg
sub
loopne
imul
or
mov
js
sbb
pop
retf
pop
bound
into
in
push
cmp
jmp
adc
dec
xor
pop
into
inc
int3
mov
and
cld
xchg
push
dec
and
adc
inc
cwde
pop
iret
shr
adc
cwde
pusha
pop
add
push
jl
loope
mov
inc
mov
add
xchg
and
mov
test
fs
fs
lea
add
ret
and
push
mov
icebp
rol
stos
inc
add
xor
call
xor
in
je
mov
clc
inc
cmps
pop
cmp
ret
mov
lods
shl
sub
rol
sbb
and
test
fbstp
push
es
ret
(bad)
mov
icebp
add
mov
adc
dec
or
mov
imul
stos
pop
push
mov
add
add
(bad)
cmc
xchg
shl
aaa
imul
(bad)
aam
inc
dec
sub
cs
mov
pop
lea
cmps
adc
jnp
shr
test
or
pop
xor
clc
jno
pop
outs
shl
push
popa
mov
push
les
out
push
jp
fcmovbe
cmp
ret
loopne
mov
fcom
and
add
outs
inc
cmp
movs
ja
push
sbb
mov
dec
repnz
pop
add
jmp
mov
fild
adc
es
add
lock
xchg
mov
mov
adc
mov
push
call
int3
jne
test
iret
push
pop
jmp
add
sbb
push
cmp
ja
adc
cmp
cmp
mov
popa
dec
or
dec
shr
loope
or
(bad)
out
and
popa
xor
xchg
jo
(bad)
xor
and
and
add
sbb
push
outs
(bad)
lds
pop
or
arpl
fbld
pop
jne
cmp
push
inc
cmp
jne
or
push
push
mov
pusha
inc
push
dec
mov
pop
ss
inc
push
int
aaa
cs
push
fisttp
mov
je
push
xchg
push
es
cmps
xchg
add
push
dec
in
mov
pop
into
jmp
sbb
int3
add
lods
inc
jmp
aad
cmp
bound
repz
das
sahf
pop
adc
mov
sti
not
adc
movs
sbb
(bad)
pop
pop
mov
pop
ins
in
mov
cmp
dec
out
pop
jne
sbb
and
outs
sbb
dec
ror
in
aam
pop
adc
mov
and
xor
lock
mov
aaa
fdivr
(bad)
cmp
(bad)
int3
xchg
adc
or
out
xor
push
or
push
xlat
and
pusha
or
or
clc
es
pop
sbb
cmc
jmp
data16
adc
pop
xor
sub
or
inc
pop
xchg
inc
in
jp
xor
mov
or
or
sub
imul
dec
xchg
test
imul
push
addr16
je
sbb
mov
mov
xor
fwait
mov
mov
sbb
pusha
mov
dec
movs
jge
sti
jne
push
adc
mov
jle
test
sbb
daa
pop
pop
call
push
or
hlt
and
dec
inc
pop
xchg
push
bound
ss
sub
cs
mov
and
and
add
lds
stos
mov
jmp
int
enter
cmc
xchg
arpl
and
sbb
sar
gs
cmp
stc
or
imul
shr
stc
loopne
xchg
ror
adc
inc
add
xor
add
aad
js
arpl
mov
lock
mov
dec
mov
and
mov
pop
shl
or
mov
lock
jne
xor
pop
test
fcomp
gs
jge
out
dec
fld
pop
cmc
push
sbb
mov
pop
div
aam
add
and
es
pusha
push
push
adc
push
mov
mov
mov
push
dec
jge
fcom
sbb
adc
xor
sub
or
sbb
addr16
push
lahf
mov
(bad)
sbb
and
loop
mov
aas
push
lds
test
and
push
push
ficom
xor
jmp
jo
pop
enter
cmp
jno
lock
mov
popa
jne
pop
dec
pusha
sbb
push
jmp
jo
std
and
jmp
xchg
retf
adc
mov
or
dec
outs
shl
cdq
mov
xchg
jbe
stos
xor
push
sub
add
xor
xor
fs
adc
out
inc
jae
adc
push
into
pop
retf
or
xchg
inc
push
sbb
adc
ins
mov
mov
hlt
pop
std
push
or
dec
dec
push
adc
test
adc
aam
push
int
in
ds
xchg
clc
aas
pop
mov
fsub
fwait
test
cmp
xchg
push
cmp
push
xchg
fsubr
in
loop
mov
lock
sbb
das
mov
add
test
mov
rol
jecxz
sub
arpl
dec
inc
imul
add
dec
test
mov
jle
jne
pusha
test
jbe
mov
adc
pop
jmp
add
hlt
cdq
or
sub
dec
cmps
repz
dec
lahf
push
mov
mov
push
xchg
add
stos
ins
(bad)
clc
pop
(bad)
std
call
pop
dec
push
dec
ret
les
or
stos
cmps
pop
cmp
inc
xor
or
ja
jo
pop
push
call
push
in
(bad)
or
lahf
jo
adc
sbb
lahf
jmp
mov
and
inc
xchg
push
pop
gs
jmp
dec
(bad)
rol
sbb
ret
dec
cs
xor
sbb
ja
push
push
jnp
pusha
out
and
aaa
sbb
push
gs
jnp
mov
add
mov
ja
bound
lock
add
mov
adc
add
mov
test
jo
pop
dec
add
stos
inc
jge
mov
sbb
fidivr
jo
jmp
jmp
and
and
lea
mov
dec
leave
subps
fnstenv
sub
cwde
cmps
mov
sub
mov
clc
jbe
movs
hlt
jg
outs
pushf
stos
shr
enter
jmp
xchg
rcr
mov
fs
xor
jo
add
add
xchg
sbb
mov
test
hlt
cmps
test
push
sti
push
dec
mov
je
xchg
or
aas
call
lock
add
sbb
or
inc
pushf
shl
sbb
push
imul
(bad)
xchg
and
mov
push
sbb
leave
xor
mov
mov
daa
sbb
sbb
sub
das
sub
adc
js
lds
add
add
mov
cmp
in
or
mov
ror
or
and
div
out
loopne
push
in
je
outs
mov
add
and
mov
mov
lods
or
add
inc
jmp
jmp
cmp
jne
inc
cmp
xor
adc
inc
add
ins
inc
pop
fldenv
pop
adc
sub
add
into
mov
jg
(bad)
(bad)
pop
or
cmp
mov
push
xchg
pop
mov
mov
push
cdq
inc
cwde
cmc
mov
imul
cmp
push
cld
and
dec
and
pop
adc
jo
cmp
jns
(bad)
add
dec
and
sub
ret
jle
ss
add
into
in
cmp
shr
jmp
mov
sbb
(bad)
int
push
pop
inc
movs
mov
ret
xchg
mov
xor
(bad)
jo
shr
in
and
jecxz
aaa
pusha
jp
xor
(bad)
mov
fs
popa
or
or
add
in
cmp
and
jno
or
in
stc
or
ins
or
inc
je
and
or
int
test
pminsw
sbb
sar
mov
and
fidivr
jge
dec
mov
jbe
je
fs
jbe
into
inc
stos
pusha
bound
inc
cmp
add
push
sub
inc
aas
push
push
call
mov
push
bound
nop
daa
dec
mov
push
sub
push
neg
ss
push
xchg
push
or
in
xchg
or
add
and
loope
jg
xor
push
and
lea
hlt
jmp
outs
add
push
dec
into
ror
cmp
(bad)
(bad)
jmp
xchg
or
push
and
mov
xor
xor
mov
push
lea
rcr
push
and
pop
leave
enter
adc
nop
aaa
sbb
inc
adc
imul
jne
or
xchg
pop
or
or
mov
mov
sub
push
es
in
push
push
movs
les
add
scas
adc
mov
push
push
mov
cmp
xchg
jmp
retf
mov
stos
inc
inc
push
pop
dec
push
adc
inc
stc
xlat
and
pop
mov
mov
mov
nop
inc
lea
cmp
outs
dec
inc
mov
push
mov
sub
shr
fs
and
push
das
pop
push
sub
not
mov
jo
in
shr
movs
ret
cmp
les
sub
mov
push
dec
inc
dec
mov
call
inc
or
popa
adc
and
movs
(bad)
fsubr
or
lsl
add
cwde
cmc
nop
in
jne
sbb
and
leave
call
mov
inc
adc
test
in
mov
xor
or
or
and
loope
icebp
mov
add
add
rol
add
test
xlat
sbb
push
add
(bad)
ins
fisttp
cli
in
sbb
test
push
sar
lock
jae
dec
scas
or
out
cwde
mov
adc
dec
sbb
jno
stos
call
mov
dec
jo
and
leave
les
int3
xor
mov
fmul
lds
cld
adc
pop
add
jl
sbb
xor
push
adc
aaa
cmp
jno
pusha
test
pushf
or
or
mov
xchg
outs
and
cmc
pop
xchg
xor
add
loopne
mov
or
and
and
push
cmp
xor
aad
mul
adc
je
pop
add
test
and
jne
mov
out
adc
push
sub
and
inc
jne
push
mov
sbb
push
push
pop
mov
push
(bad)
repz
movs
or
jb
loope
pop
loopne
mov
jae
push
xor
dec
ins
sar
pop
pop
push
push
call
loop
pop
inc
add
das
mov
sbb
aas
sub
push
xor
mov
pop
lods
outs
and
pop
add
jb
in
dec
ror
dec
jle
test
nop
add
int3
lods
test
pop
je
popa
ins
push
retf
inc
cwde
fucomp
sub
add
add
adc
sbb
(bad)
stc
dec
mov
dec
ror
inc
mov
dec
sahf
rol
pushf
add
sbb
cmp
or
test
and
rol
cmps
movs
add
add
shld
push
dec
mov
pusha
adc
xchg
fisub
adc
in
shl
shr
jle
jb
movs
mov
xor
adc
ss
fcom
nop
inc
test
push
into
add
inc
enter
mov
push
cmp
js
mov
mov
cmps
sbb
mov
test
push
pop
lods
movs
in
add
adc
hlt
mov
sbb
mov
adc
jns
scas
xchg
push
ins
jle
cld
adc
mov
mov
mov
cmps
cmp
(bad)
or
push
(bad)
pop
xor
test
xor
cmp
cmp
adc
mov
pushf
sub
ror
xchg
adc
mov
mov
mov
fmul
fdivr
ret
cmps
xchg
adc
or
ret
mov
pushf
inc
lods
fstp
fdivr
sub
or
es
dec
sbb
push
popa
neg
ins
dec
mov
not
cmp
inc
cmc
movs
push
lock
jne
dec
and
add
mov
dec
test
dec
jb
dec
cmps
jo
out
jo
push
imul
dec
(bad)
jle
inc
or
xchg
js
imul
into
push
jle
sbb
or
outs
mov
add
jnp
inc
enter
sar
adc
inc
add
dec
aas
fs
add
inc
ret
add
fstp
imul
push
(bad)
icebp
sbb
xlat
ss
test
or
les
adc
in
add
test
push
and
addr16
fist
inc
mov
outs
mov
(bad)
adc
ins
jp
push
fwait
mov
add
inc
or
xor
sub
mov
and
arpl
mov
jno
push
adc
jae
movs
xchg
xor
push
cmps
dec
cmp
inc
push
js
pop
and
mov
ss
rcl
mov
push
add
call
mov
je
and
mov
pop
mov
pop
jb
je
das
call
push
xchg
test
mov
push
push
sbb
imul
push
adc
(bad)
retf
enter
push
mov
sub
adc
push
push
mov
or
dec
push
or
jle
mov
ins
sbb
cs
(bad)
pop
push
lds
arpl
outs
mov
movs
aaa
pop
or
mov
jl
js
xchg
cmp
or
xchg
adc
push
xchg
pop
sub
xchg
push
pop
sub
mov
push
sub
loope
pusha
pusha
pop
xor
nop
test
mov
icebp
add
or
add
or
leave
pop
jecxz
test
adc
rcr
xchg
les
cmp
outs
adc
sbb
leave
shl
fcom
or
cmp
shr
or
fwait
movs
add
fwait
or
jne
jp
rol
sbb
call
sbb
cmp
pop
mov
dec
add
or
or
out
add
movs
popf
mov
push
cmp
cmp
cmp
es
inc
inc
movs
and
ins
xlat
xchg
pushf
and
mov
aad
jno
cmp
jnp
je
mov
sub
iret
mov
aaa
sbb
sbb
fidiv
inc
mov
dec
xor
enter
adc
adc
and
repz
mov
dec
pop
or
lea
jae
cs
push
or
adc
outs
in
stc
add
sbb
add
pushf
mov
push
xchg
stos
dec
shr
cmps
push
sub
in
and
and
adc
clc
or
jge
retf
or
or
sub
jp
mov
mov
pusha
or
fsub
shr
push
nop
adc
inc
cmps
add
mov
cs
push
jns
adc
mov
out
push
call
sub
fs
xchg
cmps
and
fs
sbb
dec
lds
add
lods
add
sbb
jne
sbb
fcmovnb
fcomi
sbb
add
mov
adc
mov
cmp
push
leave
push
enter
add
(bad)
int
inc
cmp
xchg
fdiv
push
jne
mov
xor
rol
adc
ja
and
and
pop
push
sbb
and
add
dec
dec
push
mov
sub
lea
mov
and
push
push
mov
push
cmp
xor
mov
ret
loope
add
jmp
sub
dec
iret
mov
sub
mov
clc
(bad)
xor
pop
out
inc
jmp
xchg
pop
jg
popf
pop
fs
inc
fnstenv
add
aaa
pop
dec
mov
dec
xchg
or
inc
outs
jp
or
inc
fimul
inc
test
jge
int
rcl
jge
and
mov
xchg
movs
mov
sub
adc
popf
mov
ror
mov
imul
or
pusha
cdq
ss
shl
test
shl
pushf
rcr
xchg
mov
dec
jg
sbb
ret
cmps
or
ret
es
adc
push
sub
neg
icebp
pop
or
shl
inc
popa
xor
jmp
pop
dec
xchg
jo
cmp
push
das
iret
daa
dec
fisubr
adc
mov
jno
adc
nop
jnp
or
add
movs
push
cdq
add
add
rcr
sbb
movs
sbb
push
rol
pop
or
and
add
sub
push
push
cmp
add
mov
ins
mov
lods
or
sub
mov
mov
or
sub
push
adc
rcr
or
dec
dec
cmp
shl
mov
xor
fsub
loopne
add
stos
jecxz
mov
lods
mov
popf
add
xchg
(bad)
push
fsub
stos
movs
aaa
mov
cmp
lea
add
mov
fs
push
scas
mov
lahf
sbb
movs
mov
inc
inc
nop
cwde
arpl
ds
iret
mov
loopne
rol
add
scas
test
sub
mov
sbb
arpl
sub
and
mov
dec
repnz
(bad)
in
cmp
add
sbb
push
pop
pop
pop
loope
cs
add
or
or
in
rol
movs
ret
mov
popa
mov
ins
jnp
mov
int3
pop
mov
cmp
call
cs
int3
cmp
aad
xchg
cmc
inc
mov
ret
cwde
mov
jl
pop
in
sbb
jecxz
mov
mov
cmp
push
adc
cmp
add
mov
cmps
sub
sahf
xor
pushf
cwde
dec
das
or
push
mov
jae
pusha
add
jmp
push
icebp
add
rol
mov
and
and
frstor
push
sbb
push
cmp
pop
nop
in
scas
mov
mov
sbb
test
sbb
or
loopne
mov
push
pop
pop
pop
inc
and
aad
outs
sbb
xchg
bound
pop
loopne
cmp
inc
fidivr
adc
sub
add
cwde
out
dec
lods
cmc
into
popf
and
pop
adc
int3
in
xchg
mov
inc
xchg
push
push
in
and
cmps
push
test
pop
fnsave
xchg
test
add
out
cwde
pushf
xor
pop
ret
sub
add
jae
cmps
adc
outs
enter
dec
inc
mov
loop
push
popf
mov
jmp
push
aaa
push
shl
(bad)
das
adc
push
fwait
addr16
imul
ins
pop
call
push
sub
and
xor
xchg
das
scas
and
js
xor
push
fst
sar
data16
repz
sub
imul
inc
inc
sar
xor
mov
pop
movs
shl
and
ja
xchg
pop
cmp
jmp
(bad)
enter
inc
cmp
cmp
jl
xor
or
mov
adc
sub
das
sub
or
cmps
into
push
(bad)
xchg
jae
jno
jle
sub
les
hlt
pushf
push
sar
mov
enter
push
xor
push
push
jge
sub
cmps
cmp
sbb
int
or
inc
mov
fwait
mov
stos
sub
or
ret
xor
call
je
adc
test
or
retf
ins
add
push
adc
mov
pushf
xor
cmp
dec
xchg
icebp
push
or
sbb
push
sti
pop
inc
sbb
cli
dec
cwde
jne
cdq
lock
in
adc
cwde
xor
(bad)
test
mov
add
add
adc
rcr
sub
cmp
adc
sbb
mov
dec
iret
cld
and
adc
bound
loope
clc
sub
add
cmc
jbe
icebp
ins
and
mov
das
add
pop
pop
iret
mov
sbb
pop
mov
xor
shl
mov
and
sbb
push
outs
xchg
or
outs
mov
sub
xchg
sbb
xlat
ret
mov
push
leave
adc
pop
lahf
xor
sbb
xchg
mov
push
inc
test
in
cmp
xchg
test
pop
inc
and
sti
jle
or
sar
clc
jnp
movs
inc
or
mov
in
push
adc
aad
cmp
popf
outs
push
pop
xor
movs
push
retf
dec
add
(bad)
int
mov
xor
or
xchg
sbb
add
xor
inc
dec
out
aad
pushf
stos
or
pushf
(bad)
fst
je
push
jns
adc
cwde
test
icebp
jmp
and
stos
and
add
push
inc
dec
xchg
movs
add
and
les
inc
js
jecxz
inc
mov
stos
pop
js
mov
dec
xchg
mov
inc
add
push
cmps
shl
fst
pop
or
(bad)
jecxz
dec
xchg
xchg
inc
dec
push
xor
inc
jl
lea
fucomi
ins
mov
cdq
movs
cmp
and
(bad)
jne
test
(bad)
cwde
in
push
xchg
shl
loope
and
push
or
adc
add
inc
ror
jno
sub
lea
push
shl
jge
add
xchg
and
and
add
pop
adc
or
je
adc
and
xor
mov
loope
fst
xor
and
popa
sub
sbb
retf
jnp
mov
js
xchg
xor
dec
push
out
add
fucom
test
outs
es
mov
outs
add
ror
fwait
and
or
pop
jne
and
fs
fiadd
(bad)
push
js
sti
std
outs
test
inc
or
int3
push
push
retf
jl
repz
jo
inc
and
inc
mov
or
adc
xor
nop
mov
daa
push
fild
lahf
dec
or
dec
ret
or
ror
pop
das
ror
test
or
jmp
pop
(bad)
cmp
dec
adc
div
stos
mov
leave
add
mov
jae
adc
push
pop
lods
push
jg
push
jne
adc
sbb
shl
jb
cwde
bound
test
js
test
sbb
aaa
sub
mov
ins
mov
pop
sti
mov
pop
adc
push
pop
xchg
xchg
xor
xor
xchg
mov
loopne
dec
add
jb
cwde
xor
dec
scas
or
and
aad
jnp
jne
and
(bad)
pop
add
shl
test
je
or
sub
or
mov
ins
mov
das
clc
fwait
(bad)
retf
inc
xor
ret
sbb
xor
in
mov
xchg
push
fild
dec
lods
popa
test
mov
cmps
fsub
or
pop
mov
inc
cwde
inc
frstor
add
test
add
mov
lock
xchg
inc
in
mov
mov
(bad)
mov
ins
popa
loop
in
out
and
add
push
push
add
push
or
jl
arpl
repnz
ret
js
iret
cdq
les
fs
mul
jecxz
mov
pop
shr
mov
or
or
sbb
push
cwde
jmp
jl
ja
mov
xchg
sahf
and
je
adc
bound
ja
arpl
mov
add
lods
ins
mov
adc
sub
add
push
aam
adc
adc
int3
aas
add
mov
pop
js
mov
shl
imul
mov
push
dec
pop
or
or
and
push
push
outs
inc
(bad)
mov
je
test
xor
ds
les
dec
dec
or
mov
mov
mov
mov
sbb
push
(bad)
pop
and
or
xchg
push
jecxz
into
js
(bad)
rcl
pop
push
add
adc
xchg
push
(bad)
push
jp
(bad)
repz
jnp
sub
fcmovne
call
mov
xchg
inc
add
jae
and
add
jbe
bound
dec
bound
jo
popf
loope
loope
dec
and
cmp
out
jmp
frstor
adc
ret
or
jl
pop
movs
cmp
mov
jne
sbb
inc
nop
or
cdq
jne
enter
mov
mov
cs
jae
or
jge
pop
lods
push
ror
mov
ret
pop
sbb
mov
shl
push
push
mov
or
sub
push
movs
jge
add
xor
mov
mov
add
dec
sbb
and
mov
cmc
add
lea
jg
push
mov
data16
add
push
pop
div
sti
stc
sub
out
mov
add
dec
ja
data16
or
lea
stc
cwde
cmc
ja
ret
jecxz
dec
add
push
push
mov
add
or
xor
mov
enter
and
sbb
lea
cs
data16
and
add
out
psubd
mov
sbb
pop
adc
pop
enter
ret
(bad)
push
lods
shr
inc
mov
sbb
push
aad
pushf
mov
jge
adc
fadd
sbb
xor
lahf
jle
in
mov
mov
cmp
(bad)
cmp
ret
push
or
jmp
mov
data16
dec
stos
pavgb
pop
and
sti
inc
sbb
dec
js
adc
fwait
into
retf
xchg
sbb
fadd
clc
inc
and
push
cs
inc
add
mov
dec
inc
mov
shl
add
or
jge
(bad)
shr
push
or
sub
test
xchg
cmc
rcr
(bad)
mov
in
sbb
test
push
jo
movs
cmp
stc
dec
retf
add
jge
clc
imul
lods
sbb
out
adc
inc
push
popa
(bad)
lods
mov
sub
add
sbb
xor
outs
leave
std
ror
popf
mov
fidiv
inc
jno
into
jmp
push
jbe
xor
ja
enter
jl
ret
ror
(bad)
into
(bad)
pop
xor
xchg
xchg
mov
nop
(bad)
mov
fadd
aam
inc
cmc
out
es
mov
xchg
adc
ins
mov
stos
jnp
enter
add
bound
cmp
xchg
pop
and
arpl
in
loopne
push
sbb
inc
call
or
call
inc
jne
pusha
hlt
js
pop
call
fwait
cmp
and
mov
aam
retf
mov
enter
adc
lods
sbb
xchg
out
add
pop
push
dec
loopne
retf
xchg
or
shr
jmp
mov
test
jle
hlt
ins
ins
and
or
fwait
(bad)
or
movs
inc
push
and
jo
fsubr
fiadd
ror
adc
inc
push
cmp
adc
in
push
rcr
pop
int
mov
xchg
(bad)
sub
lods
nop
jns
stos
xchg
inc
js
ins
and
jmp
inc
or
pop
pop
mov
dec
jge
lods
or
loopne
add
or
call
sbb
les
ret
fcmovb
ret
(bad)
push
aaa
mov
rol
pop
lods
cmps
jae
jecxz
sbb
mov
outs
adc
push
xchg
and
shl
addr16
pop
sub
ins
scas
adc
add
xor
jbe
not
iret
mov
or
pop
rcr
inc
aam
inc
loope
mov
or
pop
dec
inc
add
sub
push
jl
jmp
adc
dec
je
inc
add
imul
xlat
adc
push
stos
and
addr16
push
test
adc
jle
retf
gs
fcmovu
loop
or
jbe
dec
call
sbb
jne
and
scas
push
jo
or
lea
movs
jge
mov
nop
dec
jae
test
xor
push
cmp
dec
add
add
xor
mov
cmps
jge
(bad)
jnp
dec
je
mov
mov
inc
mov
jle
test
test
sub
data16
sbb
or
and
mov
popf
std
push
add
(bad)
cli
sub
mov
sub
add
fst
aaa
sub
adc
xchg
or
clc
jns
inc
or
sub
jnp
mov
rcl
push
push
push
sub
jmp
mov
pop
(bad)
or
stos
inc
adc
or
xor
xor
iret
push
sub
cli
add
sahf
push
jne
das
or
jmp
sbb
dec
shl
sub
cmp
shl
pop
sbb
and
cmps
imul
ins
inc
shl
add
and
xor
xor
adc
pop
fisttp
inc
mov
inc
cmp
or
addr16
ror
cmp
jbe
push
fmul
inc
out
pop
dec
rcr
or
push
xor
fisttp
xor
ja
mov
sbb
pusha
mov
add
pop
dec
xchg
add
pop
loope
mov
mov
mov
pushf
stc
mov
scas
mov
movs
or
ja
aas
ror
xchg
push
xchg
or
cmp
adc
push
mov
lahf
(bad)
jmp
mov
lahf
mov
lods
mov
rol
dec
dec
lock
call
mov
or
je
pop
sub
inc
pop
dec
and
or
movzx
xor
mov
sub
pop
sub
test
stc
inc
inc
push
sub
or
xchg
test
push
xor
icebp
inc
xchg
out
and
inc
pusha
pop
or
in
jmp
push
movs
mov
add
ror
cli
inc
inc
jecxz
mov
daa
or
xlat
push
dec
not
add
inc
add
rcl
sbb
in
js
inc
xchg
inc
jb
push
cdq
dec
xchg
lods
xor
mov
clc
and
push
mov
rol
sub
mov
pop
sbb
add
push
imul
and
mov
and
pusha
mov
push
mul
dec
and
push
sahf
inc
sahf
inc
ins
pop
jo
adc
and
mov
cmc
and
jl
xchg
stos
fs
jl
add
xchg
adc
xlat
jns
in
ins
test
xor
cmp
dec
cwde
or
repnz
(bad)
enter
jbe
add
and
or
sub
es
jae
or
lea
sub
and
sbb
sbb
es
inc
or
pop
ret
mov
xor
test
adc
pusha
jmp
mov
rcl
pushf
icebp
js
jne
int3
or
or
les
jle
pop
and
jne
cmp
into
and
pop
jmp
cmp
mov
cmp
(bad)
xor
sbb
imul
fdivr
ret
cmps
sbb
lock
dec
lock
mov
je
pop
sbb
push
adc
cmp
test
repnz
loopne
out
and
cmp
add
add
std
sbb
add
retf
lea
sub
cs
ja
(bad)
or
aam
ficom
adc
push
or
ja
inc
into
and
jno
mov
popa
xor
jge
pop
mov
pop
add
les
pop
add
adc
icebp
sub
mov
sub
je
xchg
sub
adc
lods
and
imul
add
and
sbb
retf
not
into
push
fst
and
and
sti
aaa
fadd
cmp
retf
adc
cmps
adc
inc
sub
pushf
push
lods
xchg
add
and
and
fimul
push
push
movs
push
repz
and
shl
sub
shl
push
movs
dec
mov
add
int
inc
pop
and
push
adc
(bad)
es
dec
pop
add
and
dec
or
sbb
jecxz
data16
inc
pop
std
popa
test
push
pop
les
jne
les
pop
jbe
jmp
vpsrlw
mov
or
xchg
loop
mov
push
in
or
xchg
jl
dec
vmload
test
add
and
gs
jmp
adc
push
inc
rol
dec
fcomp
test
in
pop
gs
xor
popa
leave
mov
gs
jno
push
jo
icebp
jns
add
push
fcmovbe
inc
add
add
outs
cmp
xor
int3
adc
add
xchg
shl
xor
sbb
test
adc
pusha
or
in
add
mov
pop
and
push
ret
adc
or
rol
adc
mov
cmp
lahf
add
and
push
(bad)
mov
jb
mov
pop
sbb
xor
adc
mov
(bad)
or
dec
jg
xchg
aad
and
xchg
cmps
cwde
add
mov
or
shl
mov
mov
pop
and
rcl
dec
push
add
cwde
shl
mov
inc
ror
adc
pop
mov
adc
cmp
shl
shl
retf
cmp
ins
add
push
adc
sbb
clc
xchg
push
pop
enter
jecxz
xor
out
and
add
or
ds
mov
sti
pop
push
stos
add
mov
mov
sbb
pop
mov
xchg
jns
test
js
or
ror
pop
sub
pop
lods
xchg
inc
xchg
add
mov
xchg
xor
xchg
sub
popf
sbb
cmp
fild
fisttp
mov
fmul
mov
fnstcw
int
imul
test
outs
popa
dec
retf
or
push
inc
xor
clc
push
popa
mov
cld
xchg
mov
mov
push
xchg
shl
sbb
sbb
sub
imul
pop
clc
mov
addr16
(bad)
mov
rcr
or
dec
push
int3
jmp
mov
mov
ins
rcl
xor
mov
nop
inc
adc
pop
inc
ret
sbb
push
or
sub
dec
ins
lods
popa
dec
cmps
and
cmps
push
inc
xchg
mov
xor
mov
inc
push
sbb
das
xchg
and
mov
add
cmp
mov
inc
bound
leave
adc
mov
jmp
lock
imul
mov
aad
xchg
in
inc
rcr
add
xor
xor
and
add
cmp
addr16
push
retf
ins
jne
dec
cmp
jne
xchg
ins
xor
outs
adc
dec
in
xchg
xchg
rcr
mov
je
mov
or
(bad)
push
adc
mov
xchg
out
sub
mov
adc
pushf
inc
(bad)
aad
mov
mov
dec
xchg
push
push
inc
(bad)
loope
ds
and
test
test
gs
fsub
outs
pop
dec
xchg
daa
iret
push
mov
fwait
and
or
fsubrp
or
and
ss
je
outs
pop
cdq
pusha
pop
fs
or
shl
shl
(bad)
push
or
js
xchg
and
pop
jmp
test
and
adc
xchg
jp
add
mov
loopne
and
fsub
test
add
ret
push
push
inc
xor
push
(bad)
dec
call
mov
imul
inc
daa
or
cmp
and
dec
sbb
jle
dec
add
test
shl
adc
or
add
mov
push
and
sbb
ror
dec
mov
inc
mov
lea
push
aas
sub
push
mov
jnp
push
enter
and
jne
xor
pop
xchg
and
inc
mov
dec
test
ja
jmp
ins
push
stos
cmc
pushf
je
mov
call
xor
js
inc
adc
adc
adc
mov
push
sub
ror
and
dec
xchg
cmp
in
push
xchg
cmc
inc
sbb
sub
push
and
bound
dec
test
sub
and
int3
test
adc
ja
jge
adc
mov
push
adc
and
jne
pop
retf
dec
dec
jmp
mov
ins
adc
jmp
sbb
outs
sbb
psrlq
add
mov
movs
add
dec
dec
xor
jne
and
or
mov
adc
jns
sub
pop
cmp
sbb
pop
fdiv
pusha
fst
push
mov
mov
sbb
pop
dec
sbb
add
adc
sub
add
add
pop
dec
adc
inc
dec
dec
into
fcom
pop
es
mov
mov
jle
into
lahf
push
xchg
xchg
push
push
in
pop
scas
sbb
mov
or
sbb
pop
call
add
or
push
and
clc
and
push
push
pop
mov
pushf
cwde
xor
cwde
xchg
or
or
mov
loope
enter
sub
fs
mov
mov
and
aaa
and
jmp
push
loope
add
pop
mov
sahf
clc
cwde
dec
std
adc
movs
dec
pop
push
pop
mov
iret
sahf
and
xor
shl
or
fbld
sub
and
dec
enter
jbe
loopne
inc
pop
pop
xchg
je
push
fist
sub
je
pusha
es
add
jg
adc
int3
xor
scas
jle
setle
xor
jge
rcl
push
leave
dec
pop
inc
jmp
jno
lds
shl
int3
(bad)
lea
mov
shl
enter
shr
xor
push
push
jmp
push
xchg
dec
sbb
or
adc
popa
dec
daa
jmp
pop
popa
cmps
jmp
inc
dec
call
push
dec
dec
outs
sub
daa
jmp
and
js
and
xor
sub
xchg
je
out
imul
xchg
mov
mov
add
out
xor
hlt
xor
retf
add
mov
cmp
jb
dec
lods
fnsave
enter
and
sbb
scas
mov
cdq
or
movs
dec
inc
nop
add
in
sbb
push
pop
xor
adc
add
movs
aad
enter
sbb
int3
or
in
iret
data16
xor
fisubr
stos
mov
cmp
add
sub
jle
sbb
cmp
loope
sub
xor
push
mul
arpl
sbb
jns
sbb
cmp
mov
lea
jae
mov
mov
add
inc
cmps
adc
sub
adc
add
add
pop
add
stos
push
push
iret
inc
enter
mov
mov
mov
jmp
ins
pop
xchg
or
imul
add
push
add
push
icebp
cs
pop
push
mov
or
lods
sbb
sub
xchg
mov
je
xchg
add
fmul
dec
mov
shl
jmp
lds
fld
or
into
aaa
or
shl
daa
or
inc
mov
aam
inc
aas
loope
(bad)
ret
sbb
pop
ins
cmps
jmp
sub
sub
or
adc
icebp
sub
add
mov
xor
mov
jge
jne
or
imul
pop
imul
add
ins
pop
add
sub
adc
mov
test
push
ins
cmp
adc
enter
pop
add
dec
dec
outs
cmp
push
leave
test
ins
adc
cmp
inc
fs
repz
push
pop
mov
and
fadd
mov
push
pusha
inc
ror
mov
mov
pusha
sbb
pop
push
adc
ret
out
pop
inc
xlat
xor
mov
mov
mov
fwait
in
and
gs
mov
xchg
mov
scas
clc
mov
rcr
in
sbb
clc
xchg
xor
or
cmp
add
aam
cmovo
mov
pop
hlt
jae
sbb
inc
shr
cmp
ret
xor
lock
dec
jmp
jb
scas
je
pop
ror
or
adc
daa
inc
int3
inc
mov
rol
adc
bound
ins
pushf
and
or
inc
arpl
pop
and
adc
mov
bound
jmp
je
loope
pop
add
push
ror
(bad)
rcr
pop
int
push
ins
sbb
mov
jnp
mov
fnstsw
mov
adc
call
jb
jle
fsubr
jne
jg
daa
daa
and
adc
mov
jne
pop
mov
xor
cmp
mov
pop
add
outs
in
xchg
adc
mov
aaa
inc
lock
xor
out
cmp
jg
or
mov
cmps
xchg
or
mov
xor
inc
add
dec
test
adc
sub
mov
push
pop
out
std
leave
xchg
push
adc
movs
push
sti
fmul
cmps
sub
add
es
sbb
mov
mov
dec
sub
xchg
or
es
fldcw
ins
mov
jb
pop
dec
and
in
pop
mov
jmp
scas
sti
pop
cdq
inc
repz
adc
nop
ret
ss
ins
mov
sub
push
mov
nop
dec
add
fimul
mov
mov
(bad)
sar
push
cmps
daa
pop
pop
fdivr
xchg
ret
test
lock
jne
lea
and
mov
and
bound
cmp
nop
adc
dec
and
in
dec
and
xor
mov
inc
lahf
push
sbb
mov
mov
pop
jge
sub
stos
or
push
dec
lea
sbb
fnstcw
and
cmp
ja
sbb
icebp
add
loopne
clc
test
test
clc
dec
jae
or
xchg
repz
lock
inc
or
adc
push
daa
xor
loop
mov
adc
xor
inc
fild
rol
cmps
dec
(bad)
lock
push
or
data16
pop
sub
cmps
clc
inc
add
rcl
cmps
and
ja
adc
ins
inc
inc
sti
dec
stos
dec
dec
adc
adc
sub
mov
pop
xchg
je
jmp
imul
hlt
out
in
push
test
add
sub
mov
imul
xchg
xor
int
push
cdq
aad
inc
mov
sbb
add
jo
pop
push
sbb
add
(bad)
or
out
pop
or
jb
into
bts
mov
pusha
imul
outs
inc
add
adc
cmps
movs
and
hlt
and
add
mov
or
daa
loopne
mov
xchg
neg
add
pushf
imul
xchg
test
push
add
rol
loop
les
dec
pop
push
pop
out
mov
mov
(bad)
and
jge
jmp
add
inc
jge
push
or
icebp
jmp
or
add
adc
or
daa
lock
adc
aam
cmp
bound
or
cmps
push
loopne
cmp
dec
inc
push
rcl
sbb
aaa
mov
push
adc
sbb
push
int
test
es
and
ins
push
je
(bad)
push
ficomp
pop
dec
jne
mov
or
or
pslld
push
push
adc
cmp
jne
out
sbb
jmp
movs
pop
outs
add
or
lods
leave
add
pop
add
lods
inc
mov
or
and
add
rol
push
jbe
(bad)
cmps
scas
aas
xor
push
pop
and
adc
je
sbb
ret
and
es
data16
lds
sub
loopne
ror
inc
or
push
or
sbb
cmp
lods
nop
jb
or
inc
and
les
lea
push
jp
adc
and
pushf
mov
addr16
or
xchg
dec
add
adc
ins
pop
mov
(bad)
lock
or
sbb
xchg
fld
call
fcom
push
sub
sahf
cmp
ss
adc
in
mov
inc
div
xchg
in
inc
mov
mov
cs
add
jl
mov
sbb
xchg
push
das
aaa
push
int
mov
les
ds
add
cmp
mov
adc
inc
and
pop
inc
or
in
sub
movs
rcr
in
push
repz
movs
push
push
add
mov
mov
pushf
pop
fstp
mov
cli
or
push
(bad)
jno
and
data16
push
inc
push
mov
pop
or
mov
(bad)
and
sbb
cmp
in
les
popa
ds
pop
movs
add
sub
mov
and
(bad)
cs
pop
adc
repz
je
mov
cmps
xor
add
inc
pushf
mov
add
bound
sub
cmp
pop
dec
loop
inc
lock
add
mov
scas
mov
mov
bound
push
rol
and
sbb
imul
jecxz
mov
xor
loopne
imul
mov
xor
repz
or
es
push
test
imul
addr16
dec
add
sti
push
or
ror
ja
in
cmp
cmp
int3
xchg
push
sub
cmp
and
jmp
dec
xor
mov
or
mov
mov
lock
push
das
imul
xor
push
and
stos
xchg
jge
mov
ins
sub
movs
xchg
out
push
adc
cmp
and
sub
mov
jb
mov
cdq
les
add
xor
push
fdiv
les
cmp
(bad)
mov
xor
das
xchg
dec
call
xor
inc
ins
mov
shr
add
xlat
bound
lea
push
add
jno
cwde
mov
sbb
imul
adc
(bad)
xor
jnp
or
or
adc
push
(bad)
mov
push
jns
sbb
popa
cmp
stos
ret
shl
sub
rcr
push
and
movs
call
adc
inc
aaa
dec
or
mov
popa
jecxz
mov
jne
cmp
pusha
cs
pushf
push
stc
dec
test
das
into
or
jne
les
jnp
dec
adc
fldcw
ret
les
aam
push
outs
shr
int
inc
(bad)
sbb
cmp
dec
sub
adc
mov
fdiv
test
sub
lea
sbb
movs
(bad)
and
mov
repnz
arpl
pop
inc
in
adc
xor
lock
mov
push
aam
or
les
enter
in
rcr
fsub
add
sbb
or
in
jge
xchg
fnstenv
sbb
fs
cli
add
push
mov
je
sbb
adc
cmc
or
xchg
scas
pop
in
fwait
cmps
scas
sbb
adc
push
int3
loop
mov
add
add
add
mov
mov
push
push
push
cld
or
mov
(bad)
mov
fld
inc
mov
ror
xchg
repnz
adc
xchg
pop
or
mov
(bad)
add
or
mov
icebp
add
and
aad
jmp
je
aam
mov
or
test
rol
add
add
adc
sub
enter
add
push
(bad)
xchg
loope
mov
or
or
add
cmps
cmp
or
mov
or
xor
inc
movs
fmul
and
jecxz
lock
push
ja
pushf
mov
add
inc
and
pop
jmp
scas
pop
fcomi
cmp
pop
adc
outs
adc
xor
(bad)
mov
pop
or
dec
mov
xchg
inc
push
and
adc
pushf
inc
jl
rcl
xchg
sbb
push
push
push
ins
push
lahf
aaa
sub
sub
push
lea
or
and
imul
fcom
sbb
mov
add
sbb
adc
in
popa
loopne
xchg
lods
ds
push
aas
dec
lods
xor
ficom
xchg
and
cld
jmp
ficomp
xchg
pop
sbb
lea
and
test
in
push
nop
(bad)
(bad)
push
out
sbb
retf
ja
fsub
sub
mov
fld
outs
xchg
push
mov
mov
cmp
push
popf
lods
mov
mov
in
mov
jmp
shl
xchg
xchg
dec
xor
std
xchg
push
dec
inc
dec
jle
jle
xlat
popf
inc
and
pop
pop
sub
repz
inc
mov
cmps
or
and
xor
jb
and
ret
and
dec
adc
xor
fadd
cdq
fbstp
mov
jbe
inc
xor
test
sbb
sub
repnz
clc
jns
or
or
pop
push
adc
push
push
push
loope
lock
xchg
test
es
pop
test
(bad)
cmp
inc
into
(bad)
and
sub
shl
adc
add
sub
mov
cmpxchg
cs
push
popf
out
nop
inc
pop
nop
add
add
add
inc
sbb
add
pushf
les
sbb
xchg
xor
dec
push
sub
rcl
mov
mov
add
and
xchg
mov
pop
mov
inc
mov
or
ja
icebp
inc
sub
inc
sbb
movs
or
stos
mov
xchg
or
jnp
fnstenv
adc
push
pushf
jp
mov
jl
adc
push
jl
xchg
int3
pop
push
adc
jne
mov
dec
inc
dec
sbb
xor
cmp
sub
fsub
add
mov
jae
sbb
lea
(bad)
jmp
dec
daa
xor
and
mov
mov
push
pop
in
push
loopne
test
add
leave
stos
and
dec
add
dec
mov
call
and
je
mov
mov
jmp
ss
or
cmp
arpl
mov
add
pop
stos
adc
mov
loope
add
pop
movs
mov
push
or
adc
int
loopne
sbb
mov
cmp
cld
rcr
icebp
inc
jae
push
(bad)
into
sahf
mov
and
jp
jg
out
jmp
add
pop
test
cs
mov
mov
fs
daa
push
mov
nop
mov
mov
mov
jne
imul
imul
sub
lds
and
movs
mov
sbb
ss
and
mov
outs
repz
push
add
dec
push
push
mov
rol
outs
(bad)
push
inc
and
loop
sbb
xlat
push
add
sbb
(bad)
adc
cmp
jne
outs
fs
sbb
push
jecxz
lea
js
xchg
add
inc
aam
push
mov
in
fld
xchg
sbb
dec
push
cmps
mov
in
aaa
fs
cwde
add
adc
dec
adc
stos
into
bswap
scas
jge
iret
es
pop
in
jle
movs
movs
jl
je
inc
jmp
jae
mov
mov
clc
leave
bound
mov
mov
sbb
outs
jge
ret
sbb
adc
popf
jb
push
jno
data16
cmc
pop
sub
arpl
xchg
mov
lods
cmc
mov
push
push
sahf
adc
cmp
cmps
add
jge
add
or
shl
(bad)
aad
mov
leave
dec
out
mov
sbb
lods
aaa
pop
sub
pop
aam
xor
sbb
js
call
aad
shl
mov
test
pop
fwait
add
xor
ret
stc
iret
lods
ds
fsubr
scas
pop
rol
lods
push
or
retf
inc
js
sub
xor
and
fcmovnbe
xchg
adc
add
push
jo
xchg
popa
nop
and
in
mov
hlt
jmp
adc
pusha
out
cmp
ins
or
shl
inc
popa
scas
out
jecxz
int
dec
jmp
data16
adc
loope
cmc
push
add
daa
es
jo
add
jae
test
loope
push
lahf
or
mov
daa
or
mov
dec
das
xchg
in
lock
std
jl
dec
fdiv
fsub
push
and
push
dec
imul
sub
gs
jmp
cmp
sub
or
int
dec
add
add
clc
mov
sub
(bad)
sub
jp
aad
std
jno
inc
call
aas
test
cmp
out
jno
loope
rol
test
pop
sbb
pop
mov
cdq
sub
movs
retf
xchg
mov
leave
ret
or
xchg
add
cld
sar
sbb
adc
sar
cmp
jne
outs
jnp
call
cmps
cmp
mov
xchg
push
jno
and
bound
or
inc
enter
xor
xchg
cmp
sub
es
fstp
dec
nop
dec
add
movs
adc
mov
sub
(bad)
addr16
adc
mov
mov
sbb
sub
adc
jns
adc
leave
lods
stc
mov
push
xor
loop
mov
add
pop
and
dec
and
mov
ret
sub
or
std
test
mov
push
cmp
fmul
cmp
jecxz
mov
js
sub
xchg
fldpi
imul
cmp
loopne
lea
call
mov
(bad)
mov
nop
test
lods
enter
push
lea
adc
scas
jns
adc
jb
push
or
xchg
or
inc
xor
xchg
adc
cmps
mov
sub
push
sub
push
ret
dec
ins
and
test
inc
push
jo
loopne
rcl
jecxz
push
(bad)
cmps
and
or
inc
jp
cs
inc
mov
mov
jne
adc
mov
cdq
fstp
xchg
and
or
jmp
add
repnz
movs
push
daa
aas
jmp
mov
in
or
mov
or
inc
lea
test
sbb
jmp
xor
xchg
jp
fadd
leave
and
pop
sbb
adc
xchg
aas
mov
mov
xchg
add
and
add
xor
inc
cmp
pop
cmp
pop
and
mov
popa
pop
shr
dec
jp
adc
out
jno
push
lock
xchg
test
dec
mov
and
and
pop
dec
xor
rcl
xchg
pop
add
jp
cmp
fldenv
enter
sbb
popa
outs
daa
loopne
inc
and
int
pop
lea
pop
push
pop
sub
shl
or
xor
es
push
dec
or
xchg
inc
stos
fild
xchg
inc
or
icebp
in
shl
je
call
rcr
inc
ror
sub
das
adc
push
push
dec
rcl
pop
jmp
xchg
nop
or
dec
jl
mov
push
jmp
mov
test
stos
cmp
test
xor
add
pop
or
mov
and
pop
inc
div
fdivr
add
fimul
push
js
out
and
adc
inc
push
cmovl
aas
xchg
adc
mov
das
mov
push
enter
or
inc
sbb
and
pop
das
push
ret
or
cmps
or
dec
mov
push
adc
adc
mov
mov
and
popf
shr
fnsave
fst
jo
pop
cmps
shl
dec
pop
mov
in
and
pop
outs
je
(bad)
ins
adc
in
push
or
not
cmp
sbb
mov
dec
pop
push
adc
inc
push
jecxz
test
add
push
jmp
and
pop
fs
test
or
retf
jbe
cmps
sub
fwait
mov
mov
xchg
inc
jnp
add
pop
es
cdq
or
ret
test
cmp
call
mov
sub
mov
lods
lock
cmp
cmps
fisubr
push
mov
mov
add
inc
inc
iret
add
jo
xlat
mov
fisubr
add
or
retf
xchg
sub
jmp
xor
add
(bad)
sbb
lea
sbb
xor
(bad)
std
test
adc
sbb
out
sbb
fwait
std
cmp
jbe
mov
mov
sub
push
cmps
xlat
push
imul
sbb
or
sub
xor
inc
aam
jno
cmc
push
and
push
inc
mov
ins
loopne
gs
xlat
add
out
xor
loopne
iret
mov
inc
repnz
dec
xchg
add
cmp
xlat
stos
pop
data16
pop
add
packsswb
lea
loopne
cmp
pop
jecxz
imul
lods
mov
ins
pop
jo
sti
int3
movs
pop
js
add
and
jle
mov
xchg
int3
ds
clc
xlat
mov
loopne
movs
push
push
cmc
add
cmp
out
ror
es
inc
aam
jp
xlat
xor
pop
xor
mov
das
or
mov
jecxz
imul
sub
mov
inc
or
jg
xor
add
aam
test
push
sub
ss
nop
(bad)
push
fs
call
ret
ret
adc
test
rol
hlt
and
xor
dec
inc
shr
adc
mov
shr
add
add
cmp
dec
add
std
mov
or
inc
ja
into
mov
push
push
add
mov
iret
sti
ins
mov
cmps
and
mov
cmp
lods
sbb
pop
test
cs
lea
or
sahf
(bad)
retf
test
add
add
mov
add
cmp
push
pop
or
xchg
push
mov
add
add
adc
pop
ror
call
hlt
ss
leave
mov
mov
xor
aam
push
mov
adc
inc
push
rcl
es
jle
pop
inc
fistp
mov
scas
add
jg
inc
add
mov
jl
ins
je
sbb
xchg
fld
adc
inc
adc
mov
dec
(bad)
and
imul
js
ret
adc
pusha
arpl
(bad)
in
dec
xchg
pop
mov
or
mov
sub
and
je
pushf
push
mov
(bad)
enter
sbb
jo
pop
pop
hlt
cmp
cmp
cmps
push
xor
or
aaa
jmp
inc
cmp
loope
movs
mov
sbb
xchg
or
mov
nop
mov
adc
adc
aas
mov
pop
and
jmp
js
inc
and
pusha
lods
xor
test
or
sbb
push
cmps
lea
and
add
mov
mov
sub
jle
in
pusha
mov
mov
xor
movs
inc
je
dec
(bad)
xor
and
mov
xor
stos
retf
fs
movs
data16
xor
sub
pusha
pop
nop
mov
lea
xchg
sub
gs
sar
ins
loopne
test
mov
push
fistp
popf
fist
in
(bad)
push
cld
mov
imul
(bad)
std
add
pop
push
sahf
xchg
add
push
adc
xchg
fnstenv
push
pop
ficom
aam
pop
hlt
imul
inc
test
fidivr
rcpps
retf
push
dec
popa
and
jno
pop
mov
call
call
pushf
js
stos
push
ins
outs
js
push
aam
and
jo
in
push
shr
push
mov
jns
ret
or
ret
mov
and
sbb
addr16
ds
push
movs
cmp
xor
call
mov
cld
dec
inc
add
call
clc
shl
mov
mov
add
add
add
aas
sub
rcl
sahf
add
loope
ror
mov
mov
or
dec
ja
sub
int
enter
mov
imul
in
pop
inc
sbb
loopne
lock
aaa
mov
sbb
xor
jmp
dec
push
shr
sub
adc
dec
arpl
out
loopne
or
and
lahf
fdivr
nop
pop
fdiv
in
jae
mov
stc
pop
in
push
dec
push
push
lock
test
sbb
inc
or
sbb
or
sbb
or
or
adc
add
push
sub
sbb
nop
jbe
dec
(bad)
popa
xor
fdivr
jno
add
jae
mov
cld
mov
fimul
mov
and
dec
cld
nop
movs
and
(bad)
sub
ror
test
ror
sub
mov
jmp
or
mov
das
mov
rol
out
add
in
fadd
add
push
lock
in
inc
hlt
dec
sbb
push
cld
jge
sub
pop
inc
cmp
dec
hlt
and
or
int
or
cmp
dec
and
mov
movs
or
add
push
test
test
sbb
push
cld
pop
pop
cmp
push
cmp
mov
aas
movs
lods
shr
in
mov
and
cmp
jae
mov
and
pop
bound
fisubr
jne
add
jmp
cmps
push
popa
fnstcw
sub
and
xor
pop
xor
jmp
cmp
add
pushf
jle
xor
rol
retf
or
mov
xchg
call
icebp
retf
mov
cwde
hlt
ss
sbb
xchg
or
mov
(bad)
enter
fild
adc
pop
out
shr
pop
or
rol
mov
and
movs
sub
xchg
adc
mov
inc
and
shl
hlt
ror
pop
cwde
xchg
fstp
mov
mov
mov
add
cmp
movs
in
xor
shl
jge
add
inc
or
push
add
pop
and
pop
(bad)
rol
nop
clc
shl
or
sbb
popa
or
add
and
adc
cmp
(bad)
push
retf
and
sub
(bad)
int3
sub
jecxz
push
inc
sbb
jmp
adc
je
(bad)
fld
or
js
pop
and
push
sub
stc
push
stos
stos
stos
or
inc
mov
test
mov
or
rol
jp
or
add
les
popa
je
xor
clc
add
in
out
daa
adc
or
jmp
sbb
cmc
sbb
and
pop
push
enter
icebp
jmp
xchg
pop
pop
add
inc
dec
fcom
and
adc
test
mov
call
mov
mov
(bad)
(bad)
or
jl
popa
sub
jg
rcl
xchg
xor
and
js
or
mov
test
sbb
shl
dec
mov
or
push
or
jno
fiadd
sub
or
cmp
sbb
shl
xor
test
je
ins
add
out
push
es
adc
and
inc
xor
test
pop
cdq
ret
adc
mov
in
or
ins
xor
je
add
rcl
sub
cmp
pop
pop
mov
adc
inc
jle
add
cmps
and
inc
ror
jle
test
mov
push
dec
and
fdiv
and
fiadd
sbb
test
add
or
mov
add
adc
push
clc
sub
mov
push
and
fisttp
jp
cmp
lock
pop
inc
neg
out
inc
sub
dec
pop
mov
and
push
sub
mov
cmp
cmc
mov
mov
loopne
or
push
adc
jmp
cmps
movs
inc
adc
add
adc
icebp
clc
into
movsx
aas
inc
mov
cmp
mov
movs
sbb
ds
ins
mov
add
push
and
fstp
jmp
fisttp
fucomp
push
(bad)
out
pushf
xchg
mov
push
js
xor
add
adc
pop
fwait
xor
mov
inc
dec
fist
add
(bad)
mov
mov
out
out
cs
push
jnp
bound
fisttp
mov
pop
jo
and
pop
cmp
ja
out
inc
dec
outs
push
push
add
movs
sbb
xchg
sub
or
mov
leave
data16
out
dec
(bad)
mov
lea
test
push
dec
sub
inc
or
cs
push
es
inc
sub
je
lea
push
and
mov
mov
or
dec
xor
sub
push
sub
mov
(bad)
mov
inc
aaa
add
adc
in
lock
sub
(bad)
shl
or
or
sub
nop
shl
mov
add
jecxz
add
add
jecxz
push
adc
sub
nop
ja
push
push
pusha
add
pop
mov
cmc
xchg
jbe
fwait
div
or
out
lods
push
mov
loope
inc
cli
ins
pop
gs
mov
fnstenv
sub
or
or
pop
(bad)
sub
push
(bad)
cmp
xor
mov
jno
push
push
clc
in
xor
jae
inc
or
sahf
add
jmp
sbb
sbb
fstp
adc
pop
aam
inc
add
pop
imul
jbe
fisubr
push
jns
es
push
inc
fist
add
jb
stc
vmread
push
or
sub
sub
or
call
jb
mov
push
cdq
test
fisubr
xor
lahf
shl
pop
fs
js
xchg
or
leave
add
adc
xchg
fs
cld
push
pop
add
or
les
cmps
and
jmp
pop
(bad)
fldcw
pop
or
fst
shl
dec
inc
(bad)
call
clc
movs
add
jns
or
jo
or
movs
add
or
mov
jl
push
sbb
inc
adc
or
adc
pop
imul
xchg
pop
jo
pusha
xor
push
in
in
fidiv
mov
es
ja
push
movs
call
jmp
jne
dec
cmp
dec
xchg
push
xor
cmp
lea
and
xor
sti
mov
fidiv
inc
xchg
xchg
push
ret
dec
xor
dec
adc
icebp
mov
int3
fisub
dec
mov
inc
cmp
mov
dec
push
in
aaa
xor
or
ss
cmp
or
iret
fwait
shl
dec
sbb
ins
mov
inc
or
data16
or
(bad)
inc
adc
daa
inc
xchg
jp
xchg
xchg
xor
jnp
mov
in
dec
pop
jg
cmp
lea
fdiv
push
add
xor
out
and
std
pop
mov
icebp
mov
push
mov
sub
imul
call
(bad)
ror
icebp
or
or
cmps
fsub
add
mov
xor
sub
pop
cmps
or
xor
and
enter
and
add
rcl
int
xchg
or
pop
push
or
inc
sub
push
xor
ret
mov
add
mov
sub
fmul
movs
inc
add
(bad)
sub
sbb
jo
jge
mov
inc
lods
sbb
jl
xor
call
ret
push
pop
adc
imul
add
mov
shr
push
test
add
ins
add
add
repnz
sub
push
pop
jg
add
mov
inc
test
mov
push
pop
mov
call
jle
(bad)
jp
aaa
dec
pop
add
cmc
in
jmp
lahf
sub
dec
dec
rcl
mov
add
or
movs
pushf
and
loop
mov
gs
call
push
add
fild
pusha
cmps
fst
clc
pop
mov
mov
xchg
arpl
add
cmp
pop
and
or
push
or
loopne
and
and
(bad)
xchg
push
mov
test
xor
stc
pop
cmp
mov
and
or
mov
pop
imul
add
gs
int3
push
sub
ror
inc
outs
cmps
or
or
fsqrt
shl
xor
adc
cs
out
(bad)
lea
adc
mov
and
cmp
ffree
es
and
cmc
stos
(bad)
mov
es
fimul
push
aaa
or
aas
pop
add
jg
add
xchg
iret
sub
arpl
xor
xor
and
sbb
sub
cmp
add
(bad)
mov
cmp
sub
test
shl
xor
outs
movs
add
mov
add
or
mov
or
movs
or
pop
sbb
mov
xchg
push
test
or
cmp
dec
pop
cld
fimul
lds
pushf
push
jge
add
test
inc
les
cdq
add
inc
out
shl
pop
jno
dec
push
push
pusha
jecxz
push
in
and
shl
cli
xor
retf
aad
lock
stos
mov
outs
sar
pop
fcmovnu
push
sti
sbb
xlat
inc
sub
fsubr
or
je
push
and
rol
inc
imul
icebp
dec
loop
mov
test
inc
push
push
repnz
add
mov
std
mov
ror
mov
jmp
test
and
ret
or
dec
sub
cmp
add
push
ins
das
in
shl
ret
cmp
dec
scas
push
inc
adc
loope
or
nop
and
push
add
vxorpd
jmp
stos
fdivr
test
mov
push
push
mov
cmp
arpl
pop
adc
pop
inc
jno
sbb
ret
mov
cmp
(bad)
sub
fistp
dec
je
mov
or
ins
sub
sbb
push
jecxz
pop
loopne
jecxz
or
fdivr
xor
xor
aad
movs
loope
add
push
push
jecxz
test
jge
add
mov
push
push
inc
jp
sbb
or
ror
mov
dec
cmp
dec
sbb
add
add
loope
add
sbb
mov
and
loopne
es
inc
jne
push
sub
nop
ins
data16
das
dec
and
jbe
inc
aam
dec
jl
inc
xchg
sahf
push
sub
fwait
aaa
push
xchg
pop
fldenv
adc
mov
hlt
cld
pop
cmp
ret
cmp
dec
stos
stos
or
call
dec
xor
bound
mov
adc
(bad)
mov
inc
adc
cwde
sbb
mov
or
inc
ret
les
sub
or
push
cs
push
push
hlt
arpl
aad
fadd
pusha
mov
xor
mov
mov
jmp
adc
sbb
jmp
push
sbb
mov
outs
push
fld
fstp
jmp
fstp
fnstsw
adc
xor
sbb
or
(bad)
xor
fmul
sub
sub
push
outs
pop
in
mov
pop
ins
mov
or
dec
sub
pop
mov
add
mov
jl
mov
add
scas
ror
sti
mov
aam
das
pop
pop
push
pop
mov
retf
fst
xchg
pop
add
(bad)
cs
mov
xchg
push
iret
repz
push
pop
push
ret
push
jnp
imul
pop
movs
push
mov
(bad)
mov
pop
push
jg
imul
lock
pop
(bad)
ins
jp
in
adc
mov
dec
sbb
sub
lods
or
or
adc
sbb
and
adc
call
and
dec
add
imul
add
xchg
mov
inc
mov
cmps
pop
mov
lods
outs
or
push
pop
pop
add
mov
inc
call
dec
cmp
ds
out
pop
or
mov
add
aas
push
or
cmp
sahf
inc
sti
xor
add
ins
sbb
adc
pusha
adc
out
mov
jbe
test
stos
add
retf
xor
add
or
repz
add
pop
xchg
js
adc
push
icebp
in
push
les
cmp
push
retf
mov
cmc
or
jne
push
dec
in
adc
clc
push
rdmsr
ja
inc
ins
in
add
loope
inc
push
cmp
mov
leave
stc
add
add
add
ja
inc
pop
and
gs
push
sti
aam
xor
add
and
scas
sahf
sbb
rcl
pusha
add
dec
sub
and
movs
and
push
adc
and
sbb
retf
clc
pop
sbb
push
dec
jns
mov
mov
nop
lea
xor
aam
sbb
and
inc
mov
xchg
xor
cs
mov
pop
add
jmp
aas
sbb
lock
sbb
add
sbb
inc
mov
pop
call
imul
mov
xchg
pop
dec
add
and
add
sub
and
xchg
mov
cdq
push
aas
mov
push
ins
cld
ss
add
or
add
mov
cmp
adc
add
and
retf
mov
lahf
add
push
or
or
gs
add
hlt
mov
mov
leave
in
or
add
or
sub
sbb
in
mov
push
sbb
aam
ins
rol
add
mov
pop
push
sbb
pop
data16
or
pop
loop
pusha
add
dec
or
xchg
inc
movs
mov
mov
inc
bnd
enter
shr
jmp
jne
sub
jp
cmp
pop
cwde
or
ins
jno
mov
lds
mov
or
jl
xor
lea
pop
lds
cld
xor
or
dec
push
pop
cmp
adc
pop
dec
inc
pusha
pop
lea
ret
frstor
fld
dec
mov
jmp
call
jno
addr16
sar
les
mov
inc
sub
push
add
arpl
sbb
dec
lods
pop
shl
pop
mov
and
rcl
(bad)
(bad)
rcr
sub
mov
repz
mov
outs
add
lea
pushf
lar
or
adc
and
popa
or
ret
push
popf
mov
dec
xchg
xor
mov
add
mov
jnp
fwait
xor
sti
dec
mov
popa
sbb
push
mov
fst
adc
push
clc
jmp
inc
pop
jo
aad
stc
and
xchg
lahf
push
mov
cdq
mov
sub
enter
add
mov
aaa
push
imul
(bad)
and
add
mov
mov
inc
push
sbb
sub
sbb
or
dec
push
add
or
movs
mov
shl
xor
sub
imul
mov
les
out
ja
xchg
cs
enter
mov
div
jno
test
fdivr
mov
mov
lea
test
add
sbb
add
lahf
clc
pushf
mov
push
cs
sub
call
cli
pop
test
cdq
and
mov
int3
or
or
rol
and
inc
jg
inc
das
jg
jl
dec
add
push
jae
enter
inc
jl
jg
sub
ret
dec
retf
and
pop
push
add
out
or
aad
aaa
sub
add
xchg
xlat
jl
fstp
ins
push
push
pop
xchg
pop
mov
push
icebp
cmps
xchg
cwde
sub
dec
mov
dec
or
sbb
ins
mov
mov
int
fstp
jne
mov
xor
add
push
cmp
pop
ins
or
adc
dec
nop
shl
cmp
je
add
xchg
mov
test
or
and
test
and
adc
ja
xchg
sub
scas
mov
cwde
retf
sub
ins
push
sbb
pushf
jns
ss
loop
jnp
das
mov
nop
sbb
xor
pop
lahf
push
rol
add
lods
mov
mov
add
jo
adc
mov
mov
xchg
add
lock
fadd
xor
sub
or
and
sbb
dec
pop
fistp
push
and
mov
push
cwde
mov
sub
add
sbb
jg
inc
or
fmul
jp
popa
mov
and
movs
(bad)
fmul
push
mov
dec
adc
push
test
movs
test
cwde
pushf
push
pop
cs
mov
(bad)
into
in
mov
pop
shl
sbb
push
dec
test
mov
xchg
and
jp
adc
test
xchg
xchg
add
xchg
mov
ss
add
ja
and
fnsave
stc
ss
pop
aas
and
adc
test
in
test
or
mov
out
mov
mov
mov
fsubr
icebp
in
ss
and
or
jne
sti
sub
jb
shl
xchg
shl
mov
js
rcl
xor
mov
dec
and
hlt
push
mov
xor
or
and
inc
je
imul
neg
test
arpl
mov
pop
aaa
lock
(bad)
fcmovnu
adc
jmp
adc
cdq
in
jmp
sub
push
mov
xor
and
xchg
aam
test
jge
movsx
mov
shr
pop
jno
xor
dec
ret
pusha
or
xchg
ins
fiadd
and
add
mov
push
mov
sbb
(bad)
and
inc
in
call
or
jmp
hlt
sbb
fdivr
xor
pop
loop
add
push
call
je
mov
xchg
sub
loop
mov
xor
adc
clc
or
sbb
ins
add
push
mov
adc
jmp
jp
push
ret
pop
xor
pop
push
das
cmps
or
adc
adc
xchg
xor
hlt
mov
ret
pop
daa
xor
push
mov
js
inc
add
clc
dec
pop
or
out
data16
(bad)
fiadd
push
adc
cmp
mov
lods
test
adc
adc
rcr
enter
push
add
add
dec
popa
and
cmp
bound
ins
jbe
xor
mov
aas
add
sub
test
jno
adc
mov
xchg
lock
and
or
add
push
xchg
loopne
popf
lock
adc
xor
push
outs
dec
and
sahf
in
xor
mov
rol
xchg
or
aad
jno
add
pushf
dec
adc
and
xchg
les
out
hlt
xor
jl
lahf
and
imul
call
jmp
ins
mov
add
mov
adc
jp
mov
pop
pop
enter
ss
mov
popf
and
lods
and
mov
jo
adc
sbb
fwait
xchg
mov
mov
jb
adc
ret
mov
lea
add
cmc
imul
cmp
or
dec
mov
fidiv
inc
inc
sahf
add
(bad)
add
ret
dec
adc
adc
add
and
shr
gs
in
out
test
push
aaa
pop
outs
add
popa
les
jne
mov
ja
int3
or
and
cmp
mov
ins
adc
push
js
sbb
nop
mov
sbb
js
int3
inc
sbb
js
fadd
pop
fcomp
mov
cmp
rcr
ficom
xor
iret
idiv
xor
sub
cmp
and
pop
aam
xlat
adc
movs
std
mov
rcr
je
std
adc
adc
daa
jl
inc
mov
es
pop
or
push
adc
add
push
dec
pop
ja
rcl
dec
sub
mov
xchg
shl
pop
adc
adc
loop
pop
dec
dec
xor
mov
sub
mov
jmp
inc
data16
and
or
push
push
or
icebp
cmp
fisttp
les
mov
push
test
push
jmp
jb
lock
dec
nop
and
loopne
mov
mov
js
adc
push
clc
jecxz
mov
cli
jle
push
loop
mov
adc
ins
and
inc
mov
push
lock
shl
add
cmovbe
sbb
stos
xchg
or
data16
movs
pop
xor
push
and
cs
cmp
inc
dec
sub
pushf
(bad)
push
jl
bound
mov
dec
fadd
lods
lea
or
jmp
xor
inc
hlt
sub
(bad)
cmp
sar
je
push
lahf
xchg
add
dec
repz
call
pusha
test
push
les
test
mov
cwde
inc
mov
aas
dec
mov
int3
clc
cmps
jle
push
pop
and
shl
push
or
loope
cld
pop
jecxz
aam
dec
push
sahf
sub
out
inc
lds
push
ror
ror
das
mov
cdq
lods
add
add
dec
jmp
loope
and
fistp
shl
mov
retf
jb
sbb
fcomp
or
int
dec
out
out
ds
adc
push
je
or
(bad)
popa
outs
xlat
dec
out
dec
xor
mov
stos
or
pop
inc
popa
pop
jne
fldenv
sub
add
jmp
jp
pop
adc
mov
fcmove
push
add
cmps
scas
lahf
xchg
sbb
pop
jle
les
or
mov
lock
dec
jmp
ja
dec
inc
rcl
imul
fldcw
sbb
add
shr
adc
sub
popf
dec
je
add
sbb
add
dec
or
sti
dec
daa
dec
movs
jecxz
stc
cmp
push
je
fcmovne
add
or
(bad)
pop
jmp
loop
dec
nop
and
push
sbb
in
imul
es
pushf
shl
xchg
popa
mov
or
stc
pop
bound
fidiv
imul
sbb
mov
aas
gs
cmp
sti
aam
ins
dec
jmp
or
push
mov
outs
call
jns
mov
add
push
jbe
sbb
sub
add
adc
pop
ins
push
mov
push
movs
lea
push
mov
inc
and
shl
push
xchg
stos
pusha
jl
push
test
add
ror
or
adc
push
out
jo
and
iret
xchg
es
xchg
push
push
cmc
gs
adc
mov
push
enter
or
cmp
sbb
add
aaa
in
pop
push
pop
fild
xchg
cmp
jbe
xchg
push
js
retf
sbb
pop
pop
push
cli
dec
pop
enter
nop
xor
xchg
fdivr
sbb
jns
jmp
xchg
fcom
cmp
int3
cmp
push
add
into
xchg
pop
test
in
jo
loope
cli
pop
aaa
or
sub
movs
mov
test
or
pop
loopne
and
adc
les
pop
and
ja
xchg
and
ret
sbb
dec
in
xlat
adc
push
outs
and
cmp
push
pop
sar
pop
jae
jl
sub
and
inc
pop
mov
add
mov
sar
xlat
xchg
push
loopne
cmp
sub
xor
clc
fs
or
clc
xor
adc
sbb
and
fwait
push
sbb
lods
inc
inc
sar
pop
hlt
cmc
pop
adc
sub
or
sbb
cmp
dec
lahf
dec
xor
jb
imul
test
xchg
inc
add
xor
add
jl
mov
int
imul
test
es
push
jge
push
rcl
sub
call
pop
pop
aas
sub
cmps
cli
mov
sub
push
in
pop
int3
and
jge
enter
jl
lea
jmp
pushf
enter
sub
add
dec
inc
fsub
dec
je
dec
in
adc
in
repnz
push
aam
mov
push
aas
js
leave
and
xlat
dec
sbb
je
js
mov
mov
daa
and
xchg
sbb
test
or
push
dec
inc
add
xor
pop
jl
lods
ins
xor
and
jecxz
test
outs
add
fdivr
jl
dec
cmp
sub
inc
rcl
cdq
mov
pop
test
je
dec
(bad)
cli
lock
sbb
out
retf
add
xchg
mov
and
xchg
pop
inc
call
cmp
loopne
das
mov
inc
repnz
push
pop
and
or
mov
sub
jge
loopne
stos
mov
es
or
stos
or
xchg
stc
sbb
mov
imul
pop
and
sub
and
(bad)
js
xor
xor
or
adc
movs
test
sub
inc
sbb
mov
mov
mov
nop
mov
popa
fs
add
push
add
pusha
addr16
inc
or
lock
sbb
push
adc
ret
add
jo
cmps
imul
add
icebp
adc
and
and
add
dec
mov
push
adc
fistp
and
(bad)
mov
das
add
cmps
rcl
ss
addr16
xchg
mov
and
loopne
push
jp
dec
dec
dec
call
and
mov
jmp
retf
or
mov
(bad)
cmps
jo
sub
xchg
int3
sbb
mov
pop
mov
sbb
add
call
fs
push
cs
sub
fwait
adc
inc
outs
add
nop
daa
add
psrld
cmp
xor
or
dec
lea
push
sub
lock
cli
mov
adc
lods
xor
dec
sti
(bad)
adc
add
xchg
sub
add
add
or
fsub
push
test
aaa
shr
or
nop
sbb
cmp
pop
xor
and
dec
mov
fld
push
xor
cmps
or
add
es
and
icebp
loopne
loop
movs
xchg
dec
hlt
mov
and
mov
adc
out
test
je
mov
dec
sub
mov
pusha
mov
daa
je
and
xchg
mov
add
fidiv
test
fxch
ins
xor
jnp
repnz
and
sbb
add
mov
loop
mov
fisttp
adc
dec
add
push
xchg
mov
movs
test
or
or
add
pop
aad
js
mov
fs
add
scas
jle
push
and
sbb
add
inc
aas
dec
outs
xor
sub
lea
sbb
or
push
lock
pusha
xor
jae
xchg
pusha
or
xor
adc
sub
(bad)
loope
adc
sub
sbb
cmp
fxch
mov
dec
jg
rol
pop
icebp
dec
jmp
hlt
call
into
mov
lock
into
push
hlt
add
xlat
adc
dec
jmp
faddp
pop
pop
pop
mov
jmp
inc
bound
shl
test
jbe
fdiv
out
and
cmp
xor
inc
(bad)
sub
shr
mov
add
clc
jle
adc
mov
cmps
adc
sbb
test
les
lods
push
call
in
cld
dec
shl
pop
or
js
push
pcmpeqb
inc
jne
push
(bad)
or
sbb
xchg
dec
fldenv
and
ror
sti
imul
icebp
scas
movs
mov
and
push
xor
or
mov
outs
and
test
push
mov
mov
pusha
clc
jge
push
in
sbb
inc
sub
push
inc
mov
inc
ret
or
push
add
fdiv
into
cmp
xchg
pop
adc
data16
xor
iret
pop
test
mov
adc
rcr
add
pop
arpl
clc
or
adc
(bad)
adc
pop
adc
sub
movs
sbb
sbb
inc
jo
add
add
and
xor
or
je
add
or
and
mov
sbb
sub
push
or
sbb
adc
(bad)
xlat
mov
mov
data16
cmp
push
and
loope
mov
rol
and
xchg
xchg
pop
inc
nop
sbb
nop/reserved
add
push
adc
cmp
mov
push
pushf
sub
jmp
inc
inc
cmp
xor
pop
adc
adc
cmp
sahf
imul
(bad)
popf
sub
gs
mov
and
fild
sub
push
neg
push
or
sbb
adc
mov
mov
(bad)
and
sub
or
aad
(bad)
lods
popa
inc
jmp
mov
les
push
dec
push
movs
mov
not
inc
gs
fsubr
stos
and
jno
shl
sub
or
stos
rcr
enter
xor
fmul
or
aaa
call
add
sub
push
mov
repz
clc
xchg
test
pop
icebp
xor
mov
les
shr
push
in
or
mov
and
pop
sub
fsubr
inc
pop
adc
loopne
pop
push
gs
jnp
mov
mov
pusha
cmp
jo
das
js
xchg
xor
or
sub
shl
movs
xchg
aam
pop
lods
mov
ins
inc
add
or
dec
fbld
movs
mov
sub
push
call
add
fld
push
push
sub
jge
push
mov
push
or
shl
xchg
pop
sbb
loope
sbb
jnp
pop
in
sbb
push
mov
add
pop
sbb
fadd
cmp
xor
fst
rcl
ror
pop
jnp
fwait
inc
and
and
adc
mov
call
mov
adc
sub
in
fisttp
mov
jbe
push
sub
test
add
sub
jb
xor
cdq
pop
or
retf
repz
adc
leave
stc
test
imul
mov
fisttp
loopne
ret
movs
jnp
adc
nop
out
lock
jo
or
ja
mov
sub
or
pop
push
pop
sub
jge
inc
hlt
jo
sbb
or
inc
add
iret
cdq
add
and
add
cmp
stos
xor
pop
push
xor
cs
test
stc
xchg
add
adc
mov
push
lea
add
ret
pusha
dec
and
sub
mov
bound
push
and
fxch
jae
pop
pop
push
sub
sbb
cmp
or
icebp
cmp
or
push
pop
xor
dec
mov
xor
adc
jmp
xchg
mov
inc
fidivr
mov
call
mov
(bad)
bnd
fidiv
mov
or
je
cmc
ret
xor
cmp
aaa
mov
lock
pusha
sbb
add
ins
push
repnz
aaa
xor
scas
add
add
jmp
test
adc
dec
cmp
daa
shl
lds
mov
mov
mov
add
loope
xchg
xchg
add
loope
push
jge
cmps
dec
xor
add
call
daa
cmps
pop
js
add
mov
push
or
add
sahf
jne
inc
jmp
arpl
cmps
mov
in
xchg
jl
ret
inc
xor
cld
test
sbb
and
add
mov
je
or
(bad)
sbb
repz
ds
inc
add
lea
sub
or
cdq
add
das
mov
rcl
pop
adc
pop
pushf
pop
jno
adc
lods
(bad)
xlat
add
mov
jbe
pop
adc
aad
xor
ret
or
movs
ins
jmp
nop
add
outs
xlat
pop
aam
daa
and
movs
in
outs
(bad)
aaa
std
cmps
lods
in
mov
mov
push
mov
dec
sbb
push
cld
inc
jns
and
dec
mov
dec
sub
retf
mov
sti
and
cmp
mov
int3
cmp
add
adc
push
cmp
dec
jecxz
sub
push
int
aaa
adc
xor
jb
pusha
push
(bad)
mov
dec
sbb
mov
inc
lock
xchg
jl
add
mov
call
das
cmp
inc
adc
jbe
and
ss
and
leave
push
push
inc
sti
mov
add
xor
mov
fldenv
stos
call
xchg
dec
or
es
pop
and
mov
cwde
movs
jno
jb
ret
loop
cmps
or
inc
aam
sub
ficom
std
shl
push
mov
push
enter
cmp
xchg
jmp
fist
push
mov
xchg
pop
nop
test
mov
cmp
sbb
test
fdivr
cmps
inc
pop
cs
push
call
into
sub
adc
dec
mov
ret
push
or
pop
dec
and
stc
inc
retf
dec
sbb
arpl
mov
xchg
add
pop
jae
xchg
push
call
mov
nop
hlt
sub
ins
mov
mov
cmp
add
push
add
cmp
call
leave
add
ret
dec
rcl
xor
push
push
dec
(bad)
test
add
cmp
mov
dec
push
not
lock
push
aad
dec
jb
sbb
enter
push
imul
lea
or
lds
add
add
shl
popa
jecxz
mov
cli
pop
jae
xchg
inc
or
fdivr
lahf
or
jo
dec
xchg
outs
add
je
jmp
adc
add
xchg
xor
pop
jp
mov
test
add
out
inc
mov
les
dec
xor
pop
js
call
push
xchg
pop
and
adc
bound
imul
mov
add
and
imul
jbe
xor
hlt
mov
cmp
adc
xor
mov
ret
or
and
and
sub
cmp
sahf
adc
movs
push
lods
adc
or
xor
std
add
aaa
push
and
mov
cdq
inc
push
mov
outs
push
dec
sbb
shl
(bad)
movs
inc
mov
dec
mov
pop
je
mov
xchg
pop
push
or
cmc
repnz
sbb
and
imul
pushf
je
add
mov
repnz
hlt
xchg
and
add
push
mov
xchg
stc
popf
and
inc
xchg
push
jo
movs
repz
mov
and
lods
or
xchg
sbb
xchg
sbb
or
sahf
repnz
and
pop
lea
or
enter
adc
lock
xchg
inc
test
pop
or
xor
lea
fcmovne
rol
mul
push
dec
push
cmp
jmp
loopne
mov
das
leave
cmp
popa
dec
adc
lods
xchg
jge
sbb
in
in
cld
and
or
in
adc
jne
or
mov
adc
loopne
imul
mul
or
sbb
fdiv
jbe
pop
dec
jmp
shr
hlt
push
lock
jnp
mov
clc
pushf
add
sbb
inc
jge
into
xchg
push
in
fldl2t
pop
mov
ins
lods
xchg
movs
push
sub
call
movs
mov
sbb
push
add
shr
or
cmp
add
or
dec
dec
arpl
ret
pop
mov
pop
inc
imul
adc
xor
sbb
push
cdq
adc
daa
ret
aas
inc
add
add
mov
or
add
or
sbb
test
inc
add
adc
xchg
shl
pop
ret
cmps
clc
mov
test
sub
pop
push
test
aaa
lock
xor
nop
outs
and
push
jmp
inc
mov
or
jne
cmp
add
sbb
ins
xchg
or
lods
push
cmp
fcomp
repz
movs
leave
fwait
inc
dec
add
inc
xor
dec
clc
repnz
test
hlt
add
push
outs
xchg
jp
cmps
push
sbb
adc
pop
push
push
movs
dec
(bad)
dec
push
and
push
xor
push
adc
cli
cwde
add
mov
inc
cwde
jae
stos
pop
xor
push
mov
mov
adc
test
mov
mov
mov
out
(bad)
mov
cmp
test
sbb
pop
pop
or
push
inc
(bad)
imul
call
xchg
and
or
into
lea
inc
loopne
dec
mov
out
push
mov
aas
jl
adc
cmp
jecxz
mov
add
cmp
in
jo
je
jbe
in
dec
call
cmp
test
and
sub
jnp
and
or
cmp
(bad)
mov
push
jno
add
xchg
ins
(bad)
and
popa
cmp
lea
or
inc
cs
movs
or
or
scas
js
pop
lods
lock
push
inc
sbb
xchg
cmp
push
adc
mov
cmp
arpl
fnsave
or
mov
maskmovq
out
xchg
shl
cmps
je
xor
mov
imul
mov
and
mov
ja
pop
xor
daa
pop
stos
dec
pushf
retf
cmps
or
cmps
rcr
stos
mov
push
cmc
or
daa
pushf
sub
adc
sbb
push
xlat
les
and
shl
inc
into
add
sbb
and
or
popa
mov
in
cmp
cmp
sub
leave
fucomi
and
fs
inc
and
inc
mov
xor
jecxz
je
push
adc
push
cmc
popf
xchg
cmp
pop
out
loopne
and
fsubr
push
cmp
jo
ds
push
lods
jae
add
cdq
xor
add
icebp
icebp
add
push
neg
sbb
into
mov
pop
jnp
or
push
or
add
cmps
pop
lock
push
(bad)
push
test
aad
loope
push
jno
push
in
sub
mov
inc
mov
dec
jns
xor
add
cs
loopne
add
fsub
fidivr
or
cmp
mov
cmp
mov
push
ins
dec
mov
jmp
nop
dec
dec
repz
sub
push
mov
ffreep
add
or
mov
cmp
adc
movs
cli
retf
mov
push
loopne
adc
jl
imul
push
mov
inc
hlt
xchg
mov
push
(bad)
fcom
outs
fnstcw
ror
ret
or
loop
fsub
aam
dec
mov
cli
js
shl
sbb
es
cli
cmp
sbb
inc
je
call
stos
fs
cmp
lds
xor
inc
xchg
xor
mov
mov
sbb
pop
pop
jno
aam
imul
pop
es
mov
test
mov
push
cmovge
add
xchg
lea
xchg
xchg
dec
mov
sub
pop
add
ret
loopne
or
lock
pusha
or
adc
outs
push
test
jmp
or
lods
mov
js
push
mov
loope
mov
adc
and
xchg
mov
mov
lea
jo
test
mov
daa
push
cmp
xor
mov
(bad)
xchg
push
xor
pop
pop
lea
add
jnp
or
ret
adc
pop
js
sahf
dec
mov
daa
hlt
push
push
aad
inc
xor
jno
sbb
pop
lds
or
and
call
or
call
fnstsw
mov
test
dec
icebp
lea
ja
add
mov
xchg
rcr
mov
scas
adc
pop
sbb
add
es
dec
pop
xchg
dec
sahf
or
inc
add
jge
sbb
lea
inc
dec
mov
push
xor
and
push
in
fsubr
sbb
call
jl
xchg
repnz
jne
cmp
push
pop
inc
pop
push
push
and
out
xor
cmp
sbb
stos
scas
jp
xchg
add
mov
mov
mov
push
xchg
add
mov
xlat
nop
fdivr
imul
inc
xchg
jne
pop
mov
shl
xchg
test
adc
call
and
rcr
mov
cmp
hlt
enter
push
or
add
test
icebp
in
sub
pop
cmp
add
push
pop
adc
dec
dec
dec
aad
fs
int3
in
sub
jb
push
lea
push
inc
or
inc
sbb
test
inc
jns
pop
movs
(bad)
push
add
jmp
ficom
push
mov
adc
and
adc
cwde
mov
mov
mov
sbb
mov
xor
nop
push
mov
dec
fisttp
jl
inc
ss
and
sbb
push
daa
(bad)
sub
cdq
(bad)
cli
xchg
mov
or
add
test
mov
add
cld
add
cmc
mov
leave
push
or
and
popf
cmp
adc
stc
push
adc
inc
sbb
or
mov
push
sbb
add
mov
add
sti
in
sub
pop
xchg
sub
jo
jne
mov
or
xor
and
mov
mov
cmps
pusha
pop
jbe
nop
pusha
frstor
aaa
sbb
fwait
pushf
add
push
sbb
data16
mov
ror
dec
inc
out
inc
jbe
dec
xor
inc
popa
fsubr
push
popa
dec
sub
and
loopne
mov
sbb
jg
idiv
shr
loop
push
cmp
mov
push
test
les
fdivr
xchg
mov
mov
and
push
scas
enter
add
cmps
fadd
mov
or
adc
movs
xor
adc
jns
cld
jne
pop
push
sbb
in
nop
stc
sbb
mov
adc
test
push
(bad)
sub
dec
adc
and
movs
repz
or
cmp
inc
jle
xchg
add
shr
jnp
adc
add
push
mov
clc
mov
mov
les
xor
xor
mov
mov
pop
arpl
inc
les
dec
or
add
or
push
adc
mov
cmc
popf
push
inc
gs
add
sbb
mov
sbb
adc
jae
adc
ret
push
das
ret
bound
push
repnz
(bad)
adc
retf
cmp
push
js
adc
mov
(bad)
and
mov
loopne
pop
stc
and
test
adc
or
mov
add
sbb
add
stos
xor
imul
pop
ror
inc
lahf
push
shl
xchg
test
je
ss
inc
add
scas
js
sub
jno
aam
mov
and
int
sub
cmp
xchg
je
pop
inc
xchg
cmps
lock
ja
mov
dec
int
dec
inc
rcr
mov
cld
sbb
mov
cwde
retf
add
add
pop
shl
sub
je
dec
leave
dec
div
aas
mov
or
mov
push
add
cmp
cmp
push
push
imul
add
sub
adc
retf
sub
or
dec
xor
int
dec
movs
push
push
(bad)
inc
and
test
ins
sbb
lods
fimul
pop
add
inc
sub
sub
iret
lock
and
sub
xchg
xor
movs
push
pop
push
in
push
push
out
pop
add
aaa
pop
call
push
sub
xor
mov
push
loop
inc
mov
stc
push
cmp
add
or
cmp
xor
scas
jo
sub
jle
fidiv
pop
cmps
and
sbb
xchg
mov
aaa
xchg
pop
jo
cwde
cmp
or
inc
loop
add
cmp
or
pusha
sbb
jle
or
(bad)
xchg
sub
imul
mov
aas
gs
mov
fst
retf
adc
dec
push
mov
xchg
add
and
popf
and
jmp
je
inc
hlt
or
es
jp
add
push
sahf
xchg
cmp
je
xor
jb
jecxz
mov
jne
out
mov
lods
add
sbb
sub
mov
mov
push
pop
sub
cli
mov
mov
int
rol
jecxz
dec
xchg
sar
(bad)
cmp
ficomp
mov
es
or
adc
mov
js
adc
int3
in
push
mov
adc
push
cmp
(bad)
inc
je
push
outs
or
sahf
inc
dec
jns
pop
sub
inc
fwait
or
stos
pop
adc
int3
xchg
pop
adc
sub
ss
mov
out
je
(bad)
out
je
xchg
xchg
jmp
adc
movs
adc
fisubr
add
and
test
push
add
sub
xchg
xor
jns
or
mov
test
add
sar
test
cmp
xchg
js
cmp
dec
sub
call
das
sub
retf
adc
cmp
add
inc
cli
add
mov
and
mov
sub
arpl
and
xchg
push
add
scas
add
iret
inc
cmp
add
in
xchg
ret
(bad)
cmc
mov
push
icebp
push
xchg
mov
sbb
(bad)
sbb
rcr
stos
xchg
loope
jns
add
sahf
mov
mov
push
(bad)
fld
loopne
bound
cmp
push
adc
push
sti
nop
pop
dec
mov
pop
outs
or
push
sbb
loopne
leave
outs
iret
and
ds
shl
mov
loopne
fist
ds
scas
lea
push
ficomp
push
sti
xor
aam
xchg
outs
movs
retf
sub
popf
add
test
cmp
xor
stc
push
add
and
push
xchg
pop
add
iret
ror
add
xor
mov
movs
cwde
sub
pop
jns
or
xchg
mov
movs
popa
loopne
pop
aas
add
nop
cmp
adc
mov
or
or
mov
movs
add
mov
test
ins
add
inc
ror
test
dec
ins
leave
jle
and
xchg
xor
push
nop
lea
popa
loopne
inc
jg
or
push
shr
push
mov
mov
jnp
add
sub
cmp
add
mov
mov
dec
mov
inc
xor
sbb
dec
dec
inc
inc
imul
leave
push
xor
lock
cmp
mov
add
xchg
lds
enter
push
loopne
mov
adc
adc
cmp
loope
xor
inc
shr
sub
pop
sbb
ret
pop
pop
mov
inc
pop
xchg
cmp
dec
inc
adc
imul
xchg
fcomp
ror
mov
or
cs
and
jmp
hlt
jno
mov
stos
(bad)
not
cmp
mov
imul
pop
jns
inc
mov
cs
dec
mov
lea
or
push
pop
arpl
fisttp
or
loop
fldenv
add
adc
sub
inc
xor
and
push
mov
push
movs
sub
je
daa
add
popa
sub
jg
pop
push
mov
xor
jp
sbb
add
push
(bad)
xor
cwde
mov
pop
popa
xor
jecxz
cmp
retf
add
sub
add
pop
xor
addr16
jmp
push
add
in
cdq
sub
retf
ret
adc
mov
mov
sub
mov
inc
inc
cmp
pop
mov
jmp
arpl
inc
out
cld
xchg
sub
adc
inc
dec
js
pusha
push
das
ficomp
jl
fadd
cmp
loop
jns
xor
les
repz
inc
xor
cdq
mov
inc
nop
sub
pop
mov
leave
in
sub
push
dec
cmp
dec
push
dec
mov
mov
(bad)
shr
std
fadd
push
adc
mov
call
pop
mov
shl
mov
push
pusha
push
xor
xchg
nop
mov
sbb
in
adc
fiadd
push
lods
gs
inc
mov
movs
mov
xor
or
jge
mov
jne
pop
stc
add
push
je
inc
cmp
sbb
or
mov
xchg
fiadd
mov
sbb
mov
push
ja
pop
leave
jne
xor
dec
mov
loope
mov
pop
jnp
fs
in
xor
and
push
adc
adc
sar
mov
jb
mov
pop
mov
fmul
pop
sub
mov
inc
rcl
popa
pop
xor
dec
or
fldenv
inc
jb
xor
or
add
push
mov
pop
mov
rcr
sbb
push
movs
inc
or
rcr
jnp
loop
xor
add
xchg
cmp
mov
pushf
imul
add
xchg
push
cwde
(bad)
loope
adc
xor
sub
pop
cmps
push
pop
inc
movs
mov
push
sub
xor
in
lds
aas
outs
pusha
cmp
aaa
cmp
cmp
add
inc
test
test
sbb
jmp
push
pop
xchg
dec
je
mov
retf
or
daa
adc
mov
pop
mov
in
dec
and
sti
sar
sbb
lods
dec
lods
adc
mov
sbb
in
sbb
add
lock
cmc
adc
das
mov
add
ret
pop
or
and
retf
or
dec
and
mov
adc
call
test
xchg
inc
loopne
pushf
fnstsw
mov
daa
cmp
or
or
enter
push
rcr
pop
pushf
push
mov
xor
test
or
push
add
pop
movs
mov
adc
mov
sbb
test
xchg
inc
xor
xchg
les
jecxz
pop
mov
adc
or
or
inc
inc
in
out
sbb
mov
or
ds
aam
nop
cmp
mov
mov
imul
xchg
push
push
sti
pop
es
cmp
je
or
adc
cmp
xchg
ja
jge
inc
jno
scas
lds
and
inc
cs
and
outs
and
jg
ja
inc
xchg
repnz
jnp
mov
jge
jnp
add
(bad)
push
test
cdq
cmp
jbe
in
inc
stos
inc
in
push
ja
inc
or
or
push
test
add
mov
cmp
lahf
popa
dec
xor
into
push
sub
retf
cld
sub
inc
mov
fisub
jnp
cmp
mov
push
mov
jmp
(bad)
xchg
or
jmp
push
mov
pop
fs
pop
bound
and
mov
cmp
or
scas
pop
inc
inc
data16
jmp
jne
push
inc
pop
arpl
das
int
cmp
lods
stos
test
aam
pop
aaa
xchg
sub
fcmove
je
shl
or
rol
or
rcr
mov
push
shl
jne
imul
mov
mov
inc
ins
test
mov
sti
enter
add
sub
jnp
mov
pushf
pop
sub
(bad)
push
jbe
mov
push
test
sub
inc
add
jmp
xor
mov
icebp
jg
popa
pop
pop
jmp
mov
int3
lea
xchg
bound
pop
out
jmp
mov
dec
xchg
(bad)
cld
add
movs
jno
mov
sbb
dec
leave
inc
xor
push
rol
je
loop
ins
test
sbb
adc
or
mov
pop
sub
pop
push
xchg
call
push
cdq
or
das
push
inc
dec
xchg
mov
jae
adc
mov
jecxz
mov
mov
lods
xor
sub
sub
cmp
mov
xor
sbb
jecxz
add
jge
cmp
mov
dec
scas
mov
mov
adc
dec
mov
pop
test
fisttp
or
addr16
or
push
repnz
inc
xor
gs
lea
ret
cmps
out
add
add
or
xor
mov
retf
push
pop
fmul
add
addr16
cmp
push
mov
jmp
ret
int3
xchg
xchg
fmul
add
lods
inc
push
and
sbb
ret
and
cmp
cld
cmp
or
pop
or
sub
call
or
or
fwait
xor
push
je
mov
arpl
add
nop
xchg
xor
push
mov
scas
cmps
inc
std
sub
or
adc
or
push
sbb
inc
jecxz
add
dec
sub
stos
ins
mov
xor
push
sar
sbb
adc
sbb
divps
sti
int3
movs
retf
scas
movs
adc
push
push
mov
add
movs
test
jmp
js
jge
sar
push
cmp
push
adc
jle
jp
mov
sub
popa
jne
fidiv
addr16
retf
jno
xchg
pusha
pop
lock
jmp
enter
add
push
mov
mov
inc
adc
inc
add
aam
call
call
sbb
or
mov
pop
jge
mov
xchg
adc
inc
push
inc
call
leave
adc
mov
mov
call
fidivr
fsubr
mov
or
and
pop
fdiv
nop
or
sbb
push
dec
ret
xchg
push
(bad)
xchg
add
dec
or
test
test
out
shrd
dec
clc
adc
sbb
sar
jmp
mov
mov
or
sub
add
mov
movs
jnp
sar
and
push
or
mov
add
inc
retf
cwde
dec
je
sub
xchg
inc
ds
add
aam
push
dec
adc
inc
mov
into
pop
lahf
outs
adc
mov
push
leave
and
pop
xchg
sub
push
add
pop
das
or
addr16
int3
dec
and
push
xchg
or
sub
add
or
xor
sbb
imul
push
xor
xor
adc
fbld
or
jno
inc
jo
aad
mov
sub
xchg
mov
jmp
xor
lea
fs
out
js
iret
cmps
cs
mov
aam
and
or
sbb
inc
add
fidivr
push
cdq
cmp
dec
std
cmp
cmp
add
adc
cmp
jg
aam
into
cmp
jl
loope
rol
pop
gs
ret
jnp
mov
and
xchg
mov
pusha
pop
je
or
xchg
in
mov
jg
iret
in
add
pop
push
mov
add
mov
or
inc
dec
dec
ins
add
xchg
mov
bound
cmps
sub
and
movhps
or
mov
adc
push
popf
pop
(bad)
stc
into
xor
mov
pop
inc
jmp
sbb
jge
sub
in
push
cs
ins
pop
adc
or
and
cmps
mov
push
dec
stc
aas
jne
add
adc
out
nop
outs
or
mov
inc
fisttp
cmp
adc
push
test
cmp
adc
ret
jo
out
push
push
mov
pop
jne
or
push
loopne
jge
adc
cmc
or
cmp
mov
sub
aaa
xchg
jmp
mov
test
sub
sbb
arpl
add
or
shl
jo
xor
xor
stos
jae
mov
jl
pop
je
popa
jl
push
mov
(bad)
(bad)
adc
mov
sbb
or
jecxz
sbb
jno
scas
lahf
daa
inc
and
lock
push
stos
pop
nop
pop
nop
mov
add
jno
sub
movs
test
xor
lds
dec
inc
mov
add
mov
dec
and
cmp
not
sub
out
or
mov
imul
push
push
push
inc
add
add
cmp
clc
add
sti
sbb
push
adc
int
clc
movs
mov
clc
pop
ret
js
sbb
scas
ja
or
enter
add
add
and
dec
pusha
sbb
lock
jge
or
add
movs
xor
std
adc
mov
push
adc
jmp
sbb
adc
inc
(bad)
adc
rcr
or
popa
dec
push
mov
add
out
pop
xchg
lock
push
jp
dec
jmp
rcl
mov
ret
add
cmp
loopne
sbb
xor
push
cmp
or
and
sbb
mov
jno
inc
pop
or
push
mov
out
shl
js
js
das
mov
scas
xor
inc
pxor
cmp
std
pop
sbb
xor
loopne
hlt
jns
push
lods
rcl
repnz
fsubr
and
xor
pop
jle
inc
or
mov
sbb
pop
test
stos
clc
call
das
rcl
or
sbb
pop
popa
push
sub
xchg
xchg
dec
sbb
frstor
jo
shl
enter
lock
mov
xor
rcl
or
mov
outs
sbb
mov
aam
movs
cmp
jl
xchg
retf
mov
pop
inc
xchg
shr
fdiv
jecxz
mov
fst
and
push
or
loopne
pop
and
jge
shr
mov
jg
push
adc
mov
xchg
sbb
aad
sub
mov
sub
sbb
cld
js
adc
scas
mov
dec
xor
push
add
clc
popa
inc
pop
jbe
pop
pop
je
mov
movs
ds
call
test
mov
sbb
lock
xchg
mov
iret
iret
pop
movs
cmp
outs
inc
out
clc
ret
mov
stos
mov
push
sub
mov
push
loop
jmp
push
sub
push
(bad)
dec
addps
in
mov
inc
cs
xchg
sbb
shl
inc
loope
add
es
lods
(bad)
call
pop
and
movs
dec
jae
inc
sub
stc
pop
es
push
sar
jmp
enter
or
push
pop
rcl
jmp
dec
add
in
rcr
push
sub
xor
shl
push
lods
push
dec
mov
movs
jne
cmp
in
add
(bad)
call
sub
jl
fsubr
in
and
push
inc
fsubr
fcom
pop
sbb
das
arpl
adc
xor
cdq
js
movs
addr16
outs
dec
aas
gs
adc
jo
xchg
icebp
push
xchg
mov
imul
xchg
inc
and
or
lea
mov
mov
out
popf
fiadd
jae
pop
or
sbb
cmp
imul
fwait
out
xchg
jne
xor
(bad)
fild
push
sub
xor
shl
push
and
test
push
jns
and
outs
push
adc
add
jecxz
lods
cmp
adc
mov
jle
cmps
add
mov
mov
or
or
dec
sub
jo
mov
cmp
in
shr
fsubr
mov
inc
cmps
outs
cmp
sub
pop
adc
xchg
into
jo
ins
and
sahf
push
pop
sbb
xor
je
sub
cmps
aaa
sbb
mov
and
and
mov
push
jmp
adc
shl
sub
mov
dec
ffreep
add
add
adc
es
cmp
cwde
add
dec
and
test
pop
sub
add
dec
pushf
push
je
(bad)
xor
add
iret
test
sub
or
add
retf
inc
or
es
sar
or
mov
cmp
retf
push
or
cmp
dec
enter
xor
add
je
or
xor
cmp
inc
push
adc
out
mov
xchg
popa
in
imul
mov
(bad)
js
call
aaa
pop
cmp
pop
xor
jno
or
aas
hlt
rcl
mov
pop
jp
inc
cmp
jp
aam
mov
sub
int3
dec
sub
or
out
cmp
int3
adc
and
inc
aas
cmp
loop
inc
fistp
hlt
test
push
mov
rcl
jmp
or
cwde
std
daa
nop
xchg
jne
test
jmp
ds
cmp
pop
adc
push
cmp
push
adc
les
test
xchg
push
add
push
dec
and
fiadd
shr
sub
sbb
ud1
clc
xor
cmp
shl
fsubr
push
es
dec
je
dec
jne
daa
jne
and
pop
mov
js
pop
mov
cmp
retf
pop
dec
or
or
repz
cmp
aad
inc
int
retf
xchg
jbe
iret
and
leave
xchg
pop
iret
push
adc
lea
push
outs
popa
mov
shr
cmovae
mov
push
cmp
mov
arpl
and
xor
cs
outs
fisub
std
bound
icebp
ja
sbb
out
sbb
bound
pop
dec
xchg
adc
in
pop
sub
jp
(bad)
mov
cwde
neg
leave
adc
xor
popa
push
push
xor
push
jo
data16
enter
fdivr
jle
pusha
cmovs
or
ins
adc
sbb
loopne
repnz
adc
out
dec
jne
xchg
sbb
je
idiv
mov
add
adc
pop
push
dec
mov
inc
shl
dec
pop
jmp
loopne
jmp
and
mov
adc
add
bound
xchg
test
add
sbb
pop
lahf
add
daa
cmp
adc
sbb
scas
sub
cwde
sub
ror
bnd
push
fist
xor
and
dec
aaa
or
xchg
ficom
add
jp
push
iret
mov
xor
push
je
or
mov
frstor
loopne
mov
push
cli
jl
push
pusha
dec
(bad)
aaa
add
adc
imul
outs
lods
jge
es
xor
ins
leave
daa
shl
add
xor
mov
mov
daa
or
xor
and
fsub
add
aaa
xlat
ror
sbb
cmp
leave
dec
sbb
cmp
(bad)
mov
pusha
push
push
add
mov
sub
jl
nop
or
sbb
or
mov
stos
inc
adc
movs
and
cmc
add
push
push
lods
inc
int
es
add
gs
and
jl
mov
pop
je
pop
push
cmp
jmp
bound
xor
je
or
add
or
inc
stos
add
add
ret
push
loop
jmp
mov
test
clc
or
cwde
(bad)
sbb
lahf
or
dec
test
mov
aas
adc
jge
add
inc
or
aaa
mov
add
jp
xchg
(bad)
push
add
jo
sbb
and
cmp
cmp
or
and
and
push
sbb
cmp
je
or
cs
clc
jne
cmp
add
sub
and
jge
or
fidiv
pusha
add
push
je
push
sti
jne
mov
cmp
sbb
lea
xor
test
aam
cmp
mov
dec
inc
adc
nop
jae
cmp
lods
dec
sbb
cmp
rol
out
sbb
rol
(bad)
repz
nop
adc
mov
xor
mov
xchg
lods
jnp
add
lods
pop
pop
or
jne
pusha
sub
scas
xchg
jg
adc
cld
lods
call
xchg
jbe
jo
pop
into
fcomp
xlat
pop
xchg
adc
add
in
or
iret
enter
pop
jl
pop
loope
movs
and
mov
and
jl
rol
push
xor
inc
sub
movs
movs
test
lods
(bad)
adc
push
cli
pusha
adc
(bad)
or
inc
jmp
movs
int
jecxz
sbb
inc
xchg
popa
xor
and
and
int
es
mov
cmp
nop
xchg
cmp
push
or
jae
xchg
adc
sbb
jmp
inc
cmp
sub
xlat
iret
sub
lods
mov
jmp
aad
xchg
or
dec
xchg
(bad)
jl
adc
mov
and
add
sub
pop
(bad)
jo
dec
xchg
dec
rcl
pusha
ins
mov
iret
loop
add
dec
jae
inc
stos
retf
ss
cmp
movs
cmp
dec
mov
movs
jmp
add
jne
mov
add
mov
push
loopne
mov
retf
imul
pop
pop
sbb
iret
xchg
mov
jae
and
mov
push
movs
sbb
or
cmp
adc
mov
dec
mov
sbb
pop
sbb
sbb
(bad)
jle
cmp
mov
dec
enter
or
adc
pusha
fld
cwde
les
js
mov
pop
mov
je
jge
mov
ins
ror
or
sbb
adc
add
sbb
bound
cwde
add
adc
mul
(bad)
dec
mov
cmp
and
add
adc
addr16
les
fwait
movs
sub
and
(bad)
xor
xchg
stos
fistp
mov
add
repnz
mov
enter
and
sub
inc
xchg
in
loopne
sbb
in
lock
inc
jle
cmp
add
or
je
je
adc
sbb
and
mov
dec
js
xchg
enter
mov
rcr
and
jmp
or
mov
popa
popf
les
popa
dec
add
fidiv
xor
(bad)
(bad)
hlt
or
imul
and
in
add
ret
mov
hlt
cmp
inc
or
test
or
jecxz
jge
jle
sbb
push
inc
je
fs
xchg
jo
pop
mov
add
xchg
movs
dec
cmp
retf
and
cmp
mov
ret
or
and
jae
pop
add
push
std
push
add
jmp
push
and
and
sub
scas
mov
inc
stos
or
popa
call
cld
aaa
or
or
cmp
pop
sbb
adc
sti
cmc
or
xchg
mov
(bad)
clc
sub
and
jae
dec
pop
add
mov
leave
(bad)
fwait
mov
inc
sub
or
push
inc
cmp
inc
std
and
shl
(bad)
adc
ret
in
push
push
and
shl
movs
dec
mov
inc
jmp
sub
(bad)
jo
and
js
and
add
cli
cmp
pop
inc
test
mov
xchg
sbb
push
jne
pop
push
dec
ret
sub
push
ret
cmp
movs
adc
arpl
out
add
mov
or
inc
lods
jmp
or
dec
xchg
push
push
jecxz
adc
cmp
dec
lods
sub
pop
jle
inc
cdq
mov
test
test
push
addr16
stos
addr16
addr16
xchg
xor
mov
or
xchg
pop
ins
xor
push
fidivr
cdq
xor
xchg
push
adc
or
ret
enter
sbb
mov
call
mov
enter
push
retf
jns
push
in
rol
inc
push
in
add
cmp
inc
sbb
cmps
in
je
or
add
xor
jmp
push
and
test
std
mov
pusha
inc
adc
(bad)
imul
clc
add
xchg
mov
mov
mov
dec
int
cwde
mov
sahf
jmp
cmp
mov
and
shl
mov
or
mov
xchg
les
dec
std
mov
ins
(bad)
enter
les
xchg
or
add
add
and
pop
xchg
mov
mov
shl
jo
pop
jo
loopne
mov
push
inc
pop
add
sbb
shl
or
mov
sbb
pop
les
or
dec
imul
fcom
add
mov
xchg
aam
or
mov
std
push
push
cmp
sbb
and
xchg
add
sbb
xor
add
stos
inc
push
jns
or
enter
in
mov
or
and
jns
mov
push
pop
bound
sub
loope
push
mov
pop
ror
cmc
call
push
stos
cmc
pop
cmp
mov
in
loop
sbb
pop
stos
sbb
and
aas
out
sbb
jle
xor
and
add
mov
xchg
daa
std
jbe
mov
jp
retf
pop
add
mov
loopne
adc
pop
movs
dec
adc
inc
pop
dec
pop
add
fwait
jne
movs
mov
add
mov
and
or
rol
out
fs
cdq
fmul
add
loope
into
movs
inc
ja
and
xchg
add
mov
ret
cmp
and
and
test
(bad)
dec
jae
test
gs
jnp
shl
rol
or
xlat
jb
je
loop
and
push
rcl
jnp
dec
das
mov
xchg
xchg
test
adc
cmps
inc
xor
cdq
adc
sub
dec
push
xor
add
loope
add
push
or
jbe
cmc
(bad)
jmp
adc
mov
jne
push
sub
ret
ror
push
cmps
or
mov
sbb
es
sub
inc
jmp
fld
push
in
fisub
adc
loopne
inc
push
cmp
xlat
mov
mov
mov
mov
inc
sub
shl
les
in
mul
xchg
lock
add
test
in
or
sbb
push
or
adc
xor
mov
pop
dec
push
cdq
in
ja
dec
test
sbb
and
add
leave
xor
rol
xor
adc
dec
je
adc
lods
xchg
loop
adc
mov
sbb
in
(bad)
push
lahf
sub
xchg
sub
push
inc
test
in
fs
outs
mov
shl
add
cmp
lea
mov
popa
push
add
ins
mov
mov
mov
test
cdq
in
add
dec
add
call
xchg
and
lea
adc
es
out
loope
or
into
add
inc
adc
add
add
dec
enter
add
test
enter
pop
mov
jge
ins
ins
je
sbb
mov
inc
push
dec
leave
pop
and
jno
mov
sub
daa
sub
or
pop
repz
or
shl
cmp
pushf
sub
movs
mov
dec
sbb
sub
loope
lods
int3
dec
sub
and
dec
sbb
or
add
loopne
pop
and
lods
or
test
push
aad
mov
popa
lods
inc
add
xchg
rol
adc
jb
jno
aam
mov
jb
jno
lea
sbb
lea
or
xor
pop
mov
sbb
or
lods
sti
push
mov
dec
jl
xor
inc
add
cmps
sbb
ret
sahf
or
mov
lods
popa
jns
(bad)
push
mov
jmp
arpl
push
mov
cmps
dec
xor
dec
cmp
ret
inc
sbb
outs
shl
adc
and
fiadd
sub
(bad)
pop
xor
es
xor
xchg
movs
xchg
push
add
mov
sbb
xchg
retf
movs
pop
mov
lods
mov
repnz
cs
(bad)
push
pop
or
int3
ffreep
mov
add
movs
ret
aaa
test
and
pushf
sbb
imul
xor
dec
inc
push
sbb
and
sub
mov
add
pusha
retf
bound
sub
xlat
jmp
ss
popa
xchg
pop
dec
cmp
loope
push
je
xchg
push
or
xchg
cmps
adc
sbb
cmp
mov
xchg
adc
cmova
daa
sbb
sbb
sbb
push
pop
aaa
adc
mov
sbb
xor
xchg
scas
mov
push
pop
push
or
pop
icebp
aad
pop
fs
pusha
sbb
jmp
fadd
cli
mov
movs
mov
and
arpl
test
add
adc
lods
dec
pusha
pusha
data16
add
add
mov
sub
mov
inc
add
inc
outs
adc
adc
add
xchg
sub
movs
or
inc
adc
pop
sub
std
inc
in
inc
in
arpl
xchg
lea
or
aam
clc
xor
xor
push
inc
clc
mov
mov
pop
add
mov
hlt
loopne
clc
add
out
add
test
mov
cmovb
std
pop
int3
daa
sbb
or
(bad)
in
mov
xor
xor
(bad)
mov
addr16
dec
mov
cmp
adc
lock
and
jo
xor
sbb
adc
add
inc
lods
mov
pop
mov
inc
cld
push
out
push
call
sub
xchg
je
jmp
pusha
jnp
mov
or
sbb
push
mov
xor
sbb
xor
xor
push
push
test
leave
aad
je
dec
push
retf
dec
xchg
hlt
mov
jp
(bad)
aam
ss
or
mov
inc
cdq
not
cdq
das
rcl
dec
sub
add
loop
sbb
sbb
jb
add
mov
gs
inc
mov
ins
inc
mov
loop
cmc
cs
dec
xchg
pop
inc
movs
loopne
adc
sar
adc
push
and
cmp
add
mov
pop
mov
xchg
test
enter
adc
lea
mov
shl
and
inc
cmp
push
fdiv
mov
xor
emms
inc
ja
stos
mov
pop
fadd
mov
push
push
rcr
shr
rcl
and
icebp
addr16
sub
lock
ret
jne
stos
dec
mov
inc
adc
xor
nop
cmp
mov
cmps
sbb
jmp
jbe
add
xchg
pop
cmps
call
mov
mov
dec
rcr
jmp
sub
dec
out
pusha
xchg
add
in
cmp
cmp
push
push
add
mov
sbb
sbb
jmp
cmp
fs
mov
loope
add
hlt
or
cmp
sbb
xchg
mov
dec
fwait
dec
cmp
inc
xchg
retf
movs
mov
sub
pop
loopne
int3
cs
and
loopne
fdivr
test
add
pminub
inc
add
into
ins
aam
push
sbb
adc
or
or
pop
xchg
mov
push
inc
call
add
test
xchg
jp
mov
outs
addr16
sub
push
jmp
cmp
ins
mov
sub
xor
sub
mov
cs
(bad)
ss
adc
nop
popa
je
je
xchg
sub
and
mov
inc
jmp
vunpckhps
(bad)
frstor
sub
sbb
and
js
dec
jl
add
or
mov
pop
imul
sbb
ret
xchg
je
js
cwde
or
xor
test
and
mov
nop
mov
jo
dec
outs
xchg
fild
pop
adc
xchg
adc
in
nop
jl
adc
rcr
popf
pop
dec
and
lock
fisub
sbb
punpckhwd
dec
push
add
repz
call
icebp
push
mov
cmp
jg
or
fcom
cmp
popa
loop
jne
xor
or
or
sub
rcl
retf
or
adc
push
shr
add
jns
stos
or
les
lea
sbb
(bad)
test
jne
sbb
fidiv
xor
fwait
sbb
xor
iret
jg
adc
adc
xchg
mov
or
(bad)
jg
sub
pop
je
adc
pop
fmul
(bad)
ss
xor
(bad)
out
push
jl
rol
out
out
add
push
push
mov
dec
enter
push
hlt
ss
or
add
push
pop
xor
mov
ret
inc
and
sbb
je
pop
sar
xor
mov
out
pop
xchg
mov
dec
(bad)
pop
pusha
ins
ffree
jl
movs
and
xchg
jg
dec
inc
cwde
and
add
je
push
inc
(bad)
test
pop
add
dec
dec
sbb
cmp
icebp
shr
cmp
push
je
lea
dec
dec
dec
sbb
cdq
xor
jl
(bad)
sahf
xor
stc
adc
lds
or
popf
nop
dec
sub
mov
stos
cmp
lahf
dec
loope
call
xchg
pushf
adc
add
xchg
push
push
mov
bound
mov
rcl
mov
test
sbb
pop
mov
push
push
rcl
das
(bad)
pop
sbb
cmp
in
dec
add
inc
mov
ret
fmul
sbb
cmp
inc
dec
hlt
jle
rcl
rcl
int3
add
cmps
out
mov
es
jb
add
mov
xor
dec
add
stos
adc
mov
cli
inc
shl
adc
cs
cmps
inc
add
test
call
and
js
sbb
cmps
dec
stos
shl
sbb
dec
fidivr
cmp
inc
pusha
dec
jno
call
test
aaa
lods
inc
inc
jl
mov
addr16
imul
jl
inc
aam
pop
rcr
jle
mov
ja
cdq
pop
jmp
repnz
push
dec
mov
mov
jge
lods
push
add
or
test
adc
es
rol
sar
pop
pop
mov
sub
cs
jmp
dec
and
lds
jne
adc
pop
adc
sbb
or
pop
dec
push
inc
aam
test
(bad)
pop
cmc
mov
xor
or
imul
add
mov
je
lea
(bad)
out
pop
enter
mov
daa
push
mov
dec
xchg
push
test
or
das
mov
dec
add
adc
repnz
or
jmp
fsub
ret
fcomp
or
mov
sbb
int3
aam
adc
jne
sbb
das
daa
imul
dec
xchg
mov
inc
cmp
pusha
add
jo
inc
adc
lock
or
cmp
cli
cli
jne
fsub
push
sbb
inc
add
push
add
imul
adc
xchg
push
aam
mov
pop
jbe
sbb
and
pop
es
cmp
jmp
fs
mov
and
and
clc
pop
test
mov
push
add
mov
lods
mov
xor
dec
cs
fmul
(bad)
xor
xchg
sbb
jmp
or
dec
pop
sub
loop
stos
inc
jns
cmp
cli
lea
sar
push
xor
loope
stos
push
outs
sahf
adc
inc
inc
cmp
out
xor
xchg
(bad)
jmp
push
fadd
out
mov
sbb
push
hlt
cmp
dec
push
enter
test
jo
out
add
jns
adc
mov
sub
jnp
sub
sahf
call
adc
sbb
add
adc
xchg
jbe
mov
add
into
fdivr
jns
sbb
jl
pop
add
mov
out
or
fdiv
arpl
sub
push
pop
mov
or
adc
retf
or
jo
fcomp
mov
aaa
jae
hlt
movs
or
stos
fdivr
movs
rcl
inc
jmp
rol
test
(bad)
xor
xor
sbb
call
mov
mov
mov
push
adc
mov
lods
sbb
fdivr
jmp
faddp
pusha
and
inc
ds
inc
sub
(bad)
(bad)
aam
adc
mov
shr
pop
push
rcl
or
pop
lods
mov
add
mov
jae
mov
(bad)
pop
dec
adc
jo
mov
imul
cmp
popf
dec
int
and
add
retf
cmp
sti
js
push
push
xchg
rol
jbe
lods
mov
xor
or
dec
shl
xchg
div
mov
adc
push
pushf
xor
dec
lock
lods
pop
xlat
ins
pop
cmps
add
cli
jmp
test
or
lock
aad
pusha
js
sti
sub
adc
out
or
or
push
test
or
or
fdiv
fld
and
loopne
cmps
popf
les
jo
mov
push
imul
mov
or
pop
cmp
pop
adc
lahf
sahf
sub
push
push
mov
arpl
lahf
mov
(bad)
popa
jecxz
aam
sub
je
loop
fmul
retf
add
dec
jo
sbb
div
inc
sbb
sub
rol
mov
and
mov
fs
or
in
add
(bad)
popa
pop
popa
es
test
mov
push
sbb
add
jmp
and
shr
and
stos
or
add
adc
inc
xor
push
call
adc
sbb
push
pop
movs
int
jle
cwde
jbe
jg
adc
pushf
ins
or
adc
fsub
popf
sub
sub
adc
xchg
xchg
push
mov
pmullw
call
sbb
call
inc
(bad)
and
js
sub
jne
xor
or
push
test
or
adc
sbb
stc
sbb
js
pop
sub
fisttp
sub
dec
in
sbb
mov
icebp
pop
cmps
mov
xchg
test
mov
movs
jge
or
jae
push
and
lods
retf
mov
cmp
in
cmp
xor
jne
ficom
jl
push
mov
push
fiadd
std
adc
adc
loop
lock
fsubr
mov
jo
or
push
test
fidiv
dec
mov
push
jmp
sbb
ds
je
int
sub
or
inc
add
inc
xlat
push
out
xchg
and
lds
js
xchg
jge
ja
and
gs
(bad)
stc
in
or
ds
mov
push
push
fucom
adc
inc
pusha
jne
mov
fwait
mov
(bad)
das
into
and
es
cmp
jmp
pop
fiadd
js
les
add
xor
cmp
addr16
in
jg
add
cmp
loopne
sub
aam
dec
add
mov
cmps
dec
adc
jg
cmp
and
idiv
mov
cmp
jne
inc
jmp
mov
push
mov
jge
sub
push
adc
test
out
or
mov
pop
scas
cmp
sbb
scas
mov
mov
dec
mov
sub
xchg
mov
aas
xor
pop
pop
xor
stc
dec
or
xchg
or
add
mov
scas
sbb
test
mov
push
or
ret
fnstcw
pop
sub
in
xchg
repz
int3
fwait
inc
jo
xchg
pop
pop
push
mov
fs
loopne
add
jmp
sub
inc
sti
(bad)
(bad)
push
gs
test
pop
ds
imul
sub
push
dec
aad
add
(bad)
inc
jmp
ror
rcr
rcl
rcl
rcl
sar
imul
add
xor
push
xor
jmp
ss
jmp
ret
jnp
in
imul
cmps
adc
sahf
sub
lea
sahf
scas
js
mov
push
sub
or
push
xlat
sar
call
jge
jg
add
mov
cmp
cdq
adc
dec
push
xor
in
cld
push
cmps
call
cmp
jg
xchg
js
mov
add
daa
xor
sub
sbb
cmp
xchg
cmp
ins
(bad)
adc
jp
mov
cwde
dec
rcl
push
push
pop
jbe
sbb
in
lds
in
icebp
cmps
xor
or
xchg
jg
xchg
jnp
pop
cmp
in
cmp
inc
mov
adc
sub
fidiv
shl
push
add
dec
cmp
fdiv
push
sub
sar
test
fsubr
push
out
sub
jb
aaa
shl
sbb
push
inc
addr16
pop
xor
sub
lea
fwait
lock
jae
test
ds
cld
and
cmp
or
cmp
pop
cmp
fdivr
jecxz
cmp
idiv
mov
xchg
cmp
cmps
repz
(bad)
stos
fst
fcom
mov
ja
popa
imul
or
push
jne
inc
inc
push
push
outs
jne
sub
dec
gs
cmp
jle
add
sbb
test
jge
push
es
push
lds
jmp
push
or
fcom
repnz
dec
adc
adc
test
aam
add
sub
arpl
pop
mov
push
sbb
sbb
inc
and
pop
std
ja
out
es
inc
arpl
enter
rcl
sar
or
in
sub
lods
jmp
inc
loopne
arpl
mov
pop
imul
test
lock
cwde
pop
inc
call
jmp
jle
call
retf
(bad)
dec
jns
jmp
mov
add
jne
les
or
rcl
cmp
ja
cmp
jg
loop
cmp
aaa
jge
lea
push
sub
pop
xchg
xor
das
cmp
mov
ror
sub
sub
jmp
iret
mov
add
shl
xchg
add
int3
cmp
js
int3
and
js
scas
daa
push
movs
sbb
push
nop
xchg
scas
sub
fmul
nop
dec
push
jns
in
push
mov
lock
loope
push
rol
dec
(bad)
or
sbb
push
cmp
fsubr
outs
aas
iret
adc
das
dec
mov
pop
and
arpl
mov
popa
ret
xchg
and
pop
sub
int3
fmul
and
mov
in
int3
rol
cs
les
je
imul
loopne
nop
loope
adc
fs
cs
in
sbb
mov
dec
push
cmp
repnz
and
call
adc
pop
xchg
push
jecxz
xor
push
(bad)
dec
or
add
clc
and
sub
arpl
push
das
mov
adc
xchg
pop
xor
push
xor
dec
mov
push
sub
mov
aaa
sbb
jne
and
call
sub
push
push
loope
push
push
es
and
outs
adc
push
sub
push
mov
add
dec
fisub
popf
sbb
popa
xor
ss
or
dec
cmp
mov
push
or
mov
jb
jno
lds
mov
jg
inc
sub
add
sbb
and
dec
cmps
push
xchg
mov
xchg
or
inc
cld
je
push
movs
(bad)
(bad)
mov
xor
cli
jne
xchg
push
add
and
fwait
mov
xchg
(bad)
stc
or
shl
loopne
ins
les
(bad)
cmp
aaa
mov
data16
or
jbe
sub
cmp
js
loope
shl
and
mov
invd
aaa
sub
test
inc
sahf
adc
push
shl
sbb
adc
data16
and
xchg
inc
jl
mov
mov
repz
jae
outs
mov
push
adc
mov
in
pop
adc
pop
and
push
adc
bound
sub
cmp
dec
cmp
and
cmps
sti
sar
cmp
fwait
pop
xlat
or
inc
xchg
xchg
dec
xor
enter
jmp
and
retf
mov
arpl
clc
mov
pop
xor
mov
xor
jne
add
lahf
jg
movaps
ins
push
lahf
(bad)
ret
pop
or
or
push
push
in
adc
jle
sar
add
sub
aas
icebp
xchg
add
mov
adc
mov
xchg
sub
add
mov
sub
xor
xchg
pop
les
(bad)
loopne
pop
jg
neg
test
sbb
xchg
jo
out
adc
mov
sbb
lods
sets
pop
mov
cld
push
test
syscall
or
ret
mov
or
fcomp
clc
test
or
and
or
sub
adc
adc
dec
shl
cmp
cmp
adc
mov
shl
ror
dec
push
dec
inc
popa
add
aad
imul
mov
cmp
loope
adc
enter
mov
inc
cld
retf
ret
and
inc
or
inc
sub
and
mov
iret
sub
dec
mov
imul
push
je
stc
mov
lock
and
add
mov
sbb
xor
in
and
adc
popf
mov
dec
mov
popa
or
add
in
imul
js
outs
push
jg
sub
jno
push
jmp
mov
repnz
sbb
xor
dec
mov
imul
mov
sub
int3
dec
adc
adc
or
jnp
mov
pusha
jne
mov
jno
lods
push
in
or
add
sub
jne
push
jno
arpl
ja
xchg
pop
mov
and
mov
outs
mov
push
cld
and
lahf
aam
jmp
retf
fadd
mov
push
mov
mov
shl
aaa
or
test
mov
jl
pusha
and
loop
rcl
inc
nop
adc
add
sub
scas
add
loope
sbb
pushf
mov
dec
adc
test
popa
lods
fstp
ret
push
shr
cmp
or
sbb
jne
sbb
inc
add
inc
int3
or
pop
mov
mov
jmp
je
mov
out
rol
jno
fimul
test
shl
fs
scas
mov
adc
loopne
or
enter
adc
js
dec
test
xchg
fmul
std
into
xor
bound
sahf
gs
pop
lock
and
xchg
lock
sub
jl
dec
dec
ret
xor
div
pop
sbb
pop
dec
loope
add
mov
push
cs
adc
xor
inc
inc
fsub
in
repz
push
mov
nop
ret
imul
imul
cdq
ror
push
push
push
enter
mov
jg
xchg
div
push
cmp
call
mov
cmp
lahf
imul
pusha
aam
and
pop
je
adc
jge
pop
or
adc
je
or
je
dec
dec
pop
and
mov
inc
scas
js
ins
adc
(bad)
push
push
inc
pusha
cmp
push
(bad)
dec
mov
mov
dec
icebp
iret
mov
or
mov
in
inc
int3
xor
enter
add
mov
jmp
push
inc
mov
cmp
add
movs
sub
pop
dec
mov
pop
aaa
and
add
leave
push
add
adc
lods
mov
jge
adc
les
mov
mov
jl
popf
imul
add
mov
sbb
jle
stos
inc
in
inc
shr
mov
push
add
sar
fdivr
cmp
jl
(bad)
dec
push
mov
mov
test
popf
sahf
rol
fsubr
pop
mov
and
sub
call
mov
or
test
outs
inc
or
fst
add
pop
cmp
call
and
or
sub
aaa
sbb
fisttp
ror
sub
adc
popf
dec
call
cwde
or
add
pusha
movs
pop
test
jl
xor
in
cmp
ja
mov
add
add
rol
xchg
cs
or
add
push
inc
loop
xchg
lods
push
(bad)
sub
push
jne
cmp
adc
cmp
xor
add
and
pop
push
pop
outs
movs
js
mov
add
je
test
daa
int
adc
jb
adc
mul
das
mov
jmp
or
push
pop
or
push
push
add
aaa
inc
sub
inc
push
mov
jo
xchg
pop
add
push
sar
sub
jmp
inc
ins
mov
push
ret
push
xchg
(bad)
push
loopne
std
(bad)
xor
in
jmp
sub
or
push
ins
push
push
clc
fwait
call
pusha
dec
push
or
add
mov
jecxz
and
xor
cmp
cs
inc
fwait
sub
dec
test
cwde
push
repnz
lds
stos
sbb
and
inc
popa
pop
xchg
pusha
mov
add
jl
push
push
add
or
pop
dec
popf
pop
jecxz
xor
push
pop
imul
(bad)
movs
test
aaa
mov
enter
add
ror
push
mov
and
adc
sbb
xlat
fwait
sub
iret
adc
jl
mov
jb
icebp
cld
pop
add
aaa
or
into
sbb
push
or
mov
popf
call
test
(bad)
mov
aad
add
fbld
push
or
mov
int3
dec
dec
sub
into
push
sub
or
add
dec
pop
pusha
xor
xchg
jno
setns
xor
push
push
and
popa
loop
mov
push
js
mov
sar
jl
mov
sbb
pop
push
retf
stc
test
fcomp
fcom
ret
or
test
mov
in
retf
leave
enter
push
loopne
call
cmp
add
ret
sbb
aas
add
push
push
test
or
add
mul
push
rol
ja
ror
xchg
xchg
pop
pop
xor
mov
mov
inc
pop
fcomp
pop
mov
cs
ret
jge
and
inc
rcr
test
ja
cli
daa
jne
jnp
push
pop
inc
jbe
aas
dec
dec
adc
dec
pop
nop
hlt
sbb
mov
mov
xchg
movs
sbb
rcr
cmp
jl
dec
add
jg
mov
outs
adc
xor
pop
adc
mov
sub
loopne
mov
jmp
push
mov
cmps
sbb
jmp
push
xor
fimul
in
add
mov
pop
jae
adc
enter
adc
or
ret
dec
inc
inc
sub
adc
loopne
or
jae
fs
sbb
clc
push
dec
imul
loopne
dec
stos
or
push
mov
adc
lock
shr
push
sbb
and
inc
pusha
dec
sti
movs
enter
cmp
in
sub
inc
pop
mov
(bad)
dec
or
dec
loope
mov
mov
lahf
lea
adc
inc
xlat
add
(bad)
mov
push
imul
lds
pop
jno
ret
shl
stos
push
push
movs
shl
adc
test
dec
mov
mov
je
mov
pop
mov
mov
pop
test
lods
xchg
sub
adc
fs
jle
sub
dec
sub
or
jno
test
and
sub
test
call
mov
jne
mov
adc
addr16
xor
xchg
push
inc
ror
mov
inc
inc
call
inc
push
and
js
dec
push
xor
mov
call
dec
call
fist
mov
add
mov
mov
add
adc
(bad)
clc
pop
cmp
mov
jo
or
stos
jmp
in
xor
sbb
inc
push
inc
pop
ret
xchg
cli
cmp
and
outs
imul
imul
dec
clc
and
loopne
mov
and
cmps
adc
pop
fstp
push
movlps
es
fdiv
xor
add
dec
cmp
push
pop
push
ror
(bad)
and
fstp
adc
push
int
pop
fwait
pop
adc
jecxz
ja
call
sbb
mov
xchg
sub
xchg
mov
fimul
pop
inc
push
add
or
inc
scas
pop
mov
enter
sbb
mov
or
ins
aam
and
mov
sbb
add
jg
adc
add
push
add
les
pusha
sub
(bad)
loope
adc
and
push
or
scas
adc
loopne
mov
movs
push
add
rcr
pop
push
and
jns
popf
or
iret
mov
add
inc
jmp
push
lods
dec
sub
and
xchg
loopne
add
sub
cmc
dec
rcl
or
aaa
in
sub
mov
lds
shl
aam
ror
cmc
imul
mov
test
push
sbb
pop
jae
push
test
and
out
loope
jecxz
xor
ins
inc
cwde
cmps
shl
sbb
clc
push
xor
pop
rcl
sbb
push
enter
inc
inc
and
call
jecxz
pminub
loop
jl
daa
hlt
scas
add
cdq
or
adc
add
add
xchg
push
pop
fmul
mov
and
pop
or
and
pusha
test
sbb
push
mov
call
or
push
cmp
push
push
nop
jno
sbb
jb
shl
cmp
fs
inc
push
fidiv
test
gs
push
leave
ror
ins
inc
rcr
inc
ins
inc
pop
mov
and
push
or
dec
dec
xor
sub
jno
(bad)
adc
jae
xchg
ins
cwde
mov
adc
ins
movs
sbb
pusha
adc
lods
push
shr
mov
stos
(bad)
es
adc
sub
(bad)
ins
or
test
sub
push
add
cdq
enter
add
aad
mov
je
xchg
mov
mov
cmp
mov
sub
push
loopne
and
rcl
push
pop
cmp
shl
pushf
repnz
jo
(bad)
mov
out
rcr
and
add
mov
mov
and
push
movs
adc
mov
xor
xchg
movs
or
mov
mov
dec
lldt
xor
xor
fstp
arpl
daa
rcr
push
inc
test
or
scas
add
mov
jge
(bad)
stos
push
call
mov
cmp
in
es
clc
add
adc
cmp
sbb
dec
add
xor
daa
add
(bad)
shl
loope
int3
lsl
ror
mov
lea
and
dec
mov
add
daa
mov
inc
cmc
das
add
mov
dec
sub
pop
dec
mov
loopne
add
push
data16
fsubp
adc
inc
loop
jmp
add
aaa
jmp
cmp
pushf
and
sbb
push
add
cmp
ins
add
inc
adc
mov
popa
mov
es
sub
jmp
pop
inc
xor
push
pop
cmc
sub
lods
js
lea
xchg
out
add
pushf
cli
pushf
add
push
nop
cli
inc
xchg
pop
add
inc
jae
xchg
or
mov
push
jnp
fcmovnbe
or
and
xor
imul
sub
add
mov
test
sbb
pop
mov
inc
loope
or
jmp
(bad)
loop
mov
mov
ss
repnz
adc
push
ja
add
fucom
adc
fs
cwde
cli
dec
loopne
pop
adc
or
std
js
pop
mov
add
loopne
dec
adc
and
push
add
xchg
cmp
push
shl
or
push
xchg
sbb
cwde
sbb
mov
pop
sub
js
mov
in
inc
dec
hlt
loope
loop
loop
dec
sar
retf
js
ret
in
or
or
or
mov
stos
lods
or
mov
push
mov
test
popf
xor
adc
call
mov
inc
je
mov
and
inc
push
nop
cmp
adc
jne
pop
int
sbb
sbb
ss
cmp
imul
adc
inc
mov
add
or
loopne
neg
jle
clc
je
iret
sbb
xor
mov
xor
xchg
enter
fwait
sub
mov
add
dec
movs
mov
pop
add
inc
jb
fld
inc
mov
push
test
mov
in
ret
mov
jge
movs
das
pop
sub
pop
sub
add
sbb
test
xchg
dec
jmp
push
fidiv
iret
pop
fcom
je
add
repnz
and
and
rol
jge
aas
cld
inc
and
push
jmp
mov
movs
test
push
sti
in
jmp
aas
mov
ror
and
sub
mov
pop
mov
ss
sbb
jno
jge
xor
or
repnz
jg
inc
adc
and
push
xchg
jle
inc
out
jae
imul
cmps
repz
mov
sahf
je
popf
mul
jmp
mov
mov
adc
sbb
arpl
mov
aad
jge
inc
and
jae
(bad)
push
lock
push
daa
cmp
xchg
jmp
sub
jae
sub
push
(bad)
and
pop
or
fcom
ja
aad
hlt
std
mov
fstp
inc
jmp
test
shr
xor
leave
or
inc
repz
dec
in
jnp
xor
inc
lea
shr
ja
shr
in
pop
adc
push
xchg
add
ins
mov
in
push
pop
jbe
sbb
rol
mov
mov
(bad)
scas
rcr
push
cmp
pop
ins
push
mov
fwait
mov
lea
(bad)
adc
movs
lods
add
or
inc
pop
xor
(bad)
fnstenv
or
and
pushf
and
or
dec
cmp
jp
pop
xchg
or
out
repz
rcr
jne
adc
dec
imul
fdiv
out
pushf
sbb
in
jp
xchg
mov
pusha
outs
pop
and
fsub
cmp
dec
shr
xchg
xchg
ffree
in
pop
mov
push
mov
or
ins
adc
jo
(bad)
add
adc
pop
and
(bad)
fadd
or
add
hlt
fidivr
mov
sub
ss
fwait
test
mov
shl
arpl
mov
xor
add
fwait
test
hlt
jne
push
xor
push
xor
and
or
lods
mov
xor
mov
push
sub
cwde
loop
pop
mov
cmp
test
sub
jl
loopne
loop
mov
leave
lock
sub
mov
test
and
fistp
js
ret
popa
clc
lock
inc
push
pop
sub
xchg
pop
int3
je
rcl
add
jo
pop
into
push
dec
mov
jbe
cmp
and
stos
push
repz
test
jo
and
adc
and
es
pop
mov
xchg
and
push
(bad)
or
mov
cmp
inc
cmp
jnp
dec
sahf
addr16
or
aaa
xchg
add
nop
sbb
clc
in
add
push
and
adc
xchg
mov
or
mov
cld
xchg
push
clc
lea
hlt
mov
or
cwde
or
jge
les
icebp
dec
mov
mov
adc
mov
out
enter
cmps
jmp
mov
add
jno
int3
imul
adc
add
pop
into
sbb
pop
inc
int3
dec
or
into
pop
cmp
test
rcl
jo
sbb
push
ss
icebp
mov
mov
addr16
pop
cmp
cmp
pop
mov
in
cld
xor
or
lea
lock
inc
fcom
push
into
je
jp
loop
lock
fs
xchg
dec
repz
in
sbb
(bad)
pop
out
push
mov
aas
adc
and
or
enter
and
sbb
leave
sub
lock
icebp
jmp
imul
and
mov
sbb
dec
and
xor
mov
and
pop
and
add
and
or
add
retf
jmp
nop
or
sub
daa
es
adc
lods
ds
out
js
and
or
push
fisub
lods
fwait
push
xchg
xchg
push
mov
push
push
ud1
xor
imul
xor
mov
sbb
add
cmp
mov
adc
icebp
rcl
xchg
jns
adc
adc
mov
ror
and
inc
sub
or
mov
jno
xor
xchg
inc
loopne
jne
cmp
das
inc
pushf
jbe
enter
call
push
mov
icebp
xor
adc
jae
add
cs
in
sub
or
mov
cmp
sub
jmp
pop
push
push
leave
rol
mov
push
add
das
test
push
movs
dec
push
mov
push
movs
and
jns
rol
cld
outs
or
test
jmp
sbb
mov
sbb
sub
push
or
test
int
mov
ins
rcl
inc
mov
push
in
jmp
imul
adc
fstp
repnz
outs
iret
pop
dec
lods
jne
sbb
ror
xor
xor
adc
lea
mov
mov
add
sub
push
dec
adc
sub
or
out
lds
jge
xchg
clc
ins
adc
dec
jmp
push
cmp
pop
neg
bound
push
sub
cmp
dec
add
(bad)
sub
test
lds
xchg
mov
sahf
and
ins
jl
loope
mov
repnz
pop
or
sub
rcl
nop
pop
push
sub
es
adc
ins
xchg
jp
pop
mov
xor
push
loopne
xchg
cmp
pop
lock
add
dec
(bad)
int
add
dec
and
add
fadd
stos
or
punpcklwd
and
add
stos
and
icebp
sub
xchg
xchg
div
xor
es
add
xchg
(bad)
ja
es
gs
dec
or
push
pop
icebp
mov
mov
mov
mov
mov
push
or
rcr
jmp
xor
lds
hlt
test
sub
sbb
mov
add
in
xchg
mov
(bad)
mov
ret
push
dec
dec
push
pop
xchg
push
pop
je
dec
addr16
sbb
fbstp
xor
mov
add
sub
and
push
fdivr
add
je
push
add
shl
mov
popa
add
les
add
xor
mov
(bad)
fwait
sub
pushf
or
sub
mov
cmps
cmps
adc
test
push
mov
shl
mov
ins
cmp
push
inc
js
jmp
sbb
mov
push
xchg
pop
add
inc
fisubr
mov
aas
(bad)
jne
jge
xchg
mov
or
xchg
jmp
lods
in
or
rcl
jo
and
sti
pushf
rol
add
lock
loope
cmp
jno
and
xlat
data16
les
dec
jge
les
fild
shl
int3
add
jl
enter
xchg
mov
rcl
fsubr
pop
ss
inc
cmps
mov
jmp
push
lods
pop
lods
repz
inc
and
xor
fwait
out
add
lock
shr
jno
aam
cld
daa
int3
or
add
xlat
sbb
add
dec
sub
loop
add
mov
inc
mov
jge
mov
xor
xchg
and
or
inc
or
lock
pusha
mov
sub
mov
mov
mov
dec
ja
add
inc
stc
push
mov
addr16
xchg
mov
std
mov
test
jecxz
sbb
mov
loopne
test
aam
dec
push
clc
addr16
push
mov
mov
adc
retf
aas
fst
mov
sbb
cmp
bound
add
enter
and
push
fcomp
add
mov
xchg
div
(bad)
mov
popa
add
and
cmp
clc
and
xchg
cmp
shr
push
fs
stc
repz
dec
or
clc
dec
repnz
dec
sbb
dec
cld
sbb
ss
pop
inc
mov
adc
icebp
cmp
xchg
dec
test
test
add
sar
jmp
add
in
hlt
cmp
mov
movs
inc
push
push
mov
lea
inc
xlat
pop
and
adc
xor
loope
cwde
aas
dec
dec
adc
pop
add
or
xor
cmp
pop
mov
push
pop
lock
in
div
add
pop
dec
pop
les
and
jno
push
sbb
jecxz
adc
push
cmps
not
adc
or
cmp
icebp
jp
mov
imul
in
test
(bad)
aad
mov
push
adc
inc
js
mov
ret
jno
jmp
sbb
xchg
jbe
data16
push
jns
jo
stos
fisub
cli
xor
ret
js
sub
or
sar
pop
retf
xor
loop
cmp
clc
adc
adc
retf
mov
push
jnp
jp
mov
pop
pop
(bad)
loopne
nop
dec
jnp
adc
cmc
push
test
loop
adc
pop
stos
ss
movs
inc
fs
push
push
cli
inc
cmp
call
rcl
ret
into
jne
jmp
sbb
mov
add
push
push
mov
cmp
dec
arpl
push
pop
xor
jno
call
mov
sub
jns
movs
je
xor
pop
adc
aas
jae
sub
mov
(bad)
in
mov
mov
jne
pop
fdiv
xor
dec
or
adc
jno
xor
scas
ins
jns
aas
add
xchg
jle
pop
inc
ret
cmp
cmp
jo
pop
leave
add
cmc
inc
push
mov
adc
pushf
nop
inc
xchg
rol
movs
jle
push
xlat
sbb
pop
lods
mov
rcl
or
ins
or
and
scas
jmp
mov
xchg
cmc
inc
in
push
inc
or
adc
sub
inc
push
adc
jl
push
gs
or
dec
fisubr
xor
mov
mov
gs
mov
sub
pop
sbb
and
int
pop
fld
inc
(bad)
ja
cmp
add
fcmovnbe
shr
dec
and
fist
in
inc
or
cmp
in
mov
(bad)
js
fdiv
mov
push
push
test
mov
add
adc
sub
xchg
jne
push
add
push
dec
pop
adc
inc
sbb
lods
aad
or
xchg
cmp
push
inc
add
ja
cmps
and
xor
ds
pop
or
cwde
into
sub
lahf
cs
xor
test
add
mov
movs
dec
mov
or
cmps
mov
loopne
not
(bad)
adc
loopne
das
and
sub
stos
dec
movs
add
cmps
fisttp
test
cmp
add
dec
jp
rcl
sysret
mov
or
es
mov
retf
add
out
retf
push
daa
cs
mov
inc
inc
js
popa
rol
cmp
adc
mov
or
popa
leave
es
xor
sbb
nop
xor
imul
push
sub
dec
fmul
sbb
icebp
test
addr16
aad
add
(bad)
push
or
movs
push
push
adc
(bad)
push
inc
dec
add
dec
add
and
xor
add
ins
lahf
es
xchg
push
jmp
or
lahf
and
cmp
icebp
push
push
mov
xchg
call
and
gs
retf
dec
popa
mov
sbb
imul
dec
stc
aas
lock
shr
ss
daa
pop
push
lods
adc
sub
and
push
pop
dec
inc
or
mov
sub
aas
adc
inc
imul
and
ret
pop
lock
adc
push
popa
mov
and
loopne
or
cs
es
hlt
add
mov
stc
jecxz
add
or
lahf
adc
popa
mov
push
add
add
mov
stos
inc
int3
inc
dec
sar
mov
or
mov
and
call
(bad)
call
ins
sbb
and
lock
push
add
inc
and
clc
fstp
(bad)
shl
outs
lds
outs
dec
aas
inc
push
popa
stos
inc
retf
es
jle
xor
dec
mov
and
adc
mov
and
sti
xchg
pop
push
push
aaa
adc
push
xor
dec
add
imul
or
ret
jne
push
(bad)
imul
std
push
(bad)
jne
dec
adc
inc
xor
shl
rcl
je
mov
add
dec
outs
popa
in
aaa
(bad)
fs
inc
dec
outs
xchg
or
sbb
mov
or
ja
fwait
push
fwait
dec
adc
pushf
shl
jnp
add
out
cmp
dec
mov
push
ret
sub
xchg
loope
pop
enter
js
mov
or
sbb
pop
mov
pop
mov
imul
je
pop
xchg
inc
and
mov
fiadd
rol
jne
push
add
int3
inc
dec
cld
mov
pop
sbb
push
dec
mov
ins
sbb
ret
dec
mov
inc
lock
loopne
mov
mov
xor
retf
cmp
push
imul
mov
cmp
xor
mov
and
pusha
pop
std
add
add
and
add
cmp
sub
sub
jnp
fdiv
xchg
sahf
inc
aaa
and
fnstenv
loope
addr16
mov
fiadd
fadd
push
sub
ins
imul
mov
or
popa
ja
jbe
pop
adc
pusha
mov
ret
inc
sub
icebp
call
cs
mov
or
jmp
aam
xor
xchg
inc
sub
xor
inc
cmp
sub
inc
fsub
and
loope
mov
into
mov
pusha
cmps
popa
dec
jmp
cmp
adc
jns
and
cdq
shl
sub
daa
push
push
xchg
sub
push
hlt
jg
scas
or
xor
pop
enter
push
add
ret
bound
jle
dec
test
sub
jg
adc
je
jb
gs
cmp
mov
push
push
inc
loop
sbb
sub
pop
addr16
sbb
in
nop
in
mov
and
retf
je
xlat
mov
test
sub
jp
inc
jmp
xor
hlt
pop
loopne
fiadd
bound
iret
rol
add
stc
sbb
movs
js
or
mov
inc
iret
pop
add
push
ror
cmp
sti
sahf
xchg
pop
sub
pushf
fisttp
jne
sbb
sar
adc
pop
cmp
daa
mov
sub
int
rol
jne
or
sahf
add
add
mov
lock
add
add
retf
mov
xchg
push
xor
in
push
sbb
push
les
push
xchg
nop
mov
xchg
movs
xor
fmul
mov
jle
in
xlat
nop
dec
ret
add
cwde
and
into
jmp
inc
mov
pop
xchg
in
mov
or
pushf
jno
or
outs
std
mov
mov
inc
sub
add
rol
add
test
inc
sub
push
mov
push
dec
stc
ins
xchg
les
push
jl
clc
shl
fcomp
xor
pop
mov
mov
mov
inc
sub
sar
fild
jmp
mov
pop
test
push
mov
pop
push
lods
mov
loopne
scas
adc
adc
test
xor
inc
xor
add
clc
sub
in
jne
iret
fadd
jp
aam
sbb
add
pop
nop
fsub
or
inc
call
sub
test
movs
pop
cmp
mov
push
and
ins
push
(bad)
je
ss
into
enter
sub
bound
scas
cmp
mov
add
movs
inc
push
push
push
push
and
and
repnz
xchg
xor
popa
mov
xchg
xor
pop
inc
sbb
jb
jae
(bad)
mov
enter
ret
js
imul
gs
jns
mov
popa
cmp
adc
mov
jmp
adc
or
cmps
mov
cmps
fcom
cmp
dec
fadd
sbb
xchg
fdiv
int3
sbb
add
push
and
stos
sbb
add
sbb
push
or
adc
sbb
bound
and
adc
inc
call
and
xor
sbb
sbb
(bad)
sub
or
xor
mov
stos
mov
and
push
pop
sbb
xor
fadd
xor
or
and
lods
xchg
dec
or
xor
jns
popa
jl
inc
loop
jle
sbb
cmp
push
jmp
adc
ins
pop
fiadd
dec
adc
inc
or
lahf
or
push
mov
aam
push
inc
pop
fnsave
out
lahf
pop
or
xchg
rcl
adc
cmp
aam
pop
data16
adc
mov
xchg
shr
rol
push
daa
sub
jl
push
sub
add
xchg
adc
in
scas
enter
push
and
or
or
mov
or
pop
mov
jno
or
adc
sti
not
sahf
pop
inc
(bad)
jo
add
add
push
push
shr
and
(bad)
std
add
push
xchg
mov
cdq
add
xchg
fimul
inc
gs
sbb
push
movs
je
pop
repnz
add
pop
add
cmovnp
xchg
push
adc
icebp
pusha
push
pusha
add
push
adc
inc
dec
psubq
pop
mov
push
push
jb
(bad)
pop
out
ss
ret
jmp
sbb
movs
pop
fs
inc
dec
and
dec
loopne
cmps
int
jmp
dec
lahf
popa
sbb
jp
cli
pop
stos
icebp
dec
jne
dec
add
or
movhps
add
push
cmc
dec
ffreep
lods
inc
adc
cli
adc
xchg
das
loope
mov
pushf
retf
in
pop
mov
xchg
mov
mov
imul
mov
mov
add
nop
(bad)
jg
in
or
mov
adc
popa
or
inc
push
xchg
xchg
imul
push
sub
icebp
cmp
pop
inc
push
and
cmc
fdivr
or
mov
sahf
add
icebp
push
outs
cs
or
and
sub
cwde
add
push
adc
lock
push
pop
lods
dec
jle
pusha
add
and
add
test
loop
fdivr
push
or
mov
xchg
sub
or
jnp
(bad)
cmc
popf
stc
adc
and
iret
adc
jne
mov
movs
jno
push
(bad)
fsubr
xchg
sbb
retf
cs
add
test
and
push
jge
loop
arpl
add
les
adc
push
retf
bound
imul
jmp
imul
js
jmp
and
ins
jmp
or
sar
mov
ss
aaa
mov
rcl
imul
sbb
push
push
add
adc
add
sub
sub
dec
cmc
add
call
adc
pop
and
jmp
pop
je
add
test
xor
es
or
in
jmp
add
test
jmp
cmp
add
rol
scas
mov
jecxz
sub
jmp
or
stos
add
add
xchg
jg
test
xor
dec
add
push
add
inc
pop
bnd
add
and
sub
and
inc
or
xchg
test
mov
add
mov
mov
sar
xor
sub
or
pop
mov
jp
jp
(bad)
jle
cmp
adc
lock
enter
add
inc
aaa
add
add
addr16
sbb
in
or
push
outs
lods
leave
cmp
out
xchg
inc
adc
add
adc
test
inc
inc
or
call
sub
xchg
das
ins
sbb
jmp
push
adc
adc
aam
rol
push
shl
sub
adc
rol
jge
popa
adc
mov
rcl
cmp
je
pop
adc
xchg
push
addr16
fcom
lds
push
add
or
cmp
push
or
je
xor
inc
add
in
pop
push
es
and
or
dec
sub
ret
xlat
jge
sbb
lock
shr
fwait
jmp
adc
mov
push
sub
rol
cmp
test
ret
shr
and
in
mov
mov
nop
ret
mov
es
shr
or
loopne
bound
add
push
movsx
cmp
jg
dec
jo
push
cwde
mov
mov
hlt
push
xchg
pop
add
adc
popf
adc
mov
push
jns
and
cdq
clc
xchg
and
push
xor
shl
sbb
(bad)
xor
mov
dec
adc
adc
dec
xchg
fcom
dec
call
xlat
je
test
mov
or
cwde
adc
test
inc
shl
push
sub
mov
mov
je
or
dec
lods
xchg
mov
push
push
sub
fadd
or
inc
shr
sub
inc
ins
push
add
sbb
and
mov
lahf
test
mov
jecxz
adc
int
popa
add
add
sub
icebp
cdq
or
cwde
pop
cmp
adc
inc
movs
fild
cmp
sub
or
cmp
or
dec
xchg
lods
adc
cmps
outs
retf
xchg
jno
cmps
ret
(bad)
or
int
sub
mov
xchg
pop
loopne
sub
pop
xchg
push
adc
ins
xchg
pop
jl
repnz
cmp
mov
add
popf
test
xor
jmp
sbb
adc
pandn
and
clc
inc
jo
cmc
fiadd
sbb
pop
adc
adc
pop
mov
jmp
into
xor
xor
jne
jo
or
fwait
xor
pop
xchg
pop
add
add
es
mov
or
sub
je
push
fisubr
pop
xchg
ret
mov
push
xchg
adc
sbb
xor
hlt
jae
jns
ror
sbb
mov
je
push
test
rcl
retf
and
add
sbb
jmp
or
hlt
adc
lods
push
loopne
mov
add
pop
shl
push
ret
add
xchg
and
jle
jl
cmp
push
adc
cmp
adc
ror
fimul
mov
sbb
and
ins
rcl
cmps
cmps
jns
sbb
jo
add
cmp
rcr
pusha
cmp
xchg
adc
jmp
sbb
xor
movs
psubb
sub
in
mov
push
dec
shr
mov
pop
and
je
movs
and
or
aaa
je
push
sbb
push
pushf
and
or
xchg
and
shl
mov
scas
pop
cmp
mov
mov
lock
mov
and
or
or
ins
jmp
(bad)
jb
ficom
push
add
push
int3
sbb
loopne
or
fstp
lea
push
or
push
xor
lock
xchg
shl
inc
push
push
rcl
imul
ror
imul
xor
or
lods
adc
pop
push
adc
(bad)
jmp
xchg
push
push
rcr
shl
shl
add
test
movlhps
cmp
push
adc
fs
scas
(bad)
(bad)
cmp
cs
push
push
(bad)
add
jbe
in
sbb
adc
call
jbe
aas
gs
je
ja
lods
inc
stos
imul
leave
cmp
adc
imul
xlat
dec
fsub
call
gs
call
jmp
push
jecxz
or
or
and
or
mov
or
dec
add
in
dec
or
cmp
pop
dec
mov
mov
(bad)
mov
pop
xor
xchg
pop
inc
add
pop
pop
and
inc
out
xor
mov
(bad)
sub
sub
rol
jo
cwde
push
jmp
xor
adc
add
push
fs
retf
sub
mov
pop
je
jecxz
mov
sub
movs
adc
aad
es
imul
inc
or
movs
dec
inc
dec
pop
enter
ja
rol
out
pop
sub
mov
xchg
mov
xchg
leave
pop
push
xor
rcl
jg
cmc
inc
repz
sbb
sbb
xchg
jmp
(bad)
add
inc
loopne
mov
or
sub
test
pusha
pop
push
push
add
or
ins
arpl
ins
and
or
js
in
or
add
push
push
add
add
adc
xlat
or
push
cwde
push
adc
(bad)
cmp
pop
adc
clc
shl
loopne
pop
dec
rcr
and
xor
jle
mov
sub
sub
loopne
fidiv
loopne
cwde
aam
adc
cmc
nop
mov
xchg
jo
mov
add
push
(bad)
pop
nop
adc
or
xor
shl
ficom
nop
cmp
inc
sbb
(bad)
jne
test
clc
xchg
imul
dec
imul
jmp
ins
or
dec
dec
xchg
sub
xchg
das
fcomp
jae
add
mov
mov
lock
jl
push
jmp
dec
and
dec
mov
test
add
sub
jo
cs
and
add
sti
add
mov
inc
or
cmp
add
(bad)
sar
(bad)
xchg
add
aaa
cmp
xchg
or
or
mov
enter
or
sar
mov
sbb
test
call
mov
mov
adc
movs
inc
and
test
jno
add
xor
subps
inc
dec
mov
and
xchg
jl
or
outs
pushf
pusha
jne
xchg
jne
sub
imul
pop
lods
js
inc
sbb
sub
dec
jecxz
xchg
jae
dec
xchg
sub
or
jmp
sbb
add
and
neg
inc
dec
mov
mov
inc
js
mov
jmp
jb
xchg
and
xor
sbb
mov
cmovnp
push
cdq
shl
pop
int3
sbb
inc
rol
call
push
sbb
in
das
jbe
or
je
dec
ds
cwde
jo
xchg
(bad)
and
mov
lock
sar
mov
inc
xor
popf
fst
push
dec
push
aas
push
xchg
faddp
jne
jae
sbb
sub
pop
scas
mov
sub
or
retf
jbe
enter
push
xchg
cmp
mov
and
or
push
ficomp
pop
iret
test
sub
jmp
int
cs
jmp
(bad)
and
shl
shl
shr
ret
je
or
add
jle
ficomp
mov
jge
fcomi
adc
push
add
(bad)
sub
pop
test
jbe
ss
pop
xchg
ror
add
xor
jnp
nop
xor
mov
add
pop
imul
mov
imul
and
jno
add
sbb
sub
comiss
pmullw
mov
dec
sbb
xchg
mov
add
scas
or
mov
and
adc
sbb
adc
test
adc
(bad)
and
xor
cmp
adc
cmp
add
dec
movs
ds
inc
pop
pop
mov
lods
or
call
das
xor
loope
and
es
imul
add
ja
mov
iret
cdq
mov
ret
xchg
in
jno
xchg
fistp
push
adc
xor
pop
shl
mov
js
sub
aam
adc
aam
add
inc
mov
ret
xchg
aam
mov
sbb
mov
popa
movs
add
sub
push
mov
stos
call
cmps
and
or
shr
jo
cvtps2pi
jmp
dec
aaa
jbe
mov
sub
add
inc
les
add
add
repnz
adc
pop
sbb
dec
cmps
outs
daa
xchg
adc
push
nop
je
push
loopne
stc
cmc
cmps
cmp
and
push
loopne
and
popf
jo
lock
addr16
in
add
call
or
or
push
dec
xchg
push
push
test
ss
sbb
jge
or
add
and
cmp
loopne
cmp
sub
test
call
or
ja
fadd
xchg
fdiv
mov
sgdtd
and
or
add
pop
or
dec
dec
arpl
inc
loopne
and
push
add
or
repz
lea
push
cdq
push
mov
test
push
dec
cmp
out
jp
mov
mov
or
jo
sub
add
inc
ds
mov
pop
aad
dec
sub
cmp
sbb
push
sbb
loopne
dec
cwde
inc
push
and
mov
outs
pop
(bad)
stos
mov
iret
aad
rcl
pop
or
add
xchg
aaa
pop
pop
push
dec
aam
inc
xor
loopne
pop
test
dec
mov
cmp
add
xchg
les
xchg
aam
xchg
and
adc
fadd
js
and
push
jmp
xchg
jae
xlat
xor
fs
lahf
add
pop
cmp
xor
loope
pop
je
fist
mov
js
add
xchg
sbb
dec
adc
mov
jmp
ret
inc
mov
xor
in
push
inc
inc
sbb
int3
jb
or
or
inc
fs
and
ror
or
dec
(bad)
add
mov
(bad)
(bad)
add
loop
out
test
call
xor
add
retf
and
je
mov
in
adc
hlt
jge
inc
stos
arpl
cli
ret
xor
loopne
jo
or
and
fcmovnb
add
add
push
fmul
(bad)
test
sbb
fld
test
sub
call
sub
jno
adc
mov
dec
ret
pop
pushf
ins
out
lock
scas
pop
adc
stos
dec
(bad)
add
stc
dec
push
jne
fstp
fsubrp
pop
ret
push
adc
dec
add
rcr
or
push
leave
fiadd
shl
ss
jnp
push
fnstcw
fsubr
xor
jb
(bad)
fstp
fldenv
mov
and
outs
sbb
or
pop
(bad)
add
iret
adc
cmp
push
(bad)
xor
mov
pop
(bad)
fcom
push
jmp
int3
mov
shr
and
fisubr
adc
xor
cmp
(bad)
inc
clc
(bad)
push
cmp
push
sbb
dec
clc
ds
test
cli
jge
bound
push
mov
mov
sbb
sbb
cwde
xor
rol
adc
inc
mov
add
inc
mov
fmul
fld
std
pusha
fild
test
leave
fsub
lock
inc
mov
lds
fxch
(bad)
lock
rcr
fadd
xchg
loope
ret
adc
fistp
test
test
imul
push
adc
fmul
push
outs
in
cmp
mov
punpcklbw
mov
fxch
retf
pop
pop
fmul
mov
mov
push
fsubr
fdivp
loopne
jo
add
nop
nop
bound
sub
cwde
pop
mov
sbb
sbb
aaa
fmul
jbe
pushf
outs
sub
push
lods
xchg
out
sub
out
(bad)
sbb
daa
cwde
in
xor
shl
sbb
mov
add
xlat
data16
add
cs
push
sub
push
shl
fsub
xor
les
inc
ins
or
mov
and
retf
popf
sbb
sbb
and
lock
jmp
jno
loop
fstp
jbe
mov
inc
xchg
mov
sar
dec
push
and
mov
out
cmp
jmp
fs
mov
push
or
mov
xlat
or
inc
xor
loop
repnz
push
and
adc
in
jb
xor
sub
or
pop
cmp
in
push
inc
jbe
push
mov
cmp
pop
arpl
jne
add
dec
add
int3
fcomp
push
outs
add
sbb
or
or
psllq
into
sbb
out
push
or
int
mov
mov
push
and
loop
idiv
imul
(bad)
lahf
in
int
cwde
je
inc
mov
adc
push
jl
jmp
out
dec
sub
xor
and
sbb
call
fsubr
and
shl
or
sub
or
in
sub
or
dec
ins
daa
xor
xchg
xchg
mov
or
imul
cmp
outs
pop
repnz
loope
push
les
or
imul
mov
fld
repz
ss
xor
sub
push
sbb
aas
sbb
nop
fsubr
sti
cmps
stos
jbe
push
cli
movs
fmul
ds
movs
jno
fsub
inc
ret
sbb
pop
es
stos
hlt
mov
mov
xchg
and
sub
push
call
test
fsub
div
sbb
add
shl
or
leave
pop
add
in
inc
gs
and
sub
sub
push
adc
or
or
xchg
sub
cld
cwde
repnz
fistp
push
adc
and
inc
add
js
and
mov
jbe
jl
push
mov
push
lods
int
test
sahf
lea
mov
cmp
pushw
test
or
ja
(bad)
and
rol
bnd
jmp
inc
inc
call
and
cmp
fiadd
jg
cdq
mov
idiv
mov
sbb
add
push
in
lock
imul
sbb
ds
jne
push
pop
mov
mov
test
call
call
push
or
mov
mov
push
inc
jmp
int
loope
dec
lods
and
add
xchg
push
push
sbb
xor
pusha
mov
cdq
scas
(bad)
jmp
push
mov
push
cli
leave
push
adc
or
divps
push
mov
xchg
nop
jbe
dec
pop
sbb
sub
jle
je
loop
and
adc
(bad)
xchg
movs
in
rcl
inc
fidiv
jmp
data16
fisttp
push
in
and
adc
sub
mov
pop
int3
cmps
xor
fst
sti
add
pop
popa
shl
mov
jle
sbb
addr16
jne
dec
adc
inc
enter
popa
cli
mov
xchg
push
jo
and
push
loop
clc
adc
(bad)
ror
add
and
sbb
nop
pop
cli
fmul
sbb
sbb
pop
mov
sar
fnsave
fldz
sub
add
aam
test
push
in
jne
cmp
inc
cmp
retf
add
add
push
xor
xchg
(bad)
xchg
(bad)
idiv
add
test
xchg
je
dec
lock
add
(bad)
sub
mov
mov
dec
mov
and
sar
push
cmp
pop
dec
adc
(bad)
xor
mov
movs
cs
fadd
clc
adc
ins
test
repnz
mov
xor
pop
inc
and
into
sbb
jle
jae
sub
add
out
cli
fxch
jmp
inc
xor
js
pusha
pop
movs
sub
or
and
aam
inc
inc
test
or
hlt
xchg
mov
or
and
xor
rol
ss
sbb
add
mov
sbb
cmp
dec
or
loop
adc
inc
sub
xchg
ds
add
ret
mov
pop
jmp
push
and
inc
loopne
(bad)
pop
imul
in
js
sub
add
cmp
test
dec
loope
or
and
xor
pushf
sbb
push
cmp
push
or
dec
add
shr
jp
and
(bad)
add
addr16
pop
mov
push
pop
sub
mov
mov
(bad)
into
leave
iret
out
pop
cmp
jge
cmp
sbb
sub
push
aam
rol
add
xor
pop
cmp
or
push
cmp
push
jle
xchg
or
mov
and
inc
and
inc
inc
sub
adc
adc
mov
cmp
pop
pop
push
movs
mov
dec
shr
and
push
test
fnstenv
iret
mov
ret
out
add
inc
ror
cmp
mov
ins
jecxz
shl
push
mov
add
nop
nop
xchg
push
enter
cmp
sbb
nop
pop
and
in
in
cmovne
push
inc
cmp
push
movs
lock
xchg
push
push
dec
loopne
add
repnz
adc
add
push
push
and
inc
mov
inc
or
aas
pop
push
test
in
pusha
jge
arpl
jno
push
loopne
xchg
test
lea
ret
test
mov
ins
pushf
push
inc
lods
aas
jmp
fimul
in
cmp
sbb
std
(bad)
(bad)
rcr
movs
sbb
ds
fadd
push
aaa
xor
cmp
sbb
ret
jmp
sbb
jmp
xor
inc
fdivr
mov
jmp
aad
inc
inc
or
rcl
inc
(bad)
adc
dec
xchg
adc
and
jbe
pop
adc
push
sub
arpl
or
pushf
inc
rcl
push
jne
inc
jmp
js
sbb
xor
js
sub
mov
and
or
adc
dec
cmp
xor
jbe
lahf
push
and
jl
xchg
fadd
shl
shr
nop
mov
and
or
retf
sub
inc
and
dec
add
pusha
sub
or
add
add
adc
mov
push
clc
push
mov
mov
inc
fsub
adc
mov
inc
mov
push
dec
or
pop
cdq
jno
mov
mov
dec
or
sub
and
xor
sub
movs
(bad)
popa
loopne
and
shl
adc
adc
fdiv
mov
mov
inc
ror
loop
pop
push
repnz
add
fmul
cli
or
add
adc
mov
add
and
pop
test
pop
cmp
mov
and
dec
loopne
lods
inc
pop
add
xor
mov
pcmpeqw
cmp
mov
inc
not
cwde
(bad)
std
rol
test
aas
push
call
adc
adc
mov
and
or
icebp
je
push
mov
adc
mov
adc
sbb
push
in
and
jno
dec
ret
sub
adc
in
and
ror
adc
mov
and
test
(bad)
sbb
push
push
jge
or
test
pushf
pop
test
mov
cmp
pop
mov
sub
(bad)
pushf
fcomp
sbb
sub
cdq
imul
loopne
inc
mov
call
enter
push
shr
arpl
test
or
inc
sub
stos
mov
and
je
push
dec
jecxz
(bad)
popf
fwait
ins
xchg
add
shl
(bad)
pop
ins
retf
push
movs
sbb
hlt
nop
inc
imul
dec
xor
mov
add
add
dec
push
or
cmovp
add
je
xor
cmp
push
xchg
push
cmps
aaa
lods
ret
xchg
pushf
and
lea
repz
nop
lods
sub
(bad)
mov
in
in
dec
mov
retf
or
sbb
in
jb
pop
or
sub
int3
sbb
dec
xchg
mov
sub
rcl
test
cmp
mov
pop
cmp
pop
ins
daa
xchg
test
test
out
les
pop
mov
inc
sbb
add
ins
sbb
cs
mov
pop
sbb
sub
or
and
push
xchg
dec
mov
xor
shld
sub
mov
or
popf
int
mov
movs
dec
sbb
and
cs
call
dec
retf
and
dec
add
das
(bad)
cmp
mov
mov
adc
sbb
push
adc
int3
lahf
or
dec
out
leave
adc
add
dec
mov
rcr
fidivr
add
or
ss
cmp
retf
push
nop
rol
sti
and
sub
pop
test
xor
push
xlat
sti
inc
mov
cmp
jmp
lea
fyl2x
push
cs
fisttp
pop
aam
(bad)
and
sbb
shl
sbb
and
out
sbb
fucomi
dec
mov
ds
pop
pop
cs
cmp
imul
shl
test
mov
inc
dec
inc
push
in
push
xor
nop
and
xlat
or
push
dec
push
mov
(bad)
cld
shl
cld
inc
add
not
mov
xchg
shl
mov
xor
mov
fxch
cmp
mov
std
inc
enter
jne
xor
push
jle
push
mov
cwde
mov
shl
push
or
pop
imul
outs
adc
nop
push
fwait
repnz
pop
cld
fnstenv
sub
data16
sbb
mov
test
add
sbb
add
add
scas
push
pop
xor
test
ins
movs
pop
mov
nop
push
(bad)
adc
imul
scas
push
ins
(bad)
mov
mov
rol
add
addr16
push
outs
test
cmp
push
neg
cmp
mov
dec
xor
mov
test
add
xchg
mov
stos
mov
push
nop
rcl
push
ss
call
xchg
sbb
in
add
(bad)
sbb
and
popa
in
(bad)
(bad)
xchg
jno
mov
cwde
push
or
push
rcr
cmp
popf
jmp
pop
rol
xor
pop
mov
rol
dec
mov
mov
xor
nop
xchg
sub
jmp
outs
pop
mov
js
dec
(bad)
jns
push
hlt
(bad)
adc
fdivr
aaa
retf
(bad)
sbb
pop
mov
cmp
mov
stos
adc
nop
das
and
add
neg
int3
mov
ret
add
sbb
(bad)
dec
xor
fidivr
loope
mov
addr16
sub
jecxz
dec
sub
xchg
push
repz
xchg
mov
pop
ret
cmp
mov
jne
lds
popa
pop
nop
sbb
mov
sub
les
out
out
add
call
mov
in
loope
mov
scas
aas
cmp
push
mov
jle
mov
add
push
in
dec
fst
popf
jns
pop
dec
or
inc
mov
mov
pop
adc
xchg
rcr
pushf
sub
inc
mov
sbb
xchg
and
cmp
sbb
rcl
aas
inc
nop
jo
sbb
add
cmc
jne
dec
mov
jb
push
dec
push
push
rcl
es
les
jb
dec
and
test
shl
(bad)
or
(bad)
fimul
pop
les
cmp
sti
cs
inc
hlt
inc
cmp
sbb
mov
movs
outs
fstp
cmp
and
cli
or
or
mov
sub
ret
add
mov
and
shr
jae
sbb
adc
(bad)
pop
push
xor
inc
jo
cmp
cmps
inc
js
in
idiv
dec
ins
dec
and
sbb
push
dec
aaa
or
push
dec
test
add
jnp
sub
cdq
and
aad
xor
shl
ss
pop
in
or
fxch
fxch
jmp
seto
xor
je
fcom
push
fprem
addr16
push
fstp
fld
jmp
ret
movs
jb
xchg
js
fs
data16
sbb
fcmovnb
jmp
fstp
xchg
loope
push
push
fxch
popa
popf
jmp
or
cmp
add
pusha
pop
mov
add
cdq
mov
push
push
mov
gs
mov
sub
fidivr
jp
pop
out
pop
mov
add
ins
sbb
mov
and
xchg
xchg
adc
push
nop
(bad)
(bad)
(bad)
mov
retf
fcom
mov
mov
add
add
test
push
fwait
pop
enter
push
ins
mov
pop
jnp
sbb
jge
xchg
ds
imul
jp
fnstsw
hlt
mov
pop
inc
or
inc
cmps
jmp
cmps
jo
cwde
add
call
dec
xchg
sub
jg
push
push
inc
nop
bnd
enter
retf
or
(bad)
sbb
enter
and
(bad)
jb
enter
sbb
ret
inc
cmp
mov
ss
jo
ficomp
nop
cmp
cs
lds
dec
rcr
xchg
leave
mov
movs
mov
push
dec
cmp
test
push
pop
cmp
mov
or
mov
nop
or
retf
sbb
adc
inc
and
pop
mov
and
mov
cmp
or
jmp
dec
mov
or
xchg
fs
dec
sbb
rol
mov
test
pop
es
test
push
sbb
outs
lds
inc
mov
dec
adc
test
hlt
call
mov
adc
add
in
cmps
sbb
dec
pop
push
clc
ret
loopne
sub
pop
and
sub
jmp
jge
push
fild
sbb
or
and
mov
adc
pop
(bad)
sub
push
movs
inc
mov
sub
movs
iret
imul
xchg
or
ss
outs
ret
retf
scas
clc
out
hlt
push
and
and
leave
cld
mov
adc
cmp
frstor
shl
push
adc
loopne
mov
sub
jo
lods
push
loop
mov
imul
shl
add
loope
push
push
mov
inc
outs
xchg
lahf
stos
lahf
sub
push
call
jo
sub
lock
xchg
add
xor
sbb
adc
stc
sub
sbb
sbb
test
lahf
and
ror
ret
xchg
gs
ret
push
loop
add
and
jl
ins
(bad)
sbb
je
cdq
or
mov
push
mov
sbb
arpl
inc
loope
lock
rcr
leave
aam
sbb
mov
adc
pop
dec
pop
idiv
dec
cmp
aas
daa
adc
adc
cs
push
pusha
or
inc
popf
mov
adc
stc
clc
ret
add
add
cmps
cmp
(bad)
jnp
jle
lea
xor
mov
jbe
les
fmul
sahf
and
push
ret
push
fidiv
or
ss
push
invd
cmp
ret
dec
(bad)
mov
mov
(bad)
jno
arpl
loopne
xchg
inc
push
jecxz
jb
and
xchg
cs
fwait
retf
pop
sar
pushf
mov
mov
pushf
xchg
frstpm(287
cmp
inc
jns
lods
loopne
jbe
mov
cwde
ja
aaa
mov
inc
or
adc
mov
cwde
and
sbb
cvttps2pi
iret
mov
or
jmp
sbb
or
jmp
dec
cmp
xor
cmp
dec
fcomp
ret
sbb
call
sbb
jo
cmp
lods
add
nop
shl
adc
add
jle
jno
imul
push
cs
or
retf
call
sub
rcl
mov
sbb
mov
sbb
jb
in
add
nop
mov
call
sbb
lock
ins
popa
movs
and
rcl
arpl
call
fucomp
add
and
test
cmovns
adc
dec
es
pop
fstp
inc
popa
sbb
popa
bound
movs
dec
adc
pusha
xor
sbb
cmp
mov
xor
push
jne
xor
push
pusha
pusha
fs
sub
add
sub
add
pop
rcl
js
push
push
mov
leave
sub
les
test
test
adc
fsubr
loop
xchg
in
call
jne
inc
push
sub
add
xchg
pop
mov
xchg
inc
in
dec
scas
cli
adc
xchg
jle
dec
in
fidivr
fidivr
fisttp
dec
jle
or
push
mov
lea
mov
push
mov
adc
fcomp
jle
mov
lahf
mov
adc
mov
and
or
test
xor
nop
inc
ins
ret
fmul
movs
xlat
adc
push
loop
in
add
push
mov
jle
mov
lock
scas
fcom
imul
fdiv
adc
or
shl
sar
(bad)
stos
outs
loope
bound
mov
push
test
inc
xchg
sbb
(bad)
mov
mov
dec
dec
push
cs
retf
in
pop
pop
fs
lock
inc
stc
pop
add
pop
jbe
jne
cmps
retf
movs
sti
mov
(bad)
lods
add
mov
adc
and
sbb
jns
inc
loopne
pop
fsubr
jl
popf
pusha
movs
mov
add
push
mov
cmp
(bad)
xchg
xchg
test
fidiv
cmovno
dec
or
pop
push
in
js
or
daa
add
daa
xor
daa
cmp
or
sbb
ss
repz
lods
xchg
cld
movs
mov
and
sbb
test
pop
cmp
and
minps
jae
lock
adc
mov
mov
xchg
pushf
or
icebp
xchg
add
shl
cmp
sub
xor
out
mov
push
push
arpl
mov
lea
sub
je
jne
ins
sbb
repnz
and
dec
sub
div
jne
retf
mov
sbb
mov
inc
ret
call
sub
xor
add
aaa
mov
stos
sar
jbe
in
sbb
dec
mov
mov
push
into
jp
or
ret
cmp
jbe
fmul
pop
call
mov
rcl
in
jp
bound
js
xor
pop
ss
(bad)
(bad)
arpl
cmps
rol
rol
or
or
mov
(bad)
(bad)
or
push
frstor
push
js
add
sbb
dec
jne
jo
std
xor
adc
jb
mov
sbb
xor
ja
aas
mov
fcomp
mov
jmp
push
fstp
lods
dec
dec
je
pop
sub
cmp
in
and
adc
adc
mov
mov
or
dec
cmp
ret
and
add
mov
mov
inc
add
retf
inc
or
test
and
or
popa
jle
mov
std
mov
pop
xchg
test
and
(bad)
nop
call
inc
mov
fadd
std
in
test
push
aam
jne
call
in
shr
mov
pop
lea
mov
mov
push
pop
ror
push
test
xchg
mov
test
or
inc
mov
xchg
xchg
xchg
jae
test
pusha
retf
mov
xchg
adc
test
rcr
ror
jo
sub
pop
outs
push
or
ja
mov
in
popa
aaa
mov
add
xor
push
(bad)
dec
stos
lock
jmp
mov
push
sar
inc
sub
(bad)
dec
add
pop
mov
pop
fcomp
addr16
es
stc
in
fisub
es
int
out
in
ins
push
or
out
call
pusha
fcom
push
dec
mov
push
clc
or
xchg
movs
fisub
aaa
xchg
repnz
daa
test
push
or
cmp
ret
mov
xchg
sti
or
cmp
sbb
mov
jo
inc
leave
add
xlat
out
ret
sub
cmp
pop
sbb
jbe
or
mov
fnstcw
clc
js
(bad)
imul
test
cmps
sbb
aaa
and
outs
adc
jae
sahf
call
std
or
int3
pushf
loopne
test
jb
lea
fstp
cwde
test
pop
popa
mov
dec
and
inc
or
int3
or
sub
push
call
imul
adc
push
imul
push
loopne
in
(bad)
sahf
mov
mov
paddusw
lock
les
jp
pop
shr
test
call
fst
xchg
push
cs
add
aas
mov
loop
movs
mov
(bad)
iret
imul
rcl
cld
xchg
pop
push
jmp
arpl
ins
mov
adc
cmp
and
push
rol
inc
inc
cmp
imul
sbb
loop
jo
shl
fidiv
sti
movs
mov
push
(bad)
sti
add
push
add
dec
test
inc
push
daa
pop
mov
outs
stos
and
out
mov
inc
jo
ror
sub
loope
popa
dec
sub
stc
push
mov
stos
add
sahf
les
add
arpl
imul
enter
hlt
inc
pop
popf
aaa
cmp
into
push
mov
jno
lea
push
pop
cli
cmp
push
xchg
cmp
hlt
sbb
rcr
ins
aas
(bad)
pushf
lea
enter
add
loopne
out
mov
or
imul
push
test
jl
push
pop
push
stos
pop
or
test
xor
fdivr
or
sbb
or
and
cmps
je
jmp
mov
or
outs
pusha
sub
iret
clc
jmp
pop
ins
sub
(bad)
jnp
pop
xchg
push
or
fsub
inc
ret
mov
and
pusha
pop
xor
lods
sub
xchg
pusha
jecxz
je
sub
inc
call
into
sub
loope
xchg
shl
mov
xchg
xchg
in
fwait
pop
pop
pusha
and
mov
adc
pusha
mov
sub
aam
pop
nop
rol
retf
jbe
mov
mov
popa
popf
jecxz
pop
and
xchg
outs
out
dec
imul
mov
sbb
jb
cmp
mov
push
and
mov
movs
xor
xlat
cs
test
add
inc
fdivr
mov
lds
sub
ss
mov
ins
jge
popa
test
push
add
inc
or
inc
or
or
cli
cmps
test
xchg
xor
xchg
xor
add
cmp
call
enter
(bad)
in
mov
xlat
jne
pop
pop
mov
push
jb
ds
sbb
xor
add
mov
inc
fwait
das
or
test
mov
rol
mov
inc
dec
cmp
pop
and
ret
or
cmp
xchg
xor
push
add
mov
icebp
into
bound
jbe
cmp
push
push
ss
and
test
add
test
xchg
pop
cdq
add
pop
into
bound
call
adc
adc
sahf
(bad)
lahf
data16
shl
xchg
add
and
sahf
add
push
int
jne
jl
pop
ret
or
sbb
jmp
push
idiv
add
cmp
movs
mov
pop
enter
mov
cmp
inc
mov
(bad)
jmp
arpl
in
mov
jmp
mov
jmp
lds
repnz
and
pop
adc
jne
inc
ins
loopne
push
jmp
push
mov
xchg
lea
mov
mov
ss
inc
push
cmp
mov
shl
push
pusha
pusha
sub
inc
ins
xchg
sub
add
cmps
cmp
sbb
jge
pop
mov
fisub
and
sub
loopne
sub
fld
arpl
jmp
add
pop
lea
ret
inc
jmp
popa
std
lea
pop
sbb
mov
push
pop
std
jne
mov
jge
xchg
mov
fbstp
ja
or
mov
es
adc
sbb
pop
arpl
call
fwait
mov
cmp
sbb
lea
inc
loope
sub
dec
cmp
or
xchg
fs
jne
xor
jae
int3
fist
mov
or
int
loopne
push
or
and
retf
xor
stc
push
mov
pop
push
sub
add
or
cmp
or
or
mov
or
inc
dec
ret
cmp
inc
cmp
mov
xor
mov
imul
jmp
addr16
int3
ins
pop
jne
(bad)
add
imul
pop
div
sbb
or
addr16
fucomp
mov
hlt
data16
sar
out
jbe
out
mov
inc
ja
imul
pop
loope
ficomp
jno
ds
ror
data16
and
test
and
mov
add
in
adc
jo
int
push
push
mov
hlt
ret
pop
and
jbe
loopne
and
xor
js
mov
retf
sbb
mov
xchg
mov
icebp
mov
and
out
aas
mov
push
sub
and
pop
fadd
call
in
jle
inc
mul
mov
ss
add
test
xchg
add
sbb
xor
push
add
add
or
ret
fisubr
addr16
stos
inc
js
ja
xlat
jb
mov
in
jl
fld1
jl
movs
loopne
xchg
pushf
or
in
lock
xor
ror
clc
jle
sub
test
aam
mov
and
pop
inc
or
add
push
enter
add
aad
and
int
adc
pushf
xchg
or
cmps
mov
cli
pop
daa
or
adc
cdq
test
loope
movs
ins
sar
add
jp
xchg
cld
paddsw
inc
cmp
dec
and
push
mov
xor
fprem
push
scas
xor
mov
xchg
add
clc
dec
mov
adc
fidivr
pop
push
cs
cmc
retf
cmp
fld
mov
mov
arpl
out
neg
hlt
add
ror
ja
add
lods
jne
mov
dec
call
jmp
jo
popa
add
sub
inc
nop
mov
lods
mov
mov
jo
pusha
jae
ins
fisubr
jecxz
pop
mov
pop
pushf
add
seto
js
in
mov
mov
retf
xchg
je
and
and
dec
jmp
push
jns
cmps
adc
lods
push
lock
sub
jcxz
pop
mov
or
imul
add
imul
dec
add
lods
lods
xor
cmp
cs
push
push
cmp
mov
or
outs
adc
bound
inc
mov
inc
rol
add
inc
xchg
and
add
fsubr
or
pushf
push
fimul
dec
adc
jl
sbb
fdiv
jne
and
jbe
inc
dec
in
push
push
adc
loop
xchg
inc
and
jo
and
cmp
jp
xchg
jp
push
mov
je
add
test
mov
xchg
pop
or
stos
pop
jae
(bad)
out
sub
mov
adc
inc
mov
je
ret
test
xlat
push
xchg
nop
hlt
add
loopne
rcr
nop
sahf
jp
enter
cwde
cmps
or
push
cmp
jge
and
movs
and
out
out
dec
mov
xchg
sbb
adc
xor
pop
cmp
or
sub
or
ficom
mov
or
pusha
xor
outs
je
dec
pop
dec
cmp
cmp
or
or
call
dec
mov
out
dec
test
inc
or
movs
sub
mov
popf
push
cmps
outs
ss
inc
xlat
and
mov
push
jb
or
mov
push
adc
sub
mov
xchg
sbb
sub
jo
sbb
xor
xchg
xchg
sub
jp
pop
mov
push
sub
push
and
inc
and
test
cmp
sub
rol
shr
ret
or
sbb
rol
or
jge
add
mov
cdq
mov
mov
ds
add
inc
ret
or
jl
cmp
mov
rcl
scas
add
mov
adc
sub
cmp
mov
les
inc
add
jo
dec
(bad)
push
daa
stc
loope
inc
popa
inc
cmps
pop
loopne
lds
push
imul
push
cmp
pop
sbb
mov
jg
and
or
inc
(bad)
mov
jnp
xlat
xor
jmp
cmp
jmp
xchg
push
mov
sub
retf
aaa
cmp
lock
pop
je
pop
repnz
es
ret
mov
jle
jmp
inc
push
pushf
test
into
ss
inc
or
test
mov
ins
xor
nop
adc
add
jne
je
ins
frstor
xchg
nop
nop
rol
jo
mov
call
clc
inc
adc
aas
sbb
or
pop
loop
adc
inc
or
mov
push
or
movs
xchg
add
adc
jae
add
push
jmp
outs
or
xchg
movs
dec
(bad)
mov
push
jecxz
cdq
xchg
not
je
adc
call
jo
icebp
jecxz
sbb
ja
mov
mov
push
in
movs
mov
mov
(bad)
and
enter
pusha
adc
aam
lods
jo
call
xchg
or
dec
mov
cmp
daa
add
add
pop
mov
int
and
fdiv
and
fnsave
sub
and
add
(bad)
jle
adc
sub
sub
dec
sub
and
hlt
mov
cs
test
test
ret
test
lods
dec
aad
in
and
push
sub
movs
sub
lock
addr16
xor
and
xor
push
cmps
fdivr
jmp
and
xor
xor
and
or
fiadd
sub
add
or
pop
lock
jae
jo
aaa
clc
lock
xor
int3
sub
loopne
int3
adc
sub
xor
clc
mov
test
sbb
xchg
fisub
inc
fdiv
push
ret
pop
dec
push
inc
cmp
test
push
push
pop
dec
jmp
mov
or
inc
jmp
or
clc
adc
jmp
push
or
pop
lods
add
push
push
or
inc
sbb
inc
ret
mov
pop
js
outs
jg
hlt
or
sbb
dec
enter
push
xchg
adc
jp
xchg
test
sar
int
test
adc
jmp
and
push
and
sub
gs
adc
cmp
push
pop
jmp
jnp
cmove
sbb
clc
push
inc
add
movs
xchg
enter
lock
mov
sbb
adc
pop
push
mov
iret
xlat
push
pop
cwde
movs
xchg
and
jae
add
push
dec
add
test
leave
dec
pop
scas
arpl
mov
mov
aam
cmp
pop
mov
add
jo
jo
sbb
lods
fadd
xor
test
inc
cld
jmp
cmp
lahf
gs
imul
dec
outs
gs
push
cmc
add
cmp
xor
adc
rol
adc
jns
and
movs
out
and
sbb
xchg
cmps
fisubr
out
jnp
shr
sub
mov
push
sub
inc
push
in
mov
stos
sub
inc
or
nop
or
add
mov
sbb
mov
ins
or
jge
shr
inc
cmp
push
mov
mov
or
test
mov
sub
or
push
jo
sbb
out
sbb
xchg
cmp
stos
jns
ins
sti
cmp
and
mov
dec
push
les
not
add
lods
cmp
mov
pop
out
bound
call
mov
cmc
inc
ins
fist
adc
dec
inc
or
xchg
(bad)
loopne
sub
sbb
push
stc
push
or
cmp
pop
xchg
movs
jo
push
push
mov
jns
jl
push
push
cmp
add
and
cmps
xor
sbb
xchg
mov
pop
repnz
adc
dec
xor
jbe
fcomp
add
push
jmp
ss
mov
dec
inc
mov
push
push
jmp
or
das
test
loopne
pop
jmp
lea
xor
sub
test
mov
bnd
scas
xchg
rol
inc
jo
jle
or
cmp
add
mov
sub
in
or
lahf
jl
cmc
aaa
sub
mov
ins
mov
test
(bad)
jnp
and
mov
out
jno
pushf
test
and
loop
ss
push
mov
mov
mov
scas
jecxz
sub
inc
loope
cwde
das
mov
aaa
xchg
int3
jae
adc
push
pop
inc
pushf
pop
dec
mov
mov
push
aas
mov
popa
es
leave
sub
les
in
xchg
jbe
and
mov
outs
pushf
sbb
cmc
mov
or
sbb
fs
pop
adc
dec
jp
adc
cmp
push
repz
out
test
(bad)
les
mov
call
adc
lds
sbb
out
pop
jne
jae
imul
or
hlt
and
and
jle
inc
dec
mov
sti
shl
in
jne
push
outs
imul
sbb
mov
loopne
cmc
add
cmc
lods
cmp
int3
sbb
xchg
dec
xchg
fidiv
inc
sar
or
or
pop
lds
shl
or
push
in
cwde
dec
add
js
jmp
adc
xchg
mov
jmp
cmp
test
xchg
cs
pop
dec
cmp
mov
sbb
cwde
sub
pop
or
dec
daa
inc
jo
and
mov
and
cld
pop
cmp
push
mov
fmul
je
mov
sbb
mov
fldenv
push
sub
rcr
shl
fisubr
push
add
push
pushf
out
jmp
mov
and
dec
leave
push
mov
add
sub
nop
mov
cmp
jae
test
lods
xor
or
add
cmp
adc
xchg
out
lock
push
sbb
call
push
(bad)
jb
cmp
and
jge
jno
mov
cmp
sar
cmp
adc
movs
lods
push
xchg
mov
mov
and
leave
add
or
cmp
mov
xchg
lock
scas
mov
(bad)
pusha
imul
(bad)
repnz
loop
shl
jmp
cmp
jb
jbe
(bad)
jmp
popf
mov
stos
jmp
adc
in
test
fdiv
jle
pop
cmp
pushf
push
sbb
dec
es
xor
imul
push
dec
mov
enter
int3
jl
push
cmps
xor
sti
dec
aad
jno
pop
mov
add
dec
inc
mov
sbb
test
rcl
dec
stos
mov
pop
inc
cdq
xchg
xchg
add
mov
call
add
jmp
dec
add
or
es
jl
call
shl
addr16
mov
mov
(bad)
pop
push
scas
dec
bound
mov
aaa
sbb
and
lock
xor
or
add
and
imul
sub
jmp
jne
push
sti
jl
in
(bad)
push
mov
aas
mov
push
push
push
ss
inc
or
push
sbb
loop
and
inc
add
popa
out
and
adc
jno
ja
lods
inc
movs
push
inc
xor
int
sbb
push
cmp
cvtps2pd
popa
mov
push
repnz
xor
movs
add
mov
xor
movs
adc
call
adc
mov
sbb
mov
pop
sbb
or
js
out
mov
xor
test
jo
mov
test
or
pop
js
icebp
mov
push
mov
push
je
push
push
sub
ror
adc
and
ret
pop
test
xor
or
add
repnz
int
int
js
xor
mov
ja
push
clc
add
nop
in
cdq
ret
cmp
or
sub
(bad)
loopne
xchg
outs
jnp
or
cmp
mov
or
cmp
xchg
pop
dec
shl
adc
les
mov
inc
or
daa
inc
cmp
nop
in
in
into
mov
nop
mov
xchg
popa
xor
cmps
xchg
(bad)
clc
or
rol
(bad)
imul
pushf
iret
loopne
loopne
(bad)
shl
jmp
dec
dec
into
xor
int
pop
jmp
test
add
pop
data16
sar
popa
in
sbb
imul
or
lock
push
or
mov
sub
dec
mov
mov
icebp
cs
ror
jmp
repnz
fdivr
nop
push
ins
repnz
enter
add
xor
push
rcl
xchg
and
adc
in
aad
and
sbb
inc
inc
(bad)
and
inc
pop
test
mov
inc
xchg
fsubr
imul
nop
sbb
xchg
jbe
dec
xchg
xor
sbb
dec
or
fcmovne
xlat
mov
movs
lods
sub
vmovd
jmp
adc
sub
ja
in
bnd
(bad)
jg
xor
and
and
pop
mov
cmps
add
mov
sub
or
out
pushw
pop
or
sub
dec
sbb
and
adc
scas
loop
(bad)
les
jno
rcr
or
dec
popa
push
xor
adc
sbb
cmp
mov
add
dec
outs
dec
rol
pusha
push
mov
lock
push
rol
xchg
xchg
(bad)
jne
ret
add
or
loopne
lahf
mov
push
xor
arpl
xor
fidiv
pop
sbb
xchg
or
jae
test
inc
pop
dec
xchg
(bad)
mov
(bad)
xchg
cmp
je
mov
icebp
jle
out
cmps
dec
jecxz
call
and
mov
push
lea
test
aam
or
call
(bad)
loope
xor
pop
(bad)
mov
sub
cmp
div
push
rcl
lahf
xor
push
push
mov
xor
adc
inc
xor
sbb
push
xchg
add
adc
fist
and
loope
(bad)
jne
sbb
ins
mov
sbb
push
mov
xor
movs
sub
sbb
inc
lock
cmps
outs
push
inc
nop
add
mov
retf
lods
cmp
enter
retf
push
mov
push
popa
dec
sbb
outs
xchg
xchg
push
mov
pop
in
fcmovu
mov
shl
sub
adc
adc
cmp
icebp
sub
lock
aam
dec
xchg
(bad)
loopne
ret
sbb
inc
pop
jecxz
rcl
adc
mov
lods
inc
mov
dec
call
add
call
push
push
popa
jle
mov
cwde
sbb
jp
or
imul
sbb
push
mov
xor
cmp
nop
mov
sub
sbb
pushw
xchg
xlat
or
inc
dec
mov
loop
sbb
and
and
das
mov
cmps
pop
jmp
rcl
int3
sti
add
pop
test
mov
cmp
adc
fcom
jle
and
cmps
fwait
or
sbb
(bad)
cmc
or
xor
fwait
and
push
cmps
mov
cmp
loopne
sbb
test
add
leave
loopne
fwait
push
xchg
out
call
movs
test
call
or
in
inc
jne
cmc
loopne
movs
sbb
or
or
xchg
add
leave
sbb
add
or
sub
mov
sbb
sbb
or
push
add
add
sbb
push
fcom
fs
or
push
mov
add
sbb
dec
nop
shl
add
mov
pop
sub
movs
ins
jae
and
mov
inc
cmp
cmp
arpl
pop
inc
test
pusha
push
das
idiv
xor
pushf
test
or
call
mov
add
cmp
imul
fcomp
add
pop
aad
in
(bad)
movs
dec
dec
sub
dec
inc
push
add
xchg
add
sbb
xchg
push
sub
adc
je
pop
mov
div
je
or
(bad)
or
and
cwde
push
jg
cli
pop
mov
jne
ja
push
aad
add
sbb
lods
sub
dec
cdq
js
jbe
sub
ret
js
test
imul
dec
mov
pusha
popf
adc
mov
add
sub
cmp
nop
outs
mov
popf
dec
les
sub
mov
add
repz
dec
sub
outs
adc
nop
dec
push
ret
loop
inc
fisubr
icebp
inc
cmps
pop
adc
cmp
mov
inc
mov
xchg
aam
and
mov
(bad)
mov
sub
out
push
cmp
sbb
add
mov
sub
add
in
outs
mov
ins
add
into
mov
pusha
inc
test
jmp
add
js
adc
sahf
je
inc
dec
push
cmp
sbb
fwait
(bad)
shl
dec
inc
push
out
mov
adc
pop
in
or
or
or
(bad)
pop
aad
dec
or
jl
cmp
and
xchg
pushf
pop
jmp
movs
xchg
les
dec
mov
push
ins
sub
push
scas
jae
push
fs
aad
mov
and
or
pusha
push
xor
cs
loopne
pop
cmp
pop
push
push
cmp
inc
or
ins
iret
stos
es
rcr
xlat
dec
push
cmps
add
xor
enter
jge
push
mov
or
stos
and
lds
or
pop
push
(bad)
cmp
xchg
pusha
call
aaa
and
push
add
sbb
in
test
pop
cmp
ficom
cmovno
rol
mov
adc
add
ja
imul
or
pop
mov
cli
add
in
sti
or
sub
pop
arpl
push
gs
mov
and
les
push
rcl
cmp
dec
adc
add
outs
add
xchg
test
push
push
aad
sub
jl
pop
(bad)
push
in
adc
mov
and
pushf
cmps
and
or
pusha
add
fsub
mov
mov
hlt
fnstsw
pushf
adc
or
and
xchg
xor
sbb
sbb
jae
test
rcl
or
movs
rcr
xchg
mov
push
mov
repnz
sbb
sub
mov
add
sbb
add
movs
inc
fld
dec
mov
jmp
xor
mov
test
out
inc
xor
pop
popf
mov
dec
jle
and
adc
pop
add
mov
pop
shl
mov
ins
int3
push
lods
xlat
mov
or
or
leave
mov
fs
icebp
movs
(bad)
inc
push
adc
js
int3
sub
je
out
aam
adc
pop
cmc
push
enter
jne
(bad)
xlat
jmp
bound
xor
fcom
xchg
sub
les
adc
and
xor
fadd
sbb
pop
or
jne
or
cld
inc
push
pop
mov
dec
jnp
adc
lods
les
pop
rcl
repnz
call
les
push
sbb
dec
mov
cmps
shr
jmp
push
aam
mov
sbb
and
push
gs
lock
mov
xchg
jae
mov
retw
pop
dec
mov
lods
arpl
lock
lea
je
add
lods
cmp
jge
out
test
xchg
xor
xor
popa
popf
add
mov
loopne
sub
cmp
iret
lahf
fdivr
mov
dec
data16
xchg
shr
pop
mov
scas
xchg
lods
pop
add
cmp
mov
sub
mov
mov
les
lock
inc
frstor
xchg
mov
data16
repz
adc
mov
loope
adc
cmp
pushf
push
(bad)
pop
adc
jbe
enter
inc
cmp
rol
push
js
or
mov
les
cmc
lea
and
mov
pop
ret
arpl
xchg
xchg
je
push
push
sbb
clc
xchg
sub
mov
mov
aam
push
(bad)
add
jnp
dec
jnp
jo
sbb
pushf
les
inc
dec
retf
xchg
and
push
sub
mov
test
and
mov
retf
xor
retf
push
imul
push
hlt
ret
jmp
jp
xor
dec
jmp
sub
sbb
add
adc
push
rcr
inc
xchg
pop
push
jne
push
sbb
mov
es
add
test
pusha
sub
adc
mov
xor
xchg
sbb
into
stos
mov
loope
pop
popa
pop
xor
(bad)
into
inc
add
push
rcr
jge
mov
repz
jmp
jmp
pushf
stc
jmp
push
or
es
sub
sbb
pop
std
jp
mov
je
push
jae
imul
adc
ds
and
pop
xor
aad
fadd
adc
inc
and
and
or
and
add
sbb
jle
jo
jo
xchg
sahf
or
xor
inc
add
aad
sbb
ja
fs
int
jle
cmp
push
cmp
in
push
and
es
sub
cmps
xor
cmp
jae
daa
lea
(bad)
or
cmp
jge
(bad)
mov
mov
or
mov
and
ds
outs
mov
pop
rol
sbb
jmp
add
or
mov
push
pop
in
sbb
push
jp
test
mov
mov
or
mov
mov
mov
mov
push
push
jb
mov
push
adc
mov
push
pop
adc
adc
rcl
ret
out
in
das
or
and
push
mov
imul
or
sub
inc
imul
pop
es
leave
cmp
ret
in
dec
inc
sub
add
xchg
inc
sub
outs
mov
or
push
sbb
xchg
aam
pop
adc
jle
ror
pop
test
test
xor
pushf
std
cmp
mov
or
inc
inc
stc
jecxz
cmps
imul
push
sub
and
fs
jg
adc
rol
xlat
loopne
sbb
daa
push
shl
adc
dec
icebp
adc
shl
or
sub
mov
daa
rol
jae
mov
add
sub
adc
mov
mov
pop
add
add
inc
mov
push
xlat
cmp
or
(bad)
div
sbb
pop
dec
adc
iret
mov
pusha
push
push
mov
add
enter
and
fcom
xchg
or
shr
add
rcr
shl
or
cwde
jne
adc
push
aaa
sub
stos
cwde
(bad)
pop
fistp
sub
add
movsx
xchg
inc
lods
sar
test
ret
pop
jge
xor
pop
and
push
mov
sub
inc
sbb
dec
cmp
pop
xchg
cs
dec
out
ins
push
enter
jmp
push
mov
fcomp
inc
or
jne
loop
fnstcw
iret
xor
pushf
ret
jo
je
sbb
rcl
xor
add
in
jge
mov
cmp
xor
jne
das
add
add
pop
inc
(bad)
(bad)
cmp
mov
or
fsub
sar
enter
jl
sti
dec
or
pop
xchg
adc
xchg
jno
add
or
in
loopne
nop
jge
imul
popf
not
dec
hlt
dec
push
add
xchg
push
pop
iret
add
(bad)
rcr
xchg
mov
adc
adc
call
mov
scas
(bad)
pop
jo
js
push
cmc
push
pop
call
repnz
jb
inc
inc
in
add
ficom
dec
std
add
popa
pop
sbb
out
daa
sub
lods
and
add
cmps
lahf
sub
push
cmps
push
add
imul
sti
xchg
pop
mov
cs
xor
and
pop
mov
push
enter
lea
bound
adc
jo
shl
xor
test
jns
fdiv
push
(bad)
mov
inc
inc
movs
lods
jo
and
xchg
ins
imul
out
push
aad
jmp
fst
sbb
pop
gs
sub
push
fidiv
xor
inc
daa
adc
outs
retf
fcom
push
push
les
push
add
das
jecxz
mov
mov
push
xor
adc
dec
mov
rcl
test
fwait
pop
xchg
or
adc
ret
and
(bad)
arpl
shr
inc
fsubr
push
add
and
pop
ss
cmp
ds
and
push
jmp
test
or
sbb
imul
adc
pusha
dec
push
fldpi
or
and
and
setb
mov
inc
mov
shr
push
xchg
ins
sub
inc
add
lock
cmp
imul
push
xor
inc
xor
fnstcw
aas
mov
pop
or
rcl
test
pusha
pop
adc
add
adc
lock
(bad)
stc
jg
xor
in
sub
test
sub
mov
mov
mov
out
and
inc
xchg
pop
ret
es
in
xor
mov
jmp
mov
call
ja
or
data16
iret
push
push
adc
sti
mov
mov
cmp
lock
scas
int3
cmp
sar
(bad)
sbb
xchg
jns
push
xchg
dec
dec
repz
lea
nop
and
inc
xor
and
ins
(bad)
pop
adc
jne
push
enter
adc
xor
adc
cmp
inc
xchg
xor
repnz
and
les
push
pop
push
mov
mov
fs
xchg
cs
daa
call
add
cmp
pop
nop
mov
xchg
out
in
sub
cmps
daa
sub
mov
add
mov
cdq
adc
adc
das
loopne
and
sbb
(bad)
mov
lods
iret
mov
mov
mov
(bad)
outs
adc
test
fidiv
inc
es
xor
(bad)
jecxz
sub
cmc
aam
dec
mov
cmp
adc
and
aas
popa
add
xchg
mov
(bad)
and
dec
je
movs
hlt
push
add
pop
xlat
sub
xor
jo
xchg
add
and
add
xor
add
lahf
movs
and
aad
sar
or
push
adc
and
inc
test
sbb
add
jl
adc
mov
ins
pushf
xchg
inc
inc
daa
fnstcw
pop
out
jb
add
(bad)
ins
out
or
xor
push
in
dec
add
sbb
mov
mov
sub
sahf
xchg
xchg
inc
adc
inc
mov
add
add
pop
(bad)
or
rol
pop
inc
sbb
adc
retf
sar
xchg
xchg
popa
ret
std
ror
xor
sbb
dec
xor
dec
inc
lahf
pusha
sbb
les
cld
cmps
sbb
push
int
mov
xor
ins
adc
ins
and
push
xor
inc
imul
adc
out
fidiv
sub
mov
jae
adc
sub
je
and
dec
fwait
sbb
or
popa
and
push
xchg
jmp
push
mov
add
outs
mov
icebp
jb
fwait
mov
adc
sbb
xchg
or
pop
xor
iret
adc
in
jno
cld
inc
jne
popf
stos
adc
mov
retf
pop
in
add
push
lahf
sub
jno
push
sub
test
and
aaa
aad
nop
mov
jb
add
pop
add
sbb
inc
ds
adc
inc
pop
pop
pop
fwait
shl
fcomp
add
dec
inc
mov
cs
sbb
sbb
dec
inc
popa
out
loopne
imul
jp
leave
(bad)
add
mov
jmp
popa
jmp
mov
sbb
adc
inc
arpl
lods
sub
xchg
pop
sub
adc
fisub
sbb
adc
or
pop
add
loop
call
or
test
mov
lock
jne
sub
loope
adc
adc
pop
in
sub
es
lahf
mov
and
push
popa
test
cmp
sbb
leave
int3
(bad)
loopne
xor
pushf
sahf
outs
cdq
cmp
sub
add
pop
push
push
mov
jl
movs
push
mov
call
push
movs
jge
inc
pushf
ins
mov
pop
push
sbb
mov
adc
and
and
adc
xor
fsub
popa
enter
pop
mov
push
and
pushf
add
mov
ins
or
nop
and
in
or
or
push
xchg
nop
inc
add
je
sbb
dec
js
or
push
or
xor
push
mov
repz
push
xchg
fnstcw
(bad)
sbb
or
push
cmp
leave
inc
fst
mov
pop
xchg
fst
adc
jae
cs
adc
or
mov
push
or
sbb
pop
inc
(bad)
fld
or
hlt
xchg
icebp
icebp
nop
clc
add
sub
in
sub
add
sbb
mov
cmp
push
mov
stos
popa
jno
(bad)
or
xchg
sub
and
dec
add
pushf
mov
xlat
push
adc
mov
sub
or
loop
fst
jno
inc
push
sysenter
mov
popf
sub
push
push
pop
sub
add
push
adc
sbb
cmp
test
ret
pop
xor
inc
rcl
inc
xor
or
jp
mov
inc
ss
xor
(bad)
and
dec
push
pop
enter
rol
cwde
pop
call
push
pop
or
pop
mov
or
add
add
(bad)
adc
les
ret
and
pop
xlat
(bad)
ss
mov
or
aad
push
push
ret
pushf
pop
mov
and
sub
ret
repz
add
bound
mov
imul
or
lock
test
jns
push
push
and
adc
inc
or
addr16
iret
sti
add
xor
add
and
das
jno
sbb
data16
sbb
cmp
push
pushf
or
in
push
mov
or
loop
inc
cdq
sub
test
inc
adc
inc
pop
mov
icebp
out
pusha
sub
js
cmps
or
stos
or
mov
retf
test
lea
xlat
dec
inc
pop
ror
in
mov
sub
jne
xchg
or
dec
cmps
arpl
js
jb
scas
push
cmp
jno
dec
les
popa
pop
add
adc
call
sub
sbb
inc
test
xlat
dec
test
sbb
xor
cmp
sub
call
js
add
adc
adc
or
cmp
xchg
mov
leave
fs
mov
jne
fimul
xor
and
or
in
out
mov
sbb
mov
add
pop
pushf
pop
or
push
lds
push
dec
push
addr16
mov
or
imul
push
iret
or
or
or
lea
out
test
add
hlt
fisttp
or
(bad)
jle
add
cwde
and
pop
dec
sbb
mov
or
sbb
loope
inc
jo
cdq
leave
gs
ret
mov
jo
stc
mov
daa
sbb
cmps
push
adc
imul
inc
enter
pop
xchg
fldcw
std
and
ret
pop
test
mov
movs
cmc
push
dec
push
jecxz
addr16
mov
push
iret
add
pushf
push
push
dec
xor
adc
ret
add
in
iret
mov
cmps
inc
pop
add
adc
xchg
scas
sbb
mov
(bad)
stos
jae
mov
fcomp
leave
add
mov
jb
(bad)
pop
aad
dec
add
xor
jmp
movs
ss
js
push
call
scas
mov
jnp
call
repnz
add
pusha
cmp
sbb
dec
fidiv
lock
addr16
and
sbb
mov
adc
in
jmp
xor
sub
add
add
inc
nop
in
jae
inc
cdq
jp
and
jp
pop
add
xchg
cwde
or
adc
xchg
inc
mov
mov
mov
adc
and
inc
sub
jne
inc
jo
sti
(bad)
(bad)
push
xchg
xchg
mov
xchg
adc
sbb
iret
rcl
ret
inc
sbb
movs
push
rcl
sbb
mov
cmp
aas
jb
mov
movs
dec
dec
inc
dec
add
xchg
push
fidivr
jo
cmp
xlat
lock
xchg
test
sbb
rol
pushf
in
adc
lea
int
inc
and
add
dec
sub
les
mov
and
retf
jecxz
cmp
ds
push
or
je
mov
dec
test
and
pop
or
and
jne
test
pop
pop
dec
mov
or
stos
dec
outs
xchg
pop
and
adc
sbb
inc
stos
jo
leave
lods
and
xchg
test
and
cmp
push
pop
mov
pop
pop
add
stos
mov
xchg
xor
add
add
push
xor
fidiv
and
scas
add
mov
dec
fdiv
test
les
mov
push
stos
mov
in
pop
inc
dec
xchg
mov
ret
les
stos
sbb
rol
dec
call
leave
shr
or
(bad)
leave
push
xor
or
add
imul
cmp
mov
scas
jae
test
push
push
pop
sbb
cmp
mov
into
xor
sub
push
inc
sbb
dec
rcl
add
scas
pop
sbb
mov
fadd
ret
mov
jae
je
loopne
mov
je
mov
mov
push
jae
xor
jo
pop
pop
or
fs
sbb
loop
rcr
inc
mov
and
mov
sbb
test
sbb
and
or
inc
mov
sbb
cmp
int
sub
nop
repnz
inc
inc
add
mov
int3
add
inc
jmp
inc
test
sar
aam
call
jge
les
rcl
cli
sub
enter
dec
jbe
inc
lock
xor
mov
or
add
xchg
inc
xchg
adc
in
pusha
jmp
push
mov
cmp
icebp
adc
pop
lahf
push
jno
aaa
int
sub
loop
push
sub
and
adc
mov
enter
push
scas
add
int3
sbb
inc
add
in
or
ins
and
xchg
pop
mov
xchg
std
out
call
es
test
and
test
or
inc
adc
rcr
fcom
mov
(bad)
leave
push
hlt
push
mov
xor
cmps
mov
mov
xchg
ret
pop
xor
add
jno
add
push
inc
(bad)
jge
add
dec
or
je
pop
adc
sbb
cwde
pop
mov
ret
and
sbb
mov
add
jbe
jno
call
clc
imul
sbb
or
adc
adc
mov
inc
ins
mov
aaa
aas
ins
div
add
add
ret
or
dec
jg
adc
pop
clc
loopne
rol
cmc
or
clc
xchg
les
pop
adc
clc
test
cmp
jg
pop
nop
loopne
les
pop
rol
test
call
and
jge
in
inc
push
cmp
add
(bad)
popa
mov
mov
in
(bad)
in
dec
cs
jno
add
adc
dec
or
add
inc
or
or
gs
sbb
jne
mov
or
(bad)
in
dec
sub
cmp
xor
and
dec
xchg
mov
jmp
ja
inc
aad
inc
mov
test
sbb
enter
or
int
or
dec
jbe
popa
push
jecxz
std
lock
sub
int
mov
xor
cwde
clc
mov
pop
xchg
cdq
push
adc
xor
inc
push
add
in
movs
jge
rol
je
xor
adc
movs
inc
or
daa
sbb
fistp
add
xor
in
pop
add
(bad)
pusha
sub
sub
push
sbb
and
inc
movs
push
loope
or
xchg
cmp
fsub
call
mov
jne
or
and
pop
and
or
add
or
setl
cmps
inc
add
dec
pop
in
mov
inc
pop
push
xchg
inc
ds
push
test
aaa
ins
mov
push
pop
dec
sbb
inc
jecxz
imul
push
or
lods
cmps
inc
inc
int
sub
ja
or
and
fiadd
or
std
jl
or
sbb
icebp
lea
(bad)
push
pop
pop
or
or
push
inc
sbb
test
sub
retf
scas
stos
push
test
jno
pop
pop
imul
xor
ins
loope
popa
sub
jnp
or
or
inc
xchg
or
sub
ror
pusha
and
mov
inc
(bad)
sub
rol
in
ret
mov
cmp
and
cmps
or
xchg
xor
mov
jecxz
shl
adc
inc
mov
nop
and
lahf
dec
jmp
mov
adc
dec
sub
push
rcr
or
adc
push
or
inc
fcom
push
sbb
inc
fwait
jae
sub
adc
and
inc
push
test
imul
mov
jmp
fwait
sbb
push
jge
push
and
push
cmp
mov
cmp
or
sub
repnz
push
mov
push
push
push
push
mov
sub
lods
pop
movs
mov
or
pop
lea
in
jne
xor
test
xchg
xor
pop
inc
add
sar
mov
xor
shr
inc
or
add
enter
arpl
or
je
push
pop
daa
pop
shl
pop
and
fs
sbb
lea
sbb
inc
push
fwait
(bad)
cmp
jne
and
xor
and
sar
xchg
int3
test
add
cwde
enter
inc
in
cs
dec
mov
fmul
clc
mov
mov
ror
mov
sub
cmp
xor
add
sbb
into
push
mov
sbb
sub
sahf
test
add
call
sub
cmp
add
xor
lahf
sahf
cmc
pop
jmp
pop
adc
add
jmp
ss
test
adc
push
mov
xlat
or
sbb
lods
xor
add
inc
lahf
inc
add
shl
sbb
and
push
pusha
sbb
stos
xchg
mov
mov
and
js
daa
fs
pop
push
sbb
and
lea
push
xor
push
sbb
add
push
or
inc
add
inc
inc
scas
test
in
dec
add
test
cmp
(bad)
xor
sbb
inc
adc
push
sub
clc
mov
mov
imul
outs
int3
ins
push
sbb
jmp
iret
inc
call
fstp
add
fs
add
imul
les
mov
test
idiv
scas
mov
cmp
mov
(bad)
mov
push
add
dec
jle
inc
test
aam
mov
call
lock
sbb
pop
sbb
clc
dec
dec
pushf
out
pop
xor
push
cmp
cmps
sub
xchg
sub
fldcw
add
pop
sbb
cdq
mov
scas
push
push
add
mov
(bad)
lds
test
hlt
add
(bad)
mov
rol
loopne
fsubr
inc
mov
inc
lock
adc
mov
dec
test
leave
sbb
jle
ja
mov
out
inc
dec
pushw
push
mov
sub
cli
loop
aam
and
jmp
fcom
or
mov
loopne
lds
sub
sbb
mov
call
and
pop
jmp
fstp
fcmovnu
rcl
ror
repnz
fmul
add
sub
inc
add
push
adc
(bad)
dec
popa
mov
push
in
pushf
dec
inc
push
inc
(bad)
int3
es
cmp
lock
push
repnz
in
push
xor
adc
push
xchg
mov
test
add
mov
pop
loopne
mov
adc
nop
cmps
dec
adc
leave
imul
int
gs
fsubr
mov
add
and
inc
add
jnp
call
push
and
lock
clc
and
add
jb
leave
inc
sub
int3
ins
pusha
xor
xor
pop
inc
int3
jl
mov
fistp
inc
sub
pop
cmp
fsubr
ret
or
cmps
push
sbb
rcl
and
jl
pop
add
add
pop
mov
cwde
push
out
jmp
mov
cmp
adc
and
movs
aad
mov
in
cdq
fucomi
movs
xor
fwait
(bad)
cmp
mov
retf
leave
dec
movs
push
movs
push
push
imul
repnz
mov
loopne
mov
fiadd
int3
and
or
mov
inc
dec
and
jmp
push
pushf
mov
mov
sbb
jecxz
pusha
inc
loopne
jmp
fs
dec
add
add
pushf
jg
call
in
add
inc
cs
lock
ins
popa
lock
push
retf
pop
inc
(bad)
mov
test
ins
push
sub
out
arpl
xchg
xchg
and
and
and
push
mov
cmps
rcl
mov
ins
xchg
ins
push
dec
xor
add
adc
int3
call
rcl
xchg
dec
mov
cwde
shl
mov
aaa
mov
xchg
cdq
or
push
and
outs
xchg
fld
int3
test
sub
add
cmps
and
in
xchg
xchg
outs
adc
in
and
jmp
imul
xchg
inc
dec
fisub
jo
or
neg
stc
cmp
inc
xor
add
fisttp
jmp
inc
(bad)
jno
add
rol
enter
call
mov
popf
mov
xor
sti
sahf
call
mov
xchg
aaa
cwde
mov
fwait
dec
and
dec
es
std
or
xor
mov
adc
jo
mov
mov
xchg
or
cwde
inc
arpl
adc
dec
ins
idiv
mov
in
ret
dec
jle
gs
aad
mov
pop
arpl
inc
fs
and
imul
pop
mov
js
jo
adc
inc
imul
inc
call
cmp
dec
push
adc
pop
imul
pop
js
fsubr
inc
and
push
pop
or
cli
mov
ja
ficom
mov
mov
sub
push
es
inc
push
push
stos
jecxz
sub
and
mov
xor
cmp
rol
jne
pop
rcl
fadd
mov
xor
out
popa
mov
mov
aam
push
aam
mov
or
sbb
sub
xor
add
std
retf
mov
shr
js
push
xor
cmp
fiadd
imul
xchg
pop
add
and
leave
popf
and
loopne
aas
out
dec
sub
pop
mov
nop
or
or
ror
add
imul
sbb
sbb
cmp
add
lock
test
push
sub
sub
mov
xor
pop
nop
fcomp
cmp
mov
jecxz
fild
or
mov
imul
lea
mov
fild
nop
mov
pop
jns
adc
dec
dec
adc
xchg
inc
sbb
or
enter
sbb
popa
mov
xor
cmc
or
adc
add
or
mov
jne
les
rcl
enter
add
aas
jl
rol
push
inc
mov
mov
xchg
js
mov
cmp
mov
lea
mov
adc
push
cmp
xor
call
popa
test
movs
loope
sahf
aam
cdq
xchg
(bad)
sahf
in
adc
adc
mov
mov
jl
jmp
or
fisttp
pop
inc
push
pusha
sbb
push
mov
ds
and
push
pmulhw
neg
push
movs
xchg
mov
or
call
hlt
xchg
add
xchg
js
mov
fist
xor
push
jo
mov
dec
mov
sbb
shr
fisttp
xchg
inc
ret
xor
inc
jne
pop
push
sbb
dec
mov
scas
lea
fiadd
jmp
sbb
lock
push
or
sbb
in
call
scas
lds
sbb
dec
add
sti
adc
dec
sbb
push
mov
dec
imul
cmp
mov
inc
sub
or
and
and
sub
lea
and
loop
hlt
movs
out
inc
call
inc
and
aas
push
dec
shr
mov
stos
mov
out
add
gs
cmp
adc
push
icebp
add
mov
mov
sub
adc
push
jecxz
out
pop
inc
imul
cs
out
adc
or
push
js
jl
add
add
stos
mov
push
ins
(bad)
or
xchg
pop
cs
sub
push
dec
add
dec
mov
add
aas
in
jle
xchg
ds
nop
shl
sub
cmc
retf
popf
in
data16
test
shr
test
cmp
loopne
shl
mov
movs
dec
fdivr
push
add
sub
mov
loop
iret
mov
std
xor
push
jecxz
mov
push
xor
and
push
mov
xchg
sbb
sbb
jecxz
pmulhuw
inc
sub
pop
and
inc
and
enter
movs
add
pop
sub
cmp
inc
push
movs
push
je
push
fdivr
add
lds
shl
xchg
out
pop
pop
adc
jae
add
mov
adc
dec
add
sbb
loope
cmp
outs
loop
mov
xchg
xchg
cmps
test
lahf
cmp
mov
push
movs
test
push
adc
xor
pop
jbe
cmp
pop
fadd
and
mov
popa
push
cmp
jne
sbb
sub
inc
push
mov
and
dec
pop
leave
inc
xor
or
xchg
and
fstp
mov
call
jo
xor
int3
push
mov
rcl
iret
dec
dec
lahf
dec
inc
adc
(bad)
mov
test
add
ret
por
jmp
call
inc
xor
jecxz
push
cdq
fbld
outs
mov
popf
pop
jmp
jecxz
mov
ret
mov
or
sub
and
enter
sub
mov
mov
pop
or
addr16
push
add
jns
mov
mov
sbb
mov
outs
jno
adc
xchg
ins
jl
in
jle
or
sub
cmp
mov
nop
mov
xchg
icebp
movs
(bad)
popf
add
or
cwde
fmul
imul
sub
shr
dec
scas
in
shr
and
dec
or
daa
push
mov
mov
xchg
je
push
loopne
push
pop
add
stos
jmp
mov
inc
xchg
mov
sti
loop
and
scas
ja
adc
cmps
lahf
cli
inc
inc
or
push
test
das
inc
jg
and
movs
jmp
xor
mov
movs
ss
mov
jmp
push
jae
cmc
sahf
dec
jge
ins
ins
inc
jo
data16
dec
out
mov
mov
lods
enter
push
add
sub
bound
push
sub
dec
mov
nop
jb
mov
xor
fs
jmp
jmp
cmp
and
pop
cwde
loopne
das
aaa
push
or
or
sub
push
lods
out
fs
and
jne
pop
popa
movs
xor
mov
mov
enter
mov
in
adc
and
int3
dec
into
mov
(bad)
js
sar
pop
or
add
sar
or
mov
jecxz
lea
clc
push
and
lahf
mov
sbb
dec
test
xchg
lock
ja
pop
dec
inc
rcl
cmps
scas
inc
sar
frstpm(287
jge
cwde
xor
add
mov
and
add
jne
jmp
cmc
push
pop
add
lea
fdivrp
add
mov
stc
xor
sbb
inc
pop
sbb
lock
pop
adc
xor
pop
or
lea
pop
adc
sbb
in
lods
gs
sbb
mov
sub
cmps
push
push
test
sub
push
adc
ins
mov
xor
loop
pop
sub
jb
pop
mov
push
and
cdq
push
mov
sbb
adc
pop
jo
out
fiadd
dec
inc
dec
ss
mov
push
(bad)
or
adc
adc
mov
sub
sub
jl
adc
push
and
jne
dec
cmps
jge
retf
sbb
mov
mov
pusha
add
mov
jecxz
cmp
leave
sbb
scas
dec
and
inc
pop
or
jmp
adc
xor
pusha
imul
mov
sbb
test
jl
aaa
add
in
iret
dec
(bad)
sbb
icebp
and
cwde
xlat
cmp
popf
xor
xchg
mov
repz
push
shl
outs
or
lock
mov
mov
fs
fcom
shl
add
loope
push
cmp
in
loope
imul
lock
xor
jmp
cwde
cmp
push
lods
sub
inc
aad
add
dec
jns
and
cmp
test
and
or
loope
arpl
fld
dec
ss
cld
test
fistp
(bad)
call
rol
retf
sahf
pusha
sbb
inc
jnp
ficom
cmp
dec
cmc
das
ins
push
pop
dec
cmp
xchg
movs
sub
dec
loope
popa
lods
sub
or
xchg
cmps
test
sbb
in
loope
xor
mov
test
jmp
cmp
mov
shl
mov
dec
cdq
ret
mov
and
jb
psllq
mov
rol
jp
test
mov
dec
in
loope
sbb
inc
shl
or
leave
ret
jmp
div
inc
call
adc
iret
test
push
jne
(bad)
and
push
mov
adc
pop
mov
aad
jo
aad
adc
cmp
aam
push
push
push
mov
add
add
mov
pop
jg
mov
clc
call
jbe
shl
je
inc
aad
enter
jne
lahf
lock
(bad)
push
je
ror
jmp
mov
pop
dec
shl
jl
push
sbb
les
movs
in
dec
jae
jbe
sub
inc
mov
mov
dec
movs
int3
sbb
ror
enter
iret
test
xchg
mov
mov
push
xchg
das
cmp
icebp
or
mov
in
rcl
pop
add
and
and
sbb
sar
jae
repz
pop
movq
mov
sub
mov
mov
test
inc
cs
test
mov
leave
repz
xor
fld
cwde
daa
pop
das
push
clc
inc
repz
ins
js
push
into
xor
arpl
pop
pop
sar
cli
scas
adc
ret
dec
xchg
push
lock
lea
cmp
mov
sbb
ja
pusha
and
fnstcw
clc
mov
xchg
retf
mov
int
test
mov
mov
je
xor
fiadd
int
(bad)
and
ror
dec
test
stc
adc
dec
sub
push
xchg
add
mov
icebp
pop
jl
out
movs
cdq
sbb
inc
inc
add
outs
adc
adc
mov
jno
retf
lods
adc
mov
imul
jb
mov
mov
test
add
retf
in
mov
mov
mov
shl
pop
push
rol
add
imul
aam
add
and
data16
popf
and
je
cmp
mov
lock
call
push
mov
adc
xchg
sar
setge
mov
xchg
xchg
push
xchg
sbb
jmp
ret
jmp
xchg
adc
mov
shr
adc
shr
or
mov
and
sbb
je
xor
adc
push
dec
push
mov
push
push
jbe
pop
mov
test
mov
sbb
call
xchg
je
add
repz
add
push
cmp
cmp
push
mov
in
and
fsub
and
leave
inc
pop
push
ss
xchg
mov
xor
pop
rol
add
lock
inc
imul
loop
mov
pop
or
pop
inc
pop
jle
(bad)
enter
loope
sbb
inc
not
add
add
ins
cmp
mov
add
mov
lods
test
and
cmp
jl
test
popa
push
ss
mov
mov
neg
mov
loop
xchg
and
xchg
adc
fist
test
adc
mov
out
jmp
add
psrlw
jmp
cdq
into
pavgb
mov
aam
fs
int3
add
sbb
int
jnp
inc
pop
loope
rol
sbb
rol
inc
dec
xchg
loope
test
lahf
mov
enter
into
adc
add
adc
int
and
sbb
xor
call
retf
pusha
test
pushf
sbb
adc
adc
push
sub
and
push
das
push
movs
jnp
mov
mov
cmc
mov
adc
or
sbb
jb
inc
jmp
out
push
ror
jo
sub
xor
or
adc
ret
cmps
jmp
jbe
adc
movs
push
adc
inc
les
xchg
shl
fstp
rcl
push
lea
cmp
cmp
je
cli
lds
jne
mov
aam
or
xchg
sbb
xlat
pushf
rcr
and
(bad)
cmp
pop
xor
fs
(bad)
shl
pop
cdq
jae
ret
push
cmp
jo
aam
lahf
jge
mov
and
(bad)
mov
fs
sub
or
and
inc
cmc
push
add
out
pop
mov
jae
inc
push
scas
out
mov
inc
mov
stos
fcomp
(bad)
mov
ja
pusha
lods
jmp
jge
adc
jmp
outs
or
ficomp
ins
xchg
loope
adc
add
mov
ins
pop
cmp
test
adc
mov
pop
or
pop
adc
mov
mul
jl
retf
sbb
sbb
jg
adc
fcom
addr16
sub
pusha
aaa
cmp
add
pop
cmc
mov
push
sub
imul
mov
mov
test
mov
aam
enter
or
fwait
or
in
movs
or
dec
movs
pop
or
arpl
sub
push
pop
xchg
pop
fild
je
enter
or
jle
sbb
push
sar
or
adc
mov
in
inc
add
(bad)
mov
add
xor
sbb
mov
ins
xor
pop
push
cmc
pop
or
and
fsubr
inc
ficomp
outs
inc
push
pusha
rcl
xor
pop
xchg
nop
cdq
and
outs
aam
fsub
adc
addr16
push
fidivr
sbb
add
sub
leave
and
dec
iret
jmp
out
out
ficomp
(bad)
cli
call
dec
cmp
adc
mov
xchg
jecxz
mov
in
mov
cmp
push
pusha
push
dec
movs
mov
adc
cmp
movs
ja
mov
es
mov
mov
push
ds
dec
imul
inc
js
sub
pusha
ret
(bad)
imul
ficom
push
adc
add
dec
loopne
and
jp
out
lea
popa
mov
loop
xchg
adc
inc
dec
leave
push
sbb
jo
mov
push
mov
push
cmp
and
repnz
xor
pop
inc
pop
nop
fdiv
sub
loopne
lods
jno
adc
movs
shr
xchg
stc
push
test
adc
nop
xor
data16
push
es
aad
pop
push
or
jg
jns
and
dec
shl
sahf
or
or
loop
imul
push
pop
sub
sub
pop
and
push
pop
movs
xor
sub
(bad)
clc
sar
pop
nop
add
cmc
or
cdq
call
xchg
xchg
mov
adc
lods
pop
mov
pop
cmps
je
push
push
pop
push
aam
pop
(bad)
ror
adc
ror
xor
scas
xchg
les
dec
mov
cs
rcr
lock
add
add
jne
fisttp
add
adc
wrmsr
test
nop
add
mov
scas
pop
lds
pop
fld
ss
pusha
mov
jmp
cwde
je
in
xor
test
push
inc
add
movs
xchg
jo
cli
dec
pop
icebp
and
call
mov
(bad)
inc
pop
test
daa
iret
add
lock
xor
and
inc
jno
add
cwde
mov
das
cmp
cwde
es
jp
pop
sub
mov
rcl
cmps
and
xchg
mov
xchg
add
add
fmul
test
fwait
adc
xor
(bad)
shr
jno
test
test
test
inc
mov
test
push
repz
sbb
xor
push
add
icebp
push
hlt
es
mov
outs
push
cmp
pop
cmc
inc
mov
sub
push
mov
jb
sub
mov
xchg
pop
pop
fadd
rol
adc
xor
movs
pop
or
mov
push
jle
dec
push
in
mov
jb
jecxz
adc
push
rcl
sar
mov
xor
or
push
(bad)
leave
cmps
push
xchg
je
adc
(bad)
push
xchg
(bad)
jmp
push
sub
jge
and
sub
pop
add
cmp
add
sahf
ins
lock
xor
jb
jmp
xchg
xor
cdq
cmp
cmp
push
xchg
sub
dec
cmps
movs
dec
adc
cmp
loopne
in
mov
xor
fild
jmp
inc
or
dec
adc
xor
jno
dec
fidiv
sbb
movs
xor
je
push
aaa
clc
es
int
call
pop
or
and
cli
push
dec
and
rcl
pusha
xchg
or
add
mov
imul
jge
inc
in
add
fwait
loopne
and
adc
call
sub
pop
xor
test
push
add
daa
xor
lods
shl
movs
ret
pusha
jmp
mov
mov
out
push
lock
icebp
es
cmp
scas
and
retf
nop
mov
add
nop
sahf
mov
and
jmp
icebp
rcr
inc
cmp
ins
stos
sbb
inc
lahf
rcl
add
jno
iret
je
mov
jb
mov
call
aam
and
adc
jle
xchg
jmp
mov
shl
push
ss
adc
mov
stos
dec
sub
das
inc
xor
dec
cmp
and
push
mov
dec
cmp
and
or
rol
cmp
stc
adc
dec
xchg
lahf
add
lahf
mov
retf
mov
test
mov
lods
mov
sub
lahf
inc
or
pop
and
add
stos
inc
bound
stos
pop
pop
cs
add
push
mov
hlt
dec
push
sub
xor
push
lock
cmc
cmps
mov
pop
pop
rol
xor
out
sbb
dec
stc
sbb
jno
ret
sbb
pop
xchg
pop
jg
rcl
daa
xchg
inc
add
xchg
pop
mov
or
jbe
add
and
inc
movs
ret
pop
fsub
xor
push
push
jmp
mov
mov
push
jg
mov
xor
and
test
xor
jmp
xchg
pop
push
adc
mov
inc
ror
pop
inc
sbb
ins
adc
cmp
out
sub
jb
mov
add
call
cmp
xchg
lds
xchg
inc
popw
add
pop
test
add
cmp
inc
add
mov
mov
mov
mov
jg
imul
sbb
xchg
icebp
jb
sub
jnp
push
movs
ret
xchg
add
xchg
jge
push
loope
popf
loop
std
dec
test
or
ret
bnd
aas
fld
lods
adc
add
(bad)
or
js
cmp
das
or
ins
dec
inc
mov
gs
inc
jmp
jae
add
dec
push
or
sub
push
push
add
or
xlat
mov
jl
cmps
mov
push
icebp
pop
fisttp
jb
adc
push
les
shr
adc
mov
sub
pop
ins
jge
and
cmps
sbb
adc
adc
fcmovnb
pop
fstp
nop
add
and
mov
pusha
cdq
or
xor
into
sbb
mov
shl
fmul
push
test
lods
loopne
ror
les
sbb
mov
dec
push
xor
adc
sbb
inc
xchg
and
cmp
pusha
dec
inc
sbb
pop
mov
xor
ret
or
mov
das
add
pop
outs
out
lock
mov
mov
jne
jge
loope
cli
push
jae
call
cmp
es
xor
xor
pop
xor
xchg
and
pop
imul
rcl
xchg
shr
fwait
jge
fidivr
xchg
aas
cmp
cmp
cmp
add
mov
cmp
pop
push
adc
ficomp
dec
or
or
cmp
das
mov
xor
sbb
cmp
adc
add
mov
inc
pusha
pusha
add
lds
pushf
sub
pop
add
repz
cwde
test
dec
shr
ror
adc
test
xor
rcl
push
in
xchg
cwde
or
mov
pop
mov
rcr
sar
push
test
ret
mov
xor
mov
jae
xchg
fld1
add
or
mov
fdivr
adc
mov
pop
add
hlt
mov
scas
push
sbb
ficom
xor
mov
jb
fs
adc
aaa
test
loopne
shl
sbb
push
xor
fcom
push
push
mov
jle
push
dec
add
and
js
pop
push
jl
in
mov
out
jecxz
push
sbb
and
popf
or
mov
or
(bad)
gs
loope
mov
rcr
push
sbb
sub
test
push
mul
dec
test
adc
ins
jge
je
in
inc
push
(bad)
jnp
pop
cmp
dec
cli
ins
scas
nop
xor
loopne
cli
xchg
jmp
or
or
push
sbb
adc
push
push
int3
arpl
shl
int3
(bad)
daa
mov
xchg
fild
stc
jbe
pop
xor
movs
inc
pushf
imul
push
pushf
call
js
jg
pop
int3
js
pop
ja
jmp
mov
add
push
xor
pusha
dec
fs
pop
dec
ror
cmp
movs
and
and
test
add
push
adc
sub
fsubr
out
repz
jge
and
movs
jae
sbb
xor
cmp
add
pop
push
gs
fwait
mov
fadd
(bad)
adc
sub
mov
ret
mov
aad
inc
push
cmp
xor
out
je
cmc
sub
and
add
dec
mov
test
pop
stc
jl
mov
shr
and
adc
sub
sbb
add
in
pop
add
lock
and
mov
pop
xor
and
pop
cmps
and
movs
or
add
scas
test
sbb
sbb
mov
(bad)
pop
loope
mov
ins
inc
sub
or
or
cs
sub
sub
adc
mov
lock
enter
pusha
xor
mov
jb
jmp
pop
add
mov
push
push
mov
ret
fiadd
sbb
mov
shl
pop
pop
inc
jmp
and
shl
jmp
push
cmp
xor
or
adc
cs
in
cmp
scas
nop
shr
or
dec
sub
dec
pop
pop
or
in
xchg
mov
inc
push
dec
cmp
nop
add
ja
pusha
in
(bad)
and
add
add
rol
add
pop
inc
and
movs
and
jmp
shl
and
imul
dec
sbb
sti
xchg
add
xchg
and
xchg
dec
pop
iret
jle
dec
mov
add
mov
dec
je
daa
movs
pop
mov
cmp
je
(bad)
xor
add
aam
inc
pusha
push
repz
test
push
lods
shl
(bad)
sbb
ror
(bad)
xchg
add
in
and
sub
shl
iret
mov
pop
mov
(bad)
ret
hlt
xor
mov
dec
jmp
daa
add
je
aas
repnz
lea
daa
ss
or
mov
loop
(bad)
xor
add
cmps
fnstcw
dec
inc
pop
inc
mov
iret
mov
xchg
mov
imul
add
jp
push
jb
and
movs
cdq
or
inc
loopne
pusha
das
or
ror
inc
xor
lock
push
push
inc
jne
pop
pop
cmp
sbb
leave
es
and
add
pusha
sbb
dec
popf
push
jne
push
push
shr
mov
fmul
inc
mov
inc
out
or
or
mov
push
dec
or
and
adc
adc
mov
jne
dec
push
or
mov
adc
sub
hlt
dec
or
rol
inc
pop
movs
lea
jle
cmp
push
adc
movs
jne
or
pusha
and
mov
sub
dec
push
add
add
cs
mov
test
add
hlt
pop
mov
sub
and
imul
or
cmp
retf
cwde
call
aam
dec
movs
xchg
test
xlat
push
fmul
call
dec
sbb
ds
shl
call
inc
or
mov
(bad)
and
mov
ss
and
js
aam
test
leave
enter
cmp
int
and
stos
mov
ror
push
int3
int3
mov
cmp
xor
mov
mov
adc
fcmovnb
arpl
and
dec
faddp
je
sbb
and
cmp
or
sbb
enter
xor
in
inc
jo
add
mov
add
imul
rcr
or
cmp
or
pop
ins
inc
push
inc
xor
mov
cdq
(bad)
call
hlt
inc
jmp
push
rol
jb
test
sbb
cmp
add
out
inc
inc
stos
imul
(bad)
sbb
mov
cld
jecxz
mov
inc
sbb
inc
and
clc
or
cwde
xor
pushf
xchg
and
adc
std
bsr
fiadd
push
mov
mov
sub
lds
aas
adc
sub
mov
fst
ds
mov
cmp
jne
or
outs
add
inc
loopne
jmp
or
jne
push
loopne
psrad
adc
or
jle
ins
(bad)
mov
inc
mov
inc
cmps
or
pushf
mov
pop
shl
jg
fstp
mov
pusha
(bad)
sahf
and
cs
dec
fidiv
cs
xor
into
loope
inc
cwde
adc
mov
loop
mov
clc
sub
pushf
xchg
movs
sub
add
jne
(bad)
cld
xor
sub
sbb
dec
push
inc
pop
push
shl
cs
or
in
shl
jmp
sbb
lods
test
mov
ror
inc
lock
ret
xchg
or
push
pop
sbb
sbb
pop
sbb
sbb
movs
cmp
push
push
pusha
les
adc
and
or
xchg
cdq
and
add
mov
cmp
push
mov
inc
cmp
add
cmp
adc
enter
lock
lods
add
xchg
dec
mov
adc
or
mov
and
jae
scas
into
push
cmc
push
inc
shr
mov
sahf
inc
ret
and
pop
add
and
push
mov
cmp
pop
cmp
and
clc
mov
add
inc
sar
pop
ins
sbb
cmps
call
gs
push
xchg
and
sub
dec
fidivr
add
jecxz
out
sub
mov
adc
popa
and
mov
test
dec
xor
pop
nop
sbb
fs
aam
mov
fadd
cmc
scas
mov
pop
xchg
jno
fisttp
loop
adc
sub
sbb
paddusb
lock
shr
jecxz
cmp
daa
mov
mov
push
cmp
sub
test
mov
ret
cmp
cmp
mov
aam
add
add
add
add
or
xor
xchg
lods
or
scas
or
in
or
fld1
ret
cs
adc
mov
add
push
jmp
lods
jae
add
jl
cli
xor
in
xor
xor
jl
test
add
adc
lock
add
xchg
movs
dec
xchg
mov
popa
add
add
xchg
push
call
mov
pusha
jmp
push
pop
aam
or
repnz
or
sub
push
xchg
mov
adc
xchg
cmps
mov
adc
jl
jle
and
gs
inc
add
fist
push
rcl
add
(bad)
rcl
inc
mov
xor
jbe
je
sub
dec
push
(bad)
dec
inc
inc
inc
xchg
or
lods
and
add
or
add
jbe
push
mov
mov
lea
push
cmp
ss
in
(bad)
ins
push
mov
push
or
push
push
aas
mov
xchg
sub
inc
(bad)
or
push
xchg
push
test
and
push
push
push
fstp
xor
adc
push
inc
or
sbb
sbb
mov
cdq
call
jmp
pop
add
jno
es
imul
or
cmp
imul
lods
dec
mov
push
mov
loope
adc
clc
jle
aaa
sub
mov
xchg
push
lock
pop
pop
sub
add
jmp
inc
or
adc
dec
push
jmp
sbb
movs
pop
add
pop
push
push
mov
cdq
jb
adc
pmulhuw
cmp
mov
and
mov
mov
inc
inc
les
in
push
ror
cmps
call
movs
rol
outs
or
inc
push
sbb
adc
inc
and
xchg
and
test
mov
and
inc
mov
cwde
adc
dec
leave
inc
lods
pop
jecxz
adc
and
fs
add
xor
sub
adc
mov
inc
pop
add
or
in
cmps
sub
cdq
mov
push
mov
mov
test
test
mov
inc
mov
jo
fdiv
inc
jmp
imul
imul
push
sbb
push
dec
call
jmp
dec
mov
fcomp
fild
int3
mov
xchg
leave
inc
mov
mov
shr
test
bound
sub
pop
mov
push
jmp
and
(bad)
(bad)
xchg
nop
mov
push
popf
imul
or
jmp
lea
adc
enter
aaa
sub
and
les
xchg
fistp
or
inc
xchg
sbb
pop
xor
inc
sub
cmps
sahf
or
test
in
sahf
ss
jno
adc
adc
out
in
or
fiadd
cmp
dec
inc
xor
imul
pop
je
adc
(bad)
mov
mov
add
jno
or
sbb
shr
lock
xchg
push
add
push
push
mov
ss
or
into
push
inc
cmps
ins
sub
inc
sub
cmp
daa
pop
add
bound
mov
pusha
jmp
out
dec
or
pop
loope
mov
gs
add
retf
les
pop
push
loop
push
sub
add
sbb
adc
pop
jge
pusha
syscall
jmp
push
sub
ror
sahf
mov
dec
retf
mov
arpl
push
jl
aad
adc
lock
outs
adc
mov
ss
cmp
push
enter
popa
sbb
rcr
lods
jb
retf
retf
sub
push
or
cmp
mov
inc
push
pop
adc
dec
adc
pop
inc
push
sbb
cdq
fs
adc
(bad)
bound
icebp
push
xor
gs
pop
repz
jle
fnstenv
in
push
push
add
loope
push
sub
jno
dec
rol
jno
inc
push
movs
or
push
pusha
sti
sub
ins
pop
mov
pop
pop
push
push
inc
mov
mov
ds
xchg
push
mov
mov
sub
pop
cmp
push
movs
push
sub
mov
in
push
cmp
stos
inc
push
mov
mov
or
or
add
hlt
xchg
mov
xor
pop
test
add
pop
in
or
sbb
mov
mov
dec
pop
adc
add
shl
ror
mov
sbb
gs
lds
icebp
pop
sahf
inc
imul
mov
cwde
inc
imul
mov
push
aas
(bad)
movs
add
adc
shufps
add
shl
mov
fstp
push
pusha
pop
fs
jbe
sub
mov
test
icebp
push
mov
mov
cs
jmp
into
jne
in
cmp
and
push
ss
mov
add
xor
and
cmc
sub
xor
leave
cmps
es
and
sub
or
movs
movs
lahf
and
and
bound
mov
test
jbe
scas
and
or
psubsb
loop
retf
mov
dec
cli
cmp
and
pop
mov
shl
or
jmp
pushf
call
stos
xchg
std
sbb
pusha
in
mov
les
mov
in
mov
das
lock
enter
enter
aam
or
loopne
rcl
push
mov
cs
pop
mov
retf
in
test
lods
aam
jb
pop
mov
mov
call
mov
loopne
xchg
jne
mov
sub
pop
xchg
sbb
mov
inc
call
push
or
or
sub
push
and
sbb
icebp
add
xor
sub
pop
sahf
adc
adc
js
lds
call
enter
xor
inc
add
jb
ins
xlat
ret
or
or
(bad)
xor
mov
scas
fld
mov
or
mov
pop
daa
mov
adc
(bad)
in
mov
loope
cmp
and
pusha
in
sar
push
xlat
setg
aaa
je
enter
je
add
push
push
js
jl
or
cmp
jo
xchg
add
push
and
retf
dec
fistp
cld
dec
test
fisub
adc
daa
mov
add
sub
mov
popf
xor
jo
ss
adc
fdivr
push
inc
arpl
std
in
inc
lods
cdq
mov
push
lock
sub
fwait
sbb
das
cld
inc
push
mov
lea
or
aaa
cwde
ret
add
pop
or
popa
repnz
xor
or
mov
mov
or
shr
mov
xor
adc
pop
add
mov
(bad)
div
lods
lods
ss
add
and
xor
test
mov
or
inc
stos
mov
lods
adc
test
jp
sbb
adc
xor
adc
cmp
push
sbb
adc
adc
and
adc
adc
push
imul
push
xchg
push
and
mov
sbb
dec
cmc
sub
mov
inc
je
push
aam
imul
xor
rcr
out
adc
cmp
popf
add
out
dec
arpl
mov
jne
mov
adc
or
and
shl
push
mov
inc
push
cmc
pop
push
xor
test
out
jns
int3
sub
test
sar
pop
xchg
pop
sub
mov
xor
adc
adc
mov
push
cmps
dec
mov
jne
outs
mov
pop
pop
lock
dec
lea
jl
mov
cmp
jno
inc
dec
and
add
movs
jno
mov
test
adc
fisubr
mov
rol
clc
stos
mov
or
or
loopne
or
xor
les
lock
pusha
adc
push
adc
and
sbb
(bad)
mov
sbb
lock
add
push
rcl
fwait
jne
dec
and
jns
popf
ins
pop
push
push
aam
fsub
dec
mov
xor
mov
push
inc
out
jne
test
dec
sbb
mov
rol
pop
pop
clc
xchg
jmp
jmp
or
push
inc
push
iret
sbb
add
pop
push
cdq
hlt
push
push
adc
add
xchg
dec
test
stos
mov
or
pushf
mov
mov
aas
inc
sbb
js
sub
nop
add
push
and
dec
xor
fadd
(bad)
xchg
xor
or
sub
cmp
xor
dec
shl
test
scas
iret
sub
sub
push
push
push
add
or
aas
xchg
loopne
pop
push
mov
jns
jb
push
test
repz
mov
or
mov
imul
lea
pop
sbb
xchg
loop
pop
movs
or
cmp
or
jmp
loop
mov
pop
jmp
jl
mov
aas
aaa
and
jmp
stos
fdivr
mov
shl
add
and
imul
sbb
mov
retf
rcl
dec
pop
xor
inc
xlat
push
push
jmp
mov
(bad)
(bad)
jmp
xchg
fcom
push
and
and
retf
inc
pop
dec
es
adc
fidivr
add
and
aas
fimul
sub
ins
xor
adc
loope
and
dec
movlps
and
enter
jmp
adc
sbb
pop
inc
test
push
cmp
and
fdiv
stos
in
test
pop
scas
jmp
and
jmp
sbb
mul
sub
or
pop
cmp
sbb
jno
xchg
push
add
or
jmp
or
add
int3
adc
movs
inc
sbb
bound
aaa
cmp
mov
in
popa
jnp
addr16
lahf
push
fwait
cld
xchg
in
jmp
aas
xchg
jmp
dec
cmp
or
cmps
or
push
bswap
popa
stc
sbb
inc
pusha
call
xchg
xor
sbb
or
cld
mov
cmp
inc
ds
fsubr
fstp
rcr
or
and
xor
ret
fcom
add
xchg
or
or
ret
outs
not
mov
lahf
popf
push
pusha
adc
mov
imul
inc
mov
cmps
popf
jmp
mov
(bad)
fidiv
lock
xor
in
mov
jmp
das
fcomp
cld
daa
jmp
sbb
test
hlt
adc
mov
test
xchg
int
outs
fwait
sbb
add
pop
sub
sti
fst
inc
fs
loopne
fcom
adc
pop
and
inc
sub
jmp
or
test
sbb
add
dec
pushf
pushf
add
(bad)
or
(bad)
cld
ds
xchg
call
(bad)
mov
leave
add
js
or
and
imul
push
or
loope
push
mov
cli
add
rol
push
pop
and
sbb
rcl
adc
adc
shr
jmp
je
dec
je
sub
push
mov
mov
and
add
push
std
sub
inc
jmp
or
mov
push
pushf
aaa
nop
pushf
inc
pop
(bad)
ins
jecxz
adc
xor
loop
test
pusha
mov
sbb
(bad)
and
mov
inc
push
inc
pusha
in
xor
mov
in
xor
lods
(bad)
cli
inc
mov
loopne
(bad)
and
arpl
xchg
xor
add
push
xor
jno
(bad)
push
or
loopne
add
dec
jmp
cmp
loop
mov
add
ror
sbb
sbb
and
int
nop
test
cmp
mov
or
sub
or
and
pop
dec
js
mov
ins
pop
push
rol
push
pop
pop
pop
loop
fist
das
or
mov
push
and
or
dec
sbb
or
pusha
sbb
movs
mov
xor
cmp
inc
ret
adc
cmp
push
loopne
inc
mov
inc
dec
mov
xchg
jne
and
xchg
test
add
jmp
cmp
mov
movs
ret
mov
push
and
outs
adc
and
or
imul
mov
mov
add
(bad)
cmp
mov
mov
mov
pop
dec
dec
fcomp
nop
loop
pop
add
inc
jecxz
adc
inc
mov
xor
lea
push
dec
punpcklwd
cmp
cmps
push
or
cmp
lds
adc
and
out
xchg
xor
repnz
rol
test
imul
push
lahf
mov
in
fmul
or
push
ds
jns
xchg
add
push
xorps
(bad)
dec
add
(bad)
push
sub
or
ret
sbb
dec
add
ret
popf
xlat
lahf
inc
ror
popf
movs
dec
pushf
popf
mov
adc
inc
inc
add
scas
ret
aam
fld
pusha
add
mov
fidivr
jl
ins
pusha
push
loope
xor
fnstcw
sbb
out
sti
push
and
or
dec
add
or
stos
jmp
(bad)
cwde
sub
or
and
ret
cld
add
loope
ret
mul
lods
(bad)
adc
rcl
mov
ins
loopne
sub
repnz
push
push
xor
popa
test
xchg
ror
xor
mov
add
push
sbb
sub
push
xchg
sbb
push
dec
xchg
loope
jb
rol
fsub
push
rcl
sub
fsubr
xchg
nop
dec
nop
pop
add
jb
jmp
or
add
xchg
push
mov
scas
cwde
push
or
popa
push
sub
adc
cwde
xor
sbb
inc
and
lods
ret
push
les
xchg
sub
sti
pop
mov
pop
mov
test
inc
xor
shr
mov
xchg
lea
push
movs
mov
cmp
or
scas
pop
sub
out
add
cmp
lods
nop
and
xchg
push
pop
sbb
adc
cli
xchg
sub
lods
les
jp
leave
cmp
sub
loopne
scas
aad
mov
and
cwde
inc
push
push
stos
pop
sub
mov
mov
sbb
jg
ja
sahf
mov
and
pop
cmp
add
imul
push
rcl
mov
movs
and
inc
mov
pop
shr
test
mov
jmp
mov
mov
cmp
mov
fcomp
dec
loopne
and
call
sbb
lods
adc
adc
push
lea
push
adc
pop
or
icebp
and
add
push
mov
xor
xchg
shr
add
xor
fistp
push
ret
mov
cmp
xor
rol
or
mov
or
dec
jle
add
int
mov
mov
pusha
in
xor
in
cs
push
out
sub
sbb
hlt
aaa
or
mov
jmp
jo
and
ror
(bad)
fisttp
xchg
nop
lock
or
sbb
mov
inc
sub
cmp
clc
cwde
push
je
(bad)
test
ins
es
movs
push
jmp
mov
mov
lock
xchg
dec
xor
rcr
add
sbb
clc
jge
mov
add
pop
add
mov
ret
and
cli
add
push
les
pop
fld
xchg
jbe
mov
xor
sbb
mov
jmp
popa
cdq
push
xor
push
jle
push
cmp
pop
or
xchg
popa
mov
sub
stc
aad
ret
pop
xor
push
dec
jb
outs
or
lahf
sub
add
jae
sbb
mov
mov
push
imul
mov
cmps
fidiv
aad
adc
add
inc
sub
inc
or
pop
retf
ins
test
dec
nop
jno
fmul
push
push
setg
ret
dec
push
lahf
movs
adc
lods
movs
mov
add
dec
scas
leave
adc
cmp
stos
mov
out
add
out
push
push
outs
adc
enter
inc
add
std
and
or
nop
hlt
cmc
popa
add
push
aas
and
js
mov
or
jb
les
sbb
test
mov
jne
leave
ret
xor
aas
xchg
mov
adc
test
and
mov
leave
ins
inc
push
sbb
mov
cmovs
(bad)
cmp
sub
jg
sub
push
cdq
push
jo
movs
adc
mov
or
adc
dec
mov
cmp
xchg
xchg
or
push
jmp
push
add
jmp
data16
inc
daa
xchg
mov
jg
shl
pop
or
iret
pop
test
ins
sti
xor
push
sbb
or
dec
cmp
inc
sub
loopne
dec
daa
aad
loope
jmp
ffreep
cmc
mov
push
pop
mov
jne
add
cmp
pop
test
push
int
inc
in
and
jmp
xchg
dec
lods
mov
pop
mov
or
adc
sbb
or
add
and
and
loopne
aad
sub
ins
sbb
pop
and
dec
sbb
jmp
sbb
add
popf
test
jne
sbb
shl
(bad)
clc
inc
adc
jle
add
sbb
fwait
adc
mov
inc
dec
pop
pop
add
aas
or
dec
loopne
mov
push
je
xchg
or
mov
js
and
aad
rcl
fist
dec
pop
clc
aam
cmp
xchg
xchg
mov
pop
inc
or
sbb
mov
inc
xchg
or
inc
xor
and
fs
mov
es
cmp
pop
in
sbb
adc
cmp
fst
fdivr
mov
and
adc
and
sub
pop
pop
mov
sub
cdq
fcom
stos
mov
sub
fadd
sub
push
add
push
in
adc
mov
push
loop
adc
mov
fstp
dec
imul
push
rol
push
cs
rcl
add
cwde
jle
scas
adc
mov
xor
mov
test
push
fwait
les
sar
sbb
add
ins
add
adc
push
and
or
or
lock
mov
xor
push
enter
mov
push
or
adc
(bad)
xor
outs
fst
aam
lods
or
add
ins
arpl
or
dec
sbb
js
xlat
add
fild
mov
jmp
movs
add
inc
xor
sbb
mov
out
push
or
cmp
sar
pusha
repnz
push
cmp
rcl
ja
cwde
mov
sbb
cdq
adc
pop
add
and
push
push
ret
mov
popf
jmp
jle
movs
push
mov
add
(bad)
enter
jecxz
enter
add
sub
pop
jmp
adc
pop
xor
aam
stc
xor
or
adc
jecxz
enter
push
and
or
ja
add
add
or
aaa
cmp
or
push
enter
or
sub
rol
ja
push
adc
test
ret
aas
je
sbb
pushf
inc
xor
jbe
lods
jo
ss
sar
shl
les
xor
adc
mov
add
fcomip
mov
retf
cmps
push
aas
jne
jnp
sub
add
js
dec
adc
cmp
test
dec
dec
hlt
xchg
out
sbb
dec
popf
sub
mov
out
mov
aas
xchg
inc
jmp
gs
add
mov
(bad)
dec
ins
inc
sub
push
mov
cmp
and
lds
pop
fcmovnu
jp
pcmpeqw
xlat
jne
adc
movs
adc
and
dec
xchg
xor
pop
and
add
jo
xor
adc
push
inc
push
test
push
icebp
xor
sbb
pop
add
cmp
fs
xchg
or
or
dec
int3
cmp
and
in
push
jnp
mov
pop
jecxz
sub
(bad)
movs
jno
jmp
adc
push
and
xchg
in
aaa
and
push
repz
push
jp
add
hlt
add
cli
mov
ret
in
push
sbb
xor
dec
adc
and
mov
push
xor
daa
xchg
mov
std
adc
fsub
pop
pop
adc
xor
pop
xchg
mov
rcl
inc
mov
sub
push
or
mov
and
xchg
or
bound
wrmsr
cmp
mov
test
xor
adc
xor
or
(bad)
aad
imul
es
add
dec
(bad)
sub
mov
fiadd
inc
mov
sbb
adc
sub
add
sub
pusha
or
in
lods
add
xrelease
lods
xor
xchg
data16
mov
mov
call
and
add
add
pusha
add
push
mov
mov
pop
push
rol
and
xchg
xchg
data16
adc
dec
dec
push
rol
or
sbb
lock
push
aaa
mov
lods
mov
mov
push
call
psubb
sbb
pop
ror
mov
or
dec
push
test
cwde
inc
sbb
iret
add
fimul
sub
jmp
mov
call
adc
sbb
sbb
mov
add
dec
mov
out
push
pop
sbb
cmp
fist
xor
in
mov
xchg
mov
cdq
and
sbb
sbb
imul
adc
mov
jp
test
iret
pop
stos
adc
push
push
adc
pop
in
push
sbb
mov
pop
repnz
add
add
xlat
xor
add
fs
ss
adc
rcr
and
ret
mov
mov
loope
and
adc
inc
or
mov
push
ins
fild
jmp
outs
xor
mov
add
and
mov
sar
sub
or
mov
mov
sbb
xchg
pusha
xor
dec
inc
dec
mov
adc
and
popf
xor
push
xchg
aam
xor
add
push
sbb
xor
adc
gs
inc
ret
rcl
and
adc
hlt
gs
push
and
pusha
push
push
idiv
lahf
(bad)
mov
push
sbb
add
sub
mov
xchg
cmp
imul
add
lods
sub
pop
xchg
dec
arpl
(bad)
fild
(bad)
out
les
mov
enter
xor
lea
(bad)
jb
or
jbe
push
mov
mov
pop
sub
iret
aam
shr
push
clc
mov
bndldx
test
dec
js
cmps
mov
call
mov
ds
cmp
mov
inc
xor
xor
inc
inc
out
mov
xchg
ret
add
xchg
jne
cmp
jne
outs
(bad)
cld
adc
in
imul
cli
push
mov
cli
dec
sbb
adc
das
movs
dec
cld
jle
or
mov
add
add
mov
pop
adc
test
sub
test
ret
sbb
mov
xor
bound
gs
jns
popa
stos
pop
sub
add
sub
shr
add
(bad)
aam
jno
arpl
push
add
das
push
mov
aam
push
sub
adc
in
mov
shl
shl
cmp
lods
cdq
and
(bad)
nop
mov
adc
or
or
jno
scas
dec
sbb
stc
adc
mov
sub
push
xor
sub
push
xor
xor
sbb
xor
xor
rol
neg
xchg
and
in
ror
xor
dec
add
add
add
xchg
or
inc
mov
or
sub
sub
cmp
int3
cmp
xchg
cmp
inc
lahf
sbb
pop
pop
pop
adc
dec
or
sbb
mov
or
push
ficom
hlt
sbb
adc
inc
or
int3
das
jl
add
jo
pushf
dec
(bad)
sub
loop
sbb
stos
nop
sbb
test
imul
and
pop
inc
dec
hlt
or
dec
adc
inc
out
add
in
mov
jl
pop
loopne
inc
call
js
add
dec
push
xchg
inc
sti
test
lea
rcl
arpl
cmp
mov
push
mov
callw
mov
in
jne
inc
jl
cli
rol
dec
xchg
mov
rcl
jmp
and
pop
jmp
je
iret
mov
hlt
test
sub
adc
jo
int3
je
in
push
(bad)
int3
adc
mov
ret
movs
push
or
int3
and
adc
and
add
sub
es
and
or
adc
adc
or
ror
mov
mov
inc
xchg
pop
int
xchg
sbb
(bad)
xchg
xchg
mov
adc
sbb
and
xor
or
fld
or
sbb
rol
in
sbb
ret
jmp
pop
cmp
lock
dec
in
push
dec
cmps
sbb
mov
mov
jmp
cmp
xlat
pop
xor
pop
add
or
shl
push
xchg
(bad)
fst
dec
sbb
cmps
lea
or
adc
arpl
cmp
jne
movs
push
adc
adc
xchg
jp
sub
jo
loope
or
test
int3
adc
mov
in
jne
seto
mov
adc
ret
inc
pusha
daa
popf
cmp
movs
push
and
and
push
mov
mov
test
out
xor
and
cs
je
loop
inc
xor
push
add
xchg
lods
popa
push
push
ret
xchg
mov
fstp
aaa
and
fild
sub
lahf
and
mov
and
push
in
sub
mov
cmps
adc
cmps
loop
adc
cmps
nop
pop
mov
stc
lods
add
pop
popa
pop
(bad)
in
fisttp
sub
mov
push
sbb
adc
push
pop
and
fld
les
js
jg
mov
adc
push
add
ror
push
popa
ins
je
imul
sbb
in
fmulp
or
xlat
mov
inc
rol
rcr
arpl
gs
push
adc
inc
or
inc
push
sub
cld
nop
scas
jo
cmps
jae
push
push
popa
loop
popa
cli
sbb
mov
inc
jmp
repz
dec
add
add
add
xchg
xchg
shl
add
lock
(bad)
and
(bad)
aad
push
loope
add
push
sbb
out
add
test
jo
ins
fwait
ror
mov
jno
ret
xor
xchg
adc
inc
jle
push
mov
xor
sbb
and
in
lods
sub
inc
push
cmp
mov
add
sub
adc
dec
add
mov
adc
lea
cmp
add
mov
pop
dec
add
(bad)
and
lahf
or
cmp
dec
loop
adc
stc
add
(bad)
cli
push
mov
push
add
retf
cmps
cmp
lea
mov
into
adc
pop
or
mov
sbb
gs
pop
mov
sahf
dec
push
hlt
add
sar
adc
push
ds
mov
xchg
ret
and
or
push
mov
pusha
(bad)
jge
popa
mov
push
lock
or
and
sbb
cmc
fisub
shl
dec
dec
inc
add
jge
cwde
pop
inc
mov
mov
sbb
inc
ins
mov
fdiv
and
dec
push
test
dec
or
nop
scas
retf
sar
call
pop
lods
pop
pop
sbb
jmp
or
dec
ins
inc
ss
add
add
ss
pusha
cmc
push
test
or
sbb
test
cdq
dec
lea
fnstenv
inc
aaa
sub
push
add
sbb
nop
movs
pushf
pusha
cld
add
dec
ret
les
push
aaa
sbb
movups
cmp
sub
mov
das
xor
mov
xchg
xor
pop
shl
and
sub
sbb
push
adc
(bad)
sbb
mov
push
and
and
sbb
lods
sub
and
push
mov
xor
test
cmp
iret
push
xor
rdmsr
fidiv
fnstenv
mov
mov
jge
je
xchg
xor
push
jo
mov
xchg
in
out
pop
mov
jp
retf
hlt
xchg
shr
push
inc
mov
or
push
xor
jl
and
xchg
and
call
rol
(bad)
pop
mov
sub
xchg
aam
je
out
add
cmp
sbb
cdq
leave
sub
mov
cmp
cs
and
fdiv
and
and
adc
push
push
rol
inc
and
inc
movs
ret
je
xor
xchg
jl
(bad)
les
xchg
aam
fs
dec
(bad)
movs
retf
adc
fcom
test
mov
lock
rol
sti
ins
bound
repnz
sbb
sbb
mov
jmp
xlat
push
dec
sbb
nop
inc
pop
or
jmp
imul
adc
sbb
je
cmc
adc
adc
daa
adc
xor
xor
scas
pop
stos
pop
pop
cs
enter
icebp
(bad)
xlat
add
sub
xor
stc
mov
sbb
scas
data16
adc
fcom
add
cld
les
push
jmp
push
dec
add
mov
inc
pusha
fucomi
push
jae
rol
lds
and
mov
nop
add
or
add
enter
adc
mov
and
test
jge
cmp
jp
mov
add
test
dec
iret
push
test
ficom
rol
gs
add
movs
push
adc
xor
inc
retf
icebp
in
sub
js
(bad)
pop
push
ins
add
xchg
push
repz
adc
or
pop
cmp
fimul
push
push
fcomp
jnp
ret
iret
popf
and
sar
bound
fld
sbb
add
fild
(bad)
fcmovb
movs
imul
imul
les
(bad)
imul
sbb
push
xor
xchg
xchg
aam
or
or
adc
(bad)
retf
shl
and
retf
sti
and
adc
adc
or
mov
dec
xlat
popf
scas
pop
(bad)
adc
test
push
ins
shl
push
adc
fwait
hlt
(bad)
dec
or
xor
dec
xor
jmp
(bad)
mov
imul
or
add
(bad)
mov
dec
sub
(bad)
add
jae
inc
and
rcr
sub
ret
je
push
sbb
add
push
sub
shl
adc
imul
sbb
outs
movs
fnstsw
add
or
call
or
sbb
nop
pop
iret
movs
xlat
jecxz
ret
inc
pop
mov
pushf
push
(bad)
mov
movs
pop
aam
mov
(bad)
lock
jo
adc
sbb
or
or
push
in
and
adc
cmps
and
and
mov
jb
les
imul
popf
or
scas
daa
inc
sti
pop
jmp
cmp
lock
cmp
or
jl
add
ja
rcr
push
push
mov
xor
inc
jp
call
jp
xor
fisubr
retf
push
mov
or
push
jge
or
adc
push
push
cmp
call
aam
(bad)
neg
jmp
mov
movs
xor
adc
mov
cmp
adc
mov
jno
or
or
bound
test
icebp
out
(bad)
sub
into
mov
mov
cld
and
inc
add
imul
sti
xor
jb
in
pop
arpl
rcl
jb
adc
das
adc
sbb
adc
int
sbb
xor
loopne
inc
dec
hlt
pop
push
enter
mov
push
sti
add
aam
int
stc
arpl
push
adc
repz
cmp
sub
rol
xor
test
ret
call
adc
imul
add
mov
add
xchg
imul
lea
push
push
pushf
and
jo
or
add
and
dec
outs
push
pop
mov
(bad)
imul
ss
jecxz
adc
repnz
mov
fild
je
xchg
shl
jne
mov
fldenv
cmps
add
bound
pop
leave
push
pusha
jne
sbb
add
sub
add
add
lea
jmp
xchg
xor
cmp
jg
add
inc
and
test
out
(bad)
aad
gs
and
adc
jle
inc
sbb
inc
add
inc
or
jno
push
daa
loopne
imul
js
and
repz
push
add
xchg
add
sub
or
out
je
test
mov
movlps
sbb
adc
mov
sbb
xor
dec
loope
add
mov
jb
pop
inc
pop
push
lea
je
add
xchg
mov
sbb
xor
sub
(bad)
xchg
sbb
scas
push
pop
js
pop
(bad)
jnp
xchg
adc
je
push
and
shl
repz
jo
and
adc
xchg
fadd
addr16
movs
cmp
cmp
sar
mov
mov
xchg
jo
mov
adc
addr16
xchg
popf
ret
es
mov
and
hlt
push
(bad)
sbb
add
pop
cmp
shl
dec
add
xor
ins
outs
sub
push
xchg
adc
popa
inc
pop
pop
and
xchg
xor
cdq
aam
fsubr
sub
in
xor
mov
adc
mov
adc
icebp
jg
scas
inc
xchg
mov
xchg
sub
jl
int
sbb
jns
sahf
nop
add
cmp
loopne
adc
inc
out
jle
test
cmp
jle
mov
imul
pop
je
dec
(bad)
push
and
lock
pop
or
ret
add
xor
xchg
loope
aam
or
cdq
push
pusha
lock
jno
scas
or
xchg
adc
and
out
mov
adc
pusha
aas
adc
fs
es
push
lods
add
gs
xchg
xor
cwde
fxam
ins
push
inc
rcr
adc
push
dec
jmp
shl
pop
fidiv
cs
scas
inc
cmp
add
stos
cmp
ret
add
and
and
inc
aam
mov
mov
adc
and
pop
or
inc
push
dec
mov
stos
push
xor
and
xlat
cmps
jne
jae
rcl
push
xor
or
xchg
adc
loope
and
in
xchg
clc
sub
or
sar
jbe
add
and
pop
cmp
dec
mov
xchg
mov
pop
lds
cld
add
retf
push
sub
mov
adc
dec
fcomp
ja
lock
sar
adc
adc
enter
sbb
out
or
add
add
fdivr
lods
push
les
imul
cmp
add
je
and
add
and
and
xor
ret
ret
dec
push
xor
dec
loope
test
dec
push
mov
sbb
sbb
les
jno
xchg
sbb
(bad)
arpl
dec
sbb
sbb
imul
jae
daa
test
add
add
xor
aam
iret
jb
push
mov
mov
je
cmp
dec
add
loop
jmp
(bad)
es
lahf
push
cs
inc
iret
and
cmps
mov
jo
dec
fdivr
pop
push
jl
sar
sbb
gs
inc
mov
xchg
push
clc
sub
pop
movs
dec
push
mov
xchg
jmp
js
jo
jno
icebp
xlat
cmp
fcomp
xchg
ror
sbb
adc
adc
push
lods
fld
push
ret
iret
cmps
push
loopne
aam
push
pop
xor
ret
push
mov
adc
out
pop
cmp
pop
cmp
push
rol
push
lock
loopne
imul
jbe
cmp
les
add
cli
push
add
mov
mov
jl
dec
cmp
jb
sub
imul
sub
mov
push
cmp
cmp
jbe
por
int3
std
les
push
and
pop
jne
aas
adc
add
ins
mov
(bad)
pop
pop
mov
in
sub
imul
adc
sbb
cdq
in
(bad)
cmp
sbb
retf
dec
inc
div
loopne
test
movs
imul
inc
add
mov
inc
inc
pop
mov
mov
cmp
dec
test
aas
movs
push
(bad)
ins
push
fist
and
movs
push
cwde
jbe
mov
mov
mov
or
jp
(bad)
fild
popf
push
xchg
dec
imul
jae
pop
test
lea
adc
inc
jmp
push
sub
movs
xchg
fsub
cmp
xor
cmp
xlat
xor
sub
or
imul
sub
ins
mov
or
dec
js
adc
dec
inc
cmp
mov
fwait
mov
push
sbb
inc
adc
push
call
retf
stos
and
sub
lds
pop
push
and
add
in
pusha
or
adc
js
sbb
and
adc
or
cld
test
ficomp
out
or
mov
cmp
dec
sbb
inc
sbb
ret
dec
inc
mov
or
and
cmp
add
test
xor
dec
in
pause
add
sub
mov
imul
inc
shr
sahf
cwde
sbb
jmp
and
or
mov
ins
call
ret
and
ror
xchg
xchg
dec
adc
call
pop
sub
push
inc
ret
lods
nop
and
int3
pushf
or
xor
enter
inc
inc
add
nop
jne
stc
shl
je
in
ins
sbb
adc
jb
xchg
jo
or
lock
imul
sbb
add
pushf
(bad)
out
push
fmul
sti
add
xchg
sub
inc
in
movs
add
fsub
jbe
push
inc
adc
sub
cmps
inc
push
cwde
push
fs
or
and
call
movs
push
adc
movs
and
clc
call
test
cli
adc
jmp
jns
dec
xor
adc
test
push
dec
in
fnsave
pop
dec
push
(bad)
and
mov
jmp
mov
(bad)
mov
mov
aaa
std
loope
inc
or
mov
xchg
sub
inc
push
push
sub
push
add
ficom
sbb
push
cmp
jne
test
js
xchg
retf
mov
fwait
push
xchg
cmc
inc
inc
dec
cs
jno
mov
and
xchg
mov
movs
movs
adc
inc
sbb
jb
pop
icebp
cmp
dec
or
push
ss
jno
xchg
mov
adc
dec
push
adc
cmp
jg
or
add
retf
push
enter
(bad)
pop
pop
push
sub
push
inc
sbb
test
push
rol
add
pop
sbb
mov
and
sbb
je
sub
xchg
pop
cli
sub
mov
ins
sub
or
sbb
sub
sub
jle
pop
sub
es
cs
ja
je
clc
mov
(bad)
add
pop
push
or
pusha
(bad)
and
popf
xchg
inc
inc
jo
push
test
shr
inc
sbb
xchg
add
call
or
push
push
ins
aas
ret
fwait
and
cmp
sub
push
or
pop
xchg
cwde
movs
rcr
add
mov
pop
sub
loope
daa
or
popa
outs
ins
jl
cmp
pop
xchg
xchg
and
rcl
mov
and
pop
ins
pop
jno
imul
fldenv
in
sbb
daa
leave
jmp
xchg
xchg
loopne
mov
or
adc
mov
pop
dec
ret
mov
sub
pop
dec
rol
jae
add
js
sbb
sbb
cmp
xor
sub
(bad)
sub
imul
mov
inc
adc
mov
loop
rcl
jae
rcl
(bad)
fimul
cmc
test
repnz
iret
adc
sub
ret
jne
lods
mov
add
lahf
fmul
imul
sbb
loopne
popf
or
ins
push
pusha
xor
mov
ror
aad
or
add
mov
mov
add
je
dec
jne
jl
(bad)
cmp
adc
gs
adc
xchg
mov
xor
sti
adc
xor
jg
xor
adc
out
jne
adc
imul
int3
hlt
mov
push
or
sub
mov
test
xor
adc
pusha
sub
stc
add
adc
(bad)
xor
sub
cwde
mul
sub
push
test
or
mov
sbb
xor
leave
(bad)
and
je
dec
(bad)
enter
push
push
int
push
adc
cmp
inc
pop
stc
dec
call
adc
mov
push
push
xor
fadd
neg
stos
xchg
adc
jae
pop
and
in
popa
adc
inc
sub
cwde
js
test
xor
mov
dec
add
add
adc
push
ins
leave
shl
xchg
imul
lock
movs
movs
inc
(bad)
dec
sub
int
xchg
adc
push
js
or
inc
cmc
jo
test
adc
push
push
add
cmp
aaa
(bad)
xchg
mov
xchg
xor
mov
stos
cmps
arpl
imul
cmps
xlat
pop
ins
lods
retf
add
test
adc
or
add
fdivr
fucomp
or
dec
inc
pop
dec
lock
icebp
push
addr16
xor
xlat
sbb
jmp
daa
xor
sub
jl
ror
test
stc
add
xchg
loope
shl
aam
pop
mov
or
ret
enter
and
fsubr
les
and
sbb
push
mov
push
sar
mov
shl
push
jne
imul
cmp
dec
inc
outs
mov
test
dec
cmp
jl
push
pop
and
cmp
push
inc
or
inc
(bad)
popf
pop
ss
jmp
adc
icebp
mov
push
adc
inc
xchg
or
cmp
dec
ret
test
and
mov
js
add
add
retf
pop
xchg
int
sub
xchg
add
dec
in
rcl
mov
imul
jg
mov
fld
push
aaa
or
les
test
aad
test
inc
js
push
jne
jno
fidiv
jne
fcom
xor
add
cwde
add
int3
and
xchg
mov
rcr
push
mov
daa
mov
push
sub
add
ins
add
mov
inc
push
mov
jl
mov
mov
inc
sub
jne
cmp
add
sub
fdiv
mov
rcr
adc
ret
test
jo
retf
je
dec
out
ret
jb
mov
mov
sbb
push
les
stos
xor
or
popa
cmp
jl
xor
jmp
mov
jb
cwde
sub
bts
adc
xor
imul
inc
outs
inc
xlat
mov
jbe
icebp
movs
add
stc
je
push
push
or
jno
or
jo
shr
or
mov
ror
mov
cdq
jmp
mov
xchg
xor
xor
xor
pop
ret
pop
push
and
in
sbb
or
add
into
jo
pusha
jg
fdivr
aad
inc
(bad)
and
movs
or
ror
push
pop
xor
add
call
xor
sbb
loope
sbb
ror
mov
or
ins
pop
enter
xchg
fiadd
jmp
(bad)
ror
inc
mov
adc
add
ret
dec
arpl
pop
pop
cmovae
sbb
imul
push
pop
or
lock
adc
xor
loop
rcr
mov
mov
push
rcl
inc
stos
or
inc
mov
pop
int
stos
xlat
pop
enter
add
shr
int3
sbb
test
pop
or
sbb
icebp
pop
cmp
je
ror
pusha
or
xchg
mov
in
rcl
cmp
scas
inc
pop
or
imul
jle
(bad)
sub
or
dec
jnp
and
aam
xor
aam
add
mov
mov
mov
jns
movs
mov
pop
push
rol
mov
inc
das
iret
(bad)
xlat
aam
push
inc
scas
cmp
sete
lea
shl
les
adc
or
les
and
int3
xchg
inc
jno
mov
iret
mov
xor
or
jae
sub
and
das
daa
sub
lds
dec
scas
add
inc
sbb
adc
scas
mov
sub
or
mov
cmp
adc
mov
jmp
adc
cld
xchg
cs
call
pop
jno
pop
xchg
push
inc
shl
inc
or
sbb
push
int3
xor
mov
inc
or
lea
and
jae
cmp
sbb
xchg
and
pop
cmp
aaa
fnstsw
adc
sbb
xchg
mov
push
xor
or
jmp
outs
test
cmps
rol
mov
and
in
mov
ss
loopne
outs
std
dec
mov
jecxz
add
jbe
push
push
inc
xor
or
(bad)
out
jnp
xchg
loope
push
ins
nop
or
repz
or
or
mov
fmul
mov
jne
js
wbinvd
addr16
in
xchg
mov
add
lods
cmp
add
cmps
and
loop
jmp
sbb
xor
int
es
cmp
fst
pushf
push
into
lock
je
fst
pop
jb
mov
aad
jnp
add
cmc
sub
sbb
jae
fld
mov
sahf
ins
in
mov
push
push
jb
add
mov
movs
(bad)
jge
call
adc
test
imul
cmp
loop
test
inc
mov
pop
lods
xchg
adc
imul
add
call
sbb
jo
xor
fwait
push
xchg
jne
push
ror
add
lods
xor
lods
push
std
push
jmp
mov
add
je
add
add
je
add
cmp
pmulhw
hlt
in
adc
dec
adc
clc
lock
ret
sub
ficomp
ss
test
inc
adc
imul
clc
inc
add
add
test
sbb
popf
enter
mov
retf
inc
add
mov
sbb
ins
movs
pop
sbb
adc
sbb
lods
fdivr
pop
add
jmp
or
and
or
xor
inc
jmp
push
mov
and
repnz
or
sbb
adc
rcr
shl
dec
mov
shl
add
and
and
mov
mov
pop
sbb
add
outs
or
pusha
push
cmp
add
sub
pop
adc
pop
add
jg
jle
add
mov
fisubr
or
scas
nop
mov
mov
pminsw
adc
fsubr
jle
scas
add
shl
inc
inc
mov
adc
(bad)
mov
test
push
xor
cwde
cmp
out
mov
adc
mov
repz
sub
test
mov
mov
or
es
jns
xor
xor
pop
fild
add
pop
int3
xor
add
jmp
or
adc
add
inc
push
pop
cdq
fdiv
jmp
xor
in
jne
jo
sub
cmps
sti
imul
sub
cwde
popf
jecxz
inc
sbb
ja
test
test
add
fs
adc
stos
push
fucom
inc
test
sub
enter
or
xlat
push
cmps
add
mov
mov
in
stos
pop
push
in
xchg
sub
dec
or
test
inc
retf
sbb
pop
sbb
inc
mov
adc
jmp
enter
dec
cdq
mov
dec
aam
aaa
sub
shr
push
sub
fbld
or
cmp
(bad)
shr
or
cs
mov
mov
fisttp
mov
shr
mov
popa
add
push
ret
sar
pop
mov
push
int
aam
push
sub
call
pop
lods
in
or
rcl
mov
aam
push
push
and
xor
mov
push
inc
push
cli
(bad)
pushf
popa
mov
les
jmp
outs
pop
pop
and
lock
cdq
lock
and
adc
pop
lock
mov
or
loopne
adc
sbb
push
aas
and
mov
test
rcr
sub
fdivr
mov
or
mov
push
rol
(bad)
cmps
(bad)
mov
cmp
pop
jbe
in
inc
popa
sbb
jne
xchg
shr
sbb
aam
xor
cmp
aam
mov
enter
jns
adc
pop
adc
sar
or
pusha
push
inc
sbb
push
cmp
push
aad
push
sbb
jns
sbb
push
mov
jbe
push
xchg
bound
sub
sub
iret
adc
popf
inc
mov
sub
das
adc
push
sbb
sahf
adc
push
inc
es
mov
jle
xchg
push
pop
adc
add
push
adc
stos
mov
iret
sub
add
aaa
hlt
xor
cmp
inc
sub
dec
xchg
sahf
clc
inc
xor
hlt
je
bound
add
scas
aam
xor
iret
cmp
xor
mov
clc
in
adc
test
repz
cmp
or
not
fcom
xor
pop
lock
lahf
adc
test
adc
push
sbb
or
xlat
dec
mov
lods
jbe
xor
mov
add
inc
into
sbb
stos
add
je
adc
or
je
cmp
adc
in
lea
ret
adc
shl
jne
jne
push
aas
cmp
inc
aad
aas
cmp
add
mov
cmps
stc
outs
dec
sar
push
clc
test
(bad)
push
les
sbb
inc
mov
dec
add
cdq
cld
inc
(bad)
adc
int3
test
push
lock
test
dec
shl
pop
sbb
ret
inc
mov
mov
mov
jmp
xchg
pop
movs
xor
mov
in
ins
call
xor
out
mov
jo
ficom
nop
or
pop
inc
push
add
call
aam
xor
nop
mov
add
or
and
sahf
test
cmps
and
sub
enter
aam
mov
stos
and
cmps
cmp
movs
mov
mov
rcr
push
call
xor
xlat
daa
sbb
mov
cwde
(bad)
int3
lods
inc
aaa
push
cmp
hlt
and
loopne
add
sbb
je
pop
popa
sbb
xchg
xchg
rcl
dec
sbb
xchg
or
sti
ror
loop
cmp
adc
test
aaa
sub
xchg
ins
mov
(bad)
mov
call
pushf
cmp
jmp
mov
ret
ret
pop
push
mov
xchg
sbb
lds
push
popf
loop
push
push
mov
add
popf
cmp
gs
nop
mov
in
add
ror
mov
xchg
out
mov
aas
dec
loope
outs
pop
mov
popf
lods
aad
add
and
push
aaa
cmp
push
retf
or
arpl
or
cwde
push
lods
or
fstp
out
add
lods
mov
nop
mov
es
push
jg
clc
add
jne
sub
cmp
sub
(bad)
lock
or
arpl
adc
loopne
int3
imul
lock
inc
cmp
inc
push
dec
into
mov
test
pop
xchg
aad
test
mov
aaa
nop
xor
xor
pop
mov
pop
pop
icebp
fld
push
(bad)
cmp
ret
fsub
sub
pushf
or
mov
scas
or
stos
enter
fwait
xor
js
jb
push
loopne
xor
mov
loopne
xor
xor
aaa
or
mov
mov
daa
int3
addr16
push
jmp
imul
dec
pop
imul
in
jne
ror
fadd
pop
mov
adc
bnd
xor
inc
cmps
dec
inc
sub
mov
inc
pusha
push
push
test
mov
pop
icebp
cmp
ret
nop
inc
xor
or
in
loop
fs
in
mov
retf
xchg
mov
or
and
pop
pop
daa
dec
jnp
xchg
rcr
mov
xchg
fwait
adc
or
mov
aaa
pusha
mov
xor
mov
out
add
(bad)
lock
xor
lahf
and
sahf
mov
out
mov
mov
call
mov
bound
adc
shl
adc
int
push
enter
or
call
mov
loopne
int
and
in
out
test
mov
and
es
lds
into
inc
sub
and
xor
push
add
push
mov
(bad)
das
clc
jl
cmps
add
(bad)
add
fcmovnbe
dec
mov
inc
sub
hlt
jle
hlt
jl
call
push
push
add
clc
jle
mov
xor
add
ins
outs
jne
and
pusha
add
adc
sbb
add
xor
and
aad
sub
out
and
mov
sbb
movs
add
lock
jnp
mov
add
or
dec
aad
test
push
jno
sbb
push
push
je
jno
add
lahf
jmp
pop
xchg
ret
leave
pop
movs
dec
adc
inc
mov
and
pop
loopne
out
jno
dec
inc
sbb
int
cmp
push
push
mov
add
imul
jle
mov
or
cmp
lods
xchg
jo
popa
dec
mov
xor
lea
sub
xor
rol
pop
ret
cmp
mov
fild
div
out
add
push
mov
add
sub
ins
scas
mov
outs
jge
inc
inc
mov
lea
mov
xor
test
push
test
push
inc
test
fbstp
or
inc
mov
or
arpl
(bad)
mov
loope
xor
or
pop
ret
cmp
adc
out
pusha
lods
sbb
(bad)
lods
add
leave
sbb
mov
rol
xor
movs
dec
ret
xor
fidiv
lods
jne
adc
enter
jb
push
cwde
call
ret
iret
leave
frstor
mov
stc
xor
ror
cs
shl
push
cmp
ret
in
(bad)
and
mov
mov
inc
inc
pop
and
popf
sbb
bound
add
adc
mov
and
inc
push
add
dec
or
mov
clc
ja
lock
push
mov
mov
shl
jg
mov
add
jg
push
mov
popa
mov
dec
inc
test
mov
ins
movs
xor
bound
mov
push
lahf
(bad)
mov
jle
jmp
xchg
add
mov
mov
mov
xor
add
jne
sub
xchg
(bad)
rcr
mov
adc
jge
adc
int3
call
pop
mov
cmp
sbb
and
scas
and
adc
sub
sub
jns
sub
mov
and
add
sbb
and
int
xchg
in
sbb
test
and
pusha
(bad)
jne
inc
add
adc
add
test
sbb
jmp
ds
sbb
pop
inc
xor
xor
daa
sub
sbb
fnstcw
test
cmp
retf
pop
add
jbe
push
dec
lods
repnz
sbb
sbb
and
pop
icebp
and
cmp
jo
adc
xor
pop
mov
mov
jno
fdivr
push
imul
mov
retf
push
mov
fwait
or
ret
and
inc
cmps
and
dec
sub
add
les
and
test
adc
jg
add
stos
or
lods
ret
js
push
daa
mov
push
lea
retf
outs
push
or
jg
mov
fimul
mov
neg
push
xchg
dec
adc
test
pop
sbb
and
ins
sbb
sbb
xor
sbb
sbb
shl
lods
pop
inc
cwde
retf
pop
pushf
pop
and
mov
popa
sbb
cwde
jmp
aad
stos
cmp
mov
pop
loope
add
and
dec
or
jmp
mov
fcompp
adc
fdivr
cmp
dec
mov
inc
jne
push
adc
push
jae
scas
stos
mov
push
xor
sub
mov
xor
inc
and
and
les
mov
mov
adc
inc
sbb
loopne
and
es
xchg
push
sbb
test
xchg
arpl
popa
add
fisub
outs
push
sti
bswap
xor
dec
leave
sbb
and
sti
and
xchg
sub
inc
xchg
xor
cmp
inc
retf
adc
(bad)
push
cwde
adc
div
xor
shl
test
pop
cmp
stos
retf
stc
dec
add
cmp
or
or
dec
cmps
mov
add
add
(bad)
push
cmp
mov
movs
out
ds
adc
xchg
movs
int
mov
dec
and
mov
and
mov
loop
xchg
or
mov
xor
es
ss
and
sbb
and
mov
mov
push
mov
adc
les
and
and
add
cmp
call
cmps
cmps
adc
xchg
adc
shr
leave
pop
add
dec
push
mov
ror
test
pop
iret
inc
add
mov
inc
push
shl
xchg
sub
xchg
pop
fwait
shl
or
test
adc
sub
push
adc
retf
and
aam
mov
xlat
sub
push
mov
pushf
sub
pop
add
push
pop
ret
push
das
and
sub
fdivr
push
push
sub
retf
pop
or
mov
stos
or
mov
leave
scas
inc
mov
(bad)
or
fs
loopne
xor
fmul
jge
in
or
fwait
arpl
xor
or
jo
or
xchg
loopne
push
mov
sbb
mov
sbb
les
popf
push
push
inc
in
pushf
fs
iret
adc
push
cmp
inc
call
call
jno
mov
sti
jmp
aam
movs
mov
in
es
jmp
inc
sub
or
sub
out
shr
mov
mov
cwde
loopne
mov
lock
jne
inc
xchg
int3
cmp
inc
push
xor
add
add
das
fsub
pop
add
mov
js
enter
cmp
jmp
call
(bad)
or
lahf
inc
or
push
(bad)
jmp
push
nop
loop
mov
es
jb
push
pminsw
pop
push
paddsb
push
add
mov
stos
rol
div
or
call
adc
in
add
scas
sub
es
mov
sub
xchg
push
jge
shl
or
pop
adc
or
popf
loopne
ret
call
add
ss
add
push
out
and
pop
ret
pop
xchg
xor
inc
xchg
xchg
scas
mov
sbb
cmp
dec
mov
lods
jmp
in
out
sar
test
ret
jp
loope
aaa
sbb
stos
dec
mov
inc
pop
sub
adc
inc
inc
add
jno
add
sbb
jnp
(bad)
shr
mov
sti
rol
adc
inc
jne
pop
mov
push
pop
stos
sti
adc
ins
adc
ja
icebp
xor
jmp
push
xor
xchg
dec
push
movs
loope
inc
movs
mov
add
add
dec
pop
leave
dec
mov
mov
dec
neg
pop
xor
mov
out
and
and
lock
jbe
scas
test
inc
fwait
dec
mov
loopne
inc
sbb
pop
call
adc
arpl
into
adc
add
jne
retf
xor
call
je
(bad)
sti
pop
inc
dec
iret
pusha
push
aas
or
xchg
js
and
punpcklwd
sbb
ins
arpl
inc
push
add
jne
jbe
xchg
xchg
sub
and
in
loopne
add
sbb
outs
sbb
inc
inc
sbb
aaa
mov
ds
das
outs
dec
or
pop
sbb
sub
cdq
sub
add
sub
mov
sub
test
jno
mov
pop
shl
push
dec
inc
mov
test
dec
xor
das
sub
or
retf
adc
mov
dec
inc
inc
add
mov
xor
or
sbb
dec
outs
jo
push
pop
xor
aam
cmp
xchg
(bad)
push
call
mov
stos
int3
and
sbb
mov
sub
mov
mov
aaa
les
out
sbb
xchg
jb
nop
adc
imul
clc
xchg
pop
rcl
les
inc
sbb
or
fwait
push
mov
(bad)
fist
push
or
or
jo
push
imul
mov
out
movs
mov
arpl
cmp
sub
xlat
push
and
mov
cmp
mov
push
dec
mov
outs
push
test
(bad)
dec
sbb
add
jo
dec
scas
int
sbb
addr16
repz
add
rcl
loopne
sub
xchg
movs
rol
loopne
xchg
xchg
and
cmps
sub
pop
add
clc
and
and
dec
xchg
adc
adc
sub
mov
mov
adc
jle
or
push
or
push
push
fisub
pop
retf
add
cmc
fdiv
or
cmp
xchg
and
test
jmp
push
push
cmp
push
adc
push
sbb
ror
adc
mov
and
mov
jmp
mov
and
inc
scas
(bad)
mov
push
not
bnd
push
mov
sub
or
mov
xchg
fsubr
test
adc
mov
mov
push
inc
add
or
loope
adc
fucomp
add
shl
sbb
mov
stos
sbb
pop
push
or
les
frstor
pusha
or
inc
shr
adc
dec
inc
push
adc
or
xor
mul
sub
dec
mov
jne
xor
in
ja
rol
int3
call
mov
mov
loop
pop
fwait
ret
push
dec
popa
dec
cmp
bnd
sub
pop
outs
mov
adc
cwde
push
jmp
cmp
jle
in
xor
push
add
dec
enter
lea
dec
dec
jmp
adc
or
push
add
aas
xor
call
rol
ss
mov
test
test
into
sti
xor
repz
jmp
pop
sti
add
lahf
je
neg
mov
push
cmp
(bad)
dec
lods
fidiv
mov
adc
cdq
mov
sbb
fucomip
and
sbb
mov
shr
xchg
sub
ja
push
mov
inc
fild
jno
call
pop
or
adc
push
jno
adc
mov
push
dec
shl
push
shl
fist
pop
aad
inc
sbb
scas
rol
jecxz
ret
call
jne
cmp
sub
aam
adc
pmullw
push
push
xchg
xchg
enter
imul
fwait
jmp
rcl
add
dec
or
aad
popa
mov
hlt
cmp
adc
mov
push
ret
inc
xchg
and
ds
push
push
gs
mov
es
rol
daa
and
das
xor
imul
push
cmp
test
adc
and
mov
faddp
inc
xor
pop
or
arpl
adc
nop
inc
add
sub
ins
mov
(bad)
stos
lea
pushf
and
cmps
icebp
dec
adc
mov
enter
fs
xchg
mov
(bad)
or
inc
rol
adc
adc
push
sbb
cmp
leave
xlat
aad
pop
cwde
aam
mov
inc
inc
dec
or
pop
inc
lods
mov
bound
je
dec
cmp
xor
rcr
mov
mov
(bad)
mov
pop
clc
ret
hlt
out
ja
or
je
jo
mov
sbb
mov
and
xchg
ins
call
popf
inc
movs
xchg
ss
mov
push
shl
test
adc
xchg
jns
dec
sub
pop
loopne
sbb
sub
and
dec
xchg
push
sub
mov
loope
add
or
inc
pop
inc
add
or
mov
xor
inc
or
(bad)
dec
jle
ss
add
test
call
or
shl
push
mov
jbe
pop
adc
scas
outs
ror
and
push
adc
cs
inc
sbb
rcl
add
xchg
and
daa
xor
add
mov
mov
test
push
loop
cmps
mov
retf
pop
add
cmp
xchg
adc
adc
or
mov
ror
add
add
dec
popa
mov
xor
xchg
xor
push
lock
mov
loop
fld
jo
pop
cdq
pop
push
lods
jle
test
dec
mov
cmp
fiadd
push
sub
rol
add
lods
dec
push
or
outs
adc
enter
mov
into
jns
sbb
cmp
repz
push
dec
jns
add
adc
dec
xchg
js
popa
adc
aaa
ss
out
(bad)
jmp
mov
xor
dec
jo
jge
push
sbb
leave
dec
retf
clc
push
jmp
pop
das
and
adc
adc
and
or
mov
jbe
or
and
cwde
sbb
add
or
mov
daa
cmp
or
shr
or
dec
test
push
sbb
add
mov
push
inc
sbb
inc
dec
push
jno
repnz
sbb
int
xchg
lock
leave
mul
imul
inc
sub
retf
in
js
add
nop
xchg
cwde
cs
retf
in
mov
jb
pop
mov
mov
retf
rol
int3
rcr
mov
lods
sub
pop
cmp
fsub
push
fs
sbb
jns
loope
ins
push
stc
inc
mov
mov
movs
jb
icebp
xor
sub
fwait
pop
mov
sbb
inc
sbb
xchg
fwait
pop
add
adc
add
mov
retf
clc
mov
mov
iret
mov
pusha
xchg
mov
ret
or
or
and
sbb
fwait
jne
movs
adc
jno
jo
pop
imul
retf
in
pop
pusha
push
pop
cmps
and
and
jno
add
inc
ja
imul
sub
xchg
retf
or
cmp
cmp
inc
mov
daa
shl
gs
ds
dec
add
out
adc
mov
or
mov
mov
xchg
push
cmp
and
adc
jmp
or
and
jecxz
fldcw
jge
ds
repnz
or
int
xor
stos
xor
inc
push
mov
clc
mov
push
cmp
mov
xchg
das
sahf
jecxz
mov
mov
inc
nop
add
fwait
mov
and
jecxz
test
repnz
inc
aad
mov
leave
mov
add
fist
xchg
pop
fs
or
push
xchg
lea
std
cmp
in
pop
push
fbld
das
adc
stos
les
and
mov
or
call
mov
mov
mov
dec
sbb
outs
dec
jecxz
loopne
and
ins
xchg
test
pop
mov
gs
push
push
push
leave
arpl
pop
add
sbb
rcr
push
call
push
ins
sbb
addr16
sub
mov
push
ficomp
bound
inc
mov
daa
and
and
push
dec
dec
add
ror
add
cmp
adc
in
aas
xor
test
ins
movs
cmp
sub
inc
dec
push
adc
in
cmp
mov
adc
test
xlat
sar
xchg
mov
xchg
xchg
outs
add
mov
mov
mov
dec
in
test
sub
test
cmp
jae
or
rol
sbb
cmp
sbb
and
dec
xor
and
movs
mov
mov
sbb
js
cmp
jge
pop
lods
or
ins
std
add
mov
push
pop
das
xchg
or
out
and
mov
fstp
xchg
inc
jno
sbb
pushf
test
jne
scas
xchg
ins
add
mov
fistp
jl
mov
jl
push
cmp
rcl
fnstsw
jmp
punpcklbw
push
add
mov
jo
push
push
sbb
adc
cmps
push
fwait
cmps
cmp
call
and
xchg
daa
gs
push
xchg
es
movs
mov
sbb
lds
xchg
adc
inc
call
adc
dec
mov
push
push
in
mov
cwde
and
pusha
movs
cwde
xchg
push
clc
push
xchg
push
arpl
lock
pusha
pushf
push
imul
sbb
dec
pop
pop
cmp
push
test
pop
xlat
or
rcr
add
adc
or
nop
ss
call
mov
add
shr
dec
add
fcom
mov
jecxz
ret
div
arpl
fs
loope
xchg
or
test
sar
cmp
jl
lods
ins
inc
movs
and
sar
ins
xchg
jl
and
cmp
or
dec
not
adc
int3
clc
push
jb
sub
add
das
mov
mov
cmp
adc
in
and
out
and
rcl
push
xchg
dec
adc
sub
dec
xor
jmp
daa
inc
mov
add
movs
mov
in
jae
movs
movs
xor
out
cmp
sar
adc
aam
xor
loopne
lahf
adc
or
inc
push
mov
jle
shl
fstp
sub
adc
inc
fs
aaa
push
xchg
adc
jae
movs
sbb
clc
lock
jmp
and
or
push
xor
xchg
ss
cli
jae
pop
or
popf
adc
leave
mov
cli
mov
push
bound
das
cld
xchg
sub
add
fwait
pop
movs
clc
inc
scas
adc
pop
dec
fcom
or
leave
ds
cs
inc
mov
push
pop
aam
movs
cmp
fadd
push
xor
(bad)
and
xor
inc
out
jno
add
dec
sub
pop
or
mov
jnp
fs
(bad)
in
ss
mov
adc
loope
cmp
and
cmps
mov
dec
add
add
pushf
dec
mov
cmp
cld
(bad)
mov
rcl
shl
sbb
hlt
test
or
lds
arpl
mov
sub
inc
pop
and
xlat
push
call
lods
repnz
dec
inc
jl
inc
or
inc
push
dec
jmp
push
nop
retf
dec
jmp
fistp
pop
rcr
inc
popa
add
and
jmp
push
fstp
push
mov
test
pop
stc
sahf
adc
loopne
pop
cmp
mov
in
pop
jmp
push
test
retf
add
mov
dec
movs
mov
sti
call
iret
adc
and
out
add
mov
lea
xchg
add
aaa
jnp
add
icebp
clc
movs
fidiv
bound
mov
and
mov
sbb
and
sbb
mov
mov
lods
pop
xchg
out
sbb
sub
or
pop
mov
daa
retf
test
push
mov
out
inc
sbb
arpl
xchg
add
mov
sbb
push
pop
push
push
sub
mov
aaa
xor
sbb
or
(bad)
arpl
dec
pop
push
pop
fisub
cmp
lea
scas
sub
and
outs
xor
push
inc
jne
test
jle
ret
push
xchg
add
xchg
xlat
xchg
add
xchg
sbb
xor
dec
inc
add
sub
push
xor
cmp
xchg
adc
mov
or
(bad)
push
gs
sub
push
cmps
lea
sar
mov
rol
mov
adc
shr
jo
out
lods
gs
sub
aam
loopne
pushf
add
add
sbb
mov
rcl
mov
pop
add
xchg
add
sub
and
ins
mov
cs
cmp
fwait
rcl
imul
pop
pop
xor
xor
(bad)
inc
push
push
or
adc
hlt
mov
clc
pop
xchg
sar
sub
add
shl
retf
out
add
add
stc
cmps
lods
mov
adc
or
sar
xchg
push
fild
add
pushf
xchg
jo
ins
cmp
mov
movs
pusha
push
les
stos
pushf
dec
xor
xor
push
adc
inc
in
clc
dec
pop
sub
sub
or
or
sub
add
cmp
fcom
iret
and
jle
or
and
cmp
mov
sbb
ret
mov
shl
inc
push
cs
mov
cli
jl
xchg
push
sar
lds
call
adc
pop
mov
add
and
xchg
mov
dec
je
fidivr
push
(bad)
mov
lahf
xor
adc
ins
xchg
or
add
mov
sub
arpl
pop
in
cld
ins
or
sbb
mov
xchg
(bad)
push
out
push
and
fimul
sub
shr
mov
mov
mov
push
push
fadd
xor
daa
add
ins
pop
fs
pusha
or
(bad)
jmp
or
dec
push
cdq
sub
jne
pop
and
mov
push
dec
sbb
fcomp
loopne
push
add
pusha
or
fcomp
fisub
adc
and
pusha
cdq
push
cmp
ret
stos
sbb
add
sahf
pop
push
cmp
inc
push
cs
inc
xor
test
and
repnz
inc
stos
sub
adc
rol
inc
cmp
jnp
and
dec
scas
dec
and
jmp
shl
ins
in
sub
mov
push
mov
jge
bound
xor
mov
jg
shl
mov
cmp
push
add
mov
retf
retf
adc
(bad)
arpl
pop
enter
sahf
sahf
sahf
cli
movs
pop
push
xchg
xchg
ins
add
iret
ror
das
mov
mov
push
mov
dec
movs
inc
jne
or
push
(bad)
fstp
inc
pusha
rep
adc
pop
retf
xor
scas
sbb
shr
add
ret
pop
add
or
and
in
or
sub
mov
shr
add
adc
loopne
push
mov
retf
push
inc
loop
aad
and
mov
sbb
push
enter
dec
lds
dec
out
dec
sbb
int3
inc
js
dec
fwait
inc
rol
shrd
sbb
in
pop
adc
add
jp
lea
pop
mov
jns
push
adc
add
loop
push
lock
inc
xchg
cmp
or
or
and
arpl
enter
cdq
adc
mov
push
sbb
and
and
ja
sahf
fcom
xor
out
in
or
xchg
mov
mov
add
jne
test
popa
popa
mov
inc
push
dec
adc
add
or
(bad)
xchg
xchg
aas
jnp
movs
out
mov
lahf
sub
adc
xor
sub
or
shl
mov
add
sbb
rcr
enter
jae
pop
or
xchg
int3
cmp
xor
mov
xchg
ins
aam
add
mov
icebp
dec
cmp
jnp
out
mov
daa
cwde
xor
push
lea
add
rcr
loope
mov
in
mov
push
int3
je
pop
leave
and
sbb
mov
inc
mov
jl
ror
and
or
repz
aam
push
retf
cmps
dec
(bad)
enter
and
push
xor
sub
inc
in
clc
aaa
rol
aaa
jno
popf
add
and
lods
mov
ins
lds
ret
aam
adc
push
in
enter
retf
adc
repnz
les
rol
dec
and
and
repnz
mov
sahf
mov
and
cmc
sub
xchg
mov
push
cwde
dec
stos
pusha
jge
push
or
out
clc
inc
aaa
cli
mov
cmp
push
out
arpl
add
and
loopne
push
outs
pop
push
cli
sbb
enter
adc
(bad)
ins
fst
movs
push
add
and
retf
sub
xor
add
mov
dec
mov
add
or
push
(bad)
mov
leave
xor
out
je
push
mov
mov
push
std
loop
pusha
mov
xchg
inc
push
fiadd
inc
gs
add
(bad)
imul
or
test
push
sbb
adc
sbb
mov
push
add
test
mov
cmp
je
repz
push
mov
loope
pop
xchg
test
icebp
dec
call
cmp
gs
pop
jb
sub
inc
mov
xchg
mov
sub
ins
push
cmp
leave
xchg
cmp
bound
xor
shl
test
test
sub
mov
mov
mov
inc
(bad)
sbb
data16
cmp
dec
(bad)
fisubr
mov
arpl
lahf
adc
ret
jne
pop
daa
clc
cmp
jmp
cmp
cmp
cmp
scas
add
xor
add
cmp
fdiv
cmps
xchg
push
pop
lea
jge
shl
adc
pushf
add
aad
clc
dec
mov
daa
fimul
je
xchg
or
inc
add
inc
shl
inc
fdiv
add
rcl
js
mov
and
shl
xchg
mov
test
and
mov
inc
or
sub
xor
jecxz
add
push
pop
mov
pop
pop
and
add
inc
add
or
inc
rcl
lfs
add
jge
rcl
(bad)
adc
mov
xchg
and
dec
jmp
sbb
cld
mul
cmp
clc
cli
jle
fs
dec
mov
push
movs
lods
and
ficomp
enter
push
mov
xor
add
add
jo
pop
add
rcl
ja
jp
imul
inc
gs
xchg
pop
(bad)
jne
push
push
orps
std
scas
jnp
sbb
sub
add
dec
mov
push
je
xor
push
or
inc
out
mov
push
movs
aad
add
mov
push
cmp
jle
dec
push
les
cmp
dec
pop
or
lods
test
jg
pop
pop
mov
pushf
add
add
bound
mov
xchg
and
ja
xor
pop
movs
mov
xchg
xchg
nop
test
add
adc
mov
gs
or
cmp
mov
cmp
aas
test
clc
xor
mov
stos
sub
addr16
jo
mov
xchg
or
mov
rcl
sbb
sbb
mov
xchg
and
not
jmp
lahf
je
mov
push
outs
leave
cld
mov
dec
mov
repnz
or
sbb
pop
test
push
or
push
xor
es
and
adc
fadd
std
test
inc
popa
sahf
mov
fbstp
rcr
je
lods
inc
fcom
pop
leave
add
mov
xor
stc
retf
popa
daa
and
sahf
push
pusha
xlat
mov
sbb
cdq
or
xchg
mov
loopne
mov
dec
xchg
sub
mov
add
adc
sar
push
mov
or
and
jle
test
dec
cmp
push
movs
mov
and
jae
loope
inc
mov
test
cwde
sub
aaa
les
pusha
push
push
mov
sbb
fisubr
push
mov
outs
jo
sbb
test
jle
pop
pop
inc
dec
mov
ss
loop
mov
iret
mov
sub
and
(bad)
jmp
ret
sbb
mov
ret
sub
(bad)
fimul
mov
nop
sub
std
sbb
xchg
mov
dec
popf
xchg
jae
add
(bad)
xchg
mov
les
xchg
(bad)
test
add
sub
sbb
push
fs
movs
repnz
jno
adc
sahf
fidiv
pop
sbb
mov
or
mov
jne
call
dec
mov
retf
ror
mov
inc
dec
mov
loope
sbb
retf
inc
and
pop
jp
or
inc
pop
jb
dec
xor
and
push
lds
cmp
xchg
dec
inc
add
mov
add
adc
scas
aas
ret
iret
jge
or
(bad)
xchg
sub
dec
or
int3
les
dec
jge
mov
sahf
jno
mov
pop
cld
imul
adc
sbb
inc
add
or
dec
inc
out
pushf
cld
cmp
sbb
imul
in
sub
aaa
sbb
or
js
les
xor
add
(bad)
cmp
dec
pop
pop
in
adc
xchg
popf
aam
call
jmp
retf
jle
test
sbb
jl
rol
or
jmp
loop
ds
test
xchg
not
add
adc
adc
add
mov
aaa
mov
outs
or
movs
sbb
stos
xchg
sbb
sbb
adc
test
and
sbb
pop
aad
inc
sbb
or
adc
(bad)
pop
outs
test
inc
aaa
dec
and
je
fstp
std
ins
mov
popf
ins
adc
out
push
jg
push
mov
sbb
out
imul
adc
(bad)
imul
mov
lea
lea
icebp
and
or
mov
push
and
jnp
mov
and
clc
je
xor
mov
cmp
test
shl
sub
jno
mov
adc
mov
cmps
and
xor
(bad)
fnsave
scas
ins
sbb
les
sbb
sbb
or
in
sbb
and
dec
adc
and
les
pop
push
xor
lods
jno
dec
add
imul
inc
fcomp
adc
pop
popa
mov
mov
imul
inc
inc
cmp
push
mov
inc
adc
xchg
push
cmp
mov
adc
icebp
cmp
test
rcr
stos
mov
test
sub
stos
mov
jns
adc
lds
and
pop
ds
les
stc
inc
scas
push
push
and
ds
adc
xor
loope
and
ret
push
push
xchg
enter
xchg
or
pop
jns
adc
(bad)
xchg
adc
sbb
and
js
dec
push
sbb
mov
and
or
aam
arpl
mov
jle
push
or
push
inc
adc
pop
stos
and
(bad)
ror
sub
adc
or
rol
push
push
add
dec
xchg
ret
ret
and
jbe
and
sbb
ret
push
push
cmps
repnz
push
mov
mov
push
in
sbb
dec
or
jmp
fucom
xor
inc
in
and
leave
mov
xchg
lock
(bad)
repz
popa
cmp
pop
push
jbe
ins
adc
or
ss
popa
sbb
les
pop
ja
and
ret
pop
retf
mov
xchg
jae
and
ret
cmp
dec
dec
or
add
nop
pop
daa
add
xor
xor
aas
mov
add
mov
adc
inc
ret
sbb
mov
sub
mov
xor
jae
ins
inc
inc
adc
dec
loopne
xchg
inc
fld
jecxz
dec
xlat
cmp
je
js
cwde
push
sets
pop
adc
and
adc
mov
sub
and
retf
cmp
fcom
adc
or
ret
dec
lea
jle
gs
inc
xchg
jae
loopne
pop
push
mov
ja
push
call
pop
dec
jecxz
or
mov
rcl
or
jnp
xchg
movs
inc
cmp
call
aaa
hlt
add
sub
jp
jne
lods
or
sti
aad
sbb
add
inc
add
hlt
and
push
sub
cmp
jne
dec
and
stos
mov
add
dec
invd
hlt
loop
add
fimul
call
add
add
mov
mov
and
sub
retf
or
inc
xor
rcr
push
cmc
rcl
xchg
(bad)
bound
xor
invd
add
enter
sbb
mov
and
lods
test
and
mov
jo
es
jne
push
into
xor
add
push
pop
jge
(bad)
or
xor
mov
sub
loop
or
or
inc
bound
mov
jmp
ja
jns
ss
or
mov
push
or
cmp
xchg
iret
and
xor
les
mov
loope
xchg
daa
je
out
popa
mov
call
inc
push
ror
mov
ret
xchg
cmp
add
pop
add
movs
push
pop
or
pop
lea
push
inc
ret
cmc
push
iret
mov
cmp
push
sub
or
sub
shr
jmp
pusha
or
mov
pop
jmp
mov
cmp
xchg
idiv
jmp
inc
or
fnstenv
pop
cmp
movs
mov
sbb
dec
call
xchg
mov
gs
add
add
add
push
sub
mov
je
enter
out
pop
cmps
inc
rcr
scas
xchg
pop
xor
call
(bad)
mov
sbb
rcl
mov
dec
push
adc
jp
jmp
movs
jne
(bad)
pop
call
test
mov
sub
add
inc
and
adc
xchg
xchg
and
cs
mov
scas
or
or
sbb
push
into
lods
jmp
add
push
xlat
dec
jle
xor
dec
(bad)
jge
icebp
lds
into
sub
mov
jl
mov
or
add
mov
jl
or
jne
mov
mov
mov
and
repnz
mov
add
jo
pusha
inc
call
ror
or
pop
idiv
xor
adc
pop
test
js
push
sub
cmp
mov
ret
dec
dec
xor
and
add
push
sub
jno
push
test
sbb
add
add
and
sub
pushf
sub
call
scas
mov
lea
fst
test
cwde
jle
jb
int3
(bad)
mov
test
daa
xchg
or
aad
mov
adc
xor
or
movs
pop
ins
and
mov
cmp
add
adc
mov
das
stos
cld
push
sub
mov
cwde
(bad)
cdq
pop
test
cmps
mov
clc
xchg
pop
mov
inc
icebp
add
retf
dec
test
jle
stos
imul
jne
ds
dec
mov
push
sti
xchg
stc
cli
or
pop
or
and
dec
jo
xchg
ret
inc
into
js
pushf
inc
and
jecxz
fwait
jl
cmp
add
and
push
add
or
add
adc
(bad)
cli
mov
or
hlt
jne
xchg
and
add
enter
adc
adc
xor
sub
inc
add
fisttp
es
xchg
adc
adc
and
ret
or
ss
mov
pop
gs
sbb
inc
sar
bnd
cmp
icebp
pop
scas
add
data16
js
add
jp
sub
daa
push
push
or
mov
and
adc
and
jo
add
jo
or
dec
pop
call
out
sbb
loope
add
jl
xchg
xchg
mov
xchg
push
movs
push
mov
ins
mov
or
sub
cs
adc
sbb
xchg
or
pushf
push
adc
int3
pop
mov
xor
jl
ins
nop
in
shl
mov
or
adc
pushf
jb
sahf
or
lea
and
adc
xor
scas
(bad)
imul
and
sub
inc
dec
sub
push
add
fnstcw
mov
addr16
push
cmps
adc
dec
push
push
add
mov
or
add
mov
add
add
test
retf
sub
rcl
test
push
add
pusha
sub
mov
pop
sbb
mov
add
scas
cld
test
lock
pop
push
fnstcw
sub
sbb
repnz
push
sub
inc
pop
pop
daa
stos
push
adc
lock
loopne
lods
or
int3
xchg
push
push
sbb
sub
daa
xchg
enter
(bad)
adc
repz
test
aam
fs
pop
xchg
in
inc
ins
cmp
movs
push
add
inc
or
xor
mov
mov
arpl
mov
ret
sbb
(bad)
adc
lea
push
pop
fs
and
add
add
adc
push
push
test
es
push
push
movs
or
xor
stos
push
fiadd
push
push
dec
dec
sub
lahf
push
inc
sbb
retf
adc
sbb
add
and
sub
pop
jecxz
and
and
js
sub
push
cdq
or
rcr
(bad)
rol
sub
mov
inc
push
sub
dec
fsubr
popf
pop
adc
jne
out
aam
or
je
bound
shr
xchg
imul
enter
xchg
gs
inc
dec
test
push
adc
push
inc
and
test
jecxz
xchg
pop
xchg
pop
js
dec
push
and
sub
mov
stos
or
jo
xchg
cmp
and
dec
std
dec
retf
mov
lods
adc
cmps
mov
xchg
xchg
or
mov
xchg
mov
xor
out
ss
push
and
(bad)
mov
inc
add
aaa
jne
adc
mov
xor
inc
cmp
jecxz
iret
test
cld
or
jno
test
xor
mov
test
leave
outs
xchg
lds
add
cmps
adc
pusha
movs
push
test
mul
test
aam
std
push
fild
add
mov
out
aas
xor
sub
int
lock
ins
xor
int
mov
enter
aaa
or
sbb
sub
mov
add
or
fcomp
dec
nop
dec
and
inc
jmp
xchg
cmps
iret
imul
sbb
add
sub
ret
pop
sub
inc
xchg
inc
mov
xchg
ja
(bad)
int3
es
sbb
stc
pop
dec
das
or
rol
xchg
fisub
mov
gs
iret
adc
loopne
xor
je
sub
push
xlat
nop
cmp
sbb
stos
cmp
xchg
aam
fsubr
test
jae
enter
inc
pop
jae
mov
dec
mov
fst
xchg
xor
out
add
jb
dec
cmp
push
adc
jae
rol
stos
rol
xchg
es
mov
lahf
cwde
cmp
lea
or
or
loopne
scas
inc
xchg
sbb
pop
ficomp
cmp
mov
mov
xchg
in
call
leave
xchg
jle
leave
adc
or
sbb
fisub
xor
test
sub
inc
repz
and
xchg
cmc
lea
sub
in
xor
add
rcl
or
xlat
mov
aaa
fwait
jg
cmp
inc
cmp
aaa
dec
mov
sub
dec
push
inc
push
dec
push
fistp
xchg
dec
cdq
inc
push
xchg
adc
mov
push
jne
inc
fidiv
cmp
mov
sar
movs
jl
(bad)
push
or
mov
test
or
mov
lock
push
daa
rol
cmp
gs
pop
and
es
sbb
xor
adc
dec
jnp
mov
cmp
mov
jb
inc
mov
or
pusha
dec
popa
add
sbb
dec
mov
and
xchg
fsub
jmp
pop
shl
pop
push
jno
jo
das
push
xlat
xchg
xchg
adc
(bad)
(bad)
icebp
add
add
add
dec
cs
or
or
(bad)
leave
test
inc
and
in
sub
jecxz
add
outs
add
loop
lea
adc
pop
or
popa
in
sar
cmp
sub
xchg
add
cmp
mov
jle
jnp
push
sub
or
sub
cli
xor
inc
adc
inc
inc
push
pusha
test
loope
jno
ss
jo
xchg
shr
les
inc
stos
push
dec
aaa
mov
and
lea
add
adc
or
adc
leave
sub
sub
push
xor
(bad)
clc
adc
or
rcl
movs
mov
adc
sub
mov
xchg
and
cwde
movs
sub
push
and
movs
mov
inc
adc
call
or
outs
sub
(bad)
cli
sub
sbb
cld
mov
push
clc
mov
test
and
push
push
cli
push
ret
xchg
pop
nop
stc
pop
and
mov
add
sub
(bad)
fdivr
lahf
mov
out
jmp
sub
dec
push
hlt
lods
mov
mov
xchg
hlt
popa
or
inc
in
inc
repz
scas
rcr
xor
mov
jmp
(bad)
daa
cmp
add
and
inc
pop
cmp
and
xchg
fisub
call
cs
aad
inc
push
xchg
mov
inc
adc
ret
xor
xchg
push
imul
dec
sbb
add
leave
sub
inc
cmps
adc
pop
(bad)
jno
adc
inc
ja
pop
or
cmps
mov
jmp
es
push
shr
neg
push
push
fld
cs
or
cmp
shl
or
pop
pop
and
leave
sub
sub
pop
sub
arpl
(bad)
xor
mov
(bad)
arpl
movs
pop
add
iret
popa
std
(bad)
push
leave
add
ret
jecxz
sbb
pop
daa
or
adc
gs
clc
xor
or
ret
or
push
push
in
mov
bound
jmp
(bad)
fstp
cmp
mov
dec
mov
jo
sbb
aas
jmp
dec
icebp
ds
pop
(bad)
lods
and
movs
mov
pop
loop
gs
sbb
sbb
lea
xchg
into
pop
sub
xor
loopne
mov
cmp
je
and
jae
sahf
popa
push
outs
mov
sbb
sub
and
call
xor
dec
test
aad
sub
adc
push
inc
adc
push
add
inc
lds
jle
mov
or
xor
retf
iret
aam
or
arpl
mov
jmp
jno
xchg
mov
cmp
and
int
cmp
rol
xchg
push
pop
sub
sti
fwait
or
inc
lock
ret
fadd
call
lock
add
mov
arpl
cmp
push
or
sub
push
pop
xor
push
sbb
lahf
cmp
adc
sub
xchg
test
sbb
js
loopne
sub
and
enter
shr
jl
daa
movs
pop
add
push
shl
bound
ins
adc
jg
in
inc
xor
sub
rol
jae
add
mov
fucomp
scas
pop
push
push
adc
out
push
popa
inc
inc
adc
arpl
and
mov
test
cli
gs
cwde
pcmpgtw
mov
data16
ja
adc
fcomp
sub
adc
mov
push
js
cmp
xor
cdq
ins
retf
in
cmps
das
or
add
and
adc
ss
inc
or
and
inc
adc
dec
push
inc
or
(bad)
inc
adc
scas
jns
or
in
add
and
jmp
jmp
lock
ins
push
test
sub
ror
imul
imul
inc
retf
and
xchg
push
mov
or
ins
shl
and
xchg
push
xchg
jno
ret
add
lock
inc
repnz
sbb
mov
retfw
jno
push
and
das
inc
pop
mov
aaa
call
cmp
jae
(bad)
cld
add
jmp
and
xor
iret
ret
xor
cmp
test
js
xchg
nop
bound
or
clc
xor
dec
mov
add
test
jp
xor
sar
mov
push
inc
fdivr
inc
daa
rcr
pop
test
add
dec
mov
mov
test
mov
adc
into
in
mov
sbb
push
clc
adc
cdq
inc
dec
loop
jmp
mov
pop
or
jecxz
retf
sub
adc
aam
(bad)
sub
adc
popa
adc
mov
rol
cmp
jo
cmps
pushf
or
enter
sbb
push
adc
mov
fwait
test
dec
inc
outs
cli
xor
add
cld
jle
push
test
mov
ins
cld
inc
retf
(bad)
rcl
mov
sub
fsubr
or
daa
cld
out
enter
add
add
xchg
inc
xchg
add
popf
pop
adc
cli
lds
arpl
or
adc
aaa
push
push
xor
push
pushf
test
aaa
iret
ja
sbb
push
aam
das
iret
cmp
test
jne
push
mov
or
jbe
jg
cmps
sub
push
adc
sub
fld
fst
sbb
or
adc
mov
push
mov
dec
cmp
call
push
aad
in
mov
aad
xor
pop
aaa
sub
add
xor
sbb
in
fst
jo
pushf
sbb
inc
retf
mov
jecxz
and
sbb
test
inc
cmp
in
pop
add
adc
sti
ret
inc
rol
cmps
or
aaa
pop
or
mov
mov
adc
push
int
and
cmp
fcom
or
fisub
mov
xchg
add
sub
inc
clc
cmp
pop
add
sub
js
and
test
xor
sub
cmp
and
xchg
add
mov
xor
pop
add
std
inc
cmp
jl
mov
sbb
sub
or
push
add
data16
cwde
push
jp
sbb
mov
sub
js
mov
inc
pop
or
cdq
dec
cmp
push
xchg
push
gs
nop
or
and
xchg
mov
xor
and
xor
cs
retf
push
pop
and
adc
jmp
dec
jl
or
and
adc
jp
clc
mov
push
xor
or
xlat
nop
rcr
jmp
inc
push
arpl
inc
imul
in
mov
adc
mov
sub
cmps
dec
ss
sbb
jle
out
fcom
pusha
jno
fistp
adc
jl
(bad)
cmp
pop
out
inc
xor
push
daa
add
repnz
cmp
xor
mov
es
jge
stos
nop
neg
inc
test
rcl
mov
aaa
pop
jbe
sbb
pop
xchg
cmps
mov
sub
ficom
in
clc
jb
jmp
inc
push
retf
jmp
vmovupd
aad
or
xor
pop
cmp
pushf
mov
pop
adc
mov
xor
dec
cmc
adc
nop
add
sbb
test
xor
inc
into
lock
jle
adc
(bad)
mov
pop
cmp
sbb
retf
mov
add
push
xor
lods
and
shl
cmp
aaa
inc
outs
call
xchg
das
inc
sar
shl
adc
(bad)
or
mov
sub
add
adc
add
imul
and
cmps
adc
ins
xor
stc
lods
add
sbb
call
sbb
cmc
add
jl
inc
pop
push
and
es
mov
xchg
cmp
sbb
js
mov
mov
xor
cmp
and
or
xor
inc
push
pop
add
cmps
sbb
ds
mov
jle
test
mov
nop
adc
pusha
adc
push
addr16
sar
inc
inc
jl
mov
push
sbb
add
lock
dec
cld
sar
popa
sbb
(bad)
jle
movs
sbb
mov
push
mov
js
hlt
es
mov
clc
(bad)
mov
out
cmp
and
lds
and
mov
add
stos
fidiv
sbb
xchg
lds
lock
and
jbe
inc
sbb
int3
mov
mov
dec
mov
jmp
inc
push
or
adc
add
out
mov
ja
lock
js
jmp
push
adc
inc
xor
mov
lods
sahf
ret
(bad)
nop
rcr
icebp
add
ror
dec
adc
adc
xor
jl
scas
dec
or
gs
call
out
cmp
push
adc
xchg
jle
jmp
jnp
mov
(bad)
loop
and
es
push
stc
mov
cmp
mov
mov
mov
lods
ins
ficom
sbb
mov
int3
mov
aam
mov
xchg
stos
fcom
cmp
gs
push
ret
loopne
pop
xor
rcr
stos
movs
pusha
mov
inc
or
sbb
and
dec
mov
xor
jle
pop
xchg
shl
sub
cli
and
jmp
push
push
dec
xchg
icebp
push
iret
and
jbe
bts
movs
adc
mov
xchg
ins
cmp
xchg
adc
inc
cmp
dec
mov
leave
inc
add
xor
add
jne
jb
loope
and
(bad)
les
into
test
sar
add
pop
(bad)
ret
add
test
das
adc
jns
xchg
sbb
push
add
inc
out
shr
add
dec
xor
imul
mov
(bad)
push
push
lock
loopne
push
mov
je
or
pop
inc
add
movs
les
adc
das
jnp
mov
xchg
xor
punpckhwd
dec
adc
or
movs
or
sub
pop
push
dec
pop
or
push
sub
sbb
test
(bad)
push
jo
mov
shl
push
mov
out
sbb
cs
retf
and
jno
jae
nop
mov
xor
in
or
in
push
retf
nop
inc
push
push
sub
sub
sbb
mov
mov
retf
jge
shl
mov
dec
adc
add
or
pop
jp
add
int3
adc
lea
stc
je
ficom
fst
add
ins
sbb
inc
mov
inc
push
dec
sbb
push
push
aam
icebp
cmp
pop
or
adc
rcr
sbb
adc
or
icebp
mov
outs
cmp
xchg
lea
sub
mov
sub
call
mov
rol
(bad)
pusha
mov
call
pop
push
add
mov
in
(bad)
or
cmp
add
cmp
shl
or
sub
rcl
or
inc
push
lds
inc
mov
popa
or
and
pop
mov
ja
outs
(bad)
sbb
jb
jp
or
add
fwait
sbb
jl
add
ins
sbb
ins
add
adc
cmp
test
pop
mov
sbb
sub
mov
inc
repnz
loopne
add
aam
add
int3
cmp
and
add
jne
(bad)
shl
scas
jle
jmp
inc
(bad)
jp
cmp
js
mov
call
scas
setge
cld
(bad)
retf
pop
adc
add
cmp
shl
inc
lds
mov
sbb
stc
add
pop
jo
(bad)
dec
jmp
rcr
sub
(bad)
rcr
xchg
aaa
sub
or
mov
inc
mov
adc
cmp
(bad)
jg
pop
inc
xchg
jmp
inc
lock
mov
jne
mov
push
pop
push
or
jmp
dec
and
sahf
mov
or
xor
sbb
or
or
or
add
sub
pop
into
aam
js
inc
cwde
out
dec
sbb
add
in
shl
(bad)
jae
cmp
lea
movs
add
pushw
and
ss
mov
adc
jo
int3
push
or
pop
xchg
cdq
mov
dec
js
jbe
push
mov
ret
cmp
lahf
add
push
outs
add
dec
rcl
jge
mov
pop
rcl
add
dec
or
mov
and
pop
mov
enter
mov
in
add
inc
cwde
and
adc
rol
xchg
adc
adc
div
hlt
cdq
xchg
test
sbb
push
adc
xchg
addr16
imul
iret
or
mov
adc
fmul
mov
push
pop
mov
cmp
mov
shl
sbb
add
jnp
adc
dec
call
ror
rol
add
inc
les
imul
loopne
xor
(bad)
inc
push
aas
pop
jg
fwait
dec
or
fmul
xor
stc
sbb
jmp
test
mov
dec
sub
and
inc
loope
mov
mov
inc
sti
jbe
mov
adc
xchg
mov
gs
fs
mov
adc
lahf
xchg
inc
dec
cmp
movs
jo
adc
in
rcr
popa
(bad)
fimul
xor
lock
aaa
inc
push
pop
pop
cmp
xchg
rcl
les
inc
pop
adc
sub
mov
pop
icebp
mov
xchg
pop
ror
sub
sub
mov
adc
xchg
pop
jl
sub
or
jo
cmp
jp
nop
sbb
movs
ficom
test
fs
sub
or
mov
push
xor
and
addr16
mov
inc
fcmove
push
sub
pop
cmp
mov
xlat
xchg
xchg
rcr
jmp
mov
sbb
stos
or
sbb
or
inc
ror
add
xor
push
cmp
sub
mov
(bad)
fs
sar
test
xchg
sub
sbb
push
pop
or
mov
imul
jne
push
jno
ins
adc
ret
sbb
mov
hlt
cmc
sbb
mov
nop
mov
add
xor
mov
mov
jl
popf
fiadd
adc
add
mov
inc
add
mov
jne
add
xor
js
add
retf
inc
xor
movs
mov
aas
adc
loope
adc
mov
call
add
dec
xchg
(bad)
push
(bad)
xor
xchg
add
scas
add
sbb
push
pop
xor
clc
push
xor
add
loop
and
js
mov
popa
and
cmp
mov
push
je
or
test
push
leave
jp
and
push
push
add
movs
pop
adc
inc
push
add
adc
addr16
and
loopne
xchg
mov
mov
sbb
ins
or
sub
add
pushf
movs
adc
nop
add
pop
push
jb
ret
mov
mov
lahf
imul
pusha
mov
inc
inc
pop
xbegin
or
popa
xchg
popf
adc
lahf
or
add
xchg
push
lock
dec
loop
mov
and
inc
mov
test
imul
add
pop
dec
or
add
cmp
adc
pop
sbb
xchg
add
add
adc
jno
les
in
add
adc
mov
dec
test
daa
sub
jo
je
or
sub
mov
mov
xchg
in
fwait
adc
adc
mov
sbb
test
je
sbb
imul
(bad)
mov
add
cmp
inc
fnstcw
push
mov
mov
push
mov
retf
shl
sub
ins
pop
xchg
or
daa
mov
mov
ror
xlat
nop
mov
push
fwait
xchg
stos
jp
jmp
movs
popf
and
push
rol
sbb
dec
inc
push
nop
jg
push
lea
add
fnsave
stos
mov
mov
inc
dec
loope
test
fiadd
jo
sbb
out
add
xor
push
fcom
lea
xchg
push
and
and
cs
cmps
add
xor
loopne
fidivr
and
test
sbb
dec
inc
mov
or
fiadd
cmp
ret
jnp
push
imul
cmp
jge
mov
sbb
and
jne
push
add
adc
inc
loopne
xchg
pop
movs
xor
adc
cld
loop
or
nop
mov
lahf
pop
cld
mov
(bad)
getsec
les
lahf
fwait
xor
xchg
pop
aam
adc
or
pop
push
mov
gs
jmp
inc
jno
push
inc
cs
cmp
dec
add
mov
call
adc
mov
adc
sub
sti
or
shr
sti
out
psubsw
daa
push
mov
mov
(bad)
mov
mov
jl
js
adc
push
or
pop
jne
std
loopne
dec
xchg
cwde
je
ficomp
cli
sbb
rcr
cmp
push
xor
mov
dec
fadd
jmp
add
shl
pushf
xchg
sub
adc
add
add
mov
iret
pop
mov
xor
mov
or
dec
cmp
add
dec
or
pop
in
ja
mov
stc
adc
cmp
lods
cmp
test
imul
sub
data16
mov
push
or
fcomi
xor
ja
cmp
push
or
mov
das
lods
lahf
imul
iret
mov
dec
aaa
xchg
pop
aaa
sub
sub
shr
aaa
iret
add
pop
fsubr
dec
cmp
popf
dec
inc
dec
test
fdivr
add
dec
(bad)
nop
(bad)
rol
scas
pop
and
rcr
adc
mov
add
xor
icebp
mov
push
pop
inc
adc
aaa
cmp
and
sbb
lock
adc
fld
add
jne
outs
dec
add
ins
cmp
in
xor
add
rcl
add
aam
jo
adc
and
aam
cmps
fstp
dec
lods
fld
jbe
xchg
mov
sub
out
xor
and
inc
sbb
fwait
idiv
enter
pcmpeqw
jo
adc
(bad)
enter
cmps
je
sahf
mov
or
das
aad
xor
ret
xor
sahf
test
push
cmp
pop
add
movs
outs
mov
test
pop
add
cmp
jae
mov
xchg
mov
ret
adc
or
xor
imul
sub
jecxz
leave
daa
or
xlat
enter
lds
fcom
dec
sbb
mov
xchg
ror
shl
aaa
mov
push
mov
inc
adc
xchg
loopne
outs
mov
cmps
xchg
nop
scas
out
out
in
pusha
mov
arpl
mov
fiadd
out
retf
push
sbb
mov
push
ror
into
mov
push
mov
fdivr
pop
dec
xchg
sbb
call
sti
lds
xor
outs
xchg
ret
mov
jl
mov
imul
pop
mov
pop
rol
add
imul
cmp
mov
jmp
popf
jge
sbb
in
mov
add
push
inc
mov
aas
push
sldt
push
mov
sti
nop
cmp
add
fdiv
mov
cs
mov
sub
clc
cmp
rcl
test
or
and
loop
pop
je
lea
adc
add
loopne
into
pop
in
jo
push
mov
add
in
add
movs
dec
add
or
push
mov
xchg
fdivr
mov
xchg
and
iret
jae
lea
adc
fdivr
mov
cdq
pop
(bad)
and
inc
aad
xchg
sub
and
cmps
push
mov
repnz
add
inc
pop
adc
sbb
les
popa
ins
and
mov
jmp
aaa
inc
adc
pop
addr16
mov
add
add
retf
pop
ret
(bad)
aas
lea
push
pop
pusha
and
or
mov
xchg
pop
pop
mov
jge
outs
loopne
xchg
jo
or
fcomp
jl
repnz
or
mov
jge
stos
inc
mov
jbe
cmp
jge
ins
scas
ss
xor
nop
repz
push
cmps
inc
jge
rcl
jne
add
jb
adc
cmc
mov
pop
lods
xor
popa
xchg
test
pop
cdq
mov
push
in
out
bnd
push
mov
leave
ss
mov
adc
rol
pop
push
cmp
ja
xor
inc
cdq
nop
int
cli
imul
call
cmp
shr
and
cmp
xor
adc
push
adc
pop
mov
jge
sar
outs
or
pop
xor
sbb
dec
ins
arpl
mov
sbb
cwde
retf
mov
jecxz
sub
sbb
or
xor
stos
mov
push
inc
adc
je
arpl
mov
test
jno
bound
and
mov
pop
cmps
popa
ds
sbb
mov
shl
test
test
aam
or
hlt
(bad)
lods
fwait
push
and
mov
nop
pop
in
mov
mov
jns
push
idiv
push
nop
pop
in
ret
cmps
mov
add
idiv
jge
jmp
pop
pop
ret
iret
rol
retf
add
pop
movs
retf
jp
sbb
rol
inc
xchg
xor
movs
clc
and
nop
adc
jmp
or
popa
push
add
mov
gs
cmp
jb
repnz
bnd
outs
inc
ins
ss
lock
jmp
pop
movs
loopne
dec
xor
xchg
sahf
jno
inc
add
inc
cmps
push
arpl
pop
add
ret
(bad)
and
and
add
leave
and
test
sbb
add
rcl
mov
xchg
jbe
pop
out
push
nop/reserved
cdq
xor
xor
jo
add
int
cld
push
and
jmp
dec
(bad)
xchg
mov
sahf
cld
pop
test
ja
mov
add
inc
push
push
cs
push
dec
jmp
shl
inc
sub
sub
pop
mov
inc
pop
xchg
sub
adc
inc
cmp
shr
out
test
mov
imul
call
sbb
push
adc
xchg
popa
cmc
test
imul
push
inc
and
sbb
lea
sbb
sbb
pop
sbb
add
xchg
sbb
dec
sbb
or
and
pushf
lahf
inc
jb
nop
and
lahf
and
adc
mov
xchg
pop
inc
call
mov
cmps
sub
je
add
lahf
leave
and
pop
mov
dec
jl
(bad)
loopne
inc
fcmove
mov
pop
or
push
aaa
pop
pop
dec
jbe
mov
test
add
lahf
sbb
dec
enter
add
mov
not
and
add
dec
ds
cmp
shr
xor
shl
mov
popa
loope
pop
mov
pop
inc
movs
movs
mov
icebp
(bad)
js
les
jns
cmp
and
xchg
and
xor
test
adc
xchg
(bad)
xor
add
sub
dec
xor
fwait
xor
(bad)
arpl
or
jp
fld
sbb
mov
(bad)
adc
mov
and
retf
popa
sbb
mov
cld
shld
push
add
dec
shl
xchg
outs
and
(bad)
mov
clc
ficomp
or
push
hlt
ja
xchg
retf
imul
je
js
xchg
or
xor
jne
call
movs
add
push
cmp
inc
dec
pop
pop
and
mov
mov
adc
aam
sub
cmp
xchg
jb
addr16
(bad)
mov
push
dec
clc
adc
mov
pop
jmp
dec
repnz
mov
lds
inc
test
arpl
lock
popa
sub
add
sub
pop
pusha
int3
es
add
or
mov
and
dec
arpl
sbb
add
icebp
in
retf
dec
test
cmp
add
stc
leave
cmps
icebp
add
mov
xor
int
and
dec
aas
sub
inc
adc
inc
dec
pop
cdq
pop
push
add
push
cmps
mov
xor
cld
xor
and
xchg
push
sub
aam
xchg
je
and
dec
ret
jmp
and
movs
into
shr
test
push
or
sbb
pop
shr
(bad)
add
jo
pop
xchg
xor
leave
xchg
sbb
outs
loopne
es
cmp
jge
fld
lds
or
or
adc
lock
popa
rcl
lahf
enter
es
(bad)
mov
imul
or
es
sbb
ss
imul
sbb
shr
push
add
inc
sub
push
xor
adc
jbe
jns
xchg
and
adc
push
sub
sbb
iret
pop
iret
iret
and
movs
cmps
aad
sbb
out
pop
iret
jno
mov
push
pusha
mov
and
sbb
adc
shr
adc
test
inc
inc
push
push
inc
rcr
sbb
sbb
or
mov
mov
jnp
xor
inc
cmps
cmps
enter
cs
inc
sti
ret
movs
sub
arpl
sbb
sbb
aam
adc
inc
mov
or
shl
xor
in
cmp
ss
imul
call
xor
jle
or
adc
mov
shr
sub
jle
or
arpl
xchg
dec
lods
mov
inc
add
mov
adc
and
sbb
daa
jg
pop
xchg
or
pop
adc
or
mov
sub
inc
fs
sahf
test
adc
ffreep
jnp
retf
xor
popa
int
aaa
add
adc
inc
jmp
iret
push
sub
mov
repz
leave
leave
ins
dec
jb
push
hlt
push
mov
inc
adc
lods
in
adc
jmp
and
push
mov
inc
cli
hlt
test
or
lock
push
xor
popf
repnz
adc
mov
sbb
cmp
push
ss
mov
add
pusha
inc
(bad)
push
mov
sbb
xchg
push
add
fcom
mov
sub
pop
adc
lds
push
adc
ins
and
sbb
push
add
pop
ja
push
call
dec
add
lea
pop
mov
add
sahf
outs
pop
repnz
push
sub
lea
fdivr
in
push
nop
jo
outs
dec
add
xchg
sub
bound
pop
sub
jns
and
push
cmc
int3
add
test
inc
gs
push
cs
test
pop
add
jle
add
dec
add
(bad)
xor
sub
fs
js
xchg
nop
push
inc
sti
push
(bad)
sbb
ret
inc
jg
mov
and
xchg
test
inc
icebp
call
mov
pop
lea
inc
cmp
fisttp
loop
pusha
pop
cmp
or
or
push
add
outs
dec
add
xor
nop
cmps
adc
inc
push
sbb
cmp
cmp
fidivr
fist
push
call
dec
jle
test
xor
add
and
or
ds
xchg
xchg
xor
xor
sbb
nop
jle
cmc
push
jmp
enter
jmp
call
ret
test
lock
inc
cmps
arpl
push
icebp
or
xchg
mov
les
jecxz
or
es
ins
aam
(bad)
cmp
add
aas
cld
mov
add
lock
std
loopne
add
adc
je
sub
adc
sahf
cmp
jae
jecxz
dec
adc
and
and
or
in
pop
dec
fsub
ret
mov
or
outs
aaa
sbb
xchg
push
fcomp
cmp
or
or
les
ins
inc
jmp
push
push
lea
sbb
push
pop
pop
mov
pop
leave
fadd
gs
xchg
fcom
popa
imul
push
adc
fistp
adc
adc
push
jp
es
inc
cmp
stos
dec
mov
sbb
add
sub
or
add
imul
test
ret
pop
adc
jns
cmp
add
mov
adc
xchg
xor
mov
call
add
sbb
dec
jmp
or
and
adc
retf
push
stos
sub
dec
add
and
sbb
cmp
mov
(bad)
fst
mov
ret
push
mov
adc
and
sub
jns
movs
push
push
in
sbb
xlat
adc
jge
mov
jg
sub
inc
pop
int
xchg
lods
jnp
dec
dec
xor
xor
pop
push
xlat
icebp
sbb
aas
pusha
push
mov
loope
mov
push
gs
test
lock
xchg
or
adc
sub
jno
pop
dec
popa
loopne
push
push
push
and
loop
ror
xchg
pop
pop
add
dec
and
cwde
fadd
jle
imul
test
jo
das
pop
ret
push
or
mov
inc
jbe
cmp
push
enter
adc
fucomip
iret
mov
push
pushf
push
xor
xor
sbb
lock
pop
jmp
pop
or
mov
and
enter
pop
pop
or
adc
mov
push
xor
push
add
rcl
fcomp
pop
pusha
adc
rcr
push
pusha
jo
aam
inc
inc
and
sahf
mov
sbb
fdivr
pop
or
adc
out
sbb
repnz
jmp
jne
adc
cmp
enter
retf
inc
push
imul
push
inc
cmps
cwde
pop
sar
or
or
test
push
mov
adc
or
adc
jg
fs
and
sub
out
out
adc
add
push
push
push
ficom
inc
or
jbe
shr
push
push
fmulp
or
cmp
cmp
sar
mov
jno
test
nop
xchg
ins
sbb
loop
sbb
retf
retf
mov
out
and
test
aas
(bad)
or
retf
xor
rcr
enter
pop
or
inc
pop
ins
dec
mov
inc
xchg
adc
adc
xor
push
jae
mov
pop
or
xor
mov
xor
icebp
mov
cmps
out
aas
add
dec
(bad)
push
ret
fcmovnb
adc
jmp
int3
das
push
adc
stc
sub
jmp
push
imul
dec
inc
push
(bad)
jmp
dec
js
push
cmp
adc
push
or
sub
add
aaa
movs
lea
and
dec
inc
mov
and
out
inc
mov
(bad)
push
fisub
mov
or
daa
jecxz
outs
sbb
nop
add
mov
loopne
adc
push
test
mov
clc
xchg
xor
(bad)
mov
rcl
out
js
call
cmp
hlt
fist
sub
pusha
and
or
jae
or
sbb
shr
stc
fild
xchg
ror
push
push
add
mov
sbb
pop
dec
loopne
inc
lock
inc
add
in
mov
sbb
jecxz
lock
jae
and
sbb
jp
xchg
xor
loope
inc
jl
push
adc
sbb
and
push
rcl
cmp
dec
test
lods
test
inc
or
shr
or
and
sub
retf
inc
pop
inc
inc
push
cmp
xor
and
jo
xor
iret
push
add
ja
fcmovnbe
add
jmp
ror
in
sub
cmp
retf
mov
pop
add
push
in
mov
lods
xor
mov
sub
cmp
ins
inc
outs
jne
bound
push
mov
xchg
add
inc
pop
ret
sbb
push
and
sbb
and
pop
lods
xor
add
adc
ret
inc
xchg
dec
bound
retf
pusha
mov
add
add
ss
(bad)
sbb
xor
es
ins
adc
sbb
addr16
inc
xchg
adc
leave
in
add
je
or
and
add
fs
shl
mov
popa
nop
ss
cli
fdiv
jmp
add
call
add
ds
and
in
mov
(bad)
retf
and
pop
enter
adc
pop
enter
and
ds
mov
dec
and
jb
add
jo
or
cdq
mov
jns
jno
xchg
and
xor
rol
add
out
(bad)
fiadd
and
(bad)
pop
pop
pop
ins
fcom
xchg
jmp
rol
inc
or
inc
repnz
jbe
sbb
rcl
rcr
scas
out
or
fidivr
inc
call
add
sub
xor
and
iret
pop
in
stos
nop
inc
add
sbb
dec
sahf
add
jne
push
(bad)
mov
ret
cwde
fbstp
js
hlt
dec
pop
and
scas
cmc
sahf
or
int3
call
xchg
pop
pop
data16
sbb
dec
outs
arpl
mov
sub
jno
jb
or
ja
xor
inc
addr16
retf
sbb
loopne
jmp
sbb
adc
add
inc
sbb
ins
dec
call
cmp
sub
inc
out
aam
xor
test
mov
add
xor
sub
inc
dec
pop
jne
xor
lods
add
movs
jae
jns
and
inc
ror
and
cwde
dec
inc
or
add
adc
or
sub
ins
pop
fsubr
adc
cmp
call
cmp
ror
ror
or
int3
sbb
and
outs
cli
sbb
popa
repz
jmp
aam
xor
mov
inc
push
mov
retf
xchg
mov
imul
mov
adc
in
dec
push
sub
mov
sbb
push
js
mov
and
inc
jp
outs
push
dec
or
xor
xor
pushf
xchg
lods
enter
fwait
xor
rcr
pop
or
push
xor
adc
fs
or
jge
js
sub
cmp
cmp
fstp
test
fist
in
imul
sub
jbe
test
dec
fwait
xchg
js
jmp
mov
ror
pop
jle
popa
add
sbb
cmp
cmp
iret
inc
adc
and
loopne
and
imul
or
loopne
stc
mov
pop
rol
mov
test
pop
pushf
and
retf
mov
ret
into
adc
imul
and
xor
and
enter
mov
jae
dec
ja
nop
or
xor
add
add
xor
fbld
mov
mov
mov
push
add
inc
mov
sbb
and
popf
dec
or
push
sbb
add
mov
shl
sub
or
xor
emms
or
popa
or
and
push
clc
fwait
cmp
aas
mov
bound
shr
jns
loopne
std
push
push
jb
or
push
or
xchg
pop
imul
add
outs
cdq
loop
outs
cdq
fmul
mov
gs
inc
mov
dec
inc
test
add
pop
ins
pop
push
adc
dec
nop
and
mov
mov
inc
jle
scas
xor
inc
adc
adc
(bad)
jecxz
in
enter
(bad)
push
sbb
icebp
adc
cli
fdivr
mov
loopne
dec
outs
lea
adc
loope
pop
pop
sub
nop
jne
fwait
push
ffree
sub
push
loope
add
sbb
nop
push
inc
add
add
add
cmp
test
and
xchg
ja
mov
dec
xchg
inc
rol
outs
dec
push
(bad)
pushf
mov
and
mov
loope
dec
or
mov
xor
dec
or
icebp
mov
shr
mov
sti
repz
inc
mov
jo
adc
add
int
adc
or
xor
inc
push
or
sub
clc
inc
(bad)
adc
push
and
jnp
add
cmp
add
popa
dec
adc
mov
sbb
push
add
or
add
mov
div
xor
push
imul
in
xchg
add
jmp
xor
xor
dec
lock
dec
mov
sub
cmp
xlat
cmp
retf
ficom
hlt
sti
sub
nop
pop
push
cmp
xor
mov
cli
push
inc
leave
sahf
sbb
sub
jecxz
or
aad
xchg
cmp
sub
jecxz
ror
adc
dec
movs
mov
sbb
mov
mov
sub
xor
inc
cmps
lds
jl
jne
mov
adc
cmp
cmp
or
and
in
or
fstp
or
add
inc
cmp
repnz
jge
and
fwait
ins
add
inc
mov
fadd
push
leave
popf
cmps
jo
jno
sbb
dec
dec
out
sbb
xchg
push
adc
xchg
dec
test
cmp
(bad)
or
add
xor
dec
popa
stos
cmp
shr
mov
sub
jno
ds
scas
pop
dec
and
xlat
in
pusha
dec
das
pop
xchg
pusha
jno
add
adc
push
xchg
and
push
jmp
das
(bad)
out
xlat
mov
test
mov
(bad)
and
retf
bound
add
xor
adc
in
retf
in
fs
inc
pop
push
inc
adc
adc
in
cwde
xchg
adc
stos
pop
push
std
mov
dec
xor
popa
adc
sub
cmp
sbb
sbb
inc
inc
and
cmp
sahf
sbb
not
mov
jge
retf
std
movs
jnp
movs
add
lods
add
or
fcomp
add
stos
or
xchg
fdivp
jecxz
(bad)
sub
(bad)
je
inc
loopne
shr
jns
or
xor
div
icebp
mov
sub
push
pop
xchg
xchg
xlat
adc
lock
out
mov
int
out
sub
add
xchg
sbb
cdq
add
add
out
xchg
adc
out
push
aas
xor
xchg
lea
movs
inc
mov
imul
inc
pop
cmp
sar
scas
ss
hlt
(bad)
fmul
jg
xor
sub
sar
int
jge
pop
push
retf
je
sbb
or
mov
pushf
sbb
push
add
add
not
or
pusha
aaa
push
loope
inc
mov
xchg
sbb
xchg
push
inc
setp
out
or
push
sbb
xchg
(bad)
lods
add
push
add
jmp
jbe
outs
fs
fwait
sub
stc
and
jle
push
stos
cmp
cmp
jb
pop
fwait
add
adc
push
sub
add
and
popa
sub
daa
cmp
adc
sub
repz
cmps
or
mov
add
push
lods
es
outs
cmp
adc
mov
cmp
or
dec
and
and
retf
push
jecxz
call
sub
push
push
and
ins
adc
push
add
xchg
aam
push
je
adc
and
pop
adc
cmp
mov
xor
xchg
jbe
push
test
fldcw
xchg
retf
call
dec
lods
pop
in
xchg
fadd
mov
je
lock
sub
loopne
inc
sahf
push
rcl
icebp
rol
add
cld
mov
and
push
in
dec
inc
push
mov
pop
cmp
test
jo
push
jecxz
add
add
add
test
or
sar
cmp
sub
pop
inc
adc
mov
pop
or
test
add
jne
fisub
in
mov
add
aad
xor
das
mov
pop
in
aas
in
fcom
or
ret
out
adc
inc
push
or
jns
cmp
adc
pop
fwait
cdq
add
out
jl
dec
std
xchg
mov
xor
mov
pop
xchg
sub
(bad)
push
add
pop
jp
jbe
push
retf
dec
xor
iret
xor
cmp
jb
and
call
lods
mov
scas
pop
adc
mov
pop
dec
daa
xchg
test
ror
or
push
dec
push
sub
xchg
into
dec
adc
xchg
(bad)
sti
jg
add
pop
pop
xor
mov
and
pop
add
mov
pop
nop
add
ret
popa
fcom
cmp
push
jae
lea
jmp
sbb
or
or
fwait
push
imul
dec
and
inc
sub
nop
xor
inc
and
and
sub
gs
inc
pop
jbe
pop
push
and
xor
inc
dec
fistp
imul
push
mov
daa
or
and
inc
sbb
pop
das
push
lods
pop
push
inc
(bad)
xor
and
loope
lods
dec
aas
cmp
xor
das
lods
fnstcw
rdmsr
mov
adc
es
pusha
xor
add
or
adc
mov
shr
or
or
xor
mov
mov
ss
cmp
mov
dec
mov
imul
dec
jbe
pop
mov
sbb
in
sbb
and
add
data16
or
adc
push
inc
xchg
lods
int3
or
pop
xor
inc
or
int
in
xchg
push
ja
dec
popf
mov
xor
in
mov
or
loopne
mov
inc
adc
xchg
mov
sub
or
push
pusha
out
adc
inc
push
xchg
lock
xlat
(bad)
gs
or
dec
je
rcl
ja
outs
shr
inc
jmp
bound
jl
jp
ret
dec
adc
xor
adc
pop
cmp
inc
pop
cs
das
mov
mov
inc
and
or
or
pushf
adc
adc
jnp
lock
arpl
and
push
adc
mov
and
mov
nop
sub
inc
inc
adc
pop
inc
ja
add
dec
pop
add
and
shr
int3
jne
add
repnz
imul
push
mov
mov
jne
inc
or
out
dec
ret
jmp
clc
jae
test
xchg
rcr
sub
test
dec
mov
call
mov
jmp
fidiv
cmp
or
dec
push
jae
xchg
shr
inc
mov
ficomp
push
add
clc
pop
push
sub
imul
arpl
pop
dec
es
clc
jmp
add
pop
bound
ins
xor
fwait
sub
iret
push
test
movs
or
cmps
lahf
cdq
or
push
dec
je
or
or
add
(bad)
(bad)
push
data16
loope
sti
push
jb
or
rol
mov
push
pop
pop
push
dec
in
xlat
add
jne
or
inc
xor
jbe
adc
add
loopne
lock
popa
xchg
mov
sbb
xor
leave
and
loopne
adc
loopne
mov
rcr
add
mov
out
mov
inc
sbb
or
rcr
cmp
push
cmp
jmp
and
inc
loop
cmp
and
cmp
and
push
dec
add
int3
dec
inc
stos
mov
inc
pop
push
mov
add
jnp
pop
mov
imul
fwait
das
data16
or
in
retf
sti
pop
cmp
add
add
dec
loope
inc
and
sbb
and
add
retf
(bad)
cdq
xor
icebp
adc
jbe
jecxz
and
(bad)
in
sahf
ins
jmp
and
xlat
and
clc
sub
les
in
pop
and
mov
or
adc
jmp
or
xor
test
pop
mov
or
dec
lahf
ret
imul
ins
jne
or
test
pop
push
shl
adc
cmp
push
cmp
rcr
and
mov
jmp
les
jne
int3
mov
int
psllw
mov
(bad)
scas
mov
sub
jne
mov
push
add
jp
pop
mov
sub
pop
cmp
and
or
add
iret
xchg
rcr
add
cdq
enter
push
mov
mov
or
mov
inc
push
sbb
ins
and
fbstp
jge
jbe
jecxz
xchg
dec
mov
call
ja
sbb
gs
mov
xor
movs
jmp
jne
les
inc
push
mov
jne
mov
push
imul
jmp
push
lods
nop
mov
pop
lods
sbb
sbb
imul
adc
sub
retf
mov
and
push
push
(bad)
sbb
aaa
mov
push
and
das
jbe
js
fxch
inc
add
adc
mov
xor
mov
cmp
sbb
ffreep
cmps
jo
pop
pusha
xor
test
xchg
pop
and
gs
aad
and
mov
sbb
enter
loope
and
push
push
sbb
mov
aam
xor
pop
nop
adc
add
xchg
pop
mov
cmp
test
push
mov
rcr
push
nop
fdiv
xor
adc
sbb
pop
mov
shr
and
pop
push
push
push
cmp
sbb
std
(bad)
xor
in
and
out
ror
mov
cmp
adc
xlat
mov
enter
sbb
or
inc
retf
mov
js
movs
mov
mov
lahf
movs
push
popa
dec
push
lods
push
mov
clc
push
faddp
mov
gs
mov
ds
pop
aam
pop
inc
idiv
(bad)
adc
lahf
add
push
ins
aaa
dec
aad
and
push
jnp
fdiv
mov
push
les
scas
sbb
add
sub
pop
cmp
or
jb
push
sbb
sub
sbb
icebp
or
(bad)
xor
sbb
xchg
data16
jb
push
mov
loope
xchg
mov
mov
les
push
shr
inc
(bad)
mov
jl
loopne
outs
push
xor
pop
std
(bad)
xor
movs
or
add
and
add
cmp
fwait
push
sbb
fchs
mov
repz
in
jne
retf
jmp
test
pushf
cmp
lock
mov
inc
xchg
xor
xor
jnp
sbb
enter
movs
add
push
dec
iret
shl
pop
inc
pop
retf
push
push
or
fld
xor
and
jl
pop
sub
cmps
sub
ins
or
dec
push
add
enter
pop
nop
jo
daa
xchg
xor
loopne
mov
dec
lock
push
loope
icebp
jne
jecxz
or
push
cld
mov
pop
push
and
(bad)
dec
adc
in
or
pop
ss
add
sub
add
add
cmp
scas
jo
test
sbb
out
ret
(bad)
je
hlt
push
dec
adc
sbb
add
ss
or
add
push
pop
push
xor
fwait
rol
adc
ret
rcl
sub
or
xchg
mov
add
adc
xchg
jl
adc
std
sbb
faddp
jns
dec
mov
pop
cmp
pop
mov
(bad)
stc
fisttp
repnz
lods
addr16
popf
mov
mov
or
sti
push
daa
inc
or
imul
xor
xchg
retf
(bad)
fwait
emms
add
jne
jno
les
inc
xor
je
pop
mov
adc
movs
jns
or
icebp
mov
push
mov
sub
pop
pop
aad
fsubr
xchg
xor
(bad)
adc
mov
retf
fistp
ret
add
mov
add
scas
or
push
mov
push
pop
add
popa
adc
sub
dec
je
mov
cdq
sbb
add
and
adc
dec
ret
dec
adc
and
mov
sbb
xor
sub
pop
sahf
sub
adc
mov
push
or
add
stos
mov
add
add
or
mov
sahf
xchg
sahf
lea
test
mov
mov
ret
bound
imul
sbb
or
test
inc
cmp
mov
out
dec
mov
mov
xchg
mov
sbb
inc
sub
pop
or
sub
movs
and
xlat
adc
outs
inc
daa
rol
cs
add
enter
movs
nop
arpl
les
mov
push
push
jg
cmp
lock
push
dec
jo
je
or
loopne
arpl
stc
call
mov
inc
inc
jne
cmp
jne
test
ins
loope
xor
dec
ficom
lea
inc
inc
push
mov
adc
popf
pop
ins
pop
shl
sub
(bad)
push
imul
scas
sub
shl
retf
cli
push
retf
shl
ins
xchg
mov
mov
or
mov
inc
ss
nop
out
shl
nop
adc
adc
jae
sbb
adc
shl
hlt
pop
mov
push
push
dec
inc
ds
adc
xchg
es
(bad)
xor
ret
into
gs
cmp
jne
push
or
rol
mov
lds
(bad)
cdq
fwait
add
mov
and
pusha
pop
jne
adc
pop
sub
lods
mov
sub
xor
lea
daa
inc
loope
mov
mov
cld
inc
test
test
cmps
xor
pusha
(bad)
pop
push
add
add
push
inc
rcr
pop
cmp
cmps
rcl
mov
test
cmps
or
arpl
arpl
push
push
push
js
push
daa
inc
dec
or
out
adc
xor
add
fnstenv
shl
xchg
fcom
sbb
pushf
ss
movs
or
sub
clc
mul
rcl
or
push
pop
mov
movs
add
xlat
or
add
js
fisubr
mul
cld
test
add
push
push
push
js
loopne
inc
or
jo
mov
mov
and
aaa
in
dec
shl
scas
popa
or
jle
rdmsr
ins
(bad)
sbb
add
and
sbb
dec
or
mov
sub
leave
ins
or
rcl
fild
xchg
call
mov
in
jns
sbb
adc
inc
add
arpl
pop
out
or
pop
and
imul
inc
adc
xchg
add
push
adc
adc
add
adc
mov
jb
outs
add
add
push
push
dec
rcr
xchg
aad
mov
mov
push
ror
aam
sbb
ret
dec
sbb
push
mov
cmp
addr16
in
outs
dec
mov
mov
sub
push
sub
dec
add
dec
rol
inc
rol
dec
int
ret
js
mov
add
pop
add
mov
inc
sbb
sub
add
add
test
fidiv
movlps
cmp
mov
out
clc
jmp
xchg
sub
cmp
hlt
or
mov
js
fimul
call
div
out
add
or
xchg
add
or
movs
add
xchg
adc
stc
and
sub
adc
add
mov
cmc
adc
sub
pusha
add
jmp
jmp
xchg
call
out
push
or
ror
or
mov
inc
pop
or
test
dec
nop
push
ror
push
adc
xchg
push
cmps
lods
ins
inc
loope
push
pop
sbb
movs
shl
and
and
das
popf
out
mov
jo
sub
adc
ss
mov
movs
bound
fcom
xor
add
adc
push
(bad)
sar
outs
lock
in
xor
dec
in
mov
push
int3
sti
loop
dec
mov
push
inc
adc
xor
dec
mov
xor
xchg
test
sub
add
aad
call
cmp
fadd
imul
repnz
push
lods
dec
mov
retf
inc
and
or
mov
lea
or
xor
adc
add
mov
repnz
add
add
mov
or
push
pop
xchg
mov
jns
dec
sub
dec
fld
or
popf
sbb
and
mov
jae
movs
(bad)
leave
pop
das
add
mov
out
cdq
or
mov
ins
dec
adc
cwde
dec
scas
repz
bound
lea
movs
pushf
jo
jne
push
pop
sti
aaa
xor
xor
test
shl
dec
add
sub
sbb
jmp
jno
pop
leave
sbb
ret
mov
adc
test
shl
or
cmp
test
sbb
loop
jle
les
add
add
push
add
jns
mov
not
outs
mov
or
mov
stc
test
daa
mov
mov
push
rol
lahf
push
ret
jp
inc
adc
push
mov
sbb
(bad)
sbb
jmp
jle
retf
std
sbb
repnz
pop
xor
mov
movs
sbb
push
out
inc
popf
retf
mov
test
mov
mov
clc
push
dec
jmp
xchg
hlt
push
outs
dec
or
add
call
and
retf
push
push
push
push
jp
fld
or
xor
xor
mov
adc
mov
pushf
test
popa
add
scas
jmp
(bad)
leave
push
cmp
inc
jno
mov
mov
stos
mov
popf
mov
jmp
mov
add
mov
aas
mov
test
mov
xchg
das
das
push
lods
int3
and
push
xchg
fadd
(bad)
mov
pop
dec
test
ins
cld
dec
inc
adc
mov
ret
sub
ret
or
iret
retf
mov
test
adc
ins
inc
push
jne
inc
fimul
ins
imul
shl
pop
cmp
mov
mov
shr
xchg
rcr
lea
add
mov
mov
sbb
mov
pushf
mov
lahf
popf
fwait
sbb
cdq
push
and
mov
jle
dec
add
call
ficom
and
gs
dec
push
lds
add
mov
jb
ror
pop
cs
cld
mov
dec
sub
sbb
ins
jmp
hlt
jne
push
ja
and
test
stc
fs
hlt
add
ss
daa
pop
add
adc
ror
popa
imul
mov
movs
pusha
pop
sbb
into
sbb
in
stos
jo
or
popa
sub
in
pop
sbb
cmp
stos
fist
xor
push
add
leave
stos
mov
push
or
cmp
push
lods
ss
mov
add
sub
test
inc
enter
add
jns
std
stc
add
enter
or
test
dec
or
or
xchg
dec
or
push
into
cli
mov
mov
and
psllw
ret
test
jmp
loope
sahf
jns
xchg
inc
fs
shl
shl
inc
add
xor
or
and
push
jne
push
sti
or
dec
cmps
rcl
mov
pop
(bad)
or
arpl
mov
fist
dec
shl
enter
lea
cmp
outs
pusha
out
in
(bad)
sub
pop
test
mov
mov
ror
adc
out
and
dec
call
sbb
xchg
push
imul
cld
add
es
stos
inc
or
jmp
push
jmp
jl
and
lods
cli
lahf
mov
push
mov
pop
inc
addr16
pop
or
adc
sub
push
popa
setno
je
ret
jns
xchg
jb
xor
sub
or
nop
test
stos
or
fwait
mov
or
or
gs
or
or
pop
inc
or
sbb
add
xor
movs
sahf
xor
fs
cmp
xchg
inc
jb
add
xchg
and
cmp
sub
or
loopne
push
dec
push
je
fsub
test
cli
xor
je
data16
mov
add
dec
daa
inc
pop
cld
push
fcmovnb
je
xor
into
xchg
sahf
and
add
dec
adc
mov
popa
or
call
mov
push
cdq
add
mov
dec
ret
or
repz
rcr
movs
ins
pop
sbb
inc
push
jae
mov
or
cmp
dec
js
jnp
mov
xchg
dec
or
cmp
push
sub
pop
psubb
dec
sub
call
pop
(bad)
adc
push
adc
lea
adc
ror
loopne
sub
xchg
test
pop
outs
push
addr16
pop
jnp
push
fwait
and
push
shr
push
push
sbb
enter
(bad)
mov
dec
not
or
dec
inc
sub
adc
xchg
or
mov
ret
jmp
daa
sub
jno
cmp
push
fcomp
sub
inc
int
test
xor
or
mov
mov
outs
popa
adc
popa
inc
dec
pusha
lods
and
popf
cwde
cwde
jo
imul
mov
int3
push
es
stc
add
test
cmp
pusha
imul
adc
push
or
iret
pusha
dec
sbb
pop
sbb
cmp
cld
jo
fwait
daa
push
out
loope
add
jb
mov
aaa
adc
call
lock
push
pop
inc
and
xor
cmp
mov
add
test
add
cmp
sub
cmp
and
sbb
arpl
push
shl
pop
sub
push
push
enter
mov
dec
sbb
and
push
add
in
pop
mov
mov
dec
mov
inc
cmp
add
xchg
push
je
add
and
inc
mov
ret
(bad)
scas
dec
push
pop
add
sbb
inc
mov
jb
arpl
imul
popf
sub
mov
and
xchg
mov
pop
std
gs
clc
call
jp
pusha
pop
pop
xor
pop
dec
popa
lds
cmps
xchg
fs
push
mov
(bad)
jmp
repnz
mov
xchg
aad
dec
push
add
dec
dec
cli
ror
movs
lea
push
push
in
clc
push
sbb
and
ss
jmp
xor
pop
mov
adc
push
adc
imul
xchg
les
in
movs
xor
adc
rol
test
ja
out
aam
ins
je
mov
inc
sbb
(bad)
mov
mov
inc
test
and
add
push
mov
sahf
dec
sbb
jle
lea
inc
aaa
outs
nop
call
jne
das
in
xor
daa
add
cmp
popf
xchg
jns
(bad)
rol
mov
ucomiss
adc
xor
rcl
(bad)
xor
mov
and
xor
and
or
xor
mov
or
or
adc
sub
loop
mov
inc
and
dec
dec
xchg
cld
push
pop
cdq
add
scas
add
std
inc
cld
jno
ret
sbb
pop
add
test
neg
imul
test
fadd
sub
and
sbb
stos
or
call
pushf
movs
into
das
in
mov
fmul
imul
or
mov
pop
int
daa
or
rcl
je
cmp
pop
sbb
dec
rcl
inc
scas
sub
xchg
mov
or
sbb
jnp
xchg
pushf
mov
and
aaa
aaa
ins
mov
and
jne
retf
push
retf
pop
jnp
clc
sahf
add
pop
push
shr
movs
lock
dec
adc
xor
mov
icebp
pop
cmp
jnp
test
addr16
or
mov
inc
dec
dec
or
imul
inc
test
sti
sahf
jbe
rcl
das
and
ss
(bad)
stos
pop
and
cmp
movs
push
pop
push
xchg
add
mov
cmps
mov
jnp
int3
sbb
push
or
push
ja
(bad)
call
rcr
cmp
fcmovbe
add
imul
and
jl
push
or
sti
fisubr
jle
jp
mov
adc
push
dec
ret
xor
retf
and
(bad)
retf
imul
out
inc
or
pusha
pop
mov
fdiv
mov
lahf
or
sahf
jle
test
sub
jmp
mov
inc
cmp
mov
ret
fist
push
sbb
push
cmp
adc
out
fs
lea
push
xchg
pusha
pop
push
mov
or
cld
or
push
xchg
pop
or
jge
sub
imul
in
les
cld
mov
and
enter
cmps
cmp
test
out
and
das
cmp
inc
cmp
pop
xor
sub
or
sbb
repz
xchg
add
cs
jmp
(bad)
mov
adc
mov
jne
jmp
xor
stos
lea
sbb
in
push
xor
xchg
inc
cmp
pop
cmp
pop
inc
cli
cmp
jmp
sbb
pop
(bad)
fmul
mov
cmc
push
push
adc
dec
repnz
jl
inc
es
or
add
mov
sub
loopne
inc
(bad)
test
jnp
rol
cmp
add
(bad)
mov
sub
and
and
and
imul
out
test
adc
sbb
ret
fimul
add
push
mov
mov
adc
out
cmp
je
push
push
and
add
xchg
inc
adc
push
sub
or
fst
add
pusha
or
push
push
movs
add
jbe
jae
xor
fidiv
pop
and
xor
mov
jle
mov
sbb
xchg
lock
adc
adc
cmp
inc
mov
nop
out
arpl
nop
adc
inc
dec
push
xchg
or
das
pop
add
outs
pop
sbb
sti
jge
(bad)
sbb
inc
or
outs
or
int3
pop
xor
cmc
(bad)
dec
mov
add
jl
push
in
or
jl
bound
sub
jo
inc
(bad)
dec
mov
mov
cld
shr
jle
mov
in
in
jnp
pop
inc
mov
cmp
inc
or
adc
fst
push
iret
dec
cmps
xor
dec
xchg
fwait
pop
aaa
push
or
cs
xchg
jae
mov
ret
gs
mov
icebp
pop
out
add
or
movs
rol
xchg
dec
or
mov
add
adc
push
push
sub
movs
jecxz
jecxz
scas
(bad)
das
popa
sti
cmp
(bad)
daa
aaa
enter
imul
or
pop
add
push
dec
imul
outs
xchg
add
push
push
scas
in
inc
call
pop
dec
sbb
js
(bad)
mov
mov
mov
cld
(bad)
in
xchg
xchg
aam
ret
push
bound
mov
add
or
push
adc
dec
dec
scas
sub
jge
dec
inc
inc
sub
or
js
inc
ins
cmp
or
xor
clc
add
les
mov
test
sub
push
or
ror
ins
ror
aam
movs
inc
add
fisttp
fld
ds
mov
cmc
dec
add
js
mov
mov
js
xchg
ds
cmps
mov
test
jecxz
sub
outs
inc
lahf
mov
(bad)
xor
add
lea
jp
or
and
loopne
aaa
scas
cwde
ror
cmps
inc
test
push
add
pop
imul
test
pop
jge
jp
cmp
shr
fmul
mov
rdtsc
mov
add
or
jo
out
hlt
je
add
xor
dec
or
sar
fcom
mov
dec
shr
mov
inc
push
js
lea
jo
cmps
or
stos
sub
and
cmp
pop
and
adc
jmp
imul
imul
mov
sbb
dec
and
mov
jmp
pop
pop
adc
adc
or
add
pop
repz
and
and
mov
add
cmp
xchg
dec
xchg
jmp
sbb
into
jb
push
mov
mov
xor
jns
jae
fild
pusha
adc
xor
or
sub
sub
leave
jge
or
pop
or
imul
xor
mov
js
sub
sbb
adc
rol
push
(bad)
aam
pusha
jo
aaa
xor
dec
out
int
dec
addr16
call
pop
xchg
(bad)
stc
js
jo
test
jl
pusha
add
push
mov
lea
add
sbb
adc
das
imul
cmps
adc
push
cmps
data16
sub
inc
sub
popa
mov
xchg
sar
xchg
mov
xchg
sub
loop
test
nop
es
retf
scas
lock
out
inc
inc
addr16
pop
(bad)
div
(bad)
mov
adc
inc
adc
push
cli
pusha
dec
repnz
or
jno
pop
mov
and
in
jmp
scas
and
and
and
mov
and
xchg
std
sub
or
dec
clc
loop
push
inc
adc
sub
shl
sub
loope
sbb
xlat
adc
test
add
cmp
add
mov
cmc
and
mov
(bad)
fsub
jmp
inc
pop
xchg
inc
sahf
loop
arpl
mov
sahf
arpl
push
inc
jl
dec
shr
cmp
xor
sbb
mov
test
dec
adc
push
std
enter
adc
add
adc
jae
mov
add
cmp
jo
daa
mov
retf
sub
inc
xor
dec
sub
adc
add
ret
inc
mov
jno
mov
loopne
adc
cmps
dec
dec
and
(bad)
and
daa
movs
lods
scas
xchg
es
xchg
cs
jnp
adc
cmps
or
movs
not
inc
add
cwde
jno
sbb
test
sub
shl
or
ins
outs
psubq
test
adc
or
pcmpgtd
xor
int
outs
sub
mov
mov
jns
dec
mov
daa
and
inc
shl
jle
jne
and
ins
sar
push
int
dec
popa
inc
pop
add
clc
dec
push
js
push
loopne
ficomp
dec
xor
lock
fcom
push
cmp
pop
xor
scas
cmp
and
and
sbb
mov
inc
xor
jl
xor
sub
sar
gs
and
test
retf
bound
cmp
ret
or
add
add
dec
mov
push
lock
jne
fmul
sbb
jne
sbb
add
into
pop
mov
cmp
mov
sub
push
mov
add
lock
cwde
sbb
cwde
arpl
aad
and
icebp
out
stos
push
aad
stc
jo
rcl
mov
sbb
aas
mov
sar
ficomp
neg
jb
ss
iret
xor
sbb
push
jecxz
mov
leave
add
sbb
ins
add
cmp
add
cmovs
mov
mov
jb
inc
cs
push
xor
and
mov
(bad)
adc
adc
(bad)
mov
mov
pop
cmps
xchg
std
push
cmp
cmp
ja
push
js
jo
inc
rcr
adc
or
cmp
shr
pop
sbb
mov
mov
mov
js
js
pushf
jmp
or
out
push
cmp
lock
test
add
jne
sbb
fyl2x
lods
shl
mov
or
stc
loopne
jb
mov
cmp
aas
xchg
ss
mov
inc
push
add
and
cmp
or
cmp
jne
xchg
dec
inc
inc
adc
or
nop
fdivr
and
fmul
sbb
(bad)
fld
push
bound
mov
xlat
stc
aaa
add
cmp
je
mov
jmp
jae
adc
jnp
and
scas
into
call
ret
enter
js
nop
xor
rcl
push
jmp
sub
pop
pop
dec
enter
imul
das
imul
or
dec
ja
xchg
xor
jmp
mov
fmul
pop
imul
push
push
adc
add
fcom
xchg
fadd
clc
retf
add
push
aas
add
test
mov
mov
dec
enter
loopne
movs
sbb
icebp
shl
iret
jno
test
mov
dec
add
ins
xor
push
xchg
and
xor
xor
adc
mov
cmp
rol
sbb
sub
or
and
sub
pop
movs
cmp
pop
adc
or
mov
call
or
or
sub
leave
xchg
retf
in
or
in
lock
push
pop
sub
adc
repz
or
or
and
in
add
push
ror
(bad)
mov
cld
je
adc
adc
jmp
mov
dec
in
sbb
and
movs
outs
std
mov
push
sbb
mov
mov
add
xchg
push
dec
sbb
ss
imul
mov
adc
ret
(bad)
int3
push
or
mov
loopne
repz
xchg
int
in
and
push
loopne
mov
lods
mov
xor
fiadd
sub
mov
and
cli
or
mov
sbb
add
push
loop
push
xor
xchg
inc
sar
lods
add
mov
push
push
add
xor
sbb
sub
xor
loop
push
sbb
jno
mov
call
jb
mov
mov
mov
xchg
pushf
lds
add
cmp
inc
pop
add
push
sbb
lock
out
xor
sahf
bound
or
pop
push
mov
or
and
in
(bad)
jmp
inc
add
inc
push
sub
nop
ret
leave
adc
xchg
fs
icebp
push
(bad)
push
je
push
push
add
loopne
neg
js
xor
jne
pop
in
loop
lds
loope
or
sbb
fs
lea
cmp
fcmovnb
mov
add
inc
cmp
inc
mov
sbb
test
pop
mov
dec
dec
sbb
add
popf
xor
ror
(bad)
sub
stos
inc
jg
add
adc
cmps
call
pusha
arpl
cmp
fs
sahf
ret
jae
adc
sub
call
(bad)
enter
dec
xor
xchg
outs
in
popa
in
add
cmp
ror
popa
sbb
dec
pop
addr16
sbb
adc
mov
cmp
push
test
push
rcl
in
xchg
into
into
adc
push
cdq
mov
scas
push
mov
push
push
push
push
push
push
xor
or
xor
cmps
sbb
pop
in
shl
je
(bad)
lahf
dec
pusha
xor
dec
and
xchg
fimul
cmp
loope
sbb
nop
in
call
loopne
popaw
or
xor
add
or
xchg
ret
or
dec
fcmovnb
adc
in
add
and
dec
es
push
jae
and
aad
fnstenv
pop
and
adc
xchg
jno
(bad)
mov
dec
xor
repz
or
or
sbb
mov
push
add
or
adc
add
add
ins
sbb
shl
dec
mov
mov
inc
and
inc
cmp
add
jl
movs
sub
or
xchg
iret
shr
and
xor
fs
jne
mov
loopne
xor
mov
(bad)
jnp
lock
dec
jg
inc
or
xchg
fild
pop
rcl
ins
inc
sub
retf
js
add
cmp
push
ins
add
rcl
lahf
adc
pop
sub
cwde
retf
or
dec
or
inc
or
loop
or
and
add
fdivr
jne
enter
sbb
iret
mov
(bad)
lds
sub
add
xor
and
aam
sbb
test
push
pop
fadd
adc
pop
inc
mov
add
(bad)
cli
or
js
fidiv
xor
rol
jle
adc
ins
add
fdiv
sbb
sbb
test
pop
aas
or
aaa
int3
pop
popa
stos
inc
lds
movs
or
add
mov
adc
mov
js
push
push
push
or
mov
cmp
ins
pop
ficom
ret
lods
xchg
sub
dec
add
repz
adc
ret
fiadd
mov
repz
or
call
or
and
add
push
fcmovne
(bad)
lock
lds
les
cdq
fs
inc
cmp
int
and
add
ret
clc
(bad)
dec
jne
xor
in
push
pop
push
dec
in
(bad)
mov
sub
iret
push
mov
jne
inc
xlat
jmp
or
mov
xchg
nop
dec
ds
mov
pop
push
jecxz
mov
or
mov
sbb
movs
push
cmp
movs
cmp
fiadd
leave
jne
rcr
dec
and
addr16
test
mov
lods
nop
push
dec
bound
mov
inc
jl
pusha
lods
iret
sahf
in
mov
(bad)
pop
lea
loopne
add
adc
push
inc
(bad)
cmp
fadd
loope
pop
adc
inc
adc
add
rcl
es
and
inc
xlat
mov
pop
ret
mov
mov
cmp
cdq
mov
cmps
adc
adc
stc
adc
sub
ja
gs
jns
add
mov
popf
push
push
jo
jns
xchg
jl
pop
imul
dec
or
test
jl
xchg
and
pop
fadd
retf
je
push
test
test
push
pop
add
add
sub
xor
cmp
nop
or
cmp
nop
or
cmp
inc
pusha
sbb
adc
adc
cmps
fidiv
xchg
cmps
sub
mov
sub
add
mov
pop
or
test
adc
mov
test
sbb
cmove
ret
adc
jmp
mov
adc
test
cmp
pop
jl
cmp
jl
pop
add
jo
xchg
shl
jns
retf
leave
(bad)
mov
or
adc
out
mov
xor
gs
nop
xor
ins
jno
adc
je
shl
scas
xchg
add
imul
inc
or
pop
mov
nop
xor
inc
xor
sbb
cmps
inc
mov
sbb
popa
xlat
aad
push
or
mov
add
movs
test
bound
mov
cmp
stos
mov
inc
rol
sub
scas
fcom
inc
arpl
add
or
mov
pop
fsub
add
call
mov
and
mov
xor
ja
mov
call
data16
sbb
call
stos
int3
add
cmp
dec
cs
inc
jb
cwde
outs
enter
sbb
scas
mov
pop
mov
and
popa
and
or
pusha
mov
mov
lods
lock
cmc
cwde
data16
pop
xchg
ins
call
pushf
cmps
in
dec
cmp
rcl
xor
dec
pop
sub
cmc
or
ret
pop
ficomp
adc
or
add
sbb
mov
jb
add
push
push
push
fxtract
rol
lods
lock
xchg
mov
mov
in
and
or
push
and
movs
cmp
cmp
pop
cdq
mov
lock
cmp
adc
cmp
or
xor
fdiv
leave
lock
mov
adc
imul
push
les
cmp
xor
pop
sbb
and
in
fs
or
clc
sar
movs
pop
and
mov
ret
cdq
nop
cmp
adc
push
jg
inc
mov
sub
push
jb
inc
call
add
mov
ret
add
adc
ja
add
or
cmps
in
push
or
aad
xor
cmps
ss
xor
push
movs
out
dec
scas
pop
and
stc
adc
enter
adc
lods
icebp
call
pop
sbb
(bad)
fnsave
mov
xchg
das
xor
jle
fs
enter
jne
es
xor
scas
push
mov
call
cmp
mov
add
js
sub
test
out
(bad)
repz
add
jnp
inc
dec
call
mov
jbe
cmp
test
sbb
mov
scas
sbb
pop
fsub
push
adc
pop
xor
outs
sub
or
jbe
inc
jge
das
jmp
not
ins
dec
inc
data16
fidivr
ins
lea
sbb
(bad)
je
jae
mov
sub
sti
adc
test
inc
inc
sub
or
jmp
dec
adc
ret
adc
(bad)
loop
lock
(bad)
xchg
movs
lea
idiv
lahf
or
outs
sub
or
inc
mov
data16
std
popf
bound
loop
dec
and
sub
pop
shr
ins
imul
addr16
cmc
movs
or
inc
in
inc
in
or
jne
mov
jae
and
adc
sbb
or
or
add
adc
inc
push
dec
sub
jne
stos
imul
add
dec
jbe
pop
cmp
sub
aaa
xchg
sub
push
nop
repz
or
cwde
mov
dec
xchg
mov
pop
lods
jge
pushf
sahf
xor
sbb
xchg
test
sub
push
lds
pop
and
cmp
aad
imul
fdivrp
repnz
push
dec
sub
sub
add
imul
mov
dec
xor
add
jne
gs
and
xor
neg
cld
ror
fnstcw
out
inc
pop
add
fadd
cmp
popa
add
or
cs
dec
pop
inc
ret
cmc
dec
sub
mov
outs
pop
adc
clc
xor
fcmovnu
ror
jmp
call
fldenv
pop
(bad)
imul
ja
xchg
pop
test
aad
and
inc
bound
add
add
test
xor
sub
xchg
jns
sub
je
(bad)
mov
pop
or
sub
jecxz
das
scas
adc
add
lods
and
push
outs
mov
inc
movs
inc
jecxz
test
inc
imul
mov
scas
xchg
aaa
ins
sbb
cmps
or
mov
leave
add
xchg
cmp
dec
mov
push
mov
xchg
jns
or
in
outs
(bad)
mov
shr
icebp
cmp
xchg
in
dec
test
sbb
movs
push
push
popf
push
adc
inc
cmp
sbb
adc
adc
sbb
dec
mov
xor
and
add
jbe
pop
out
add
push
test
fwait
xor
dec
or
adc
cmp
push
cmp
test
xor
inc
sbb
adc
popa
jb
add
inc
ins
adc
dec
mov
add
dec
jmp
or
(bad)
stos
inc
push
movs
inc
push
jne
adc
mov
popf
push
pop
xchg
or
out
cli
mov
nop
in
sub
popa
loope
rcr
and
std
sbb
mov
in
out
lds
sbb
sbb
adc
mov
in
add
jb
dec
daa
fadd
push
test
jecxz
xchg
push
pop
stos
test
popf
sbb
pop
lea
retf
ins
enter
add
adc
mov
adc
inc
jmp
pop
pop
cmp
add
pop
call
inc
clc
inc
cld
inc
or
pop
or
out
mov
add
sub
mov
and
lods
in
or
xchg
mov
cli
push
lea
dec
scas
fwait
jbe
mov
ins
sub
xchg
mov
test
shl
mov
and
pop
jl
(bad)
hlt
shr
les
push
in
inc
pop
pop
add
test
inc
loopne
lea
jne
cdq
(bad)
push
stos
mov
div
push
and
(bad)
jg
mov
xlat
mov
add
pusha
add
jne
idiv
jbe
retf
add
and
sub
mov
jmp
sub
adc
push
pushf
sub
je
sub
mov
ins
inc
cmp
adc
scas
jne
icebp
add
push
push
fcmovnb
push
loopne
ret
shl
fsub
adc
movs
pop
lods
fs
and
fist
xor
jl
mov
xor
cmps
pusha
retf
xchg
adc
push
cdq
in
pushf
sub
or
movs
add
pop
xor
dec
call
push
and
call
(bad)
jae
nop
test
adc
out
cwde
and
pop
fisub
dec
jne
and
mov
and
push
add
sbb
push
or
adc
repnz
push
shl
inc
push
dec
inc
add
xor
xor
sbb
mov
shl
xor
sbb
jg
adc
add
mov
and
aas
enter
xor
call
add
add
push
sar
pop
jmp
sub
ins
and
mov
fsubr
rcl
repnz
mov
sar
arpl
nop
add
or
mov
xchg
enter
ret
test
rcr
dec
faddp
and
fidiv
xchg
sub
stos
fwait
push
push
jo
mov
dec
clc
sub
and
repnz
sahf
fld
sar
jno
imul
movs
(bad)
aad
in
pusha
sar
sti
sub
retf
or
add
dec
lea
arpl
ins
add
movs
and
lock
sahf
jae
sbb
mov
jne
add
iret
ficom
push
pop
sbb
jge
xchg
hlt
xchg
icebp
xor
xor
jmp
adc
mov
and
mov
mov
clc
imul
inc
ret
jp
mov
sub
cdq
in
cld
or
pop
sbb
and
xchg
mov
and
and
mov
jp
push
xchg
ror
mov
adc
jbe
shl
sub
fiadd
aaa
or
adc
jl
adc
jbe
add
mov
call
or
dec
xor
or
loope
rol
add
or
pop
and
cmp
movs
inc
stc
jo
mov
mov
and
mov
cmp
mov
dec
stc
loop
cwde
mov
sub
in
and
lods
ror
outs
mov
pop
dec
popa
xchg
jno
arpl
and
pusha
dec
sub
sub
lea
in
pop
popa
cmp
(bad)
call
and
loopne
sbb
icebp
movs
and
mov
ret
fmul
add
xor
pop
push
adc
xchg
mov
out
sub
popa
jno
jmp
cld
or
sub
cmp
or
daa
call
call
and
jb
adc
mov
and
push
rcr
das
cld
js
or
and
sub
pop
call
(bad)
cmp
out
(bad)
sub
test
jle
add
add
nop
aaa
fwait
and
mov
movs
lock
adc
inc
xchg
movs
lods
cmc
fdivr
add
and
cmp
cmp
fidiv
xlat
std
push
pusha
sub
jbe
shl
push
ins
push
fcom
popa
pusha
add
add
xchg
xor
movs
enter
out
call
pop
dec
enter
test
or
lea
adc
xchg
pushf
mov
hlt
push
int3
aam
sbb
mov
push
call
call
popa
out
ret
jmp
xchg
push
add
inc
or
(bad)
fadd
cmps
repnz
fsub
add
add
out
mov
and
lods
shl
xchg
es
fs
pusha
outs
xchg
cmps
fsubr
movs
int3
dec
inc
sub
bound
(bad)
lahf
in
int3
imul
dec
(bad)
test
sbb
xchg
add
or
push
and
test
pop
inc
xchg
dec
sti
xor
xlat
or
sub
repz
les
jecxz
mov
aas
add
adc
loopne
and
cmp
ror
xchg
add
loope
dec
push
js
sbb
jmp
inc
aaa
fs
les
ror
cmps
in
test
xor
cmps
mov
lods
fs
out
pop
retf
and
xchg
xchg
rol
push
sbb
jmp
sar
fbstp
adc
push
int
xor
sub
cmp
adc
adc
dec
dec
mov
movs
adc
aam
sahf
dec
addr16
xor
dec
sbb
push
jnp
jnp
pushf
mov
test
or
jne
inc
xchg
sbb
es
push
pop
cmp
mov
sbb
cmp
ds
xchg
mov
ja
push
ret
sbb
(bad)
ss
adc
mov
adc
sbb
mov
cmp
push
data16
and
ret
pop
and
and
xor
fisttp
sti
pop
cmp
and
adc
xor
cmp
in
sbb
push
add
test
sbb
sub
das
mov
mov
inc
xchg
xor
mov
cmp
dec
inc
(bad)
scas
dec
jmp
mov
dec
call
and
xchg
jno
cmp
rcl
jo
lahf
inc
call
call
sub
lds
push
dec
or
aaa
add
test
ins
add
call
mov
ins
test
cmp
gs
jmp
jl
xchg
jno
test
jae
sub
inc
push
push
mov
mov
jmp
mov
sub
test
test
aaa
test
(bad)
test
test
adc
add
push
mov
es
ret
mov
pushf
leave
and
fs
mov
adc
lds
in
pop
lea
(bad)
jmp
dec
add
or
inc
and
mov
sbb
sub
cmps
loop
mov
shl
das
leave
ret
je
cmp
cmps
repz
mov
ja
and
cmp
push
sub
sub
dec
adc
mov
test
jbe
mov
inc
loopne
push
mov
pop
das
bound
and
add
call
sbb
add
popf
repnz
and
pop
mov
add
xchg
sbb
inc
dec
movs
ins
mov
mov
inc
adc
imul
sub
add
add
aaa
xor
jge
add
mov
and
push
loope
in
mov
lea
adc
movs
nop
dec
inc
or
outs
sbb
(bad)
ret
and
xlat
fst
mov
rol
add
hlt
sbb
or
xor
addr16
or
(bad)
rol
es
(bad)
lock
xor
dec
nop
adc
jnp
sbb
jo
fwait
mov
(bad)
cmp
mov
test
or
mov
xchg
aas
lock
cmp
jmp
mov
or
pop
mov
movs
rol
std
sub
sbb
jb
mov
hlt
push
add
sar
cmp
jmp
sbb
jecxz
add
int
mov
pop
stos
mov
cmps
imul
mov
test
mov
xchg
les
jb
pop
mov
fsub
or
push
jno
jle
dec
push
fist
pop
ss
(bad)
ficom
clc
dec
pop
and
in
xchg
in
enter
and
jmp
push
into
sbb
movs
jns
push
sub
mov
or
and
sbb
nop
lds
lahf
jo
lock
dec
fnstsw
popf
jle
jbe
add
ret
dec
or
sbb
push
sub
inc
or
shl
xchg
imul
push
push
adc
push
jmp
adc
xor
retf
fisub
addr16
mov
dec
add
add
(bad)
in
bound
add
dec
clc
into
cwde
xchg
or
mov
mov
add
push
pusha
pusha
retf
ja
loopne
or
push
call
hlt
fsub
sbb
inc
shr
lahf
dec
adc
cmp
adc
or
call
add
fmul
bound
inc
add
xor
inc
adc
adc
add
popa
dec
mov
and
or
sbb
jmp
es
rcl
dec
(bad)
fst
stos
or
movs
jns
and
push
add
adc
pusha
or
addr16
or
push
push
test
and
xchg
mov
inc
scas
test
ror
movs
or
dec
mov
lock
imul
mov
(bad)
test
cmp
and
loop
push
inc
out
inc
mov
enter
push
add
or
sub
shl
adc
jmp
sub
jmp
inc
mov
ret
adc
mov
jbe
or
mov
aam
movs
mov
add
push
jle
add
xor
loop
xor
scas
gs
mov
add
in
mov
pop
xchg
pushf
(bad)
test
(bad)
dec
sub
js
je
gs
cmp
or
shl
js
push
jb
cmp
hlt
push
mov
inc
mov
pop
clc
and
loopne
enter
add
clc
retf
iret
(bad)
in
lds
ja
mov
rol
mov
xchg
pop
sbb
sbb
ss
xchg
or
push
push
clc
xor
xor
das
adc
dec
pusha
ins
push
daa
jnp
push
cld
sbb
addr16
sahf
mov
cs
and
inc
aad
jge
push
daa
addr16
mov
lods
jecxz
mov
test
push
aaa
pop
add
repz
loopne
int3
sub
lods
adc
scas
mov
ja
sub
sbb
inc
or
fwait
int3
jg
sub
cs
mov
cmp
shl
jbe
int
adc
xchg
or
mov
in
push
clc
mov
xchg
push
fadd
jo
call
dec
retf
push
push
inc
and
imul
cmp
jne
shl
inc
lods
mov
dec
mov
inc
push
xor
add
getsec
inc
test
lods
inc
add
add
cmp
stos
inc
lods
mov
push
add
cmp
int3
cmp
mov
aam
cmps
xchg
jg
das
and
neg
jmp
(bad)
rol
data16
sub
add
or
mov
and
and
add
stos
mov
push
leave
dec
dec
pop
stos
dec
xchg
sbb
iret
mov
test
pop
hlt
test
dec
sub
lahf
add
cwde
cmp
icebp
cdq
cs
push
rcl
mov
inc
loope
xchg
lock
push
xor
xchg
or
ret
rol
push
and
mov
jne
imul
jnp
in
xor
push
mov
push
icebp
mov
jno
push
imul
sbb
imul
xchg
inc
dec
daa
jmp
inc
pop
push
fxch
xor
add
leave
adc
rcl
add
repnz
mov
sbb
and
sub
sbb
jb
push
inc
xor
(bad)
cmp
js
test
or
sbb
frstor
ds
xchg
cli
and
mov
adc
inc
ret
sub
sub
inc
je
(bad)
inc
hlt
pop
or
or
mov
cmp
push
les
inc
lock
mov
or
mov
data16
or
in
xor
fwait
in
and
jb
inc
sub
nop
sub
sti
dec
sub
xchg
add
sub
jp
test
add
xchg
adc
pop
mov
fcomp
cmp
xor
daa
rcl
pop
and
ret
into
and
jmp
imul
jne
push
test
sub
add
lahf
sbb
adc
sbb
inc
adc
pop
ins
and
xchg
inc
jnp
lds
mov
rcr
pusha
or
xchg
std
das
adc
out
inc
adc
cs
call
pop
loope
add
lds
add
jmp
mov
cdq
sbb
cmps
dec
and
and
shl
in
add
push
shr
inc
push
adc
jmp
jae
inc
pop
push
xchg
cmp
icebp
ins
push
adc
dec
arpl
popa
pop
ror
cmp
lock
cmc
add
add
pop
ret
sti
sub
inc
mov
sub
xadd
xchg
mov
ret
movs
nop
xor
sbb
dec
adc
enter
xor
push
mov
js
aam
push
push
mov
xchg
cld
inc
push
cdq
push
movs
ror
push
nop
pop
xor
mov
jae
ret
popa
movs
test
mov
xchg
mov
xlat
jmp
sbb
dec
scas
outs
mov
adc
fisttp
je
ins
adc
les
lock
retf
cmp
and
ins
pop
fsubr
ret
inc
movs
nop
stc
sub
mov
xchg
test
call
xchg
mov
in
mov
or
aaa
push
xchg
jmp
add
push
push
outs
add
test
mov
push
jl
sub
or
je
add
jo
mov
xor
sub
loope
xchg
add
lods
rcl
shl
mov
push
test
dec
push
jl
jge
data16
cmp
outs
test
daa
dec
lods
or
loope
xchg
aad
dec
call
push
push
add
loop
aad
int3
mov
push
adc
push
add
das
sub
js
movs
push
jecxz
ret
call
jmp
inc
sub
or
test
sub
jg
mov
xchg
(bad)
les
pop
shr
pop
cs
lods
in
push
mov
add
mov
cmp
xchg
scas
pop
dec
add
fadd
push
or
adc
mov
je
pop
or
cmp
cmp
je
rol
pop
add
jno
inc
sbb
adc
jecxz
cld
dec
sti
add
mov
push
adc
sahf
sbb
sbb
and
and
push
fs
and
movs
jno
mov
mov
and
cmps
jne
mov
pop
xchg
push
outs
cmp
sub
rol
pop
shl
inc
mov
pop
sbb
adc
pop
xchg
jmp
mov
ret
push
pop
loop
add
das
in
mov
mov
mov
push
sub
fmul
dec
adc
xchg
or
xchg
adc
add
inc
je
push
je
sub
lahf
add
sbb
sub
popa
je
and
push
dec
movs
pop
imul
call
push
inc
dec
jecxz
xor
add
dec
dec
sbb
push
popa
push
imul
aad
test
sbb
jmp
stc
bound
adc
jl
mov
mov
lea
mov
pop
adc
or
jecxz
push
test
adc
xor
ds
sbb
sub
pop
xor
jmp
and
and
sbb
mov
pusha
fcom
fisttp
pop
stc
and
adc
out
mov
pop
sub
fwait
adc
mov
cmp
test
pusha
ds
push
cmps
mov
fs
xor
cmp
mov
or
push
pop
jmp
fbstp
push
pop
ret
or
call
pop
inc
leave
mov
inc
and
and
fadd
add
js
retf
pop
jmp
add
dec
jmp
aad
in
xor
or
adc
xchg
clc
pusha
add
je
xor
pop
push
or
popf
push
jge
dec
add
mov
dec
pop
ror
pop
xchg
ret
sbb
or
sete
adc
mov
inc
mov
push
rcl
xor
jge
or
rcr
sub
and
inc
mov
jge
aaa
daa
xchg
mov
adc
adc
cmp
xor
(bad)
inc
adc
sub
and
mov
add
sar
adc
pop
xchg
jo
and
and
jbe
fadd
dec
mov
retf
sub
pop
mov
loopne
add
imul
dec
xchg
lods
push
es
loopne
sbb
add
inc
and
rcl
jp
lea
call
dec
ret
sub
fdivr
sbb
mov
xchg
arpl
or
mov
ds
movs
pop
pop
repnz
shr
and
push
pop
lock
push
jo
cmp
sub
dec
and
or
call
sbb
inc
das
jno
retf
push
cmp
loope
push
fnsave
div
xchg
or
xchg
mov
mov
mov
adc
or
sub
loopne
in
lods
inc
aaa
lock
sbb
and
push
pusha
call
push
fwait
inc
mov
cmc
ror
and
and
pop
fwait
scas
jo
cmp
mov
mov
mov
and
ret
lock
xchg
(bad)
xchg
xor
call
shl
scas
sbb
or
xor
mov
mov
or
or
loopne
repnz
sahf
lea
and
inc
xor
aam
cmp
inc
adc
push
xor
fst
nop
xchg
retf
in
nop
add
cs
pushf
movs
cmp
mov
push
movlps
outs
inc
lods
or
in
mov
nop
fisttp
sbb
test
popa
dec
dec
push
sub
xor
push
adc
or
lock
mov
lock
xor
(bad)
and
lds
adc
push
cld
xchg
mov
xchg
cmp
adc
and
add
adc
pusha
push
stos
leave
aam
repnz
retf
or
pop
mov
and
retf
adc
pavgw
inc
xlat
imul
dec
add
push
leave
adc
jo
lock
ror
adc
jno
jecxz
es
dec
aas
adc
dec
add
sahf
sub
adc
loopne
retf
add
jle
adc
sbb
xor
in
adc
pusha
sub
mov
inc
cmp
mov
lea
xor
ror
or
scas
inc
call
js
sub
or
je
rol
jge
push
mov
add
dec
or
jns
sbb
push
push
cli
mov
add
xchg
les
repnz
cmps
leave
adc
je
push
jmp
lods
xor
stc
hlt
(bad)
or
and
mov
test
sub
call
and
jecxz
or
hlt
mov
inc
into
jge
cmps
pop
jb
enter
push
push
pop
adc
or
or
test
inc
inc
pushf
cmp
adc
xor
adc
int
je
es
mov
mov
inc
jecxz
fcom
cs
cmp
adc
lock
call
loop
popa
xor
push
push
add
pop
push
or
mov
stos
sub
pop
jg
js
mov
sbb
out
or
call
sbb
xchg
mov
aad
xor
inc
pop
add
dec
and
mov
lods
mov
shl
repnz
xchg
cld
out
add
popa
dec
dec
sbb
sbb
push
adc
mov
out
je
xchg
aam
xor
xchg
add
or
fild
lea
aam
sahf
mov
pop
add
dec
push
xchg
xor
jae
adc
adc
ret
mov
jmp
pop
xor
or
psubusw
and
sub
call
mov
cmp
icebp
imul
jbe
or
or
inc
adc
cdq
aaa
and
or
dec
dec
jne
cdq
mov
xchg
aam
sbb
outs
mov
xor
sbb
movs
add
icebp
inc
ins
gs
jnp
cmps
or
pop
sub
mov
sbb
inc
mov
add
push
inc
mov
movs
inc
pushf
jmp
stc
inc
add
cmp
in
pop
push
dec
add
rcl
int
mov
jns
add
inc
add
cs
inc
(bad)
in
dec
inc
add
pop
dec
or
adc
push
dec
adc
jo
loopne
sbb
sbb
nop
je
les
mov
mov
push
sbb
loopne
retf
push
jg
cmc
push
push
rcr
adc
jmp
test
jo
inc
pop
nop
int
and
jbe
test
dec
sahf
pushf
ins
int3
ins
int3
loopne
test
rep
push
or
test
jecxz
and
mov
xor
loope
cmp
sbb
dec
adc
inc
and
pop
add
ins
adc
pop
clc
lock
cmps
rol
(bad)
shl
inc
or
push
add
add
push
ret
xor
sub
addr16
xchg
xor
rcl
or
mov
daa
pop
ins
int3
or
les
xchg
mov
xor
adc
push
xchg
add
adc
mov
repnz
push
fcmovbe
mov
adc
xchg
dec
or
dec
sub
add
mov
adc
or
mov
push
or
cmp
sti
and
push
sahf
neg
sub
add
or
mov
mov
call
push
push
ss
inc
dec
mov
addr16
jmp
fdiv
add
inc
xchg
pop
sbb
push
inc
add
lods
cld
add
or
mov
or
xor
dec
cmp
mov
mov
cld
or
push
push
daa
dec
adc
push
aam
cdq
push
inc
add
shl
mov
das
push
loopne
push
inc
js
lock
fcomp
push
or
fs
dec
(bad)
enter
cdq
sbb
adc
pop
outs
inc
in
or
gs
xor
push
nop
jno
ja
mov
ins
aam
leave
cmp
(bad)
xor
and
pop
nop
dec
(bad)
add
xor
enter
inc
pop
cmps
mov
in
and
or
shr
ja
pop
cdq
ficom
cmp
and
aad
adc
(bad)
sbb
adc
mov
es
ror
and
or
std
les
fmul
fwait
and
enter
inc
or
retf
sar
cmp
sub
pop
jb
(bad)
hlt
pop
js
enter
pop
push
lock
xor
cmp
out
cmp
or
lock
ds
shl
fisubr
ins
ror
add
mov
mov
jmp
and
sub
(bad)
push
rol
fucomp
or
xor
ins
mov
adc
jp
dec
imul
in
or
jb
or
out
or
test
loope
pop
scas
into
add
std
aaa
or
lock
adc
into
rol
ds
jmp
mov
sbb
fcomp
sub
adc
fsub
jle
(bad)
(bad)
leave
fcom
fld
dec
inc
pop
cmp
xchg
fimul
mov
sub
fucomp
pusha
inc
fld
adc
jno
fsubp
jmp
push
push
or
sbb
es
aaa
xor
(bad)
push
fsub
mov
int
(bad)
push
lock
mov
pop
jne
movzx
data16
mov
fcom
fcom
aaa
les
out
push
cmp
xor
fucom
and
sahf
xor
(bad)
int3
ss
sar
or
sbb
imul
out
loopne
in
add
sub
shr
frstor
inc
xchg
and
leave
jmp
test
push
and
into
and
(bad)
mov
or
retf
mov
push
shr
ins
adc
fcomp
mov
outs
add
jecxz
out
cld
test
push
sbb
mov
mov
push
dec
cmp
clc
xchg
mov
push
scas
in
mov
stc
call
push
retf
lock
or
outs
pop
popa
xchg
push
das
sbb
loope
mov
pusha
push
cmp
out
aas
push
sbb
sbb
and
sbb
fst
in
inc
jns
fstp
pusha
adc
sbb
mov
or
or
cld
bound
int3
cmp
movs
or
add
mov
add
mov
inc
add
ret
ror
jbe
pusha
(bad)
jbe
fs
pop
mov
pop
or
add
pop
fldcw
test
sbb
outs
idiv
ret
or
stc
push
xor
cmp
fcom
ss
repnz
add
fdivp
fxch
and
sbb
jmp
jo
sub
fxch
or
and
adc
push
xor
add
movs
mov
add
ret
adc
inc
nop
mov
frstor
ins
sub
jb
fild
shl
popf
sbb
test
fucom
pop
jge
xor
sbb
loop
sti
mov
fsubp
fld
fdivp
fst
retw
fsub
mov
in
rcr
ss
xchg
inc
xchg
movs
retf
stos
adc
xlat
hlt
cli
gs
pop
fsubrp
pushf
(bad)
shl
fmulp
idiv
lea
push
sbb
cmp
sbb
add
je
jge
adc
or
adc
test
lods
jae
add
xchg
jge
xor
add
mov
jecxz
rcr
adc
(bad)
dec
pop
xchg
xchg
dec
scas
dec
lods
fwait
jecxz
les
or
popa
(bad)
cmps
test
shl
push
(bad)
sbb
mov
adc
cmps
mov
mov
fcmovnbe
retf
mov
es
stos
xor
mov
ret
add
mov
les
leave
js
mov
hlt
fadd
push
rcr
int3
pop
add
out
push
fdiv
push
mov
sbb
ins
push
or
or
cmp
dec
pusha
adc
fiadd
jmp
push
(bad)
and
adc
add
or
mov
mov
clc
imul
jl
inc
stos
or
inc
cmp
adc
sub
daa
adc
clc
mov
mov
data16
shr
shr
adc
dec
push
ret
cmps
xchg
enter
retf
aaa
ret
xchg
dec
sub
fmul
repnz
retf
jnp
fmul
push
and
movs
mov
add
aam
adc
sbb
pop
sub
adc
cmp
clc
add
xlat
popa
jno
sbb
add
or
push
movs
ret
retf
je
mov
push
pop
adc
pop
enter
mov
lock
push
pop
ret
mul
and
or
push
inc
fld
pop
in
add
jp
sti
outs
add
movs
xor
xor
sub
mov
sub
pusha
adc
pop
movs
inc
and
and
rcl
inc
shr
ret
cs
shr
push
aam
dec
mov
mov
sub
sahf
mov
sbb
dec
sub
push
dec
sbb
out
mov
jg
pop
out
push
jbe
or
inc
inc
jne
mov
icebp
icebp
xchg
mov
inc
not
or
in
add
adc
ror
test
or
push
je
or
inc
cmp
repnz
pop
dec
leave
pop
mov
jae
push
add
ins
aam
sub
nop
lea
movs
jne
sub
inc
cmps
clc
add
bound
cmp
ret
sbb
das
mov
dec
(bad)
int3
aam
dec
fadd
or
cmp
gs
xchg
in
mov
movs
lock
pop
mov
jmp
arpl
lds
sub
dec
in
push
jmp
je
shr
inc
fcom
repnz
ss
mov
inc
cs
pop
jbe
les
dec
fisttp
jmp
adc
inc
or
sbb
adc
adc
dec
fwait
pusha
ret
dec
sub
out
push
push
inc
or
lock
popf
mov
not
jg
jle
mov
ss
and
cwde
sub
push
adc
mov
bound
adc
add
fdivp
pop
outs
mov
je
sbb
push
add
and
repnz
or
inc
sub
xor
mov
rcl
sub
iret
adc
add
sub
mov
adc
push
mov
cmps
xor
sbb
jns
push
add
jno
pop
rol
cld
sar
inc
add
inc
or
inc
loop
adc
ins
dec
shr
pop
xchg
push
pop
jp
ins
das
dec
mov
sbb
and
das
pop
adc
call
fdiv
xor
cli
and
and
adc
inc
inc
xchg
cmp
cwde
and
out
inc
movs
jle
cmp
test
inc
dec
and
add
inc
lods
sub
and
push
in
(bad)
mov
and
(bad)
popf
(bad)
daa
fcom
daa
push
pop
and
xor
mov
add
mov
mov
dec
adc
mov
stos
in
scas
adc
clc
jae
hlt
push
and
xchg
inc
mov
and
or
jb
inc
cmp
je
(bad)
mov
int
mov
nop
(bad)
lea
sbb
sbb
repnz
sbb
scas
aad
jb
repz
hlt
or
jl
xor
pop
mov
rcr
shl
xor
loop
mov
inc
mov
dec
dec
sub
or
sub
mov
inc
mov
ds
(bad)
mov
pusha
mov
les
shr
pop
js
adc
and
jne
fistp
sbb
push
neg
aam
push
inc
push
mov
jo
out
inc
mov
in
mov
or
retf
mov
jle
sub
fldcw
xchg
out
fcom
fs
dec
xlat
add
push
daa
dec
jmp
xchg
mov
mov
in
fild
and
in
sti
sub
and
pop
sahf
in
shl
mov
add
call
cmp
or
xchg
cmp
jb
mov
xchg
shl
and
adc
cmps
and
rcl
adc
adc
xchg
loope
xchg
scas
add
or
xor
jp
jl
mov
xchg
jbe
or
sub
mov
xor
nop
adc
sub
push
xchg
and
or
xchg
push
push
adc
xchg
push
inc
push
xchg
mov
inc
call
into
push
xor
int3
push
xchg
xchg
rcl
mov
fidivr
scas
cs
jmp
mov
js
add
and
fcom
int3
sar
sub
clc
int
out
neg
lea
cmp
loopne
dec
mov
int3
jl
inc
lods
out
lods
sbb
or
mov
cld
pop
aaa
out
jmp
dec
mov
sbb
mov
mov
sub
hlt
out
push
jle
cld
mov
inc
add
push
pop
xlat
inc
pop
imul
jle
enter
in
mov
adc
add
sub
push
sub
add
int3
add
mov
mov
repnz
add
movs
xchg
(bad)
add
cmp
inc
rol
bound
cmp
cwde
push
outs
mov
inc
ja
nop
and
add
or
xchg
dec
jecxz
mov
(bad)
add
sub
popa
pop
mov
shr
rol
in
mov
dec
test
sub
jbe
sbb
inc
jo
inc
shl
shl
int3
mov
jae
mov
in
mov
push
push
add
call
pop
aam
or
sub
nop
fs
cmps
mov
movs
enter
cs
loop
fdivr
sub
or
cmp
adc
fild
add
popf
add
sbb
dec
sbb
std
adc
pop
push
pusha
mov
jnp
add
test
out
push
push
test
jmp
sahf
int3
jnp
ins
(bad)
adc
jnp
stc
sub
add
add
xchg
outs
sub
jb
sbb
xlat
inc
loopne
sub
or
add
mov
sbb
lods
pop
or
mov
rcl
mov
fadd
inc
inc
rcr
nop
mov
ret
mov
pop
dec
cmps
cmp
enter
sbb
test
sbb
nop
push
cwde
mov
neg
inc
push
xor
cld
sbb
jne
test
jbe
and
add
call
outs
inc
sub
push
add
icebp
movs
je
mov
dec
mov
push
push
inc
xchg
int
push
or
xor
or
jge
xor
inc
add
lods
push
jb
pop
inc
or
add
in
mov
pop
je
sti
lea
mov
pusha
adc
adc
aam
dec
test
in
sub
das
push
inc
test
(bad)
cmp
dec
adc
push
fild
push
in
or
ins
int3
adc
data16
ret
lock
add
enter
stos
shl
shl
inc
push
add
jle
loopne
push
inc
add
jle
fldcw
push
dec
loopne
fcom
data16
sub
cld
and
add
sar
sar
(bad)
sti
into
sub
sub
xor
test
jo
sbb
xor
or
je
stos
cs
add
push
cld
inc
jecxz
jmp
in
or
dec
push
adc
cmp
cwde
out
inc
mov
(bad)
fadd
mov
shr
dec
sbb
adc
ds
je
xor
inc
pandn
and
adc
adc
add
xor
int3
movs
test
retf
jne
adc
or
dec
repz
add
sbb
shr
daa
sub
mov
add
sub
jns
fst
jae
test
pop
inc
in
ret
or
test
cmp
mov
sbb
or
lock
addr16
aaa
in
test
inc
xchg
mov
ins
jmp
int3
cmp
or
mov
cmps
aam
add
rol
ret
es
sub
push
test
mov
push
sbb
xchg
dec
push
rcl
call
ins
sub
cmps
sbb
mov
iret
rol
jo
(bad)
lods
xlat
call
shl
fsubr
mov
test
push
mov
and
(bad)
imul
pop
pop
push
sbb
lock
hlt
je
ret
or
es
out
rol
jae
mov
dec
and
or
pop
in
xor
sub
adc
add
loop
or
fld
or
xor
xor
adc
and
jne
leave
push
or
fwait
ja
add
sbb
mov
bound
jl
mov
push
leave
add
add
mov
fild
pop
shl
mov
or
sti
cld
fidiv
fdiv
jno
imul
push
mov
xor
add
adc
add
enter
add
push
int3
int3
outs
fnstsw
or
push
into
into
fsubr
sbb
push
call
and
bound
mov
dec
xchg
js
add
call
retf
mov
add
dec
retf
lods
retf
pop
js
nop
jg
fdiv
ret
push
or
in
adc
mov
fs
and
sbb
or
add
cld
(bad)
sub
pop
enter
add
xchg
lea
add
adc
stos
mov
in
ds
mov
xchg
add
push
mov
mov
pop
xchg
or
ret
fwait
pop
cmp
or
xchg
je
push
add
push
mov
enter
xchg
push
movs
add
cmps
hlt
push
inc
add
push
mov
neg
cwde
adc
push
add
or
pop
scas
fstp
push
mov
inc
and
loope
movs
jle
sub
les
xchg
jp
push
jg
or
fiadd
leave
ins
dec
push
sbb
jne
or
adc
or
je
es
lahf
fidiv
mov
movs
cmp
mov
je
cmps
sbb
add
rcl
add
rcl
add
retf
rol
add
repz
lods
jnp
sub
xor
xchg
cmp
or
dec
add
and
and
fsub
loopne
inc
call
inc
push
dec
in
dec
xor
ret
out
add
mov
inc
mov
inc
inc
es
repz
xchg
cmp
stc
dec
xor
push
fadd
push
loopne
push
push
leave
mov
pop
lfs
mov
scas
cwde
jo
fild
sbb
rcr
adc
lods
pusha
sbb
cmp
sbb
ret
adc
sbb
je
cmp
ss
push
push
adc
popa
inc
sub
sbb
add
fs
outs
aad
cli
fs
fmul
loopne
or
push
mov
adc
rcr
and
ds
inc
dec
add
dec
add
outs
pop
push
enter
lock
inc
add
xlat
es
test
mov
popf
test
xchg
push
push
xchg
adc
xchg
xor
adc
pop
sub
mov
jne
push
mov
ins
xlat
out
outs
into
push
pop
loope
retf
lods
enter
out
jo
aaa
(bad)
enter
fcom
bound
fimul
adc
ja
enter
sub
inc
bound
jg
jl
or
xchg
fmul
jge
xchg
pop
or
bswap
jl
movs
add
in
aad
sbb
push
nop
lods
xor
cmp
and
inc
jno
popf
retf
rol
xor
xor
pop
js
shl
hlt
(bad)
outs
mov
sub
dec
add
test
dec
aam
and
and
loope
inc
rol
or
mov
add
xchg
push
cmc
cwde
in
mov
loopne
ficomp
jmp
call
int
cmp
stc
jge
fld
rcl
push
push
test
xchg
in
mov
stos
imul
sub
ror
pop
push
fcomp
not
adc
mov
inc
push
inc
test
cmc
xchg
mov
icebp
xchg
gs
sbb
jmp
out
or
pushf
loopne
call
add
arpl
call
push
imul
pushf
cmp
(bad)
push
cmc
mov
cmp
jmp
inc
inc
mov
addr16
mov
add
adc
in
test
adc
mov
icebp
pushf
fmul
sbb
pushf
jmp
mov
mov
int3
imul
push
repnz
xchg
jle
and
and
les
ror
push
xchg
scas
arpl
push
mov
sub
mov
pop
adc
bound
shr
pop
mov
pop
mov
imul
ret
cmps
sbb
es
enter
cmp
push
lods
(bad)
test
les
stos
inc
std
test
add
je
sbb
(bad)
jge
jbe
add
push
dec
jae
push
call
repnz
jecxz
sub
dec
add
add
xchg
push
adc
ins
test
mov
sub
div
cli
int
xor
lock
and
inc
cli
add
fistp
lods
cmp
popa
ss
les
cmp
cmps
inc
cmp
or
jmp
imul
dec
xor
jmp
sbb
call
sbb
pushf
shl
mov
jle
mov
mov
adc
mov
imul
cmp
rcr
add
jbe
test
jbe
dec
mov
pop
inc
test
je
push
pushf
outs
push
test
adc
pushf
cmc
or
inc
scas
iret
shl
mov
fcom
inc
mov
pop
pop
mov
shr
and
and
or
mov
test
cs
sub
imul
repz
and
mov
lock
iret
hlt
push
int3
and
jle
mov
popa
or
dec
push
ror
std
mov
adc
inc
(bad)
(bad)
test
fld
dec
sbb
jecxz
pop
mov
inc
fld
sbb
cmc
js
fsub
pusha
fsub
cmp
mov
pop
fxch
sub
push
push
enter
jecxz
test
fld
mov
adc
xchg
sbb
mov
sub
sub
retf
js
test
mov
sahf
jl
fadd
(bad)
mov
jl
test
int
mov
jl
jne
push
js
loopne
scas
fld1
fsubp
sbb
pop
or
inc
fmul
pop
xchg
and
xchg
xor
imul
test
sub
cmps
cli
inc
retf
ins
mov
(bad)
(bad)
jg
inc
adc
add
mov
add
dec
jne
jne
dec
(bad)
jmp
test
lea
adc
popf
ins
cdq
sub
inc
mov
rep
mul
adc
pop
sbb
pop
popa
mov
and
mov
sub
and
dec
test
push
and
cmp
xor
xchg
jge
mov
sbb
mov
stos
mov
nop
dec
push
call
and
cmps
fldenv
inc
mov
cwde
or
mov
aam
int3
pusha
ins
mov
fdiv
enter
inc
add
jl
(bad)
les
mov
and
and
daa
sbb
loopne
sub
mov
inc
vpcomb
fidiv
fild
adc
movs
or
shl
sub
and
cmp
in
out
sbb
pushf
loop
adc
inc
adc
push
jo
in
mov
sub
cmps
push
inc
test
xadd
leave
into
sub
leave
sbb
movs
cld
or
in
xor
shl
push
pop
pop
lea
mov
jmp
adc
pop
lahf
clc
adc
add
jno
enter
(bad)
popa
jno
xchg
sub
imul
aas
sbb
dec
push
xchg
inc
jp
cs
sqrtps
out
shl
shl
lock
stos
retf
sub
and
xchg
pop
enter
xchg
mov
push
xor
ds
sub
aam
inc
push
inc
adc
lods
cmp
mov
pop
jmp
sbb
in
shl
xchg
xchg
adc
adc
std
sbb
xor
jno
loop
dec
std
add
or
or
xor
push
mov
pushf
xchg
xchg
pop
or
xor
cs
sub
das
rol
test
arpl
mov
pop
fnclex
adc
sub
add
push
xor
in
les
aad
mov
mov
xlat
sub
call
icebp
jle
aam
add
and
dec
sbb
mov
pop
call
sahf
mov
add
mov
push
add
jmp
lds
pop
sub
xchg
ficomp
add
cmp
cmp
aam
jne
in
dec
call
cwde
and
inc
sub
fst
pop
push
xchg
cmp
push
push
js
mov
stos
adc
retf
jmp
jge
cmovg
fsub
adc
test
cmp
add
dec
xor
mov
push
js
jle
int3
nop
add
cli
sub
xor
lods
xchg
(bad)
dec
sbb
addps
adc
mov
jl
pop
aaa
pop
cwde
loopne
push
dec
mov
lea
sbb
nop
or
or
outs
stos
lea
fisttp
ret
sub
sbb
and
inc
sbb
or
jg
cmp
jp
or
(bad)
xchg
(bad)
cdq
ror
inc
sahf
and
pop
in
rol
loopne
pop
inc
(bad)
(bad)
push
(bad)
and
push
inc
add
in
xor
or
and
mov
(bad)
jmp
add
aaa
retf
jmp
cmc
call
inc
pop
into
sbb
mov
call
in
les
xchg
adc
rcl
push
jge
(bad)
ror
xchg
outs
cmp
sub
mov
pop
pop
jg
ins
xchg
mov
fistp
pop
lea
push
retf
sub
mov
movs
jbe
jo
test
adc
not
xchg
out
ja
mov
mov
aam
add
sbb
adc
mov
ss
push
movs
pop
into
idiv
add
or
or
add
idiv
test
xor
mov
add
pusha
mov
or
push
gs
mov
xor
and
dec
push
xor
out
adc
enter
mov
test
mov
ret
jmp
fnstenv
out
test
sub
je
out
add
lea
pop
fdivr
cmp
nop
pop
xchg
mov
(bad)
pusha
popa
cmp
and
fsubr
sar
cmp
pusha
in
or
les
dec
test
xor
clc
ror
jl
dec
xchg
cli
jg
add
mov
mov
sub
rol
jmp
add
mov
jbe
jmp
dec
(bad)
fstp
or
gs
jne
sbb
sbb
pop
add
push
cmc
mov
push
fwait
lods
dec
pusha
cmp
inc
mov
(bad)
add
xor
std
or
jae
sbb
or
shr
jmp
and
xor
or
dec
jp
daa
jmp
xchg
scas
call
and
cmp
or
add
lock
inc
mov
sub
icebp
mov
add
in
mov
xchg
je
sbb
pop
xlat
inc
nop
jl
dec
add
test
out
iret
sub
add
xor
jp
and
movs
jns
out
mov
cmp
loopne
xchg
outs
cmp
icebp
xchg
mov
push
in
(bad)
mov
and
and
sub
inc
out
and
int3
jo
dec
and
pop
xor
outs
mov
push
aad
test
mov
mov
xchg
push
xor
lods
cmp
push
ja
mov
dec
out
les
add
pop
mov
popa
sub
push
je
adc
cmp
xchg
pop
or
adc
sub
sub
xchg
dec
sub
movs
xchg
rol
(bad)
pop
bound
or
and
sub
xchg
mov
adc
pop
cmp
adc
jle
jno
or
lock
les
add
test
inc
dec
mov
adc
shl
add
fidivr
ficomp
mov
fisttp
out
push
pop
push
and
sahf
into
dec
in
cmp
mov
jp
mov
sbb
fs
and
and
inc
xor
and
iret
(bad)
adc
fsub
inc
popa
or
push
imul
or
xor
sbb
jb
pop
mov
xchg
or
call
adc
or
ret
or
pop
psubusw
popa
enter
and
popf
mov
add
lods
jb
test
mov
add
dec
inc
cmp
add
adc
and
xor
sbb
or
mov
mov
jecxz
adc
jmp
in
add
push
repnz
sbb
xor
jb
add
add
xor
cmps
aaa
nop
imul
test
pop
cmp
push
xchg
sbb
rol
test
fwait
push
mov
and
cmp
psrld
out
and
dec
std
sub
push
addr16
sub
xor
imul
addr16
inc
mov
xchg
test
jg
xor
and
cmp
add
mov
add
loopne
adc
std
adc
cmp
arpl
loope
adc
imul
xor
or
pop
in
mov
lahf
stos
dec
add
push
add
ds
sbb
cmp
out
jb
jl
ret
xchg
push
xor
and
mov
add
shl
and
xchg
sti
or
mov
or
aam
add
movzx
dec
out
mov
or
mov
add
in
xor
and
js
das
xor
fwait
imul
mov
add
clc
fmul
stos
ret
(bad)
ror
pop
pushf
imul
jge
add
jns
mov
inc
iret
cmp
inc
xchg
loopne
add
xor
leave
inc
add
js
sub
ins
in
jae
mov
sbb
sub
and
mov
sbb
cli
push
add
adc
and
push
and
xchg
cmp
mov
in
and
add
push
dec
ror
push
aas
add
in
jecxz
mov
das
test
mov
dec
sbb
lods
sub
cmc
sub
cmp
cs
(bad)
pop
sbb
xlat
sub
pop
xchg
daa
js
jnp
jno
sbb
mov
or
xor
and
or
mov
inc
jmp
xor
mov
int3
and
cmp
dec
adc
in
jno
cs
outs
sahf
inc
or
dec
pop
xor
aam
pop
mov
add
or
ds
pop
add
inc
xchg
push
leave
push
dec
jmp
retf
int3
inc
jo
add
std
jmp
lock
dec
push
push
jae
lods
pop
scas
(bad)
jns
rcr
jbe
push
xchg
out
fs
pop
xor
mov
cld
ss
call
dec
or
sub
jmp
mov
xor
cmp
pslld
mov
adc
fdiv
mov
pop
aad
rol
cld
pusha
sub
rcl
or
nop
retf
loope
push
inc
push
add
cmp
or
sbb
std
lock
xchg
fdiv
xchg
(bad)
das
jg
mov
sub
js
(bad)
aam
adc
mov
mov
imul
adc
aad
lods
add
imul
retf
xchg
enter
fs
les
fnstenv
cmp
add
push
mov
cmp
loope
xchg
ret
xlat
dec
push
xor
cmp
cmp
sbb
adc
cdq
xlat
dec
sub
xor
sbb
mov
ret
loop
and
imul
adc
mov
or
mov
test
or
inc
stos
or
lock
je
clc
cwde
mov
jcxz
add
iret
aas
push
dec
lds
call
adc
mov
scas
add
aas
inc
out
daa
mov
add
mov
or
inc
ret
mov
ror
or
int3
sbb
call
imul
push
push
daa
inc
mov
push
xor
sub
lahf
mov
fdiv
sbb
pusha
or
dec
mov
into
ret
pop
bound
ds
adc
or
add
popa
push
fsubr
arpl
sub
mov
shl
outs
jnp
fstp
je
mov
adc
push
lds
cli
loopne
adc
movs
or
lea
push
pop
mov
inc
jmp
sbb
loope
adc
push
sub
cmps
jno
cmps
aad
mov
sub
dec
cmps
push
inc
cs
xlat
or
and
nop
and
leave
(bad)
pop
enter
(bad)
fcmovu
mov
and
inc
outs
push
inc
retf
cmps
and
hlt
les
ja
inc
test
shl
mov
xchg
push
loopne
add
adc
ins
sub
mov
stc
inc
rcl
mov
sbb
xchg
ins
jmp
and
dec
add
test
enter
pop
test
jecxz
xor
push
js
scas
cmp
jne
cmp
push
jmp
push
xchg
mov
aas
out
jne
adc
jb
loop
pop
neg
jb
cmp
ror
leave
test
jbe
mov
pop
es
cmp
sbb
in
add
enter
std
push
and
mov
scas
dec
sbb
sar
add
sbb
add
inc
nop
imul
lods
sbb
push
repnz
push
jae
je
adc
push
cwde
pop
or
jmp
ret
cmps
test
aad
es
cmp
lock
push
sbb
jno
cmp
inc
cmp
jl
(bad)
pop
leave
push
ret
sub
and
ret
or
sti
and
push
cmp
ja
sub
js
adc
xor
add
test
adc
or
lock
les
add
aas
adc
xor
cli
test
adc
mov
addr16
(bad)
movs
add
repz
or
loopne
sub
xor
and
dec
dec
sub
iret
clc
push
nop
mov
jl
add
add
rcr
add
push
outs
xor
push
add
add
or
xor
test
mov
and
sub
mov
or
mov
inc
fnstenv
xor
xchg
push
inc
pop
mov
push
stc
add
mov
jl
aam
dec
sbb
(bad)
in
ins
adc
push
dec
ja
icebp
and
shl
sti
shr
dec
arpl
and
or
xchg
aam
addr16
xor
add
xchg
mov
aam
xchg
shl
data16
ficom
sub
js
adc
xchg
sub
imul
cmp
mov
adc
adc
xchg
pop
aas
mov
dec
mov
add
and
or
inc
jecxz
fcmovb
push
dec
lock
push
call
loopne
add
int3
adc
jbe
sbb
or
daa
cmp
cmps
xchg
xor
xor
xchg
into
cmp
or
lock
ret
dec
pop
test
popf
imul
ss
xor
lea
leave
sbb
and
xor
addr16
fwait
ja
or
push
sub
cli
jmp
mov
jns
sbb
jae
sbb
loopne
jecxz
inc
adc
pop
adc
add
xor
inc
fcom
xchg
retf
and
push
mov
xor
push
or
adc
inc
or
test
inc
push
push
test
cmps
mov
ss
iret
pushw
add
xchg
sbb
xchg
cmp
outs
ror
fs
xor
mov
in
mov
in
mov
mov
inc
xchg
xchg
jns
adc
push
xchg
test
in
inc
pop
outs
mov
and
lods
mov
pop
mov
repz
pop
inc
imul
xchg
add
je
je
add
cli
js
cmp
jle
(bad)
cmp
pop
mov
jmp
push
sbb
inc
pop
inc
sub
lea
push
sub
shr
sar
nop
and
dec
add
sub
and
mov
xor
xor
or
add
popa
xor
add
xor
and
arpl
loop
sbb
outs
push
mov
inc
out
jmp
add
add
pop
rcl
sub
mov
sub
jmp
inc
jl
xchg
pop
call
adc
and
xor
adc
add
sbb
add
fwait
daa
pop
mov
retf
js
sbb
out
add
inc
sub
dec
add
inc
xchg
outs
add
adc
add
fnstenv
push
mov
pop
dec
loope
xchg
inc
je
movmskps
call
cmc
aaa
pop
or
sbb
je
and
(bad)
push
das
test
push
dec
mov
sar
movs
xchg
mov
jns
leave
nop
adc
loopne
sub
mov
scas
and
adc
imul
push
out
push
imul
(bad)
xor
add
or
mov
cmp
aas
and
cmp
cld
jl
jmp
dec
mov
and
or
cmp
adc
mov
mov
xor
sub
push
lea
mov
es
adc
mov
mov
and
sbb
stc
xor
test
push
jp
das
sub
popa
add
xchg
not
cdq
add
(bad)
and
sbb
xchg
sub
or
jecxz
pop
ins
nop
cwde
mov
push
xor
push
inc
dec
sub
or
and
add
lock
jmp
mov
into
push
xor
cs
scas
aaa
or
adc
enter
push
pop
imul
mov
push
pop
add
sub
inc
mov
fst
or
daa
or
jne
dec
inc
mov
inc
jmp
mov
or
xor
push
or
pop
int
stos
mov
fist
call
lea
imul
push
xchg
push
jge
add
xor
add
iret
test
pop
ins
mov
add
jbe
jb
scas
fcom
pop
push
and
cmp
dec
stc
add
mov
dec
add
mov
mov
xor
sub
xchg
mov
xchg
jbe
and
mov
(bad)
enter
xchg
xchg
or
mov
(bad)
imul
popa
leave
stc
pop
cld
fild
test
iret
aam
mov
dec
mov
jns
sar
test
fild
sbb
sbb
dec
add
iret
push
sbb
cdq
and
adc
stos
inc
iret
sbb
xchg
aaa
sbb
push
out
pushf
push
imul
pop
pop
push
jmp
adc
add
push
fs
jne
(bad)
xor
sbb
xor
clc
jecxz
xor
inc
call
xor
fstp
mov
jo
push
xor
push
mov
ficom
push
add
enter
sub
ret
add
push
or
sub
sbb
push
pop
xor
addr16
xadd
add
xchg
ins
rcr
js
fwait
dec
dec
ins
mov
jne
add
and
xor
add
cmps
ss
add
and
adc
sbb
mov
leave
in
pop
mov
add
and
sub
jbe
ror
lahf
inc
loope
mov
or
dec
aad
xor
push
xchg
in
out
jno
addr16
xor
pop
push
and
out
movs
add
fist
inc
inc
test
adc
cmp
cmps
and
pop
or
cwde
or
jb
inc
or
lods
adc
nop
push
iret
movs
add
movs
adc
clc
add
xchg
les
sar
jmp
push
imul
rcl
ret
js
push
loope
sub
inc
xchg
add
jns
pop
xchg
fst
sub
sub
jo
xchg
push
xor
inc
(bad)
push
push
add
in
sbb
dec
sbb
test
pop
cmps
jmp
xor
and
(bad)
mov
and
push
inc
mov
mov
inc
pop
pop
fldenv
cmp
data16
dec
or
mov
retf
loopne
adc
jge
rcl
push
adc
add
js
adc
cmp
enter
retf
sub
mov
adc
test
xor
jmp
hlt
or
adc
ja
add
sbb
push
mov
ss
imul
inc
fadd
cwd
cs
test
and
int3
cmp
dec
nop
sbb
dec
sahf
push
lods
cmp
xor
pop
inc
pop
fstp
ret
sbb
sub
das
in
jmp
sub
cli
jmp
ja
cmp
jmp
and
pop
inc
arpl
shl
push
es
sbb
das
dec
mov
or
mov
movs
add
or
test
nop
sbb
jle
push
and
ins
daa
sub
jge
or
dec
pop
adc
dec
push
mov
push
adc
out
jge
xlat
mov
push
and
push
push
pop
mov
add
addr16
add
popa
jl
test
call
or
dec
ffreep
inc
dec
aaa
sbb
or
test
in
mov
repz
or
outs
or
push
test
fisttp
xchg
push
aaa
rcl
jmp
fist
sbb
dec
or
mov
loopne
aaa
push
or
sbb
pop
cmp
sub
inc
cs
movs
mov
xchg
jmp
or
or
add
repnz
aas
mov
xor
mov
(bad)
out
loopne
xor
add
mov
add
mov
cmc
xchg
push
pusha
out
sub
sahf
sub
data16
xchg
inc
pop
jp
cmp
add
dec
dec
xor
sahf
xor
imul
jne
imul
or
xor
xchg
mov
test
ret
lea
ja
push
push
adc
dec
pop
shr
shl
inc
fsubr
ins
cmp
pop
fcmovnu
push
in
sbb
and
add
cmc
mov
pop
cmp
int
out
iret
jae
inc
mov
stos
add
lahf
sub
push
add
test
aad
loope
stos
int
mov
popa
pop
(bad)
clc
inc
sbb
add
or
adc
mov
xor
and
enter
(bad)
sbb
enter
fcom
pusha
imul
pop
pushf
je
daa
inc
sbb
hlt
rcl
ins
add
adc
les
and
pusha
movs
mov
leave
add
test
push
int
inc
mov
test
dec
push
add
mov
inc
and
push
add
push
sub
jp
sbb
or
pushf
fisub
faddp
or
fcomip
sbb
sar
or
jo
dec
ret
lods
push
mov
add
push
out
sbb
pop
bound
lock
or
or
and
add
sub
lock
pop
and
adc
jge
xchg
dec
cmp
and
add
clc
or
and
and
mov
cmps
jo
and
and
(bad)
mov
jmp
cmps
or
sbb
push
loop
lahf
mov
mov
mov
jbe
dec
or
rcr
or
ror
inc
sbb
call
adc
out
mov
or
in
pop
jb
loopne
jmp
inc
cmp
inc
ficom
enter
sub
dec
and
xchg
xchg
or
rcl
ror
mov
movs
or
add
(bad)
and
sub
pop
fcmovnb
je
inc
and
sbb
push
adc
call
jp
xor
push
cmps
xor
pusha
jge
sar
hlt
fdiv
sub
xor
in
loope
sbb
pop
adc
pusha
xor
imul
or
clc
add
je
inc
inc
mov
inc
and
push
adc
jge
cwde
sub
and
or
jge
jecxz
sub
xor
mov
das
and
enter
scas
(bad)
jmp
aas
add
cmp
loop
add
xor
jg
outs
mov
aas
cdq
call
cwde
shl
or
outs
and
mov
test
jmp
les
int
jl
mov
rol
jne
push
jns
add
dec
pop
add
fist
cmp
and
sbb
pop
xchg
int3
cmp
adc
xor
sub
sbb
add
cli
sbb
cmp
nop
popf
les
nop
aas
fnstcw
mov
adc
pop
sub
add
jno
test
mov
or
(bad)
adc
or
ret
push
icebp
fucomi
cmp
sar
ret
mov
and
lods
movs
adc
ins
daa
in
pop
test
nop
push
or
cmp
ds
ss
lock
inc
and
pop
or
pop
xor
xchg
pop
das
fnstsw
cmp
add
loope
sub
arpl
lods
push
test
in
push
push
shr
dec
mov
imul
jmp
xor
inc
inc
bound
nop
lds
or
les
mov
shr
int
lahf
add
imul
and
mov
jne
jle
cmps
cmp
ins
daa
mov
add
enter
sub
mov
dec
in
jo
dec
dec
popa
adc
dec
push
inc
xchg
or
jns
gs
push
add
dec
out
sub
add
or
adc
jno
aam
and
mov
iret
or
mov
ss
push
in
add
mov
lods
add
inc
add
jle
add
or
add
sub
lea
push
test
inc
pop
jnp
push
mov
lahf
fs
xchg
and
adc
leave
inc
push
xlat
sub
adc
rcl
out
rcr
push
and
nop
icebp
in
lods
int
sub
xchg
stos
pop
aam
dec
mov
movs
sub
jmp
cmc
stc
repnz
in
adc
fnstcw
cmp
xchg
sub
mov
push
adc
sub
js
push
pop
fiadd
push
lock
inc
shl
nop
lahf
sti
fidiv
test
pop
pop
pop
bound
aad
mov
ins
inc
push
mov
pop
and
shr
pop
mov
je
loop
add
movs
les
sbb
mov
sub
sahf
mov
inc
aad
xchg
dec
or
adc
push
xchg
movs
test
mov
xchg
xchg
mov
cmp
sub
mov
adc
mov
push
push
cmps
fnstsw
add
outs
aas
js
or
xlat
test
adc
xchg
enter
dec
cmp
adc
mov
mov
inc
mov
shr
movs
test
cmp
mov
xor
xchg
add
fwait
shr
sbb
push
inc
jp
pop
jo
push
push
adc
shl
dec
cli
iret
mov
add
repz
or
inc
stc
sahf
add
adc
pop
dec
dec
aas
xor
ror
jbe
shl
mov
xor
mov
test
jl
ins
adc
add
push
fild
adc
dec
sub
inc
hlt
das
inc
push
or
fincstp
mov
mov
les
ror
xchg
jbe
dec
call
loopne
hlt
or
and
adc
loopne
sbb
and
and
or
inc
or
add
stos
(bad)
das
pop
sbb
adc
adc
daa
or
add
pop
cmp
adc
add
add
mov
push
out
xchg
xchg
inc
rcr
mov
push
iret
in
inc
adc
add
scas
sub
mov
adc
loopne
jmp
inc
stos
loope
add
xchg
sub
das
popa
or
cmp
cmp
sub
clc
xchg
push
or
dec
cmp
imul
inc
test
jl
(bad)
movs
push
or
add
or
xor
push
aam
loope
sbb
sub
test
xor
mov
fnsave
sub
iret
push
or
sub
sbb
xor
mov
sbb
inc
or
dec
in
and
mov
ror
xchg
adc
sub
dec
xchg
cs
add
imul
dec
adc
sub
je
gs
outs
push
adc
je
cli
or
xchg
loopne
push
and
(bad)
or
jno
ret
shl
mov
ins
dec
or
imul
shl
sbb
ja
adc
cmp
sbb
sbb
add
xchg
mov
inc
dec
add
pop
icebp
fild
and
mov
jg
push
scas
das
adc
cmp
daa
ret
lods
pop
mov
stc
or
pop
ins
adc
pusha
cmp
pop
add
dec
adc
sub
add
mov
movs
int3
add
mov
and
mov
mov
add
xchg
dec
add
(bad)
mov
add
daa
dec
or
mov
mov
adc
dec
push
and
in
jo
test
test
es
movs
jle
push
cmps
or
adc
movs
xor
or
in
and
cdq
inc
adc
icebp
or
cs
or
inc
adc
clc
add
mov
mov
cmp
sbb
push
hlt
rcl
mov
adc
fstp
xor
cwde
das
loop
sbb
xchg
ret
dec
xor
test
and
and
inc
cmp
sbb
inc
loopne
mov
sbb
rcl
call
push
fld
and
dec
sbb
add
xor
ss
and
and
fwait
mov
xchg
fldenv
stc
movs
adc
xchg
out
or
or
add
adc
xchg
pop
push
push
dec
int
mov
jecxz
or
mov
loope
push
add
mov
rol
xchg
and
sub
cmp
mov
add
jo
mov
ja
sbb
or
fidivr
js
(bad)
add
in
xor
dec
rcl
cdq
add
pop
stos
adc
jle
mov
inc
sub
out
lock
jo
adc
xchg
in
(bad)
and
pushf
lea
adc
sbb
cmp
test
js
dec
mov
mov
bound
add
dec
jns
inc
add
pop
mov
dec
and
int
dec
test
inc
mov
pop
push
mov
(bad)
mov
inc
rcl
sub
add
test
fdivr
fidivr
pop
adc
ins
and
or
xor
push
mov
cmp
inc
adc
sbb
pop
test
xchg
hlt
pop
retf
mov
adc
xchg
pop
jg
xchg
sbb
or
mov
ror
punpcklwd
cld
and
out
and
test
xchg
xchg
in
cwde
mov
sub
mov
dec
mov
push
or
or
dec
daa
ror
sub
mov
push
push
js
adc
vcmpsd
popf
jne
or
inc
xchg
mov
test
jne
jl
leave
pop
sub
scas
aam
xchg
xchg
and
sar
push
les
dec
or
clc
adc
sbb
adc
data16
xchg
jnp
jnp
or
ins
push
dec
xlat
dec
sbb
ja
jb
or
or
and
push
aaa
jecxz
jmp
sbb
sub
sub
inc
xor
pusha
xor
push
sbb
add
push
mov
(bad)
sub
or
and
ret
rol
out
push
mov
jb
lods
xchg
push
and
jnp
iret
push
cmp
pop
push
aam
es
and
rol
retf
outs
and
loope
push
or
popf
push
fwait
mov
push
leave
mov
or
cs
stos
and
sub
xor
(bad)
rcr
ins
or
adc
pop
mov
and
mov
hlt
in
mov
xchg
lods
ss
dec
push
shr
jl
fisubr
jle
lahf
sbb
and
add
sbb
sub
mov
push
ror
js
jnp
xor
xchg
mov
mov
or
popa
cmp
push
add
adc
ret
outs
dec
fdiv
lock
fmul
dec
ret
movs
test
js
das
cmp
fcom
push
push
jne
inc
sbb
rcl
fiadd
cmps
pusha
inc
push
jbe
test
and
in
ja
adc
mov
daa
call
imul
push
sub
and
movs
mov
xor
and
sbb
jne
inc
pushf
arpl
test
ret
retf
xchg
xor
pop
or
push
xchg
cmp
aam
(bad)
push
stos
cs
dec
or
inc
bound
mov
xchg
mov
push
sub
test
lods
prefetch
and
cmp
fist
push
sbb
lods
jg
rcr
out
mov
add
inc
mov
xor
test
dec
and
push
sbb
int3
popa
cld
or
test
cmp
mov
mul
add
cwde
xor
sbb
mov
push
xor
mov
enter
ins
movs
lahf
push
or
mov
cmp
adc
or
mov
mov
pop
sti
(bad)
sbb
cmp
fdiv
stos
mov
rcr
repnz
movs
je
adc
xchg
add
nop
adc
and
xor
add
xlat
out
and
rcl
and
popf
sub
je
sub
jne
sub
hlt
mov
push
in
and
mov
dec
movs
jne
je
mov
push
mov
lods
pop
adc
xor
and
movs
mov
sbb
pop
xchg
cmp
movs
cmp
dec
jecxz
push
adc
mov
mov
push
dec
and
test
ss
and
nop
push
cmp
mov
fwait
sbb
mov
inc
cld
cdq
lahf
mov
les
enter
jmp
rol
dec
inc
sbb
adc
jl
jmp
mov
add
fmul
jo
sbb
in
outs
adc
and
add
push
push
ror
xor
pop
or
mov
xlat
imul
inc
cmp
xchg
ja
fsubr
inc
push
or
icebp
adc
sub
test
dec
scas
movs
mov
dec
pop
or
lods
mov
adc
js
mov
push
inc
aad
pop
sub
enter
in
or
and
adc
jae
shl
hlt
js
add
pusha
movs
je
mov
add
sbb
adc
fadd
add
mov
jo
shl
or
inc
div
add
mov
mov
mov
mov
cdq
add
and
dec
lea
dec
or
movs
adc
retf
jns
push
jmp
push
push
or
cs
mov
jmp
xor
gs
enter
xor
jg
inc
cmps
push
mov
aaa
cmp
inc
mov
push
ret
lahf
mov
test
mov
inc
lods
test
or
fld
xor
iret
and
mov
pushf
push
adc
pop
(bad)
loope
int3
add
ficomp
jmp
push
jecxz
inc
push
test
out
inc
lea
sbb
sub
pop
addr16
mov
pop
xor
addr16
adc
sub
aam
test
cmp
pop
sbb
inc
adc
shl
scas
jl
add
mov
sbb
lds
mov
push
(bad)
test
cmp
in
inc
mov
and
pop
mov
sub
out
push
xor
sbb
cwde
shl
lds
gs
mov
xlat
(bad)
or
ret
pusha
mov
add
sub
retf
or
in
rol
test
mov
mov
pop
ret
pusha
lea
mov
cdq
mov
push
and
inc
scas
ds
aaa
sub
xchg
sub
cmps
mov
xlat
aad
or
mov
dec
and
dec
and
lahf
shl
mov
sub
fdivr
xchg
xor
jecxz
inc
sbb
cmp
test
or
pop
push
mov
xchg
cli
pop
cdq
sub
aad
xor
enter
mov
jl
add
lahf
es
push
(bad)
or
rol
inc
lods
pop
mov
cs
in
repz
xchg
sbb
mov
push
imul
sbb
push
pop
xchg
push
sbb
dec
adc
mov
adc
adc
lods
sub
vpsrad
les
pop
mov
push
push
inc
add
and
dec
sbb
mov
shl
pop
mov
adc
add
sbb
adc
cmp
xor
out
adc
imul
stc
cmc
xor
pop
gs
jp
ret
mov
add
jle
push
aam
daa
add
adc
push
or
inc
cmp
arpl
xchg
int3
and
imul
std
popa
xchg
mov
mov
jmp
ror
cld
mov
ja
cld
inc
or
sub
loopne
cs
adc
push
dec
or
or
dec
xchg
jmp
inc
mov
cmp
and
popa
dec
mov
sahf
movs
push
xchg
into
pop
pop
movs
or
cmp
mov
xor
mov
sar
push
or
pop
scas
xor
sbb
inc
mov
add
fadd
es
pop
xlat
jae
push
push
ret
or
adc
sbb
mov
or
jmp
pop
cmp
inc
ds
xor
mov
mov
enter
mov
mov
cdq
fimul
int3
adc
shl
xchg
mov
pop
fisttp
pop
ret
jmp
fcom
push
rcl
cmp
push
idiv
and
xlat
retf
push
lods
sub
movs
and
cmp
ja
(bad)
sub
mov
rcl
movs
push
xchg
pop
pop
fistp
mov
or
inc
and
and
inc
cmp
push
daa
data16
shr
loop
in
inc
mov
je
mov
shl
mov
sbb
mov
ins
pop
or
or
and
push
das
pop
sbb
mov
mov
gs
sar
mov
das
mov
cmp
add
(bad)
outs
dec
imul
pop
adc
or
sbb
xchg
push
mov
sub
sub
inc
pop
lods
and
push
pop
mov
add
inc
dec
dec
rcl
mov
and
enter
lock
fs
cmps
movs
adc
xor
and
fisub
mov
mov
sbb
add
sub
adc
fnstenv
inc
call
sub
pusha
adc
jne
mov
or
or
sub
retf
or
add
mov
in
push
fadd
sub
sar
or
or
lods
add
jno
sbb
and
inc
or
(bad)
es
mov
neg
ficom
adc
sbb
nop
push
adc
leave
sbb
sub
add
push
fstp
ret
rcl
test
inc
mov
add
lahf
out
dec
loope
xor
mov
and
add
outs
loopne
data16
jge
or
and
imul
or
out
sub
inc
aam
adc
les
retf
adc
and
inc
jecxz
jg
xor
test
je
stc
je
pop
punpckhwd
fisttp
sub
in
mov
stos
or
in
mov
xor
xor
loop
xor
cdq
jb
jmp
push
mov
scas
mov
sahf
aad
imul
inc
pop
adc
imul
movs
outs
nop
cmp
or
dec
retf
stos
adc
jecxz
retf
pop
push
mov
mov
ss
adc
cmps
add
(bad)
cmp
(bad)
inc
int
(bad)
mul
sub
cmps
xor
int
and
inc
ret
lock
sbb
and
mov
and
pop
fimul
dec
loope
out
fild
sti
xor
fs
add
lods
imul
outs
addr16
adc
adc
lods
mov
push
adc
aam
jnp
push
dec
push
mov
lods
or
add
js
adc
and
(bad)
repnz
mov
add
ret
inc
(bad)
pop
or
pop
inc
jle
mov
or
sub
sbb
rol
mov
dec
lods
or
add
jns
fadd
and
jl
repnz
or
cmps
loopne
inc
push
dec
jnp
sbb
sbb
sahf
ret
jmp
push
aam
out
call
push
or
fild
fstp
jne
jne
and
movs
dec
inc
sbb
rcl
xchg
popf
add
xor
jns
cmp
add
aas
mov
sub
jns
xchg
inc
sub
sbb
inc
mov
popa
imul
cli
add
pusha
cwde
or
ins
dec
mov
test
movs
fs
and
xchg
mov
pop
or
rcr
sub
push
in
sbb
push
mov
xchg
lods
add
or
nop
movs
int3
orps
and
mov
push
cwde
xor
jb
dec
sar
ss
mov
mov
inc
sbb
ret
adc
ja
push
aas
inc
xor
ret
and
push
repnz
inc
adc
dec
sub
xchg
inc
ja
outs
xor
add
mov
xor
or
(bad)
mov
fnstsw
mov
fimul
fadd
fucomp
dec
cdq
jmp
sbb
in
sbb
sub
popa
xchg
pop
sbb
adc
movs
ins
push
sub
xchg
sbb
adc
fnstcw
lahf
sbb
lods
lods
inc
lods
call
(bad)
cli
mov
and
ret
nop
jp
into
add
out
mov
mov
mov
fneni(8087
sub
sbb
xchg
stos
pandn
sub
mov
sbb
aaa
loopne
iret
mov
cs
xor
and
sub
pop
push
fld
imul
add
add
iret
ror
fsub
push
pop
push
pop
add
cmp
in
adc
inc
pushf
loopne
call
(bad)
call
outs
sar
cmp
jmp
retf
enter
dec
xor
lock
ss
xor
xor
mov
cdq
cdq
push
xchg
test
dec
push
adc
ret
dec
adc
sar
adc
sbb
xor
iret
or
leave
and
or
outs
sub
mov
test
adc
shr
push
sub
jne
test
jb
sub
or
fldenv
mov
inc
and
movs
pop
pop
sahf
inc
push
add
aam
ins
mov
jb
adc
(bad)
arpl
jb
enter
or
push
js
aam
sbb
jno
pop
xor
ins
ror
sbb
vpunpcklqdq
das
mov
sub
push
mov
cmovbe
arpl
fst
jo
mov
inc
shl
pop
push
into
xor
scas
scas
sbb
push
push
cmps
les
shl
addr16
mov
outs
sub
mov
adc
movs
in
in
push
push
adc
mov
lds
or
xor
pop
add
loopne
push
mov
xchg
push
ins
movs
shl
and
inc
loope
xor
popf
adc
das
dec
add
mov
std
xor
pop
push
pinsrw
(bad)
and
sbb
or
sub
fild
lahf
adc
(bad)
ror
jne
mov
xor
in
dec
call
sub
fcomp
mov
adc
xchg
xor
aas
jnp
add
adc
aam
push
aaa
jp
loopne
or
repnz
mov
fmul
add
and
cmps
mov
repnz
inc
sub
test
loope
fimul
inc
lock
ret
sub
lock
mov
or
mov
xlat
(bad)
or
sbb
add
retf
fadd
scas
mov
and
retf
xor
cli
nop
ins
mov
movs
fwait
test
mov
mov
and
push
jne
das
cmp
and
sub
out
mov
sbb
mov
push
or
push
mov
and
add
or
mov
push
rep
add
sbb
xor
cs
mov
xchg
into
cmps
mov
movs
loopne
loope
retf
xor
push
xchg
fld
cdq
mov
inc
push
xchg
jecxz
xlat
aaa
aam
sbb
ret
cmps
mov
or
rol
imul
mov
rol
jae
push
dec
xor
pop
jmp
or
(bad)
lock
jmp
sub
xchg
sub
push
shl
xchg
jnp
dec
xchg
push
jns
cmp
jp
adc
rol
mov
push
or
push
retf
(bad)
inc
mov
fmul
mov
dec
lock
(bad)
mov
sub
mov
xor
jne
imul
movs
sbb
jge
enter
iret
scas
dec
fimul
jo
sbb
sbb
sbb
pop
push
mov
lea
mov
int
test
js
sbb
or
xchg
mov
or
ror
fcom
pop
push
mov
ror
xchg
ret
and
cmp
fwait
push
mov
or
push
imul
mov
cmp
ins
enter
int3
add
rcr
pusha
in
xchg
fistp
imul
cwde
inc
ins
movups
cwde
fst
and
xchg
call
mov
jns
rol
into
xor
sbb
test
js
test
rol
mov
sub
sub
dec
retf
mov
and
mov
cmp
xchg
sub
shl
js
inc
jmp
xor
lock
inc
xchg
lods
add
xchg
and
or
leave
xor
movs
fld
jb
mov
push
push
mov
adc
iret
int3
int3
lahf
mov
push
ror
sub
add
add
imul
inc
arpl
push
les
adc
and
jne
cmp
push
push
cs
or
sbb
pop
in
jo
and
add
push
adc
call
or
pushf
mov
ficomp
push
cmc
sbb
rcr
bound
or
les
and
into
repz
imul
mov
mov
add
fsubr
test
sub
fs
shr
xor
enter
inc
mov
ins
mov
out
mov
inc
nop
add
cwde
imul
mov
pop
rsqrtps
arpl
push
dec
stos
fisttp
push
rol
jl
fwait
leave
and
adc
loop
loopne
mov
jo
cmp
cmp
inc
and
outs
and
retf
shl
fcmove
fcomi
les
mov
imul
int3
sbb
mov
push
shl
adc
adc
ins
pop
fs
xchg
adc
mov
loop
mov
mov
lea
sbb
add
adc
daa
dec
jecxz
or
sbb
add
or
retf
mov
fcom
add
add
add
pop
sbb
inc
sbb
(bad)
xor
jno
pop
pop
in
rcl
shr
mov
shr
sub
mov
xor
(bad)
ror
rcl
pusha
(bad)
daa
dec
imul
add
jmp
test
lods
push
and
test
test
or
mov
mov
rol
sbb
in
mov
lock
dec
add
xchg
cmp
mov
mov
jmp
test
add
cli
xchg
xor
test
sub
mov
in
xor
pushf
aam
sub
pop
dec
and
pop
icebp
lock
shr
and
xchg
mov
ret
sub
imul
test
ja
cmp
adc
inc
push
pop
and
shr
movs
push
fdiv
mov
shr
push
mov
or
mov
mov
push
add
mov
or
and
lods
mov
push
popf
xchg
loopne
test
repnz
mov
adc
mov
les
das
rol
or
(bad)
dec
movs
fscale
add
xor
push
or
mov
xor
cmp
arpl
adc
mov
and
pop
ins
les
cli
int
rcl
test
jb
sub
popf
fisub
sbb
mov
or
pop
mov
dec
mov
hlt
call
adc
ret
mov
movs
les
dec
cmc
mov
cmp
enter
mov
int3
inc
mov
loope
push
fs
xlat
sbb
push
rcr
mov
jnp
adc
test
monitor
(bad)
aad
xor
inc
ficomp
pop
dec
mov
push
arpl
mov
jmp
push
ja
and
aam
ins
fisub
into
sub
cmp
fisttp
rol
fsubr
adc
add
jecxz
lea
sbb
cmp
sub
jnp
js
call
xor
pusha
in
inc
xor
cld
add
push
fisub
cmc
mov
stc
cld
adc
add
int
js
xlat
sbb
sub
sti
jp
push
mov
ret
cmc
jmp
test
jo
leave
add
ud2
and
sbb
ror
scas
test
loopne
sbb
jmp
mov
sub
inc
pusha
sahf
mov
or
pop
adc
or
jmp
xchg
jle
xor
dec
jnp
fadd
loope
lods
adc
mov
jmp
mov
dec
test
push
lahf
mov
shl
sub
jl
js
lods
test
jle
sbb
sbb
xlat
or
xchg
nop
dec
inc
sti
pushw
jmp
push
lock
jp
stc
cmps
je
or
or
cmp
push
ret
enter
clc
hlt
add
aad
dec
xchg
lock
pop
sub
jmp
sub
pop
or
jmp
lods
rcl
ret
pop
shl
jbe
call
mov
add
mov
imul
and
jmp
xor
pusha
push
jae
xchg
jno
add
push
inc
adc
mov
gs
xor
mov
dec
xor
sbb
jno
or
(bad)
jmp
imul
cmp
jo
sub
sub
push
xchg
je
fdivr
or
inc
push
scas
push
mov
fimul
fwait
sub
sar
pop
mov
cmp
imul
or
pusha
and
pop
js
mov
inc
add
js
push
shr
call
mov
add
cmp
pushf
stos
push
into
fidivr
add
std
ss
and
dec
add
dec
dec
cmp
push
push
add
dec
leave
push
in
and
or
hlt
adc
bound
dec
aad
icebp
dec
add
in
or
add
jae
fst
stc
les
inc
or
xchg
pop
jb
call
imul
dec
push
pushf
mov
xor
das
stos
fadd
mov
mov
adc
shl
pop
push
jae
mov
lea
and
and
push
mov
xor
pop
sbb
sbb
and
and
aas
int
ret
int3
add
add
jb
pop
push
lea
aas
mov
inc
hlt
nop
lds
dec
cmc
ins
pop
add
les
pusha
push
test
add
push
pushf
lea
cmp
sub
push
adc
sbb
and
add
and
add
or
sbb
repz
call
into
xor
jo
loop
mov
xor
or
sahf
push
dec
mov
pop
adc
add
inc
pop
pop
cs
or
mov
and
inc
inc
aas
gs
call
mov
jo
mov
cmp
mov
xchg
mov
and
lock
adc
mov
add
and
mov
mov
sbb
xchg
xor
es
les
xchg
add
mov
push
add
ret
inc
lock
push
int
mov
cmps
mov
adc
aaa
cmps
lds
imul
in
retf
add
sbb
cmp
cmp
sub
sub
cmp
js
idiv
push
add
pop
jns
inc
inc
and
push
add
sahf
out
push
adc
add
stc
fstp
fmul
cmp
and
mov
das
or
pop
cmps
inc
js
adc
and
add
add
popf
fs
mov
inc
stc
push
sbb
add
call
dec
mov
movs
adc
shl
sbb
sbb
mov
pusha
mov
inc
mov
call
or
inc
repnz
pop
add
mov
(bad)
pop
add
mov
repz
or
in
pop
adc
(bad)
sub
cmps
mov
push
in
mov
xor
lock
mov
adc
add
xor
je
sbb
pusha
call
imul
ret
call
sub
je
fwait
push
adc
cmp
push
jmp
data16
pop
and
jmp
push
movs
cmps
in
fmul
sbb
lea
aad
xchg
gs
and
mov
and
retf
es
pop
pop
xchg
dec
scas
fistp
mov
aam
inc
test
cmps
sahf
mov
bound
mov
and
add
lock
adc
movs
mov
fldenv
inc
mov
das
push
and
mov
call
push
in
jmp
push
sbb
inc
cmp
movs
movs
pop
mov
and
sub
push
fcomp
enter
arpl
cmc
adc
push
mov
cmp
and
lods
test
aam
add
daa
pop
jmp
add
inc
les
cmp
jmp
inc
dec
jnp
and
cmp
push
pop
push
add
dec
add
pop
adc
add
adc
inc
fldenv
jmp
movs
sbb
shr
enter
in
sbb
push
dec
pop
mov
int
enter
mov
fild
das
test
jne
sbb
sub
inc
xchg
lods
outs
push
pop
mov
xor
outs
mov
inc
or
dec
cmp
jb
repz
sbb
sub
dec
inc
mov
xor
mov
jnp
cmp
xchg
mov
add
inc
xor
(bad)
cmp
add
xor
ret
jne
sar
jo
sbb
test
xchg
mov
push
push
sbb
xchg
add
ss
push
shl
push
cmp
xor
imul
and
test
mov
and
cmc
xor
cmp
scas
scas
dec
mov
jne
push
or
lock
sub
sbb
add
inc
or
sub
add
sbb
jge
push
test
push
setb
jmp
mov
std
je
sbb
test
fisubr
mov
or
mov
inc
push
mov
cwde
ret
inc
cmp
push
fstp
pop
jmp
inc
inc
cmp
fadd
inc
retw
mov
fist
adc
inc
inc
sbb
sbb
and
lods
popf
pop
mov
inc
es
xchg
inc
inc
dec
inc
lods
jne
dec
dec
inc
popf
sbb
fisub
mov
or
scas
adc
jae
daa
sbb
sub
cmps
movs
or
fsubr
adc
sub
ror
call
sub
or
test
mov
dec
je
pop
mov
adc
sbb
xor
inc
(bad)
jno
jb
or
add
inc
aad
or
(bad)
pop
or
fsub
or
pusha
xor
dec
dec
mov
push
add
sbb
push
sub
sbb
lods
adc
hlt
xchg
push
jmp
jae
or
or
or
sub
sbb
jle
mov
popaw
sub
sbb
mov
pushf
add
out
mov
mov
xchg
and
dec
push
pop
sbb
test
sub
xor
mov
xor
pop
sbb
pop
hlt
ja
fs
and
nop
fadd
jmp
(bad)
lea
pop
pop
adc
jne
add
ror
xor
fnsave
fimul
(bad)
mov
stos
inc
mov
(bad)
and
cmp
jl
and
mov
sbb
or
jb
or
or
pusha
mov
fiadd
cmp
pop
jne
nop
sbb
adc
sub
fist
pop
popa
arpl
mov
fwait
dec
add
pop
aam
call
ins
loop
nop
(bad)
frstor
xor
pop
mov
test
inc
pop
stos
xchg
mov
lods
je
jnp
and
sub
inc
add
jg
and
sbb
(bad)
sub
pop
ror
and
cmps
in
jmp
pushf
fimul
inc
out
loopne
mov
push
lods
xor
push
xchg
add
mov
(bad)
aas
push
inc
adc
and
(bad)
fidivr
add
in
jmp
call
imul
xor
and
add
or
das
inc
sub
or
add
test
sbb
sar
add
jl
adc
inc
adc
pushf
sbb
and
or
mov
inc
les
cmp
leave
xchg
adc
jns
(bad)
in
ins
sbb
add
xor
loopne
adc
mov
xchg
push
test
loopne
ins
loope
je
call
adc
mov
inc
or
hlt
xchg
inc
jmp
sub
push
stos
sub
cli
push
cwde
clc
add
and
xor
pop
das
mov
jl
fist
aaa
mov
fadd
in
xchg
out
imul
ror
xor
retf
xor
inc
mov
xchg
sub
cmp
dec
pop
repnz
jp
add
inc
repnz
or
clc
out
pop
ret
outs
xor
push
int3
rcl
push
(bad)
fisttp
xor
sar
or
aad
mov
add
and
outs
jns
scas
xor
or
jo
aas
xchg
inc
add
xchg
gs
or
or
add
js
aad
mov
dec
and
outs
add
jge
fcom
sbb
sbb
sahf
add
push
xchg
add
xor
ins
outs
mov
mov
add
sbb
sbb
jo
xchg
ret
sub
ret
jnp
sbb
inc
lahf
inc
mov
inc
cmps
and
les
add
test
push
jne
imul
adc
ud2
pusha
or
rcr
rcr
jp
shr
xor
lods
popa
stos
sub
and
aad
pop
nop
jne
adc
mov
pop
jnp
ds
cmp
adc
sub
jae
test
sub
sahf
xchg
test
call
cmc
xchg
adc
lods
mov
push
lds
add
cdq
call
add
jmp
jmp
sub
lods
(bad)
mov
ror
push
inc
adc
or
mov
cmp
sub
shl
nop
ret
shr
or
mov
shr
sub
scas
cmp
push
adc
push
in
sbb
cmp
cli
aas
loope
imul
pop
addr16
and
jnp
cmp
fiadd
push
cmp
aas
xor
dec
pop
push
mov
add
out
fadd
dec
leave
js
xor
mov
retf
pop
dec
or
push
test
pop
push
daa
sub
add
xchg
out
add
xor
and
xor
shr
mov
scas
mov
push
jne
push
mov
mov
xchg
mov
push
cld
or
or
pop
add
mov
jl
(bad)
aas
pop
sub
adc
and
dec
and
xchg
mov
iret
pop
add
sub
sub
pop
xor
leave
mov
loope
mov
mov
push
xchg
sbb
xor
test
mov
and
imul
xchg
jne
pusha
movs
push
push
sar
mov
xor
adc
fisub
add
sub
jmp
dec
lea
or
cmp
sbb
push
cmp
xchg
mov
jmp
and
sbb
and
cmp
aas
pushf
xor
mov
or
stc
cmp
dec
loop
mov
or
ss
int
push
jae
push
arpl
aas
dec
dec
lds
mov
dec
push
sbb
cmp
cmp
jbe
in
or
daa
shl
dec
adc
push
fst
sbb
das
(bad)
hlt
jmp
add
or
repnz
mov
jg
scas
inc
arpl
ror
jo
leave
shl
mov
adc
add
xchg
mov
mov
add
lods
xchg
mov
push
test
nop
inc
fsubr
not
js
ja
sahf
inc
mov
jns
mov
test
add
(bad)
push
mov
mov
(bad)
mov
fisub
call
xor
xor
shr
mov
cli
imul
cmp
movs
dec
and
jnp
outs
jmp
in
or
xor
call
dec
dec
sub
cwde
cmp
mov
pusha
and
cmp
aad
mov
adc
jo
out
pop
mov
pop
(bad)
ins
movs
adc
push
push
push
sbb
xchg
out
jmp
fstp
and
ret
dec
sbb
xchg
lods
dec
(bad)
adc
dec
mov
popa
retf
icebp
mov
or
aas
mov
mov
lahf
cmp
shl
or
jg
dec
and
cmp
push
dec
xchg
mov
iret
cmp
pop
sub
cmp
mov
adc
xchg
mov
and
adc
test
rol
and
mov
inc
test
xor
xchg
push
or
inc
pop
pop
xor
mov
daa
arpl
mov
call
mov
mov
arpl
and
mov
imul
cmps
pusha
pusha
fiadd
or
fdivr
mov
(bad)
mov
cmp
mov
jbe
lea
movs
sbb
aaa
inc
in
leave
out
mov
mov
mov
jno
fiadd
or
out
pop
movs
xchg
xor
mov
neg
(bad)
sbb
into
adc
add
dec
aaa
mov
sbb
repz
js
push
add
add
fsub
or
cmp
adc
jb
in
ins
or
jmp
ss
sub
adc
push
loopne
inc
outs
push
add
test
sbb
push
push
enter
loopne
shl
add
push
pusha
add
pop
mov
mov
je
ja
pop
sbb
movs
jnp
push
and
add
inc
mov
pop
lock
push
loop
jmp
add
add
and
mov
mov
outs
sub
add
or
inc
lods
or
pop
or
pop
and
and
lods
jecxz
lods
or
and
inc
dec
gs
adc
std
lea
fldcw
popf
pop
adc
fild
mov
add
je
or
das
and
shr
adc
sub
fist
ror
hlt
push
dec
and
cmp
sub
pop
out
stos
pop
xor
jecxz
mov
jmp
adc
mov
adc
push
mov
enter
fstp
arpl
aaa
dec
jl
dec
fist
dec
(bad)
xor
movs
xchg
push
adc
jmp
and
ins
test
in
xor
or
mov
push
shl
jecxz
imul
adc
sbb
sti
mov
sub
adc
jne
add
sbb
popa
pop
mov
ins
sbb
loopne
sbb
pusha
mov
or
jb
clc
cmps
lods
ins
mov
xor
dec
pop
test
inc
push
inc
and
add
sbb
inc
mov
test
pop
push
and
dec
pop
dec
inc
test
mov
adc
movs
xor
outs
int3
mov
(bad)
cmp
test
jne
xlat
pop
idiv
inc
sub
mov
add
adc
pop
adc
or
nop
fnstenv
push
sub
jle
inc
jae
retf
cmp
xchg
cmp
jno
xchg
push
sub
jbe
xchg
or
mov
into
cmp
jmp
das
nop
adc
(bad)
cwde
add
lods
inc
inc
inc
push
test
adc
sub
pop
add
inc
push
je
inc
rcr
push
inc
or
ins
mov
jp
imul
pop
lea
fmul
and
dec
jne
jo
inc
test
add
inc
pop
rcl
popf
cdq
pop
cmps
mov
push
lods
dec
stos
add
sbb
mov
int3
int3
mov
sub
popa
ins
xor
xchg
sub
mov
or
sub
mov
mov
add
iret
or
movs
in
jns
add
fwait
ror
add
aaa
movs
and
and
fild
or
mov
cs
gs
dec
movs
or
xchg
stos
and
sub
adc
cmp
inc
test
jno
sub
add
(bad)
xor
adc
add
popf
aad
loopne
xchg
repnz
loopne
rcl
mov
adc
and
lds
adc
test
je
pop
inc
ret
mov
add
loopne
cmp
cld
pop
imul
or
fidiv
rcl
je
add
daa
test
xor
mov
inc
imul
add
nop
test
mov
pop
fs
mov
mov
adc
jnp
mov
or
arpl
jno
ret
shl
sbb
loope
xchg
ret
add
and
aaa
jg
add
ins
adc
xor
in
int3
fisttp
and
mov
clc
xor
xchg
sbb
imul
popf
dec
shl
int3
imul
pop
push
or
out
and
cli
xor
rcl
and
nop
aad
arpl
fist
mov
sub
xchg
cmp
fidiv
adc
test
adc
pop
push
call
call
test
jp
dec
jmp
and
je
sub
pop
add
shl
ficom
jmp
sub
and
es
pop
jns
add
nop
(bad)
adc
sub
dec
aas
fs
push
ret
in
lods
jge
stos
adc
loopne
push
das
pop
enter
mov
inc
cmps
adc
add
shl
push
mov
jp
test
dec
dec
mov
mov
adc
clc
add
push
adc
sbb
test
add
rcl
xchg
add
jo
fisub
jmp
dec
cmp
push
lods
fcmove
ror
int3
js
cmp
or
mov
or
out
inc
adc
mov
arpl
cwde
dec
sub
inc
stc
mov
or
aas
sbb
shl
mov
xor
in
lahf
gs
lea
gs
inc
sbb
jg
movs
inc
adc
es
movs
adc
cmp
sub
add
adc
int
jl
pushf
jnp
test
imul
mov
mov
stos
nop
rol
les
adc
mov
xor
dec
sub
jnp
repnz
inc
add
push
push
sub
sbb
shl
adc
cmp
cmp
test
xchg
lock
pop
dec
pop
adc
test
lds
pop
xor
and
rol
mov
adc
aas
adc
xor
sub
movs
or
dec
adc
jne
cmp
dec
lods
xor
or
les
pop
inc
xchg
popa
jp
push
push
repnz
daa
push
jnp
pop
cmp
jmp
mov
pop
or
adc
or
jmp
hlt
or
add
outs
adc
bound
mulps
inc
xor
mov
fldcw
mov
pop
jge
call
ror
enter
inc
xchg
(bad)
sbb
jl
jecxz
add
add
sbb
cmp
loopne
jecxz
and
test
stos
sbb
adc
ss
mov
adc
push
aad
and
or
icebp
mov
add
mov
push
jl
retf
inc
fistp
je
out
fdivr
jmp
loope
in
inc
sub
xchg
and
and
mov
add
mov
dec
jo
adc
and
push
fstp
or
es
cdq
mov
push
cmp
pop
add
(bad)
xchg
sbb
or
inc
jmp
add
stos
xor
out
adc
or
push
gs
popw
int3
adc
rcr
and
outs
dec
inc
inc
and
and
fnstsw
retf
retf
inc
aas
xor
push
or
jl
mov
pop
mov
add
xchg
and
popa
arpl
loope
push
xchg
jno
mov
pop
lahf
push
pop
adc
and
dec
dec
mov
lock
add
xchg
dec
mov
mov
jae
mov
xlat
inc
add
in
loope
push
cmp
sahf
fwait
sub
fisubr
add
cmp
aaa
sar
or
mov
cmps
xor
add
add
xchg
adc
bound
lds
(bad)
or
push
and
add
pusha
xor
lods
lds
outs
sub
out
call
ins
adc
adc
dec
push
cmp
or
add
mov
pop
in
int
mov
loopne
out
test
mov
hlt
sbb
lea
sub
(bad)
add
add
mov
in
xor
fsubrp
push
enter
mov
lods
das
ror
xchg
int
and
sub
xrstors
sub
adc
sbb
mov
xchg
jecxz
adc
test
dec
push
adc
pop
xchg
adc
or
and
loope
and
xor
je
push
cs
mov
push
or
push
ss
adc
sub
lahf
xchg
(bad)
call
adc
(bad)
dec
pop
outs
movs
xchg
jno
adc
pop
or
add
cmp
cmp
adc
add
ficom
xchg
or
add
leave
push
in
cmp
mov
add
add
pop
xor
or
clc
add
cmp
cmp
shl
adc
mov
mov
test
cmps
ins
jle
push
xor
jae
xchg
cmp
sbb
pushf
push
inc
push
je
push
out
mov
sbb
imul
(bad)
(bad)
adc
js
sahf
xchg
mov
mov
jnp
out
(bad)
adc
movs
pop
sbb
add
js
push
sbb
leave
add
mov
outs
test
cmp
jl
(bad)
xchg
xchg
je
sbb
dec
cdq
inc
dec
mov
arpl
xor
inc
and
xor
jo
inc
pop
int
jnp
cli
inc
icebp
mov
and
mov
adc
push
dec
sub
out
cmp
inc
cmp
dec
sub
cmp
cmp
jp
pop
es
nop
adc
fiadd
cmp
and
add
add
inc
call
inc
jmp
pop
xor
add
cmp
push
pop
dec
test
inc
push
pop
sub
mov
lock
inc
push
jl
pop
das
dec
imul
iret
jl
loope
ret
and
rol
pop
xchg
sbb
ds
add
fsubr
or
in
and
retf
fdivr
sub
add
mov
pop
push
loop
mov
adc
jae
pop
or
cdq
cmp
dec
add
or
clc
shr
push
and
add
mov
sbb
or
in
jg
cmp
je
or
ret
and
jmp
in
xor
jne
jae
les
es
jne
les
test
leave
and
adc
pusha
and
aaa
loop
ret
mov
(bad)
cmp
es
sub
and
lods
mov
leave
rcl
mov
adc
into
adc
xor
inc
out
dec
add
int3
inc
sbb
add
lock
jp
inc
push
adc
add
xchg
jae
daa
iret
xor
outs
dec
or
sbb
out
jle
hlt
pop
push
cmp
je
inc
cs
xor
out
mov
mov
fcom
or
test
scas
fadd
add
xchg
repnz
pop
scas
in
sahf
mov
sbb
test
scas
xor
dec
mov
fdivr
pop
call
jl
cmp
xchg
icebp
outs
ins
in
cwde
mov
fild
xchg
jo
lock
add
inc
mov
call
xchg
ficomp
push
scas
xor
cwde
sbb
push
es
adc
cmp
inc
mov
int3
fmul
jns
xor
jmp
adc
inc
(bad)
ret
push
fimul
ret
cmc
inc
inc
add
xor
inc
lock
sbb
dec
inc
cwde
call
push
lods
sahf
adc
sub
sub
add
or
es
jl
mov
stos
iret
inc
repnz
(bad)
inc
das
ins
inc
and
adc
jb
rcr
mov
fmul
sbb
mov
fs
sti
sbb
js
pop
inc
push
and
das
push
xchg
adc
dec
sbb
inc
mov
sbb
adc
jmp
cmps
mov
push
cmp
ss
clc
dec
and
ret
fiadd
aam
enter
mov
(bad)
(bad)
xor
cmp
mov
test
adc
cwde
add
ror
je
or
into
in
fild
and
jne
sbb
pop
cmp
jg
jmp
or
and
fwait
(bad)
jl
stc
scas
add
add
pop
(bad)
mov
mov
jmp
mov
and
add
mov
jp
sti
movs
xchg
daa
jne
sbb
jbe
pop
rcl
lods
mov
int3
push
jmp
cmp
jl
fstp
xor
fcom
fisub
and
sub
data16
cmc
jmp
lock
(bad)
fldcw
mov
jne
add
or
or
inc
jmp
or
std
jle
push
jmp
in
add
pop
ret
xchg
cmp
mov
cld
mov
xor
push
push
inc
sbb
jne
mov
(bad)
mov
cs
stc
test
(bad)
pop
inc
or
push
mov
ror
loope
rol
cmps
mov
(bad)
les
or
xchg
in
jle
sbb
jo
and
sahf
sub
scas
scas
jl
(bad)
arpl
xor
jne
pop
or
pop
mov
cmp
or
mov
dec
cmc
test
cmp
mov
mov
sub
add
or
inc
dec
or
cs
scas
inc
lds
sti
sub
mov
dec
xor
dec
es
pop
shr
je
popa
cmp
call
sbb
jno
mov
out
mov
jg
cmp
(bad)
mov
ret
xor
je
jne
rcr
cmp
xchg
inc
(bad)
xor
or
clc
ret
jmp
dec
cdq
pop
rcl
fwait
add
outs
inc
je
push
pop
iret
xor
adc
push
push
nop
inc
xor
jecxz
mov
add
test
div
jne
or
sahf
push
sbb
jle
pop
(bad)
outs
xchg
cmps
pop
sub
loopne
mov
jns
cmp
pop
xchg
mov
xor
mov
mov
jmp
jne
cmps
xchg
adc
fdivp
(bad)
or
jmp
push
sub
mov
test
push
or
jle
ret
sti
sub
(bad)
(bad)
nop
inc
jbe
and
add
aam
jg
clc
add
push
sub
movs
imul
mov
cmp
int
sti
adc
adc
adc
and
sub
je
ret
xor
int3
jp
loopne
jno
cmp
ret
add
mov
inc
push
sti
pop
jo
add
mov
jg
loopne
jge
cmp
inc
mov
push
arpl
popa
inc
mov
ss
iret
xchg
out
shr
fnstsw
cmp
push
test
icebp
push
dec
jl
cmp
pop
adc
xchg
add
mov
or
xchg
or
cmp
js
cmp
push
pop
(bad)
aad
inc
lods
jl
rcr
popa
jg
xchg
jmp
mov
adc
cmp
popf
fsub
inc
sub
test
hlt
dec
inc
mov
rcl
adc
jl
pop
cmovo
inc
or
cli
ret
pop
scas
or
jmp
sbb
stos
cli
xor
xor
adc
mov
sbb
sbb
jl
push
loop
adc
js
(bad)
adc
mov
(bad)
pop
movs
adc
ins
mov
jle
popa
push
cli
popa
push
mov
pop
imul
test
xor
or
jp
mov
pop
and
push
sub
nop
mov
jbe
xchg
test
jle
call
lea
push
xchg
cmp
mov
jl
pop
or
or
cld
aam
push
xor
xchg
cs
stos
sub
push
inc
in
icebp
fbld
pop
pop
es
xor
adc
loopne
pusha
and
xor
enter
xchg
and
add
sbb
xchg
dec
sub
pop
test
mov
cmp
or
test
imul
xor
push
fmul
fisttp
mov
sub
or
dec
jp
add
xchg
mov
or
adc
and
push
or
mov
sbb
fsub
stc
das
push
cmp
sbb
push
(bad)
inc
test
xor
ins
pusha
xchg
add
ret
call
and
ins
mov
mov
lahf
mov
jae
inc
inc
pusha
xchg
sub
jmp
fiadd
jl
xchg
adc
sub
or
(bad)
mov
sub
scas
xor
call
pop
pop
into
inc
jmp
sub
adc
adc
shl
cmp
push
test
adc
aam
push
inc
push
or
les
mov
mov
inc
and
sbb
xchg
or
(bad)
retf
sbb
push
xchg
add
sbb
xchg
ror
sbb
inc
loope
push
pop
add
dec
or
xchg
inc
sub
inc
ret
or
ret
jp
pop
unpckhps
es
out
bound
mov
sbb
sbb
dec
pop
sbb
and
dec
test
mov
out
popa
ins
sbb
scas
xchg
mov
sub
jmp
popa
and
push
loope
push
add
pop
aas
add
outs
inc
dec
outs
pop
sbb
and
enter
call
cmp
adc
adc
in
add
out
inc
push
inc
add
mov
sub
jbe
mov
inc
mov
add
mov
lea
push
fisubr
icebp
or
and
inc
add
dec
loopne
icebp
jmp
mov
adc
aas
dec
dec
xchg
adc
push
add
jne
inc
adc
and
das
stos
xor
inc
aas
daa
mov
adc
fs
xor
pop
pop
out
dec
cmp
xchg
adc
jae
ins
(bad)
lds
and
cmps
in
adc
and
test
mov
dec
fisub
adc
cmp
das
bswap
cwde
inc
inc
add
or
dec
test
or
jge
pop
retf
mov
add
in
sbb
and
xchg
cmp
xchg
inc
push
clc
dec
imul
fbld
pop
inc
push
dec
fs
idiv
pop
add
pop
aad
ror
fs
and
xlat
shl
push
push
ffreep
xchg
imul
and
imul
into
adc
pop
sbb
pop
pop
cmp
(bad)
popa
and
sbb
mov
pop
arpl
movs
sub
and
jle
(bad)
mov
push
mov
push
div
sub
leave
xchg
xchg
jno
in
mov
xor
jnp
xchg
retf
cmp
inc
dec
push
sbb
push
lds
push
dec
fs
mov
xchg
dec
pop
push
and
loopne
lods
and
adc
add
adc
outs
pusha
xor
and
(bad)
fld
cmps
cmp
or
fwait
or
cs
or
fdivr
loope
push
xor
fnsave
and
push
std
lea
das
ror
xor
lock
add
lea
or
test
jne
inc
add
cmp
cli
mov
je
or
test
pop
das
push
adc
popa
dec
cmp
jmp
sub
xor
adc
and
xchg
js
fwait
or
xor
int3
cmp
imul
inc
or
inc
sub
xor
sbb
add
ja
adc
and
fdivr
pop
popa
and
jle
cs
mov
jno
jge
ret
and
iret
lea
adc
pop
push
out
and
jge
mov
add
fist
push
es
mov
sbb
inc
add
ds
adc
jmp
ds
pop
rcl
pop
aaa
out
mov
add
adc
pop
sub
push
jge
sub
outs
sub
in
sub
xchg
or
push
les
push
jl
xchg
fadd
cmp
dec
scas
out
movs
test
add
push
add
mov
cmp
or
mov
ds
mov
test
sub
sub
scas
sbb
mov
outs
sbb
cmp
push
sbb
add
and
push
aaa
mov
stos
add
adc
fnsave
xchg
lea
mov
mov
sub
sbb
out
push
fwait
mov
add
add
and
lods
(bad)
push
push
popf
mov
add
inc
sbb
jne
cmp
jge
les
shr
imul
pop
jmp
nop
mov
add
xor
adc
cmp
xlat
jns
dec
mov
adc
pop
push
test
add
daa
xor
clc
and
jno
sbb
mov
sub
mov
jmp
test
jmp
mov
inc
ins
pop
push
shl
pop
push
mov
dec
mov
and
ret
jge
cmp
or
mov
sub
adc
or
adc
jbe
inc
jae
pushf
cmp
inc
inc
dec
sbb
jnp
inc
xor
jmp
mov
out
or
adc
bound
add
mov
mov
mov
je
lods
jnp
cmp
pop
icebp
and
sbb
inc
not
jecxz
push
dec
inc
or
movs
ins
dec
cmp
mov
popf
fs
popf
pop
(bad)
mov
or
and
add
xor
jns
pop
dec
mov
xchg
adc
adc
or
inc
ins
not
outs
les
pop
add
or
in
or
inc
adc
cmp
xor
in
leave
ror
add
or
sahf
jp
push
or
xchg
fs
adc
pop
add
push
rcr
add
sbb
aad
sub
fdiv
or
sbb
cmp
xor
pop
push
sub
pop
and
lods
hlt
sub
adc
cmp
mov
mov
cmp
jp
es
scas
sub
lds
in
dec
lea
xor
xchg
daa
xchg
jae
test
movs
(bad)
jmp
push
bndstx
mov
xchg
mov
inc
cmp
adc
and
clc
sub
int3
test
mov
mov
inc
mov
in
dec
loope
mov
cmp
loope
cli
mov
jmp
call
ret
jecxz
lock
or
adc
int
jo
adc
ret
mov
loopne
jnp
frstor
fnstenv
inc
mov
fsubr
pop
cs
xchg
or
mov
popa
ins
sub
mov
loop
js
mov
push
xor
fwait
loopne
adc
jmp
or
cmp
out
movs
in
rol
and
movs
push
je
enter
jg
loopne
cs
sub
mov
ror
push
push
mov
dec
mov
cmps
and
out
imul
dec
inc
shr
inc
add
fild
add
pushf
jo
cwde
add
les
or
add
pop
jns
mov
xor
cmp
lock
adc
inc
lods
jl
dec
adc
shl
jl
loopne
pusha
(bad)
mov
je
hlt
sbb
dec
xor
jmp
xchg
gs
push
and
add
jmp
dec
pop
int3
dec
adc
adc
or
mov
movs
pop
popf
xor
add
xchg
cmps
adc
(bad)
lods
add
push
das
add
add
inc
ja
shl
cld
dec
mov
sub
mov
add
and
mov
ret
adc
pusha
lock
jmp
ret
rcl
ret
push
push
icebp
popa
loope
jge
sbb
int3
test
xor
enter
or
mov
loopne
sbb
xor
pop
adc
adc
scas
int
dec
xchg
adc
pop
pop
push
aam
or
sub
sbb
mov
jbe
fcomp
jbe
xchg
arpl
or
mov
jmp
push
or
retf
xor
arpl
xchg
or
outs
inc
jl
mov
inc
dec
les
stc
punpcklbw
push
sti
sbb
xor
push
sub
xor
sbb
and
mov
xor
cs
adc
mov
popf
or
mov
arpl
push
xchg
mov
mov
xchg
fwait
sub
mov
lock
pop
mov
dec
add
scas
test
pop
push
je
mov
push
(bad)
dec
push
or
and
mul
push
mov
add
aam
mov
lods
mov
ss
adc
and
mov
add
inc
cmp
jle
daa
pop
rol
jecxz
push
mov
shr
and
or
mov
loopne
inc
lea
cwde
sub
rol
js
xor
sahf
ss
sub
outs
push
popf
in
cmps
and
rol
add
push
adc
xor
push
sbb
fdivr
imul
or
sub
mov
or
test
lea
xchg
pop
mov
add
mov
mov
nop
mov
int3
pop
addr16
or
into
and
daa
cmp
dec
leave
adc
aad
pusha
push
or
sbb
cmp
fucomip
lock
movs
jno
frstor
shl
test
ret
pop
cs
pop
gs
inc
arpl
nop
pushf
cmc
push
xor
mov
and
xor
pop
jp
fcomp
je
jge
xchg
or
jo
inc
or
add
and
pop
lea
mov
inc
jmp
push
(bad)
dec
stc
pop
or
(bad)
mov
xor
adc
or
les
sub
push
push
cmp
iret
hlt
pop
mov
or
and
push
sbb
pop
xor
inc
cs
sub
jg
add
and
aam
daa
xchg
test
jg
pop
sub
test
cs
jae
sub
push
xchg
inc
jbe
dec
jecxz
push
(bad)
into
add
clc
mov
inc
(bad)
nop
movd
ret
mov
sub
push
push
add
push
shr
sti
push
daa
ret
ficom
test
scas
popf
(bad)
fdiv
sub
cli
(bad)
add
jno
scas
xchg
adc
daa
add
sub
xchg
jmp
call
add
cmp
sbb
cmp
push
aas
enter
enter
ja
inc
push
sbb
(bad)
nop
sbb
or
mov
sti
push
add
adc
cmp
jp
mov
or
scas
int
pop
sub
inc
mov
dec
call
dec
fistp
pusha
or
add
add
push
dec
dec
push
jo
or
or
push
pushf
call
or
cmp
ret
jle
mov
test
pop
xchg
dec
adc
test
(bad)
ins
add
or
and
repnz
jl
(bad)
push
or
add
cwde
inc
loopne
hlt
jae
les
push
je
jmp
aad
adc
mov
enter
adc
das
mov
push
push
inc
sub
sbb
cmp
in
int3
pop
imul
push
push
cld
sbb
mov
add
sbb
add
or
jmp
popa
adc
jno
sahf
ins
cdq
and
xchg
inc
es
in
ficom
fsubr
adc
and
adc
and
sub
shr
and
(bad)
adc
add
jecxz
xor
or
add
sub
cmps
cmp
xchg
clc
adc
push
je
push
add
sbb
adc
pop
inc
loope
lds
loopne
pop
xor
sbb
xchg
add
imul
sbb
add
and
dec
stos
rol
pop
popf
add
(bad)
push
xchg
inc
adc
and
pop
adc
dec
jmp
push
push
add
retf
xor
adc
hlt
aaa
push
add
xor
aas
pop
push
adc
mov
ret
addr16
int
rol
jp
xor
pop
and
jecxz
loope
neg
add
cmc
sub
cmp
or
aam
mov
sbb
push
xchg
xor
loop
jno
and
enter
aas
xor
test
call
and
adc
das
push
push
jmp
sbb
inc
shr
jbe
jns
xchg
retf
add
adc
dec
lods
popf
jmp
xor
dec
jo
mov
jne
push
sub
add
(bad)
lea
and
adc
mov
inc
mov
fldcw
into
cli
sub
pusha
jmp
nop
mov
sub
(bad)
add
fcmovb
xor
and
cmp
add
push
call
rcr
loop
pusha
inc
pop
lods
imul
shl
inc
jg
out
or
xor
sub
mov
mov
retf
fidiv
ins
or
inc
or
or
movs
or
cmp
jnp
mov
mov
dec
adc
sub
lods
loopne
test
add
jmp
cmps
call
cmp
add
or
push
mov
mov
retf
add
mov
xlat
xchg
cmp
sbb
or
imul
icebp
push
xchg
jbe
adc
xor
or
imul
and
add
neg
sub
mov
sbb
je
rcr
adc
lock
sbb
push
(bad)
jbe
and
cwde
pusha
add
daa
loopne
dec
mov
add
ror
ret
lock
or
pop
dec
mov
test
adc
xchg
out
inc
mov
sbb
push
dec
adc
popf
or
xchg
rcl
mov
xchg
xchg
pusha
pusha
iret
push
add
call
dec
mov
nop
push
xor
mov
call
bound
dec
and
ret
out
(bad)
adc
add
pop
jmp
test
outs
mov
mov
cmp
xchg
mov
lock
retf
adc
aam
xor
fsubr
sbb
inc
xchg
cmps
inc
mov
xlat
add
jne
shl
xor
test
fwait
rcr
xor
ins
pop
js
loop
add
pop
and
mov
mov
imul
lods
in
push
pop
rol
fsubrp
cmp
push
ror
bound
arpl
and
or
cmps
loopne
xchg
out
push
xchg
xor
xchg
mov
add
pusha
or
xlat
adc
inc
out
dec
ins
loope
mov
adc
ret
loope
xchg
sar
xor
jne
add
dec
adc
shl
or
and
std
rcl
mov
xor
out
sahf
test
sbb
in
xchg
push
mov
pop
rol
and
jmp
sub
xchg
movs
mov
ds
cmp
aaa
inc
cmps
and
popa
sbb
jne
les
sbb
sbb
and
je
mov
enter
push
sub
sbb
aad
xchg
and
or
push
adc
mov
(bad)
sbb
jo
in
aam
int3
lods
dec
sbb
cmp
or
retf
movs
jns
or
test
inc
push
push
shl
xchg
jbe
inc
push
in
clc
cld
pusha
dec
push
jle
add
add
aaa
les
adc
mov
inc
mov
popa
imul
les
ror
pop
(bad)
ja
add
call
cs
lock
sbb
push
pop
pop
mov
pusha
(bad)
retf
pop
mov
add
add
inc
dec
or
enter
add
shl
inc
stos
push
fild
dec
lods
cmp
push
and
mov
fsubr
pop
popf
xchg
mov
xchg
add
popf
adc
pushf
cmp
sbb
adc
push
popf
mov
rol
mov
xor
leave
sbb
add
push
aas
or
xor
adc
cmp
xor
not
or
out
sub
mov
and
and
inc
jl
add
fs
outs
jmp
inc
mov
add
cmps
imul
pusha
add
mov
les
or
adc
pusha
mov
xchg
icebp
jge
add
cld
xchg
scas
fwait
xchg
xor
and
loope
addr16
in
sub
bound
inc
sub
ds
cmp
lea
sti
jl
sub
ins
or
sbb
add
xchg
mov
dec
addr16
cmps
iret
ja
sahf
loop
mov
dec
mov
sbb
sub
data16
add
or
inc
add
xor
mov
jmp
cs
adc
call
ds
push
shl
add
push
add
mov
jmp
inc
sbb
icebp
xor
loope
bnd
(bad)
adc
nop
dec
fdivr
scas
js
jb
add
pop
pop
xchg
sub
sub
adc
mov
dec
inc
cwde
jmp
adc
jnp
cmp
mov
pop
and
cli
jecxz
pop
fcom
retf
xor
aam
add
cmps
icebp
or
hlt
adc
hlt
pop
shr
pop
cli
or
adc
outs
or
outs
or
sbb
dec
cwde
cld
(bad)
push
ins
jne
cmp
jne
hlt
daa
inc
jb
aad
inc
sbb
ret
and
xor
int3
adc
sub
add
xchg
into
retf
dec
inc
dec
sub
push
push
cmc
(bad)
cmp
add
and
nop
dec
imul
sub
add
retf
pushf
or
dec
dec
not
(bad)
adc
or
mov
dec
mov
cmp
sub
or
add
repz
ds
retf
adc
sub
int3
(bad)
mov
mov
cld
jbe
loope
cmps
jmp
out
jle
cmp
std
cmp
std
vpaddw
test
movs
imul
hlt
adc
clc
xchg
js
push
clc
lock
mov
bound
or
or
jp
or
sbb
mov
or
fs
test
sbb
add
inc
push
stos
xchg
mov
ret
mov
sbb
add
dec
js
xlat
xor
mov
sbb
hlt
sti
and
jne
jmp
call
push
es
sar
jae
mov
add
into
inc
aas
jae
xchg
int3
fbstp
push
adc
jno
in
ret
jl
cmp
sbb
add
xchg
adc
pop
push
lahf
in
idiv
test
dec
iret
mov
jmp
mov
imul
or
aaa
jns
and
or
sbb
mov
gs
add
xchg
inc
and
loope
sti
xchg
or
int
fdiv
dec
mov
ds
adc
add
or
dec
imul
pop
dec
push
fst
and
push
pop
scas
sbb
adc
sub
loope
aam
or
ds
loope
dec
cmp
dec
dec
sbb
push
sar
in
sub
rcl
and
test
dec
iret
retf
mov
adc
test
jecxz
nop
mov
or
lods
push
push
push
in
or
xor
(bad)
or
sbb
test
jo
sbb
loopne
and
adc
ret
mov
shrd
adc
sub
mov
aas
dec
cmps
mov
adc
in
rol
push
push
mov
jge
in
jno
les
jge
daa
xor
je
sub
inc
js
dec
add
call
lea
in
sar
xor
cmp
mov
sbb
xchg
dec
gs
and
mov
inc
mov
add
or
test
push
rcl
mov
jae
mov
popf
cmps
mov
rcl
jge
dec
dec
inc
adc
xlat
mov
movs
push
jg
push
sbb
add
sbb
sbb
dec
push
ret
xor
lea
sbb
add
bound
imul
xchg
inc
add
hlt
mov
clc
in
add
pop
fidivr
mov
sbb
stos
shl
or
xchg
jno
fs
inc
sbb
fcom
adc
and
retf
or
and
adc
adc
and
(bad)
in
pop
aas
fcomp
pop
adc
dec
arpl
sbb
test
sub
xchg
add
adc
add
inc
jmp
arpl
xor
test
(bad)
and
or
push
out
add
and
push
jmp
sbb
sbb
arpl
nop
sbb
mov
push
or
fwait
ins
leave
jg
lods
pop
fnstenv
loope
pop
and
mov
mov
aam
stc
into
pop
sbb
mov
push
dec
(bad)
sub
fild
test
sbb
sbb
mov
push
push
ds
cmp
and
fucomp
jns
sub
cmp
loope
cmp
das
xlat
add
sbb
xlat
jmp
push
lock
xlat
and
aaa
stos
and
push
sub
sbb
cmp
sub
pop
inc
adc
xchg
xchg
aam
cmp
inc
xchg
mov
das
sbb
loopne
xchg
jmp
mov
test
and
mov
adc
sbb
mov
and
xor
ret
sbb
int
cwde
or
pusha
cmp
mov
ds
push
inc
cld
push
adc
sub
pushf
jecxz
fidivr
jmp
movs
or
sbb
fistp
loope
imul
inc
pop
mov
in
popa
push
jp
sar
xchg
dec
or
ret
add
jbe
inc
xchg
(bad)
call
inc
ret
xor
ret
mov
fsubr
push
jae
push
mov
adc
rol
mov
push
gs
gs
or
push
adc
sbb
add
xchg
xor
test
or
cmc
in
jbe
sbb
sbb
adc
movs
push
test
shl
add
add
sub
loopne
movs
xor
or
add
movs
sbb
jae
adc
shr
in
fwait
dec
popa
xchg
or
and
cmp
xchg
call
ret
jb
adc
dec
mov
add
xor
or
sub
out
or
and
cs
sub
inc
adc
add
xchg
iret
push
sbb
clc
sbb
aam
mov
pusha
xchg
rol
fcom
or
mov
leave
inc
fwait
adc
sti
mov
daa
mov
inc
icebp
fld
cs
xor
cmp
inc
std
shl
add
mov
pop
jno
push
loop
pop
add
call
sub
sbb
sbb
xor
cld
add
enter
mov
sahf
sar
pop
push
aad
fcomp
dec
jmp
mov
jmp
sbb
mov
jmp
sub
test
mov
xchg
loopne
add
sbb
dec
call
or
mov
mov
or
xor
ss
fwait
adc
(bad)
pop
and
xchg
pushf
js
dec
cmp
call
pushf
(bad)
repnz
or
and
cdq
loop
aad
push
inc
adc
mov
push
sbb
sbb
sub
sbb
dec
jge
cmp
adc
aaa
or
sub
in
jbe
mov
sub
sub
in
sbb
jl
aaa
aaa
adc
adc
retf
jmp
dec
mov
(bad)
out
adc
xchg
jmp
mov
add
mov
cmps
xor
inc
pop
push
and
mov
push
adc
inc
xchg
rep
dec
mov
mov
xor
mov
jge
push
jg
add
mov
or
push
ds
lods
outs
push
lahf
pop
pop
jl
pop
fldlg2
jl
sbb
add
inc
(bad)
mov
adc
or
or
push
add
inc
pusha
mov
ss
dec
gs
sbb
push
mov
pop
mov
(bad)
stc
or
add
call
pop
add
(bad)
mov
fwait
pop
push
and
pop
popa
nop
mov
push
(bad)
cdq
idiv
stc
add
push
or
retf
ds
and
std
pop
adc
inc
add
push
div
push
sub
push
add
movs
pop
jp
in
aam
sub
or
sbb
(bad)
das
pop
pop
inc
popa
jge
das
jnp
or
xor
(bad)
rcl
inc
mov
sub
push
retf
or
add
test
mov
lea
xor
push
mov
pop
and
xor
cmc
add
aaa
js
inc
or
or
std
or
or
cmps
inc
ret
rol
adc
popa
cmp
enter
add
mov
loope
xchg
jp
xor
sahf
mov
dec
dec
outs
cmc
add
mov
fcomp
js
loopne
xor
je
jo
ror
or
pop
mov
push
fadd
or
add
call
call
int3
sti
or
sbb
sbb
xchg
mov
add
mov
loopne
(bad)
push
jae
(bad)
cs
in
inc
dec
movs
adc
cmp
add
push
adc
cmp
les
inc
and
ins
inc
not
or
gs
adc
dec
mov
fwait
daa
lock
les
jge
mov
add
jge
hlt
xor
xchg
fld
enter
dec
pushf
xor
or
and
cwde
sbb
icebp
out
push
pop
push
(bad)
dec
adc
ins
call
icebp
repz
push
jno
fisttp
por
sbb
xchg
xor
(bad)
leave
push
fadd
ret
js
xchg
mov
and
into
mov
add
pop
xchg
or
out
(bad)
sub
xor
in
push
test
push
fs
adc
cmps
or
push
inc
and
arpl
mov
(bad)
arpl
popf
adc
jecxz
les
arpl
ins
push
inc
sti
pop
add
aad
les
mov
adc
mov
inc
mov
mov
mov
aam
aam
xor
mov
popa
bound
jne
rol
xor
sbb
adc
int
ss
or
(bad)
mov
xchg
nop
nop
inc
add
arpl
pop
xor
mov
sub
in
push
or
xor
call
test
and
push
inc
add
shl
or
fmul
adc
call
rcl
sub
dec
jo
imul
outs
sub
sub
add
pop
pop
fsubr
fs
push
pop
jbe
inc
sbb
adc
sahf
(bad)
xor
ja
jp
and
inc
nop
dec
add
and
jmp
loopne
push
inc
xor
sub
stc
(bad)
cmc
and
ja
and
dec
(bad)
fadd
xor
dec
popa
mov
mov
mov
adc
push
and
cmp
and
fs
out
jnp
test
inc
in
aad
loopne
xlat
or
adc
js
movs
jg
mov
or
mov
sbb
pop
inc
mov
jns
nop
xchg
sbb
popa
shl
jmp
and
(bad)
std
push
mov
pop
lahf
je
or
mov
popf
dec
inc
pop
loop
inc
dec
cmp
xchg
dec
adc
add
sub
cmp
xchg
sbb
(bad)
into
fist
adc
pusha
push
or
mov
loop
push
std
push
fsub
movs
sbb
cmp
add
and
adc
fisttp
adc
sahf
in
push
or
add
inc
btr
dec
xchg
inc
xchg
jl
push
inc
jecxz
jmp
mov
in
inc
imul
cmps
rdpmc
(bad)
nop
adc
jo
mov
movs
dec
xchg
nop
daa
pop
enter
mov
jle
ret
adc
dec
adc
(bad)
jmp
mov
loopne
add
sbb
adc
dec
pop
leave
add
imul
fs
cmp
ins
fadd
mov
inc
push
and
mov
inc
mov
cmp
inc
pop
pop
out
xchg
lock
xchg
shl
imul
pusha
call
inc
lock
pop
sbb
mov
or
shr
sbb
and
ins
xchg
xor
or
and
jb
je
(bad)
mov
mov
icebp
dec
inc
lea
test
int
popf
push
mov
lea
inc
aaa
in
mov
add
cwde
fisubr
inc
xor
pop
xor
dec
adc
fistp
jno
(bad)
and
or
dec
dec
mov
cs
lods
inc
sbb
push
imul
in
sub
adc
or
add
test
sbb
and
mov
or
mov
lea
inc
inc
xor
mov
ficomp
mov
push
add
adc
es
mov
or
add
sub
outs
movs
adc
xor
stc
out
dec
push
adc
in
xor
xor
loopne
and
inc
dec
and
add
sub
lea
cmp
inc
push
mov
(bad)
mov
sbb
stos
inc
push
movs
mov
popf
movs
or
les
mov
or
add
lods
sbb
dec
jae
mov
nop
cdq
xor
xor
cmp
sbb
cmp
fild
cmp
loopne
aam
xchg
adc
dec
push
mov
sub
lea
popa
push
jo
mov
out
test
add
retf
and
clc
adc
dec
in
mov
push
and
popa
xchg
jo
daa
mov
cmc
aad
xchg
pop
push
or
and
add
dec
or
cmp
cmc
movs
add
sbb
cmp
js
ins
cmp
clc
mov
mov
add
loopne
push
cmp
jmp
pop
inc
inc
scas
movs
jne
sbb
enter
pop
jmp
cmp
xor
gs
or
jae
lods
ja
addr16
mov
inc
xchg
and
cmc
push
or
add
rcl
stc
and
lahf
inc
nop
add
xchg
or
and
jnp
icebp
mov
ja
or
loope
or
or
fwait
fs
ins
movs
fs
(bad)
fcomp
add
add
adc
mul
cmp
or
add
mov
jne
pop
mov
xchg
inc
ror
or
pop
ins
fcomp
mov
mov
add
and
dec
add
in
aam
jp
sbb
movs
and
fucomip
cmp
adc
sbb
push
push
gs
lahf
scas
lea
and
dec
hlt
push
pop
push
in
inc
cdq
mov
mov
retf
fs
sbb
pop
xor
addr16
jmp
lock
mov
xchg
pusha
daa
sti
(bad)
adc
add
inc
adc
ins
mov
inc
and
movs
jns
xchg
mul
sub
adc
scas
add
movs
call
fiadd
xlat
sahf
stos
pop
cwde
adc
mov
ins
movs
and
pop
(bad)
adc
mov
dec
rol
dec
(bad)
mov
das
push
and
stos
mov
test
cmc
push
mov
inc
add
mov
scas
ror
xchg
add
jb
(bad)
rol
mov
and
jae
add
pop
adc
jmp
sub
loopne
dec
add
call
push
fbld
mov
in
dec
lahf
cmp
pop
push
xor
cld
lock
data16
sub
mov
mov
mov
xor
push
sub
ret
cmp
mov
mov
or
xor
sub
push
loopne
movs
inc
adc
inc
and
cmp
jg
pop
push
aam
out
out
stos
xchg
loope
dec
cmc
sbb
sar
xchg
pop
cmp
adc
sub
push
jge
dec
fld
stc
sbb
or
add
push
jge
adc
nop
test
and
scas
xor
mov
mov
sub
les
(bad)
mov
call
push
movs
nop
test
or
nop
pop
nop
imul
inc
(bad)
adc
xchg
in
dec
and
push
inc
jecxz
sbb
gs
or
arpl
loopne
test
cmp
adc
sbb
push
inc
cmp
push
xor
push
frstor
push
jl
dec
cld
dec
push
dec
sbb
call
js
xchg
cs
mov
in
fwait
xchg
clc
mov
adc
or
pop
ret
push
push
or
or
out
rol
sbb
push
pop
sbb
retf
xchg
lea
les
movlps
ss
std
and
int3
and
shl
lea
dec
mov
push
sub
pusha
nop
mov
jo
dec
sub
inc
dec
mov
shr
and
mov
dec
das
loope
or
int3
mov
(bad)
ror
fdiv
std
inc
and
call
daa
mov
xchg
mov
rcr
call
test
sbb
out
add
or
push
dec
add
mov
call
pop
in
xchg
add
sbb
push
add
dec
call
lods
sub
adc
popf
pop
push
add
in
push
xor
fdivr
pop
sub
sub
and
das
or
or
cs
fmul
sbb
fst
hlt
add
pop
outs
inc
sbb
dec
div
pop
or
rcl
mov
add
add
xchg
pop
sbb
push
ins
xor
les
pop
xor
js
and
xchg
adc
cwde
cdq
xor
push
adc
movs
pop
inc
or
fs
pop
jae
(bad)
mov
(bad)
and
ins
call
dec
aas
rol
and
inc
test
or
cmps
jne
add
push
lods
cmp
lahf
xor
inc
jmp
icebp
mov
imul
xchg
fst
mov
ds
add
cmp
test
dec
mov
or
adc
or
adc
fist
mov
xchg
cmp
imul
adc
sbb
fs
cdq
mov
rcl
dec
or
leave
mov
add
js
jo
inc
mov
adc
add
ds
and
xchg
cmp
xchg
jns
push
popf
icebp
mov
imul
pop
lods
inc
add
adc
xchg
sets
sub
out
sahf
add
test
mov
jge
out
dec
popa
mov
popa
into
ficom
sbb
sub
sub
icebp
jo
(bad)
dec
pop
loop
mov
lahf
dec
sub
mov
sbb
push
pushw
or
xchg
or
or
mov
pop
xor
rol
sub
mov
(bad)
mov
adc
call
daa
cmp
clc
pop
fsubr
dec
xchg
jbe
add
push
cmp
repz
mov
xlat
add
into
adc
add
or
cmp
sbb
les
push
pop
or
fsubr
aam
pand
sub
add
cmp
pushf
mov
mov
push
pop
push
loope
and
and
add
inc
pop
jno
sbb
add
jns
out
push
push
(bad)
inc
add
add
push
jmp
int
or
add
adc
aam
arpl
inc
pop
mov
cmps
xor
or
xor
push
dec
(bad)
xlat
test
es
jmp
xor
fild
xor
jne
sbb
mov
lods
and
xor
(bad)
nop
pop
lock
mov
out
push
xchg
loope
test
mov
enter
fcomp
and
push
inc
cmp
test
aad
cmps
adc
je
and
push
sub
pusha
add
or
sub
dec
shl
and
or
pusha
sbb
sub
inc
inc
popa
rcl
pop
or
movs
cmp
aaa
aaa
push
retf
adc
(bad)
ror
inc
call
and
adc
mov
je
jmp
sub
adc
sbb
sub
dec
test
mov
xchg
mov
add
mov
mov
xchg
xchg
push
xchg
aaa
repz
(bad)
xor
ror
push
dec
arpl
adc
or
mov
and
test
cdq
sbb
jg
fmul
jnp
dec
or
hlt
xchg
or
push
test
xor
mov
pop
nop
stc
and
mov
sbb
test
sub
call
call
mov
sbb
add
fcmove
leave
in
div
dec
pop
pop
add
loopne
gs
lock
cmp
add
retf
jmp
inc
dec
out
je
push
mov
cmps
retf
shl
(bad)
ins
adc
test
mov
adc
cmp
in
fbld
test
int3
loope
inc
push
or
jle
dec
mov
int
cld
adc
or
jns
int
je
xor
movs
int
mov
sub
pop
dec
ins
add
sub
or
inc
imul
dec
(bad)
aam
mov
dec
jmp
and
or
dec
test
sub
int3
dec
mov
or
aad
xchg
adc
or
fs
movs
movs
fs
xchg
dec
fldenv
push
xlat
or
mov
and
xor
xchg
jp
add
sub
js
pop
popa
or
jecxz
mov
das
push
dec
int3
xchg
popa
arpl
sbb
add
add
sbb
sbb
xchg
inc
or
das
xchg
cmc
addr16
or
cmp
shl
outs
or
and
pop
movs
lock
inc
or
xchg
int
sub
test
mov
mov
loopne
das
adc
xlat
test
dec
jnp
mov
and
inc
stos
retf
fcmovbe
dec
cwde
sub
mov
or
add
mov
nop
push
es
inc
jb
std
pushf
mov
cmps
cwde
dec
(bad)
cmps
add
mov
fadd
stc
inc
cmp
int
ficom
fist
mov
add
add
push
lds
es
sbb
cdq
inc
data16
xor
xchg
loopne
loop
mov
les
mov
das
imul
adc
loope
mov
lea
shl
add
xor
and
fadd
inc
cmp
mov
mov
mov
popf
nop
test
jmp
sar
and
pop
sub
and
xor
add
or
jle
xchg
pop
shl
cs
cmp
mov
inc
es
ins
mov
in
push
jp
mov
rcr
push
push
(bad)
fs
add
add
mov
or
retf
ins
pusha
pusha
mov
dec
adc
push
push
arpl
xor
cmp
and
mov
inc
out
(bad)
das
and
(bad)
js
or
inc
loope
xchg
cmc
inc
jmp
adc
out
xchg
retf
test
ficomp
xchg
mov
cmps
jg
mov
adc
sbb
adc
rcl
sub
lock
xchg
mov
mov
ret
jmp
push
or
sub
inc
sbb
or
stos
jmp
daa
add
icebp
xchg
mov
pusha
pop
add
xor
jo
add
jmp
cmp
aas
and
sahf
pop
ret
and
addr16
lock
xchg
mov
mov
mov
mov
inc
stos
nop
call
ins
or
das
and
push
fs
mov
lods
rcl
inc
cmp
cmp
ins
arpl
in
or
and
sbb
mov
xchg
pop
mov
leave
inc
or
jl
rcl
mov
mov
xchg
test
xchg
or
dec
cwde
mov
les
test
js
mov
clc
retf
add
jmp
sbb
out
pop
sub
pop
cmp
(bad)
add
int3
ror
popa
aaa
rol
lea
and
mov
sbb
rcl
aam
dec
aam
lea
push
call
or
push
xchg
shl
mov
retf
call
ins
adc
jne
sub
or
and
dec
jbe
push
push
sbb
sbb
sbb
fstp
aaa
mov
inc
invd
mov
cwde
inc
rol
ror
add
adc
shl
pop
imul
sub
or
mov
pop
inc
shr
sbb
mov
repz
aad
outs
jo
test
adc
inc
add
adc
lods
fidiv
fwait
jae
sub
(bad)
(bad)
cmps
cmp
inc
sbb
adc
cmp
rcr
inc
loopne
ret
jne
or
dec
mov
or
cmp
and
inc
add
(bad)
push
or
aaa
mov
rcr
addr16
cmp
push
mov
xor
inc
sub
repnz
inc
jno
pop
ins
imul
sbb
test
pop
movs
push
fadd
mov
shr
mov
mov
push
popa
jmp
jle
adc
or
jne
xchg
mov
or
hlt
shl
std
add
mov
cs
retf
in
mov
adc
or
mov
adc
mov
test
nop
add
imul
mov
mov
jmp
mov
cwde
js
push
xchg
and
pusha
or
xchg
adc
push
ins
mov
add
mov
add
fstp
push
loopne
pop
nop
push
push
pop
sub
je
push
iret
push
and
mov
imul
inc
arpl
aas
outs
lea
push
dec
xor
cmps
mov
sub
or
pop
fstp
cmps
mov
lea
es
add
lods
retf
xchg
pusha
or
dec
sub
dec
mov
add
pop
and
push
push
xchg
inc
mov
sbb
mov
xchg
shl
mov
ret
call
or
mov
bound
dec
in
fs
inc
test
xor
add
inc
or
daa
cmp
pop
fsubr
push
mov
int
or
cmp
fwait
lahf
add
add
mov
jae
neg
push
ins
cmp
mov
sbb
js
sbb
repnz
push
sbb
pop
dec
jbe
popaw
pop
sbb
lods
xlat
ret
pop
jb
cmp
sbb
sub
inc
add
movs
mov
shr
inc
sub
and
sbb
or
mov
pop
or
add
xor
pop
ret
or
adc
je
push
mov
test
or
add
xchg
or
scas
dec
test
cmp
sbb
gs
lahf
and
sub
xchg
test
ret
push
and
mov
clc
add
lock
out
cwde
imul
jge
sub
sbb
shld
adc
adc
or
lea
jle
mov
pcmpeqw
gs
inc
sti
mov
pop
pop
or
dec
jmp
and
mov
cdq
cmp
add
pop
add
js
in
imul
imul
cs
push
add
mov
add
and
push
mov
stos
and
nop
stos
mov
cs
add
jne
push
rcl
lock
dec
push
(bad)
mov
dec
rcr
xchg
inc
or
jo
inc
jbe
inc
or
push
or
mov
pop
inc
adc
sti
adc
cmp
in
xor
or
dec
and
int
and
ret
xchg
nop
loope
mov
mov
imul
inc
adc
or
test
call
imul
adc
add
jl
jnp
pusha
adc
adc
adc
or
adc
and
or
mov
or
arpl
iret
retf
adc
mov
out
dec
shr
mov
pusha
sbb
sbb
add
leave
xor
rol
adc
mov
adc
sbb
add
lds
lods
inc
xchg
imul
jae
xor
mov
mov
and
aam
or
push
loopne
pop
and
pushf
jl
and
test
fcom
or
or
pushf
sbb
inc
mov
push
addr16
(bad)
or
add
mov
or
mov
inc
pop
adc
mov
mov
cs
sub
cld
push
push
push
add
push
add
fild
add
mov
dec
push
mov
jns
add
mov
mov
push
lods
lock
sbb
in
imul
push
inc
aaa
fdiv
sbb
jg
rol
scas
push
outs
sub
fwait
ins
out
jl
inc
mov
dec
fmul
rcl
xchg
mov
pop
cmp
xor
and
jg
lds
sub
mov
push
xchg
add
je
jae
daa
sub
adc
and
fsub
inc
ret
cmp
sbb
shr
or
mov
push
or
cmp
or
add
mov
jo
adc
adc
adc
add
mov
aad
jne
test
pop
mov
cmp
sbb
imul
cli
push
rol
movs
inc
pop
cmp
xor
add
xlat
jmp
and
call
stos
jne
mov
mov
popf
push
jne
cmps
push
out
lods
outs
arpl
xchg
jmp
dec
or
pop
in
xor
fsub
inc
push
ins
push
fcmovbe
lds
push
push
pop
jns
inc
push
test
pop
ret
or
inc
adc
push
cmp
mov
mov
shl
dec
stos
and
pop
cmps
cmp
and
addr16
sar
xchg
xor
pusha
pop
sbb
call
pop
popa
mov
pusha
cmps
nop
xchg
(bad)
pop
jb
and
push
nop
sbb
sbb
mov
data16
adc
mov
xchg
cmps
xor
retf
mov
out
cwde
stos
movs
aad
rcr
sub
mov
ret
mov
push
push
or
and
push
cs
rol
xchg
inc
rcl
mov
add
jne
pop
mov
je
test
mov
pop
sbb
dec
out
test
pusha
pusha
or
enter
lods
je
inc
mov
and
test
sbb
push
push
cli
mov
jecxz
jns
mov
mov
int
imul
dec
fwait
push
add
or
add
jne
scas
adc
ret
addr16
inc
add
or
or
enter
dec
mov
int3
popf
mov
shr
mov
inc
mov
jp
enter
pop
adc
(bad)
test
jecxz
(bad)
cs
cwde
sbb
int
cwde
or
inc
push
sar
xor
repnz
dec
stos
push
push
in
dec
popa
adc
ret
dec
nop
js
rcr
inc
jo
dec
imul
jmp
shl
mov
bound
push
sbb
or
xor
adc
call
or
pop
fidivr
popf
mov
add
sub
and
imul
pop
cmps
and
sbb
imul
mov
sti
clc
xor
and
push
jg
out
add
test
or
jb
sub
sbb
sbb
data16
xchg
sub
adc
cmps
lea
rcl
mov
or
imul
xchg
das
adc
add
scas
inc
add
mov
or
xchg
cmp
add
or
js
xor
sbb
std
inc
add
out
add
or
mov
pop
or
push
add
fmulp
aam
inc
jns
imul
scas
cmp
je
jg
xlat
mov
pop
inc
or
cmp
sbb
fidiv
das
int
pop
pop
ins
xor
and
sub
int
fs
out
outs
sub
fwait
adc
push
push
adc
xchg
fwait
lods
xor
and
hlt
fs
sub
ss
ins
sub
les
mov
and
xor
inc
std
xchg
lock
inc
add
mov
inc
inc
sub
sbb
lock
sti
inc
loope
mov
pop
loopne
mov
clc
xchg
pop
sub
lock
add
add
cld
into
mov
sbb
outs
jl
push
push
sbb
inc
dec
ror
sub
jmp
add
fdiv
ja
mov
xlat
mov
cmp
adc
fdiv
mov
xchg
mov
sub
cmps
push
cmps
loope
xchg
mov
and
add
ret
jns
loopne
call
adc
inc
dec
sbb
shr
push
or
jno
lea
test
xchg
movs
dec
push
push
int
in
push
xor
or
fadd
sbb
or
xor
out
clc
sbb
add
fistp
cmp
rol
or
pop
cwde
movs
mov
cmp
add
sbb
push
xor
fadd
mov
(bad)
sbb
aas
inc
pop
dec
pop
lock
mov
stc
jmp
pop
inc
mov
clc
retf
jne
jns
pop
lea
aad
xlat
mov
pop
enter
and
and
mov
or
or
data16
mov
inc
push
ins
sub
or
push
das
mov
add
(bad)
push
adc
xchg
mov
xchg
scas
in
call
mov
add
mov
retf
adc
or
fiadd
push
ret
push
rcl
ret
sub
into
dec
jnp
pop
jmp
daa
mov
shr
out
push
test
mov
(bad)
fstp
jmp
mov
pop
push
xchg
or
addr16
inc
jl
imul
imul
or
and
popa
jns
adc
xor
mov
and
es
fld
push
inc
push
pop
adc
push
mov
jg
hlt
adc
loopne
lds
xchg
adc
fsub
js
push
fcomp
add
popa
xor
rol
clc
cs
nop
or
adc
fld
pop
or
adc
test
mov
xchg
xor
jmp
fwait
push
sub
mov
sbb
lods
mov
test
enter
mov
inc
inc
push
and
lahf
call
(bad)
or
and
stos
ins
loope
cmp
jle
call
inc
loope
(bad)
jnp
mov
retf
sbb
cmp
fadd
test
sbb
test
lods
nop
fsubr
call
in
cwde
jns
push
stc
push
rcl
cmp
or
push
or
mov
ja
movs
aad
add
adc
jbe
xchg
shl
in
xor
add
or
jo
sbb
mov
loope
pop
jae
mov
mov
and
sub
das
mov
adc
shr
push
inc
jmp
int
mov
or
mov
icebp
add
into
jmp
dec
xor
rcr
push
xchg
cs
or
shl
jb
scas
mov
leave
sub
mov
push
repz
xor
sub
sti
imul
add
xor
mov
stos
cmp
loopne
add
mov
not
sahf
jp
inc
loop
push
loopne
aam
or
and
or
sahf
push
shl
mov
adc
icebp
cmp
inc
mov
sbb
fiadd
in
sub
mov
loopne
fcomp
cmps
cdq
mov
adc
pop
das
cmp
sub
adc
cmps
sub
jnp
mov
lea
or
sbb
or
lea
ja
test
and
or
push
mov
pop
fs
or
xor
pop
pusha
loope
cmps
int3
ret
push
mov
sbb
sbb
icebp
mov
mov
dec
lods
jno
movs
or
or
dec
sub
xlat
dec
mov
dec
mov
int3
into
pusha
leave
pop
add
std
sbb
fs
and
sub
add
dec
call
push
mov
test
loope
mov
call
inc
ins
mov
sub
call
cdq
cmp
in
mov
ins
mov
mov
add
pop
jo
dec
push
rcl
gs
jg
fsub
mov
les
jle
addr16
inc
add
lods
mov
int3
sbb
sub
stos
call
cmp
mov
(bad)
jg
addr16
or
cmp
lock
inc
and
mov
xchg
ret
dec
retf
int
mov
push
in
xor
xor
mov
outs
iret
xlat
jmp
or
or
inc
popf
lds
sbb
push
sbb
lock
inc
fnstenv
sub
clc
imul
dec
pusha
cmp
shr
cdq
pop
inc
xchg
inc
test
ds
jmp
in
pop
jmp
fistp
push
lea
or
imul
dec
es
das
fsubr
add
push
jle
es
scas
jb
mov
scas
xor
jle
mov
daa
adc
mov
push
mov
jo
mov
dec
jo
dec
cmp
bound
je
adc
sub
adc
bound
ins
imul
cmp
mov
int3
(bad)
jbe
pop
jle
mov
and
fiadd
(bad)
mov
movs
imul
outs
fstp
cmp
jl
les
and
inc
dec
push
mov
lock
dec
mov
xor
push
rol
dec
cmp
push
iret
pop
pop
sub
push
retf
lahf
inc
mov
jne
lea
jo
test
dec
les
mov
addr16
sub
add
xor
sub
sbb
mov
pop
test
and
xchg
movs
leave
js
imul
mov
cmc
mov
jnp
push
popa
xor
xchg
dec
cdq
sub
xor
sub
xor
adc
push
add
add
push
leave
mov
xchg
je
xor
rol
jns
mov
lahf
pop
jo
jl
movs
dec
dec
jo
repz
(bad)
jp
loopne
add
sub
mul
cwde
pop
mov
cmp
pusha
cmp
mov
and
add
jno
sbb
mov
adc
xor
or
adc
xor
les
das
mov
mov
inc
test
and
push
jno
idiv
add
mov
bnd
sbb
or
cmp
adc
div
sbb
add
inc
xchg
cmp
add
and
gs
sbb
lock
jnp
jmp
adc
movs
or
cmp
call
or
rol
xor
mov
mov
push
push
sub
popf
ja
sub
cmps
gs
adc
adc
int3
ss
hlt
inc
push
mov
mov
dec
add
ret
mov
xchg
int3
or
push
enter
xchg
fst
fsubr
(bad)
push
out
shl
enter
lods
mov
shl
ret
cs
push
ins
popa
cmp
push
cmp
push
xchg
dec
mov
sub
cli
rcl
popa
fcomp
inc
jo
inc
loop
sbb
sbb
adc
mov
lock
bound
sbb
or
popf
jo
cmp
jmp
sub
push
dec
fwait
xchg
loopne
fsubr
jb
push
adc
in
or
mov
lock
not
and
mov
and
jb
mov
push
or
iret
xchg
inc
clc
aas
inc
or
clc
lock
jmp
aad
cmp
sub
lea
mov
shl
and
outs
xor
sahf
lods
jge
sahf
and
scas
sti
mov
hlt
inc
push
push
dec
call
xor
loop
add
jl
test
or
popa
mov
pop
mov
sub
jge
pop
push
xor
jns
push
xor
adc
sub
sar
cli
repz
leave
inc
daa
push
(bad)
mov
and
xchg
mov
add
adc
daa
fs
ret
cwde
cwde
test
dec
jmp
and
xor
add
jge
cmp
add
jle
sbb
jg
add
mov
cli
push
and
ds
std
pxor
ins
push
sbb
push
adc
shl
sub
push
and
or
jp
dec
xchg
and
cwde
xchg
inc
or
ret
loopne
sub
mov
mov
push
seto
stos
jne
les
add
movlps
xchg
mov
inc
cmp
jns
add
adc
or
pop
int3
and
fwait
shl
test
ds
cmps
shl
and
xor
mov
mov
add
imul
aam
cmps
movs
and
or
fisub
cdq
int
es
mov
xor
add
ret
xchg
neg
sbb
arpl
add
lock
sub
sbb
js
sbb
xchg
retf
stos
adc
or
adc
add
pop
jno
je
rcl
aam
sub
pop
push
sahf
lods
lods
dec
sub
dec
sbb
pop
iret
in
and
gs
jns
inc
push
bound
ins
mov
and
test
inc
pop
dec
push
sbb
test
cmps
lods
in
xchg
lods
sub
add
fcomi
pop
sbb
and
rol
ret
add
jnp
(bad)
retf
stos
dec
sbb
push
add
or
lods
hlt
je
dec
ins
mov
xchg
es
popf
push
dec
imul
jg
inc
sbb
add
test
jns
sub
es
sbb
or
inc
pop
sub
sub
cmp
pop
cmp
loop
movs
xor
pushf
in
push
loopne
xchg
push
mov
mov
adc
mov
rol
pop
or
add
dec
dec
push
ficom
add
jle
ins
sub
fmul
or
mov
loope
repnz
dec
aam
xchg
pop
pop
adc
cs
pop
xchg
fld
sahf
mov
pop
mov
sub
cwde
dec
add
pusha
xchg
aam
bndldx
dec
in
inc
push
mov
add
in
and
mov
nop
add
add
adc
retf
dec
mov
adc
xchg
sbb
sub
lea
mov
enter
nop
(bad)
cwde
movs
and
inc
ret
sbb
inc
test
shr
retf
mov
pop
xor
add
pusha
dec
inc
test
aaa
dec
mov
mov
and
and
adc
ss
or
sub
fs
xor
sub
stc
in
mov
mov
jmp
push
or
enter
or
dec
mov
mov
jecxz
aaa
jecxz
stos
xchg
xor
mov
and
mov
pusha
or
das
(bad)
xor
xchg
dec
movs
movs
cdq
inc
dec
dec
pop
or
jl
push
sub
in
push
push
push
add
mov
dec
dec
test
nop
xchg
retf
imul
sbb
stos
dec
xor
test
jno
aas
add
xchg
mov
add
cs
sub
push
mov
xor
daa
sub
inc
es
xadd
in
and
inc
sbb
push
shl
mov
sahf
or
pop
xchg
mov
xor
dec
shr
jae
adc
(bad)
rol
add
ficomp
xchg
ret
pushf
sbb
push
out
stos
adc
stc
xchg
jecxz
cdq
rol
arpl
and
cmps
dec
pop
cs
mov
and
dec
inc
add
aaa
dec
pusha
push
adc
and
shl
popa
xor
and
dec
sub
or
mov
sub
adc
test
mov
push
inc
lea
push
aaa
(bad)
(bad)
and
pop
pusha
inc
mov
cwde
cwde
push
xchg
sub
jge
pop
jge
push
and
call
push
pop
xor
push
rol
inc
inc
cmp
jle
pusha
add
nop
and
pushf
adc
adc
dec
push
mov
mov
cmp
popf
push
test
arpl
ins
sbb
das
sub
and
add
and
pusha
lock
sub
cmps
xor
stos
in
je
(bad)
in
daa
ins
cwde
push
push
xor
loopne
(bad)
pop
jmp
or
add
jl
mov
jge
cmp
inc
(bad)
or
addr16
dec
jae
inc
sbb
pop
sbb
adc
scas
(bad)
lea
fwait
mov
test
outs
inc
cmp
jecxz
adc
ss
mov
mov
icebp
mov
and
fisttp
out
nop
sbb
push
or
add
or
pop
jge
sahf
mov
or
push
cmc
in
test
addr16
je
fcom
mov
pop
add
cmp
stc
mov
xchg
mov
cmp
adc
popa
ret
xchg
sub
ins
inc
pop
and
sub
mov
or
inc
or
add
add
je
cmp
sub
add
and
sbb
ins
das
jmp
xchg
adc
mov
fild
xchg
xlat
ss
popa
arpl
(bad)
outs
(bad)
dec
aas
mov
and
fs
dec
sbb
or
mov
in
es
fmul
lods
rol
push
push
dec
jnp
cwde
test
and
add
or
mov
sub
rcr
or
add
add
lods
mov
pop
retf
cmps
inc
pop
in
or
push
jne
pop
call
adc
mov
lods
pop
xor
or
add
and
add
mov
pop
js
ror
add
mov
js
push
cmp
or
dec
popf
out
enter
sbb
test
dec
fstp
adc
bound
jmp
push
pop
push
jno
pop
cwde
aas
test
add
cmp
punpckhbw
xchg
into
pop
mov
push
je
shl
imul
repnz
jo
xor
rol
jo
test
add
aam
sub
xchg
test
inc
push
add
into
ins
fist
push
cli
xor
cmp
aam
xchg
mov
in
movs
cli
and
js
push
push
inc
add
xor
push
cmp
sub
pop
adc
adc
jno
sub
lock
mov
dec
inc
mov
xor
(bad)
xchg
xchg
dec
jno
iret
repnz
adc
mov
mov
rol
jmp
call
lods
mov
xchg
and
xor
test
mov
and
stos
and
mov
clc
lea
test
dec
push
lock
inc
mov
cmp
dec
shl
sub
test
jne
or
xchg
fmul
add
jl
cmps
mov
cmps
test
add
xor
mov
mov
jle
test
add
les
test
movs
mov
pop
cmp
adc
mov
les
out
gs
je
jbe
cmp
enter
sbb
lock
je
out
xchg
mov
dec
mov
loope
mov
cmps
push
add
fstp
dec
sbb
mov
rcl
jb
out
fwait
enter
add
dec
aas
in
xchg
out
stc
and
mov
adc
aam
mov
dec
inc
jne
je
call
mov
dec
and
xor
pop
mov
push
ror
pop
pop
dec
cbw
clc
dec
mov
std
ficom
in
jne
add
mov
scas
dec
sti
or
lea
je
movs
mov
push
xchg
dec
sub
push
push
inc
adc
cmp
cmp
sub
push
rcl
enter
cmp
xchg
cdq
adc
test
sbb
ror
dec
dec
popa
call
mov
popa
rcr
jmp
mov
add
popa
and
adc
sahf
push
mov
dec
dec
or
xor
ret
imul
mov
mov
push
retf
push
fistp
fwait
cmp
daa
push
movs
sbb
push
shl
cli
(bad)
or
jp
mov
pop
mov
rcl
or
or
in
adc
mov
icebp
pop
push
es
scas
inc
sub
add
aad
out
xchg
leave
xchg
sub
icebp
xchg
add
loope
inc
enter
dec
pop
mov
adc
test
mov
push
(bad)
shl
mov
push
sbb
and
jno
adc
call
pop
pop
nop
cmp
out
adc
push
jle
jne
rcl
sub
push
mov
jl
pop
pop
push
add
jmp
xor
add
lock
nop
cmp
mov
(bad)
pusha
xor
add
ret
xor
js
jno
dec
push
pop
add
adc
dec
mov
or
clc
xor
jnp
pop
xchg
adc
pop
ret
adc
jl
mov
add
mov
cmp
dec
pop
sbb
add
pop
fisub
and
stos
cmp
mov
nop
push
test
aaa
lds
inc
std
mov
or
bound
mov
(bad)
mov
xchg
mov
or
dec
add
pop
mov
(bad)
mov
icebp
xor
(bad)
and
retf
mov
cmp
jmp
and
xor
add
icebp
add
adc
xor
and
call
dec
iret
push
xchg
or
shr
dec
mov
cld
fdivr
mov
inc
mov
js
pushf
test
add
adc
loopne
mov
adc
cld
push
hlt
aad
sbb
pop
jp
je
cmps
jl
jb
xchg
test
xchg
fmul
add
nop
cwde
movs
test
sub
inc
test
pop
out
rcr
(bad)
or
sbb
cmc
and
adc
mov
xchg
call
inc
bound
imul
dec
mov
dec
adc
inc
or
nop
je
mov
stos
dec
mov
jne
mov
inc
out
or
and
sub
inc
test
mov
jae
loop
loope
ss
mov
cmp
dec
cwde
and
stos
inc
dec
inc
fnstsw
xchg
pop
daa
clc
dec
(bad)
movs
pop
push
inc
aas
push
lock
in
retf
mov
rol
jbe
outs
icebp
popa
sbb
dec
(bad)
enter
(bad)
mov
les
lock
inc
sub
sbb
xchg
enter
pop
rcr
nop
je
inc
js
fwait
and
test
sub
aaa
shl
xor
mov
pop
cs
out
(bad)
push
push
cmc
adc
sbb
adc
jo
fs
xchg
ret
sbb
inc
mov
push
cmp
sbb
inc
sbb
jge
mov
adc
jne
jns
sbb
ins
mov
dec
test
inc
xchg
mov
push
jl
add
fwait
rol
inc
ja
shr
cdq
in
dec
and
iret
xchg
test
adc
jae
mov
bound
lods
(bad)
(bad)
adc
xor
aaa
push
(bad)
xor
mov
lock
pop
ret
mov
int
js
jle
mov
shr
test
add
and
and
sbb
inc
div
jp
mov
push
or
inc
jmp
rsqrtps
xchg
pop
clc
test
push
mov
sbb
pop
mov
lock
push
dec
sub
movs
and
add
mov
push
pop
push
add
mov
test
test
adc
xor
dec
sti
jb
sub
and
rol
sbb
neg
dec
jb
dec
lods
in
retf
or
sub
pop
movs
jae
add
push
mov
push
mov
sbb
fwait
dec
inc
stos
and
addr16
mov
sbb
mov
dec
bound
inc
out
cmp
adc
clc
popa
dec
push
stc
or
push
push
push
push
sub
adc
sbb
repnz
(bad)
je
push
pop
shl
jb
mul
and
iret
pop
stc
sbb
ficom
pop
adc
push
ret
cmpps
enter
fist
adc
movs
loopne
or
fisubr
pop
or
sub
push
fcom
sub
loop
mov
test
add
fs
add
push
adc
xor
add
nop
add
push
enter
jo
fistp
fsubr
retf
je
rol
and
add
mov
xor
sbb
push
push
mov
ins
add
jno
xor
add
sub
test
loop
call
xchg
jge
ins
xchg
jne
sub
cmc
adc
sbb
jmp
dec
and
add
stos
adc
dec
dec
pop
xor
dec
push
mov
fld
sbb
mov
mov
sbb
mov
popf
cdq
pop
xor
out
xchg
inc
(bad)
xchg
inc
ds
jmp
or
enter
or
outs
nop
shl
imul
cmp
xor
push
test
jno
pusha
call
pop
add
or
sub
rcl
push
fucom
pop
inc
sbb
xchg
adc
add
(bad)
jge
mov
or
add
sbb
aas
and
and
add
jnp
push
pusha
xchg
sub
mov
add
xchg
repnz
xor
add
(bad)
repnz
dec
cmp
mov
cli
add
inc
add
push
ret
popa
xor
jmp
sbb
push
retf
push
jb
mov
sbb
mov
test
cmp
sar
and
sbb
pop
das
sbb
add
sub
add
in
mov
leave
or
and
sbb
mov
aad
loope
add
add
xchg
adc
jo
fisttp
pop
test
sbb
leave
scas
test
enter
jmp
popa
add
add
mov
jne
xchg
or
xor
cmp
popf
leave
xor
inc
mov
dec
adc
mov
sbb
rol
or
adc
adc
xchg
sbb
adc
es
dec
mov
sbb
adc
test
push
repnz
ins
push
mov
movs
xchg
jmp
jmp
sbb
dec
mov
sub
mov
sbb
add
jle
inc
dec
dec
adc
mov
cmp
pop
or
adc
stc
push
sub
fst
fiadd
mov
dec
lods
into
xor
dec
mov
jb
jns
jo
dec
xchg
in
fsub
xchg
push
jmp
push
inc
push
adc
add
sti
pop
or
pop
adc
pop
mov
sbb
pop
add
sahf
add
mov
loope
movs
adc
or
fild
cmp
push
sub
pop
(bad)
fmul
sub
inc
mov
xchg
xchg
push
xchg
add
stc
mov
clc
popa
sub
pop
cs
inc
cmp
push
add
popf
inc
and
dec
push
test
mov
dec
leave
inc
popa
loop
sub
push
popf
mov
xchg
stos
fs
xlat
adc
js
cmps
inc
jecxz
add
fbld
inc
repz
add
jbe
movs
popf
aaa
adc
or
sbb
pusha
cmp
iret
out
push
ret
inc
pop
add
xor
sub
inc
sbb
test
mov
xchg
mov
enter
sbb
pop
jne
pop
lahf
xchg
or
stos
addr16
pop
jl
fld
mov
sti
sub
imul
dec
outs
inc
xchg
shl
add
leave
lds
add
xor
neg
dec
lea
ret
movs
or
jg
js
ret
(bad)
je
cmp
fwait
js
mov
xchg
rcl
adc
mov
pop
mov
add
pop
fld1
push
mov
push
fucomp
pop
and
ja
jg
sbb
sub
cwde
dec
xchg
les
inc
loopne
pushf
jne
push
mov
(bad)
pop
mov
movs
or
jg
lods
rcl
and
int3
and
sbb
fidivr
cld
and
out
add
cmp
push
push
adc
retf
pop
jmp
dec
movs
in
xor
mov
inc
xchg
inc
push
or
bnd
(bad)
jnp
xchg
cmp
movs
in
rol
lock
inc
xchg
jle
add
mov
out
mov
pop
loope
sub
or
and
add
cmp
mov
jmp
movs
sub
adc
cwde
pusha
push
mov
pop
xor
add
mov
sub
dec
retf
lock
jno
xchg
adc
mov
xchg
mov
jp
cmp
scas
cmp
add
push
inc
push
mov
or
mov
push
stos
(bad)
sbb
add
dec
jbe
sbb
call
dec
or
in
push
mov
xchg
xlat
sub
(bad)
shl
push
and
imul
les
push
scas
sbb
sbb
pop
aam
ss
rcl
dec
sbb
xlat
or
push
les
sub
adc
sti
push
inc
push
idiv
jmp
and
jne
pusha
test
daa
gs
sbb
jge
pop
(bad)
push
fmul
shl
inc
nop
call
mov
inc
push
in
jp
inc
cmp
retf
lds
(bad)
scas
push
into
mov
lock
lods
lods
cmp
or
in
int3
cmc
mul
adc
mov
sub
pop
cld
mov
sub
inc
push
cmps
hlt
shl
inc
push
mov
les
mov
cmp
fwait
loop
repnz
add
(bad)
or
mov
dec
push
xchg
and
mov
je
xlat
mov
outs
mov
mov
pop
jp
and
or
adc
pop
in
out
mov
mov
sub
int3
xor
adc
mul
loope
aad
fs
(bad)
int3
sahf
int3
aas
shl
xchg
push
cmp
or
sub
jae
and
mov
jmp
sbb
cwde
add
leave
add
pop
dec
or
ja
loop
leave
pop
sti
je
push
aad
add
outs
and
data16
mov
jnp
aam
outs
(bad)
das
mov
cmp
js
fwait
mov
mov
pop
inc
dec
call
or
pop
int3
in
add
nop
sub
es
and
repnz
xor
rol
sbb
cdq
mov
or
jne
or
pop
push
inc
ret
(bad)
push
mov
mov
sbb
push
adc
imul
mov
jne
adc
sbb
cli
shl
mov
imul
jae
js
aad
mov
mov
imul
ins
(bad)
sbb
iret
pop
inc
dec
call
lock
lock
push
xor
cmps
adc
and
add
adc
lahf
add
jo
xchg
dec
in
sbb
nop
mov
or
aam
and
or
pop
xor
scas
inc
cmps
dec
les
add
xlat
xchg
pop
adc
dec
loopne
mov
adc
je
inc
jmp
outs
mov
addr16
xor
jmp
pop
sbb
jg
cdq
add
stc
cdq
loope
into
mov
dec
push
ret
inc
inc
adc
xlat
loope
and
and
inc
mov
test
cmp
jp
dec
xor
inc
add
mov
xchg
adc
outs
outs
popf
je
sbb
pop
jmp
or
add
add
or
out
adc
add
jle
pusha
cdq
push
mov
xor
cld
dec
push
add
adc
lods
stc
stc
enter
jg
shr
push
leave
aaa
inc
jne
scas
ffree
jge
jnp
mov
or
imul
jo
or
xchg
and
or
pop
add
xchg
daa
mov
rol
or
inc
and
push
test
mov
imul
mov
out
push
jo
xor
shr
(bad)
shl
or
lds
jge
mov
int3
pop
add
in
pushf
mov
in
mov
sub
pusha
add
std
and
add
pop
lock
dec
out
mov
mov
mov
stos
mov
inc
fs
jo
dec
rcr
aaa
hlt
arpl
and
jno
inc
and
les
push
pop
(bad)
sbb
fmul
clc
add
xor
or
pop
sub
movs
mov
xlat
rol
(bad)
jmp
(bad)
push
jmp
inc
adc
stc
sti
add
xchg
or
pop
cmp
ror
movs
and
push
sub
xchg
mov
jmp
add
int
adc
adc
and
aaa
and
enter
adc
cdq
sub
adc
push
in
cmp
jge
ins
and
or
xchg
pop
fcmovnbe
dec
sbb
cmp
mov
xchg
cs
stos
xchg
or
fidivr
clc
in
dec
mov
inc
xor
fisttp
xchg
adc
movs
mov
jo
or
outs
inc
pop
adc
sub
adc
outs
scas
data16
jmp
adc
retf
lock
xchg
adc
xchg
aaa
and
add
mov
fwait
nop
dec
add
mov
shl
je
sub
xchg
out
in
loope
mov
sub
popa
and
xchg
dec
ret
or
cli
les
ret
(bad)
sub
push
sbb
inc
push
adc
add
out
mov
cmps
cs
jne
inc
shl
push
cmp
sub
jbe
mov
aam
je
add
xor
dec
popa
add
adc
shl
pop
add
fcom
rcr
lods
mov
inc
aam
ss
xor
ror
and
pusha
cmps
cmp
test
dec
cmp
sbb
(bad)
je
addr16
add
sbb
push
or
pop
bound
or
pusha
mov
adc
in
pop
inc
sub
sbb
xor
sub
aas
dec
jo
adc
pop
outs
test
adc
movs
movs
jl
sbb
mov
and
sbb
xor
add
or
or
sub
hlt
or
lods
add
sbb
jnp
fadd
je
sub
std
or
adc
jne
jmp
movsx
push
inc
or
gs
xor
arpl
adc
jmp
cmc
adc
and
push
xlat
push
add
add
inc
nop
jecxz
xchg
or
pop
das
dec
shr
or
jnp
add
dec
pop
dec
adc
or
stos
fnstenv
ds
test
call
xor
jge
push
mov
or
inc
dec
std
dec
push
adc
dec
cmp
add
les
pop
and
inc
xor
mov
or
fs
ja
sbb
and
fisub
push
sub
fld
ins
dec
add
call
nop
call
ins
inc
sub
in
in
add
in
sahf
nop
neg
cmp
aas
rcl
mov
lahf
and
and
fbld
jp
inc
(bad)
loope
add
test
xor
sbb
jmp
xor
neg
sbb
ja
xchg
pusha
mul
in
sub
cmp
or
aad
sub
push
sub
push
sbb
and
inc
clc
imul
jne
add
mov
push
dec
dec
cmp
jecxz
or
push
add
and
cmp
add
xor
int
add
push
adc
and
mov
js
ds
jne
dec
imul
or
mov
mov
cmps
jl
fstp
xchg
pop
and
xchg
dec
cdq
call
pop
nop
lea
dec
adc
cmp
ret
gs
movs
add
add
and
or
mov
jp
rcr
jmp
sub
xor
ret
jns
inc
aaa
or
push
repz
mov
std
pop
add
mov
lea
dec
sub
mov
mov
inc
mov
and
push
ror
inc
ret
or
icebp
lods
adc
mov
mov
add
xchg
add
push
push
pop
or
(bad)
or
sbb
jb
fsub
and
(bad)
addr16
add
nop
push
into
push
dec
nop
push
dec
adc
cmp
xor
adc
xor
mov
(bad)
xlat
(bad)
nop
mov
add
sahf
pop
jmp
rcl
or
mov
and
sbb
je
icebp
or
mov
loopne
mov
and
les
fdivr
aaa
dec
in
stos
int3
or
inc
sbb
iret
adc
rcl
mov
push
pusha
adc
xchg
mov
and
and
(bad)
test
ret
into
xchg
jne
movs
mov
and
add
inc
pop
scas
movs
pop
cmp
call
mov
add
push
sbb
and
pop
test
repz
cmp
or
jecxz
or
cmp
sbb
mov
or
in
movs
and
(bad)
repnz
inc
xchg
js
adc
mov
test
cld
ror
cmp
jle
mov
mov
dec
test
or
jae
add
int3
(bad)
push
and
mov
jne
or
test
test
xchg
and
or
loop
adc
lods
shl
call
xchg
pop
push
cmp
mov
call
jo
adc
outs
sub
pop
outs
mov
jl
pushf
ss
sub
adc
movs
mov
pop
push
sub
int3
xchg
fnstenv
iret
out
or
fsubr
aaa
xchg
jmp
dec
imul
jne
jo
rol
cmps
pushf
nop
mov
imul
dec
(bad)
or
in
je
cmps
add
adc
aas
adc
pop
xor
leave
adc
and
or
aam
fcomi
inc
xor
sbb
les
std
mov
xchg
stc
or
push
xor
sub
fisubr
shr
and
jg
stc
add
cmp
std
mov
push
mov
ins
sbb
int3
mov
push
aas
and
add
not
fs
cs
mov
pop
or
xor
adc
pusha
push
or
mov
mov
pusha
test
std
sbb
sub
or
adc
add
xor
dec
lea
sbb
mov
mov
sbb
adc
scas
mov
mov
hlt
adc
int3
xchg
mov
and
mov
dec
pop
lock
pop
and
mov
adc
out
cmp
or
call
jae
dec
xchg
inc
cmp
or
inc
gs
xor
jmp
xor
retf
xor
jae
cmps
clc
mov
in
sub
sub
(bad)
cmp
adc
inc
aad
dec
jmp
and
dec
push
cmp
sub
mov
pop
retf
rcl
inc
out
cmp
pop
mov
es
fwait
jmp
clc
idiv
sub
add
in
push
cmp
adc
pop
inc
push
call
jecxz
xlat
pop
add
xchg
jle
and
xor
mov
outs
xlat
and
push
icebp
ins
add
daa
out
ins
pop
or
adc
or
test
push
les
jnp
test
neg
add
inc
inc
aad
daa
mov
js
pop
mov
push
pop
jmp
inc
loop
fst
sub
push
xor
dec
mov
or
int3
mov
add
mov
xor
jmp
cmp
push
sbb
jmp
mov
ins
xor
xchg
lock
inc
mov
push
in
push
xor
adc
push
or
mov
(bad)
xchg
mov
mov
mov
pusha
fs
(bad)
das
pusha
mov
out
or
or
sbb
cmps
iret
(bad)
xchg
imul
inc
rcl
cdq
jg
mov
jnp
je
dec
or
mul
and
or
add
js
push
shr
push
and
inc
push
cmps
mov
inc
push
inc
ret
add
pop
lods
sub
adc
imul
shl
xor
in
data16
push
lods
int3
inc
in
scas
adc
movs
inc
lods
shl
in
mov
jb
dec
jno
sbb
into
and
mov
xor
pop
and
clc
and
lock
leave
clc
lock
dec
shl
adc
add
adc
or
push
adc
inc
popa
push
in
inc
xor
or
aad
and
outs
add
aam
xor
pusha
sbb
iret
pop
add
lock
call
push
stc
inc
lock
sti
xor
add
shl
cmp
test
shl
mov
pop
mov
rcr
xchg
mov
icebp
sub
mov
xor
inc
sub
rol
and
nop
mov
mov
or
addr16
inc
shl
ror
ret
pusha
enter
add
mov
cwde
dec
cli
and
push
xor
shl
ret
loop
xor
push
mov
ss
sbb
add
pop
test
inc
or
jge
inc
sub
ror
add
inc
pop
jno
jne
test
cs
jne
ss
movs
xor
and
shl
jmp
mov
xor
pop
dec
and
mov
or
sub
movs
mov
imul
mov
pushf
fnstenv
out
shl
rol
int3
jno
gs
setbe
adc
or
fs
stc
sub
push
pop
div
retf
push
jl
fadd
inc
adc
cwde
es
test
in
sub
dec
push
jo
popa
and
mov
js
xchg
mov
xor
mov
arpl
pop
or
test
xchg
pusha
pusha
js
pop
sbb
fwait
pop
xor
call
retf
xchg
push
movs
das
ds
pop
mov
mov
in
fdiv
ins
or
aam
xor
and
fsubr
out
sub
jae
aaa
jb
fs
fadd
loopne
and
add
sbb
jo
cmp
inc
nop
inc
push
mov
pop
add
jle
fstp
aad
stc
cmp
jge
dec
push
and
loope
mov
xor
in
mov
inc
and
add
dec
cmp
mov
and
xchg
xchg
mov
adc
(bad)
fimul
addr16
je
loopne
mov
fsubr
sbb
(bad)
push
dec
sub
jb
cmps
jnp
leave
mov
je
jp
or
inc
imul
ret
push
xor
adc
mov
movs
neg
inc
jo
or
and
nop
sbb
push
and
popf
xchg
or
push
popf
aaa
jl
xchg
and
shl
cmp
sbb
mov
adc
std
push
sbb
mov
xchg
and
add
test
cmps
inc
cmp
or
cmp
and
mov
rol
cmp
add
data16
pop
jno
and
sub
sub
shr
sbb
push
fcom
adc
cmp
lods
sbb
xchg
and
and
add
dec
inc
sbb
cmp
loop
or
sub
adc
and
inc
push
fidiv
or
imul
push
xchg
and
add
inc
stos
cli
dec
sbb
add
xor
jecxz
xor
add
out
or
add
adc
shl
dec
sub
or
std
push
test
lea
jns
dec
popa
lea
dec
adc
mov
inc
int3
mov
mov
mov
das
jns
mov
cmp
scas
ret
pusha
fs
jle
cs
sbb
sbb
popa
and
push
xchg
gs
fisubr
pop
add
dec
mov
mov
sahf
lds
jg
inc
sub
push
neg
push
sbb
inc
push
adc
push
fidiv
pop
push
sar
cmps
sub
xchg
stos
hlt
cdq
call
jbe
inc
inc
in
add
add
xor
mov
push
cmp
out
or
enter
adc
mov
inc
dec
pop
adc
xor
cmps
shl
push
les
call
loope
or
fwait
enter
rcl
cs
loopne
cmps
fcom
pop
mov
fxch
shl
rol
jmp
jg
jnp
add
jo
shl
in
push
push
dec
mov
enter
bound
jns
push
and
sbb
push
or
mov
in
xchg
pushf
mov
sbb
nop
out
push
fmul
xor
cmp
sub
add
push
js
addr16
pop
imul
ins
test
aas
jle
push
dec
repnz
dec
test
fstp
rol
push
clc
mov
setl
ror
pop
fsub
popa
movs
or
or
add
dec
xchg
ss
pop
or
sbb
push
movs
sbb
sbb
cwde
shl
inc
aas
jge
sub
sub
jmp
jnp
jl
inc
popa
sbb
pushf
movs
push
push
pop
dec
push
and
test
xor
pop
push
int3
aas
xor
rol
or
inc
jle
test
ins
and
xchg
loopne
adc
xor
push
ret
mov
xchg
xor
xor
test
sahf
inc
sub
sahf
call
sub
shl
pop
inc
loope
fsub
dec
xor
outs
ss
sbb
and
repnz
je
jmp
inc
or
into
in
sub
call
and
sub
call
or
adc
scas
inc
pop
dec
add
inc
ja
sbb
ins
add
jl
inc
mov
pop
add
or
cmps
cmp
mov
inc
xor
or
unpcklps
jb
or
and
mov
cmp
clc
xchg
sbb
test
imul
out
inc
ds
mov
xchg
jl
mov
dec
add
or
pop
jmp
jge
ret
outs
mov
adc
cmp
aas
sbb
sbb
push
inc
add
in
lods
or
(bad)
mov
pop
mov
movs
pand
jns
add
imul
in
dec
cmp
shl
cwde
scas
cwde
(bad)
cmps
test
or
lock
and
lock
xor
ret
inc
inc
rcr
add
sbb
adc
scas
inc
mov
les
call
icebp
and
nop
(bad)
or
out
jbe
inc
cmp
sbb
fsubr
and
popa
mov
xor
sub
outs
xchg
gs
dec
push
pop
pop
jae
and
mov
icebp
or
cmp
cmp
pop
pop
push
dec
sub
sbb
add
ret
push
mov
jmp
les
xchg
pop
and
pop
and
adc
movsx
jno
les
mov
adc
mov
adc
xchg
outs
add
mov
push
scas
sbb
push
add
xchg
fcomp
mov
leave
pop
pop
sbb
jmp
jmp
xor
cmp
es
or
cmp
mov
xchg
mov
in
and
adc
inc
call
add
outs
inc
xlat
and
xchg
pop
pop
mov
fisttp
stos
fnstcw
test
add
rcr
mov
pop
add
sbb
xor
rol
inc
add
push
in
mov
mov
add
pop
lods
ret
or
cmc
nop
and
push
frstor
push
add
xor
dec
mov
add
adc
std
inc
lea
sbb
cmp
push
mov
push
xchg
or
mov
xor
orps
dec
push
dec
es
fs
sbb
mov
xchg
out
and
or
add
ja
push
test
into
push
add
mov
jo
mov
aam
push
push
pop
and
nop
mov
jp
por
dec
enter
add
or
sahf
imul
ror
js
pop
test
and
add
loope
sbb
mov
push
rol
xchg
mov
(bad)
push
repz
add
xchg
push
adc
inc
inc
add
lods
xchg
ror
mov
mov
pop
mov
ret
mov
mov
in
and
mov
pop
xor
xchg
sub
jecxz
sbb
dec
(bad)
(bad)
retf
mov
push
xor
icebp
add
addr16
jae
test
pop
xchg
hlt
or
fidiv
sbb
xor
hlt
mov
mov
popa
mov
and
add
or
mov
pop
sub
shl
xor
and
sahf
ror
or
ss
js
retf
add
add
sub
sbb
pushf
mov
add
and
inc
(bad)
adc
pop
pop
inc
int3
(bad)
int
inc
jno
inc
xor
lfs
(bad)
leave
mov
push
inc
jno
add
pop
sbb
mov
jbe
push
pop
add
inc
bound
pop
cmps
das
sbb
push
ins
add
sbb
(bad)
pusha
xor
repz
test
sub
push
cmp
fadd
fidiv
and
fadd
push
loopne
cmps
add
cmp
or
add
sub
out
or
ins
xor
mov
cmp
loope
mov
(bad)
inc
cs
popa
ror
aas
mov
icebp
xor
je
iret
dec
sub
inc
mov
scas
cmc
inc
ja
ja
jmp
movs
test
jl
movs
pop
jmp
or
ss
mov
gs
outs
push
dec
push
rol
add
add
pop
sbb
mov
cld
push
sbb
ja
jae
int3
sbb
and
sub
pop
inc
mov
jo
sub
push
cmp
aas
or
cmp
in
sbb
inc
mov
pusha
or
int3
pop
or
add
mov
mov
repnz
das
out
adc
daa
daa
sub
shl
retf
aam
inc
sahf
add
dec
lahf
cdq
movs
leave
leave
jae
cmp
xchg
pop
ins
test
or
sbb
push
and
mov
outs
cmp
rcl
sbb
mov
push
shl
pop
hlt
bswap
es
and
add
jnp
inc
test
xchg
js
mov
mov
sti
aaa
mov
inc
cmp
adc
loop
shl
sub
sbb
jnp
mov
mov
stc
add
adc
cmp
enter
cmp
sub
pop
jnp
sbb
jmp
xor
dec
loop
adc
and
jecxz
je
ins
je
ins
sub
movs
pushf
popa
addr16
sbb
add
inc
lods
dec
sbb
loopne
xchg
jle
add
pop
jge
test
cmp
mov
mov
aam
(bad)
leave
ret
shr
pop
cmp
inc
xchg
push
les
adc
cmp
pop
sub
int
or
push
mov
jmp
adc
in
ins
rol
shr
int
retf
arpl
jns
sub
push
sbb
(bad)
adc
add
adc
push
push
xchg
shl
adc
je
xor
je
inc
cmp
dec
sub
jb
push
sub
jle
mov
or
sbb
inc
push
repz
call
outs
mov
out
or
das
xor
pop
jge
fcomp
sub
mov
xor
mov
xchg
xchg
stos
mov
push
xchg
xchg
sub
scas
push
pushf
es
aam
ins
and
push
add
iret
and
push
mov
nop
inc
fsubr
sub
bound
or
pop
jne
and
sub
or
cmp
pop
push
and
and
das
fcmovu
es
iret
sub
daa
pop
inc
lock
inc
rol
mov
dec
rcr
jmp
ins
cmp
(bad)
pop
add
adc
mov
bound
inc
(bad)
cmp
cmps
add
add
mov
push
xor
lss
ficom
and
or
and
test
jl
jo
dec
mov
leave
jmp
call
fwait
or
sub
or
ins
inc
add
inc
add
dec
add
jnp
or
data16
xor
pop
inc
sbb
aam
outs
in
int3
out
or
outs
adc
mov
(bad)
dec
dec
mov
cs
fild
(bad)
fdiv
mov
das
mov
fisub
scas
mov
movs
adc
mov
jle
fcom
and
ins
or
inc
add
add
inc
ins
dec
rol
mov
setge
(bad)
adc
loopne
mov
dec
iret
mov
inc
stos
mov
and
mov
retf
outs
movs
(bad)
ins
push
mov
mov
imul
jnp
jne
jmp
icebp
xchg
loopne
imul
lea
push
xchg
ror
imul
inc
je
inc
dec
jne
jmp
pop
or
sbb
ret
mov
xchg
stos
and
rol
push
cli
pop
push
adc
cmp
sbb
add
adc
aad
mov
sub
cmp
call
lock
ficomp
fcom
fist
sbb
mov
mov
mov
push
cs
shr
mov
adc
or
mov
add
inc
adc
mov
cmc
xor
dec
push
push
jmp
and
nop
push
jno
pop
mov
sub
sbb
call
test
push
inc
mov
iret
mov
add
aaa
sbb
ins
cli
xor
dec
sub
jo
dec
jmp
xchg
(bad)
adc
or
sbb
and
xor
cmp
in
fsincos
(bad)
aaa
jp
hlt
mov
xlat
dec
adc
mov
push
nop
fs
inc
push
or
outs
jmp
js
and
jnp
adc
jae
fidivr
repz
add
dec
(bad)
inc
loope
inc
mul
dec
sar
sub
inc
cmp
sar
and
and
and
aam
adc
in
dec
adc
cld
add
mov
fld
movs
div
lock
mov
jo
mov
jecxz
jmp
push
je
adc
push
pusha
mov
cmp
mov
fsub
or
(bad)
retf
sbb
ret
addr16
(bad)
retf
and
aad
adc
mov
nop
sbb
es
and
cli
into
xor
cmps
adc
mov
adc
push
mov
cwde
call
ret
add
pop
rcl
cmp
out
push
push
shl
fdiv
gs
scas
ss
add
xchg
stc
xor
sbb
mov
add
mov
pop
fs
stc
inc
sub
lock
sbb
and
xchg
mov
and
popa
loop
fdiv
aad
rol
fsub
cwde
mov
std
adc
push
or
mov
dec
jnp
xchg
xor
or
add
into
push
out
int3
inc
sar
jne
push
mov
ret
push
dec
dec
pop
shl
inc
movs
or
inc
jp
and
shl
xor
jno
mov
(bad)
lock
jg
mov
push
je
inc
aad
pop
jp
add
test
add
sub
pop
add
dec
lea
ror
ins
mov
or
and
jne
adc
pop
ror
and
mov
loopne
add
cmp
mov
ss
jge
retf
mov
cmps
adc
pop
adc
push
dec
jl
push
xchg
xchg
mov
pop
ins
or
pushf
mov
sbb
loopne
data16
fwait
and
add
jo
mov
jmp
sbb
add
dec
xor
push
shl
ret
imul
mov
dec
sahf
cmp
push
cmp
jmp
shl
cmp
inc
inc
add
pushf
pop
jl
mov
test
cld
hlt
inc
add
es
sub
push
pop
xchg
ins
jo
(bad)
xlat
xor
mov
xchg
repz
push
dec
shl
les
mov
iret
or
stos
pause
inc
mov
sub
test
mov
movs
mov
jne
adc
out
mov
cwde
xor
pop
dec
add
jg
lea
(bad)
xchg
add
(bad)
dec
and
mov
inc
ja
adc
sub
(bad)
push
and
into
and
adc
test
mov
loop
ins
pop
adc
push
sbb
pop
dec
aam
mov
mov
xchg
dec
fsub
jmp
(bad)
pop
cmp
and
and
popf
mov
and
cmp
aad
mov
xlat
mov
sbb
or
lea
ror
dec
jge
adc
cmp
pop
adc
push
(bad)
popf
mov
lea
sub
into
in
add
mov
in
ror
ror
in
mov
mov
jg
dec
or
xor
bound
push
jecxz
stc
or
cmp
jge
popa
xor
inc
sbb
rol
shl
rol
mov
sub
xchg
mov
adc
dec
sbb
test
jae
sub
sub
or
hlt
es
hlt
add
bsf
sbb
pop
mov
imul
out
mov
bound
mov
mov
out
inc
sahf
add
push
jp
sbb
jne
aam
adc
daa
lods
iret
mov
lahf
pop
loop
push
mov
inc
mul
push
mov
repnz
mov
push
je
mov
in
mov
pusha
sub
xchg
xor
(bad)
into
es
mov
sub
mov
mov
fwait
jbe
pop
or
add
mov
jbe
loopne
add
inc
xchg
sqrtps
dec
cmp
xchg
mov
cmp
shufps
mov
push
sub
shr
mov
ror
jae
inc
mov
jo
in
mov
or
mov
loopne
sub
popf
xor
inc
dec
jl
push
shl
pop
xchg
inc
sub
movnti
imul
test
mov
repnz
sti
(bad)
arpl
cmp
inc
and
add
lea
adc
fisttp
(bad)
into
or
mov
push
xor
test
jmp
loopne
arpl
xor
loopne
xlat
push
pop
add
dec
loopne
adc
in
call
ror
xchg
inc
outs
adc
in
test
xchg
not
inc
push
movaps
outs
sbb
mov
(bad)
aad
outs
xchg
push
out
pop
call
out
out
xchg
pop
fsub
push
add
add
dec
or
pop
rol
lea
stos
test
dec
xor
xor
or
fsub
dec
scas
pop
(bad)
fnsave
sbb
retf
pop
jnp
mov
pop
or
clc
xchg
mov
dec
dec
dec
imul
or
adc
or
sbb
test
xchg
pop
sub
add
add
stc
or
int3
add
clc
neg
lea
adc
(bad)
fmul
sub
push
push
pop
mov
mov
add
aam
retf
or
sub
inc
cmp
pop
cmc
jns
push
ja
xchg
mov
mov
clc
sbb
adc
mov
popa
sub
das
sbb
cmp
fcmovb
adc
mov
imul
xchg
mov
loopne
pop
add
push
dec
or
sub
fst
xchg
jb
ss
push
xchg
inc
xor
iretw
and
daa
adc
popa
ror
adc
or
pop
push
pop
or
mov
sbb
jae
inc
arpl
je
outs
stc
(bad)
ror
add
dec
or
sub
push
pop
dec
add
jno
inc
add
call
or
dec
sbb
or
fild
add
xchg
inc
xor
test
and
stos
cmp
push
cmp
jg
js
jne
std
push
inc
and
or
jecxz
iret
into
outs
add
or
push
xor
(bad)
and
fwait
and
adc
or
es
icebp
inc
sbb
out
and
inc
pop
adc
mov
or
push
jmp
cmps
test
dec
retf
and
cmc
add
jmp
dec
div
movs
sbb
sar
movs
jg
sbb
lods
imul
push
inc
dec
call
sub
inc
adc
pop
dec
dec
pop
push
dec
dec
dec
jo
xor
xor
or
xchg
xor
mov
scas
mov
shl
inc
jbe
(bad)
fcmovb
aad
dec
lea
xchg
loopne
and
add
mov
jb
aaa
pop
jo
xchg
ss
add
in
mov
rcl
jne
or
push
jbe
sbb
cs
xchg
in
and
and
mov
xchg
and
cmp
scas
push
mov
pop
fdivr
fild
lea
outs
pop
outs
fs
test
daa
push
mov
std
push
push
or
sub
mov
gs
sub
lea
and
add
or
test
mov
ror
mov
add
ret
or
push
call
add
nop
repnz
or
aam
fimul
inc
loopne
movs
sub
lock
inc
stos
ror
imul
mov
adc
jb
sbb
push
ret
sbb
pop
cmp
cs
xor
leave
sub
(bad)
pop
repnz
pop
pcmpgtw
dec
pop
xchg
cmps
or
dec
in
jo
jns
test
ret
dec
mov
push
shl
lea
ror
jo
push
pop
je
test
div
pop
sub
mov
jl
je
mov
je
js
push
clc
and
int3
test
mov
push
cs
pop
mov
ucomiss
xor
xchg
ss
aam
mov
imul
gs
out
inc
mov
sbb
or
xchg
xchg
and
mov
fs
dec
je
push
push
adc
lods
dec
mov
or
add
or
cs
and
add
mov
rcl
inc
inc
and
adc
cmp
add
js
dec
cmps
cs
xchg
add
jns
pop
dec
leave
push
mov
jg
xor
cmps
pop
inc
push
pop
add
xchg
and
cmps
jecxz
out
xor
ins
dec
add
xchg
mov
loopne
pop
mov
push
dec
and
or
fs
push
lods
or
xchg
and
clc
and
fimul
dec
mov
cmp
mov
and
push
and
push
jecxz
cmp
mov
xchg
mov
jmp
sub
jno
mov
pop
mov
mov
adc
add
sti
mov
pop
push
mov
jo
int
add
sub
ret
fisubr
loop
add
add
cmp
ret
lods
mov
xor
sbb
movs
pop
test
inc
cdq
inc
mov
mov
or
stos
mov
js
popaw
xor
dec
and
xor
fidiv
jnp
aad
aam
and
ins
sub
xor
in
pop
push
rcr
arpl
push
dec
jae
add
mov
fst
xchg
xchg
mov
adc
inc
mov
cmp
jne
test
and
fcomp
lock
cmp
mov
mov
add
add
xor
sbb
xchg
jno
das
mov
jmp
inc
sbb
sub
je
and
add
or
inc
jmp
xchg
mov
es
leave
xchg
add
mov
adc
jge
aas
inc
cmp
ret
adc
adc
stos
arpl
adc
xor
cmp
out
mov
adc
cmp
lock
loope
(bad)
lods
add
jo
pop
mov
in
add
add
dec
jns
ret
cmp
aas
add
rcl
sbb
xchg
in
loope
test
and
lods
push
ds
lea
xor
or
inc
sbb
cs
aaa
pop
les
mov
retf
xor
sbb
sbb
mov
push
sbb
push
or
sbb
dec
push
or
and
imul
and
test
aam
pop
fwait
pushf
mov
cmp
sbb
loop
and
cmp
pushf
cmp
imul
mov
xchg
fnstcw
sub
test
movs
lock
or
adc
inc
cdq
xor
setae
jo
popa
loopne
sub
dec
mov
add
lods
add
or
leave
leave
mov
and
sub
dec
and
push
sbb
or
xor
dec
test
in
movs
inc
add
or
ret
add
pop
mov
or
std
in
jmp
push
xchg
pop
enter
cmp
sbb
(bad)
or
or
add
out
adc
push
scas
mov
add
retf
dec
clc
inc
movs
out
dec
push
ret
or
and
xchg
loopne
mov
into
adc
sbb
inc
dec
sub
mov
jb
js
(bad)
pusha
nop
xchg
sub
and
inc
pushf
push
inc
jmp
fdiv
xor
or
adc
clc
cmp
sub
pop
dec
fld
loope
xor
data16
xor
mov
xchg
jl
xchg
popa
mov
imul
mov
sbb
das
add
jns
and
or
xchg
adc
imul
mov
adc
addr16
fwait
in
test
sbb
enter
xlat
jmp
push
fisubr
pop
retf
retf
push
sub
xchg
jo
sbb
sbb
out
ins
adc
push
mov
sbb
popf
cmp
in
dec
sub
cmc
mov
bound
test
adc
pop
inc
inc
cld
ds
inc
mov
repz
fidivr
in
add
imul
or
test
mov
daa
loopne
mov
ror
xor
adc
test
push
and
add
add
stc
xchg
es
xchg
inc
adc
sbb
xor
inc
test
mov
inc
and
pop
movs
jae
and
mov
fwait
push
pusha
dec
sub
or
mov
nop
push
xchg
arpl
mov
ret
fstp
cmp
dec
push
pop
cli
sub
xor
add
mov
dec
or
jmp
js
movs
retf
pop
xor
popa
push
adc
mov
fistp
xor
mov
icebp
rcl
jmp
jns
aas
lods
and
inc
adc
add
ret
loopne
dec
js
jbe
fcomp
sbb
aas
fadd
cmp
sbb
outs
loopne
add
xchg
mov
add
inc
adc
xchg
push
xor
and
adc
std
inc
push
dec
cmp
and
fimul
mov
les
push
fwait
sbb
mov
xor
inc
fimul
and
call
inc
mov
pusha
(bad)
adc
and
sub
and
aaa
lock
adc
lahf
aas
cmp
pop
or
dec
push
ins
push
sub
adc
not
or
ins
jo
or
ss
jmp
(bad)
hlt
mov
test
call
ins
xchg
pop
dec
repz
repnz
ins
mov
jmp
push
je
fisubr
test
int3
icebp
inc
xchg
sbb
sar
push
adc
xchg
add
movs
xor
js
arpl
dec
lods
js
or
sbb
icebp
or
retf
popa
loopne
xor
daa
neg
outs
or
je
push
sar
lods
push
push
mov
gs
es
xor
xor
stos
mov
cmp
cmp
sbb
or
push
inc
mov
mov
inc
add
std
into
adc
imul
push
mov
pop
sub
xor
and
adc
adc
mov
dec
sub
push
adc
clc
inc
sti
pop
and
scas
mov
mov
(bad)
mov
inc
cmps
dec
ja
dec
adc
dec
mov
(bad)
loopne
inc
movs
inc
pop
or
add
mov
lods
dec
mov
(bad)
pop
or
rol
inc
push
or
dec
xor
(bad)
push
inc
daa
or
sub
pop
ja
and
push
push
cmp
ja
inc
pop
jbe
dec
mov
cmps
(bad)
inc
sub
in
or
shl
sahf
mov
icebp
mov
lds
add
and
add
inc
or
cmp
mov
jecxz
inc
or
aas
test
jmp
xchg
sub
mov
(bad)
or
inc
clc
loopne
inc
xchg
or
push
ret
ror
and
mov
inc
mov
int
je
cmp
fnsave
jne
or
ins
pop
(bad)
hlt
sub
aaa
sbb
xchg
sub
jge
add
sbb
hlt
push
sbb
js
or
movs
test
sbb
inc
jne
or
add
pop
popa
dec
daa
push
sub
mov
fisttp
inc
and
inc
dec
jl
jecxz
adc
retf
enter
jmp
inc
loop
or
inc
ja
ds
adc
cmc
jge
mov
scas
pusha
aam
pop
inc
arpl
ins
dec
dec
fld
sub
leave
pop
pop
adc
push
xchg
add
out
xor
lock
cmps
ret
cdq
and
sub
jl
jne
sbb
inc
pop
xchg
loopne
push
and
jne
or
popa
mov
xor
arpl
loope
pop
ret
enter
ss
lods
adc
jno
std
xor
xor
xor
xchg
dec
add
pop
adc
mov
add
test
push
(bad)
stos
mov
jl
fadd
stc
call
lea
and
movs
shl
adc
ins
in
imul
sbb
cmp
retf
in
mov
movs
and
js
pop
sub
mov
lahf
xor
or
pop
xchg
xchg
inc
pop
fwait
xor
jnp
sbb
lods
push
movs
nop
cmc
and
cmps
mov
jmp
clc
xchg
xor
js
fs
add
xor
pusha
cmp
lahf
add
push
jns
add
mov
add
cmc
lods
cmp
loope
dec
frstor
cmp
dec
int3
add
test
add
and
shl
es
mov
adc
or
and
test
inc
pop
xor
(bad)
jbe
adc
sub
hlt
arpl
lods
xor
sbb
mov
mov
popa
in
xchg
jns
push
outs
and
clc
mov
push
push
add
and
int3
cmp
xor
and
fisttp
inc
jae
ds
and
jmp
loopne
repz
fist
sbb
and
xchg
xor
xor
je
scas
xor
loope
fld
cmp
xor
jp
div
stos
movs
inc
or
pop
adc
push
push
outs
pop
test
in
je
push
or
or
xor
mov
or
inc
adc
push
(bad)
dec
ror
mov
data16
call
(bad)
jns
sbb
test
push
and
lea
inc
cmp
pop
std
mov
jns
in
push
add
pop
push
mov
sub
rcr
adc
scas
xor
inc
and
ins
add
xchg
stos
jmp
jbe
les
add
xor
lock
adc
pop
add
xchg
sbb
add
sbb
in
mov
movs
push
test
ja
push
and
and
mov
xor
or
push
lds
mov
or
and
sbb
jl
dec
xchg
push
dec
xor
test
ins
std
imul
sub
sbb
mov
or
add
retf
or
pop
dec
sti
xchg
push
add
leave
or
in
fisubr
fs
stos
fdivr
popa
or
sub
mov
xchg
dec
push
pcmpeqb
jge
sub
leave
lods
xchg
pop
cdq
and
loop
cmp
or
retf
dec
dec
or
and
and
inc
push
lea
into
add
ret
mov
adc
push
fs
ins
adc
hlt
mov
dec
imul
pop
nop
xor
xor
(bad)
xor
sahf
xor
inc
add
lds
mov
mov
mov
clc
pusha
push
mov
inc
xchg
and
dec
in
cdq
sub
push
and
loopne
mov
adc
into
jl
lds
adc
hlt
push
push
bound
cmp
test
and
jns
(bad)
iret
or
inc
add
ss
inc
and
dec
mov
jne
and
adc
mov
sub
mov
daa
adc
ror
icebp
fdivr
mov
add
xor
fld
dec
sbb
addr16
pop
jae
sub
xchg
shr
pop
push
push
ret
(bad)
push
jle
rcr
or
sbb
jmp
not
adc
sbb
xor
mov
jno
pop
aam
inc
jl
sbb
test
push
xchg
shr
or
pop
add
sub
push
or
or
jo
out
jecxz
sub
nop
xchg
push
cmp
sub
(bad)
fisttp
into
and
xor
leave
mov
and
push
fist
add
adc
js
call
ficom
or
or
mov
aam
cs
retf
fdiv
hlt
shr
repnz
dec
and
mov
out
add
or
jne
mov
out
test
dec
adc
sub
add
and
movs
jmp
loop
push
call
sbb
cmp
in
push
outs
mov
cmp
cmp
add
popa
inc
dec
dec
adc
cmp
(bad)
lds
jl
not
out
jge
pop
or
mov
ror
and
push
loopne
mov
mov
cmp
add
icebp
arpl
or
xchg
sbb
add
mul
mov
lahf
xor
jge
jmp
test
mov
ins
arpl
mov
mov
jle
dec
cmp
xchg
lds
cwde
(bad)
and
jecxz
into
pop
mov
inc
fs
sbb
push
inc
push
cwde
rol
mov
cmp
cld
pop
jmp
push
add
les
xchg
add
inc
xor
test
sub
xor
ret
sbb
test
addr16
cld
fdivr
push
adc
cwde
je
ins
sahf
(bad)
mov
adc
xor
lea
mov
add
pop
mov
xchg
sub
ret
fiadd
xor
jne
add
je
mov
pusha
pop
xor
jg
fisubr
jp
pop
das
retf
mov
addr16
and
and
add
dec
jnp
js
jl
pusha
mov
nop
arpl
xchg
mov
cmp
jg
pop
push
cwde
inc
dec
sbb
xchg
add
and
cmp
or
pushf
test
mov
cmp
shl
xchg
xchg
adc
scas
adc
or
pop
or
(bad)
xchg
push
retf
loopne
arpl
arpl
adc
aad
jp
adc
outs
enter
test
add
sbb
push
sbb
arpl
in
xor
adc
add
dec
loope
sbb
in
pop
inc
inc
xor
pop
mov
aaa
mov
arpl
add
mov
sub
add
sbb
xor
and
out
ret
or
add
pop
repz
push
shl
std
jbe
add
add
js
sbb
or
gs
and
push
in
ret
mov
in
push
pop
dec
shl
sub
retf
lahf
loopne
or
cmp
jl
cmp
inc
mov
xor
ret
add
push
fnstcw
and
pop
inc
xor
and
or
cli
push
mov
or
pop
sub
mov
cmps
push
in
sub
lea
dec
nop
add
mov
aam
sti
fsubr
and
ins
pusha
xor
arpl
jne
daa
js
dec
xlat
jg
mov
test
adc
in
or
mov
ins
add
(bad)
jne
lea
fnstenv
jne
cli
pop
mov
das
mov
jle
imul
mov
iret
jge
mov
push
mov
das
pop
dec
js
pop
inc
cs
(bad)
push
jno
cmp
aam
and
inc
popf
ret
add
or
mov
add
dec
add
lea
pop
mov
mov
add
mov
push
cmp
sbb
adc
or
or
add
or
fsub
movs
test
pop
sub
hlt
lea
arpl
xor
mov
mov
add
into
mov
int3
jp
cmp
dec
lods
sub
adc
sub
inc
pop
je
int3
nop
fnstsw
daa
dec
cmp
out
jmp
xor
fnstsw
mov
and
xor
and
test
inc
test
loop
call
jle
dec
jp
jmp
fwait
call
inc
or
and
std
stc
js
idiv
mov
inc
xor
call
cmps
mov
(bad)
in
mov
or
cmp
fidiv
xchg
mov
or
movs
jae
daa
and
and
int
scas
ins
add
push
nop
add
test
and
ins
and
adc
or
mov
cmp
or
xlat
stos
dec
or
dec
repz
sub
pop
inc
mov
push
jbe
pop
movs
ss
popf
add
movs
jp
sbb
mov
sub
push
bound
(bad)
repz
fwait
aas
push
xchg
sub
mov
ins
out
mov
mov
jl
aas
pop
and
adc
mov
repnz
js
sbb
xor
jle
push
arpl
add
add
mov
and
ficomp
or
fucomp
xor
dec
and
test
push
mov
xchg
lahf
cwde
pop
and
xor
in
inc
cli
dec
iret
inc
and
popa
pop
rol
retf
js
add
out
add
jae
push
dec
push
movs
push
sbb
loope
daa
mov
push
pop
loopne
iret
shl
sar
(bad)
add
sub
(bad)
jl
sbb
mov
call
push
pusha
fmul
inc
xchg
add
sbb
inc
dec
ins
dec
ret
fild
outs
jno
add
or
pop
sub
sub
adc
int
jecxz
and
int
out
sub
ss
xor
adc
in
shl
mov
and
adc
test
jg
in
xchg
add
ins
cmp
sbb
test
cs
xchg
xchg
into
and
inc
sbb
aaa
arpl
cmp
push
xchg
cld
or
mov
xor
mov
xchg
sbb
leave
pop
add
mov
sub
cmp
pop
idiv
out
rol
mov
or
adc
aaa
lods
add
push
rcl
test
add
clc
dec
pop
leave
aam
pop
push
add
les
add
jno
mov
mov
sub
sar
test
ret
movs
dec
sbb
mov
das
test
das
cdq
push
sahf
inc
loope
or
stos
and
and
cmp
ret
nop
bound
and
mov
pop
mov
and
and
or
adc
push
push
sahf
and
and
mov
mov
sub
mov
sbb
movs
adc
adc
(bad)
mov
add
scas
dec
pop
nop
fs
cdq
mov
dec
pusha
mov
test
xor
movs
aaa
stc
dec
pop
mov
pop
jle
adc
cmp
mov
and
cmp
dec
pop
add
add
dec
jl
push
test
pop
fiadd
push
mov
push
jp
push
mov
retf
mov
test
add
cmp
(bad)
jns
or
jne
sar
pop
add
xor
sbb
mov
or
call
(bad)
hlt
jecxz
mov
sar
jmp
mov
test
push
mov
jbe
cmp
add
cmps
mov
mov
dec
fdiv
rcr
retf
jo
loope
sub
add
std
cmp
sub
inc
arpl
xchg
into
sbb
dec
xor
xchg
inc
sahf
in
sub
sbb
movs
sti
sbb
sub
push
push
jecxz
cdq
dec
jns
retf
stos
adc
adc
out
outs
xchg
sbb
inc
jmp
imul
and
or
dec
or
mov
or
sbb
test
adc
cmp
inc
jl
cmp
fadd
fadd
push
xchg
add
int
jmp
call
or
xchg
adc
inc
ror
sub
loopne
mov
gs
cmps
fucomp
stos
mov
or
push
sahf
out
je
pop
inc
out
xchg
xchg
out
dec
les
or
addr16
inc
imul
cli
push
movs
retf
mov
add
pop
(bad)
stos
shl
dec
add
into
mov
aaa
lods
inc
lock
mov
jge
inc
pop
xor
cdq
movs
pop
push
mov
rol
push
test
push
xorps
pushf
mov
or
xor
jnp
sbb
add
pusha
xor
pop
add
mov
or
jo
dec
scas
jno
mov
mov
and
cmp
in
lea
outs
cwde
sub
das
gs
in
das
pop
inc
out
sub
push
icebp
leave
and
jae
std
lods
jge
das
addr16
inc
pop
adc
sub
mov
or
mov
outs
test
xchg
retf
movs
push
fcomp
lock
in
mov
in
cs
retf
in
fmul
enter
mov
mov
loopne
in
adc
push
sub
shl
loope
mov
mov
add
shr
lea
cwde
mov
std
push
or
xchg
or
test
mov
(bad)
jl
fisttp
stc
mov
cmp
fnstenv
cwde
push
pop
leave
inc
inc
xchg
xchg
jmp
jl
fldenv
fs
jmp
loope
sub
add
test
lock
and
xchg
mov
push
mul
ror
out
js
and
sahf
stos
inc
dec
adc
xor
mov
hlt
arpl
fnstenv
imul
pop
jnp
(bad)
jns
out
xchg
dec
ins
mov
mov
jmp
push
jmp
pop
inc
bound
mov
nop
lock
ror
xor
ret
mov
inc
es
test
add
jno
xor
add
ds
les
loop
inc
or
add
fisubr
mov
ret
imul
retf
jp
data16
cmps
adc
cmp
adc
sar
(bad)
(bad)
jno
add
ret
push
adc
and
push
add
jle
movs
xchg
movaps
pop
pop
daa
cmp
imul
addr16
pop
in
jg
lea
add
add
aam
add
inc
mov
shr
or
jecxz
js
cmp
clc
rol
stos
xchg
xor
aas
int
sti
and
call
jmp
or
inc
ss
ret
popf
int3
inc
pop
sub
arpl
test
test
fstp
int
add
mov
and
pop
dec
iret
jle
imul
push
inc
dec
mov
fimul
cmp
nop
pushf
or
add
and
iret
add
sbb
sbb
jp
inc
movs
inc
push
add
sbb
adc
xchg
add
add
sub
popf
mov
mov
cmc
imul
or
lock
mov
add
sahf
dec
sub
mov
cmp
lods
popf
daa
fsub
cmp
or
lods
add
lea
cdq
ds
int
inc
or
add
push
add
hlt
popa
test
lods
add
sub
adc
inc
into
xor
dec
push
neg
adc
mov
mov
(bad)
adc
loopne
mov
xchg
test
cld
or
sbb
leave
mov
push
scas
jl
xchg
ss
aad
lea
or
pop
push
and
ret
adc
push
aaa
dec
pop
or
or
cmp
lea
xchg
dec
aad
cmp
loope
cmp
test
(bad)
mov
aas
sub
add
(bad)
pop
leave
cwde
cld
xchg
nop
pusha
or
aam
inc
xchg
pop
or
popf
test
mov
mov
movs
mov
xchg
leave
dec
and
mov
jl
jmp
and
sub
fs
cmp
imul
test
popa
ins
dec
mov
stos
mov
xor
inc
xchg
mov
mov
pop
ror
inc
scas
inc
daa
add
adc
js
fld
jmp
call
mov
add
outs
or
and
ret
add
in
xor
sub
jbe
or
or
adc
mov
jmp
push
cmp
cmp
pop
ret
mov
sbb
ret
ds
add
jmp
aaa
in
xchg
int3
retf
add
popa
xchg
and
pusha
push
(bad)
cmps
inc
inc
inc
xor
clc
shl
gs
push
push
out
xchg
jns
mov
jo
xchg
mov
cld
add
xor
cmp
lds
xor
push
dec
scas
lods
and
fcom
inc
jne
cmp
dec
jne
push
xchg
xchg
outs
push
or
ror
ror
xor
add
pop
dec
cmp
pop
movs
inc
jecxz
push
jae
pop
pop
scas
inc
or
or
int3
adc
dec
xchg
and
aad
xlat
jle
not
push
push
hlt
das
add
and
stos
test
dec
imul
loop
mov
add
pop
loopne
cs
jo
adc
lds
jnp
mov
push
lds
aad
add
inc
rol
ins
or
inc
jg
loop
clc
cmp
icebp
imul
xor
dec
or
add
mov
jmp
add
je
clc
addr16
push
xchg
sub
pop
jne
cwde
cdq
test
or
ss
lods
mov
jnp
sub
stos
cmps
dec
inc
mov
dec
inc
mov
add
aas
mov
xor
rcl
push
cmps
les
add
enter
dec
jge
test
adc
nop
cmp
jg
jne
mov
pop
cmp
xchg
xor
adc
sbb
pushf
outs
ret
xor
dec
shl
or
adc
add
pop
pop
jo
cwde
rcr
dec
adc
ror
push
(bad)
loop
movs
mov
dec
push
dec
enter
hlt
and
mov
jmp
push
sbb
bound
sbb
icebp
pop
cmp
dec
or
fs
rcl
or
mov
dec
loopne
or
stos
mov
adc
add
push
lods
es
ins
jo
or
movs
add
pop
pusha
test
call
icebp
mov
test
int
jno
push
inc
jmp
add
sub
inc
bound
nop
jl
cmps
test
inc
xlat
mov
xor
nop
adc
dec
inc
pop
cmp
dec
retf
or
mov
fcmovnbe
dec
dec
and
push
or
sub
push
rcl
je
mov
lods
xor
popf
add
xchg
test
stos
and
or
es
push
adc
and
jmp
sub
dec
add
cmp
xor
or
jns
ret
sbb
cmp
push
scas
shl
cmp
test
xor
lock
jns
push
cmp
in
ret
pop
jbe
jne
cld
retf
ret
push
xchg
mov
inc
push
adc
aam
sbb
inc
inc
fdivr
add
bound
xchg
and
movs
pmovmskb
mov
adc
or
call
mov
cld
inc
pop
cdq
jo
in
jns
and
or
pop
pop
adc
xchg
int3
ins
fld
rcl
gs
inc
inc
jbe
js
or
inc
mov
dec
mov
adc
cdq
add
dec
and
push
(bad)
sub
lods
inc
and
pop
hlt
or
inc
gs
aas
rcl
sti
sub
and
sbb
push
mov
adc
sub
repnz
and
sbb
add
and
cmc
cwde
(bad)
xor
pop
or
(bad)
add
(bad)
adc
push
fwait
xchg
add
adc
pusha
int3
xchg
mov
xchg
xor
add
pop
sub
data16
add
leave
cld
mov
mov
das
add
test
ret
out
mov
cwde
mov
xor
call
push
out
mov
pop
dec
cmp
xor
sbb
sub
(bad)
dec
sbb
adc
or
outs
and
(bad)
aad
and
ror
add
push
add
dec
mov
push
pop
adc
jne
(bad)
(bad)
mov
push
pop
fld
ins
je
adc
inc
shl
inc
cmp
es
aaa
jo
out
retf
push
sub
(bad)
scas
adc
push
imul
popa
push
xor
push
add
cs
stos
sub
out
fsubr
push
push
fwait
gs
push
mov
iret
shr
imul
loopne
mov
sbb
add
xchg
je
or
cmps
xor
fdivr
(bad)
cmp
or
push
dec
push
fwait
or
cld
(bad)
mov
dec
push
ja
stos
mov
test
std
pop
hlt
mov
test
sub
jmp
gs
das
fs
adc
lods
inc
fisubr
into
and
dec
xor
sbb
mov
push
fidiv
pop
js
clc
xor
out
pop
add
add
add
sbb
movs
or
fwait
sub
add
test
test
cmp
sub
or
and
adc
or
in
pop
pop
push
mov
jne
or
test
nop
mov
sub
sub
push
and
push
sbb
sahf
sbb
int3
loopne
jne
sub
loopne
cmp
pop
adc
push
xor
(bad)
fld
pop
add
icebp
sub
xchg
add
push
sbb
add
adc
outs
test
movs
(bad)
mov
xchg
fisubr
mov
movs
jne
mov
popa
js
inc
or
aam
push
or
and
jp
xchg
popf
fcomp
push
mov
and
and
pop
loopne
and
sahf
pushf
fild
test
push
and
pop
pshufw
(bad)
lea
sbb
outs
movs
shl
pop
aas
fsub
cmps
xchg
aaa
push
xor
mov
pusha
jmp
adc
mov
cmc
jbe
and
jl
pop
rcr
add
push
jne
push
xchg
aam
fbstp
cmp
xor
sti
push
cmovo
xchg
mov
and
repnz
fdiv
mov
not
xchg
or
sbb
pop
adc
movs
retf
add
pop
mov
or
or
popa
sbb
pushf
lock
cmp
mov
sub
lods
mov
pop
mov
aaa
sub
repnz
inc
pop
pop
add
sub
or
and
fs
push
loop
es
cdq
rol
push
ret
sbb
addr16
mov
in
add
je
inc
jae
push
div
adc
sbb
retf
test
(bad)
mov
push
lods
xor
mov
imul
push
addr16
enter
pop
add
sbb
xor
xchg
mov
pop
(bad)
stos
jmp
xchg
jo
cmp
ret
(bad)
mov
cmp
stc
dec
mov
loopne
or
xor
in
(bad)
inc
outs
fucomip
adc
xchg
add
jl
and
jp
lock
gs
loopne
cli
rcl
cmp
adc
or
push
ror
and
rcl
sbb
adc
add
bound
(bad)
xor
addr16
loopne
out
adc
add
lock
jge
xchg
fiadd
movs
add
add
nop
movs
pusha
xor
mov
adc
shr
mov
iret
lahf
and
jne
adc
mov
lods
jmp
inc
add
inc
rcr
lahf
or
inc
and
inc
les
fcomp
mov
sub
sbb
mov
inc
dec
push
add
add
jl
pop
add
mov
sub
mov
js
sahf
pushf
xchg
lods
push
ss
dec
jg
mov
adc
jo
or
pop
inc
mov
jbe
sub
mov
js
movs
and
and
inc
or
call
or
sbb
pop
lods
jp
inc
sbb
or
sbb
mov
mov
hlt
shl
push
adc
bound
and
pop
movs
ss
sbb
xor
fadd
and
fisttp
hlt
jle
call
inc
imul
mov
xor
xor
inc
add
lods
and
push
xlat
jmp
jge
or
push
dec
jo
dec
or
ins
push
js
sahf
je
pop
sub
add
jne
aad
and
add
xor
push
mov
mov
mov
xor
add
movs
dec
jl
and
dec
pop
xor
ret
mov
fcomp
dec
add
mov
add
leave
push
js
inc
cmps
jg
js
push
cwde
jp
mov
jmp
mov
add
add
xchg
adc
dec
jns
pop
mov
or
inc
ins
pop
jmp
adc
sbb
les
fdiv
ret
(bad)
in
test
mov
add
cdq
pop
ret
loope
adc
inc
jo
sbb
ins
xor
into
dec
and
sub
sub
sub
movs
xor
xchg
in
in
push
jnp
adc
push
dec
nop
or
push
rol
adc
imul
and
fisttp
push
fidivr
rol
mov
rcl
or
sbb
pusha
add
or
inc
shl
lods
mov
repnz
mov
pop
mov
(bad)
pop
repnz
jg
lock
dec
and
call
cmp
mov
jo
inc
loope
lock
repz
jl
cmp
sbb
inc
enter
jo
jne
imul
popa
loop
add
cmp
xor
or
cli
xchg
mov
inc
jo
shl
adc
enter
inc
sbb
enter
lea
ficom
pop
ficomp
jmp
lea
and
add
test
sub
pop
fisub
dec
mov
adc
push
leave
dec
jae
add
or
add
add
aas
xchg
add
sbb
xchg
loopne
jmp
xor
movs
sub
add
call
ss
and
cmp
fwait
pop
add
cmp
mov
call
icebp
xor
fnstenv
xor
das
pop
lea
pop
xchg
lods
add
sbb
mov
cmp
cmp
inc
repz
dec
or
sbb
pop
arpl
lods
mov
push
adc
xchg
jno
leave
and
ficom
and
xlat
pop
jecxz
popa
enter
clc
xchg
movs
add
push
cmp
adc
sar
adc
push
pop
xchg
mov
push
mul
and
cmp
imul
rcl
sub
mov
(bad)
cld
add
or
rol
daa
inc
ds
arpl
dec
and
loopne
add
jb
(bad)
cmps
sti
dec
sahf
and
jns
dec
iret
aam
inc
loope
mov
jns
sbb
mov
jns
das
subps
pop
add
cmp
push
fidiv
adc
jbe
cmp
mov
and
and
shl
cmps
fnsave
(bad)
sar
xchg
add
or
mov
test
inc
pop
cmp
inc
std
stc
rcr
adc
inc
cmps
jl
inc
inc
call
xor
jp
leave
push
push
jns
adc
cmp
sbb
sub
nop
push
pop
sub
jg
repz
push
adc
jmp
push
pop
shl
dec
add
sub
inc
nop
stc
jno
dec
jns
mov
dec
nop
xchg
xor
out
pushf
sbb
mov
test
and
mov
sub
test
mov
jns
adc
xchg
xor
xchg
dec
rol
in
stc
fiadd
imul
jne
pop
push
or
push
pop
xchg
inc
pop
sub
mov
jmp
or
cld
icebp
adc
mov
fbld
call
or
and
cld
jo
test
push
xchg
mov
adc
call
sub
cmps
cmovne
adc
xchg
jp
sti
stos
(bad)
cli
in
cmp
dec
lock
inc
jns
sbb
inc
lods
or
fcom
push
inc
jnp
lahf
adc
lea
cdq
test
add
jo
ret
je
bound
push
pop
in
jmp
ret
xor
inc
movs
hlt
ins
add
pushf
xor
push
ins
xor
sbb
enter
xchg
aad
iret
and
pusha
mov
enter
dec
mov
sar
cdq
mov
shr
mov
cmp
fadd
dec
sub
lds
sbb
mov
lock
call
push
xchg
and
sub
loopne
mov
jne
sar
mov
movs
inc
nop
std
and
cmp
add
ror
adc
adc
push
mov
and
xchg
or
inc
sub
fst
pop
push
das
addr16
or
cmps
sub
cmp
dec
inc
mov
push
inc
dec
pop
jb
xchg
add
fld
imul
jne
fs
test
test
es
mov
in
inc
(bad)
adc
cmp
mov
push
push
mov
or
adc
les
and
data16
loope
xchg
pop
int3
pop
pop
dec
adc
pop
cs
push
jge
sub
pop
xor
js
push
sub
cmp
pop
hlt
leave
lea
rcr
mov
or
fild
and
cwde
inc
pop
sbb
add
dec
or
or
push
(bad)
mov
pop
aam
xchg
adc
push
push
cmps
adc
mov
call
sbb
ds
div
add
idiv
push
mov
or
repnz
cs
jmp
or
sbb
rol
push
test
and
push
add
dec
fs
add
lea
sub
sbb
push
loopne
nop
push
call
inc
add
movs
(bad)
add
in
push
pop
push
push
xchg
rcl
push
test
cmp
xchg
movs
add
add
pop
and
jmp
test
leave
adc
ins
add
xchg
xchg
add
push
mov
add
bound
(bad)
xchg
cdq
test
pop
cmc
cmp
lods
daa
add
pop
xchg
in
test
pop
and
dec
xor
add
xor
jmp
retf
dec
or
lods
inc
cwde
enter
stos
and
mov
js
dec
cmp
test
(bad)
outs
rol
popa
push
arpl
and
sub
push
dec
jnp
mov
pushf
call
(bad)
cmps
rol
cmp
xor
sbb
sbb
sbb
cmps
into
in
and
int
push
shl
add
or
inc
sbb
movs
mov
aaa
(bad)
mov
cmp
rol
dec
add
push
clc
jae
dec
jg
jnp
adc
push
je
fs
pop
add
sub
sub
sub
ins
mov
adc
add
lds
jle
cmp
dec
call
add
inc
mov
or
push
xchg
lea
mov
fist
cmp
pop
pop
ret
fwait
jmp
fld
enter
or
lea
fwait
dec
lods
jl
retf
or
jle
popf
call
or
xchg
add
jbe
aam
push
push
mov
mov
cmp
add
sbb
xchg
xor
in
or
xchg
mov
or
jne
xor
movs
push
xor
add
mov
pminub
stos
sub
test
test
xor
popa
lods
scas
inc
push
popa
xchg
bound
cli
imul
(bad)
mov
call
mov
and
xchg
sti
push
or
or
dec
pop
xchg
jecxz
clc
in
es
mov
pushf
stos
xadd
sub
test
pop
(bad)
sub
push
add
je
mov
hlt
inc
or
clc
mov
jae
dec
call
sbb
sub
inc
es
inc
sbb
pusha
dec
adc
jl
ja
dec
jmp
sub
sti
mov
popf
cmp
dec
shr
adc
inc
mov
(bad)
cs
mov
pop
add
push
pop
lock
mov
mov
mov
sbb
aad
dec
fs
jmp
lgs
das
and
std
bts
or
add
test
aad
shl
pusha
sub
or
cmc
adc
dec
ret
cdq
sbb
xor
jo
mov
push
sub
xchg
add
(bad)
mov
xchg
test
imul
in
ret
pop
mov
adc
js
dec
inc
sub
or
inc
sar
mov
dec
sahf
or
sub
fdiv
add
mov
xor
sbb
pusha
xlat
pop
sbb
(bad)
mov
push
sub
sbb
in
and
ret
and
pushf
std
repnz
sub
(bad)
leave
adc
jo
jo
stc
test
imul
jnp
and
jmp
jg
dec
xor
mov
arpl
js
pop
push
(bad)
xor
movs
das
xor
scas
xor
test
dec
cmp
jno
sti
sub
pusha
cmp
add
sbb
jno
fdiv
add
cmp
loopne
dec
cmp
add
dec
je
mov
mov
sar
fisttp
add
inc
cmp
leave
mov
cli
mov
jge
mov
mov
in
cmp
xor
xchg
push
jmp
cmps
sub
mov
cs
(bad)
sub
jo
xor
or
add
cdq
mov
push
in
nop
nop
shl
mov
mov
adc
popa
adc
imul
mov
xchg
sub
or
mov
add
ins
mov
push
jmp
jmp
and
aas
cmp
add
test
sbb
pusha
fcomp
mov
add
stc
pop
pop
push
cmp
das
lea
in
pop
clc
mov
jl
fs
cmp
test
and
push
mov
fist
pop
or
cli
push
bound
fsub
inc
or
cmp
cmps
les
inc
cmps
or
cmp
jle
pop
int3
call
or
xchg
mov
mov
cmps
push
jno
(bad)
sub
push
loope
xchg
movq
and
or
xchg
out
out
pop
jno
hlt
xchg
retf
adc
or
add
sbb
and
rcr
int3
das
sbb
xlat
test
je
neg
int3
test
pop
cs
inc
cwde
ror
loope
and
bswap
out
retf
pusha
mov
pusha
fsub
pop
cld
mov
das
and
cmp
add
pop
push
push
pusha
dec
cmp
pop
push
movs
adc
lock
xchg
movs
jbe
fcom
mov
sub
adc
mov
cs
les
sub
xchg
and
xor
sub
sbb
jmp
mov
xchg
pop
pop
inc
(bad)
push
int
jno
dec
push
stos
mov
enter
fiadd
pop
inc
fadd
dec
xor
movs
mov
leave
xchg
pop
jl
sub
fld
ss
lods
mov
gs
push
dec
sub
mov
jne
stos
sub
and
(bad)
push
js
mov
add
cmp
adc
mov
dec
and
jo
adc
jmp
sbb
imul
data16
lea
hlt
leave
jecxz
mov
xor
sub
dec
add
jnp
adc
or
cld
hlt
pop
out
jl
inc
dec
xlat
mov
inc
or
test
cld
cmp
push
xor
loope
pop
js
sbb
add
pop
sbb
fmul
(bad)
jae
mov
int
popf
pop
imul
sti
popf
or
mov
add
leave
or
add
jmp
or
cmp
pop
push
pop
loopne
xor
(bad)
cmp
sub
add
shr
daa
push
je
imul
shr
or
xchg
jmp
sbb
sub
or
icebp
(bad)
push
xchg
hlt
daa
pop
popa
ret
or
lea
rcr
daa
or
test
inc
pop
out
dec
cmp
cmp
rcl
mov
push
or
js
inc
push
lods
xor
mov
loope
(bad)
fiadd
nop
xchg
mov
jl
ds
cmp
adc
fmul
rcr
call
jecxz
mov
cmp
jge
mov
int
in
pop
test
or
sbb
fldpi
inc
loope
add
loope
int
or
icebp
xor
lods
fstp
xor
add
mov
rcl
sub
add
push
xor
add
das
je
xchg
adc
hlt
adc
push
mov
push
ret
mov
mov
imul
mov
jl
add
arpl
mov
aad
cmp
push
jecxz
dec
push
retf
add
sti
aad
imul
mov
jmp
iret
xor
mov
mov
dec
mov
mov
pop
int
test
lock
sub
adc
push
adc
fxtract
add
mov
cmp
rcl
jmp
adc
test
inc
xchg
xchg
pop
dec
or
(bad)
and
ins
push
sub
imul
ror
push
and
or
xchg
jge
pusha
xlat
rcr
stos
inc
loope
int3
sub
xor
mov
pop
addr16
stc
push
add
or
stos
inc
or
xor
xor
add
dec
mov
movs
inc
popa
mov
stc
xor
push
add
jae
add
mov
jne
adc
jle
ret
or
mov
call
push
mov
test
dec
cwde
sub
add
mov
xchg
mov
mov
mov
jb
pop
mov
inc
shl
jg
dec
aaa
mov
add
adc
cmps
mov
cs
xlat
clc
shr
xchg
pop
popf
dec
jmp
push
inc
dec
dec
rol
sbb
daa
or
xor
ficom
icebp
xchg
xor
push
mov
lahf
jle
icebp
lahf
inc
shl
add
test
or
pop
cmp
or
mov
jne
inc
pop
cmp
pop
mov
jle
and
or
dec
loopne
mov
mov
lods
mov
imul
add
adc
jg
add
mov
sbb
test
add
loope
retf
pop
adc
rol
std
in
ficom
sub
stos
test
mov
or
inc
into
or
nop
sub
(bad)
jmp
xlat
mov
adc
jmp
sub
icebp
jnp
and
adc
dec
outs
jb
jle
sbb
jbe
sbb
mov
pop
or
or
mov
mov
adc
xchg
pushf
xchg
xchg
sub
jl
call
mov
lock
push
cmp
jge
xchg
inc
pop
inc
sbb
mov
and
jnp
aad
add
push
dec
test
mov
dec
loop
nop
pop
push
push
dec
aam
ret
lahf
xchg
push
lea
call
js
lock
jns
add
aad
ins
adc
inc
and
clc
cmp
xchg
imul
adc
aaa
add
sahf
xchg
and
and
pop
xchg
in
rol
icebp
popa
inc
xlat
or
and
xor
and
mov
rol
retf
and
inc
lods
push
jg
sbb
hlt
pop
rol
sub
xchg
xor
pop
mov
dec
sbb
jmp
pop
lea
lea
jp
mov
sbb
push
and
aam
sub
cmp
push
and
or
push
dec
test
inc
jae
jbe
lds
jnp
fst
cmps
pop
xchg
push
inc
and
nop
popa
jmp
(bad)
mov
push
test
les
rol
fimul
xlat
rcl
inc
and
rcl
cmp
jmp
add
adc
xor
inc
jo
push
mov
imul
push
jne
or
dec
cmp
les
xor
mov
fldenv
pop
jecxz
jle
popa
lods
sbb
lahf
mov
pushf
dec
inc
sbb
shr
sbb
push
rcr
push
xor
push
out
or
sbb
loopne
xor
mov
inc
sub
inc
add
inc
add
jl
dec
mov
jle
stc
popa
pushf
inc
ret
or
add
js
frstor
sbb
sub
and
mov
sbb
popa
sub
pop
add
mov
loope
(bad)
or
jmp
fnstenv
cmp
movs
ja
out
add
retf
mov
mov
daa
adc
pop
push
clc
cmp
mov
fdiv
stc
xchg
inc
je
test
xor
jp
idiv
enter
jge
pop
inc
cmp
dec
adc
push
scas
cwde
enter
lods
xor
js
inc
and
sbb
push
inc
pusha
push
jl
inc
cmp
jl
and
xchg
or
sbb
dec
add
(bad)
aam
mov
inc
leave
out
neg
push
lods
nop
stos
sub
or
add
push
lods
mov
mov
add
mov
jns
mov
sahf
cwde
arpl
js
shl
out
add
or
loope
xor
and
std
mov
pop
enter
ja
xchg
test
lds
shl
dec
xchg
jmp
xor
imul
into
pop
mov
mov
aam
sbb
xchg
frstor
cmps
jmp
sar
daa
in
sbb
and
ret
call
popf
inc
jno
dec
push
push
dec
test
mov
pop
loopne
mov
and
mov
shr
and
daa
or
lods
mov
stc
(bad)
mov
xchg
jne
or
test
mov
xchg
push
and
loop
push
add
pop
dec
sub
test
neg
push
jne
adc
jne
rcr
lea
mov
pop
and
rol
inc
or
cmc
push
aam
aas
jmp
or
dec
adc
inc
push
mov
dec
or
mov
mov
mov
or
lds
and
ins
or
jb
add
mov
sub
ja
aam
mov
push
mov
lock
mov
out
test
mov
mov
adc
loop
shl
sub
or
inc
xor
imul
jae
enter
inc
push
xor
add
add
and
into
dec
mov
inc
push
movs
lods
push
add
pop
ret
lock
xchg
mov
(bad)
sbb
add
imul
rol
inc
add
aaa
(bad)
xor
and
and
cli
bound
loopne
mov
push
lock
xor
or
push
mov
push
cmp
cmp
adc
pop
or
xchg
mov
aam
xchg
and
outs
add
ja
icebp
je
test
and
xchg
dec
or
mov
rcr
mov
paddsb
aad
int
lods
xor
fst
test
inc
lds
push
mov
mov
push
mov
scas
jmp
cmp
iret
hlt
pop
xor
les
inc
addr16
les
cwde
call
sbb
sbb
add
pusha
inc
(bad)
hlt
(bad)
jmp
fsubr
inc
int
xor
in
loopne
ins
aas
inc
loopne
mov
fwait
jb
ins
add
rol
inc
add
or
inc
imul
mov
and
or
sub
mov
dec
push
push
inc
mov
xchg
push
movs
push
mov
xor
mov
dec
inc
loopne
adc
dec
cmp
dec
inc
push
ja
or
jo
jg
or
cmps
into
pop
iret
lods
add
or
pushf
mov
popa
adc
pop
and
mov
mov
mov
lds
xchg
daa
repz
push
add
and
aad
pop
xor
and
sub
sbb
setp
sbb
paddusw
cmp
lods
mov
xchg
push
nop
pinsrw
mov
cmp
je
lahf
xor
xor
push
dec
cmp
xor
mov
test
call
xchg
ret
and
retf
add
jle
jge
stos
add
mov
or
sbb
push
retf
mov
pushf
inc
mov
and
pop
cmps
cmc
jb
mov
lock
or
fwait
in
push
mov
xchg
daa
popa
inc
mov
pop
dec
push
les
cmp
loop
mov
sbb
sbb
add
sbb
aaa
add
inc
cmp
loopne
mov
es
lods
xchg
adc
je
int
mov
and
sbb
dec
push
xchg
imul
(bad)
adc
dec
popa
sub
mov
jecxz
adc
stos
in
or
or
les
retf
ror
rol
out
adc
das
mov
add
arpl
xor
cwde
aas
inc
sbb
ret
xor
add
add
mov
iret
or
add
inc
out
pop
and
dec
or
mov
loop
mov
pop
add
and
push
(bad)
into
movs
daa
push
xor
sub
or
adc
cwde
cmp
iret
dec
mov
fcmovb
push
xchg
out
or
sub
sti
fdiv
adc
cmp
es
sub
push
add
inc
push
mov
pushf
sbb
rcr
inc
cmp
sbb
aad
nop
add
xchg
dec
lea
and
inc
push
jne
movs
sbb
movs
and
dec
add
lods
jne
dec
jmp
mov
cmp
add
fld
test
xor
int3
dec
mov
and
add
mov
loopne
cmp
test
jns
adc
push
test
pop
sub
pusha
mov
lods
sbb
push
xchg
dec
test
fwait
pusha
(bad)
inc
dec
cmp
dec
add
xor
inc
sbb
test
mov
into
js
inc
mul
and
sub
div
add
add
add
cwde
sub
adc
mov
jo
pop
fst
fdiv
add
jo
popa
jle
icebp
test
and
rol
lods
popa
test
or
pop
(bad)
test
xchg
xchg
or
adc
das
test
xchg
iret
add
scas
cmp
xor
push
mov
sub
push
cmp
ins
test
or
lock
cwde
add
fisttp
push
add
xchg
xor
push
sub
sti
retf
jp
ret
cmp
in
(bad)
push
fisubr
mov
mov
rcr
adc
mov
inc
mov
loopne
stos
test
idiv
mov
xchg
nop
add
cmp
jle
pop
pop
adc
and
add
sbb
clc
cmp
and
call
xor
xchg
inc
(bad)
xor
movs
shr
add
inc
shr
xchg
inc
mov
imul
pushf
mov
dec
cmp
xchg
sub
push
push
or
sar
sbb
cmp
and
mov
test
rcr
(bad)
out
add
jecxz
add
inc
mov
xchg
push
push
push
xchg
repz
cli
fdivrp
sbb
and
jbe
cmps
cmps
push
popf
sub
push
aad
dec
cs
and
rcl
xchg
xor
jecxz
loope
movs
cs
or
in
push
jae
adc
test
pop
sbb
loopne
jbe
stos
pop
add
lods
nop
nop
xchg
cmp
stc
mov
and
loopne
push
adc
xchg
and
gs
retf
movs
sbb
js
xor
addr16
mov
mov
push
pop
xlat
cmps
enter
imul
push
je
xchg
push
je
inc
mov
cmp
sbb
loope
call
sti
(bad)
imul
mov
cdq
add
jo
rol
mov
lods
fs
push
pop
je
rcr
inc
pop
bound
add
mov
mov
nop
inc
add
sub
sub
je
mov
imul
lock
das
shr
loope
call
sub
lods
xor
sub
in
pop
addr16
xchg
mov
xchg
mov
jge
mov
mov
add
enter
and
pop
cmp
popf
or
lods
push
sahf
(bad)
and
jbe
lea
ss
cmp
add
sbb
lods
popf
dec
out
adc
add
inc
or
out
jp
test
or
js
mov
mov
(bad)
pop
add
int3
xor
or
dec
add
cmp
ja
je
or
call
je
or
je
and
mov
movs
je
sbb
sbb
test
add
mov
in
xlat
movs
cmp
sub
add
sbb
mov
jle
adc
dec
or
add
jl
jbe
sbb
pop
retf
les
and
xchg
fcomp
xor
mov
ret
pop
cmps
add
mov
dec
rcl
loopne
mov
movs
inc
jmp
and
inc
and
rcr
(bad)
xor
mov
inc
mov
js
inc
pop
sbb
sub
retf
enter
or
rol
dec
bound
xchg
pop
loopne
adc
or
aas
dec
add
imul
add
call
or
sub
xor
xchg
or
inc
inc
shl
push
cmp
jne
lds
pop
mov
pop
js
and
sbb
lock
mov
xchg
sub
adc
outs
arpl
mov
dec
mov
in
dec
addr16
xor
test
inc
xchg
ss
adc
mov
dec
lock
or
into
imul
xor
icebp
(bad)
sub
or
outs
sahf
ins
add
and
stc
dec
(bad)
adc
js
xchg
mov
nop
push
ror
xor
inc
mov
cmp
in
mov
sub
(bad)
pop
add
dec
data16
mov
enter
aam
jg
popa
movs
xor
movs
add
xor
xchg
stos
xchg
test
mov
mov
push
pop
xor
movs
cdq
add
movs
inc
adc
adc
add
lea
or
cmp
ins
push
push
lods
xchg
out
enter
xchg
mov
sub
and
add
clc
js
xor
mov
push
jg
data16
cmp
sub
mov
enter
or
dec
add
dec
(bad)
retf
arpl
dec
pop
mov
add
ds
mov
fs
add
rcr
and
adc
movs
mov
test
push
inc
fwait
sbb
or
icebp
jl
es
mov
sbb
ficomp
loopne
jl
jp
push
and
mov
jne
mov
mov
mov
shl
jl
retf
pop
pop
add
sbb
dec
dec
dec
pushf
outs
repz
add
call
sub
test
rcl
mov
(bad)
mov
fisttp
inc
add
push
xchg
and
xchg
pop
cmc
imul
mov
fdivr
dec
adc
push
jno
lea
dec
loopne
mov
lea
int3
add
movs
xchg
dec
call
inc
jmp
jmp
mov
cmp
in
jge
mov
sbb
and
call
mov
add
add
les
test
inc
push
sub
sbb
jmp
dec
sbb
or
add
dec
add
and
es
imul
jle
jecxz
mov
pop
sbb
rol
cmp
sbb
or
add
lea
mov
loope
test
test
xor
or
loop
sbb
and
in
add
cmp
jo
mov
test
movs
add
popa
test
xor
adc
dec
arpl
fcom
push
std
jno
mov
jge
ja
fldenv
int
mov
xchg
inc
or
ror
cs
or
mov
jg
inc
inc
and
pop
mov
aaa
aaa
aaa
mov
or
je
adc
adc
sbb
je
test
and
sbb
sbb
or
dec
nop
push
xlat
adc
sub
data16
rcl
and
retf
mov
xor
lea
push
dec
pop
inc
cmp
mov
es
cmp
outs
push
push
les
outs
int3
movs
scas
mov
sbb
ret
xchg
push
rcr
xor
or
adc
rcl
push
inc
fimul
add
jmp
or
mov
push
call
push
sub
js
pop
add
pop
aam
dec
mov
imul
dec
rcr
cmp
stos
sub
and
test
xor
adc
sub
jbe
pop
je
dec
aaa
jnp
push
push
cdq
fbstp
push
xor
std
inc
xor
add
lahf
jo
push
in
mov
mov
mov
pop
inc
lods
fidiv
push
inc
inc
jmp
push
xor
xor
add
scas
mov
jnp
add
movs
je
inc
or
aam
movs
add
cmp
cmp
add
sub
inc
inc
xchg
shr
cmp
push
mov
sahf
test
jmp
movs
and
(bad)
inc
add
xor
or
icebp
adc
xchg
jb
xchg
jbe
add
and
fcom
inc
adc
ret
dec
fsubr
mov
mov
push
sbb
imul
popf
iret
test
push
rcr
imul
sbb
in
test
or
(bad)
fld
xor
pop
test
popa
popa
mov
inc
or
loope
xor
cs
jne
pushf
adc
sub
mov
fwait
pop
adc
sahf
ins
cmp
rcl
dec
xor
mov
sub
(bad)
inc
cmps
push
mov
leave
push
adc
push
xor
add
push
loope
dec
mov
shl
cs
inc
dec
mov
xchg
and
or
(bad)
and
out
push
pop
pop
lds
dec
and
add
jno
test
sbb
lds
push
test
pushf
or
test
shl
or
leave
cmp
pop
mov
add
ret
leave
inc
xchg
cmp
and
add
das
pop
add
push
mov
int3
or
xchg
sbb
mov
cmp
add
pop
popa
pop
or
dec
jo
mov
test
and
shl
add
sbb
sub
push
or
adc
xchg
lock
sub
in
leave
cmp
cmps
test
sub
and
push
mov
jae
push
cdq
nop
scas
adc
adc
adc
push
pop
nop
inc
add
fild
jbe
rcl
fstp
push
pop
sub
add
pop
sub
and
push
dec
push
add
stc
push
and
add
outs
stos
push
mov
mov
add
lods
scas
add
inc
call
sub
ror
cmps
sbb
lock
add
pop
pop
jmp
push
cwde
mov
xchg
mov
add
call
ja
push
fs
mov
test
loop
es
(bad)
and
add
xor
xchg
and
div
mov
adc
or
add
stos
or
jge
cmp
jg
pop
adc
mov
push
and
cmp
push
aam
jp
stc
pop
(bad)
jle
and
sub
xchg
pushf
in
js
xor
(bad)
daa
adc
and
into
mov
imul
mov
mov
sub
ins
ins
(bad)
in
or
push
dec
jecxz
or
push
iret
mov
or
add
mov
push
and
and
inc
imul
adc
hlt
dec
xor
in
jl
adc
ja
add
lods
bound
ret
push
xor
cs
retf
cmp
sbb
daa
or
mov
inc
je
sar
pop
sbb
inc
mov
int3
jo
add
push
or
test
pop
push
push
jmp
js
or
sbb
or
add
int
add
cdq
add
inc
test
gs
adc
xadd
sbb
inc
xor
adc
pop
inc
push
lsl
xchg
inc
push
or
adc
jbe
pop
outs
cmp
or
push
push
mov
jge
sub
mov
pop
cs
pop
add
dec
jl
popa
pop
cmp
mov
dec
(bad)
pusha
cmp
and
lock
cmp
xor
and
in
mov
adc
cmp
mov
(bad)
xchg
dec
ret
cmp
pop
les
xchg
adc
or
dec
pop
repnz
mov
fcom
or
fnstcw
rcl
imul
or
adc
sbb
dec
and
stos
pop
rcl
pop
or
shl
clc
cmp
bound
xor
cmp
aam
fisttp
jno
jmp
lea
sub
call
or
mov
dec
and
push
jle
sub
inc
call
adc
cmp
adc
push
fisub
dec
mov
jmp
ins
add
mov
fld
into
pop
xchg
add
cmp
pushf
pop
ja
or
pop
ja
test
and
mov
sub
push
sbb
jo
xchg
pushf
(bad)
sub
cmp
add
into
or
daa
mov
shl
sub
dec
dec
sub
aaa
in
inc
aas
adc
inc
and
push
cmp
cmp
add
in
cmp
xchg
push
and
in
push
add
xor
and
in
fwait
call
mov
gs
mov
clc
mov
inc
push
adc
fadd
clc
push
pusha
sub
cmp
inc
sahf
clc
jbe
push
add
jo
jp
xor
add
movs
mov
add
stc
cmp
add
cdq
dec
lods
pop
mov
add
call
loopne
sar
sub
(bad)
idiv
sbb
push
xchg
adc
arpl
jmp
nop
sbb
or
xor
dec
imul
cmp
xchg
das
dec
sbb
jge
out
jle
loopne
ins
add
pop
adc
dec
mov
push
jmp
dec
push
mov
inc
enter
push
mov
xchg
add
xchg
icebp
add
frstor
xor
push
push
sbb
pop
inc
add
add
jo
cmp
call
inc
loope
xor
adc
inc
mov
mov
or
fidivr
fiadd
repz
outs
mov
inc
adc
pop
add
pushf
cmp
push
sti
adc
or
sbb
sub
dec
call
mov
adc
les
or
scas
ins
test
pop
stc
push
gs
cmp
test
cmp
mov
jecxz
mov
shr
sbb
jo
mov
or
cmp
dec
xor
popa
daa
adc
call
adc
cmp
mov
xchg
(bad)
lock
xchg
dec
dec
test
mov
pop
push
xlat
add
xchg
pop
enter
jo
xchg
xchg
ins
aad
jl
mov
mov
jb
rol
int3
mov
aam
fsub
jne
test
pushf
retf
movs
mov
inc
movs
movs
jo
jbe
test
fbld
pop
pop
xchg
mov
cmp
push
jns
out
dec
adc
and
inc
neg
xchg
dec
mov
movs
aad
add
lea
shl
adc
push
lea
add
sub
mov
sub
aas
jb
jecxz
jp
cmp
hlt
in
xor
mov
mov
retf
sub
in
scas
int3
bound
or
push
cwde
fadd
lahf
push
ror
sbb
cmp
sti
or
push
cli
ss
inc
fwait
mov
int
mov
(bad)
push
inc
sub
push
arpl
je
es
mov
nop
sub
mov
test
mov
sbb
push
pusha
in
pop
shl
adc
xor
pop
dec
push
push
dec
(bad)
push
xor
jmp
shr
das
xor
dec
dec
mov
jmp
jno
fxch
popa
jne
xor
mov
ins
test
fwait
sub
adc
add
adc
clc
xor
push
pushf
dec
in
push
push
cmp
scas
(bad)
inc
je
ss
jg
xor
sub
mov
inc
inc
das
pop
and
in
push
jb
mov
in
vmread
sub
mov
(bad)
xor
mov
setno
sub
les
xor
mov
adc
out
push
adc
mov
sbb
xor
pop
adc
add
pop
fiadd
ins
sub
mov
push
add
adc
adc
and
fisubr
cmp
adc
push
cmp
sbb
leave
and
retf
dec
sbb
pushf
mov
cmp
arpl
icebp
adc
dec
jmp
pop
sub
pop
in
ins
inc
add
sbb
dec
adc
mov
xor
inc
or
mov
and
add
mov
test
mul
mov
adc
imul
lea
push
shl
rol
sbb
or
jne
fnstcw
mov
fs
add
dec
inc
add
add
xor
dec
or
jo
lock
adc
rol
push
cmp
dec
add
add
loopne
and
push
jle
fild
outs
or
fiadd
clc
pop
arpl
ret
lahf
mov
cmp
jmp
inc
fcom
or
dec
mov
adc
iret
and
jle
add
or
or
xor
mov
cmp
jmp
dec
dec
push
nop
and
dec
jne
xor
or
aaa
in
dec
jae
in
lock
out
jo
xchg
sub
cdq
pushf
cmp
dec
adc
or
mov
rcl
or
cmp
mov
pusha
je
cs
or
adc
add
xchg
cmps
jmp
retf
jecxz
xchg
ret
pop
bound
subps
call
push
pop
cmps
fnsave
cdq
xor
inc
push
push
leave
inc
pop
and
aaa
adc
in
rcl
out
mov
fild
cwde
sub
mov
cmps
xchg
lock
xchg
pop
das
cld
xchg
enter
and
cmps
mul
or
adc
jge
add
adc
dec
pop
push
jne
setnp
inc
add
or
fcmovb
dec
ror
retf
and
and
adc
or
cdq
inc
leave
retf
inc
xlat
push
xchg
iret
scas
add
pop
mov
mov
imul
mov
popa
clc
jl
mov
and
jge
in
(bad)
out
je
sbb
pop
stos
(bad)
aam
adc
add
add
add
or
fadd
push
xchg
ds
add
push
mov
push
pop
adc
cmp
xchg
dec
cmp
jge
daa
cmp
ins
bound
xchg
xchg
adc
popf
jge
and
jnp
mov
push
xor
push
in
test
mov
adc
cmp
or
push
pop
mov
mov
int3
and
mov
xchg
cmp
test
mov
and
leave
pop
pop
sbb
sub
add
cdq
loope
cmp
aaa
cmps
lea
pusha
lods
add
dec
jb
cmp
push
add
push
and
push
lods
jmp
adc
jl
sbb
and
mov
mov
or
xor
pop
push
xor
jo
nop
xchg
pop
push
clc
sbb
pop
addr16
adc
mul
cmp
cmps
sub
xor
js
add
adc
sub
add
pop
sub
repnz
push
push
xchg
lods
inc
add
loopne
arpl
inc
dec
sub
cs
sub
jb
mov
or
cmp
inc
adc
mov
mov
inc
push
dec
add
test
pop
mov
xor
mov
adc
cmc
mov
adc
jbe
cmps
out
sbb
xor
pushf
test
fidiv
cld
add
je
sub
add
adc
cmp
mov
adc
sbb
out
sub
loope
lock
xor
push
and
adc
ret
pop
popa
add
mov
and
dec
ss
mov
mov
cwde
and
add
loopne
dec
and
lods
adc
sub
stos
sub
dec
mov
cwde
mov
jne
add
push
enter
movs
pop
sub
in
inc
in
dec
imul
movs
add
or
adc
xor
inc
pop
cmc
and
push
movs
push
adc
mov
in
mov
and
push
rol
dec
jmp
and
(bad)
push
mov
add
adc
ret
mov
add
shr
push
(bad)
pop
xor
enter
mov
cld
jge
pusha
and
test
and
add
sub
push
inc
rcr
inc
arpl
clc
add
rcl
or
fs
shr
xchg
fistp
repnz
mov
(bad)
inc
out
cmp
and
cmp
xlat
sub
mov
ror
ret
sub
in
jno
cmp
repz
or
repnz
push
mov
or
or
cmp
mov
push
rcl
xor
repnz
fisub
and
pop
and
pop
cs
retf
sub
xor
cmp
es
or
imul
scas
push
clc
test
dec
clc
mov
cmp
popa
pop
xchg
rcr
mov
xchg
push
mov
arpl
clc
movs
iret
mov
pop
jge
test
into
movs
xor
std
not
pop
jge
ror
mov
add
cmps
inc
or
arpl
int
leave
dec
add
xor
int3
rcl
rcl
sub
daa
and
add
lods
sbb
div
test
stc
pop
nop
push
mov
enter
mov
sbb
movs
adc
or
cmp
mov
and
dec
mov
test
jge
mov
(bad)
push
push
pop
cdq
lock
add
dec
push
dec
(bad)
lea
add
ror
repnz
push
es
pusha
loop
xchg
or
cmp
(bad)
loope
inc
or
imul
jne
adc
push
mov
xchg
add
retf
mov
add
adc
pusha
and
mov
and
clc
jmp
(bad)
mov
retf
retf
add
sub
mov
ret
pop
mov
nop
cmp
gs
imul
lea
icebp
(bad)
push
xlat
jb
add
inc
dec
push
in
inc
mov
jmp
adc
inc
sbb
sbb
int
call
pop
mov
sbb
stos
pop
inc
ret
pop
pushf
mov
nop
and
add
ja
sar
sbb
fistp
mov
punpcklbw
and
xor
inc
xchg
mov
outs
dec
ret
push
mov
jle
(bad)
std
ror
in
add
je
and
or
cmp
jae
ja
outs
sub
test
out
mov
dec
retf
sub
jmp
push
(bad)
rcl
movs
xor
sub
sbb
(bad)
xor
test
xor
inc
inc
xor
leave
xor
es
inc
pushf
movs
pop
dec
mov
sbb
push
ins
sbb
or
jo
xor
unpcklps
repnz
fnstsw
cmp
cmps
and
jb
dec
pop
add
iret
sbb
(bad)
call
cwde
pusha
sar
rcl
adc
jns
ja
adc
xor
imul
xor
icebp
add
sbb
xor
test
inc
jle
push
pop
add
xchg
in
push
dec
data16
cmp
and
adc
adc
cmc
cwde
pop
and
jl
push
xor
arpl
sub
jo
add
cmp
cmp
je
add
inc
mov
push
push
mov
jl
adc
mov
or
inc
js
lea
dec
pop
mov
xor
(bad)
mov
adc
fwait
inc
adc
rol
xchg
cld
add
and
jecxz
xchg
fwait
sub
xor
cmp
call
test
dec
mov
sub
jp
(bad)
int3
mov
aaa
add
xchg
push
sub
adc
retf
fist
ret
pop
rol
xor
sub
into
xchg
mov
imul
push
xchg
sbb
mov
loopne
out
mov
push
lds
imul
inc
sbb
mov
movs
mov
xchg
(bad)
fistp
push
mov
mov
push
xor
pushf
sar
push
push
sub
hlt
outs
push
loopne
mov
ins
pusha
and
mov
push
dec
push
mov
pushf
push
test
add
mov
cmc
popa
shl
sbb
aaa
xchg
mov
pop
outs
mov
(bad)
xchg
jns
test
xor
pop
and
jnp
and
push
pop
add
push
test
test
push
in
inc
ret
xor
inc
and
push
dec
outs
ss
jb
add
ja
into
das
(bad)
ss
inc
sar
dec
adc
xchg
sahf
push
inc
jo
lock
movs
mov
push
adc
jb
inc
adc
fisttp
mov
or
xchg
xor
pop
dec
imul
enter
push
inc
inc
push
push
push
dec
pop
cmp
add
ins
push
adc
jg
scas
inc
push
outs
sub
adc
aam
cmp
jne
mov
arpl
xchg
adc
lock
inc
loopne
adc
nop
sub
jle
cmp
(bad)
ds
or
pop
mov
add
xor
outs
and
xchg
sbb
sbb
rcl
inc
add
js
adc
lods
xchg
movs
pushf
ins
jmp
jne
aam
cmc
movs
enter
fcom
mov
sub
fimul
ret
mov
mov
xchg
retf
jno
and
or
or
adc
adc
in
ds
es
jnp
sub
pop
lea
pop
cmp
daa
jno
dec
pop
dec
inc
push
push
js
cld
sar
xchg
clc
nop
and
xor
jg
rcl
add
or
test
jecxz
ret
into
mov
inc
rcl
sub
mov
cmp
cmp
enter
lahf
cmp
pop
jb
mov
pop
xor
sub
sub
clc
jle
add
or
or
bound
xor
mov
adc
(bad)
or
mov
sbb
les
sbb
add
and
inc
ins
adc
or
push
gs
cmp
add
out
mov
int3
loop
dec
and
pop
and
dec
fwait
inc
or
pusha
je
xchg
dec
inc
inc
mov
(bad)
rcl
adc
in
or
adc
not
cs
out
cmp
in
jo
imul
(bad)
push
mov
add
enter
mov
xor
cmp
daa
adc
test
inc
dec
push
push
stos
or
dec
and
jne
test
aaa
or
xchg
add
hlt
adc
push
stos
xor
or
mov
or
jno
xchg
shl
mov
sbb
mov
dec
push
shl
leave
lds
lods
js
mov
push
ja
xchg
mov
xchg
add
rcl
or
ficomp
jge
lds
jno
add
loop
xchg
mov
movs
xchg
loopne
sub
pop
fidivr
pop
cli
cmps
lock
inc
(bad)
lods
mov
test
repnz
add
lods
aam
inc
nop
mov
sbb
mov
push
inc
and
in
lods
sbb
mov
(bad)
mov
rcl
mov
push
fsubr
fadd
fadd
sub
pop
mov
sub
xchg
jns
jecxz
cmc
cmp
push
dec
ret
push
es
or
shl
je
das
nop
ror
lods
jne
inc
mov
dec
push
or
push
xchg
outs
cmp
fcomp
mov
mov
sub
sbb
add
push
xor
cs
inc
jmp
imul
sbb
mov
aas
jmp
add
outs
fidiv
pop
(bad)
ins
or
push
addr16
mov
sbb
inc
fwait
sbb
nop
or
pushf
xchg
push
adc
and
or
bound
mov
test
lock
shl
sbb
mov
sbb
stos
push
xor
pop
dec
div
push
gs
or
cs
ret
(bad)
jmp
xchg
in
add
or
mov
lock
les
sub
dec
mov
imul
mov
push
push
dec
mov
xchg
outs
mov
add
or
(bad)
call
jecxz
pop
push
ja
add
push
in
mov
cmp
pop
stos
sar
xlat
mov
ins
cmp
(bad)
or
test
and
rol
addr16
xchg
shl
add
jae
mov
push
in
push
(bad)
imul
les
sub
test
jmp
mov
pop
out
pop
pop
test
ficomp
sbb
test
loopne
dec
push
push
je
fwait
dec
sbb
or
mov
jge
int3
add
pop
cmps
sbb
sub
mov
pop
or
out
xor
fbstp
fcom
pop
shl
add
sti
cmp
cmp
add
inc
sbb
adc
jp
push
sub
sub
cmp
(bad)
dec
xor
pop
rol
movs
dec
and
inc
movs
cmp
add
mov
xor
or
mov
add
rol
sti
xchg
jnp
ja
mov
jnp
sbb
xor
jne
or
cmp
out
push
mov
je
cmp
adc
adc
cmp
pop
imul
scas
fdiv
test
fcomp
jmp
lock
nop
pop
lea
test
or
call
call
stc
sbb
sub
pop
mov
popa
xor
bnd
or
adc
sub
jg
cmps
cmp
test
pop
xchg
lea
stos
or
sbb
and
xor
mov
test
fwait
cli
inc
dec
ds
test
shl
rcr
push
fmulp
jne
xchg
loopne
dec
movs
fimul
data16
jne
or
and
or
sub
mov
in
mov
inc
psubsw
sbb
sub
out
push
inc
push
jne
fsub
nop
add
sahf
mov
or
jno
in
push
in
(bad)
icebp
push
ds
add
popa
std
popa
leave
adc
mov
(bad)
mov
mov
cmp
leave
add
scas
pop
pop
push
in
and
add
push
imul
test
adc
dec
xchg
inc
loop
enter
adc
call
cmp
cmp
or
aas
jb
je
sbb
mov
mov
mov
add
push
shl
retf
je
push
ret
or
add
sar
pop
mov
rol
leave
inc
or
push
stos
add
cmp
mov
mov
movs
mov
push
or
fdiv
loope
mov
cdq
mov
and
(bad)
xchg
test
xchg
daa
mov
je
sub
fwait
and
cmp
je
pop
scas
dec
shr
push
inc
lea
ins
ins
add
leave
seto
loope
and
stos
or
push
sub
mov
mov
iret
mov
adc
sub
dec
and
xchg
lea
outs
mov
inc
add
or
sub
cmps
stos
adc
push
mov
dec
sub
mov
loop
or
push
add
or
loopne
ja
and
push
ins
jns
cmp
add
movs
and
xchg
rcl
dec
and
inc
sbb
pop
or
adc
rol
and
and
sub
mov
push
adc
and
rcr
xchg
les
rcr
call
inc
push
out
xor
lock
into
ss
pop
push
add
push
loopne
outs
add
jp
adc
add
mov
leave
add
pop
xchg
movs
add
add
loope
or
jmp
adc
lea
shl
daa
repnz
repz
add
mov
mov
add
into
(bad)
mov
loop
das
inc
adc
add
and
call
sti
inc
pop
mov
inc
out
(bad)
push
outs
test
mov
fnstenv
pop
inc
es
or
xlat
fsub
jo
mov
push
hlt
imul
ins
mov
jb
pop
div
xor
or
jmp
mov
inc
inc
adc
sub
and
adc
cmp
stc
inc
or
popf
adc
(bad)
push
xchg
mov
xchg
ins
ret
jmp
and
sub
push
xor
call
retf
or
mov
push
or
and
or
inc
xor
dec
pop
repnz
movs
push
mov
cmp
dec
hlt
aaa
bound
and
cmc
add
add
and
sub
adc
rcr
nop
mov
mov
xor
cdq
mov
aam
adc
xchg
lods
and
add
sub
xor
dec
push
jns
add
mov
xchg
cmp
add
push
or
jbe
xor
and
dec
dec
xor
mov
addr16
daa
push
fsub
pop
mov
outs
neg
or
or
xor
pop
lods
outs
jg
push
jl
imul
icebp
ins
(bad)
out
bound
push
cmp
jge
jmp
cmp
add
mov
movs
sbb
daa
adc
cmp
mov
adc
test
add
sub
cmp
and
outs
movs
dec
int
push
or
sar
cli
test
ds
jle
fisub
dec
in
loop
arpl
aaa
xor
cld
mov
jo
or
and
ficomp
adc
sbb
mov
push
sbb
mov
pop
and
jge
scas
clc
sub
add
adc
ins
jmp
dec
or
dec
or
inc
ins
shl
sub
mov
xchg
xchg
add
imul
mov
sub
add
jb
push
(bad)
arpl
inc
xor
add
test
repnz
es
mov
xchg
ret
mov
test
xchg
setb
dec
mov
nop
cmps
xchg
push
cmp
shl
push
adc
ror
and
mov
xor
adc
add
xchg
and
test
or
adc
test
lea
jge
and
push
add
lock
adc
jl
jo
mov
cld
loop
fbstp
xchg
pop
pusha
push
fnsave
xor
imul
jmp
lods
and
mov
int3
ret
push
inc
lods
cmp
jne
mov
jmp
jne
push
dec
xor
sub
out
test
loope
sub
addr16
nop
rcl
inc
add
pushf
add
and
dec
sbb
jbe
xchg
mov
add
pop
outs
mov
push
rcl
add
loop
add
adc
add
or
retf
lea
neg
cmp
jbe
sub
jbe
(bad)
fisttp
(bad)
mov
fldcw
jae
mov
and
in
sub
fisubr
xchg
push
and
jbe
sbb
dec
iret
jge
xor
jecxz
inc
sub
gs
das
sub
out
push
and
outs
cld
popa
pop
dec
mov
cmp
push
add
add
sub
ja
pop
sar
(bad)
or
xchg
xchg
fs
movs
js
ins
add
retf
push
aas
jo
cmps
and
addr16
jnp
mov
dec
mov
pop
push
pop
push
dec
es
push
outs
test
rcr
or
fmul
shl
mov
dec
inc
pop
test
cmps
icebp
(bad)
dec
dec
push
push
mov
mov
fsubr
and
fwait
xlat
add
add
int3
sbb
ins
mov
mov
xor
inc
loop
stc
or
adc
jp
fidiv
popa
hlt
xchg
and
lods
hlt
lock
pop
sbb
adc
or
fnsave
pusha
je
sti
outs
adc
push
push
or
dec
mov
or
push
or
inc
adc
scas
push
or
jb
mov
inc
mov
test
bound
cdq
jb
sub
push
cmp
xlat
xor
jne
cdq
aam
xor
mov
jmp
dec
(bad)
mov
mov
fs
push
inc
sti
aaa
xchg
push
out
mov
loope
cmp
nop
xchg
add
test
fwait
add
or
cs
popa
inc
and
imul
or
push
popa
fisubr
or
es
adc
pusha
jo
inc
push
ja
cmp
repz
dec
add
cmp
gs
mov
or
inc
push
mov
pusha
ret
scas
pop
(bad)
adc
scas
je
mov
mov
or
loope
movs
inc
jae
nop
imul
add
mov
fsub
call
jne
push
cmp
hlt
pop
fidivr
push
adc
push
pusha
dec
mov
push
and
loope
mov
adc
and
inc
lods
mov
dec
xor
push
test
into
lahf
or
movs
or
ret
jb
movs
movs
sar
push
dec
std
les
arpl
fs
mov
mov
or
cmp
xchg
cmps
mov
push
add
dec
inc
sub
xor
ds
ins
sub
push
jp
inc
in
fiadd
outs
xchg
imul
mov
pop
xlat
sub
sahf
sbb
test
add
mov
add
mov
lock
sub
or
adc
daa
sar
leave
and
and
and
or
xor
inc
pop
cs
out
inc
or
mov
xchg
cwde
add
cs
test
xchg
jo
cmp
jno
cmp
mov
inc
movs
popa
cwde
and
jl
push
jmp
xchg
repnz
push
pop
push
enter
or
mov
pop
jns
or
sbb
adc
dec
push
push
sbb
jbe
jnp
rol
or
shl
call
dec
daa
sub
pop
repnz
fmul
popa
mov
push
leave
shr
loopne
sub
xor
adc
push
leave
mov
fs
clc
adc
jecxz
cld
test
mov
sub
and
sbb
fs
cmp
pavgb
cmp
xchg
movs
xlat
mov
inc
mov
fwait
(bad)
jmp
cmp
dec
dec
add
sbb
sub
jge
iret
les
mov
(bad)
lea
mov
or
mov
push
inc
inc
push
push
loope
sub
or
and
pusha
push
cmp
movs
push
mov
or
dec
and
pxor
xor
push
jmp
retf
ret
mov
adc
test
pop
sbb
pusha
mov
jae
push
stc
test
mov
and
xor
push
cmp
(bad)
add
xchg
cmp
add
int
shl
addr16
push
nop
iret
sahf
pusha
rol
add
enter
ret
add
stos
ret
adc
add
pop
js
add
sbb
jo
out
push
push
mov
inc
in
fs
push
jmp
xchg
stc
lahf
xchg
retf
jecxz
xchg
xchg
cs
cdq
cmp
pop
pop
adc
in
adc
scas
je
dec
inc
adc
sub
pop
fbstp
scas
repz
call
mov
cmp
adc
xchg
shl
sbb
test
xor
test
cmp
or
mov
bnd
mov
jecxz
add
pushf
(bad)
jne
inc
mov
pop
pop
cli
mov
aaa
fadd
mov
dec
das
shl
pop
dec
loop
stos
sub
and
add
xor
dec
mov
jbe
das
adc
fisttp
cmp
(bad)
xor
add
test
or
jo
xor
lock
pop
xchg
xchg
push
pop
sbb
nop
xchg
sub
adc
out
inc
ja
aad
dec
xor
sub
and
xchg
push
and
(bad)
adc
sub
or
test
dec
sbb
xor
jl
push
clc
aad
jl
xor
lods
mov
imul
dec
dec
dec
add
or
pop
cs
ins
pusha
dec
push
add
mov
add
pusha
pop
or
pandn
ds
xchg
add
(bad)
push
mov
les
loop
or
popf
cmp
push
(bad)
dec
and
pop
daa
mov
jle
sbb
xchg
lea
cli
mov
or
push
dec
add
jecxz
sbb
cli
test
cmps
xor
ret
call
in
in
add
sub
cmp
fdiv
fstp
xchg
je
dec
add
ins
jle
js
sub
and
nop
push
pushf
enter
stos
loope
shr
mov
pop
push
int3
mov
cmc
pushf
jge
add
jae
inc
ret
mov
mov
mov
fnstenv
scas
in
or
push
cmp
xchg
add
pop
push
sbb
arpl
cmp
xchg
hlt
adc
mov
pop
sbb
pusha
adc
mov
pop
mov
mov
pop
std
sti
sub
jo
mov
push
dec
repz
jno
mov
add
das
dec
jmp
inc
aaa
cmp
lock
popf
jmp
ss
dec
push
dec
xchg
xchg
mov
test
or
or
pop
push
xchg
push
imul
(bad)
pop
sahf
lods
jmp
rcl
sub
fiadd
push
sbb
test
xchg
xchg
cmp
cmps
or
pop
dec
mov
retf
push
lds
mov
ret
daa
mov
std
leave
adc
dec
jns
into
cmp
and
jge
dec
sbb
dec
add
or
rcr
lock
jae
sub
xor
rcl
mov
dec
cmpxchg
xor
jmp
push
adc
or
pop
adc
cmp
xchg
das
stc
push
sbb
lahf
enter
adc
sbb
imul
(bad)
xor
xor
xchg
scas
inc
push
lea
rol
sub
add
dec
cmp
enter
and
xor
lds
dec
inc
gs
popf
or
push
jg
adc
mov
(bad)
imul
inc
enter
popa
lods
cmps
ss
xchg
pop
inc
shl
jo
jl
jl
pop
pop
pop
cmp
jle
popf
mov
pop
movs
nop
jbe
in
retf
cmp
sar
push
popa
lea
fmulp
dec
push
aaa
or
inc
fisttp
call
int
add
fcom
fdiv
xchg
sti
lea
repnz
sti
cwde
adc
lahf
cmp
adc
rcr
aas
loop
(bad)
push
jmp
ins
or
in
in
mov
inc
inc
xor
pop
aas
and
sub
out
test
push
dec
sub
add
fistp
enter
(bad)
rol
push
shl
mov
inc
sbb
outs
adc
push
pop
lds
mov
dec
out
repnz
dec
fs
pusha
add
lods
lds
pop
mov
imul
cmps
adc
lods
push
xchg
pop
push
dec
leave
mov
lock
dec
stos
int3
jmp
cmp
test
push
and
xor
xchg
add
mov
add
enter
call
aas
test
mov
mov
push
mov
mov
lods
adc
stos
and
adc
sub
rcl
pop
rol
xchg
rol
syscall
add
fld
sub
inc
jo
add
push
add
rol
pop
enter
nop
stos
aam
mov
arpl
dec
cwde
add
or
aam
sub
dec
pusha
jp
adc
dec
aaa
xor
jo
fiadd
hlt
pop
add
jns
dec
or
inc
rcr
mov
adc
nop
push
inc
and
js
pop
add
ret
xor
mov
lods
xchg
add
inc
nop
jo
adc
js
xor
cmp
daa
mov
fcmovne
adc
loopne
and
and
outs
pushw
nop
nop
lahf
pop
xor
push
mov
loope
or
push
int3
xchg
fdiv
add
sub
xor
test
xchg
sbb
inc
data16
sbb
shl
js
mov
mov
jmp
sub
bound
add
rol
push
aaa
push
fwait
test
jne
ficomp
xchg
ins
aaa
movs
adc
adc
adc
in
jmp
sub
add
mov
inc
cmp
pop
sbb
or
daa
mov
or
leave
imul
cmc
sbb
mov
pop
xchg
dec
ret
jmp
lods
push
sub
leave
jge
mov
(bad)
sub
mov
lea
mov
bound
adc
push
jmp
pop
pop
xchg
fs
sbb
loop
fisubr
push
adc
or
and
sbb
cmp
or
mov
adc
add
jae
mov
loop
inc
add
ror
mov
adc
stc
add
cmc
push
test
das
ins
outs
ja
pusha
adc
out
ja
mov
cmp
pop
add
movs
mov
mov
adc
(bad)
jnp
or
and
add
push
pop
push
jo
aad
rol
sbb
sbb
test
xchg
pop
in
das
and
sbb
push
xchg
dec
pushf
and
in
sbb
push
add
dec
add
sub
and
push
adc
cmps
ins
fs
add
adc
xor
retf
and
xchg
push
aam
push
cmp
mov
xor
xor
in
retf
sbb
xor
fldenv
adc
adc
dec
or
push
ret
jnp
aad
ins
push
xor
lods
pop
adc
shl
hlt
or
or
add
and
xor
dec
mov
push
mov
jb
mov
push
jno
rol
xor
or
add
add
add
sar
or
clc
dec
call
pop
xor
add
mov
pop
mov
lods
cmps
pusha
call
js
or
xor
lods
cmps
rol
pusha
cmp
mov
xor
mov
push
mov
rcl
call
cdq
adc
pop
xlat
mov
scas
or
imul
xlat
cwde
mov
cmp
cdq
xchg
jns
mov
xor
(bad)
sbb
lock
xchg
or
push
rol
jmp
xchg
movs
aad
sub
aam
loopne
sub
aas
pop
inc
inc
pop
cmp
pusha
das
add
xor
jmp
dec
cld
adc
adc
or
mov
outs
or
ret
mov
push
jl
sti
adc
repz
(bad)
push
inc
xor
xor
inc
test
stos
sub
dec
dec
sub
xchg
cmc
add
sbb
cmp
cmp
sbb
push
adc
jecxz
ins
add
and
inc
das
fist
sbb
stos
or
add
mov
loopne
(bad)
aas
mov
sub
out
mov
repz
mov
bound
add
adc
pop
adc
mov
xor
mov
jns
and
add
js
lahf
mov
or
movs
sahf
dec
out
push
add
fs
or
push
push
push
mov
or
repnz
das
adc
test
jp
in
and
mov
sub
and
mov
pop
xchg
in
cmp
(bad)
mov
or
fadd
push
outs
dec
into
add
ins
out
loop
ret
mov
sub
sub
pusha
clc
cmps
mov
stc
inc
sbb
mov
enter
ja
mov
imul
jno
gs
dec
add
nop
(bad)
jb
cmps
(bad)
and
jmp
dec
(bad)
inc
and
or
shl
xchg
(bad)
sahf
nop
inc
mov
jge
sub
mov
mov
sbb
and
loopne
jmp
test
xor
fadd
call
mov
push
clc
add
adc
mov
cmps
push
and
in
imul
test
retf
call
test
lea
cmps
(bad)
sub
ficom
(bad)
mov
add
and
adc
fmul
in
movs
jne
dec
adc
sbb
xor
mov
aam
cmc
cmp
adc
out
stos
inc
push
dec
or
test
xor
mov
adc
adc
inc
je
inc
or
xor
nop
push
push
je
mov
sub
imul
sbb
xchg
inc
sbb
xchg
add
and
mov
shl
lea
mov
sbb
pop
add
movs
cld
int3
and
dec
push
jnp
add
push
retf
push
pop
nop
scas
cdq
outs
pop
or
or
cmp
mov
gs
push
(bad)
mov
add
mov
adc
pop
xchg
and
mov
mov
mov
adc
mov
jmp
or
push
xchg
dec
out
mov
adc
je
sbb
fild
push
cwde
jne
int
js
adc
mov
jo
fld
jmp
js
mov
xor
adc
inc
pop
mov
js
mov
iret
sub
push
inc
lds
fwait
mov
inc
sbb
cmc
lods
add
int3
inc
enter
ret
add
mov
pop
(bad)
dec
ret
xor
mov
mov
add
or
or
fnstenv
pushf
shl
jmp
push
mov
clts
add
(bad)
(bad)
mov
push
aam
scas
ror
sub
bound
pop
inc
rcl
push
pusha
ins
push
shl
push
and
inc
sbb
adc
loopne
push
je
sub
jg
out
mov
or
and
mov
adc
inc
mov
add
retf
adc
pop
enter
out
pop
nop
add
xchg
dec
test
and
or
add
and
push
sub
daa
shl
xor
mov
inc
sub
fadd
adc
aad
push
push
retf
inc
test
popf
popf
(bad)
lock
cmp
xor
mov
xchg
jns
add
adc
or
adc
dec
xor
add
pop
aam
fcomp
jecxz
dec
std
push
rol
or
fadd
adc
adc
add
and
lods
das
sub
sub
mov
push
ins
call
cmp
mov
sub
aaa
lods
add
push
sbb
les
push
inc
adc
lds
push
retf
pop
sub
and
adc
mov
bound
cmc
cmc
xor
pop
xor
and
ret
jecxz
test
and
int3
or
or
jnp
mov
ins
test
or
and
push
ret
push
sbb
add
inc
inc
addr16
xor
pop
xchg
test
cmp
xchg
popa
pusha
or
inc
and
inc
test
push
push
scas
pop
add
(bad)
cmp
sub
and
loop
enter
fsubr
sbb
das
dec
and
push
cmp
xchg
or
gs
call
std
aam
xor
shld
sub
mov
aam
retf
add
pop
clc
dec
addr16
xor
push
xor
and
inc
cmp
or
pop
cdq
add
idiv
sub
fldenv
div
sahf
popf
movs
adc
jecxz
cdq
and
cwde
je
ins
xor
call
daa
inc
adc
xor
push
add
mov
or
popf
shl
jmp
xor
(bad)
dec
inc
aas
xchg
sub
mov
xchg
pop
(bad)
repz
sbb
imul
pusha
jge
popa
test
jg
aam
inc
adc
mov
inc
cmp
daa
loope
nop
add
(bad)
into
mov
popa
inc
stos
and
sub
add
mov
sbb
mov
and
nop
mov
cli
mov
out
arpl
repnz
add
jb
and
dec
sbb
or
mov
push
sub
mov
jg
cmp
add
movs
jbe
sti
sub
pause
and
add
push
sub
cmp
or
pop
jg
adc
mov
je
dec
popa
mov
or
xchg
popa
inc
xchg
and
movs
dec
test
fld
fst
adc
pop
sub
in
pop
test
jmp
add
arpl
pop
jmp
mov
sahf
xchg
or
mov
or
sbb
or
inc
retf
cmp
lods
jecxz
xor
inc
test
adc
sub
xor
push
lock
jmp
fs
sbb
mov
xlat
and
aam
cli
cdq
sbb
pop
add
inc
hlt
lock
add
lea
inc
mov
and
mov
lock
xor
(bad)
xor
aam
and
ss
cld
pusha
movs
scas
xor
cmp
add
mov
xlat
movlps
jl
pop
jo
push
(bad)
shl
adc
pop
lock
fmul
pop
push
or
ret
and
dec
loopne
cmp
mov
pushf
add
test
cmp
sbb
ret
addr16
lods
or
jp
xchg
jns
outs
mov
xchg
mov
dec
push
and
jle
arpl
movs
adc
call
xlat
retf
xlat
adc
mov
push
xchg
or
ins
lods
dec
adc
xor
fcom
mov
or
leave
add
pop
mov
push
daa
pop
popf
inc
dec
add
mov
push
rol
jo
adc
inc
ds
clc
adc
sub
add
cmp
push
jge
mov
nop
push
or
fsub
pop
pushf
int
jo
retf
xchg
ret
or
add
ficom
xor
sahf
fs
repnz
add
repnz
les
test
jl
pop
sbb
push
dec
inc
inc
loope
and
ret
shl
add
test
pusha
fmul
sbb
ds
ins
dec
js
sub
inc
sub
test
imul
dec
mov
enter
call
call
cmp
(bad)
retf
test
sahf
add
sbb
lods
out
jmp
push
mov
push
cmc
daa
mov
lea
pavgb
and
ret
mov
rcl
pop
iret
push
icebp
out
xor
inc
pop
adc
pop
pop
add
adc
dec
test
inc
pop
inc
xchg
in
cmp
sub
adc
or
mov
int3
fadd
adc
arpl
icebp
ins
pop
sub
dec
sub
pop
mov
hlt
sbb
call
sub
mov
mov
add
sbb
(bad)
pop
jg
js
pop
aad
jno
xchg
neg
lea
adc
call
nop
mov
adc
push
mov
inc
xlat
pop
je
mov
mov
jne
movs
dec
sar
adc
(bad)
test
mov
pop
mov
sbb
push
mov
add
mov
int3
int3
es
pop
shl
rol
inc
adc
or
push
mov
dec
aaa
imul
out
or
arpl
push
sbb
or
add
leave
aad
imul
push
xchg
aam
jbe
adc
dec
xor
mov
sub
retf
jmp
mov
jg
push
ss
pop
cmp
ret
or
mov
push
cmp
jmp
sub
push
mov
inc
push
(bad)
movs
jno
adc
popf
sub
pushf
lock
mov
ret
call
xchg
lahf
or
add
or
mov
add
and
or
mov
js
sbb
daa
inc
cmp
sar
adc
(bad)
mov
fdivr
jl
or
lock
sub
and
pop
xor
sub
add
dec
cmp
outs
frstor
cwde
jmp
cmovb
add
pop
je
add
outs
pusha
xchg
cmps
and
inc
clc
add
dec
hlt
hlt
inc
add
add
xchg
test
sub
dec
cmp
adc
popa
adc
cmp
fmul
xchg
inc
outs
or
sbb
pop
xchg
push
movs
dec
push
leave
sub
test
test
adc
pop
imul
xor
nop
push
or
push
aaa
adc
jmp
inc
(bad)
push
adc
push
dec
paddb
jne
imul
and
cmp
repnz
jns
pop
(bad)
popaw
sub
test
lds
(bad)
cmc
pop
xchg
sbb
ror
dec
out
jae
push
xor
mov
push
pop
popa
xor
mov
rcl
or
out
or
mov
push
push
sbb
pusha
test
cmps
inc
iret
ret
sub
jg
lods
dec
or
pop
cmp
mov
stos
add
ja
sbb
inc
inc
sub
lahf
jnp
inc
enter
dec
in
push
xchg
sub
and
bound
(bad)
mov
popa
adc
add
push
and
shl
sar
dec
jnp
pop
and
sub
add
fs
mov
jae
cmp
or
aam
add
pop
mov
int
or
or
and
and
fist
lahf
adc
test
pop
sbb
pop
push
jnp
and
sbb
cmp
push
lods
dec
stos
or
fdivrp
cmova
add
or
mov
push
(bad)
retf
sub
das
adc
(bad)
leave
popf
mov
gs
mov
xor
sbb
lds
iret
mov
inc
inc
mov
pop
(bad)
push
rol
out
inc
hlt
(bad)
test
loopne
mov
or
(bad)
sbb
fld
jno
cmp
cmps
mov
in
jge
clc
mov
and
test
sbb
add
imul
push
or
sub
movs
adc
mov
add
xor
repnz
dec
test
add
push
add
adc
sbb
imul
xchg
xchg
dec
cmp
leave
or
movs
test
js
sbb
inc
cdq
movs
xor
hlt
mov
xor
fisubr
inc
mov
mov
and
xor
or
jne
rcr
pop
sbb
mov
pop
sub
test
sub
sub
test
pop
push
sub
popa
and
cmc
jmp
jge
inc
mov
adc
xor
inc
and
leave
mov
mov
ds
inc
mov
add
push
jge
test
imul
inc
inc
idiv
xchg
xor
adc
data16
ss
imul
inc
sbb
mov
and
pusha
dec
dec
(bad)
(bad)
out
sbb
cmp
cmp
inc
repz
imul
xchg
cmp
jne
mov
cmp
jmp
push
sar
inc
fsub
jne
add
pop
add
mov
sub
jb
or
jbe
or
add
popf
sub
mov
and
pop
fsub
fs
mov
or
add
fsubr
dec
clc
xor
cld
pop
fisubr
add
push
pusha
ficomp
sbb
push
lds
xor
mov
loope
mov
push
mov
add
sbb
sub
aaa
sbb
mov
push
(bad)
pop
xchg
jge
xchg
sahf
ror
adc
jmp
arpl
movs
icebp
adc
stos
jg
mov
imul
adc
out
retf
sbb
and
nop
adc
shr
inc
mov
sub
xlat
mov
sbb
movsx
sub
pop
sbb
fild
xor
out
lea
xor
(bad)
xor
movs
or
lea
push
dec
xchg
frstor
add
pop
push
fsub
push
add
xor
sbb
outs
mov
mov
pop
mov
push
dec
fmul
out
adc
dec
xor
cs
xchg
mov
xor
inc
adc
cmp
push
push
sub
sbb
dec
mov
jmp
and
jne
xchg
and
sbb
nop
dec
mov
aad
or
fst
push
ret
or
arpl
fwait
and
mov
nop
pop
or
add
adc
call
(bad)
ficomp
aam
mov
arpl
popa
jmp
shr
push
ins
cmp
or
dec
imul
repz
icebp
or
bound
dec
mov
and
adc
mov
dec
xchg
or
aaa
add
sbb
mov
les
loope
xchg
push
inc
or
mov
sub
xor
add
and
mov
cmp
adc
push
mov
imul
pushf
jo
jo
jecxz
ror
data16
popa
xchg
add
xchg
mov
pusha
cs
add
fcom
je
push
popa
or
cmp
mov
call
jbe
pop
mov
sbb
inc
imul
lods
adc
mov
loope
xchg
leave
jle
lea
push
daa
xchg
add
jp
mov
invd
mov
cmp
add
mov
jmp
sbb
xor
test
imul
pop
fidiv
ficomp
jmp
jne
jbe
sbb
in
mov
and
mov
mov
ret
call
adc
pop
cmp
jno
push
jp
mov
xor
add
mov
push
push
(bad)
jmp
aaa
test
je
cmp
push
sub
adc
jle
or
push
push
push
cmp
inc
or
or
call
inc
mov
scas
jno
xor
lods
jno
push
jne
aaa
cmp
sbb
xchg
and
push
test
iret
mov
push
imul
popf
jbe
shr
or
or
push
adc
test
aas
fcom
mov
add
cmps
cmp
clc
jno
xchg
xchg
lds
cdq
popa
xchg
dec
adc
sbb
push
rcr
dec
push
sbb
rol
adc
dec
and
and
xor
pop
stos
dec
jae
adc
retf
out
xor
fbld
fisub
push
sub
call
mov
(bad)
or
inc
dec
mov
mov
es
jnp
xor
sub
dec
inc
and
pop
or
scas
or
cmp
push
in
push
push
cs
xchg
je
and
and
xchg
add
inc
or
adc
and
dec
pushf
jb
(bad)
and
dec
jne
add
lods
and
sbb
mov
mov
das
rcr
inc
imul
sub
ins
or
adc
xor
sbb
and
les
adc
loopne
jmp
mov
bound
add
sbb
add
and
xchg
sub
push
mov
fcomp
ficom
cmp
fwait
dec
adc
mov
push
jns
push
in
ror
in
push
fcomp
(bad)
sbb
add
adc
sub
test
and
lods
arpl
sbb
dec
imul
dec
sbb
fldenv
inc
adc
sub
shl
test
inc
push
inc
pop
add
rcl
cmp
nop
pop
ror
push
sub
inc
cwde
cmp
jnp
cli
(bad)
adc
inc
mov
push
imul
adc
push
sbb
(bad)
lea
push
xor
inc
mov
(bad)
sbb
sbb
fs
repnz
jne
push
push
push
jmp
jl
andps
inc
test
scas
and
daa
icebp
test
xchg
xchg
jb
shl
fidiv
dec
mov
dec
psubq
jnp
jge
push
pop
cwde
jge
imul
(bad)
imul
sbb
dec
dec
loopne
rcr
mov
mov
or
es
lds
and
rcr
das
mov
push
inc
jne
jae
dec
fadd
push
int
bound
or
push
add
xchg
not
dec
adc
in
dec
adc
dec
xchg
push
arpl
jno
loop
mov
push
fisubr
or
dec
adc
dec
stc
jns
jb
sbb
inc
(bad)
pushf
repz
sub
xor
into
out
adc
and
cwde
sbb
loope
in
or
add
sbb
or
jecxz
lods
pop
inc
movs
dec
sbb
nop
pop
push
mov
push
xchg
pop
sbb
or
lods
inc
ret
adc
sbb
xlat
or
cmp
inc
mov
pop
inc
or
cmps
push
nop
test
cmps
ins
dec
xchg
sbb
cmp
push
or
fcomp
aaa
adc
das
sahf
rcl
ret
loopne
je
mov
aam
mov
cmps
pop
loopne
aaa
test
inc
sub
mov
mov
bound
mov
loop
push
dec
cmps
das
or
icebp
inc
add
movs
fcmovnb
sub
mov
xchg
mov
dec
sbb
ret
and
push
mul
or
and
inc
dec
aam
xor
sbb
add
or
xchg
push
sub
repnz
and
push
mov
mov
pusha
popa
test
push
ret
or
dec
jmp
push
adc
or
inc
xor
xchg
push
inc
mov
rcr
mov
nop
enter
cmp
lods
inc
shl
aaa
dec
pop
retf
push
mov
pop
push
jmp
out
test
and
fadd
pop
pop
or
or
add
popa
add
inc
dec
mov
dec
push
sbb
ret
sbb
push
adc
xchg
mov
out
adc
push
mov
inc
and
hlt
lods
push
ss
xor
ss
and
fist
xlat
adc
xor
fistp
inc
loopne
test
cmps
and
mov
mov
dec
and
ins
push
(bad)
or
cmp
sub
gs
pop
adc
or
ret
sub
jl
mov
(bad)
ins
lock
push
xor
jnp
movs
cwde
inc
sbb
js
inc
clc
je
add
nop
cmp
aaa
adc
adc
fisub
dec
add
dec
loopne
das
test
and
adc
jl
xchg
rcl
js
inc
out
dec
(bad)
adc
inc
or
je
and
fcom
movs
cmps
adc
imul
and
adc
shl
cmp
sbb
jno
adc
cmp
mov
loopne
adc
ja
mov
std
mov
xchg
mov
mov
adc
pop
sub
imul
imul
or
jno
ins
cmove
or
cmc
dec
sub
add
std
sub
pop
fwait
mov
and
inc
gs
or
ret
mov
xor
mov
lds
inc
and
sbb
jle
push
push
imul
adc
sub
(bad)
pop
adc
aam
ret
pop
add
sbb
popf
adc
pushf
jmp
add
and
or
xchg
push
push
stos
aas
push
xchg
inc
fucomi
xor
das
retf
ins
xchg
mov
add
sub
xor
mov
js
mov
sub
and
outs
rol
cmps
sub
hlt
mov
test
sub
(bad)
push
sub
sbb
or
pusha
scas
(bad)
xor
adc
adc
mov
ret
add
sbb
arpl
jne
dec
and
fidivr
jno
movs
and
mov
or
mov
aam
movups
or
sub
lods
dec
ins
or
xor
test
retf
xchg
pushf
jo
cmps
xchg
xor
clc
push
adc
fwait
ins
std
repz
push
adc
or
add
stos
push
sbb
aad
leave
and
dec
push
dec
test
in
outs
in
mov
push
and
mov
cwde
adc
mov
pop
or
push
call
cs
push
pop
or
sub
push
add
add
adc
(bad)
add
cmp
mov
push
pop
sub
push
add
mov
pop
jo
xor
or
xor
stc
mov
repz
jmp
and
or
sub
push
rcr
sub
sub
add
and
fbstp
test
adc
jl
fisub
push
add
repnz
mov
movs
hlt
lock
xor
ins
call
adc
(bad)
es
jecxz
mov
repz
adc
(bad)
adc
(bad)
ins
dec
fist
dec
sub
xor
push
adc
stc
jb
dec
pop
popa
cmp
or
and
pop
aas
inc
jnp
arpl
xchg
lods
adc
adc
outs
push
fldenv
bswap
dec
inc
and
mov
(bad)
mov
call
fsub
sub
xor
std
add
mov
xor
mov
inc
cmp
loope
xchg
sbb
loop
add
es
pop
add
mov
xchg
mov
pop
inc
lea
rol
dec
inc
mov
fmul
cld
pop
add
lods
sub
popa
ds
dec
xchg
mov
lods
add
adc
xor
xchg
xor
sbb
cmp
or
lds
les
sub
and
sub
sbb
loope
jne
mov
cmps
push
push
fst
push
add
mov
adc
fmul
rol
imul
and
mov
dec
and
fadd
jne
inc
inc
bound
mov
test
mov
add
setb
add
movs
pop
add
imul
pushf
jp
imul
and
or
mov
mov
push
or
test
test
cwde
xor
mov
add
arpl
mov
fdivrp
mov
cvtpi2ps
ins
or
rcr
fcomp
repnz
push
cmp
out
les
sbb
push
loop
adc
cmps
mov
cmps
dec
ror
ja
in
jge
adc
mov
adc
mov
xor
gs
cmp
mov
btr
mov
aam
test
popf
test
test
add
adc
je
push
frstor
and
push
push
or
adc
push
mov
ds
add
fist
lock
stos
aaa
(bad)
sub
and
xor
ja
sbb
and
lock
add
mov
dec
add
jl
(bad)
shr
add
and
or
lock
call
gs
sbb
xchg
xchg
add
and
test
adc
jp
int
push
pop
xor
push
mov
bound
jle
je
sub
sbb
and
cmp
dec
sub
push
sbb
dec
pop
rol
jne
mov
test
pop
imul
cmp
rol
sbb
(bad)
js
daa
or
xchg
pop
in
lea
xor
push
ret
mov
fistp
adc
movlps
sub
shl
(bad)
mov
fwait
test
dec
push
add
pop
push
mov
dec
inc
repz
or
sti
mov
test
cmp
neg
in
adc
(bad)
out
mov
movs
pop
add
mul
or
in
sahf
mov
lods
rcr
adc
pop
xor
adc
add
rol
adc
push
cmp
mov
aam
mov
push
ror
push
fs
out
shl
or
pop
add
outs
outs
fwait
and
and
inc
mov
or
rcr
(bad)
and
xor
add
retf
test
retf
and
push
repnz
sub
(bad)
mov
movs
sbb
sbb
test
mov
sbb
push
lock
xchg
aaa
sbb
jno
pop
sub
icebp
and
and
push
pop
int
inc
les
es
mov
(bad)
push
sbb
ret
or
mov
lock
scas
cmc
inc
inc
adc
test
push
add
dec
sbb
pusha
xor
add
push
or
loop
sub
xchg
inc
loopne
lea
mov
sub
lock
adc
movs
add
xor
push
jne
cmovl
js
mov
sbb
loope
push
jo
int3
ins
scas
push
inc
repnz
xor
(bad)
pop
clc
mov
daa
dec
push
ja
outs
mov
rcl
add
nop
inc
call
es
cmp
sub
pop
imul
or
inc
sbb
shr
sub
pop
mov
shl
adc
adc
mov
adc
test
add
cmp
dec
jmp
in
or
dec
mov
xor
test
mov
jmp
dec
jo
ret
imul
outs
add
movs
inc
dec
imul
or
adc
fist
shl
test
or
xchg
jb
fwait
push
sub
adc
dec
xchg
neg
retf
pop
ficom
pop
sbb
and
pop
hlt
xor
mov
push
pop
(bad)
int3
iret
test
mov
push
pushf
cmps
mov
inc
sti
test
pushf
fstp
les
dec
hlt
xchg
jno
mov
mov
pusha
pop
and
xchg
mov
pop
add
jmp
aad
jp
adc
adc
cmp
and
and
cmps
je
push
dec
adc
jne
ret
pop
and
cmp
mov
mov
or
and
or
push
shl
jo
jle
mov
je
ja
and
nop
pop
out
(bad)
in
jbe
sub
sbb
and
jmp
stos
lock
cs
and
stos
lahf
push
and
(bad)
adc
daa
cmp
push
repnz
mov
lea
out
(bad)
aad
push
or
xor
mov
in
dec
dec
add
add
vmptrld
inc
add
adc
cmp
stc
shl
cmp
mov
inc
ret
fst
lahf
mov
outs
sub
repz
pop
loopne
and
or
pop
aaa
jne
rcl
scas
lods
adc
test
sub
daa
(bad)
ror
and
popa
sbb
push
inc
push
dec
mov
add
jne
cmps
cmp
(bad)
or
inc
retf
sbb
dec
jmp
and
push
ss
pmulhuw
cmp
aam
jno
xor
cmc
push
sub
sbb
iret
add
int3
dec
add
test
push
mov
sub
inc
popa
or
clc
das
ror
dec
jge
sar
and
jbe
jmp
aas
push
retf
stos
mov
sbb
xor
test
rcl
in
test
pop
mov
adc
jmp
push
adc
or
jmp
xor
sahf
xor
mov
add
adc
out
mov
push
push
push
push
fs
sbb
jne
fimul
dec
adc
mov
mov
inc
adc
lds
cmp
and
xor
pop
xchg
xor
pop
sbb
add
cmps
out
mov
aam
or
mov
add
popa
adc
cvttps2pi
ins
adc
lods
mov
vcvtpd2ps
mov
das
jmp
test
(bad)
adc
jne
outs
(bad)
xor
push
add
or
xor
fcomp
jle
sub
add
push
test
adc
push
ins
imul
nop
clc
mov
sub
fucomi
sbb
jecxz
push
lock
pop
and
mov
rol
adc
sbb
sbb
(bad)
mov
movs
xor
fs
or
out
xchg
cmc
cmps
sbb
push
sub
pop
mov
mov
imul
jl
in
pop
fwait
cli
and
and
jp
sub
xor
sbb
push
add
mov
jae
cmps
jne
or
mov
shl
movs
cmp
cmp
rol
adc
and
fadd
sub
imul
push
test
push
mov
jne
leave
pop
cmps
pop
ins
adc
enter
jo
pavgb
or
fld
add
pop
popa
movs
dec
and
mov
test
repz
fnstenv
or
or
inc
aas
or
xlat
movs
mov
adc
adc
cmps
movs
call
mov
mov
pop
jne
adc
out
mov
adc
adc
rcl
(bad)
push
loopne
cmps
shl
repnz
repz
add
sbb
mov
fsub
sbb
sbb
dec
add
dec
inc
dec
ins
and
outs
popf
gs
add
xchg
cmp
je
test
add
sub
pop
sub
inc
cmp
jns
sbb
pop
add
inc
cmp
sbb
or
pop
pop
dec
add
pop
adc
and
mov
pop
and
inc
dec
push
jle
mov
sete
adc
dec
cmp
pop
jmp
popf
mov
shr
sub
dec
add
cli
xchg
sub
ret
mov
pavgb
inc
inc
and
jno
dec
add
dec
popf
mov
or
sub
test
les
mov
jns
sub
cmp
out
add
loopne
int3
add
dec
sub
mov
sbb
push
add
dec
aad
lock
push
icebp
mov
rol
pop
aas
stos
sub
(bad)
push
int3
sub
inc
or
int
jl
inc
mov
and
push
adc
dec
cmp
xchg
adc
inc
cmp
pop
es
mov
cmp
xor
pop
nop
push
pop
adc
xlat
pop
sub
addr16
and
and
mov
pop
fldenv
xchg
pop
pusha
fistp
push
jmp
adc
add
repnz
mov
movs
call
sub
aaa
mov
dec
stos
add
mov
movs
jno
add
rol
push
and
pop
gs
inc
jp
add
mov
dec
jno
push
sub
loope
test
adc
sbb
xchg
sub
mov
cmc
add
rol
mov
rcr
mov
cmp
clc
cmp
ret
sbb
shl
movs
inc
push
xor
mov
dec
add
mov
das
cmc
gs
adc
add
gs
retf
in
fs
ss
sub
cmps
jb
iret
test
mov
add
ss
shl
push
stos
jmp
pop
out
(bad)
and
xor
jmp
lds
or
mov
ja
fsub
ins
cmp
mov
arpl
or
fld
mov
adc
or
fcmovnu
hlt
in
mov
push
inc
mov
inc
adc
add
dec
inc
inc
cmp
push
or
jmp
pop
adc
xchg
pop
push
push
xchg
jns
ret
xor
or
movs
cmps
ret
inc
das
adc
push
mul
std
aaa
push
adc
mov
cmp
mov
adc
inc
call
lea
mov
in
and
popa
xor
xlat
rol
jnp
pop
jnp
push
inc
push
jg
mov
fist
(bad)
(bad)
imul
pushf
or
scas
out
jnp
movups
in
add
or
add
add
daa
sub
dec
test
test
cmp
jmp
jnp
xchg
dec
jae
jle
push
adc
or
xor
push
hlt
jae
xchg
or
outs
loope
push
repnz
xchg
in
pushf
aam
push
mov
pop
jmp
sub
and
pop
sub
rcl
dec
jecxz
adc
inc
push
push
dec
daa
in
cdq
jp
(bad)
mov
icebp
jp
xor
add
cld
shr
das
or
adc
mul
sti
cmp
div
push
ret
cmps
cmp
jecxz
lea
xchg
pusha
scas
dec
mov
xor
test
cdq
sbb
pop
or
cs
xor
leave
jmp
ja
add
pushf
cmp
ret
push
repnz
xor
test
add
scas
int
and
xor
bnd
xchg
xlat
lds
movs
add
add
push
jl
dec
or
cmp
shl
and
gs
enter
sub
(bad)
fadd
mov
and
push
jae
jl
pop
adc
ins
mov
cmc
ds
and
test
fdivr
in
ss
es
mov
iret
iret
add
and
lds
xor
dec
clc
add
xchg
or
ror
adc
xchg
mov
gs
out
push
sbb
inc
mov
jo
inc
push
aam
jbe
(bad)
adc
pop
sbb
mov
jo
dec
mov
pusha
jne
and
push
adc
test
jb
push
jle
dec
cmp
pop
jecxz
lahf
inc
imul
push
inc
mov
inc
adc
and
inc
push
inc
pop
sub
cld
js
or
xchg
jo
sub
retf
mov
pop
cmp
xchg
daa
ins
nop
jl
ret
ins
or
sbb
cmp
or
add
mov
movs
sbb
test
out
sar
adc
jecxz
dec
jge
arpl
pop
aaa
xor
pop
sub
cmc
call
aam
xchg
mov
shl
jmp
mov
xor
loopne
jl
outs
bound
pop
and
lock
repnz
dec
add
jne
inc
mov
inc
inc
rcr
or
or
mov
js
rcr
cmp
test
iret
aas
ret
shl
fs
inc
inc
fadd
dec
nop
ret
jecxz
inc
cmp
outs
lock
add
pop
push
dec
cdq
dec
inc
cmp
inc
mov
dec
dec
cmp
xchg
dec
inc
push
inc
mov
ror
and
and
or
mov
mov
les
cmps
sbb
(bad)
jmp
sub
fmul
adc
sbb
jae
mov
movs
jne
mov
dec
pop
add
jecxz
and
and
pop
loope
and
test
js
ja
add
jmp
push
lods
stos
rol
adc
mov
push
pusha
outs
clc
imul
inc
(bad)
aam
adc
jae
inc
push
js
or
cs
mov
jecxz
pusha
jmp
cmp
jg
and
add
aam
sub
adc
jnp
xchg
mov
loop
call
sub
lock
js
fiadd
lods
inc
hlt
(bad)
jmp
fadd
xchg
sub
dec
fistp
and
clc
and
mov
rcl
xor
mov
cmp
push
(bad)
push
or
sub
mov
ficom
sbb
fmul
mov
cmp
lea
and
push
jnp
inc
mov
je
and
add
jmp
adc
or
adc
sub
pop
cmp
inc
rcr
les
mov
movs
jmp
daa
test
adc
ret
and
imul
push
int
xor
pop
lods
rcr
mov
cmc
and
sub
xor
adc
pop
popa
add
xabort
push
cmp
pop
cdq
push
adc
int3
dec
dec
loop
push
push
test
sub
inc
bound
test
push
clc
icebp
mov
test
xchg
div
cs
int3
gs
jmp
pop
sbb
push
mul
pop
loopne
mov
mov
dec
shr
in
push
mov
loope
adc
xchg
std
inc
or
xchg
cmp
or
adc
mov
sbb
shr
jmp
add
idiv
sub
push
mov
shl
in
cs
test
mov
and
xor
sbb
ins
sahf
jno
dec
inc
movs
jae
inc
out
pushf
fsubr
mov
adc
inc
xor
dec
aad
ins
adc
shr
push
sbb
imul
xor
add
push
pop
xchg
gs
push
mov
or
push
cmp
jmp
popf
xchg
(bad)
aaa
pop
sbb
dec
pop
mov
punpcklwd
pop
adc
push
rcl
push
cmp
test
retf
cmp
push
aaa
dec
dec
cmp
add
pusha
enter
pop
rcr
sbb
in
add
dec
ins
call
and
cwde
aaa
adc
dec
push
movs
shl
pop
or
or
cmp
mov
mov
pushf
push
movs
lea
mov
movs
test
loopne
adc
out
add
dec
mov
cmp
(bad)
jmp
dec
inc
imul
fld
mov
pop
cld
clc
xchg
aad
cdq
xor
mov
push
call
push
cwde
mov
dec
in
jle
mov
mov
cwde
je
and
xor
jne
icebp
js
jecxz
inc
sbb
mov
lods
jmp
push
cld
mov
iret
out
mov
arpl
mov
jne
out
adc
cmps
add
rcl
push
test
cli
iret
repz
and
or
int
push
lea
test
shl
pop
mov
sub
sbb
jae
xor
ret
js
imul
mov
rcr
scas
adc
call
pop
into
push
add
adc
mov
add
or
add
or
movs
mov
adc
cs
sar
pop
imul
adc
fcom
inc
sub
ins
clc
pusha
dec
sbb
xor
shl
leave
push
in
xlat
test
jecxz
int3
mov
arpl
sbb
or
dec
es
and
sbb
inc
adc
sub
jnp
push
and
push
lock
shr
loopne
sub
inc
mov
cmc
push
int3
bound
mov
adc
shr
(bad)
mov
adc
push
sbb
push
add
addr16
and
xor
push
dec
xor
push
mov
mov
adc
in
mov
leave
sbb
cmp
mov
push
jecxz
xchg
adc
push
cwde
fild
xor
imul
(bad)
pop
jl
xor
aam
add
add
gs
xchg
pop
inc
mov
cmp
add
cmc
and
or
dec
movs
sub
or
jns
or
adc
push
daa
scas
or
add
mov
imul
sub
loope
rcl
push
xor
push
adc
sbb
pop
add
fadd
pop
add
pop
enter
or
dec
popa
sub
lea
test
dec
pushf
in
enter
test
xchg
outs
jne
loop
dec
push
push
push
push
push
push
call
inc
or
rol
push
(bad)
cmp
pop
cwde
ss
or
or
hlt
rcr
and
cmp
(bad)
cmp
les
les
test
inc
loop
jmp
xchg
add
cld
test
icebp
dec
fadd
or
mov
push
jl
lds
call
pop
add
xor
(bad)
je
sub
mov
push
and
add
sub
adc
jne
mov
pop
clc
fs
jmp
scas
stos
xchg
push
xor
call
xor
mov
mov
int
adc
xchg
(bad)
fst
add
in
es
pop
add
inc
stc
or
fisttp
xor
call
mov
push
cmp
or
in
add
xchg
in
mov
not
icebp
js
fcom
mov
pop
cmp
xchg
mov
mov
jg
jne
add
sub
and
cs
sar
or
or
pop
jecxz
push
lea
fsubr
sub
or
sti
add
movs
ret
push
cmc
in
leave
and
es
dec
int3
and
inc
xchg
hlt
pop
sbb
imul
pop
dec
les
jno
push
mov
or
sbb
push
test
sbb
into
xor
jp
dec
mov
adc
dec
out
adc
mov
push
push
cmp
push
cmp
mov
lock
das
pop
pop
pop
rcl
(bad)
ror
mov
xchg
mov
imul
add
xchg
jmp
adc
xor
dec
push
mov
dec
xchg
pop
push
loopne
mov
lock
imul
in
push
xchg
test
xchg
and
push
push
jmp
imul
jle
mov
inc
dec
mov
xor
xchg
jecxz
lods
push
mov
add
cmc
inc
xchg
lock
cmp
lahf
cmp
imul
dec
mov
xchg
mov
in
aas
(bad)
mov
or
xchg
xor
sub
test
cmp
call
xchg
lock
xor
(bad)
adc
shl
jg
inc
and
and
sub
shl
pop
(bad)
mov
je
push
rol
les
(bad)
xlat
xor
aam
add
dec
mov
rcr
sub
lea
push
inc
sbb
xchg
mov
in
sar
push
shr
popf
and
pop
fmul
or
jno
and
sbb
mov
jmp
int3
sar
aas
stc
popa
test
adc
mov
add
jo
push
mov
sbb
(bad)
and
add
das
fld
test
xor
push
xor
add
ficom
cmp
arpl
push
adc
das
sub
out
push
sbb
cmps
outs
fwait
push
mov
mov
loope
jns
or
mov
inc
cmps
sbb
or
xchg
inc
jmp
in
test
inc
xchg
or
enter
add
or
cmps
xor
mov
and
aad
outs
sub
ja
add
cmp
call
xor
call
xlat
stos
cmp
popa
mov
dec
jecxz
and
jl
(bad)
lea
in
and
popa
fimul
jns
or
cmp
dec
out
aad
dec
xor
test
sub
add
jp
lods
pop
sub
add
sbb
pusha
cmp
xchg
dec
sti
shl
js
sar
add
mov
movs
xor
mov
das
(bad)
add
mov
push
push
xor
(bad)
test
jmp
lea
ficom
scas
(bad)
fld
stos
sbb
mov
or
popa
cdq
mov
cmps
test
sub
inc
sbb
leave
ins
add
mov
jge
add
dec
mov
lea
add
jb
add
test
sbb
int3
and
add
das
int3
or
jo
xchg
fsub
xchg
cmp
mov
or
xchg
lods
nop
stos
pop
xchg
sub
ds
push
rol
dec
fldenv
popa
jns
push
(bad)
mov
and
inc
push
or
(bad)
loopne
sbb
and
and
adc
popa
enter
adc
or
mov
and
test
imul
sub
push
sub
jp
add
add
or
js
das
or
and
sub
inc
xchg
lahf
stos
add
mov
inc
ror
inc
les
sbb
or
add
(bad)
sub
cdq
pop
inc
stos
pop
and
add
xchg
iret
les
in
push
pop
push
mov
and
fwait
push
adc
pop
and
mov
push
int3
adc
add
add
jge
jle
sti
dec
repnz
unpcklps
mov
lahf
sbb
or
mov
xor
scas
push
xchg
inc
daa
loopne
data16
adc
clc
mov
int3
scas
and
add
and
and
ins
inc
sub
jns
or
push
xchg
scas
rol
jb
and
iret
jmp
jmp
add
adc
loopne
les
ret
gs
and
push
mov
and
mov
sub
jmp
pop
sbb
mov
mov
(bad)
lock
adc
push
mov
lahf
xchg
mov
push
add
pop
push
(bad)
mov
loope
and
rol
icebp
xchg
mov
and
mov
pop
xchg
rol
mov
sub
or
in
out
sbb
fisttp
iret
fs
and
xchg
adc
(bad)
(bad)
call
js
push
push
adc
inc
sub
and
ins
pop
mov
cmp
sub
int3
xchg
mov
xchg
dec
and
push
test
jb
inc
or
call
es
imul
test
jmp
xchg
lahf
ror
jl
push
outs
mov
out
inc
in
and
push
in
dec
jmp
sbb
mov
mov
aad
jecxz
cmc
lock
mov
arpl
adc
push
jns
mov
nop
xchg
pusha
sub
mov
or
push
lods
ret
jo
or
jle
xchg
add
retf
cmp
aam
adc
sub
out
int3
push
fs
inc
cdq
add
test
add
add
les
push
test
or
push
int3
adc
(bad)
jno
or
xchg
adc
mov
cmpxchg
adc
xchg
sub
add
inc
lods
mov
adc
ror
popa
push
loope
sub
rcl
dec
in
inc
dec
shl
jae
mov
sub
xor
inc
and
and
aam
stc
push
gs
loope
push
mov
jae
mov
ja
jmp
mov
pushf
mov
adc
pop
xchg
cmps
jo
jne
cmp
mov
push
outs
cmps
dec
add
imul
sbb
xor
imul
sbb
xchg
jns
adc
call
or
mov
sub
imul
and
push
cmp
and
inc
js
rcl
push
add
in
push
rcr
(bad)
dec
cmp
add
in
sbb
pop
outs
test
sub
data16
(bad)
adc
or
mov
inc
in
sub
sbb
inc
out
imul
dec
inc
frstor
test
xor
mov
in
and
adc
in
mov
dec
bound
xor
push
mov
xor
jo
sbb
cmp
jo
lds
loope
inc
mov
sbb
outs
imul
sti
adc
jg
fwait
or
xor
cmp
push
jmp
(bad)
push
push
mov
hlt
gs
or
xor
push
arpl
xchg
add
inc
in
jbe
jbe
sub
iret
popa
test
ds
ins
add
add
or
pop
pusha
push
icebp
push
add
xlat
imul
push
rcl
mov
les
popa
mov
lods
icebp
or
dec
sbb
push
fist
lods
arpl
or
xor
test
inc
add
mov
cdq
gs
loopne
ds
aaa
fimul
fisub
test
pop
mov
xchg
sar
cmp
aad
pop
dec
and
ret
add
leave
aam
fild
xor
rol
mov
movs
add
adc
xchg
add
xchg
hlt
enter
and
xor
imul
pop
dec
xor
pusha
inc
sbb
inc
loope
push
fbstp
push
movs
and
rol
pop
adc
push
aam
xchg
mov
jl
adc
jo
popa
mov
pop
push
push
sub
push
xor
dec
cmp
dec
pop
push
mov
add
xchg
ret
mov
pop
pushf
adc
ret
jge
push
stc
mov
dec
mov
leave
and
sbb
jo
mov
ret
call
xchg
add
sbb
dec
ins
sub
xor
adc
xchg
nop
cmova
dec
mov
push
push
in
xor
mov
cmp
mov
call
scas
je
add
push
pushf
and
adc
push
movs
(bad)
imul
mul
dec
ret
lock
and
xchg
movs
mov
aam
fst
or
jno
push
mov
cmp
in
sbb
dec
push
mov
pop
xor
add
jne
inc
or
add
test
pusha
rcr
push
xor
aam
xor
and
lods
daa
xlat
lock
xchg
xor
jne
adc
jnp
xor
xor
cs
pushf
pop
neg
call
call
cmp
add
add
or
push
mov
and
pop
adc
cmp
lea
add
adc
adc
pop
xor
cmp
dec
mov
sub
lock
loope
pop
xor
mov
sbb
inc
dec
sub
lock
test
jle
movs
mov
add
adc
test
test
jb
je
fadd
add
add
add
cmp
push
push
push
push
ror
sbb
jl
fadd
enter
push
aaa
fcmovb
and
add
inc
inc
cs
or
rcr
push
inc
test
mov
cmp
push
push
xchg
pop
jo
(bad)
xor
mov
scas
jmp
jg
cwde
or
add
push
push
lea
push
xchg
(bad)
sub
jo
jmp
mov
daa
mov
xchg
test
sub
ss
cmps
test
shl
adc
cs
jg
adc
mov
sbb
and
push
clc
dec
ret
(bad)
ror
not
jmp
ret
push
sbb
or
sub
pop
std
dec
fstp
dec
add
out
push
sub
mov
in
mov
pop
pop
or
pop
jge
add
xchg
dec
jb
mov
imul
push
push
shr
pop
cmp
push
(bad)
dec
pop
dec
pushf
sbb
xchg
lock
push
add
or
call
ret
fistp
aam
aaa
inc
aaa
sbb
xchg
push
jmp
adc
push
iret
lock
inc
call
ds
inc
int
add
jp
arpl
and
sbb
push
or
pop
mov
push
imul
xor
pop
dec
sub
stos
cmps
stos
retf
adc
sbb
or
adc
neg
test
inc
and
not
pop
or
sub
push
inc
xlat
adc
push
pop
or
inc
popa
cmps
retf
jne
push
mov
and
xchg
mov
pop
leave
pop
push
movs
(bad)
je
ret
and
nop
mov
mov
jo
push
cs
je
ret
std
inc
mov
mov
test
adc
mov
dec
push
test
jge
or
sub
dec
push
stc
pop
inc
sbb
xchg
dec
add
into
jb
sub
add
inc
dec
push
xor
fcomp
or
pop
pusha
loop
and
add
inc
cmp
xor
ret
push
imul
(bad)
cld
cwde
fisttp
sbb
jb
popa
push
(bad)
and
sahf
inc
adc
xchg
dec
in
sbb
pop
xchg
and
mov
cmp
sub
ss
cmp
mov
cmp
imul
and
mov
push
sbb
ins
mov
add
push
mov
in
xor
popa
cmps
mov
imul
aas
push
(bad)
cmp
sbb
ins
or
pop
outs
adc
or
mul
mov
xchg
lods
mov
jg
fcmovu
jne
push
ret
dec
cmc
xor
pop
aam
pop
adc
in
mov
movs
xchg
int3
pop
hlt
mov
and
push
in
add
lods
mov
imul
popa
stc
mov
xchg
fsubr
pop
mov
fcom
sbb
or
sub
jnp
sbb
pushf
mov
push
ficomp
cli
ins
stos
adc
lahf
add
jmp
push
inc
loope
dec
push
xchg
or
mov
fmul
dec
pop
ja
das
add
add
sbb
or
mov
push
sbb
lods
or
cdq
outs
or
dec
xchg
mov
push
jno
mov
mov
enter
add
inc
(bad)
xor
jnp
and
cmp
mov
or
(bad)
test
dec
inc
nop
test
inc
add
mov
adc
sbb
imul
mov
sub
dec
leave
adc
add
sub
popa
push
dec
sub
or
jae
xchg
mov
inc
or
dec
jge
jbe
shl
and
mov
mov
mov
add
sahf
or
fcom
sub
add
mov
popa
mov
push
xor
cmp
xor
push
or
or
stos
xchg
mov
jno
imul
push
pop
xor
popf
adc
(bad)
lods
stc
sub
(bad)
les
popf
adc
sub
cwde
sbb
loope
arpl
movs
cmp
test
or
sub
loopne
mov
inc
fst
mov
outs
fisttp
outs
arpl
mov
xchg
ds
mov
icebp
adc
jecxz
adc
xchg
xor
retf
xchg
lods
and
addr16
adc
sbb
or
test
bnd
jmp
inc
or
cmp
or
inc
rcl
and
fild
jmp
cmp
push
push
mov
imul
and
pop
xchg
adc
ret
inc
clc
jnp
push
bound
jl
adc
add
pop
adc
or
nop
addr16
inc
or
sub
mov
dec
shl
push
adc
or
pusha
loop
or
sub
mov
in
inc
and
inc
sbb
test
ror
test
mov
add
xor
sub
mov
rol
clc
add
ins
sub
or
leave
mov
inc
xor
add
ror
or
inc
mov
push
xchg
xchg
sbb
inc
call
shr
inc
sbb
sub
fidiv
adc
push
movs
xchg
aam
dec
fadd
xchg
xor
mov
ret
dec
jne
fisttp
or
jmp
mov
jmp
adc
add
or
sbb
sub
enter
or
popf
adc
or
sub
mov
sti
es
cmp
ror
aaa
sahf
jmp
mov
gs
hlt
add
loop
pop
adc
rcl
mov
xchg
out
cli
lahf
lea
dec
inc
cmp
in
sar
or
inc
cmp
jge
daa
mov
jns
lock
or
jns
neg
call
sub
mov
mov
add
add
lds
into
mov
adc
mov
jo
(bad)
cmp
mov
adc
imul
push
inc
sub
jne
and
sub
pop
inc
int
push
adc
sub
popf
xor
pusha
mov
mov
ins
shl
and
daa
inc
cmps
and
loopne
and
mov
fadd
jp
(bad)
lds
imul
push
mov
mov
lds
loop
adc
xor
pushf
clc
or
add
lods
sub
jp
or
adc
or
mov
add
in
mov
mov
rol
jmp
retf
(bad)
shl
and
unpcklps
xchg
and
inc
inc
or
pop
inc
dec
add
sbb
fs
pop
icebp
ret
lea
ins
imul
mov
adc
ss
pop
adc
cmp
dec
pop
jp
jge
xor
pop
sbb
cmps
push
add
mov
or
adc
jle
popa
das
fcmovnu
sbb
ret
add
addr16
aam
jecxz
sbb
xchg
sahf
dec
stos
int3
jle
add
add
pop
adc
push
and
mov
adc
lock
xchg
xor
inc
cmp
xchg
inc
inc
(bad)
iret
mov
retf
push
sub
movs
test
push
and
daa
(bad)
cli
mov
push
jmp
sub
jb
lods
mov
sar
sbb
js
sar
and
push
rcl
xor
jne
mov
and
retf
inc
and
or
loopne
xor
adc
sbb
adc
mov
xor
mov
pop
push
adc
mov
je
or
mov
popa
xchg
push
sub
cmp
ja
dec
call
mov
mov
in
push
or
test
or
lahf
adc
add
add
ret
mov
mov
adc
(bad)
lahf
jbe
and
cmp
rol
jb
cs
cmp
cmp
pop
xchg
and
imul
or
icebp
jp
cmp
mov
pushf
xchg
stc
inc
mov
(bad)
push
jecxz
mov
addr16
dec
jae
mov
xor
jle
rol
aas
mov
in
fdiv
cmp
div
sbb
push
call
mov
jb
or
xlat
in
or
test
hlt
in
ret
dec
movs
cmp
clc
lock
push
retf
and
pusha
xchg
jge
shl
pusha
or
repz
cmps
adc
inc
push
repnz
fmulp
pop
gs
sbb
mov
push
cmp
xor
lahf
loope
add
lea
push
sahf
and
pop
sub
inc
sub
aam
inc
(bad)
pusha
adc
push
pop
xlat
retf
and
pop
jbe
adc
and
clc
adc
mov
mov
xor
sub
in
pop
dec
adc
or
push
dec
rol
or
test
adc
test
xchg
mov
pop
dec
mov
xor
lods
test
and
or
cld
call
cdq
je
cld
push
dec
pop
push
cld
mov
fidiv
in
jnp
add
pusha
div
out
loope
nop
fcom
jnp
aaa
jmp
adc
push
out
pop
call
shr
push
pop
sub
dec
ss
mov
lds
les
sub
sub
lock
cmp
jnp
sbb
push
sbb
push
add
mov
xor
mov
cmp
loopne
add
adc
xchg
dec
or
adc
test
dec
sub
sub
jo
dec
ds
pushf
ins
enter
leave
sbb
pop
mov
ins
loope
and
inc
sbb
jecxz
adc
arpl
adc
sbb
xchg
push
mov
pop
loop
push
add
(bad)
push
nop
cwde
xor
xchg
clc
xchg
or
cmps
nop
inc
add
(bad)
jmp
inc
div
sbb
mov
test
jp
inc
cli
mov
test
sbb
jge
in
xchg
fcom
test
ds
inc
ret
sub
or
mov
mov
inc
add
or
repz
adc
sub
adc
dec
lods
cwde
dec
pushf
into
rcl
pop
test
jge
daa
test
clc
sub
xchg
push
add
cmp
fadd
xor
pop
sbb
mov
les
push
stos
xchg
scas
cmps
sbb
jle
push
inc
mov
adc
xchg
lock
adc
adc
push
push
xchg
(bad)
neg
shl
mov
sub
es
and
sub
mov
enter
dec
jae
jmp
(bad)
hlt
in
hlt
shl
test
ror
aam
sub
ficom
pop
add
and
ret
inc
sar
inc
add
push
adc
mov
mov
fisub
mov
out
cwde
sbb
lods
ret
pop
or
push
dec
ds
xchg
rol
cmp
pushf
jge
int
(bad)
test
not
rol
add
cmps
and
faddp
test
jp
test
(bad)
in
je
dec
loop
pop
mov
mov
sbb
inc
pop
mov
add
loope
fadd
mov
sbb
add
sub
pushf
jo
loop
and
rol
push
push
sahf
lods
xchg
hlt
push
shl
loopne
sub
push
pusha
add
sbb
adc
adc
jmp
adc
cwde
in
mov
xor
mov
sub
dec
call
imul
int3
outs
or
aaa
cdq
dec
es
adc
xor
mov
ss
or
je
add
cmps
mov
out
adc
(bad)
jmp
mov
and
movs
mov
cdq
add
jnp
jmp
jecxz
popa
xchg
mov
frstor
fdiv
sub
outs
movs
sbb
int3
push
push
dec
and
ficom
jp
enter
outs
push
call
or
test
mov
push
jnp
or
sub
cmp
mov
or
cmp
sbb
sub
jmp
push
outs
loope
push
push
add
mov
xor
hlt
test
(bad)
mov
xor
imul
mov
leave
xchg
test
sub
aam
and
movs
add
fucomip
lock
pop
add
int3
loope
cmps
arpl
add
clc
movs
mov
ficom
dec
push
add
cmp
and
dec
mov
add
cwde
add
or
inc
mov
inc
pop
les
das
push
or
push
loop
push
retf
in
mov
leave
in
icebp
iret
push
pop
cmps
cmc
or
in
inc
dec
push
movs
add
ins
int3
dec
jle
test
xor
adc
and
sahf
fisttp
popf
ds
call
lock
mov
je
jl
in
add
in
mov
xchg
sbb
or
cmp
cs
dec
inc
dec
jne
sub
hlt
and
jmp
and
hlt
in
cmp
sub
pop
mov
fadd
or
dec
in
mov
and
rcl
jmp
fmul
ds
or
mov
add
push
or
scas
sbb
cmp
or
pop
(bad)
cwde
in
dec
or
dec
add
ja
sbb
push
aam
dec
popa
sbb
xor
dec
pop
jbe
cmp
push
adc
retf
inc
pop
into
jae
adc
xor
pop
add
fld
inc
or
adc
xor
es
sti
xor
sbb
adc
push
inc
loope
mov
xor
xchg
or
xchg
sub
lods
cmp
fwait
clc
cmp
or
call
dec
or
push
lods
fdivr
inc
sbb
dec
fisttp
push
jb
push
adc
inc
and
inc
shr
or
jmp
adc
or
and
mov
das
or
lods
test
rcl
jo
cmc
cli
inc
mov
cwde
or
dec
pop
sub
fstp
cmp
pushf
into
pop
rol
xchg
xchg
pusha
and
imul
adc
and
xchg
in
mov
jmp
add
test
or
push
xor
jb
out
or
push
inc
mov
inc
jl
fs
adc
add
inc
jmp
(bad)
push
pop
add
outs
(bad)
cs
and
mov
popf
and
mov
push
out
retf
sar
jmp
cmp
pop
mov
call
pop
rcr
clc
adc
or
loope
lods
out
push
jecxz
mov
daa
jmp
mov
xor
aaa
and
add
call
pop
(bad)
xchg
cmp
test
(bad)
cmp
xor
in
call
pop
adc
call
das
inc
aam
pop
pop
pop
push
retf
ss
out
cmp
add
xchg
lds
or
in
mov
xor
or
inc
mov
inc
ficomp
cmp
lahf
adc
mov
or
add
ror
push
mov
imul
dec
cli
push
mov
in
xchg
inc
movs
aas
adc
or
xor
jnp
mul
mov
inc
call
push
xchg
das
mov
cmc
outs
sbb
or
enter
adc
push
jmp
enter
outs
inc
jns
or
fcmovne
movs
jb
adc
adc
ret
cwde
inc
jae
sbb
sub
cmp
inc
xor
pop
mov
dec
fnstcw
loop
xchg
pop
dec
sub
inc
popf
ins
adc
dec
sar
enter
xchg
xor
imul
add
dec
fdivr
dec
sbb
push
xor
retf
les
pop
dec
fcom
inc
cmp
sbb
push
ins
jno
and
jb
test
push
dec
add
cs
push
add
leave
push
push
inc
test
ss
cld
cmps
push
sub
shl
pop
cs
imul
or
test
sbb
loop
adc
and
in
and
jno
clc
cmp
dec
add
lea
dec
shl
dec
movs
pop
andnps
pop
xchg
adc
rcl
and
not
sbb
sbb
cmp
push
ins
fsub
inc
retf
enter
sub
cs
iret
dec
pop
pop
out
mov
es
push
mov
in
pmaxsw
rcl
enter
mov
push
mov
add
lods
out
(bad)
and
outs
push
push
mov
aam
mov
nop
rcr
xor
sbb
push
jbe
or
adc
movs
mov
push
mov
mov
adc
fld
pop
cmp
jge
mov
fucom
dec
gs
ror
in
mov
or
dec
xor
movs
outs
dec
ror
pusha
ins
loopne
shr
adc
dec
xor
(bad)
(bad)
cmp
jecxz
ja
popf
cli
xor
or
and
pop
push
or
sbb
mov
pop
mov
adc
and
jecxz
enter
call
push
xchg
and
cmp
adc
mov
xchg
call
leave
dec
adc
add
or
fcmovb
sbb
je
xor
mov
xor
arpl
jbe
(bad)
mov
jno
or
dec
inc
jl
add
shl
arpl
es
mov
jp
or
sub
mov
cmp
(bad)
or
pop
pop
add
or
mov
sbb
je
mov
inc
push
adc
ins
sub
xchg
ja
adc
cmp
push
stc
jmp
add
xchg
pop
test
mov
rol
shr
or
adc
in
add
idiv
sbb
xor
push
frstor
jo
retf
dec
enter
fadd
test
test
mov
sbb
sbb
dec
push
mov
sahf
cmp
rol
test
loope
out
in
mov
mov
repnz
or
je
and
cmc
imul
outs
dec
clc
push
xor
sub
sub
sub
inc
pop
mov
ffree
mov
push
add
jns
push
cmp
adc
fsubr
dec
fcom
cdq
xchg
mov
jg
aad
cdq
retf
or
add
push
lods
das
ret
lock
mov
xor
iret
xchg
jne
xor
dec
or
data16
mov
popa
cdq
inc
movs
sbb
jle
aam
adc
call
cmp
lahf
add
(bad)
ss
pop
xchg
leave
leave
test
mov
add
dec
mov
sub
cdq
and
add
sub
fcmovb
jo
(bad)
lods
add
adc
pop
push
mov
dec
movs
pop
push
rcr
xor
inc
dec
or
push
push
sub
or
and
cmp
adc
jno
shl
xchg
sbb
sub
je
call
ins
mov
mov
js
daa
mov
pop
shr
retf
rol
or
xchg
add
nop
lods
adc
int3
xchg
jne
dec
icebp
lods
inc
ret
into
enter
jne
or
mov
dec
inc
gs
pop
mov
or
outs
jmp
popa
inc
call
sub
mov
dec
in
sub
dec
jnp
loope
test
imul
mov
imul
push
shl
shl
(bad)
push
inc
les
std
cmp
xchg
mov
sub
enter
jbe
imul
jmp
inc
dec
movs
rdpmc
mov
test
in
and
fild
inc
and
push
loopne
js
ret
std
dec
jnp
sub
shl
jl
stos
jmp
leave
dec
add
js
jnp
pop
cmp
enter
xor
sbb
inc
cmp
mov
fisub
add
enter
jns
in
jb
aas
pop
pop
cmp
pop
popa
or
xor
push
pop
ss
ficom
pop
ror
xchg
sti
mov
xor
pop
sbb
mov
jns
(bad)
popa
movs
pusha
jae
cmc
or
xchg
retf
mov
and
push
dec
or
repz
add
fsub
std
xchg
test
xor
and
and
adc
pop
fist
addr16
cmp
cmp
ror
nop
or
push
add
adc
jecxz
mov
pop
inc
mov
stos
mov
call
xchg
in
fidivr
push
rcr
ss
cwde
inc
sub
xor
mov
mov
mov
add
sub
dec
sbb
mov
sub
mov
pop
jmp
and
add
xchg
mov
dec
cld
sub
arpl
lods
push
adc
loope
ins
or
nop
retf
pushf
or
pop
shl
add
adc
pushf
ret
(bad)
dec
push
xlat
sbb
lock
je
xor
pop
repz
xor
sub
sub
cld
xchg
(bad)
mov
cmp
loopne
js
fnstsw
sub
cmp
loop
adc
or
mov
xor
ss
xchg
adc
push
mov
in
pop
outs
in
out
add
mov
inc
pop
cmp
retf
leave
pop
repnz
xchg
mov
or
test
adc
push
adc
std
cmp
pop
and
in
lods
popa
test
inc
stos
push
and
lea
popa
shl
xchg
retf
xor
in
xor
or
pusha
add
mov
cmp
(bad)
shr
ja
fmul
adc
je
fisubr
mov
jnp
scas
ret
add
dec
mov
dec
adc
mov
fs
or
sahf
call
jne
push
and
rcr
dec
or
or
sbb
jmp
xor
pop
inc
mov
and
xchg
dec
lods
or
mov
lock
int3
or
or
adc
ror
mov
inc
mov
or
test
add
push
iret
push
rcr
xor
push
sbb
adc
sbb
dec
loopne
aam
or
jo
cwde
cs
or
fs
sar
xchg
dec
dec
add
sbb
add
dec
mov
mov
sub
and
mov
jle
dec
adc
(bad)
hlt
int
and
jae
call
pusha
adc
(bad)
(bad)
jge
arpl
aad
stos
call
xor
sub
push
add
pop
add
nop
mov
xchg
rol
test
pop
mov
jno
dec
lods
data16
or
xchg
fdiv
dec
fcmovne
mov
jo
repnz
lods
lock
dec
jp
mov
out
retf
xor
or
test
jo
daa
movs
xchg
stc
fdiv
inc
outs
sub
pop
loopne
cli
or
adc
in
lea
sub
sub
ret
mov
push
add
adc
fsubr
push
pushf
mov
pop
push
nop
cs
hlt
add
push
or
test
rcr
mov
pop
int3
cwde
fmulp
inc
sahf
jp
add
add
pmuludq
mov
pop
add
and
test
nop
stos
pop
test
pushf
fs
mov
mov
mov
(bad)
lock
movs
test
jp
mov
cmp
stos
clc
pop
stos
or
ror
leave
pop
fst
xor
ror
test
cmp
pop
pushf
push
pop
pop
add
push
inc
lahf
lea
in
loopne
sbb
cmps
jmp
fdiv
ins
mov
call
mov
fcomp
or
lds
dec
mov
test
je
push
sbb
ror
add
xchg
add
(bad)
xchg
mov
mov
xchg
sbb
and
xor
xchg
jmp
pusha
xchg
dec
aaa
jb
adc
int3
test
test
sub
je
add
add
fcom
int3
inc
cmp
or
sbb
push
imul
adc
or
in
sub
xor
out
or
mov
cmovae
hlt
ficomp
adc
jmp
sti
push
xchg
imul
fmul
mov
xor
xchg
es
xor
fs
dec
call
repz
into
enter
test
cli
and
daa
or
call
mov
aaa
loopne
es
xor
inc
add
fldln2
(bad)
dec
imul
adc
repz
and
xor
xor
lods
arpl
cmp
ret
inc
dec
das
sbb
pop
or
inc
add
inc
mov
test
cdq
scas
pop
call
add
mov
mov
xor
xor
push
mov
inc
fsub
shl
push
sar
sbb
ja
xchg
push
mov
xor
push
inc
and
mov
dec
je
lods
enter
push
loope
sub
rcl
movs
popa
add
ret
sub
sbb
in
sbb
push
push
jbe
in
shl
adc
mov
inc
cmps
jbe
push
or
inc
(bad)
sbb
sub
dec
xchg
jle
mov
je
jae
ins
adc
dec
cmp
sub
push
bnd
shr
out
rcl
add
ins
jle
lahf
mov
or
jmp
xchg
cmp
imul
sbb
test
pop
sub
dec
loop
loopne
xchg
cmp
adc
jl
sbb
push
lods
fwait
or
cmps
mov
movs
hlt
mov
add
sbb
mov
and
les
pop
cmp
lods
inc
mov
je
and
loope
dec
jbe
jo
imul
popf
or
ja
call
rcr
sub
jo
(bad)
mov
adc
adc
or
into
adc
or
inc
(bad)
mov
es
clc
dec
mov
adc
adc
in
dec
pop
aaa
mov
push
adc
sub
jge
cwde
cmp
fcom
imul
inc
pop
imul
or
test
push
je
dec
mov
aam
outs
and
pop
add
test
add
inc
stos
jmp
aam
call
sbb
mov
jmp
mov
jns
mov
aaa
add
lds
(bad)
add
nop
push
nop
ss
xchg
adc
ins
shl
add
repnz
or
and
inc
fldcw
mov
mov
sbb
inc
jb
jo
pop
loope
dec
jmp
loopne
fwait
clc
push
fdiv
xchg
xor
sub
and
or
movs
test
or
pop
imul
mov
jecxz
and
adc
pop
cmps
mov
inc
sbb
test
and
cli
stos
sub
sub
add
sbb
pop
shl
mov
sub
(bad)
in
adc
leave
ret
or
idiv
cmp
add
pop
es
fistp
adc
rol
pop
push
dec
outs
push
das
inc
and
xor
and
xchg
int3
clc
push
jns
pop
das
adc
mov
jo
sti
in
cmp
leave
push
cmps
xchg
add
in
sub
sbb
loope
jo
ss
outs
shr
ins
sti
in
and
nop
and
jl
xchg
mov
xchg
add
hlt
pop
ds
nop
ret
in
jb
fistp
or
xchg
push
mov
clc
test
pop
ret
push
lock
repz
adc
dec
das
(bad)
lods
cmp
push
jb
cmp
and
sbb
nop
adc
inc
dec
mov
test
cbw
mov
mov
xchg
push
xor
add
mov
pusha
loopne
(bad)
inc
in
dec
jns
inc
or
cmp
inc
jmp
mov
dec
jmp
adc
and
mov
inc
mov
mov
enter
ret
dec
ss
cdq
mov
mov
add
ins
ins
or
jge
movs
inc
push
in
mov
mov
add
dec
adc
jle
push
mov
add
push
jbe
imul
leave
mov
or
push
sub
idiv
mov
mov
pop
cmpxchg
jbe
call
and
sbb
dec
popa
gs
jmp
and
test
inc
pop
push
xor
adc
push
mov
adc
inc
popa
or
inc
(bad)
jmp
pop
sub
mov
pusha
inc
retf
imul
sub
stc
push
add
aad
sub
xor
fst
or
sub
cwde
or
push
aad
retf
xchg
or
(bad)
lds
jbe
or
lds
xor
dec
xor
shl
add
add
sub
adc
pop
adc
xor
adc
mov
cmp
dec
xor
je
dec
mov
mov
cmps
pusha
push
push
inc
xor
fwait
jbe
dec
push
aam
push
gs
dec
fisub
int
and
jl
or
mov
sub
mov
mov
cwde
xchg
sbb
cmps
sub
ror
and
daa
and
in
pop
adc
stos
sub
dec
push
nop
sar
(bad)
sub
jle
scas
inc
mov
and
aam
dec
stos
je
xchg
ficom
xchg
add
movs
pusha
stc
jb
adc
js
sbb
(bad)
and
xor
popa
mov
add
ret
xchg
bound
rcr
mov
stos
cmp
clc
add
cwde
add
xchg
or
push
cwde
add
call
mov
mov
xchg
les
push
and
mov
xchg
inc
xor
adc
jge
mov
xor
mov
and
xchg
inc
imul
cld
test
or
xor
stc
mov
mov
outs
movs
add
and
or
sbb
(bad)
es
xor
dec
cmp
push
xchg
dec
repz
dec
sub
xor
dec
adc
push
or
pop
mov
in
adc
loope
or
jmp
icebp
mov
add
push
add
pop
add
mov
leave
cli
pop
movs
sub
inc
sbb
inc
add
pop
push
jne
sbb
fsubr
adc
cmp
add
dec
xor
mov
mov
jno
mov
fwait
inc
and
mov
rcr
pop
xor
stos
mov
test
xchg
xchg
test
mov
rcl
inc
mov
in
adc
mov
mov
xor
xchg
xchg
out
or
adc
inc
inc
push
add
add
jge
add
jbe
and
call
and
cdq
jne
bound
xchg
(bad)
add
rol
xchg
rol
sar
sub
pop
push
test
mov
pop
movs
add
or
push
push
and
out
jne
loopne
jne
xor
inc
test
push
jns
loopne
je
sar
in
adc
adc
mov
lfs
dec
test
adc
ja
adc
push
lea
inc
mov
cmp
cmps
push
(bad)
inc
pop
jo
aaa
iret
adc
dec
cwde
push
inc
push
xlat
pop
or
jnp
xor
add
add
in
push
mov
test
mov
cli
jge
xor
mov
cmp
fcomp
and
sbb
nop
shr
add
jbe
pop
fnsave
mov
mov
gs
push
or
mov
lods
sbb
mov
xor
leave
push
retf
push
jne
rcl
ins
sbb
cmc
mov
xor
movs
addr16
inc
retf
mov
pop
mov
dec
mul
mov
mov
loope
and
sbb
or
add
pop
push
pop
or
push
xor
mov
sbb
call
lods
mov
ss
jp
mov
movs
mov
mov
jb
push
lea
and
int
cmp
nop
cmps
inc
jo
xor
int3
ror
mov
and
push
cmp
mov
(bad)
shl
inc
aas
popf
cli
mov
push
xchg
push
mov
mov
ret
rol
mov
ror
push
(bad)
in
fistp
mov
xchg
fdivr
stos
add
(bad)
push
xor
xchg
clc
pusha
pop
into
push
dec
outs
mov
pop
int3
inc
mov
cmp
into
loope
sub
xor
mov
adc
jg
jno
jge
sub
pop
add
ins
inc
fisub
fld
add
dec
cmovae
and
push
mov
lea
add
(bad)
sbb
pop
gs
push
sub
call
(bad)
ds
test
pushf
jg
ins
xchg
movs
sahf
add
imul
cmp
shl
push
mov
adc
adc
cmp
add
aaa
xor
fwait
les
or
(bad)
or
ss
mov
sub
cmps
mov
lock
push
mov
cdq
jge
movs
mov
mov
cmp
shl
push
mov
je
inc
push
out
inc
ror
pusha
add
jmp
mov
(bad)
fsub
dec
push
cwde
das
mov
and
mov
cld
push
cld
test
cdq
in
cmp
cmp
adc
jmp
sub
push
test
arpl
or
mov
mov
sub
lock
inc
inc
lea
je
fs
lods
add
push
xchg
test
das
add
and
sub
cmps
jmp
jbe
xor
inc
add
inc
mov
push
dec
mov
sub
ret
aaa
inc
jle
stos
dec
push
out
mov
add
je
(bad)
cmp
rcl
adc
push
cmp
and
outs
pop
ss
add
mov
adc
and
pop
aam
add
mov
pop
(bad)
sti
push
xor
pop
aam
loope
adc
sub
push
push
xchg
das
adc
and
inc
clc
std
or
push
jl
mov
add
(bad)
jo
or
inc
(bad)
and
das
ja
loopne
shr
loope
push
inc
mov
jnp
cmp
push
push
push
pop
and
add
push
push
ret
das
pop
push
add
dec
inc
jae
inc
jl
loope
mov
pop
shl
xchg
xchg
ins
mov
push
ss
xor
adc
xor
test
add
stos
out
ins
mov
retf
push
adc
jb
pop
push
mov
inc
shl
cmp
add
lock
cli
gs
adc
adc
jge
sbb
mov
mov
jae
xor
sbb
add
push
(bad)
mov
je
rcr
and
je
xchg
pusha
sub
add
movs
popa
and
push
ret
push
jmp
enter
retf
cld
call
sbb
cmps
fimul
mov
cmp
xor
xchg
cwde
inc
fild
iret
xchg
sub
retf
add
dec
fisttp
and
clc
push
or
lea
cmp
add
or
push
add
sbb
mov
test
pop
mov
ins
aam
push
lods
dec
cmp
test
xchg
retf
dec
dec
xor
push
inc
sub
push
out
sub
pop
sub
or
fucom
or
push
nop
mov
mov
shl
mov
cmp
cwde
add
adc
lods
lods
adc
xchg
jl
add
mov
add
addr16
jne
mov
mov
adc
or
sub
or
dec
adc
out
push
inc
dec
inc
cmc
push
ins
(bad)
je
mov
ret
adc
loope
sub
jne
mov
push
adc
or
mov
in
add
bound
cwde
push
xor
popa
(bad)
shr
stos
sti
add
jge
push
xchg
jl
or
ret
sbb
test
push
int
cli
idiv
pop
pop
add
mov
sub
mov
pop
call
in
inc
ret
pop
ja
loope
ins
imul
lahf
add
lea
popf
dec
popa
ja
ins
dec
dec
ret
ja
scas
cmp
inc
ret
lods
and
cmp
mov
ret
pop
mov
or
imul
push
and
inc
ss
dec
push
pop
imul
fldenv
sbb
mov
add
lods
and
enter
push
jno
retf
fadd
cmp
ret
sbb
mov
lar
lock
icebp
cmps
xor
and
mov
je
pusha
mov
mov
adc
mov
or
cmp
std
pusha
stos
fwait
jne
rol
or
and
cwde
adc
and
mov
cmps
push
and
pop
adc
fadd
mov
enter
rol
loopne
and
add
jne
in
cmp
jne
pusha
(bad)
retf
push
scas
pop
push
fs
lods
arpl
push
push
adc
mov
pop
or
jno
or
aam
loopne
pop
pop
push
popa
lahf
push
loopne
mov
lea
rcr
push
xchg
popa
in
sbb
add
or
add
in
add
xchg
hlt
xchg
imul
inc
or
cwde
popa
cwde
push
cli
sbb
sbb
cmc
or
icebp
arpl
popa
cwde
mov
xchg
adc
mov
or
hlt
ja
fdivr
or
std
xchg
cmps
inc
ror
movs
das
pushf
retf
shl
xchg
movs
cs
les
xchg
xor
mov
pop
inc
cmp
jbe
jbe
fisubr
das
adc
addr16
bound
dec
js
mov
xchg
fs
dec
xor
test
not
jmp
xchg
add
sub
ss
sar
pop
(bad)
scas
popa
in
or
jae
jo
mov
adc
add
pop
inc
outs
inc
adc
xchg
mov
retf
in
xor
daa
cmp
pop
shr
mov
in
xor
mov
aaa
call
sbb
and
in
or
and
lds
mov
and
push
arpl
dec
loope
(bad)
mov
cmp
mov
add
inc
add
jae
ror
mov
adc
ins
mov
mov
or
rcr
cmps
sub
sbb
xor
imul
or
cs
and
clc
enterw
movzx
pop
inc
js
mov
or
ja
mov
enter
(bad)
cwde
xchg
jg
cmp
xor
pop
fistp
mov
mov
adc
pop
add
adc
dec
(bad)
nop
mov
sub
push
sti
(bad)
sub
mov
(bad)
call
push
mov
and
js
or
sub
dec
repz
add
enter
pop
ret
sbb
cmp
sub
sbb
repnz
cmp
(bad)
sbb
mov
xchg
js
xor
xchg
or
push
dec
jb
xchg
cld
dec
nop
jne
add
inc
lea
cmp
push
fld
clc
inc
sbb
or
dec
dec
push
adc
push
pop
add
test
push
xor
mov
pop
ret
lea
ret
sub
addr16
jns
adc
jns
sbb
shl
(bad)
mov
pop
daa
mov
lahf
dec
fadd
bound
hlt
mov
sub
adc
int
adc
xchg
mov
fldcw
lods
fs
cli
inc
sbb
and
and
gs
push
jmp
mov
add
adc
mov
pop
fst
or
sub
inc
rcr
and
inc
movd
pop
add
aas
test
pusha
movs
sub
and
rcl
pop
jg
or
adc
jo
dec
and
push
mov
ss
ins
lea
rcl
or
adc
pop
(bad)
mov
and
push
or
je
jno
loopne
sbb
add
inc
repnz
add
xor
xchg
shl
ret
jg
shl
mov
les
ret
adc
add
adc
fmul
add
add
adc
jne
and
push
mov
push
cmc
or
adc
mov
jo
xor
les
out
(bad)
push
mov
shl
and
and
push
sub
mov
add
es
mov
rcl
sub
test
add
push
push
lods
es
loope
dec
shr
dec
add
and
fs
sub
sahf
arpl
dec
lock
adc
popf
adc
xchg
loopne
movs
sbb
mov
push
test
pop
xchg
sub
std
nop
inc
ins
inc
sbb
or
xchg
mov
push
cli
xchg
pusha
sar
or
push
test
pop
test
outs
adc
inc
inc
dec
popf
cdq
rcl
sub
in
pusha
rcr
add
test
cmps
or
pop
loop
mov
and
push
and
push
test
mov
xchg
adc
jae
and
push
lea
inc
cmp
adc
jmp
mov
and
retf
sub
shl
(bad)
jne
fadd
adc
sbb
and
or
fstp
mov
adc
push
arpl
push
cmp
mov
xchg
adc
movs
test
shr
xchg
(bad)
popa
mov
movs
sbb
add
movs
pop
xchg
ror
add
inc
mov
sbb
sbb
aam
(bad)
mov
dec
adc
and
shl
pusha
dec
mov
loop
or
xchg
inc
scas
jl
and
dec
cli
jbe
shl
je
jecxz
retf
aam
inc
push
pop
inc
movs
test
les
inc
adc
xchg
cmp
mov
sar
mov
dec
sub
push
xchg
xchg
add
mov
xchg
popa
pop
rol
outs
adc
js
jl
ss
out
in
sbb
mov
cmp
leave
sti
cld
mov
or
or
and
je
or
dec
in
ret
inc
inc
mov
ins
sar
and
add
adc
out
mov
movzx
xchg
xchg
dec
inc
mov
sbb
mov
pusha
clc
xchg
lea
femms
xor
mov
mov
mov
aad
or
adc
add
je
sub
pop
mov
add
fiadd
bnd
ret
push
or
jmp
add
jnp
pop
sub
pop
push
imul
add
test
adc
les
cmp
push
sbb
lods
test
or
pop
(bad)
fldcw
add
cld
pop
cdq
mov
and
jmp
into
adc
mov
or
adc
imul
cdq
add
call
push
imul
repnz
jo
rcr
dec
test
jle
and
imul
mov
push
cmp
sbb
(bad)
mov
in
outs
add
jl
pop
push
lahf
xor
pop
and
gs
or
(bad)
sub
adc
add
sbb
addr16
ficom
cmp
inc
cmp
lock
or
ja
or
dec
ins
adc
or
adc
xchg
and
dec
mov
imul
sub
call
fcom
jo
and
pop
or
mov
dec
mov
inc
jge
nop
ret
jb
test
or
mov
cmp
or
cli
mov
pop
push
call
push
iret
mov
outs
mov
adc
cmp
popf
jl
scas
jg
jne
pop
or
rol
js
mov
push
ret
sub
push
pop
pop
hlt
mov
push
daa
or
out
xchg
adc
or
push
xchg
or
add
mov
mov
fidiv
dec
pushf
arpl
mov
inc
cmp
mov
fwait
add
rol
jge
aam
mov
mov
rcr
enter
push
and
mov
and
add
xchg
lds
sbb
sbb
cmp
adc
js
je
cmc
dec
fimul
out
and
rcl
lahf
jns
and
ja
in
dec
ror
or
add
cwde
iret
and
in
fdivrp
sub
and
jle
loopne
cmps
cli
(bad)
nop
into
xor
jbe
cdq
std
mov
push
mov
mov
xchg
inc
lds
leave
and
jmp
add
sub
shl
clc
inc
push
or
pop
pop
nop
in
cs
cmps
(bad)
loope
loopne
ret
in
mov
mov
or
jmp
int
repz
test
icebp
jo
movs
or
or
adc
(bad)
ins
je
push
mov
pop
sub
or
mov
mov
imul
fild
push
inc
adc
les
cmp
adc
sub
sbb
lahf
das
lods
les
enter
and
push
lods
les
ficomp
xchg
mov
mov
add
dec
jl
cwde
test
cmp
xor
(bad)
pop
(bad)
aam
mov
prefetcht1
dec
adc
add
push
sbb
jmp
inc
jp
push
push
push
test
xor
mov
dec
sbb
mov
inc
add
mov
es
xor
ja
mov
(bad)
test
adc
mov
mov
inc
pop
pushf
add
push
pop
adc
movs
adc
in
adc
and
ins
in
xchg
adc
aam
xor
adc
mov
ds
mov
aas
test
dec
sbb
or
movs
cmps
daa
mov
mov
jmp
mov
lods
std
mov
sbb
adc
daa
loope
pop
mov
leave
and
push
sbb
cdq
cmp
mov
jge
fwait
cmp
mov
icebp
daa
mov
mov
add
sbb
mov
or
jmp
jno
cwde
ss
adc
pop
adc
jne
jmp
and
add
xchg
push
dec
add
mov
cmp
add
int
dec
xor
out
mov
cmps
mov
sti
pop
mov
sbb
lock
push
test
jne
shr
adc
push
xor
mov
push
push
mov
push
ret
push
test
aaa
icebp
movs
dec
adc
fstp
adc
jp
xor
es
mov
and
mov
or
enter
push
xor
add
sub
and
imul
in
outs
fwait
cwde
adc
and
push
aaa
add
rcr
sub
adc
cmps
scas
or
les
xlat
sub
inc
add
in
call
cmp
rcr
stos
sbb
or
and
aad
iret
add
push
pop
mov
stos
popa
inc
add
push
jns
jge
ror
dec
pop
inc
jo
xor
cmps
cmp
xchg
and
movs
add
push
loope
or
dec
cwde
int3
xor
jae
jecxz
or
jne
inc
test
push
or
adc
and
or
push
imul
jg
or
add
(bad)
push
and
adc
and
daa
lea
int
xchg
fcom
add
push
and
int
push
or
pop
scas
ror
add
test
in
jge
test
fld
or
das
inc
mov
pop
mov
mov
mov
(bad)
popa
pop
cmc
inc
xor
xor
ins
enter
mov
pushf
push
or
sub
jae
adc
adc
sar
push
adc
enter
and
push
add
movs
fbld
sbb
js
or
pop
pop
push
add
sub
sub
add
int3
int3
add
sub
les
cwde
or
mov
push
es
sbb
jbe
fcmovbe
dec
inc
test
aad
sub
call
fild
mov
outs
cmovne
aaa
mov
enter
or
or
mov
or
xor
adc
jne
pushf
cmovno
xor
daa
and
add
test
adc
jae
cmp
xor
mov
nop
nop
lock
adc
jl
or
and
adc
and
aaa
xor
mov
jle
lods
jl
push
test
inc
or
jo
movs
adc
cmps
mov
inc
bound
pop
mov
lea
nop
jne
push
add
push
push
mov
cmps
lods
inc
add
ret
and
pusha
pop
sahf
sub
adc
or
pushf
rcr
jecxz
pop
pusha
jecxz
js
or
sbb
adc
movs
mov
mov
mov
mov
jl
jge
out
cmps
scas
adc
sbb
pop
mov
jg
xor
mov
popf
sbb
adc
dec
rcl
ror
ret
push
sub
mov
or
push
cs
sub
test
je
mov
push
movs
sbb
ins
xor
movs
shl
mov
and
ret
and
pop
push
and
es
outs
inc
fs
cld
xchg
mov
adc
push
adc
push
xchg
test
ja
xor
add
push
adc
outs
mov
mov
xchg
sub
hlt
add
add
cwde
xor
(bad)
pop
mov
les
dec
mov
xor
inc
cmp
test
mov
xchg
aam
inc
inc
out
dec
icebp
adc
or
das
dec
test
sub
je
and
clc
dec
mov
jne
mov
sub
ret
data16
push
inc
add
sbb
cs
fmul
cmp
loope
add
xor
and
jp
inc
and
popa
pusha
xchg
fild
fisubr
cdq
fwait
cmp
popa
fwait
dec
jmp
adc
pop
call
mov
adc
push
enter
fnstenv
jmp
jmp
ret
jmp
mov
pusha
loope
mov
ss
faddp
adc
pop
sub
adc
mov
sbb
lods
inc
inc
add
pop
sbb
push
xchg
dec
nop
xor
es
cmp
ins
sub
xchg
sub
ins
test
add
inc
xchg
adc
or
push
add
push
(bad)
push
popa
adc
inc
sar
and
push
cld
movs
lea
or
pop
mov
mov
or
push
sub
or
outs
inc
call
cmp
inc
push
adc
push
sub
add
fiadd
and
mov
adc
popf
add
pop
mov
lods
xchg
movs
sahf
(bad)
mov
aam
test
xchg
sub
sbb
mov
test
je
cmovo
xor
xchg
pop
sub
or
inc
or
mov
xor
stc
mov
dec
inc
push
dec
and
dec
mov
ja
add
pop
mov
dec
jno
dec
or
cwde
pop
iret
add
sbb
lds
loopne
call
movs
retf
and
popf
add
inc
rol
push
out
or
fwait
repz
jmp
and
xor
je
ins
mov
inc
inc
pop
mov
xor
mov
mov
jbe
aad
jno
lea
or
test
and
mov
dec
cmp
je
cmp
push
and
sbb
ror
icebp
cwde
mov
or
adc
ds
adc
fadd
cmp
adc
add
adc
or
and
rol
mov
mov
rcl
add
ja
ss
xchg
sbb
cwde
xor
add
mov
lods
push
bound
aad
sbb
das
mov
adc
js
sbb
es
rcl
or
add
add
jl
adc
inc
call
cwde
dec
shl
mov
test
mov
jae
sub
push
pop
push
shl
imul
push
mov
ror
rcr
test
les
sub
push
fistp
sbb
pusha
adc
dec
in
aaa
xchg
pop
sbb
mov
inc
ds
adc
pop
pop
out
popa
push
rcr
cmp
aas
adc
mov
(bad)
xor
add
dec
or
in
and
call
or
in
fsubr
mov
dec
or
xor
or
inc
js
pop
fisub
into
pop
and
dec
pcmpgtw
fld1
rol
or
sbb
lea
and
or
pushf
nop
jne
inc
nop
add
dec
jl
cld
push
stos
mov
push
xor
sub
(bad)
cmc
mov
adc
add
inc
jp
je
dec
adc
add
outs
xchg
popa
jne
push
loop
mov
mov
xor
sbb
mov
dec
cmp
mov
pop
lods
shl
cmps
mov
sbb
sar
mov
(bad)
xlat
sub
sbb
dec
pop
dec
or
cs
mov
mov
ins
mov
add
dec
es
xor
xchg
mov
lea
sbb
arpl
je
dec
xor
adc
dec
popf
cmp
inc
mov
xchg
bound
xchg
imul
dec
mov
jp
mov
rcr
pop
add
(bad)
adc
mov
je
sbb
or
in
jmp
xor
test
inc
and
mov
pop
pop
sbb
xchg
dec
outs
nop
sbb
sbb
lods
retf
out
in
adc
popa
test
adc
(bad)
je
sbb
add
ror
mov
(bad)
mov
outs
ror
subps
push
(bad)
leave
push
popa
inc
js
adc
hlt
mov
aam
shl
or
leave
and
mov
test
in
jmp
(bad)
(bad)
pop
and
sub
test
imul
jge
push
sbb
sbb
xor
xor
jge
pusha
adc
ficomp
mov
js
add
mov
adc
rcl
xchg
arpl
and
loopne
cmps
ret
push
push
mov
dec
out
jecxz
adc
push
imul
sbb
mov
jmp
sub
sbb
adc
add
adc
imul
mov
pusha
adc
movs
test
add
test
add
cmp
push
bound
je
mov
push
pop
sub
adc
or
or
mov
or
imul
add
ds
jne
push
or
adc
lea
es
push
inc
push
mov
sar
push
or
sub
in
adc
lea
clc
inc
lea
push
inc
shr
mov
bound
call
fcomp
push
inc
push
add
rcr
js
add
adc
push
add
cmps
and
dec
clc
add
jbe
call
adc
pusha
lods
dec
shl
or
push
inc
movs
add
sti
push
push
mov
mov
adc
sbb
mov
push
rol
out
aad
add
inc
push
add
cmps
push
addr16
mov
sbb
sahf
stc
xchg
add
test
xchg
popa
xchg
adc
xchg
or
outs
xor
scas
or
push
push
mov
pusha
add
mov
jne
push
or
or
loopne
iret
xor
rcr
nop
xchg
adc
imul
adc
xchg
daa
fsqrt
sub
jbe
inc
inc
xor
or
xchg
lea
push
or
enter
fs
push
push
popa
dec
or
mov
ret
arpl
(bad)
fs
mov
or
mov
push
add
lock
cwde
dec
inc
mov
mov
mov
push
sub
(bad)
ret
cmps
in
adc
xchg
call
pushf
(bad)
mov
and
cmp
rcl
sub
sub
inc
xor
lods
push
or
push
xor
daa
xchg
xor
mov
xchg
mov
push
mov
mov
ja
movs
xchg
adc
mov
xchg
or
push
call
out
jge
fsubp
sbb
mov
cmp
repnz
xor
add
mov
out
xchg
test
call
(bad)
and
cmps
pop
mov
popa
cdq
mov
lods
je
add
push
dec
add
jae
stos
rol
je
add
call
and
push
dec
nop
les
arpl
stos
shl
adc
mov
bound
adc
fdivr
and
sbb
or
dec
jns
xor
mov
adc
inc
fcom
push
or
sbb
lods
inc
dec
sbb
outs
mov
aas
jnp
push
ja
mov
mov
push
out
inc
mov
cwde
add
add
cmc
dec
(bad)
mov
popa
xor
xchg
push
jae
stos
retf
mov
jnp
int
xor
inc
lods
pushf
cwde
mov
pusha
sbb
cmps
int3
inc
sub
inc
cmp
push
or
dec
and
aad
pop
add
outs
mov
dec
lods
pop
jnp
pop
pop
mov
addr16
xchg
enter
lods
add
inc
add
pop
mov
lods
pop
xor
pop
dec
and
sahf
cmp
add
xor
lock
pop
fdivr
fst
cwd
inc
pop
dec
mov
jno
sbb
pop
sub
jns
pop
(bad)
adc
xor
mov
scas
add
sub
xor
sbb
std
add
pop
ss
and
stos
lock
test
jp
enter
in
out
loop
cmp
test
rcr
das
xor
sbb
shr
cwde
adc
out
inc
cdq
lea
outs
add
push
push
iret
jmp
sub
dec
ins
scas
push
adc
daa
sbb
lods
in
fs
je
(bad)
push
mov
xchg
inc
ja
push
push
ja
test
xor
add
cs
enter
inc
dec
cmp
movs
or
and
push
cmps
inc
or
rol
and
repz
and
or
in
cmc
pop
imul
test
xchg
add
outs
add
mov
bound
inc
add
pop
add
jne
xchg
adc
mov
test
dec
mov
mul
call
daa
adc
daa
or
inc
add
fwait
mov
cmp
cwde
int3
jecxz
icebp
lea
sub
dec
popa
pop
sbb
inc
adc
add
mov
inc
jle
pop
add
xchg
dec
pusha
or
add
xchg
or
mov
or
scas
sar
xor
lds
mov
or
dec
addr16
inc
jo
mov
inc
retf
push
call
fs
mov
pop
leave
call
inc
push
adc
jp
jg
xor
in
adc
mov
xchg
inc
and
pop
dec
or
sbb
adc
nop
test
mov
loope
inc
ds
jo
or
outs
add
push
sbb
sub
jae
lods
push
xor
jae
lds
xor
or
retf
xor
and
add
fld
push
xor
nop
movs
sub
mov
sub
adc
and
cmp
pop
loopne
mov
sub
rol
pusha
lahf
lods
xchg
gs
imul
das
bound
or
or
lds
ss
and
sbb
add
and
jge
jge
add
pop
adc
repz
add
into
cmp
mov
addr16
mov
add
mov
jns
jnp
jle
enter
fdiv
out
xchg
cmp
sbb
mov
xchg
inc
push
add
int3
mov
nop
mov
xor
xor
daa
dec
inc
je
add
jo
dec
and
test
dec
sub
ror
arpl
jb
jg
cmc
xchg
ds
out
fisubr
clc
add
das
daa
adc
xor
jo
and
sbb
inc
inc
(bad)
bound
test
ret
mov
xchg
leave
push
xor
(bad)
(bad)
xor
es
loop
fdiv
inc
mov
adc
sti
mov
adc
xor
lea
mov
xchg
jo
lea
popf
clc
call
sbb
fwait
inc
aam
dec
dec
cld
sub
and
pop
push
adc
sub
clc
mov
sbb
dec
pusha
jmp
dec
lea
inc
inc
adc
push
imul
xlat
rcl
push
or
xor
or
retf
dec
push
mov
pop
mov
pop
add
cs
dec
test
push
icebp
xchg
mov
mov
nop
inc
inc
mov
shl
scas
xor
xchg
push
pop
xchg
xchg
nop
fs
aam
inc
hlt
movs
gs
sub
cmp
lods
add
mov
mov
and
dec
sub
add
shr
mov
mov
lods
mov
inc
cwde
shl
dec
retf
xchg
pop
xor
push
inc
mov
repnz
dec
repz
gs
xor
movs
out
popa
inc
push
(bad)
dec
or
mov
jne
cdq
adc
fld
mov
push
xchg
pop
hlt
adc
daa
inc
mov
sub
retf
cs
les
push
pop
sbb
sub
and
call
pop
or
cmp
test
sub
or
retf
imul
push
sbb
jno
fldcw
inc
and
mov
xor
test
sbb
add
sbb
scas
ret
sbb
mov
daa
(bad)
and
jae
outs
push
and
das
inc
or
and
les
inc
dec
and
or
scas
pop
adc
ja
jl
sbb
je
inc
test
xchg
in
and
dec
mov
xchg
cmp
jo
pop
lock
mov
sbb
adc
mov
aaa
adc
inc
or
inc
call
adc
cmp
cmovno
inc
push
mov
and
or
inc
loop
test
inc
or
adc
mov
sbb
jle
push
rol
add
sub
pop
xchg
xor
imul
je
shl
mov
mov
xor
sbb
sub
jmp
daa
inc
jno
and
sbb
mov
or
fnstenv
jp
gs
jmp
fisttp
pop
push
retf
jbe
ins
sbb
adc
or
mov
or
pop
push
rcr
pop
dec
xchg
jmp
jg
sahf
into
arpl
pop
cmp
adc
push
arpl
pushf
cmp
dec
push
push
sbb
shl
addr16
arpl
push
pop
ret
cmp
mov
imul
cmp
mov
push
mov
mov
xchg
push
pop
xor
cmp
fld
mov
cwde
jg
sbb
fadd
int3
xchg
adc
mov
mov
ins
cmp
pop
aaa
fimul
mov
sub
push
pop
dec
nop
test
jae
pop
pop
dec
mov
(bad)
pop
rcr
jne
cli
add
jns
loope
retf
or
sub
out
sbb
popa
pop
adc
jle
push
cmp
push
aad
pushf
mov
dec
and
inc
shl
div
dec
cmp
jno
or
inc
das
in
fsub
jns
out
xor
test
mov
jne
xchg
jmp
iret
push
cmp
push
jmp
(bad)
stos
loop
call
or
scas
and
pop
and
or
rol
mov
and
cmp
or
xor
jmp
mov
sbb
cs
add
sub
and
xor
popa
int
ficomp
add
dec
xchg
or
and
jnp
inc
jnp
cli
adc
pop
push
data16
(bad)
or
out
mov
fiadd
jmp
mov
test
dec
push
add
stc
xor
stos
fiadd
lock
pop
icebp
pop
mov
mov
(bad)
or
leave
jl
sbb
rcl
inc
hlt
clc
outs
popa
adc
adc
push
cmp
ror
pop
outs
cs
sub
test
xor
popa
fdivr
push
add
adc
daa
add
lds
or
push
fwait
cmp
add
loop
clc
push
into
or
push
enter
inc
push
mov
pop
ss
push
sbb
pop
push
and
push
adc
loope
mov
push
enter
add
icebp
jne
loopne
add
jmp
dec
xchg
xchg
movs
inc
inc
mov
mov
add
add
test
push
push
xchg
inc
xchg
inc
or
leave
or
dec
sbb
inc
std
into
jbe
and
add
pop
xchg
daa
jp
aam
sbb
cmps
pop
ja
xchg
pop
scas
xor
aas
test
lock
jbe
in
push
jne
and
enter
or
test
push
inc
call
inc
test
shr
mov
xchg
push
push
test
sbb
pop
adc
dec
dec
or
jmp
sbb
pop
mov
and
and
jae
hlt
or
xchg
test
arpl
sbb
add
adc
test
adc
jno
xchg
mov
out
inc
pop
xchg
add
loopne
jp
mov
js
inc
and
sbb
or
daa
inc
sbb
lock
mov
(bad)
push
cmp
cmp
aas
xor
or
out
cmp
sbb
mov
jg
mov
mov
mov
and
and
and
loop
je
cmp
jne
data16
fild
add
jmp
and
mov
sbb
sub
pop
rcl
xor
push
adc
xchg
neg
pop
data16
clc
sub
inc
je
push
jmp
ret
les
dec
sbb
pop
mov
mov
std
push
adc
push
or
stc
std
hlt
inc
fnstcw
pop
add
sub
out
xor
push
or
or
cmps
inc
xchg
retf
adc
mov
gs
call
je
call
mov
mov
jne
inc
cmp
inc
arpl
pop
and
mov
adc
or
push
mov
jp
sbb
stos
xor
ficom
rcl
stos
test
fmul
ficom
dec
les
in
cmps
fadd
fst
sub
test
inc
sub
sbb
into
xor
inc
dec
add
nop
inc
mov
mov
mov
xchg
imul
inc
add
pop
ja
iret
mov
dec
idiv
jo
in
in
stc
add
mov
xchg
popa
inc
push
iret
xor
scas
ret
sbb
mov
sbb
or
or
jmp
or
and
iret
pop
hlt
add
out
mov
addr16
inc
sub
dec
sti
adc
dec
aam
out
adc
mov
mov
fisubr
cdq
adc
lods
xchg
loope
push
mov
or
mov
stos
popf
call
aas
dec
or
and
jecxz
cmp
or
mov
jge
(bad)
xchg
or
mov
fnstsw
sbb
sub
or
xchg
inc
dec
jmp
add
sub
or
gs
mov
fild
jp
push
nop
mov
sbb
or
test
add
popf
out
push
pop
jmp
push
sub
and
jae
pusha
mov
cmp
add
add
pop
xchg
jo
call
add
and
sub
dec
adc
and
test
fwait
cmp
iret
add
mov
fs
neg
cmps
pop
cs
adc
or
mov
push
push
push
push
inc
add
mov
inc
push
cld
(bad)
inc
adc
or
loop
add
arpl
je
rol
loopne
xlat
cmp
sub
and
inc
sbb
js
inc
dec
fcomip
fdivrp
mov
push
cmp
movups
mov
shl
aas
add
xor
sub
push
jmp
inc
ins
or
inc
and
or
test
jno
sbb
popa
add
add
cwde
xor
adc
or
xor
mov
cmp
repz
cmps
cmc
or
test
lods
add
ins
or
or
leave
xchg
outs
pop
dec
rol
lock
and
inc
inc
mov
inc
jmp
out
fimul
add
popf
fwait
and
sub
push
pop
xchg
jl
nop
inc
arpl
bnd
enter
push
shl
(bad)
add
xor
sbb
sahf
dec
mov
mov
push
and
xor
inc
jecxz
sbb
xor
mov
hlt
jb
lods
xchg
movs
stc
push
jg
sub
xchg
dec
sbb
es
mov
ins
mov
test
mov
div
pop
test
ret
lock
add
push
cmp
mov
repnz
aad
mov
adc
les
les
add
or
sub
adc
or
pop
outs
add
add
dec
sbb
(bad)
or
imul
and
pop
push
xor
lea
pop
sub
pop
inc
xchg
and
dec
mov
rol
jo
(bad)
jno
cmp
test
call
in
mov
or
sub
sub
cmp
jno
and
lea
cmps
cmp
sub
sub
jo
xchg
movs
push
jo
mov
adc
nop
or
stc
ss
dec
adc
jb
dec
dec
mov
test
push
mov
jge
loope
je
mov
dec
add
jmp
xchg
ror
mov
aas
mov
std
push
xchg
sbb
xor
push
xor
cmp
out
sub
or
cmp
lds
shr
fist
imul
inc
sub
int3
and
cmp
bound
loop
xor
inc
add
jnp
or
(bad)
xor
popa
cmps
es
sahf
pop
sub
xor
and
jb
push
jp
add
xor
mov
aam
mov
sub
push
dec
popf
push
lods
retf
les
xor
sub
push
pop
inc
mov
mov
adc
je
xor
test
jne
(bad)
or
inc
and
les
shl
out
sub
or
xchg
mov
jbe
or
dec
cs
cmp
mov
mov
push
aas
in
cmps
fucomip
push
sub
adc
icebp
fdivr
pop
movs
sub
sbb
(bad)
call
fstp
iret
mov
pop
add
add
fwait
jecxz
das
dec
pop
fcomi
push
xchg
push
pop
hlt
push
cs
or
pop
pop
xchg
(bad)
xchg
imul
lock
lea
inc
or
ds
add
sbb
xchg
push
dec
pop
and
jno
lods
cmc
pop
sar
pop
shl
hlt
push
aad
sbb
cmp
xor
dec
adc
imul
and
sbb
out
xor
xchg
mov
push
(bad)
xor
push
sbb
sbb
and
and
sub
sub
ds
mov
xor
leave
jo
mov
arpl
jo
sub
mov
push
and
jp
sub
or
sti
cld
mov
xor
paddw
imul
xchg
mov
sar
push
xlat
cwde
mov
rol
xchg
je
jmp
sbb
fwait
add
push
cmps
add
add
mov
repnz
inc
or
push
sbb
mov
imul
shl
mov
or
xor
and
pop
fwait
test
test
ins
test
sbb
pop
mov
fistp
add
or
add
inc
push
cdq
xlat
test
cdq
sar
outs
add
push
cs
call
add
push
bound
lock
cmp
aam
mov
mov
sub
call
dec
sub
cmp
add
xor
inc
jmp
pop
scas
les
xor
or
adc
sub
lods
mov
and
or
sbb
test
xor
jp
dec
repz
sbb
cmp
jmp
sub
mov
mov
fwait
xor
dec
add
movs
adc
xchg
loop
or
ret
mov
pop
add
cmp
add
adc
adc
pop
sar
adc
adc
pop
adc
mov
ret
jecxz
sar
inc
xor
cmp
dec
adc
mov
pusha
pop
mov
aaa
adc
rcl
mov
sub
test
dec
ja
xchg
in
js
arpl
jmp
cmc
mov
pop
add
push
xchg
inc
daa
cmp
movs
sbb
cmps
xor
jbe
jmp
push
or
sbb
jo
add
scas
add
cmc
cmp
or
pop
pop
out
or
and
sbb
jbe
and
les
xchg
paddw
adc
mov
inc
and
jae
jno
mov
push
jb
and
sbb
gs
xchg
jno
es
push
or
aad
push
cld
push
mov
js
jae
hlt
xchg
mov
pushf
iret
pop
add
push
lea
popa
addr16
mov
ja
popa
adc
ins
loop
mov
jp
lods
jge
mov
enter
sub
mov
inc
fcmovnbe
mov
leave
add
hlt
jmp
cmp
or
rcl
or
adc
in
or
push
push
xor
(bad)
mov
cmp
xor
xchg
sar
dec
dec
and
js
add
fcom
inc
mov
imul
adc
and
or
xor
ins
and
mov
ins
pusha
add
adc
cmc
add
cmp
cs
jns
jns
cmps
icebp
lahf
(bad)
mov
test
add
cmp
adc
sbb
cmps
int3
js
call
adc
cmps
jb
push
inc
jno
leave
add
test
mov
mov
and
xor
mov
ret
push
dec
push
push
push
pop
shl
inc
inc
aaa
or
add
les
pop
cs
dec
pusha
jg
les
mov
cmp
inc
shl
rol
and
xchg
std
mov
jp
pushf
pop
gs
call
into
mov
sub
ror
mov
inc
adc
push
mov
aad
sub
or
mov
pop
push
lea
jmp
loope
test
aas
xor
sbb
mov
mov
aas
mov
test
inc
test
add
push
ret
jecxz
mov
mov
lock
push
adc
mov
or
and
icebp
fdivr
out
xor
add
or
xchg
mov
dec
adc
sub
mov
sub
imul
mov
or
into
aam
movs
xor
pop
jle
adc
xor
cmp
rcl
test
mov
pop
or
test
dec
jno
sub
or
ficom
jae
or
or
scas
ret
shr
jg
dec
pop
sbb
add
and
sbb
mov
push
je
add
sub
or
test
and
lock
into
pop
je
mov
inc
sti
pop
inc
adc
push
push
inc
mov
push
mov
push
pop
add
dec
pop
push
aas
test
xor
enter
and
outs
mov
cmp
aad
int3
add
add
mov
xor
mov
popa
push
pop
xchg
push
sbb
mov
adc
movs
mov
enter
jno
cmp
xchg
inc
push
call
add
gs
jmp
popa
add
loopne
jo
dec
mov
mov
fst
push
and
add
or
rcr
retf
pop
fisub
aam
xchg
pop
or
jmp
imul
sub
(bad)
or
sbb
cmp
mov
ja
add
push
or
mov
ins
and
and
repz
xor
ret
loopne
in
jle
cmp
ffree
jbe
shl
xchg
mov
jmp
xchg
pop
xchg
or
loopne
push
xchg
sub
call
add
mov
mov
aam
test
add
js
add
jne
add
dec
rep
push
test
adc
cmp
das
add
fmul
add
test
test
cmp
adc
xor
stos
fsubr
mov
xor
sub
mov
lds
test
sub
cmp
or
xor
or
ds
loop
lea
mov
dec
and
push
mov
xchg
jl
stos
movs
or
xchg
inc
add
ds
stos
xchg
dec
fdivr
shl
or
mov
fnstsw
inc
sbb
mov
mov
push
sub
test
dec
ret
mov
sbb
mov
jl
xor
cmp
or
fdiv
jbe
add
jno
xor
inc
int
les
or
ins
or
add
mov
mov
je
add
and
inc
mov
push
sbb
mov
add
lea
xor
inc
std
arpl
inc
or
rol
push
rcr
and
and
and
gs
add
cmp
mov
dec
mov
cmp
mov
add
xor
sbb
sbb
outs
xchg
push
movs
test
add
mov
adc
ins
pop
lock
js
pop
movs
lods
lods
mov
sub
fist
(bad)
sbb
push
adc
sub
adc
or
add
jge
push
dec
stos
into
call
stos
xor
not
or
bound
pop
add
in
ret
pop
mov
xchg
push
out
cmp
push
or
inc
inc
mov
ja
shr
xchg
sbb
retf
mov
test
sbb
out
sbb
dec
enter
in
enter
add
xor
lea
hlt
or
fild
mov
push
mov
and
mov
pop
push
dec
xchg
mov
add
in
inc
mov
sub
retf
xchg
mov
push
sbb
mov
(bad)
pushf
lock
push
fadd
sbb
leave
adc
add
pop
xchg
idiv
or
ins
ret
fld
pop
adc
dec
test
mov
adc
test
add
imul
cmp
cs
add
rcl
test
aas
mov
(bad)
pop
add
fwait
dec
int3
cld
lea
cmp
inc
jle
rcl
aas
cli
imul
xchg
mov
inc
lea
pushf
dec
sbb
in
add
sub
or
mov
mov
lods
add
push
fst
mov
sub
rcl
sub
mov
xchg
xchg
mov
inc
clc
push
add
or
and
mov
inc
push
arpl
or
gs
push
dec
jnp
jo
and
or
rol
inc
or
pop
xor
(bad)
mov
jo
mov
inc
dec
lock
(bad)
and
mov
pusha
xor
mov
cs
retf
xchg
xor
sbb
mov
xchg
call
sbb
aas
sub
cmp
sahf
jmp
arpl
push
jb
adc
or
or
push
or
(bad)
iret
jg
add
out
inc
adc
inc
cwde
sbb
jge
mov
jnp
xchg
pop
popf
dec
jo
push
arpl
or
movs
sbb
push
mov
dec
cmc
cmp
add
or
adc
test
pop
fisttp
xchg
inc
je
jno
inc
and
(bad)
mov
mov
add
(bad)
test
cmp
push
or
xor
sbb
or
xor
jmp
inc
and
jmp
xor
push
or
js
push
(bad)
sub
pop
ins
and
adc
das
jo
sbb
xchg
add
mov
dec
add
add
sub
popa
add
(bad)
and
or
idiv
inc
push
rcl
dec
je
add
mov
call
dec
js
add
in
rcr
adc
les
jge
cwde
sbb
sub
xchg
cmp
into
test
inc
fimul
scas
ss
sub
es
xchg
dec
pop
fadd
in
pop
sub
not
push
jg
lock
dec
je
dec
ret
pop
mov
imul
mov
add
call
hlt
push
fild
in
mov
or
pusha
and
xchg
outs
inc
pop
ds
or
mov
push
les
fmul
or
pop
ret
mov
mov
mov
and
mov
aas
cmp
dec
inc
pop
push
add
mov
xlat
inc
loopne
sbb
mov
rcr
xor
adc
pop
and
sub
pop
shl
sbb
inc
add
adc
dec
test
cdq
test
inc
loop
stc
lock
cdq
push
xor
lahf
add
sar
add
icebp
ja
js
or
jne
test
inc
shl
inc
sub
mov
les
push
(bad)
xor
pushf
mov
mov
rcl
adc
ds
jl
shl
push
push
mov
adc
sub
adc
movs
xor
mov
sub
ror
mov
jmp
es
jg
xchg
pop
mov
push
and
mov
fdiv
clc
xor
sbb
xchg
mov
pop
mov
push
add
mov
add
xor
sub
push
pop
pop
inc
mov
adc
popa
inc
mov
adc
sub
bound
call
jg
pop
add
mov
cwde
cmp
movs
cmps
and
xor
dec
sub
sbb
gs
ins
ror
push
xchg
inc
and
jbe
mov
rcl
cdq
add
in
or
push
adc
and
push
pop
nop
hlt
mov
adc
xchg
loope
ss
adc
inc
das
imul
lods
les
mov
mov
inc
imul
or
add
js
aaa
xchg
js
out
xor
adc
pop
scas
fdivr
sub
pop
das
xor
sbb
inc
cdq
das
xchg
sbb
movs
add
nop
adc
(bad)
rol
xchg
(bad)
jg
shr
jno
scas
jae
add
jnp
and
push
or
cwde
pop
sbb
in
dec
dec
jge
sbb
or
push
loop
cmp
inc
and
or
mov
jmp
rcr
sbb
add
xor
cmp
pop
sti
sbb
jmp
and
loopne
ins
mov
pushf
lock
rcr
xor
test
imul
fsub
inc
rol
cmp
adc
jg
test
push
repz
cmp
jno
jo
(bad)
iret
or
and
jmp
test
push
adc
adc
inc
xchg
add
ror
scas
and
pop
mov
pusha
xor
adc
pop
es
push
add
adc
pop
and
lock
(bad)
hlt
sti
ret
add
jb
inc
xor
add
pop
call
and
aam
and
mov
imul
jecxz
popf
xchg
repz
cmp
(bad)
xchg
dec
ret
jnp
jmp
mov
cmp
aas
cmp
pop
lods
outs
mov
inc
(bad)
int3
js
les
lock
test
jge
mov
imul
push
push
ins
mov
pusha
mov
cdq
sbb
adc
test
sbb
sbb
push
inc
adc
jbe
sbb
arpl
inc
imul
adc
jmp
sti
movs
cmps
or
sbb
jp
and
mov
xor
(bad)
rcl
add
push
sub
cmp
and
das
jbe
lahf
push
hlt
pop
mov
dec
mov
int3
cmp
out
push
or
scas
(bad)
stc
mov
or
mov
jmp
movs
jmp
popa
call
and
int3
nop
add
neg
adc
pop
js
dec
mov
and
pop
lahf
sbb
iret
dec
jge
xor
and
pusha
cmp
into
xchg
cmp
cli
xchg
xchg
add
sbb
inc
int
mov
dec
nop
pusha
xor
push
xor
ins
mov
out
xor
sbb
test
rol
lea
pop
push
push
into
(bad)
push
stos
adc
aas
cmp
outs
xor
mov
pop
and
push
push
mov
push
push
mov
cmp
shr
jp
clc
mov
add
sub
dec
ja
daa
call
pusha
add
shr
iret
push
sar
retf
adc
fidiv
adc
out
aas
inc
push
pop
ror
cmp
es
repz
cmp
rol
popa
xor
fstp
stos
lods
int
scas
or
adc
fcomp
push
out
enter
xor
or
ficom
mov
push
(bad)
test
mov
jne
xor
add
ret
xchg
mov
and
push
scas
cmp
popf
out
fld
test
lock
test
mov
add
int3
imul
mov
enter
mov
mov
fsub
xchg
add
jg
pop
xor
out
xlat
daa
pop
or
lods
xchg
mov
sub
add
push
mov
in
lea
cmp
popa
or
mov
out
cmp
inc
neg
enter
lods
dec
movs
inc
push
imul
mov
je
adc
adc
mov
mov
jmp
test
xor
xchg
rcl
xchg
mov
les
xor
pop
xchg
mov
fmul
test
and
inc
inc
adc
pop
xchg
push
pop
xchg
(bad)
pop
add
mov
mov
add
js
inc
(bad)
mov
mov
add
pop
sbb
push
ror
mov
es
mov
lods
fs
lods
daa
push
iret
xchg
icebp
mov
sub
in
sub
push
jns
jne
cmps
sar
out
es
mov
mov
push
lods
push
test
movs
ins
pop
add
mov
xor
adc
xor
xchg
test
xor
xchg
shrd
leave
and
jb
adc
adc
popa
inc
pop
std
ds
xchg
mov
les
test
cmp
push
dec
ja
xor
shl
sbb
sbb
inc
dec
test
inc
mov
frstor
sub
lods
push
aaa
add
pusha
pop
add
cmp
test
cmp
fiadd
xchg
frstor
popa
hlt
(bad)
fsubr
xlat
dec
js
jecxz
sub
cmp
retf
dec
dec
enter
sar
ror
and
jno
icebp
pop
and
sub
add
loope
add
iret
mov
dec
push
jle
or
std
cmps
test
stos
movs
push
shl
inc
loopne
pop
xchg
xor
iret
adc
add
dec
in
retf
shl
inc
xchg
addr16
call
push
sub
adc
popa
mov
mov
loop
sbb
ins
icebp
or
sti
gs
nop
mov
out
lahf
shrd
mov
pop
enter
les
push
rol
push
sub
adc
adc
add
xor
pop
jp
cdq
mov
dec
cdq
loopne
or
cwde
inc
cwde
mov
test
dec
mov
les
(bad)
sbb
cmp
aas
push
xor
in
jg
lods
sub
mov
inc
rcr
adc
inc
stos
fiadd
lods
mov
dec
lea
aam
mov
rol
xchg
movs
pop
and
pop
push
pop
call
lea
jge
daa
aas
xlat
ins
rcl
enter
shl
jl
imul
(bad)
cmp
mov
adc
push
add
dec
rcl
(bad)
loopne
cmp
sub
mov
loope
(bad)
sti
pushf
push
aam
(bad)
dec
das
cmp
pop
dec
mov
retf
mov
inc
les
mov
or
add
popa
sar
rol
mov
xor
or
out
cmp
lods
ret
cmp
std
retf
shl
or
loopne
add
mov
sbb
mov
xlat
or
out
cmps
push
movs
add
(bad)
cs
or
hlt
inc
add
mov
push
inc
adc
test
ds
adc
pop
add
xchg
lahf
jne
popa
pop
push
add
ds
imul
clc
cmp
enter
or
dec
push
push
sbb
add
push
fwait
les
aaa
adc
mov
fild
cmc
movs
xchg
xor
adc
add
or
sub
test
ror
das
retf
jns
inc
and
fld
fs
xchg
cmps
es
pushf
(bad)
adc
ds
add
push
cmc
lock
fild
push
lods
mov
cmp
adc
lods
add
or
xchg
sub
inc
dec
mov
(bad)
nop
dec
stos
dec
add
in
rol
in
add
xor
in
repnz
add
or
jg
mov
or
mov
cmps
movs
nop
pop
rol
std
adc
inc
adc
sbb
lock
cmps
scas
add
arpl
push
and
fcom
push
aaa
das
aad
add
dec
movs
repz
cmp
in
sar
pop
push
jne
or
xchg
dec
aaa
cmp
push
(bad)
pop
ins
add
xchg
iret
add
mov
rcl
jno
xlat
repz
push
add
xor
cmp
xor
dec
dec
aas
mov
and
push
xchg
cli
add
xchg
inc
je
in
(bad)
sub
mov
jge
inc
icebp
jmp
sahf
shl
mov
in
mov
xchg
fmul
imul
dec
adc
xor
mov
aad
fidivr
inc
xchg
and
mov
test
and
push
mov
cdq
mov
xchg
lods
push
and
outs
push
call
adc
dec
rcl
gs
(bad)
xlat
jno
sbb
xchg
xor
sbb
sub
mov
dec
mov
and
int3
adc
cmp
add
push
dec
jae
cld
adc
mov
imul
mov
or
push
and
sti
inc
retf
dec
adc
dec
cmp
xlat
sahf
aam
addr16
ffreep
in
pop
jns
into
pop
rol
call
and
fdivr
out
xlat
and
mov
repz
pop
mov
mov
cmps
sub
xchg
mov
xor
or
pop
mov
mov
dec
mov
push
jmp
add
cmp
stos
push
es
sub
out
add
and
(bad)
repz
mov
lds
or
or
xchg
push
shl
lea
gs
pop
ret
adc
popf
inc
or
outs
and
shl
inc
jg
(bad)
jmp
in
mov
rol
push
inc
dec
leave
push
jb
add
cmp
xchg
push
in
inc
add
sbb
xor
mov
(bad)
push
test
in
out
sub
and
mov
add
and
pop
inc
mov
add
push
mov
adc
retf
add
sbb
add
xchg
jno
inc
fwait
call
adc
xor
in
push
int
mov
inc
movq
aad
inc
ja
scas
jmp
sub
pop
adc
stc
sbb
add
mov
fwait
shl
push
shl
aam
push
aam
test
mov
mov
add
inc
pcmpgtw
xlat
push
test
sub
push
cmc
xor
mov
retf
adc
sbb
dec
sub
rcr
jl
mov
mov
adc
and
test
mov
fst
pop
das
cmp
icebp
fist
and
ret
sbb
or
mov
sbb
(bad)
es
push
add
popf
stos
push
mov
cmp
mov
xchg
loope
lea
xchg
movs
movs
and
or
mov
in
movs
rcr
sbb
stos
cmp
ror
xor
pop
sub
sub
call
(bad)
xchg
sahf
or
dec
neg
dec
adc
or
ret
shl
pushf
and
mov
rol
inc
cld
jge
push
nop
in
dec
sbb
jg
(bad)
mov
jmp
or
sbb
mov
mov
jmp
mov
xor
dec
add
pusha
imul
pop
mov
(bad)
loope
mov
pop
push
or
and
call
sub
dec
jl
or
and
add
(bad)
ja
and
out
push
adc
rol
(bad)
jl
push
push
int3
xor
inc
add
ja
add
and
push
and
xor
xor
lea
idiv
adc
shl
xor
shl
pusha
jmp
jno
pop
mov
mov
mul
push
inc
aaa
add
jns
mov
sub
mov
popa
and
add
mov
loope
stc
xchg
add
or
dec
sbb
lods
dec
push
ja
popa
xchg
xor
xlat
es
daa
sbb
popa
mov
add
mov
and
push
add
jae
inc
or
daa
retf
or
(bad)
nop
push
sbb
push
(bad)
sbb
xor
ins
gs
cmps
inc
das
bound
rol
mov
push
cmps
sbb
dec
push
dec
xor
rol
dec
push
jb
adc
hlt
fs
pop
in
fcom
mov
mov
dec
cwde
or
push
xor
mov
push
mov
add
push
out
push
test
push
dec
test
or
cwde
bound
jmp
(bad)
loop
nop
test
mov
or
jge
dec
out
jmp
into
mov
mov
es
leave
and
mov
outs
jle
and
jecxz
add
jmp
jle
jg
dec
push
xlat
ret
inc
xchg
xor
cmp
adc
xor
xor
mov
mov
pop
movs
jmp
xchg
mov
lahf
push
push
mov
rcl
mov
jno
sbb
out
sub
mov
mov
push
push
push
loope
cdq
adc
sub
add
mov
sbb
cmp
or
xchg
pop
sbb
(bad)
xor
mov
movs
mov
xchg
adc
cmp
stos
push
xchg
dec
inc
inc
scas
dec
retf
xor
add
rol
sbb
rcr
pop
mov
xchg
(bad)
sub
jbe
mov
es
inc
add
inc
popf
movs
pop
imul
in
gs
mov
push
add
add
push
stos
cwde
cmps
xchg
jo
popa
sub
or
xor
popa
mov
pusha
shl
cmovs
push
loopne
sub
in
adc
test
or
mov
loopne
ror
mov
xor
loope
add
add
push
daa
test
dec
sub
leave
enter
mov
push
fwait
add
mov
adc
or
pop
mov
adc
sar
xchg
ss
sub
and
sub
mov
std
cld
mov
add
cld
mov
test
cwde
or
jl
mov
cmp
mov
retf
or
mov
xor
mov
mov
inc
and
cmps
mov
inc
jmp
sbb
dec
pop
adc
mov
or
in
mov
ror
mov
(bad)
jnp
mov
cmp
mov
or
mov
jae
inc
dec
push
mov
cmp
cs
jl
icebp
ins
jmp
ins
mov
inc
les
arpl
xchg
adc
xchg
and
inc
sbb
add
mov
js
fisubr
scas
jo
jp
(bad)
or
sbb
push
lds
cmp
adc
and
push
push
test
lock
sub
and
or
jne
inc
es
adc
mov
cdq
fidiv
xchg
xchg
daa
test
punpckhdq
sar
push
mov
or
mov
lods
jb
or
cmp
sbb
test
sbb
inc
test
or
mov
push
rcl
cmp
sub
mov
xor
shl
popf
xor
jne
je
dec
fisttp
jge
push
test
iret
dec
es
jl
add
cmp
mov
outs
dec
jecxz
in
cli
adc
jl
inc
pop
adc
dec
xchg
or
mov
or
sub
push
adc
push
sub
cmps
push
sub
adc
pop
inc
arpl
dec
mov
test
dec
rol
add
jbe
rcl
inc
jo
jae
xor
mov
and
test
mov
push
pop
call
pusha
or
mov
mov
cmp
inc
adc
xchg
xchg
cmp
jbe
xchg
cs
or
push
push
inc
nop
push
mov
loopne
mov
jle
int
dec
push
jo
inc
jne
pop
shl
int3
inc
pop
ins
add
or
or
add
cli
jge
mov
jbe
jne
jmp
rcr
mov
or
call
cmps
test
rcr
pop
push
push
test
sbb
dec
lock
in
mov
xor
sbb
pop
sub
xor
xchg
inc
xlat
nop
xchg
mov
jb
xchg
popa
jge
loopne
or
push
and
sbb
gs
add
mov
sbb
mov
mov
movs
out
sbb
xor
rol
and
pop
fwait
mov
pop
xor
push
mov
push
lods
pop
fcomp
or
ins
push
sbb
popa
sar
push
adc
in
sbb
ret
pop
sub
js
sbb
lock
or
outs
push
sbb
or
lock
mov
scas
mov
lods
fild
and
push
sar
mov
mov
imul
loopne
fdivr
aaa
sbb
push
call
in
pop
mov
dec
mov
or
add
scas
data16
mov
xchg
and
sub
mov
int3
inc
in
or
jne
cmc
jae
sub
jmp
movsx
pop
push
push
dec
cmp
mov
inc
cmp
aam
and
retf
and
in
aas
pop
or
xchg
xor
jl
cmps
and
psubd
or
mov
and
scas
jmp
add
fdiv
sbb
int3
or
dec
sbb
enter
shr
ja
dec
push
push
sbb
(bad)
fcomp
aam
push
ds
scas
fsubr
shl
and
add
iret
(bad)
and
push
sub
and
add
or
add
inc
push
aam
inc
fild
adc
or
mov
loope
or
shr
mov
inc
stos
iret
cmps
pusha
jne
mov
jmp
jmp
(bad)
in
pushf
inc
sbb
(bad)
in
cmp
mov
fs
call
jne
xor
das
fadd
xor
pop
stc
fdiv
fbld
or
mov
push
into
xor
fstp
je
xchg
sub
push
mov
adc
push
xchg
jne
inc
cmp
sub
add
movs
add
addr16
mov
div
or
js
jp
fwait
xor
fcmovu
push
movs
mul
inc
and
inc
inc
rol
push
or
cld
cld
sbb
sbb
dec
mov
push
aam
dec
aas
inc
mov
xchg
cli
push
cmp
jo
push
into
lods
das
or
and
sti
adc
sub
inc
pop
mov
loopne
mov
xchg
inc
inc
or
add
mov
stc
jl
push
and
rol
mov
push
mov
mov
push
sub
xchg
js
jne
(bad)
push
and
sub
xchg
or
push
movzx
jl
test
clc
shr
les
dec
mov
test
push
ss
dec
push
je
mov
fdivr
or
jmp
ret
out
xchg
mov
mov
xor
ret
and
ret
mov
jbe
aam
adc
push
add
xchg
shl
lods
icebp
xchg
xchg
mov
je
xchg
dec
xchg
xchg
xor
mov
xchg
inc
loop
mov
mov
inc
js
push
fs
add
popa
fcmovnb
call
jbe
xor
push
sub
popa
adc
das
aas
sbb
mov
inc
loop
add
xchg
mov
mov
or
add
lock
call
push
fdiv
pop
xor
push
out
jecxz
test
mov
pop
or
sub
mov
ror
sub
sub
fcom
push
loopne
stos
dec
xchg
or
pop
adc
enter
clc
or
jmp
pop
jecxz
dec
or
sub
xor
mov
div
add
aad
clc
sub
fwait
ss
add
movs
lods
lea
pushf
add
cdq
push
jmp
push
aad
mov
mov
iret
repz
scas
(bad)
mov
cmp
je
dec
add
cmps
cmp
ins
lahf
and
sbb
jl
sbb
pop
sti
sbb
shl
or
dec
aaa
cmp
mov
xor
cmps
lea
call
cld
daa
enter
(bad)
fbld
jb
aaa
lea
add
retf
cmc
aaa
sub
mov
sbb
mov
pushf
sub
je
mov
jecxz
mov
pop
ret
fwait
ret
mov
adc
xor
add
les
popa
je
js
adc
dec
mov
rcr
inc
add
mov
jle
das
int3
sub
and
xchg
push
test
sbb
sar
enter
jbe
sub
or
mov
adc
repz
xor
adc
je
(bad)
xor
add
or
push
and
movlps
pcmpeqw
push
and
inc
or
dec
mov
adc
inc
sub
popf
push
push
dec
(bad)
add
sbb
push
jno
shl
dec
cmp
xchg
mov
enter
je
push
push
sub
jns
push
stc
add
push
adc
mov
cmc
xor
and
pop
cmc
loopne
push
rcr
add
and
push
gs
sbb
inc
push
stc
shl
sbb
fdiv
add
jae
int
push
retf
dec
mov
jle
rol
scas
pop
add
push
inc
xor
out
adc
int
cmps
push
add
jmp
(bad)
pop
mov
gs
sub
test
dec
push
xor
in
ins
adc
and
or
aas
push
aaa
sbb
jne
push
sahf
fs
out
mov
call
call
or
cdq
add
jbe
gs
sar
xor
sub
pop
(bad)
xchg
aam
retf
and
dec
loope
pop
mov
or
arpl
call
push
mov
pop
nop
or
pop
aaa
div
sahf
push
push
rol
pop
or
aam
aam
daa
fs
add
add
adc
cmc
ror
stc
sub
imul
(bad)
(bad)
call
add
dec
pop
fcmovnbe
aas
jmp
add
shl
jl
and
and
cmps
ficom
out
add
adc
inc
push
pop
pop
push
in
(bad)
and
popf
ins
into
hlt
add
test
daa
call
inc
enter
add
popf
dec
push
push
sub
cmp
mov
sahf
add
movhps
mov
pop
and
and
add
dec
sbb
pop
mov
inc
das
cmp
mov
xchg
(bad)
adc
xor
sub
mov
add
stos
sbb
rcr
jo
mov
loop
push
mov
out
push
gs
movs
sbb
mov
dec
lods
sub
xor
sub
add
loopne
loop
or
xchg
cld
dec
lea
(bad)
enter
sbb
or
por
ficom
leave
adc
(bad)
mov
mov
adc
mov
and
and
dec
add
enter
push
repz
(bad)
pop
jbe
scas
add
or
sub
push
and
iret
adc
jle
sbb
pop
out
fcmovbe
or
mov
icebp
adc
pop
add
xchg
fwait
pop
push
mov
cmps
sbb
add
outs
or
popa
add
mov
adc
sbb
adc
cmp
mov
mov
aas
hlt
or
fmul
sbb
mov
clc
xor
xlat
or
mov
test
push
push
jbe
cmp
jmp
les
rcl
nop
push
dec
pushf
adc
out
test
sahf
enter
pop
add
mov
adc
loope
dec
add
dec
push
or
cmp
fcom
mov
repz
or
or
and
pop
dec
xor
jmp
cmp
add
push
shl
dec
or
adc
xor
sbb
ret
pop
dec
push
jns
mov
sub
inc
inc
sub
and
leave
fld
aaa
nop
and
pop
lods
mov
add
add
push
sbb
pushf
add
cmp
mov
in
push
les
inc
push
fdiv
aas
xor
sahf
cdq
es
add
dec
push
pop
data16
or
test
or
fistp
pop
fsubr
adc
ins
add
(bad)
jecxz
xchg
xor
sub
(bad)
mov
(bad)
push
imul
dec
mov
cdq
adc
lods
in
xchg
add
mov
add
push
sub
shl
or
xlat
ss
retf
xor
mov
adc
cli
movs
inc
inc
aaa
inc
dec
or
(bad)
xor
sub
xor
jmp
mov
cwde
inc
push
das
pusha
ret
inc
in
int3
adc
imul
or
or
inc
xor
scas
push
mov
test
and
imul
repz
call
sbb
xor
inc
es
je
or
add
push
mov
neg
jae
pop
mov
pop
sti
and
add
idiv
and
push
xchg
or
ja
call
push
push
test
jl
pop
sub
adc
jmp
scas
hlt
and
inc
sub
movs
sub
sub
cmp
and
xor
ss
add
xchg
mov
push
and
(bad)
test
call
inc
jnp
out
or
and
push
add
std
mov
retf
pop
sbb
mov
jmp
adc
shr
out
pop
or
hlt
in
add
inc
dec
sbb
test
jb
into
dec
mov
inc
push
ret
pop
mov
fdiv
adc
sbb
mov
or
fsub
add
push
push
xor
mov
ret
cmp
xor
clc
fwait
push
out
clc
ins
shr
addr16
inc
fwait
movs
sub
push
cld
or
pop
sub
ja
cs
mov
xor
mov
pop
xchg
or
repz
dec
or
aad
adc
imul
ret
pop
push
dec
mov
add
ret
cmc
adc
test
gs
dec
inc
mov
or
pop
sbb
sub
and
push
ja
test
je
jecxz
add
add
adc
dec
inc
pop
rcl
mov
pop
cdq
or
and
sub
or
in
add
call
sbb
adc
cmp
mov
mov
movs
or
xor
jl
jnp
(bad)
rol
add
add
jae
sbb
test
inc
retf
sub
and
fwait
jns
(bad)
fadd
jmp
inc
fst
rep
dec
(bad)
mov
dec
dec
int3
push
sbb
repz
adc
imul
test
mov
push
sahf
sbb
sahf
call
add
add
xor
mov
enter
ins
mov
sbb
mov
jp
push
adc
or
ror
push
and
fld
push
(bad)
xor
push
fisub
add
jp
pop
cmp
push
and
ds
inc
cmp
inc
lods
add
ins
sbb
test
xchg
clc
inc
add
inc
push
mov
icebp
sbb
xchg
jne
outs
mov
xchg
mov
call
or
out
add
retf
and
in
cmc
into
push
xchg
jecxz
jl
iret
add
(bad)
pop
and
call
icebp
jo
sbb
out
cmp
inc
icebp
push
pushf
in
ret
mov
sbb
test
lods
mov
cwde
dec
int
cld
cdq
fwait
push
pop
xor
(bad)
mov
mov
lods
iret
mov
add
imul
mov
inc
mov
in
mov
or
add
and
and
add
shl
fistp
add
pop
push
dec
xor
adc
mov
add
push
cmp
or
and
add
stc
dec
add
retf
int3
(bad)
lea
cmps
dec
push
mov
fst
mov
popa
mov
cmp
aam
add
mov
sbb
sub
inc
or
push
add
dec
sbb
add
add
mov
sub
ss
push
cmp
or
(bad)
lock
aas
cmp
mov
or
cmp
pop
add
imul
jb
dec
or
add
sub
rcr
and
inc
ss
sub
sbb
test
mov
xchg
cdq
add
retf
bound
push
dec
sub
xor
outs
add
(bad)
add
jge
sbb
or
cmp
sbb
push
push
enter
pop
dec
in
pop
sbb
xchg
iret
jbe
aad
sbb
sbb
mov
add
adc
push
ja
sub
inc
adc
and
std
fmul
sbb
mov
push
ins
pop
bound
inc
mov
xchg
mov
test
lahf
(bad)
ins
xchg
and
mov
and
ja
loop
rcl
mov
mov
push
shl
add
xchg
or
adc
xchg
mov
dec
call
jne
add
sbb
loope
xchg
fstp
and
and
loopne
pop
jp
pusha
inc
loopne
es
sbb
gs
xor
sbb
sbb
jmp
xor
fs
jo
mov
pop
or
cmc
jmp
fist
test
cmp
push
pop
and
stos
push
pop
xlat
sbb
fcom
push
daa
xor
inc
and
or
loopne
ret
jecxz
cli
add
pop
jne
push
repnz
aas
add
add
dec
sbb
mov
mov
test
es
(bad)
jge
inc
push
test
cmp
mov
shl
push
and
cmp
arpl
out
jecxz
mov
iret
fs
(bad)
cmp
dec
sub
add
jae
push
xchg
push
xchg
or
sbb
jmp
adc
loope
je
push
ds
dec
cwde
lea
push
add
retf
clc
sub
mov
add
push
or
js
cmps
(bad)
adc
fiadd
mov
fs
sub
push
xor
jae
and
and
test
ds
add
aas
(bad)
outs
or
rol
lock
mov
inc
push
and
lea
sbb
ret
dec
jb
pusha
sbb
je
xchg
lods
or
mov
adc
mov
cmps
push
imul
call
(bad)
add
and
mov
xor
aad
sub
in
cmp
push
xchg
jp
(bad)
lock
in
rcl
pop
stos
jae
push
retf
inc
fwait
adc
or
and
mov
xchg
cmp
mov
jne
xchg
add
test
inc
inc
add
or
push
test
ins
cmp
add
or
mov
pop
ror
arpl
pop
and
daa
adc
in
lock
and
cwde
popa
pop
mov
adc
push
xlat
pusha
pop
adc
scas
or
or
xor
xor
sti
or
int
pop
and
mov
pop
addr16
cmp
pop
in
test
scas
dec
push
stos
cwde
add
mov
movs
aaa
xor
sbb
cmps
add
movs
std
sbb
push
out
lahf
inc
and
dec
jge
xor
lea
test
dec
shr
pop
xchg
jl
(bad)
retf
sbb
and
daa
sub
add
fisttp
movs
add
and
test
mov
push
movs
inc
or
xchg
enter
jp
mov
adc
loop
aam
cmp
leave
test
fsub
retf
fdiv
add
fcmovne
jecxz
movs
inc
lock
pop
xor
fild
sub
fsub
fcom
and
adc
sbb
sbb
adc
sbb
jmp
mov
(bad)
shl
cmp
mov
hlt
push
mov
int3
cli
sub
and
mov
sbb
imul
dec
hlt
dec
sub
mov
(bad)
pop
xchg
xchg
cmp
pop
mov
xor
and
ret
pop
xor
sbb
fisttp
xor
xor
scas
ret
add
mov
xor
xchg
dec
pusha
adc
and
out
xor
jne
dec
inc
mov
push
movs
movs
ins
sub
jl
dec
movs
aam
shr
ret
sub
imul
push
test
movs
and
imul
rol
adc
mov
mov
clc
inc
and
outs
adc
lods
sbb
fst
dec
push
xor
dec
or
and
sbb
scas
xchg
pop
cmps
sbb
add
mov
mov
jb
in
add
js
inc
push
dec
bnd
fld
add
push
es
xchg
aam
and
pop
nop
sub
and
scas
fcomp
jbe
push
jbe
inc
data16
sub
sbb
push
(bad)
popf
cmp
xchg
ins
aaa
add
add
bound
and
fcom
mov
add
fcomp
aam
pop
inc
sub
push
xchg
or
xor
fnstcw
push
add
nop
dec
sbb
push
jb
test
in
ficomp
mov
sbb
fs
or
mov
and
stc
(bad)
dec
pop
xchg
pop
mov
test
imul
pop
(bad)
xor
aaa
jb
cdq
and
mov
and
mov
rcl
fnsave
sub
jle
adc
in
fs
fstp
sbb
(bad)
fcomip
dec
cmp
mov
rcr
mov
aam
loopne
iret
xor
jle
xor
and
out
sbb
mov
lahf
or
dec
and
and
push
xchg
cmp
gs
mov
mov
adc
dec
leave
and
sbb
mov
movs
in
out
sbb
adc
popa
or
cmp
mov
jl
test
push
add
(bad)
lock
ret
mov
add
add
movs
movs
or
sub
dec
sub
mov
sub
fs
add
sub
mov
loopne
sub
inc
xor
dec
lock
sbb
xor
or
push
call
hlt
add
cli
cmp
mov
dec
jo
loop
jmp
imul
test
clc
lds
lods
nop
lock
or
icebp
cmpxchg
mov
adc
sbb
fdiv
sahf
ins
aad
xchg
push
and
imul
aas
push
push
enter
nop
add
es
add
loop
mov
les
or
rol
push
push
clc
clc
and
xchg
rol
cs
add
in
or
(bad)
pop
clc
rol
xchg
jne
xor
es
xor
add
adc
(bad)
adc
jnp
inc
(bad)
aaa
mov
fsub
cld
cmp
popf
adc
mov
push
inc
vmwrite
xor
xrelease
jb
lock
mov
sbb
push
push
cmps
loop
rcl
and
ret
test
leave
loope
enter
xlat
jge
and
xor
retf
inc
cs
mov
pop
pop
cmp
push
cmc
cmc
(bad)
mov
mov
xor
test
test
fsubr
jg
stos
mov
mov
pop
cld
inc
gs
enter
mov
add
add
mov
pop
sub
enter
lahf
fdiv
loopne
xor
mov
in
retf
hlt
sub
mov
mov
xchg
add
xchg
loopne
dec
fsubr
lock
daa
push
or
cs
imul
jnp
in
xchg
int3
mov
sub
or
lods
ins
fdiv
test
pusha
ins
popa
and
inc
mov
add
pop
sti
cwde
pop
mov
movs
aad
or
or
and
jmp
data16
sbb
in
dec
xor
xor
add
cdq
popf
shr
fnstcw
aas
loope
jne
popf
pop
daa
xchg
xchg
es
in
in
add
pop
sahf
sbb
fidivr
fadd
push
add
data16
mov
cld
jbe
inc
add
not
fiadd
push
add
ins
or
out
mov
in
sbb
xchg
in
pusha
or
mov
sbb
push
int3
iret
push
sub
sbb
cld
mov
dec
adc
pop
inc
jecxz
lea
ds
fdivr
sahf
in
add
add
add
repnz
sahf
loopne
fsub
call
fist
cwde
adc
mov
push
and
or
push
ror
call
inc
cmp
in
jne
and
in
outs
dec
(bad)
(bad)
inc
and
push
push
sbb
inc
and
cmp
and
call
xor
pop
sbb
add
add
xor
outs
adc
mov
sbb
add
rcl
or
push
cmp
sbb
mov
js
ins
sbb
mov
int
push
sub
aad
std
jno
jo
cdq
lahf
pop
or
cmp
loope
sbb
push
rdmsr
adc
std
and
bound
push
cmp
jne
mov
push
adc
test
jne
sar
jnp
add
ret
test
mov
cmp
fistp
push
lock
xor
sub
mov
pop
das
mov
or
lds
sub
xor
retf
leave
push
jno
(bad)
bound
bound
cld
add
lds
adc
push
in
adc
jmp
push
sbb
pop
xchg
hlt
pop
icebp
xor
mov
push
aas
retf
mov
sbb
inc
ror
dec
sbb
xor
jmp
lock
int
inc
push
dec
test
arpl
(bad)
lock
push
sbb
jb
imul
push
pop
aam
adc
sbb
jb
in
mov
outs
xchg
push
cmc
xchg
fst
lods
dec
popf
clc
inc
jmp
bound
addr16
fs
cdq
lea
sbb
sbb
push
rol
jl
call
loopne
fs
out
mov
jle
imul
add
sahf
xchg
inc
scas
mov
js
sbb
nop
pop
mov
stos
xchg
pop
sub
cli
inc
mov
jp
test
loope
mov
(bad)
jmp
xchg
pop
mov
rcr
in
mov
add
inc
popf
pop
aaa
push
dec
xchg
pushf
ret
fild
mov
inc
add
pop
xor
mov
xor
pop
pop
push
rol
mov
pop
xchg
add
je
mov
and
jmp
xlat
stc
mov
in
repnz
and
sbb
xchg
xor
adc
adc
add
inc
std
xchg
and
or
add
xlat
mov
leave
sahf
xchg
sahf
ret
mov
mov
and
or
mov
sbb
dec
sahf
sbb
in
xor
cs
mov
cwde
sub
push
and
adc
push
jne
mov
xor
test
push
imul
aaa
dec
mov
or
ror
jo
push
fiadd
sbb
cmp
jb
sbb
loopne
add
add
lds
and
and
dec
call
js
popa
pop
and
lods
xor
pop
jb
aaa
das
js
in
sub
inc
or
in
je
pop
or
or
sub
xor
mov
and
pushf
sahf
and
test
lods
push
cmp
push
inc
push
dec
sbb
enter
pop
cmp
push
pop
push
add
(bad)
adc
push
fild
pop
mov
dec
xchg
dec
retf
je
inc
xchg
push
pop
imul
movs
lods
and
inc
mov
adc
jle
xlat
jmp
adc
mov
xor
sub
repz
or
shl
cld
push
adc
nop
pop
and
adc
add
push
and
and
or
iret
mov
xor
inc
lea
bound
or
stc
push
cmp
sbb
test
std
push
je
clc
xchg
add
sub
imul
fmul
sahf
cdq
ror
jb
mov
fisub
(bad)
or
mov
lea
aam
mov
sbb
test
out
loope
xor
repz
push
or
data16
repz
les
mov
and
stos
sbb
inc
xchg
dec
dec
inc
push
xchg
lea
adc
dec
int
outs
arpl
sub
pushf
jge
mov
add
aaa
popa
jecxz
retf
inc
mov
and
rcr
push
cmp
or
pop
pushf
adc
xor
icebp
fidiv
test
loopne
fst
xchg
mov
inc
or
add
sub
in
in
aas
push
sbb
push
cmp
mov
jmp
lods
rol
jno
pusha
or
int3
or
push
cwde
sbb
dec
jnp
jo
mov
pop
cld
in
dec
jb
adc
push
popa
sub
xchg
gs
ja
fimul
and
in
sbb
sbb
cmp
sbb
and
sbb
gs
adc
scas
xor
xor
push
sub
ins
shl
dec
xchg
sub
ret
ss
fs
enter
ss
psrlq
xor
push
or
sbb
pop
mov
sbb
shr
daa
stos
xor
pop
(bad)
outs
xchg
sub
push
push
and
loopne
pop
fsub
cmp
ins
add
mov
mov
jne
sbb
enter
dec
adc
dec
adc
xchg
ret
outs
(bad)
cmp
sbb
push
inc
ins
setb
adc
aad
adc
jecxz
fnstenv
push
idiv
sbb
lds
ins
sub
cmp
in
or
out
movs
fisub
ret
xchg
add
sbb
inc
pop
jns
sub
leave
popf
sbb
mov
mov
pop
jb
sub
mov
ins
push
jne
stc
sbb
xor
fadd
dec
dec
outs
mov
pop
adc
cmp
pop
dec
add
test
jle
mov
cs
inc
js
sahf
add
mov
xadd
and
(bad)
fsubr
sbb
xchg
out
or
enter
or
inc
sahf
out
and
and
inc
jb
adc
lock
ins
inc
push
add
mov
mov
jl
dec
adc
bound
adc
push
jg
add
nop
mov
inc
xchg
std
add
lahf
dec
and
xor
pusha
gs
jmp
and
mov
pop
sub
xor
xchg
or
xchg
pop
or
mov
dec
ret
sub
mov
outs
jp
inc
sbb
xchg
aam
mov
cmp
xor
jnp
js
mov
test
mov
fsubr
sub
adc
xor
mov
and
jmp
iret
xchg
push
imul
movs
loop
xchg
push
or
iret
xchg
mov
or
(bad)
cmp
push
jbe
or
mov
inc
cmp
jne
mov
aad
jne
sbb
das
(bad)
pop
xchg
adc
dec
or
push
stc
cld
mov
fs
dec
stc
or
pusha
and
(bad)
xor
xor
pop
call
sahf
mov
sbb
retf
sub
pop
mov
fst
ja
mov
jns
adc
sub
inc
or
xor
jae
add
lods
and
imul
(bad)
pop
xor
xchg
ja
jb
cmp
xor
pop
mov
sbb
cli
dec
pop
mov
xchg
jmp
movs
rol
aad
outs
ins
push
dec
(bad)
sbb
lea
mov
and
or
mov
mov
fs
xor
fiadd
mov
cld
adc
mov
pop
call
cld
inc
xor
dec
jmp
adc
dec
add
ret
lods
push
sbb
addr16
clc
mov
mov
cmp
or
ret
xchg
mov
dec
sahf
lea
(bad)
imul
add
cli
pushf
test
and
es
ss
and
sub
(bad)
das
inc
or
mov
(bad)
popa
adc
or
xchg
xor
sbb
(bad)
fisubr
in
into
adc
push
push
pop
jmp
push
mov
or
sbb
jmp
sub
push
sbb
sub
xchg
fimul
sub
inc
iret
push
lods
mov
ror
das
pop
sbb
sbb
jo
jo
push
pop
push
(bad)
clc
mov
push
push
sub
mov
aad
mov
sub
sahf
or
cmp
push
imul
xchg
xchg
int3
rol
or
mov
(bad)
add
sbb
sub
loopne
sub
repnz
or
or
ret
sub
das
add
add
dec
sbb
inc
push
add
jno
jmp
add
out
inc
hlt
push
sbb
ret
dec
leave
nop
pop
out
inc
add
mov
jns
mov
xor
out
sub
packssdw
cmp
test
mov
popa
popa
adc
jmp
sahf
add
cld
xchg
cmc
push
or
icebp
mov
adc
and
(bad)
push
inc
stc
xchg
clc
pop
cmp
dec
repz
cs
push
inc
adc
mov
pusha
inc
push
punpcklwd
popf
rcl
jl
or
adc
icebp
pusha
leave
sbb
jg
pop
push
dec
inc
and
or
push
hlt
fwait
test
adc
mov
ret
mov
test
sub
iret
push
jp
push
push
sbb
adc
lock
pop
add
aaa
inc
and
cwde
rcl
and
popa
loopne
sub
or
add
add
(bad)
out
pop
and
sbb
pusha
mov
(bad)
movs
(bad)
psubusb
sbb
aad
inc
lods
pop
cmp
lods
aas
sbb
adc
inc
jmp
push
or
push
out
je
test
adc
and
add
cdq
inc
or
fwait
xchg
mov
mov
jg
arpl
cmp
jl
dec
test
pop
neg
mov
push
mov
test
mul
stos
add
cmps
rcl
ds
inc
mov
and
inc
dec
pop
push
sbb
(bad)
retf
sub
into
and
sub
sub
mov
or
or
sahf
int3
push
adc
subps
push
xor
xchg
jne
ss
push
rol
add
and
cmp
mov
xchg
cwde
and
and
ins
pop
add
test
inc
mov
or
adc
sbb
pop
lods
in
lods
add
add
js
jmp
fldcw
add
retf
pushf
push
in
cdq
adc
mov
add
(bad)
sbb
xchg
and
mov
adc
popa
adc
mov
xor
and
dec
or
push
adc
adc
test
xor
push
or
sbb
cmp
ss
aam
jge
pop
push
add
pop
mov
sub
and
push
push
outs
enter
or
idiv
sub
sbb
and
aam
sbb
adc
sub
jmp
or
push
rcl
or
mov
jnp
icebp
mov
or
jp
test
sbb
cmp
ror
cmps
stos
jle
adc
(bad)
or
rcl
icebp
add
inc
push
js
add
sahf
sbb
sbb
jmp
hlt
lea
pop
sti
sub
aas
cmp
inc
jecxz
inc
add
push
sbb
sbb
repnz
inc
aam
pop
or
enter
adc
add
inc
adc
pusha
inc
or
sbb
sbb
das
in
pop
or
adc
push
repnz
or
pop
add
fs
sub
test
imul
rcl
bound
adc
or
test
pop
pop
ret
jns
test
push
(bad)
dec
adc
pusha
pushf
mov
adc
jne
pop
inc
sbb
rol
test
in
adc
repnz
sbb
inc
add
add
aad
nop
aas
arpl
test
xchg
pop
inc
mov
push
mov
add
add
mov
adc
cmp
inc
inc
inc
pop
inc
push
xchg
jo
test
clc
push
inc
mov
ror
adc
hlt
daa
pusha
lods
mov
dec
loope
cmp
ret
scas
and
cmps
inc
enter
ret
test
movs
pop
jns
ret
les
mov
call
in
in
ret
scas
mov
(bad)
push
test
and
dec
add
sub
popa
mov
xchg
outs
mov
repnz
sbb
xor
mov
lods
xor
nop
xchg
(bad)
mov
mov
jne
sbb
cmps
or
push
call
lock
lea
es
add
sbb
add
push
sub
sub
inc
xchg
test
mov
inc
xor
imul
frstor
inc
outs
and
and
loopne
cmps
add
inc
pop
sub
push
add
dec
inc
mov
mov
fist
js
retf
ins
pop
pop
and
inc
shr
adc
cdq
sbb
adc
jb
outs
xchg
fdivr
ror
adc
pop
inc
dec
add
and
retf
out
add
movs
jecxz
inc
add
push
add
out
test
int
sub
dec
or
in
pop
sub
repnz
cmp
sub
adc
add
push
pop
mov
sbb
lea
dec
pop
push
jbe
or
sbb
mov
lea
out
push
out
inc
cmp
fcomp
fs
mov
test
fsubr
inc
push
mov
std
fisttp
lea
imul
sub
push
lea
add
inc
or
fistp
inc
fmul
pop
pop
and
xor
xor
cmps
popa
inc
mov
xchg
cmp
aas
mov
xor
cmp
push
push
cmps
jnp
mov
push
shl
adc
pop
sub
nop
mov
sub
loop
push
sbb
or
push
cmp
es
sbb
jle
ror
pop
test
xor
(bad)
scas
ins
or
enter
sub
(bad)
loop
sub
inc
add
mov
and
pop
cs
and
push
mov
push
jp
sub
or
add
xor
fisttp
jmp
mov
mov
dec
xlat
sbb
es
sbb
add
sub
add
and
push
sub
cmp
fwait
cmp
inc
jecxz
sub
cmp
ror
cmp
or
cmp
sub
pop
test
jg
sub
imul
jmp
xchg
mov
or
retf
or
sbb
ja
ss
inc
movs
femms
pop
sbb
rcl
test
sub
fstp
nop
in
adc
push
cmp
xlat
imul
add
pop
inc
aaa
pusha
ins
call
out
dec
jle
popa
(bad)
and
pop
adc
adc
ins
xchg
or
cmp
(bad)
sbb
adc
mov
inc
add
xchg
outs
adc
into
xor
adc
mov
adc
pop
xchg
mov
dec
and
call
imul
fisttp
fimul
jmp
aas
mov
imul
mov
daa
in
hlt
dec
loope
adc
ffreep
lea
test
(bad)
in
mov
xchg
xor
inc
xchg
ins
and
pop
enter
jae
add
xor
dec
add
aam
sub
xchg
pop
and
or
pop
or
dec
nop
jnp
jge
rcr
sbb
cmp
cwde
xor
jl
ret
test
test
mov
and
mov
pop
dec
xchg
js
lods
cmp
clc
loopne
mov
mov
jne
mov
test
pop
push
inc
aam
xor
jge
add
or
sbb
jge
inc
enter
mov
sti
mov
jae
push
push
sub
jb
in
or
sub
push
and
(bad)
jae
mov
or
lock
mov
js
inc
or
mov
inc
add
dec
aas
xor
push
adc
pop
mov
not
sbb
gs
sub
rol
fs
mov
test
jge
or
jmp
cld
and
and
dec
mov
aaa
dec
inc
xchg
push
sbb
in
pop
xor
nop
ret
xchg
inc
pop
sub
dec
or
pop
adc
ret
pop
sub
nop
loope
pop
scas
mov
adc
shl
mov
xor
xor
das
pop
fs
push
or
mov
mov
xchg
rcr
cmc
or
inc
cmp
adc
call
add
or
add
scas
iret
fmul
pop
test
push
jmp
inc
aam
in
push
pop
add
mov
jo
dec
jne
mov
adc
mov
jno
pop
add
or
inc
push
jmp
adc
xchg
adc
sti
add
lods
push
xchg
popf
mov
ret
xor
aam
retf
js
pusha
pop
loope
leave
leave
loope
or
xchg
mov
xor
jp
lods
fisubr
and
ja
push
adc
push
sub
in
popa
mov
fcmove
mov
les
push
add
dec
jecxz
sbb
or
ret
mov
mov
mov
das
push
xchg
and
push
xchg
jne
imul
ror
dec
adc
xor
fmul
pop
mov
int
dec
and
add
call
ret
mov
lods
div
adc
ficomp
jno
add
fst
pop
and
aas
(bad)
fidivr
retf
xor
mov
fild
and
push
inc
jo
movs
hlt
add
push
rcl
xor
xor
test
call
sti
pop
mov
jmp
xor
sbb
or
add
push
mov
jno
(bad)
add
mov
js
int3
jle
in
outs
mov
jp
or
ds
inc
jns
add
sahf
add
call
add
pusha
or
dec
mov
scas
pop
sbb
fisttp
and
and
adc
lock
ror
mov
lea
adc
test
ret
std
xor
sbb
movs
lar
mov
pop
and
lahf
(bad)
adc
mov
push
inc
xchg
repnz
mov
fs
inc
add
ss
clc
int
and
jle
cmp
jl
imul
push
out
fld
cmp
ins
test
adc
inc
cmp
dec
mov
pop
add
pop
(bad)
daa
or
je
ins
cdq
mov
push
push
or
pop
push
jl
mov
mov
sub
dec
sub
inc
or
outs
pop
test
sbb
xchg
das
cdq
test
pop
jle
arpl
es
shr
sbb
iret
sub
and
retf
xchg
inc
sbb
fld
xor
mov
js
sbb
and
shl
(bad)
fadd
xchg
das
ins
xchg
and
sbb
pop
mov
rcr
and
inc
and
cmp
clc
xchg
inc
or
mov
rcr
movs
cmp
push
rcl
xchg
adc
repz
scas
add
fld
retf
(bad)
arpl
je
ins
fist
mov
push
dec
gs
push
fadd
mov
xor
mov
rol
or
push
lea
jmp
repnz
jne
jne
div
lock
xor
cmp
rol
xchg
aaa
push
or
or
mov
loopne
sub
ds
xor
and
add
pop
sub
test
aad
sbb
sbb
sub
cmps
cmp
stc
add
ins
push
shl
xor
add
imul
dec
movups
jbe
outs
sar
pop
leave
add
and
call
loope
push
shr
dec
inc
or
xor
adc
cmps
add
lods
jecxz
jmp
xchg
shl
pop
test
(bad)
iret
push
sub
sub
test
and
and
imul
cwde
push
xor
adc
xor
mov
adc
scas
jns
xor
push
sub
mov
push
and
mov
mov
sbb
cmps
jno
pop
or
jb
js
inc
dec
add
in
sub
imul
rcl
popf
sbb
into
xor
xor
push
adc
hlt
inc
add
sbb
data16
add
popa
mov
call
pop
je
adc
push
adc
mov
shr
xor
in
or
ds
cmovg
add
pop
pop
pop
pop
add
clc
and
imul
and
inc
out
adc
mov
sbb
mov
mov
pop
adc
neg
push
pop
xchg
push
pop
test
and
add
mov
div
daa
inc
pusha
add
inc
mov
pusha
sbb
popf
scas
cmps
push
and
addr16
add
pop
ins
jg
xor
pushf
stos
or
push
push
and
or
adc
mov
push
pop
sub
push
imul
popf
add
test
pop
add
push
inc
sbb
push
mov
and
sbb
sbb
mov
sub
rcl
add
or
inc
adc
sub
aam
mov
sub
mov
adc
jo
clc
add
add
add
fwait
fwait
mov
sub
xchg
fsubr
add
mov
add
cmps
push
call
dec
test
sbb
mov
push
pop
add
(bad)
ror
sub
enter
out
jmp
rol
dec
sub
or
xchg
cmp
inc
icebp
jbe
add
mov
pop
retf
and
push
popa
ins
push
jb
nop
jno
sahf
dec
mov
push
push
xlat
pop
push
jne
adc
or
add
xor
sbb
pop
and
dec
sbb
mov
xor
js
lods
xor
inc
mov
lock
sbb
fstp
js
adc
and
sbb
xchg
jbe
jmp
(bad)
or
fs
stc
enter
dec
ss
mov
cmps
jmp
ins
clc
je
xchg
pushf
ficomp
enter
jb
je
push
bound
pop
cmps
popa
ffree
js
and
push
iret
mov
and
xor
adc
mov
call
jbe
scas
es
and
jmp
add
xsaveopt
pushf
push
sub
sub
imul
lods
dec
dec
shl
dec
dec
mov
rol
movlps
das
repnz
xchg
push
loopne
lock
or
push
retf
xor
jo
retf
xchg
pop
xchg
inc
push
jp
jno
das
fsub
push
and
lea
jns
call
jae
push
jne
pop
arpl
lea
push
out
sahf
(bad)
lods
add
lahf
add
and
lods
inc
loopne
loop
and
pushf
pop
lahf
pop
(bad)
ss
test
adc
cmp
sbb
and
dec
mov
clc
push
or
push
lahf
fsubr
hlt
push
sub
test
sar
xor
sahf
mov
scas
adc
sub
call
out
add
ins
ret
(bad)
add
in
xchg
cmps
push
jmp
call
add
clc
ins
pop
or
push
or
cld
test
and
in
or
aam
movs
pusha
dec
movs
lock
xchg
leave
dec
mov
push
jle
lea
cwde
retf
add
mov
movs
push
lea
cmc
sub
jmp
add
mov
inc
or
inc
push
dec
push
ds
pop
ret
addr16
mov
push
jo
nop
wrmsr
retf
loop
add
sbb
ss
add
fld
add
inc
pop
dec
movs
push
dec
pop
add
pop
clc
lds
iret
and
movs
inc
xor
adc
rcr
popf
push
adc
adc
mov
lahf
push
or
jl
imul
cmp
xor
and
in
xchg
push
js
inc
mov
int3
jl
jge
pop
not
or
dec
mov
retf
mov
sahf
xchg
inc
push
dec
adc
xor
sbb
(bad)
jnp
push
xor
out
and
and
in
cwde
cwde
mov
or
repnz
jne
int
loope
addr16
adc
add
or
idiv
movs
mov
fcomip
sti
pushf
mov
psubq
rcl
pop
loope
mov
hlt
or
and
rol
out
and
dec
jp
mov
scas
jmp
cdq
dec
sub
stos
inc
je
inc
(bad)
and
in
ret
or
push
adc
ror
(bad)
int3
das
push
or
xchg
retfw
inc
push
inc
and
push
cmps
xor
add
adc
mov
pop
fdiv
pop
adc
xchg
or
lods
cwde
push
sub
xor
xlat
shl
ror
shr
adc
xchg
int3
push
iret
ror
xor
fadd
xor
add
ja
xor
inc
mov
mov
pop
pop
jmp
push
pop
and
jecxz
dec
loopne
push
mov
mov
pop
or
test
in
cmp
aam
lahf
inc
mov
dec
pop
stos
or
sbb
or
add
cmp
sbb
cmp
sub
xor
push
ror
cmp
movs
add
push
jecxz
and
popf
nop
inc
inc
daa
call
jp
outs
inc
inc
pusha
stos
in
outs
inc
xchg
push
pushf
add
add
call
in
push
add
std
test
lods
mov
sahf
lods
dec
rol
xchg
fwait
sub
aad
sub
cmp
cmp
mov
mov
outs
jne
or
xor
and
adc
dec
aam
lods
or
jle
pop
or
ret
scas
jmp
sbb
xor
cwde
push
adc
and
or
sti
or
mov
sbb
push
cmp
mov
cmp
push
adc
mov
xlat
adc
add
adc
xor
cmp
mov
xchg
sbb
jo
xchg
mov
adc
add
push
arpl
mov
sbb
add
pop
ss
cmp
mov
jne
inc
daa
repz
mov
imul
mov
mov
inc
add
ins
scas
push
push
inc
movs
icebp
mov
mov
call
xor
sar
aaa
add
mov
push
jb
push
xor
inc
movs
xor
jp
pop
xor
push
pop
pop
in
movs
mov
test
push
imul
and
in
jecxz
sbb
pop
(bad)
(bad)
add
push
das
sbb
in
xor
test
int
adc
rcl
imul
push
aas
push
dec
inc
ret
or
aam
(bad)
dec
pusha
dec
test
push
add
cld
sbb
xchg
add
sbb
ins
sar
or
push
xchg
push
pop
inc
inc
sub
jmp
cmc
xor
nop
push
stos
dec
(bad)
(bad)
inc
or
or
hlt
or
sub
mov
jecxz
sbb
add
inc
ins
xchg
das
inc
cmp
shl
or
pop
pusha
idiv
cmovno
or
inc
sbb
pusha
mov
shr
stos
mov
cmp
mov
mov
test
xor
sub
(bad)
(bad)
ss
jmp
add
push
add
popa
sub
pop
popa
arpl
ror
daa
push
movs
movs
inc
ret
test
(bad)
xor
mov
lea
pop
je
push
cmps
mov
inc
push
je
stos
popa
loopne
add
dec
and
in
es
push
dec
add
or
cmp
jo
(bad)
(bad)
pop
sub
push
adc
sbb
jne
sub
xor
xor
sar
adc
pushf
inc
mov
jb
dec
stos
pop
add
scas
push
and
es
add
lods
add
retf
inc
adc
mov
dec
cmp
jo
xchg
arpl
xor
push
sbb
cli
fwait
cmp
or
sbb
enter
lods
xlat
sub
call
idiv
in
or
inc
push
sub
dec
add
fwait
add
add
sub
mov
pop
add
pop
xor
pop
push
fadd
and
pop
adc
dec
cdq
test
push
jne
jp
mov
inc
inc
and
mov
enter
or
sub
cmp
pop
push
mov
and
push
or
push
sar
jbe
sbb
xchg
dec
test
jno
push
and
adc
ror
or
and
int3
ss
es
mov
jg
cmp
call
push
rcr
mov
rcr
or
jl
inc
and
and
addr16
inc
pushf
or
push
lahf
mov
mov
jmp
sub
xor
movs
adc
retf
xor
push
push
and
adc
pop
je
add
add
jo
mov
pop
ret
push
xchg
push
rcl
je
in
cmp
(bad)
in
inc
enter
mul
adc
sub
and
aad
sbb
(bad)
pop
mov
jo
imul
add
jmp
xor
xor
add
sbb
rol
push
or
dec
add
nop
sahf
popa
shr
adc
lds
add
or
stc
inc
xchg
or
push
or
mov
xchg
leave
les
and
xor
inc
les
dec
ret
jecxz
adc
xor
aaa
out
sub
sub
sub
mov
xchg
adc
or
sbb
rcr
cmp
je
mov
push
sbb
cmp
mov
cmp
pop
jmp
xchg
std
addr16
xchg
mov
dec
push
push
cmp
jbe
mov
cmc
fdivr
xchg
jae
dec
dec
iret
xor
xchg
or
inc
mov
adc
and
push
xor
cmps
sbb
das
push
cwde
sahf
test
ret
mov
mov
sbb
mov
pop
add
mov
(bad)
(bad)
es
dec
movs
mov
adc
pop
mov
dec
xchg
mov
cmp
xor
aas
jl
push
test
(bad)
fcom
sar
cld
xor
xor
es
jp
dec
jne
inc
mov
aam
out
inc
jae
cmp
mov
lock
and
adc
or
in
jle
out
pop
and
push
and
adc
fwait
xor
inc
call
pop
das
pushf
sub
adc
cli
repnz
inc
adc
or
movs
repnz
mov
pop
repnz
hlt
adc
mov
add
call
popa
cmp
loop
shl
das
mov
dec
lods
add
sti
rcl
mov
adc
push
adc
test
dec
sbb
outs
dec
inc
(bad)
pop
adc
cmps
xchg
clc
dec
lea
or
clc
xor
dec
sub
inc
je
inc
cli
dec
push
push
pop
pop
cwde
push
(bad)
out
nop
push
xor
mov
jns
(bad)
ret
into
in
lock
mov
xchg
pop
(bad)
in
sub
push
dec
popa
ret
test
cmp
adc
dec
cmp
leave
(bad)
sbb
ins
and
cmp
sub
jb
pop
mov
outs
xor
xchg
pop
nop
ins
push
sbb
mov
or
sbb
pop
push
mov
shl
loope
cs
pop
fmul
nop
xor
push
jge
stc
pop
sub
dec
or
(bad)
daa
jmp
mov
loopne
mul
xchg
mov
cmp
stc
push
inc
pop
dec
adc
xchg
jo
push
cmp
lods
push
mov
test
je
push
daa
add
add
cmp
outs
jbe
xchg
mov
inc
push
test
or
shl
sbb
mov
add
mov
test
daa
inc
pop
add
xor
ins
and
mov
and
les
jecxz
sahf
imul
(bad)
jne
ss
add
imul
adc
push
sub
adc
xchg
call
xchg
push
sbb
pop
push
enter
sbb
outs
dec
or
adc
(bad)
pushf
mov
cmp
sub
dec
or
and
(bad)
and
dec
dec
pop
aaa
mov
add
xchg
jno
ins
adc
xor
js
ret
adc
jnp
icebp
xor
cmp
dec
aaa
push
test
pop
sub
xor
mov
push
lea
repnz
call
jmp
pop
or
lods
mov
aaa
or
mov
xchg
and
push
cwde
adc
mov
or
or
xor
jb
sbb
rcl
mov
test
add
adc
imul
arpl
dec
push
and
and
aaa
sbb
sub
sbb
shl
enter
xchg
sbb
dec
adc
dec
push
pop
mov
jle
sbb
xchg
inc
mov
mov
enter
inc
push
ja
cmp
ja
es
mov
sbb
dec
jns
or
cmovne
mov
iret
xchg
bound
sub
add
shl
dec
xchg
mov
xor
cmc
movs
cmp
mov
cmp
ja
add
retf
mov
push
jne
dec
pop
push
mov
lahf
mov
cmps
mov
jmp
aam
push
adc
test
mov
bound
xchg
lea
and
imul
or
lods
shl
ds
push
lock
sbb
and
mov
mov
xor
sub
push
xor
dec
call
or
xchg
mov
jbe
rcl
(bad)
sbb
sbb
movs
enter
push
cmp
jb
loope
pop
add
pop
mov
ja
mov
sar
xchg
or
jo
inc
js
mov
or
fbld
cmp
pop
test
push
cmp
add
mov
adc
mov
add
mov
xor
mov
sahf
fiadd
inc
jmp
or
imul
retf
repz
cmp
mov
pop
and
cmp
mov
mov
fwait
push
or
in
adc
ror
pop
aas
shl
fwait
aaa
cmp
push
test
mov
test
ss
xchg
push
push
add
and
shl
je
xchg
adc
shl
pop
sbb
into
(bad)
jmp
xor
hlt
das
and
(bad)
bound
push
pop
je
dec
test
xchg
push
adc
add
xchg
movs
jbe
mov
fadd
mov
ins
leave
fisub
ss
leave
pop
or
push
mov
pop
clc
js
loop
cmp
lds
mov
adc
stos
sti
add
xchg
sub
push
xchg
adc
mov
add
inc
test
mov
movs
sbb
add
sbb
push
push
ins
dec
push
loop
mov
mov
and
and
sbb
jne
mov
into
sbb
sahf
or
push
int3
sub
jmp
and
sub
ror
push
stos
mov
jno
adc
push
pop
ror
push
shl
inc
xor
mov
inc
rol
sub
adc
loop
jmp
(bad)
fdiv
popa
not
ds
or
or
iret
jmp
pop
jne
(bad)
in
mov
aas
or
fimul
pop
and
out
daa
dec
out
arpl
clc
push
sub
pop
cmp
or
gs
cmp
les
add
jg
add
or
sbb
xchg
mov
adc
xor
ret
mov
loope
push
push
xor
add
push
jo
add
enter
add
add
cmp
pop
inc
not
or
loopne
sub
aaa
leave
or
or
sbb
and
mov
mov
into
mov
and
scas
sbb
and
pop
je
lea
add
xor
call
pop
repnz
push
nop
cmp
or
push
push
mov
(bad)
enter
int3
movs
cmc
repnz
daa
and
test
xchg
loope
xchg
adc
or
push
test
mov
pop
push
mov
loopne
jmp
add
add
inc
jno
shl
les
loope
sub
mov
pop
jg
jno
dec
and
inc
out
aad
loop
and
or
push
call
inc
mov
ss
pusha
mov
push
gs
adc
fs
aam
movs
cmp
loopne
test
cmp
pushf
jp
xchg
push
popf
call
push
push
stc
dec
pop
dec
in
(bad)
and
fdiv
fld
xor
ins
cs
dec
(bad)
jne
mov
add
dec
and
sbb
cmp
adc
adc
je
add
ret
enter
(bad)
nop
in
movs
scas
push
movs
mov
push
inc
sbb
movs
sbb
sbb
loopne
stc
push
or
jecxz
test
nop
into
and
inc
xor
mov
imul
shl
arpl
aam
rol
adc
fcom
icebp
push
cmp
pop
popa
fiadd
lds
mov
ror
and
xchg
push
mov
dec
mov
neg
jle
jge
cmps
mov
out
mov
ins
xchg
dec
jl
les
push
pop
cmp
in
jmp
rcl
(bad)
jecxz
xor
sub
mov
ss
std
jg
dec
add
in
sbb
loopne
(bad)
push
pop
ret
test
test
sub
sub
mov
mov
push
(bad)
xor
push
add
mov
adc
cli
xchg
mov
xor
ja
add
outs
mov
pop
inc
mov
dec
mov
ja
sbb
cs
add
jl
pop
or
jl
jecxz
stc
mov
mov
adc
pop
or
jo
mov
mov
jl
push
add
inc
je
frstor
aad
and
inc
pop
push
jmp
retf
dec
leave
and
pop
adc
movs
xchg
cwde
inc
push
sbb
adc
jg
das
adc
adc
push
test
aas
adc
pop
(bad)
xlat
imul
cmp
mov
icebp
arpl
bswap
or
push
sbb
test
and
add
add
push
and
ins
sbb
xchg
lods
arpl
dec
test
call
and
test
stc
ins
nop
js
sbb
movs
in
mov
gs
pop
lock
aas
cmps
mov
sbb
mov
dec
pushf
shl
lds
push
fadd
add
dec
dec
pop
and
inc
push
push
sti
and
xchg
jecxz
mov
add
mov
ret
or
js
xor
fcom
push
fndisi(8087
fild
adc
and
out
xor
fs
movs
cmp
xor
mov
push
and
dec
sub
rcr
ror
retf
mov
(bad)
mov
add
add
sbb
or
sbb
rol
push
mov
ja
xchg
outs
ret
movs
mov
mov
xor
mov
loopne
sub
js
inc
mov
push
loopne
leave
aam
cmp
or
sub
push
xchg
inc
repnz
mov
mov
cs
sti
imul
cmp
adc
loopne
sbb
cmp
loope
mov
arpl
in
mov
xor
cwde
cmps
cmp
pop
dec
jg
lea
xor
dec
sub
je
pop
loope
ret
sub
out
pop
cmp
xor
xchg
push
adc
cwde
enter
(bad)
add
jge
sbb
or
pop
jnp
mov
mov
push
(bad)
stos
push
pop
popf
mov
xor
mov
mov
fs
daa
cwde
nop
cs
aas
adc
jo
movs
add
xor
pop
test
test
ds
adc
pop
add
jmp
(bad)
call
rcl
and
(bad)
cmp
mov
and
push
sbb
add
add
pop
mov
lods
mov
hlt
add
inc
jl
pop
and
clc
sub
inc
inc
add
xor
ficom
adc
nop
bound
add
mov
and
jge
jl
shr
rol
shr
mov
fdivr
imul
or
call
dec
xor
jbe
outs
mov
sar
pop
sub
add
mov
test
dec
test
pop
push
xor
ja
lds
push
xor
xchg
mov
pmaxsw
shl
test
nop
nop
cs
mov
jmp
les
add
cwde
js
inc
loopne
int3
es
xor
mov
arpl
mov
or
or
push
or
jl
and
(bad)
enter
and
int3
aaa
adc
or
sbb
mov
or
jno
or
shr
jo
add
aam
or
cmps
test
mov
aas
ret
je
dec
je
add
test
in
jne
jge
fistp
or
and
sub
(bad)
(bad)
sbb
(bad)
and
shr
sbb
inc
mov
loopne
pop
mov
add
stos
jne
cmp
xlat
loopne
inc
mov
mov
leave
mov
sbb
clc
mov
test
xchg
add
cwde
outs
fcom
sub
push
inc
rol
pop
xor
cmp
push
mov
pop
les
cmps
inc
and
xchg
lods
pusha
xor
push
je
in
and
imul
ret
add
jno
test
es
pop
daa
popf
inc
mov
add
xor
inc
test
lahf
cmp
rol
dec
repz
or
dec
mov
iret
ins
clc
sub
pusha
inc
adc
or
cmp
pop
mov
xchg
cmc
fsub
or
cmp
(bad)
cmps
xchg
inc
sbb
xchg
push
push
mov
pop
cmp
or
leave
imul
mov
jmp
dec
test
mov
adc
lods
das
retf
lock
xchg
jne
adc
add
xchg
and
in
ins
push
lods
xor
push
sub
or
(bad)
test
sbb
or
mov
idiv
push
aad
(bad)
loop
out
pop
dec
mov
and
adc
sub
dec
vshufps
xchg
push
add
enter
idiv
je
in
in
inc
(bad)
push
xor
loopne
repnz
(bad)
lahf
add
int
fmul
add
jmp
pop
inc
jmp
and
mov
and
outs
push
call
inc
daa
mov
and
adc
mov
pop
dec
dec
lds
pushf
add
pop
loope
xor
rcl
lock
mov
or
movs
sub
mov
das
es
pop
sbb
or
ss
fyl2x
cmc
inc
or
fisttp
add
in
sbb
push
fisttp
push
repnz
add
or
nop
cs
sub
retf
inc
sbb
jp
sub
adc
pop
jecxz
ins
jmp
sub
mov
push
cmp
xor
xchg
add
jnp
mov
mov
imul
test
nop
stc
inc
push
or
mov
mov
add
mov
xchg
sub
jne
leave
loope
cmp
inc
adc
outs
inc
ret
xchg
movs
push
mov
pusha
lock
or
jmp
in
mov
or
jnp
fwait
add
fs
add
movs
mov
sub
xchg
mov
outs
enter
or
test
adc
or
add
inc
jo
test
and
or
mov
test
pop
mov
mov
imul
stc
sub
lahf
aaa
pop
push
mov
fisttp
pusha
mov
sbb
inc
add
and
dec
in
add
mov
mov
and
int
cs
fisub
pop
xor
dec
ret
inc
mov
mov
push
pop
jl
shr
mov
mov
into
push
das
nop
xor
loopne
imul
int3
les
or
pop
pop
cs
mul
mov
push
mov
push
add
push
inc
jbe
pop
inc
or
inc
cmp
shl
adc
sahf
jbe
pop
inc
loopne
dec
mov
jmp
xchg
fist
push
and
add
imul
dec
loope
test
or
or
fiadd
inc
pop
cmp
iret
xlat
clc
dec
aam
mov
fsub
sbb
cdq
aad
push
icebp
scas
mov
rcl
fld
hlt
clc
jmp
and
call
in
pop
cmc
jl
and
jns
fistp
jne
hlt
hlt
or
mov
mov
clc
sbb
cmps
adc
cmp
stos
inc
ins
pop
sbb
add
push
xlat
aad
and
retf
sbb
push
test
dec
fcomp
and
test
popa
call
shl
sub
adc
aaa
mov
jmp
push
cld
cmp
ja
xchg
rol
imul
mov
in
mov
inc
rol
pop
push
fldcw
xor
jb
mov
jae
sub
dec
inc
pusha
and
or
fnstsw
ins
out
add
xchg
aas
icebp
ss
int3
repnz
jne
test
or
adc
dec
add
xchg
xor
retf
sub
inc
and
sub
fwait
mov
cmp
pusha
push
cmp
cmps
pop
or
cmps
imul
push
push
sbb
add
xchg
shl
add
shr
or
bsr
pop
dec
fadd
fdivr
enter
jo
add
sbb
into
es
pop
and
fldcw
or
out
popf
int3
lea
mov
test
jmp
jg
push
xchg
jmp
push
arpl
mov
inc
sbb
push
imul
push
xor
jb
shl
mov
add
(bad)
les
inc
dec
adc
xchg
xor
jl
add
popf
sbb
sub
add
les
(bad)
fadd
cmp
rol
out
jne
es
and
jge
sbb
and
test
and
push
push
dec
push
mov
inc
cmp
add
outs
add
mov
xchg
test
pusha
and
and
cwde
ror
sbb
add
out
lods
(bad)
inc
sbb
add
push
mov
ins
push
push
push
out
add
mov
(bad)
dec
inc
cmp
data16
mov
enter
mov
push
push
pop
xor
and
add
mov
call
das
sbb
xor
sbb
js
xor
xor
repnz
mov
xchg
push
add
scas
mov
imul
jge
nop
xchg
sub
push
arpl
(bad)
nop
jmp
les
push
and
pop
fisub
push
stos
jge
sub
jmp
jmp
inc
pop
sbb
mov
shl
and
(bad)
(bad)
push
enter
enter
call
(bad)
xchg
or
add
jne
inc
push
in
push
popa
jne
xchg
dec
mov
mov
fwait
dec
push
sbb
jg
lock
js
push
ror
pop
pop
repnz
push
gs
sub
xor
mov
test
(bad)
pusha
adc
sbb
bound
es
push
dec
mov
push
lods
adc
test
test
inc
inc
adc
add
mov
add
lea
xchg
push
xchg
or
dec
popa
pop
adc
xor
xor
repz
sub
leave
dec
les
cmp
cmp
pushf
jle
inc
lods
mov
mov
loopne
push
pop
pop
pusha
jle
xchg
mov
imul
je
dec
adc
sbb
pop
pop
jge
jo
adc
mov
push
push
das
sub
rol
retf
adc
pop
or
ret
aaa
inc
loopne
push
sbb
and
mov
jmp
xor
adc
mov
rcr
xor
jne
clc
sub
xor
add
add
adc
stos
jne
xor
(bad)
mov
fadd
mov
jns
mov
jno
icebp
adc
lea
es
loope
cmp
or
inc
arpl
cmp
or
aas
xchg
jmp
fst
shl
push
jb
lods
mov
adc
aam
popa
sbb
lods
or
inc
les
or
mov
mov
fild
mov
sbb
xchg
add
or
das
lahf
fist
push
push
or
and
aam
mov
out
jbe
pop
pop
or
pusha
nop
add
mov
repz
cmp
fld
push
add
mov
dec
ja
lahf
rcr
dec
pop
jns
mov
push
std
movs
dec
sub
pop
cli
fadd
mov
cmp
push
stc
mov
xor
fisubr
add
shl
mov
cmp
out
cmp
dec
(bad)
retf
add
ins
push
mul
push
cmp
mov
mov
xlat
test
jnp
sbb
add
jl
sbb
add
push
int3
and
inc
stos
sub
ds
and
and
pop
mov
rcl
in
mov
pop
imul
mov
sbb
mov
in
xor
dec
(bad)
test
adc
faddp
fld
add
pop
cld
pop
js
and
shl
sub
retf
inc
dec
aaa
and
mov
retf
iret
das
loopne
aaa
lods
adc
or
pop
mov
fnstsw
jo
cmp
xchg
add
push
lar
sar
sbb
jg
or
mov
xchg
jne
lods
test
xor
lea
clc
or
cmps
or
cmps
fstp
mov
dec
ret
stos
lds
outs
jl
pop
pop
call
test
inc
adc
adc
loope
imul
mov
add
dec
xlat
cmp
hlt
ins
jmp
add
sbb
inc
lahf
sar
push
push
mov
test
mov
pop
xor
sti
jnp
xchg
push
cs
dec
(bad)
mov
mov
nop
mov
and
xor
fs
mov
nop
cmp
sbb
adc
dec
dec
mov
inc
xor
pusha
fs
adc
lods
daa
js
sub
jne
aam
xor
dec
dec
inc
pusha
sub
dec
jecxz
pop
inc
mov
pop
and
mov
pop
(bad)
jmp
retf
mov
js
sbb
js
pusha
shl
dec
and
dec
js
mov
rcl
jp
sbb
and
dec
shl
lea
lods
daa
pop
xchg
aam
ja
xor
rol
ret
jb
cmc
inc
jmp
out
(bad)
inc
pop
sar
int3
(bad)
ror
and
xchg
add
mov
xchg
dec
mov
cmp
push
inc
cmp
jnp
push
push
in
add
pop
dec
push
(bad)
out
cmc
sub
sbb
cmp
cmp
mov
and
xchg
(bad)
call
or
pop
inc
leave
jnp
push
dec
sub
jno
stc
or
sub
iret
jbe
jmp
add
dec
adc
add
sub
and
(bad)
add
jmp
or
mov
rcl
or
jl
jg
sbb
or
fs
popf
nop
repz
mov
dec
adc
push
mov
and
xchg
lods
cmp
fst
mov
dec
push
arpl
adc
sub
sub
sbb
enter
addr16
leave
push
inc
pop
ins
push
pusha
movs
ret
xchg
gs
cld
xchg
sub
rcl
ins
int3
add
pop
and
sar
push
call
push
xor
sar
outs
out
xchg
pop
repz
adc
ret
push
loope
test
aam
cmp
or
xchg
out
jne
jmp
xchg
cmp
test
adc
mov
leave
fdiv
lds
enter
pop
ins
or
aaa
add
in
adc
mov
push
sbb
xchg
dec
xchg
add
sub
cmps
pop
or
adc
sub
or
stos
nop
push
mov
mov
mov
leave
fxch
mov
popa
add
cwde
xor
rcl
push
bound
and
or
imul
xor
push
adc
sbb
push
adc
dec
sbb
leave
push
and
mov
cmp
xchg
ret
mov
xor
or
lahf
shl
call
mov
ss
and
fcmove
stos
pop
add
jb
adc
sbb
adc
cld
xchg
adc
sub
ficom
sub
cmp
sbb
fwait
sub
aam
sub
and
and
push
xor
cmc
mov
push
pop
inc
lods
fs
jbe
or
xor
push
xchg
retf
jp
adc
mov
or
push
or
mov
jo
xor
add
xor
xor
jmp
lods
js
test
xchg
xor
mov
test
lods
inc
sbb
imul
push
or
pop
aas
push
shl
and
push
test
dec
xchg
lds
(bad)
frstor
jo
fisttp
xchg
outs
adc
je
dec
in
add
sahf
add
mov
mov
ins
jmp
mov
loope
dec
test
addr16
call
ins
stos
sbb
sbb
push
daa
adc
outs
adc
cmps
pushf
cmps
or
add
jns
stc
inc
clc
lea
fsub
sbb
push
or
add
rol
push
push
push
fcomp
xchg
inc
dec
imul
(bad)
nop
cmp
add
jns
mov
pop
xor
mov
retf
xor
aaa
sbb
(bad)
in
mov
sub
and
inc
pop
add
jo
push
mov
lock
ror
pop
mov
leave
loop
or
jne
ja
push
sbb
loopne
retf
jmp
nop
iret
dec
movs
xor
(bad)
pop
nop
mov
xor
ficom
popa
fcomp
push
fdiv
nop
add
adc
loopne
jo
movs
sub
lods
push
jo
ins
pusha
mov
pop
(bad)
jl
lea
mov
iret
pop
cmps
push
ins
mov
aad
aam
fadd
xchg
popa
fwait
or
xor
pop
jmp
mov
dec
daa
retf
jno
xor
mov
je
xor
cdq
cmp
in
cmps
cmps
ds
outs
mov
mov
call
xor
(bad)
test
xor
int3
and
sub
add
xor
xchg
fcomp
mov
dec
loope
push
out
dec
(bad)
repz
fs
inc
lahf
test
prefetch
icebp
cmc
xor
pop
pusha
adc
fwait
sbb
jl
ss
push
add
retf
aaa
test
retf
mov
test
je
mov
and
loop
jl
mov
mov
sub
daa
inc
loop
ins
nop
test
xlat
adc
jl
rcr
dec
jmp
push
xor
test
nop
pop
inc
loopne
xor
and
mov
sub
aas
stc
and
dec
add
push
push
nop
fimul
dec
or
dec
xor
arpl
xchg
lahf
or
enter
jl
mov
add
mov
jge
test
dec
inc
mov
push
mov
or
add
inc
bound
aas
test
ror
jl
mov
out
or
xor
inc
hlt
add
xchg
push
(bad)
(bad)
pusha
pop
les
clc
nop
jmp
push
leave
pop
cmc
push
sub
outs
and
push
cmps
adc
or
cmp
add
and
jg
jle
dec
xor
jl
jl
sub
je
pop
dec
(bad)
xchg
mov
or
adc
in
push
or
sub
fs
xor
and
fstp
add
fst
cmp
test
xchg
pop
ja
shl
jmp
or
push
pop
rol
adc
pop
or
in
dec
mov
ss
mov
or
(bad)
retf
lds
push
or
mov
sahf
stc
scas
sub
xchg
mov
dec
sub
popf
ins
(bad)
xor
mov
mov
jns
lds
imul
add
push
jne
(bad)
adc
pop
pop
jnp
std
js
rol
adc
aaa
add
test
xor
and
jl
cmp
dec
dec
imul
pop
cmp
jge
inc
lahf
es
scas
mov
pop
pop
imul
mov
popa
or
iret
inc
dec
leave
stos
dec
jge
scas
data16
sbb
mov
or
pop
push
(bad)
loopne
adc
sub
mov
jmp
pop
out
ret
push
or
les
frstor
sub
jne
shr
cmp
sub
add
jns
push
sbb
dec
gs
mov
jnp
add
jnp
pop
inc
cs
push
shl
(bad)
outs
or
icebp
and
mov
inc
ret
mov
popa
leave
mov
add
push
fidiv
fild
push
push
popf
sub
test
add
nop
inc
inc
jmp
dec
in
(bad)
lds
add
lahf
ins
mov
inc
jne
add
int
(bad)
and
and
add
jp
push
outs
jl
xor
adc
and
mov
mov
pop
adc
push
(bad)
or
or
pop
dec
imul
mov
add
fwait
jge
cmp
add
je
adc
dec
push
adc
adc
push
std
add
mov
mov
sti
fiadd
movs
mov
push
jmp
xchg
or
test
stos
or
xchg
cmp
sub
sahf
xchg
pop
push
dec
cmp
sbb
jnp
mov
xor
pop
adc
xchg
fadd
cmp
fs
adc
or
xor
mov
sbb
rcr
popa
inc
add
jmp
ror
inc
push
sub
mov
rcr
jle
mov
inc
dec
xchg
mov
(bad)
sub
ret
sub
push
pusha
add
add
jne
push
jbe
or
pop
pop
jg
pop
ficom
or
fnstsw
rcl
push
inc
inc
sbb
cdq
cmp
sub
xor
and
xchg
push
adc
ins
inc
bswap
add
mov
fs
pop
arpl
push
xor
fcomi
mov
push
cmp
inc
rol
movs
ja
or
pop
adc
xor
(bad)
int3
add
sub
psrlq
cmp
rcr
push
or
dec
inc
mov
pushf
xchg
in
daa
jmp
lock
inc
add
adc
or
dec
push
hlt
push
sub
add
inc
(bad)
fisttp
ss
xchg
mov
nop
push
dec
mov
iret
sub
cmp
inc
loope
mov
rol
or
add
arpl
mov
add
je
push
shl
mov
jmp
loope
xor
das
ss
cli
xlat
mov
je
pop
stc
and
cdq
inc
scas
sbb
test
dec
and
jl
fimul
enter
hlt
cmc
inc
mov
inc
mov
xor
adc
test
in
xchg
pop
js
fnstcw
push
jle
push
push
pop
jae
cwde
push
outs
xchg
jg
add
inc
or
xor
(bad)
dec
push
hlt
jmp
pusha
sub
adc
sbb
cmp
xchg
pop
jge
sub
jl
cmc
push
push
ins
sub
lds
inc
jbe
pop
rol
cmp
inc
ins
sbb
sahf
or
pop
xor
fld
repnz
inc
dec
test
or
pop
pop
cmps
or
fadd
leave
cmp
mov
inc
pushf
pusha
and
cs
inc
add
mov
add
xor
inc
cdq
add
jecxz
imul
add
test
std
jo
xchg
or
or
sub
adc
xor
or
jmp
rol
push
push
dec
jge
dec
or
test
mov
(bad)
jne
lock
dec
push
xchg
test
dec
xchg
and
dec
les
enter
enter
dec
push
into
push
popf
lods
pop
sub
(bad)
jle
js
test
movs
es
add
loopne
cmps
add
dec
in
add
ret
add
inc
ret
mov
dec
add
movs
fild
or
pusha
ret
int3
inc
add
rol
mov
adc
mov
dec
push
jbe
push
es
(bad)
(bad)
xchg
sar
mov
or
outs
sbb
out
les
rcr
test
into
or
ret
mov
lds
xchg
dec
mov
inc
inc
inc
and
cmp
mov
int
mov
sub
xchg
dec
adc
and
pusha
inc
movs
adc
test
push
pop
push
xchg
test
popa
xchg
and
adc
rol
in
jmp
mov
dec
cmc
les
in
lock
cmp
loopne
push
das
adc
and
out
jl
pop
xlat
pop
retf
sub
sub
xchg
cli
lods
call
imul
adc
push
pop
or
inc
mov
mov
mov
(bad)
dec
xor
test
sub
lods
clc
rcr
cmp
push
movs
and
xor
xor
sub
fstp
jne
push
into
imul
xchg
mov
mov
sbb
arpl
dec
(bad)
add
mov
mov
push
inc
mov
dec
popa
xor
add
or
lods
push
pop
imul
outs
cwde
mov
in
lea
or
hlt
push
leave
jbe
inc
sbb
stc
xor
push
pop
js
pop
ror
inc
add
pop
push
clc
add
add
mov
rol
bound
add
add
retf
aas
pop
shr
pop
fdiv
dec
push
shl
sbb
call
mov
imul
or
dec
pop
jmp
mov
push
mov
push
sbb
push
scas
fldenv
add
mov
xor
sub
mov
pop
imul
jmp
test
dec
mov
or
xor
push
add
mov
adc
not
or
enter
mov
jns
push
outs
or
jg
inc
stc
lea
add
and
mov
pop
jge
cdq
jo
in
fisubr
fs
call
rcl
mov
call
and
xor
call
xor
test
mov
push
fld
call
loopne
sbb
sub
inc
xchg
mov
shr
add
pop
add
add
test
rcl
add
or
sub
or
cmp
lods
push
mov
(bad)
push
das
add
push
sub
sub
tzmsk
jne
fimul
fs
inc
add
movs
sbb
sub
sbb
popa
xchg
pop
fwait
inc
sbb
std
adc
xchg
xor
inc
je
sar
adc
xchg
les
lods
test
test
lea
push
and
sub
inc
push
loop
sbb
jmp
push
xchg
mov
push
jp
inc
cwde
ret
(bad)
mov
and
test
and
cmp
sahf
icebp
jmp
mov
add
and
cmps
push
and
inc
stc
inc
adc
xchg
inc
jp
add
cmc
ja
or
jmp
push
add
dec
adc
push
xor
push
xchg
stc
in
add
je
dec
je
or
cmp
sub
sti
sbb
mov
jmp
adc
mov
sbb
lods
cmps
sub
adc
cmc
push
div
popa
mov
push
sub
sahf
push
inc
add
cmp
jge
cmp
(bad)
pop
xchg
pop
or
outs
cmp
mov
(bad)
cmp
xor
ret
scas
xor
aas
xor
sub
(bad)
push
push
aaa
fsubr
add
pop
sub
add
sbb
outs
stos
lea
mov
cmp
jae
add
bound
mov
mov
push
mov
js
into
lea
scas
mov
push
arpl
dec
add
push
push
pusha
rol
dec
popa
push
pop
xchg
rcr
xlat
pop
test
xchg
push
sub
neg
cld
pop
(bad)
out
push
add
(bad)
sti
pop
and
frstor
add
xchg
mov
dec
leave
and
mov
fist
test
(bad)
rcl
add
nop
addr16
sub
xor
daa
dec
dec
mov
cld
pushf
sub
sbb
adc
cli
mov
adc
push
test
shl
and
shl
pusha
js
mov
xor
and
pop
(bad)
push
loope
inc
nop
leave
inc
retf
lds
xor
inc
in
or
and
inc
mov
mul
(bad)
push
xchg
in
cmp
test
jg
push
jmp
dec
jmp
xor
mov
jne
mov
test
and
xchg
outs
adc
push
or
pop
add
and
cmp
adc
in
nop
mov
xor
and
sbb
inc
dec
mov
xchg
adc
jno
movs
mov
pop
or
add
xor
icebp
(bad)
(bad)
test
jo
into
imul
push
cli
adc
cmp
out
ror
sbb
rcr
ss
aaa
sub
add
ds
movs
(bad)
ins
sbb
add
outs
dec
daa
je
movs
xchg
inc
(bad)
out
xor
pop
and
fimul
and
dec
arpl
push
fs
xchg
fcom
aas
pop
shl
dec
add
inc
dec
pop
sbb
inc
inc
enter
mov
or
addr16
dec
mov
add
sub
mov
repnz
outs
addr16
ror
test
add
inc
pop
nop
or
inc
movs
test
loopne
sbb
push
sub
mov
adc
mov
cdq
pop
adc
mov
jnp
inc
or
mov
and
pusha
push
jl
dec
sub
jecxz
loop
dec
jmp
push
mov
add
js
or
ins
xchg
into
je
mov
test
jmp
cwde
cmp
inc
sbb
add
shr
pusha
adc
dec
fldenv
add
xchg
nop
fadd
push
push
ror
sbb
retf
icebp
sub
call
or
mov
in
aad
sub
and
lods
mov
sbb
and
daa
mov
push
cmps
mov
push
pop
xchg
test
loopne
adc
pop
adc
jmp
lahf
bound
or
jno
cmps
or
mov
sub
pop
ds
inc
pusha
and
xchg
xor
add
mov
pop
lods
and
shr
or
jae
inc
pop
ret
neg
int
(bad)
inc
jmp
dec
adc
pop
scas
inc
mov
xchg
push
ins
aaa
ret
sub
imul
and
sbb
shr
mov
mov
push
dec
jge
add
fwait
sbb
mov
in
test
mov
loop
repz
cmps
nop
daa
or
and
jge
data16
push
mov
adc
popf
xor
push
adc
daa
sbb
or
shl
adc
mov
pop
mov
push
inc
ud1
out
test
(bad)
xlat
push
or
ret
rcr
sub
mov
xchg
jne
xchg
and
movs
lods
fld
or
inc
sahf
(bad)
cdq
add
xor
inc
push
cmp
dec
(bad)
or
scas
inc
cmp
and
push
mov
pusha
mov
imul
or
push
or
inc
cs
imul
ja
mov
cmps
add
or
pushf
mov
inc
cmp
ins
cmc
mov
in
xchg
imul
cmp
add
mov
leave
or
fmul
cli
mov
and
push
adc
cs
jo
movups
dec
xchg
mov
lahf
push
(bad)
and
inc
push
fs
and
add
and
pushf
push
add
and
es
es
daa
arpl
or
or
fmul
sub
push
mov
push
xchg
adc
mov
xor
nop
and
adc
or
pop
and
cmp
dec
push
aad
les
add
lahf
popa
and
(bad)
fld
push
pop
jp
xor
add
push
inc
dec
xor
dec
fisttp
ins
pop
and
out
mov
ja
and
cmp
xchg
aad
shl
movs
(bad)
sbb
add
in
add
bound
arpl
xor
push
push
push
lds
dec
inc
das
xor
retf
retf
sub
lds
stos
dec
sbb
inc
inc
ret
sbb
nop
sub
adc
dec
mov
mov
call
inc
inc
fcom
xor
inc
pop
push
sbb
or
hlt
pusha
xchg
cmp
lods
and
add
adc
stos
cmp
dec
xchg
fidiv
adc
ret
imul
inc
test
sub
sbb
mov
lods
mov
stc
stos
pushf
adc
push
dec
lea
dec
fmul
in
xchg
pop
xor
adc
xchg
or
or
or
mov
scas
jl
enter
nop
iret
push
(bad)
push
adc
xor
shl
lods
fwait
lea
add
dec
or
and
and
movs
inc
xor
or
push
gs
ret
dec
mov
ins
pop
test
inc
sbb
adc
repnz
repnz
pop
popf
loop
inc
sub
sahf
test
adc
lock
mov
mov
mov
ins
cmp
mov
ret
aam
shl
xor
jmp
add
cwde
add
jbe
retf
xor
add
add
leave
push
test
lock
and
lahf
add
or
ins
nop
cmp
mov
mov
mov
pop
mov
cmp
and
and
loopne
sub
push
push
jno
add
add
xor
inc
push
push
and
inc
shr
mov
xchg
add
xchg
push
out
or
sbb
sbb
xor
or
jae
and
clc
mov
add
add
sub
add
cmp
jno
into
dec
inc
xor
pusha
dec
scas
mov
add
mov
inc
stos
xor
retf
retf
inc
adc
js
inc
cwde
cmp
ret
adc
or
pop
ins
mov
or
test
or
push
sbb
ror
imul
outs
mov
cmc
gs
je
fdiv
inc
mov
fbld
hlt
sub
mul
mov
pop
dec
and
push
push
and
inc
jge
pusha
test
call
test
sub
and
aam
pop
mov
dec
ins
add
and
mov
dec
and
mov
and
(bad)
mov
mov
jno
sbb
mov
add
mov
and
int
xchg
sbb
sub
sbb
mov
js
adc
lock
and
push
sbb
ret
cwde
arpl
clc
push
mov
add
cmp
sub
sub
aad
sbb
sub
js
shl
xor
xchg
mov
js
clc
xor
movs
push
mov
mov
xor
rol
pop
xor
call
aaa
xchg
nop
rol
or
inc
or
pop
and
adc
jge
xor
pusha
sub
test
or
and
mov
lds
inc
iret
xor
mov
mov
or
mov
movs
into
cli
adc
mov
fild
inc
add
in
lock
cld
clc
ds
nop
jmp
adc
inc
and
sub
mov
mov
test
push
pop
adc
push
xor
popf
movs
dec
dec
add
xor
and
dec
enter
sub
sbb
mov
jb
add
jge
or
and
and
out
push
or
mov
xchg
inc
and
add
or
out
adc
lea
inc
xchg
mov
push
jae
add
add
xor
imul
movs
and
xchg
pop
cmps
jg
lock
cmp
and
add
js
mov
lea
xor
ret
jbe
inc
xor
(bad)
mov
cli
xor
push
push
push
call
sub
push
in
xor
sbb
pop
jo
push
call
je
aam
adc
pop
adc
pop
ror
jnp
nop
push
mov
and
add
add
mov
sti
jecxz
das
adc
adc
rcl
pop
fs
add
shl
psubsw
or
add
test
aas
add
scas
pop
jle
mov
cmp
add
fucomi
bnd
push
push
push
psubusw
ins
popf
gs
xchg
inc
cmp
and
push
or
inc
dec
inc
or
mov
jne
fadd
jno
adc
mov
inc
mov
cld
mov
mov
adc
or
test
mov
adc
(bad)
cwde
cmp
repnz
clc
add
clc
sub
sahf
add
inc
sbb
adc
cmp
stc
sub
mov
dec
mov
jae
push
popf
xchg
leave
dec
sub
sub
jl
dec
or
adc
jb
adc
xor
or
and
inc
add
push
leave
movs
and
stos
(bad)
cwde
or
fnstenv
adc
ins
aad
adc
cmp
or
in
mov
mov
repnz
mov
sbb
(bad)
das
inc
or
inc
sbb
fs
sbb
in
push
and
pop
ror
test
sub
in
bound
add
shr
mov
jne
icebp
xor
pop
push
aas
adc
adc
cmp
retf
mov
dec
call
stos
push
test
clc
sub
xchg
and
cmp
cli
pop
jge
fisub
fild
mov
lds
adc
inc
push
sbb
sbb
rcl
fild
xor
xchg
sub
add
or
inc
clc
add
mov
push
jl
mov
push
mov
and
icebp
je
dec
mov
sbb
and
add
or
lock
inc
enter
ret
or
lods
xchg
lods
xchg
imul
sbb
jl
test
or
test
sub
or
dec
fwait
pusha
xchg
bound
fstp
mov
jo
mov
push
xor
je
sub
aad
inc
call
xor
dec
push
xor
hlt
sbb
push
shl
stos
pop
aam
xchg
pusha
inc
daa
dec
stos
movs
movs
ret
sti
inc
jecxz
sub
pop
test
(bad)
in
and
repz
mov
das
data16
adc
inc
xor
ror
inc
or
xchg
jns
call
stc
push
inc
ss
mov
push
jo
jge
lea
mov
add
jl
imul
dec
cmp
pop
xor
loop
mov
or
inc
inc
and
pop
cmp
lea
add
cs
inc
adc
ss
movs
xchg
rcl
lods
lods
cmps
add
loope
mov
mov
or
or
xchg
cmps
add
xchg
mov
fcmovnb
jb
push
(bad)
jg
popa
loop
xor
mov
inc
mov
cwde
cwde
push
xchg
jecxz
retf
les
push
jmp
add
gs
test
aad
es
xor
cmc
adc
and
inc
mov
test
and
lods
sub
cmps
xchg
pusha
je
fucomp
cmps
cmp
pop
pusha
je
test
jmp
imul
and
iret
add
mov
pop
ret
push
jp
or
xor
scas
dec
push
add
cdq
add
cmp
push
jbe
jo
test
jae
popa
imul
rol
movs
mov
mov
cmp
mov
mov
retf
inc
xor
(bad)
push
ss
push
div
push
imul
and
sub
cmp
inc
xchg
pusha
cmp
outs
lahf
jle
es
cmp
and
adc
movs
xchg
inc
test
inc
and
in
xchg
xchg
idiv
xchg
sahf
xor
add
jbe
adc
in
sbb
push
hlt
and
test
popa
add
push
cmp
shl
mov
add
xchg
repnz
and
enter
push
imul
jge
js
(bad)
inc
adc
or
scas
fisttp
fsub
aad
ret
ror
jmp
pop
push
mov
push
mov
inc
and
iret
and
fwait
enter
in
sbb
int3
inc
and
xchg
mov
jl
cmp
out
jmp
xchg
xchg
fdivr
mov
sbb
and
in
sub
gs
add
jbe
arpl
pusha
pop
jae
jmp
inc
jnp
inc
stos
aaa
mov
fmul
xchg
and
push
push
push
pusha
rcr
cmp
add
pusha
mov
sbb
mov
sub
sub
and
(bad)
push
inc
dec
inc
inc
or
aaa
dec
sub
dec
int3
or
or
lods
(bad)
xchg
mov
add
(bad)
push
js
xchg
fwait
xchg
stc
xchg
push
pusha
ss
adc
daa
or
push
ins
or
or
mov
cmp
sar
lahf
add
arpl
push
scas
out
mov
push
dec
pop
imul
in
mov
scas
dec
ja
jmp
mov
jl
add
popa
outs
pop
dec
push
repnz
iret
push
jb
mov
sbb
xchg
add
xor
retf
scas
inc
pop
and
or
push
xor
neg
ss
xchg
out
push
add
add
add
sub
or
js
sahf
push
cmp
je
hlt
data16
ins
inc
add
and
mov
xchg
add
pop
mov
xchg
mov
cdq
sbb
adc
add
mov
pop
jp
mov
xchg
push
adc
in
out
mov
xlat
mov
push
jge
dec
mov
adc
jmp
ins
mov
inc
add
mov
mov
cmp
jl
cmp
mov
mov
jb
arpl
les
jo
int
jle
dec
sbb
ficom
mov
ret
sbb
sub
and
stos
hlt
(bad)
dec
add
mov
mov
lock
and
fiadd
pop
in
movs
dec
sbb
imul
mov
or
push
movs
popf
clc
and
ror
push
aaa
mov
push
mov
mov
push
arpl
sbb
push
pop
dec
jle
les
mov
fiadd
sub
pusha
mov
sbb
adc
mov
xchg
inc
mov
shl
xchg
sub
mov
or
and
add
nop
dec
push
mov
push
mov
test
jg
cmp
mov
or
pop
or
jns
xchg
repz
loope
push
sbb
mov
mov
je
or
dec
mov
cmp
push
scas
loope
movs
push
inc
add
add
mov
lea
(bad)
adc
mov
inc
sbb
push
and
je
rcr
sub
add
pop
or
mov
test
mov
mov
cmps
push
adc
addr16
jne
mov
mov
(bad)
cmp
ror
minps
into
xor
jecxz
pop
fisttp
pop
pop
mov
add
ret
daa
mov
xor
imul
inc
pop
cmp
fs
or
arpl
or
pop
mov
pop
push
pop
sbb
enter
in
mov
add
sub
or
pop
ror
and
outs
fisttp
cmps
sbb
inc
das
data16
iret
push
mov
ret
(bad)
or
adc
sbb
xchg
dec
cmps
mov
cmp
sbb
jmp
xor
add
xchg
mov
lods
fidiv
neg
and
add
int3
jnp
in
dec
dec
inc
dec
xor
inc
inc
dec
xchg
out
fdiv
pop
outs
mov
pusha
or
adc
or
movs
and
je
xchg
dec
inc
es
jl
pop
pop
nop
jl
fs
cs
retf
in
mov
push
dec
mov
adc
cmp
mov
and
adc
pop
mov
sbb
popa
sbb
dec
jl
pusha
pusha
mov
sbb
(bad)
sbb
into
pop
int3
sub
add
ins
addr16
push
mov
sub
add
mov
push
push
mov
ret
nop
mov
cmps
movs
add
xor
scas
inc
adc
rol
inc
imul
jle
jne
jnp
jae
cmp
shr
xchg
mov
cmps
push
dec
ret
pusha
add
(bad)
pop
adc
xchg
lods
xor
aam
fimul
mov
sub
push
xchg
push
test
and
push
inc
xor
jns
pusha
aaa
and
mov
mov
test
and
ins
mov
sbb
xchg
pop
pop
dec
add
in
fstp
shl
push
xchg
test
fsubr
mov
pop
rcl
or
popfw
in
cs
inc
xchg
add
ret
push
pop
movs
jns
mov
sub
xchg
mov
icebp
mov
mov
cmp
mov
lods
sub
add
or
neg
(bad)
inc
and
cmp
das
pop
dec
test
push
enter
or
dec
and
mov
ret
bound
sbb
push
ins
fsub
dec
jecxz
or
loope
xchg
inc
shl
xor
push
mov
(bad)
xor
pop
or
or
(bad)
sbb
mov
push
stc
fdiv
mov
cmps
jecxz
dec
mov
mov
adc
fstp
or
cmp
pop
mov
ror
mov
xchg
or
jns
(bad)
adc
das
xchg
enter
nop
mov
rol
leave
jmp
je
lahf
inc
cmp
jno
inc
fistp
dec
aaa
idiv
jns
stc
dec
inc
movs
add
leave
mov
mov
sub
or
adc
mov
and
and
dec
int
jns
lds
add
or
inc
fisttp
cmp
push
lods
inc
imul
addr16
(bad)
dec
inc
dec
inc
adc
mov
push
movs
sub
loope
mov
pusha
(bad)
aas
jne
nop
fs
and
sbb
pop
jle
push
inc
arpl
fwait
movs
sti
adc
pop
xchg
inc
dec
out
jb
mov
push
mov
dec
or
fadd
mov
inc
pop
fmul
xchg
cmp
fs
xor
pop
push
xchg
inc
arpl
dec
jecxz
dec
mov
push
in
and
add
dec
mov
aam
adc
mov
test
call
inc
adc
and
mov
mov
add
xchg
inc
jecxz
sbb
push
(bad)
lods
nop
push
xor
fld
and
or
sbb
push
mov
push
push
add
add
xor
cmp
sub
outs
dec
and
cmp
adc
or
test
mov
stc
inc
xor
pop
aaa
and
or
pxor
xor
or
add
mov
fwait
or
movs
mov
add
mov
add
xchg
popa
mov
cmc
add
pusha
fmul
xor
and
push
fadd
push
xchg
dec
rol
add
dec
adc
mov
add
and
(bad)
jmp
adc
mov
and
and
push
dec
jno
xchg
mov
rcr
xchg
cmp
cwde
push
or
push
adc
test
add
add
rcr
xchg
dec
mov
add
js
inc
retf
sbb
cmp
jmp
jnp
adc
inc
pusha
mov
mov
retf
adc
jns
dec
fcmovnb
add
mov
in
dec
fwait
test
movs
cmp
pop
lahf
pop
xor
imul
push
mov
loope
test
pop
push
adc
adc
xchg
add
inc
jp
dec
adc
shr
out
cmc
xor
jmp
sub
and
cld
add
mov
push
sub
test
das
or
mov
sub
and
add
ins
cwde
(bad)
out
(bad)
pop
jmp
xchg
adc
loop
fstp
add
mov
fmul
sub
mov
repz
lods
cwde
rcl
or
push
sbb
jmp
lea
fwait
ret
push
aas
and
jl
xchg
mov
or
inc
push
add
popf
test
test
pop
loope
sub
dec
sbb
mov
xor
and
jno
loopne
test
and
sbb
inc
retf
pop
cmp
add
mov
sbb
add
sti
fs
adc
jle
sub
or
dec
loop
inc
inc
cmp
mov
retf
adc
cmp
ja
pushf
sub
enter
or
xchg
mov
pop
clc
inc
sub
sbb
and
scas
adc
mov
mov
ins
sbb
cmp
int
xchg
and
sub
push
(bad)
daa
in
sbb
pusha
int3
jne
daa
cmc
mov
sbb
pop
sbb
enter
mov
add
cmp
rcr
xchg
in
sbb
(bad)
cwde
push
mov
push
mov
cmps
mov
pop
cmp
fadd
dec
ror
loope
xor
xor
push
es
add
dec
stos
ror
add
rcl
jge
add
in
jns
add
cmp
adc
add
xor
mov
lods
fnstcw
sar
add
popf
xchg
mov
mov
mov
daa
sbb
adc
aad
inc
call
mov
push
and
je
push
imul
scas
lock
outs
aaa
into
dec
adc
mov
sbb
push
xchg
mov
add
adc
xor
add
add
cmp
push
sub
dec
and
nop
and
shl
sub
icebp
or
fadd
adc
dec
imul
mov
outs
push
je
push
jne
inc
jne
add
push
or
sub
pop
pop
ja
push
pop
push
loopne
mov
lahf
push
test
or
(bad)
mov
loopne
iret
cmp
loope
add
imul
adc
outs
repnz
dec
inc
nop
push
rol
in
or
adc
sub
dec
es
dec
push
inc
jmp
adc
pop
add
sti
push
push
jo
jbe
add
add
sub
or
cs
mov
test
or
adc
xchg
test
add
jmp
pop
in
clc
and
cmp
cmp
adc
xor
dec
test
enter
inc
adc
push
push
add
add
or
rcr
iret
adc
sbb
sub
push
inc
in
dec
ret
cmp
mov
dec
add
jo
inc
call
fnstenv
and
int
mov
and
add
sub
jle
mov
cdq
push
dec
inc
pop
sti
scas
hlt
and
mov
outs
adc
mov
pop
and
inc
cmp
mov
inc
jnp
inc
add
push
adc
pop
outs
leave
fdiv
int3
test
retf
lock
push
cdq
xor
xchg
xor
mov
jl
push
dec
push
sub
add
cli
mov
jle
mov
lahf
mov
sbb
adc
sub
stos
pop
dec
xor
pop
add
mov
mov
sub
data16
(bad)
(bad)
mov
jb
test
push
bound
pop
test
cmp
adc
xor
loop
loopne
sub
xor
enter
cmp
or
or
inc
cmps
sub
(bad)
sub
dec
adc
rcr
inc
aam
jecxz
mov
lahf
lods
push
push
and
xchg
popa
xchg
ret
inc
jecxz
or
push
jl
add
xor
jg
inc
adc
mov
pop
sub
popa
in
mov
and
and
xchg
sub
jmp
xor
jl
ins
scas
adc
shl
mov
cld
dec
loopne
adc
jb
pop
mov
inc
pop
push
mov
gs
mov
pop
or
cmc
fisttp
mov
mov
sub
icebp
jo
and
and
inc
or
mov
add
or
mov
std
pop
mov
add
xchg
imul
sub
mov
jmp
cmps
adc
cdq
jno
je
nop
pop
mov
push
sbb
cwde
ret
xor
ja
push
(bad)
push
sbb
or
pop
in
pop
sub
jo
test
rol
imul
mov
push
lea
cmp
or
pop
mov
sbb
and
ret
sbb
test
jo
in
mov
mov
push
sbb
dec
sahf
adc
sub
int
ss
bound
inc
jle
inc
or
mov
jecxz
adc
ror
ss
movs
cmp
sar
push
mov
not
push
aad
lea
jo
(bad)
mov
xor
sub
jmp
xchg
mov
xchg
loopne
stc
retf
inc
xor
loopne
sub
sbb
popa
imul
(bad)
pop
aam
cs
xchg
popa
inc
outs
iret
jns
jne
xchg
stos
add
js
nop
mov
adc
dec
jne
es
cwde
sub
call
ss
pushf
mov
or
movlps
mov
pop
adc
cdq
fnstsw
or
mov
and
xchg
rcr
or
inc
adc
mov
dec
and
jb
inc
add
cmp
push
test
mov
adc
das
mov
mov
mov
mov
leave
mov
clc
aam
inc
(bad)
fidiv
gs
clc
shl
retf
and
xor
pmulhw
shl
ja
xor
mov
nop
dec
(bad)
add
add
pushf
xchg
out
jnp
xlat
mov
cmp
jbe
repnz
or
inc
xchg
xor
xchg
jge
aam
adc
inc
pop
call
or
or
add
jo
lods
test
or
and
jl
test
pop
cmp
movs
pop
xor
push
pop
fldenv
and
rol
xchg
add
(bad)
lods
or
fstp
fild
arpl
mov
es
fcom
and
or
pop
lea
data16
or
mov
add
jns
mov
cmc
nop
xor
pop
mov
mov
mov
lar
pop
test
jbe
or
xchg
and
push
add
push
adc
pop
cmp
pusha
push
mov
push
aad
mov
push
fimul
sub
sub
(bad)
sbb
mov
adc
mov
push
imul
adc
sti
scas
(bad)
xor
daa
test
(bad)
jae
cmp
sahf
and
and
ror
mov
les
mov
(bad)
lock
cmp
ret
mov
iret
mov
sub
dec
add
inc
mov
sbb
mov
(bad)
aad
sbb
jge
or
dec
jmp
sub
enter
jmp
sbb
cmc
add
or
fs
dec
xchg
sub
(bad)
in
mov
push
push
in
adc
cmp
sub
jno
mov
jno
and
pop
cli
push
nop
mov
shl
in
mov
add
adc
enter
add
mov
shr
dec
mov
cmp
aam
fs
dec
pop
dec
fsubr
rol
scas
add
xchg
xchg
push
inc
push
cs
ror
sub
mov
sub
(bad)
and
adc
cs
ja
ins
outs
mov
xor
(bad)
add
fsub
pop
(bad)
add
add
test
push
push
xor
push
bound
cmps
out
js
inc
dec
push
push
push
loopne
jns
outs
jg
pop
sub
iret
ins
push
outs
jnp
sub
mov
xor
fcom
or
sub
addr16
aaa
pusha
jb
jne
loopne
mov
jle
dec
mov
adc
fdivr
dec
das
or
xchg
pop
cmp
jmp
dec
rcl
jmp
jmp
and
or
xchg
add
test
jle
push
je
fst
cmp
add
lock
ins
sub
aas
and
and
test
popa
out
sub
scas
sbb
add
neg
lds
or
xor
in
mov
sub
jae
mov
mov
rcr
push
or
xor
inc
outs
mov
mov
arpl
adc
fcmovnbe
push
xor
xor
adc
push
jge
je
dec
call
dec
shl
push
dec
lods
test
leave
js
xor
mov
xchg
mov
das
inc
xchg
bound
ss
push
shl
sub
dec
loopne
lea
cmps
out
push
jb
mov
inc
sub
sbb
faddp
xor
loope
sbb
mov
cmps
fwait
pop
lock
div
xor
dec
sub
dec
or
leave
cmps
xor
aam
inc
dec
or
sub
and
and
rcl
in
popa
call
jle
mov
movs
mov
hlt
dec
cmp
lahf
fisttp
or
in
cmp
dec
add
add
xchg
add
call
jge
inc
cwde
out
inc
xor
sub
sub
jo
outs
add
dec
jbe
adc
ins
jle
inc
dec
sbb
mov
push
push
adc
loope
xor
sub
je
mov
push
scas
add
icebp
sub
push
pop
ss
and
cmp
jmp
and
mov
imul
cmps
loope
aam
pop
xchg
mov
mov
push
data16
or
adc
cmp
lahf
not
adc
call
fnsave
popa
xor
cmp
into
in
aaa
inc
xor
add
jno
imul
or
push
cwde
sub
and
aas
test
add
jmp
retf
inc
mov
push
rcl
and
(bad)
or
sub
mov
xchg
icebp
call
pusha
or
rcr
sub
rcl
aas
nop
xor
jl
cmp
std
and
sub
addr16
not
push
gs
int
xor
stos
cs
jmp
shl
fst
lock
mov
mov
push
sbb
mov
xchg
loopne
mov
xchg
cli
pop
xor
or
scas
adc
mov
cmp
and
sub
movs
popa
mov
cmp
shr
mov
hlt
add
add
call
sti
(bad)
and
lea
iret
cmp
mov
cmovs
fwait
cmp
xor
fs
enter
retf
or
pop
sub
add
aaa
and
or
iret
in
push
test
sub
ret
mov
div
loope
sub
xchg
mov
popa
in
pop
mov
imul
cwde
cmp
ss
xor
popf
mov
or
jmp
push
fdiv
je
push
retf
jns
cs
lea
dec
sbb
and
or
push
lods
leave
add
and
pop
inc
add
sub
sub
aad
xchg
push
push
mov
pop
xchg
xor
ins
scas
push
fdiv
xchg
xchg
hlt
mov
pop
inc
xchg
nop
jmp
outs
mov
ins
push
cs
sub
add
xor
add
sbb
mov
movs
and
cmp
mov
vminpd
mov
mov
jbe
loop
add
fwait
add
mov
mov
enter
into
fldenv
loopne
in
call
rcr
stc
in
add
push
aaa
and
inc
shl
enter
add
or
and
mov
mov
adc
fist
aaa
and
repnz
dec
dec
ins
(bad)
data16
mov
sbb
xchg
or
inc
stc
dec
add
movs
leave
sbb
das
xchg
push
push
add
push
shl
add
lea
dec
test
movs
cmp
(bad)
ror
pop
adc
ficomp
mov
push
pop
imul
ret
mov
(bad)
shl
pop
push
jne
(bad)
add
fs
(bad)
fs
add
cs
retf
lock
sbb
call
fstp
add
adc
je
cmp
xor
sbb
call
outs
push
jg
mov
fsub
scas
cmp
sub
pushf
es
mov
xor
es
and
fs
mov
inc
sub
sbb
sbb
jmp
loopne
movs
sub
lods
mov
jmp
daa
push
add
jb
test
ret
cmp
ins
adc
jmp
and
in
pop
or
adc
clc
or
je
sub
inc
popf
or
inc
sar
pusha
pop
lods
xchg
lea
dec
xor
dec
pusha
mov
pop
adc
push
lock
push
dec
cmp
add
xlat
mov
jo
call
iret
cmp
shr
into
xor
repnz
sub
jmp
fiadd
sbb
adc
xor
xchg
pop
pop
sti
sbb
add
sbb
sbb
inc
mov
and
movs
dec
jb
add
pusha
outs
add
icebp
xchg
hlt
cmp
lahf
cli
add
or
loop
into
test
mov
add
in
leave
ficom
or
sbb
addr16
add
enter
or
xor
push
sub
sub
jmp
fst
pop
add
lock
div
adc
add
sbb
stos
xor
push
aad
ret
clc
mov
pop
enter
push
mov
add
mov
addr16
sub
adc
mov
and
or
adc
(bad)
jns
push
adc
xchg
test
add
add
mov
xor
xchg
sbb
sbb
xchg
pop
jg
xchg
call
adc
fld
dec
or
sbb
and
stos
not
enter
xchg
fld
dec
(bad)
pop
bound
xor
or
pop
cmp
ja
mov
add
xor
ja
pop
es
es
outs
push
call
ja
jbe
dec
sbb
add
loope
fs
rcr
loopne
stc
xor
push
xor
fist
and
xor
fs
mov
adc
mov
mov
and
sbb
xor
lock
sbb
adc
sub
push
inc
or
movs
mov
dec
push
and
stos
mov
ins
dec
push
cmp
or
cmp
leave
inc
push
(bad)
ss
sub
jge
retf
mov
add
xchg
xchg
popf
adc
mov
mov
push
add
cmp
sti
push
outs
mov
mov
xchg
jne
inc
add
ret
jp
mov
sub
leave
call
es
je
mov
fwait
jmp
pop
add
jmp
push
push
sub
push
pop
xchg
sti
xor
call
dec
ret
cmp
xchg
dec
call
and
rcr
daa
nop
pop
push
inc
or
pusha
(bad)
adc
dec
add
adc
imul
es
mov
or
in
mov
cmc
push
jb
pop
lock
and
jne
and
test
in
popa
dec
bound
test
aas
in
add
xchg
push
sbb
(bad)
pop
enter
pop
mov
or
leave
lods
jbe
fiadd
xor
xchg
loop
add
push
call
jge
shl
push
mov
ins
imul
loopne
sbb
jecxz
inc
pusha
and
sub
repnz
movs
push
push
int3
mov
ja
inc
inc
imul
push
arpl
xchg
adc
mov
movs
(bad)
loop
movs
xchg
cmc
push
iret
es
dec
adc
and
aam
sbb
hlt
movs
xlat
mov
fldenv
mov
mov
add
sub
lea
enter
xor
sbb
mov
dec
inc
js
fidivr
into
mov
pop
retf
sbb
mov
inc
sub
in
call
popf
xor
mov
add
mov
imul
sbb
sar
fcom
fmul
cs
retf
in
in
in
lock
pop
hlt
clc
cld
add
or
cmps
add
cs
dec
pop
or
sub
xor
jmp
pop
cmp
xchg
pop
pop
inc
and
sbb
retf
enter
push
push
dec
je
mov
inc
pop
xor
xchg
add
xor
xchg
sbb
or
sub
adc
adc
and
jmp
mov
xchg
push
(bad)
pusha
mov
cwde
or
arpl
nop
sub
dec
xchg
pop
cwde
pop
add
jl
pushf
addr16
ret
and
scas
movs
cmp
or
lods
cmp
imul
add
in
in
mov
add
push
pop
sub
mov
lock
or
and
or
inc
call
cmp
js
pop
(bad)
and
jo
outs
ins
push
jbe
jo
jo
cmovbe
pop
dec
inc
mov
call
mov
imul
inc
ret
pop
imul
leave
cmp
jmp
cmp
pop
sbb
add
xchg
stos
mov
aam
mov
(bad)
int3
add
and
movs
sbb
add
clc
dec
sbb
and
cmps
add
xor
test
adc
jmp
or
push
nop
sub
or
cmp
inc
dec
shr
mov
push
push
ficomp
fcmovb
stos
xor
ja
or
and
mov
lahf
nop
scas
inc
(bad)
in
cli
add
ror
ja
je
inc
or
sbb
jecxz
cmp
sub
mov
cdq
push
ja
adc
xchg
(bad)
lock
mov
push
mov
stc
inc
pop
push
js
or
push
inc
not
aam
pusha
fcmovne
lock
es
fcomp
sub
push
arpl
fcmovnbe
popa
or
ret
int
je
cmp
add
sub
or
cwde
or
xchg
into
push
mov
or
xchg
and
sub
or
xor
xor
push
rcl
adc
mov
and
or
ins
xor
adc
or
gs
popa
lods
pop
enter
popa
or
sbb
fwait
push
cld
test
je
push
pop
mov
mov
loopne
push
test
push
sbb
mov
add
imul
icebp
(bad)
xchg
xchg
int3
test
outs
sub
push
xchg
test
mov
adc
gs
pop
mov
mov
add
or
int3
aam
jl
lea
jecxz
pushf
mov
test
jo
inc
fwait
inc
adc
push
sbb
cs
inc
movs
mov
push
repz
push
push
add
pop
test
rcl
add
add
fst
ds
sti
ret
dec
push
and
cmp
cmp
adc
ret
adc
in
dec
push
sub
sbb
fiadd
ror
mov
sub
sbb
inc
adc
mov
dec
pop
sub
sar
and
pop
xchg
jo
fsub
pop
add
pop
add
arpl
fdivrp
cmp
dec
rcr
neg
hlt
adc
sub
not
nop
cmp
inc
(bad)
ret
sub
in
aaa
int
js
fdiv
xor
out
jno
lea
fsub
add
pop
inc
fisttp
mov
call
pop
push
adc
cmp
or
adc
sti
add
or
jne
add
nop
call
leave
icebp
mov
sub
enter
push
icebp
ds
mov
xor
cmp
inc
lods
add
inc
mov
icebp
(bad)
cmp
push
ss
add
pushf
dec
ss
or
mov
cmp
test
(bad)
hlt
and
dec
jmp
test
das
inc
sub
push
(bad)
mov
in
cs
fild
loope
add
popa
sbb
fstp
push
add
cmps
lea
dec
cdq
xchg
xchg
and
(bad)
cmps
dec
es
pusha
or
ficomp
xlat
mov
movs
sub
mov
aaa
jo
inc
loope
cmps
mov
sub
sub
(bad)
sub
adc
inc
adc
ins
out
push
xchg
jae
out
inc
adc
daa
lock
jmp
(bad)
lea
mov
adc
xor
ds
or
stos
mov
shr
dec
(bad)
and
cmps
add
test
inc
push
mov
das
imul
add
and
lods
mov
push
or
add
in
add
out
or
(bad)
test
sub
outs
ror
cmp
xchg
and
mov
mul
cmps
in
and
mov
push
xchg
nop
dec
adc
movs
pop
cwde
adc
lea
mov
mov
push
xchg
retf
sbb
mov
cmp
sbb
xchg
enter
add
shl
cwde
add
or
test
xchg
or
xor
or
sar
sub
cld
push
aam
test
sbb
into
mov
lds
push
or
jl
sbb
mov
lahf
and
pusha
inc
sbb
addr16
sub
loope
pop
int3
sbb
dec
call
fscale
mov
xor
movs
sbb
mov
or
add
push
jmp
inc
adc
popf
es
and
pop
dec
adc
aam
inc
and
ret
xchg
lahf
add
dec
lahf
fs
jo
(bad)
loop
ror
add
fld1
add
inc
das
inc
nop
dec
add
xor
jb
sbb
xchg
and
repnz
jmp
add
xor
jns
inc
fsub
xor
and
fild
fmul
loope
adc
scas
das
jne
cs
scas
call
sub
or
jbe
cwde
xchg
xchg
cmp
inc
lods
pop
rcr
mov
jmp
ret
and
add
retf
clc
cmp
push
dec
rol
fcom
mov
lock
iret
and
inc
add
mov
popa
or
xor
(bad)
out
inc
js
push
into
into
sbb
clts
add
call
xor
nop
data16
pusha
mov
mov
in
dec
pop
push
pop
mov
stos
push
jno
cmp
xor
or
(bad)
call
pop
movs
lods
or
sbb
add
mov
je
jae
jle
mov
enter
sbb
leave
enter
fsubr
add
nop
cmp
pop
dec
das
adc
xchg
adc
pop
jo
ret
adc
das
mov
and
mov
test
mov
pop
push
test
or
mov
in
in
std
adc
push
fsub
or
movs
pushf
fcomp
mov
mov
iret
stos
xchg
cs
xor
mov
sahf
mov
iret
jae
push
ins
xchg
aam
movs
push
repnz
rol
movs
or
add
dec
mov
shl
cdq
repnz
test
lea
and
sub
add
or
test
test
sbb
or
add
xor
shl
mov
xchg
mov
mov
mov
dec
in
push
inc
ja
cmc
push
cwde
adc
(bad)
and
pop
mov
cli
lea
dec
lea
jl
test
out
jge
mov
idiv
push
je
(bad)
mul
adc
adc
adc
mov
mov
loope
popa
hlt
push
les
or
popa
cmp
push
xchg
push
(bad)
adc
xor
sbb
scas
and
(bad)
sbb
jno
sahf
stos
sub
sar
push
mov
inc
shl
add
pop
sbb
pop
push
jge
fst
and
les
fst
mov
fs
out
push
mov
shr
jnp
arpl
push
adc
gs
cmp
and
mov
clc
and
cs
stos
leave
xor
xchg
loope
push
outs
mov
ins
sar
add
cmps
sbb
push
sbb
ret
cmp
shl
push
loop
(bad)
rcl
jmp
xor
and
inc
(bad)
enter
and
sub
add
cmps
(bad)
sub
add
call
add
push
push
adc
or
or
ins
dec
xchg
dec
or
cmp
cmp
call
dec
or
imul
sub
jnp
pop
nop
inc
or
sahf
inc
in
xor
or
ror
sub
adc
enter
mov
dec
xlat
test
jno
push
test
or
inc
xchg
icebp
push
out
push
mov
dec
(bad)
or
and
in
movs
pop
and
call
push
lahf
inc
fistp
or
test
or
mov
mov
cmps
shl
inc
sar
mov
adc
or
mov
inc
pop
pop
sti
inc
mov
adc
or
retf
adc
adc
iret
rcr
mov
or
repz
jecxz
add
test
adc
fild
sbb
mov
popa
fadd
std
enter
gs
sbb
dec
adc
push
xchg
mov
jns
xchg
or
dec
mov
ss
and
and
or
push
movs
in
lock
rol
inc
stos
add
daa
movs
mov
sbb
push
dec
push
and
repnz
inc
inc
mov
push
mov
mov
ja
ss
cmp
jl
mov
push
and
mov
shr
and
or
xor
jnp
mov
sbb
ret
pushf
nop
pop
arpl
outs
rol
mov
cmp
add
sub
lock
add
xchg
add
and
sub
fsub
mov
adc
sub
sahf
sub
in
mov
pop
pop
sub
clc
push
lods
or
movs
xor
cmp
fs
ins
retf
xor
mov
mov
jo
mov
xor
outs
sub
sub
sar
xchg
push
xchg
xchg
mov
push
sbb
fdiv
inc
arpl
add
and
and
or
call
mov
push
lods
xor
popf
jns
mov
or
lea
in
fmul
(bad)
fadd
dec
cld
ins
mov
or
ja
les
sbb
sbb
(bad)
or
ror
inc
pop
cmp
scas
fs
sar
adc
add
pop
jno
or
je
push
adc
loope
push
cmp
nop
jmp
out
imul
dec
dec
dec
inc
sbb
sbb
into
pop
popa
push
and
add
xchg
adc
xor
or
iret
imul
jl
add
pop
mov
js
ds
sub
adc
jmp
and
push
dec
imul
(bad)
les
inc
sub
cmp
aad
and
or
xor
sub
sub
sbb
mov
adc
inc
aam
rol
ss
mov
add
inc
mov
inc
add
push
xchg
in
mov
pop
cmp
pop
sbb
add
adc
icebp
add
adc
fisub
cwde
popf
and
mov
push
push
aas
ret
movs
mov
sub
push
push
ret
arpl
das
xchg
popa
shr
or
(bad)
stc
adc
shl
mov
arpl
fwait
and
test
mov
adc
push
arpl
lds
add
mov
cmp
and
pop
sub
inc
mov
or
leave
or
mov
pop
iret
push
add
pop
out
add
add
imul
pop
iret
test
imul
sbb
mov
push
sub
clc
cld
or
mov
cld
fdiv
sbb
retf
and
mov
jmp
and
sbb
adc
push
push
mov
icebp
ss
sahf
push
and
fisttp
or
or
dec
cmps
pop
or
cs
pop
out
test
mov
hlt
(bad)
cli
sbb
push
cmp
xchg
inc
inc
imul
retf
jp
(bad)
xor
jns
pusha
jp
(bad)
nop
adc
or
inc
ins
push
xchg
loop
(bad)
mov
jne
mov
add
retf
inc
adc
cmp
jb
or
xor
push
mov
fld
imul
ins
add
jo
pusha
cmp
mov
push
jnp
xchg
pusha
adc
ins
popf
and
cmps
ja
and
movs
inc
add
push
sbb
cdq
jp
out
jae
add
push
jbe
cmc
mov
mov
xor
pop
aam
xlat
push
adc
sub
mov
push
and
call
sub
nop
dec
dec
mov
dec
dec
enter
nop
sbb
add
mov
sbb
sub
js
or
mov
sbb
or
mov
imul
pop
out
ret
stos
mul
clc
ret
xchg
(bad)
lea
and
add
sbb
pop
and
repz
or
dec
popa
sub
sub
aad
aad
or
ror
xchg
ins
cmovp
push
add
dec
psubsw
out
aam
mov
imul
ret
push
inc
fmul
clc
test
add
sub
sbb
mov
and
adc
es
lds
inc
popa
cmp
cdq
aaa
dec
sbb
daa
and
or
and
(bad)
in
iret
and
jnp
add
jmp
lock
(bad)
mov
repnz
and
(bad)
(bad)
dec
jnp
or
rcl
in
inc
sub
cmp
sub
dec
xor
retf
xlat
pop
add
in
mov
jb
add
pop
bound
and
in
adc
inc
pop
adc
adc
call
push
sub
test
xchg
les
and
ret
fcom
pop
je
clc
mov
into
pop
cmp
or
(bad)
aaa
pop
or
leave
imul
sub
shl
adc
imul
cmp
or
sahf
xchg
adc
rol
and
xchg
jp
jne
cli
mov
sbb
mov
fimul
imul
je
xchg
cmp
push
ret
fdivr
and
ins
pop
sbb
pop
dec
adc
inc
and
xor
mov
es
pushf
pop
lods
arpl
mov
push
mov
adc
inc
jecxz
(bad)
cmp
loopne
add
sbb
sbb
xchg
push
mov
rol
add
xor
inc
mov
sbb
inc
inc
and
jecxz
loopne
xchg
adc
push
lods
ins
in
and
jne
push
push
push
pushf
sbb
shl
sbb
xor
push
adc
pusha
mov
or
dec
or
and
and
jne
mov
and
and
sbb
clc
adc
mov
fdiv
sbb
and
xor
push
jmp
mov
add
jo
cs
pop
pop
sbb
ins
fist
cli
and
out
not
xor
mov
sbb
add
leave
push
mov
(bad)
cmp
(bad)
cmp
sub
imul
sbb
hlt
inc
and
mov
dec
or
mov
call
std
mov
pop
mov
leave
mov
mov
nop
jl
nop
xchg
mov
imul
jae
mov
stos
sub
popf
imul
sub
push
popa
and
dec
sbb
lods
pop
dec
mov
add
icebp
xor
fisttp
lods
push
push
and
xor
mov
push
mov
add
jl
(bad)
mov
pushf
mov
loopne
mov
mov
sub
sahf
cmp
cmp
adc
pop
dec
inc
or
sbb
sbb
mov
sbb
sahf
test
test
sbb
pop
push
lods
inc
popf
data16
pop
xor
adc
inc
adc
scas
inc
adc
shr
xor
stos
rol
mov
test
sbb
stos
dec
pop
cmp
js
mov
mov
sbb
(bad)
lock
add
shl
xor
cmps
test
loop
mov
mov
ficom
jge
and
and
loopne
jmp
add
xchg
mov
sub
ja
pop
adc
add
and
sub
pop
push
mov
jb
add
pop
fisttp
cwde
dec
sub
mov
pop
pop
xchg
inc
fstp
sbb
or
lahf
js
lods
adc
xchg
dec
jo
aam
push
push
daa
add
aas
pop
test
mov
xchg
mov
add
pop
sbb
enter
mov
cmp
pop
(bad)
cdq
loopne
adc
adc
shr
mov
fdiv
test
ss
js
sbb
cmp
add
adc
sub
and
or
loopne
(bad)
or
or
mov
add
push
and
std
retf
popa
lock
and
jns
es
sbb
fs
jmp
mov
(bad)
sub
fnstenv
mov
daa
je
jmp
inc
aaa
cmps
pop
lock
mov
das
push
dec
sub
ja
push
sbb
xlat
jne
or
sahf
mov
test
nop
(bad)
adc
ja
call
dec
pusha
imul
retf
cmps
hlt
fldenv
jne
je
or
jns
lea
sub
xchg
rol
mov
ret
aam
or
jmp
ret
pop
in
inc
or
or
add
pop
push
ret
test
jne
test
jp
nop
ds
les
inc
xor
xchg
inc
cmp
dec
loope
or
dec
or
jl
adc
rcl
pop
and
jno
xor
ret
xor
(bad)
hlt
test
add
stos
fs
cmp
and
mov
sbb
jp
mov
dec
adc
mov
cld
adc
jno
add
add
repnz
xor
sbb
icebp
ja
clc
retf
sbb
ret
lods
rol
clc
pop
lahf
adc
ror
shl
xchg
ds
outs
mov
pop
add
jmp
ss
call
icebp
push
(bad)
cmps
add
jmp
jae
mov
fild
dec
sub
jmp
or
jmp
in
mov
add
repnz
push
test
mov
mov
sub
(bad)
mov
xor
add
enter
inc
jge
shl
xchg
xchg
adc
jne
or
fidiv
pop
fwait
sub
shl
dec
jnp
(bad)
jecxz
daa
push
ficomp
add
add
fist
adc
ja
dec
test
dec
fnstcw
popa
push
into
add
imul
jnp
xchg
jmp
pop
popa
fstp
test
pushf
add
mov
and
cmp
nop
fs
mov
mov
cwde
adc
pop
add
mov
js
loop
scas
push
fsubp
fmul
js
cmc
xor
out
jns
jp
jnp
add
mov
or
add
int3
sahf
or
add
xchg
push
push
clc
test
ficom
dec
xchg
pop
inc
fcmove
add
movs
inc
push
pop
jg
dec
push
cmp
mov
and
movs
mov
adc
sbb
mov
or
xor
fmul
inc
mov
daa
jge
rcr
ins
sub
lock
and
loope
cs
xlat
and
loopne
mov
pop
adc
dec
mov
mov
sbb
xchg
out
sbb
(bad)
jmp
icebp
or
or
jmp
cmp
sti
or
sbb
int3
or
cmp
aaa
xchg
and
add
mov
ja
sub
or
add
xor
je
out
or
in
aam
cmovb
or
rcr
xchg
pop
fs
and
test
or
xor
add
js
sar
fild
scas
and
dec
cmp
or
mov
cmp
xor
loopne
xchg
pop
cmp
test
push
ins
inc
pop
nop
pop
jmp
cmp
dec
or
mov
pop
cmp
sub
add
add
mov
mov
shl
jg
cmp
jle
sbb
cli
jge
cmp
pop
cmp
adc
add
dec
sub
and
sbb
push
imul
push
mov
cmp
pop
xchg
pop
and
push
shl
cwde
icebp
fmul
ror
and
lods
mov
mov
pop
pop
xchg
inc
adc
mov
mov
cs
jl
rol
(bad)
xchg
fadd
rcl
enter
or
mov
cmp
test
add
mov
cmp
or
ins
inc
fbstp
dec
pop
es
sbb
sbb
xchg
fdiv
and
(bad)
or
bound
outs
outs
and
mov
mov
cmp
(bad)
jmp
pop
sub
cmp
jg
lea
or
add
mov
mov
or
inc
(bad)
sub
sub
jb
mov
jmp
cdq
push
mov
or
sar
xchg
imul
mov
jp
movs
iret
xchg
sub
push
sahf
ds
fcom
mov
lea
data16
or
ss
sub
neg
popf
pusha
sbb
and
int
jmp
add
mov
lea
or
ret
ret
fiadd
push
rcl
pop
iret
or
in
loopne
xchg
jle
sbb
xor
mov
add
std
sahf
mov
jecxz
frstor
mov
js
adc
adc
jne
cdq
hlt
je
clc
pop
mov
and
xor
sub
mov
pusha
push
aaa
mov
inc
cmp
sbb
push
dec
sbb
arpl
adc
sbb
call
pop
and
inc
push
inc
mov
in
mov
adc
and
enter
call
loop
rcl
mov
or
mov
call
cmp
mov
sahf
adc
cmp
ret
push
dec
loope
adc
fwait
rcl
test
mov
push
shl
(bad)
push
fdiv
lea
call
or
dec
test
inc
xor
mov
sbb
outs
add
adc
inc
jne
sbb
mov
cdq
cmp
sub
and
sbb
mov
rol
sub
add
dec
and
aas
xchg
add
std
pop
or
sub
lea
pop
adc
stos
shr
inc
mov
cmp
mov
push
sbb
push
push
add
mov
mov
mov
sbb
in
retf
or
and
mov
(bad)
out
xchg
sub
dec
jne
and
stc
aad
and
popf
inc
adc
push
in
and
aas
jl
cmp
int
das
jecxz
mov
hlt
fmul
inc
push
or
cmp
sub
adc
(bad)
dec
xchg
test
xor
push
ret
inc
fld
das
(bad)
cmps
sbb
dec
and
push
iret
sub
test
fadd
cmp
ins
stos
add
loopne
scas
rcl
xchg
mov
pusha
dec
inc
jne
movs
imul
imul
inc
inc
loopne
xor
(bad)
call
mov
inc
pop
sub
pop
in
cmp
(bad)
jle
sbb
rcl
cmps
mov
call
adc
es
pop
mov
or
jne
mov
and
fld
mov
mov
test
adc
loopne
fcom
mov
fsubr
fstp
sub
fmul
es
xchg
std
mov
mov
fld1
dec
dec
dec
pop
mov
shl
add
add
adc
jmp
push
ror
js
iret
dec
lods
add
mov
add
in
movs
adc
sbb
push
add
cmp
or
xor
pop
mov
mov
sub
mov
add
adc
add
sbb
fstp
fst
in
or
xchg
test
cmps
push
stos
adc
sbb
mov
push
mov
cdq
add
dec
mov
cmp
xchg
nop
adc
imul
fs
frstor
push
gs
jmp
scas
mov
lea
fwait
and
dec
push
pusha
jmp
mov
xlat
push
bound
dec
imul
sbb
dec
xchg
pop
(bad)
mov
inc
pop
or
mov
add
aad
jl
loop
shl
sti
cs
pop
mov
xchg
(bad)
sar
xor
mov
inc
clc
pusha
sbb
add
nop
sahf
or
ins
jmp
and
scas
shl
fisub
xor
mov
adc
fdivrp
jne
jbe
adc
sub
jmp
sbb
mov
xor
imul
pop
pop
(bad)
pop
xor
fadd
mov
sbb
fld
push
sbb
fld
lahf
call
dec
adc
mov
stos
xor
inc
ret
dec
in
cmp
push
cmps
mov
push
rcl
and
push
fstp
mov
cld
mov
add
dec
inc
xor
ficomp
sbb
lock
mov
or
dec
clc
and
sub
add
(bad)
icebp
and
push
fwait
sbb
xchg
mov
cmp
and
into
sub
cmps
add
(bad)
out
adc
popa
mov
push
or
ret
inc
add
sub
das
outs
scas
inc
or
popa
aad
add
das
and
xor
xchg
sub
mov
or
jl
in
in
xchg
xchg
and
fidiv
xor
fsub
sbb
and
sbb
xor
out
fisttp
mov
xchg
sub
and
sti
sbb
adc
neg
add
cmp
jnp
inc
xchg
mov
sbb
cmps
jbe
mov
inc
or
call
adc
and
test
jp
sbb
add
sub
dec
inc
inc
pusha
loope
or
add
sbb
adc
dec
test
sub
sbb
add
ja
pop
sbb
inc
jmp
add
xor
dec
pop
xchg
cli
adc
sar
js
je
push
popa
sbb
mov
adc
jnp
enter
push
int3
mov
inc
sbb
(bad)
sub
add
jae
and
bound
dec
add
adc
dec
rcl
and
clc
mov
xchg
repnz
lahf
(bad)
jge
mov
adc
mov
sub
xor
(bad)
loopne
push
es
ja
and
popa
lock
movs
fiadd
and
not
adc
or
pusha
inc
pusha
push
push
or
push
xchg
mov
pop
dec
mov
loopne
leave
adc
je
and
mov
push
cmp
cwde
sub
popf
push
pop
jl
out
dec
sbb
push
xor
mov
mov
inc
inc
dec
adc
les
int3
jmp
pop
mov
adc
pop
add
add
sub
mov
pop
inc
nop
mov
inc
mov
mov
out
ficomp
dec
cs
push
dec
or
sbb
ror
fs
fst
inc
out
fwait
cmp
push
test
mov
jmp
sbb
cmp
fistp
or
leave
call
dec
ret
push
inc
sbb
push
sahf
(bad)
sbb
xor
mov
dec
sti
add
adc
or
iret
add
pop
pop
or
sbb
setnp
fnsave
xchg
dec
pop
cmp
mov
clc
lods
inc
add
shr
ss
dec
inc
call
lds
mov
popf
pop
inc
dec
fidivr
neg
fs
outs
push
jae
cmp
mov
pop
xor
ret
jmp
push
js
push
add
push
dec
push
jno
xchg
push
shr
push
xchg
mov
or
push
mov
mov
inc
push
and
inc
lsl
push
xchg
and
sbb
out
or
push
dec
cmp
xchg
bound
jo
enter
push
int
dec
xor
inc
adc
rcr
imul
xchg
mov
les
bound
inc
les
dec
push
pop
(bad)
cmp
jecxz
and
xchg
bound
rol
ret
lahf
movs
lods
imul
ret
or
xor
jb
add
scas
dec
es
sub
cmp
pop
push
scas
enter
adc
mov
adc
gs
mov
pop
mov
rcl
or
int3
add
pop
popf
in
jmp
adc
or
mov
mov
inc
ret
add
(bad)
push
adc
add
inc
sub
add
pop
int3
push
ins
jmp
jne
mov
sub
push
dec
adc
in
xchg
rol
mov
loope
and
push
dec
xchg
or
push
mov
shl
dec
call
test
mov
adc
xor
test
inc
test
and
adc
call
mul
sub
sub
fmul
sbb
add
xchg
adc
push
pop
xor
std
sub
mov
push
jae
arpl
mov
inc
je
pop
aam
mov
jns
rcl
mov
xchg
fimul
xchg
inc
inc
es
loop
dec
sbb
ja
stos
inc
or
cs
push
mov
jnp
jbe
add
cmp
pop
pusha
ss
sub
sub
inc
jbe
gs
inc
out
test
sub
push
sub
xor
cmp
ja
fcom
dec
or
call
xchg
dec
pusha
push
dec
out
pop
jge
cmp
loope
inc
push
adc
(bad)
rol
xor
adc
lock
sbb
mov
sbb
jae
push
xor
sbb
ins
rdtsc
sub
icebp
movs
fcmovnb
and
adc
mov
pop
call
test
test
dec
cmp
add
ret
out
loop
or
or
lock
movs
test
sub
inc
lea
push
in
add
(bad)
add
xor
xchg
es
call
in
inc
mov
test
int3
jmp
inc
sbb
movs
xor
lock
out
ins
or
in
mov
or
and
stos
pop
jecxz
ror
push
jl
fdivrp
sbb
dec
add
and
and
adc
xor
jg
mov
clc
mov
or
icebp
call
int3
sbb
pop
mov
movs
pop
or
jo
mov
adc
cmp
and
xchg
test
jo
ret
sbb
inc
pop
pop
jmp
iret
inc
ja
bound
les
sub
push
xchg
dec
add
stos
jmp
sahf
dec
ror
mov
xchg
mov
cmp
xor
pop
jo
retf
jne
pop
shl
test
xor
mov
ds
loop
cmp
push
test
movs
xchg
nop
mov
dec
adc
(bad)
add
hlt
mov
pop
shl
sub
inc
mov
imul
mov
pushf
adc
outs
push
push
fs
add
inc
cwde
xor
mov
aas
and
adc
dec
push
mov
data16
test
add
outs
xchg
push
jno
jl
inc
ss
cmp
or
popa
mov
addr16
xchg
imul
jmp
(bad)
add
arpl
add
mov
cli
sbb
adc
pop
add
repz
mov
sub
in
into
movs
lods
cmps
cmp
add
add
jge
cmps
imul
xor
xchg
sub
scas
add
fmul
push
mov
cmp
pop
retf
nop
and
sub
adc
sahf
fld
push
ror
pop
xor
or
dec
mul
movs
sbb
mov
mov
xchg
push
stos
or
mov
cmps
add
je
xlat
sbb
nop
sub
test
dec
push
lods
push
fwait
pop
push
push
or
ss
ret
into
pop
repnz
xor
sbb
or
xchg
shr
push
movs
fild
pop
dec
add
jno
or
cdq
hlt
movs
nop
jns
sub
sub
(bad)
test
pop
out
adc
nop
or
cmps
jno
or
and
and
push
push
movs
inc
lods
pop
cdq
inc
gs
and
adc
lods
addr16
or
or
push
out
mov
xchg
push
add
(bad)
mov
mov
fld
jmp
lock
(bad)
loope
popf
or
add
inc
fnsave
adc
dec
add
cmp
clc
xor
or
or
add
xchg
xor
mov
or
jbe
movzx
add
retf
mov
lods
int
xchg
mov
xchg
sub
mov
jo
pop
aam
sub
add
mov
pop
jno
int
mov
add
mov
add
mov
pop
add
lock
and
fmul
and
inc
sbb
or
xchg
and
in
dec
sub
inc
movs
sbb
jb
inc
(bad)
xor
cld
jl
dec
add
imul
int
test
jnp
jg
clc
ret
push
ret
ret
jecxz
add
sub
xor
movs
sbb
repz
push
icebp
push
xor
in
sub
nop
ror
push
pop
xor
push
or
add
or
add
xchg
sub
test
(bad)
sbb
and
and
es
pusha
mov
mov
push
jge
js
xor
call
cmp
in
sbb
cmp
in
push
or
inc
sub
in
add
nop
call
loope
sbb
xor
mov
gs
aas
imul
jle
cdq
inc
xor
mov
nop
leave
clc
popa
movs
scas
stos
pop
jno
rcl
sbb
mov
pop
es
add
push
adc
push
iret
js
cmps
sub
pop
dec
mov
inc
xchg
lods
mov
jmp
inc
push
fist
xchg
jmp
clc
sub
mov
push
imul
mov
add
inc
pop
sti
and
(bad)
out
add
out
sub
pop
pop
mov
inc
inc
aas
je
mov
and
das
inc
enter
mov
shl
sub
sbb
dec
inc
std
and
or
rcr
retf
(bad)
(bad)
stc
mov
sub
jg
xchg
mov
and
push
ins
jnp
xor
div
cmps
fsub
call
add
jmp
or
inc
inc
and
mov
sub
inc
es
push
sbb
mov
mov
dec
lds
push
mov
pop
inc
jb
sahf
cmp
fldenv
fst
lds
cmps
mov
stos
test
inc
retf
or
bnd
ins
pusha
inc
cmps
lds
fdiv
lds
imul
push
inc
data16
sub
push
push
movs
push
mov
adc
call
adc
fs
add
inc
inc
pushf
sub
ficomp
and
xchg
push
arpl
stc
call
push
nop
or
adc
(bad)
push
xor
push
les
pusha
xchg
inc
push
xor
ret
xchg
pop
push
jae
add
leave
add
add
aam
and
test
loope
loopne
sbb
les
push
mov
dec
sbb
and
jns
inc
je
lock
lock
call
loopne
out
rcl
cmp
push
sbb
mov
and
cwde
push
cmovae
push
leave
and
push
mov
xchg
or
inc
dec
fidivr
cmps
ret
ret
pop
sub
pop
push
dec
pop
jbe
sbb
xchg
xor
lods
(bad)
sub
shr
loope
pop
jecxz
mov
and
push
imul
or
pop
les
cmp
sub
ret
sub
enter
sub
fisttp
add
pop
mov
jmp
popf
fdivr
fmul
mov
push
leave
popf
inc
inc
stos
inc
push
add
and
adc
jl
or
pop
mov
jmp
ja
xor
jne
xor
mov
pop
lods
inc
pusha
and
das
xor
jg
push
push
mov
xchg
mov
and
xor
int3
std
jne
add
or
jb
xor
cs
add
je
jae
lods
inc
fsub
outs
add
out
cmc
jne
enter
enter
lea
stc
in
loopne
mov
sub
adc
mov
repnz
daa
xor
inc
cli
dec
dec
sar
add
sub
inc
push
mov
sar
clc
loop
mov
dec
mov
cmc
dec
inc
push
or
icebp
or
dec
pop
cmp
repnz
push
(bad)
cdq
pop
adc
pop
push
mov
mov
cmpxchg
dec
stos
loop
xchg
add
inc
or
push
or
(bad)
cwde
pop
es
fcomi
iret
add
(bad)
pop
jecxz
jne
lods
sub
js
cmc
clc
mov
lock
adc
xchg
xchg
mov
idiv
mov
jmp
or
xor
push
jbe
imul
or
cli
jmp
nop
retf
not
pop
and
pop
adc
imul
mov
jmp
dec
pop
cmp
or
les
mov
call
and
and
out
or
lds
inc
test
les
add
(bad)
or
ins
xchg
mov
pop
es
push
xor
push
xchg
push
or
(bad)
jne
pop
add
loope
(bad)
push
inc
inc
mov
push
stos
pop
bswap
js
sbb
sub
pop
sbb
enter
fst
(bad)
icebp
add
jmp
cmp
ret
mov
(bad)
call
cld
imul
jne
push
xchg
push
pop
mov
hlt
pop
hlt
sub
out
push
cmp
imul
fidivr
mov
ja
xchg
sub
xchg
dec
je
or
imul
mov
call
or
in
sub
jb
lea
out
retf
les
and
pop
mov
arpl
adc
or
sub
pop
js
dec
dec
push
loop
rcr
mov
aas
sub
pop
xchg
cmp
je
in
mov
pop
push
add
ins
pop
or
xlat
sub
popf
movs
leave
mov
sbb
mov
or
or
mov
adc
inc
pop
test
cmp
ret
(bad)
call
lock
rol
shld
cwde
xor
sbb
gs
add
and
jb
pop
rol
or
mov
dec
or
ret
cmp
jb
adc
xor
xchg
inc
cmp
sub
xor
(bad)
shl
cmp
or
cmps
gs
sti
arpl
das
rol
dec
cmp
dec
or
(bad)
pop
sti
mov
push
movs
add
xor
mov
ret
xchg
push
adc
pop
bound
sub
xor
stos
int
mov
dec
push
ss
enter
adc
cmp
inc
dec
push
adc
leave
and
mov
das
movs
mov
mov
push
xchg
push
cmc
cmc
pop
push
pop
adc
mov
or
mov
ins
adc
shl
pop
jbe
pop
add
sub
je
scas
and
add
push
hlt
fwait
inc
pop
clc
and
imul
xchg
push
ror
sub
in
inc
in
fs
out
pop
adc
sbb
pop
pop
sti
call
mov
dec
jmp
push
js
and
js
xor
loop
pop
sar
les
pop
and
rol
jno
pop
adc
jae
sbb
jge
movs
arpl
mov
call
jmp
(bad)
repnz
pop
sbb
jg
mov
push
mov
inc
xchg
sti
fisttp
push
cld
add
dec
cmp
jbe
add
jmp
or
jg
jne
mov
jbe
mov
dec
mov
mov
sbb
xchg
dec
mov
inc
cmp
jb
cwde
inc
jecxz
adc
mov
add
out
jmp
add
in
or
xchg
in
mov
ins
fnstenv
add
or
cmp
and
dec
add
daa
jb
sbb
push
imul
popa
jmp
pop
sbb
push
out
push
lock
cmp
xor
pop
sbb
dec
addr16
inc
or
leave
cmp
or
mov
xor
mov
aaa
jne
cmp
or
push
jmp
or
mov
pop
(bad)
pop
div
xchg
mov
not
icebp
pusha
jmp
adc
imul
cmp
pop
mov
sub
pusha
mov
popa
dec
cmc
shr
xor
movs
dec
ja
jne
mov
dec
adc
sbb
mov
inc
or
stos
or
ja
add
jae
push
sub
pusha
popf
dec
arpl
or
mov
ins
loope
add
repz
push
xchg
mov
stc
pop
imul
push
nop
adc
int
or
adc
mov
or
adc
arpl
pushf
lea
stos
jns
sbb
in
loope
jae
jo
xlat
pusha
mov
jo
mov
loopne
shl
xlat
into
and
sbb
repz
jae
add
sbb
scas
dec
jge
ror
lock
loopne
jb
adc
cwde
push
push
mov
loopne
outs
add
jae
fs
push
outs
xor
ins
test
ret
cmp
xor
cmps
lea
cwde
and
ret
ret
dec
xchg
mov
sub
jmp
inc
xor
pop
xchg
jbe
and
(bad)
jmp
cdq
inc
sbb
and
adc
push
jbe
aad
xor
mov
loopne
jns
push
shl
jae
jle
add
repz
call
shl
iret
add
mov
or
adc
jno
add
sbb
nop
fwait
repnz
mov
jb
sbb
cmc
or
jmp
fdiv
lds
xchg
and
xor
push
imul
sbb
iret
and
ins
sbb
inc
outs
retf
lock
pusha
mov
js
out
lods
or
ret
(bad)
xchg
cmp
scas
adc
sbb
and
rcl
arpl
push
sbb
stos
mul
loopne
sub
jbe
cmps
js
mov
cld
and
add
movs
jne
sub
je
and
add
inc
inc
ret
xor
sub
jnp
les
data16
push
icebp
mov
cmp
and
adc
ret
in
pusha
add
jl
or
inc
jmp
neg
out
or
or
cmp
mov
std
outs
push
mov
adc
dec
(bad)
jle
xchg
scas
push
mov
or
and
and
ss
cmp
popa
sub
xor
mov
jns
sbb
mov
pop
adc
sub
mov
cmp
addr16
lea
jne
sti
lods
cmp
sub
mov
sbb
mov
and
push
adc
popa
add
aad
shl
pop
fs
int3
aas
(bad)
rcl
pop
and
dec
sub
(bad)
hlt
or
push
push
mov
xor
nop
cwde
xchg
and
ins
mov
popf
test
fcom
jmp
movntps
sub
jne
shl
lods
stos
int
adc
out
mov
add
pop
fst
jne
dec
add
add
(bad)
jmp
std
test
inc
or
cmps
mov
hlt
in
inc
xchg
adc
or
pop
test
mov
arpl
in
movs
in
ins
dec
add
or
dec
xor
mov
ror
sbb
jo
or
clc
mov
and
sti
test
and
ror
aas
jb
outs
ins
or
jo
loop
sub
enter
push
mov
push
xor
mov
add
sub
dec
and
push
cmp
push
or
jmp
outs
data16
mov
in
and
sbb
push
mov
mov
jbe
sub
or
jnp
xor
sub
sbb
mov
cmp
fcmovnb
sub
push
add
push
and
jne
mov
lock
push
inc
sar
pop
lea
rcl
mov
mov
dec
call
iret
out
popf
not
js
dec
ret
(bad)
pop
mov
mov
jne
mov
xchg
or
adc
cmp
leave
aad
mov
pop
cld
add
and
imul
xchg
daa
pop
fild
mov
fistp
xor
mov
jne
sub
ss
jmp
ins
and
lock
add
call
lock
test
outs
cmp
dec
pop
mov
add
mov
fstp
bound
add
and
sbb
pop
movs
add
(bad)
sub
das
pop
dec
ins
sar
lds
jbe
loopne
ret
ins
imul
and
jg
and
sub
js
jne
int
rcl
add
aam
outs
pusha
inc
(bad)
je
ret
add
or
push
cmp
(bad)
jp
test
dec
push
scas
mov
cmp
and
jnp
in
jbe
sbb
fs
nop
push
jmp
push
cmp
jb
retf
adc
pusha
push
jns
jne
mov
fst
sub
leave
push
je
push
cmp
push
ss
sub
daa
xor
lea
xchg
xor
push
adc
loopne
pushf
jmp
loopne
xor
cmc
das
jmp
or
dec
and
pop
enter
xor
rcl
ret
sbb
mov
adc
sbb
mov
int3
outs
out
loopne
or
outs
cdq
sbb
add
or
jle
cmp
out
push
ret
in
mov
icebp
jecxz
je
mov
jbe
call
mov
sbb
icebp
push
add
dec
pop
iret
lea
push
pop
in
out
jne
mov
push
xchg
ss
dec
sub
sub
cmps
retf
push
leave
push
mov
stos
pusha
lock
out
inc
mov
std
adc
dec
int
imul
ins
add
mov
shr
cli
push
push
add
popf
mov
iret
ds
gs
mov
mov
sub
xchg
mov
add
push
and
sbb
nop
jne
sub
js
sub
sar
cmp
cld
test
movs
out
cmp
jne
enter
fisub
rcr
sbb
and
sub
inc
mov
push
mov
inc
xor
adc
(bad)
(bad)
int
call
lods
jg
cmps
sub
adc
add
test
pop
cmp
mov
sti
ss
mov
into
aad
out
pop
imul
cs
dec
push
in
xchg
cmp
jmp
xchg
mov
int
sub
mov
jbe
and
test
sub
jb
sbb
xchg
retf
and
pushf
sub
and
in
mov
push
movs
jnp
bound
mov
push
aam
cs
data16
inc
mov
aam
call
adc
mov
adc
or
inc
inc
imul
or
push
adc
inc
mov
ins
xchg
fstp
dec
sub
jo
push
cmp
mov
and
push
aas
mov
std
or
icebp
mov
add
hlt
xor
or
push
fmul
or
or
push
enter
pushf
imul
test
push
or
out
jp
xchg
jo
je
ret
mov
mov
(bad)
in
vmwrite
into
xor
sub
mov
mov
fmul
dec
jae
push
or
out
sbb
jmp
sub
into
dec
aas
icebp
mov
cmp
sbb
xlat
retf
aas
shl
cs
and
fld
jno
sub
enter
xlat
push
jo
arpl
outs
push
loop
mov
sar
xchg
enter
lods
push
dec
push
pop
adc
cs
clc
jp
push
pop
ds
jnp
jp
sub
pop
inc
call
pop
ret
dec
mov
ins
xchg
das
inc
and
jle
dec
inc
pop
js
pop
repnz
cmps
dec
add
loopne
js
jl
mov
and
add
mov
push
add
push
gs
cmp
cmp
adc
adc
or
cld
pop
cmp
jne
or
jno
adc
xor
out
and
jne
sbb
and
xchg
imul
and
inc
sub
iret
movs
test
or
push
cmp
ja
cmp
jne
aaa
mov
cmps
cmp
jb
pop
cmc
push
cmp
push
and
mov
push
mov
push
out
inc
sub
add
test
ds
mov
xor
adc
cs
retf
lods
nop
pop
jle
sti
push
inc
jne
and
sub
call
aam
inc
sbb
mov
ret
std
mov
sub
and
loope
jbe
test
cmp
je
cs
or
aam
sbb
jg
jbe
ja
jp
sbb
je
sub
sar
add
jbe
push
push
mov
and
sub
and
mov
and
push
sahf
into
xor
sub
cld
jbe
inc
pop
shl
div
and
fs
xchg
sbb
and
cwde
call
jo
sbb
call
dec
ror
enter
inc
enter
aas
and
sbb
inc
outs
xor
adc
or
jo
pushf
and
and
mov
pop
adc
mov
or
mov
outs
mov
(bad)
(bad)
int
inc
push
push
jmp
gs
shl
ss
cmp
and
out
pop
pushf
ret
push
shl
movs
mov
xchg
adc
cmp
xchg
and
repnz
jmp
dec
pop
jae
sbb
test
mov
push
xchg
jne
mov
pop
rol
aad
imul
ror
repnz
cld
push
je
push
clc
sbb
cmp
shl
(bad)
cmp
fcomp
inc
push
sbb
push
imul
lahf
adc
or
shl
adc
add
sub
jmp
xchg
repnz
mov
loopne
pop
div
cmp
aaa
lea
cmp
add
sub
mov
les
call
loopne
adc
js
and
fstp
scas
sub
add
jnp
js
fsubr
or
lods
push
dec
test
push
hlt
adc
fisub
in
adc
scas
or
cmp
sub
and
pusha
mov
pop
(bad)
lea
mov
mov
lahf
lahf
jne
lock
jae
jmp
in
jne
mov
or
mov
aam
and
pusha
jl
inc
loopne
fldz
add
mov
leave
inc
adc
aam
xor
pop
retf
mov
cmp
cli
das
ss
xor
leave
push
push
in
outs
mov
or
sub
dec
xor
xor
add
pop
lock
idiv
lods
add
ja
jmp
es
jnp
push
add
jne
pop
rcr
push
out
xchg
push
sub
rol
cli
add
sub
loope
add
add
mov
and
cmp
rol
adc
sar
movs
push
loopne
lea
add
and
cmp
dec
in
pop
add
scas
and
mov
push
mov
mov
movzx
pop
sbb
cwde
call
dec
popf
ja
add
dec
push
mov
add
pop
pusha
mov
and
inc
adc
mov
(bad)
cmp
jbe
jecxz
dec
mov
icebp
in
jb
(bad)
(bad)
neg
ror
out
and
dec
pop
pop
sahf
and
add
mov
adc
jmp
sub
add
rep
jmp
add
mov
ds
rcr
add
test
cmp
loopne
(bad)
mov
nop
es
adc
push
inc
and
mov
mov
mov
mov
in
fiadd
or
lods
adc
xor
dec
movs
imul
jbe
inc
add
add
or
push
mov
lods
movs
cld
aas
iret
repz
xchg
mov
inc
(bad)
in
cmp
repz
iret
repz
lock
hlt
clc
clc
cld
and
ins
cmp
cmp
fdivr
sbb
xchg
cmp
jmp
loopne
xchg
mov
pusha
int
pop
sti
and
cmp
and
lea
xchg
sub
jl
cld
pop
and
std
test
out
jp
neg
sar
xchg
cmp
xor
stc
sub
inc
inc
jnp
cmp
add
int3
fiadd
jl
retf
fisub
add
sahf
inc
push
out
push
add
xchg
push
mov
rol
pop
add
loop
iret
jnp
lea
or
push
sub
cmp
repz
inc
dec
push
arpl
repz
ss
sbb
adc
cmp
repz
adc
inc
repnz
or
add
js
neg
or
xchg
test
xor
popa
(bad)
push
add
and
daa
cli
mov
ja
cmp
adc
shl
nop
cli
pop
add
fnstcw
loope
mov
test
jle
(bad)
out
imul
and
mov
push
inc
mov
adc
or
inc
test
scas
sub
push
jge
pop
sbb
loopne
jmp
add
loop
add
stos
in
push
in
lods
mov
jbe
out
sbb
and
ret
out
sub
inc
jns
mov
icebp
cmp
jl
push
call
gs
xchg
pop
loope
test
xor
cmp
jb
cmp
mov
cmps
mov
push
ins
test
add
pop
push
or
add
jno
and
pop
(bad)
and
js
cmps
pop
into
or
inc
sbb
es
repz
cmp
test
pusha
and
out
ins
rcl
jl
(bad)
cmp
mov
addr16
mov
and
add
mov
xor
retf
movs
add
fadd
sti
add
or
dec
or
push
pop
ret
mov
add
dec
ret
mov
ret
int
adc
mov
ins
pop
xchg
retf
js
xchg
adc
mov
push
dec
pop
mov
inc
xchg
imul
fild
ja
push
dec
push
sub
sbb
jmp
and
fimul
loopne
pop
add
adc
inc
pop
mov
sbb
test
or
shrd
fild
mov
jb
mov
and
bswap
sbb
add
dec
fs
(bad)
es
sbb
fmul
and
lahf
push
sar
mov
cmps
pop
ret
sbb
enter
je
push
push
sbb
fcomp
mov
pop
push
aaa
call
xchg
jo
fild
clc
pop
adc
xor
xor
pop
mov
fdivr
or
jmp
test
adc
xchg
test
xchg
jle
icebp
push
cmp
add
pop
into
and
out
inc
mov
jo
pusha
add
and
inc
cmps
jb
sub
outs
(bad)
dec
xchg
xchg
loopne
push
jnp
pop
ret
mov
jg
inc
sbb
in
push
aaa
xor
(bad)
hlt
and
test
push
or
lock
jle
push
push
mov
mov
movs
jns
sbb
paddw
mov
ret
ins
sub
jo
sbb
pop
lods
loop
add
xor
mov
(bad)
pop
test
mov
rol
sub
or
push
or
fimul
or
sbb
pop
or
push
and
sub
sub
cmp
je
ret
add
xor
retf
cld
sbb
repz
mov
das
bound
sub
add
dec
push
mov
push
add
out
ds
les
add
inc
fsubr
and
stos
hlt
iret
fdivr
push
mov
add
push
mov
fdivr
mov
icebp
mov
jo
inc
lea
dec
daa
int
repnz
mov
out
push
mov
mov
jns
dec
and
or
test
dec
js
mov
inc
test
clc
movs
imul
xlat
inc
enter
aas
and
in
into
dec
aas
xchg
xor
daa
hlt
adc
bound
sub
jnp
sub
sbb
xchg
sti
mov
add
into
ficom
les
out
jne
add
inc
fistp
dec
pop
jg
add
out
mov
mov
ja
sbb
pushf
pusha
inc
fild
xor
sbb
ret
leave
bound
push
aam
ins
jmp
repz
aam
jo
sbb
jb
and
xchg
sub
addr16
jle
aad
adc
xchg
or
cmps
retf
dec
or
adc
dec
or
es
lods
dec
loopne
imul
mov
or
push
not
movs
sub
add
or
adc
mov
rcl
je
inc
mov
lds
xor
shr
push
pop
inc
push
mov
gs
cli
sub
add
call
push
xlat
jnp
movs
pop
clc
jb
hlt
or
loop
pusha
clc
jb
sub
clc
sub
jge
xor
mov
xor
mov
lock
fadd
fst
dec
sub
xor
and
movsx
push
sbb
sub
es
or
or
(bad)
int
inc
adc
adc
jo
inc
sbb
jmp
push
fwait
inc
cmps
jmp
shr
outs
rcl
xor
jo
sbb
mov
(bad)
stos
mov
adc
or
mov
xor
mov
test
jmp
addr16
push
adc
test
add
or
jmp
mov
cmp
ins
rcl
push
js
pop
adc
and
xor
popa
sbb
adc
inc
xchg
lock
fld
fwait
or
sbb
or
test
sar
mov
cli
test
jmp
(bad)
lea
pop
ret
sub
sub
inc
loope
xor
cld
mov
inc
ins
fwait
lods
fcomp
mov
ret
lock
dec
adc
(bad)
iret
cmp
iret
test
sub
or
push
inc
cli
fcmovnb
sub
adc
mov
mov
shl
mov
(bad)
xor
jmp
xor
outs
loope
add
xor
(bad)
out
xor
outs
inc
sub
xchg
inc
cld
cmp
je
test
ss
sbb
cmp
je
test
je
loop
add
jns
adc
xchg
pop
movs
xor
inc
or
test
jae
dec
sub
xchg
mov
inc
ror
imul
sahf
xor
add
mov
xor
mov
push
inc
mov
cmp
jb
sti
push
clc
in
lea
push
adc
push
pop
call
ficom
pop
cmp
imul
lds
in
pop
loopne
test
dec
ret
es
dec
or
loop
clc
ror
push
mov
scas
popa
sbb
and
mov
out
cmp
cmp
aam
dec
leave
or
inc
inc
(bad)
(bad)
ror
scas
bound
xor
sti
push
fisttp
mov
fcom
push
or
pop
out
adc
bound
inc
or
adc
enter
inc
retf
jne
loop
add
adc
mov
shr
cmp
adc
ja
push
add
idiv
push
shl
or
push
mov
pop
jmp
xor
add
test
push
mov
or
mov
ror
jle
add
adc
js
cli
pop
loop
dec
inc
cld
cmp
jbe
div
pop
and
add
add
jo
inc
imul
aam
add
inc
ficomp
dec
mov
xor
xlat
data16
add
jbe
out
je
mov
cdq
(bad)
pop
daa
pop
push
xchg
mov
sbb
xor
and
mov
and
mov
and
out
xchg
and
or
xchg
or
inc
popf
inc
mov
(bad)
jmp
sub
push
ret
lds
sbb
mov
inc
sbb
and
mov
jno
xchg
sbb
push
lahf
rcr
scas
pop
and
jmp
cmp
jg
push
fnstcw
data16
and
fild
push
dec
test
xlat
and
std
jmp
movq
movaps
scas
fnstsw
xor
jle
push
add
mov
cli
rcl
retf
mov
add
inc
jge
repz
xlat
(bad)
or
jg
(bad)
dec
mov
xchg
ret
adc
(bad)
jnp
push
adc
and
in
add
(bad)
pop
inc
aam
adc
or
add
adc
mov
sar
add
or
push
mov
mov
pop
sti
or
mov
addps
int
sub
fisub
dec
jns
ret
rol
dec
sbb
lods
and
fld
hlt
test
pop
test
dec
xchg
dec
or
mov
int3
dec
xchg
or
jne
push
add
pop
sub
jg
jl
cmp
jb
imul
sbb
cmp
sahf
xchg
adc
sbb
jg
sbb
jns
pusha
clc
fild
and
xchg
dec
hlt
ror
cld
jp
push
inc
loop
mov
jl
push
jl
mov
pusha
and
test
cdq
pushw
(bad)
ja
jg
cmp
sub
sub
test
mov
mov
cdq
sub
sbb
push
arpl
pop
xchg
xor
cmp
cmp
je
popf
sbb
cdq
and
aam
push
push
dec
mov
xchg
push
fisubr
stc
sbb
push
xor
ja
dec
and
stos
sub
scas
dec
push
mov
or
cmp
and
sar
aaa
ins
fcmovne
ja
fs
add
add
sub
fisub
ins
repnz
data16
imul
data16
call
add
and
sub
fs
jo
les
sar
or
bound
sbb
fdiv
jmp
sbb
cmc
jl
out
jo
cdq
stc
lea
dec
push
push
hlt
jbe
xchg
sub
add
dec
(bad)
repz
fs
sbb
pop
mov
pop
mov
enter
out
or
enter
jno
jg
adc
pop
adc
xor
mov
adc
mov
sub
lea
cmps
popa
mov
aad
add
pop
add
iret
add
in
add
xor
add
retf
fcomp
mov
and
add
add
enter
push
push
push
add
pop
pop
in
call
or
inc
scas
sbb
cmp
cld
enter
add
or
xchg
pop
enter
or
mov
or
enter
or
jb
iret
push
push
push
punpckhwd
pop
enter
adc
mov
pop
adc
pop
in
adc
and
and
adc
adc
rcl
add
adc
adc
xor
adc
push
fs
push
pop
and
enter
and
movs
mov
sbb
out
repnz
add
cmp
fmul
mov
sbb
sbb
sahf
ja
je
push
sbb
xor
xor
sbb
iret
push
push
inc
neg
pop
ret
add
popa
xchg
ins
cld
push
add
sub
sbb
(bad)
in
and
push
xchg
cmp
xchg
push
jbe
mov
push
sbb
in
push
in
imul
sub
rol
adc
out
xchg
mul
xor
mov
xchg
out
out
in
pop
mov
sub
call
and
adc
repnz
push
mov
cmp
cmp
jmp
jmp
jmp
push
imul
in
in
dec
fsubp
aad
aad
in
cmp
mov
out
out
xchg
in
cmp
out
or
je
leave
and
lock
and
mov
icebp
das
repnz
enter
adc
repz
pop
and
std
hlt
hlt
xchg
push
jnp
imul
std
cmc
sahf
xchg
stos
cmp
mul
popa
in
mov
sbb
inc
call
jns
scas
cmp
aas
stc
stc
dec
sahf
xchg
sub
cli
cli
das
nop
addr16
sti
sti
fdivrp
rol
cld
cld
je
cld
push
cmps
in
fist
jne
mov
xor
sbb
(bad)
(bad)
xor
xchg
ret
inc
add
ret
pushf
sbb
int
or
pusha
or
dec
shl
cmp
jecxz
fsubp
push
xchg
xor
mov
cmp
aam
stos
or
out
xchg
leave
or
(bad)
sti
add
xchg
pop
jo
or
dec
jmp
jmp
jns
xor
or
and
and
cli
or
(bad)
cli
out
out
out
xchg
pop
push
and
lock
add
xor
or
repz
xchg
sbb
add
stc
(bad)
call
div
xchg
stos
pop
pop
div
or
push
in
ret
xchg
stc
sbb
and
sti
sti
xchg
or
leave
sbb
cmp
jmp
scas
and
mov
cli
or
inc
push
popf
fadd
(bad)
clc
mov
(bad)
dec
loop
sub
shl
loope
in
repnz
clc
and
inc
dec
add
out
jns
inc
out
fdiv
out
and
loope
neg
pop
or
inc
test
inc
repnz
idiv
inc
mov
pop
test
xchg
in
aad
into
mul
scas
test
or
ins
repnz
pop
push
retf
or
loope
stos
and
mul
out
div
push
ja
push
nop
jo
dec
loope
jns
push
mov
push
stos
xchg
cmp
call
das
test
adc
cmc
loope
cmc
add
push
and
hlt
or
xlat
inc
pushw
(bad)
data16
push
mov
add
dec
aad
adc
push
cmp
loope
loope
leave
or
pop
hlt
add
xchg
pop
cmp
mov
sub
in
hlt
in
pop
pop
pop
retf
or
repz
and
or
xchg
repz
aam
ins
repz
repz
or
or
in
pop
xchg
adc
mov
rcl
or
test
icebp
cmp
and
movs
sbb
(bad)
push
repnz
repnz
cmc
cmc
xchg
adc
pop
mov
and
jb
mov
cwde
icebp
or
out
stc
mov
dec
icebp
xor
(bad)
mov
adc
or
push
jmp
mov
test
xchg
hlt
or
and
mov
mov
(bad)
push
sub
ffreep
push
sub
jnp
inc
sahf
xchg
stos
jge
push
add
data16
mov
(bad)
test
mov
inc
add
jne
stc
mov
cs
dec
icebp
dec
add
movs
xchg
mov
add
push
or
xor
or
xor
fwait
int
lock
add
push
push
call
out
ins
push
xchg
aad
adc
addr16
ins
cwde
sti
pushf
int
mov
(bad)
int
jns
je
das
aas
xchg
in
fwait
out
ss
mov
data16
fcomi
sahf
and
(bad)
fbstp
mov
pop
sub
add
mov
and
imul
mov
les
(bad)
aas
adc
cli
add
xor
fld
sub
mov
cmps
inc
std
addr16
add
mov
mov
adc
inc
neg
clc
je
rep
mov
dec
jmp
cli
mov
cmp
sbb
dec
pop
aas
fild
pusha
aaa
test
ret
popa
rol
dec
and
add
imul
fild
clc
ret
test
in
mov
jb
test
adc
jnp
or
je
int
lods
ret
mov
adc
bound
enter
sub
pop
ror
mov
cmps
loope
dec
push
jmp
cwde
movs
test
add
out
repnz
sbb
jmp
dec
popa
data16
loopne
retf
push
jo
push
test
sub
push
jmp
das
sar
mov
lock
sbb
popa
add
jnp
test
mov
cmp
ret
pop
pop
ins
int3
adc
xchg
push
fldenv
sub
outs
and
adc
mov
clc
pop
adc
xchg
fbstp
and
icebp
sub
add
inc
mov
cmp
cmp
jbe
push
outs
adc
cld
adc
sbb
add
push
adc
lds
sbb
xlat
cmp
jle
fdiv
cld
js
or
into
fwait
pop
inc
mov
mov
sbb
push
data16
adc
cmp
or
aad
and
cmps
stc
pop
push
adc
ror
and
xor
and
xchg
inc
jne
add
add
fisubr
ins
lock
rep
sbb
and
aad
add
adc
push
push
test
add
mov
push
mov
fcom
mov
lds
ror
out
inc
pusha
call
or
pop
std
data16
xor
cli
imul
stos
and
or
loope
pop
gs
push
inc
js
cmps
or
mov
retf
sbb
cmps
dec
mov
push
jo
sub
mov
fidivr
aad
ja
xor
jmp
jnp
dec
mov
dec
mov
in
push
cdq
pop
jle
add
or
and
or
mov
jge
adc
mov
sbb
cmp
ja
lods
rol
jbe
jge
popa
adc
mov
jle
iret
add
mov
rol
cmp
(bad)
bound
popa
bnd
pop
and
dec
(bad)
jg
dec
stc
in
jne
pop
dec
add
mov
sub
xchg
cmp
lods
shr
xor
cmp
push
pop
and
fdiv
jmp
fild
aam
pusha
pop
mov
es
inc
inc
sbb
cs
xor
pop
inc
dec
jg
lahf
sbb
push
outs
sbb
scas
or
push
fs
aas
add
fs
dec
test
sub
cmp
mov
mov
and
inc
in
(bad)
or
pop
ficom
push
ret
dec
adc
and
sbb
push
sbb
ror
cmp
push
aam
lea
mov
nop
aas
adc
clc
add
xor
stos
sbb
lods
fadd
xchg
ret
adc
daa
popa
cmp
stos
scas
xchg
(bad)
repnz
pop
mov
mov
hlt
test
sbb
sub
add
fcmovnb
call
cmp
add
in
lds
inc
mov
jl
mov
int
push
add
push
ror
mov
or
push
xor
into
xchg
inc
sub
or
mov
lds
push
fist
jae
pop
mov
rol
or
icebp
(bad)
shl
loopne
out
rcr
jmp
jnp
and
popa
pop
sub
sbb
aaa
mov
mov
dec
mov
adc
cmp
lock
adc
loope
sub
inc
sar
add
pop
push
aas
and
xchg
clc
sti
xchg
xchg
sub
out
add
cmp
jb
mov
retf
push
pand
jae
and
gs
and
fdivr
push
fdiv
mov
jp
loopne
ja
xor
in
js
jge
test
lods
retf
lea
adc
out
loopne
retf
mov
mov
ret
gs
lods
out
mov
rol
sub
jmp
xchg
test
ret
lods
bound
int
add
inc
push
jae
sbb
inc
mov
add
xchg
cs
push
pop
sbb
sbb
xchg
pop
mov
lods
sbb
dec
dec
mov
adc
pop
adc
cmp
xor
call
cli
nop
icebp
inc
lock
sbb
xor
dec
push
cmp
xchg
jae
rcl
mov
push
iret
inc
inc
pop
data16
lea
dec
ret
js
mov
jge
inc
clc
add
xor
fwait
sub
std
and
data16
cmps
and
fiadd
add
pop
aam
add
add
dec
xchg
add
stos
xor
imul
jecxz
mov
inc
jg
adc
test
into
js
jp
or
cmp
adc
xor
movs
sbb
pop
js
cmp
ins
pop
mov
lock
xor
or
xchg
test
cs
add
pop
jmp
push
and
sub
add
sub
mov
or
aaa
cmp
fisttp
inc
add
retf
pushf
adc
loopne
xor
pop
popa
cmp
mov
sub
add
jle
xor
frstor
xlat
mov
sbb
movzx
push
scas
pop
xchg
add
xchg
jo
cmp
cmp
mov
repz
retf
dec
inc
enter
add
adc
int3
sub
or
mov
es
cld
into
sti
mov
jmp
xor
adc
and
mov
jne
push
add
pop
ds
and
bound
leave
inc
xchg
push
sub
pop
sbb
data16
ftst
in
aaa
or
or
sbb
jp
push
dec
xor
add
dec
add
cmp
jae
pusha
sar
sub
push
clc
jbe
movs
ret
pop
and
adc
push
sbb
fsubr
add
popa
adc
ret
rcr
adc
pop
mov
push
mov
jne
test
mov
cmp
pop
xor
cmps
ja
jno
fst
arpl
aam
xchg
or
je
jmp
and
fimul
pop
int3
add
ret
movs
jo
sbb
cmp
add
iret
jno
and
shr
xor
or
add
inc
call
aas
xchg
cdq
ret
enter
and
mov
jo
sub
or
add
add
jp
movs
sub
sbb
sahf
inc
hlt
add
out
sub
and
dec
and
mov
jbe
outs
and
jp
movs
dec
adc
push
movs
out
add
sbb
sub
or
dec
popf
xchg
adc
nop
(bad)
into
sbb
cmp
sub
cmp
(bad)
sub
mov
and
xchg
cmp
inc
push
xchg
in
pop
cmps
or
mov
add
in
sbb
and
pop
mov
inc
push
and
and
imul
call
mov
and
cwde
jb
pop
xchg
sbb
add
ret
sub
dec
lea
int
inc
or
mov
mov
add
and
mov
mov
lock
xchg
leave
fist
jecxz
nop
push
rcl
push
stos
call
xchg
je
jecxz
shl
sbb
mov
das
test
xor
test
jl
xchg
ss
cs
pop
mov
dec
cwde
dec
jne
mov
pavgb
popf
cmp
jns
call
mov
enter
adc
jle
stc
lds
sbb
out
sbb
add
add
in
dec
aam
add
in
movs
jo
outs
add
xchg
call
adc
add
in
jnp
adc
mov
jecxz
dec
xchg
xchg
sbb
stos
ror
jp
fs
cmps
fst
or
add
or
mov
pop
imul
and
and
js
loope
sbb
or
fisttp
cmps
add
add
inc
in
mov
mov
dec
mov
clc
mov
movs
push
lods
lds
js
test
xor
scas
gs
shl
sbb
pushf
push
push
push
movs
scas
cli
test
cdq
mov
xchg
mov
jmp
jnp
dec
test
loopne
mov
int
ss
xor
fbld
pushf
push
adc
adc
movs
inc
xor
or
loop
inc
sub
add
mov
xor
sbb
jmp
xor
jo
xchg
inc
aam
lods
push
xchg
movs
imul
retf
cmp
(bad)
adc
int
mov
sbb
sbb
mov
mov
or
adc
mov
lea
(bad)
mov
or
fild
jmp
lea
mov
or
enter
jne
inc
lock
jb
sub
dec
int3
xchg
jb
sbb
shr
xor
int
lea
jnp
xchg
pop
lods
std
pop
pop
push
inc
test
gs
test
popa
fidivr
aas
or
push
add
sbb
lock
or
jmp
popa
and
sbb
jmp
sub
push
jne
adc
wrmsr
add
dec
inc
shl
in
sahf
sti
cdq
xor
or
pop
mov
jnp
inc
jbe
adc
and
fild
inc
test
push
enter
xor
mov
test
push
and
xor
rcl
lds
inc
lods
dec
fidiv
fimul
push
mov
push
shl
push
test
sbb
arpl
mov
xor
retf
cmc
mov
xchg
inc
mov
mov
mov
push
das
mov
hlt
daa
fdiv
cmp
inc
adc
fdiv
jl
es
pop
adc
inc
cdq
mov
ror
add
aam
in
adc
sub
sbb
and
ret
stos
movs
mov
cmp
xlat
add
add
sbb
aam
nop
dec
mov
push
rcr
test
ret
mov
mov
cmp
das
lea
retf
xor
push
push
or
or
sub
push
mov
or
add
stos
dec
jp
pop
lock
mov
js
add
push
out
adc
mov
push
cwde
ins
test
fnstsw
lock
adc
push
int3
aas
sub
xor
sbb
(bad)
pusha
aam
data16
mov
add
dec
adc
pop
push
sub
out
lahf
cmp
(bad)
push
push
inc
inc
ror
sbb
push
mov
mov
in
mov
sub
push
add
cmps
cdq
es
sub
and
push
jecxz
outs
arpl
aas
sbb
mov
fidivr
sbb
pop
movs
xor
mov
mov
nop
imul
pop
jge
out
jle
push
shr
xchg
cmp
push
add
xor
adc
push
or
jne
repz
and
fiadd
xchg
and
(bad)
and
push
iret
jg
mov
push
and
addr16
dec
shl
adc
retf
add
pop
push
jne
mov
les
xor
idiv
sbb
aas
call
(bad)
xchg
rol
fisttp
cmp
popf
les
cmp
sbb
and
or
fmul
and
cmc
jmp
lods
sub
cmp
xchg
cdq
test
sahf
pop
jmp
mov
jmp
fwait
ror
xchg
dec
mov
or
fnstcw
mov
inc
xor
daa
das
test
ss
push
sbb
nop
cmps
or
or
movs
adc
mov
lea
jb
or
sbb
sub
jge
inc
lods
aad
rol
or
or
arpl
push
cmp
mov
dec
stc
push
push
add
rol
div
and
and
dec
adc
pop
cld
pop
sbb
ins
ret
cdq
sub
inc
or
mov
sub
sbb
fwait
inc
ret
adc
pop
test
int3
or
pop
sub
pop
setne
dec
sbb
mov
jl
inc
ss
pop
sbb
jo
or
jmp
or
mov
push
cmp
inc
jge
inc
loop
nop
pusha
mov
xchg
inc
and
cmp
jp
or
jo
ja
aam
jge
mov
inc
shl
xor
jle
shl
pop
lea
push
out
cmps
je
sbb
sub
inc
jmp
cmp
mov
out
dec
sbb
dec
loopne
adc
inc
cwde
loopne
pop
or
inc
push
or
mov
jge
add
mov
adc
xchg
jle
ret
fmul
cmps
ret
fisub
or
push
lods
dec
ins
or
or
inc
jae
inc
icebp
push
cmps
adc
push
push
pop
dec
sbb
jno
call
out
add
data16
test
cmc
cmp
push
fistp
(bad)
sub
ret
and
inc
sub
mov
sub
adc
jmp
xchg
push
imul
mov
cwde
push
push
cmp
jne
or
loop
cmps
(bad)
mov
adc
sbb
sub
loopne
mov
sbb
ds
push
xchg
xchg
(bad)
xor
cmp
or
and
and
fcomp
inc
es
adc
jg
inc
cmp
xor
and
xchg
movntq
and
into
fidiv
(bad)
std
mov
sub
mov
or
mov
popf
call
pusha
pop
scas
out
push
or
dec
jo
push
mov
(bad)
fild
xchg
cs
adc
movsx
dec
je
jmp
inc
cmp
je
mov
cmp
xor
jb
push
cmp
jne
cmp
and
or
push
movs
jle
jmp
shl
adc
adc
or
je
fld
daa
sbb
popf
dec
adc
dec
push
and
mov
fadd
xlat
push
idiv
es
pop
sbb
retf
sbb
adc
or
and
and
push
inc
push
cli
call
cmp
gs
das
sbb
or
jb
mov
cmc
and
stos
out
inc
and
dec
movs
pop
dec
lds
add
xchg
sub
jmp
pop
(bad)
fcom
jp
jmp
cmp
pop
and
push
mov
and
(bad)
je
fbstp
call
add
dec
dec
loope
mov
inc
mov
daa
lahf
ret
sar
jg
xchg
sub
and
or
inc
sbb
adc
jmp
(bad)
adc
xchg
sbb
xchg
imul
or
dec
setne
jbe
mov
push
mov
inc
ror
xchg
ja
stos
adc
lock
iret
push
dec
movs
hlt
hlt
fisubr
push
shl
dec
mov
sub
leave
mov
xchg
call
xchg
ss
pop
and
pushf
arpl
or
sub
rol
mov
sbb
pop
cmp
jb
xor
ficomp
pop
mov
xchg
(bad)
fnstenv
mov
div
or
mov
adc
cmp
mov
(bad)
ja
cmp
ja
push
mov
and
push
cmc
movs
sbb
jnp
mov
push
xlat
add
fsubr
dec
jmp
clc
fs
sub
and
cmp
add
cwde
inc
imul
les
es
and
push
jmp
jmp
outs
and
jmp
and
clc
push
sbb
cmp
shr
sub
fbld
mov
inc
sbb
mov
sbb
jmp
les
hlt
into
add
sub
or
jno
cmps
sub
sbb
xlat
sub
jb
or
frstor
or
fstp
adc
push
xor
je
mov
mov
adc
add
cmps
adc
loopne
and
jne
test
adc
loopne
pop
mov
outs
and
cmp
adc
pop
mul
sbb
lds
fsub
jbe
iret
jl
out
loopne
adc
retf
sbb
fsub
xchg
jbe
fisttp
cmovp
push
sub
xlat
cmps
cwde
hlt
xor
test
ins
mov
arpl
or
add
(bad)
mov
ret
sub
xor
(bad)
movs
dec
cmp
pop
movs
pop
pop
jo
enter
enter
sti
clc
jbe
xor
or
dec
(bad)
lea
mov
cmp
push
or
ret
add
les
mov
jmp
nop
sub
push
cmp
ins
(bad)
xchg
xchg
sahf
icebp
inc
jb
xor
je
add
into
add
inc
inc
cmp
jb
data16
fisttp
(bad)
xor
sar
dec
daa
add
add
push
add
and
cmp
push
ss
xchg
ret
sbb
lahf
and
xor
or
cdq
scas
pop
push
je
add
jmp
mov
push
add
bound
and
push
dec
repz
in
movs
mov
inc
arpl
imul
mov
out
mov
sub
dec
mov
rol
dec
mov
lods
jnp
jmp
sbb
push
xchg
fstp
or
add
sbb
pop
sub
add
stc
cmp
(bad)
scas
enter
xor
in
adc
jmp
mov
push
push
test
add
sbb
mov
inc
enter
test
and
add
loopne
aas
mov
jbe
test
or
movs
fbstp
and
inc
mov
std
int
adc
movs
ret
shl
and
shl
and
pop
xchg
leave
pusha
inc
pusha
loopne
test
pop
je
add
cmp
add
jns
add
mov
call
inc
loopne
(bad)
repz
push
retf
inc
add
or
jne
push
adc
stos
push
fild
test
in
xor
retf
lock
retf
retf
int3
add
test
jb
data16
aas
retf
lock
in
retf
lock
out
fsubp
push
aam
les
lods
movs
aas
sahf
addr16
(bad)
jmp
mov
jp
aas
int
mov
in
int
int3
pop
ins
cmp
push
mov
add
sar
int
int
repz
mov
inc
push
dec
iret
repz
push
pop
pusha
push
xor
inc
mov
out
or
add
push
sbb
in
push
test
jae
in
push
dec
and
inc
inc
cmp
push
add
add
nop
and
add
push
sub
lods
push
cli
sbb
dec
inc
and
jns
and
sub
jns
inc
shr
sub
shl
cmp
imul
sbb
mov
sub
test
cmp
ds
je
test
imul
inc
mov
inc
add
pop
shl
rol
stc
push
bound
jbe
lahf
inc
in
movs
and
ja
xor
in
fdivr
push
imul
imul
push
ficom
cmp
cli
(bad)
jb
sub
and
test
call
and
mov
or
pop
(bad)
stc
mov
cmp
mov
ins
jne
ds
les
mov
es
ficomp
js
mov
icebp
scas
hlt
rol
dec
cmp
repz
imul
test
mov
ror
(bad)
hlt
jmp
cdq
sub
or
sbb
dec
fadd
ret
in
aas
sub
cvttsd2si
cmps
aaa
adc
stos
mov
add
pop
mov
je
pop
and
mov
push
and
fistp
fucomip
mov
xchg
icebp
rcr
jo
fsubrp
pop
mov
fcomp
fstp
icebp
call
pop
clts
dec
and
sar
sub
das
fcomp
pushf
mov
test
pop
cmps
pop
add
gs
out
sbb
in
popa
repz
or
enter
mul
ret
xor
mul
adc
adc
pop
ret
push
out
test
ror
sar
neg
sub
call
sbb
dec
push
jns
sbb
sbb
and
retf
cs
in
sbb
idiv
push
shl
push
shr
inc
push
xor
dec
daa
shr
rcr
shr
rcr
or
jle
pop
sub
enter
shl
cmp
jp
imul
cmp
add
(bad)
dec
test
fsub
add
add
mov
inc
jne
repz
punpcklbw
rcl
inc
inc
test
adc
cmps
cmp
nop
inc
adc
cmp
sub
outs
fisubr
xchg
xchg
stc
and
adc
xor
sub
xor
movs
mov
sub
pop
shl
push
or
jo
xor
aaa
lods
lods
xor
jo
or
xlat
lds
push
pusha
xor
cmp
inc
lea
mov
mov
or
scas
popa
xor
fisubr
or
test
dec
ret
dec
pushf
jbe
mov
pop
stos
ret
or
jmp
inc
clc
push
fld
int
(bad)
jmp
lods
adc
inc
test
test
or
(bad)
retf
or
test
into
adc
mov
jbe
dec
mov
repnz
out
xlat
mov
popa
jp
cmp
sbb
mov
and
(bad)
adc
lods
dec
push
and
cmp
leave
or
nop
xchg
mov
pop
fisttp
(bad)
jl
or
xor
cmp
rol
sbb
or
cmp
hlt
shl
fimul
sbb
sar
call
jp
push
cmp
push
sbb
call
aaa
push
push
mov
mov
test
mov
sbb
out
std
add
ror
adc
push
(bad)
fcomp
cmp
shl
cmps
data16
sbb
pop
or
and
lock
fstp
ret
dec
lahf
add
ja
or
shl
xchg
mov
cld
stos
sbb
pop
mov
mov
push
loopne
jmp
jecxz
dec
dec
stos
ds
adc
adc
idiv
loope
dec
mov
inc
jge
push
and
mov
mov
int3
stos
add
and
cdq
cmp
push
(bad)
jbe
push
je
or
cmp
and
enter
gs
pop
enter
inc
pop
push
cmp
mov
xchg
and
bound
dec
jae
shl
pop
adc
adc
and
or
push
jno
ins
pusha
jns
or
test
das
mov
and
jmp
jle
lea
mov
jg
sub
mov
rol
dec
dec
sub
mov
and
ja
pop
jmp
(bad)
rcr
add
jnp
inc
jne
jmp
add
add
xor
xchg
ja
jmp
fcomp
inc
lea
and
fwait
mov
je
or
fldcw
int
push
(bad)
fsin
fstsw
sahf
jp
imul
pop
in
add
mov
mov
push
stos
jp
std
adc
fstp
ins
jmp
test
dec
jo
sbb
or
sbb
fcomp
jmp
and
(bad)
mov
ret
adc
das
dec
mov
cmp
add
mov
or
add
fdivr
jge
jne
dec
jle
mov
pop
fldz
mov
neg
push
push
push
inc
inc
mov
nop
sub
and
and
pushf
mov
mov
loopne
pop
dec
and
mov
std
jg
loop
movs
push
jge
inc
inc
push
sub
out
pop
fisubr
or
push
adc
xchg
add
xor
mov
inc
fisubr
dec
inc
dec
outs
inc
pop
cmp
adc
sub
pop
ins
sbb
ror
xchg
ja
jmp
popa
aas
add
in
ja
fisttp
mov
into
xchg
pushf
stos
jmp
int3
retf
and
inc
dec
xchg
iret
or
xchg
jns
enter
in
or
inc
push
cmp
mov
lahf
aas
movs
in
imul
push
jecxz
fld
test
mov
fsqrt
jno
add
nop
dec
lock
sub
and
push
jmp
jae
and
mov
add
(bad)
jecxz
popa
lahf
pop
add
adc
push
ror
mov
int
jmp
js
add
fdivr
and
cmp
and
cmp
lock
pop
sar
dec
loop
mov
adc
xchg
lock
cmp
or
jb
es
imul
imul
fs
fadd
add
mov
inc
(bad)
mov
add
les
dec
and
pusha
and
mov
cmp
daa
and
add
(bad)
mov
enter
push
push
aad
std
xor
push
push
data16
add
jae
lods
xlat
fild
call
in
std
mov
sub
sub
lea
mov
stc
sub
push
inc
sub
(bad)
adc
sub
or
sbb
int3
mov
add
mov
push
jg
push
stos
fsubr
fcmovbe
out
and
jecxz
push
or
pop
xchg
hlt
sub
aad
loope
or
mov
pop
inc
or
jb
push
sbb
loope
inc
sbb
or
jae
and
add
imul
cmc
push
lock
in
pop
adc
xchg
loopne
add
adc
(bad)
movs
adc
or
pop
or
jle
push
jmp
xchg
inc
lea
add
adc
jae
mov
sbb
and
and
dec
inc
and
add
mov
and
push
sbb
call
pop
add
xchg
mov
adc
mov
adc
and
fnstcw
mov
(bad)
mov
fs
aaa
dec
lahf
cmp
pop
sub
cmp
or
gs
xchg
test
lea
ds
xchg
scas
pushf
mov
mov
lea
cmp
push
pop
mov
fs
xor
and
ror
jmp
xchg
sub
rcl
pop
test
es
popa
enter
lea
sub
aam
and
int3
sub
dec
adc
and
push
sbb
push
and
ror
fsub
or
adc
xor
mov
push
jmp
or
push
out
cmp
enter
out
add
fsub
adc
jge
rcl
pop
repnz
js
gs
pusha
xor
jmp
outs
mov
jbe
add
mov
add
gs
add
mov
push
vminps
dec
mov
sti
sub
sub
cmp
test
(bad)
mov
movs
inc
cwde
in
mov
mov
jmp
sbb
add
sub
sub
xchg
fadd
mov
sub
mov
and
fiadd
call
movs
int3
and
mov
cld
enter
or
push
or
jne
dec
push
xchg
xor
and
xadd
dec
add
mov
add
rol
mov
inc
pop
out
pusha
dec
or
test
shl
inc
mov
or
xchg
mov
xchg
or
xchg
and
jmp
jmp
pop
cwde
push
inc
sar
imul
loopne
hlt
or
sbb
cwde
rcl
ins
push
mov
jnp
or
inc
jmp
or
xor
sub
and
push
mov
sub
clc
add
dec
test
mov
inc
or
adc
mov
or
retf
std
adc
push
sti
stos
jae
push
dec
inc
aas
lea
add
or
cli
inc
or
xor
mov
hlt
les
or
pop
and
ror
inc
and
leave
movs
popa
sbb
jl
pusha
loopne
mov
(bad)
in
sahf
mov
cmp
jne
(bad)
push
sub
lea
xor
mov
mov
arpl
and
add
sbb
mov
jge
hlt
or
int
ins
es
sar
clc
inc
sub
and
imul
mov
mov
mov
adc
loop
jg
mov
xor
popf
cmp
cmp
adc
out
ins
adc
inc
call
jo
loope
fs
mov
sub
fld
ja
imul
les
arpl
pop
rol
fadd
add
fistp
or
add
cmp
or
dec
sbb
ror
and
into
sub
adc
jl
and
cdq
sub
sub
clc
and
pop
adc
xlat
xor
dec
pop
enter
fmul
gs
cmp
jmp
rol
sbb
js
adc
add
icebp
dec
dec
mov
gs
add
xlat
jne
das
inc
jl
inc
repz
fld
test
sub
sub
sbb
test
inc
or
js
add
adc
pop
leave
outs
push
aaa
xor
es
repnz
or
fidiv
hlt
add
or
je
cmp
cmp
push
mov
mov
mov
and
cmc
pop
mov
mov
jno
pop
idiv
mov
mov
or
inc
dec
in
aam
(bad)
(bad)
lock
fld
ret
pop
xor
cs
in
inc
mov
inc
ret
daa
lock
imul
add
inc
xor
lods
push
add
add
je
inc
mov
xor
aas
in
data16
scas
sub
mov
in
pop
out
loopne
aad
movs
mov
int3
pop
loop
add
mov
das
pop
sbb
xchg
jo
adc
inc
or
add
inc
add
or
pop
mov
adc
ret
push
inc
cwde
or
jl
push
imul
arpl
fnstsw
push
mov
push
test
xchg
rcr
loopne
jmp
push
push
ret
inc
jns
nop
jge
leave
fisttp
cmp
push
push
loopne
stos
je
jbe
not
mov
loop
inc
inc
retf
or
cmp
(bad)
loopne
xchg
sub
loope
inc
movs
cmpxchg
sbb
in
push
xor
inc
inc
push
in
inc
dec
push
xor
pop
cmp
into
inc
and
sub
jmp
test
dec
out
fdivr
mov
ins
and
pop
test
cmp
dec
add
inc
nop
je
jle
sbb
push
add
cs
sub
jge
or
sub
je
shl
sbb
mov
push
imul
add
pop
loopne
and
aam
xor
xlat
fimul
mov
sub
test
aad
or
cmp
ret
fcomp
xchg
push
push
lods
dec
push
enter
inc
push
dec
mov
add
and
jbe
add
outs
dec
ret
je
rcr
add
and
cmp
adc
mov
mov
pop
popa
sub
ja
ja
sbb
xlat
and
mov
xchg
test
fs
mov
(bad)
fiadd
or
sub
pop
adc
push
in
ret
scas
test
shl
in
jnp
xlat
jae
imul
loope
mov
push
push
mov
or
push
adc
loope
xor
dec
out
mov
add
mov
loopne
inc
push
jmp
fistp
jne
idiv
mov
(bad)
out
fst
and
(bad)
jle
jmp
repz
fadd
dec
mov
adc
add
adc
not
andps
xor
aas
aas
mov
mov
adc
cmps
jne
aas
or
xor
or
int
jns
and
add
not
cmp
sub
shl
imul
loop
sbb
add
lea
fsub
fild
pop
(bad)
jno
xlat
or
mov
mov
mov
daa
adc
lods
rcl
inc
inc
add
outs
in
out
shr
push
fsubr
mov
stos
inc
mov
inc
jg
mov
(bad)
mov
mov
lock
mov
aas
fadd
jae
xchg
aaa
ret
xor
and
or
lods
mov
aam
ss
xchg
and
ss
cmp
mov
mov
xchg
js
ins
jmp
push
arpl
loopne
enter
(bad)
fcom
int3
retf
retf
outs
cmp
or
sbb
retf
retf
test
movs
shr
sub
mov
dec
add
hlt
movs
or
gs
addr16
dec
cld
xor
adc
loopne
rcr
pop
adc
pop
in
xchg
or
pop
jno
push
xchg
mov
sub
cwde
(bad)
jmp
sub
mov
sub
push
xchg
repnz
(bad)
push
mov
pop
(bad)
ret
xor
and
push
lea
adc
ret
bnd
loope
inc
add
or
lods
push
lods
lock
or
add
repnz
out
sbb
fistp
xchg
jmp
int3
xchg
sub
cmp
ins
sub
adc
dec
adc
pop
adc
daa
icebp
data16
cmp
pop
add
aaa
xor
fwait
sub
add
mov
scas
pop
mov
pusha
data16
nop
fiadd
outs
pop
rcl
rcl
mov
sbb
add
mov
jmp
pop
mov
dec
jo
jne
das
mov
test
aad
xchg
and
sub
mov
or
sbb
(bad)
ins
popf
lock
mov
mov
rol
mov
sti
test
jne
or
push
push
mov
and
add
xor
add
sub
add
test
mov
mov
mov
push
add
xchg
pop
mov
cmp
dec
jnp
jmp
out
push
in
out
movs
mov
mov
sub
sub
sbb
cmp
sub
mov
or
push
shl
adc
inc
mul
jl
rcl
pop
ret
mov
dec
sbb
dec
addr16
daa
add
ins
sub
mov
add
dec
inc
jle
lds
into
mov
xchg
enter
and
push
sbb
add
mov
push
into
sbb
clc
dec
xchg
ss
jl
sti
jle
push
mov
sbb
dec
jmp
jns
add
rol
rcr
mov
test
add
cdq
xchg
add
push
or
js
push
fnop
sbb
daa
sub
das
xchg
jmp
mov
bound
lock
dec
jmp
push
bound
and
pop
jecxz
push
mov
or
add
pop
push
inc
pop
push
xor
jb
add
adc
inc
xor
add
mov
push
icebp
jmp
clc
pop
push
cmp
pop
jne
cmp
bound
push
mov
das
pop
pop
jg
lock
js
aad
dec
inc
pop
sub
js
sbb
rcr
mov
gs
or
mov
hlt
fdivr
ret
jle
mov
jne
punpckldq
sub
cld
arpl
mov
xlat
sbb
ins
xchg
shr
pop
stc
cs
or
(bad)
in
(bad)
cdq
js
movs
mov
rcr
cmp
add
jmp
cmps
scas
lea
mov
mov
push
mov
push
mov
loopne
fadd
or
mov
test
sbb
push
sar
pop
mov
fadd
dec
pop
xchg
push
je
ins
adc
call
push
(bad)
cwde
sti
or
pushf
retf
clc
aam
sub
je
mov
sub
add
outs
sub
outs
enter
dec
nop
pushf
pop
or
add
mov
add
faddp
or
adc
inc
movs
sub
adc
ss
shl
cmps
mov
mov
sub
imul
sbb
shr
adc
xchg
or
hlt
pop
jb
xchg
adc
movs
hlt
hlt
mov
sbb
push
or
inc
add
sbb
iret
or
(bad)
ds
shl
sbb
outs
outs
xlat
scas
sbb
pop
and
add
xor
sbb
add
mov
xor
push
mov
inc
fs
aaa
or
jae
cs
imul
pop
call
icebp
dec
xchg
xchg
sbb
mov
lock
jb
(bad)
(bad)
shl
sub
(bad)
das
test
sbb
sbb
jnp
cmp
adc
or
shl
cwde
pop
pushf
and
mov
inc
adc
call
xor
scas
push
test
lea
or
std
nop
pop
push
xchg
jl
jl
add
ss
lahf
xchg
mov
mov
mul
lock
dec
and
test
pop
in
not
or
js
sub
in
mov
or
jp
bound
nop
ins
jge
push
inc
lods
dec
repnz
jl
fld
push
ins
cmp
pop
mov
sub
out
or
push
xchg
add
neg
xlat
rcl
inc
ror
aam
jns
push
sub
test
ss
fwait
shl
mov
push
test
mov
inc
or
fisttp
call
pop
mov
inc
(bad)
mov
dec
mov
dec
(bad)
and
out
xor
retf
add
pop
cmp
cmp
pop
ret
out
push
sbb
fwait
mov
or
sub
loope
sub
aaa
gs
stos
pusha
mov
adc
or
outs
mov
sub
mov
hlt
mov
fsubr
loop
xor
clc
pop
ret
mov
fdiv
jle
jo
test
mov
dec
or
dec
call
mov
mov
add
sbb
or
and
pop
add
jnp
sbb
mov
dec
je
mov
sbb
push
mov
xchg
hlt
jmp
ja
fist
pop
jle
imul
aaa
and
pop
push
push
inc
xor
cmp
int
or
sbb
jno
adc
sub
inc
cld
adc
inc
movsx
leave
jmp
lea
push
add
jl
ret
mov
mov
mov
adc
push
push
movs
mov
sbb
inc
imul
sub
adc
pop
(bad)
js
hlt
test
(bad)
daa
mov
jae
dec
xchg
mov
imul
(bad)
mov
add
adc
leave
cmp
pop
iretw
hlt
sub
call
test
xor
popa
xlat
retf
dec
mov
lock
aad
mov
ins
mov
inc
cld
or
add
out
mov
sbb
dec
shr
rol
neg
mov
sub
xor
push
jmp
jnp
or
sbb
cmp
xchg
jge
daa
xchg
test
ret
or
jne
and
adc
pushf
mov
dec
mov
stc
xor
aam
test
or
and
retf
mov
cmp
sahf
add
jmp
fdivr
sub
sub
inc
cmp
jmp
std
push
mov
je
shl
lock
adc
aas
dec
mov
jmp
in
jl
push
stos
sar
mov
fcom
jp
cmps
cmp
fbld
aam
sub
sar
int
mov
pop
mov
add
push
jmp
xor
sub
push
fbld
xor
int3
mov
daa
mov
sub
jg
cmc
out
test
jne
jmp
and
daa
push
shr
adc
clc
cs
pop
xchg
jg
fadd
test
mov
mov
push
or
loope
mov
bound
das
adc
push
enter
xlat
push
iret
mov
cmp
add
loop
aam
mov
sub
mov
or
lock
loopne
or
movs
push
push
dec
stc
jo
das
sbb
jle
dec
xor
cdq
fst
add
ja
jg
jmp
adc
cmps
jmp
mov
mov
jge
push
lock
jo
or
xchg
and
xor
je
gs
push
sub
pop
add
cmps
adc
movs
daa
pop
mov
call
popf
data16
sbb
and
xchg
mov
jmp
enter
xchg
mov
jae
aaa
jle
jmp
pop
ret
fistp
mov
or
sub
cli
adc
int
icebp
std
sti
inc
ss
lahf
test
push
outs
sub
nop
cmps
adc
cs
call
cs
jecxz
jns
shr
inc
push
pop
push
push
inc
shr
rcr
push
sub
(bad)
adc
(bad)
or
push
jbe
dec
sub
sbb
iret
adc
not
or
mov
cwde
fxch
pop
imul
push
retf
xor
add
add
xlat
or
sbb
fs
pusha
int3
adc
jmp
sbb
inc
xchg
xchg
xor
cmp
add
pop
jge
mov
or
scas
jecxz
add
push
fild
movs
and
ds
dec
sbb
lock
jmp
std
dec
xchg
inc
dec
es
test
icebp
add
fwait
jbe
pop
mov
adc
dec
pushf
xchg
imul
push
inc
jmp
mov
lds
jp
xchg
bound
mov
dec
and
addr16
int
aaa
(bad)
jmp
or
xor
mov
pop
cmp
test
ss
(bad)
pop
push
push
and
pop
push
add
jl
pop
ins
sub
pop
ret
sbb
cmp
je
sub
or
ins
loopne
mov
jbe
add
xor
data16
adc
push
out
xor
pop
jne
push
je
adc
adc
imul
jle
jne
lea
cmp
sbb
push
clc
sbb
sbb
dec
adc
xchg
nop
pop
pop
or
mov
add
cmp
jne
retf
and
sub
jmp
xchg
and
push
aad
lea
pop
jb
mov
sbb
fwait
retf
ja
dec
push
inc
pop
xchg
(bad)
mov
lods
aad
punpckldq
or
and
add
jmp
aas
div
adc
jp
(bad)
aad
xor
push
into
cmp
pop
retf
adc
(bad)
mov
jne
outs
push
test
push
pop
push
fbld
ins
sbb
cmp
mov
and
mov
xor
sbb
aad
add
cmp
adc
and
mov
out
or
inc
aam
pmaxub
mov
mov
add
call
xchg
mov
rep
dec
inc
lods
xchg
pusha
cmc
stos
iret
jne
lea
stos
sub
scas
mov
pushaw
scas
or
outs
mov
cmp
xor
fistp
mov
jge
lock
jmp
leave
adc
shl
mov
push
aam
mov
add
push
mov
fst
test
das
sub
inc
sub
push
cmps
jle
data16
jne
les
iret
test
mov
sub
and
stos
adc
cmp
sbb
xor
icebp
rol
out
test
add
daa
das
mov
pop
xchg
xchg
(bad)
arpl
or
dec
je
adc
(bad)
les
scas
inc
sbb
pop
xor
mov
sub
add
(bad)
mov
cmp
cmp
jnp
iret
pushf
and
scas
lods
ss
sar
cmps
xchg
add
pushf
add
hlt
ret
add
pop
movs
push
add
or
mov
lea
je
aaa
faddp
je
mov
aad
(bad)
iret
stc
or
adc
sbb
xor
dec
sub
sub
push
iret
push
sub
sbb
retf
(bad)
sbb
nop
(bad)
pop
cmps
sbb
pop
or
mov
add
cs
jae
lea
push
imul
add
pop
inc
lods
or
inc
mov
jecxz
sbb
es
cli
call
xchg
xlat
mov
(bad)
je
push
pop
cwde
mov
mov
inc
ret
xchg
int
mov
jo
xchg
into
xchg
icebp
sub
cs
push
mov
ins
adc
sub
cdq
mov
shl
or
sbb
mov
cmp
or
hlt
jae
pusha
dec
xor
(bad)
pop
sbb
out
mov
or
push
pop
pop
imul
sbb
lea
gs
xor
and
dec
mov
pop
fsub
aas
pop
arpl
mov
xor
pop
scas
and
lods
push
pop
mov
xor
pop
push
inc
stos
fld
int3
fistp
ins
and
mov
jp
or
(bad)
pop
dec
sbb
jg
jnp
outs
adc
mov
pop
retf
xor
dec
dec
dec
stos
xor
cmp
dec
dec
and
(bad)
aam
mov
pop
in
iret
dec
movs
pop
xor
out
shl
ror
loope
sbb
lock
pop
xchg
mov
mov
push
mov
sbb
inc
in
mov
cmp
dec
(bad)
mov
dec
and
in
mov
mov
gs
adc
mov
adc
and
xor
das
sbb
aad
hlt
cmp
and
shr
sub
mov
adc
sbb
out
in
jb
and
sbb
xchg
dec
in
out
aad
sub
and
loopne
bound
pusha
stos
xor
mov
xchg
jl
xor
add
enter
mov
fnsave
cdq
add
mov
retf
mov
inc
clc
mov
adc
loop
addr16
push
xor
sbb
or
enter
lea
adc
fs
scas
clc
add
mov
sbb
inc
mov
adc
popf
in
popf
or
in
mov
push
imul
aas
(bad)
inc
pop
pushf
adc
cmp
rcl
and
jg
fcom
jnp
je
or
and
jl
addr16
enter
jecxz
push
push
gs
imul
or
sbb
inc
aas
sub
push
mov
inc
pop
aaa
mov
add
fcmovu
dec
sub
jb
loopne
enter
pop
push
daa
add
pop
cmp
fcmovnbe
or
jmp
and
mov
cdq
movs
xor
fcomp
loopne
xchg
or
add
ins
(bad)
push
and
loopne
retf
pop
cs
inc
shl
aam
inc
xchg
stos
in
aam
leave
and
nop
aam
mov
enter
mov
push
inc
cmp
sbb
cmp
arpl
pop
(bad)
mov
or
or
jmp
mov
sub
and
in
sbb
mov
clc
push
push
lahf
sub
iret
stos
icebp
ss
add
rol
and
or
xor
popf
mov
or
push
or
inc
or
and
out
xchg
sub
adc
sub
push
lds
adc
jle
stos
add
(bad)
pop
sub
mov
mov
inc
dec
jne
lahf
mov
daa
or
in
fcomp
movs
sbb
push
jge
xchg
and
sub
cmp
std
fst
add
jg
hlt
mov
and
lea
dec
fcomip
add
enter
lea
ds
cmc
mov
add
pop
neg
ja
mov
mov
cld
ficom
push
push
jge
lods
ja
jmp
xchg
sub
cmp
or
cld
ret
mov
sub
lahf
or
mov
out
push
or
mov
lods
jmp
and
je
and
test
mov
pushf
adc
fs
push
lea
sbb
enter
sub
adc
ja
mov
cmp
sbb
sti
sbb
enter
dec
movs
sbb
or
loopne
push
mov
imul
inc
(bad)
jmp
jge
mov
int
jo
jg
xor
pusha
jl
push
es
mov
mov
xor
push
ss
add
pop
cs
mov
add
pop
ins
push
adc
adc
inc
sub
or
mov
mov
push
stc
dec
cld
(bad)
hlt
ret
push
cmp
jne
or
push
sub
out
das
in
and
cmp
std
jne
jl
or
mov
sub
dec
pop
mov
les
sbb
and
nop
xchg
dec
mov
push
test
ror
mov
push
lahf
mov
sbb
sbb
dec
sahf
mov
xor
add
shl
lock
or
loop
cmps
movs
push
jmp
mov
stc
push
push
cmps
repnz
push
and
stos
push
jbe
aas
rol
push
push
mov
cdq
inc
sub
fimul
dec
fsubr
jge
shl
adc
es
sbb
push
leave
inc
adc
repz
add
mov
inc
mov
sub
push
mov
jmp
loopne
add
mov
inc
cmp
adc
clc
jbe
enter
add
or
int3
inc
sbb
jge
add
jb
mov
ss
inc
or
cmp
jl
dec
add
mov
mov
(bad)
sar
dec
pop
pop
dec
jne
mov
dec
fimul
sbb
jle
sbb
test
jle
loop
cld
push
mov
push
mov
inc
dec
jne
leave
xchg
out
sbb
mov
or
push
cmp
xor
cmps
sbb
add
sti
add
adc
mov
sbb
(bad)
push
fcom
sub
adc
test
shr
cmp
inc
cdq
push
adc
cdq
fs
aas
and
or
add
rol
call
push
cdq
dec
push
add
test
xor
rcl
push
jo
popf
(bad)
jmp
fld
and
pusha
sbb
imul
cmp
cmp
mov
out
inc
sub
cmp
xor
fsin
or
mov
add
jne
pusha
sbb
aaa
inc
sub
aad
jmp
adc
jno
daa
fdivr
lahf
sub
popf
jmp
dec
xchg
(bad)
mul
cmp
rcl
inc
inc
imul
call
std
sbb
or
shl
xchg
xor
push
jbe
je
call
xchg
or
mov
lea
jp
dec
cdq
in
cmp
inc
rcr
jo
popa
push
ret
adc
aam
movs
sub
or
fs
dec
xor
cld
sub
dec
les
xchg
outs
mov
jge
cli
dec
xor
pop
icebp
mov
pop
adc
out
out
ror
idiv
inc
mov
loopne
mov
das
adc
fidiv
inc
inc
sbb
sub
dec
and
fcmovu
mov
and
jp
call
sub
sbb
xor
cmp
aam
jle
jg
jae
adc
pop
or
imul
cld
test
loope
mov
jns
xchg
cmp
(bad)
or
sbb
add
daa
scas
sub
cmp
cmps
push
gs
or
fld
or
adc
inc
push
add
sub
mov
xor
jo
and
ins
aad
add
or
clc
push
xchg
mov
push
sbb
nop
pop
sbb
pop
jmp
cmp
add
inc
or
dec
or
jecxz
and
mov
or
jmp
movs
xor
mov
or
xchg
sahf
mov
popa
or
ror
sbb
div
add
lock
push
mov
push
and
xor
push
test
inc
dec
sub
lahf
cmps
je
and
mov
daa
or
sub
or
movs
add
jl
pop
pop
mov
push
sbb
mov
je
mov
and
xor
jne
inc
mov
sub
push
and
jne
add
movs
pop
xchg
popf
inc
pop
scas
(bad)
in
into
ret
pop
mov
loopne
test
mov
(bad)
mov
es
daa
jle
cmp
mov
push
or
add
xchg
je
stos
ret
jmp
inc
hlt
out
dec
fnstsw
cmp
xor
arpl
add
repz
add
adc
and
shr
jne
outs
fld
imul
sbb
ss
ins
push
pop
and
inc
xchg
je
ja
sub
dec
mov
mov
fmul
adc
inc
cs
xor
xor
mov
push
lahf
lock
inc
and
inc
jb
jnp
cmps
inc
in
(bad)
das
xchg
sub
aaa
inc
push
rol
ss
mov
inc
cmps
sar
pushf
mov
test
sbb
dec
scas
clc
sub
mov
pop
or
add
sub
sar
sub
xor
aaa
sbb
lea
xor
xor
ins
mov
hlt
add
stc
(bad)
dec
cld
ret
mov
mov
pop
je
fs
inc
test
sbb
jno
shl
es
sbb
mov
dec
ins
mov
push
dec
or
push
adc
pop
ins
dec
dec
mov
in
cmp
jo
mov
inc
push
push
push
add
mov
xor
and
and
sub
jno
jne
pop
mov
les
push
enter
scas
sti
add
add
pop
push
push
movs
pushf
mov
push
fcom
mov
push
jne
into
adc
call
fwait
rcr
inc
add
add
add
add
sbb
sbb
sub
adc
out
inc
inc
(bad)
jae
push
mov
xchg
inc
lods
pop
mov
fisubr
pop
lea
xor
xor
inc
fsub
and
aad
push
dec
pop
pop
dec
(bad)
sbb
bound
mov
pop
ins
mov
dec
push
jmp
inc
push
in
mov
jb
adc
mov
out
aad
pop
loopne
pop
imul
dec
pop
lahf
adc
addr16
push
adc
xor
push
cs
push
xchg
xor
pusha
cmc
stos
loopne
mov
or
add
add
and
sub
add
fstp
push
push
test
dec
mov
out
adc
inc
mov
out
(bad)
mov
retf
push
pop
ss
xlat
(bad)
pop
call
mov
retf
inc
dec
jmp
sub
lods
call
js
ret
and
cmp
mov
and
mov
in
(bad)
mov
xchg
xor
fs
cmp
into
dec
xor
test
add
mov
stc
sbb
add
mov
cmp
push
cmps
cmp
add
inc
sub
mov
enter
adc
add
sbb
fcomp
lock
shl
add
mov
call
ret
dec
xchg
ja
push
lea
mov
mov
inc
or
inc
add
ss
jl
cs
fist
mov
test
fwait
adc
or
jo
lahf
scas
and
(bad)
push
mov
push
inc
push
lahf
lods
jg
cmps
inc
add
xor
or
inc
push
fidivr
in
mul
add
je
or
arpl
add
adc
das
ror
and
enter
xor
and
sub
adc
pushf
xchg
iret
shr
cmp
inc
rcr
out
jne
mov
dec
add
nop
cmp
mov
add
xor
jno
(bad)
(bad)
sti
push
sbb
add
arpl
push
pop
(bad)
mov
leavew
add
add
mov
inc
sub
or
sub
xor
sub
stos
sbb
jae
mov
or
sub
pusha
push
out
inc
into
dec
adc
push
xor
xor
dec
sbb
in
dec
pop
adc
inc
adc
add
inc
js
in
mov
mov
dec
loope
mov
or
jp
jno
aad
lahf
sbb
repnz
mov
cmp
test
jno
mov
adc
push
test
loopne
pop
adc
push
or
out
not
sub
ret
or
(bad)
scas
pop
jle
inc
xchg
add
das
mov
cs
jbe
test
inc
push
sub
push
stos
push
xchg
cmp
aas
in
movs
push
mov
ficom
cmp
mov
mov
lods
jbe
mov
push
fldenv
pop
inc
sbb
cmc
pop
mov
fwait
add
push
pop
lea
outs
mov
cmc
mov
and
add
jo
lock
pop
inc
call
xor
fwait
dec
pusha
inc
pop
xor
and
and
sahf
ins
inc
movs
jbe
mov
or
cs
rcr
inc
loop
adc
adc
jne
lods
es
push
lea
movs
shl
aad
pop
icebp
mov
jg
mov
jmp
rcr
sub
add
sbb
shl
xor
rcl
add
stos
outs
or
nop
scas
pusha
ins
(bad)
and
jno
push
pop
push
pushf
jne
fisubr
xchg
xchg
jne
xchg
push
aaa
imul
repnz
cld
shl
sahf
psrld
enter
lods
mov
inc
inc
dec
enter
dec
add
mov
push
mov
pop
jmp
icebp
push
cmc
sub
movs
dec
ja
leave
mov
movs
fsub
out
ret
or
in
adc
(bad)
mov
ss
adc
xchg
into
lods
aas
sar
mov
das
jne
aam
push
mov
push
dec
push
call
pop
and
icebp
shl
inc
inc
or
not
and
push
dec
sub
clc
xchg
inc
inc
inc
inc
add
push
push
lods
aad
imul
and
mov
push
je
adc
inc
push
push
loopne
mov
js
xchg
dec
aaa
outs
mov
adc
push
mov
inc
add
daa
or
inc
loopne
or
sbb
inc
inc
add
add
scas
and
push
stc
addr16
fcmovnu
push
pop
fidivr
add
ret
mov
(bad)
mov
(bad)
fild
add
add
mov
lods
add
loope
or
pop
adc
push
dec
ss
and
sbb
push
leave
movs
xor
dec
into
sbb
inc
add
add
inc
xor
sub
(bad)
mov
push
outs
inc
dec
rol
pop
ins
inc
add
ds
icebp
pop
inc
mov
pop
pop
push
xchg
add
xchg
dec
or
je
mov
mov
pop
inc
pop
nop
loopne
mov
popa
add
or
xor
movs
cli
cmp
xor
mov
xor
sbb
jb
cmp
xchg
imul
cmc
into
inc
xor
xor
or
dec
dec
int
addr16
mov
(bad)
push
add
push
push
jg
or
adc
and
test
add
xchg
call
fst
add
sbb
cmp
push
or
adc
push
outs
and
cmp
xchg
sbb
add
dec
lock
add
jns
sub
shl
jne
xor
les
iret
jnp
cmp
push
or
add
or
or
outs
pop
mov
mov
jmp
mov
inc
out
ss
or
pusha
shr
add
(bad)
fld
rdmsr
push
shl
retf
or
mov
mov
mov
(bad)
mov
or
sbb
(bad)
aam
popa
cmp
repz
mov
and
and
mov
adc
mov
push
adc
xchg
or
jecxz
pop
rcr
sbb
sbb
xchg
xchg
dec
movs
test
sub
add
movs
out
sar
and
xor
sub
cmp
dec
dec
fisttp
add
adc
rcl
sar
mov
pop
popa
adc
and
pop
(bad)
jmp
or
jmp
or
dec
or
and
aad
pop
scas
or
fstp
shl
add
daa
adc
jp
int3
add
ins
or
cwde
dec
adc
mov
fsqrt
jle
ret
mov
inc
fcmovbe
add
dec
sbb
stc
or
xor
sahf
dec
popa
pop
lods
add
test
js
mov
aam
pop
add
sub
stos
inc
jne
cmp
out
pusha
call
jne
test
or
xchg
cmps
xchg
sub
add
dec
xchg
movs
add
inc
xor
(bad)
mov
mov
pusha
test
sub
fidiv
mov
inc
and
rcl
xor
push
xor
dec
int3
sub
lahf
jne
adc
xor
add
(bad)
mov
not
and
test
js
adc
sbb
pusha
fwait
popa
pop
or
inc
mov
in
add
xor
jg
add
jge
test
pop
aas
or
or
int3
ficomp
adc
rcl
sub
push
and
mov
sbb
and
lock
rcl
call
sub
loopne
lock
cmp
pop
cmps
data16
sub
adc
jge
loope
(bad)
jno
mov
xchg
and
and
test
dec
mov
cmp
xchg
test
pop
int3
dec
(bad)
fidiv
xchg
mov
stos
div
stos
fwait
cld
dec
pop
mov
cdq
ret
or
mov
out
push
sub
mov
mov
leave
add
cmp
add
fsubrp
fild
gs
dec
or
jg
rol
inc
add
push
mov
test
ds
sbb
cmp
sub
cmp
pop
loopne
sbb
and
sub
scas
out
sbb
sbb
or
push
fisub
(bad)
int3
fisub
or
cmp
jmp
sub
jge
rol
push
and
or
or
xchg
(bad)
dec
jne
cmp
call
add
xchg
dec
shl
push
clc
mov
mov
mov
add
add
add
jmp
pop
cmp
dec
inc
scas
outs
adc
xlat
inc
retf
shl
pop
call
das
int3
pop
mov
push
or
sub
push
adc
test
(bad)
test
packssdw
sub
pop
push
mov
ins
adc
mov
int3
push
and
pop
enter
mov
add
in
jbe
push
xor
push
push
jo
test
mov
in
popf
rcl
pop
inc
push
adc
xchg
inc
pusha
lahf
adc
jle
rol
(bad)
jbe
shr
or
push
jne
int3
je
dec
pop
test
mov
sbb
rol
ret
mov
xor
ds
xor
call
int3
pop
mov
fucomi
aas
ins
pop
mov
xchg
clc
cmp
jg
inc
test
inc
adc
or
dec
inc
inc
sub
clc
or
add
loope
and
or
cmp
mov
in
lods
push
or
fwait
sbb
jne
mov
xchg
jle
das
inc
mov
xchg
popf
and
ret
push
mov
cmc
cmc
aas
test
jge
sbb
mov
pop
mov
or
sbb
push
test
adc
out
aaa
loop
push
sbb
add
test
pop
call
xor
loopne
and
or
retf
and
pop
jb
jno
pop
add
jae
cmp
mov
fld
stos
inc
(bad)
test
mov
ins
mov
mov
push
lahf
jecxz
or
fistp
cmps
and
ret
test
mov
xchg
clc
js
dec
jmp
inc
int3
add
rol
and
fimul
push
call
push
repz
clc
scas
pop
sahf
dec
repz
out
sbb
in
(bad)
push
cmps
pop
les
lea
loop
dec
add
add
xchg
fwait
sub
js
inc
push
and
xlat
aam
inc
jb
fs
bound
lea
xor
xchg
scas
pop
mov
cmp
inc
shr
push
cmps
test
xchg
mov
idiv
bswap
sbb
jmp
mov
int3
pop
les
dec
push
cdq
add
mov
add
pop
add
in
sbb
ss
jp
jmp
sti
sub
jg
push
lock
(bad)
sub
inc
xchg
push
dec
or
push
sub
push
cdq
sbb
sbb
add
push
inc
adc
leave
mov
fist
sbb
(bad)
es
dec
sbb
shl
mov
or
dec
enter
push
cmps
dec
loop
xchg
movs
les
call
add
popa
push
sub
fst
movs
push
call
xchg
mov
adc
lods
sbb
xor
add
or
jns
add
mov
and
hlt
and
ret
daa
add
clc
sbb
jle
jp
nop
call
leave
mov
imul
sbb
leave
xchg
cmp
out
adc
mov
sbb
mov
jns
clc
popa
jb
or
pop
ret
ja
shl
js
xchg
inc
pop
pop
test
xor
sub
dec
push
jl
sub
mov
mov
cli
fcom
icebp
jne
push
push
stos
rcl
aam
jo
mov
int3
inc
push
mov
hlt
pop
sbb
xor
inc
pop
ret
test
xchg
add
rcr
mov
adc
adc
out
test
fldenv
mov
or
nop
pop
(bad)
out
pusha
data16
mov
pop
data16
fcomip
gs
dec
js
pop
adc
sbb
outs
sbb
push
int
pop
cmc
dec
xchg
push
js
dec
xchg
cdq
mov
mov
nop
int3
inc
mov
or
imul
es
sub
sub
(bad)
xchg
and
xor
jns
jb
dec
in
test
retf
call
repnz
xor
das
cmp
js
dec
pop
push
push
in
xor
mov
or
(bad)
pop
sbb
push
stc
lods
out
xor
out
rcr
mov
les
cmp
or
std
out
fdivr
leave
inc
jmp
dec
repz
mov
fcomp
inc
stos
mov
and
inc
inc
mov
lock
pop
mov
or
cs
int3
pop
or
add
sub
xor
xchg
pop
push
and
fidiv
inc
lock
pop
jl
leave
sub
mul
xor
and
lods
es
ret
push
inc
scas
mov
outs
pop
dec
je
or
inc
shl
data16
lock
dec
cmp
push
cwde
fist
inc
sub
pop
aad
push
adc
and
push
cmp
nop
fild
ret
add
cmp
not
movs
inc
ror
add
ds
ss
js
cmp
es
push
mov
add
mov
and
scas
lea
int3
cwde
xor
jecxz
test
pop
add
rol
(bad)
pop
inc
push
popa
ins
fs
hlt
test
mov
mov
inc
push
cmp
pop
mov
jecxz
je
push
inc
stos
push
or
out
xchg
inc
mov
fimul
inc
stc
cmp
cdq
add
movs
nop
adc
jmp
pop
daa
and
repz
and
je
mov
and
outs
jg
neg
cmp
rcr
xor
stos
cmp
mov
test
retf
sbb
or
fisubr
mov
aam
jmp
mov
sub
pop
jne
dec
jno
jl
add
dec
faddp
inc
cmp
test
ss
xor
repz
in
std
dec
fdivr
sahf
(bad)
sbb
add
add
add
ret
xchg
push
out
adc
jns
ins
xor
fucomp
add
add
out
sbb
pop
jo
add
std
fdivr
inc
fnstenv
jecxz
inc
fcmovne
and
mov
movs
rcr
cmps
imul
loopne
mov
mov
sbb
push
sub
adc
test
cmp
push
call
ds
sub
mov
mov
sahf
loopne
mov
pop
xor
push
ja
outs
fprem1
mov
int
sub
lea
lock
mov
std
movs
std
cmp
or
lock
loopne
mov
mov
xchg
lea
add
outs
dec
or
mov
xchg
xchg
mov
lock
fdivr
es
call
push
mov
pop
xchg
aad
adc
inc
jl
sbb
or
adc
std
dec
add
dec
sbb
push
pop
shl
or
loop
enter
std
cmp
shl
std
daa
sub
(bad)
das
shl
lea
mov
std
sahf
sbb
inc
mov
repz
(bad)
jns
add
jmp
cmp
je
ficom
inc
jmp
cmc
mov
cs
fs
jns
loopne
jmp
sti
js
das
movs
pop
jmp
dec
mov
dec
inc
push
rol
test
xchg
xchg
and
sub
push
add
outs
stos
adc
aam
stos
idiv
sub
pop
add
or
sbb
shl
jecxz
imul
xor
mov
popf
pop
leave
int3
add
mov
mov
mov
adc
jmp
mov
add
mov
or
jl
mov
adc
adc
fisub
in
sbb
inc
add
cmp
rol
dec
icebp
add
dec
jne
jmp
adc
cmp
out
mov
out
pop
out
fdivr
stos
popa
repnz
je
imul
add
adc
mov
and
add
std
ror
add
lock
push
inc
sub
ss
not
in
sbb
inc
stos
fiadd
add
aad
add
inc
adc
and
adc
data16
test
push
adc
in
jle
sub
push
xlat
or
add
xor
jle
jg
pop
mov
mov
mov
es
adc
jmp
mov
push
add
add
(bad)
dec
fadd
cmp
sbb
jmp
rcl
pop
loop
jne
sub
mov
scas
mov
test
dec
bound
mov
dec
adc
mov
cmp
mov
pop
and
imul
adc
stos
cdq
out
cmp
dec
add
mov
aaa
inc
popf
sub
cld
cmp
mov
push
clc
fist
or
xchg
movsx
xor
loope
add
clc
xchg
cmp
out
and
sub
jmp
cmp
in
xchg
push
test
pop
jb
jne
push
clc
hlt
dec
mov
jbe
mov
in
and
cmp
inc
out
or
mov
sbb
sbb
daa
or
mov
sbb
adc
or
mov
pop
inc
(bad)
jmp
or
clc
ins
jmp
inc
bound
inc
sbb
mov
pop
add
or
dec
ret
cmp
stos
add
sbb
xor
sbb
fcmovnbe
push
adc
add
sar
mov
jmp
sub
mov
or
pop
pop
xor
and
sub
adc
pop
cli
sbb
test
xor
sub
aad
popa
push
xchg
adc
xlat
ja
jo
mov
jmp
cli
push
and
mov
mov
inc
sbb
loop
clc
mov
ins
nop
stc
adc
iret
inc
les
pop
idiv
es
and
or
(bad)
xor
inc
or
mov
push
(bad)
in
jl
jmp
addr16
mov
mov
imul
mov
inc
shl
mov
loope
pop
mov
and
jno
adc
push
lods
sbb
mov
cmp
gs
daa
jb
or
or
or
push
mov
cs
stc
fild
mov
jle
add
pusha
ror
or
sub
pop
dec
xchg
mov
int
pop
push
mov
or
jmp
leave
pushf
add
je
sar
or
mov
pop
and
add
pop
adc
jmp
mov
mov
popf
int
mov
xchg
and
(bad)
adc
cwde
cmp
jle
sub
inc
inc
dec
push
rol
push
jmp
dec
push
jmp
cmp
xchg
xchg
fdiv
adc
cmp
cmp
jmp
cmp
jg
mov
jae
rcl
and
cmp
xchg
scas
or
sbb
jge
vpmacssdd
idiv
jbe
nop
add
jne
xchg
cmps
cmp
dec
jae
mul
aad
fldenv
jmp
and
call
xchg
(bad)
sub
push
stos
push
aaa
mov
leave
pop
push
sub
cmp
cmp
push
js
mov
imul
add
stos
push
cmp
mov
lods
sub
out
stos
ins
sar
loopne
je
mov
cmp
test
lock
mov
dec
je
fmul
cmp
lock
pop
jo
adc
test
and
jge
push
jecxz
fld
pop
pop
add
stos
push
dec
dec
or
mov
mov
fbld
leave
push
lock
cmp
movs
xor
jg
cmc
jecxz
push
push
adc
rcr
jmp
push
imul
mov
icebp
sub
mov
js
dec
les
hlt
ret
or
ds
shl
and
add
mov
pop
push
sbb
inc
jae
test
cmp
or
shl
dec
and
lock
ret
cmp
push
jge
jle
into
xor
(bad)
xchg
sub
les
inc
mov
call
sub
sub
push
test
and
retf
add
cmp
jb
mov
lahf
xchg
inc
(bad)
or
enter
cmp
or
mov
mov
(bad)
xchg
(bad)
shl
push
mov
inc
leave
call
mov
(bad)
pop
jle
cmp
sbb
ja
jl
add
ja
push
jb
sbb
and
add
and
pop
inc
test
adc
enter
jnp
les
test
(bad)
jne
inc
pop
or
xchg
or
mov
adc
stos
or
jne
xchg
nop
fcom
or
test
mov
pushf
(bad)
push
lea
push
test
add
in
push
mov
sub
add
bnd
and
inc
xchg
mov
pop
inc
cmp
mov
xor
loope
ins
out
mov
mov
test
jg
and
add
cmps
leave
jle
mov
mov
jmp
shl
shr
mov
add
or
shr
dec
mov
ret
xchg
jne
add
dec
sub
inc
retf
add
imul
lods
dec
imul
ins
push
pop
shr
or
loop
call
fcom
xor
jne
push
push
mov
into
clc
imul
xor
push
out
sub
add
ficomp
add
je
fimul
fiadd
push
add
push
out
jmp
or
lods
(bad)
push
mov
xor
out
and
loop
push
add
dec
std
les
loope
or
in
jns
dec
shr
shr
idiv
mov
dec
nop
daa
mov
dec
imul
dec
into
jmp
lods
retf
test
pop
test
movs
add
test
xor
jne
push
retf
xchg
sub
das
push
push
pop
add
test
sbb
pop
sbb
movups
add
nop
push
sti
test
call
int3
iret
ss
add
and
movs
push
div
inc
jae
lock
add
repz
pop
dec
lds
lock
adc
adc
mov
je
iret
idiv
add
movdqa
push
dec
adc
push
and
out
fwait
xor
push
dec
and
push
jg
outs
out
jge
fbld
or
jbe
jle
xor
jg
test
ja
jg
lea
int3
mov
fiadd
or
dec
in
fcom
(bad)
movs
add
rol
adc
sub
shr
cmp
shr
push
mov
xor
dec
push
push
pusha
adc
enter
xchg
mov
adc
push
neg
dec
arpl
sub
mov
cmp
ret
int
or
mov
in
test
ds
mov
xor
or
push
cmp
es
xor
retf
adc
pop
inc
push
hlt
inc
inc
sete
test
les
(bad)
jg
cs
jmp
sub
inc
jmp
add
repz
pop
xchg
adc
and
cwde
mov
jno
outs
retf
jns
cmp
popf
or
or
add
(bad)
sbb
or
adc
add
and
cmp
out
adc
call
jnp
pop
xchg
mov
hlt
call
mov
mov
int
xor
push
push
jne
push
aas
movs
shl
out
inc
and
adc
or
mov
pop
mov
add
in
ror
lea
pop
movs
xor
xchg
xor
push
adc
mov
push
jl
pop
test
push
and
push
ret
or
pminsw
(bad)
ins
popa
sub
ds
or
repz
mov
push
lea
fist
movs
(bad)
and
push
aad
pusha
adc
out
dec
add
cmps
idiv
sbb
ret
sub
dec
or
mov
sub
enter
xor
out
push
jp
inc
or
xchg
xor
and
add
ror
inc
cmps
(bad)
push
popf
call
rol
mov
arpl
pop
rcl
push
cmps
out
idiv
mov
lock
adc
dec
and
or
xchg
jns
sahf
or
jecxz
test
mov
cmp
ret
mov
add
sar
add
mov
add
fmul
test
push
mov
jle
sbb
sub
in
mov
jns
mov
outs
js
adc
imul
psrlw
pushf
and
add
add
test
sub
dec
mov
mov
and
test
mov
cmp
mov
mov
jl
sub
sub
add
push
mov
sbb
sub
stos
iret
or
ret
lods
cmp
ret
scas
inc
push
jl
mul
pop
adc
mov
clc
push
repnz
fisub
push
ficomp
out
adc
sub
dec
aad
sub
add
ds
and
xchg
sub
into
es
bound
ss
dec
xor
rol
or
dec
shl
inc
add
adc
loope
cwde
ret
inc
add
into
gs
cmp
add
xchg
cmp
or
dec
or
xor
sahf
jecxz
iret
repz
sbb
test
or
xchg
pop
push
cmps
fnstsw
sub
int
cmp
inc
pushf
cwde
sbb
or
mov
and
fstp
add
hlt
sbb
cmp
add
cs
nop
cmc
test
cmps
xchg
std
mov
inc
sbb
add
add
inc
cmp
xchg
inc
sbb
js
cmp
shr
add
or
sbb
xchg
ins
add
lahf
loop
add
mov
push
pop
cmp
cs
inc
arpl
xor
and
movs
push
mov
aas
push
add
ror
test
xchg
mov
dec
xchg
sub
add
sbb
sub
inc
add
test
adc
dec
add
xor
pop
fs
push
mov
xor
enter
iret
dec
mov
test
pop
loop
loopne
add
out
data16
test
arpl
add
test
push
call
mov
dec
xor
loope
sbb
adc
push
(bad)
xor
or
arpl
dec
nop
or
gs
xor
imul
leave
push
in
push
fwait
dec
in
pop
add
xor
stc
mov
or
loope
xchg
enter
cmps
pop
leave
push
(bad)
enter
cld
xor
and
push
lea
fs
dec
cmp
push
adc
lea
or
fisub
inc
test
adc
push
(bad)
pusha
gs
mov
pop
sub
xor
dec
popa
push
jge
mov
mov
sbb
ins
adc
and
movs
add
ret
inc
pop
add
adc
dec
inc
mov
addr16
pusha
(bad)
je
push
fidivr
in
xor
popf
and
jns
push
sub
out
inc
push
xchg
lock
mov
imul
mov
pop
mov
add
sub
(bad)
cmp
scas
(bad)
mov
push
hlt
mov
and
(bad)
cmp
dec
and
adc
pop
xor
mov
sub
adc
mov
fcmovbe
enter
push
mov
clc
adc
inc
push
push
push
(bad)
dec
cmp
jne
sub
adc
dec
inc
outs
enter
loopne
test
inc
fimul
or
jnp
aas
and
jg
jmp
sub
enter
inc
out
in
loope
sub
jecxz
add
daa
add
js
xor
imul
add
fcmove
add
in
add
mov
(bad)
push
or
or
push
add
or
or
or
je
fadd
xor
(bad)
xor
lods
mov
add
repz
push
inc
ret
push
jmp
pop
cmp
inc
das
clc
pop
dec
iret
test
push
adc
add
dec
mov
call
aas
or
retf
cmp
addr16
(bad)
adc
push
sysenter
sbb
inc
(bad)
dec
xor
add
shl
mov
shl
dec
std
add
sub
fs
xor
jae
mov
inc
inc
mov
cli
or
wbinvd
mov
or
xor
aad
adc
xchg
push
mov
sub
lea
fisttp
jne
mov
mov
sub
or
adc
jne
movs
pusha
add
dec
rol
xchg
ja
jbe
dec
push
fild
fs
pop
jns
es
sub
adc
fiadd
into
jg
sbb
mov
or
push
loopne
inc
nop
xor
sub
or
cmp
imul
sbb
inc
mov
(bad)
dec
sub
into
shl
mov
test
mov
aam
add
shl
test
jl
mov
push
jmp
and
or
das
jp
out
mov
cmp
lods
xor
xor
shl
test
lods
int
sar
retf
pop
mov
and
stos
or
rcl
outs
sbb
stos
xchg
aas
push
jae
xchg
and
inc
lods
cmp
cmps
sub
pop
imul
inc
xchg
mov
pop
cmp
wbinvd
xor
cmp
jno
xchg
add
je
xor
adc
mov
sbb
sub
or
mov
inc
movs
cmc
mov
inc
enter
push
and
ret
in
pop
test
shr
cmps
push
add
xchg
imul
xchg
ds
jb
push
into
push
xor
aam
test
xor
test
push
sub
cwde
into
in
lea
xor
call
test
pop
leave
and
jno
ret
adc
push
xor
jmp
inc
jnp
sbb
call
mov
mov
inc
rol
xor
adc
jp
or
pusha
js
repz
inc
loop
inc
xor
inc
xchg
jnp
push
and
fcomi
nop
mov
push
sbb
es
jg
pop
mov
and
cmp
adc
aaa
pushf
sbb
jo
mov
nop
rcl
les
nop
nop
nop
sbb
add
push
outs
pop
movs
mov
dec
pop
imul
sbb
ins
ret
dec
(bad)
push
or
add
and
xor
jno
adc
les
stos
and
cmc
or
sbb
imul
pop
(bad)
xor
inc
mov
xor
mov
xchg
xchg
jbe
mov
popf
movs
fidiv
add
push
xor
add
inc
dec
xor
xchg
mov
add
jmp
push
mov
adc
ror
mov
push
push
jb
pop
fdiv
mov
xor
movs
aaa
mov
add
rcl
push
add
in
(bad)
or
in
sub
sub
mov
(bad)
enter
adc
rol
or
sub
pop
shl
gs
pop
call
test
sub
arpl
dec
cmp
dec
jmp
xchg
dec
push
or
dec
inc
push
add
loop
inc
cmp
and
add
loope
add
jnp
rcl
mov
call
pusha
retf
lock
pop
data16
xlat
cmp
int3
jnp
enter
div
jmp
adc
mov
jl
popa
mov
fild
(bad)
inc
sbb
ficom
cmc
cs
dec
jmp
das
dec
pop
push
ins
ror
movs
data16
dec
add
popa
mov
add
js
fwait
pop
jg
inc
jmp
cmp
test
shl
push
xchg
fst
pop
data16
iret
xlat
shl
sbb
pop
xor
add
pop
shl
add
imul
mov
and
loopne
and
adc
dec
pusha
xchg
bound
jmp
or
and
pushf
push
dec
clc
bound
mov
inc
bound
xchg
jne
adc
sub
and
push
pop
jns
div
dec
push
push
pop
fs
iret
out
ins
repz
push
retf
pop
pop
lock
inc
add
sbb
mov
add
push
inc
jge
mov
enter
or
loopne
adc
test
cmp
mov
sbb
and
xor
ficom
pop
(bad)
loopne
mov
push
cdq
jmp
inc
gs
pop
xor
popa
sbb
fld
xor
inc
inc
outs
clc
pop
pop
out
push
rcr
jg
xchg
and
ret
and
push
push
test
and
adc
icebp
fcomp
fs
ret
sub
jecxz
enter
sbb
test
loopne
pop
leave
sbb
out
in
clc
xor
mov
loope
and
fcom
fwait
dec
dec
es
(bad)
jmp
pushf
jle
pop
movs
or
dec
mov
pop
retf
movs
test
cmp
dec
inc
out
pop
(bad)
je
push
je
mov
push
or
ficom
lods
mov
imul
pop
stos
inc
push
in
mov
xchg
push
xor
pop
cmp
or
test
cmp
popf
(bad)
or
xor
mov
sbb
mov
aaa
ss
in
ret
imul
push
cmp
je
(bad)
(bad)
jmp
adc
cmp
ret
je
mov
cmp
inc
outs
xor
mov
inc
mov
(bad)
aam
push
push
out
add
call
adc
outs
inc
jecxz
or
mov
inc
xor
outs
jo
inc
in
ds
sub
or
(bad)
pop
pop
imul
cmps
and
cmp
imul
dec
xchg
adc
jb
sbb
xor
add
fcom
aaa
pop
mov
and
jnp
icebp
mov
sbb
rcl
sbb
push
ret
mov
xchg
cmp
jl
test
inc
jmp
loop
jbe
add
jne
imul
add
add
or
cmc
aas
sbb
dec
cld
pop
sub
inc
in
mov
mov
sbb
mov
je
(bad)
jno
or
cmp
pushf
xor
lea
retf
pop
sar
(bad)
add
pop
and
sub
repz
dec
and
push
add
mov
sub
nop
pop
je
dec
lea
in
pop
xchg
pop
pop
inc
sbb
ret
inc
js
add
pop
push
hlt
cmps
xchg
adc
addr16
inc
add
or
xlat
imul
and
outs
popa
mov
push
dec
mov
cmp
jg
seto
pop
mov
cmp
and
rol
push
inc
sbb
or
push
and
pop
jmp
cmc
ins
and
or
sbb
mov
pop
adc
repnz
leave
test
ss
and
and
leave
call
add
xchg
xor
cmps
sbb
scas
lods
dec
pop
xchg
outs
sub
cmps
popf
jecxz
mov
out
out
mov
adc
add
sbb
(bad)
jp
mov
sub
inc
fadd
test
das
in
push
out
test
or
aaa
xor
jb
cmps
add
loope
adc
add
adc
mov
mov
pusha
push
pop
(bad)
sti
ss
mov
or
jo
sbb
push
mov
cmp
push
push
xor
push
push
jmp
pop
mov
sbb
push
push
push
push
push
jae
stos
and
mov
and
adc
pop
sbb
ja
mov
sbb
pop
fsubrp
mov
mov
push
and
outs
mov
or
(bad)
xchg
iret
cmp
jge
retf
pop
das
mov
clc
data16
call
push
pop
jnp
ins
popf
or
mov
push
das
xor
dec
mov
test
idiv
sub
push
cmp
jl
inc
mov
mov
jge
loopne
fld
and
repnz
jle
and
ss
cmc
push
add
pop
out
jne
pusha
mov
add
cdq
lods
sub
pop
scas
sbb
test
mov
and
mov
clc
getsec
test
push
lods
retf
icebp
frstor
ds
leave
push
xor
and
push
hlt
mov
mov
mov
jne
in
fs
mov
sbb
mov
and
sbb
test
repnz
mov
xchg
sub
aad
sbb
jo
push
(bad)
push
cli
fwait
outs
por
in
iret
es
xchg
ja
push
inc
outs
and
push
pop
cmc
cmc
pop
pop
int3
lea
lea
call
fmul
cmp
test
lods
adc
je
mov
daa
outs
cmp
(bad)
sbb
adc
adc
and
bound
jg
cmps
lods
rcl
inc
mov
pop
and
xor
push
inc
mov
mov
sbb
mov
xor
mov
mov
jmp
ss
add
or
adc
pop
and
cmp
adc
push
xchg
mov
add
pusha
or
stos
pusha
mov
or
cmp
rcr
push
sbb
jl
(bad)
xchg
in
and
sub
test
enter
and
push
and
jmp
push
sbb
lock
call
fs
std
in
push
dec
inc
inc
fld
xchg
dec
inc
lods
sbb
pop
xor
ss
and
rcl
leave
les
enter
enter
stc
fdivr
dec
push
and
inc
test
call
les
or
mov
adc
movs
addr16
adc
adc
sbb
fist
ret
jns
jmp
mov
add
add
mov
cmps
dec
mov
or
mov
sbb
sbb
or
call
mov
pxor
push
mov
pop
sub
(bad)
jg
call
test
pop
push
sub
inc
adc
and
ret
out
inc
inc
inc
jo
mov
rol
ss
aaa
mov
mov
adc
div
rol
setle
shr
test
outs
pop
inc
mov
clc
inc
je
mov
inc
inc
cli
pop
pop
call
stos
sub
into
scas
adc
push
mov
bound
add
aad
popf
add
popa
sbb
or
push
pop
adc
or
add
xchg
call
pop
in
inc
lea
and
inc
test
leave
inc
dec
cli
xor
add
test
xchg
push
ret
(bad)
mov
ret
add
repnz
(bad)
es
add
test
mov
dec
inc
add
je
cmp
cmp
scas
addr16
add
and
mov
sbb
mov
mov
rol
jl
cmps
or
mov
or
mov
cdq
push
imul
or
bound
add
arpl
mov
push
jnp
xor
pop
loopne
cmp
sti
cmps
push
mov
scas
push
push
clc
push
add
mov
in
sbb
rcr
and
jmp
retf
jge
in
cmp
push
sahf
stc
ret
or
mov
add
stos
dec
adc
stc
cmps
test
push
and
and
pop
inc
sbb
xchg
add
movs
xchg
inc
js
mov
repz
int
jecxz
cmp
js
add
sbb
aad
idiv
movs
xchg
mov
dec
rol
or
mov
sbb
pop
jo
push
xor
push
or
add
add
rol
mov
xor
xchg
jnp
(bad)
movs
mov
and
dec
dec
or
push
outs
pop
rcl
add
sbb
and
add
and
push
push
std
imul
jmp
dec
or
jg
call
arpl
cmp
jl
pop
pop
mov
leave
retf
cwde
jno
sub
jl
fist
cmc
adc
cmp
aaa
mov
out
jmp
add
xchg
dec
adc
pop
int
adc
cmp
pop
int3
cmps
inc
fdiv
lock
leave
int3
neg
test
int3
add
mov
shl
mov
loope
fdiv
sub
leave
ror
jo
sub
test
push
jle
or
add
inc
jge
sub
dec
sub
cmps
or
adc
dec
mov
inc
call
clc
or
sbb
pop
sbb
dec
sbb
jg
or
dec
sar
pop
fcomp
jl
pusha
in
sbb
mov
aam
or
jnp
adc
sub
jl
and
inc
xor
fsub
stc
test
pop
mov
inc
les
ds
inc
cmp
inc
push
pop
cmp
mov
call
lods
pop
ja
xor
pop
jge
pop
jae
call
push
push
or
adc
imul
or
pop
xchg
int3
test
mov
mov
dec
push
inc
adc
add
jmp
int
shl
and
mov
out
pop
sub
adc
or
jl
add
mov
dec
(bad)
inc
jmp
jg
inc
movs
xor
mov
mov
cmp
out
pop
jnp
and
je
xchg
je
mov
arpl
fs
sbb
jmp
outs
ror
push
sub
or
dec
inc
lods
and
imul
sbb
mov
test
jle
xor
mov
or
cs
shl
aas
jnp
mov
je
dec
jne
rol
sub
adc
and
push
and
sbb
add
or
push
inc
dec
jmp
xor
sub
rcr
fdivr
push
jmp
xchg
cmc
cmp
shr
sbb
jno
cli
inc
cs
dec
or
add
pop
lds
add
in
add
jns
pop
loopne
push
pusha
int
hlt
out
jb
and
push
loope
inc
sbb
dec
adc
dec
clc
add
sub
and
sbb
pop
jmp
sbb
pop
adc
ja
and
push
rcr
push
jb
cmps
inc
inc
sub
push
dec
jae
sub
add
mov
add
aaa
jl
syscall
jmp
fiadd
or
loope
hlt
push
hlt
pop
jp
or
mov
sub
add
and
push
and
jnp
push
aam
mov
dec
adc
fcmovb
push
xor
shl
loopne
xor
and
rcl
movs
and
and
call
(bad)
mov
xor
xor
aad
mov
jmp
xor
inc
pop
pop
out
or
pop
mov
and
retf
adc
mov
add
and
fild
(bad)
hlt
jne
inc
xor
adc
fisttp
cmp
fmul
rcl
xchg
mov
ss
out
add
(bad)
shr
adc
pop
fs
lea
mov
lock
inc
dec
add
inc
pop
dec
jl
or
jne
add
push
std
scas
and
int3
(bad)
or
hlt
sub
push
mov
in
cs
push
xchg
movs
xchg
and
push
adc
jg
add
inc
sbb
add
jbe
mov
lock
cmp
mov
pop
leave
fisub
cmps
shl
dec
les
push
lods
fdivr
sub
psubsb
jb
or
and
es
out
push
hlt
push
pop
mov
or
call
fst
sub
mov
pop
mov
fmul
push
xchg
jecxz
xor
rol
pop
and
or
(bad)
adc
sbb
xor
dec
loop
and
retf
jbe
add
push
push
cmps
push
lods
or
mov
pushf
and
or
pushf
add
inc
jno
scas
or
xor
mov
scas
and
mov
mov
gs
adc
add
add
es
mov
stc
sub
stos
push
pop
sti
ins
cmp
adc
ret
dec
jae
ret
inc
retf
jns
or
clc
aas
push
hlt
jo
cwde
pop
mov
adc
clc
cwde
and
cli
es
mov
adc
(bad)
cmp
jb
test
jmp
jbe
lods
mov
js
cmp
out
and
push
jns
ror
jmp
leave
test
sbb
sbb
mov
sbb
sub
pop
adc
daa
clc
push
push
or
adc
push
push
mov
push
and
xor
mov
loop
(bad)
test
cmp
jge
xchg
movs
mov
inc
cwde
add
push
inc
mov
call
sbb
pop
es
sub
adc
or
aaa
push
inc
pop
pop
push
mov
mov
mov
xchg
cdq
or
mov
nop
test
hlt
cmp
jb
sbb
or
add
pop
ret
stos
loop
cmp
pop
adc
adc
xchg
shl
add
fcom
or
mov
jg
out
add
fistp
xchg
push
or
jne
popa
sub
imul
push
cmps
mov
mov
mov
mov
ja
inc
mov
jle
jecxz
or
fs
inc
pcmpeqb
or
push
inc
and
pop
jmp
pop
mov
movs
push
xchg
icebp
push
jno
loopne
push
xchg
sub
aaa
popa
pushf
cdq
or
sub
add
xor
add
mov
lock
es
sbb
imul
cs
sbb
inc
fs
sar
jns
sub
sbb
pusha
mov
add
mov
or
inc
adc
or
mov
sbb
sub
pop
xchg
data16
adc
jmp
cwde
test
sahf
lds
and
sub
bound
push
mov
or
xlat
fbld
adc
nop
pop
fidivr
mov
jnp
loop
sub
call
jb
repz
sbb
ds
addr16
push
ror
pop
jecxz
mov
dec
in
bnd
fistp
in
shl
dec
jmp
push
jne
mov
shr
and
add
imul
enter
jno
add
mov
or
test
adc
adc
sub
pusha
mov
js
out
jbe
add
(bad)
test
lods
out
out
mov
inc
aas
mov
push
cmps
call
pop
mov
xchg
xchg
and
js
fsub
jl
inc
push
cmc
test
and
or
adc
mov
out
sbb
jnp
push
mov
sti
or
or
xor
cld
inc
nop
jb
sub
repnz
lock
dec
(bad)
jg
dec
dec
add
je
cmp
rol
aaa
out
xor
cmp
daa
enter
sar
dec
fdiv
sub
fisub
add
jno
push
cli
movs
mov
hlt
mov
dec
dec
cmp
jb
pop
or
fldenv
or
inc
das
adc
(bad)
pop
(bad)
jb
aam
lahf
nop
mov
and
in
(bad)
add
mov
lock
nop
xor
push
or
in
(bad)
sbb
daa
push
xor
sub
mov
adc
xchg
mov
xchg
pop
leave
ins
add
lods
ja
and
sbb
in
je
and
popa
call
iret
xor
adc
repnz
mov
out
lock
jbe
jp
push
xor
pop
sub
or
je
xchg
adc
jbe
lea
lea
or
adc
push
and
int3
add
popa
test
sbb
cmp
out
pop
es
add
test
aad
add
or
lahf
pusha
hlt
xchg
pop
adc
mov
mov
inc
mov
ret
dec
dec
arpl
jmp
push
ds
or
push
(bad)
jmp
daa
lods
(bad)
cli
loopne
pop
imul
inc
sahf
mov
inc
cmp
xor
out
mov
sub
jbe
imul
enter
mov
push
pop
je
adc
mov
inc
inc
jmp
jae
in
xor
mov
xor
sbb
pusha
push
sbb
lea
push
ret
push
sub
push
lock
jg
inc
jb
mov
or
leave
test
pop
mov
xchg
movs
out
add
fist
into
mov
test
or
xor
xchg
imul
test
sbb
mov
das
push
push
jb
pop
sbb
addr16
aaa
es
in
jnp
add
jnp
inc
cmp
fld
loopne
daa
jg
(bad)
adc
push
test
cmp
xlat
xor
mov
jno
sub
and
icebp
nop
test
xor
leave
sbb
sbb
nop
test
and
mov
sub
add
stos
push
clc
cmovne
leave
je
fnstenv
and
clc
pop
ror
es
mov
je
or
mov
mov
out
push
cmp
ja
add
cmp
adc
(bad)
cmp
jp
cwde
mov
adc
xor
inc
cmp
add
fstp
pop
(bad)
and
(bad)
push
dec
pop
push
add
mov
or
pop
add
add
add
inc
ins
dec
ret
add
aaa
mov
or
rcr
aam
call
test
pop
cmp
or
or
fisttp
or
sbb
jne
add
dec
mov
jmp
cmp
(bad)
mov
mov
inc
mov
mov
ror
hlt
pop
cmp
movs
mov
fcmovu
out
jne
xchg
mov
pop
scas
xchg
in
pop
mov
cmp
ins
inc
cs
or
mov
jg
ss
cmp
je
or
out
mov
dec
inc
dec
(bad)
cli
mov
cmp
pop
jmp
inc
inc
mov
jnp
cmp
inc
add
out
call
fcomp
out
jp
and
pop
xchg
mov
ja
aam
call
jo
fidiv
add
adc
or
rol
rcl
retf
or
stos
pop
in
xchg
dec
push
fiadd
pop
lods
scas
fst
idiv
jbe
mov
and
mov
pop
inc
cdq
rcr
lods
mov
and
or
aad
sahf
and
push
(bad)
or
add
push
mov
cmp
ret
push
pop
mov
push
or
and
adc
cmp
sub
(bad)
sub
aas
sub
mov
add
push
lods
fidivr
adc
cld
mov
fwait
add
inc
or
loope
xchg
adc
shl
dec
xchg
jmp
cmp
scas
add
jb
xchg
push
(bad)
push
sbb
add
dec
test
sbb
mov
jg
pop
mov
dec
jns
neg
mov
mov
or
mov
jae
or
or
mov
jne
cmc
and
ss
jno
aam
mov
lods
inc
loope
sub
lods
enter
popa
mov
mov
or
aam
arpl
and
mov
push
call
jg
ret
jmp
out
cmp
in
xchg
jge
xchg
aaa
adc
jl
enter
fidiv
rcr
mov
adc
shl
or
pop
ins
sti
add
(bad)
adc
pusha
bnd
push
jmp
and
dec
leave
bound
mov
or
ins
add
or
icebp
ret
fmul
stos
cmp
ss
push
or
jne
and
cmp
and
xchg
call
outs
pop
or
mov
xor
jo
fisub
jne
mov
pop
dec
fs
and
xor
push
cdq
sub
ficomp
xchg
outs
jo
add
inc
call
add
ret
xchg
add
xchg
pop
and
movs
scas
lea
enter
sub
mov
or
outs
add
sub
add
inc
pop
retf
loopne
js
push
add
adc
bound
fcomp
js
addr16
pop
mov
shl
inc
push
xchg
test
inc
imul
fadd
sub
dec
dec
ja
jp
stos
das
pop
dec
scas
scas
jecxz
sbb
jg
ret
daa
inc
call
or
jne
bound
xor
pushf
pusha
pushf
cmp
cs
add
mov
pop
inc
xor
mov
ret
mov
and
setl
(bad)
add
cmps
or
mov
ja
cmps
inc
pop
jp
push
in
sub
push
dec
clc
and
shl
out
pop
movsx
and
and
sbb
mov
clc
cmp
add
fsubr
push
pop
dec
test
cwde
shrd
or
std
mov
inc
(bad)
jge
sbb
mov
mov
lea
cmc
add
inc
and
xor
out
popa
addr16
sbb
sub
mov
cmp
sar
mov
jo
clc
and
push
stos
or
fiadd
jne
xchg
das
jp
mov
retf
jo
mov
in
and
imul
sbb
js
jg
scas
test
add
xor
scas
jl
jne
jmp
adc
mov
cld
into
ret
cmp
jl
mov
sbb
mov
and
xor
in
pop
rcl
add
sub
jg
mov
jb
pop
dec
dec
inc
and
xchg
imul
jb
or
sbb
pusha
(bad)
sbb
adc
xlat
inc
push
mov
sub
fldcw
dec
fnsave
cld
clc
fwait
stos
cmp
or
and
xor
cmp
test
in
or
mov
call
push
jle
sbb
push
sbb
add
push
retf
or
nop
pop
push
inc
sahf
fwait
or
xchg
cmp
call
addr16
or
ret
aaa
push
lea
sub
lods
push
fld
aad
outs
and
jle
pop
push
lfs
dec
adc
push
cmp
dec
or
and
pushf
add
fnstenv
nop
push
pop
or
rcl
add
mov
in
jne
sbb
add
and
nop
add
inc
sub
adc
movs
rol
push
add
or
sbb
bound
stc
test
enter
or
push
push
adc
or
scas
mov
enter
lahf
sbb
jl
adc
sub
pop
inc
push
stc
mov
push
add
jbe
jbe
popf
jmp
xor
jo
mov
ds
(bad)
jle
add
or
pop
ss
or
data16
or
imul
push
inc
je
test
jmp
xor
push
repnz
aaa
jmp
pop
loopne
test
sbb
popf
pop
add
adc
sar
pop
jle
mov
in
or
test
movs
pop
xor
sbb
cmp
cmp
retf
jecxz
sbb
(bad)
xchg
je
js
iret
add
dec
or
std
test
iret
push
adc
adc
or
inc
jmp
mov
inc
jmp
call
arpl
fisttp
mov
outs
imul
cmps
adc
daa
cmps
sbb
mov
push
xor
add
cmp
jbe
test
addr16
jp
pop
cmp
dec
adc
lahf
cli
mov
adc
sbb
xchg
adc
add
cli
in
push
in
lock
inc
ins
movs
sbb
repz
and
movs
pop
ds
or
xor
xor
xchg
push
movs
nop
cmp
cli
push
je
loop
inc
shl
fadd
and
std
add
(bad)
jmp
add
add
sar
mov
add
dec
cld
push
jp
cmp
mov
and
sar
rcl
mov
and
push
push
jp
mov
test
pusha
sbb
ss
rcl
sub
sar
mov
pusha
icebp
hlt
xchg
addr16
shr
or
jl
push
push
xchg
imul
ja
iret
out
xchg
sub
sub
dec
xchg
push
push
sub
fiadd
lods
fwait
jo
dec
mov
jp
dec
mov
je
mov
mov
push
ins
(bad)
fadd
or
ss
add
jb
inc
loope
ins
mov
and
push
and
movs
retf
jbe
cmovo
add
in
mov
pop
adc
xchg
add
or
sbb
pop
mov
or
fnsave
js
cld
pushf
fwait
stc
dec
mov
xchg
out
inc
add
lea
mov
fimul
add
add
adc
or
pop
mov
cmp
cwde
or
or
dec
cmp
sti
push
fadd
push
pusha
mov
ret
push
inc
inc
mov
sbb
mov
sub
imul
jae
mov
test
adc
daa
in
mov
jmp
(bad)
jmp
inc
aam
mov
jmp
xchg
push
adc
adc
call
imul
jge
push
mov
rcr
jmp
cmp
jne
xor
nop
test
movs
xlat
pop
add
and
xor
adc
and
pusha
leave
pop
nop
pop
pop
mov
js
lock
or
sub
mov
inc
mov
cmp
sbb
jmp
mov
rol
dec
push
or
mov
test
call
icebp
xchg
inc
mov
dec
and
push
inc
xor
inc
das
mov
int
mov
inc
mov
jl
jo
sbb
div
sbb
inc
sub
aam
movs
adc
mov
mul
xchg
or
je
mov
cmp
mov
sub
and
vmovsldup
mov
inc
add
mov
pop
mov
dec
pushf
jnp
rcr
clc
cmp
sub
lea
add
sbb
adc
cmp
cmp
lock
sahf
sub
and
sahf
sar
call
add
inc
jnp
out
push
aas
movs
mov
cs
dec
jae
clc
pop
push
push
push
mov
cli
clc
in
mov
jp
xchg
cli
hlt
add
adc
xor
cmps
stc
and
xchg
cld
cwde
cmc
jae
pop
test
ret
xor
sbb
sbb
push
and
dec
and
movs
push
jo
jmp
not
ror
(bad)
ins
pop
inc
sbb
fild
dec
pop
add
nop
pop
and
shl
retf
inc
sar
popf
jmp
setg
sbb
inc
sbb
push
adc
pop
inc
ret
(bad)
and
sbb
or
push
fst
daa
test
fld
jg
add
imul
mov
pop
pop
and
call
fiadd
pop
jae
test
mov
pop
ss
mov
ins
jno
retf
push
xchg
add
enter
jl
in
add
push
(bad)
js
pop
sbb
sbb
push
fcmove
fmul
and
popa
jmp
cmc
or
xchg
rol
inc
test
je
sbb
data16
adc
sahf
test
dec
je
loopne
mov
xor
scas
push
inc
mov
ret
pop
or
movs
cmp
and
or
xor
leave
popa
mov
xor
cs
sahf
sub
sub
dec
inc
std
cli
or
fcom
push
or
cmp
pop
pop
shr
dec
clc
mov
sbb
test
cs
xchg
mov
inc
in
cmps
and
push
dec
dec
int
sahf
sub
sbb
inc
dec
fild
in
je
add
cmp
test
enter
mov
dec
mov
dec
or
outs
shr
push
jmp
inc
dec
test
jl
push
mov
pop
jmp
mov
mov
shl
push
scas
xchg
mov
sbb
mov
xor
or
fistp
pop
pop
cmp
jmp
push
call
push
cld
dec
pop
data16
push
popa
sub
xor
dec
add
or
leave
mov
mov
inc
lea
aas
or
sub
mov
sbb
mov
jle
jbe
or
rcl
xor
int3
adc
jmp
mov
inc
pop
arpl
push
popa
repz
test
stos
cmp
shl
test
xchg
push
je
pushf
cmp
sbb
mov
push
(bad)
cmps
inc
stos
xor
pop
stos
cs
rcr
fs
fs
loopne
test
movs
jmp
dec
minps
ins
enter
imul
pinsrw
mov
rcl
or
xor
xor
das
aas
pop
aaa
clc
sar
daa
add
test
sbb
mov
loopne
push
push
push
aam
test
jmp
adc
lods
data16
dec
xchg
or
int
(bad)
ds
sub
inc
sbb
push
add
jne
(bad)
(bad)
movs
xor
aas
dec
pusha
push
data16
inc
pop
mov
add
push
outs
lahf
or
jno
xor
xor
jmp
int
pop
xchg
push
outs
mov
push
js
dec
pop
jne
jmp
mov
mov
je
or
ja
sbb
or
add
adc
aaa
or
lea
lea
icebp
dec
sbb
xchg
rcl
les
pop
les
xchg
mov
test
and
push
enter
jns
sbb
dec
push
enter
jle
add
inc
jne
xlat
push
or
call
jnp
outs
je
or
sbb
adc
jmp
and
ror
add
retf
pushaw
pop
retf
add
mov
mov
fimul
outs
or
aaa
add
jmp
jo
jne
jecxz
in
jae
add
fisubr
add
inc
cld
mov
and
adc
or
outs
jmp
sbb
sahf
pop
add
pop
scas
cld
ds
cld
dec
or
mov
push
addr16
push
push
pop
mov
and
mov
or
cmps
loop
clc
nop
scas
push
call
pop
inc
pop
add
sbb
mov
cs
test
jp
xchg
jo
sbb
sub
and
shl
jae
idiv
mov
push
imul
std
cmps
out
xor
mov
and
jp
push
push
sbb
add
enter
pop
mov
fdivr
retf
nop
mov
adc
loopne
mov
out
ds
loopne
inc
test
xchg
fistp
xchg
(bad)
add
ins
inc
call
rol
or
cmp
fst
mov
xchg
jl
mov
adc
xchg
or
xor
pop
xor
iret
inc
xor
and
or
add
adc
mov
(bad)
sbb
jbe
push
pop
dec
js
mov
daa
sub
or
dec
and
div
jne
or
shl
and
sub
xor
les
(bad)
mov
jnp
push
adc
push
dec
sub
mov
pusha
test
or
pop
pop
or
or
push
adc
(bad)
add
and
mov
in
in
pop
scas
push
push
push
push
sub
mov
popa
pushf
(bad)
push
xchg
rcr
imul
lahf
or
clc
push
punpckhbw
dec
push
mov
jo
add
sub
aaa
fs
vmptrst
add
jle
pop
cmps
or
(bad)
mov
retf
pop
fadd
add
fiadd
xor
icebp
bound
lds
cdq
ror
cmps
xchg
ret
mov
fwait
jg
jne
cmp
jb
or
data16
and
cmps
or
jp
xchg
cli
(bad)
or
in
pop
inc
shl
cli
or
jno
nop
mov
(bad)
stc
add
rol
cmp
mov
mov
popa
pop
ja
mov
adc
push
pop
xor
pop
push
fwait
ror
jo
dec
imul
loope
retf
adc
popf
leave
inc
fsubr
adc
aaa
cmp
sbb
repnz
dec
pop
cmp
and
std
test
loope
in
xchg
push
inc
add
adc
test
adc
fsubr
and
pop
ja
mov
lock
je
and
mov
add
push
inc
hlt
pop
pop
jne
push
fsub
jp
or
stos
ja
pop
fsub
mov
sbb
scas
jo
imul
imul
pop
(bad)
push
jmp
in
shl
jae
sub
das
scas
and
mov
sub
jnp
cmp
sbb
test
mov
pop
and
and
add
or
inc
or
cmp
inc
imul
or
and
jecxz
xor
mov
sbb
test
mov
and
pop
pushf
ja
test
mov
ret
jne
fbstp
cmc
adc
dec
dec
pop
add
jae
cmps
fmul
js
add
fsubr
pop
push
in
ds
ret
push
pop
je
sub
aam
std
and
out
sti
push
xor
movs
sbb
dec
cmp
push
mov
add
neg
mov
shr
lahf
dec
out
inc
je
repnz
mov
fld
jge
push
pop
nop
(bad)
mov
mov
jae
mov
adc
inc
scas
adc
dec
aad
out
sub
sub
pop
xchg
xchg
inc
lock
push
push
add
xchg
dec
cwde
popa
add
add
ror
add
retf
test
ret
fptan
lea
inc
and
inc
and
pop
rol
dec
inc
ror
bound
aas
and
(bad)
dec
inc
pop
js
je
adc
adc
(bad)
inc
cld
pop
clc
mov
xchg
call
mov
test
mov
ins
leave
cdq
adc
ret
cs
sub
inc
xchg
dec
in
adc
ret
ins
mov
ss
mov
and
sahf
std
xor
inc
fs
or
and
and
sub
and
or
adc
ja
shl
xor
and
mov
sbb
sar
jo
jmp
adc
and
outs
pop
popa
shl
inc
das
popa
cmp
test
test
pop
enter
inc
das
mov
push
je
cwde
mov
xor
mov
cmp
mov
ins
add
ss
bound
pusha
popf
or
ins
daa
loopne
xor
aaa
pushf
add
ror
push
add
ss
jmp
push
jno
adc
mov
xor
mov
push
pop
and
js
out
dec
add
test
test
sbb
jne
mov
adc
inc
mov
jl
sar
and
or
pop
add
imul
xchg
xor
cmp
ja
ret
xor
and
in
arpl
loopne
sbb
pop
(bad)
jb
sub
jl
cmp
enter
mov
les
sbb
sub
adc
pop
add
inc
and
das
cwde
fs
jne
sub
push
aad
push
popa
push
daa
fistp
enter
and
ins
mov
sub
and
loope
or
fnop
rcl
xor
add
or
jge
jle
jae
sbb
imul
pop
fndisi(8087
cdq
and
adc
fwait
jne
adc
or
aas
inc
es
pushf
push
arpl
(bad)
(bad)
rcr
or
jp
inc
jmp
arpl
push
dec
das
lea
pop
leave
mov
cdq
sbb
mov
add
and
add
popf
test
add
and
pop
imul
dec
inc
xchg
inc
ds
(bad)
mov
or
imul
xchg
popf
inc
data16
jge
sbb
in
ins
je
je
push
mov
mov
dec
js
push
pusha
add
iret
fdiv
xchg
fld
outs
cdq
dec
outs
pop
mov
cs
mov
push
sbb
push
ret
sar
xor
dec
inc
push
sub
in
and
mov
inc
xor
rcl
dec
hlt
cs
and
push
inc
add
mov
pushf
pop
sub
adc
inc
sub
or
mov
sbb
xor
mov
push
or
adc
pop
fwait
push
mov
adc
pop
js
or
push
fld
loopne
fsub
inc
daa
jmp
and
pop
jmp
test
and
lods
add
mov
push
call
retf
mov
jns
cmp
ja
push
jg
dec
jae
push
mov
jns
push
sub
test
retf
and
and
ds
jmp
sub
add
mov
cmc
xor
and
mov
mov
in
add
shr
dec
push
and
xor
inc
mov
mov
and
push
arpl
mov
adc
imul
rol
inc
xchg
lock
add
xor
cmp
inc
add
or
mulsd
push
adc
sbb
sbb
jmp
pop
sub
and
adc
iret
sti
jbe
add
add
adc
and
cmp
les
loop
ja
push
bound
xchg
mov
neg
sti
sahf
js
js
ins
fsub
loop
call
mov
jle
mov
fcom
ins
lahf
neg
js
pop
sbb
shl
repnz
push
pop
ror
pop
ja
mov
daa
and
mov
mov
pop
or
iret
sbb
jecxz
idiv
idiv
pop
jmp
sub
pop
repnz
lahf
out
fs
fisttp
int
into
unpckhpd
and
adc
lds
(bad)
jg
sub
jnp
fisub
jne
loopne
push
dec
fidivr
inc
cmp
(bad)
mov
repz
sbb
mov
(bad)
jp
add
aas
inc
cmps
imul
mov
jmp
push
dec
fcmove
mov
sub
lods
or
enter
nop
mov
in
jmp
fnstsw
push
cld
std
fwait
mov
sar
sub
shl
and
loope
sub
add
gs
push
(bad)
and
fxch
iret
lahf
(bad)
jnp
cmp
and
rol
mov
mov
test
shl
add
les
adc
inc
(bad)
(bad)
cmc
js
fadd
adc
test
pop
in
ret
or
iret
sub
idiv
fld
or
loope
add
pop
ret
stgi
sti
test
mov
sahf
or
pop
or
pop
pop
faddp
inc
or
test
sti
pop
nop
push
cmp
xor
add
loopne
pusha
mov
or
mov
f2xm1
imul
fstp
ret
push
je
retf
ins
pop
push
push
push
fldcw
test
mov
pop
fs
int
jp
mov
and
mov
add
add
mov
add
mov
add
(bad)
mov
shld
shl
push
add
or
fld
or
jae
cli
scas
xchg
and
stos
add
pop
pop
ret
lods
cmp
or
(bad)
adc
or
add
adc
loop
mov
test
jmp
daa
je
xlat
xor
retf
mov
jne
sbb
sbb
mov
add
jb
fild
fdiv
jbe
mov
pop
enter
(bad)
fsubr
mov
(bad)
repnz
or
rcr
loopne
(bad)
mov
sub
push
fmul
jmp
jno
movs
test
dec
xor
mov
pop
push
outs
jge
jns
add
ins
or
xchg
dec
xor
sub
call
xchg
or
(bad)
jmp
mov
xor
loope
sahf
adc
leave
rcr
fimul
nop
cmp
or
cmp
adc
push
adc
sub
cmp
into
nop
jle
xor
sahf
out
fldcw
sub
aas
es
cmp
or
pop
xchg
mov
ror
in
repnz
stos
adc
rol
adc
(bad)
and
mov
imul
pusha
lds
push
xlat
pop
scas
or
out
imul
dec
jl
ja
inc
sbb
ret
or
mov
adc
loop
xor
mov
retf
adc
xor
aad
ds
mov
out
fdiv
xor
jns
not
repz
and
push
lods
(bad)
fld
je
inc
fmul
sbb
sub
leave
or
(bad)
pop
ficom
adc
mov
adc
cmp
stc
inc
jmp
scas
jg
rcr
sbb
sub
xchg
jb
ja
jmp
cli
out
cmp
(bad)
jb
xchg
mov
ficom
push
push
mov
es
ja
or
fwait
ror
loope
sbb
dec
jae
mov
cmp
es
jb
cmp
rcr
lahf
inc
mov
ja
push
push
jbe
int
fiadd
push
rol
ins
test
mov
mov
dec
hlt
out
push
dec
nop
inc
jae
or
push
mov
mov
in
jne
inc
icebp
jmp
add
or
and
in
fldl2e
pushf
mov
fimul
(bad)
lock
test
sbb
fild
out
test
jne
call
es
dec
int3
sbb
add
fld
aad
loope
scas
cmp
loop
add
lock
in
inc
in
loopne
dec
aaa
fwait
rol
push
ret
inc
out
mov
mov
cli
pusha
jne
pop
in
jmp
gs
mov
mov
mov
push
fldz
xchg
rol
jae
xchg
cmp
push
in
in
jmp
or
cmp
or
lock
push
or
xchg
add
xor
scas
daa
ret
sbb
ficomp
fcompp
mov
out
test
inc
aam
mov
das
lock
(bad)
daa
jbe
test
fcomp
cmp
je
inc
pop
push
and
fiadd
and
scas
fcomp
cmp
icebp
push
mov
mov
or
movs
xchg
sbb
movs
jbe
sub
(bad)
and
frstor
push
push
call
cmc
ret
aas
dec
test
hlt
add
jle
cmp
fmul
std
loopne
mov
add
out
push
bound
jp
push
push
test
jmp
jnp
sbb
add
movs
xchg
cmp
fs
into
leave
mov
pop
ret
cmp
popf
out
pusha
add
xchg
dec
scas
(bad)
mov
jne
mov
mov
xchg
cmp
inc
mov
je
push
xor
cs
fld
(bad)
inc
sahf
out
ret
out
out
fldcw
std
and
repnz
sbb
push
cdq
std
lods
das
and
add
out
jl
shr
jae
test
js
sub
add
dec
retf
retf
push
add
(bad)
mov
jbe
mov
cld
lea
nop
and
cmp
push
ins
push
inc
or
xor
pop
mov
push
or
pop
pop
pop
fld
inc
icebp
sbb
int
sbb
add
popa
das
sub
push
adc
mov
jno
ss
or
mov
shld
sub
or
aaa
push
neg
ins
mov
call
sbb
leave
ror
in
xchg
loopne
rcl
jb
ds
leave
mov
or
jb
in
leave
nop
leave
mov
leave
sub
xor
cdq
ss
dec
test
push
enter
mov
scas
xchg
sbb
pop
mov
adc
jnp
ja
sbb
fisttp
or
aas
aaa
and
pop
add
adc
pop
scas
cmp
sub
push
add
test
and
add
jb
xchg
mov
and
test
shl
dec
xor
adc
or
pop
mov
add
cdq
in
shr
and
and
std
mov
adc
adc
add
or
jmp
xlat
aam
push
sub
mov
xor
and
data16
sub
add
push
clc
clc
pop
leave
add
adc
lock
and
fisttp
je
add
jl
and
jecxz
push
test
jmp
pop
out
or
imul
mov
clc
or
and
jo
xchg
je
test
aaa
xor
or
inc
loope
fld
and
pop
adc
pusha
mov
sub
sti
pusha
pusha
loope
pop
sub
dec
and
add
fstp
jmp
pusha
pusha
(bad)
dec
dec
mov
emms
push
sub
jge
inc
not
rol
and
adc
sti
fist
add
test
fisttp
xchg
or
mov
sub
mov
pop
cdq
sbb
adc
or
push
or
adc
add
out
and
add
adc
inc
pop
fnsave
pop
sbb
cwde
push
sub
jnp
and
inc
add
adc
dec
inc
fld
fstp
jmp
fisttp
test
pop
sar
aad
jle
pop
sbb
call
test
sbb
sub
xchg
sub
jl
inc
mul
dec
add
adc
fnstenv
popa
pop
xor
test
cmp
add
ss
addr16
inc
inc
xchg
adc
mov
dec
or
sbb
add
lds
dec
cmp
lea
dec
jmp
sub
sub
jmp
sub
daa
pop
jp
push
or
add
psubusw
mov
adc
xor
loopne
div
add
test
cmp
scas
(bad)
add
xor
pop
in
dec
inc
adc
inc
jge
arpl
fucomp
(bad)
xchg
dec
mov
or
push
inc
daa
outs
add
repnz
shl
inc
bound
mov
shl
dec
shl
cmp
sar
shr
sbb
shr
test
xchg
sbb
(bad)
loopne
fchs
fsubp
mov
push
push
mov
jmp
pop
aam
loopne
hlt
xchg
gs
std
mov
loop
call
push
adc
pop
mov
fwait
test
fisttp
jg
das
sub
sbb
pop
sub
add
add
and
mov
popa
daa
inc
xor
xor
frstor
retf
sub
mov
adc
fs
adc
out
sub
(bad)
push
icebp
pop
or
adc
fiadd
imul
xor
adc
inc
inc
push
inc
sbb
jge
jmp
mov
push
lods
aad
shl
xlat
push
clc
nop
add
inc
jmp
jno
mov
jp
ret
dec
inc
and
mov
test
daa
pusha
jge
out
pop
or
add
in
gs
xchg
scas
adc
lahf
and
and
mov
cmp
jo
imul
dec
push
stos
add
mov
and
fdiv
rol
xor
mov
and
sar
das
adc
and
pop
pop
add
push
arpl
enter
cwde
imul
daa
mov
fidivr
inc
adc
inc
fild
cdq
adc
adc
sbb
mov
mov
mov
mov
inc
sub
jo
stc
add
loope
or
jp
in
es
pop
push
add
imul
sbb
je
and
add
xor
clc
or
lock
pop
into
push
(bad)
mov
in
sbb
into
iret
and
or
jmp
dec
sub
sbb
sbb
push
mov
cmp
out
nop
fnstcw
xchg
inc
jb
aam
dec
pop
cld
or
movs
pop
aaa
cmp
adc
pop
or
shl
ins
ins
dec
rcl
pushf
cmp
push
or
push
out
hlt
imul
mov
push
pop
mov
adc
cmps
imul
cli
fimul
aad
stc
xlat
stos
jmp
sbb
push
and
sub
push
push
push
shr
cmp
cmp
and
mov
push
xchg
fs
lods
mov
lds
loop
inc
fld
pop
inc
shr
ret
dec
xor
fsubr
push
in
shr
ins
or
push
mov
fwait
inc
pop
mov
fcmovnbe
fwait
and
jecxz
mov
ja
out
outs
fwait
sbb
pop
and
adc
jo
or
or
xor
or
outs
scas
pop
dec
loop
je
in
dec
sbb
and
lea
xchg
scas
or
fistp
cmp
inc
sbb
gs
out
mov
pop
inc
fcomp
and
leave
sbb
mov
(bad)
cli
push
adc
jmp
mov
xor
add
dec
push
and
pop
repz
jo
xchg
push
pop
fsubp
jno
rol
jmp
mov
leave
fnstenv
stos
je
sar
ret
pop
inc
jnp
loopne
addr16
xchg
or
mov
outs
xor
push
inc
mov
dec
in
int
leave
ficomp
dec
inc
scas
(bad)
mov
ret
(bad)
icebp
mov
inc
pop
mov
inc
lds
out
jge
or
int
test
xor
push
addr16
out
lods
cli
adc
fisttp
test
mov
pop
push
mov
sbb
adc
inc
out
mov
daa
mov
or
mov
dec
rcl
cmp
out
fnstenv
ret
jno
adc
mov
jo
jge
push
push
sbb
je
call
imul
cwde
xor
pop
shr
and
xchg
into
sbb
mov
sar
pop
xchg
(bad)
in
cmp
test
js
movs
(bad)
dec
mov
adc
dec
mov
(bad)
leave
sub
sbb
div
xchg
or
mov
sar
dec
and
inc
push
(bad)
and
inc
dec
aad
(bad)
push
dec
mov
pop
add
xor
sub
pop
js
cmp
cmp
sbb
xchg
ins
(bad)
in
adc
push
dec
mov
add
mov
ins
call
loop
ss
clc
xor
add
in
jl
dec
test
adc
loop
add
movs
fbstp
daa
mov
dec
cwde
inc
xlat
add
fstp
jnp
gs
xor
pop
dec
sbb
(bad)
sbb
add
fld
out
adc
push
das
sbb
pop
adc
rcl
(bad)
dec
or
pushf
sbb
in
sar
lea
dec
mov
fwait
sahf
add
inc
jmp
adc
stos
lods
pop
aam
or
mov
mov
inc
or
hlt
xchg
add
cmp
and
test
jo
je
inc
sub
sub
pop
cmps
hlt
aaa
sbb
imul
pop
dec
scas
sbb
push
in
or
je
inc
sbb
push
jnp
adc
fimul
fsubrp
jns
or
pop
add
mov
retf
cmp
inc
leave
dec
push
jno
or
rol
fidivr
mov
cld
pop
mov
jmp
inc
cmp
je
sbb
push
cmp
pop
mov
sbb
dec
add
stos
or
inc
out
sub
pusha
jne
fs
mov
inc
push
dec
and
pcmpeqb
and
div
inc
cmp
ds
dec
sbb
neg
add
dec
aaa
cmps
and
pop
adc
sbb
jo
lahf
shl
les
xchg
cmp
cs
sbb
adc
cmp
rcr
movs
inc
sbb
es
and
cs
dec
jo
jp
ss
mov
inc
aaa
push
and
push
loope
mov
(bad)
push
pop
loopne
jmp
xchg
fwait
inc
dec
adc
add
clc
inc
rcl
sahf
es
pop
or
sbb
jb
lock
ret
loop
mov
sti
cmp
call
out
inc
inc
call
or
or
xor
pop
pop
sub
push
inc
bound
inc
loop
loope
pop
aam
push
cmp
push
dec
dec
cmp
sub
aas
shr
xor
cmp
jno
loopne
add
and
add
add
daa
xchg
jo
or
jle
or
cmp
lahf
gs
cli
sub
push
add
xchg
or
hlt
or
mov
scas
and
push
inc
adc
clc
jmp
xor
jl
mov
pop
nop
rol
add
dec
cmp
xlat
in
bound
inc
push
jmp
hlt
ds
inc
mov
(bad)
hlt
jo
sbb
inc
cwde
or
sbb
adc
mov
xchg
es
loop
shr
add
movs
in
popa
push
xchg
aaa
or
push
outs
xchg
and
sbb
jmp
dec
dec
jmp
add
pusha
or
stos
ret
icebp
mov
mov
or
fcmovnbe
call
push
xchg
mov
push
shl
lock
movs
mov
adc
ins
adc
sub
dec
call
dec
pop
les
adc
adc
inc
rcl
pop
push
in
pop
mov
loope
mov
and
xchg
sbb
sub
and
cs
(bad)
ret
imul
out
and
or
aaa
mov
adc
aam
dec
fs
scas
or
daa
sub
jl
push
xchg
inc
jecxz
in
add
das
je
sbb
mov
pop
pop
or
cmp
jg
add
xchg
movs
cmp
push
add
sbb
xor
xor
fild
mov
fiadd
push
or
add
lods
dec
leave
ret
sar
or
cmp
(bad)
add
sub
in
sbb
add
xor
call
in
stc
push
add
mov
mov
inc
dec
add
mov
pop
pop
ss
pop
ss
sbb
test
mov
push
movs
push
push
and
jge
push
sbb
xchg
adc
test
xchg
dec
add
and
jno
xchg
sub
int3
push
cmp
sub
sbb
pushf
or
pop
adc
cmp
xor
lock
mov
inc
push
jne
xor
cli
int3
les
sar
xor
je
sbb
ret
ret
or
cld
and
int
xor
fadd
mov
jb
iret
stos
fadd
fcmovnb
std
pop
sbb
cmp
jne
rol
dec
je
outs
push
das
sbb
pusha
popa
xchg
repz
cmp
aas
sub
adc
xor
cmp
push
mov
cmp
jne
mov
inc
add
je
sbb
loop
jmp
dec
jle
int
push
add
retf
bound
das
cs
xor
push
or
aad
mov
into
jbe
and
or
pushf
adc
cmp
fild
(bad)
ss
jae
fsub
push
or
push
or
inc
jns
pop
or
jmp
bound
jp
fdiv
pop
out
rol
test
xor
xchg
(bad)
pushf
call
test
mov
hlt
push
rcl
push
loopne
xor
push
std
cld
and
lds
fimul
xor
dec
cld
inc
sbb
mov
cmp
add
ret
sbb
aaa
mov
mov
in
lahf
inc
jmp
sar
inc
bound
aad
xchg
out
dec
sbb
adc
dec
and
and
pop
aam
movq
cmp
add
shr
lock
pushf
sbb
mov
ror
push
rol
push
cmp
bound
adc
and
out
stos
push
add
push
jp
pop
push
shr
dec
inc
pop
dec
and
and
hlt
xor
adc
push
test
jmp
bound
movs
imul
add
movs
xor
xor
shl
push
push
adc
sbb
ss
push
cs
int
xor
and
and
dec
fidiv
sub
sub
ss
sub
sub
or
das
sbb
xor
inc
cmp
sbb
inc
and
movs
inc
dec
dec
xchg
out
call
movs
sbb
dec
out
call
sbb
dec
call
ss
jo
cmp
imul
cmp
push
pop
pop
ds
jb
or
aas
mov
gs
cs
mov
cs
jb
nop
inc
xchg
inc
or
gs
cwde
sub
mov
fdiv
movs
xor
test
or
push
mov
es
pop
mov
push
xor
loop
aad
scas
addr16
pop
xchg
fwait
shr
retf
nop
enter
repnz
test
ss
gs
mov
sub
xchg
xor
sub
sub
call
pop
jb
aam
retf
nop
pop
xchg
inc
hlt
xchg
mov
inc
cld
xchg
retf
sub
stc
scas
jbe
add
mov
push
mov
leave
dec
adc
scas
gs
mov
xor
mov
or
mov
xchg
cmp
sub
nop
jl
cmp
aaa
xor
and
sub
ds
pop
xchg
aas
inc
inc
in
xchg
retf
inc
inc
dec
popa
inc
xchg
stc
xchg
push
xchg
out
mov
sub
push
ins
dec
push
pop
pop
pop
add
das
pop
and
jo
xor
fwait
cmp
(bad)
dec
jp
push
push
test
sub
xchg
in
movs
push
or
adc
fld
sbb
sbb
xchg
xchg
xchg
sub
xor
movs
xchg
xchg
sbb
cmp
cmp
inc
inc
cmovs
cmp
push
push
pop
pop
nop
int3
or
in
movs
and
je
mov
xor
jl
sbb
ficom
mov
xchg
cwde
dec
es
fs
mov
xchg
test
rcr
int3
leave
mov
es
dec
xor
loopne
xchg
dec
xor
call
xor
and
clc
cld
nop
in
xchg
add
add
ficom
xor
adc
adc
sbb
dec
xor
and
sub
xor
and
xor
dec
shl
inc
gs
cdq
jbe
xchg
dec
dec
mov
xchg
dec
es
pop
pop
outs
sbb
cdq
pusha
sbb
rol
push
mov
mov
add
loope
or
scas
sub
jecxz
fdiv
in
(bad)
push
add
cmp
add
popa
or
sbb
mov
std
inc
inc
xchg
xor
push
stos
test
sti
or
shl
inc
jmp
and
mov
mov
call
cmp
ret
sbb
les
add
or
or
add
mov
or
or
shl
fisubr
stc
mov
mov
or
xor
sub
std
sti
push
rep
mov
pop
test
hlt
pop
das
or
shl
cmp
jp
dec
cld
sbb
xor
shl
mov
ss
push
inc
pop
adc
mov
out
pop
sbb
loopne
adc
fwait
mov
sub
repz
or
into
push
sbb
test
fidiv
inc
mov
jl
or
jg
push
xor
pop
add
jmp
and
add
adc
dec
inc
data16
xor
in
popa
mov
or
xchg
imul
cmovg
add
mov
push
or
pusha
call
ins
adc
sub
sahf
outs
sbb
adc
cmp
outs
mov
xchg
mov
jmp
or
adc
nop
pop
cs
cwde
xchg
dec
cs
sbb
and
and
cmp
jns
leave
mov
dec
cs
pop
rol
and
int3
push
cs
or
loope
sbb
or
nop
sti
cmp
xchg
ja
mov
mov
sbb
shl
cmp
or
mov
sbb
adc
push
mov
ror
pop
mov
ficom
and
and
sub
cmp
sbb
add
sbb
xor
pop
ror
daa
sub
sbb
sub
push
push
cs
das
dec
aad
xor
cmp
pop
cmp
add
xchg
dec
xchg
out
mov
push
mov
cmp
mov
sbb
add
repnz
in
dec
add
add
bnd
dec
add
dec
add
push
or
aad
xor
add
mov
pop
int3
add
mov
sar
mov
imul
adc
xchg
mov
stos
and
and
push
sub
mov
in
pop
iret
ja
jmp
cdq
loopne
sbb
pop
adc
cmp
mov
sbb
sub
xor
repnz
add
or
es
stos
aam
enter
shr
dec
push
sbb
adc
add
sahf
adc
inc
xchg
dec
shr
jbe
mov
ret
loopne
fdiv
sub
cmp
push
fmul
or
repnz
sub
xchg
xchg
add
xor
scas
pusha
adc
ja
sbb
mov
inc
cmp
add
and
out
dec
jne
add
push
js
jle
add
jmp
sahf
mov
and
jle
or
leave
xchg
arpl
pop
mov
ficom
mov
in
mov
sub
sub
xchg
clc
and
outs
adc
mov
test
or
add
outs
jbe
push
jae
fstp
push
push
push
jp
gs
mov
add
mov
add
test
pop
mov
mov
mov
mov
(bad)
mov
sbb
mov
sbb
add
or
mov
add
pop
push
add
retf
adc
jg
lea
(bad)
dec
jmp
xor
in
or
jle
sbb
sub
dec
sbb
cdq
gs
loope
retf
push
sbb
dec
or
add
mov
mov
(bad)
and
mov
jle
enter
int
les
cs
cmc
jbe
cmc
xor
ret
jmp
mov
in
jle
in
loopne
push
inc
jmp
xor
jmp
test
movs
jns
adc
fadd
int
shr
dec
ret
stos
lahf
inc
add
sub
test
adc
add
mov
stos
add
jmp
call
fild
cmp
push
xor
mov
jae
mov
mov
xlat
ins
inc
cld
cmp
and
jecxz
ret
mov
shl
jp
int3
test
xchg
adc
sbb
mov
jns
dec
mov
fcomp
or
cmp
mov
push
dec
pop
retf
stos
mov
add
dec
mov
loop
cmps
cmp
and
je
and
jne
mov
xor
push
adc
imul
push
out
push
add
mov
cmc
and
or
retf
push
outs
arpl
cmp
shr
jmp
jg
sub
inc
cmp
ja
call
sbb
cli
inc
and
rol
push
jg
div
inc
jl
stc
pop
jle
sub
push
sbb
or
push
adc
test
push
mov
or
mov
hlt
add
add
add
sub
xor
and
xchg
pop
jae
lods
inc
pop
mov
dec
sbb
push
push
xchg
adc
and
fadd
jge
and
fild
add
add
xchg
sub
mov
push
push
test
jmp
cmp
pop
sbb
(bad)
cmp
movs
(bad)
xchg
ds
clc
pop
loope
add
add
test
data16
or
lock
inc
adc
inc
sub
out
data16
sbb
mov
retf
data16
adc
nop
add
addr16
or
outs
or
jmp
test
sbb
sub
push
dec
ret
sbb
je
adc
add
push
jne
jno
scas
inc
sub
fs
jbe
sub
sub
fs
bound
or
aaa
mov
inc
dec
inc
or
ss
dec
mov
imul
les
xchg
jmp
sbb
cmp
daa
das
sar
sub
jmp
dec
jne
aaa
das
scas
mov
push
out
ss
sbb
ja
leave
call
mov
add
push
sub
sub
lahf
clc
jbe
push
add
cmps
push
and
inc
or
inc
mov
xor
mov
inc
sbb
sub
sub
add
add
sbb
ins
fldenv
and
add
inc
in
dec
sbb
cs
push
ret
mov
add
pop
cs
cmp
cli
imul
das
ins
imul
int
xchg
adc
jns
add
test
inc
and
lea
scas
push
dec
jge
cli
rcr
clc
push
js
pop
dec
pop
xor
fmul
je
add
cmp
mov
add
(bad)
push
cmps
inc
addr16
cmp
or
mov
sub
adc
das
enter
push
push
xchg
or
sbb
cmp
sub
xor
mov
sub
pop
sbb
sbb
jg
add
inc
adc
sbb
mov
ret
(bad)
inc
imul
sbb
test
add
mov
jmp
popf
hlt
add
(bad)
retf
out
xor
imul
arpl
mov
(bad)
mov
inc
ja
and
push
mov
int
retf
or
dec
jge
xor
mov
sbb
or
mov
in
inc
and
or
inc
je
dec
mov
pop
fs
out
leave
rcl
imul
push
jl
sbb
cs
inc
adc
inc
sbb
push
or
cdq
dec
sbb
xor
loope
adc
lea
and
sbb
mov
inc
pop
dec
nop
push
cmp
jne
mov
rcr
mov
jne
(bad)
inc
cmp
jne
call
jbe
stos
and
rol
test
lahf
out
mov
(bad)
(bad)
jmp
std
std
jmp
enter
cld
cld
jmp
fist
adc
mov
mov
in
adc
adc
inc
cmp
inc
add
jb
imul
repnz
ret
xor
or
retf
add
add
mov
sbb
fiadd
adc
or
fst
ins
mov
fild
inc
dec
imul
inc
aaa
mov
and
xor
dec
sub
sbb
js
test
add
scas
cmp
add
das
inc
arpl
adc
sub
mov
aas
test
or
mov
mov
and
(bad)
and
add
push
xor
push
jg
dec
les
iret
mov
dec
push
sub
hlt
jmp
adc
mov
aad
pop
je
jmp
cmp
jg
jl
xor
push
lahf
pushf
jmp
inc
sub
or
pop
sbb
test
jb
lods
cmps
and
sub
adc
mov
push
and
sbb
or
aam
call
jecxz
ret
pop
jle
ficomp
fist
dec
loopne
ins
ror
inc
aam
ss
push
outs
(bad)
xchg
xor
mov
iret
sti
adc
push
push
add
or
imul
sti
push
cmp
xchg
stos
loopne
sbb
add
sub
add
ins
popa
add
xor
mov
pop
mov
mov
inc
add
or
mov
cmp
cs
cs
nop
and
enter
sbb
xor
ret
cmp
push
xlat
mov
bound
pop
xchg
or
mov
push
add
jg
(bad)
or
add
cdq
ins
ja
jmp
fxch
clc
inc
movs
test
jae
push
hlt
xor
xchg
mov
adc
inc
dec
pusha
push
adc
dec
test
adc
mov
mov
inc
rol
inc
mov
mov
xlat
xor
jo
jge
jae
sti
jbe
sub
mov
(bad)
pop
sub
sub
cmp
jb
xor
add
imul
adc
lock
jle
pop
ss
add
and
pushf
add
cmp
rol
mov
pop
test
mov
hlt
hlt
mov
mov
cmp
stos
stos
cmps
stos
pop
pop
enter
jae
sbb
les
fs
sbb
dec
lea
and
test
lea
adc
repnz
inc
fsub
inc
lea
pop
cwde
pop
sub
inc
shl
push
cmp
or
popa
(bad)
pop
push
inc
or
shl
not
test
lds
xchg
and
or
repz
jmp
and
mov
scas
mov
inc
cdq
rcl
push
adc
iret
jmp
mov
leave
shl
cmp
or
cmp
pop
sub
adc
mov
inc
jae
jne
or
push
pop
mov
adc
add
inc
jo
fidivr
mov
and
fadd
cmp
xchg
lea
sub
xor
mov
stos
mov
inc
push
and
or
ret
xchg
or
xchg
add
xor
sbb
sbb
or
loop
das
inc
inc
cmovo
inc
iret
pop
retf
sub
sub
not
push
adc
push
pop
popf
jb
jno
(bad)
les
iret
cwde
ds
push
or
out
(bad)
and
aam
out
push
add
mov
and
into
push
out
jo
bound
mov
or
mov
or
dec
jns
cwde
pop
repnz
and
test
lods
(bad)
xor
adc
enter
mov
out
cwde
ror
rcr
dec
xor
cmp
cwde
js
popa
es
fadd
lea
popf
sub
and
adc
jb
mov
xor
add
mov
jns
cmp
loopne
mov
sbb
ret
aas
sbb
cmp
scas
fist
xor
lea
fst
movs
addr16
das
cdq
pop
cmc
and
adc
mov
or
sub
or
arpl
mov
dec
dec
add
movs
mov
popf
je
daa
xchg
stos
sbb
dec
into
out
cld
(bad)
and
dec
iret
and
les
fiadd
out
and
mov
sub
bound
xor
fadd
mov
mov
shl
test
and
(bad)
and
cmp
or
cmp
cwde
das
or
adc
sbb
ds
and
jne
mov
aas
jns
or
inc
push
leave
add
icebp
dec
adc
push
test
or
and
in
adc
jns
adc
add
pop
add
lock
ds
add
sbb
or
adc
add
dec
adc
movs
aad
test
inc
mov
dec
inc
(bad)
rcr
jge
inc
xchg
in
add
or
adc
aas
retf
or
(bad)
ins
sbb
repz
or
clc
clc
shr
rcr
adc
xchg
inc
leave
shr
ins
mov
lahf
dec
inc
mov
test
inc
dec
mov
and
add
ja
mov
and
fcom
sar
cs
pop
retf
mov
adc
movs
pop
pop
adc
sahf
jle
ja
add
jl
in
sbb
cmp
lods
fiadd
(bad)
leave
les
add
ds
add
add
and
inc
fisttp
cmp
dec
cli
in
add
mov
fiadd
inc
lods
dec
or
push
retf
or
mov
cmp
push
mov
idiv
sar
and
ficom
rol
add
cmp
or
icebp
inc
pop
clc
and
xchg
call
push
inc
or
jbe
icebp
sbb
shl
out
adc
loope
mov
(bad)
fcomp
add
jne
imul
push
sbb
mov
push
adc
test
add
adc
add
or
xor
push
pop
je
data16
xor
pop
popf
cmp
outs
pop
and
xchg
lock
push
(bad)
daa
mov
mov
mov
inc
xchg
div
adc
jmp
cs
loope
rcr
adc
gs
dec
adc
aas
push
cmp
mov
cmp
xor
mov
push
push
sub
and
cmps
cmc
ins
add
cmp
sti
ja
cwde
mov
push
push
leave
inc
mov
inc
and
mov
sub
adc
mov
lods
jl
sub
push
cmp
inc
inc
jmp
dec
mov
mov
push
jp
dec
jl
dec
pop
in
call
adc
jmp
ins
jnp
adc
push
fsub
adc
in
push
pop
pop
push
mov
add
test
loopne
or
mov
dec
sbb
test
push
imul
dec
or
in
stos
or
loope
adc
in
ret
fwait
retf
shr
push
or
lahf
pop
xlat
sbb
add
cmp
sbb
fidiv
add
(bad)
out
pusha
and
fistp
pop
sbb
jns
aas
or
xor
or
push
leave
adc
fstp
call
lea
call
fistp
rcr
daa
in
sbb
ret
add
push
inc
mov
aas
mov
and
scas
or
and
out
add
scas
cmp
je
push
es
addr16
test
adc
or
sbb
sbb
sbb
pop
or
sub
cld
fimul
pop
inc
pop
aam
dec
push
sbb
dec
and
add
and
add
xor
pop
push
add
inc
cmp
pop
pop
rcr
adc
or
xor
adc
fsubr
inc
mov
lahf
push
cmc
movs
xor
jae
pop
stos
push
adc
loop
mov
neg
ret
loope
jne
int
pop
call
mov
in
ds
fld
sub
jne
add
call
adc
inc
inc
stos
mov
sub
cmp
jae
or
and
fadd
mov
sar
add
inc
and
jno
retf
popa
rol
mov
je
ror
sbb
mov
popa
mov
mov
push
loop
pop
outs
es
xor
fadd
adc
cmp
pop
adc
xor
cmp
je
dec
inc
xor
retf
inc
popa
add
or
add
dec
mov
inc
out
inc
push
test
cld
or
jmp
and
mov
push
jbe
push
push
(bad)
ins
mov
ds
mov
cmc
and
cmp
lea
(bad)
adc
mov
adc
jmp
dec
add
mov
dec
adc
jne
in
or
or
(bad)
or
adc
clc
cmp
add
or
iret
dec
pop
loope
jp
je
mov
iret
pop
or
nop
and
and
mov
ror
test
and
dec
fwait
sbb
mov
sbb
cmc
cmp
cmp
cmc
outs
add
dec
inc
jb
loop
add
rcl
cwde
loopne
in
push
sahf
add
push
dec
push
addr16
adc
push
sub
loope
mov
pop
aas
ins
xor
in
inc
fs
inc
adc
test
sbb
aad
lods
xor
sbb
gs
sub
adc
push
cmps
neg
sbb
pop
jmp
dec
jns
fild
sub
test
and
lods
rcl
jmp
jg
fisttp
dec
idiv
and
inc
cmps
enter
cld
lock
je
or
popa
cmp
cli
inc
xor
adc
mov
xor
lock
dec
or
sub
test
es
sbb
cmc
leave
adc
and
movs
inc
jecxz
scas
loope
xor
stos
lods
sbb
push
jae
test
ret
sbb
push
xor
aad
mov
retf
mov
inc
and
dec
jmp
adc
push
mov
sub
add
mov
fmul
arpl
ins
aam
and
or
call
sbb
jp
repnz
bound
adc
xchg
mov
xchg
push
iret
sbb
jae
or
cmps
mov
cmp
psrad
or
mov
and
mov
xchg
shl
test
dec
dec
clc
and
icebp
or
daa
inc
ret
out
cmc
push
sbb
mov
add
cmp
shr
or
lock
jne
add
test
inc
pop
(bad)
adc
jne
mov
cmp
jae
loope
ret
mov
popa
jg
mov
jg
adc
push
dec
mov
mov
jns
cdq
retf
xor
ja
cmp
adc
jmp
call
push
jae
mov
mov
sbb
jb
cwde
add
add
test
add
sbb
pop
jae
inc
inc
push
test
cmp
jecxz
fld
cmps
add
dec
lahf
sbb
stos
sub
sbb
addr16
jmp
fldcw
push
adc
inc
aam
jbe
pop
mov
ret
adc
cmp
cmp
hlt
ret
fiadd
scas
xchg
mov
cmc
xchg
add
fnstcw
jno
pop
iret
push
mov
sub
dec
jne
push
sbb
jbe
fist
or
xor
(bad)
xor
push
fidivr
pop
fmul
push
adc
add
push
scas
(bad)
fistp
lods
test
fdivr
pop
loop
jmp
add
addr16
jp
sahf
out
pcmpgtw
dec
and
mov
shr
push
dec
fcom
icebp
xor
ins
cmp
push
out
sbb
cmp
arpl
cmp
mov
cli
push
fld
or
sub
inc
mov
sbb
jmp
mov
jns
cmp
popa
push
mov
sbb
inc
inc
cmp
sar
and
ja
jp
or
into
call
call
mov
adc
cmp
ja
inc
(bad)
sub
add
int
popf
xchg
dec
mov
out
pusha
ins
aad
call
mov
push
sbb
push
or
test
xor
push
xlat
or
add
cmc
jbe
adc
or
sub
inc
sbb
adc
xlat
dec
test
mov
aaa
inc
cmp
cwde
push
(bad)
paddsb
sub
icebp
(bad)
ret
inc
mov
push
push
pop
xor
cld
cdq
jl
ins
and
sub
cmp
xor
cmp
add
test
xchg
adc
ror
scas
icebp
push
push
int
push
xor
or
sub
daa
push
mov
retf
push
dec
je
dec
je
add
xchg
xchg
xor
inc
js
call
add
push
xor
aas
mov
mov
adc
pop
and
add
dec
fdivr
mov
jmp
jns
fwait
ret
xor
je
ins
lods
call
mov
outs
dec
rcr
sub
jecxz
pop
mov
leave
add
call
adc
push
add
test
mov
cli
adc
adc
add
add
xchg
push
push
fst
es
adc
sbb
sbb
mov
loopne
dec
and
and
adc
xor
push
mov
dec
clc
sahf
xor
xchg
fimul
inc
outs
jmp
loope
inc
jb
mov
(bad)
fabs
jbe
out
jo
push
mov
inc
or
comiss
inc
add
hlt
sub
dec
mov
fnstsw
dec
jl
cmp
mov
or
test
jno
mov
pop
xor
sub
push
add
jge
fcomp
mov
mov
pop
lods
call
movs
mov
dec
adc
cli
or
scas
jb
pop
int3
enter
loopne
mov
xor
(bad)
sbb
xchg
jne
and
sahf
sti
dec
jmp
lods
mov
add
adc
xor
sub
add
stos
cld
and
aas
ret
add
inc
mov
mov
or
dec
repnz
jmp
sbb
leave
lea
inc
out
movsx
adc
xor
inc
add
dec
sahf
mov
das
or
push
call
shl
retf
std
or
cmp
jb
or
repz
push
or
jo
jmp
and
jb
scas
shl
sbb
sbb
pop
pop
push
cld
mov
inc
sbb
adc
mov
sbb
in
push
stc
nop
inc
inc
mov
dec
pop
cs
outs
inc
fisttp
dec
dec
mov
dec
push
pop
mov
inc
push
(bad)
jo
xchg
sbb
jg
int3
cmp
cmc
mov
add
out
add
out
mov
(bad)
or
pop
fdiv
idiv
fsubrp
ja
cmp
or
jne
(bad)
mov
inc
sub
push
outs
push
jb
inc
jns
mov
clc
lds
repz
sub
or
xchg
push
lods
sbb
pop
adc
mov
xchg
mov
ins
loope
gs
iret
pop
dec
pop
inc
(bad)
dec
jge
test
push
jo
adc
jle
add
or
retf
shr
inc
jl
(bad)
jge
inc
xor
das
adc
fiadd
sub
dec
(bad)
dec
ret
loop
pushf
out
mov
leave
mov
addr16
repz
sbb
add
leave
fiadd
mov
fild
mov
sub
out
je
mov
dec
or
shl
dec
add
retf
mov
ffreep
jmp
push
cmps
popa
cs
loopne
jmp
loopne
xor
cdq
mov
cmp
(bad)
pushw
jge
aaa
pop
sbb
dec
movs
into
pavgb
mov
push
xchg
xor
rol
and
inc
jmp
cs
push
sub
loopne
or
xor
xor
or
xchg
mov
mov
inc
aaa
pop
and
or
imul
adc
add
and
inc
sbb
sub
int3
xor
popf
inc
repnz
add
push
rcr
pop
repnz
xor
xchg
dec
pop
mov
outs
js
or
loopne
cmc
jmp
stos
mov
push
adc
add
push
or
mov
pop
mov
or
loope
xlat
add
pop
test
scas
push
mov
cmp
je
fld
out
fldenv
or
add
mov
pop
popa
push
les
push
cmc
iret
mov
rcr
inc
aam
xchg
add
mov
mov
(bad)
mov
pop
or
adc
inc
push
lahf
push
loope
aaa
(bad)
xor
jl
pop
cmps
jg
ret
push
sbb
outs
jmp
push
push
mov
sbb
hlt
dec
mov
je
cmp
ror
xchg
cmp
lods
clc
mov
mov
aam
ficomp
mul
and
sbb
add
ins
push
sub
mov
rcr
test
sbb
xor
pushf
ret
sti
push
lock
and
popf
stos
xchg
xor
add
lods
pop
add
lea
push
adc
jno
enter
(bad)
enter
in
fsubr
lods
in
sbb
pop
nop
test
aas
lods
jae
fmul
jne
push
jmp
dec
fisubr
enter
lock
fwait
nop
adc
cmp
je
sub
js
and
pop
mov
mov
sbb
adc
sbb
inc
ins
mov
pushf
iret
imul
xchg
push
push
xor
push
mov
mov
in
mov
inc
jns
pop
add
popf
pop
ret
adc
hlt
int
psubsb
push
je
std
adc
arpl
sbb
in
push
or
push
bound
pop
cmp
adc
mov
je
fbld
mov
add
lea
inc
cmp
lock
add
fisub
sub
pop
and
and
jg
and
mov
push
pop
addr16
sub
mov
loopne
add
push
add
stos
lods
cmp
add
sub
fld
je
shr
leave
cmp
ss
sbb
shl
push
(bad)
jge
push
add
loop
or
jecxz
mov
pop
and
je
scas
in
lods
add
pop
je
xchg
xchg
pop
rol
and
dec
add
inc
and
push
ins
loope
and
inc
mov
push
shl
or
fdivr
aas
or
xlat
xchg
aam
js
mov
sub
xor
movs
jl
sub
daa
test
dec
mov
sahf
jns
aam
sti
or
mov
jb
out
mov
dec
cmp
in
jp
mov
pop
pop
or
sub
add
aaa
jecxz
jmp
(bad)
stos
adc
pushf
or
push
push
mov
mov
sub
and
sbb
adc
rcl
add
jnp
movs
or
cld
mov
push
fldcw
adc
outs
aas
xchg
fistp
shr
add
imul
mov
or
mov
mov
inc
movsx
pop
adc
add
pop
outs
fcmovbe
cmp
add
add
loop
cwde
loope
in
mov
inc
dec
add
cli
mov
add
mov
sar
dec
pushf
mov
loope
and
cwde
cs
icebp
sub
test
out
or
inc
push
dec
dec
cmp
inc
pop
xor
mov
in
add
loop
mov
jbe
xor
and
and
sub
out
inc
call
jae
and
(bad)
ja
xchg
sub
sbb
or
inc
call
dec
inc
test
in
jmp
adc
or
pop
gs
mov
dec
adc
into
dec
xchg
xchg
rol
rol
ror
mov
push
popa
pop
pop
icebp
lea
inc
dec
nop
xor
nop
retf
dec
push
rol
cs
pop
xor
cmp
xor
movs
dec
repz
add
nop
xchg
mov
jb
out
jge
xchg
aaa
dec
imul
and
ror
inc
aaa
(bad)
jle
cmp
or
pop
ror
lock
pop
or
pop
xor
cli
adc
rol
jge
push
push
retf
aas
int
ds
inc
rol
test
pop
push
push
mov
ins
test
inc
call
out
or
mov
dec
inc
push
fimul
fnstcw
inc
mov
and
stc
repnz
add
cli
ins
je
sahf
div
push
xor
or
inc
in
and
movs
loopne
xor
cmp
call
lock
xor
fisubr
inc
sub
out
shr
and
and
inc
adc
push
or
mov
imul
inc
mov
lock
cmp
stos
ds
mov
or
pushw
sbb
cmp
out
jge
test
mov
jne
ins
dec
mov
xor
fld
ficomp
aaa
movlps
inc
push
cmp
and
or
shl
fmul
dec
sub
or
test
cmps
cmp
dec
mov
inc
cmps
shl
xchg
stos
dec
test
adc
or
fmul
or
int
sub
retf
cmp
(bad)
mov
test
call
mov
push
mov
xchg
add
sahf
idiv
adc
push
(bad)
adc
jg
and
enter
(bad)
test
stc
xchg
retf
jge
or
add
jge
cs
add
or
cmp
jne
push
pop
adc
jne
push
fnsetpm(287
rcr
and
retf
pushf
pusha
mov
stos
outs
dec
xor
cwde
sbb
add
push
dec
sub
mov
inc
add
neg
inc
add
inc
mov
add
adc
sar
fimul
xor
sub
out
inc
adc
xor
in
in
jp
lods
add
and
inc
rcr
sub
sub
neg
mov
sub
call
pop
je
loopne
call
mov
(bad)
pop
add
and
and
loopne
or
out
jo
movs
sti
into
add
mov
lock
mov
les
enter
lea
or
sbb
xchg
push
adc
pusha
lahf
sub
push
clc
rol
push
lahf
sbb
push
enter
sahf
mov
cmp
push
shl
add
xchg
retf
inc
stos
test
test
jnp
sbb
test
mov
add
inc
add
es
es
jmp
pop
sbb
pop
dec
call
cli
xor
jmp
cmp
or
scas
sub
dec
cmp
add
dec
cmp
add
fadd
add
int3
mov
jp
jne
dec
sub
mov
jb
fcomp
sub
lea
add
dec
lds
inc
mov
mov
fimul
or
add
add
add
ret
xchg
add
inc
nop
pushf
rcl
or
and
cs
shl
je
popa
loopne
add
or
pop
or
pusha
out
jns
inc
not
nop
push
or
add
clc
push
or
add
add
mov
loope
xchg
fnstenv
mov
sbb
ret
or
movs
add
xchg
adc
or
ficom
ret
rol
pop
(bad)
mov
mov
iret
xchg
xchg
retf
retf
into
pusha
inc
pop
sbb
and
jnp
adc
pop
pop
aad
push
cmpps
cvtpi2ps
out
ret
or
add
dec
push
push
ret
pop
stos
inc
lock
adc
push
call
add
add
shl
ror
and
rol
add
mov
aam
ret
rcl
fs
aas
retf
xlat
push
pop
movs
and
pop
xchg
iret
neg
add
jne
and
mov
add
pop
dec
jge
es
inc
out
and
push
add
fsubr
pushf
nop
dec
fcom
pop
push
add
nop
bound
push
movs
dec
or
loopne
xchg
or
or
inc
sar
sub
sbb
pusha
mov
xchg
cs
cmp
inc
adc
and
lock
pop
adc
ins
sub
into
adc
xor
mov
add
add
dec
rcl
mov
sbb
repz
jg
into
inc
(bad)
into
mov
lods
leave
push
inc
pop
sub
push
pop
push
out
icebp
push
nop
pop
sahf
pop
mov
and
mov
out
and
or
sbb
and
leave
inc
sub
and
add
mov
test
lahf
pop
xchg
out
mov
or
adc
mov
into
and
je
pushf
jl
imul
or
(bad)
sub
jmp
inc
and
into
mov
ret
push
retf
cmp
ret
aam
rol
mov
fdiv
ja
push
push
clc
sub
sub
call
dec
or
popa
or
adc
inc
or
pusha
loopne
xlat
add
or
push
movs
adc
jle
nop
ds
fistp
sub
xor
aaa
sbb
int
add
add
push
and
push
test
add
jl
pop
sbb
popa
aam
fmul
xor
mov
rcr
mov
pop
repnz
push
pop
sub
or
rcr
lea
sub
push
xor
fadd
shl
inc
dec
or
or
rcl
dec
push
pop
shl
adc
cmp
jg
push
ret
push
push
fcmovb
shr
les
adc
cmovns
xor
jmp
xor
test
dec
pop
sbb
add
inc
and
cmp
adc
out
leave
std
add
fistp
out
cld
dec
shl
add
(bad)
mov
jns
out
or
shr
xchg
mov
mov
out
xor
std
sub
ror
cmp
pop
inc
adc
aaa
retf
or
sbb
mov
retf
jae
mov
adc
mov
mov
pop
sbb
jb
aad
ss
popa
arpl
add
sbb
dec
push
mov
push
(bad)
jmp
or
js
sub
xor
aad
loopne
and
cdq
cmp
cmps
sub
pop
adc
fisttp
sub
dec
mov
fcomp
test
sub
ret
push
(bad)
dec
popf
and
inc
adc
sahf
inc
push
push
or
loopne
or
sbb
and
xchg
inc
inc
lds
pop
adc
inc
add
sub
leave
xor
xchg
mov
cdq
outs
cmps
or
xchg
and
sbb
adc
retf
in
adc
add
mov
cld
clc
hlt
lock
retf
in
in
call
mov
rcl
sbb
in
ret
sbb
adc
inc
pop
rcr
jbe
nop
lea
shl
mov
or
in
fcomp
jne
jge
add
dec
xchg
add
xchg
repz
xchg
sub
jge
pusha
and
mov
xor
sub
movs
das
pop
xor
sub
fist
push
xchg
push
in
or
jmp
jl
mov
call
inc
test
iret
mov
sub
cdq
xchg
sbb
rcl
sbb
call
leave
addr16
and
leave
push
lock
and
sbb
add
nop
call
call
mov
mov
es
and
add
mov
and
rcl
sub
mov
rcl
and
add
sbb
popf
ficomp
aas
mov
and
jae
sub
cmp
pusha
inc
sub
pushf
push
retf
cld
xor
popa
lahf
sub
sbb
inc
out
add
mov
test
add
cs
push
daa
pusha
dec
sbb
pop
add
add
add
dec
jg
sub
sub
dec
sbb
mov
sbb
addr16
inc
lahf
(bad)
xor
mov
mul
movs
js
sub
hlt
pusha
dec
add
and
cdq
in
pop
pop
mov
mov
mov
jg
mov
mov
add
or
or
xchg
or
push
or
inc
pop
imul
outs
xlat
push
mov
stos
leave
inc
cmp
pop
inc
add
je
and
and
push
push
fnstenv
sbb
adc
mov
cmps
add
mov
push
popa
adc
ror
add
xchg
aas
dec
pop
push
mov
lahf
xor
xor
pop
rol
mov
xchg
add
mov
(bad)
cmp
pop
jmp
adc
mov
dec
test
adc
add
xlat
inc
mov
into
push
inc
ret
imul
xchg
fiadd
mov
pop
in
test
dec
dec
or
mov
pop
(bad)
sub
xor
cmp
sub
ror
pop
push
push
push
in
pop
sbb
and
daa
ins
add
adc
fbld
loope
adc
mov
and
pop
adc
popf
sbb
pop
add
push
test
mov
sbb
mov
sub
pop
push
pusha
pop
sub
mov
add
stos
cs
lock
clc
mov
mov
cmp
arpl
xchg
add
mov
push
cmp
cli
cmps
push
fcmovb
sub
xor
sbb
lods
outs
ret
add
cmp
dec
lock
sbb
push
inc
jo
or
mov
sar
call
inc
mov
and
inc
adc
jmp
xor
(bad)
mov
dec
fbstp
xchg
mov
dec
push
in
(bad)
adc
and
leave
ret
mov
add
add
pop
push
out
jle
mov
sbb
dec
pop
push
pop
(bad)
repnz
mov
dec
adc
ret
icebp
sub
push
iret
inc
or
nop
in
xchg
adc
xchg
mov
test
xchg
xor
sub
sbb
mov
cwde
sbb
or
mov
fwait
push
or
jp
adc
or
mov
xor
add
jns
sub
add
mov
cmp
xor
dec
xchg
outs
or
sub
xor
adc
inc
in
rcr
mov
arpl
mov
pop
pop
mov
shl
cmc
popa
add
add
xor
sbb
dec
test
jge
dec
push
rcl
sbb
dec
fnstenv
mov
or
add
push
xor
push
jae
add
mov
and
or
jo
and
cwde
sbb
mov
sub
outs
out
(bad)
or
popa
cdq
mov
add
ds
lock
jns
push
dec
xchg
mov
push
enter
and
adc
sbb
adc
dec
lock
into
mov
mov
cdq
jl
adc
inc
fistp
xlat
imul
mov
mov
std
mov
nop
int3
paddusb
add
(bad)
stc
pop
test
dec
jl
pop
mov
mov
jns
pusha
add
sub
idiv
ret
or
mov
in
or
aas
push
sub
in
xor
out
sbb
in
(bad)
xor
xor
rol
dec
aas
xor
push
cmp
xchg
sbb
icebp
sbb
or
xchg
sub
imul
push
add
or
inc
push
addr16
xchg
xchg
add
enter
sbb
loope
sub
add
nop
les
fcmovne
mov
mov
push
mov
bound
je
loop
(bad)
mov
mov
or
push
fcomp
aaa
cmps
xchg
sub
popa
pop
sbb
mov
aad
push
iret
ror
js
add
and
fwait
adc
cld
sub
jmp
mov
dec
(bad)
and
imul
pop
ret
add
xchg
mov
loopne
cmp
test
fbstp
xchg
adc
sbb
mov
adc
sub
adc
sbb
inc
jecxz
jo
jge
cmp
xchg
adc
retf
call
add
dec
inc
push
test
xor
add
ja
test
lahf
clc
or
pop
or
pop
movs
add
push
or
rol
adc
ss
push
mov
sbb
in
cmps
mov
ret
jmp
cld
xchg
std
dec
add
jmp
add
aas
mov
cmp
inc
push
pop
dec
ror
push
xor
inc
and
mov
mov
shl
fstp
push
mov
push
xchg
arpl
lds
aad
push
ret
xor
aad
or
jb
frstor
mov
add
in
lahf
movs
icebp
xor
push
nop
iret
or
xchg
adc
out
cmp
(bad)
ins
pop
xchg
pop
mov
lods
add
mov
or
mov
mov
and
jl
jl
xor
cmp
xor
xchg
pop
xor
fild
or
scas
or
adc
sbb
add
push
or
int
jno
dec
fstp
das
push
scas
add
or
adc
push
std
sub
in
popa
mov
mov
je
popa
pop
push
xor
movs
inc
das
aaa
sar
fnstsw
inc
std
cmp
aam
mov
mov
or
add
pusha
sbb
jecxz
or
sbb
push
movs
xor
push
icebp
jp
xchg
sbb
sbb
jno
mov
mov
mov
and
lods
inc
add
(bad)
jmp
jmp
inc
xor
and
jl
pop
or
fild
and
jnp
xor
push
pop
je
in
ds
rcr
xchg
jb
neg
sbb
scas
cld
dec
cmp
sbb
(bad)
mov
adc
sub
imul
mov
popf
push
push
ret
sbb
push
pop
mov
mov
clc
xor
mov
cld
jnp
bound
xor
dec
pop
neg
fsubr
frstor
xor
jb
and
mov
adc
sbb
mov
mov
jo
jecxz
or
mov
push
cmc
xlat
mov
(bad)
sub
jns
mov
xor
push
sbb
and
fmul
add
in
das
adc
ja
or
aaa
push
sbb
and
pop
mov
dec
out
icebp
test
jmp
adc
test
pop
mov
inc
xchg
adc
adc
das
add
ror
call
mov
jne
scas
and
push
push
outs
mov
jmp
inc
dec
push
sub
or
jne
ret
ficom
inc
or
jmp
jmp
dec
aam
add
sbb
out
bound
sub
pop
addr16
add
retf
jns
sbb
sub
lea
inc
cmp
push
fcomp
fdivr
retf
sahf
push
mov
and
xchg
es
mov
cwde
adc
mov
das
ds
dec
cmp
jne
add
cmps
cmp
cdq
popa
pop
or
add
pop
rcr
inc
push
cmp
adc
pop
rcr
dec
jmp
sub
loope
mov
xor
and
lea
or
sub
(bad)
adc
and
sub
jmp
push
repnz
push
and
js
and
mov
push
adc
test
sbb
mov
adc
pop
mov
lahf
fist
adc
inc
popf
inc
adc
popa
adc
push
aas
pop
nop
mov
ret
jmp
xor
xor
sbb
fs
xor
adc
xchg
ins
jle
or
add
add
shl
iret
mov
mov
sub
ret
adc
pop
ret
cmp
lea
adc
push
adc
test
daa
and
mov
lea
mov
and
add
mov
mov
add
call
ins
jb
adc
xor
mov
dec
(bad)
sti
shl
leave
fdivr
clc
jnp
cmp
sub
rol
add
fisubr
cmp
imul
fmul
add
sbb
sbb
call
cmp
fbld
int3
std
and
sbb
movs
pop
leave
sar
mov
cdq
int3
fmul
std
popa
add
inc
dec
push
and
add
ret
pop
jae
mov
xchg
sbb
in
call
sbb
test
add
dec
dec
xchg
dec
dec
call
adc
or
fsub
or
dec
xor
call
ror
ret
stos
jle
loop
or
enter
(bad)
call
mov
or
inc
shr
fdivr
fdiv
mov
xor
xchg
int3
ror
or
pop
popf
pushf
fsub
int
fnstsw
movs
or
(bad)
push
xchg
add
or
xchg
or
sti
lods
push
mov
(bad)
aam
leave
mov
in
test
and
inc
or
js
xchg
dec
in
inc
in
jo
lsl
mov
jl
jl
test
sbb
push
mov
adc
mov
xor
imul
mov
repnz
mov
in
fwait
call
push
(bad)
call
fisttp
or
shl
loopne
or
sub
pushf
ss
lock
push
add
and
and
mov
inc
jge
mov
rcr
psubsb
cmp
mov
js
pusha
js
pop
or
dec
push
nop
cmps
inc
or
jecxz
imul
inc
mov
in
jnp
jae
imul
mov
mov
movs
dec
pop
dec
mov
and
inc
int
sub
add
ins
xchg
adc
inc
rcl
adc
lock
mov
add
lea
xlat
add
hlt
retf
daa
pop
nop
mov
push
push
cmp
dec
mov
dec
fild
dec
ins
mov
fadd
ss
jne
xchg
(bad)
aam
adc
in
lods
test
js
pop
dec
mov
push
in
pop
adc
mov
js
loopne
xor
mov
adc
hlt
xor
iret
add
aad
pop
leave
leave
pop
pop
push
lods
xchg
dec
jb
push
inc
dec
add
lods
mov
ret
sub
dec
pop
std
push
dec
out
cwde
fcom
mov
enter
fmul
xor
inc
mov
lds
push
mov
cmp
or
xor
push
nop
and
or
push
cmp
mov
or
stos
sbb
push
fcomp
loop
and
pop
cmp
cmp
fcmovb
jo
cmps
pop
push
sub
call
(bad)
in
lahf
(bad)
or
loop
aam
sbb
loope
xor
sbb
icebp
(bad)
fsubr
pushf
sbb
(bad)
std
fmul
adc
xlat
scas
inc
and
lock
retf
or
sbb
stc
call
pop
enter
das
cmp
add
cmp
dec
rcl
dec
js
ror
pop
or
sbb
popf
mov
scas
sbb
mov
mov
dec
sub
pop
xor
stos
sbb
cli
xchg
call
adc
sbb
sub
mov
sbb
sub
add
sbb
ret
lock
sbb
or
call
repz
cmps
pusha
mov
sbb
sbb
jne
adc
or
inc
or
sbb
pop
pusha
jge
mov
in
mov
sub
sub
push
in
jns
jo
jecxz
xor
and
aam
xlat
push
xor
and
popa
push
pop
fbld
or
push
mov
and
in
push
mov
or
push
pop
inc
or
xchg
push
jne
or
pop
mov
or
imul
jno
int
out
lods
inc
cwde
sbb
scas
and
sbb
sbb
and
sbb
mov
sub
in
pushf
mov
inc
and
fld
xchg
scas
adc
rcl
pusha
dec
fsubr
fmul
je
or
sbb
and
mov
shl
jb
enter
in
cs
adc
add
inc
cmp
nop
and
xor
nop
add
cmp
dec
or
pop
push
and
push
and
xor
shl
push
daa
dec
repnz
scas
and
in
test
ins
mov
aas
ins
std
and
and
mov
pop
sub
add
xchg
and
test
mov
ror
leave
sub
loopne
xchg
mov
fs
xchg
xor
xchg
inc
gs
xchg
pop
cmp
add
sbb
inc
add
or
in
adc
and
ss
pop
stos
sub
out
bnd
cdq
fs
(bad)
mov
xchg
dec
es
in
adc
popf
or
lods
adc
cmps
(bad)
in
dec
pop
fs
loopne
and
(bad)
fsub
ss
imul
mov
or
xchg
data16
lock
shr
add
test
ss
scas
cmp
adc
mov
mov
inc
ret
xchg
pop
and
stos
loopne
add
and
arpl
in
fsub
lods
cmp
movs
mov
or
lds
xchg
cmp
adc
xor
mov
mov
dec
and
es
hlt
pop
push
or
lock
aaa
es
dec
sbb
daa
xor
das
daa
rol
fwait
mov
jl
(bad)
jl
cld
xor
sub
push
xor
adc
add
sub
adc
jmp
xchg
inc
sub
ret
jge
adc
es
clc
cmc
pop
push
inc
fs
sub
sbb
lods
xlat
leave
lock
and
pushf
dec
sub
and
add
dec
leave
push
pop
imul
std
or
sbb
sub
cwde
bound
mov
xchg
mov
cmp
pop
xor
sub
dec
push
sub
push
cmc
mov
leave
test
xchg
jb
push
icebp
sub
dec
jl
mov
inc
call
in
mov
push
out
(bad)
xchg
xchg
xchg
sbb
das
pop
add
movs
ror
sti
shl
or
adc
pusha
adc
inc
pop
scas
nop
inc
loopne
xor
push
mov
dec
push
fmul
mov
cmps
cmp
mov
push
xor
pop
and
xor
sub
mov
dec
xor
mov
je
xchg
dec
repnz
sbb
(bad)
addr16
and
nop
push
dec
cmp
push
in
fwait
in
xchg
je
(bad)
in
jae
and
jo
jno
inc
pushf
pushf
pushf
test
xor
call
sbb
cmps
lds
and
fsubr
pop
enter
jmp
push
and
adc
xor
lahf
imul
test
jo
adc
adc
adc
xchg
cmps
int3
mov
enter
xchg
rcl
gs
jmp
xor
jg
pop
leave
enter
enter
jb
jo
in
jb
js
xor
cmp
cmp
mov
cmp
cmp
cwde
cwde
shl
cmp
mov
sbb
and
xor
dec
and
sub
cwde
dec
mov
inc
test
adc
or
add
jecxz
inc
ret
lods
add
test
push
movs
xchg
xchg
fadd
daa
aaa
xor
add
mov
add
or
aaa
cmp
or
pop
fs
fwait
mov
nop
inc
jno
push
xchg
mov
add
scas
sbb
and
es
mov
or
enter
xchg
fiadd
mov
cmp
fs
ror
jns
cmp
(bad)
xchg
dec
rol
and
sbb
push
mov
call
xchg
pop
call
and
mov
push
lds
mov
clc
in
int3
jnp
mov
mov
in
xchg
mov
pop
clc
nop
cmp
inc
pop
xchg
ins
test
add
add
add
cmp
loopne
in
or
clc
or
nop
in
sbb
fnsetpm(287
add
movs
or
in
pop
mov
adc
add
and
or
jmp
or
push
cmp
push
xor
sbb
cmp
xchg
or
jb
dec
cmp
std
stos
add
pop
test
in
mov
pop
popa
nop
or
fsub
adc
fdivr
in
dec
sbb
les
push
adc
adc
cmp
fstp
add
or
dec
int3
jle
add
add
arpl
cmp
in
clc
imul
fcmovb
in
xor
in
or
add
leave
cmp
pop
adc
in
in
jl
xchg
jmp
ins
cmps
fdivr
pushf
mov
inc
lods
jg
pop
pop
arpl
out
inc
les
push
fcmovne
adc
ds
in
fwait
inc
add
sbb
mov
nop
retf
xchg
retf
leave
icebp
pushf
fstp
cmp
int3
sbb
push
lds
test
sbb
push
rcr
add
js
ds
inc
xchg
xchg
sbb
pop
aas
sbb
into
push
mov
and
push
popa
push
adc
add
nop
aas
jl
(bad)
dec
aas
test
push
add
es
call
sbb
sub
idiv
xor
sub
jno
adc
adc
xlat
cs
aam
loopne
dec
popa
jo
xor
lea
inc
ins
adc
push
adc
xor
sahf
cmps
sub
inc
sbb
lods
or
adc
loope
adc
add
xchg
inc
imul
and
pushf
rcr
aam
jl
adc
sti
push
mov
out
aas
xchg
push
inc
imul
xchg
outs
ja
cmp
pop
adc
shl
inc
cmp
inc
inc
cmp
inc
int3
add
jecxz
imul
in
js
lea
icebp
adc
scas
fisubr
inc
sub
add
cmc
ss
cwde
pushf
pusha
and
mov
aam
inc
cwde
fdiv
jns
xchg
sub
sti
daa
in
jmp
std
push
and
cmp
fistp
inc
add
sbb
cli
fist
mov
enter
lock
out
cmp
inc
push
and
or
cmp
nop
arpl
sub
jecxz
lds
and
inc
clc
add
in
aaa
or
xlat
push
sub
pusha
leave
jne
adc
enter
mov
int3
fidiv
cmp
fs
mov
jae
cmps
adc
pushf
fsubr
cdq
loopne
cmc
test
inc
add
test
ss
enter
inc
cs
in
xchg
push
cmp
mov
retf
in
inc
dec
sub
in
cmp
cmp
retf
adc
pop
dec
mov
sahf
lods
outs
popa
jb
call
loopne
and
dec
adc
cmp
cmp
pop
cmp
jns
mov
lock
push
sbb
jmp
inc
call
rcl
add
xlat
ror
cmp
(bad)
cld
adc
inc
xchg
(bad)
mov
add
adc
dec
mov
inc
and
sbb
mov
int3
(bad)
push
xor
and
mov
sub
call
push
fdiv
call
rcr
or
cmp
mov
mov
jb
mov
mov
push
add
iret
in
add
fwait
mov
rcr
cs
test
ins
mov
ror
rol
dec
ret
dec
sub
mov
pop
loopne
pop
outs
ins
pop
jmp
nop
cmp
loop
and
add
test
cmp
cmp
dec
lds
dec
add
movs
jne
out
sbb
leave
and
aad
mov
enter
scas
daa
arpl
dec
pushf
stos
mov
adc
ficom
cs
test
cld
add
stos
dec
shr
mov
mov
sbb
aam
aaa
enter
(bad)
loopne
imul
pusha
xor
or
jns
in
js
push
inc
je
mov
pop
jo
inc
adc
pop
inc
or
dec
inc
std
es
movs
pop
adc
cmps
pop
shr
cmp
add
sbb
dec
movs
setp
or
enter
add
or
ficom
cmp
mov
iret
jmp
not
mov
movs
movs
pop
movs
inc
int3
xchg
out
dec
adc
mov
cwde
fs
je
nop
xchg
and
and
lods
add
pop
mov
in
mov
mov
sbb
nop
retf
xchg
fs
jmp
mov
in
jle
inc
xor
mov
sbb
inc
and
ret
and
test
mov
add
loop
inc
add
push
ror
shl
ins
pushf
mov
push
pop
push
push
cmp
sar
test
std
test
popa
pop
and
je
fdivr
mul
and
push
xchg
push
and
sbb
push
inc
dec
push
push
push
push
xchg
inc
ins
out
xor
inc
ror
xchg
add
in
ret
dec
inc
shl
addr16
mov
push
push
jnp
adc
nop
out
or
ss
mov
loopne
loop
add
dec
imul
js
lds
in
sub
or
fstp
stos
or
cwde
mov
ja
dec
aaa
adc
xchg
dec
xor
pop
pop
pusha
fs
xor
and
ins
jo
push
push
xor
cmp
cmp
jecxz
or
push
mov
test
pop
leave
(bad)
std
or
inc
ins
test
xor
adc
retf
adc
cdq
movs
in
js
ins
push
in
aad
sub
and
adc
mov
std
push
adc
pop
scas
bound
retf
and
pop
jl
pop
pop
mov
jno
aad
add
or
es
rcr
sbb
fcom
fld
cmp
push
clc
jp
mov
pop
nop
mov
pop
add
push
int3
pop
addr16
ins
mov
push
pop
add
cmp
loopne
pop
inc
lds
dec
lods
fstp
aas
mov
int3
test
add
pushf
jmp
or
lock
inc
or
imul
lea
sub
inc
repnz
pop
neg
push
je
movs
pop
xchg
jns
or
xor
scas
pop
stos
inc
mov
mov
pop
call
sbb
call
(bad)
mov
cmp
adc
xchg
inc
lods
fs
adc
nop
aam
sbb
sar
jnp
mov
lahf
pop
cwde
mov
rcl
imul
inc
dec
pop
jmp
repnz
jecxz
rcr
(bad)
lods
loope
push
mov
test
add
test
xor
adc
rcr
adc
add
cmp
ret
inc
lea
mov
stos
movs
int3
mov
or
minps
sub
and
shl
cld
xor
cli
push
inc
int
mov
push
pop
in
outs
fwait
nop
or
loopne
push
mov
push
outs
call
and
inc
lods
rol
adc
pop
fsubr
inc
adc
ret
adc
fs
std
pop
fist
sub
xor
xor
pop
rol
loope
int3
gs
push
push
mov
xor
(bad)
xor
mov
adc
and
push
add
mov
pusha
sub
mov
mov
adc
loopne
addr16
mov
cmps
fnstcw
rcr
out
sbb
push
pmulhuw
loopne
retf
pusha
add
push
push
xchg
jl
mov
push
pusha
push
imul
aam
(bad)
mov
lds
xchg
out
popa
or
enter
dec
popa
push
sbb
call
dec
fs
in
in
iret
mov
xor
mov
nop
push
popa
pushf
or
sbb
rcl
bound
outs
push
movs
adc
xor
sbb
aas
cwde
mov
sub
call
cmp
xchg
xchg
imul
push
jl
xchg
adc
xchg
int3
and
leave
fcom
xor
fsub
imul
fisub
mov
cdq
pusha
adc
mov
gs
sub
fcomp
pop
add
jb
arpl
jmp
loope
gs
jmp
mov
les
stc
xlat
pusha
pop
fs
sbb
ror
gs
xchg
rcl
sbb
and
in
data16
push
inc
pop
pop
fcom
test
aam
xor
mov
in
leave
data16
movs
and
ror
jne
mov
mov
sub
pop
rol
inc
imul
popf
add
daa
and
add
or
(bad)
rcl
xor
push
inc
fcom
push
push
pop
or
sbb
movs
adc
es
mov
xchg
push
xor
xor
cdq
ss
adc
xchg
dec
nop
test
je
xor
test
pop
sbb
push
mov
adc
test
inc
popa
pushf
push
sbb
cmps
add
jns
pop
mov
out
pop
je
cwde
mov
leave
shl
push
loope
fsub
imul
jmp
xor
movs
popa
imul
call
cld
add
adc
pop
and
shr
and
push
xchg
or
push
(bad)
push
es
sbb
cs
mov
mov
pop
fmul
les
fwait
cmp
sbb
adc
aam
push
mov
mov
xor
pop
mov
and
adc
add
aas
cmp
pushf
push
je
xchg
push
loope
mov
cwde
mov
nop
push
pop
es
cmp
pop
and
jbe
hlt
(bad)
in
stos
add
mov
sbb
sbb
mov
push
sar
sub
es
dec
(bad)
retf
pop
shr
das
mov
jge
xor
inc
mov
js
in
and
(bad)
fst
rcr
nop
subps
out
jns
aaa
rcl
inc
lock
sbb
popf
ins
loopne
rol
sbb
push
jp
sbb
xor
outs
mov
mov
int3
shrd
movs
(bad)
fcmovnu
add
les
push
sub
jns
lahf
outs
sub
sbb
(bad)
mov
outs
dec
bound
jno
dec
aad
loope
jns
loope
jo
pop
cmc
fprem1
or
and
mov
out
in
push
outs
test
ja
ret
cmp
and
mov
jo
(bad)
add
mov
pop
fild
aas
movs
inc
adc
add
jo
pop
xchg
xchg
setnp
mov
shl
retf
shl
dec
fild
push
cwde
dec
mov
jbe
inc
cmc
cwde
jo
pop
sbb
or
xchg
push
mov
xchg
jb
shl
pop
xor
je
js
xor
and
inc
xchg
mov
cmp
cmp
dec
iret
jg
jae
xchg
in
push
fsub
in
adc
call
push
js
sub
push
mov
jl
imul
sub
adc
add
cmps
sub
adc
mov
cld
outs
(bad)
nop
mov
inc
adc
mov
enter
adc
nop
hlt
mov
je
prefetcht1
lds
je
test
pop
jne
loop
pusha
out
imul
sbb
pop
mov
add
push
xchg
(bad)
sbb
add
add
add
add
js
inc
loope
sbb
test
add
fmul
test
sbb
adc
(bad)
in
xor
adc
imul
loope
pop
push
aaa
fucomi
loope
fsub
adc
mov
add
add
nop
loope
and
dec
lock
and
push
mov
sbb
xchg
ja
mov
(bad)
push
push
xchg
pusha
stos
adc
push
pusha
add
push
or
dec
packuswb
cs
adc
aad
push
and
cmp
mov
inc
(bad)
clc
jecxz
(bad)
in
push
js
mov
call
stos
fnstcw
sub
js
inc
sti
sub
cmp
dec
and
in
adc
aad
movs
or
(bad)
ror
inc
fld
mov
or
inc
dec
push
or
adc
push
sbb
inc
int
bound
xor
jns
dec
adc
mov
in
mov
aas
pop
mov
rol
std
loopne
pop
leave
sub
inc
jp
and
call
sub
add
rol
add
dec
pop
inc
ins
shl
movs
adc
xchg
cld
pop
mov
add
mov
add
jle
movs
or
adc
inc
nop
sbb
jnp
ror
mov
je
or
bound
loopne
or
nop
(bad)
jnp
xor
out
add
xchg
or
fs
xor
inc
dec
xor
(bad)
mov
push
xchg
imul
scas
jecxz
or
sub
rcl
aam
sbb
cs
cld
sar
aad
shr
pop
sub
push
loop
push
pop
mov
xchg
push
cmp
sbb
xor
ins
stos
jecxz
push
pop
adc
xchg
js
mov
daa
scas
fadd
fadd
adc
(bad)
cdq
fmul
cwde
jle
inc
lock
int
push
test
mov
ret
xor
mov
fistp
xor
fwait
inc
loop
adc
or
lods
and
jg
mov
pop
fwait
nop
fcom
inc
dec
push
add
fstp
loopne
mov
repnz
test
sbb
push
(bad)
fisub
int3
jo
ins
mov
sub
and
outs
mov
jns
mov
add
aaa
inc
scas
jg
iret
loop
add
mov
or
add
or
fstp
nop
stos
mov
fadd
sub
call
mov
and
mov
adc
add
(bad)
push
fadd
std
pop
jne
es
sub
sub
xchg
add
enter
icebp
cs
mov
stos
fcom
and
and
fbld
pop
nop
adc
or
pop
or
jmp
lds
dec
mov
add
lahf
sub
mov
xchg
retf
mov
push
test
out
lods
mov
push
mov
push
setb
lods
adc
nop
xchg
aaa
std
lahf
enter
xor
adc
fwait
rdtsc
inc
pop
inc
sub
jl
pop
push
add
ret
outs
shl
fdiv
adc
pop
shr
in
adc
mov
dec
fs
nop
imul
pop
fs
xor
dec
adc
jb
(bad)
ins
dec
(bad)
fidivr
pusha
jmp
dec
mov
add
nop
jmp
and
inc
mov
xor
ins
in
ss
and
inc
mov
in
jo
and
pusha
mov
adc
es
es
mov
inc
mov
pop
fst
and
adc
dec
sub
lds
mov
stos
movs
rcr
mov
add
dec
mov
adc
mov
out
push
and
xchg
mov
push
cmp
dec
test
test
test
xchg
adc
mov
leave
mov
mov
dec
test
int3
or
or
daa
xchg
sub
jno
dec
jp
rcl
adc
call
icebp
mov
cmp
fsubr
dec
push
ret
mov
adc
lods
psubsb
mov
aas
pop
fistp
adc
pop
adc
and
adc
jb
xchg
inc
pop
mov
dec
call
cmp
mov
mov
loop
xor
or
sub
sbb
or
fdivr
mov
or
loopne
sbb
adc
movs
jae
sub
pop
mov
fcom
leave
pop
dec
dec
xchg
lods
dec
dec
pop
mov
call
pushf
adc
fiadd
xchg
leave
leave
leave
mov
gs
nop
movs
mov
cmp
lock
mov
and
inc
pop
pop
pushf
int
xor
test
push
or
mov
popa
push
dec
enter
test
pop
dec
pop
pop
or
and
sbb
test
add
inc
scas
sbb
inc
cs
mov
pusha
add
enter
add
pop
push
dec
inc
dec
jecxz
je
sbb
adc
add
sub
rcr
lock
cs
xchg
jge
pop
mov
mov
cs
call
adc
xchg
cld
pop
adc
pop
and
sub
sub
mov
std
in
sbb
xchg
pop
mov
enter
sub
enter
call
sub
leave
call
repnz
loopne
xchg
cwde
or
cmp
add
fcomp
aam
cmp
dec
dec
mov
in
ins
fwait
adc
or
imul
shl
jo
sub
and
fstp
xchg
push
mov
mov
iret
add
xchg
mov
movs
or
cwde
jbe
push
jns
das
mov
adc
xchg
pop
rcl
adc
xor
bound
xchg
xchg
cmp
in
call
pop
cld
push
jecxz
mov
sub
push
movs
sub
add
cmps
jne
jmp
xchg
inc
lock
js
inc
xchg
sbb
dec
or
push
and
adc
les
or
xchg
mov
pop
adc
inc
in
call
out
dec
pop
nop
jg
or
pushf
cwde
and
imul
mov
loope
sbb
push
jb
or
inc
xor
cwde
les
cmp
(bad)
adc
loope
cwde
clc
pop
nop
or
int3
enter
fs
outs
pop
(bad)
rol
nop
xchg
push
mov
xor
jl
push
test
rol
jb
mov
add
mov
xchg
jl
mov
dec
ds
call
nop
xchg
push
pop
inc
aam
inc
xchg
add
test
cmps
mov
imul
dec
nop
inc
das
nop
or
xchg
cld
adc
cs
fsub
add
call
mov
or
iret
lock
or
popa
in
mov
call
fadd
pushf
sbb
sub
push
and
fcom
sbb
ss
les
mov
or
das
ret
jno
popa
jb
adc
push
sub
in
or
xor
mov
pop
pusha
and
js
or
shl
pop
dec
setge
mov
push
shr
in
(bad)
mov
pop
sbb
adc
retf
jne
push
adc
mov
scas
pushf
stos
ins
add
sbb
test
push
or
jo
mov
mov
je
mov
or
push
xor
sbb
adc
sub
ss
or
repnz
les
int
rcl
(bad)
xchg
jmpw
cwde
fdiv
xor
rol
jnp
jo
cmp
cmc
int3
outs
dec
pop
cmp
xchg
add
aad
xchg
mov
or
xchg
jbe
push
xchg
mov
cmp
and
or
not
fxch
sbb
inc
rcr
or
fmul
bound
les
mov
push
sub
sub
(bad)
push
fs
inc
mov
cmp
jo
jecxz
sub
pop
mov
dec
pop
mov
add
cmps
mov
push
or
iret
sub
scas
adc
xchg
mov
or
mov
fchs
and
jecxz
clc
add
loope
enter
sub
stos
pop
mov
add
sar
mov
mov
sbb
xor
push
stc
push
cmp
mov
es
and
lods
dec
adc
loopne
daa
sub
dec
movs
movs
sbb
ret
adc
arpl
sbb
adc
sub
dec
mov
mov
mov
rol
in
push
lods
add
mov
add
add
ins
xor
jb
icebp
jmp
adc
add
inc
fwait
movs
js
xchg
fisub
adc
test
mov
mov
or
test
cmps
adc
lods
or
fisubr
push
pop
and
sub
stos
and
cmps
je
out
ret
and
add
adc
mov
mov
push
std
test
aam
pusha
cdq
add
mov
mov
ins
cmps
xor
or
sub
push
and
add
sub
lds
cmp
test
mov
es
sub
cmps
dec
in
pop
imul
je
sub
sub
push
adc
out
nop
jmp
lds
sub
lods
cmp
fistp
sti
repnz
inc
and
jecxz
test
outs
nop
xlat
and
sbb
mov
in
sub
leave
call
test
ret
test
sti
add
or
(bad)
test
sbb
ret
test
mov
loopne
fcmovne
jecxz
jne
mov
(bad)
aam
push
xor
xchg
sub
inc
aas
stos
lahf
movs
mov
sbb
mov
mov
sbb
adc
cmp
push
stos
pop
cwde
xchg
cmp
shl
stos
adc
dec
push
stos
fdivr
adc
cmp
or
or
das
sbb
adc
fsubr
add
adc
or
ror
stos
test
add
fwait
stos
xchg
scas
pop
adc
jne
pop
xchg
mov
cmp
jmp
or
aam
cmp
adc
sub
push
mov
fcom
imul
iret
cwde
pop
mov
cmps
xor
cdq
inc
scas
in
cmp
lods
and
popa
push
lods
std
cmps
push
inc
add
lods
js
out
inc
and
mov
sti
pop
add
ror
test
add
fsubr
test
xor
dec
and
dec
mov
xor
or
stos
add
dec
sbb
test
pop
mov
fs
xchg
push
pop
scas
xor
jno
je
xchg
shr
imul
scas
mov
cmp
js
int3
(bad)
in
xchg
or
es
sti
mov
jne
sbb
mov
push
pop
and
movs
aaa
pop
cmp
imul
pop
jno
xlat
mov
xor
mov
mov
cmp
mov
push
inc
lds
cmp
pop
inc
push
leave
mov
dec
jo
dec
and
xchg
nop
mov
add
dec
cwde
ins
sbb
jg
and
scas
mov
or
xor
adc
in
mov
je
int3
nop
in
sub
je
inc
mov
cmp
retf
cmp
or
nop
push
inc
nop
mov
add
sbb
inc
mov
or
addr16
(bad)
push
test
push
mov
xchg
popa
loope
repnz
cmp
out
sbb
or
add
cmp
and
mov
rcr
(bad)
add
and
outs
iret
inc
leave
test
nop
mov
inc
sahf
adc
in
xchg
xlat
adc
adc
add
and
fxch
or
mov
xchg
(bad)
std
mov
std
gs
shl
test
add
neg
js
loop
cdq
les
test
jo
cmp
pop
xor
rcl
dec
fdivr
mov
ret
dec
jp
adc
mov
jne
mov
mov
shl
adc
call
inc
test
movs
call
in
pop
mov
fstp
pop
(bad)
push
je
retf
shl
lock
push
add
inc
dec
or
mov
ins
mov
dec
jbe
add
dec
mov
aam
mov
enter
pop
mov
and
jmp
aad
cmp
dec
pop
xor
xchg
jmp
pusha
ror
xchg
add
adc
es
mov
test
sbb
lds
and
mov
push
jmp
mov
nop
data16
mov
es
out
jo
test
aaa
test
(bad)
jge
push
fs
call
test
mov
pop
inc
lahf
les
int3
sbb
movs
inc
jge
push
je
or
shl
dec
add
add
sub
inc
popf
pusha
es
mov
pop
aaa
aas
ror
(bad)
mov
mov
jnp
imul
push
pushf
retf
dec
pop
push
icebp
mov
pop
mov
movlps
ror
and
inc
loopne
cmp
aam
movs
inc
mov
or
pop
mov
or
push
pop
pusha
push
mov
push
arpl
push
rcl
push
ret
aad
sub
fsub
jae
or
loop
jl
and
test
or
stos
cdq
in
xchg
push
in
dec
test
cmp
push
mov
push
in
dec
mov
mov
cmp
popa
sbb
loope
dec
inc
fdivr
ret
pavgb
es
outs
push
adc
popa
ret
adc
adc
leave
fsubr
fcom
push
cwde
xor
inc
push
dec
clc
and
ret
sub
leave
and
pusha
sbb
pop
and
jb
add
ror
add
retf
dec
jne
les
test
sbb
xchg
xchg
or
in
add
push
pop
nop
add
rol
leave
rol
sbb
in
pusha
sbb
or
add
add
add
xlat
jo
ret
push
or
mov
test
mov
xor
fs
pop
aaa
cmp
cmps
outs
jno
mov
repz
cmp
nop
sbb
ja
popa
pop
dec
push
pop
(bad)
xor
adc
cmp
cld
pop
xchg
mov
sbb
pop
mov
loope
sbb
jo
nop
adc
adc
adc
cmp
xor
and
test
or
dec
adc
dec
(bad)
and
cld
pop
dec
test
jb
arpl
xor
mov
dec
lods
sbb
fistp
jno
iret
(bad)
in
scas
mov
mov
enter
add
dec
pushf
adc
mov
and
adc
jb
mov
ins
xchg
mov
xor
pop
fst
and
pop
aad
loopne
xor
leave
lods
mov
fcom
jb
mov
retf
fdivr
add
adc
pop
push
xchg
test
cli
ror
sbb
ins
int
add
cmc
jmp
(bad)
(bad)
inc
xchg
fist
(bad)
int
jmp
pusha
clc
in
cmps
retf
sbb
dec
inc
and
add
xor
add
mov
outs
adc
dec
leave
mov
nop
jo
add
lea
fsub
push
xor
cmc
int3
int3
or
stos
or
xor
sbb
mov
add
push
adc
pushf
pop
mov
inc
enter
xor
pop
dec
jne
nop
add
ins
test
push
push
in
jp
test
push
adc
xor
inc
loop
cmp
js
xor
ficom
mov
ja
add
shl
mov
pop
jp
lods
push
mov
pop
cmps
int
aas
(bad)
add
mov
pop
(bad)
xchg
xor
inc
nop
xlat
push
adc
push
enter
adc
and
add
mov
add
imul
xchg
push
movs
enter
xor
mov
inc
hlt
mov
sbb
sub
clc
sbb
pop
mov
xor
or
and
ins
jo
mov
push
push
fadd
mov
loopne
xchg
iret
enter
mov
jl
pop
sbb
jno
cld
fnsave
rcr
add
inc
or
mov
nop
xor
pop
nop
mov
mov
mov
and
shl
pop
xor
loopne
in
add
int3
dec
ror
inc
xchg
sar
(bad)
adc
adc
sar
(bad)
add
add
sbb
cmp
jne
sar
shl
push
fadd
fdiv
in
add
fsub
cmp
add
fs
push
lock
jno
dec
inc
popa
shl
rol
dec
(bad)
sub
adc
sar
sub
shl
cmp
not
pop
shl
sub
adc
add
add
xor
dec
xchg
inc
pop
lods
jbe
rol
ins
jo
je
ret
js
imul
mov
pusha
pop
enter
fs
lahf
sbb
gs
inc
loope
pop
mov
test
aam
inc
sub
or
adc
and
mov
fadd
aad
adc
inc
add
sbb
loopne
hlt
inc
cmp
mov
or
lods
or
cmp
mov
add
add
cmp
xchg
inc
test
sbb
loopne
and
pop
out
push
dec
xchg
xchg
sub
popf
pusha
imul
cmp
jno
push
sub
aam
push
and
xor
jmp
rol
mov
fadd
and
and
nop
mov
int3
enter
xchg
pop
lock
adc
je
add
adc
or
shl
ret
arpl
(bad)
jmp
or
sub
int3
sbb
movs
mov
or
xchg
fnstcw
push
popf
rcr
and
aas
or
pusha
ret
inc
and
add
int3
add
aad
shr
mov
sbb
push
push
xchg
inc
mov
fistp
cmps
inc
mov
inc
shl
or
call
rcr
js
mov
xchg
xor
(bad)
mov
add
push
fcomi
cdq
xchg
mov
fcomp
test
dec
out
call
adc
cdq
ret
mov
cmp
inc
in
fucom
aad
in
int3
add
out
cmps
inc
lock
add
in
cmp
add
mov
mul
aas
dec
or
cdq
in
fimul
mov
jb
les
sbb
hlt
cmps
jmp
sub
rcl
rol
jl
jl
cmc
xchg
fcom
shl
or
and
xchg
pop
jo
jmp
in
push
dec
or
imul
dec
adc
ins
mov
jmp
mov
adc
aad
xchg
xchg
cld
mov
xor
or
sub
sbb
jmp
mov
imul
call
add
in
call
(bad)
test
or
or
cld
add
or
in
ins
pop
aam
inc
repnz
jb
sbb
push
fwait
pop
(bad)
les
std
je
mov
iret
in
add
test
outs
jle
lea
sbb
or
xchg
and
(bad)
xchg
cwde
jg
cmp
(bad)
ffreep
and
ret
mov
arpl
je
cmp
rcl
out
adc
push
in
adc
jae
cmp
dec
imul
clc
and
sbb
mov
out
pushf
dec
push
xor
mov
add
lea
pusha
fucomip
ins
pusha
out
inc
push
add
cwde
loop
loope
std
adc
push
call
les
jmp
or
pop
stos
fnstcw
lock
xchg
aam
adc
adc
pop
stc
lock
ficom
mov
jns
shr
mov
add
in
lds
hlt
stos
or
leave
ja
mov
(bad)
cmp
jmp
dec
cs
nop
in
in
sub
lds
or
fdivr
xor
add
in
(bad)
xor
sbb
and
fimul
mov
adc
adc
adc
loopne
sub
cmp
or
lea
dec
dec
jl
shr
repz
pop
xchg
in
repz
aas
lock
dec
or
push
loope
mov
dec
cs
pop
inc
pop
push
pop
jae
jg
xchg
adc
aam
aas
gs
dec
xchg
es
fs
inc
dec
add
inc
jecxz
jo
scas
push
pop
ret
(bad)
call
pop
in
pushf
mov
or
push
aad
pop
imul
pop
leave
mov
push
call
push
pusha
fistp
cmp
not
pop
rol
mov
dec
es
xor
and
sub
enter
xor
cmp
xor
or
jg
nop
push
mov
cmps
mov
sbb
xchg
sbb
stos
mov
push
xchg
icebp
jae
jne
mov
mov
add
mov
aam
or
rcl
in
xchg
ins
fwait
pusha
add
push
in
push
ins
jo
inc
push
in
js
pop
xor
in
data16
sub
adc
add
xchg
mov
add
sbb
adc
in
xchg
mov
xor
add
sbb
sbb
enter
cmp
test
push
add
jge
fadd
or
fcom
push
jb
repnz
sbb
jl
lods
or
ror
pusha
pop
int3
sbb
aam
xchg
jo
cli
sbb
(bad)
mov
mov
adc
dec
cmps
add
out
pop
call
loopne
fs
adc
inc
stos
mov
std
pop
aam
push
dec
mov
push
shr
std
xor
rol
enter
push
sub
pop
cld
sbb
mov
cld
inc
lahf
(bad)
mov
test
(bad)
push
nop
lods
in
or
add
adc
fadd
in
sbb
add
xor
inc
mov
hlt
std
add
adc
cmp
mov
and
leave
xor
xchg
xchg
dec
clc
add
or
leave
and
adc
and
and
dec
sub
cmp
dec
xor
push
and
pop
pusha
push
dec
jo
or
mov
xchg
and
inc
aam
test
cwde
bound
xor
arpl
xchg
inc
jle
aaa
adc
dec
fwait
fs
in
je
xor
adc
cmps
pusha
sub
sub
mov
pop
dec
sbb
xchg
fild
jb
sbb
push
test
rol
cmp
les
inc
mov
fistp
xchg
jl
adc
xchg
in
aam
dec
dec
call
xchg
cmp
add
sub
loopne
push
xchg
push
push
pop
pusha
xor
dec
jno
jbe
jns
jae
sbb
(bad)
aad
and
push
mov
pop
mov
scas
leave
inc
sub
and
or
push
pop
push
loopne
xchg
(bad)
dec
fnstcw
mov
imul
pavgb
out
sbb
cmp
retf
mov
rol
shl
pop
loopne
and
lahf
fnstenv
push
sub
in
dec
in
add
in
(bad)
gs
adc
es
ss
dec
repnz
mov
mov
and
js
xor
and
sub
xor
push
test
add
mov
and
dec
rol
dec
xor
movs
pushf
mov
mov
cmc
add
and
movs
enter
mov
test
mov
call
ret
aas
pushf
adc
mov
sub
add
sbb
xchg
xor
xchg
xchg
sub
mov
rcl
out
pop
shr
stos
jg
das
jb
add
pop
cmp
pop
fs
cmp
scas
pop
mov
pushf
xor
mov
psubsb
rol
ret
lahf
push
inc
arpl
pop
les
clc
mov
leave
mov
and
and
mov
fmul
inc
inc
dec
dec
jb
or
xor
aas
ret
xor
nop
adc
jecxz
nop
xchg
mov
int3
sub
jbe
xchg
(bad)
fsubr
cmp
aas
pop
adc
push
loopne
ret
or
das
and
adc
xchg
int3
in
mov
jnp
(bad)
in
pop
mov
test
pushf
cmps
and
in
pop
or
shl
mov
mov
call
push
nop
push
push
cmp
nop
push
mov
aam
fcom
in
push
xchg
xchg
lods
cld
add
fmul
sub
enter
xor
xor
mov
sbb
pop
mov
or
or
aas
fstp
mov
test
push
bound
dec
(bad)
mov
and
sbb
or
xor
aas
or
pop
mov
fs
push
lea
fisttp
js
jbe
in
adc
or
inc
add
inc
imul
fs
dec
cmp
and
push
or
push
xor
sub
add
leave
and
pushf
leave
and
enter
add
cwde
inc
push
mov
or
pop
push
scas
pop
imul
mov
fcomp
adc
cwde
call
or
jl
enter
das
nop
enter
popf
or
cwde
test
movs
xor
ret
jecxz
test
movs
mov
dec
jb
vpsllq
push
push
lock
pop
jp
and
(bad)
fild
ins
push
jne
cs
out
push
mov
jmp
cmps
cs
and
sub
xor
je
push
sbb
mov
push
clc
leave
rcl
ret
pop
hlt
sub
jb
mov
cmps
push
in
inc
push
jbe
pop
call
ret
sbb
push
push
or
fdivr
pusha
xchg
imul
cmp
xchg
loope
and
nop
add
pop
sti
xchg
dec
push
fcom
cdq
fs
aam
add
adc
push
xor
rol
mov
popa
and
addr16
or
mov
adc
or
push
or
push
add
add
movs
movs
sbb
dec
push
and
sbb
and
xor
jb
mov
pop
vmovddup
dec
adc
out
and
nop
stos
mov
adc
pop
and
add
ret
and
ror
cmc
inc
ret
adc
adc
les
inc
add
mov
test
and
add
pop
mov
or
or
call
(bad)
lods
pusha
mov
loope
out
add
and
pop
adc
fistp
es
push
in
xor
push
aam
test
retf
(bad)
(bad)
mov
ss
jg
invd
push
aad
call
mov
in
hlt
imul
pop
xchg
call
lods
cwde
adc
in
outs
hlt
xor
test
xchg
add
ror
jg
rsm
dec
sub
add
pop
cmp
and
lahf
in
fs
dec
pop
pop
ins
cdq
pop
mov
(bad)
in
or
lahf
mov
dec
mov
ins
sub
or
sbb
lahf
loopne
mov
or
jb
sub
imul
in
pop
dec
ror
dec
scas
lods
imul
comiss
dec
movs
(bad)
cwde
cld
xor
pushf
stos
and
inc
xchg
sbb
jmp
push
or
sbb
xor
sub
in
push
pop
aam
sar
int3
jle
xchg
dec
xor
(bad)
retf
les
sahf
loopne
xchg
xor
cmps
fs
add
mov
pop
bnd
outs
pusha
ror
push
aas
lods
pop
add
mov
inc
sbb
fmul
cmp
jmp
pop
fcom
test
lods
cmps
sbb
lock
popa
cdq
xchg
xor
mov
or
add
add
adc
mov
lods
or
mov
pop
int3
iret
sub
add
pop
test
adc
and
mov
mov
lea
test
add
test
or
(bad)
dec
repnz
movs
nop
xor
test
ja
rcr
inc
movs
cwde
jge
aas
fstp
jb
add
jne
xor
fst
test
adc
ret
dec
sub
adc
adc
rol
test
push
mov
das
add
jl
mov
test
pusha
bound
sub
pop
push
xchg
das
stos
or
pop
cmp
sub
sub
and
cs
inc
dec
push
xchg
jl
(bad)
mov
jo
leave
and
adc
add
add
mov
sbb
jne
sbb
pop
movs
add
pop
and
aas
cmp
add
sub
imul
adc
jecxz
ja
hlt
and
or
dec
xor
push
sbb
jb
push
xor
xor
add
adc
movs
sbb
enter
mov
(bad)
push
or
in
xchg
push
enter
mov
mov
lods
mov
test
fist
mov
movs
jne
inc
das
and
lahf
les
add
mov
mov
sbb
mov
or
xor
lods
dec
pop
adc
and
inc
test
loop
wrmsr
test
push
jg
xchg
fbld
(bad)
movs
inc
popa
and
pop
inc
sub
mov
test
adc
adc
dec
sbb
push
pop
jmp
sbb
(bad)
xchg
ror
enter
clc
jmp
jnp
dec
repnz
and
in
or
jae
pop
shl
add
jb
inc
mov
cdq
nop
xchg
outs
pop
fcomp
sar
mov
call
loopne
icebp
adc
adc
jnp
ret
popa
add
lock
push
add
cmps
and
fadd
test
mov
xchg
pop
add
daa
or
stos
xchg
mov
dec
loope
mov
nop
addr16
lods
rcr
or
dec
dec
enter
push
add
or
cld
adc
cwde
in
in
hlt
es
addr16
sub
in
pusha
dec
mov
cmc
call
(bad)
fdiv
in
inc
xchg
ins
shl
mov
bound
cdq
jbe
and
nop
add
push
mov
cmp
or
xchg
sub
pop
sub
sbb
in
lods
pop
fs
push
inc
or
sub
fsubr
mov
push
je
xlat
cmp
sub
jno
mov
sub
rcl
ja
and
sahf
sub
test
sbb
mov
mov
dec
or
int3
out
shl
xor
cs
mov
ret
push
outs
mov
cld
jl
jns
add
ins
inc
test
sti
repz
mov
dec
inc
xchg
sub
jns
movs
pop
dec
dec
dec
es
test
sub
mov
pusha
pop
(bad)
and
mov
adc
call
imul
scas
xchg
sub
arpl
add
clc
sub
in
lods
ret
jl
lea
and
jno
sub
adc
aam
jnp
ret
nop
add
addr16
push
in
jl
adc
fsub
jnp
sub
lock
mov
arpl
push
ror
push
mov
call
inc
mov
and
icebp
sbb
push
test
adc
adc
and
adc
mov
enter
rol
sbb
(bad)
icebp
enter
dec
(bad)
and
retf
add
pop
adc
push
mov
out
push
push
mov
jb
rol
mov
or
or
sub
mov
retf
pusha
stos
pshufw
aad
popf
sbb
ins
jmp
sbb
dec
mov
les
sub
xor
add
pop
sar
int3
sub
sbb
mov
bound
push
mov
nop
jg
add
aaa
(bad)
fsub
mov
lahf
mov
and
(bad)
jl
je
bound
sbb
std
xchg
mov
mov
test
sbb
xor
adc
push
mov
(bad)
cs
adc
shl
inc
cwde
push
mov
pop
fnstenv
xchg
xchg
push
ffreep
or
bsf
lahf
shl
push
and
daa
ins
push
push
sub
push
cwde
mov
clc
mov
nop
sub
call
jecxz
or
outs
out
mov
dec
fwait
mov
mov
or
mov
jle
hlt
in
add
es
bound
pop
lds
mov
test
push
pop
mov
aas
(bad)
je
ret
or
retf
or
or
enter
test
jmp
and
loopne
mov
call
dec
outs
pop
or
adc
push
or
aaa
mov
daa
xchg
adc
int3
enter
pop
xchg
or
cdq
bound
mov
stos
pop
mov
sar
jg
sar
shr
or
and
loopne
rol
and
rol
mov
nop
pop
in
das
lods
iret
cmp
mov
test
inc
dec
dec
out
dec
mov
fsub
mov
mov
dec
imul
sar
(bad)
in
cmp
fbld
das
adc
inc
sbb
pop
fdivr
pop
mov
mov
jg
(bad)
cmp
pop
rol
rcr
outs
das
adc
pop
and
cmp
and
xchg
sbb
call
retf
les
adc
mov
iret
mov
cmp
or
push
sbb
rol
shr
and
lahf
(bad)
mov
aad
das
or
ret
test
sbb
shl
and
fistp
adc
pop
movs
pusha
sub
mov
aam
push
xor
pop
mov
stos
mov
je
jmp
push
inc
mov
mov
loopne
mov
enter
push
imul
int3
inc
fmul
nop
ror
mov
aam
jo
or
and
rol
xor
xor
ret
js
fisttp
adc
loopne
ss
out
cmps
sub
dec
push
jns
(bad)
adc
ret
ins
jmp
jo
add
movs
repnz
and
cwde
cdq
fiadd
add
adc
dec
test
enter
test
nop
repnz
add
sbb
or
int3
or
mov
es
sub
or
sub
ja
test
shl
aas
nop
push
sub
int3
sub
pop
mov
es
mov
in
fimul
cdq
mov
sbb
lods
lds
mov
add
add
sub
mov
jbe
(bad)
in
repnz
repnz
mov
test
jmp
sub
leave
sbb
cmp
xchg
sbb
pxor
pop
inc
and
les
sub
ins
adc
ror
or
push
call
pop
push
add
and
lods
jo
cmps
push
(bad)
js
rol
xor
adc
pop
(bad)
mov
in
dec
dec
and
sbb
mov
adc
imul
xor
or
push
sbb
sbb
sub
das
inc
or
jns
add
adc
inc
sub
stc
and
mov
pop
das
or
sub
scas
dec
test
nop
push
adc
jmp
cmp
in
add
test
leave
add
ins
inc
je
cdq
fs
imul
dec
dec
xchg
dec
es
xor
xchg
setns
test
xchg
int
ins
inc
call
cdq
ss
clc
push
and
mov
jp
call
or
adc
pop
add
inc
push
sbb
push
sub
sbb
xor
push
test
or
enter
or
in
and
popa
and
sub
mov
jo
and
nop
ret
out
out
sbb
jecxz
lahf
lahf
inc
inc
mov
leave
mov
mov
sub
lahf
clc
nop
xchg
push
xor
adc
pop
sbb
mov
mov
and
test
or
mov
mov
xchg
inc
jo
pop
sbb
fs
enter
je
inc
cmps
sbb
hlt
and
xor
les
or
ror
mov
and
xchg
and
push
add
cwde
pop
dec
add
and
js
iret
dec
mov
add
cwde
mov
das
aas
dec
mov
mov
pop
xchg
inc
popa
int
in
cmp
or
lock
ret
in
(bad)
xor
inc
in
adc
xor
or
inc
cmps
xor
pop
inc
inc
dec
mov
dec
ins
push
or
push
xor
inc
ins
xchg
jl
xrstor
seto
jg
mov
or
call
pusha
cmp
inc
jno
adc
cmp
dec
sub
lods
mov
int3
ret
aas
fs
sahf
add
jb
sub
je
jmp
aad
pop
mov
mov
test
lods
and
scas
out
bound
cmp
and
stos
aaa
mov
adc
mov
sub
je
jno
and
mov
add
mov
movs
or
pushf
push
fsub
or
rol
sub
fild
and
in
push
fsub
test
in
add
fmul
loopne
mov
or
(bad)
rol
movs
jmp
mov
test
xchg
lods
sti
push
nop
jg
and
add
loopne
pop
xor
add
xchg
pop
std
pusha
pop
push
sub
jo
and
aas
(bad)
push
mov
aas
lods
aas
nop
inc
lods
and
pop
pop
add
cmpleps
not
add
or
pusha
add
mov
adc
mov
inc
lods
movs
arpl
cmp
xor
outs
jle
sti
je
or
test
ins
mov
add
and
pusha
pop
je
dec
inc
sti
fsub
xchg
movs
xor
pusha
ins
mov
popf
js
pop
ins
add
js
sbb
lds
test
push
push
xor
lds
dec
push
mov
pop
or
shr
jo
add
mov
push
fs
or
xor
xchg
push
adc
ins
cmp
in
sbb
push
ins
xor
xlat
push
pusha
inc
or
pop
xlat
in
(bad)
mov
and
repnz
mov
leave
and
pushf
mov
inc
dec
xor
cmp
sub
ficom
sub
xor
push
repnz
shr
in
pushf
lock
fwait
fs
inc
in
loopne
adc
or
cwde
ror
dec
xor
rcr
pop
js
dec
shl
jl
xor
xor
shl
ins
fwait
ss
inc
in
and
dec
les
mov
xchg
dec
xor
jo
xchg
fcomp
pushf
sub
leave
and
es
fadd
mov
dec
ret
mov
xchg
sub
xchg
fs
jbe
lds
fs
dec
xchg
pop
aam
imul
xchg
push
push
fwait
fs
dec
dec
ins
sbb
xor
pop
cmp
fiadd
sub
mov
mov
es
cmp
int3
imul
fs
xor
fs
loopne
rcl
push
enter
cld
lock
sub
sysret
in
add
xchg
sbb
inc
and
adc
in
shr
mov
in
pusha
cmp
push
out
mov
add
sub
(bad)
out
ins
lods
push
mov
cmps
inc
jl
(bad)
ss
and
adc
imul
inc
fcom
ror
repnz
and
icebp
or
add
cmovo
test
sbb
mov
cmps
dec
xor
cdq
fs
or
cmp
icebp
cmp
leave
mov
push
inc
dec
adc
xor
sbb
and
sbb
fs
mov
call
xchg
dec
fwait
add
cdq
fs
ror
test
fs
dec
mov
nop
add
or
cwde
dec
pop
es
fidiv
js
mov
pusha
dec
push
nop
dec
es
and
xor
mov
xor
cmps
dec
adc
repnz
enter
ins
clc
out
in
xchg
sbb
or
inc
add
sub
dec
in
mov
in
fs
dec
repnz
lds
ins
ins
mov
enter
vunpckhps
out
stos
push
nop
test
mov
xchg
and
nop
ret
dec
sbb
bound
xor
cmps
jmp
adc
xor
retf
test
rol
cdq
sub
inc
and
mov
pusha
add
sub
cmp
sbb
push
adc
xchg
push
cmp
or
test
jo
add
mov
and
in
lds
inc
mov
arpl
lahf
pushf
xor
push
inc
lea
adc
mov
in
inc
fadd
xor
in
mov
push
mov
cwde
and
cmp
fdiv
test
add
inc
cmps
xor
scas
sbb
shr
or
sub
scas
add
add
mov
cmp
nop
test
mov
sbb
movs
loopne
sbb
in
add
jb
stos
aad
shr
js
push
fadd
add
lahf
dec
scas
adc
sub
sub
sbb
inc
pop
scas
or
mov
jge
inc
icebp
dec
jb
sub
jo
push
jne
cmp
enter
in
add
sbb
aam
cdq
xor
loopne
mov
dec
jl
test
adc
cdq
jbe
lods
inc
push
in
cdq
in
dec
rcr
cmp
cmp
jg
aam
push
dec
jb
(bad)
aam
shl
in
sub
xchg
push
mov
pop
aaa
pop
mov
fild
jb
push
mov
test
scas
add
jl
daa
ins
lock
imul
and
lock
leave
aam
(bad)
cmp
sbb
push
add
and
mov
scas
push
and
aam
pop
mov
add
and
sub
cmp
sub
nop
outs
and
xor
dec
js
mov
push
mov
ins
adc
fdiv
push
test
mov
sbb
nop
mov
pop
fwait
mov
shr
xchg
and
or
inc
fdivr
mov
or
and
mov
push
or
jmp
(bad)
fsub
ins
jne
call
and
ins
cmc
loopne
in
mov
push
jb
aas
fbstp
or
scas
sub
movs
add
add
xchg
jecxz
test
pusha
adc
add
push
gs
mov
and
clc
outs
and
pushf
jne
mov
xchg
mov
push
ror
iret
call
sub
fidivr
push
jne
test
gs
xchg
rcl
inc
push
xchg
dec
jno
loopne
adc
xchg
out
add
in
aad
scas
inc
pop
leave
dec
xchg
xchg
sbb
jo
adc
enter
push
sbb
pushf
retf
je
xchg
add
arpl
jl
mov
adc
dec
push
fcomp
imul
(bad)
pop
clc
call
out
in
and
sbb
mov
jmp
rol
sub
(bad)
mov
xor
mov
push
add
or
in
imul
leave
and
cmp
dec
jmp
out
mov
cdq
xchg
bound
jmp
shl
nop
lds
push
xchg
dec
fwait
shl
leave
and
inc
dec
cmps
movs
rcr
push
cwde
es
mov
sub
pop
cmp
sub
xchg
(bad)
dec
cmps
scas
mov
out
xchg
ret
lea
out
pop
call
xchg
imul
shl
in
call
dec
push
lock
sbb
sub
clc
jo
imul
mov
ss
push
fadd
xchg
imul
jmp
out
and
lods
add
pop
in
push
cwde
jbe
adc
dec
and
lds
xchg
dec
mov
rcl
dec
jns
fsubr
test
inc
repnz
xchg
adc
push
sahf
pop
sub
xchg
imul
and
sub
(bad)
mov
pop
cmc
fwait
imul
add
xor
xor
add
mov
push
and
pushf
pop
cmp
rcl
fs
dec
push
sbb
leave
and
cwde
sbb
xlat
mov
mov
movs
popa
xchg
push
xor
adc
popa
ins
dec
imul
cmps
movups
add
xchg
sbb
xor
in
in
adc
leave
mov
clc
lock
adc
pop
dec
(bad)
add
fcmovne
fsub
sub
cmp
sub
shr
(bad)
shr
fs
enter
cdq
fs
cdq
mov
mov
nop
fcmovnbe
lds
in
jo
addr16
pop
in
push
es
in
icebp
call
dec
fiadd
test
or
xor
inc
in
mov
mov
dec
ins
fisub
cwde
push
sub
push
imul
ins
xchg
nop
inc
push
mov
xchg
dec
mov
sbb
and
dec
and
call
test
adc
dec
sbb
leave
mov
dec
sub
add
push
xor
push
or
mov
sub
xchg
dec
rcl
aam
pusha
lods
dec
jb
imul
xor
and
int3
pushf
movs
ins
xchg
inc
dec
in
pop
fs
ins
je
xchg
dec
xor
test
and
cmp
xor
and
sub
add
and
dec
or
sbb
inc
dec
xor
in
cld
dec
es
fs
int3
aam
cdq
fs
fsub
les
ins
fidiv
adc
dec
pushf
inc
movs
mov
xchg
out
cld
fs
je
fisub
jl
adc
popf
xchg
in
outs
sbb
sbb
xor
inc
mov
mov
dec
push
sbb
sub
inc
xor
fs
imul
adc
mov
call
cmps
sub
adc
imul
fs
dec
cmps
adc
dec
es
mov
movs
imul
sub
mov
adc
xor
adc
ins
cmp
fisub
inc
dec
adc
popf
pop
in
mov
fwait
shl
xor
and
scas
adc
adc
cld
jmp
fisub
(bad)
xchg
mov
mov
jb
jmp
jmp
jmp
cmps
dec
jb
in
in
and
shl
jmp
push
jmp
cmps
sbb
lock
xor
leave
mov
lods
(bad)
sub
cdq
mov
pusha
sbb
aad
int
pushf
fs
dec
je
cmp
sbb
inc
and
xchg
dec
jb
or
xor
cmp
cdq
cld
jmp
in
in
jmp
jmp
dec
xor
int3
aam
pop
add
inc
xchg
dec
cwde
or
pushf
movs
outs
es
ss
ins
cdq
fs
dec
je
pop
ss
and
lock
dec
push
adc
cmp
inc
sub
dec
xor
xor
adc
pop
xor
and
or
push
jns
push
hlt
jmp
adc
jg
pop
or
aam
adc
push
xchg
sub
xor
imul
jl
and
jmp
lds
sbb
jmp
sbb
mov
add
xor
adc
nop
test
mov
mov
test
adc
fistp
mov
sub
fs
mov
mov
(bad)
inc
ret
mov
jle
in
cld
es
not
mov
in
int3
sub
out
sbb
test
adc
sbb
imul
in
xchg
cmc
sub
imul
rol
adc
fld
mov
mov
ins
inc
pop
or
mov
mov
jge
ins
mov
push
test
adc
scas
ins
dec
aaa
(bad)
adc
in
and
in
aam
call
rcr
push
sahf
xchg
shl
in
cld
daa
test
imul
xchg
test
nop
cs
stos
push
sar
sub
adc
mov
lock
add
pop
les
loope
nop
or
inc
pop
mov
fsub
std
add
enter
or
push
leave
and
xchg
xchg
pop
mov
in
aas
enter
jb
or
popa
add
cmp
and
xchg
sbb
sbb
add
or
iret
jo
or
ins
adc
xchg
pop
test
fadd
call
in
or
jbe
dec
xor
adc
add
mov
or
mov
in
cld
sub
add
pushf
js
cld
mov
movs
leave
xchg
cld
add
sbb
and
and
popa
and
push
mov
loopne
and
add
cmp
add
inc
loopne
pop
sub
pop
enter
cld
mov
pop
sub
or
jne
ret
jo
cmc
rcr
adc
maxps
and
fdiv
pop
lahf
mov
(bad)
xor
mov
xor
or
mov
push
mov
enter
nop
or
mov
fs
push
cmp
mov
lods
adc
(bad)
mov
movs
adc
icebp
jl
add
mov
adc
rcl
dec
inc
scas
dec
and
int
lea
(bad)
jmp
call
sub
mov
add
add
hlt
(bad)
and
repnz
pop
inc
fs
sbb
sub
test
pop
inc
and
cmp
aaa
xor
pop
dec
jge
mov
mov
addr16
pop
je
inc
dec
loop
jmp
push
mov
mov
movs
pop
in
sbb
(bad)
push
and
sub
xor
sub
and
adc
test
inc
popa
add
xchg
(bad)
dec
fnsave
fimul
inc
or
and
es
cmc
cmp
mov
mov
add
jae
sti
mov
add
and
pop
mov
mov
push
xchg
push
in
stos
mov
dec
test
stos
add
push
add
cmp
or
mov
dec
rcl
aas
sub
jg
dec
pop
pop
lea
sbb
dec
shl
adc
xor
loope
adc
dec
mov
js
dec
pop
in
mov
int
nop
push
jo
sub
loopne
xlat
(bad)
mov
add
stos
loope
loope
mul
cmp
push
test
push
push
stc
(bad)
(bad)
popa
mov
or
dec
adc
aaa
xchg
sub
adc
rcl
push
or
push
leave
out
ja
(bad)
cmp
inc
popa
test
mov
enter
ins
add
mov
mov
dec
nop
shl
pop
call
adc
cmp
stc
jne
xchg
pushf
or
inc
dec
mov
pusha
jmp
and
cmp
add
and
jl
adc
sub
lods
or
fld
mov
inc
leave
pushf
push
sbb
push
stos
or
pop
lods
dec
or
push
dec
inc
outs
pop
ins
ror
add
add
arpl
xchg
clc
shl
popa
aad
aas
inc
gs
(bad)
out
xchg
pop
aad
cwde
js
cmp
ins
enter
and
inc
sbb
xlat
push
ins
xor
or
leave
and
cmps
or
sub
add
or
inc
sbb
add
adc
mov
popf
fiadd
add
sub
inc
add
sub
test
and
xor
mov
fiadd
or
test
addr16
add
fwait
or
push
adc
les
mov
scas
xor
fwait
mov
pushf
aam
aam
mov
cwde
leave
loopne
or
adc
add
or
pop
dec
das
or
dec
out
das
lods
jbe
scas
aam
mov
adc
jg
inc
or
pusha
das
cwde
lahf
push
adc
push
dec
and
mov
outs
dec
aas
mov
iret
movq
mov
lds
mov
or
and
cmp
jae
mov
or
lahf
sbb
es
mov
mov
add
jg
fisubr
int
dec
pop
inc
aaa
mov
cmps
test
test
fs
rol
inc
mov
pop
or
and
adc
test
aad
mov
adc
push
out
sub
pop
sub
mov
add
aam
xchg
mov
ins
adc
sbb
dec
pop
jo
enter
push
pusha
je
inc
adc
ins
mov
pop
js
sbb
jo
push
jl
xor
or
mov
and
push
and
out
jg
imul
sub
test
adc
or
xor
fldcw
pop
and
adc
movs
jg
sub
inc
push
pop
outs
add
pop
jae
or
xchg
xchg
sbb
enter
cmp
ins
ins
xchg
xor
cwde
icebp
ins
ins
pusha
popa
xchg
push
pop
nop
icebp
lods
pusha
aam
inc
mov
mov
scas
scas
movs
pop
scas
mov
ins
nop
inc
shl
loopne
fnstenv
ins
push
sbb
dec
push
jno
push
sbb
mov
sub
sub
xor
bound
push
cmps
sbb
repnz
sbb
jo
add
loopne
fldcw
ror
fsubr
pusha
push
inc
es
and
nop
repnz
dec
xchg
sbb
into
mov
test
popa
xchg
and
repz
adc
mov
test
inc
nop
push
(bad)
mov
lock
push
sbb
xor
push
push
xor
(bad)
test
(bad)
add
daa
jno
mov
bound
fsubr
enter
xor
ins
aad
(bad)
gs
push
sub
lahf
jmp
xchg
or
inc
xchg
jae
sub
add
aam
sbb
fsubr
lods
cld
pop
inc
inc
mov
xchg
add
or
jb
add
mov
stc
mov
stc
nop
cvtps2pi
test
or
mov
jbe
shr
or
mov
xchg
loope
rcr
or
push
nop
fld
xchg
and
jbe
jo
mov
xchg
aam
adc
scas
adc
ins
test
scas
push
sub
pushf
jae
cmp
pop
and
outs
and
adc
push
sbb
dec
scas
test
mov
cdq
mov
inc
pop
lock
or
nop
ins
or
sub
mov
push
dec
call
xchg
and
or
in
mov
push
add
enter
sbb
int3
loopne
nop
sbb
adc
inc
push
nop
inc
inc
fcom
fsub
loopne
in
pop
enter
call
xor
pusha
pop
enter
nop
hlt
and
enter
in
pop
enter
and
jb
add
add
fist
mov
aas
mov
xchg
add
push
adc
mov
dec
jae
lahf
(bad)
fild
pop
imul
mov
dec
rol
ror
fadd
jb
pop
ror
jb
add
lock
and
jb
add
push
enter
fadd
jb
loopne
add
enter
adc
add
in
inc
in
cmp
add
jo
mov
clc
shl
inc
mov
dec
push
lods
pop
sbb
and
lods
mov
cmp
rol
aas
push
inc
push
cmp
cmp
push
cmp
mov
pop
cmp
loopne
and
and
sbb
xchg
jo
add
mov
adc
jl
imul
sbb
outs
and
es
pop
enter
enter
nop
xor
pop
enter
lock
add
and
and
and
jb
es
pop
jb
xchg
popf
mov
mov
sub
cdq
popa
add
and
or
or
mov
jnp
popa
cld
bound
lock
sbb
cs
punpckldq
sub
jb
bound
arpl
aas
(bad)
pop
cmp
cmp
stc
jnp
lods
jnp
nop
outs
pop
mul
into
push
out
fld
das
mov
stc
(bad)
jl
sub
ret
and
and
fstp
cmp
xchg
rol
cmp
fsub
cli
cdq
mov
std
pop
outs
sub
mov
jge
cmps
sbb
pop
push
in
mov
pop
daa
sbb
inc
mov
xchg
in
out
xchg
das
pop
imul
xchg
mov
mov
shr
pop
mov
in
outs
lock
das
movs
repnz
jne
adc
sub
pushf
add
sbb
sbb
test
and
cdq
in
sbb
and
and
sub
xchg
dec
cs
sub
xor
sbb
dec
cmp
in
cmp
inc
loope
sub
outs
mov
jg
pusha
adc
bound
push
xchg
push
mov
movs
sub
jb
dec
xchg
cmps
mov
sbb
xchg
inc
mov
sbb
mov
lds
xchg
mov
cmp
pop
in
sub
adc
jae
pop
push
add
pop
jecxz
repnz
mov
sbb
and
popa
bnd
xchg
or
stos
and
sbb
xor
mov
in
or
cmp
(bad)
jnp
mov
lds
fs
cmp
nop
adc
push
pushf
xor
sbb
imul
xor
outs
mov
ret
enter
xchg
and
fist
jb
xchg
inc
out
nop
xchg
sbb
xchg
push
stc
xchg
pusha
xchg
inc
dec
jb
add
pop
push
xchg
int3
sub
sub
rcr
daa
jns
dec
dec
and
xor
cmp
jl
je
pop
cmps
mov
or
push
mov
inc
mov
pop
fcmovbe
adc
adc
out
js
cdq
mov
mov
mov
cmp
pop
inc
jns
and
jbe
nop
sbb
aam
fadd
pop
jb
sbb
dec
in
lods
pushf
loopne
mov
adc
movs
fwait
in
adc
push
fwait
mov
adc
xor
and
jmp
dec
sub
in
and
in
adc
xor
adc
aaa
cmp
shl
dec
imul
xor
call
in
cwde
mov
jb
movs
icebp
hlt
pop
jb
and
sbb
ins
pop
dec
sub
jge
scas
cmp
test
jae
xchg
shr
lods
aad
imul
sbb
movs
fwait
sbb
dec
or
sahf
or
inc
call
leave
dec
or
cmp
dec
jb
and
ror
xchg
outs
xor
clc
dec
loopne
cdq
in
dec
dec
lahf
add
inc
add
mov
test
cmps
sbb
pusha
shl
sbb
es
sbb
popf
movs
inc
jmp
and
sub
cmp
retf
push
dec
and
push
xor
sbb
mov
jb
in
dec
aam
pop
mov
test
aas
fld
jb
movs
sbb
test
dec
ret
and
push
je
aaa
cmp
mov
pop
test
jbe
mov
shl
and
jl
aam
jle
adc
enter
je
enter
mov
in
(bad)
dec
movs
push
test
xchg
enter
cmp
pop
xchg
cmp
dec
cs
pusha
js
xchg
xchg
sbb
ins
jmp
clc
or
gs
call
fld
fbld
sub
pop
xor
clc
mov
repnz
pushf
pop
and
aaa
adc
loopne
and
cmp
cmps
mov
test
ret
ss
pop
sub
test
ror
scas
pop
xor
inc
fsubr
dec
ds
repnz
lods
test
add
push
add
xor
pop
cmp
in
cmp
daa
sub
lods
les
jb
adc
jbe
dec
scas
inc
repz
mov
lods
cmp
shr
nop
std
mov
and
or
xor
cmp
jl
daa
cmps
mov
pushf
sub
in
loopne
nop
out
and
mov
aas
xchg
inc
sub
xor
jb
in
or
in
(bad)
jge
je
imul
and
mov
adc
pop
iret
daa
jo
psubusw
adc
mov
pop
repnz
jecxz
ins
es
in
adc
movs
rcl
dec
fdivr
inc
cmp
icebp
or
and
inc
das
or
add
adc
sub
jmp
test
outs
xchg
mov
inc
(bad)
sbb
retf
sub
ss
push
xor
mov
xor
mov
das
pusha
in
imul
ins
pop
ja
jae
sub
dec
cmp
xchg
out
push
and
mov
or
add
and
push
fs
adc
mov
cmp
pop
and
pop
enter
and
rcl
and
and
fcomp
and
and
loopne
and
and
call
pop
lock
and
and
clc
cld
pushf
sub
bound
sub
inc
mov
movs
and
and
and
aam
and
and
fsub
and
and
in
and
and
in
mov
(bad)
clc
xor
pushf
or
je
ds
test
(bad)
cld
pop
mov
and
add
pop
and
and
or
and
and
adc
and
and
and
and
and
pop
and
and
sub
and
and
xor
and
and
xchg
mov
jmp
or
and
cmp
and
push
hlt
push
add
mov
fbld
in
ins
or
addr16
addr16
push
push
sbb
movs
cld
call
sbb
pop
arpl
and
mov
pop
xchg
popa
daa
xor
or
pop
repnz
loopne
or
pop
call
shl
or
or
cmp
sbb
das
rol
xor
adc
enter
sbb
in
cmp
aas
jne
pop
sbb
pop
ja
dec
mov
and
dec
jns
ja
dec
daa
push
ins
leave
push
retf
push
lahf
test
sbb
add
and
add
in
and
and
in
(bad)
jl
adc
and
jb
sbb
mov
sub
xor
dec
jb
pop
add
pop
cmp
xchg
xor
xchg
inc
xchg
push
mov
pusha
xchg
jo
mov
out
pop
xchg
mov
jb
retf
jo
xor
cmp
aas
cwde
sbb
sbb
adc
enter
and
jb
aam
pop
jb
pop
fsub
call
add
xor
xor
xchg
in
cdq
pushf
xor
xor
and
jb
je
mov
das
popf
ins
popf
lods
add
in
sbb
rcl
adc
sbb
and
mov
mov
xchg
add
lahf
test
rcl
push
mov
inc
and
jb
dec
dec
jb
pop
jb
push
pop
push
jb
pop
pop
pusha
rcl
pop
pop
js
adc
jo
mov
jl
mov
add
adc
and
mov
jns
push
cmp
and
test
add
mov
imul
cmps
inc
nop
sbb
push
int
lods
cmp
leave
add
movs
sub
sub
sub
inc
mov
ficom
pop
cmp
xadd
mov
movhps
sbb
jne
inc
(bad)
std
scas
push
jb
(bad)
mov
pop
inc
xor
dec
and
clc
push
mov
add
push
jb
or
sahf
sub
pop
mov
mov
and
jnp
lods
mov
mov
fadd
push
nop
xchg
call
mov
adc
dec
push
mov
mov
mov
mov
or
stos
sub
frstor
push
or
sub
and
or
push
push
dec
sbb
jmp
push
jmp
push
adc
adc
test
fsub
test
addr16
loopne
jecxz
adc
out
retf
xchg
xchg
pop
xchg
add
add
sbb
sub
ds
int
push
or
or
or
sbb
sahf
rep
sbb
xchg
sbb
jns
jns
mov
pusha
pop
imul
jns
ja
(bad)
fwait
mov
test
jle
scas
mov
repz
std
push
push
and
jns
out
pop
jne
stos
(bad)
repz
out
test
repz
inc
push
addr16
call
int
sti
jns
out
adc
daa
cmp
sahf
out
xchg
stos
mov
iret
mov
sahf
iret
in
adc
push
xor
repz
push
jb
cdq
fnstcw
rep
(bad)
adc
out
sahf
out
inc
pop
outs
test
mov
xlat
loop
cmp
mov
cli
adc
cmp
repz
push
sbb
iret
mov
and
out
sahf
xor
cwde
ins
sahf
out
mov
add
cmp
repz
repz
jp
nop
stos
rcr
out
cmp
push
add
jns
pop
imul
xchg
mov
repz
out
add
inc
pop
cmp
repz
xchg
scas
leave
in
sahf
repz
sbb
sahf
out
jno
cwde
mov
out
sahf
into
fucomip
neg
adc
cmp
repz
inc
push
xor
repz
mov
jns
int
sbb
or
jns
aas
dec
pusha
imul
sahf
out
mov
cmp
out
sbb
sbb
iret
repz
inc
bound
mov
cmp
loopne
sbb
xor
out
dec
pop
gs
out
sahf
out
mov
repz
neg
das
ss
repz
loopne
clc
push
add
out
ins
add
push
jo
popf
out
nop
mov
ds
sahf
out
sahf
pop
pop
pop
pop
pop
pop
jns
idiv
or
push
inc
pusha
sub
sahf
out
shl
add
or
repz
or
or
out
sahf
test
or
or
or
push
xor
jns
ja
or
or
or
cmp
sbb
push
jp
ins
fld
xor
sbb
adc
push
loop
inc
add
aaa
cld
jnp
xchg
inc
ins
fs
popa
jb
gs
add
xchg
cmc
pusha
daa
sbb
ins
sbb
mov
inc
outs
sahf
popa
push
iret
call
cs
scas
sbb
sbb
xor
fdivr
imul
push
xchg
lods
and
ins
jo
jbe
rcl
push
and
sahf
ins
mov
push
cs
push
xor
es
jmp
outs
xor
push
gs
push
imul
and
add
js
add
jae
clc
jb
pusha
jnp
fnsave
or
popa
xor
jp
add
dec
clc
or
inc
aad
add
(bad)
fld
cs
es
inc
das
pop
sahf
cs
mov
pop
cmp
aas
rcr
dec
push
jle
iret
shl
data16
jb
add
push
mov
frstor
cs
es
mov
neg
ja
pop
jb
inc
pop
outs
ds
push
loope
neg
jb
imul
ins
mov
mov
inc
add
jb
out
neg
pop
inc
imul
or
push
adc
out
pop
push
dec
out
fld
arpl
pop
arpl
add
lock
inc
push
arpl
pop
je
jns
jnp
jns
inc
inc
jae
(bad)
or
ja
imul
ja
pop
inc
jnp
pop
nop
add
sub
das
push
dec
popa
sti
scas
cmp
jmp
inc
sub
ficom
(bad)
jne
stos
xchg
inc
cmps
ins
dec
jg
mul
pop
jne
imul
in
mov
popa
je
outs
outs
and
outs
jbe
jns
popa
ins
ins
bound
imul
retf
adc
loop
dec
cmp
mov
dec
xor
mov
push
jnp
cmps
inc
dec
xchg
push
jg
aaa
dec
outs
push
jb
addr16
jecxz
aaa
mov
add
fs
or
jb
push
dec
sbb
dec
popa
outs
addr16
int3
aas
and
cmc
mov
and
cmp
ins
fwait
sub
sbb
dec
sub
jp
push
test
cwde
sbb
outs
repz
xor
push
mov
or
pop
xchg
retf
push
cmp
clc
imul
or
push
cmp
ss
adc
mov
dec
pop
mov
fwait
int
jmp
dec
inc
lahf
push
jle
jle
adc
push
ds
mov
data16
push
push
aaa
arpl
fstp
sahf
addr16
mov
mov
rcl
into
inc
pop
test
push
rcl
lock
idiv
lods
mov
cmps
aas
inc
shr
iret
cmp
cmp
aas
pop
mov
jbe
outs
retf
jae
aaa
neg
aas
jecxz
pop
push
push
dec
outs
jnp
imul
jp
das
jb
pop
cmp
ja
pop
mov
adc
add
lea
xlat
add
xor
jns
add
bound
dec
push
outs
sbb
sti
fld
xor
cmp
pop
add
ins
out
js
xor
and
jle
push
out
gs
shl
dec
aam
gs
jb
jae
push
fs
xchg
push
dec
add
daa
lods
stos
(bad)
jb
add
imul
gs
scas
frstor
je
jne
outs
jb
xor
(bad)
hlt
(bad)
fisub
es
push
imul
movs
and
or
outs
or
jo
add
jb
test
inc
fwait
inc
enter
adc
in
push
cmps
add
mov
push
sub
push
xor
push
jnp
pusha
push
lods
mov
mov
cmp
nop
mov
or
pop
ficomp
movs
or
out
(bad)
lock
mov
leave
pusha
sub
fwait
cmp
push
pop
and
mov
add
(bad)
sahf
fbstp
fwait
push
imul
mov
mov
lods
jbe
iret
mov
in
inc
inc
pusha
mov
imul
sub
jmp
ins
mov
ins
add
inc
inc
imul
outs
addr16
dec
cwde
xchg
gs
xchg
data16
call
adc
out
mov
adc
pusha
sbb
int
mov
push
cld
int3
add
xor
pop
pextrw
out
mov
cs
push
jmp
xor
dec
jns
stc
in
push
push
stc
push
add
push
test
add
cmc
outs
mov
ins
sahf
out
mov
int
cmp
dec
jno
mov
jns
or
cld
leave
out
shr
clc
sysenter
add
cmp
sub
cs
or
push
pushf
xor
jmp
shl
pop
in
or
and
sbb
adc
fild
push
mov
adc
mov
xor
pop
or
push
stc
sub
inc
push
jo
ins
sahf
imul
scas
scas
push
add
jp
push
iret
pop
ja
mov
enter
fimul
push
inc
xor
imul
pusha
mov
add
cmp
dec
jl
xchg
add
das
xchg
add
inc
dec
push
das
jne
data16
adc
seto
and
xor
scas
ud2
stc
jb
adc
adc
jb
push
adc
push
and
inc
dec
mov
addr16
push
or
cmp
data16
imul
jl
call
dec
je
ins
or
paddd
dec
push
or
movs
mov
data16
dec
cli
cmp
add
aam
fisttp
dec
add
xor
jne
xchg
adc
push
and
jl
cmp
pop
(bad)
cwde
push
add
add
(bad)
call
inc
push
push
xor
add
add
mov
inc
inc
pop
push
mov
pop
mov
iret
fld
or
push
push
fwait
inc
scas
mov
mov
push
pusha
ss
mov
pusha
push
mov
inc
call
inc
(bad)
jl
pop
inc
ins
inc
test
out
push
cdq
mov
jmp
push
repz
repz
out
cmp
scas
iret
lock
sub
scas
sub
mov
lds
mov
pop
or
push
ss
data16
mov
div
xchg
xor
sahf
out
pop
jge
fidiv
xchg
cmp
addr16
xor
out
sub
dec
cmp
push
mov
sahf
int
cmp
outs
js
jp
fild
dec
and
inc
sub
sub
test
(bad)
mov
mov
dec
xor
pop
or
scas
fwait
das
dec
cmp
popf
jecxz
dec
mov
xor
and
(bad)
maskmovq
not
mov
or
pop
add
adc
add
dec
data16
movs
nop
xchg
lods
scas
xchg
push
fnstsw
mov
dec
push
dec
push
xchg
cli
cmp
jns
or
pusha
jne
loop
mov
sbb
add
or
das
paddusb
addr16
sbb
enter
push
sub
pop
mov
add
rol
pusha
cmps
mov
clc
aaa
xchg
ret
jo
outs
outs
outs
gs
mov
jb
je
adc
pusha
daa
push
(bad)
xlat
fist
fdivr
outs
jo
sub
ins
cmps
xchg
add
inc
push
pop
scas
shl
dec
daa
mov
outs
movs
inc
sbb
push
add
jmp
mov
push
dec
ss
push
add
movs
scas
sbb
aaa
dec
mov
or
jo
ds
hlt
push
in
jns
out
loopne
int3
mov
lock
adc
repnz
pop
jno
jl
push
jecxz
repnz
dec
jo
pop
adc
fs
jo
ss
sbb
cwde
fdivr
sbb
mov
psubusb
stos
pop
mov
push
rcr
push
test
inc
ss
movs
cmp
lahf
pop
outs
arpl
retf
push
jecxz
inc
mov
mov
ss
in
xchg
(bad)
mov
inc
mov
sub
mov
or
push
jnp
jmp
loopne
mov
push
movs
pop
aad
cmc
push
mov
add
pop
daa
mov
pop
ins
outs
dec
or
out
mov
shl
aaa
into
lock
dec
call
hlt
outs
cmp
mov
cmp
push
sub
call
in
mov
repz
jo
dec
mov
push
jmp
dec
mov
mov
and
mov
jb
ins
ins
inc
popa
jb
imul
ins
bound
outs
js
dec
or
xchg
jmp
xchg
push
je
jb
sub
je
jb
mov
and
and
or
push
hlt
mov
inc
push
jp
clc
call
cs
sbb
cmp
xchg
xchg
ds
xor
or
shl
inc
push
cmovg
add
inc
test
push
fwait
and
sub
inc
test
ins
loope
js
push
push
add
add
jo
xor
pop
js
xchg
sub
pop
fnstsw
test
pop
inc
push
dec
stc
bound
cld
inc
pushf
sub
cmp
add
leave
and
dec
xchg
enter
push
dec
adc
dec
pop
aas
fmul
or
fidivr
push
jle
or
dec
test
xchg
and
ror
(bad)
adc
jno
adc
repnz
lahf
in
xchg
add
push
xor
cmps
pop
inc
push
addr16
push
popa
mov
mov
imul
outs
lahf
inc
fnstsw
jae
inc
xchg
bound
dec
mov
dec
inc
leave
lahf
mov
outs
ja
sahf
ins
(bad)
sar
or
jae
jb
shr
outs
pusha
mov
jne
push
daa
sub
pusha
js
push
adc
or
(bad)
fisubr
adc
les
push
enter
inc
push
xor
pop
enter
in
or
or
and
inc
scas
nop
sub
daa
(bad)
or
pop
xchg
ror
(bad)
and
je
(bad)
cmp
add
nop
push
jns
ss
js
fisubr
jno
sbb
sahf
out
xchg
cdq
int3
ds
rep
int3
push
xlat
int
ror
sahf
in
fnstcw
shl
(bad)
rol
fwait
out
push
iret
retf
jecxz
rcl
cmp
jne
mov
pop
sbb
or
out
adc
cmp
mov
(bad)
mov
hlt
push
jae
iret
rcl
je
add
je
pop
sub
pop
lahf
inc
jmp
cwde
push
sbb
jae
das
movs
dec
clc
adc
sahf
jb
(bad)
push
add
int3
push
or
jb
fidiv
adc
or
arpl
dec
xchg
or
fs
and
mov
fldz
push
int3
cmp
sub
test
je
or
test
mov
push
ret
pop
daa
inc
dec
mov
jnp
mov
fidiv
ins
ror
push
ins
outs
gs
pop
or
inc
inc
retf
arpl
mov
shl
push
rcr
popa
fiadd
ret
cmp
jo
push
lock
cmp
stos
jo
dec
jns
out
inc
xchg
jmp
push
lock
je
jne
inc
sub
js
out
pop
jae
push
scas
xchg
xlat
scas
inc
sub
pushw
bound
ins
ins
mov
inc
jg
dec
inc
movs
popa
in
popa
pop
ja
sub
jle
(bad)
scas
push
stos
jmp
inc
sub
pop
int
mov
push
test
in
sti
add
push
pop
ja
in
xchg
push
mov
sahf
int
out
and
out
adc
jns
iret
fs
push
push
stos
addr16
cld
icebp
inc
xchg
repnz
rep
sahf
adc
and
out
ins
sahf
out
hlt
adc
dec
(bad)
shl
push
les
fdivrp
pusha
or
cmp
adc
(bad)
ffreep
test
fild
mov
adc
leave
xlat
pop
loopne
xchg
pop
fisttp
or
jne
and
(bad)
fbstp
or
dec
add
mov
jp
mov
cmp
cld
xor
adc
sub
arpl
ret
mov
adc
imul
ds
dec
outs
imul
outs
outs
inc
mov
aas
in
add
push
dec
gs
outs
jb
inc
fs
adc
or
ins
outs
jae
pop
(bad)
imul
loope
jo
je
popa
jmp
imul
icebp
aam
push
sti
and
wbinvd
inc
dec
pavgb
out
inc
ss
jne
gs
cs
pop
or
mov
push
cwde
test
scas
mov
(bad)
or
cmp
jbe
cs
adc
rep
fidiv
push
jl
mov
addr16
and
loope
sbb
cmp
repz
sbb
sub
push
jnp
addr16
sbb
inc
call
adc
repnz
adc
jo
test
dec
push
dec
jl
test
adc
nop
cwde
cmps
pop
or
dec
gs
jo
aas
push
mov
inc
cld
loop
pop
and
aaa
add
mov
or
mov
mov
arpl
gs
jnp
and
ins
xchg
lock
pop
ins
inc
cmp
and
in
push
or
add
ss
and
enter
add
repnz
and
in
sub
mov
nop
das
daa
cmps
sub
xchg
sbb
or
mov
and
pop
sbb
adc
or
retf
sub
adc
in
add
adc
das
or
gs
dec
stc
xor
outs
pop
or
adc
push
and
add
push
sbb
sub
and
mov
adc
clc
add
ja
mov
shr
push
sbb
cmp
mov
xor
cmp
jmp
jge
add
stos
int3
add
dec
push
dec
sub
test
stos
es
push
add
sbb
or
pop
dec
aaa
xor
jle
jnp
or
call
inc
push
es
push
pop
mov
adc
xor
sbb
mov
inc
das
(bad)
out
adc
push
jle
adc
or
add
pop
or
pop
inc
inc
ret
xchg
je
pop
mov
add
outs
push
ins
push
push
and
fiadd
ds
mov
push
dec
int3
out
inc
ins
jnp
mov
dec
js
dec
out
sbb
dec
dec
sub
push
int3
es
ds
push
push
int
ret
mov
or
shl
outs
or
das
data16
and
adc
scas
inc
pop
dec
test
cld
push
jno
sub
and
nop
call
test
jle
push
push
pop
or
dec
loop
jbe
ret
mov
cmp
jle
clc
dec
sbb
add
or
adc
push
adc
stos
jbe
imul
sbb
and
pop
inc
and
ret
cmps
das
ja
lds
inc
push
or
xchg
jle
loop
jbe
push
imul
push
loope
scas
add
push
sbb
mov
pop
enter
jb
mov
bound
movs
lahf
pop
shr
add
ins
stc
lea
in
mov
iret
push
push
fs
add
jbe
xchg
inc
test
pop
add
enter
pushf
ins
mov
out
outs
(bad)
aas
outs
and
test
fild
mov
test
inc
or
inc
je
jb
bound
gs
mov
sub
xor
inc
jb
jns
data16
mov
cmps
jl
push
add
cmp
inc
push
push
shl
loopne
ss
push
xor
pop
adc
jbe
adc
mov
pop
dec
and
xor
pop
cli
mov
test
out
or
or
pop
push
push
push
or
or
jp
ret
neg
pop
push
imul
xchg
inc
ds
dec
ins
sub
(bad)
jbe
das
sahf
gs
dec
(bad)
(bad)
gs
inc
daa
inc
shl
push
jo
div
push
mov
sub
push
ja
cmp
jbe
nop
sub
or
in
push
pop
scas
fdiv
xchg
pop
mov
enter
ins
lods
add
mov
jae
fsubp
(bad)
fstp
aaa
fs
js
mov
cdq
inc
add
(bad)
(bad)
mov
sub
or
push
scas
gs
aam
dec
adc
mov
cmp
(bad)
cdq
sar
mov
je
pop
inc
jno
add
dec
outs
movups
pusha
int3
lahf
and
not
or
xor
icebp
push
sbb
cmp
jg
or
std
dec
push
data16
rol
add
dec
adc
scas
sub
arpl
js
mov
pusha
ins
in
subps
test
cmp
mov
mov
out
test
or
test
hlt
test
lds
in
daa
fisttp
in
inc
gs
jb
jns
outs
popa
sbb
jmp
inc
inc
add
mov
add
aas
lods
push
pop
jmp
pop
xor
mov
repnz
add
or
inc
mov
dec
popa
jo
je
sbb
add
or
mov
pop
or
push
push
dec
call
popf
test
jb
mov
shl
cmps
push
cmps
js
pop
xchg
fs
push
dec
or
retf
call
ins
push
xor
cmps
jle
mov
lods
mov
push
stos
dec
repz
and
test
inc
xor
sbb
iret
lds
jmp
push
fistp
test
lock
loope
int3
cmp
das
ss
cmp
sti
push
cmc
and
sbb
adc
and
hlt
loopne
jbe
add
lock
mov
scas
or
mov
mov
mov
into
xor
js
popa
sbb
ins
repz
adc
stos
push
sbb
push
rol
mov
std
dec
and
xchg
inc
inc
jb
push
repnz
cmps
iret
jecxz
out
rol
in
pop
(bad)
(bad)
loopne
(bad)
sti
sbb
sub
sahf
lahf
mov
scas
inc
ja
dec
aam
xor
imul
cmp
rol
push
adc
add
bound
push
icebp
adc
ins
dec
je
mov
or
mov
xchg
imul
or
jne
retf
rcl
cmps
mov
div
outs
sub
push
push
int3
movs
hlt
pop
call
push
xchg
push
inc
addr16
push
push
rcl
push
sub
push
mov
dec
add
dec
scas
sub
outs
dec
pusha
ss
dec
adc
out
pop
mov
mov
mov
fdivr
fisttp
push
jb
jl
mov
xchg
(bad)
push
cli
ret
pop
das
imul
inc
xor
mov
push
outs
je
adc
out
(bad)
inc
inc
and
inc
xchg
inc
adc
dec
mov
add
xor
push
jae
out
push
stos
mov
or
cdq
add
aas
(bad)
addps
inc
push
frstor
dec
subps
fistp
cmps
jae
jb
outs
pop
(bad)
aas
test
push
cmp
test
daa
and
sahf
sub
out
(bad)
or
repnz
and
dec
daa
dec
sub
push
and
mov
gs
data16
and
mov
push
inc
or
pop
jle
and
add
rcr
jg
jmp
in
in
push
add
cmc
adc
fisttp
cmc
pop
xchg
and
mov
rep
lock
repz
push
jg
pop
nop
add
add
test
sbb
fldcw
cli
dec
repz
cld
sub
inc
repnz
xor
mov
cmc
mov
(bad)
bound
ds
(bad)
hlt
jmp
dec
es
inc
outs
ins
test
jbe
es
test
dec
cmp
in
jbe
pop
psubsb
mov
out
pop
push
dec
repz
out
cmp
push
(bad)
into
(bad)
pop
out
js
test
aaa
mov
mov
push
aas
fdiv
pushf
push
cwde
fcomp
jp
das
or
jo
or
jns
and
dec
test
mov
(bad)
es
fild
push
add
cmp
(bad)
mov
adc
adc
cmp
adc
and
mov
dec
push
ror
sbb
mov
adc
fidivr
sbb
stc
push
retf
adc
out
icebp
xchg
outs
loopne
out
pop
test
shl
and
push
push
int
call
push
sti
and
out
or
jnp
and
arpl
jecxz
cmp
repnz
adc
outs
mov
pop
mov
mov
enter
jmp
fldenv
call
aam
js
(bad)
xchg
jl
pop
in
mov
jl
int
adc
mov
iret
mov
cmp
arpl
mov
cmp
repz
add
or
repz
xor
sbb
idiv
inc
and
jmp
push
clc
and
cmp
idiv
ss
mov
adc
jae
sbb
push
test
lods
in
ja
push
pop
mov
cld
pop
enter
add
ss
rcl
xchg
aaa
pop
fwait
out
loope
ja
and
shl
push
out
daa
call
test
inc
xchg
cmp
pop
(bad)
or
ds
mov
jno
popa
jmp
outs
cs
stos
jnp
and
in
outs
push
sbb
out
jns
data16
cmps
push
cmp
jns
xchg
ins
xchg
cmp
pop
outs
mov
ins
iret
mov
push
bound
or
jae
in
pop
out
pop
jp
add
lds
push
das
jns
outs
mov
aas
sub
sbb
es
inc
ins
repz
es
cmps
push
add
mov
push
mov
or
enter
mov
addr16
cmp
mov
xchg
push
dec
int3
and
jns
adc
lahf
mov
push
sub
(bad)
test
loope
xchg
sub
pcmpeqd
enter
jbe
dec
push
mov
or
outs
or
push
add
mov
ja
or
xchg
inc
push
js
push
push
push
(bad)
xchg
push
push
test
mov
or
je
shl
stc
mov
xor
xchg
push
lahf
inc
test
aaa
sbb
aaa
jnp
aas
mov
mov
or
fs
xor
(bad)
jne
pushw
test
pop
fcmovu
push
push
imul
push
imul
adc
pop
inc
sti
inc
popa
test
and
push
jmp
cmps
cs
gs
and
mov
push
xor
(bad)
fstp
sub
clc
sub
ins
push
and
call
fs
lock
pop
or
push
(bad)
jmp
aam
ins
inc
jne
mov
xchg
add
push
jns
mov
enter
inc
out
inc
rol
pusha
ins
push
mov
and
or
or
adc
stos
pusha
push
xchg
xchg
sbb
push
inc
fmul
mov
pop
or
or
fwait
and
or
(bad)
pop
or
dec
xor
inc
mov
dec
ja
outs
outs
xchg
mov
rcr
rol
xchg
or
clc
push
pop
adc
or
test
jg
jo
adc
iret
outs
test
imul
repz
mov
je
imul
jae
cmp
leave
inc
lahf
test
shl
or
inc
ins
hlt
add
xor
loop
push
rol
sar
je
pop
dec
mov
mov
jae
mov
bound
lahf
mov
popf
jnp
pop
or
arpl
xchg
cmp
loop
into
push
loopne
sbb
lods
ins
jmp
xchg
mov
iret
sbb
mov
sbb
or
inc
push
jnp
pop
retf
sbb
dec
jbe
mov
mov
pop
mov
jb
sub
mov
sbb
inc
mov
push
and
or
and
inc
adc
mov
jmp
push
push
and
push
push
ret
push
loop
neg
dec
and
push
rol
lods
cmc
jbe
call
inc
je
in
add
leave
cmp
push
sbb
sbb
cmp
sahf
ror
inc
jnp
push
fcmovnb
pop
sbb
push
dec
and
(bad)
inc
push
daa
cmpps
inc
test
sub
mov
sahf
xchg
xchg
lahf
jnp
sub
mov
retf
pop
jp
mov
data16
rol
in
sub
in
scas
sub
xchg
aam
repz
mov
pop
es
jle
mov
pop
sbb
es
out
add
mov
add
push
dec
data16
cmp
cmp
dec
xor
dec
pop
push
shl
inc
ret
rol
push
ficom
ret
ds
push
arpl
add
push
or
es
test
mov
out
ins
jbe
ss
repz
pop
mov
pmullw
pusha
jnp
and
push
cmp
movs
xchg
ins
fwait
out
ucomiss
add
bswap
cmp
push
shl
rcr
ror
push
jecxz
adc
ss
push
aad
loopne
push
mov
cmps
fcmovnu
sar
leave
inc
adc
rdmsr
nop
cmps
(bad)
or
and
ret
push
ja
push
sti
jmp
inc
das
daa
push
and
or
jbe
sub
or
cmp
fld
mov
es
fs
rcr
imul
inc
stc
push
inc
mov
pop
es
aas
mov
xchg
data16
inc
mov
xchg
fstp
xlat
or
xchg
sub
jo
fwait
mov
pop
pop
cli
or
pop
aam
push
ds
jae
(bad)
mov
dec
int3
mov
ins
lds
(bad)
jle
push
les
iret
add
popa
cmps
push
or
das
gs
sub
fisub
cs
mov
push
ds
stc
xlat
add
shl
sub
out
shl
cs
ja
rcl
cwde
enter
mov
sbb
lahf
jnp
sbb
cwde
es
push
sar
minps
pop
and
mov
or
sbb
test
ja
(bad)
push
fld
(bad)
sbb
add
sub
das
adc
pop
es
inc
add
push
cli
in
pop
mov
and
add
out
inc
outs
add
out
push
push
in
pop
and
lods
or
int3
jmp
loopne
add
or
sub
dec
stos
cmp
hlt
pop
pop
jo
cmpxchg
(bad)
or
sub
sti
jb
(bad)
iret
jl
pop
adc
adc
pop
inc
cmps
add
data16
mov
push
add
adc
cmp
and
adc
or
leave
xor
(bad)
sahf
adc
jmp
xchg
and
and
jns
enter
leave
xor
and
and
push
push
cmp
sbb
mov
les
cld
mov
aad
xchg
cld
dec
ds
inc
sbb
shr
sbb
xor
or
fmul
mov
scas
test
dec
add
jl
call
std
aas
mov
mov
test
test
test
mov
push
push
bound
pop
lods
adc
push
inc
inc
sub
daa
(bad)
push
mov
aas
movs
fisub
mov
xchg
push
push
add
ss
add
mov
push
push
push
inc
(bad)
shl
pop
cmps
rcr
and
cmps
pop
ret
paddsw
inc
dec
pop
das
dec
sub
push
xlat
push
adc
daa
push
es
sbb
jo
jo
cmp
(bad)
and
pop
pop
xchg
xchg
and
mov
and
jmp
ret
enter
push
or
and
cmps
rcr
adc
movs
add
cs
and
daa
aas
inc
(bad)
fldcw
or
out
push
mov
sub
cld
data16
mov
aas
stos
imul
pop
jns
push
ins
ss
int
xor
xchg
mov
ss
cmps
fsubr
lds
repz
pop
out
cmps
xor
(bad)
in
rol
lods
pop
inc
js
shr
cs
stos
out
pop
pop
(bad)
and
seto
and
adc
ja
jns
das
popf
xor
test
adc
ja
cmp
ja
add
xchg
add
adc
ins
lahf
lea
mov
push
adc
ret
push
mov
jns
dec
jbe
xchg
sbb
arpl
add
add
pushf
repnz
pop
add
or
xchg
dec
das
mov
aas
and
pop
and
call
pop
mov
jle
mov
and
nop
das
or
mov
adc
mov
xchg
or
or
repz
push
adc
sahf
in
push
arpl
mov
cs
data16
ins
jns
jle
mov
mov
shr
dec
ds
mov
enter
fcomp
aas
inc
mov
add
dec
(bad)
in
push
loopne
iret
out
ins
out
xchg
or
test
(bad)
(bad)
fld
dec
push
add
(bad)
nop
pop
xchg
cmp
aam
dec
pop
adc
dec
(bad)
mov
push
(bad)
dec
loopne
les
add
(bad)
or
jae
jle
sar
cmp
lds
mov
fisubr
push
dec
das
mov
push
aad
xlat
pop
in
in
dec
into
out
leave
(bad)
sar
fisubr
or
and
data16
xchg
aad
scas
(bad)
fcmovne
or
push
ja
sbb
sbb
cmp
push
aas
or
jmp
jge
jl
out
sbb
call
cmova
inc
pop
lods
cmps
inc
and
shl
rol
add
rcr
stc
add
sub
mov
mov
pop
dec
cmp
push
jp
movs
adc
je
dec
pop
leave
push
add
ja
xchg
cmps
inc
jae
movs
movs
push
aaa
ss
std
retf
mov
add
lods
pop
push
nop
jbe
mov
out
imul
es
std
adc
add
imul
pop
push
das
es
inc
jns
jmp
ror
repnz
aam
loop
popa
bound
jns
jg
mov
imul
enter
xchg
and
inc
add
js
int
repnz
cmps
into
movs
stc
dec
cs
out
fst
nop
inc
nop
sbb
fcomp
push
fdivrp
cdq
outs
ror
or
or
inc
xchg
sub
mov
adc
push
in
and
jo
or
and
adc
add
or
fwait
adc
add
push
add
mov
and
nop
cld
add
or
add
jle
mov
adc
or
sbb
loop
sub
push
add
sub
jno
fld
sbb
add
xchg
xor
fnstcw
fst
(bad)
ds
dec
adc
mov
inc
clc
xor
push
or
adc
adc
cmp
cli
inc
loop
cmp
arpl
imul
sub
or
push
push
xchg
cwde
jmp
std
push
push
gs
push
push
popa
jo
cwde
adc
xchg
mov
ja
ds
(bad)
cmp
dec
nop
xor
sbb
push
movs
add
add
sbb
add
jge
aad
leave
and
push
dec
adc
rcl
fild
pmulhuw
mov
test
or
rcr
push
dec
pop
or
dec
mov
ret
dec
adc
xor
cs
movs
mov
push
neg
add
fisttp
scas
mov
lods
test
or
adc
das
shl
push
xor
neg
sub
pop
push
cwde
arpl
idiv
gs
sub
(bad)
mov
jge
cmps
mov
and
push
xor
out
xor
cs
outs
and
cmp
pop
out
sbb
xchg
inc
and
sub
push
push
xor
push
inc
push
(bad)
sysret
inc
inc
outs
arpl
jg
push
ror
pop
mov
mov
push
clc
push
cmp
out
es
leave
and
dec
out
or
mov
lock
jl
or
inc
push
add
inc
enter
jecxz
es
nop
pop
inc
cmp
or
sub
and
push
add
fwait
in
pop
pop
adc
dec
push
jmp
mov
fld
repnz
scas
sub
cmps
imul
sub
lahf
into
loop
mov
add
push
ja
rol
das
inc
sub
mov
into
daa
and
mov
xchg
mov
test
sub
adc
(bad)
sbb
jae
sahf
inc
jle
das
cmp
and
dec
das
pop
add
add
and
xor
sbb
and
iret
aad
fiadd
push
sub
popa
add
and
mov
mov
adc
popf
stos
movs
neg
add
ret
pushf
jmp
sub
and
in
sub
gs
or
sub
sub
test
xor
sub
fs
inc
jo
nop
adc
sub
pushf
inc
dec
and
sbb
push
xor
sub
add
loopne
cmp
daa
nop
adc
loopne
cmp
daa
nop
adc
sub
shr
(bad)
call
sub
push
loopne
xchg
dec
lods
and
addr16
test
mov
stos
sbb
das
xchg
jb
cmp
push
mov
cmp
and
push
sbb
cmp
xchg
jl
das
inc
mov
test
dec
adc
in
xchg
repz
aaa
loope
inc
(bad)
(bad)
lea
sbb
adc
pmaxsw
inc
pusha
pop
rol
jnp
int
dec
(bad)
push
lods
inc
xchg
int3
xor
addr16
jb
(bad)
jne
push
scas
mov
ds
(bad)
stos
mov
sub
xlat
popf
pop
inc
dec
test
sbb
push
jmp
adc
sub
or
dec
and
aas
rol
test
inc
outs
inc
cs
cmp
scas
inc
adc
enter
cs
clc
and
nop
pop
cmp
popf
cmp
inc
lds
nop
adc
je
xchg
cmp
inc
sub
es
outs
sbb
into
xor
jb
or
pop
cmp
push
rol
add
lds
add
outs
outs
inc
loope
cmp
in
inc
mov
nop
pop
inc
mov
dec
push
inc
mov
inc
sahf
xor
inc
test
(bad)
(bad)
mov
or
push
jo
xchg
xor
xchg
and
sbb
adc
dec
pop
rol
and
jle
les
lods
jo
push
nop
imul
leave
aas
inc
push
push
lahf
pop
or
or
out
add
push
in
pop
mov
inc
push
adc
pop
adc
pusha
mov
push
stos
nop
pop
(bad)
sti
jmp
push
push
mov
or
(bad)
mov
mov
pop
jb
push
stc
and
mov
repnz
and
push
addr16
lahf
or
xlat
ds
and
sub
push
pop
aas
pop
sub
cmp
fs
add
aas
popa
sub
adc
and
pop
add
nop
cmps
pop
jmp
and
sub
(bad)
leave
aas
arpl
cmp
push
arpl
add
aad
cli
add
pop
aas
bound
add
inc
and
nop
pop
pop
xor
in
add
pop
rcl
pop
ror
xorps
sar
fcomp
pop
sbb
cmp
push
and
and
add
mov
add
aas
pop
xor
adc
mov
fwait
add
mov
inc
push
aaa
ret
adc
test
push
jae
or
das
bound
inc
mov
int
push
fiadd
fild
sub
push
xchg
stos
and
add
xchg
test
lahf
inc
lahf
xchg
out
sti
fimul
dec
(bad)
push
xor
xchg
pop
adc
mov
jecxz
pop
sar
xlat
push
imul
pop
repnz
lods
xchg
mov
or
xchg
xchg
mov
dec
mov
mov
inc
imul
fild
movs
inc
addr16
std
push
mov
sahf
fldenv
fldcw
lahf
xor
add
aaa
mov
dec
mov
pop
inc
xchg
push
xchg
mov
xchg
mov
push
pop
(bad)
jo
xor
push
push
or
mov
or
ja
bound
idiv
pop
push
dec
mov
addr16
cld
shl
cmps
xchg
(bad)
adc
xchg
imul
mov
ins
ss
ins
push
xchg
mov
fcomi
ins
mov
es
pop
xlat
iret
mov
push
mov
neg
jnp
mov
stc
jle
xchg
sahf
ja
(bad)
push
jbe
push
imul
and
repz
push
addr16
sub
xchg
push
push
icebp
das
jae
cmp
(bad)
repz
ins
ss
in
pop
loop
xchg
mov
mov
addr16
cmps
les
mov
(bad)
inc
data16
or
mov
push
shl
fld
outs
xor
or
imul
sahf
push
(bad)
mov
push
repz
add
sbb
inc
int
jge
scas
(bad)
sahf
je
push
lock
pop
jns
fldcw
pop
jne
jbe
inc
femms
ss
(bad)
(bad)
test
inc
pop
ja
iret
data16
pop
sub
rcl
fimul
sahf
and
sub
xchg
pop
push
xor
push
sahf
div
xchg
(bad)
aad
cmps
or
out
jle
sbb
popa
out
dec
xchg
sub
neg
jae
sbb
xchg
rcr
cdq
cmp
push
call
push
in
outs
stos
fsub
lock
int
pop
push
retf
dec
jge
cmp
pop
sar
sbb
inc
(bad)
sub
jg
mov
out
jg
push
mov
mov
dec
fwait
imul
cmp
mov
xor
jg
inc
push
cmps
add
mov
jmp
pop
ffreep
push
mov
push
xchg
inc
lock
les
call
dec
inc
jne
mov
aam
daa
push
popa
pop
sub
jge
ror
and
and
dec
jg
sahf
ins
adc
push
sub
lods
cmp
inc
push
(bad)
rcr
outs
jnp
push
arpl
or
xchg
adc
dec
iret
jne
xchg
push
stos
push
inc
jbe
scas
pop
mov
push
loopne
add
neg
test
inc
imul
arpl
adc
jnp
jp
lea
and
mov
out
fmul
or
test
aam
call
scas
or
outs
gs
push
in
push
les
mov
jecxz
mov
cmp
sub
push
or
leave
add
enter
or
loop
sub
cld
mov
adc
repz
or
or
add
imul
push
or
xor
cld
cmp
(bad)
or
xchg
adc
ins
fidiv
push
stos
in
rcr
xchg
out
ins
pop
fwait
mov
ss
popa
push
and
iret
outs
mov
push
sbb
or
mov
dec
and
xchg
adc
pop
or
fwait
stos
sub
sub
imul
ss
or
outs
sbb
pusha
push
or
data16
pop
hlt
push
clc
inc
cmc
inc
push
mov
xor
es
and
or
pop
or
call
pop
cmc
add
sub
iret
xchg
imul
dec
push
add
(bad)
popa
adc
into
mov
rol
pop
scas
cli
sbb
push
mov
es
outs
(bad)
cmc
push
jecxz
outs
(bad)
or
loopne
push
out
call
push
sub
push
add
cs
ss
add
mul
mov
pop
adc
call
xor
cs
pusha
pop
xor
cs
das
jge
push
cmp
daa
lods
in
iretw
or
add
das
sbb
sub
das
scas
pop
mov
pop
fidivr
repz
mov
ret
mov
pop
fisubr
pop
fisttp
push
jmp
hlt
stos
inc
seto
repz
das
inc
cmpxchg
stc
ins
das
adc
mov
iret
inc
cwde
dec
pop
sbb
mov
inc
adc
pushf
test
or
movs
sti
ins
mov
cmps
inc
cmps
sbb
inc
jle
dec
movs
test
sbb
jne
pop
sub
mov
aas
lock
pop
xchg
or
dec
mov
repnz
jle
rcr
push
jns
jge
rcl
in
dec
adc
fcmovnu
push
jg
cmp
jge
push
test
adc
fldcw
push
scas
int
mov
loopne
jg
inc
inc
inc
js
fldcw
sub
outs
inc
pop
jle
fwait
int
mov
jmp
inc
jne
push
ja
test
addr16
and
fs
fisub
inc
cmp
adc
xchg
je
ja
lods
xchg
push
adc
pusha
mov
and
hlt
or
jg
push
xchg
pop
xchg
cmp
imul
xchg
push
sar
mov
lahf
dec
outs
imul
inc
jmp
rcr
call
popf
add
test
push
xchg
fcompp
sub
pop
and
aas
xchg
pushf
push
fnsave
jb
clc
push
sbb
lods
pop
sub
test
gs
jns
sbb
adc
or
in
aam
jl
push
test
push
or
fidivr
push
bound
lock
or
sbb
pop
dec
sbb
xchg
xchg
shl
call
gs
outs
pop
cmp
repnz
or
test
sbb
inc
iret
data16
push
cmp
cmp
xor
lds
ds
pop
das
and
pop
cs
fisttp
jo
ret
cs
jne
mov
ds
das
mov
dec
loopne
inc
adc
adc
or
mov
and
pop
sub
ret
pop
(bad)
cmp
retf
ror
js
ins
push
mov
ret
add
pop
sub
seto
mov
in
xor
xor
adc
or
pop
mov
jg
loopne
add
mov
or
jle
ds
push
lsl
lods
mov
gs
in
test
mov
outs
add
add
add
mov
jns
not
pop
das
pop
add
or
sub
pop
push
out
popa
pop
jns
mov
mov
add
fisttp
das
je
sbb
(bad)
xchg
das
clc
loope
jns
mov
shl
or
mov
das
iret
cmps
loope
push
loop
test
outs
cmp
mov
xor
xor
sub
(bad)
js
inc
sbb
inc
push
pop
cmp
xlat
xchg
and
add
mov
fist
mov
ja
lahf
je
jb
jae
xchg
in
push
pop
mov
loopne
push
ficom
sti
js
xor
retf
xchg
and
out
popa
fstp
and
ins
mov
adc
scas
(bad)
pop
jo
inc
(bad)
ins
cs
sbb
push
outs
mov
push
push
xor
push
lods
xchg
daa
outs
sub
push
inc
outs
mov
jns
retf
inc
in
sbb
xor
(bad)
fwait
popa
xor
lock
add
jae
or
test
es
adc
into
mov
sub
aas
arpl
add
push
xor
aas
pop
ret
push
and
rol
inc
mov
and
inc
cmp
icebp
push
cmp
fcmovnu
push
cld
fsub
ins
sahf
addr16
ficom
sub
dec
mov
push
fistp
outs
fbld
test
push
push
fisttp
js
mov
loopne
fadd
inc
lods
and
daa
dec
inc
mov
nop
sahf
ja
(bad)
cs
push
add
xchg
push
mov
jns
sub
dec
jl
or
jb
fcom
add
lahf
icebp
push
out
test
jns
cmp
out
inc
add
fs
pop
add
add
xchg
inc
call
sbb
adc
xor
cmps
mov
data16
mov
aad
aam
inc
mov
xor
pusha
and
std
(bad)
(bad)
(bad)
mov
dec
scas
movs
scas
fs
sar
out
push
jne
pushf
mov
xor
cmp
stos
mov
stc
xor
adc
das
es
popa
jbe
jns
pop
sub
cmps
or
out
fwait
out
out
jae
push
mov
jmp
cdq
pop
fwait
xor
jecxz
iret
out
push
jns
(bad)
imul
mov
adc
dec
fidivr
xchg
(bad)
adc
das
pop
out
(bad)
mov
push
clc
inc
jle
pushf
inc
test
in
pop
adc
push
ins
add
icebp
call
out
inc
mov
ret
jnp
jg
shr
data16
je
push
mov
add
add
mov
test
scas
shr
pop
add
sub
add
in
add
and
(bad)
aam
pushf
adc
cmc
lahf
push
pop
push
cmps
add
cld
test
xlat
jl
hlt
inc
xor
mov
or
push
or
inc
pop
pushf
les
push
jecxz
iret
or
clc
push
jg
adc
push
xor
or
sbb
adc
mov
xor
and
inc
cmp
jmp
inc
or
mov
sbb
fcmovnb
lods
jbe
cmps
push
daa
add
mov
and
push
mov
push
lock
adc
cmps
out
bound
sbb
adc
fs
pop
ins
mov
ja
movs
sub
mov
mov
cmp
push
cmps
popf
dec
outs
mov
inc
pusha
cs
outs
jb
push
outs
dec
aas
push
sahf
ins
jae
or
or
cmp
ins
ins
iret
cmp
jmp
call
cmp
mov
sysexit
sbb
push
enter
sbb
adc
(bad)
jbe
adc
mov
fisttp
push
adc
lfs
fistp
mov
mov
stc
ins
mov
popw
repz
and
and
sbb
(bad)
jmp
cli
mov
push
sti
pushw
imul
scas
out
mov
shl
jp
jg
pop
or
mov
js
sti
dec
fwait
movs
push
mov
loop
mov
out
mov
rol
jg
sbb
pop
neg
add
sbb
pop
retf
dec
mov
leave
cdq
(bad)
cmp
dec
sub
cwde
inc
jle
aas
push
sbb
(bad)
ret
daa
loop
mov
les
inc
sub
dec
inc
das
dec
dec
inc
add
mov
adc
cmp
ins
and
inc
aaa
sbb
push
push
iret
pop
adc
ss
out
dec
es
out
inc
jmp
data16
ja
inc
es
or
loope
or
pop
push
cmp
and
inc
mov
fimul
mov
jns
(bad)
pop
push
mov
adc
mov
inc
es
arpl
jbe
push
push
les
cmp
test
push
mov
not
dec
add
inc
pop
lock
outs
mov
iret
cli
inc
cwde
pop
cmp
mov
dec
push
jmp
scas
fcmovnbe
sbb
inc
bound
mov
inc
fiadd
inc
bound
out
push
push
xchg
jecxz
dec
movs
and
mov
jle
inc
push
das
push
js
rcl
ja
daa
cmp
inc
and
outs
pop
lock
pop
movsx
jae
mov
(bad)
in
jp
push
adc
(bad)
push
sahf
dec
push
fiadd
push
push
and
push
cwde
push
jne
sahf
dec
sub
pop
xor
test
push
fcomp
lods
and
mov
ss
ss
(bad)
fidivr
cmp
jmp
lahf
cmp
cmp
xchg
xlat
push
xor
push
test
loope
in
pop
sar
out
es
loopne
dec
add
jmp
outs
icebp
inc
(bad)
push
sub
mov
test
aas
fstp
add
or
shr
sub
cmp
aas
push
jecxz
fisubr
jg
mov
sub
sub
fwait
inc
and
mov
nop
xchg
xchg
xchg
in
xor
fcom
and
add
or
add
mov
push
xchg
daa
adc
(bad)
ja
je
test
dec
and
or
push
xor
push
sbb
xor
jnp
iret
test
push
das
shr
mov
push
ins
fmulp
push
repnz
lahf
inc
ret
mov
movs
sub
ds
cmc
fmul
(bad)
vmread
stc
push
push
cmp
pop
lea
mov
pop
jmp
ins
cs
xchg
daa
dec
in
mov
cs
xor
or
daa
cwde
or
inc
mov
or
pop
inc
mov
lods
pop
jo
push
not
add
outs
mov
or
daa
inc
pusha
mov
pop
clc
adc
mov
out
sbb
and
ret
mov
(bad)
(bad)
outs
das
and
std
fwait
xchg
retf
push
dec
xchg
pop
dec
sub
fwait
inc
push
jo
int3
das
inc
cwde
push
inc
cwde
mov
push
enter
xchg
mov
adc
rcr
in
push
inc
aam
in
xchg
jg
dec
mov
repnz
sub
jnp
repnz
xor
push
push
aas
(bad)
dec
and
mov
pop
adc
cmp
call
inc
mov
sbb
nop
add
sub
and
inc
sti
das
in
push
inc
add
ds
je
ss
mov
mov
adc
jo
add
cmp
jb
jns
jb
movs
test
and
imul
and
sti
nop
in
sti
lods
das
cwde
mov
inc
mov
dec
mov
push
push
pop
and
jmp
inc
push
adc
push
adc
mov
aam
push
push
movs
add
jnp
and
vcvttsd2si
add
fwait
add
fisttp
popa
or
outs
pop
retf
xor
mov
sub
lods
add
cs
aas
push
daa
jae
inc
inc
adc
inc
xchg
in
idiv
mov
jg
pop
mov
sbb
and
sub
jg
mov
push
iret
mov
inc
push
xor
mov
rsqrtps
scas
(bad)
add
push
push
dec
idiv
ja
(bad)
jl
out
push
push
cmp
xchg
push
and
inc
out
movs
int
jo
mov
repnz
push
push
push
(bad)
nop
mov
fstp
xchg
or
mov
(bad)
int
jo
call
(bad)
rcr
ins
jg
and
mov
push
xchg
jno
jle
sub
xchg
shl
fld
xchg
stos
outs
push
jmp
sti
adc
dec
out
sbb
sub
inc
lea
fmul
push
(bad)
fist
iret
and
pop
add
push
jo
ror
push
pop
add
add
and
and
lea
pop
addr16
scas
invd
cmc
add
imul
mov
das
push
pop
jg
shr
push
stos
adc
jne
test
nop
add
retf
jge
movd
push
fild
mov
add
fs
cmp
enter
push
jmp
cmp
push
das
pop
jge
sar
(bad)
ja
das
mov
jae
mov
mov
std
add
pusha
or
aam
dec
aas
push
pushf
pop
push
jle
push
push
pop
cmp
imul
add
popa
or
icebp
xchg
push
add
mov
and
push
sub
aas
pop
arpl
lds
fmul
data16
adc
mov
movs
inc
mov
(bad)
ror
ja
add
jge
scas
les
aam
pop
inc
mov
je
push
mov
push
mov
add
push
cmps
repnz
hlt
and
add
wbinvd
sbb
clc
out
movups
add
mov
jle
fldcw
lods
mov
lock
push
pop
shl
add
push
mov
xchg
int
ror
(bad)
pop
fbld
inc
dec
jne
jae
or
movs
or
call
push
ror
add
mul
test
jmp
fsubr
dec
shl
loope
sub
push
sbb
cs
or
movs
pop
mov
das
fbld
or
test
mov
mov
gs
ds
sbb
in
jmp
pusha
into
clc
push
lods
repnz
xchg
and
je
adc
femms
popa
sub
fs
push
call
ret
pop
ror
push
imul
ins
out
outs
sbb
in
adc
jno
icebp
sub
jo
or
adc
dec
test
(bad)
ror
dec
dec
xor
pushf
adc
add
stos
rol
mov
add
jo
seto
mov
pop
jl
jl
das
mov
or
mov
scas
scas
xchg
fld
bound
and
popa
(bad)
or
scas
cmps
scas
mov
fmulp
cmp
xchg
inc
iret
in
int
popa
leave
add
push
retf
retf
sbb
and
dec
pop
lahf
mov
fisub
loop
inc
retf
ins
mov
jge
xchg
mov
and
and
inc
js
sets
retf
adc
int3
dec
nop
adc
jns
xchg
sub
rcr
fsubr
in
nop
xlat
push
fcomp
push
sar
rcl
shr
mov
ins
test
not
add
mov
cmps
xchg
jbe
repz
in
cli
jg
add
jg
inc
and
scas
imul
mov
into
push
sbb
pop
(bad)
imul
movs
pop
fdiv
test
sar
xchg
jo
popa
arpl
xchg
sbb
imul
mov
pop
mov
repnz
jmp
add
jnp
shr
add
dec
sub
or
xchg
(bad)
js
int3
ret
lahf
fiadd
add
add
hlt
add
push
mov
pop
enter
cs
add
daa
cwde
push
enter
in
dec
or
and
sbb
and
xchg
rcr
addr16
mov
adc
call
inc
out
and
das
hlt
mov
(bad)
lods
jmp
push
jmp
lock
popf
inc
mov
mov
movs
sub
mov
mov
mov
das
dec
js
ins
and
and
sar
(bad)
(bad)
ins
nop
push
lahf
rcl
mov
push
(bad)
into
lahf
mov
je
push
sbb
inc
shl
add
adc
cld
add
add
adc
inc
push
jo
in
aaa
pop
repz
test
pop
sbb
jno
mov
dec
out
movs
js
push
add
push
cmps
cs
push
out
in
sub
or
xor
sub
pop
(bad)
sbb
outs
dec
mov
test
test
stos
cmp
and
(bad)
inc
imul
ror
adc
mov
or
and
push
push
adc
jns
out
jmp
pop
jbe
jns
pop
lidtd
das
jle
cmp
ds
add
(bad)
aad
(bad)
or
lock
mov
mov
push
sahf
or
clts
sub
jg
add
scas
push
jle
pop
in
dec
loopne
aad
syscall
(bad)
mov
in
add
push
lock
jne
pop
pop
imul
jae
(bad)
fwait
cmp
add
stos
jno
js
jmp
aaa
(bad)
dec
dec
sbb
dec
pop
mov
shl
sbb
dec
push
push
jo
pop
sub
das
sbb
push
push
mov
out
sbb
nop
fld
cs
popa
and
and
movmskps
mov
pshufw
pusha
dec
and
add
arpl
jp
dec
and
daa
mov
xor
sbb
pop
inc
xor
cld
sbb
add
dec
ja
push
and
fadd
xchg
sbb
sub
fdiv
dec
jo
sub
xor
ja
or
or
addr16
test
jbe
movs
add
xor
sbb
out
cmp
arpl
adc
mov
rdmsr
mov
or
mov
adc
rdtsc
std
cmp
pop
or
xor
inc
(bad)
imul
xchg
mov
nop
scas
inc
ret
mov
pop
pminub
add
fmul
cld
ffree
ja
ja
mov
inc
xor
xchg
repnz
add
(bad)
mov
push
btr
out
fidiv
xor
cmp
sbb
lds
mov
fucomi
aas
das
add
leave
in
in
in
cmp
cmovs
enter
shr
xor
mov
mov
push
dec
call
adc
sar
or
xlat
pop
enter
xchg
ja
inc
mov
sar
sar
mov
and
das
push
add
retf
std
scas
inc
loope
test
scas
cmps
adc
scas
dec
ret
cmps
cmps
pusha
push
rcr
fwait
mov
cmps
mov
ficom
cs
int
mov
pop
push
test
inc
test
cmps
loop
das
add
aaa
popf
movs
xor
mov
data16
sti
and
(bad)
dec
das
scas
daa
icebp
test
mov
arpl
ins
adc
lahf
push
and
repz
push
cmp
dec
jno
(bad)
jmp
push
sahf
jb
(bad)
leave
mov
dec
jle
cmp
dec
push
and
jnp
or
dec
pop
(bad)
aaa
adc
nop
adc
push
es
(bad)
dec
es
xlat
push
loopne
adc
loopne
push
add
(bad)
adc
or
add
xlat
inc
in
dec
push
btc
pmaxub
sub
push
pop
adc
adc
cmps
inc
outs
sub
in
ret
sub
(bad)
jl
sbb
call
xor
add
mov
cmp
xor
ror
imul
shl
pop
sbb
adc
xchg
pop
das
sub
push
jae
lock
sub
xchg
push
xlat
popa
lahf
sahf
mov
dec
lahf
retf
rol
adc
fs
scas
fnstsw
sbb
push
je
dec
test
and
dec
add
add
pop
mov
(bad)
das
sbb
push
xlat
loop
lods
xor
pop
jae
lock
xchg
inc
xor
adc
add
jmp
pmaxsw
in
dec
out
psubd
inc
sub
ficomp
(bad)
psadbw
and
aas
int
jge
pop
cmp
mov
xor
inc
sahf
jle
hlt
adc
jns
jl
stos
jns
and
and
out
bound
xor
xor
js
jp
inc
push
repnz
xchg
in
test
xchg
xchg
jmp
pop
inc
sub
iret
movs
aas
sbb
mov
outs
sti
or
adc
sub
idiv
sub
pop
cmp
or
jl
or
std
sbb
add
pop
push
push
inc
iret
adc
adc
push
inc
ins
push
mov
adc
mov
aam
idiv
jmp
sub
pop
test
adc
or
add
add
sub
outs
cmp
test
pop
(bad)
and
mov
add
mov
cwde
or
or
stos
mov
sbb
and
arpl
inc
mov
adc
bound
js
push
mov
daa
inc
cmps
test
pop
and
add
nop
xchg
ss
outs
or
and
adc
add
adc
inc
nop
and
das
cmps
(bad)
ins
push
(bad)
adc
sbb
push
mov
adc
push
add
daa
inc
xchg
(bad)
out
adc
sbb
jns
or
adc
cmp
adc
jb
and
cmp
sbb
repnz
xor
adc
add
sub
adc
imul
mov
call
sub
and
ret
cmp
jnp
not
outs
adc
outs
outs
jno
es
push
add
fisub
scas
xor
cs
mov
sbb
push
push
and
jbe
aas
mov
hlt
sub
cmp
mov
dec
adc
xchg
and
or
inc
xchg
dec
inc
(bad)
xlat
inc
add
mov
pop
cs
jmp
add
cmps
out
cmc
xchg
cld
xlat
das
adc
add
pop
inc
aas
jp
or
iret
inc
cmp
dec
les
ds
lods
dec
add
aad
jg
pop
stos
or
cwde
outs
pop
jns
std
mov
out
add
dec
fstp
out
sbb
dec
out
mov
adc
push
mov
std
push
mov
bound
pop
aas
aam
inc
fwait
add
jae
sub
frstpm(287
into
cmps
adc
stos
mov
adc
mov
outs
pop
sub
inc
dec
inc
data16
jmp
dec
dec
jnp
pusha
add
push
dec
and
or
imul
jae
outs
dec
loop
outs
ja
sbb
mov
pop
ror
fwait
int
(bad)
xlat
call
movs
sbb
fldcw
sub
bound
iret
idiv
cmps
adc
mov
adc
test
and
pop
and
imul
jl
add
shl
fdiv
mov
jg
adc
and
scas
(bad)
add
pusha
mov
jg
out
inc
xor
leave
add
jg
shr
adc
int
rol
ins
ss
push
movs
ds
jg
add
dec
iret
ret
mov
int
lds
(bad)
sbb
mov
or
leave
aam
inc
jo
lods
aad
inc
mov
inc
mov
out
lds
pop
out
jg
add
pop
cs
fcom
(bad)
cmp
popa
bound
stc
aad
hlt
outs
inc
xor
sub
push
sub
inc
ss
sub
lahf
mov
jmp
or
sahf
stos
rcl
lods
or
cmp
and
mov
inc
rol
adc
push
in
stc
xchg
sti
in
adc
adc
fld
adc
jp
fiadd
ins
mov
adc
es
fadd
mov
ins
mov
push
fld
aaa
push
push
pop
push
fs
fld
cmp
xchg
fisubr
push
out
ins
ss
mov
push
jnp
bound
pop
pop
cmp
pop
nop
sub
ss
in
push
fild
push
inc
xor
xor
fs
ss
out
cmp
mov
ds
sbb
ds
pop
ins
iret
jg
div
test
add
aam
or
mov
inc
xor
pop
in
neg
inc
mov
cmp
adc
mov
stc
out
mov
push
pop
jecxz
xor
add
adc
push
out
mov
xchg
push
inc
movs
inc
push
(bad)
jnp
mov
adc
push
sbb
sub
fidivr
push
inc
push
xor
dec
jmp
add
pop
xchg
fld
pop
scas
push
xor
add
or
ja
fwait
js
mul
shl
push
pop
add
out
shl
push
jnp
xchg
pop
mov
add
push
test
add
adc
dec
stos
inc
js
add
(bad)
test
lahf
adc
and
pop
xor
pop
(bad)
fdivr
les
and
aas
adc
nop
popf
pop
xchg
(bad)
mov
add
sbb
clc
cs
loope
sbb
or
movs
pop
fdivr
pop
pop
cli
rol
lock
scas
out
push
seto
stos
aas
cs
stc
inc
in
xor
lahf
adc
push
adc
das
mov
and
inc
add
nop
inc
pop
mov
mov
ja
inc
(bad)
sbb
inc
ins
push
lahf
push
mov
adc
push
(bad)
pop
or
inc
lods
and
dec
ldmxcsr
arpl
pop
push
push
outs
inc
fistp
ins
dec
inc
dec
xchg
dec
and
xchg
loope
nop
je
pop
daa
pusha
pusha
shl
lods
movs
push
and
push
and
pop
daa
lock
ins
es
iret
push
xchg
das
jbe
cmps
test
sbb
lahf
shl
iret
daa
xor
adc
lods
pop
and
dec
sbb
add
lods
clc
dec
adc
ss
cmp
push
test
out
mov
sub
inc
pop
push
test
fdiv
stos
jno
lods
mov
add
aam
mov
rcr
and
push
loope
push
sub
add
fmulp
add
popa
test
mov
adc
sahf
js
add
aam
push
xor
pusha
inc
push
lahf
aas
lods
inc
jnp
lahf
pop
push
aad
jo
sub
lahf
outs
or
mov
lahf
push
xor
pushf
lock
push
mov
xchg
scas
sahf
or
int
inc
or
fcomp
sub
in
add
dec
mov
enter
add
add
xchg
cmp
test
call
dec
out
adc
dec
xchg
add
lds
inc
popa
adc
aam
sub
scas
mov
xchg
in
and
add
scas
xor
adc
mov
add
addr16
bound
inc
push
dec
push
sbb
test
mov
retf
jo
or
lock
mov
scas
push
gs
scas
adc
push
test
push
and
inc
jae
outs
ins
imul
popa
jne
mov
cmp
xor
adc
push
int3
adc
sbb
(bad)
fdivr
dec
jo
adc
push
popf
pop
jle
adc
cmp
push
ds
push
je
adc
fisubr
jns
nop
ss
mov
xchg
imul
xchg
cmp
dec
push
shl
sub
mov
lds
outs
bnd
lock
xlat
pop
pop
adc
xchg
pop
push
call
rcr
push
fdivr
push
sbb
lods
mov
adc
repnz
enter
xchg
inc
pop
repnz
or
loope
mov
mov
pop
and
push
mov
dec
mov
data16
lea
ret
lahf
cmp
daa
test
mov
call
neg
add
mov
and
push
adc
ds
jl
dec
bound
mov
dec
add
inc
ds
mov
dec
das
inc
fcmovne
mov
nop
push
and
inc
(bad)
test
push
out
pop
scas
sub
or
cmc
leave
pop
je
xchg
jl
int3
js
inc
lahf
mov
cs
arpl
push
xchg
pop
push
rcl
fld
das
(bad)
dec
sbb
or
repnz
inc
std
loope
imul
call
mov
adc
sbb
sahf
xor
mov
mov
call
cli
je
add
test
ja
pop
sub
je
ins
jg
and
adc
pop
xor
test
pop
cmp
adc
out
add
push
mov
add
outs
pop
lahf
shl
adc
outs
cmp
rol
adc
inc
and
and
movups
jb
cmp
mov
(bad)
xchg
sbb
lods
push
jecxz
call
je
stos
add
(bad)
fadd
sbb
inc
dec
imul
imul
addr16
cmovae
out
inc
mov
add
fisubr
scas
out
push
jb
ins
(bad)
and
je
push
jle
call
and
(bad)
xchg
dec
adc
ins
mov
mov
adc
mov
mov
int
push
mov
jne
pop
inc
jns
mov
jnp
neg
and
stc
push
lds
outs
ds
jo
mov
cmp
inc
mov
push
cwde
fwait
inc
push
dec
inc
push
mov
add
jb
mov
pop
pop
daa
icebp
sub
xor
adc
call
cmp
and
retf
sub
add
sbb
push
pop
(bad)
cmp
imul
adc
push
sbb
dec
mov
add
shr
icebp
pop
xor
scas
mov
add
add
scas
adc
push
adc
pushf
adc
push
jbe
aam
cmp
cmp
movs
jnp
add
cmp
rcl
jb
dec
pop
lock
pop
fsub
jle
pop
cmp
push
frstor
(bad)
xchg
int
push
ds
push
cmp
cs
inc
mov
push
dec
cdq
push
pusha
push
jbe
pop
das
push
inc
(bad)
dec
fisubr
outs
sub
sub
xor
xchg
cdq
mov
push
das
jmp
aaa
cs
mov
jg
in
les
lahf
push
push
xchg
icebp
test
push
cmc
xchg
jle
xor
push
cdq
fsubr
jle
push
xor
test
pop
loopne
loope
adc
ror
push
jp
rcl
fild
add
js
loop
mov
or
mov
and
outs
inc
mov
into
mov
in
pop
cmp
add
jecxz
jecxz
add
jecxz
mul
jmp
and
ss
sahf
in
imul
out
push
jmp
cmp
cs
inc
and
ins
inc
dec
cli
addr16
push
mov
popa
push
and
scas
adc
ficomp
ds
add
nop
ret
das
adc
pushf
xor
pop
mov
pop
and
mov
mov
mov
push
dec
out
sub
adc
ins
cld
adc
dec
mov
inc
mov
xchg
das
adc
and
xor
add
iret
popa
nop
push
adc
dec
and
cmp
mov
add
fnstenv
jo
push
and
faddp
js
hlt
lock
cs
outs
std
pushw
push
jns
repz
int3
cmc
repz
inc
pop
shl
not
fsub
rcr
xchg
jp
pop
clc
dec
push
jecxz
fcom
push
pop
inc
jl
xchg
je
pushf
daa
gs
add
add
xchg
add
cmp
aas
mov
(bad)
dec
push
add
aas
adc
dec
inc
dec
(bad)
and
add
add
mov
push
cmp
lea
lahf
adc
add
arpl
dec
xchg
inc
mov
faddp
cmps
into
xchg
ss
push
leave
dec
and
fiadd
push
mov
xlat
push
jbe
add
and
add
cmps
test
test
inc
push
add
aaa
outs
(bad)
cwde
adc
add
js
int
adc
mov
mov
jnp
sar
dec
sbb
loope
adc
mov
dec
or
adc
data16
xor
lods
(bad)
push
or
bound
adc
cld
mov
rcl
sbb
sbb
inc
mov
sbb
jbe
mov
test
push
ss
aas
unpcklps
addr16
int
pop
and
push
and
and
jl
out
mov
adc
sbb
cmp
and
out
mov
lock
out
xor
xlat
daa
cmp
pop
inc
mov
cmps
fsubp
adc
pop
add
cmc
jo
cmps
xchg
xchg
es
into
push
(bad)
push
ja
jbe
adc
add
fmul
and
sbb
aas
pop
pop
xchg
jnp
repz
push
sub
push
ucomiss
clc
adc
cli
jg
push
jg
mov
sbb
jbe
sbb
or
fidivr
pop
pop
dec
es
mov
push
(bad)
jg
pop
bts
mov
xor
pop
push
call
jbe
push
and
hlt
sub
cli
pop
pop
lock
repnz
cmp
adc
(bad)
sbb
push
test
pusha
jbe
sbb
fadd
ins
sbb
in
push
ins
xchg
call
inc
xchg
outs
jl
daa
push
mov
shr
jnp
push
retf
add
and
sub
xor
or
or
loope
je
(bad)
xor
cdq
add
push
xor
cmc
xchg
pop
fiadd
aad
jbe
and
inc
test
sbb
retf
cld
inc
fisub
outs
and
pop
pusha
mov
sbb
int
rcr
jne
push
jmp
neg
adc
add
rcl
jne
fs
pusha
jecxz
push
jo
das
loopne
popf
jg
mov
mov
imul
ds
xchg
xchg
mov
push
mov
mov
dec
pop
repnz
jo
fs
push
push
arpl
xor
cmps
mov
push
outs
inc
adc
ins
fcmovnbe
sub
mov
inc
xor
je
(bad)
xor
popa
cmp
leave
adc
in
es
jns
push
mov
jae
jmp
jle
cld
data16
add
inc
pop
cmp
imul
cmp
xchg
arpl
push
repnz
pushw
dec
and
mov
sbb
dec
aam
inc
repz
dec
push
mov
cmp
pop
and
push
add
fldcw
xchg
fs
jp
dec
arpl
or
mov
mov
ins
out
or
mov
(bad)
mov
movs
mov
mov
bound
add
stc
xchg
jl
and
dec
sbb
mov
cs
inc
sbb
test
adc
in
xchg
outs
adc
popa
adc
into
pop
fistp
nop
pop
adc
add
in
or
mov
fist
jle
iret
sub
add
stos
inc
adc
mov
jns
jge
adc
(bad)
adc
lea
(bad)
adc
and
imul
les
les
adc
(bad)
xor
js
inc
das
jg
sahf
sub
xor
xor
(bad)
xchg
out
xor
xchg
or
jl
mov
cmp
das
out
fist
stos
das
out
das
out
das
sub
es
pop
xor
jo
cmp
es
sub
(bad)
jl
pop
cmp
lods
div
mov
xor
jns
mov
outs
mov
mov
adc
xchg
scas
mov
xchg
das
mov
mov
(bad)
dec
pushf
pusha
js
ins
pop
mov
cs
clc
ss
and
push
sbb
adc
mov
ins
sub
mov
imul
mov
sar
les
dec
mov
or
push
add
add
push
repnz
adc
call
mov
retf
dec
pushf
(bad)
and
cmpxchg
int3
mov
inc
inc
pop
sub
pop
push
or
mov
outs
movs
(bad)
jmp
cwde
scas
jl
mov
nop
push
pop
cmps
div
add
pop
and
xchg
xor
mov
and
pop
nop
pop
mov
push
sub
cmps
inc
outs
js
pushf
mov
jl
pop
ins
scas
test
ficomp
mov
adc
inc
adc
mov
mov
fsubr
jb
pop
xchg
pop
inc
mov
push
inc
movs
stos
and
out
sahf
jb
pop
xor
fist
cld
(bad)
adc
xchg
dec
jg
aas
add
sbb
or
jb
scas
in
loop
xchg
xor
xor
nop
xchg
popa
das
inc
je
mov
ins
xchg
push
retf
(bad)
out
and
push
push
das
stc
sub
imul
pop
jecxz
sbb
nop
je
in
scas
shr
pop
sub
mov
pusha
jne
xlat
repnz
(bad)
nop
(bad)
iret
cmp
push
dec
in
mov
jmp
scas
nop
mov
pushf
ss
push
imul
inc
pop
gs
js
fwait
sub
repnz
dec
inc
aaa
mov
enter
pop
jo
cmovo
out
adc
and
repnz
adc
in
stos
and
mov
xlat
outs
fsub
push
jmp
inc
repnz
outs
in
lock
mov
popf
add
sbb
pop
adc
cli
inc
leave
add
or
mov
movhps
push
sbb
xchg
fidivr
pop
push
test
fwait
add
cs
push
xor
std
xchg
scas
cmp
ds
jecxz
lds
pushf
das
out
sbb
es
les
inc
inc
mov
xchg
push
cmp
das
inc
xchg
push
push
les
data16
pop
dec
in
jbe
push
jecxz
sbb
push
std
pop
sbb
fimul
pop
mov
repnz
retf
(bad)
cmp
mov
mov
jle
mov
push
fwait
js
(bad)
das
adc
xchg
test
and
test
cli
jno
adc
fadd
inc
fdiv
push
sbb
mov
mov
pusha
sub
mov
retf
adc
test
in
fcom
hlt
lahf
mov
pop
lods
mov
clc
pushf
stc
jmp
inc
cmp
jno
sbb
pop
mov
inc
inc
pop
sbb
pop
jo
mov
pop
jo
cli
or
cli
das
add
add
push
cmc
mov
cmc
cli
imul
cli
fldenv
clc
mov
call
std
fwait
mov
not
pop
das
mov
lods
pop
lahf
jg
movs
dec
pop
gs
data16
ins
inc
jmp
sbb
xchg
or
call
lock
xor
add
jmp
and
adc
push
in
add
add
cmp
repz
xchg
arpl
or
shr
push
cmp
jg
adc
and
daa
or
cmp
jb
inc
popa
jg
(bad)
and
out
xchg
js
movs
mov
mov
sbb
or
outs
jnp
mov
hlt
push
loopne
outs
repz
push
push
mov
aas
mov
jo
pop
adc
data16
adc
cmp
inc
adc
rcl
sbb
bswap
inc
adc
adc
cmp
mov
push
(bad)
cmps
fcomp
or
das
adc
dec
xchg
adc
loop
fsub
das
adc
lods
pop
xchg
push
test
adc
dec
adc
cmps
mov
out
fwait
jbe
call
in
inc
sbb
fild
enter
into
xlat
das
adc
mov
stc
ficom
(bad)
mov
and
adc
lods
in
(bad)
adc
sti
add
push
or
cmp
addr16
div
ret
rcr
sahf
fcomi
xchg
or
push
in
push
and
int
cmc
mov
pop
cs
mov
pop
mov
repnz
mov
fs
pop
xchg
dec
ins
imul
sub
imul
mov
psrlq
lahf
xor
push
dec
sbb
inc
inc
or
ret
mov
mov
push
jnp
xchg
pop
cmp
lods
retf
sbb
(bad)
bound
cli
and
jne
in
jl
call
xor
retf
ror
imul
lods
aaa
xchg
pusha
pop
iret
adc
ror
and
inc
xchg
add
add
adc
into
movups
adc
and
pslld
adc
adc
cmp
and
and
(bad)
out
push
jns
addr16
xor
and
add
jp
jnp
mov
ds
rol
das
mov
adc
sub
rcr
jg
outs
stos
adc
lock
daa
sub
cwde
inc
ds
sub
ins
sar
sbb
sub
outs
adc
xor
das
sub
mov
sub
add
test
push
cwde
push
fisttp
cmp
out
pop
push
push
add
hlt
or
pop
outs
xchg
and
data16
shl
inc
jl
dec
and
fistp
xchg
adc
pop
out
or
mov
inc
(bad)
loopne
push
inc
adc
inc
push
aas
fcmovnb
xchg
(bad)
adc
cmp
nop
pop
in
pop
adc
mov
ja
out
sub
pusha
adc
or
push
cld
jno
jp
add
retfw
(bad)
syscall
mov
adc
add
dec
xor
popa
and
data16
push
pop
mov
xchg
(bad)
pop
(bad)
rcl
dec
iret
pop
adc
fstp
call
adc
adc
retf
enter
cmp
cmp
cmp
dec
mov
aas
iret
fild
pop
imul
push
pop
mov
ss
jo
repz
dec
cmp
inc
sub
dec
jle
push
bound
mov
int
(bad)
jl
push
add
push
and
push
clc
adc
jno
(bad)
sahf
pusha
mov
push
movlps
adc
and
pusha
shr
nop
add
mov
pop
leave
(bad)
inc
mov
test
sub
xchg
inc
and
mov
jae
mov
cmp
sbb
xchg
dec
out
push
add
pop
stos
dec
jp
fmul
push
je
outs
jne
(bad)
cs
or
push
call
push
iret
add
loop
adc
or
adc
mov
push
or
rcr
xchg
dec
xchg
push
or
sar
inc
pop
pop
add
jecxz
gs
jg
xchg
hlt
add
test
push
lods
push
mov
leave
cmp
or
pop
in
add
or
rcr
inc
inc
repnz
adc
adc
lahf
mov
xchg
xchg
cmp
movlps
sqrtps
movlps
add
dec
adc
not
xchg
pop
mov
(bad)
out
fwait
pop
mov
cmps
es
inc
dec
sar
rcl
cwde
sub
cmp
dec
je
pop
iret
lahf
pop
nop
or
mov
and
adc
and
sbb
mov
nop
jb
les
leave
call
adc
xor
mov
nop
loop
xchg
pop
outs
cwde
mov
setl
in
push
pop
dec
sahf
add
and
movs
cli
outs
push
pusha
les
fs
mov
lds
scas
ret
jg
jne
ins
outs
lods
adc
les
and
aas
sub
(bad)
test
nop
sub
jg
sbb
dec
test
call
push
ret
ror
fisubr
mov
lahf
adc
or
shl
sub
pop
(bad)
movs
iret
cmp
inc
adc
xor
add
mov
ret
adc
shl
andps
(bad)
les
or
and
mov
(bad)
adc
mov
in
sub
rcr
adc
mov
inc
and
xor
adc
jmp
aaa
add
fdiv
and
adc
add
mov
and
inc
adc
call
ja
mov
jmp
retf
and
mov
in
mov
adc
lds
mov
fidivr
scas
adc
lock
adc
hlt
lock
rol
push
js
ret
or
adc
pusha
push
and
adc
xor
inc
adc
aas
add
or
mov
xchg
push
jo
mov
(bad)
bound
pop
test
adc
mov
sar
data16
iret
sbb
cmp
fld
add
cmp
inc
rol
or
push
shl
add
das
leave
sub
mov
pop
mov
lock
(bad)
psrlq
add
pop
mov
loopne
fistp
in
mov
or
jle
cmp
mov
adc
push
or
das
mov
inc
outs
loope
lahf
das
inc
ins
movs
mov
mov
ror
inc
cmc
mov
mov
out
pop
cmps
push
ret
lods
pop
adc
sti
lock
pop
mov
das
xor
and
sub
fwait
(bad)
das
fild
add
add
loop
add
sub
loop
lahf
xchg
in
lahf
add
jbe
cmc
push
push
ficom
cmp
fcomip
(bad)
(bad)
mov
out
fs
hlt
mov
inc
repnz
cmp
dec
adc
or
lock
inc
jns
jns
adc
stc
adc
mov
(bad)
call
mov
add
mov
push
loopne
scas
adc
pop
nop
xchg
jns
add
add
dec
add
or
sub
push
outs
and
sub
xchg
jae
pop
lods
scas
ja
mov
outs
and
mov
add
add
jmp
stos
and
add
les
and
in
cs
or
xchg
and
pop
adc
in
adc
nop
fwait
js
in
and
rsqrtps
and
jg
les
dec
or
add
adc
jl
ret
lds
add
xchg
dec
add
test
push
sbb
xchg
or
push
jb
inc
adc
dec
adc
js
or
movlps
movs
push
fnstenv
jns
adc
iret
scas
or
add
add
adc
cld
sbb
mov
lds
out
es
push
mov
sub
imul
adc
fs
cmp
fwait
jmp
retf
xchg
cmp
clc
xor
push
imul
sbb
lods
imul
mov
lea
outs
adc
or
and
mov
jle
in
adc
mov
dec
adc
in
fidiv
(bad)
mov
add
jl
mov
mov
cmc
cs
xor
test
pop
cld
add
push
cmovno
add
pop
into
cmc
push
nop
dec
cmp
inc
stos
aaa
fs
inc
mov
add
xchg
pop
pop
inc
mov
cmps
nop
js
mov
mov
into
fidivr
xchg
cmp
ds
cmp
pop
icebp
cmp
inc
(bad)
aaa
js
ss
dec
out
(bad)
loopne
dec
fiadd
mov
and
loope
popa
jne
out
pusha
lahf
mov
push
or
dec
repnz
fisubr
mov
xchg
jns
push
xchg
dec
mov
add
test
mov
sbb
outs
cs
inc
ror
xor
and
inc
shl
mov
adc
iret
sub
push
jl
push
cmp
pop
stc
ss
or
push
cmp
js
outs
(bad)
cmps
dec
inc
iret
pop
cmovne
adc
out
or
inc
and
dec
lods
inc
mov
push
and
cmp
cmp
push
push
mov
or
iret
in
(bad)
adc
leave
push
ja
push
jb
xlat
addr16
std
push
imul
or
mov
in
inc
adc
pushf
xchg
xchg
mov
inc
cld
add
mov
adc
or
adc
sub
push
leave
adc
push
je
sbb
adc
mov
test
adc
shl
mov
pop
mov
into
push
add
adc
sub
xchg
inc
adc
pop
(bad)
fld
pop
aam
bound
push
ins
lds
mov
xchg
inc
dec
inc
das
pop
push
inc
mov
pop
inc
cli
lahf
mov
fst
xchg
dec
push
jo
push
movs
movs
mov
adc
inc
adc
inc
adc
mov
and
cmp
jo
jno
nop
call
add
xor
xchg
xchg
xchg
fdivp
push
push
push
dec
das
jb
sub
add
xchg
jle
dec
ja
adc
mov
jle
js
shl
dec
das
dec
out
add
adc
test
sbb
jno
pop
and
adc
adc
data16
xchg
mov
ret
jg
cwde
les
fisubr
popa
jne
je
push
clc
sub
ins
vmread
add
jne
rol
push
jp
pop
aas
enter
sub
jno
repnz
je
pcmpeqw
mov
jge
dec
xchg
not
mov
xchg
sbb
adc
test
repnz
xchg
ror
or
pop
iret
xor
ds
sbb
cmps
outs
test
fnstcw
or
rcr
mov
jle
les
push
xchg
sbb
cmp
jg
scas
mov
push
mov
lods
mov
mov
push
mov
jmp
into
lods
inc
mov
cmp
popa
push
int
pushf
ss
and
daa
adc
dec
aaa
repz
je
into
retf
(bad)
iret
js
adc
and
in
(bad)
adc
lahf
add
mov
stos
and
push
repnz
(bad)
aam
fs
cli
mov
inc
leave
les
inc
fdivr
mov
adc
lea
das
in
xchg
cmp
aaa
ret
jns
pop
xor
mov
loopne
add
push
xchg
or
int
mov
xchg
test
fdivp
pop
fcomp
cld
data16
dec
unpckhps
inc
adc
cs
inc
and
dec
pop
add
xchg
push
call
add
mov
mov
push
(bad)
sbb
test
(bad)
es
sbb
dec
les
(bad)
adc
jns
dec
adc
adc
add
iret
out
call
adc
enter
cs
inc
add
add
add
add
cmps
xor
xor
repnz
add
mov
adc
sbb
xchg
retf
imul
das
fs
adc
xchg
add
sub
enter
mov
unpckhps
ja
adc
mov
adc
aas
push
enter
cmp
adc
call
cmp
aaa
xchg
sbb
xor
xchg
fs
pop
pop
adc
adc
enter
push
unpckhps
adc
into
mov
lahf
loopne
sbb
adc
jge
add
call
(bad)
adc
or
movs
jne
or
mov
pop
out
lock
adc
sub
xchg
mov
mov
ds
bound
cmp
cwde
into
loopne
inc
mov
fwait
add
inc
fld
nop
pop
adc
test
xchg
pop
adc
popa
jns
in
adc
pop
(bad)
adc
pop
and
imul
pop
inc
sahf
add
lahf
inc
inc
pop
aas
adc
data16
push
in
mov
or
and
pop
push
lahf
fwait
addr16
fs
gs
mov
addr16
ds
pop
cmps
imul
out
cmp
jno
dec
in
push
and
xor
inc
jo
inc
test
call
je
dec
imul
out
xor
adc
test
aaa
xchg
sbb
adc
jns
out
and
sahf
push
and
push
push
add
out
dec
xchg
into
dec
imul
inc
inc
inc
lods
mov
mov
inc
mov
add
pop
into
dec
rcl
jne
dec
movs
push
addr16
jbe
bound
add
add
cmps
outs
push
or
int3
sub
adc
(bad)
adc
mov
dec
mov
adc
rol
fimul
(bad)
xchg
mov
add
clc
add
int3
pop
cmps
imul
xchg
inc
push
jno
adc
inc
and
aad
(bad)
outs
mov
cmps
add
ror
push
out
(bad)
jp
mov
pop
inc
rol
xor
dec
jg
jo
adc
xchg
add
dec
sahf
mov
add
imul
push
jp
mov
jnp
inc
adc
adc
aaa
jg
jb
aas
mov
dec
adc
adc
adc
adc
repnz
add
(bad)
and
cmp
js
or
pop
jns
add
jno
mov
mov
push
xchg
popa
imul
dec
das
push
repz
pop
test
int
fcmovnu
test
push
cdq
cmps
push
repnz
xchg
adc
fnstcw
xchg
ja
fwait
int
sub
gs
jnp
jg
push
rcl
inc
rol
sub
iret
out
retf
sti
cmp
addr16
or
lods
xchg
mov
addr16
ss
sub
inc
cs
xchg
push
mov
mov
add
(bad)
xchg
fwait
arpl
mov
or
loop
mov
jg
adc
adc
out
faddp
popf
jl
test
pop
mov
adc
and
ja
inc
jg
test
mov
cs
out
dec
xchg
push
mov
(bad)
mov
mov
adc
or
ins
fistp
mov
lahf
inc
nop
push
sahf
in
lea
push
pushf
cmp
dec
lods
sbb
cmp
stos
jbe
lahf
adc
ins
pop
mov
movs
pop
pop
enter
cmp
jae
imul
fild
or
pushf
pushf
or
adc
xchg
ficomp
mov
push
jo
add
jp
fnsave
outs
ss
pop
outs
push
nop
jg
in
aas
or
inc
dec
(bad)
loope
rcl
mov
mov
in
xchg
popa
mov
adc
nop
mov
mov
mov
dec
or
add
pop
repnz
pop
xor
xor
add
call
fld
in
jg
data16
mov
(bad)
cmps
(bad)
int
mov
aaa
fild
rcr
fldcw
movs
xlat
push
rol
aam
(bad)
jno
int
mov
popa
mov
adc
xchg
and
aas
or
add
sti
cwde
pop
adc
out
push
mov
outs
in
hlt
mov
push
mov
(bad)
add
aam
leave
scas
imul
add
inc
and
enter
popf
adc
jns
inc
mov
push
rcr
call
fadd
xchg
outs
lahf
add
mov
dec
pop
ins
push
movs
and
dec
mov
dec
inc
jae
pop
and
inc
dec
pop
mov
rol
test
ret
inc
push
sub
push
dec
jle
in
pushf
in
mov
push
push
add
mov
or
pop
clc
push
sti
xlat
pop
or
inc
add
pop
bndstx
movntps
mov
cvtps2pi
adc
pop
fwait
test
es
sub
mov
sbb
jmp
pop
sub
das
mov
ss
add
loopne
repnz
cli
cmc
and
sti
push
psubsb
mov
sub
mov
into
fnsave
adc
push
mov
or
repnz
mov
add
add
in
add
adc
push
push
pop
test
call
adc
shl
pop
adc
mov
inc
notrack
cli
add
jg
or
jno
jmp
test
test
pop
dec
mov
xchg
push
scas
jo
aam
dec
sbb
add
inc
jo
inc
xlat
dec
pop
push
lock
fwait
push
and
(bad)
jae
retf
pop
xor
clc
push
inc
test
cld
mov
data16
xchg
xchg
sub
clc
inc
(bad)
pushf
ja
repz
adc
push
pop
sahf
out
pop
mul
or
imul
jmp
(bad)
push
push
cld
push
lods
and
unpckhps
(bad)
repz
or
mov
push
cmp
(bad)
cld
push
mov
fs
and
(bad)
in
cs
push
push
push
scas
repnz
push
pop
fdiv
shl
pop
ja
test
xchg
scas
push
adc
in
nop
nop
push
adc
pop
adc
pop
inc
dec
inc
xlat
mov
aas
sbb
push
or
pop
scas
fnstcw
(bad)
pop
test
xchg
fistp
jne
fild
iret
cs
scas
xchg
or
cs
hlt
xor
adc
xchg
ja
adc
xor
clc
sub
push
or
push
ja
sbb
dec
xchg
mov
mov
scas
push
jb
adc
xchg
repnz
sbb
sub
push
or
mov
or
psubusb
in
aas
add
pop
(bad)
sbb
xor
seto
sbb
(bad)
jp
adc
cs
imul
es
push
jmp
pushf
dec
jbe
lods
scas
pop
ficomp
enter
repnz
xchg
push
sbb
and
push
test
mov
test
sbb
xor
invd
add
add
dec
dec
pop
sbb
add
rcr
lods
jns
rol
mov
inc
push
add
and
fyl2x
rcl
xchg
ins
and
inc
sbb
sbb
jmp
pusha
dec
adc
and
add
or
sbb
cmove
nop
pop
cs
and
dec
cld
xchg
std
aam
jmp
(bad)
sub
scas
jae
dec
mov
rcr
sub
xor
push
inc
xor
ret
iret
jbe
cwde
push
inc
aas
in
ss
call
stos
dec
push
add
mov
dec
idiv
push
adc
scas
cmps
pop
in
pop
(bad)
(bad)
das
xor
(bad)
pop
int
or
aaa
jg
push
add
scas
jg
movs
fistp
in
push
xor
mov
or
aaa
fwait
sub
inc
das
ffreep
push
add
pop
pop
imul
pop
push
pop
push
and
sahf
adc
rcr
int3
into
push
xor
add
rcr
mov
dec
push
pop
sbb
ins
cmp
lods
das
ins
pusha
sub
mov
out
out
cmp
mov
mov
xchg
xchg
in
data16
mov
fisub
popa
in
out
enter
lea
ror
arpl
ss
dec
pop
push
or
pop
xor
jge
jle
jecxz
sbb
push
stos
(bad)
push
data16
pop
stos
xchg
rcl
push
jbe
push
or
fadd
xor
push
sbb
daa
inc
iret
pop
sbb
and
cmp
bound
daa
outs
cwde
mov
or
lahf
(bad)
mov
pop
push
jno
add
add
pop
mov
nop
xchg
add
ss
xchg
push
imul
jp
push
imul
xchg
jo
lea
add
add
push
push
push
pxor
add
add
ins
mov
outs
cmp
mov
std
(bad)
and
pop
jbe
das
imul
pop
or
adc
push
jl
push
mov
xchg
adc
and
fwait
out
add
cmp
loope
xchg
mov
xor
lahf
push
(bad)
adc
dec
movs
pop
enter
xor
adc
inc
rcl
xchg
xchg
jno
call
mov
repnz
mov
push
mov
xchg
rol
sbb
push
inc
(bad)
repnz
or
bound
aas
rol
call
sahf
add
mov
mov
and
push
dec
out
fist
test
push
test
xchg
jns
push
pushf
rcl
mov
jge
mov
pop
rcr
scas
xor
popf
sub
cmp
sahf
adc
or
dec
pop
or
loop
sbb
pop
fwait
movs
and
or
or
les
enter
add
xor
or
push
push
xchg
cmp
dec
in
pop
in
shl
or
clc
dec
and
das
pushf
add
enter
das
and
pop
das
inc
pop
das
ror
or
mov
mov
and
das
lods
push
adc
sub
jle
test
or
pop
adc
imul
cs
fcom
mov
rol
sub
cld
aad
push
sub
jle
add
stos
push
test
fisttp
push
lods
jle
xchg
scas
jge
mov
outs
add
push
movs
xchg
movs
fwait
push
ins
add
sar
sti
push
jbe
movs
dec
les
sub
and
pop
adc
lock
idiv
and
pop
mov
adc
mov
cs
dec
loopne
aam
inc
or
rcr
je
dec
gs
imul
mov
outs
xchg
sahf
cmps
mov
push
and
sub
sub
rcl
mov
int3
out
(bad)
mov
sub
mov
mov
fild
mov
fwait
add
push
aaa
push
cmp
int3
lea
sub
sbb
or
lea
(bad)
xchg
iret
repnz
add
add
inc
or
shl
mov
sbb
mov
sbb
jle
dec
shl
ret
js
dec
outs
mov
add
ins
jne
mov
and
push
scas
adc
cmp
push
xor
push
push
(bad)
fadd
mov
fcom
xor
add
mov
inc
jle
imul
aaa
lods
mov
and
xor
nop
aam
add
cmp
outs
leave
fsubr
ss
add
xchg
ins
jp
inc
int3
das
inc
inc
jb
fdiv
push
inc
xchg
jl
into
enter
push
sahf
mov
leave
shr
pop
mov
ins
rcl
cmp
das
push
retf
sbb
push
fcmovnbe
push
xor
sbb
add
jecxz
fild
or
lahf
in
mov
cs
es
out
cmp
cmp
psubsw
mov
das
out
shl
push
jns
xor
call
add
jns
retf
in
repnz
mov
fimul
jns
cmp
(bad)
sbb
stos
or
fild
inc
(bad)
outs
push
xlat
jb
lods
jne
rol
dec
pop
cld
fadd
add
dec
dec
in
int3
fmul
dec
dec
inc
out
aas
add
xchg
cmp
popa
out
js
das
add
adc
not
loopne
inc
pop
in
add
mov
loop
jecxz
das
xor
fstp
add
das
loope
add
jns
add
and
add
add
inc
pop
mov
jmp
push
xor
fstp
enter
dec
out
push
pusha
cmp
pop
outs
rol
out
cmp
repnz
jle
pop
(bad)
lock
cmp
outs
dec
or
enter
ins
das
or
test
leave
xor
adc
repnz
adc
sbb
pop
xchg
cli
mov
nop
xchg
adc
mov
jb
xlat
pop
mov
repz
das
test
hlt
repnz
repnz
dec
pop
pop
sub
mov
push
sub
sti
pushf
push
mul
(bad)
cli
push
sub
jne
add
aam
sahf
lods
outs
cli
add
adc
pop
add
xchg
and
xchg
loope
jb
not
jb
fiadd
push
push
or
nop
addr16
pop
cli
and
and
mov
in
in
cld
xchg
sbb
es
scas
sbb
add
adc
popa
ds
enter
pop
mov
(bad)
ficom
push
push
fisubr
add
push
sti
aas
pop
nop
cmp
leave
add
pop
add
adc
mov
movs
dec
clc
pop
add
scas
sti
dec
push
pop
dec
jmp
jb
neg
adc
jmp
je
ins
add
addr16
push
inc
xor
dec
and
mov
push
fs
(bad)
data16
or
or
ss
or
js
jnp
out
xlat
dec
push
out
mov
int
or
iret
push
ss
and
daa
mov
out
es
or
jmp
(bad)
bound
adc
ret
or
inc
mov
lock
fild
sbb
pop
xchg
inc
js
dec
xlat
sub
stc
data16
ins
mov
pop
adc
add
inc
jmp
test
xchg
xchg
pop
add
pop
jp
pop
adc
bound
jmp
sbb
inc
nop
lods
movs
das
push
add
mov
inc
repnz
sub
fstp
(bad)
mov
push
pop
ds
mov
enter
and
pop
adc
js
mov
push
jge
inc
cmps
dec
call
dec
push
mov
es
inc
adc
das
jp
xchg
fcomp
sub
enter
ucomiss
cmps
adc
lock
pop
stos
sbb
pop
iret
cs
and
sub
sbb
loopne
or
dec
dec
out
fiadd
scas
sahf
add
bound
and
dec
or
add
dec
and
pop
dec
sub
icebp
pop
cmp
movsx
push
fld
cld
pop
pop
add
pop
or
sbb
rol
xchg
push
imul
lds
push
jecxz
or
sbb
das
xor
dec
sahf
inc
push
cmp
add
fs
addr16
inc
add
push
cmp
add
xor
add
add
inc
arpl
add
lahf
pop
das
ss
test
das
les
enter
das
das
xor
xlat
or
cmp
(bad)
movs
push
add
sbb
cs
sbb
cmc
sbb
inc
gs
add
sbb
adc
sbb
mov
inc
cmp
jle
ret
packuswb
push
dec
adc
pop
or
dec
ins
int
call
int3
push
mov
mov
sahf
jo
push
sbb
xor
call
bound
xor
adc
aaa
ja
adc
pop
das
inc
scas
fisub
or
push
or
nop
xchg
ins
(bad)
das
sbb
push
ret
push
ror
in
dec
in
mov
push
pop
cmp
dec
add
pop
aaa
gs
add
cmp
push
aas
pusha
pusha
mov
sbb
jae
push
mov
(bad)
xor
aaa
cmps
inc
ins
and
repz
call
push
push
dec
adc
aad
mov
xlat
pop
mov
push
pop
add
pop
mov
inc
push
inc
add
pop
xchg
inc
inc
nop
add
ja
push
mov
dec
xor
add
sbb
loopne
push
inc
pop
add
fwait
inc
xor
jo
jecxz
push
pop
jb
aam
mov
push
inc
inc
push
test
push
das
add
and
aas
(bad)
leave
adc
inc
push
xchg
lock
mov
lahf
dec
mov
mov
pop
push
push
pop
inc
add
xlat
cmps
pusha
xor
xor
add
dec
jg
push
les
pop
push
dec
ret
add
dec
adc
dec
push
dec
cmp
fiadd
dec
iret
pop
jb
jmp
push
fist
add
inc
repz
dec
(bad)
and
fmul
sub
daa
pop
popa
lods
dec
xchg
daa
inc
jnp
bound
push
xchg
rol
test
shr
cmps
inc
xchg
xchg
lds
pop
add
mov
mov
xchg
cmp
xchg
mov
sbb
jg
fisubr
pop
sbb
dec
dec
js
sbb
ja
push
out
xor
adc
iret
or
mov
add
xchg
jmp
mov
shl
push
cmps
inc
add
das
jp
movs
lods
xchg
call
pop
lods
test
push
xchg
mov
push
mov
and
add
adc
mov
sti
adc
push
add
loopne
push
repz
mov
xchg
add
xor
pop
div
pop
sbb
pop
inc
sub
xchg
js
or
xor
xlat
es
push
aas
push
ja
adc
aaa
(bad)
pop
inc
sbb
sbb
add
dec
popa
bound
push
push
mov
cmp
lock
push
inc
or
test
iret
cmps
adc
lea
pop
xchg
push
inc
jb
mov
or
adc
inc
jo
or
ror
adc
xchg
add
dec
dec
inc
push
push
and
mov
and
inc
or
and
xchg
push
adc
mov
retf
add
fcmovnbe
aas
push
outs
add
add
gs
mov
pop
push
pop
mov
pop
pop
loopne
mov
adc
scas
nop
push
leave
xchg
cwde
push
push
cmps
pop
xor
es
out
jge
cmp
inc
addr16
mov
dec
loop
adc
pushf
dec
mov
imul
mov
mov
sub
jbe
fidiv
call
push
jnp
mov
rcr
outs
fmul
mov
inc
gs
es
and
pop
pop
jb
jmp
xchg
jg
xor
or
iret
loopne
adc
in
fidivr
enter
adc
push
pop
mov
in
in
ins
call
xchg
ins
rol
enter
loopne
test
mov
cmc
add
add
outs
stc
pop
outs
mov
cs
pop
mov
loopne
fiadd
(bad)
outs
push
mov
push
fiadd
jb
out
popa
popa
mov
call
jne
outs
jmp
ss
jb
push
pop
jo
pop
ins
js
pop
nop
pop
pop
imul
ins
push
jae
adc
mov
push
mov
and
or
cmp
sbb
jbe
xchg
mov
ins
cs
add
cmp
pop
sbb
leave
add
or
dec
call
leave
inc
pop
lea
pop
mov
int3
pandn
in
jb
out
jnp
add
inc
add
sub
scas
jns
aas
hlt
add
push
rol
pop
js
add
adc
(bad)
jno
in
test
cmp
movs
and
push
push
mov
push
es
jp
push
enter
push
icebp
cs
sub
aam
pop
or
ret
push
cmp
addr16
pushf
ror
mov
xchg
mov
dec
(bad)
xchg
xor
jnp
loope
mov
jl
(bad)
das
in
repnz
dec
and
jge
mov
stc
add
rcr
adc
loopne
jb
in
mov
push
jno
loopne
pop
xchg
stos
or
push
xchg
jmp
jmp
pop
lea
test
lea
das
frstor
mov
call
lea
shl
add
or
xchg
adc
rol
aas
xchg
xchg
xchg
test
mov
xchg
xor
or
sub
sbb
push
repnz
xchg
sub
das
loopne
pop
pushf
ficomp
and
pop
xchg
out
and
pop
xchg
not
cdq
fs
rol
cli
or
ins
and
adc
xor
iret
or
sbb
push
ss
adc
popf
scas
jns
mov
adc
jo
ja
add
test
push
pushf
lahf
(bad)
mov
adc
adc
fld
test
out
push
movs
leave
add
mov
push
xchg
jnp
jns
pop
mov
dec
push
fcmovb
inc
out
arpl
inc
aaa
dec
ret
push
or
cmps
xor
xchg
mov
test
sbb
add
enter
jo
ins
lods
cmp
pop
stc
sub
mov
sub
loop
pop
outs
pop
sub
pop
lods
mov
xchg
add
mov
ja
mov
ins
xchg
lods
(bad)
push
call
push
or
or
pop
mov
inc
adc
sbb
and
pop
mov
in
add
mov
jo
mov
iret
mov
push
jle
and
dec
adc
inc
dec
mov
xchg
and
in
and
xor
(bad)
movs
xor
imul
push
ds
imul
jmp
adc
jns
pop
out
fild
shr
sbb
pop
repz
mov
xor
push
pop
test
xchg
pusha
push
lahf
les
lods
sbb
or
repnz
mov
(bad)
shl
scas
pushf
cs
rol
loop
push
adc
adc
rcr
mov
sbb
cmp
push
jl
arpl
cmp
outs
sar
push
ret
ret
es
and
or
dec
pusha
repz
std
mov
add
(bad)
repnz
pop
lds
int
and
add
pop
rcr
icebp
inc
add
out
movs
push
sbb
pop
shl
pop
loopne
adc
js
pop
retf
xor
test
pop
int3
sub
pop
and
ds
ins
(bad)
aas
out
pop
mov
(bad)
out
push
push
xor
pop
ins
ss
int
add
fbld
cld
or
jbe
pop
xchg
ret
add
(bad)
adc
xchg
mov
pusha
imul
adc
xor
xlat
and
outs
sbb
pop
seto
add
enter
into
aam
aad
add
enter
add
mov
(bad)
leave
pusha
ss
and
sub
jns
or
rcl
add
jg
or
fisubr
add
pop
shl
(bad)
rcr
(bad)
aam
inc
psubusb
xor
mov
in
sbb
xor
out
in
sti
retf
push
jl
pop
out
sbb
mov
dec
bnd
jle
pop
and
mov
dec
dec
das
jg
hlt
nop
fcom
add
add
out
inc
pop
pop
das
pop
nop
mov
out
das
shr
mov
pop
jge
cwde
jne
popa
push
dec
inc
sbb
push
mov
pop
sub
push
test
sbb
leave
hlt
cmp
adc
repnz
sub
adc
test
dec
sbb
inc
add
mov
out
aas
sbb
sbb
add
sbb
sbb
inc
cmp
cmp
sbb
inc
cld
fcomp
push
xor
push
shr
pop
mov
mov
pop
sub
pop
out
xchg
push
fimul
mov
adc
add
mov
push
mov
scas
sbb
sbb
inc
jne
mov
fwait
pop
pop
mov
mov
out
pop
imul
enter
jg
xor
fwait
je
pop
mov
sbb
and
lock
push
fdiv
mov
dec
push
cmp
xchg
add
adc
mov
fisttp
test
jl
add
add
test
cdq
loop
in
addr16
aaa
js
inc
cmp
add
xchg
inc
inc
idiv
arpl
out
sbb
add
and
mov
jg
push
and
cs
aas
push
les
xchg
push
pop
mov
sbb
out
mov
aaa
outs
sahf
push
fs
and
and
inc
shr
call
inc
add
rol
repnz
and
jle
cmps
pop
inc
iret
das
call
adc
and
and
mov
mov
jl
fmulp
xor
bound
pop
mov
pop
les
cmovg
push
xchg
mov
sub
jb
sub
push
aas
(bad)
mov
add
pop
pop
aas
int
cmps
jns
aas
adc
lods
xor
xchg
loopne
add
stos
outs
(bad)
out
add
and
sub
sbb
xchg
pop
inc
push
sbb
sbb
jnp
dec
push
sbb
sbb
push
sbb
pop
pusha
inc
ins
pop
xchg
mov
add
add
sahf
das
inc
repz
lods
and
xor
call
das
das
aad
jne
es
mov
xor
or
in
mov
add
xchg
xchg
add
or
mov
call
sub
add
and
pop
leave
ja
jg
dec
shr
test
dec
push
dec
(bad)
sbb
add
push
cld
sbb
xchg
jns
sbb
sbb
out
xchg
mov
inc
mov
push
add
inc
dec
jno
xor
and
dec
dec
dec
push
pop
inc
scas
in
leave
inc
inc
mov
mov
cs
nop
xchg
mov
xchg
mov
push
inc
pop
das
dec
pop
add
dec
fwait
iret
dec
in
push
hlt
jb
ror
fwait
call
cmp
int3
loopne
cs
dec
adc
or
sbb
push
push
vmwrite
dec
dec
push
cli
fld
popa
das
dec
dec
push
(bad)
pop
add
scas
das
pop
test
sbb
cs
push
cdq
and
stc
nop
pop
add
sahf
jo
add
jg
(bad)
jmp
nop
cmp
popa
iret
sbb
leave
inc
repnz
sbb
sbb
stc
add
prefetcht1
sbb
add
mov
xchg
mov
inc
enter
xchg
pop
and
push
fcomp
push
pop
sub
outs
imul
scas
lock
add
lock
cs
add
dec
push
push
inc
inc
add
jnp
bound
sub
lock
bsr
retf
push
xor
(bad)
inc
retf
sub
adc
imul
mov
or
iret
les
mov
mov
mov
adc
cmc
dec
inc
jl
sbb
mov
push
lods
aaa
pusha
add
pop
mov
je
pop
mov
daa
js
mov
xchg
add
pop
push
cwde
jae
lahf
and
and
outs
ret
push
stc
pusha
xor
push
aaa
or
dec
(bad)
inc
xor
lods
addr16
add
sub
adc
add
lock
outs
je
movs
jne
je
push
and
out
sbb
idiv
cmps
pop
and
lods
mov
jnp
adc
mov
sbb
les
sbb
mov
dec
dec
xchg
aas
imul
ds
jp
or
test
dec
pop
iret
jnp
(bad)
xlat
out
bound
mov
out
outs
jmp
jo
mov
arpl
xor
stos
ins
nop
loopne
imul
jae
push
imul
scas
cmp
jne
inc
push
data16
mov
ja
mov
scas
popa
and
mov
daa
fs
jp
ins
(bad)
sub
jnp
shl
push
pushf
mov
push
mov
jae
daa
in
mov
xor
ds
cmp
aaa
adc
push
sub
pop
out
stos
mov
fcom
xor
scas
push
mov
xchg
(bad)
ret
fild
mov
fidivr
adc
mov
cs
(bad)
cmp
pusha
xor
daa
outs
in
pop
adc
cmp
pop
fcmovnb
and
or
aas
xchg
mov
aaa
jg
add
fbstp
fist
and
xor
pop
dec
retf
jnp
jb
jne
enter
pop
mov
ficom
stos
and
das
mov
loop
mov
mov
fbstp
stos
mov
outs
aas
fs
mov
and
cmp
lock
xchg
aaa
xchg
push
pop
adc
xlat
pop
pop
and
aaa
ins
retf
sbb
jecxz
stos
fs
imul
test
pop
rcr
outs
push
dec
iret
mov
inc
scas
scas
xor
jmp
sub
stos
jne
rcr
pop
inc
mov
mov
pop
mov
push
mov
push
pop
test
call
mov
push
imul
outs
pop
fimul
push
push
xor
mov
xchg
addr16
cmp
jmp
or
jo
sbb
das
inc
mov
adc
sbb
cmps
shl
in
xchg
adc
or
cmps
mov
cmp
movs
fcomp
push
dec
pop
in
xchg
das
movs
and
and
stc
jb
jns
in
jp
cld
pop
pop
sbb
and
cmp
cmp
and
sub
mov
or
sub
sub
adc
js
dec
jb
popa
das
fdiv
cmp
popa
dec
sti
lock
imul
sbb
rcr
ds
mov
out
pusha
in
add
cmp
cmp
mov
or
push
add
cmp
lea
mov
nop
xchg
xchg
xor
dec
cs
mov
mov
mov
pop
add
ins
jae
jb
mov
fcom
ins
jne
inc
or
pop
pop
test
push
dec
arpl
cvtdq2ps
out
(bad)
enter
je
ins
fs
repz
push
dec
sbb
jae
add
jbe
leave
fs
add
and
out
jbe
add
das
das
das
and
jo
(bad)
cmovno
inc
shl
addr16
mov
pop
lods
jbe
dec
pop
and
fmul
inc
rcr
add
(bad)
sbb
div
rol
(bad)
int
iret
inc
ds
jne
sbb
popf
popa
outs
popa
and
rol
mov
sub
jns
cmc
mov
ins
out
out
pop
push
arpl
mov
mov
daa
jge
rcl
cmp
sub
fwait
jbe
sbb
mul
ds
mov
pop
neg
iret
mov
mov
ins
lahf
(bad)
jg
repz
cli
dec
cmp
cmp
fs
dec
jno
jnp
and
jns
add
das
das
adc
dec
push
inc
inc
arpl
bound
dec
outs
jbe
dec
js
dec
popf
add
jne
fs
add
inc
jne
xchg
loop
mov
jb
xchg
arpl
or
jg
bound
inc
popa
outs
adc
mov
pop
outs
jns
jg
addr16
iret
fsubr
xor
(bad)
push
push
gs
sbb
into
fdecstp
jnp
outs
outs
and
jbe
pushf
jae
dec
inc
aas
xchg
inc
pop
out
not
inc
cmovle
dec
mov
dec
dec
inc
push
inc
push
pop
inc
push
pop
push
inc
mov
inc
retf
xchg
mov
push
inc
inc
adc
mov
in
dec
ds
or
and
scas
cld
enter
sbb
(bad)
lock
cmp
push
dec
fdiv
add
add
(bad)
jg
xor
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
(bad)
(bad)
call
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
xchg
or
cmp
inc
add
dec
push
jp
xor
mov
pusha
push
inc
xchg
pusha
mov
loopne
push
js
xor
sbb
or
sub
ficom
outs
add
jnp
jge
jg
pop
cs
push
sahf
test
push
cmp
shr
test
push
xchg
addr16
ins
add
sahf
add
in
adc
movs
jge
jmp
add
adc
add
add
add
add
xor
cmp
out
add
xor
push
jg
or
and
push
add
pusha
push
aas
add
js
js
pop
sub
add
retf
add
jg
jmp
scas
jge
dec
das
add
ins
push
rol
jmp
fild
jno
icebp
pusha
inc
mov
clc
ret
movs
ins
shl
push
arpl
imul
outs
fs
pushf
loope
in
jp
cs
xchg
fild
call
gs
xor
pusha
das
jae
scas
jnp
push
fadd
aaa
inc
cli
mov
ja
pop
push
and
xor
lea
dec
pop
imul
je
outs
adc
xor
cmp
push
je
xchg
mov
dec
ins
or
jmp
push
jnp
push
bound
stos
movs
cmp
xor
add
mov
jp
cs
sub
jmp
(bad)
ds
daa
ds
push
lods
xchg
mov
mov
enter
ins
bound
popf
xchg
jmp
cs
call
repnz
mov
xchg
imul
test
mul
in
sub
aas
jns
cli
jae
cmp
cmp
cmp
fisub
mov
lds
xchg
lds
cld
push
loope
and
push
dec
pop
(bad)
(bad)
sbb
in
pop
push
jns
retf
das
(bad)
aas
int
jg
sahf
mov
mov
and
int3
aas
in
push
sar
pop
adc
loope
add
out
push
mov
jmp
aas
dec
pushf
nop
xchg
popf
mov
mov
in
xor
cld
call
gs
mov
iret
imul
xchg
das
(bad)
jmp
mov
(bad)
push
inc
lahf
out
mov
xchg
aas
aad
pop
push
pop
sbb
test
pop
bound
mov
(bad)
call
pop
pcmpgtw
shl
jge
inc
sub
dec
add
outs
pop
enter
aas
mov
jg
mov
(bad)
aas
mov
mov
mov
jg
mov
(bad)
mov
out
mov
mov
jg
mov
(bad)
aas
mov
mov
mov
jg
mov
(bad)
jg
cmp
jo
sar
cmp
mov
mov
adc
jg
mov
add
mov
mov
arpl
jg
call
(bad)
mov
cmp
call
jg
nop
fdiv
mov
mov
mov
nop
xchg
stos
(bad)
cmp
mov
mov
test
(bad)
jg
adc
adc
dec
jg
stos
popa
or
adc
inc
test
adc
inc
inc
(bad)
loop
jg
sub
jmp
fs
adc
jg
rcr
stos
inc
adc
test
adc
sub
movs
aas
sbb
pop
ins
rcl
mov
jecxz
(bad)
outs
jmp
cli
ds
ins
xor
inc
jg
inc
push
pusha
sbb
add
leave
nop
cmp
ja
push
add
mov
arpl
dec
pusha
add
pop
loope
jo
mov
push
leave
(bad)
aas
or
push
add
(bad)
pushf
fmul
jnp
add
inc
mov
adc
nop
adc
lock
fisub
invd
seto
dec
ret
das
wrmsr
cmp
aas
enter
sub
adc
cli
inc
xchg
test
repnz
cmp
sahf
mov
in
shl
push
movs
outs
aas
sub
push
push
dec
jnp
(bad)
fistp
in
dec
dec
jne
push
mov
xor
sub
adc
addr16
je
(bad)
mov
mov
popa
enter
mul
enter
inc
xchg
cld
jmp
call
call
pop
mov
pushf
das
jo
mov
shl
in
jecxz
inc
(bad)
(bad)
mov
mov
rol
push
outs
mov
es
lds
inc
push
mov
push
bound
test
cmp
stc
dec
mov
aas
mov
outs
jmp
mov
imul
(bad)
push
call
xor
inc
inc
outs
mov
mov
cmp
add
xchg
test
cld
jmp
jmp
std
mov
outs
jp
repnz
cwde
sub
cmp
jl
gs
imul
(bad)
fbstp
stos
or
test
or
xor
cmp
add
(bad)
jg
in
test
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
cmp
push
fs
cmp
jge
int3
mov
mov
aaa
cmps
jno
(bad)
mov
jae
shl
xor
cmps
ins
dec
sub
and
dec
cmps
fdivrp
(bad)
push
add
mov
mul
or
add
adc
cmp
mov
cld
jmp
pusha
or
add
cmp
cmp
mov
xchg
repz
daa
sub
aad
mov
int3
and
mov
(bad)
(bad)
(bad)
jg
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
dec
jmp
push
sbb
loope
nop
cmp
push
dec
fld
stos
xor
xor
stc
and
mov
cdq
test
sahf
test
mov
and
xchg
test
jae
xchg
and
push
and
push
mov
int
(bad)
int3
lahf
push
xchg
xchg
call
cmp
fild
and
pop
in
call
cmps
(bad)
fistp
cmps
pop
mov
popa
sahf
enter
jmp
push
xchg
mov
jae
jg
call
stos
loope
gs
dec
iret
ss
addr16
mov
(bad)
(bad)
(bad)
cmp
into
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
jmp
das
mov
cmp
mov
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
(bad)
outs
mov
mov
int
aaa
aaa
or
stos
(bad)
stc
and
call
cld
push
ficomp
into
xchg
sub
scas
jno
nop
lock
cs
ins
fwait
cmp
in
jnp
or
add
pop
pop
and
dec
jmp
mov
jae
test
cmp
std
jns
imul
sbb
stc
rcr
lahf
call
data16
cmp
adc
or
scas
add
out
aaa
jmp
bnd
int
pop
or
push
ror
int3
cld
(bad)
(bad)
push
outs
jae
pushf
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
fwait
(bad)
fild
xchg
ins
sub
addr16
nop
out
fsub
mov
cdq
fbstp
or
adc
mov
dec
sub
pop
cmp
movs
sti
fcomp
pop
dec
jmp
lods
xchg
rcl
pop
mov
test
jae
cwde
cmp
lods
outs
jle
fwait
jnp
xchg
cld
pop
ror
idiv
mov
cs
scas
xor
dec
or
fst
push
or
fwait
jle
jmp
cmp
pop
popa
out
sbb
out
test
xor
aad
(bad)
jmp
jbe
ltr
mov
fcom
jg
xlat
out
cmp
pop
(bad)
xlat
mov
aaa
mov
push
retf
add
or
xchg
scas
arpl
test
jg
sti
data16
or
ss
or
sbb
xchg
std
aas
test
dec
aaa
jae
movs
or
adc
sbb
mov
rcr
and
push
mov
and
pop
outs
movs
mov
push
es
data16
mov
bound
jns
push
xor
cld
xor
data16
data16
mov
jo
je
arpl
pop
ins
fs
sbb
sbb
je
sar
or
push
ins
(bad)
aam
(bad)
imul
jne
fimul
in
mov
les
pop
pop
les
and
in
fisub
out
les
xor
xchg
test
and
sub
sti
add
sub
ins
xor
ss
popa
jae
inc
xor
xchg
fimul
daa
pop
fs
pop
lea
(bad)
add
mov
cmp
mov
popf
outs
in
call
daa
xchg
ss
xchg
jae
dec
imul
mov
and
jb
jo
mov
add
sub
daa
daa
pop
lds
fidiv
and
mov
ins
fisubr
mov
and
inc
fcom
fs
ret
or
jbe
mov
pusha
icebp
ins
outs
jo
or
jb
and
sbb
jbe
(bad)
push
push
ss
jns
ins
and
ja
rcr
and
pushw
nop
int3
mov
inc
inc
lods
inc
aas
cmps
and
dec
cmp
push
add
push
and
pop
es
adc
sbb
xchg
add
pop
pop
push
push
jae
or
pop
in
cmp
cmp
mov
mov
ins
or
sbb
stos
push
and
mov
and
push
and
or
xchg
inc
push
push
push
push
dec
test
repnz
adc
push
scas
aam
enter
ffreep
lea
push
scas
dec
jge
mov
loope
scas
imul
jae
and
call
mov
jg
push
sbb
fs
in
cmovns
mov
xchg
jg
fadd
jns
pusha
push
or
push
lea
test
mov
mov
daa
xchg
mov
in
mov
daa
popw
pop
cmp
neg
add
ds
sub
inc
jl
push
addr16
cmps
adc
cmp
add
in
out
add
sub
sub
sub
sahf
sub
push
mov
add
push
cmp
je
add
pop
push
pop
jne
ret
fs
jb
lods
xor
adc
xor
gs
mov
pop
shl
and
adc
dec
sbb
je
imul
fs
jo
sub
cs
jl
jmp
iret
jnp
mov
in
repz
repz
shl
cwde
mov
push
test
mov
outs
mov
push
je
iret
repz
ins
push
cmp
repz
dec
inc
inc
cmp
cmp
repz
sub
iret
repz
and
sbb
adc
ss
repz
or
iret
cld
jns
out
clc
hlt
lock
call
in
(bad)
les
mov
mov
cmp
out
cmp
into
clc
fdiv
je
sub
out
sahf
int
int
hlt
in
sahf
out
sahf
mov
cmp
mov
adc
call
clc
into
repz
sub
retf
in
retf
shr
pushf
out
push
mov
sbb
outs
jg
add
adc
xchg
inc
add
add
push
or
push
inc
sti
mov
inc
pop
test
push
and
xor
push
pop
js
ja
add
rol
or
outs
push
add
cmp
cmp
dec
dec
add
test
cmp
xchg
dec
cs
adc
add
add
inc
rol
adc
add
fs
add
add
or
(bad)
jmp
mov
test
mov
sub
push
shr
and
outs
add
add
add
mov
mov
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
cmps
cmps
test
stos
stos
lods
(bad)
(bad)
(bad)
jmp
mov
mov
mov
mov
mov
ret
(bad)
enter
int3
(bad)
(bad)
(bad)
dec
into
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
in
out
call
add
repz
cmc
div
clc
stc
cli
sti
cld
std
adc
mov
push
icebp
xor
inc
push
adc
inc
xor
mov
(bad)
jmp
fs
popa
sbb
pop
stos
fs
jp
xchg
bound
imul
and
outs
outs
jne
push
inc
outs
mov
popa
push
dec
sbb
aaa
and
fadd
imul
imul
jne
outs
sub
ins
mov
les
push
and
mov
sub
push
ins
push
push
out
imul
push
ins
daa
addr16
mov
or
outs
arpl
test
sbb
inc
je
cwde
add
add
sar
push
jae
imul
dec
xchg
or
mov
pop
jbe
gs
ins
mov
adc
and
lahf
and
xchg
mov
xchg
pop
sub
lods
movs
push
imul
inc
mov
cmp
pop
cs
les
or
push
xor
and
xchg
and
xor
imul
frstor
fdivr
and
ins
adc
mov
and
outs
mov
bound
and
push
sub
bound
mov
inc
pop
shl
add
das
pusha
xchg
xor
mov
out
gs
test
dec
outs
xor
sbb
and
mov
imul
imul
imul
xchg
fnstsw
jb
and
push
jmp
pop
ins
jne
aam
inc
and
dec
sub
rdpmc
lods
sbb
je
push
pushw
inc
outs
daa
popa
jne
sar
outs
cmp
pop
(bad)
daa
xor
je
add
mov
dec
jb
push
pop
add
xchg
in
(bad)
jns
arpl
jbe
inc
sahf
data16
iret
imul
(bad)
gs
mov
imul
xor
pop
xchg
ror
mov
pop
add
pop
add
test
inc
xlat
mov
push
popa
lock
fstp
lods
daa
cmp
repnz
pop
movs
test
ss
movs
dec
clts
call
jmp
into
sub
adc
and
(bad)
xchg
push
(bad)
(bad)
inc
dec
push
psubsb
dec
jae
aam
enter
dec
inc
call
mov
dec
dec
lods
dec
fisttp
out
das
movs
inc
dec
push
nop
jl
push
aas
push
push
pop
and
dec
in
adc
dec
dec
or
hlt
push
inc
dec
push
imul
cmps
rcl
pop
mov
cwde
fisubr
inc
sub
dec
fs
push
inc
push
inc
inc
in
cmps
ror
and
push
imul
clc
dec
call
push
out
dec
pop
enter
dec
dec
push
repnz
cmp
push
xchg
dec
dec
jl
push
inc
xor
jbe
push
inc
dec
dec
sub
test
add
dec
repz
cmps
rcl
mov
test
test
push
imul
cmps
rcl
push
cmp
sub
pop
imul
movs
jmp
fiadd
clc
push
push
(bad)
out
dec
hlt
in
push
scas
cs
inc
push
fadd
fisttp
xchg
dec
aam
pop
inc
int3
mov
mov
dec
pushf
cmp
jle
popf
je
cwde
mov
pcmpeqb
dec
in
sub
lahf
ins
push
push
dec
pop
pop
inc
inc
push
dec
dec
dec
not
and
(bad)
(bad)
out
sbb
str
(bad)
or
or
adc
ret
and
add
or
adc
sbb
add
lahf
dec
mov
pop
cwde
mov
sbb
and
dec
pop
mov
dec
cli
cmove
push
in
mov
add
out
jg
pop
jb
stc
test
mov
mov
outs
iret
dec
popf
push
jnp
jg
jo
(bad)
retf
xchg
adc
push
cmp
dec
or
repnz
dec
mov
inc
sti
xchg
and
pop
inc
add
iret
sti
in
and
dec
xchg
xor
xor
dec
or
into
test
pop
lds
lahf
and
(bad)
(bad)
(bad)
(bad)
cmp
mov
jmp
(bad)
std
ins
dec
add
loop
stos
inc
mov
ins
jecxz
xor
xchg
(bad)
(bad)
(bad)
dec
sub
mov
mov
push
dec
loope
cmp
pusha
clc
pop
adc
mul
(bad)
dec
sub
jmp
sub
pop
aas
push
dec
xchg
mov
xor
loope
inc
mov
inc
mov
mov
(bad)
call
jns
cmps
out
or
and
mov
inc
das
out
fstp
cdq
(bad)
cli
repnz
inc
mov
inc
push
dec
mov
scas
xor
cld
cmp
inc
test
outs
sub
movs
jp
dec
lea
clc
xchg
int
jbe
pop
xchg
cli
inc
mov
(bad)
dec
add
fs
(bad)
(bad)
dec
ret
bound
mov
mov
inc
(bad)
aas
mov
inc
mov
dec
push
adc
gs
xor
test
cmc
push
adc
es
cmp
(bad)
(bad)
jmp
inc
dec
mov
sub
out
mov
xchg
lahf
mov
dec
fwait
into
jle
sti
jg
int
(bad)
(bad)
(bad)
dec
cld
and
lock
add
sbb
inc
imul
(bad)
(bad)
(bad)
call
mov
dec
pop
movs
test
ret
adc
pushf
ja
xlat
test
pop
(bad)
xchg
(bad)
jg
dec
scas
mov
inc
cmp
mov
clc
ror
out
add
sub
(bad)
(bad)
jmp
inc
mov
rcr
cdq
or
loope
xchg
sti
or
inc
lea
mov
(bad)
(bad)
inc
cld
fcom
dec
mov
addr16
push
outs
xor
cmp
inc
xchg
xlat
fidivr
xchg
inc
push
xlat
mov
add
sub
mov
xchg
fldcw
jb
rol
(bad)
dec
out
ret
mov
inc
mov
js
add
aas
cs
cmp
inc
push
(bad)
(bad)
push
xor
cmp
inc
scas
pop
(bad)
push
enter
xor
xchg
jg
sub
jne
test
sub
repnz
adc
xchg
dec
fwait
xor
std
test
inc
push
ins
std
rcl
xchg
mov
pusha
xchg
(bad)
out
clc
dec
mov
fmul
mov
div
loop
shl
jae
cmp
mov
jmp
fdivr
add
or
or
push
lahf
push
pop
xchg
and
lea
push
mov
int
lods
dec
jl
jg
idiv
mov
push
jmp
inc
stc
add
push
fild
mov
sbb
lds
les
jmp
inc
and
mov
mov
mov
repnz
retf
rcr
or
sbb
test
pop
adc
enter
adc
or
and
popa
push
or
push
mov
leave
loop
popa
stc
push
mov
xor
test
aas
xlat
add
xor
es
fld
sbb
test
mov
jmp
dec
sub
add
cmps
sub
bound
(bad)
pop
and
dec
(bad)
mov
jg
pop
in
mov
add
loopne
sbb
mov
jle
aaa
push
inc
add
cs
jg
dec
sbb
scas
sub
inc
jmp
cs
adc
loopne
mov
xor
add
imul
and
pop
sbb
cmp
sub
pushf
and
iret
adc
mov
in
das
mov
repz
iret
(bad)
bound
leave
add
mov
jl
sub
jge
enter
test
pop
enter
xchg
jno
xchg
inc
jle
loop
outs
adc
mov
mov
test
pop
call
cdq
jg
mov
ins
pop
or
and
nop
or
nop
es
mov
adc
or
nop
or
mov
jp
or
nop
or
push
std
or
mov
mov
ret
cmp
pop
mov
nop
mov
cmps
test
or
mov
data16
mov
nop
or
mov
mov
or
mov
scas
mov
mov
or
nop
or
mov
mov
or
add
inc
ds
das
scas
jmp
mov
repz
daa
pop
das
call
std
mov
rcl
xchg
sub
push
or
cmp
rcl
cmp
es
mov
test
add
nop
add
into
pop
adc
test
sbb
jns
iret
repz
xchg
mov
dec
add
test
(bad)
repz
push
dec
nop
mov
sbb
(bad)
mov
mov
das
clc
dec
add
rcl
mov
ins
dec
je
sub
outs
inc
iret
push
add
jecxz
ins
(bad)
scas
sbb
inc
mov
pop
ret
push
inc
ss
pusha
or
mov
xchg
imul
sbb
in
or
stc
sti
or
jae
inc
push
scas
adc
popa
and
push
xor
add
push
mov
push
lock
mov
hlt
push
js
or
cwde
mov
lods
inc
pop
ja
bound
es
punpcklwd
sub
pushf
pushf
sbb
sub
bound
add
or
push
imul
shl
adc
or
lahf
movs
mov
mov
icebp
mul
inc
sub
push
push
push
cmp
xchg
xchg
and
mov
push
cld
aam
in
and
cmp
fmul
and
sti
ss
inc
inc
and
and
ret
cli
jae
jno
aam
inc
xor
cmp
jle
(bad)
dec
test
ss
push
xchg
jp
out
push
cmp
sbb
loop
jae
popa
jbe
sub
and
inc
jl
dec
dec
loop
sbb
inc
popa
xchg
lahf
jbe
arpl
push
out
std
pusha
outs
imul
jmp
push
add
movs
inc
push
imul
mov
jo
push
push
mov
js
mov
int3
ins
and
and
sub
jecxz
mov
add
cmp
imul
ins
pusha
ins
push
dec
data16
mov
pop
cmp
outs
popa
jo
int3
jo
shr
nop
test
push
retf
and
idiv
and
out
jae
sub
add
pop
popa
test
pop
retf
imul
shl
inc
je
nop
and
addr16
outs
add
rol
idiv
mov
retf
les
pop
adc
cmps
loope
mov
test
ror
cs
adc
or
ja
dec
and
test
mov
cld
repnz
push
push
rol
fld
sar
add
add
test
or
mov
and
inc
pusha
sbb
jp
popa
and
imul
adc
aam
fisttp
es
jne
mov
mov
out
in
xchg
sbb
pop
aaa
mov
xchg
mov
dec
rcr
cmps
packsswb
push
push
inc
sub
ja
rdtsc
ss
mov
dec
inc
loope
push
xlat
adc
add
inc
mov
cmp
push
mov
inc
ja
jle
dec
arpl
add
push
dec
pop
inc
popf
je
and
mov
sbb
adc
add
loope
out
out
cmc
sub
inc
xchg
and
xor
jmp
retw
push
and
cmps
sub
mov
cmp
push
mov
cmp
push
mov
fiadd
add
xchg
fs
add
iret
ret
inc
dec
pop
popf
adc
stos
jb
push
pop
inc
cmp
jae
call
pop
add
sub
jmp
pop
scas
cs
pop
dec
inc
xchg
or
dec
jg
inc
imul
jo
sti
xlat
cmc
dec
pop
pop
cmps
mov
mov
mov
mov
(bad)
(bad)
rcr
arpl
sbb
add
jb
mov
and
add
gs
(bad)
mov
or
mov
ret
sbb
fdivr
pusha
cvtps2pi
sbb
jnp
mov
dec
je
lods
neg
inc
ins
mov
mov
inc
ret
dec
mov
jmp
push
loopne
cmp
mov
jecxz
mov
aas
ins
pop
mov
ds
daa
sti
data16
or
inc
inc
bound
inc
fwait
cmps
popa
mov
(bad)
scas
push
cmp
fisub
sub
cmps
shl
out
push
pop
imul
xor
mov
lods
lds
push
ret
mov
rcr
sar
outs
ins
aaa
pop
mov
ins
retf
inc
cs
add
push
das
inc
mov
xchg
ret
pop
jmp
outs
xchg
das
dec
sti
cmp
sub
push
pop
push
imul
add
mov
add
arpl
push
dec
dec
outs
push
packuswb
addps
sti
(bad)
cmps
xchg
sub
fbld
xor
pop
inc
loop
xchg
add
out
add
nop
sub
mov
or
(bad)
clc
nop
pop
iret
lds
cs
lds
mov
mov
dec
jecxz
mov
sbb
les
add
add
or
into
ins
scas
lods
outs
and
inc
sub
inc
cmps
and
and
dec
pop
pop
loope
popf
and
mov
lock
imul
cmp
ffree
adc
inc
xor
xchg
ror
dec
jg
aaa
and
and
or
sbb
push
dec
fwait
in
push
inc
or
adc
outs
sbb
mov
scas
test
add
je
add
add
mov
mov
jmp
(bad)
jmp
xor
inc
cmp
call
xchg
movmskps
add
push
adc
mov
rcr
dec
jle
stc
sub
sub
out
add
and
add
add
sub
add
xor
adc
dec
shr
movs
mov
ret
les
and
icebp
das
dec
cmps
and
cmps
mov
ja
xchg
inc
loop
lock
outs
jnp
mov
sbb
bound
ss
adc
inc
add
cmp
mov
sbb
aaa
test
mov
inc
and
cmp
mov
aas
and
cmp
call
and
(bad)
mov
setnp
mov
mov
hlt
push
(bad)
jo
push
lock
aaa
and
out
and
jmp
mov
add
pop
mov
and
jno
pop
(bad)
aas
out
pop
sub
cmps
outs
pop
jns
jge
jl
gs
jbe
gs
arpl
fdiv
xchg
fild
mov
jb
je
mov
and
push
pop
lods
call
inc
adc
jno
xlat
mov
mov
shr
(bad)
bound
jae
dec
pop
ret
fimul
popa
addr16
test
pop
cmp
ret
or
xlat
mov
add
mov
sub
mov
pop
mov
or
xor
imul
pop
sub
sbb
mov
test
das
mov
dec
leave
in
shl
mov
sub
shl
inc
and
mov
xchg
push
aas
jl
shr
add
call
pop
dec
mov
xchg
mov
sub
shl
outs
xor
adc
addr16
sbb
sub
inc
push
mov
push
or
jnp
aaa
adc
pop
push
push
add
xlat
push
mov
xor
ret
out
push
and
adc
arpl
adc
lods
inc
ja
mul
adc
mov
stos
ja
sbb
push
add
fdivr
push
xchg
mov
and
xchg
fs
inc
adc
add
xchg
mov
add
pop
adc
(bad)
sub
ss
imul
or
outs
daa
das
out
or
xchg
push
jle
imul
lock
pop
aaa
bound
mov
jmp
mov
adc
(bad)
in
cmp
add
mov
and
inc
sbb
adc
xchg
(bad)
test
push
movs
sub
inc
cmp
test
aaa
test
inc
fwait
xchg
adc
pop
xor
sub
xchg
mov
xchg
stos
scas
addr16
adc
lahf
or
aas
(bad)
mov
cmp
data16
mov
scas
sub
adc
pop
repnz
jg
bound
jnp
mov
(bad)
ins
push
rcr
push
mov
and
scas
cli
out
sub
imul
push
rol
inc
hlt
xor
(bad)
repz
(bad)
adc
xchg
mov
out
cs
aas
pop
xor
adc
lods
es
inc
lahf
or
xchg
xor
cmp
dec
ja
push
push
orps
xchg
ror
das
sub
das
push
popa
es
pop
imul
cmp
retf
(bad)
outs
dec
aas
xchg
xor
and
in
mov
push
shl
mov
out
add
pop
mov
outs
aaa
cmps
adc
mov
call
sub
push
je
sub
(bad)
test
mov
outs
lea
jmp
aaa
mov
sub
or
pop
sbb
dec
dec
aaa
xchg
sbb
je
ja
or
dec
pusha
lock
xchg
xlat
mov
pop
stos
(bad)
or
ins
pop
outs
inc
lahf
jecxz
pusha
ins
inc
stos
cmp
mov
cmp
push
pop
and
xchg
fwait
ds
fs
sub
mov
shr
push
xlat
xor
and
or
or
mov
outs
jle
arpl
cwde
mov
jnp
xlat
jmp
xchg
mov
pop
xchg
and
jg
mov
dec
data16
shl
add
psubusb
dec
cs
pusha
xor
aas
inc
jo
add
inc
scas
outs
sub
and
mov
xor
jae
lods
xchg
jg
aaa
or
pop
dec
test
adc
push
addr16
cmp
outs
dec
jnp
out
mov
mov
pop
xchg
outs
lea
ss
xchg
or
cmps
or
call
mov
sbb
imul
outs
shl
push
retf
mul
inc
rcl
inc
mov
inc
push
pusha
jg
xor
dec
das
neg
push
ret
xchg
jmp
xor
shr
leave
xor
or
arpl
adc
loopne
pop
ja
add
mov
push
outs
adc
and
push
stos
arpl
pop
enter
dec
mov
les
ret
xor
cs
mov
mov
sbb
ret
pop
pop
imul
bound
sub
imul
popf
dec
pop
retf
cmp
mov
inc
add
xchg
pop
pop
ins
inc
push
jg
ret
mov
scas
loop
mov
pop
jbe
pop
mov
ja
mov
cmc
xor
and
jg
xchg
cmp
lds
cmp
hlt
xor
pop
sti
jae
or
pop
sub
jae
adc
pop
xchg
adc
inc
or
loopne
xchg
pop
mov
popa
and
mov
cli
push
js
shl
push
add
and
mov
push
aaa
dec
outs
ret
retf
and
inc
repz
lahf
sbb
xor
and
test
push
stos
imul
shl
es
imul
cmp
mov
add
ins
and
ins
push
sti
and
outs
aas
arpl
es
push
test
inc
dec
dec
outs
outs
js
adc
cmp
into
xchg
ficom
gs
pop
movs
add
popa
inc
shr
and
mov
mov
and
jo
dec
and
inc
pop
icebp
mov
inc
mov
xchg
xor
mov
jbe
les
stos
ret
mov
mov
ret
push
imul
xor
or
xlat
inc
(bad)
cmp
fwait
sub
jp
sub
loop
xor
jp
cmp
and
shr
das
bound
movq
fwait
push
add
mov
pop
fs
jmp
iret
(bad)
test
mov
mov
push
mov
fist
mov
mov
pop
xchg
jbe
jnp
xor
int
shr
jae
movs
push
mov
and
adc
jp
pop
ins
and
mov
aaa
retf
pop
and
xchg
mov
and
jo
or
add
(bad)
iret
cmp
jnp
push
lock
mov
outs
and
mov
outs
es
push
dec
sub
dec
or
test
add
sub
sahf
test
xchg
pop
inc
das
fst
push
fild
retf
inc
loope
inc
ja
and
and
mov
arpl
jno
add
ret
int3
ss
sub
iret
lea
lods
cmps
cmp
scas
scas
dec
or
xor
lahf
pop
imul
inc
idiv
adc
popw
sar
ja
(bad)
inc
daa
or
fwait
not
xor
mov
lods
bound
fsub
xor
aaa
xor
inc
add
or
jge
rcl
push
cmp
inc
mov
jns
das
sti
dec
and
in
dec
ficom
dec
inc
push
cmp
xor
sbb
(bad)
aad
xor
jecxz
in
or
retf
pop
aaa
mov
xor
push
aaa
fs
pop
mov
mov
fdivr
mov
jbe
out
je
fwait
je
inc
push
and
lods
dec
sbb
pop
dec
mov
popa
es
inc
outs
das
call
pop
xor
sub
add
(bad)
lods
xorps
icebp
push
xor
mov
arpl
ss
mov
mov
xor
pop
or
push
inc
and
rcr
outs
sbb
xor
outs
imul
(bad)
stos
sahf
inc
inc
xchg
fsub
pop
inc
inc
sub
sbb
xlat
outs
adc
sbb
movs
bound
fs
imul
nop
and
adc
es
mov
jo
rol
daa
jmp
add
imul
and
les
and
pop
xor
movs
popa
out
mov
xor
add
addr16
loopne
sub
cmp
fwait
pop
imul
mov
push
pop
es
pusha
sub
cmp
add
pusha
mov
add
pop
aas
lahf
test
sahf
inc
inc
(bad)
outs
sbb
nop
ret
dec
inc
imul
iret
mov
pop
shl
sbb
and
movs
popa
adc
add
cmp
shr
add
cmp
imul
mov
retf
div
imul
jecxz
ds
add
(bad)
cmp
xlat
ins
adc
outs
retf
pop
not
movs
add
js
cmps
outs
cmp
loope
dec
bound
add
scas
or
fadd
adc
pop
ss
cmps
(bad)
(bad)
jp
js
aaa
pop
push
pop
mov
and
inc
pop
add
data16
dec
jnp
stos
jp
out
fs
daa
movq
fidiv
sub
mov
inc
arpl
shl
inc
inc
dec
or
pusha
pop
scas
test
vcvtsd2si
and
xchg
addr16
or
sub
data16
adc
fcomi
mov
call
push
xor
mov
xchg
lock
xchg
push
xor
mov
es
inc
mov
add
xor
jb
mov
push
cmp
sub
dec
xchg
dec
dec
and
xchg
push
sub
jne
gs
mov
js
pop
ja
sbb
adc
shr
mov
call
jnp
and
(bad)
inc
inc
sti
inc
js
sub
sbb
mov
arpl
imul
mov
(bad)
sub
lods
sub
stos
xchg
lock
adc
jmp
adc
cdq
cmp
pop
in
scas
mov
mov
and
adc
call
jge
(bad)
sub
rol
test
fstp
sub
dec
sbb
fisubr
inc
bound
inc
pop
xor
jbe
into
add
popa
dec
shl
pusha
rcl
ja
not
das
ins
arpl
xchg
ret
add
push
add
shl
fwait
sub
cmp
mov
push
and
mov
mov
adc
push
ret
adc
test
fwait
dec
xchg
aas
add
mov
jae
adc
dec
cmp
ds
inc
imul
clc
jno
inc
pop
add
rol
inc
repnz
add
inc
ds
and
adc
inc
pusha
add
clc
adc
nop
mov
outs
ins
xor
mov
andps
(bad)
xor
add
sbb
fsubr
add
leave
or
add
and
mov
cmc
aaa
push
sbb
pop
xchg
retf
mov
push
mov
aam
lods
adc
repz
sbb
jae
sbb
aam
nop
adc
outs
dec
inc
sahf
sbb
adc
xor
pcmpgtb
frstor
xchg
cmp
push
mov
sub
fdivp
outs
adc
cs
pop
test
fiadd
inc
jge
mov
sub
shl
add
sub
les
cmps
fwait
outs
rcr
lods
or
addr16
lea
or
mov
cmovle
mov
mov
adc
push
out
ds
push
fwait
loop
jb
and
push
sbb
leave
xor
daa
add
add
xor
inc
dec
fwait
test
clc
ret
jmp
addr16
or
scas
shr
xor
out
mov
add
or
sahf
jae
mov
imul
jmp
mov
stos
push
push
rcr
xchg
test
imul
and
arpl
pop
jg
push
push
add
mov
(bad)
mov
and
nop
cmp
sbb
sub
adc
inc
add
outs
sbb
jg
mov
fild
pop
adc
and
lahf
les
adc
rcl
pop
ror
ja
inc
in
or
dec
adc
cmps
out
inc
fisttp
xor
stos
add
ins
xor
arpl
aas
ret
push
test
sbb
fistp
(bad)
pop
xor
(bad)
push
push
(bad)
js
imul
push
stos
adc
pop
mov
push
sub
loopne
cmp
arpl
xor
fistp
gs
outs
idiv
cmp
popa
outs
dec
jl
loopne
pop
and
out
push
in
push
inc
inc
lahf
pop
bound
sbb
aas
ds
(bad)
sahf
add
(bad)
ins
sbb
add
mov
int3
dec
test
sub
mov
add
je
pop
ror
(bad)
pop
movs
inc
inc
into
rol
or
mov
cmp
mov
sub
popa
adc
jecxz
xchg
and
xor
daa
pop
out
stos
arpl
ins
inc
jecxz
push
fs
push
bound
lahf
ror
cli
add
fistp
das
(bad)
and
daa
and
imul
je
push
adc
iret
pop
sti
gs
arpl
jb
or
scas
ins
fwait
mov
mov
mov
mov
adc
push
add
sti
add
pop
daa
pop
add
lods
imul
and
mov
push
sub
scas
or
xor
add
dec
and
mov
jecxz
in
mov
ja
jb
or
or
xor
jb
pusha
xchg
push
push
jmp
xor
xchg
xchg
sbb
data16
sar
popa
(bad)
fld
push
adc
gs
xchg
ficomp
pop
inc
outs
out
xor
lahf
push
and
scas
pop
push
xchg
and
shl
add
or
sahf
push
add
pop
inc
cmps
jmp
sub
xchg
outs
imul
cmp
mov
bound
pop
add
mov
add
sub
sub
rcl
mov
cs
imul
mov
lds
mov
jmp
pusha
mov
dec
or
pusha
stos
mov
out
xlat
in
xchg
push
iret
inc
inc
mul
cmp
sub
mov
pushf
push
sub
daa
(bad)
mov
mov
pop
mov
pandn
mov
mov
and
ror
lods
arpl
dec
data16
test
jle
imul
jnp
pop
fsub
jecxz
mov
retf
repz
sbb
add
in
or
push
add
(bad)
frstor
push
pop
pop
pop
movs
fistp
dec
outs
cmps
and
inc
cmps
(bad)
movd
loopne
pop
dec
bndstx
ds
mov
imul
das
es
mov
pusha
lock
dec
(bad)
rcl
js
out
fmul
aaa
xor
pop
inc
dec
cmp
fidiv
pop
push
push
xor
push
mov
mov
shl
xor
jbe
fwait
xchg
imul
pop
xorps
daa
lods
imul
pop
outs
aaa
dec
sbb
(bad)
add
iret
pop
add
popa
js
jg
out
or
push
fild
ss
mov
movs
pop
addr16
imul
dec
rcl
push
add
add
or
mov
pop
xor
lahf
xor
xor
xor
ins
test
test
arpl
cmp
mov
jnp
push
sub
push
fadd
sbb
sbb
inc
addr16
mov
jb
addr16
mov
jae
imul
imul
pop
cmps
pop
cmp
dec
jmp
(bad)
gs
fisubr
mov
mov
ja
inc
lahf
(bad)
daa
in
adc
pop
jle
ror
(bad)
add
xchg
adc
or
fwait
aaa
and
mov
mov
sub
sbb
push
jno
xor
(bad)
(bad)
push
pop
add
xchg
iret
(bad)
pop
pop
cmps
ret
inc
aad
lea
div
data16
lea
push
outs
mov
cmp
in
pop
shr
pop
loop
das
lds
pop
(bad)
ss
xchg
fisub
bound
ret
add
mov
mov
add
test
xchg
mov
mul
jg
inc
dec
adc
imul
adc
and
mov
out
sub
xor
in
mov
not
xor
mov
(bad)
aam
xor
js
in
mov
fidiv
pop
inc
pop
outs
stos
mov
les
pop
pop
pop
fcom
adc
xor
pop
xchg
arpl
addr16
je
jp
push
dec
inc
jno
pop
push
stos
fidiv
ds
jp
sub
inc
clc
arpl
dec
imul
push
daa
daa
push
repz
push
push
inc
pop
outs
pop
(bad)
xor
test
cmp
and
nop
add
iret
jo
shl
rol
jne
repz
and
pop
pop
mov
les
(bad)
ror
jns
mov
ret
out
test
ret
and
sahf
outs
jae
cmp
xor
adc
add
repnz
outs
data16
ret
clc
inc
lods
inc
ja
inc
dec
dec
sbb
scas
mov
stos
daa
push
add
mov
je
add
xor
sbb
cwde
ja
and
cs
jnp
sbb
add
mov
push
stos
fwait
mov
adc
adc
mov
jmp
(bad)
out
ret
pop
sbb
push
ins
mov
div
rdpmc
mov
or
mov
iret
xchg
call
out
aam
mov
(bad)
gs
push
cmps
mov
and
arpl
jns
and
cmps
sbb
jno
movs
ja
les
ret
int3
push
push
lahf
call
xchg
ja
add
stc
loopne
dec
sahf
test
ss
out
loopne
sar
sar
mov
(bad)
ins
dec
cmp
push
clc
in
push
cs
adc
and
addr16
mov
adc
push
jns
cmps
jge
add
sar
sti
rol
xchg
push
sub
idiv
out
jae
aad
pop
xchg
add
loopne
add
push
cmp
lock
jns
das
push
pushf
dec
in
repz
into
push
adc
aam
or
cmc
adc
inc
xor
pusha
fild
sbb
add
push
shl
jp
ds
outs
lahf
sbb
lods
add
mov
movs
jmp
cmp
not
xchg
stos
(bad)
das
and
push
fs
push
jnp
test
addr16
aaa
fimul
outs
pop
sbb
das
aas
aam
sbb
sub
push
and
dec
and
cmp
xor
xchg
dec
dec
cs
in
lds
(bad)
cmp
cs
cmp
xchg
fmul
leave
xor
leave
and
pushf
pop
jb
xor
xor
leave
and
ss
jb
leave
iret
aaa
sar
or
daa
xlat
push
cmp
shl
xor
jb
leave
and
pushf
pop
jb
xor
xor
fdiv
fstp
cmp
cmp
(bad)
fdiv
and
daa
xor
jb
leave
leave
xor
xor
daa
xchg
pushf
pop
xor
xor
and
pushf
pop
jb
cmp
push
cmp
out
out
and
call
leave
jmp
daa
xchg
pushf
jmp
in
jb
leave
leave
ss
aaa
out
or
(bad)
xlat
push
cmp
icebp
daa
xor
leave
and
pushf
pop
jb
xor
xor
leave
and
ss
jb
leave
div
clc
cmp
pushf
stc
(bad)
cli
daa
xlat
push
cmp
jb
leave
and
pushf
pop
jb
xor
xor
cs
adc
adc
mov
add
repnz
and
add
mov
sbb
push
push
jae
movs
push
jmp
setg
outs
xchg
test
cs
jns
nop/reserved
sbb
adc
push
dec
cmc
shr
jmp
ins
loope
(bad)
jecxz
inc
dec
sbb
sub
push
push
xor
pop
mov
jp
add
mov
daa
out
arpl
adc
jle
outs
or
adc
and
dec
out
add
aas
out
cmp
outs
inc
sub
inc
scas
rol
xor
loope
pop
inc
jae
dec
xor
xchg
(bad)
xchg
cdq
xor
pop
test
mov
data16
or
push
je
adc
and
fs
sti
fucomi
push
js
ins
outs
bound
cmp
inc
push
in
cmp
jb
rdmsr
adc
xor
add
jb
cmp
mov
shl
ret
inc
xor
xor
and
loop
mov
xor
dec
dec
inc
cmp
adc
(bad)
push
xor
and
das
sub
out
mov
mov
inc
leave
pushf
and
fisttp
and
(bad)
retf
cmp
cwde
std
ins
and
arpl
mov
inc
sub
(bad)
fldcw
loope
outs
pop
aam
gs
adc
xchg
mov
cmp
sub
popa
out
outs
dec
ret
and
add
push
xchg
and
mov
(bad)
sub
mov
cmps
fs
push
call
dec
(bad)
cmp
inc
sbb
(bad)
mul
sbb
and
ins
dec
rcr
push
xchg
sbb
pusha
fst
mov
ret
ficom
data16
outs
adc
fisub
jae
or
popf
or
cmp
mov
jno
je
pop
push
shl
in
push
push
lods
pop
ins
das
xor
and
int3
push
or
push
popa
loop
xor
adc
jnp
xor
bound
push
mov
jg
fs
push
adc
and
inc
inc
push
loop
movs
pop
jo
jae
inc
jbe
mov
dec
push
gs
fs
sub
jns
jne
loop
mov
adc
ror
jae
lods
xchg
cs
push
stos
sub
push
adc
pop
and
add
adc
fcomp
sub
sub
add
aad
enter
jge
add
rcl
repz
push
outs
adc
add
stos
nop
clc
xchg
fistp
or
das
push
jb
je
gs
popa
das
mov
je
add
bound
call
push
or
xor
push
dec
inc
push
dec
inc
rol
inc
pop
loope
push
adc
jbe
jns
push
lods
add
xchg
and
imul
and
scas
and
inc
push
int
loopne
xlat
or
and
and
enter
add
jne
ins
(bad)
jae
sub
cmp
push
pop
and
test
repz
shl
add
xor
enter
dec
rol
cmp
xor
sub
or
cdq
int
lods
or
cmps
lea
adc
pop
or
add
push
add
or
jl
and
(bad)
lods
pop
call
inc
imul
inc
pop
pop
push
add
inc
inc
enter
shl
mov
mov
add
repnz
repnz
ins
add
adc
sub
pusha
adc
pop
out
rcr
push
inc
push
dec
cs
push
ficom
push
or
retf
or
lea
ja
pop
and
movs
sahf
outs
(bad)
pusha
pop
mov
pop
jecxz
dec
pop
stos
pop
cmps
jne
cdq
shr
lahf
fcom
bnd
add
jge
das
jmp
dec
gs
jmp
add
in
pop
xor
xchg
inc
das
shr
xor
cs
jl
ret
inc
cmp
inc
add
mov
aad
ja
push
cs
movs
pop
inc
sub
dec
xchg
cmpxchg
mov
inc
jge
adc
add
jge
cmp
jns
jo
inc
loope
cmp
dec
aaa
xor
mov
xor
cld
cwde
add
mov
add
xor
sub
jns
int3
jo
stos
aad
das
fidivr
shl
jmp
jle
or
add
jo
das
inc
fs
sub
add
add
inc
ds
rol
rol
jo
xor
rol
jnp
shr
iret
imul
pop
adc
and
sub
lods
pop
push
scas
fs
mov
mov
add
push
mov
push
and
pusha
adc
jmp
add
je
sub
inc
iret
and
rol
pop
fucomi
repz
sbb
mov
stos
cmp
push
or
cmps
imul
inc
mov
cli
and
push
mov
adc
sub
xor
mov
xor
inc
push
inc
adc
loopne
cmp
inc
add
inc
inc
add
add
pop
aaa
add
(bad)
dec
jo
xchg
out
push
inc
or
jmp
xor
or
pusha
sub
add
icebp
cli
xor
rcl
ins
fisttp
mov
jae
or
or
sbb
(bad)
jae
or
int3
mov
lahf
pop
pop
inc
or
into
ins
ins
js
push
mov
sahf
ja
xor
xor
xlat
scas
mov
cmp
imul
mov
push
aas
xor
mul
xchg
pop
mov
pminsw
ds
inc
nop
lea
mov
ja
pop
xor
pop
aaa
push
pop
aas
push
ins
in
push
cwde
fmul
ins
stos
fs
movs
aaa
sahf
mov
outs
fild
das
xor
pop
pushf
cmp
inc
inc
push
outs
bound
pop
pop
sub
jmp
cs
pop
pop
dec
sub
pop
rol
nop
jo
or
adc
and
xchg
pushf
outs
outs
xor
rdtsc
xchg
inc
mov
test
lock
ja
inc
retf
jae
mov
dec
and
mov
mov
sbb
push
dec
xor
pusha
es
retf
outs
int3
dec
(bad)
fidiv
and
push
outs
loopne
xchg
and
aam
pop
cmp
push
xor
lods
inc
add
add
loope
out
add
and
aaa
div
mov
xor
mov
repz
(bad)
xchg
xchg
lock
(bad)
jo
and
(bad)
push
(bad)
add
jo
inc
mov
mov
mov
movs
dec
bound
rcl
(bad)
cmp
or
ret
push
push
fist
cmp
add
xor
ss
jecxz
(bad)
mov
movs
cmp
cmps
cmp
xchg
ins
inc
push
inc
pop
scas
xchg
mov
pop
in
jg
pop
maxps
aam
lahf
scas
test
nop
js
push
push
or
jbe
bound
and
xor
pop
add
and
je
fild
cdq
add
xchg
cmp
mov
pop
sbb
cmps
jb
jmp
add
aas
push
adc
jbe
mov
fdiv
mov
aas
inc
or
mov
addr16
ins
add
das
test
popa
dec
in
add
rcr
sbb
cmps
or
fs
or
outs
retf
arpl
dec
or
pop
or
push
sbb
ret
mov
sbb
adc
cmp
adc
mov
pop
sbb
cmp
push
imul
mov
and
jecxz
test
pop
sbb
lock
je
and
loop
and
stos
movs
adc
push
ficomp
sbb
pop
cmps
dec
sbb
pop
rcr
mov
inc
mov
retf
inc
push
gs
sbb
pop
adc
dec
mov
sub
out
jb
jg
push
dec
sbb
iret
mov
xor
inc
sbb
add
jno
es
pop
push
push
inc
repz
dec
ja
in
in
std
pushf
add
sub
inc
or
pop
push
lods
cs
shl
cmp
loop
adc
or
jecxz
push
(bad)
rol
arpl
push
xor
xor
jmp
push
data16
mov
bound
(bad)
pop
mov
adc
add
stos
mov
sbb
scas
sub
pop
jle
arpl
xor
or
sub
push
jmp
outs
(bad)
inc
add
cmps
adc
push
adc
and
mov
inc
mov
add
pop
arpl
adc
jecxz
(bad)
enter
and
lea
cmp
mov
pop
imul
mov
das
push
inc
sub
adc
push
outs
jae
sub
dec
inc
scas
das
inc
sub
adc
mov
xchg
dec
retf
test
add
xchg
sar
jbe
inc
xor
xor
lods
pop
fidiv
addr16
addr16
xor
arpl
mov
xchg
popa
pop
pop
jl
je
sbb
xor
mov
not
mov
and
add
shl
aaa
out
add
push
pusha
add
call
cmp
cmp
pop
adc
das
dec
or
push
lock
mov
inc
or
xchg
mov
movs
mov
push
lahf
adc
add
push
push
or
and
push
mov
das
xchg
pop
or
dec
jmp
dec
lods
push
jae
add
pop
add
sbb
les
arpl
mov
aas
pop
cs
test
and
push
jb
adc
adc
stos
add
or
mov
hlt
movs
push
sbb
add
add
mov
push
in
or
(bad)
div
lahf
add
loopne
mov
sbb
sub
sahf
push
or
push
out
xor
arpl
add
and
cmp
mov
xor
push
call
push
push
fidivr
mov
adc
inc
pop
and
adc
jne
add
xchg
add
ins
fwait
add
adc
fwait
jo
pop
mov
push
and
mov
xchg
sub
xchg
mov
and
add
inc
call
pushf
pusha
inc
push
push
pop
dec
inc
and
cmp
arpl
clc
out
jl
or
sub
popa
ins
sub
xchg
or
xchg
and
sar
and
mov
jbe
cmp
and
inc
add
xchg
xor
(bad)
cmp
sub
popa
imul
ins
jb
aaa
jbe
mov
adc
sub
lock
inc
xchg
ins
jne
loop
daa
pusha
sub
xor
cmp
jbe
das
sub
mov
adc
das
xor
cmp
outs
nop
jg
sub
sub
and
scas
test
imul
retf
and
mov
or
inc
push
jae
(bad)
pop
call
dec
jl
icebp
xor
jae
jmp
add
ss
cmp
jb
pop
xchg
xor
or
and
xor
push
cmp
jo
xchg
inc
fs
xchg
and
dec
ins
aaa
sbb
push
jo
imul
test
sub
ins
and
ins
and
add
iret
and
scas
dec
dec
mov
sbb
jbe
es
inc
popa
add
xor
push
mov
xchg
add
mov
push
jae
ret
daa
pop
int3
test
mov
add
enter
addr16
shl
pusha
ret
xor
pop
arpl
jne
xchg
cdq
adc
mov
xor
add
dec
inc
mov
adc
loop
jmp
inc
push
dec
push
push
and
inc
push
inc
inc
dec
dec
repnz
es
aad
push
adc
pop
and
sbb
pop
sub
dec
rol
jmp
gs
pop
ror
cmp
inc
push
and
dec
and
hlt
sub
inc
jns
fs
loop
dec
add
adc
fdiv
test
mov
inc
enter
sub
cmp
popf
mov
adc
pop
rcr
aas
addr16
jne
xchg
fidivr
std
stos
and
sar
adc
shl
jge
(bad)
fadd
or
xchg
dec
dec
cmp
or
daa
rol
jns
mov
or
ins
int
shr
popa
addr16
fs
add
shl
das
imul
push
invd
cmp
loope
inc
sub
loopne
scas
and
es
sub
jge
imul
fcom
push
pusha
lods
rcl
stc
ja
popa
or
out
aaa
cmp
sbb
dec
ror
call
jns
jnp
jbe
stos
jg
or
xchg
mov
mov
loopne
xchg
sub
adc
pop
jo
sub
jnp
or
sub
dec
xor
push
ins
or
imul
je
sbb
and
test
or
fwait
pop
mov
pop
dec
push
xchg
xor
pop
jo
gs
add
pusha
call
xor
mov
fwait
(bad)
in
push
(bad)
xchg
nop
dec
int3
inc
mov
cmp
test
pop
adc
add
dec
mov
mov
push
arpl
inc
cwde
mov
mov
mov
xlat
add
nop
test
pop
xchg
xchg
xlat
lods
enter
test
inc
(bad)
fist
outs
xlat
aam
pop
je
(bad)
push
adc
push
popa
push
cwde
or
jb
sbb
mov
sar
pop
pop
call
jo
lock
in
dec
sbb
add
sub
mov
push
shl
xchg
add
sub
out
jmp
imul
cs
outs
pop
in
jmp
addr16
sub
mov
and
leave
mov
imul
in
sbb
cwde
bound
add
je
popa
cmp
push
jo
ins
xor
sbb
xchg
pusha
inc
or
fwait
pop
aas
xchg
lods
inc
sbb
scas
mov
mov
push
dec
mov
icebp
daa
xor
ret
into
push
pop
sbb
mov
and
arpl
mov
xchg
pop
push
call
and
mov
sbb
and
adc
jl
add
pop
sub
jo
(bad)
iret
pusha
aaa
dec
add
add
jae
cmps
fwait
ret
pop
jge
add
sub
mov
lods
pushw
pop
and
adc
addr16
pushf
inc
ins
adc
or
push
xor
inc
or
push
in
dec
dec
add
pop
fdivr
sar
pop
ja
outs
sbb
mov
mov
inc
test
fimul
fwait
inc
cmp
rcl
in
bound
dec
add
aas
dec
or
pusha
into
pop
mov
inc
rol
xor
inc
push
arpl
retf
push
and
sub
(bad)
mov
and
js
mov
push
sbb
mov
in
add
sub
ret
adc
fadd
sub
imul
sub
aam
mov
(bad)
in
inc
xchg
fs
inc
and
ret
xlat
loope
and
mov
enter
xor
arpl
outs
mov
fcom
push
fcomp
lods
arpl
pop
sbb
fdiv
adc
add
mov
add
sub
xchg
inc
dec
adc
inc
fld
sub
dec
lea
add
xor
pusha
pop
mov
mov
xor
and
lds
xor
pop
mov
aas
push
ret
add
jbe
mov
sbb
scas
ror
cdq
aaa
xlat
pop
sub
push
arpl
inc
or
outs
mov
ds
jg
jg
stos
lea
and
rcl
sub
and
xchg
fistp
ss
cs
jo
mov
and
and
mov
sub
or
addr16
sbb
cs
or
imul
push
mov
shl
std
mov
inc
dec
adc
mov
(bad)
cmp
fidivr
jne
mov
mov
test
sbb
adc
or
lds
adc
pushf
cmp
in
mov
sub
dec
sar
xchg
je
pop
mov
push
dec
pop
push
fwait
ins
push
lods
aas
add
cmp
xchg
push
iret
push
dec
inc
sub
pop
jbe
sub
cmp
ficomp
jge
dec
push
sub
test
mov
mov
xor
inc
and
(bad)
cwde
jne
aaa
adc
ja
scas
push
mov
mov
jne
adc
mul
cmp
out
(bad)
shl
cs
dec
push
push
inc
inc
add
(bad)
in
dec
push
dec
test
mov
outs
pop
adc
js
mov
lds
jbe
pop
js
sub
dec
jne
dec
movs
and
shl
iret
mov
jne
dec
inc
inc
inc
adc
pusha
and
push
push
add
or
push
sub
cs
lock
sub
xor
sub
push
mov
push
jge
int3
adc
sbb
arpl
sub
or
cdq
push
adc
xor
add
movs
aaa
pusha
mov
mov
pop
inc
cs
bound
lds
jnp
fld
rcl
cmp
add
or
sahf
add
xor
dec
inc
pop
xor
xchg
sub
inc
adc
and
outs
and
xchg
mov
movs
movs
cmp
xor
loope
mov
es
jo
lods
loope
in
fldenv
test
pop
or
fisub
xor
and
adc
add
pop
scas
pop
xor
pop
fild
mov
ins
dec
das
in
cmps
mov
cli
mov
daa
ins
xchg
outs
and
sar
add
lods
arpl
sbb
retf
iret
pusha
add
and
loope
push
xor
sub
xor
adc
mov
cmp
pusha
cmp
xchg
ja
lds
sbb
xor
in
imul
int
fdiv
int3
dec
inc
loop
aas
xor
dec
popaw
sti
(bad)
fst
(bad)
je
ja
mov
push
push
inc
push
inc
pop
dec
inc
dec
or
cmp
pop
and
jo
push
lods
dec
sar
outs
mov
fdiv
lds
shl
fbld
sbb
sbb
xchg
xor
inc
mov
ja
gs
push
data16
jae
sti
mov
and
inc
xor
push
out
dec
int
push
cld
fnstenv
ss
jbe
mov
ins
fist
jb
push
sbb
and
loope
or
sti
ret
adc
arpl
lea
sub
fadd
pop
pop
les
pop
push
push
jno
push
sub
cmps
test
jne
add
jae
inc
loop
pop
and
scas
fistp
lods
or
sti
repz
dec
inc
push
inc
imul
mov
mov
mov
stos
push
ja
or
pop
xor
ins
ror
mov
or
imul
ror
(bad)
xlat
test
jo
pop
push
push
pop
pushf
inc
rcr
push
xchg
test
test
and
sub
sub
push
adc
add
or
stos
pop
(bad)
jecxz
out
inc
jmp
mov
xor
xlat
addr16
daa
bound
(bad)
xchg
fild
sbb
push
push
lds
and
or
add
adc
pop
or
push
pop
shl
test
lock
add
push
cmp
cmp
icebp
icebp
enter
xchg
push
sbb
iret
daa
dec
or
das
and
inc
push
xchg
mov
sbb
mov
(bad)
ins
enter
arpl
loope
sub
pop
pop
or
dec
mov
inc
xlat
arpl
aas
xor
(bad)
dec
sbb
lahf
jg
inc
or
or
pop
jae
or
rcl
mov
aas
jne
add
or
add
pusha
mov
mov
pop
push
push
setp
sub
imul
push
cmps
(bad)
lds
ins
aas
xchg
lds
outs
les
mov
cmp
mov
mov
in
and
daa
cmps
mov
push
dec
scas
inc
ret
daa
sub
xchg
pusha
fbstp
and
sbb
call
in
loope
not
mov
jle
pop
mov
pusha
or
daa
iret
sbb
or
mov
xchg
pop
dec
movaps
les
xor
mov
mov
add
mov
pop
mov
aaa
pop
push
clc
cmp
fisubr
call
and
xchg
mov
or
or
or
xchg
ficomp
inc
adc
pop
sub
push
dec
mov
add
mov
str
outs
int
xchg
sub
push
xchg
fisttp
inc
inc
and
xor
mov
outs
aaa
pop
adc
add
xchg
lahf
inc
cmp
mov
sub
cmp
xlat
pop
push
dec
test
ret
ins
jbe
xor
mov
arpl
mov
sar
inc
bound
mov
cmps
and
retf
pop
mov
push
fild
cwde
cwde
or
ret
and
jne
inc
cmp
mov
jmp
add
and
loopne
xor
sub
pop
(bad)
xor
mov
xor
sahf
sbb
add
add
nop
inc
dec
mov
popa
pop
adc
popf
adc
mov
mov
jmp
sbb
xor
jmp
ins
es
jb
popa
jae
ins
add
(bad)
fstp
mov
inc
jnp
inc
add
shl
xor
movs
ret
xor
jmp
mov
add
sub
stos
(bad)
jnp
mov
push
pop
pop
das
pop
adc
or
shl
cmp
sub
cmps
(bad)
(bad)
xchg
fbstp
adc
arpl
rsm
enter
mov
aad
cmps
imul
xchg
add
jo
xor
add
dec
dec
push
dec
stos
lods
mov
inc
push
aas
xor
inc
dec
(bad)
pop
add
pop
fcom
dec
and
fidivr
adc
neg
aas
loope
add
daa
inc
cmps
push
inc
stos
lods
inc
jl
aaa
inc
mov
inc
cmp
addr16
adc
mov
mov
popa
push
mov
dec
push
pop
add
iret
mov
call
inc
ins
xor
mov
inc
add
adc
inc
sbb
cmp
xor
and
bound
adc
inc
mov
(bad)
sbb
mov
pusha
sub
jmp
nop
les
(bad)
sbb
dec
sbb
xor
push
pusha
loop
add
xchg
cvttps2pi
mov
and
outs
and
jmp
push
out
add
(bad)
pop
les
daa
or
pop
mov
cmp
ret
les
cmps
and
adc
mov
imul
add
jmp
or
push
daa
xchg
(bad)
cmps
and
arpl
add
xchg
and
inc
inc
pop
xlat
int3
and
add
xlat
out
cmp
(bad)
sub
xchg
pop
addr16
sti
call
fdivr
xor
xor
xchg
dec
xor
or
sub
ja
out
mov
and
es
or
stos
jne
cmp
sbb
pop
shl
scas
inc
mov
scas
add
xchg
arpl
sub
arpl
mov
ja
sub
mov
rcl
and
push
and
pop
pop
adc
test
or
and
call
push
and
out
and
out
pop
add
dec
push
test
inc
(bad)
adc
xor
push
gs
xchg
push
stos
and
jae
test
pop
jg
push
xchg
cs
and
dec
and
push
push
movs
cmp
push
xor
nop
mov
sub
iret
ja
adc
add
out
outs
call
and
xor
cmp
sbb
jo
dec
and
add
(bad)
pop
mov
sub
and
adc
inc
pushf
dec
es
pop
mov
nop
adc
xchg
mov
ror
and
cmp
add
pop
mov
cmp
imul
mov
xor
adc
xor
(bad)
sar
iret
lea
aaa
and
fistp
jp
adc
fs
push
imul
popf
pop
xchg
mov
aaa
das
dec
push
xchg
pop
mov
push
neg
shl
aaa
inc
and
or
or
fs
pusha
(bad)
jb
push
dec
inc
lahf
inc
in
xchg
mov
div
push
push
or
mov
imul
mov
xchg
and
push
mov
cmps
daa
das
sub
mov
loop
push
das
ja
and
mov
inc
adc
rcl
aaa
inc
mov
pusha
cmp
ret
dec
loop
add
cmp
addr16
out
int
cmp
push
inc
lods
xor
cmp
adc
cli
mov
sub
mov
add
data16
out
test
cmps
push
sbb
add
sbb
cmp
daa
popa
xchg
rcr
repz
dec
push
adc
xchg
rol
push
sbb
retf
and
mov
fild
sbb
aaa
mov
addr16
pop
scas
mov
add
xor
scas
sub
and
or
inc
add
and
cmps
inc
xchg
data16
push
sub
pop
les
daa
or
bound
xchg
mov
inc
dec
or
sub
add
imul
adc
pop
add
movs
(bad)
and
stos
push
and
inc
lea
mov
sub
out
mov
jbe
pop
add
add
jmp
bound
jae
lahf
xor
mov
das
fs
ins
pop
push
xchg
mov
jecxz
and
sbb
sub
xor
mov
mov
xor
(bad)
mov
mov
sbb
dec
xor
adc
outs
pop
(bad)
mov
add
sbb
das
pop
(bad)
fdivr
jae
je
pop
rcr
fwait
lds
jae
push
ret
lods
lods
(bad)
jae
pop
sub
fadd
inc
xor
xchg
daa
add
mov
mov
push
(bad)
push
imul
push
out
and
dec
push
and
pop
and
arpl
add
ficomp
push
push
xchg
push
push
pop
ins
jno
ja
js
or
out
je
loop
mov
data16
test
sub
mov
dec
push
sbb
push
scas
lods
rol
retf
ja
pop
inc
sub
scas
add
je
sub
ins
push
adc
mov
push
or
xchg
xor
mov
mov
add
pusha
adc
xchg
xor
mov
nop
sbb
dec
add
popa
jae
sbb
fiadd
xor
inc
sub
sbb
adc
movs
loop
jae
pop
stos
enter
push
dec
test
fist
and
push
xor
and
push
dec
xchg
punpckldq
add
mov
pop
xor
das
fistp
pop
mov
iret
inc
ror
adc
xlat
arpl
out
mov
or
xor
pop
rol
sub
pop
cmp
pop
xchg
stos
rol
cmps
fistp
mov
movs
inc
scas
ss
pop
push
outs
pop
mov
or
retf
mov
dec
outs
xor
loopne
mov
and
jmp
sti
push
and
stos
pop
(bad)
aaa
xchg
rol
pop
stos
push
or
add
lock
mov
aad
or
iret
(bad)
mov
bound
das
das
aas
pop
mov
in
dec
pop
das
and
xor
call
pop
ins
fistp
xor
fcomp
mov
loopne
dec
push
invd
outs
mov
push
xor
sub
or
pop
push
pop
push
adc
sti
xchg
getsec
mov
loopne
xlat
and
das
push
(bad)
dec
(bad)
or
cmps
das
ficom
pop
xor
fadd
jg
mov
out
jmp
push
cmp
adc
das
xchg
mov
push
inc
jmp
add
fld
dec
sub
mov
push
push
add
push
repz
call
add
(bad)
mov
mov
inc
add
pop
pop
jo
pop
fisub
mov
add
add
pop
and
add
mov
jecxz
in
add
cmp
imul
mov
inc
pop
cmps
sub
xor
cmp
outs
push
add
sub
lock
ds
or
jae
push
push
icebp
and
ret
xchg
ins
popa
inc
dec
bound
mov
xchg
or
push
aaa
out
sbb
inc
pop
push
lahf
mov
out
ss
add
jo
clc
call
sahf
enter
repz
fwait
pop
add
pop
nop
sahf
out
iret
jg
inc
(bad)
(bad)
push
out
(bad)
(bad)
(bad)
call
cmc
scas
adc
imul
sar
fs
fnstenv
cmp
cmp
inc
pop
rcl
and
push
data16
int3
repz
pusha
pop
loope
pop
movq
sahf
adc
(bad)
push
pop
das
iret
shr
mov
wrmsr
or
rcl
daa
daa
daa
pusha
and
pushf
fdivr
inc
loopne
iret
cmp
mov
(bad)
push
cmp
daa
daa
js
rcl
jb
repnz
mov
jb
jb
mov
sahf
out
jb
push
unpcklps
pushf
pushf
pushf
fdivr
sub
pushf
pushf
pushf
pushf
or
pushf
pushf
pushf
add
inc
call
or
pop
sbb
xchg
xchg
xchg
out
push
jl
cmp
pop
jmp
cmp
cmp
cmp
cmp
add
cmp
cmp
mov
cmp
cmp
or
cmp
cmp
movs
add
cmp
pop
pop
sbb
cmp
cmp
cmp
aam
push
cmp
cmp
mov
mov
cmp
cmp
add
xchg
out
add
jbe
xchg
xchg
xchg
ss
pcmpgtd
lods
push
xchg
in
or
xchg
xchg
xchg
push
pushf
arpl
mov
xchg
fcomp
aas
outs
cs
fsubr
mov
dec
scas
cwde
test
cld
add
push
call
cmp
jno
xchg
xchg
or
ret
xchg
xchg
xchg
xchg
mov
cmp
xchg
nop
xchg
xchg
or
sar
cmp
mov
or
cmp
mov
inc
pop
mov
inc
add
in
fs
retf
dec
dec
dec
and
inc
dec
dec
inc
jmp
call
fisubr
in
in
mov
dec
cs
push
adc
in
in
jae
(bad)
dec
dec
dec
arpl
cmps
add
dec
dec
add
in
in
sbb
dec
cmp
imul
in
sub
in
dec
not
cmp
mov
xchg
xchg
xchg
or
scas
nop
xchg
xchg
xchg
pop
xchg
or
cmp
nop
xchg
xchg
jg
fisubr
leave
in
jbe
das
mov
pop
push
loope
dec
inc
inc
xor
and
leave
inc
xchg
rcl
xchg
dec
mov
adc
inc
xor
test
and
fldenv
stc
xchg
dec
and
lds
in
aad
xchg
dec
and
cmc
leave
inc
xor
lods
xchg
dec
and
in
popf
adc
inc
xor
mov
and
xor
and
shl
repz
dec
es
mov
cdq
(bad)
dec
es
mov
cdq
dec
cmps
out
es
mov
cdq
mov
es
mov
out
and
es
mov
addr16
aas
push
pandn
adc
iret
rcl
add
out
push
inc
pop
inc
jg
jns
cmps
repnz
pop
add
test
push
or
cdq
push
sahf
cmps
push
add
push
cmp
sbb
xchg
inc
push
popa
pusha
push
sbb
fs
xor
xchg
xchg
inc
inc
or
add
fist
dec
ja
xor
fdiv
xor
iret
test
cmps
add
add
sub
mov
add
xchg
mov
sub
mov
and
ins
in
mov
in
not
or
or
or
mov
sbb
imul
cmp
cmp
add
cmps
jecxz
pop
in
and
test
add
add
sub
(bad)
pop
dec
out
sbb
xor
cmp
outs
mul
icebp
xor
(bad)
rol
call
pop
movs
or
mov
mov
push
pop
pop
daa
daa
daa
daa
or
or
out
es
daa
or
add
(bad)
(bad)
jmp
push
out
mov
les
(bad)
hlt
push
xor
xchg
fs
xor
fdivr
(bad)
(bad)
call
jmp
rcl
mov
sub
mov
sbb
(bad)
(bad)
(bad)
dec
mov
test
ficomp
jmp
(bad)
mov
hlt
mov
imul
(bad)
jp
(bad)
std
in
leave
mov
add
ins
push
arpl
psubd
or
outs
cmp
imul
pusha
aad
jno
mov
inc
aam
dec
std
test
movs
cli
test
xor
(bad)
(bad)
(bad)
call
leave
mov
lods
jecxz
fdiv
jne
fild
or
shr
cmp
ficom
(bad)
(bad)
inc
popa
sar
and
mov
cdq
xchg
mov
mov
or
(bad)
push
jmp
outs
das
adc
stos
sbb
data16
inc
fdiv
jno
add
(bad)
(bad)
(bad)
mov
adc
out
mov
mov
movs
in
lahf
xor
mov
js
stc
call
xchg
sbb
push
(bad)
(bad)
(bad)
jg
cmp
fs
add
hlt
push
imul
ins
sbb
xor
dec
add
in
xchg
push
fs
(bad)
jmp
add
shl
adc
cmc
(bad)
fnstenv
dec
mov
jmp
cld
fistp
ficom
gs
aam
pop
popa
mov
(bad)
jg
dec
into
pop
cmp
mov
inc
movs
fisttp
xchg
fadd
(bad)
shl
hlt
(bad)
shr
imul
mov
sar
add
in
add
pop
dec
or
leave
jl
fnstsw
add
daa
adc
or
and
test
or
mov
(bad)
call
stc
ficomp
leave
fldcw
and
xlat
(bad)
pop
cmp
mov
cmp
(bad)
(bad)
(bad)
jmp
cmp
or
mov
call
jmp
fild
(bad)
(bad)
inc
or
test
fs
ds
or
or
push
in
dec
xchg
daa
scas
(bad)
(bad)
push
mov
pop
jge
xchg
(bad)
shl
add
inc
push
imul
gs
(bad)
(bad)
inc
out
imul
aam
loopne
ror
int3
dec
frstor
fistp
(bad)
(bad)
(bad)
dec
aad
mov
call
xchg
shl
push
repnz
addr16
(bad)
(bad)
(bad)
jmp
dec
ss
fisubr
or
scas
test
pusha
jp
inc
ret
out
pusha
fist
addr16
(bad)
(bad)
jmp
jns
imul
and
shr
ss
push
xchg
ja
int3
add
(bad)
(bad)
(bad)
(bad)
mov
das
es
lds
or
sub
mov
cmps
call
ret
sar
(bad)
(bad)
push
sbb
ret
es
pushf
mov
ins
add
ss
(bad)
call
pop
jb
push
les
jp
loop
sub
or
mov
(bad)
(bad)
call
xchg
or
out
fdivr
fisttp
aam
rol
clc
mov
push
int
call
pop
es
outs
ja
mov
out
cli
jo
ud0
cmp
pop
dec
adc
sahf
gs
clc
sar
imul
push
js
or
(bad)
(bad)
(bad)
call
dec
ret
cmp
cmps
not
pusha
ror
imul
push
scas
fcomp
fcos
(bad)
(bad)
jmp
fild
cmp
aaa
push
scas
mov
fidivr
mov
jmp
repnz
retf
(bad)
push
xchg
mov
cmps
mov
sar
sub
push
mov
jp
mov
dec
popa
les
(bad)
(bad)
inc
sbb
xchg
sub
aaa
mov
or
sbb
add
sub
dec
ins
cmp
add
cwde
pop
add
aaa
imul
sub
das
cmp
xor
mov
inc
test
ret
fs
dec
je
cmps
fnstenv
jae
ss
fimul
ins
jae
push
dec
lods
mov
clc
or
bound
nop
mov
aam
jnp
add
out
mov
fsub
inc
xchg
fcomp
pop
add
inc
(bad)
aas
ins
add
and
sbb
jg
bound
mov
sub
jo
pop
jne
jnp
leave
pop
mov
adc
adc
xlat
hlt
pop
add
jecxz
fbstp
mov
mov
add
add
push
fidivr
imul
cs
imul
sub
inc
push
push
addr16
mov
mov
ins
push
outs
fnstsw
gs
outs
leave
das
(bad)
jg
pop
pushf
add
add
(bad)
fild
push
mov
inc
xchg
adc
sub
rol
pop
add
push
and
or
ret
pop
jae
test
neg
lea
cmp
in
xchg
mov
scas
cdq
mov
and
mov
imul
or
bound
jo
(bad)
and
cmp
add
mov
pop
das
push
pop
xor
cs
aas
xor
sub
pop
add
inc
js
pop
and
jae
and
jae
nop
mov
les
fnclex
sbb
and
sub
xor
or
mov
dec
mov
xchg
and
and
inc
add
jno
retf
in
fstp
pop
sbb
adc
jne
mov
mov
mov
std
test
(bad)
mov
adc
push
sbb
inc
mov
xor
cli
(bad)
outs
mov
add
sub
mov
and
add
iret
les
pusha
add
xor
imul
or
mov
dec
xor
inc
out
jmp
xchg
jo
push
mov
popa
dec
adc
pop
daa
sub
and
xchg
jae
adc
pop
inc
mov
jae
nop
jo
or
sub
dec
adc
das
jo
sub
mov
or
das
pop
sti
and
das
push
jmp
jb
loopne
jmp
rcr
fs
aaa
add
sub
xor
fist
inc
cmp
xchg
adc
call
add
xchg
push
sub
imul
mov
push
pop
mov
(bad)
out
sub
jl
xor
dec
jb
inc
add
bound
dec
add
add
inc
ret
sbb
js
dec
bound
pop
mov
jnp
and
rcl
rcr
xchg
shr
xchg
dec
test
push
imul
xor
retf
dec
fld
add
mov
or
scas
sub
xchg
add
push
stc
cmp
js
adc
cli
cwde
stos
jp
and
sti
retf
mov
push
or
mov
push
test
cmp
sub
inc
sub
xor
sbb
ret
rcr
fistp
inc
push
jns
inc
loopne
xor
rcl
xor
mov
xor
or
das
aas
movs
inc
xor
add
shl
popf
pop
into
cmp
mov
mov
test
movq
pop
rcl
loope
jns
adc
(bad)
and
and
imul
popf
or
dec
sbb
lahf
mov
mov
mov
mov
sahf
(bad)
movs
or
sbb
or
or
lea
mov
sbb
out
mul
or
mov
push
mov
pushf
and
loope
sbb
xchg
or
and
sbb
push
sub
pop
inc
test
inc
jae
ret
xor
fld
mov
stos
jo
push
pop
push
es
and
xor
add
add
sub
lock
fmul
inc
push
cmp
or
aad
mov
adc
jae
xor
mov
or
sub
fadd
xor
and
cmps
inc
pop
sub
push
dec
inc
push
mov
add
dec
push
push
sbb
cmp
test
stos
fiadd
cmp
xor
xor
sbb
pop
mov
adc
call
or
sub
xor
ds
sahf
call
sahf
push
jbe
lock
int3
or
mov
mov
dec
inc
dec
dec
add
and
pop
xor
ret
and
pushf
les
outs
retf
or
dec
dec
inc
inc
pop
push
mov
test
mov
sbb
push
add
les
jae
mov
cmps
and
aad
adc
cmp
fldcw
fucomp
les
xor
mov
mov
mov
adc
ret
inc
mov
inc
mov
sbb
and
push
push
scas
cld
or
push
lods
push
cmp
jne
inc
sub
dec
mov
or
leave
dec
inc
xor
adc
push
pop
xor
cmp
int3
pop
popa
mov
sbb
arpl
les
test
aas
les
sub
jmp
movs
pop
dec
inc
test
mov
dec
movs
add
int
sub
adc
push
outs
outs
iret
xor
test
cmps
inc
stos
mov
dec
pusha
xor
adc
mov
mov
add
(bad)
mov
pop
(bad)
cmp
sbb
dec
dec
dec
and
xchg
pushf
inc
and
add
inc
pop
xchg
pusha
xor
add
and
xor
ret
and
das
xchg
or
inc
xchg
adc
sbb
or
or
pop
xchg
or
int
lea
or
mov
mov
mov
aaa
sub
and
cmps
or
or
push
xor
ror
cs
loope
popa
or
arpl
mov
cmp
(bad)
xchg
cwde
sub
mov
fisub
add
add
mov
jnp
ss
test
and
loop
scas
or
jmp
or
lahf
xchg
and
mov
call
add
pop
scas
and
sub
or
shr
sub
add
and
lods
sub
jmp
or
jg
jge
aam
push
sbb
push
jmp
lds
test
add
jnp
xor
icebp
mov
loope
inc
daa
ja
or
or
mov
mov
adc
add
cmp
lea
mov
sbb
or
mov
pop
or
push
(bad)
xlat
xchg
cmp
call
mov
push
mov
inc
lahf
push
mov
cmp
push
aam
popa
or
stc
and
mov
adc
ja
ja
jne
fmul
push
and
jne
pusha
arpl
inc
pop
in
out
jb
xor
cmp
xchg
movs
imul
inc
ret
lahf
cmp
adc
cmp
daa
jns
mov
sbb
dec
and
xor
push
call
ins
sbb
mov
push
push
pop
push
add
dec
xchg
mov
data16
arpl
(bad)
or
add
lds
jbe
and
inc
jnp
xchg
and
jo
jns
mov
and
push
sbb
nop
test
sub
dec
dec
sbb
jnp
jae
inc
sbb
or
add
adc
jnp
sbb
arpl
mov
test
sub
aad
imul
xor
gs
or
xchg
mov
push
test
mov
and
or
add
adc
test
xor
sbb
or
inc
mov
cmp
das
(bad)
inc
and
push
in
stc
xor
dec
or
js
push
das
js
ret
mov
cmp
arpl
jne
adc
mov
sub
gs
push
adc
mov
(bad)
mov
rol
push
inc
inc
and
dec
lods
mov
push
inc
or
or
and
stos
cdq
inc
sub
mov
xor
sub
aad
push
movs
mov
in
sub
je
xor
sbb
inc
or
jae
and
push
jno
push
inc
sbb
les
sub
cs
gs
push
or
mov
or
xor
and
out
sbb
sti
adc
movs
pop
test
dec
pusha
push
rcr
add
or
inc
imul
(bad)
inc
dec
ja
adc
dec
shl
test
(bad)
and
es
in
xchg
mov
das
and
mov
inc
or
cmp
and
aam
in
sbb
push
and
mov
rcr
sbb
xor
jle
xor
fwait
pop
ins
outs
jnp
imul
add
inc
in
cmp
push
mov
arpl
daa
test
inc
xchg
push
push
pop
jns
jnp
sub
xlat
pop
outs
pop
add
rol
jg
rol
or
mov
retf
and
leave
les
pop
pop
and
inc
add
jle
and
xor
test
mov
cmp
inc
inc
(bad)
imul
mov
inc
adc
lahf
xor
inc
adc
dec
cmp
call
dec
xor
add
push
adc
pop
(bad)
mov
popa
mov
ins
adc
pop
lahf
sbb
sbb
mov
dec
adc
dec
adc
mov
dec
pop
mov
inc
push
ins
mov
pop
adc
ret
sbb
ror
aaa
mov
push
les
pop
ja
jne
shl
dec
loope
or
and
push
in
fiadd
mov
dec
cmps
push
nop
mov
add
call
push
mov
mov
dec
xlat
out
pop
or
pop
call
jecxz
outs
mov
dec
lods
sub
mov
outs
outs
jne
pushf
mov
cmp
ficomp
push
jl
lea
dec
fdiv
push
mov
sti
sub
in
jge
outs
(bad)
outs
fst
pop
push
jae
mov
sbb
pop
inc
(bad)
jmp
jnp
sti
lods
dec
pop
imul
pop
add
xor
add
jae
ins
add
jae
lahf
xchg
pop
das
push
inc
lods
push
push
outs
outs
mov
das
dec
shl
cmps
pop
(bad)
push
add
and
test
lock
jg
inc
jmp
test
xlat
bound
scas
outs
add
jns
dec
mov
or
jae
fmul
sub
pop
aaa
cmps
and
test
mov
pop
pop
daa
jae
leave
mov
out
add
jo
div
je
adc
dec
dec
push
out
mov
lods
pop
stos
dec
push
xlat
test
xchg
xor
pop
add
jae
mov
add
mov
pop
ins
(bad)
pop
stos
jae
push
pusha
dec
jae
pop
mov
mov
das
xlat
sub
push
pop
cmp
nop
ficomp
xchg
jo
mov
pop
addr16
xchg
xor
jae
shr
lahf
sti
or
rol
xor
fcmovbe
and
addr16
cmp
add
mov
iret
jmp
iret
mov
popf
ss
lahf
out
pushf
movs
mov
pop
adc
fcom
mov
add
mov
aas
imul
push
mov
rol
dec
adc
inc
mov
or
fcomp
inc
push
arpl
das
xchg
or
mov
shl
rcl
mov
lods
push
mov
dec
mov
addr16
cmp
jg
or
popf
and
push
xor
or
pop
xor
push
push
dec
(bad)
bound
test
movlps
movs
push
(bad)
mov
or
fcmovne
push
stos
shl
jle
shl
or
dec
pop
push
dec
outs
and
add
daa
mov
mov
pop
pop
mov
addr16
push
add
sub
pusha
add
outs
or
cwde
mov
push
xor
xor
xor
and
out
bound
xor
stos
sbb
pop
and
loopne
adc
push
or
push
out
and
cli
outs
mov
push
xor
daa
mov
out
sub
or
in
jo
dec
sbb
test
movs
aas
push
mov
jns
cmps
pop
outs
(bad)
mov
dec
cmps
push
in
iret
jae
test
dec
cmp
test
pop
repz
shr
stos
jmp
sub
sub
cmp
scas
ins
repz
daa
mov
fs
es
mov
outs
ja
loope
(bad)
xor
mov
xchg
out
jb
out
mov
outs
iret
mov
arpl
mov
neg
loop
(bad)
mov
xlat
outs
dec
mov
push
in
jb
mov
hlt
pop
sub
push
jbe
mov
das
xor
mov
xchg
inc
mov
aas
das
es
pop
shl
jmp
test
ins
xor
daa
in
mov
arpl
fnstsw
pop
sbb
cwde
sub
and
inc
scas
movs
shl
inc
inc
lds
in
inc
inc
not
(bad)
dec
or
in
dec
out
dec
iret
fadd
dec
xchg
cdq
lock
or
xchg
pop
leave
mov
fist
mov
pop
enter
pop
addr16
shl
cmps
jne
enter
add
push
jb
push
jb
popa
popa
pop
jb
push
popa
popa
popa
rcl
gs
pop
jb
push
gs
pop
in
(bad)
imul
imul
adc
scas
in
iret
outs
outs
cdq
cmp
in
outs
xchg
push
outs
push
jb
sub
jne
aad
jbe
jne
jns
dec
fiadd
jns
das
pop
dec
out
or
jge
inc
shr
test
xadd
sbb
xchg
xchg
mov
das
pop
pop
dec
inc
inc
(bad)
(bad)
out
and
push
xchg
push
inc
push
sub
ins
nop
cdq
and
(bad)
jge
dec
(bad)
hlt
add
mov
add
push
clc
(bad)
sahf
jae
push
outs
pop
daa
and
inc
imul
jb
push
adc
push
pop
repz
dec
or
mov
pop
bound
add
pop
and
pushf
dec
movs
mov
push
pop
push
pop
push
pusha
aas
fiadd
adc
addr16
mov
fisttp
es
inc
add
idiv
add
nop
into
push
in
sub
push
and
es
or
popa
fild
add
fcomp
mov
cmp
movs
dec
add
retf
fcomp
lahf
int3
es
leave
sbb
add
cmps
cwde
int3
add
in
enter
inc
fsubr
in
ss
in
enter
sbb
mov
inc
push
repnz
xlat
pop
add
cmc
xor
fwait
sub
push
(bad)
jae
adc
mov
adc
xchg
aam
add
out
es
mov
push
and
pushf
inc
xchg
jns
in
imul
or
push
inc
xchg
sahf
adc
add
pushf
jb
out
lods
mov
rol
je
fisttp
icebp
in
mov
or
push
push
push
xor
sub
inc
ja
in
nop
int
lock
xor
cs
xchg
mov
dec
or
mov
mov
xchg
pop
cmps
fmul
xor
(bad)
cld
imul
inc
lock
sbb
mov
bound
push
lahf
mov
cmp
pop
push
js
push
out
push
outs
mov
fwait
shr
add
sub
jns
sbb
sar
adc
xchg
in
aas
(bad)
cld
add
fldcw
add
cwde
loopne
pop
xchg
cmps
neg
das
(bad)
push
andnps
lock
rol
xchg
out
pop
iret
mov
ins
cwde
push
ins
test
mov
neg
das
loope
ss
ins
fsub
ins
add
adc
jl
fimul
cmp
ins
xor
es
ss
maxps
mov
mov
ins
push
mov
ja
cmps
psubusb
mov
out
call
xchg
or
mov
bound
and
add
outs
cmp
sahf
mul
aas
outs
dec
push
pusha
jl
iret
(bad)
dec
pop
cld
add
clc
sbb
mov
xor
jb
loope
clc
xor
outs
aam
popa
rol
outs
in
fidivr
and
clc
dec
pop
outs
add
adc
and
cmps
ins
or
dec
outs
xchg
ins
and
inc
jno
outs
pusha
sahf
jo
add
add
lock
fdivp
mov
enter
aad
pop
add
mov
out
clc
jo
push
jb
pop
rcl
clc
je
js
les
inc
xchg
push
add
inc
lock
inc
les
shl
mov
jo
push
fdivp
or
add
es
jno
adc
clc
out
test
stc
or
inc
pushf
xchg
out
cmps
push
push
cmp
jnp
add
jno
push
mov
sub
out
cwde
inc
cwde
aas
pop
sub
jb
(bad)
and
add
push
aas
in
cmp
cmps
jb
pop
test
test
mov
push
test
pop
xor
mov
pop
add
push
sahf
clc
inc
es
pop
mov
fdiv
dec
enter
sub
push
dec
lahf
test
enter
in
mov
in
cld
ss
test
fsubr
repz
sbb
nop
dec
cld
enter
icebp
cdq
cli
je
dec
je
nop
pop
ins
in
push
xor
(bad)
je
jnp
in
aam
jo
aas
loop
add
(bad)
pusha
(bad)
jecxz
nop
ins
loopne
repnz
mov
pop
je
push
fdivr
cli
cld
out
aaa
inc
outs
xchg
sti
and
or
push
and
cs
jae
xchg
jne
cmp
sahf
or
fs
repnz
outs
add
sahf
aaa
pushf
push
mov
push
fwait
inc
ficomp
add
or
les
lock
jbe
(bad)
(bad)
aam
xlat
add
jbe
add
and
jbe
out
pop
push
or
mov
cmps
outs
add
fwait
sbb
add
cld
pop
out
xchg
rol
or
cmp
ja
ins
hlt
addr16
add
mov
js
fs
or
nop
pop
adc
mov
cmp
aas
ja
fisubr
cmp
pusha
add
dec
mov
cwde
push
movs
outs
and
add
movs
ss
es
add
neg
in
addr16
push
dec
in
int3
adc
fs
mov
cmp
dec
(bad)
outs
add
enter
adc
lods
jbe
adc
xchg
out
ins
xchg
cwde
xor
daa
std
add
sar
js
push
lock
cmp
add
lahf
loope
nop
int
jns
jns
push
inc
pop
cmp
ror
scas
xlat
jbe
cmp
out
repz
inc
daa
mov
aaa
cmp
xchg
test
mov
fist
inc
dec
(bad)
js
addr16
das
stc
xor
jns
js
xchg
nop
mov
cdq
loopne
(bad)
jp
jb
mov
xchg
xchg
pop
js
in
sub
js
ss
push
jp
push
pushf
addr16
iret
test
cmps
js
int3
pop
leave
jae
fdiv
enter
or
mov
inc
jnp
push
inc
cmps
loopne
scas
mov
add
pushf
xchg
out
test
jb
je
enter
test
in
sbb
pop
enter
fidivr
mov
inc
jl
push
cmp
pop
outs
push
jns
sub
mov
outs
adc
jg
imul
mov
dec
mov
add
scas
or
jmp
out
lock
in
add
inc
out
out
bound
lock
mov
cmp
ss
sbb
inc
pop
out
add
scas
test
push
cmps
dec
and
daa
or
inc
movs
aam
call
leave
ins
jns
in
or
add
add
pop
ss
add
enter
pop
jle
lahf
addr16
loopne
push
dec
cwde
es
jmp
nop
push
dec
xor
ja
mov
cs
aas
cmp
or
daa
dec
(bad)
jg
push
and
cmp
pop
leave
fadd
outs
xchg
and
cmp
fs
out
fcom
mov
test
daa
in
mov
xchg
int
cld
or
or
pop
enter
outs
cmp
or
add
test
js
mov
xchg
push
test
ja
add
push
ja
push
mov
fucomip
rol
lock
adc
mov
adc
and
push
xchg
and
cmp
and
add
test
movs
inc
pusha
mov
pop
mov
dec
cmp
jb
inc
movs
mov
icebp
cmp
test
jo
and
lahf
push
inc
hlt
ss
or
mov
xchg
and
push
jmp
inc
dec
mov
mov
sub
repz
in
add
sbb
pop
inc
enter
inc
sub
add
inc
rol
jb
pop
jbe
repnz
aas
nop
add
fcomp
xor
js
cmps
addr16
loopne
xlat
bound
enter
push
test
test
push
xor
sbb
loopne
rcl
loopne
push
imul
cwde
test
aam
pop
and
add
cwde
ss
es
(bad)
test
aam
lea
inc
lods
dec
out
test
push
inc
pop
dec
sahf
pop
pop
or
lahf
jl
scas
cmp
nop
lods
lahf
jl
cmp
shl
test
fsub
adc
clc
xchg
push
sbb
pop
add
aam
mov
jg
lahf
pop
push
push
test
jbe
mov
xchg
cmps
mov
push
call
pop
lds
or
dec
(bad)
lahf
repz
dec
lds
push
inc
cmp
add
lods
xchg
jns
add
mov
repz
push
push
mov
cmps
fidivr
addr16
pop
enter
ss
add
push
in
rol
push
adc
sbb
add
cmp
mov
mov
iret
add
cmp
repnz
mov
mov
call
or
dec
pop
adc
sub
mov
psubusb
cmp
(bad)
lds
nop
jo
mov
adc
daa
push
inc
mov
jl
adc
lds
push
mov
call
mov
cmp
mov
fadd
loopne
sub
inc
aas
in
movs
and
pusha
outs
jnp
ins
js
inc
xchg
inc
sahf
or
in
out
(bad)
enter
nop
test
hlt
mov
sbb
and
mov
xor
xchg
jns
jo
aam
mov
mov
ficomp
outs
push
mov
mov
xchg
inc
inc
mov
pop
(bad)
mov
mov
or
enter
mov
mov
inc
ins
xchg
jns
cmp
clc
and
adc
mov
ins
mov
dec
mov
loopne
call
mov
sub
loopne
mov
pushf
and
lea
mov
mov
repnz
dec
inc
add
pop
enter
stos
call
inc
mov
sub
xor
pop
jbe
(bad)
hlt
jl
je
js
pop
pop
(bad)
push
push
pop
jl
xchg
mov
movs
pop
mov
repz
and
push
push
enter
jle
xchg
or
dec
or
lock
(bad)
(bad)
dec
repnz
sbb
outs
aas
or
ins
div
cmp
jl
daa
inc
iret
enter
ins
xchg
push
mov
enter
inc
xchg
push
or
pop
mov
jnp
loope
or
nop
sbb
ins
test
sahf
out
add
popf
sbb
nop
es
cmps
nop
fs
je
fmul
push
jnp
in
mov
movs
mov
aas
pop
enter
movs
int3
mov
(bad)
icebp
in
(bad)
nop
cld
into
xchg
adc
add
mov
xchg
push
push
pop
ins
ins
and
outs
xchg
jns
scas
out
adc
jg
pushf
push
mov
aam
or
mov
xor
xchg
adc
aas
out
inc
test
push
push
sub
xchg
cmp
pop
jns
lock
rol
or
xchg
ss
mov
movs
pop
enter
xlat
xchg
fsubr
mov
stos
loopne
xlat
mov
xchg
sbb
mov
inc
pop
mov
iret
(bad)
fimul
mov
je
sahf
ja
test
mov
add
clc
xchg
ss
adc
ins
(bad)
adc
xchg
adc
fisubr
xchg
and
cmp
pop
inc
xchg
xor
(bad)
dec
xchg
call
push
rol
push
add
shr
xchg
je
loopne
and
cld
je
or
adc
div
iret
les
xor
cmp
or
push
xchg
fs
ins
aas
xor
(bad)
mov
call
xchg
inc
scas
ja
outs
xor
lock
and
xor
data16
xchg
inc
push
dec
daa
mov
sbb
jl
xchg
mov
mov
pop
or
cmp
shl
nop
xlat
sahf
loopne
xchg
enter
enter
xchg
sbb
sub
add
call
xlat
xchg
push
add
js
add
add
cmp
repnz
inc
mov
rol
mov
popf
nop
int
cwde
add
cs
jb
cwde
add
dec
pop
push
cwde
dec
aam
in
nop
cwde
test
aam
cs
cwde
lock
and
add
mov
wrmsr
outs
call
cdq
inc
xchg
mov
xor
sahf
aaa
cmp
inc
mov
adc
dec
add
pusha
mov
loopne
inc
in
mov
call
adc
and
mov
cmp
adc
lahf
call
(bad)
icebp
enter
cmp
jnp
xchg
cmp
jg
int3
push
fdivr
jbe
push
mov
dec
jg
sbb
adc
add
popf
fwait
and
punpckhbw
mov
ds
setnp
cmp
sub
push
pop
jb
pushf
lods
cmps
cmp
fwait
and
les
push
jo
lock
clc
xlat
les
mov
mov
(bad)
fimul
pop
push
pushf
sub
xchg
mov
fimul
call
jmp
pop
dec
pop
loopne
adc
(bad)
pop
fsubr
loope
call
dec
inc
movs
mov
aas
imul
popf
inc
cmps
mov
test
out
xchg
pop
enter
not
cmp
mov
in
rcl
aaa
push
out
mov
sub
push
addr16
popf
pusha
cli
mov
adc
sahf
and
inc
adc
(bad)
cmp
xchg
int
sahf
pusha
ja
jl
add
or
sahf
imul
out
fdiv
xchg
int
add
sahf
lods
adc
cmp
daa
lahf
adc
mov
push
inc
jb
data16
lahf
adc
test
mov
xchg
fs
pop
enter
mov
cwde
pop
enter
in
mov
add
or
push
and
dec
pop
(bad)
cmp
mov
xchg
cmp
mov
mov
mov
inc
ins
cs
hlt
mov
aad
pop
addr16
dec
fld
dec
and
pop
scas
clc
sbb
xchg
adc
outs
pop
ss
push
mov
dec
mov
mov
in
pop
enter
add
dec
add
cs
outs
xor
and
push
fs
out
dec
mov
add
nop
push
movs
xlat
mov
shl
cmp
mov
sbb
or
add
repz
ss
mov
movs
or
movs
fwait
adc
jbe
fsubrp
(bad)
pop
push
and
and
out
mov
enter
inc
ss
movs
(bad)
addr16
sub
ja
cmp
push
data16
jl
iret
mov
add
movs
nop
push
pushf
xchg
pop
add
mov
sub
scas
lods
ja
js
daa
nop
sub
lock
or
test
daa
movs
loopne
mov
movs
dec
push
pop
out
push
mov
movs
loope
lods
push
inc
cmp
int3
imul
jmp
mov
outs
xchg
in
ins
cs
cld
cmps
or
es
and
iret
cmp
sub
pop
daa
push
add
dec
neg
pop
(bad)
cmps
pop
push
fs
mov
dec
in
lods
addr16
nop
xchg
or
(bad)
and
fs
mov
ffreep
mov
clc
inc
add
(bad)
cmps
sub
enter
cmp
inc
xchg
fsub
sub
inc
icebp
dec
cmps
test
cwde
pop
ror
push
out
aas
sahf
or
pop
push
enter
add
sub
outs
jmp
cs
inc
ja
(bad)
test
push
push
dec
push
mov
xchg
shl
ins
scas
rol
mov
rol
push
jmp
cmp
test
pop
call
test
push
test
xor
sub
and
bound
lahf
mov
lods
xor
fimul
cmp
cmp
movs
fdiv
nop
adc
cld
mov
movs
inc
fsub
movs
ja
test
out
ja
fisubr
out
stos
push
push
pop
mov
pop
outs
xchg
sbb
out
adc
stos
pushf
push
movs
aas
(bad)
mov
jb
and
es
cs
xchg
cmp
sbb
aam
mov
inc
pop
out
stos
and
xor
dec
out
cmp
mov
xchg
cmp
stos
mov
movs
das
test
add
in
or
lods
jmp
push
lods
stos
lahf
out
call
mov
xchg
adc
fs
add
push
xor
imul
outs
mov
jbe
sub
out
mov
test
lods
sbb
xor
mov
jle
aad
mov
test
push
shr
je
aam
lods
sub
inc
(bad)
outs
jae
iret
sub
mov
fs
add
mov
inc
mov
in
mov
sbb
dec
mov
mov
outs
xchg
xchg
out
sahf
and
in
xchg
mov
jns
in
lock
mov
mov
enter
cmp
push
jo
fsub
xchg
add
shr
scas
mov
mov
pop
sbb
outs
es
nop
(bad)
aam
jg
cs
lea
les
sub
sbb
enter
jg
sub
in
jbe
push
add
cmps
or
or
jo
mov
mov
jo
mov
pop
nop
lock
adc
enter
scas
nop
lock
mov
fiadd
shl
js
loopne
or
mov
nop
fdiv
clc
sbb
sub
pop
les
fmul
enter
enter
mov
mov
cmp
loopne
push
iret
push
cmps
jg
nop
out
cmps
pusha
ins
jl
pop
stos
(bad)
fist
bound
in
test
out
or
mov
mov
push
fcom
mov
or
push
push
loop
mov
push
inc
fistp
dec
lahf
(bad)
push
add
ret
repz
or
mov
push
xchg
mov
(bad)
jle
sub
ins
jo
and
pop
scas
fcomp
push
mov
sub
cmp
mov
push
and
sbb
add
push
push
mov
nop
test
push
add
mov
outs
lods
mov
iret
test
addr16
(bad)
fmul
add
jg
adc
mov
mov
mov
enter
push
and
int3
add
dec
fld
lock
or
mov
sahf
je
add
cmp
adc
ja
iret
fwait
sbb
shr
pop
popf
jo
jmp
(bad)
cmp
sub
or
fadd
mov
mov
jae
mov
mov
push
push
scas
pop
push
jg
or
shl
xlat
fidiv
xchg
add
mov
or
test
add
add
fdiv
nop
stos
loopne
mov
push
pop
(bad)
rcr
cld
mov
mov
push
movs
xchg
cld
add
and
js
adc
(bad)
mov
push
mov
mov
cmp
inc
xlat
fisub
xor
mov
inc
xor
fs
test
cmp
or
xchg
lahf
and
mov
rcl
loopne
cld
xchg
inc
dec
xor
pushf
(bad)
nop
dec
sar
fidivr
ror
jns
imul
dec
sahf
mov
inc
and
(bad)
aam
inc
dec
repnz
or
inc
pushf
sub
or
outs
pop
fild
daa
xor
out
neg
push
fidivr
push
push
aas
dec
in
lods
fbld
inc
imul
mov
inc
add
out
int3
fsubr
cs
mov
dec
test
(bad)
mov
push
and
loope
enter
jl
test
aaa
rol
(bad)
ins
ss
and
dec
leave
jae
mov
mov
mov
mul
cmp
add
in
fimul
pop
out
add
shl
lahf
pop
mov
aam
ja
cwde
push
mov
or
in
js
adc
push
mov
cmp
cmp
enter
push
pop
mov
mov
fbstp
mov
jle
dec
mov
test
cmps
mov
stos
mov
nop
out
xlat
xchg
(bad)
(bad)
out
test
mov
inc
fistp
add
add
push
add
mov
push
test
and
lods
addr16
dec
mov
lods
vpcomuq
add
adc
add
push
mov
jmp
jg
push
sub
shl
sub
pushf
xchg
xlat
jge
call
mov
cs
and
ja
push
nop
mov
adc
pop
push
inc
dec
push
pop
ja
or
ja
dec
push
ret
inc
cwde
pusha
sub
out
add
mov
es
(bad)
fs
inc
sbb
mov
push
jg
iret
mov
loop
das
and
ja
movs
outs
mov
rcr
mov
mov
xchg
ret
xor
aam
pop
shr
mov
add
cdq
pusha
mov
and
inc
ret
xor
and
xchg
outs
jbe
out
ja
inc
jo
xchg
or
push
or
mov
mov
(bad)
fucomp
add
(bad)
pop
add
or
ret
sbb
les
and
sub
inc
(bad)
or
rcr
scas
ret
sbb
inc
inc
pushf
sar
test
nop
xor
mov
xchg
je
test
pop
loopne
ret
mov
inc
xchg
shl
jae
dec
es
or
sbb
daa
pusha
jp
inc
dec
es
xor
cmps
iret
pop
lods
jmp
test
xchg
pop
mov
add
cs
aam
dec
mov
(bad)
mul
add
lds
lods
in
cmp
jecxz
in
jg
fdivr
inc
pop
jnp
lds
test
or
add
leave
jae
shl
adc
mov
mov
add
adc
sub
iret
jbe
pop
outs
addr16
aaa
pop
add
xor
adc
mov
je
js
pop
ja
les
in
pop
daa
cmp
push
outs
dec
mov
push
pop
mov
test
scas
add
enter
mov
pop
jo
enter
add
in
mov
mov
in
cmp
in
mov
mul
dec
add
sbb
inc
es
mov
add
hlt
in
or
enterw
ins
dec
and
popf
mov
mov
add
push
mov
fwait
or
shr
leave
or
pop
enter
fimul
dec
dec
push
pop
lods
lods
in
lahf
loopne
ja
pop
repnz
cwde
test
xor
mov
dec
test
and
xor
xlat
leave
cld
retf
(bad)
test
dec
(bad)
dec
test
inc
iret
retf
jl
not
sub
or
mov
cwde
or
cmp
adc
retf
sbb
push
sbb
retf
sub
add
mov
dec
or
sub
in
movs
outs
xchg
ins
test
mov
ins
test
sbb
or
(bad)
hlt
jmp
data16
(bad)
dec
xor
loop
pop
outs
(bad)
xor
xchg
mov
xor
push
mov
pop
xor
lahf
pushf
adc
or
mov
int
and
push
sub
sub
xor
(bad)
mov
jmp
scas
jge
int
js
sub
sub
inc
adc
daa
int
push
shl
xor
jl
or
into
into
stos
dec
mov
jb
xchg
(bad)
out
cmp
mov
dec
enter
into
js
mov
pop
out
inc
cmc
pop
hlt
test
into
mov
push
push
imul
hlt
mov
jecxz
aas
sub
push
fimul
xor
mov
sbb
pop
mov
iret
je
nop
mov
mov
mov
iret
test
rol
test
push
loopne
dec
add
test
rcl
rcl
shr
ins
push
nop
ins
shr
xor
inc
lods
sar
adc
mov
xchg
(bad)
mov
repnz
shl
cmps
xchg
pusha
mov
(bad)
xchg
psubsb
adc
adc
push
cmp
pop
scas
mov
scas
sub
cmp
jl
mov
outs
push
out
pop
scas
sub
out
inc
inc
popf
imul
dec
scas
cld
iret
sub
and
hlt
push
jnp
shr
cmp
push
cmps
hlt
repz
jg
and
nop
movs
push
and
int3
inc
push
cmps
sbb
shl
add
push
lock
cmp
aam
test
shl
shl
push
cmp
daa
nop
imul
mov
ja
inc
jl
pusha
sub
outs
push
mov
ins
enter
dec
loope
rcr
push
hlt
outs
mov
add
int3
call
aam
aam
push
dec
iret
not
int3
lods
pop
scas
xchg
das
adc
mov
adc
adc
aam
push
xor
aad
pop
jbe
lock
pusha
sahf
cmp
(bad)
cmp
push
pop
repz
add
aas
cmps
or
jnp
mov
xchg
pop
push
loopne
pmullw
in
lods
in
test
mov
movs
or
cld
shl
or
sbb
neg
xor
lods
mov
ja
ss
aas
loopne
pop
(bad)
push
test
ficomp
(bad)
mov
or
in
repnz
(bad)
loopne
or
mov
xlat
adc
mov
cmp
cmp
pop
enter
ins
ins
jb
cmp
jl
ins
jecxz
enter
pop
jnp
sub
xlat
fadd
in
stos
pop
or
outs
das
cdq
sub
fdivr
rcr
fadd
fcom
add
fsubr
add
mov
push
popf
or
or
inc
or
fcom
push
in
cmps
nop
or
push
add
mov
fstp
sub
dec
enter
mov
fstp
(bad)
loopne
mov
outs
inc
js
cwde
out
add
js
(bad)
(bad)
loopne
(bad)
push
in
inc
or
add
(bad)
frndint
cmp
fcmovu
fidivr
adc
cld
fidiv
sbb
xchg
cmp
push
test
adc
repnz
enter
(bad)
fsub
out
inc
pop
xchg
lock
xchg
push
lods
inc
cwde
cmps
mov
cmp
fwait
and
xor
inc
push
push
ins
dec
push
mov
jbe
nop
inc
mov
inc
add
or
rol
cmps
cwde
psllw
fs
mov
in
das
xor
push
enter
xchg
add
adc
cmp
cmc
push
sub
mov
jg
fcomp
mov
push
iret
or
or
shl
inc
lods
je
mov
dec
enter
adc
sbb
shl
xchg
mov
(bad)
fstp
mov
popa
aaa
push
add
dec
int3
(bad)
mov
mov
ror
iret
inc
xor
pop
inc
aaa
and
pop
or
hlt
mov
ss
outs
cmp
sahf
xchg
out
push
dec
push
pop
ss
(bad)
mov
jecxz
fisubr
add
xor
lahf
cwde
nop
call
xlat
faddp
fist
dec
mov
xlat
scas
jb
add
sub
dec
or
fist
ins
mov
nop
pop
enter
inc
aam
dec
xchg
(bad)
(bad)
(bad)
adc
pop
add
inc
add
and
inc
fisub
nop
mov
adc
pushf
mov
mov
loopne
push
pop
iret
aaa
adc
mov
cmp
adc
loopne
push
mov
pusha
ins
les
pushf
sbb
loopne
fdiv
fabs
add
xchg
in
add
inc
jo
xor
inc
in
add
push
pop
(bad)
aaa
jo
cmps
ins
add
fidiv
dec
loope
test
test
jmp
les
cmp
loope
push
cld
out
es
sbb
cmps
fdivr
fs
add
sub
cmp
push
dec
xor
sbb
sub
adc
inc
sub
add
fidivr
loop
push
pushf
xchg
sub
adc
pop
enter
pop
int
cmp
fadd
hlt
pop
pop
jae
adc
jnp
push
xor
pop
mov
cmp
lahf
cmp
lahf
inc
or
sar
add
mov
mov
cmp
pop
xor
cmp
jb
mul
cmp
push
cmps
ins
inc
jno
in
sub
(bad)
jmp
or
in
pushf
pop
inc
add
cmp
pop
inc
ds
and
outs
push
push
int3
cmp
fwait
or
in
in
push
xchg
mov
pop
outs
bound
ficom
pop
sub
in
push
pushf
dec
push
add
js
sbb
enter
in
cmp
inc
es
sbb
cmp
pop
dec
out
xor
pop
ja
add
lea
lahf
mov
inc
js
out
push
mov
add
ja
movs
add
lock
add
ror
dec
rcr
data16
shl
sbb
(bad)
mov
or
inc
cmp
jb
add
mov
jb
cmp
(bad)
(bad)
test
add
or
xchg
pop
add
inc
pop
neg
and
fsubr
icebp
pop
enter
(bad)
or
xor
ins
or
scas
xlat
jl
popf
sub
adc
jl
hlt
xchg
xchg
rcl
loopne
inc
outs
xchg
push
push
xchg
xchg
mov
cdq
mov
scas
mov
xchg
fsubrp
test
(bad)
mul
jns
xor
fimul
jmp
dec
enter
adc
push
callw
pop
mov
js
fild
enter
xchg
inc
test
jmp
sar
test
sbb
es
pop
lods
pop
pop
cmp
out
test
jmp
push
and
inc
mov
loopne
pop
outs
xchg
in
nop
out
pusha
push
pusha
ins
adc
pushf
dec
pusha
push
push
xchg
out
sahf
inc
pushf
lods
mov
push
inc
pushf
pusha
mov
mov
clc
sahf
in
or
nop
pop
pusha
add
enter
xor
in
dec
pop
or
sbb
sahf
mov
push
mov
ins
(bad)
popf
test
(bad)
in
loopne
in
pop
xor
lock
inc
ss
sbb
sub
cmp
lock
xchg
push
sbb
daa
sub
(bad)
in
js
mov
sub
dec
add
cs
aam
or
ss
sub
aaa
mov
cmps
pusha
and
stos
shr
outs
adc
add
jle
add
push
mov
pop
ja
(bad)
out
repnz
fiadd
cwde
lods
add
xchg
add
jbe
push
pop
adc
ss
in
out
cld
out
adc
adc
push
aaa
xchg
scas
pop
ret
xchg
daa
add
out
push
mov
lock
je
add
jns
cmp
cwde
out
sub
and
mov
les
dec
push
enter
ss
or
popa
seto
lock
or
adc
mov
add
fist
and
sub
js
cmp
out
js
add
stc
rol
dec
add
sahf
test
pop
push
outs
add
xchg
jg
add
leave
adc
cld
ja
add
out
cmp
inc
pop
push
mov
lahf
js
leave
jae
mov
aad
aaa
add
jb
jmp
pop
push
or
inc
test
xor
out
adc
or
out
pop
push
shr
test
sub
rol
dec
(bad)
push
sbb
jmp
stos
or
and
ja
push
cs
sahf
hlt
repz
pusha
fstp
add
hlt
fiadd
ins
adc
or
xchg
pop
lods
add
inc
or
push
repz
bound
xor
mov
xor
fcomip
in
sub
pop
jg
or
hlt
sub
cmp
mov
hlt
sub
add
pop
hlt
(bad)
in
pop
ret
cmp
mov
pushf
ja
add
jl
or
enter
fsubr
pop
or
jae
pop
int3
cmp
sbb
mov
je
adc
dec
pop
pop
imul
or
pmaddwd
pop
repnz
cwde
movs
mov
xor
push
dec
js
addr16
mov
add
enter
xlat
neg
imul
and
add
addr16
ja
jns
xor
pusha
ja
jo
add
mov
in
dec
lahf
adc
lahf
pop
aam
(bad)
out
mov
js
or
cmps
mov
cmp
mov
not
mov
pusha
mov
mov
push
fs
xor
mov
add
pop
xor
popa
ror
outs
push
js
pop
xor
adc
clc
and
mov
addr16
call
and
dec
cwde
outs
pusha
daa
push
jns
out
inc
(bad)
clc
mov
test
xor
or
dec
nop
retw
inc
(bad)
stc
adc
sbb
or
dec
fwait
and
xchg
int3
add
push
(bad)
stc
pop
aas
cmp
jl
add
cli
les
xchg
ss
aaa
mov
lea
add
push
jb
(bad)
dec
or
xchg
adc
(bad)
cli
add
ds
hlt
inc
out
cmp
cli
dec
push
pop
clc
test
dec
adc
repnz
jno
cwde
(bad)
pop
xchg
pushf
loopne
sbb
outs
xchg
(bad)
aad
mov
fdivr
movs
mov
xlat
aaa
lahf
les
es
fdivrp
jmp
add
dec
sti
sti
pop
pop
cmp
add
outs
in
ins
daa
add
movs
push
shl
xchg
call
sbb
xlat
pop
(bad)
movs
add
aaa
add
scas
cmps
ins
or
pop
adc
xchg
jo
cld
push
push
push
outs
in
and
pop
inc
jp
mov
and
lods
add
lods
pusha
pusha
js
fs
add
adc
sub
cs
mov
jl
outs
bound
pop
std
mov
and
add
push
aam
mov
std
rol
adc
test
aaa
add
or
and
pop
and
(bad)
sbb
sub
pop
mov
ja
int3
pop
and
cs
push
jl
cmps
pop
jb
fmul
pop
hlt
jnp
test
mov
adc
pop
hlt
lods
pop
in
popf
mov
dec
sbb
pop
adc
cld
xor
pop
jnp
dec
xchg
pop
iret
inc
into
test
xor
(bad)
jmp
fdiv
fdivr
hlt
mov
cs
mov
inc
and
call
test
jae
iret
ins
xchg
fadd
leave
sar
rcr
xlat
dec
fdiv
pop
js
dec
js
pop
inc
push
adc
cwde
and
push
push
pop
pop
cmp
pop
inc
pop
dec
sbb
jbe
and
add
and
and
movs
or
enter
add
call
inc
cs
push
cmps
enter
adc
sub
xor
cmp
repnz
leave
cmp
iret
add
lock
mov
fs
pusha
sub
fcomp
jae
ror
(bad)
in
inc
es
es
sub
or
jmp
in
loopne
daa
clc
jl
out
(bad)
icebp
outs
inc
pop
add
adc
xchg
pop
add
add
sub
lods
pop
inc
(bad)
out
pusha
test
pop
pop
data16
fist
push
add
(bad)
add
or
(bad)
ror
rcr
or
test
repnz
idiv
sti
in
xchg
data16
data16
add
ja
lahf
xchg
pop
adc
(bad)
jg
rol
inc
push
iret
pop
push
sub
iret
popa
add
push
or
and
sub
mov
xchg
adc
aaa
add
ror
dec
and
std
outs
jmp
mov
daa
iret
mov
inc
jo
jmp
movs
out
jecxz
jo
mov
cmp
mov
push
or
pop
add
push
add
cmp
imul
dec
pop
add
test
mov
repz
loopne
mov
mov
and
sbb
outs
cmp
push
xchg
pop
ror
or
movs
pop
leave
pop
and
pusha
dec
cs
xchg
push
push
(bad)
ja
dec
pop
test
stos
sub
xchg
mov
jo
and
sar
addr16
dec
(bad)
sahf
bts
jb
jmp
rcr
inc
push
sbb
call
loopne
stos
ja
mov
pusha
sub
emms
add
ins
aaa
daa
pop
add
xor
aas
in
lock
mov
or
fld
in
or
push
sbb
xor
and
ins
xchg
push
xor
xchg
cwde
out
inc
add
dec
das
mov
test
addr16
dec
xor
sub
imul
and
nop
test
add
jl
idiv
mov
cwde
pop
rol
or
xchg
sbb
test
out
int3
and
(bad)
or
pop
or
(bad)
pop
push
cld
add
enter
add
or
adc
xchg
xchg
out
ins
sbb
fs
mov
or
and
pop
lahf
add
xchg
adc
call
(bad)
cmps
in
shl
mov
sbb
and
xor
dec
outs
and
add
jbe
loopne
sbb
mov
mov
dec
jb
scas
push
in
retf
dec
cs
xchg
fld
or
xchg
cmp
push
and
sub
and
sbb
add
add
add
outs
outs
imul
mov
cs
imul
iret
inc
add
push
and
les
neg
int3
stos
ret
xchg
or
inc
les
dec
add
push
push
ins
daa
pop
aas
fdivr
fdiv
test
(bad)
aas
out
pop
idiv
fld
(bad)
jg
pop
addr16
leave
dec
fidiv
aaa
sub
adc
pop
rol
push
dec
inc
inc
sbb
sti
add
jl
seto
fld
mov
pop
pop
xlat
jno
dec
movs
loopne
ds
lods
push
outs
pop
lahf
cmps
add
add
pop
adc
clc
push
mov
rol
xchg
jl
scas
aam
mov
push
xchg
fcmovne
enter
jle
xchg
cmp
xchg
adc
in
pushf
adc
adc
imul
nop
pop
pushf
ja
cmp
or
shr
jns
sub
rcr
and
push
ja
and
inc
add
push
pop
leave
mov
add
mov
daa
daa
daa
daa
test
leave
add
jge
mov
aas
adc
inc
repnz
push
fdivrp
and
imul
or
add
cld
cmp
or
inc
das
fucomi
add
fisttp
jns
movs
rcr
fadd
and
or
xchg
sub
or
in
pop
adc
push
test
inc
push
and
mov
cld
adc
adc
dec
rcl
xor
pop
loopne
xor
ja
daa
outs
mov
(bad)
imul
add
push
mov
pop
int3
cs
mov
pushf
push
or
sbb
sub
inc
jb
adc
push
fs
fidivr
cmps
pop
push
scas
mov
xchg
(bad)
pop
cmp
jo
cmps
in
cmp
and
call
jbe
dec
daa
ins
add
mov
xor
popa
aad
(bad)
aas
pop
jb
shl
pop
mov
add
jae
pop
in
inc
repnz
dec
or
adc
pop
outs
ins
movs
sbb
pop
adc
and
fadd
bound
xchg
inc
xor
cmp
movs
inc
jb
leave
ss
fdiv
dec
shl
or
call
shrd
ins
mov
cmp
ret
sbb
xlat
imul
sbb
xlat
iret
lock
and
scas
outs
and
and
in
inc
pushf
loope
cmp
adc
outs
jno
pop
mov
sbb
call
int
pop
leave
or
sbb
add
xchg
pushf
outs
pop
sbb
push
fcom
cmp
xchg
adc
outs
push
sbb
(bad)
test
inc
sbb
or
jns
aas
pop
mov
mov
mov
xchg
mov
xchg
mov
cld
cmp
sbb
mov
sbb
push
cmp
in
sahf
scas
sbb
dec
sbb
sbb
daa
test
mov
mov
inc
cs
mov
and
cmp
ja
dec
aaa
cmp
addr16
mov
cs
dec
(bad)
retf
mov
xchg
test
daa
inc
enter
cmps
mov
push
jl
jbe
adc
push
mov
jb
xchg
push
(bad)
dec
mov
or
xchg
shr
mov
rcr
inc
fmulp
retf
add
pand
add
leave
inc
xor
lods
call
(bad)
xchg
jg
xchg
pop
repnz
fdiv
jb
pop
test
call
in
pop
and
test
(bad)
jo
or
jb
and
fld
fmul
cmps
pop
(bad)
mov
and
es
jae
cmp
mov
in
inc
cmovs
adc
cmp
setb
mov
inc
scas
add
add
jb
fadd
out
hlt
or
xchg
and
adc
push
or
or
cmp
dec
orps
adc
inc
mov
adc
pushf
in
je
je
and
daa
cmp
mov
dec
into
mov
sbb
fisub
and
inc
push
mov
jne
jne
jne
jne
and
sbb
test
jne
in
xchg
fdiv
jne
jbe
inc
mov
jbe
jbe
jbe
jbe
cmp
sub
adc
sbb
shl
and
jb
pop
pop
ja
push
pop
add
add
cmp
jo
xchg
xchg
mov
je
enter
mov
xchg
add
leave
ins
mov
(bad)
add
inc
xor
loopne
pop
add
into
inc
mov
js
push
adc
ds
cs
dec
hlt
imul
add
in
mov
pop
dec
sbb
xchg
das
outs
paddw
jns
add
leave
xchg
xor
(bad)
dec
pop
pop
arpl
packssdw
xor
es
inc
dec
fimul
nop
iret
xchg
sahf
xchg
xchg
or
xchg
fnstcw
pop
(bad)
xlat
or
stc
jp
xchg
mov
iret
pop
jp
add
add
and
xchg
xor
push
pop
inc
jns
inc
movs
dec
xchg
pop
daa
cmp
jo
daa
jo
adc
push
lock
out
daa
pushf
pop
lods
or
or
mov
mov
jno
daa
hlt
xchg
pushf
dec
push
push
pop
cmp
and
sub
inc
scas
jl
cmp
out
leave
push
rol
scas
not
lods
mov
(bad)
popf
in
mov
sbb
sub
sub
fst
mov
sbb
in
adc
pop
jnp
jnp
jnp
mov
retf
sub
fbld
(bad)
in
or
mov
sbb
(bad)
jns
out
sub
sub
das
movaps
jl
jl
sahf
fadd
sub
dec
add
scas
int
push
fbstp
call
das
cdq
dec
push
(bad)
daa
test
cmp
outs
daa
inc
scas
sub
js
cwde
lahf
mov
enter
jecxz
or
lock
test
aad
mov
xor
push
push
dec
xlat
sub
and
push
ja
cmp
mov
xor
(bad)
mov
dec
cmp
out
les
aam
and
iret
xor
lods
lods
xsaves
jb
jo
sub
mov
or
ss
push
dec
adc
test
(bad)
sub
mov
fmul
in
push
inc
xor
jbe
and
aas
cs
inc
dec
fisub
test
test
mov
stos
dec
cs
fmul
enter
mov
scas
pop
mov
repnz
sub
enter
out
aad
push
add
push
fwait
cmp
dec
pop
daa
cmp
mov
push
addr16
sub
push
ins
outs
daa
sbb
fld
jle
jmp
push
daa
std
das
das
add
fadd
bswap
push
das
mov
mov
xor
xor
ja
mov
je
mov
mov
inc
mov
push
jg
loope
xchg
pushf
xor
xor
cmp
push
xor
scas
dec
jnp
leave
xchg
pop
and
lods
in
leave
in
ret
retf
add
leave
leave
in
movs
setns
leave
js
gs
leave
leave
leave
repz
aad
inc
pop
ds
sub
xor
add
scas
push
sbb
jb
pop
add
ins
add
and
xchg
in
add
movs
inc
mov
(bad)
dec
leave
ror
rdmsr
jl
aam
pop
in
daa
cdq
add
xor
xor
pop
push
sbb
dec
xor
cmp
outs
mov
scas
xor
dec
outs
daa
pop
outs
ja
or
fwait
movs
lods
dec
dec
dec
dec
mov
enter
and
and
sahf
std
add
add
and
or
add
pop
rol
push
imul
dec
dec
jb
xor
dec
cs
out
and
pushf
dec
or
pop
and
pop
cmp
popa
xchg
pop
and
hlt
mov
xchg
dec
cs
and
cs
js
and
dec
leave
and
cld
jbe
outs
pop
sahf
rsm
xlat
aaa
sub
fst
mov
or
cs
loopne
daa
mov
fisubr
pop
mov
cmp
cmc
ins
xchg
sbb
dec
outs
sysenter
push
ja
cwde
mov
pop
add
cmp
add
out
aam
add
(bad)
aas
cmp
in
xchg
fldenv
jg
sbb
add
bound
add
sbb
xchg
add
jo
sar
or
add
les
aas
cmp
mov
pop
mov
pop
dec
mov
add
add
or
dec
and
retf
mov
mov
push
sub
add
xchg
and
add
add
jb
jl
mov
cwde
or
mov
(bad)
sahf
pop
and
repz
mov
add
xchg
and
add
cmp
cmp
inc
pop
push
or
xchg
and
jno
jg
lea
outs
in
fwait
or
push
loopne
leave
sub
jmp
cmp
mov
push
add
cs
test
cs
pop
adc
add
sub
retf
adc
in
push
jns
movs
ins
jnp
push
mov
cwde
inc
sbb
fstp
and
push
mov
rol
cmp
pop
jb
cmp
mov
push
pusha
xchg
out
lock
(bad)
scas
mov
es
mov
cmp
mov
push
add
das
xor
add
in
mov
xchg
and
outs
cmp
adc
cmp
fld
por
xchg
and
stc
add
pop
add
in
and
xor
aas
out
dec
ins
daa
xchg
ror
femms
xchg
xchg
mov
call
dec
aas
push
(bad)
leave
dec
xlat
xchg
adc
inc
cs
imul
mov
in
pop
mov
xchg
mov
xchg
mov
and
add
and
xchg
mov
ja
add
xor
lods
fisttp
ss
adc
cs
xchg
stos
pop
mov
inc
movs
scas
popa
out
or
push
mov
or
add
daa
inc
add
test
xor
in
test
jno
jbe
inc
cmp
xchg
stos
fs
scas
out
cdq
nop
xchg
mov
in
mov
leave
xchg
dec
scas
call
cmps
xchg
adc
test
inc
ja
loop
inc
push
pusha
daa
(bad)
push
and
inc
mov
add
inc
cwde
sbb
add
leave
leave
in
and
inc
test
inc
add
inc
pusha
mov
mov
int3
add
aam
pop
jle
inc
fist
nop
seto
xchg
inc
leave
inc
inc
mov
dec
les
inc
mov
add
ins
add
je
xchg
lahf
leave
leave
inc
cmp
enter
and
fidiv
dec
xchg
pop
pop
mov
into
fist
stos
cmp
inc
mov
inc
loope
lahf
pop
aaa
xchg
arpl
in
enter
xchg
xchg
lea
and
leave
leave
mov
xor
out
dec
and
movs
push
push
pop
mov
dec
inc
mov
add
jo
jb
leave
mov
inc
jb
leave
aam
push
dec
and
(bad)
push
add
dec
mov
punpcklwd
ficom
and
and
inc
adc
shr
mov
xchg
mov
out
dec
pop
ret
jbe
movq
jb
scas
popf
xchg
or
jbe
pop
call
push
dec
adc
xchg
and
dec
leave
dec
movs
push
rol
in
adc
and
xchg
mov
fdiv
or
leave
inc
push
xor
add
aaa
mov
cmps
cmps
lss
push
mov
aas
fild
out
psllw
or
dec
jnp
adc
sbb
cs
dec
push
xchg
jae
leave
dec
movs
mov
add
je
pop
mov
add
push
jo
(bad)
lods
in
int
(bad)
pop
mov
mov
mov
dec
or
imul
inc
rcr
dec
mov
leave
inc
xor
out
in
inc
jb
cwde
add
or
fisttp
adc
mov
enter
and
movs
rcr
dec
in
xchg
mov
add
and
fbstp
cmp
dec
sbb
jnp
add
dec
add
add
push
add
lods
sbb
aas
push
rol
loope
scas
jl
addr16
push
push
div
push
push
mov
mov
cdq
add
enter
add
add
sbb
cmovle
lock
jns
inc
fsubr
or
aaa
int3
xchg
pop
dec
iret
rcr
push
stos
in
or
mov
cs
fs
cdq
and
adc
dec
mov
cmps
loop
call
inc
enter
dec
sbb
jb
cmp
aas
push
bound
ins
add
cmp
adc
mov
in
xchg
daa
in
out
add
in
pop
fwait
add
jo
scas
fwait
dec
lahf
add
sbb
jb
fwait
jge
mov
mov
fwait
add
inc
cmp
push
push
xor
or
pop
xchg
push
ss
add
sbb
enter
daa
add
add
in
add
or
dec
or
dec
xchg
pushf
pushf
pushf
popf
leave
sbb
daa
popf
inc
pop
adc
push
jo
or
movs
cmp
pushf
(bad)
xchg
pop
pop
shr
enter
pop
popf
xchg
add
lahf
in
add
stos
pop
add
cmps
bound
pop
push
mov
push
and
ss
das
inc
int3
adc
pop
pop
mov
push
call
daa
daa
fsub
add
sti
pusha
adc
xchg
sahf
sbb
lea
jne
ja
sub
movs
sub
sbb
pop
push
addr16
jp
push
add
stos
mov
push
inc
inc
rol
pop
scas
pushf
mov
out
pop
setg
add
lahf
sub
cmps
sub
gs
dec
dec
cdq
xchg
push
in
ror
push
adc
jb
push
inc
push
call
fwait
push
in
add
add
jb
push
add
add
leave
or
cmp
inc
aas
mov
(bad)
out
push
xchg
nop
mov
xchg
xchg
fdivr
mov
and
dec
push
call
xchg
sbb
mov
call
mov
dec
add
fild
fcom
or
out
in
pop
mov
xor
cld
pop
ja
mov
pop
bndldx
mov
das
movs
pop
xlat
fbld
mov
or
fs
repnz
mov
push
cwde
mov
adc
push
test
xchg
adc
push
jmp
(bad)
xor
cmp
inc
add
sbb
add
rcr
fistp
cs
xchg
aas
(bad)
iret
cmps
add
addr16
dec
and
lock
test
xchg
and
loop
and
inc
and
in
push
leave
in
mov
mov
cs
pop
call
dec
movs
(bad)
sti
pop
jge
imul
movs
lahf
(bad)
outs
mov
cmp
outs
mov
rol
fs
movs
push
pop
jl
in
add
adc
pop
not
xor
in
adc
pop
clc
add
pop
sbb
ds
jle
pop
push
add
xchg
sub
in
pop
pushf
jl
and
sub
mov
in
leave
add
repnz
(bad)
pop
pop
mov
movs
and
pop
mov
in
inc
mov
cmp
mov
mov
cs
(bad)
loopne
call
dec
pop
adc
cmps
adc
add
push
lahf
test
(bad)
mov
push
add
in
xchg
add
gs
pop
push
cmp
fimul
xchg
fcom
pop
or
inc
inc
fsubr
hlt
mov
fisttp
cmps
and
mov
cmps
xchg
addr16
imul
jae
mov
pop
xchg
scas
in
leave
inc
jb
leave
pop
adc
retf
inc
xchg
jo
dec
test
ror
and
in
fiadd
iret
movs
push
imul
in
pop
leave
cld
retf
pop
sub
mov
push
(bad)
(bad)
mov
test
ja
scas
pop
and
sbb
xchg
mov
cs
outs
addr16
(bad)
dec
pusha
sbb
pusha
je
mul
mov
rsm
add
cmp
add
add
add
xchg
and
pop
or
dec
and
cmp
mov
push
mov
ret
add
in
mov
add
sub
stos
test
hlt
xchg
stos
popa
pusha
inc
xchg
xchg
mov
enter
das
jo
js
or
in
push
nop
pop
cwde
xlat
push
daa
daa
pop
leave
bound
daa
daa
fucom
in
lods
cmp
sbb
(bad)
sub
push
or
(bad)
xchg
and
jb
push
inc
add
cmp
enter
add
add
mov
pop
mov
xor
leave
add
in
mov
(bad)
add
inc
pop
callw
cmp
mov
sar
arpl
outs
and
daa
mov
pusha
in
add
xchg
lods
jo
lock
mov
lods
cmp
pop
ja
mov
sbb
fbld
(bad)
daa
and
fiadd
(bad)
add
test
xchg
daa
inc
cmp
(bad)
(bad)
scas
xor
cmp
jmp
sub
sub
pop
je
and
outs
and
xchg
je
pushf
pushf
pop
cmps
scas
mov
cmp
mov
test
xchg
retf
sub
xor
fadd
dec
dec
cs
data16
mov
fs
mov
jb
xchg
add
cdq
add
movs
mov
mov
xchg
inc
adc
xchg
shl
xchg
mov
hlt
imul
jb
and
mov
push
ins
pminub
out
aas
ffree
cmps
leave
leave
add
inc
(bad)
dec
div
daa
dec
dec
jb
mov
mov
push
sbb
inc
js
(bad)
enter
ins
pop
js
add
mov
(bad)
in
fs
add
inc
add
inc
imul
mov
push
das
add
cmp
cmp
add
je
mov
jbe
jb
mov
out
in
and
ja
out
mov
iret
xchg
push
push
sbb
sub
aaa
add
ror
cmps
pop
push
leave
leave
leave
inc
jl
xchg
xchg
sbb
dec
inc
mov
xrelease
popf
mov
push
test
daa
mov
mov
in
and
add
jmp
test
retf
xchg
mov
retf
retf
retf
retf
mov
mov
mov
mov
dec
dec
repnz
mov
pushf
mov
mov
lock
add
iret
cmovbe
inc
jmp
out
nop
ins
fs
mov
pushf
pop
and
ja
repz
daa
xchg
dec
mov
rol
xchg
ins
adc
scas
mov
jp
cmp
lods
cmp
(bad)
xchg
add
jbe
imul
ins
retf
mov
push
and
add
mov
and
pop
pop
xchg
xchg
sahf
out
xor
jo
xchg
ror
outs
and
push
mov
scas
shl
addr16
pop
(bad)
mov
add
xchg
xchg
mov
add
dec
mov
inc
mov
mov
popf
sbb
ja
xor
xchg
add
add
test
inc
push
outs
jo
mov
sub
(bad)
iret
mov
daa
into
aas
push
sti
jb
xlat
ret
idiv
in
inc
mov
mov
sbb
jo
mov
jp
xchg
das
mov
push
scas
add
pop
out
xchg
mov
xor
cld
ja
in
in
mov
mov
mov
test
loop
dec
xlat
push
mov
neg
mov
psrlq
ins
pusha
lahf
aaa
call
(bad)
mov
(bad)
xor
imul
xchg
stos
add
jno
inc
add
push
cmp
in
pop
(bad)
in
inc
xchg
push
das
(bad)
jb
jb
scas
jb
addr16
xchg
test
sub
mov
daa
mov
cmovp
mov
mov
sar
les
iret
lahf
in
cmps
jne
add
mov
leave
mov
repnz
cmp
mov
xchg
jl
jns
pushf
pop
mov
addr16
movs
in
cmps
or
daa
je
inc
sub
push
cmp
mov
mov
ja
js
iret
shl
mov
andnps
cmps
mov
loopne
dec
or
jne
jg
lods
add
xchg
and
mov
add
stc
jb
in
repnz
mov
push
and
sbb
sub
cmp
pop
leave
xchg
xchg
push
mov
fs
push
imul
femms
mov
add
div
retf
loope
mov
outs
daa
jbe
daa
cld
neg
aad
jmp
outs
mov
mov
mov
test
push
mov
dec
leave
cli
enter
daa
test
xchg
adc
push
outs
pop
jb
mov
pop
movs
sbb
push
ja
inc
jb
dec
retf
rol
mov
test
addr16
xchg
pop
add
and
sub
xor
aas
inc
mov
dec
add
test
jmp
fidivr
not
(bad)
js
fmulp
mov
clc
shl
or
mov
adc
leave
leave
shl
inc
push
mov
ja
movq
or
adc
pop
aaa
and
cs
cmps
add
mov
shl
mov
add
dec
test
imul
mov
jp
lahf
sahf
mov
mov
push
jp
add
ret
cmps
sub
xchg
movs
imul
or
adc
add
ret
inc
ret
loopne
jmp
loopne
xor
inc
jb
in
pop
test
add
lea
int
fild
cmps
pop
mov
inc
xor
add
xchg
and
add
add
(bad)
push
add
add
dec
scas
pop
and
push
cld
and
xchg
jl
in
mov
jl
pextrw
sbb
in
in
daa
lds
lds
lds
mov
add
movs
cmp
sahf
cmps
test
leave
xchg
hlt
push
jb
cmp
idiv
(bad)
and
dec
xchg
sahf
pushf
fs
les
jg
push
add
add
add
add
xchg
push
movs
(bad)
or
jb
jb
int
jecxz
cmp
(bad)
or
xchg
test
pop
aaa
(bad)
push
pusha
sbb
mov
jle
cs
xchg
dec
mov
jl
add
xchg
dec
test
pop
push
jo
push
jmp
enter
pop
es
jg
mov
or
push
leave
and
jo
leave
and
loope
aad
enter
cmp
mov
add
adc
and
sbb
add
cmp
or
leave
imul
push
mov
jbe
cmps
scas
pop
mov
mov
xchg
loop
or
sub
adc
mov
xchg
out
pusha
xor
fs
enter
xor
cmp
loopne
repnz
or
stos
pop
adc
leave
inc
xor
out
test
sbb
add
cmp
pop
cmp
cmp
imul
or
call
call
mov
mov
inc
enter
push
int3
add
je
pusha
mov
enter
aam
in
pop
and
adc
fld
in
xor
and
mov
cmp
xor
addr16
fcomp
xchg
das
in
rol
xchg
inc
push
mov
dec
and
mov
xchg
xchg
out
sbb
add
xlat
cs
mov
xchg
pushf
jae
addr16
dec
ds
cmp
rol
scas
mov
fisttp
push
push
icebp
aas
loope
jbe
das
into
pop
movlps
pop
cs
push
xor
dec
fs
enter
or
pusha
or
cmp
in
jbe
or
add
adc
sar
mov
jns
push
jmp
lock
into
jmp
repz
retf
and
mov
mul
mov
xchg
mov
out
iret
sbb
and
in
dec
mov
xchg
xchg
push
mov
shr
dec
push
mov
dec
loopne
dec
in
daa
in
cld
mov
out
jle
and
xchg
adc
scas
les
mov
dec
jo
xchg
in
iret
loopne
in
fld
mov
xchg
fcmovnbe
sbb
daa
xor
jmp
in
leave
dec
jnp
xchg
xchg
(bad)
int3
ja
enter
call
pop
jo
in
ror
syscall
out
mov
out
enter
xor
sar
mov
outs
ja
xchg
mov
cwde
mov
stos
pop
mov
int3
das
and
out
or
push
daa
sbb
shl
push
out
add
aas
in
inc
pop
mov
mov
cmp
popaw
imul
jo
mov
dec
jb
in
mov
mov
rcr
ins
aaa
punpcklwd
jbe
mov
dec
andps
jb
pushf
mov
mov
rcr
xchg
xchg
mov
add
mov
or
packuswb
mov
inc
push
cmp
inc
ja
nop
mov
jo
int3
cmps
loopne
and
cmp
cmp
adc
dec
icebp
dec
aad
pop
aad
and
xchg
mov
pushf
inc
mov
aaa
fsub
dec
fisubr
aaa
mov
xchg
popf
leave
inc
ror
cmp
leave
inc
jb
enter
inc
jb
std
mov
inc
mov
sub
xor
aam
in
and
arpl
xchg
pushf
(bad)
adc
leave
dec
add
daa
pop
leave
and
adc
and
inc
jb
xlat
and
sbb
nop
out
xchg
out
sub
aas
push
je
cmp
enter
add
inc
mov
push
enter
in
xchg
mov
loopne
or
push
adc
add
add
add
enter
ja
test
xchg
or
jb
mov
daa
add
xchg
je
pmaxsw
loope
in
jbe
pop
dec
fld
sub
fist
mov
outs
hlt
jmp
adc
xlat
and
pusha
dec
push
popf
add
enter
add
dec
aaa
jb
add
sbb
xchg
adc
or
adc
sbb
xchg
and
sub
cmp
add
push
push
bound
xlat
call
sar
push
jo
sub
out
mul
jo
mov
xchg
test
xchg
fstp
jb
hlt
xchg
and
mov
scas
adc
js
les
fisttp
je
pop
fild
push
dec
add
xchg
dec
andnpd
in
adc
les
mov
xchg
xchg
pop
dec
outs
adc
and
xchg
xchg
mov
xchg
cs
add
fcmovne
ins
cmp
xlat
bswap
retf
(bad)
add
fadd
xchg
into
ins
sub
xchg
mov
dec
inc
ficomp
xor
jb
ja
popf
jge
test
(bad)
xlat
add
leave
inc
shl
jo
mov
xchg
and
pop
and
dec
vmwrite
push
xchg
jo
add
outs
addr16
mov
inc
jb
cmp
fisttp
mov
or
xchg
outs
push
call
add
adc
and
mov
in
xchg
fs
out
pushf
sub
leave
(bad)
xchg
test
fisub
adc
push
xlat
push
ficomp
or
jbe
mov
ja
mov
iret
cmp
mov
mov
dec
lods
fist
add
cwde
bswap
inc
cmp
fild
sbb
ins
jb
inc
jb
call
(bad)
(bad)
test
and
enter
ja
aam
in
adc
inc
aaa
call
and
pop
leave
push
int
and
test
inc
mov
push
loope
xchg
out
enter
loope
cmp
add
dec
cs
cld
ins
je
xchg
xchg
mov
inc
addr16
lahf
inc
mov
mov
mov
aam
fisttp
loop
(bad)
pushf
or
iret
arpl
jbe
jb
mov
xchg
mov
jbe
popf
stos
(bad)
test
in
mov
jcxz
jecxz
in
and
jno
pushf
popf
and
pop
popf
into
sahf
pop
mov
mov
mov
inc
leave
xchg
cmp
in
cli
in
in
enter
das
in
jb
inc
jnp
or
push
inc
mov
rcr
mov
nop
xchg
imul
les
cs
push
das
cmp
leave
dec
ja
xchg
js
enter
add
and
lahf
cmp
paddq
xchg
push
mov
lahf
and
and
and
addr16
push
push
add
les
cmp
jae
sbb
sub
pop
out
pop
cmps
push
sub
mov
dec
cs
test
loope
pxor
in
xchg
and
add
or
add
daa
dec
out
out
jns
cmp
out
mov
push
and
ins
lahf
in
in
mov
mov
in
in
(bad)
call
stos
call
enter
and
jbe
pushf
in
mov
cmp
jmp
in
pop
and
scas
movs
into
and
fptan
in
xchg
add
add
add
add
mov
push
add
cmp
jmp
add
sahf
jb
xchg
pushf
mov
or
push
lahf
jmp
xor
xchg
pop
mov
call
jle
movs
adc
mov
pop
mov
test
lds
rcl
push
mov
cmp
in
jmp
add
adc
and
cs
fucompp
sbb
movs
add
jmp
mov
movd
xchg
gs
xor
cmp
xchg
je
cmp
nop
xchg
xchg
movs
push
popf
fmul
pop
push
ja
pushf
in
leave
inc
dec
push
(bad)
popf
push
or
mov
cmp
daa
in
mov
dec
in
push
cwde
push
and
inc
mov
in
clc
scas
and
jmp
cmps
jl
fnstenv
jo
repnz
out
cmc
out
out
adc
leave
dec
dec
push
out
cmp
add
push
shl
sbb
cmps
scas
iret
test
movs
and
ja
fsubr
out
out
femms
pop
add
mov
ins
ja
iret
mov
inc
jb
jnp
xchg
xchg
xchg
mov
sahf
add
xchg
push
jno
rcr
out
sbb
add
inc
fimul
das
and
sub
popa
dec
xchg
xchg
dec
dec
push
mov
int3
and
fsubr
sar
pop
cld
stos
sub
mov
das
xchg
stos
icebp
sub
xor
mov
add
pop
dec
test
xchg
xchg
sub
push
mov
daa
pop
in
sar
in
cli
adc
mov
repnz
cld
cmps
xchg
and
repnz
cmp
inc
push
pop
mov
jo
pop
jb
mov
xchg
pop
jb
rcl
and
dec
jb
test
and
pop
repz
and
addr16
mov
inc
adc
jb
lods
mov
in
in
push
hlt
or
pushf
lods
sbb
inc
xchg
pop
jb
pop
jo
xchg
pop
jb
pushf
sahf
pop
jb
pop
enter
and
scas
cmc
dec
dec
mov
scas
and
inc
rcl
dec
mov
in
xor
loopne
cwde
in
fsub
scas
setno
test
inc
jb
pop
jb
ins
dec
pop
jb
pop
cwde
jno
xchg
pop
jb
xchg
lock
dec
jb
mov
ror
push
out
mul
pop
jb
inc
test
dec
mov
in
jbe
jne
jge
in
fcmove
inc
mov
je
mov
adc
jb
stc
js
fisub
clc
xor
bound
int3
sahf
lea
setnp
mov
adc
mov
out
dec
pop
mov
fcom
xchg
xor
inc
scas
or
cwde
cmovo
(bad)
in
in
add
out
int3
clc
aam
paddusb
jo
ret
out
test
cs
(bad)
cli
cmps
dec
sbb
mov
test
enter
fdivr
adc
xlat
stc
sbb
gs
cmps
dec
cmp
(bad)
(bad)
jb
cmps
mov
lea
mov
(bad)
in
sub
push
or
and
lahf
(bad)
(bad)
mov
dec
leave
inc
mov
mov
mov
mov
push
dec
fs
adc
cli
sbb
cmp
mov
lock
cli
mov
mov
mov
leave
and
and
mov
push
sti
add
leave
fdivr
push
push
add
pop
and
mov
and
add
xchg
and
cld
push
sub
mov
mov
add
xchg
daa
pop
dec
movs
outs
jbe
mov
xchg
xchg
xchg
popf
call
pop
mov
push
in
in
in
cli
paddw
add
fistp
and
mov
std
xor
mov
add
xchg
mov
enter
pushf
mov
jmp
mov
(bad)
pop
fisubr
fisub
inc
add
sbb
inc
dec
fild
cwde
pop
mov
aam
jmp
pop
les
(bad)
in
and
daa
sbb
mov
mov
mov
mov
pop
pop
add
add
and
bound
sub
mov
add
sub
mov
adc
dec
push
jmp
xchg
mov
data16
pushf
pushf
pushf
pop
mov
and
je
addr16
dec
fidivr
inc
mov
cmp
push
repnz
add
add
mov
inc
popa
das
mov
in
mov
in
mov
jmp
loopne
sbb
or
mov
xchg
aas
and
inc
add
xchg
mov
xchg
push
jno
jb
xchg
mov
mov
aaa
stc
dec
mov
xchg
adc
add
es
push
mov
in
and
in
mov
xchg
mov
cli
jns
es
jnp
and
and
sti
inc
mov
sbb
daa
add
das
add
aas
dec
cmps
jb
add
bound
jb
xchg
in
jecxz
addr16
icebp
lods
imul
or
xor
sbb
clc
outs
sbb
push
xor
iret
scas
outs
cs
xchg
je
and
mov
in
cwde
test
cld
fmul
xchg
push
shl
retf
pop
into
mov
add
dec
pushf
cmp
inc
jns
adc
scas
mov
addr16
lahf
leave
push
adc
fcos
shl
jo
sar
pop
push
mov
enter
mov
add
cmp
shl
sbb
sbb
mov
pop
push
xor
add
mov
int3
jne
adc
xchg
jge
ret
fisub
mov
dec
mov
add
arpl
push
jg
hlt
push
outs
mov
push
ret
and
int
push
aam
daa
mov
ret
add
cmp
movs
mov
jb
loope
not
loopne
pop
sbb
pop
and
ss
pop
push
cmp
pop
jecxz
in
or
cmps
pop
das
or
and
leave
leave
(bad)
add
out
add
sbb
jb
add
pop
daa
or
xchg
and
or
push
or
pop
or
movs
or
push
sbb
lds
ja
pushf
jbe
out
out
ffreep
push
dec
and
aam
scas
lods
or
enter
push
sbb
daa
add
add
push
add
mov
xchg
pop
cwde
pop
mov
out
cmp
addr16
dec
or
sahf
movs
xchg
in
or
or
push
sub
cmp
enter
add
arpl
jno
jg
lea
fwait
dec
ror
xchg
or
sub
or
loopne
add
test
enter
add
adc
add
cs
cmp
dec
or
mov
and
or
iret
or
les
(bad)
dec
cwde
mov
jmpw
test
add
jno
or
inc
or
or
dec
adc
pop
enter
jb
mov
ucomiss
add
cmps
jb
add
add
lea
cwde
out
add
retf
add
outs
mov
sti
dec
or
arpl
inc
out
leave
push
xchg
nop
or
xchg
add
push
cmps
leave
inc
sbb
mov
out
leave
xor
push
or
pop
inc
push
inc
jb
dec
push
(bad)
shl
inc
jb
jmp
jo
pushf
retf
xchg
push
aaa
pop
in
and
push
aas
retf
outs
leave
inc
shl
inc
jb
mov
mov
and
out
xchg
dec
dec
mov
push
(bad)
dec
cs
dec
cs
xchg
mul
mov
push
push
(bad)
xchg
pop
and
int3
add
sub
test
push
and
push
add
mov
dec
sub
daa
xchg
pushf
pop
mov
mov
cmp
fiadd
paddsb
loope
sbb
mov
jg
adc
ss
sbb
ja
fs
cs
xchg
out
addr16
xchg
dec
dec
xchg
aam
pop
leave
dec
dec
leave
into
or
(bad)
fldenv
adc
add
and
dec
dec
and
cmp
pop
fs
push
xchg
out
cdq
pop
leave
dec
ja
ja
mov
jb
mov
lock
mov
sbb
adc
adc
iret
sbb
dec
dec
dec
dec
adc
inc
dec
fisttp
pop
call
xchg
mov
in
daa
into
(bad)
mov
xchg
in
cld
shl
push
pop
leave
and
inc
and
pop
jnp
push
dec
mov
xchg
pop
ja
push
movs
daa
mov
rol
xchg
pop
and
xor
adc
pop
sub
lods
inc
xor
xchg
xchg
mov
dec
fist
movs
mov
mov
adc
shl
pop
sahf
mov
push
jno
ror
and
call
pusha
and
pushf
pop
inc
dec
xchg
inc
repnz
pop
aaa
push
enter
leave
movs
hlt
(bad)
cpuid
popf
adc
and
hlt
rcl
daa
jno
and
das
pop
cmp
push
mov
jnp
jb
outs
jl
jp
sbb
add
add
or
xchg
pop
ror
sub
pushf
aam
push
add
mov
mov
mov
dec
cs
in
dec
aaa
aad
mov
push
jp
icebp
xor
ja
fld
daa
dec
out
or
dec
fisttp
or
inc
pushf
int3
mov
sbb
dec
(bad)
mov
push
lock
retf
pop
repz
nop
xchg
adc
add
fist
bound
dec
dec
xchg
es
(bad)
ins
adc
test
in
mov
(bad)
psraw
mov
out
pop
std
or
or
sbb
mov
or
pop
lock
enter
pop
sbb
je
inc
mov
sbb
sbb
xchg
lods
sbb
cmp
in
sbb
retf
xchg
adc
cmp
inc
jbe
fild
push
add
dec
push
add
pop
adc
fcom
daa
sahf
cmps
add
and
fxsave
mov
mov
daa
rcr
loop
jb
add
hlt
xlat
sbb
sbb
sbb
cmp
fsubr
retf
dec
push
pop
imul
jns
cs
xchg
add
mov
ja
call
fst
pand
pushf
in
in
add
out
sbb
add
or
sbb
das
xchg
ret
in
enter
sbb
or
xor
fldcw
pop
lock
(bad)
ficomp
or
xchg
sub
enter
ja
dec
mov
iret
test
movs
cmp
add
xchg
in
mov
fist
jmp
or
mov
xchg
xchg
pop
jbe
add
mov
fadd
scas
fcom
out
in
iret
in
cmc
add
xchg
inc
and
and
je
gs
mov
pop
xor
push
cmc
mov
sbb
push
icebp
rcr
leave
inc
outs
aam
dec
aas
(bad)
in
cmp
shl
cmp
dec
and
xor
leave
mov
inc
ja
jge
xor
adc
outs
or
add
or
add
cmp
mov
inc
test
jmp
lods
repz
push
mov
and
fs
jl
inc
sbb
aas
rcl
daa
xchg
lock
lds
mov
int3
sbb
xchg
inc
(bad)
test
or
leave
test
fimul
arpl
dec
adc
in
pop
pop
es
jge
scas
popf
out
fst
in
sbb
push
loopne
push
in
push
push
fistp
mov
mov
sbb
mov
ret
mov
or
jle
fdivr
xchg
pushf
dec
and
cli
push
jecxz
fst
mov
cmovs
pop
out
xor
in
adc
inc
repnz
cmp
mov
adc
inc
cmp
mov
cmp
mov
inc
imul
or
jb
(bad)
inc
(bad)
ja
ja
add
adc
bndldx
and
js
ret
jle
or
repz
repnz
scas
in
in
add
(bad)
call
mov
movq
pusha
js
sbb
aas
pusha
and
scas
(bad)
jnp
add
aam
or
das
loopne
out
aaa
mov
or
xchg
mov
mov
cmp
dec
xor
lahf
pop
aas
cmps
or
push
jno
stos
test
mov
and
(bad)
fiadd
fsubp
and
and
in
out
cmp
test
in
out
loopne
repnz
leave
int3
dec
ins
pop
push
and
outs
mov
push
aaa
inc
dec
enter
ss
lahf
dec
shl
les
mov
ja
and
in
and
out
cdq
adc
xor
repnz
aas
and
cmp
out
adc
div
pop
xchg
fdivr
xchg
push
add
aaa
jo
mov
neg
pop
sbb
pushf
mov
pushf
mov
mov
pusha
outs
dec
mov
add
add
or
leave
in
gs
adc
mov
int
rol
sub
inc
mov
scas
in
xchg
pop
cmp
add
inc
ror
(bad)
outs
sbb
mov
mov
dec
mov
call
loop
jne
in
add
cmp
add
jae
jle
and
cmp
jmp
pop
mov
add
scas
data16
sbb
xchg
mov
pop
and
loopne
daa
or
pop
in
jmp
cmp
and
jmp
loopne
push
mov
cmp
adc
mov
ja
in
(bad)
in
sbb
and
pop
jb
je
push
lock
xchg
test
jmp
test
mov
adc
pop
adc
imul
int3
cs
jp
fmul
in
daa
or
inc
in
cmp
imul
nop
rcr
fwait
dec
cs
add
ja
call
inc
dec
push
add
pop
add
add
add
pop
and
in
and
mov
(bad)
in
xor
mov
in
and
inc
mov
add
add
add
xchg
mov
call
xchg
pushf
out
xor
test
pop
mov
jg
pusha
mov
pushf
push
sbb
pop
inc
in
add
jo
jno
dec
mov
dec
add
cmp
out
sbb
dec
jmp
and
out
and
lock
sub
and
add
mov
in
push
inc
pushf
push
and
or
jbe
daa
mov
aaa
add
inc
jo
enter
pop
daa
js
add
or
dec
mov
sub
sbb
in
adc
and
in
adc
push
pop
mov
jb
and
shl
sub
xchg
jb
sbb
enter
push
cmp
inc
add
imul
add
(bad)
jns
inc
mov
mov
leave
pop
push
pop
add
repnz
repnz
daa
int3
iret
loopne
aam
cmp
punpckldq
sub
add
ss
es
je
fs
adc
daa
test
and
mov
in
sub
sub
nop
inc
or
fcom
hlt
ins
mov
in
outs
sub
push
adc
enter
push
add
add
add
aas
push
dec
pop
push
or
xchg
and
imul
or
enter
push
mov
inc
mov
adc
adc
adc
jb
enter
adc
mov
stc
sub
sbb
sub
add
pop
cmps
cmc
xchg
push
or
out
pop
shr
add
pop
cmps
add
lock
cmc
fdiv
inc
in
xchg
out
daa
push
enter
fiadd
push
xchg
jb
add
inc
idiv
in
or
xor
in
add
repz
mov
mov
fisttp
(bad)
fcomip
div
daa
movs
and
adc
cmps
into
cs
and
push
mov
xchg
add
enter
add
and
sbb
or
or
or
jb
enter
add
or
xchg
xor
out
adc
xchg
jl
es
mov
mov
pop
cdq
add
(bad)
and
dec
clc
xor
or
pop
cwde
out
nop
popa
xchg
pop
mov
cmp
add
and
mov
push
cmp
enter
or
or
or
inc
mov
or
or
or
xchg
push
cmp
dec
adc
inc
mov
adc
adc
and
sbb
sbb
sbb
sbb
sbb
xchg
das
inc
call
pop
sbb
jb
sub
aaa
and
push
sub
in
dec
cmps
fbstp
xor
nop
add
jns
jb
add
repnz
sbb
test
mov
cli
inc
test
push
call
(bad)
cmp
jb
add
add
push
daa
inc
mov
pop
and
sub
push
xchg
daa
and
or
cmp
inc
push
dec
dec
adc
xor
leave
xchg
and
add
in
leave
add
mov
cmp
cmp
sbb
sub
xor
xchg
mov
call
pop
dec
xor
push
sbb
and
xor
cld
and
cmp
push
pop
arpl
and
pushf
vmwrite
add
xchg
xchg
xchg
pop
mov
rcr
fstp
cld
push
ja
push
cld
es
push
push
shr
dec
inc
mov
push
mov
xchg
add
and
mov
jb
pop
fmul
jecxz
out
or
xchg
das
inc
stc
or
add
prefetch
jb
sbb
and
adc
adc
pop
adc
jb
enter
push
jp
sbb
inc
mov
sbb
jb
enter
sbb
inc
mov
ret
and
and
and
enter
and
and
cmp
aaa
add
or
push
sub
sub
xchg
and
sub
sub
sub
dec
cs
das
pusha
xor
dec
inc
pop
mov
xor
in
pushf
aaa
mov
mov
in
in
mov
aaa
shr
in
fdiv
loopne
push
lock
or
add
or
adc
sbb
and
sub
dec
dec
mov
adc
adc
cmovle
dec
push
or
dec
dec
or
or
dec
dec
dec
dec
push
add
dec
dec
add
add
imul
inc
dec
sub
imul
xor
cmp
dec
or
cwde
lahf
cmp
mov
mov
jb
enter
or
or
mov
(bad)
push
or
dec
or
or
dec
dec
dec
dec
pop
push
add
dec
add
mov
xchg
push
clc
into
and
add
repnz
sub
ss
dec
ja
inc
das
dec
xchg
add
daa
pop
or
xchg
mov
ss
pop
jb
cmp
vmwrite
cs
push
adc
add
cdq
sbb
xor
pop
daa
daa
out
mov
das
inc
sbb
pop
or
dec
fisttp
cwde
pop
sub
adc
test
add
mov
xchg
je
dec
cmp
push
or
xchg
sbb
inc
adc
pop
cmp
stc
push
sub
jmp
in
cwde
push
cmp
push
cwde
add
jbe
jb
add
jnp
repnz
(bad)
or
fimul
test
dec
add
mov
int3
test
cmp
push
cmp
enter
add
add
cmp
add
add
and
sbb
or
ins
or
xchg
push
or
push
or
or
or
cdq
push
movs
pop
scas
sbb
inc
lds
rcr
sbb
push
adc
enter
and
and
and
inc
mov
and
push
sub
in
or
add
dec
jb
jbe
cmp
leave
leave
in
jbe
bswap
xchg
jecxz
pusha
and
push
cmp
in
sub
mov
jl
mov
mov
rcl
ds
cwde
mov
jns
add
mov
mov
ror
enter
in
add
mov
pop
pop
aas
push
sub
dec
inc
mov
add
add
xchg
xchg
and
push
pop
pop
pusha
cmp
enter
or
or
mov
or
into
fimul
mov
jg
adc
rcl
daa
and
adc
sbb
enter
sbb
sbb
sbb
pop
sbb
enter
push
push
add
sahf
mov
add
ja
xor
push
pop
or
retf
(bad)
loope
push
(bad)
dec
ja
cmps
push
lock
inc
cmovno
inc
add
pop
pop
add
popf
outs
iret
or
dec
aas
xor
in
(bad)
mov
dec
push
push
jnp
int3
das
pop
xor
jbe
lods
daa
fdivr
push
jbe
push
xchg
xor
or
or
xor
xor
inc
invd
test
jb
sbb
or
push
sub
inc
inc
inc
leave
sbb
inc
inc
inc
imul
in
test
dec
mov
mov
(bad)
aam
fist
push
cmovae
in
or
or
or
push
and
push
or
or
xchg
xchg
ud2
adc
push
fidiv
xor
xchg
mov
pop
inc
adc
inc
sbb
pushf
mov
inc
scas
push
pop
inc
into
sahf
pushf
pusha
push
js
dec
pop
sub
or
dec
bnd
mov
pop
rol
cmp
cmp
add
and
or
dec
xor
xor
pop
inc
inc
inc
addr16
fidiv
inc
push
mov
xchg
xchg
daa
and
leave
leave
enter
out
lds
sar
sbb
inc
xor
dec
add
repnz
add
leave
inc
nop
cwde
mov
test
cmpxchg
add
jb
rcr
das
enter
push
add
enter
inc
cs
xchg
out
inc
cmps
push
je
dec
dec
dec
dec
push
and
jmp
xor
in
enter
out
pushf
dec
dec
unpcklps
push
leave
enter
and
add
repnz
inc
push
push
pop
bound
mov
xor
or
xor
pusha
outs
jb
xchg
xlat
dec
mov
sub
in
xchg
adc
xchg
pop
jb
push
dec
and
jae
das
dec
push
add
sbb
jae
add
jmp
sub
in
rcr
out
xchg
in
dec
pushf
sbb
inc
add
das
pop
add
mov
(bad)
dec
cmp
scas
dec
dec
cmp
cmp
dec
dec
dec
dec
cmp
dec
dec
dec
inc
call
dec
dec
scas
jb
xchg
data16
ror
or
(bad)
xlat
push
add
pop
xchg
and
jb
push
push
add
cmp
enter
add
cmp
cmp
push
jp
xor
push
out
or
cmp
add
fwait
adc
call
cld
daa
sbb
jbe
dec
jb
rcl
dec
psrad
lock
dec
dec
adc
xchg
pop
sub
sbb
mov
daa
mov
ret
dec
push
push
or
xchg
xchg
add
sub
sub
iret
mov
rol
enter
fmul
icebp
outs
in
xchg
push
stc
pop
dec
add
or
jb
lea
fisttp
xor
inc
dec
aas
push
dec
cmp
pusha
popa
leave
enter
jo
js
or
xchg
xchg
xchg
dec
dec
dec
dec
sar
jb
dec
adc
pop
cmp
femms
push
xchg
nop
dec
into
dec
xor
dec
dec
push
pushf
pushf
fmul
punpcklbw
xchg
and
js
or
or
leave
leave
enter
mov
leave
mov
dec
adc
xchg
xchg
and
dec
leave
inc
mov
(bad)
push
test
mov
push
addps
in
outs
push
mov
cwde
xchg
sub
sbb
stc
addr16
push
adc
sbb
dec
dec
and
xor
in
and
jmp
ja
xchg
retf
jo
in
pop
dec
sub
push
sbb
and
add
and
dec
push
invd
jbe
push
add
sbb
das
leave
leave
in
in
sub
xor
das
cmp
in
in
or
pop
or
add
shr
and
push
sbb
mov
fcomp
loopne
jns
inc
lds
inc
xlat
push
push
sbb
pop
cmp
ja
xor
xchg
pusha
add
movs
jb
add
xchg
mov
add
pushf
rcr
lock
dec
ja
add
dec
ja
xchg
and
sub
pop
leave
test
jp
mov
ja
lea
xchg
add
movs
mov
pop
popf
xlat
or
scas
sbb
mov
mov
adc
pop
push
sbb
sbb
push
push
push
push
adc
push
push
inc
into
aam
fs
or
xchg
and
mov
sub
mov
jb
adc
adc
dec
adc
push
push
pop
aas
and
nop
jb
sub
xor
cmp
inc
sbb
and
dec
sbb
cmp
enter
and
js
and
sbb
and
and
in
xchg
daa
mov
sub
push
pusha
cs
and
add
mov
mov
mov
fsub
or
or
push
and
leave
enter
das
xor
cmp
xchg
xchg
mov
dec
sqrtps
pop
pop
adc
in
(bad)
sahf
pop
cmps
xchg
xchg
fucomi
scas
dec
mov
mov
xchg
into
(bad)
push
ficomp
out
inc
mov
cld
and
and
and
enter
and
mov
jb
sub
dec
sub
fst
pusha
sub
jb
enter
xor
inc
mov
xor
xchg
and
ret
cmp
cmp
jb
fnstsw
call
cmp
pop
or
adc
sbb
enter
sub
inc
aas
inc
jb
leave
leave
dec
push
pop
inc
gs
sub
xor
dec
sbb
mov
jae
pop
aaa
pop
push
mov
inc
mov
mov
add
xchg
and
pop
cmc
or
or
or
or
or
or
inc
push
push
maxps
sbb
jb
ins
adc
mov
xchg
cmp
cmp
lahf
cmps
scas
mov
cmp
cmp
cmp
cmp
out
neg
sbb
call
jg
pop
pusha
pop
mov
push
mov
movs
dec
inc
out
pop
pop
rcl
pop
jb
pop
jge
mov
adc
xchg
or
jb
dec
pop
and
cmp
jb
pop
add
ss
mov
sub
cmp
in
inc
cmovle
pop
pop
and
pop
nop
pxor
xchg
ja
push
cmps
xchg
daa
mov
adc
sbb
cmp
retf
xchg
es
xor
cmp
add
push
push
pop
pop
push
xchg
or
mov
xchg
pushf
call
pop
stos
mov
pop
shl
enter
adc
loope
push
jns
jb
adc
adc
pop
add
int3
pop
sbb
sbb
add
leave
arpl
cmp
add
rcr
push
and
leave
leave
inc
loopne
lock
enter
add
or
mov
pop
and
sub
xor
xchg
mov
or
jg
or
or
push
push
pop
punpcklbw
push
mov
js
adc
mov
nop
push
cwde
pop
mov
jb
sbb
inc
push
and
and
loopne
pop
push
leave
and
pop
push
sub
popw
mov
cmovo
sub
fild
inc
mov
and
fcmovne
add
jo
mov
out
pusha
ds
in
leave
in
in
cwde
push
push
pop
test
or
cmp
leave
mov
ror
lea
fsub
push
call
xchg
pop
and
xor
lea
add
and
leave
inc
jo
addr16
dec
mov
mov
cmp
pop
mov
nop/reserved
movs
cmp
dec
fs
in
push
das
pop
add
aas
jae
fcmovne
in
jle
xchg
jb
leave
sahf
cmps
or
push
ds
push
shl
outs
out
psubq
add
sbb
jnp
daa
and
daa
add
in
in
enter
(bad)
or
mov
jb
or
or
dec
cs
daa
and
mov
mov
cmps
add
daa
fsub
jmp
cmp
movntps
mov
inc
fs
fs
dec
cmp
(bad)
gs
in
outs
mov
scas
gs
add
nop
scas
fwait
test
pop
cmps
push
jg
jbe
leave
enter
ror
fisttp
(bad)
mul
or
(bad)
jle
or
sbb
daa
adc
adc
adc
in
leave
enter
imul
fs
sbb
sbb
jnp
pop
movzx
shl
and
fisttp
inc
xlat
lahf
pushw
nop
repnz
mov
or
imul
adc
in
and
or
and
mov
(bad)
das
loope
in
inc
sub
outs
mov
add
retf
stos
xlat
addr16
dec
cs
xchg
add
ficomp
mov
nop
add
cwde
add
retf
xchg
add
xlat
mov
or
aas
leave
dec
into
lock
jg
pop
sub
sbb
push
push
add
fild
daa
ins
jle
mov
dec
dec
cmps
mov
(bad)
test
(bad)
in
(bad)
sbb
imul
enter
add
add
jnp
jb
dec
add
pusha
or
pushf
cmp
jo
or
or
dec
inc
mov
dec
mov
and
cmp
in
rcl
adc
or
sbb
sbb
call
fmul
das
sub
push
movntps
jns
cwde
out
push
inc
dec
cmp
push
ins
invd
xor
sub
add
add
pushf
mov
nop
in
outs
pop
das
add
pop
mov
adc
mov
mul
scas
daa
addr16
cs
in
sbb
push
nop
xchg
mov
push
imul
push
and
imul
inc
add
add
sahf
pushf
int3
addps
pop
leave
dec
in
jg
js
mov
mov
add
dec
bswap
xlat
loop
out
in
mov
inc
dec
clc
ins
add
ins
push
or
sbb
or
das
or
fld
outs
push
adc
data16
adc
xchg
push
xchg
and
setge
test
mov
shl
enter
sbb
pop
sbb
das
sbb
push
pushf
ins
retf
sbb
ins
push
xor
add
inc
mov
dec
enter
push
or
or
repnz
or
jl
test
dec
inc
mov
adc
addr16
popw
lods
mov
aas
mov
xchg
xchg
pop
int3
aam
pop
fdiv
enter
paddsb
sbb
sbb
outs
pop
pop
adc
and
and
addr16
inc
sub
and
xchg
es
daa
pop
sub
inc
mov
outs
sub
sub
and
xor
xor
pop
into
xor
xor
xchg
and
xor
in
xchg
fdecstp
cmp
(bad)
outs
push
cmp
push
pop
mov
jb
cmp
cmp
daa
and
ss
outs
ds
inc
dec
in
xchg
mov
jg
inc
pop
inc
inc
mov
jb
inc
jbe
jle
xchg
sahf
int3
sahf
mov
xchg
sahf
dec
xsha1
cmps
dec
and
inc
scas
mov
lahf
mov
enter
push
(bad)
push
ficom
xor
out
push
psadbw
pop
and
jl
push
pop
adc
pop
daa
jb
enter
pop
cmp
pusha
inc
mov
dec
popa
push
bound
imul
and
jnp
and
cmp
push
mov
ds
xor
ins
retf
push
jmp
test
add
dec
or
jno
dec
mov
jno
cmp
add
xchg
and
or
cmp
mov
push
xor
sbb
jno
sbb
jno
pop
and
and
mov
sbb
in
xchg
pop
xor
cmp
inc
fldenv
nop
jb
jmp
leave
leave
leave
jb
nop
cwde
mov
fs
add
rol
cmp
enter
fmul
dec
and
xor
in
fmul
out
jae
push
sub
enter
xor
add
in
leave
dec
push
or
arpl
rdmsr
jb
leave
imul
or
jns
add
adc
and
adc
in
ret
push
retf
pop
rcr
add
mov
jecxz
jmp
neg
sbb
je
push
push
push
and
mov
mov
push
ucomiss
ss
ds
cmovbe
dec
daa
push
sub
out
sub
je
je
mov
sbb
add
enter
retf
pop
rcr
add
jb
jecxz
jmp
repz
add
push
or
das
sbb
and
pop
adc
inc
into
fimul
push
cvtdq2ps
scas
arpl
imul
pop
dec
out
push
jnp
add
pop
xchg
fwait
add
inc
stos
mov
mov
xchg
ret
retf
add
adc
sbb
xor
jecxz
jmp
adc
adc
jbe
or
adc
sbb
enter
and
add
sbb
in
cmp
dec
pop
push
in
push
xor
pop
and
jbe
pextrw
fs
mov
scas
xchg
add
fisttp
stos
add
fs
ret
add
add
jecxz
jmp
add
dec
pop
ja
or
enter
add
jns
repnz
sbb
inc
sahf
mov
add
mov
xchg
push
jnp
aas
mov
push
repnz
enter
ja
pxor
rol
jns
jb
fild
jecxz
jmp
add
mov
add
add
or
and
sub
fs
xor
cmp
inc
dec
add
adc
arpl
outs
daa
and
push
jnp
das
mov
and
sbb
dec
pushf
pushf
pushf
dec
js
js
leave
enter
push
jmp
repz
repnz
add
add
or
add
popf
mov
or
sub
xchg
mov
pop
(bad)
jns
ds
mov
pop
dec
pop
arpl
adc
jae
das
sbb
mov
sbb
jns
ins
retf
fdiv
mov
in
dec
inc
ror
push
jecxz
sbb
bnd
repz
jp
add
daa
and
or
sbb
fs
and
sub
xor
add
cmp
cmp
dec
push
add
adc
arpl
jae
dec
xchg
mov
jnp
das
mov
cmovle
inc
jp
dec
dec
dec
dec
jp
jp
dec
dec
dec
dec
jp
jnp
pop
dec
dec
dec
jnp
jnp
jns
jb
sub
add
push
pop
das
arpl
xchg
daa
mov
push
cmp
mov
jnp
inc
inc
inc
inc
jnp
jnp
pop
inc
inc
inc
jnp
jnp
bnd
dec
jmp
add
or
sbb
or
adc
sbb
and
add
adc
rol
xchg
mov
das
dec
pop
pop
sbb
enter
sub
xor
jl
fwait
jl
stos
mov
mov
inc
sahf
retf
add
or
or
or
repz
jl
push
jns
jns
add
jge
aas
in
call
jnp
fs
add
in
fs
sub
aas
fcom
repnz
inc
push
jge
inc
dec
fcmovne
fild
ja
add
pslld
leave
enter
inc
mov
push
add
es
sbb
test
outs
shr
cmps
sbb
jns
mov
pop
xor
(bad)
mov
daa
and
adc
sbb
or
xor
enter
or
mov
xor
adc
adc
mov
outs
jg
repnz
mov
jg
(bad)
dec
push
inc
xor
or
push
add
sub
in
in
aaa
inc
dec
pop
cmp
in
arpl
or
(bad)
call
dec
inc
mov
adc
xchg
adc
or
and
sub
jb
in
sbb
inc
add
sbb
ins
sbb
mov
movs
and
mov
repnz
(bad)
sub
cld
sub
pop
adc
sbb
dec
inc
xor
xor
leave
enter
pop
push
jne
repnz
mov
adc
lods
xchg
daa
daa
mov
movzx
int
cmp
enter
inc
out
inc
stc
inc
and
jl
add
(bad)
sbb
in
xchg
xchg
inc
xor
dec
inc
dec
jb
in
push
pop
addr16
lahf
jb
pushf
cmp
mov
dec
dec
inc
mov
push
xchg
xchg
and
aad
loopne
jmp
in
enter
je
pop
pop
inc
cmp
jb
pop
sub
popa
and
sbb
bound
fs
leave
leave
leave
xchg
gs
arpl
scas
leave
leave
popa
pusha
imul
adc
inc
sub
xor
add
enter
fiadd
inc
lods
test
push
or
jb
test
clc
push
push
daa
mov
pop
add
pusha
push
xchg
add
dec
nop
cwde
xchg
daa
and
add
jb
mov
ror
sub
lock
daa
xchg
in
cmp
mov
inc
add
mov
pop
arpl
imul
sahf
jae
setnp
or
outs
daa
and
and
cmova
xchg
int3
xchg
or
enter
adc
sbb
add
jb
leave
sub
add
pop
inc
sahf
mov
dec
add
pop
arpl
xchg
daa
and
or
in
enter
xchg
add
xor
mov
ret
das
retf
pop
and
sub
cmp
adc
add
and
sub
daa
and
cmp
pop
inc
dec
in
enter
push
pop
pusha
or
xor
adc
or
mov
test
mov
xchg
mov
(bad)
add
add
and
(bad)
pushf
test
fcomp
sbb
mov
aas
int
inc
fimul
cmove
dec
comiss
inc
fimul
pshufw
adc
adc
adc
mov
cmp
enter
mov
and
sbb
hlt
push
ud0
enter
or
adc
mov
sub
ss
and
xchg
and
bound
ins
sub
sub
sub
movs
cs
pop
mov
in
xor
xor
xor
xor
das
inc
mov
xor
aaa
cmp
enter
cmp
cmp
cmp
inc
mov
cmp
cmp
xchg
xchg
xchg
pop
push
add
jb
enter
inc
mov
loope
mov
ret
dec
out
sbb
sub
and
mov
cmp
add
pop
cmp
sbb
push
cmp
cmp
xchg
lahf
stos
mov
mov
ror
(bad)
loope
pop
sahf
pushf
in
not
xchg
xchg
xchg
xchg
pop
sbb
cs
xchg
xchg
xchg
cmp
xchg
xchg
xchg
xchg
gs
xchg
pushf
cmps
mov
xchg
xchg
xchg
mov
xchg
xchg
xchg
jmp
cmp
fs
push
and
xor
xor
dec
push
bound
js
mov
xchg
and
cdq
movs
cmp
cmp
mov
dec
jns
ficom
push
or
add
pushf
sbb
add
add
dec
xor
or
mov
dec
dec
push
cmp
add
xchg
daa
daa
and
xchg
xchg
(bad)
or
jecxz
sbb
jb
jmp
test
xchg
and
pop
adc
adc
adc
in
leave
enter
inc
adc
mul
sbb
gs
sbb
in
in
fs
js
repnz
and
scas
mov
mov
cmp
fld
pushf
pushf
loope
icebp
sub
enter
xchg
add
or
sub
sbb
dec
sub
pop
xor
xchg
mov
aas
cmovp
dec
push
xor
xor
imul
cmp
sbb
jb
xchg
cmp
xchg
and
ds
cmp
int
fadd
inc
out
inc
xchg
and
stc
inc
xchg
add
cmova
in
sbb
dec
xor
in
jb
inc
inc
inc
dec
inc
in
in
inc
inc
inc
aas
sbb
jb
push
cmp
cmp
xchg
and
push
pop
popa
pop
ins
pop
fst
pop
pop
test
xchg
xchg
pushf
pusha
outs
cmps
popa
mov
mov
jb
arpl
shl
and
sahf
loopne
pop
call
in
fldenv
xchg
add
or
mov
jb
outs
and
jo
jno
addr16
inc
cmp
pop
dec
je
jb
enter
jbe
ja
js
mov
cmp
xchg
jnp
jl
enter
jge
jle
jg
sbb
jb
adc
loop
in
dec
dec
dec
sahf
in
cmp
dec
dec
dec
dec
jl
jp
dec
dec
dec
dec
js
jbe
dec
dec
dec
dec
je
jno
fldenv
and
xchg
std
xchg
add
enter
pop
adc
cmp
in
ss
inc
pushf
dec
cs
ret
mov
pushf
mov
push
nop
add
pushf
test
mov
rcr
or
mov
push
in
leave
enter
and
pop
jns
repnz
or
or
das
push
jo
es
xchg
into
or
jnp
xchg
xchg
cs
mov
inc
sahf
mov
push
mov
dec
dec
dec
rcr
loopne
call
or
fisttp
xchg
addr16
add
push
xchg
mov
and
xchg
xchg
cs
inc
into
sahf
push
add
pop
add
imul
pop
xchg
xchg
xchg
mul
in
into
mov
ror
outs
cmp
jb
or
loopne
das
call
sbb
clc
or
or
adc
xchg
xchg
daa
daa
outs
push
cmp
add
leave
leave
or
cmp
dec
mov
add
dec
inc
mov
xlat
sahf
popf
mov
sets
or
add
or
mov
push
push
outs
push
add
outs
daa
and
data16
aas
xchg
setb
enter
mov
jb
in
or
jmp
cmp
cdq
add
adc
adc
and
and
pop
mul
inc
sbb
pop
arpl
(bad)
jnp
jb
sbb
test
aas
(bad)
pop
inc
mov
call
fst
rcr
psrld
enter
sub
pop
sub
mov
xchg
mov
setp
jnp
ds
addr16
sahf
mov
mov
and
dec
inc
mov
or
retf
mov
aad
aas
loopne
jmp
xor
enter
adc
or
pop
cmp
cmp
pop
das
sub
lea
jnp
sbb
pop
sbb
sbb
sbb
pop
pop
fwait
mov
daa
daa
ins
push
mov
in
xchg
add
add
inc
mov
pushf
or
adc
push
or
and
dec
xor
dec
push
push
in
enter
adc
adc
repnz
lods
pop
mov
daa
and
ftst
sbb
cli
enter
push
setge
sbb
sbb
jb
and
and
inc
pop
addr16
inc
mov
pop
push
in
xchg
and
mov
xchg
sub
sbb
jb
sub
shl
xchg
and
xor
xor
xor
xor
xor
aaa
and
pushf
pop
sbb
and
cmp
in
leave
enter
cmp
pop
ds
cmp
gs
jo
jnp
xchg
and
xchg
inc
pushf
inc
cmps
mov
mov
mov
pop
mov
dec
mul
fimul
dec
hlt
dec
mov
in
or
sub
inc
sahf
xor
dec
push
andps
enter
push
push
jne
sbb
cmp
pop
mov
xchg
pop
mov
mov
enter
int
popa
pop
jecxz
arpl
ins
test
mov
pop
sbb
cmp
fs
inc
imul
mov
ins
addr16
enter
lahf
jge
mov
jb
cmp
sahf
jae
je
jne
jbe
dec
inc
mov
ja
loopne
pop
jmp
and
idiv
mov
fs
enter
jg
or
sbb
repnz
or
test
fimul
outs
jp
test
xchg
and
mov
repnz
(bad)
(bad)
ror
jnp
xchg
psllq
adc
xchg
and
xchg
pop
xchg
sub
xor
dec
call
popa
pushf
ins
popf
ja
lahf
daa
and
pop
lea
enter
ud1
sbb
jb
cmps
in
lock
and
push
stos
adc
in
daa
scas
aas
xor
sbb
repnz
pop
mov
mov
mov
and
jg
mov
daa
mov
pop
stos
mov
aas
ror
in
xchg
mov
in
sbb
repnz
ror
add
mov
inc
mov
pop
inc
xchg
daa
mov
push
leave
pop
pop
retfw
in
fst
xchg
xchg
iret
cmp
shr
mov
aad
(bad)
jmp
fsub
pop
in
leave
enter
sub
das
aaa
fimul
fisttp
pop
loope
loop
xchg
and
jecxz
in
cmp
enter
out
call
cmp
mov
aas
fsubr
inc
inc
mov
out
repnz
std
cmps
or
movlps
repz
sub
cmp
enter
test
clc
mov
pusha
div
das
hlt
inc
mov
std
imul
inc
mov
into
add
mov
cmps
jge
fld
inc
sahf
pushf
out
add
add
pop
fs
xchg
add
sub
in
in
ds
push
in
in
pop
push
and
in
mov
in
mov
int
jb
in
jecxz
stc
test
cmp
jbe
bndldx
and
jb
sbb
inc
sqrtps
jb
sbb
addr16
cmp
cmp
sub
sahf
sub
jb
mov
inc
push
cmp
jmp
test
inc
fimul
pop
and
sub
mov
inc
cmp
dec
cmp
mov
mov
movq
das
test
and
xchg
nop
fwait
(bad)
pop
mov
mov
inc
(bad)
ror
fucomp
xchg
and
daa
repz
stos
or
daa
daa
mov
pop
pop
sub
daa
dec
push
popa
ins
xchg
xchg
daa
daa
ja
push
lea
daa
daa
mov
bt
daa
daa
iret
(bad)
lock
xchg
and
sti
stos
push
adc
daa
xor
dec
push
imul
jb
je
mov
and
cmp
jo
jno
jb
daa
daa
daa
daa
int3
xlat
loop
xchg
xchg
and
clc
lods
add
xchg
xchg
xchg
xchg
sbb
cmp
push
pop
xchg
xchg
xchg
xchg
jno
xchg
popf
test
mov
leave
aam
jmp
add
push
leave
leave
leave
leave
and
inc
leave
leave
leave
leave
dec
pop
arpl
leave
leave
leave
jns
(bad)
call
mov
leave
rcr
out
in
in
std
scas
or
push
in
in
sub
dec
in
in
push
pusha
imul
in
or
into
in
in
ftst
out
cli
jb
jb
scas
add
jb
jb
cmp
push
cmp
jns
pop
push
sahf
pushf
pushf
mov
xchg
xchg
and
iret
rcl
xchg
xchg
xchg
xchg
(bad)
loope
div
leave
leave
mov
or
mov
cmp
fidivr
inc
(bad)
xchg
and
pop
fbstp
leave
leave
leave
enter
xchg
pushf
leave
leave
leave
leave
cmps
mov
enter
leave
rcr
jmp
stc
repnz
in
mov
out
adc
pushf
pushf
sub
inc
dec
pushf
pushf
pushf
pushf
push
bound
pushf
pushf
pushf
pushf
or
pushf
scas
mov
pushf
pushf
(bad)
icebp
cld
dec
dec
dec
mov
dec
dec
dec
dec
xor
dec
push
and
dec
pop
push
out
or
daa
daa
mov
in
fs
adc
ret
in
in
jecxz
stc
jb
jb
mov
bndldx
xor
adc
and
inc
mov
jb
jge
enter
mov
sbb
jb
sub
inc
mov
jmp
imul
leave
enter
add
or
xor
leave
and
pushf
cmp
pop
fs
outs
and
lahf
mov
jno
nop
fwait
inc
ror
xchg
xchg
add
pushf
dec
sahf
push
sahf
inc
add
lock
in
cmps
push
sti
mov
add
pop
jb
ins
in
add
aas
das
push
cmp
inc
cmp
cmp
push
pop
dec
or
outs
nop
leave
in
leave
in
cwde
add
mov
fs
in
mov
pop
ror
or
or
or
or
dec
dec
or
add
inc
clc
adc
fs
adc
sbb
sbb
xor
sbb
pop
mov
jns
sbb
arpl
imul
inc
sahf
jae
jnp
jnp
inc
xchg
fwait
sbb
xchg
daa
mov
pop
ret
sub
leave
enter
daa
fninit
cs
repz
mov
xor
mov
sbb
ss
and
pop
sub
xor
cmp
enter
dec
cmp
push
daa
pop
cmp
arpl
jbe
inc
into
sahf
mov
inc
mov
enter
cmps
inc
scas
inc
mov
sub
ror
(bad)
fimul
pusha
(bad)
mov
add
daa
and
or
adc
and
aas
xor
cmp
xor
enter
or
pop
cmp
push
punpckhbw
jo
adc
inc
mov
nop
adc
dec
dec
outs
daa
mov
sbb
xchg
and
rcr
sbb
sbb
in
leave
fsub
push
psubsb
repz
repnz
and
adc
xchg
and
pop
and
sub
enter
ss
inc
sub
sub
jb
push
sub
sub
jp
sbb
jbe
or
sub
mov
sub
mov
mov
fadd
repnz
cmp
jns
mov
sub
inc
mov
or
or
in
xchg
punpcklbw
imul
adc
sbb
adc
mov
lods
mov
ret
sbb
sbb
in
out
addr16
pop
sahf
cli
push
mov
sbb
leave
enter
and
and
mul
and
push
cmp
jle
mov
xchg
sub
xchg
xchg
and
pop
and
add
fldenv
and
mov
(bad)
jb
enter
cmp
cmp
cmp
inc
mov
cmp
cmp
lahf
mov
push
inc
mov
and
mov
inc
jg
dec
xchg
and
ror
dec
jmp
enter
dec
mov
pop
sbb
jnp
and
push
aas
ss
inc
push
sahf
int3
sahf
mov
pop
bound
xchg
daa
and
pop
or
cdq
movs
pop
imul
pop
mov
jb
pop
shl
popa
out
enter
icebp
arpl
fs
in
adc
sbb
imul
ins
daa
and
push
outs
or
xchg
and
jb
mov
cmpps
fdivr
and
jecxz
out
jp
jnp
jb
in
enter
jge
sbb
jne
cmp
cmp
dec
push
adc
test
jb
leave
enter
xchg
mov
cmp
retf
mov
jmp
mul
xchg
xchg
rol
or
pop
jns
jb
and
cmp
outs
inc
fwait
dec
pushf
pop
popf
enter
fs
outs
lahf
jp
jns
jb
test
movs
and
sbb
movs
mov
fs
xchg
test
test
cmp
idiv
lods
xadd
lods
adc
pop
scas
xchg
and
sub
in
xchg
mov
outs
push
mov
mov
mov
sbb
jb
mov
mov
and
inc
mov
mov
xchg
mov
in
inc
mov
sti
ret
ret
adc
enter
pop
sbb
daa
(bad)
xor
sbb
jb
cmp
retf
pop
inc
sahf
mov
int
jg
mov
ror
shr
enter
int3
(bad)
pop
xlat
stc
jb
in
loop
paddsw
clc
fcmovb
add
inc
into
mov
mov
fisubr
(bad)
xchg
daa
and
inc
loope
loop
mul
jecxz
jno
jg
out
mov
xchg
xchg
call
in
xchg
and
in
mov
jb
out
fucomip
jmp
(bad)
ud2
pop
push
hlt
cmp
sub
aaa
inc
clc
and
pushf
dec
dec
stc
pop
cli
arpl
outs
mov
mov
jns
pop
test
in
retf
add
movs
add
mov
mov
fadd
out
(bad)
int3
fidivr
or
std
lds
or
adc
xchg
xchg
daa
push
or
xor
fs
in
aas
(bad)
cmovp
push
adc
cmp
imul
pop
jbe
adc
inc
mov
sbb
sbb
sbb
sbb
adc
in
out
cli
and
add
(bad)
adc
sbb
and
in
fnstenv
and
daa
push
push
jns
neg
punpckhbw
add
jle
add
and
mov
add
repnz
stos
fwait
retf
add
cmp
ss
test
mov
sbb
xor
xchg
daa
mov
ror
pop
(bad)
loope
in
enter
test
inc
pop
sbb
jb
sbb
inc
cs
cmp
and
pop
dec
dec
pop
dec
pcmpgtw
enter
dec
jnp
xchg
mov
xchg
dec
pushf
dec
cmps
push
mov
enter
mov
rcl
fs
push
jmp
lea
jnp
or
adc
mov
inc
pop
dec
pop
push
pusha
enter
bound
bound
in
in
leave
or
cmp
fs
mov
shr
inc
mov
ins
out
icebp
cld
outs
enter
bswap
pop
dec
adc
jb
cmp
sub
je
jne
dec
sbb
xor
ja
pop
push
jne
inc
dec
dec
mov
jle
enter
loopne
jmp
idiv
repnz
jle
retf
add
sbb
das
and
xchg
mov
mov
lods
mov
ret
lea
jecxz
pmaxsw
into
into
out
add
(bad)
setae
sbb
and
xchg
cmp
ss
pop
call
sbb
jge
mov
enter
push
inc
mov
in
pop
mov
outs
jp
mov
xor
cmps
stos
enter
mov
mov
jbe
leave
rcr
scas
call
inc
mov
mov
or
in
xchg
and
mov
mov
mov
dec
mov
ins
adc
cs
mov
mov
enter
aas
scas
ud1
add
enter
(bad)
iret
pop
fcmovb
in
jbe
in
enter
movups
pop
jns
repnz
int
cmp
sbb
rcl
iret
imul
je
jg
mov
in
repnz
xchg
aam
das
fidivr
sbb
jb
fld
jb
bnd
pmovmskb
loop
inc
mov
jecxz
add
push
in
push
repnz
jno
dec
mov
pop
pusha
add
in
fs
inc
mov
mov
nop
or
enter
or
jb
jb
push
enter
inc
mov
loopne
adc
adc
adc
iret
add
or
adc
ret
jb
sbb
sbb
inc
push
dec
in
sbb
iret
mul
pusha
push
cmp
add
add
mov
iret
out
cwde
or
and
and
dec
inc
icebp
cld
add
pop
shr
leave
in
xchg
adc
sbb
or
jb
in
leave
ds
or
push
or
or
push
maxps
and
xchg
adc
in
leave
enter
int
psubusb
repnz
sbb
stc
sbb
add
and
sbb
sbb
push
and
mov
cmp
pop
inc
push
pop
leave
in
leave
enter
jb
(bad)
jb
leave
in
mov
pop
xchg
sahf
es
xor
das
sahf
popf
mov
xor
test
add
enter
or
pop
xor
jb
sub
dec
cmp
jns
sbb
pop
outs
cmp
cmp
cmp
fimul
mov
ffreep
inc
psrld
xchg
and
inc
call
cmp
in
dec
ror
dec
adc
pop
cmp
adc
in
xchg
ins
push
push
add
push
mov
enter
mov
or
fs
mov
xchg
and
push
fcomp
adc
adc
enter
lock
aam
adc
jbe
push
pop
adc
sbb
and
mov
xor
xor
cmp
daa
and
dec
push
push
pop
pop
pusha
fst
push
das
in
leave
enter
mov
pop
mov
fs
sub
hlt
sub
cmp
cmp
or
adc
das
sbb
inc
mov
and
xor
cmp
enter
inc
dec
ss
aaa
cmp
fs
cmp
je
mov
cmp
mov
xchg
aas
into
sahf
mov
inc
lfs
push
and
inc
les
inc
fwait
jb
test
sti
add
push
adc
leave
enter
xor
das
cmp
leave
in
push
or
pop
imul
jo
mov
outs
daa
mov
rol
int3
xchg
xchg
or
mov
imul
pop
sbb
xchg
and
and
das
add
push
mul
inc
(bad)
adc
adc
mul
adc
xchg
popf
pop
aas
test
mov
mov
leave
sbb
aam
sbb
cld
cmp
add
or
pop
push
and
and
and
enter
daa
pop
sub
cmp
add
(bad)
sub
outs
call
fcmovne
enter
xor
fmul
repnz
enter
std
aaa
(bad)
cmp
sbb
adc
push
cmp
cmp
xchg
xchg
push
and
das
ds
bound
mov
outs
add
inc
mov
fs
mov
addr16
mov
btc
ret
add
in
leave
enter
fisttp
pop
jecxz
in
in
jmp
psllq
pminub
sbb
repnz
adc
adc
inc
sahf
mov
or
xchg
xchg
and
sbb
pop
in
xchg
xchg
arpl
push
jnp
cmp
cmp
and
dec
inc
sahf
mov
dec
and
mov
ficomp
push
movups
out
call
cmp
pop
or
je
pop
pushf
mov
add
push
jg
sahf
pushf
pushf
mov
in
xchg
and
adc
adc
jb
in
adc
cmp
cmp
add
mov
and
cmp
leave
enter
and
pop
jb
in
pop
and
add
sub
jno
sub
xchg
xchg
cs
das
test
movs
lea
fsubp
cmp
jb
call
clc
fld
add
inc
into
mov
add
and
retf
or
push
and
dec
mov
in
outs
add
test
in
pop
movs
or
and
(bad)
or
or
or
out
paddw
fiadd
cmp
adc
adc
adc
xchg
daa
and
push
inc
dec
sbb
leave
enter
sbb
sbb
cmp
fs
sbb
and
jbe
sbb
and
cmp
aad
es
jmp
mul
inc
into
push
fild
sub
or
pop
and
jb
enter
sub
pushf
cmp
dec
push
xor
pusha
xor
inc
sahf
mov
xor
enter
cmp
in
cmp
ds
and
fstp
jecxz
jmp
in
xchg
mov
paddd
or
adc
mov
jb
inc
sub
adc
and
inc
dec
push
dec
das
pop
dec
xchg
fst
dec
dec
jle
jb
enter
push
cdq
push
movs
push
into
sahf
mov
push
mov
push
pop
(bad)
pop
mov
and
pop
(bad)
pop
paddsw
in
xchg
pop
cmc
pop
std
pop
loope
pop
inc
mov
or
bound
and
in
leave
leave
popa
pusha
imul
ins
fistp
outs
pop
cmp
jns
outs
jbe
jle
jb
dec
inc
mov
test
mov
mov
in
xchg
jp
jnp
jl
jge
mov
out
jle
jg
loop
or
(bad)
pop
sbb
sbb
jb
daa
test
xchg
xchg
xchg
or
dec
mov
push
(bad)
pop
enter
addr16
pop
outs
xchg
ja
fs
leave
jg
xchg
das
(bad)
xchg
xchg
jb
neg
call
xor
fstp
call
mov
jecxz
mov
movs
sub
xor
test
xchg
stos
popa
stos
ins
lods
je
jb
bnd
test
jb
cmps
movs
movs
mov
mov
jb
jb
popf
fwait
mov
jl
test
and
lahf
ret
scas
xchg
mov
lea
(bad)
jmp
mul
add
or
in
xchg
and
add
cmp
or
dec
pop
or
inc
mov
jp
test
leave
enter
adc
in
leave
mov
or
(bad)
push
sbb
xor
fucomp
sbb
dec
inc
mov
or
pop
push
in
enter
pop
xor
jnp
jb
dec
and
popa
ins
and
xor
imul
scas
sub
inc
les
in
fxam
xor
lock
xor
push
xor
sbb
adc
push
daa
xor
in
xchg
and
cmp
cmp
je
jg
enter
mov
xchg
inc
mov
in
inc
aas
ds
cmp
cmp
jb
in
cmp
dec
mov
xchg
retf
ror
xchg
fst
push
or
add
ret
fs
sbb
and
popf
xchg
xchg
and
push
cmp
inc
or
dec
pop
mov
mov
mov
mov
add
mov
ror
pavgb
movs
xor
cmp
or
fwait
and
adc
adc
xor
add
sub
mov
jns
pop
inc
dec
sbb
dec
inc
sahf
pop
sbb
rcl
push
xchg
call
mov
call
mov
rol
add
in
leave
fsub
or
call
and
jmp
mov
daa
ss
add
dec
add
in
xchg
push
bound
ins
pop
js
sbb
jnp
or
or
and
scas
or
xchg
xchg
xchg
xchg
rcr
out
cmp
xchg
cld
jmp
pushf
pushf
pushf
sbb
push
adc
inc
mov
add
push
pop
push
pop
enter
popa
and
repnz
or
cmp
scas
mov
iret
popf
mov
sub
sti
and
pushf
por
adc
sbb
daa
jb
enter
xor
ins
jb
xor
jg
mov
pop
outs
jmp
push
imul
mov
xchg
cmp
repnz
das
rol
sbb
xlat
inc
pop
loop
dec
and
pushf
psubb
in
add
dec
sbb
dec
mov
fisubr
pop
punpcklbw
push
and
js
or
nop
pop
in
cwde
in
mov
mov
add
cmp
add
in
add
leave
enter
push
adc
sbb
jb
leave
and
or
or
or
dec
adc
push
adc
dec
inc
mov
pusha
push
enter
push
or
nop
cwde
sbb
mov
jb
fs
push
pop
rcr
cmp
jbe
jg
and
loopne
call
sbb
and
daa
or
xchg
xchg
mov
pop
adc
sbb
daa
leave
leave
leave
leave
es
enter
and
sub
cmp
sub
xor
sbb
cmp
push
cmp
pusha
cmp
xchg
and
add
js
xor
arpl
cmp
pop
inc
mov
stc
ficom
push
mov
and
enter
fadd
loopne
call
or
mov
or
pop
adc
or
aas
and
sub
xor
daa
mov
cmovo
aas
pop
adc
pusha
push
push
in
js
das
sbb
nop
sbb
sbb
xor
sbb
and
sahf
mov
and
and
enter
and
in
in
and
and
cmp
sub
sub
sub
and
or
adc
sbb
xchg
retf
and
mov
pop
add
push
mov
lahf
movs
lahf
lock
cdq
adc
lock
lock
test
cmpxchg
lahf
cs
and
push
xchg
fcomp
test
icebp
add
or
ins
sbb
and
enter
push
sub
xor
in
cmp
aas
inc
dec
sbb
jns
repnz
sbb
inc
sahf
mov
and
leave
enter
and
fs
mov
das
mov
pushf
cmp
fsub
cs
call
mov
xor
repnz
invd
leave
in
enter
xor
xor
leave
in
sub
pop
xor
cmp
inc
cmp
and
jb
cmp
cmp
lahf
repnz
bnd
jb
repnz
repnz
xor
push
mov
jb
lock
repz
repz
dec
inc
sahf
int3
pop
sbb
add
dec
dec
cmovs
or
imul
je
outs
mov
xchg
paddusb
into
das
mov
rcr
loop
pop
enter
clc
sbb
add
push
sbb
jb
sbb
and
das
cmp
dec
inc
mov
data16
xchg
and
jno
jl
xchg
xchg
es
test
mov
into
sahf
mov
sub
aam
pandn
jmp
xchg
xor
cdq
rcr
rcr
mov
movs
add
mov
add
mov
add
bnd
rol
ror
or
loopne
or
xchg
xchg
retf
or
push
pusha
aaa
mov
daa
mul
push
sub
xor
pop
leave
dec
add
pusha
imul
and
jbe
add
enter
mov
mov
fs
ret
push
or
sbb
(bad)
adc
test
dec
inc
xor
das
inc
pop
push
xchg
xchg
mov
pop
sbb
sbb
jb
enter
sbb
dec
cwde
mov
and
ins
cs
and
loope
in
es
idiv
add
prefetch
leave
enter
and
cs
mul
inc
cmovg
pop
xor
sbb
xor
xor
xor
xor
pushf
cmps
lss
mov
enter
push
sub
stc
and
sub
movs
push
sub
add
stc
and
and
stc
stc
stc
stc
cmp
movs
sub
lds
inc
mov
rcr
or
and
cld
adc
cli
pop
adc
sbb
pop
sub
outs
mov
and
setns
movs
sbb
scas
sbb
jns
push
mov
add
daa
daa
inc
mov
add
ret
enter
or
or
shr
pop
cli
stc
sti
popf
push
(bad)
movq
mov
sbb
das
and
dec
adc
push
in
movs
movs
xchg
test
nop
cwde
setl
sti
leave
enter
ds
leave
arpl
fcomp
sbb
cmp
fisttp
or
push
add
sbb
and
xor
add
xchg
and
or
mov
jb
or
enter
mov
adc
jb
out
cmc
adc
add
adc
and
pop
adc
cmp
enter
sbb
jae
and
sbb
sbb
sbb
in
xchg
pop
mov
and
and
and
inc
and
dec
or
sbb
and
daa
daa
sub
cmp
inc
dec
dec
dec
dec
dec
push
pop
popa
xchg
and
imul
leave
enter
xchg
cmp
cmp
mov
into
pop
sar
repz
psubq
enter
add
cmp
mul
inc
xor
inc
aas
push
dec
mov
cmp
gs
dec
jne
xchg
xchg
and
dec
test
cmp
enter
push
movs
push
lods
push
jb
cmp
mov
pextrw
sbb
aad
pop
nop
and
in
sbb
push
or
push
add
in
xchg
add
add
add
sbb
pop
pop
imul
or
and
or
mov
adc
adc
fild
lock
lods
rcr
ds
sbb
and
sub
inc
repnz
cmp
fild
adc
cmp
add
fistp
repnz
in
add
sahf
mov
push
jne
or
das
xchg
or
jnp
xchg
and
jbe
pushf
add
jb
enter
adc
cmp
jns
adc
sbb
sbb
dec
inc
mov
sbb
hlt
push
dec
xchg
mov
add
unpckhps
and
in
leave
in
sub
aas
ss
and
jb
fs
bound
aas
ins
sub
inc
mov
or
fst
mov
enter
(bad)
(bad)
xor
xor
cld
ss
out
cmp
jo
add
sti
inc
mov
add
add
add
daa
add
push
cmp
mov
das
pop
add
je
cmp
fs
push
pop
xchg
push
adc
mov
adc
and
adc
mov
add
enter
sbb
and
pop
cmp
xchg
jbe
leave
inc
out
jle
(bad)
xor
xchg
and
es
daa
test
add
xor
and
pop
add
sub
and
inc
push
and
cmp
add
sub
mov
push
ja
mov
ficom
or
inc
lahf
jg
cs
inc
push
push
dec
das
mov
jl
das
inc
data16
mov
addr16
aaa
push
dec
inc
je
popa
adc
aas
sbb
pushf
xchg
addr16
int
cmp
mov
inc
nop
call
sahf
sub
inc
aas
lock
cld
add
sbb
jb
inc
adc
or
and
lods
mov
mov
adc
mov
addr16
add
aam
and
pushf
cmp
mov
sub
xchg
add
dec
and
shr
dec
add
out
daa
xchg
and
push
aas
add
push
in
idiv
pop
mov
dec
cmp
nop
comiss
and
das
pop
inc
inc
xchg
and
sbb
dec
inc
xchg
rol
or
cmps
mov
inc
pop
inc
pop
dec
add
adc
dec
arpl
(bad)
mov
and
mov
jnp
inc
push
in
xor
inc
mov
push
fldenv
xlat
sub
push
aaa
adc
nop
xchg
push
mov
out
outs
imul
sbb
dec
and
ins
adc
fsub
ja
and
mov
pop
push
outs
arpl
js
and
mov
jb
or
inc
(bad)
das
add
pop
adc
add
pop
and
movs
and
or
jg
mov
pop
push
cmp
bt
pusha
nop
pusha
inc
jg
sub
outs
nop
add
pop
pop
add
pop
test
dec
jle
mov
and
pop
sbb
aas
pop
aam
outs
jae
and
and
mov
int3
inc
(bad)
adc
inc
outs
je
inc
mov
stos
test
fild
adc
inc
cmps
mov
jg
jbe
dec
comiss
add
pop
pop
(bad)
sub
jnp
gs
ja
jbe
cmp
repz
jae
jno
repz
rep
outs
ins
ins
imul
cmp
push
push
mul
fbld
push
pushf
mov
out
lock
xor
repz
inc
pusha
mov
cmp
or
cmp
pop
inc
cmp
mov
cdq
add
in
aas
pusha
imul
call
(bad)
pop
inc
inc
pop
pop
(bad)
dec
inc
dec
push
pop
push
aam
cmps
movs
push
adc
stos
sbb
push
gs
inc
jbe
jmp
in
ja
sbb
sbb
xchg
sbb
jne
aam
push
mov
push
dec
addr16
xchg
mov
(bad)
rcr
mov
xchg
inc
sbb
ja
inc
dec
lock
mov
sub
dec
movs
mov
sar
or
les
aas
add
dec
outs
pop
or
xchg
adc
xchg
dec
add
imul
mov
stos
jbe
outs
dec
addps
dec
nop
or
inc
sar
sbb
imul
jge
inc
pusha
mov
scas
and
outs
shr
add
fbstp
das
adc
xchg
movs
xchg
mov
fcom
ins
xor
sub
inc
adc
movlps
movs
cwde
inc
lods
push
adc
pop
dec
pop
xchg
lahf
xchg
js
fs
mov
cwde
jnp
push
push
inc
and
pop
push
sbb
dec
shl
and
jbe
and
daa
clc
adc
pop
jae
inc
lods
inc
fstp
(bad)
xor
inc
pop
iret
push
sub
lods
addr16
dec
mov
push
adc
fild
sbb
popf
test
jg
inc
inc
xor
nop
bound
mov
cmps
pop
dec
xor
sub
cmp
adc
mov
mov
inc
aad
mov
add
movs
pop
add
inc
dec
fs
sbb
aaa
sbb
or
jo
push
dec
pop
adc
in
jb
or
and
data16
leave
rol
sbb
push
pusha
les
dec
ins
sub
js
clc
gs
dec
mov
mov
fsubr
or
out
(bad)
mov
rcl
sub
push
daa
xchg
and
cmps
inc
imul
inc
inc
and
dec
std
push
mov
push
xor
cs
and
aas
div
push
outs
ins
(bad)
fcmovnbe
jae
inc
push
sub
pop
out
jmp
lods
xchg
addr16
mov
in
ja
push
inc
or
pop
adc
mov
inc
call
pop
adc
(bad)
jg
pop
sbb
je
pop
inc
xor
and
xchg
and
push
inc
rcr
sub
fimul
inc
push
and
movs
or
pop
adc
pop
out
push
arpl
push
or
aaa
push
jmp
fist
inc
pop
pop
adc
fidivr
push
push
adc
pop
inc
pop
add
push
mov
fsubr
aaa
xchg
(bad)
rcl
or
pop
and
mov
rcr
mov
ins
inc
mov
xor
jae
fimul
inc
inc
retf
xchg
fldenv
push
das
pop
xor
push
add
std
pop
cmps
aaa
jno
(bad)
dec
adc
push
jno
mov
das
femms
repnz
pop
add
fadd
adc
ins
popa
lea
push
fbstp
aaa
add
das
cmp
shld
pop
or
push
retf
and
jo
out
sub
ss
mov
ja
popa
jl
jnp
xor
adc
mov
icebp
mov
inc
cmp
jns
xor
cmp
das
adc
push
(bad)
xor
fs
adc
lods
inc
data16
pushf
adc
popf
mov
test
aaa
lods
out
lea
inc
inc
imul
sub
in
push
mov
adc
fisttp
(bad)
mov
aas
call
nop
pop
push
dec
push
dec
inc
pop
pop
inc
or
xchg
mov
sub
push
inc
aam
or
dec
aas
cmp
push
xor
or
aas
xchg
pop
data16
push
lahf
rol
adc
andnps
push
dec
dec
dec
push
xor
mov
sub
mov
out
add
sahf
xchg
xchg
cwde
mov
pop
(bad)
pop
and
add
cli
nop
inc
adc
int3
sbb
lods
cwde
add
mov
pusha
add
scas
pop
xor
or
mov
push
enter
inc
push
adc
outs
xor
ins
inc
xchg
sub
outs
or
outs
pop
pop
cmps
dec
aaa
pop
push
or
jbe
or
push
imul
dec
dec
inc
inc
pop
inc
dec
inc
dec
push
sahf
adc
mov
lods
xor
dec
inc
dec
bound
mov
aad
cmovg
pop
cmps
push
inc
imul
or
xchg
idiv
daa
aaa
mov
pushf
sbb
xchg
xchg
cwde
rol
mov
cmp
or
jo
pop
pusha
sub
and
sub
out
xor
inc
nop
lea
adc
mov
adc
or
push
fcmovnu
cmps
dec
push
test
sub
fiadd
es
aam
adc
inc
ja
fiadd
add
jg
shl
sub
sbb
adc
cmp
push
movs
les
mov
and
xor
test
fcmovb
test
dec
push
inc
jl
sub
add
bound
jb
push
inc
sub
out
mov
iretw
inc
push
shl
push
dec
nop
pop
add
push
inc
dec
mov
sbb
mov
mov
rcr
add
pop
sbb
and
dec
add
mov
ja
(bad)
out
ins
push
pusha
repz
repz
inc
inc
cmp
out
cmp
and
(bad)
jns
cmp
out
clc
loopne
mov
pop
ins
nop
mov
in
stos
les
adc
cwde
out
sahf
out
mov
pop
dec
iret
mov
sahf
cmp
or
clc
in
cmp
repz
and
test
addr16
lock
inc
cmp
push
push
pop
add
push
pop
push
cmp
xlat
sbb
pusha
out
cmp
dec
dec
pop
stc
mov
jle
dec
push
(bad)
out
test
mov
adc
aaa
xlat
pusha
sub
inc
test
push
enter
dec
push
push
daa
push
sub
sub
ror
leave
push
sub
ins
ret
jae
popa
mov
push
dec
mov
mov
aaa
ins
aam
adc
xchg
cmps
adc
pop
xchg
test
pusha
pop
test
sbb
xor
aas
stos
mov
sbb
ror
sbb
adc
inc
out
adc
or
inc
lods
jl
jg
cmp
and
cmp
cmp
retf
clc
retf
pop
push
rcr
cmp
jg
inc
mov
adc
pop
dec
pop
loope
outs
mov
add
push
fs
dec
xchg
inc
mov
xchg
jg
mov
sbb
xlat
add
das
sbb
xor
inc
movs
push
mov
sbb
(bad)
rcl
pusha
out
mov
and
stc
xchg
sub
mov
std
add
pop
adc
cmps
add
add
daa
test
mov
sbb
inc
hlt
add
xor
jb
push
aaa
into
adc
jns
std
sub
daa
adc
in
ss
jns
lahf
imul
push
and
and
and
ds
inc
sbb
fiadd
mov
and
cmp
jne
dec
jmp
and
mov
sbb
adc
fs
sbb
sub
xchg
jg
sbb
mov
inc
xchg
fsub
stos
call
push
or
ja
out
pop
sbb
fimul
lock
leave
xchg
out
and
movs
sahf
les
pop
lds
fadd
pop
test
adc
out
inc
inc
or
jmp
and
mov
xchg
inc
jecxz
push
adc
loopne
in
pop
inc
mov
or
(bad)
sbb
scas
push
aas
and
inc
mov
aaa
adc
stos
push
aas
aam
aam
xchg
pusha
nop
test
test
inc
push
out
mov
pop
in
xchg
pop
push
cmps
inc
or
(bad)
push
emms
push
mov
into
dec
cmp
iret
fsubr
sub
iret
ja
add
lods
outs
jae
pop
mov
cwde
(bad)
xlat
cld
jmp
pop
push
in
add
xchg
and
sub
xlat
das
push
retf
add
leave
out
jg
pop
xchg
clc
add
in
or
jo
fbld
add
pop
add
mov
pop
or
aam
not
push
and
movs
and
sub
out
int
push
loop
loopne
sub
mov
sti
inc
dec
or
xchg
sbb
or
fisttp
mov
push
mov
xchg
shr
iret
pop
adc
scas
xlat
rcl
ins
add
test
add
add
inc
nop
cmova
pop
push
add
inc
add
pop
push
push
sub
sbb
add
arpl
mov
push
fadd
int
stos
add
(bad)
ror
(bad)
stc
daa
bound
xor
pop
mov
xor
adc
lock
fxch
push
ins
push
je
aas
sbb
push
cmps
das
mov
xor
jbe
enter
cmc
and
jmp
mov
cmp
call
out
adc
add
cmc
dec
aas
mov
mov
and
mov
xlat
inc
aas
shr
inc
push
mov
or
aad
jne
imul
addr16
xchg
movs
push
pop
xrelease
or
pusha
addr16
sub
ffreep
xor
sbb
or
test
call
xor
mov
clc
mov
scas
movs
pop
add
popf
xchg
aad
and
inc
jb
mov
test
xchg
sbb
pop
and
mov
fist
loope
mov
add
inc
sub
mov
adc
(bad)
(bad)
mov
nop
pop
adc
mov
cmps
mov
shl
or
lds
and
(bad)
xor
dec
add
jno
dec
(bad)
imul
inc
adc
adc
scas
jo
les
shl
sbb
inc
out
add
fbld
adc
mov
mov
dec
inc
xchg
adc
push
inc
add
sbb
les
daa
push
inc
fidiv
add
jo
inc
dec
mov
cmps
mov
push
mov
adc
inc
add
adc
daa
add
cli
inc
mov
leave
inc
jle
rcr
or
test
inc
pusha
nop
mov
frstor
fsub
test
inc
jnp
clc
adc
jl
add
jg
fiadd
and
pop
ss
stc
sbb
inc
jnp
cmp
enter
aam
(bad)
and
inc
scas
add
xchg
cmp
(bad)
stos
shl
sub
inc
arpl
inc
ins
hlt
pop
mov
jno
dec
gs
dec
loopne
sbb
addr16
scas
push
adc
mov
das
or
out
xor
lods
push
jo
jns
(bad)
aas
(bad)
hlt
ins
aam
dec
repnz
outs
xor
push
pop
aad
imul
inc
enter
das
lock
sbb
hlt
xchg
lods
inc
fist
inc
test
mov
dec
imul
nop
sub
xchg
daa
cmp
xchg
push
dec
pop
mov
cmp
sbb
(bad)
ins
adc
adc
(bad)
sbb
dec
pop
mov
push
adc
js
jp
(bad)
pop
scas
cmp
sahf
cs
or
push
adc
cmp
in
push
push
sbb
sbb
(bad)
cmp
mov
clc
clc
add
jo
push
add
inc
sub
or
inc
push
add
aaa
or
add
push
or
dec
fwait
mov
ja
inc
inc
pop
loopne
push
cmp
pop
scas
data16
clc
enter
dec
test
(bad)
inc
pop
or
mov
jl
imul
test
xchg
pop
jnp
xchg
mov
dec
iret
push
pop
add
int
cmp
sub
xchg
and
mov
out
bound
sbb
sbb
stos
test
ficomp
(bad)
lahf
cmp
pop
xlat
hlt
lds
(bad)
push
dec
mov
das
lods
push
lea
out
push
adc
push
push
cs
popa
and
popa
lods
fsub
add
sbb
inc
cmp
xchg
cmp
pop
adc
popa
popa
pop
mov
lods
cmp
dec
ins
xchg
out
dec
mov
dec
push
cmp
mov
sbb
or
sbb
(bad)
mov
call
add
iret
repz
mov
and
cs
push
int3
(bad)
push
push
in
cmp
repz
enter
mov
cmp
pop
dec
xor
push
clc
sahf
out
sahf
loopne
cwde
test
fidivr
jns
sahf
(bad)
push
push
adc
push
or
jnp
repz
add
add
fmul
push
lods
test
iret
repz
push
sbb
push
fdivr
out
mov
xchg
sbb
out
xor
(bad)
push
in
push
loopne
sbb
repz
(bad)
clc
mov
pop
ja
dec
xchg
push
jl
inc
mov
out
mov
push
hlt
push
fcom
je
sahf
out
faddp
push
movs
mov
xor
dec
jnp
dec
dec
dec
dec
dec
(bad)
fld
xchg
cmp
int3
push
mov
repz
test
pushf
nop
jl
push
bound
les
arpl
jne
ss
out
jo
dec
push
xor
in
xor
push
dec
inc
dec
inc
inc
dec
push
mov
push
adc
sub
xchg
pop
inc
movs
or
or
sub
mov
stos
xor
lods
dec
ret
in
mov
and
lea
repz
mov
repz
in
loope
sar
fstp
loopne
xlat
adc
sbb
dec
pop
pop
xor
punpcklbw
inc
test
aaa
pop
je
mov
pop
xchg
push
mov
inc
inc
sar
and
(bad)
out
mov
xchg
push
js
xchg
sbb
pop
bound
add
pop
cmps
sub
inc
jnp
dec
inc
inc
dec
iret
push
stos
cdq
mov
stos
mov
xchg
test
xchg
pusha
out
jns
outs
clc
xor
jns
xchg
add
push
mov
pusha
xchg
scas
inc
outs
pop
sub
inc
sbb
addr16
dec
push
xchg
jne
jo
mov
ja
inc
or
add
enter
outs
je
in
mov
dec
xchg
fcom
or
scas
ss
sbb
lahf
inc
enter
std
pop
cmps
sbb
inc
addr16
push
setns
add
adc
add
pop
pop
adc
mov
inc
dec
mov
scas
dec
aaa
pusha
push
test
test
inc
pop
mov
test
push
fcom
jl
mov
jns
xor
push
inc
(bad)
fbstp
cmp
das
pusha
leave
jg
push
xor
sub
push
cmps
inc
sbb
xchg
mov
test
lea
mov
push
mov
cmp
arpl
push
inc
and
mov
xchg
and
dec
pop
adc
(bad)
mov
addr16
cmp
or
and
shl
sub
pop
adc
call
nop
jg
in
xchg
(bad)
push
add
iret
repz
add
add
leave
repz
or
or
xchg
fisttp
aaa
or
leave
mov
adc
adc
and
pop
inc
inc
push
fucomi
jbe
addr16
das
push
xorps
pop
mov
das
ins
push
and
in
sbb
jb
pop
and
out
xchg
fild
xchg
fmul
sahf
sub
dec
outs
pop
pushf
mov
into
aas
xlat
sbb
mov
and
and
dec
jle
sbb
pop
inc
push
fs
lahf
fiadd
sbb
jbe
aam
add
es
and
or
(bad)
jns
and
jmp
cmp
imul
add
and
enter
add
or
add
or
lods
add
add
(bad)
inc
sbb
mov
inc
push
add
movs
add
addr16
mov
and
fisttp
mov
jb
lahf
loopne
inc
jle
test
shl
mov
mov
(bad)
(bad)
add
mov
in
call
nop
pop
jle
adc
push
ficomp
fnstcw
mov
fidiv
rcr
fsubp
stc
jb
jle
shl
fdiv
cmp
repz
aam
int3
enter
cmp
sar
sahf
out
pop
mov
jo
jns
out
push
out
sahf
pop
push
push
dec
inc
cmp
in
xor
and
sbb
jns
addr16
cld
lock
daa
jle
out
sar
jns
dec
push
test
mov
jns
mov
cmp
out
xor
adc
iret
repz
in
aam
fdivp
cmp
les
dec
sahf
out
mov
pusha
push
repz
repz
dec
cmp
add
jns
lods
in
in
enter
dec
mov
and
in
sbb
add
(bad)
call
sar
fdivr
ja
push
inc
nop
inc
ss
cs
fld
mov
mov
or
in
ins
and
and
aas
sbb
aaa
inc
in
fxch
xor
das
push
push
push
fnstsw
(bad)
dec
ror
mov
dec
adc
xchg
pop
or
pop
gs
jae
ss
movs
sbb
fild
jmp
add
jg
push
cmp
repz
xchg
mov
jns
out
repz
xor
repz
fsub
push
pop
ja
cmps
stc
cmp
mov
repnz
das
test
ins
add
xchg
or
xchg
xor
inc
pop
pop
scas
enter
push
mov
sbb
sbb
pop
retf
cwde
and
popf
aas
inc
or
adc
mov
jo
(bad)
and
or
fst
adc
jb
in
enter
adc
push
mov
pop
pop
push
and
and
enter
and
jp
push
outs
clc
jmp
scas
shl
pop
adc
jp
jg
push
ins
pop
cs
data16
(bad)
outs
sbb
add
cld
sbb
push
not
or
imul
cld
jb
jg
jo
dec
mov
mov
mov
in
jg
add
enter
xchg
push
ret
cmovno
enter
adc
xchg
aas
repnz
sbb
into
sbb
ror
(bad)
(bad)
(bad)
jmp
lock
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
jmp
scas
sahf
inc
stc
mov
adc
mov
dec
js
inc
outs
(bad)
(bad)
(bad)
(bad)
jmp
mov
or
mov
test
daa
cmp
inc
mov
popf
sti
jmp
stos
(bad)
(bad)
(bad)
call
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
(bad)
(bad)
(bad)
jmp
dec
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
(bad)
(bad)
jmp
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
(bad)
(bad)
push
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
add
les
mov
(bad)
sti
aas
jno
sti
or
aas
pop
jmp
fisttp
xchg
outs
adc
sub
sbb
fs
icebp
aas
ror
and
sbb
lds
mov
ins
scas
add
aas
xor
aad
mov
(bad)
(bad)
inc
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
(bad)
(bad)
(bad)
(bad)
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
(bad)
(bad)
jle
push
jl
mov
das
lea
mov
inc
inc
aas
movs
jmp
jg
(bad)
(bad)
(bad)
jmp
aas
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
(bad)
(bad)
(bad)
jmp
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
pop
mov
jne
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
(bad)
(bad)
push
adc
mov
sub
dec
in
ss
push
scas
into
imul
fdivrp
(bad)
(bad)
inc
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
xchg
dec
std
mov
ror
add
cmps
fmul
xchg
es
or
and
mov
xchg
out
sbb
das
or
or
adc
lock
add
jno
pop
lds
arpl
mov
mov
add
call
aas
outs
jne
pop
outs
pop
jb
outs
gs
xor
js
add
lds
and
sbb
std
xchg
pop
pop
push
dec
test
xor
adc
ret
cmps
xchg
push
mov
mov
mov
loopne
out
mov
test
bound
pop
xchg
or
arpl
nop
(bad)
aas
add
xor
adc
mov
mov
cs
or
ds
add
jae
hlt
xor
enter
sti
mov
dec
mov
push
dec
inc
dec
push
push
or
outs
xor
mov
cs
repz
das
hlt
ins
push
push
cmp
or
sahf
out
repz
fmul
mov
out
sahf
out
push
mov
sahf
and
or
clc
call
cmp
mov
sbb
popf
push
repnz
push
xor
or
cld
dec
jnp
repz
inc
push
mov
out
jns
pushf
push
mov
inc
sub
add
cmps
and
add
inc
ja
xchg
add
jo
in
enter
sub
das
adc
ret
sbb
sub
push
fldlg2
retf
inc
inc
push
das
and
pop
daa
div
xchg
xor
dec
xor
loopne
mov
inc
(bad)
jmp
add
adc
popf
das
inc
xchg
cs
add
cmp
push
push
addr16
xor
push
addr16
push
mov
jno
sub
mov
mov
xchg
sub
dec
outs
arpl
test
mov
add
sub
mov
das
scas
nop
call
adc
mov
push
nop
stos
scas
xchg
add
and
dec
pop
(bad)
stos
outs
xchg
xor
std
sbb
push
pop
pop
or
mov
loopne
jbe
sbb
mov
push
ds
xor
aaa
push
xor
movs
repz
(bad)
adc
push
mov
aas
fsub
xchg
test
push
lock
push
sbb
sub
je
sub
or
data16
or
stos
xchg
add
pop
(bad)
in
push
imul
xchg
sbb
jg
xchg
xchg
push
ins
mov
(bad)
mov
aas
or
xchg
js
nop
xchg
mov
mov
push
fnstsw
arpl
xchg
outs
cld
and
mov
sti
mov
push
test
stc
and
mov
add
ss
add
push
movs
call
aad
mov
xchg
pop
bound
(bad)
shr
mov
or
sbb
pop
xchg
adc
ja
addr16
push
sub
and
pop
add
push
cdq
aaa
lahf
mov
adc
jmp
scas
ja
outs
mov
dec
dec
jl
test
pusha
fld
aad
push
jb
jo
xchg
aam
sub
jge
cmp
ins
mov
lods
lahf
(bad)
mov
aas
fdivr
imul
outs
rcl
mov
shr
add
mov
or
addr16
adc
add
adc
dec
inc
pop
xor
sbb
jbe
test
xchg
loopne
dec
add
mov
add
inc
pusha
mov
add
in
ret
xchg
cmps
push
bound
sub
mov
fdivr
pop
outs
cmp
jecxz
or
sub
sub
and
add
sub
inc
add
fs
add
nop
push
add
add
xor
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
sub
inc
add
pusha
adc
cli
out
cmp
cmp
sbb
add
push
imul
dec
(bad)
ins
or
dec
jae
and
cwde
mul
sbb
lods
xor
push
aaa
dec
loope
jp
pop
inc
cli
gs
push
test
pusha
xchg
xchg
fwait
or
sbb
push
fcmovne
jnp
cmp
jbe
push
outs
sub
pop
dec
in
and
xchg
nop
pop
bound
sbb
adc
jp
xor
mov
fwait
inc
sbb
aad
out
sbb
dec
cmc
jbe
xchg
lods
push
sbb
imul
push
imul
cmp
and
aaa
ins
push
inc
jo
add
inc
sahf
rcr
mov
inc
dec
inc
dec
jg
cmp
sahf
adc
or
mov
lods
call
pop
inc
imul
jbe
cmp
push
ror
xor
imul
xor
clc
sub
and
and
push
push
push
outs
arpl
loopne
sub
push
in
mov
test
rol
push
fidiv
sbb
mov
int
jae
ret
push
cdq
test
and
movs
mov
sbb
sub
jne
aas
ins
loope
jae
xchg
scas
push
and
fidiv
jbe
inc
adc
in
enter
(bad)
adc
js
push
push
je
xor
adc
imul
xchg
or
fwait
fwait
lods
cwde
movs
inc
enter
push
push
cs
adc
jo
xor
or
dec
mov
es
mov
gs
xor
arpl
cmpps
or
repz
je
dec
inc
sub
into
bound
or
jmp
mov
imul
cmp
sub
movs
push
popa
xor
and
daa
dec
lock
ins
nop
pop
push
ins
jae
adc
push
and
push
lahf
sbb
add
outs
inc
pop
and
(bad)
sbb
bound
jo
lods
ds
popf
adc
jo
sbb
outs
ins
and
inc
fs
jne
fist
inc
adc
ja
mov
jae
fisubr
dec
adc
jae
js
ret
cmp
das
pop
ins
jo
cmps
pop
jae
sbb
ja
imul
push
popa
inc
xchg
dec
pop
push
add
sub
mov
mov
inc
jmp
cmp
pusha
popa
pop
cmp
hlt
sub
push
popa
imul
xor
cmps
or
daa
dec
cmps
repz
push
jne
jo
neg
ret
lods
mov
adc
push
cmp
push
push
pusha
jns
inc
data16
dec
repz
adc
iret
jmp
xchg
gs
mov
imul
xchg
and
inc
div
fild
sbb
(bad)
ret
xor
mov
(bad)
cmp
xlat
push
jnp
(bad)
pop
jbe
sbb
bound
jns
cmp
shl
in
cdq
adc
mov
in
(bad)
xchg
adc
mov
add
pop
xor
pop
mov
dec
and
pop
mov
outs
imul
lds
arpl
test
xchg
ins
lahf
or
adc
out
inc
cmovae
test
push
lds
enter
jmp
mov
mov
dec
fisttp
pop
xchg
jecxz
mov
fmul
les
popa
pop
push
lds
jbe
sub
push
inc
and
mov
and
adc
loopne
mov
stos
xor
ins
jne
or
sbb
cmp
mov
loopne
ret
dec
in
test
dec
jo
push
sbb
mov
inc
jmp
mov
clc
adc
jo
jnp
test
inc
sbb
cmovno
sub
stc
cwde
fidiv
loop
loopne
mov
jbe
and
icebp
adc
mov
sbb
fist
inc
and
mov
mov
add
das
mov
jmp
xor
sub
cmp
adc
push
lds
xchg
ins
sbb
lods
enter
idiv
fcmovb
or
adc
inc
add
fneni(8087
test
jb
inc
and
rol
inc
ret
or
stos
daa
ret
mov
mov
cdq
jo
adc
gs
mov
jbe
popa
hlt
shr
pop
outs
push
or
pop
jne
aad
jae
sbb
outs
popw
cmp
ss
sbb
jnp
add
pop
popa
lea
pop
mov
sub
sub
inc
mov
fst
sbb
push
add
outs
inc
inc
cwde
dec
mov
arpl
mov
or
xor
mov
push
jp
and
sub
mov
mov
and
js
xchg
and
sbb
ret
stos
int
imul
pusha
mov
dec
pop
pop
jns
pop
mov
neg
mov
mov
(bad)
xor
test
or
mov
push
fwait
lods
loopne
sbb
inc
sbb
or
mov
inc
arpl
xchg
fiadd
lea
ja
cmps
mov
fidivr
dec
mov
sbb
movs
mov
xor
inc
dec
lods
adc
stos
jae
lods
or
xor
sub
and
pop
fs
popa
jmp
pop
movs
inc
jns
pop
mov
push
mov
add
test
jno
push
xchg
arpl
in
arpl
pushf
pop
(bad)
dec
lds
call
lds
and
add
mov
pusha
ror
jae
add
xlat
inc
dec
data16
mov
mov
inc
mov
push
cmp
dec
arpl
ds
icebp
out
cmp
js
jns
xor
sbb
mov
rcl
int3
or
jo
test
ror
inc
push
add
dec
jb
and
test
mov
and
push
lods
add
xlat
popf
cmp
adc
jns
rol
pop
in
popa
hlt
aas
xchg
aad
push
adc
ret
sub
scas
and
mov
sub
push
shl
sbb
cmp
dec
shl
out
push
dec
inc
push
ds
es
inc
(bad)
dec
out
jecxz
sub
(bad)
loopne
jnp
sbb
push
inc
push
cs
pusha
mov
mov
std
sbb
pop
xor
jae
dec
adc
dec
dec
gs
arpl
cmp
pop
popa
movs
test
adc
enter
aaa
cmp
sub
mov
and
xor
lds
mov
lock
in
or
mov
sbb
out
add
xchg
inc
jb
mov
jbe
xchg
jne
fsub
sbb
cmp
fwait
cmp
lods
pop
mov
ret
mov
lea
adc
lds
xchg
cmp
loopne
ret
jae
xchg
inc
loopne
cmp
sbb
imul
inc
test
(bad)
je
out
ficomp
or
(bad)
xor
mov
mov
arpl
jns
stos
adc
in
inc
data16
sub
dec
add
adc
jae
push
jecxz
stos
xchg
fisubr
mov
mov
inc
push
mov
push
pop
cmps
dec
push
xor
xor
lods
pushf
arpl
xchg
adc
popa
inc
mov
inc
das
int
repnz
lods
leave
pop
in
iret
dec
pop
add
push
pop
jmp
imul
or
jne
retf
pop
push
dec
push
outs
ins
imul
emms
mov
or
sbb
cwde
popa
mov
push
add
sar
fidiv
add
test
dec
pop
ret
pop
cwde
sbb
nop
sub
cmp
or
sub
ret
inc
pop
or
push
xor
xchg
sti
push
sbb
sub
cwde
fadd
dec
pop
in
popa
dec
and
dec
(bad)
sbb
push
ret
pop
mov
pop
cmp
pop
push
fnsave
lock
or
and
or
cmp
push
dec
and
dec
inc
dec
push
dec
inc
push
or
in
jae
mov
pop
adc
fst
sub
push
mov
test
or
cmps
sbb
sbb
stos
push
mov
dec
imul
adc
pushf
call
data16
clc
inc
ror
inc
test
and
cmc
nop
(bad)
push
jl
clc
ins
movs
sbb
addr16
xor
mov
gs
or
(bad)
jbe
dec
jae
jl
push
cld
jo
xor
dec
shl
inc
fld
mov
cmp
pop
bound
xor
sub
add
mov
test
push
cs
data16
rcl
jb
rcr
dec
nop
pop
mov
gs
leave
xor
jmp
mov
adc
lods
xadd
addr16
dec
movs
imul
cmp
cdq
jno
daa
xor
xor
sub
lds
push
aad
push
push
mov
(bad)
nop
lods
mov
inc
mov
fs
enter
ins
aad
jne
or
shl
push
out
xchg
test
ror
and
push
add
dec
(bad)
sbb
sbb
into
test
and
mov
inc
dec
push
dec
js
rcl
enter
ret
push
sbb
mov
jge
push
fisub
mov
inc
dec
shl
mov
dec
shl
mov
xor
ror
add
jb
add
or
dec
shl
inc
inc
mov
std
lods
dec
cmp
xor
sub
mov
or
jb
pop
and
movs
push
sub
int
dec
lods
pop
adc
ficom
arpl
dec
(bad)
es
xor
or
mov
mov
sub
mov
jb
cmps
test
sub
dec
ror
test
lods
int
pop
ffree
add
pop
lahf
adc
adc
push
and
or
pop
test
pop
cmp
rcl
sahf
push
pop
test
stos
mov
dec
ins
jne
jb
jne
add
and
out
mov
fcom
inc
pop
fstp
fnstcw
jo
outs
in
mov
add
adc
mov
loope
push
push
dec
pop
imul
xor
in
xor
sub
inc
cmp
push
inc
inc
inc
(bad)
pop
mul
mov
test
js
je
fnstcw
add
and
mov
fs
stos
pop
lods
or
push
add
aad
jae
fnsave
and
sub
fwait
pop
push
mov
adc
push
and
fs
adc
cmp
add
sbb
inc
and
xlat
ja
push
bound
inc
out
add
scas
dec
pop
test
(bad)
jbe
xlat
jb
jecxz
cmp
nop
mov
lods
fistp
pop
test
ins
cmovge
imul
xlat
add
retf
xchg
adc
cmc
pop
jnp
mov
xchg
lods
push
sbb
stos
outs
test
jo
ss
add
sbb
xchg
or
xor
jmp
adc
mov
inc
jo
or
addr16
pop
inc
ror
pop
lods
daa
pop
in
mov
fabs
sbb
mov
xor
cmp
imul
jnp
pop
ret
inc
push
pop
cwde
addr16
mov
ja
cmp
mov
sub
mov
and
dec
cli
mov
and
adc
ret
inc
(bad)
sti
sbb
inc
push
sub
mov
push
in
add
pop
fld
mov
cmps
push
dec
loopne
mov
mov
sub
scas
dec
sbb
adc
sbb
into
jae
cmp
pusha
jne
ja
aam
fwait
cmp
mov
imul
push
sbb
or
sub
pop
ret
mov
sub
fistp
mov
xor
adc
inc
lods
adc
stos
pop
inc
in
not
sti
test
pop
pop
int3
sbb
cwde
mov
outs
inc
cmc
push
daa
arpl
out
and
xor
lock
and
aam
imul
lods
jmp
mov
mov
arpl
stos
mov
mov
retf
xchg
icebp
dec
pusha
div
adc
stc
bound
pop
pop
in
adc
aaa
fcmovnb
loopne
or
fwait
gs
or
add
mov
inc
and
mov
lds
or
cs
jae
adc
leave
jo
sahf
cwde
adc
push
jmp
je
mov
retf
sbb
pop
mov
int
sbb
push
add
aad
lahf
bound
xchg
pop
add
xor
xor
fwait
push
push
rol
nop
add
pop
xchg
ds
cmc
adc
mov
push
pop
add
into
ins
adc
push
mov
add
jge
nop
push
das
scas
add
dec
pop
jns
xor
sbb
sbb
xchg
jge
pop
pop
or
adc
dec
add
gs
(bad)
push
imul
imul
sub
int
jns
(bad)
lods
retf
sbb
fld
push
or
push
sbb
lods
daa
or
sbb
pop
jmp
(bad)
mov
sbb
mov
inc
adc
pop
jae
xor
jmp
add
js
(bad)
popa
mov
sbb
test
sahf
test
xchg
(bad)
mov
push
inc
and
sub
sub
and
and
retfw
dec
sbb
ins
stos
rol
sbb
pop
mov
jo
xor
inc
mov
sub
mov
mov
pop
push
mov
dec
and
push
outs
and
xor
hlt
add
fld
shr
popa
or
pop
mov
gs
nop
and
inc
ficom
sar
inc
sbb
sbb
test
cmps
jg
add
mov
arpl
sbb
cmp
or
mov
in
pop
frstor
or
outs
fs
lock
test
push
push
lds
add
call
retf
xor
or
pop
jae
push
jne
add
inc
lea
dec
inc
and
cdq
jae
and
enter
xchg
ins
leave
and
movs
push
leave
int3
test
push
add
fidivr
adc
das
mov
pop
stc
imul
scas
and
pop
aaa
out
add
mov
sbb
fsub
cmc
outs
cmp
fsub
sub
and
pop
sbb
inc
das
movs
lods
dec
iret
sub
ins
bound
xchg
xor
jecxz
jno
and
dec
sub
mov
(bad)
jmp
shl
das
mov
(bad)
jecxz
mov
jbe
hlt
cmps
stc
in
inc
fs
test
jae
xchg
or
adc
mov
(bad)
sub
arpl
push
push
loopne
pop
cmp
test
xchg
add
jbe
push
inc
clc
cwde
das
sub
inc
push
sahf
or
pop
out
mov
adc
add
(bad)
(bad)
pop
inc
add
adc
adc
adc
pop
(bad)
fidivr
lock
push
lock
adc
jnp
pop
push
add
inc
add
adc
push
mov
or
push
add
or
add
or
jbe
push
jp
mov
push
lahf
add
test
pop
push
or
lods
fwait
(bad)
jg
add
lock
lock
inc
mov
adc
mov
add
xor
jns
add
jmp
sbb
xor
jmp
imul
fild
nop
add
adc
shrd
adc
lock
adc
mov
mov
js
sub
(bad)
and
xor
push
xor
adc
(bad)
jmp
add
dec
pop
sub
push
mov
inc
mov
mov
nop
sbb
femms
and
mov
cmp
ins
add
clc
add
sbb
jno
jno
dec
(bad)
(bad)
out
(bad)
xor
outs
inc
cmp
test
adc
sbb
cmp
in
(bad)
in
xlat
xor
fs
adc
push
jo
aam
cmp
adc
adc
std
outs
push
les
fwait
cmp
adc
sub
dec
and
or
add
lock
(bad)
(bad)
inc
add
sbb
test
sub
sub
dec
inc
sub
sbb
inc
sub
adc
push
sub
mov
add
adc
adc
push
add
adc
pop
adc
mov
(bad)
(bad)
call
adc
push
and
push
xor
adc
cmp
push
add
xor
inc
lock
cld
fucomi
mov
sbb
add
push
push
jae
adc
jge
adc
or
pop
xor
cmps
cmp
lock
inc
and
and
(bad)
aas
mov
add
adc
int3
cwde
loopne
sbb
push
sti
in
scas
std
add
sub
jge
push
(bad)
sar
out
sub
sub
(bad)
pop
add
xchg
fcomp
jo
outs
jle
sbb
adc
mov
adc
push
sti
(bad)
in
mov
add
xor
cmp
dec
(bad)
push
inc
lock
xchg
cmp
pop
cld
dec
sub
loopne
push
mov
lock
add
push
sti
dec
lock
ds
ja
das
ss
lock
add
add
outs
(bad)
inc
out
lock
add
lock
xor
inc
xor
xchg
sub
imul
dec
pusha
pop
or
nop
loop
adc
pop
add
es
ins
xor
sbb
mov
rcr
xor
add
sub
cmp
sbb
out
jmp
push
push
sub
lock
sub
add
ds
fidivr
or
sahf
lock
add
push
sbb
daa
cmp
and
jmp
dec
pop
or
lock
sbb
xor
adc
sbb
mov
lock
mov
and
push
aam
inc
push
push
dec
push
sahf
aad
push
aad
adc
outs
clc
lds
sbb
adc
lock
sbb
mov
xchg
mov
push
push
sbb
mov
popa
fidiv
cmp
and
cmp
jno
add
cmp
jg
inc
xchg
imul
jns
inc
(bad)
fdivrp
jmp
inc
inc
or
xor
xor
test
loope
inc
add
rcr
pop
xchg
mov
arpl
das
jmp
fdiv
push
and
inc
sub
call
outs
mov
add
mov
xor
pop
mov
mov
lock
outs
adc
jl
lock
inc
dec
cs
mov
sbb
nop
ret
sbb
push
fild
sbb
movs
add
lock
adc
jnp
fdecstp
(bad)
xor
sbb
wrmsr
add
cs
push
cld
retf
mov
add
mov
es
pop
push
or
fwait
add
rcl
inc
sti
jecxz
mov
jne
outs
jl
push
mov
inc
jp
pop
mov
jb
out
shl
into
outs
data16
mov
push
adc
sbb
adc
sub
jg
adc
lea
lock
inc
xor
fidiv
mov
add
dec
mov
sub
fwait
mov
cli
ss
sbb
lods
fnstsw
dec
and
cmp
add
out
jno
comiss
clc
jno
sbb
push
lea
jg
(bad)
cmp
add
adc
movs
or
sbb
mov
add
sbb
jnp
cli
pop
cmc
pop
push
pusha
push
adc
push
push
push
mov
xchg
out
sub
pop
push
dec
adc
dec
adc
sbb
pop
xor
mov
dec
inc
mov
sbb
and
js
mov
inc
sbb
xchg
or
outs
mov
inc
xorps
outs
sti
or
and
test
and
fcomp
mov
(bad)
fistp
push
loop
sub
ja
adc
or
pop
jbe
dec
ss
sbb
pop
push
and
jle
mov
aad
cmp
adc
pop
das
mov
call
bound
sbb
imul
adc
and
dec
test
clc
outs
js
and
es
add
inc
and
add
xchg
aas
mov
sub
add
and
sbb
xor
or
adc
mov
xor
into
sar
inc
add
mov
sbb
and
sbb
sbb
lock
mov
pop
ss
rol
jno
push
(bad)
fbstp
xchg
or
sub
xchg
mov
adc
sub
mov
cs
das
(bad)
xor
mov
push
lsl
and
xchg
ins
pop
nop
out
rcr
(bad)
cmp
psrlw
outs
vmptrld
jl
sub
test
cs
adc
adc
xchg
or
adc
or
adc
jmp
sub
sub
and
aas
inc
jbe
pop
lods
sub
sub
mov
adc
adc
sbb
push
push
push
lock
add
push
lock
add
mov
stos
or
fdivr
adc
mov
push
xchg
and
or
pop
or
sbb
inc
cld
jg
jg
inc
sbb
jns
pop
or
cs
inc
pop
jmp
ret
ja
sti
add
sbb
fdivr
sbb
sti
call
pop
add
inc
pop
xor
je
lock
add
add
pop
add
cmp
add
lock
push
or
mov
push
adc
inc
xchg
adc
mov
sub
add
xchg
ss
ja
adc
and
in
add
lock
pop
add
or
add
xchg
in
in
sbb
add
adc
add
push
sub
xor
inc
push
push
dec
pushf
js
push
sub
lahf
loop
cmps
add
push
dec
xor
jl
pop
mov
std
ss
inc
cmp
add
sbb
xchg
jbe
adc
jg
je
ss
cmp
add
add
push
sti
dec
ss
lock
pop
(bad)
push
sbb
jnp
xor
repnz
push
mov
fst
pop
aaa
sub
dec
fiadd
lods
(bad)
sub
fs
add
ss
mov
lds
sbb
adc
xor
lods
sub
add
push
add
mov
repnz
sbb
push
pop
jne
cmp
xor
push
adc
js
adc
bound
xor
mov
xor
sub
xor
outs
call
sbb
sbb
push
pusha
dec
adc
xchg
xor
xchg
sub
sbb
inc
inc
adc
jg
scas
jp
pop
sbb
adc
push
sub
das
add
(bad)
in
icebp
(bad)
cmp
lock
push
sub
dec
popw
punpcklbw
xor
adc
adc
push
pop
mov
mov
add
add
jle
push
fisttp
fild
das
ins
xor
in
inc
jnp
sbb
sbb
mov
sbb
sub
adc
or
adc
pop
sahf
push
clc
paddsb
pop
pop
adc
adc
inc
sbb
das
clc
or
add
xor
inc
out
or
lods
push
sbb
add
cmp
mov
xor
das
mov
add
sub
div
add
push
cmp
mov
clc
sub
xor
adc
cmp
push
cmc
mov
pop
lock
add
lock
sbb
sbb
add
cmp
xor
shr
sbb
lock
xor
cmps
adc
sub
pop
sbb
adc
push
scas
or
in
or
and
jmp
jg
and
or
or
xor
inc
add
aaa
adc
or
or
push
icebp
jno
cmp
jb
ficomp
mov
cmp
sbb
adc
mov
(bad)
push
loope
pop
adc
ss
push
cmps
or
inc
test
inc
jle
retf
es
cmp
xor
dec
xor
enter
std
sbb
push
add
arpl
dec
mov
mov
mov
popa
or
inc
push
adc
in
(bad)
jg
sbb
add
mov
and
cdq
inc
test
daa
push
add
mov
sub
mov
outs
call
inc
leave
mov
add
adc
and
adc
lock
adc
scas
add
cmc
pop
mov
and
fcomp
mov
and
jo
xchg
sar
adc
iret
mov
scas
stos
add
lds
ret
add
dec
xchg
and
out
mov
add
add
or
push
loope
je
mov
fmul
fld
pop
retf
pop
adc
add
push
fs
mov
retf
add
push
lock
pop
aas
push
adc
adc
xchg
mov
inc
jnp
or
mov
dec
xor
clc
mov
outs
dec
sbb
push
inc
cmp
popa
and
scas
mov
movs
add
mov
scas
xor
imul
out
or
add
inc
add
popf
jno
(bad)
mov
mov
push
or
imul
ret
dec
add
test
pop
mov
and
je
mov
call
lods
sti
cmp
add
imul
mov
ja
stos
add
and
mov
mov
xor
or
cmp
adc
lock
std
(bad)
aas
mov
cmp
pextrw
adc
pop
adc
inc
pop
pop
adc
js
push
aaa
sahf
sbb
and
repnz
and
gs
movs
mov
add
call
fmul
jns
cmp
dec
xor
add
fidiv
lock
aam
call
or
stos
add
push
lock
sub
adc
add
and
(bad)
stos
jle
nop
add
pusha
add
sub
sbb
sub
or
inc
lods
cmp
mov
mov
bound
add
clc
inc
jne
cwde
or
adc
arpl
dec
outs
jmp
cld
inc
rcr
push
mov
daa
and
nop
and
sub
pop
pop
pop
inc
mov
test
mov
adc
rol
sti
fstp
sub
fwait
das
cwde
ja
push
sbb
in
and
sbb
icebp
adc
fist
inc
aas
mov
stos
movsx
or
mov
es
inc
lahf
xadd
inc
mov
adc
or
(bad)
fadd
pop
add
(bad)
cld
out
sbb
mov
int
mov
adc
arpl
add
hlt
mov
call
pop
rcr
pop
push
mov
and
test
mov
and
mov
hlt
or
add
xor
cmps
sbb
rcl
scas
cld
lock
add
repnz
stos
pop
lods
pusha
into
unpckhps
xor
sbb
push
pop
retf
sub
cld
call
push
xor
and
pop
push
add
rcl
dec
(bad)
pop
(bad)
and
mov
pop
mov
ss
jbe
or
jmp
aaa
lock
adc
jg
lock
and
sub
in
adc
pushf
es
fisttp
ret
fadd
adc
or
sbb
(bad)
jmp
xor
xor
sub
sbb
jecxz
push
scas
adc
retf
sbb
adc
ror
or
push
adc
les
add
je
and
pop
popf
pop
movs
sub
(bad)
daa
sti
(bad)
in
cmps
inc
cmps
aas
add
sub
sbb
cmp
pop
push
adc
add
sbb
cmp
xor
aam
sub
mov
push
adc
js
inc
(bad)
adc
mov
adc
add
inc
add
ins
sub
call
jns
scas
adc
push
sub
inc
push
cmp
xor
popf
add
pop
pop
adc
pop
and
pop
adc
xor
and
cmp
xor
xor
pushf
or
inc
cmp
mov
shl
outs
sbb
mov
fistp
sub
sysret
dec
adc
push
adc
jo
or
mov
jge
loopne
loop
cmps
cs
mov
jg
cmovle
or
pop
sbb
pop
adc
inc
inc
or
add
(bad)
dec
mov
mov
adc
mov
cmps
ret
jle
jb
sub
adc
cmp
outs
clc
call
inc
jb
pop
dec
xor
dec
cld
add
pushw
inc
mov
push
sahf
jno
aas
cmp
aas
paddusb
push
cmp
mov
and
mov
(bad)
jmp
pop
sub
enter
jg
(bad)
fild
in
push
pop
push
sbb
fist
call
inc
dec
dec
pop
dec
call
add
(bad)
push
and
xchg
xor
jmp
div
sbb
sbb
add
xchg
push
cmp
(bad)
aas
fcomp
xor
xchg
mov
and
xor
es
xor
cs
(bad)
es
ss
cli
xor
push
cld
jmp
sbb
adc
das
xor
or
icebp
daa
inc
pop
punpcklbw
jne
cmp
pop
add
(bad)
std
pop
jbe
add
fwait
lock
and
inc
adc
cmp
mov
pop
mov
adc
inc
pop
add
lock
fist
outs
xor
das
lock
add
lock
xchg
cmp
mov
or
add
imul
pop
cli
or
ins
sub
imul
or
inc
clc
test
cwde
stos
aam
dec
ja
ja
add
sbb
pop
cmp
xchg
ficom
pop
adc
mov
std
cmps
and
mov
cmps
jbe
pop
xchg
pop
push
inc
dec
aaa
std
call
push
and
ins
adc
ss
loope
(bad)
daa
inc
and
and
sub
cmp
dec
sbb
mov
push
jmp
rcl
push
add
push
fwait
jl
mov
sbb
mov
adc
jg
retf
xor
arpl
fmul
lods
inc
lock
pop
sub
imul
sbb
or
or
push
sbb
inc
adc
imul
(bad)
jnp
cmps
or
inc
sub
mov
das
cdq
mov
or
gs
ins
adc
and
or
jmp
shr
mov
add
sahf
fisub
push
cmp
push
xor
mov
ficomp
add
dec
adc
lock
fisttp
pop
adc
or
or
sbb
cmp
inc
jns
adc
out
stos
mov
pop
repnz
pop
adc
add
push
sbb
sbb
inc
sub
lods
xor
pusha
call
movs
adc
jo
out
test
or
and
cwde
mov
cmp
popf
ror
sub
sub
or
pop
mov
mov
or
cmp
addr16
adc
mov
std
dec
in
xchg
inc
adc
adc
adc
std
orps
add
lock
test
lea
and
add
mov
jg
fistp
sub
mov
pusha
add
push
es
(bad)
aas
repnz
popa
das
pusha
dec
lock
pop
jg
daa
and
inc
sub
add
inc
jge
sub
dec
enter
shl
jb
or
inc
pop
mov
jno
mov
in
xchg
add
arpl
pop
lock
push
push
xor
(bad)
jmp
out
mov
pop
push
mov
xor
pop
cmps
adc
inc
mov
adc
adc
dec
add
push
adc
dec
sub
ret
jo
cli
ja
loopne
ins
lea
push
adc
movs
and
add
sbb
xor
pop
mov
test
push
push
jbe
mov
sar
xor
cmp
test
bound
or
cmp
movs
add
aad
mov
bound
or
adc
and
push
repz
jge
add
pop
jp
adc
push
cmp
adc
or
dec
jno
fstp
mov
adc
lock
(bad)
mov
dec
push
mov
inc
(bad)
out
(bad)
(bad)
inc
inc
add
arpl
mov
jbe
jp
xor
jno
adc
cmps
scas
(bad)
std
mov
cwde
jp
jl
test
jle
mov
xchg
dec
(bad)
adc
mov
xchg
or
mov
xor
add
add
lock
out
dec
push
add
(bad)
dec
fadd
int3
dec
fwait
std
mov
mov
add
dec
mov
je
dec
xlat
fild
test
or
scas
jae
push
lock
ja
sar
das
shr
fidivr
xor
pop
mov
sar
mov
inc
jbe
cwde
add
cmp
das
pop
mov
sub
das
pusha
push
mov
dec
jg
in
in
fcom
mov
mov
jne
sbb
add
int
scas
ror
push
add
or
cmp
xor
in
push
sub
lods
scas
call
add
cmp
loopne
push
ins
in
adc
sbb
xor
pop
lock
inc
bound
sub
nop
mov
sbb
test
and
loopne
or
push
outs
push
(bad)
inc
push
cmp
adc
or
add
cmp
push
adc
sbb
or
mov
jg
xchg
push
pusha
xor
sbb
xor
out
rol
push
adc
mov
xchg
push
inc
add
adc
ret
pop
pop
push
arpl
mov
lahf
xor
sub
cmp
imul
call
sbb
dec
cmps
mov
adc
adc
sub
sbb
adc
sub
cwde
xor
add
adc
cmp
(bad)
(bad)
fisttp
mov
push
or
push
adc
sub
mov
add
pop
dec
adc
add
fcom
and
xchg
push
sbb
inc
sbb
adc
or
mov
mov
rcl
or
pop
xor
and
sbb
pop
(bad)
inc
movs
push
cmp
pusha
push
push
or
inc
(bad)
push
adc
pop
(bad)
scas
fidivr
adc
xor
adc
dec
adc
mov
outs
adc
pop
sub
push
push
or
aas
pop
unpckhps
sbb
jg
inc
or
ins
dec
sbb
mov
push
inc
and
sbb
and
aam
adc
xor
or
jl
outs
cdq
inc
adc
cmp
sbb
loopne
mov
adc
nop
lock
add
push
cs
loopne
pushf
adc
push
push
sbb
xor
les
jmp
test
xor
jnp
push
clc
push
sub
jmp
pop
adc
fs
lds
cmp
and
pop
pop
add
test
xor
sahf
enter
sub
or
clc
mov
and
les
inc
inc
sub
push
and
push
adc
or
dec
or
and
das
dec
adc
cmp
adc
push
movsx
or
or
(bad)
fcomip
or
sub
cmp
and
adc
sbb
sbb
cs
inc
sbb
xor
push
push
xchg
or
or
in
push
xor
fs
jmp
stos
pop
add
adc
push
(bad)
(bad)
(bad)
fmul
adc
or
adc
pop
pop
adc
or
dec
xor
bound
adc
movs
jns
push
pop
ror
mov
pop
mov
adc
sahf
or
(bad)
call
sub
inc
shr
push
adc
pop
daa
cmp
jne
cmp
(bad)
fild
sub
imul
addr16
inc
xor
or
or
inc
mov
xor
push
mov
and
or
sbb
rcr
adc
push
adc
das
outs
in
inc
or
push
or
adc
(bad)
(bad)
(bad)
fcomip
adc
sbb
and
pop
daa
outs
sbb
inc
xchg
and
xor
xor
sahf
(bad)
fimul
inc
sbb
pop
mov
sti
(bad)
jg
cmp
pop
sub
sub
inc
scas
js
xor
xor
sbb
pop
cmp
adc
add
shl
push
(bad)
(bad)
ja
pop
and
inc
jae
inc
xor
xor
adc
bndstx
or
cli
dec
es
push
adc
and
pop
shr
push
push
pop
cmp
xor
ins
imul
or
sub
push
push
cwde
sbb
and
adc
xor
sbb
or
or
sbb
and
jecxz
xchg
dec
sub
sbb
push
dec
push
and
shld
aaa
inc
push
cmp
jb
es
jne
(bad)
add
(bad)
(bad)
aas
daa
or
dec
pop
pop
push
pop
sbb
adc
femms
mov
and
sbb
enter
or
ds
nop
inc
inc
push
push
push
adc
or
movs
lock
inc
or
or
sub
mov
and
sbb
retf
sub
mov
dec
fst
syscall
psraw
or
jmp
xor
pop
sbb
and
push
xor
xor
or
pop
push
or
push
int3
adc
cmp
je
push
sub
or
and
or
jmp
or
sar
fbld
sub
in
sub
or
outs
sub
loop
sti
sub
or
push
mov
loopne
jmp
rdmsr
or
ja
and
adc
add
pushf
sbb
bound
add
add
sub
inc
add
jle
pop
daa
cmp
lods
push
dec
push
sub
and
pop
add
jmp
push
fnstsw
pop
rol
add
(bad)
(bad)
jg
or
aas
dec
push
cmp
push
adc
push
ins
daa
or
or
or
add
xor
adc
or
xchg
es
or
shl
scas
adc
add
sbb
sub
lock
adc
push
sub
(bad)
in
or
jb
cmp
or
call
clc
xor
xor
xor
pop
sbb
and
and
or
or
repnz
aas
mov
das
or
sub
sub
adc
pop
mov
inc
jl
xor
xchg
mov
pop
adc
ds
cmc
inc
clc
push
test
and
dec
xchg
xor
cld
pop
aad
pop
and
gs
xor
lock
push
cs
and
inc
push
sbb
and
lahf
and
adc
and
pop
xchg
xchg
or
lock
add
dec
movs
add
(bad)
(bad)
(bad)
aas
dec
aas
nop
pop
adc
adc
mov
sub
sbb
adc
or
or
ror
adc
pop
jbe
adc
pop
or
or
ucomiss
or
sbb
or
stos
or
dec
mov
mov
dec
and
sbb
es
and
sbb
movs
or
or
and
adc
pop
push
call
cwde
inc
sbb
aas
loope
xor
pop
lock
add
pop
pop
(bad)
(bad)
aas
stos
js
lock
add
add
sbb
cmp
xchg
mov
aas
adc
retf
jb
push
mov
adc
inc
dec
dec
push
adc
adc
adc
push
sub
xor
inc
adc
aad
fld
add
dec
cmp
out
mov
push
imul
lahf
loop
inc
das
fcmovnu
arpl
sqrtps
cmp
xchg
push
lock
adc
and
fdivp
inc
sub
sbb
push
pop
push
xor
sub
xor
mov
mov
sbb
xor
or
cmp
mov
and
fisubr
lods
je
or
jecxz
aad
sub
pop
adc
cmp
sar
push
fdivr
dec
cdq
dec
or
(bad)
cmps
pop
call
jbe
scas
push
and
ins
adc
push
and
adc
cmp
or
dec
idiv
xor
adc
sub
rcl
cmp
xor
push
sbb
ret
push
div
xor
movs
mov
retf
and
pop
fnstsw
pop
lock
(bad)
cmp
adc
ins
das
pop
or
or
xor
jg
jg
cwde
mov
aaa
push
pop
ins
or
or
sub
push
fwait
adc
adc
mov
push
dec
cmp
retf
sbb
push
sub
or
sbb
adc
sbb
sub
xor
shl
adc
test
jo
std
adc
dec
xchg
dec
jns
inc
xor
sar
and
or
(bad)
or
daa
sub
cmp
cli
jmp
in
mov
inc
adc
and
sub
cld
sub
or
or
ret
cmp
call
ret
sub
xchg
inc
sub
outs
xor
clc
add
sbb
or
jle
cmp
fldenv
(bad)
sbb
sub
iret
mov
push
cmp
push
add
and
lock
adc
and
js
je
pusha
add
cmp
adc
inc
xor
(bad)
cmp
dec
dec
sbb
jns
mov
movs
mov
lods
dec
pop
and
imul
or
cmp
sti
adc
sbb
add
loopne
dec
push
stos
jmp
stos
sbb
and
punpckhdq
inc
mov
cmp
adc
and
ret
pop
or
inc
arpl
(bad)
(bad)
(bad)
call
sub
push
adc
pop
(bad)
lock
add
scas
inc
fwait
mov
mov
dec
push
dec
inc
sbb
jb
mov
xor
adc
jns
xchg
mov
xor
in
jge
ja
fbstp
dec
sahf
sbb
cs
sbb
xor
lock
pop
lods
xchg
xor
push
cmp
xchg
fcom
daa
push
lods
call
std
ds
adc
and
push
imul
jg
dec
and
or
inc
enter
cmp
sbb
cs
fild
sbb
xor
push
ja
pop
jmp
push
cdq
cld
mov
push
test
and
loopne
adc
and
jb
pop
push
and
and
mov
and
dec
pmuludq
jg
jecxz
data16
pop
out
dec
or
sbb
sbb
sbb
or
inc
xchg
pop
pusha
pop
pop
(bad)
jg
inc
fisubr
das
sub
pop
addr16
pop
or
sysenter
inc
mov
or
fwait
add
xor
adc
pop
adc
sbb
or
sub
sub
ss
popa
push
idiv
sub
or
and
or
or
push
push
fwait
dec
pop
xchg
enter
and
push
outs
add
call
gs
call
or
adc
jo
mov
je
loop
or
sub
inc
sub
ds
gs
pop
js
bound
cmp
scas
or
(bad)
or
or
test
inc
add
adc
shr
aam
sub
sbb
sbb
lock
push
jb
sub
stos
inc
out
push
or
call
(bad)
mov
mov
jp
cmp
add
xor
sub
sti
pop
pusha
dec
sbb
xor
xor
sbb
jmp
cld
adc
adc
or
push
adc
mov
and
push
push
or
test
or
or
sub
push
xchg
or
dec
or
aas
std
push
sbb
xor
inc
dec
mov
pop
aas
sbb
adc
cmps
push
lods
or
sahf
mov
dec
mov
push
push
or
pop
jo
clc
or
cld
mov
push
sbb
pop
pop
pusha
or
pop
or
cmps
adc
or
mov
add
jb
test
and
sub
and
add
pop
cmp
test
ds
push
and
xchg
pusha
or
sahf
mov
xor
dec
call
ins
xchg
and
sbb
pop
sbb
and
sub
mov
mov
enter
and
or
push
push
daa
loopne
push
xchg
sub
or
sbb
cmp
call
movs
cmp
push
ror
or
ins
add
adc
and
call
imul
stos
sbb
add
adc
xchg
daa
sbb
es
aas
xor
adc
jecxz
add
xor
jle
and
cmp
dec
outs
and
dec
or
and
mov
(bad)
(bad)
call
arpl
xor
inc
cmp
aaa
or
adc
pop
xchg
adc
pop
dec
sub
push
push
or
push
call
dec
pop
sub
adc
or
add
inc
push
jnp
in
or
and
sub
add
and
push
adc
dec
scas
aaa
and
xor
push
jecxz
add
dec
sbb
sbb
rcr
sub
push
cmp
push
or
pop
push
push
push
cmp
into
daa
cmp
adc
pop
sbb
sbb
aaa
retf
mov
retf
dec
add
xor
push
jecxz
pop
or
sbb
lahf
mov
xchg
rcr
cmp
push
push
mov
(bad)
call
jne
aas
jnp
arpl
push
sub
or
adc
outs
pusha
sbb
xor
sub
sub
and
or
or
adc
push
stos
retf
push
dec
dec
aaa
and
push
and
cmp
mov
mov
retf
adc
sbb
sar
add
inc
inc
pop
pop
ins
pop
dec
sbb
inc
push
xor
adc
mov
xor
push
aam
fs
inc
loopne
jbe
cs
add
jp
or
or
push
in
and
adc
push
xchg
mov
(bad)
jmp
dec
jp
adc
inc
sbb
adc
fs
inc
sbb
in
cmp
pop
and
add
push
pushf
lock
add
adc
mov
sbb
or
js
add
sub
pop
dec
test
outs
dec
into
inc
add
ja
add
dec
or
pop
out
pop
fstp
cmps
inc
scas
pusha
(bad)
xor
push
popa
push
adc
(bad)
(bad)
inc
dec
or
jnp
data16
and
xchg
sbb
or
cmp
das
adc
push
adc
shr
sub
and
icebp
jg
(bad)
adc
or
adc
or
push
or
adc
sbb
sub
jmp
pop
pusha
es
xor
add
lock
add
lock
add
fist
cld
outs
les
popa
and
daa
or
ds
pop
dec
adc
sbb
dec
or
call
xor
sub
scas
sub
cmp
sub
ds
js
sub
movs
aaa
(bad)
sbb
and
cmp
adc
push
(bad)
jbe
push
das
push
sub
push
das
cs
push
mov
daa
inc
rdtsc
sbb
xchg
or
xor
xor
push
and
ds
mov
adc
test
or
mov
test
inc
push
es
and
popa
push
jg
(bad)
lahf
(bad)
push
pop
and
adc
or
dec
sbb
mov
pusha
or
sbb
mov
dec
movntps
push
or
jle
jecxz
mov
cs
inc
ficomp
or
les
idiv
cmps
xor
push
mov
pushf
and
push
or
inc
loopne
xor
or
inc
add
pop
out
adc
pop
cs
jg
dec
adc
adc
xchg
mov
dec
or
push
dec
jbe
cmp
dec
sbb
stos
inc
data16
adc
mov
or
add
sbb
sub
pop
push
dec
sub
mov
inc
adc
sbb
loop
push
mov
popf
and
or
je
cmp
sbb
jne
xor
add
es
adc
pushf
or
push
pop
or
adc
adc
add
pop
ret
dec
inc
cld
in
or
sbb
sub
push
sbb
lds
int3
inc
aas
sub
ins
cli
aaa
xor
adc
pop
cs
push
push
retf
daa
xor
das
inc
inc
and
ds
ret
aaa
mov
or
push
mov
ss
push
cmp
sbb
or
pop
push
and
xsavec
cmp
and
and
inc
xor
and
sub
or
or
cmp
xor
sbb
dec
shl
dec
mov
lock
or
inc
and
dec
jle
adc
cmp
push
ss
push
adc
imul
sbb
adc
lods
or
pop
sbb
pop
out
mov
sbb
data16
daa
adc
jmp
clc
mov
adc
and
sbb
aas
adc
push
sbb
sub
daa
push
ret
inc
push
xor
push
sbb
cmp
je
adc
ins
dec
xchg
mov
mov
add
fs
push
push
nop
pop
sub
sub
mov
and
xor
push
fidiv
pop
and
xor
aaa
cmp
adc
push
add
and
cs
adc
or
and
push
push
jno
inc
sbb
xor
fidivr
sbb
out
pop
aad
std
(bad)
cmp
sbb
inc
and
jne
or
xor
or
sub
xor
jg
or
lock
add
pmulhw
pop
push
inc
mov
adc
adc
or
adc
and
pop
or
shr
jb
pop
pop
mov
mov
call
fist
push
bound
sub
jae
sbb
mov
scas
test
push
mov
jl
adc
push
xor
or
(bad)
(bad)
cmp
adc
sub
ret
cmovo
push
sub
popa
bound
mov
jb
or
adc
pop
ret
fcomp
xchg
pop
scas
sub
dec
pop
dec
adc
xor
ja
pop
xchg
or
adc
jbe
pop
cmp
add
pop
inc
sahf
popf
(bad)
mov
adc
pop
add
sub
aaa
mov
je
adc
ja
sbb
retf
pop
xor
adc
fwait
aam
shl
xchg
or
sbb
adc
and
pop
adc
in
call
out
movups
push
adc
push
inc
mov
fistp
pusha
pop
or
push
minps
push
add
ja
test
inc
adc
and
sbb
ss
test
adc
and
mov
xchg
jb
or
push
sbb
dec
ret
out
call
and
or
pop
shl
stos
and
xchg
adc
sub
add
fistp
or
push
in
push
sbb
inc
push
inc
or
pop
or
push
cld
out
and
sbb
or
and
adc
add
ja
in
cmp
adc
cmp
fiadd
pop
add
ds
stos
pop
sub
adc
adc
es
or
add
outs
shl
push
pop
adc
xchg
cs
push
push
push
adc
push
ins
or
and
and
inc
pop
cld
or
cmp
bound
add
push
jle
adc
xor
outs
or
or
xor
add
pop
int3
push
inc
enter
stos
add
sbb
adc
mov
std
pop
xor
cmp
push
and
and
inc
das
and
sub
fcomp
and
call
xor
xor
add
add
push
sbb
sbb
inc
sbb
dec
sahf
sbb
mov
push
xor
sbb
fwait
inc
popa
(bad)
cmp
adc
push
sbb
ja
inc
sbb
inc
and
adc
loopne
loop
or
add
sbb
dec
add
and
mov
sbb
or
adc
pop
xchg
call
pop
aas
push
mov
xchg
sbb
xor
pop
(bad)
(bad)
or
rcr
adc
adc
push
or
clc
int
add
adc
adc
sbb
push
frstor
lahf
popa
push
aaa
xlat
dec
push
adc
mov
fsub
xor
add
jb
xor
cmp
cld
sub
not
sbb
pop
push
or
sub
and
inc
lock
adc
sbb
xor
mov
pop
push
mov
adc
adc
pop
inc
push
or
push
rcl
xchg
pop
xchg
test
pop
jne
sub
push
sbb
vmovdqu
adc
daa
mov
je
adc
hlt
sbb
sbb
push
xor
out
sub
pop
lock
loopne
or
ficom
adc
push
or
or
dec
adc
int3
es
sub
cwde
(bad)
and
sub
and
xor
cmp
pop
and
dec
cmp
add
mov
xchg
mov
xor
sub
add
mov
out
test
or
dec
inc
and
nop
fcomp
adc
cmp
sub
aas
daa
or
cld
pop
hlt
and
or
pop
mov
xor
xchg
mov
inc
mov
call
leave
and
sbb
xor
and
or
push
sub
sbb
cmp
bound
jg
call
sub
pop
cmp
push
sbb
and
cmp
sbb
in
psrld
ins
mov
dec
inc
and
pop
in
jmp
lods
(bad)
push
pop
mov
adc
dec
in
push
outs
pop
call
sub
dec
es
mov
aaa
sbb
add
imul
icebp
and
adc
inc
call
or
ret
or
aaa
sbb
jmp
and
pusha
adc
ss
and
hlt
inc
pusha
adc
aaa
push
sbb
and
jg
dec
xor
mov
dec
sub
mov
adc
pop
inc
push
dec
cmp
shl
call
pusha
dec
pop
cvtps2pi
and
sub
and
push
pop
mov
sbb
push
adc
and
ds
adc
push
mov
and
sub
sub
test
idiv
jmp
dec
adc
or
xor
xor
cs
cs
push
das
inc
cmp
dec
sbb
fild
adc
xor
lock
movs
and
mov
inc
or
imul
add
(bad)
push
lods
inc
sbb
sbb
mov
lock
add
daa
sbb
icebp
(bad)
out
adc
sub
push
aaa
dec
or
inc
movs
push
out
and
fs
dec
xor
push
enter
adc
xor
jl
cmp
sub
call
jge
sbb
test
mov
inc
iret
pop
adc
and
adc
push
dec
push
inc
out
sub
adc
pop
add
(bad)
dec
pop
push
sbb
cmps
sbb
pop
xor
and
movs
xor
addps
(bad)
fbld
and
cmp
jg
pop
adc
adc
sub
push
pop
ud2
pusha
mov
xor
push
pop
(bad)
call
xchg
in
or
sub
inc
or
adc
dec
adc
sub
fs
xor
mov
adc
sub
and
and
jl
push
cwde
cmp
inc
jbe
mov
adc
call
dec
mov
adc
pop
add
dec
push
cmp
cmp
and
sub
inc
(bad)
(bad)
mov
xor
das
cs
and
cmp
cmp
sbb
pop
mov
mov
out
push
fcom
dec
inc
and
rcr
adc
sahf
(bad)
cmp
test
fs
and
dec
js
or
sub
test
lock
pushf
adc
and
xchg
add
cmp
scas
mov
pop
test
pop
mov
sub
bound
push
cld
out
pop
add
and
mov
in
xor
fiadd
sub
aas
cld
outs
mov
pop
adc
xor
adc
pop
sbb
xor
mov
mov
adc
cmp
pop
inc
push
jne
lock
adc
js
add
lock
push
loopne
retf
push
popf
push
mov
ins
sbb
outs
popa
xor
push
pop
xor
mov
mov
stos
adc
sub
je
das
sbb
es
mov
push
es
sbb
jmp
daa
movs
imul
xlat
cli
lock
add
inc
adc
ss
dec
jmp
adc
push
xchg
lock
fiadd
mov
lock
or
push
test
call
cmp
sub
add
inc
mov
jge
aaa
pop
cwde
jmp
push
cmp
jmp
adc
adc
pop
cmp
push
sub
and
jae
mov
inc
nop
aas
mov
dec
push
add
or
or
or
push
and
aam
or
ror
push
clc
sbb
inc
daa
lock
pop
sbb
sbb
cmp
outs
mov
mov
sbb
sbb
pop
jg
xlat
push
xchg
das
pop
add
imul
jge
cs
jmp
outs
xor
inc
push
cmp
nop
adc
add
sbb
push
es
pop
sub
es
loope
sbb
and
or
hlt
push
cmp
inc
fisttp
inc
or
sub
xchg
dec
lock
in
cmps
sub
fdiv
sbb
daa
push
jp
test
(bad)
call
or
mov
cmp
das
jo
or
fdiv
or
inc
adc
retf
pop
sub
(bad)
call
sbb
es
or
or
sub
(bad)
xor
das
pop
es
xor
sbb
cld
(bad)
fisttp
and
and
adc
sub
sbb
mov
sbb
mov
das
clc
mov
inc
xchg
leave
popa
adc
sub
ja
dec
inc
xor
and
xor
or
je
cwde
adc
jmp
cs
and
or
jo
xor
xchg
arpl
gs
(bad)
jmp
loope
jne
add
out
daa
adc
sbb
adc
sub
fwait
(bad)
(bad)
call
dec
sbb
and
push
inc
sbb
aas
and
push
adc
outs
ins
push
call
and
or
or
pop
sub
pop
es
fwait
inc
dec
or
mov
sbb
ins
sub
or
pop
or
dec
imul
movs
pop
(bad)
adc
and
popw
sbb
pop
and
jl
cld
rcr
(bad)
dec
sbb
jmp
mov
push
or
or
and
xchg
addr16
punpckhdq
inc
das
ds
xor
inc
sub
add
jle
sub
sbb
mov
fimul
adc
sar
cmc
inc
or
leave
or
adc
cmp
(bad)
jmp
sbb
xor
and
push
push
sub
mov
clc
and
sub
xor
adc
inc
sbb
adc
aam
(bad)
inc
lock
or
cmp
imul
dec
xchg
or
cld
sbb
and
sub
stos
push
and
aaa
pop
out
inc
push
xlat
idiv
hlt
cmovg
sbb
and
dec
push
lods
mov
lock
pop
scas
mov
cmp
outs
test
gs
cmp
out
rol
cmp
outs
pop
add
jmp
fbstp
adc
mov
adc
lock
mov
inc
inc
cmp
leave
jmp
clc
inc
mov
and
jl
sbb
sbb
std
sub
mov
lods
push
xor
and
and
pop
cvtpi2ps
jo
cs
dec
push
push
xor
outs
adc
dec
adc
aam
adc
dec
or
cmp
or
and
or
outs
clc
out
pop
pop
or
sbb
inc
sbb
push
push
sbb
and
adc
pop
push
and
xor
add
fild
or
inc
pop
jno
pop
and
and
jge
push
cmp
or
pop
movs
inc
push
xor
ins
call
mov
cmp
lods
mov
data16
sub
or
sub
mov
xchg
adc
or
call
std
cs
xor
inc
or
sbb
adc
aas
or
pop
mov
and
pop
push
outs
push
mov
adc
push
mov
xchg
sub
push
jp
jb
adc
sub
adc
or
xor
xor
outs
adc
adc
adc
sbb
xor
sub
pop
dec
push
adc
adc
(bad)
out
push
push
cmp
es
or
sub
sub
adc
cld
xchg
pop
push
xor
mov
push
inc
or
or
jo
and
scas
outs
jp
fwait
loop
push
push
cmp
xor
fidiv
and
push
mov
jb
stos
icebp
push
sahf
mov
test
cmps
add
add
adc
xor
mov
clc
mov
sub
sbb
push
push
mov
addr16
lock
mov
pop
mov
cmp
and
sub
mov
xor
cdq
adc
fs
xchg
aaa
mov
add
and
and
sbb
and
and
(bad)
jg
lock
cmp
adc
pop
or
or
sub
pop
icebp
daa
or
sbb
or
xor
xor
push
push
adc
(bad)
cmp
or
and
or
cmp
and
unpckhps
and
inc
push
sub
and
push
add
push
jno
test
sbb
jo
movhps
gs
loopne
mov
out
dec
pusha
pop
sub
pop
cmps
ds
inc
shl
cld
push
and
sbb
jp
out
sub
pop
pusha
(bad)
inc
sub
sub
pop
ss
mov
jmp
(bad)
adc
pop
xchg
lock
ins
and
xor
adc
in
inc
inc
pusha
and
push
push
sub
or
and
call
add
push
test
pop
pop
int3
(bad)
lock
add
sub
xchg
or
ja
pop
cmp
push
sub
push
movups
adc
xor
in
clc
outs
in
bound
sub
bound
inc
movs
xchg
and
push
dec
pop
icebp
mov
fcom
push
adc
sub
jne
cmp
(bad)
jmp
imul
or
push
push
adc
and
and
adc
jp
in
out
push
pop
push
sbb
aas
clc
mov
enter
sub
pushf
xor
push
jns
xor
sbb
push
outs
clc
idiv
sbb
bound
pop
push
pop
inc
mov
dec
daa
mov
sub
pop
in
(bad)
dec
cmp
push
xor
rol
or
adc
and
cmp
inc
(bad)
sbb
adc
or
sbb
jge
sbb
adc
inc
inc
inc
dec
push
xor
jno
aaa
push
bound
pop
mov
sbb
xor
jae
cmp
sub
inc
gs
or
adc
test
dec
mov
sub
sub
inc
les
xor
das
cs
mov
sub
add
mov
or
icebp
push
sub
sbb
push
pop
retf
sbb
sbb
lock
mov
mov
add
cmp
call
xchg
shl
rol
pop
aad
push
pop
int3
test
sbb
pop
add
lock
daa
jp
push
cmps
inc
lods
ficom
push
sbb
sub
and
sbb
mov
call
inc
xor
sub
adc
push
clc
xor
cmp
pop
xchg
pop
pop
pop
fcomip
(bad)
inc
pop
push
test
jo
dec
and
xor
dec
cmp
inc
das
nop
(bad)
sar
sti
sub
adc
fs
adc
hlt
sub
cmp
xor
sub
adc
sub
cmp
xor
pusha
add
aaa
or
outs
adc
push
mov
adc
push
popa
inc
push
inc
paddw
imul
or
pop
inc
cmp
adc
push
or
ss
xor
jge
adc
adc
and
mov
adc
pop
push
sub
ret
sbb
cmps
mov
add
shufps
test
mov
push
mov
push
push
pop
xor
rcl
xchg
(bad)
mov
pop
sbb
push
lea
inc
pop
mov
or
sbb
and
push
mov
jns
inc
or
sti
pop
or
cmps
pop
push
inc
or
cmp
es
add
inc
push
mov
sbb
daa
sbb
call
arpl
or
adc
and
push
xlat
cs
jbe
dec
mov
mov
and
adc
xlat
adc
pop
arpl
add
(bad)
or
sahf
test
clc
inc
icebp
mov
outs
inc
or
pop
inc
push
sbb
movs
and
lock
sbb
mov
sbb
sbb
pop
push
add
sbb
jae
push
push
std
cmp
or
cmp
aad
out
dec
lahf
jns
sub
xor
sbb
or
push
push
mov
es
inc
(bad)
push
sub
push
sbb
push
dec
jno
mov
movq
inc
les
push
inc
pop
dec
bound
and
mov
adc
adc
aas
dec
or
push
or
xor
das
dec
or
pop
dec
mov
cmp
adc
pop
and
or
sub
inc
or
add
ret
sbb
or
and
add
push
sbb
dec
or
lock
hlt
fisttp
sub
(bad)
(bad)
out
cli
inc
or
das
or
cs
xor
pusha
or
sbb
push
ins
cld
dec
aaa
adc
arpl
or
jb
aaa
cld
(bad)
jmp
call
push
adc
test
dec
inc
pop
ins
cmp
fwait
and
aas
inc
cmp
mov
push
lea
sub
or
ins
sbb
jbe
push
das
pop
(bad)
lock
dec
scas
add
add
push
inc
or
or
xchg
add
fs
fstp
xchg
cmp
adc
cmp
and
(bad)
das
jmp
inc
(bad)
les
dec
add
jb
inc
ja
or
pop
(bad)
and
adc
daa
sbb
dec
ss
sbb
jae
ja
dec
ficomp
pop
push
cmp
xor
mov
(bad)
push
cs
cmp
and
out
and
adc
and
sbb
inc
and
in
(bad)
fild
ss
push
adc
push
movaps
and
sub
cmp
and
or
clc
push
sbb
adc
mov
adc
loop
cmp
loopne
and
or
jno
or
icebp
mov
dec
adc
sub
jmp
mov
call
js
sub
sub
iret
xor
push
jae
mov
and
adc
lea
aam
inc
mov
sbb
adc
clc
(bad)
(bad)
mov
xor
sbb
mov
es
sbb
aaa
and
xchg
(bad)
pop
cmp
xor
xchg
add
shl
sbb
xor
mov
es
pop
in
lock
add
pop
js
sbb
or
jl
mov
inc
push
sbb
or
nop
xor
dec
or
mov
or
dec
sbb
fist
ins
mov
pop
adc
xor
outs
sbb
mov
push
std
scas
lahf
(bad)
push
adc
and
jae
out
or
rcl
adc
rcl
adc
cmp
adc
pop
xor
or
rcl
mov
adc
sub
fsubr
and
cli
xlat
outs
loopne
push
cmp
(bad)
sqrtps
clc
and
or
push
or
pop
jg
call
es
adc
and
or
ret
or
clc
cvtps2pd
sbb
sbb
pop
cmp
ror
adc
ret
mov
push
xor
shl
call
mov
sbb
jl
rcr
call
and
dec
stos
outs
clc
call
sub
and
and
or
sbb
or
or
push
bound
push
stos
cmp
inc
sub
dec
mov
dec
push
xor
pop
les
pop
dec
adc
stos
scas
push
jp
sbb
shl
std
cmc
sbb
mov
and
sbb
cs
outs
mov
sbb
xchg
adc
(bad)
dec
nop
and
inc
or
push
push
xor
dec
cmp
xor
sub
and
sbb
adc
sub
sbb
inc
clc
cmps
jg
or
ss
jbe
add
or
lds
adc
jg
out
sub
pop
es
dec
dec
cmp
inc
add
push
dec
out
adc
inc
adc
adc
jmp
cld
jg
or
pop
cmp
cmp
pop
aaa
sub
je
push
inc
mov
xor
adc
or
sbb
or
dec
or
pop
std
push
dec
ss
adc
sbb
pop
and
sbb
(bad)
ja
cmc
out
or
adc
sbb
jmp
inc
std
mov
adc
test
pop
jo
mov
or
and
add
add
cmp
out
push
pop
and
or
xchg
out
and
xor
and
and
loope
or
dec
cmp
inc
or
aaa
ret
fdivrp
stos
loopne
fs
cmp
xchg
pusha
xor
ds
rol
fild
add
xor
sub
outs
mov
xor
data16
bound
xchg
les
or
jmp
pop
dec
and
or
xchg
inc
push
push
sbb
adc
push
scas
outs
adc
call
jge
lock
mov
or
jecxz
aam
cdq
add
pop
sbb
or
ds
outs
aaa
unpckhps
jae
sbb
pop
and
or
js
push
cmp
push
pop
or
pop
sbb
adc
push
sub
adc
adc
dec
or
inc
sbb
or
sub
fcomip
or
inc
pop
sub
inc
inc
xor
mov
push
pop
push
inc
sbb
mov
fs
es
(bad)
fild
push
dec
jno
das
dec
test
jne
aad
or
sub
pop
inc
push
xchg
icebp
call
cmp
or
imul
and
std
dec
mov
add
dec
push
push
(bad)
and
adc
xor
retf
out
ret
adc
adc
inc
fadd
inc
or
inc
cmp
sbb
push
dec
and
sub
in
jnp
push
pop
cmps
push
ret
mov
adc
das
mov
or
pop
stos
test
dec
inc
aaa
jl
sar
sub
xor
sub
shr
icebp
pop
inc
das
adc
imul
sbb
inc
fs
sub
and
sub
and
adc
sub
xor
sub
lods
or
call
(bad)
pop
js
push
cmp
pop
mov
sub
pop
adc
cmp
sar
and
jmp
cmp
and
or
pop
es
and
pop
add
sub
jle
add
dec
ror
xor
aaa
adc
dec
dec
mov
inc
je
push
dec
xor
cmp
push
(bad)
and
xor
push
push
and
dec
push
mov
lock
clc
add
push
cdq
inc
loop
add
add
mov
or
retf
or
sbb
or
sbb
cmp
dec
cs
adc
inc
push
and
adc
or
sbb
or
push
es
adc
pop
sub
mov
pop
and
jl
sbb
cmp
jecxz
test
or
sbb
jbe
adc
cmps
call
fs
lock
add
adc
push
arpl
inc
jg
les
pushf
cmp
adc
pop
out
sbb
cld
sbb
gs
mov
pusha
adc
arpl
mov
add
(bad)
aaa
test
cs
sub
xchg
push
std
call
push
cmp
pop
dec
dec
bound
cmp
mov
fdiv
dec
mov
pop
or
ds
and
mov
inc
push
js
rdmsr
sbb
and
sbb
mov
xchg
and
adc
cmp
gs
sub
or
jbe
xor
adc
pop
or
and
or
and
or
retf
icebp
mov
sbb
sub
sub
sbb
xor
lods
mov
sbb
pop
push
or
or
and
repnz
cld
daa
ret
sub
repnz
das
imul
lock
mov
add
ror
es
call
cmps
sub
cs
add
mov
or
adc
jl
mov
and
and
cli
push
std
cmp
cmp
or
in
sub
pop
inc
test
or
je
inc
pop
mov
xor
xor
repnz
jmp
or
pop
popa
cmovl
cmp
inc
or
xchg
outs
or
(bad)
fisttp
fbld
inc
sub
outs
push
sbb
sbb
mov
cs
inc
mov
stos
sbb
mov
outs
push
sbb
push
push
inc
sahf
dec
push
movhps
fisubr
jl
loopne
xor
or
sbb
(bad)
call
cmp
adc
es
cwde
dec
jne
xchg
adc
or
std
rcr
ins
bound
mov
push
aas
sbb
inc
(bad)
(bad)
call
jbe
dec
aaa
or
mov
sub
and
sub
jg
sub
daa
sbb
push
(bad)
out
adc
or
leave
in
dec
push
and
pop
sbb
pop
loope
push
adc
push
xor
push
aaa
jle
push
call
es
dec
(bad)
and
xor
inc
dec
aaa
xor
movs
sbb
int3
xchg
push
pop
inc
inc
push
dec
je
xchg
cmp
data16
inc
jns
ret
ins
xlat
arpl
pop
adc
add
jb
push
invd
push
and
sbb
shr
adc
clc
stos
nop
or
mov
dec
xor
das
cmp
aas
and
push
cmps
outs
mov
(bad)
loope
jle
or
sbb
bound
dec
sub
adc
sbb
xor
sub
out
(bad)
inc
sbb
add
sbb
inc
inc
imul
sbb
push
sbb
sbb
call
and
lea
or
inc
sbb
pop
scas
dec
loope
call
inc
mov
idiv
cmp
les
mov
dec
sub
sub
mov
push
and
(bad)
cmp
imul
dec
cs
or
or
jo
sbb
call
inc
cmp
aaa
dec
xor
push
mov
aaa
imul
and
mov
xchg
icebp
jg
push
inc
mov
or
or
pop
mov
push
or
add
pop
or
sub
sbb
dec
nop
sub
(bad)
dec
add
push
push
push
and
sbb
sub
or
sbb
sub
addr16
inc
js
push
jp
sbb
mov
adc
jbe
cmp
ss
das
and
sbb
push
sbb
cmp
push
and
dec
cdq
dec
jb
mov
push
ret
xlat
mov
les
dec
adc
nop
or
xchg
loope
inc
cld
call
lock
inc
or
and
adc
xor
jmp
pop
adc
cmp
or
(bad)
outs
or
or
add
or
addr16
sbb
(bad)
mov
and
sbb
xchg
xor
add
cmc
idiv
fmul
adc
or
das
and
adc
pop
inc
outs
xchg
mov
in
or
pop
mov
shl
sub
xchg
sti
push
std
pop
pop
lods
pop
push
das
xor
adc
daa
xor
or
jmp
sar
rdmsr
push
imul
or
sbb
(bad)
(bad)
(bad)
jmp
sbb
push
cvtpi2ps
popa
xor
or
ss
or
pop
sbb
cmp
cmp
dec
cmp
push
and
or
adc
mov
or
cwde
cmp
and
bnd
sti
(bad)
cli
and
or
push
inc
sub
and
call
mov
lea
xor
push
fwait
adc
cmp
xchg
inc
cs
pop
daa
or
mov
inc
xor
adc
lock
inc
js
ss
push
inc
and
outs
mov
ins
push
popf
add
mov
mov
xchg
sbb
adc
dec
ds
rol
push
loope
sub
and
jne
not
xor
push
sbb
inc
sbb
hlt
mov
fst
adc
loopne
xor
in
sub
inc
push
es
or
mov
cmp
cmp
or
xor
xor
push
adc
and
or
ds
mov
outs
dec
sar
sbb
push
dec
adc
fs
cmp
or
sub
adc
inc
and
and
and
and
daa
mov
pop
mov
jmp
or
in
cld
inc
jmp
clc
pop
or
or
sbb
shr
sbb
dec
adc
mov
cli
lahf
(bad)
pop
pop
add
dec
sub
inc
cld
mov
imul
(bad)
in
dec
push
or
inc
sbb
pop
cmp
or
jmp
push
ret
sub
jle
ss
adc
cmp
sbb
add
sub
stos
pop
test
or
or
adc
pop
sbb
cmp
or
or
pop
mov
sbb
fdivr
jge
cmp
mov
pop
cmps
call
jle
out
sbb
ins
sbb
jecxz
loopne
xchg
sbb
dec
or
push
adc
mov
pop
js
pop
adc
std
scas
clc
sub
outs
sub
push
sub
bound
mov
loope
push
sbb
sbb
push
das
sub
adc
popf
adc
push
ds
inc
inc
call
add
push
daa
mov
or
or
or
dec
pop
jl
cs
adc
fs
test
movs
push
adc
sbb
adc
lock
sbb
sub
lock
(bad)
dec
adc
xor
sub
mov
adc
push
inc
jg
aas
test
and
sub
or
adc
cmp
int
push
inc
(bad)
push
sbb
adc
or
sbb
and
adc
push
lock
jg
cld
fadd
xor
call
dec
sub
dec
adc
adc
xor
or
xchg
pop
mov
cmp
jbe
lock
sbb
addr16
inc
les
out
xor
rcr
sbb
pop
add
lahf
add
dec
pop
sahf
loope
sbb
xor
sbb
mov
push
sbb
cmp
lahf
or
adc
pavgb
inc
inc
dec
or
or
dec
adc
in
aaa
ds
sbb
jbe
mov
movs
jg
adc
call
push
jnp
jno
sub
xor
sbb
test
jg
(bad)
adc
push
fs
adc
mov
pusha
mov
je
adc
sub
mov
mov
and
retf
push
je
jecxz
and
adc
pusha
mov
push
sbb
ds
dec
sub
xchg
shl
jl
cdq
nop
xor
dec
and
push
add
sub
jle
and
clc
add
sbb
cmps
aas
std
stos
push
jns
aaa
aaa
aas
xchg
and
mov
push
or
jo
and
retf
push
cmp
pop
pop
or
mov
sub
push
mov
sub
adc
int3
cmp
out
ret
out
dec
sbb
adc
pop
adc
xor
dec
dec
lock
cdq
push
popf
or
jmp
pop
mov
dec
lea
inc
adc
pop
adc
lock
or
add
jp
int
lds
jno
js
and
pop
xor
mov
test
lea
js
cld
(bad)
dec
js
jmp
sub
xor
xor
and
adc
sbb
adc
test
and
cmp
inc
sub
pop
mov
sub
aam
push
adc
stos
imul
(bad)
mov
or
inc
xor
pop
or
aaa
inc
ret
(bad)
call
push
mov
xor
jge
sbb
sbb
aaa
and
sbb
or
movs
ficomp
jne
adc
push
test
cmp
(bad)
mov
dec
dec
loop
or
or
pusha
and
sbb
outs
xor
shl
add
inc
push
cmp
lock
test
idiv
int3
adc
or
pop
or
es
rol
jmp
bound
ror
(bad)
aas
xchg
call
cmp
lods
adc
test
std
ja
add
or
sub
sub
and
bound
pop
loop
popa
or
js
lock
sub
iret
pop
scas
data16
(bad)
sub
mov
mov
pop
inc
inc
orps
pop
cmc
(bad)
jg
sbb
loopne
dec
or
xor
or
and
cmp
or
adc
and
mov
nop
xchg
stos
adc
or
pop
in
xchg
dec
mov
and
ss
mov
add
adc
pop
xor
and
jecxz
or
pop
stos
test
dec
outs
cli
adc
sbb
sbb
inc
daa
adc
xchg
dec
push
stos
and
js
mov
push
dec
test
push
sub
adc
or
ficom
push
inc
inc
ds
xchg
xor
aam
std
fbstp
mov
test
xlat
es
or
inc
adc
inc
sbb
push
push
jl
inc
bndstx
inc
xor
jmp
cmp
sbb
push
mov
inc
push
aas
xor
cmps
pop
jno
arpl
clc
pop
sub
or
cmp
call
or
sub
cmp
and
xor
clc
(bad)
call
cmp
dec
cmp
sub
inc
adc
xor
(bad)
jmp
daa
inc
sbb
imul
pop
sub
pop
inc
sub
push
cs
or
xchg
and
jg
mov
sbb
or
xor
push
sbb
loopne
dec
push
ins
jae
or
ds
sub
aaa
cld
mov
dec
push
xchg
dec
xor
pop
adc
xor
arpl
cmp
sub
fwait
cmp
fisubr
mov
adc
xor
push
test
inc
xchg
(bad)
sbb
push
(bad)
(bad)
fucomip
ds
ss
popf
cmps
pop
cs
xor
pusha
pop
push
mov
rcl
mov
cmp
dec
(bad)
prefetch
sub
push
xor
push
mov
xor
jg
(bad)
mov
and
loop
sbb
inc
adc
ret
out
daa
adc
cmp
push
fs
or
dec
adc
inc
cmp
popa
dec
cmp
out
xor
mov
adc
cmp
add
fcomip
(bad)
mov
daa
push
inc
ins
cwde
or
pop
and
sbb
ins
mov
sbb
dec
in
jmp
pop
sbb
aas
sub
ss
es
mov
test
inc
push
leave
fs
add
std
mov
adc
seta
pop
cvtps2pi
xor
sbb
sbb
pop
adc
pop
add
aas
pop
adc
pop
xor
dec
and
jle
push
(bad)
cmovge
ins
aas
lock
pop
das
xlat
jmp
xchg
stos
ss
int
ret
inc
outs
lock
pop
cmc
outs
cld
pop
push
add
adc
xor
ds
inc
jecxz
pop
cmp
pop
adc
ds
clc
aaa
ins
push
sbb
pop
push
add
xchg
ins
call
out
(bad)
inc
and
adc
add
fild
mov
adc
and
aas
inc
in
pop
icebp
sbb
and
or
push
sahf
mov
jo
inc
call
jae
or
or
sub
adc
ror
jmp
(bad)
(bad)
jg
jmp
push
and
sbb
adc
inc
dec
dec
and
push
inc
sbb
dec
or
aas
idiv
xor
inc
push
add
sbb
and
and
jmp
and
mov
jbe
pop
and
pusha
or
(bad)
(bad)
popa
mov
or
sbb
scas
pop
cs
push
mov
das
sbb
jmp
adc
xor
jp
adc
or
xor
pop
jle
push
scas
add
push
mov
and
sbb
or
and
stos
push
inc
cmp
mov
adc
sub
test
sbb
push
cmp
xor
or
or
dec
aaa
cli
inc
cld
(bad)
(bad)
mov
jg
mov
mov
adc
inc
sub
or
sub
sbb
adc
rcl
sub
rcr
pop
jns
xor
or
inc
or
or
pop
adc
xor
push
ss
xchg
cmps
out
cli
sbb
aaa
xchg
in
push
cmp
xor
push
idiv
jmp
push
push
inc
or
pop
xchg
pop
dec
ja
mov
pop
push
movups
rol
cld
sbb
lea
mov
or
push
(bad)
jg
sbb
sub
mov
mov
cmp
xor
inc
sbb
and
sbb
sbb
imul
(bad)
push
inc
cmp
or
leave
push
aaa
dec
sbb
xor
inc
or
jbe
jno
inc
clc
jmp
hlt
and
and
adc
adc
cmp
loop
fwait
cs
and
mov
or
and
sbb
pusha
and
push
pop
fidiv
cld
add
xchg
push
ins
lods
mov
sbb
jae
dec
push
or
mov
cmp
fsubr
push
or
xor
pop
push
test
fs
and
cmp
sub
xor
aam
and
and
pop
sub
aaa
mov
into
sub
adc
jecxz
push
mov
or
adc
fisttp
ret
or
cmp
dec
loop
icebp
(bad)
movs
adc
xor
adc
or
sub
(bad)
out
mov
adc
mov
adc
push
or
clc
(bad)
jg
sbb
push
xor
adc
pop
cmp
sub
fild
inc
push
sub
adc
cmc
mov
ds
out
adc
push
sub
push
(bad)
sub
mov
add
inc
or
push
xor
std
push
push
or
sub
jb
(bad)
adc
sbb
sub
aaa
or
and
push
xor
pop
icebp
jmp
adc
or
adc
or
and
mov
pop
nop
dec
add
cmp
and
jge
jge
fs
sbb
lock
adc
pop
sub
inc
jo
outs
jg
adc
or
or
daa
or
outs
or
adc
in
jmp
adc
mov
or
adc
dec
outs
(bad)
jmp
sub
sbb
pop
adc
sub
xor
or
adc
mov
pop
mov
sar
or
lea
inc
je
mov
cs
ficom
je
mov
js
imul
jmp
fisttp
ins
sar
scas
jp
arpl
or
push
or
(bad)
dec
mov
imul
data16
jb
sub
pop
sub
push
sub
xor
or
mov
or
scas
in
adc
push
jp
(bad)
call
pop
push
sbb
and
push
sbb
and
inc
sbb
fs
sub
cld
or
imul
or
pop
aam
or
fstp
(bad)
jae
imul
inc
inc
push
or
sbb
pusha
inc
das
push
pop
mov
jmp
xchg
clc
and
sub
jno
jns
je
xor
sbb
adc
xor
pusha
adc
jmp
sub
(bad)
dec
sub
dec
pop
sbb
or
push
push
(bad)
push
imul
imul
and
das
adc
ss
pop
mov
dec
mov
sbb
add
ja
add
or
dec
sbb
and
je
push
adc
and
jmp
aas
push
adc
mov
and
cmp
inc
out
mov
outs
or
inc
push
aaa
lods
and
push
adc
xchg
shl
mov
imul
mov
fbld
inc
scas
ja
sahf
sub
icebp
dec
push
sbb
nop
fidiv
sbb
xchg
or
sbb
push
ja
std
sub
sbb
jle
pop
and
mov
add
lods
jmp
pop
lods
cmp
sbb
aas
dec
and
push
push
inc
jo
loopne
lahf
or
push
cld
add
add
mov
mov
push
loop
pop
xor
adc
das
sbb
adc
fcomip
ja
sub
push
popa
or
lock
aaa
es
aaa
mov
aad
aaa
or
aas
sbb
push
and
pop
das
clc
(bad)
out
xor
or
inc
adc
add
and
adc
mov
sub
es
out
mov
inc
or
and
xor
jo
stos
dec
xor
stos
out
push
cld
inc
push
pop
xor
adc
adc
adc
pop
adc
clc
pop
or
inc
adc
or
pop
gs
inc
test
sbb
loop
or
push
jnp
je
sub
xor
dec
cs
jb
sbb
cmp
pusha
cmp
outs
mov
cmp
jb
sbb
and
jge
or
dec
dec
sub
dec
and
sub
sub
jge
xor
bound
ds
imul
mov
(bad)
adc
pop
test
pop
adc
mov
int3
adc
dec
ins
jge
pop
ficomp
pop
pop
and
sub
xor
mov
pop
and
pop
sub
and
mov
xor
pop
or
jnp
ds
and
loopne
fisub
js
ds
fs
pop
cmps
sbb
cmp
add
call
mov
push
(bad)
xchg
xchg
jae
or
in
or
sbb
fcomp
jae
mov
or
pushf
aas
test
or
test
lock
and
adc
push
adc
push
scas
das
scas
and
xor
or
lods
adc
dec
daa
jb
scas
jge
jmp
xor
sub
pop
cs
jne
mov
and
cmp
xor
enter
mov
mov
sub
(bad)
inc
cmp
and
sub
adc
adc
jb
pop
test
cs
push
pushf
(bad)
dec
pop
pop
pusha
add
(bad)
or
mov
inc
dec
or
fs
dec
repnz
(bad)
call
sbb
xor
shr
dec
iret
xor
shr
(bad)
fcomip
gs
adc
inc
add
cmp
pop
dec
cmp
xor
es
clc
or
fild
or
or
scas
sub
and
sub
cmps
or
add
pop
in
add
mov
lods
push
arpl
adc
loopne
xor
mov
push
aas
sbb
cmp
push
push
sbb
je
lock
add
mov
cmovne
mov
push
jl
(bad)
(bad)
inc
sub
xor
jl
xor
and
pop
sub
sbb
ud2
sbb
inc
mov
and
jo
adc
sbb
jnp
or
cmp
(bad)
cmps
push
cmp
or
or
jno
movs
pop
xchg
cmp
sbb
shr
adc
and
push
and
inc
fcomip
pop
fsubr
or
jo
push
push
xor
or
push
sbb
call
push
sbb
mov
inc
xor
xchg
imul
xor
push
lods
add
sub
or
xor
shl
fsqrt
inc
or
inc
xchg
xor
dec
pop
aas
cmp
add
sbb
mov
cmp
imul
mov
pop
pop
mov
gs
aaa
push
inc
and
cmp
cmp
sbb
sub
push
and
xchg
cmp
daa
dec
dec
cwde
push
aas
push
and
cli
add
cmp
push
bound
dec
lods
clc
mov
add
sbb
xchg
adc
inc
adc
pop
or
sub
sub
sub
inc
push
xor
adc
adc
aas
pop
hlt
(bad)
dec
adc
sbb
push
adc
inc
cmp
adc
add
push
ret
push
mov
sub
push
aas
xchg
(bad)
es
movs
imul
inc
call
in
adc
inc
sbb
jno
push
adc
pop
add
es
mov
adc
push
inc
pop
sub
stos
(bad)
push
cld
sbb
or
ins
or
xor
xor
pop
ss
adc
sub
sbb
sub
xor
dec
sub
movs
push
outs
or
cmp
das
inc
daa
pop
mov
sub
jg
(bad)
mov
add
push
and
jle
dec
mov
jns
and
es
dec
leave
aam
or
add
adc
or
or
ds
push
jo
or
mov
fbld
je
or
cdq
dec
and
pop
mov
packssdw
mov
adc
les
inc
arpl
(bad)
in
call
add
shl
mov
and
push
adc
pop
xchg
xor
mov
es
pop
xchg
cld
(bad)
fimul
or
pop
sub
sub
fcomip
pop
in
or
cvttps2pi
pop
(bad)
or
xor
or
push
test
and
and
and
and
pop
cwde
jmp
out
mov
and
test
dec
sbb
add
pop
or
jge
jle
sub
push
or
sbb
pushf
lock
cli
nop
inc
and
ss
or
push
add
sub
or
push
adc
jg
lock
sub
sbb
inc
add
cmp
jo
or
push
xchg
or
sub
fisubr
fcom
daa
and
or
push
adc
mov
fdivp
jg
adc
and
sbb
inc
adc
icebp
(bad)
out
hlt
xor
cmp
or
cmp
and
stos
das
pop
pop
lock
and
je
out
clc
inc
jno
jbe
adc
jl
adc
push
sbb
mov
sbb
push
cmp
and
fdiv
iret
push
xor
dec
jecxz
sbb
or
adc
sbb
mov
jp
sub
imul
adc
cmp
or
cmp
xor
push
adc
add
adc
inc
stos
jle
add
adc
imul
cmp
mov
loopne
in
adc
inc
jo
idiv
sbb
and
adc
and
or
sbb
mov
adc
or
ja
mov
push
es
pop
add
es
jne
std
and
cmp
dec
adc
push
mov
dec
adc
mov
xor
lods
jg
jmp
sbb
fwait
ret
add
sbb
and
movs
xor
sbb
sub
add
or
or
icebp
in
dec
xchg
fcomp
pusha
adc
or
pop
hlt
xor
xchg
pop
stos
aaa
add
push
xor
cmp
or
adc
nop
sbb
mov
and
cmp
sbb
mov
or
lgs
jmp
lock
clc
dec
psrld
cmp
aaa
stos
lea
push
or
ret
jg
cmp
sub
outs
pop
jne
movs
mov
or
or
ja
push
adc
daa
xor
dec
dec
dec
push
ret
cs
int3
push
sbb
push
push
and
or
adc
and
ss
sbb
push
push
jo
aaa
or
mov
mov
sbb
xor
push
and
add
rcr
cmp
push
pop
add
imul
mov
and
(bad)
out
and
or
and
nop
adc
push
and
shl
fcom
push
aas
movs
loopne
lock
pop
inc
add
cmp
cld
mov
addr16
das
xchg
jmp
push
dec
or
or
pop
push
add
sbb
jg
pop
adc
fild
cmp
xchg
outs
add
jecxz
mov
jbe
shl
push
sub
mov
push
jp
and
or
pop
adc
dec
inc
fsubr
mov
test
movs
sub
sub
out
add
or
repnz
icebp
int
sbb
jo
or
pop
sbb
adc
add
or
stos
mov
int3
sahf
add
or
repnz
cs
popf
xchg
scas
jbe
xchg
adc
pop
lods
pop
jl
push
gs
or
add
call
adc
je
and
xor
push
shl
rol
or
aam
mov
loop
adc
repnz
add
sbb
push
popa
add
and
jb
or
push
bnd
and
loop
cmps
sub
loopne
push
inc
inc
add
adc
push
dec
(bad)
adc
add
lock
or
mov
and
mov
pop
ror
push
in
dec
mov
pop
lock
or
dec
cdq
shl
and
inc
or
push
adc
test
pop
push
fiadd
arpl
stos
inc
or
pusha
imul
lods
std
inc
sub
adc
dec
jae
je
ins
adc
popf
inc
shl
jg
inc
add
sbb
fwait
or
push
loop
gs
mov
or
and
je
inc
push
cmps
push
push
and
add
aaa
call
sub
stos
outs
repnz
add
hlt
jnp
sub
jp
jmp
pop
inc
loop
inc
adc
mov
and
fimul
pop
and
add
jne
push
push
shl
imul
jle
sbb
adc
push
loop
(bad)
push
or
fbld
mov
and
adc
ins
cmp
lock
sbb
add
dec
inc
dec
or
push
adc
(bad)
mov
sub
dec
leave
les
push
add
and
repnz
pop
cmp
inc
or
bound
sub
call
inc
js
es
push
(bad)
jp
pop
mov
clc
mul
dec
xor
xor
cs
js
aas
std
push
and
dec
or
mov
bound
push
xchg
adc
cli
sysenter
add
pop
cmp
pop
jmp
push
ret
stos
push
call
lea
shr
aad
dec
sbb
pop
pop
pop
sbb
sbb
or
adc
add
(bad)
(bad)
jmp
sbb
pop
or
push
adc
sbb
inc
sbb
or
adc
and
cmps
imul
add
sub
sbb
es
push
cmp
push
sbb
push
icebp
push
sbb
fs
mov
add
or
cld
fsub
xor
xor
pop
arpl
ja
dec
pop
jmp
xor
sub
sub
sub
pop
xor
sub
scas
mov
dec
cs
push
and
and
and
push
cld
ja
or
daa
or
xor
xor
sbb
mov
mul
xor
adc
pop
xor
dec
adc
xor
in
es
mov
es
adc
xor
sub
cld
fld
clc
jg
push
jl
push
inc
ds
sub
arpl
mov
inc
and
inc
sub
pushf
xor
push
mov
sub
adc
shl
xchg
imul
js
aas
sub
ss
retf
xchg
ds
sub
xor
sub
inc
xor
sub
and
sar
imul
(bad)
ss
xor
loopne
dec
sub
sub
sti
fnsave
inc
cmp
adc
xor
mov
(bad)
pop
sub
inc
aas
sub
jno
or
enter
ret
int
std
lock
pusha
push
jne
xor
xchg
sbb
add
and
xor
inc
and
xor
ret
xor
fwait
sahf
xor
lods
mov
inc
aas
enter
fstp
dec
xor
sub
scas
xor
pop
mov
mov
cmp
dec
ss
or
push
pop
xor
and
ret
pop
cld
mov
cs
je
and
ss
inc
scas
mov
push
aas
xchg
xor
jl
test
ror
inc
inc
lods
jno
inc
xor
mov
(bad)
int3
dec
and
and
jbe
xor
arpl
mov
loop
add
lods
cmp
push
call
dec
push
(bad)
int3
push
xor
push
mov
retf
mov
sub
sub
dec
dec
sbb
push
sbb
stc
inc
inc
cmp
aas
mov
mov
ret
cmp
xor
mov
push
imul
cmp
sub
jns
xor
pop
or
ss
sub
add
movs
sub
xor
inc
jp
xor
cs
pusha
pop
cmp
xlat
outs
pop
pusha
stos
ss
sbb
cmp
push
pop
xor
add
push
cmp
adc
inc
dec
es
mov
imul
xchg
sbb
cs
das
pop
test
mov
imul
imul
sub
ja
xor
mov
imul
fidiv
cmp
jg
cmp
cmp
xor
cmp
shl
jnp
sub
pushf
xchg
add
(bad)
(bad)
sbb
(bad)
mov
jp
dec
into
and
aas
retf
sub
loopne
cmp
loope
cli
pop
push
daa
cmp
sub
dec
xor
cmp
cmp
dec
and
add
mov
sub
dec
jle
xor
adc
das
js
sub
pop
and
inc
cmp
hlt
das
mov
daa
int
pop
es
xor
push
cdq
outs
xor
aaa
inc
mov
retf
cmp
nop
dec
xor
xchg
pop
push
das
xor
inc
xor
daa
inc
jae
inc
popa
addr16
(bad)
jg
test
pop
pop
push
pushf
inc
sub
test
dec
daa
mov
sub
pop
sti
xchg
les
dec
push
mov
das
je
nop
cmp
push
adc
pop
bound
pop
sub
fmul
mov
jns
cmp
retf
stos
ret
mov
pop
or
cmp
std
or
lock
add
dec
nop
nop
retf
aad
ret
mov
push
adc
out
es
shl
xor
jns
mov
or
sub
vaddps
adc
fs
test
mov
bound
add
push
lahf
pop
sbb
adc
jp
nop
push
(bad)
push
sub
outs
pop
(bad)
outs
cli
add
pushf
push
cmp
rol
xor
jle
cwde
inc
jle
push
or
inc
lock
repz
hlt
aaa
adc
add
je
add
jge
push
les
add
add
or
adc
push
add
cmp
cmp
xor
sub
or
or
push
ficom
or
mov
or
add
mov
enter
push
push
add
xor
add
repnz
stc
or
add
imul
imul
xor
or
or
add
pop
fist
pop
or
jp
sub
inc
and
add
xchg
sbb
dec
cmp
adc
sbb
retf
mov
add
mov
jge
sbb
pop
pop
adc
call
or
mov
cmp
call
(bad)
xor
mov
sbb
int3
sahf
shl
or
lods
in
add
push
or
outs
imul
add
addps
push
or
outs
mov
push
inc
out
sbb
popa
out
or
push
jno
ror
adc
repnz
add
push
or
aaa
ins
fmul
adc
adc
fadd
stos
mov
adc
int3
push
inc
add
int
push
sub
cli
inc
pop
adc
adc
cdq
push
shl
(bad)
adc
out
jb
inc
test
inc
xor
mov
add
add
mov
sbb
shr
or
mov
lds
popa
mov
jbe
(bad)
and
mov
or
and
pusha
(bad)
add
xchg
adc
jnp
bound
enter
mov
in
inc
mov
or
jl
imul
inc
out
sbb
adc
and
mov
fcomp
and
out
mov
add
inc
add
sbb
int3
xor
bound
stc
mov
xchg
mov
jno
add
les
fld
adc
adc
inc
lds
popa
or
pop
push
sti
sbb
push
or
cmp
dec
je
sub
adc
dec
xor
and
xor
add
les
or
adc
and
adc
inc
sbb
stos
push
inc
adc
xchg
add
mov
(bad)
bound
and
or
mov
js
sbb
add
arpl
push
push
stos
fiadd
not
add
rol
xor
or
xor
adc
pushf
lea
xchg
add
sub
push
sbb
rol
pop
adc
xor
test
test
or
dec
or
and
sub
das
ins
jmp
inc
dec
(bad)
inc
es
xor
stc
bound
jo
sbb
or
lock
or
sbb
xchg
dec
or
or
arpl
xor
push
inc
add
add
rol
jge
movs
jmp
adc
test
and
adc
mov
inc
icebp
cmps
adc
pop
sahf
add
mov
push
mov
out
test
js
mov
pusha
add
sbb
sbb
add
js
sbb
pop
add
adc
adc
xlat
test
dec
pop
das
shl
adc
sbb
sbb
cmp
cmp
cmp
or
and
arpl
push
mov
popf
clc
or
sub
mov
mov
mov
test
jne
adc
sub
test
repz
add
cwde
pop
js
add
xor
adc
add
inc
je
xlat
xor
cmp
push
lods
cmp
pop
gs
push
adc
(bad)
arpl
dec
and
push
mov
adc
cmp
daa
mov
call
in
cmp
cmc
movs
(bad)
stos
push
mov
inc
xor
sub
sbb
adc
add
stos
adc
jno
jo
push
adc
mov
jo
sbb
mov
and
cmp
cmp
dec
or
ins
mov
xor
sbb
mov
jnp
pop
pop
adc
jno
mov
adc
xor
loop
clc
outs
inc
add
mov
jno
inc
push
bound
sbb
lods
adc
or
jecxz
add
push
rcl
stc
mov
lock
add
call
or
adc
data16
and
and
add
mov
mov
adc
add
push
or
mov
inc
adc
add
mov
push
dec
inc
or
dec
sbb
push
adc
mov
jo
push
cmp
test
inc
popa
cmp
cmps
adc
push
sbb
sub
xor
test
add
inc
add
test
xor
add
adc
pop
lea
sbb
xor
mov
sub
push
cmp
test
mov
add
or
mov
add
cmp
cdq
or
sbb
push
loopne
sahf
dec
sub
push
xchg
mov
or
sub
add
adc
adc
push
add
push
add
add
mov
cmps
mov
mov
pop
mov
sbb
sub
inc
bound
pusha
nop
or
call
push
aad
mov
pop
movs
loopne
sbb
mov
sub
or
cmp
push
adc
xchg
jno
scas
lods
adc
sbb
adc
cmps
dec
add
retf
dec
add
adc
lock
retf
(bad)
lock
loopne
rcl
aad
xchg
inc
pop
push
mov
adc
cmp
dec
or
shl
jae
and
add
and
push
add
jno
mov
xor
mov
mov
add
adc
jl
inc
push
jne
add
mov
repz
push
mov
push
dec
jp
pop
and
sbb
add
bound
inc
dec
pop
or
add
push
repz
xor
add
mov
inc
mov
movs
shl
inc
lock
add
mov
jp
cmp
push
icebp
or
bound
lock
mov
cmp
lock
add
cmps
mov
mov
mov
ror
and
fadd
pop
or
dec
jg
nop
push
push
call
adc
xor
bound
mov
push
pop
push
arpl
movs
push
and
or
test
mov
push
add
push
jl
ja
loopne
jnp
xor
sbb
or
adc
sbb
adc
mov
sbb
pop
jnp
rol
das
and
sbb
pop
sbb
mov
cmp
xlat
push
add
rcl
aad
ud2
outs
xor
xchg
shld
inc
pop
push
jo
lea
ror
or
and
popa
adc
cmp
jo
stos
fst
mov
mov
sub
neg
adc
cdq
pusha
pop
pop
shr
idiv
jo
xor
outs
sub
retf
mov
push
push
mov
fwait
xor
jns
mov
sub
lea
bound
or
pop
fistp
adc
sub
mov
xor
out
jg
push
pop
push
pop
mov
lods
dec
adc
push
shr
adc
(bad)
in
inc
scas
push
add
mov
sbb
mov
fwait
lds
inc
sub
and
push
push
add
mov
pop
jns
mov
or
mov
pop
mov
test
nop
pusha
out
cmc
push
rol
add
mov
mov
cmp
mov
stos
add
and
or
pop
sub
pop
sub
push
cmps
adc
sti
dec
xchg
xor
push
add
xor
(bad)
fbld
lods
pop
xchg
mov
stos
popa
push
das
push
add
push
push
and
inc
inc
fsubr
(bad)
ror
add
push
adc
sbb
test
les
pop
fmul
add
jmp
adc
mov
leave
pop
sbb
sub
jmp
inc
lods
ins
inc
lock
or
mov
shl
pop
push
pusha
sub
inc
adc
movs
push
mov
iret
leave
ret
inc
mov
fucomi
nop
sar
add
or
or
sbb
add
(bad)
and
and
adc
sub
xor
inc
add
ja
xor
sbb
mov
push
adc
or
scas
adc
fsub
std
mov
add
shl
adc
add
pop
and
pop
imul
and
xor
or
sub
(bad)
out
loopne
cmps
push
xor
and
pop
pop
cmp
rol
lock
pop
js
jnp
gs
jbe
std
daa
sbb
out
adc
fdivp
cs
sub
lock
mov
(bad)
arpl
xchg
jbe
lods
add
cmp
arpl
jno
lods
lods
mov
mov
add
pop
cwde
fidiv
inc
sub
adc
xor
xchg
dec
jnp
pop
out
inc
add
test
(bad)
mov
sub
mov
pop
rcl
or
ins
gs
neg
sbb
leave
pop
pushf
mov
and
sub
inc
cmps
cmc
dec
or
dec
or
push
leave
or
mov
daa
fcmovu
mov
add
imul
xchg
mov
and
ret
div
mov
inc
inc
sbb
adc
cmp
dec
xchg
adc
add
fsubr
jecxz
in
dec
add
sub
shl
shl
and
push
fistp
lds
pop
lea
daa
iret
sub
outs
sbb
sbb
js
mov
loope
pop
sbb
mov
pop
rol
call
pop
dec
dec
shl
outs
push
xchg
push
rcr
mov
pop
ror
push
cmp
sbb
inc
add
test
in
ficom
in
sti
adc
sbb
sbb
dec
popf
fild
sbb
aaa
xchg
push
push
xor
adc
gs
add
inc
bound
fdiv
xor
and
sbb
xor
or
nop
mov
and
add
pop
push
jno
push
lods
add
movs
dec
xor
inc
jo
mov
in
ret
ret
xchg
ja
ins
inc
stos
sbb
mov
push
mov
movs
aas
(bad)
mov
sub
lods
lods
sub
xchg
imul
adc
fcom
adc
(bad)
dec
xchg
movs
sub
and
cmp
and
loope
iret
or
stos
and
push
ins
cmp
mov
mov
mov
dec
sub
sbb
not
popa
sbb
test
inc
xchg
mul
xor
rcl
sub
adc
mov
mov
cmp
inc
push
fldenv
mov
lea
sti
sub
jae
xchg
adc
hlt
pop
jne
arpl
mov
(bad)
pop
add
jg
jle
add
fidiv
or
or
or
dec
dec
cmp
or
mov
adc
push
adc
in
pop
mov
ja
aaa
cmp
ss
fucomi
pop
and
push
sbb
and
scas
cmp
sub
(bad)
adc
pop
ret
mov
fild
popa
add
scas
xor
iret
adc
imul
mov
xor
push
aad
fnstsw
pop
xchg
fst
in
mov
sub
mov
inc
pop
jns
push
movs
test
push
inc
pop
and
pop
pop
call
mov
inc
ret
aad
out
add
push
adc
pop
pusha
mov
cmp
jmp
fst
adc
sbb
xchg
cmps
sub
(bad)
push
cmc
fistp
imul
lods
and
cmp
pop
push
sbb
mov
push
movs
sbb
add
fist
mov
mov
test
pop
jmp
adc
pop
xor
sub
stos
and
push
(bad)
in
imul
pop
not
aaa
push
sbb
aaa
aaa
mov
and
push
adc
inc
mov
in
loope
push
mov
stos
aam
cmp
or
adc
add
les
mov
or
stos
ins
cmp
inc
add
mov
push
xor
xchg
mov
adc
and
cmp
fld
or
xor
sub
jmp
inc
mov
and
sub
adc
lds
lock
sbb
and
add
sbb
or
sub
fistp
and
adc
and
and
pop
xor
sub
and
das
sbb
sbb
add
and
sbb
and
adc
jne
or
mov
fild
cmp
inc
sbb
stc
fucomip
dec
data16
cmp
sub
sbb
jo
ins
sub
xlat
lods
mov
and
call
sub
jns
fisubr
sub
call
jb
mov
sub
sbb
in
or
scas
and
les
(bad)
int3
nop
jae
xor
inc
pushf
gs
mov
fs
add
push
in
xchg
rcl
inc
or
and
out
push
outs
je
mov
add
(bad)
sbb
loopne
xlat
and
add
and
or
gs
fmul
mov
sbb
and
gs
dec
jo
ins
lock
lods
push
xor
sbb
loopne
cdq
loope
loope
data16
into
jb
xchg
test
(bad)
mov
or
inc
and
add
sub
test
out
mov
and
ds
fnstcw
fs
or
ret
movs
clc
in
add
addr16
xchg
jns
sub
fild
push
push
or
sub
sbb
mov
adc
add
fisub
bound
or
and
sar
push
or
bound
aas
div
xchg
push
daa
pop
sub
pop
adc
mov
add
or
mov
pushf
sub
fucomi
mov
repnz
push
cmps
mov
mov
inc
add
sbb
or
mov
push
add
and
daa
xchg
stos
adc
or
lods
push
cs
adc
lock
push
or
xchg
(bad)
les
aad
mov
add
into
jmp
push
jmp
sub
inc
inc
lahf
ss
mov
add
push
add
ja
push
jmp
add
add
add
pop
add
or
in
retf
adc
xchg
push
adc
pop
sub
add
pcmpgtd
mov
fisttp
cmp
adc
mov
add
shl
nop
jne
add
cmc
add
ins
fisttp
scas
and
dec
out
sbb
add
fist
cs
cmp
das
sbb
and
mov
lea
out
jb
and
fwait
loopne
mov
add
mov
neg
cs
and
repz
add
nop
ins
lock
cs
jb
xor
xlat
and
test
and
fsub
push
and
mov
xchg
add
and
inc
js
mov
dec
ficomp
lea
add
and
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
