(bad)
in
pop
xchg
add
mov
cmp
push
je
cmp
movq
adc
sbb
test
mov
(bad)
(bad)
sti
out
adc
dec
add
adc
push
or
adc
xor
jg
shl
push
add
adc
and
(bad)
jne
cmp
ret
pop
or
cdq
push
add
ins
mov
add
pop
mov
movzx
leave
out
adc
and
add
adc
shl
mov
adc
dec
push
mov
xchg
mov
rcl
add
xchg
or
enter
cmp
rcl
push
call
ror
ror
mov
fcom
cwde
pushf
ins
xchg
or
lods
mov
mov
xchg
(bad)
enter
inc
push
jb
or
or
sbb
rcr
and
and
inc
sahf
cmp
and
sub
sub
in
(bad)
shl
shl
shl
fwait
sbb
cmp
dec
dec
mov
sbb
aam
inc
push
fwait
in
fdivr
sahf
icebp
nop
in
or
or
xor
aam
aam
xor
pop
jb
dec
cmp
aam
aam
mov
sbb
cmp
inc
dec
cdq
in
dec
dec
aaa
push
push
push
jnp
es
add
pop
sbb
cmp
pop
pusha
jnp
fnsave
dec
mov
in
xchg
in
or
js
sbb
cmp
leave
add
mov
mov
mov
nop
ins
xchg
dec
push
xchg
xchg
movs
jno
dec
cmp
xchg
fs
aam
cmp
push
sbb
mov
adc
xor
pushf
mov
xchg
adc
sbb
enter
fsub
xor
popa
xchg
in
call
dec
in
fcomip
repnz
clc
cli
nop
xchg
aad
aad
aad
enter
aad
scas
aad
aad
pushf
xchg
push
cmp
and
add
xor
xor
cmp
xor
and
aad
jo
jns
inc
aad
aad
aad
sbb
test
inc
and
and
xchg
aad
aad
dec
xchg
pusha
in
(bad)
push
(bad)
push
(bad)
imul
(bad)
pop
and
sbb
pusha
retf
(bad)
fs
fs
outs
aaa
push
dec
es
(bad)
enter
(bad)
(bad)
jl
(bad)
or
vmwrite
test
xchg
mov
leave
mov
xor
and
xchg
outs
shl
dec
pop
out
shl
movs
or
inc
adc
lahf
add
add
packuswb
lds
adc
adc
fwait
xchg
inc
push
sbb
in
pop
imul
mov
sahf
cmp
mov
mov
jns
aam
aad
aad
inc
and
cmp
sub
dec
aad
and
sbb
or
jns
nop
jge
xchg
(bad)
cwde
test
adc
cmp
addr16
adc
in
cmp
and
add
or
pop
adc
add
stc
jl
test
push
data16
mov
push
je
sbb
test
or
push
push
aam
fmul
leave
(bad)
and
add
adc
out
dec
jb
sbb
dec
cs
fmul
adc
je
dec
je
sub
fs
or
jl
out
push
push
ror
rcl
jns
and
rcl
push
pop
rcl
cmp
rcr
adc
cmps
cmp
mov
dec
jb
pop
cmp
in
xchg
in
rcl
lock
lahf
outs
xor
adc
jno
(bad)
call
(bad)
loopne
mov
add
ins
xchg
inc
(bad)
pushf
add
stos
fild
repnz
aam
sbb
mov
nop
add
frstor
sbb
loopne
call
jmp
dec
rcl
and
pause
xchg
sub
sub
cs
ds
test
adc
cmp
add
push
mov
pop
cmp
lock
call
into
dec
push
jns
lock
test
aam
fcom
jl
xor
mov
cmp
adc
out
and
cmp
rcr
rcr
push
xchg
dec
jb
je
js
clc
xchg
xor
and
(bad)
mov
add
and
sbb
add
add
jge
dec
ret
je
cmp
je
and
test
cmp
mov
adc
or
fldenv
add
and
dec
or
test
mov
aad
xor
cdq
adc
sahf
in
or
movs
mov
cdq
and
jl
imul
xchg
push
cdq
in
pop
shl
mov
rol
jl
rol
rol
inc
jne
nop
inc
inc
dec
es
jl
jl
int
add
sub
sbb
cmp
inc
cmp
and
and
dec
repnz
nop
add
test
nop
dec
sahf
mov
sahf
jl
cdq
jb
data16
enter
dec
aad
aad
mov
xchg
js
cmp
jmp
test
test
xor
jge
or
sbb
xchg
pusha
bound
jb
inc
mov
or
(bad)
sub
in
xchg
cmp
in
sar
sar
iret
ret
ja
sbb
sar
xor
(bad)
leave
enter
imul
stc
into
aaa
sbb
or
dec
push
or
shl
and
aad
aad
les
in
iret
add
enter
push
sbb
xor
(bad)
push
pop
pop
xchg
jnp
add
bswap
and
push
inc
dec
je
ret
fistp
or
inc
dec
cmps
ror
sub
jns
push
rcl
cmp
rcr
cld
cmp
inc
push
add
cwde
rcr
sahf
cmp
cmp
xor
inc
(bad)
ds
(bad)
sbb
xor
inc
push
test
arpl
inc
sbb
dec
dec
in
sbb
and
(bad)
sub
imul
fadd
sub
xor
xchg
or
xchg
add
xchg
addr16
sar
xchg
aad
iret
fst
dec
lahf
fs
push
or
into
mul
push
sub
je
push
jns
aad
aad
test
mov
dec
out
ror
jb
cmps
dec
repnz
mov
cmp
add
retf
(bad)
mov
sbb
je
or
and
inc
pop
push
and
sbb
mov
ror
(bad)
sub
(bad)
xor
xor
jns
and
push
and
mov
dec
and
jns
nop
lahf
aad
aad
add
mov
xchg
pop
adc
sub
and
int
add
sbb
pusha
dec
jb
fcomp
cld
mov
add
add
lods
mov
loopne
add
pop
mov
retf
adc
pop
jecxz
paddw
add
pop
xlat
xor
aaa
ins
mov
pop
push
add
add
pop
push
dec
sbb
mov
jae
adc
sahf
push
or
inc
pop
in
cmp
mov
push
and
inc
bound
test
out
mov
push
retf
ds
inc
pop
cmp
imul
cwde
add
adc
jmp
scas
ud2
lds
femms
cmp
mov
or
aas
jo
nop
jl
int
jmp
ret
push
or
jge
mov
fcom
xchg
outs
pop
xlat
pop
xor
or
out
pop
scas
jmp
outs
adc
dec
movs
pop
ror
mov
jmp
ret
aas
out
fist
frstor
sti
adc
add
(bad)
(bad)
inc
or
or
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
pop
sti
jmp
and
es
sub
sub
add
sub
push
push
xor
outs
dec
xor
ss
push
cmp
cmp
cmp
ds
push
neg
repnz
push
inc
adc
inc
inc
add
push
dec
dec
pop
idiv
in
mov
dec
push
dec
push
push
dec
push
dec
dec
or
push
push
push
push
adc
push
outs
inc
nop
mov
test
xchg
or
or
pop
mov
les
sbb
xchg
imul
cmp
or
push
fistp
syscall
jecxz
adc
adc
or
or
add
or
pop
or
sysret
sti
ror
adc
or
adc
test
adc
outs
jg
cmp
aam
or
pop
cwde
fld
test
add
add
add
mov
jnp
add
pop
mov
add
int3
add
in
and
sub
jmp
mov
pop
test
or
push
cld
mov
push
push
ins
add
dec
ins
movs
mov
xor
movs
(bad)
adc
jne
retf
inc
sbb
jl
add
lea
retf
outs
mov
jmp
push
push
push
push
and
cmp
nop
mov
add
(bad)
es
jl
xor
inc
and
add
jne
cmps
and
pop
pop
and
xchg
stc
push
sbb
mov
and
adc
sti
(bad)
mov
dec
test
jns
lea
jg
ins
je
mov
mov
add
jmp
fdivrp
add
je
mov
mov
into
push
push
xor
or
mov
lock
(bad)
lea
jnp
push
xor
lea
mov
mov
push
push
pop
lea
push
inc
jp
add
ficomp
or
mov
test
mov
xchg
dec
jle
push
jb
mov
bound
push
push
lea
push
mov
jo
add
mov
add
inc
inc
cmp
and
jne
fimul
sub
push
ds
mov
push
sub
add
jne
(bad)
aas
mov
cmp
xor
retf
outs
ds
lea
push
or
mov
adc
ret
rol
shl
jl
jle
shl
mov
mov
or
pop
pop
xor
push
call
das
(bad)
mov
pop
ret
cmp
xchg
jg
ins
pop
dec
(bad)
sub
sbb
adc
in
cmp
add
sbb
ins
test
daa
mov
mov
loopne
in
adc
jb
push
add
cmp
cmps
and
ss
(bad)
dec
adc
shl
xor
inc
mov
dec
mov
inc
test
jne
sbb
jmp
loope
push
(bad)
mov
movs
dec
mov
sbb
pop
in
mov
adc
cmps
mov
xor
jo
mov
test
dec
ja
xchg
mov
cmp
je
inc
pop
clc
das
je
mov
xor
add
inc
cmp
jne
lea
dec
cmp
ins
shl
retf
mov
add
mov
cmps
dec
push
add
add
dec
push
div
dec
and
inc
and
popa
imul
dec
push
jl
xchg
add
mov
jo
mov
jg
mov
push
lea
push
add
cmp
or
push
add
xor
or
add
repnz
dec
pop
icebp
clc
push
or
add
push
jo
inc
mov
(bad)
cld
cmp
stos
push
xor
push
add
pop
movs
and
cli
cdq
mov
mov
cmp
fstp
leave
xor
push
rcl
mov
xchg
hlt
inc
into
xchg
add
out
mov
sbb
loopne
inc
xor
push
(bad)
jo
loope
jge
push
aam
inc
jle
fld
dec
xor
jle
inc
adc
ret
ret
je
mov
shl
adc
xor
ror
mov
inc
push
xchg
push
shl
in
dec
cmp
nop
pop
add
cdq
nop
xchg
xchg
add
lods
jo
jmp
cmp
and
mov
lahf
sbb
add
stos
push
push
adc
mov
rcl
adc
frstor
adc
dec
mov
xor
and
ins
jp
ds
mov
mov
mov
jp
dec
movs
and
pop
mov
xchg
retf
je
pop
push
test
into
pop
pop
fidiv
xchg
dec
daa
or
cmp
fcom
daa
ins
xor
push
outs
inc
push
mov
call
push
je
sub
sbb
xor
sbb
sbb
and
aad
mov
mov
adc
js
in
in
inc
out
push
push
test
loope
shl
cmp
dec
scas
cmp
imul
jo
popf
jne
mov
popa
repz
xchg
and
push
dec
repz
and
push
rcl
mov
adc
jb
sbb
xor
test
ja
popa
or
mov
adc
shl
push
jmp
stc
mov
cmp
jmp
stos
lea
mov
sub
push
in
call
mov
sub
add
pusha
adc
lds
test
dec
icebp
push
mov
test
mov
sub
lea
push
mov
lods
cmp
xchg
pop
movsx
pop
mov
push
scas
sub
cvttps2pi
push
mov
pop
sub
jnp
lahf
sti
pop
pop
push
push
add
test
fcmovnu
in
pusha
or
fistp
cmp
dec
dec
pop
dec
pop
(bad)
enter
inc
dec
sub
push
jno
jo
enter
fcmovu
jnp
bound
and
pop
and
xor
mov
test
sahf
fist
add
jne
jmp
(bad)
mov
and
jo
dec
and
push
mov
push
sub
sub
and
and
in
and
sub
test
fucomip
pop
pop
ja
daa
mov
fxch
fdiv
mov
nop
xor
xchg
mov
cdq
das
add
(bad)
imul
mov
sbb
cmp
jb
and
idiv
inc
pop
cmp
mov
mov
mov
data16
xor
data16
int3
or
xchg
sub
jg
or
jbe
jne
stos
and
int
xchg
fsubr
dec
jno
cdq
in
fsub
in
xchg
mov
add
movs
in
lock
ss
and
sub
nop
(bad)
pop
cwde
or
out
js
or
fadd
push
sbb
pop
jae
and
mov
mov
adc
cld
mov
xchg
fs
mov
push
fcom
push
push
mov
rol
outs
jne
push
and
les
mov
test
ins
mov
test
mov
leave
jg
fstp
ja
mov
mov
lea
cmp
jne
mov
je
mov
add
cmp
rol
in
jmp
sbb
sub
mov
cs
adc
shl
push
push
mov
xchg
jp
add
sar
add
mov
mov
xchg
cmc
ja
iret
push
fstp
pop
jbe
cli
lea
sub
jle
add
xchg
sbb
push
aam
fild
sbb
lock
mov
fcomp
cli
call
shl
loope
scas
push
mov
fsub
scas
ja
inc
mov
add
push
js
push
enter
retf
pop
sub
sub
mov
mov
pop
ins
cmp
mov
cmc
sbb
movs
adc
adc
adc
ja
cld
sbb
dec
pop
clc
inc
loopne
aas
mov
push
jbe
mov
add
sbb
pop
jmp
das
cli
jl
or
adc
mov
inc
jl
mov
sbb
adc
inc
mov
mov
cdq
nop
out
adc
inc
sbb
test
pop
cld
call
inc
mov
sbb
jl
mov
and
call
xor
cmp
sbb
or
xor
int3
or
inc
sbb
or
add
(bad)
sbb
mov
sbb
sub
fmulp
cmp
ret
out
int
retf
loopne
sub
mov
push
loop
jp
or
jne
movs
mov
mov
push
arpl
inc
inc
addr16
std
or
adc
fnstsw
fld
loope
inc
in
mov
sub
dec
fcomp
icebp
mov
sub
pop
pop
xor
cmp
mov
cmp
cmc
stc
sub
xchg
or
aas
lock
lock
arpl
ja
dec
fdiv
xor
in
movs
jae
xor
out
pusha
xchg
in
ins
sbb
in
data16
stc
sti
in
outs
stc
inc
call
(bad)
or
fidivr
outs
call
test
add
add
repz
sub
dec
cwde
cmp
jmp
movs
shl
cmp
in
or
rcr
dec
inc
fcom
out
add
push
test
inc
and
add
jb
push
inc
enter
pop
je
and
and
adc
sub
mov
and
push
jo
xchg
dec
push
lods
mov
int
push
pusha
xor
jmp
test
mov
cmp
pop
shr
sub
and
pop
or
push
sub
xchg
jp
and
scas
jle
fmul
pop
mov
pop
and
push
or
add
cs
lahf
xchg
cli
popf
mov
mov
jl
mov
nop
sub
in
lock
add
cmps
imul
popa
popw
gs
mov
stos
addr16
add
mov
add
dec
add
or
mov
sbb
mov
nop
push
sbb
adc
jmp
je
call
stos
inc
inc
mov
mov
pop
cmp
add
and
push
adc
mov
out
or
xor
xchg
daa
inc
jmp
push
iret
push
xor
pop
nop
jp
cs
pop
push
mov
push
call
cmp
or
sub
mov
cmp
cmp
pop
xor
cmp
dec
test
sub
sbb
ins
popa
stc
pop
xchg
mov
shr
and
pop
pushf
in
dec
out
cld
adc
in
add
dec
mov
mov
or
sar
scas
sub
vpmovmskb
das
dec
mov
test
scas
dec
add
cmp
out
push
pop
push
inc
sub
sbb
pop
add
cli
cmp
fs
pop
int
out
mov
mov
jo
add
(bad)
mov
and
popf
mov
jne
sbb
aaa
in
es
add
sar
add
add
dec
xor
and
daa
(bad)
daa
mov
dec
cmp
cmp
cwde
pusha
data16
out
loopne
push
jmp
icebp
mov
enter
xor
xor
inc
sbb
(bad)
sbb
sub
inc
enter
or
jmp
sbb
and
fsub
punpckhbw
cmp
lock
scas
mov
add
and
jno
jmp
imul
and
mov
mov
mov
dec
push
retf
aaa
sbb
addr16
mov
mov
xor
mov
add
mov
cli
push
mov
jg
or
cmp
pop
mov
add
cmp
pop
cli
mov
inc
cmp
add
loopne
cli
xor
mov
push
test
add
call
das
cmp
and
add
adc
and
inc
sbb
jne
test
push
je
(bad)
sub
ret
inc
xor
add
shl
rol
pop
mov
les
dec
lahf
ss
pop
test
add
push
(bad)
or
neg
xor
push
cmp
jne
mov
lods
imul
jmp
or
inc
lods
cmp
add
in
inc
adc
xchg
cmps
dec
inc
cld
js
jmp
(bad)
or
jo
xor
add
jle
lods
mov
out
pusha
xor
sbb
push
or
or
jne
xchg
sbb
push
lock
xlat
push
dec
addr16
jmp
cmp
mov
addr16
mov
data16
mov
add
xor
mov
push
jae
add
sub
xchg
add
lods
lds
sbb
je
and
test
pop
adc
in
scas
sbb
test
cli
dec
and
cmps
pop
call
or
imul
jge
rcr
add
add
or
ret
ds
cmp
xor
pop
fld
icebp
inc
jge
mov
rep
cmp
fs
mov
ins
mov
push
movhps
inc
mov
mov
aaa
mov
dec
mov
ret
je
push
mov
add
push
adc
push
mov
lods
sub
mov
inc
xor
outs
lock
cmp
adc
dec
in
js
ss
sbb
sti
mov
ss
pop
pop
mov
pop
pop
pop
leave
ret
sbb
mov
jge
add
cmp
pusha
addr16
xor
and
xchg
mov
pop
pop
test
jmp
push
mov
cmp
ja
push
push
cmp
or
push
dec
jle
mov
mov
inc
cwde
jno
add
ret
adc
fistp
popa
add
clc
test
or
out
scas
aam
cmp
or
sub
pop
or
fsubr
adc
and
jle
fcom
aad
inc
call
(bad)
lods
test
test
mov
cmp
lock
or
loopne
dec
retf
je
pop
je
adc
jmp
outs
rcr
push
mov
or
(bad)
jle
ror
xor
icebp
sbb
xor
xor
cmp
loope
add
sbb
pop
cmp
xor
outs
pop
js
jbe
inc
cld
cmp
jecxz
cmps
jmp
in
out
adc
adc
fwait
push
aam
xchg
sub
push
cmps
adc
dec
std
cld
pushw
inc
jo
or
out
dec
enter
push
mov
pop
inc
xor
xor
mov
jae
daa
setne
cmp
inc
popa
loope
pop
pop
inc
repz
pop
add
test
cdq
jl
div
cld
push
adc
test
dec
ins
ins
sbb
sub
jb
mov
cwde
pop
push
jb
xorps
jno
cmc
outs
inc
inc
jo
(bad)
js
ins
adc
in
mov
and
sub
push
add
xchg
in
(bad)
pusha
sete
(bad)
and
imul
push
sbb
(bad)
mov
push
sar
xchg
add
or
cmp
(bad)
imul
or
stos
clc
ins
mov
int
jmp
shr
adc
add
(bad)
push
mov
jl
jg
cmp
test
add
test
add
jp
push
add
sbb
loopne
hlt
jl
mov
adc
icebp
mov
ror
mov
push
fistp
sti
call
and
loope
pop
ss
adc
or
xchg
je
or
mov
clc
jbe
pshufw
add
mov
les
sub
arpl
inc
ja
pop
call
pop
movs
xor
sub
pop
mov
pop
rol
lods
or
sbb
(bad)
int3
jg
sub
add
xchg
je
cwde
je
pop
inc
(bad)
leave
inc
fild
dec
cwde
xchg
dec
dec
mov
movs
inc
(bad)
or
mov
nop
mov
xacquire
sub
mov
adc
mov
jne
mov
jne
sbb
push
lods
sbb
jbe
cli
mov
call
jbe
aaa
jge
dec
loope
push
xor
pop
adc
jnp
dec
inc
adc
fwait
pusha
loopne
mov
sbb
mov
xlat
std
sbb
loope
and
xchg
xchg
fst
pop
sbb
mov
pop
sbb
push
and
pop
mov
movzx
pushf
imul
push
push
cmp
jne
das
dec
lock
jmp
data16
mov
fist
call
jo
int
outs
mov
push
fsubr
dec
in
push
nop
sahf
addr16
dec
push
sub
sbb
in
cmp
loopne
jno
xor
pop
enter
sub
cwde
mov
add
mov
mov
je
mov
mov
movs
pop
call
push
sub
jno
mov
arpl
out
add
lea
pushf
mov
jbe
outs
sub
add
mov
mov
arpl
or
ror
sbb
mov
fmul
test
rcl
or
(bad)
jbe
add
movs
dec
mov
or
jnp
push
or
push
arpl
pushf
fs
adc
mov
dec
or
ins
repz
bound
sub
or
dec
or
mov
cmp
inc
and
xor
and
jecxz
inc
test
pop
jmp
test
fiadd
std
or
push
mov
or
cmp
cmp
or
popa
cld
test
push
movs
cmp
dec
retf
inc
jne
push
ins
popf
jg
mov
(bad)
push
pop
idiv
or
pop
xor
lea
xor
sbb
clc
dec
mov
sti
jle
(bad)
ins
and
jne
imul
ins
popa
stc
lds
add
test
push
jg
mov
sar
xchg
push
add
test
push
je
push
push
push
push
xlat
add
(bad)
nop
and
push
mov
jle
push
int
sbb
enter
cld
je
daa
sub
adc
cmp
arpl
rol
(bad)
sub
outs
aaa
add
enter
dec
push
hlt
mov
mov
pop
mov
stc
enter
jne
ja
icebp
jl
pushf
fcmovnbe
loop
clc
sar
dec
ins
jo
sbb
add
adc
sub
and
test
xor
inc
or
or
out
loop
cmp
dec
js
mov
mov
jmp
nop
fbld
pushf
movsx
push
push
push
add
or
ret
inc
sbb
lock
repz
add
je
dec
mov
jne
add
sbb
and
sub
mov
xlat
jmp
pop
or
cmp
push
cmp
fucomi
push
mov
sbb
aam
inc
pushf
lds
inc
or
dec
movs
test
adc
js
push
pop
and
adc
adc
test
fwait
push
pop
jge
iret
out
mov
pusha
mov
test
lock
call
sar
jne
jae
inc
adc
fistp
aaa
aad
movs
lods
push
pusha
jo
cmc
cmp
je
inc
clc
test
pop
and
sub
fnstcw
dec
clc
enter
sar
lock
mov
mov
jo
jg
fwait
mov
out
daa
sbb
sar
sbb
in
lea
fbstp
lea
xchg
push
cmp
loop
or
add
add
outs
mov
cmp
lods
sti
inc
mov
outs
es
cs
ds
ret
or
bound
or
sbb
sar
pop
or
int3
ror
retf
or
pop
sub
(bad)
fidivr
clc
sbb
sbb
outs
xchg
mov
sbb
lock
adc
dec
add
je
or
dec
dec
xor
or
push
in
imul
or
or
add
inc
inc
adc
xchg
add
add
mov
(bad)
ficomp
or
pop
pop
add
adc
jnp
mov
mov
imul
xchg
retf
lods
fnstsw
mov
pop
mov
call
ins
cmp
cmp
push
call
inc
dec
je
add
je
ins
je
cdq
fist
ds
retf
out
es
ins
jne
inc
adc
add
pusha
adc
jnp
jmp
mov
cmp
jne
cmp
enter
cmp
mov
enter
movs
(bad)
jg
jmp
inc
ins
and
sub
imul
in
loope
fnstcw
fldcw
in
leave
(bad)
sbb
fisub
(bad)
int
xchg
mov
mov
jo
(bad)
scas
cmp
push
test
fwait
mov
call
xchg
push
push
repnz
(bad)
loope
aas
inc
je
pop
add
(bad)
aas
push
sub
add
mov
inc
lea
jo
scas
add
in
stos
push
movs
pushf
or
sbb
(bad)
test
test
add
jp
retf
pop
retf
push
mov
int3
inc
jno
enter
mov
int3
cmp
adc
push
mov
ret
jge
stos
lods
mov
nop
adc
add
fs
jmp
shl
mov
jns
ror
pop
repz
inc
rol
xor
xor
inc
mov
test
hlt
push
loopne
xchg
add
fs
jmp
mov
mov
jns
add
inc
cmp
mov
adc
mov
into
je
es
fcomp
in
cdq
sub
sar
(bad)
repnz
popf
inc
or
or
inc
retf
inc
in
outs
xchg
jns
pop
push
lock
jg
sahf
and
add
mov
or
mov
fistp
imul
outs
push
test
test
je
add
xor
cmp
call
mov
data16
or
arpl
sub
inc
(bad)
pop
pushf
add
test
gs
mov
stos
mov
imul
push
dec
scas
pop
call
repz
cmp
inc
sbb
js
mov
jno
cmps
adc
mov
mov
clc
movs
pop
int
add
ds
lods
jns
je
xchg
(bad)
or
cmps
or
data16
mov
lea
add
cld
xor
(bad)
call
mov
sti
jmp
sbb
dec
push
loop
or
mov
fisubr
cmps
call
or
sbb
sub
dec
pop
fld
push
and
cmp
ss
or
mov
jo
and
xlat
mov
mov
add
(bad)
jne
or
mov
add
(bad)
bswap
(bad)
rol
std
and
in
lods
adc
adc
outs
mov
sar
push
pop
push
mov
scas
sub
xor
add
pop
shl
test
jg
jl
jae
xor
(bad)
neg
adc
neg
fadd
rcl
fstp
sub
pusha
mov
pop
sbb
mov
xchg
mov
or
jb
fcom
and
mov
dec
jo
push
push
mul
cdq
push
push
push
push
enter
xor
push
jbe
cmp
fucomp
inc
dec
mov
dec
jmp
outs
repz
push
fs
cwde
outs
inc
loopne
aad
add
bound
je
outs
test
dec
inc
jmp
dec
popw
pop
push
mov
sub
sbb
fld
cld
jmp
dec
cmp
inc
sub
jae
sub
imul
shl
mov
push
xor
mov
sbb
or
push
jmp
jmp
test
je
(bad)
sar
fild
int3
sbb
hlt
shl
aas
test
jne
mov
jge
and
imul
mov
dec
inc
jle
jmp
leave
jg
mov
sbb
pop
adc
mov
push
pop
push
or
or
fldpi
sbb
xor
sbb
jecxz
enter
push
test
fadd
push
push
push
jp
add
mov
dec
add
je
and
fild
push
and
(bad)
xchg
ss
pop
inc
shr
lea
adc
(bad)
and
in
retf
and
add
popa
or
and
adc
shl
adc
sbb
jae
xchg
pop
xchg
mov
push
outs
mov
shr
dec
and
sub
sbb
mov
and
add
clc
aam
dec
jae
sub
or
(bad)
add
fsub
in
push
cmp
pop
push
xchg
pop
fsubr
adc
or
ins
xor
mov
push
jmp
xor
mov
arpl
iret
lea
dec
fwait
xchg
fcomp
jecxz
push
data16
popf
enter
and
mov
pushf
(bad)
jno
lea
push
and
add
mov
int3
loopne
cld
(bad)
aaa
or
cld
nop
pusha
int3
cmp
xor
lods
jbe
mov
mov
pop
jo
pop
add
adc
pop
sub
mov
xchg
mov
push
inc
cmp
push
push
sub
call
jp
out
pop
jmp
pop
sbb
push
loopne
loope
arpl
inc
(bad)
shl
add
xchg
push
inc
cmp
(bad)
xor
sub
fistp
push
push
pop
mov
push
or
inc
shr
pop
cmp
sbb
and
sub
inc
not
push
sbb
mov
int
or
lds
int
mov
push
or
stos
(bad)
into
add
scas
mov
icebp
ror
xlat
mov
push
adc
in
je
(bad)
add
pop
xor
inc
ins
pop
adc
ror
(bad)
(bad)
adc
and
or
pop
sub
mov
imul
sub
inc
mov
loope
adc
and
shl
mov
fld
sub
sub
popa
cmp
in
jne
mov
aam
sbb
dec
dec
je
out
pop
or
sbb
adc
cmc
pop
fst
out
iret
push
push
push
adc
cmp
aam
jb
icebp
test
out
adc
mov
inc
jo
add
inc
or
sub
push
xchg
scas
lods
imul
shl
xchg
and
or
adc
fsubr
mov
pop
push
retf
mov
mov
inc
sbb
into
out
fild
data16
inc
int3
jl
fmul
mov
sub
push
enter
jge
adc
out
adc
add
cmp
jb
(bad)
mov
pop
je
or
push
adc
jnp
ror
inc
cmp
inc
cmp
je
inc
pop
mov
push
fst
fisttp
add
sub
push
lods
mov
mov
or
add
out
loopne
loopne
mov
loopne
sbb
and
fcmovnbe
imul
mov
pop
mov
sbb
and
adc
add
imul
xchg
adc
xchg
outs
fmul
push
add
sbb
inc
mov
les
fidivr
or
mov
cmp
out
adc
enter
add
(bad)
push
test
push
inc
pop
cmp
adc
add
jle
ins
add
add
inc
mov
mov
ds
pop
lock
out
(bad)
stos
adc
stc
(bad)
cld
imul
mov
jmp
push
mov
sbb
jl
aas
adc
cmp
jo
pop
out
int3
mov
inc
sub
aaa
ins
shr
xchg
sar
ja
inc
xchg
cmp
sub
xlat
mov
mov
sub
push
mov
stc
jne
cmp
mov
xchg
mov
loopne
add
jle
lahf
xchg
push
mov
jmp
in
cmps
jmp
mov
adc
pop
cmp
je
sub
enter
or
mov
inc
fsub
scas
outs
or
call
mov
std
mov
push
mov
iret
adc
dec
pushf
rcr
inc
jp
jbe
and
loope
jne
push
xchg
arpl
mov
add
outs
in
or
xor
push
lods
psubb
add
sub
daa
(bad)
sbb
mov
in
inc
adc
push
loopne
rcl
xlat
and
pop
je
jge
xchg
shl
in
jmp
jmp
outs
out
xchg
adc
add
jg
xor
add
mov
push
push
lea
cmp
pop
add
push
fild
and
xchg
std
fild
in
es
and
movs
mov
inc
jmp
cmp
mov
or
jmp
or
jne
adc
fcomp
in
adc
mov
mov
arpl
and
(bad)
cmp
mov
cmps
outs
and
push
js
or
mov
adc
and
adc
ss
mov
out
adc
cs
and
mov
or
loope
sbb
clc
fwait
retf
jg
add
shl
or
mov
jmp
add
stc
sbb
dec
ins
pop
and
dec
adc
sbb
or
psubb
sub
ins
lods
add
and
sbb
or
inc
mov
cs
mov
imul
cld
mov
push
lods
shl
dec
mov
test
cmp
out
(bad)
push
mov
jmp
jbe
inc
mov
add
jo
pop
sbb
cmp
stos
sbb
pop
inc
add
cli
test
cmp
jb
pop
cld
(bad)
cmp
mov
sbb
xor
ja
add
or
hlt
cmps
pop
xor
adc
add
popf
push
pop
sbb
mov
rol
scas
xchg
adc
arpl
pop
jnp
jmp
cdq
sbb
(bad)
mov
js
mov
push
xor
xor
adc
add
(bad)
mov
ins
or
and
inc
push
mov
jmp
loopne
mov
add
inc
ins
dec
shl
push
pop
xor
out
mov
ds
cmp
xor
xlat
fcmove
pop
fsub
mov
dec
fwait
retf
jo
imul
adc
pop
pop
aam
cmp
jb
adc
jnp
ja
mov
sub
mov
adc
or
and
popa
(bad)
adc
int
movs
mov
xor
jnp
sub
or
dec
das
and
fxch
add
stc
ss
cmp
jb
cmp
or
sub
mov
pusha
out
dec
sub
fs
push
stc
jo
ret
adc
movs
fst
push
aaa
mov
jl
jne
shl
jo
inc
popa
pusha
dec
out
mov
push
mov
push
adc
test
adc
aas
dec
stos
mov
or
out
mov
stc
pop
lods
adc
mov
pop
add
mov
jmp
mov
mov
mov
aad
jbe
or
inc
pop
outs
jmp
mov
push
xor
xchg
data16
data16
add
es
pop
inc
call
les
push
sub
pop
ins
add
and
not
push
mov
dec
inc
ret
clc
add
das
(bad)
pop
add
jl
or
lahf
pop
push
in
and
lds
jae
outs
pop
test
sbb
push
mov
mov
hlt
clc
aaa
adc
jnp
scas
jecxz
add
iret
xor
push
test
mov
adc
gs
loop
sub
fcomp
xor
push
mov
or
fcmovnbe
adc
pop
(bad)
(bad)
(bad)
mov
xchg
ins
cmp
cmp
push
movs
xlat
sbb
fild
je
pusha
js
jg
sub
fdiv
into
leave
fwait
and
xchg
or
jle
ins
hlt
ffree
mov
cmp
arpl
loopne
adc
mov
sbb
cmp
rcl
push
mov
sbb
(bad)
into
js
pop
or
adc
jl
dec
adc
cmps
push
out
push
pusha
lea
repnz
sbb
or
mov
fwait
cmp
repz
outs
dec
or
push
test
pusha
mov
test
ret
push
fmul
std
hlt
inc
mov
mov
adc
and
sbb
in
mov
sub
push
sub
iret
div
and
push
pusha
out
dec
cmp
pop
inc
cmp
cmp
fdivr
push
mov
es
mov
rcr
test
jo
xchg
inc
push
dec
add
xor
test
or
je
jbe
inc
call
jle
nop
push
and
and
aad
pop
inc
ins
imul
sbb
cdq
dec
iret
mov
pop
std
lods
loopne
lods
fisttp
adc
push
inc
or
jle
loopne
mov
lock
push
mov
div
sbb
inc
cwde
sub
and
imul
sub
out
es
lock
jmp
push
jo
addr16
inc
xor
imul
or
add
sub
sbb
mov
add
call
ins
mov
sahf
push
dec
or
enter
dec
enter
dec
pop
cmp
cmps
adc
push
jae
neg
ret
jno
push
pop
outs
enter
push
cmp
clc
scas
and
jne
pop
cmp
mov
sar
cmp
aas
adc
test
sbb
ss
test
add
xor
xchg
inc
ret
push
lea
xlat
mov
sbb
sbb
sbb
mov
lods
and
inc
mov
lock
mov
sub
pop
add
cmps
and
and
dec
and
pop
inc
jno
push
clc
or
cmp
and
nop
mov
aad
inc
add
ds
adc
adc
sbb
lods
dec
or
and
call
mul
inc
arpl
dec
call
xor
pushf
mov
sbb
xor
xlat
retf
sbb
push
push
lock
js
pop
pop
das
adc
add
or
add
ins
jno
fdiv
cmp
or
shr
inc
dec
inc
push
pop
sbb
jmp
(bad)
shr
rcr
or
jne
div
mov
fs
fsubrp
mul
add
push
cmp
ja
jb
cmp
jbe
mov
dec
sbb
lods
inc
push
dec
fcmovb
lahf
repz
pop
aaa
or
inc
pop
pop
in
add
mov
add
in
pop
pusha
dec
cmp
stc
je
out
arpl
xchg
xchg
jmp
sbb
mov
adc
push
or
fcomi
fsubr
push
cmp
pop
add
jbe
int
ret
inc
adc
pop
cmp
sbb
(bad)
mov
movd
iret
inc
cmp
jo
out
push
sub
add
adc
es
fsubrp
jnp
xor
leave
xchg
pop
cld
lods
mov
movs
mov
retf
push
ror
and
addr16
ror
mov
les
xlat
jle
add
jne
mov
leave
cli
out
sbb
fdiv
mov
ret
add
cmp
jb
test
lea
adc
ds
sar
push
lea
mov
xabort
mov
xlat
lds
sub
mov
sahf
in
in
inc
nop
jp
push
and
mov
into
das
sbb
loop
and
aad
xor
xchg
(bad)
leave
pop
and
sub
pop
test
inc
mov
call
pop
dec
xor
and
pop
jl
add
fwait
jge
rep
nop
call
pop
mov
adc
jne
inc
cdq
add
dec
lock
loopne
clc
leave
fsub
sbb
cmp
outs
std
pop
push
cmp
push
mov
cmp
je
cmp
and
push
cmp
add
push
faddp
ficomp
cmp
mov
adc
ficomp
push
dec
pop
xchg
xor
mov
mov
xor
(bad)
jb
cmp
add
sbb
mov
mov
mov
pop
mov
cli
add
sub
xor
adc
add
clc
pop
pusha
mov
icebp
mov
dec
bound
pop
and
jbe
test
xor
in
mov
fwait
stc
pop
jl
ficom
cmp
push
sbb
sbb
jle
nop
jno
enter
pop
cmp
(bad)
cld
sbb
jae
ds
xchg
addr16
aas
xchg
(bad)
call
cmp
fs
call
add
dec
shl
or
pop
(bad)
in
test
cmp
jo
addr16
je
fild
popa
fdivr
fmul
cs
mov
cmp
push
call
mov
dec
mov
jmp
pop
inc
xor
ss
cmp
mov
mov
inc
or
pop
int
cmp
(bad)
fadd
lea
ds
dec
mov
jg
mov
fldenv
push
jmp
xor
mov
xchg
cmc
and
push
sub
jle
aas
push
push
out
inc
mov
repz
jae
or
test
into
push
cmp
inc
(bad)
outs
cwde
jae
push
and
and
mov
mov
aam
int3
pop
(bad)
mov
(bad)
(bad)
mov
jge
pushf
inc
cmp
and
adc
push
call
and
es
cmp
inc
imul
mov
jmp
mov
inc
mov
mov
sbb
inc
dec
adc
jo
movs
int
je
and
outs
mov
mov
jae
outs
test
je
sbb
retf
test
test
xor
jne
dec
sbb
fsubr
out
jmp
mov
pusha
(bad)
mov
jecxz
shr
mov
inc
adc
fild
xchg
(bad)
fisubr
inc
inc
and
lods
es
pop
cs
mov
inc
add
jmp
push
into
mov
(bad)
cmp
dec
jl
pop
inc
shr
ret
fnclex
icebp
retf
shl
add
inc
xchg
dec
je
and
fst
and
or
mov
ins
cmp
mov
sbb
pop
mov
ja
add
xor
adc
leave
ins
or
push
int3
leave
xor
mov
cmp
mov
sbb
hlt
lock
xor
cld
mov
(bad)
loop
adc
jne
retf
(bad)
scas
mov
push
stc
mov
mov
fsubr
cmp
xor
pop
cmp
out
lea
mov
xor
pop
aas
sub
xor
(bad)
push
push
inc
dec
pop
mov
aam
mov
ins
add
mov
add
xchg
ja
cmp
inc
fimul
shl
xor
ins
or
icebp
inc
add
rcl
sbb
clc
inc
stos
or
int
addr16
cmp
sar
or
int3
mov
and
or
mov
jmp
lock
push
jae
es
rcr
or
dec
vpavgb
inc
mov
push
mov
fnsave
les
aas
test
lea
and
cdq
bound
add
ins
mov
jmp
inc
cmps
or
add
pop
in
cmc
outs
mov
and
mov
jbe
xchg
js
push
cmp
out
inc
jno
(bad)
jb
push
push
in
out
xchg
jo
mov
call
sub
pop
loop
xchg
mov
cdq
fmulp
pop
div
outs
jge
mov
pop
arpl
dec
push
add
pop
push
sti
add
jg
pusha
pop
add
int
jbe
add
imul
xchg
add
xchg
cmp
mov
or
fstp
push
clc
test
mov
jns
out
fidiv
pop
mov
inc
je
add
jne
hlt
xchg
adc
pop
adc
mov
and
mov
test
and
add
add
or
rcr
sub
push
or
xor
mov
(bad)
or
retf
mov
mov
inc
sbb
mov
inc
push
jnp
push
add
test
mov
jmp
mov
and
push
aaa
or
pop
cmc
push
pusha
add
fnstsw
push
inc
jle
xchg
ins
push
ds
fwait
xor
mov
inc
inc
add
dec
add
or
jp
(bad)
pop
es
pop
inc
sbb
add
mov
push
sub
lock
mov
mov
sbb
sar
mov
cld
lea
cmps
gs
stc
sub
dec
out
mov
xor
push
pop
test
or
mov
fist
lock
jbe
mov
(bad)
jmp
pop
imul
inc
adc
mov
test
sbb
xor
cmp
dec
or
dec
pop
jmp
repz
ins
addr16
or
loopne
or
xor
pop
mov
push
fs
mov
sub
xor
push
fwait
outs
mov
or
pop
mov
pop
add
dec
test
cmp
inc
cmps
test
cmp
adc
or
sub
jmp
mov
push
inc
adc
push
push
lea
and
addr16
push
jae
sbb
sahf
jmp
loopne
add
xor
push
sbb
add
movs
jae
js
cmp
daa
stos
cmp
mov
lea
(bad)
shr
lock
dec
xor
loope
(bad)
stos
mov
add
neg
popa
mov
jecxz
ins
popa
fist
popa
je
test
das
mov
fcom
fldenv
inc
jo
sbb
add
mov
and
cmps
or
in
mov
xor
jge
sbb
ins
jb
pop
je
cmp
mov
adc
and
sbb
add
idiv
mov
add
sar
mov
aas
add
pop
dec
xor
stc
inc
daa
movs
not
(bad)
into
jnp
sbb
add
sbb
daa
cmp
cmps
xchg
sbb
mov
cdq
pusha
add
movs
enter
loope
mov
les
inc
ins
cmps
dec
and
fcomp
jb
xchg
push
and
xor
icebp
fwait
in
rcr
sub
push
mov
adc
cmp
int3
repz
sbb
sub
cmps
(bad)
les
xor
pop
xchg
loope
stos
shl
mov
sub
or
sbb
mov
sub
cmp
push
xor
push
hlt
mov
dec
push
int3
clc
and
jle
jmp
adc
jnp
push
test
lea
retf
add
outs
cdq
lods
mov
movs
pop
sub
inc
icebp
add
cmove
jecxz
mov
sbb
nop
mov
outs
sub
icebp
call
xor
push
jmp
xor
cmp
push
fs
sub
mov
dec
sub
mov
int3
or
mov
and
rol
cmp
not
nop
fcmovnbe
popf
mov
add
push
(bad)
or
test
sub
inc
mov
xor
sar
ficomp
push
sti
xchg
pop
xchg
movzx
ret
imul
mov
mov
sub
fmul
jg
adc
mov
cmp
test
adc
add
and
push
(bad)
sub
mov
(bad)
cmp
jg
loop
cmp
imul
push
mov
and
push
sysenter
or
sbb
cmp
jecxz
aas
ins
mov
pop
test
imul
std
leave
retf
fsubr
or
jbe
push
xor
cmp
pop
inc
inc
inc
xor
icebp
inc
mov
cli
or
xchg
pop
fld
or
add
dec
push
sahf
xchg
aad
sub
ret
sub
mov
inc
add
mov
mov
ret
sub
cmp
loop
call
add
and
mov
pop
clc
mov
stos
adc
fisubr
pop
cmp
addr16
jo
mov
ins
neg
mov
push
add
adc
push
adc
cmp
mov
leave
sub
add
inc
xchg
sub
jne
push
in
jge
lea
fcom
stc
xlat
mov
and
mov
or
ins
div
into
outs
aam
int3
test
fsub
push
imul
mov
nop
lock
push
imul
rcl
sbb
jmp
ret
and
loope
add
cmp
mov
(bad)
rol
mov
cmp
jmp
and
mov
xor
adc
or
cwde
xor
push
push
fiadd
lahf
jmp
aas
mov
push
mov
fst
adc
pop
fsubr
cmp
cmp
ins
push
inc
sub
xor
sbb
mov
popa
dec
and
outs
sahf
mov
jmp
cmp
enter
out
add
sbb
push
or
or
cmp
adc
mov
jno
and
shl
dec
mov
inc
fsubr
xchg
sbb
clc
retf
gs
xchg
test
pop
inc
xor
add
fld
cmc
sub
sbb
in
jmp
leave
mov
pop
iret
dec
in
xchg
add
mov
mov
or
enter
cmp
dec
or
mov
add
inc
adc
adc
fimul
jae
and
add
inc
inc
add
test
or
out
inc
push
ret
fidivr
adc
loop
or
test
test
inc
push
inc
mov
and
add
movs
push
adc
jg
and
add
mov
je
mov
cmp
add
xor
jns
mov
cmc
mov
inc
add
outs
sbb
push
push
mov
add
mov
jle
add
or
loope
or
fidivr
lea
stos
add
(bad)
out
sub
into
mov
sub
xchg
in
adc
dec
sub
sbb
test
jae
cli
ror
sub
aaa
fs
sub
sub
scas
inc
dec
hlt
adc
sub
test
and
xor
mov
shl
iret
ja
loop
sbb
sbb
mov
push
mov
ret
(bad)
pop
addr16
ret
jbe
jo
outs
push
jnp
cmp
sbb
push
nop
jae
adc
arpl
inc
and
icebp
and
loopne
sbb
mov
mov
and
icebp
dec
adc
adc
je
mov
fcomp
push
xor
pop
mov
jmp
jmp
inc
mov
leave
sub
sbb
sahf
push
push
add
lea
jbe
ja
fs
jns
lea
lea
jmp
cli
push
or
cld
push
pusha
popa
loopne
jmp
daa
inc
cmp
jb
inc
mov
lock
test
je
clc
mov
aaa
cs
cmp
pop
mov
push
xchg
cmp
sub
push
mov
mov
fdivr
xor
repnz
sbb
and
xchg
sar
mov
inc
push
jne
mov
xchg
push
in
push
mov
cmp
outs
push
cdq
mov
cmp
fwait
mov
mov
cld
je
call
xchg
mov
xor
jne
sbb
push
cld
cli
inc
add
add
gs
les
mov
push
xor
(bad)
jnp
pop
or
movs
push
shr
ss
jge
xchg
loope
aam
mov
outs
dec
shl
fsubr
ins
je
jae
jecxz
lds
out
jle
shl
lock
and
stos
mov
inc
or
push
lahf
mov
jnp
sub
pop
leave
cmp
mov
lahf
mov
cmp
inc
in
jnp
jae
cmp
pop
add
out
push
shl
add
test
or
mov
rcl
inc
sub
mov
cmp
leave
xor
xor
ret
mov
sub
loopne
push
inc
js
loopne
sbb
inc
or
push
ret
dec
add
clc
jbe
mov
fisttp
mov
out
fstp
jge
add
jb
mov
fwait
mov
ret
and
push
mov
mov
mov
add
fcomp
mov
mov
out
sub
add
icebp
in
and
mov
hlt
mov
or
jbe
pop
jle
(bad)
mov
cmp
mov
inc
dec
jne
mov
pop
push
mov
jmp
pop
shl
xor
fild
xchg
(bad)
cld
adc
loopne
(bad)
or
fdiv
mov
repz
xor
sub
jno
push
and
sbb
mov
inc
xchg
sub
cli
fdivr
sti
rep
and
sub
mov
pop
or
lods
adc
pusha
cmp
lds
and
cmp
jmp
call
jo
jmp
popf
add
adc
inc
add
push
js
sub
dec
jge
dec
jae
imul
inc
imul
mov
inc
sbb
mov
enter
retf
out
aad
mov
popa
sbb
shl
mov
movs
push
movs
in
lea
test
cmps
jmp
into
jmp
mov
xor
mov
push
lds
add
loopne
add
adc
adc
pop
movs
call
add
icebp
call
xchg
push
xor
xchg
push
or
in
dec
push
in
ror
fwait
test
add
mov
mov
pop
and
int3
popa
movnti
or
loope
rol
add
rcl
and
ins
mov
hlt
xchg
xchg
sub
cmp
mov
scas
mov
mov
call
sbb
or
in
js
(bad)
push
and
inc
or
call
rol
mov
or
and
int3
cmp
mov
ror
dec
rcr
call
cmp
mov
xchg
retf
jne
lods
pop
call
test
mov
pop
stc
mov
outs
fld
push
add
(bad)
mov
and
mov
adc
sar
je
pop
xor
div
es
shl
sbb
les
xadd
push
mov
jo
add
cmp
sbb
sbb
xor
inc
and
and
push
jo
test
add
add
sub
or
jo
jp
sub
mov
into
movs
jl
and
(bad)
mov
sbb
mov
push
out
jmp
jb
lods
and
test
daa
cmp
push
jbe
sbb
pop
pushf
mov
cmp
pop
int
dec
ret
xor
cwde
mov
movs
jbe
mov
xchg
or
adc
xchg
(bad)
jae
xchg
sub
inc
or
dec
rol
dec
pop
dec
and
test
jecxz
mov
shr
adc
sub
aaa
aaa
pop
cdq
or
mov
or
ret
test
shr
icebp
cld
cmp
test
jae
push
lock
pop
sub
je
jmp
sbb
sub
(bad)
std
cld
dec
bound
sbb
adc
repz
sti
jbe
fwait
sub
mov
mov
ror
or
sub
lods
dec
cmp
push
pop
inc
add
bound
sub
sub
cmp
ret
data16
dec
push
ss
je
add
push
fisttp
push
jb
xchg
ja
sub
mov
dec
pop
pop
mov
es
nop
xchg
test
int
inc
mov
test
or
pop
adc
and
imul
mov
or
mov
jo
add
adc
movzx
sub
sar
add
mov
push
cmp
sbb
xchg
jge
xor
test
das
add
adc
jo
js
jno
sub
mov
push
shr
or
add
xor
add
sbb
cmp
mov
daa
sahf
int3
adc
adc
fmul
and
push
ret
or
gs
pop
add
jmp
scas
adc
and
jns
or
sub
sbb
jbe
dec
sub
sbb
adc
or
bound
mov
fisub
test
addr16
int3
stos
(bad)
pop
push
aas
push
fmul
imul
lock
cmp
sub
cmp
call
xor
(bad)
pop
or
xchg
pop
sbb
jmp
mov
add
push
adc
and
jmp
pop
jmp
pusha
pop
ret
cmc
cmps
addr16
add
idiv
cmc
dec
mov
xchg
lea
int
adc
push
loop
xor
sbb
adc
add
shl
mov
icebp
dec
push
shl
sbb
mov
sub
sub
or
(bad)
sub
inc
test
jo
fsubr
pop
mov
gs
inc
ret
add
out
inc
add
fcom
xor
sub
and
pusha
inc
adc
in
popa
adc
mov
lea
cmp
je
(bad)
ficomp
jmp
push
and
xchg
push
ret
mov
sub
xchg
mov
pop
cli
clc
push
sub
or
sub
fxch
push
mov
(bad)
fld
es
pop
ror
add
ss
cmps
sbb
xchg
or
sbb
inc
js
push
data16
jae
sbb
adc
jle
xor
repz
mov
jl
lods
add
mov
and
and
mov
nop
icebp
imul
add
inc
cmp
jb
xchg
or
inc
jl
rcr
push
add
push
and
or
xor
cli
lods
adc
inc
xchg
jg
dec
pop
dec
push
mov
dec
add
aad
adc
or
mov
out
xor
sbb
mov
lds
push
inc
dec
mov
push
lock
push
dec
sub
cld
call
pop
and
pop
sub
cld
cmp
stc
ds
push
mov
jmp
pop
sbb
repz
xor
mov
mov
or
loopne
sti
adc
jne
dec
push
or
ficomp
(bad)
cld
int3
or
push
push
push
rcr
out
jg
dec
pusha
mov
mov
pop
jne
or
fild
fsub
adc
mov
fmul
push
mov
sbb
jge
aam
jle
fcom
push
pop
mov
inc
fsubr
(bad)
pop
ret
push
retf
inc
pop
test
das
pop
add
loopne
jmp
dec
mov
mov
push
mov
fcomp
xchg
jmp
jecxz
ret
rcr
inc
add
xor
(bad)
iret
stos
and
push
cmp
mov
pop
inc
inc
cmp
mov
cmp
out
push
popa
call
xor
sete
mov
inc
pop
fsub
and
xor
mov
mov
syscall
jno
xor
push
fstp
sbb
pop
dec
fstp
jb
pop
ret
add
outs
adc
inc
push
out
call
outs
(bad)
sbb
xchg
mov
retf
sbb
movs
inc
or
push
or
je
or
or
call
xchg
sub
or
call
iret
xchg
inc
and
call
inc
inc
push
add
adc
sbb
adc
mov
cmp
add
loopne
stos
xchg
push
sbb
mov
in
add
or
xor
je
or
in
loopne
out
add
sbb
adc
push
add
(bad)
add
std
mov
mov
mov
enter
int3
test
mov
fdiv
adc
ins
push
inc
mov
xchg
adc
mov
xchg
sti
jge
repz
cmp
cmc
xor
mov
icebp
sub
sub
add
push
jg
adc
scas
add
or
jle
jmp
fbstp
pop
sahf
out
ins
lods
and
in
in
cmp
ror
(bad)
lds
dec
adc
enter
mov
and
push
pop
pop
jo
sbb
ds
jne
mov
mov
call
xchg
add
pop
inc
test
dec
neg
mov
ins
cmp
inc
mov
aad
data16
pop
mov
add
add
adc
jb
mov
ret
mov
test
sub
jmp
in
push
or
(bad)
fbld
fcmovu
movs
push
adc
push
or
adc
shr
jl
sbb
xor
movs
add
les
push
cmp
repnz
mov
daa
jmp
add
mov
push
sbb
leave
mov
jmp
(bad)
fadd
mov
leave
push
std
test
test
adc
add
mov
test
fs
pop
mov
mov
and
ror
pop
xor
xor
pop
mov
shl
data16
movs
dec
aam
mov
and
add
mov
mov
adc
inc
out
adc
push
push
pop
or
movs
sub
shl
lea
inc
sbb
inc
inc
ja
cwde
rol
addps
jne
sbb
jge
or
push
mov
dec
test
mov
mov
adc
mov
mov
push
xchg
sub
mov
clc
stc
add
jecxz
adc
xchg
push
sub
cmp
inc
clc
mov
push
and
(bad)
mov
lock
jbe
and
push
addr16
lock
ret
std
call
or
add
push
xor
mov
add
add
rcr
push
jo
xchg
inc
jae
fisttp
mov
cmp
lods
jge
test
or
add
test
sub
aaa
push
loope
mov
adc
adc
xor
jb
sub
and
push
sub
mov
outs
inc
mov
mov
sbb
and
adc
xor
or
je
mov
mov
adc
sub
add
push
push
pop
xchg
xchg
pop
or
test
aaa
mov
pop
mov
std
mov
jmp
and
call
sbb
push
test
or
(bad)
xchg
jp
sbb
ret
movs
das
sub
add
inc
inc
push
sbb
sub
pop
ins
adc
ja
adc
or
repnz
or
aam
pop
jne
xor
and
sub
pop
mov
ret
push
(bad)
call
dec
mov
test
das
cmpps
je
mov
cmp
test
sub
inc
adc
cmps
pop
inc
jmp
nop
loopne
mov
test
mov
mov
or
test
dec
sbb
rcl
adc
sbb
rcl
pop
inc
out
inc
xor
adc
sbb
movs
sub
mov
repz
lods
push
ja
cmp
fwait
or
bnd
outs
movs
fidiv
(bad)
jbe
pop
mov
adc
cmp
inc
pop
mov
cmp
fld
or
jmp
fs
jo
inc
and
cli
jne
daa
inc
sbb
and
imul
adc
addr16
repnz
push
and
ja
pop
ins
(bad)
mov
adc
push
and
sbb
sub
push
icebp
lahf
jmp
into
jno
pop
test
jmp
push
xor
leave
xor
out
push
rol
dec
movs
sub
out
retf
fs
push
push
pop
mov
jecxz
cwde
dec
mov
adc
fsubp
xlat
lock
xor
aaa
cwde
push
inc
test
adc
mov
cmp
nop
add
inc
or
mov
sbb
outs
daa
sbb
mov
dec
add
das
inc
sbb
pop
fucom
mov
cmp
movs
clc
pop
add
ror
sbb
xlat
ds
js
and
pop
cmp
sub
les
jb
mov
cmp
or
lds
cmp
and
push
loope
adc
add
jo
push
test
pop
xchg
ss
and
add
and
wbinvd
mov
test
inc
out
xor
pop
add
jl
shl
push
cli
jmp
in
add
or
dec
rcl
push
adc
push
add
sbb
adc
mov
and
sub
fs
imul
cmp
and
cmp
jl
cmp
push
jae
mov
inc
ds
pop
add
cs
add
(bad)
push
pop
cmp
sub
out
dec
ss
std
push
push
jmp
add
jmp
test
aaa
pop
rol
adc
sbb
ds
cmp
mov
sub
aad
xchg
add
clc
mov
mov
int
or
cmp
mov
rcr
aad
or
inc
push
pop
lea
xchg
pusha
xor
inc
imul
cmp
lea
lea
inc
add
adc
jle
add
and
xchg
xchg
add
add
mov
add
push
cmc
pop
fisubr
or
mov
push
rol
mov
test
cmp
push
je
sbb
pop
leave
xor
test
cwde
adc
push
pusha
inc
cmps
jo
jnp
adc
jmp
cwde
adc
test
jg
sub
fist
xchg
mov
mov
rol
xchg
cmp
stc
add
(bad)
jl
mov
mov
ret
push
push
push
enter
shl
jge
adc
xor
cmp
jg
call
fcmovnb
xchg
adc
jl
sbb
xor
aaa
push
xchg
imul
into
pop
adc
and
mov
cmp
popf
scas
ror
out
(bad)
stc
es
sub
inc
cs
enter
outs
jno
and
les
mov
sub
push
add
ret
sub
scas
xor
sub
nop
xor
add
add
dec
push
sbb
pop
sub
cmp
scas
nop
jne
or
mov
outs
jmp
cmp
jge
inc
sub
outs
clc
int3
push
mov
and
or
aad
and
ins
in
push
inc
sbb
clc
loopne
mov
(bad)
and
push
cmp
fdiv
cmp
xor
add
inc
push
jg
div
xor
ss
add
mov
rcr
fcomp
cmc
movs
mov
push
lea
or
push
sub
and
jecxz
hlt
sub
lahf
sub
ins
out
sbb
push
push
outs
test
mov
test
adc
jbe
neg
cmp
jg
mov
push
cli
mov
sub
repz
std
sbb
cmp
ja
mov
push
cmp
(bad)
or
sbb
sub
sub
(bad)
clc
lock
mov
and
out
jae
mov
xchg
push
(bad)
adc
inc
pusha
sar
inc
int3
aaa
or
lea
retf
add
xchg
push
dec
leave
mov
cdq
mov
sub
dec
push
loopne
pop
inc
loopne
ja
add
test
mov
inc
sub
add
and
adc
in
pop
xor
sbb
test
aas
lods
jg
cmp
inc
jg
xor
push
mov
push
pop
out
test
leave
add
fnsave
push
inc
aaa
xor
add
and
and
sub
test
xchg
movs
sbb
outs
dec
push
inc
arpl
nop
inc
mov
cmp
or
push
sbb
sbb
sbb
push
and
and
fs
inc
push
sub
xor
inc
push
sbb
cmp
push
fxch
fs
adc
pop
push
sbb
dec
push
push
sbb
pop
sbb
inc
push
fs
sbb
js
add
test
or
and
leave
and
test
xchg
dec
sahf
mov
cs
jb
gs
mov
and
call
in
aam
xchg
pop
jb
hlt
clc
cld
add
fs
add
mov
or
adc
adc
xchg
dec
sbb
xchg
dec
cs
cs
cs
mov
dec
cs
push
push
mov
pop
pusha
cli
add
je
mov
or
add
fs
(bad)
es
mov
dec
inc
push
fs
xor
jbe
cmp
and
sub
xor
and
xchg
adc
cwde
xor
and
adc
sbb
and
xor
xor
and
xor
cmp
xor
arpl
std
les
and
xor
inc
int3
and
xor
dec
ror
test
push
push
scas
sbb
cmp
jae
das
fadd
dec
push
bound
inc
ins
push
loopne
dec
(bad)
loopne
repnz
sub
adc
xor
inc
jne
sub
mov
shl
adc
push
bound
cmp
enter
shl
lods
and
jmp
add
arpl
nop
mov
push
xchg
or
jbe
psrlq
and
add
pop
add
aad
cmp
pxor
push
retf
push
sar
loop
shr
je
stc
jbe
dec
xchg
pop
jg
add
add
clc
jns
out
inc
push
pusha
jo
mov
sbb
dec
jne
sub
inc
inc
mov
je
ror
(bad)
pop
cmova
aam
inc
das
fwait
shr
mov
dec
das
inc
cmp
cli
pop
pop
fdiv
fcomi
push
sub
push
mov
xor
jl
mov
shr
add
lea
pop
inc
mov
mov
das
sti
jle
ins
pop
jg
fs
or
pop
div
in
adc
push
call
popa
retf
movs
iret
stc
jo
sar
ror
jbe
outs
and
leave
sbb
mov
mov
and
pop
lock
pop
fs
mov
adc
add
jb
repz
or
(bad)
mov
std
sub
jb
test
outs
call
lea
pop
call
mov
fwait
mov
and
inc
pop
fstp
inc
add
(bad)
int3
nop
fs
(bad)
pop
int3
push
cmp
xor
cmps
mov
addr16
nop
and
scas
sbb
mov
push
add
outs
call
adc
inc
mov
cmps
stc
in
inc
(bad)
in
call
call
cmp
cld
cld
or
adc
clc
or
cmps
jmp
in
pop
xchg
les
or
and
pop
ins
adc
xor
sub
cmp
or
std
jecxz
ja
cld
and
imul
lds
popa
imul
add
ins
add
in
fstp
push
out
add
add
fwait
and
je
add
and
and
sub
pop
lea
add
call
ror
imul
repz
sbb
cmps
imul
imul
and
pushf
cld
popf
or
adc
and
(bad)
mov
push
ret
mov
xchg
mov
mov
inc
jl
or
pop
or
loopne
outs
inc
bts
jmp
int
mov
neg
mov
mov
jae
mov
and
sbb
mov
fisttp
dec
test
psllw
and
sub
adc
or
das
inc
test
or
mov
mov
inc
and
inc
jmp
cmp
sahf
mov
inc
movs
or
xchg
mov
sti
pop
adc
fs
add
js
and
sbb
mov
retf
popf
in
and
or
aam
inc
mov
std
pop
cmp
and
inc
lahf
xchg
test
rcl
cmp
pop
pop
enter
adc
mov
mov
dec
loopne
xchg
mov
nop
sub
daa
mov
mov
(bad)
pusha
or
dec
or
das
lahf
sahf
(bad)
cmp
inc
fst
out
add
(bad)
int
loope
mov
sbb
sub
push
xor
dec
cld
(bad)
and
push
add
push
inc
mov
jo
popa
xor
lahf
nop
call
pop
push
lea
inc
out
add
mov
cmp
sub
push
cmp
mov
cmc
and
mov
mov
mov
pop
inc
mov
es
(bad)
and
add
sub
jnp
mov
cmp
scas
shr
push
or
push
or
mov
das
sub
imul
icebp
imul
push
pop
xchg
pop
pop
inc
call
ret
sub
fadd
add
iret
and
mov
rcr
sbb
test
mov
sub
or
cdq
stos
dec
sbb
or
pop
jmp
xchg
adc
div
sbb
push
xor
sti
mov
in
jbe
outs
push
add
add
and
aaa
iret
shl
dec
push
pop
outs
inc
mov
outs
push
jbe
jle
lea
xchg
out
outs
ja
mov
xor
cmp
popf
dec
xchg
xor
cdq
pop
outs
xor
pusha
lea
lea
and
lds
rol
add
mov
sbb
dec
jne
cvtps2pd
mov
lods
fild
maskmovq
neg
dec
mov
fwait
cmp
sub
push
shl
push
mov
gs
sti
inc
dec
dec
mov
push
pop
push
push
and
push
mov
retf
int
test
jne
test
jnp
sub
sub
imul
sbb
and
mov
add
push
popf
xor
(bad)
call
stos
push
scas
push
add
repnz
lea
cmp
cli
loope
dec
(bad)
add
mov
push
popf
add
test
je
fidiv
add
and
xor
jbe
cmp
mov
inc
inc
and
push
in
or
dec
aaa
jge
icebp
paddd
inc
mov
mov
aaa
es
mov
je
and
cmp
jb
cmp
ja
add
cmp
push
sbb
or
(bad)
cmp
mov
xor
or
mov
xor
pop
inc
pop
out
cmp
and
or
jne
push
mov
mov
add
dec
pop
outs
xchg
add
pop
push
add
lahf
enter
pop
gs
scas
dec
in
push
(bad)
jne
popa
and
ins
mov
arpl
imul
sub
or
add
cmp
sub
and
jg
pop
fiadd
adc
add
add
add
add
adc
jmp
and
push
pop
pop
or
aaa
xor
push
push
pop
and
aaa
out
fisub
or
or
pusha
add
js
js
into
mov
pop
add
add
mov
inc
outs
jb
js
je
jb
jae
(bad)
add
mov
outs
add
add
add
mov
popf
je
imul
(bad)
lock
add
and
push
add
out
add
and
adc
dec
add
add
add
and
inc
push
add
add
fucom
ds
add
xchg
gs
int
jo
pcmpeqb
and
xor
dec
push
dec
shl
mov
ins
sub
jae
popa
add
jae
(bad)
jmp
adc
jne
xchg
iret
jne
imul
dec
idiv
sbb
ins
jp
lods
jmp
daa
pop
outs
lahf
push
pop
daa
jmp
pop
arpl
bound
sti
sahf
pop
pop
and
jne
jo
push
in
add
sbb
mov
ins
adc
mov
out
mov
fincstp
fdiv
dec
and
mov
cdq
test
popa
jns
sub
mov
sbb
jge
dec
jb
add
cmp
dec
popa
sub
mul
(bad)
cmp
loope
arpl
inc
xchg
dec
cmp
adc
out
xor
jmp
ret
sti
int
or
cmp
fistp
outs
in
sub
sbb
test
xchg
xor
mov
outs
inc
inc
push
xchg
mov
sbb
enter
lahf
cs
(bad)
ss
ftst
xor
fst
fs
xor
cmp
popa
movs
xchg
popa
adc
mov
dec
dec
outs
mov
and
rol
xor
movs
outs
xor
jo
push
jbe
jb
sub
cmp
cmp
pop
not
js
das
mov
pop
fst
push
mov
dec
fdiv
cmp
outs
ins
jg
adc
xchg
iret
outs
pop
add
in
arpl
lea
add
xchg
ins
mov
inc
aaa
lahf
sti
xor
push
mov
add
das
and
imul
inc
push
xchg
sar
sub
dec
or
les
(bad)
pop
sub
lahf
and
daa
push
xor
and
mov
push
cmp
(bad)
and
push
add
mov
push
xor
sbb
jnp
xor
ud2
ins
mov
ret
rcr
test
(bad)
mov
add
pop
mov
xchg
or
adc
mov
sahf
cmp
adc
adc
in
jo
add
mov
sbb
enter
mov
sbb
push
inc
pop
inc
push
jns
mov
and
and
repnz
xchg
jns
jp
cld
mov
jp
dec
sbb
pop
adc
push
sti
adc
stc
sub
sub
dec
cmp
ins
gs
mov
sar
aaa
pop
addr16
ins
jnp
dec
imul
scas
sbb
ds
inc
xor
arpl
dec
cmp
dec
and
test
(bad)
jne
ja
or
ins
jae
jb
gs
inc
(bad)
ss
push
gs
into
jne
inc
xchg
addr16
push
or
mov
outs
imul
outs
and
outs
jo
or
sbb
rol
nop
stos
add
dec
xor
movntps
enter
or
ror
or
(bad)
nop
xchg
push
enter
xchg
mov
fst
nop
dec
mov
or
call
add
cmp
aas
jae
add
cmp
jns
je
xchg
mov
pop
das
das
adc
push
adc
nop
iret
pop
inc
inc
cmc
(bad)
lock
dec
mov
adc
imul
pop
xchg
push
in
test
and
fcom
je
dec
inc
ja
adc
dec
addr16
xchg
icebp
push
bt
fsincos
jo
mov
fdiv
mov
ins
pop
xchg
jns
ja
outs
fdiv
neg
daa
jno
xor
lods
lsl
sbb
adc
pop
neg
loope
daa
jne
mov
aaa
xor
popa
ret
pop
enter
ss
fdiv
data16
and
ins
ins
cmp
(bad)
jge
int
sub
dec
and
jns
add
data16
retf
das
das
or
dec
add
(bad)
lock
ins
bound
dec
outs
jbe
jg
jmp
outs
or
adc
jne
jne
inc
idiv
xor
pop
outs
enter
ds
jo
imul
bound
jnp
cmp
outs
or
push
xlat
mov
inc
inc
aaa
jns
fsubr
mov
popa
je
jb
sbb
mov
dec
pop
or
jae
je
mov
push
gs
push
jne
dec
jnp
jbe
icebp
adc
pop
inc
cmp
clc
mov
and
add
add
(bad)
xchg
inc
add
or
xor
daa
cmp
mov
pop
cld
push
push
mov
sub
outs
sbb
pop
cmp
(bad)
push
xlat
rol
add
test
push
add
push
imul
pop
push
jae
dec
bound
test
push
outs
jb
sbb
dec
popa
pop
pop
in
pop
mov
sbb
push
outs
jo
jo
(bad)
mov
push
popa
addr16
outs
js
push
adc
imul
ins
adc
mov
inc
xor
cmp
aas
inc
clc
mov
push
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
fbld
cdq
pop
pop
pop
pop
test
(bad)
call
pop
pusha
popa
bound
gs
imul
jno
cmps
cmp
test
ja
jns
jnp
jge
jg
sub
sbb
es
xchg
and
and
xchg
pop
dec
add
test
nop
or
adc
add
sbb
sbb
cmp
xchg
dec
adc
push
add
add
xchg
dec
sbb
add
add
ret
inc
cmp
dec
int3
aaa
sub
adc
xchg
or
das
xchg
(bad)
rol
aaa
xor
enter
arpl
inc
mov
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cwde
cdq
call
mov
(bad)
jmp
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
(bad)
(bad)
inc
(bad)
enter
int3
int
iret
rcl
rcl
aam
(bad)
xlat
fcomp
fcmovu
(bad)
(bad)
loopne
loop
lock
(bad)
jmp
in
out
jmp
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
(bad)
jmp
add
gs
stos
sub
push
adc
mov
jg
adc
sub
jg
lds
ins
jo
enter
jo
mov
and
daa
test
ins
bnd
dec
imul
cmp
and
arpl
pusha
push
add
inc
gs
jb
mov
push
jbe
daa
adc
and
push
inc
test
push
jns
gs
pusha
test
paddusw
ins
and
arpl
je
jb
and
lods
mov
pusha
jle
fucomi
fsub
pcmpeqd
add
mov
lods
outs
sub
adc
cdq
enter
dec
pusha
and
jg
fld
fs
ins
xchg
push
push
xchg
pcmpgtw
and
fnstenv
and
ds
push
(bad)
and
imul
and
fwait
(bad)
rcl
inc
setae
push
push
fmul
daa
dec
clc
popa
push
outs
fiadd
pop
pop
sub
sub
jne
push
pop
sbb
pusha
ss
(bad)
and
outs
retf
cmovno
test
or
jbe
fcomp
test
and
mov
push
dec
jnp
dec
add
jns
fistp
push
sbb
inc
outs
hlt
sbb
adc
ds
xlat
push
fs
imul
jo
imul
popa
xor
xor
sub
xchg
jb
dec
aas
test
faddp
lock
jne
je
ins
ss
aas
mov
es
or
lods
pop
je
outs
inc
or
test
adc
popf
in
or
add
imul
or
add
scas
sub
jl
pop
xor
jle
cmp
sub
loope
int
fidivr
add
add
sub
or
add
xchg
xor
cmps
int3
mov
cmps
and
hlt
das
inc
xor
retf
daa
pop
pop
jne
sub
fst
loope
push
or
imul
jo
ss
fisubr
push
jb
xor
nop
jg
je
imul
out
jo
push
arpl
out
cmp
adc
ror
shl
loopne
enter
dec
sar
into
push
pop
ret
add
xor
mov
dec
shl
fs
pop
pop
shl
dec
inc
dec
shl
xor
dec
shl
and
sbb
shl
or
imul
cmps
imul
cmps
imul
in
enter
dec
shl
or
call
shl
je
and
cld
ror
xor
shl
cmps
jnp
retf
retf
enter
fld
js
mov
lock
fldenv
cdq
mov
mov
mov
pop
jnp
int
loope
or
adc
mov
mov
lahf
jg
mov
int
(bad)
adc
iret
mov
pop
rol
shr
mov
mov
fistp
call
inc
imul
in
ds
test
(bad)
mov
leave
mov
imul
scas
sbb
mov
sti
jg
retf
mov
mov
movs
xchg
shl
jbe
pop
daa
ret
shl
outs
das
loopne
enter
mov
xlat
mov
lahf
mov
adc
ret
in
jp
iret
mov
test
fcmovb
xor
sbb
mov
loopne
adc
jecxz
fld
or
pop
fstp
ret
vcmpps
adc
outs
adc
das
int3
test
in
cmp
jge
jbe
fmul
fisttp
sub
or
mov
mov
mov
adc
fisttp
sub
mov
mov
mov
mov
(bad)
or
xlat
jmp
mov
adc
and
pop
sub
dec
shl
mov
ret
div
or
mov
mov
mov
xor
popa
ins
movs
jg
mov
in
fcmovne
enter
or
lahf
ret
lods
mov
stc
fistp
enter
aaa
mov
stos
addr16
sub
ret
test
outs
sti
rcl
cmps
mov
daa
mov
iret
mov
jmp
enter
aam
stos
sub
(bad)
aas
mov
jnp
sub
cmp
mov
loop
or
mov
ins
outs
int3
or
mov
scas
or
pop
lods
shl
addr16
cli
stc
mov
outs
mov
fild
iret
into
into
enter
sub
xchg
div
xchg
ret
jecxz
aas
shl
(bad)
in
mov
cli
retf
jg
mov
retf
mov
jecxz
mov
xor
xchg
inc
jp
inc
and
(bad)
mov
sub
shl
pop
sti
cld
(bad)
iret
int3
shl
repnz
mov
loopne
pop
leave
mov
fidivr
rcr
xchg
fwait
(bad)
(bad)
data16
pop
arpl
lods
aam
dec
fistp
jmp
sbb
mov
dec
xchg
stc
int
(bad)
out
xlat
mov
or
mov
pop
adc
push
or
pop
clc
pop
cli
push
in
int
adc
lods
dec
out
fdiv
bts
imul
imul
scas
xor
pop
adc
lock
div
push
mov
pop
mov
fbld
lock
out
and
xchg
gs
div
mov
pop
mov
daa
dec
xor
fisubr
adc
add
mov
pop
dec
mov
push
or
mov
addr16
aaa
push
sti
mov
iret
retf
(bad)
stos
cmp
shl
adc
adc
jns
or
dec
outs
or
inc
push
push
in
lods
in
and
jns
fidiv
aaa
cs
leave
or
neg
dec
inc
push
inc
push
add
mov
inc
pop
push
inc
push
dec
push
sub
dec
pop
push
jns
add
xchg
xor
xchg
ins
fcmovnb
faddp
ss
test
dec
sub
add
ret
fstp
xor
sub
xor
out
pop
bnd
rsqrtps
aaa
ror
test
xor
cmp
dec
mov
scas
in
mov
jnp
pop
in
xlat
pushf
bound
xor
add
and
jo
pop
pop
mov
iret
dec
push
pop
dec
pop
inc
or
push
mov
cmp
dec
inc
dec
or
inc
pop
popa
xchg
daa
stc
dec
push
push
inc
dec
push
inc
cs
inc
or
or
cmp
jp
imul
ucomiss
mov
popa
add
adc
or
mov
jne
jns
jecxz
push
dec
lock
jo
dec
out
dec
push
inc
push
jmp
mov
test
(bad)
sub
test
call
pop
ret
jae
arpl
mov
pop
jnp
mov
pop
in
(bad)
out
pop
jae
sbb
fs
loopne
jns
jo
bound
je
or
pushf
sbb
add
aam
ja
jmp
pop
enter
pushf
sbb
lock
cmp
test
sub
hlt
push
das
pop
mov
pop
xor
push
fimul
jae
outs
fld
xor
loopne
pop
cdq
inc
sub
scas
in
xchg
popf
iret
std
pop
aam
add
ret
lods
leave
adc
fidivr
add
aaa
jg
das
mov
mov
lods
rcr
pop
inc
outs
xor
add
leave
ror
fcom
mov
popf
daa
mov
push
or
dec
leave
popa
xchg
dec
pop
int3
gs
cmps
in
shr
pop
fs
mov
jo
pop
je
aas
and
jle
das
mov
ja
jnp
and
test
mov
pop
fisttp
mul
jns
out
enter
(bad)
cmps
lahf
lahf
pop
test
stos
pop
mov
xchg
stos
shl
rol
cs
inc
push
mov
add
pop
inc
daa
inc
inc
xchg
add
sbb
mov
sbb
add
rol
push
push
add
add
call
or
cmps
imul
inc
push
sbb
sbb
push
or
pop
xorps
adc
sbb
or
add
pop
and
push
inc
inc
push
xor
pop
push
pop
push
pop
jmp
jnp
pop
ins
stos
and
call
rol
in
xor
sbb
test
fs
sahf
mov
ins
mov
mov
into
pop
xlat
rcl
into
inc
or
pop
xor
stos
inc
pop
jns
add
jnp
sbb
pusha
outs
add
add
mov
pop
adc
adc
pop
imul
das
and
or
adc
and
dec
and
lods
pop
mov
push
xor
xchg
mov
add
or
push
mov
movs
add
and
fild
mov
cld
inc
jle
sbb
mov
mov
push
jnp
pop
das
pop
mov
(bad)
mov
pop
iret
mov
in
call
nop
pop
jle
(bad)
push
add
retf
pop
fldcw
pop
fisubr
xor
rcr
fsubp
stc
xor
neg
xchg
or
xchg
cmps
jmp
sar
shl
(bad)
pop
shl
test
movs
xor
shl
pushf
cwde
xchg
nop
shl
cmp
xor
ins
fs
push
add
dec
rol
and
mov
adc
lock
add
sar
add
int3
les
lods
pushf
mov
xor
sar
inc
xor
xor
sub
sbb
or
call
call
cmps
imul
das
xor
sar
ins
pop
dec
mov
and
adc
cmps
aam
mov
jbe
int3
(bad)
stos
pop
outs
das
cmp
mov
jo
xbegin
in
rol
sti
cmp
test
lods
push
pop
fadd
add
ins
test
xchg
sub
aaa
cmp
add
std
or
add
inc
or
das
test
add
fs
clc
and
lds
sbb
movs
loopne
mov
jg
xchg
adc
imul
sysenter
sub
sub
add
mov
sub
mov
add
sbb
add
push
adc
gs
inc
punpckldq
xor
js
jb
jb
add
and
inc
mov
int3
sahf
sub
jne
js
inc
and
popa
outs
jb
adc
jle
inc
jne
adc
jmp
dec
fs
gs
imul
fistp
not
sbb
push
jb
jo
dec
push
ins
in
pop
mov
push
imul
or
mov
jo
add
jne
push
jae
and
dec
xchg
inc
inc
mov
and
dec
mov
outs
mov
mov
push
push
iret
add
ins
dec
adc
jns
mov
xor
jae
popa
fwait
imul
xchg
mov
or
pop
in
push
gs
xchg
into
inc
lds
dec
inc
dec
sbb
adc
jns
outs
push
imul
push
adc
outs
pop
ins
inc
inc
and
jp
je
out
or
ins
push
outs
ja
fs
outs
or
imul
cmp
div
ins
nop
jae
or
sti
test
ins
ins
push
outs
sbb
sub
push
gs
loopne
(bad)
cmp
or
lods
adc
cs
xchg
push
int
and
jbe
jb
mov
dec
xchg
addr16
xchg
ror
inc
adc
imul
and
outs
push
mov
sbb
jg
fs
dec
xchg
or
sub
mov
xor
js
mov
int3
cmp
dec
mov
ins
cmp
xor
mov
or
arpl
dec
js
gs
push
inc
or
pop
xor
pop
or
or
cmp
dec
pop
sub
or
or
ins
push
cmp
xor
or
adc
mov
gs
popa
imul
into
js
inc
inc
or
xor
xchg
into
test
jnp
dec
pusha
mov
nop
inc
sub
sub
imul
cmovno
pushf
ficomp
dec
mov
test
popa
cmp
or
and
les
rcl
adc
ret
cmp
fadd
sahf
je
and
or
xor
push
ins
or
ss
jecxz
dec
inc
dec
or
out
inc
jge
and
push
(bad)
add
addr16
test
cmc
dec
gs
cmps
push
stos
setnp
rcr
ss
(bad)
out
xor
outs
fs
movs
jae
inc
lds
inc
and
mov
add
adc
adc
adc
mov
xor
das
pop
pop
jae
mov
adc
add
fidiv
sbb
fadd
into
data16
or
or
and
adc
sub
push
dec
mov
dec
push
pop
mov
shl
inc
ss
fsubr
push
sbb
sub
sub
sub
mov
ss
cmp
inc
and
fwait
in
je
sbb
dec
(bad)
int
aaa
bound
pop
or
in
sbb
and
imul
ja
pushf
sbb
pop
and
dec
aaa
xchg
out
inc
ss
adc
or
add
nop
jmp
cdq
rcl
add
jmp
adc
adc
sbb
cmp
sbb
aas
or
pusha
push
pop
pop
push
pop
or
jno
jle
sti
sbb
or
and
sbb
scas
cmp
and
jg
dec
sub
push
inc
xor
cmp
pop
xor
cmp
sub
push
xor
adc
pop
or
sbb
ins
movhps
in
sbb
adc
mov
cmp
push
sbb
push
and
add
and
lock
dec
dec
push
(bad)
call
ds
sbb
pop
push
sub
adc
sub
adc
aaa
dec
xor
add
push
push
mov
pop
sbb
dec
push
arpl
push
and
or
sub
push
fst
mov
jnp
(bad)
inc
(bad)
xor
inc
adc
xor
add
adc
and
sbb
or
inc
rcl
push
add
or
jg
test
push
mov
pop
push
push
pop
lock
pop
or
or
cwde
push
in
mov
nop
dec
add
lock
dec
loopne
and
loopne
lock
outs
test
pop
or
push
pop
cmp
lahf
jnp
dec
or
or
repnz
or
sbb
adc
or
pop
outs
sub
mov
idiv
or
push
xor
adc
daa
das
lock
add
adc
sbb
call
or
sub
wbinvd
and
inc
adc
sbb
push
adc
pop
mov
or
or
mov
inc
push
sub
es
or
or
out
mov
imul
or
or
add
mov
pop
add
push
push
or
push
sbb
sbb
bnd
or
and
pop
popa
xor
add
or
cmp
inc
or
adc
lock
or
push
sbb
dec
or
fisubr
cld
inc
adc
push
and
adc
and
and
call
sbb
dec
dec
or
xchg
pop
mov
sti
(bad)
call
outs
add
shl
push
inc
pop
popf
xor
jle
and
dec
cmp
push
stc
xor
sbb
adc
xor
outs
pop
jne
jmp
int
inc
pop
sbb
test
dec
dec
dec
push
ret
cs
ins
mov
cmp
scas
pop
pop
clc
inc
push
lock
add
or
pop
push
push
and
adc
inc
inc
rcl
(bad)
push
and
aaa
cmps
push
ret
mov
in
outs
mov
add
popa
dec
mov
stos
sbb
jo
outs
and
add
(bad)
in
(bad)
or
cmp
sbb
add
or
and
or
dec
bound
mov
add
(bad)
(bad)
push
test
sbb
push
sub
push
push
or
dec
cdq
sar
fld
fs
jmp
adc
adc
outs
push
jno
ret
sbb
add
push
add
enter
push
dec
push
add
or
pop
push
and
xor
add
lock
and
or
or
aaa
sbb
or
jo
add
xchg
mov
add
mov
xor
hlt
add
das
sub
lock
jmp
ret
lock
add
lock
inc
fst
sbb
adc
adc
dec
test
adc
adc
jbe
sbb
rol
sbb
and
jge
xor
dec
inc
js
scas
mov
lock
mov
gs
inc
pusha
add
and
mov
xor
sbb
mov
xor
sbb
inc
mov
cmps
dec
mov
(bad)
retf
loopne
sar
shr
movs
add
pushf
int3
pop
add
add
sub
pop
push
sub
in
fs
add
push
mov
and
adc
or
push
shl
out
add
call
add
fsubr
scas
xor
movs
nop
test
mov
jmp
and
xchg
cs
aad
in
sti
pop
xor
ss
stos
ja
cs
out
es
push
add
daa
mov
div
ror
arpl
add
dec
add
dec
imul
repnz
fucomi
sub
sbb
out
adc
add
add
loopne
add
add
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzx
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
dec
add
add
inc
add
inc
add
