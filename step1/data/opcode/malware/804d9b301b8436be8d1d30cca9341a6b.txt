add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
ror
add
verr
add
sldt
verr
add
add
jb
gs
xor
cs
ins
add
add
je
outs
fs
gs
popa
outs
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
ins
inc
ins
ins
outs
arpl
add
push
imul
jb
add
add
jb
jne
ins
push
jb
je
arpl
lea
push
mov
push
call
xchg
xlat
lldt
verr
add
sldt
verr
add
add
cld
pop
pop
ret
mov
push
mov
nop
nop
pusha
mov
mov
cld
mov
xor
movs
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
nop
push
mov
push
nop
nop
nop
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
mov
nop
nop
nop
jmp
inc
cmp
jne
inc
ret
lea
nop
nop
nop
add
ret
nop
push
mov
add
push
push
push
nop
nop
nop
mov
add
mov
mov
cmp
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
mov
cmp
je
mov
add
mov
add
push
push
call
add
add
inc
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmp
jne
push
call
mov
mov
call
mov
mov
add
mov
test
jbe
mov
mov
test
jne
movzx
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
inc
dec
jne
mov
cmp
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
int3
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
pusha
call
ret
nop
push
mov
push
pop
add
sub
nop
inc
dec
push
pop
add
sub
nop
add
sub
nop
push
pop
push
pop
inc
dec
push
pop
jmp
ret
push
mov
add
sub
nop
nop
nop
inc
dec
nop
inc
dec
push
pop
inc
dec
push
pop
jmp
ret
lea
push
mov
push
pop
push
pop
nop
add
sub
nop
push
pop
push
pop
push
pop
add
sub
nop
inc
dec
jmp
ret
push
mov
add
sub
push
pop
inc
dec
nop
push
pop
add
sub
nop
push
pop
push
pop
push
pop
add
sub
je
jne
ret
pusha
call
nop
nop
ret
lea
nop
nop
nop
nop
nop
jo
nop
nop
nop
nop
nop
jno
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
ret
mov
nop
nop
nop
nop
nop
nop
nop
jo
nop
nop
nop
nop
nop
jno
nop
nop
nop
nop
nop
call
add
add
ret
lea
push
nop
nop
nop
nop
nop
mov
push
push
nop
nop
nop
nop
nop
push
mov
push
mov
sub
push
push
push
pop
nop
nop
nop
nop
nop
pop
pop
add
pop
mov
nop
nop
nop
nop
nop
pop
pop
pop
pop
mov
jo
jno
ret
nop
push
mov
nop
push
nop
nop
nop
nop
nop
push
push
mov
push
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
nop
nop
nop
nop
nop
nop
pop
pop
pop
add
pop
mov
nop
nop
nop
nop
nop
pop
nop
pop
pop
nop
pop
mov
jo
nop
jno
ret
lea
nop
push
mov
nop
nop
nop
nop
nop
push
nop
push
push
mov
push
nop
mov
nop
nop
nop
nop
nop
sub
push
push
push
pop
pop
nop
nop
nop
nop
nop
nop
pop
add
pop
mov
pop
pop
nop
nop
nop
nop
nop
nop
pop
nop
pop
mov
jo
nop
jno
nop
nop
ret
push
nop
mov
nop
nop
nop
nop
nop
nop
push
nop
push
push
nop
nop
nop
nop
nop
mov
push
mov
sub
push
nop
push
push
pop
nop
nop
nop
nop
nop
nop
pop
pop
add
pop
nop
mov
pop
pop
nop
pop
pop
nop
mov
jo
jno
ret
mov
nop
nop
nop
pusha
nop
nop
call
nop
nop
nop
nop
nop
ret
lea
jo
jno
call
nop
nop
nop
ret
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
push
mov
push
nop
push
nop
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
nop
push
mov
push
push
push
nop
mov
push
mov
sub
push
push
push
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
nop
push
mov
push
push
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
mov
nop
nop
push
mov
push
nop
push
push
mov
nop
nop
nop
push
mov
sub
push
push
push
pop
pop
nop
nop
nop
pop
add
pop
mov
pop
nop
nop
nop
pop
pop
nop
pop
mov
jmp
ret
lea
or
add
sub
add
int
add
imul
add
add
add
add
add
add
adc
add
add
inc
stos
rol
nop
jl
add
inc
add
and
add
push
add
xor
add
inc
stos
add
add
and
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
inc
add
add
add
pusha
or
add
add
inc
or
add
inc
add
add
add
add
xchg
add
add
pusha
sldt
jo
add
sbb
in
sbb
call
clc
les
add
aas
clc
mov
in
push
aaa
or
xor
sbb
or
pop
sbb
cmp
adc
adc
add
adc
jmp
call
cmps
mov
call
adc
jns
push
dec
jno
add
in
push
ret
mov
mov
nop
dec
call
push
add
push
call
jge
cdq
mov
jo
call
add
mov
cmp
mov
ss
pop
ret
fstp
sti
ret
xor
leave
mov
sub
xor
retf
test
sbb
pushf
cmp
lea
loopne
es
repz
push
jno
jae
jnp
or
ror
xor
push
loopne
push
call
(bad)
jmp
xchg
sbb
or
jmp
push
jb
pop
fidiv
fs
pop
fadd
and
fadd
push
shr
es
arpl
sub
pop
icebp
cmp
hlt
jb
or
jo
mov
and
loopne
sbb
sti
adc
stc
xchg
test
lea
push
ficomp
and
or
mov
and
pop
sbb
sbb
jbe
mov
jmp
jmp
cmps
jb
cmp
push
mov
pushf
aas
or
mov
and
fst
or
sar
mov
and
add
jo
imul
cmps
and
call
push
or
ins
pop
cmp
mov
sar
xor
jae
nop
xchg
les
pop
(bad)
lods
xor
sub
add
cmp
jne
fst
hlt
dec
adc
push
cmp
jne
xchg
in
mov
sbb
adc
inc
repz
inc
or
test
out
inc
add
imul
lods
call
add
push
imul
and
mov
jl
push
mov
mov
xchg
or
fbstp
cmp
sbb
pop
mov
cmps
sbb
add
dec
fcomp
out
xbegin
cmp
je
or
jecxz
ror
sub
rcl
ss
enter
cmp
je
movs
es
push
push
mov
in
mov
shl
(bad)
mov
shr
inc
(bad)
jmp
iret
adc
or
das
stos
adc
or
lods
dec
shl
cli
pop
aas
sahf
in
ret
fdivr
fs
and
je
cmp
and
imul
xchg
add
ins
and
(bad)
shr
sbb
int3
add
cmp
stos
test
or
fisubr
xchg
push
ret
dec
sbb
dec
push
sbb
pop
push
add
adc
adc
pop
lds
add
sbb
adc
inc
arpl
mov
adc
lock
mov
sub
psllw
adc
enter
mov
and
add
xor
int3
push
mov
xchg
lods
push
lock
repnz
mov
stos
and
push
xchg
call
repz
rcl
enter
(bad)
and
lods
add
sub
dec
add
fbld
mov
pop
pop
test
mov
mov
ret
test
push
stos
lds
(bad)
and
sub
test
ins
push
push
test
ror
and
adc
mov
retf
or
shl
and
inc
push
sbb
enter
into
and
add
dec
and
in
or
and
cmp
in
cmp
stos
jecxz
or
test
jbe
add
sbb
aaa
xchg
xor
inc
les
sbb
leave
(bad)
movs
test
cmp
lea
stos
(bad)
and
push
leave
adc
bound
add
ins
mov
adc
sbb
clc
movs
sbb
and
int3
add
inc
adc
pop
or
inc
mov
jmp
mov
lea
test
fisubr
into
inc
or
data16
mov
int3
call
dec
cs
jmp
mov
or
and
fdivr
adc
lock
mov
and
xchg
in
xor
ret
or
jne
(bad)
or
je
cdq
cmp
add
cmps
sbb
call
je
sbb
xchg
sub
aas
test
mov
cmp
les
loop
fnsave
sti
or
xchg
mov
dec
dec
adc
test
mov
(bad)
cld
mov
jmp
pop
pop
pop
mov
hlt
xchg
mov
pop
pop
int
add
xchg
lods
mov
sub
(bad)
dec
cmp
aam
inc
add
scas
test
cmps
pop
jmp
pop
mov
inc
adc
cmp
adc
add
test
aaa
fisub
add
dec
or
jp
imul
leave
push
xchg
div
push
es
push
adc
jle
in
shl
cwde
adc
or
adc
ret
add
or
stos
adc
sbb
adc
sbb
loopne
dec
jns
push
cs
scas
sbb
inc
inc
rol
xchg
sbb
int3
jns
nop
sbb
and
xchg
rcl
enter
mov
cmc
inc
pushf
in
pusha
rcl
pusha
and
nop
in
sub
xor
xor
addr16
xchg
add
xor
mov
enter
stc
sbb
(bad)
jb
xor
shl
dec
ret
(bad)
adc
hlt
ins
cmp
sbb
imul
mov
dec
jb
cmps
adc
xor
and
push
je
mov
cwde
inc
stos
pop
mov
scas
jne
xor
sub
sbb
dec
mov
sbb
pop
mov
push
and
arpl
push
fild
and
add
cld
neg
jmp
mov
out
dec
sbb
(bad)
adc
cmps
push
inc
push
pop
xchg
and
int3
scas
clc
cwde
cmp
jne
and
js
cdq
dec
push
push
and
fnstsw
pop
not
sub
jbe
mov
or
imul
es
pop
push
fisubr
cmp
(bad)
mul
scas
and
mov
add
cmp
mov
sbb
xchg
aam
nop
jg
movs
mov
adc
loopne
lea
mov
in
fadd
push
or
cmc
fadd
add
mov
push
rol
in
fcom
ds
sub
jl
es
add
imul
mov
mov
inc
mov
rol
inc
mov
sbb
test
lods
in
xor
xchg
cmc
test
mov
les
enter
out
adc
addr16
adc
adc
lods
hlt
and
rol
and
nop
int3
and
adc
push
jmp
mov
add
xchg
lods
test
loop
rcr
enter
ds
mov
mov
sub
dec
pop
mov
pop
les
push
sahf
stos
stc
or
cdq
lds
mov
mov
adc
pop
add
adc
call
movs
inc
inc
and
pop
call
inc
nop
or
clc
jb
clc
sub
test
inc
jmp
add
inc
xor
pop
cli
mov
hlt
add
jmp
and
daa
jne
es
fmul
aaa
mov
je
dec
int3
pop
aam
je
and
xor
or
ds
jmp
retf
iret
jle
ins
jbe
(bad)
(bad)
repnz
pusha
in
or
sub
inc
loope
(bad)
not
pop
and
stc
dec
test
mov
xchg
sub
(bad)
add
fst
adc
and
sbb
inc
pop
je
ins
push
push
push
mov
push
sub
test
jge
pop
inc
js
sbb
in
aaa
call
and
stos
pop
push
aam
jns
lods
(bad)
jge
nop
or
sub
stos
stos
cmp
jb
sub
movs
mov
cmp
je
ss
jp
and
(bad)
js
adc
cmp
cld
or
xchg
mov
jno
or
pushf
mov
or
xchg
inc
push
in
and
xchg
fnsave
in
fbld
push
push
and
add
jle
leave
lea
fdivr
gs
mov
fmul
fmul
aam
mov
inc
fs
movs
and
pop
sub
int3
xchg
mov
rcl
jmp
and
mov
xor
sub
xchg
int
and
in
(bad)
jns
and
ds
xlat
nop
mov
mov
xchg
sub
mov
mov
mov
mov
jl
repnz
or
retf
sahf
sahf
push
xchg
mov
xchg
and
icebp
pop
call
mov
xchg
(bad)
cwde
pop
and
ja
or
mov
dec
cmps
cmp
enter
aaa
mov
inc
mov
imul
or
jle
iret
sub
adc
dec
nop
outs
out
mov
in
cli
mov
call
xchg
je
into
inc
ret
movs
adc
push
inc
cld
enter
mov
and
jae
inc
sub
sub
inc
gs
push
enter
jne
xor
xchg
mov
xchg
and
jmp
mov
cmc
sbb
mov
pop
jl
sub
rol
cld
je
lods
push
pop
ret
sbb
aad
test
(bad)
or
inc
rcr
inc
in
cld
xchg
adc
sub
mov
dec
nop
outs
rcl
adc
sbb
mov
jb
adc
repnz
lods
stos
cmc
nop
(bad)
jmp
mov
sbb
repz
mov
jmp
inc
and
dec
sub
ror
fidivr
jb
dec
fsubr
adc
test
(bad)
call
shl
dec
imul
rol
dec
call
xor
cmp
cmps
mov
(bad)
mov
arpl
jmp
jle
cmp
je
and
mov
leave
push
icebp
lock
dec
arpl
and
test
push
add
push
shr
jmp
dec
and
xchg
cdq
sub
and
test
stc
mov
les
adc
popf
push
imul
test
fistp
dec
adc
sahf
add
sbb
add
nop
adc
cmp
lahf
sub
adc
pop
and
mov
adc
loopne
push
adc
jecxz
mov
and
and
xchg
sub
sbb
pop
adc
or
push
test
inc
or
mov
call
push
cmps
nop
sbb
das
fsubr
or
cmp
mov
jmp
lods
cmp
xchg
or
pop
retf
lsl
popa
daa
outs
mov
adc
mov
jp
push
(bad)
xchg
mov
sub
mov
and
jge
push
sar
shl
stos
pop
jmp
sub
in
(bad)
cdq
inc
push
mov
sub
push
lods
xchg
xor
xlat
or
mov
call
loope
sub
call
in
loopne
std
jae
in
sub
push
(bad)
sub
retf
int3
ficomp
mov
test
test
aaa
ror
and
jb
shl
cdq
lods
outs
and
sub
pop
mov
inc
sub
rcr
icebp
add
invd
daa
mov
add
jl
inc
int
sar
cwde
xchg
dec
std
dec
mov
jecxz
je
pusha
add
rcl
idiv
sbb
inc
dec
pop
cwde
xchg
mov
call
jl
out
jb
mov
sbb
xchg
inc
mov
sbb
push
dec
dec
shr
dec
sbb
adc
jns
(bad)
shl
lea
loope
push
pop
mov
sbb
or
mov
mov
mov
inc
cmps
sub
adc
sbb
cli
add
xor
sbb
test
sbb
xchg
and
mov
pop
and
adc
retf
enter
dec
loop
xor
dec
daa
and
aas
inc
sub
and
inc
sub
xor
daa
ds
(bad)
nop
daa
jae
add
dec
mov
jns
cmp
and
xor
mov
xchg
icebp
mov
mov
movs
loopne
push
mov
mov
jne
xchg
adc
and
add
leave
(bad)
(bad)
or
pop
cmp
shl
test
call
outs
add
dec
xchg
cli
adc
or
dec
imul
or
and
cmp
push
push
sub
mov
out
dec
add
shl
adc
add
and
mov
push
nop
pop
ds
dec
test
loop
mov
cmp
pop
cmp
mov
ds
movs
inc
add
jmp
xchg
dec
pop
call
loope
mov
add
cmp
push
mov
add
stc
mov
je
cld
inc
fbld
push
dec
sahf
mov
and
adc
lock
jmp
pop
nop
in
imul
jns
lods
dec
add
sbb
imul
fs
and
sbb
test
or
dec
sub
cmp
push
add
xchg
xor
jb
mov
push
inc
dec
push
adc
mov
mov
outs
ds
retf
outs
rcl
call
ins
out
outs
adc
jae
push
add
mov
call
pushf
imul
adc
push
mov
movs
xchg
gs
test
xor
das
push
sahf
cmps
jmp
inc
push
(bad)
or
movs
push
pop
call
sub
xchg
mov
adc
adc
xor
movs
test
(bad)
int
int
and
push
dec
dec
ror
jne
dec
and
mov
sbb
dec
ficomp
jmp
imul
mov
retf
js
or
cdq
inc
sbb
mov
movs
and
ins
or
inc
sub
mov
pop
jo
lods
cdq
test
fstp
loop
cmps
cmp
or
xor
repz
test
jmp
js
enter
mov
lea
mov
call
clc
or
aad
ds
in
or
add
mov
in
sub
push
test
fs
mov
pop
fist
or
into
(bad)
push
mov
sbb
inc
ret
sub
add
inc
mov
mov
xor
cld
dec
jg
push
in
test
sub
adc
mov
shl
fs
or
add
lds
retf
hlt
ror
and
push
out
adc
repnz
dec
int3
enter
movs
icebp
adc
sbb
fnsave
out
adc
jns
daa
xor
and
and
enter
imul
(bad)
xchg
jo
and
and
sub
loope
xchg
jle
adc
mov
jne
adc
xor
das
fbld
push
cmp
add
jmp
nop
xor
jmp
mov
pop
repnz
sbb
inc
jb
or
push
rcr
adc
enter
sbb
or
add
jmp
jmp
sbb
and
dec
daa
mov
in
rol
add
cmp
jb
ret
inc
adc
and
sub
add
call
call
add
jne
cmp
xchg
into
or
std
mov
iret
hlt
dec
push
test
or
mov
jbe
imul
jno
mov
lock
test
or
inc
jl
ins
adc
not
mov
stos
adc
add
mov
mov
or
adc
dec
cmc
test
mov
lods
pushf
cmps
mov
sub
jb
adc
inc
add
cli
inc
cmp
cmp
add
adc
lock
test
(bad)
shl
dec
mul
je
push
push
inc
and
(bad)
mov
mov
push
out
mov
mov
stc
dec
loop
xor
and
scas
adc
cld
mov
push
lahf
cmp
xchg
call
add
adc
or
fst
xor
shr
xchg
mov
xchg
daa
sysexit
or
mov
push
nop
mov
xchg
or
hlt
xchg
cmp
pop
xchg
push
aad
daa
mov
adc
inc
ret
mov
adc
mov
sbb
adc
inc
imul
lea
jbe
aaa
nop
leave
adc
inc
shl
jle
dec
lds
fsub
and
retf
shr
mov
nop
add
adc
out
adc
loope
daa
arpl
(bad)
sti
and
push
mov
test
push
and
push
lods
ror
mov
mov
sbb
add
inc
jae
add
mov
cmp
rcr
mov
in
enter
sub
add
ja
sar
sbb
mov
jmp
mov
lods
rol
fst
leave
add
mov
and
inc
push
pop
call
add
sbb
jns
cs
frstor
jg
xchg
aas
dec
or
pop
test
in
jmp
sub
adc
call
pusha
imul
dec
shl
jp
and
xor
inc
adc
movs
sub
retf
cdq
mov
idiv
mov
push
mov
scas
adc
dec
push
rcr
lahf
test
sub
es
test
add
es
add
mov
mov
ins
push
or
inc
test
rcr
cmc
mov
xchg
je
cmps
lds
xor
cld
push
call
xchg
test
sub
mov
pop
nop
cwde
and
pop
or
loop
sbb
neg
pop
sbb
sbb
push
test
push
repnz
add
cmp
dec
push
dec
or
and
and
ret
and
stos
enter
nop
and
or
mov
pusha
sub
out
or
dec
icebp
sahf
mov
cld
jne
xor
jmp
xor
retf
mov
pushf
movs
pop
inc
mov
cmp
jge
add
cs
pushf
mov
movs
movsx
lds
mov
adc
(bad)
or
xchg
and
movs
adc
adc
test
stos
movs
lods
fst
xchg
or
lea
push
jmp
fistp
dec
dec
sbb
hlt
mov
jmp
jae
mov
rcr
mov
adc
(bad)
into
jle
xchg
mov
push
shl
cmps
mov
mov
enter
jmp
xchg
pop
and
ja
cmp
imul
clc
xchg
(bad)
jmp
sbb
leave
das
sbb
ror
push
jecxz
adc
ds
push
xor
sub
inc
mov
imul
out
je
mov
fst
adc
leave
and
adc
mov
inc
pop
leave
jl
dec
sub
lahf
inc
or
push
icebp
test
or
or
aaa
sbb
pop
xor
inc
sub
or
mov
in
xor
call
mov
add
and
mov
jnp
das
aas
add
and
test
cmp
push
push
cmps
cmp
gs
sbb
ss
inc
and
jmp
xchg
pop
repnz
fstp
push
pop
xchg
(bad)
in
adc
jle
jns
mov
(bad)
in
jns
aaa
daa
push
jo
cmovle
xor
inc
loope
add
mov
add
iret
xor
sbb
adc
jne
mov
stos
or
jne
int
mov
rcr
ret
lea
pop
sbb
pmaxub
loope
stos
sub
jle
cmp
pop
out
retf
add
sbb
rcl
loope
pop
push
push
add
mov
jno
sbb
or
dec
adc
jbe
push
pop
cmp
mov
and
mov
mov
or
mov
mov
scas
sub
add
mov
adc
loopne
shr
pop
pop
mov
imul
or
sbb
jne
xlat
xchg
push
lock
fs
cmp
cs
cmps
out
test
xlat
xchg
or
jbe
push
cld
repz
test
dec
imul
aaa
shr
pop
call
imul
cmp
dec
movs
les
test
and
call
sbb
call
xor
mov
adc
test
mov
movs
xchg
mov
add
push
mov
test
or
or
pop
movs
xor
jmp
sbb
adc
xchg
add
cwde
adc
pop
inc
jg
or
(bad)
cmps
stc
xchg
mov
dec
xor
js
dec
sbb
xlat
lea
inc
pop
shl
ficomp
jmp
retf
adc
repz
sti
jne
scas
cmp
cmp
hlt
or
je
jmp
push
popf
test
add
pop
sbb
pop
repz
int3
cmp
lods
mov
mov
mov
inc
or
mov
pop
sub
rol
(bad)
jmp
jecxz
call
js
mov
jmp
shl
or
lods
es
pop
push
cmp
dec
mov
cmp
mov
lods
cmp
pop
sbb
out
adc
adc
inc
sub
sbb
lock
ds
and
lock
and
dec
add
mov
inc
into
mov
jnp
pop
sub
push
fwait
sar
std
or
leave
jo
mov
jno
push
pop
retf
mov
push
fcom
call
xor
clc
add
test
rcr
les
imul
jo
std
mov
enter
cmp
push
or
lods
adc
or
daa
cld
push
les
dec
clc
mov
sub
test
movs
adc
cmp
inc
cdq
sbb
add
sub
sub
movs
sub
mov
int3
in
or
pop
loop
jae
pop
add
push
or
movs
addr16
psrlw
ins
retf
or
gs
mov
aad
in
dec
push
adc
aad
es
sub
sbb
and
loope
push
xor
and
out
add
(bad)
sbb
inc
jns
lock
loopne
add
jns
ret
fwait
inc
xchg
je
repnz
fsubr
lock
test
add
hlt
sub
and
outs
add
xor
idiv
retf
or
add
add
fcomp
aaa
dec
movs
push
adc
and
mov
push
cli
and
cmp
jmp
inc
sbb
add
jno
ror
adc
and
and
or
call
sub
lds
cmp
mov
add
lods
mov
add
retf
imul
pop
ficomp
mov
push
add
js
in
mov
iret
mov
iret
mov
adc
push
mov
adc
adc
mov
vmwrite
cmp
inc
push
imul
mov
add
repnz
fldenv
mov
inc
or
inc
jo
ret
mov
cmp
cmp
xor
or
je
mov
xchg
xchg
pop
neg
repnz
and
je
fsub
jle
pusha
cmp
jne
add
repnz
das
add
jae
adc
shl
popf
loope
or
sbb
adc
dec
bnd
push
popf
addr16
pop
sub
lahf
or
call
or
pop
call
fisttp
enter
jnp
jge
les
fadd
das
clc
push
xchg
xor
popf
fbld
pop
mov
sbb
adc
and
movs
iret
jne
imul
ret
mov
or
or
sub
fmul
sbb
or
ins
in
and
push
(bad)
push
jge
pop
adc
mov
movs
rol
jb
int3
cmp
mov
cdq
push
push
in
into
push
dec
or
jmp
dec
and
push
pop
or
pushf
adc
xor
(bad)
int3
stc
movs
xor
and
shl
fnstenv
pop
jmp
mov
shl
in
scas
mov
push
jmp
xchg
adc
ftst
push
push
and
jecxz
sub
pop
dec
sbb
(bad)
fbstp
icebp
dec
in
jmp
cwde
pop
hlt
mov
(bad)
push
pop
add
pop
jle
adc
jne
mov
push
xchg
pushf
dec
in
or
jne
mov
leave
shr
mov
je
mov
rol
jmp
or
inc
in
cmp
hlt
pop
adc
jno
retf
inc
ror
or
retf
jns
sub
sub
rcl
mov
xchg
aas
push
adc
mov
xchg
jmp
lds
out
or
das
jbe
lds
add
xchg
mov
push
sti
call
mov
or
jmp
and
mov
rcl
push
dec
sbb
dec
add
mov
push
call
jmp
and
lahf
lods
bound
je
adc
mov
and
clc
mov
sub
shr
adc
mov
mov
jecxz
dec
dec
ds
cmp
xchg
in
repnz
fsubr
push
pop
in
or
dec
push
int3
movs
jbe
fdivr
ror
mov
push
(bad)
cmp
push
inc
xchg
popa
pop
outs
inc
aam
in
add
cmp
xor
add
sar
jo
mul
outs
and
retf
shr
xor
out
es
aam
dec
mov
and
aam
adc
add
jl
xchg
add
and
dec
fstp
shl
and
out
inc
(bad)
mov
fidiv
outs
outs
xor
pop
rol
inc
movs
les
mul
and
sbb
sbb
sub
dec
nop
and
cmp
test
sub
adc
add
and
sub
add
jp
cwde
fwait
or
fstp
xor
or
ss
adc
bound
add
or
outs
call
and
and
xor
and
leave
sbb
arpl
das
hlt
sbb
push
sti
jmp
mov
pop
adc
dec
and
repnz
add
(bad)
lock
xor
dec
mov
sub
xlat
xor
or
daa
cmp
xor
ss
cmp
mov
push
icebp
jle
adc
dec
jmp
sub
adc
dec
push
pop
xchg
jl
mov
sub
and
out
pop
ins
xchg
or
or
jno
leave
psrlw
dec
xchg
dec
movs
inc
and
inc
sbb
add
or
mov
and
aaa
adc
sub
in
call
xor
or
ja
cmp
push
xchg
call
push
out
imul
imul
fisub
out
xchg
ja
xchg
setns
dec
push
sub
xor
aam
shl
div
mov
jb
dec
cli
xchg
mov
xor
push
mov
sub
mov
out
movs
xor
adc
clc
xor
mov
xor
and
mov
fiadd
repz
orps
sbb
pop
or
push
nop
ror
or
add
pop
fidiv
adc
fcmovne
iret
inc
test
add
or
(bad)
adc
cdq
es
push
ins
(bad)
sbb
push
adc
push
xchg
adc
sahf
movs
dec
sbb
mov
mov
inc
dec
and
es
mov
imul
mov
jno
mov
inc
dec
aaa
(bad)
rol
push
imul
sub
mov
xor
int3
div
pop
inc
sub
rcl
mov
pop
xor
sahf
xor
pop
xor
adc
test
sub
cmp
or
xchg
test
sub
xchg
lods
mov
mov
cmp
movs
lock
mov
mov
dec
add
or
inc
dec
pop
mov
outs
xor
xchg
or
inc
clc
mov
adc
or
(bad)
cs
inc
setae
adc
jmp
or
pop
imul
push
cs
call
push
sahf
push
adc
sub
mov
push
pop
sub
cmps
xchg
adc
inc
xor
xchg
outs
push
jmp
aam
es
rcl
xchg
dec
or
cs
sbb
push
inc
inc
mov
mov
push
imul
in
pushf
sub
xor
daa
inc
adc
sub
mov
sub
sbb
adc
imul
retf
pop
or
cmp
inc
cld
and
or
movs
push
sub
add
push
xchg
jge
sbb
sub
test
(bad)
push
out
jno
call
aaa
dec
dec
sub
ins
and
push
and
(bad)
sub
aad
test
les
sub
push
dec
out
js
out
adc
sbb
xor
sbb
push
test
and
push
cmp
ja
cli
sub
lds
adc
cwde
stos
ds
sub
hlt
out
adc
push
test
xchg
iret
popf
xchg
sub
cmp
xor
jecxz
mov
push
add
pushf
addr16
mov
repz
imul
jmp
pushf
(bad)
jg
adc
pop
sub
xor
mov
mov
cmc
inc
sub
in
inc
je
cmp
(bad)
xlat
cli
popa
das
dec
sub
dec
mov
inc
fiadd
inc
pusha
out
jno
cld
sub
clc
inc
sub
push
dec
or
sub
cmps
ins
leave
iret
stc
push
mov
xor
sbb
int
mov
retf
xor
icebp
loop
jnp
cli
sbb
xor
jge
inc
jmp
inc
pop
(bad)
xor
push
es
ins
fsubr
sub
inc
fdivr
and
clc
pushf
ds
xor
dec
adc
push
shr
sub
xor
mov
xchg
xchg
retf
cwde
cmpxchg
ss
dec
jbe
mov
inc
xor
icebp
sub
sbb
or
pop
push
inc
or
xor
or
pop
push
into
sub
sub
jns
push
cmp
sub
xchg
aam
aad
loopne
push
ror
xor
cwde
stos
movs
inc
pop
adc
pop
(bad)
fldenv
mov
sub
cmovs
mov
aaa
ja
cmps
sub
loop
xor
scas
mov
pop
cmp
add
xor
outs
daa
ins
daa
add
daa
pop
les
pop
xchg
jmp
adc
push
add
popa
jge
es
into
mov
imul
push
out
sub
es
mov
mov
or
pop
push
pop
mov
lea
loop
sbb
daa
test
jb
jmp
push
push
jmp
repz
jp
xor
sbb
clc
mov
dec
jae
inc
es
ins
cmp
and
cwde
pushf
ficomp
cmp
ss
adc
cmp
ret
mov
std
mov
xor
mov
fst
and
push
push
cld
inc
shl
test
dec
cmp
push
xchg
pop
dec
adc
(bad)
mov
xchg
sub
shl
cmps
(bad)
in
or
es
and
sub
mov
into
and
test
mov
jmp
enter
or
sub
adc
inc
xor
or
mov
adc
xchg
adc
cwde
out
aaa
xor
xor
mov
test
mov
xor
retf
mov
and
ins
or
mov
fdiv
ja
and
and
push
jnp
or
and
mov
xchg
jmp
aad
sbb
mov
pusha
lahf
xchg
adc
fwait
ins
inc
popf
mov
mov
and
xchg
xchg
push
dec
call
pop
pusha
push
and
in
pop
and
mov
pop
lods
fdiv
movs
adc
(bad)
in
mov
adc
and
aaa
icebp
cdq
(bad)
je
pop
gs
and
push
xor
rcl
aaa
push
cdq
outs
mov
add
and
movs
mov
cmp
jp
and
or
and
js
pop
and
xor
pushf
and
outs
or
out
pop
and
mov
xchg
sub
and
std
ds
inc
lds
add
mov
jno
push
xor
fsub
movs
adc
cmp
and
push
xor
ds
(bad)
or
ins
xchg
je
jmp
cmp
dec
and
mov
sbb
in
fwait
xchg
cmp
mov
(bad)
enter
fs
scas
and
adc
ss
int
outs
xchg
ss
outs
sub
jns
enter
mov
repz
xlat
adc
mov
pop
xchg
aas
cmp
push
push
xor
and
sbb
mov
movs
sub
pop
in
aaa
rcr
fwait
adc
push
adc
xchg
mov
pushf
dec
xchg
test
scas
and
mov
add
sbb
or
xor
xchg
(bad)
sub
int3
sub
movs
cwde
mov
jno
fadd
imul
adc
dec
and
aad
out
adc
jno
out
pop
inc
sub
ror
mov
fst
push
adc
fcomp
push
push
xchg
shl
ins
push
ins
adc
fldenv
push
pop
ror
or
push
out
sub
ret
jns
leave
sbb
sbb
dec
or
xchg
push
cmp
test
cmps
xor
(bad)
sbb
jne
mov
dec
mov
push
and
mov
push
loop
push
mov
pop
add
cmp
xor
out
or
mov
pop
inc
cmps
nop
sub
dec
push
(bad)
dec
clc
push
adc
sub
xchg
aas
inc
out
sbb
dec
std
xor
mov
lock
sbb
retf
and
jmp
xor
ror
int3
outs
sbb
push
in
jmp
(bad)
mov
int3
and
pop
sbb
cmc
mov
adc
sbb
loope
xor
dec
xor
xor
int
sahf
sub
and
or
jb
cs
cmp
sub
lods
mov
jnp
pop
xor
jns
mov
xchg
mov
push
xor
jmp
pop
sub
cmp
inc
sbb
sar
(bad)
pop
xor
cwde
sub
in
sub
dec
mov
jmp
mov
lea
fsub
adc
ins
pop
mov
push
mov
and
or
add
mov
or
sub
pop
mov
cwde
or
jg
xor
jns
jbe
dec
test
jge
int3
inc
and
adc
les
cli
movs
pushf
nop
pop
mov
iret
push
ja
je
fcomp
mov
push
mov
sbb
fbld
fwait
inc
fistp
out
stos
or
mov
daa
sahf
fldcw
mov
xchg
inc
mov
sbb
mov
pop
out
and
lds
fistp
add
fistp
add
inc
jp
daa
test
and
imul
xchg
sbb
jg
pop
xor
adc
es
les
iret
pop
pop
add
inc
sub
jnp
sbb
or
mov
jl
cdq
fmul
mov
cmps
add
jmp
adc
(bad)
or
mov
sahf
in
imul
fnstcw
xchg
(bad)
push
repz
test
pop
sub
test
rcl
sbb
mov
(bad)
es
aaa
push
call
lahf
rcl
or
sbb
dec
adc
jb
imul
jle
retw
pop
pop
inc
cmc
sub
adc
fwait
xchg
sub
cmp
jmp
dec
push
cmp
xor
dec
pop
shl
xor
push
shr
pop
jbe
pop
xor
loop
(bad)
ret
pop
fsubr
mov
in
cdq
cmp
push
outs
xchg
(bad)
hlt
in
mov
pop
jnp
lds
push
dec
pop
and
mov
cli
ret
stc
jb
add
test
push
jp
int3
cmps
movs
inc
sbb
xchg
or
and
pop
test
popa
out
push
sub
test
pushf
xlat
lds
cmp
or
mov
push
mov
adc
dec
push
fmul
shld
adc
loope
xchg
out
add
fucom
out
adc
stos
xlat
mov
adc
adc
push
xchg
sub
adc
xchg
test
push
imul
push
pop
add
push
inc
push
or
inc
xchg
outs
lods
lock
(bad)
cs
retf
adc
es
adc
jp
aad
ins
or
add
mov
popf
rcr
or
add
out
ret
out
movs
mov
mov
nop
jnp
mov
mov
push
xchg
outs
push
adc
inc
ret
inc
out
jl
jae
jb
xchg
sub
pop
lds
adc
sub
adc
xor
xchg
push
movs
jecxz
adc
adc
pop
add
out
cwde
fstp
ret
mov
mov
push
jae
push
int
enter
mov
sbb
(bad)
imul
dec
add
inc
jne
xor
int
pop
dec
adc
ins
sbb
cmp
adc
or
push
and
adc
push
jge
mov
(bad)
icebp
adc
dec
bound
xchg
sub
mov
aaa
cli
call
nop
jb
push
mov
lea
jge
movs
mov
push
inc
mov
fst
pop
out
push
cmp
adc
loop
push
xor
adc
ins
cs
push
inc
inc
push
mov
pop
push
loop
call
mov
retf
push
pop
cmp
fucomi
add
aad
sbb
add
mov
pushw
push
adc
sub
test
fidiv
pop
cmp
pop
pop
mov
adc
out
das
or
sub
and
outs
fcom
and
pop
xor
xchg
and
inc
test
xor
retf
(bad)
test
dec
or
imul
inc
sahf
scas
jb
popf
sub
pushf
push
sub
retf
call
pop
push
sbb
adc
adc
mov
hlt
sahf
fs
dec
setne
push
or
psllq
add
dec
cmp
test
retf
adc
cmp
cmps
push
fidivr
push
lods
or
bound
psllw
adc
jmp
cdq
inc
sub
inc
xor
mov
sub
mov
addr16
dec
in
xlat
test
mov
jmp
ins
sar
pop
xchg
jge
lea
or
ja
xor
add
xchg
xchg
xor
mov
add
mov
or
std
xor
adc
cmp
and
cli
icebp
mov
outs
vpunpckhwd
or
aam
cmp
not
dec
mov
inc
fimul
int3
or
mov
mov
pop
mov
mov
or
or
test
mov
inc
or
vmovapd
adc
es
adc
test
adc
test
push
(bad)
dec
jno
xlat
or
imul
or
adc
sbb
mov
push
test
mov
retf
jbe
rcl
sub
sub
mov
(bad)
mov
dec
or
xchg
repz
dec
imul
or
add
push
xchg
fcomp
sub
mov
and
es
cmp
jae
jecxz
xchg
icebp
test
or
imul
dec
push
adc
cs
push
jl
push
sub
mov
push
dec
and
inc
add
sub
cmp
sub
in
cld
adc
into
or
(bad)
aam
rcl
jbe
or
mov
push
movs
je
sbb
xor
rcl
and
out
push
out
sub
or
repz
xor
inc
movs
adc
clc
adc
jnp
jecxz
adc
or
cmp
bound
xchg
movs
fwait
sti
sub
xlat
in
or
pop
add
fs
mov
ins
out
and
mov
rcl
rol
shl
gs
es
adc
adc
sahf
out
sbb
mov
out
pop
popf
inc
sub
(bad)
mov
xor
enter
jmp
aam
jb
mov
xchg
jg
push
(bad)
mov
or
loope
rol
ins
add
adc
mov
push
popa
jge
mov
and
cli
repz
cmp
movs
test
(bad)
inc
mov
retf
push
cli
push
xor
xchg
push
fsubp
dec
sti
je
out
sbb
pop
retf
sahf
push
cmp
and
xchg
sbb
repz
pop
gs
not
(bad)
mov
xor
mov
add
pop
hlt
xor
adc
mov
inc
add
shl
push
cmps
test
jmp
stc
mov
push
add
xchg
mov
ret
sub
mov
inc
cmp
test
(bad)
dec
addr16
xchg
add
movs
clc
dec
dec
js
sub
push
sub
sbb
mov
jb
inc
mov
sub
(bad)
mov
stos
and
inc
cmp
fadd
call
sub
push
lods
imul
stos
dec
ror
repnz
mov
outs
adc
and
inc
arpl
call
sar
xchg
mov
mov
add
push
mov
and
sbb
push
pop
fdiv
sub
loop
adc
call
rol
or
popf
push
inc
adc
xor
cmps
fs
cs
xchg
sub
mov
cmp
xchg
lea
mov
jl
push
add
jle
loop
ja
lock
sbb
push
xor
add
fcmovu
inc
xor
add
in
(bad)
fs
dec
mov
xor
movs
xchg
adc
xchg
mov
push
stc
or
(bad)
pop
jmp
repz
xchg
xor
imul
push
loop
add
dec
sbb
and
outs
es
jl
out
cwde
pop
jbe
(bad)
aad
in
lods
add
pop
xchg
outs
cwde
and
les
cmc
jge
(bad)
xchg
mov
adc
loopne
dec
mov
mov
pop
dec
add
cmp
mov
or
add
push
add
and
std
add
sub
lidtd
pushf
add
jp
cmp
lods
int3
or
cs
mov
mov
shl
adc
sub
cld
in
repz
and
mov
neg
cmp
das
in
inc
lea
in
idiv
lahf
loopne
mov
xchg
fimul
and
mov
jl
shr
mov
adc
mov
cmp
fisttp
aam
mov
clc
mov
pusha
loop
(bad)
jne
adc
and
std
outs
push
push
iret
adc
jmp
ret
shl
jne
sbb
pop
sub
not
and
lods
pop
sub
mov
sti
sub
mov
sbb
pop
dec
pop
mov
or
adc
adc
jae
cld
not
and
xor
call
sub
out
int3
leave
not
pop
(bad)
(bad)
cmp
sbb
sbb
lea
call
in
aas
mov
xlat
stos
sub
jle
inc
or
and
loope
mov
lahf
push
ins
xchg
sar
jnp
test
xor
call
add
les
inc
lock
loope
xchg
stos
dec
aas
inc
xchg
adc
ret
cmps
sbb
inc
jle
or
(bad)
into
add
test
lds
inc
ret
movs
jo
sar
pop
ror
ret
sub
sbb
xor
cmp
sub
inc
adc
inc
sub
add
enter
inc
mov
jge
xchg
call
inc
dec
test
cmp
pop
push
fwait
test
fstp
push
push
pusha
push
dec
push
call
push
mov
mov
or
add
inc
add
add
or
mov
retf
fld
and
push
stos
mov
sub
dec
lods
add
rcr
leave
jo
jl
pop
jmp
(bad)
je
push
stc
cmp
dec
or
ret
js
cmc
movs
and
inc
or
xor
loope
and
hlt
test
ret
adc
in
iret
xor
ret
pop
ret
hlt
xchg
and
push
mov
ret
push
add
in
add
or
add
and
mov
in
jmp
add
push
sub
add
or
inc
add
cmps
jmp
sub
push
pop
cmps
mov
dec
push
int3
or
and
mov
pop
pop
push
imul
inc
or
ret
push
mov
iret
dec
add
xor
pop
push
and
mov
cwde
adc
retf
dec
add
or
not
shl
scas
pop
es
cli
push
lods
fild
mov
xchg
add
je
pop
call
or
pop
cmp
jne
dec
jl
add
or
and
jp
and
pusha
push
pop
jo
or
sub
inc
test
cdq
jmp
dec
in
nop
or
adc
push
add
and
push
adc
push
cli
add
out
pop
cdq
mov
mov
mov
cmp
ror
sbb
lea
dec
imul
dec
ret
cld
jle
inc
pop
inc
push
xor
push
xchg
daa
push
push
mov
xchg
fs
pop
or
xchg
or
nop
test
fsub
xchg
div
fcom
ds
enter
or
sbb
pop
pop
add
mov
push
syscall
lds
pop
mov
adc
sbb
enter
hlt
push
mov
inc
xchg
sbb
shr
icebp
xchg
xchg
mov
cmp
pop
or
add
inc
call
repnz
add
ret
add
stc
mov
adc
int3
sub
or
xchg
and
inc
icebp
aas
dec
enter
and
or
and
mov
nop
mov
pushf
in
cld
cmp
nop
lahf
enter
jnp
cld
push
jne
jle
dec
(bad)
pop
enter
or
scas
push
fisttp
sub
jle
int3
mov
push
add
mov
in
add
jmp
nop
mov
mov
and
inc
aam
inc
shl
mov
mov
int
dec
pop
xor
or
je
dec
sub
rcr
xchg
fwait
push
(bad)
xor
and
add
cmp
pop
daa
lock
leave
add
mov
inc
int3
popf
inc
imul
sbb
sbb
adc
or
push
jmp
sub
test
or
clc
inc
pop
xchg
mov
xchg
push
cmp
iret
rcr
ret
inc
dec
adc
mov
cs
and
mov
aam
mov
icebp
inc
dec
dec
push
inc
psrlw
in
lock
in
jp
sbb
xchg
inc
pushf
add
shl
dec
add
dec
add
ror
fidiv
enter
push
xlat
mov
enter
inc
mov
fdivr
and
add
adc
cs
sub
jmp
pop
mov
nop
aam
fdiv
loopne
(bad)
in
push
add
(bad)
rcr
cmp
(bad)
mov
or
cdq
adc
or
push
push
scas
dec
lods
xor
mov
mov
retf
sub
and
add
sub
adc
pop
or
or
dec
jmp
or
rol
cmp
dec
cmp
mov
inc
mov
pop
sahf
jge
add
mov
push
outs
dec
(bad)
cmps
ficomp
popf
push
fs
sbb
pop
out
push
sub
lea
or
and
push
sub
stos
retf
and
cld
inc
inc
pop
xor
jge
dec
adc
inc
xchg
pop
ficomp
cmp
adc
(bad)
mov
add
stos
adc
inc
mov
lods
jnp
aam
xchg
push
jno
dec
ret
pop
push
mov
aas
and
leave
aaa
and
test
mov
fs
lods
mov
mov
sahf
jp
scas
add
not
lea
rcl
int3
dec
or
sahf
mov
cmp
mov
and
jns
leave
fxam
nop
add
inc
(bad)
jmp
call
xchg
ror
enter
mov
adc
cli
leave
mov
push
push
mov
out
popf
xchg
(bad)
cmps
ins
shr
in
cli
sub
xor
dec
xchg
add
push
enter
call
mov
add
data16
or
or
(bad)
or
adc
cmps
mov
pop
clc
adc
inc
mov
inc
adc
sbb
or
or
test
inc
sbb
adc
sub
adc
enter
add
add
out
sub
test
adc
xor
cld
cmc
dec
inc
and
nop
xor
mov
test
or
arpl
cmp
pop
inc
xchg
test
and
or
nop
inc
xchg
or
test
rcr
xor
inc
xchg
adc
push
inc
(bad)
pop
sbb
sbb
push
or
or
or
test
rcr
je
and
pop
inc
inc
xor
or
xchg
mov
dec
rcr
repnz
test
mov
xlat
pop
xchg
inc
inc
fsub
ins
or
jns
loopne
jo
and
je
xor
js
jl
sbb
in
and
push
jno
or
(bad)
hlt
xor
enter
and
popa
push
and
adc
fcom
mov
fadd
xchg
and
fsub
cwde
or
inc
push
or
pushf
test
pop
or
adc
mov
adc
movs
inc
add
sbb
sbb
test
mov
jno
or
test
mov
fdiv
push
aam
mov
xor
aam
fsub
jecxz
dec
inc
and
adc
sbb
or
jae
loopne
les
dec
out
test
gs
inc
call
cs
or
test
outs
pop
mov
lock
mov
inc
hlt
and
or
jno
or
test
jno
inc
inc
cld
and
adc
sub
(bad)
push
je
movs
(bad)
fsubr
adc
movs
inc
sub
nop
in
test
cmp
inc
or
inc
lock
xchg
loop
sbb
or
mov
(bad)
dec
push
and
nop
cld
test
push
cmp
loopne
mov
adc
and
test
fdivr
lds
fdivr
push
nop
and
or
or
or
test
or
(bad)
loopne
sbb
imul
sbb
mov
inc
call
dec
jno
or
test
push
loop
mov
adc
or
inc
mov
call
nop
xor
inc
xor
aad
in
fdivr
add
lods
fcom
mov
xchg
inc
inc
or
loopne
pop
or
inc
test
cld
les
xor
add
cmps
mov
fcom
mov
sbb
push
or
sahf
push
and
push
or
dec
xchg
scas
fadd
adc
pop
or
inc
lods
and
in
and
or
mov
lds
repnz
loopne
inc
push
loopne
ins
or
jo
aas
push
push
and
nop
je
out
push
in
xchg
adc
cwde
loop
adc
xlat
inc
test
jo
sbb
clc
and
and
mov
fcom
mov
pop
fcom
inc
dec
fsub
mov
dec
mov
and
push
adc
test
int
les
mov
mov
sbb
movs
inc
or
sbb
test
jmp
and
cmp
test
scas
adc
repnz
xchg
mov
inc
fsub
mov
in
rol
les
imul
call
jg
inc
in
and
push
gs
lock
adc
enter
mov
fmul
dec
js
cld
or
test
(bad)
inc
inc
aad
lahf
and
cmps
inc
push
mov
in
jge
push
inc
xchg
fmul
call
mov
push
inc
mov
lock
cmp
and
hlt
test
mov
sbb
mov
sbb
cld
or
inc
inc
and
fdiv
(bad)
and
adc
movups
adc
ss
js
(bad)
mov
movs
inc
adc
mov
jmp
sbb
fsub
adc
arpl
test
daa
dec
(bad)
call
das
xchg
call
imul
and
or
jno
or
and
hlt
xor
adc
and
pop
xor
xor
(bad)
fdiv
inc
aam
sbb
fcom
inc
mov
retf
add
pop
inc
sub
xchg
adc
adc
inc
or
inc
jne
adc
dec
and
lods
push
and
nop
dec
xor
inc
push
inc
sbb
push
or
imul
lods
cdq
inc
call
push
addr16
repnz
adc
or
inc
adc
mov
xchg
imul
push
test
loopne
push
(bad)
in
ins
adc
jns
adc
enter
xchg
in
and
mov
lock
and
adc
mov
add
sbb
cld
and
fmul
inc
xchg
fmul
xchg
inc
cmps
fadd
or
inc
inc
in
xor
adc
cwde
or
pushf
test
or
les
xor
adc
movs
inc
xlat
sbb
in
and
mov
in
mov
or
inc
in
cmp
test
shl
inc
inc
fsub
mov
pop
mov
mov
or
loopne
mov
in
inc
shl
(bad)
call
test
enter
sbb
lock
or
test
sub
inc
inc
clc
xor
adc
xchg
xchg
cld
mov
inc
add
sbb
fadd
adc
pop
inc
movs
(bad)
fsub
adc
movs
inc
sub
nop
in
fld
inc
call
adc
in
hlt
push
inc
adc
lock
jno
or
test
pop
adc
sbb
clc
adc
lods
test
fsub
cld
adc
fcom
(bad)
adc
mov
js
(bad)
mov
push
movs
inc
adc
test
mov
or
or
or
add
and
push
and
nop
sbb
inc
in
and
mov
and
hlt
sbb
or
xchg
inc
fs
xor
adc
inc
inc
enter
and
and
sub
inc
and
xor
inc
jb
cmp
mov
adc
cmp
call
inc
test
or
les
inc
adc
mov
inc
pop
xor
dec
add
fwait
inc
popf
or
mov
dec
hlt
fdiv
push
adc
mov
inc
hlt
enter
sbb
or
pusha
test
cli
jb
loopne
fs
pop
inc
enter
call
or
in
or
test
lods
ja
lock
dec
xchg
clc
enter
es
clc
and
mov
cld
or
inc
mov
fadd
sub
adc
inc
dec
fmul
retf
nop
and
adc
cmp
inc
cwde
adc
pushf
or
ins
mov
mov
inc
clc
cmp
dec
clc
fdiv
test
in
test
enter
ficom
or
inc
jno
or
test
xchg
loopne
mov
or
in
mov
call
adc
loop
sbb
or
inc
xchg
gs
push
and
nop
int3
test
inc
sar
and
mov
inc
aam
sbb
adc
aad
mov
inc
lea
inc
push
cdq
fsub
or
sub
inc
inc
nop
or
in
jmp
inc
or
adc
cmp
inc
in
or
or
test
out
out
mov
sbb
adc
mov
outs
jne
mov
dec
data16
inc
mov
add
and
pop
cmc
jo
pop
jp
pop
or
and
loop
out
pop
mov
les
stc
lds
sbb
push
cmp
jge
out
nop
mov
pop
enter
dec
dec
jge
jmp
inc
pop
sbb
and
retf
jns
push
adc
or
dec
mov
jl
xor
cmp
inc
icebp
inc
pop
ds
in
sbb
iret
mov
nop
mov
or
movzx
xchg
test
scas
fisub
or
xchg
jo
adc
adc
and
jbe
inc
mov
jne
xchg
mov
push
cs
mov
sub
enter
lds
cmc
ja
mov
and
popf
js
sar
sbb
jb
loop
inc
inc
jl
cmp
fld
in
pop
repnz
inc
sbb
mov
retf
add
adc
repz
sub
movs
sub
add
mov
add
mov
pushf
test
call
xchg
dec
push
adc
mov
adc
sub
(bad)
sub
or
add
cmp
push
clc
sub
out
sub
xchg
ret
clc
stc
cmp
retf
dec
sbb
daa
push
sub
or
inc
jb
jne
sub
jmp
sub
dec
test
push
inc
les
sahf
xlat
dec
pop
mov
mov
fiadd
leave
push
pop
dec
and
pop
aad
les
iret
jno
cmp
dec
ror
leave
add
push
out
jle
jg
scas
mov
mov
cdq
movs
sti
xlat
enter
xchg
leave
mov
or
mov
sub
inc
(bad)
mov
xor
out
stos
lahf
(bad)
mov
sub
mov
sbb
mov
push
xchg
adc
push
popf
jmp
imul
push
sub
bswap
cmp
pop
or
ret
mov
daa
adc
or
jae
shl
into
push
inc
mov
add
and
inc
not
xor
ret
aad
xlat
add
mov
inc
scas
test
out
daa
add
jmp
fst
cmp
imul
call
stos
mov
les
jle
pop
mov
xchg
jle
popf
dec
adc
test
icebp
or
xor
das
jbe
and
adc
mov
lods
cmp
movs
sti
cmp
in
ja
adc
int
inc
and
mov
lods
jbe
sub
fdiv
scas
mov
xchg
inc
sub
test
or
cmp
icebp
pop
push
adc
shl
aam
into
jo
sub
dec
sub
cmp
sub
add
add
enter
cdq
or
add
pop
or
add
xchg
mov
std
xchg
pop
push
add
jo
dec
cwde
je
mov
and
xchg
jno
jg
xchg
std
fnstcw
fistp
(bad)
push
mov
stc
rcl
mov
mov
mov
mov
pop
movs
dec
lods
call
in
mov
mov
cmc
mov
mov
shr
neg
fisttp
push
loopne
(bad)
mov
shl
bound
(bad)
or
mov
dec
adc
in
leave
inc
popf
ficom
fwait
push
push
cmp
jb
retf
mov
sub
scas
jle
sbb
inc
add
data16
mov
aam
push
sub
ror
(bad)
test
dec
mov
in
retf
aaa
call
sti
push
or
es
jle
add
loope
lds
push
inc
stos
cmps
mov
xchg
or
xchg
jb
adc
dec
jns
pop
pushf
lods
push
inc
adc
mov
mov
xchg
sahf
daa
in
retf
sub
xor
imul
mov
push
fs
scas
retf
mov
movs
leave
movq
sbb
repz
jbe
fistp
jb
mov
ds
xchg
fldln2
std
sub
push
(bad)
cld
popf
adc
rcl
(bad)
dec
retf
sub
xchg
mov
xchg
mov
adc
jecxz
stc
movhps
mov
cmp
inc
imul
pop
add
xchg
jmp
scas
cmp
mov
stos
jp
push
sahf
push
sar
push
es
xor
sbb
xchg
and
popf
pop
shl
xchg
inc
fimul
xchg
and
scas
bound
adc
pop
out
test
sbb
leave
cld
inc
out
xchg
jge
outs
sub
rol
or
leave
out
inc
mov
add
addr16
gs
nop
sub
add
xchg
aam
inc
cmps
pop
xchg
jg
inc
in
inc
xchg
icebp
addr16
cdq
xchg
push
xchg
xor
enter
loop
mov
mov
mov
push
ja
movs
leave
rcl
(bad)
and
jno
xor
jnp
int
and
xor
pop
es
jmp
fld
add
loop
sbb
push
fbld
loopne
repz
pop
or
icebp
das
adc
out
jne
mov
and
or
mov
mov
sbb
cmp
sub
xchg
retf
lods
push
cmps
test
add
pop
aam
stos
retf
adc
cmp
sbb
dec
or
or
mov
inc
iret
push
or
shr
fiadd
inc
(bad)
pop
xor
enter
imul
xchg
sbb
mov
imul
xchg
aad
sbb
outs
adc
inc
mov
out
dec
pop
mov
repz
and
dec
stc
add
es
inc
mov
push
jb
adc
repz
std
xchg
out
xor
test
pop
out
fstp
inc
nop
add
adc
pop
push
xlat
xchg
mov
sub
scas
retf
adc
iret
lods
shr
pop
push
adc
push
add
jle
fild
cmps
add
xchg
in
(bad)
mov
sub
push
jmp
add
pop
cli
jno
push
cmp
(bad)
shl
in
scas
dec
mov
stos
daa
xor
ja
lock
pop
adc
in
retf
test
mov
jle
mov
fs
or
add
pop
mov
mov
cld
pop
pop
fidivr
jne
jmp
xlat
adc
sub
hlt
dec
ins
inc
or
pop
mov
mov
daa
sub
add
in
into
not
push
hlt
xchg
inc
inc
add
(bad)
stc
aaa
mov
dec
out
cmc
loop
stos
daa
sub
xchg
cli
xchg
in
jno
jbe
adc
outs
les
dec
inc
jnp
in
sub
sbb
xchg
iret
loope
fldenv
push
pop
sbb
sbb
push
idiv
push
mov
mov
lods
popf
inc
push
push
sahf
xor
push
cmp
jno
inc
add
and
vpsadbw
ins
cmp
das
jne
mov
mov
jo
mov
pop
leave
ret
lods
fisub
push
pop
add
in
or
movs
rcl
repnz
adc
or
xchg
fsqrt
repnz
add
push
lods
mov
inc
and
pop
and
gs
push
fldcw
cwde
pop
fild
and
adc
mov
shr
dec
pop
cdq
or
scas
shr
inc
or
dec
inc
xchg
jge
or
push
jns
repz
xor
jle
jl
xchg
retf
push
jl
sbb
(bad)
leave
pop
push
mov
ret
(bad)
lods
adc
mov
cmp
mov
sub
stos
in
(bad)
das
cmp
or
dec
lahf
ret
ror
js
(bad)
aas
ja
mov
jp
pop
jl
push
movs
jo
xchg
lds
inc
sub
das
xchg
mov
jp
xchg
xchg
and
jle
push
aad
pop
cli
jl
and
mov
sub
icebp
jne
add
mov
sbb
jl
dec
xchg
adc
iret
dec
(bad)
retf
sub
scas
movs
jae
lods
ror
rol
movs
cli
das
cmp
or
and
sub
sti
mov
mov
ret
or
sar
jno
std
nop
es
cli
pop
dec
outs
es
cmp
mov
add
lods
sar
mov
je
fbld
push
adc
mov
sbb
xchg
jle
push
leave
jnp
jle
lds
adc
cs
std
and
scas
pop
test
retf
dec
xchg
sub
mov
pop
out
pop
add
popf
ror
sub
push
add
test
pop
push
repz
enter
sbb
stc
clc
sub
or
inc
mov
push
shl
cmc
cld
lock
mov
(bad)
imul
xchg
cdq
push
sbb
mov
jmp
adc
dec
into
in
adc
test
mov
push
inc
cs
and
in
cs
xchg
in
add
sahf
movs
hlt
push
pop
movs
fsubrp
je
dec
daa
sub
xor
iret
hlt
and
movs
ins
cmc
icebp
or
popa
push
jle
lods
movs
sbb
scas
mov
or
out
or
mov
mov
and
mov
adc
add
jp
cli
inc
or
mov
call
pop
stc
inc
cmp
push
loop
sbb
iret
pop
je
(bad)
adc
cmps
pushf
jo
jbe
repz
cmp
xchg
scas
inc
pop
inc
mov
adc
push
mov
lahf
xor
inc
inc
xchg
push
out
imul
or
pop
lahf
inc
ins
mov
mov
jne
or
or
mov
mov
mov
std
dec
js
fild
in
(bad)
dec
pop
stc
add
das
mov
push
pop
mov
stc
retf
xchg
enter
ret
or
ds
xor
lahf
(bad)
inc
movs
sub
test
stc
inc
(bad)
stos
daa
xor
nop
fs
iret
fisubr
sub
outs
lods
sbb
push
ins
mul
(bad)
mov
mov
cmp
push
pop
neg
bound
ret
mov
je
pop
imul
rcr
push
rcr
mov
xchg
jnp
pop
push
sbb
dec
inc
imul
and
retf
out
mov
xchg
mov
dec
xlat
and
or
in
jbe
sub
out
mov
in
cs
daa
adc
cmps
test
rcr
mov
jne
push
sub
nop
adc
and
jae
pop
sub
push
out
ds
in
xchg
mov
(bad)
push
xchg
cli
pop
xchg
pop
mov
scas
cmp
out
and
ins
or
lahf
pop
mov
aam
ret
xchg
jne
addr16
and
enter
in
adc
dec
int3
and
xchg
cmps
adc
xchg
mov
xchg
add
stos
and
xchg
jbe
jp
lds
arpl
repz
or
xchg
push
mov
stos
repnz
sbb
sub
mov
rcl
lds
ss
push
sbb
mov
(bad)
sbb
adc
test
das
int
jp
lea
or
jge
mov
jg
cvtps2pd
ja
adc
scas
dec
mov
stc
es
dec
fistp
or
mov
inc
mov
mov
jp
push
sbb
movs
call
xchg
jecxz
and
cmp
mov
xor
dec
inc
lods
jmp
pandn
fstp
punpckhwd
repnz
push
out
jmp
add
adc
jg
push
loope
(bad)
push
out
es
add
aam
fdivr
xor
(bad)
je
lods
pusha
mov
pop
xchg
sbb
sub
repz
aam
fisubr
push
leave
jg
fmul
xchg
cmp
cmp
jecxz
mov
ds
aaa
mov
jp
daa
jmp
shr
push
push
xor
xor
inc
xor
add
add
popf
(bad)
aad
sub
retf
sub
cmp
stc
jnp
test
pop
mov
fstp
mov
pop
and
push
retf
sub
(bad)
sub
call
imul
icebp
jbe
push
inc
divps
test
xchg
xor
(bad)
out
add
scas
out
dec
mov
shr
bound
jno
das
push
pop
fiadd
jg
shr
xor
popa
add
pop
retf
sbb
push
sbb
cli
ds
push
dec
(bad)
cmp
movs
retf
ins
enter
mov
mov
cmp
cli
ins
cmp
mov
aam
push
cs
imul
sub
sbb
jno
inc
(bad)
pop
in
(bad)
mov
pop
imul
lods
imul
in
adc
jmp
dec
mov
and
shl
aas
das
fs
add
retf
xchg
in
xor
je
or
das
or
call
xchg
mov
stos
pop
repz
fidiv
xlat
retf
fwait
xchg
push
push
cs
je
adc
jno
inc
add
fsubrp
and
jmp
jle
adc
dec
sub
fild
inc
lds
dec
add
adc
jne
push
mov
daa
inc
push
loope
xor
cmps
xchg
xchg
pop
mov
xchg
mov
cmp
test
jp
push
jmp
cmp
and
dec
adc
push
cs
and
repnz
call
mov
lods
cmp
(bad)
repnz
stos
and
pop
or
pop
in
push
cmp
frstor
lods
inc
cmp
pop
stc
inc
push
mov
jmp
jmp
jb
xchg
xchg
push
sub
leave
std
sub
inc
and
fucomip
rcl
aam
jl
sbb
inc
icebp
stc
cwde
or
(bad)
fs
jmp
jecxz
dec
stos
outs
call
(bad)
mov
movs
push
adc
in
adc
jnp
mov
sbb
xchg
in
xchg
stos
mov
mov
inc
cwde
xor
(bad)
and
mov
inc
add
pop
pop
cdq
push
dec
add
(bad)
jae
mov
sub
dec
cmps
add
repnz
dec
mov
lahf
test
add
mov
mov
and
hlt
push
pop
sub
retf
stos
xchg
jmp
in
das
(bad)
mov
test
sub
cmp
xchg
mov
stos
mov
jge
push
xor
lods
sbb
cmp
in
call
push
sar
xchg
pop
push
push
lahf
ja
push
jmp
in
sub
inc
fisttp
xchg
push
sub
mov
dec
dec
test
stos
mov
mov
mov
cli
push
adc
dec
mov
mov
mov
fadd
add
adc
fisub
mov
call
push
pop
dec
and
idiv
ja
fdivr
aaa
pop
fwait
pop
dec
push
(bad)
test
add
jno
ds
xchg
shr
clc
mov
push
leave
add
retf
fimul
out
retf
pushf
in
fidivr
out
sub
adc
fst
push
adc
sbb
xchg
std
adc
lahf
fbld
xchg
test
mov
fwait
(bad)
cmps
test
stos
retf
and
sti
cmp
je
pop
ret
pop
imul
jns
jp
(bad)
jmp
pop
stos
retf
xor
lahf
scas
jmp
push
sub
in
mov
in
dec
mov
stos
pop
mov
mov
ror
and
movs
or
add
cmp
pop
mov
jmp
adc
or
in
fs
sub
mov
popf
loop
fiadd
fadd
adc
(bad)
jmp
adc
jb
cmp
scas
test
dec
mov
or
add
jns
je
stc
jmp
adc
xchg
cld
aam
push
rcl
jge
pop
xchg
sti
retf
lds
stos
das
ins
mov
sub
mov
mov
sbb
fsub
and
ret
or
dec
loop
sti
dec
(bad)
rcl
jmp
xchg
jmp
jo
out
mov
ret
add
aad
adc
clc
stc
scas
dec
clc
jmp
mov
jmp
dec
lds
push
dec
adc
cmp
adc
jl
jno
pop
xchg
adc
imul
mov
inc
mov
and
sbb
mov
jle
mov
mov
hlt
pop
fild
pop
retf
scas
cmps
in
cld
xor
or
fldcw
push
inc
jl
mov
or
inc
xchg
jp
cdq
lods
push
cmp
mov
xor
hlt
scas
retf
(bad)
and
iret
cmp
inc
in
cld
sub
leave
aad
retf
mov
mov
mov
ret
mov
pop
cmp
jb
es
aaa
inc
test
sub
dec
cmp
lahf
mov
(bad)
js
lods
repnz
dec
(bad)
pop
push
into
dec
add
pop
(bad)
mov
out
mov
jmp
mov
imul
repnz
push
dec
fistp
sahf
mov
and
inc
scas
dec
sbb
adc
addr16
ficom
push
pop
out
sub
add
repz
imul
popf
div
cmc
sbb
(bad)
lahf
jb
inc
popf
push
pop
outs
test
push
(bad)
fbld
xor
cmp
cs
mov
test
mov
adc
adc
xor
cmps
jg
push
add
push
dec
cmp
pop
scas
movs
mov
and
int3
push
add
test
cmp
mov
push
mov
ret
inc
jo
call
out
ds
out
cmc
xor
jg
hlt
pop
mov
xchg
jno
xlat
mov
xor
xchg
mov
jmp
rol
push
xchg
add
sub
sub
jno
aam
adc
je
jle
xchg
lds
out
sar
inc
add
lods
das
fwait
adc
mov
and
dec
or
add
test
jmp
in
enter
aam
out
mov
push
dec
mov
lods
outs
lods
cmp
lock
test
aam
rcl
fmul
fcom
inc
push
in
out
lock
or
inc
pop
adc
shr
pop
popa
cmp
dec
test
loopne
fsub
(bad)
cdq
mov
stc
lea
push
test
push
mov
cmp
jne
sub
inc
jmp
pop
or
js
stos
int3
mov
jmp
xor
enter
dec
lods
sbb
push
sar
scas
dec
adc
mov
pushf
mov
adc
add
call
inc
les
out
fs
dec
and
cld
push
hlt
pop
cmp
xor
bound
xor
sbb
shr
jns
inc
jmp
les
call
psubd
mov
les
sbb
mov
and
idiv
add
mov
mov
bound
xor
imul
adc
call
and
adc
mov
frstor
xor
sti
mov
fisttp
push
mov
les
bound
mov
les
xor
dec
mov
and
stc
or
mov
mov
adc
xor
mov
ds
and
adc
bound
jne
adc
xchg
pop
sbb
mov
and
imul
les
bound
xor
ins
and
repnz
sbb
inc
mul
repz
mov
cmp
fdivr
bound
mov
and
std
stc
adc
mov
fcmovbe
and
les
(bad)
div
nop
maskmovq
test
adc
test
jl
push
xchg
adc
bound
bound
(bad)
nop
adc
mov
jle
inc
or
mov
pop
bound
repz
adc
loope
stos
cmps
loop
les
xchg
push
out
pop
les
bound
xor
(bad)
xor
jbe
inc
xor
adc
idiv
jge
cmc
sbb
rcl
out
mov
ins
div
or
popf
xor
lock
adc
repnz
je
jo
cwde
adc
sub
hlt
xchg
adc
adc
mov
les
addr16
xchg
bound
popf
mov
fadd
and
aas
inc
and
int3
mov
adc
(bad)
pop
(bad)
leave
bound
mov
icebp
mov
xor
fidiv
dec
sbb
mov
and
les
out
int3
bound
xor
out
pop
lea
inc
les
pop
dec
retf
ins
test
lahf
cld
je
fistp
inc
call
les
xchg
mov
(bad)
aad
mov
xor
jns
scas
loop
xor
sbb
inc
push
mov
(bad)
into
mov
les
sbb
in
mov
mov
jmp
bound
and
jmp
iret
mov
les
sbb
in
lods
sub
mov
and
out
out
mov
adc
mov
(bad)
repnz
mov
fadd
and
adc
adc
mov
fwait
shr
pop
mov
movs
mov
xor
sbb
enter
adc
ficom
mov
xor
sub
fwait
out
and
adc
mov
les
(bad)
call
mov
les
jl
xchg
adc
adc
mov
shl
imul
adc
out
and
call
mov
cmp
xor
pop
xor
mov
(bad)
ss
adc
mov
ror
pop
(bad)
shl
sbb
das
push
mov
dec
mov
mov
fidivr
cmps
movs
mov
les
out
mov
bound
test
add
inc
xor
call
mov
push
mov
xor
sbb
xchg
ins
xchg
sub
sbb
inc
cmp
(bad)
adc
mov
les
(bad)
hlt
xor
sbb
adc
bound
mov
les
es
sbb
inc
lods
and
pop
in
cmps
mov
mov
iret
mov
jmp
inc
sub
inc
cmp
test
jle
aad
or
cmc
aas
fidiv
and
adc
mov
mov
inc
cmp
and
push
xchg
pop
mov
(bad)
cmps
rcl
jo
(bad)
inc
nop
and
adc
mov
ins
bound
cmc
xor
mov
mov
jle
rol
ds
xor
sbb
inc
pusha
and
adc
mov
mov
(bad)
mov
bound
xor
inc
mov
outs
adc
pop
les
fwait
cli
and
adc
jmp
ja
adc
(bad)
pop
xor
inc
jp
cmc
adc
idiv
jge
pop
mov
lds
fld
xor
div
inc
sub
or
xlat
jns
sbb
mov
and
cmp
bound
cli
ja
fisttp
scas
mov
dec
icebp
cmps
mov
mov
std
je
mov
call
lea
cmp
cmp
xlat
sbb
iret
dec
(bad)
ja
cmps
scas
push
mov
mov
add
and
inc
and
bound
mov
bound
jmp
adc
stc
nop
scas
mov
pop
jmp
sbb
mov
es
not
jns
sbb
mov
pop
adc
mov
les
ins
fisubr
xchg
int3
mov
bound
mov
bound
ja
or
cdq
mov
rcl
mov
je
popa
and
fwait
mov
les
ins
fisub
jmp
pop
inc
mov
mov
les
(bad)
push
cdq
call
mov
test
imul
xor
outs
imul
inc
xchg
and
fistp
push
pop
in
bound
fcomp
pop
mov
and
ins
jmp
adc
mov
pop
rol
call
pop
imul
adc
mov
movs
jmp
mov
out
mov
cmp
xlat
jns
imul
mov
mov
mov
fbstp
and
adc
mov
les
sbb
inc
or
fst
xchg
mov
pop
jp
pop
das
jp
(bad)
inc
out
adc
(bad)
in
xor
ret
fadd
and
pop
mov
les
adc
pushf
dec
jp
lahf
scas
enter
(bad)
rcl
dec
mov
xchg
in
mov
jle
rcl
inc
push
das
jmp
jg
jne
enter
xor
inc
mov
imul
push
mov
cld
leave
jo
cwde
shr
test
les
and
aas
sbb
repz
mov
fisub
mov
les
inc
inc
mov
fadd
and
int
mov
sub
xor
mov
(bad)
lock
add
pop
adc
imul
imul
loopne
jns
jae
std
mov
sbb
mov
call
pop
xchg
mov
push
inc
mov
mov
loopne
aas
inc
daa
jmp
mov
jle
shl
jp
push
pop
push
lods
sbb
out
sbb
xor
sub
mov
out
mov
inc
bound
out
daa
push
int
adc
and
ja
hlt
and
scas
imul
mov
or
or
stos
cmp
scas
loop
xor
hlt
enter
jmp
sbb
pop
aad
inc
mov
jnp
dec
and
dec
sbb
mov
aas
mov
les
sbb
mov
and
pop
ret
mov
dec
rol
sbb
shl
cli
mov
xor
fdiv
test
dec
scas
mov
lds
push
sbb
mov
mov
adc
mov
xor
pop
and
adc
pextrw
adc
aam
mov
hlt
sbb
outs
scas
push
inc
and
adc
mov
ficom
std
and
adc
mov
lds
push
mov
xchg
not
mov
cs
lahf
das
addr16
cmp
rol
icebp
out
mov
bound
ins
je
adc
bound
mov
and
jno
cmp
xor
xchg
sti
or
scas
loop
xor
sbb
push
cmp
pop
xor
pop
lahf
ins
ja
adc
mov
fwait
hlt
and
dec
imul
sbb
dec
dec
adc
mov
repz
stos
mov
rcl
inc
je
shl
out
and
movs
mov
les
sbb
mov
fcmovb
out
jle
inc
ins
and
adc
mov
cmp
(bad)
mov
and
xchg
call
mov
outs
shr
adc
ss
scas
retf
pop
fmul
dec
sbb
xchg
ins
xchg
adc
sahf
and
sahf
mov
scas
enter
bound
cmps
cdq
mov
and
jno
sbb
mov
and
adc
mov
push
jmp
(bad)
clc
bound
mov
int
fs
lds
xchg
inc
(bad)
dec
push
pop
ror
xor
icebp
out
mov
scas
push
cmp
test
sbb
lahf
call
inc
cmps
bound
mov
pop
pop
test
(bad)
out
and
adc
bound
xor
sbb
mov
bound
xor
jb
inc
cmps
daa
xlat
sti
jno
repz
push
inc
fwait
mov
data16
jnp
inc
mov
xlat
jno
pop
std
and
lods
push
mov
imul
mov
es
(bad)
sbb
mov
jae
dec
mov
sub
jl
xlat
jno
outs
push
mov
retf
inc
sub
imul
mov
inc
aaa
daa
sub
arpl
fnstcw
shl
sub
xor
pop
pop
call
popf
ins
test
cmp
cmp
pop
call
es
pop
sbb
inc
mov
jl
mov
or
in
push
rol
loope
mov
ficom
pop
bound
and
adc
mov
lds
mov
xor
imul
xchg
push
in
or
mov
les
in
loop
adc
mov
push
stc
shl
dec
das
fdiv
and
adc
mov
ins
loope
std
ins
test
or
stc
mul
and
cmp
xchg
xlat
xor
cld
and
pop
mov
inc
pusha
and
cld
mov
call
or
and
push
or
inc
sti
daa
xor
jb
stos
bound
push
and
leave
ds
mov
out
adc
mov
jmp
sbb
in
pop
adc
and
cs
adc
mov
jg
jne
inc
and
sahf
arpl
push
fcmovu
and
mov
xor
bound
mov
mov
and
les
das
adc
(bad)
retf
pop
std
out
and
adc
xor
and
test
xor
push
pop
and
cli
fldcw
icebp
mov
and
adc
rcl
scas
push
in
bound
xor
inc
ds
pop
sbb
adc
inc
adc
push
dec
daa
mov
je
fs
push
hlt
mov
and
pop
cli
cmps
scas
mov
bound
mov
aas
call
(bad)
jmp
mov
and
adc
pop
les
bound
mov
cmps
xchg
mov
push
std
sbb
in
imul
xchg
and
jnp
mov
sbb
xor
dec
das
dec
pop
dec
inc
clc
call
mov
adc
adc
jge
jmp
adc
inc
(bad)
fisub
xor
aaa
mov
sub
xchg
jnp
repnz
in
bound
mov
es
not
jns
sbb
fwait
pushf
sub
(bad)
int3
fisubr
inc
mov
and
daa
mov
repnz
scas
repnz
pushf
sbb
jg
(bad)
mov
pop
xchg
rcl
rol
xchg
push
and
movs
xor
cs
mov
aad
adc
mov
les
sub
leave
rcl
fist
mov
cmp
jge
rcl
dec
jmp
fist
dec
mov
mov
inc
js
adc
scas
mov
dec
jmp
push
inc
std
push
mov
inc
nop
and
paddw
xor
jmp
or
pop
xor
out
or
imul
jmp
xor
xor
push
and
mov
adc
mov
les
sbb
test
js
call
and
adc
mov
jmp
icebp
mov
pop
inc
add
xchg
idiv
daa
mov
and
das
xor
dec
pop
mov
mov
(bad)
int3
push
xor
push
xlat
std
retf
or
dec
push
cdq
aad
aaa
sbb
mov
dec
scas
div
int
hlt
pop
in
bound
xor
cmps
ror
sbb
ror
adc
aaa
dec
loop
std
push
fs
push
dec
and
lds
mov
mov
idiv
mov
mov
sbb
imul
into
xor
aas
fisubr
jbe
ror
jo
fldcw
inc
mov
mov
les
ret
jnp
pop
(bad)
push
mov
out
daa
xor
out
and
(bad)
cli
bound
xor
les
loop
pop
pop
call
jge
mov
sub
jnp
adc
push
les
sbb
pop
repz
mov
les
out
push
lahf
ja
or
bound
sbb
xor
dec
int
push
movs
stos
fcmove
mov
mov
sbb
mov
call
mov
int
adc
lahf
les
bound
movs
bound
lods
ror
ror
pop
in
(bad)
out
push
sbb
mov
mov
mov
push
sbb
fnsave
jbe
shl
pop
out
push
ins
hlt
or
mov
xchg
lods
in
inc
and
or
iret
fdiv
rcl
sub
or
iret
adc
imul
sahf
push
xor
inc
mov
mov
(bad)
out
and
dec
mov
mov
les
sub
lock
jecxz
jno
sub
mov
call
repz
jno
sbb
dec
xchg
pop
scas
lods
dec
mov
loopne
test
xor
int3
out
mov
(bad)
(bad)
mov
hlt
stos
mov
sbb
mov
and
(bad)
cmps
mov
leave
xlat
mov
je
loop
mov
idiv
test
pop
ins
adc
cli
xchg
idiv
xlat
repnz
rol
test
xor
ds
lds
(bad)
xor
sbb
popf
in
adc
mov
mov
bound
std
or
mov
nop
ins
fisubr
das
mov
mov
ins
jmp
sar
loope
fs
sbb
xor
or
fadd
and
fld1
sbb
scas
out
and
ja
jae
cmp
pop
mov
daa
dec
xor
das
push
repz
inc
les
inc
adc
pop
ins
lods
ja
dec
mov
lods
bound
mov
lock
mov
mov
daa
inc
mov
dec
xor
sbb
mov
adc
std
mov
mov
bound
mov
fmul
test
pushf
xor
aad
popa
mov
rcl
xor
jbe
or
test
push
mov
xor
mov
test
iret
cmps
scas
mov
(bad)
sti
xor
sbb
mov
push
push
mov
inc
push
and
les
das
dec
cli
ja
movs
mov
les
(bad)
out
imul
jnp
mov
mov
fisub
xor
sbb
mov
das
adc
dec
in
aad
xchg
ss
daa
repz
das
addr16
jns
js
es
mov
punpckldq
xor
pop
dec
out
xchg
out
call
retf
sbb
retf
out
and
lds
stos
push
sbb
call
mov
pop
scas
call
imul
adc
mov
rcr
mov
push
std
mov
les
cs
adc
scas
neg
les
dec
xor
xor
sbb
dec
shl
xor
xor
mov
les
mov
pop
sbb
inc
and
adc
popf
in
sti
pop
inc
jbe
call
icebp
out
and
int
adc
mov
bound
pop
aam
mov
pop
in
sbb
push
mov
out
and
mov
adc
inc
cs
or
inc
lahf
and
fs
jmp
hlt
lods
ins
mov
ds
mov
mov
les
pop
adc
xlat
jno
sbb
sub
adc
jo
or
jno
jle
dec
and
adc
leave
(bad)
xor
imul
inc
mov
jg
inc
pop
sub
ret
xor
cwde
jle
ror
sbb
xchg
jae
inc
or
push
in
aaa
ja
das
mov
les
bound
sbb
mov
push
lods
int3
movs
add
or
sbb
(bad)
or
lea
cld
(bad)
jg
test
sub
cdq
and
cli
add
push
or
or
or
add
mov
mov
or
mov
inc
sub
push
push
test
je
mov
mov
mov
ror
stos
and
jg
jecxz
sbb
push
fwait
mov
xchg
adc
push
call
nop
or
cld
cmp
sbb
adc
add
xchg
in
jmp
or
inc
retf
xchg
inc
push
push
mov
add
call
push
lods
mov
add
test
jns
pop
repnz
mov
out
test
ret
xchg
push
ds
mov
push
mov
dec
jmp
adc
adc
fbld
push
popf
inc
cmp
adc
dec
mov
imul
adc
sbb
pop
push
sub
xchg
mov
mov
inc
in
mov
in
(bad)
sub
inc
out
and
jle
xor
fs
xor
mov
test
push
shl
or
xchg
jp
(bad)
xchg
inc
push
in
adc
sub
rcr
and
and
push
pop
pop
mov
inc
js
(bad)
dec
add
xchg
inc
pushf
xchg
mov
sub
xor
xchg
ds
jae
test
ret
inc
icebp
fs
jb
sub
inc
cmovl
dec
in
icebp
or
sbb
cmp
pop
jne
fs
enter
dec
push
or
sbb
jge
dec
push
icebp
xor
cs
mov
and
cmp
xor
push
ins
cmp
inc
adc
loopne
mov
ror
retf
add
sete
mov
add
or
add
pop
cmp
sub
xor
and
call
xor
clc
stos
jmp
pop
pop
inc
test
add
pop
clc
mov
and
or
repz
fwait
and
jle
ret
ins
xor
jmp
or
lahf
dec
and
cld
jp
or
xchg
call
jmp
aam
push
push
or
inc
or
or
retf
add
test
sar
and
(bad)
mov
xlat
and
test
mov
sahf
mov
mov
popf
mov
and
int3
add
or
es
sbb
mov
dec
fisttp
clc
or
dec
sbb
sti
or
add
daa
mov
sub
push
fisubr
pop
sub
sbb
add
cmp
sub
sbb
inc
cmp
loope
test
leave
je
dec
hlt
popa
sub
mov
call
dec
mov
(bad)
mov
test
inc
or
movs
adc
adc
and
(bad)
rcr
inc
rol
mov
push
and
shl
inc
xchg
mov
adc
and
pop
retf
les
inc
les
loope
push
sbb
mov
mov
aam
retf
inc
push
inc
sub
or
or
stc
inc
mov
mov
and
fsubr
int3
or
pop
jmp
dec
(bad)
outs
stos
mov
iret
push
add
and
lods
dec
push
mov
xor
sbb
iret
fs
shr
jb
cld
stos
call
iret
mov
mov
push
cmp
mov
pusha
fs
adc
mov
js
jae
or
push
sbb
movs
and
mov
lock
pop
shl
sbb
lods
mov
inc
cmp
add
ja
add
rol
push
loopne
xchg
pop
pop
adc
sbb
pop
sbb
pusha
inc
jmp
pusha
cmp
mov
lds
shl
test
jmp
cmp
cs
jo
(bad)
mov
test
cmp
sub
fs
inc
ins
mov
inc
sbb
fmul
mov
adc
push
add
push
jmp
call
sar
loop
jno
inc
xor
xor
mov
adc
pop
push
lahf
shl
dec
pop
mov
pop
out
or
and
inc
xor
enter
pop
xor
int3
lea
fmulp
jmp
mov
push
push
jmp
dec
cmp
lea
mov
inc
jmp
data16
sbb
xchg
pop
push
ja
mov
sar
inc
inc
fsubr
bound
push
push
jge
cmp
push
push
push
mov
and
jmp
jmp
xor
xchg
adc
push
clc
mov
mov
add
adc
mov
jle
jo
mov
sahf
mov
xchg
sub
add
pop
cmp
call
xor
or
adc
daa
jmp
shl
mov
mov
xchg
cmp
jb
push
sbb
dec
adc
(bad)
or
iret
call
and
cmp
(bad)
or
dec
shl
mov
ja
jle
jns
pop
and
or
test
movs
loopne
jno
cmps
pop
call
add
mov
sar
sub
ldmxcsr
pop
retf
je
loop
or
pusha
adc
retf
dec
nop
loopne
ja
jl
jmp
push
inc
(bad)
lock
pcmpgtb
mov
mov
loopne
test
sub
mov
fwait
outs
scas
and
add
or
add
shl
div
arpl
jo
fdivr
mov
into
cld
movs
cmp
int3
in
call
pop
test
and
jg
add
xchg
adc
aam
inc
inc
push
inc
mov
xchg
add
push
arpl
xor
add
inc
test
jmp
dec
cdq
stos
movs
sbb
mov
mov
mov
mov
and
dec
cpuid
cmp
mov
int3
jae
not
xchg
iret
push
push
push
mov
repnz
xchg
lods
adc
mov
xchg
repnz
sub
adc
adc
loop
fucomp
shl
adc
int
and
and
cmc
ret
sub
xchg
jg
nop
or
hlt
sti
cmps
fmul
shl
push
repnz
pop
dec
pop
adc
push
cmp
pop
pop
jno
xor
or
inc
dec
call
test
sbb
push
ret
mov
jne
mov
mov
sbb
(bad)
pop
sbb
hlt
clc
and
pop
rcl
jne
loope
pushf
ins
mov
adc
enter
push
cld
and
sub
dec
mov
cli
adc
in
pusha
stos
mov
stc
push
iret
mov
das
mov
enter
sbb
test
xchg
and
sbb
or
inc
test
sub
xor
adc
test
adc
mov
inc
or
inc
sbb
stc
and
push
add
jmp
ret
cli
sbb
sub
jmp
push
push
mov
sbb
cmc
and
push
xor
jmp
sub
sbb
sub
dec
sub
dec
inc
or
pusha
xchg
jns
sub
sub
mov
adc
scas
setnp
leave
cmovno
stc
pop
jg
call
ins
adc
and
jb
aas
repnz
hlt
adc
mov
cmp
inc
lds
test
push
popa
retf
adc
pop
jb
xor
xchg
sub
cli
sub
inc
push
(bad)
xchg
mov
mov
and
enter
and
or
sub
push
sbb
call
mov
and
xchg
and
push
xor
jmp
leave
dec
or
add
(bad)
and
int
cmp
dec
xchg
jns
aaa
pop
lds
dec
imul
xor
into
(bad)
pop
int
lahf
adc
cmp
shl
dec
inc
inc
pop
les
dec
sbb
push
dec
add
int3
ss
mov
sbb
int3
cmp
or
and
dec
ret
rcl
and
dec
ror
jmp
fisttp
int3
repnz
xor
add
add
pop
pop
adc
mov
dec
iret
sbb
fs
and
mov
push
shr
gs
and
pop
push
push
add
mov
sbb
adc
mov
das
rcr
or
cmp
es
popa
adc
and
pusha
out
pop
ret
repz
mov
sub
xor
push
add
mov
dec
xor
xchg
adc
in
inc
cmp
jne
mov
add
sub
cli
sub
test
mov
retf
add
leave
int3
inc
cmp
push
out
cdq
lods
inc
mov
test
pop
loopne
pop
not
add
in
add
test
mov
test
(bad)
sar
sub
mov
es
retf
and
add
stc
mov
bound
push
mov
mov
in
or
inc
sub
and
xchg
adc
(bad)
adc
mov
mov
add
test
les
ret
sub
bound
bound
arpl
inc
adc
clc
sahf
adc
mov
xor
dec
clc
push
jbe
mov
adc
dec
xlat
cmps
hlt
or
push
jne
or
xchg
leave
mov
sbb
je
nop
add
aad
pop
aaa
cmp
stc
cmp
clc
mov
enter
test
mov
mov
adc
mov
fadd
inc
loopne
adc
jne
inc
add
mov
push
movs
jmp
jns
outs
mov
in
and
call
add
lock
push
(bad)
jl
call
jmp
test
cld
add
movs
sbb
enter
in
sbb
add
push
xlat
les
mov
xchg
add
fwait
ds
cdq
add
mov
mov
pop
data16
push
and
xchg
push
mov
adc
mov
push
(bad)
call
adc
jge
xor
and
leave
dec
inc
xor
inc
jns
or
jmp
push
mov
loopne
push
push
jmp
or
push
fsubr
sbb
jmp
xchg
mov
and
pop
adc
dec
mov
out
cli
adc
or
add
and
xchg
mov
dec
xorps
push
loope
repz
add
lea
cli
add
inc
cmp
out
test
ja
push
nop
or
fst
and
rol
bound
sub
adc
add
lea
mov
mov
inc
mov
and
xchg
push
fs
lock
rcl
inc
mov
dec
mov
out
popf
and
cmp
aad
enter
sub
popa
adc
call
adc
xor
in
xchg
scas
sahf
(bad)
push
(bad)
sbb
xchg
(bad)
jl
lods
movs
ins
fs
push
sbb
mov
push
or
xor
sbb
mov
or
ss
xchg
push
dec
cmp
(bad)
adc
ds
vunpcklps
je
or
sub
add
sti
sar
and
or
lea
and
and
and
scas
mov
sub
dec
in
mov
cmp
lock
call
ror
xchg
xchg
cmovle
lahf
jg
or
cmp
add
add
cmp
adc
lahf
(bad)
xchg
clc
and
movs
jge
cmps
add
and
clc
adc
add
mov
in
add
cwde
push
cld
add
or
ds
cmps
popf
xor
jp
popf
fwait
int3
fadd
cmp
scas
ins
cs
xchg
movs
adc
adc
push
inc
and
int3
imul
or
or
out
shr
push
push
test
push
mov
icebp
jnp
cmp
xchg
push
adc
push
call
(bad)
mov
sbb
adc
xchg
retf
xchg
jmp
movs
push
(bad)
mov
or
cmps
adc
jp
jo
in
or
jns
jl
jne
and
sbb
mov
clc
xchg
jne
test
imul
shr
je
add
and
sbb
pop
xchg
stc
xor
aas
int
mov
sbb
dec
rol
popf
xchg
add
out
inc
mov
lods
scas
mov
jge
sbb
outs
sub
pop
enter
adc
call
test
data16
(bad)
in
mov
es
sbb
push
cmp
push
and
adc
sbb
pop
out
and
push
dec
sbb
fsubr
pop
jae
jmp
sbb
adc
xor
lock
mov
sub
(bad)
add
jmp
sbb
adc
adc
mov
push
mov
mov
es
cmp
dec
jge
push
test
adc
fcomp
dec
ins
and
mov
in
fadd
jbe
mov
mov
pop
pop
sub
movs
sub
jmp
sbb
adc
cdq
or
or
and
xchg
aam
fs
sbb
sub
add
sub
loope
iret
mov
push
dec
lock
mov
dec
adc
push
nop
adc
add
es
sbb
sub
mov
inc
pop
sbb
cmp
cmp
jmp
loopne
dec
sub
rcr
xor
mov
pop
les
lds
pop
jecxz
and
mov
dec
je
enter
daa
mov
push
push
or
lea
inc
push
mov
mov
pop
inc
and
cmp
(bad)
mov
dec
mov
std
in
loop
push
into
shl
and
jbe
and
mov
loope
mov
mov
sbb
mov
cmps
xor
lods
(bad)
inc
inc
mov
push
leave
xor
adc
nop
adc
mov
sub
mov
inc
and
pop
mov
mov
pop
mov
bound
sub
jmp
fmul
xchg
mov
dec
sbb
cmp
test
and
adc
mov
cs
in
add
adc
pop
or
into
movs
xchg
cld
mov
and
pop
arpl
cmp
imul
lods
dec
cmp
shr
scas
sub
jb
sub
fmul
push
mov
out
and
(bad)
in
in
out
aad
daa
call
or
add
and
xchg
bound
stc
sar
dec
lea
sbb
cli
or
or
enter
popa
fadd
rol
xor
mov
ret
cmp
and
mov
imul
ss
xor
jg
or
xchg
rcr
xor
push
dec
rcr
and
add
mov
add
xor
loop
inc
cdq
inc
xor
sbb
dec
fsubr
loopne
fild
or
cld
adc
add
xchg
xor
or
movs
jle
stos
xchg
or
icebp
and
xchg
xor
jnp
outs
mov
cmp
and
and
and
sbb
and
inc
dec
push
popa
pop
inc
ret
in
and
jl
sub
fist
jne
bound
sub
je
push
jg
shr
mov
clc
mov
adc
lahf
lock
cmp
pop
jl
movs
clc
add
hlt
xor
inc
adc
in
push
jno
xor
jo
jp
sbb
push
pop
push
push
jge
push
inc
inc
xchg
movs
jb
dec
pop
and
lea
dec
add
xchg
fsub
hlt
push
pop
push
and
in
dec
push
movs
icebp
sub
push
mov
inc
push
das
mov
sti
js
add
xor
push
jmp
aam
xchg
std
outs
leave
nop
cmp
push
sub
call
add
int
into
sti
hlt
nop
in
jg
sbb
inc
ins
push
sbb
and
(bad)
loopne
popa
or
add
fsub
leave
loop
cld
cmps
sub
pop
iret
add
int3
adc
mov
pop
movs
jmp
mov
xchg
pushf
movs
sbb
out
adc
es
leave
ds
and
or
push
push
sbb
inc
sub
ja
sub
(bad)
fcmovnb
shl
cld
gs
add
cmps
lea
adc
iret
das
xchg
xor
adc
in
jp
and
call
mov
in
dec
push
repz
data16
loop
dec
(bad)
rcr
imul
xchg
push
pop
dec
and
in
je
xchg
int
xchg
xchg
in
jecxz
xchg
repnz
loope
test
cmp
adc
rcl
jbe
mov
add
jo
test
or
jg
cdq
int
adc
dec
rcr
push
cmp
test
xchg
push
xchg
and
pushf
test
test
ss
or
or
iret
or
mov
cld
and
ins
pusha
mov
test
mov
inc
cs
pop
push
or
stc
jge
ret
ins
bound
int3
or
or
(bad)
jmp
adc
es
dec
mov
xor
mov
add
out
fistp
push
les
and
and
dec
or
repnz
and
push
into
cwde
inc
pusha
ins
or
mov
iret
mov
into
add
push
mov
xchg
or
xor
cmp
outs
sbb
cld
test
dec
lea
movs
mov
xchg
push
and
dec
cmp
mov
mov
out
call
add
pop
and
pop
and
mov
rcr
jbe
cld
gs
sti
xor
xchg
and
mov
pusha
inc
adc
bound
cli
inc
or
sbb
ret
jne
pop
jge
mov
sub
jmp
test
ins
sub
sub
mov
int
xchg
inc
cmps
cmp
or
daa
jne
mov
push
jmp
add
shl
push
inc
test
xor
pusha
add
cmp
sbb
cdq
sub
push
xchg
hlt
pop
push
and
fsub
or
mov
daa
cmp
mov
pop
and
sti
lea
ds
push
xchg
mov
add
sub
cmp
add
xchg
mov
out
push
paddw
pop
stc
cmps
(bad)
xor
cmps
les
test
inc
push
and
xor
push
inc
push
cmps
imul
mov
adc
sub
dec
or
(bad)
sbb
popf
dec
jae
xchg
or
inc
jae
fcmovb
sbb
je
sub
cmp
mov
pop
dec
or
nop
shl
mov
jmp
xor
repnz
mov
sub
pop
and
popa
add
gs
xor
xor
mov
bound
icebp
outs
ja
mov
mov
add
sbb
jmp
mov
and
dec
test
add
jge
dec
lea
cs
push
adc
push
inc
cmp
daa
pop
mov
fwait
dec
and
sub
rcr
xchg
xor
xchg
loop
add
adc
cmp
call
arpl
mov
or
push
add
mov
and
mov
fmul
and
xchg
adc
xchg
loopne
adc
and
outs
sar
mov
in
pop
push
ret
and
cmp
push
inc
or
push
mov
pop
xchg
sub
pop
call
lock
loopne
cwde
rol
popa
jne
push
mov
sub
mov
mov
je
cwde
dec
or
xor
fisubr
fist
sti
sti
sub
adc
fcomp
dec
mov
sub
pusha
leave
out
adc
jae
xor
pop
pop
call
mov
xchg
adc
jno
test
mov
sbb
or
and
cld
and
cmp
and
retf
push
xchg
inc
js
gs
sub
inc
into
and
mov
push
ror
xchg
mov
sub
mov
vpmadcswd
(bad)
not
cmp
call
or
inc
les
into
and
inc
mov
les
out
cmps
das
outs
inc
push
or
pusha
pop
fld
jmp
jns
sub
or
(bad)
adc
or
dec
movs
fdiv
mov
adc
ins
or
je
push
clc
sub
es
mov
jno
mov
push
fisttp
test
xor
sbb
ja
sub
ret
retf
dec
js
cmp
icebp
sub
push
jo
dec
and
inc
adc
aad
mov
bound
adc
xchg
mov
cld
mov
sti
add
popa
sub
popa
or
push
mov
cmp
retf
or
cld
mov
dec
or
test
add
sub
pop
mov
test
jmp
add
jo
lods
in
ret
push
sbb
add
call
cmps
cmp
adc
inc
sbb
loopne
add
and
loopne
pop
or
nop
mov
add
and
add
das
cwde
bound
jno
movs
test
add
mov
aas
fnstsw
(bad)
lods
push
mov
test
test
jg
and
retf
jnp
scas
inc
xchg
outs
inc
and
mov
pop
dec
push
jp
xor
or
dec
inc
les
dec
xchg
xlat
adc
icebp
je
adc
inc
mov
pop
add
jmp
inc
jnp
adc
add
jnp
test
nop
jnp
and
xor
inc
mov
iret
mov
imul
xchg
call
or
sbb
jge
cmpxchg
push
enter
pop
adc
and
adc
add
ret
test
dec
(bad)
mov
xchg
inc
and
push
loope
dec
and
jle
dec
add
or
popf
mov
sbb
arpl
ja
add
popf
inc
arpl
sbb
pop
xor
jbe
aas
dec
xchg
mov
adc
sub
daa
adc
arpl
push
adc
mov
adc
mov
xchg
repz
and
int3
adc
xor
pop
sbb
jno
mov
das
push
mov
jo
sub
lods
shl
idiv
adc
or
hlt
push
pop
dec
mov
and
shr
or
mov
bnd
or
xchg
pusha
push
xchg
es
adc
xor
adc
test
test
rdtsc
add
jmp
bound
mov
cli
inc
pop
movs
mov
test
(bad)
or
inc
test
and
ins
les
and
adc
or
or
push
add
bound
mov
dec
push
xor
push
push
xor
adc
add
inc
sub
ret
add
mov
push
call
cmp
in
sbb
es
adc
movs
push
pop
and
cld
jmp
fidivr
out
sub
sub
je
inc
lock
and
add
mov
leave
cmps
call
repz
stc
and
stc
or
jmp
fdivr
sub
fst
cmc
mov
out
sbb
pop
loopne
sub
stos
call
sbb
in
je
mov
(bad)
lods
shl
adc
add
sbb
and
jb
pop
or
and
or
int
mov
xchg
mov
xchg
mov
pop
inc
push
push
sub
aad
inc
push
jl
fisubr
jmp
and
sub
add
jle
outs
(bad)
stc
inc
mov
mov
push
loope
ret
and
and
adc
sub
pop
mov
inc
dec
push
pop
inc
shl
test
jno
or
popf
loop
cmp
sbb
sahf
xchg
dec
lea
mov
sbb
nop
int
add
outs
nop
xor
lods
or
add
fwait
or
lock
ins
add
sbb
repz
adc
xchg
in
xor
inc
push
movs
pop
mov
mov
inc
rcr
inc
les
sbb
add
sbb
add
mov
jg
and
cmp
outs
xchg
or
add
scas
into
pop
mov
neg
fs
and
mov
jbe
cmp
shl
inc
rol
imul
out
movs
jae
mov
add
cmp
jne
outs
push
fs
pushf
sti
adc
dec
cmp
jae
jmp
test
add
mov
and
cmp
and
push
sbb
adc
ds
mov
ins
and
jmp
dec
ins
fbld
fcomp
adc
dec
cwde
cmp
and
xor
add
adc
mov
push
xor
mov
adc
fnstenv
xchg
cmc
dec
mov
rcr
repnz
mov
jb
out
aas
pop
ss
pop
out
sub
and
jecxz
or
addr16
scas
or
inc
dec
shl
jo
cmp
inc
mov
ror
or
xchg
sbb
mov
aam
fcom
inc
pop
test
mov
xchg
jns
leave
fcom
sub
inc
nop
and
test
stos
das
xchg
push
mov
or
mov
and
mov
and
adc
ins
mov
add
or
out
shl
dec
lea
sbb
nop
sub
in
or
adc
mov
add
push
rcl
mov
adc
jmp
(bad)
jl
test
addr16
sub
fmul
js
mov
adc
mov
mov
and
lods
ins
sbb
cmp
fxch
inc
mov
mov
out
sbb
push
sar
iret
mov
cmc
pop
lahf
rcr
inc
je
xchg
cmp
push
ss
xchg
lods
dec
fisttp
push
sub
ror
out
rol
daa
(bad)
in
in
lahf
sbb
icebp
cmc
inc
xchg
adc
or
xchg
mov
sbb
jns
mov
push
test
mov
loopne
dec
in
adc
sub
or
and
retf
sub
jo
push
daa
in
mov
daa
xchg
(bad)
out
inc
dec
inc
das
rcl
jge
jns
xchg
fwait
ss
test
mov
in
ror
popa
mov
add
es
and
popa
sub
(bad)
test
clc
adc
sbb
and
inc
mov
inc
lods
mov
mov
and
xchg
mov
mov
jnp
mov
inc
push
hlt
mov
push
cmp
ficomp
cmps
or
test
or
adc
mov
pusha
sub
fstp
cmp
movs
ror
push
mov
dec
aaa
ret
out
xchg
movs
in
push
push
fs
add
cld
popa
or
add
xchg
imul
jb
or
mov
into
lahf
xchg
cmps
and
es
pop
pop
sub
sub
adc
das
or
je
sbb
addr16
je
cmp
ret
ss
add
or
or
sub
mov
sub
pop
and
lods
add
mov
pop
sbb
xchg
lds
pop
push
inc
sti
ja
sbb
and
int3
xor
out
push
inc
mov
outs
sbb
mov
hlt
mov
adc
jg
pushf
and
lods
sub
mov
dec
dec
mov
dec
test
mov
mov
test
mov
scas
push
lea
add
in
adc
ficomp
enter
pop
call
cmp
cmp
xor
pop
push
mov
and
jge
lock
retf
xor
jno
jmp
pop
out
jg
aam
sbb
imul
sbb
push
jo
lds
mov
xchg
cli
push
movs
pop
adc
loop
and
retf
retf
cvtps2pi
cli
retf
and
push
es
out
out
cmps
xchg
mov
je
push
jle
gs
out
ins
xchg
(bad)
adc
mov
jl
pop
shl
lds
cwde
pop
xor
add
daa
mov
dec
repnz
jbe
mov
xchg
mov
jl
rcl
pop
or
sub
dec
addr16
push
and
mov
jl
pop
mov
push
push
xchg
lods
daa
ret
jmp
stos
mov
in
add
aaa
lods
sub
lock
popf
jo
adc
dec
stos
fdivr
jnp
ins
or
mov
mov
inc
ja
fs
mov
xchg
bound
popf
and
jns
push
int
daa
(bad)
pop
aaa
test
(bad)
pusha
add
mov
les
lods
std
xor
and
adc
sti
(bad)
fadd
test
push
(bad)
mov
mov
(bad)
cmp
dec
and
in
js
pusha
mov
sbb
mov
leave
gs
shl
add
ret
clc
or
hlt
sbb
js
or
shl
lods
ret
push
shl
repnz
sub
dec
out
or
xchg
repz
jecxz
adc
dec
sub
std
jg
jae
movs
and
mov
in
stos
fst
push
popa
xor
mov
or
lahf
add
call
push
fnsave
ins
out
and
out
in
out
pop
xchg
fsub
cmp
jne
ret
sub
mov
jge
push
and
ror
jmp
mov
popa
add
repnz
mov
dec
movs
dec
fld
fcom
cwde
mov
add
pop
hlt
imul
ror
cmp
inc
sub
adc
aad
adc
mov
push
dec
adc
jg
xchg
jle
and
jne
fsubr
pop
pop
add
sti
xor
jge
dec
add
and
test
push
loopne
mov
or
mov
mov
and
lods
jmp
pusha
add
sahf
mov
call
or
sub
push
enter
in
daa
lock
cli
push
mov
jp
lahf
cdq
sbb
xchg
into
add
fs
inc
jo
adc
adc
cmps
rcl
xchg
ins
out
and
test
dec
pop
xor
je
les
push
ins
call
dec
and
pushf
mov
gs
les
xor
dec
push
ds
lods
(bad)
and
mov
push
lock
(bad)
(bad)
aas
xor
push
ins
adc
inc
test
add
push
js
adc
xchg
jl
mov
jmp
sub
add
xor
mov
mov
rol
mov
div
or
dec
push
call
sub
outs
icebp
retf
adc
mov
into
inc
mov
aam
push
seto
or
or
push
mov
xor
mov
and
or
mov
or
mov
or
mov
mov
lods
cld
ss
and
pusha
ret
mov
pushf
fistp
and
add
sbb
or
int
jmp
sahf
sub
aam
mov
neg
adc
sub
into
aas
or
lea
retf
dec
int
ds
mov
dec
push
test
xchg
mov
xchg
pop
mov
xor
ins
test
sbb
mov
jle
sbb
add
mov
mov
jno
and
cwde
inc
xchg
dec
pop
lods
sbb
push
sbb
int3
inc
pusha
adc
cmp
in
pop
pop
mov
xchg
sbb
sbb
jne
dec
mov
sub
stc
retf
sbb
inc
and
mov
dec
fsubr
or
and
adc
mov
not
ins
cmps
adc
inc
mov
sub
fst
fisubr
cdq
movs
stos
mov
push
mov
and
sub
neg
xchg
xchg
or
test
add
scas
pushf
mov
sbb
lock
fcomip
or
pop
jge
shl
mov
repnz
adc
adc
inc
movhps
lods
and
dec
push
and
out
push
daa
pop
inc
or
loope
pusha
test
push
and
mov
imul
call
jl
inc
lock
add
add
je
dec
push
and
mov
jp
lahf
inc
aaa
xchg
xor
fst
xor
push
mov
je
mov
(bad)
int3
das
sbb
adc
(bad)
out
or
enter
mov
inc
or
test
sbb
jbe
nop
push
inc
ror
shr
xor
fsubr
or
and
ret
and
pop
inc
loopne
cwde
repz
and
mov
movs
fsub
bound
fsub
and
mov
and
ret
and
pop
push
fdiv
mov
xchg
or
inc
mov
xchg
aam
and
sbb
enter
in
push
and
cmp
adc
xor
stos
js
or
jmp
adc
test
cld
pop
dec
pop
mov
and
js
icebp
movs
and
or
icebp
jle
ja
and
sub
leave
fmul
push
push
xchg
stc
mov
pop
ss
jb
imul
aam
jne
popa
lahf
sbb
or
mov
stc
fldcw
add
mov
std
adc
inc
xchg
das
mov
jnp
dec
xor
xor
mov
sub
xchg
lds
xor
in
or
push
mov
mov
sbb
shl
push
jg
retfw
adc
cmp
dec
ret
pop
dec
push
mov
lods
mov
stos
movs
add
mov
sub
call
sub
(bad)
stc
leave
rcr
clc
sub
inc
les
xchg
sti
shl
sub
out
inc
or
inc
jecxz
pop
test
cmp
add
or
add
sbb
inc
sub
xor
adc
and
adc
sbb
pop
sub
rol
jne
cli
not
xchg
add
retf
push
enter
pop
mov
jl
mov
xchg
inc
and
inc
mov
lods
adc
and
ret
push
jne
adc
fs
ds
add
pop
loope
stos
jmp
or
or
xchg
jg
fist
outs
xor
sub
clc
out
mov
cld
add
aam
gs
cld
popa
movs
mov
sbb
xchg
in
js
fadd
mov
out
in
or
or
sbb
cmc
push
sbb
(bad)
call
(bad)
int3
or
rcr
loop
sbb
sbb
sbb
sbb
sbb
sbb
test
shl
sbb
mov
mov
mov
iret
mov
mov
lods
pop
nop
lock
movs
repnz
adc
jge
inc
movs
jge
inc
test
pushf
pop
nop
cwde
mov
adc
repnz
hlt
(bad)
cmp
ret
shl
sahf
dec
mov
jge
mov
lock
cmp
mov
sub
push
sbb
mov
jg
pop
stc
cmp
inc
(bad)
add
xchg
xchg
sahf
push
out
adc
adc
test
mov
xor
add
push
in
les
out
rcr
fwait
sbb
mov
sub
nop
popa
inc
ins
ins
arpl
lock
mov
mov
pop
jp
imul
sub
test
or
fsub
fsub
js
stc
je
retf
mov
cmps
pusha
bswap
ins
pop
inc
jo
fs
adc
jo
mov
ins
iret
mov
jo
fs
pusha
pop
xchg
xchg
fcmovne
dec
jle
pop
repnz
pop
adc
push
xchg
jge
inc
pop
jge
inc
pop
and
nop
dec
mov
repnz
pop
nop
dec
mov
xor
in
xor
xor
cmp
cld
cmp
nop
dec
pop
inc
xchg
mov
adc
ror
or
int3
sar
mov
dec
retf
les
lods
push
aam
inc
mov
mov
aas
pop
and
lods
cmc
pop
test
inc
or
push
mov
or
xchg
fs
jecxz
sbb
lahf
loope
shr
ja
cmp
xor
and
mov
in
clc
cmp
and
push
mov
jne
cmp
mov
inc
xchg
pop
push
daa
in
test
ret
outs
ror
in
data16
div
pop
xchg
and
xchg
fild
adc
pop
mov
inc
cld
adc
out
mov
mov
aaa
cli
jmp
add
jl
adc
lea
or
pushf
std
inc
and
adc
xchg
and
and
sbb
or
mov
or
mov
or
mov
test
xor
inc
adc
sub
mul
dec
iret
mov
icebp
or
jle
sti
or
mov
or
mov
stos
jo
in
xor
in
(bad)
clc
in
cld
inc
in
lock
(bad)
hlt
in
cld
mov
inc
or
test
sbb
iret
push
and
in
xor
xchg
and
jno
or
fsub
fsub
fcom
sub
push
xor
mov
xor
sub
inc
and
les
xchg
mov
icebp
cmc
add
sub
retf
(bad)
rol
xor
jge
jo
out
fcomp
in
(bad)
loopne
les
movs
adc
mov
push
dec
stos
retf
dec
in
or
xor
scas
rol
xchg
cmp
stos
adc
or
pusha
sahf
adc
xor
test
ins
hlt
jnp
jl
aam
lods
inc
aas
icebp
sub
ds
cwde
adc
add
mov
mov
add
sahf
jns
push
leave
ror
add
mov
into
punpckhwd
icebp
adc
pushf
sti
xchg
xchg
xchg
push
mov
adc
repz
mov
sti
jns
idiv
jle
daa
aam
push
inc
fadd
push
call
push
(bad)
xchg
cwde
inc
cli
fsubr
push
dec
mov
imul
in
or
push
fs
inc
add
add
dec
test
movs
sbb
loope
lea
add
inc
stos
xor
jmp
pop
mov
jmp
jne
mov
sbb
pop
jge
mov
iret
mov
pop
clc
mov
nop
lock
adc
in
clc
sub
into
jg
mov
jnp
pop
mov
pop
aad
test
hlt
xchg
jo
sub
push
stos
movs
push
mov
test
das
or
push
xchg
adc
outs
int
push
stc
and
inc
pop
loope
les
adc
sub
leave
sub
jge
std
cli
or
aam
call
dec
outs
mov
ret
call
or
dec
jb
or
dec
mov
sub
mov
mov
push
stos
ret
adc
aaa
add
push
mov
ret
inc
div
stos
ror
xor
mov
jnp
add
jmp
jp
loopne
push
popf
stc
and
cmp
add
and
push
adc
icebp
loopne
mov
in
aas
das
out
mov
xor
ja
das
push
gs
fild
sub
mov
cmc
stos
int
or
push
mov
fs
mov
out
push
xchg
cmps
das
je
sbb
cmp
icebp
cdq
pop
or
iret
jle
ins
jmp
dec
es
pop
sub
or
es
fldenv
sahf
pop
cmp
add
push
gs
les
add
lds
add
xchg
add
push
pop
addr16
xchg
fsub
adc
lea
adc
sbb
and
dec
mov
(bad)
lods
or
adc
call
xchg
and
(bad)
pop
outs
aam
lds
ret
nop
lods
cmp
shr
xor
lods
int3
inc
add
mov
call
sub
push
sub
mov
push
jbe
mov
mov
int
inc
les
int
jnp
jecxz
sbb
add
mov
or
mov
repz
cmp
push
or
dec
repnz
out
cmp
aam
add
adc
sbb
push
dec
data16
sub
and
or
push
int3
and
and
js
add
call
jg
adc
jno
mov
and
mov
push
xor
xchg
test
aas
jge
sbb
mov
cmp
rcr
jnp
out
and
ins
fdivp
add
sub
int3
sbb
cdq
jns
lods
pop
mov
fdivrp
enter
enter
or
mov
lock
inc
test
rcl
adc
enter
and
loope
sbb
add
popa
ret
push
xor
jl
imul
out
movs
pop
cs
add
dec
inc
cwde
mov
mov
sbb
inc
sub
cmp
ret
(bad)
fisubr
loope
sub
or
inc
mov
push
add
jmp
lsl
add
push
movs
inc
or
push
pushf
or
add
jge
fsub
pop
fbld
and
pop
dec
pop
adc
outs
add
or
jg
cmp
pop
mov
jae
cdq
adc
sub
push
pop
push
retf
push
xor
jbe
ret
cs
mov
lds
mov
cmp
or
(bad)
and
sub
lea
push
cmp
movs
jmp
and
pop
dec
adc
imul
xchg
push
mov
out
and
loopne
das
or
into
and
add
aam
test
cmp
loopne
repnz
jbe
xor
jmp
jg
mov
mov
jo
pop
xlat
dec
test
mov
dec
pop
sub
sbb
imul
adc
fmul
fdiv
mov
icebp
cmps
out
sar
fdiv
je
fdiv
les
push
cs
fdiv
or
fdiv
imul
repnz
fdiv
or
or
daa
mov
add
mov
fadd
imul
add
fidiv
sbb
xor
out
pop
jmp
sbb
repz
test
dec
sbb
je
(bad)
xor
jb
xchg
repnz
push
int3
inc
pop
cmp
adc
ds
js
push
ins
mov
test
std
call
dec
jmp
sub
(bad)
push
add
xchg
aam
push
pusha
mov
(bad)
rcl
rcl
rcl
or
add
adc
or
or
and
add
adc
mov
xor
pop
lea
mov
push
mov
push
adc
jo
jmp
pop
add
jne
or
push
and
cwde
sub
adc
mov
shr
sbb
or
test
xchg
inc
js
mov
inc
jl
popf
cdq
in
push
dec
clc
movs
inc
xor
sbb
test
imul
or
nop
mov
movs
repz
int
push
inc
cmps
inc
mov
jbe
jno
pop
fnsave
mov
push
and
nop
jo
push
cwde
or
xchg
sub
cmp
add
mov
stc
or
in
cmps
nop
call
cmps
aaa
cmps
retf
inc
mov
mov
adc
sar
xchg
mov
sub
scas
sbb
mov
push
fldenv
add
in
mov
and
imul
neg
sbb
push
mov
test
fs
sbb
in
lock
icebp
xchg
mov
pop
or
xchg
int3
loope
or
call
or
mov
adc
add
mov
pusha
sar
sub
and
push
mov
or
or
push
xor
mov
movntps
ret
pop
rcl
sbb
pop
cwde
jns
loopne
add
in
or
icebp
sar
and
fcomp
or
fwait
cli
sub
mov
adc
test
daa
jns
(bad)
sbb
mov
inc
jle
pusha
fidiv
inc
inc
mov
test
sub
xchg
pop
push
xor
xchg
test
shl
push
push
push
inc
xchg
sbb
sahf
and
push
inc
adc
nop
sbb
cmp
faddp
push
add
in
pop
lods
mov
push
shl
cmp
xchg
aam
in
sar
pop
aam
retf
mov
dec
push
sbb
push
cld
xor
push
or
lock
mov
imul
xchg
and
retf
hlt
cmp
and
mov
push
pop
inc
stos
adc
lock
pop
outs
sub
ret
fwait
xor
push
sbb
stc
arpl
pop
sub
add
and
dec
out
call
inc
adc
(bad)
inc
sahf
mov
push
cmp
mov
clc
js
jmp
push
movs
jp
inc
in
call
mov
pop
rol
pop
in
and
sub
sub
cmp
adc
dec
fs
je
or
je
dec
mov
or
pop
std
push
or
test
inc
or
dec
enter
inc
es
xchg
retf
xor
adc
arpl
adc
jbe
adc
jbe
inc
xor
mov
xchg
pop
and
arpl
or
jne
sti
dec
call
sub
jns
sbb
adc
cmp
in
inc
mov
sub
sbb
shr
inc
cmc
or
iret
nop
jo
enter
pop
ins
fdivr
add
cld
addr16
or
push
shl
jmp
mov
sbb
test
retf
cmp
mov
sbb
lds
dec
rcl
test
ins
mov
mov
dec
sub
xchg
rcl
ret
shr
repz
dec
ret
retf
dec
(bad)
sub
dec
(bad)
cmps
inc
or
std
or
mov
in
cmp
and
inc
add
test
or
add
jl
push
fs
leave
jg
dec
inc
or
adc
cmps
ins
dec
mov
jecxz
inc
mov
dec
push
movs
mov
jmp
jg
sub
push
popa
daa
in
dec
lea
pop
mov
data16
cld
xor
idiv
mov
push
adc
push
or
loopne
adc
loope
ret
loope
xor
mov
jo
add
popf
inc
sub
ins
push
(bad)
mov
inc
movs
inc
dec
adc
add
inc
jge
(bad)
and
or
xchg
push
add
push
or
fs
or
jmp
jno
add
add
mov
cld
inc
imul
mov
add
fsub
in
lods
stos
in
in
sti
inc
add
ins
fisub
aas
fisub
jp
or
mov
stos
adc
pop
xchg
xchg
test
xor
adc
inc
leave
adc
mov
retf
jmp
call
dec
dec
or
jo
mov
in
jno
cmp
retf
mov
mov
(bad)
in
jg
in
mov
or
or
sbb
adc
and
mov
inc
movs
loop
sbb
sbb
sbb
inc
mov
push
mov
nop
pop
adc
cwde
iret
mov
pushf
les
nop
ror
js
inc
test
mov
jge
inc
test
inc
mov
jl
nop
js
int3
test
and
aam
jae
int3
cmp
sti
sbb
dec
push
retf
cld
jnp
jne
xchg
std
les
cmp
sti
sbb
test
test
iret
dec
mov
pushf
and
mov
cmp
add
xor
pop
add
xchg
dec
xor
sbb
cwde
mov
lds
mov
rol
or
and
inc
mov
sbb
push
cmp
push
xor
test
xchg
fstp
xchg
icebp
out
rcl
adc
adc
(bad)
xchg
adc
adc
dec
jg
cs
(bad)
adc
(bad)
jmp
jmp
mov
add
shr
out
popf
rcl
sbb
jns
lock
adc
cmc
and
mov
and
or
loop
sbb
sbb
neg
sbb
push
inc
push
repnz
dec
push
inc
push
loop
pop
adc
push
iret
mov
dec
iret
mov
push
les
inc
pop
nop
je
sub
inc
cmp
mov
jge
inc
cmp
inc
cmp
xor
sub
jo
inc
sbb
mov
xor
xor
xor
in
xor
xor
lods
sbb
adc
je
push
mov
(bad)
lea
mov
out
and
adc
aam
jmp
push
sub
add
xchg
and
test
jmp
pop
out
cdq
das
data16
fcmovnb
daa
(bad)
cmp
(bad)
je
out
push
jne
sub
jmp
loop
jne
push
and
sub
jmp
popf
jecxz
jg
mov
popa
push
jmp
adc
pop
mov
sbb
dec
mov
adc
in
pop
adc
clc
cmp
or
mov
sbb
in
adc
aad
xor
jle
dec
mov
mov
dec
mov
into
pop
cmp
call
pop
jmp
adc
add
mov
call
cmps
out
sub
mov
sbb
bnd
out
lock
call
shl
clc
shr
mov
sbb
xchg
push
inc
sub
jbe
lea
call
leave
or
into
jne
in
and
daa
jl
out
stc
pop
sar
adc
lods
daa
(bad)
ffree
mov
cmp
dec
in
repz
cmps
and
ret
lods
rcl
jge
sub
mov
inc
dec
cmp
xchg
sar
outs
mov
pusha
and
dec
add
xchg
sub
pop
dec
pop
xor
mov
jns
stos
jae
or
jbe
jbe
xor
mov
push
fnstcw
cmp
mov
pushf
hlt
push
jae
aas
pop
mov
retf
jmp
and
loope
mov
jecxz
mov
add
add
xchg
imul
nop
jg
icebp
sub
xchg
jmp
hlt
mov
mov
mov
call
enter
sti
(bad)
popf
inc
mov
cmp
push
outs
in
shl
fidivr
call
pop
xlat
and
jmp
cdq
mov
pop
push
fwait
push
mov
cmps
or
ret
adc
adc
cdq
add
and
fsubr
pop
dec
dec
mov
xor
bound
or
scas
leave
pushf
aad
data16
adc
push
lods
xchg
ss
sub
adc
xor
lods
imul
mov
sbb
mov
add
inc
mov
mov
pop
inc
xchg
enter
pop
and
xchg
pop
mov
jns
or
dec
mov
xor
(bad)
cld
or
ror
and
inc
imul
inc
(bad)
pusha
cmp
test
xchg
xchg
or
push
push
fs
loop
adc
or
loope
test
call
leave
mov
inc
mov
sub
mov
inc
fidiv
rcl
fisttp
jmp
in
outs
daa
div
sbb
sbb
ss
and
jmp
fistp
scas
cmovno
mov
call
inc
stos
mov
fdivr
push
nop
in
fisttp
adc
jnp
dec
jno
or
and
and
ret
and
scas
mov
xor
push
sub
test
fsub
xor
cmp
mov
inc
xor
cmp
ret
and
ret
and
adc
mov
pop
inc
pop
and
and
mov
inc
sbb
sbb
and
neg
and
neg
and
sbb
pop
sbb
and
or
or
in
xor
xor
stc
ret
push
jne
pop
lahf
adc
(bad)
cmp
push
mov
outs
cld
push
add
out
pop
add
setbe
adc
push
loopne
out
push
dec
mov
adc
jae
pop
or
and
(bad)
sahf
retf
jmp
in
je
dec
or
add
add
cmp
jge
mov
sub
add
adc
fmul
call
fwait
push
outs
loop
js
jmp
ja
adc
sbb
dec
aam
test
data16
cmp
cmp
dec
es
xor
inc
adc
push
and
lods
mov
cmp
or
jnp
lds
scas
fsqrt
push
out
out
pop
int3
mov
clc
jge
int3
xchg
push
mov
mov
push
out
lea
retf
enter
int3
mov
stos
dec
mov
adc
dec
jge
pusha
dec
jl
pop
fidiv
mov
icebp
add
push
sar
adc
outs
outs
cmps
dec
and
push
rcr
cmp
and
fmul
addr16
rol
(bad)
mov
ret
jb
int3
inc
clc
mov
adc
ret
dec
scas
xlat
imul
lahf
repz
dec
or
cmp
sbb
retf
push
adc
leave
add
adc
mov
add
gs
or
pusha
or
pushf
pop
fs
push
stos
and
and
push
xchg
icebp
adc
jl
scas
leave
cmps
stc
cmc
jg
(bad)
iret
pop
cld
sub
mov
dec
and
cmps
sub
pushf
cli
pop
inc
pop
push
push
mov
push
cmp
pop
mov
or
jmp
adc
jbe
je
mov
fcom
mov
dec
mov
xchg
jp
(bad)
xor
mov
mov
ror
or
sar
adc
jbe
mov
mov
inc
xchg
xchg
mov
push
dec
jge
cdq
test
bound
pop
dec
pop
or
hlt
nop
cdq
int
popa
aad
scas
or
inc
add
or
fsubr
xchg
sbb
and
dec
or
cld
or
or
shl
mov
cmp
add
mov
add
push
xor
fs
ret
aam
sar
adc
adc
mov
movs
sub
cmps
mov
je
inc
sub
xchg
push
aaa
pop
and
adc
jge
bound
xor
hlt
fcom
je
stos
and
and
scas
aam
dec
aas
mov
push
sbb
cmps
push
cmps
dec
mov
outs
aaa
scas
cmp
and
sar
sti
dec
div
dec
call
ficom
sar
int
jo
cld
or
lea
cmps
enter
xchg
add
jne
mov
adc
mov
inc
lods
push
mov
sub
push
jle
mov
rcl
mov
and
or
retf
in
adc
ret
not
iret
cld
rsqrtps
push
mov
popf
cwde
jp
pop
in
add
lods
int3
jmp
aam
(bad)
push
pop
mov
stos
ror
mov
add
mov
sub
imul
aam
mov
sub
and
shr
lock
lea
scas
push
hlt
enter
pop
mov
sub
pop
or
iret
sub
call
stos
fadd
rcr
mov
test
xor
int3
mov
in
xor
mov
jp
pusha
mov
jno
stos
ins
sbb
push
xchg
in
add
inc
pop
xchg
inc
sbb
xchg
mov
ret
ins
cs
sbb
std
nop
mov
out
jmp
add
cmp
xchg
push
push
fs
push
adc
enter
jg
inc
dec
jo
mov
xor
mov
(bad)
push
jnp
jmp
or
cmp
je
in
jge
jmp
mov
xor
lds
jmp
and
jns
sbb
les
fprem
ins
push
xor
inc
mov
repnz
sbb
ror
jo
popf
fnsave
xor
aad
outs
sbb
sbb
stos
pop
imul
xor
gs
cwde
jo
shr
pop
push
mov
enter
je
and
sub
aas
dec
jmp
xor
int3
jg
lahf
sbb
pushf
and
or
xor
mov
cld
fimul
or
shl
push
es
loope
fild
data16
or
sbb
inc
push
mov
into
add
mov
inc
in
inc
mov
lahf
and
xor
in
loopne
clc
scas
movs
popa
int3
mov
aam
dec
sahf
push
call
(bad)
jp
jo
inc
cmp
js
mov
ins
shl
add
sub
pop
push
hlt
adc
addr16
popf
inc
ins
push
(bad)
mov
adc
jbe
dec
daa
call
sub
and
fild
stos
cwde
jg
stos
push
jge
sbb
add
fisub
or
mov
mov
adc
sub
lods
ret
lods
or
lds
(bad)
jmp
or
jle
inc
push
mov
push
mov
stos
push
aaa
stc
ret
mov
call
jo
sbb
or
pop
pop
push
sbb
adc
test
mov
xor
dec
dec
loopne
mov
stos
pop
or
push
movs
test
add
adc
cmp
outs
xchg
sbb
push
lea
push
mov
js
or
aaa
mov
daa
in
inc
jmp
push
lds
scas
int3
(bad)
sub
jne
rol
out
mov
test
or
xor
xchg
out
test
push
xchg
div
push
push
or
fsubr
cld
inc
dec
std
mov
iret
add
lea
dec
mov
and
enter
cmp
mov
xor
xlat
push
cs
bound
sbb
cmp
jae
push
ins
call
das
(bad)
pop
adc
stc
test
aam
es
pop
dec
retw
lea
repnz
xor
dec
push
pushf
push
call
mov
test
adc
std
outs
xchg
stos
sub
adc
cdq
sbb
or
pop
and
hlt
test
popf
cmps
push
xor
pop
mov
adc
cmp
xor
xor
jo
mov
mov
add
push
jle
inc
(bad)
and
inc
sbb
push
call
sbb
sahf
sub
mov
inc
jne
out
push
adc
push
xchg
gs
xor
push
lea
(bad)
xor
or
adc
aaa
jne
dec
ret
jl
or
add
cmp
xor
sbb
mov
jle
out
mov
push
imul
popa
popa
sub
fst
(bad)
cld
adc
add
inc
sbb
bound
dec
adc
daa
xor
sub
mov
shl
mov
jbe
mov
and
inc
sub
xchg
rol
arpl
dec
dec
and
xlat
mov
push
dec
inc
cmovno
test
inc
cmp
inc
inc
cmp
pop
and
and
mov
adc
xor
adc
enter
cmp
and
and
and
add
adc
or
mov
sub
cld
adc
mov
sub
out
or
cmp
cmp
dec
bnd
cmp
adc
mov
or
dec
sub
pop
push
es
sbb
je
test
jle
jmp
or
push
or
jmp
pop
mov
and
imul
adc
mov
shl
jl
sahf
jns
cmp
mov
xor
mov
lds
push
jmp
push
and
retf
outs
shl
sbb
mov
call
dec
dec
(bad)
pop
add
xor
enter
adc
dec
push
xor
arpl
ss
test
out
xchg
scas
sub
test
shl
out
sbb
sub
and
adc
arpl
pop
xchg
in
fsubr
repz
gs
xor
sbb
lods
sbb
dec
and
inc
push
es
mov
adc
cwde
push
push
adc
cdq
push
push
inc
add
dec
daa
sub
movs
nop
dec
and
in
add
cmp
pushw
movs
dec
fisub
inc
mov
lock
push
mov
and
jg
push
and
pop
out
adc
dec
sbb
sub
es
xor
sub
sub
sub
push
(bad)
push
and
pop
test
mov
sub
nop
inc
cmp
or
sahf
jecxz
pop
inc
cmp
mov
cmp
push
push
adc
xchg
mov
mov
fwait
push
mov
shl
jns
jge
mov
cmc
sub
sub
push
xor
bound
sbb
test
je
pusha
or
or
repnz
gs
or
ror
mov
clc
jns
data16
mov
jl
pop
and
xchg
sbb
scas
inc
daa
inc
dec
stc
std
shl
adc
ss
adc
xchg
les
cmp
je
int
loop
shl
rcr
fidivr
test
js
adc
mov
or
and
mov
mov
je
imul
adc
adc
jmp
js
mov
add
(bad)
push
or
and
xor
add
adc
sub
je
xor
xor
dec
or
add
inc
dec
pop
and
nop
sti
pushf
push
add
and
scas
div
or
(bad)
outs
aas
sub
sub
daa
js
jbe
outs
ret
xor
xchg
xor
sar
mov
add
inc
fst
or
sub
aam
xchg
retf
cmp
ret
sbb
cmp
pop
frstor
bound
sbb
enter
call
mov
das
pop
cmc
cwde
lods
or
jmp
and
mov
or
movs
(bad)
jb
mov
sub
cmp
adc
out
int3
aaa
jmp
sub
adc
or
dec
mov
push
arpl
jl
adc
inc
jb
sub
bound
cdq
shr
sbb
dec
inc
or
test
mov
or
mov
adc
shl
je
or
xchg
cmp
or
or
and
addr16
or
test
jne
test
mov
sbb
mov
test
add
inc
push
data16
adc
les
push
gs
(bad)
(bad)
repz
(bad)
sub
sahf
mov
push
sbb
test
sbb
and
retf
xchg
xchg
push
dec
jb
adc
pop
cmc
out
dec
push
xor
call
inc
and
int3
xor
test
xchg
dec
les
inc
push
sete
xchg
enter
lea
push
dec
adc
sub
push
repnz
test
movs
lea
pop
aaa
inc
dec
and
ret
push
mov
sbb
fwait
scas
xor
cmp
adc
stos
push
ja
jl
add
sub
fistp
inc
or
scas
adc
xchg
sub
inc
inc
mov
add
cld
out
push
rcr
ins
adc
out
enter
push
movups
sbb
sub
adc
(bad)
test
xor
and
push
jl
adc
mov
mov
xor
jno
adc
sub
xchg
jge
dec
mov
or
movs
in
jl
pop
and
cmps
dec
cmp
inc
pop
or
shl
dec
loope
sbb
jl
movs
shr
es
xor
jno
add
mov
sbb
and
mov
lds
mov
push
in
pop
inc
add
jne
mov
push
rep
repz
test
inc
dec
popf
pop
mov
jl
fild
push
or
clc
mov
ds
sub
push
dec
repnz
mov
and
mov
enter
cmp
add
fwait
stc
mov
push
int
out
test
sahf
popa
xchg
push
dec
xchg
mov
xchg
jmp
sahf
mov
xchg
hlt
pop
jl
cmp
in
nop
pop
repnz
mov
or
cmp
sar
xchg
popf
test
loopne
fisttp
movntps
pop
push
fs
not
hlt
pop
shr
mov
sbb
nop
mov
nop
mov
push
add
popa
retf
mov
mov
adc
adc
(bad)
add
sbb
add
push
and
pop
jb
push
shr
loope
fs
inc
lea
sub
icebp
adc
push
push
or
cdq
jns
lahf
in
cmc
mul
pop
mov
jl
cmps
enter
mov
or
sahf
stos
mov
je
mov
test
jo
mov
scas
push
idiv
sub
dec
mov
jmp
pop
jbe
popa
lahf
sbb
cmps
pusha
imul
xor
mov
cmp
out
mov
jmp
push
aad
int3
sub
sub
aad
sbb
inc
adc
test
dec
cmp
sub
adc
mov
sub
xchg
out
gs
jp
idiv
inc
arpl
add
lock
mov
scas
fwait
push
push
jl
retf
push
xchg
je
hlt
and
pop
cwde
fs
or
je
pop
loope
call
mov
stc
rcl
hlt
cwde
sbb
cmp
jb
ins
mov
lock
sub
inc
pop
mov
jbe
xor
xor
loop
mov
sub
inc
inc
pop
mov
pop
cwde
dec
repnz
push
leave
sbb
rcl
ins
jns
jle
pushf
popa
addr16
push
imul
loopne
dec
jne
pslld
sub
in
push
call
dec
add
jp
dec
push
pop
xchg
mov
xor
sbb
lods
cli
push
cwde
jecxz
sbb
adc
push
pop
push
add
fst
adc
cmp
sti
rol
jmp
and
imul
mov
push
inc
add
cld
push
add
lods
mov
sbb
js
iret
inc
xor
popa
nop
push
cmps
cwde
gs
mov
xchg
and
gs
jmp
dec
or
and
pop
fiadd
pop
push
inc
push
not
je
xchg
in
(bad)
shr
enter
je
mov
sbb
retf
dec
add
xchg
cmps
fst
mov
cmp
xor
mov
mov
das
lods
jmp
cmp
mov
add
jbe
test
hlt
push
cdq
xchg
jmp
nop
push
dec
call
and
jmp
sub
jb
gs
movs
cdq
movs
fsub
xchg
or
sub
fst
jns
adc
in
stc
add
cli
sbb
aaa
les
jae
pand
mov
fidiv
into
mov
xor
jbe
cmp
movs
outs
mov
fs
arpl
push
adc
es
add
and
les
sub
adc
in
mov
inc
mov
adc
adc
test
jns
aas
lods
arpl
(bad)
and
xor
mov
retf
cmp
adc
adc
push
idiv
jp
xchg
push
jmp
add
xchg
dec
xchg
repz
inc
ret
push
sub
cmp
mov
inc
aaa
shr
inc
fs
enter
dec
and
ret
xchg
stos
mov
je
jge
mov
and
enter
fidiv
add
ds
cmp
or
icebp
push
lahf
inc
sbb
mov
test
and
adc
lods
mov
xor
loope
loop
aam
lock
mov
mov
test
nop
push
mov
lahf
lock
push
mov
aaa
sub
clc
(bad)
inc
aad
lds
cli
adc
stos
cdq
cmp
dec
mov
pop
es
mov
mov
imul
adc
adc
in
rcr
das
adc
cmp
xchg
mov
sub
aaa
xor
out
lock
cvtps2pi
ins
push
cmp
or
sbb
ror
pop
cmp
(bad)
mov
or
call
icebp
jmp
pop
xchg
gs
mov
sbb
in
jecxz
push
jns
repz
push
aam
add
xchg
or
xor
sbb
fsub
mov
and
das
sub
nop
ins
lods
dec
in
inc
xchg
lock
mov
movs
sub
mov
cwde
mov
mov
push
jne
aaa
loop
cs
or
mov
inc
cli
js
out
push
cmp
inc
in
mov
icebp
ror
dec
cmp
sub
push
and
inc
mov
xchg
sbb
bound
inc
call
adc
test
aad
sub
shr
add
mov
pop
fs
jecxz
sub
jg
xor
iret
ins
dec
xor
jbe
pop
adc
fimul
dec
xchg
sub
xchg
jo
and
sub
hlt
in
push
popa
lea
inc
inc
in
add
call
mov
fwait
sbb
movs
or
xchg
imul
fiadd
and
cmp
or
(bad)
cmp
push
add
das
int
lods
mov
jnp
cmp
jne
push
xchg
push
dec
inc
clc
pop
les
push
sub
cmp
jne
sbb
ja
popf
xchg
add
push
mov
cmp
je
add
imul
sub
ror
dec
stos
repnz
mov
mov
imul
add
cmp
cmp
inc
dec
pop
ds
xchg
inc
xchg
fadd
adc
fs
and
js
pushf
adc
stos
adc
push
jo
adc
xor
or
cli
sbb
sub
enter
test
sub
std
cmp
(bad)
jle
shl
mov
jl
in
ss
or
outs
shr
xchg
stc
stc
mov
loopne
adc
pop
aam
mov
push
(bad)
and
call
ja
adc
push
mov
das
xchg
sub
xchg
push
mov
out
and
jo
and
pop
retf
fwait
dec
push
test
xor
into
jns
push
js
jbe
std
cmc
jmp
ja
and
mov
clc
inc
sub
lock
in
and
sbb
jne
sahf
mov
(bad)
call
sbb
pop
movs
add
xor
push
fs
add
retf
jo
sbb
leave
dec
xor
sub
mov
pop
daa
popf
sbb
(bad)
in
je
cmc
cmp
in
sub
lock
daa
mov
adc
push
daa
and
lods
cmp
aam
ds
add
dec
jae
mov
out
push
repz
mov
out
sub
cld
jmp
daa
pop
jns
rcr
sbb
inc
sbb
mov
inc
push
call
xor
popa
mov
aas
out
and
jno
bswap
call
pop
(bad)
and
fmul
retf
push
push
ins
push
mov
jb
add
pop
sub
(bad)
cmp
or
sub
stos
or
call
aas
sub
add
pusha
mov
loop
adc
xor
sbb
jmp
xor
inc
pop
adc
push
mov
dec
icebp
call
or
push
das
les
dec
sbb
pop
inc
push
es
or
inc
dec
clc
test
loopne
mov
in
call
je
inc
mov
pop
mov
sub
das
rcr
fst
push
lods
out
inc
imul
pop
mov
les
aam
or
adc
mov
cmp
(bad)
loope
or
dec
jl
push
mov
out
push
outs
sub
pop
xchg
leave
sbb
div
gs
sbb
pop
push
shl
aaa
adc
push
out
sbb
push
or
lods
bound
outs
data16
mov
cld
pusha
fcom
shl
pop
push
popf
cmc
xchg
inc
and
enter
push
push
mov
js
mov
adc
jns
(bad)
jmp
movs
xor
call
jmp
dec
xor
in
enter
scas
gs
jno
outs
push
cmp
dec
and
sar
cmp
int3
es
push
imul
ja
jmp
lea
popf
retf
jge
cmp
pop
sbb
mov
ja
push
add
cli
je
jae
lods
and
xor
fadd
movs
pop
add
les
and
pop
cmp
clc
xchg
je
ja
add
mov
adc
ins
adc
mov
jmp
jb
jo
pop
rcr
jbe
icebp
loop
or
mov
push
inc
push
add
add
fcmovne
aas
sbb
fs
cmps
adc
popa
dec
nop
lahf
scas
sub
adc
jbe
fsubr
shl
ds
test
mov
mov
ins
sub
xor
pop
or
sahf
add
push
mov
mov
mov
(bad)
xor
jmp
mov
or
pop
mov
mov
cmp
inc
and
fisubr
or
adc
shr
(bad)
inc
add
mov
xor
clc
push
mov
add
lds
dec
sahf
mov
sahf
rcl
inc
add
push
dec
jecxz
std
add
add
sahf
inc
xchg
leave
xlat
mov
xor
push
push
adc
aam
iret
loop
push
cmc
inc
mov
inc
sbb
loope
(bad)
sub
sub
cs
inc
std
jne
aaa
(bad)
rol
jmp
gs
mov
adc
je
les
xlat
pop
cdq
adc
jg
outs
sub
sbb
in
push
adc
add
sub
and
in
add
loop
in
cwde
cmp
mov
or
fnsave
pop
add
test
add
loope
inc
or
sub
mul
fwait
(bad)
les
adc
and
cs
sbb
xchg
retf
mov
sbb
add
mov
inc
cmp
inc
cdq
mov
ss
jo
fiadd
or
xchg
neg
cmp
sub
sbb
jnp
cmp
mov
fistp
add
pop
add
cmp
pop
xchg
imul
daa
sbb
adc
das
cmp
and
adc
popa
pop
les
sbb
cmp
inc
or
(bad)
shr
push
inc
pop
and
ficom
cmps
rol
add
or
or
sub
xchg
lock
lock
mov
sti
jns
dec
pop
gs
es
fs
es
aaa
je
or
movs
jae
push
test
sbb
sbb
jne
or
dec
push
jmp
idiv
lahf
jb
dec
or
je
in
cli
jbe
dec
jae
and
popa
dec
in
or
mov
mov
fxch
sub
and
iret
pop
in
add
add
push
xor
sbb
fwait
mov
out
hlt
sub
icebp
call
push
push
nop
hlt
and
push
push
mov
scas
outs
sub
sub
adc
call
rcr
inc
mov
inc
popf
xor
add
aad
ror
sub
dec
int
pusha
pop
ret
inc
lods
adc
inc
or
ror
dec
ficom
ja
popf
or
jne
or
xor
cmp
mov
enter
shr
sub
dec
xchg
xchg
mov
inc
cmp
les
ret
pop
out
js
mov
xchg
enter
add
fnstsw
jae
xor
rol
in
and
or
mov
mov
jge
cmp
adc
xor
xchg
jecxz
arpl
xchg
push
inc
jmp
test
adc
lea
jae
fld
scas
xor
adc
(bad)
cdq
xor
xchg
jmp
inc
jl
retf
es
fs
mov
leave
mov
inc
sub
ror
test
or
add
fwait
fwait
jae
xor
loop
xor
lea
and
push
or
mov
aam
or
mov
jmp
inc
hlt
out
fst
fbld
(bad)
fsub
dec
aam
mov
dec
add
and
icebp
dec
sbb
jmp
sub
cdq
or
add
mov
cmps
push
add
sahf
inc
mov
inc
or
sbb
and
test
je
cmp
or
xor
aas
or
pop
outs
lods
sbb
adc
xchg
inc
add
push
popf
loope
push
loop
les
mov
les
cmp
sub
or
fbstp
adc
mov
add
movs
sbb
mov
sub
aad
das
retf
enter
mov
cmp
dec
pop
adc
mov
and
out
or
enter
sbb
test
pop
loop
hlt
inc
loop
add
adc
or
pusha
inc
add
test
xchg
sub
aaa
outs
retf
gs
and
out
adc
adc
mov
cwde
call
jl
dec
lock
adc
cmp
je
mov
sub
xchg
jecxz
in
out
mov
retf
call
movs
shl
aas
cld
retf
cmp
pop
dec
cmps
sbb
push
sub
push
xchg
jg
ror
push
out
sbb
xor
sar
sub
lahf
aam
lods
aad
mov
sbb
xchg
pop
mov
mov
pop
shl
mov
and
mov
and
xchg
lock
test
push
and
jg
lock
icebp
inc
inc
imul
cmps
repnz
sub
ins
sub
cmp
ds
call
mov
and
jge
in
cdq
jnp
nop
lods
call
and
fiadd
stos
and
jns
sbb
frstor
and
pop
xchg
in
mov
or
mov
jl
inc
jo
fwait
ds
mov
cmps
cli
add
or
xor
add
sub
xchg
add
lds
mov
or
mov
into
or
jmp
call
call
and
push
push
push
outs
dec
mov
cmp
or
ret
xor
pop
and
dec
das
sbb
cwde
inc
cld
clc
inc
add
jmp
dec
push
jne
cmps
mov
and
arpl
or
leave
fs
je
pop
retf
lods
pop
inc
in
cmp
lock
cmp
addr16
lock
push
cmp
mov
xor
or
jno
aas
mov
jns
cmp
aad
dec
mov
imul
call
add
mov
(bad)
imul
mov
or
sub
or
iret
in
stos
jne
scas
xor
push
repz
pop
or
sbb
test
and
cld
sub
push
dec
or
jmp
inc
call
fild
adc
daa
inc
inc
sbb
mov
imul
aaa
clc
cmp
loopne
jge
pop
(bad)
and
mov
jae
inc
and
add
xchg
retf
add
sbb
call
push
sbb
adc
jmp
and
sub
cmp
test
mov
test
push
aam
(bad)
push
xchg
jbe
fcom
sub
int3
push
push
ret
mov
xchg
xchg
lock
or
jmp
and
retf
inc
sub
sub
daa
add
jmp
push
sahf
call
adc
mov
adc
out
jl
ret
add
scas
sub
jmp
add
or
fcmovnu
lods
in
jae
mov
rcr
out
jge
movs
leave
and
ds
shl
ret
xor
fisttp
in
xchg
aas
(bad)
xlat
or
mov
push
stos
je
(bad)
mov
punpckhwd
sub
mov
nop
sbb
ds
add
je
jmp
stos
scas
ins
and
jmp
popa
cmp
jl
dec
lea
mov
push
fist
push
push
fsubr
jmp
xor
xchg
scas
mov
es
push
mov
inc
nop
inc
outs
ins
fsub
test
shld
sub
push
sahf
and
test
es
repnz
dec
xchg
add
lea
iret
xchg
cdq
xor
aas
fadd
or
out
fisubr
ret
pop
push
mov
mov
outs
cld
pushf
(bad)
shl
mov
mov
cvtps2pi
and
sbb
inc
jns
int3
lahf
shr
and
sub
icebp
mov
mov
stos
xchg
cmp
jl
test
xchg
cmp
test
mov
xor
cmp
sub
dec
test
inc
pop
dec
push
repz
jb
dec
mov
mov
or
cdq
and
xor
jge
cmp
jl
outs
inc
mov
cld
movs
jp
das
add
dec
dec
adc
or
jmp
xchg
and
sub
enter
jno
sub
mov
cmps
int3
mov
mov
or
in
jmp
loope
aam
or
mov
ja
cwde
ins
or
iret
divps
loope
pop
(bad)
inc
test
sub
leave
xor
test
mov
or
or
jge
sub
sub
ins
push
adc
jae
stos
rcl
leave
sahf
(bad)
adc
nop
push
mov
jle
pop
mov
pop
dec
outs
inc
outs
inc
lahf
mov
pop
les
sbb
in
xor
xchg
inc
mov
sub
(bad)
aam
scas
loope
and
daa
in
jle
inc
fsub
adc
mov
fld
imul
mov
inc
mov
mov
das
mov
movs
sub
test
mov
je
adc
add
(bad)
push
mov
repnz
rcr
add
push
sti
int
out
out
and
je
push
cmp
sub
jnp
adc
loope
test
(bad)
stos
mov
jnp
mov
adc
inc
test
inc
sub
sbb
sub
xchg
xor
push
cwde
int3
inc
xchg
pop
sbb
pop
imul
jl
mov
mov
loopne
call
(bad)
ins
mov
cmp
and
out
xor
call
mov
sub
dec
and
mov
xchg
sub
jle
imul
(bad)
jmp
inc
or
xor
data16
dec
or
dec
add
xlat
xchg
or
sub
lods
push
leave
add
add
shl
xor
icebp
dec
mov
lds
out
xor
pop
dec
push
push
push
mov
xor
jne
icebp
xlat
jmp
pop
jg
sbb
out
pop
cvtdq2ps
sbb
and
and
call
adc
les
shl
sbb
and
movs
ret
mov
ja
cmp
jae
ds
fst
adc
dec
add
push
rol
(bad)
pusha
and
inc
mov
jbe
or
push
jne
repz
inc
cmp
add
push
les
out
sbb
into
jmp
dec
dec
and
clc
xchg
xor
lock
add
mov
jne
sub
xor
nop
push
cmps
test
mov
cdq
pusha
clc
jae
and
pushf
push
jne
jnp
pop
out
push
hlt
jge
aad
lods
clc
and
mov
lock
sub
rcl
mov
xor
and
jmp
repz
inc
push
xor
mov
mov
rol
xor
pop
mov
jmp
cmp
sub
and
mov
and
mov
out
dec
stc
int3
push
sub
adc
jmp
aad
mov
push
sbb
push
dec
push
data16
mov
jg
add
cmp
xchg
mov
jecxz
mov
or
daa
test
clc
(bad)
adc
int
repz
clc
test
mov
das
popa
imul
push
jmp
mov
xor
add
and
nop
lods
adc
add
cmp
loop
sbb
jmp
stos
mov
pop
jge
fst
addr16
enter
push
mov
out
pop
out
test
xchg
cwde
out
lds
fwait
jbe
mov
mov
mov
cmps
inc
mov
inc
(bad)
leave
jmp
adc
adc
out
mov
adc
and
mov
mov
jmp
and
out
dec
sub
push
add
in
sub
out
push
in
or
daa
pop
xchg
test
mov
or
jp
sub
in
pushf
fwait
shl
les
xchg
push
mov
sub
sbb
fdiv
loopne
inc
dec
adc
movs
mov
dec
cli
mov
dec
push
mov
sub
loopne
cmp
sub
add
cmp
(bad)
test
sbb
sahf
dec
and
fdiv
mov
or
call
adc
cli
and
jae
inc
fsubr
dec
mov
sar
mov
xchg
xor
sbb
sar
movs
idiv
inc
arpl
in
rcl
pushf
fs
in
and
inc
add
xchg
pop
clc
les
cld
adc
sti
and
popa
jmp
movs
or
(bad)
es
add
mov
cmp
enter
or
inc
outs
sar
mov
and
mov
inc
mov
(bad)
cld
inc
mov
mov
mov
inc
mov
repnz
aas
icebp
lods
push
idiv
jle
mov
test
iret
nop
call
fidivr
icebp
movs
push
repnz
adc
sti
das
test
xor
sti
cli
pop
aad
pop
sti
clc
ja
test
xchg
adc
mov
nop
dec
and
mov
push
adc
rcr
or
stos
or
movs
jg
mov
mov
mov
jmp
test
jae
push
les
push
jbe
sbb
adc
int3
or
sub
fwait
add
shr
push
xor
push
arpl
inc
sbb
add
cld
in
and
cwde
out
adc
or
fisubr
cmp
push
dec
xchg
(bad)
in
cmp
inc
pop
inc
adc
sub
imul
xchg
xchg
adc
push
sub
dec
push
fild
xlat
popf
adc
inc
add
mov
shl
mov
scas
mov
add
addr16
shr
or
jmp
adc
xchg
push
xor
push
add
loopne
les
gs
or
leave
cmp
call
sti
adc
ror
loope
xor
xchg
in
add
add
xchg
imul
(bad)
leave
hlt
jne
mov
push
mov
nop
aam
daa
fcom
test
hlt
push
in
loope
clc
imul
repnz
mov
nop
mov
inc
shr
cdq
mov
cmp
cld
fwait
(bad)
push
jmp
adc
adc
iret
mov
adc
call
daa
imul
adc
mov
shl
inc
clc
inc
fs
enter
(bad)
or
xchg
xor
adc
out
and
in
sub
adc
enter
and
dec
mov
mov
xor
or
add
add
pop
cmp
test
std
jne
mov
es
pop
xor
loope
cmp
sar
shr
sbb
push
cmp
sub
ss
icebp
jo
xlat
fcomi
(bad)
jmp
pop
ret
aam
dec
or
mov
adc
ficomp
xchg
xor
cmp
sbb
inc
ret
dec
sbb
mov
popa
ror
and
jne
mov
ror
scas
mov
loope
dec
mov
mov
movq
pop
call
cmp
js
stc
in
xchg
(bad)
imul
jno
pusha
dec
test
jl
cld
test
mov
and
pop
icebp
sbb
mov
aad
or
mov
pop
aas
mov
xor
mov
in
push
mov
adc
mov
dec
rcl
inc
and
call
add
inc
sub
(bad)
adc
test
fldenv
mov
adc
shl
dec
std
xchg
jmp
je
mov
mov
cmc
xchg
mov
mov
mov
sub
aaa
pop
jmp
lods
xor
adc
aad
scas
les
cmp
cmps
repnz
(bad)
push
push
data16
or
push
jne
cmp
push
call
data16
dec
add
repz
adc
das
daa
sub
sub
or
shl
cmp
mov
mov
pushf
mov
jae
cmp
int
out
mov
push
lahf
stc
test
out
fisubr
push
push
mov
inc
and
push
rcr
fwait
jg
stc
xchg
push
test
fnstenv
mov
outs
(bad)
js
push
scas
bound
and
inc
cwde
enter
jmp
das
and
add
pop
scas
pushf
nop
cmp
out
pop
or
loope
pop
pop
adc
daa
jl
and
cld
mov
mov
jae
xchg
xor
shl
adc
xchg
lods
sub
or
and
fist
out
sub
cld
mov
test
adc
test
ja
mov
in
pop
inc
rol
pmullw
pop
in
adc
leave
and
test
pop
adc
clc
rcr
cdq
clc
loop
les
call
fbstp
mov
in
jnp
jmp
push
push
in
shl
mov
imul
pop
mov
and
push
imul
loope
or
pop
repz
sub
movs
mov
mov
daa
lods
fcmovu
sbb
(bad)
jmp
pop
iret
and
(bad)
mov
jmp
push
xlat
add
pop
jmp
push
lea
push
call
pop
xor
fdiv
push
push
sub
sub
adc
sti
bound
inc
ins
adc
xchg
jno
adc
dec
mov
les
sub
adc
add
call
jmp
mov
push
cld
cmps
loope
and
popa
adc
imul
std
xchg
std
mov
loope
or
or
dec
(bad)
and
mov
(bad)
cmp
push
fnstsw
sub
dec
inc
cmp
mov
inc
adc
mov
and
pop
jns
shr
xor
movups
sub
and
mov
in
fistp
adc
dec
mov
ret
fidivr
fdivr
retf
jne
mov
mov
jb
sbb
movs
add
dec
adc
enter
sti
xor
shl
scas
test
pushf
cli
xor
out
(bad)
rol
les
test
imul
mov
mov
int
outs
idiv
dec
or
dec
ins
or
mov
xor
and
jp
lods
push
pop
popa
cmp
lahf
test
arpl
sub
xor
je
sub
ss
pop
inc
repnz
std
hlt
lea
pusha
sub
test
and
sti
jae
popf
into
stc
dec
test
retf
daa
xor
push
mov
ss
pop
cmp
cld
pop
call
and
test
nop
mov
jmp
and
sti
jae
shr
mov
ins
jmp
push
push
push
inc
mov
imul
fisubr
stos
int
jno
outs
mov
xor
mov
or
in
push
in
out
aam
cld
mov
ret
sbb
sub
leave
adc
pop
cli
mov
ret
test
aaa
mov
jmp
xchg
push
fidiv
fld
adc
or
cmp
ror
and
xor
sbb
mov
push
add
mov
dec
aaa
mov
(bad)
(bad)
and
mov
jmp
add
xor
daa
or
in
mov
mov
mov
mov
ins
inc
or
and
push
xor
xor
jne
jmp
sahf
mov
icebp
and
xlat
and
adc
rcl
dec
pop
bound
test
frstor
shl
push
push
cmp
movs
out
add
aad
mov
add
ja
xchg
dec
(bad)
in
mov
les
jae
ss
sub
dec
add
call
and
int3
ret
inc
adc
cmp
mov
push
out
repnz
adc
pop
and
add
xchg
rcl
and
imul
and
pop
dec
daa
pop
aad
add
push
or
sbb
cmp
sub
call
aad
and
mov
lea
or
loop
js
in
push
cmc
shr
mov
mov
adc
fwait
test
jae
mov
in
and
int
ror
int3
sub
or
adc
or
dec
movs
nop
lahf
loopne
fwait
call
mov
and
or
cmp
(bad)
imul
and
inc
inc
push
call
pop
call
fimul
fsubr
mov
fiadd
push
push
repz
loope
pop
lods
jbe
out
ja
add
test
xchg
cmp
ja
adc
sbb
enter
mov
movs
dec
xor
sub
mov
hlt
inc
push
adc
add
out
adc
mov
and
repnz
outs
mov
mov
out
ret
imul
sbb
push
hlt
lea
and
jge
add
enter
ins
mov
jnp
into
fcomp
rol
stos
retf
push
cmp
mov
cmp
xchg
sub
lock
pop
movs
xchg
pop
cli
xor
movs
mov
jb
les
and
cdq
mov
xchg
adc
sbb
pop
out
xor
inc
sbb
mov
dec
add
dec
mov
push
(bad)
sub
xchg
mov
movs
xchg
sub
pop
loop
add
xor
je
dec
sbb
jmp
iret
repnz
cwde
xchg
sub
xor
out
int
cmps
out
sti
push
scas
jbe
xchg
hlt
mov
cmp
ins
repnz
dec
and
sbb
int
add
repnz
movs
(bad)
jne
pop
or
test
push
dec
xor
je
adc
adc
push
popf
lea
mov
pop
loop
sbb
ret
ret
test
pushf
inc
(bad)
cli
and
jmp
mov
stc
sbb
add
cwde
xor
and
or
add
jecxz
sub
add
add
add
add
scas
inc
ja
or
test
jmp
lds
out
and
jmp
push
adc
loope
scas
sub
cwde
adc
ja
cwde
push
xor
add
add
xchg
xchg
sub
mov
push
sbb
cmp
xor
mov
xor
rcl
push
xchg
adc
ds
cmp
lahf
sahf
xchg
dec
push
cmp
or
inc
lods
mov
in
dec
sbb
pop
cmp
sbb
fst
mov
into
add
add
test
iret
push
int3
mov
cmp
ds
iret
add
jge
pushf
jle
jb
aam
adc
ins
xchg
test
test
aam
pop
(bad)
xchg
aad
sbb
pop
adc
dec
adc
inc
mov
adc
mov
call
mov
inc
aam
fcom
push
jo
fadd
mov
aas
movs
and
loop
hlt
ret
xchg
mov
adc
dec
test
sub
jo
xor
and
lahf
or
or
xchg
rcl
arpl
aam
mov
retf
push
lods
and
or
or
test
fmul
enter
jmp
hlt
and
invd
lea
std
xor
imul
jne
frstor
fsubr
jmp
adc
dec
retf
xor
mov
sti
add
dec
or
sub
lods
pop
loope
(bad)
inc
clc
in
add
xlat
jae
leave
sbb
push
push
test
loop
das
push
mov
xor
sub
aas
or
hlt
or
and
sbb
inc
sbb
push
or
dec
mov
cld
test
mov
loopne
inc
add
hlt
inc
js
in
inc
pop
std
in
retf
(bad)
fmul
and
push
add
loop
pop
mov
loopne
inc
fsubr
retf
popf
and
cwde
mov
and
mov
mov
pop
add
xchg
icebp
jae
or
repnz
mov
jbe
xchg
data16
add
push
or
popa
in
adc
xchg
paddsw
and
adc
or
out
cmp
mov
and
arpl
adc
push
or
cdq
jmp
aad
dec
aas
jmp
push
inc
fs
sub
test
adc
and
jmp
push
add
sub
push
push
sub
and
leave
sbb
pop
(bad)
imul
je
imul
mov
mov
je
adc
out
into
fmul
sub
jl
mov
push
inc
rcr
out
call
mov
cmp
or
jne
(bad)
or
in
test
xchg
aad
ffreep
mov
fcomp
stc
adc
jmp
pushf
(bad)
ja
cwde
mov
xor
cmp
div
into
outs
jp
enter
sbb
lods
into
and
fdiv
in
push
mov
jle
popf
push
icebp
jnp
enter
sbb
xchg
jne
lods
cld
int3
inc
or
sub
lock
inc
jbe
fdiv
dec
imul
fadd
jbe
push
mov
push
in
cdq
(bad)
xor
loope
or
std
pop
cmp
add
xor
repz
mov
out
dec
push
ins
jmp
ins
pop
pop
(bad)
shr
or
hlt
inc
lea
add
ins
adc
out
adc
adc
adc
adc
adc
clc
adc
das
or
sbb
xchg
fist
cdq
push
in
xchg
adc
loopne
pop
pop
lods
pop
enter
push
fist
in
pop
cmps
adc
js
fdivr
int3
adc
xor
or
mov
mov
jmp
pop
and
fisttp
adc
mov
add
cld
mov
sbb
and
jmp
cld
into
jne
sti
leave
pop
fisttp
push
jl
push
cmp
sbb
lea
xchg
imul
lods
sub
inc
or
mov
push
xchg
and
imul
test
inc
loop
clc
jle
sbb
adc
jp
clc
fcom
xor
repz
test
jl
mov
mov
and
pop
and
jl
loope
mov
lea
xor
and
mov
mov
jecxz
dec
pop
or
cmps
stos
mov
out
jp
call
sub
xor
and
mov
sub
sub
arpl
loop
cmp
sub
sbb
or
ds
sbb
loope
(bad)
jmp
inc
sub
dec
mov
in
xchg
pop
and
sbb
or
jnp
push
sub
stos
data16
inc
test
mov
out
cmp
push
xchg
lods
add
mov
mov
fsub
cld
retf
sti
fs
cmp
add
push
push
inc
cmp
and
test
scas
std
dec
dec
add
jg
data16
or
cmp
push
ss
popf
fst
mov
mov
nop
sub
test
test
inc
out
not
dec
pusha
xchg
push
mov
push
push
mov
sub
lods
dec
cmp
pop
neg
leave
sahf
fs
mov
pusha
mov
icebp
repz
jbe
(bad)
jge
retf
sbb
push
push
in
cmp
lahf
daa
push
int
gs
inc
inc
jle
lea
test
or
cwde
adc
aas
cld
adc
int3
mov
sub
cld
jmp
call
sbb
jg
mov
rol
stc
xor
jbe
xchg
in
push
sahf
sub
std
(bad)
push
push
jns
push
int
or
dec
and
loopne
push
ret
inc
dec
and
ja
lods
push
leave
fild
test
adc
jl
adc
add
cmp
cs
mov
je
and
dec
cmp
push
jo
dec
js
push
and
dec
push
add
and
in
mov
mov
inc
sbb
jge
repz
les
xchg
imul
outs
xor
sbb
mov
jmp
dec
mov
popa
sar
jmp
sbb
out
push
sub
pop
lods
and
push
fadd
xchg
ficomp
sbb
out
jmp
call
sub
push
mov
outs
cmp
dec
adc
and
cmp
inc
inc
mov
cmc
xchg
pop
fisubr
sub
test
in
sbb
inc
sub
push
mov
dec
pop
adc
jnp
xor
xor
sub
icebp
or
shr
xor
jmp
mov
add
inc
dec
push
mov
loopne
cmc
nop
rcr
push
enter
sub
and
or
jmp
and
dec
jge
test
sbb
jmp
cwde
mov
xchg
add
xchg
mov
jb
loop
rcl
shl
pop
pop
cmp
(bad)
xchg
repnz
out
sub
outs
ror
clc
jmp
adc
(bad)
sti
dec
jns
mov
mov
pusha
adc
int
cwde
clc
inc
sti
test
or
or
test
and
fwait
mov
scas
mov
jnp
xchg
and
mov
ds
push
stos
pop
add
dec
dec
(bad)
retf
xchg
clc
ret
push
jg
shr
daa
scas
jne
cdq
xchg
cmps
int3
test
inc
jmp
and
jmp
cmps
clc
push
and
(bad)
cld
mov
ret
in
das
sub
inc
and
movs
(bad)
and
push
out
cmps
or
adc
mov
call
stc
mov
cmp
pop
pop
jb
sub
sub
adc
xchg
inc
(bad)
cmp
push
fstp
les
addr16
ret
(bad)
or
rcr
mov
lods
test
test
or
mov
mov
es
sti
retf
jg
adc
push
scas
fidiv
sbb
in
fdivp
in
lods
imul
ja
xchg
mov
or
sub
callw
in
out
xchg
cmc
cwde
jp
adc
je
sub
lea
repnz
pop
mov
sub
jo
adc
bsf
enter
push
push
movs
jae
stos
xor
dec
mov
cld
inc
nop
xlat
or
sub
jb
hlt
sbb
sbb
and
test
loopne
pop
fist
push
dec
xor
outs
or
iret
sbb
or
push
dec
shr
fmul
push
adc
xor
or
movq
mov
cli
retf
inc
cmp
xor
cmp
dec
or
outs
push
push
xor
xchg
test
sub
lock
cmps
imul
jns
(bad)
sub
xor
pop
pop
mov
cld
into
imul
std
inc
iret
sbb
mov
cwde
push
int3
cmp
adc
and
mov
call
and
leave
xchg
jno
cmp
retf
and
adc
popf
popa
in
aaa
arpl
leave
sub
and
push
adc
hlt
inc
imul
aam
inc
push
in
into
mov
in
into
mov
dec
mov
pop
adc
mov
xchg
out
jne
xlat
adc
fucom
div
enter
jnp
mov
push
inc
push
lahf
cs
popf
mov
add
jge
fs
int3
call
jle
and
pop
int3
daa
dec
imul
retf
inc
(bad)
and
inc
adc
ds
sbb
or
mov
push
(bad)
loop
and
fs
lock
xchg
sub
adc
rol
enter
int
xor
cmp
repz
call
rcr
adc
retf
adc
imul
and
jb
pop
push
repnz
shl
(bad)
xchg
std
and
clc
push
stc
xor
cli
mov
xor
aad
xor
mov
fist
pop
in
or
aad
je
scas
inc
and
jnp
inc
cli
dec
loopne
xchg
mov
xor
inc
mov
xchg
arpl
lock
sub
loop
shl
add
jmp
inc
push
inc
sbb
dec
mov
xor
cmp
jae
call
stos
or
cmps
cmp
add
mov
adc
sbb
clc
shl
cdq
ror
adc
lods
jnp
pusha
dec
jnp
cmp
ja
outs
ror
sbb
data16
inc
xchg
jle
ja
and
jg
fcomi
xchg
xchg
jl
int3
aam
retf
call
std
data16
pop
push
inc
cmp
jns
pop
stos
adc
and
sub
test
cwde
cmp
xor
adc
call
add
or
cmp
xor
dec
outs
frstor
inc
add
pop
dec
pusha
and
dec
call
sar
(bad)
sbb
sbb
cwde
ss
mov
push
adc
mov
movups
cli
push
cmp
or
add
jo
jl
loop
or
int3
xchg
mov
mov
(bad)
adc
sbb
loopne
add
fnstsw
mov
or
js
push
and
sbb
imul
or
or
cmp
sar
ins
bound
push
mov
add
call
pop
ret
push
add
or
ret
xchg
ror
out
or
adc
add
push
cmp
jbe
add
inc
out
test
add
add
fbstp
stc
or
das
rep
pop
xchg
adc
adc
mov
add
pop
(bad)
sbb
xor
push
lea
nop
iret
adc
icebp
xor
mov
or
push
mov
mov
iret
ss
scas
adc
mov
adc
bound
es
mov
xchg
nop
and
inc
inc
inc
mov
xor
nop
or
or
mov
push
test
and
in
pop
mov
mov
dec
adc
mov
mov
mov
jb
cwde
mov
lock
clc
adc
icebp
dec
icebp
push
enter
jo
add
pop
pop
leave
ret
nop
movs
sahf
xchg
cli
and
mov
or
sar
daa
and
ret
xchg
cld
icebp
and
adc
neg
daa
data16
sbb
test
fcom
mov
adc
adc
or
add
aaa
loopne
dec
mov
dec
push
mov
mov
jne
cmp
jle
dec
sub
nop
sub
dec
lods
sub
lods
push
out
scas
dec
inc
sub
dec
mov
mov
xchg
dec
pushf
xchg
movs
and
push
sbb
xchg
and
adc
cs
and
adc
cs
and
daa
cwde
xchg
and
clc
mov
push
cwde
cmp
adc
lods
mov
fwait
inc
jbe
js
lock
adc
and
xor
lock
inc
jbe
js
je
js
push
sbb
cdq
subps
push
adc
dec
cmp
xor
sub
inc
pop
or
dec
icebp
ins
or
mov
rcl
adc
push
les
pop
dec
sub
dec
enter
inc
(bad)
and
pop
aam
adc
push
xchg
or
or
xchg
fsub
in
in
hlt
mov
pop
mov
jne
and
and
and
aad
clc
and
cmp
add
push
repz
jl
adc
xlat
xchg
stos
adc
xchg
jge
mov
jne
push
inc
inc
dec
ins
sbb
jge
js
dec
dec
out
cmp
adc
xlat
call
or
mov
sub
repz
mov
int
iret
cmp
sub
mov
jmp
out
ror
xchg
les
retf
out
sbb
jbe
push
sbb
and
loop
push
cmp
int
mov
cmp
dec
lods
popf
test
mov
add
cmp
xor
mov
into
pop
inc
adc
jne
mov
sbb
adc
mov
rep
stos
ja
dec
dec
push
jg
pop
ret
or
push
cmp
les
sub
jmp
add
jae
rcl
loope
mov
outs
lea
pop
in
aam
and
sar
ror
xchg
adc
inc
std
lods
call
add
or
ja
push
rol
jne
or
inc
mov
adc
or
(bad)
(bad)
loop
mov
retf
push
add
sbb
(bad)
sti
repz
iret
cld
(bad)
mov
add
jne
and
dec
call
and
and
pop
shr
lds
push
fdiv
xlat
inc
out
test
xchg
shl
call
xchg
fsub
push
sbb
jmp
pop
xor
pop
std
mov
push
add
push
add
rol
test
mov
inc
popf
cmp
aam
mov
push
shr
push
test
inc
cld
dec
and
rcr
imul
shr
pop
int
jns
mov
or
ror
pop
std
hlt
add
ret
or
pusha
adc
mov
push
popf
fs
pop
inc
arpl
out
jmp
mov
popa
fs
push
adc
xor
not
push
inc
push
rcl
imul
jb
fbld
or
add
scas
or
imul
or
push
scas
inc
add
inc
or
std
adc
cmp
cmp
(bad)
cld
adc
xor
inc
hlt
pushf
push
push
pushf
cmp
jmp
adc
sub
push
shl
rcl
sub
lea
add
adc
ins
and
out
push
pop
dec
push
pushw
shr
xor
xor
or
add
or
add
sub
cmp
mov
cmp
or
mov
pop
gs
ins
shr
scas
aas
dec
adc
mov
add
mov
and
bound
sbb
inc
neg
clc
ret
nop
adc
mov
push
inc
cld
inc
add
xor
fldcw
(bad)
jle
inc
push
jne
pop
jno
outs
jmp
mov
inc
mov
or
and
xor
jmp
add
push
and
mov
dec
and
repz
sbb
dec
ret
xor
push
je
sub
cmp
ins
xor
leave
lea
xchg
enter
push
adc
push
lahf
inc
repz
xchg
sub
push
xchg
or
jne
je
jmp
push
sbb
mov
movs
add
or
pusha
jne
clc
mov
test
push
or
adc
cwde
adc
in
jne
nop
sbb
sbb
push
imul
sub
movups
mov
jno
rcl
xor
mov
nop
ret
shr
setnp
lods
data16
mov
popf
add
pop
shr
mov
into
fwait
(bad)
xchg
mov
mov
loope
ret
ds
call
inc
add
add
push
and
sbb
adc
xor
push
shl
sbb
pushf
adc
mov
cmp
sbb
mov
mov
lea
cmp
lock
adc
add
and
pop
push
test
sub
pop
cld
push
mov
sbb
test
pop
jne
test
xor
cli
mov
push
inc
push
mov
cmp
jae
jne
or
mov
dec
add
push
mov
jmp
push
mov
or
mov
das
pop
(bad)
lock
fs
and
jmp
dec
push
push
cld
stc
push
dec
push
or
sbb
mov
mov
andps
pop
out
and
pop
cmp
xor
mov
and
push
jne
sbb
push
push
xchg
pop
ds
(bad)
shl
js
call
xchg
adc
ret
outs
jg
hlt
test
sbb
and
sub
inc
xor
jo
cmp
cld
cs
add
add
mov
mov
addr16
xor
loop
fisub
inc
(bad)
outs
call
jmp
pop
lea
adc
cmp
dec
mov
or
add
mov
lock
mov
dec
mov
or
pop
imul
shl
xor
lahf
dec
jg
xor
sti
test
pop
mov
in
jne
repnz
movs
push
outs
sbb
and
jnp
ret
lea
mov
(bad)
jp
inc
push
push
adc
jmp
pop
test
sbb
cmp
dec
push
call
xor
call
add
das
mov
lods
or
(bad)
jmp
xor
jmp
jns
cmp
adc
sbb
les
jle
sub
or
push
or
mov
and
push
push
(bad)
mov
adc
add
mov
inc
stc
or
cmovno
add
repnz
add
jmp
sub
fiadd
stc
add
add
adc
(bad)
or
add
push
call
mov
xchg
dec
jle
jae
adc
inc
shl
push
jmp
cmp
add
fmul
test
or
test
mov
push
add
push
test
xor
and
mov
sbb
retf
hlt
imul
mov
adc
cmp
jp
mov
xchg
sbb
and
cs
inc
jbe
and
test
mov
pop
xor
lea
xchg
and
or
pop
loopne
jge
les
mov
pop
mov
pop
ret
lock
loopne
inc
bound
inc
pop
push
movzx
or
test
and
and
jg
xchg
sbb
stc
add
ror
adc
fwait
loopne
out
imul
cmps
not
mov
in
pop
xor
mov
add
sti
jmp
push
sar
lods
sbb
sub
ror
push
inc
sub
call
and
imul
or
test
mov
ds
aaa
mov
(bad)
mov
test
in
add
add
fisub
fwait
and
movsx
in
push
or
rol
movs
push
jl
arpl
jge
das
jmp
jae
or
add
sbb
adc
ret
cmp
pushf
push
mov
mov
push
call
xor
adc
dec
jg
mov
add
push
call
adc
jne
stc
or
mov
cmps
repz
sub
movs
popf
sbb
xchg
adc
fwait
mov
or
dec
pop
imul
sbb
pushf
xchg
loopne
sub
ja
ds
rcr
(bad)
punpcklwd
lock
xor
jmp
daa
daa
add
nop
add
jmp
stc
and
clc
test
pop
fs
push
sbb
xor
adc
inc
pop
and
sbb
test
movs
pushf
xlat
adc
ins
sbb
inc
xchg
sbb
mov
je
push
call
je
mov
xor
cmc
test
cmp
sub
pushw
jl
cld
lods
sahf
dec
je
and
cmp
stc
imul
xchg
rol
mov
push
mov
popa
adc
popf
or
adc
pop
push
test
and
dec
and
sbb
inc
lods
xchg
hlt
cmp
or
adc
stc
dec
shl
adc
ror
nop
push
cmps
xor
sbb
je
xor
ret
lahf
mov
test
pop
adc
inc
enter
and
imul
xchg
call
inc
dec
push
mov
inc
fild
adc
or
rep
cmps
ret
inc
rol
push
and
adc
xor
add
and
mov
xchg
inc
mov
sbb
cmp
out
cmp
add
(bad)
mov
adc
add
push
call
pop
inc
enter
xor
push
or
push
aaa
je
xchg
ds
lea
je
mov
dec
dec
fstp
add
jle
push
push
push
test
js
dec
sti
sub
push
mov
leave
retf
sar
push
ja
xchg
shl
enter
sub
test
je
push
inc
fidiv
mul
mov
mov
inc
mov
jmp
mov
or
pop
cmp
pop
mov
clc
dec
stc
xchg
nop
xsaveopt
sbb
mov
and
stos
mov
xchg
dec
jp
pusha
fmul
dec
call
mov
mov
mov
push
(bad)
sbb
adc
push
or
jl
sti
and
js
jg
movsx
mov
sub
data16
dec
jmp
inc
loope
and
add
mov
xchg
arpl
and
mov
fadd
loopne
in
cld
or
mov
cmp
add
sub
dec
(bad)
repz
cmps
pop
fdivr
je
or
jmp
push
inc
pop
sub
nop
xor
movs
adc
inc
sub
sti
sub
lea
push
cmc
jmp
jge
neg
pop
jmp
das
mov
out
or
jmp
js
call
and
nop
mov
lock
add
retf
push
adc
or
je
or
and
push
ja
mov
mov
adc
mov
and
test
jne
inc
jg
xor
push
inc
mov
and
jmp
cli
and
movzx
test
add
in
adc
jg
mov
sbb
inc
data16
das
jmp
clc
fmul
add
sub
sbb
and
pop
shl
sbb
inc
adc
jo
ins
push
and
test
jmp
sbb
add
dec
(bad)
adc
(bad)
loopne
add
sbb
and
or
clc
mov
jbe
inc
mov
call
ror
aam
cmp
repz
cmp
out
int3
or
test
mov
retf
pushf
mov
push
sbb
push
or
loope
mov
inc
xchg
or
xor
cmp
xchg
inc
adc
dec
hlt
mov
jge
sbb
mov
sub
popf
or
dec
lds
repnz
dec
inc
retf
dec
sub
cmp
dec
jle
and
out
mov
mov
xor
rol
sub
inc
mov
mov
in
aad
movs
imul
push
movntps
adc
mov
jle
imul
addr16
jne
pop
mov
sub
int3
repnz
adc
mov
xor
cld
push
dec
mov
xor
sub
xor
fiadd
adc
out
push
in
push
sub
or
and
pop
inc
pop
adc
add
push
ret
or
jmp
call
pop
jmp
imul
das
cld
push
adc
retf
and
xchg
call
and
cmp
call
inc
push
idiv
je
sbb
dec
add
xor
dec
jmp
xlat
cwde
cmp
pop
mov
xchg
adc
pop
mov
xabort
sbb
add
and
add
dec
dec
and
test
add
xor
movs
and
sbb
jmp
push
push
mul
jmp
xor
or
or
cmp
xor
sbb
inc
xor
or
and
mov
jmp
sub
scas
and
cmp
sub
sbb
je
in
jg
jl
out
jae
jo
cmp
test
out
ficom
jmp
sbb
add
xor
popf
(bad)
movs
cmp
add
test
imul
(bad)
lds
out
pusha
and
cdq
push
push
dec
push
test
cld
pop
add
call
js
mov
ret
xor
adc
xor
in
cmps
sti
push
cmp
jno
xor
(bad)
clc
jae
or
sbb
mov
sub
sbb
sub
scas
mov
cmp
jne
stos
xchg
dec
popa
inc
and
add
lods
aaa
fpatan
mov
sub
ret
shl
pop
(bad)
adc
jmp
and
or
test
add
or
and
rcr
xchg
push
loopne
jle
push
hlt
xor
sub
loopne
push
call
push
push
adc
dec
jmp
dec
push
cmps
pop
aas
mov
add
xor
call
pop
inc
das
sar
xchg
cld
add
nop
fidiv
add
enter
frstor
repnz
jae
jle
push
lea
jns
sbb
enter
(bad)
dec
test
shr
push
adc
add
call
lods
add
mov
push
jno
adc
int
test
add
(bad)
clc
dec
push
leave
in
sub
rcr
enter
aas
daa
adc
jle
mov
sar
test
pop
dec
add
push
movs
adc
mov
add
movzx
adc
cdq
(bad)
cs
es
jg
js
mov
imul
jg
stos
sub
sbb
mov
or
lods
cmc
push
sbb
push
and
dec
movs
leave
xchg
or
mov
es
sbb
adc
and
push
inc
fild
std
push
jne
and
ss
outs
inc
loop
xchg
adc
pop
push
push
or
inc
xor
cld
sbb
xlat
outs
cmp
fwait
mov
data16
dec
add
jmp
xchg
push
cmc
xor
pop
movzx
test
pop
je
call
dec
pop
dec
mov
xchg
or
or
movs
jmp
sbb
push
leave
pop
lods
sbb
div
inc
sbb
fwait
add
push
test
or
outs
or
in
shl
mov
or
or
mov
or
out
pop
push
in
and
xchg
or
loopne
pop
xchg
div
and
and
or
leave
sti
inc
adc
mov
daa
mov
daa
fdiv
xor
add
mov
jge
or
cmp
jle
add
mov
test
aas
lea
imul
pop
add
inc
jno
lock
ret
jmp
or
and
adc
pop
mov
cmp
add
push
adc
arpl
sub
adc
and
sti
lea
pop
inc
add
and
pop
sub
retf
push
js
mov
rcl
or
cwde
xchg
sub
xor
test
adc
clc
fcmovne
push
adc
pop
jle
or
and
or
mul
jle
mov
jle
or
sahf
fisubr
mov
lods
or
retf
adc
jp
(bad)
or
es
(bad)
or
es
sbb
cmp
adc
add
jmp
cmp
add
test
dec
cmp
aaa
cmp
inc
and
(bad)
mov
add
cmp
mov
call
rcr
or
pop
jmp
sti
xor
and
in
ss
imul
adc
les
mov
cmp
push
adc
out
xchg
in
jl
add
or
(bad)
jae
cmp
cmc
nop
(bad)
aaa
dec
pop
or
or
rcl
je
scas
test
adc
jo
inc
sub
mov
cmp
jne
and
outs
and
adc
fld
or
cmp
inc
or
aas
jbe
out
sbb
ja
push
push
add
jmp
mov
mov
mov
pop
push
xor
call
ret
jo
cmp
cmp
call
(bad)
(bad)
sbb
jmp
les
fwait
bnd
cmp
or
inc
gs
repz
call
push
cmp
je
push
push
call
sbb
aas
das
xchg
and
das
xor
ret
and
lock
ss
out
adc
dec
hlt
add
ret
jo
leave
pop
cmc
xor
mov
lds
sub
int
(bad)
mov
xor
mov
push
pop
push
mov
sub
(bad)
cmp
dec
jbe
clc
test
int3
not
inc
mov
std
or
mov
or
icebp
dec
add
mov
mov
dec
jnp
(bad)
pop
jmp
mov
mov
psubusw
cs
xchg
rcl
dec
mov
xchg
fcmovnb
rol
xor
xor
inc
aaa
(bad)
popf
cs
add
inc
dec
cli
mov
and
xor
fst
add
push
mov
mov
inc
push
inc
or
xchg
jmp
or
ds
inc
mov
jmp
adc
inc
mov
inc
sbb
inc
int
fimul
cs
adc
add
mov
fcom
jo
icebp
ins
hlt
sub
test
mov
add
sbb
sbb
mov
dec
xchg
inc
pop
jne
or
jmp
xchg
inc
sub
lea
xchg
and
dec
jge
prefetch
push
dec
and
cs
jo
push
les
xchg
in
or
or
mov
dec
inc
jle
inc
movs
mov
mov
inc
mov
ret
sub
mov
cs
cs
push
sbb
repnz
dec
and
add
add
mov
mov
or
(bad)
and
adc
and
xchg
pop
sub
sub
adc
mul
aad
and
pop
je
pop
inc
dec
jl
jmp
pop
adc
dec
adc
sti
or
jmp
(bad)
inc
or
inc
enter
cmp
test
loope
in
jne
stc
pop
or
sub
add
cmp
add
clc
popa
pop
push
pop
xor
mov
xor
xlat
add
cmp
je
pusha
xor
inc
out
imul
or
cmp
push
push
sqrtps
dec
inc
or
push
sbb
push
call
pop
xor
mov
call
add
jmp
mov
add
popa
cmp
(bad)
sbb
fiadd
ss
into
sub
out
iret
jmp
push
xor
adc
cs
cmp
adc
inc
test
inc
call
aam
xor
and
in
cwde
push
xchg
sub
sbb
mov
xchg
cmp
jae
sbb
mov
push
mov
aad
sbb
loop
loop
ins
jno
data16
jle
cld
inc
xchg
mov
push
fnstsw
push
sbb
jl
out
sub
xor
mov
shr
mov
or
add
jae
and
adc
mov
rcl
rcl
push
adc
mov
or
sar
jle
icebp
add
pop
ss
sub
rol
jg
or
jne
cmps
mov
jns
sub
jb
dec
iret
lahf
push
jp
or
idiv
inc
xor
cmp
jl
mov
sar
lea
jne
test
add
add
loopne
push
sub
mov
ret
dec
pop
scas
jmp
mov
pop
push
lods
fst
push
mov
xchg
rol
imul
or
in
or
sti
add
ss
stos
inc
mov
push
dec
imul
dec
pop
sub
xchg
add
or
sbb
mov
popf
inc
sbb
add
test
sub
xchg
inc
mov
adc
or
xchg
sbb
mov
adc
ins
adc
xchg
add
aam
add
push
sub
mov
test
out
jno
mov
push
push
sub
jl
or
jp
add
and
adc
push
enter
call
xchg
adc
xchg
dec
adc
call
mov
or
jle
sbb
inc
fucomp
ret
dec
lods
leave
dec
pop
push
je
push
sbb
repnz
xor
push
cmp
pusha
or
or
push
push
dec
lods
push
and
sbb
jmp
call
jge
push
pop
inc
(bad)
dec
add
push
adc
jb
xchg
pop
mov
xchg
xchg
(bad)
leave
mov
ss
aas
inc
push
adc
mov
iret
pop
xor
pop
jne
movs
jmp
jb
pop
sub
ret
mov
sbb
or
cmp
inc
and
or
sbb
or
(bad)
xchg
into
je
jns
pop
xor
fistp
leave
xor
daa
mov
push
or
dec
test
es
sub
add
xchg
mov
jg
or
xchg
retf
ins
and
mov
sbb
mov
sar
sbb
ret
call
xchg
adc
ret
or
jecxz
outs
inc
jl
or
sub
dec
push
rcl
daa
adc
push
pop
(bad)
shr
test
ss
clc
mov
push
ficom
adc
sub
push
inc
in
mov
stos
aam
pop
and
or
and
adc
jl
xchg
movs
mov
or
jmp
jbe
push
xor
enter
inc
loopne
jle
pop
hlt
mov
cdq
addr16
test
in
clc
jmp
and
hlt
pop
mov
adc
mov
lea
sub
or
lods
sub
push
in
arpl
jb
pop
cmps
or
call
ret
(bad)
cs
lock
inc
add
sub
shr
jo
imul
mov
dec
inc
mov
push
dec
div
out
xor
cmp
push
sti
xchg
jmp
cmp
or
add
cli
add
and
pop
pop
mov
mov
jmp
push
mov
por
mul
and
(bad)
adc
jnp
and
lea
dec
loopne
mov
sbb
push
push
pop
add
test
sub
add
aas
push
or
pop
add
xor
pop
inc
pop
xchg
cld
adc
or
xor
sbb
sub
sub
inc
sub
and
mov
dec
pop
cmp
fidiv
mov
mov
cmp
(bad)
and
pop
arpl
add
sti
add
sbb
rol
je
mov
movs
call
loopne
pop
sbb
inc
xor
call
repz
clc
xor
not
inc
imul
pop
je
pop
rol
mov
gs
pop
fbstp
or
push
jne
mov
dec
(bad)
shl
jae
jecxz
fiadd
in
and
sbb
inc
inc
scas
neg
jne
dec
and
mov
mov
test
inc
push
and
js
mov
mov
fcom
mov
xor
push
lsl
cmps
popf
mov
push
push
call
dec
and
xor
or
adc
and
dec
or
iret
cmp
add
and
scas
adc
js
fld
push
sbb
jo
mov
adc
adc
mov
hlt
add
ror
sub
sub
cwde
dec
sbb
push
mov
push
pop
nop
in
or
mov
ins
sub
adc
imul
push
sahf
fldcw
int3
lods
push
adc
rcr
xor
push
sar
mov
mov
fs
push
stc
add
mov
in
inc
or
sub
jmp
adc
shr
pop
cmp
clc
mov
ffreep
cwde
or
mov
stc
in
and
iret
jne
add
hlt
pop
cld
(bad)
xor
adc
jne
mov
jmp
and
out
xor
pop
dec
jae
icebp
jnp
xor
jmp
inc
cmp
adc
or
and
call
xor
push
(bad)
fcmove
pop
pop
mov
inc
mov
pop
jmp
cmps
fsubr
repnz
faddp
sbb
pop
fild
les
jl
inc
movs
mov
aaa
imul
add
fidiv
jmp
pop
lahf
aam
xchg
call
dec
cmp
add
or
je
jg
fmul
xor
mov
dec
mov
into
jne
addr16
push
retf
add
leave
jl
shl
inc
sbb
test
pop
icebp
dec
pop
(bad)
ds
popf
dec
or
jle
out
enter
or
and
test
add
cmovns
xchg
pop
cmp
hlt
add
and
mov
jne
sub
ss
pop
and
jmp
retf
adc
sbb
push
outs
adc
mov
sar
pop
sbb
sbb
adc
rol
and
push
and
xor
rol
inc
ret
jle
mul
add
shr
or
mov
jl
or
das
sub
lea
dec
loopne
leave
push
jnp
pop
lea
xchg
fs
sub
jmp
mov
or
add
cld
movs
xor
(bad)
cmp
adc
cld
dec
mov
lea
sub
push
adc
pop
push
jo
and
inc
add
imul
cmp
jne
rcr
gs
ror
xchg
dec
mov
(bad)
dec
je
dec
xor
mov
or
and
and
cmp
xor
int
sub
jg
outs
mov
(bad)
pop
mov
test
ins
pusha
nop
sbb
adc
cli
and
loop
push
mov
gs
call
push
loope
push
dec
jno
add
ret
xchg
push
loopne
adc
popa
cmp
sbb
xor
or
sti
or
dec
and
shl
fnstsw
push
sbb
adc
xchg
and
xor
cli
ja
hlt
inc
retf
lock
push
repz
jbe
(bad)
mov
push
push
sub
or
add
sub
(bad)
das
inc
adc
add
outs
pop
dec
ins
inc
dec
outs
or
rol
xor
mov
mov
inc
inc
cmps
enter
shl
add
adc
mov
not
and
mov
std
adc
adc
lea
pop
sub
jmp
jne
push
cld
dec
cmp
mov
retf
add
pop
sar
mov
in
dec
les
add
lods
xchg
pop
sbb
icebp
aas
mov
push
dec
xor
mov
in
push
dec
sub
and
sub
clc
adc
nop
test
and
clc
pushf
nop
pushf
cmc
icebp
dec
fld
cmps
mov
retf
push
jg
gs
add
fsub
pusha
adc
or
inc
dec
mov
xor
cmp
mov
hlt
enter
int3
push
pop
inc
mov
or
mov
int3
dec
cmp
jne
pop
mov
pop
inc
call
pushf
dec
mov
sub
mov
iretw
jmp
and
xchg
dec
icebp
test
movs
cs
xor
xor
je
add
out
inc
popa
and
clc
jmp
outs
inc
ret
(bad)
jge
fild
mov
movs
dec
lds
xor
(bad)
jmp
fmul
pop
jo
stos
mov
xor
cmp
cs
mov
into
je
push
jp
push
shr
cmp
xchg
ja
push
out
jp
ja
jno
or
(bad)
aaa
add
popf
or
jbe
out
loop
add
sbb
xchg
jno
dec
sti
pop
pop
out
mov
scas
push
bound
sbb
dec
cmp
into
adc
or
shl
and
bound
cmovle
pop
sbb
cmp
mov
mov
push
lock
test
shld
sub
mov
adc
in
xchg
outs
inc
sti
iret
push
xor
lods
push
add
push
dec
xor
add
cmp
jne
cmp
and
or
or
std
inc
or
adc
or
inc
or
inc
push
xchg
xor
(bad)
outs
sbb
dec
add
mov
add
sar
cmp
setge
dec
and
int3
inc
mov
xor
xchg
cmp
jl
push
stc
adc
jmp
add
cmp
jae
sbb
jbe
inc
add
lock
fdiv
daa
ss
adc
xchg
outs
out
movs
out
xchg
call
xor
xor
test
fwait
push
xor
cmps
sub
or
xlat
test
push
push
add
jno
cmps
adc
mov
push
movs
mov
sub
fbstp
jp
mov
push
mov
stc
or
imul
xchg
cmp
mov
lock
or
sub
jge
mov
pop
jbe
je
mov
sbb
jne
es
inc
daa
and
out
inc
inc
push
inc
cli
sub
or
or
pop
and
cmp
stos
sub
jmp
daa
xchg
pop
lods
jmp
add
retf
sbb
jbe
or
mov
je
jmp
out
test
jne
ret
jbe
mov
cmp
jb
mov
fimul
stos
enter
inc
loop
sar
clc
pop
into
inc
or
jo
not
inc
ret
sub
pop
stc
or
cs
movzx
adc
adc
adc
pop
or
inc
push
adc
loopne
adc
call
mov
push
sbb
loope
or
push
pusha
and
(bad)
sub
cmp
test
loopne
inc
ret
sub
pop
in
aas
daa
jg
sbb
pop
or
adc
add
or
movs
adc
rol
nop
inc
sub
test
jle
es
cwde
test
push
pop
inc
ret
jl
add
push
push
jne
pop
push
dec
es
mov
clc
jb
and
in
mov
adc
sub
aad
or
sub
into
push
add
jg
or
mov
iret
repz
dec
fmul
pop
cdq
inc
cmp
test
out
ja
xor
(bad)
adc
iret
cmp
xchg
and
rcr
mov
push
mov
fucom
inc
xchg
repz
push
call
nop
test
jle
es
hlt
mov
fwait
push
sbb
xor
adc
inc
popf
stos
push
lea
jne
mov
lds
aaa
or
enter
cmp
add
sbb
shl
or
retf
inc
adc
sbb
add
stc
frstor
and
std
jnp
je
mov
xor
lea
fidiv
sub
mov
shr
sbb
push
imul
mov
add
cmp
lea
test
add
cmp
mov
add
add
sub
mov
or
pop
mov
cmp
add
xor
and
lea
add
repz
mov
test
sub
xor
pop
(bad)
pop
cmp
pusha
add
inc
jmp
(bad)
movs
jae
lds
jmp
arpl
hlt
mov
int3
cmp
mov
sbb
add
inc
jne
call
push
div
imul
push
cmp
pop
xor
and
sbb
js
adc
sub
out
xor
cwde
daa
add
inc
add
jb
xor
rol
jbe
jo
push
and
push
inc
rol
imul
and
imul
mov
or
movs
inc
imul
shl
jbe
push
inc
sub
mov
add
cli
inc
xchg
loope
jmp
jae
inc
sub
add
adc
or
adc
jae
or
fstp
jae
mov
push
jmp
pop
adc
icebp
lock
dec
sub
jae
into
dec
inc
cmp
movs
stos
inc
arpl
add
sub
rcl
out
out
jb
lds
lods
jl
push
push
jae
mov
push
out
lea
mov
cmp
bound
mov
add
push
mov
into
pop
pop
hlt
jnp
lahf
add
dec
push
sub
sub
inc
dec
mov
dec
sti
stc
or
adc
bound
jl
adc
pop
sti
xor
add
xchg
and
test
xor
adc
adc
or
jns
push
sar
sti
clc
cmps
bound
mov
push
inc
jp
cwde
aaa
cwde
dec
push
lock
outs
and
test
je
push
rcl
inc
cdq
mov
daa
jo
and
or
xor
mov
aas
and
in
sti
add
leave
xor
adc
rcl
inc
jecxz
or
adc
(bad)
loopne
push
inc
mov
mov
sub
adc
cmp
dec
test
sub
(bad)
pop
push
push
push
cmp
outs
in
xor
clc
(bad)
aad
xor
hlt
add
and
dec
retf
jb
mov
sub
inc
xchg
or
je
push
pop
test
loopne
and
repnz
lods
arpl
lea
dec
hlt
fcomp
mov
rcr
dec
lds
mov
mov
test
je
sub
or
push
out
test
popa
add
push
inc
mov
hlt
ret
movs
lods
icebp
(bad)
call
pop
mov
bound
hlt
dec
or
pop
add
sbb
inc
adc
xlat
test
xor
dec
xor
mov
test
test
imul
jecxz
push
and
mov
fs
pop
add
push
adc
jge
dec
adc
sbb
push
(bad)
sub
dec
fiadd
xchg
or
and
push
sub
xchg
or
inc
adc
adc
adc
sub
sbb
repnz
jmp
jb
dec
bnd
idiv
inc
in
or
inc
call
lock
jl
add
adc
sub
lahf
sti
movs
fisub
pop
add
push
inc
test
aaa
mov
add
push
jmp
ja
mov
mov
mov
(bad)
clc
into
outs
or
lds
pop
jmp
cmp
xchg
(bad)
clc
mov
cs
xchg
adc
push
sbb
or
pop
jmp
adc
adc
div
mov
adc
jmp
es
pop
xor
shr
leave
fcmovnbe
jmp
hlt
div
jmp
inc
jle
pop
or
jb
cmp
js
js
ret
pop
jbe
dec
dec
call
mov
or
outs
push
or
or
push
dec
outs
adc
enter
or
ins
and
pop
addr16
sub
and
fist
mov
(bad)
push
dec
adc
mov
mov
and
sbb
mov
fist
and
lea
xchg
rol
ja
xlat
imul
push
add
rcr
dec
push
fs
sbb
push
sub
mov
and
lds
xchg
add
std
adc
jb
icebp
cmp
xor
in
std
push
enter
pop
sbb
mov
mov
sub
fs
aam
xor
pop
inc
(bad)
scas
and
lea
dec
sub
call
inc
sar
add
(bad)
int
pop
lds
mov
pop
mov
jg
cld
sub
xchg
loopne
xchg
pusha
inc
cmp
cmps
and
or
ror
fiadd
xchg
or
add
ret
push
jge
add
in
or
arpl
push
mov
cs
ret
test
push
mov
xchg
add
mov
cmc
lock
imul
mov
test
add
mov
xor
cmp
pop
mov
inc
push
nop
jl
imul
cmp
(bad)
adc
inc
push
pop
or
sbb
lds
add
adc
mov
or
sub
in
inc
push
std
mov
mov
push
aas
mov
sbb
mov
sub
cmp
in
push
push
and
push
or
sub
inc
cmp
pop
mov
cli
fmul
add
adc
cmps
cmc
sub
ret
retf
and
sub
mov
mov
push
test
mov
test
pusha
mov
loope
mov
shl
cs
int
(bad)
out
pop
xchg
les
ins
fild
inc
bound
jle
add
xor
imul
jne
dec
pop
sub
cmp
ret
jl
add
sbb
(bad)
jmp
pop
push
test
pop
mov
das
test
adc
mov
xchg
and
std
mov
neg
sbb
cmp
les
lods
inc
sub
cmp
adc
and
test
inc
aaa
mov
and
mov
inc
adc
add
adc
mov
pop
es
mov
or
push
data16
pop
push
pop
or
inc
jne
and
push
cmps
sbb
add
bound
fwait
adc
add
pusha
add
cdq
(bad)
push
xchg
and
mov
sbb
adc
adc
sbb
(bad)
xlat
dec
jmp
mov
sub
jmp
pop
adc
and
sub
cli
jmp
fst
add
cmp
nop
pop
xchg
call
inc
inc
jnp
pop
mov
int3
mov
pop
sar
inc
retf
das
clc
stos
jl
enter
or
retf
ret
jl
dec
cwde
adc
test
jg
add
xchg
scas
mov
add
adc
push
push
push
imul
jne
xor
and
popf
outs
lock
jmp
inc
(bad)
adc
mov
adc
test
or
imul
inc
fld
push
or
pop
sbb
sar
mov
sar
xor
push
add
test
and
cdq
div
jmp
jg
mov
pop
sub
add
test
jmp
push
xchg
sbb
sbb
mov
aam
popa
push
mov
into
jle
pop
sub
aad
mov
or
or
test
jg
dec
inc
popf
js
lahf
add
inc
and
cmps
mov
sub
mov
std
adc
xor
dec
sub
pop
add
movntps
jns
or
adc
adc
or
adc
je
test
in
push
daa
movzx
test
sbb
inc
dec
or
push
mul
push
inc
sbb
test
(bad)
ds
jne
or
dec
pop
dec
and
dec
aam
mov
push
inc
sar
shr
add
inc
adc
or
adc
mov
push
enter
stos
sub
adc
stos
stos
mov
jbe
jge
je
mov
mov
aam
lods
mov
ret
dec
in
pop
test
xchg
es
movs
js
push
out
push
cwde
xchg
lea
push
adc
pop
adc
mov
loopne
mov
add
sub
push
add
xor
sbb
sar
(bad)
ja
add
mov
nop
inc
jp
sub
inc
mov
cs
push
ret
clc
mov
rcr
mov
push
mov
(bad)
cdq
sbb
into
and
mov
jns
jmp
inc
inc
mov
clc
gs
mov
sub
pop
or
or
ret
mov
add
ins
test
pushf
lahf
jle
mov
gs
inc
lahf
adc
and
aaa
jne
cwde
enter
sub
imul
adc
ret
pop
and
dec
dec
mov
and
sahf
or
xchg
or
call
push
les
and
in
push
and
ds
ins
push
stos
mov
sbb
mov
bound
or
scas
pop
push
adc
call
mov
jl
mov
mov
sub
jp
mov
fld
add
lea
xchg
(bad)
int
hlt
cmp
das
ja
loope
mov
and
add
fisttp
sub
mov
jne
pop
and
cli
push
jmp
lea
push
hlt
int
jns
cmc
push
and
adc
stos
xor
xchg
mov
or
sub
js
jecxz
jae
les
scas
add
je
cwde
sti
adc
xchg
add
shl
sbb
add
inc
and
hlt
test
sbb
push
add
jmp
pop
xor
loope
out
in
dec
pop
xor
jb
or
push
lods
dec
into
cmp
movs
jmp
dec
xchg
adc
mov
call
std
call
adc
sub
xor
in
gs
mov
js
or
cmps
jne
jg
outs
and
pop
mov
call
dec
push
addr16
jg
outs
cmp
jmp
cmp
shr
test
int3
add
xor
xchg
dec
cmp
mov
(bad)
cmps
or
(bad)
jp
push
ds
jne
pop
xor
dec
xor
pop
js
or
or
cmp
jne
inc
push
fst
and
seta
add
fs
cdq
mov
test
add
je
mov
sub
jmp
jmp
mov
mov
and
retf
push
dec
aam
inc
iret
pop
or
xor
pop
scas
sahf
mov
out
lahf
or
popf
hlt
jb
test
or
scas
adc
add
lahf
pop
mov
sbb
aas
bnd
cmp
push
cmp
push
call
sub
dec
sbb
sbb
add
ds
and
adc
ja
mov
pusha
enter
adc
add
loope
or
adc
pop
imul
add
popa
xor
fdiv
loopne
mov
jns
hlt
cmp
push
xchg
mov
add
nop
jl
div
imul
xor
inc
cmp
test
mov
or
jne
je
jne
add
lock
jmp
sbb
and
pop
cmp
cmp
les
frstor
sbb
mov
pusha
imul
out
lea
sbb
jge
adc
add
jmp
mov
lds
scas
dec
retf
retf
jmp
repz
mov
(bad)
leave
cmp
data16
mov
ror
leave
mov
mov
jo
mov
sub
test
jbe
xor
xchg
das
push
xchg
push
adc
xchg
adc
cmp
xchg
mov
pop
mov
test
call
scas
pop
bound
adc
fs
pop
add
adc
retf
jmp
clc
aam
add
ret
loopne
cmp
inc
cmp
pop
popa
stc
adc
test
and
sbb
cld
add
inc
xchg
push
mov
stc
mov
adc
mov
jbe
or
push
xor
popa
push
jae
cmp
stos
cmp
xchg
pop
mov
pop
cwde
sub
cmp
enter
dec
or
adc
push
push
jmp
or
aad
add
or
popa
or
cmp
mov
loope
sbb
js
test
cli
and
adc
xor
out
cmp
sub
inc
mov
mov
pop
push
das
lods
xor
xor
xor
mov
mov
pop
push
and
xor
call
push
or
rol
inc
jl
xchg
push
dec
mov
jmp
cmp
and
xor
and
inc
or
add
add
inc
sbb
outs
and
ret
jmp
add
add
test
cmp
mov
(bad)
jle
retf
inc
adc
jmp
dec
or
jne
pop
test
sbb
and
mov
jmp
pop
in
ror
ins
neg
jns
cmp
adc
retf
leave
xchg
mov
inc
dec
into
cmp
dec
test
cld
push
xor
mov
cs
in
sbb
push
jo
stos
int
add
mov
cmp
dec
add
push
call
call
dec
mov
pop
in
enter
sbb
cmp
cs
in
es
adc
scas
pop
and
repz
sub
or
daa
inc
xchg
fwait
ret
hlt
ror
or
ret
nop
or
shl
adc
sbb
test
inc
mov
fild
popa
or
push
test
mov
es
jnp
sub
cmp
aam
(bad)
adc
stos
sbb
sbb
std
adc
les
je
jmp
ds
call
xchg
clc
jmp
pop
mov
pop
and
sub
stos
les
mov
stos
pushf
add
pusha
sar
lea
mov
and
in
dec
js
xchg
sbb
test
and
pop
dec
push
mov
popa
sbb
cmp
mov
and
and
cmp
or
and
add
add
push
inc
adc
adc
xor
pop
loope
cmc
mov
xor
and
or
(bad)
(bad)
nop
rol
call
repz
mov
retf
add
push
fild
(bad)
adc
mov
mov
test
popf
and
jmp
je
in
cs
adc
jb
ror
in
dec
bound
push
cmps
les
inc
mov
mov
fdivr
idiv
or
sbb
repnz
cmp
adc
xor
pop
and
(bad)
daa
gs
int3
sub
mov
aam
cmps
mov
adc
adc
fdivr
fbstp
push
retf
in
push
xor
lea
sbb
out
imul
jmp
or
jnp
jo
int3
sub
mov
popa
jl
jp
(bad)
cmps
push
stos
pop
loop
mov
jp
mov
test
sub
test
pop
adc
add
sar
mov
rcr
xchg
or
aaa
shl
pop
or
sbb
xchg
xchg
or
test
jno
test
adc
fnstsw
push
and
test
push
call
std
or
mov
jmp
add
enter
std
(bad)
jmp
cmp
call
ds
test
in
sub
das
sub
shl
addr16
mov
mov
out
(bad)
push
or
push
cmc
fs
mov
not
xor
bound
adc
adc
jnp
adc
stos
xor
jne
jp
mov
push
or
pop
aaa
mov
sbb
pop
mov
cmp
in
neg
cmps
dec
hlt
sbb
add
cmp
add
call
push
in
(bad)
pop
mov
mov
ds
outs
push
inc
sub
and
inc
retf
dec
dec
loope
outs
(bad)
ja
sub
adc
and
pop
into
or
cmp
add
mov
push
adc
push
call
jbe
repz
dec
scas
or
push
inc
sahf
mov
cdq
pop
mov
xor
lds
and
stc
cs
xor
dec
jmp
dec
aas
in
enter
mov
not
mov
in
je
mov
popa
jmp
out
mov
je
mov
and
sbb
inc
div
call
add
jbe
jecxz
adc
add
cwde
sub
lock
jne
push
dec
mov
test
lods
movs
cmp
cmp
cmp
xchg
and
mov
dec
repz
push
sub
and
cmp
sbb
mov
call
mov
cmp
sbb
push
mov
cmps
push
hlt
rcr
cmp
test
fldenv
dec
push
add
or
lds
idiv
shl
push
retf
in
adc
mov
les
jb
push
ds
gs
jmp
mov
mov
jmp
jge
or
jbe
inc
jle
xchg
out
mov
movs
and
enter
or
outs
push
push
jbe
loop
jmp
rol
mov
iret
sub
add
cld
add
mov
sahf
iret
and
inc
fisttp
test
stos
pushf
jne
int
add
mov
imul
mov
adc
jp
loopne
xchg
popa
lds
retf
scas
lods
sahf
mov
fcom
imul
push
sbb
cmp
push
cs
mov
mov
jbe
test
push
lea
mov
repnz
dec
loope
repz
sbb
add
ret
shl
aad
pop
mov
push
mov
daa
int
data16
jae
xchg
or
xchg
jne
clc
mov
add
pop
add
xchg
ret
loope
inc
mov
movs
inc
push
push
mov
push
mov
push
stos
cmp
call
ds
jmp
add
add
sar
fild
mov
xor
jne
aaa
movs
mov
sub
mov
push
and
int3
ret
jl
cmp
dec
ds
push
cmp
push
loope
add
mov
inc
jne
movs
cmp
(bad)
push
imul
inc
jmp
lods
and
add
sbb
jl
jp
cwde
jge
neg
and
gs
sub
push
pop
inc
out
xor
and
mov
stos
dec
call
scas
fs
push
icebp
mov
ins
mov
sub
nop
lods
iret
and
int
enter
clc
outs
add
inc
neg
sbb
mov
call
xchg
lods
(bad)
inc
adc
mov
enter
scas
sub
das
sub
adc
(bad)
cmp
das
dec
push
cmp
push
push
mov
xlat
adc
sub
jmp
push
ret
xchg
adc
or
pop
ret
sbb
or
push
push
icebp
test
push
sub
popf
push
out
clc
cmp
sub
adc
push
add
pushf
daa
push
shl
stc
jmp
push
es
inc
sbb
in
(bad)
push
shl
ja
add
xchg
cmp
imul
bound
xchg
ss
dec
and
sub
std
fwait
movs
daa
ficomp
les
pusha
mov
xchg
adc
jmp
clc
fimul
pop
add
inc
cld
dec
cmp
mov
lahf
sub
mov
fistp
es
je
and
inc
xchg
shl
jnp
mov
inc
pop
dec
push
and
int3
and
aaa
and
push
sbb
dec
sbb
or
or
pop
icebp
rcr
mov
mov
or
ja
div
or
out
xchg
pop
enter
push
mov
call
movs
or
xor
mov
pop
mov
shr
inc
sub
daa
nop
repz
(bad)
push
inc
adc
retf
fldcw
repz
in
stos
cmp
xor
jl
xchg
xor
dec
sub
cmp
cmp
jmp
inc
sbb
cli
pop
and
(bad)
sbb
add
jmp
mov
adc
and
dec
(bad)
push
imul
jne
xchg
(bad)
cmp
fcom
jne
sub
aam
sub
ret
dec
jmp
and
cdq
cmp
sar
fstp
mov
out
cmc
sub
mov
cs
ror
ret
jle
(bad)
jmp
sahf
and
fwait
push
adc
inc
fcmovb
shr
clc
and
or
pop
std
or
ret
cmps
mov
rcr
inc
les
cld
cmp
jge
or
jg
pop
mov
int3
movs
add
into
(bad)
js
push
mov
lea
mov
xchg
sub
dec
cs
xor
inc
cmp
hlt
repnz
sub
cmp
and
and
add
loopne
hlt
call
rcr
mov
cmc
shr
push
fild
test
fadd
and
xchg
push
ret
fldenv
sub
add
je
test
adc
push
cmp
shl
cmp
sbb
or
ja
or
and
and
lock
inc
or
jle
xchg
je
push
cmp
adc
jmp
repnz
dec
es
pop
into
cli
push
inc
call
pop
inc
sti
retf
jmp
xor
fcom
pop
xor
push
ret
sub
je
xchg
adc
dec
adc
jp
mov
loope
rcr
jge
and
rol
mov
daa
mov
cld
add
es
inc
pop
test
inc
call
stos
sbb
add
out
clc
adc
cmp
xor
nop
inc
dec
mov
inc
neg
jmp
or
and
push
or
mov
daa
and
or
ret
mov
inc
adc
adc
inc
inc
add
mov
pop
cmp
or
pop
adc
mov
cmp
pop
jge
dec
cmp
xor
gs
adc
and
dec
or
cmps
cwde
inc
push
push
or
movs
les
jge
leave
push
push
push
or
push
scas
popa
lds
cmp
sbb
(bad)
xor
call
xchg
jmp
int
mov
adc
in
je
sbb
mov
jnp
mov
sbb
fs
push
sub
dec
(bad)
jmp
ins
stc
mul
sub
inc
fdiv
inc
jecxz
sub
nop
sub
imul
les
jne
add
movs
xchg
js
enter
mov
xor
add
lods
cmp
or
and
mov
jmp
or
and
jle
mov
mov
jl
(bad)
add
push
loopne
mov
shl
adc
loopne
aam
cmp
cmp
jae
and
adc
loope
into
cmp
mul
fidiv
push
push
push
movs
dec
popa
dec
jns
sub
cwde
in
popf
bound
jbe
sbb
sbb
and
mov
cmp
sub
inc
ficom
pop
dec
(bad)
mul
jmp
pop
rcr
shl
(bad)
cmp
jae
sar
push
movs
rcl
pop
clc
jb
data16
ret
sahf
adc
je
or
adc
inc
mov
inc
jmp
and
push
call
sbb
ss
or
lahf
bound
mov
test
push
jo
add
js
cmp
jge
push
hlt
push
rol
cs
jb
sbb
je
int3
mov
mov
and
aam
test
mov
lea
mov
(bad)
cmc
push
push
call
inc
ret
xchg
lea
add
mov
or
daa
inc
jns
xor
(bad)
push
fwait
das
push
or
pop
xor
(bad)
in
imul
imul
xor
xor
ds
push
adc
xchg
fwait
stos
int3
sub
cdq
inc
repz
cli
cmps
add
lods
add
std
mov
or
test
and
dec
push
xchg
data16
adc
out
out
adc
or
add
dec
sub
bound
adc
xchg
(bad)
and
inc
(bad)
adc
and
push
dec
bound
pushf
scas
mov
adc
and
pop
sbb
jno
or
inc
xor
mov
pop
and
dec
jbe
mov
call
in
cs
adc
sub
dec
int3
adc
jo
adc
and
dec
mov
retf
inc
hlt
or
add
stc
add
and
dec
movs
xchg
xchg
and
pusha
adc
jmp
inc
or
inc
clc
lock
adc
and
dec
mov
cwde
and
xor
and
sbb
(bad)
cli
mul
les
test
cmps
and
dec
adc
and
dec
cmp
jmp
mov
and
dec
mov
push
dec
mov
adc
and
inc
cld
cmc
or
xchg
fisub
rol
mov
dec
outs
xchg
pop
and
sub
sbb
or
div
add
dec
mov
inc
xor
push
and
dec
xor
add
mov
inc
pop
xor
inc
add
enter
xor
xor
push
sbb
add
or
cs
xor
ret
mov
(bad)
mov
xor
shl
jmp
fsubr
mov
sub
add
add
aad
ror
mov
add
daa
lds
cld
push
or
fld
add
stos
xor
sub
sbb
fbstp
xchg
jae
inc
rol
jns
je
ins
js
loope
xchg
mul
and
push
outs
arpl
and
addr16
inc
ja
daa
xor
jmp
or
popa
jae
add
cmp
inc
cmp
inc
add
or
add
ror
add
or
add
or
add
push
mov
adc
and
pop
sti
add
mov
lahf
(bad)
fisub
arpl
add
inc
(bad)
and
or
mov
and
add
sub
add
fstp
ror
push
inc
repnz
js
fwait
cmp
inc
loope
dec
fdivr
xor
loopne
sub
jb
pop
add
ret
imul
xchg
loopne
mov
add
push
gs
xor
xchg
or
adc
and
adc
popa
imul
jb
call
imul
sbb
outs
cmp
cld
out
test
je
and
js
jne
cwde
push
popa
jb
addr16
std
jo
dec
push
pop
cmp
push
or
push
inc
cmc
pop
aaa
cmp
out
out
pop
ins
jae
cmp
pop
sbb
data16
mov
ds
dec
in
popa
jns
(bad)
(bad)
shr
movs
sub
popf
xor
jne
ins
je
adc
ja
out
xchg
jbe
fwait
jae
ret
pop
fsubr
ins
dec
jle
rcl
inc
and
inc
mov
or
push
fs
cmps
popa
ins
(bad)
pop
cs
rol
fisubr
push
push
arpl
inc
call
data16
cmp
dec
je
popa
and
adc
jne
outs
sub
jb
jae
or
add
push
aaa
xor
or
push
dec
test
pop
movs
sbb
popf
or
inc
push
into
mov
jmp
dec
cwde
push
or
pop
sub
mov
dec
jae
bound
(bad)
sub
xchg
mov
add
ins
xor
and
test
mov
pop
push
inc
inc
shr
or
leave
outs
inc
ins
(bad)
inc
jmp
pop
cdq
sub
or
cmp
imul
xchg
aam
retf
dec
inc
pop
fwait
dec
and
cs
ins
add
(bad)
or
daa
push
inc
inc
(bad)
out
inc
sub
into
pop
push
sub
cbw
xchg
data16
and
pop
dec
jb
retf
or
xor
sub
cmp
imul
mov
pop
mov
sbb
push
inc
mov
out
push
mov
push
mov
mov
jle
dec
inc
push
fisub
push
or
mov
dec
or
sbb
adc
loope
or
iret
or
and
fst
push
inc
dec
inc
sti
push
pop
mov
mov
push
or
inc
les
test
jno
jge
push
cmp
ds
push
or
cmp
mov
or
xor
add
rol
rol
ret
ret
add
les
in
lds
jmp
add
enter
add
retf
retf
add
int3
add
int
ror
push
push
pop
enter
shl
ret
mov
and
and
and
cmps
fsub
mov
and
xchg
loope
xchg
loop
nop
jecxz
(bad)
in
mov
and
and
and
and
and
and
and
and
imul
arpl
and
and
and
and
push
mul
dec
clc
and
and
and
cld
cld
cmp
cmp
cmp
xor
add
or
add
add
add
es
and
add
or
or
or
or
or
push
or
inc
syscall
inc
adc
inc
adc
mov
adc
adc
out
adc
jmp
and
sbb
sbb
sbb
adc
adc
or
or
add
add
add
cmp
mov
xor
lods
sub
sub
mov
sbb
xchg
xor
xor
xor
test
add
jns
xor
jae
xor
ins
sub
addr16
and
inc
sbb
push
inc
add
or
dec
jecxz
hlt
dec
adc
fimul
inc
dec
cmp
aaa
dec
xor
xor
sub
and
and
push
sbb
sbb
adc
subps
pop
add
or
xor
xor
sub
sub
and
and
and
sbb
sbb
sbb
adc
or
or
or
add
add
add
cmp
mov
xor
js
stos
jns
test
and
lahf
jge
pushf
jle
cdq
jg
xchg
add
or
xchg
sbb
mov
je
or
or
or
or
or
popa
xchg
or
or
or
or
or
or
or
or
or
or
or
pushf
or
ss
or
mov
sub
or
movs
or
movs
or
cmps
or
or
test
adc
or
add
or
mov
(bad)
adc
mov
clc
mov
cmc
mov
repnz
out
mov
jmp
pop
call
push
push
inc
outs
and
jno
jno
adc
xchg
popf
sbb
add
push
outs
imul
mov
cmp
inc
dec
arpl
iret
jbe
test
or
xor
ret
shr
shl
cmp
(bad)
jae
les
sub
sub
sbb
push
fs
cmc
repz
push
imul
push
loop
jo
inc
xchg
jo
push
and
sub
pop
inc
add
mov
and
movs
or
sub
sub
in
fbstp
xchg
adc
ds
loopne
arpl
outs
add
jae
inc
jbe
iret
dec
test
add
dec
inc
pushf
push
out
xchg
arpl
je
icebp
ins
sub
and
mov
push
adc
or
sbb
ins
push
cs
inc
dec
pop
ret
pop
shl
sub
mov
ins
inc
ins
cwde
movs
pusha
or
imul
imul
out
sahf
test
jg
pushf
and
mov
js
mov
cmp
gs
mov
push
es
pop
iret
outs
rcr
imul
xchg
bound
xchg
data16
sub
inc
cmp
mov
and
or
or
add
cwde
data16
xor
ret
xchg
popf
rcl
xor
imul
and
test
cli
pop
call
pop
add
clc
mov
fs
mov
call
sbb
add
mov
push
adc
and
push
cwde
sbb
adc
xchg
dec
int3
into
outs
nop
or
or
les
mov
sbb
xchg
shl
sbb
cli
jns
adc
and
add
or
push
hlt
rcr
push
je
fwait
cwde
inc
mov
or
rol
das
call
push
mov
adc
or
pop
cwde
cdq
or
adc
push
and
dec
push
inc
pop
cmps
sbb
or
xor
ror
xchg
inc
or
pusha
in
jb
fwait
adc
inc
dec
and
cmps
inc
inc
push
and
sbb
nop
cdq
push
inc
cmp
mov
and
inc
push
adc
xchg
mov
fsubr
or
gs
add
push
sbb
mov
adc
or
in
jb
cmp
sbb
mov
and
test
pusha
mov
mov
mov
and
cwde
inc
push
push
mov
and
fdiv
pop
cmp
mov
adc
or
xchg
mov
dec
and
jb
add
push
sbb
xchg
add
jb
xor
les
mov
and
xchg
movs
enter
jb
cmp
sbb
sbb
xchg
jp
cmp
aam
adc
push
sub
xchg
mov
dec
in
jb
cmp
push
mov
aaa
mov
cmp
cmps
inc
dec
int3
add
pmulhuw
cmp
and
in
fsubp
xchg
pop
enter
jb
cmp
mov
and
xchg
outs
enter
jb
cmp
cld
add
push
cmp
aaa
add
add
jno
xor
in
jb
cmp
sbb
mov
and
in
jb
cmp
cmp
sar
imul
mov
and
repnz
cmp
add
jne
xor
cmp
add
enter
sbb
mov
enter
jb
ds
ins
and
in
jb
cmp
pop
inc
push
ret
fild
and
xor
(bad)
stc
arpl
mov
inc
pusha
and
out
add
and
xchg
xchg
bnd
cmp
(bad)
xchg
imul
in
jb
cmp
test
in
aas
and
aaa
enter
sbb
mov
and
xchg
xchg
inc
in
jl
mov
and
cmp
pop
and
das
enter
jb
cmp
(bad)
sahf
add
adc
cld
mov
and
mov
inc
icebp
cld
leave
(bad)
in
jg
jmp
fsin
inc
mov
lds
movs
stc
in
enter
aad
mov
xchg
cmc
jmp
int
lods
pop
enter
popf
repnz
xchg
mov
ret
pop
enter
jecxz
xchg
aas
xchg
sar
mov
in
jg
retf
inc
bnd
xchg
fwait
cld
fisttp
sti
inc
repnz
aas
xchg
out
xchg
(bad)
in
jg
mov
neg
repnz
aas
xchg
scas
cld
out
(bad)
in
jg
(bad)
mov
push
add
or
js
mov
adc
adc
adc
out
and
and
push
dec
inc
nop
pop
mov
inc
add
inc
add
push
xchg
and
pop
adc
and
or
iret
stc
push
pop
bound
rol
mov
test
sbb
popa
test
inc
xchg
add
mov
and
adc
(bad)
outs
push
arpl
imul
outs
popa
ins
jmp
call
in
jle
popf
mov
jge
stc
pop
and
dec
mov
xchg
in
and
das
and
movs
mov
inc
hlt
jge
jmp
xor
pop
xchg
mov
cmps
mov
jo
add
sbb
loope
push
cmp
adc
aaa
inc
mov
jl
in
and
mov
ret
add
add
sbb
mov
or
or
push
add
fbld
adc
inc
sub
inc
push
add
add
cmp
rol
cs
or
add
rcl
and
in
mov
or
(bad)
push
inc
nop
enter
mov
jmp
mov
push
adc
and
adc
mov
sub
adc
mov
shl
push
lods
adc
adc
dec
pop
xchg
adc
sub
sbb
inc
rcr
int3
adc
and
dec
sbb
xor
mov
jns
adc
jp
add
cld
loope
jmp
lock
add
sbb
cmps
add
add
push
and
add
inc
fimul
jecxz
and
adc
push
and
sub
add
add
adc
bound
mov
jo
xor
dec
ins
js
inc
scas
inc
shr
mov
xor
fadd
and
adc
or
dec
cmp
xchg
and
dec
aam
repz
aad
xor
dec
dec
ins
mov
pop
inc
ja
mov
adc
ins
mov
les
add
and
in
scas
test
cmps
fisttp
or
loopne
test
inc
jle
int3
test
sar
fimul
push
or
push
mov
in
inc
mov
cmp
in
call
nop
mov
or
ficomp
rcr
test
cs
fcomp
loopne
add
jle
je
xchg
pop
mov
sahf
jl
add
and
sbb
and
dec
pop
xchg
or
or
or
cmps
cmp
or
dec
pop
adc
cmps
add
sbb
sbb
cmps
adc
and
push
xor
push
sbb
xor
push
cdq
pusha
pop
dec
jl
cmps
sbb
mov
sbb
jb
lods
push
cdq
xor
or
and
adc
sub
retf
cmps
jb
mov
xlat
mov
adc
mov
mov
or
movs
add
cmps
add
stos
add
stos
add
scas
add
mov
pop
mov
sbb
xchg
ja
add
ret
or
or
or
or
mov
cmps
or
xor
jecxz
enter
(bad)
test
mov
push
rol
les
ins
mov
enter
add
add
add
or
loop
pop
adc
or
push
scas
jecxz
adc
(bad)
or
or
add
adc
sti
out
in
cmp
ja
cmp
jp
in
cld
or
adc
or
in
add
push
jmp
scas
push
pop
add
or
adc
jl
sti
mov
sti
mov
fstp
cdq
add
adc
pop
cmp
mov
xchg
ret
cwde
or
add
or
or
icebp
add
add
push
add
out
pusha
mov
or
(bad)
xchg
rol
adc
in
repnz
fild
xor
cmps
jmp
(bad)
shl
or
jecxz
inc
mov
adc
mov
mov
or
add
test
test
addr16
sbb
and
pop
out
sub
or
cmp
or
int3
dec
sbb
jmp
push
cmc
inc
add
fs
pop
jmp
add
jns
imul
and
lahf
mov
hlt
ins
push
outs
jne
sahf
inc
pop
imul
jg
nop
add
or
or
push
adc
mov
nop
or
mov
add
sub
inc
or
xor
and
mov
shr
fwait
adc
sbb
xor
add
pop
ja
popa
push
out
mov
sbb
ins
call
jo
movs
arpl
mov
xor
fdivr
jns
push
aad
rcr
xchg
sub
or
sub
sbb
mov
repnz
mov
dec
jno
repz
inc
mov
sbb
pop
in
ins
push
mov
hlt
mov
test
add
(bad)
std
in
leave
add
fldcw
arpl
cmp
or
cmp
imul
jno
mov
cmp
aam
dec
std
test
or
ins
add
mov
mov
xor
fild
inc
iret
or
rol
stos
lods
xor
cmp
xlat
add
push
popa
sar
and
les
add
shld
sub
add
or
and
jmp
outs
das
adc
dec
push
sar
inc
fdiv
add
add
adc
out
mov
mov
push
movs
in
lahf
xor
mov
pop
js
stc
ror
add
push
loope
add
ins
or
add
hlt
cmp
lahf
bound
sbb
xor
dec
loope
repnz
ds
push
cmp
sbb
hlt
or
adc
cmc
(bad)
fnstenv
mov
jmp
mov
add
sub
ror
pop
popa
mov
into
nop
sub
mov
aam
add
fadd
(bad)
(bad)
shl
push
imul
inc
mov
sar
sub
add
add
or
or
add
daa
adc
mov
leave
and
mov
outs
or
mov
add
push
stc
ficomp
leave
sbb
shl
add
cmp
shr
cmp
mov
ins
mov
mov
call
add
jmp
fild
push
fdiv
adc
arpl
test
fs
add
push
or
clc
iret
push
in
popf
dec
xchg
daa
scas
or
sahf
push
pop
jge
or
shl
repnz
inc
push
imul
retf
add
ss
sbb
lock
add
(bad)
loopne
ror
adc
dec
frstor
fistp
mov
mov
mov
aad
mov
sbb
mov
shl
cmp
fisttp
addr16
out
add
dec
add
fmul
or
pusha
jp
inc
cmp
out
sbb
push
mov
loopne
outs
xor
add
mov
add
mov
loop
push
int3
add
or
das
add
lds
cld
mov
add
add
mov
cmps
inc
xlat
ret
shl
sub
scas
ficomp
clc
fs
add
repnz
pushf
mov
xchg
ins
add
add
jmp
addr16
jb
push
mov
add
jp
loop
scas
sub
or
fwait
mov
xchg
or
mov
fdivr
fisttp
jg
push
rol
clc
mov
push
pop
int
mov
mov
outs
out
or
jle
push
inc
retf
pop
or
adc
sahf
add
imul
add
loop
mov
xlat
push
add
mov
add
popa
cmps
not
add
dec
inc
imul
dec
push
scas
fcomp
(bad)
fldenv
fild
cmp
fdiv
push
cmp
jg
mov
jmp
sbb
mov
retf
mov
add
ss
fadd
xlat
int
sub
push
mov
cs
mov
dec
popa
les
add
push
sub
aaa
mov
or
(bad)
fild
add
sub
pop
add
add
add
xchg
add
push
xchg
inc
loop
cdq
add
sbb
mov
and
xchg
or
or
or
pushf
movs
add
adc
and
push
mov
add
or
iret
push
add
inc
(bad)
xchg
int3
and
lods
ins
mov
adc
pushf
dec
pop
xchg
fsub
cmp
mov
add
dec
inc
xchg
ret
inc
mov
adc
dec
push
xchg
shl
xor
mov
adc
and
dec
dec
xchg
retf
inc
stos
push
jmp
xchg
fisub
cmp
mov
adc
and
dec
inc
xchg
(bad)
and
inc
cmps
mov
adc
and
dec
push
xchg
(bad)
and
inc
mov
mov
adc
and
dec
dec
xchg
into
and
inc
scas
outs
mov
adc
and
dec
pop
xchg
fisub
ds
mov
add
dec
inc
xchg
shl
inc
mov
adc
dec
push
xchg
shl
xor
mov
adc
and
dec
dec
xchg
leave
and
inc
test
sbb
dec
pop
xchg
fldenv
cmp
mov
adc
xchg
lds
and
in
adc
xchg
aad
xor
cmc
adc
xchg
int
sub
in
adc
xchg
frstor
cmp
std
adc
scas
ret
or
push
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
shl
pop
and
and
pusha
and
dec
push
xchg
xor
jo
or
sub
push
xchg
cmp
js
add
mov
fs
dec
push
xchg
xor
je
add
ret
mov
adc
mov
cdq
retf
or
adc
or
mov
adc
and
dec
sbb
push
push
mov
adc
and
dec
sbb
or
and
inc
or
mov
adc
sub
add
add
cli
push
enter
or
or
or
xchg
or
or
enter
adc
mov
mov
add
xchg
sbb
sbb
inc
sbb
sbb
xchg
sbb
and
dec
repnz
ficom
cmps
add
and
xchg
adc
adc
adc
pop
jl
(bad)
in
jg
cmp
loope
shl
jns
les
repz
or
mov
cwde
jo
popf
xor
sbb
bound
and
dec
cmp
pusha
dec
sub
and
cmp
je
push
cmp
call
and
inc
push
xchg
or
jl
inc
pop
adc
cmp
ret
pop
cmp
enter
push
or
or
xchg
or
in
push
out
adc
popa
jb
imul
fs
gs
in
fcomp
cmp
or
inc
adc
mov
adc
and
dec
sub
inc
ins
mov
arpl
mov
mov
inc
add
mov
lods
ins
sub
retf
imul
out
daa
xor
test
popa
cwde
dec
ror
or
xchg
add
add
push
or
sbb
xchg
xor
inc
pop
pusha
jle
mov
pop
push
sbb
inc
or
cmp
mov
add
add
add
push
xor
inc
sub
loopne
pop
leave
mov
pushf
frstor
jecxz
cbw
cmp
push
inc
mov
inc
sub
xor
adc
dec
je
inc
mov
loopne
sub
mov
and
dec
inc
inc
jmp
push
cli
push
jmp
mov
inc
sbb
push
fist
imul
adc
mov
or
push
(bad)
xchg
adc
nop
popa
and
imul
inc
adc
sbb
sub
inc
ins
je
outs
clc
mov
sbb
push
sub
cmp
or
xor
jo
arpl
shl
out
aas
out
nop
cmp
inc
fs
jb
jbe
stos
je
inc
lahf
fstp
outs
fistp
not
sub
pusha
repz
jns
data16
das
mov
pop
or
jecxz
pusha
jmp
ret
pop
mov
jns
fs
movs
sub
cmp
sub
sbb
nop
and
aaa
in
test
push
lods
push
push
mov
xor
out
(bad)
xchg
pop
rol
mov
mov
xchg
xor
push
inc
mov
ins
xor
je
dec
sub
(bad)
icebp
iret
cli
jne
sub
pusha
push
popa
add
mov
fistp
or
cmp
daa
retf
dec
and
test
cmp
sub
scas
repnz
push
outs
mov
mov
jns
sub
inc
pop
pop
dec
test
mov
and
lods
aad
cmp
cs
cmp
out
loope
dec
jle
lds
in
and
ror
or
dec
mov
push
mov
inc
jb
dec
push
clc
les
bound
or
jmp
push
ins
retf
push
gs
inc
popf
dec
outs
cmp
inc
mul
push
inc
bound
popa
mov
pop
jbe
push
cwde
pop
jb
stos
adc
adc
imul
jae
popa
addr16
push
jne
jle
aam
push
fs
xor
jecxz
hlt
push
movs
nop
inc
or
inc
gs
jmp
je
sbb
mov
sbb
jne
jl
adc
pop
js
(bad)
ror
mov
adc
les
hlt
push
sub
or
pop
out
adc
(bad)
test
popa
add
ins
neg
push
or
mov
dec
fst
dec
push
and
pop
call
and
out
jbe
stos
cmps
mov
jne
sbb
shr
popf
inc
mov
sbb
adc
sbb
push
mov
gs
stos
sub
into
sub
lock
sub
mov
jns
es
ret
xchg
aam
mov
cmp
sbb
retf
fnstenv
inc
and
cmp
stc
mov
inc
mov
push
xchg
mov
inc
and
push
aas
adc
in
bound
dec
pop
retf
jns
dec
pop
sub
ds
ins
nop
movs
or
xchg
push
repnz
mov
mov
inc
enter
fsubr
and
sub
addr16
push
push
retf
sub
push
(bad)
inc
pop
movs
jl
push
movs
and
adc
xor
idiv
cmps
xchg
les
int3
es
outs
jmp
sahf
fild
xchg
xchg
loopne
ror
repnz
xchg
jo
and
adc
mov
mov
dec
bound
sub
in
jl
pop
scas
and
cmc
lods
call
ret
mov
mov
mov
push
mov
fldenv
push
push
lods
inc
retf
jns
pop
sub
in
cmps
in
movs
out
ins
pusha
pop
movs
mov
sub
inc
xchg
jp
jecxz
push
enter
dec
sbb
or
in
cmp
cmp
lods
inc
cmps
mov
into
repnz
rcl
xchg
aam
enter
mov
lea
push
push
mov
sahf
add
imul
pop
sbb
ins
adc
cdq
push
mov
xchg
or
lods
add
mov
push
push
mov
or
jl
sub
adc
push
and
fbld
aaa
sub
add
mov
push
push
adc
mov
sub
sub
ins
outs
mov
adc
and
repz
add
cmp
cmp
pusha
add
cmp
jb
int3
adc
xor
add
fsub
push
xor
test
xchg
fdivr
xor
xor
xor
(bad)
xchg
mov
inc
rol
dec
loope
jmp
cmp
stc
lods
stc
mov
aaa
jb
je
(bad)
fnstcw
inc
jmp
addr16
outs
stc
je
jl
cmp
stc
xchg
stc
fwait
stc
movs
stc
test
stc
in
jmp
lock
idiv
(bad)
clc
or
jb
je
jbe
js
jp
jl
iret
add
inc
iret
dec
iret
fs
(bad)
iret
cmps
iret
mov
retf
cmp
xchg
and
test
inc
stos
mov
fucomi
jecxz
adc
call
jp
adc
loopne
cmp
in
call
pop
hlt
(bad)
clc
push
jno
jp
cmp
cld
(bad)
cld
xchg
cld
mov
std
rcl
fsubr
or
mov
fwait
cmc
inc
mov
mov
ret
out
add
call
inc
and
es
inc
mov
retf
shr
loopne
cmp
in
call
pop
cmp
call
push
sbb
mov
mov
aas
xor
xlat
ret
fst
sti
out
loopne
jae
sbb
jb
je
jbe
js
sbb
xor
test
adc
sub
popa
push
xor
leave
fcmovbe
loopne
(bad)
loopne
xor
popa
je
jbe
sbb
xor
inc
sahf
fcomp
ficomp
xchg
lea
addr16
and
inc
pop
addr16
(bad)
std
loope
cmp
mov
dec
cmp
push
cmp
mov
cmp
adc
or
cmps
iret
ret
add
test
test
in
call
shl
aad
(bad)
loopne
out
in
cld
icebp
cld
idiv
std
cld
add
cmp
adc
sbb
sub
xor
xor
aas
inc
aas
dec
aas
push
aas
pop
aas
pop
aas
bound
push
aas
jns
jg
test
mov
nop
aas
xchg
aas
pushf
aas
mov
aas
mov
mov
aas
leave
aas
iret
aas
aam
fidivr
loopne
in
jmp
push
add
pop
dec
or
nop
(bad)
iret
xor
cmp
inc
iret
inc
iret
dec
iret
push
iret
push
iret
pop
iret
(bad)
iret
push
iret
js
jle
test
mov
(bad)
iret
xchg
iret
fwait
iret
mov
iret
mov
mov
mov
iret
int
ror
fxch
(bad)
in
jmp
fmul
aas
push
dec
or
adc
pop
nop
(bad)
iret
xor
cmp
ds
inc
iret
dec
iret
push
iret
push
iret
pop
iret
popa
iret
addr16
ins
iret
jb
js
jge
or
iret
mov
xchg
iret
cdq
iret
lahf
iret
movs
iret
stos
iret
mov
mov
mov
iret
int3
iret
ror
fsub
test
out
out
out
out
out
or
and
add
cmp
cmp
cmp
cmp
daa
aas
sub
aas
ds
inc
aas
dec
aas
dec
aas
push
and
enter
adc
jno
ja
jl
sbb
lahf
cwde
lahf
sahf
lahf
movs
lahf
test
lahf
mov
lahf
int3
lahf
rcr
loop
call
stc
iret
inc
add
or
mov
dec
es
sub
add
stc
cmp
stc
dec
stc
push
stc
pop
std
pop
stc
fs
push
jo
jne
jnp
cmp
xchg
stc
cwde
stc
popf
stc
mov
stc
mov
mov
stc
retf
stc
sar
(bad)
stc
fdivr
loope
out
dec
aas
clc
aas
std
push
add
or
mov
sbb
and
(bad)
shrd
iret
inc
iret
inc
iret
dec
iret
push
iret
pop
iret
pop
iret
fs
imul
jp
or
iret
mov
xchg
iret
xchg
iret
pushf
iret
mov
iret
mov
mov
iret
leave
iret
iret
iret
aad
fcmovne
loopne
out
in
iret
icebp
iret
test
ret
add
or
sbb
pop
shl
sub
repz
repz
repz
repz
repz
repz
repz
push
repz
jle
test
mov
nop
repz
repz
repz
repz
mov
repz
aam
fpatan
fcomip
in
jmp
lock
cld
repnz
xchg
or
adc
and
sub
das
test
cmp
jle
jle
jle
jle
pop
pop
adc
addr16
ins
aas
jae
js
jle
test
mov
xchg
aas
call
aas
mov
mov
mov
aas
int
sar
fdivr
fidivr
in
jmp
aas
sti
jo
xor
push
nop
(bad)
mov
aas
cmp
aas
aas
inc
aas
dec
aas
push
aas
push
aas
pop
aas
pusha
aas
data16
ins
aas
jno
ja
jge
cmp
pop
(bad)
aas
xchg
aas
cdq
aas
sahf
aas
movs
aas
stos
aas
mov
mov
mov
aas
int3
sub
mov
call
lahf
stc
lahf
inc
adc
loopne
xchg
test
sar
sub
addr16
cmp
push
push
jle
jle
jle
dec
gs
jo
jbe
jl
sbb
stc
sahf
stc
movs
stc
test
stc
mov
stc
retf
stc
sar
xlat
stc
fdivr
loop
call
stc
clc
stc
(bad)
clc
add
jb
je
jbe
js
jp
jl
dec
sub
pop
inc
pop
dec
iret
dec
iret
push
iret
pop
iret
pop
iret
fs
push
jo
jne
jp
or
iret
mov
xchg
iret
xchg
iret
popf
iret
mov
iret
mov
mov
sar
aad
(bad)
loope
out
in
stc
repnz
clc
je
add
cmp
cmp
cmp
sbb
sub
and
cld
inc
cld
dec
cld
push
cld
pop
cld
pop
cld
arpl
imul
jp
cmp
cld
mov
nop
cld
xchg
cld
pushf
cld
mov
cld
mov
mov
cld
leave
cld
into
cld
aam
(bad)
loopne
in
jmp
icebp
cld
idiv
cld
cld
add
cmp
cmp
cmp
sub
addr16
aas
cmp
push
dec
cmps
call
push
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
loope
cmp
leave
or
adc
sbb
sbb
es
aas
cmp
aas
aas
inc
aas
dec
aas
push
aas
push
aas
pop
aas
popa
aas
data16
ins
aas
jb
js
jge
cmp
aas
(bad)
aas
xchg
aas
call
aas
mov
mov
mov
int
shl
fsub
fsubp
in
jmp
out
out
pop
cmp
addr16
xchg
and
sub
sub
in
mov
cld
push
cld
pop
cld
pusha
cld
data16
ins
cld
jno
jbe
jl
cmp
cld
(bad)
cld
xchg
cld
cdq
cld
lahf
cld
movs
cld
stos
cld
mov
mov
mov
lahf
int3
lahf
rcr
jecxz
call
lahf
stc
lahf
inc
adc
sbb
daa
lds
cmp
lahf
dec
lahf
push
lahf
pop
lahf
pop
lahf
gs
imul
lahf
sbb
popf
lahf
mov
mov
mov
push
scas
pop
(bad)
lahf
fcomp
in
lahf
repz
clc
lahf
inc
ret
and
and
repz
jle
jle
jle
dec
dec
and
imul
jnp
xor
repz
xchg
sbb
stc
mov
mov
stc
retf
stc
aad
out
in
cld
icebp
cld
not
or
push
inc
adc
sbb
aas
and
or
inc
aas
dec
aas
push
aas
pop
and
stc
je
jns
jg
test
mov
nop
stc
xchg
stc
pushf
stc
mov
cld
mov
pushf
add
aam
ficomp
scas
idiv
cld
cld
add
aas
pop
cmp
cmp
sub
inc
dec
dec
cvtpi2ps
pop
iret
(bad)
iret
push
jle
jle
jle
jle
jle
jle
jle
jle
jle
inc
mov
ret
aas
int
sar
fnstcw
fistp
in
jmp
add
xor
dec
or
adc
pop
nop
(bad)
iret
xor
cmp
dec
jle
jle
jle
jle
jle
jle
jle
jle
inc
jge
mov
xchg
aas
cdq
aas
lahf
aas
movs
aas
stos
aas
mov
mov
mov
lahf
fcomp
jmp
lahf
cli
mov
push
nop
(bad)
daa
iret
sub
iret
ds
inc
enter
out
out
out
out
out
out
out
out
in
xor
repz
repz
mov
repz
repnz
loop
call
stc
stc
stc
(bad)
clc
add
jb
je
inc
adc
aas
xor
aaa
aas
cmp
aas
dec
aas
push
and
push
jo
jne
jnp
sbb
popf
iret
scas
iret
mov
mov
iret
retf
iret
ror
(bad)
iret
fmul
loope
repnz
out
loope
xor
leave
movaps
add
xor
leave
jl
xor
mov
push
xor
pop
iret
mov
mov
xor
mov
outs
inc
cwde
xchg
push
adc
xchg
xor
cmp
push
cmp
sub
xchg
cmps
mov
xchg
sahf
dec
push
fld
sub
xor
es
push
or
xor
cmps
lock
hlt
retf
clc
call
loopne
(bad)
in
pop
cmp
and
adc
adc
test
add
shr
(bad)
sub
cmp
and
sub
xor
clc
push
xor
iret
cli
sbb
movs
in
call
movs
hlt
sar
cmp
dec
xchg
test
sub
cmp
dec
dec
adc
or
mov
push
sahf
retf
jae
jne
ja
sbb
cmp
popf
inc
sbb
stos
lahf
leave
pop
out
aaa
dec
sbb
push
xchg
out
push
das
xor
push
cwde
clc
or
dec
daa
and
ret
rcl
out
jo
loopne
mov
xor
in
call
out
xchg
push
daa
jae
nop
mov
fbld
pop
sbb
outs
xor
je
xchg
jbe
sbb
xor
dec
sahf
loopne
out
add
or
fdivr
pop
mov
nop
push
mov
sbb
cmp
xchg
xor
add
ret
inc
jecxz
aaa
cmp
pop
cs
sahf
cli
xchg
cmp
daa
mov
mov
cmp
jp
inc
ds
xchg
retw
xchg
xchg
loop
jns
es
adc
pushf
and
inc
xchg
push
lock
inc
clc
pop
cld
add
xor
mov
clc
cli
cld
fwait
xor
repnz
mov
mov
(bad)
call
xchg
ss
mov
movs
dec
inc
addr16
test
ss
lahf
aaa
movs
and
cmp
xor
push
inc
dec
addr16
mov
aad
repnz
cmp
js
cmp
dec
add
cmps
xor
test
test
sahf
aas
shr
push
xor
inc
xchg
adc
dec
xchg
imul
sbb
jmp
sbb
xor
(bad)
adc
ss
add
push
sub
(bad)
out
add
cmp
mov
rcr
xchg
adc
repnz
cmp
cmp
cmp
cmp
add
cmp
mov
jo
pusha
sbb
push
aad
xor
mov
in
dec
push
mov
and
cmc
ret
sti
rcr
js
je
dec
mov
arpl
imul
xor
dec
in
(bad)
cmp
ror
xor
cmp
mov
aaa
push
clc
xchg
jbe
sbb
cmp
popa
sbb
pusha
xor
ret
leave
shl
in
dec
lods
call
cmp
jae
loop
in
cmp
leave
call
cmp
imul
shl
(bad)
ds
add
xchg
dec
pushf
mov
test
cmp
jp
lds
retf
push
xchg
push
xor
mov
loop
mov
push
inc
mov
loop
xchg
sbb
addr16
repnz
mov
in
std
lock
xor
ret
pop
mov
inc
inc
popa
popa
sbb
and
push
sbb
fmul
loop
mov
adc
pusha
sbb
and
mov
(bad)
clc
cmp
ret
and
test
pusha
loopne
fwait
in
push
xchg
jo
dec
pop
sbb
ficomp
mov
xchg
ds
xor
addr16
push
bound
dec
and
and
int
jmp
or
mov
mov
leave
add
jl
sahf
js
adc
pop
mov
js
je
jbe
js
jp
jl
jle
sbb
cmp
xchg
xor
mov
jp
dec
or
or
dec
mov
push
je
jbe
xchg
add
imul
lods
adc
xor
ret
loopne
xor
sbb
fcmovb
loopne
fdiv
shl
pop
sbb
nop
(bad)
jecxz
xchg
ret
mov
push
ss
sub
push
mov
mov
stos
aaa
mov
iret
call
jge
cmp
cmp
and
idiv
cmp
or
cmp
push
cmp
inc
rcr
shl
fsubr
div
adc
faddp
gs
in
adc
sbb
cmps
ds
nop
cmp
sub
xor
fsubr
ror
sub
mov
xchg
lock
jp
jno
pop
cmp
sbb
das
(bad)
mov
mov
mov
xor
mov
ret
aam
ss
je
std
fnstcw
and
(bad)
call
pop
adc
rcr
scas
sub
lock
lock
xchg
je
push
mov
or
mov
mov
cmp
data16
jbe
dec
add
leave
mov
sbb
jb
dec
mov
xchg
pop
mov
out
in
xchg
mov
mov
sub
mov
rol
js
xchg
mov
ret
cwde
dec
adc
je
leave
shl
in
lock
pop
sub
pop
jmp
adc
into
loopne
repnz
cmovnp
je
add
pop
cmps
adc
fcom
mul
adc
mov
xchg
cs
cmp
sub
in
jmp
mov
shl
and
icebp
loop
test
xchg
xor
and
loopne
test
mov
fcomp
rcr
fs
and
mov
loope
pop
xor
lock
sbb
push
std
js
jb
dec
fwait
or
test
adc
clc
push
sub
pop
jmp
clc
out
or
std
fs
xchg
(bad)
call
cmp
fs
cmp
cmp
scas
movs
or
mov
clc
movs
cmp
dec
int
cmp
sbb
ror
jmp
dec
mov
les
dec
jmp
cwde
xchg
inc
mov
out
and
cmps
call
mov
in
xchg
xor
mov
add
shl
ficom
push
mov
jl
sbb
xor
stos
dec
loop
inc
ret
dec
cmp
mov
mov
mov
push
rol
xchg
cmp
addr16
(bad)
ins
mov
lds
jp
push
mov
leave
push
ja
jle
aam
mov
ret
(bad)
sbb
cmp
popf
test
xchg
ret
test
js
sub
xchg
xchg
mov
xchg
fdivr
out
dec
xchg
adc
je
dec
lea
adc
call
je
jbe
pop
xchg
or
sbb
ins
xchg
jbe
mov
mov
bound
jae
test
or
shr
xor
je
jbe
dec
mov
sbb
xchg
or
mov
stos
loop
push
xchg
sbb
sbb
lahf
test
push
ss
and
in
push
daa
jg
repnz
rcl
jl
daa
jne
ds
jmp
jb
je
jbe
js
jp
jl
adc
ret
outs
mov
ret
xchg
rcr
pop
shr
adc
xchg
mov
sub
jle
cmp
lock
ins
pop
mov
je
js
dec
push
ret
loopne
ret
mov
(bad)
out
ds
xchg
dec
mov
mov
mov
cmp
mov
bound
add
xchg
inc
mov
jle
adc
pop
je
inc
or
pop
jo
jl
jmp
cmp
push
pop
mov
sub
ror
push
loope
jmp
jle
cmp
dec
cmp
cmp
pushf
cs
cmp
ss
ret
outs
shl
and
sub
jmp
jmp
outs
sub
or
out
push
sub
cmps
ins
les
loopne
sub
cmp
hlt
push
sbb
cmp
cmp
add
pusha
movs
lds
es
pop
inc
rcl
sbb
dec
pop
dec
popa
mov
loope
and
cmp
push
test
or
xchg
daa
sbb
lods
ds
push
or
adc
mov
leave
xor
pop
pop
cmp
add
and
pop
push
xor
or
or
add
add
and
dec
push
pushf
push
xor
dec
adc
movs
dec
mov
push
loope
fld
or
fadd
sbb
xor
popf
and
hlt
loopne
add
inc
cmp
inc
xchg
cmps
clc
rol
adc
sbb
jl
inc
cmp
dec
adc
pop
pop
loopne
cmp
cld
loop
push
sahf
sbb
call
or
adc
in
in
in
(bad)
push
pop
cmp
dec
sub
add
loop
push
mov
fistp
jl
pop
add
or
sub
jecxz
sub
js
dec
and
sbb
clc
loopne
jmp
popf
sub
sahf
clc
jecxz
repnz
fcomp
loope
cld
or
loopne
pushf
adc
mov
daa
repnz
sbb
pop
js
sub
stos
xchg
out
rcl
sbb
stos
jmp
bound
xor
popf
(bad)
push
int
stos
call
xor
dec
ret
mov
daa
stos
in
in
ror
adc
rcl
adc
shr
jo
dec
ud2
mov
daa
stos
fbld
or
mov
shl
pop
nop
sbb
xchg
mov
push
xor
jmp
push
cmp
lock
cld
clc
add
ror
fimul
pop
scas
dec
scas
les
stos
rcl
pop
neg
std
xchg
stos
les
ret
stos
int
aam
cmp
cli
push
test
scas
dec
stos
retf
lock
idiv
mov
mov
repnz
test
xchg
icebp
test
sbb
xchg
mov
enter
mov
daa
jmp
xchg
lock
xchg
cmps
in
xchg
xor
cmp
sub
xor
leave
mov
cmp
ins
fild
popf
mov
aam
or
sub
stos
fs
(bad)
fsubr
das
sete
sub
dec
xchg
mov
pusha
sub
dec
xchg
add
xor
pop
mov
movs
ret
(bad)
ror
loopne
cmp
in
mov
clc
jbe
cmp
inc
mov
mov
shl
push
mov
popa
mov
ret
daa
mov
sub
jb
je
dec
mov
jmp
and
push
repnz
xchg
mov
fs
add
(bad)
lock
hlt
mov
popa
cmp
push
cmp
cmp
pop
xor
outs
mov
lods
push
mov
ins
mov
jo
mov
xor
mov
cmp
cmps
pop
push
ss
daa
inc
ja
jle
popf
call
xchg
arpl
or
cmp
ja
cmps
ds
daa
dec
inc
pop
data16
pop
xor
gs
sbb
mov
aaa
mov
dec
clc
pop
lahf
xchg
mov
sbb
push
fs
lods
xchg
cmp
cmp
inc
loope
pop
loope
push
mov
call
xor
mov
loope
jp
sub
push
lock
push
adc
inc
sahf
dec
pop
ins
sub
aaa
sub
xor
jle
clc
pop
and
inc
(bad)
addr16
and
sub
inc
ins
mov
push
daa
popa
lds
(bad)
pop
dec
adc
sbb
bound
dec
(bad)
bound
adc
xor
dec
pop
add
pop
retf
sbb
push
xchg
pop
mov
call
xchg
rol
push
das
push
xor
iret
xor
dec
dec
push
loop
add
hlt
dec
add
or
mov
push
nop
jp
jl
sbb
xor
popf
adc
mov
(bad)
cld
add
inc
daa
fs
cld
lock
aas
dec
or
sbb
clc
cmps
js
dec
cmc
shr
pop
xchg
xchg
inc
xchg
movs
stc
loopne
adc
sbb
cmp
inc
lock
xchg
push
adc
adc
ds
cmps
repz
std
in
clc
cmp
mov
cwde
cli
jl
cmp
cmp
addr16
test
in
lock
or
cmovnp
loope
jecxz
or
or
sub
js
jp
jl
pop
add
sahf
sub
in
push
(bad)
clc
cs
and
les
jmp
cld
loopne
and
sub
xlat
in
fdivp
call
ds
and
call
test
(bad)
std
in
lods
int3
sub
loope
das
xor
push
in
cwde
sbb
xor
popf
int
aam
fdivp
xchg
mul
retf
fist
adc
(bad)
sbb
sbb
ret
dec
add
adc
mov
in
pop
or
hlt
rcl
pop
rol
pop
dec
sbb
iret
mov
out
sub
or
int3
lock
daa
mov
test
cld
xor
cmp
xchg
mov
loope
cmp
rcr
scas
lock
jbe
dec
rol
sbb
cmp
xchg
aad
aam
clc
cmps
xchg
xchg
mov
enter
out
cmps
cmc
shl
(bad)
loope
jmp
pop
cmps
adc
push
es
call
aas
movs
daa
scas
inc
mov
and
enter
mov
ret
mov
xor
les
popa
in
loope
imul
xchg
js
je
jbe
dec
mov
mov
pusha
sbb
xor
mov
movs
pushf
mov
rcl
(bad)
mov
stos
fs
jmp
dec
xchg
mov
rol
mov
in
stos
test
aas
push
call
cmps
out
xchg
int
ins
xor
sbb
ds
cmp
push
jbe
push
mov
lahf
xchg
xchg
gs
dec
out
les
cmp
dec
fwait
sub
test
rcr
scas
daa
jp
inc
xchg
dec
out
mov
dec
ja
inc
(bad)
out
xchg
mov
and
arpl
push
je
inc
mov
adc
fadd
adc
mov
mov
adc
inc
xchg
test
mov
xor
imul
add
pop
dec
add
xor
test
daa
jns
and
xor
cmovb
pushf
dec
mov
xchg
bound
pop
jp
push
mov
(bad)
sub
jo
ja
xchg
mov
dec
mov
loop
lock
je
xchg
hlt
call
pop
test
mov
sub
addr16
sub
push
add
inc
imul
ds
push
aas
cmp
dec
push
loope
push
jge
pusha
adc
inc
gs
xchg
cmp
js
jp
pop
mov
sbb
cmp
pop
jl
adc
xor
xor
rol
pop
jbe
loope
inc
cmp
das
pop
xchg
lds
lock
push
popf
xchg
jl
sub
xor
cmp
cmp
sub
xor
cs
pop
dec
ret
pop
or
and
sub
inc
in
dec
mov
scas
jae
and
sub
jo
iret
dec
or
bound
aaa
and
inc
popf
xchg
ins
les
mov
cmp
push
pop
imul
sub
jmp
jb
dec
and
ss
arpl
clc
outs
out
push
pop
mov
adc
push
loope
ss
jg
xor
cmp
sub
xor
push
pop
pop
push
pop
mov
shl
dec
movs
push
mov
adc
cmp
pop
nop
cwde
add
or
sub
cld
add
fisub
fld
dec
das
add
sbb
pop
dec
cmp
js
adc
ss
add
push
cld
add
aaa
adc
xchg
in
call
add
cmp
mov
adc
mov
push
daa
sub
jmp
cmp
je
jbe
js
jp
jl
adc
cmp
mov
cs
fdiv
mov
dec
sub
jmp
sub
out
clc
push
ds
ds
shl
add
sbb
and
xlat
sahf
loope
repnz
rcr
pop
push
repz
mov
in
in
pop
or
in
shl
loop
add
aas
jl
out
add
shl
adc
mov
add
mov
mov
add
or
ret
fidivr
pop
shl
fxtract
clc
clc
(bad)
cld
lods
cmp
mov
mov
cmp
stos
cmp
js
jp
dec
stc
sahf
retf
ds
rcl
loopne
jmp
cld
and
scas
cmp
cmp
and
inc
in
mov
sub
(bad)
sbb
jmp
cmp
ds
xchg
rol
mov
pshufw
in
xchg
xor
mov
ret
pushf
add
stos
cmp
pusha
pushf
mov
lods
daa
mov
rcr
lock
pop
(bad)
cmp
das
shl
test
adc
ss
jl
dec
add
ret
stos
movs
mov
jle
pop
rcr
inc
cmp
cmp
std
sahf
sub
ret
fidiv
push
(bad)
repnz
loop
pop
mov
into
enter
lds
(bad)
jmp
add
(bad)
(bad)
out
mov
shl
push
xchg
cld
xchg
pop
lock
mov
pop
lock
cld
je
mov
or
cld
clc
inc
pop
and
xor
mov
ret
outs
shl
stos
fadd
aad
in
mov
pop
cmps
scas
dec
inc
push
mov
fmul
(bad)
sub
mov
jp
mov
mov
aas
int
(bad)
daa
fsub
or
push
pop
nop
push
jg
ss
jbe
adc
dec
sar
ret
sub
mov
xchg
iret
add
das
push
enter
aam
out
in
sar
cmp
add
xchg
mov
int
fiadd
movs
ficomp
lock
pop
mov
cmp
cmps
sub
cld
cs
pop
loop
popa
aam
fld
mov
test
loop
or
sub
or
push
pop
inc
sar
dec
aas
pop
das
jne
outs
xchg
mov
pushf
jo
dec
ret
into
xchg
and
call
(bad)
fmulp
in
(bad)
(bad)
sti
loopne
add
mov
ret
hlt
add
xor
lods
sahf
mov
popa
sar
clc
and
pop
xor
(bad)
push
je
cmp
sbb
add
xor
xor
sahf
call
xor
fidivr
or
sbb
les
mov
inc
ret
imul
cmp
imul
xchg
jle
outs
and
in
dec
sahf
out
retf
xchg
add
(bad)
push
mov
jnp
lahf
xchg
lea
xor
push
mov
mov
sahf
pop
pop
or
pop
cwde
adc
cmp
add
jmp
retf
pop
adc
in
clc
(bad)
and
shr
fldcw
outs
pminub
push
retf
pop
and
xchg
repnz
mov
fbstp
loopne
adc
movs
fdivr
jb
pop
adc
cld
inc
push
jmp
nop
repz
repnz
jo
dec
mov
push
jmp
lock
sbb
sub
loop
push
les
mov
leave
xchg
jmp
push
or
shr
sub
cmp
pop
cs
dec
das
rol
enter
pop
sahf
lock
dec
out
push
xchg
cmp
inc
pop
stos
pop
push
pcmpgtb
movs
daa
clc
vpavgw
in
call
or
push
pop
int
out
lock
add
xchg
cmps
add
jp
dec
outs
sub
pop
or
test
aas
clc
and
inc
jl
retf
push
data16
dec
jae
mov
clc
mov
test
leave
test
test
adc
lods
in
and
lods
jmp
sbb
call
add
daa
scas
mov
cmovno
(bad)
push
leave
bound
test
popf
lock
into
xchg
add
cmp
mov
mov
jmp
sub
jbe
pop
sbb
fs
into
test
mov
(bad)
stos
and
stc
or
ss
daa
xor
outs
xchg
test
xchg
lock
xchg
sbb
xor
fidiv
jb
dec
and
push
pop
push
dec
pop
inc
sub
sub
data16
adc
jmp
jle
dec
jne
dec
mov
in
lods
inc
and
jbe
js
dec
aad
sbb
inc
popf
fs
inc
in
fs
cmp
dec
call
out
(bad)
or
inc
clc
pusha
pop
imul
ds
xchg
and
mov
add
out
loope
aas
daa
leave
cmp
je
mov
into
(bad)
clc
mov
lds
add
enter
dec
xor
je
pop
jno
cwde
mov
push
pop
div
xor
push
jae
jle
or
(bad)
adc
movs
cmp
adc
cmps
pop
jmp
scas
daa
adc
push
call
ret
and
adc
loopne
push
call
dec
pop
cmps
pop
mov
in
and
mov
inc
push
not
inc
cmp
cld
aam
and
test
cmp
clc
or
jb
je
jbe
dec
push
ret
cld
and
test
cmp
es
xchg
hlt
loope
sar
in
dec
lock
popf
add
test
aaa
les
inc
ds
pop
sub
jbe
push
(bad)
cmps
shl
mov
aaa
(bad)
daa
xchg
popa
mov
les
int
dec
sti
repnz
ins
je
dec
jbe
cmp
mov
jo
sbb
cmp
popf
imul
adc
or
out
in
loopne
add
cmps
sahf
lock
mov
sbb
out
out
loope
aas
sbb
mov
push
lock
inc
or
and
nop
clc
and
mov
cmps
shl
sub
adc
pushf
dec
pushf
mov
mov
mov
pop
mov
cld
inc
cmp
and
mov
pop
lahf
enter
or
dec
sub
movs
fdivr
sub
pop
imul
das
ss
in
xchg
test
pusha
sbb
pushf
loop
add
adc
dec
mov
icebp
mov
xchg
in
pop
add
dec
repnz
leave
or
pop
push
or
pop
or
adc
push
add
or
xchg
jle
int3
mov
pushf
xchg
and
pop
and
scas
dec
je
das
and
stc
repnz
ret
mov
ret
js
loop
les
add
xchg
test
mov
jb
les
cld
(bad)
sahf
xchg
adc
aas
in
lock
je
pop
popf
xchg
mov
xor
xchg
mov
pop
xchg
xchg
xor
pop
adc
mov
popf
add
jecxz
cmp
cld
add
sbb
test
bound
push
adc
imul
cld
jge
push
jle
pop
xchg
add
inc
(bad)
xchg
addr16
shr
mov
ret
in
out
push
push
or
inc
and
push
and
fcom
js
add
push
and
lock
mov
in
and
aad
add
cmp
cmp
daa
mov
xchg
call
adc
or
pop
mov
pusha
mov
in
cwde
sub
pusha
rol
clc
shl
es
xchg
jmp
xor
xchg
and
pop
mov
cs
das
jp
lods
popa
lock
cmp
jl
test
xchg
popa
outs
jecxz
call
push
sbb
or
inc
popa
test
sbb
and
push
rol
xor
fsubr
test
rcr
push
nop
push
push
or
cmp
cmp
sub
(bad)
sub
pop
push
ret
js
dec
jge
xor
fcom
push
and
sub
and
inc
sbb
(bad)
adc
fs
in
sti
lock
or
inc
push
mov
movs
sbb
aaa
sbb
inc
ret
imul
fcom
cmp
add
cmp
loope
adc
sbb
imul
dec
jo
pop
loopne
(bad)
es
mov
jmp
or
movs
mov
mov
add
loop
daa
aas
or
lock
xchg
loope
jae
push
sub
dec
or
das
imul
dec
and
popa
push
js
sub
pop
ficom
or
mov
dec
sbb
cmp
dec
adc
les
xchg
mov
and
ret
adc
and
mov
mov
cld
scas
xchg
xchg
in
out
in
inc
xchg
aam
mov
movs
rcr
ficom
push
cmp
daa
add
ins
in
(bad)
lock
hlt
dec
das
cmp
sub
dec
es
in
clc
add
rcl
ret
cs
mov
shl
fcomp
sbb
dec
adc
inc
ds
aas
cli
or
ds
loope
xor
mov
jle
dec
jge
lods
mul
sbb
aas
dec
lods
ret
xchg
clc
jo
xor
and
xor
dec
popa
punpckldq
pop
jle
cmp
or
or
jmp
xor
rcr
jae
adc
mov
inc
or
xor
jle
jbe
cmp
cmp
rcr
push
push
call
pop
aas
cs
xor
cmp
bound
jmp
dec
enter
add
in
mov
(bad)
pop
or
xor
je
sbb
cmp
sbb
cwde
or
add
push
xchg
add
add
dec
pop
xor
rol
shl
or
je
add
bound
add
jp
adc
cmp
out
and
jmp
sub
or
jb
pop
gs
sub
test
xchg
sbb
rcr
lock
dec
push
mov
ins
call
js
dec
fld
aas
hlt
in
aas
icebp
aas
cmc
push
mov
push
sub
push
imul
(bad)
and
aaa
sub
das
xchg
shl
jbe
dec
push
or
sub
jo
adc
push
call
inc
xchg
inc
jmp
outs
subps
test
stos
invd
fmul
fsub
je
jg
ins
and
loop
ficom
mov
jo
xchg
loopne
add
xchg
inc
fs
or
je
js
cmp
push
jl
shl
shl
cmp
scas
js
dec
cwde
xor
shl
pop
jbe
sbb
sub
mov
jb
cld
sbb
enter
and
and
retf
enter
shl
stc
mov
int3
mov
aaa
dec
adc
xchg
sbb
stos
or
enter
test
push
jo
xchg
add
and
leave
repnz
icebp
pop
pop
popa
add
xchg
fdiv
movs
mov
cld
adc
pop
xchg
dec
mov
mov
jp
pop
inc
and
jne
adc
loopne
dec
xchg
jp
imul
push
fs
xchg
adc
repnz
lock
push
xchg
inc
stos
movs
mov
repnz
xchg
pop
(bad)
mov
loop
fiadd
dec
jl
sub
leave
scas
aas
enter
sub
push
jb
je
pop
mov
mov
sub
cwde
imul
mov
dec
push
loopne
mov
inc
mov
ret
je
inc
and
add
mov
test
dec
repz
adc
xor
cld
sbb
cmp
pop
pop
add
jo
jle
dec
or
cmp
xchg
cmp
das
movs
add
push
cli
or
jo
dec
jge
sbb
jbe
adc
loopne
or
loop
push
push
and
push
(bad)
out
mov
sti
hlt
es
adc
cmp
and
repz
and
sub
les
inc
js
mov
dec
js
js
retf
mov
xor
lock
cmp
xchg
fcomp
ror
loop
pop
adc
cmp
leave
sbb
and
push
sbb
add
dec
push
xor
movs
clc
ret
leave
xlat
jl
inc
cld
mov
xor
inc
push
(bad)
and
xchg
xchg
test
(bad)
lock
pusha
cmp
pop
loopne
stc
in
lds
out
std
loope
xor
das
enter
test
dec
in
xchg
sub
xor
jl
push
aam
or
lds
js
pop
or
je
lahf
scas
pop
mov
iret
lock
push
xchg
(bad)
clc
pop
and
dec
mov
jl
push
aam
and
push
call
fwait
dec
mov
mov
je
push
fcom
cmp
and
mov
leave
cld
jecxz
test
dec
lods
push
or
jl
popf
xor
lahf
pop
jp
in
jmp
push
cld
ror
xor
imul
clc
jle
jl
es
fdivr
and
cs
and
push
mov
jp
dec
mov
xchg
in
mov
ror
and
mov
or
(bad)
cmovg
mov
ret
mov
repnz
cld
add
ss
mov
test
lahf
mov
mov
or
loope
div
popa
cli
add
pushf
sbb
and
dec
adc
cmp
or
and
mov
ret
mov
sub
jo
dec
push
loope
sahf
add
push
call
push
stos
cmp
push
out
pusha
jb
cmp
je
pop
das
adc
or
sar
fisubr
mov
fcomp
dec
push
enter
pop
inc
push
je
jmp
fsubr
dec
jmp
xor
lock
adc
in
cmps
lock
sub
mov
dec
sub
push
aas
or
jbe
cs
shl
push
mov
loope
xchg
sbb
scas
fdiv
leave
cmc
les
add
push
mov
inc
adc
inc
aas
fwait
daa
mov
xor
adc
push
test
inc
stc
fs
call
and
push
enter
loope
icebp
das
shl
xor
xchg
test
loopne
adc
jp
loop
loopne
add
add
lock
setbe
hlt
jae
loope
in
push
daa
inc
fsubr
je
pop
jle
cwde
les
mov
clc
push
test
sub
das
divps
ret
lahf
(bad)
pusha
pop
sbb
(bad)
cdq
movs
(bad)
mov
cld
jmp
mov
xor
imul
xchg
sahf
push
sbb
xor
jo
call
cs
jae
test
sub
enter
mov
(bad)
jecxz
add
xchg
daa
cmps
add
jp
jl
jle
dec
imul
fstp
xor
pop
push
push
mov
cmps
lods
ret
loopne
jecxz
test
dec
cli
adc
nop
push
jo
and
mov
adc
call
xor
dec
sub
cmp
mov
jge
in
je
dec
or
or
sbb
pop
pop
and
and
inc
sub
cmp
dec
add
pop
inc
sub
dec
push
push
stc
push
sub
and
jle
jle
pop
ins
or
je
enter
or
mov
jp
retf
cwde
loope
mov
lock
lock
mov
sub
xchg
dec
enter
rcl
fsub
call
in
mov
inc
cld
sub
fs
and
adc
sbb
and
sub
into
xor
mov
cmp
adc
test
mov
aam
xchg
nop
sbb
clc
push
jle
pop
mov
adc
ret
into
lods
ds
mov
or
dec
rol
outs
cpuid
fmul
fmul
loopne
jl
call
inc
sahf
clc
sub
inc
sub
adc
clc
daa
sbb
sub
lock
sub
cli
pop
xor
cmp
inc
pop
clc
pop
dec
xsha256
cmps
push
iret
push
retf
pop
popa
dec
pusha
or
push
dec
sbb
sbb
fmul
nop
ret
pop
add
mov
aas
lods
daa
mov
jo
sub
das
shl
enter
shr
cmps
fsub
cld
in
inc
push
in
dec
inc
hlt
leave
clc
inc
js
cmp
push
jle
retf
adc
sbb
pop
and
adc
sub
cld
cmp
or
dec
inc
mov
nop
aas
pop
sub
jg
sbb
retf
je
or
sub
stos
mov
fcomp
test
lods
clc
test
pushf
daa
mov
enter
ror
aam
les
fmul
in
test
in
lock
hlt
mov
pop
pop
cmp
js
xchg
loopne
lock
mov
cld
popf
test
nop
loopne
test
rcl
les
les
pop
adc
inc
int3
cwde
cmp
or
hlt
(bad)
add
add
and
sbb
and
inc
(bad)
push
add
inc
shl
pop
xchg
pusha
xchg
jno
mov
loope
mov
ins
outs
and
dec
cmps
pop
pop
cld
mov
(bad)
daa
or
cld
pop
mov
sbb
and
cmp
mov
add
jl
mov
dec
pop
sbb
mov
je
stos
jl
push
xchg
jle
dec
lods
or
popa
fmulp
stc
shl
add
add
push
movhps
je
ret
jle
jle
loopne
pop
pop
repnz
push
cmp
push
retf
xchg
mov
mov
inc
ret
or
push
neg
aam
push
add
sbb
inc
push
fwait
xor
test
jo
pop
mov
dec
pop
nop
sbb
and
or
or
(bad)
adc
inc
or
pop
adc
sbb
fnstcw
int
and
push
jo
outs
addr16
popa
ins
loope
shr
shl
gs
jne
out
push
pop
inc
dec
push
sub
gs
mov
mov
mov
repnz
frstor
pop
clc
int3
cmp
test
cmp
or
adc
xchg
mov
lea
shl
repz
pusha
cmps
test
inc
adc
mov
push
add
inc
inc
retf
dec
add
addr16
pop
loopne
fsub
or
push
xchg
sub
inc
out
clc
in
stos
or
ret
int
or
add
(bad)
or
inc
push
push
psllw
(bad)
js
stos
or
sub
jo
push
fdiv
fs
xchg
add
lock
hlt
cmp
das
test
push
cs
js
push
sub
push
dec
and
add
cs
popa
je
adc
daa
lods
xchg
xor
adc
push
das
add
xchg
cmp
sar
arpl
ss
sbb
lock
jb
ins
outs
lds
add
cmp
sbb
clc
pop
push
add
push
mov
call
iret
movzx
movs
sub
or
shl
cmp
movs
pop
inc
shl
or
ins
pop
or
mov
pop
pop
ret
push
mov
push
add
ss
xor
mov
div
fst
push
call
mov
dec
std
test
pop
cs
push
mov
push
outs
inc
dec
push
and
idiv
and
test
mov
cdq
mov
mov
movs
xchg
clc
xor
(bad)
scas
(bad)
xor
or
mov
or
mov
jne
inc
mov
rol
mov
leave
dec
or
mov
fst
(bad)
jne
or
xchg
or
mov
push
pusha
cmp
lea
xchg
adc
mov
and
add
pop
lea
dec
push
or
call
adc
test
jle
jl
cdq
add
fisubr
add
pop
cmp
jge
sub
or
call
jmp
sub
push
data16
popf
das
ins
jo
mov
call
and
mov
cmps
test
mov
mov
pop
add
call
and
inc
jbe
sub
cmp
push
mov
sbb
sub
(bad)
pop
pop
pop
leave
ja
add
clc
or
in
push
push
call
inc
and
mov
inc
push
sub
jne
adc
shl
mov
sub
and
or
rcl
and
push
cmp
jae
mov
idiv
add
jne
mov
inc
outs
adc
add
sbb
fld
inc
jle
ret
call
jle
sbb
and
call
clc
or
add
xor
or
in
clc
cmp
movs
fistp
sbb
ds
imul
fwait
cmp
fstp
loope
ror
cli
enter
test
mov
call
add
jbe
out
push
adc
in
or
test
mov
fdivr
idiv
ret
jae
mov
icebp
popa
repz
inc
aad
aam
sub
retf
fmul
mov
cmp
mov
(bad)
xor
jo
adc
dec
mov
sub
jb
push
addr16
repz
add
or
(bad)
into
inc
or
push
hlt
(bad)
adc
in
clc
ds
jmp
adc
loope
adc
or
mov
cwde
xchg
adc
shl
cld
ficom
add
xor
push
sub
xchg
or
inc
adc
mov
in
ins
or
and
popa
pop
aas
add
shr
add
mov
add
jge
sbb
out
outs
cli
push
mov
and
clc
fs
(bad)
stc
and
jne
mov
scas
xchg
inc
add
xchg
sub
xchg
test
clc
aad
in
jb
jmp
add
adc
ret
pusha
dec
and
out
jg
push
or
fs
ret
out
jne
xor
push
sbb
and
adc
and
push
sbb
and
inc
pop
sti
enter
add
xchg
or
into
sbb
push
push
jns
les
dec
dec
fisttp
dec
cmp
retf
shl
aaa
call
or
in
sbb
adc
(bad)
nop
cs
mov
retf
mov
dec
pop
adc
cmp
push
movs
movs
paddb
ins
(bad)
fisttp
push
dec
or
sub
repz
dec
pop
ins
sub
or
jle
adc
out
daa
adc
add
dec
sub
jg
gs
scas
(bad)
sti
loope
or
xor
and
repz
inc
xchg
loope
jmp
adc
out
adc
xchg
jnp
repnz
sbb
inc
dec
sub
out
popa
mov
jle
adc
cmc
clc
xchg
sbb
inc
lock
retf
adc
pop
xor
mov
mov
add
and
pop
add
xor
jo
xor
push
ins
add
shl
jae
push
or
inc
div
mov
push
add
mov
cdq
add
inc
xor
neg
adc
(bad)
and
mov
xor
popa
mov
or
push
push
inc
ss
fs
repnz
add
push
or
push
mov
mov
and
retf
outs
dec
jg
mov
pop
mov
stc
nop
push
ds
sub
push
adc
push
cmp
xor
dec
(bad)
mov
mov
mov
add
and
xor
mov
mov
dec
and
adc
push
leave
jmp
aas
inc
adc
adc
or
dec
std
adc
and
xor
clc
ret
cdq
sub
adc
xor
pushf
(bad)
jg
ss
or
mov
dec
sbb
add
lea
xor
jb
mov
push
imul
xchg
test
inc
lds
adc
xchg
adc
adc
je
std
or
sbb
xchg
(bad)
xor
cmp
popa
inc
mov
inc
(bad)
movs
sbb
xchg
cmps
pop
add
xor
std
push
repnz
adc
or
add
add
adc
push
xor
and
xor
or
mul
sbb
mov
adc
push
adc
inc
mov
and
pushf
fiadd
add
xor
movs
aaa
sahf
xchg
jmp
cdq
or
movs
lahf
push
aam
mov
repnz
adc
cmc
or
jne
mov
add
(bad)
cmc
mov
push
adc
ficomp
dec
cs
mov
loop
xor
lock
and
push
or
add
addr16
retf
and
or
push
cmp
shl
movs
lds
or
fmul
lahf
cld
xchg
push
and
and
mov
push
dec
stc
push
aam
cmps
mov
inc
sbb
shl
leave
pop
mov
sub
adc
or
(bad)
out
data16
mov
outs
mov
adc
xor
inc
and
div
mov
jmp
inc
and
mov
(bad)
cmp
and
or
adc
lahf
loop
xor
sbb
inc
(bad)
aam
xor
xchg
std
fmul
or
repz
xor
add
sub
addr16
xor
movs
inc
xlat
add
repnz
mov
add
out
and
and
push
and
add
(bad)
stos
cmp
enter
dec
inc
shld
or
jb
test
or
xor
sub
push
or
(bad)
mov
pop
daa
and
out
add
mov
dec
pop
xor
adc
pop
xchg
push
sahf
inc
or
dec
jo
and
cmps
arpl
cmp
mul
xor
pop
pmaxub
mov
dec
sub
pop
inc
in
and
jnp
mov
add
mov
add
add
pop
movs
mov
xor
std
push
out
xor
pop
dec
fcmove
xchg
pusha
jle
or
push
cmp
ficom
xchg
sub
sub
dec
inc
mov
(bad)
jecxz
inc
mov
jnp
jne
pop
adc
cmp
dec
jbe
push
mov
(bad)
loope
inc
dec
pop
sbb
shl
push
cmp
movs
jge
push
push
dec
push
adc
jg
pop
jl
sbb
cmps
scas
test
inc
daa
adc
push
add
pop
mov
sub
clc
push
mov
sbb
scas
add
mov
aas
xor
out
clc
or
in
and
push
add
pop
xor
rep
cmc
dec
sub
das
pop
sti
mov
sub
fs
test
xchg
jg
fld
mov
mov
mov
or
or
or
cmp
add
mov
cwde
inc
fwait
stos
mov
xor
sbb
mov
inc
or
in
push
stos
pop
and
pop
ret
jns
xchg
cwde
or
pop
inc
dec
dec
test
das
and
mov
pop
in
les
mov
dec
add
and
mov
fdivr
lods
push
inc
test
add
xor
outs
pop
add
sbb
out
loope
es
in
dec
mov
stc
jae
and
push
std
and
pop
or
popa
pop
jb
sub
retf
adc
pop
dec
lods
jo
out
cwde
fldenv
mov
in
mov
add
or
cmp
dec
cld
add
or
jns
pop
or
jmp
or
pop
dec
push
jne
dec
push
movs
xlat
add
or
inc
pop
push
and
xchg
mov
ss
push
and
(bad)
inc
add
xchg
repz
in
pop
sbb
aam
inc
push
(bad)
cmp
pop
cld
stos
mov
jge
add
xor
xchg
outs
or
inc
inc
mov
push
pop
je
jbe
das
adc
sub
daa
xchg
sbb
add
movs
int
cmp
pop
pop
push
sbb
dec
or
push
mov
pop
enter
sub
aad
pop
sbb
test
inc
gs
cs
addr16
push
mov
adc
mov
push
and
int3
lods
inc
and
cmp
inc
add
adc
mov
test
jmp
adc
cmp
sub
out
mov
in
add
inc
add
retf
xchg
pop
push
(bad)
jecxz
bound
(bad)
jge
fxch
xchg
mov
nop
lods
inc
call
mov
pop
pop
or
cmp
inc
or
and
rol
in
enter
les
cmps
fsub
rol
mov
cmp
xor
(bad)
jne
xchg
jae
(bad)
rcl
add
adc
add
fnstsw
inc
adc
or
adc
icebp
sbb
xor
jno
add
cmps
and
loop
test
and
xor
xchg
sahf
inc
repnz
(bad)
push
sbb
sub
adc
sti
xor
mov
xchg
push
cdq
outs
and
sbb
mov
push
(bad)
jl
fcmove
or
pop
lahf
mov
mov
inc
lods
cdq
je
inc
or
cld
xor
dec
xor
inc
mov
pop
ret
and
sahf
add
dec
data16
retf
push
addr16
mov
push
loop
idiv
inc
xlat
in
(bad)
ret
sahf
adc
jmp
and
xchg
(bad)
test
xor
cmps
jp
pop
adc
ds
and
add
pop
xchg
xor
push
xor
popf
push
movs
cmps
jo
mov
ins
or
(bad)
loop
mov
cmp
dec
xor
xchg
or
mov
pop
mov
test
pop
add
leave
sbb
and
dec
lahf
mov
add
add
mov
or
or
dec
jl
sahf
push
xchg
enter
pop
mov
sub
or
outs
aaa
add
enter
in
pushf
or
inc
cmp
xor
outs
(bad)
jmp
pop
or
add
js
sbb
ret
scas
into
pop
cmps
jmp
mov
lods
(bad)
dec
pop
adc
sbb
pop
xor
loop
adc
sub
and
jmp
js
push
pop
adc
lahf
push
inc
and
rol
push
or
push
push
aaa
(bad)
dec
div
xchg
fs
inc
cmp
ins
je
mov
in
and
sar
pop
cmps
pop
sub
push
not
mov
inc
dec
adc
push
jge
mov
ret
je
sbb
shl
sub
jne
pop
jbe
ret
call
mov
mov
jmp
(bad)
and
xor
je
mov
shl
mov
test
jne
aaa
push
jnp
adc
fmul
mov
pop
adc
(bad)
mov
jae
lea
and
inc
cmp
jb
icebp
inc
mov
pop
jbe
and
retf
(bad)
es
add
mov
xor
add
test
mov
je
add
into
jb
mov
pop
dec
sub
daa
pop
and
(bad)
mov
sbb
test
push
mov
mov
mov
shl
and
pop
push
add
or
add
pusha
sbb
ret
sbb
sbb
inc
add
push
add
mov
push
push
or
loope
mov
int3
and
mov
cmp
ret
ds
or
je
jbe
cmp
jae
add
lea
cmp
jbe
or
cmp
jne
dec
mov
repnz
sar
clc
inc
jae
add
cmp
mov
pushf
pusha
call
dec
sbb
sub
push
iret
clc
out
push
ret
leave
jbe
popa
jg
iret
push
or
add
xchg
rcr
rol
jmp
add
adc
mov
push
jbe
(bad)
inc
dec
sbb
push
push
mov
fld
sbb
xor
add
test
sub
mov
or
movs
sbb
fidiv
popa
mov
sub
xor
cmc
retf
and
mov
xchg
data16
inc
dec
ret
fs
movzx
cmp
(bad)
scas
(bad)
inc
cmps
jmp
push
cwde
pop
imul
adc
add
pop
das
and
inc
jno
add
fs
stc
cmp
je
add
and
sub
pop
test
fcom
out
inc
xor
wbinvd
in
ret
pusha
aaa
and
pop
pop
mov
mov
xchg
cld
sub
mov
add
push
mov
std
dec
jae
dec
mov
ins
mov
push
aam
xchg
call
push
fst
iret
sub
cwde
jg
(bad)
cmp
clc
call
loope
mov
xor
inc
setl
bound
(bad)
js
mov
dec
adc
push
mov
jmp
es
outs
or
adc
xlat
jle
add
nop
jne
dec
push
inc
or
sbb
sti
cli
dec
rcr
ins
add
int3
mov
popa
push
ret
jne
push
xor
je
xchg
sbb
fisubr
(bad)
adc
pop
ret
mov
push
jge
sbb
xchg
push
and
push
pop
mov
or
sub
xchg
mov
and
push
push
mov
xchg
pop
mov
push
inc
sbb
addr16
adc
lahf
or
test
int3
mov
fcom
imul
add
mov
and
(bad)
movs
adc
jmp
add
add
dec
hlt
ds
retf
daa
dec
mov
and
or
mov
ja
xor
pop
cmp
cmp
push
icebp
inc
xchg
and
aaa
jmp
loopne
jl
call
mov
mov
jge
push
adc
les
lahf
cs
mov
call
mov
xchg
out
lods
rol
inc
jmp
inc
or
nop
or
or
mov
dec
add
cld
and
hlt
push
mov
jns
shl
mov
adc
aam
mov
lods
add
mov
mov
test
adc
xor
sub
dec
cmps
add
int
inc
bound
or
and
adc
push
out
sub
push
adc
leave
movs
scas
adc
es
rcr
inc
jno
jne
mov
test
xchg
sub
or
jno
js
cdq
xchg
or
test
cmp
or
ds
repz
(bad)
add
outs
cmp
test
jb
mov
test
mov
mov
sar
sub
sbb
mov
cmps
add
mov
mul
add
xchg
and
ss
or
push
jmp
cmp
xor
pop
dec
push
addr16
daa
jecxz
fidiv
(bad)
push
or
sbb
and
inc
pop
jns
ins
popf
cld
and
pop
adc
call
and
xor
in
pop
call
div
setge
jmp
dec
mov
or
inc
sbb
inc
popf
(bad)
int
(bad)
sub
mov
mov
inc
mov
mov
sar
xchg
adc
lds
int
adc
lea
popa
mov
inc
xchg
sub
sbb
dec
test
cmp
jo
sub
mov
adc
jb
je
pusha
adc
add
xchg
adc
dec
ins
es
xchg
mov
and
add
loopne
nop
scas
lahf
jmp
call
rol
push
cmp
jae
data16
dec
xor
sbb
inc
data16
push
cmp
jae
xor
int
mov
sbb
add
je
es
stc
sub
xchg
sbb
outs
rol
sahf
sti
cwde
jbe
hlt
xchg
cmc
sbb
xchg
adc
clc
dec
test
clc
sub
mov
cmps
jecxz
jle
or
iret
cmp
fsubr
push
cmps
repnz
push
mov
and
inc
xchg
mov
add
cmp
jle
push
shl
sbb
js
xlat
lea
call
lods
test
sub
int
imul
adc
(bad)
push
mov
mov
repnz
test
jmp
icebp
inc
(bad)
inc
adc
jge
sub
mov
or
or
shr
inc
jg
inc
mov
xor
sub
mov
add
push
inc
cwde
outs
clc
cwde
stos
or
or
adc
and
aam
sbb
je
adc
sbb
sbb
int3
add
adc
adc
shl
add
add
popa
jmp
and
adc
cmp
popf
mov
xchg
stos
push
xor
cmp
fwait
imul
and
fild
popa
or
in
ret
test
test
push
cmps
or
je
stos
xchg
popf
push
mov
test
cwde
nop
jmp
inc
je
xchg
and
xor
pop
rcr
jmp
inc
push
jl
add
cmp
sar
scas
push
xchg
ins
dec
push
imul
adc
test
jmp
es
pop
sub
xor
adc
fld
les
or
sbb
iret
and
retf
push
adc
adc
test
mov
inc
push
mov
ror
push
lea
sub
in
nop
mov
enter
or
jmp
mov
xor
add
jnp
nop
test
or
mov
push
ds
cmp
or
cmp
sbb
mul
ins
clc
or
cmp
lock
cs
jmp
mov
push
cmp
pop
pop
and
add
nop
dec
test
push
push
adc
je
scas
(bad)
jne
jns
aaa
dec
mov
jne
imul
dec
sub
mov
xchg
add
mov
or
push
inc
or
pop
cld
cmp
sbb
mov
mov
push
mov
sub
nop
sub
or
retf
and
adc
xlat
push
cld
call
jnp
push
cmp
movs
sbb
lea
inc
enter
fwait
out
sbb
retf
jecxz
lods
rcl
test
dec
imul
push
add
or
retf
iret
popa
inc
xor
rol
or
lea
pop
in
repnz
adc
sahf
push
inc
or
(bad)
add
jle
adc
loop
cmc
push
nop
jl
fstp
nop
mov
setnp
sub
inc
and
(bad)
sub
mov
inc
cmp
dec
sub
iret
mov
push
(bad)
push
or
add
not
push
(bad)
cmp
out
jo
je
xor
data16
push
call
mov
popf
cmp
jge
xor
adc
inc
sbb
add
sub
cdq
dec
and
adc
test
jmp
sub
es
or
fs
or
and
or
imul
sub
lods
mov
fwait
jmp
mov
test
or
cld
dec
or
sub
stc
sub
sbb
jge
lods
cmp
imul
inc
or
push
jp
and
clc
ret
pop
and
and
add
inc
jg
stc
sar
mov
xchg
pop
loopne
lods
imul
push
rcl
call
xor
and
cmp
sbb
addr16
in
xor
clc
shl
mov
dec
mov
js
adc
fmul
xor
jns
sbb
and
sar
in
popf
jnp
push
pop
imul
(bad)
mov
hlt
enter
jo
sti
out
cmp
add
dec
or
ja
inc
ror
push
scas
iret
movs
leave
mov
sbb
shl
call
es
aas
add
add
fidiv
cmps
call
loop
test
or
sbb
ret
push
lods
jo
adc
push
fisttp
push
std
fwait
and
enter
pushf
in
and
cmc
pop
enter
mov
jmp
xchg
push
lods
sbb
ins
fild
ins
addr16
or
(bad)
xchg
nop
fild
or
in
test
ds
movs
or
jmp
iret
test
mov
test
pop
and
es
mov
adc
dec
dec
hlt
jae
or
repz
jns
sahf
adc
jno
mov
inc
data16
repz
ss
mov
mov
xor
mov
in
enter
test
sbb
jge
lods
imul
adc
mov
loope
add
sub
outs
xor
xor
or
loop
mov
sub
jmp
cli
les
fs
test
mov
pop
push
fs
xor
fcmovu
test
mov
add
push
out
adc
lea
lds
xchg
add
pop
popa
sar
pusha
xor
mov
inc
aas
xchg
cmp
hlt
adc
dec
sbb
jno
mov
das
add
push
mov
inc
dec
in
mov
shl
jle
lea
cmp
cmp
mov
xchg
pop
mov
sub
and
push
or
js
add
enter
mov
loopne
les
sub
ins
ret
inc
fisttp
add
arpl
call
dec
enter
sbb
retf
lock
imul
mov
call
cs
adc
mov
js
mov
(bad)
push
lock
lahf
and
xchg
mov
adc
(bad)
jle
inc
add
push
pop
mov
cmp
call
pop
mov
sbb
js
xor
cld
shr
inc
cmp
sub
jl
fs
ret
and
push
enter
cli
icebp
mov
dec
cld
hlt
add
fcomp
fcomp
inc
inc
push
sub
lock
xchg
lahf
xchg
sub
lahf
test
cli
sub
cmp
mul
mov
retf
retf
and
das
(bad)
neg
imul
or
cmp
xchg
xor
xor
xchg
fwait
push
hlt
movs
add
xchg
loopne
push
fdivr
push
xchg
es
inc
jbe
add
enter
jae
mov
xrelease
pop
das
xchg
(bad)
(bad)
sbb
test
out
and
aas
pop
cmp
ret
and
mov
dec
pextrw
mov
cdq
pop
outs
mov
cmp
mov
les
xbegin
mov
push
call
icebp
retf
in
dec
ret
call
adc
ret
hlt
pop
and
adc
out
pushf
ret
push
ror
push
lock
loope
ret
and
ror
xchg
(bad)
hlt
xor
out
movs
mov
imul
shr
mov
jle
xchg
dec
adc
enter
push
aaa
lea
jnp
xchg
bound
std
jmp
data16
rcr
xor
inc
(bad)
pop
inc
push
and
adc
and
push
sbb
pop
and
xchg
imul
out
mov
add
sub
out
es
push
pushf
or
cmc
sbb
xor
mov
dec
lock
(bad)
shl
bound
cmp
xchg
adc
inc
das
pop
lock
or
outs
push
es
adc
add
add
scas
jmp
repz
pushf
mov
loope
mov
fidiv
idiv
adc
sub
lock
cmp
mov
or
into
rcl
out
push
out
sub
inc
pop
in
test
ds
inc
cmp
fadd
vunpcklpd
pop
stc
xchg
outs
pop
outs
ds
out
jb
mov
out
out
cmps
fild
add
jmp
dec
fdiv
mov
mov
lahf
mov
jmp
push
mov
mov
(bad)
adc
int
adc
in
xchg
inc
add
adc
je
(bad)
movs
stc
inc
xor
lods
call
and
sub
jo
or
jmp
stos
mov
not
test
mov
fxch
xor
call
es
mov
in
nop
and
push
or
lea
dec
adc
call
jmp
in
mov
or
adc
xor
pop
mov
push
hlt
mov
jne
es
pop
in
and
or
(bad)
aam
in
lea
movs
dec
sbb
gs
and
mov
dec
shl
enter
adc
stc
fadd
jae
or
jge
push
sub
sub
test
inc
add
push
ja
sub
sbb
sub
aam
sbb
in
fsubr
adc
es
adc
fmul
test
push
mov
loopne
test
xor
retf
xchg
pop
and
cmp
and
jmp
inc
sar
int3
or
adc
popa
inc
inc
push
fmul
inc
push
inc
push
jns
inc
in
out
xor
mov
jp
mov
push
in
xchg
dec
push
mov
jmp
mov
mov
jmp
jl
dec
push
std
fs
sub
cmp
test
cld
jl
cdq
xor
and
jp
jmp
xchg
inc
sbb
into
or
jmp
gs
and
test
jmp
or
inc
mov
dec
or
mov
stc
sub
movs
stos
pop
inc
sbb
retf
mov
test
sbb
mov
inc
jmp
std
(bad)
ds
shl
out
gs
test
mov
(bad)
add
(bad)
cdq
imul
dec
fcomp
movs
pop
call
test
retf
push
or
cdq
fbstp
and
xor
or
outs
lea
sbb
add
dec
inc
fidivr
fnstcw
or
xchg
and
jle
push
leave
mov
in
push
mov
cmp
jmp
cld
call
in
pop
ror
sub
enter
or
ret
jbe
inc
or
dec
mov
dec
pop
dec
sbb
call
(bad)
xor
cmps
fidivr
push
mov
and
jae
push
callw
sub
cmp
jge
sub
and
aam
xor
cmp
loopne
or
cmp
sti
cmp
lahf
and
call
sub
add
push
xchg
adc
mov
mov
pop
and
push
shl
fsub
or
jl
sub
daa
sbb
jl
(bad)
mov
inc
out
or
cmp
retf
jbe
inc
push
adc
arpl
pop
and
mov
cmps
push
adc
mov
mov
mov
cmp
and
ret
rol
mov
call
ins
xor
inc
cmc
(bad)
push
sbb
or
mov
outs
sbb
test
adc
add
into
jge
jne
sahf
push
loopne
daa
adc
call
mov
je
outs
and
cs
add
cmp
and
jg
test
xchg
push
push
call
inc
popf
or
mov
fs
sub
jge
push
inc
cmp
xchg
in
daa
xor
dec
fwait
in
xchg
jp
xchg
adc
or
popa
lds
je
inc
jmp
or
and
xchg
sbb
adc
dec
in
jl
inc
or
jmp
and
sub
enter
cwde
js
sbb
adc
lock
push
xchg
sbb
dec
add
lahf
dec
sub
cdq
fs
cmp
jmp
add
arpl
mov
push
test
mov
add
pop
and
or
pushf
sbb
or
inc
lods
and
je
or
or
xchg
and
nop
test
adc
je
shl
jg
xor
xchg
push
xor
push
adc
mov
ret
(bad)
fidiv
sub
das
mov
cdq
pop
pop
or
xor
mov
cmp
sbb
or
mov
pop
xor
ror
xor
pop
xor
push
inc
aaa
adc
out
in
add
aam
dec
repnz
(bad)
test
mov
mov
sbb
aaa
mov
loope
push
push
(bad)
emms
test
loope
and
mov
fcomp
and
jmp
sbb
and
movs
rol
mov
je
retf
popa
jae
or
mov
xchg
and
or
push
push
inc
add
adc
jo
dec
lock
pop
adc
mov
dec
stos
fld
and
jbe
dec
ret
jge
(bad)
stos
movs
icebp
(bad)
jbe
dec
fs
pop
inc
add
cdq
clc
sbb
mov
test
pop
shr
dec
dec
xor
sub
mov
add
js
pop
and
inc
or
setg
and
mov
test
je
mov
xor
jmp
mov
push
icebp
arpl
adc
and
add
in
mov
inc
enter
data16
and
aas
jmp
leave
jmp
sub
adc
inc
lea
mov
das
ret
adc
inc
outs
pop
inc
(bad)
xchg
adc
sbb
adc
add
and
adc
inc
and
xchg
jbe
test
or
add
cmp
iret
inc
cvtpi2ps
push
movs
sub
xor
or
sub
sbb
js
or
or
or
pop
inc
mov
(bad)
(bad)
(bad)
(bad)
std
adc
mov
mov
or
mov
(bad)
adc
pop
jmp
imul
cmps
mov
aaa
adc
das
test
xchg
adc
mov
add
mov
pop
pop
dec
retf
adc
cmp
pushf
or
dec
or
arpl
push
dec
or
rcl
or
out
add
dec
xchg
mov
or
and
shl
dec
push
cwde
loope
nop
mov
jmp
jb
or
cmp
sbb
lea
adc
lds
popf
inc
loopne
retf
xor
xchg
push
xchg
jnp
add
mov
xchg
(bad)
mov
inc
add
xchg
pusha
dec
mov
xchg
push
adc
xor
hlt
in
sub
test
shl
add
mov
and
sar
cld
adc
and
test
sbb
xchg
lock
add
and
enter
call
mov
sbb
or
mov
inc
jmp
xor
add
jmp
or
shr
ret
pop
cli
mov
cmps
ins
pop
andps
inc
stc
fsubr
aad
dec
push
inc
pop
pop
bts
cmp
cmp
inc
cmp
sub
enter
xor
sbb
push
adc
std
enter
hlt
mov
cmps
nop
sub
dec
cmp
pop
xor
(bad)
push
push
stos
dec
or
push
add
sub
add
pop
xchg
add
jmp
inc
ds
ret
cmp
adc
shr
ret
or
test
pop
or
jmp
inc
push
or
ins
cli
xchg
pop
push
mov
mov
adc
lea
xchg
(bad)
movs
or
mov
cmp
dec
ins
pop
mov
test
jl
push
cmps
xchg
mov
mov
push
test
popf
mov
dec
mov
mov
or
inc
dec
lea
movs
cmp
or
dec
xchg
and
mov
sbb
xchg
test
pop
repnz
add
xchg
inc
jmp
nop
fwait
adc
shl
jmp
dec
and
mov
cwde
jge
movs
dec
inc
mov
mov
jg
test
daa
sbb
sub
mov
stc
addr16
fbstp
dec
loope
xor
lods
test
add
sti
clc
mov
mov
popa
sub
sub
cdq
loop
es
dec
loopne
adc
sbb
dec
cmp
xchg
ret
jno
or
cmp
and
xchg
jne
lea
pushf
ins
or
push
cmp
push
jmp
xchg
gs
add
pop
fs
aaa
(bad)
mov
adc
pop
jb
adc
ror
sub
xchg
lea
inc
int3
js
popf
sub
les
and
mov
mov
aas
sub
test
or
add
inc
js
xor
and
xor
push
dec
or
sbb
pop
ret
adc
sub
repz
lock
mov
ret
cmp
sbb
jns
mov
cld
and
inc
add
dec
xchg
mov
mov
inc
fst
jno
dec
xor
xor
fisub
dec
pop
xchg
push
jne
adc
js
sbb
sbb
scas
dec
or
adc
sub
movs
inc
mov
sbb
(bad)
das
inc
call
pop
push
pop
lock
inc
or
clc
or
jns
adc
or
mov
or
(bad)
fmul
sbb
adc
add
cmp
aaa
adc
inc
add
enter
jnp
imul
int3
stos
mov
mov
push
cmp
stos
xchg
add
xlat
push
cld
enter
into
lea
push
(bad)
mov
push
mov
inc
sti
push
cmp
jb
mov
mov
cvttps2pi
mov
and
push
add
mov
dec
xchg
push
xchg
pushf
fwait
dec
shl
aas
retf
lea
inc
mov
or
xchg
sbb
jne
ss
xor
adc
sbb
pop
push
sub
xor
add
cmps
lock
dec
test
xchg
push
or
sbb
pushf
loopne
dec
ror
stos
enter
sub
xor
add
xor
add
xor
add
xor
add
dec
data16
xchg
or
or
in
xchg
jl
out
xchg
jle
lock
xor
mov
repnz
clc
pop
mov
mov
popa
lock
fcomp
pop
test
imul
cmc
sub
test
inc
push
sub
xchg
icebp
mov
mov
inc
dec
inc
rcr
jb
xchg
xchg
add
ds
fldcw
adc
or
sub
std
test
cmp
and
cld
xchg
add
movs
xchg
aas
add
and
jle
xchg
cs
mov
push
or
xchg
fisttp
or
sbb
inc
sbb
push
enterw
out
sbb
mov
enter
mov
pop
fld
cli
sbb
sbb
dec
push
std
push
sub
movs
adc
lods
daa
mov
push
in
out
cwde
out
cwde
addr16
js
ror
lock
lahf
inc
push
ds
(bad)
cmp
test
into
adc
pop
or
sbb
test
je
popa
out
adc
(bad)
cdq
or
rcl
movs
cli
add
cmp
cwde
lea
les
pop
iret
(bad)
xor
mov
clc
test
push
push
adc
xor
push
push
push
cmp
loop
add
jg
pop
mov
and
(bad)
je
cmp
test
and
push
mov
pop
repnz
ret
add
ins
dec
push
in
xchg
jmp
xchg
or
inc
or
movs
xor
xchg
fisubr
movs
fiadd
xor
cdq
ror
adc
aad
xor
call
sub
pusha
(bad)
add
jae
pop
test
leave
shl
cs
mov
call
in
fs
pushf
fs
push
mov
dec
sti
aaa
shl
sbb
push
and
rcl
mov
(bad)
gs
rcr
movs
dec
mov
jne
push
adc
mov
test
shr
cli
mov
sbb
and
out
sub
dec
(bad)
cmp
adc
push
xlat
dec
lea
dec
sbb
shr
add
sub
push
mov
pop
adc
add
cmp
add
lock
xor
(bad)
mov
and
(bad)
mov
stos
dec
or
pop
nop
adc
dec
adc
xor
pop
cmp
add
lods
repz
xchg
stc
sbb
xchg
cld
add
sub
ins
dec
hlt
xchg
add
sub
or
dec
add
and
mov
or
jge
cmp
sahf
pop
icebp
inc
and
sub
les
jmp
rcl
ffree
xchg
and
adc
mov
loopne
test
xchg
cli
pusha
xchg
lock
xchg
daa
sub
pushf
adc
je
push
dec
mov
test
mov
jmp
je
sub
xor
adc
xchg
pusha
popa
imul
lods
xor
mov
adc
jle
and
adc
movd
and
sti
jo
mov
mov
or
add
jno
adc
mov
pop
mov
mov
sub
mov
rol
or
or
aam
sub
or
mov
addr16
fwait
xor
rol
cli
and
dec
mov
pop
cmps
jnp
jne
enter
inc
pop
mov
mov
inc
outs
pop
mov
leave
call
fs
pusha
sub
pop
sbb
sbb
sub
bound
inc
je
dec
mov
and
xor
popa
or
and
and
sub
call
es
adc
add
in
lea
add
cmc
xchg
inc
and
fdivr
ret
fnsave
sbb
and
and
out
mov
and
(bad)
mov
cmp
adc
jne
test
jne
js
popaw
cmp
pop
jae
xchg
sbb
(bad)
cwde
or
xchg
inc
jns
dec
adc
(bad)
js
mov
xor
and
clc
loop
jbe
pusha
pop
push
adc
sbb
pop
pop
outs
cli
push
inc
and
pop
fsubr
adc
jmp
push
inc
hlt
xor
or
pop
clc
mov
xlat
xchg
push
ja
out
sub
cmp
add
dec
int
jne
dec
push
pop
dec
dec
ds
cli
outs
bound
pop
int3
mov
sbb
inc
sar
mov
jl
cmps
hlt
shl
mov
inc
(bad)
adc
shl
sbb
and
cs
test
hlt
movs
inc
and
leave
push
pop
and
lock
mov
popa
mov
xchg
cmp
fstp
lahf
jb
jp
jnp
push
xor
or
sbb
stos
pop
fadd
sub
inc
lock
mov
and
push
in
dec
div
jb
sub
push
add
push
inc
sbb
cmp
adc
pop
mov
shl
sbb
jle
lea
sub
and
test
ret
les
jl
jl
(bad)
xor
jg
cwde
int
(bad)
push
int3
pop
pop
mov
int3
or
add
xchg
ret
inc
inc
mov
shl
push
add
fnstcw
inc
mov
jl
and
add
mov
sbb
pusha
cdq
dec
add
pop
test
adc
(bad)
aam
xor
push
mov
add
loopne
mov
das
bound
adc
sbb
sbb
inc
pusha
or
or
mov
or
mov
retf
push
sub
cmp
jb
jmp
add
jbe
mov
call
adc
sub
setbe
ss
mov
inc
jae
data16
sub
push
xchg
div
lock
push
inc
mov
iret
cdq
cmp
push
xchg
mov
pop
push
pop
and
jae
dec
adc
push
je
jle
or
xor
inc
lods
imul
stc
cmc
add
jbe
fnstsw
push
cdq
jb
imul
push
and
push
or
mov
jmp
push
or
inc
add
pop
retf
test
xor
pop
mov
xchg
outs
mov
xchg
pop
lods
retf
cs
sbb
out
cmp
adc
adc
cmp
xor
mov
mov
popa
sbb
mov
mov
adc
and
inc
jmp
inc
mov
pop
mov
or
add
aad
mov
push
movs
push
xchg
arpl
adc
jmp
xchg
sahf
adc
push
push
stos
mov
push
nop
sub
int3
into
adc
test
call
push
and
cmps
mov
xchg
cmp
push
and
pusha
cdq
sub
call
movs
push
fwait
sbb
pop
sahf
pop
inc
jns
pop
in
xchg
lods
and
inc
sub
mov
push
rcl
ds
mov
xchg
std
cmp
je
stc
mov
jne
or
jo
fstp
test
call
or
repnz
out
addr16
movs
push
add
or
push
fimul
test
sub
mov
jge
mov
lds
push
inc
fcomip
add
sbb
sub
daa
jb
mov
mov
nop
enter
repz
dec
lods
call
scas
pop
xor
pop
add
or
pop
(bad)
cmp
adc
dec
push
sub
in
imul
dec
test
sbb
or
xor
push
and
push
pop
push
and
xchg
mov
cmps
adc
ret
aas
and
cld
hlt
pop
lea
add
jne
mov
iret
mov
pusha
or
repz
icebp
hlt
add
push
and
std
mov
mov
dec
xchg
in
iret
or
aam
cmp
push
sub
cmp
or
je
xchg
in
sub
adc
loopne
jl
jmp
mov
lock
or
xchg
push
or
xchg
sub
xchg
or
es
in
outs
fs
pop
sbb
mov
out
pop
fmul
rcr
(bad)
outs
inc
ds
pop
push
jae
pusha
add
inc
pop
repnz
xchg
mov
cld
pop
or
push
imul
out
aam
call
jmp
fwait
jp
sub
xchg
jnp
ja
mov
(bad)
or
fadd
ss
push
xor
repnz
icebp
les
mov
test
fld
jl
aas
pop
pop
test
lea
mov
js
push
mov
xchg
arpl
and
pop
dec
scas
test
fst
jl
mov
daa
xor
xlat
xchg
call
push
test
and
adc
test
in
bound
aad
jmp
fs
cwde
mov
call
push
mov
xor
imul
(bad)
dec
pop
pop
iret
dec
or
push
cmc
pusha
jnp
mov
cmp
stc
aaa
das
jno
dec
xor
cmp
call
adc
dec
out
sub
cwde
pop
stos
enter
sbb
push
mov
loope
jmp
or
xchg
stc
pcmpeqw
mov
stos
lock
lahf
lea
call
(bad)
or
sub
adc
jne
ficom
inc
lea
call
sub
xchg
sub
call
pop
jmp
adc
jmp
call
push
dec
fist
enter
shr
mov
in
mov
push
cmp
inc
or
mov
repnz
jae
stc
jo
ret
hlt
out
dec
shl
xor
loope
mov
mov
adc
adc
adc
push
gs
or
rcr
cmp
nop
inc
js
xor
push
sub
es
dec
bound
out
imul
call
ja
inc
adc
aaa
xor
xchg
jae
mov
ins
into
adc
aaa
mov
or
fiadd
fbstp
enter
mov
and
ret
cmp
jne
push
adc
nop
xchg
test
dec
popf
or
mov
and
push
dec
sbb
fnstenv
outs
mov
jne
dec
jle
xchg
nop
dec
and
aas
sub
mov
es
inc
dec
add
adc
inc
mov
sub
in
push
and
adc
inc
clc
cmp
sub
push
in
les
cmp
pop
addr16
adc
or
enter
les
xchg
add
out
cmp
rol
ss
call
sub
sbb
out
add
inc
stos
add
(bad)
(bad)
imul
ja
dec
inc
jp
(bad)
shl
in
test
or
pop
nop
mov
or
push
mov
(bad)
cld
push
hlt
lea
push
or
adc
les
add
test
test
in
or
mov
push
sub
and
leave
cmp
das
xchg
push
or
mov
inc
push
pop
xor
rcr
div
mov
adc
and
xchg
xchg
repz
inc
push
daa
and
fcomp
pop
push
sbb
push
mov
jbe
int3
(bad)
cmp
das
data16
and
aas
or
mov
push
(bad)
sub
adc
xor
xor
ds
add
ja
mov
int
jmp
and
sub
pop
xor
jo
push
and
inc
or
push
arpl
inc
jle
adc
jno
push
mov
fild
xor
sub
add
pop
and
ss
xor
jno
pop
add
retf
inc
or
xor
retf
jne
pop
mov
inc
pop
pop
add
xlat
mov
sar
xchg
push
je
aad
mov
fld
jmp
xchg
mov
loope
dec
xchg
and
or
jae
mov
cmp
cmps
aam
in
in
ret
rcr
mov
push
popf
(bad)
and
dec
and
push
in
cli
dec
mov
sub
mov
iret
(bad)
jmp
pop
addr16
ins
sub
dec
jl
lds
ror
and
mov
inc
inc
fsubr
pushf
ror
or
loop
sbb
inc
push
mov
dec
push
cld
xchg
xchg
test
dec
adc
xlat
mov
ins
imul
dec
into
mov
addr16
sbb
ret
stos
sbb
mov
inc
outs
fs
sub
pushf
(bad)
and
or
jns
mov
jne
jge
aam
adc
retf
call
or
(bad)
(bad)
xor
push
(bad)
leave
cmp
xchg
dec
jb
xchg
in
fs
cld
and
push
into
test
push
cmp
lea
xor
cmps
test
sub
sbb
mov
inc
test
add
icebp
pop
bound
lds
mov
clc
jne
sub
mov
cli
jmp
and
adc
sub
sub
enter
ret
test
and
ret
retf
(bad)
adc
inc
dec
push
loope
pushf
ss
aaa
and
pop
dec
push
(bad)
loopne
mov
dec
popa
ja
dec
cdq
les
inc
loope
add
bound
pushf
into
pop
xor
push
lods
push
and
xor
bswap
inc
cmp
test
jl
jmp
push
mov
and
mov
mov
ds
and
mov
mov
adc
nop
les
rcr
adc
mov
test
or
add
ret
pop
or
push
xchg
and
push
add
(bad)
(bad)
or
jl
sti
or
xchg
je
or
in
xchg
adc
xchg
mov
inc
ds
push
push
or
inc
xor
enter
mov
sub
cdq
lahf
push
dec
loope
push
push
mov
movs
lea
rcl
test
retf
fstp
movs
sub
push
sbb
jns
mov
mov
ret
das
hlt
stc
cmp
push
ror
xchg
xchg
dec
xchg
xchg
jno
mov
scas
jp
outs
cmp
fcom
popa
int3
push
ins
adc
mov
retf
outs
mov
adc
iret
sub
nop
pop
mov
inc
mov
leave
inc
adc
les
inc
cmps
pop
std
jp
mov
jne
adc
or
xor
pop
push
(bad)
call
shl
cdq
or
out
xchg
mov
or
push
dec
or
inc
inc
aam
test
mov
sub
and
jmp
sub
xchg
xor
adc
pop
mov
jge
sub
push
dec
xchg
xchg
or
push
inc
sub
jns
cmp
sub
sbb
mov
sbb
idiv
push
mov
push
inc
in
sub
lea
dec
cli
shl
(bad)
pop
pusha
repz
sbb
shr
add
push
adc
inc
cdq
xlat
push
and
cli
mov
sti
xchg
dec
and
mov
retf
or
pop
leave
sub
xchg
and
xor
add
jo
les
cmp
and
cmp
out
adc
jno
jmp
or
je
imul
(bad)
and
mov
mov
xchg
mov
leave
pop
(bad)
enter
retf
imul
mov
inc
out
push
cmps
xchg
idiv
mov
into
mov
xor
push
sti
or
pushf
or
push
into
jle
sbb
fs
mov
retf
push
pop
cmp
add
test
mov
push
pop
add
test
pop
jmp
sub
jae
pop
lock
cmps
in
mov
repnz
(bad)
xor
mov
mov
push
inc
lods
cmp
(bad)
pusha
ret
or
or
adc
pop
lods
in
jmp
rol
adc
sahf
jle
push
into
xor
push
dec
jne
cmp
retf
or
mov
xor
pop
push
cwde
into
add
cmp
clc
ret
mov
jl
das
ds
daa
push
push
call
dec
into
mov
xor
(bad)
and
mov
add
(bad)
movs
sub
stos
cmp
mov
repnz
mov
mov
xor
xlat
and
leave
(bad)
dec
add
dec
call
(bad)
into
push
xchg
push
mov
hlt
test
and
sub
inc
jae
jge
cmps
imul
sub
or
fistp
or
mov
pop
test
xchg
gs
or
mov
fwait
jl
push
out
jmp
push
cwde
mov
enter
enter
sbb
jae
or
xor
int3
xor
cmp
jne
fsubr
add
mov
xor
sub
les
inc
mov
xor
mov
xor
mov
and
and
test
fwait
push
xor
es
push
fs
fs
push
test
sub
push
sbb
shr
and
xor
xor
jne
mov
sbb
push
and
mov
xor
mov
sbb
or
(bad)
push
mov
jns
add
and
pop
sbb
xchg
popa
mov
push
mov
mov
push
jne
pop
in
adc
mov
adc
pop
add
sub
adc
fild
aad
retfw
jns
pop
fst
jecxz
dec
cld
adc
cli
test
cs
cmp
inc
aam
test
cmp
jae
movzx
mov
shr
mov
fcmovb
xchg
test
inc
inc
jecxz
jmp
adc
das
shl
add
leave
pop
loop
enter
push
je
es
adc
stos
inc
stos
mov
test
and
icebp
push
cmp
int3
test
cmp
adc
neg
mov
jle
dec
or
mov
mov
jecxz
cmp
in
adc
add
mov
or
ret
pop
in
add
sbb
hlt
cwde
inc
mov
inc
cmp
mov
push
lea
jmp
test
mov
xchg
add
sub
adc
dec
clc
sbb
or
jb
and
and
pop
mov
pop
ja
nop
in
in
daa
push
push
jnp
cs
imul
fisttp
fcom
sahf
cmps
adc
and
jb
mov
sbb
push
cwde
ret
fsub
mov
jae
add
mov
sub
dec
enter
out
(bad)
aam
fadd
mov
xor
push
data16
popa
lea
inc
test
mov
fcomp
sar
mov
nop
sbb
cs
cdq
push
add
and
add
sbb
adc
pop
mov
and
test
adc
sbb
pop
push
adc
das
jne
or
rcr
and
and
cmp
sbb
xor
scas
add
les
loope
loop
repnz
and
xchg
push
retf
sbb
add
call
xchg
and
lea
push
jnp
ja
mul
inc
jp
fnstenv
adc
and
xchg
in
pop
push
lods
jno
loopne
inc
dec
ret
and
dec
xchg
mov
cld
loopne
jae
(bad)
sub
inc
dec
sbb
test
movs
fucomip
repnz
or
mov
xchg
data16
add
xor
jl
or
jle
sub
inc
pop
ins
movs
cmp
dec
call
xor
dec
mov
and
sbb
or
jg
jmp
inc
fst
or
adc
(bad)
cmp
add
xor
pop
dec
add
cdq
pop
fcom
retf
leave
sub
add
sahf
mov
jp
and
dec
sub
inc
xchg
mov
xor
pop
aas
add
popf
nop
or
xor
jne
sub
repz
adc
sbb
pop
shr
cmp
xor
adc
fld
clc
push
pop
jbe
mov
mov
lods
xor
add
pop
or
call
add
clc
shl
movs
cmp
push
xor
invlpg
retf
repnz
imul
push
pop
fmul
and
add
outs
xor
js
add
inc
xchg
mov
add
mov
push
xchg
sti
xchg
xchg
push
sub
sbb
lods
and
pop
mov
cmp
enter
pop
inc
movsx
stos
and
sub
movlps
mov
fnsave
xchg
mov
bound
inc
inc
mov
cmp
jb
push
lea
loopne
loopne
xchg
push
mov
cld
outs
cmp
xlat
mov
aad
retf
mov
clc
call
mov
(bad)
cmc
je
mov
add
call
nop
mov
bound
out
adc
mov
ds
stos
lds
or
retf
mov
aad
popa
mov
pop
test
test
cmp
push
test
ret
cmp
push
icebp
(bad)
leave
or
clc
test
jbe
mov
dec
mov
cmps
push
add
fmul
push
cmp
aas
mov
test
dec
clc
jp
or
sub
and
jl
jl
jl
dec
aaa
icebp
aaa
jp
xrelease
jb
lds
mov
pop
jg
jns
mov
inc
push
loopne
inc
xchg
push
in
mov
add
je
push
fild
lahf
shl
or
or
adc
or
add
mov
mov
xchg
and
add
mov
icebp
jae
or
sbb
sub
adc
data16
adc
(bad)
jae
scas
add
add
mov
into
adc
xchg
cmp
cdq
hlt
or
ret
xor
cdq
jb
test
test
adc
cmp
cwde
imul
cmps
sbb
and
adc
daa
je
aam
mov
aad
cdq
ds
cmp
mov
in
or
(bad)
call
test
call
adc
mov
pop
stc
or
and
add
daa
xlat
mov
nop
outs
fs
mov
or
leave
into
repnz
pop
mov
fcmovu
pop
test
daa
cmp
sbb
mov
push
les
fsub
dec
push
push
call
inc
jge
sub
xchg
add
and
enter
mov
sbb
jecxz
sbb
sbb
mov
or
data16
mov
sti
xor
je
mov
enter
jge
cmp
cmp
inc
mov
jno
shl
out
mov
mov
push
(bad)
jp
jmp
mov
add
cmp
or
ds
ins
bound
adc
test
mov
in
cmp
icebp
adc
dec
sbb
sbb
xchg
mov
mov
lock
mov
xchg
test
xchg
mov
lock
inc
loopne
push
mov
sbb
mov
and
int
fdivr
leave
mov
push
sbb
mov
popa
retf
push
pop
outs
or
mov
xchg
cmp
ret
push
cdq
pop
idiv
sar
into
call
xchg
test
mov
iret
sub
cmp
jmp
pop
mov
mov
fdivr
xchg
out
push
xchg
push
xor
cmp
cs
and
and
je
cmc
dec
in
mov
icebp
lock
adc
dec
pop
add
pop
lea
pop
and
adc
mov
add
inc
dec
sahf
sub
sbb
adc
xor
add
jmp
in
pop
push
fdivr
mov
sbb
dec
xor
pop
aaa
inc
je
stos
cmp
repnz
add
mov
jl
pop
mov
cmp
cmps
adc
xor
jmp
dec
inc
add
in
in
movs
push
test
and
loopne
dec
test
rcr
dec
clc
jg
jmp
mov
mov
hlt
sbb
adc
add
retf
jmp
loop
call
sub
jmp
jae
mov
lods
mov
push
mov
xchg
xchg
jbe
stos
sti
sbb
mov
adc
sar
scas
pop
push
sahf
test
jb
cmp
mov
test
push
and
call
test
adc
rcr
push
push
call
inc
not
adc
inc
and
lahf
xchg
xchg
int3
dec
xchg
lds
repz
fsub
mov
addr16
mov
fwait
xchg
loop
or
and
add
retf
xchg
ror
mov
cdq
daa
lock
(bad)
call
inc
sub
inc
in
and
sub
and
add
mov
and
jecxz
in
mov
cmps
or
sub
and
and
sahf
and
pop
and
sahf
dec
scas
and
pop
sub
or
jne
dec
es
add
cmp
jl
call
jge
test
test
inc
or
les
push
sbb
cmc
mov
les
inc
add
lock
sub
mov
sbb
mov
jae
adc
sbb
(bad)
call
cmp
call
js
add
or
cli
inc
retf
jl
aad
imul
xchg
push
in
ja
mov
dec
fcomp
mov
and
adc
or
cwde
mov
dec
icebp
leave
cmp
mov
fisttp
out
add
retf
and
adc
es
pop
cdq
cli
push
enter
(bad)
sub
xor
(bad)
jmp
jo
imul
lds
js
jmp
enter
jge
movzx
hlt
loopne
fiadd
movs
mov
mov
push
ins
inc
push
out
sub
xchg
dec
out
inc
popf
das
xchg
xor
lahf
dec
pop
call
jmp
les
adc
ret
stos
or
jmp
and
pop
mov
shl
push
test
data16
addr16
or
pop
adc
adc
or
pop
push
adc
or
and
add
(bad)
enter
adc
xchg
mov
and
mov
shl
or
in
nop
es
lea
clc
jge
movs
push
adc
fwait
ss
jmp
pop
inc
push
xor
inc
pop
(bad)
jbe
arpl
xor
loop
xrelease
je
adc
sbb
int3
sbb
mov
xor
xor
shr
inc
pusha
mov
mov
cmp
dec
xor
xchg
jbe
das
pop
js
mov
sub
jge
pusha
xor
push
add
dec
call
push
adc
mov
jmp
mov
inc
add
adc
jge
or
xchg
in
add
outs
iret
jns
or
in
adc
iret
add
gs
adc
lea
add
or
sbb
test
sub
call
das
sti
je
test
loopne
cmp
nop
outs
adc
dec
mov
outs
shr
ja
mov
and
and
add
push
and
(bad)
leave
cmps
fcom
hlt
lahf
lea
adc
jnp
push
into
jmp
adc
in
adc
lock
push
fisub
call
hlt
shl
scas
add
adc
rcr
mov
jne
repz
xor
test
pop
xchg
push
and
and
in
and
mov
or
xor
rcr
punpcklwd
jae
dec
enter
and
jne
sub
daa
mov
imul
xor
dec
jne
ss
and
cld
call
pop
pop
push
test
inc
test
push
in
int
and
inc
push
jl
les
dec
mov
shr
adc
rol
push
push
stos
pop
mov
or
push
push
retf
sbb
sbb
xor
sub
scas
cmp
pop
jne
in
cs
(bad)
ret
loop
movs
or
and
lock
inc
das
mov
mov
mov
xlat
repnz
xchg
mov
sbb
pusha
sar
out
dec
jg
dec
int
or
dec
enter
cmp
test
enter
add
cld
xchg
add
pop
sbb
jmp
cmp
aaa
xlat
test
jmp
xchg
xchg
xchg
es
cli
jge
cwde
mov
add
loopne
pop
inc
loope
cmp
aad
in
xor
fs
dec
enter
je
xor
sub
test
inc
jae
dec
cmp
inc
push
push
xchg
adc
test
jge
loopne
mov
push
and
push
pop
mov
idiv
jle
lods
xor
movs
not
xchg
rcr
or
retf
mov
test
xor
inc
fistp
loop
sbb
lea
(bad)
add
mov
or
xor
xor
mov
pop
shl
sar
aaa
stc
lds
jmpw
mov
xor
jl
xchg
cmp
sti
jnp
lahf
push
add
jno
add
sub
daa
push
pop
or
mov
adc
and
pop
pop
cmps
stos
add
dec
add
dec
jmp
pop
adc
push
inc
add
pop
inc
add
pop
mov
xlat
xlat
loopne
(bad)
pop
jne
mov
sbb
or
push
and
dec
jmp
out
ficom
xchg
dec
mov
lock
iret
add
les
fsub
cmp
lods
or
(bad)
cmp
or
test
jge
adc
or
push
or
sbb
or
ins
adc
jbe
push
mov
nop
or
pop
dec
dec
stc
and
pushf
xlat
mov
adc
leave
adc
daa
jl
add
test
xlat
ret
(bad)
or
pop
aas
mov
jle
push
sbb
xor
stos
fstp
stc
sbb
sbb
sub
cdq
rcl
pop
(bad)
mov
sbb
call
popa
xlat
aad
cmp
cld
pop
out
mov
call
pop
movs
xchg
popa
dec
outs
lds
sub
add
std
mov
js
mov
movs
push
xchg
and
push
mov
push
xchg
icebp
movs
mov
retf
int3
icebp
or
test
aad
inc
mov
mov
or
jne
shl
popa
push
das
push
adc
mov
daa
mov
xchg
movs
sbb
mov
jmp
adc
adc
xor
mov
ret
pop
stc
or
sbb
in
push
adc
push
int
sbb
adc
cmp
je
xor
call
hlt
xor
mov
mul
aam
call
mov
and
test
dec
xchg
inc
mov
adc
shr
pop
pop
sbb
ret
sub
mov
push
xchg
inc
fmul
sbb
std
dec
or
pop
cld
push
and
mov
push
jl
xor
cmp
dec
sbb
push
xor
or
mov
adc
ret
jp
jo
xchg
jnp
cmps
fmul
mov
ret
xchg
div
sbb
mov
jl
push
dec
retf
inc
or
mov
adc
ret
cld
ja
fdivr
pop
in
jnp
xchg
dec
mov
mov
pop
jg
jg
aas
push
inc
fld
pop
jbe
push
jmp
push
pop
shl
xchg
inc
ds
or
add
sti
mov
popa
xor
add
ja
lahf
and
and
test
mov
pop
jmp
dec
inc
cmps
test
mov
or
mov
mov
add
mov
xor
lea
sti
dec
sbb
jmp
stos
nop
std
ret
add
adc
dec
stc
std
leave
push
mov
xchg
jg
xchg
movs
and
in
popa
xor
xchg
mov
test
stc
(bad)
mov
call
cmp
arpl
or
mov
push
push
add
int
pop
and
ds
in
mov
je
shl
dec
xchg
test
in
dec
and
imul
mov
xor
je
or
mov
inc
sbb
lea
rol
rcr
dec
clc
inc
test
cmc
or
psubsb
xchg
cmp
and
xor
push
or
maskmovq
nop
cmp
ds
lds
jle
popa
mov
outs
dec
bound
ret
mov
cld
inc
adc
or
jl
lea
call
cmp
add
scas
bound
mov
xchg
xchg
mov
js
leave
stc
inc
sbb
push
push
loopne
mov
call
jmp
push
or
mov
mov
es
mov
loop
call
or
push
or
leave
push
push
pop
adc
ret
push
in
mov
lea
dec
rcr
cmp
jmp
out
cmc
add
and
js
adc
inc
or
call
mov
cld
test
adc
fwait
je
bound
test
dec
(bad)
push
mov
cmps
jbe
out
enter
shr
lods
and
cmps
push
pop
jmp
mov
mov
mov
inc
outs
enter
jno
cmps
or
(bad)
fmul
xchg
and
mov
cld
dec
dec
xchg
sub
sub
daa
push
mov
sbb
cmp
rcr
nop
xor
test
sub
cmc
add
retf
jl
(bad)
xchg
or
rol
pop
stc
jae
or
data16
and
or
cwde
or
add
rol
or
cmps
cld
dec
js
fwait
movs
mov
loop
mov
cmp
sahf
xlat
in
push
sbb
sahf
pop
rcl
mov
imul
daa
(bad)
clc
adc
fdivp
mov
pop
jne
hlt
mov
mov
mov
push
cmp
fdivr
jmp
in
jno
test
movs
call
mov
inc
arpl
test
cs
push
pop
call
jg
xor
push
jo
loop
cdq
enter
xor
or
sti
mov
hlt
cmp
fild
in
sub
dec
orps
cmp
nop
lock
loope
pop
sub
or
mov
xchg
or
xchg
stc
push
sub
rcl
sbb
inc
dec
push
stc
push
ds
imul
call
sbb
dec
mov
push
cwde
bound
mov
and
mov
ss
push
icebp
push
cmps
or
dec
inc
sub
or
lock
xchg
test
sub
icebp
inc
push
add
shr
pop
into
sbb
lods
fisubr
cmp
or
pop
pop
ror
and
stc
ret
inc
mov
fiadd
cld
popa
and
add
cwde
xchg
pop
je
mov
push
adc
cmp
add
xchg
pop
adc
(bad)
cli
test
cmp
or
adc
xor
sub
or
xor
pop
sub
sbb
cdq
adc
mov
mov
repz
jo
scas
push
les
adc
sub
loope
mov
xlat
mov
pop
adc
adc
push
adc
dec
fwait
clc
adc
cs
xchg
es
(bad)
sub
sbb
mov
aad
(bad)
imul
fiadd
mov
pop
adc
push
mov
inc
and
in
shl
inc
adc
jne
jb
mov
or
inc
inc
in
mov
jbe
aad
popf
jg
fs
es
pop
xor
inc
or
or
repz
sub
push
lea
mov
pop
jne
loopne
mov
and
mov
sub
mov
mov
mov
pop
aas
push
lods
push
mov
fst
int3
and
je
push
add
shr
and
lock
xchg
push
setge
mov
adc
dec
retf
jp
je
or
gs
cmp
das
adc
mov
sbb
leave
mov
adc
cwde
add
pop
jl
mov
pop
add
ret
jmp
jmp
mov
adc
stc
fist
movs
mov
test
pop
mov
mov
or
in
rcl
jne
adc
sub
cmp
jbe
test
sahf
gs
mov
jge
mov
sub
inc
retf
xchg
xlat
pop
adc
movs
jb
pmaddwd
mov
inc
(bad)
call
sbb
cmp
pop
add
mov
inc
jmp
mov
nop
or
jl
hlt
sti
pcmpgtb
mov
rcl
add
push
pushf
xor
mov
std
jae
pushf
cli
sub
inc
mov
xchg
test
ret
xor
push
adc
sbb
xor
repnz
es
push
sbb
and
sbb
je
jge
pushw
jecxz
retf
fisttp
jnp
inc
pushf
and
cwde
test
mov
sbb
xchg
cmp
outs
adc
mov
push
dec
cmp
dec
mov
fs
in
push
xchg
push
xchg
and
addr16
dec
push
pop
lea
fwait
jnp
icebp
retf
and
jmp
mov
and
mov
xor
scas
adc
xchg
adc
add
rcr
and
adc
or
mov
pop
pop
popf
mov
gs
adc
and
or
sbb
inc
sbb
mov
sbb
ja
sbb
adc
fisub
adc
or
push
cs
add
pop
rcr
sub
ror
ja
call
adc
punpcklbw
lea
gs
out
sub
test
adc
push
nop
cs
mov
mov
les
or
movs
adc
and
mov
add
test
lea
xor
inc
or
fcom
xor
call
jmp
imul
je
inc
jno
mov
jno
(bad)
or
cdq
int3
daa
fadd
inc
fs
cli
xchg
cmp
xchg
push
sti
bound
std
inc
add
cmp
iret
push
daa
jl
clc
rcr
dec
inc
pop
or
or
iret
push
stos
ud2
cs
mov
jmp
in
mov
aad
outs
and
push
mov
sbb
xchg
outs
push
and
xchg
in
pop
dec
sbb
call
retf
mov
jnp
loopne
add
and
dec
mov
sbb
push
and
and
push
rcl
mov
sbb
leave
xchg
xchg
mov
xor
or
sbb
cld
je
push
sub
push
inc
or
jbe
cmps
xchg
jmp
sub
cmp
push
or
mov
jp
mov
mov
test
fst
ja
or
dec
inc
adc
jp
loop
stos
cmp
xchg
push
nop
sub
data16
std
adc
push
retf
dec
movs
push
xchg
dec
pop
sbb
jge
adc
cmp
lock
loopne
push
xlat
enter
adc
clc
xchg
out
ja
stc
je
stos
xchg
push
popa
adc
inc
adc
std
sbb
loope
cmp
neg
sbb
leave
push
and
arpl
inc
cmp
mov
dec
add
je
std
jmp
ret
adc
or
cmp
je
add
pop
jmp
pop
cs
fdiv
dec
jns
rcr
popa
jg
shl
mov
cmp
test
je
xchg
push
(bad)
xchg
cmps
mov
add
mov
cld
inc
add
sub
mov
and
aas
cmp
ret
jne
adc
femms
xor
inc
sub
or
mov
test
mov
dec
mov
nop
in
dec
or
mov
cmp
aas
ins
clc
xchg
shl
sub
fstp
cwde
jecxz
inc
aas
pop
fdiv
or
mov
sti
neg
dec
pop
cmp
sbb
test
push
dec
push
movs
and
mov
jmp
mov
cmp
jbe
sub
fcmovnbe
int
inc
xlat
sbb
xchg
icebp
cwde
cmp
xchg
fisubr
stc
fisub
sbb
int
jmp
add
pop
and
pop
dec
arpl
fsubr
mov
and
jp
push
pop
add
lods
jmp
jmp
leave
add
sub
dec
pop
clc
jle
ins
pushf
add
inc
ja
cs
pop
lods
imul
ret
je
dec
add
js
dec
mov
xor
rol
xchg
or
or
bnd
(bad)
push
data16
mov
or
jo
movs
cmp
xor
cmp
lods
add
je
cmp
and
std
add
mov
jb
(bad)
pop
add
dec
pushf
mov
rcr
or
mov
inc
push
not
rol
jg
fs
cmp
dec
push
xor
cmp
mov
or
test
mov
inc
leave
push
and
pop
pop
xor
pop
xor
enter
mov
pusha
sub
cs
jmp
sbb
adc
or
mov
jno
ret
dec
retf
xor
sub
ja
mov
add
push
and
sti
dec
idiv
retf
dec
add
sahf
cwde
mov
arpl
imul
push
call
or
push
pxor
fisub
lods
mov
xor
inc
pop
cmp
je
mov
ins
adc
mov
cmp
adc
sbb
add
sahf
js
pop
int3
repnz
mov
in
mov
or
push
jecxz
mov
or
cmp
adc
cld
(bad)
test
adc
cmp
test
mov
cmps
and
ja
pop
mov
cmp
push
rcl
cmp
mov
push
pop
push
inc
inc
aaa
or
xchg
div
pop
mov
mov
lea
nop
je
mov
dec
movs
add
sahf
inc
or
sub
pop
and
or
repz
jne
enter
fnstenv
imul
xor
cli
loop
nop
nop
or
jp
sub
xchg
call
push
daa
and
add
call
adc
jb
push
and
push
loopne
int3
lahf
add
or
dec
mov
and
cmp
icebp
and
daa
xor
sub
and
push
adc
push
test
inc
add
push
adc
cdq
xchg
cmp
pushf
test
jae
aas
dec
jg
cdq
mov
sahf
outs
adc
ds
adc
test
call
xchg
(bad)
rol
add
cld
push
mov
jae
mov
nop
int
lods
cmp
not
fs
xor
and
push
mov
push
imul
nop
and
inc
push
add
cmp
adc
adc
stc
push
mov
mov
dec
sub
fsubr
(bad)
jp
icebp
pop
adc
outs
and
push
loop
pushf
fs
call
data16
das
repnz
nop
fucomp
mov
push
xor
add
int
sbb
daa
adc
add
lods
inc
rol
pop
dec
pop
xchg
aad
jg
or
cmp
mov
bound
jae
dec
lahf
xchg
sub
cmp
jle
xor
adc
aaa
cmp
mov
ss
test
push
fucomp
xor
jno
push
xor
xlat
jns
add
sbb
sub
xchg
shr
nop
push
mov
pop
inc
movs
adc
sbb
call
popf
stos
ds
test
pop
lods
lods
clc
adc
mov
dec
aaa
int
imul
sub
ins
imul
pop
jl
pop
(bad)
push
sub
mov
push
pop
cmp
loopne
push
(bad)
push
add
sub
or
fdiv
pop
mov
icebp
sub
out
cwde
push
and
inc
adc
int
cmp
jg
test
jmp
push
mov
call
ret
sbb
dec
sbb
jmp
inc
adc
mov
test
call
test
push
shl
sbb
(bad)
jne
adc
adc
cmp
(bad)
xor
lea
(bad)
cmp
lock
out
and
jns
mov
xor
mov
daa
repnz
enter
push
leave
xchg
and
push
les
cmp
out
sbb
jmp
cmp
jle
scas
add
mov
add
cmp
je
stos
xor
and
sub
inc
and
rol
inc
jbe
or
out
and
and
nop
sbb
pop
lods
scas
dec
sub
int
ss
aam
ret
push
call
add
in
and
and
mov
mov
pop
or
push
mov
pcmpeqw
sub
in
mov
sub
out
xchg
loopne
sbb
retf
push
(bad)
test
inc
dec
cmp
rcl
xchg
push
mov
xchg
sbb
adc
stos
add
lea
arpl
push
clc
call
dec
jno
or
pop
pop
call
cld
fild
nop
fmul
inc
push
push
or
mov
sub
or
and
jl
jle
shr
clc
fs
repnz
stc
adc
jmp
dec
rcr
mov
push
movs
jo
xchg
mov
fstp
sub
sahf
mul
popf
std
ins
enter
push
inc
xor
in
mov
aaa
pop
les
jo
and
mov
in
push
sbb
inc
cli
dec
nop
test
pop
mov
xor
add
rcl
or
jne
mov
fnstsw
push
push
clc
retf
xchg
loopne
or
addr16
test
inc
test
stos
and
jge
and
pcmpeqb
dec
dec
hlt
pop
rol
pop
(bad)
push
je
test
das
adc
sbb
cmp
or
je
test
adc
out
dec
loopne
xor
sti
xor
xor
inc
xchg
je
sti
inc
dec
dec
cmp
ficom
sub
inc
mov
sub
add
mov
test
movs
xchg
mov
pop
movs
sbb
and
jae
nop
fsubr
sbb
clc
js
and
nop
mov
cmp
and
cmp
cmp
aaa
mov
and
movs
mov
cld
jb
mov
das
adc
sbb
adc
pop
xor
xor
mov
mov
sbb
mov
push
lahf
push
adc
cmp
push
and
inc
mov
xchg
ja
dec
fisub
nop
int3
(bad)
xchg
jbe
inc
fdiv
inc
fdiv
jns
or
cmc
shl
push
sbb
fs
aaa
push
fs
push
inc
pop
sbb
sbb
out
sbb
sbb
out
sbb
cmc
sub
jp
mov
xor
mov
mov
aas
lods
icebp
icebp
and
push
out
imul
mov
test
icebp
and
xor
out
mov
lock
adc
into
and
xor
push
xchg
jo
daa
cmp
scas
cwde
data16
das
cmp
leave
adc
adc
leave
push
jae
lahf
dec
pop
sub
xchg
inc
cmp
pop
je
popa
dec
mov
repz
call
and
xor
sub
gs
and
movzx
jns
or
cmp
mov
imul
jns
push
or
adc
mov
dec
add
pop
pop
call
inc
xchg
movs
pop
fild
jg
mov
sti
test
mov
call
jmp
mov
inc
push
push
push
sbb
lods
xchg
loope
cmp
mov
push
adc
cmp
pop
push
test
push
jmp
pop
sbb
push
add
into
outs
sub
pop
cs
adc
cmp
scas
leave
cmp
(bad)
scas
mov
adc
sub
cmps
je
mov
loope
xor
jg
sub
or
or
ds
mov
sub
cmps
push
call
mov
cmp
mov
adc
or
sbb
xchg
ds
adc
cmps
arpl
lea
dec
sub
out
and
mov
adc
mov
xchg
and
mov
pop
fs
pop
xor
mov
inc
add
out
fnstenv
adc
jno
int3
call
mov
js
push
push
or
loopne
and
adc
popf
lock
rcr
call
push
retf
push
test
sar
std
rol
push
idiv
fnsave
fcomp
jle
mov
inc
mov
sti
pop
push
ds
xor
ret
loopne
mov
(bad)
adc
push
ins
jmp
mov
enter
int
jbe
js
imul
stc
mov
inc
ror
and
jne
sbb
sbb
cli
lods
test
inc
adc
dec
cmp
adc
xchg
xchg
and
ret
fild
les
xor
adc
daa
xchg
(bad)
sti
jo
in
mov
aaa
mov
inc
jmp
lods
push
adc
aam
shl
test
dec
push
mov
dec
inc
inc
rol
xlat
mov
adc
cmps
xchg
pop
cmp
or
mov
ret
cmp
or
jecxz
push
out
movs
cmp
inc
push
jbe
aad
outs
adc
xchg
jge
mov
xlat
cmp
and
or
sbb
pop
jmp
(bad)
add
mov
or
in
ss
daa
(bad)
es
mov
and
push
adc
and
es
mov
xor
push
jae
inc
sub
xor
mov
fimul
cmp
test
repz
adc
or
mov
nop
adc
not
lods
retf
push
daa
lock
xor
ror
add
add
retf
stos
daa
repnz
xor
cwde
push
fistp
mov
add
out
sub
mov
cmps
mov
gs
mov
mov
int3
out
and
fdiv
cmp
pop
inc
(bad)
out
stc
and
imul
xchg
cmp
hlt
clc
sbb
and
xchg
cmps
pushf
pop
or
push
push
xchg
or
adc
rcl
add
push
mov
shr
mov
sbb
nop
sbb
and
pushf
add
jmp
inc
inc
test
call
or
inc
mov
mov
das
pop
xchg
add
movs
xor
or
mov
pop
push
fstp
xchg
or
push
mov
lods
lods
ret
jg
push
mov
aas
push
xor
sbb
mov
and
adc
inc
sub
cmp
scas
and
adc
adc
mov
xor
xchg
pop
mov
dec
sbb
ret
cmp
je
cs
rcr
cdq
add
push
shl
push
scas
jae
jle
jo
xchg
jmp
cwde
pop
pop
mov
adc
mov
les
add
(bad)
mov
lahf
or
mov
xchg
xchg
cli
pop
or
ret
xor
and
(bad)
in
jge
shl
les
dec
aam
push
adc
mov
inc
fstp
adc
aad
and
inc
jo
je
jl
sbb
push
arpl
nop
mov
mov
test
out
adc
sbb
dec
xor
and
mov
xorps
jnp
mov
adc
and
or
loope
les
(bad)
jl
fsub
or
into
lods
mov
stos
enter
call
add
mov
jmp
mov
push
movs
mov
stos
fdiv
xchg
test
dec
jle
inc
and
inc
fidiv
inc
retf
ds
enter
ja
iret
adc
in
call
jl
out
push
loop
pop
loope
fist
popf
adc
test
and
and
hlt
xchg
push
mov
into
jnp
mov
cmp
jb
sub
add
cmps
or
loop
nop
jnp
and
adc
stos
xor
xor
aad
and
mov
push
or
lds
icebp
ret
xchg
jne
popa
cmp
popa
aad
sti
enter
mov
or
aam
inc
push
and
adc
or
jp
push
retf
imul
push
fsubr
pop
or
call
mov
dec
cmps
test
in
movs
or
add
sub
lds
and
aaa
(bad)
mov
mov
ret
push
jmp
outs
inc
ret
ss
pop
mov
movs
loopne
mov
sub
movs
pop
add
in
mov
mov
sub
call
sbb
push
cmp
out
jmp
pop
inc
inc
sub
stc
stc
ins
mov
xchg
xor
cmp
stos
xor
add
sbb
xchg
das
les
sbb
mov
(bad)
push
inc
jo
pop
inc
mov
xlat
sub
or
fistp
loope
lea
mov
cs
push
ret
neg
jecxz
push
neg
leave
das
pop
push
out
adc
fsubr
lds
test
push
mov
int3
sub
out
mov
add
mov
jne
mov
or
bound
js
add
js
call
sub
fadd
adc
mov
test
or
mov
push
add
adc
jmp
push
out
and
lea
std
test
push
inc
cmp
xchg
pop
mov
shr
sub
shl
stc
jns
enter
inc
fdiv
or
and
cld
sbb
adc
sub
sbb
mov
daa
mov
mov
dec
inc
mov
inc
and
or
dec
(bad)
call
fsubr
pushf
rcl
movs
pop
adc
les
scas
fs
fsub
mov
inc
adc
sbb
ret
sti
pushf
sub
cs
mov
xchg
pop
or
inc
and
mov
cmp
or
cmp
mov
xchg
dec
inc
clc
test
cmp
sub
movs
cmp
mov
fs
xchg
push
and
lea
xchg
or
inc
nop
or
mov
add
sub
movs
xor
push
add
aaa
add
jne
push
pcmpgtb
push
xchg
test
loop
sub
arpl
sub
jne
pushw
push
in
dec
mov
adc
shr
jecxz
pop
mov
push
adc
in
push
je
scas
pushf
mov
mov
int3
and
inc
xchg
push
sub
sub
push
dec
mov
cwde
or
xor
neg
push
dec
add
xor
ja
add
fwait
rol
dec
sar
mov
dec
enter
pop
xchg
scas
cwde
inc
nop
jns
fs
nop
or
mov
(bad)
pop
(bad)
jmp
and
pop
xor
sbb
mov
adc
in
xchg
pop
test
and
push
nop
mov
xchg
jmp
stc
rep
xchg
js
imul
push
pop
push
call
in
call
rol
test
fxch
stos
dec
lods
es
leave
xor
xchg
pop
(bad)
in
xor
(bad)
or
sbb
fdiv
sub
loop
jecxz
or
mov
sub
hlt
xor
test
das
jle
(bad)
jmp
pop
(bad)
jno
xor
fiadd
push
jge
adc
test
adc
lods
inc
xchg
daa
pop
inc
add
mov
push
out
adc
pop
das
cs
rol
into
int
or
lahf
sbb
and
inc
inc
jns
movs
and
es
into
xchg
scas
xchg
or
jmp
out
and
movs
adc
ret
adc
jmp
arpl
xor
sbb
inc
xchg
(bad)
rcr
push
stc
mov
data16
xchg
add
test
mov
aaa
push
cmp
jns
imul
ffreep
pushf
aad
mov
sub
adc
test
adc
xor
or
jno
sbb
imul
mov
jne
and
retf
xor
je
dec
sub
adc
dec
xor
ror
or
stos
mov
mov
frstor
cmp
jne
push
adc
sbb
xchg
sahf
arpl
in
or
movzx
ror
sar
mov
stos
loopne
jae
popa
push
lea
add
mov
call
add
mov
jle
aaa
push
stc
stc
cmp
dec
push
inc
mov
pusha
test
mov
outs
adc
ins
jno
icebp
pop
or
push
mov
int
add
jle
push
out
xchg
(bad)
mov
mov
mov
inc
xchg
cmp
nop
pop
enter
sbb
mov
and
or
xor
and
mov
mov
cmp
sbb
xchg
xchg
mov
sub
mov
mov
pop
sub
retf
inc
cmps
jne
loop
out
cmp
leave
enter
pop
sbb
dec
stos
push
push
(bad)
loopne
call
gs
mov
lds
enter
push
mov
shr
pop
mov
les
jl
fld
xchg
cmp
int
or
push
cs
aaa
js
adc
push
cld
mov
add
lahf
adc
imul
sti
adc
add
push
mov
xchg
push
xor
sbb
push
xchg
pop
nop
js
in
adc
mov
out
icebp
sub
mov
xchg
jbe
inc
inc
je
test
int
jnp
daa
ret
pusha
push
push
inc
imul
sbb
cmp
push
sub
adc
push
nop
lock
xchg
mov
ret
cmps
stc
jg
jle
and
sub
cmp
jae
sub
pop
sbb
cwde
xchg
rcr
shl
leave
dec
mov
mov
cmp
call
int
xor
mov
mov
add
push
jne
dec
xchg
scas
and
(bad)
std
mov
and
push
inc
inc
jp
mov
sub
mov
cmp
jbe
dec
mov
cmp
or
movs
mov
jmp
push
push
jb
outs
pop
dec
xor
adc
sub
sub
inc
jmp
xchg
cwde
pusha
ss
adc
pop
jmp
and
add
sbb
pop
mov
lea
repnz
adc
xchg
arpl
mov
je
cmp
add
or
cdq
or
adc
mov
out
sub
sbb
fmul
adc
adc
sbb
adc
jne
cmp
sbb
cli
fnstcw
pop
mov
cli
in
and
mov
popf
sti
sbb
or
in
fistp
(bad)
mov
pop
push
mov
xor
aas
lea
or
and
push
ss
xor
mov
sbb
and
adc
push
pop
cmp
adc
push
fild
pushf
psubsb
jp
retf
xor
jg
push
test
jnp
sbb
jb
xchg
rol
pop
shr
jmpw
sub
stos
or
add
call
lods
sbb
cmp
or
mov
jnp
xchg
cmp
dec
sub
cld
sub
jmp
and
popa
mov
mov
inc
and
jg
adc
aaa
shl
or
inc
jmp
rol
sbb
cmc
push
outs
(bad)
fst
daa
(bad)
pop
ja
xchg
jne
dec
inc
loope
out
xchg
pop
jne
jge
std
add
mov
scas
sti
cwde
cld
add
or
and
add
pop
aaa
gs
dec
or
cmp
mov
aas
out
nop
xchg
adc
or
out
je
ds
push
dec
jno
sub
call
popf
jno
leave
pop
mov
in
and
mov
mov
mov
pop
mov
push
dec
inc
fild
push
mov
iret
mov
jne
jmp
std
add
(bad)
call
push
mov
mov
mov
adc
bound
out
jmp
push
mov
inc
mov
ret
dec
ss
pop
dec
pop
call
add
mov
add
test
push
sub
adc
lahf
out
mov
and
sahf
dec
or
shl
cld
pop
mov
les
cmp
jmp
mov
jle
mov
icebp
inc
inc
sub
(bad)
in
jae
psubsw
or
or
adc
aas
inc
in
push
aas
sub
sub
daa
sub
xor
xor
ret
mov
xchg
xchg
adc
mov
arpl
xchg
adc
enter
fprem
sub
mov
or
inc
and
mov
or
aad
jg
or
adc
adc
sub
mov
xor
sub
imul
cmp
adc
mov
dec
jl
push
(bad)
add
shl
and
cmc
and
inc
sbb
dec
mov
dec
sbb
test
sbb
sahf
rcr
nop
xchg
cwde
or
test
cs
xchg
sahf
add
pop
push
and
aam
sbb
or
out
or
sahf
sub
jne
pop
mov
adc
nop
or
adc
test
rcr
fldenv
jge
mov
mov
jle
icebp
mov
test
dec
out
ja
dec
cld
movs
xor
call
lahf
push
in
push
push
xor
scas
shl
cmp
and
call
adc
je
sub
test
jp
and
adc
sub
pop
pop
sub
mov
dec
cld
cs
(bad)
xor
sub
and
dec
or
aas
(bad)
mov
pop
adc
arpl
adc
sbb
inc
dec
(bad)
repnz
push
adc
(bad)
adc
adc
cdq
je
cmp
adc
mov
push
jmp
lahf
sbb
dec
clc
stos
test
dec
xor
inc
lea
or
ret
push
dec
(bad)
adc
mov
xor
mov
jns
add
inc
(bad)
jae
data16
hlt
sub
xchg
inc
push
fwait
cmps
adc
push
in
ror
push
dec
pop
iret
push
pop
pop
xchg
nop
push
pop
inc
xor
fidivr
inc
add
rcr
fcomp
and
add
xor
retf
add
dec
jmp
mov
sbb
in
and
add
add
pop
and
add
stc
nop
pop
and
sub
int
push
mov
retf
fsub
ss
and
mov
lahf
mov
push
pusha
xor
fst
rcr
xchg
inc
sahf
add
shl
or
xor
aaa
xor
or
arpl
dec
call
xchg
fnstsw
push
add
pop
push
dec
cmp
add
bound
fnsave
movs
test
ins
xchg
fisub
jb
pop
cwde
mov
sti
add
cmp
push
xor
imul
jge
adc
stos
sub
ss
in
sahf
xor
movs
push
add
xchg
(bad)
std
mov
(bad)
fadd
pop
out
add
ja
mov
push
loopne
and
add
mov
ja
rcr
sub
mov
test
jecxz
sub
out
stos
scas
(bad)
cs
inc
sub
mov
push
push
outs
adc
gs
mov
fwait
imul
mov
sbb
inc
pop
add
ds
and
mov
aad
call
mov
dec
out
ret
add
xchg
sbb
add
jb
lsl
not
jmp
(bad)
mov
enter
push
leave
les
add
ret
or
sub
je
stos
pop
ret
lahf
(bad)
das
xchg
pop
adc
mov
push
push
inc
jmp
dec
xor
jge
and
into
xor
fstp
push
adc
test
scas
push
popa
mov
cmp
dec
sbb
adc
dec
mov
push
jge
sub
call
sub
mov
mov
push
adc
xchg
fld
inc
scas
mov
push
ret
ror
mov
cld
inc
mov
sub
xchg
or
mov
int
adc
push
mov
nop
add
shl
(bad)
movs
test
ss
sub
push
mov
fmul
cmp
lds
imul
mov
ds
jmp
inc
jb
push
mov
adc
dec
sti
mov
cmp
or
sbb
dec
add
aaa
cld
jmp
adc
or
jne
call
mov
ins
mov
or
fist
sub
sbb
sub
mov
and
push
test
jmp
ins
push
pop
ds
adc
mov
cwde
sbb
aas
fldcw
(bad)
sbb
scas
aad
mov
loope
mov
out
mov
mov
cmp
jl
cmps
xor
add
or
or
inc
inc
and
xor
mov
test
mov
dec
xor
imul
add
push
mov
sbb
push
dec
or
call
sub
xchg
push
push
cld
or
push
ins
daa
sti
jne
adc
pop
xchg
fstp
xor
adc
mov
inc
inc
sub
jle
mov
js
mov
dec
clc
cld
xor
cmp
jne
je
pusha
cmp
je
push
push
push
cld
add
imul
cli
inc
xchg
pop
nop
or
int3
mov
jg
rcr
sbb
and
nop
jl
and
js
mov
jb
aas
sub
jmp
push
and
cmp
hlt
inc
sub
adc
xor
sub
xor
fbld
jle
mov
add
adc
cld
adc
or
hlt
dec
sub
mov
pop
add
push
push
and
mov
mov
pushf
imul
xchg
mov
jmp
fidiv
int
jnp
xchg
aaa
ins
pop
icebp
mov
push
fsubr
data16
and
cmp
add
inc
adc
js
inc
pop
or
push
call
push
inc
dec
bound
pusha
ja
je
and
and
push
xchg
mov
inc
xchg
and
cdq
and
xchg
and
pop
dec
or
or
adc
retf
mov
push
xor
inc
test
sub
xlat
or
push
dec
dec
pop
jmp
fldcw
push
dec
cmp
mov
add
ret
in
cli
dec
mov
lock
and
enter
add
cmc
inc
jmp
or
pop
fidiv
cmp
dec
jne
and
add
call
add
push
jle
jl
(bad)
cld
sti
in
inc
mov
add
pop
xchg
enter
bnd
and
push
inc
pop
and
dec
adc
in
jb
cmp
push
push
cmp
sbb
daa
nop
push
enter
xor
adc
sbb
mov
nop
inc
movs
adc
pop
xchg
add
aam
jmp
stc
sbb
or
inc
out
out
inc
cmp
lods
test
mov
scas
push
pop
lock
(bad)
sahf
dec
out
dec
icebp
lds
call
mov
lds
mov
mov
push
mov
pop
in
movs
and
push
push
mov
adc
inc
or
(bad)
test
(bad)
push
xor
mov
sub
inc
xrelease
or
jno
sbb
dec
xor
and
daa
(bad)
jle
ror
and
je
mov
inc
xchg
gs
(bad)
and
lea
xchg
es
sub
mov
pop
loope
ins
daa
daa
mov
cwde
mov
sahf
adc
mov
push
popf
push
xchg
dec
js
mov
sub
pop
ds
cmp
(bad)
lock
cli
xchg
in
dec
or
stc
movsx
inc
xor
add
fcomp
mov
call
mov
mov
ss
cmp
and
sbb
mov
or
test
dec
aad
jl
add
out
xchg
mov
dec
mov
mov
sar
jg
jno
icebp
aad
sub
test
add
add
jbe
and
mov
cmp
jne
retw
outs
cli
jbe
cmp
jge
shr
lea
pop
stc
lods
mov
xchg
es
xchg
arpl
in
mov
inc
and
inc
loope
cli
imul
add
push
xchg
push
mov
inc
enter
dec
xchg
adc
mov
scas
fs
cld
scas
and
mov
or
xor
cmp
or
mov
popa
cld
inc
(bad)
sti
mov
xor
call
adc
adc
mov
mov
stos
push
test
jle
inc
push
jmp
push
pop
js
mov
xchg
sub
adc
xchg
jne
or
jne
mov
into
in
call
push
pop
or
jl
jns
or
dec
dec
and
cs
cld
inc
mov
clc
in
mov
mov
dec
mov
adc
xor
sti
cs
mov
adc
add
movs
in
mov
inc
or
jecxz
loopne
cmps
pop
test
push
pusha
dec
or
push
add
xor
fs
sbb
or
das
inc
pop
mov
adc
mov
add
loopne
ins
dec
sub
loopne
push
push
cmp
pop
inc
sbb
test
xlat
lods
mov
fs
dec
fisub
push
push
sahf
mov
sbb
pop
push
stc
jmp
fld
iret
call
retf
or
add
adc
jg
repnz
push
adc
mov
and
outs
gs
sbb
js
jns
jl
adc
je
dec
or
shl
retf
(bad)
imul
add
mov
adc
aam
cld
xchg
fisttp
inc
sbb
push
mov
outs
rcl
cwde
push
les
adc
inc
pop
enter
and
sbb
inc
jl
in
jns
xor
imul
pop
test
adc
mov
call
in
xchg
fist
enter
pop
ret
pop
inc
pusha
mov
cs
mov
inc
fnstcw
fnop
cmp
popa
push
xchg
jno
push
dec
sub
push
jb
dec
mov
cdq
inc
xchg
inc
inc
in
inc
test
mov
test
inc
jg
xor
ror
lahf
or
and
retf
out
jmp
xor
xor
or
adc
(bad)
mov
(bad)
sbb
push
mov
jmp
xlat
adc
push
ins
movs
or
jl
push
xchg
sti
fiadd
push
xchg
add
adc
(bad)
xchg
jo
icebp
mov
or
xchg
out
lods
sub
xchg
gs
mov
cmps
push
sbb
push
in
push
or
test
sub
mov
div
push
rcl
mov
push
cmp
mov
push
sbb
sbb
adc
ins
cli
lods
mov
mov
mov
jmp
aas
xchg
mov
and
pop
call
adc
mov
mov
fisub
cwde
push
adc
daa
mov
(bad)
xor
test
sub
sbb
inc
pusha
dec
mov
aaa
in
xchg
mov
adc
mov
push
loop
and
daa
mov
mov
and
xchg
add
cmp
fs
push
xlat
mov
push
xchg
sbb
xor
test
mov
jns
pop
jbe
inc
or
sbb
cs
or
sbb
push
pop
call
mov
xor
imul
mov
das
mov
test
ds
lds
cmp
sub
mov
test
and
inc
ss
sub
call
bound
pop
inc
fs
les
adc
test
push
jl
mov
and
xchg
sbb
aad
or
pop
adc
mov
cmps
xor
rcl
pop
jmp
mov
mov
pop
jmp
pop
int
out
loop
mov
mov
push
xchg
xchg
cmps
sub
mov
mov
xchg
retf
sbb
dec
rol
mov
dec
mov
jns
and
dec
dec
jnp
xchg
sub
lea
jle
sub
push
xor
call
and
xor
and
inc
mov
xchg
daa
movs
(bad)
mov
cmp
shl
push
(bad)
mov
cmps
push
add
pop
mov
test
dec
pop
sti
push
adc
lds
add
xchg
or
jmp
cmp
pop
jg
or
xor
lahf
sbb
and
sahf
cmp
repnz
dec
mov
aaa
jecxz
push
js
test
or
movs
imul
xlat
inc
xor
sub
and
jg
fst
stos
mov
xor
nop
out
xor
xor
dec
push
or
jno
and
cmps
dec
cwde
mov
popf
and
cmp
xchg
mov
cmps
scas
cmp
div
mov
push
scas
xchg
mov
mov
push
dec
leave
or
dec
pop
call
leave
dec
scas
cmp
fstp
cmp
retf
pop
clc
outs
dec
xlat
in
retf
test
cmp
sub
(bad)
iret
pop
cmp
cmp
or
es
push
or
jb
pop
jbe
adc
loop
xchg
repnz
inc
push
mov
ins
add
mov
xchg
mov
in
adc
pushf
adc
dec
xchg
sub
cwde
icebp
mov
cmc
int
pop
call
inc
sbb
and
dec
bound
sbb
inc
push
and
mov
pop
bound
sbb
inc
fs
inc
push
mov
bound
je
push
xchg
and
jl
dec
inc
inc
or
test
inc
inc
adc
les
mov
sub
test
les
mov
sbb
mov
xor
fdiv
push
inc
pop
enter
add
shl
or
and
fwait
or
clc
(bad)
fdiv
sbb
lock
in
lods
stos
and
sti
(bad)
sbb
loopne
and
fmul
and
sub
hlt
mov
add
add
push
jne
mov
int3
or
mov
and
mov
lds
sub
nop
lods
enter
aaa
push
sbb
pushf
and
xchg
xor
inc
mov
les
test
int3
sbb
jl
aam
js
fsub
fcomp
jo
loopne
inc
ins
and
nop
push
xor
sbb
lock
and
nop
pop
enter
aaa
mov
std
and
or
xchg
and
enter
enter
xor
and
sub
xor
lea
cmp
xor
stos
or
xor
sbb
or
xchg
and
nop
cmp
sbb
cmp
sbb
test
inc
xor
adc
dec
xchg
or
xchg
and
or
push
fs
mov
or
pusha
dec
adc
xchg
call
ins
fs
xor
lock
xchg
xchg
mov
enter
dec
and
test
mov
fmul
xchg
and
shl
cwde
sbb
or
xchg
and
shl
sbb
and
nop
mov
mov
sbb
fnstcw
loope
dec
or
mov
test
mov
or
sbb
or
xchg
and
nop
mov
shl
aam
or
inc
jl
fcom
je
in
jo
call
in
nop
push
xor
sbb
clc
xchg
and
nop
pop
ror
or
xchg
and
enter
xor
or
xchg
and
and
cmp
xor
sub
xor
inc
xor
sub
cmp
and
inc
or
xchg
and
nop
dec
enter
aaa
cwde
fs
xor
push
or
xchg
and
pop
fsub
fsub
enter
or
cdq
lea
adc
sbb
lods
sub
hlt
sbb
push
lock
xchg
and
in
mov
loopne
xchg
xchg
and
fs
or
xor
sbb
lods
sub
sub
popf
mov
mov
les
rcr
or
xor
xchg
and
lahf
mov
pop
enter
dec
adc
in
xor
in
mov
in
xor
and
pop
cs
retf
nop
clc
retf
nop
cld
enter
xchg
push
mov
sub
or
inc
or
cmp
push
adc
inc
jl
xchg
sbb
dec
and
je
or
sub
push
mov
movs
or
je
lea
ret
mov
mov
mov
add
mov
jmp
and
and
mov
push
loopne
add
pusha
xlat
aad
sub
push
mov
cmp
fldenv
xor
sbb
jmp
mov
mov
ret
lock
fcomp
jge
xchg
fdivr
neg
and
jge
xchg
fsub
js
sub
addr16
addr16
gs
pop
xchg
sbb
cwde
adc
pushf
test
or
test
xor
test
mov
mov
sbb
in
xchg
(bad)
call
int3
loopne
rcr
xchg
aam
mov
ror
enter
xchg
in
int3
call
mov
mov
div
icebp
adc
push
out
jmp
add
lahf
push
retf
rol
das
xchg
push
add
inc
addr16
and
je
scas
(bad)
sbb
test
call
mov
outs
or
popf
and
mov
mov
sbb
xchg
and
mov
adc
pushf
cmp
inc
and
xchg
in
adc
jmp
sbb
xchg
or
push
pop
adc
xchg
ds
adc
mov
out
and
cli
adc
mov
inc
repnz
ss
mov
sub
mov
ds
cs
test
or
mov
std
dec
adc
pushf
sbb
sub
inc
mov
pop
je
adc
aas
push
jg
into
test
xor
mov
dec
xor
and
je
sti
or
mov
add
mov
cld
cdq
test
push
es
jg
mov
ja
dec
or
adc
dec
in
adc
and
add
jp
xor
aam
push
(bad)
lock
fmul
mov
mov
mov
add
popf
sar
outs
xor
lods
mov
pop
aas
xchg
sub
sub
mov
mov
or
jmp
js
push
je
dec
pop
dec
test
sub
leave
dec
lds
sub
push
les
hlt
mov
push
push
push
clc
cld
mov
sbb
out
sub
push
and
cmp
push
repz
lds
inc
xor
cmovp
and
inc
test
fwait
ss
scas
addr16
xor
sbb
inc
fmul
push
cmp
xchg
das
ficomp
repnz
inc
hlt
inc
es
sti
popa
xor
fdiv
bound
lock
xor
(bad)
sub
in
push
mov
push
pop
push
push
je
adc
xor
xor
inc
addr16
cwde
fsub
fs
sub
in
mov
jno
push
mov
mov
rcr
mov
cmp
sbb
or
xchg
dec
add
add
add
xor
xor
sbb
jle
pop
mov
pop
cwde
mov
(bad)
cmp
je
add
lods
outs
mov
pop
add
stos
sub
aam
jae
inc
push
mov
adc
mov
inc
and
mov
or
(bad)
jmp
std
inc
cmp
call
dec
fs
jne
int3
mov
or
jmp
or
add
mov
add
sub
inc
inc
das
in
and
retf
neg
cdq
push
fdivr
mov
xor
(bad)
add
mov
mov
or
jae
bound
add
sub
push
in
inc
gs
jmp
mov
pop
add
pop
mov
xchg
mov
bound
push
arpl
es
dec
ret
dec
mov
mov
or
hlt
mov
nop
fcom
pop
mov
mov
cmp
jmp
mov
push
mov
sub
add
adc
cmp
pop
popa
push
xor
daa
sbb
call
(bad)
jle
jmp
push
dec
je
icebp
xor
pop
adc
push
stc
jmp
mov
add
add
pop
and
jne
scas
xchg
add
cdq
or
je
jge
pop
les
pop
jmp
sbb
test
xchg
mov
mov
mov
out
sub
adc
cmc
ror
xchg
dec
add
pop
jbe
or
call
add
cmp
jne
(bad)
movs
cmp
push
mov
cmp
jp
xchg
iret
jnp
xchg
push
cdq
sub
push
jo
sbb
aas
jle
sbb
jg
cmp
mov
pop
les
repnz
inc
add
nop
pusha
fs
or
and
ret
adc
and
inc
and
aas
and
ret
jno
adc
add
mov
push
pop
or
push
jno
or
or
push
neg
dec
js
popf
shr
mov
pop
jno
cmp
and
adc
pop
into
add
adc
or
push
push
adc
pop
and
cmp
xor
cmc
push
das
pop
rol
ins
and
das
mov
and
daa
add
mov
dec
and
push
stos
es
xor
adc
add
fsubr
pop
daa
sar
or
leave
xor
les
fsub
inc
push
or
(bad)
mov
cmp
rcl
dec
push
add
or
pop
cmp
scas
push
repnz
mov
xchg
mov
mov
mov
push
xor
sbb
je
and
and
sbb
neg
xchg
jmp
dec
mov
and
imul
and
push
pushf
loopne
mov
fnstsw
inc
xchg
sub
out
mov
add
(bad)
lock
add
stos
and
ins
rol
and
and
(bad)
cmc
add
push
loopne
dec
fistp
inc
mov
inc
test
xor
dec
jbe
ss
imul
movs
mov
in
nop
sbb
add
xor
adc
sub
iret
call
xor
lahf
sbb
xchg
xor
mov
jnp
jb
pushf
data16
(bad)
or
inc
inc
push
push
sbb
adc
ret
adc
loope
adc
jl
fimul
push
test
nop
pop
adc
or
nop
xor
add
mov
mov
aam
js
mov
lea
fsub
or
stos
mov
daa
sbb
pop
inc
and
jmp
int
cmp
stc
dec
test
dec
inc
dec
cmps
rcl
inc
loop
adc
sub
outs
ror
(bad)
xchg
dec
xchg
sub
call
sbb
test
jmp
or
mov
mov
dec
les
xor
xchg
es
push
sbb
push
adc
out
inc
xor
das
mov
fisttp
lock
dec
inc
mov
test
pusha
pop
cmp
test
sub
inc
adc
mov
adc
add
push
sub
and
xchg
ins
aam
rol
and
push
xor
adc
(bad)
push
sahf
push
retf
push
inc
nop
loop
pop
adc
dec
(bad)
movs
in
nop
pop
mov
add
and
icebp
mov
mov
push
jmp
leave
push
imul
shl
sar
sbb
ret
add
out
or
adc
push
sti
pop
ficom
fs
or
shr
xlat
sub
mov
mov
mov
and
jg
adc
cmps
sbb
sub
aaa
mov
arpl
cld
retf
mov
add
xchg
sbb
cdq
mov
xor
fisttp
cmp
xchg
or
fst
outs
out
inc
cwde
and
je
xlat
push
aas
push
xchg
sbb
test
xor
mov
or
in
cmc
add
jmp
push
pop
lahf
jns
cmps
repnz
es
push
jo
adc
add
fild
cmp
ret
mov
dec
push
or
scas
inc
jp
movs
les
xor
jne
xor
adc
xchg
or
sar
mov
outs
sbb
xchg
push
inc
pop
or
pusha
add
add
(bad)
cmps
or
xchg
or
shr
ror
add
add
repz
and
cmp
add
inc
movs
push
xor
push
int3
scas
(bad)
ins
add
adc
cmp
xchg
push
jb
test
mov
lea
nop
dec
jmp
mov
xchg
add
test
test
jne
mov
jno
mov
test
fst
xchg
adc
popf
cmp
je
push
pop
shr
das
test
inc
sbb
push
pop
lea
imul
scas
mov
jne
sub
mov
hlt
call
imul
push
(bad)
(bad)
mov
push
(bad)
imul
xchg
nop
imul
movs
adc
mov
adc
sub
inc
add
fmul
add
sub
scas
sbb
push
clc
psrld
xlat
dec
cld
push
ret
mov
jmp
arpl
sbb
mov
call
or
jmp
jle
push
int
or
sti
sbb
sub
inc
imul
xor
pop
xor
stos
sbb
jmp
div
pop
cmp
mov
add
rcl
or
inc
jmp
sub
inc
push
adc
inc
aas
push
mov
enter
repnz
push
push
push
call
retf
mov
jnp
push
shr
or
gs
call
in
sub
adc
mov
out
jno
dec
je
es
daa
mov
dec
int
loop
les
add
je
not
and
popa
push
sbb
fs
or
dec
adc
add
icebp
push
cdq
or
push
inc
or
pop
dec
sbb
add
cmp
cmps
pop
push
fstp
mov
mov
lock
push
and
cmps
dec
add
jo
stos
call
scas
hlt
inc
ficom
imul
jmp
adc
pop
or
lea
adc
dec
adc
dec
nop
mov
cmp
cwde
sub
inc
mov
shl
aad
pop
mov
popa
cmc
stc
push
jo
hlt
push
or
loope
into
jg
push
and
clc
cmps
dec
adc
and
jne
cwde
xchg
xchg
cdq
cmps
inc
arpl
or
push
jp
popf
sub
shr
cmp
leave
test
and
sbb
sbb
inc
cmp
mov
dec
std
aad
outs
daa
daa
repz
adc
cmps
mov
inc
ds
cmp
and
fs
or
dec
inc
call
xlat
xor
inc
sbb
iret
push
(bad)
mov
adc
and
es
movs
cld
mov
nop
test
push
nop
and
(bad)
call
sub
test
mov
sbb
fisubr
mov
adc
adc
dec
outs
adc
push
call
rep
sub
push
out
ds
(bad)
rcl
test
in
push
clc
pop
lahf
adc
mov
sbb
es
xchg
pop
cmc
mov
js
adc
and
test
mov
aad
sub
pop
xchg
jmp
adc
push
scas
sub
call
nop
adc
mov
add
call
or
pop
(bad)
fst
test
popa
adc
cmc
or
jno
shl
lods
jae
mov
cmp
hlt
lods
adc
pop
daa
xchg
test
xchg
and
aam
pop
enter
add
(bad)
xchg
test
fs
sub
ret
popa
sub
pop
dec
out
mov
sar
(bad)
push
stos
sub
call
push
jmp
jecxz
mov
jne
push
leave
cmp
push
and
fnstenv
sub
push
mov
das
or
popa
fwait
jp
cmp
jmp
retf
lock
cmp
pop
push
or
sub
dec
pop
dec
leave
mov
jecxz
imul
inc
cmp
daa
sub
mov
inc
arpl
mov
sbb
or
aaa
(bad)
imul
inc
out
push
push
inc
add
mov
scas
push
in
inc
and
sub
sbb
cmps
loop
jno
dec
dec
add
lock
xchg
(bad)
call
sbb
repz
mov
push
dec
test
repz
xor
call
inc
lock
mov
xchg
fnstsw
fmulp
ja
data16
cmp
pop
adc
fisub
fdiv
mov
mov
adc
(bad)
clc
push
jp
push
stc
sub
and
and
mov
call
lahf
adc
(bad)
call
and
repnz
inc
mov
lock
les
fisub
(bad)
(bad)
push
retf
repz
inc
push
mov
mov
adc
xchg
jecxz
push
inc
sbb
jmp
or
pop
cs
addr16
mov
inc
adc
push
in
cmp
(bad)
fild
mov
inc
cmp
je
cli
jecxz
xor
jge
mov
hlt
xor
adc
(bad)
adc
xor
jno
dec
xchg
in
clc
test
jb
retf
or
push
mov
jge
mov
jno
out
push
inc
pop
push
in
and
cwde
pop
jo
push
retf
xor
fcmovne
push
repz
fst
mov
xor
jno
sbb
sbb
add
pop
icebp
dec
xchg
lock
ja
jg
push
push
dec
mov
(bad)
mov
pop
add
jmp
mov
mov
jecxz
mov
inc
adc
fimul
push
daa
mov
mov
daa
hlt
into
dec
add
or
or
imul
sbb
js
xor
push
xchg
fs
mov
dec
inc
cmp
test
mov
shl
aas
cmp
xor
dec
push
into
sub
sub
mov
pop
mov
or
xor
dec
and
xchg
jbe
test
xchg
mov
data16
push
sbb
inc
int
adc
cmp
push
call
pushf
retf
sbb
(bad)
xor
leave
lods
adc
in
xchg
xchg
xor
xor
mov
js
and
add
xor
rcl
sbb
mov
(bad)
out
out
es
fnstcw
mov
scas
jecxz
adc
leave
adc
sbb
add
adc
xchg
loopne
or
scas
add
out
mov
cli
and
(bad)
xor
xchg
inc
jmp
clc
xchg
cwde
pop
clc
cwde
bound
retf
arpl
pop
pop
adc
out
sar
push
inc
sbb
mov
pop
lahf
mov
sbb
leave
popf
adc
(bad)
xchg
movs
shl
push
test
pushf
xchg
mov
push
mov
sti
and
in
or
fidivr
jne
mov
xor
test
xchg
into
pushf
shl
inc
inc
add
std
je
mov
loopne
or
add
fistp
int3
pextrw
push
sub
repz
pushf
lods
cdq
and
cmp
pop
cli
mov
jo
jmp
add
add
push
pop
jmp
dec
adc
test
stos
or
push
sub
adc
repz
mov
fild
ins
sub
arpl
cmp
push
fwait
dec
pop
mov
jmp
pop
cld
or
js
ins
push
dec
mov
ret
xchg
jne
lds
daa
das
das
mov
bound
sti
sbb
inc
jo
mov
imul
xchg
pop
ins
sub
jo
xor
mov
inc
xchg
adc
add
adc
les
xor
hlt
mov
clc
jecxz
loope
adc
mov
inc
xor
and
or
int3
sbb
mov
ja
inc
shl
and
call
xor
sti
je
in
mov
ins
ins
cli
cmp
jo
sbb
adc
fimul
jmp
popf
pushf
and
mov
pusha
inc
push
push
xchg
popa
shl
pop
call
or
dec
data16
icebp
jmp
xchg
or
sahf
pop
inc
nop
adc
repnz
fs
sub
xor
pop
push
outs
frstor
inc
(bad)
sbb
pop
xchg
std
test
push
cmc
rol
dec
sbb
mov
aam
outs
push
push
pop
pop
hlt
fild
js
loop
xchg
xor
stc
shl
or
stos
fisubr
(bad)
enter
inc
or
inc
out
adc
mov
repz
repnz
adc
fstp
xchg
and
ins
dec
out
or
mov
pop
das
loop
loopne
sub
add
mov
je
or
mov
lods
xor
or
retf
jge
loop
cmp
xchg
repz
mov
jecxz
push
push
call
cmp
dec
std
push
and
or
movs
adc
mov
fwait
scas
push
adc
pop
fsubr
mov
jmp
(bad)
test
push
or
lods
add
sbb
mov
loopne
sub
xchg
call
xchg
and
stos
xchg
sbb
loop
xlat
mov
inc
inc
mov
loopne
adc
sub
fwait
sub
and
cmp
mov
lock
or
inc
rcr
aam
dec
mov
pusha
mov
idiv
mov
rep
or
fsub
inc
inc
int3
mov
daa
push
in
xchg
cli
sub
dec
ret
push
call
or
fld
xchg
xor
aas
dec
clc
mov
cmp
ror
fsubr
pop
cmps
inc
mov
jmp
sti
cmps
(bad)
ss
aam
inc
je
loope
neg
shl
test
call
inc
adc
scas
enter
xchg
push
adc
dec
dec
xor
scas
xchg
test
nop
push
mov
aas
mov
push
cmp
pop
add
cmp
dec
and
call
xor
je
cmp
in
inc
inc
cmp
push
inc
cwde
nop
mov
jg
cmp
pop
xchg
popa
sub
in
xchg
jns
xor
or
dec
and
xor
add
es
das
shr
data16
mov
imul
and
and
sbb
retf
outs
adc
inc
out
push
(bad)
mov
jb
repnz
push
stos
add
sbb
cli
mov
or
call
xchg
lahf
push
adc
mov
push
lds
xor
push
bound
lods
js
adc
ret
scas
out
sub
dec
mov
lods
push
pop
lock
cmps
popf
jl
inc
sbb
or
adc
xor
cmps
(bad)
push
add
loopne
cli
sbb
fs
popf
xor
arpl
in
stos
or
call
pop
inc
je
inc
fmul
dec
fcomp
movs
ss
sbb
movs
or
add
mov
ret
call
xchg
movs
xchg
sub
sbb
push
aam
inc
int3
or
or
test
dec
or
sbb
out
bound
or
(bad)
or
aam
cmp
fisub
sbb
call
call
push
pop
xor
sbb
movs
leave
aas
mov
es
push
sub
ja
inc
inc
sub
sbb
dec
jge
mov
adc
fcom
mov
inc
and
jge
movs
inc
jge
or
pop
inc
inc
push
lea
test
and
(bad)
mov
gs
sbb
(bad)
aam
add
or
les
push
adc
or
bswap
mov
sub
mov
adc
inc
push
or
and
mov
adc
mov
add
call
xor
lock
jb
or
sub
xlat
or
add
iret
dec
jne
popa
fwait
sbb
inc
or
adc
mov
jmp
mov
in
add
dec
mov
xlat
loopne
add
dec
shl
into
mov
and
jae
int3
and
adc
sbb
adc
dec
cbw
or
in
jmp
sub
adc
movs
add
cld
dec
(bad)
mov
pop
inc
xor
sbb
and
leave
mov
push
sub
cmp
mov
mov
call
push
scas
ret
test
push
shr
dec
repnz
mov
in
dec
cmp
fld
mov
das
pop
cmp
and
out
and
adc
jp
jb
retf
enter
xchg
add
adc
icebp
stos
sub
add
test
loop
add
(bad)
stc
and
add
jmp
inc
sbb
pop
loopne
dec
(bad)
shl
and
pop
push
xor
and
xchg
sub
mov
jle
or
mov
push
les
enter
stc
xchg
aam
adc
sbb
mul
pop
in
stos
repz
in
dec
push
mov
call
sbb
(bad)
out
pop
mov
cld
sub
pop
jbe
adc
scas
add
mov
mov
stc
in
dec
adc
or
leave
nop
leave
add
dec
push
sub
mov
jne
sbb
jbe
dec
adc
sti
inc
add
adc
pop
sub
xor
leave
xchg
lods
mov
ret
gs
(bad)
fadd
call
test
adc
mov
sub
cmp
das
(bad)
lods
dec
test
add
jbe
fdivp
pop
sbb
adc
jge
jecxz
idiv
fwait
test
test
fucomp
sub
cmp
dec
sub
ror
(bad)
mov
pop
sbb
adc
mov
inc
jmp
dec
lock
dec
cmp
push
daa
xor
jl
and
inc
repz
cmps
(bad)
pop
xor
fdiv
sbb
rcr
add
xor
sub
daa
dec
or
sbb
pop
xor
inc
aaa
(bad)
in
sub
and
cmp
pop
mov
subps
or
mov
movs
movhps
xor
mov
mov
pop
and
jo
xchg
lock
pop
pop
jmp
aaa
adc
dec
adc
dec
out
push
or
or
shl
dec
fsub
or
or
inc
inc
and
push
into
xor
repnz
es
jo
xor
mov
xchg
cmp
rcr
rol
leave
(bad)
xlat
add
xchg
adc
or
inc
int
xor
cmp
cmp
xor
pop
into
test
xor
xchg
mov
idiv
mov
imul
jb
ret
jl
jnp
push
jmp
or
mov
or
mov
dec
mov
sub
xchg
in
cmp
scas
loopne
mov
(bad)
ins
jb
mov
pop
jne
and
adc
or
cmp
neg
sbb
fs
adc
push
jne
dec
mov
jmp
jae
adc
stos
mov
jno
dec
mov
xchg
cmp
pop
cmp
mov
test
xor
pop
outs
or
sub
lea
add
shl
in
inc
ja
mov
(bad)
loop
cld
call
dec
pop
jnp
in
ds
pop
mov
enter
dec
outs
push
pop
xor
jecxz
loope
or
xor
pop
repnz
add
or
and
gs
es
push
sub
mov
xchg
jo
dec
add
add
call
es
in
xchg
into
push
push
cmp
pop
inc
into
cmp
call
popa
adc
dec
jne
dec
out
push
xchg
sbb
adc
sbb
repz
push
inc
ret
xchg
jns
pop
jmp
push
sti
(bad)
push
add
and
mov
jl
mov
fwait
or
cmc
dec
rep
aam
cli
leave
(bad)
in
sub
inc
mov
mov
lods
and
xor
call
stos
mov
jge
shr
mov
adc
es
adc
stc
outs
vmovsd
mov
pop
test
xor
xchg
test
dec
sar
xchg
dec
call
inc
or
jge
add
cmp
ret
and
loope
mov
popa
adc
push
call
inc
pop
fidivr
sub
das
adc
mov
jl
pop
sub
and
sar
push
fcomp
aam
pop
invd
mov
push
xchg
sbb
enter
push
test
jecxz
lahf
fucomp
xchg
cmp
sbb
push
xchg
bnd
imul
adc
cmp
pop
and
cld
and
inc
xchg
adc
mov
pushf
rol
xchg
mov
es
outs
push
pop
fcomp
imul
and
stc
and
add
stc
pusha
and
retf
add
inc
xchg
xchg
jnp
fwait
shr
sbb
or
ds
bswap
sbb
cmp
cmp
in
test
aam
mov
or
xchg
lods
cmc
mov
and
ret
adc
or
jmp
js
cmc
inc
cmp
sub
cmp
imul
adc
adc
out
call
jmp
inc
out
add
ja
dec
inc
test
lods
pop
sub
sub
or
test
mov
pop
(bad)
(bad)
mov
add
jbe
out
popa
lods
test
sar
mov
mov
add
inc
xchg
sbb
cmp
jne
mov
aaa
sub
jmp
push
pop
cmp
and
push
pop
or
movs
inc
sbb
push
ins
adc
add
mov
push
stc
jl
inc
or
rcr
data16
adc
push
in
pop
xor
adc
test
sub
xchg
hlt
xor
or
pop
dec
out
sbb
sbb
mov
inc
cwde
and
adc
fisubr
dec
fld
xor
inc
inc
add
inc
jno
rol
add
inc
and
lea
and
dec
clc
and
xlat
test
rol
add
sbb
cdq
sub
push
(bad)
sar
test
enter
repnz
mov
and
sbb
and
inc
cmps
push
push
in
xchg
retf
xor
mov
add
call
(bad)
repz
loop
push
mov
inc
mov
shl
jbe
add
not
push
xor
inc
jbe
loopne
jge
sbb
shl
call
shl
jg
(bad)
or
or
push
sub
lea
dec
fsub
xchg
push
out
add
inc
add
push
mov
test
scas
imul
dec
push
ins
ja
mov
jp
ret
shl
and
mov
bound
push
test
cmc
push
xchg
mov
push
adc
aas
enter
add
cmp
cmp
pushf
inc
add
test
jmp
mov
inc
and
and
push
dec
cs
jle
enter
pop
test
sub
pop
(bad)
mul
xchg
and
pop
fimul
cdq
inc
sbb
jmp
retf
fmul
adc
dec
adc
xor
jge
(bad)
lock
ror
and
enter
pop
cmps
cwde
nop
and
jecxz
cmps
cld
movs
xchg
js
dec
cmp
test
enter
pop
or
mov
daa
jle
daa
je
aaa
mov
gs
icebp
call
in
lock
jo
popa
xor
loopne
ret
pusha
mov
xor
shr
cmp
shl
jmp
push
mov
in
(bad)
lock
push
sbb
(bad)
pop
xor
test
fld
and
pop
mov
mov
xor
push
jo
pop
pop
cdq
jmp
(bad)
data16
push
adc
cmp
push
and
mov
dec
sbb
or
mov
gs
(bad)
mul
push
xchg
or
std
fcomi
dec
fs
or
mov
retf
pushf
mov
xor
mov
(bad)
adc
or
pop
mov
cmp
sub
push
and
and
or
clc
adc
fchs
jmp
loope
add
jmp
inc
or
or
mov
ds
lahf
div
or
(bad)
clc
or
xchg
adc
out
cmp
xchg
push
shl
sbb
pop
mov
pop
and
or
sar
sub
adc
inc
mov
push
sbb
retf
mov
or
repz
popf
test
mov
pop
sti
fdiv
outs
inc
xor
repnz
test
mov
int3
xor
sahf
xchg
nop
cmp
mov
inc
pop
addr16
or
inc
and
or
jmp
loop
or
push
mov
inc
lods
test
movs
jmp
push
xor
test
or
test
push
mov
ds
test
or
shl
inc
test
mov
inc
mov
inc
mov
push
in
call
(bad)
in
fcmovne
inc
inc
call
push
ret
sub
div
adc
xor
call
fcomp
cdq
push
leave
pop
jp
scas
adc
inc
inc
cwde
aas
mov
bound
pop
aam
xchg
inc
mov
das
stos
sbb
mov
push
sub
or
sub
fs
mov
in
cmp
inc
or
rcl
or
pop
and
gs
and
mov
es
lds
xchg
(bad)
aam
call
mov
and
aad
lock
sbb
mov
cwde
in
mov
enter
dec
(bad)
aad
popa
enter
(bad)
jmp
clc
jg
mov
hlt
xor
or
or
aad
pop
stos
dec
lds
or
repnz
cmp
sub
cmc
or
cdq
fmulp
or
jns
sub
call
or
mov
inc
push
inc
jmp
fsub
cmp
or
test
nop
stc
test
inc
and
sbb
sbb
mov
int3
mov
cld
add
je
add
mov
jmp
mov
into
loopne
xchg
les
dec
leave
rep
nop
add
jne
cdq
and
push
mov
pushf
sbb
jne
push
in
adc
sbb
loope
push
or
jl
sbb
nop
or
lock
xchg
inc
mov
and
sub
and
cwde
xor
rcr
add
cmp
cmc
and
mov
add
add
and
or
jg
xchg
hlt
dec
bound
or
arpl
mov
call
aaa
or
and
test
push
movs
pop
and
pop
mov
xchg
lahf
stos
jge
add
pusha
xor
add
dec
icebp
xchg
int
repnz
outs
xchg
inc
mov
sbb
push
(bad)
sub
dec
inc
loope
cmp
call
jo
lahf
into
fbstp
cmp
loopne
je
jae
pop
test
or
jo
daa
xchg
xor
test
(bad)
fldcw
jle
out
mov
in
cmps
mov
je
xor
adc
popf
sub
pop
mov
sbb
test
jle
into
push
hlt
shr
loope
sbb
lea
add
adc
mov
lods
aas
(bad)
sar
mov
dec
rol
ds
xor
bound
mov
mov
push
les
push
mov
sbb
cmps
dec
clc
inc
add
cdq
cmps
jge
jno
cs
popa
(bad)
fdivr
dec
jne
or
icebp
(bad)
frstor
adc
jl
pop
xor
and
jp
pop
or
pop
enter
xor
fcom
cmp
movs
inc
mov
mov
je
sbb
push
sbb
test
lods
xor
push
push
push
add
or
cmp
retf
push
xchg
adc
ins
retf
cmp
push
inc
cmp
jecxz
out
cmp
call
or
into
xor
ror
cmp
mov
daa
clc
jbe
lea
rcl
mov
and
mov
stos
je
in
gs
icebp
adc
jmp
dec
add
add
mov
xlat
rcl
push
jmp
push
popa
add
push
cmp
mov
or
mul
push
popf
retf
sub
stc
les
jae
pop
leave
jmp
mov
loopne
cld
jno
lock
pop
seta
jmp
loop
sbb
and
push
cmp
and
push
adc
fnsave
mov
imul
fild
lods
xor
(bad)
sbb
and
xchg
dec
mov
dec
movs
jae
push
cmps
push
movs
fucomp
jp
in
nop
mov
mov
dec
enter
pop
adc
fs
cmp
(bad)
call
mov
lods
pusha
dec
(bad)
repz
and
xor
sub
call
cwde
call
popa
(bad)
push
(bad)
xchg
enter
lock
or
(bad)
lods
xchg
mov
(bad)
jle
leave
jae
adc
lahf
fsubr
push
jp
xchg
sub
jge
shr
jns
jb
fnstcw
ret
shr
pop
in
inc
cli
into
sub
icebp
mov
push
mov
mov
(bad)
dec
ror
iret
xchg
(bad)
repnz
inc
xchg
cld
pop
inc
scas
call
sbb
mov
mov
fidivr
nop
sahf
mov
jo
sbb
adc
hlt
jmp
push
sti
std
mov
push
push
adc
mov
or
repz
and
sbb
ss
push
dec
and
inc
ret
pushf
adc
inc
retf
push
loopne
mov
fisub
jecxz
mov
das
pop
hlt
test
sub
cmp
xchg
arpl
fst
push
js
shr
rol
add
mov
and
push
push
mov
inc
add
push
(bad)
out
pushf
jb
dec
sbb
or
rcl
pop
(bad)
(bad)
nop
aaa
add
div
popa
xor
cmp
dec
sub
mov
inc
or
out
jle
or
pop
sti
ins
xor
adc
mov
push
inc
and
and
inc
mov
cmp
push
mov
cwde
inc
cli
pop
dec
mov
add
mov
in
cmp
nop
xor
jmp
cmp
mov
out
jb
(bad)
mov
dec
sub
(bad)
mov
jne
jl
add
rol
shl
in
inc
test
std
sub
loop
mov
ret
xor
cmp
pop
adc
ss
xchg
xor
push
lods
push
test
retf
mov
dec
imul
xor
pop
dec
cmp
into
and
outs
call
out
push
cmp
mov
(bad)
dec
cmp
xchg
push
enter
xor
sub
das
jne
es
loopne
xchg
add
in
jae
xor
stos
lea
or
in
xchg
rcl
and
pop
and
mov
or
cmp
retf
jge
scas
adc
adc
and
or
mov
or
xchg
adc
or
jo
push
cmp
push
add
push
cld
push
aam
or
jle
push
sub
or
jge
inc
cmp
popa
jl
add
or
mov
dec
add
inc
sub
add
jmp
cmp
jl
call
or
std
call
jmp
cmp
outs
je
sbb
ins
pop
out
pop
dec
push
add
jmp
xor
or
jecxz
dec
jne
push
mov
pop
cmp
cmp
mov
jp
jg
sub
mov
inc
xchg
jbe
mov
lods
or
pop
scas
aas
dec
(bad)
adc
and
mov
hlt
cli
loop
and
and
repnz
xchg
daa
bound
mov
jl
pusha
sbb
stos
and
aaa
inc
inc
pop
jp
movs
dec
ret
mov
mov
pop
cmp
sub
jmp
cwde
xchg
into
movs
jno
add
mov
je
and
mov
dec
in
mov
cmp
mov
and
es
and
call
mov
pop
pop
mov
inc
jg
and
cmp
shr
push
xor
inc
mov
pop
(bad)
out
jg
push
dec
repz
pop
or
or
pop
into
xor
loop
sbb
pusha
push
test
add
add
xor
xchg
xor
ror
imul
and
imul
jg
inc
cmp
jge
js
maskmovq
imul
xlat
les
cmp
jne
lea
call
sub
or
data16
add
mov
mov
ja
xchg
or
xchg
or
adc
les
out
and
xor
xor
xor
jo
jle
shl
jle
xchg
cmp
(bad)
int3
ror
or
pop
mov
inc
shl
arpl
jmp
aas
movs
push
push
add
in
(bad)
popf
fsubr
inc
sub
push
inc
jmp
clc
mov
div
add
dec
mov
les
js
add
mov
mov
mov
cld
int
leave
cmp
cmp
or
test
add
mov
mov
fs
mov
jl
dec
cld
or
cmp
jecxz
inc
pushf
leave
add
dec
lds
add
mov
adc
in
push
add
pop
pop
push
sub
cmp
mov
xor
mov
unpcklps
or
loop
add
inc
cld
push
xor
adc
add
and
cld
(bad)
push
push
dec
leave
sbb
lea
popf
or
ficomp
cmps
movs
movs
std
inc
fwait
sub
inc
push
retf
or
ret
lods
rol
(bad)
cmp
je
jae
arpl
inc
mov
inc
(bad)
pop
dec
pusha
cwde
in
dec
adc
push
and
cwd
aad
push
push
cmc
outs
push
mov
daa
xchg
pop
fistp
imul
je
add
pcmpeqw
jb
test
jmp
mov
data16
into
shl
inc
loop
imul
pop
cmp
jae
mov
push
dec
jo
and
ret
jnp
push
sub
mov
ins
lock
xchg
jle
xchg
aam
ror
xchg
push
jp
mov
add
sbb
aaa
or
mov
popf
in
sub
fwait
mov
cmc
push
push
jp
xor
xor
daa
(bad)
sbb
fs
fstp
aam
loope
div
add
addr16
ss
push
js
add
idiv
or
test
xor
cmp
and
(bad)
xchg
movs
sbb
out
xor
mov
xlat
mov
xchg
(bad)
xchg
push
inc
retf
jl
dec
adc
inc
sti
cmps
add
outs
pop
inc
not
and
adc
jl
or
bound
lods
mov
scas
pop
pop
pop
stc
js
lods
retf
push
jbe
jmp
aas
sub
inc
enter
push
mov
mov
xor
rcl
xor
xor
mov
or
cmp
cs
pop
pop
inc
retf
call
jne
ret
fwait
push
jno
out
dec
xchg
call
sbb
mov
je
sub
add
mov
or
jmp
hlt
(bad)
scas
sti
js
mov
cmp
ror
push
les
xchg
mov
dec
mov
sbb
sbb
mov
fucomp
and
ret
and
pop
test
adc
cdq
data16
mov
dec
cmc
xor
mov
mov
xchg
adc
sub
dec
out
cmc
and
dec
mov
jl
dec
xchg
dec
inc
icebp
sub
pop
retf
mov
out
leave
jmp
push
inc
dec
in
loopne
push
jle
inc
push
mov
push
mov
ds
cmp
leave
fidivr
pop
retf
rol
dec
pushf
mov
test
aam
push
mov
xor
push
adc
mov
mov
jmp
adc
je
mov
mov
mov
rcl
cmp
je
les
sar
mov
sar
jbe
sub
in
ja
fisttp
rol
loope
mov
dec
mov
cmps
add
adc
test
cmp
int
(bad)
shl
bound
and
cmp
sub
add
jmp
add
inc
mov
mov
and
loopne
jle
stc
add
cmc
out
cs
adc
call
push
sti
test
int3
mov
dec
test
cmp
fcmovbe
mov
test
ffreep
xor
jl
mov
xchg
xor
mov
int
popf
repnz
dec
popf
rsqrtps
dec
pushf
push
push
call
add
adc
pop
pop
call
rol
pop
mov
push
test
pop
sbb
and
pop
sti
xchg
mov
lea
pop
(bad)
out
xor
test
xchg
add
iret
(bad)
into
or
(bad)
int3
(bad)
das
push
sar
std
jnp
add
xchg
int
int
outs
aaa
cmp
lea
mov
push
and
mov
push
mov
xor
add
in
dec
jmp
in
movs
jae
daa
neg
stos
cmc
pop
outs
mov
push
jge
int3
mov
and
jge
sub
mov
ror
mov
mov
jle
inc
enter
sbb
fist
std
gs
call
inc
add
sub
lock
cli
popa
jae
sub
fcomp
and
pop
inc
aas
xor
push
std
and
outs
cld
lods
xchg
mov
je
cmp
shl
jb
(bad)
(bad)
jno
mov
cmp
jb
mov
lea
or
repz
outs
and
sbb
fisttp
mov
cmp
into
adc
inc
mov
fiadd
(bad)
push
aad
gs
fcomp
and
xchg
inc
or
push
lea
xchg
popa
push
call
clc
(bad)
push
push
fxch
sub
std
jp
add
sub
cmc
test
call
xor
push
stos
inc
mov
mov
imul
ins
xor
cmc
ret
jmp
call
or
in
inc
cld
mov
jbe
daa
mov
call
mov
test
call
push
inc
mov
jns
lods
adc
adc
imul
sub
call
bound
adc
loopne
cld
xor
and
test
cmp
and
add
xchg
lods
lds
push
mov
cli
inc
pop
dec
jle
xchg
out
cwde
mov
mov
shr
add
mov
mov
(bad)
cwde
cmp
sbb
jb
push
cmp
cli
inc
outs
clc
sub
push
jle
push
pop
sbb
push
adc
push
xchg
jmp
jmp
cmp
jmp
inc
adc
hlt
push
push
mov
in
mov
jg
sahf
mov
cmp
pop
mov
dec
out
xor
mov
cmp
into
fimul
push
aas
push
pop
cdq
ror
push
xor
mov
push
xor
mov
test
xor
dec
jl
inc
adc
or
pop
mov
inc
push
shl
sub
mov
sbb
cmp
add
jbe
xchg
cli
dec
jo
add
lock
rcr
jg
je
cmp
sar
push
dec
mov
sub
push
in
jnp
cmp
ret
arpl
xor
scas
mov
sub
jmp
test
mov
je
js
and
test
or
mov
jmp
cmp
aaa
les
sbb
push
xor
push
pop
cmovg
mov
adc
jmp
mov
addr16
prefetchw
sbb
test
jg
push
sbb
sbb
out
cmc
or
xor
adc
push
inc
mov
push
mov
mov
mov
add
xor
and
jmp
pop
sub
xchg
xchg
jnp
xchg
js
leave
pop
xchg
xchg
dec
(bad)
jnp
fs
and
cld
sub
xor
sbb
cld
adc
xor
call
in
je
and
rol
int3
sub
push
inc
adc
jbe
push
into
adc
inc
inc
adc
mov
sbb
scas
(bad)
rcl
call
push
add
in
xchg
inc
dec
sbb
and
call
xchg
sub
imul
ret
pop
push
push
push
das
jns
dec
repz
push
mov
mov
sub
mov
les
pusha
dec
pop
leave
xchg
and
push
adc
rdmsr
test
cmp
jns
and
push
(bad)
sub
cmp
fadd
adc
mov
pop
adc
push
inc
in
and
adc
push
retf
adc
icebp
cdq
cmc
or
cmc
test
inc
cmc
mov
dec
cmc
cmp
ss
lods
es
cmc
mov
movs
cmp
gs
test
mov
cwde
xlat
sub
sub
sbb
dec
xchg
inc
lock
xchg
jo
and
lock
push
pop
xor
rol
aas
mov
mov
fs
loopne
xchg
xor
pop
mov
mov
cmp
push
push
cmp
or
adc
or
or
xchg
mov
dec
loop
pop
(bad)
push
push
out
jbe
lock
adc
cld
dec
leave
arpl
cmp
ds
xlat
(bad)
lods
pop
mov
in
adc
cmps
ss
xchg
cmp
fmul
rcl
test
xlat
mov
jg
xor
call
sti
jmp
rcr
int3
cmp
or
cs
rcr
popa
loopne
std
pushf
or
or
adc
inc
sbb
adc
push
sub
xchg
or
rcr
jmp
xchg
and
push
shr
pop
and
add
xor
dec
hlt
cmp
ds
xor
clc
mov
scas
es
dec
sub
movs
clc
leave
xchg
cld
int
sbb
xchg
jnp
fcom
mov
popa
lea
js
sub
push
out
je
bound
cmp
jg
add
cmpps
mov
push
add
xchg
shl
test
cdq
mov
aam
jl
and
or
sbb
mov
sub
push
enter
xchg
adc
mov
retf
call
rcl
adc
xchg
xor
mov
rcl
mov
jbe
push
hlt
xor
mov
jne
and
iret
dec
jb
ror
push
push
sub
gs
cmps
xor
pop
cmp
pop
jne
mov
hlt
ret
and
pop
jne
push
out
adc
sbb
vmread
lds
mov
pop
or
pop
das
movs
ins
repnz
sbb
clc
scas
push
test
test
pop
mov
cmp
inc
lea
push
jne
dec
(bad)
dec
lods
rcl
pop
sub
loope
pop
(bad)
(bad)
call
mov
sub
xchg
dec
fnsave
sub
push
mov
sub
xchg
dec
or
dec
mov
mov
loope
std
mov
inc
jne
je
loopne
adc
dec
inc
cmc
or
adc
sub
nop
pop
or
sbb
fst
sbb
sub
sbb
fcom
cmp
sbb
test
test
jl
popa
and
add
dec
and
and
xor
xor
adc
sub
dec
adc
inc
add
mov
jg
cdq
adc
push
aas
or
or
dec
leave
pop
jnp
nop
sar
adc
addr16
cmp
in
jns
popf
or
cmp
adc
adc
loope
not
adc
ret
jle
mov
xor
arpl
jb
xchg
outs
aaa
ds
cmp
ror
int
fmul
out
jge
inc
and
jg
call
jns
jbe
mov
push
adc
adc
retf
add
jmp
adc
mov
pop
imul
mov
ror
dec
xchg
or
mov
pop
lea
sbb
adc
popf
pop
push
xor
psubsb
scas
int3
sub
sbb
add
mov
inc
inc
and
xor
fninit
fstp
outs
loopne
cmp
adc
cs
cmp
(bad)
fsub
hlt
cmp
fbld
or
sub
dec
jo
aad
inc
mov
push
popa
jo
sbb
mov
mov
sub
mov
cs
add
enter
nop
adc
popa
test
mov
dec
ins
(bad)
iret
imul
loopne
or
je
pop
sbb
je
dec
cld
jl
nop
push
push
push
add
jmp
or
iret
adc
xor
je
enter
xor
jge
dec
sbb
mov
cs
xor
(bad)
in
push
and
rcl
cs
jmp
daa
aas
arpl
xchg
or
enter
sbb
and
inc
ror
and
push
nop
out
and
jno
test
mov
sub
add
(bad)
jmp
mov
jns
arpl
sbb
inc
pop
adc
in
pop
jecxz
sub
ret
adc
sbb
adc
test
adc
fldenv
mov
pop
adc
lods
lock
or
and
adc
imul
movs
sub
out
ret
adc
call
(bad)
mov
ds
xchg
jp
popf
xor
int3
bound
add
adc
(bad)
mov
jne
dec
lods
(bad)
es
mov
shl
xor
dec
pop
clc
jl
in
lds
inc
fcom
jecxz
stos
or
clc
jne
push
cmps
dec
pop
rol
test
inc
mov
movs
cmp
lods
or
cmp
lods
sbb
xchg
jmp
sti
sbb
and
les
mov
push
pushf
push
adc
pop
loopne
sbb
sbb
call
xchg
add
clc
push
mov
add
add
in
mov
jge
pusha
mov
call
pop
mov
push
sbb
and
mov
loopne
enter
push
mov
shl
pop
call
mov
in
loop
add
mov
popa
cli
sub
adc
mov
fild
push
in
mov
sbb
mov
ds
sbb
mov
fsubr
push
push
call
push
cmp
jne
ja
in
popa
jmp
push
jl
add
js
cmp
mov
cmps
mov
rcr
xchg
adc
mov
push
add
jge
mov
cwde
outs
rol
je
or
nop
in
int3
outs
fmul
sbb
ds
(bad)
retf
pop
inc
jmp
push
inc
and
jb
xor
cmp
mov
adc
and
lahf
pop
pop
and
sbb
repz
add
mov
or
or
push
adc
push
jmp
and
test
sbb
dec
and
add
dec
pusha
cmp
sub
dec
repnz
and
jns
fistp
xchg
mov
mov
jb
dec
or
int3
and
or
pushf
arpl
test
xor
and
sahf
xor
cdq
and
mov
push
and
push
retf
jmp
or
xor
js
push
dec
jmp
arpl
and
adc
ret
mov
stos
mov
(bad)
mov
pushf
push
and
and
adc
test
cmp
(bad)
sub
xlat
retf
or
mov
push
or
(bad)
sbb
dec
inc
adc
cmp
call
pop
mov
dec
fsubrp
push
lods
push
movs
movs
sbb
stc
pop
shl
mov
push
push
popf
(bad)
dec
add
inc
cli
and
inc
loop
push
and
call
xor
jl
push
inc
gs
mov
mov
or
dec
cmp
sub
inc
mov
sbb
stc
cmps
pop
rcl
psllw
clc
or
les
pop
cmp
aaa
push
je
shl
test
aam
adc
(bad)
in
cmp
mov
mov
call
loopne
push
push
movs
sti
enter
pop
and
sub
cmp
rol
push
mov
repz
cmp
pop
pop
xchg
dec
xor
sub
call
mov
shl
test
push
sti
cli
jge
sub
mov
hlt
sbb
clc
push
and
pop
jg
loope
cmp
add
cmp
inc
pop
loope
cmc
mov
push
inc
and
push
pop
adc
stos
mov
pop
in
shr
outs
and
push
push
inc
adc
or
jmp
and
inc
imul
pop
adc
and
and
adc
test
mov
test
adc
add
leave
cmp
je
sbb
sub
lea
lahf
fbld
or
adc
mov
jl
les
shl
and
or
adc
xor
into
loopne
add
dec
sub
test
mov
push
mov
std
int3
push
push
jo
pop
jne
and
sub
pop
mov
sbb
pop
clc
jge
les
enter
and
data16
fcom
dec
fmul
mov
adc
xor
jle
pusha
or
ja
aas
mov
retf
mov
inc
push
lea
adc
add
scas
xor
outs
push
pop
shr
mov
les
frstor
dec
and
jmp
fnstenv
mov
and
push
addr16
pushf
jbe
scas
out
push
les
fdivr
mov
scas
pop
mov
test
sbb
mov
mov
pop
mov
xchg
or
jnp
inc
mov
pop
mov
dec
fs
mov
or
jbe
fnstenv
cmp
jl
(bad)
xchg
sbb
inc
jmp
mov
aaa
push
jecxz
xor
jne
mov
or
add
leave
mov
movs
dec
pop
call
cmp
jge
jno
fimul
jne
push
adc
sar
and
or
push
push
inc
(bad)
adc
mov
ins
(bad)
xor
add
mov
out
push
inc
jmp
and
in
and
or
out
sub
icebp
inc
push
repnz
push
repz
test
push
pop
clc
jno
stc
inc
add
add
sti
push
xor
lea
cmp
rol
jp
push
lods
pop
adc
repnz
cmp
add
add
cmp
daa
loop
inc
cmp
add
fst
push
add
pop
(bad)
and
pop
daa
div
shl
sbb
fs
in
xor
in
sahf
dec
lock
mov
je
fidiv
dec
inc
cmps
ror
test
push
dec
int3
push
mov
add
inc
je
mov
adc
xlat
and
mov
lods
jl
xor
pop
sbb
push
and
stos
aaa
scas
or
push
out
or
pop
xchg
cmp
fs
call
in
push
stos
clc
or
call
add
cmp
je
pusha
cmp
not
jns
sbb
cmp
lock
push
adc
loope
loope
inc
adc
xchg
jbe
shl
inc
mov
shl
xchg
mov
inc
inc
ins
gs
mov
cmp
push
mov
and
sbb
lock
mov
jbe
out
push
pop
and
ret
test
push
in
xchg
inc
shl
rcl
hlt
inc
push
jno
sbb
mov
or
neg
xchg
outs
js
and
repz
dec
mov
sub
sti
mov
sbb
sbb
or
pop
jle
push
push
call
inc
jge
pop
enter
jl
xchg
call
test
adc
mov
pop
push
xor
movs
sub
dec
sbb
sub
jnp
xor
imul
mov
ins
add
xor
in
xchg
sbb
mov
sbb
ret
add
shl
sub
dec
in
dec
sub
test
jae
movs
ja
xchg
sbb
out
add
xor
mov
push
push
pop
adc
push
bnd
and
xlat
loop
rcr
sbb
push
push
call
mov
pop
sub
in
outs
sub
jg
or
loope
test
pop
imul
fs
jmp
fst
loopne
lea
push
clc
into
dec
lahf
push
call
sbb
rcr
mov
clc
jmp
cmps
mov
add
cld
xor
ret
loop
push
sub
jno
adc
or
std
inc
cmp
dec
je
popf
push
or
out
or
xchg
imul
mov
rol
sbb
add
mov
mov
sar
loopne
cmp
mov
adc
jne
push
cmp
jge
out
fsub
or
nop
or
cmp
jne
clc
(bad)
neg
push
sbb
(bad)
and
scas
(bad)
mov
or
popa
mov
and
push
dec
add
jmp
je
adc
cmp
jp
xchg
sbb
cld
test
shl
or
and
jne
jmp
outs
inc
pop
pop
cmp
add
test
jl
xlat
(bad)
es
pop
mov
scas
mov
cmp
(bad)
cmp
pop
and
xchg
ret
in
ror
jmp
outs
hlt
or
call
xchg
sub
add
fwait
outs
mov
cmp
jge
enter
inc
jg
out
out
pusha
adc
imul
xchg
mov
sub
mov
jmp
pop
int3
and
sbb
nop
shl
xor
lea
cmps
mov
pop
xor
push
inc
popa
call
ret
or
inc
jmp
neg
fs
nop
xchg
xor
cld
je
loope
inc
jb
jnp
push
cwde
mov
push
test
and
inc
mov
jb
outs
loop
xor
or
add
sbb
fcom
lods
sbb
aaa
jle
std
pop
pop
push
popf
jge
add
mov
stos
fwait
or
inc
jge
dec
std
test
xchg
or
rol
or
sub
pop
sbb
xor
cmp
and
sub
cmp
adc
out
add
mov
nop
pop
push
and
inc
mov
loopne
push
gs
inc
push
xor
icebp
iret
xchg
or
push
(bad)
out
mov
adc
cmc
lods
push
sbb
pushf
mov
stos
ror
or
mov
or
std
out
and
gs
mov
mov
out
push
or
mov
rcl
inc
ja
popa
inc
cmp
add
dec
lock
cmps
stos
push
pop
cmp
(bad)
popa
inc
repz
jle
mov
inc
pop
jbe
mov
or
or
jae
jns
push
cmp
jb
jmp
call
mov
adc
mov
xchg
inc
cwde
push
and
test
push
pop
inc
add
push
xor
mov
mov
adc
push
stos
cmp
cwde
jmp
iret
movs
jmp
movzx
call
scas
sahf
into
and
inc
les
mov
shl
push
xor
xor
pop
aad
adc
enter
add
pop
mov
pop
aam
not
nop
push
and
mov
xor
scas
ins
xchg
mov
mul
mov
sub
pop
stos
push
xor
adc
fwait
add
nop
ja
jb
data16
(bad)
dec
mov
mov
add
sbb
iret
inc
or
pop
and
in
pop
push
and
aam
movs
add
iret
xchg
sbb
lds
shr
out
add
mov
inc
mov
ror
in
aas
mov
jns
adc
loop
add
jne
repz
lock
cmp
mov
pop
fisttp
push
cmp
sbb
sub
div
push
dec
or
jecxz
push
test
add
and
aam
ror
xchg
sub
pop
cmp
pop
xchg
shl
std
push
dec
jmp
out
mov
lds
jge
mov
sbb
loopne
and
inc
mov
xchg
movups
mov
push
rcl
rcr
push
xor
sbb
add
icebp
sub
add
into
jo
jnp
je
push
sub
add
dec
mov
pop
repnz
sbb
or
stc
jae
std
add
mov
add
(bad)
jecxz
test
add
pop
mov
pop
pop
xchg
cmp
push
enter
sar
push
mov
popa
xor
arpl
aaa
mov
stos
or
js
mov
popf
push
mov
jns
cmc
mov
jecxz
cmp
jl
ins
mov
loopne
xor
lds
ret
shl
jns
push
add
test
retf
sbb
fldln2
bound
mov
aad
jb
js
push
inc
outs
lods
out
iret
lea
inc
xchg
aas
stos
repz
inc
push
js
xlat
xor
das
in
pop
add
jl
movs
movs
ror
pusha
xor
adc
not
stc
add
jo
out
dec
mov
std
pop
int
fcom
in
inc
jne
inc
jge
dec
cmp
hlt
add
dec
test
jae
daa
mov
pop
test
add
jl
shl
mov
mov
jmp
inc
inc
rdtsc
test
xor
jbe
retf
add
mov
jae
movs
jl
loopne
bound
sbb
add
call
xchg
mov
shr
cmp
mov
mov
pusha
loop
sbb
or
and
pusha
push
popa
stos
jae
mov
fidiv
and
and
or
or
dec
push
test
arpl
push
or
outs
ret
pop
add
inc
inc
xor
mov
cli
pop
movs
das
and
lea
mov
mov
inc
adc
cmp
jne
mov
xor
inc
push
cmp
xlat
test
std
dec
xchg
mov
mov
mov
jb
div
in
cmp
pop
cmp
push
in
mov
add
jle
ja
cwde
sbb
xor
es
xor
xor
jne
pop
rcl
pop
(bad)
pop
xchg
xchg
rol
push
mov
push
icebp
sub
movhps
repz
in
pop
ret
push
fs
push
adc
sbb
mov
xchg
mov
cld
pusha
cmp
je
adc
std
mov
jge
rol
jmp
adc
mov
shl
cmp
scas
stc
xor
leave
mov
ja
mov
(bad)
cli
cwde
push
mov
mov
push
pop
cmp
or
or
sahf
stos
mov
add
in
fnop
dec
(bad)
(bad)
loop
cmp
sbb
js
xor
adc
aam
outs
dec
into
or
push
cld
sbb
sub
xchg
scas
xchg
push
or
test
push
loope
aad
stos
or
lods
add
stos
sbb
pop
ja
mov
daa
ret
rcr
nop
out
call
pusha
pop
aad
inc
ret
mov
mov
ja
repz
loope
adc
sub
dec
add
fdiv
inc
jo
dec
sbb
test
sub
lahf
sbb
pop
mov
xor
stos
xchg
popa
in
or
fild
mov
ror
call
xor
loopne
out
jp
stos
or
sbb
loopne
dec
jne
std
lods
sbb
enter
daa
inc
pop
clc
adc
push
adc
jb
mov
mov
(bad)
jae
push
inc
jl
mov
sbb
ror
fnstenv
push
ror
shr
push
xchg
xchg
es
bound
mov
(bad)
mov
out
ret
jno
scas
sub
adc
adc
ret
ud2
je
push
push
enter
call
dec
lods
and
push
xchg
push
daa
shr
sar
cdq
add
jmp
sbb
shl
push
popf
nop
cmps
add
jge
lods
cmp
inc
je
mov
or
inc
stos
fisub
hlt
ret
mov
repnz
jbe
mov
adc
inc
inc
jl
shl
pop
push
mov
cmp
xchg
adc
mov
add
xchg
pop
call
loopne
test
xor
sub
dec
inc
mov
mov
adc
cs
mov
jle
pop
inc
fdiv
mov
xlat
lock
jae
sub
in
sbb
shl
mov
xchg
xchg
imul
xchg
in
sub
inc
xchg
jbe
es
fs
sbb
pop
jbe
push
cmp
sar
sub
cmp
add
push
pop
push
mov
dec
add
or
sub
fadd
movs
sbb
std
outs
jg
(bad)
push
shr
shl
out
xor
stc
loopne
stc
nop
mov
xor
enter
(bad)
lea
loope
pop
ins
jmp
pop
cmp
or
lock
push
inc
push
lea
jmp
mov
cmp
cmp
jl
dec
cld
enter
mov
(bad)
neg
in
in
adc
sbb
mov
jns
dec
(bad)
icebp
mov
out
arpl
adc
or
sahf
mov
fcomi
and
(bad)
jmp
loopne
call
cmps
test
adc
pop
mov
jmp
adc
adc
cld
adc
in
lods
xchg
jnp
mul
fiadd
push
nop
push
pop
pop
(bad)
pusha
jp
ret
retf
movs
stc
das
add
mov
and
inc
movs
js
add
push
shr
into
xchg
push
sub
pop
jnp
fldenv
retf
jle
pop
ret
sbb
adc
mov
daa
int3
jle
(bad)
in
jmp
scas
xchg
test
xchg
add
pop
stc
dec
jl
add
outs
cmp
call
fist
inc
imul
add
dec
sbb
and
fxch
push
cdq
lds
mov
(bad)
fsubr
adc
or
push
daa
pop
mov
es
sub
in
sahf
push
in
mov
push
xchg
loopne
dec
ins
jle
add
test
outs
mov
add
jg
test
add
popa
mov
imul
pop
and
mov
add
sub
xchg
push
cdq
mov
in
mov
xchg
adc
add
inc
dec
jg
inc
into
lods
xor
sbb
xchg
jno
xlat
ja
or
mov
or
jl
(bad)
adc
and
gs
or
jecxz
pop
inc
ret
xchg
or
pop
mov
aam
ret
push
(bad)
sub
adc
sbb
popa
mov
ja
push
push
stc
int
add
xchg
lea
cmp
and
inc
adc
scas
xchg
outs
inc
ret
mov
cmp
push
sbb
fbstp
push
mov
and
cmp
xchg
push
add
xor
(bad)
stc
mov
into
sub
cli
loopne
sbb
add
dec
adc
push
pop
push
pop
sti
add
(bad)
or
fisub
jne
push
and
pushf
bound
pop
jno
dec
mov
je
xor
cmp
rol
je
push
call
and
js
nop
or
xchg
push
je
jae
sbb
cmp
rol
fs
pop
test
cmp
stc
sti
std
pop
popa
(bad)
lods
and
test
jge
xchg
lock
mov
daa
push
ins
loopne
ds
or
or
data16
or
jmp
pop
push
jne
jo
add
and
push
and
jne
ss
xchg
fs
dec
push
mov
lea
pop
pop
dec
adc
adc
add
and
movs
cmp
add
cld
mov
jmp
(bad)
add
out
hlt
mov
shr
daa
and
sub
push
stc
jmp
sbb
push
mov
lock
adc
pop
inc
iret
cdq
add
jmp
adc
cld
jne
xchg
jmp
mov
int3
ret
sub
add
mov
xor
fnsave
call
dec
in
loope
mov
je
xor
inc
push
sbb
popa
repnz
sbb
adc
pop
sub
mov
stos
fwait
xlat
bound
sbb
xor
aam
or
push
je
and
xlat
jmp
mov
sub
shr
add
push
add
(bad)
adc
xchg
jmp
push
test
aaa
or
jmp
add
sti
add
sub
je
push
repz
mov
sar
pop
in
sbb
ror
adc
mov
movs
bound
inc
or
sub
dec
mov
add
mov
cmp
cmp
rcl
xchg
inc
inc
jbe
jmp
dec
daa
xchg
aam
add
push
xor
scas
leave
ss
int3
jbe
add
cmp
je
pop
inc
push
xchg
add
xchg
mov
inc
push
ret
test
xor
sbb
adc
push
jecxz
mov
sbb
mov
out
and
pop
ja
mov
adc
push
inc
xchg
imul
sub
lahf
adc
add
adc
mov
int
cli
fs
jmp
fnsave
les
scas
test
mov
jmp
mov
loope
mov
movs
cmp
into
lods
nop
(bad)
xchg
jbe
jmp
lods
or
push
je
jne
int3
mov
and
inc
outs
js
adc
lods
aaa
mov
ror
daa
sbb
adc
test
dec
std
mov
push
pop
add
and
pusha
pop
adc
push
mov
stc
adc
push
(bad)
retf
fwait
and
loope
dec
mov
lea
sbb
les
sub
call
ds
mov
les
mov
cs
imul
push
fcmovnbe
adc
fisub
ins
push
retf
int3
ja
pop
loope
(bad)
mov
es
test
enter
nop
xor
movs
or
cmp
jne
push
popf
pop
inc
pusha
pop
lock
inc
pop
or
xor
cmp
shl
loopne
jbe
xchg
shl
jns
dec
dec
mov
push
test
ffree
and
(bad)
jb
lea
in
cmp
jge
or
or
add
mov
adc
sar
out
nop
gs
test
iret
xchg
mov
sub
add
in
xchg
jmp
addr16
int
push
push
mov
and
sub
fist
push
mov
arpl
cs
aam
adc
jne
cmp
push
jbe
cmp
inc
(bad)
mov
jne
int
sub
pop
clc
push
push
scas
push
das
arpl
mov
and
je
popa
mov
shl
cmp
cmp
mov
call
scas
mov
sbb
call
frstor
scas
mov
sub
outs
out
int
stos
inc
(bad)
cwde
mov
cmp
push
cmps
push
mov
and
cmp
and
inc
or
mov
pop
push
mov
out
bound
push
je
pop
ret
sub
adc
(bad)
push
mov
mov
jne
pop
pop
jle
jbe
(bad)
sahf
sbb
xor
pop
inc
lahf
les
loopne
sub
ror
inc
xor
and
or
inc
or
mov
out
push
sub
adc
or
call
xor
mov
icebp
mov
stos
mov
lock
adc
ret
and
xchg
les
imul
push
imul
push
call
inc
js
pop
lods
wrmsr
retf
pushf
or
inc
add
or
or
add
pop
loope
pop
inc
test
imul
pop
(bad)
call
fdiv
or
(bad)
jmp
cmp
out
pop
or
xchg
mov
and
adc
xchg
xchg
aam
mov
mov
icebp
rcl
test
mov
call
cmp
lods
mov
xchg
cmp
cmp
leave
sbb
lock
pop
cmp
add
(bad)
(bad)
retf
retf
mov
sub
pop
add
add
push
sub
inc
fcomp
jmp
and
aaa
jp
cmc
inc
(bad)
loopne
adc
test
cmp
xchg
cmps
mov
popf
lahf
scas
push
repz
xchg
pushf
cmp
mov
mov
loop
push
(bad)
retf
or
ficom
xor
dec
push
test
inc
test
or
sub
mov
mov
cmp
sub
inc
stos
and
fadd
mov
xchg
mov
pop
je
pop
mov
and
adc
cdq
pop
shrd
add
sahf
movs
add
shl
retf
ss
(bad)
and
sbb
aad
(bad)
cli
repnz
or
xor
fimul
(bad)
pop
pcmpgtw
adc
test
and
inc
mov
dec
sbb
lea
mov
mov
pop
sub
pushf
adc
ret
mov
inc
nop
loop
adc
pushf
xor
add
and
push
add
adc
mov
cmc
jecxz
inc
pop
repz
es
xchg
iret
or
fst
rcl
add
xor
xor
cdq
sbb
stc
inc
cmp
ret
xchg
jmp
lods
inc
not
dec
cmps
mov
fwait
pop
scas
test
(bad)
inc
cmp
jne
adc
dec
inc
call
enter
les
or
fnstcw
add
call
sbb
das
cmp
fmul
(bad)
cmps
cli
retf
mov
push
jle
leave
pop
push
imul
push
push
xor
std
popa
jg
enter
sub
imul
sub
push
add
pop
add
jb
or
jp
(bad)
mov
fs
das
sub
retf
and
mov
dec
sbb
(bad)
xchg
inc
lahf
adc
jmp
shl
or
jns
push
test
push
scas
fnstcw
mov
aas
in
xor
sbb
cmp
stc
ins
test
sbb
aas
pusha
inc
and
std
popa
lods
mov
mov
je
sub
sub
xchg
inc
fisub
bound
push
sub
mov
fwait
push
pop
inc
xchg
ds
jg
mov
ret
sbb
push
push
push
test
leave
cwde
or
mov
data16
pop
adc
mov
xor
rol
xchg
xor
call
std
xor
lods
scas
jns
add
movs
pop
jl
outs
dec
daa
inc
loopne
jnp
shl
loope
xchg
sbb
enter
(bad)
les
hlt
aam
dec
call
cmp
pop
mov
hlt
mov
mov
shl
rcl
push
pushaw
xchg
mov
add
or
dec
cmp
imul
mov
cmps
dec
xchg
cld
test
test
test
mov
inc
in
rcr
stos
adc
hlt
mov
repz
xchg
popf
push
test
sbb
push
xchg
and
fld
sub
dec
sub
call
adc
sbb
dec
push
push
lods
xchg
dec
push
sub
and
in
cli
jmp
mov
movs
or
or
cmp
lds
test
xor
adc
ins
aas
pop
test
push
mov
loopne
cmp
cwde
or
cmps
out
pop
xor
fild
cmp
xor
pop
mov
rcr
push
lock
pop
loop
mov
call
pop
sbb
mov
jg
mov
pusha
stc
pusha
sbb
adc
mov
bswap
nop
push
jge
add
jg
sub
mov
loope
cmp
sbb
jbe
mov
jp
xchg
mov
mov
dec
mov
push
add
jbe
add
ja
cmp
icebp
pushf
mov
jo
add
jmp
add
sbb
movs
add
cmp
dec
mov
sbb
xor
add
sahf
cmp
inc
add
xor
lds
test
add
fbld
add
loope
retf
or
or
dec
pop
pop
clc
shr
cmps
or
inc
inc
popa
mov
jmp
(bad)
stc
and
or
xor
or
xchg
lock
cmp
enter
sub
in
mov
in
fdiv
icebp
push
sub
cmp
push
mov
mov
inc
stos
or
adc
shl
dec
xor
iret
sbb
add
jle
xchg
add
enter
inc
pop
int
mov
daa
mov
mov
sar
pop
aam
shl
call
pop
and
mov
xchg
in
and
test
sbb
icebp
aam
xchg
js
cmp
call
mov
or
add
fsubr
test
call
imul
enter
nop
sbb
xchg
xchg
rol
add
cdq
out
mov
xchg
cs
(bad)
lock
add
enter
sub
in
adc
mov
jno
cmc
cld
jne
add
cmp
cmp
mov
int
xchg
mov
push
mov
pop
cmp
mov
leave
sub
inc
sahf
cmp
test
cmp
imul
push
mov
lea
shr
es
or
jo
dec
xchg
pop
test
sub
mov
cmp
daa
inc
cmp
lock
jge
xchg
ins
js
jmp
jbe
fldcw
jne
into
sub
mov
stc
sub
lods
outs
je
out
mov
aas
mov
pop
and
push
pop
stc
loope
push
rol
mov
movs
jo
icebp
jno
dec
or
pop
and
cmp
test
sbb
neg
sub
(bad)
hlt
pop
push
cmp
mov
mov
inc
mov
hlt
mov
aam
icebp
std
xchg
sbb
outs
mov
xchg
(bad)
aaa
push
bound
and
adc
xchg
hlt
jle
mov
inc
xor
es
xor
or
or
cmp
stc
xor
jg
retf
or
add
push
mov
xlat
mov
arpl
and
nop
mov
jmp
cmp
mov
aas
pop
inc
xchg
clc
test
sub
dec
(bad)
dec
call
pop
enter
imul
push
mov
pushf
daa
pop
xlat
inc
in
cld
sbb
call
sbb
and
cmp
sub
sub
or
and
inc
ret
retf
cs
pop
xchg
dec
shr
data16
fadd
ss
xchg
or
out
fs
xor
fwait
into
xchg
and
or
dec
mov
inc
or
and
nop
and
cmp
(bad)
lock
das
jb
mov
sti
push
inc
mul
sbb
jne
or
in
sub
inc
cmp
bound
mov
xchg
ds
mov
cmp
inc
and
lods
inc
call
imul
(bad)
lock
sar
adc
jo
test
test
loopne
or
call
stc
adc
mul
jle
mov
dec
cdq
iret
adc
repz
adc
inc
add
xor
ret
hlt
fld
mov
fnstsw
pop
sahf
mov
dec
mov
bound
xchg
stos
mov
or
push
pop
cmp
jb
sbb
shl
lods
xchg
push
sbb
or
popa
mov
pusha
ds
mov
adc
push
and
add
cmp
xor
dec
or
shr
sub
popf
sti
xchg
mov
rcr
ror
lds
push
sahf
test
inc
adc
sti
xor
dec
inc
nop
movs
mov
push
cdq
add
dec
sub
clc
fisub
push
dec
pushf
xchg
xchg
mov
test
fstp
sub
or
ret
jbe
jmp
sub
mov
and
push
jle
bound
je
mov
add
cmp
inc
jbe
dec
and
add
push
inc
jle
sub
jge
inc
adc
mov
jo
sbb
pop
scas
cmp
adc
sbb
je
mov
add
dec
jb
sub
pop
enter
jo
popa
cmove
pop
repz
and
cld
mov
xchg
fld
pop
jmp
xchg
adc
or
call
jl
mov
xchg
popf
out
imul
xor
les
adc
mov
adc
push
xchg
xchg
sub
(bad)
add
ins
test
stos
xchg
in
test
dec
mov
xchg
pop
popa
dec
push
movs
mov
add
xor
dec
in
push
inc
mov
cwde
inc
imul
pop
cmp
(bad)
sti
mov
mov
pusha
cmp
(bad)
retf
enter
repz
inc
pop
in
inc
mov
icebp
jge
data16
jne
mov
and
mov
fistp
lahf
out
cmps
push
add
push
mov
push
cmp
stos
and
jae
mov
js
mov
or
pop
jge
and
enter
sub
pop
dec
(bad)
lea
shl
cs
cmps
imul
adc
cld
test
jne
or
xor
cld
addr16
sub
inc
lock
and
sbb
xchg
pop
push
call
sti
retf
jb
jmp
mov
lods
js
mov
lods
idiv
sub
xchg
pop
xchg
or
mov
jne
jmp
dec
adc
retf
mov
jne
xchg
outs
addr16
pop
push
call
mov
(bad)
cmp
mov
daa
(bad)
push
or
mov
call
popa
push
push
jo
rol
push
pop
out
les
xchg
arpl
jb
adc
loopne
loopne
call
ins
ja
pop
push
loop
aaa
xchg
mov
jo
inc
jo
out
or
pop
xchg
je
int3
retf
push
and
aaa
or
add
sbb
les
push
(bad)
popf
add
test
or
and
scas
in
mov
push
pusha
les
ss
cmp
sub
lock
je
ret
xchg
mov
repnz
xchg
lods
sti
daa
test
jbe
inc
push
cmc
ins
into
mov
dec
pop
fldenv
ja
push
mov
test
mov
sbb
mov
cmps
enterw
push
add
int
call
test
clc
jmp
sub
retf
popa
xor
push
aad
shl
cmp
mov
mov
sub
and
mov
adc
jle
mov
daa
pushf
(bad)
in
je
das
int
mov
xchg
pop
xor
mov
inc
test
and
call
mov
or
ja
enter
js
jl
adc
test
mov
cmc
adc
nop
push
lods
sub
mov
xor
dec
xchg
imul
mov
fsubrp
xor
or
xor
xchg
popf
test
jae
jp
es
xchg
in
mov
in
or
sar
hlt
js
adc
dec
(bad)
xor
adc
dec
loopne
out
add
or
cli
movs
xchg
test
pop
sub
ss
ret
sbb
into
add
adc
repnz
adc
rol
xchg
into
mov
xor
ret
mov
sbb
pop
shl
xlat
and
mov
repnz
push
inc
ret
jno
ror
stos
dec
test
mov
aaa
cmps
mov
or
rcr
push
cmp
call
retf
and
adc
inc
push
xchg
adc
sbb
adc
xor
and
lods
and
mov
std
lea
mov
or
das
jmp
fdiv
mov
pop
pop
popf
aam
stos
aas
dec
adc
add
or
cli
or
xchg
and
cmp
mov
and
or
push
inc
cmp
test
pop
enter
test
inc
adc
jge
test
mov
jl
test
sub
hlt
inc
sub
fild
lea
add
daa
call
add
not
jle
fild
jge
add
fwait
push
dec
rol
dec
xchg
add
movs
addr16
adc
sbb
cmp
cmp
sub
iret
mov
lock
pop
pop
out
xchg
loop
cmps
xlat
xchg
push
test
scas
pavgb
or
adc
not
fsubr
push
cmps
aad
xor
jns
cs
xor
sub
cmps
icebp
std
mov
div
xchg
arpl
and
pusha
pop
push
sti
sub
xor
push
add
adc
in
cmps
pop
and
fdivr
cmp
fwait
pop
push
inc
fs
mov
or
dec
ss
mov
jl
test
cmp
test
mov
mov
inc
mov
jnp
lods
xor
nop
push
add
pop
loope
test
mov
dec
add
out
pusha
push
mov
add
jb
push
inc
mov
mov
push
cmp
ficom
push
shl
add
push
pop
in
js
or
add
repz
add
push
adc
mov
pop
xchg
(bad)
add
push
sbb
sbb
xchg
cs
add
ds
mov
loop
add
cld
fs
aam
inc
sbb
jno
imul
(bad)
call
and
and
shr
sub
inc
movs
inc
push
add
dec
sub
cmp
push
leave
or
xchg
out
test
daa
push
outs
retf
ds
loop
fcomip
stos
leave
jge
nop
mov
repz
stos
jecxz
xchg
sub
and
call
adc
inc
je
test
sub
mov
js
inc
js
mov
enter
xchg
jcxz
add
xchg
xor
or
mov
inc
scas
pop
loopne
sbb
out
sar
push
adc
or
jmp
rol
and
push
clc
sub
fsubrp
sub
cld
jp
cmp
pusha
nop
adc
sub
pop
add
mov
jg
cli
pop
out
adc
mov
mov
xchg
ror
add
mov
inc
repnz
or
cwde
jnp
push
pop
push
loopne
data16
add
pop
sub
or
into
mov
js
dec
jmp
and
test
(bad)
cmps
inc
pop
jb
mov
pop
adc
sbb
fsubrp
pop
sbb
jmp
test
rcl
out
fcomp
sub
into
add
or
pop
ret
mov
sbb
jbe
mov
cmps
and
lods
je
inc
movs
fs
inc
or
mov
in
inc
and
jg
movs
mov
pop
inc
gs
mov
sbb
mov
dec
jmp
dec
push
mov
push
push
imul
pop
repnz
xor
imul
xor
shl
lods
ficomp
leave
xor
sub
fs
inc
mov
xlat
cmc
xor
mov
dec
(bad)
or
add
icebp
sbb
sub
mov
xchg
jge
adc
add
outs
adc
pushf
dec
cwde
cld
jnp
in
iret
xor
mov
popf
add
xchg
inc
hlt
and
mov
mov
and
inc
(bad)
cld
xor
call
cmp
sub
inc
or
sbb
cwde
fadd
mov
and
jp
push
loopne
pop
repnz
pop
mov
push
movs
rol
ds
mov
add
stos
push
or
nop
loopne
add
push
jp
lock
jne
clts
pop
mov
sub
in
mov
xor
push
xchg
(bad)
enter
cmp
pop
ret
and
jmp
icebp
jnp
or
imul
and
mov
shr
loope
pushf
mov
in
das
shl
mov
enter
mov
jle
and
icebp
pushf
sbb
mov
pop
push
and
jb
mov
jns
add
ja
ins
adc
in
outs
pop
or
adc
jb
add
ja
pop
pusha
push
(bad)
pop
cmp
sbb
adc
add
and
test
ds
jbe
ins
out
adc
pushf
popf
test
inc
jno
pop
(bad)
fmul
mov
xchg
xor
push
mov
push
shl
ja
adc
idiv
adc
(bad)
xchg
pop
sbb
fstp
mov
popf
dec
stos
mov
jle
popa
mov
cmp
je
loop
imul
and
xor
xor
xchg
js
and
mov
icebp
dec
(bad)
leave
inc
(bad)
sub
mov
int
xchg
sbb
inc
mov
push
jge
pop
adc
daa
loop
xchg
dec
push
test
enter
in
push
xor
xor
and
mov
and
aam
ds
push
jp
fcomp
enter
mov
ins
adc
ins
or
(bad)
popa
xchg
xchg
nop
retf
mov
dec
inc
(bad)
pushf
xchg
or
test
into
sbb
pop
aaa
or
mov
jp
pop
lock
sbb
push
mov
nop
xor
jae
int
dec
call
xchg
in
mov
enter
call
push
cmp
sub
inc
js
enter
mov
test
test
jnp
push
pushf
nop
pop
inc
into
jle
shr
ds
mov
shr
cmp
or
out
fwait
lea
pop
out
mov
repnz
sub
outs
and
lods
in
push
inc
call
jo
loop
and
and
push
inc
je
pop
push
mov
add
lods
out
int
xchg
in
or
xor
cld
call
outs
mov
imul
add
fcomp
jnp
xchg
add
pop
sub
(bad)
push
in
cmp
imul
cli
and
adc
enter
or
dec
call
and
clc
(bad)
in
jp
int3
jns
or
xchg
mov
imul
(bad)
(bad)
arpl
pop
pop
pop
mov
fs
push
ds
iret
sub
sub
jp
rcl
pop
cmp
add
rcl
cli
mov
icebp
jle
or
jb
loopne
enter
push
cmp
xor
and
lods
mov
iret
dec
xchg
cli
pop
sub
loop
and
and
je
enter
xor
sub
adc
push
cld
fdiv
loope
and
cli
adc
jmp
jbe
pusha
pop
sbb
movs
test
lea
xchg
scas
rol
fmul
mov
mov
xchg
cmps
nop
pop
add
adc
adc
xchg
(bad)
mov
enter
mov
aam
push
fmul
test
out
dec
retf
(bad)
enter
enter
adc
int3
daa
jle
pop
rcr
adc
sub
jne
and
stos
sub
xor
fdivr
lea
mov
aaa
xchg
lods
cmp
movs
jp
mov
cwde
hlt
inc
xchg
mov
js
fs
(bad)
jbe
mov
lahf
or
mov
jl
adc
inc
js
mov
and
push
inc
push
mov
add
push
test
adc
sub
dec
or
push
sbb
dec
mov
inc
fnstcw
mov
dec
pavgb
xchg
stos
mov
mov
enter
cli
xor
jnp
retf
pushf
cmp
call
cmp
jae
mov
xor
sar
mov
ret
or
mov
cmp
into
pop
mov
(bad)
call
ins
test
inc
das
call
xor
xor
imul
xchg
mov
shl
or
into
or
scas
add
jmp
or
scas
ins
sub
xor
or
jne
pop
cmps
add
sub
jns
jmp
adc
push
outs
daa
neg
in
lea
pop
add
push
aad
fldenv
fidiv
push
or
(bad)
and
cli
push
adc
fwait
das
push
ja
bound
call
adc
in
aam
or
movs
les
loope
in
and
adc
jbe
sbb
xor
push
je
or
xor
inc
dec
call
jb
sub
sti
adc
sub
test
mov
shl
out
inc
lock
xchg
test
pop
push
lahf
push
jmp
jns
std
dec
and
mov
fwait
jb
scas
jecxz
cmp
add
cmp
and
dec
pushf
(bad)
or
jb
inc
push
inc
call
cmp
outs
push
iret
and
jle
stos
leave
push
in
jge
shl
rol
xor
mov
mov
push
mov
dec
or
fisub
jp
in
addr16
add
cmps
cmp
push
jg
clc
adc
jl
xchg
call
fisub
push
jp
cmc
(bad)
xor
adc
paddsw
sub
add
retf
sub
cmp
xor
or
(bad)
mov
pop
sub
daa
test
fs
mov
(bad)
les
and
shl
jecxz
dec
test
dec
xor
ret
das
cli
inc
pop
push
adc
dec
jno
cld
xchg
sub
adc
(bad)
call
fs
dec
mov
or
add
ret
and
mov
sub
jg
test
add
mov
pop
push
push
xor
dec
or
mov
repnz
xor
loopne
popa
pop
push
and
and
add
push
sbb
xor
or
test
int
leave
xchg
aas
xchg
scas
and
(bad)
cmp
push
mov
adc
leave
sbb
lea
adc
pop
jne
inc
mov
ds
in
push
scas
(bad)
imul
mov
repnz
jns
int3
dec
pop
sub
out
out
and
sbb
push
mov
rol
int3
xchg
inc
enter
shr
(bad)
aas
inc
cmp
fnstenv
shl
rcr
mov
out
sbb
sub
mov
mov
repnz
jns
int
inc
nop
clc
enter
sub
test
and
nop
(bad)
fidivr
adc
stos
shl
mov
rcl
imul
add
into
jae
add
add
movzx
add
ror
leave
push
add
rcr
shr
cli
dec
or
push
jo
pop
(bad)
jb
mov
imul
test
cmp
retf
or
fld
add
lea
or
rcl
or
and
int
iret
inc
movs
inc
pusha
add
mov
sbb
jmp
lock
rol
fincstp
shl
(bad)
dec
fmul
adc
push
add
lea
clc
xlat
sbb
jmp
add
and
neg
add
lea
push
mov
cmp
mov
add
add
mov
loopne
inc
cld
ss
stc
and
int3
lea
imul
dec
or
not
cmp
ret
ja
mov
mov
lahf
mov
aam
mov
inc
and
test
(bad)
mov
inc
scas
add
add
lea
xor
stc
dec
lea
xor
movs
lea
and
es
clc
pop
icebp
pop
repz
mov
push
scas
mov
fwait
scas
inc
lods
adc
or
lddqu
inc
pop
inc
in
or
mov
adc
inc
call
xlat
pop
mov
add
clc
mul
inc
dec
and
in
mov
or
adc
nop
sbb
pop
xchg
adc
mov
xlat
xchg
rol
push
lock
inc
xlat
(bad)
test
test
pop
outs
je
push
imul
hlt
adc
and
inc
adc
inc
push
arpl
imul
sar
lea
dec
(bad)
dec
add
jmp
xor
push
fnstcw
add
bound
sub
sbb
push
add
or
(bad)
push
test
mov
ror
shr
mov
stos
xchg
adc
mov
adc
inc
test
mov
rcl
xchg
mov
inc
pop
jne
inc
lods
stos
(bad)
mov
adc
test
call
es
movs
adc
das
call
push
sub
and
cmps
in
push
adc
add
pop
or
jl
aam
stos
fimul
mul
and
adc
test
fldenv
fisttp
int3
lods
(bad)
out
loop
and
mov
push
int
and
and
(bad)
pop
aaa
push
mov
adc
movs
test
and
stos
xchg
adc
test
fcmovnu
adc
adc
inc
inc
loope
mov
add
lods
dec
stos
fld
lock
add
jmp
les
cld
test
or
(bad)
fmul
test
push
test
in
inc
mov
dec
out
adc
inc
stos
sbb
enter
and
daa
inc
cmp
or
xor
xchg
and
xor
fiadd
adc
ret
dec
(bad)
rcl
add
and
fwait
adc
xor
arpl
or
in
adc
add
push
xchg
xor
mov
push
jmp
fsub
push
sub
xor
fimul
sti
bound
xor
iret
movs
sbb
in
xor
pusha
dec
mov
adc
js
xor
push
into
xchg
dec
adc
jge
or
mov
add
or
enter
fnstsw
jp
sub
add
daa
mov
inc
or
pop
adc
and
mov
out
aam
mov
out
and
repnz
(bad)
mov
xor
(bad)
and
fwait
clc
ins
in
add
cmp
aam
and
mov
dec
(bad)
mov
or
cdq
(bad)
outs
pop
jmp
xchg
jl
pop
or
sbb
mov
xor
pusha
and
(bad)
jmp
push
and
(bad)
and
or
inc
hlt
and
inc
push
push
dec
(bad)
arpl
mov
inc
jmp
push
inc
or
add
jne
inc
hlt
nop
frstor
jp
adc
mov
cmp
div
les
test
cmp
push
out
out
add
xchg
push
cli
iret
add
ret
pop
pop
gs
sbb
test
lahf
xor
int3
or
and
push
add
cmp
daa
mov
sbb
cmps
jb
cmp
stc
or
(bad)
cmp
ret
repnz
test
repnz
jns
mov
and
or
cmp
adc
out
cmc
js
add
add
cli
xchg
js
adc
icebp
loop
and
and
repnz
and
or
sub
dec
fidiv
fs
push
neg
leave
cmp
sbb
xor
jge
inc
jecxz
inc
or
cmp
in
inc
adc
pop
fstp
int
mov
add
xchg
mov
in
inc
ret
cmp
or
fdivr
or
push
xor
call
(bad)
ja
jp
pop
and
popa
inc
pop
xchg
mov
jecxz
pop
fwait
fs
or
sbb
or
iret
or
jge
pop
dec
xor
or
pop
cmp
and
cmovb
ret
push
fcom
cmp
test
call
jmp
fistp
nop
jo
cmp
and
push
in
mov
mov
aas
adc
ds
movs
mov
rol
je
mov
(bad)
push
jne
cwde
daa
js
ror
cli
pop
lds
lds
pop
mov
cmp
scas
pusha
in
jmp
call
bound
addr16
clc
pop
in
neg
cmps
inc
and
retf
jp
ror
sub
add
mov
mov
in
popa
pop
push
enter
fldenv
inc
mov
mov
scas
aam
out
mov
sar
push
and
inc
fs
xchg
xor
mov
std
mov
add
int3
sbb
sub
mov
cmp
scas
inc
call
iret
adc
into
push
in
jne
or
in
push
lock
sbb
lea
movs
ficom
mov
psllq
xchg
es
mov
aaa
nop
xlat
xchg
add
dec
je
jle
dec
adc
js
das
adc
add
adc
adc
and
dec
in
loop
pop
mov
dec
mov
movs
into
adc
push
push
cwde
xchg
hlt
imul
jp
jmp
ins
cdq
cmp
inc
fcom
pop
cmp
jne
mov
rol
ja
fwait
ja
cmp
add
xor
mov
cmp
and
call
retf
cmp
call
adc
pop
inc
int
jmp
push
cli
jb
cmp
or
cmp
in
add
scas
inc
pop
xor
or
lods
dec
mov
sbb
push
daa
jmp
add
inc
pop
mov
push
inc
mov
adc
scas
pop
out
jp
(bad)
lods
rcl
jo
inc
cmc
jne
cmp
xor
mov
or
or
cmp
jae
enter
adc
addr16
or
gs
enter
fadd
dec
cli
loop
(bad)
adc
mov
sbb
push
push
jmp
xchg
icebp
mov
in
cs
shl
sar
add
cmp
sub
adc
sbb
adc
cmps
fcom
mov
jno
mov
popa
xor
int3
push
enter
movs
cmp
or
add
adc
cmp
jg
clc
bound
sbb
push
jmp
push
push
hlt
cwde
pop
mov
inc
jne
cdq
push
loop
adc
call
push
jle
enter
xchg
inc
push
int
push
push
add
add
mov
clc
adc
cmc
stos
icebp
stos
add
push
sbb
sar
shr
mov
sub
clc
mov
stos
mov
mov
lock
inc
mov
pop
add
mov
dec
dec
fdivrp
adc
mov
adc
in
popa
mov
cmp
sub
sub
cwde
sub
out
sbb
and
shr
clc
pop
jg
push
mov
inc
in
sub
movzx
pop
call
push
sub
add
sti
or
xchg
sbb
in
stc
cmp
pop
and
sbb
adc
bound
test
xchg
pop
and
xor
rcr
sub
fnstsw
add
mov
add
cmp
scas
add
out
xchg
pop
in
sub
mov
clc
mov
add
mov
inc
and
lahf
cdq
retf
in
sbb
xor
xor
xchg
cmp
sub
inc
test
icebp
test
jo
cmp
pusha
sub
lahf
out
mov
inc
fistp
add
inc
fwait
scas
jmp
pop
push
add
outs
jne
ds
sbb
pop
inc
std
lahf
cmp
push
or
dec
out
xchg
test
mov
sbb
mov
loope
fidivr
paddusw
add
jnp
cmp
outs
jo
push
add
lahf
test
js
add
ds
daa
push
mov
ret
add
pop
sbb
add
out
enter
or
push
push
mov
inc
js
xchg
xchg
ret
pop
mov
xlat
adc
nop
push
add
imul
sub
push
sub
add
mov
xor
stos
push
loopne
add
and
mov
add
shr
das
stos
je
add
shl
dec
int
shr
xor
inc
sbb
adc
cmp
push
clc
and
shl
sub
adc
jo
xchg
rcl
xlat
jno
add
hlt
jp
cmp
cmp
je
xor
daa
mov
cs
push
adc
fsub
jg
out
add
scas
int3
ficomp
mov
shl
dec
sub
cmp
push
push
addr16
div
lea
cs
mov
loop
pop
loop
pop
sar
cmps
push
xchg
push
xlat
sub
ja
or
dec
mov
outs
sub
push
jne
or
add
sub
xor
and
push
jo
rcr
mov
inc
push
cmc
retf
cs
mov
mov
cwde
mov
xor
pop
push
jle
test
aaa
or
adc
cwde
xchg
and
pop
jp
mov
std
das
fwait
pop
cmps
pop
arpl
xor
inc
in
dec
pop
ret
test
lods
cdq
dec
stc
lock
inc
or
dec
test
js
loope
mov
arpl
or
push
push
stos
(bad)
xor
xor
(bad)
push
inc
mov
call
pop
test
shl
or
xchg
jmp
jnp
dec
push
scas
mov
call
out
ss
jg
loope
fnstcw
sbb
pop
xor
jns
adc
mov
xlat
xchg
repnz
jl
mov
jne
ins
and
ss
shr
fisubr
xor
stc
cmp
test
repnz
popf
(bad)
mov
or
imul
test
ja
push
cli
imul
add
fldcw
pop
cld
in
in
ror
dec
fisttp
cmp
jb
out
add
or
sbb
pop
lea
sbb
inc
push
push
imul
lea
ret
(bad)
fs
shr
pop
add
jmp
les
jbe
in
call
sub
leave
lahf
push
stos
cmp
adc
imul
dec
jmp
cwde
test
popf
pop
adc
xor
sub
div
jne
push
div
rcr
cli
(bad)
cmp
test
adc
mov
fld
add
jnp
and
push
cmp
pop
mul
adc
cwde
or
cld
inc
pop
sbb
(bad)
adc
add
inc
jp
inc
pop
push
test
pop
or
fs
daa
mov
cmps
push
fcom
cdq
aaa
psubb
lahf
xchg
or
jmp
mov
sub
inc
jmp
xchg
es
cld
dec
mov
jne
add
stos
fild
inc
inc
cmp
mov
push
repz
cs
xor
adc
and
or
sub
cmp
xor
mov
xor
cmp
hlt
rcr
sbb
cmp
jge
push
jle
pop
std
icebp
in
jp
call
xor
sbb
clc
jmp
pop
sbb
or
mov
mov
stos
or
adc
cmp
pop
and
add
push
push
and
fidivr
and
pop
and
and
push
scas
sbb
pop
hlt
aam
inc
jmp
loopne
jmp
push
out
or
pop
nop
pop
push
cmp
cmp
fiadd
jnp
xchg
push
cmp
mov
inc
jno
dec
push
push
adc
mov
stos
pop
inc
neg
out
pop
fbld
cmp
adc
mov
xchg
pop
or
inc
xor
test
or
adc
inc
jl
ror
push
fcom
xchg
adc
movs
sbb
dec
xor
push
push
data16
les
mov
mov
(bad)
in
mov
cmp
fst
rcl
xor
mov
or
mov
push
or
adc
add
adc
pop
pop
mov
cmp
jecxz
add
jl
adc
sti
and
call
lds
leave
mov
sbb
cmps
push
xor
pop
sub
div
push
xchg
leave
inc
push
inc
mov
inc
mov
xchg
add
out
mov
cmp
test
adc
fs
cld
xchg
dec
imul
stc
or
pop
imul
xlat
add
add
cmp
xor
dec
jae
adc
adc
pop
dec
or
pop
jbe
imul
dec
push
jmp
xor
push
mov
nop
add
idiv
sbb
jle
jo
arpl
mov
pop
clc
leave
test
and
test
push
inc
in
sub
fstp
test
jle
mov
and
(bad)
push
and
xchg
jbe
sbb
ds
lds
or
add
sub
jmp
fld
adc
(bad)
mov
mov
jle
mov
push
or
pop
test
cmp
sbb
jmp
daa
adc
sbb
xchg
adc
pop
test
push
loopne
mov
and
lea
je
mov
push
test
sub
pop
push
clc
or
mov
jl
or
in
das
stos
jae
mov
lods
mov
mov
int
xor
dec
std
sbb
call
sbb
mov
in
out
or
inc
add
popa
mov
fdiv
xchg
ds
jmp
stos
adc
xchg
inc
xor
iret
sub
lock
fadd
push
test
xchg
add
and
mov
mov
mov
adc
push
add
mov
cmp
inc
rol
xor
lods
sbb
pop
movs
dec
data16
out
ror
das
pop
rcr
daa
call
cli
aaa
jne
xor
ss
push
(bad)
sbb
jne
mov
pop
mov
rep
cmp
and
imul
call
es
push
out
ja
mov
xchg
or
pop
mov
aas
cdq
aas
jbe
popa
mov
lock
imul
je
stos
outs
mov
mov
inc
nop
and
mov
ret
int
or
inc
cdq
fs
or
adc
push
les
sar
jno
nop
inc
inc
popa
test
dec
push
dec
xchg
call
push
sbb
ror
add
and
push
fsub
xchg
xchg
inc
xchg
adc
clc
shl
lahf
test
cwde
adc
pop
mov
jmp
mov
inc
xchg
or
nop
xor
mov
push
jecxz
and
pop
bound
je
aad
sbb
adc
and
inc
pop
add
adc
test
and
push
sbb
mov
jb
pop
shl
stos
call
sub
lahf
adc
dec
fild
mov
and
lea
shl
xchg
(bad)
or
sbb
push
pop
xchg
sbb
dec
cmp
es
or
dec
push
mov
mov
mov
scas
xor
push
push
cmp
pusha
dec
stos
dec
fist
cmp
fwait
and
rol
add
das
call
lock
pop
dec
in
and
or
fimul
jecxz
jae
ficom
cmp
sar
add
xor
cmc
mov
add
leave
xlat
xor
ins
xor
adc
mov
into
fiadd
std
dec
push
aad
push
mov
hlt
mov
mov
mov
push
call
inc
xchg
cmp
xor
dec
out
imul
(bad)
pop
inc
cmp
lahf
sub
fstp
mov
sub
scas
test
cmp
sub
mov
push
stc
adc
adc
mov
jns
in
sub
mov
xchg
fisttp
fmul
imul
shr
dec
inc
mov
xor
push
jne
and
push
push
push
inc
xchg
sti
mov
inc
ja
mov
jmp
jne
fst
and
inc
mov
jmp
(bad)
fsub
ret
sti
xchg
daa
ja
jmp
cmp
jbe
call
cwde
ret
icebp
inc
inc
leave
je
sub
xor
cdq
xor
jmp
and
push
add
ja
pop
imul
and
(bad)
jecxz
push
pop
sbb
pop
jmp
mov
sub
mov
lea
fs
aam
call
mov
push
xchg
push
mov
mov
push
xchg
sub
loope
and
cdq
(bad)
das
jmp
loop
xchg
ror
push
je
and
ror
sub
les
inc
cmps
and
mov
push
mov
sbb
inc
jmp
(bad)
xor
js
adc
mov
cli
lea
inc
adc
mov
les
push
and
and
mov
cmp
adc
sub
nop
test
cmp
mov
cmp
mov
(bad)
iret
or
sbb
out
mov
sub
mov
mov
push
push
mov
pop
ficom
data16
cmps
or
push
call
adc
(bad)
cmp
pushf
sbb
push
mov
pop
dec
add
push
arpl
gs
outs
push
lock
shr
jne
jno
shl
sub
mov
aad
sbb
and
cmp
nop
clc
call
loop
mov
ds
pusha
sub
adc
add
mov
bound
pop
cmp
or
mov
jmp
jge
xchg
mov
loop
push
sbb
push
and
loope
jmp
pop
lock
mov
or
test
dec
pop
gs
xchg
sub
test
enter
xchg
leave
lea
jecxz
mov
dec
adc
sbb
call
and
adc
les
xor
xchg
lea
push
les
sub
ret
push
mov
or
out
cmp
xor
fsubr
sbb
add
jmp
pop
ficomp
sbb
push
mov
mov
popa
push
addr16
pop
loopne
(bad)
das
jne
jle
xchg
sbb
data16
in
mov
sub
cmp
inc
gs
sbb
and
xor
mov
mov
push
push
ror
lock
and
daa
fisubr
or
xor
xchg
jae
or
stos
sbb
xor
jge
ret
nop
add
mov
adc
ja
add
cwde
jg
in
inc
inc
loope
or
and
or
and
into
(bad)
jecxz
and
inc
in
loopne
call
(bad)
ret
dec
fnstcw
xchg
stos
sub
and
dec
mov
(bad)
in
push
jg
not
push
call
xchg
pop
je
xor
jb
dec
icebp
imul
mov
test
mov
push
push
mov
imul
push
fild
cmp
push
ja
xchg
sbb
mov
sbb
push
sub
int3
dec
dec
push
(bad)
sti
push
adc
test
not
and
scas
aad
pusha
in
sub
arpl
or
sbb
or
adc
or
push
movs
inc
xchg
pop
dec
repz
jg
test
push
mov
mov
aas
cmc
stc
jmp
ja
push
call
jge
scas
push
adc
push
adc
and
or
push
(bad)
repnz
inc
mov
push
dec
rcl
mov
sar
push
pminsw
scas
xor
lock
call
add
inc
(bad)
(bad)
shr
rcl
xor
or
test
call
mov
mov
push
push
rcl
mov
adc
jno
xchg
ins
and
jne
in
add
pop
ins
in
push
icebp
push
mov
inc
add
ret
or
jmp
add
push
rol
mov
cmps
jl
adc
add
inc
add
cmps
mov
jmp
stc
sbb
jg
push
xchg
aaa
ret
sbb
das
sub
cmp
je
leave
sbb
cmps
cli
xchg
push
push
cmp
daa
in
(bad)
cmps
xor
add
push
ss
imul
push
xchg
jno
jmp
cmc
fnstsw
dec
cli
cs
outs
jge
jge
test
push
aas
(bad)
repnz
arpl
adc
mov
xor
or
inc
or
mov
mov
call
inc
sbb
cdq
pop
push
neg
enter
dec
and
les
or
cmp
fmul
mov
push
mov
mov
shr
pop
and
sbb
scas
data16
push
dec
sbb
inc
dec
xor
or
or
xor
movs
push
les
sub
mov
cld
cmp
inc
cmp
cwde
mov
dec
xchg
and
popa
add
pop
call
pushf
cld
and
enter
retf
lahf
mov
cmp
cmp
mov
mov
sub
xchg
pop
outs
cmp
inc
pop
xchg
mov
pop
dec
sub
inc
sar
push
mov
nop
sbb
cld
(bad)
ja
add
adc
sub
cmp
jge
add
pop
add
js
mov
sub
cmp
push
inc
lea
call
xchg
xchg
adc
mov
mov
ffree
xor
pop
fcom
shl
arpl
cmp
inc
sbb
out
inc
push
cmp
icebp
jecxz
iret
pop
cmp
mov
xchg
xchg
int
fld
mov
pop
cmp
adc
imul
imul
dec
sub
push
sbb
mov
sub
int3
sti
popf
test
dec
cmp
lea
xor
aam
lds
rcl
out
mov
jbe
(bad)
sub
xchg
stos
sub
cmc
xchg
cmp
pop
pop
mov
sbb
into
rol
adc
cmp
push
les
adc
or
push
sbb
or
adc
fs
add
sub
cmp
call
sub
ret
add
jge
or
jge
or
mov
mov
daa
aad
adc
cmps
dec
pop
adc
add
or
aaa
ds
jecxz
mov
call
xchg
mov
mov
pop
add
loopne
mov
xor
add
push
retf
into
push
mov
push
add
adc
add
jmp
fisttp
jne
pcmpeqb
xor
push
ds
fbstp
mov
jae
(bad)
call
xchg
mov
cmps
jns
cmps
or
test
jns
clc
xor
and
push
dec
dec
shr
push
adc
mov
cmps
dec
sub
and
mov
popa
jne
bound
mov
rol
mov
dec
mov
cdq
aam
mov
mov
pop
push
pop
in
mov
imul
push
pushf
popf
jb
or
in
std
loope
in
cdq
pop
sub
mov
int3
push
mov
hlt
cmps
mov
push
cmp
jns
daa
pushf
push
jl
or
repnz
pop
jae
mov
ins
push
cmp
mov
fmul
cli
das
pop
stc
adc
test
adc
shr
pop
push
or
mov
mov
mov
sub
pop
adc
scas
mov
and
movs
xor
jb
push
push
push
dec
and
mov
call
pop
pop
das
xchg
lds
sub
push
sti
leave
jg
push
hlt
mov
mov
push
call
out
iret
xlat
neg
xor
and
fs
push
inc
cld
rcr
push
(bad)
mov
lds
bound
nop
bound
in
jg
stos
sub
fnstsw
in
out
inc
add
push
mov
and
mov
clc
mov
mov
push
out
sar
fcom
push
adc
(bad)
or
sub
sub
dec
push
int
sbb
mov
std
mov
adc
rol
pop
adc
repnz
cdq
push
push
out
ja
setbe
loopne
xchg
mov
cld
jle
xor
fimul
and
xchg
push
xabort
ds
in
pop
iret
fs
mul
(bad)
je
push
push
les
jl
dec
pop
outs
imul
xor
mov
add
int
out
inc
cmp
or
jmp
pushf
test
inc
mov
cmps
and
push
push
sar
jmp
sbb
clc
push
dec
call
push
out
arpl
into
or
les
xchg
shl
sbb
add
pop
jge
pop
push
dec
call
push
sub
add
out
out
jo
in
pop
xor
or
jecxz
jne
push
adc
mov
je
cmp
jne
mov
dec
aas
add
test
pop
test
ss
and
dec
call
cmps
jecxz
and
test
cs
mov
cmp
xor
push
push
push
jg
out
xchg
loopne
shr
push
fwait
dec
jmp
push
and
jns
dec
add
cmp
inc
and
call
(bad)
xor
push
jno
pusha
adc
add
sbb
repz
movs
or
call
jmp
xchg
pop
or
mov
or
pop
mov
xor
inc
leave
ret
pop
mov
retf
into
inc
cmp
adc
dec
mov
push
cli
add
jmp
js
jae
repnz
in
push
and
test
mov
xchg
sbb
mov
into
fist
fmul
ror
scas
adc
aas
outs
push
jmp
es
inc
in
push
mov
cmp
jmp
js
mov
push
mov
ret
mov
cmp
mov
test
jle
sub
cmp
cli
push
ret
dec
xor
popa
xor
loopne
jmp
cld
mov
mov
inc
inc
jl
jmp
jl
adc
in
xchg
daa
cli
pop
xchg
ss
xchg
inc
dec
or
add
cmc
add
cmp
test
mov
xchg
mov
inc
call
jb
push
jge
sub
xchg
push
(bad)
clc
test
push
push
push
mov
sub
add
and
adc
stos
mov
fs
cmps
jne
pop
call
cmc
fist
cmp
ins
outs
dec
stc
lods
rol
push
dec
dec
xchg
retf
imul
sub
xchg
sub
lds
or
std
popa
call
(bad)
fwait
or
shr
mov
leave
fs
and
mov
sbb
clc
mov
sbb
retf
mov
dec
es
inc
pop
mov
xor
dec
adc
xchg
or
lea
push
movs
pop
pusha
retf
lods
das
out
adc
out
sub
(bad)
xchg
(bad)
and
loopne
rol
pop
mov
push
lock
push
(bad)
loop
mov
push
je
mov
pop
xor
add
or
sbb
mov
sub
mov
xor
mov
inc
pop
(bad)
enter
inc
cdq
sti
inc
sub
push
jmp
xor
popf
xchg
xor
mov
add
arpl
and
or
pop
mov
adc
xor
sub
sub
inc
xchg
pop
push
sub
shr
div
add
xor
or
outs
xchg
and
add
xor
add
cmp
push
xchg
gs
das
gs
test
and
inc
cmp
xchg
js
or
idiv
iret
mov
cmp
jg
add
pop
cmp
rol
movs
sub
ret
push
sub
dec
shl
in
sub
inc
out
lock
rcl
loopne
rcl
and
pop
aad
jge
icebp
and
(bad)
jns
inc
mov
sub
pop
or
fld
jmp
xor
xchg
push
lds
dec
mov
sub
cli
xor
or
inc
push
sub
popf
sbb
pop
jnp
pushf
test
push
cld
and
pushf
mov
fstp
inc
mov
pavgb
sub
xor
dec
inc
test
ss
pop
pop
inc
sbb
dec
xor
test
xor
popf
jle
(bad)
sti
call
or
mov
mov
inc
jge
xchg
xor
adc
sti
xchg
sub
mov
(bad)
aas
sti
and
cmp
mov
inc
jae
add
(bad)
jne
inc
sub
cmp
sub
mov
mov
(bad)
xor
mov
ret
mov
add
sar
mov
or
jo
add
ret
jmp
mov
xchg
inc
or
daa
mov
mov
adc
test
and
dec
mov
bound
cmp
add
cmp
pop
adc
je
inc
jl
lods
add
mov
dec
pop
retf
adc
pop
mov
loop
les
add
out
leave
xchg
clc
retf
call
cmp
imul
call
push
cld
xor
fcom
mov
ins
ins
xchg
cmp
and
call
test
and
mov
(bad)
sbb
pop
cmp
fadd
dec
dec
and
dec
(bad)
fcom
xlat
mov
cs
enter
cmp
popf
inc
in
jmp
add
jb
clc
pop
adc
pop
xor
push
push
and
cmp
test
lea
dec
sub
loopne
mov
hlt
add
and
xor
add
adc
in
cmp
in
jnp
loopne
sbb
leave
je
xchg
bound
stc
xor
or
lock
shr
xor
ja
std
push
and
(bad)
push
dec
sbb
je
dec
adc
icebp
push
push
and
jmp
cs
pop
adc
mov
(bad)
dec
movs
pop
adc
push
hlt
pop
movs
fnstenv
std
mov
adc
and
jg
gs
pop
sbb
push
inc
push
pusha
cld
sub
pop
pop
hlt
fcmovnbe
push
rcl
push
adc
ret
add
push
push
push
push
pop
retf
pop
sub
dec
imul
mov
pop
cwde
dec
mov
sub
sbb
pop
xor
cmp
push
mov
or
mov
add
cli
sub
je
or
pop
jbe
bound
fldcw
push
xlat
mov
sub
jo
sar
lds
sbb
cmps
call
push
mov
xor
xchg
and
mov
adc
into
sbb
fs
push
or
push
pop
enter
or
adc
jl
inc
add
jo
jmp
mov
and
sbb
push
or
dec
lea
push
sbb
mov
and
inc
test
and
inc
je
retf
je
call
or
jmp
das
mov
ret
adc
rol
adc
fisttp
std
mov
mov
rcl
scas
mov
loope
cmp
push
movs
jbe
jb
sbb
mov
jp
sub
or
add
mul
add
push
std
js
mul
jmp
jns
sub
jl
adc
jns
popa
cmp
pop
jmp
xor
sub
in
push
mov
mov
les
pop
bound
mov
int
push
leave
inc
adc
pop
push
sub
mov
outs
push
and
ret
popf
pop
mov
or
or
stos
add
clc
mov
stos
jne
and
push
mov
call
jne
adc
push
sbb
xchg
mov
or
and
sti
leave
pusha
je
cmp
call
call
adc
stc
push
pop
mov
xor
fwait
push
pop
mov
cmp
call
push
fs
pop
mov
lods
retf
frstor
sub
mov
jmp
and
and
push
aad
fldenv
pop
push
cld
jo
adc
pop
daa
loope
jb
icebp
or
adc
add
xlat
xor
outs
out
cli
cmp
adc
daa
add
sbb
fldcw
push
sub
nop
scas
push
push
das
std
xchg
out
add
sbb
jns
out
nop
shl
sbb
and
shl
mov
and
jne
mov
adc
add
or
shr
in
inc
adc
push
inc
add
hlt
mov
mov
cmp
sub
fdiv
jg
xchg
lock
push
shl
mov
add
pop
les
fld
and
arpl
dec
loopne
je
shr
cmp
ja
cld
cld
mov
test
retf
fadd
sbb
jo
das
mov
jmp
xchg
hlt
jmp
mov
pop
add
inc
cmp
mov
xchg
adc
in
or
jmp
adc
fcmovnb
sub
jb
pop
mov
and
mov
jmp
push
lahf
jle
iret
mov
mov
test
push
push
(bad)
mov
test
test
ins
pop
jmp
retf
cmp
sbb
jmp
jp
xor
lock
mov
sbb
xchg
sbb
js
xor
sub
push
inc
cs
xor
jbe
push
mov
outs
imul
push
lock
sbb
add
push
add
in
dec
mov
and
data16
ret
jbe
xor
mov
sub
push
cwde
daa
icebp
push
in
fcomp
and
mov
sahf
mov
cmps
ret
mov
jle
pop
jnp
sbb
test
fwait
(bad)
sbb
in
call
aam
inc
mov
dec
jne
out
shl
sbb
and
adc
mov
lock
mov
cmp
shr
mov
in
dec
sub
adc
bound
test
mov
pop
(bad)
xchg
(bad)
jmp
aam
push
clc
inc
dec
jmp
clc
loope
xor
fcmovnb
cld
mov
mov
mov
mov
ret
pop
sti
scas
sub
mov
neg
or
ret
xchg
add
test
fdiv
dec
pop
mov
xor
hlt
in
push
jae
test
std
gs
pop
or
sbb
jl
sahf
vpblendd
in
sti
or
mov
fld
mov
mov
adc
xchg
call
nop
and
in
call
push
jno
stc
enter
(bad)
adc
sbb
or
inc
jmp
dec
adc
fs
out
adc
loope
xchg
inc
dec
hlt
rcl
jae
sbb
inc
(bad)
(bad)
cmp
leave
inc
push
push
push
daa
and
addr16
pusha
add
fdivr
push
arpl
and
cld
fwait
dec
and
jne
pop
pop
push
jmp
invd
jge
mov
scas
sbb
jne
push
push
inc
push
call
or
loop
inc
xchg
aas
cmp
mov
ja
xor
das
jmp
sahf
jl
jnp
mov
dec
out
adc
into
pop
movs
and
cmps
pop
xor
cwde
push
or
sbb
rol
mov
and
add
mov
cs
lea
jge
mov
mov
test
int
and
call
sub
add
nop
fs
call
push
add
push
push
jg
imul
std
mov
jg
adc
or
inc
ffree
sub
jl
jmp
jbe
or
inc
hlt
mov
js
mov
xchg
pop
sub
mov
jnp
adc
pop
jae
jnp
mov
movs
mov
cmp
cmp
jge
fmul
je
xchg
sbb
je
nop
js
cmp
inc
push
scas
jp
push
cmp
mov
clc
or
popf
fs
jmp
mov
clc
jbe
push
push
retf
adc
jb
add
or
mov
xor
or
int
sub
sbb
enter
mov
and
fist
jae
xchg
test
sub
(bad)
daa
inc
add
and
jg
(bad)
mov
add
dec
lods
adc
scas
xchg
push
or
xchg
pop
mov
push
sti
add
cld
mov
or
xlat
ins
push
enter
push
pusha
mov
shl
jo
pop
in
fs
stos
dec
mov
push
(bad)
loope
or
dec
xor
mov
push
adc
sbb
(bad)
movs
nop
repz
adc
xlat
test
mov
lahf
in
idiv
inc
jne
int
and
(bad)
cmp
xor
sbb
mov
stc
iret
lods
cmc
cwde
test
repz
and
and
pop
aaa
mov
lea
scas
jno
adc
pop
pop
inc
mov
sbb
aad
xchg
jmp
add
mov
ror
adc
imul
inc
out
popf
aad
(bad)
gs
addr16
addr16
mov
rcr
mov
pop
pop
mov
and
fs
inc
mov
cs
out
sub
sysenter
daa
loop
push
mov
retf
lea
ss
les
mov
add
sbb
xchg
cld
or
in
cwde
inc
js
test
jmp
pop
hlt
arpl
mov
fmul
adc
jl
sar
sbb
inc
add
sbb
sbb
movs
retf
dec
jne
mov
and
movs
mov
out
sbb
push
xchg
sub
push
imul
sub
jns
mov
sub
in
inc
adc
cli
sbb
inc
lods
and
adc
sub
sub
mov
inc
adc
mov
cld
dec
ror
or
jno
call
push
and
retf
call
retf
ret
aam
test
int
out
mov
call
dec
push
adc
xor
lock
sbb
push
mov
mov
dec
mov
or
fimul
add
mov
or
icebp
mov
es
sub
loopne
lods
adc
test
out
adc
ror
inc
cmps
icebp
(bad)
push
adc
(bad)
not
inc
jle
ror
ins
mov
sahf
add
dec
test
jbe
bound
push
stc
adc
add
in
outs
inc
or
xor
repz
leave
and
rol
push
pop
and
retf
lods
xchg
mov
je
jne
inc
jge
es
dec
test
jbe
inc
nop
pop
and
cli
or
std
test
xchg
js
test
ror
test
sub
mov
cmp
mov
stos
xchg
cmp
pop
mov
xchg
test
outs
xchg
adc
cmp
bound
enter
shl
add
mov
add
pop
popa
pop
cmp
fimul
sbb
xor
cwde
and
fcom
pop
or
inc
mov
mov
adc
dec
xor
adc
add
bound
xlat
mov
mov
popf
push
push
lds
adc
cmps
push
inc
ror
inc
daa
(bad)
push
pop
imul
and
les
push
sbb
dec
pop
mov
in
cmp
scas
fmul
inc
push
and
rol
sbb
adc
push
dec
sbb
add
pushf
lahf
retf
sbb
out
and
inc
fisub
in
adc
push
sbb
inc
mov
push
dec
pop
gs
push
bound
sub
jne
or
push
push
lahf
ret
inc
enter
fsubr
pushf
sbb
enter
adc
or
inc
or
(bad)
inc
hlt
sbb
or
addr16
or
push
sbb
fsubr
pop
inc
movaps
pop
push
fadd
addr16
repz
xor
push
inc
and
mov
popf
mov
pop
and
jle
je
mov
int3
cmp
and
mov
mov
rol
push
shr
push
jmp
movs
cmps
mov
and
dec
sbb
sub
push
mov
push
pop
push
inc
jae
push
push
and
inc
pop
and
inc
add
bound
adc
adc
push
mov
dec
and
rcr
xor
jl
cmp
test
fcom
imul
loop
(bad)
xchg
ds
(bad)
in
daa
movs
and
pop
and
mov
fs
into
sbb
xor
adc
adc
es
push
test
shl
repnz
test
ret
inc
sub
push
inc
mov
lahf
mov
xor
call
jle
pop
push
adc
push
push
adc
mov
repnz
cmp
inc
vmovlps
dec
push
xchg
into
(bad)
jmp
sbb
sbb
add
pop
add
mov
daa
sub
cdq
mov
aam
cs
inc
ret
ficomp
pop
inc
(bad)
pop
xor
push
dec
popa
dec
popa
push
dec
mov
loope
jne
cmp
(bad)
lock
cld
xor
js
and
mov
mov
gs
or
mov
mov
jo
xor
shr
jne
mov
add
mov
loop
and
and
js
and
add
je
adc
mov
(bad)
jge
dec
push
inc
mov
mov
js
mov
adc
push
pop
out
inc
jo
call
sub
fidivr
and
push
and
gs
sbb
pop
push
fs
lds
mov
dec
jo
adc
push
cmp
mov
mov
in
cmp
popa
mov
push
or
shl
push
call
test
jb
and
push
jbe
icebp
mov
add
(bad)
adc
leave
xor
and
ret
or
(bad)
ret
pop
mov
add
mov
mov
aas
sbb
jmp
call
xchg
push
pop
sti
adc
lods
stos
adc
jo
out
popf
adc
mov
call
mov
sbb
push
and
add
neg
dec
ss
sbb
add
imul
mov
(bad)
mov
stc
lock
sub
push
dec
cli
mov
jmp
jo
push
push
out
arpl
call
or
(bad)
movs
loopne
mov
clc
cli
movs
popa
mov
in
and
mov
jo
repnz
dec
scas
dec
mov
fsubr
clc
push
xchg
outs
inc
and
aaa
popa
dec
arpl
fild
mov
mov
xchg
inc
adc
mov
push
push
movs
in
jmp
mov
sbb
sub
xchg
lea
div
sbb
inc
inc
shl
dec
add
push
and
sub
es
or
lock
fcmovu
pop
push
(bad)
(bad)
iret
mov
dec
or
stc
xchg
cld
or
or
xor
push
inc
or
dec
inc
or
cld
scas
inc
add
mov
cdq
sbb
out
xor
inc
imul
xchg
inc
in
or
nop
push
jnp
sbb
cld
cmps
icebp
enter
repz
loop
sbb
aaa
and
stos
xor
and
adc
repz
adc
sbb
loopne
push
mov
sub
jl
cmp
je
jge
ins
das
ja
add
mov
imul
jo
leave
inc
adc
pop
jo
push
mov
sbb
movs
sub
or
shl
mov
into
jmp
add
(bad)
cmp
mov
adc
movzx
jns
add
or
test
xor
jmp
add
shl
add
xchg
adc
and
cdq
ret
inc
test
push
mov
sub
push
adc
pop
fs
sub
bound
std
inc
stos
shr
add
sti
mov
inc
jmp
adc
sub
inc
or
xlat
xchg
inc
pop
add
dec
dec
xchg
or
xor
out
sbb
mov
into
cmps
adc
or
mov
stos
mov
or
dec
fcomp
sbb
xchg
sbb
mov
pop
sub
mov
sahf
xor
int3
bndstx
pop
xor
mov
(bad)
xor
popa
pop
adc
(bad)
gs
xor
cmp
or
cmp
adc
jmp
adc
xchg
or
je
push
mov
aaa
imul
outs
hlt
out
push
out
and
cmp
jle
sub
daa
sti
jge
mov
clc
movs
dec
(bad)
push
mov
ret
int
mov
cs
cmp
push
lea
push
cmp
aam
ret
jle
xor
call
add
pop
inc
cmp
jb
sub
sub
or
add
(bad)
stc
mov
dec
pusha
dec
add
cmp
pushf
push
daa
mov
call
leave
clc
adc
popa
fadd
or
xchg
and
and
loope
stos
sbb
push
xchg
cwde
wbinvd
into
call
cmps
pop
and
mov
adc
ja
out
xor
stc
jb
jne
cli
call
sub
movs
add
imul
mov
or
and
test
loopne
push
je
mov
pop
pop
inc
stc
jne
mov
lds
adc
cmp
mov
mov
or
sub
or
test
xchg
jns
inc
adc
inc
or
mov
mov
inc
ror
inc
push
pop
test
out
add
ret
xchg
dec
mov
pop
or
stos
pop
pop
add
call
or
test
sub
pop
lea
mov
or
xor
movs
dec
rol
cmp
sub
rcr
nop
test
and
jb
ficomp
jecxz
inc
(bad)
jle
mov
aam
add
cmp
jle
pop
jmp
addr16
call
pop
lods
psllq
mov
or
dec
push
xchg
dec
push
test
std
lods
fwait
mov
bound
pop
repnz
jl
cmp
xchg
imul
into
stos
push
push
sbb
ins
jo
push
pop
dec
or
jmp
das
xor
xor
pshufw
mov
xchg
mov
and
xor
or
int3
mov
call
or
rol
lds
adc
xor
mov
and
sbb
test
or
inc
outs
loop
addr16
inc
jecxz
dec
repnz
ins
out
inc
mul
jmp
in
loope
gs
mov
xchg
aaa
div
hlt
dec
loopne
add
xor
add
adc
icebp
imul
sub
retf
pop
pop
hlt
daa
push
inc
inc
xchg
inc
sbb
cmp
xchg
push
adc
stos
add
(bad)
push
pusha
pop
ret
adc
imul
pop
or
push
lds
fisttp
push
mov
push
loope
(bad)
imul
test
test
pushf
scas
fistp
xor
push
call
and
dec
mov
loopne
cmp
mov
in
ins
pop
and
sub
loopne
sbb
std
or
outs
push
dec
scas
push
inc
mov
int3
adc
jo
jne
ret
inc
repz
add
or
or
(bad)
in
sbb
mov
lea
lock
in
sub
popf
xchg
push
shl
add
scas
ror
lods
sti
xor
add
mov
call
out
xchg
push
loope
rol
sbb
(bad)
nop
push
je
add
push
push
add
rcr
dec
push
pop
pusha
lods
push
mov
pop
mov
cmp
call
add
in
retf
outs
mov
imul
xor
popf
sbb
loop
icebp
stc
add
jecxz
add
sbb
hlt
xchg
add
out
cmp
mov
add
test
movs
push
or
cli
imul
js
xchg
sbb
sbb
aaa
pop
outs
push
sub
mov
mov
ret
cmp
sbb
and
add
xor
xlat
std
mov
sbb
cmp
hlt
sub
js
add
and
jg
outs
cmps
stc
call
pop
pusha
out
(bad)
outs
or
test
push
push
ins
retf
add
jl
out
adc
sub
jle
jae
dec
les
dec
(bad)
add
inc
and
push
lds
sbb
add
pop
mov
xchg
outs
add
pop
out
mov
hlt
inc
clc
dec
mov
and
addr16
jmp
test
lahf
jae
and
lods
aad
and
mov
fwait
push
inc
js
mul
test
nop
shl
push
xor
cmp
fild
dec
cmp
sub
jmp
mov
inc
mov
repnz
push
and
xchg
xchg
in
xchg
sbb
mov
add
sbb
add
imul
jne
add
loop
test
mov
call
add
xchg
ja
xor
fiadd
mov
enter
push
dec
cmp
xchg
fiadd
imul
and
add
mov
sbb
inc
rol
xchg
ret
dec
fcomip
scas
mov
add
or
mov
dec
enter
add
fld
mov
cwde
mov
mov
add
or
xchg
push
pop
mov
cdq
cli
add
xchg
in
iret
pop
add
sbb
xchg
ja
ss
lock
imul
movs
jmp
add
add
popf
push
lock
cli
jb
fisttp
push
fcomp
ret
mov
add
pop
pop
xor
mov
push
cmp
inc
pushf
xchg
fild
mov
gs
and
ins
cmp
ja
out
add
lods
xchg
mov
es
cmp
mul
in
push
cmp
jae
sbb
cmps
or
pop
aas
inc
gs
ss
push
addr16
and
and
dec
les
xchg
test
jl
fild
mov
fbstp
mov
cmp
xchg
(bad)
xlat
lock
mov
add
out
mov
push
and
jecxz
clc
out
dec
and
repz
repz
repz
test
test
js
pop
out
push
xlat
mov
popa
inc
pop
and
adc
cmp
(bad)
lea
sub
pop
sbb
pushf
imul
hlt
test
test
inc
test
pushf
jmp
shr
nop
mov
test
mov
pop
mov
shr
std
sbb
inc
shr
dec
shr
je
mov
dec
fucom
mov
sbb
cs
pop
push
mov
cmps
xor
shl
add
fwait
and
ds
and
cmp
(bad)
adc
loop
outs
xor
fmul
retf
push
fxch
dec
aad
retf
addr16
lea
sti
cmp
ins
mov
lahf
inc
sahf
mov
stc
mov
cmc
push
cmp
xchg
retf
pusha
add
inc
aas
data16
nop
xchg
xchg
scas
sbb
pushf
pop
pusha
mov
pop
pop
rcr
sub
lea
mov
xchg
add
mul
jmp
cs
rcr
ins
fsubp
add
xor
mov
cmp
in
and
es
scas
clc
push
rcr
bound
push
push
dec
push
fcmovb
mov
or
or
sbb
or
icebp
sub
push
out
jne
mov
idiv
mov
or
ss
sub
jno
je
push
mov
ret
sub
mov
jl
ds
out
pusha
xor
iret
shl
push
mov
pop
xchg
ret
dec
cli
pop
aam
fdivr
push
xchg
lea
pushf
sub
or
mov
lea
dec
cmp
and
movs
cld
mov
push
cli
mov
pop
sub
or
or
add
aad
fwait
mov
rcr
add
cmp
push
add
inc
repnz
popf
inc
sbb
sub
inc
or
movzx
adc
icebp
jecxz
xchg
fs
xlat
sub
add
nop
leave
jl
push
sbb
pop
or
cmc
and
pop
cmp
mov
jbe
fwait
stos
xchg
sti
nop
jb
mov
jmp
outs
mov
inc
add
pop
jl
pop
outs
data16
sub
fs
jb
test
call
pop
or
mov
or
push
mov
jnp
dec
ret
gs
add
dec
call
dec
cmc
retf
and
lea
jmp
pop
xchg
outs
movs
dec
sub
scas
ja
pushf
addr16
push
dec
xor
inc
(bad)
push
jle
mov
repnz
push
jne
ja
cmps
sti
mov
push
clc
shl
lds
pop
add
icebp
jbe
test
in
je
data16
pop
fisubr
ror
sub
push
push
add
fistp
test
inc
ins
xor
or
movs
sub
add
mov
inc
lods
test
sbb
mov
pop
lock
fs
pop
sub
bnd
inc
clc
into
mov
or
pop
mov
lods
xchg
lods
mov
shr
and
dec
dec
push
popf
adc
jne
push
push
dec
pop
cmp
movs
call
rol
xor
jle
aas
mov
push
inc
pop
dec
int3
xor
test
mov
or
push
in
mov
in
and
sub
gs
inc
nop
inc
cmp
xchg
xlat
sbb
push
arpl
in
loop
aad
dec
popf
add
push
mov
(bad)
inc
nop
or
mov
das
das
cmc
sub
and
pop
fwait
and
loop
xchg
popf
add
pop
mov
mov
addr16
and
mov
fwait
call
xchg
nop
mov
(bad)
push
add
call
jb
jp
xchg
push
add
ficom
imul
push
pop
into
cdq
(bad)
pop
daa
leave
pop
jne
pop
cmps
popf
pushf
(bad)
mov
mov
or
int3
imul
push
mov
scas
pop
cmps
or
(bad)
popf
dec
jne
into
push
lahf
dec
bnd
call
out
call
rcl
add
or
shl
icebp
mov
or
ins
dec
add
repnz
inc
xchg
push
mov
retf
ins
sub
push
cmps
pusha
xchg
cmp
push
jge
es
mov
retf
mov
mov
shl
popa
and
and
xor
daa
ss
inc
shr
push
and
adc
push
sub
scas
push
xchg
jae
(bad)
in
bswap
dec
out
out
mov
pop
lods
push
mov
stc
stos
add
adc
sub
imul
pop
pop
je
or
cdq
out
pop
pop
xchg
mov
or
(bad)
stos
in
out
les
add
out
jmp
cmp
cmp
mov
sbb
adc
fwait
xchg
retf
(bad)
mov
enter
les
in
cdq
ror
pop
test
jmp
pop
lods
adc
push
push
in
and
je
data16
push
pop
add
fcomp
and
add
push
jmp
pop
adc
push
adc
push
adc
jb
mov
scas
push
mov
call
adc
mov
and
adc
push
and
movs
test
mov
push
test
(bad)
in
add
lods
imul
fiadd
mov
mov
adc
dec
xchg
lock
pop
fs
fcomp
cmps
xchg
pushf
lds
jbe
adc
outs
test
mov
xchg
fld
add
mov
jmp
mov
inc
movs
mov
sbb
inc
jecxz
in
adc
mov
je
bound
and
and
pop
and
punpckhbw
dec
mov
(bad)
inc
cmp
adc
invlpg
sbb
iret
cmp
or
shr
mul
dec
in
mov
xchg
sub
pop
and
sub
pop
push
neg
sbb
fistp
ret
mov
fwait
pop
or
push
repnz
rcl
loop
mov
sub
add
ret
and
jne
pop
mov
or
inc
movs
mov
cmp
cld
imul
cmp
or
sbb
push
cmps
test
in
sub
dec
push
stc
mov
fnstcw
call
adc
push
mov
jne
jecxz
aaa
sub
ret
test
(bad)
jle
aaa
div
adc
mov
in
arpl
and
pop
cmc
or
add
call
mov
cmp
ror
test
sahf
nop
stc
or
xor
mov
aam
xchg
and
jle
fs
mov
mov
mov
push
xchg
add
sbb
repz
ret
or
xchg
sub
and
mov
sub
sbb
adc
and
fsubr
add
mov
in
xchg
ds
leave
loopne
loope
call
jmp
adc
fdiv
pusha
cmp
je
or
daa
ds
xor
or
imul
sub
out
call
stc
and
(bad)
jne
or
into
and
or
mov
pushw
cmp
je
sub
push
dec
cmp
jl
sub
repz
repnz
and
push
jns
fs
xchg
pop
jb
adc
adc
lods
mov
pop
xor
pop
mov
mov
sub
test
and
in
cmc
push
or
push
or
cmp
push
pusha
cmp
movs
sub
imul
sub
xchg
push
mov
jmp
into
jno
push
xor
sub
out
mov
xchg
enter
jne
push
adc
mov
std
dec
jmp
pop
push
jno
or
pop
jge
cs
rcr
sahf
loope
xor
push
lea
push
bound
mov
pop
hlt
dec
mov
int
pop
xor
shr
aad
mov
fwait
inc
push
stos
mov
push
xchg
ds
push
pop
and
sub
dec
mov
movs
fistp
sahf
push
fistp
das
repz
xchg
daa
fsub
and
leave
adc
ins
cmp
jp
pop
fisub
push
in
aam
movs
or
and
call
sub
mov
mov
rcl
(bad)
sti
repnz
push
outs
sbb
pop
add
je
stos
and
xchg
adc
push
push
mov
or
popf
das
daa
int
sbb
pop
pop
mov
int
cmp
dec
jmp
mov
movs
loope
ds
and
es
and
sete
lods
xchg
pop
ror
(bad)
mov
mov
push
push
ja
push
push
sar
sbb
stos
lahf
jp
and
cmps
lds
inc
int
pop
add
adc
sbb
xchg
mov
data16
cli
test
adc
or
retf
inc
popa
sbb
sbb
sub
test
arpl
(bad)
mov
les
dec
adc
sub
dec
icebp
ja
and
lahf
fs
jns
push
pop
or
dec
adc
sub
sub
xchg
mov
jmp
jae
mov
fwait
test
add
test
xchg
add
adc
and
push
pop
popa
stc
daa
enter
lods
hlt
jg
sub
icebp
rol
in
fcom
inc
mov
gs
jae
adc
(bad)
pop
scas
xor
lock
enter
lock
mov
dec
mov
push
jbe
std
cmp
inc
push
shr
adc
jl
and
leave
lea
xor
xor
out
dec
sar
sbb
push
and
shr
push
mov
lock
fs
jecxz
dec
add
push
pop
test
xchg
mov
loop
cld
cmp
fisubr
inc
cli
cmp
ret
push
and
call
in
dec
jmp
(bad)
dec
jmp
out
adc
jle
xor
jmp
sub
inc
cmps
je
lods
push
gs
ja
stc
or
sub
sub
in
push
shl
jmp
jno
sbb
mov
js
test
dec
push
dec
fs
je
fs
pushf
push
mov
sub
cli
xor
gs
lods
xor
or
sub
out
test
push
call
dec
and
push
imul
(bad)
lods
adc
inc
je
push
cmp
pop
adc
bound
out
sti
push
push
mov
jmp
cmp
leave
shl
or
int
mov
sbb
fs
adc
mov
aam
sub
xor
pushf
push
pop
daa
inc
and
or
je
or
jle
adc
(bad)
aam
(bad)
idiv
das
inc
xor
clc
push
test
xchg
aam
or
mov
jl
pop
and
inc
iret
jmp
lds
pop
ins
mov
cmp
push
cli
test
imul
dec
pop
or
mov
dec
jmp
sub
pop
cmp
div
and
test
dec
jne
jmp
dec
mov
cmps
jecxz
in
cwde
shr
xor
sahf
and
push
adc
dec
mov
cld
imul
mov
push
icebp
push
push
stos
call
lods
cld
xor
stos
cwde
xchg
mov
neg
ficom
out
hlt
add
jmp
adc
xchg
add
or
cld
or
adc
xor
lea
jmp
movs
xchg
mov
mov
(bad)
sbb
cld
(bad)
and
pop
call
inc
cmps
cmp
je
mov
jo
cmp
jmp
imul
enter
neg
pop
and
xchg
mov
xor
push
jmp
cmp
adc
xchg
cld
adc
xchg
xlat
pop
adc
add
rol
push
mov
pop
inc
mov
push
and
sti
cmp
stc
fst
jge
fs
test
aas
mov
push
and
call
mov
leave
loop
push
pop
push
test
add
aam
test
add
add
ins
dec
gs
aam
xchg
add
out
out
push
in
test
daa
adc
inc
inc
xchg
in
xor
jno
mov
inc
ins
push
adc
xor
and
pcmpgtb
mov
mov
sbb
mul
push
outs
and
call
test
dec
push
aas
push
and
pop
inc
das
(bad)
cmp
call
adc
pop
push
pop
fs
mov
or
adc
push
xor
mov
stos
lea
xchg
cmp
aam
push
sub
loope
mov
sbb
adc
data16
rcpps
cmp
(bad)
in
popf
das
jp
aam
gs
scas
int3
es
adc
and
push
pop
jnp
or
inc
mov
test
lods
test
cmps
outs
xor
inc
sub
es
cmp
xchg
repnz
out
or
add
adc
mov
fstp
loop
add
mov
and
pushf
lock
mov
dec
sub
lock
in
mov
test
pinsrw
push
aam
adc
jmp
xor
je
pop
push
push
jmp
retf
push
mov
pop
(bad)
std
and
pop
xor
push
lods
pop
cmp
mov
scas
retf
stc
push
leave
hlt
mov
gs
aas
jecxz
int3
dec
mov
or
jne
cld
rol
adc
push
cmp
das
sti
jo
cmp
jbe
xor
mov
jmp
bound
xchg
test
cmc
dec
js
push
cwde
sub
je
mov
push
arpl
or
cmp
hlt
std
mov
cmp
cmp
ja
fwait
adc
or
sub
jmp
cmp
adc
inc
push
mov
jmp
and
adc
in
mov
or
xor
mov
hlt
fsubrp
push
pop
popa
fs
enter
push
sbb
loope
and
jno
jae
cmp
xor
call
inc
push
adc
repz
pusha
aas
loope
imul
mov
adc
pushf
dec
sbb
mov
mov
mov
sti
push
call
and
je
and
std
cmp
mov
mov
loope
mov
xchg
xlat
inc
(bad)
stos
fnstcw
mov
imul
cmps
cmp
sub
add
push
sub
hlt
mov
mov
mov
test
clc
jmp
push
movs
fimul
pop
lods
xchg
sub
call
inc
popa
xchg
loopne
pop
sub
adc
popf
push
pop
adc
mov
mov
mov
mov
inc
cmc
out
aas
jmp
outs
xchg
test
lds
adc
mov
inc
daa
push
push
mov
cmp
cli
inc
dec
cmp
cmp
or
sbb
enter
sbb
adc
adc
inc
cmp
stc
pop
pop
je
jae
(bad)
and
push
xor
xor
push
or
mov
xlat
(bad)
mov
out
adc
out
pop
sti
inc
xor
mov
jmp
mov
adc
mov
pop
mov
pop
iret
(bad)
pop
sti
pop
clc
fcom
adc
adc
dec
mov
push
mov
inc
sub
mov
adc
push
adc
push
hlt
xor
mov
ins
inc
fnstcw
sbb
mov
daa
adc
je
out
inc
cmps
adc
push
(bad)
enter
or
and
(bad)
fist
pop
test
mov
pop
cmps
stos
jp
xchg
aas
xchg
cmp
leave
cld
dec
dec
cmp
stos
mov
and
enter
fmul
mov
jl
xchg
cdq
adc
outs
mov
int3
outs
xor
mov
mov
or
test
cmp
fs
aad
dec
cmp
movs
es
or
adc
mov
add
mov
push
mov
sti
nop
push
inc
mov
pop
ret
ins
scas
jge
xor
inc
mov
stc
pop
cmp
xchg
xor
sar
mul
and
mov
jmp
pop
dec
aaa
jns
sbb
sbb
jmp
cmp
ja
outs
pop
jmp
xor
sbb
les
pop
adc
aas
push
in
cli
cmp
cwde
aam
push
and
call
xor
call
in
inc
or
inc
cmp
jne
pop
ja
mov
movs
pop
lahf
sbb
sahf
pop
hlt
mov
dec
je
jb
pop
or
xlat
dec
and
and
mov
and
add
and
mov
push
in
cdq
dec
jmp
mov
mov
adc
std
sbb
in
mov
mov
lock
sbb
shr
jo
ins
inc
je
fistp
icebp
and
scas
in
push
aas
cmp
sbb
dec
jne
je
jno
sbb
push
or
jmp
sub
(bad)
sbb
sub
div
jno
mov
jl
dec
pop
fcos
push
sbb
and
bound
retf
test
imul
inc
lock
fst
cli
and
add
adc
addr16
in
adc
into
dec
adc
cmp
leave
push
pop
xor
jne
adc
or
je
push
mov
mov
mul
mov
enter
fs
add
arpl
out
xchg
jns
mov
ja
mov
jmp
jg
out
cmps
mov
scas
js
or
ins
popf
push
repnz
ret
sub
es
push
sub
and
jmp
enter
sub
nop
je
xchg
lahf
sbb
jmp
sub
dec
std
sub
mov
xor
pop
lea
loope
add
xor
nop
adc
rol
mov
sbb
fst
test
repnz
leave
push
cwde
fidiv
xchg
inc
add
pop
inc
mov
and
out
inc
add
dec
add
xchg
adc
lods
aam
aas
jno
jmp
(bad)
in
imul
test
dec
mov
mov
std
dec
call
mov
push
push
mov
mov
and
xor
call
test
leave
out
xchg
and
std
jle
in
cmp
xlat
div
in
pop
and
inc
popa
add
xchg
xor
mov
jmp
mov
jp
rep
inc
inc
test
loopne
mov
shl
mov
push
xchg
sahf
inc
jmp
inc
pop
sbb
sub
push
mov
retf
int3
jnp
sti
fucomp
movs
hlt
pop
lods
or
call
shl
add
mov
and
ss
cmp
cs
or
mov
push
adc
ret
dec
mov
popf
adc
pop
adc
cmp
and
loope
std
xor
pcmpeqw
adc
or
xchg
jne
daa
xor
cmp
je
ret
jne
push
out
xor
push
inc
dec
rcr
cmp
inc
sbb
scas
inc
pop
les
xchg
or
push
add
cmc
pushf
cmp
push
rol
xchg
lock
mov
xchg
in
into
je
je
or
push
adc
xchg
call
push
pop
inc
xor
daa
out
xchg
stos
gs
imul
clc
(bad)
hlt
movs
into
and
call
gs
out
mov
adc
mov
out
push
dec
fisubr
scas
push
inc
sbb
enter
pop
push
enter
sbb
ins
mul
jmp
adc
sub
push
push
inc
daa
cmp
push
out
pop
sbb
push
mov
adc
push
sub
icebp
and
xor
mov
(bad)
and
or
or
sub
mov
call
adc
cdq
dec
push
daa
and
jge
jae
fsubr
and
std
mov
mov
mov
pusha
mov
leave
das
jecxz
xlat
cwde
dec
push
mov
xchg
sbb
push
push
pop
mov
pop
jg
add
push
call
mov
out
dec
retf
neg
or
in
leave
test
iret
test
mov
xchg
jmp
stos
out
xchg
stos
push
dec
sti
sub
inc
push
and
jnp
sbb
ja
sti
adc
xor
dec
cli
clc
xchg
xchg
xlat
call
out
icebp
sti
shl
sbb
test
adc
mov
repnz
mov
cmc
(bad)
outs
sub
push
xor
out
push
jmp
sbb
jmp
push
sbb
push
cdq
mov
clc
jmp
icebp
stc
retf
and
pop
cmp
add
repnz
mov
inc
add
out
mov
clc
push
mov
xor
push
leave
xchg
push
adc
sub
repz
xchg
(bad)
mov
retf
or
sbb
add
or
or
or
xchg
sbb
not
stos
loope
push
movs
xor
sub
hlt
inc
rcr
pop
aam
daa
ret
sub
mov
xor
jb
lods
aam
sar
or
repnz
mov
dec
ins
jnp
pop
or
nop
in
adc
pop
(bad)
adc
and
imul
ret
dec
(bad)
cwde
jecxz
repnz
jne
push
clc
in
sub
or
sub
push
cld
mov
cmp
jnp
out
int3
sub
enter
lea
je
push
mov
push
adc
pop
jmp
dec
sbb
test
mov
mov
loopne
addr16
mov
out
adc
mov
test
movs
shr
out
xchg
adc
push
sub
and
sti
lods
adc
(bad)
or
mov
cmp
loopne
jmp
push
imul
mov
(bad)
dec
xchg
popa
fwait
pop
(bad)
push
mov
xor
adc
cmp
mov
bnd
xchg
ja
mov
mov
popa
lods
push
push
sbb
lods
iret
jo
je
addr16
mov
dec
mov
cmp
stos
or
or
mov
pop
jmp
test
mov
mov
lahf
mov
retf
sub
cmc
outs
dec
in
jmp
cmp
ret
inc
out
dec
cmps
call
js
imul
or
xor
adc
xor
mov
mov
push
xor
adc
jmp
pop
jle
xor
out
cmp
in
adc
mov
inc
sbb
mov
add
inc
out
or
and
and
lods
test
mov
mov
pop
sbb
and
call
rcl
dec
add
inc
gs
cmp
jmp
adc
add
push
loope
sbb
jge
ret
jnp
mov
cli
cmovs
out
mov
ficom
fidiv
xor
loopne
pop
jg
jl
loop
xchg
fwait
jp
in
loope
mov
cmp
div
outs
loop
stc
out
cmp
pop
adc
out
sbb
pop
adc
fbld
inc
je
push
xor
ret
in
cmp
ficomp
fstp
les
push
push
lock
cld
xor
cmps
sahf
push
sbb
push
and
xor
jb
cmp
iret
xchg
cmps
pop
push
xchg
and
sbb
jg
jge
js
xor
loope
popf
and
inc
stc
inc
les
or
cmp
icebp
dec
loope
lock
ror
mov
adc
test
test
and
mov
and
sub
into
mov
push
xor
adc
xor
mov
xchg
add
(bad)
jge
and
out
or
call
ret
hlt
push
movs
and
dec
repnz
les
mov
mov
call
push
xchg
push
fwait
dec
and
ss
jmp
adc
xchg
cmp
push
push
in
pop
jbe
btc
and
push
push
or
xor
fcmove
inc
ret
shl
loope
dec
adc
test
or
cmp
mov
pop
mov
sub
sti
in
std
pop
enter
xor
pop
push
or
in
data16
fbld
adc
loopne
fdivr
dec
xchg
push
inc
inc
adc
ss
mov
enter
inc
sti
ds
int3
jmp
adc
and
inc
fs
mov
inc
push
and
sub
add
test
ret
nop
add
ficomp
ss
(bad)
out
or
mov
shl
fimul
xchg
in
hlt
inc
xlat
xchg
int3
mov
fnstsw
fnstenv
add
mov
push
mov
cmp
adc
mov
enter
mov
xor
dec
call
dec
ror
dec
dec
xchg
jmp
mov
mov
mov
or
adc
xchg
adc
iret
xchg
(bad)
fdivr
jmp
sbb
in
adc
mov
push
leave
cmp
cmp
(bad)
mov
inc
pop
mov
sbb
mov
xchg
cmp
mov
in
dec
sub
mov
xor
mov
bound
mov
fdiv
mov
inc
sub
nop
and
dec
ficomp
sbb
das
inc
enter
sar
lods
adc
(bad)
leave
test
and
call
and
lock
jmp
sbb
stc
and
scas
bound
repnz
xor
adc
push
pop
lods
pop
pop
sbb
or
and
pop
or
sub
push
push
jle
cmp
clc
nop
mov
fimul
sub
or
jmp
inc
sbb
(bad)
cmp
out
pop
ss
test
movs
test
in
ret
lahf
andps
scas
and
mov
inc
push
test
retf
sub
sahf
sbb
nop
and
push
sbb
add
xor
out
sti
fdivr
sub
xchg
mov
lock
mov
inc
outs
movs
mov
sbb
adc
scas
xor
xlat
jp
add
jg
mov
ds
mov
dec
sub
adc
adc
cld
and
ss
es
pop
add
push
je
add
push
cmps
push
das
lahf
mov
jmp
jl
adc
enter
es
add
lock
pop
add
mov
sub
sbb
retf
pop
jbe
ficom
or
outs
add
in
sahf
out
xchg
xlat
clc
dec
fsub
jle
add
stc
imul
and
add
pop
hlt
fld
out
bound
rol
jnp
popa
test
(bad)
add
mov
dec
cmp
fiadd
in
add
(bad)
shr
add
inc
or
mov
add
lds
punpckhdq
push
mov
mov
ins
inc
add
mov
pop
pop
jge
call
push
sar
mov
cmps
xchg
nop
mov
sar
add
test
fisttp
stos
add
fadd
mov
lea
mov
add
in
inc
aas
sub
leave
jmp
enter
aam
mov
adc
push
push
add
mov
not
in
mov
jnp
xchg
mov
fild
loope
ret
jecxz
je
(bad)
push
mov
adc
hlt
adc
push
cmp
ds
add
retf
mov
cmp
test
sub
xchg
push
sub
in
rol
les
pop
rol
add
jp
xchg
add
into
dec
sub
and
cmp
jl
inc
dec
mov
lods
repz
jae
and
das
mov
add
fsub
test
sbb
mov
cmp
call
cmpps
add
ja
mov
(bad)
fcmovne
cmps
pusha
xchg
inc
enter
(bad)
fsub
push
push
xor
sub
jmp
xchg
dec
(bad)
xor
push
add
cmp
movs
inc
clc
test
jnp
loop
pusha
ds
scas
inc
adc
test
add
popa
push
dec
mov
vphaddubw
mov
lds
add
jmp
xor
sti
lahf
inc
jmp
cmp
lds
mov
pinsrw
cs
js
push
add
mov
xchg
jle
sbb
inc
dec
ret
and
cmp
in
(bad)
dec
xchg
jbe
popa
add
jmp
and
mov
cmp
fadd
shl
lahf
gs
add
aad
cli
bound
out
add
sub
fwait
cld
mov
pusha
shl
and
sti
sbb
sub
psubusw
cmp
das
add
ds
daa
nop
jo
add
lods
int
or
ret
dec
mov
daa
add
xchg
stos
pop
mov
fmul
mov
mov
mov
or
mov
es
xchg
call
pop
add
xchg
or
std
mov
add
push
cwde
add
movs
(bad)
in
mov
(bad)
stc
ret
sub
xchg
out
add
and
nop
pop
verr
or
add
mov
in
add
enter
push
shl
mov
cmps
mov
das
rcl
mov
and
and
outs
cli
mov
inc
cmp
iret
ret
out
add
int
or
mov
mul
sbb
push
pop
jg
in
jbe
cmp
inc
cmps
add
jmp
popa
iret
dec
jmp
dec
push
add
imul
add
xchg
cmp
shr
jmp
pop
cld
push
shr
lea
xor
mov
sbb
mov
jnp
mov
adc
call
loopne
repnz
mov
and
jae
dec
add
mov
pop
mov
add
pop
and
push
jbe
cmp
leave
xor
pop
sbb
inc
cmps
and
(bad)
xor
mov
sbb
add
icebp
xor
loope
outs
sub
(bad)
scas
jb
add
sub
or
bndldx
aam
arpl
jmp
add
stos
cmp
xchg
shl
add
mov
cmps
int3
fld
cmp
js
or
sub
add
xor
jbe
dec
lods
mov
lea
movs
nop
sbb
dec
div
jne
add
ficomp
add
xchg
test
xchg
in
pop
jns
add
(bad)
ror
into
pop
aad
or
add
dec
jl
mov
cmp
loop
gs
cmp
xor
xchg
adc
imul
mov
or
pop
jne
add
frstor
mov
cmp
movs
sub
rcr
inc
jl
aam
(bad)
clc
cmp
add
push
out
mov
call
cld
clc
lds
in
inc
add
pop
sbb
pop
xor
sub
add
mov
fmul
out
xor
rsqrtps
fucom
popa
loop
outs
fsubp
and
add
repz
add
xor
mov
mul
mov
lods
jp
mov
repnz
outs
add
test
hlt
ret
loope
add
sar
scas
push
dec
mov
fist
xor
cmp
or
push
into
add
xor
cmp
add
dec
ja
stc
mov
in
add
jmp
cmp
popf
int
xchg
add
pop
je
lods
out
push
popa
mov
inc
lea
movs
pop
cmp
(bad)
cmp
push
xor
sub
adc
fs
scas
xchg
jmp
retf
xchg
fadd
xor
pop
add
repz
cmp
jge
test
aam
push
pop
ins
mov
popa
sbb
sub
gs
loop
push
adc
mov
dec
sub
cmp
loope
mov
adc
cmp
push
(bad)
sbb
cld
add
out
pop
(bad)
xchg
jp
pop
test
jnp
into
and
pop
rol
arpl
std
retf
xor
jae
jecxz
aas
js
xchg
call
jmp
pop
add
inc
dec
cmp
adc
out
xlat
jg
and
jmp
add
sbb
dec
sub
call
xchg
jmp
cdq
and
xor
add
xor
das
add
sub
xchg
xor
push
sbb
pop
mov
lea
push
cmps
loopne
mov
mov
ins
jb
addr16
ret
xor
push
add
jp
ror
rcl
paddusb
inc
mov
dec
add
dec
add
or
add
cdq
test
add
or
inc
movs
jge
addr16
jmp
pop
clc
cli
imul
add
pop
mov
add
fwait
xor
add
ds
add
imul
fild
dec
jecxz
mov
jmp
out
add
xchg
inc
retf
(bad)
std
sub
mov
add
pusha
jnp
jmp
add
xor
dec
mov
or
sub
mov
and
stos
add
aas
shr
in
aam
push
xor
xchg
pop
jle
mov
xlat
or
stc
retf
jae
dec
mov
or
ret
mov
xor
das
std
(bad)
jl
aam
sub
xlat
push
sbb
xor
jmp
mov
cmp
repz
js
out
add
sbb
cli
clc
adc
xchg
test
sub
stos
push
and
and
cmp
fs
push
enter
cmp
pop
add
and
adc
ins
and
es
das
(bad)
clc
fiadd
dec
scas
out
fdiv
test
add
not
push
inc
push
mov
and
or
pop
cmp
mov
add
dec
push
adc
fcmovu
rcr
pushf
je
jecxz
xor
movs
inc
mov
and
out
pop
inc
cmp
adc
fcmovb
mov
data16
das
fs
push
add
mov
push
jmp
(bad)
nop
cmp
inc
rol
or
pushf
(bad)
je
dec
mov
js
(bad)
adc
sub
mov
lods
aas
loope
sbb
adc
sti
inc
add
sub
sbb
mov
pop
ror
xchg
arpl
sar
push
data16
cmp
iret
jnp
xchg
jge
mov
or
adc
rcl
cld
(bad)
in
add
rol
imul
dec
or
lahf
sar
jmp
jle
xchg
add
mov
bnd
jg
setns
add
adc
idiv
pop
imul
inc
mov
outs
push
push
add
xor
in
xor
sti
add
mov
add
inc
test
loop
clc
(bad)
loop
clc
ss
cmc
or
inc
jecxz
jecxz
and
jns
dec
pop
push
arpl
outs
sbb
sbb
call
dec
rol
daa
les
dec
mov
xchg
add
lahf
xchg
das
mov
pop
std
or
je
fadd
ficom
push
lods
(bad)
and
and
addr16
mov
add
adc
push
add
jmp
in
jns
ret
in
mov
sar
pop
and
sub
sub
in
and
fadd
jo
das
je
mov
add
add
sbb
sbb
clc
in
or
xchg
push
inc
adc
mov
je
ss
dec
in
push
pop
(bad)
in
jb
xor
and
push
and
xor
or
push
(bad)
movs
stos
mov
xchg
mov
cmp
adc
xor
or
pop
sahf
sbb
sub
sbb
or
add
fucomi
push
scas
adc
push
fsub
jo
dec
add
adc
test
sub
lock
stc
cmp
and
cmp
jae
call
sub
add
std
add
or
push
fmul
cmp
mov
dec
push
push
idiv
cmp
xor
pop
or
push
ret
gs
add
les
add
jne
and
or
pop
jg
bound
jbe
mov
mov
mov
mov
gs
sti
repnz
jecxz
xchg
and
es
aam
mov
cmc
xchg
add
or
hlt
test
ret
push
mov
in
sbb
push
and
xchg
sbb
test
adc
mov
in
jmp
push
mov
loope
sbb
inc
inc
and
xchg
ss
inc
mov
mov
lahf
jl
add
shr
shl
jge
fmul
jmp
push
fcomp
add
ja
xor
add
add
jge
pop
arpl
in
xlat
cli
or
push
or
ret
data16
jae
inc
inc
enter
shr
ret
xchg
cmp
movs
adc
jb
pop
lods
sub
fs
outs
cld
mov
call
inc
jns
pop
sti
in
sbb
sub
cmp
jb
into
ret
lock
test
sbb
xor
pop
add
test
stc
enter
(bad)
out
rol
cmp
cli
test
clc
adc
xchg
or
mov
xor
lods
clc
sub
mov
sti
add
mov
inc
sub
adc
sbb
lea
hlt
inc
jg
xor
push
clc
jae
jle
dec
add
add
cli
bound
retf
push
or
xchg
cdq
les
or
je
sbb
xchg
or
inc
cld
mov
xor
fs
or
mov
dec
mov
push
and
dec
test
xor
and
push
enter
jl
aaa
add
jns
in
cmp
push
lea
cmp
pop
stos
jmp
push
jns
rcl
ins
xchg
adc
or
mov
ins
cmp
imul
sbb
cmp
mov
sub
mov
lea
nop
mov
sub
rol
jmp
or
in
ja
jae
imul
enter
mov
adc
nop
jne
or
in
shr
push
xchg
adc
sub
cmps
cmp
stos
inc
xchg
cdq
daa
jnp
es
mov
inc
mov
out
shr
sub
mov
fbld
iret
jb
sbb
and
jno
ficomp
mov
jl
cmp
enter
pop
icebp
push
jnp
ds
xchg
xchg
xor
enter
out
mov
sub
scas
and
inc
shr
stos
cmp
sub
out
shr
sub
and
loopne
xchg
add
rol
inc
(bad)
cli
xor
jns
or
fiadd
pushw
sub
out
mov
test
(bad)
mov
and
push
jmp
mov
add
scas
dec
cmp
test
and
cmp
jae
xchg
dec
out
mov
retf
xor
xchg
sahf
add
loope
aaa
xlat
push
pop
lds
sti
pop
in
dec
int3
scas
inc
add
addr16
lea
and
ja
add
sub
inc
bound
ins
sbb
int3
push
repz
jp
mov
loope
xor
fiadd
out
in
(bad)
scas
int3
cmp
xor
ja
inc
and
popf
fiadd
sub
call
inc
fcmove
sbb
inc
push
adc
sbb
test
xchg
sar
sbb
and
ror
add
mov
cmc
dec
or
mov
jmp
xchg
adc
inc
dec
jl
sub
cmps
ret
loopne
sub
enter
stos
xchg
pop
or
repnz
xchg
icebp
out
add
xchg
dec
sub
push
add
push
stos
data16
jne
add
std
inc
je
cmps
imul
add
push
pop
(bad)
in
out
ins
add
sar
mov
sahf
pushf
bound
pusha
jg
push
sbb
adc
jbe
inc
xor
push
add
push
add
push
or
push
(bad)
push
inc
pop
pusha
mov
dec
iret
xor
mov
sub
fdiv
sbb
std
loopne
ins
add
(bad)
loope
cmp
or
mov
(bad)
nop
sub
sti
pop
in
in
clc
add
pop
icebp
fnstsw
pusha
push
movs
in
in
dec
add
cmps
push
xchg
out
shl
push
(bad)
adc
rcl
add
cdq
sbb
adc
inc
mov
leave
rol
xor
inc
hlt
pop
xchg
add
add
pop
data16
in
call
scas
jp
mov
sbb
test
add
aaa
pop
loope
mov
mov
fist
add
pop
out
adc
cmp
imul
ins
mov
les
add
cld
push
dec
add
pop
and
lods
out
add
add
in
bound
adc
or
jge
jno
imul
dec
loop
and
xchg
lahf
(bad)
fcomp
add
mov
dec
jb
shl
adc
xchg
push
int3
test
and
or
xor
xlat
test
add
int
imul
repnz
add
cmp
rol
je
in
add
call
fdivr
push
in
add
fild
add
out
pop
aas
inc
add
adc
rol
sbb
add
dec
inc
loopne
jnp
dec
das
jecxz
rcr
imul
vmwrite
xor
lea
cmp
call
cmp
sbb
daa
pop
or
jmp
add
push
out
cmps
dec
repz
add
div
add
push
adc
mov
daa
adc
stos
cmp
inc
rol
sub
fs
fist
outs
imul
hlt
rol
(bad)
xor
mov
cmp
ror
inc
loopne
adc
repnz
pop
sub
mov
cmp
sub
retf
add
push
lock
fbld
ud1
je
shr
cld
(bad)
sahf
add
xchg
(bad)
shl
xor
xchg
jo
fiadd
cli
inc
push
push
or
jno
cmp
inc
nop
hlt
mov
pop
jmp
ret
ficom
mov
enter
stos
jmp
in
nop
mov
loop
into
pop
ret
add
push
ss
rol
xchg
sub
ja
or
xor
xchg
sbb
sub
rol
stc
xor
out
lods
sbb
dec
xchg
cmp
out
sti
push
add
sbb
inc
into
jp
out
loop
add
stos
out
xor
or
fnstcw
add
jo
xchg
sahf
dec
loopne
in
add
cmc
and
stos
not
and
push
lea
push
mov
pop
jno
hlt
or
jae
push
add
add
rol
adc
out
push
jl
aaa
fdiv
and
pusha
add
push
popf
call
xchg
cld
fld
test
mov
or
add
xor
xchg
outs
dec
fcom
(bad)
pop
out
push
pusha
mov
shl
gs
in
add
sbb
push
fist
and
push
adc
std
add
push
sti
sub
loopne
imul
test
push
add
sub
ja
add
add
mov
call
fidiv
cwde
push
call
cld
inc
ins
fwait
mov
loopne
jl
enter
jmp
(bad)
nop
jle
cmp
in
or
add
cmp
inc
inc
fstp
pusha
arpl
push
mov
xor
adc
and
adc
pop
add
add
cmp
scas
sub
iret
int3
adc
addr16
stos
adc
pop
jnp
xlat
mov
pop
sbb
jmp
jae
rol
sub
js
mov
xchg
pop
and
add
fs
jne
mov
test
add
stc
xor
add
inc
push
sbb
dec
in
lock
test
ret
jo
out
ss
inc
push
outs
pop
aaa
add
cmc
and
or
mov
movs
dec
test
cmp
push
inc
cmc
(bad)
push
retf
fld
cmp
faddp
dec
push
or
jg
sbb
dec
cmp
add
call
cli
adc
rcr
aam
je
add
mov
jnp
dec
dec
sub
xchg
das
movs
xor
adc
les
sub
cmp
ss
xor
jmp
add
into
in
mov
and
adc
push
dec
dec
or
nop
push
mov
add
add
mov
jmp
or
push
sbb
pop
stc
into
retf
mov
sbb
loopne
jo
es
ficomp
arpl
dec
aaa
repz
(bad)
fnstcw
add
aad
add
jns
(bad)
add
mov
mov
fst
or
sbb
push
pushf
enter
mov
je
jl
dec
jp
mov
mov
shr
retf
scas
dec
xchg
add
call
pop
rol
ds
adc
and
je
sbb
popf
dec
mov
or
xchg
pop
sbb
pop
inc
add
mov
add
mov
inc
out
add
fstp
inc
loopne
cmp
ss
jle
add
movs
dec
jmp
sbb
xchg
add
inc
aam
push
pop
enter
stc
pop
je
std
push
add
outs
jg
or
add
mov
xor
sbb
les
jl
and
adc
push
mov
in
(bad)
adc
div
cdq
add
xchg
dec
jb
jle
add
mov
aad
mov
pop
cmc
sub
les
add
cwde
push
(bad)
popf
repz
add
sahf
mov
mov
mov
dec
sbb
add
mov
inc
lods
add
cwde
jnp
je
lock
les
popf
cmp
push
xsaves
outs
fadd
sete
jl
pop
(bad)
sbb
leave
and
mov
add
jp
lahf
jl
mov
iret
inc
test
inc
xchg
pop
in
inc
scas
rol
sbb
cmp
add
push
mov
adc
ret
sub
cmp
pop
add
or
mul
daa
mov
adc
mov
add
mov
mov
shr
xchg
jb
add
push
fiadd
inc
push
push
add
repz
test
out
inc
imul
lahf
add
push
(bad)
outs
inc
xchg
xor
push
sbb
pop
mov
and
push
inc
or
push
pushf
fst
pop
add
mov
dec
repnz
dec
push
cmp
inc
clc
adc
sbb
add
es
lahf
pop
addr16
ret
dec
(bad)
mov
add
sar
mov
xchg
cwde
add
cmp
test
add
mov
imul
mov
test
push
or
ror
xchg
or
xor
add
mov
fwait
nop
daa
mov
fidivr
(bad)
dec
into
sub
clc
mov
add
sub
xchg
xchg
fiadd
bnd
cmp
loope
bound
test
jno
lahf
fadd
xchg
inc
cmp
cmp
(bad)
jo
mov
sahf
sbb
sbb
call
icebp
and
mov
jmp
adc
int3
sbb
rcr
mov
pusha
and
fld
int
mov
xor
mov
sahf
cwde
mov
and
(bad)
(bad)
mov
hlt
test
sbb
add
or
cwde
lds
mov
cs
pop
xchg
popa
fst
jne
shl
push
push
in
stos
add
ins
out
sbb
add
sbb
jnp
xor
call
neg
test
add
aad
and
cmps
clc
aas
mov
sub
pop
out
xor
add
cmp
add
mov
outs
in
mov
dec
inc
aad
xlat
test
or
cmp
ja
add
push
in
push
pop
sbb
dec
sub
sbb
sbb
and
xchg
mov
inc
out
popf
jnp
jle
and
cmp
or
cmps
mov
cmp
jmp
add
ja
inc
cld
xchg
sbb
cs
ror
add
arpl
or
mov
add
jae
ja
cwde
push
pop
hlt
mov
jl
cmp
add
xor
mov
(bad)
mov
test
adc
or
mov
push
div
fwait
outs
inc
cmp
jbe
scas
loop
xor
pop
mov
js
icebp
push
jnp
ds
mov
in
out
cmp
test
add
adc
les
out
xor
or
je
in
out
cmp
in
pop
adc
or
mov
mov
jo
jl
icebp
sbb
xchg
inc
push
and
cmp
xor
and
fs
stc
push
jnp
retf
pop
push
pusha
sbb
jge
fs
cmp
mov
and
call
add
lock
test
in
cmp
pop
fisub
iret
jno
fst
enter
ins
jl
mov
push
jnp
xlat
pop
enter
cmp
cmp
push
fisub
iret
jno
fst
enter
jl
push
dec
inc
hlt
and
and
pop
push
ja
jae
imul
test
mov
pop
push
push
xchg
stos
push
enter
ret
sbb
cli
mov
cmp
cmp
retf
add
mov
push
mov
xchg
xor
mov
mov
mov
mul
enter
add
adc
sbb
in
add
inc
not
mov
add
aad
aas
or
lods
add
xchg
mov
add
push
aaa
shl
xchg
mov
call
loop
in
aam
ret
retf
push
dec
and
jnp
inc
std
jb
lock
xchg
push
or
in
not
dec
pop
add
and
add
xchg
jns
pushf
push
add
adc
mov
stc
cmp
retf
pop
in
ds
mov
fwait
out
add
push
retf
gs
xchg
add
push
mov
sub
aam
rcr
pop
sbb
mov
ins
cmp
arpl
in
inc
add
jb
neg
lock
add
xor
adc
pop
out
jne
add
gs
add
mov
outs
mov
out
rol
xor
xchg
loop
and
pop
pop
add
lahf
ins
into
mov
inc
inc
adc
add
or
ja
int3
mov
add
mov
int
arpl
ins
mov
fcomp
or
daa
outs
pop
dec
fiadd
and
icebp
lahf
out
add
dec
sbb
add
icebp
cmp
pop
lea
daa
push
xchg
mov
pop
cdq
mov
add
push
lock
lods
jle
jge
add
jle
jns
adc
pop
cmps
xlat
cmc
add
lock
mov
jg
sub
test
jge
add
imul
push
jle
shl
push
cmp
xor
in
dec
shr
inc
add
hlt
cmp
add
fnstcw
fdiv
push
ds
push
lods
movs
sbb
xchg
sbb
or
ins
int3
and
add
jg
imul
cmps
sbb
imul
(bad)
in
add
test
(bad)
fxch
mov
add
mov
jmp
cmp
js
cmp
add
xchg
punpcklbw
sub
movs
add
popa
fst
add
dec
div
in
sbb
add
adc
fsubr
sar
mov
mov
jnp
pusha
ficom
out
xchg
add
and
inc
call
mov
(bad)
xchg
inc
lea
add
xchg
xchg
retf
push
push
jge
cmp
aam
mov
std
push
xchg
mov
adc
hlt
cmp
mov
mov
fist
scas
out
scas
pop
mov
data16
rol
xchg
xchg
fisttp
pusha
dec
fs
rol
xchg
cmp
lahf
xchg
push
int
cmp
pushf
add
mov
add
outs
out
dec
push
(bad)
out
add
sbb
repz
ss
rol
sbb
add
paddq
aas
cmp
outs
loopne
cmp
scas
sbb
js
sbb
call
adc
aas
xor
add
bnd
adc
xchg
sub
not
mov
js
mov
mov
dec
cli
cmp
in
out
fsubr
ja
hlt
or
mov
lea
iret
jno
fcomp
sbb
xchg
push
inc
fist
or
cli
sbb
repnz
mov
cmp
jno
repnz
cmp
inc
or
scas
int3
icebp
push
jnp
ds
xchg
sub
pop
inc
xor
xchg
xor
jl
cmp
sbb
dec
dec
jns
ja
xor
ja
pusha
js
cli
test
xor
adc
mov
enter
cmp
cmp
xchg
in
cmp
mov
sub
adc
mov
enter
cmp
cmp
pop
sub
clc
xchg
jle
inc
les
xor
adc
mov
and
nop
out
loope
jcxz
mov
dec
jge
add
or
cmp
sbb
add
mov
in
dec
sub
xor
push
aam
jl
mov
(bad)
push
xchg
jo
mov
cmp
inc
dec
jne
pop
add
pop
add
ja
fdivr
xor
cmp
inc
add
or
test
scas
stc
jnp
jae
push
cwde
dec
cmps
pushaw
jns
cdq
pop
xor
push
ja
mov
rcl
ror
call
xor
lods
xor
je
call
shl
push
and
pushf
jae
xchg
js
lds
xchg
jne
retf
xchg
pop
add
ror
push
add
(bad)
lock
add
adc
das
pusha
add
sbb
jmp
mov
in
stc
mov
inc
ret
add
mov
jge
and
ja
mov
xlat
mov
jae
out
lea
mov
push
add
or
cmp
xchg
ss
add
rcl
out
fiadd
add
int
add
lds
lahf
rol
sbb
lea
rcl
cmp
clc
add
sbb
idiv
add
or
bound
and
inc
pop
or
add
pop
jo
dec
int
add
outs
mov
pop
out
add
mov
stos
add
inc
mov
xor
sbb
fild
movs
add
ret
mov
fst
jp
mov
xor
aad
mov
jg
aam
xchg
add
gs
into
add
and
lahf
aas
retf
(bad)
aam
sub
lock
imul
sbb
inc
push
neg
ror
sbb
in
xor
lds
jae
add
add
shr
je
ret
jp
cmp
add
xchg
fcom
imul
cmc
pop
ins
jle
fdivr
ret
or
stos
fld
push
push
call
stc
shl
sub
and
cmp
push
inc
and
and
jno
pop
pop
xor
pop
mov
inc
sbb
xchg
sbb
jl
cmp
retf
and
mov
loop
push
stc
sbb
and
icebp
enter
jnp
cmp
or
jl
cmp
push
or
jge
or
mov
shl
cld
push
cmp
xor
and
ja
jae
imul
test
jl
cmp
pop
jo
mov
mov
stc
mov
loop
imul
push
aam
jbe
cld
inc
stc
lahf
ds
fdivrp
(bad)
leave
push
xor
ror
test
movs
mov
xor
neg
jge
xchg
add
clc
jnp
cmp
cmp
test
sub
fbstp
pop
push
enter
repz
(bad)
sahf
xchg
sbb
inc
clc
je
or
shl
pop
mov
push
xchg
call
pop
dec
in
(bad)
rcl
cmp
(bad)
pop
sbb
and
clc
mov
push
int3
push
jl
cmps
js
xchg
pop
add
jnp
sbb
sbb
test
shl
fs
mov
push
xchg
in
add
popf
jns
adc
shr
sar
push
test
loopne
mov
cdq
push
sub
in
mov
pop
pop
loop
add
push
in
test
add
int
and
outs
daa
jo
add
scas
movs
ret
add
outs
shr
add
fisttp
retf
jbe
js
call
clc
add
pushf
jecxz
inc
mov
pop
xor
retf
pop
icebp
sub
rol
sbb
nop
daa
stos
add
into
mov
mov
add
rol
jle
cmp
not
retf
out
movs
xor
sub
loopne
retf
sbb
icebp
add
xchg
and
adc
popf
add
or
add
into
cmp
add
mov
and
mov
cmc
(bad)
daa
pushf
mov
mov
xor
fs
add
out
add
sbb
cmp
sub
mov
fwait
ins
add
addr16
shr
jecxz
cmp
shl
call
and
push
(bad)
sub
dec
push
fsubr
pop
inc
lds
lahf
mov
pop
pusha
adc
mov
and
xor
mov
push
sub
aad
pop
mov
add
js
or
enter
add
aas
fisub
nop
jns
or
aaa
add
sar
pop
add
iret
cmp
add
pop
in
jp
and
mov
mov
movs
mov
cmp
sti
xlat
xchg
rol
xor
fldenv
or
lock
add
sbb
push
xchg
jmp
or
push
mov
lahf
mov
cmp
add
cmc
push
inc
jbe
add
push
cwde
xchg
iret
add
jecxz
out
movs
adc
mov
push
lds
add
inc
div
outs
mov
cmp
xor
stc
lods
add
ins
cmps
pop
movs
cmp
fstp
mov
xchg
add
jl
mov
add
std
lock
push
sub
push
fs
xor
cmc
cmp
mov
fcomp
fadd
into
ret
sbb
ror
sub
fsubr
add
xchg
test
inc
cmp
iret
cli
sahf
call
movs
mov
test
push
outs
inc
lds
iret
mov
add
add
or
ja
(bad)
cmp
cwde
cmp
aas
jb
add
test
xor
push
push
mov
leave
push
clc
addr16
xor
sar
or
add
sti
(bad)
lahf
test
jo
fisub
cdq
mov
(bad)
imul
pop
ins
xchg
icebp
pop
shl
push
sub
cmps
pop
sbb
sbb
out
test
add
ror
or
enter
outs
xchg
jecxz
inc
add
femms
arpl
lahf
add
mov
jns
es
add
arpl
out
mov
je
pop
mov
psllw
xchg
xchg
inc
mul
push
dec
lock
xchg
mov
add
sub
mov
push
and
jb
(bad)
dec
rcl
pmulhw
cmp
sbb
lock
fs
add
mov
add
test
mov
int3
out
adc
jo
add
sar
dec
mov
mov
outs
lahf
add
rol
jge
mov
and
fnstenv
(bad)
jle
sbb
push
push
sahf
inc
add
loopne
jo
cmp
ret
add
inc
xor
dec
popa
mov
cmp
pushf
push
dec
cs
rcl
jno
mov
add
push
mov
mov
cmp
mov
dec
pop
cwde
add
adc
adc
movs
clc
mov
int
pop
mov
add
movs
in
iret
fs
clc
ds
add
inc
xchg
pop
imul
sbb
add
or
add
add
in
xchg
sbb
mov
mov
sub
icebp
(bad)
movs
adc
popf
add
and
xchg
hlt
retf
mov
out
nop
movs
jl
pop
data16
lods
frstor
sub
gs
lds
dec
daa
mov
mov
and
and
cwde
sbb
loopne
mov
add
mov
test
clc
add
adc
pop
js
xor
in
add
leave
aad
idiv
adc
cmc
out
sub
cmp
jne
out
add
ret
and
or
stc
inc
xchg
xchg
dec
add
sbb
sub
or
call
sbb
and
adc
ds
xor
xor
pop
mov
add
icebp
fdivrp
frstor
mov
mov
push
lahf
scas
and
jl
test
(bad)
test
add
add
jmp
cmps
sbb
fidiv
inc
or
mov
or
loop
test
push
xchg
test
mov
sbb
enter
push
xchg
nop
fsub
sub
or
dec
cmc
outs
das
aam
ret
add
daa
push
push
add
lods
int3
in
push
jbe
dec
add
aaa
push
mov
sub
push
out
jmp
mov
pop
mov
retf
mov
cmp
sub
jg
idiv
mov
es
cs
enter
int3
push
outs
pop
jecxz
scas
mov
pop
mov
outs
rol
and
pop
imul
sbb
fimul
add
mov
scas
data16
imul
aam
dec
dec
je
jno
out
movs
lock
mov
test
jecxz
add
jmp
les
cmp
push
cmp
add
(bad)
ficomp
add
fistp
adc
js
cmps
test
dec
cmp
add
fadd
add
test
inc
add
mov
jle
jbe
dec
mov
fcomp
pop
push
jae
mov
adc
xor
xchg
sbb
ins
cmp
jbe
ror
add
call
mov
pop
or
push
ucomiss
push
mov
in
add
xor
(bad)
and
jb
add
pop
adc
fdivr
dec
adc
shl
dec
int3
add
or
mov
xor
add
lea
aam
xchg
pop
mov
and
mov
sub
jb
jl
or
cmps
push
sbb
dec
xchg
int3
push
mov
nop
call
fdivr
xchg
mov
xor
xor
mov
aad
sub
inc
pop
add
cmp
push
jbe
add
push
(bad)
(bad)
loope
xor
ret
sbb
out
add
push
jmp
les
add
pop
call
repnz
stc
mov
icebp
cmps
add
pushf
inc
ret
scas
add
idiv
popa
sub
cdq
push
inc
(bad)
aaa
add
add
jg
loop
adc
outs
dec
mov
add
push
inc
je
fdivrp
jno
or
ror
sub
or
jge
or
xor
mov
mov
and
fxch
lahf
and
jecxz
adc
cld
sbb
test
sub
(bad)
mov
mov
add
enter
cmp
retf
and
mov
loope
(bad)
jl
sbb
les
les
sar
ds
mov
push
jnp
ds
xchg
sub
pop
push
mov
loop
neg
jge
fs
repnz
daa
mov
call
jle
add
cmp
adc
mov
stos
ret
push
inc
lods
inc
ror
out
adc
mov
enter
cmp
cmp
xchg
in
cmp
mov
test
adc
mov
enter
cmp
cmp
or
ret
test
stos
addr16
bound
pop
js
cmp
pop
movs
(bad)
xchg
xchg
pop
pusha
pop
or
mov
nop
out
mov
add
mov
add
and
pushf
cmp
test
pop
sbb
dec
sub
fadd
sbb
jae
imul
add
mov
jo
mov
outs
mov
in
add
jmp
jo
mov
movs
dec
test
lock
dec
add
nop
lahf
imul
cmp
and
arpl
lods
xchg
or
push
idiv
xor
or
es
jb
jg
xchg
(bad)
je
ja
pop
in
push
(bad)
mov
cmp
aam
xchg
add
mov
sbb
add
dec
fiadd
(bad)
lods
push
jb
cmp
mov
fidiv
inc
sub
sbb
clc
mov
and
lods
jae
add
sbb
test
add
or
jle
leave
sbb
pop
mov
pop
xchg
add
aam
xlat
ins
pop
pop
cmp
push
add
popa
push
and
add
fist
(bad)
mov
mov
sbb
xor
cmp
dec
pop
push
outs
inc
jp
push
pop
add
ja
mov
dec
into
je
inc
push
mov
pop
mov
mov
call
mov
lds
mov
rcr
stos
dec
cdq
sar
jns
popa
ds
pop
neg
les
addr16
cs
mov
add
icebp
mov
sub
lds
inc
inc
test
add
xor
inc
in
mov
add
sti
retf
mov
xchg
xor
enter
test
(bad)
fnstenv
cdq
pop
add
shl
add
out
or
mov
xor
jle
pop
xchg
or
stos
mov
aad
jmp
and
mov
and
dec
arpl
cmp
jb
fisttp
mov
lods
pop
pop
add
push
ins
and
xchg
js
add
mov
adc
fnstcw
pop
xchg
or
dec
loopne
and
mov
sahf
add
aaa
and
inc
cmp
sbb
retf
dec
cmps
mov
movs
mov
or
leave
lods
cdq
outs
inc
add
test
(bad)
jne
mov
pop
pop
pop
fsub
push
pop
and
mov
add
xchg
mov
jbe
push
add
js
add
add
cwde
add
push
fcmovne
adc
cmc
cmp
in
out
xor
push
jl
bound
rcl
dec
mov
(bad)
stc
xor
call
cmp
add
(bad)
push
pop
inc
or
mov
test
inc
in
sbb
or
imul
popa
pop
xchg
aam
dec
call
jne
or
add
xor
cmps
leave
mov
or
mov
and
dec
jno
add
dec
inc
popa
add
jo
and
mov
fmul
cmovae
fwait
and
je
jnp
les
mov
xor
aas
imul
or
add
ret
rol
mov
sub
push
add
mov
adc
add
leave
sbb
add
cwde
add
sub
mov
push
in
outs
xchg
add
(bad)
std
out
sub
cmp
jp
inc
jg
shl
ins
inc
or
add
xor
dec
dec
add
xorps
aas
jnp
bound
add
jo
add
xchg
out
push
in
pop
xor
stc
mov
push
push
xor
mov
ficom
jbe
ins
in
or
dec
push
fsubrp
xor
cmps
cmc
imul
pop
mov
adc
ds
pop
sub
aam
and
jp
popf
or
lahf
addr16
aad
adc
nop
inc
rol
daa
sub
fmul
jae
xchg
int3
out
cmp
push
or
jmp
sub
adc
mov
add
jb
add
sub
std
jp
and
ds
push
dec
scas
add
sbb
mov
cmp
xchg
mov
xor
sbb
sub
pop
inc
mov
jmp
je
sbb
pop
pop
adc
add
int3
shl
and
lea
push
enter
ret
cdq
add
sbb
div
std
(bad)
out
pop
ins
mov
pop
or
push
add
pop
mov
popa
pop
jnp
ins
test
repnz
mov
cmp
adc
fdivr
mov
enter
outs
jge
mov
jae
imul
enter
push
add
mov
add
rcpps
xor
and
mov
jnp
or
repz
fs
out
dec
inc
pusha
cwde
push
pop
jbe
bound
outs
push
loopne
jmp
xlat
out
xchg
sahf
cmp
cmp
inc
(bad)
mov
sbb
test
jle
out
mov
xchg
jl
mov
pop
mov
out
xor
or
cmp
out
cmp
inc
sar
pop
pop
or
or
inc
ret
rcl
sub
movups
sbb
shl
mov
mov
add
jl
jl
cmp
sbb
js
xchg
in
cmp
mov
jg
icebp
push
jnp
sub
je
jl
cmp
or
or
mov
fnstenv
ins
jp
sbb
jnp
ds
mov
push
stc
push
jnp
pop
push
inc
or
cmc
aad
add
push
inc
pop
sbb
add
cs
push
or
and
(bad)
call
add
sub
and
scas
jmp
test
dec
mov
(bad)
push
outs
cmp
mov
aad
cmp
jp
dec
dec
sub
pushf
add
out
cmp
add
mov
cmp
in
mov
pusha
dec
sbb
push
sub
add
movs
retf
out
push
fwait
lods
adc
xor
in
popf
sub
mov
inc
cmp
imul
xlat
rol
push
or
xor
pop
sbb
enter
adc
pop
add
gs
jno
push
mov
mov
pinsrw
int3
xchg
jecxz
xchg
shl
es
or
pop
jle
add
(bad)
int
mov
lahf
frstor
inc
ds
mov
lea
int
test
cwde
js
or
mov
sbb
cmp
adc
sahf
jne
add
mov
and
sbb
(bad)
and
stos
mov
xor
xor
mov
daa
loopne
(bad)
jecxz
add
clc
or
repz
outs
lea
imul
aam
rcr
or
outs
pushf
sub
pusha
pop
inc
test
mov
in
cmp
add
into
iret
xchg
imul
cmp
sti
jge
data16
xlat
mov
jg
push
pop
das
fwait
xchg
add
movs
push
bound
dec
adc
daa
add
or
test
ins
sbb
sbb
movs
aaa
(bad)
gs
jb
sbb
imul
push
aad
add
jb
dec
or
dec
pop
adc
imul
pop
xchg
jns
push
stos
jne
repnz
lods
jge
pop
mov
sti
out
loope
push
xor
test
add
pop
addr16
outs
loopne
pop
test
pop
xchg
mov
add
mov
add
sbb
ins
or
out
add
mov
out
sbb
mov
inc
std
add
push
xchg
icebp
lds
call
inc
outs
cmc
sbb
call
cmp
add
loopne
sbb
sub
mov
push
std
and
scas
push
xor
fcmovnb
add
or
repnz
retf
fnstcw
in
and
inc
call
inc
pop
inc
fnsave
jns
loope
jge
and
push
repnz
xchg
gs
test
sbb
push
pop
sti
into
cmp
dec
jmp
stos
push
div
add
addr16
add
dec
sbb
fs
add
mov
dec
ror
or
aad
inc
mov
jge
push
aam
sti
sbb
(bad)
pop
add
ins
add
and
fbld
pusha
cmp
stc
scas
jns
push
xlat
aam
xchg
xchg
jge
push
inc
inc
int3
add
test
add
sub
bound
repnz
jno
jg
xor
fbld
pop
and
ret
adc
cwde
push
iret
add
jno
push
jl
(bad)
pop
add
outs
scas
sub
ror
ins
add
std
loop
add
cmp
sbb
push
add
iret
imul
pop
(bad)
xchg
jnp
in
and
add
imul
mov
add
mov
dec
xchg
jg
jmp
ja
xor
pop
mov
test
or
in
je
jb
ja
mov
(bad)
(bad)
jle
mov
out
(bad)
adc
rol
movs
aam
fistp
imul
mov
popf
xchg
fadd
inc
dec
pop
add
and
aad
in
pop
lods
int
sti
add
(bad)
enter
lds
and
mov
sti
pop
cmps
pop
sahf
scas
push
add
mov
jo
test
push
jo
dec
fwait
xchg
mov
pop
(bad)
adc
add
test
xor
dec
xor
add
cli
xor
mov
fild
or
sub
jl
inc
jb
rsm
repz
sbb
push
push
push
sbb
inc
loopne
ins
inc
mov
xchg
pop
mov
inc
mov
cmp
cmp
xchg
push
fdiv
fdiv
lea
cmp
sbb
dec
sbb
cmc
inc
inc
cvttps2pi
bound
add
shl
js
and
rcl
std
pop
add
jl
retf
sub
cmp
ffree
lahf
add
int
test
inc
stos
sub
add
sbb
int3
clc
push
inc
add
sbb
pop
xor
jae
mov
mov
or
add
test
pop
sbb
mov
inc
sbb
jp
cmp
dec
adc
xchg
je
add
jg
clc
cmp
pusha
add
lds
adc
jae
in
scas
out
(bad)
cmp
add
mov
jmp
jecxz
add
loope
pop
into
or
sub
mov
jbe
mov
repz
retf
xchg
xchg
add
fmul
std
in
cmps
adc
fld
add
pusha
cmp
pop
sti
nop
push
out
jo
mov
dec
mov
loope
mov
cwde
cmp
scas
data16
popa
push
sar
test
add
mov
add
in
adc
mov
cld
inc
ror
test
add
cmp
or
mov
add
mov
jecxz
add
aad
imul
out
add
test
pop
fldcw
sbb
mov
inc
mov
add
imul
rcl
cwde
call
sub
inc
mov
add
inc
icebp
es
dec
add
cmp
aas
fnstsw
cmp
xor
mov
stc
in
push
inc
pop
add
pop
shr
add
cs
in
pop
cmp
add
add
dec
inc
or
pop
adc
cmp
mov
add
mov
xchg
inc
cmp
or
gs
dec
out
add
mov
mov
sbb
mov
and
jno
push
cmp
mov
ja
push
sub
clc
add
lds
cs
mov
mov
(bad)
shl
add
aad
addr16
lds
test
add
out
stos
jo
les
xor
push
mov
lds
mov
sar
fsub
and
add
jbe
rol
fiadd
fistp
(bad)
push
pop
push
mov
and
fiadd
shr
loopne
loop
mov
mov
dec
and
jb
daa
pusha
lahf
cmps
aam
(bad)
lock
imul
adc
add
inc
mov
int
je
fistp
pop
xlat
or
xor
aam
out
inc
mov
mov
xchg
push
ret
call
add
shl
add
retf
pop
shl
imul
or
test
cmps
xchg
inc
loopne
add
mov
scas
ins
add
cmp
sbb
or
mov
in
mov
dec
pop
fiadd
cmp
sbb
movs
lock
add
cli
pop
dec
pushf
mov
add
cmp
sti
pop
add
out
cdq
scas
sbb
lahf
mov
xchg
icebp
push
or
or
cs
pop
mov
and
scas
inc
ret
(bad)
pop
pop
add
inc
aam
mov
ja
add
fsub
push
add
xor
mov
rol
leave
add
aam
mov
xchg
push
xor
push
mov
scas
xor
je
pop
mov
push
dec
sahf
jno
push
sub
fcomp
add
imul
cmp
cld
aas
sub
sub
shr
mov
sbb
or
lock
movs
pop
stc
int3
lahf
rol
fdivr
push
aaa
push
rcl
test
shl
add
pop
mov
xor
pop
shr
or
sub
(bad)
jno
mov
cmovnp
push
adc
sub
push
mov
fs
sbb
js
scas
add
cmp
out
sbb
push
mov
push
add
outs
pop
gs
ins
add
dec
dec
add
dec
or
mov
push
xchg
xchg
pushf
mov
add
repnz
jo
gs
lahf
shl
add
mov
pop
sub
rcl
mov
jecxz
add
sub
add
add
icebp
in
xchg
fsubr
shl
jmp
sar
scas
daa
addr16
sbb
popa
cwde
sbb
popf
cld
add
xchg
mov
iret
sub
sar
pop
inc
pop
pusha
pop
cmp
jo
test
mov
inc
add
mov
hlt
das
mov
sub
mov
cld
(bad)
cmp
cdq
xor
lods
jae
push
inc
or
pop
repnz
test
rcr
call
cmp
push
rcr
add
push
imul
ss
add
(bad)
cli
scas
add
mov
or
add
push
sbb
popa
mov
call
(bad)
jmp
mov
adc
ret
jp
fwait
mov
(bad)
lods
scas
mov
loopne
das
daa
ja
jns
imul
sahf
sbb
not
add
out
and
add
mov
add
sbb
add
pop
push
enter
cmp
xlat
mov
daa
xchg
dec
dec
mov
add
inc
cmp
sti
mov
xchg
ror
jl
mov
mov
lea
mov
xlat
push
pop
cmp
add
add
jecxz
and
xor
int3
mov
repz
xor
add
and
dec
nop
cmp
sub
nop
xor
mov
repz
test
jb
mov
mov
mov
add
inc
ja
call
sbb
push
mov
mov
enter
add
mov
sub
xchg
dec
sub
aam
pop
add
mov
add
jp
not
fistp
add
repnz
into
retf
and
ret
add
cli
xchg
fiadd
ret
aaa
clc
push
dec
jae
fadd
xchg
imul
movs
add
test
mov
add
jb
js
mov
push
rcl
into
or
lock
ret
push
(bad)
aaa
jo
pop
in
add
test
rcl
push
adc
and
arpl
pop
movs
cmp
sub
popa
in
enter
jno
cwde
xchg
cmps
inc
rcl
jo
fild
sbb
mul
pushf
ins
push
cmp
or
mov
sbb
jg
add
xor
test
lahf
and
je
fdiv
add
stos
and
pop
(bad)
cwde
in
mov
jne
cmp
add
or
loopne
and
pop
add
sbb
mov
sbb
shl
daa
cli
add
outs
xchg
cmps
pop
lods
add
popf
or
jmp
mov
inc
imul
outs
or
mov
add
es
ret
rcl
mov
(bad)
jl
jbe
add
mov
fisubr
push
unpckhps
loope
je
loop
mov
and
stos
jb
add
cmc
fs
sar
pusha
cmp
or
dec
iret
pop
rol
push
call
mov
dec
shr
int3
inc
push
sub
mov
rdmsr
cs
sub
pop
add
les
cld
add
pushf
shr
jg
jb
add
or
(bad)
out
stos
mov
adc
adc
lock
mov
shl
call
xchg
adc
add
jne
hlt
sbb
cmp
or
or
aaa
add
jns
fadd
pop
sub
aas
add
xor
jae
sub
xor
icebp
jle
add
pop
rcr
ja
add
mul
xchg
mov
ins
pushf
and
stc
hlt
or
dec
xchg
clc
add
pop
ja
dec
pop
jae
out
push
add
push
repnz
fst
add
pop
leave
rcl
fmul
and
mov
std
add
dec
cmps
mov
mov
mov
add
jmp
sub
mov
std
add
dec
jns
test
push
out
loopne
ss
jne
xor
pop
adc
or
pop
cmp
pusha
cli
clc
je
add
sub
or
test
fild
mov
enter
data16
fcmovbe
push
mov
inc
xchg
add
loopne
xchg
ins
test
in
add
and
(bad)
mov
rcl
ret
cmp
cmc
inc
lea
test
sub
mov
dec
sub
call
hlt
out
jmp
pop
fistp
lea
lahf
ds
fdivrp
(bad)
leave
xor
sbb
xor
lea
sbb
(bad)
fsub
into
adc
ret
push
jo
daa
push
enter
arpl
int3
fwait
mov
(bad)
and
ret
sbb
repnz
mov
hlt
mov
repnz
hlt
mov
lock
jecxz
sub
in
sub
lock
iret
nop
mov
jo
clc
xchg
pop
inc
in
js
cmp
in
(bad)
xchg
xor
cld
push
or
(bad)
(bad)
xor
and
aad
sub
call
lea
ret
in
cmp
push
enter
sbb
jge
pop
nop
in
enter
mov
loopne
mov
mov
jbe
loopne
nop
out
icebp
sub
sub
or
inc
sub
mov
adc
ror
out
shr
sub
and
out
nop
out
in
jmp
dec
jae
cmp
loop
add
sbb
sbb
mov
add
jl
leave
adc
setp
mov
js
push
dec
adc
outs
not
pop
aam
sti
stc
ficomp
pusha
add
or
test
cmc
mov
jp
hlt
mov
dec
test
and
int
retf
sahf
add
xchg
aad
xor
add
push
and
add
fiadd
add
repnz
inc
and
jbe
add
or
sub
xchg
adc
sbb
cmp
(bad)
add
sbb
add
jmp
jge
pop
in
call
test
mov
push
dec
fisubr
fbld
dec
repz
pop
shl
adc
pop
and
gs
adc
dec
sbb
cmps
dec
add
inc
jns
inc
int
pop
add
add
pop
mov
sbb
add
out
mov
popa
push
mov
cld
fiadd
adc
lock
xor
xchg
add
jae
pusha
pop
stc
into
add
dec
cmc
test
add
fidiv
mov
mov
cmp
mov
test
(bad)
fbstp
movs
imul
or
retf
adc
add
jae
stos
add
and
retf
rcr
cmp
retf
jg
inc
push
adc
aas
lods
shr
ret
jb
sbb
ins
repnz
div
push
loopne
fstp
jbe
lock
cmp
jns
mov
add
xchg
mov
jb
arpl
loope
stos
sti
mov
loopne
les
inc
add
movlhps
jp
popf
pop
add
call
add
ds
cmp
add
jmp
fnsave
call
inc
push
mov
mov
jne
add
shl
inc
dec
add
jl
out
daa
push
fmul
addr16
or
and
adc
cwde
stos
data16
retf
stc
fcomp
ss
and
or
cdq
js
out
aad
addr16
add
cmps
fcom
ja
sbb
sbb
add
cmc
adc
lods
outs
add
or
pushf
jb
add
lea
or
pop
or
nop
add
xchg
cmps
add
(bad)
mov
add
mov
retf
scas
pop
add
dec
cmp
jl
cmp
add
aad
ror
movs
test
cmp
cwde
adc
dec
sti
lock
pop
jecxz
push
movs
mov
nop
cmp
std
fimul
in
addr16
test
pop
sub
mov
mov
mov
add
push
aam
adc
pushf
ret
mov
lods
loopne
sbb
movlps
(bad)
loopne
imul
int
cmp
test
sub
push
out
cld
add
ins
cvtpi2ps
in
adc
fiadd
bound
mov
shl
pop
stos
into
cmp
fs
js
mov
std
mov
adc
add
jg
je
fidivr
mov
push
add
outs
sub
cwde
add
popf
sti
fwait
xor
sub
retf
cmp
xor
fs
ins
pop
add
xchg
rol
mov
daa
mov
jno
out
loopne
xchg
adc
push
shl
movs
(bad)
fiadd
js
sbb
push
mov
rol
ucomiss
in
jno
xchg
pusha
xor
test
mov
cmp
out
mov
nop
xlat
mov
jecxz
xchg
mov
adc
in
jns
mov
push
adc
stc
push
push
xchg
inc
movs
add
xchg
push
mov
(bad)
fwait
pop
jle
add
int
mov
imul
lds
or
icebp
push
cwde
pop
add
int3
shr
and
and
jge
popa
adc
or
jle
retf
mov
inc
push
inc
add
fnstenv
es
and
cmps
add
(bad)
lahf
jmp
stos
mov
(bad)
clc
rol
test
out
sbb
or
pop
cmps
loop
xor
sub
ret
in
imul
and
fnstcw
movs
jmp
cmps
sbb
adc
pop
and
or
(bad)
fdivr
sbb
add
mov
mov
ret
adc
add
(bad)
shl
jae
cmc
nop
(bad)
out
push
add
out
push
add
pcmpgtw
mov
mov
add
shl
(bad)
mov
pusha
dec
sub
inc
sbb
fild
push
aaa
mov
inc
jle
add
out
lds
ds
pop
cmp
push
imul
add
mov
ins
jg
stc
xchg
add
loope
push
mov
int3
mov
(bad)
outs
not
cmp
dec
stc
sbb
jne
add
sub
(bad)
add
out
iret
mov
pavgb
paddusw
das
add
sub
or
jb
ss
add
push
push
add
aaa
xor
sbb
cdq
cmc
repz
sti
out
add
inc
mov
push
lock
sub
mov
mov
jmp
add
push
mov
xor
popf
xchg
ins
call
xchg
mov
mov
add
mov
dec
add
mov
adc
push
xchg
pop
test
push
jbe
push
movs
in
push
dec
add
pop
xchg
ror
data16
pusha
jge
cs
cmp
lods
sbb
push
or
cmc
and
sub
add
sbb
lahf
shl
lods
sub
cmp
add
mov
ror
rcl
xor
sar
pushf
in
push
dec
add
iret
or
into
or
je
hlt
jmp
stos
and
mov
stos
pushf
dec
add
test
mov
dec
add
push
lods
jne
lods
pop
add
int
adc
out
jge
add
mov
adc
dec
inc
lds
xor
rcr
sub
jno
add
data16
repz
sbb
je
pop
lods
sub
inc
stc
mov
iret
test
xchg
das
add
jne
sbb
ins
jl
movs
cmps
add
inc
pop
sub
lods
and
ja
add
sub
shr
pop
mov
fld
inc
in
iret
movs
(bad)
out
adc
add
cli
mov
stos
jg
add
cmp
fdiv
in
xchg
ss
mov
bound
mov
aaa
cmp
sbb
std
xchg
adc
js
cwde
aad
push
and
loope
mov
xchg
jl
mov
mov
jae
(bad)
ficom
popa
mov
cmp
cmp
xor
or
xchg
jnp
cmp
cmp
mov
pop
cmp
icebp
add
xchg
mov
mov
sbb
add
cmp
sub
jae
imul
enter
mov
pop
inc
jecxz
test
fld
mov
call
loop
neg
jge
jmp
(bad)
push
jl
js
adc
mov
js
mov
mov
(bad)
js
cmp
aad
jl
cmp
hlt
xor
cmp
jb
xor
pop
mov
and
mov
mov
aad
mov
scas
add
pop
cmp
ltr
in
push
cmps
add
(bad)
push
in
mov
pop
in
out
loope
add
mov
adc
add
stos
or
pop
scas
jb
push
xchg
mov
jmp
aas
inc
mov
xchg
add
push
push
shr
lds
loop
dec
ja
aaa
cmps
call
stos
out
push
aam
sub
sub
add
push
mov
pop
push
loopne
aam
sar
test
pop
scas
dec
xor
test
sbb
sbb
push
stc
jns
add
ins
pop
lock
add
(bad)
push
inc
xor
mov
adc
add
in
mov
retf
and
pop
jb
adc
mov
add
or
sbb
test
aad
movs
enter
pop
mov
push
(bad)
cli
loopne
mov
xor
push
movs
sbb
add
add
ds
retf
out
ret
add
or
jb
push
mov
dec
mov
mov
adc
out
shl
jl
add
push
add
xchg
add
pop
dec
repnz
mov
cwde
(bad)
cmp
or
bound
(bad)
mov
sbb
mov
aaa
fucomp
adc
xor
mov
jb
xor
add
inc
xchg
rol
inc
daa
in
xchg
adc
cmp
or
cwde
add
sbb
add
mov
pop
lock
and
adc
les
lods
add
mov
sbb
aam
test
cmp
inc
add
push
sbb
clc
sub
lahf
daa
and
mov
shl
inc
lods
in
add
sub
cmc
popf
pop
add
outs
(bad)
xchg
retf
push
outs
dec
mov
into
aam
sahf
cmp
fdivrp
inc
ficomp
inc
lods
inc
aam
jae
fcomp
enter
(bad)
mov
adc
mov
mov
xor
or
add
fdiv
mov
mov
inc
push
inc
adc
int3
aam
repz
(bad)
adc
in
(bad)
stc
sbb
add
neg
jge
pop
pop
ror
xchg
sub
mov
push
jnp
ds
push
stc
push
jnp
mov
in
push
fdivr
adc
cmp
or
mov
test
inc
aam
dec
call
loop
neg
jge
jmp
(bad)
push
jl
mov
adc
mov
mov
mov
mov
sbb
jge
jbe
mov
jl
cmp
mov
cld
test
xor
pop
mov
cmp
pop
lods
(bad)
xchg
fadd
sahf
neg
adc
push
jl
add
adc
or
fs
pop
pop
out
mov
bound
or
iret
add
add
and
leave
in
inc
xor
sar
push
add
scas
and
pop
add
push
add
sub
mov
jge
jge
add
jb
lods
add
sbb
and
sub
movs
(bad)
aam
xor
iret
inc
add
sbb
ss
mov
pop
or
mov
mov
jnp
out
aaa
out
cmp
in
loope
loopne
mov
add
sub
fnstsw
retf
jp
jle
push
shr
mov
ss
pop
call
ins
sbb
adc
add
js
cdq
lock
div
dec
add
or
das
dec
jns
add
cmp
clc
add
jl
mov
(bad)
das
mov
adc
xchg
enter
xor
jecxz
stos
inc
add
pop
mov
add
add
mov
adc
and
or
int
xor
and
add
ds
add
sbb
pop
sub
add
sbb
jmp
bound
das
aaa
add
cmp
push
add
add
add
push
push
dec
push
js
in
add
mov
int3
add
gs
jnp
dec
rcr
sbb
mov
pop
movs
fwait
add
or
lods
sub
mov
xchg
ins
leave
xor
bndstx
dec
pop
push
popa
xor
ins
add
call
or
sar
aam
adc
sbb
cdq
call
inc
and
ins
add
call
add
ret
xchg
adc
xchg
add
data16
cmp
lds
add
xor
push
add
push
and
push
mov
popa
das
cmp
iret
aam
inc
cmp
pop
add
cmp
push
ja
add
leave
mov
je
icebp
mov
add
cmp
cmc
aas
stc
ins
add
add
mov
mov
xchg
jle
pop
add
or
fwait
ds
add
and
mov
pushf
inc
adc
rcr
mov
fild
enter
outs
mov
dec
addr16
xchg
ror
jae
mov
cmp
stos
dec
shl
(bad)
sbb
outs
rcr
sti
test
mov
pop
pushf
frstor
add
mov
test
inc
sbb
add
mov
pushf
push
or
add
or
test
out
(bad)
and
add
dec
ins
lock
add
fiadd
inc
out
mov
inc
dec
std
lods
and
xor
mov
shl
cmp
cmc
push
sahf
bound
in
test
xchg
adc
mov
sub
out
jns
cmp
aam
aas
add
fwait
push
int
aad
add
sub
pushf
shl
pop
sbb
push
stc
and
jno
dec
hlt
adc
add
add
popa
enter
mov
xchg
loop
mov
add
pusha
mov
fdiv
addr16
add
movs
pop
popa
fiadd
and
dec
lea
(bad)
jno
cmp
out
icebp
push
arpl
sub
lahf
jmp
push
ins
dec
dec
or
add
or
retf
inc
(bad)
mov
unpckhps
lahf
adc
jb
in
jne
add
sbb
mov
add
pop
push
xor
push
add
dec
or
mov
call
mov
jecxz
rol
push
add
pop
cmps
gs
addr16
add
xchg
inc
cmp
fisttp
dec
add
out
mov
hlt
sub
fiadd
adc
jl
fadd
add
pushf
ins
enter
mov
add
or
scas
add
mov
data16
ins
add
enter
adc
shl
ficomp
sbb
cmps
lods
pop
add
jmp
cmps
jns
xchg
pop
fisttp
add
sub
sti
prefetch
retf
scas
push
dec
cmp
std
adc
(bad)
push
and
add
sub
pusha
xchg
jmp
add
or
and
pop
xchg
add
push
stos
add
dec
jmp
sbb
stos
add
lods
or
out
pushf
and
sbb
outs
dec
fidivr
scas
mov
leave
add
mov
push
ins
add
(bad)
xor
movs
add
add
cli
adc
mov
adc
and
dec
les
loope
pop
int
cmp
mov
and
cmp
lea
lds
(bad)
push
jns
push
outs
fld
in
and
cli
popa
push
add
scas
repz
xchg
push
mov
jmp
rol
fisttp
call
(bad)
cmp
cmp
fist
in
mov
inc
cmps
popf
sti
inc
xor
das
dec
out
cdq
add
aam
idiv
cld
add
ret
fld
pop
sub
push
push
add
cdq
cmp
aas
add
cmp
clc
inc
add
and
pop
or
aam
into
aas
dec
jge
push
cli
add
sahf
dec
or
jno
(bad)
push
mov
fwait
jmp
rcr
scas
pop
ds
add
sub
jmp
and
(bad)
cwde
(bad)
scas
xor
add
popf
jo
inc
cmp
dec
pop
fadd
ror
shl
(bad)
out
scas
jge
jns
sub
data16
js
hlt
icebp
add
mov
adc
add
xchg
(bad)
xor
xor
out
sub
push
cld
nop
imul
popf
std
xchg
jmp
and
add
movs
add
mov
js
and
or
pop
adc
nop
out
and
int
jno
sbb
loope
jmp
add
push
fnstenv
or
or
xor
xchg
pop
in
xchg
call
ret
cmps
mov
pop
not
out
inc
nop
(bad)
add
mov
addr16
push
std
in
add
aas
aam
jmp
inc
gs
jbe
pusha
or
add
scas
jecxz
mov
mov
jo
and
jmp
ss
sbb
das
add
cwde
or
add
mov
pusha
imul
sbb
lods
es
dec
cwde
push
add
xchg
imul
pop
sbb
jmp
pop
add
sahf
icebp
and
iret
pop
xchg
not
or
xor
leave
loopne
jns
pop
in
rcl
jo
jno
popf
call
or
add
daa
in
ins
leave
push
mov
adc
hlt
lods
in
sub
add
mov
add
push
sub
loope
sbb
in
das
in
xor
add
cmp
add
adc
push
push
addr16
dec
add
xor
jle
aam
push
pop
or
inc
cmp
sub
add
xor
inc
mov
(bad)
(bad)
fdivr
dec
inc
add
sub
in
add
push
jmp
add
sbb
cmp
and
fcmovnb
(bad)
repnz
lea
jge
add
ins
mov
pop
jg
adc
xchg
xlat
stc
test
sbb
cld
mov
or
push
push
movs
pop
push
movs
sbb
adc
inc
jle
jbe
add
xchg
adc
mov
pop
pop
repnz
test
dec
and
js
mov
mov
ja
mov
push
ins
inc
dec
ror
pop
hlt
aas
mov
mov
sbb
movs
icebp
inc
push
shl
ror
shr
ror
xlat
mov
mov
push
mov
xchg
xor
or
cmp
and
jmp
sbb
test
cli
call
gs
sti
mov
add
nop
push
pusha
add
in
jnp
add
or
dec
pop
out
jo
push
xor
and
pushf
push
pop
neg
inc
mov
jmp
adc
or
or
(bad)
xor
add
mov
pop
sub
pop
mov
loop
dec
lock
add
arpl
mov
add
out
je
fiadd
sbb
mov
pop
add
pushf
addr16
call
sbb
div
xor
push
jno
adc
repz
add
mov
sbb
adc
dec
aad
cmp
leave
or
add
add
ss
add
and
rcl
mov
xchg
arpl
repz
pop
test
shr
stc
mov
sar
add
push
adc
push
mov
fwait
imul
ins
stc
iret
add
pop
add
jge
out
push
addr16
test
fs
stc
dec
add
jmp
test
dec
add
out
pop
mov
add
sub
add
js
mov
int3
ins
sbb
lods
add
adc
bound
add
jno
jo
lods
push
shl
add
or
push
jbe
add
leave
call
in
pop
and
inc
add
loop
cmp
(bad)
dec
push
sub
js
cmp
hlt
push
frstor
add
pop
mov
icebp
sub
iret
out
dec
clc
fadd
mov
sbb
in
dec
movs
mov
arpl
or
cs
daa
sbb
loopne
in
stc
or
add
ret
add
sbb
loop
cmp
mov
fwait
xchg
loope
sbb
les
inc
jecxz
mov
iret
mov
add
sub
scas
cmp
lea
rcl
add
pushf
push
pop
fst
or
pop
xor
inc
mov
or
add
dec
jae
in
mov
or
push
sub
jmp
cmc
movs
sub
add
test
inc
add
test
pusha
icebp
mov
sub
sub
je
add
cmps
push
cmp
adc
push
adc
xchg
mov
cmp
dec
js
add
ret
cmp
jmp
and
nop
in
ss
sub
add
add
gs
mov
pop
mov
hlt
mov
xor
xor
scas
mov
add
and
mov
jo
movs
inc
ficom
in
mov
nop
mov
push
and
cmp
test
mov
les
cmp
in
out
fsubr
inc
add
dec
jl
sbb
cmp
(bad)
imul
cmp
nop
out
jmp
push
ds
fist
pop
jecxz
mov
jno
out
sbb
repnz
mov
xor
jl
mov
into
mov
xor
and
sub
stc
push
jnp
retf
pop
push
sub
jge
sub
mov
test
cs
adc
das
lods
adc
inc
test
hlt
inc
xlat
inc
ror
out
adc
mov
enter
cmp
cmp
xchg
in
cmp
mov
sbb
adc
mov
enter
cmp
cmp
inc
mov
and
inc
fbld
addr16
cmp
(bad)
sbb
jge
out
sbb
aas
mov
ret
into
lods
js
out
add
jb
push
repnz
xor
sub
add
popa
push
es
push
mov
add
imul
mov
sbb
repz
outs
rcl
call
inc
cmp
adc
dec
ret
mov
popa
push
push
clc
xchg
add
sahf
and
or
ret
jp
jg
mov
pextrw
pop
inc
xchg
add
in
popa
mov
add
xor
cld
(bad)
rol
sub
rcr
lds
stos
add
fisttp
je
stos
mov
lahf
idiv
cld
xlat
hlt
add
cs
leave
movs
cmp
and
les
xor
add
outs
mov
push
adc
mov
call
push
push
mov
cmp
cmp
dec
cmp
xor
add
bound
pop
ror
dec
mov
mov
pop
mov
leave
add
int3
push
sub
add
or
retf
psrld
add
adc
or
mov
pushf
ret
je
add
cld
cmc
xchg
add
adc
int3
adc
add
imul
movs
movlps
into
or
mov
pop
cmp
ins
or
add
or
jmp
cmc
aaa
jbe
mov
inc
addr16
icebp
push
jp
stc
jle
aaa
nop
rcr
adc
icebp
jl
fs
aam
test
arpl
test
inc
clc
add
lock
shl
add
in
stc
mov
add
mov
std
add
push
les
in
lods
add
adc
cld
xchg
int3
add
fadd
sub
inc
xlat
or
imul
loop
pop
push
mov
outs
xchg
add
cmp
clc
shl
cmps
cmp
and
lods
gs
add
xchg
leave
fs
cmp
ins
sbb
popa
in
xlat
add
fadd
add
pop
mov
adc
xchg
pop
pop
outs
push
push
loopne
pop
ins
add
std
jne
bound
sahf
cmp
fdivrp
ret
ficomp
gs
clc
mov
stc
repnz
imul
ss
and
ss
pop
inc
dec
retf
out
adc
mov
mov
fbld
iret
jno
push
enter
pop
les
lock
mov
ds
js
sbb
icebp
push
ds
inc
(bad)
xor
iret
jno
fst
enter
sub
pop
mov
out
adc
mov
loopne
nop
out
cmp
inc
sbb
call
in
or
or
dec
gs
movups
mov
add
sbb
shl
mov
mov
jmp
jmp
neg
jge
pop
nop
fdiv
enter
mov
clc
out
adc
mov
mov
nop
out
fstp
sub
mov
sbb
sbb
xchg
movs
inc
mov
and
jno
(bad)
push
inc
rcr
and
jno
push
pusha
gs
stc
add
mov
add
les
sbb
pusha
cmp
xchg
cmp
cdq
fwait
ss
and
and
fnstsw
push
cli
push
scas
cld
pop
add
popa
jmp
cmp
xlat
cli
mov
jmp
imul
or
inc
push
dec
mov
pusha
pop
jg
and
mov
add
jno
mov
loop
jo
add
enter
add
das
push
cs
jnp
dec
mov
or
add
pop
fdivrp
fild
sbb
mov
cmp
data16
push
je
stos
ret
dec
push
and
rcl
bound
xchg
mov
imul
hlt
jmp
add
and
repz
rol
pop
popf
clc
fscale
lods
jge
jae
fistp
mov
iret
cmp
int3
and
sub
push
js
xchg
fld
ds
int3
cmp
sbb
inc
fistp
dec
daa
mov
shr
xchg
add
bound
pop
xchg
fpatan
add
xor
inc
add
xchg
jo
push
cmp
mov
cld
fstp
scas
push
pop
aas
popa
mov
mov
mov
xchg
add
(bad)
js
ss
mov
push
push
stc
mov
outs
popa
fs
jo
pop
mov
push
cmp
addr16
push
inc
add
rol
fdivr
push
sbb
mov
cmp
aaa
je
pop
inc
nop
test
fadd
retf
add
inc
jl
lods
sbb
pop
ds
add
daa
and
add
or
or
loope
dec
mov
cmp
jmp
pop
mov
sbb
xchg
repnz
and
dec
push
ficom
inc
add
or
inc
repz
sub
movs
or
dec
adc
add
das
dec
icebp
out
sub
add
cmp
xchg
jno
out
add
adc
loope
add
pusha
dec
sub
mov
adc
ja
int3
(bad)
sub
nop
or
pop
mov
xor
test
sti
mov
aaa
mov
push
nop
or
rol
cdq
in
mov
(bad)
or
shl
xchg
add
pop
mov
add
movs
call
cmp
out
add
adc
dec
mov
cmc
mov
dec
push
jecxz
pop
sbb
jmp
repnz
push
imul
ret
add
mov
xchg
mov
xchg
mov
ss
(bad)
jge
out
cmp
dec
loope
pusha
cwde
add
jne
cmps
push
jp
add
lds
jnp
adc
add
(bad)
or
add
(bad)
cli
mov
jle
jecxz
push
xor
push
sbb
bound
mov
je
jo
rcl
cmp
add
and
xchg
(bad)
xor
add
ret
push
dec
mov
jmp
int3
or
mov
add
cld
push
sti
inc
sub
or
cdq
inc
(bad)
mov
push
mov
outs
xchg
adc
loopne
add
ins
cmc
pop
pop
jle
add
xchg
push
dec
pop
xchg
cmp
sub
add
jmp
add
cdq
(bad)
scas
or
add
push
jb
rol
pop
adc
jmp
gs
inc
dec
mov
inc
inc
sbb
and
fld
add
jecxz
ficom
sar
mov
or
dec
inc
add
cmp
dec
iret
adc
push
rol
sub
lahf
(bad)
int
push
sub
or
pop
adc
add
push
daa
adc
fcomp
jge
lods
fwait
pop
add
cdq
stos
je
xor
cmp
stc
inc
adc
push
add
add
repnz
movs
inc
push
fild
sub
add
inc
ror
aas
xor
fcmovb
popf
or
mov
leave
sub
dec
dec
bound
cld
or
jge
mov
movs
mov
adc
in
mov
fidivr
or
stc
sub
jecxz
jns
cmc
mov
lock
pop
aam
mov
xchg
loopne
jne
add
test
cmp
fist
in
test
das
ss
retf
mov
mov
jns
jecxz
mov
add
xor
(bad)
and
cld
xor
hlt
sub
mov
xchg
xor
add
(bad)
jno
lock
int
fdiv
pop
outs
movs
loope
add
movs
sti
inc
cmp
aaa
add
fs
popf
jge
xor
add
ds
mov
push
iret
ja
add
int3
stos
sub
jne
pop
push
addr16
aad
jge
add
daa
mov
add
jne
dec
and
cdq
or
(bad)
test
movs
add
push
jecxz
movs
inc
pop
add
mov
add
es
push
sub
movs
add
mov
adc
add
out
cmps
add
sub
mov
(bad)
mov
popf
adc
aam
cmp
push
pop
jnp
call
add
(bad)
mov
dec
int3
sahf
pop
xchg
fsub
xchg
icebp
fisttp
call
mov
pop
pop
sbb
xor
push
sbb
icebp
sub
ins
fiadd
repz
out
test
or
scas
pop
add
shl
(bad)
sub
iret
cmp
pop
imul
scas
mov
mov
add
in
cwde
lahf
push
add
pop
lock
and
pop
push
sbb
inc
dec
inc
or
jg
test
cmp
test
mov
sti
mov
inc
and
sub
(bad)
pop
out
mov
add
lea
jo
add
mov
std
add
scas
(bad)
add
lock
pop
or
(bad)
pop
push
pusha
sub
adc
jo
dec
push
pop
pushf
cmp
pop
pop
inc
fist
mov
rol
stos
add
and
leave
add
(bad)
outs
jmp
cmp
mov
add
cmps
fmul
dec
dec
mov
or
mov
cwde
scas
inc
call
stos
push
add
or
add
adc
add
jle
push
fs
ds
push
mov
mov
call
sub
bound
xchg
cmc
loop
shr
cmp
pop
mov
push
(bad)
stos
popa
sub
add
jne
inc
add
or
or
inc
arpl
rol
cli
aam
inc
loopne
add
adc
push
mov
out
pushf
fmul
mov
jno
push
cmp
movsx
add
shr
icebp
(bad)
push
add
jg
sub
jb
push
outs
xchg
cmp
adc
ja
mov
adc
repnz
cmp
rol
icebp
cli
mov
push
jp
pop
(bad)
les
sub
icebp
push
add
cld
lds
add
mov
std
(bad)
jb
les
int3
inc
sub
popa
cld
call
add
mov
and
mov
stos
js
or
(bad)
sti
or
sub
sbb
and
add
inc
lods
(bad)
daa
xor
push
in
js
cmp
add
push
stc
push
jnp
das
push
jns
bound
retf
add
mov
std
mov
shl
jnp
(bad)
ror
pop
jmp
call
inc
sti
cs
push
mov
cmp
mov
mov
ins
lds
scas
mov
iret
mov
mov
xchg
mov
or
call
and
std
add
cmp
mov
push
add
pop
push
and
je
fldenv
call
std
les
mov
pusha
nop
push
dec
inc
mov
push
punpckldq
mov
ficomp
and
and
jp
mov
adc
jbe
xor
add
jnp
and
push
add
test
test
je
jae
add
and
stos
sub
add
out
add
xor
pusha
shl
hlt
fcomp
jae
inc
ja
push
enter
push
mov
nop
int3
(bad)
sub
ins
add
sub
leave
call
les
fwait
dec
outs
adc
dec
(bad)
cld
lock
sar
pop
nop
jp
cmp
dec
mov
xchg
jmp
pop
add
movs
ret
xor
sbb
imul
and
inc
test
lods
adc
sub
(bad)
dec
push
daa
jmp
inc
(bad)
jg
cmp
sar
add
mov
pushf
sbb
sar
cli
push
jl
movs
clc
stc
add
rcr
nop
jno
add
cmps
(bad)
ret
add
fidiv
scas
add
mov
inc
lock
xor
push
(bad)
sbb
adc
(bad)
imul
add
loope
sub
lods
retf
or
repnz
movs
aam
inc
add
pop
xor
ret
jmp
aam
sub
ret
gs
mov
mov
mov
hlt
add
mov
les
aas
pop
pop
rol
out
(bad)
mov
or
ror
in
and
stos
sahf
fs
pop
jnp
clc
cdq
add
imul
add
retf
xlat
jbe
into
add
adc
xchg
test
outs
int
push
rcr
add
mov
popf
xchg
add
in
add
fld
mov
add
xor
xchg
out
mov
mov
and
or
mov
sbb
dec
stos
add
retf
and
aad
xchg
fist
or
sub
scas
and
mov
es
lahf
mov
out
jl
add
out
in
or
int3
pop
cmp
call
mov
sbb
bound
xor
push
add
push
lock
push
(bad)
push
xor
ret
add
pop
jo
and
xchg
add
xchg
xor
pop
enter
stos
cmps
cmp
pop
push
mov
pop
leave
cmps
add
aam
push
aas
out
mov
jge
and
and
push
jecxz
cmp
push
cmp
xor
cmp
ss
outs
sbb
mov
jmp
dec
cmp
scas
pop
out
xor
mov
dec
jmp
sub
add
cdq
out
mov
or
mov
call
mov
jmp
or
jmp
in
push
jg
jg
test
iret
and
(bad)
xor
or
adc
shl
lods
dec
push
stos
pushf
sti
dec
adc
stos
popa
lods
and
adc
add
sbb
jae
mov
adc
xchg
pop
and
fld
adc
dec
ds
or
cmps
push
cmp
mov
xchg
jbe
xchg
push
int3
je
sub
sahf
movs
or
jmp
test
add
dec
call
and
sbb
dec
mov
cwde
stc
cmc
sub
enter
cmp
(bad)
mov
push
out
mov
adc
dec
scas
pop
int3
xchg
cmp
cmps
xor
jg
lock
push
xchg
into
jo
test
and
mov
sbb
bound
add
jne
lahf
aam
inc
adc
mov
jmp
and
or
add
adc
stc
and
sub
inc
outs
nop
and
push
mov
sub
jecxz
push
mov
jmp
add
push
sub
jne
pop
mov
xchg
cli
sub
mov
sti
push
and
mov
pop
test
cwde
ret
add
mov
pusha
neg
lahf
aam
inc
sbb
in
or
pop
mov
and
pop
and
pop
and
push
cmp
inc
mov
jnp
test
std
sub
pusha
inc
call
adc
and
mov
mov
es
mov
jne
cdq
popf
ret
test
(bad)
clc
push
xchg
add
push
push
adc
pop
int
ficom
iret
mov
in
ret
mov
or
cmp
cmp
ins
xor
pop
push
xor
push
mov
adc
js
das
push
paddq
inc
(bad)
push
xchg
and
aas
cmp
je
add
push
mov
mov
add
bound
call
jle
dec
ins
push
fwait
lods
adc
into
adc
dec
icebp
dec
adc
sub
shl
add
sti
fimul
inc
mov
mov
call
or
add
stos
or
(bad)
dec
pop
out
fst
mov
mov
nop
outs
aad
or
push
xchg
jmp
inc
stc
and
xor
push
inc
pop
jg
jbe
pop
in
and
imul
bound
adc
cmp
cmp
push
jne
inc
or
pop
jns
cld
out
pop
scas
inc
inc
and
je
stos
xchg
push
xchg
mov
int3
test
push
out
repnz
loop
ret
dec
mov
or
and
sbb
pop
push
push
pop
pop
(bad)
mov
mov
pop
icebp
loope
add
loop
xchg
mov
rol
lea
(bad)
sbb
or
jae
push
gs
in
xor
mov
aas
add
jb
pop
mov
fisttp
aaa
pop
sbb
shl
int3
daa
push
loop
and
push
in
add
jne
xor
gs
lock
ins
jae
addr16
push
push
repnz
jge
in
fdivr
add
mov
adc
adc
inc
add
(bad)
cmp
jb
cli
sbb
test
out
out
xchg
lea
pandn
jecxz
outs
jg
jmp
mov
lock
ja
sar
add
dec
or
add
add
movzx
xor
adc
inc
out
mov
adc
xchg
xor
mov
adc
out
xor
jne
push
mov
(bad)
scas
repz
pop
cmps
cld
div
mov
retf
xor
out
dec
add
or
or
retf
mov
or
adc
xchg
retf
add
jge
jbe
mov
and
mov
add
dec
pop
inc
push
(bad)
(bad)
add
(bad)
or
lock
(bad)
in
jne
sub
xor
rcl
mov
mov
call
int3
ret
push
pop
xchg
imul
pop
lea
sbb
pop
mov
inc
(bad)
mov
or
call
mov
sbb
dec
jo
jl
and
mov
pop
enter
sbb
pop
jae
pushf
pusha
jmp
shl
push
push
sbb
rcl
xor
loope
fwait
pusha
mov
cli
push
repnz
xor
jmp
sbb
adc
not
add
int3
add
sub
add
push
cli
leave
fcomp
mov
gs
xchg
mov
(bad)
sbb
sub
mov
and
bsf
mov
nop
lahf
out
es
xchg
xor
mov
sbb
fucomp
popa
mov
inc
std
shl
add
lods
mov
add
adc
call
loopne
add
inc
add
test
push
push
adc
jecxz
inc
inc
or
add
neg
xchg
pop
sub
inc
les
mov
dec
push
popa
push
inc
adc
leave
add
push
xchg
add
cmp
xor
mov
and
popa
dec
mov
fisttp
ss
add
sbb
sbb
cmp
pusha
adc
icebp
mov
(bad)
jle
test
mov
cdq
push
cmp
adc
cmp
pushfw
add
sub
lock
pop
pmaxub
jne
ret
push
mov
into
jbe
ret
and
inc
imul
add
mov
cwde
cmp
movs
cmps
sbb
popf
mov
push
jae
popf
dec
cmp
sbb
pop
out
xor
mov
mov
fsubr
aas
xchg
sub
sti
xchg
ds
mov
jmp
daa
mov
mov
hlt
or
or
div
stos
cmp
sub
lea
xchg
push
or
punpckhbw
pushf
xchg
dec
(bad)
inc
call
cmp
shl
and
imul
ror
mov
adc
or
sub
and
and
push
or
sbb
jl
push
dec
push
cmp
ret
in
sar
sub
nop
and
xor
sub
xor
xchg
call
push
shr
sbb
adc
sbb
adc
lods
cmp
xchg
xor
test
inc
inc
and
imul
ficom
ror
loopne
push
lahf
and
les
adc
jns
push
test
mov
je
call
test
in
lods
or
jle
push
xor
push
test
cmp
je
jb
sbb
sub
fadd
js
adc
pusha
inc
sbb
inc
imul
pop
jno
fcomp
mov
and
test
adc
dec
call
dec
xchg
sti
inc
ret
pop
aas
sbb
mov
nop
xchg
push
fistp
or
add
pop
mov
daa
jmp
sbb
or
jmp
(bad)
mov
mov
jecxz
mov
cmp
add
inc
add
push
call
jg
aad
push
inc
sbb
dec
pop
inc
(bad)
dec
ins
and
cmp
pop
stc
fwait
or
inc
aaa
dec
push
mov
ret
jmp
add
aad
add
jb
dec
repz
in
pop
push
call
imul
sbb
inc
and
sti
loop
fsub
out
xchg
pop
je
jo
call
out
retf
push
push
nop
cmp
cwde
pop
jne
and
jae
sub
inc
pop
mov
or
jne
call
ins
leave
and
or
call
lods
test
ja
pop
inc
dec
leave
and
std
enter
jmp
in
hlt
cmp
sub
adc
push
push
mov
je
push
imul
daa
dec
(bad)
xchg
sbb
push
loopne
jmp
(bad)
hlt
push
pop
sub
jne
and
mov
data16
mov
push
dec
ss
pop
jmp
adc
sbb
and
jmp
repz
inc
and
jno
xchg
in
pop
xchg
hlt
aas
lods
and
(bad)
call
test
call
push
xchg
mov
(bad)
push
pushw
cmp
aas
jmp
cli
and
movs
jg
popa
dec
cmc
add
and
pop
call
test
out
or
add
adc
cwde
aas
pop
rol
pxor
adc
adc
add
inc
arpl
repz
xchg
mov
aas
lahf
jl
dec
xor
lahf
sub
push
je
sbb
mov
or
sub
pusha
sahf
cmp
mov
es
pop
cmp
ds
pop
sti
imul
clc
mov
aaa
mov
cmp
pop
ja
cmps
pop
rcr
sbb
add
jne
pushf
inc
adc
pop
or
mov
jns
cmp
inc
and
call
test
mov
fwait
add
in
mov
std
cmp
ins
xchg
ret
mov
mov
loop
adc
cmp
push
or
pop
call
mov
push
(bad)
gs
and
push
push
lea
stos
xchg
jge
dec
bound
shl
movs
pop
fisttp
pop
push
mov
or
dec
stc
inc
das
jmp
neg
mov
cmp
jp
xor
mov
and
push
xor
pop
sbb
push
mov
in
and
and
jle
pop
or
std
in
rol
xchg
stos
call
sub
call
or
jl
call
aad
add
push
pop
jmp
dec
repnz
nop
jmp
or
shl
inc
mov
sub
int
loope
jle
push
jne
push
xor
push
push
mov
jmp
add
adc
daa
push
fistp
xchg
push
push
inc
lahf
ds
or
mov
lods
shl
xchg
daa
pop
loope
into
xor
dec
jmp
pop
loop
cmp
aaa
sbb
jmp
mov
je
call
enter
mov
scas
push
mov
jne
call
pop
xor
push
jns
repnz
cmc
rcr
push
nop
mov
cmp
jge
ret
adc
mov
dec
(bad)
ficomp
dec
fadd
call
fsqrt
enter
push
xor
div
(bad)
cli
add
jo
cmp
jmp
ficom
push
cwde
and
xchg
cmp
ret
(bad)
jmp
pop
loopne
inc
sub
and
addr16
push
inc
pop
retf
push
xchg
add
and
or
cld
mul
push
mov
mov
aam
movs
out
add
add
sub
add
aad
adc
int
add
clc
add
sub
add
sahf
lahf
(bad)
lock
inc
jmp
jne
call
xchg
ror
jb
jne
aad
pop
pushf
inc
imul
(bad)
cwde
js
or
inc
sbb
pop
jne
pop
push
sbb
mov
movs
icebp
push
and
xchg
cmps
iret
dec
and
in
enter
jecxz
in
jmp
(bad)
jmp
xor
jg
ds
pop
shl
or
sub
push
hlt
and
cli
enter
scas
xor
mov
into
pcmpgtb
and
jne
dec
in
adc
sti
sub
rcr
jo
js
mov
jmp
loope
scas
mov
pop
scas
cmp
push
cld
mov
dec
xor
leave
popa
xor
add
xchg
dec
idiv
lods
jg
iret
jmp
or
loope
test
dec
retf
inc
xchg
shl
push
cmp
cmc
xchg
pop
cmove
iret
test
sbb
adc
xchg
sub
or
gs
xchg
enter
lea
sbb
mov
pop
in
mov
jno
or
mov
sbb
cmp
out
pop
cmp
inc
call
inc
sub
jne
sbb
cmp
and
mov
jb
dec
inc
fst
jno
mov
jb
mov
pop
ret
mov
ins
mov
movs
imul
or
mov
mov
and
adc
xor
bound
and
pop
je
call
or
stos
shl
mov
pop
xor
inc
pop
push
jp
loope
xor
add
mov
pop
push
sar
mov
jmp
jecxz
pusha
test
sbb
mov
jno
push
push
in
push
aaa
pushf
fadd
int3
pop
pop
xchg
fdivr
les
or
mov
cmps
adc
lahf
dec
mov
adc
iret
dec
sbb
data16
or
cs
daa
inc
mov
dec
sub
fwait
sbb
jo
inc
out
cli
repnz
dec
sbb
dec
inc
imul
icebp
and
repz
les
(bad)
push
pushf
ds
xchg
push
jne
push
sbb
fisub
add
mov
cmp
test
mov
push
repnz
cmps
dec
xchg
xor
xor
xor
jo
sub
push
(bad)
clc
sub
inc
add
gs
iret
(bad)
mov
(bad)
aam
dec
mov
aam
ins
xor
push
add
cld
jne
aam
cwde
enter
jl
inc
xchg
test
push
call
test
repz
(bad)
mov
mov
sar
(bad)
jns
jmp
xor
push
and
dec
adc
pop
test
jne
and
sbb
or
or
sub
and
add
and
cdq
cmp
or
es
mov
fdivr
fiadd
add
adc
cmp
cli
aad
cld
ret
retf
pop
inc
jecxz
rsqrtps
pop
mov
jne
pop
pop
xchg
and
xchg
das
adc
inc
in
jmp
sub
sbb
or
jns
xchg
push
ret
or
xchg
jp
mov
or
jge
repnz
xor
mov
cmp
and
loopne
add
cld
sub
jbe
xor
in
and
mov
add
dec
xchg
push
je
rcr
mov
scas
or
leave
jne
sub
pop
lods
jp
push
sub
push
mov
pop
mov
test
cmp
stos
mov
or
xor
(bad)
or
cmp
das
mov
push
sbb
cli
adc
sbb
test
and
add
shr
in
cmc
sbb
xor
mov
or
push
mov
jnp
push
sbb
rcl
inc
add
cmp
inc
call
xor
cmp
sbb
adc
sub
mov
adc
xchg
or
and
push
mov
adc
cmp
jno
sbb
and
call
add
nop
mov
fidivr
push
in
xlat
cmp
inc
cmp
ror
sbb
je
rcr
cmp
jae
adc
hlt
rcr
push
add
add
jmp
cli
out
jno
imul
in
stc
nop
dec
dec
dec
cdq
ins
fs
xor
mov
and
and
jb
aas
ficom
and
shl
js
fstp
jl
es
std
cmp
ror
cld
jecxz
cmp
les
das
mov
pop
cmp
mov
sti
inc
call
ror
mov
lahf
mov
sbb
cli
test
jo
je
mov
adc
ins
jns
sbb
(bad)
test
cmp
js
jl
and
jl
xor
in
add
clc
js
inc
jl
and
jg
sub
cmp
test
enter
xor
or
nop
mov
push
nop
or
icebp
mov
xchg
push
hlt
mov
cli
and
enter
xor
and
hlt
mov
mov
lock
cwde
cmp
(bad)
rcr
adc
mov
les
bnd
xchg
pop
repnz
mov
mov
bound
jb
push
inc
mov
mov
mov
shr
cmp
fmul
xchg
icebp
out
aas
inc
and
or
rcl
stos
jns
or
mov
rcl
dec
test
adc
mov
adc
in
lahf
mov
sbb
mov
push
mov
jmp
rcr
(bad)
test
cmp
fmul
jl
and
fsub
je
or
loopne
in
adc
out
and
nop
fdiv
loopne
in
in
or
cmp
and
cmp
or
cmp
and
xchg
mov
jnp
jl
or
or
gs
and
sub
push
sbb
sti
and
cmp
cmc
sbb
hlt
mov
xchg
jge
inc
in
sub
je
inc
xor
in
cmp
mov
xchg
ffree
test
gs
mov
jmp
push
or
sub
or
lea
fld
push
mov
or
cmp
sub
scas
and
mov
sidtd
pop
imul
repz
lahf
pop
and
xchg
ja
sub
fcmovbe
repnz
sub
xor
call
cmp
sti
lea
fild
add
xchg
inc
and
jge
mov
mov
xor
push
jno
lods
push
xchg
mov
adc
shl
bts
inc
add
test
data16
xor
xchg
mov
lea
mov
and
test
cmp
je
mov
and
mov
cmp
pusha
push
inc
adc
aam
dec
bound
sbb
imul
addr16
jae
inc
xchg
test
cmp
sbb
or
add
repz
jge
adc
xchg
sub
xchg
call
dec
fucomi
stos
inc
in
ud0
xchg
cs
sub
push
dec
jnp
mov
sub
jbe
or
cmp
fs
sub
call
or
pusha
add
push
push
adc
les
adc
iret
jmp
sbb
out
cmp
sbb
or
mov
mov
or
adc
push
jne
inc
test
add
push
add
call
and
add
push
pop
or
(bad)
jne
mov
xor
in
cld
or
hlt
movs
push
push
sub
clc
and
sbb
cmp
ss
xor
icebp
rol
push
push
nop
and
inc
jns
pop
or
mov
push
push
sbb
push
mov
jbe
mov
lea
or
mov
leave
lea
sub
test
mov
mov
mov
pop
(bad)
inc
sar
int
test
les
fwait
push
lds
ror
fucomip
sbb
jl
push
int3
push
rcl
mov
lods
ins
mov
xor
push
and
lods
retf
int3
call
(bad)
or
gs
and
not
or
lea
pop
enter
jnp
dec
or
sub
cs
mov
in
push
sbb
loop
cmp
retf
add
sub
jne
or
sbb
sbb
and
ret
sbb
adc
je
ins
adc
lea
mov
jg
jl
test
jo
cwde
jmp
inc
test
and
add
cmp
pushf
ror
push
mul
test
mov
inc
(bad)
movs
sub
popf
mul
int3
movs
push
inc
or
aam
pop
or
or
push
and
or
inc
or
out
sbb
sbb
xchg
jle
dec
push
dec
push
ror
loopne
add
add
call
jl
xchg
shl
cwde
xchg
jg
fst
jne
scas
sar
cmp
call
and
mov
ss
dec
ss
and
retf
jnp
clc
je
sub
cmc
shl
jle
add
mov
je
and
(bad)
add
adc
dec
and
sbb
jb
mov
in
mov
fld
adc
mov
mov
sub
and
aam
pop
or
test
shl
cmp
sbb
imul
inc
dec
jmp
xor
mov
fisttp
clc
jmp
sbb
add
pop
mov
popa
jb
call
jle
and
cli
test
call
xchg
cmp
sbb
or
fld
xchg
je
push
es
test
loop
mov
cmp
cmp
fnstcw
or
or
lahf
ret
mov
pop
dec
mov
inc
(bad)
jmp
rcl
call
test
fld
cmps
xor
mov
sbb
xor
adc
jle
pop
ror
inc
push
sbb
sbb
sbb
pop
mov
mov
sbb
mov
test
(bad)
sar
in
mov
ror
rol
and
pop
jo
call
or
mov
popf
jmp
mov
add
sub
pusha
outs
xlat
adc
call
loopne
les
je
push
push
ss
int
dec
xchg
push
sub
jne
xor
or
call
mov
rcl
mov
xor
or
dec
imul
out
pop
iret
inc
push
xchg
sub
call
sbb
inc
loope
push
aad
popf
sbb
or
jle
add
push
(bad)
out
and
sbb
push
cmp
pop
inc
add
mov
mov
sbb
cld
adc
push
in
dec
rol
push
(bad)
les
bound
pusha
ss
mov
push
pusha
or
and
movs
jne
lock
std
call
pop
test
addr16
loopne
dec
adc
cli
mov
ror
push
in
cmp
dec
int3
pop
dec
das
dec
das
cld
jg
nop
clc
xchg
sub
adc
loopne
or
push
sbb
ss
dec
loopne
inc
or
and
pop
fadd
mov
mov
cmps
out
mov
loopne
push
jbe
sub
sar
xchg
cld
les
and
pop
push
in
cmp
in
in
call
mov
jnp
rol
shr
adc
adc
inc
sbb
mov
movs
imul
jge
sar
fcomp
add
cmp
xor
xchg
fldcw
sub
push
sbb
loope
fmul
add
push
cmovo
mov
dec
aaa
inc
jmp
add
les
frstpm(287
inc
aam
mov
push
leave
add
call
xor
xchg
and
xchg
ins
push
jecxz
in
inc
fsub
sbb
lock
inc
call
lea
push
fs
aas
fcom
add
and
adc
rol
inc
mov
jmp
cmp
stos
inc
mov
je
mov
and
mov
cmps
xlat
(bad)
pop
daa
xor
nop
(bad)
inc
push
mov
mov
aam
ret
shl
jno
sub
je
rol
mov
inc
inc
cmp
pop
jne
das
or
sub
jmp
sbb
push
int3
ss
es
jg
sbb
enter
div
cdq
loopne
push
sahf
dec
in
std
jl
adc
loope
cmp
push
mov
fldcw
add
xor
cmp
inc
jne
pop
dec
sbb
popa
add
call
xchg
add
sub
div
imul
test
je
xchg
jbe
push
jo
(bad)
call
xchg
sub
pop
ret
or
pop
ret
ss
sbb
and
and
fcom
adc
pop
fnstenv
pop
mov
fcmovb
popa
mov
mov
jg
call
cmp
icebp
(bad)
in
jae
ins
in
sbb
mov
fcomi
je
pop
dec
mov
jl
pop
inc
in
sub
mov
cmc
push
cld
call
adc
leave
dec
test
in
push
(bad)
clc
xor
jle
adc
xlat
mov
pop
jnp
add
mov
mov
inc
add
movs
jne
mov
push
adc
dec
cmp
or
lea
dec
push
aam
sub
xchg
cmps
movs
push
out
jo
and
in
push
xchg
cmp
or
xor
cmc
or
mov
shl
test
shl
or
sub
and
ret
or
imul
not
test
sbb
enter
fstp
or
outs
stc
mov
pop
nop
push
mov
rcr
int3
and
and
add
or
sbb
xchg
inc
jge
mov
cmp
push
add
or
or
sbb
xlat
adc
lds
inc
add
pop
inc
add
out
inc
pop
icebp
adc
je
or
stos
sbb
xor
or
pop
mov
inc
in
out
retf
add
mov
div
push
mov
and
dec
je
es
sbb
add
push
mov
add
adc
mov
adc
xor
or
xchg
adc
je
jo
sar
call
sub
je
push
(bad)
and
daa
dec
ins
and
mov
or
daa
adc
je
and
out
fidivr
fcom
add
pop
dec
adc
mov
push
cmp
test
test
pop
ins
dec
add
jl
xchg
outs
test
je
inc
mov
sub
stc
cmps
les
mov
in
mov
and
cs
ja
sbb
in
scas
into
push
das
push
jne
shl
es
cmp
je
loop
sti
adc
outs
(bad)
cld
loop
add
sbb
mov
test
push
popa
test
jp
ficom
xchg
fidivr
mov
sub
scas
push
cmp
jg
mov
lds
(bad)
cdq
push
cs
mul
scas
enter
stos
and
pop
pop
fbld
scas
push
sbb
punpckhwd
movs
push
loop
retf
shl
movzx
out
push
daa
dec
mov
inc
mov
or
pop
lock
pop
mov
push
sub
and
call
jne
or
or
xlat
cdq
movs
adc
adc
mov
pop
int
call
stos
cmc
sbb
adc
mov
push
sub
rcl
call
out
jno
dec
cld
es
sbb
leave
gs
cmp
stos
push
fwait
movs
mov
xchg
push
and
dec
les
inc
clc
inc
cwde
sub
push
rcr
mov
pop
cmp
and
push
enter
push
cmps
stos
pop
loop
sti
push
inc
dec
nop
cwde
movs
cmp
dec
std
or
and
ja
and
push
test
gs
or
out
sahf
test
je
in
xor
push
stos
cs
and
xor
adc
pop
jns
xor
push
inc
push
jg
inc
movs
sub
nop
mov
xchg
jl
jmp
(bad)
nop
xchg
mov
dec
push
and
inc
xor
fisttp
rcr
push
enter
sbb
int3
inc
or
cld
out
jmp
hlt
mov
enter
or
inc
ror
xor
push
mov
push
mov
mov
push
ins
or
push
inc
xchg
mov
dec
adc
dec
and
adc
sbb
adc
or
rol
enter
and
cmp
int3
les
dec
and
inc
and
inc
adc
ins
les
hlt
std
nop
push
loop
adc
cmp
xlat
adc
loop
adc
sbb
mov
adc
hlt
in
popf
ds
inc
fisub
xor
mov
add
adc
jb
fiadd
xor
sbb
adc
mov
xchg
mul
xor
leave
mov
scas
xor
clc
push
mov
jge
push
js
inc
sbb
adc
pop
inc
movsx
mov
cmp
stc
push
jmp
xor
jne
cmp
xor
cmp
cdq
jg
das
push
inc
push
jecxz
stos
fisub
inc
mov
dec
in
ja
or
jmp
jle
pop
cmp
cld
loopne
or
ja
movs
cld
dec
or
push
xchg
in
jmp
cld
aam
scas
cdq
and
mov
dec
jle
push
lea
sub
mov
push
xor
mov
inc
int3
push
and
pop
mov
mov
mov
and
dec
movzx
mov
sub
pop
push
pop
das
mov
adc
pop
cmp
repz
jne
ss
stos
pop
call
ins
add
imul
dec
jmp
std
mov
or
mov
xor
and
les
call
movs
push
xor
imul
mov
xchg
daa
cmps
xor
sbb
lea
scas
out
jne
add
movs
out
adc
pop
(bad)
fst
mov
push
xchg
rcr
test
cmp
push
push
and
fisub
shl
call
mov
mov
cmp
int
jmp
xor
and
adc
add
pop
pop
push
inc
push
inc
xor
cmp
test
in
xchg
test
mov
add
stos
ss
xchg
sbb
jmp
mov
in
dec
cmp
hlt
push
pop
cmp
push
push
adc
add
aas
adc
sbb
adc
or
or
lock
push
pushf
iret
jmp
or
jne
and
push
aas
int
add
jne
test
pusha
jmp
shl
adc
sub
nop
nop
sahf
push
fld
cmp
dec
stc
mov
adc
inc
xlat
or
and
or
mov
inc
fmul
into
inc
xchg
sub
xor
test
or
jae
rcr
xor
xor
test
(bad)
je
and
push
loope
dec
adc
mov
xor
inc
cmp
je
call
popa
les
and
sbb
adc
and
sub
inc
sub
fisttp
sbb
fadd
push
xchg
mov
or
sar
popa
call
cmp
and
push
xchg
and
movs
sub
adc
imul
bound
jmp
inc
(bad)
add
or
mov
inc
mov
mov
and
mov
and
sub
mov
ins
daa
sbb
ja
jne
sbb
mov
das
shr
or
imul
in
or
arpl
cmp
jmp
and
xor
or
mov
daa
jbe
mov
xchg
jo
pop
mov
push
scas
call
and
sbb
push
xor
mov
sub
jmp
mov
cmp
je
lods
out
xchg
sub
mov
lock
add
ret
imul
jl
push
popf
mov
pop
sar
push
mov
loop
stc
call
or
jp
imul
xchg
sbb
sbb
lea
imul
and
sub
xchg
dec
loopne
inc
test
cmp
mov
sub
nop
mov
add
cwde
jmp
xchg
cmp
and
outs
mov
leave
lods
les
ret
sub
jmp
mov
pusha
adc
pop
mov
mov
inc
pop
or
inc
lods
inc
jno
push
mov
out
imul
jmp
mov
push
and
ret
je
ret
pop
mov
jge
cmp
sub
daa
push
(bad)
outs
or
push
mov
sub
jo
in
xchg
and
or
jmp
xchg
es
lods
push
popf
cdq
sub
and
push
xor
push
mov
retf
push
arpl
(bad)
adc
leave
mov
cld
pop
pop
jg
adc
xor
and
inc
mov
cmp
cmp
adc
pop
sbb
jmp
pop
inc
xor
ret
outs
pop
xor
jne
bound
xchg
call
test
(bad)
mov
push
sbb
push
loop
fs
mov
sbb
inc
and
sub
push
lea
movs
retf
(bad)
push
outs
inc
push
pop
jecxz
dec
add
daa
hlt
sub
push
(bad)
jecxz
in
and
in
loope
pushf
push
push
lods
adc
and
popf
and
mov
dec
cmp
rcr
cmp
cmps
mov
hlt
bswap
jae
jmp
call
xor
ss
adc
mov
icebp
fidivr
out
xchg
rol
push
push
clc
pushf
push
push
xor
sbb
jge
cli
and
sbb
in
out
push
cmp
call
pop
and
cmp
or
sbb
(bad)
push
or
push
cmp
sub
ja
arpl
cmp
cmps
stc
jle
lea
ror
fist
sahf
out
pop
fwait
xor
or
jae
mov
cmp
call
push
push
cmp
jle
popf
push
and
sub
pop
fldenv
push
mov
xchg
add
sub
add
push
bound
adc
aaa
sub
sub
mov
mov
add
jge
pop
cmp
add
push
pop
sbb
inc
push
or
add
jmp
gs
pop
imul
mov
or
jecxz
arpl
outs
daa
push
push
adc
std
jb
sbb
icebp
dec
(bad)
xchg
cmc
mov
push
or
je
popf
xlat
xchg
push
pop
cld
add
jg
lahf
cmp
inc
adc
movs
sub
xchg
xchg
ret
inc
push
(bad)
dec
xlat
std
sti
xor
jne
cmps
lahf
jl
sbb
jne
push
pop
push
fisttp
fsubr
jmp
push
retf
mov
call
push
es
aad
cmp
adc
sbb
enter
push
and
inc
in
jmp
je
(bad)
aad
retf
lds
inc
hlt
mov
in
inc
sub
adc
mov
mov
push
adc
and
into
or
loopne
push
inc
add
les
push
and
inc
cwde
sub
adc
push
sahf
and
sub
adc
lock
pop
cmp
pop
enter
xor
and
(bad)
dec
iret
and
cmp
cmc
(bad)
loopne
push
popf
adc
pop
push
nop
adc
adc
or
cmp
dec
cmp
lea
cmp
sbb
mov
jp
dec
aas
pop
inc
fs
adc
mov
sub
xor
pop
jl
ret
xchg
dec
(bad)
cld
push
cmp
mov
cwde
sbb
gs
and
(bad)
jp
mov
ficomp
hlt
adc
and
dec
adc
inc
dec
cmc
cmp
add
or
lea
mov
arpl
fs
xor
pop
inc
pop
or
call
leave
mov
xchg
fmul
inc
fs
jbe
cmp
adc
mov
xchg
xor
test
das
xchg
adc
and
and
adc
les
das
out
inc
inc
loop
data16
cli
cmp
retf
mov
sbb
push
enter
repz
adc
pushf
inc
sub
repz
add
sbb
rcr
mov
or
shl
dec
int
je
inc
cdq
test
jl
inc
gs
sub
adc
mov
push
mov
mov
xchg
in
push
xchg
sub
or
push
inc
mov
stos
sbb
adc
movs
mov
icebp
push
xor
and
mov
cld
pop
cmp
mov
test
sbb
sub
push
sbb
pop
cmp
popf
pop
add
cmp
mov
mov
mov
dec
sbb
xor
loop
mov
adc
or
cdq
cmps
not
push
pusha
inc
call
in
leave
add
lock
popa
call
clc
or
cld
call
call
icebp
lock
(bad)
sti
mov
pop
mov
les
les
test
ret
iret
cdq
xor
or
stc
pop
test
jmp
psllw
(bad)
cmp
(bad)
(bad)
pop
jmp
jmp
cmc
or
jno
sbb
dec
or
mov
ror
ret
sbb
adc
inc
and
test
cdq
and
sti
test
and
leave
cmp
test
adc
adc
add
test
inc
and
pop
mov
scas
ficom
adc
test
push
(bad)
in
mov
mul
jne
push
test
mov
inc
or
stc
sub
inc
add
sbb
dec
or
sbb
sub
lds
js
pusha
xchg
and
and
sub
sbb
aaa
or
mov
outs
or
push
test
and
adc
mov
in
jbe
loopne
sub
mov
xor
or
mov
xchg
push
stos
call
movs
fldenv
cmp
stc
jne
sti
adc
hlt
je
mov
ss
clc
pop
mov
ficom
pushf
mov
mov
cmp
aam
cmp
mov
xor
inc
mov
cmp
aas
je
xor
lea
push
or
xor
and
xor
add
in
push
xchg
jge
test
retf
cmps
mov
loopne
test
rcl
es
mov
sbb
xchg
dec
test
cwde
or
cwde
movs
dec
push
faddp
cmp
sbb
cmp
pop
jne
push
push
mov
or
adc
popa
in
and
pop
lea
jl
add
cmp
enter
in
adc
pop
shl
movs
push
pop
shr
xor
lock
cmp
jne
mov
test
aam
push
xor
adc
mov
leave
inc
hlt
shl
push
call
mov
or
mov
mov
rol
or
mov
inc
add
mov
or
inc
popf
dec
mov
cmovle
gs
imul
sub
push
aas
lea
pop
mov
dec
mov
std
ins
xor
or
jmp
call
inc
call
daa
daa
xor
push
inc
xchg
inc
std
and
lea
adc
adc
dec
pop
ds
sbb
inc
cmp
mov
and
test
inc
push
movs
mov
popa
adc
push
and
adc
nop
cmp
adc
push
inc
ins
shr
pop
adc
sbb
dec
push
cmp
mov
xor
inc
inc
arpl
sbb
lds
pop
push
mov
adc
adc
jmp
jmp
and
mov
mov
and
push
inc
loope
cwde
sub
daa
pop
fs
push
cmps
mov
or
clc
and
jmp
fidivr
or
pop
adc
add
fsubr
xor
stos
je
rcl
xor
ins
or
mov
fld
pop
push
jmp
or
dec
mov
cmp
xchg
cdq
stc
hlt
rcr
jecxz
pop
adc
cmps
push
sub
inc
icebp
add
mov
mov
jmp
sbb
mov
jl
(bad)
jg
sub
ret
(bad)
popa
sbb
and
inc
inc
test
mov
inc
adc
mov
ror
lahf
and
leave
jns
test
pop
mov
loopne
mov
push
stos
adc
mov
push
ror
cmp
(bad)
and
jl
lahf
fptan
das
dec
js
out
or
and
sti
dec
pushf
mov
adc
cmovno
test
dec
jne
sbb
dec
sbb
daa
pop
cld
dec
jnp
ins
push
and
xor
into
push
stos
adc
and
add
mov
aam
leave
aad
lahf
cmps
push
xchg
dec
aad
movs
or
call
push
adc
add
popf
out
call
pop
push
jne
add
add
jno
adc
xchg
or
loope
data16
pop
mov
adc
pop
pop
movs
mov
push
pop
aad
inc
inc
mov
je
dec
pusha
ins
mov
or
in
cmp
shr
adc
push
and
xchg
out
cmp
ror
mov
jnp
ret
dec
adc
fld
call
icebp
out
inc
rol
jl
jle
and
pop
adc
js
into
add
add
pop
pop
jmp
ror
data16
pop
xchg
jne
mov
scas
les
add
sub
je
sbb
add
cli
add
push
mov
push
push
mov
pop
and
and
(bad)
push
sbb
cmp
mov
lea
xor
push
mov
std
xchg
enter
mov
es
and
pusha
inc
cmp
inc
sbb
fst
xlat
mov
jne
push
jno
add
sbb
shr
ja
or
imul
nop
push
inc
fld
lds
sbb
mov
dec
inc
adc
hlt
xchg
dec
mov
jno
xchg
and
dec
cmps
jg
adc
xchg
loope
loope
push
and
mov
aad
mov
mov
mov
inc
dec
int
push
fwait
or
cmp
cld
inc
push
comiss
push
push
jo
mov
mov
pop
gs
mov
push
repz
xor
pop
inc
inc
jmp
mov
inc
xor
mov
push
xchg
je
push
lods
(bad)
xor
call
xor
retf
or
dec
mov
pop
adc
sub
sub
shl
jne
pop
mov
pop
inc
movs
ja
popf
movs
mov
ret
xor
imul
jne
inc
in
adc
dec
sbb
mov
mov
adc
and
sub
add
sbb
sbb
and
xchg
xchg
cmp
lea
pop
nop
popf
dec
or
push
pusha
inc
dec
sub
test
ja
outs
not
mov
out
rcl
cmp
sub
ins
int
lea
shr
xchg
mov
push
push
fcomp
dec
(bad)
cwde
xor
mov
add
add
imul
push
jge
pop
repnz
test
je
mov
or
adc
xchg
adc
mov
xor
nop
inc
add
fcmovnb
(bad)
cld
push
mov
jbe
mov
and
push
adc
inc
sti
hlt
ret
xor
sub
lea
adc
mov
(bad)
shl
int3
or
test
jnp
or
xlat
cmp
or
leave
push
jbe
pop
leave
push
out
les
mov
mov
or
xor
dec
clc
jno
sub
add
int3
jne
loope
mov
sub
adc
pop
push
xchg
mov
adc
dec
shl
in
jg
in
xor
neg
mov
and
sub
ficom
mov
mov
xchg
sub
mov
push
test
ret
(bad)
inc
push
and
and
mov
std
das
int3
mov
hlt
nop
sbb
pusha
xor
dec
pop
adc
mov
pop
inc
ret
dec
sar
jne
in
and
mov
scas
xchg
cmc
or
cld
popa
jns
test
call
(bad)
pop
sbb
movs
test
adc
lods
mov
out
or
js
or
or
rol
dec
sub
cmp
mov
mov
in
inc
xchg
adc
test
test
movs
xchg
movs
dec
call
push
cmp
adc
mov
aaa
and
and
dec
adc
inc
sbb
loope
adc
sbb
sbb
pop
lahf
retf
xor
or
scas
sub
clc
arpl
mov
push
loopne
fisubr
push
in
inc
sub
or
pop
call
in
lock
mov
and
and
push
push
aas
xchg
or
(bad)
fnsave
mov
adc
stos
in
std
hlt
add
fisub
imul
sub
imul
cmp
sbb
xor
aas
sbb
pop
cwde
repnz
call
cmp
sub
adc
sahf
pop
rcl
cmc
arpl
nop
xchg
sub
sti
sub
sub
(bad)
xor
sar
leave
clc
outs
push
lock
fcmovu
add
dec
(bad)
call
cdq
loopne
push
into
push
leave
out
or
idiv
dec
jp
jnp
lods
and
adc
ins
cmp
pop
imul
test
idiv
pop
ds
ret
or
add
fild
cli
push
mov
les
in
mov
and
xlat
xchg
fst
push
call
xor
or
mov
dec
mov
ret
mov
mov
cmp
or
inc
dec
sub
cmp
jle
dec
(bad)
sub
push
jmp
inc
and
inc
jne
sub
aaa
setne
daa
cmp
dec
or
adc
mov
cmp
and
(bad)
out
add
movsx
push
mov
lods
xor
inc
push
push
std
test
xchg
mov
add
add
mov
or
fstp
mov
mov
sub
and
leave
lahf
ror
dec
pop
xor
loopne
inc
ja
cmp
test
xor
jae
xchg
popa
mov
push
ja
cdq
jbe
mov
xor
add
hlt
mov
sbb
sub
mov
and
or
(bad)
aam
loope
mov
jp
dec
retf
push
push
push
mov
cld
mov
pusha
sbb
push
mov
pop
or
dec
cmps
call
and
mov
retf
imul
fs
sub
mov
cld
pop
cmps
sbb
mov
or
cwde
frstor
loop
pop
call
shr
adc
ret
xchg
int3
inc
call
or
int3
lods
fdiv
pop
xchg
repnz
cmps
movs
adc
or
inc
sbb
adc
or
sub
or
ds
cmp
lds
and
sub
adc
loopne
or
test
adc
clc
jmp
adc
(bad)
xor
cdq
into
sub
das
and
or
cmp
pop
movs
sub
call
push
mov
jno
or
aam
cmp
repz
inc
dec
mov
in
ins
in
sub
or
sbb
jmp
call
jge
jno
sbb
push
shr
inc
movs
cmp
mov
loop
xor
and
push
(bad)
out
sbb
dec
and
sub
jnp
cwde
jno
push
jmp
ja
mov
leave
mov
add
push
cdq
(bad)
xor
out
xchg
cwde
(bad)
mov
xor
push
sub
sbb
dec
adc
inc
in
aas
sub
or
inc
jne
push
nop
ret
sub
(bad)
add
pop
ret
outs
mov
lahf
in
mov
pop
and
sbb
sub
cld
push
dec
mov
and
pop
movs
adc
push
mov
xor
pop
fadd
dec
push
and
arpl
dec
cmp
adc
stc
stc
and
and
imul
dec
test
adc
pop
adc
adc
pop
test
xor
or
or
nop
inc
push
lock
movs
jp
icebp
or
retf
sbb
test
and
fsub
pand
fisub
fmul
jge
out
pop
call
cld
cmp
cmc
repz
daa
loope
adc
lea
pop
bound
pop
fwait
loop
mov
stos
push
mov
xor
in
iret
adc
cmp
or
ins
cmp
jne
fwait
xor
sub
je
push
outs
pop
es
movs
cdq
(bad)
pop
outs
push
daa
inc
jl
into
and
call
test
adc
sbb
iret
add
sbb
mov
stos
jb
xor
adc
xor
inc
call
cs
pop
inc
mov
inc
out
cmp
mov
adc
jmp
cld
lods
push
mov
mov
fcom
clc
enter
ret
mov
mov
jg
xchg
inc
sti
adc
call
jb
mov
jne
ficom
(bad)
icebp
cmps
pop
ins
bound
adc
push
xor
retf
je
movs
sbb
push
(bad)
call
push
jne
mov
xor
add
fs
xchg
sbb
mov
mov
push
retf
ss
inc
add
push
sub
push
pop
adc
es
sub
push
cli
xchg
dec
push
jne
leave
jge
jmp
push
push
ret
mov
dec
loope
int3
mov
xchg
adc
and
mov
or
or
add
adc
nop
loopne
or
fcomp
push
push
xchg
mov
call
mov
(bad)
lock
push
xor
or
cmp
mov
shr
sbb
enter
add
push
and
pop
and
adc
pop
push
jae
lea
add
push
test
fisubr
push
and
retf
pop
mov
and
push
push
cmp
add
or
sbb
mov
fstp
sbb
push
ret
cmp
shr
xchg
pop
ret
sbb
das
lods
and
add
or
es
retf
rcl
sub
int3
adc
sub
pop
adc
and
clc
bound
sbb
xchg
adc
or
js
push
or
sar
clc
push
jns
or
aas
push
jl
pop
mov
xchg
movs
mov
add
push
mov
mov
stos
xor
pop
inc
(bad)
xchg
iret
cmp
pop
pop
sub
add
push
lea
(bad)
lock
ret
leave
push
and
sub
jmp
cdq
mov
je
push
and
mov
pop
mov
fst
xor
vpermi2b
mov
mov
or
in
sahf
xor
adc
push
dec
push
xchg
inc
movs
imul
xor
cdq
aaa
mov
jne
sub
sar
sbb
and
in
pop
data16
(bad)
and
js
or
sub
or
adc
push
(bad)
rcr
cmp
test
in
aaa
(bad)
push
data16
stos
fstp
cli
mov
jle
test
cmc
or
ret
inc
or
or
jmp
pusha
pop
push
push
push
sub
xor
aaa
lea
test
cmp
into
in
cmp
cmp
mov
adc
or
xchg
and
adc
push
xchg
push
out
and
or
clc
inc
dec
dec
rcr
pop
pop
jb
pop
push
data16
pop
call
icebp
sbb
sub
je
push
pop
or
adc
xor
sbb
push
ror
lods
sbb
mov
or
mov
xchg
mov
fdivr
add
inc
push
sbb
mov
add
adc
popa
push
pop
aas
shl
mov
inc
xchg
and
es
je
and
xor
push
push
inc
or
call
adc
xor
push
push
lea
bound
jp
xchg
push
cs
nop
dec
neg
inc
fidiv
jae
sbb
push
dec
das
fcmovb
inc
bound
push
adc
je
repnz
hlt
enter
inc
dec
ret
cli
(bad)
popf
add
(bad)
js
fs
movs
dec
xchg
xchg
and
inc
pusha
push
mov
adc
and
dec
push
xchg
or
inc
call
inc
inc
shl
enter
push
push
push
xor
rol
sbb
data16
clc
or
mov
jae
hlt
les
push
je
push
xchg
xor
dec
inc
pop
outs
mov
ret
and
and
cmp
push
and
dec
jl
nop
and
loop
clc
and
jbe
push
dec
sub
fs
adc
and
dec
mov
les
rol
mov
ja
sbb
sub
dec
dec
xchg
data16
mov
ret
dec
in
cli
adc
js
sbb
xor
pop
adc
dec
nop
xchg
mov
ror
push
jns
adc
xchg
and
cs
cmp
dec
adc
push
and
fdiv
loopne
adc
or
adc
jp
sbb
sub
inc
xchg
pop
and
xchg
and
dec
clc
mov
adc
and
inc
ds
mov
outs
and
dec
xchg
xchg
stos
and
mov
lock
sbb
sub
add
adc
xchg
(bad)
and
inc
loop
mov
adc
mov
pop
mov
mov
dec
scas
xchg
mov
enter
ds
test
and
inc
push
or
add
cli
test
out
and
dec
ficom
mov
xchg
and
dec
adc
pop
mov
inc
and
dec
sub
inc
mov
pop
mov
mul
jbe
jle
loop
nop
call
dec
in
xchg
mul
(bad)
data16
or
mov
dec
retf
and
push
or
mov
xor
xchg
push
(bad)
push
mov
aas
in
mov
fmul
mov
inc
ins
adc
dec
dec
ds
sub
and
inc
jg
fisttp
repz
xor
or
jnp
fisub
inc
sbb
cdq
cmp
or
dec
mov
dec
xor
and
push
and
dec
push
jno
inc
jle
enter
stos
and
inc
adc
and
dec
sbb
push
and
and
jge
jmp
mov
cmps
xchg
jle
jo
fs
mov
and
dec
and
adc
hlt
jl
fadd
mov
dec
int3
adc
and
or
xchg
dec
and
xchg
push
data16
mov
or
mov
push
nop
xchg
sub
dec
add
ss
xchg
or
pop
inc
ins
push
add
dec
add
mov
inc
mov
hlt
and
push
sti
and
adc
or
xchg
push
je
scas
mov
xor
cmp
and
inc
pop
imul
mov
adc
xor
jae
fisubr
pop
fimul
inc
cs
pop
xor
in
dec
xor
push
je
test
and
fidiv
pop
sbb
xchg
adc
les
push
addr16
daa
les
outs
push
pop
xchg
pinsrw
dec
nop
mov
jl
sbb
jmp
out
or
jg
or
movs
jno
mov
jno
and
xor
xchg
cmp
pop
dec
js
xchg
and
jp
xor
dec
dec
ins
or
add
adc
pop
inc
jns
mov
dec
adc
outs
inc
jno
ja
xor
mov
xor
pop
or
adc
loopne
adc
sub
cmp
add
sbb
mov
inc
sbb
inc
sub
test
xor
adc
pop
and
mov
pop
and
adc
mov
das
rcl
ror
clc
mov
cmp
bound
psubsw
mov
in
call
mov
jbe
xor
mov
sar
mov
std
je
test
loopne
lods
adc
into
push
ss
pinsrw
addr16
mov
push
add
or
jmp
cmp
inc
les
or
push
lsl
rol
jmp
xor
add
inc
jb
ja
(bad)
pop
pop
push
imul
pop
jecxz
das
push
mov
pop
push
fs
or
pop
inc
add
dec
or
xchg
cmp
movs
cmp
cmp
sub
adc
add
xchg
and
xchg
add
movs
push
cmp
lods
pop
mov
rol
mov
dec
cli
jmp
pop
sbb
or
scas
or
mov
rcl
cmp
(bad)
lods
dec
adc
add
sbb
mov
pushf
dec
stos
mov
jbe
shr
add
dec
leave
loop
push
adc
add
push
mov
xor
xor
imul
add
sbb
sub
push
adc
and
adc
add
xlat
dec
push
test
push
and
xchg
or
adc
sub
lock
imul
add
dec
shr
dec
cs
stos
inc
add
cmp
(bad)
and
pop
adc
add
push
pusha
sub
push
and
jnp
mov
jo
test
adc
arpl
mov
and
add
jno
pop
sbb
mov
adc
or
data16
outs
or
test
lods
sbb
test
mov
xor
pop
adc
dec
(bad)
mov
dec
add
xor
fs
mov
jb
xlat
push
mov
(bad)
outs
arpl
jae
dec
sbb
inc
ins
repz
ror
mov
add
push
int3
and
jne
pop
add
into
add
imul
push
xor
xor
push
arpl
sar
push
and
mov
ins
sbb
sub
xchg
arpl
push
mov
add
add
inc
std
fs
jmp
ss
or
sbb
add
pop
sub
rol
aad
jl
stos
fld
scas
xor
pushf
outs
jbe
inc
int3
aad
inc
aam
popa
inc
out
mov
cmp
sub
cwde
push
mov
outs
jne
rcl
add
test
je
sbb
push
push
pop
aam
push
out
scas
cmp
ins
jo
sub
repnz
fistp
and
sbb
push
mov
jbe
pop
or
hlt
xchg
push
and
add
fs
mov
mov
aas
mov
jo
movs
pop
adc
cmp
push
push
push
cwde
cmc
cmp
jo
sbb
dec
outs
xchg
sub
cmp
and
jns
pop
ins
inc
cli
ficom
cmp
ins
inc
inc
arpl
mov
add
les
imul
nop
arpl
stos
and
popf
or
dec
xchg
and
adc
xchg
pop
adc
jb
cmps
adc
jge
push
jns
lea
xor
call
cmp
sbb
jns
scas
sbb
and
inc
inc
push
xchg
bound
jae
or
mov
aaa
into
mov
jnp
pop
xchg
ins
xchg
push
jnp
jae
and
imul
and
sbb
cmps
cs
or
sbb
fwait
sub
loope
add
jo
push
imul
xor
inc
inc
lods
mov
dec
outs
push
xor
mov
xchg
retf
repnz
(bad)
fs
xchg
sub
cwde
addr16
add
inc
jb
jne
lds
pop
cmp
and
cmps
adc
xor
lea
pop
and
push
outs
ins
jne
int3
add
shl
int
xor
sbb
add
fwait
adc
xchg
xor
pop
imul
scas
adc
outs
ins
mov
xchg
xor
in
or
shr
mov
dec
std
and
xor
xor
pop
sub
test
pop
ja
add
cmc
dec
sahf
xor
mov
push
jne
ins
dec
(bad)
je
jb
stc
loop
xchg
mov
cs
pop
or
shl
add
retf
push
sbb
jle
mov
nop
(bad)
jo
ret
push
cmps
lahf
push
jo
mov
inc
pushf
pop
and
xor
mov
jge
inc
inc
mov
mov
outs
stos
or
ja
and
and
popa
dec
or
hlt
call
lds
push
add
pushf
adc
dec
push
in
hlt
(bad)
xchg
mov
gs
add
sub
sub
push
dec
mov
and
mov
pop
and
in
xor
movs
inc
and
xchg
dec
int3
shl
mov
fs
aam
sub
push
xchg
xchg
out
aaa
iret
cli
inc
popf
and
mov
xor
push
pop
dec
cdq
push
push
add
daa
and
adc
inc
jo
mov
jae
ins
lods
scas
nop
cld
sub
push
scas
nop
sti
jo
mov
loop
xchg
push
ret
add
mov
jmp
in
sbb
cmp
pop
test
cmc
adc
lock
ja
(bad)
cmp
cmp
adc
hlt
jnp
jae
imul
xchg
push
bound
stos
adc
outs
popa
sbb
mov
inc
movs
cmps
adc
nop
dec
scas
pop
adc
dec
scas
es
mov
sbb
rcl
bound
dec
movs
push
xor
outs
adc
(bad)
mov
jae
aas
sbb
dec
xor
mov
in
je
cmps
iret
mov
movs
xchg
lods
(bad)
xor
push
jae
test
push
int
sbb
jnp
cdq
fld
or
and
mov
xchg
dec
xor
push
inc
jmp
int
mov
or
fs
adc
cmps
mov
sahf
repnz
into
jle
inc
inc
sbb
mov
and
xchg
jo
fwait
(bad)
aad
adc
(bad)
retf
mov
imul
jne
rol
imul
iret
xor
in
pop
sbb
dec
xor
daa
arpl
sub
dec
jle
dec
mov
push
mov
inc
outs
cmps
dec
fsubrp
ja
jns
imul
inc
mov
dec
jns
push
xchg
fldenv
push
jo
repz
and
or
xchg
xchg
das
ss
test
and
mov
sbb
call
sbb
leave
stos
inc
xchg
cmp
lods
sub
push
mov
or
addr16
inc
ins
leave
sbb
sub
daa
pop
xchg
lods
jns
dec
js
mov
(bad)
lods
mov
rcl
jle
arpl
inc
int
mov
leave
adc
xchg
scas
imul
sbb
pop
cmp
mov
push
sbb
icebp
addr16
jb
gs
pop
sbb
inc
test
pop
inc
call
inc
sbb
push
cmps
cmps
xor
mov
pop
mov
add
dec
xchg
and
arpl
fdiv
inc
jns
pop
adc
xlat
sub
ins
in
xchg
mov
inc
call
cmps
popf
push
pop
and
sahf
mov
mov
mov
xor
xchg
push
nop
cmp
adc
movs
push
adc
xchg
outs
stos
cmp
xchg
push
aad
dec
cmps
gs
dec
cmp
pop
xor
xchg
mov
inc
xchg
movs
sbb
adc
pop
xchg
dec
sbb
pop
xchg
adc
push
call
mov
cmp
ficom
das
xchg
mov
and
or
bound
mov
inc
les
sub
fs
test
push
xlat
xor
xor
test
mov
and
inc
test
cwde
and
data16
pushf
push
int
dec
jne
jecxz
pop
cmps
add
popf
inc
or
sub
sub
mov
aad
inc
and
xor
xor
inc
jne
pop
cmp
adc
cmp
jb
adc
imul
xor
je
test
popf
or
xchg
adc
shl
mov
mov
jecxz
pop
ret
jns
arpl
(bad)
push
mov
cs
sar
and
scas
xchg
popa
jns
jmp
in
stos
dec
(bad)
and
pop
pop
fild
push
lods
mov
gs
mov
int
adc
ret
in
test
adc
mov
ins
jo
jns
cmp
sub
sbb
sub
pop
xor
xor
dec
mov
and
mov
std
pop
scas
xchg
movs
aam
push
je
hlt
ret
scas
fiadd
dec
xchg
mov
sub
push
pop
and
fcmovne
mov
inc
push
cmp
push
sub
addr16
push
or
push
shl
add
cmp
loopne
fwait
sub
dec
jo
jmp
inc
(bad)
fmul
cmp
push
cmps
push
outs
xor
shl
inc
inc
dec
scas
xchg
jo
mov
push
sub
addr16
movs
add
test
jbe
test
ficomp
fbld
push
repnz
call
sub
mov
out
push
adc
sub
adc
nop
test
test
mov
lea
push
adc
fst
cmp
and
jb
push
adc
push
xchg
push
inc
pop
jne
mov
dec
mov
push
inc
jae
and
and
test
dec
push
adc
push
clc
adc
data16
jne
dec
push
fwait
cmps
or
test
pop
jb
mov
cmps
(bad)
push
dec
aam
imul
cmp
push
push
sub
adc
aas
aas
add
inc
pop
push
mov
xchg
add
aas
enter
and
xor
dec
inc
sbb
rcl
cdq
or
or
adc
cmc
je
outs
mov
xchg
push
adc
(bad)
dec
into
data16
data16
push
popa
gs
mov
jle
gs
xchg
jnp
mov
jecxz
ja
fisttp
inc
cmp
add
cmp
and
dec
jns
jmp
retf
neg
rol
and
iret
adc
pop
pusha
ret
shr
adc
mov
leave
ins
mov
mov
xor
enter
xor
adc
mov
mov
imul
jl
fadd
pop
mov
dec
jmp
paddusb
pop
adc
aaa
cmp
xchg
mov
out
mov
mov
mov
daa
pop
sub
pop
mov
js
mov
stc
adc
dec
inc
xchg
mov
push
mov
imul
inc
push
push
es
and
dec
cmp
adc
aas
push
or
pop
nop
and
push
jns
in
inc
xchg
mov
popf
ins
sub
shl
sub
sbb
inc
xor
or
dec
cwde
outs
inc
sbb
fs
cmp
arpl
inc
outs
movs
imul
stos
mov
or
adc
jmp
sbb
aam
pop
pop
addr16
enter
mov
adc
xchg
imul
or
lds
outs
movs
or
xor
sub
or
out
test
and
retf
mov
cmp
ja
call
int3
xor
xchg
push
push
inc
inc
movs
pop
pop
clc
outs
push
out
jae
inc
push
add
mov
cmp
fs
inc
inc
out
and
dec
adc
bound
nop
ret
rcl
pop
jmp
dec
push
mov
and
or
sbb
pop
and
xor
inc
ror
add
adc
pop
scas
push
in
jle
repz
add
xchg
(bad)
cmps
or
adc
mov
and
fs
mov
adc
adc
in
xchg
and
inc
mov
jl
fs
push
xchg
xor
sbb
cld
nop
inc
in
mov
or
pop
push
rcl
push
ror
push
jmp
and
xor
add
or
adc
cmp
dec
cmp
add
or
inc
adc
sbb
fldenv
push
push
push
and
or
cdq
inc
xor
xchg
sbb
push
or
inc
sub
mov
cld
push
adc
push
push
adc
cmp
inc
pop
retf
jb
lods
sbb
jl
xor
and
mov
sub
push
sub
dec
xor
adc
fstp
dec
inc
mov
push
cmp
mov
dec
test
or
dec
jmp
mov
sbb
inc
sub
scas
pushf
and
sub
or
inc
cwde
ror
int3
movs
loop
pop
adc
jns
or
pop
stos
out
mov
inc
push
dec
(bad)
cmp
dec
push
popa
dec
popa
sub
push
and
cmp
outs
pushf
inc
inc
je
ins
and
xor
fs
xor
and
adc
add
pusha
push
dec
pop
push
inc
inc
clc
fs
mov
and
dec
ins
iret
push
bound
neg
push
push
push
or
pop
adc
ret
push
inc
dec
inc
scas
xchg
push
cmp
push
imul
inc
ja
stos
mov
push
and
or
inc
dec
dec
xchg
dec
xchg
xchg
inc
mov
adc
pop
or
pop
lods
jmp
mov
pop
xchg
or
inc
iret
adc
add
xor
xor
ss
cmp
cmp
inc
and
inc
dec
dec
dec
push
dec
dec
push
push
push
lods
or
pop
pop
test
and
cwde
es
push
sub
add
cs
dec
push
inc
aaa
xor
aaa
xor
out
xor
fbstp
pop
mov
cmp
sti
(bad)
cmp
xor
and
xor
das
cmp
jl
out
shr
push
les
cmp
push
xor
adc
jns
jp
xchg
inc
cmps
mov
jns
pop
adc
adc
enter
dec
push
cvtpi2ps
lock
cmps
fld
adc
mov
mov
cmc
inc
stc
dec
mov
xchg
or
push
popa
dec
adc
push
dec
sub
inc
push
sub
adc
pop
call
and
ret
dec
es
(bad)
adc
jo
in
or
mov
loope
cwde
movs
sbb
stc
les
or
iret
inc
in
pop
mov
pop
(bad)
ja
inc
push
dec
cpuid
test
out
dec
dec
cmc
xchg
cdq
sti
and
scas
jb
push
fimul
sbb
adc
xor
sbb
loopne
and
jmp
fild
cld
dec
mov
outs
aaa
or
mov
jg
xor
sbb
es
retf
test
adc
add
jmp
(bad)
jle
xor
jns
hlt
xor
fbstp
xor
ss
loopne
hlt
jnp
add
jne
into
data16
mov
ret
inc
and
and
and
ret
inc
data16
adc
and
je
je
iret
push
sbb
ins
popa
arpl
lahf
aas
cmps
sub
jmp
adc
inc
in
and
inc
or
jmp
pop
adc
or
xchg
test
imul
out
mov
mov
int3
push
je
dec
dec
ror
(bad)
add
rol
cwde
jmp
add
mov
sar
sub
pop
(bad)
js
mov
jae
xchg
add
out
adc
int
xchg
xor
nop
test
jo
inc
sub
fs
pop
add
lds
aaa
and
mov
or
aas
fs
mov
out
imul
add
pop
inc
test
or
xchg
dec
data16
cmp
call
out
dec
dec
outs
or
popa
aas
inc
push
pop
pushf
sbb
(bad)
imul
sbb
inc
test
inc
mov
jne
xlat
or
dec
dec
inc
lods
mov
push
mov
je
adc
test
ret
loope
cmc
inc
mov
loope
xchg
inc
inc
mov
ret
dec
inc
cwde
adc
adc
xchg
lods
inc
pop
and
adc
sbb
cmp
and
mov
adc
rol
push
pop
dec
and
je
pop
and
fcomp
ja
ret
int
and
dec
inc
idiv
or
and
add
pop
test
cdq
sbb
outs
movs
mov
push
les
inc
pop
or
dec
or
mov
inc
popa
dec
arpl
jns
jg
(bad)
and
ror
xchg
dec
or
or
arpl
ins
adc
sbb
mov
pop
dec
add
push
out
push
jmp
and
inc
fs
sub
adc
movs
enter
rol
push
inc
mov
push
dec
mov
sbb
xchg
push
push
mov
push
push
jo
sub
or
xor
xchg
inc
or
sbb
dec
(bad)
mov
shr
xchg
xor
xchg
push
sbb
ins
arpl
adc
dec
mov
dec
sub
adc
inc
xchg
mov
pushf
pop
or
dec
jmp
sbb
or
fmul
fsub
mov
push
js
xor
shr
imul
or
adc
je
inc
mov
add
jae
inc
or
les
pusha
add
fwait
imul
sbb
test
popa
mov
test
outs
jp
dec
ja
ja
push
inc
mov
and
adc
pusha
dec
je
jp
icebp
push
test
das
adc
sub
dec
or
test
or
inc
pop
mov
pop
movs
popf
inc
repnz
fmul
sub
js
push
imul
or
xchg
fisttp
call
xor
adc
dec
jl
or
xor
or
outs
ins
or
jp
call
ja
or
adc
outs
or
mov
adc
xor
jp
push
xor
or
ins
bound
inc
lods
jae
xchg
arpl
push
mov
pop
ins
out
arpl
push
jns
(bad)
(bad)
inc
mov
pop
xor
push
pop
dec
or
dec
push
stos
rcr
mov
jmp
(bad)
cmp
rcl
dec
or
dec
pop
xchg
repnz
jo
and
push
dec
push
xchg
push
(bad)
enter
sbb
dec
push
enter
jp
arpl
dec
pop
je
mov
lock
rcl
push
cmps
inc
push
inc
pop
inc
dec
push
daa
push
ud0
push
or
dec
pop
fs
mov
jns
outs
inc
nop
xchg
mov
push
std
inc
mov
ins
jns
sbb
adc
jnp
add
push
imul
sub
sti
jne
or
xor
cmp
arpl
inc
iret
gs
popf
mov
push
adc
adc
aas
dec
dec
xor
test
cmp
je
sbb
and
cmp
jae
outs
popa
pusha
shl
mov
dec
ds
push
dec
add
movs
xchg
pushf
das
je
push
or
dec
movs
sar
inc
stc
push
xchg
(bad)
cmps
sub
push
xor
and
adc
or
inc
adc
push
push
jge
div
and
inc
push
lds
out
call
rol
add
popa
addr16
fild
xor
push
mov
les
and
cdq
fisubr
pop
adc
and
sub
ins
outs
sub
xchg
test
xor
push
xor
outs
dec
cmp
cmp
sub
xchg
sub
test
cmps
push
mov
ins
gs
scas
adc
mov
std
jp
shl
or
sub
mov
cmp
lea
movs
arpl
mov
cmp
cmp
push
mov
add
mov
mov
mov
sbb
inc
or
or
jle
mov
dec
sub
adc
js
adc
in
cmp
scas
mov
xchg
jnp
ds
push
daa
inc
dec
outs
js
imul
idiv
gs
push
mov
xor
shl
mov
xor
in
jg
stos
int
or
call
or
mov
dec
rcl
inc
mov
jns
jns
and
inc
cli
or
aam
lahf
ins
dec
out
xor
enter
retf
xor
pushf
aam
and
cmp
push
icebp
popa
(bad)
mov
and
repnz
mov
sub
push
xchg
mov
jbe
dec
outs
mov
movs
xor
fisub
dec
sbb
pop
ret
int
add
bound
jle
sub
gs
not
push
sub
aaa
xchg
lods
mov
data16
arpl
jae
sti
sbb
bndstx
cs
cmc
mov
fs
fwait
retf
and
push
sbb
ins
adc
inc
xchg
and
jmp
xchg
jb
cmp
retf
je
xor
xchg
das
stos
sub
mov
retf
adc
aad
xchg
xor
and
jb
xor
xor
call
jb
stos
push
xchg
push
stos
add
inc
inc
xor
pop
xor
dec
dec
push
test
sub
and
and
icebp
and
dec
add
inc
cmp
xor
inc
and
add
jp
push
rcr
push
inc
sub
and
mov
cs
shl
jge
jo
arpl
rol
cs
shr
rcr
ins
iret
sbb
add
repnz
pop
ret
cli
dec
call
push
or
jb
adc
cmp
pop
(bad)
call
mov
push
xchg
cmp
cmp
imul
leave
out
mov
hlt
pop
inc
dec
jo
fwait
push
and
nop
inc
push
cmp
fs
jbe
iret
ins
or
pop
ret
shr
(bad)
loopne
jne
jmp
inc
sbb
icebp
clts
ss
loopne
mov
sub
adc
and
or
jle
cdq
jns
sbb
add
ret
adc
pop
js
mov
loope
jp
sub
jmp
mov
movs
sar
adc
sar
cmp
fidivr
mov
in
or
xchg
clc
rol
sub
add
test
ret
fyl2x
(bad)
lock
stos
xchg
xor
add
std
adc
sub
jb
pop
shl
mov
aam
add
sbb
iret
and
es
aaa
or
push
push
in
dec
xor
xor
fidiv
mov
fcomp
(bad)
fnsave
mul
std
and
movs
jae
inc
les
pop
inc
push
add
xchg
repnz
sub
shr
push
cwde
test
adc
xchg
dec
stos
inc
fimul
dec
adc
cmps
idiv
push
test
call
push
or
push
push
inc
outs
lea
(bad)
jb
arpl
imul
mov
jo
dec
mov
loop
mov
pop
xor
xor
call
add
mov
and
or
adc
xchg
jle
test
xchg
test
dec
lods
dec
mov
cs
adc
(bad)
xor
dec
loopne
adc
je
push
inc
movs
inc
adc
inc
pop
push
cmp
jl
movs
sub
cmp
pop
cs
repz
jmp
iret
dec
dec
fiadd
(bad)
into
dec
pop
ds
push
dec
mov
cmp
push
inc
xor
pop
outs
les
nop
lock
mov
or
push
fld
js
outs
cmp
(bad)
push
(bad)
stc
js
push
mov
mov
popa
ror
sbb
cmp
add
jne
scas
or
je
pop
or
outs
ins
mov
add
dec
inc
mov
rcl
adc
dec
jns
sar
stc
sub
pop
xchg
sub
mov
shr
bound
push
or
xor
inc
lahf
inc
add
push
jmp
push
mov
mov
add
inc
dec
ins
xchg
add
push
and
dec
inc
xchg
pop
and
inc
sub
mov
in
add
dec
adc
adc
call
outs
popa
fmul
sbb
arpl
rcl
adc
add
test
push
adc
pop
pop
jo
clc
mov
sbb
shl
pusha
inc
sbb
enter
sbb
frstor
cdq
or
adc
dec
add
push
and
sbb
mov
xchg
shl
and
mov
inc
mov
int3
js
sbb
mov
xor
xor
sub
jo
and
fs
or
xor
xor
es
adc
aaa
xor
and
inc
jmp
adc
or
mov
jle
fsub
int3
and
mov
mov
pop
adc
mov
mov
adc
test
jp
adc
mov
clc
mov
fmul
push
mov
pushf
popa
xor
or
xor
je
inc
scas
and
pusha
cmp
retf
or
test
popa
movs
xchg
adc
movs
mov
mov
inc
mov
inc
(bad)
fmul
and
(bad)
and
adc
push
test
cmps
xchg
add
(bad)
stc
das
xchg
test
add
mov
jmp
icebp
xchg
adc
ror
test
inc
stc
cwde
mov
pop
sahf
inc
mov
add
and
inc
pop
adc
lahf
and
jnp
xor
ins
mov
scas
or
rcl
hlt
mov
rcl
enter
push
mov
adc
test
and
pop
adc
and
in
and
(bad)
and
pop
mov
add
xor
dec
loopne
bound
les
dec
lods
(bad)
retf
dec
cwde
ret
add
bound
je
adc
bound
movs
out
and
jae
sub
or
xchg
test
and
mov
dec
push
push
sub
int3
push
or
xacquire
and
and
pop
and
jp
xor
xchg
and
or
or
mov
mov
cmps
fld
push
pop
mov
push
fcom
cmps
or
nop
popa
jg
add
lods
test
lods
push
adc
pop
or
pop
test
xor
test
pop
or
inc
ffree
(bad)
and
push
add
aas
xor
jp
sub
add
cmp
(bad)
sub
aad
shl
or
xchg
xor
retf
(bad)
es
mov
cs
jle
mov
inc
iret
sbb
xchg
sub
add
ins
jae
sar
loopne
xchg
mov
ja
adc
mov
and
arpl
add
(bad)
and
pop
fisubr
pushf
int3
or
dec
adc
cmp
cmp
aad
push
in
xor
dec
push
adc
not
add
add
enter
popf
stos
xchg
rcr
push
add
dec
outs
add
out
lds
enter
clc
jl
fiadd
jge
into
cli
jb
lods
(bad)
jmp
daa
(bad)
pop
shr
test
sbb
adc
add
outs
mov
xchg
in
fidivr
int3
je
scas
dec
stos
iret
outs
inc
mov
ds
data16
pop
sub
adc
cmp
adc
jg
test
xor
in
int3
je
add
jg
sahf
jmp
sbb
punpcklwd
cld
loop
mov
pushf
cld
shl
sbb
jns
je
add
or
test
iret
cmp
cmp
imul
or
inc
push
adc
imul
fdivr
xor
ins
pusha
jmp
cmp
mov
jp
adc
shl
leave
cmp
xor
stos
lar
xlat
arpl
xchg
cmp
sar
jmp
add
push
unpcklps
jp
xchg
sub
xchg
loope
and
stos
repnz
sbb
add
sar
xchg
je
cmp
iret
mov
retf
sub
cmps
sbb
dec
dec
adc
mov
in
jnp
fidiv
or
rol
aaa
call
(bad)
imul
add
cmp
shl
adc
and
shl
pop
rol
gs
js
retf
lea
jno
aaa
or
sub
out
shl
adc
repnz
cmc
int
add
xlat
push
and
pusha
sub
mov
rol
cmps
inc
sbb
push
push
in
ret
sub
sar
lea
retf
push
iret
dec
inc
sbb
sub
push
je
fmul
dec
dec
outs
fadd
xchg
xchg
(bad)
inc
sbb
jecxz
dec
cmp
fsubr
xchg
es
inc
std
add
ins
imul
pop
xlat
mov
mov
add
and
sub
adc
push
test
adc
pop
mov
add
cmp
ret
call
inc
xchg
adc
sbb
out
sbb
(bad)
mov
jmp
cwde
fwait
xor
adc
iret
sub
xor
push
push
adc
daa
jbe
mov
sub
xchg
std
push
cmp
cmp
sub
mov
jecxz
jp
cmp
add
cmp
ret
loopne
xor
in
into
cmp
mov
and
adc
jo
nop
rol
je
sbb
jmp
shr
jmp
pop
push
pop
add
imul
mov
lds
jno
sti
push
cdq
std
cmp
sub
pop
(bad)
hlt
adc
fiadd
int3
xor
adc
fild
enter
bound
sub
sbb
jmp
addr16
sub
adc
arpl
push
rol
rol
dec
test
or
inc
sbb
jg
jae
cmc
cmp
add
cld
je
scas
jmp
retf
cmp
xor
js
bound
(bad)
out
clc
mov
or
add
outs
arpl
push
je
cmps
fstp
sub
test
jmp
ins
xchg
nop
xor
xchg
xchg
jecxz
jne
xor
xlat
clc
pop
aaa
xor
into
popf
dec
and
dec
and
sbb
(bad)
rol
pusha
mov
loope
cmp
add
jg
retf
sub
push
fsubr
sub
add
jmp
movs
adc
in
(bad)
sub
(bad)
or
sub
movs
xchg
fst
data16
cli
arpl
shl
lahf
std
sub
and
call
adc
jp
lock
out
sub
sbb
ins
bound
loop
xor
cli
dec
mov
xor
dec
dec
movs
cmp
mov
xchg
ss
fnstenv
cmp
inc
in
or
mov
cmp
or
rcr
int
and
(bad)
shr
daa
or
add
pusha
dec
mov
adc
xchg
nop
leave
mov
push
cmc
int
inc
add
and
sub
shl
or
movs
les
or
retf
xor
cwd
shr
pop
xchg
jmp
sti
jnp
hlt
in
adc
(bad)
pop
adc
imul
dec
adc
push
jb
in
les
cdq
stc
sbb
add
bound
aad
xchg
xchg
data16
mov
sahf
lahf
fstp
enter
sub
cmc
shl
sub
adc
sbb
sbb
outs
mov
lock
daa
data16
shl
push
adc
into
push
pop
daa
jbe
xchg
inc
outs
mov
cld
fwait
sbb
mov
test
imul
push
daa
dec
jae
sar
sub
jbe
jp
shr
popf
inc
jbe
and
sbb
push
cmp
pusha
std
push
sti
loope
inc
cmp
jmp
dec
popa
pop
bound
gs
xchg
cld
rcl
stos
call
into
or
ins
repz
dec
aam
and
imul
pop
arpl
jbe
sbb
push
pop
jns
xor
inc
push
into
jne
mov
mov
push
and
and
push
push
jno
cmp
addr16
and
fidiv
inc
inc
(bad)
jns
push
cmps
pop
inc
xchg
dec
fmul
pop
fs
dec
dec
sub
into
or
cmp
push
mov
call
or
shr
lds
lods
mov
add
inc
inc
push
push
addr16
adc
loop
inc
xchg
cmp
cmp
pop
(bad)
fs
scas
adc
dec
jmp
jae
(bad)
or
sub
adc
sub
sub
sub
jno
xor
xor
jp
mov
and
jge
sbb
mov
dec
rcr
push
jmp
sbb
xchg
add
enter
lahf
jecxz
and
movs
or
data16
jb
ins
mov
movs
sar
and
mov
mov
in
inc
in
push
(bad)
mul
aas
imul
lods
jbe
xor
push
mov
add
mov
pop
jnp
dec
mov
adc
push
test
push
jge
popa
fs
xor
lods
lds
push
xor
inc
iret
lock
xor
stc
xor
ror
cmp
fisttp
mov
jmp
bound
push
xchg
or
push
sbb
or
push
push
jge
js
jl
dec
aaa
sbb
inc
shl
stc
mov
pop
cmps
dec
imul
cs
or
push
loope
bound
mov
cmc
mov
sbb
cld
sbb
and
call
es
xor
adc
inc
inc
stos
daa
lea
pop
push
test
cs
sub
push
pop
mov
pop
test
jb
push
es
sbb
mov
add
pop
imul
into
add
add
xchg
push
jl
cmp
call
and
(bad)
pop
ss
or
add
fld
dec
pop
mov
js
or
scas
adc
xchg
add
add
nop
js
outs
sbb
adc
test
mov
sbb
pop
cdq
add
add
nop
add
stos
add
pushf
adc
adc
sbb
mov
pop
loopne
pop
cs
or
or
out
xchg
or
retf
pop
xchg
les
fadd
or
add
or
dec
dec
inc
pop
push
adc
xlat
xor
and
cmp
xchg
sbb
les
bound
adc
sbb
inc
xlat
rcr
cmp
movs
mov
add
or
cmp
cmp
xor
sub
xor
push
dec
aaa
int
sub
inc
push
xchg
or
sub
push
or
rcr
mov
and
rol
mov
jl
repnz
jmp
retf
add
(bad)
sub
je
jmp
adc
addr16
in
xor
(bad)
mov
mov
sbb
and
pop
mov
adc
mov
das
xchg
sbb
cmp
jge
push
lods
outs
fstp
adc
inc
add
mov
sbb
jbe
add
pop
imul
cwde
cdq
and
loope
cmp
mov
fldz
inc
fild
rol
cld
add
and
dec
fdiv
pusha
adc
fisub
or
adc
scas
cmp
lds
repnz
jne
popf
icebp
add
test
fnstenv
cli
sahf
pop
imul
and
cmp
loop
xchg
adc
test
pop
xchg
fs
and
jl
add
jmp
and
clc
adc
and
sbb
repnz
das
stc
sub
sub
cmps
stc
dec
sbb
inc
cli
or
inc
inc
int
dec
cld
test
ret
movs
adc
pop
or
out
hlt
out
add
jnp
mov
(bad)
xor
add
adc
aaa
add
mov
out
ja
clc
push
(bad)
cld
mov
push
and
inc
scas
xlat
test
bound
outs
ret
xchg
push
push
lods
sub
inc
adc
popw
imul
pop
jecxz
clc
addr16
push
dec
adc
mov
push
cmp
adc
jp
cmp
sbb
push
stos
cmp
inc
imul
retf
dec
das
inc
cmp
dec
cmp
sub
mov
aam
outs
add
loope
jl
in
mov
add
shl
or
(bad)
sub
in
retf
add
aas
bound
xor
mov
fidiv
in
adc
mov
shl
or
repz
pop
fadd
xchg
mov
cmps
out
fidivr
sti
or
sbb
(bad)
sub
ss
std
cmp
scas
movs
mov
and
sub
dec
adc
push
sahf
sbb
scas
and
add
jle
stos
cmp
idiv
ret
cmp
jg
mov
push
pop
pop
fist
setb
dec
ror
mov
adc
test
xchg
sub
push
mov
adc
icebp
and
add
push
fs
call
sbb
test
xor
push
adc
std
add
adc
or
ins
sbb
push
xchg
ins
or
arpl
test
add
dec
arpl
cmp
ret
pop
push
push
and
pusha
(bad)
loopne
cmp
popa
movs
or
and
addr16
xchg
mov
or
data16
xor
inc
push
fdivr
popa
outs
daa
je
jnp
dec
test
out
or
outs
fimul
and
push
jmp
out
bound
dec
fwait
sub
xchg
push
inc
pop
out
out
mov
lock
push
inc
(bad)
xor
movs
shl
fadd
dec
cmp
(bad)
fcomip
das
cmp
jmp
sbb
cmp
lock
dec
push
mov
sbb
xchg
or
xchg
cmp
inc
cmp
inc
push
gs
jecxz
pop
loop
pop
push
pop
mov
add
inc
add
xor
loop
data16
pop
pop
xor
rdmsr
(bad)
and
xchg
cmp
or
cwde
in
sub
add
mov
retf
data16
cmps
sub
dec
sub
int3
ret
fidivr
popa
mov
femms
clc
xor
inc
leave
icebp
test
xchg
mov
dec
xor
sti
loopne
int
or
sbb
push
arpl
inc
popa
(bad)
inc
bound
adc
push
pusha
mov
pusha
not
cmp
loop
mov
aaa
or
cs
or
and
shl
cmp
addr16
jo
data16
gs
inc
push
js
ror
rcl
or
(bad)
daa
or
and
retf
or
sbb
xor
or
sbb
cmp
rcr
out
retf
jl
retf
jbe
xchg
cs
or
xchg
push
lea
mov
cmps
loope
or
push
xor
mov
in
(bad)
fistp
scas
add
sub
cmp
jo
ret
idiv
add
xor
jae
xchg
aam
test
and
add
loop
add
sbb
fnstsw
xor
pop
sub
pop
xchg
and
pop
xor
cmp
mov
dec
(bad)
inc
inc
(bad)
mov
stc
sub
mov
mov
sub
adc
cmp
or
ror
push
cwde
std
sub
cmp
jecxz
mov
ins
out
and
mov
loopne
loopne
enter
or
lock
pop
sub
stc
add
jle
add
jnp
jmp
fcom
fnclex
and
ins
add
sub
jb
jecxz
lahf
pushf
sub
xor
xchg
pop
mov
std
sub
imul
xchg
repnz
loope
test
clc
scas
sbb
daa
pop
cmps
daa
add
lock
es
adc
cmp
and
xlat
lea
adc
add
jae
or
sbb
push
or
mov
ins
adc
dec
push
pusha
jo
and
lock
push
int
dec
pop
jle
dec
inc
jle
xlat
adc
sbb
add
sub
sub
mov
cdq
shr
cmp
pushf
stos
sbb
or
sbb
out
and
es
inc
retf
arpl
sbb
adc
in
ins
fs
inc
ins
xor
movs
outs
popf
daa
fidiv
fs
or
sbb
xchg
cmps
pop
jns
push
sbb
arpl
jbe
scas
in
(bad)
inc
and
mov
and
xor
cmp
push
push
inc
cmp
lods
lahf
jge
mov
or
push
sti
pop
test
or
and
bound
mov
sub
jo
or
nop
push
sbb
cmp
xchg
xchg
cmp
cmc
leave
push
or
and
in
jno
xor
or
sbb
(bad)
push
jns
cmp
sub
cld
sub
sub
enter
vprotd
xor
sbb
inc
push
cmp
repz
mov
mov
sbb
repnz
xchg
sbb
or
xchg
sub
xor
ja
mov
dec
inc
and
sub
loope
neg
sbb
pop
in
mov
fs
mov
xchg
xchg
mov
clc
in
jmp
into
push
out
xchg
icebp
pop
push
xchg
jae
push
loope
jecxz
xchg
sub
sub
cs
xchg
dec
mov
sbb
xor
lea
dec
jmp
sbb
xchg
jae
mov
dec
std
xchg
sub
inc
pop
nop
adc
fisubr
je
sub
adc
or
adc
or
inc
jmp
jo
or
xchg
or
sbb
mov
add
dec
dec
inc
inc
jbe
or
push
outs
adc
mov
icebp
inc
imul
push
aad
stos
aad
mov
sbb
push
cmps
mov
fst
mov
xlat
(bad)
sbb
ds
inc
or
lock
push
dec
fst
fldcw
inc
push
xchg
dec
mov
xchg
lds
iret
jb
jo
addr16
add
push
jmp
push
pop
pop
push
cmp
cmp
es
add
sar
sahf
lds
add
fwait
pop
data16
push
popa
outs
add
icebp
mov
add
adc
sub
mov
add
mov
adc
dec
rcl
or
sbb
push
dec
lods
fs
xor
dec
mov
pusha
and
dec
js
les
and
dec
rcl
lock
(bad)
and
dec
nop
xchg
cmp
xchg
inc
push
xchg
mov
xor
push
push
mov
mov
dec
mov
loopne
mov
adc
dec
sub
fwait
xlat
sub
imul
or
or
js
adc
test
mov
fadd
call
or
sub
cmp
dec
xchg
pop
loop
sbb
js
mov
push
and
xchg
fsub
call
or
sub
xchg
sub
cmp
dec
fwait
xor
js
push
jnp
sub
or
fdivr
repnz
push
loopne
call
loop
mov
sbb
adc
push
sbb
or
add
and
ds
imul
adc
rol
aam
jle
fcom
test
pusha
aad
call
xlat
or
or
xor
push
inc
fist
nop
loopne
shl
popa
adc
sbb
in
rcr
test
fidiv
pinsrw
enter
or
add
loopne
mov
xchg
gs
fiadd
cmps
or
dec
mov
and
retfw
add
gs
add
inc
xlat
cmps
ins
or
jae
adc
and
imul
aaa
popa
or
cmp
popa
mov
jnp
pop
pop
push
aad
fldcw
addr16
js
retf
push
mov
jbe
cmp
pop
mov
jne
hlt
inc
pop
popf
inc
loopne
test
dec
cmps
outs
lahf
sub
test
or
cmp
movs
push
or
and
mov
adc
jno
mov
and
adc
xchg
and
pop
cmp
int3
adc
add
add
setns
adc
dec
push
aaa
(bad)
fild
xchg
push
bound
fidiv
xor
and
xchg
mov
rcr
add
ror
inc
pushf
push
adc
les
popf
pop
dec
and
or
or
add
loopne
test
jge
aaa
addr16
and
data16
and
sub
mov
ins
sbb
adc
inc
cmp
xor
mov
or
icebp
outs
dec
sbb
leave
add
or
dec
test
adc
mov
inc
dec
imul
push
dec
xchg
stc
dec
loope
daa
push
pushf
fs
cmps
add
push
gs
stos
or
add
mov
outs
ins
sbb
push
pop
retf
push
pop
and
xor
xor
rcl
retf
ins
add
xchg
or
lods
movs
call
imul
ja
sub
push
imul
dec
ins
jne
cmps
mov
dec
jnp
fsub
mov
sub
mov
test
loopne
lea
xchg
sub
es
sub
cmp
(bad)
stc
jbe
push
sbb
retf
mov
push
sbb
mov
sub
mov
jne
jae
mov
das
(bad)
ins
aaa
xor
loop
cmp
mov
or
pusha
retf
xchg
das
or
dec
inc
adc
into
adc
add
dec
rol
aas
xor
adc
jns
and
mov
lods
push
xor
in
cmps
and
stos
cs
add
int3
stos
lods
xor
pop
push
outs
sub
jno
pop
jmp
dec
test
mov
sub
lds
or
enter
daa
sbb
push
lds
xchg
jnp
mov
push
inc
mov
dec
sbb
add
adc
push
sub
xchg
and
into
or
sbb
test
and
xor
leave
and
pop
dec
push
lods
aas
and
les
or
stc
lods
jo
adc
mov
adc
loopne
sub
pop
fs
(bad)
stos
mov
and
test
inc
dec
jne
leave
outs
cmp
xor
shr
dec
std
jmp
out
sbb
sub
pop
data16
daa
mov
lods
pop
iret
adc
mov
scas
xchg
shr
out
push
pop
retf
cmp
dec
sub
mov
scas
mov
add
cmp
fisttp
or
aaa
popa
cmp
push
sub
dec
shr
sub
stc
bound
push
mov
cmp
pop
adc
aad
(bad)
xchg
out
aad
xor
xchg
add
dec
add
rcl
int
and
inc
push
push
dec
inc
mov
xchg
mov
pop
push
aaa
xchg
pop
leave
cmc
mov
lods
inc
inc
aaa
and
dec
mov
mov
mov
mov
and
jnp
xor
jbe
ins
inc
jns
ror
rol
jae
jb
sbb
xchg
add
and
mov
lods
(bad)
mov
sub
xchg
dec
jnp
jo
xor
jno
imul
(bad)
adc
or
mov
cmps
jmp
mov
and
inc
sub
push
stc
sbb
jle
xchg
shl
imul
mov
test
mov
sbb
adc
inc
jge
or
sub
fsubr
push
movs
and
jb
dec
inc
xor
lods
xor
jge
push
push
retf
jl
add
dec
mov
jns
scas
cs
cli
jbe
jae
dec
push
sub
pop
jnp
leave
sub
ss
jns
pop
sub
add
cmp
sub
adc
pop
cs
mov
lods
inc
xchg
pop
adc
inc
out
push
adc
xchg
lods
lds
adc
mov
imul
fwait
adc
add
or
and
(bad)
or
or
jge
(bad)
lahf
add
ret
retf
loop
or
aas
sbb
pop
adc
or
nop
add
add
imul
sub
arpl
popf
int
adc
or
sub
push
and
cs
push
push
(bad)
push
mov
mov
and
sbb
ss
mov
pop
jo
add
(bad)
dec
sti
mov
repz
jae
fistp
pop
add
jb
sub
add
push
aaa
push
xor
retf
imul
sub
shl
out
add
jecxz
add
pcmpgtd
movs
push
les
aas
test
or
lahf
adc
div
cmps
sub
or
sub
int3
out
push
nop
aam
inc
jbe
lahf
adc
out
stc
mov
call
jp
stos
push
inc
sub
jns
sub
xor
pop
enter
dec
jns
mov
loopne
add
add
sub
mov
adc
jge
inc
ficomp
adc
xor
inc
or
dec
cmp
mov
cmp
adc
or
cmp
ffree
push
outs
mov
enter
adc
aam
or
xor
dec
ins
inc
sbb
outs
jae
cmp
sti
test
sub
or
sti
mov
mov
dec
or
xor
scas
mov
pop
out
les
ret
or
mov
mov
les
xor
xor
in
call
xor
jo
inc
push
push
je
jbe
js
jp
jl
jle
pop
inc
xor
es
dec
add
cmp
mov
popf
call
test
cld
mov
mov
cld
(bad)
cld
int
sar
aad
frndint
(bad)
loope
in
jmp
cld
cmc
cld
stc
cld
std
cld
add
cmp
ret
push
push
popa
pop
movhps
and
das
rol
data16
jmp
mov
xor
xor
popf
lds
inc
daa
cmp
push
cmp
aad
fisttp
lahf
xchg
idiv
test
inc
push
and
xor
jmp
leave
(bad)
imul
jecxz
mov
syscall
xor
iret
imul
dec
call
xor
mov
popf
add
push
out
add
and
inc
inc
dec
addr16
xchg
jb
sahf
out
out
out
out
out
out
pop
xor
daa
inc
out
in
retf
mov
push
cmp
pusha
je
jbe
into
loopne
dec
dec
lahf
mov
mov
xchg
aas
cmps
aas
mov
ret
aas
std
push
adc
inc
dec
dec
mov
push
cld
inc
add
es
ror
push
mov
xor
in
call
inc
loopne
xchg
aam
cmp
enter
test
sbb
add
je
mov
cdq
shl
sti
leave
repz
repz
repz
lock
call
cmp
push
cmp
inc
in
scas
lock
cld
out
cld
(bad)
cld
add
ds
cmp
cmp
cmp
cmp
in
push
gs
ins
dec
mov
(bad)
iret
rcl
mov
movs
xor
xchg
mov
xchg
xor
push
inc
jbe
jge
out
sbb
popf
gs
fbstp
daa
inc
xor
cs
je
jbe
js
sbb
cmp
sub
cmp
push
push
cmp
dec
dec
mov
setnp
cmp
push
xchg
imul
aas
or
ret
iret
(bad)
mov
loope
xor
xchg
xor
cmp
lock
jb
je
sbb
xor
jb
pop
and
aad
in
mov
shl
clc
sti
cld
sbb
aaa
inc
cmp
mov
cmp
sbb
sub
inc
mov
mov
xchg
dec
ror
xchg
mov
cmp
in
call
test
cld
pop
cmp
pop
cmp
cmp
popa
cmp
(bad)
aas
in
aas
hlt
aas
cli
push
push
cmp
dec
pop
mov
jp
scas
rcl
jle
cmp
mov
mov
cmp
cmp
and
sahf
popf
xor
unpckhps
jb
dec
dec
and
mov
stos
aas
ret
aas
into
aas
(bad)
mov
mov
ret
inc
imul
mov
clc
pop
xor
je
jbe
js
jp
jl
cld
xor
leave
inc
rcr
jmp
jmp
cmp
jle
cwde
addr16
mov
leave
aaa
rcr
imul
int
stc
clc
pop
cmp
jmp
ds
aas
push
mov
inc
cwde
sub
xor
or
leave
hlt
shl
push
mov
sti
call
js
test
lahf
cld
pcmpgtw
add
or
rol
jmp
mov
(bad)
iret
test
and
stos
cmp
mov
mov
ret
add
test
leave
sbb
sub
popa
pop
inc
jmp
ins
stc
jl
lahf
stc
fnstenv
add
ds
cmp
cmp
pushf
aas
jecxz
sbb
data16
mov
out
pop
xor
sbb
mov
cmp
xor
mov
dec
cmp
bound
cmp
mov
cdq
aas
movs
aas
lods
aas
mov
aas
loop
cmc
push
add
adc
mov
iret
cmp
inc
cmps
out
pop
out
loope
cmp
leave
(bad)
lock
scas
add
or
sbb
cs
cmp
inc
hlt
inc
clc
ins
cld
je
cmps
cld
sar
cld
daa
call
fistp
sti
(bad)
daa
cmp
lods
xchg
aam
inc
add
or
or
and
xor
cmp
adc
mov
mov
je
jbe
mov
leave
jbe
pop
adc
sbb
lods
lahf
mov
rol
inc
xor
xchg
rol
pop
xor
leave
popf
shr
call
je
jbe
dec
call
loop
cld
push
sub
fs
mov
mov
dec
cmp
cmp
lahf
xchg
lahf
test
mov
and
fist
popf
call
cmp
cmp
cmp
push
dec
cmp
dec
push
mov
dec
sub
xchg
ins
xchg
fwait
lds
ret
repz
xlat
repz
jmp
cmc
repz
dec
iret
sub
xor
out
out
in
int3
pop
jno
js
jg
xchg
(bad)
cld
xchg
cld
fwait
cld
mov
cld
mov
mov
cld
sar
(bad)
loope
call
cmp
push
cmp
cmp
cmp
sub
ds
inc
aas
dec
and
push
jbe
mov
repz
repz
repz
mov
mov
(bad)
in
sar
shl
sbb
add
xor
or
push
mov
xor
ds
leave
retf
popa
add
cmp
sub
movs
aas
scas
aas
mov
fmul
xchg
adc
and
cmp
dec
les
jo
jp
test
xchg
lods
dec
add
retf
retf
call
clc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
loopne
dec
or
jg
lods
jle
jle
jle
jle
jle
jle
jle
jle
dec
xchg
cmovp
iret
into
iret
fmul
loop
mov
sub
cmp
cmp
sub
pushf
lahf
dec
xchg
pop
add
repz
test
cwde
stc
test
mov
stc
loop
repnz
cld
stc
push
arpl
call
dec
hlt
push
clc
pop
cld
push
cld
xchg
cld
popf
cld
mov
mov
cld
(bad)
sti
std
ret
xchg
and
cmp
repz
repz
xor
jle
jle
jle
jle
jle
jle
jle
pop
mov
into
es
xchg
jecxz
dec
icebp
repz
hlt
xchg
icebp
push
aaa
or
fldenv
loope
jmp
ds
inc
aas
dec
aas
bound
sar
aas
in
test
xor
jge
xchg
(bad)
daa
sbb
out
in
xchg
ret
cli
rol
cmp
in
call
jo
outs
in
call
mov
retf
mov
dec
jmp
push
add
add
push
jae
retf
ret
and
lock
pop
in
call
fcomi
loop
xchg
sbb
xchg
gs
(bad)
jge
mov
leave
mov
(bad)
out
in
rol
aam
fdiv
fdiv
loopne
or
stc
in
add
and
add
xor
cmp
push
movs
jecxz
repnz
dec
sbb
xor
adc
dec
mov
ret
iret
(bad)
in
inc
and
je
jmp
push
hlt
fs
jp
mov
movs
xchg
das
sub
jle
jle
nop
mov
(bad)
jno
jge
xchg
(bad)
scas
leave
rol
add
jb
into
add
or
inc
cmp
stc
cmc
clc
pop
xor
jbe
js
jp
pop
cmp
aas
cwde
aas
test
aas
fidivr
in
add
pop
dec
mov
in
test
aaa
sub
inc
push
fnstcw
call
das
xor
popa
jae
sbb
mov
sahf
xchg
loope
mov
loope
jmp
cmc
clc
or
jnp
mov
fnstsw
sbb
cmp
popf
xor
push
cwde
pushf
mov
sbb
mov
out
movs
and
loop
or
jne
fs
enter
cmp
js
jp
jl
cwde
jnp
inc
xor
popf
pop
sbb
pop
xor
mov
xor
rcl
jecxz
repz
jmp
div
(bad)
lock
pmulhuw
cdq
or
movs
aaa
ret
daa
retf
outs
in
xchg
cmps
sbb
fisttp
cmp
xchg
xchg
mov
xor
popf
lahf
ds
adc
xor
inc
xor
loope
mov
or
adc
dec
ret
push
shl
cmp
xor
xchg
(bad)
cmp
enter
lods
jg
je
jbe
js
jp
adc
xor
mov
jbe
pop
mov
pop
push
out
out
out
out
out
out
out
loope
xor
leave
daa
fs
inc
lock
leave
push
ja
xchg
loope
sub
aas
fld
jns
nop
push
mov
xchg
mov
mov
popf
or
cmp
xchg
lahf
ret
imul
jb
into
cmp
xchg
cmp
lahf
cmp
cmp
cmp
les
aad
fisttp
or
adc
cmp
add
cwde
rcr
(bad)
repnz
in
stos
in
call
loop
stos
jle
sbb
cmp
xchg
adc
sub
xor
aaa
lock
daa
cmp
ds
leave
push
cmp
cmp
cmp
lahf
fwait
lahf
mov
xor
jae
and
jb
je
jbe
pop
mov
fnstcw
out
aas
cmc
aas
sti
or
push
movs
je
loopne
dec
hlt
push
clc
(bad)
cld
js
jg
ins
jle
jle
jle
jle
jle
jle
dec
out
cmps
push
xor
mov
jnp
mov
movs
inc
mov
xor
dec
lds
pop
ror
fmul
in
out
leave
test
mov
and
inc
in
call
jmp
add
call
sub
clc
js
dec
outs
call
loope
call
adc
cmps
(bad)
pop
inc
and
clc
test
movs
stc
fprem
inc
cmp
je
jbe
js
jp
jl
dec
cmps
mov
shl
xchg
cmp
daa
adc
imul
dec
push
je
stos
nop
cmc
xchg
std
mov
stos
and
mov
shl
loop
dec
or
rol
jmp
push
and
or
adc
or
mov
in
adc
xor
dec
or
cmps
add
cmps
inc
les
and
(bad)
mov
or
call
aas
pushf
and
pop
lahf
gs
xchg
inc
mov
in
movs
(bad)
mov
add
sbb
and
in
sub
inc
in
call
lea
xchg
gs
rol
pop
mov
mov
cmp
packsswb
arpl
adc
jecxz
repnz
dec
add
stc
out
or
jb
je
jbe
js
jp
jl
sbb
cmp
xchg
xchg
cmp
sub
xlat
js
(bad)
addr16
xchg
cmp
fs
sub
cmp
pusha
xchg
jbe
scas
jecxz
repz
(bad)
mov
dec
pop
setg
iret
mov
leave
aas
popa
loopne
aad
xor
nop
not
cld
mov
push
pop
(bad)
lahf
retf
xchg
aad
fsub
jmp
cmp
push
cmp
or
adc
pop
inc
pop
imul
dec
loopne
sahf
push
xor
sbb
jp
jl
jle
sbb
xor
stos
cmpxchg
mov
popa
data16
stc
(bad)
jmp
fs
sub
and
je
jbe
js
dec
imul
iret
pop
mov
cmp
sub
cli
jl
jle
jle
jle
jle
dec
mov
rcr
aas
repz
and
mov
dec
clc
pop
cld
push
ja
jl
mov
cwde
(bad)
mov
cld
sar
loop
out
std
and
or
sbb
aam
daa
ds
and
sub
fwait
rol
mov
mov
inc
or
mov
jl
das
pop
mov
lods
iret
mov
iret
lock
sti
leave
push
loope
cmp
xchg
inc
mov
repz
repz
repz
repz
lock
aas
inc
in
call
mov
mov
jle
dec
cli
mov
xchg
jno
adc
inc
xchg
push
push
cs
hlt
jae
xchg
cdq
out
in
lock
cld
call
xor
popa
push
imul
(bad)
xchg
int3
ret
es
in
jmp
jmp
xor
je
dec
and
sub
sti
gs
and
jmp
loop
shl
icebp
pushf
stc
movs
cmp
and
je
leave
lahf
rcl
xor
in
call
xor
pop
clc
fs
jbe
jb
scas
lahf
rcr
or
sub
dec
adc
repz
repnz
xor
repnz
ss
popf
adc
lods
pop
xor
dec
mov
in
jle
jle
jle
dec
test
aam
lahf
or
psrlw
cmp
xchg
aas
(bad)
aas
xlat
aas
jecxz
jmp
adc
cs
pop
pop
pop
bound
repz
hlt
repnz
enter
je
jo
and
cmp
inc
cmp
cmp
dec
sub
cmpps
push
cmps
xor
mov
ja
jg
xchg
xchg
mov
mov
cmp
or
mov
mov
push
xchg
(bad)
mov
rcl
aas
mov
enter
fiadd
mov
inc
sub
add
js
dec
outs
ins
aas
aad
in
loopne
mov
in
call
xchg
pushf
out
out
out
out
in
rcl
out
add
xor
adc
and
push
add
jae
bswap
ja
and
retf
stc
fsub
adc
loope
jmp
fidivr
aas
jb
jns
addr16
in
mov
and
stc
out
out
push
call
dec
hlt
push
mov
inc
jae
xchg
cmps
mov
push
mov
mov
add
adc
and
xor
hlt
jnp
cmp
pushf
fild
aam
int3
jmp
push
(bad)
and
inc
push
mov
imul
in
lods
sbb
mov
ret
aas
xlat
aas
out
aas
(bad)
and
xchg
popf
sbb
xor
push
repz
bnd
jnp
mov
xor
aas
shl
ins
sti
cld
push
cmp
sbb
sub
inc
adc
and
xchg
jbe
mov
lahf
ficomp
sti
test
cmp
cmp
cmp
pop
fs
dec
pushf
and
repz
pop
xor
cmp
pop
movs
sahf
xchg
lahf
mov
(bad)
out
in
cld
repnz
clc
cld
or
mov
push
clc
pop
sahf
dec
pop
sbb
lahf
mov
xchg
aam
push
clc
lock
cmp
in
call
jmp
or
iret
nop
iret
scas
iret
mov
iret
ror
pop
fsub
aas
inc
xchg
pop
sub
push
pop
dec
in
iret
xchg
iret
mov
iret
(bad)
iret
retf
push
(bad)
push
add
pop
sbb
ret
dec
rcr
fwait
pop
jns
mul
(bad)
dec
test
push
push
adc
lock
pop
int
shl
or
add
jmp
sar
js
aas
lods
das
mov
stc
clc
add
xchg
adc
dec
xchg
dec
cmp
dec
jns
dec
dec
mov
aas
in
aas
std
push
or
cmovle
mov
sti
daa
add
dec
lock
mov
xor
add
jo
jp
jl
dec
bound
jle
test
xchg
pop
mov
in
mov
cmp
cmp
and
sahf
inc
xchg
outs
dec
and
rol
repz
xor
outs
dec
or
lods
out
repz
sbb
or
and
into
pop
sub
pop
sbb
call
xchg
sub
cmp
xchg
pop
sub
mov
cmp
sub
js
jle
ret
call
retf
call
sbb
push
loopne
mov
jmp
xchg
add
mov
ret
mov
stc
fs
ins
stc
jle
xchg
stc
sahf
and
mov
adc
ins
adc
loopne
aas
call
popa
lahf
imul
xchg
lea
cld
in
popf
add
adc
aaa
in
inc
xchg
pushf
pop
dec
push
(bad)
popf
repz
dec
movs
add
or
pop
rsm
or
iret
into
iret
(bad)
iret
fcmovne
loop
repz
xchg
mov
xchg
pop
loopne
fisub
dec
sbb
pop
push
pop
push
nop
cld
mov
in
mov
mov
sbb
sub
rol
pop
gs
push
jno
mov
and
test
mov
aas
int3
aas
sar
in
lock
cmp
leave
adc
and
sub
cmp
cmc
pop
jne
and
in
lea
iret
push
shl
cs
pop
cld
pop
mov
pushf
and
and
mov
and
shl
pop
clc
and
or
mov
push
or
xchg
push
dec
mov
stc
lahf
pslld
or
cs
add
pop
xchg
cmp
ret
xchg
shl
repnz
pop
fst
mov
sub
pop
jne
repnz
xor
clc
cld
jle
jle
inc
std
push
xchg
xchg
addr16
test
cmp
ret
pop
mov
pop
out
lahf
sti
xchg
cmp
and
xchg
hlt
jl
jle
jle
dec
xchg
xor
inc
jle
jle
inc
test
adc
and
aas
jmp
sahf
imul
fwait
xchg
cmps
ret
or
repz
fdivp
in
in
repz
lock
pop
in
call
bound
fwait
aas
test
mov
shl
loop
mov
add
push
js
dec
mov
jp
and
fsub
aas
jb
dec
pop
test
or
jnp
stc
popf
stc
movs
sub
mov
jne
add
adc
leave
sub
cmp
dec
xchg
jle
lea
retf
rol
in
lea
mov
dec
sbb
push
icebp
push
stc
pop
js
das
jnp
movs
mov
(bad)
in
test
aas
mov
ret
xchg
lock
daa
or
gs
mov
pusha
xchg
aad
jo
shl
pop
ficomp
push
xor
push
loopne
cmp
gs
mov
cmps
(bad)
jl
pop
sbb
test
daa
enter
cmp
cmp
jp
shl
lock
out
push
xor
jecxz
mov
ret
hlt
adc
fnstsw
out
cdq
(bad)
mov
(bad)
iret
ror
fcom
fisttp
out
inc
mov
pop
loope
ins
icebp
jnp
unpckhps
inc
call
mov
cmp
sbb
push
das
sub
push
(bad)
addr16
in
lods
in
sub
in
in
mov
sbb
and
loopne
jbe
cs
sbb
mov
pop
aad
out
out
in
lock
mov
jb
je
dec
das
vmread
pop
clc
sahf
jle
jle
jle
pop
cwde
and
push
mov
sbb
sub
js
inc
jl
jle
jle
jle
jle
pop
mov
fs
iret
mov
(bad)
in
in
push
(bad)
cmc
ret
add
xchg
sbb
jmp
add
imul
or
xchg
push
in
dec
mov
adc
mov
retf
xor
inc
add
pop
stc
jne
jnp
mov
loope
movs
stc
mov
sar
mov
out
popa
movs
or
or
shl
aas
push
inc
test
cmp
call
pop
push
cmp
push
mov
pop
xchg
shr
(bad)
or
add
mov
cmp
pusha
sub
push
shl
pop
jmp
xor
and
je
pop
dec
adc
jl
mov
rcl
stc
dec
push
sbb
sti
daa
jb
cmc
stos
icebp
repz
push
aad
(bad)
loopne
xchg
out
loope
xor
xor
out
fs
fs
test
jl
test
adc
lock
shr
sub
mov
ja
cmp
xchg
fistp
cmp
push
aas
jg
jle
dec
mov
mov
paddsw
enter
xchg
adc
pop
imul
dec
mov
stc
mov
mov
int3
cmc
inc
xor
mov
scas
xor
mov
out
or
xor
popa
inc
sub
inc
je
push
clc
ja
imul
repz
adc
ret
lock
or
mov
aas
hlt
sub
cld
mov
xchg
out
loope
sbb
sub
pop
pusha
lods
aas
ins
sub
dec
fdivr
or
adc
inc
cmp
xchg
push
sar
jle
dec
outs
lds
mov
xchg
aas
popf
aas
scas
and
stc
out
hlt
clc
add
dec
adc
push
cmp
xchg
jo
mov
mov
js
jp
jl
inc
popf
and
cmp
cmp
and
lahf
push
xchg
pop
mov
mov
mov
add
or
and
dec
mov
aas
pop
aas
fs
out
in
loopne
lods
cld
mov
xlat
xchg
test
and
ret
imul
aas
or
repz
enter
jns
cmc
push
mov
out
dec
push
les
sbb
inc
js
jbe
js
pop
cmp
mov
loope
(bad)
and
dec
call
cmps
clc
fwait
sub
out
in
mov
sbb
(bad)
inc
dec
pop
(bad)
ins
leave
jnp
lea
nop
retf
sbb
and
or
inc
popa
sbb
outs
or
xchg
stos
pop
inc
mov
fidiv
xchg
and
push
pop
lods
lahf
mov
rcl
(bad)
clc
or
jbe
js
jp
jl
pop
jne
aas
xchg
xchg
and
mov
loopne
(bad)
cld
call
sbb
xchg
push
dec
mov
mov
pop
push
adc
dec
pushf
addr16
dec
test
popf
(bad)
adc
dec
loopne
xor
xchg
mov
xchg
repz
retf
shl
pop
add
pop
dec
inc
jae
mov
cld
fdivr
or
cmp
test
xor
movs
cs
pop
sub
in
mov
ss
call
jge
ja
mov
aam
clc
pop
and
sub
ins
inc
sahf
push
lahf
pop
pop
ins
lahf
jb
xchg
mov
subps
leave
out
icebp
ja
pop
push
and
jle
dec
jno
and
rol
cld
cli
(bad)
popf
popf
sbb
and
(bad)
aam
adc
leave
pop
mov
lahf
stc
movs
rcr
xchg
cmp
lahf
out
xchg
mul
add
pop
mov
pop
or
pop
and
inc
loope
push
icebp
pop
stc
pop
ds
test
int
stc
sar
fmul
loop
cmp
dec
sbb
jns
hlt
jo
pop
dec
xchg
imul
mov
(bad)
jecxz
xor
xchg
xor
fcom
or
fwait
pop
cli
dec
adc
cmp
das
dec
pop
jmp
xchg
sbb
mov
xchg
or
adc
ret
push
imul
push
arpl
sahf
push
adc
(bad)
call
xchg
push
loopne
movs
lock
xchg
xor
sti
mov
call
jbe
inc
scas
movs
popa
scas
mov
sbb
in
mov
popf
push
adc
and
cmp
aas
mov
mov
pusha
xchg
sti
ret
adc
xchg
das
push
adc
sbb
cmps
repz
repnz
test
pop
fs
inc
ins
addr16
js
mov
loope
movs
aas
lods
aas
aad
fsub
imul
or
xor
inc
popa
sbb
jmp
adc
fdivr
mov
in
pop
adc
xchg
add
inc
mov
stc
lea
cmc
(bad)
sub
mov
and
add
xchg
pop
out
in
mov
cld
scas
cld
iret
cld
repz
pop
mov
dec
loopne
pop
in
xor
mov
outs
cmps
mov
xchg
shl
cld
or
aas
sbb
sub
ss
test
lock
xor
lods
fs
scas
lahf
adc
ins
daa
sahf
inc
mov
jo
jp
dec
mov
pop
mov
mov
std
xchg
(bad)
sbb
xchg
adc
mov
xchg
out
in
xchg
xchg
add
add
leave
push
out
jnp
sbb
or
xchg
pop
rcr
sub
sub
add
or
adc
cdq
pop
loope
jmp
outs
rcl
push
sub
adc
jbe
adc
shl
xchg
mov
and
jp
mov
fwait
pop
imul
push
sub
mov
cld
and
inc
adc
push
ins
dec
xor
movs
lods
jmp
in
jbe
dec
in
mov
push
or
add
xor
ret
cld
aad
out
and
sbb
push
popf
push
adc
fdivr
jmp
aas
or
sahf
das
pop
xor
rcl
stos
pop
imul
repnz
(bad)
adc
int3
xchg
inc
aad
and
xchg
clc
int
mov
(bad)
dec
repz
jmp
mov
loope
add
sub
nop
push
aaa
adc
pop
lock
cli
dec
scas
or
lock
dec
das
ret
fcomi
rcr
push
ret
sbb
ins
dec
test
dec
data16
mov
imul
cmp
and
lock
in
push
movs
fimul
das
cmp
xchg
outs
fs
stos
and
aas
sub
int3
les
loopne
inc
mov
xchg
xchg
lahf
fisub
scas
fs
nop
sub
out
or
inc
dec
dec
daa
out
xchg
adc
xor
adc
mov
test
xor
dec
scas
mov
sbb
(bad)
xor
xor
xor
mov
push
push
jp
pop
and
pop
cmp
call
dec
fidiv
iret
loopne
std
xchg
mov
ret
lock
or
mov
and
jns
sub
loop
push
xor
dec
jae
xor
popf
cmps
xchg
fs
mov
dec
mov
xchg
jmp
lea
jle
pop
rol
(bad)
je
cli
adc
cmp
mov
aaa
in
cmp
mov
pop
jmp
sbb
test
int
fst
leave
or
repnz
test
inc
push
cld
pop
cld
pop
mov
mov
dec
and
push
sub
fnstenv
sbb
push
ret
lods
out
ins
or
xchg
pop
xor
(bad)
and
adc
or
inc
sahf
xchg
adc
aaa
cli
add
add
xchg
inc
cs
push
cmps
je
mov
xor
in
jno
mov
movs
and
aam
adc
push
ds
and
sahf
hlt
adc
ret
sbb
mov
rol
adc
push
xchg
(bad)
retf
push
mov
mov
test
in
int3
ins
scas
aas
call
daa
ret
jmp
ins
movs
pop
mov
mov
shl
icebp
imul
push
dec
outs
mov
das
dec
bound
fdiv
lahf
jl
sbb
cmp
popf
cmp
mov
loop
aas
repz
and
pop
bound
push
enter
retf
jae
dec
outs
ret
fdivr
jge
jg
dec
mov
cmp
dec
call
mov
push
(bad)
or
aas
cvtpi2ps
dec
cs
in
mov
and
or
cmp
ss
sbb
(bad)
cdq
inc
fbld
call
pop
ret
dec
mov
mov
popf
add
cmp
and
call
iret
xchg
stc
mov
push
arpl
std
xchg
xor
clc
inc
lock
cwde
(bad)
xchg
test
test
sar
cmp
mov
outs
push
lea
add
and
in
movs
xchg
pop
cmp
xor
dec
xchg
push
popa
shr
sbb
xor
shl
aas
jmp
jns
xchg
mov
pop
jne
in
test
daa
pop
loope
xchg
aas
adc
pop
inc
and
cmp
call
push
loopne
gs
adc
loop
adc
lahf
cmp
test
test
ds
mov
xchg
pop
jo
dec
add
jo
sub
cmp
inc
lods
sar
xor
sbb
push
lock
cmps
xchg
inc
pop
out
lahf
std
xchg
xor
daa
movs
inc
in
push
adc
ja
add
loopne
xor
fld
inc
not
je
dec
test
or
add
daa
fiadd
push
lock
cmp
cmp
jo
into
es
dec
push
sub
xchg
hlt
movs
adc
adc
jmp
not
movs
bnd
jnp
mov
hlt
ror
daa
in
call
pop
movs
ins
mov
mov
add
aas
jle
int
mov
nop
sub
mov
ficomp
dec
lds
xor
jo
pop
mov
mov
inc
add
xor
lds
sub
or
(bad)
pop
jge
cwde
rol
ror
stc
pop
xor
mov
add
rcl
sub
adc
leave
sbb
ss
inc
mov
xor
cwde
hlt
sahf
mov
mov
repnz
mov
sbb
push
pop
push
and
repz
(bad)
jo
pop
movs
cs
outs
fild
or
or
dec
fld
add
pop
dec
push
pop
xor
fs
inc
cmp
daa
inc
inc
inc
addr16
xchg
pop
call
jns
adc
ds
cli
adc
cs
loope
dec
dec
push
popa
in
les
dec
inc
sub
cld
jg
mov
cmps
mov
inc
ret
call
pop
call
inc
add
or
aaa
shr
or
sbb
stc
int
push
cmc
leave
sti
push
sbb
je
jbe
dec
and
inc
pop
movs
mov
sar
xlat
cld
icebp
xchg
and
cli
dec
aaa
and
cmp
dec
stc
pop
cmp
fild
fcom
jle
dec
scas
mov
xchg
add
daa
pop
inc
aaa
xchg
jl
das
int3
test
push
test
or
push
daa
aas
dec
inc
pop
fs
mov
aaa
daa
cwde
pop
mov
in
in
mov
pop
clc
ret
jle
adc
enter
fld
mov
in
fcomp
or
push
out
mov
push
push
cmp
lock
retf
inc
pushf
sbb
adc
adc
mov
popa
in
jno
dec
jl
pop
lods
xor
cmp
mov
pop
mov
mov
jmp
dec
push
cmp
sub
lods
jno
dec
loope
shr
aad
inc
jo
mul
es
movs
scas
xchg
cmp
jge
push
mov
xchg
lock
adc
adc
pop
sahf
xchg
pop
mov
test
loopne
das
mov
mov
ret
outs
enter
aam
addr16
lock
or
ss
sub
mov
loopne
retf
popf
xchg
or
stc
and
push
add
dec
push
pop
pop
pop
pop
fs
push
push
je
jle
pop
sahf
mov
pop
push
inc
pop
mov
ins
(bad)
in
xchg
or
mov
lods
(bad)
(bad)
in
test
pop
cmp
mov
test
clc
leave
cmp
imul
jne
jle
out
in
xchg
popa
inc
mov
jg
call
imul
jbe
dec
sub
adc
push
and
adc
and
push
sub
jmp
scas
dec
fstp
jb
dec
push
and
shr
xchg
xor
js
dec
inc
ret
(bad)
addr16
add
cmp
daa
inc
rcl
and
test
mov
dec
iret
sbb
fidivr
hlt
xor
lahf
mov
(bad)
xchg
iret
inc
mov
xor
mov
ret
jnp
add
pop
jge
aas
mov
ret
lock
out
xchg
add
mov
and
push
dec
mov
xchg
test
cwde
das
in
sub
(bad)
pop
xchg
jmp
pop
icebp
pop
mov
jle
jle
pop
mov
inc
xchg
jg
scas
idiv
push
push
inc
lock
fsub
push
mov
ret
lods
cld
cmc
fdiv
xor
mov
fwait
adc
(bad)
pop
mov
aas
and
inc
leave
mov
and
ret
mov
pushf
sbb
jne
fwait
je
cmps
mov
push
mov
mov
loopne
pop
stos
and
add
adc
popa
ret
ret
lahf
ret
fld
jo
pop
cmp
shl
sbb
and
or
xor
ins
popf
out
and
sti
dec
xchg
mov
sub
outs
xchg
aaa
lock
dec
hlt
pop
xchg
inc
test
sub
pop
jecxz
push
mov
xchg
call
jno
mov
adc
inc
fldcw
or
xchg
jl
adc
fadd
add
pop
in
call
ss
imul
pop
cmp
jg
jns
int3
push
not
mov
or
sbb
shr
xchg
mov
shl
adc
loope
addr16
fs
xor
push
mov
js
jle
xlat
cmps
(bad)
mov
das
jbe
jb
retf
neg
dec
mov
arpl
and
sub
je
pop
or
pop
xor
jle
jle
inc
mov
aad
or
jmp
or
adc
aaa
jbe
dec
dec
mov
pop
xchg
pop
pop
js
mov
jg
xchg
cmp
lock
cld
xchg
out
adc
pop
call
clc
xor
pop
cmps
test
inc
out
cmp
gs
ins
add
repnz
sbb
dec
jbe
addr16
rol
loop
pop
test
pushf
push
cmp
push
xchg
or
push
aam
adc
(bad)
stc
out
idiv
or
push
ins
test
sar
push
pop
gs
imul
mov
imul
xchg
(bad)
lahf
add
nop
xchg
sub
ds
mov
adc
inc
and
mov
imul
loopne
lods
mov
or
push
clc
inc
dec
adc
daa
(bad)
sti
stc
and
xchg
push
xchg
popa
xchg
or
pop
test
mov
dec
and
inc
lock
jbe
js
dec
jno
dec
enter
hlt
push
pusha
lock
popf
test
scas
scas
bswap
std
leave
push
clc
in
pop
inc
ret
leave
xchg
fs
jle
push
retf
mov
out
cld
sbb
(bad)
cmp
and
imul
pop
mov
mov
adc
ret
adc
rol
jle
jle
pop
mov
xchg
pop
mov
or
dec
aad
or
pop
add
sbb
cmps
js
jp
pop
aam
movs
adc
ds
cmp
push
jae
jecxz
xchg
jnp
pop
inc
or
pop
clc
imul
sub
adc
push
imul
and
add
repz
push
xor
add
cld
test
jg
xor
and
dec
push
xchg
shl
out
(bad)
icebp
cmp
cs
dec
xchg
pop
adc
pop
xchg
cmp
hlt
add
adc
or
fiadd
mov
popf
jl
xor
and
das
ret
fsubr
pop
rol
je
dec
inc
or
cmp
pop
test
sub
mov
ds
dec
repz
dec
enter
dec
into
(bad)
fadd
and
pop
mov
or
aas
xor
sub
pop
jle
aas
xchg
imul
add
adc
adc
popa
push
xor
loope
and
psubusb
push
dec
pop
jle
dec
pop
aas
adc
xlat
push
shl
sbb
cld
dec
dec
ret
xor
repz
xchg
into
in
cld
xchg
cmp
or
push
movs
sub
loopne
push
call
pop
xchg
adc
movs
xchg
xor
pop
iret
adc
sub
repz
add
jb
dec
and
ins
cmp
ja
xor
cdq
addr16
xchg
xor
lock
pop
add
sbb
addr16
fwait
xchg
out
pop
loopne
or
cmp
jns
adc
xchg
and
loope
cmp
pop
outs
jle
xchg
pop
out
scas
loopne
iret
mov
xchg
fcomi
xor
daa
cmp
popa
imul
or
or
sbb
fdivp
add
and
popa
popa
pop
leave
stc
loope
(bad)
enter
mulps
push
hlt
adc
mov
sub
sbb
adc
pop
or
aas
jmp
daa
outs
or
test
dec
movs
pinsrw
fsub
ret
dec
sub
xchg
das
mov
outs
adc
push
xor
sbb
ds
inc
lock
push
lock
into
stc
cmp
jl
sahf
lahf
xor
cmp
and
rcr
jbe
xchg
ret
(bad)
aad
hlt
leave
sbb
sub
rcr
call
sbb
and
jl
pop
sti
test
cmp
je
mov
repnz
movs
call
pop
movd
(bad)
shl
sti
ret
daa
adc
dec
dec
mov
fnstenv
or
dec
inc
mov
mov
and
(bad)
fidivr
dec
mov
in
stc
sbb
xor
popa
mul
neg
push
out
adc
mov
hlt
xor
xor
mov
cmp
jmp
push
and
retf
cld
in
mov
clc
add
inc
cmp
cmp
gs
ins
lahf
jo
test
xchg
push
mov
mov
xor
in
cmp
outs
pop
pop
ret
jmp
lods
je
pop
pop
sub
pop
mov
inc
std
cli
inc
cmp
push
inc
in
jmp
jo
add
xchg
dec
pop
xor
(bad)
jb
jp
loopne
shl
jecxz
or
push
dec
jb
je
dec
pop
mov
cmp
dec
cmp
pop
popa
(bad)
fs
adc
cmp
pop
cmp
push
gs
or
outs
push
push
mov
(bad)
test
sbb
jle
inc
adc
dec
out
jno
jns
xchg
dec
mov
mov
dec
imul
cmp
push
stos
movs
mov
shr
inc
fst
pop
add
xchg
xchg
jno
adc
xchg
dec
mov
mov
(bad)
mov
nop
sub
(bad)
imul
in
je
pop
div
sahf
or
into
push
call
test
lock
clc
popa
icebp
or
mov
sahf
add
xor
pop
sahf
and
sub
sar
inc
repnz
pop
pop
jecxz
in
stos
or
and
cld
cld
jb
or
and
and
lock
iret
xchg
test
lock
push
push
pop
xchg
pop
mov
jno
popa
cmp
leave
int3
and
and
cmp
(bad)
data16
mov
shl
data16
(bad)
(bad)
and
dec
xchg
icebp
clc
js
les
mov
outs
xchg
xor
mov
xor
ss
cmp
daa
mov
pop
mov
clc
push
add
mov
das
ret
ret
xchg
repz
repnz
fdivr
lahf
rcl
call
(bad)
lods
int3
aas
out
in
sub
rol
cmp
lods
daa
push
inc
add
or
sar
xchg
fdiv
jb
in
inc
das
xchg
or
pop
xor
sbb
sbb
and
xchg
test
imul
loope
stc
or
scas
cmp
add
or
ret
retf
(bad)
int3
in
sar
dec
xor
je
pop
iret
or
and
fs
sbb
cmp
mov
pop
sbb
mov
jo
pop
push
jmp
iret
jns
(bad)
dec
cmps
pop
outs
adc
push
sub
xchg
sub
ds
(bad)
push
out
add
pop
and
rol
fs
mov
dec
and
aaa
imul
push
shl
aam
in
pop
or
sbb
jo
dec
mov
xbegin
cmp
repnz
iret
scas
or
mov
cmp
in
ins
and
(bad)
daa
daa
js
dec
pop
bound
ds
in
or
mov
mov
pop
loope
call
add
or
es
jg
ss
dec
dec
iret
push
leave
pop
inc
lds
or
pop
mov
xchg
shl
fidiv
fincstp
sub
sub
in
popf
push
xchg
sub
scas
cmp
inc
mov
adc
aad
imul
jg
ret
pop
xor
movs
aas
mov
(bad)
stc
fbstp
mov
adc
call
xchg
sub
inc
jle
adc
aaa
das
ret
sub
jb
push
dec
mov
icebp
jecxz
jbe
xor
cmp
dec
(bad)
nop
stc
loop
dec
(bad)
dec
adc
test
xor
xlat
(bad)
fld
dec
pusha
adc
pop
dec
push
in
inc
bound
call
dec
push
fadd
push
dec
pop
sbb
push
gs
jle
dec
sti
or
fnstenv
or
test
inc
test
es
jns
inc
or
jmp
mov
inc
pushf
je
mov
daa
add
xchg
dec
inc
mov
jle
shl
or
test
jle
pop
mov
xor
xlat
add
jecxz
jmp
pop
dec
(bad)
in
clc
fidivr
sbb
and
icebp
inc
sub
aas
push
sub
call
(bad)
cld
xchg
pushf
mov
mov
enter
jg
stc
dec
clc
push
dec
sub
jmp
xchg
sub
out
lock
sbb
push
sub
movs
mov
xchg
lock
cwde
adc
inc
loopne
outs
popf
add
cwde
mov
and
les
in
xchg
es
dec
push
jge
cli
mov
arpl
sbb
cmp
xchg
sub
test
leave
mov
sub
jg
xchg
sete
adc
fimul
ja
mov
cdq
sub
mov
addr16
outs
(bad)
dec
(bad)
xchg
cwde
test
or
dec
jl
pop
xchg
dec
in
ret
jge
or
loope
push
loope
and
or
retf
dec
ja
push
jge
xor
push
lods
xchg
inc
xchg
shr
in
repnz
xor
mov
xchg
mov
mov
and
pop
dec
popa
test
imul
repnz
or
and
xor
(bad)
mov
jo
sbb
push
pop
cmc
pop
mov
lea
add
cwde
mov
mov
ret
push
lds
cld
xor
popf
(bad)
hlt
ja
lahf
inc
mov
test
pop
add
cmps
mov
xchg
ja
add
lahf
loopne
mov
adc
(bad)
stc
retf
cs
leave
or
lock
pop
hlt
imul
loop
daa
loopne
fyl2x
test
loop
xchg
int
loope
jmp
mov
pop
scas
xchg
(bad)
mov
shl
push
sub
jnp
sti
or
fs
rcl
loopne
push
mov
pushf
ret
jne
aad
out
xor
add
std
and
lock
xchg
cmp
fmul
lods
pop
js
aas
jb
jp
xchg
(bad)
ret
daa
scas
in
loopne
fidiv
or
jo
js
dec
shl
retf
sub
jbe
pop
dec
xor
cwde
mov
pusha
mov
inc
add
cdq
les
mov
rcl
repnz
js
les
push
in
dec
lock
hlt
mov
loopne
pop
or
cs
xchg
sub
sub
cmp
lahf
dec
xchg
push
loop
and
ja
js
rol
jp
lahf
add
mov
(bad)
(bad)
cld
enter
pop
aas
in
in
mov
pop
adc
cmps
dec
mov
pushf
xchg
mov
daa
mov
add
imul
neg
or
pop
jo
cld
or
bound
in
add
inc
mov
and
pop
pop
mov
dec
jl
scas
mov
pop
pushf
and
lods
mov
mov
mov
js
fist
inc
test
jo
pop
and
repnz
push
test
pusha
ret
cld
cmp
jo
or
stos
adc
xchg
pop
aas
pushf
aas
mov
lods
call
clc
mov
leave
enter
rcr
test
loopne
cmp
test
xchg
aam
push
call
pop
sbb
je
popf
inc
dec
dec
pop
jl
sub
add
or
cmp
test
sbb
(bad)
and
sub
fcomp
pop
popa
xchg
fs
je
js
jl
pop
test
nop
cmp
adc
mov
pop
rcr
test
inc
add
cli
push
(bad)
fdivr
sti
cmp
xchg
or
sbb
jno
and
xlat
sar
inc
repnz
movs
xchg
push
dec
xchg
pusha
leave
push
in
loopne
mov
lahf
movs
lahf
test
mov
sahf
rcr
imul
lock
pop
cld
mov
or
adc
adc
popa
or
cld
xor
push
inc
inc
mov
pusha
cld
push
shl
xor
jbe
push
nop
lock
dec
jle
jle
pop
rol
fdivr
dec
in
call
cmp
sub
gs
arpl
sub
stc
inc
stc
inc
imul
push
retf
pop
clc
outs
pop
lock
inc
xlat
pop
add
mov
xchg
repnz
jo
dec
movs
loopne
mov
mov
sbb
iret
call
clc
sub
or
rcr
dec
mov
(bad)
clc
dec
das
cmp
sub
inc
aas
push
aas
pop
sub
js
ins
lock
js
mov
nop
cld
xchg
mov
pop
mov
loope
mov
js
jle
dec
fmul
jl
js
pop
lock
outs
cld
test
mov
and
popa
sub
outs
cmp
cmp
push
aas
dec
and
pop
lock
mov
cmp
and
cwde
adc
fisttp
dec
je
dec
je
sub
xchg
lock
mov
mov
or
shl
push
sub
adc
call
mov
inc
adc
add
and
and
enter
retf
fsub
cld
std
shl
in
mov
js
push
cwde
shl
rol
xchg
adc
in
les
mov
add
or
jns
cdq
and
js
ret
jo
dec
mov
retf
aam
or
adc
add
jno
sub
aad
jg
adc
fdivr
jae
sbb
arpl
mov
mov
jo
fst
push
jae
mov
xchg
sti
sub
(bad)
ficomp
dec
dec
jae
push
cdq
and
push
cmp
int3
dec
outs
xchg
(bad)
adc
xchg
popa
push
retf
ins
push
jmp
jb
je
adc
adc
scas
test
jns
mov
lods
sbb
cs
call
daa
mov
fstp
or
bound
add
je
xchg
rol
mov
pusha
in
push
call
or
imul
cwde
xor
je
mov
push
jne
outs
stos
pop
sub
xchg
fldenv
sub
mov
arpl
sub
pusha
push
into
mov
sub
sbb
sub
cmc
push
imul
jo
sub
cmp
into
jmp
and
push
add
adc
push
imul
add
movs
inc
pop
push
jo
es
cmp
sub
sub
sbb
fnstcw
enter
movs
inc
push
mov
push
je
cli
popf
inc
loop
dec
call
inc
outs
into
push
ret
call
je
cmp
(bad)
xchg
(bad)
fs
mov
xchg
sbb
js
je
pop
inc
in
es
push
outs
push
pusha
push
nop
cli
sub
xchg
mov
inc
loopne
loopne
lahf
pop
add
jbe
jne
xor
jbe
and
jmp
rcl
xchg
cmc
or
or
popa
or
hlt
leave
xor
out
sub
jb
mov
mov
mov
bound
xchg
ja
xor
jb
jae
mov
inc
mov
movs
lods
push
stos
jb
pop
push
push
sbb
popf
sar
adc
imul
inc
push
int
rcr
and
ins
out
cwde
and
cmps
call
inc
mov
popa
cmp
jp
or
call
enter
xchg
ds
jbe
outs
shr
bound
in
test
sahf
repnz
pop
dec
and
mov
push
inc
std
dec
sahf
jmp
inc
je
movs
add
(bad)
or
ins
adc
mov
push
mov
push
sbb
xchg
into
xchg
adc
push
mov
mov
push
push
lahf
fcomi
jb
push
not
pop
cmp
or
xchg
repnz
xor
jmp
ficom
xor
jae
adc
xchg
inc
inc
cmps
jge
in
ins
sbb
jmp
xchg
pushf
adc
(bad)
nop
xchg
movs
push
push
jnp
push
ret
retf
xchg
dec
cld
adc
not
mov
dec
sbb
cs
call
cmp
xchg
jo
std
js
in
mov
mov
js
(bad)
jno
pop
test
gs
push
mov
in
cmp
mov
loop
xchg
shl
mov
pop
(bad)
xchg
outs
push
pop
add
sub
push
jb
pusha
popf
or
mov
push
inc
(bad)
jmp
mov
sbb
cmc
loope
daa
cmps
dec
ins
sbb
(bad)
jle
adc
mov
fdiv
xchg
sub
lahf
jle
pusha
xor
mov
xor
mov
cmps
mov
inc
and
sahf
daa
aam
jp
lock
mov
xchg
outs
dec
das
push
stos
dec
hlt
mov
or
adc
ror
inc
mov
mov
xchg
test
fs
adc
hlt
adc
jmp
push
mov
ds
jo
(bad)
push
adc
movs
or
mov
clc
out
movs
out
rcr
aam
lahf
nop
xlat
sub
push
addr16
(bad)
call
movs
push
repz
out
repnz
hlt
cs
outs
pop
pushf
xchg
xchg
push
jnp
lods
sbb
mov
daa
mov
cmp
sar
xchg
cmp
repz
sub
retf
stos
movs
int
or
jl
cmp
call
pop
push
mov
mov
inc
xor
cmps
add
mov
adc
mov
inc
mov
xchg
mov
push
and
arpl
std
adc
dec
daa
pop
mov
jae
cwde
xchg
and
xor
aad
stos
mov
jmp
fimul
retf
arpl
fisub
jb
movs
lds
sub
pop
pushf
pop
push
push
(bad)
les
inc
sar
cld
call
cs
mov
mov
cmp
jo
mov
and
in
or
and
xchg
add
mov
out
pop
cmp
lods
xor
xchg
and
xchg
mov
cmp
call
les
inc
push
push
into
adc
dec
sub
pop
cdq
call
pusha
cmps
mov
lods
and
sub
adc
repnz
sub
aad
cmps
je
inc
dec
ins
push
mov
xchg
xor
dec
adc
les
test
adc
ja
dec
adc
fild
movs
rcr
mov
test
ror
mov
dec
inc
fcomp
in
inc
pop
jb
mov
push
push
(bad)
mov
aad
lods
sub
imul
push
add
push
push
(bad)
(bad)
(bad)
jne
mov
test
xor
test
je
in
push
dec
xchg
pop
pop
ins
in
fwait
mov
adc
dec
inc
mov
repz
sub
das
enter
xchg
and
push
inc
sbb
jns
repnz
xchg
or
or
js
dec
jae
shl
push
dec
ret
jle
adc
xchg
push
dec
cmps
pop
pop
nop
hlt
gs
mov
and
mov
inc
je
inc
mov
sub
push
pop
inc
inc
jl
stos
pushf
movs
xor
in
sbb
stc
into
mov
pop
push
inc
(bad)
push
sub
jmp
jae
les
cmps
mov
mov
xchg
addr16
xchg
or
or
loope
hlt
dec
mov
dec
fbstp
cs
cli
mov
nop
inc
dec
mov
fidiv
xchg
ins
lods
hlt
retf
jb
sahf
sub
sub
mov
movs
lods
cli
jmp
mov
sbb
outs
or
inc
push
push
mov
imul
jmp
sahf
dec
mov
lods
div
pop
fsubp
ficomp
cld
jge
das
sub
inc
jge
adc
sub
aam
jecxz
mov
inc
push
ds
add
(bad)
fldcw
mov
dec
mov
adc
and
cmp
scas
enter
xor
jl
addr16
sub
adc
in
lods
bound
mov
mov
fwait
cmp
fdiv
ins
bound
inc
mov
arpl
xchg
or
jno
dec
stc
mov
leave
sub
ins
mov
and
(bad)
out
inc
lahf
ins
dec
(bad)
push
lahf
retf
div
cmp
push
les
(bad)
scas
ins
fs
xor
retf
cld
lock
lds
push
and
sub
mov
gs
jo
je
or
cmp
pop
in
cmp
dec
iret
sahf
dec
fistp
jecxz
shl
nop
dec
(bad)
dec
jo
fiadd
push
cmps
enter
pop
xor
bound
mov
shl
jns
aas
cld
mov
dec
dec
xchg
push
addr16
sub
dec
dec
sub
rcr
je
and
sahf
cmps
sub
push
imul
push
mov
and
dec
inc
push
retf
out
cmp
ins
lds
test
cmp
pop
(bad)
fnstenv
test
lds
xchg
idiv
not
fdiv
cmp
and
cmps
xor
cld
sub
(bad)
rcr
jno
leave
fs
pop
cmps
adc
mov
fwait
hlt
outs
shl
imul
sbb
pushf
bnd
sar
stos
push
retf
cwde
push
pop
popf
outs
push
movs
ds
gs
popf
mov
das
cmps
push
movs
jb
lahf
test
in
mov
out
dec
mov
mov
cs
mov
push
inc
adc
mov
dec
rol
inc
das
jae
add
fld
enter
add
cmp
push
int3
add
inc
sub
ins
inc
xchg
mov
jns
pop
push
xchg
push
xchg
int
xchg
inc
sbb
inc
les
lock
shl
push
push
inc
inc
repnz
fwait
(bad)
pop
clc
add
jae
adc
jl
dec
cmp
adc
inc
xor
push
bound
dec
cmps
aam
dec
call
push
xchg
lea
mov
push
jl
in
mov
inc
cdq
sbb
xchg
push
mov
popf
js
lock
bound
cld
push
jp
lods
sti
push
dec
jl
pop
je
into
movs
jl
lahf
(bad)
sub
xor
fisubr
pop
ins
mov
inc
mov
dec
mov
xchg
lahf
sub
popa
mov
fwait
push
dec
mov
xchg
pop
out
add
call
xchg
xor
out
dec
aam
mov
loop
mov
scas
sbb
adc
hlt
aam
fs
mov
dec
icebp
add
pop
and
popa
mov
jl
js
jl
jbe
push
jbe
and
sub
hlt
pop
retf
inc
mov
stos
mov
stos
sahf
mov
leave
xchg
cmp
mov
mov
loop
pop
outs
retf
(bad)
fsubr
mov
out
in
out
imul
out
dec
sub
iret
mov
sub
mov
mov
pushf
mov
mov
inc
xchg
iret
mov
push
imul
movs
les
fdivr
or
test
aas
inc
dec
add
out
sub
xchg
clc
mov
or
jmp
xchg
push
rcl
mov
add
and
push
cmp
dec
daa
jns
sahf
sub
lahf
movs
loop
pop
stos
push
das
aam
dec
aas
push
xchg
pop
jge
sub
sbb
leave
(bad)
sub
dec
mov
dec
retf
and
push
adc
hlt
test
jnp
dec
imul
push
inc
in
and
jb
xchg
sahf
sbb
js
cli
les
cmp
retf
es
mov
mov
dec
cmps
xchg
dec
fdiv
icebp
fisub
or
hlt
dec
xchg
jle
add
cli
dec
cmps
mov
mov
sbb
inc
lods
mov
push
jp
jo
cmps
shr
jb
adc
push
pop
jp
(bad)
xchg
inc
jmp
add
cmp
outs
xchg
in
and
repnz
lods
push
mov
cmp
jb
or
dec
sub
jbe
xchg
cmp
imul
in
or
mov
jb
outs
xchg
push
push
pushf
cli
pop
ins
outs
sub
dec
jae
push
in
cli
stc
mov
fisubr
dec
ds
ret
pop
mov
hlt
ficomp
xchg
je
es
mov
mov
hlt
stc
sub
je
mov
push
mov
jmp
sahf
ret
add
dec
(bad)
mov
adc
ins
bound
xchg
xchg
test
std
xor
mov
jl
cs
into
adc
xchg
and
push
jb
jl
mov
xlat
pushf
sub
shr
fsub
jp
dec
daa
mov
ret
sahf
pop
push
pop
mov
stc
adc
mov
cwde
mov
push
mov
inc
and
sub
into
fsubr
out
adc
lods
mov
sbb
cmp
jp
and
imul
fs
popa
pop
ficom
mov
movs
in
jmp
xchg
scas
push
in
xchg
ins
fldenv
imul
dec
sub
mov
xchg
mov
stos
rcr
je
push
(bad)
stos
adc
mov
into
mov
jb
(bad)
pop
popf
ins
and
repz
jecxz
shr
mov
jo
in
daa
outs
xor
in
adc
add
aad
mov
xchg
xor
mov
inc
dec
popf
(bad)
movs
xchg
cs
pusha
jb
pop
movs
(bad)
movs
mov
(bad)
dec
jae
cmp
(bad)
or
dec
adc
cmp
push
cmc
call
cmp
lahf
in
scas
outs
sbb
in
imul
cmc
(bad)
cmp
jae
or
jle
push
push
mov
and
inc
jo
dec
sub
pushfw
adc
sbb
add
std
push
or
jl
mov
les
and
sub
imul
in
jne
in
mov
mov
sub
jmp
sub
add
jge
pop
cmps
push
stos
(bad)
jbe
jl
sbb
das
xchg
in
in
pop
leave
rcl
xchg
xor
mov
push
clc
fiadd
dec
xor
sbb
aam
inc
out
dec
xor
and
dec
stc
push
jbe
inc
push
jmp
mov
jge
or
call
jo
gs
jmp
es
pop
out
cmps
js
mov
popa
std
into
test
daa
icebp
js
rcr
push
dec
rol
std
shl
inc
mov
mov
mov
xlat
das
movs
inc
scas
loop
cld
call
dec
out
fild
inc
lock
dec
imul
call
shl
jp
in
pop
lahf
dec
adc
movs
idiv
mov
cli
test
or
push
and
bnd
fimul
leave
xchg
adc
int3
cmps
push
movs
fs
pop
and
adc
jae
(bad)
out
dec
js
cmp
aas
fisub
in
dec
mov
pushf
dec
push
std
pop
enter
repnz
es
push
out
fldenv
and
into
sub
fwait
jl
loopne
push
mov
fisub
sub
lods
pop
dec
lds
dec
jo
sub
pop
jmp
hlt
call
mov
adc
xchg
mov
test
fs
mov
fwait
cmp
leave
pop
mov
popf
dec
dec
scas
addr16
jle
sti
mov
(bad)
cli
jns
inc
sub
xor
adc
push
daa
imul
mov
cs
rol
ss
fadd
mov
movs
test
std
cmp
lods
xor
mov
push
repnz
push
aaa
cwde
push
mov
dec
sti
mov
out
leave
xor
cmp
outs
sub
dec
int
ds
sub
movs
imul
loope
and
iret
es
les
mov
in
or
mov
and
dec
ins
inc
dec
inc
out
mov
jmp
pop
xor
xchg
jns
(bad)
xchg
shl
cli
pop
push
jmp
sub
cmp
cs
ror
mov
retf
pop
mov
sub
in
add
scas
int3
jmp
mov
daa
in
call
mov
ror
daa
xchg
mov
sbb
mov
ror
mov
mov
repnz
mov
icebp
daa
adc
scas
je
push
mov
sub
daa
daa
vrcpps
cs
xor
cmp
stos
jge
pop
xor
sub
push
scas
push
cwde
call
idiv
test
lods
jbe
rol
stos
nop
push
xchg
mov
and
movs
retf
mov
xchg
sub
pop
cmp
ja
cs
cmp
push
xlat
les
dec
stos
call
mov
dec
rcr
leave
outs
fld
xchg
mov
push
sbb
cmp
sbb
add
jb
data16
jns
cmc
push
inc
cmp
dec
cld
fs
sbb
inc
xor
push
sub
movs
mov
sbb
push
inc
and
lahf
fs
push
nop
(bad)
call
retf
nop
outs
ss
mov
or
xor
xchg
inc
dec
xchg
popa
sub
sub
les
ds
call
pop
pop
rcl
ret
mov
outs
ret
stos
fimul
mov
test
lods
mov
pop
es
loop
hlt
scas
cmp
jp
scas
inc
inc
dec
jl
mov
jmp
bound
retf
jl
cmps
mov
test
stc
xor
lods
movs
mov
(bad)
jo
push
push
and
mov
test
movs
inc
inc
in
test
scas
(bad)
sub
jo
retf
pop
shl
push
jo
mov
je
inc
sub
imul
shr
mov
fdivr
fist
jmp
add
push
ja
sbb
pop
sahf
cs
cli
jae
std
adc
es
jle
jle
ficom
push
arpl
jb
cmp
mov
dec
fdiv
call
jge
and
test
mov
jb
bound
leave
xor
push
add
pop
mov
leave
dec
jo
dec
dec
and
neg
dec
cmp
retf
pop
add
mov
das
jno
push
mov
(bad)
icebp
xor
cmp
aas
imul
outs
aad
jmp
lock
fist
push
pop
mov
mov
mov
xor
jb
mov
mov
bound
fs
xlat
push
add
cld
cmc
sub
dec
fwait
cmp
js
add
stc
daa
imul
fcom
cmp
repnz
sahf
imul
adc
dec
dec
dec
push
xor
pop
fldenv
jo
jmp
pop
fst
bound
push
in
jg
out
sahf
in
ins
out
xor
mov
sub
cmp
loopne
loope
stos
sub
call
test
mov
inc
in
sti
cmp
mov
sbb
jns
cmps
rcr
in
lods
push
mov
or
xchg
or
(bad)
in
fsub
ins
xchg
icebp
inc
int
and
dec
or
jb
iret
adc
sub
mov
cmp
push
scas
outs
push
add
inc
pop
dec
push
bnd
in
imul
movs
pop
inc
jmp
xor
es
jle
cli
jge
xchg
std
adc
sahf
daa
stc
outs
cli
dec
cld
mov
je
scas
jne
dec
in
lods
sti
xchg
push
aas
inc
imul
cmps
cmp
jnp
jmp
add
dec
pop
mov
pop
sub
dec
pop
daa
jo
jmp
xor
stc
add
cmp
setg
mov
repz
push
add
int3
lds
sub
movs
cmp
add
mov
add
add
push
aam
jmp
sti
add
mov
xchg
aas
adc
std
popa
shr
test
cmp
repz
aas
xor
add
xor
inc
movs
xchg
push
stc
imul
inc
pop
mov
(bad)
dec
add
xchg
pop
pop
adc
fld
sub
add
sub
lods
ds
repnz
or
add
cmp
scas
xor
sbb
jne
add
mov
int
jno
cmc
lods
pop
xor
call
add
pop
loopne
(bad)
or
mov
rcl
inc
movs
push
lods
dec
lds
xchg
jae
sbb
add
adc
fld
cmc
iret
rcr
(bad)
add
xchg
jmp
mov
cmc
jmp
inc
and
mov
pop
(bad)
and
sti
sub
rol
jg
fbstp
push
xchg
pop
stos
fidivr
(bad)
pop
cs
add
jg
mov
iret
inc
(bad)
cmp
push
fimul
(bad)
test
sub
lahf
adc
fst
lods
int3
sub
movs
add
out
mov
push
cmp
(bad)
xchg
(bad)
daa
pop
inc
sbb
xchg
movs
push
in
pop
jg
not
xor
mov
mov
mov
push
sar
js
daa
fwait
je
and
mov
test
enter
ret
jo
in
out
sti
add
push
sahf
ror
pop
jns
push
mov
fwait
das
sbb
std
push
sbb
inc
nop
mov
jp
rcl
jno
sbb
add
mov
in
rol
xchg
ja
jl
mov
call
mov
pop
sahf
lds
rol
cmps
imul
mov
mov
dec
fimul
cmp
cmps
inc
mov
into
add
xlat
mov
les
cli
mov
jge
paddusw
pop
sahf
add
dec
inc
sbb
or
add
jae
sub
cli
push
sub
inc
pop
inc
jmp
sbb
je
xor
loope
add
push
(bad)
cdq
add
fnstcw
sub
stos
add
jecxz
imul
stos
add
cmps
cmc
add
cmp
inc
mov
call
inc
into
add
popf
mov
addr16
add
cli
mov
repnz
jmp
in
loop
adc
fdiv
imul
fimul
enter
jno
push
popa
and
fisub
jge
std
sub
or
popa
das
adc
mov
test
dec
test
inc
test
add
and
jnp
push
cmp
pushf
mov
xor
cvttps2pi
ja
inc
push
sbb
sbb
jmp
pop
inc
movs
sub
mov
(bad)
add
adc
sub
push
loope
cmp
outs
adc
imul
push
out
(bad)
fcom
add
ja
push
add
repz
or
int
pop
cmps
test
xor
inc
add
sbb
adc
rol
inc
ror
inc
psubw
dec
int
test
jg
push
sbb
pop
adc
xchg
pop
inc
idiv
inc
xor
mov
paddb
ficomp
xlat
pop
add
mov
cmp
rcl
ins
cmp
dec
add
and
push
imul
push
outs
ja
xor
adc
add
imul
add
jecxz
jbe
adc
add
mov
stos
clts
cld
stc
retf
pop
aad
jg
add
xchg
mov
mov
inc
jmp
cmp
repz
jecxz
inc
popa
pop
mov
adc
cmps
add
pusha
cmp
jge
cdq
jmp
inc
sub
pop
in
mov
cld
mov
ret
je
push
mov
push
aam
fimul
cmp
popf
jg
mov
mul
call
xchg
lds
ja
mov
dec
and
sub
add
out
xchg
mov
xor
adc
mov
loopne
add
pop
mov
add
jp
lahf
scas
fild
adc
lds
aaa
and
add
adc
mov
cmps
cmp
mov
mov
outs
xchg
add
lock
xor
xor
add
mov
push
dec
mov
mov
add
movs
iret
mov
add
out
jne
xor
mov
mov
(bad)
or
inc
ror
adc
repz
cmp
in
ja
add
adc
jmp
test
jb
dec
int
jb
dec
xor
jl
add
sahf
gs
xchg
(bad)
es
jp
and
adc
xchg
cmp
pop
sbb
mov
dec
cld
add
lds
jns
push
inc
jno
jmp
or
out
dec
outs
sub
clc
push
sar
push
xchg
add
xlat
mov
or
add
sar
repnz
add
imul
adc
jns
xor
jmp
push
xchg
add
sti
ja
add
retf
int3
jg
add
fnsave
add
mov
fild
mov
in
jle
shl
cmp
lahf
shl
int
pop
div
push
mov
aad
add
data16
jge
fisttp
add
mov
adc
add
jp
ret
loopne
cmc
mov
push
xor
call
mov
jae
int
xor
adc
ror
cmp
inc
push
add
sbb
lods
movzx
pop
imul
mov
pop
pop
cmp
xchg
xchg
sub
push
retf
dec
mov
add
nop
fdivr
xchg
mov
rol
(bad)
push
add
mov
popf
jmp
daa
ror
mov
repnz
adc
add
mov
leave
cmps
or
mov
rcr
push
call
adc
add
push
or
mov
cmp
adc
aad
stc
mov
retf
push
inc
add
pop
push
pop
ja
mov
nop
and
sti
fisubr
cli
call
push
lds
sub
jg
add
fnstcw
add
test
inc
loope
dec
pop
add
(bad)
popa
add
outs
cld
xchg
loop
pushf
stos
cmp
dec
inc
add
popa
inc
int3
enter
setae
(bad)
pusha
rcr
or
call
rol
xor
enter
add
jecxz
adc
mov
or
lods
sub
loope
in
div
add
or
pop
test
add
adc
add
lea
add
(bad)
add
out
ins
mov
and
and
bound
dec
mov
add
inc
or
loope
pop
add
ret
sub
enter
mov
xchg
add
aam
es
or
add
aas
add
popa
lods
ret
addr16
and
sbb
pop
ret
push
lods
add
push
(bad)
adc
or
fsubr
adc
imul
daa
cmps
std
add
dec
jp
xor
push
call
sub
pop
cwde
lods
aam
cmp
inc
cmp
add
push
cs
push
loop
aad
cli
pushf
loope
inc
int
xchg
add
rcl
pop
or
mov
int3
aad
sti
addr16
jno
add
shl
jbe
neg
clc
scas
arpl
cmp
jo
(bad)
sub
xchg
cmps
ins
xlat
mov
movs
mov
retf
pop
push
outs
xchg
sub
lahf
cmps
sbb
xor
sahf
add
xor
mov
jb
cmpps
ins
inc
test
add
mov
pusha
add
or
push
pop
cmp
mov
mov
cwde
dec
out
add
rol
aaa
fcomp
add
xchg
add
cs
push
mov
jp
into
cli
push
add
enter
push
mov
adc
jg
pop
sub
mov
sti
pop
xor
(bad)
dec
and
into
inc
fistp
pop
or
add
xor
dec
inc
icebp
popf
dec
pop
add
dec
dec
jg
add
add
ja
jns
loop
cld
pop
inc
add
in
jg
mov
add
inc
add
mov
fist
push
rcl
dec
jne
std
pop
sbb
jg
repz
lds
(bad)
ret
pop
pusha
rcl
dec
into
fisttp
add
bound
mov
in
add
enter
cli
out
dec
pop
and
cmp
add
test
(bad)
in
call
mov
add
movs
xchg
add
xchg
ds
cmp
ror
cmps
inc
jne
fistp
jno
add
add
push
mov
sar
dec
xor
add
clc
sbb
jg
or
xchg
in
aaa
jno
push
mov
ins
daa
in
mov
jge
adc
jo
stos
pushf
add
(bad)
in
add
sbb
cmp
ss
retf
adc
sub
dec
dec
adc
add
cmovl
jmp
fs
mov
and
std
add
xor
sub
shl
sub
sub
aas
cmp
jl
and
(bad)
pusha
shl
xor
clc
mov
add
inc
pop
(bad)
fadd
inc
adc
ror
lahf
jmp
add
mov
xor
sti
add
fs
push
leave
(bad)
mov
xor
repnz
pop
add
pop
cli
push
sub
sahf
push
shr
js
test
addr16
add
call
sub
jno
icebp
ja
pushf
in
add
adc
shr
inc
pop
cmps
sub
sbb
mov
jo
jmp
loopne
rcl
ror
mov
and
rcr
imul
cwde
idiv
push
ja
xor
sub
sub
inc
sahf
inc
mov
mov
out
addr16
xor
in
xchg
mov
pop
add
out
fsubr
fwait
mov
push
rol
push
sub
add
cmp
add
cmp
jmp
mov
cli
pop
in
mov
cs
mov
add
cwde
or
cmp
jg
push
sar
pusha
div
je
add
cmps
push
fwait
(bad)
add
xchg
mov
pop
mov
or
pop
pop
add
jmp
xchg
add
out
fisubr
outs
loop
add
gs
popf
add
or
add
dec
loope
mov
add
ss
push
dec
mov
push
or
cmp
add
into
and
pushf
cdq
mov
push
out
xchg
add
call
jmp
and
in
add
imul
and
jg
add
nop
call
jg
inc
mov
jmp
aas
retf
pop
inc
jmp
xchg
dec
mov
add
and
xlat
add
scas
push
mov
into
dec
and
iret
mov
adc
repz
fwait
into
inc
rcl
pop
adc
sbb
aaa
imul
add
movs
jl
push
fsub
movs
sub
mov
add
mov
mov
sub
lock
dec
inc
add
icebp
(bad)
add
outs
aam
jge
movs
cmps
and
es
add
and
mov
add
pushf
mov
jle
push
pop
fistp
lds
jno
test
packssdw
pop
add
mov
call
lock
push
fcomp
aaa
sbb
cmp
out
ror
cmc
cmp
rol
xchg
pop
mov
aas
rol
add
pop
mov
aas
fwait
pop
ins
leave
pop
das
mov
hlt
mov
cmps
loop
pop
dec
mov
fwait
mov
sub
scas
repnz
mov
outs
int3
in
sbb
fwait
dec
mov
add
lods
call
lods
pop
cmp
pop
dec
es
cdq
mov
loopne
or
loop
mov
xchg
cmp
sbb
mov
pop
cmp
(bad)
clc
adc
es
stos
dec
lods
rol
int3
les
inc
retf
xchg
shl
jmp
xor
or
mov
mov
mov
call
inc
push
mov
repz
add
(bad)
ror
cmc
add
cld
clc
mov
sub
mov
jb
adc
pop
stos
enter
bound
pop
mov
jbe
lea
mov
jb
mov
enter
add
imul
add
sti
xchg
pop
and
inc
jmp
loopne
jae
rol
test
add
cmp
jge
and
mov
ins
sar
cmps
add
mov
movs
out
add
xchg
loop
icebp
jae
sub
sub
pop
mov
push
jo
jmp
sub
mov
adc
out
in
cdq
adc
add
xchg
pusha
gs
movs
add
retf
icebp
push
add
cs
ficomp
pop
fnstcw
mov
xchg
push
fnstsw
pop
(bad)
xchg
or
cmp
add
mov
test
sti
sub
add
push
jle
add
js
daa
retf
cmp
jo
fiadd
xchg
test
or
add
add
(bad)
add
mov
xlat
(bad)
and
bt
in
inc
adc
cwde
test
xlat
in
ret
jecxz
jae
add
test
add
sbb
lock
xor
add
lea
mov
and
and
jb
add
xchg
les
add
es
add
je
jp
add
xlat
sub
mov
fadd
sbb
retf
stos
ins
xor
in
push
dec
data16
add
or
out
addr16
inc
cmp
inc
add
mov
sbb
retf
test
add
mov
mov
inc
push
adc
pop
add
xor
xchg
add
sub
add
push
xlat
mov
sub
stc
fsubr
cmp
sub
adc
pop
sar
mov
add
popf
std
mov
(bad)
jnp
add
or
add
mov
push
fdiv
cwde
push
push
fild
das
pop
dec
xor
xchg
jmp
jno
outs
test
inc
push
jnp
xor
daa
mov
ret
cld
add
xchg
push
mov
ds
aas
aam
popf
dec
jnp
rcr
lods
add
call
enter
std
sbb
int3
(bad)
movs
pop
add
call
push
shl
sar
add
pop
stos
fs
inc
xchg
punpcklbw
lds
jl
fucom
adc
ins
rol
or
mov
push
mov
jg
add
sbb
mov
fdiv
les
xor
adc
xlat
retf
inc
add
cmps
add
fmul
add
inc
push
sar
repnz
daa
sbb
retf
fisttp
test
call
inc
or
or
xor
push
rep
mov
xor
or
jmp
push
mov
jg
add
xchg
dec
sti
(bad)
jmp
pop
add
retf
pop
mov
enter
ror
jle
push
pop
out
mov
cwde
xor
pop
cmp
mov
dec
xor
mov
mov
add
out
mov
add
cmp
or
push
pop
sbb
es
jns
add
sti
aaa
jmp
inc
mov
add
enter
sbb
dec
add
mov
add
dec
add
mov
fnstsw
add
push
(bad)
push
aaa
into
idiv
jnp
cwde
add
dec
punpckldq
loopne
cmp
fld
mov
shl
(bad)
xchg
call
out
xor
or
cmp
jbe
add
or
movs
and
call
dec
jl
sub
in
sbb
pop
cmp
xchg
push
lock
(bad)
jp
add
cmp
adc
xchg
stos
xor
xchg
mov
imul
int3
lods
sti
sub
sbb
adc
xchg
out
fistp
adc
sub
xor
add
sub
add
cmp
outs
jb
add
jecxz
test
cld
xchg
fucomp
sar
adc
jbe
lahf
addr16
icebp
mov
xor
ja
or
loopne
or
(bad)
xchg
sbb
cdq
pop
jns
scas
xchg
fsubr
outs
pop
push
mov
cmp
sti
or
movs
or
cs
clc
dec
add
sbb
add
xchg
pop
xchg
les
mov
sbb
mov
je
mov
mov
xor
and
add
mov
ins
add
mov
shr
and
jno
xchg
adc
sub
push
retf
test
dec
add
(bad)
pop
out
add
mov
mov
push
adc
xchg
xchg
add
aaa
mov
sbb
stos
mov
dec
in
lods
pop
hlt
fistp
mov
mov
jmp
jno
(bad)
sub
fdivr
enter
add
push
sbb
mov
add
jge
push
xor
gs
movs
imul
cmps
and
loope
jnp
not
mov
je
fwait
cld
out
lahf
loopne
inc
movs
inc
loopne
cmp
cli
cli
push
add
cmp
mov
mov
xor
add
xor
inc
loopne
pushf
add
jmp
or
(bad)
pop
mov
add
pop
jne
cmps
outs
retf
loopne
iret
popa
dec
add
xor
int3
add
(bad)
in
xor
pop
enter
mov
retf
(bad)
and
inc
or
mov
int
int3
js
add
(bad)
cs
add
jnp
cmp
cmp
push
loope
lock
aam
add
pop
xor
xchg
or
aas
and
(bad)
mov
rol
retf
sti
lahf
jae
add
jne
retf
jns
xor
es
mov
inc
xchg
add
into
mov
cli
add
lods
mov
sahf
add
in
imul
cmp
mov
mov
enter
jo
pop
xor
(bad)
popf
push
mov
repnz
push
mov
pop
setne
adc
scas
add
sub
fcmovnbe
pop
or
xchg
cld
add
popf
(bad)
fstp
aaa
iret
mov
hlt
and
add
rcl
retf
loopne
(bad)
test
in
pop
dec
push
jp
cld
arpl
test
rol
cmp
jo
call
or
xchg
push
mov
mov
dec
sbb
add
dec
xlat
push
in
ins
add
jmp
or
pop
add
stos
jb
cwde
leave
cmp
xchg
or
add
mov
movs
add
push
push
sbb
packsswb
cwde
mov
js
add
or
push
or
mov
cmp
add
inc
pop
push
sub
aad
or
fstp
sbb
add
aad
ins
scas
sub
sbb
pusha
dec
push
add
cmp
enter
cmp
fiadd
test
(bad)
daa
popf
xchg
ror
add
mov
out
add
xor
dec
pop
shl
inc
adc
push
pop
fistp
jge
ja
add
push
imul
(bad)
int
pushf
ret
test
xchg
ins
push
and
jo
xor
sahf
sub
jbe
js
test
je
rcl
cmp
add
mov
ds
pop
push
add
pop
(bad)
dec
xor
sbb
mov
out
xor
clc
mov
in
add
ret
add
ss
call
push
xchg
stc
cmp
add
lods
add
popaw
push
jne
xor
gs
mov
cmp
push
test
loop
xchg
outs
inc
inc
or
add
xchg
out
jl
mov
xchg
pop
or
ins
xchg
add
push
dec
or
call
mov
pop
mov
adc
and
loope
ror
out
add
or
pusha
add
mov
jp
pop
ds
jge
add
pop
in
lods
fsubrp
popa
pop
cmps
jbe
push
aas
xor
call
sti
pop
les
xor
adc
and
mov
cli
jb
dec
fld
imul
call
push
ret
cmp
adc
je
cli
push
add
jnp
popf
add
adc
add
mov
pop
push
sub
jecxz
jmp
movq
imul
out
pop
mov
arpl
sbb
test
pop
mov
(bad)
div
loopne
loop
out
add
or
cwde
ins
popf
inc
add
mov
clc
mov
mov
repz
outs
not
cmp
bound
xor
adc
stc
sbb
jb
pop
cmp
add
faddp
(bad)
xchg
mov
lods
cli
out
and
xchg
pop
inc
rol
fxtract
ja
push
and
xor
outs
int
rol
es
inc
les
xor
scas
add
xor
mov
adc
push
pop
aas
add
xchg
fistp
(bad)
test
pop
jb
add
mov
add
fmul
cmp
lods
adc
sbb
cld
pop
leave
dec
dec
add
cmp
add
cmp
je
or
add
push
push
mov
and
add
mov
inc
mov
mov
aas
jb
ins
xchg
xor
add
xchg
ja
mov
mov
or
std
add
leave
and
and
shl
add
jbe
inc
add
fst
fwait
pop
xchg
xchg
push
mov
cmp
cli
add
fst
jg
clc
sub
repnz
push
repz
scas
add
cmp
pushf
push
inc
cmp
aad
lock
xor
cmp
movs
fstp
or
dec
inc
out
add
mov
jne
jns
loop
out
data16
pusha
lds
jecxz
fwait
sub
mov
out
inc
sahf
jno
add
sbb
jp
add
xchg
dec
push
in
test
add
cmp
mov
dec
lea
out
(bad)
loop
test
stos
js
repnz
inc
fadd
jb
dec
in
(bad)
jg
or
in
shl
popa
xor
aas
xchg
add
add
mov
out
pop
jae
fstp
mov
popf
add
push
xor
in
or
sbb
mov
and
addr16
retf
pusha
jno
mov
mov
movs
dec
(bad)
push
aam
pop
add
out
retf
out
jno
out
add
or
jnp
adc
loope
jl
adc
jns
mov
cmc
dec
add
adc
add
sbb
in
pop
and
cld
arpl
ret
mov
jl
pop
fcmove
mov
pop
add
xchg
shl
or
jns
add
dec
cmps
push
gs
xor
rol
add
scas
push
fadd
inc
in
xchg
fist
mov
iret
pop
les
xor
les
fwait
nop
add
push
outs
inc
sar
fisttp
aad
mov
xor
add
mov
stos
pusha
loop
hlt
data16
or
call
in
add
jl
mov
mov
push
add
pop
cmp
out
jge
aam
lock
add
icebp
fstp
lods
mov
(bad)
movs
arpl
pop
add
xor
xor
(bad)
test
and
add
sahf
cs
xor
inc
repnz
and
xchg
add
or
jp
ins
sub
(bad)
add
sub
aaa
pop
lods
outs
jge
pop
inc
mov
add
add
add
inc
ss
pop
(bad)
jg
inc
ins
xor
mov
push
test
dec
rol
dec
ficom
in
dec
cmp
lar
add
mov
(bad)
pusha
dec
stos
xchg
sti
ins
mov
mov
nop
mov
pop
mov
jmp
add
imul
add
sub
je
jmp
or
add
outs
xchg
jbe
cmp
cmp
in
xor
and
loopne
jbe
add
jmp
push
xor
scas
add
add
out
or
add
cwde
(bad)
ss
bound
cdq
div
mov
hlt
xlat
test
adc
mov
das
fild
cmp
aad
js
add
sub
dec
test
adc
adc
test
add
cdq
push
pop
div
jmp
daa
and
pop
add
add
ins
push
and
fiadd
xchg
(bad)
mov
ins
xlat
cwde
push
inc
in
inc
sub
mov
pop
xchg
add
push
xor
jmp
and
dec
das
lods
clc
movs
repnz
adc
push
mov
mov
ds
mov
aaa
dec
mov
repnz
daa
sub
outs
cmp
(bad)
add
dec
or
out
mov
call
push
adc
pop
icebp
pop
lahf
cmc
add
fmul
inc
add
popa
lock
in
cld
pop
sti
push
jno
and
pop
cmp
or
pop
in
fld
mov
jmp
loop
add
add
sub
mov
(bad)
outs
lea
xor
xchg
add
aaa
add
fistp
mov
loope
ins
test
dec
add
rol
sbb
popf
dec
mov
jo
cli
pop
add
bound
jnp
mov
out
or
lahf
mov
add
enter
xchg
mov
push
add
pop
mov
and
jle
sub
hlt
xchg
ja
test
jmp
jg
jb
add
(bad)
pop
shl
dec
jb
fmul
mov
add
xchg
or
sub
fisub
fadd
pop
cmp
add
jne
push
mov
add
sub
test
pushf
jp
add
cmp
cmp
add
inc
add
dec
ss
add
ret
retf
arpl
xchg
pop
add
mov
or
add
and
aad
dec
jnp
adc
add
outs
test
add
cli
push
and
adc
out
shl
push
jo
xchg
mov
and
in
(bad)
mov
mov
xor
loopne
lahf
daa
aaa
mov
shr
add
adc
std
inc
mov
or
add
xchg
cmp
jmp
fidiv
loope
movs
mov
mov
in
es
push
xchg
add
das
mov
pop
add
sub
add
jno
mov
fbstp
add
mov
and
repz
cs
push
adc
ss
jge
sub
push
xor
ja
addr16
popf
test
mov
std
or
rol
add
ds
std
add
mov
ss
sub
add
mov
cdq
cli
jne
xchg
test
fbstp
add
out
lds
push
scas
add
(bad)
jne
iret
cli
call
stos
loopne
pop
fiadd
adc
dec
pushf
lock
inc
gs
fnstsw
add
jnp
(bad)
pop
mov
mov
ins
js
sub
dec
and
lods
call
dec
jno
pop
lea
and
lahf
int3
jae
cmp
sbb
scas
jns
aaa
add
test
add
ror
add
or
icebp
int
les
sahf
add
push
inc
dec
xchg
jne
push
ins
popf
cmp
mov
jmp
add
ds
sbb
lods
je
add
daa
(bad)
xor
(bad)
cld
add
dec
les
popa
inc
add
jns
sub
xchg
movs
add
test
pop
inc
add
ret
fmul
in
or
cmp
outs
and
sar
add
outs
sub
pop
push
adc
aaa
outs
add
add
inc
mov
outs
pop
dec
xchg
add
push
pop
pop
add
mov
movs
add
jne
shl
cdq
call
std
mov
sub
je
dec
es
jp
stos
aam
cmp
adc
dec
sbb
jnp
test
add
and
gs
addr16
stos
clc
xchg
pusha
jecxz
sbb
fisttp
sub
loop
out
add
sahf
push
push
int3
mov
repnz
add
imul
jno
cmp
jbe
imul
shr
add
out
cmp
xor
adc
fistp
into
mov
add
pop
imul
loop
imul
rcl
pop
arpl
daa
push
mov
jle
enter
fxam
int
inc
imul
jae
(bad)
rol
dec
test
xor
lea
dec
iret
aad
add
inc
inc
xchg
add
pop
add
xor
push
adc
mov
ror
enter
int
lods
mov
les
jge
fwait
jle
scas
imul
lahf
ja
into
iret
add
mov
outs
ret
sub
adc
or
loopne
dec
int
or
ds
cmp
xchg
rcpps
mov
mov
cmp
xchg
sub
pop
not
test
jmp
cmp
sbb
pop
push
push
int3
jmp
aad
loopne
inc
add
mov
enter
mov
adc
xor
xchg
add
push
aas
loop
repz
nop
dec
or
cs
fwait
repnz
test
and
ss
sub
push
ret
clc
mov
add
aas
mov
pop
add
into
test
and
add
js
lock
test
or
(bad)
dec
ins
mov
add
ret
sub
es
push
call
jb
add
aas
loopne
xor
xor
cmp
pop
sub
js
add
loope
icebp
pop
ret
jo
inc
jmp
jnp
push
add
cld
mov
sbb
sbb
aad
aad
adc
sub
push
ins
ret
cli
dec
pop
cmp
add
test
add
mov
add
out
aad
mov
add
pop
sbb
jo
add
cld
sbb
or
push
div
mov
jo
jmp
mov
in
add
rol
xor
inc
xchg
jbe
add
sub
cmp
add
dec
addr16
add
sbb
sbb
stos
cmp
pop
nop
push
xor
add
add
test
shl
icebp
inc
xor
sbb
mov
pop
jns
xchg
repnz
leave
pop
inc
add
add
ficom
dec
das
dec
ret
jae
pop
int
jae
add
aas
fs
add
ret
xchg
push
mov
movs
dec
scas
pop
sub
dec
push
add
clc
cmp
add
mov
ret
daa
out
sub
mov
xor
sub
xchg
pop
retf
lods
popa
dec
aaa
pop
addr16
jb
dec
inc
mov
cmp
jecxz
(bad)
jbe
add
icebp
mov
jecxz
xor
(bad)
jle
cli
cwde
loope
push
add
imul
les
hlt
push
jmp
add
retf
and
je
adc
add
idiv
add
push
js
sub
out
mov
push
adc
int3
add
scas
mov
jp
retf
jl
add
xor
out
add
jno
movs
sub
jo
dec
xchg
bound
scas
es
retf
call
in
inc
cmps
(bad)
add
nop
mov
dec
xchg
jns
loopne
leave
sub
popf
pop
mul
dec
adc
(bad)
mov
mov
jo
cmp
imul
daa
add
shl
iret
cmp
adc
mov
cmp
rcl
shl
out
mov
test
cmp
jg
add
push
mov
add
nop
pop
pop
jb
pop
stos
add
dec
fbstp
mov
cli
xlat
mov
add
inc
scas
shr
add
leave
lea
and
outs
xor
add
cmp
push
dec
push
or
add
inc
inc
loope
pop
ss
xchg
pop
iret
movs
clc
test
jecxz
fsubrp
push
scas
dec
xor
add
dec
adc
add
fst
and
shr
add
cdq
inc
out
push
ja
jns
add
bound
int3
jae
cmps
in
ror
pop
add
inc
sub
sbb
out
stos
lods
(bad)
cmp
cmp
fild
ret
push
mov
cmp
fdivr
cmp
aad
jne
(bad)
sub
sub
push
sbb
add
jg
ret
ret
cmp
add
push
add
jle
and
add
imul
movs
add
push
stos
xor
enter
clc
xchg
rol
mov
arpl
ja
out
test
cld
jmp
pop
loope
(bad)
cmp
sub
jbe
add
inc
xlat
push
nop
cld
sbb
inc
in
mov
xor
add
mov
xchg
fs
cmp
hlt
pop
(bad)
dec
idiv
add
vpshufhw
add
out
inc
in
add
xor
sub
retf
fld
sahf
movs
xchg
or
rcl
jo
add
cmp
push
jne
add
aad
sbb
cmp
movs
push
or
add
(bad)
int
gs
add
ins
jg
mov
add
outs
femms
push
sbb
mov
sub
test
into
call
mov
add
outs
mov
ret
jmp
into
call
and
fcmovb
adc
xor
push
daa
jns
and
jbe
xor
lods
add
fisttp
call
sar
mov
sbb
push
test
fsubr
nop
loopne
add
dec
inc
mov
adc
xacquire
xlat
imul
aam
add
pop
inc
sub
xor
pop
repnz
mov
cmc
sahf
out
add
imul
add
push
outs
daa
fild
add
pop
xchg
adc
test
aaa
jo
add
icebp
push
xchg
neg
cwde
or
frstor
mov
arpl
fs
mov
movq
outs
xlat
inc
sbb
aad
lods
mov
cmps
mov
dec
mov
push
pop
outs
push
and
cmps
add
inc
stos
jnp
mov
sar
add
cmp
fsub
add
adc
adc
retf
jle
cld
push
neg
adc
call
lea
or
mov
adc
push
add
jno
mov
pop
mov
add
xchg
sbb
ror
out
cwde
mov
aam
cmp
mov
xchg
xor
pop
lahf
fdivr
stos
std
cmc
loope
mov
cmp
mov
mov
adc
and
(bad)
sbb
scas
fild
sbb
pop
push
test
mov
aad
push
xlat
enter
das
(bad)
push
add
xchg
xchg
mov
pop
pop
(bad)
lahf
dec
and
push
push
sbb
sub
mov
add
or
test
sub
push
sub
cmp
in
out
pop
add
call
and
loopne
daa
out
out
add
push
pop
push
repnz
fsubp
idiv
add
lds
xchg
xchg
or
sar
ret
pop
cli
pop
pusha
out
mov
lods
pusha
jle
(bad)
cmp
sbb
dec
adc
jl
jno
push
xchg
test
and
fcmovbe
loopne
or
cdq
xor
dec
int3
push
add
fst
lahf
add
mov
cmps
add
into
lock
(bad)
xor
out
and
pusha
mov
pusha
pop
adc
add
and
outs
je
out
fnstcw
jmp
add
mov
mov
and
push
pop
cld
add
dec
jp
pop
adc
mov
mov
adc
aam
mov
push
icebp
das
inc
test
push
add
call
add
(bad)
jl
adc
not
outs
pop
add
arpl
enter
xchg
repz
lock
jecxz
inc
sbb
test
lods
mov
repnz
xor
fild
xor
jecxz
int3
lahf
ja
mov
push
sti
cmc
add
test
jnp
xchg
es
mov
sti
ins
push
ins
movs
or
outs
push
cdq
pop
mov
addr16
test
loopne
cmp
cmp
rcl
(bad)
iret
add
mov
ja
add
int
push
push
inc
(bad)
movs
adc
je
jae
adc
aam
sub
inc
into
push
jo
leave
outs
add
mov
mov
pop
xor
jle
pop
fcmovnu
fwait
inc
pop
push
sbb
add
fstp
loop
inc
adc
dec
mul
jmp
inc
and
push
std
add
mov
xor
push
add
cmp
paddq
add
jbe
jl
add
inc
mov
retf
lods
mov
fst
imul
mov
fistp
std
out
bound
push
cwde
pop
cld
xchg
add
push
and
(bad)
and
cli
mov
add
push
in
loopne
lock
or
scas
cwde
repnz
xchg
shr
hlt
add
adc
fidivr
add
and
scas
push
inc
xchg
add
shr
jb
or
fsub
sti
mov
pop
in
add
and
and
and
sahf
xor
jns
enter
xor
xchg
adc
(bad)
add
jno
or
popa
inc
xchg
enter
xor
add
mov
out
aam
mov
add
pop
xchg
mov
sbb
sahf
ret
sub
jae
mov
mov
fucomi
pop
xor
cwde
test
pop
mov
bnd
add
fild
push
mov
add
pushf
pop
jno
dec
shl
jnp
or
add
fdiv
imul
lods
scas
retf
ins
aas
sub
push
or
shl
les
mov
add
pop
add
lods
jp
mov
ins
dec
in
add
test
adc
dec
scas
gs
pop
pop
jmp
jns
mov
(bad)
sbb
int
dec
into
in
sti
add
dec
ins
dec
cmc
jle
jmp
daa
imul
add
je
add
dec
js
setp
add
lahf
add
repz
sub
movs
push
jle
pop
(bad)
enter
add
mov
mov
jl
es
xor
rcr
lea
dec
add
retf
(bad)
add
loopne
loop
inc
enter
inc
cmps
or
call
pop
or
ins
ds
add
(bad)
mul
aam
xchg
mov
push
add
ins
pextrw
stos
movs
aas
and
add
aad
add
and
push
pop
leave
pop
repz
movs
add
dec
mov
push
jbe
add
inc
add
ins
call
adc
pusha
pop
jecxz
test
jbe
or
cmp
add
jns
cmps
les
dec
and
add
lock
test
sbb
cmp
inc
test
in
inc
pop
xchg
jns
lock
mov
add
push
lods
pop
aam
les
cmp
fcomp
hlt
sti
add
push
jbe
adc
or
sub
stos
ja
adc
jb
out
nop
mov
outs
add
pop
mov
cwde
add
xor
les
ss
into
sbb
call
ret
add
add
inc
add
(bad)
in
xor
ss
fcomp
scas
add
mov
or
xchg
sub
add
mov
add
adc
out
shl
sbb
mov
cmp
push
out
add
call
lock
data16
(bad)
sti
add
enter
es
ret
sub
in
icebp
cmp
(bad)
jl
add
movs
jnp
push
iret
inc
add
retf
aas
pop
add
xlat
mov
nop
add
sub
sbb
cld
jmp
add
adc
add
out
lods
mov
mov
loope
icebp
pusha
mov
adc
fadd
dec
mov
into
push
imul
mov
div
add
arpl
mov
fdiv
lock
xor
jp
dec
and
push
jmp
add
jmp
out
pop
push
data16
jl
(bad)
mov
pop
and
daa
shl
jp
push
pop
add
sbb
mov
in
xchg
add
daa
into
mov
loope
add
mov
sbb
jmp
pop
rcl
mov
or
add
imul
fild
stc
(bad)
push
dec
test
arpl
mov
or
mov
stc
rol
ja
ins
jmp
jns
push
sbb
add
or
mov
xor
mov
inc
sub
daa
pop
mov
dec
pop
int
or
or
loopne
jb
xchg
sbb
std
dec
sahf
add
out
and
pop
add
jnp
aaa
icebp
mov
add
pushf
popf
fwait
imul
or
jb
add
add
nop
loope
or
ins
mov
adc
push
in
inc
cmp
call
mov
ds
push
jae
add
xor
dec
out
inc
mov
sub
test
sbb
xor
inc
call
mov
gs
inc
jno
ins
je
jecxz
xchg
mov
js
jo
shl
iret
push
loope
ja
aam
push
add
adc
movs
(bad)
pusha
nop
adc
pusha
retf
push
lahf
jmp
mov
aam
je
sar
pop
cmp
jno
ror
add
sbb
test
in
jge
and
adc
daa
add
jns
call
cdq
push
add
push
cli
cmc
dec
repnz
add
shl
cmp
sar
dec
jbe
add
adc
cs
test
add
(bad)
pop
lahf
adc
mov
ret
jb
xchg
inc
push
cwde
lock
push
add
adc
mov
add
add
inc
mov
mov
cmc
sub
out
xchg
pop
and
dec
icebp
jmp
int3
cmps
cwde
and
push
div
pop
mov
jb
(bad)
(bad)
in
add
jmp
pop
pop
pop
add
inc
pop
dec
leave
out
fadd
inc
xchg
jo
mov
jno
inc
into
lea
inc
bound
(bad)
add
mov
sub
loopne
jbe
repnz
ss
add
dec
jmp
mov
dec
fucomip
scas
add
jg
adc
inc
shr
bound
inc
lods
call
add
cmp
inc
add
mov
jle
test
add
daa
mov
add
push
inc
sti
xor
fsubr
js
push
jmp
lock
adc
xlat
in
loopne
int
jmp
add
neg
cmp
jmp
(bad)
fild
mov
mov
movs
add
cmps
fs
xchg
js
popf
add
pop
inc
xchg
sbb
(bad)
push
add
jns
test
clc
es
cs
div
arpl
add
mov
popa
push
jmp
lock
pop
repnz
jb
sbb
mov
es
lods
ins
pop
outs
push
pop
inc
retf
cwde
adc
mov
sbb
addr16
in
xor
pop
cs
cdq
outs
push
nop
xchg
add
and
xchg
cmps
rcl
bound
jbe
sbb
adc
outs
dec
int
sbb
sub
test
jae
add
jo
sub
out
sub
sahf
stos
jmp
mov
sub
pmaxsw
das
xchg
rol
stos
je
push
pop
push
mov
fisubr
push
mov
xchg
add
jno
leave
addr16
xor
and
push
mov
pusha
dec
add
add
push
iret
stos
xor
pop
mov
add
out
dec
pop
fistp
add
xor
mov
adc
rcr
push
inc
shr
fadd
pop
add
ins
inc
jmp
in
lods
dec
cwde
addr16
sbb
push
stc
mov
xchg
add
stos
(bad)
mov
cmp
pushf
call
jb
ror
mov
mov
test
test
les
js
jb
bound
not
sahf
adc
add
and
sub
or
sbb
or
inc
stos
pusha
push
fist
adc
cmps
jae
add
in
(bad)
add
sub
add
inc
jbe
mov
fistp
outs
push
dec
in
lahf
adc
dec
jle
jmp
or
into
xor
or
dec
jne
xor
pop
xor
cmp
shr
push
mov
loopne
adc
xlat
into
add
out
fmul
mov
ja
xor
inc
in
xchg
add
loope
push
mov
movs
add
pop
outs
retf
in
aam
loop
dec
enter
xchg
test
sub
xchg
neg
inc
mov
add
retf
xchg
fld
jg
or
add
push
popf
inc
inc
and
adc
loopne
sub
cld
inc
popf
cmp
push
js
add
mov
cmps
jo
rol
data16
add
(bad)
ror
inc
imul
fwait
dec
mov
ret
push
mov
mov
call
pop
adc
add
sbb
lahf
add
(bad)
loope
add
in
inc
pusha
cs
push
cmp
out
adc
clc
movs
dec
or
test
pusha
add
cmp
xchg
out
out
jl
js
aad
pop
inc
xor
mov
sbb
movs
mov
add
je
or
aaa
enter
and
xchg
jmp
sub
mov
and
pop
inc
add
mov
cmp
repnz
or
add
add
popa
inc
ins
and
xlat
in
mov
add
call
je
aad
gs
and
test
add
dec
ins
ja
and
pop
test
jmp
mov
mov
add
(bad)
rep
cmps
mov
out
nop
dec
xor
mov
(bad)
js
aas
cmp
dec
arpl
push
add
out
add
xchg
pusha
imul
sbb
inc
pop
push
je
out
push
pop
xchg
loopne
adc
jge
add
push
mov
add
xor
adc
pop
daa
fwait
dec
mov
push
add
nop
std
inc
leave
inc
or
(bad)
rcl
adc
aaa
dec
or
retf
sub
in
sahf
jb
sbb
hlt
fsub
test
retf
add
xchg
jae
shl
je
jne
in
icebp
mov
xchg
scas
or
jae
in
xor
bound
add
ret
jno
hlt
and
pop
add
jl
jne
push
sub
push
test
arpl
mov
add
call
mov
fs
push
sbb
rcr
push
out
ins
pushf
jge
and
mov
cli
mov
lahf
das
push
mov
fldcw
aam
jbe
and
fcomp
out
or
in
pop
xor
add
lods
or
sub
fcomip
in
jbe
and
inc
(bad)
pop
and
add
jns
cmp
jle
xchg
ins
clc
loop
adc
aad
sahf
bound
lock
xchg
add
sar
mov
mov
add
push
mov
push
stc
xor
add
or
sub
mov
sbb
sbb
add
enter
push
xchg
(bad)
push
adc
add
cld
aas
jecxz
outs
add
mov
pop
mov
jle
(bad)
outs
push
xchg
imul
gs
ins
mov
sbb
jg
inc
push
lods
rcl
inc
or
js
jp
mov
call
ffree
or
out
inc
mov
pop
sahf
dec
sub
aam
push
retf
cmp
pop
cmps
inc
cmc
sbb
jne
add
movs
add
lahf
inc
jge
popa
jmp
push
in
loopne
pusha
and
add
cmc
push
sub
add
push
bound
mov
jnp
test
scas
pop
xchg
les
or
add
inc
mov
dec
add
cs
int
mov
jno
add
pop
xor
lds
daa
fs
cvtps2pi
xchg
inc
jb
push
loop
and
out
add
lock
retf
test
loopne
sub
adc
mov
jb
add
dec
add
add
jae
popf
jge
cmp
repz
inc
popa
add
(bad)
shr
pop
adc
out
cmp
pop
stos
popa
sub
(bad)
and
mov
cwde
test
mov
and
or
out
or
cmp
fstp
cmc
cmps
add
push
jg
fsubr
push
add
and
mov
cmp
repnz
jae
or
mov
aas
clc
jge
jl
add
xchg
ret
jp
das
inc
jno
pop
pusha
push
retf
add
ja
test
jmp
pop
xlat
aaa
les
jbe
call
add
clc
nop
sub
add
repz
add
in
dec
xor
dec
pushf
push
addr16
add
cmp
std
jmp
test
and
aaa
adc
inc
xor
dec
jp
cmp
push
add
sub
cmps
std
add
adc
and
shr
ret
cld
add
mov
xor
addr16
mov
into
pop
push
push
fld
fsub
icebp
add
js
mov
arpl
sbb
push
sbb
inc
mov
pop
push
jne
loopne
jo
fs
rol
cmps
adc
and
add
mov
test
lea
mov
out
xor
xchg
lods
js
ret
sub
add
test
add
push
loope
add
inc
mov
cwde
mov
pushf
dec
shr
rcr
popa
loopne
add
push
sti
inc
sub
dec
mov
sbb
loopne
pop
pop
dec
mov
sar
xchg
xor
int
and
sahf
shr
pop
fcomp
(bad)
jno
mov
test
sub
pop
adc
mov
add
cwde
retf
shl
test
push
xchg
pop
fadd
sub
lock
cmp
pop
rcr
xchg
xchg
sub
mov
cwde
and
sub
sub
cmps
mov
sub
iret
fild
push
outs
cdq
cwde
enter
add
jl
pop
ss
mov
mov
jp
xor
add
addr16
mov
ja
add
and
jae
jne
add
mov
loope
psubw
pusha
adc
add
and
sbb
pop
(bad)
ud2
cmps
out
addr16
xchg
popa
xchg
imul
cdq
cmp
pop
cmp
jl
add
push
test
sbb
int3
inc
test
retf
or
cwde
push
scas
add
aam
aaa
(bad)
sbb
mov
add
inc
adc
jp
and
test
push
mov
stos
add
mov
mov
add
scas
add
iret
je
jns
xor
add
push
xchg
lahf
inc
xor
iret
mov
loop
add
push
into
cmp
ins
je
fidiv
lahf
and
push
es
lds
jns
das
add
loopne
(bad)
add
inc
dec
cmc
pop
xchg
jae
mov
clc
fdivr
add
push
lahf
stc
lds
or
fdiv
fwait
pop
add
mov
ins
pop
add
nop
mov
ds
aas
sti
call
fld
jl
jae
pop
xor
xchg
fwait
mov
sbb
mul
and
int3
out
dec
mov
cwde
sub
scas
mov
push
add
mov
in
movs
(bad)
std
arpl
jno
dec
mov
mov
and
pop
push
loope
int3
stos
sbb
sub
inc
mov
jp
jmp
mov
inc
jg
dec
inc
mov
sbb
mov
sub
add
lds
pop
loopne
add
push
ins
xchg
imul
ret
int3
arpl
add
sub
pop
movs
add
xchg
out
or
rol
pop
repz
fild
add
cmp
(bad)
adc
cmps
xor
call
dec
xchg
pop
aad
add
in
pusha
add
jns
fcomp
dec
test
imul
loopne
hlt
pop
mov
mov
xchg
in
xor
dec
mov
xchg
add
cmp
ds
mov
xor
jmp
nop
adc
cmp
pusha
xchg
or
add
out
add
sbb
jb
imul
add
sub
add
xor
out
push
pop
mov
jle
aad
inc
fld
add
fidivr
add
sbb
push
jns
aaa
das
loopne
xor
fsub
pop
rcr
sub
(bad)
push
enter
cmp
gs
cwde
or
xchg
arpl
xchg
imul
pop
pushf
lods
mov
dec
fmul
push
add
in
sub
inc
or
mov
xor
push
inc
push
stos
sub
add
retf
mov
call
aam
xchg
jne
cmp
scas
add
imul
in
cwde
mov
pop
ror
es
test
cmp
add
cmp
jg
and
data16
xor
movs
inc
mov
test
popf
add
div
add
lods
sbb
jno
add
mov
loop
pop
lock
ficom
add
sahf
inc
mov
(bad)
std
je
inc
pop
push
push
xor
dec
xchg
mov
fldcw
repz
mov
stos
fild
loope
or
push
ja
add
mov
fs
loope
ja
iret
mov
xor
add
mov
pop
jno
pmuludq
xchg
cmc
mov
loope
repz
push
dec
fld
push
in
push
mov
pop
sbb
inc
cs
sub
xlat
movs
aam
add
dec
sbb
push
cmp
ficomp
out
add
adc
jmp
inc
add
mov
push
call
xchg
mov
int3
je
adc
fnstenv
jecxz
inc
and
dec
dec
push
fadd
pop
lahf
push
in
adc
aam
aas
cmp
aad
lods
adc
fiadd
sahf
push
pop
sub
add
mov
ret
add
pop
pop
mov
add
sbb
pop
loopne
retf
add
shr
xor
cwde
inc
adc
jge
add
sbb
jge
lahf
lods
xchg
stos
aas
or
rcr
pop
ja
push
mov
sar
mov
add
mov
pusha
or
add
pop
adc
mov
push
adc
fdiv
push
cmovge
inc
outs
xchg
jge
add
pop
inc
scas
add
repz
aam
pop
xchg
xor
inc
add
cmp
xor
js
lods
nop
and
add
int3
mov
cli
adc
arpl
test
mov
pop
mov
scas
mov
sbb
mov
and
shl
cli
jne
repnz
ror
xchg
mov
pop
xor
and
mov
ins
stos
sti
leave
les
fimul
add
pushf
mov
adc
in
add
sub
test
xchg
fadd
inc
adc
add
xor
ficom
mov
inc
daa
mov
addr16
out
cwde
int
push
or
xor
mov
mov
xchg
inc
cwde
adc
mov
ds
test
rcl
jmp
fs
xchg
add
push
pop
jo
add
push
or
cmp
scas
jnp
cdq
inc
pop
add
mov
and
or
mov
es
pop
add
jbe
adc
test
jbe
add
add
push
hlt
add
add
popa
ss
fucomi
mov
ficom
cld
cmc
loopne
jl
pop
add
pop
(bad)
mov
sub
setb
enter
leave
sub
and
cmp
pop
push
popa
pop
pop
and
sbb
mov
add
popa
pop
call
packsswb
icebp
and
adc
cmp
pop
and
inc
out
outs
dec
repz
add
icebp
mov
iret
sbb
push
add
or
(bad)
sti
shr
and
add
idiv
push
(bad)
sub
mov
sub
leave
push
js
jo
or
adc
xchg
test
ret
lock
add
xchg
add
(bad)
mov
dec
icebp
jo
add
jle
div
sbb
add
or
imul
retf
lods
and
add
pop
xchg
cmp
and
add
(bad)
ins
jl
xor
add
push
ret
sbb
(bad)
mov
dec
icebp
cmp
repnz
fwait
outs
ror
or
(bad)
jno
inc
leave
add
pop
pop
mov
cld
fs
cmp
jb
sub
lods
pop
in
mov
mov
jecxz
cld
stos
str
xor
aaa
sub
mov
jl
ds
and
call
je
(bad)
xchg
aas
mov
and
out
dec
mov
add
test
fwait
stc
jge
mov
test
sub
fbld
xchg
push
mov
add
push
jbe
adc
push
add
ret
jo
add
out
dec
lds
mov
retf
(bad)
iret
add
mov
and
fdivp
push
ja
je
push
enter
inc
pop
pop
jg
push
add
into
and
pop
call
scas
jg
out
add
or
mov
jp
(bad)
lahf
jb
mov
shl
pop
push
pop
add
push
pop
add
adc
stos
mov
or
jno
push
icebp
cmc
mov
cwde
repz
push
call
sub
sbb
push
jecxz
ins
or
mov
cmp
fadd
add
fs
xlat
add
add
(bad)
mov
jnp
add
add
dec
add
out
dec
bound
push
push
add
inc
retf
hlt
fidiv
sub
test
fs
dec
and
daa
jbe
add
mov
push
sub
add
mov
stos
add
pop
sub
sub
je
add
hlt
or
xchg
jbe
add
aam
inc
or
add
repnz
popa
loop
add
test
dec
and
xchg
fadd
xor
je
iret
out
inc
or
bound
les
fistp
bts
aaa
iret
enter
add
push
(bad)
mov
aas
add
push
and
repnz
shl
and
mov
fs
das
gs
ret
mov
rep
cmp
repnz
clc
push
shl
push
add
lea
daa
lahf
add
and
ds
dec
jb
leave
jmp
xchg
mov
ss
add
cs
or
xor
lods
iret
mov
repnz
jp
into
mov
repz
add
cmp
add
or
out
add
sbb
(bad)
lods
jnp
add
push
mov
out
dec
add
jmp
ret
push
xchg
or
xor
hlt
popa
(bad)
ja
daa
ins
jp
sahf
test
and
dec
or
cld
xlat
mov
add
lods
jne
add
cwde
xchg
nop
cmp
mov
sbb
add
fbld
out
sub
in
fild
(bad)
rcl
push
mov
repz
cld
add
aaa
repnz
mov
add
clc
lds
inc
inc
xor
and
xor
inc
ret
mov
repnz
sbb
cmps
add
arpl
(bad)
pop
into
xchg
add
xchg
jne
cli
pop
push
mov
jecxz
fmul
add
and
add
adc
adc
ret
pop
and
in
test
outs
fs
jmp
je
add
loope
clc
add
push
add
mov
dec
add
cdq
adc
in
mov
push
std
(bad)
cmps
cs
xor
pop
sbb
or
add
cld
jmp
dec
loopne
rcr
popa
add
mov
ja
call
mov
mov
mov
add
xchg
cmc
test
pop
popf
and
ss
add
jle
test
lock
addr16
add
scas
cli
mov
cmp
adc
add
sahf
adc
cmps
popa
retf
dec
imul
jbe
adc
icebp
xor
adc
or
in
jb
add
sahf
push
add
sub
ss
and
lock
loopne
aam
icebp
add
adc
fstp
sbb
mov
movs
adc
mov
mov
(bad)
jbe
push
xchg
inc
ret
mov
adc
call
ss
or
mov
ret
sub
cmp
lahf
jl
jne
imul
xchg
pop
cwde
add
add
sbb
mov
mov
fdivr
lods
add
dec
and
add
or
sub
mov
add
nop
iret
add
add
add
je
fidivr
cmp
outs
movs
jne
inc
in
test
and
sbb
add
add
in
int3
cmp
add
adc
jb
cwde
add
cmp
out
ficom
pop
and
dec
lods
jmp
aas
add
add
add
pop
and
pushf
or
mov
dec
popf
in
inc
push
aad
iret
xlat
xchg
jmp
xor
loop
cld
test
retf
ja
push
mov
inc
xor
add
pop
mov
shl
mov
dec
ficomp
mov
sar
fcomp
dec
add
pop
arpl
jle
bswap
test
jg
setb
jl
rcr
cmc
fwait
xchg
loopne
mov
aaa
and
js
xchg
adc
mov
rcl
adc
mov
and
lock
add
cli
cmp
pushf
mov
jae
xchg
inc
test
add
pushf
(bad)
std
stos
mov
cdq
and
and
add
pop
ins
dec
(bad)
cmp
push
xor
data16
test
arpl
xchg
xchg
lock
in
push
(bad)
xor
pusha
or
aas
loope
sub
in
fdivp
or
hlt
push
cdq
and
fs
jg
mov
sub
add
and
cmps
sub
add
add
cmp
pusha
test
mov
imul
pop
ins
inc
sar
call
jmp
cmc
add
mov
imul
add
mov
pop
pop
movs
cmp
cmp
or
sbb
xchg
int
add
push
cmp
cwde
adc
(bad)
adc
xor
cmp
jbe
xor
mov
stos
add
sbb
loope
mov
sbb
je
fist
js
inc
push
mov
or
cmp
push
xor
dec
cdq
sbb
jb
cli
pusha
jns
pop
rol
in
jae
psrld
or
imul
xor
add
mov
(bad)
call
add
xor
les
lods
jns
dec
popa
dec
outs
dec
lahf
out
pop
sbb
jl
mov
inc
add
stc
pop
jecxz
inc
jmp
(bad)
fisttp
add
xchg
inc
sbb
fadd
add
mov
movs
dec
test
fldenv
pop
add
or
add
inc
pop
mov
in
add
mov
sbb
icebp
or
inc
mov
or
shl
xchg
addr16
ret
mov
add
xor
xchg
(bad)
mov
sbb
jb
sbb
enter
push
inc
xchg
sub
mov
ja
add
nop
pop
mov
cli
inc
jnp
jno
lock
enter
adc
add
push
cld
leave
cmp
sub
sbb
cmp
cld
in
and
scas
add
adc
mov
mov
loope
sbb
retf
xchg
sub
ret
adc
inc
ss
mov
and
mov
lds
add
mov
cdq
and
stc
pop
push
test
in
add
xchg
popa
add
in
shl
sub
push
out
sbb
(bad)
fcomp
popf
sbb
mov
dec
add
ins
test
mov
xchg
push
push
out
(bad)
adc
shr
std
add
xor
xor
cmp
stc
add
jo
in
test
push
jge
add
pop
pushf
mov
adc
icebp
xchg
mov
daa
lods
(bad)
or
lods
pop
add
xlat
mov
sbb
popa
jmp
ret
adc
add
dec
test
or
add
pop
add
mov
mov
jl
pop
mov
nop
cmp
in
into
jb
scas
loopne
xchg
xchg
add
retf
add
inc
sar
inc
scas
cmp
add
ret
push
add
int
je
xchg
ins
add
dec
scas
lods
add
adc
int3
fild
sbb
(bad)
push
and
mov
fnclex
mov
pop
mov
add
shl
inc
push
xor
adc
sub
cmps
add
add
add
fistp
or
xchg
add
dec
jo
add
dec
cs
xlat
add
xchg
cmc
test
sub
pop
add
pop
mov
xor
cmp
retf
xchg
mov
sbb
jbe
cld
mov
pop
sub
adc
movs
stos
add
inc
loope
jmp
das
(bad)
add
add
mov
add
inc
jne
mov
sbb
jo
add
fld
mov
cwde
jns
cmp
cmp
add
outs
jg
iret
repz
hlt
push
mov
inc
lds
fdivrp
ror
rol
fwait
test
add
pop
int
sub
and
aad
(bad)
push
fiadd
dec
add
sub
ret
push
add
int3
jmp
push
dec
arpl
stc
sub
dec
test
xchg
ret
cmps
scas
pop
add
(bad)
jecxz
pop
pop
sahf
mov
push
ss
aam
fadd
sub
cmp
or
test
push
cmp
pop
add
sbb
add
mov
jge
jg
and
out
daa
jo
mov
adc
or
pop
xchg
pop
sbb
out
clc
mov
add
or
jp
and
mov
bound
jmp
lods
xor
enter
popf
xchg
mov
shl
push
xchg
inc
ins
pop
(bad)
fstp
add
mov
inc
xchg
pop
fmul
out
mov
push
add
arpl
add
mov
in
rcl
shl
das
mov
jecxz
xor
push
add
(bad)
aam
int3
sbb
mov
pop
adc
xchg
cmps
pcmpeqd
sub
icebp
or
sbb
(bad)
daa
jb
push
sahf
push
adc
xor
cwde
popa
ja
add
push
pushf
dec
rcr
add
jne
sbb
or
test
daa
in
add
dec
cmp
xor
cmp
dec
sahf
pusha
frstor
push
pusha
out
add
or
pop
ja
enter
pop
xlat
jae
loopne
jo
add
adc
cdq
mov
loopne
sub
and
icebp
(bad)
push
add
push
pop
mov
cmp
add
mov
in
(bad)
jle
pop
dec
pop
in
(bad)
(bad)
(bad)
xchg
adc
mov
js
rcl
out
mov
cmp
mov
push
sub
mov
outs
loopne
leave
mov
dec
push
(bad)
idiv
inc
jmp
icebp
fcmovne
lods
test
(bad)
or
jmp
push
and
in
sahf
add
scas
aaa
gs
push
add
cli
in
mov
mov
xor
xlat
inc
dec
xor
ficomp
and
(bad)
cld
dec
ins
pop
jno
fidiv
cmp
add
ret
jl
aam
mov
not
cmp
mov
mov
xchg
xchg
sbb
add
fadd
dec
add
add
xor
dec
push
mov
mov
cmp
dec
imul
mov
inc
(bad)
mov
ja
nop
addr16
js
or
adc
pop
mov
ds
arpl
(bad)
or
xor
push
add
adc
mov
xor
mov
fisubr
popf
out
cwde
nop
inc
add
or
jg
fdivr
sahf
inc
xor
mov
shr
and
adc
push
test
iret
sbb
jnp
sbb
sub
fmul
add
js
mov
pop
cmp
or
xor
std
push
imul
mov
or
sub
mov
test
repnz
dec
aaa
mov
add
pop
test
add
ins
xor
stc
repz
int3
pop
pop
movs
xchg
or
push
jg
jge
add
mov
fmul
sbb
mov
das
xor
pusha
gs
add
js
pop
pop
xchg
jo
add
mov
adc
add
fstp
sub
lea
add
and
add
mov
cmp
popf
sub
or
fadd
out
push
inc
lahf
repz
add
test
mov
lock
sub
inc
pusha
fldenv
ds
add
out
xor
(bad)
jmp
retf
mov
iret
sti
outs
cmp
xor
add
jge
inc
xor
scas
call
std
push
mov
or
test
in
add
pop
in
jle
mov
mov
mov
into
icebp
inc
xor
pop
test
in
and
inc
ds
add
popa
jg
lahf
fimul
es
je
sti
movs
xor
cld
pop
test
adc
aad
ror
xchg
test
and
pop
movs
add
xor
add
jl
inc
sub
mov
add
pop
fmul
es
cwde
mov
ret
or
clc
imul
add
retf
add
mov
push
ds
push
ja
inc
adc
add
xchg
aam
and
jecxz
jp
stos
xchg
cwde
repz
jmp
jo
add
into
pushf
jg
xchg
inc
enter
inc
ficom
pop
out
out
scas
inc
pop
xchg
sub
xchg
lds
sar
stc
add
or
daa
or
jge
ds
cli
jle
or
add
or
aad
push
xor
pusha
jge
jae
xor
aas
adc
xchg
jns
mov
sbb
enter
jae
dec
add
mov
sbb
outs
add
xchg
jmp
add
fiadd
lods
sbb
fadd
sbb
jp
push
add
mov
and
mov
add
inc
fwait
pop
add
pop
pop
push
add
add
int
pushf
add
pop
cli
jg
or
mov
xor
les
jp
mov
add
dec
sub
dec
add
dec
test
or
ins
add
shr
cld
mul
add
sti
mov
stos
add
sbb
cmp
mov
xlat
add
repz
jo
mov
mov
iret
repnz
cli
add
icebp
mov
and
add
push
xchg
fimul
push
add
aas
mov
push
pop
js
jno
or
rol
test
clc
sub
fwait
xor
inc
add
retf
add
std
ret
add
and
and
sbb
les
ficom
push
leave
inc
mov
lods
call
add
add
or
cmp
sbb
or
add
push
cdq
xchg
cmp
ret
loope
nop
out
inc
cmp
fild
mov
push
pop
push
inc
(bad)
push
cmp
(bad)
rol
inc
jns
sub
mov
mov
push
and
add
imul
sti
cmovs
cs
(bad)
mul
pop
pop
rol
add
scas
pop
fmul
aad
in
stc
test
jmp
add
imul
jne
push
aaa
or
mov
cmp
xchg
pop
pop
daa
sub
or
addr16
sbb
lock
sbb
and
in
sbb
jmp
int3
dec
add
add
or
hlt
jo
add
or
or
mul
add
or
or
shr
out
icebp
dec
inc
cmp
xlat
sub
inc
shl
add
movs
xchg
std
inc
xor
pop
push
xchg
mov
stos
inc
(bad)
lods
xor
push
push
mov
add
jno
lock
xchg
xchg
mov
pop
inc
hlt
retf
ret
mov
mov
add
ins
add
ss
mov
dec
stc
add
aam
add
mov
sahf
jb
(bad)
call
jle
add
inc
xchg
loopne
cmp
and
add
jo
leave
les
xchg
add
push
pop
pop
movs
out
add
cdq
xchg
in
add
xlat
xchg
mov
lds
mov
add
out
sar
jl
adc
adc
cmp
call
pop
ins
pop
mov
fidiv
ret
add
fs
repnz
pop
scas
inc
test
add
cmp
cmp
jmp
cmps
jns
ret
add
(bad)
cwde
xchg
(bad)
(bad)
les
sbb
adc
and
movs
push
mov
xchg
stos
add
mov
sub
dec
add
inc
mov
add
mov
out
sub
jle
mov
mov
adc
into
add
or
loope
jp
mov
inc
inc
jg
loop
clc
shl
daa
test
xor
sbb
mov
push
xor
cld
mov
push
rcl
das
addr16
or
test
cli
je
fsubrp
ret
imul
retf
shr
stc
inc
mov
add
jp
pop
into
adc
and
and
add
or
jbe
cs
outs
movs
push
pop
push
sbb
inc
aas
scas
mov
packssdw
addr16
js
inc
add
aam
pop
jg
lods
jmp
jle
push
mov
mov
scas
inc
dec
sub
(bad)
repz
mov
ss
jb
aas
sbb
push
je
add
ror
add
adc
ds
cwde
addr16
outs
and
cmp
pop
nop
push
call
aad
loope
push
int
in
hlt
mov
add
iret
sbb
mov
add
add
jbe
jp
jmp
inc
cmp
sti
dec
cwde
test
xchg
pop
dec
sbb
jmp
jmp
jecxz
(bad)
pusha
add
push
arpl
cmp
hlt
movs
aas
cli
mov
stos
mov
and
xchg
add
mov
pop
loopne
mov
mov
es
jp
add
mov
je
sbb
cmp
(bad)
xor
out
in
mov
adc
stos
adc
ds
push
jae
push
and
cmp
pop
das
arpl
add
(bad)
mov
add
and
test
add
xor
jg
inc
push
add
pop
add
(bad)
pop
adc
add
in
cmps
(bad)
or
rol
add
lds
in
xor
pmuludq
cmp
jae
push
jo
in
adc
fcomp
call
adc
sbb
in
stos
jns
add
jge
inc
fimul
pop
aad
dec
adc
add
movs
push
lods
ret
jg
add
(bad)
int3
mov
mov
sub
lods
add
add
pop
sub
add
call
rol
push
sbb
nop
cmp
add
adc
data16
repnz
add
lea
(bad)
in
jg
inc
leave
repz
scas
popf
mov
add
iret
sbb
xor
sar
pop
adc
jmp
or
sub
out
out
inc
push
xor
xor
inc
rcl
cmp
(bad)
push
push
ss
mov
pop
idiv
jne
lahf
add
cli
mov
fdivr
cmp
xor
in
add
pop
xor
pop
retf
jae
xchg
add
mov
pop
add
sub
fld
icebp
inc
fist
aaa
sar
dec
mov
push
mov
pop
sub
dec
pop
frstor
and
push
pop
lds
mov
shr
sub
mov
outs
dec
mov
cmp
pop
adc
nop
pushf
sbb
rol
jbe
push
jae
aam
and
ja
jge
xor
pop
jnp
mov
mov
out
(bad)
mov
scas
sbb
enter
pop
into
mul
mov
add
mov
add
js
out
call
jg
pop
in
outs
pop
and
hlt
ins
pshufw
mov
add
adc
add
sahf
fnstsw
xor
cmp
out
add
or
aaa
mov
cmp
ja
into
and
ret
stos
inc
jge
out
test
nop
cmp
xchg
sub
sti
es
ins
pop
or
rol
rcl
jbe
sub
test
xchg
add
fild
xor
loope
mov
dec
ds
push
repz
pop
inc
cmp
stos
out
data16
pop
outs
out
inc
mov
aam
xlat
jo
add
iret
mov
mov
ja
cld
cmps
add
ds
add
push
out
and
repnz
cmc
popa
and
fmul
rcl
xchg
inc
xor
hlt
add
aaa
fld
push
ins
mov
or
sub
and
xchg
es
imul
push
xor
add
cwde
sbb
inc
sbb
adc
inc
out
fxch
hlt
sbb
test
inc
loope
add
int
ficom
and
jge
adc
push
in
jno
hlt
add
fcom
and
cdq
outs
cs
dec
add
out
dec
xor
push
nop
add
xchg
jae
adc
ret
sahf
rol
popf
push
loopne
add
inc
mov
add
mov
es
add
aad
in
lahf
lea
(bad)
leave
pop
push
add
ss
pop
aaa
add
and
fst
cmp
jb
adc
dec
add
inc
add
aad
jns
iret
stos
mov
cmp
xchg
movs
sbb
add
mov
dec
jno
push
cwde
aam
sar
nop
push
jg
cmp
je
into
jo
add
dec
stos
mov
xor
lods
sub
mov
add
cmp
dec
jo
sub
cmp
test
lods
jecxz
and
sbb
dec
or
xchg
cmc
push
lock
(bad)
hlt
xchg
test
in
les
dec
sahf
jecxz
xor
adc
jns
mov
jmp
dec
add
repz
xchg
icebp
mov
loopne
ja
inc
or
dec
call
add
jecxz
push
pop
test
mov
jbe
in
dec
add
daa
fwait
add
and
add
jb
inc
xor
add
pushf
mov
xor
rcr
sbb
fldcw
out
mov
and
pop
in
mov
in
fsubr
xchg
adc
cmc
retf
jg
ds
xchg
xlat
scas
imul
out
ja
or
pop
mov
clc
jmp
sub
sub
cmp
sbb
test
cmc
jg
push
fisubr
fild
push
xor
sbb
retf
dec
cmp
xchg
jo
in
add
cld
jo
or
xchg
adc
daa
psllw
ds
add
sbb
cmp
mov
inc
popa
dec
mov
gs
sahf
mov
sub
out
test
or
push
cs
or
adc
inc
shl
out
jbe
add
jmp
add
mov
loopne
mov
pop
fistp
aaa
inc
hlt
lods
call
mov
inc
and
add
mov
(bad)
xor
je
shl
mov
pop
adc
add
icebp
inc
cmp
(bad)
mov
jno
push
sub
movs
add
xchg
pop
out
add
mov
cmps
pushf
inc
jg
add
into
mov
pop
enter
or
aad
pop
push
sbb
pop
sub
pusha
ins
push
sbb
sbb
sar
mov
xor
cmps
test
mov
pop
sub
nop
fldcw
les
fiadd
dec
lock
hlt
cs
popa
add
icebp
inc
pop
inc
cld
js
shr
mov
push
int3
(bad)
jns
mov
pop
daa
dec
and
inc
lods
mov
add
int3
inc
mov
inc
div
add
leave
mov
(bad)
je
add
mov
ins
ds
cmp
fnop
shl
aas
add
std
retf
dec
jnp
add
add
loopne
sub
xor
loopne
pop
jae
xchg
sbb
sbb
xor
fcmovnbe
and
ret
int3
jns
(bad)
lock
loop
jns
in
jmp
push
(bad)
add
fadd
(bad)
jl
push
fnstenv
shl
dec
add
mov
bound
ins
inc
aaa
xchg
into
add
mov
add
sbb
mov
out
add
ins
ds
add
pop
ret
xor
jle
add
mov
add
loope
movs
ins
mov
sub
retf
hlt
inc
cwde
adc
sti
nop
mov
sub
push
add
push
mov
add
test
adc
rcr
jp
add
adc
or
adc
fsub
or
jmp
jl
or
fs
stc
mov
repz
push
leave
cmp
sbb
adc
seta
loope
dec
sar
nop
sahf
jmp
out
sbb
mov
mov
or
lods
ins
rcr
add
imul
aaa
daa
loop
add
mov
xor
popf
rcl
sti
cli
sub
add
mov
mov
add
mov
sub
test
xor
jbe
mov
iret
les
add
dec
pop
mov
cmp
inc
aaa
add
test
(bad)
pop
lock
test
push
push
sbb
jb
repnz
icebp
and
sar
dec
ja
mov
and
lock
or
arpl
add
xchg
pop
sub
add
sbb
ror
add
ret
add
xor
pusha
dec
mov
sbb
adc
pop
push
jae
push
add
xor
pop
add
fdivr
cld
adc
add
or
je
gs
loop
sub
iret
pusha
sar
ret
add
inc
pop
aas
pop
jmp
add
xchg
mov
add
rcr
movs
cmp
mov
(bad)
hlt
push
cmp
fmul
jbe
popf
(bad)
sub
fidivr
sbb
loop
les
inc
sub
add
inc
add
dec
popa
adc
mov
ror
add
enter
fstp
dec
test
fadd
shl
das
inc
add
cs
jge
scas
xchg
mov
pushf
int
jmp
jne
mov
push
push
les
jl
jle
inc
into
movs
enter
cmp
in
ins
cdq
dec
leave
(bad)
push
add
inc
popa
or
add
test
lock
add
inc
(bad)
sti
bound
jb
add
dec
mov
cmp
out
aaa
(bad)
push
call
(bad)
mov
and
push
(bad)
mov
cwde
shr
pop
xchg
jns
add
out
cmp
add
pavgw
add
mov
sbb
mov
push
(bad)
int
fld
lds
inc
dec
pusha
hlt
aam
rol
push
mov
push
(bad)
js
add
pushf
cmc
stos
add
or
fcom
icebp
cmp
sbb
stos
mov
cmp
repnz
ja
hlt
imul
test
push
mov
imul
add
out
rol
loope
outs
test
mov
add
inc
clc
addr16
lahf
pop
rcl
(bad)
rcr
nop
sbb
stos
add
cmp
pushf
add
aas
sar
add
pop
xor
add
xchg
aad
stos
dec
inc
jo
jno
rcr
dec
fs
cwde
clc
and
cmp
out
sub
cmp
arpl
ror
dec
jg
push
push
cmp
add
pop
inc
cs
mov
sub
xchg
mov
dec
jo
xlat
inc
pop
call
add
mov
adc
jo
jge
jae
mov
add
mov
enter
or
push
xlat
dec
xchg
inc
rcr
xchg
aas
not
pop
cmp
cmp
xlat
dec
psubq
or
jmp
or
add
push
push
test
ret
mov
call
js
cmps
loopne
ins
sahf
and
add
xchg
pop
int
mov
xlat
cdq
xchg
cwde
dec
jo
add
pop
sti
mov
mov
test
mov
lods
sar
test
aam
push
out
ja
cmps
mov
shl
add
hlt
jp
push
cli
cld
inc
cwde
pusha
and
mov
hlt
scas
fisub
aam
rol
inc
out
loope
jmp
sub
inc
add
add
cmp
add
xor
jp
cli
xlat
add
add
and
inc
mov
fld
sahf
movs
jae
push
sub
arpl
leave
test
and
add
sahf
dec
push
mov
lock
in
add
xchg
lea
add
xchg
dec
sahf
scas
dec
ret
js
lock
scas
xchg
sbb
loop
add
into
mov
and
retf
sub
imul
and
mov
xor
addr16
adc
and
or
sub
leave
stos
fnstsw
pop
cmp
div
inc
xor
or
add
pop
dec
pop
pop
lods
pop
lock
xor
sbb
and
xchg
add
test
fadd
cmps
sbb
call
lds
jnp
test
enter
pop
add
pop
pushf
pop
add
shr
scas
add
cmp
in
or
es
rcl
add
stc
inc
mov
cmp
add
imul
add
mov
out
js
add
leave
pop
jnp
xchg
xchg
pop
dec
or
push
(bad)
repnz
jno
imul
inc
add
jb
loopne
jg
dec
xor
hlt
adc
cs
cli
popf
sysexit
and
sahf
cmp
inc
or
mov
mov
nop
jmp
inc
sahf
push
nop
aad
sbb
ins
into
pop
sbb
in
sub
jb
mov
ror
mov
repz
dec
inc
cmc
add
mov
aad
add
mov
aam
or
add
int
je
test
call
ins
mov
outs
sub
ja
fcmovnbe
push
fld
jb
sbb
out
sbb
jp
scas
xchg
lods
fist
mov
jne
pop
jecxz
fs
sub
jge
loope
daa
dec
out
add
sub
jle
jnp
clc
ja
or
lea
inc
sar
hlt
pop
aam
cli
pop
jle
xchg
mov
fcomip
mov
jecxz
call
mov
mov
adc
ss
mov
add
loop
pop
mov
sar
gs
mov
mov
inc
repz
pop
test
xchg
add
xor
xor
jae
add
pop
adc
add
xchg
xor
ins
std
mov
pop
jne
sbb
cmc
scas
adc
aas
mov
xor
and
add
pushf
and
or
pop
pop
scas
fmul
mov
mov
test
in
popf
dec
clc
bound
add
inc
xlat
mov
sub
sbb
xchg
outs
nop
movs
lea
test
retf
push
jg
js
jg
add
popa
pop
rcr
rol
or
mov
pop
sub
rol
aad
add
int3
fadd
sbb
call
lds
sbb
sub
shr
fsub
je
pushf
inc
add
and
ror
rcr
pop
pop
pop
(bad)
retf
stos
mov
push
mov
sbb
inc
shr
inc
pop
add
jmp
jp
or
test
mov
aaa
out
or
js
xchg
rcr
cmp
fst
lods
ins
add
enter
xchg
add
out
aas
clc
xchg
or
mov
loopne
adc
ror
fbld
aad
or
add
push
sub
ret
ds
mov
bound
shr
cwde
add
rcl
cmp
cs
sbb
lods
ins
clc
mov
fs
dec
jmp
(bad)
add
xchg
push
data16
aad
jns
pop
mov
sar
call
pusha
fld
(bad)
div
add
and
dec
push
add
call
adc
xchg
retf
je
dec
adc
add
jno
dec
xor
xchg
es
xor
cmp
fs
xchg
cmp
push
push
dec
mov
shl
mov
test
sub
or
cmp
call
add
inc
int3
adc
pushf
arpl
sbb
mov
push
imul
out
mov
inc
dec
lds
jbe
add
or
out
and
and
mov
mov
std
call
popa
push
push
inc
icebp
jnp
xor
hlt
sar
and
(bad)
pop
repz
stos
sbb
add
out
fst
outs
add
gs
loop
retf
add
ficom
dec
daa
inc
add
add
pop
push
inc
xor
or
adc
add
loop
mov
(bad)
jno
add
mov
hlt
fidivr
jns
outs
dec
(bad)
xlat
pusha
pushf
ins
inc
add
arpl
pop
add
in
mov
or
mov
sub
verw
mov
leave
mov
hlt
dec
lock
lods
aaa
mov
add
xor
cs
scas
or
jo
clc
lea
inc
add
add
inc
sbb
cmps
gs
inc
add
fisttp
(bad)
adc
clc
add
ja
jg
cmp
mov
mov
jbe
add
inc
iret
xor
nop
push
inc
into
aam
cld
ins
add
pop
mov
(bad)
enter
xor
jl
dec
xor
dec
pusha
push
popa
and
add
dec
and
add
lods
dec
xchg
xchg
movs
fiadd
or
jb
cmp
repnz
shl
mov
rcr
mov
mov
push
in
addr16
dec
fsubr
add
outs
and
add
pop
xor
outs
mov
mov
dec
jmp
xchg
cmp
mov
pop
mov
pop
sbb
fcmovb
test
xor
sub
mov
fisttp
adc
pop
push
fild
ins
popa
mov
and
jns
add
cld
push
fs
jne
mov
dec
mul
fild
cdq
sbb
aad
das
xrelease
loopne
mov
test
sar
and
fcomp
aas
cwde
xor
add
pop
into
imul
pop
xchg
add
jb
pop
push
and
adc
inc
into
xchg
movs
ja
add
cmps
and
sti
sub
stc
aad
jbe
aas
add
scas
cmc
xor
xchg
pop
push
(bad)
pusha
add
retf
popa
adc
mov
daa
and
add
lods
aas
mov
add
xor
es
shl
add
jnp
dec
add
add
imul
arpl
or
sbb
mov
cwde
cmp
push
add
test
adc
imul
repz
shl
add
test
fiadd
add
and
cmps
add
dec
inc
pop
add
ins
fwait
sub
xchg
ja
mov
scas
in
push
je
xchg
add
(bad)
ds
imul
test
pop
xchg
fwait
xlat
and
jae
add
int3
and
cmp
mov
cmc
add
fdivr
lea
in
ret
or
rcl
out
jmp
aam
stos
pop
xchg
inc
adc
mov
shl
pop
and
jb
push
popf
xor
fld
out
sahf
push
sub
mov
and
movs
cmp
fimul
inc
call
push
cmc
jmp
shr
scas
jbe
add
add
repz
push
xchg
add
push
add
xor
dec
add
mov
xchg
lock
add
and
idiv
or
cmp
jns
dec
rol
fcom
adc
movs
jg
add
dec
scas
jo
dec
mov
outs
outs
les
xchg
add
movs
add
xchg
push
iret
jg
mov
cld
add
test
fisubr
dec
xchg
stos
pop
add
sahf
xchg
pop
add
out
std
adc
fsubp
jle
test
(bad)
(bad)
or
popa
xor
mov
cmc
sub
sub
dec
jae
add
mov
aaa
mov
jnp
stos
add
jae
scas
inc
jns
sbb
rcr
add
inc
retf
add
aaa
hlt
lods
or
sub
data16
pop
push
and
ret
lock
mov
leave
jno
aaa
add
inc
add
mov
sub
mov
cmps
pusha
movs
pop
mov
out
rol
pushf
push
push
jecxz
mov
mov
add
dec
enter
dec
add
jmp
(bad)
sbb
outs
mov
and
popa
add
fiadd
mov
push
out
ss
aad
cld
inc
pusha
dec
clc
inc
retf
jg
rol
cmp
sbb
nop
cmp
xchg
cmp
add
std
sub
dec
les
jae
cs
push
sbb
inc
arpl
cli
push
dec
push
add
add
enter
add
and
mov
inc
sub
loop
sub
dec
out
sub
repnz
xchg
fcomp
add
std
pop
scas
adc
cld
add
es
scas
ror
pop
jmp
cmp
mov
out
sub
stos
add
sub
or
stos
push
adc
add
push
popf
pop
jmp
rcl
push
pop
add
call
mov
pop
jns
mov
add
or
xchg
and
rol
inc
push
ins
stc
mov
cmp
cmps
add
dec
retf
repnz
add
jbe
in
fisub
jo
push
push
mov
and
cmc
test
pop
retf
shl
scas
add
fsub
cmp
and
in
(bad)
cmps
add
sub
xor
(bad)
fistp
int3
cdq
xchg
pop
jl
add
outs
and
retf
push
arpl
dec
add
or
mov
mov
add
jno
icebp
mov
cmc
xor
clc
shl
add
jnp
cmp
mov
sub
outs
inc
adc
pop
hlt
ds
add
shl
mov
jle
pop
mov
xor
popf
add
jo
(bad)
bound
pop
sub
aam
or
add
jne
enter
cmp
mov
cmp
jecxz
dec
je
pop
and
add
pop
cwde
mov
xchg
dec
call
mov
sahf
mov
scas
cmp
lds
test
bound
pop
in
push
inc
leave
mov
adc
adc
ja
(bad)
loopne
aas
int3
cmps
(bad)
jp
and
cmp
lahf
dec
add
push
sub
dec
add
mov
add
lahf
fs
inc
(bad)
mov
fld
mov
mov
xlat
cmp
mov
fdiv
(bad)
add
mov
sub
inc
retf
pushf
xchg
sbb
int
and
cld
mov
sbb
fcomp
add
scas
jp
mov
mov
or
call
cmp
jno
test
in
sar
add
push
fiadd
pop
cmp
and
cmp
movd
mov
cmp
fld
inc
add
and
sbb
je
retf
inc
add
cmp
jecxz
sbb
or
pop
int3
add
add
xor
xor
fs
sbb
in
cmps
sbb
neg
and
iret
in
pop
or
icebp
sub
js
movs
inc
(bad)
ficom
add
jne
stc
fisub
jnp
xchg
sti
jo
dec
lds
or
fwait
fs
dec
jnp
add
and
out
(bad)
and
das
add
test
js
add
aam
add
bound
jge
push
and
mov
mov
add
push
ins
sub
pop
js
add
mov
push
adc
lea
mov
stos
loop
or
mov
add
xor
jge
in
bound
je
daa
jmp
add
sub
sbb
retf
add
outs
push
jmp
cli
fstp
dec
inc
or
pop
adc
inc
mov
mov
idiv
lock
ror
dec
cmp
add
xchg
mov
test
add
mov
fiadd
int
out
fmul
jb
add
xor
cmps
jle
ins
test
(bad)
and
inc
and
push
mov
aam
ds
add
dec
cmp
xchg
imul
(bad)
out
mov
sahf
adc
xlat
add
pop
fisttp
outs
fcmovb
xchg
pop
inc
dec
dec
sub
stc
retf
cmc
mov
lods
add
inc
loop
in
dec
xor
sbb
adc
mov
retf
adc
rcl
dec
add
xchg
jne
pop
movs
fcomp
daa
mov
retf
add
push
xor
jmp
add
inc
dec
xchg
hlt
adc
pop
xchg
inc
shl
fsubr
add
je
mov
fdiv
paddq
mov
sar
fild
ja
xor
je
add
cmp
jo
jmp
add
sbb
adc
int3
add
icebp
mov
sbb
imul
sbb
add
or
(bad)
test
mov
repnz
je
xor
sbb
repz
add
sbb
movs
stc
add
leave
es
adc
outs
call
stos
and
push
fdivr
dec
loop
sub
loopne
js
pop
fs
mov
mov
fcom
add
push
add
test
pop
mov
jnp
jmp
sbb
or
(bad)
fsub
pop
add
jne
and
sbb
sub
mov
add
xor
add
push
ret
mov
out
cmp
imul
jp
and
mov
inc
test
inc
cli
outs
add
pop
add
inc
scas
sub
inc
fs
lock
xor
fimul
out
out
pushf
or
sbb
(bad)
pop
cmps
int
clc
test
pop
mov
sbb
jp
push
push
add
mov
pop
scas
add
and
in
cmp
sub
sbb
or
lds
jne
add
test
mov
leave
sbb
mov
jns
fimul
test
dec
add
xlat
bswap
sti
cmp
add
add
mov
add
aam
mov
outs
out
inc
mov
cmp
add
mov
sub
ror
jae
pop
fdivr
stos
cmp
movs
bound
lods
sub
sub
mov
jmp
in
(bad)
mov
call
repnz
adc
call
test
out
pop
sbb
add
add
js
xchg
or
pop
rcr
(bad)
int
lahf
shl
jno
push
pop
mov
add
xor
add
cmp
mov
add
popa
outs
push
jns
add
mov
xchg
add
rcr
sbb
jns
js
mov
lods
pop
add
les
lods
mov
add
adc
and
aam
jnp
clc
sub
adc
mov
(bad)
ret
call
dec
inc
fld
add
inc
sub
out
jge
mov
mov
leave
retf
ins
shl
add
add
jecxz
add
inc
ds
push
add
movs
js
pusha
into
add
nop
pop
sahf
aaa
popa
fs
cmp
fist
pop
das
lock
mov
add
aad
xchg
sbb
enter
lds
xor
add
pop
add
add
jb
pop
std
add
mov
js
sbb
fs
push
scas
ins
hlt
pop
(bad)
sub
push
pop
std
jo
nop
mov
add
add
hlt
sbb
(bad)
cmp
mov
jle
inc
xor
into
mov
xchg
xchg
fucomi
lock
cmps
inc
out
test
xor
cmp
push
add
mov
xchg
mov
lock
add
xor
sar
mov
jecxz
mov
dec
rol
outs
mov
sti
mov
mov
add
mov
fwait
sti
add
cwde
addr16
or
push
mov
dec
and
aam
and
repnz
add
ins
jmp
xor
in
xchg
cmp
xchg
and
cli
add
fidiv
cwde
mov
add
jbe
call
mov
les
ficom
cmp
fdivr
inc
pop
out
sub
add
movs
jb
inc
cli
dec
jle
or
jmp
ror
sbb
popa
aas
jle
out
inc
or
and
int
fdivr
xlat
imul
pop
inc
idiv
xor
add
retf
into
addr16
sbb
sbb
rcl
iret
or
ins
pop
jb
add
sbb
inc
div
add
adc
and
and
push
ror
lea
mov
out
subps
add
movs
sub
inc
icebp
std
les
jns
add
and
inc
fisub
ins
mov
add
or
push
(bad)
stc
cmc
pmullw
loopne
sbb
mov
scas
lods
jbe
mov
mov
add
add
dec
shl
jmp
popf
scas
test
ins
xor
retf
mov
fsubr
out
mov
jbe
xchg
mov
jne
inc
add
dec
test
add
cmp
clc
add
jg
pushf
cmp
scas
(bad)
fld
mov
repz
dec
xchg
add
pop
pop
shl
mov
push
xor
xor
jg
jno
mov
(bad)
sbb
cli
aas
(bad)
aad
pushf
es
jg
push
inc
cmp
loope
arpl
push
or
push
xchg
push
aad
mov
lds
inc
xor
(bad)
dec
fstp
cmp
or
aam
pop
inc
in
sbb
(bad)
and
fsub
add
(bad)
cmp
fild
jmp
add
push
iret
js
arpl
add
jne
out
pop
call
mov
mov
(bad)
fcomp
push
add
push
jo
add
push
(bad)
ja
std
push
jnp
test
test
rcr
jg
add
movs
inc
outs
nop
push
sub
add
enter
cmp
add
cmc
xor
lahf
(bad)
js
fisubr
ins
int3
shl
gs
add
(bad)
push
or
outs
rol
repnz
mov
test
add
pop
out
xor
loopne
xor
rcr
add
sbb
add
fist
inc
or
ds
cld
dec
je
call
test
shl
fwait
js
movs
retf
inc
dec
add
cmp
aam
pop
add
(bad)
movs
jo
xchg
xchg
and
shr
sbb
daa
aas
cmps
mov
inc
push
xchg
and
in
add
pop
jns
push
push
rcl
loop
push
rol
jmp
mov
pusha
sub
mov
xchg
cmps
mov
bound
jne
leave
out
cmp
inc
sbb
pop
push
mov
mov
dec
int3
and
ret
fadd
push
xor
push
cli
(bad)
out
mov
adc
lea
stos
push
mov
jge
ja
(bad)
fadd
std
fwait
inc
push
add
or
add
stc
adc
sub
das
xor
(bad)
ds
jno
push
or
mov
sbb
add
cld
sub
cmp
and
xchg
arpl
push
iret
xor
lds
pop
sbb
sbb
dec
addr16
out
pusha
icebp
outs
sbb
js
jno
dec
jl
add
sahf
sar
add
fstp
add
cwde
adc
aam
jb
add
loopne
(bad)
add
sub
or
xor
push
pop
ins
jecxz
mov
dec
call
int3
outs
push
jno
pmaxsw
bound
test
add
cs
ret
add
mov
xor
out
sbb
cli
sbb
jbe
inc
or
xchg
mov
shl
bound
arpl
pop
shr
and
xchg
into
inc
jecxz
jle
add
ror
cmp
mov
mov
cmp
sbb
add
dec
cmp
push
mov
leave
iret
add
sbb
movs
sbb
nop
add
in
shl
daa
out
clc
jnp
sub
push
dec
push
fwait
mov
mov
add
jmp
sti
or
movs
pop
sub
lods
mov
jo
jo
dec
repz
enter
aam
aas
sbb
mov
or
jne
sub
sbb
pop
xchg
addr16
mov
jmp
push
rol
sbb
jne
pop
pop
dec
and
movs
mov
adc
pop
js
add
sbb
pushf
(bad)
push
sahf
adc
push
and
test
nop
push
aas
cmp
xlat
and
push
xchg
xor
mov
int
jl
mov
(bad)
xchg
imul
dec
lds
fdivr
cmp
into
imul
adc
int
add
dec
mov
sbb
mov
add
and
inc
cmp
fwait
cmc
fdiv
sub
hlt
outs
cmp
imul
sbb
retf
xor
xlat
shl
pop
fiadd
jecxz
into
movs
xor
jle
sbb
je
add
pop
or
mov
outs
sub
inc
mov
pop
popf
pop
nop
push
push
add
adc
movs
out
dec
ins
inc
add
add
sbb
and
inc
loope
jne
rcl
imul
mov
rcl
pop
jecxz
sub
jp
(bad)
clc
mov
pop
(bad)
dec
repnz
cwde
test
imul
xchg
inc
dec
stos
in
push
add
or
jmp
fs
mov
mov
xor
(bad)
repz
add
pop
mov
mov
cmp
ja
cmp
cmp
sub
into
enter
add
aaa
js
add
imul
fnstsw
mov
leave
push
cmp
dec
test
clc
int3
imul
pop
call
pop
call
rol
fidivr
movs
push
pop
and
and
xchg
mov
jg
pushf
shl
lods
lea
cmp
xor
int
mov
pushf
shl
adc
cdq
add
pop
mov
sbb
out
dec
add
pop
mov
mov
data16
movs
or
cmp
inc
mov
jnp
sbb
scas
jge
pusha
fdiv
pop
pushf
mov
out
in
push
arpl
mov
mov
lea
push
mov
ja
ficomp
jno
inc
sub
add
inc
dec
xchg
mov
stos
inc
std
shr
add
dec
out
sub
jbe
lea
test
cmp
mov
fld
sbb
xor
test
add
test
dec
lods
push
test
adc
xchg
jp
jmp
and
jg
mov
outs
enter
inc
add
jmp
add
cs
mov
mov
push
add
sbb
jb
push
jae
push
fwait
imul
scas
cmp
sub
push
xor
add
push
xor
loope
mov
adc
cmp
mov
add
outs
xchg
add
call
not
pusha
retf
jmp
int
nop
inc
xchg
(bad)
xor
ds
adc
pop
sbb
push
test
(bad)
shl
sub
(bad)
xor
fucom
sahf
mov
cmp
dec
cmp
add
xchg
in
cmp
das
or
movups
fisub
add
add
inc
push
rol
push
add
fldenv
add
and
push
rcpps
pop
in
and
add
mov
arpl
add
push
div
xchg
dec
add
jbe
jle
addr16
mov
mov
xchg
je
mov
cmc
sub
outs
add
rcl
adc
xchg
ja
and
nop
add
ss
loopne
push
ret
dec
inc
scas
dec
inc
movs
lock
test
call
add
int3
jno
std
sub
add
jo
data16
fiadd
cld
and
sar
(bad)
cmp
out
jecxz
and
jns
or
mov
xor
lods
sub
sar
int3
xchg
add
dec
imul
sub
nop
loop
fsubr
sub
pop
add
xchg
jb
ror
jne
cwde
sbb
push
jmp
push
add
adc
or
and
fistp
pop
and
xor
push
add
nop
ja
mov
jae
add
out
or
jo
jp
pop
and
xor
push
jno
mov
ret
fwait
dec
mov
or
add
loope
clc
and
sbb
add
push
xchg
test
xor
(bad)
fsub
sbb
fwait
imul
repz
lock
clc
add
add
or
dec
stc
jmp
add
int
jnp
ret
cmp
fstp
add
jne
loope
in
inc
scas
mov
inc
xor
add
fs
punpckhwd
test
mov
add
ins
and
loope
sbb
(bad)
mov
mov
and
jle
sub
lahf
ret
cmp
enter
(bad)
clc
mov
or
gs
xchg
xor
and
les
arpl
test
mov
gs
add
mov
xchg
cmps
ja
mov
std
pusha
xchg
add
movs
ror
loope
cmp
cs
mov
cld
pop
add
adc
cwde
mov
aaa
pop
push
retf
dec
sahf
add
(bad)
push
fs
inc
ins
retf
xchg
enter
outs
jp
add
call
pushf
test
inc
add
pop
xor
add
mov
push
scas
(bad)
or
das
dec
and
dec
push
cmp
add
push
data16
cmps
add
stos
cli
mov
jp
push
xchg
dec
stos
dec
pusha
add
pop
shl
mov
jmp
sub
push
ficomp
jp
popf
ficom
cmp
jnp
add
mov
xlat
je
pop
pushf
mov
pslld
dec
ret
mov
inc
iret
push
shl
xchg
xlat
adc
hlt
pop
shl
add
iret
mov
imul
xchg
add
ins
jno
xor
dec
sar
jo
pop
or
test
add
or
pop
add
js
dec
jnp
imul
jb
inc
add
pop
add
in
rol
fdivr
or
outs
fwait
aas
jne
rcr
and
jl
add
pop
bound
add
cmp
xor
add
fisubr
popa
add
sar
and
outs
movs
cmp
push
add
sub
xchg
dec
call
add
mov
movs
or
cmp
loop
popa
jns
add
lahf
retf
push
test
jne
add
and
jae
jns
xlat
aam
test
in
or
add
mov
movs
test
sbb
jnp
and
xchg
stos
sbb
jb
push
icebp
adc
add
(bad)
sahf
mov
pop
mov
xor
and
jne
push
jmp
bound
mov
xchg
pop
into
shr
jnp
or
pop
imul
cmps
retf
mov
mov
stos
cmp
outs
mov
sahf
iret
ffree
popf
call
loope
cwde
(bad)
xchg
adc
xlat
jo
stos
add
icebp
add
mov
cld
std
cmp
push
adc
pop
(bad)
imul
jno
jo
stos
inc
lea
out
cli
shl
mov
into
ins
lods
inc
aam
pop
add
aad
push
push
sub
loope
ror
in
sub
jg
add
ret
push
aaa
pop
pop
js
add
sbb
push
add
(bad)
inc
test
mov
cs
mov
adc
add
outs
into
push
in
inc
imul
jp
int
popa
pop
pop
cmp
gs
add
aaa
icebp
lds
call
js
mov
fidivr
pop
into
(bad)
dec
mov
leave
loop
or
cmps
dec
push
pop
fbstp
arpl
mov
sbb
mov
je
pop
out
shl
add
cmps
jl
xor
sbb
mov
add
scas
cmp
pop
adc
(bad)
in
outs
push
jl
(bad)
ins
in
loopne
(bad)
ficom
icebp
add
xor
add
aaa
cwde
test
sub
mov
mov
sti
add
xchg
jg
fwait
int3
fs
pop
dec
lock
arpl
adc
push
xchg
scas
add
add
cdq
ss
dec
mov
ror
imul
pop
add
jecxz
cwde
jl
cs
mov
iret
fwait
hlt
xchg
mov
dec
sub
jno
mov
fstp
pop
int3
sar
data16
fbstp
jne
jle
adc
adc
jecxz
inc
mov
or
mov
jae
cli
add
fstp
pop
push
movs
add
into
les
loop
jp
mov
xlat
push
pop
adc
mov
cmps
jge
pop
dec
pop
mov
add
adc
jle
dec
ret
mov
xor
pop
call
(bad)
xchg
or
add
lods
sbb
add
mov
mov
push
push
icebp
xor
ror
inc
cs
pop
xchg
cdq
imul
mov
push
sbb
sub
sar
retf
add
nop
(bad)
in
and
xor
xchg
pop
sbb
adc
add
dec
or
push
cmps
inc
loop
inc
pop
loopne
add
or
dec
scas
repnz
lock
neg
mov
add
adc
xchg
add
lods
pusha
(bad)
shl
sti
shr
call
jl
ss
loop
add
out
dec
cmp
xchg
sbb
or
pop
cld
fdiv
dec
imul
fisubr
pusha
push
add
jnp
fdiv
vpshufb
fild
add
jl
mov
in
sub
xchg
ja
or
fwait
xchg
dec
or
outs
loope
jne
inc
jmp
sbb
xor
or
mov
add
and
aas
add
pop
outs
repz
scas
and
stos
seto
rcr
cmp
das
xor
repz
sub
mov
loop
out
movs
mov
test
shl
ins
jge
in
fldenv
jo
sahf
dec
sub
out
dec
cmp
inc
repnz
push
loopne
int
retf
add
in
push
lock
(bad)
loop
in
mov
aam
mov
add
jg
inc
int
cmp
sbb
pop
lods
xor
out
mov
bound
mov
imul
inc
pop
sti
add
lods
js
sub
dec
fsub
pop
add
sub
addr16
sbb
adc
xchg
add
shr
sub
cmp
push
sub
and
pop
dec
or
mov
dec
(bad)
xchg
mov
cmp
pop
or
add
call
add
data16
adc
retf
add
adc
add
pop
sub
movs
outs
lock
push
mov
jmp
int3
out
retfw
mov
mov
add
jnp
in
add
(bad)
mov
mov
cmp
sub
dec
cmovle
add
add
fisttp
aaa
(bad)
xor
fsubr
fwait
mov
mov
mov
add
jg
mov
mov
pusha
aad
sbb
pop
push
push
push
imul
xor
test
lods
fmul
ror
mov
loopne
outs
shr
jg
add
fdivr
mov
sub
and
ret
add
gs
and
out
pop
pop
repz
cli
pop
mov
and
add
jl
xlat
add
loop
lahf
iret
jg
add
sbb
es
pop
mov
or
cs
data16
push
out
scas
popa
sar
jnp
ret
mov
push
jecxz
xchg
mov
fistp
cmp
pop
sub
in
repnz
or
inc
test
adc
sub
scas
add
fnstenv
popa
scas
cmp
fdivr
add
(bad)
lock
add
fwait
gs
pusha
popa
hlt
cmovb
mov
xor
push
lds
cs
push
add
shr
sar
(bad)
xor
popa
adc
sbb
jp
pop
xor
sbb
pushf
add
pop
adc
mov
add
add
and
ss
and
push
hlt
pop
rcr
add
adc
mov
clc
ja
retf
dec
mov
shl
sbb
cmp
dec
sub
sub
leave
push
add
mov
out
shl
lods
cmp
adc
popf
xlat
mov
cmp
mov
push
xchg
in
vphsubwd
inc
fistp
ds
and
inc
aad
mov
loopne
mov
add
in
cmp
xlat
xor
xor
call
sbb
mov
dec
jb
retf
leave
sbb
icebp
repnz
js
sub
jae
xor
nop
jmp
fisub
icebp
pop
and
adc
jge
popa
xchg
clc
imul
xor
call
fldenv
add
sub
pusha
jmp
leave
call
in
mov
xor
iret
adc
outs
add
push
gs
ror
lods
hlt
xor
daa
movs
mov
dec
stos
je
sub
je
sbb
xchg
sbb
inc
mov
jp
or
xchg
jo
(bad)
and
add
push
jb
gs
add
scas
mov
ror
sub
add
mov
dec
mov
outs
stos
sub
shl
sbb
mov
jbe
fidiv
add
pop
or
ins
inc
add
iret
leave
xchg
add
rol
add
jno
rol
in
mov
xchg
jmp
sub
fld
and
repnz
emms
mov
mov
sahf
jnp
or
out
ret
add
shr
mov
mov
mov
fbstp
adc
push
mov
ins
add
add
sbb
or
mov
sub
xchg
pop
mov
pop
add
pop
add
cmp
mov
sub
(bad)
scas
mov
push
arpl
mov
pop
pop
add
mov
pop
xor
sub
mov
cmp
mov
addr16
sub
push
jnp
out
stos
xor
sbb
push
sub
mov
pop
loope
xchg
xchg
arpl
cdq
outs
add
and
sbb
jle
movs
mov
push
cmp
movs
xor
jg
add
icebp
(bad)
sub
sub
iret
out
or
pop
nop
daa
push
add
xchg
shl
sbb
sbb
fcomp
test
mov
xchg
mov
test
in
fadd
rcr
aad
cmp
inc
jmp
xchg
mov
jno
jb
mov
stos
repz
outs
add
scas
cld
or
fild
and
xchg
and
add
add
sar
xchg
pop
add
pop
mov
add
call
cmp
add
nop
movs
shl
mov
xchg
inc
lds
add
mov
sti
push
(bad)
bound
add
out
and
retf
pop
add
cmp
outs
lods
cld
add
xchg
dec
ret
iret
add
into
sbb
out
aaa
jmp
mov
jo
sub
sbb
outs
pop
adc
es
dec
aaa
pop
rcr
pop
pop
ror
jne
pop
cmc
mov
add
add
add
sub
dec
adc
mov
rep
add
fdivr
mov
mov
xchg
jle
and
repnz
xor
jge
out
pop
sub
sub
(bad)
inc
sub
xchg
inc
cmp
or
iret
stos
sbb
mov
fcomp
pop
mov
sar
retf
int
xor
add
inc
adc
push
fs
add
xlat
jmpw
xchg
push
xor
inc
inc
push
push
and
mov
test
or
(bad)
fldcw
fld
mov
mov
add
and
cmp
pop
in
add
out
mov
add
push
in
push
jmp
in
mov
mov
xor
push
sbb
pop
xor
or
pop
ins
push
adc
mov
push
stos
mov
call
add
inc
add
push
inc
xor
sbb
test
sar
and
cmp
imul
cli
mov
or
xor
and
dec
and
xor
clc
sbb
pop
push
mov
mov
(bad)
cmovae
xor
mov
cmp
push
sub
aad
dec
sub
xchg
pop
add
or
cld
xchg
movs
or
pop
aad
or
dec
push
add
scas
add
mov
mov
int
stc
push
repnz
ror
cmp
xchg
sahf
add
push
cmp
add
sbb
movs
ja
cli
add
push
xchg
repnz
mov
fwait
mov
out
push
fadd
jns
movs
rol
test
rcr
stc
inc
in
mov
std
add
or
nop
pop
js
pop
cwde
jnp
imul
pop
mov
mov
add
cmp
cvttps2pi
mov
test
shr
test
cmp
nop
retf
inc
jecxz
hlt
mov
fist
jmp
mov
mov
leave
xlat
bound
cld
je
jae
(bad)
in
in
push
cmp
xchg
mov
mov
pop
xchg
add
dec
ror
test
add
and
retf
xor
add
sbb
ins
dec
cmc
add
mov
arpl
rol
inc
pop
jnp
cmps
(bad)
call
pop
jp
loopne
outs
hlt
inc
inc
popf
xor
xchg
inc
(bad)
out
shl
js
jp
dec
out
cmps
cmp
retf
dec
pop
mov
push
data16
rcr
sub
inc
add
xchg
jmp
std
add
pop
aaa
adc
ins
add
inc
fdiv
aad
and
pop
loop
xchg
xor
pop
arpl
and
retf
add
sahf
or
icebp
je
cmp
cmps
cmp
or
and
daa
xchg
add
popa
add
and
scas
int
mov
add
xor
fwait
iret
sbb
dec
or
jns
add
inc
xor
and
leave
out
jnp
bound
inc
add
les
sbb
lock
or
and
add
repnz
dec
pop
inc
sti
xchg
add
inc
sub
ja
add
xor
mov
add
rcl
mov
sbb
cmp
pop
mov
and
jbe
mov
sbb
fild
add
or
es
mov
pop
les
sbb
pop
push
cmp
in
add
or
out
icebp
pop
rcr
outs
jae
pusha
sahf
mov
dec
mov
in
cdq
inc
bound
or
imul
sub
add
into
shr
cwde
iret
push
shl
cmp
sbb
add
dec
test
jmp
push
sub
pop
enter
sub
mov
xlat
add
mov
retf
lock
xchg
pop
repz
mov
inc
add
dec
lahf
inc
add
scas
pusha
lods
neg
leave
rol
adc
add
sbb
mov
jecxz
fimul
dec
add
sahf
hlt
pop
in
sbb
cmp
rol
xor
fwait
sbb
cld
push
lock
cmp
sub
fst
or
inc
jp
add
mov
mov
jl
sbb
test
sub
lds
add
xor
add
add
xor
ja
movs
or
ffreep
xlat
adc
inc
mov
jmp
xor
aam
push
iret
aas
ret
pop
add
mov
mov
or
sbb
rcr
mov
push
cmp
sbb
rcr
dec
aam
add
sub
add
mov
pop
or
sub
loop
cld
cmc
sub
cmp
jbe
iret
add
(bad)
cwde
inc
push
pop
add
(bad)
adc
clc
call
inc
sar
jno
int
lods
adc
call
jo
lahf
mov
add
dec
cwde
ins
cmp
cmp
add
mov
rol
lahf
mov
popf
adc
sub
add
jl
adc
jne
add
adc
push
xchg
into
je
loopne
fild
add
add
out
sub
push
sub
pop
stc
cmp
add
pushf
and
inc
cmps
scas
adc
dec
js
ds
cmp
hlt
push
ror
cmp
sbb
(bad)
mov
dec
push
iret
add
std
arpl
hlt
in
addr16
stos
mov
xchg
jno
or
paddw
add
jb
add
nop
pop
dec
mov
or
fsub
in
cmps
add
lods
push
mov
mov
jb
cwde
les
sbb
add
xor
mov
add
in
mov
mov
ins
xor
imul
inc
sub
jecxz
iret
inc
inc
mov
dec
fsub
les
inc
sbb
push
xchg
pop
push
test
jg
cs
cmp
xor
mov
cmps
or
(bad)
pop
mov
lahf
js
xchg
sbb
bound
add
call
mov
add
dec
sar
int
sub
mov
xor
xchg
icebp
mov
adc
aam
aam
lea
ret
cmc
pop
test
ret
push
pop
mov
adc
test
add
push
adc
add
jecxz
fwait
in
rcr
add
arpl
cmp
add
retf
pop
pop
xchg
cmps
add
jge
inc
pop
mov
scas
adc
sbb
sar
jp
fst
mov
addr16
out
mov
sub
mov
and
repz
fcmovb
lahf
add
dec
out
dec
adc
xchg
scas
movs
or
lods
pop
stos
cmp
mov
mov
pushf
sub
inc
adc
pop
nop
mov
in
push
cmp
jp
bound
cmps
cmp
jo
cmp
nop
or
cmp
add
mov
stos
ficomp
dec
xchg
mov
test
push
mov
adc
(bad)
std
mov
sbb
pop
inc
pusha
stos
xchg
mov
push
jns
push
push
fcom
jecxz
loope
or
and
retf
ret
clc
fistp
fadd
mul
xor
scas
sub
dec
pop
pop
xor
sbb
dec
sub
adc
mov
mov
mov
pop
imul
mov
cmp
outs
mov
ja
jnp
add
cmp
and
jl
sub
mov
cmp
mov
hlt
out
adc
(bad)
mov
jle
dec
add
and
xchg
or
std
or
(bad)
out
pop
data16
jmp
mov
push
mov
push
cli
xor
inc
test
dec
(bad)
lock
stos
sbb
ret
adc
inc
xchg
out
and
add
inc
or
test
add
add
mov
mov
arpl
movs
mov
push
xchg
push
add
mov
push
call
sahf
or
ror
gs
sub
ror
pop
pop
aad
aaa
fwait
xor
lahf
xchg
cli
adc
jg
psubb
jb
outs
jno
sahf
jo
ret
fidivr
and
push
sub
mov
in
daa
sub
outs
or
adc
cmps
xchg
pop
adc
int
add
frstor
mov
retf
push
fdiv
aaa
pusha
adc
add
stos
mov
daa
jbe
inc
add
shl
push
sbb
jo
call
jl
fild
mov
push
add
xor
pop
mov
lock
cdq
aas
cld
ss
loopne
sbb
pop
fs
xor
ja
push
aaa
xchg
pop
xchg
fiadd
add
loop
mov
add
jg
ins
add
sbb
cmp
dec
cld
fld
cmp
mov
add
and
mov
in
adc
add
push
ret
adc
cld
sbb
jmp
cli
xor
mov
jmp
ja
aaa
jns
cdq
mov
(bad)
xor
inc
mov
sbb
push
out
dec
movs
or
shl
add
jns
sbb
adc
jecxz
mov
xor
ret
dec
pop
add
push
loop
or
push
loopne
add
lods
jns
jbe
add
xor
out
fdiv
or
add
jb
jecxz
push
outs
cs
adc
jp
sub
add
xor
push
dec
push
pop
adc
imul
sar
lahf
jmp
inc
pop
mov
jae
cld
fdivr
scas
push
(bad)
sub
sbb
add
ja
lahf
fsub
push
cmc
and
pop
add
sbb
add
mov
aam
cwde
dec
mov
popa
mov
add
jecxz
sbb
xchg
add
pop
xor
xchg
shl
mov
inc
outs
mov
cmps
dec
mov
rcr
(bad)
jp
add
add
das
fcom
dec
shl
pop
leave
adc
add
out
lock
add
jae
inc
add
xchg
add
aam
fwait
sbb
jl
add
pop
dec
add
mov
enter
pusha
add
and
retf
movs
test
xor
inc
fiadd
push
fld
sbb
aad
push
add
pop
shl
add
sub
mov
ret
mov
xchg
inc
adc
(bad)
in
cdq
xor
add
xchg
pop
sub
std
sub
adc
mov
xchg
call
pop
ret
cwde
dec
jnp
inc
add
lods
mov
adc
inc
int
nop
shr
lock
enter
test
add
mov
xchg
sub
mov
or
add
imul
je
add
and
sahf
add
sbb
cli
jb
cmp
add
xor
push
add
pop
xchg
mov
inc
mov
dec
cmp
push
push
mov
jns
bound
xor
out
sbb
es
addr16
cmc
retf
clc
cli
mov
push
add
push
test
lds
cld
in
fiadd
mov
fwait
xchg
mov
clc
cmp
outs
xor
lahf
and
lods
pop
cld
sbb
shl
and
sahf
pusha
mov
fadd
leave
xchg
jo
mov
aam
jmp
push
add
cmps
js
sub
dec
loop
popf
push
jbe
mov
jae
loopne
fmul
loopne
adc
xlat
cli
outs
cmp
in
stc
inc
fadd
add
fimul
mov
add
xchg
shrd
sahf
inc
and
add
adc
mov
fxch
stc
and
jae
add
mov
push
add
xor
add
add
shr
cs
shl
add
mov
jbe
jne
dec
cmp
test
test
(bad)
add
aas
mov
add
daa
out
jb
pop
push
add
outs
fstp
outs
pop
clc
pop
adc
cwde
repz
xor
outs
cs
sahf
js
xor
imul
cld
loop
fiadd
test
add
push
mov
shl
aaa
or
cwde
call
psubw
mov
std
loope
inc
mov
add
(bad)
nop
lea
fist
sahf
aad
add
or
retf
stos
cmp
montmul
cmps
pop
mov
inc
enter
sub
lahf
jb
ret
mov
add
ret
arpl
jae
outs
add
sbb
xchg
xchg
(bad)
push
push
nop
add
jl
aas
add
add
mov
aas
int3
sbb
and
sub
mov
sbb
ins
and
xchg
dec
pop
sub
add
or
mov
add
push
gs
mov
and
inc
sbb
sub
(bad)
xor
es
cmps
cvtpi2ps
ror
bound
out
mov
jmp
mov
stos
add
ret
add
adc
xlat
fadd
es
je
pop
push
add
inc
inc
xchg
lods
retf
pop
and
lds
mov
(bad)
int
mov
push
js
xlat
push
adc
lock
add
jbe
dec
inc
rol
in
push
sahf
call
dec
ret
fs
ja
inc
push
iret
scas
push
pop
add
cwde
retf
pop
pop
test
hlt
std
or
ins
test
jns
sets
test
fisub
pop
adc
into
les
popa
and
or
fidiv
xchg
push
mov
icebp
push
mov
pop
add
pop
mov
add
(bad)
mov
hlt
and
mul
add
push
mov
jae
push
push
xor
mov
pop
cmp
cli
popa
dec
push
fcmovnbe
(bad)
sbb
fwait
or
imul
call
call
cmp
out
add
bound
popa
aad
adc
xor
fwait
call
out
add
pop
pop
mov
hlt
sub
ja
xchg
add
test
cmp
inc
sub
cmp
rol
clc
retf
enter
add
add
cmp
pop
stos
pushf
ffree
leave
add
push
clc
rol
repz
add
mov
sbb
fadd
mov
dec
add
fwait
(bad)
sub
add
ins
add
pop
sti
(bad)
mov
adc
and
(bad)
or
jg
cmp
sbb
or
mov
jae
nop
in
mov
pushf
mov
out
cld
lahf
dec
push
ins
adc
jb
test
mov
inc
add
mov
in
cmp
jb
jg
pop
jmp
dec
xor
repz
jle
adc
sbb
push
inc
into
sub
and
inc
dec
fwait
test
push
adc
ins
push
jge
into
(bad)
rol
add
mov
repnz
retf
mov
add
clc
sub
aaa
in
js
jmp
jno
cld
les
push
push
mov
test
mov
push
dec
fdiv
inc
add
jl
pop
add
sti
dec
xchg
test
aas
inc
cli
xchg
mov
jle
test
adc
into
lods
outs
add
mul
xor
lahf
ltr
iret
sub
pop
push
jno
lea
jmp
inc
jl
and
pop
jns
add
fcomp
inc
(bad)
sbb
loop
call
ret
clc
push
stos
rol
pop
pop
and
call
jl
(bad)
clc
in
pop
add
jno
mov
fild
cs
out
inc
cmc
into
les
sbb
add
je
jp
add
jge
in
stc
xchg
repnz
aas
inc
sbb
fdivrp
nop
cmp
sub
sbb
dec
mov
mov
loopne
outs
cmp
ror
cdq
mov
dec
out
fnsave
add
pop
push
iret
jns
enter
add
ss
shr
dec
add
scas
add
punpcklwd
repz
jmp
mov
mov
mov
add
xchg
clc
arpl
outs
xor
fs
test
jle
jbe
jo
arpl
mov
ds
add
fs
jmp
jl
lahf
pop
test
or
iret
retf
dec
inc
jecxz
pop
xor
inc
(bad)
push
cmps
add
js
cdq
add
sbb
neg
mov
inc
xchg
mov
icebp
or
mov
loop
push
mov
(bad)
xchg
cmc
rol
(bad)
jbe
add
int3
bound
xor
in
in
cmp
pop
add
push
imul
pop
or
sbb
or
push
(bad)
add
cmps
test
or
mov
mov
add
mov
sbb
push
arpl
stos
xchg
loop
sbb
pusha
xchg
lds
or
push
pop
outs
push
fidivr
hlt
rol
cli
dec
daa
enter
dec
add
pop
sbb
jmp
add
dec
cld
jne
mov
mov
lea
leave
sub
iret
ins
mov
adc
test
or
adc
mov
pop
fcom
push
sbb
or
inc
js
(bad)
rol
push
mov
and
jl
cwde
xchg
outs
xchg
rcr
add
rcr
mov
sbb
mov
jp
add
(bad)
sahf
mov
mov
add
test
dec
sub
pusha
xor
add
dec
xchg
(bad)
jb
fucomp
jl
push
hlt
or
and
rol
stos
sub
mov
fisttp
pusha
sbb
add
cwde
xchg
fsubr
mov
xchg
stos
repz
cmp
sbb
push
scas
push
lock
xchg
iret
dec
adc
fldcw
or
(bad)
and
xchg
(bad)
stc
jo
mov
sub
int3
cmps
lock
repnz
jnp
cs
icebp
gs
jbe
add
mov
inc
test
push
add
(bad)
mov
test
xor
daa
cmp
fs
mov
xchg
sub
and
xchg
add
cs
pop
sbb
add
adc
mov
xchg
push
mov
mov
sbb
add
pop
mov
clc
std
out
nop
add
xlat
xchg
xor
push
sbb
add
sub
mov
pop
cli
call
frstor
adc
cli
cmp
ret
push
div
cld
(bad)
retf
add
xchg
mov
repnz
mov
add
jmp
add
cld
test
out
retf
stos
cmp
mov
add
or
je
inc
fdivr
dec
add
mul
sahf
jns
mov
cmp
mov
ret
add
iret
mov
mov
mov
cld
adc
xor
movs
fidivr
mov
sbb
popa
xchg
jne
pop
mov
repz
cmp
js
push
xchg
pop
shr
rol
je
add
ret
dec
mov
xchg
inc
jg
daa
add
retf
bound
stc
sub
add
mov
dec
add
pop
out
dec
loopne
pop
fmul
sbb
test
jge
sbb
sub
fdiv
rcl
add
pop
retf
call
je
push
push
sub
pop
and
add
or
pop
jnp
add
movs
cmps
push
fldenv
push
add
cmp
cmp
xchg
js
add
dec
pushf
xor
cmps
add
cmps
into
xor
jo
scas
pop
shl
xor
cmc
cwde
fdiv
pop
xor
add
pop
pop
hlt
add
into
repnz
sub
mov
dec
jo
mov
and
and
repz
sbb
mov
dec
sub
dec
mov
or
retf
jecxz
inc
cld
inc
sti
xchg
add
std
ficom
imul
add
daa
jp
add
or
les
out
add
scas
pop
popf
outs
xor
push
or
mov
inc
test
inc
ror
pushf
add
pop
(bad)
and
sub
pop
or
mov
mov
imul
sti
pushf
loope
add
fistp
jl
add
cmp
sbb
xor
inc
int3
scas
and
bts
add
jl
add
pop
(bad)
dec
lods
enter
fcom
add
(bad)
jle
jmp
inc
mov
fimul
push
sub
(bad)
push
add
imul
call
cmp
pop
add
arpl
xor
add
imul
mov
mov
or
jle
or
mov
mov
scas
outs
ret
sbb
ds
inc
inc
(bad)
fidivr
add
push
loopne
imul
add
ins
and
aad
add
xchg
push
xor
or
add
mov
int3
add
cmp
lahf
jbe
add
test
xchg
lock
add
cld
mov
sbb
xor
scas
rol
pop
outs
cwde
jmp
out
dec
xchg
cdq
add
jnp
int3
cmps
enter
add
std
addr16
out
push
mov
add
mov
(bad)
jp
(bad)
out
movs
pop
fisttp
push
movs
ja
mov
les
inc
hlt
cdq
push
push
ds
push
inc
inc
daa
mov
fisttp
cli
imul
ret
sub
jl
pop
mov
jb
sub
mov
add
stc
(bad)
add
dec
lea
mul
loopne
push
pop
add
xchg
inc
movs
add
and
pop
mov
jno
add
scas
(bad)
sbb
dec
ss
add
in
adc
sbb
adc
inc
jge
mov
xchg
mov
cmp
add
xchg
cmp
dec
pop
adc
adc
mov
cmp
shl
and
fdivp
sbb
hlt
sbb
stos
div
jp
adc
dec
scas
fsubrp
jge
inc
add
mov
lods
bnd
sar
out
mov
and
dec
add
mov
rol
rcl
ret
pop
xchg
sub
mov
xchg
fbld
movs
arpl
in
mov
cmp
add
add
push
out
push
std
jg
inc
inc
pop
test
lods
mov
jecxz
mov
add
cmps
in
xchg
add
jl
inc
or
js
sub
pop
fstp
ret
add
push
adc
push
(bad)
std
outs
push
and
add
xor
retf
imul
add
mov
sub
(bad)
pop
pop
mov
add
sahf
rcr
add
jo
sbb
add
imul
or
xor
aam
or
sub
ins
push
adc
inc
adc
(bad)
sbb
xchg
dec
jmp
pop
and
cmc
xor
and
mov
daa
pop
push
or
std
loopne
cmps
rol
loope
ret
(bad)
repnz
add
sub
lahf
mov
push
mov
add
pop
mov
and
cmp
movs
das
xor
push
popa
dec
sahf
mov
push
cli
daa
mov
ror
pop
xchg
fsub
and
cmp
xchg
and
cs
xor
xchg
add
arpl
mov
add
push
and
pop
cwde
add
ja
and
or
mov
dec
cmp
std
xchg
xchg
movs
mov
xchg
sti
movs
es
sbb
cmps
sub
mov
pop
adc
or
mov
add
fild
add
rol
(bad)
inc
out
jo
mov
mov
add
push
or
inc
adc
and
push
sub
test
in
rol
outs
sub
ins
xor
push
and
dec
cmp
or
cmp
fcom
sbb
add
jle
enter
nop
call
or
pop
adc
cld
sub
bound
mov
nop
and
fs
and
loop
daa
push
or
or
mov
add
push
mov
or
cli
mov
nop
movs
xor
pop
es
jo
adc
dec
and
xor
inc
sbb
mov
loopne
and
or
add
or
lods
popa
xor
imul
and
sbb
ss
xor
inc
adc
cmp
push
adc
scas
adc
add
push
xor
movs
dec
gs
mov
xor
imul
xor
ins
shl
jns
dec
sub
gs
fs
sub
jb
int3
pusha
adc
fld
push
fs
arpl
push
ficomp
js
mov
sub
dec
xor
adc
mov
jae
repz
push
fidiv
push
pop
jo
inc
sbb
lock
cs
adc
dec
sbb
add
das
push
test
sub
mov
dec
sbb
jns
and
cmp
cmps
cmp
mov
cs
xchg
or
xor
and
dec
pop
push
and
push
outs
jo
sbb
sbb
push
dec
mov
push
xchg
and
cmp
data16
push
xor
xchg
ss
lods
add
aaa
cmp
sbb
rol
icebp
and
test
add
add
sbb
push
pop
and
or
or
leave
and
xlat
jg
or
sbb
and
js
and
(bad)
and
sbb
adc
into
or
sbb
inc
and
push
bnd
or
cmp
or
(bad)
adc
daa
fdiv
pop
adc
lock
pop
daa
jbe
pop
xor
or
das
xchg
and
daa
adc
sub
jmp
lds
sub
je
jl
pop
sub
mov
clc
sub
xchg
mov
cmovb
sbb
ss
repnz
in
push
lds
jb
pop
mov
jo
outs
outs
or
mov
dec
loope
xchg
cmp
or
pop
movs
jg
jg
int3
mov
cwde
js
jle
das
push
add
pop
sub
les
jno
adc
inc
mov
pop
xor
and
fbstp
int
cmc
into
inc
enter
ror
mov
sbb
movs
nop
addr16
clc
pop
xor
scas
or
prefetcht0
popf
mov
add
adc
out
adc
shr
sbb
(bad)
xchg
or
xchg
mov
cmp
clc
ins
ds
mov
sub
loope
mov
loopne
push
or
mov
call
fwait
cs
xor
je
shl
ins
loopne
call
pop
outs
loop
ret
jo
add
add
or
xor
je
push
aaa
iret
lods
sbb
shr
sar
or
icebp
xor
loopne
pop
adc
sbb
sub
imul
loopne
retf
in
xchg
div
rcl
loope
dec
add
push
jns
les
inc
xor
cdq
jge
or
aam
iret
movs
adc
sysret
pop
mov
cmps
add
nop
pop
adc
jmp
or
shl
lahf
push
or
pop
push
in
xchg
or
or
arpl
out
xor
std
and
call
pop
rcr
adc
(bad)
mov
adc
nop
movs
push
mov
mov
mov
retf
sbb
add
add
inc
push
pop
xor
mov
loopne
rcr
mov
cmp
sbb
scas
add
sbb
movs
es
xor
cld
repnz
cmp
adc
sti
add
addr16
add
inc
ret
push
add
push
adc
adc
pop
or
lods
pop
or
and
add
adc
mov
xchg
mov
xchg
aas
test
jg
adc
leave
es
mov
icebp
pusha
or
mov
add
outs
or
ss
das
add
arpl
dec
or
lods
rcl
ins
add
das
sahf
xchg
xchg
cwde
daa
add
or
aam
sub
(bad)
xchg
xchg
mov
cmp
or
push
add
xchg
cwde
xchg
sub
retf
pusha
jbe
or
adc
mov
xor
add
jnp
sbb
pop
xor
push
and
ret
sbb
ins
mov
test
adc
imul
or
and
push
inc
rol
adc
pusha
xor
sbb
and
adc
jg
jmp
add
shl
jb
push
sbb
add
bound
pop
adc
jmp
shl
pop
fs
es
js
push
sbb
sub
icebp
pop
cs
pop
push
pusha
pop
and
inc
inc
sub
stc
shl
add
xchg
push
adc
pop
cmc
es
and
inc
xchg
xchg
xchg
cmp
sbb
sahf
popa
sti
sbb
xchg
fs
cdq
loop
inc
mov
xchg
add
or
stos
or
mov
lea
lods
pop
mov
mov
add
push
xor
push
cmp
or
inc
xchg
cmp
push
cli
sbb
sbb
add
enter
dec
(bad)
or
jae
mov
outs
je
mov
mov
mov
(bad)
call
popa
fmul
fldcw
push
retf
int3
add
pop
cmp
fiadd
cs
add
sbb
push
add
sbb
mov
rcr
mov
add
mov
or
jb
mov
add
sub
pop
xchg
or
push
mov
and
push
cmp
push
and
aas
add
xchg
inc
ja
pop
xlat
jnp
mov
(bad)
into
je
sbb
(bad)
mov
das
loope
add
jns
sub
(bad)
mov
outs
mov
and
lds
cmp
scas
mov
or
test
pusha
pop
cmp
outs
into
add
adc
les
lods
nop
or
jl
mov
inc
shl
lea
xchg
add
mov
mov
fsubr
xchg
inc
rcr
dec
mov
lock
add
loopne
into
mov
(bad)
enter
(bad)
mov
sbb
(bad)
stos
bnd
jo
pusha
add
test
mov
or
adc
mov
or
jne
sbb
pop
popa
in
push
enter
fisttp
rcr
icebp
pop
shl
jl
or
mov
add
jns
iret
mov
test
lock
scas
sysexit
leave
pushf
or
push
or
lds
xor
jmp
loope
or
push
ret
lock
cwde
mov
mov
pusha
rol
jg
and
(bad)
or
and
ja
rol
retf
sahf
cmp
pushf
or
sub
js
push
push
mov
pop
push
(bad)
loope
ror
call
imul
or
mov
repz
gs
jns
jo
mov
push
outs
cmp
test
in
into
xchg
call
and
cmp
mov
test
mov
(bad)
call
ins
in
(bad)
or
fadd
ins
inc
(bad)
shl
push
inc
push
cmp
popf
sbb
adc
push
dec
shl
jnp
(bad)
cmp
adc
rcl
push
adc
scas
sbb
(bad)
int3
push
inc
mov
pop
ja
hlt
xor
enter
call
add
stos
imul
and
add
js
mov
push
fadd
test
out
fisub
jmp
mov
sbb
cmp
into
add
aaa
scas
sar
in
or
fild
sub
inc
les
sub
pop
jl
and
add
and
inc
movhps
rcl
sub
jo
scas
cld
or
xchg
ret
push
inc
imul
ror
in
clc
adc
adc
pop
out
jo
mov
mov
inc
cmp
mov
cwde
add
sbb
push
lods
mov
adc
sbb
and
out
or
add
rol
aad
loopne
je
mov
adc
call
push
ds
in
cmp
ds
or
out
add
ret
xchg
mov
pusha
mov
nop
mov
push
pop
dec
sub
xchg
and
enter
add
sub
adc
jo
cmp
fldenv
retf
ret
add
jo
or
repz
stc
cmc
sahf
cmp
icebp
enter
pop
xor
mov
push
int3
pop
shl
outs
dec
mov
(bad)
and
cmp
ss
arpl
cwde
adc
jo
inc
neg
clc
add
sub
stc
clc
adc
add
inc
lock
inc
sub
enter
retf
mov
pop
fsubr
adc
mov
adc
xor
jmp
lock
nop
or
cld
lock
or
lock
pop
dec
pop
mov
and
aam
add
inc
push
inc
inc
inc
cmp
jae
xlat
adc
mov
pop
pop
dec
jbe
fidivr
(bad)
jmp
jo
xor
push
cld
cmp
loopne
add
push
dec
mov
rol
sbb
shl
adc
movs
cdq
mov
in
rol
mov
(bad)
jp
retf
(bad)
cwde
popa
lock
pusha
int3
push
jno
clc
and
mov
and
xchg
jmp
pop
push
in
add
jmp
outs
add
mov
scas
cmp
test
xchg
push
rcr
or
fmul
push
xor
fisttp
or
aas
pop
and
mov
xchg
add
je
jo
outs
jb
mov
lds
enter
or
mov
call
aas
xchg
xchg
push
or
inc
adc
sub
push
and
cmp
adc
das
add
and
inc
rcr
add
add
sar
and
mov
pop
sahf
add
sub
or
mov
mov
sbb
add
add
add
push
in
lds
mov
sbb
adc
mov
xchg
sbb
jb
or
daa
lahf
add
add
and
push
or
push
jbe
loopne
adc
pop
or
adc
inc
push
and
and
mov
jb
sbb
xor
adc
push
loop
add
jnp
add
or
sbb
xor
push
out
xor
sub
push
sub
sub
and
cmp
dec
add
ds
add
sbb
addr16
cmp
jno
push
pushf
lods
dec
xchg
inc
loopne
adc
dec
jne
sub
mov
sbb
or
sbb
adc
cmp
cmp
sbb
imul
xor
push
or
mov
adc
push
inc
cmovno
jecxz
js
icebp
and
inc
pusha
lock
jl
pop
daa
cdq
dec
add
mov
lods
jl
sbb
scas
ins
mov
add
add
or
dec
mov
xchg
mov
jne
in
pop
add
mov
bound
xor
outs
sub
push
or
dec
or
inc
shr
ds
bound
or
push
mov
adc
outs
inc
inc
pop
dec
jl
add
adc
pop
aaa
push
out
xor
mov
nop
pushf
pop
mov
mov
sub
xchg
pop
mov
jl
xor
call
(bad)
push
or
hlt
sub
stos
push
or
mov
(bad)
aaa
mov
adc
cwde
dec
add
je
pop
in
xor
js
push
ror
fs
ret
shl
mov
cmps
loopne
or
das
push
mov
or
les
pusha
add
pop
or
or
push
add
int3
pusha
mov
or
or
adc
int
popa
xlat
lds
dec
jae
add
retf
rol
cmp
jb
mov
mov
or
sub
push
or
mov
call
stos
or
or
es
inc
clc
adc
dec
and
add
sub
stc
test
pop
xor
and
push
jmp
mov
ror
mov
mov
add
ja
jbe
xor
or
nop
mov
clc
sub
push
lock
sbb
mov
xchg
jl
add
or
dec
xor
cmp
xor
pushf
dec
push
(bad)
fmul
sub
add
int3
fwait
add
mov
xchg
lea
adc
movs
and
adc
push
loopne
jns
sbb
lods
sub
inc
leave
sub
lds
cdq
test
or
sub
or
inc
sub
out
aad
add
ja
push
cmps
and
mov
pop
or
xor
mov
js
add
sbb
nop
mov
adc
mov
xchg
popa
lock
dec
mov
hlt
sti
ret
sub
icebp
loopne
mov
mov
inc
les
dec
std
int3
and
pop
iret
enter
pusha
or
sub
pushf
cld
clc
or
pop
inc
cmp
mov
xor
sbb
xor
lock
aaa
int3
popf
mov
mov
mov
mov
and
xchg
xor
das
les
clc
push
sub
clc
cmp
adc
lock
in
jge
pop
pop
jecxz
or
add
push
rcr
pop
lahf
movs
add
aas
sbb
bound
xchg
out
int
sbb
ja
mov
dec
int3
sahf
inc
add
mov
or
and
inc
(bad)
retf
jmp
loope
mov
inc
hlt
sbb
mov
sbb
clc
push
ror
gs
jl
sub
shl
fiadd
popa
fxsave
jo
or
push
out
shr
ds
pop
add
fwait
icebp
aam
xchg
sub
sbb
or
shr
das
(bad)
xchg
mov
icebp
xor
lds
mov
nop
pop
xor
mov
xor
repnz
call
cmp
arpl
gs
mov
in
push
iret
pushf
lock
out
fiadd
sbb
pusha
push
rcr
in
add
movs
or
xor
cmps
or
add
leave
call
or
mov
stos
and
cmp
out
iret
push
fs
or
fmulp
call
sub
imul
mov
ret
xchg
arpl
leave
push
dec
xor
sbb
cwde
in
fdivr
(bad)
jecxz
(bad)
hlt
lods
mov
adc
dec
dec
ins
jge
xchg
lahf
int
loope
repz
or
nop
or
rcl
sub
mov
and
mov
mov
loope
push
sub
mov
ror
lock
add
enter
adc
adc
adc
mov
sar
adc
and
popf
sub
lock
fs
shl
adc
or
pop
mov
sbb
pusha
ins
fldenv
fsub
loope
adc
loopne
outs
fisttp
je
ds
aad
jnp
and
mov
xor
sub
ss
ins
out
pop
aad
loopne
fwait
es
lods
push
mov
cmp
clc
rcr
mov
aad
in
mov
mov
mov
or
jmp
loopne
pop
jmp
jecxz
jp
jl
and
repz
push
mov
sub
xlat
and
or
cmp
loop
fidiv
leave
rcr
xchg
and
add
daa
rcr
mov
rol
or
add
jl
sbb
repnz
pusha
cmp
inc
cmc
loopne
test
mov
or
pop
sbb
out
and
pop
rcr
adc
inc
add
dec
shl
dec
pop
es
jmp
push
repz
in
and
out
leave
clc
fild
mov
mov
test
add
(bad)
in
pop
mov
jl
lods
mov
adc
push
popf
jl
push
add
sbb
add
push
(bad)
test
add
inc
add
lock
push
cld
fmul
cmps
test
rol
adc
jmp
jl
inc
and
mov
or
sub
inc
adc
movs
dec
xchg
xchg
lds
pop
xchg
or
push
push
sbb
mov
daa
cmp
enter
lock
shl
fimul
arpl
adc
push
call
sub
icebp
cld
ror
sbb
ffree
add
adc
inc
pushf
aaa
in
loopne
nop
jb
cld
inc
pop
mov
mov
cmp
fdivrp
add
scas
fist
xchg
sub
stc
pop
je
or
pop
(bad)
popa
adc
xor
pop
aad
or
stos
push
cld
add
ins
pushf
add
pop
das
call
add
stos
clc
jnp
mov
fwait
or
lock
scas
jle
push
pop
sbb
mov
adc
aaa
rol
cmp
mov
adc
xchg
js
mov
or
or
push
data16
sub
std
dec
cmp
cli
and
cwde
call
in
popa
icebp
jge
div
xchg
sar
and
xor
add
add
cmp
or
lahf
fiadd
xor
cmp
adc
cld
es
aaa
push
mov
jg
xchg
jle
xchg
test
add
pop
sbb
loope
out
in
and
test
aad
add
bndldx
test
cmp
fwait
add
add
mov
ds
test
sub
sub
cwde
sbb
add
imul
inc
add
jbe
adc
scas
test
cmp
dec
(bad)
not
es
bnd
cmp
add
ret
add
(bad)
data16
rcl
ret
and
pop
loope
dec
(bad)
loopne
pushf
fwait
clc
and
sbb
jbe
retf
cmp
add
dec
cmp
stos
adc
fstp
pop
cld
jmp
inc
aad
ret
pusha
pop
fnstsw
mov
repz
(bad)
enter
movs
push
mov
add
cmp
add
nop
xchg
jb
xchg
les
(bad)
repnz
fistp
jg
pop
out
frstor
inc
mov
pop
or
adc
pop
sbb
loopne
aad
adc
shl
movs
cmp
jno
add
mov
stc
cmc
mov
or
hlt
(bad)
xor
movs
adc
nop
cld
call
cld
fisttp
js
adc
cmp
addr16
cmps
add
aas
dec
cmp
rcl
mov
or
popf
lock
fs
(bad)
ret
jne
icebp
or
pop
push
pushf
into
fdiv
push
leave
add
bndstx
adc
sbb
xor
cs
add
or
add
loopne
inc
or
add
add
lgdtd
sub
sub
inc
or
jg
pop
(bad)
cmp
sub
pop
xchg
(bad)
pop
and
lahf
aas
adc
imul
dec
sar
jecxz
jl
push
sub
test
and
and
sbb
dec
fadd
or
ins
push
loopne
add
in
add
adc
cmp
and
mov
cmp
or
adc
xchg
sbb
test
imul
pop
xchg
in
dec
or
dec
or
xchg
add
retf
add
and
xor
push
xor
cmps
add
and
mov
adc
sbb
mov
dec
xchg
jmp
inc
jnp
cli
add
add
sbb
xor
and
jmp
xchg
push
call
js
sub
or
adc
mov
pop
add
push
add
or
and
push
cmp
mov
xor
add
and
pushf
add
data16
dec
or
in
add
push
sbb
push
aad
push
mov
popa
out
test
push
jl
sub
pop
rcl
int3
xor
lds
jno
inc
mov
movlps
sahf
add
inc
jl
add
sub
sbb
push
cdq
cs
xchg
push
jmp
inc
(bad)
xchg
add
xchg
or
add
(bad)
adc
inc
call
or
xchg
pusha
xor
out
shl
xor
mov
jo
xor
dec
add
or
rol
or
xchg
mov
and
(bad)
add
dec
loope
sub
in
loopne
movhps
mov
add
inc
mov
das
dec
cdq
rcr
cmp
push
clc
(bad)
leave
adc
sub
fsub
fwait
add
xor
and
cmp
hlt
retf
call
xor
neg
push
gs
pop
xchg
and
nop
inc
mov
or
enter
and
cmp
les
sub
test
xor
jle
and
js
ds
push
add
sub
mov
cmp
add
add
inc
inc
inc
das
dec
mov
or
movs
sub
xor
mov
and
data16
pop
add
mov
adc
dec
hlt
adc
dec
je
inc
sbb
cmp
shl
lods
dec
and
bound
mov
add
add
inc
stos
cld
mov
sbb
mov
sbb
jns
movs
loope
icebp
add
nop
bound
cld
shl
inc
test
sbb
and
dec
jo
or
inc
jb
pop
push
ret
cmps
mov
push
movs
inc
shl
push
adc
inc
outs
mov
inc
adc
add
daa
sub
push
or
cmps
or
dec
or
arpl
xor
lods
inc
sub
les
sbb
sbb
cwde
push
mov
inc
adc
mov
or
imul
pop
cmp
inc
mov
test
sahf
pop
pushf
adc
movs
or
cdq
push
sbb
mov
mov
xchg
or
lahf
or
pop
mov
xchg
mov
test
popf
mov
pop
mov
push
mov
mov
test
add
cmps
inc
xor
or
jp
int3
sbb
inc
sub
add
add
or
jae
jl
not
adc
aas
dec
mov
jae
jl
outs
or
imul
jl
js
dec
imul
fsub
dec
adc
xor
les
and
clc
nop
shl
sbb
dec
nop
dec
sbb
cs
rcl
add
sbb
cwde
movs
cwde
sub
mov
xchg
add
mov
pop
cmc
(bad)
fstp
ror
mov
pop
mov
shr
jl
leave
(bad)
mov
push
pushf
and
or
mov
int
sbb
and
inc
and
ss
push
mov
pop
and
les
dec
mov
xchg
clc
in
inc
cmp
pop
inc
loopne
imul
jmp
shr
mov
push
inc
les
inc
mov
push
hlt
je
mov
sbb
outs
ins
cmps
int3
xchg
push
or
and
or
scas
push
push
movs
pusha
movs
xlat
dec
mov
test
inc
push
sbb
add
push
xchg
mov
outs
lock
lock
or
adc
sbb
push
jo
cmps
mov
pop
leave
xchg
clc
dec
test
mov
sub
mov
aam
mov
dec
cli
loopne
push
adc
lods
mov
test
xchg
pusha
call
adc
sbb
and
add
and
leave
or
push
push
xchg
push
test
dec
sbb
push
ret
and
dec
dec
mov
sbb
rol
and
rcr
les
dec
lds
daa
jnp
lock
dec
add
lahf
mov
dec
or
mov
sbb
cwde
adc
movs
cwde
xor
daa
xchg
inc
push
mov
call
sub
(bad)
lock
mov
inc
mov
je
retf
nop
sub
jo
movs
inc
mov
sbb
lock
adc
cmp
mov
outs
cmp
cmps
pcmpgtd
mov
les
xchg
pusha
cmp
xchg
fdivr
add
sbb
aas
js
jnp
push
enter
int3
xor
dec
shl
dec
add
lock
dec
dec
iret
and
lock
daa
test
ror
cmp
xchg
loope
retf
test
xor
bound
and
add
or
jo
xor
daa
cmp
fmul
jl
mov
jb
stos
lock
mov
cmp
clc
in
add
or
shl
xor
and
stos
pusha
les
xor
lock
dec
in
inc
mov
sbb
mov
mov
lods
add
enter
ja
fadd
ror
push
cmp
mov
call
cwde
sub
mov
cwde
pop
pop
mov
jmp
(bad)
jge
nop
sbb
(bad)
scas
adc
shr
mov
and
sub
mov
xchg
rol
aam
das
imul
or
les
sub
scas
outs
or
clc
or
mov
sub
mov
mov
mov
jmp
or
jl
pop
push
aad
or
les
dec
int
sub
retf
mov
icebp
nop
lock
push
sub
aad
pop
and
test
je
movs
call
sbb
test
les
hlt
xor
xor
pusha
adc
push
push
mov
or
dec
pop
add
mov
int3
xor
shr
sub
mov
add
dec
cli
pop
adc
mov
mov
or
inc
scas
stos
(bad)
enter
fadd
push
aad
mov
push
ror
dec
es
dec
mov
or
sbb
xchg
repnz
call
adc
mov
sbb
mov
fdiv
loop
pop
mov
xor
mov
mov
xor
popa
mov
sbb
stc
clc
push
cs
rcr
mov
xor
pop
ret
mov
or
pusha
lds
sar
fbstp
mov
pop
pushf
jo
dec
jl
icebp
je
jno
add
sub
xchg
out
call
inc
adc
les
js
push
shl
cs
pusha
xor
sub
or
sbb
xor
fsubr
mov
or
js
sub
mov
add
lods
faddp
sbb
popa
or
pusha
fstp
popa
sub
jl
and
pop
sub
dec
push
rcr
push
ds
and
clc
push
push
adc
ret
call
mov
sbb
jg
loope
aam
adc
enter
leave
xchg
je
cwde
rep
je
dec
add
imul
and
cmps
pusha
clc
daa
jne
aam
(bad)
cmp
mov
pop
popa
xchg
(bad)
dec
or
clc
bound
shl
or
addr16
mov
(bad)
out
inc
mov
adc
jl
pop
mov
xlat
cwde
popf
jmp
aam
mov
and
pop
fistp
gs
add
shr
add
call
leave
fwait
in
dec
aam
jb
int3
adc
sahf
imul
(bad)
test
out
mov
fisttp
fmulp
(bad)
ds
or
enter
and
add
pop
pop
in
mov
adc
movs
and
sub
adc
push
push
mov
jbe
pop
jne
sub
push
xor
pop
mov
sahf
or
aam
in
das
ror
adc
xchg
jb
xor
dec
xchg
out
clc
imul
mov
mov
movs
push
imul
imul
nop
ins
ficomp
ret
fadd
xor
adc
test
add
adc
push
jae
je
imul
mov
movs
mul
call
ja
test
lahf
xor
and
adc
test
inc
ins
mov
fs
enter
mov
xor
(bad)
adc
test
cmp
push
clc
sbb
pusha
mov
(bad)
cmps
mov
(bad)
aam
ins
mov
add
jecxz
in
pop
outs
jmp
adc
sub
xchg
mov
test
push
clc
in
mov
cmp
stos
dec
popf
mov
ins
and
les
xor
into
test
mov
int3
movs
dec
cwde
mov
xor
ret
or
push
or
jmp
loop
retf
enter
stc
add
xchg
jo
sbb
jbe
adc
pop
loop
dec
sbb
sar
bound
add
push
add
dec
fisttp
jg
loopne
and
movs
cmp
mov
dec
xor
aam
ror
mov
shr
int3
out
nop
ins
xor
sub
sub
add
out
lods
cmp
rcl
and
loop
or
ja
or
and
mov
and
and
pop
push
repz
shl
jl
rol
jg
(bad)
enter
and
sub
add
dec
mov
clc
cmp
mov
cvttps2pi
xor
movs
addr16
les
xor
pop
daa
(bad)
xor
dec
retf
js
hlt
fmul
jmp
jmp
out
shl
inc
les
fist
arpl
dec
shr
stc
dec
fwait
hlt
xchg
add
adc
and
rol
js
test
les
sub
ss
in
shl
adc
ss
lods
or
int3
mov
and
xchg
jg
push
mov
std
popa
sbb
xlat
dec
or
cmp
xor
or
enter
sub
jge
jmp
push
mov
cmp
imul
mov
les
inc
pop
or
pop
call
(bad)
rol
out
aam
in
lods
pop
jmp
pop
hlt
adc
sbb
ror
in
cld
sub
fidivr
iret
lods
or
mov
jl
test
or
jg
and
in
int3
cmp
inc
idiv
cmp
mov
mov
add
jp
cmp
inc
sub
scas
add
jl
jmp
in
enter
cwde
movs
jbe
cwde
add
or
clc
mov
je
hlt
xchg
loope
dec
add
mov
rol
inc
in
dec
(bad)
mov
sub
fwait
cmp
adc
in
adc
(bad)
mov
jl
sbb
stos
jle
mov
cmp
je
lds
mov
sbb
or
sub
add
or
in
push
adc
fst
ds
xchg
adc
add
jl
and
sbb
div
or
in
test
or
xor
icebp
or
fld
inc
cwde
stos
test
test
nop
xor
xor
lahf
sub
or
and
pop
adc
sbb
xor
shl
shl
xchg
pop
push
adc
push
or
js
fs
sbb
les
mov
cmp
fwait
mov
push
sub
nop
cs
mov
nop
jg
and
sub
xor
xlat
adc
fimul
adc
pop
fs
xor
or
xor
xchg
sbb
jae
paddsb
or
call
add
inc
mov
xor
inc
and
ror
(bad)
lds
lock
shl
pop
mov
push
nop
xor
aad
movs
xchg
test
or
or
mov
mov
and
push
inc
shl
inc
dec
movs
mov
mov
mov
pop
mov
stc
repz
lods
enter
imul
xor
mov
mov
test
xor
scas
adc
lods
fdiv
adc
pop
dec
cs
add
adc
sbb
cmp
loopne
sbb
std
mov
mov
adc
xor
and
adc
jo
adc
add
shr
pop
push
les
and
adc
dec
add
mov
ror
fidivr
clc
pop
adc
sub
hlt
xor
pop
and
mov
xchg
pop
mov
sbb
shl
into
inc
mov
push
or
rcl
les
cmc
icebp
shr
sar
test
xchg
or
mov
jmp
cmp
shl
xor
fidivr
dec
jno
sbb
scas
pop
outs
shr
dec
test
hlt
mov
adc
es
xor
and
inc
enter
inc
div
(bad)
push
lods
dec
int3
test
repnz
pop
fsub
scas
or
mov
and
lods
movs
es
nop
and
pop
jge
je
cmp
or
add
pushf
cmc
and
imul
mov
or
mov
mov
mov
les
rcr
clc
mov
hlt
repnz
cli
ret
scas
rol
add
mov
or
or
dec
ds
xchg
lock
enter
enter
sbb
rcl
sub
ds
jl
lods
rcl
cwde
cmp
or
(bad)
sbb
rcr
xchg
sbb
xchg
and
js
cmp
clc
sbb
loope
mov
push
add
es
test
cmp
add
add
add
adc
jg
xor
clc
sbb
or
shr
jmp
test
repz
or
ficomp
nop
mov
add
sbb
add
or
xor
nop
out
cwde
inc
dec
or
add
xor
xor
mov
fcom
nop
adc
js
mov
or
sbb
jae
mov
out
or
jl
dec
fsub
cmp
fisttp
mov
jle
inc
shl
mov
push
cmp
cmc
cmp
add
call
pop
sub
aam
mov
mov
mov
or
push
bound
in
xlat
mov
mov
ror
sbb
lods
(bad)
mov
fadd
dec
inc
inc
ret
mov
ret
inc
sub
mov
push
pop
xor
fld
les
call
mov
ins
or
fsubrp
or
test
loop
lods
es
rcr
cmp
add
in
(bad)
xor
pop
shr
or
call
fsub
stos
xor
pop
xchg
mov
dec
inc
mov
sbb
jmp
mov
sub
add
pop
add
mov
mov
clc
out
mov
adc
fist
call
fiadd
nop
mov
shl
loope
test
cmp
and
xor
jmp
pop
dec
push
mov
add
and
and
into
aam
stos
mov
dec
call
movs
or
lahf
movs
enter
nop
mov
icebp
scas
push
test
push
inc
in
jecxz
cmp
ror
mov
(bad)
cmc
shr
xor
fwait
mov
mov
fiadd
adc
cs
jnp
leave
lahf
or
(bad)
stc
rcr
scas
add
enter
xor
outs
cwde
clc
jmp
pop
sub
inc
shr
add
cdq
and
repnz
comiss
push
je
jae
adc
loope
push
dec
les
xor
scas
add
cmps
rcr
xor
das
repz
loopne
pop
jno
clc
es
les
sbb
fadd
pop
lds
jnp
pop
add
adc
adc
dec
inc
ins
pop
ja
pop
mov
mov
push
(bad)
(bad)
mov
xchg
pusha
test
jo
push
dec
leave
push
push
push
rcr
fs
xor
mov
mov
sbb
add
sub
adc
sub
mov
jg
xchg
add
adc
push
adc
fcomp
sub
ja
enter
add
or
or
adc
add
aas
inc
(bad)
sub
or
adc
dec
mov
sub
xor
pop
or
aas
and
(bad)
js
mov
pop
mov
adc
cdq
adc
dec
xor
mov
out
icebp
loop
ds
add
inc
or
rdmsr
icebp
pop
pushf
or
dec
xor
sub
cmp
test
prefetch
out
rcl
ret
mov
lahf
sub
inc
(bad)
push
shr
jo
cmp
dec
jo
sbb
push
sub
add
imul
push
push
jl
dec
dec
push
pop
push
pop
add
pop
mov
shl
sbb
sahf
xor
daa
xchg
sub
inc
sub
loopne
xor
mov
mov
jg
data16
mov
jnp
dec
sbb
les
and
mov
add
xchg
add
mov
aad
pop
scas
test
mov
into
inc
mov
data16
sbb
nop
pop
xor
mov
pop
stc
test
rcr
sar
das
ror
jecxz
xor
xchg
sub
sar
enter
les
jo
sbb
retf
xchg
sbb
dec
fld
xor
test
iret
mov
mov
imul
int
aam
leave
(bad)
loopne
iret
add
out
inc
add
jmp
xchg
repz
test
and
cwde
sub
xchg
push
(bad)
fld
shr
fdivr
jne
shl
repz
sbb
(bad)
in
ins
dec
and
in
pushf
sbb
hlt
push
mov
or
mov
push
mov
loopne
sub
mov
mov
jno
loopne
addr16
retf
(bad)
pop
jecxz
loopne
or
loope
jmp
pop
fs
adc
add
add
test
arpl
push
adc
jno
xor
add
add
sbb
pop
sbb
in
and
aas
cmp
jg
add
add
dec
popa
cmp
mov
push
and
or
ds
mov
clc
inc
dec
push
and
push
aaa
cmp
sub
push
jnp
loope
pop
adc
cmp
sub
push
add
pop
add
add
inc
sub
gs
and
dec
daa
xor
add
and
inc
sub
xor
sbb
inc
or
pop
and
adc
addr16
add
pop
and
push
pusha
lock
or
loopne
mov
les
jg
outs
xlat
inc
fs
push
push
fs
rcl
push
js
or
mov
and
add
xchg
pop
mov
dec
add
lods
push
push
jl
cmp
push
popf
jecxz
mov
or
adc
or
mov
xchg
inc
stos
xchg
cwde
popa
inc
enter
xlat
jo
sbb
xor
or
sub
or
dec
xchg
loopne
dec
(bad)
cmp
or
xchg
inc
test
or
out
sbb
cld
mov
mov
and
add
sbb
dec
sti
xchg
les
or
or
cmp
fwait
(bad)
enter
aam
xor
mov
push
mov
xchg
loopne
dec
mov
adc
sub
jmp
and
and
sbb
aad
sub
mov
xchg
clc
push
int
lahf
loope
jo
xor
rcr
mov
cld
inc
ja
stos
shr
and
test
xchg
int
adc
jecxz
or
or
pop
out
add
aad
adc
push
or
add
retf
and
cmp
loope
pop
stc
popf
sub
in
retf
push
rcr
pop
sbb
outs
loopne
mov
xor
or
test
xchg
xchg
add
cmps
aaa
pushf
push
add
mov
mov
pop
xor
mov
iret
mov
dec
cwde
and
loop
clc
iret
cmp
loope
sar
jo
sub
in
fcom
mov
enter
push
repz
jo
inc
hlt
sub
mov
mov
lahf
pushf
xchg
fwait
mov
add
or
movnti
mov
push
adc
push
mov
push
pushf
add
daa
pop
adc
or
cmp
pop
jae
adc
sbb
sbb
or
push
adc
pop
add
push
popa
push
xor
lds
nop
add
sub
sbb
add
or
xor
sbb
bound
add
add
xchg
cmp
mov
add
sbb
add
cmp
push
push
sbb
not
inc
fadd
sbb
pusha
jl
push
movs
add
push
fld
add
xor
jns
bound
push
xchg
call
arpl
jp
add
and
push
add
push
jnp
jp
jge
mov
rcr
push
pop
pop
adc
cmp
mov
sbb
pop
pop
popa
xor
test
or
sbb
jo
outs
push
ins
pop
inc
test
jl
or
push
sub
inc
jae
jno
outs
dec
dec
loop
dec
and
fcomp
cmp
xor
mov
pop
adc
and
xor
cmp
pushw
jb
pop
push
lea
xor
cmp
xor
ins
pop
sbb
cmp
inc
add
inc
mov
cs
or
or
adc
fdivp
dec
loopne
xchg
sub
xchg
pop
mov
inc
pushf
fstp
test
xchg
xchg
mov
ins
nop
mov
mov
imul
mov
xchg
mov
cmp
jo
stc
or
out
xchg
mov
adc
xor
dec
sar
cmp
imul
cmps
fdiv
pusha
loopne
and
ds
jle
sub
xchg
test
or
and
dec
push
sub
icebp
mov
dec
clc
pushf
fwait
pop
jl
nop
jmp
rcr
or
jecxz
push
push
xchg
pushf
adc
or
mov
mov
retf
xchg
adc
sbb
sbb
pushf
sbb
adc
out
mov
daa
mov
xor
xchg
adc
xsaveopt
mov
add
into
mov
popf
call
mov
(bad)
mov
sub
rcl
les
adc
cmps
mov
push
shl
fyl2x
cmp
not
icebp
loopne
jmp
sub
std
jl
dec
sub
jo
sub
dec
sub
jno
xchg
adc
xchg
ins
scas
mov
cmp
jp
je
mov
dec
outs
je
jle
jmp
pushf
dec
ja
ret
sbb
or
fsub
add
loope
loop
xchg
ror
clc
in
and
je
pushf
adc
dec
retf
mov
test
lods
rcr
xchg
dec
(bad)
adc
(bad)
cwde
sti
or
adc
pop
mov
push
mov
mov
ror
int
(bad)
rcl
movs
and
iret
add
cmps
push
cmp
push
xor
push
pop
or
test
or
jae
cmp
adc
add
sbb
sbb
cmp
daa
sub
sbb
xor
cmp
(bad)
or
sbb
pop
add
int
fwait
add
lahf
jae
and
jmp
jno
jno
jno
fild
mov
add
(bad)
pop
add
das
sub
sub
pusha
inc
rcr
adc
test
(bad)
push
sbb
mov
sbb
sbb
xchg
mov
push
inc
add
or
push
pop
push
and
xor
push
fld
fsubr
sbb
mov
ja
clc
adc
push
mov
add
push
out
add
mov
and
sbb
adc
addr16
fstp
inc
mov
inc
dec
push
mov
and
pop
rcl
enter
add
gs
es
(bad)
lea
mov
sub
retf
retf
outs
inc
ror
inc
push
stos
cmps
loop
ret
and
nop
and
adc
ins
jo
mov
scas
test
inc
cmps
stos
jle
bnd
mov
addr16
add
push
mov
mov
push
ror
sbb
xor
add
pusha
jno
mov
mov
pop
push
add
xchg
xor
jae
pop
pusha
inc
add
or
or
fwait
cwde
les
lods
int3
nop
bound
push
mov
inc
cmp
dec
pop
xchg
call
pop
pusha
push
push
ins
nop
pop
test
add
dec
sbb
test
push
xchg
pop
imul
mov
dec
dec
dec
sbb
ds
mov
jb
jo
aad
and
push
addr16
adc
pushf
lahf
mov
jle
mov
and
int3
enter
xchg
xchg
or
pop
adc
inc
aas
push
popf
int
add
movs
mov
mov
inc
inc
inc
cmp
lea
into
add
adc
inc
inc
cmp
(bad)
or
mov
adc
mov
cmp
mov
jb
leave
ss
ret
and
popf
sahf
xchg
xchg
jns
and
inc
les
iret
sbb
mov
ret
nop
push
es
ds
(bad)
iret
mov
pop
pop
sub
pop
mov
test
xchg
aaa
movs
movs
bound
stos
sahf
lods
push
adc
xchg
dec
mov
mov
mov
or
xchg
mov
or
mov
les
daa
or
jp
mov
loop
push
sub
mov
sub
rcr
adc
in
sbb
xchg
cmp
int3
hlt
out
std
cs
out
lock
std
aam
aam
cmp
iret
sub
xchg
loope
cmp
mov
loopne
mov
movs
in
(bad)
jno
loopne
and
dec
enter
dec
cmps
and
mov
adc
add
add
data16
(bad)
or
jmp
ins
push
or
adc
retf
sub
(bad)
je
outs
leave
adc
jg
stos
add
(bad)
fistp
ds
adc
out
in
leave
(bad)
mov
adc
les
push
pop
adc
(bad)
jnp
in
inc
in
xor
les
inc
(bad)
or
fisub
push
pusha
mov
or
sbb
inc
pop
adc
adc
jb
fist
sbb
add
or
and
xor
in
xchg
ins
inc
mov
pop
and
cmc
fiadd
and
sbb
add
xor
lock
push
sbb
or
mov
dec
sbb
ds
dec
pop
jae
push
mov
sbb
mov
sub
sbb
aad
mov
push
icebp
sbb
inc
pop
add
xor
inc
pop
ret
das
add
test
mov
add
jno
pop
jae
xor
dec
jmp
push
xor
pop
add
and
push
fbld
adc
mov
dec
cs
push
sbb
add
mov
(bad)
mov
fnsave
jnp
pop
sbb
mov
add
adc
shr
lahf
in
add
mov
xor
and
pop
inc
mov
outs
pop
jae
adc
and
mov
sub
sub
inc
push
dec
jae
add
popa
jb
jae
dec
jmp
loope
loopne
nop
bound
pop
outs
add
inc
push
dec
dec
push
xchg
push
xchg
js
(bad)
in
scas
xor
imul
jo
add
xor
sub
push
imul
or
push
aaa
xor
pusha
sbb
outs
and
pop
dec
xchg
xchg
xchg
xchg
mov
mov
jmp
inc
fmulp
add
hlt
sub
and
xchg
mov
test
xor
mov
jmp
pusha
mov
jne
add
inc
pop
dec
jne
mov
add
adc
cdq
imul
adc
mov
out
xor
pop
and
pop
lahf
sub
inc
xchg
jg
push
xor
xchg
loope
xchg
xor
add
push
cwde
mov
add
mov
mov
sub
in
js
mov
sbb
das
cmp
shl
add
push
mov
mov
add
fiadd
mov
sub
and
(bad)
xor
add
dec
cwde
jno
push
mov
test
xchg
add
loope
sbb
or
jl
xor
mov
cmp
mov
dec
mov
imul
and
ja
pusha
add
pop
addr16
gs
in
dec
and
xchg
pop
sbb
xchg
mov
fnstsw
pushf
mov
jb
movs
and
cmp
push
popa
je
scas
loop
jecxz
lahf
jno
push
fbstp
mov
loopne
add
mov
add
pop
ins
jecxz
loop
loopne
scas
pop
lods
repz
inc
add
mov
add
sahf
call
addr16
sub
fist
push
dec
add
inc
sahf
cmps
bound
mov
pop
out
adc
pop
adc
pop
lock
push
sbb
dec
aas
dec
dec
dec
xchg
test
push
pushf
jns
je
enter
jo
inc
int
dec
arpl
cmp
and
add
pop
bound
push
adc
out
push
inc
ret
xchg
mov
cmp
outs
or
pushf
arpl
cmp
movs
push
and
pusha
xor
and
and
add
jecxz
lods
lahf
and
and
xchg
pop
mov
push
pusha
pusha
add
movs
stos
add
in
mov
leave
pusha
popf
aad
xchg
adc
lods
fisttp
or
dec
mov
cmps
jecxz
add
or
pushf
jle
mov
inc
ror
inc
adc
mov
in
adc
mov
pop
mov
pop
jmp
cmovo
dec
add
call
adc
mov
ror
and
inc
or
pop
add
mov
nop
mov
dec
jle
out
out
aam
cmp
shl
iret
add
fbld
fiadd
test
jg
pop
in
ret
fst
shl
xor
mov
mov
lods
sar
mov
test
mov
xor
xor
mov
or
jecxz
ret
sbb
fstp
push
pop
adc
pop
cwde
arpl
out
lds
xchg
adc
(bad)
jmp
out
shl
add
fistp
rcr
mov
add
add
imul
retf
invd
enter
and
pushf
add
dec
or
xor
inc
aas
enter
push
cmp
push
pop
sub
or
movups
pop
jl
jb
or
mov
jg
call
and
dec
add
pop
pushf
or
icebp
invd
fs
mov
aas
aaa
push
adc
outs
rcl
add
cmp
cmp
add
push
dec
out
pop
xor
cs
push
push
inc
sub
rcl
push
arpl
gs
sub
inc
sti
mov
sbb
push
imul
iret
pop
push
cmps
inc
popa
jb
stc
dec
std
ins
(bad)
jmp
add
mov
lahf
or
jb
lahf
ds
in
fidiv
icebp
div
adc
popa
outs
cmp
cmp
or
inc
sub
jp
ficom
push
and
shl
jae
ror
cmp
jb
mov
cmps
out
call
jne
jo
xor
test
mov
mov
pop
cmovl
mov
inc
sub
jmp
pop
aad
imul
push
sbb
sbb
ins
enter
jns
cmp
push
pop
mov
fiadd
and
movs
cmps
retf
push
mov
dec
xor
outs
mov
(bad)
fsubrp
outs
xor
(bad)
inc
loopne
test
sub
bound
into
xor
pop
and
sar
rcl
add
jae
jnp
mov
inc
imul
test
sub
fild
push
or
push
jb
or
inc
(bad)
push
dec
push
push
shl
and
jbe
imul
imul
mov
ss
mov
inc
push
jbe
dec
push
inc
sbb
rcr
adc
cmp
sbb
bnd
lock
or
jge
xchg
mov
push
pop
and
and
out
aad
ja
repnz
and
cs
sbb
adc
ss
jne
pushf
xchg
jb
movs
pop
push
xlat
and
daa
adc
adc
adc
ins
fisubr
push
xchg
pop
mov
mov
push
push
push
or
push
fs
or
inc
push
mov
mov
and
push
push
jns
aad
cpuid
inc
mov
sar
icebp
call
inc
xor
push
dec
pshufhw
inc
push
fdivr
nop
mul
sbb
xor
outs
jns
outs
nop
js
sbb
push
jns
sbb
pop
add
sbb
push
inc
jg
(bad)
in
ds
sub
or
dec
sbb
fisub
loopne
aad
bound
jmp
and
outs
pop
dec
xchg
and
bound
push
push
xchg
sbb
xor
adc
(bad)
test
inc
xchg
mov
push
jmp
ss
dec
cli
loopne
adc
retf
fisubr
cmp
sub
jb
aam
xchg
adc
jb
push
xchg
jp
call
ins
(bad)
mov
xchg
mov
cmp
dec
rcl
pop
sub
or
inc
push
outs
pop
aad
lock
outs
jo
cld
mov
test
push
xchg
jno
pop
and
cwde
mov
xor
sbb
mov
xor
mov
movs
fdiv
gs
or
mov
jmp
arpl
mov
les
jnp
sub
xchg
push
mov
inc
fs
sbb
push
outs
sar
push
outs
(bad)
inc
(bad)
push
push
arpl
fimul
adc
jo
dec
or
dec
push
sbb
or
and
and
mov
movs
jo
icebp
(bad)
fs
add
adc
loop
inc
mov
leave
or
mov
imul
xchg
xor
sub
xchg
mov
xchg
mov
jae
sub
push
cs
popa
jmp
and
cmp
pop
mov
stos
adc
pop
call
dec
push
mov
push
mov
mov
ret
stc
arpl
and
dec
loopne
dec
ror
inc
loopne
cdq
mov
imul
mov
sub
lds
cmp
mov
or
cmp
(bad)
inc
jmp
jno
mov
int
push
ja
jns
add
les
mov
movs
mov
mov
lea
rcr
bnd
add
add
add
add
add
and
add
pusha
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
js
add
add
add
add
add
add
add
nop
add
add
add
add
and
and
add
add
test
add
add
add
sub
sub
add
and
add
inc
add
add
add
add
add
add
adc
sbb
adc
mov
add
add
add
add
add
adc
lahf
add
add
adc
xchg
push
or
jbe
add
add
add
push
add
or
add
add
add
add
add
add
add
add
and
add
add
add
add
sbb
jb
sbb
imul
add
add
add
adc
push
loop
xor
add
or
sbb
push
out
add
push
add
add
sub
imul
add
add
add
add
adc
or
and
jmp
dec
out
dec
das
retf
add
push
pushf
add
add
add
sbb
and
sbb
mov
push
sbb
rcr
cmp
cmp
adc
sbb
sbb
imul
xor
mov
sbb
ret
sbb
mov
adc
push
dec
inc
sbb
sbb
jmp
mov
and
dec
jmp
call
lods
jae
and
cmp
add
add
add
or
sbb
xor
jmp
mov
push
call
cmp
sbb
xchg
sbb
mov
sbb
outs
jmp
push
jmp
mov
jmp
lods
dec
jmp
test
notrack
cdq
cmp
xchg
jmp
xchg
push
jmp
leave
jp
adc
inc
add
pop
add
add
pop
aaa
out
xor
(bad)
jmp
jge
jmp
pushf
pop
jmp
mov
push
jmp
xchg
pop
jmp
jb
jmp
je
jmp
call
sub
lods
push
jmp
push
jmp
stos
push
jmp
stos
dec
jmp
test
inc
jmp
inc
jmp
xchg
push
call
jae
inc
add
add
add
add
js
call
inc
cmp
ret
shr
mov
ins
jmp
mov
jmp
mov
jmp
mov
arpl
cs
arpl
sub
mov
jmp
pop
jmp
pop
jmp
push
jmp
push
jmp
dec
jmp
mov
cmp
or
adc
add
add
add
or
add
dec
xor
clc
push
retf
inc
rol
cs
jb
cs
jo
cs
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
pop
jmp
stos
push
jmp
movs
dec
jmp
movs
dec
jmp
cwde
inc
call
and
add
add
add
add
sbb
and
jmp
mov
dec
mov
cmp
js
das
mov
ja
das
mov
jne
cs
jno
cs
jmp
mov
imul
mov
jmp
fwait
push
jmp
xchg
pop
jmp
xchg
pop
jmp
xchg
pop
call
or
dec
xor
add
xstore-rng
cmps
add
add
add
add
lea
sub
mov
inc
mov
das
mov
jle
das
mov
jge
das
mov
jp
das
mov
jbe
das
mov
push
sub
jns
call
dec
lods
call
inc
leave
jmp
popa
(bad)
cdq
test
push
test
das
into
test
push
inc
sub
add
add
or
retf
and
test
push
mov
test
xor
cmp
mov
cmp
mov
cmp
mov
popa
call
inc
mov
or
sti
call
icebp
push
mov
inc
mov
inc
les
(bad)
ds
mov
xor
push
pushf
add
add
inc
cmp
mov
sar
fdivr
call
popf
jmp
mov
das
ret
xor
mov
xor
mov
xor
mov
xor
xchg
xor
xchg
xor
xchg
das
sar
xchg
call
xor
(bad)
(bad)
cmp
lods
jmp
movs
call
mov
call
popf
dec
popf
push
lahf
outs
inc
add
push
add
sbb
bound
xchg
out
int
sbb
push
mov
dec
int3
sahf
jmp
mov
xor
xchg
push
les
push
ret
mov
xor
(bad)
push
ret
xor
mov
sub
dec
mov
sbb
(bad)
call
enter
mov
pop
fistp
call
mov
popa
fisubr
call
test
and
out
add
add
add
add
ds
pop
(bad)
fwait
icebp
aam
xchg
sar
faddp
dec
test
sub
xchg
push
(bad)
xchg
push
(bad)
xchg
push
(bad)
xchg
push
(bad)
xchg
push
lds
push
lds
call
xor
fcos
addr16
ffree
jmp
ret
fdivr
jmp
mov
push
iret
pushf
dec
add
sbb
pusha
push
rcr
int
ins
iret
mov
push
into
cmps
push
retf
sahf
push
retf
xor
fwait
push
leave
call
int3
cdq
jmp
mov
stos
inc
jmp
iret
jmp
jmp
jmp
retf
jmp
(bad)
jmp
sar
fidivr
push
and
add
dec
add
add
sbb
in
fdivr
(bad)
jecxz
push
lods
push
jmp
dec
push
mov
lahf
push
int
push
retf
mov
push
retf
xor
lahf
jmp
mov
push
jbe
call
in
jmp
jmp
fcos
imul
sar
imul
jmp
retf
repnz
dec
rcr
add
jns
ja
movs
call
mov
jmp
popf
sub
das
mov
mov
xor
cmps
push
into
movs
push
int
push
shl
inc
fwait
sar
fldz
jmp
loope
ins
loop
jmp
(bad)
outs
loope
push
aad
jnp
loopne
pop
(bad)
mov
rol
add
and
add
xor
jne
out
pop
aad
call
push
mov
pushf
push
into
test
push
test
jmp
mov
dec
mov
push
jmp
in
(bad)
jp
in
jle
in
call
call
xor
rol
add
add
or
pop
ror
jmp
fcos
sub
enter
(bad)
jmp
ffree
jmp
mov
push
shr
inc
(bad)
jge
cli
(bad)
jns
repnz
jge
hlt
inc
loopne
inc
popf
dec
pop
sbb
add
add
add
add
adc
inc
stc
dec
shl
call
(bad)
jmp
dec
repz
dec
hlt
in
call
repnz
fcmovnb
push
iret
test
xor
out
inc
(bad)
in
pop
mov
push
lods
xchg
call
add
push
add
add
add
es
or
(bad)
test
inc
into
inc
lock
adc
hlt
dec
repz
dec
hlt
out
dec
div
dec
repz
es
jmp
mov
inc
mov
push
movs
xchg
jmp
mov
jmp
xchg
dec
add
pop
add
add
sub
dec
pop
repnz
add
icebp
inc
add
dec
arpl
call
clc
icebp
call
hlt
out
call
hlt
in
dec
cmc
out
jmp
ffree
jmp
rcr
in
jmp
nop
jb
add
add
add
pop
or
mov
cmp
dec
pop
(bad)
inc
add
inc
add
inc
push
mov
call
(bad)
stc
dec
cmc
out
dec
hlt
out
dec
hlt
in
dec
out
loop
xor
mov
push
shr
les
add
or
add
add
pop
das
call
(bad)
dec
push
(bad)
inc
add
inc
add
inc
add
dec
xchg
scas
dec
(bad)
cli
inc
(bad)
(bad)
dec
std
cli
inc
hlt
out
jmp
ffree
push
shl
jmp
xchg
js
add
add
add
add
data16
jmp
adc
cld
inc
add
inc
add
inc
add
call
(bad)
(bad)
(bad)
jge
idiv
xchg
rcl
inc
cld
stc
inc
div
jmp
sar
cmp
mov
dec
add
or
add
push
xor
dec
(bad)
dec
sti
inc
add
inc
add
inc
push
mov
(bad)
jg
(bad)
call
add
push
push
pop
inc
(bad)
call
xlat
(bad)
cmp
retf
test
add
add
add
pop
or
sbb
(bad)
(bad)
inc
add
inc
add
push
daa
test
mov
outs
inc
call
call
sbb
dec
add
jmp
inc
(bad)
call
loope
xor
and
scas
add
add
sbb
ss
inc
add
(bad)
cmp
xchg
iret
shl
in
(bad)
sti
(bad)
push
jmp
call
arpl
imul
dec
dec
jmp
fwait
jmp
repz
push
ins
popa
repz
add
add
add
dec
cmp
stos
cmp
fild
(bad)
in
fld
(bad)
stc
fnstsw
fnstsw
mov
jp
scas
push
enter
sti
call
(bad)
sti
jmp
mov
or
ds
xchg
jb
(bad)
inc
(bad)
(bad)
repnz
push
loope
push
fist
push
(bad)
je
in
fdiv
cld
call
dec
loopne
call
cmp
rol
add
sbb
add
or
mov
stc
cmc
mov
(bad)
push
mov
(bad)
jmp
(bad)
jmp
nop
(bad)
call
cld
jmp
or
(bad)
jmp
int
call
aas
cmp
add
add
add
add
aas
dec
cmp
aam
jmp
fbld
jmp
mov
(bad)
ret
jne
icebp
or
push
pushf
add
add
add
add
bndstx
sbb
xor
xchg
add
or
add
sub
add
add
inc
or
clc
add
pop
clc
add
add
add
add
add
add
add
add
add
pop
rol
pop
rol
pop
rol
jo
add
jo
add
pop
add
aas
rol
aas
rol
jg
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jmp
add
push
add
clc
add
(bad)
cld
add
jmp
push
dec
bound
add
add
