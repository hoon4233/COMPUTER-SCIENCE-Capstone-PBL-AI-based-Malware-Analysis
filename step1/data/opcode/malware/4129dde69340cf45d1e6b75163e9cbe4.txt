xchg
jnp
iret
xchg
xor
call
out
xor
in
mov
das
call
dec
iret
loopne
retf
push
mov
push
sub
push
pusha
push
pop
imul
daa
aad
sub
mov
pop
adc
pushf
enter
pop
mov
pop
cmp
or
jmp
call
repnz
push
adc
or
aam
aas
xchg
outs
stos
not
(bad)
cmp
pusha
and
je
adc
ja
cmps
les
pop
push
jle
pushf
scas
sbb
es
mov
xchg
test
pop
idiv
mov
mov
jns
xlat
cs
fisub
pop
hlt
es
pop
gs
mov
xor
loope
push
(bad)
outs
cli
retf
icebp
sar
xor
ficom
push
stos
jns
or
mov
test
mov
mov
nop
dec
push
scas
iret
xor
fistp
es
ja
mov
fist
add
mov
shl
jns
loopne
xchg
mov
test
pop
inc
pop
(bad)
push
call
pusha
into
dec
and
add
mov
pop
inc
test
ins
mov
jo
push
jae
xlat
and
jmp
mov
xchg
pop
div
mov
call
mov
push
mov
sbb
imul
or
aaa
inc
(bad)
movs
clc
sub
sar
popa
cmp
out
xor
push
clc
leave
imul
jae
mov
push
xor
add
mov
dec
xchg
xor
adc
jmp
out
jge
shl
repz
and
aam
and
jns
jg
test
xor
add
inc
jl
jne
xchg
xchg
inc
mov
aas
xor
jns
add
adc
das
xor
mov
pop
pop
xor
jp
add
mov
ds
xor
add
mov
jnp
inc
dec
xor
into
sub
xor
or
inc
mov
fsubr
inc
fld
cld
jns
fcomi
sbb
stos
lds
adc
xor
sub
dec
(bad)
push
pop
jnp
push
iret
popa
cmp
(bad)
fstp
cmps
lea
fst
push
pushf
fdivr
js
and
aam
leave
fwait
dec
and
pop
fcomp
mov
dec
mov
fwait
leavew
pusha
test
push
(bad)
mov
cs
pop
mov
scas
pop
jecxz
inc
xor
mov
ret
dec
pop
fwait
push
sbb
jb
jecxz
(bad)
outs
les
test
mov
mov
imul
arpl
xchg
sub
ja
ret
jae
sbb
test
mov
fidiv
lods
jmp
imul
int
or
(bad)
repz
add
jp
ins
mov
lds
aam
mov
jle
xor
scas
js
test
xor
daa
mov
and
je
adc
fisubr
pop
mov
es
add
arpl
or
jl
xchg
je
lock
clc
ss
adc
sbb
aas
lods
mov
add
mov
pop
jmp
or
jmp
fs
push
dec
nop
ret
fcom
addr16
push
add
jmp
cmp
gs
bound
mov
jns
aaa
push
sub
rcr
leave
inc
or
mov
or
jg
jg
scas
mov
iret
(bad)
jae
scas
lods
(bad)
scas
mov
leave
add
mov
inc
mov
add
stc
add
push
push
mov
shr
ret
jl
sub
int3
mov
out
je
movs
xor
nop
mov
pop
mov
mov
scas
sub
xchg
mov
(bad)
enter
not
xor
icebp
mov
xchg
mov
daa
(bad)
and
mul
ins
stos
addr16
or
sub
outs
cs
pop
mov
push
movs
pop
mov
js
lods
cmps
or
xor
mov
adc
mov
shr
into
lods
and
xchg
adc
cmc
lods
pop
mov
pop
adc
fbld
out
sbb
inc
aaa
mov
cmc
and
outs
cmps
cmc
sub
retf
(bad)
test
cdq
xchg
je
pop
sbb
sub
mov
jle
lock
push
cmp
xor
add
fcmove
sbb
sub
dec
jle
lods
(bad)
jmp
ss
bound
movs
jns
add
mov
js
imul
stc
neg
xor
fs
mov
push
pop
jmp
enter
stc
pop
and
shr
xchg
ror
xor
xor
mov
pop
push
inc
je
shl
daa
jmp
test
mov
dec
scas
out
sub
popa
inc
sub
sbb
mov
imul
jle
mov
das
jb
mov
sbb
xor
push
std
and
pop
nop
add
fs
mul
outs
xchg
push
or
shl
mov
(bad)
gs
shl
(bad)
retf
mov
popa
jg
loop
jnp
mov
dec
daa
cwde
imul
mov
push
adc
and
mov
(bad)
mov
xchg
xchg
movs
cmp
test
jle
inc
jnp
(bad)
xor
imul
pop
outs
(bad)
sti
mov
sub
outs
aas
adc
loop
clc
sub
push
ror
adc
mov
add
pop
jbe
jne
dec
jmp
sbb
sbb
inc
and
lds
(bad)
cmc
in
sbb
shr
mov
push
xor
gs
ret
in
ret
scas
add
mov
loope
lock
repz
in
mov
in
jns
ret
repnz
mul
cmc
addr16
repnz
adc
xchg
adc
(bad)
out
sub
inc
sub
cmp
xchg
fisubr
test
mov
movs
(bad)
jp
add
cld
add
jns
adc
daa
clc
sbb
pusha
jns
sub
es
push
cld
inc
mov
xchg
mov
push
push
fist
lahf
leave
test
adc
jp
dec
inc
mov
or
mov
mov
adc
hlt
add
or
lock
dec
push
inc
push
cmp
jb
or
mov
mov
dec
nop
add
test
ret
stos
mov
sub
sbb
add
xor
or
mov
mov
not
scas
daa
xchg
aas
scas
rcr
imul
test
xchg
push
xchg
out
or
xor
xchg
call
fstp
inc
sbb
call
sahf
in
aas
and
es
sbb
(bad)
pop
mov
mov
shl
lods
(bad)
das
popa
push
cli
xchg
repz
and
or
pop
xchg
movs
nop
mov
jl
mov
cmp
xchg
div
sysenter
ds
es
and
or
nop
popf
jno
repnz
(bad)
out
mov
nop
jmp
(bad)
pop
sahf
out
or
and
aaa
jb
cmc
pop
adc
and
aam
xchg
dec
(bad)
aad
mov
push
stos
mov
sti
add
jle
aad
nop
retf
cs
les
cmps
sbb
(bad)
mov
aad
jne
add
xchg
ins
inc
retf
sub
inc
sti
jnp
mov
retf
xchg
mov
iret
and
sbb
test
in
fild
fist
cmps
dec
sub
fnstcw
addr16
jns
xchg
sub
paddq
jo
dec
stos
adc
add
cld
retf
and
idiv
out
scas
cmps
mov
div
in
mov
mov
jmp
movs
out
scas
jmp
test
adc
jg
mov
adc
(bad)
mov
and
fcom
xchg
aas
lods
jmp
push
dec
push
mov
popa
mov
mov
mov
or
or
xchg
inc
aas
inc
fiadd
cs
push
loope
sbb
jae
lods
shr
mov
jl
test
xchg
pop
data16
add
call
inc
fwait
adc
mov
stos
hlt
ror
das
into
inc
out
and
xor
or
push
mov
(bad)
mov
xchg
dec
movs
dec
dec
pop
rcr
and
push
sbb
ins
stos
dec
out
sub
and
fnsave
jmp
jg
adc
xchg
div
div
push
je
cmp
xchg
inc
shl
mov
inc
sub
leave
daa
inc
add
pop
pop
push
pop
jo
cs
sub
sbb
pop
ins
mov
xchg
icebp
fstp
and
jo
into
mov
loope
stos
test
jo
addr16
movs
cld
add
inc
lods
aaa
sub
stos
test
outs
pop
jne
enter
shr
inc
shr
(bad)
mov
data16
test
ja
xor
fsubr
mov
fs
add
dec
or
loopne
dec
aas
shr
inc
push
mov
xchg
sahf
or
daa
call
outs
fwait
adc
test
movs
add
outs
push
jne
lahf
into
shl
jl
add
or
fidiv
pop
fidivr
shr
jg
push
dec
sbb
(bad)
jp
dec
xor
ins
lods
int3
xor
dec
loope
lahf
dec
fcmovnbe
test
stos
(bad)
xor
ja
lahf
and
loope
mov
mov
or
sbb
dec
cmps
adc
shl
int3
push
mov
and
sub
jb
push
shr
add
mov
sbb
push
push
cmp
pop
or
sub
jno
sub
sub
les
popa
pop
push
inc
cli
add
pop
pop
sbb
add
retf
jecxz
out
div
fstp
mov
stos
daa
jnp
leave
push
mov
icebp
mov
adc
pop
or
les
pusha
push
xor
xchg
mov
add
clc
gs
cmp
lds
pop
idiv
imul
adc
stos
leave
out
ds
not
and
add
adc
loop
fs
mov
or
pop
dec
pop
test
scas
std
pop
hlt
jg
ror
sbb
mul
es
xor
stos
cwde
adc
movs
fdiv
daa
dec
add
dec
ss
inc
mov
sar
mov
adc
scas
test
push
ficomp
jns
adc
and
and
cmp
sti
and
jno
popf
in
xor
mov
scas
movs
jno
sbb
adc
mov
les
aaa
dec
or
dec
dec
rcl
push
mov
pop
test
xchg
push
xchg
jg
lods
aaa
(bad)
mov
push
ja
dec
jb
pusha
cmc
dec
pop
sub
aaa
data16
jnp
push
pop
jne
aam
push
sbb
stos
cmp
xor
test
scas
mov
mov
sbb
mov
jns
and
xor
pop
xchg
lods
sub
jge
pop
add
std
mul
mov
xor
aad
fimul
push
hlt
lods
scas
ss
aaa
push
outs
inc
fld
out
pop
addr16
or
xor
add
int3
sbb
nop
shl
dec
imul
lds
dec
xchg
addr16
pop
xchg
add
jo
push
repnz
bswap
es
pusha
mov
popf
mov
hlt
in
icebp
adc
pusha
or
mov
fbld
xchg
xchg
dec
and
pop
ret
xchg
xchg
je
dec
xchg
(bad)
into
add
pop
and
cmp
repz
aad
stos
fwait
les
push
and
xchg
and
fs
mov
or
stos
in
cmpps
mov
or
mov
aaa
(bad)
jmp
mov
pusha
xchg
adc
adc
stos
xor
test
rol
dec
xchg
stos
js
rcl
inc
ret
mov
data16
pop
jno
aas
call
lods
stos
popa
push
inc
inc
mov
mov
(bad)
mov
test
jmp
mov
mul
push
adc
xchg
retf
test
popf
mov
and
cmps
add
jmp
aam
cmps
bound
inc
xchg
fwait
out
xlat
repz
sub
cs
retf
jle
push
rol
fwait
cmp
mov
jbe
mov
lock
dec
push
xchg
test
test
push
mov
das
shl
fdivr
test
ins
fstp
adc
xchg
pop
cmp
mov
push
sbb
mov
mov
adc
repz
stos
mov
jb
stos
ret
push
outs
fdiv
or
xor
(bad)
sbb
cld
test
inc
daa
or
mov
es
int
inc
aas
outs
pushf
cmc
sub
push
pop
ds
add
addr16
jp
hlt
xchg
inc
repnz
addr16
adc
jae
fs
push
xchg
cmps
dec
neg
lds
fwait
ret
les
fbstp
jns
daa
xchg
bswap
cmp
(bad)
xor
mov
xchg
lods
adc
in
mov
push
mov
dec
(bad)
sub
dec
xchg
je
xchg
(bad)
pop
adc
out
jp
add
std
idiv
pop
pop
(bad)
icebp
in
cmp
add
(bad)
fld
mov
xchg
test
enter
jecxz
clc
push
and
fistp
jbe
adc
pop
cmp
jne
jae
and
cmp
mov
pop
xchg
xchg
fidiv
stc
nop
repz
fist
mov
pmaxsw
sahf
dec
mov
adc
data16
popa
dec
stc
test
loope
sbb
lods
inc
je
pop
imul
push
test
ins
repnz
add
cmc
clc
inc
sbb
inc
mov
mov
call
pusha
movs
data16
and
retf
mov
jo
push
sub
xchg
push
push
xchg
es
out
jmp
sbb
mov
or
sbb
adc
mov
pushf
into
inc
mov
sbb
add
test
mov
dec
loopne
pop
retf
in
jecxz
out
dec
fwait
int3
lea
in
data16
adc
adc
adc
mov
cdq
dec
and
retf
push
pop
(bad)
jne
movsx
push
mov
outs
stos
call
add
lods
stos
mov
fsub
add
outs
and
or
add
xchg
or
lds
adc
mov
daa
std
xor
inc
sahf
aas
in
lea
in
inc
mov
inc
push
cmp
test
test
and
test
push
mov
add
loope
add
sar
(bad)
iret
ja
pop
xor
(bad)
iret
mov
sbb
inc
lods
mov
int3
and
lods
xor
aaa
scas
(bad)
out
iret
xchg
outs
cmp
jle
push
push
dec
retf
lods
adc
adc
das
in
popa
(bad)
inc
push
jmp
sub
out
stos
sub
repz
ret
out
add
daa
lock
cmps
push
xor
add
or
inc
and
mov
stos
shr
sbb
jp
bound
in
cmp
pop
and
xchg
enter
in
mov
push
outs
loopne
ins
xor
jae
sbb
stos
ret
mov
mov
das
xchg
inc
jb
mov
out
xchg
retf
popf
adc
inc
(bad)
mov
ja
push
aas
sub
jmp
jns
adc
mov
aad
add
ins
sbb
scas
fsubr
in
fmul
repnz
mov
push
ja
ficom
add
ins
ja
int3
jnp
push
lahf
pop
adc
jmp
mul
sub
xchg
outs
xor
iret
or
and
pop
xchg
(bad)
xor
fadd
hlt
lea
(bad)
dec
xor
std
push
jmp
dec
mov
mov
aas
imul
fucom
push
cmps
cmps
push
repnz
cmps
mov
repz
lahf
imul
lea
aas
out
push
out
jle
mov
mov
test
xchg
inc
or
inc
pop
jecxz
adc
and
imul
pop
neg
nop
aam
mov
jns
sub
scas
ret
push
jmp
out
inc
jg
sbb
pusha
or
inc
mov
mov
idiv
shl
pop
test
enter
dec
int
les
test
out
dec
sub
pusha
inc
scas
movs
jle
cmp
xchg
loop
std
loope
add
gs
(bad)
popf
jl
jae
loopne
pop
fstp
cs
imul
sbb
adc
mov
mov
jnp
dec
and
xchg
cdq
ret
pop
mov
pop
or
imul
test
test
movs
mov
add
xchg
or
adc
jo
hlt
(bad)
out
add
mov
pop
xor
xchg
pop
aas
mov
sbb
test
test
cmps
adc
imul
shr
push
push
dec
repnz
mov
jmp
adc
jecxz
in
mov
daa
repnz
mov
push
psrlw
out
or
xchg
jb
call
jmp
fstp
jl
mov
push
aam
jmp
or
jns
xor
sbb
(bad)
int3
pop
pop
dec
(bad)
xchg
das
movs
dec
icebp
add
cdq
mov
sub
(bad)
fstp
mov
sbb
sbb
sti
pop
aas
push
inc
ins
dec
or
pop
nop
enter
sub
inc
call
push
cmp
jg
lahf
xchg
in
xchg
jns
fmul
imul
(bad)
push
push
mov
pop
sahf
pop
loope
or
arpl
lock
mov
sub
retf
push
in
add
mov
or
jl
imul
movs
cwde
sbb
fisttp
stc
mov
push
es
inc
dec
lods
and
retf
cld
jg
int3
(bad)
pop
cli
mov
mov
inc
dec
or
push
mov
and
(bad)
mov
pop
das
scas
mov
bound
sbb
xchg
cmp
movs
jnp
nop
or
les
jl
push
mov
aas
xchg
xor
jnp
cmps
adc
push
and
rol
mov
out
stos
jo
and
push
enter
loop
dec
(bad)
cmp
loope
push
jle
fild
iret
jle
mov
je
stos
sti
ret
test
cmps
outs
daa
pop
dec
pop
in
sub
test
shr
add
mov
jmp
ficom
mov
ret
adc
xor
ret
out
(bad)
mov
das
jo
lods
and
movs
xor
push
mov
push
adc
mov
or
jmp
fisub
adc
sbb
push
inc
fsubr
mov
scas
scas
fsubr
in
inc
out
xor
jo
or
aaa
xor
xchg
test
add
mov
or
inc
cdq
pop
jnp
xor
hlt
ret
test
sbb
mov
retf
les
hlt
das
sti
cmps
retf
mov
add
push
adc
or
inc
ss
or
enter
daa
scas
sub
xor
jle
and
loope
xor
xchg
imul
daa
movs
jae
stos
mov
mov
jbe
shr
jnp
movs
cs
mov
and
mov
test
es
xchg
gs
xlat
mov
or
lock
jge
or
push
mov
inc
push
push
mov
mov
fwait
out
mov
imul
xchg
jmp
pop
imul
aas
dec
repnz
xlat
aaa
xor
push
dec
and
ror
jg
cmps
or
pop
xor
mov
push
cmp
push
sbb
push
inc
adc
sbb
xor
pop
mov
dec
adc
ss
sbb
(bad)
pop
sub
pop
ja
xchg
xor
sbb
mov
call
je
adc
cs
or
test
xor
movs
in
jg
cwde
test
xchg
mov
test
or
inc
mov
shl
jp
adc
frstor
sar
mov
cmc
bound
xchg
cmp
stos
sti
pop
cmp
(bad)
repnz
sbb
xor
xor
(bad)
mov
and
not
mov
mov
enter
cmp
pop
mov
push
pop
ficomp
cmp
cmps
inc
lods
sahf
divps
hlt
mov
ror
dec
inc
push
aad
rol
out
push
cdq
sub
inc
fist
sub
retf
cmp
ret
ins
enter
pop
sub
stc
repz
mov
mov
cdq
mov
xor
int3
iret
movs
jmp
pop
dec
shl
dec
or
jae
inc
push
add
push
add
push
adc
xchg
lahf
jnp
lahf
sti
call
dec
adc
shl
jp
xor
orps
ret
arpl
(bad)
adc
fld
sub
xor
shl
xor
sub
pop
test
mov
adc
lahf
xor
(bad)
fadd
sub
out
nop
ja
fmul
sbb
jno
in
dec
xchg
dec
test
push
clc
cld
fiadd
or
xor
mov
mov
stos
outs
or
arpl
push
rcr
movs
lods
call
pop
add
ret
loope
mov
and
push
addr16
dec
dec
outs
sti
adc
xor
scas
cmp
(bad)
jmp
pusha
push
xchg
ret
jo
jg
ret
or
out
ja
outs
adc
mov
out
adc
sar
push
jg
lea
xlat
or
shr
fistp
pop
sahf
int
fwait
and
push
test
ret
ret
int3
popa
idiv
or
sub
(bad)
outs
push
pop
dec
(bad)
sub
test
out
andnps
(bad)
pop
das
out
xor
fdiv
inc
popa
cmp
mov
or
(bad)
mov
aam
and
mov
pop
push
scas
stos
retf
inc
aaa
pop
loope
cs
dec
inc
mov
fmul
pop
fld
and
add
xor
loopne
icebp
sub
sti
adc
sbb
fwait
dec
cmp
sbb
jae
add
sahf
aam
jo
cmps
(bad)
mov
mov
mov
cs
cmps
dec
add
mov
mov
pop
stos
jo
jg
fidiv
fdivp
xor
stos
push
outs
mov
adc
lahf
bound
fisubr
cli
repz
sub
inc
nop
enter
clc
sub
dec
ret
or
pop
push
arpl
xchg
mov
mov
rcl
fs
outs
pop
inc
mov
push
pop
mov
ficomp
and
enter
addr16
scas
test
adc
mov
sub
add
lods
jb
add
xchg
icebp
inc
int
xchg
dec
mov
push
xor
jg
xor
stos
fldcw
repnz
pop
mov
push
in
imul
cdq
icebp
dec
test
xchg
xchg
out
adc
cdq
or
retf
popf
es
mov
outs
lahf
dec
add
ret
mov
lahf
mov
sub
lods
(bad)
jo
addr16
nop
mov
dec
jmp
gs
jl
xor
lods
shl
jo
push
imul
fsub
fdiv
fnstsw
adc
iret
aaa
shl
int
inc
jne
push
sub
test
nop
stos
cs
pop
mov
push
icebp
loopne
aam
jecxz
jl
jae
xchg
(bad)
dec
and
jo
mov
dec
add
mov
add
adc
aas
adc
add
adc
mov
fisubr
rcr
mov
mov
mov
jl
push
ret
sbb
js
test
push
lahf
test
mov
in
or
push
mov
loop
(bad)
(bad)
mov
out
cs
aaa
and
jae
add
push
xor
cmp
xchg
dec
cmp
int
daa
outs
(bad)
aas
dec
sbb
mov
retf
jge
call
clc
loop
call
adc
jmp
call
aad
aaa
sub
xchg
jnp
push
stos
dec
mov
ins
daa
rcr
pop
cmps
add
fwait
shl
call
inc
pop
cs
dec
mov
jnp
xor
ja
sbb
mov
arpl
pushw
pusha
(bad)
stc
or
push
mov
outs
add
adc
and
sub
push
cdq
test
repz
fadd
lods
fdiv
dec
ss
jno
sub
in
or
cmp
or
stos
xchg
push
add
sub
dec
std
fistp
test
jae
xchg
mov
add
in
loop
cmp
mov
not
push
fisubr
pop
mov
scas
sub
or
jnp
or
jnp
std
retf
push
je
movs
add
cmp
out
mov
repz
lods
ja
mov
nop
mov
aaa
xchg
sar
ror
and
or
lea
retf
pop
aaa
or
div
sub
mov
jno
es
fs
inc
pop
imul
outs
and
stc
mov
mov
out
pop
mov
mov
fst
out
ss
ds
push
sub
adc
add
push
inc
mov
lea
mov
aaa
lods
mov
pop
outs
movs
mov
sub
lahf
out
pop
in
mov
bound
mov
and
mov
(bad)
and
scas
or
jmp
fwait
shl
cld
xchg
xchg
test
xor
pop
bound
mov
dec
mov
adc
(bad)
or
pushf
cmp
push
mov
jno
sub
adc
mov
lods
fistp
addr16
adc
movs
cmp
mov
xchg
repz
xlat
mov
mov
aaa
dec
in
fs
outs
imul
mov
lock
ss
mov
repnz
fild
pop
xchg
(bad)
jl
and
mov
sbb
mov
mov
jnp
cwde
sbb
aas
movs
cmps
fild
and
xor
xchg
into
and
retf
sahf
or
shr
pop
push
push
repz
out
jmp
add
sub
jmp
cli
outs
jne
div
addr16
adc
mov
(bad)
jo
xchg
push
stos
sub
out
pop
inc
dec
jb
jle
push
and
push
mov
mov
scas
push
mov
or
lea
inc
not
add
(bad)
js
ins
mov
out
ror
test
pop
ret
mov
out
enter
push
dec
push
add
sub
jae
mov
popf
sub
xchg
push
lock
mov
mov
xchg
rol
out
xlat
cdq
xchg
mov
cmp
inc
jl
fnsave
outs
sub
adc
xchg
mov
adc
or
adc
xor
add
adc
add
test
call
loop
cmp
jecxz
mov
retf
cwde
outs
retf
push
adc
into
add
mov
fcmovbe
xor
cmp
inc
dec
push
inc
into
sub
mov
mov
enter
adc
cli
xor
and
lods
add
push
ret
and
std
fs
or
les
adc
mov
dec
and
mov
add
jno
call
adc
push
sbb
stos
and
add
lahf
xlat
retf
(bad)
pop
push
adc
jp
adc
mov
nop
ins
popa
mov
aas
js
test
or
js
loope
(bad)
lock
fdiv
push
in
test
repnz
data16
inc
adc
and
data16
vpsubb
movs
fsubrp
xchg
push
jns
mov
push
pop
es
mov
dec
mov
sub
cmps
imul
add
nop
inc
cmp
cmp
ret
jb
fs
sub
sub
jno
cmc
pop
xor
cmp
(bad)
push
ja
adc
psubq
outs
shr
ret
(bad)
mov
leave
xchg
sbb
popa
frstor
xor
sahf
movs
and
ror
pop
js
scas
push
dec
mov
push
push
mov
push
stos
and
mov
or
shl
or
cmp
sti
mov
fidivr
jl
jecxz
shl
jp
add
jg
vmovntps
and
repnz
sbb
jl
js
aad
pop
mov
fimul
mov
dec
mov
dec
cmp
mov
retf
test
ret
sub
cmps
ret
xor
sub
aam
mul
jecxz
fisubr
mov
out
mov
mov
jae
xchg
jnp
sar
jae
ds
mov
xlat
xchg
dec
sbb
outs
repnz
cmp
sti
ss
mov
jmp
aad
scas
test
ficom
pop
add
dec
sub
(bad)
in
add
scas
jle
and
les
and
lea
inc
pop
jmp
shl
add
jae
jp
in
xchg
out
pop
bound
xor
jno
nop
push
clc
ret
jge
cmc
mov
imul
inc
mov
pop
xor
nop
pop
mov
ret
loopne
sti
ja
xor
or
test
mov
not
add
mov
fs
mov
jae
jnp
test
js
and
in
add
js
out
ja
jne
ficomp
mov
fsub
jno
ja
push
into
xchg
sbb
sub
aam
fbld
xchg
sub
out
out
rol
cli
mov
or
add
outs
outs
xchg
das
mov
aaa
fdiv
leave
jb
and
sbb
dec
push
inc
sub
xchg
stos
pop
mov
xor
inc
dec
cdq
and
mov
add
(bad)
stos
mov
or
ss
mov
and
push
dec
cmp
add
mov
or
mov
pop
pop
test
mov
add
ss
add
in
inc
pop
into
enter
xor
in
sbb
shl
add
imul
ja
xor
mov
test
inc
stos
jae
inc
ja
pop
sub
dec
xor
push
dec
shl
test
push
sub
xchg
test
sbb
cmp
sti
stos
xchg
test
outs
sbb
fwait
push
bound
sbb
ret
push
xor
add
add
fimul
add
jmp
xchg
mov
add
jmp
mov
pop
or
jg
mov
ret
adc
adc
fistp
mov
sub
jg
je
xchg
lods
pop
stos
shl
pop
test
sbb
int3
pushf
pop
bound
sub
loope
addr16
jmp
xor
(bad)
lea
enter
jns
cmp
test
mov
or
nop
pop
add
test
inc
jne
pushf
retf
xchg
sbb
je
dec
push
jo
mov
addr16
out
push
int
sub
xchg
sbb
xchg
ss
pop
and
and
std
sub
and
sbb
aas
push
pop
add
add
dec
rol
jmp
push
jg
in
out
xor
jae
add
neg
cmp
pop
cmp
adc
inc
or
xor
mov
dec
jno
imul
and
dec
(bad)
retf
sub
mov
xchg
retfw
push
mov
pop
adc
mov
rcr
iret
mov
rcr
mov
shl
push
scas
pushf
adc
mov
jbe
pop
push
xchg
xor
dec
inc
jge
inc
stc
je
inc
mov
test
mov
or
lods
retf
mov
dec
inc
sbb
outs
rcr
jns
das
jne
(bad)
jp
(bad)
call
ret
dec
push
push
dec
mov
mov
jle
bound
dec
adc
lods
jmp
mov
leave
mov
mov
jl
retf
adc
or
retf
mov
push
sub
add
jp
shl
dec
seta
add
nop
mov
aad
fldcw
in
add
pop
push
fs
mov
inc
lods
or
fstp
and
movs
xchg
stos
std
cdq
pop
xchg
scas
xchg
(bad)
mov
enter
dec
jg
push
ror
push
hlt
rol
push
jl
push
scas
nop
jmp
outs
push
jne
dec
dec
call
push
mov
push
xchg
mov
xor
ret
push
stos
fwait
sub
mov
call
mov
cmp
ins
das
xchg
and
xchg
stos
jg
movs
dec
jmp
mov
jmp
pop
dec
out
sti
mov
jp
dec
push
fisub
rcr
jge
xor
(bad)
mov
and
mov
test
xor
mov
sub
sbb
mov
lea
leave
div
cmps
scas
mov
fist
popf
test
dec
les
aad
push
test
sbb
syscall
addr16
xchg
sti
push
nop
mov
loopne
test
add
out
jp
sub
sub
dec
sbb
mov
mov
ror
mov
test
inc
cmps
jle
lods
jg
xchg
fnstsw
xchg
and
in
pop
loop
mov
mov
push
imul
dec
arpl
inc
(bad)
jmp
inc
(bad)
xchg
xchg
arpl
jl
test
cmp
outs
fwait
sub
cmp
cmp
sbb
cmc
fcmove
pop
xor
mov
xor
(bad)
dec
dec
retf
adc
xor
call
cmps
stc
xchg
shr
call
loope
push
xchg
sub
mov
mov
xor
adc
adc
pop
les
push
xchg
xor
pop
js
xchg
icebp
jb
sahf
mov
test
and
lods
add
clc
jno
cmp
xchg
mov
sar
dec
aaa
jo
shl
mov
cmp
out
aas
scas
or
test
jmp
aaa
je
xor
dec
sub
pop
cmps
or
mov
or
stos
in
add
jp
push
hlt
repnz
cmp
sbb
sub
mov
or
inc
es
lock
push
inc
jmp
push
xor
aas
add
xchg
xchg
fmul
add
sub
push
adc
pop
jb
call
xchg
sbb
and
pop
dec
xchg
and
fisub
mov
fidiv
inc
stos
dec
pushaw
xor
pop
jl
sti
jae
xlat
test
stos
into
(bad)
stos
aad
lock
add
jp
xchg
push
sub
retf
lock
inc
or
pop
and
add
push
adc
aaa
pop
mov
dec
enter
sub
mov
fsub
jbe
jb
pushf
and
pop
sti
push
xchg
aad
add
xor
jg
retf
lods
dec
ret
pop
ret
or
adc
or
fisubr
shr
mov
pop
lahf
dec
cmps
popa
jl
push
shl
or
es
js
mov
std
jb
xor
jecxz
enter
push
sub
jge
movs
push
jp
cmp
scas
sbb
(bad)
mov
mov
adc
out
ror
and
pop
(bad)
mov
aaa
icebp
xor
add
imul
sub
push
mov
inc
shl
fadd
(bad)
arpl
es
addr16
pop
and
xor
mov
dec
clc
ja
dec
xor
push
push
lds
jb
xor
dec
sahf
ds
mov
xchg
add
jne
pop
xchg
pop
fdivr
mov
rcl
aas
test
or
cmp
cmps
push
fsubr
or
or
xchg
cmp
jge
lds
jl
mov
mov
mov
xchg
in
inc
stc
mov
add
push
mov
or
mov
(bad)
aam
sti
test
pop
int3
jmp
or
movs
mov
mov
pop
ret
mov
clc
sub
cwde
pop
or
(bad)
jmp
add
mov
lock
and
push
sbb
inc
fld
pop
jmp
inc
inc
push
push
mov
jo
and
dec
pop
je
dec
jg
lock
pop
adc
dec
pop
ret
lock
push
in
inc
xor
add
sub
lea
loopne
pop
test
call
add
test
sub
int
sbb
fdiv
(bad)
aas
out
movs
int3
sub
mov
faddp
or
test
test
and
xlat
pop
into
jmp
push
push
js
in
addr16
sbb
adc
fcomip
and
inc
push
adc
ret
cmp
neg
stos
sbb
jle
xchg
mov
test
jb
in
scas
xor
sti
xchg
fwait
add
add
jmp
or
mov
stc
je
aam
add
ror
and
or
add
xor
jae
pop
sahf
jl
lods
mov
push
test
adc
in
inc
es
iret
aaa
push
inc
xor
sti
pop
push
add
jbe
mov
pushf
leave
push
adc
push
nop
and
inc
data16
loopne
mov
or
cmp
sbb
test
mov
call
pop
xchg
jb
pop
nop
in
xchg
or
sbb
cmp
add
xor
dec
mov
repnz
fwait
dec
repnz
pop
aas
xchg
dec
mov
fidivr
xor
test
and
jnp
into
mov
test
arpl
jns
or
push
lds
mov
cmc
mov
pop
cmp
cdq
add
leave
xchg
sahf
and
leave
add
xchg
arpl
shr
push
into
cmp
shr
xchg
pop
xor
inc
out
cmp
dec
xchg
int
jge
aaa
or
jmp
xor
jle
pop
sub
and
cmp
imul
add
cwde
mov
jnp
(bad)
xor
pop
es
xor
test
pop
pop
push
jnp
mov
(bad)
movs
call
ror
outs
fnsave
xchg
repz
inc
xlat
loop
dec
mov
scas
enter
in
fmul
inc
sub
pop
je
enter
es
mov
sub
xchg
in
(bad)
es
mov
sbb
xchg
mov
call
in
push
cmps
sub
cmps
jns
push
mul
cmp
cmc
mov
mov
daa
stos
or
push
es
push
push
push
adc
jp
adc
or
mov
aaa
add
idiv
mov
outs
fmulp
push
icebp
adc
jno
mov
push
jbe
ret
cld
cld
mov
add
retf
mov
cmps
out
sbb
mov
retf
adc
pslld
xlat
xchg
stc
bound
movs
imul
jl
inc
dec
lods
popa
sbb
push
mov
lock
add
jnp
aaa
and
jg
mov
repz
push
aam
sti
pop
mov
sbb
sub
xor
dec
rcl
dec
add
jne
dec
sub
and
enter
add
sahf
outs
push
xchg
daa
sub
mul
fs
sbb
imul
aaa
mov
inc
push
jmp
sub
mov
mov
test
push
xchg
mov
mov
push
push
xchg
rcl
pop
lods
mov
stos
or
cmps
push
(bad)
jne
retf
mov
push
mov
xchg
outs
cmp
cmc
pop
and
jno
jne
jmp
push
pop
dec
cmp
jnp
xchg
in
mov
mov
lods
movs
xor
in
pop
cmp
jp
into
sub
std
sti
aad
jbe
scas
pop
mov
or
mov
mul
call
movs
iret
clc
push
retf
test
sub
pop
add
outs
mov
inc
add
div
xchg
shr
data16
lds
fisub
mov
push
dec
lods
jns
xor
mov
cmp
cwde
mov
mov
mov
and
mov
xor
rcl
pushf
nop
and
test
icebp
movs
sbb
test
xchg
ror
push
pop
pop
or
dec
mov
mov
(bad)
(bad)
fmul
xor
neg
jp
xchg
sbb
mov
lahf
push
mov
mov
in
push
sbb
push
fldenv
cli
out
pop
scas
(bad)
je
jo
stc
push
xor
dec
xchg
lds
xor
loopne
xchg
pop
movs
or
movs
into
cmp
push
test
call
ret
(bad)
sub
pop
dec
out
and
jp
ins
ror
or
sti
js
sub
nop
jno
ror
imul
nop
pop
cmp
lods
addr16
dec
ret
or
inc
jns
mov
lea
dec
xchg
xchg
sti
test
mov
mov
mov
mov
inc
add
in
test
mov
xlat
pop
add
ins
inc
adc
xor
aas
dec
add
push
mov
add
xor
ss
mov
call
push
xchg
mov
cdq
shl
xchg
xchg
stos
in
int3
mov
xchg
shr
ins
daa
push
xchg
retf
mov
jle
add
(bad)
loop
sbb
push
adc
sti
mov
push
push
mov
mov
retf
scas
add
sbb
(bad)
jmp
mov
inc
shl
stos
cmps
or
cli
jnp
inc
not
lods
add
adc
xchg
shl
adc
sbb
or
ins
xchg
in
pop
(bad)
adc
jmp
sbb
push
sbb
das
ret
dec
jne
mov
inc
das
push
les
or
cwde
or
inc
jbe
icebp
stos
xchg
sbb
scas
jns
ja
or
movs
popf
in
mov
jb
jle
stos
xchg
(bad)
shl
mov
mov
stos
add
dec
scas
pop
mov
jo
daa
(bad)
jno
mov
mov
jmp
mov
scas
mov
aaa
xchg
mov
xor
fisub
je
inc
push
(bad)
inc
aas
xchg
sbb
dec
jnp
mov
inc
xchg
retf
mov
add
test
pop
add
lahf
test
sbb
test
dec
jns
pop
xchg
ins
test
scas
shl
lds
js
popa
aas
dec
fimul
dec
mov
xchg
xor
sbb
aad
(bad)
jae
test
repnz
daa
sub
aad
jne
enter
push
xor
xor
pop
adc
(bad)
pop
or
je
lahf
pop
dec
inc
add
push
xor
aad
cmp
iret
outs
add
push
mov
adc
popf
and
das
(bad)
(bad)
cmps
scas
fist
push
outs
push
stos
outs
arpl
pusha
mov
pusha
xor
les
out
xor
lods
shl
icebp
(bad)
jmp
pop
xor
cmp
xrelease
push
push
adc
and
fnstenv
das
in
das
out
adc
pop
cld
mov
or
add
hlt
sub
retf
bnd
sti
ja
sbb
xchg
mov
movs
adc
push
je
ja
dec
sti
div
xchg
mov
test
pop
fdivr
mov
cmps
xchg
jb
push
mov
js
xchg
mov
adc
outs
fsub
cmp
adc
sbb
test
adc
adc
in
mov
sbb
push
inc
adc
push
retf
jl
popa
xor
in
xchg
mov
mov
mov
inc
das
bound
arpl
addr16
cwde
fst
cmps
rcr
xchg
int3
shl
cmp
jb
add
xlat
pop
jno
icebp
and
shr
push
add
jle
cwde
mov
cmovbe
jecxz
push
dec
pop
and
dec
punpckhwd
lods
push
mov
inc
aad
add
add
mov
mov
daa
sub
and
pop
mov
(bad)
pop
mov
test
add
pop
adc
jmp
push
je
jmp
iret
or
adc
aad
sub
pop
push
add
or
adc
daa
mov
cmp
in
mov
adc
cmps
inc
xor
test
addr16
push
and
(bad)
pop
nop
sbb
shr
cmp
cmp
jl
or
inc
push
shl
addr16
push
jns
mov
popf
jbe
sbb
add
or
xor
add
dec
dec
adc
jns
jmp
ins
add
mov
cdq
hlt
and
mov
rol
out
sub
pop
inc
dec
scas
sti
enter
mov
mov
dec
sahf
cmp
xor
outs
cmp
ins
push
repnz
data16
xor
test
push
(bad)
xor
adc
xchg
aaa
cdq
fsubr
test
pop
fistp
push
(bad)
push
or
mov
mov
jge
rcr
xor
jbe
pop
add
ret
adc
lods
mov
mov
das
dec
sub
(bad)
daa
mov
jmp
scas
or
stc
fdiv
fwait
mov
ror
mov
test
out
push
cmp
adc
jg
repz
xor
mov
inc
push
std
pop
loope
loop
stos
imul
in
adc
jno
sti
and
test
jp
add
xchg
adc
dec
inc
cli
mov
ret
xchg
xchg
repz
pop
and
hlt
clc
sbb
movs
and
fadd
inc
sti
push
pop
fnsave
pushf
shr
ins
xor
les
clc
cmc
repnz
or
cdq
pop
or
loopne
movs
push
add
jb
xchg
test
mov
test
push
xor
xor
out
xchg
sahf
repnz
dec
pushf
and
xchg
pusha
hlt
jne
sbb
ins
not
and
sahf
into
std
push
fcomp
pop
fstp
js
or
scas
(bad)
jb
lock
out
pushf
mov
xor
popa
mov
dec
jl
stos
test
loope
inc
nop
(bad)
mov
retf
dec
jo
push
(bad)
jns
pop
fldenv
mov
cmp
xchg
xor
mov
push
and
mov
js
outs
mov
lds
mov
mov
cmovno
hlt
movs
mov
stos
or
je
jg
mov
arpl
gs
stos
pop
jmp
adc
gs
pop
clc
stos
popa
mov
add
mov
push
lods
mov
mov
sqrtps
int
sub
jbe
(bad)
repz
dec
jecxz
xor
cld
inc
hlt
ins
(bad)
hlt
cmp
ficom
imul
push
xchg
jno
add
mov
arpl
mov
scas
loop
test
jb
or
sub
cmc
mov
pop
rcl
sbb
and
pushf
pop
push
pop
jp
fwait
mov
jne
pop
mov
jmp
and
lods
sub
xchg
sti
(bad)
sub
sahf
bound
lods
mov
(bad)
out
push
cwde
repnz
cli
jno
daa
repz
mov
sub
and
mov
mov
cmp
sti
in
pop
adc
adc
push
jle
sbb
add
imul
push
test
jmp
ins
ja
aad
cmp
dec
sbb
in
push
shl
out
sub
xlat
sbb
loope
lock
test
dec
stos
mov
nop
xchg
push
xchg
bnd
addr16
cmps
mov
inc
pushf
push
push
je
call
iret
into
ja
retf
out
daa
aaa
dec
xchg
out
xor
repz
out
call
pop
add
jne
rol
mov
adc
je
fldcw
ficom
add
leave
cmp
jnp
xor
push
test
xchg
mov
xchg
lds
sbb
leave
xchg
nop
inc
mov
jne
mov
xchg
into
mov
xor
fnstcw
sub
mov
shl
ds
repz
nop
jge
xchg
test
or
mov
push
ja
jb
sbb
pop
mov
inc
imul
retf
test
add
or
data16
fcomip
inc
mov
inc
pusha
and
out
aam
in
lahf
jae
jmp
icebp
mov
sub
dec
xchg
dec
mov
mov
pop
jbe
jle
lds
pop
mov
jmp
(bad)
dec
jmp
mov
arpl
mov
pop
lods
nop
(bad)
adc
jp
lock
pop
inc
adc
shr
or
sahf
adc
adc
push
xchg
popa
and
cdq
jae
jecxz
xor
mul
pop
xlat
xchg
inc
push
add
add
cmp
jecxz
dec
xor
add
mov
dec
sbb
adc
add
test
and
aas
push
mov
test
jle
xchg
push
je
rcl
and
add
test
test
stc
stos
pop
xchg
jl
inc
stos
mov
daa
fcmovne
sub
cmp
xor
sbb
xor
(bad)
in
dec
mov
fwait
sbb
add
add
inc
pop
adc
(bad)
es
mov
mov
dec
outs
mov
dec
xor
jb
pop
hlt
fwait
(bad)
ss
xchg
ret
push
push
push
jae
fisttp
fild
xchg
loope
inc
jle
mov
mov
cmp
add
fdivr
mov
jecxz
cdq
sub
mov
iret
inc
pop
out
xchg
pop
call
jbe
fist
xor
xor
dec
retf
jmp
pop
into
shl
or
xchg
inc
lods
retf
fnstenv
imul
shl
push
sub
mov
es
adc
repz
or
inc
pusha
or
iret
test
int3
in
cld
retf
jb
in
push
pop
movs
mov
test
add
dec
test
aam
pop
neg
(bad)
scas
add
imul
cmp
enter
or
push
push
and
mov
xchg
dec
mov
mov
jg
sub
pop
jecxz
cmp
jl
stos
fisub
call
mov
rol
dec
add
(bad)
std
mov
jo
dec
mov
(bad)
xchg
enter
mov
dec
mov
ret
xchg
pop
ret
sub
sbb
and
enter
pop
stc
stos
sahf
xchg
dec
idiv
jns
aam
sub
inc
add
inc
lea
dec
and
jge
ins
xchg
enter
cmp
xor
xor
ret
sbb
gs
cmp
movs
pushf
es
test
ja
pop
add
mov
mul
sbb
addr16
jp
pop
leave
inc
mov
xor
dec
pop
sub
dec
cmps
jp
mov
xor
add
arpl
scas
pop
cmp
and
mov
sbb
inc
arpl
sbb
push
mov
inc
aaa
popa
xchg
xchg
mov
cmps
icebp
mov
xchg
sbb
xchg
pop
inc
aaa
or
mov
movs
ror
xchg
pop
adc
jns
stos
mov
mov
adc
div
or
and
jge
ja
adc
call
mov
and
fild
xchg
leave
dec
lock
add
fsubr
pop
repz
xchg
cld
jno
push
mov
gs
into
add
sub
push
mov
mov
test
xlat
push
hlt
and
mov
xchg
(bad)
(bad)
es
fwait
aam
loopne
jne
into
fwait
or
nop
das
xchg
hlt
mov
inc
add
jae
retf
mov
add
mov
cwde
push
adc
push
push
mov
hlt
ds
pop
neg
push
test
imul
mov
sub
ret
inc
inc
in
inc
shl
jnp
jb
retf
mov
add
xor
int
push
jbe
ror
push
(bad)
pop
push
inc
cs
imul
lahf
(bad)
loop
xchg
sub
ret
inc
inc
xchg
rol
sbb
retf
mov
add
adc
sub
push
mov
pop
ss
or
out
imul
fld
cdq
inc
je
adc
xor
arpl
in
push
lds
sar
cmps
sahf
jbe
jno
daa
mov
in
mov
call
pop
pop
mov
scas
dec
cmc
xlat
jo
and
fcmovnb
ror
ret
enter
nop
ss
stos
add
bound
movs
movs
outs
or
add
int3
cmp
repz
and
js
mov
mov
jmp
sar
pop
sbb
aaa
fwait
jno
leave
mov
daa
das
fld
in
aam
or
jnp
addr16
push
or
nop
or
pop
clc
inc
dec
fnsave
add
sar
out
ins
stc
stos
ds
pushf
dec
or
daa
aaa
mov
sub
add
jno
js
dec
dec
adc
dec
fmul
push
xchg
pop
fcom
pop
fadd
xchg
ret
pop
div
in
icebp
mov
jns
xchg
das
and
arpl
push
shl
je
aad
jmp
jns
lods
mov
jmp
dec
dec
aam
mov
fidiv
jns
sti
stos
push
in
mov
mov
sbb
mov
mov
pop
jle
popf
stos
mov
test
mov
fild
cwde
sti
pop
push
cwde
push
retf
jae
arpl
(bad)
jb
pop
sbb
mov
mov
icebp
mov
sub
xchg
shr
outs
dec
lds
nop
sti
pop
push
nop
sti
xchg
stos
out
outs
add
fs
mov
adc
in
inc
pop
and
mov
push
sbb
nop
jae
cmp
out
lods
pop
stos
idiv
out
stc
arpl
add
stos
jmp
mov
push
ss
fadd
das
shr
sub
cmp
iret
cmp
lock
sub
test
fs
sti
xchg
dec
pop
push
add
call
mov
stos
or
ficom
xlat
push
mov
jns
mov
pop
and
xlat
cld
push
xor
cld
dec
cmp
and
mov
jo
push
adc
sub
sub
mov
xchg
add
and
(bad)
add
out
aad
(bad)
mov
retf
inc
sub
aam
cmp
and
adc
xor
jb
dec
cmp
mov
dec
push
inc
mov
or
jmp
inc
retf
js
out
xor
fnstenv
mov
ja
mov
pop
xor
adc
adc
lock
mov
lahf
(bad)
xor
stos
sub
dec
stos
jbe
pusha
addr16
sub
jmp
enter
jl
adc
dec
xlat
mov
daa
scas
inc
mov
dec
mov
add
loopne
xchg
ss
stos
dec
xchg
dec
popa
int3
or
int3
mov
cmp
fidivr
into
outs
push
xor
pop
ret
xchg
scas
das
iret
inc
mov
arpl
repz
xchg
pop
in
fmul
popf
add
pop
and
loopne
xchg
lods
cmp
scas
fldenv
cmps
(bad)
xlat
sbb
mov
fisub
mov
mov
(bad)
cmps
iret
rcr
mov
ds
iret
mov
out
aad
or
dec
fs
adc
fsub
cmp
xchg
stos
(bad)
scas
std
jge
push
or
jmp
ds
cmp
mov
fs
shl
mov
xor
js
sbb
addr16
and
arpl
sbb
xchg
add
mov
ds
xchg
dec
xchg
inc
xor
inc
adc
push
cmp
fbstp
pop
or
jp
rol
mov
mov
in
xchg
push
hlt
(bad)
sub
data16
loope
dec
dec
lahf
and
repz
stc
stos
cwde
aad
dec
aad
les
jns
jnp
fadd
cmps
cwde
(bad)
mov
adc
stos
cmp
mov
mov
xor
dec
mov
xor
mov
jns
mov
iret
pusha
add
sub
push
sti
push
cmp
test
ins
sub
adc
das
(bad)
mov
jg
in
ret
cmp
pop
jge
cli
xor
and
call
push
mov
xor
cwde
pop
bound
mov
pop
sbb
xchg
add
aad
outs
pop
(bad)
ret
inc
and
mov
icebp
pop
pop
das
dec
add
mov
je
ret
jb
iret
frstor
stos
xchg
add
test
movs
outs
inc
mov
add
and
popa
sbb
jecxz
fbstp
mov
loopne
or
jp
pop
lea
jl
repz
sub
cmp
add
loope
or
fsub
jb
sbb
and
and
add
ja
mov
test
jecxz
pop
sub
jl
mov
movs
mov
jb
and
sub
mov
add
pop
cmc
cmp
imul
fild
inc
dec
aad
add
xlat
cmp
cmc
sbb
aas
bound
gs
adc
xlat
scas
inc
xchg
lea
fisttp
cmp
ja
mov
mov
push
pushf
sub
push
inc
sub
or
and
imul
ja
sub
fsubr
mov
test
sub
es
movs
repz
mov
imul
pushf
mov
pop
(bad)
(bad)
aaa
test
pop
adc
rol
ja
sub
cs
ficom
loop
xor
or
leave
nop
and
jmp
inc
lahf
xor
sub
mov
jns
pop
cld
aas
in
popf
test
mov
xchg
ds
enter
leave
jl
mov
mov
mov
add
sub
retf
sbb
dec
dec
pop
adc
ds
mov
jle
or
(bad)
cmp
or
js
dec
ret
mov
add
aaa
or
retf
mov
jp
shl
sub
dec
inc
sub
retf
jns
sbb
pop
mov
add
mov
or
push
xor
pop
jle
sar
das
(bad)
sub
push
scas
retf
test
sub
(bad)
jl
add
std
ret
adc
fwait
mov
gs
inc
jbe
mov
fsubr
call
stos
xlat
mov
add
scas
cli
stos
addr16
inc
inc
pop
push
pusha
cmp
imul
and
fsub
sub
mov
retf
pop
cwde
shr
mov
std
jnp
push
fisub
pop
daa
sbb
(bad)
iret
dec
push
inc
aam
stos
dec
outs
loopne
pop
pop
xchg
daa
inc
pop
dec
mov
pop
fiadd
mov
xchg
xor
lahf
retf
xchg
pop
sar
mov
cdq
sar
or
inc
xor
test
push
mov
out
loopne
mov
xchg
popa
call
cmp
or
inc
popa
push
and
addr16
mov
jg
push
fidiv
jg
add
and
push
(bad)
(bad)
jae
push
nop
movs
add
cwde
imul
dec
dec
das
nop
jne
push
retf
sbb
jns
dec
mov
jne
and
mov
cwde
cmps
div
sub
mov
fst
xchg
fsub
je
inc
mov
push
stos
adc
jp
std
jae
(bad)
add
in
or
jg
sub
jp
xchg
rol
push
mov
popf
push
hlt
fisub
push
in
mov
cld
jae
sahf
jo
rcr
clc
fistp
push
inc
hlt
push
push
or
popf
aaa
xor
jmp
stos
addr16
push
xchg
xor
sbb
repz
push
mov
mov
and
xchg
mov
add
shr
arpl
cld
jns
sar
sbb
cli
ds
xchg
sub
ret
outs
ja
push
call
ficomp
push
mov
sbb
in
add
je
jl
adc
xchg
and
(bad)
rcr
rcl
es
into
cdq
add
test
xor
int
push
xchg
jg
lds
ficom
scas
sub
mov
add
add
fstp
out
mov
mov
loopne
dec
push
xor
daa
pop
sbb
jle
data16
push
jecxz
mov
hlt
jb
das
inc
retf
repz
mov
and
sub
sub
cmps
aas
(bad)
jb
push
pop
les
int
ficom
add
fisubr
xor
xchg
fcomp
clc
cmps
pushf
int
cmp
data16
sub
push
add
and
inc
add
ret
mov
and
cmp
xor
(bad)
cmp
sub
mov
fs
jno
ins
das
(bad)
push
add
sti
nop
push
xchg
jae
inc
inc
pop
lock
stos
mov
mov
stos
out
test
inc
jmp
jle
call
loop
mov
mov
xchg
fcmovnbe
or
sbb
pop
adc
xchg
mov
sbb
xor
add
jl
mov
rol
adc
es
gs
dec
mov
push
cwde
sahf
mov
shl
or
xor
rol
(bad)
jecxz
sub
call
xchg
(bad)
mov
mov
mov
outs
jle
sbb
push
mov
arpl
retf
shl
jb
and
stos
inc
es
jo
mov
jmp
stos
pop
or
retf
out
dec
xor
push
mov
push
pop
jnp
adc
in
jp
push
ins
jbe
popa
mov
pop
mov
jne
neg
movs
mov
pop
mov
mov
repnz
in
adc
mov
icebp
in
or
leave
jmp
add
pop
retf
pop
mov
add
sbb
mov
sbb
mov
jl
ret
xchg
xor
push
xchg
inc
mov
dec
retf
mov
jnp
je
out
jecxz
cmp
ss
popf
imul
fstp
cwde
ja
mov
mov
repnz
mov
xor
rcl
sub
popf
mov
dec
xchg
add
xchg
mov
push
jg
sub
imul
add
or
clc
lahf
sti
and
aad
fidiv
mov
add
mov
xor
call
sbb
ror
inc
cmp
stos
aas
js
gs
cmp
inc
mov
imul
int3
inc
cmp
push
imul
mov
push
add
add
rcr
mov
aad
ins
mov
leave
icebp
test
jnp
dec
mov
mov
pop
cld
dec
fucom
mov
push
scas
repnz
stc
add
push
mov
inc
inc
pop
dec
sbb
jle
push
sub
sbb
push
test
ds
hlt
pop
sub
and
jmp
mov
out
mov
imul
jp
push
xor
jno
aas
mov
cmc
inc
imul
mov
js
inc
mov
retf
push
shl
cmp
inc
mov
sahf
out
mov
dec
sub
loope
pop
sti
push
pusha
imul
xchg
outs
movs
ror
aad
nop
sbb
mov
sub
sbb
sub
sub
add
mov
sbb
push
jne
sbb
cmp
repz
fwait
add
repnz
mov
dec
enter
std
or
add
sbb
push
hlt
mov
or
sub
into
push
and
test
xor
mov
sub
in
clc
repnz
dec
push
adc
xor
imul
(bad)
lods
retf
(bad)
dec
outs
imul
mov
or
lds
(bad)
test
mov
movs
(bad)
(bad)
ret
fnstenv
jmp
pop
aas
push
repnz
rcl
fdivr
inc
es
pop
test
ffreep
jns
inc
dec
enter
in
add
add
and
loop
loopne
(bad)
js
jge
es
ror
mov
xchg
fisttp
mov
push
xchg
inc
cs
lods
sahf
xor
imul
mov
pop
es
pop
mov
push
pop
mov
mov
mov
pop
mov
fwait
dec
add
push
fwait
ret
iret
into
(bad)
fstp
xor
add
mov
add
jl
xchg
je
or
and
addr16
jge
int3
mov
pop
test
enter
aam
jge
outs
jle
jle
enter
outs
js
cmps
jb
call
inc
push
mov
ins
xchg
xchg
cs
jmp
push
les
iret
mov
and
fisubr
inc
mov
mov
adc
scas
add
push
sbb
aas
mov
(bad)
nop
jns
fild
mov
adc
adc
and
in
or
fs
sahf
jo
push
nop
shl
push
push
jge
(bad)
out
push
stos
cwde
mov
xchg
mov
sbb
pop
jae
xchg
mov
lods
inc
fdivr
shl
lods
add
fs
xchg
ffreep
rcl
fisubr
or
sub
scas
pop
nop
cli
push
and
jecxz
js
stos
xchg
and
xor
and
cmp
cmc
ud1
rcr
add
push
gs
retf
ss
pusha
inc
loop
lahf
leave
adc
push
xor
scas
test
dec
inc
ss
jne
cmp
fs
sub
pusha
jb
fbld
or
push
sahf
and
enter
mov
xchg
test
sbb
outs
xchg
int3
mov
mov
pop
fiadd
cs
mov
xchg
adc
add
mov
cmps
rcl
int3
ss
sbb
aad
(bad)
mov
pop
(bad)
(bad)
jle
mov
cld
lock
cli
jg
mov
dec
daa
lock
pop
or
sbb
sub
xchg
pusha
add
xchg
call
outs
mov
mov
pop
or
xor
int
inc
repnz
ins
mov
sub
inc
xor
fsub
jno
sub
pop
loopne
xchg
xor
or
aas
push
or
stos
xchg
lods
retf
and
xchg
fdivp
inc
mov
sbb
mov
(bad)
imul
nop
add
out
ss
imul
adc
fsubr
xor
mov
ret
cmp
jo
dec
mov
aaa
sbb
pop
cs
or
or
pop
imul
mov
(bad)
xchg
ins
ins
dec
xchg
lock
jns
pop
repnz
xchg
cmp
sub
add
push
add
mov
pop
in
mov
mov
xchg
add
lahf
mov
sub
rcr
mov
enter
xlat
pop
mov
dec
adc
inc
sub
jae
cwde
add
cmp
iretw
xor
jl
jmp
push
mov
arpl
xlat
gs
test
jge
sub
mov
fisubr
add
cli
ret
xchg
addr16
pop
or
aas
jo
sbb
out
pop
sbb
jmp
movs
test
cmovl
mov
retf
test
repnz
outs
dec
faddp
test
mov
pop
inc
cmp
push
and
jmp
into
(bad)
cmp
mov
(bad)
nop
jb
addr16
mov
test
scas
and
(bad)
stc
xchg
mov
loop
aas
mov
pop
sub
ja
aam
dec
call
dec
jnp
mov
sub
push
aad
enter
push
jecxz
fisttp
fnstsw
and
xchg
xlat
gs
dec
call
pop
or
mov
sbb
mul
xor
sub
jmp
sbb
(bad)
xchg
xchg
dec
and
inc
push
mov
cli
jg
pop
mov
test
and
xchg
adc
mov
jae
push
jb
jp
mov
cli
xor
pop
dec
lock
mov
sbb
shl
das
push
or
inc
pop
or
cmp
push
push
call
mov
jle
outs
or
inc
mov
xchg
sbb
enter
pop
aas
push
sbb
sub
pop
jg
dec
mov
jno
jbe
je
bt
push
nop
inc
push
iret
daa
aad
imul
pop
pop
ds
mov
push
mov
ds
pop
push
and
bound
push
mov
(bad)
cmc
cmp
mov
dec
dec
imul
imul
cwde
pushf
mov
sub
or
xchg
shr
cli
add
jo
pop
add
sub
test
punpckldq
add
ret
mov
(bad)
int3
scas
dec
sbb
add
xchg
xor
popa
inc
cmp
imul
cmps
inc
pop
pop
pop
pop
rol
xchg
pop
add
enter
mov
or
retf
sbb
into
aas
jmp
inc
jecxz
sub
sahf
into
sbb
inc
push
sub
das
test
sub
in
mov
or
jmp
jne
ins
or
hlt
sbb
sub
repz
inc
dec
cmps
das
cld
inc
sbb
mov
adc
jmp
jae
ss
daa
sbb
cmps
(bad)
cwde
sub
inc
mov
je
out
retf
mov
push
mov
sahf
into
icebp
jno
push
jo
cs
pop
pop
xchg
in
pop
call
fwait
fs
sti
or
(bad)
movs
jb
adc
sub
or
fidiv
fdiv
cld
xlat
stos
scas
xchg
std
sub
cmp
xchg
mov
repnz
push
xchg
das
test
in
add
lods
into
xor
push
jns
dec
dec
data16
call
pop
clc
in
iret
jmp
cwde
pop
jmp
in
clc
not
stc
in
jmp
sub
pop
cwde
aaa
pop
clc
push
push
dec
push
jo
or
aaa
loop
shr
or
cwde
sub
dec
(bad)
jg
dec
frstor
adc
push
dec
jmp
test
push
xor
fwait
mov
je
lods
xor
xlat
stos
mov
cdq
fimul
test
bound
push
pop
pusha
jp
fidivr
sub
daa
mov
mov
stos
jb
or
dec
pop
or
imul
div
mov
or
dec
inc
add
adc
test
fdivr
sahf
pop
mov
sub
leave
stos
or
repnz
aam
test
loop
outs
stos
and
mov
pop
xchg
adc
pop
push
mov
dec
mov
data16
mov
in
outs
js
jo
xchg
sysret
mov
push
xchg
mov
jne
lea
xchg
mov
mov
and
push
aad
push
cmps
jae
sub
or
ss
mov
dec
push
pop
pop
sar
test
scas
sti
or
add
test
cs
outs
call
xor
ret
test
test
fnstcw
xchg
movs
mov
adc
pushf
(bad)
sbb
cmp
sahf
cmc
pushf
scas
cs
daa
inc
(bad)
mov
fst
and
cmps
mov
and
sub
push
daa
test
popa
test
(bad)
enter
sub
add
out
and
adc
loope
outs
mov
sub
sub
push
dec
mov
fsubr
push
in
outs
jmp
(bad)
das
dec
push
int3
mov
and
jle
mov
fwait
pop
and
dec
js
(bad)
add
xchg
hlt
inc
mov
or
rcl
jecxz
sub
fmulp
mov
rol
sub
xchg
dec
fst
lods
dec
inc
dec
jnp
mov
cmp
xor
in
dec
loop
mov
rcr
imul
sbb
pusha
and
aam
push
test
test
inc
add
push
sub
sar
push
clc
ins
xchg
mov
lods
(bad)
and
cmp
and
mov
mov
sbb
imul
sahf
mov
and
mov
bound
mov
mov
jle
scas
scas
test
test
(bad)
fild
mov
dec
xchg
retf
pop
cmp
mov
push
leave
daa
scas
pop
jle
adc
push
js
ss
clc
xchg
push
sub
repnz
shl
add
mov
das
shr
adc
push
mov
popf
mov
(bad)
pop
xor
xor
xor
(bad)
test
xor
jecxz
cld
scas
push
dec
jge
cmp
in
xor
call
inc
stos
cmc
sub
aam
or
jl
pop
sub
jl
mov
jge
jl
arpl
js
ret
pop
dec
lock
jg
xor
sbb
mov
jae
mov
repz
mov
mov
fcmovnu
test
mov
fldcw
xor
out
pop
mov
imul
mov
outs
nop
xchg
pop
das
and
int
cs
rol
out
mov
dec
mov
mov
cwde
push
loop
mov
out
mov
adc
into
call
add
pop
shrd
jl
push
and
mov
mov
xchg
push
cmps
das
pop
aad
xor
xor
and
mov
jmp
adc
iret
push
daa
mov
les
jae
inc
es
sub
mov
sbb
push
fcom
dec
test
fisub
sub
push
sub
imul
xchg
jnp
aas
mov
or
xchg
xchg
idiv
shl
je
outs
test
sub
enter
mov
aad
popf
icebp
rcl
mov
push
mov
cld
pusha
inc
dec
push
mov
push
lock
xchg
daa
jmp
push
dec
jbe
add
dec
cs
repz
jno
ds
inc
add
out
mov
ret
dec
sahf
cld
jmp
adc
stos
out
test
cdq
leave
int
xlat
adc
dec
data16
add
stos
xor
ficom
repz
mul
retf
add
lock
jns
out
xor
sub
or
mov
ret
xor
and
shr
xor
data16
(bad)
pop
xor
xor
pop
mov
cmps
xchg
mov
ror
cmp
push
pushf
movlps
adc
adc
stos
daa
pop
je
add
mov
loop
push
ret
jb
iret
cld
inc
mov
dec
inc
movs
inc
and
jns
inc
xor
stos
cld
fcom
imul
cli
inc
pop
push
and
mov
jns
dec
dec
ins
sbb
and
fldz
mov
mov
pop
adc
(bad)
mov
rdtsc
jo
and
adc
xor
hlt
sbb
js
loopne
adc
stc
(bad)
mov
mov
int3
or
outs
push
jg
inc
lds
inc
push
arpl
adc
pop
call
pop
in
mov
push
cmc
inc
mov
ds
mov
fmul
cmps
addr16
dec
pop
pop
mov
sub
inc
sbb
xlat
jno
stos
sbb
es
je
adc
loop
adc
mov
cmps
scas
sub
cmp
daa
xchg
xchg
jno
loop
inc
sub
add
outs
cmp
movs
mov
(bad)
dec
mov
cmps
inc
sub
aas
(bad)
mov
test
pusha
ja
es
rcl
cli
imul
ins
das
test
add
mov
adc
xchg
push
int3
push
sub
add
inc
push
iret
sub
das
add
push
jmp
cmp
rcl
(bad)
test
sub
xchg
push
aas
add
out
sub
dec
jns
fdivrp
out
jmp
les
bound
arpl
pop
outs
test
int
test
mov
imul
fst
push
adc
mov
rol
nop
inc
test
add
mov
div
pop
mov
enter
nop
xchg
xchg
test
mov
xsaves
es
and
cld
cmp
pop
or
outs
ror
sub
mov
loop
cwde
or
jno
xchg
sbb
dec
pop
frstor
lock
fcmovb
stos
inc
or
push
push
add
sbb
int
pop
inc
xchg
dec
fsubr
out
cs
jl
sar
(bad)
into
stc
aaa
(bad)
aam
in
or
jg
enter
add
hlt
adc
fst
and
shl
and
js
pop
push
inc
aam
imul
shr
jae
and
jmp
div
mov
push
xlat
mov
pop
(bad)
jae
mov
dec
imul
pop
mov
add
mov
dec
jno
mov
scas
jecxz
in
mov
bound
mov
xchg
mov
dec
imul
nop
dec
push
push
xor
xor
rcl
and
push
adc
out
inc
adc
gs
in
add
dec
xchg
xchg
jns
pop
mov
sub
cmp
add
add
add
push
and
cmps
xchg
jecxz
xchg
cmps
leave
retf
in
imul
mov
sub
stos
mov
cwde
aas
mov
cmp
stos
jno
fild
dec
mov
test
aaa
mov
xchg
dec
test
xchg
jmp
cmps
mov
or
(bad)
or
dec
lock
add
and
jbe
add
adc
lds
xchg
out
add
add
cs
xchg
sub
sti
movs
test
mov
shl
repnz
jl
xor
sbb
xor
add
mov
rol
les
popa
jle
test
dec
scas
aas
mov
add
cwde
icebp
add
pop
push
cli
push
jle
je
mov
loope
adc
and
pop
push
cmp
rol
fbstp
arpl
or
call
mov
retf
push
pop
xchg
push
faddp
jge
pop
test
jp
xchg
cs
jmp
dec
fldcw
adc
dec
inc
pop
pusha
ins
(bad)
(bad)
mov
push
pop
in
xchg
push
(bad)
xchg
jl
dec
rol
xchg
xor
push
xchg
scas
lods
pop
mov
or
jno
mov
test
cmp
xchg
mov
data16
jg
sub
pushf
inc
es
push
nop
xchg
cmps
jo
test
mov
dec
push
xor
inc
inc
pop
sar
iret
(bad)
call
loope
sti
mov
jg
stos
ins
cmc
xor
cs
dec
pop
imul
sbb
inc
and
data16
lods
sub
test
in
sbb
mov
or
std
and
xchg
mov
test
or
test
jmp
push
fsubr
xor
jmp
clc
pop
mov
adc
mov
adc
ror
arpl
add
sahf
add
mov
mov
inc
das
mul
and
stos
push
cmps
jg
dec
ud0
call
inc
sbb
xlat
aad
cmp
jne
lods
sub
dec
ins
pop
push
and
les
sub
scas
repz
daa
dec
pop
dec
std
sub
repz
mov
mov
sbb
(bad)
mov
ror
imul
and
xchg
adc
dec
scas
or
push
dec
pop
scas
xor
add
neg
into
and
ds
js
cmp
jmp
cmp
adc
aam
icebp
sbb
cmp
imul
es
(bad)
stos
mov
dec
sub
pushf
or
cmp
es
push
xchg
pop
stos
push
xchg
dec
xchg
ins
dec
add
sbb
daa
shr
jg
ficomp
push
xor
fwait
nop
out
inc
retf
pop
and
mov
sub
dec
outs
push
and
inc
push
out
cmp
je
jno
add
sar
add
sub
xor
cmp
ins
or
sti
addr16
dec
movs
inc
lds
das
test
xor
jge
sbb
lahf
adc
sbb
sub
inc
mov
mov
mov
sub
and
pop
pop
in
and
cwde
sub
mov
shr
sub
push
ins
pusha
arpl
pop
inc
test
inc
push
int3
shr
fadd
(bad)
sti
pop
pop
repnz
mov
sub
push
xchg
jne
scas
into
stos
in
and
les
add
adc
adc
xchg
fbld
(bad)
jnp
fimul
cmp
sti
jmp
mov
test
xor
mov
(bad)
jecxz
daa
dec
xchg
or
push
add
dec
or
jmp
push
sub
xchg
pusha
movs
data16
iret
mov
(bad)
mov
shufps
iret
stos
mov
ror
std
add
aaa
inc
and
mov
inc
das
fistp
aas
ror
pop
push
pop
dec
and
pop
gs
out
adc
xor
sbb
bound
into
in
sbb
stc
jae
fxch
inc
dec
and
pop
ds
mov
lock
out
pop
cmps
movs
inc
dec
sti
pop
mov
inc
loope
pusha
mov
ds
dec
jnp
popf
xchg
mov
mov
popa
loop
dec
mov
add
pop
xor
addr16
lods
repnz
cmp
(bad)
cwde
or
lock
mov
cdq
sub
xchg
stc
mov
pop
mov
mov
sbb
jnp
jg
mov
pop
cdq
shl
pop
stos
mov
outs
add
push
jp
xchg
retf
pop
jmp
jno
dec
sub
sbb
xchg
mov
call
mov
outs
sbb
repz
iret
add
push
stc
imul
adc
retf
fstp
dec
out
and
adc
xor
push
shl
jns
push
add
test
xchg
stos
es
stc
mov
jmp
cmp
or
adc
sub
icebp
mov
aaa
sbb
smsw
sub
mov
jnp
(bad)
(bad)
mov
mov
xchg
mov
dec
call
lods
adc
jbe
mov
aad
mov
lods
arpl
repz
dec
imul
retf
push
pop
pop
xlat
add
bound
out
gs
stos
imul
fisubr
imul
xchg
and
ss
or
out
xchg
test
cdq
sar
cmps
lods
pop
test
push
xchg
rol
pop
test
call
adc
adc
scas
pop
(bad)
xor
lea
mov
push
and
dec
ror
fwait
xchg
(bad)
(bad)
jecxz
add
sbb
popa
adc
shl
xchg
fs
movs
dec
jp
movs
mov
inc
mov
stos
mov
adc
xor
(bad)
mov
dec
inc
lds
test
or
and
rcr
dec
iret
bound
lahf
adc
ror
scas
aaa
aaa
jne
dec
mov
pop
and
test
or
cmp
sbb
stos
mov
inc
mov
leave
into
push
test
and
sbb
das
rol
or
jg
sub
jmp
xchg
imul
sub
and
cld
cmp
lahf
pop
sub
cwde
scas
xor
add
shr
sub
call
pop
mov
adc
inc
test
sub
add
pushf
add
mov
mov
jp
jp
daa
sbb
cmp
pop
xor
(bad)
push
or
shl
pop
cmp
into
add
jo
imul
xchg
mov
shr
cmp
rcl
pop
and
mov
jae
push
mov
fstp
mov
inc
add
add
cmovnp
mov
std
rol
(bad)
cld
repz
mov
mov
add
scas
mov
jp
jne
scas
or
mov
xor
hlt
push
retf
push
arpl
xchg
mov
div
jne
shr
mov
mov
or
sbb
and
in
mov
repnz
daa
ss
shl
mov
in
push
mov
ret
stos
adc
mov
jae
push
push
stos
add
mov
pop
mov
add
ins
ret
lods
jns
shr
scas
dec
xor
test
popf
add
push
jl
repz
test
mov
movq
pushf
mov
hlt
icebp
les
add
cwde
rcr
fsubr
retf
jecxz
sbb
icebp
push
xlat
sub
xchg
stos
dec
push
loopne
or
pop
sahf
test
(bad)
sbb
xor
stc
mov
push
mov
jne
js
clc
jp
(bad)
fsubr
inc
jp
mov
jge
test
jnp
dec
stos
sbb
out
xor
test
lods
(bad)
xchg
pop
cmp
sbb
cmps
mov
adc
stc
es
scas
sbb
aas
popa
push
loopne
retf
jecxz
push
and
leave
(bad)
or
arpl
and
add
or
and
fcom
or
icebp
cmp
xchg
fstp
inc
movs
mov
movs
or
mov
pop
(bad)
sub
push
mov
jp
pop
es
mov
dec
mov
fiadd
mov
into
ror
aad
outs
lds
push
cmps
pusha
imul
repz
mov
les
and
loopne
lds
mov
retf
push
pop
aam
cmp
les
and
fidivr
sti
dec
lds
mov
and
cli
das
rcr
dec
cmp
sahf
div
add
lods
jmp
stos
xchg
outs
js
cmp
or
xor
pop
cmp
mov
in
add
stos
push
sub
inc
dec
cld
or
add
fsubp
mov
or
scas
and
fbld
push
mov
dec
jle
fbstp
pop
add
jg
xchg
pop
mov
xchg
fistp
mov
push
sahf
add
push
dec
push
mov
icebp
xlat
pushf
inc
sti
out
enter
movs
adc
or
daa
mov
sbb
dec
bound
cmps
sbb
lahf
add
ss
retf
cmp
call
ret
retf
mov
jecxz
(bad)
sub
dec
sub
jle
mov
xor
mov
pop
imul
pop
ds
adc
jo
fnstsw
xor
mov
cmc
push
imul
xor
fstp
sahf
fst
push
ret
pushf
aaa
retf
sbb
clc
sahf
movs
int
call
cmps
leave
push
popa
icebp
shr
inc
jmp
dec
je
dec
jle
aaa
push
mov
and
sbb
mov
pop
cdq
push
addr16
fnstenv
jmp
adc
je
pop
xrelease
sbb
pop
out
xlat
(bad)
movs
pop
jg
stos
adc
scas
and
cmp
mov
push
ret
stc
inc
adc
and
addr16
fcom
mov
(bad)
icebp
in
jns
xor
pusha
scas
cmp
pop
push
cmp
lds
(bad)
mov
aaa
shr
mov
pop
push
xor
xchg
xor
cmps
out
add
pop
cmp
stos
mov
cmp
cs
addr16
mov
sbb
shr
aam
adc
jg
retf
das
dec
scas
or
retf
stos
or
and
fucomp
into
jae
sub
repz
neg
iret
cmps
cli
fist
gs
retf
push
sub
dec
mov
lods
icebp
inc
stos
test
jg
or
fwait
jg
into
aaa
pop
fwait
jle
imul
imul
std
mov
repz
jle
retf
jnp
inc
leave
pop
aam
or
lahf
fisttp
sbb
je
pop
mov
adc
cmp
xchg
call
and
inc
dec
push
fmul
or
xor
mov
mov
jns
pop
aas
push
jg
ret
mov
stos
es
out
cmps
arpl
xchg
add
dec
test
push
push
scas
push
test
pop
inc
pop
pop
push
jne
mov
cwde
jmp
xor
mov
sbb
push
mov
mov
popf
jg
stos
int
mov
inc
ror
scas
ins
cmp
cld
jb
add
dec
(bad)
cvtpi2ps
jmp
ret
mov
bnd
mov
cld
das
push
bound
ret
mov
retf
mov
cmp
add
inc
mov
pop
mov
cmp
mov
sti
movs
sbb
in
ins
mov
cwde
cmp
bswap
jmp
mov
leave
sahf
xchg
sub
daa
push
ds
push
jbe
push
xor
jge
xchg
std
jae
adc
pusha
loope
scas
aas
scas
jmp
imul
ins
ins
ja
imul
nop
xchg
dec
dec
push
enter
das
mov
jmp
emms
aaa
das
lds
in
pop
jns
rcl
push
mov
xchg
push
or
xor
loope
mov
retf
les
icebp
cli
add
nop
das
(bad)
sub
repnz
cmp
mov
xchg
xchg
(bad)
fcomp
mov
rol
and
pop
mov
xchg
sar
dec
out
fadd
jbe
jecxz
push
mul
sbb
jmp
pop
loope
xchg
mov
pop
jo
jb
call
hlt
add
call
mov
je
jo
fisttp
popf
fiadd
jns
pop
lea
add
cmp
push
lds
dec
ins
fimul
mov
jmp
inc
inc
dec
popf
fld
scas
int3
je
pop
mov
lock
call
mov
ret
fcom
dec
mov
jmp
jge
(bad)
imul
pop
es
mov
xchg
mov
or
add
inc
cmps
pop
popa
inc
outs
adc
nop
(bad)
mov
lahf
mov
out
mov
xor
or
add
(bad)
ja
test
mov
aad
sbb
mov
add
out
pop
push
push
and
sti
pop
mov
js
and
(bad)
inc
loop
scas
or
add
inc
and
ins
push
rcl
mov
retf
cmp
sub
out
push
pop
jns
push
test
mov
xor
loop
shr
xchg
leave
lock
mov
push
retf
rol
pop
inc
mov
in
das
xchg
jb
frstor
dec
mov
call
or
push
or
mov
pop
sub
xchg
add
scas
jg
add
sub
gs
scas
and
and
das
div
(bad)
mov
data16
mov
push
mov
pop
sub
outs
mov
int3
into
mov
mov
dec
adc
or
clc
or
mov
mov
dec
das
sub
lahf
mov
int
sbb
push
fstp
inc
lds
push
(bad)
loopne
les
mov
pop
push
repz
push
bound
rcl
or
mov
add
pop
test
call
mov
imul
mov
data16
icebp
lahf
ins
int3
js
push
mov
call
xchg
xlat
hlt
mov
mov
mov
adc
mov
dec
adc
shl
push
aas
mov
mov
mov
xor
rcl
jns
lds
sbb
xchg
enter
ins
sbb
xchg
stos
mov
shl
clc
loop
nop
hlt
xchg
leave
jae
retf
ror
sbb
imul
inc
sub
mov
in
sub
cmp
cs
scas
imul
push
hlt
dec
aaa
mov
push
adc
pop
xchg
xor
jle
pop
xor
push
les
ret
cmps
inc
or
pop
rcr
stos
push
push
dec
push
mov
stc
shr
cmc
test
xchg
sub
enter
push
inc
jo
rcr
jmp
xchg
mov
mov
pop
push
popa
repz
add
dec
push
fnsave
test
push
fimul
mov
sub
mul
sbb
pop
pop
xchg
pop
psrlq
lds
not
pop
out
cmp
test
int3
iret
push
jmp
push
dec
ins
daa
test
test
jecxz
sahf
aam
cmps
into
into
add
jmp
addr16
ss
add
lods
rcl
push
mov
push
jge
(bad)
xor
inc
ds
js
xchg
mov
scas
test
ins
xchg
xor
enter
outs
pop
sub
jmp
movd
in
jl
adc
and
dec
dec
mov
mov
fist
mov
or
ds
jae
fst
push
mov
idiv
and
lock
mov
push
push
repnz
pop
push
jp
xor
loop
pop
push
dec
and
(bad)
addr16
cmps
add
xor
mov
jmp
fiadd
push
xor
scas
pop
xchg
add
test
cs
jnp
test
sub
jge
jmp
xchg
leave
inc
and
clc
xchg
mov
fidivr
dec
and
cli
scas
cmp
mov
pop
in
fiadd
les
loopne
lea
jmp
std
test
sub
sub
cmp
push
repnz
inc
pop
das
cmc
movs
(bad)
sti
clc
xchg
mov
fwait
xchg
pcmpeqd
ds
xchg
lea
call
mov
stos
out
pop
mov
popa
fidivr
push
jno
cmps
test
imul
scas
rcl
fnstsw
pop
push
add
stos
cmc
out
dec
shr
adc
pop
jl
fstp
adc
movs
mov
push
(bad)
sub
(bad)
in
lahf
inc
sub
iret
mov
stos
mov
stos
sub
lea
sub
xor
xlat
xchg
or
inc
sbb
dec
mov
xchg
pop
sbb
mov
call
inc
jl
fwait
inc
mov
repnz
lahf
inc
cmp
sub
in
ds
add
(bad)
pop
sub
xchg
xchg
pop
xor
cmc
fimul
xchg
inc
sahf
sbb
(bad)
push
aad
aas
in
enter
and
jne
sub
loopne
retf
stc
arpl
mov
das
mov
iret
jne
sahf
mov
fnsave
loopne
mov
and
xchg
loopne
xlat
jbe
push
mov
loope
fs
mov
add
test
add
inc
mov
or
js
addr16
repnz
movs
jno
jp
pop
cdq
cmps
mov
sbb
call
shl
(bad)
and
nop
aas
loopne
in
sbb
call
shr
rcl
movs
test
nop
mov
mov
dec
test
inc
movs
call
dec
dec
sub
sub
retf
dec
ds
jg
fld
cmps
ret
xchg
test
dec
(bad)
addr16
pop
sbb
ins
adc
pop
fsubrp
pop
inc
or
iret
push
nop
mov
data16
nop
jg
(bad)
mov
mov
movs
pop
shl
sub
shl
and
adc
or
pop
lea
rcr
add
stos
mov
push
mov
jge
add
scas
bound
push
nop
rol
sbb
pop
sbb
loopne
dec
mov
adc
stc
bound
jle
rol
test
les
adc
shl
out
mov
sbb
fcomip
dec
lock
das
retf
jae
daa
popf
dec
pop
xchg
xrelease
ffreep
js
in
xor
xchg
pop
outs
and
sub
or
add
xor
ds
rcl
(bad)
mov
push
aas
bound
add
or
or
cmp
pop
dec
lea
cmp
arpl
mov
cmp
and
jo
jle
shl
mov
push
mov
lock
xchg
dec
mov
mov
scas
push
dec
in
out
push
leave
push
adc
mov
into
mov
jae
test
xchg
repnz
cwde
sub
pop
xchg
ins
(bad)
mul
xor
mov
pop
adc
cmp
cmps
iret
xlat
imul
aad
push
jmp
sbb
dec
test
in
xlat
ds
stos
js
and
fisttp
sub
sti
jnp
int3
jns
sub
rol
scas
std
mov
std
sub
jbe
adc
rol
(bad)
fnstcw
cli
and
mov
inc
pop
test
fbld
xchg
pop
jbe
es
ret
rcl
push
adc
mov
daa
push
stos
fucomip
xchg
movs
push
inc
mov
mov
jnp
mov
leave
fwait
and
enter
mov
push
push
jmp
ja
or
push
sbb
or
xchg
es
mov
mov
lea
stos
mov
cmp
ins
jbe
scas
mov
dec
outs
aaa
and
xlat
imul
add
pop
add
scas
mov
aam
mov
mov
add
js
arpl
js
jle
xchg
test
xor
xchg
push
and
mov
add
outs
pushf
clc
adc
mov
or
test
pushf
mov
dec
add
sub
(bad)
mov
popf
test
(bad)
dec
scas
pop
dec
repnz
or
inc
mov
xor
and
fs
scas
lods
addr16
out
in
mov
fld
cmp
mov
add
dec
pop
xchg
ins
enter
cmp
pop
add
fxch
stos
sbb
scas
jnp
or
push
sub
test
cmc
mov
arpl
jle
mov
js
mov
or
sub
jmp
xchg
into
mov
mov
jp
mov
jl
xchg
mov
psubb
xchg
mov
int3
push
mov
mov
stos
mov
jmp
leave
sbb
das
and
out
pop
add
stos
push
mov
test
ins
mov
mov
ins
sbb
cmc
xchg
stc
imul
push
imul
stos
and
leave
cs
scas
pop
sub
cwde
ds
stos
loope
sbb
das
inc
adc
pop
test
rcl
inc
push
xchg
sti
pop
and
pop
push
sub
rcl
cmp
das
inc
(bad)
sub
adc
cmp
clc
aas
js
not
(bad)
jmp
cmp
retf
mov
scas
outs
nop
add
mov
jge
pop
dec
xchg
inc
pop
ret
xchg
mov
xchg
xchg
inc
mov
fs
pop
aam
stc
mov
(bad)
aad
loopne
add
nop
dec
dec
jle
and
out
adc
nop
call
jae
jmp
jg
sub
push
test
out
push
jbe
add
or
jnp
sub
or
stos
mov
imul
cmps
sub
add
xchg
loope
and
jne
pop
jb
gs
jecxz
jge
xchg
push
fld
xor
test
das
scas
retf
(bad)
daa
test
ja
(bad)
push
aas
add
ins
push
xchg
repnz
jns
jl
popf
mov
repnz
mov
daa
stos
pushf
adc
mov
mov
es
test
or
out
xor
mov
push
shl
xlat
(bad)
mov
packssdw
adc
xor
out
repz
add
jo
push
stos
shl
bound
mov
push
jp
fld
inc
add
(bad)
xchg
sub
stos
pop
out
inc
(bad)
pop
aam
xlat
pop
stc
mov
scas
mov
push
adc
cdq
cmps
adc
push
push
sbb
sbb
cs
add
test
dec
jmp
cmp
xchg
ins
sti
xlat
(bad)
repnz
push
retf
push
inc
mul
jecxz
jp
jne
rcl
(bad)
arpl
lea
rcl
push
enter
xchg
(bad)
mov
test
outs
sub
hlt
jnp
push
js
rol
shr
mov
adc
sub
in
jno
sbb
mov
mov
pop
shr
sahf
rcr
xchg
dec
xor
imul
inc
ja
or
aad
inc
mov
and
push
stc
adc
test
jge
adc
call
sub
add
mov
out
push
xor
jns
cmp
adc
sti
das
mov
fcomi
and
lods
add
in
jo
not
pop
aas
mov
add
dec
repnz
dec
cmp
lea
dec
xchg
xchg
mov
inc
mov
add
in
xor
adc
pop
dec
cmp
lods
addr16
out
pusha
jb
xor
int
mov
fmul
fcomp
mov
test
jne
sti
(bad)
push
ins
lods
xchg
outs
outs
test
pop
dec
outs
and
je
mov
mov
xchg
add
retf
add
mov
inc
int3
lods
pop
pushf
add
xchg
cwde
inc
arpl
push
mov
out
xchg
xchg
inc
dec
sub
xchg
enter
adc
jg
hlt
clc
or
pop
pop
imul
dec
int3
dec
cld
or
ds
mov
dec
mov
lock
pop
xor
addr16
nop
adc
inc
es
xchg
sub
xchg
push
inc
xor
pushf
stc
fbstp
ds
cmp
mov
stc
(bad)
aam
and
pop
ret
ss
jbe
fsub
jno
xchg
jg
or
xchg
and
xlat
das
pop
sbb
pop
sbb
dec
enter
mov
int
in
cdq
sahf
adc
mov
adc
pushf
inc
pop
push
and
cmp
lea
into
bound
push
js
and
stos
call
cmc
sub
das
icebp
push
sub
jne
xchg
mov
ret
dec
out
mov
faddp
rcl
shl
dec
lods
mov
bound
lds
out
sub
iret
sbb
sub
rol
mov
les
mov
inc
or
mov
nop
ins
jl
sub
add
mov
inc
iret
cmp
outs
adc
adc
or
xor
inc
shl
loope
nop
push
add
out
dec
jne
sahf
mov
add
es
xor
outs
jmp
add
mov
out
or
sahf
js
das
lahf
jle
scas
cmp
fisttp
mov
popf
mov
sbb
jo
out
data16
pop
stos
sub
inc
enter
imul
sti
mov
aam
retf
sub
cmps
leave
loop
pop
fnstenv
imul
jge
inc
push
push
es
or
mov
inc
push
push
or
lods
dec
adc
sub
les
or
bound
jecxz
xchg
cmp
cdq
jmp
mov
int
icebp
cmp
sub
div
sahf
rcr
jg
lea
and
pusha
mov
test
les
push
and
popa
rcl
pop
dec
or
clc
mov
push
add
inc
pop
push
(bad)
addr16
in
push
fcom
push
push
inc
or
(bad)
pop
loopne
cmp
(bad)
repz
shl
hlt
(bad)
pop
dec
push
cmc
inc
fwait
sub
mov
inc
jbe
mov
or
jecxz
inc
xchg
aas
movs
push
pop
push
inc
push
loop
scas
in
dec
mov
cmps
retf
jmp
repz
retf
jecxz
outs
add
inc
push
jb
fild
pop
test
jg
outs
sbb
shr
imul
add
outs
rol
imul
xlat
push
inc
add
popa
stos
pushf
ja
jb
push
adc
scas
sbb
cmp
call
xor
leave
mov
retf
or
iret
dec
add
mov
inc
jmp
test
add
inc
nop
ja
sub
retf
hlt
jno
inc
bound
retf
int
pop
arpl
lahf
retf
xchg
mov
arpl
push
pop
pop
push
fs
cmps
pop
cmp
pop
push
test
push
push
and
xchg
test
jae
cmp
jle
stos
jg
xchg
inc
cs
sub
out
loopne
jbe
mov
lods
jg
push
cmps
push
jbe
xchg
dec
pusha
cld
rcl
push
jl
sub
push
ja
hlt
jmp
outs
rol
retf
dec
ror
push
hlt
push
into
xor
repnz
jle
fist
test
out
lods
jg
cs
in
aas
retf
adc
pop
mov
mov
mov
or
addr16
test
sub
xchg
stos
xchg
jnp
pusha
xchg
movs
dec
and
cmps
stos
(bad)
push
stos
or
dec
sahf
pop
das
dec
jbe
scas
or
mov
inc
jns
pop
cmps
test
sub
dec
pop
jg
dec
mov
es
push
stos
int3
add
pushf
xchg
(bad)
stos
and
dec
int
not
call
xchg
aas
enter
outs
xchg
jl
dec
xchg
scas
mov
or
sbb
js
push
xchg
in
mov
loop
fbstp
add
call
bound
xor
(bad)
sub
pop
jmp
push
push
fldenv
aam
sbb
call
inc
xchg
cmp
inc
movs
bound
add
loop
adc
jbe
call
xchg
sahf
shl
movs
sbb
mov
pop
xchg
xor
and
frstor
jg
mov
and
ror
lock
xchg
sbb
test
push
adc
dec
loopne
jae
mov
pop
outs
pop
call
inc
std
inc
gs
pop
sub
lock
icebp
mov
inc
jl
sub
and
fs
or
add
mov
cmp
int3
xchg
cmps
jnp
xchg
xchg
pop
mov
pop
jge
sub
repz
mov
adc
mov
jp
retf
das
loopne
xchg
mov
int3
std
pop
sbb
push
outs
stos
push
push
inc
jecxz
clc
fidivr
xor
je
pop
mov
retf
mov
pushf
out
mov
push
in
mov
(bad)
mov
mov
pop
mov
inc
xchg
and
pop
push
pand
add
push
push
rcl
xor
inc
add
pop
enter
mov
call
dec
movs
lods
popf
push
retf
scas
and
call
iret
out
push
ins
(bad)
int3
test
sub
cs
nop
scas
das
aad
mov
(bad)
jo
push
adc
cmps
in
pop
fst
inc
ret
leave
arpl
rcr
out
cwde
inc
jmp
mov
ja
dec
mov
pop
jae
and
inc
adc
xor
aam
into
das
ins
pop
xchg
pop
lock
xor
das
adc
inc
dec
and
push
js
lock
pop
(bad)
test
xchg
ins
xor
pop
enter
popa
jb
push
in
xchg
push
das
je
call
sub
mov
rol
imul
dec
pop
inc
add
mov
mov
retf
sub
(bad)
mov
cmps
and
adc
fs
test
jmp
xchg
(bad)
test
imul
xchg
sbb
outs
mov
hlt
adc
cmps
jmp
outs
(bad)
jl
dec
pop
clc
cmovp
fucomi
xor
ror
mov
shr
arpl
and
xchg
xchg
jge
jae
sub
(bad)
outs
stos
add
mov
dec
sbb
les
xor
sub
and
inc
push
das
and
fs
fwait
sub
add
xchg
mov
mov
dec
lock
or
or
jle
dec
push
lods
fwait
push
inc
pop
iret
in
popa
xor
sti
enter
and
jp
out
mov
lahf
test
pushf
pop
xchg
add
rcl
cmovbe
in
xlat
ss
cs
push
sub
jns
aad
push
dec
pop
mov
sbb
pop
sbb
xchg
lahf
fild
icebp
ins
push
pop
pop
push
jmp
ss
inc
mov
lea
test
cmp
loop
mov
push
fcom
push
sub
push
push
xchg
push
mov
shl
cmp
inc
mov
add
xor
push
jnp
cmp
and
mov
(bad)
pop
and
cli
dec
and
sbb
js
jb
js
push
push
inc
pushf
and
fmul
jae
int
push
scas
xlat
js
jp
jmp
mov
(bad)
pusha
(bad)
xor
in
and
sbb
inc
jae
add
repz
test
aad
loop
adc
sub
add
lock
jmp
mov
cmps
mov
inc
(bad)
xchg
xchg
or
fisttp
ret
cmp
mov
hlt
mov
jmp
bound
shl
(bad)
jae
xlat
fisubr
inc
adc
jmp
mov
pop
push
mov
imul
xchg
push
dec
retf
xor
push
mov
mov
sub
mov
out
loopne
mov
inc
xor
(bad)
add
dec
push
(bad)
xchg
sbb
dec
(bad)
(bad)
(bad)
div
je
jns
mov
xor
mov
pop
retf
iret
mov
les
cdq
mov
lods
inc
pop
push
das
xchg
std
jno
inc
(bad)
jmp
out
mov
cmp
push
lods
or
int
mov
jl
in
int
fcomip
mov
(bad)
adc
xchg
pop
jle
jmp
je
(bad)
addr16
pop
pop
(bad)
ins
xchg
lahf
aam
mov
setns
test
data16
ret
pop
stos
pop
cmps
retf
ja
outs
enter
mov
push
je
push
fisub
add
xchg
pop
sbb
and
shl
push
scas
sahf
outs
jo
fdivr
into
jbe
mov
jl
xchg
or
lahf
push
mov
mov
add
add
add
cwde
gs
xchg
test
bound
test
stos
mov
fwait
mov
dec
mov
sbb
mov
scas
lahf
fistp
clc
cs
das
push
dec
adc
test
loopne
aaa
shl
sub
add
int3
xlat
paddb
arpl
loop
jle
(bad)
jno
in
jecxz
mov
dec
retf
adc
int
xchg
pop
mov
cmp
xchg
xchg
jb
lods
daa
push
xor
div
or
retf
push
mov
inc
jge
xchg
movs
mov
pop
adc
(bad)
push
rcr
mov
mov
out
ror
mov
sub
sub
dec
movs
and
mov
xchg
data16
mov
fwait
push
mov
dec
xor
add
(bad)
sub
push
sti
dec
fscale
(bad)
in
xchg
lahf
inc
not
lahf
cmp
xchg
sbb
outs
xchg
mov
popf
sub
mov
ss
adc
adc
outs
dec
popa
push
loop
pop
jmp
shl
lea
sub
and
or
call
dec
jno
sub
cmps
mov
adc
push
sti
mov
xchg
mov
add
jns
pop
bound
push
and
dec
mov
sub
push
or
push
adc
rdtsc
sub
mov
push
sbb
add
aas
lods
mov
push
sbb
jecxz
mov
aaa
test
mov
loop
mov
test
or
add
xchg
lods
mov
mov
(bad)
xchg
lock
push
and
cmp
or
retf
imul
call
pop
je
push
mov
lock
adc
nop
ffreep
dec
imul
xchg
imul
sar
retf
(bad)
push
test
movs
data16
ds
in
outs
push
pop
jo
lods
mov
or
mov
xor
(bad)
test
stos
xacquire
add
sbb
mov
jecxz
shl
es
push
arpl
pop
imul
jecxz
stos
jmp
repz
xor
mov
out
inc
jle
cmp
(bad)
fwait
addr16
or
lods
adc
cmp
daa
rol
ds
mov
daa
fmul
cmp
mov
xchg
aas
xchg
icebp
cmp
inc
repz
loope
cmp
into
sub
(bad)
mov
inc
xchg
fwait
push
cmp
pop
adc
ss
out
and
leave
sbb
cmp
and
(bad)
mov
fcom
mov
popa
mov
loopne
dec
jmp
in
data16
add
iret
imul
addr16
push
nop
sahf
mov
clc
mov
outs
cli
mov
and
fbstp
xchg
xchg
push
push
lea
dec
sbb
sahf
cs
add
pop
les
test
sub
ja
sahf
retf
mov
mov
dec
jns
imul
retf
gs
mov
push
push
shr
cmp
or
repz
add
xchg
cwde
or
mov
adc
dec
out
jmp
test
xlat
scas
xor
pcmpeqd
mov
cmp
jle
push
mov
in
xchg
dec
es
test
out
ret
jle
or
sub
fdivr
test
(bad)
pop
inc
scas
cmps
test
or
dec
pop
gs
or
or
sbb
imul
cmp
adc
ds
fld
dec
not
xor
shl
sbb
jge
mov
dec
js
xor
sub
mov
and
mov
pop
scas
mov
cmp
mov
(bad)
dec
jg
out
jp
jecxz
test
push
mov
dec
loopne
test
xor
push
cmp
jns
test
nop
out
test
retf
sub
stos
stos
mov
cmps
shl
pop
xchg
cdq
or
mov
das
test
sub
xchg
mov
mov
out
mov
das
mov
and
mov
repnz
inc
out
inc
xchg
rcl
add
mov
rol
std
hlt
push
outs
push
mov
or
shr
mov
add
idiv
mov
outs
stos
dec
fsubr
out
adc
xor
xlat
mov
inc
test
push
scas
mov
neg
retf
and
sub
mov
cld
mov
mov
mov
push
inc
sbb
data16
popa
stos
xor
sbb
popa
arpl
cmp
out
imul
movs
xchg
and
push
clc
cdq
retf
scas
mov
sbb
mov
mov
xor
or
sub
and
xchg
(bad)
add
xor
clc
(bad)
outs
mov
xor
sahf
push
push
repz
test
popa
les
push
mov
cmps
push
cmc
in
stos
inc
jmp
sub
push
xor
pushf
cmps
loope
inc
jecxz
or
es
ror
jmp
fist
fsubr
movs
adc
or
jmp
popw
(bad)
xor
sub
mov
or
mov
pop
and
mov
faddp
and
add
scas
push
mov
nop
cmp
inc
int3
pushf
movs
js
cs
and
imul
cli
adc
and
inc
xchg
pop
leave
dec
dec
dec
test
gs
lds
ret
and
js
ficomp
sti
lods
mov
movs
cmp
sar
or
add
and
cmps
repnz
mov
inc
xor
xchg
sbb
pop
add
shl
inc
ja
int3
outs
arpl
mov
push
pop
cmc
add
mov
test
add
xchg
add
inc
or
daa
out
add
je
push
into
adc
sub
cdq
xchg
(bad)
mov
pop
inc
sbb
push
stos
mov
xchg
outs
nop
pop
push
(bad)
test
or
imul
hlt
iret
xchg
scas
imul
ret
mov
call
mov
sub
jp
inc
out
mov
push
shl
mov
mov
push
mov
adc
inc
cmps
(bad)
jmp
sub
stos
ror
inc
jp
sar
cdq
(bad)
retf
jno
jae
mov
push
out
lock
mov
or
fsub
enter
push
sub
adc
cmps
mov
jne
ja
sub
xchg
lock
push
adc
mov
inc
cs
push
mov
push
push
push
enter
push
xlat
add
out
and
les
mov
outs
pop
bound
or
jmp
xchg
call
ja
pop
inc
push
pminub
push
xchg
das
xchg
inc
aam
out
inc
fwait
adc
(bad)
out
fcomip
mov
jecxz
adc
push
mov
repz
les
jmp
lods
xor
test
mov
out
loopne
(bad)
jge
ret
ret
in
mov
neg
dec
hlt
inc
xor
sub
cmc
sti
cld
push
adc
mov
push
shl
mov
out
(bad)
jl
xchg
lods
es
xchg
(bad)
pop
ds
mov
sub
add
stc
mov
push
pusha
in
scas
mov
pop
dec
mov
mov
push
jae
inc
cmp
scas
outs
ret
and
clc
iret
fisub
push
mov
mov
sub
xchg
ret
cdq
shr
xchg
push
or
jecxz
ds
sar
pusha
pop
cmp
les
mov
jnp
sbb
pop
(bad)
outs
inc
nop
jae
shl
xchg
xor
xchg
(bad)
div
mov
adc
mov
pop
mov
mov
push
ja
imul
inc
ret
stos
dec
mov
imul
mov
cmc
adc
scas
sub
xchg
mov
xchg
pop
loope
(bad)
mov
dec
adc
lods
or
out
mov
pop
adc
sbb
outs
or
es
loope
adc
pop
jnp
ja
jp
xchg
stos
addr16
or
cs
leave
push
add
push
cs
mov
xchg
shl
in
add
pop
pop
add
in
rcl
xchg
xor
pop
mov
sub
jae
in
in
or
test
(bad)
imul
in
xor
ins
ficom
and
cdq
aas
aad
mov
popa
hlt
xor
mov
dec
add
pop
test
adc
adc
mov
jle
addr16
mov
pushf
(bad)
je
sub
mov
cmp
test
dec
dec
imul
xchg
mov
mov
stos
cmc
mov
sub
mov
icebp
jns
jg
mov
mov
cmps
mov
mov
aad
lea
jecxz
les
adc
pushf
test
cs
repnz
inc
aaa
dec
add
push
and
sub
dec
call
cmps
dec
daa
(bad)
je
sar
pop
ret
pop
xor
sbb
into
test
(bad)
and
mov
test
fwait
mov
in
rol
stos
mov
xor
das
fimul
scas
sub
push
lea
iret
mov
div
lgs
sub
inc
test
mov
lods
or
mov
shr
nop
jg
aas
adc
adc
pop
lock
pop
pop
push
pop
push
lods
bnd
retf
hlt
dec
fwait
xor
mov
test
add
and
mov
xchg
addr16
dec
das
inc
push
jle
xchg
dec
cmp
dec
push
xor
dec
cli
das
loopne
and
jno
ins
cmps
sbb
cs
cs
mov
push
mov
das
jno
imul
jns
scas
adc
jl
push
pop
clc
dec
mov
mov
test
mov
loopne
push
or
outs
mov
ins
add
mov
div
jae
mov
sbb
xchg
jp
cdq
mov
sub
and
add
imul
inc
add
arpl
mov
cs
dec
(bad)
push
out
lea
or
cmp
add
pop
and
adc
dec
xchg
jno
cmp
mov
xor
pop
nop
add
mul
iret
push
or
xlat
mov
pop
sub
sti
add
xor
cmovo
pop
and
mov
push
(bad)
mov
jge
popa
mov
ret
mov
mov
mov
or
jge
pop
sbb
mov
sub
outs
nop
sbb
mov
stos
sub
adc
cmp
jg
idiv
js
xchg
jle
mov
rcl
jl
fmul
mov
push
pop
adc
inc
dec
cmp
dec
xchg
jle
mov
xchg
push
xlat
push
repz
in
pop
test
in
jmp
cmps
mov
jb
sub
inc
fsubr
int
fst
enter
scas
jp
int
fsubr
daa
test
xor
aaa
imul
mov
popa
jmp
add
popf
inc
(bad)
xor
inc
addr16
xor
sub
dec
mov
retf
stos
mov
and
gs
pop
push
cmp
push
adc
inc
jbe
and
sbb
dec
mov
cmp
or
pop
mov
push
and
js
and
cld
xor
and
leave
mov
stc
push
push
ds
xchg
mov
inc
push
data16
sbb
mov
ins
mov
retf
shl
inc
in
xor
mov
lods
mul
in
and
ret
and
sub
popa
outs
cmps
retf
imul
cs
mov
xor
(bad)
push
sub
mov
rcl
jle
popa
jbe
movs
pop
add
dec
sub
inc
or
outs
dec
cs
inc
imul
(bad)
jo
push
jmp
or
mov
cli
push
out
fisttp
or
rol
dec
out
(bad)
nop
jnp
fist
mov
fwait
xchg
in
jmp
getsec
cmps
fs
loope
jmp
enter
inc
add
call
icebp
dec
add
mov
pop
cmps
push
out
mov
push
call
sbb
(bad)
xchg
std
retf
xchg
sub
mov
(bad)
xchg
icebp
stos
inc
retf
popf
rcl
cdq
jnp
sub
stos
add
jb
dec
scas
lods
mov
push
mov
xor
push
push
sub
gs
repnz
push
add
test
inc
mov
cmp
lahf
xchg
ja
mov
movs
loopne
into
imul
or
ss
adc
or
push
and
ins
into
inc
push
cmp
test
ficomp
shl
mov
loop
mov
mov
mov
cmps
stos
jmp
gs
data16
dec
jnp
sub
ss
xchg
arpl
mov
jnp
ds
xor
push
movs
ins
adc
ror
push
fstp
push
mov
jae
xchg
mov
add
ror
sub
push
jg
rol
icebp
(bad)
and
mov
push
in
xchg
dec
rol
addr16
fsub
pop
cld
test
ins
xchg
mov
ja
movs
aas
test
add
repz
adc
sbb
ins
ficomp
xor
jae
mov
in
add
pop
scas
mul
hlt
mov
cmps
add
xchg
push
out
pop
push
cmp
xchg
shr
test
add
ins
mov
dec
clc
push
or
xchg
or
stc
inc
sub
ja
lods
xor
test
dec
inc
xor
and
out
push
std
cmps
dec
sub
(bad)
xchg
push
shl
xchg
pop
mov
mov
mov
push
inc
mov
fld
ss
cmp
mov
sub
mov
pop
pop
inc
cdq
jno
imul
ficom
mov
mov
fld
sbb
jg
xor
jg
pop
mov
jo
fs
mov
out
cs
cdq
sub
inc
mov
cwde
dec
mov
out
pop
lods
imul
jns
sbb
push
push
and
sub
cmp
mov
neg
pop
mov
leave
and
push
xchg
retf
mov
sbb
mov
add
and
xchg
lods
and
inc
jb
ret
or
sbb
stos
jg
xchg
bound
int
jl
pop
fwait
xor
imul
out
dec
lods
mov
xor
mov
or
js
xor
add
push
rcr
scas
shl
pop
push
(bad)
jns
cmc
inc
ret
imul
or
test
sbb
and
push
icebp
xchg
xor
sbb
outs
shl
sub
mov
sub
shl
or
mov
mov
call
stos
dec
shr
jmp
scas
sub
xchg
fsubr
leave
ins
repz
(bad)
push
push
stos
mov
xchg
adc
ret
pop
or
lock
mov
mov
fwait
cmps
mov
das
mov
jp
test
into
mov
jge
xchg
pop
mov
icebp
mov
and
cmps
jo
and
push
sub
movs
sahf
pop
and
xchg
or
jle
mov
push
xor
add
movs
pop
push
stos
mov
add
pop
sahf
cs
push
fld
add
test
cdq
xchg
add
jecxz
pop
(bad)
in
in
xchg
loop
inc
mov
jmp
movd
and
movs
mov
test
push
mov
int
nop
(bad)
sub
or
or
cld
mov
pop
and
das
stos
or
push
bound
push
popf
(bad)
jge
inc
jnp
mov
loope
jg
dec
adc
sub
push
add
cmp
adc
sub
mov
nop
in
ret
dec
sbb
and
inc
rcl
sbb
jae
ret
leave
test
mov
mov
(bad)
adc
push
inc
mov
retf
pop
das
shl
sar
dec
jb
ds
and
jo
hlt
xchg
mov
xchg
and
pusha
or
or
push
dec
cs
nop
or
push
xchg
retf
ins
pop
sub
mov
aad
sub
mov
hlt
in
imul
movs
loopne
mov
xchg
stc
mov
dec
mov
out
movs
ins
stos
jg
adc
sub
push
clc
movs
add
in
push
or
mov
jecxz
rcl
pushf
dec
xchg
sub
ret
addr16
test
add
idiv
add
push
out
cmp
dec
xor
adc
add
jp
push
cmp
push
mov
mov
pushf
add
cs
nop
out
cmp
xor
jno
xor
push
rol
cli
cld
ja
cli
and
inc
and
icebp
leave
test
and
xchg
push
adc
push
leave
nop
popf
push
test
cdq
jle
sbb
arpl
ret
mov
jp
or
mov
push
inc
and
and
jns
push
outs
xacquire
pop
xor
inc
cmp
inc
or
add
outs
out
lea
mov
mov
pop
jp
mov
data16
mov
stc
daa
fstp
push
mov
stos
mov
stos
dec
cmp
ja
push
jnp
mov
sbb
outs
mov
push
pop
iret
adc
sub
inc
push
aas
mov
lock
mov
call
aad
inc
(bad)
call
in
add
mov
icebp
jns
mov
fild
mov
add
mov
xor
scas
out
inc
mov
retf
jmp
or
xchg
arpl
dec
sub
xchg
jg
movs
xchg
ja
push
jp
adc
ins
ss
or
jmp
dec
jo
outs
mov
mov
mov
nop
scas
sbb
cld
adc
xor
xlat
and
jmp
adc
inc
mov
jl
repnz
cmp
sbb
es
sbb
lock
idiv
mov
xlat
or
bound
retf
nop
pop
sbb
inc
not
ss
enter
dec
sub
sar
jl
or
jbe
lahf
or
jle
cld
xchg
fdivr
sub
or
jno
ins
mov
xor
mov
(bad)
or
pop
lods
sbb
mov
not
imul
or
push
cmp
imul
les
and
pushf
sub
call
inc
inc
(bad)
neg
sub
ja
jnp
mov
aaa
daa
sub
je
arpl
push
(bad)
mov
repz
xchg
xor
xchg
mov
and
inc
mov
push
jnp
mov
and
or
sub
mov
jns
imul
(bad)
mov
sub
mov
js
std
pop
fadd
sbb
ds
jns
popf
ficom
jnp
xchg
jg
xor
mov
fiadd
icebp
push
cmp
sub
mov
ret
jae
and
adc
and
and
xor
div
pop
xchg
add
inc
ja
retf
stos
xor
pop
(bad)
ror
dec
mov
cmp
and
dec
xchg
mov
fisub
mov
add
mov
inc
fcmove
sbb
adc
mov
icebp
cmp
sub
mov
sar
(bad)
mov
test
mov
mov
xor
pop
lods
sub
shl
push
inc
mov
mov
pop
outs
cmp
jns
ror
rol
stc
retf
pop
aad
das
cmp
fdiv
lock
(bad)
popa
ins
mov
mov
nop
adc
seto
push
and
clc
into
push
add
retf
scas
or
cmp
call
jns
sub
adc
adc
fs
test
sbb
or
jmp
or
cmp
jmp
in
(bad)
std
test
stc
mov
mov
cld
dec
cmp
test
mov
in
seta
(bad)
int
in
jnp
inc
pop
push
mov
xor
cmp
dec
push
fdiv
pop
jae
add
jl
cwde
lods
out
pop
(bad)
dec
loopne
stos
ret
mov
jmp
sub
or
pop
add
mov
imul
jecxz
xlat
fidivr
pop
cmps
or
xchg
fisubr
scas
iret
jmp
xchg
cmp
adc
mov
mov
nop
xor
ret
ins
fwait
ja
ja
aaa
push
sub
and
shl
call
test
adc
movs
iret
mov
pop
sub
fdivr
sub
dec
cmp
(bad)
std
arpl
into
repnz
add
in
jp
es
call
mov
mov
div
aad
js
push
xor
pop
bound
or
into
push
xor
imul
jmp
sbb
stos
xchg
xor
jmp
mov
inc
cmp
sti
add
sub
adc
sub
push
outs
mov
jno
mov
popf
aaa
lahf
ss
in
addr16
out
ss
jmp
xchg
lods
stos
es
and
or
push
fsubrp
push
mov
push
sub
fs
(bad)
adc
aas
mov
push
mov
fwait
rol
jnp
mov
xlat
imul
cmps
push
sbb
add
test
dec
push
xor
inc
push
pop
push
dec
aas
je
sub
call
pop
sub
push
mov
hlt
cmp
mov
sub
push
repnz
jns
sub
mov
std
out
out
mov
dec
int3
or
jmp
inc
repnz
test
push
rol
loope
retf
imul
(bad)
stos
or
mov
scas
(bad)
mov
add
add
movs
adc
mov
int3
jecxz
mov
mov
cdq
mov
fnstcw
nop
rol
adc
or
loope
imul
and
ds
pop
retf
neg
push
mov
push
fs
data16
xchg
cli
pushf
arpl
in
aam
jns
pop
hlt
(bad)
mov
fcmovnb
out
shl
sub
inc
test
inc
(bad)
pop
add
and
movs
and
inc
nop
pop
xchg
inc
inc
pop
outs
inc
dec
sar
call
popa
shr
stos
sbb
jg
push
jp
xlat
test
mov
mov
or
cdq
sbb
sub
push
in
cmp
mov
jmp
js
and
repz
popa
mov
push
add
imul
mov
inc
pop
adc
xchg
std
xchg
ins
mov
icebp
sub
mov
sbb
repnz
(bad)
xchg
jmp
mov
pop
loope
jns
psubd
ins
add
fdecstp
sbb
mov
push
(bad)
sub
loopne
data16
int
push
and
mov
add
jecxz
add
js
dec
test
push
ins
inc
and
aaa
test
add
push
jmp
test
stos
sub
dec
hlt
push
cmp
sbb
mov
pop
jne
fist
arpl
ja
jo
pop
ds
shl
retf
jl
adc
xor
adc
daa
int3
jbe
bound
dec
mov
xchg
popf
cld
sub
les
add
sub
jb
sbb
cwde
mov
ret
rol
sbb
adc
daa
fldenv
xchg
ja
inc
ins
add
add
imul
jl
inc
add
cmps
add
mul
jp
mov
xor
fucom
adc
fistp
jg
sahf
cmp
push
lods
jl
xor
push
and
fidivr
pop
popa
repnz
dec
pop
push
scas
lea
int
shr
mov
test
adc
iret
mov
or
inc
inc
jp
push
xchg
test
mov
push
pusha
(bad)
test
mov
jbe
dec
push
nop
dec
mov
xchg
sar
or
push
pop
dec
and
movs
mov
fwait
jp
and
mov
jae
pop
xor
cmp
stos
xor
pop
out
add
stos
or
inc
mov
je
inc
out
movs
mov
mov
outs
mul
sub
call
jnp
fwait
add
aaa
mov
xchg
mov
bound
push
cwde
pop
mov
in
jno
push
aas
(bad)
xor
jbe
icebp
hlt
pop
test
mov
push
jl
push
cli
retf
or
mov
jbe
icebp
adc
loopne
mov
mov
xchg
xchg
xor
jbe
xor
jns
mov
mov
sub
mov
push
jbe
mov
icebp
out
imul
ins
ror
and
push
cmps
lock
lahf
lea
sub
sub
sar
jl
xchg
test
mov
sbb
not
mov
fsub
popa
mov
and
cwde
rcl
popa
jnp
dec
xchg
inc
push
jb
test
out
popa
and
test
or
and
jae
(bad)
dec
jg
mov
jae
loop
inc
inc
icebp
fmul
cs
into
pop
icebp
push
ret
pop
jl
xor
aaa
out
lods
cmps
std
xchg
add
hlt
pop
cs
jg
test
fild
mov
jae
xor
xor
pop
outs
xor
cwde
mov
sbb
jns
bound
shl
mov
rol
test
(bad)
mov
pop
mov
xchg
(bad)
repz
in
jl
pop
mov
test
jl
mov
stos
jg
pop
xchg
jg
call
call
jb
aam
int3
outs
and
jb
shl
outs
xchg
call
fild
add
call
fmul
jbe
lahf
sub
(bad)
dec
xchg
outs
mov
jae
adc
call
fadd
movs
imul
cmp
repnz
icebp
push
adc
iret
mov
mov
(bad)
cmp
dec
mov
shr
stos
clc
sbb
ret
inc
sub
jmp
stc
adc
rcl
xor
fisub
retf
add
sub
adc
dec
popa
adc
shr
jl
dec
arpl
ds
and
push
jp
jp
stc
scas
pop
pop
sbb
mov
add
bswap
dec
fstp
or
(bad)
pop
fsubr
mov
xchg
clc
aas
cld
lods
outs
add
adc
ret
push
gs
xchg
pop
xlat
(bad)
xchg
mov
xchg
add
mov
push
mov
aad
les
cmps
push
push
mov
je
inc
pop
cs
loop
inc
pusha
in
mov
scas
shl
jne
movs
mov
test
idiv
je
pop
retf
stos
inc
push
mul
mov
pop
imul
or
es
rol
int
mov
test
mov
mov
test
mov
dec
mov
mov
add
or
je
nop
jecxz
xchg
jmp
mov
clc
xchg
test
mov
aaa
movs
dec
cdq
je
inc
inc
cdq
retf
push
push
pop
jne
xchg
stos
push
rol
lea
mov
adc
mov
out
test
in
adc
inc
push
ja
adc
scas
jmp
adc
mov
out
stc
push
into
(bad)
jns
lock
and
sub
sub
cli
or
lea
or
rcl
(bad)
jl
jmp
mov
xor
xchg
sbb
loope
mov
pop
adc
rol
mov
dec
pop
xchg
xchg
pop
loopne
mov
cld
cmp
or
mov
xor
push
mov
dec
mov
adc
inc
pop
bound
outs
jl
fwait
push
in
cmp
aad
int3
(bad)
retf
out
aam
dec
sub
pop
fmulp
mov
mov
ds
int3
div
add
leave
jns
stc
push
sar
jp
(bad)
push
idiv
jbe
inc
lods
push
aad
add
out
retf
sahf
dec
cmps
dec
stc
scas
adc
push
jl
outs
pop
cld
(bad)
dec
aad
push
adc
mov
ds
stos
out
cs
add
and
call
int
lea
pop
fadd
call
aad
fbld
scas
and
loope
and
in
cld
mov
inc
jbe
fs
rol
sahf
jae
mov
test
daa
cmp
mov
xchg
ins
ins
mov
pop
add
or
xchg
push
stos
mov
pop
inc
cdq
retf
cmp
push
(bad)
pop
push
ss
mov
mov
(bad)
mov
scas
movs
push
or
push
mov
jo
pop
xchg
cmp
in
adc
xchg
cwde
xchg
call
movs
mov
div
dec
xor
mov
push
mov
push
test
jle
sbb
dec
or
fdivr
pop
jle
hlt
cmc
jmp
lds
lods
adc
jmp
lds
add
jg
mov
cld
and
aas
push
mov
xlat
stc
xchg
jbe
add
enter
dec
or
sbb
jno
int3
call
xor
retf
dec
pushf
into
(bad)
shl
test
or
movs
jns
lahf
cld
xchg
dec
xor
jg
lahf
out
cmps
ds
xor
mov
jmp
pop
lods
daa
cmp
pop
cmp
xchg
aaa
stos
adc
leave
xchg
mov
pop
or
and
adc
mov
adc
movs
push
shr
sbb
das
or
pop
out
mov
je
cmp
add
push
out
add
out
xor
mov
dec
js
push
pop
pushf
cld
cdq
push
bound
imul
into
mov
lahf
shr
(bad)
jb
xchg
nop
push
(bad)
jmp
jge
sbb
dec
rcl
sti
in
test
xor
cmp
js
add
and
popa
aas
xor
mov
cmp
in
cli
or
xchg
mov
adc
pushf
into
in
xchg
dec
jl
gs
lds
mov
cdq
(bad)
ins
add
les
inc
adc
shl
into
inc
jg
pusha
dec
cmp
sub
push
pop
jp
sub
pop
xchg
ja
leave
mov
call
pop
push
fadd
rol
jl
jns
add
mov
scas
shl
xchg
stos
bound
mov
inc
mov
mov
std
xchg
mov
stos
popf
mov
lahf
xor
and
pop
in
rcl
test
imul
nop
push
mov
fnsave
fs
pop
inc
movs
sahf
sub
neg
or
icebp
pushf
sub
push
movs
jge
call
sub
dec
dec
xchg
je
mov
popa
add
cmps
dec
dec
mov
jb
fild
pop
jle
shr
add
pop
test
push
pop
cld
jl
or
dec
pushf
daa
mov
stc
mov
test
loope
mov
loopne
jno
dec
clc
cmp
push
repz
jg
or
cmp
dec
out
push
ja
clc
popa
jo
xor
push
adc
ss
fisttp
movs
inc
xor
(bad)
(bad)
xlat
iret
jle
jmp
and
mov
and
xchg
stos
mov
pop
(bad)
es
xor
sbb
test
(bad)
je
cmc
pop
lods
shl
push
or
leave
jo
or
icebp
stos
cwde
dec
push
push
mov
cwde
or
mov
inc
stos
repz
test
test
movs
xchg
xchg
test
cmp
add
mov
(bad)
xchg
xlat
in
mov
sbb
ret
push
mov
dec
iret
daa
jnp
bound
xor
addr16
ins
repz
mov
mov
ins
rol
xor
mov
and
xor
dec
mov
sbb
mov
pop
and
das
cmp
xor
ds
dec
inc
js
sub
ja
and
addr16
pop
jmp
sbb
loop
xor
(bad)
mov
fmul
not
sub
add
dec
paddq
or
mov
mov
aad
dec
stos
mov
xchg
loopne
jns
and
and
xchg
mov
push
jnp
mov
inc
repz
clc
ret
pushf
inc
sub
arpl
cmp
dec
mov
pop
push
xchg
dec
in
sbb
sub
jmp
es
xchg
es
(bad)
add
into
sbb
or
pop
pushf
pop
nop
adc
out
jmp
push
jno
fistp
push
out
xchg
(bad)
xor
mov
sub
xchg
dec
xchg
out
(bad)
xor
and
int
adc
fsubp
loop
icebp
in
fwait
stos
add
add
jbe
jnp
pop
popf
retf
push
ret
shr
push
and
cwde
mov
dec
pop
mov
mov
dec
jns
mov
test
mov
cmp
and
jg
jle
mov
movs
loopne
jge
out
and
(bad)
cli
mov
push
sbb
cld
ins
cld
xchg
lea
scas
ret
jmp
mov
fild
or
or
add
loopne
outs
leave
in
out
xchg
xchg
jns
sbb
add
push
fs
hlt
retf
fdiv
xchg
retf
pushf
lock
sbb
jg
fdiv
lahf
and
loop
cmp
inc
mov
sbb
outs
lahf
lods
retf
in
cmps
sub
mov
int
jge
adc
adc
call
add
inc
or
sub
sbb
xor
lock
mov
cmp
repnz
out
xadd
pop
dec
xchg
xchg
pop
jo
ret
sbb
dec
das
mov
push
jns
lea
rol
xchg
or
repz
mov
movs
xor
xchg
mov
lods
push
or
mov
add
sbb
or
not
and
pop
push
fild
out
nop
jp
xor
out
fdivr
cmc
push
and
pop
cwde
jbe
lock
repnz
xchg
and
cs
scas
addr16
test
jle
push
shl
sbb
enter
mov
movs
jle
adc
push
test
mov
jne
mov
outs
xor
scas
mov
mov
inc
ins
inc
cdq
xor
jne
mov
mov
add
cmp
and
stc
aaa
jp
lods
xchg
mov
(bad)
xchg
mov
popa
pop
aam
mov
or
inc
call
mov
push
jl
jle
push
(bad)
sbb
and
jae
mov
das
mov
adc
cmp
pop
mov
dec
sahf
cwde
add
dec
aad
iret
push
mov
ret
adc
ror
cwde
or
xchg
jno
mov
(bad)
bound
pusha
xor
ret
xchg
pop
and
scas
or
push
(bad)
pop
test
cli
popf
push
(bad)
fwait
xchg
dec
ror
rcr
adc
inc
jbe
mov
inc
adc
push
ins
mov
pop
or
or
or
cmp
in
repnz
sbb
dec
and
stos
mov
or
addr16
popa
add
int
pop
mov
jne
dec
sbb
add
inc
pop
movs
outs
pop
in
sti
xchg
mov
cwde
call
push
xchg
xchg
imul
mov
ror
xor
sbb
movs
xor
and
push
imul
push
iret
mov
fmul
mov
pushf
jno
cmp
clc
add
xor
dec
add
mov
stos
sub
lods
add
sbb
fidiv
mov
cli
fnsave
int3
dec
out
lock
pop
lods
test
ins
bound
or
dec
xchg
enter
lahf
int3
mov
lock
cmc
outs
nop
jl
xor
mov
cs
push
mov
jg
mov
xchg
sbb
icebp
scas
cli
or
xchg
pop
mov
adc
sub
into
and
lods
adc
and
xchg
jl
(bad)
fmul
adc
cmp
mov
loope
push
cmps
lock
cld
out
fdiv
cmc
es
aas
mov
add
es
cmp
or
xor
pop
lock
adc
in
sbb
ja
sbb
jmp
cmp
jle
and
test
aas
jnp
fistp
push
popa
inc
out
xor
pop
add
dec
out
inc
lods
les
push
push
mov
lods
test
test
xor
cmps
xchg
mov
xchg
hlt
xchg
and
nop
inc
aas
mov
pop
add
push
mov
shl
call
or
push
mov
loope
push
sahf
or
sbb
out
sub
icebp
push
xor
push
cmps
xchg
(bad)
mov
sti
cmp
sub
mov
mov
adc
pop
push
mov
int
stos
xchg
mov
cld
aam
cmp
pop
pop
push
loopne
sub
cmp
retf
fisub
out
out
push
sbb
mov
jae
xchg
not
xchg
retf
adc
mov
jle
pop
call
repz
stos
cmps
aas
inc
adc
ja
pop
loopne
mov
jnp
jmp
push
pop
xchg
ror
loopne
sbb
xchg
aas
leave
add
ror
and
push
(bad)
nop
std
lds
repz
jmp
sub
ret
cmp
pop
xchg
xor
adc
jb
retf
mov
add
or
sub
jmp
and
and
adc
cmp
mov
retf
cli
int3
adc
repz
xchg
jle
scas
test
repz
push
jl
jne
movs
inc
push
repnz
bound
outs
into
cs
dec
adc
aas
sti
jl
jb
xchg
imul
add
mov
add
inc
sbb
push
fsub
add
mov
push
pop
push
loope
test
pop
aam
aam
xor
pop
jns
(bad)
sbb
dec
push
int3
jmp
lea
cmp
call
push
movs
into
lea
mov
jbe
jo
xchg
test
out
xor
jae
xor
jns
cwde
lahf
xchg
cmc
aad
out
dec
mov
test
mov
outs
sbb
sar
pop
mov
jge
sbb
aas
mov
add
xor
or
xchg
jl
call
or
ja
pop
and
daa
sub
push
or
ins
fdivr
sub
mov
stos
mov
ins
hlt
and
cmp
test
sub
(bad)
mov
imul
dec
xchg
in
mov
push
push
jg
mov
xor
imul
pop
mov
add
and
pusha
add
data16
cmp
xor
adc
out
stos
dec
mov
imul
xor
fmul
jae
or
pop
popa
pushf
sub
jns
adc
mov
sbb
sbb
xor
xlat
mov
(bad)
or
inc
add
push
or
leave
in
adc
cld
das
or
scas
cmp
cmp
fst
adc
pop
nop
arpl
popa
mov
sub
pusha
mov
test
rol
xor
ins
sub
add
call
test
dec
out
add
adc
fisttp
add
push
cmp
sub
push
repz
pop
xor
stc
pop
mov
imul
sti
xchg
mov
dec
retf
fcomp
jb
sti
test
fisttp
mov
repnz
xchg
sbb
call
test
push
jmp
ret
or
add
int3
mov
push
mul
push
arpl
leave
mov
mov
ss
add
inc
dec
or
mov
mov
mov
stos
push
xor
sub
xchg
mov
enter
leave
mov
inc
nop
pop
inc
test
mov
(bad)
dec
hlt
mov
add
pop
leave
ds
jno
sbb
movs
loop
js
fwait
push
popa
mov
scas
loop
fwait
loop
data16
rcl
push
test
sub
test
mov
scas
lock
push
rcr
sbb
lds
mov
(bad)
mov
repz
push
push
mov
neg
mov
out
loopne
or
jl
test
ins
mov
jae
dec
fisub
pop
inc
cmp
in
sub
xchg
mov
sbb
push
(bad)
dec
outs
sub
inc
(bad)
(bad)
xor
xchg
call
movs
sahf
jmp
dec
mov
rcl
add
adc
cs
lock
cmp
dec
lods
mov
repz
xchg
sbb
mov
push
xchg
shr
add
add
lds
add
iret
sbb
retf
mov
stc
retf
lea
cmp
std
jmp
xor
fisub
mov
retf
ret
mov
loopne
jl
dec
repz
push
jno
fsubr
cs
xchg
push
je
fild
imul
add
or
xor
clc
sub
jl
cmp
adc
lea
push
push
out
pop
cmp
jg
fdivr
jg
push
mov
call
std
js
nop
pop
jecxz
pop
add
call
xchg
(bad)
(bad)
es
mov
add
sub
ficomp
outs
push
sahf
iret
out
add
fs
int
leave
mov
xchg
shr
inc
push
jns
cmc
jp
ret
add
or
jns
pop
scas
sub
gs
popa
movs
cli
shr
mov
mov
adc
mov
je
das
mov
xor
repz
scas
ror
dec
xchg
cmp
outs
ret
test
cli
mov
mul
add
lahf
je
lds
imul
outs
fs
xchg
xor
and
jno
jmp
and
in
and
or
dec
add
or
mov
sbb
rcr
iret
icebp
loop
mov
adc
push
mov
scas
mov
mov
retf
sbb
sbb
dec
outs
or
int
push
cmp
push
adc
scas
jnp
lock
and
shl
(bad)
sbb
xchg
mov
mov
add
sbb
xchg
jb
outs
jp
xor
or
hlt
stos
iret
scas
cmp
fwait
rcr
(bad)
out
out
jae
inc
ret
xchg
stc
mov
cdq
sahf
addr16
mov
outs
add
gs
xchg
imul
xchg
or
pop
push
push
sbb
not
jp
jg
inc
stc
and
jg
inc
add
je
mov
loopne
jecxz
(bad)
retf
fisttp
das
push
leave
daa
xor
push
pop
aaa
test
or
leave
sbb
iret
dec
pop
jp
dec
add
ss
sbb
and
cli
pop
sbb
and
es
push
stos
(bad)
and
add
pop
or
jbe
pushf
in
and
fcmovnbe
adc
mov
add
retf
dec
mov
loope
dec
mov
jo
clc
or
adc
(bad)
jg
out
pop
shr
or
push
xchg
mov
arpl
leave
retf
repnz
add
jo
mov
push
(bad)
js
sub
data16
inc
xchg
inc
pop
jmp
jge
xchg
jnp
clc
mov
and
or
fisub
outs
mov
add
mov
xor
mov
(bad)
outs
pop
dec
hlt
mov
scas
push
xor
cmps
into
addr16
addr16
or
in
xchg
imul
out
(bad)
xlat
sbb
add
(bad)
daa
gs
fcomip
fistp
stc
xor
fstp
adc
mov
pop
outs
ror
dec
jno
push
pop
or
jns
loopne
icebp
mov
lahf
sbb
add
sbb
dec
jp
xchg
int3
aaa
retf
test
les
pop
dec
rcr
test
idiv
not
or
cmc
stos
sub
(bad)
adc
or
sub
mov
scas
cwde
shr
push
sub
add
mov
or
xlat
test
jmp
in
shr
(bad)
sti
cld
inc
je
in
int
xchg
sbb
scas
in
sub
inc
cmc
dec
int3
retf
std
(bad)
sti
push
repz
fs
and
jno
pop
leave
addr16
push
mov
dec
cmc
jl
push
mov
imul
enter
repnz
test
pop
sbb
fidivr
ja
loopne
mov
ss
mov
push
adc
xchg
out
sbb
mov
jne
mov
cmp
adc
mov
sub
and
xor
stos
das
scas
enter
ja
rcr
adc
cdq
jmp
adc
clc
jg
scas
mov
fsub
adc
inc
jo
cld
jae
movd
xchg
and
ja
xchg
pop
sub
add
xchg
sub
pop
jbe
and
push
push
retf
addr16
xor
mov
push
pop
mov
jb
test
(bad)
es
jmp
in
setne
push
adc
aad
xchg
dec
add
ds
mov
push
mov
add
clc
arpl
(bad)
stos
jmp
fs
sub
(bad)
pop
xlat
test
int3
pop
mov
into
xchg
in
inc
outs
cmps
cmp
fs
push
cmc
scas
fwait
xchg
(bad)
psubd
(bad)
push
dec
shl
scas
mov
out
add
jl
inc
dec
push
gs
bound
inc
ds
mov
ret
ja
and
(bad)
imul
cmp
cmp
pop
dec
fisub
jmp
not
adc
cmp
pop
jmp
adc
loopne
inc
pop
push
inc
add
mov
pop
aaa
pusha
push
shl
ja
cmp
cmp
scas
pop
mov
xlat
call
jns
xchg
mov
sub
pop
mov
adc
cmp
adc
ror
retf
stos
lods
jecxz
jle
jnp
sub
scas
add
jae
cmp
cli
jecxz
pop
and
xchg
jg
sti
test
jae
imul
mov
or
ja
ficom
mov
shr
jae
and
push
cli
mov
ret
ins
sar
ficom
cmp
retf
jnp
xor
sub
sbb
icebp
mov
mov
mov
xor
(bad)
cmp
or
pop
sar
xchg
inc
or
das
sbb
cmps
loope
jnp
adc
nop
into
dec
retf
lods
arpl
rcl
sar
jbe
or
ss
daa
push
sub
mov
jge
or
pop
rol
sub
sbb
sbb
scas
ret
pop
mov
xor
mov
in
jmp
push
push
dec
imul
adc
jo
cmp
div
arpl
arpl
jo
inc
jle
xchg
xchg
addr16
pop
arpl
mov
lods
lahf
add
pop
cs
dec
(bad)
xchg
mov
jo
inc
sub
in
iret
neg
push
out
mov
push
mov
addr16
mov
mov
xchg
arpl
push
in
outs
es
push
into
push
jno
popa
jbe
outs
jb
ret
or
and
sti
shl
es
cmp
outs
cmps
pop
sbb
(bad)
jmp
jnp
adc
mov
mov
sahf
inc
xor
cs
jo
dec
xchg
xchg
repz
jbe
inc
lods
cmp
add
fadd
dec
rcr
sbb
dec
pop
scas
idiv
add
imul
scas
aam
enter
pop
shl
sahf
out
push
(bad)
fdivr
push
fiadd
mov
repnz
imul
push
icebp
mov
aas
jno
shr
ret
dec
fadd
shl
sub
iret
add
cld
pop
int3
shl
pop
retf
xchg
(bad)
and
ins
pop
sti
das
inc
lods
(bad)
xor
sub
mov
pop
dec
jae
pop
xor
push
dec
add
fucomip
add
jg
xchg
add
jmp
das
xchg
(bad)
mov
adc
in
push
(bad)
int3
stos
aaa
inc
mov
test
push
fucomip
or
stos
stos
push
mov
jmp
adc
test
or
inc
and
arpl
stos
xchg
in
cmp
aaa
mov
pop
test
jb
dec
lock
push
and
sub
push
pusha
adc
sti
call
aad
ret
(bad)
aam
inc
add
mov
test
xchg
sub
rol
test
outs
scas
sbb
jnp
cmp
mov
jbe
aam
outs
lock
repnz
icebp
dec
dec
mov
push
mov
mov
(bad)
jecxz
xlat
inc
cs
imul
mov
inc
pop
inc
mov
push
inc
outs
pop
push
popf
(bad)
out
and
imul
cmps
ins
pop
(bad)
mov
cmp
outs
jp
fisttp
mov
in
push
arpl
or
xchg
add
ins
pop
and
pop
imul
adc
scas
arpl
sub
cmps
pop
xor
sahf
outs
out
ror
lods
test
mov
dec
inc
out
and
cmp
jl
push
fcmovnb
dec
inc
hlt
mov
dec
int
pop
xchg
push
mov
(bad)
adc
jge
sub
mov
aaa
push
int
inc
mov
iret
outs
scas
fld
pushf
imul
aaa
mov
mov
cmp
aas
cmps
xchg
test
shl
test
or
call
in
into
arpl
jne
out
pop
mov
scas
mov
sbb
imul
sti
mov
fabs
jns
cmps
das
shl
inc
push
sbb
add
mov
aad
adc
test
push
xchg
dec
sub
inc
xchg
das
push
mov
outs
scas
mov
mov
sub
ret
jmp
xchg
(bad)
and
outs
dec
cli
cmp
pop
mov
outs
mov
jae
cld
adc
mov
scas
xchg
xor
jb
xchg
xor
ret
ficom
mov
jnp
mov
les
or
aas
outs
inc
cmp
test
inc
scas
fwait
stos
jg
pop
adc
and
inc
ret
push
popf
int3
xchg
scas
loopne
push
cmps
add
leave
pushf
xchg
xchg
add
retf
stos
adc
idiv
push
inc
add
push
adc
pop
dec
or
(bad)
out
add
jg
out
or
or
mov
add
jg
cmp
cmps
mov
psrlw
push
retf
scas
rol
and
or
iret
test
ret
loop
icebp
xchg
pop
or
mov
stos
loopne
(bad)
stos
mov
daa
cs
adc
inc
cwde
repz
mov
fsubr
xchg
mov
test
ror
push
ss
xchg
sub
retf
inc
jb
das
leave
repz
aad
cmp
cmps
rcr
mov
or
int
fdiv
pop
sbb
adc
test
mov
pop
(bad)
sbb
cdq
or
scas
xchg
add
test
jae
shl
aam
xchg
aaa
mov
pop
out
adc
pushf
mov
xchg
and
add
lea
mov
cdq
pop
fld
push
in
mov
adc
xchg
dec
sub
je
jmp
and
into
sbb
out
loopne
outs
aad
call
icebp
mov
pop
sub
xchg
pop
retfw
icebp
popf
enter
lock
mov
push
and
dec
scas
or
pusha
bound
pop
loopne
or
aad
jl
addr16
mov
push
xchg
(bad)
gs
arpl
dec
xchg
add
mov
call
aam
sub
adc
or
lods
mov
xor
mov
(bad)
xchg
ret
cdq
mov
add
call
xor
idiv
push
daa
xchg
jb
or
jecxz
push
int
idiv
pop
push
mov
add
adc
pop
fdivp
xchg
adc
xchg
js
sub
xor
movs
int3
mov
out
sbb
sub
add
mov
push
xor
movs
mov
add
adc
movs
hlt
retf
xor
retf
adc
jecxz
and
int3
xchg
or
dec
xchg
bound
xchg
sti
movs
dec
in
jle
popa
in
icebp
dec
cmp
test
push
out
xor
cmc
mov
hlt
cld
mov
push
in
cmp
inc
stc
push
dec
push
mov
jmp
jns
inc
movs
add
clc
les
into
leave
dec
pop
lods
bound
loope
stos
sbb
dec
adc
xchg
add
pop
and
loope
gs
sub
or
and
loop
sbb
jno
mov
bound
mov
test
gs
outs
scas
lods
mov
vpsubb
pop
icebp
or
addr16
outs
jns
add
enter
cwde
cmp
loopne
xchg
pusha
daa
mov
push
push
sbb
pop
ins
(bad)
or
pop
pushf
inc
sub
mov
add
jl
rcl
or
mov
jge
in
mov
push
lahf
mov
popf
out
push
rol
inc
cmc
push
dec
dec
stos
jno
pop
mov
push
mov
dec
sub
jnp
rol
not
addr16
call
outs
pop
push
pop
mov
ss
shl
cmp
stos
retf
int3
mov
ror
dec
not
out
ror
jle
aas
in
popa
push
mov
mov
int
xchg
es
add
mov
add
cmp
sbb
or
lods
jnp
jo
jae
or
push
pop
adc
push
jge
in
repz
sti
mov
jmp
(bad)
sub
sar
mov
jg
inc
movs
inc
mov
or
mov
outs
sbb
test
pop
fwait
inc
xchg
mov
inc
push
dec
mov
xor
pop
pop
ficom
(bad)
addr16
lods
into
cmps
jge
mov
addr16
fisub
hlt
pushf
xchg
push
hlt
jge
aaa
fs
or
xchg
and
hlt
sub
popa
rcr
dec
dec
clc
jne
pop
inc
push
sbb
jg
push
dec
ds
xchg
loope
ins
in
in
push
test
fiadd
addr16
jae
sbb
mov
ins
push
xchg
inc
fidiv
inc
call
xor
shr
test
aas
mov
inc
mov
or
daa
push
sbb
imul
add
fimul
add
fild
push
daa
adc
test
clc
ficomp
xchg
scas
loop
pop
inc
jb
imul
ret
mov
dec
test
adc
out
call
ss
stos
loop
arpl
fs
(bad)
dec
jns
inc
ror
sar
inc
pop
sub
add
add
es
scas
and
dec
mov
jle
inc
inc
mov
out
jmp
cmp
jg
repz
int3
imul
or
idiv
gs
or
sbb
jl
(bad)
outs
mov
test
nop
cmp
push
jb
inc
xor
mov
sub
ret
lods
cwde
dec
das
push
popf
cdq
rol
jae
mov
dec
push
fisub
jmp
dec
setg
mov
inc
in
and
ret
mov
fwait
sub
mov
inc
dec
retf
and
add
push
das
xchg
pusha
aam
dec
sub
xchg
sbb
mov
sar
out
cmps
jmp
shl
leave
int3
xchg
and
adc
dec
sub
mov
mov
push
outs
add
cmp
clc
loop
jl
push
leave
push
outs
jle
jmp
ja
mov
mov
pop
aas
push
adc
dec
cmp
push
es
dec
sub
or
jae
daa
pop
dec
nop
js
fwait
sub
mov
movs
movs
loopne
and
ficomp
push
xor
mov
aaa
push
stc
mov
mov
add
scas
ss
push
and
loope
sbb
mov
push
shr
aaa
retf
movs
test
sub
mov
adc
xor
mov
xor
inc
sbb
inc
sbb
xchg
push
sub
ins
out
outs
stos
pop
add
(bad)
pop
retf
ret
pop
ficom
rcl
adc
pop
sahf
js
mov
pop
sbb
lea
dec
aaa
dec
sub
adc
stos
clc
imul
lods
loopne
enter
mov
and
sub
or
dec
pop
or
loop
fcomip
mov
sub
pop
jb
gs
daa
inc
pop
stos
mov
cs
xor
xchg
add
xlat
cld
inc
dec
bnd
or
icebp
dec
pusha
imul
sub
xor
sub
sub
ror
inc
icebp
sbb
jecxz
sbb
cwde
push
xchg
out
arpl
mov
cli
add
outs
bound
and
or
or
dec
push
pop
mov
xchg
jae
enter
push
pop
(bad)
push
pop
hlt
jmp
int
lock
and
or
mov
inc
mov
jg
mov
and
mov
(bad)
jb
jae
and
cmps
ss
pop
mov
shl
add
jl
repz
scas
jmp
test
lods
(bad)
inc
test
xor
fild
(bad)
xor
jb
test
cmp
mov
xor
jle
jne
loopne
mul
or
sbb
jle
push
add
movs
outs
call
xchg
scas
and
repz
std
mov
adc
fdiv
xchg
addr16
xor
test
(bad)
push
out
shl
ror
jp
mov
retf
xchg
push
mov
and
or
movs
jbe
cmps
push
sbb
hlt
shl
or
cwde
sbb
pop
mov
je
add
scas
js
dec
xlat
xlat
jns
in
sub
adc
dec
or
popf
sub
rcl
das
shl
sub
jnp
test
mov
xor
adc
scas
aaa
pop
sbb
stos
scas
ror
xor
test
ret
add
mov
stos
fs
arpl
fadd
loopne
into
mov
and
scas
das
rcl
pop
pop
xor
loope
loop
call
pusha
mov
adc
add
push
ins
or
enter
mov
add
sub
push
ins
lods
push
call
mov
mov
sub
xchg
push
addr16
test
ror
ror
das
push
jmp
jge
loop
ds
loop
push
xchg
pop
test
in
pop
aas
and
inc
push
adc
adc
aas
push
sbb
leave
(bad)
sbb
inc
int
lods
sti
call
xor
push
xchg
jmp
shl
xchg
out
sub
push
popa
clc
movs
(bad)
xlat
ja
mov
xchg
mov
loopne
xor
xchg
push
stos
lahf
in
stc
or
push
leave
inc
stos
addr16
or
lahf
push
xor
jmp
bound
or
jb
ret
and
jb
xchg
mov
inc
push
mov
cmp
add
fisubr
pushf
imul
xchg
dec
pop
push
push
mov
push
inc
ficom
xchg
adc
xchg
cli
xchg
cmp
mov
xor
xchg
test
push
push
mov
mov
push
pushf
fs
stos
mov
pushw
dec
inc
sti
es
jp
cmp
test
(bad)
and
lods
sub
mov
stos
popa
push
jo
push
mov
aad
push
push
and
outs
push
inc
push
cmps
jg
lds
lods
push
idiv
dec
push
ds
outs
dec
aas
dec
mov
sub
mov
xor
mov
stos
movs
jl
cld
test
or
push
jmp
push
or
jmp
xchg
xchg
cmp
sbb
or
popf
or
sbb
pop
xor
push
xor
and
fdiv
mov
inc
ins
xor
add
cmc
lds
(bad)
and
les
movs
cwde
cs
xchg
xchg
inc
daa
and
cs
ins
bound
add
jne
sbb
stc
inc
jns
and
jo
adc
inc
sbb
jb
cmp
pop
push
data16
leave
dec
and
dec
idiv
jb
fnstenv
(bad)
and
sub
add
pop
and
fisubr
ret
or
pop
cmps
cmp
(bad)
dec
test
aaa
imul
mov
fidivr
fnsave
jg
adc
xlat
pop
jg
dec
add
test
div
adc
mov
add
and
rcl
dec
jb
je
push
add
sbb
sar
retf
xchg
add
dec
jmp
push
xlat
pushf
sahf
xchg
into
inc
aas
in
push
push
and
pop
dec
sub
ds
cld
stc
push
pop
inc
cmp
sbb
enter
sub
enter
xor
pop
xchg
sub
das
cmp
cld
and
push
out
rcr
dec
cld
ja
cmp
add
int
add
xchg
xchg
cld
cld
xor
repz
lahf
not
mov
dec
or
push
pop
cmp
ret
std
jo
daa
stos
jg
xchg
pop
add
pop
add
xchg
fnstcw
ins
add
in
imul
add
and
pop
xor
or
retf
xrelease
pop
pop
mov
ret
js
rcl
dec
adc
fild
xor
movs
retf
cdq
push
pop
mov
mov
fwait
rcl
push
cli
(bad)
push
jno
inc
adc
(bad)
pop
enter
leave
jl
push
nop
xor
call
loopne
jb
dec
fldenv
call
loope
mov
pop
push
ds
mov
loope
jne
jb
or
aas
ret
push
js
mov
js
bound
pusha
sub
test
jae
or
cli
cmp
aam
mov
add
test
sar
inc
stos
mov
add
test
das
cli
sti
das
mov
xor
outs
std
or
xor
cdq
scas
jo
xchg
aam
aas
dec
lods
adc
ret
push
std
inc
mov
test
mov
fwait
push
repnz
or
inc
neg
dec
and
add
mov
xor
pop
and
xor
shl
retf
inc
jo
je
adc
mov
repz
das
add
hlt
inc
jne
sbb
outs
cli
cmp
adc
pop
pop
call
dec
fcmovbe
sub
pop
xor
icebp
adc
dec
mov
cmp
add
xlat
mov
(bad)
in
mov
addr16
fistp
movs
mov
(bad)
aaa
jl
mov
add
sub
hlt
pushf
mov
mov
fcmovnb
and
cmp
movs
dec
out
retf
push
mov
push
lahf
dec
scas
imul
mov
mov
in
pop
mov
int
(bad)
das
sbb
jg
cmp
sub
mov
push
repnz
add
pop
out
mov
sub
sbb
inc
and
mov
loope
retf
sub
stc
lahf
mov
and
inc
(bad)
loope
xor
fs
sbb
hlt
clc
pusha
jmp
sub
push
push
pop
lds
shl
fdiv
cmp
xor
(bad)
sub
nop
add
sahf
mov
inc
pop
sbb
add
movs
lock
xor
stos
test
mov
out
add
add
jg
jb
cmp
sub
sub
cmp
retf
fld
mov
push
inc
dec
inc
aaa
pop
jmp
and
push
out
(bad)
dec
stos
push
or
mov
stos
pop
add
sbb
jle
xchg
or
and
retf
sbb
jl
aas
mov
(bad)
fwait
adc
test
retf
push
jne
ja
mov
cmc
add
ds
xchg
fcomi
popf
xor
adc
dec
and
in
cmp
fimul
pop
xlat
jmp
sbb
std
cdq
sub
mov
in
add
mov
sub
dec
push
or
mov
or
shl
jle
cli
xchg
jb
pop
add
ror
call
push
test
mov
mov
and
outs
sahf
lds
(bad)
adc
test
ins
imul
cmp
jle
lea
pop
inc
pushf
sbb
inc
hlt
aas
data16
pop
pop
adc
sti
or
dec
movs
test
ret
addr16
xchg
scas
dec
inc
xor
hlt
lods
test
and
adc
jle
and
push
mov
cwde
jge
and
ins
xor
mov
and
pop
lds
lea
xlat
test
arpl
js
pop
test
cs
inc
test
stc
cmp
mov
pop
push
lock
retf
loopne
xchg
enter
cmp
iret
mov
sbb
arpl
or
repz
or
addr16
pop
pop
test
xchg
push
fsubr
add
outs
imul
xor
mov
cs
dec
fwait
shl
loop
jae
int3
fnop
cmp
stc
xchg
and
inc
push
cmc
sbb
add
mov
fisubr
jge
xchg
push
outs
add
sub
xchg
(bad)
xchg
add
add
(bad)
push
mov
sub
fdivp
push
xor
jnp
movs
outs
add
xchg
inc
imul
out
fs
test
retf
icebp
adc
or
sub
out
outs
(bad)
adc
(bad)
pushf
stos
data16
add
retf
or
ja
and
jo
fcmovbe
inc
pusha
sbb
mov
rol
stos
outs
sbb
pop
cmp
outs
out
iret
pop
sbb
rcl
xlat
mov
cli
adc
into
adc
xchg
xchg
push
mov
add
sub
stos
mov
ret
test
xchg
add
xchg
mov
adc
imul
inc
or
rcr
mov
mov
jmp
and
or
dec
ror
popa
dec
xchg
aam
loopne
(bad)
clc
js
mov
push
and
jle
adc
ss
in
cmp
retf
inc
xchg
mov
mov
(bad)
loope
mov
div
in
or
sbb
ficom
repnz
mov
mov
loopne
or
pop
gs
ins
ret
or
push
push
dec
xor
xchg
es
mov
imul
lods
ja
pop
mov
js
adc
inc
push
pop
pop
scas
call
mov
cli
mov
jnp
cmc
inc
test
sub
jle
paddd
push
sbb
jg
sbb
mov
mov
gs
jnp
add
dec
xchg
jo
scas
test
xor
inc
inc
loopne
pop
les
fs
add
mov
cmp
ja
mov
xor
test
mov
icebp
(bad)
jo
test
jle
dec
loope
add
test
repz
add
xchg
xlat
pop
stos
mov
sahf
xor
push
jg
jns
addr16
addr16
cmp
add
cli
sub
mov
dec
lock
dec
xchg
(bad)
mov
inc
cmps
jo
inc
sbb
lock
js
push
mov
mov
repz
push
sub
pop
shl
nop
sub
mov
stc
inc
enter
rol
aas
adc
test
jns
mov
inc
mov
xlat
(bad)
jmp
or
outs
fld
inc
sub
clc
je
les
in
stc
dec
push
aam
xchg
push
mov
xor
push
cmp
mov
xor
xlat
jmp
pextrw
outs
mov
mov
sti
jmp
cwde
(bad)
retf
fs
cs
enter
lock
push
xor
in
xchg
sub
xor
or
mov
pop
push
scas
repz
xchg
cmp
dec
in
pop
adc
clc
pop
out
(bad)
push
outs
inc
and
ds
je
pop
cld
lock
mov
xchg
in
pop
sbb
mov
hlt
or
cmp
test
adc
pushf
add
push
(bad)
jnp
cmp
pop
jl
sub
arpl
hlt
test
cwde
out
xchg
test
dec
into
mov
push
dec
pushf
jl
imul
cmp
push
ins
(bad)
and
clc
sbb
jae
mov
cdq
push
es
jo
xor
push
out
sbb
mov
adc
xor
pop
fucomp
outs
outs
dec
inc
iret
jge
lock
cmp
daa
stos
lods
mov
adc
sahf
cmp
ins
add
add
xchg
mov
jae
stos
sbb
lahf
cmp
stos
fidiv
push
lods
hlt
aad
mov
cli
pop
lods
in
lea
inc
sbb
rcl
scas
cld
add
clc
cmp
enter
ret
pop
sub
sub
or
jg
je
cmc
rol
movs
push
in
ds
popf
adc
imul
ucomiss
out
fdiv
mov
loop
shl
dec
pop
jmp
aaa
cwde
jns
and
and
ret
xor
aaa
(bad)
(bad)
ss
cmp
cld
(bad)
pop
push
retf
fbld
call
test
cwde
fadd
dec
test
hlt
cmc
ret
int3
adc
pop
and
hlt
scas
inc
cmp
popf
adc
fst
mov
inc
cli
std
adc
enter
out
(bad)
mov
cmps
sub
sub
jbe
push
push
iret
jmp
xlat
xor
mov
mov
mov
xor
scas
jp
in
inc
xlat
xor
adc
or
push
gs
popa
cmp
add
mov
or
xlat
into
push
jo
mov
jnp
mov
sbb
push
push
jne
sub
mov
aaa
adc
pusha
jb
test
push
xlat
or
push
test
retf
(bad)
loope
leave
repz
in
mov
add
jae
jmp
int3
hlt
arpl
test
and
ficomp
mov
fldenv
mov
cmp
int3
xchg
or
in
jnp
fistp
jmp
pop
cwde
movs
xchg
das
stc
leave
sbb
retf
pop
inc
sub
or
rcl
lahf
xchg
mov
icebp
cmps
jecxz
adc
in
cmc
and
and
jmp
aaa
push
rol
adc
sbb
js
out
push
xchg
push
push
pop
cmp
aad
mov
rol
sub
xchg
ins
hlt
cli
std
sahf
retf
sub
inc
push
je
rcr
out
sahf
dec
jnp
imul
mov
mov
mov
xor
or
mov
data16
in
push
jmp
push
aam
daa
dec
mov
xor
pop
jno
in
xchg
js
cs
sub
test
add
js
call
lods
cmps
and
add
mov
mov
call
xor
outs
pop
std
(bad)
les
jp
dec
fstp
pop
out
or
cmp
jo
mov
mul
cdq
xchg
pusha
dec
sub
out
aaa
mov
pop
dec
push
add
push
sar
cmp
xchg
mov
mov
ds
jae
and
push
sub
mov
int
sub
add
xor
dec
scas
outs
jmp
dec
fnstcw
sbb
dec
xor
cmc
dec
fadd
lds
je
jae
jbe
nop
(bad)
std
sub
movs
fadd
push
mov
sbb
div
call
cs
out
in
movs
sbb
sahf
in
ss
jnp
mov
push
mov
add
xchg
mov
or
sub
add
sub
lds
mov
add
xchg
retf
pop
inc
jmp
jns
or
mov
mov
outs
adc
sbb
out
push
mov
dec
xchg
jge
(bad)
ins
jmp
inc
aam
js
icebp
test
mov
fnstsw
jl
xchg
fwait
and
outs
ins
(bad)
ins
jmp
inc
adc
and
lea
add
loop
stos
xorps
mov
push
out
add
shl
bound
mov
pusha
push
lea
push
loop
imul
and
inc
jns
xchg
dec
ins
jbe
jnp
xchg
mov
bound
mov
out
jb
or
fsubp
sub
xchg
pop
loop
lahf
call
test
cmp
out
dec
rol
ja
adc
sub
out
stos
lods
push
mov
pop
les
movs
jno
pushf
dec
jmp
mov
in
adc
(bad)
or
dec
lahf
inc
fild
data16
cdq
inc
(bad)
push
sub
cmps
test
or
mov
call
dec
add
add
(bad)
fmul
xor
dec
test
(bad)
stos
jae
ret
loop
mov
stos
adc
pusha
jns
inc
pusha
push
or
aaa
cmp
add
mov
xchg
enter
adc
mov
mov
push
mov
add
shl
and
cmc
mov
movs
int3
and
jno
data16
push
cwde
cmps
jne
xor
pop
push
xchg
call
cld
pop
call
sahf
cmp
fwait
bound
and
adc
push
jno
pop
not
ds
sahf
popa
mov
lock
xor
inc
arpl
cmp
xchg
push
adc
mov
fwait
xor
loop
pop
imul
or
retf
outs
mov
mov
or
push
movs
push
rol
test
mov
jge
pop
pop
sub
push
push
imul
lock
pop
pop
xor
and
sub
adc
ret
mov
add
mov
fiadd
fnstenv
mov
leave
mov
(bad)
ins
js
cmp
stos
inc
and
adc
lods
mov
repz
cmp
pop
push
dec
movs
stc
out
addr16
jp
cld
cld
push
cwde
sub
sub
lock
adc
pop
adc
sub
and
xor
cdq
xor
push
jno
or
or
add
pop
mov
xor
push
push
mov
cmp
movs
pop
mov
call
push
push
cmps
stos
xchg
cmp
dec
xchg
or
push
ins
cwde
fmul
mov
ret
leave
test
xchg
xchg
es
jle
mov
jecxz
or
mov
(bad)
mov
arpl
(bad)
cwde
pop
add
dec
or
inc
push
and
pop
xor
ins
push
push
int3
stos
xor
stc
nop
in
jnp
push
jmp
xor
(bad)
add
enter
pop
xchg
lods
push
push
sbb
in
ins
push
push
push
jae
dec
xchg
and
std
mov
and
mov
dec
xlat
mov
mov
adc
jg
xchg
push
out
cld
pop
call
pusha
pushf
bswap
mov
pop
rcr
push
std
push
scas
pop
add
div
imul
inc
repz
sahf
shr
sub
push
pop
cwde
jnp
xchg
sbb
call
xor
sbb
dec
into
push
xor
fs
push
mov
cmps
imul
std
xchg
call
sbb
icebp
lds
lods
push
retf
test
js
pop
pushf
jl
xor
dec
mov
and
xchg
ins
dec
adc
xchg
(bad)
outs
stos
ds
sub
mov
cmps
adc
cmp
sub
(bad)
mov
xor
fistp
add
loopne
stc
jecxz
call
sbb
pop
shr
pusha
mov
xchg
pop
lock
inc
dec
xchg
(bad)
imul
ins
add
mov
in
sub
push
sbb
jp
in
mov
jge
cdq
out
test
add
or
ja
cdq
add
push
adc
lock
enter
(bad)
outs
and
cmps
push
inc
jle
mov
dec
jb
cmp
mov
jl
dec
and
pop
(bad)
sub
in
cmps
cli
jecxz
pop
je
cs
cmp
add
and
mov
sub
push
and
pusha
rcr
mov
mov
inc
dec
out
xchg
data16
bound
aad
in
leave
(bad)
clc
adc
or
jbe
or
cmp
dec
xchg
into
push
mov
rcl
out
cmp
stos
or
dec
outs
jge
mov
in
jl
inc
pushf
shr
out
xchg
sub
mov
fcom
dec
arpl
xor
je
adc
(bad)
call
fmul
ficom
jge
adc
mov
mov
into
addr16
cmps
iret
pop
push
push
mov
jl
lea
popf
mov
das
(bad)
into
xchg
add
and
inc
push
call
call
iret
add
and
add
sbb
sti
xchg
inc
int3
sbb
and
mov
popf
push
cdq
mov
test
sub
jae
jne
or
cs
mov
sub
jecxz
adc
inc
pusha
(bad)
fucomp
bound
ins
stc
push
add
es
(bad)
xchg
xor
cwde
in
sar
pop
push
dec
adc
dec
add
cmp
clc
add
cmps
std
aas
pop
scas
std
push
xor
mov
loop
call
jmp
mov
adc
dec
mov
add
out
jmp
aas
push
sti
inc
repz
xchg
pop
push
mov
in
cli
adc
(bad)
je
imul
into
mov
push
repz
into
xchg
push
xchg
ficom
call
pushf
cmp
imul
adc
nop
fsubr
jns
mov
sub
stos
push
adc
fcomi
sbb
les
mov
add
jns
jo
loope
or
fcmovnb
aas
call
repz
inc
push
xchg
retf
mov
sub
nop
cmp
mov
stos
call
xchg
ins
xor
nop
cdq
sbb
pop
cs
stc
fistp
xcrypt-ctr
cmps
pop
je
xor
sub
xlat
in
jbe
adc
mov
stc
ja
(bad)
lea
jae
mov
cmp
lds
cmp
sbb
xchg
dec
pop
fimul
dec
test
add
mov
inc
stc
xchg
xchg
xchg
mov
ficomp
jbe
test
arpl
xor
outs
out
xor
je
gs
push
mov
daa
jnp
mov
cmps
call
push
sbb
test
jno
fs
mov
aas
and
push
sub
dec
out
sbb
mov
cmp
xchg
(bad)
and
or
mov
loopne
test
repnz
cmp
(bad)
sub
stos
adc
cwde
mov
pushf
xor
and
xor
jg
movups
jge
mov
nop
push
push
push
mov
call
sbb
jae
imul
mov
sti
fmulp
movs
leave
jb
xor
and
cmps
adc
mov
pop
mov
pop
jl
addr16
ss
push
in
inc
sbb
in
jne
mov
sub
inc
call
xor
add
bound
xchg
ins
daa
test
dec
outs
adc
lock
jnp
mov
xlat
outs
fldcw
into
push
mov
call
adc
dec
xchg
sub
repz
fst
retf
test
or
bound
pop
icebp
mov
pop
out
push
scas
popf
ins
push
loope
inc
loope
fadd
loopne
push
fcom
les
aad
fsubrp
sub
push
je
jo
mov
inc
push
and
mov
cdq
nop
dec
jno
mov
int3
dec
aas
xor
pop
xchg
adc
cmp
ret
xchg
mov
adc
mov
dec
dec
dec
sub
sub
add
mov
movs
or
add
movs
sahf
xchg
js
rcl
xor
push
sbb
jmp
dec
sti
push
xor
je
daa
scas
add
test
js
div
pop
mov
sub
mov
jge
jb
xchg
xchg
iret
mov
imul
sbb
out
rol
cmp
or
es
retf
pop
and
add
xchg
xchg
sbb
fiadd
and
stc
psubb
pop
xchg
dec
add
in
ins
addr16
fsubp
push
shl
mov
clc
or
add
sub
ss
ror
lds
xor
fisub
jae
pop
push
mov
(bad)
es
test
ror
add
inc
xchg
movs
fiadd
jne
ja
jmp
sbb
sub
aaa
sbb
jge
jae
xor
push
imul
in
and
fdivr
mov
xor
iret
int
rcl
ds
cli
jae
jne
mov
dec
mov
sub
js
(bad)
jge
xlat
es
stos
or
test
and
out
push
cmps
dec
cmp
jmp
ss
jb
add
outs
out
xchg
out
cmp
stos
cwde
jae
in
pop
js
xchg
popa
pusha
cs
mov
fdiv
add
jb
xchg
stos
pop
pop
mov
and
ficomp
retf
add
movs
inc
jne
inc
sub
pop
push
inc
mov
punpckhwd
ret
push
sbb
iret
xchg
push
adc
pop
nop
jno
mov
es
adc
cmps
dec
loop
mov
clc
add
xor
jmp
stc
or
xor
mov
les
sbb
call
loopne
movs
ds
push
int
push
gs
mov
sbb
(bad)
lea
mov
cld
push
(bad)
cmp
jp
add
out
sbb
pop
push
jmp
add
outs
ss
inc
and
adc
xor
pop
mov
shl
rcr
hlt
and
pop
stc
dec
aam
jl
fsubr
push
sahf
pusha
fld
scas
fnstenv
jne
xchg
outs
xchg
es
or
and
mov
push
xchg
jg
push
push
mov
je
ret
test
inc
sub
mov
test
add
not
push
imul
hlt
jnp
dec
mov
xor
mov
stc
data16
out
test
das
std
pop
fiadd
ror
(bad)
mov
ins
xor
sub
inc
int
pop
and
and
stos
int3
sbb
mov
inc
mov
mov
lea
ja
add
ja
pop
push
jnp
xchg
inc
das
in
cdq
inc
mov
pop
xor
inc
pushf
jp
add
aad
sar
pop
inc
test
repnz
or
(bad)
imul
je
gs
cli
enter
jg
adc
shl
sub
dec
test
add
daa
fstp
movs
dec
inc
fsubr
rcr
inc
cmovge
loope
call
js
xor
aas
outs
aaa
pop
enter
jmp
pop
pop
fidivr
ja
mov
cmp
add
push
or
or
jne
icebp
sar
push
jmp
icebp
imul
mov
or
jge
dec
jne
jae
outs
push
mov
dec
jns
mov
into
movs
inc
ss
mov
nop
mov
add
stos
stos
add
jle
into
imul
mov
mov
sub
cli
pop
pop
or
arpl
cld
iret
lods
pop
cmp
out
mov
test
ret
cwde
jle
fdivr
mov
int3
in
sbb
jmp
ret
imul
lea
das
rcl
call
fdiv
daa
jg
and
dec
(bad)
mov
pop
lods
loop
cmp
scas
call
mov
not
fidiv
out
outs
and
mov
shr
sub
inc
js
nop
movs
inc
xor
xor
rol
or
(bad)
scas
imul
fucomip
xchg
int3
adc
idiv
ins
scas
daa
arpl
jb
cmp
xchg
pop
cmp
adc
mov
inc
pushf
jecxz
les
sbb
ret
or
and
movs
data16
adc
sub
pop
inc
cmps
inc
ins
mov
push
add
test
int3
jb
and
das
inc
xchg
jnp
js
push
sbb
int3
cmp
sbb
xchg
jne
inc
out
push
pop
test
mov
push
test
dec
mov
and
mov
and
movs
daa
cmps
mov
(bad)
in
push
dec
out
sub
mov
jae
test
rol
(bad)
lods
aaa
push
cmps
rol
fnstenv
jns
dec
nop
sbb
rol
dec
jno
loop
jne
not
outs
push
mov
sahf
test
inc
jg
push
lds
xchg
scas
fisttp
inc
data16
div
dec
mov
retf
adc
test
mov
ins
inc
xchg
icebp
int
mov
xchg
push
mov
mov
gs
sub
xor
addr16
jmp
pop
ror
jne
clc
sbb
lea
push
(bad)
sti
stc
fs
fisttp
mov
retf
xchg
and
mov
cmp
xor
pusha
mov
mov
inc
mov
mov
add
fild
icebp
add
cmp
cmp
rol
or
inc
pop
adc
push
test
mov
lds
adc
sbb
add
jg
aaa
mov
mov
arpl
retf
jno
push
jge
cdq
mov
retf
outs
outs
clc
mov
sahf
pop
xor
mov
mov
push
ins
inc
aaa
jae
pop
dec
push
in
push
xbegin
jp
fdiv
xchg
jp
clc
xor
mov
mov
xor
addr16
and
sbb
sub
mov
outs
jle
dec
xlat
sti
sub
xchg
bound
fnstsw
pop
lods
pop
arpl
ret
adc
test
sbb
xor
mov
xlat
sahf
aas
outs
cmp
fcmove
sbb
jo
xchg
in
ins
push
xlat
inc
xchg
es
lahf
pop
mov
mov
mov
jmp
mov
int3
push
in
arpl
loop
inc
sbb
sub
push
(bad)
frstor
mov
inc
sub
cmp
mul
push
mov
sub
call
pop
jae
or
cli
sub
jp
jns
jne
xchg
loopne
(bad)
idiv
lahf
jnp
loop
shr
scas
loop
leave
fnstenv
cmp
ins
ret
icebp
call
stos
aad
(bad)
fwait
gs
and
dec
outs
push
dec
sbb
dec
xchg
(bad)
mov
jle
cs
mov
sub
xchg
xchg
inc
xor
mov
pop
out
cmp
aad
dec
dec
(bad)
div
bnd
push
aas
xor
dec
aad
nop
dec
sahf
comiss
inc
aam
(bad)
cwde
(bad)
imul
(bad)
jge
test
dec
add
dec
cs
cwde
fs
and
adc
xor
xchg
push
bswap
jnp
jg
aad
add
jne
mov
aas
push
adc
je
and
mov
add
mul
xchg
mov
jb
add
ror
xchg
cli
fimul
les
enter
push
adc
push
sti
add
xor
xchg
(bad)
out
arpl
sub
outs
inc
mov
sub
cmp
pop
ret
xchg
fcmovne
ins
adc
mov
aaa
jmp
fwait
add
lea
scas
adc
out
mov
(bad)
bound
xlat
inc
jg
add
stos
sbb
lahf
scas
inc
in
call
mov
data16
inc
jle
jbe
lea
ret
out
sub
push
adc
push
shl
jmp
es
lahf
pop
lock
dec
sub
adc
mov
mov
out
or
lock
mov
add
rol
mov
fcmovne
mov
dec
jo
xchg
ja
mov
imul
ja
aad
push
sbb
or
out
es
dec
adc
mov
ret
test
cmc
push
or
xor
fld1
mov
xchg
dec
inc
fcmovnbe
sbb
pop
jg
sbb
test
mov
push
fcomp
sbb
mov
cmps
mov
add
sbb
xchg
aaa
xchg
nop
mov
inc
xchg
fiadd
push
cmp
das
sub
daa
dec
inc
loop
je
fistp
push
call
in
js
cmp
adc
faddp
jmp
or
jno
mov
xchg
cmps
sbb
xor
imul
je
(bad)
mov
and
dec
jge
dec
scas
xor
retf
sub
jno
ja
(bad)
adc
add
dec
ror
xlat
sahf
rcl
sar
adc
add
and
(bad)
gs
and
les
jo
lods
sub
arpl
repnz
addr16
movs
pop
mov
and
pop
outs
(bad)
and
jecxz
sar
mov
mov
in
mov
repz
and
ret
jl
repnz
stos
dec
push
push
xor
sbb
(bad)
ror
ja
sbb
push
add
or
aad
dec
fs
dec
je
inc
pop
dec
adc
mov
rcr
nop
daa
cmp
adc
retf
mov
clc
fcmovbe
and
test
inc
retf
movs
and
jae
mov
in
iret
iret
outs
je
cli
push
and
mov
ret
jecxz
test
shl
sbb
ins
cmps
js
aas
add
dec
mov
cmps
mov
xor
pop
and
in
outs
xchg
xor
outs
xor
jmp
push
cli
retf
add
jmp
ja
mov
repz
imul
mov
dec
xchg
nop
(bad)
mov
dec
adc
out
mov
mov
jnp
sub
cmps
pop
sub
icebp
addr16
cmp
sub
mov
mov
add
lds
mov
(bad)
mov
leave
test
or
out
mov
and
push
sbb
push
sub
scas
push
dec
adc
adc
sbb
push
adc
(bad)
jl
cmp
sub
ins
cs
cli
shr
push
adc
sub
mov
sub
pop
pop
scas
mov
test
stos
mov
es
xchg
add
xlat
or
(bad)
repnz
jae
dec
sbb
ja
mov
jle
fadd
(bad)
mov
mov
jp
mov
sti
(bad)
clc
jp
cmc
mov
inc
jp
push
ins
adc
jle
xchg
add
lock
es
jae
dec
mov
mov
inc
ss
push
cmp
dec
adc
mov
fldenv
dec
cmc
out
sahf
pop
repnz
and
mov
xchg
jns
adc
mov
or
add
dec
add
fld
jge
mov
push
add
lds
cmp
cmps
enter
jae
(bad)
pop
jnp
push
cmp
mov
call
jne
dec
lock
mov
xlat
or
add
mov
jb
or
bound
or
and
enter
retf
das
add
mov
mov
pop
xchg
and
dec
jmp
cli
and
mov
mov
in
mov
pop
shr
cmc
(bad)
push
push
sar
inc
and
or
(bad)
loope
aad
test
adc
mov
stos
jg
les
jo
and
sbb
sub
lods
loop
mov
and
jo
cmp
jno
jecxz
loopne
jbe
mov
scas
jg
adc
loop
ins
sti
sbb
sbb
idiv
inc
test
js
sbb
pop
mov
fdivr
dec
cmp
sbb
mov
xlat
and
pop
test
ret
out
jge
fsubr
jp
mov
sub
call
xchg
push
enter
das
ins
cmp
sti
loop
iret
sbb
mov
retf
mov
add
clc
(bad)
sbb
or
dec
dec
je
xchg
dec
xor
xor
out
or
jecxz
cmps
xor
push
test
(bad)
sbb
adc
sti
test
lock
outs
push
push
and
mov
outs
retf
push
fcmovu
aam
or
sbb
scas
dec
push
shr
sahf
je
hlt
mov
sub
jb
or
and
or
mov
mov
hlt
stos
add
mov
push
gs
xchg
jg
add
mov
out
out
pop
dec
adc
ret
mov
inc
ins
scas
repnz
shl
sub
xor
adc
xchg
add
cld
mov
pop
call
jae
test
mov
nop
xor
mov
fcom
movs
add
ja
int3
inc
icebp
movs
push
hlt
sbb
pop
add
(bad)
pop
(bad)
jg
retf
xchg
inc
or
retf
mov
in
daa
mov
jns
sub
imul
xchg
mov
ficomp
cmp
sub
jp
dec
jmp
gs
cmp
fisttp
and
stos
xchg
push
mov
or
inc
dec
sub
push
std
stos
or
scas
add
iret
xor
aaa
pop
ret
les
jp
jp
jle
mov
fs
mov
in
mov
cmp
dec
stc
and
or
adc
xchg
push
push
stc
test
cmps
jae
aas
mov
ds
arpl
or
cli
mov
imul
pop
add
and
retf
mov
fs
(bad)
xor
sbb
pop
push
adc
dec
cmp
lea
sahf
mov
cmps
addr16
fs
pop
and
arpl
mov
loopne
jg
sbb
dec
xchg
mov
xchg
pop
jp
push
mov
call
pop
ror
jg
nop
dec
push
ins
ss
sbb
push
psubq
xor
outs
cmc
add
xor
and
mov
add
adc
and
mov
pop
inc
cmp
xchg
daa
push
xor
cmp
ds
mov
rcr
int
je
inc
pop
addr16
push
pop
mov
bsf
and
test
test
and
xor
mov
in
call
retf
xlat
dec
jno
stc
imul
(bad)
sub
jmp
dec
cli
or
add
mov
addr16
je
jg
and
inc
inc
add
push
push
push
ret
imul
ja
mov
inc
inc
(bad)
and
mov
invd
pusha
push
dec
cmp
pop
mov
adc
cmp
adc
stos
sub
xchg
xor
inc
inc
add
jge
dec
les
rcl
xlat
jbe
xchg
(bad)
out
stos
das
cli
pusha
sub
sub
daa
jl
push
cwde
inc
xlat
mov
icebp
rcl
nop
push
and
xor
jge
mov
and
or
cdq
jge
lods
loopne
add
data16
cmp
add
add
adc
gs
pop
into
test
scas
out
pop
cmps
pop
loop
neg
pop
jae
add
xchg
sbb
fs
cdq
push
jae
sti
jl
mov
add
add
repz
shl
mov
jmp
pop
sbb
xchg
mov
rcr
test
dec
fild
das
sub
mov
cmps
bswap
das
loope
or
in
mov
add
push
adc
push
arpl
cmps
pop
fist
pop
int
fld
inc
mov
push
and
mov
inc
pop
mov
(bad)
push
mov
or
push
in
dec
rcr
mov
add
out
push
jmp
movs
lds
(bad)
push
shr
sub
aad
sub
add
pop
scas
loope
rcr
mov
dec
adc
fadd
int3
cmp
sbb
push
scas
sahf
arpl
clc
or
sbb
iret
repnz
pop
adc
adc
std
hlt
pop
out
xchg
xchg
iret
mov
inc
mov
or
mov
jg
scas
mov
pusha
push
cwde
push
(bad)
sti
jo
pop
addr16
je
sbb
xchg
and
xchg
jmp
sub
inc
add
push
std
jp
cmp
test
rcr
xchg
sahf
jne
adc
pop
ror
mov
es
push
in
mov
pop
add
mov
mov
retf
mov
or
inc
aam
and
sub
or
xor
jns
test
jno
pop
mov
xchg
(bad)
loope
cmp
jb
push
mov
inc
lods
lods
fdivr
pxor
or
dec
push
dec
or
aad
xchg
sbb
enter
frstor
xchg
cmps
or
or
outs
add
cdq
xor
mov
mov
pushf
nop
mov
iret
mul
jmp
dec
mov
pop
fisttp
or
inc
adc
ret
xchg
test
cmc
adc
and
mov
hlt
mov
(bad)
push
pusha
lock
jge
ret
sbb
add
retf
and
fisub
inc
fst
mov
mov
pop
xchg
sub
inc
push
inc
xor
push
adc
jne
mov
out
and
(bad)
jae
cmps
inc
out
sub
in
xor
das
out
jle
and
popa
ror
dec
in
ret
cmp
aad
sub
mov
lods
cmp
jo
cmp
adc
retf
xchg
les
mov
out
mov
sub
fisttp
dec
mov
adc
mov
jnp
int3
add
into
or
add
bound
icebp
add
sbb
ss
push
fs
dec
ins
aad
aam
dec
push
(bad)
sub
cmp
retf
dec
pop
shl
ret
mov
fwait
dec
hlt
fld
iret
and
pop
iret
sahf
pop
mov
imul
shl
and
ja
ins
inc
call
icebp
scas
retf
mov
xchg
push
adc
clc
pop
sbb
rol
jo
push
lahf
inc
(bad)
ds
push
or
aad
add
data16
push
jmp
shr
push
cmp
xor
cmp
push
pop
outs
push
pusha
into
adc
mov
lock
sub
retf
inc
test
test
jno
adc
icebp
nop
ja
bound
dec
cmp
stos
cmp
xchg
pcmpgtb
sub
in
xor
dec
mov
cmp
sbb
push
mov
mov
sbb
dec
lods
jl
and
cwde
adc
mov
mov
test
xor
cmps
nop
mov
pop
push
arpl
int3
pusha
inc
cmp
mov
inc
add
add
clc
retf
adc
not
sub
cmps
mov
or
das
cmp
push
clc
xchg
mov
addr16
cli
fild
jp
imul
ins
das
fistp
add
shl
push
repz
dec
and
xchg
push
out
imul
mov
sti
int
cmc
sbb
xor
test
or
mov
and
or
mov
cdq
stc
call
sbb
mov
popa
pop
mov
mov
test
inc
ficomp
mov
ins
sar
push
(bad)
aad
pop
xor
fild
inc
cmc
dec
add
jl
(bad)
pop
ror
pusha
lods
inc
shr
xor
lods
push
cmp
in
xor
mov
test
hlt
std
xchg
ret
xchg
dec
xchg
data16
fcmove
mov
inc
mov
nop
mov
stos
iret
push
data16
or
test
jmp
push
test
and
nop
jge
sub
push
test
inc
push
rcl
es
sub
rol
mov
pcmpgtd
in
or
push
(bad)
repz
(bad)
not
loop
adc
test
ds
add
cwde
lods
cmp
add
rcl
ret
outs
xchg
push
loopne
ret
ins
sahf
aaa
push
jns
xor
mov
jg
call
jo
fmul
jle
jae
mov
jno
stc
not
push
fist
cvtps2pd
retf
add
jmp
xchg
or
lods
fld
push
bound
jecxz
xor
stc
xchg
(bad)
out
jnp
mov
inc
mov
cmps
aas
addr16
sub
push
push
aaa
in
ja
mov
jno
retf
loope
fs
jg
xchg
push
xor
es
aam
jns
push
mov
repz
jle
es
int3
int3
add
jbe
mov
mov
stc
adc
cmp
adc
sbb
hlt
movs
xchg
dec
add
xchg
push
xchg
inc
mov
xor
inc
add
pop
mov
cmp
rcr
addr16
pop
hlt
sbb
inc
cmp
mov
jg
sti
cmp
mov
adc
shr
dec
push
mov
push
aad
xor
add
push
adc
enter
jnp
data16
jns
cmps
sub
movs
jge
mov
ret
ds
stc
ins
out
pop
pop
xchg
popa
pop
jl
call
into
jmp
aas
mov
mov
sbb
push
jl
test
adc
mov
iret
xchg
aas
and
push
xor
inc
(bad)
(bad)
dec
pop
sti
in
adc
or
ins
inc
aaa
into
scas
cmp
mov
into
push
add
mov
in
pop
xchg
inc
loopne
cmp
or
iret
out
or
daa
sbb
adc
lods
(bad)
call
hlt
not
lock
jl
or
mov
(bad)
and
in
ss
mov
cmp
out
push
inc
add
mov
lahf
cmps
add
xchg
push
arpl
rcr
mov
or
les
not
xchg
jp
les
xor
imul
test
add
ret
push
test
mov
pop
push
aas
clc
sub
std
shr
pop
xor
mov
dec
mov
jae
js
in
js
jnp
leave
fisttp
retf
stos
ret
dec
ins
cs
sahf
jmp
nop
sub
cmc
leave
push
inc
jne
sbb
ror
xor
lods
xchg
(bad)
loop
sbb
mov
and
and
outs
lahf
lds
adc
jmp
jne
xor
aaa
cmp
xchg
xchg
(bad)
xlat
mov
retf
xchg
sbb
loope
lea
jecxz
imul
push
lahf
dec
push
mov
inc
sbb
or
int
add
retf
inc
inc
cmp
xor
lods
dec
ja
leave
ins
repz
stc
mov
test
mov
icebp
mov
sub
inc
cmp
movs
leave
psubb
add
ficomp
test
xor
fdiv
mov
xchg
aaa
call
inc
mov
mov
stos
cdq
or
mov
inc
add
jne
stos
sar
jl
dec
not
das
retf
push
ret
adc
push
push
in
xchg
out
xor
sbb
jmp
mov
iret
mov
repnz
(bad)
lods
add
push
push
cmps
inc
ja
mov
jg
int3
iret
add
pushf
in
aaa
cmp
retf
sbb
sbb
mov
pop
mov
dec
mov
neg
pop
in
inc
mov
push
or
pop
icebp
pop
dec
retf
push
push
xchg
and
scas
cmps
push
cld
xchg
sbb
push
push
jecxz
sbb
loopne
add
loope
pop
dec
(bad)
into
jno
cdq
imul
mov
xchg
imul
jns
xchg
aam
xlat
add
add
sub
push
adc
mov
cmc
push
mov
arpl
(bad)
mov
sub
mov
stos
push
adc
daa
call
xor
sahf
cdq
lahf
aas
jp
dec
jl
dec
sub
inc
data16
je
jmp
mov
push
push
lods
popa
pop
or
test
test
xor
fwait
push
lods
fcomp
fwait
cmp
sbb
xor
mov
jp
push
(bad)
mov
cli
out
cmps
loope
adc
push
loopne
mov
dec
out
in
(bad)
ret
xchg
xchg
imul
mov
lods
xor
es
(bad)
push
mov
and
stos
loope
(bad)
rcl
pop
in
gs
shl
data16
and
cli
bound
mov
mov
out
ret
cmp
add
rcl
rcr
mov
outs
xchg
inc
(bad)
fcmovnu
pop
(bad)
nop
jno
int
push
addr16
cmp
jecxz
push
xchg
add
enter
popf
test
stos
js
inc
(bad)
out
out
pop
imul
gs
xchg
fisubr
mov
fidiv
enter
jl
xlat
fs
lods
push
push
adc
daa
arpl
fld
dec
push
mov
lea
pop
jle
push
ss
imul
ss
push
xchg
rcl
pushf
push
mov
push
xchg
gs
pop
sbb
xchg
icebp
mov
leave
jge
ins
(bad)
jno
dec
test
sbb
sbb
int3
and
pop
pop
and
ret
mov
jo
fstp
pop
leave
xor
jbe
xchg
jmp
retf
jmp
xor
xchg
jg
fistp
sbb
add
(bad)
jle
push
and
mov
aas
ins
pop
jns
mov
mov
pop
or
push
bound
mov
popf
test
sbb
cmps
add
jns
js
not
push
fwait
adc
xor
sbb
mov
(bad)
jb
bound
div
and
arpl
pop
mov
rcl
mov
push
iret
movs
xchg
out
mov
mov
in
and
mov
mov
jbe
sti
add
jbe
jnp
lock
daa
xor
jno
adc
icebp
sub
jg
movs
pop
push
cld
inc
bound
int
movs
pusha
jecxz
addr16
retf
xchg
(bad)
jmp
sbb
enter
sbb
mov
jle
dec
shl
or
mov
retf
jle
out
je
pop
adc
push
shr
dec
sbb
mov
fist
inc
sub
lock
xchg
popf
daa
jno
(bad)
push
mov
je
bound
adc
cmp
loopne
xchg
int3
mov
sub
mov
jb
scas
cdq
sub
mov
dec
jo
fsin
push
and
sbb
fadd
mov
jg
mov
popa
xchg
adc
dec
mov
or
aaa
sub
imul
ret
cmp
xor
nop
out
sbb
dec
cwde
xor
push
inc
stos
ins
scas
mov
and
mov
data16
stos
sar
ins
mov
xor
push
mov
adc
mov
push
dec
es
push
pop
fidiv
cmps
ds
data16
sahf
test
ror
outs
push
add
mov
icebp
pop
jl
pop
push
fbld
out
mov
mov
and
jbe
ds
das
loop
cmp
stc
sbb
jecxz
and
push
jbe
mov
mov
scas
xchg
call
(bad)
jb
mov
retf
aaa
cmp
inc
fiadd
add
sbb
dec
or
and
scas
idiv
mov
hlt
xor
test
add
in
mov
cwde
or
dec
into
cmc
mov
ss
mov
mov
sub
ret
loope
lods
inc
test
mov
mov
ret
scas
add
pop
fs
add
jno
outs
or
ret
cmp
mov
scas
imul
fcom
lods
aam
dec
adc
adc
push
out
mov
ror
xlat
sub
mov
or
pop
mov
adc
xchg
xchg
cmp
stos
mov
mov
cwde
int3
lods
(bad)
jno
retf
or
out
push
sub
lds
lahf
xchg
fwait
mov
scas
mov
cmp
(bad)
out
cmp
out
and
outs
dec
sbb
xor
mov
push
sar
and
jg
inc
sub
mul
imul
add
push
jns
iret
xchg
or
fs
imul
cmp
ror
mov
mov
fwait
out
and
or
(bad)
ss
jl
or
sub
stos
mov
movs
push
sub
mov
imul
or
add
jo
in
(bad)
pushf
call
(bad)
adc
out
add
xchg
sbb
mov
mov
in
mov
ror
sar
pcmpeqw
cwde
push
fidivr
rcr
mov
imul
cmps
sbb
add
push
and
xchg
fsub
and
cmps
test
dec
and
dec
lock
push
or
mov
test
(bad)
dec
cmp
mov
mov
(bad)
in
out
scas
sbb
addr16
cmp
dec
enter
fs
test
popf
add
dec
or
xor
mov
dec
pushf
imul
jae
sub
ret
push
cmc
ss
dec
es
mov
add
daa
(bad)
mov
jne
fild
aam
shr
push
pop
dec
loopne
push
mov
out
daa
mov
pusha
out
jg
or
std
js
xlat
add
jge
inc
inc
inc
int
and
sbb
cld
ins
int
cli
imul
mov
and
sar
fs
retf
xchg
test
xchg
jp
mov
(bad)
das
(bad)
adc
mov
jmp
mov
mov
sub
mov
xchg
fisubr
outs
dec
add
out
enter
dec
xlat
pushf
sub
sub
cmp
mov
cmp
dec
inc
out
pop
cs
mov
stc
dec
xor
daa
int
dec
cmc
daa
push
jnp
fidivr
jae
sbb
xor
or
neg
lock
mov
inc
outs
mov
out
aad
ds
push
xor
push
jmp
popa
ret
mov
sub
fadd
push
mov
sbb
rcr
jo
sbb
sbb
xor
pop
in
adc
lods
call
loope
mov
sub
or
arpl
out
and
mov
es
cmp
or
jnp
jl
jno
add
xchg
aaa
add
cmp
add
test
mov
cmp
jg
inc
neg
leave
sbb
fst
push
add
dec
cmp
cmp
and
dec
scas
lods
xchg
leave
int
xor
sub
push
push
inc
xor
(bad)
pop
and
clc
out
jne
cmp
iret
outs
cmp
outs
dec
xchg
xchg
xchg
daa
loop
lods
std
cmps
dec
lds
xor
nop
loopne
fild
mov
pop
jbe
mov
fsubr
add
add
cld
inc
jo
es
pop
mov
lea
imul
fdivr
mov
and
repz
mov
jecxz
mov
sub
aaa
and
adc
inc
mov
and
jae
or
imul
imul
call
rcl
cmp
inc
cli
fldenv
sub
(bad)
shl
retf
stc
pop
xor
xchg
adc
lds
dec
popf
mov
ret
mov
fimul
out
pop
dec
mov
push
ret
sub
mov
into
or
daa
dec
cmp
test
pop
ret
jl
mov
jbe
dec
add
pop
repz
popa
pop
out
mov
scas
fs
sub
or
enter
inc
fs
cmc
cwde
lods
test
sbb
pop
pop
dec
dec
repnz
shr
push
das
push
aas
jl
les
clc
iret
hlt
mov
mov
(bad)
ficomp
mul
aas
add
int3
es
les
push
xor
cld
or
or
mov
add
xchg
je
das
cld
cmps
stos
pop
fistp
xchg
mov
test
outs
mov
push
xchg
popf
das
push
dec
call
cmp
scas
xchg
inc
daa
jg
cmp
xor
sub
mul
out
sbb
xchg
jg
xor
dec
and
icebp
and
pusha
out
mov
sub
and
out
jecxz
jg
stos
adc
mov
dec
or
aaa
pop
cmp
jbe
bound
push
retf
and
pop
iret
pop
and
aam
iret
loop
inc
mov
movs
int3
imul
mov
mov
lea
push
xor
popa
sbb
clc
div
pop
jb
es
mov
test
push
cmps
adc
xor
pop
scas
loop
inc
sub
adc
cs
repz
mov
inc
rcl
mov
xchg
cmp
fisub
xor
mov
shrd
fcmove
out
mov
push
sbb
outs
push
test
daa
pop
mov
cmp
cld
mov
lods
popf
mov
mov
push
mov
xchg
cmp
jg
and
inc
outs
add
push
pop
mov
pusha
inc
and
push
sub
cmc
mov
push
cdq
fs
in
xlat
out
mov
int3
iret
call
inc
sahf
das
mov
sub
adc
xchg
cmp
mov
mov
test
inc
enter
push
and
mov
arpl
arpl
pop
pushf
mov
ror
jecxz
adc
jg
pushf
icebp
icebp
fs
loopne
pusha
in
retf
mov
in
or
inc
pop
cmc
xor
retf
add
jl
fldcw
repz
add
mov
and
stc
or
push
outs
aam
jl
daa
clc
xor
test
push
(bad)
xor
scas
test
or
mov
sahf
add
jno
leave
jmp
xchg
inc
ins
je
rcl
add
add
stos
mov
xchg
div
and
mov
retf
outs
test
lea
pop
xor
aam
jns
scas
sbb
iret
push
add
add
imul
push
and
mov
pop
adc
sbb
out
daa
scas
jns
call
into
inc
adc
in
mov
push
fcomp
es
mov
addr16
or
pushf
inc
lods
das
mov
xor
test
dec
test
cmc
dec
ins
and
imul
inc
dec
ss
xchg
ret
cmp
arpl
imul
lock
ins
dec
jbe
add
xchg
xchg
loop
xchg
jl
jecxz
dec
lock
adc
ins
fabs
jp
add
test
xchg
imul
sub
iret
fst
sbb
test
icebp
mov
daa
pop
add
fcomp
add
dec
jb
icebp
cmp
sbb
stos
vmxoff
loope
inc
in
mov
enter
mov
mov
test
inc
jp
pop
pushf
cmc
cmp
add
(bad)
and
mov
test
pop
call
stc
ror
mov
cs
mov
out
je
test
cmps
in
aam
scas
sbb
stos
mov
pop
cmp
push
push
xor
data16
mov
ficomp
nop
stos
imul
pushf
jg
enter
stos
popa
push
fwait
sbb
outs
jg
dec
arpl
mov
scas
lock
xchg
ret
cmp
push
pop
cs
test
mov
cmp
inc
fwait
imul
push
sub
in
and
fld
fbld
dec
push
sbb
cld
dec
test
pusha
xlat
mov
mov
sub
retf
sahf
cli
push
(bad)
push
or
imul
or
std
fmul
jge
fwait
push
and
daa
ja
mov
push
xor
push
mov
cmp
adc
iret
jbe
sbb
scas
out
mov
retf
adc
pop
cmp
and
pop
and
mov
fst
imul
outs
adc
jp
retf
icebp
leave
repnz
inc
mov
mov
cld
dec
(bad)
daa
pop
sbb
sub
xor
ins
lock
adc
aaa
fimul
push
dec
mov
sub
add
out
pop
test
ja
bound
retf
cs
xchg
mov
inc
je
nop
add
jne
xor
or
adc
add
mov
sub
ret
sbb
pop
loopne
fld
inc
inc
dec
or
or
js
lds
aas
mov
pop
push
push
pushf
(bad)
bound
xchg
in
xchg
(bad)
enter
cmp
adc
xor
cmp
sub
bound
test
xor
pop
sub
stc
mov
je
fstp
int3
stos
out
jo
xor
movs
cmps
inc
loop
inc
mov
mov
jo
inc
cwde
add
sbb
cs
jae
rcl
outs
fisttp
push
inc
pop
lods
movs
stos
or
mov
xor
adc
sub
jo
retf
ret
push
mov
xchg
push
push
test
out
cmps
jp
daa
jge
xor
(bad)
fdiv
sahf
push
push
xchg
cmps
mov
ret
mov
call
mov
sbb
sbb
div
inc
sub
pop
fsubr
nop
cmc
cli
(bad)
jns
into
xor
dec
int3
mov
add
imul
jg
inc
add
les
jnp
shl
xlat
pop
pop
add
push
fstp
in
shl
mov
and
dec
pushf
jno
mov
idiv
or
and
sub
and
xor
pop
popf
push
xchg
xor
pop
jecxz
shl
pushf
repz
arpl
enter
nop
and
nop
inc
adc
inc
hlt
retf
lock
mov
cmp
or
and
fadd
and
fisubr
xchg
fld
xchg
(bad)
call
out
mov
add
xlat
adc
adc
sub
mov
push
xlat
cld
mov
retf
adc
pop
rol
add
cmp
add
xchg
pop
cli
shl
clc
jae
retf
mov
add
sbb
cdq
sar
cmc
cld
push
mov
imul
adc
pop
test
repz
and
popa
mov
cs
inc
les
cwde
jae
int
adc
jge
adc
int
push
xchg
nop
aam
xchg
cld
mov
mov
and
test
and
inc
pop
mov
push
adc
out
outs
test
mov
popa
into
(bad)
or
(bad)
inc
loopne
xchg
xchg
push
outs
sbb
arpl
or
repz
push
push
and
and
fdiv
xor
retf
mov
mov
nop
dec
(bad)
int
push
es
jbe
shl
(bad)
test
jmp
adc
jnp
add
aad
test
outs
test
pusha
dec
in
add
push
test
jbe
fcom
into
ja
das
call
push
rcr
pop
push
xlat
ins
sub
es
out
adc
pop
dec
lods
or
int
adc
mov
stc
pop
ror
adc
pop
lds
xlat
jp
mov
aas
mov
pusha
xchg
cmp
sub
or
and
aaa
mov
out
mov
lods
(bad)
daa
add
fiadd
xor
sbb
ret
jne
movs
retf
call
sub
xchg
xchg
mov
mov
aam
mov
sub
xchg
mov
xchg
xor
js
cmp
mov
dec
in
cmp
pop
mov
mov
scas
push
mov
sub
jns
or
sub
inc
(bad)
outs
mov
push
dec
inc
pop
fild
je
xor
outs
daa
dec
les
pop
hlt
loope
inc
mov
stos
inc
rol
popf
sub
cmp
sub
mov
int
jge
jg
retf
pop
sub
pop
stos
ret
icebp
stos
lods
jnp
adc
stos
mov
dec
adc
ficom
outs
push
pusha
idiv
inc
mov
sbb
repz
cmps
mov
(bad)
mov
push
adc
sub
es
lods
cmps
pop
ds
icebp
mov
adc
cmps
dec
xchg
cs
in
stos
push
ret
add
les
cmp
xor
dec
nop
sub
(bad)
mov
adc
sub
rol
mov
mov
pop
in
jmp
jl
ins
jmp
jge
ret
sub
ret
sbb
pop
lea
ja
xchg
movs
lock
shl
cli
and
xor
cld
xchg
aad
aas
sub
push
cmp
add
scas
push
and
sbb
xor
jae
test
push
cmp
mov
xor
jb
out
(bad)
mul
push
clc
popa
inc
mov
mov
jg
pop
push
and
call
outs
(bad)
mov
mov
test
xchg
pop
mov
ds
jle
cli
in
mov
cwde
test
js
std
sar
xor
fwait
add
pop
cs
cdq
(bad)
push
mov
cmp
push
cli
jo
mov
mov
push
aaa
repnz
xchg
clc
mov
or
xor
add
call
add
adc
lock
sbb
pop
jbe
mov
inc
(bad)
sbb
add
sar
sub
repz
mov
arpl
rcr
stos
add
xor
jecxz
jae
(bad)
stos
xlat
loopne
or
outs
mov
in
xchg
ret
and
int3
xor
outs
lock
add
imul
lock
addr16
mov
xchg
popf
scas
in
inc
out
xchg
pop
or
(bad)
call
push
call
test
loopne
cli
pop
dec
rcr
jle
pop
xchg
idiv
push
push
jnp
inc
les
cmp
mov
or
lds
push
jns
leave
dec
loope
adc
pushf
daa
enter
int
xor
adc
ffree
or
mov
xor
in
fidiv
cdq
iret
add
jl
rcl
repnz
xchg
scas
xor
inc
adc
ds
jg
adc
mov
ror
mov
xor
stos
(bad)
or
xchg
jns
outs
outs
mov
mov
push
test
xchg
jge
pop
ins
cmova
xchg
mov
fisttp
movs
sbb
(bad)
aaa
icebp
cmp
ds
scas
jmp
or
pop
mov
mov
mov
enter
adc
pop
jecxz
stos
push
xchg
pop
dec
cmps
push
lea
stos
jg
push
cwde
pop
popa
dec
nop
ja
xchg
cli
in
mov
push
into
cmp
adc
xchg
pop
and
cs
mov
lds
push
das
sbb
addr16
xor
xchg
dec
pop
(bad)
in
mov
xlat
sbb
outs
add
push
xchg
test
inc
mov
cmp
imul
neg
scas
and
mov
or
mov
lock
push
leave
or
adc
cmps
and
mov
xor
inc
cmps
cmps
retf
jp
mov
fstp
xlat
mov
out
stos
dec
inc
add
mov
xchg
mov
xlat
sub
xor
jo
in
jbe
sbb
inc
sub
and
scas
daa
xchg
pop
lahf
or
enter
pop
iret
add
mov
(bad)
mov
aam
mov
(bad)
inc
cmp
sub
xchg
lahf
stos
add
das
cwde
push
out
sub
jg
jl
pop
mov
xchg
dec
std
dec
jo
mov
jne
cmp
popf
rcl
int3
inc
jno
int3
(bad)
pop
retf
(bad)
adc
mov
scas
lahf
es
jg
imul
(bad)
cmp
loop
dec
out
iret
retf
fcmovne
push
mov
gs
out
sub
pmuludq
hlt
pop
pop
sbb
popf
repz
pop
and
iret
xchg
mov
call
in
mov
mov
and
xchg
inc
sub
mov
mov
add
imul
jmp
pop
and
stos
(bad)
and
jle
sbb
cmp
xor
rcl
dec
xchg
push
xor
icebp
out
stos
xchg
cs
mov
adc
and
dec
xor
inc
xchg
aad
jle
int3
cmps
push
sub
xchg
dec
mov
sub
(bad)
xor
mov
enter
test
pop
into
sub
iret
dec
adc
mov
or
stos
cmp
dec
mov
retf
stos
iret
adc
ss
cld
xchg
xrelease
pop
call
mov
pop
jno
sbb
mov
push
cmc
push
and
add
push
push
jmp
mov
inc
xchg
mov
or
mov
shl
pop
jne
xor
shl
les
enter
adc
les
ret
idiv
and
xchg
or
push
mov
aaa
xchg
push
mov
mov
movs
push
sub
shl
cmp
loop
or
push
mov
in
xchg
adc
enter
jno
push
or
cmp
aad
jl
push
xor
jns
add
sub
movs
adc
sub
pop
add
push
mov
or
das
cmps
mov
sub
retf
mov
mov
and
out
not
out
cld
stc
rcr
adc
in
bound
pop
sub
scas
sar
sbb
inc
mov
xchg
cmc
pop
push
xor
gs
or
fs
mov
stos
stos
ficomp
pop
fdivr
es
mov
dec
daa
sub
push
scas
push
inc
cmp
pop
sbb
push
pop
arpl
inc
div
aas
jno
xchg
sbb
fild
or
std
mov
sar
fdivr
in
sbb
jp
cli
movs
pop
xor
jae
mov
adc
lahf
mov
jmp
mov
or
std
data16
aas
leave
cmp
mov
repz
xor
mov
icebp
ret
push
ret
sbb
cmp
add
loope
(bad)
aaa
inc
ds
inc
icebp
mov
aas
push
popf
inc
adc
aaa
mov
jmp
and
mov
push
pmulhuw
cmp
jl
sub
cmps
lods
jno
es
js
je
test
shl
cmp
or
neg
fdivr
les
and
(bad)
sub
enter
add
hlt
jge
jmp
in
xchg
inc
dec
mov
jnp
jmp
jle
leave
mov
dec
outs
and
push
repnz
sub
sub
and
popa
sub
fnsave
iret
(bad)
dec
push
in
in
sbb
jo
push
sbb
test
and
(bad)
xor
arpl
sar
scas
and
xor
or
sbb
fisubr
jbe
aad
ret
jl
fdivp
sub
inc
daa
adc
in
repnz
add
leave
in
lds
fadd
lahf
jmp
imul
fiadd
xlat
aam
sbb
in
in
mov
xchg
daa
push
das
test
mov
cmp
cmp
mov
in
(bad)
out
mov
fs
pop
xchg
gs
cmp
push
shl
xchg
es
jmp
fcomi
imul
add
shl
test
pop
push
cmp
sub
jmp
out
and
or
jp
inc
xchg
pop
leave
loope
inc
inc
jp
push
scas
les
xchg
leave
scas
imul
jecxz
dec
jno
ret
ret
retf
dec
push
sub
or
pop
sbb
mov
xchg
mov
lock
das
jb
mov
dec
sub
add
aaa
push
jbe
push
movzx
mov
pop
inc
ds
or
test
sbb
xor
xchg
jae
test
xchg
dec
pusha
mov
out
mov
inc
xlat
sub
pop
or
cmp
dec
jbe
test
je
stos
leave
push
inc
push
movs
clc
pop
add
(bad)
scas
jno
xor
es
sar
fstp
cmp
mov
add
fldenv
stos
adc
cmp
iret
ins
add
xor
lock
jg
retf
sbb
icebp
js
or
jbe
imul
jbe
test
arpl
and
icebp
mov
push
jmp
(bad)
mov
repz
push
stos
push
call
sbb
cmp
push
jle
fmulp
int3
cmp
jmp
shr
in
push
cmc
cmps
(bad)
or
or
push
add
and
mov
mov
pop
or
push
repz
retf
rcl
pushf
push
add
adc
push
xor
jno
ds
scas
xor
cld
addr16
pop
push
mov
scas
cli
jae
push
mov
sbb
cmp
pop
sbb
xor
ss
loopne
icebp
scas
test
sbb
or
add
imul
ficomp
leave
inc
(bad)
lock
xchg
xchg
pushf
in
xchg
mov
add
movsx
daa
adc
inc
test
sbb
test
mov
lock
test
add
jb
retf
mov
fst
xchg
into
mov
neg
inc
or
imul
lods
mov
stos
jne
pop
sahf
test
or
retf
ret
push
aaa
adc
test
das
jp
jae
mov
div
jmp
or
clc
nop
cmp
aas
daa
int3
pop
mov
mov
(bad)
pop
scas
xlat
test
xchg
mov
jg
std
pop
mov
scas
or
pop
pop
ret
dec
(bad)
dec
arpl
inc
cli
cmp
sub
jns
pop
int3
(bad)
ffree
sbb
(bad)
ins
mov
jno
pop
cmp
cdq
push
cmp
movs
add
enter
sbb
call
arpl
shl
sub
mov
cmp
int
adc
outs
lock
pop
test
fwait
shr
fwait
push
xchg
addr16
pop
arpl
rcl
push
test
and
jmp
pop
jbe
mov
(bad)
xchg
mov
dec
sbb
jnp
sar
cli
inc
push
xchg
fcmovu
imul
rcr
mov
aas
out
lds
outs
pop
mov
mov
mov
adc
inc
imul
std
xchg
call
rol
fdiv
adc
cmp
scas
(bad)
pop
sbb
addr16
sbb
lods
xchg
adc
inc
pop
push
dec
xchg
push
push
jmp
movs
iret
ins
pop
pop
neg
je
mov
imul
add
adc
mov
xchg
popa
inc
sub
fld
adc
sbb
jb
ins
pop
fwait
idiv
rcl
adc
sbb
shl
mov
push
jle
test
inc
iret
fwait
(bad)
imul
jb
test
(bad)
call
enter
xchg
test
test
cwde
mov
test
enter
jo
out
cld
iret
xchg
push
dec
fcomp
mov
xor
test
shr
les
mov
int3
mov
xor
int3
sti
dec
mov
pop
or
int3
push
xchg
push
mov
out
adc
jbe
xor
retf
jl
push
inc
mov
sub
arpl
xchg
push
add
jae
dec
pop
dec
les
mov
nop
cmp
mov
ror
sbb
call
mov
test
and
cmp
fild
ret
je
ret
sbb
addr16
data16
fst
inc
bound
push
and
push
push
jae
add
dec
int3
and
shr
adc
mov
loopne
pop
ins
call
mov
cmp
iret
pop
sbb
pop
pusha
dec
add
or
loope
pusha
cmp
scas
dec
push
loope
pop
outs
movs
ret
mov
or
xchg
dec
push
xor
imul
mov
test
jns
outs
pop
lock
nop
jns
push
jno
mov
mov
ds
ja
mov
(bad)
xchg
loope
xchg
leave
rcl
sahf
and
sar
ret
gs
xchg
ja
push
jno
push
jae
addr16
push
rcr
sbb
xchg
rcr
and
fidiv
jge
ss
add
push
mov
cmovb
in
mov
and
xchg
es
and
jno
aas
push
fld
pop
inc
jns
dec
popf
xchg
jmp
sub
mov
cmps
dec
xchg
sub
push
repnz
shl
aam
call
aaa
push
sub
push
les
popa
in
hlt
xchg
test
shl
mov
xor
pop
das
stos
fmul
out
cmps
scas
jmp
jle
mov
sbb
(bad)
ficomp
repz
cmp
jno
or
popf
pop
jmp
inc
cmp
nop
fdivr
enter
cdq
stos
mov
fcomp
ja
inc
jle
fidivr
or
bound
cli
cmp
mov
add
cmp
dec
in
pop
and
jb
outs
pop
push
mov
xchg
mov
in
add
stos
jg
push
cmps
lds
arpl
xchg
xchg
(bad)
scas
inc
push
sahf
stos
pop
sub
int
arpl
adc
jmp
arpl
cmc
popf
push
das
cvtps2pi
push
call
ss
sti
dec
mov
dec
mov
adc
lods
jno
popf
out
fsub
enter
pop
(bad)
cmp
sbb
mov
fs
jecxz
pop
cmp
inc
sbb
call
adc
jl
sbb
or
add
inc
adc
mov
das
mov
or
in
popf
test
cmps
xchg
pop
mov
jg
jbe
fmul
(bad)
dec
mov
(bad)
dec
dec
push
mov
mov
dec
repnz
xchg
mov
out
sbb
pop
repnz
push
in
mov
scas
push
ret
push
js
pop
je
movs
nop
jno
lock
movs
fnstsw
and
je
xchg
and
mov
dec
lods
mov
test
sar
push
mov
jnp
mov
and
mov
mov
inc
sar
cli
push
sbb
rcl
jge
jno
or
cmp
mov
sub
mov
repnz
or
push
dec
icebp
jp
(bad)
fsubr
jl
add
mov
imul
dec
or
out
push
daa
xor
test
icebp
leave
and
adc
push
js
mov
push
retf
jb
push
ror
dec
xchg
sbb
ja
scas
jns
dec
or
lds
adc
pop
call
jae
daa
xchg
xor
mov
fs
cs
xor
(bad)
pop
retf
push
into
mov
enter
inc
and
inc
xchg
jecxz
xchg
ja
into
mov
push
mov
and
dec
cmp
push
or
push
cmp
(bad)
mov
mov
stos
mov
mov
pop
rol
inc
xchg
jmp
mov
dec
push
dec
leave
jg
das
sar
sub
gs
imul
rol
sahf
cmp
pop
pop
int3
xchg
push
loopne
test
mov
fwait
sti
sub
sbb
and
out
fild
mov
lock
add
and
and
outs
xchg
nop
pop
shl
imul
cmp
push
add
lds
je
int3
shl
shl
sub
jl
leave
pop
cdq
adc
lock
out
jmp
xor
sbb
and
push
sbb
xor
mov
jne
hlt
into
lods
cmps
fstp
mov
push
add
fisub
or
or
xor
mov
or
mov
lock
loop
dec
or
dec
enter
sbb
sub
mov
lds
jg
scas
(bad)
test
push
(bad)
cmp
and
imul
dec
repz
pop
inc
jb
leave
push
adc
in
retf
mov
xchg
cmc
mov
xor
aaa
lea
pop
adc
call
push
or
xor
cmp
add
shr
outs
mov
jp
push
or
adc
aas
push
mov
mov
adc
std
hlt
ffreep
pop
fnstcw
hlt
xlat
sbb
fcmovbe
xor
retf
outs
fcom
shl
push
xor
call
pop
adc
add
imul
mov
jg
jmp
cwde
into
add
(bad)
add
sub
xchg
adc
stos
arpl
jle
mov
in
jmp
xor
mov
lock
lock
ins
les
int
retf
mov
pop
rcr
jmp
push
out
adc
lds
push
jbe
xchg
test
loope
aam
push
aas
das
xchg
mov
repz
pop
sub
jecxz
pop
and
lods
aas
fsubrp
xchg
adc
sub
ja
push
test
out
cdq
cwde
cmp
shl
xor
add
retf
fsub
or
lahf
pop
mov
fs
mov
sti
fidiv
movq
or
sbb
and
stos
mov
dec
aad
std
mov
pop
loopne
mov
add
jbe
fisub
sub
movs
mov
or
test
sub
jmp
rol
pop
cmc
lds
mov
rcl
sub
mov
pop
(bad)
or
adc
sub
or
outs
shr
push
and
inc
add
add
or
scas
aas
ret
sub
inc
xor
cmps
inc
jl
iret
mov
stc
nop
push
adc
and
lahf
sahf
push
adc
out
cmps
xor
sub
enter
clc
ds
push
or
dec
mov
call
or
pop
cmp
xchg
(bad)
mov
repz
mov
rcl
mov
pushf
fs
movs
ins
ret
mov
xchg
(bad)
jl
lea
push
cmp
retf
sbb
inc
and
ds
jmp
mov
mov
mov
jno
push
and
int
dec
adc
pop
xor
aam
out
aaa
adc
les
sahf
pop
push
movs
inc
mov
or
push
ret
pop
xcrypt-cbc
cmps
adc
jns
stos
shr
loop
xchg
call
or
dec
sbb
sbb
daa
mov
and
test
cmp
icebp
cwde
pop
mov
sbb
push
iret
test
and
test
cmp
lods
or
lea
xor
jne
scas
cld
ins
mov
jae
ret
sbb
aad
das
mov
(bad)
out
mov
sub
stos
push
jmp
test
repz
outs
add
mov
stos
rcr
push
xor
nop
shl
data16
xor
mov
inc
jmp
mov
adc
pop
and
aas
shr
mov
stos
stc
ficomp
aas
pop
xchg
dec
xor
mov
or
mov
loope
imul
fisttp
das
cmp
mov
aas
xor
add
or
push
js
in
add
jae
push
pop
ja
iret
les
inc
xchg
movs
ds
clc
push
dec
emms
(bad)
push
dec
ret
push
loop
scas
jno
test
mov
inc
inc
jmp
imul
das
cmc
ror
adc
rol
loope
inc
jb
xor
clc
jl
cmp
arpl
xchg
ds
mov
xor
push
xchg
dec
xor
xor
inc
or
cmp
aas
sub
int
and
jmp
js
hlt
inc
xchg
sbb
ror
icebp
inc
cmp
clc
mov
dec
into
(bad)
repnz
adc
(bad)
loopne
xchg
push
xchg
sub
add
and
not
mov
out
retf
push
in
out
out
adc
inc
ds
mov
jmp
ficom
test
mov
daa
gs
xchg
mov
xchg
mov
cli
into
xor
daa
pop
imul
mov
pop
sub
xor
dec
mov
mov
mov
dec
daa
cmps
jle
and
(bad)
sub
xchg
adc
or
push
mov
mov
and
test
pop
add
mov
rcl
xor
add
push
sub
or
les
mov
daa
xchg
fbld
js
lods
jmp
push
sub
mov
push
or
pop
stos
fsin
dec
mov
mov
mov
push
inc
mov
mov
push
pop
push
inc
jb
xor
inc
stos
add
pop
sbb
dec
xchg
jecxz
dec
pop
xor
and
dec
xlat
std
cmp
cli
outs
test
in
test
cli
ins
mov
adc
pop
fwait
ret
ffree
mov
mov
rcl
arpl
xchg
and
jns
dec
cld
xor
sbb
call
es
sbb
mov
test
mov
(bad)
test
cli
lock
hlt
jp
mov
aad
iretw
movs
jno
imul
xor
out
mov
jno
cs
or
test
out
push
inc
jmp
je
arpl
pop
ds
lock
pop
xchg
sbb
mov
inc
mov
aam
mov
dec
mov
mov
test
pop
push
inc
push
test
inc
cmc
out
mov
lock
push
mov
mov
pop
dec
inc
jo
mov
adc
popf
dec
sub
xchg
push
xchg
or
(bad)
mov
add
xchg
xchg
outs
gs
sahf
ror
push
adc
(bad)
call
repz
mov
cwde
pusha
pop
cmc
outs
cs
jmp
push
test
xor
mov
xor
xor
sub
pop
stos
mov
push
sub
(bad)
pusha
aad
stos
out
mov
adc
cdq
sbb
fiadd
add
adc
inc
rol
mov
mov
fwait
ins
sub
adc
ret
in
inc
sub
aas
aas
repz
push
dec
sahf
lds
push
ins
mov
push
mov
mov
cdq
sbb
arpl
(bad)
mov
bound
popf
daa
rcl
jo
mov
ds
add
cmp
pop
mov
inc
adc
xchg
add
cmp
jae
mov
xchg
enter
pop
jno
mov
aas
out
push
dec
jnp
dec
xchg
jg
ds
imul
lods
dec
jb
mov
data16
mov
adc
rol
aad
push
or
pop
rcr
add
je
pop
enter
mov
xchg
das
ins
push
sub
or
outs
call
jb
fld
push
loop
inc
pop
mov
dec
or
cmp
popa
dec
and
add
clc
int
leave
jo
retf
dec
scas
shl
stos
or
mov
sub
mov
inc
cmps
cmp
aas
mov
aam
jae
sbb
aas
add
lds
mov
repz
or
sub
mov
repz
into
mov
mov
pop
xchg
push
std
sbb
imul
bound
inc
ja
mov
xchg
icebp
mov
imul
adc
das
dec
fwait
xchg
cld
mov
dec
mov
pop
and
push
pusha
in
loopne
pop
nop
dec
add
jecxz
sub
mov
mov
pop
push
inc
mov
xchg
repnz
jne
mov
pop
inc
mov
das
mov
push
adc
cs
xchg
int
(bad)
test
or
clc
mov
mov
lahf
retf
fadd
bts
(bad)
aaa
pop
mov
jae
test
push
(bad)
dec
xchg
js
rcl
xor
pop
and
xchg
pop
push
imul
mov
lea
dec
push
sbb
lods
cli
sti
sbb
add
jb
xchg
fisttp
out
mul
out
int3
or
test
inc
in
mov
push
daa
xchg
or
adc
pop
push
pop
push
add
in
dec
add
xchg
jmp
enter
dec
add
mov
mov
mov
icebp
out
iret
retf
mov
xor
std
mov
dec
nop
test
test
test
stos
frstor
jmp
mov
mov
outs
add
mov
mov
dec
sbb
xchg
ret
loop
jo
ret
retf
dec
xchg
ret
pop
mov
add
sbb
mov
push
shl
scas
lds
push
shl
into
xchg
pushf
add
sbb
xchg
fwait
xor
test
and
nop
cmp
repz
xchg
int
jo
pop
and
mov
lods
enter
repnz
sub
aas
aaa
mov
add
inc
mov
out
adc
nop
movs
daa
mov
pop
std
mov
(bad)
mov
sub
cmp
clc
repnz
out
test
das
mov
xor
pop
or
jmp
and
fist
push
test
pop
mov
mov
pop
adc
jle
(bad)
xor
call
popa
cmp
cmp
mov
leave
add
out
mov
sub
xor
call
mov
cmp
sub
pop
in
push
pop
mov
enter
cmp
push
nop
mov
jns
mov
sub
add
mov
add
popf
inc
hlt
mov
or
fild
cmc
das
mov
stos
or
test
ds
pop
(bad)
or
cmp
push
lods
mov
imul
mov
adc
mov
inc
mov
adc
test
in
add
das
sbb
shl
rol
and
mov
push
sahf
out
xchg
mov
das
adc
cmps
outs
mov
mov
mov
pop
sub
dec
mov
not
daa
mov
xchg
je
test
xchg
and
xchg
dec
gs
out
pop
mov
add
pop
pushf
xchg
pop
aam
push
mov
stos
aaa
push
dec
sub
mov
dec
jge
hlt
cmp
jle
mov
icebp
ror
ins
push
out
mov
mov
xchg
mov
dec
mov
mov
pop
or
call
fwait
jnp
jp
pop
lahf
add
push
sbb
pop
dec
mov
stc
xlat
not
inc
cli
popf
add
(bad)
fistp
mov
aas
inc
(bad)
pushf
xchg
mov
xchg
rcr
test
retf
scas
sub
push
or
xor
fdivr
cmp
(bad)
or
test
rcr
xor
push
inc
aad
cmp
les
and
push
gs
iret
je
enter
pop
xor
sti
xlat
dec
cmp
inc
lds
mov
je
es
popf
clc
imul
xchg
fnstenv
pop
inc
je
pop
imul
in
dec
test
(bad)
jmp
(bad)
(bad)
ret
mov
and
push
push
in
mov
pop
paddw
adc
mov
data16
bound
pop
push
xchg
cld
xor
mov
in
aam
ret
sbb
adc
pushf
stos
inc
not
lahf
jnp
inc
xchg
das
or
cmps
inc
xor
imul
mov
push
pop
and
inc
jb
fmulp
dec
xchg
xor
call
inc
adc
xchg
daa
fcmovne
out
fadd
push
push
mov
and
cmp
xchg
out
addr16
imul
pop
xor
imul
jno
les
or
pop
or
stos
cdq
scas
sbb
call
xor
ds
retf
(bad)
mov
dec
adc
xlat
jp
call
(bad)
fwait
mov
dec
xor
sbb
mov
(bad)
fwait
mov
sti
pop
jne
push
aam
in
jl
or
push
mov
and
jge
dec
push
ficom
and
sbb
dec
(bad)
push
sti
(bad)
xchg
push
das
mov
adc
sub
repz
dec
xchg
jno
or
cmp
daa
cmp
hlt
(bad)
or
sbb
into
adc
xchg
jo
sub
in
repnz
bnd
(bad)
movs
jmp
fsub
dec
daa
les
xchg
addr16
jnp
test
and
mov
sbb
dec
mov
pop
inc
xchg
lds
ret
inc
jmp
pop
aas
rcl
and
idiv
popf
adc
inc
jns
test
xchg
(bad)
cld
enter
jmp
ja
popa
nop
(bad)
mov
mov
adc
and
and
in
cdq
in
sbb
sub
imul
mov
outs
jnp
fsub
mov
ror
and
jmp
sti
nop
push
push
push
stos
clc
jae
cmps
lock
ins
cli
xchg
mov
add
push
pop
dec
out
sbb
iret
stc
aaa
or
mov
inc
fidivr
push
test
mov
aaa
nop
sbb
jno
les
mov
pop
push
jo
pop
sar
mov
inc
cld
lock
fcomp
and
inc
push
ds
sub
cmp
and
shr
xor
arpl
dec
ins
mov
cli
xchg
inc
test
xchg
and
popf
call
cmp
std
jo
xlat
pop
int
cli
jmp
mov
xchg
ss
outs
push
loop
pop
popf
test
inc
cmp
mov
lods
and
fs
sub
idiv
ins
(bad)
or
fdivr
mov
pop
jge
aas
mov
lock
loopne
push
jle
mov
nop
add
shl
jge
xor
mov
pop
xchg
iret
nop
ror
aas
movs
retf
cmp
jge
jmp
sahf
pop
xchg
dec
pop
ficom
mov
jecxz
pop
cwde
loop
cmps
inc
jmp
scas
add
pop
xchg
je
xchg
adc
cmps
mov
xor
pop
mov
or
push
or
out
pusha
cmps
pop
mov
jb
nop
inc
and
jne
scas
into
jb
retf
inc
test
mov
pop
inc
sub
xchg
mov
push
pushf
jge
mov
inc
imul
xchg
(bad)
push
pminub
cmp
mov
pop
cmp
lds
call
ror
sti
jmp
dec
jno
pop
pop
or
clc
mov
or
jle
imul
not
jo
mov
movs
arpl
push
repz
cmp
ins
rol
mov
mov
repz
push
push
(bad)
retf
cmp
maskmovq
and
jg
lock
mov
cdq
lea
std
out
xchg
(bad)
clc
mov
jmp
sbb
sub
cdq
loope
je
pop
movs
int3
dec
out
adc
stos
repnz
sub
mov
in
mov
dec
sbb
or
xchg
cmp
mov
popa
test
mov
xor
cmc
mov
retf
loop
lock
xchg
inc
in
jo
jg
rol
cmp
dec
pop
add
outs
inc
(bad)
push
push
sub
fbstp
jns
jae
lds
xor
sbb
mov
or
inc
arpl
pop
adc
add
enter
sub
push
loope
mov
mov
ins
or
add
dec
pop
xchg
dec
ja
cmp
stc
xor
jl
aam
clc
and
inc
call
mov
xchg
arpl
stos
xorps
ret
dec
xchg
pop
inc
pop
lahf
scas
push
mov
mov
xor
retf
inc
jmp
xchg
inc
xchg
add
xor
pop
fld
stos
push
dec
lods
xchg
jb
pop
ja
cdq
fdivr
mov
sub
mov
mov
push
popa
inc
test
div
das
cmps
xchg
push
mov
jmp
fwait
call
lock
nop
and
mov
je
out
push
popa
pop
(bad)
aas
or
out
shl
xor
pop
cli
jae
cmp
fcom
inc
test
movs
sub
retf
cli
cmp
imul
mov
pusha
mov
jns
repz
mov
pop
push
lock
shl
fcom
enter
mov
outs
or
out
cli
jno
sub
nop
jae
mov
adc
mov
push
test
push
sbb
aas
adc
sub
scas
iret
nop
inc
jnp
inc
inc
repz
in
push
hlt
or
inc
pop
ret
lds
xchg
adc
push
jle
scas
retf
add
fiadd
ret
cmp
dec
or
pop
addr16
adc
lods
hlt
xor
add
loope
(bad)
jge
push
jge
movs
lock
ss
xor
sub
mov
mov
mov
cmp
xor
xchg
pop
je
rcr
sbb
jecxz
retf
sub
push
sub
out
xor
fiadd
in
and
gs
adc
(bad)
jecxz
mov
popf
xchg
scas
pop
sahf
mov
popf
dec
push
ror
dec
daa
and
test
push
out
rcr
jg
mov
test
fnstsw
add
mov
(bad)
aam
inc
clc
sar
hlt
or
adc
iret
inc
mov
dec
mov
xor
xchg
stos
into
mov
push
xchg
sub
or
js
add
daa
call
mov
sbb
lods
xchg
jnp
mov
jbe
jecxz
stos
inc
aad
les
daa
push
xchg
push
dec
jae
pop
stos
push
push
jl
outs
cmp
dec
loopne
mov
mov
js
mov
mov
push
adc
pop
mov
mov
fcom
(bad)
mov
fdivr
inc
movs
in
and
fadd
icebp
jge
cld
outs
in
loope
push
stos
movaps
pop
xchg
add
lock
mov
(bad)
mov
pop
pop
sbb
pop
lock
call
jnp
or
sahf
fistp
aaa
sub
hlt
test
out
jge
inc
loopne
ror
imul
push
inc
(bad)
movs
mov
push
out
cmp
xchg
idiv
jle
fdivr
cmp
sub
in
mov
jle
mov
mov
pop
xchg
dec
ds
mov
xchg
jge
adc
and
pop
inc
outs
fidivr
mov
shl
inc
ficomp
test
sub
and
adc
add
shl
sub
das
xchg
mov
popf
sbb
fidiv
add
or
popa
mov
sbb
mov
shr
loope
sbb
cmp
(bad)
imul
lods
push
mov
adc
fs
push
iret
mov
(bad)
xchg
icebp
inc
lock
adc
dec
push
mov
mov
(bad)
in
mov
dec
dec
fdivr
ja
sbb
sbb
xchg
ret
fxtract
call
daa
vpsraw
pop
xchg
dec
xchg
push
adc
cmp
push
cmp
fs
inc
clc
mov
pusha
inc
fld
aas
dec
(bad)
cmp
popf
out
pop
jge
outs
leave
es
mov
push
rcl
pop
dec
(bad)
push
dec
mov
loopne
mov
sbb
scas
push
or
test
xchg
jl
or
je
add
pop
inc
mov
stos
cmp
sub
add
ja
push
sahf
test
fst
xchg
sbb
push
aam
repz
pop
(bad)
cdq
fisub
and
xor
mov
rcl
sbb
sub
xchg
test
push
cwde
imul
ret
cmp
ss
dec
jo
mov
mov
pushf
dec
or
push
dec
fadd
add
xchg
mov
(bad)
in
ror
aad
cmc
shl
js
mov
lock
xchg
cmp
stos
in
mov
jecxz
enter
cmp
sar
cmp
xchg
push
out
aaa
mov
dec
dec
sbb
push
push
stc
mov
out
or
std
pop
pop
push
pop
test
aaa
std
int
ins
dec
dec
bound
add
cmp
int3
mov
(bad)
cmc
shl
xchg
ror
je
les
mov
jl
(bad)
mov
ins
push
retf
loop
arpl
hlt
and
stos
aam
(bad)
cli
dec
cmp
inc
mov
(bad)
lahf
pop
hlt
mov
mov
push
out
and
ret
and
stos
(bad)
sbb
push
or
or
push
aas
ds
shl
lock
icebp
add
mov
dec
xchg
cmp
loopne
pop
sub
out
xor
push
mov
and
loopne
pop
jmp
adc
add
sti
cmp
lods
shl
int3
loop
mov
jp
fldcw
imul
scas
inc
(bad)
mov
xor
lods
test
jne
push
imul
pop
mov
aas
in
lods
clc
pop
pop
js
adc
pop
pop
jge
inc
dec
mov
sub
push
cmp
shl
cmp
clc
xchg
int
jae
hlt
test
adc
cmp
sub
cmc
outs
add
pop
xor
in
dec
jne
lds
and
ror
sbb
outs
movs
mov
xor
loope
repnz
xchg
ret
fwait
add
out
sub
sub
xchg
sbb
cdq
mov
mov
lahf
arpl
add
loopne
popa
cld
movlps
and
add
retf
jmp
dec
lods
push
push
adc
(bad)
jmp
dec
jmp
sub
pop
icebp
mov
daa
popa
mov
dec
pop
jl
mov
adc
loop
inc
add
rol
jae
out
sar
test
pop
cmps
xor
jle
xchg
xchg
out
dec
dec
push
data16
loope
adc
lds
daa
call
sbb
test
popf
xor
sub
pop
mov
gs
bound
push
rcr
xchg
mov
inc
dec
mov
cmp
jb
stos
pop
imul
aaa
loopne
enter
bound
adc
jle
and
mov
lods
xor
ins
xchg
jno
push
push
cmp
inc
xchg
cmp
pop
xor
sahf
mov
nop
sub
es
out
adc
dec
ret
mov
jae
arpl
pop
or
mul
jecxz
imul
icebp
es
sub
enter
sub
xor
add
add
jl
xchg
clc
icebp
push
push
mov
xor
pop
stos
aaa
sbb
sub
retf
fnstenv
sti
push
xor
or
dec
inc
pop
and
repnz
out
mov
xchg
std
lds
jmp
outs
sub
jmp
push
sbb
fdiv
not
push
mov
mov
xchg
xchg
bound
cmps
test
xchg
enter
dec
aaa
mov
xchg
mov
retf
rol
test
call
neg
ja
add
push
mov
(bad)
mov
cli
scas
scas
out
inc
or
jb
fld
push
lock
cmp
mov
or
sub
sbb
jmp
outs
test
arpl
push
push
cmc
push
ret
std
or
adc
aam
ins
std
out
addr16
push
xchg
jno
push
call
pop
mov
inc
jne
in
dec
adc
xchg
test
test
xor
ja
mov
cmps
into
out
sub
sub
sti
jmp
enter
xor
out
sub
push
add
push
out
test
pushf
push
shl
add
jl
leave
sahf
pop
cmp
dec
and
es
mov
mov
inc
cmp
pop
dec
movs
inc
mov
push
xchg
or
jns
sbb
fmul
jg
sar
scas
imul
js
sbb
sahf
push
add
and
enter
lds
mov
loope
or
lods
dec
test
sbb
sar
inc
xor
and
std
jo
fisub
aaa
mov
jo
add
test
jmp
(bad)
jno
cmp
mov
cs
mov
xchg
stc
dec
test
sbb
push
js
dec
xchg
xchg
pop
xchg
inc
mov
or
enter
mov
pop
mov
cmp
add
jae
ds
mov
xchg
and
into
cmps
ret
mov
xor
mov
add
sub
pop
pop
adc
fisttp
pop
sbb
add
mov
inc
sbb
dec
adc
xchg
dec
push
add
and
rcr
pop
cmp
cld
dec
mov
adc
scas
add
xchg
mov
mov
psubsb
call
mov
mov
mov
enter
daa
fs
clc
test
je
repnz
mov
jmp
cli
sbb
sbb
mov
aas
sar
gs
inc
or
mov
daa
outs
or
mov
arpl
test
or
es
xchg
xor
jmp
push
jbe
fist
jge
rcl
loope
cmp
bound
jo
inc
aam
mov
or
das
adc
icebp
add
clc
cmp
mov
push
ficomp
jle
push
int
ret
push
cdq
rcl
dec
xor
pop
inc
pop
js
and
cmps
sbb
movs
pop
ret
ja
mov
(bad)
outs
mov
cmp
mov
sbb
add
and
push
jl
and
jns
add
in
jmp
and
div
push
push
pop
mov
ds
loope
dec
retf
aam
jbe
enter
(bad)
jo
sbb
mov
dec
and
sti
mov
jge
pop
hlt
icebp
addr16
out
sub
repz
push
icebp
add
push
and
fnstenv
scas
call
pop
mov
cmp
xchg
btc
dec
mov
pop
gs
out
mov
stos
mov
jnp
retf
and
test
or
and
push
push
out
xor
inc
out
fmul
imul
adc
xchg
mov
add
and
adc
or
mov
mov
in
mov
imul
movs
pop
imul
outs
jle
xchg
movs
dec
lods
and
push
outs
dec
ds
sar
ja
cmp
jno
xchg
rol
adc
sbb
push
push
icebp
push
shl
mov
xchg
test
ja
dec
in
sub
(bad)
jmp
ficom
ret
mov
jle
outs
add
sbb
mov
imul
sbb
inc
imul
pop
cmps
cmp
xchg
dec
shr
xchg
pop
mov
mov
pop
ja
aaa
retf
adc
mov
cmp
mov
sar
shl
imul
enter
jmp
leave
sti
shl
fs
cmp
fwait
js
adc
ja
pop
push
pop
add
mov
sub
xchg
jno
or
addr16
and
add
sub
add
mov
dec
xchg
ds
pop
fistp
jae
loope
movs
dec
cli
clc
test
mov
or
xor
retf
jmp
jns
add
sub
jg
popa
ja
mov
fisttp
frstor
bound
cli
ss
xchg
idiv
fisubr
lahf
enter
jmp
arpl
xor
push
and
add
or
dec
ins
lods
pop
jmp
shr
int3
dec
enter
pop
pop
cmps
sbb
into
push
popa
lea
dec
int3
add
je
ja
mov
rcl
jmp
xchg
mov
sbb
popa
cmp
mov
out
sub
xchg
imul
ret
pop
jbe
mov
stos
mov
ficom
add
adc
mov
push
sbb
push
jp
outs
xchg
popa
push
push
and
jmp
push
mov
sub
dec
push
loopne
fst
cmc
lock
scas
aas
jb
add
inc
cmps
jae
jg
push
daa
lods
adc
sar
lahf
ja
daa
pushf
xchg
fstp
stos
(bad)
dec
dec
pop
pop
xchg
jl
sub
dec
inc
pop
dec
retf
jbe
(bad)
dec
or
mov
mov
xchg
sbb
into
pop
or
xchg
dec
(bad)
jo
sahf
xchg
lods
stos
pop
inc
jge
fnsave
mov
inc
push
push
jmp
test
sub
movs
rcr
int
mov
adc
sbb
outs
and
jmp
cmp
push
stos
arpl
jbe
sub
lods
das
inc
and
jbe
fldenv
dec
repnz
inc
pop
xor
les
push
movs
sahf
jg
mov
adc
call
jo
stos
int3
pop
enter
push
or
std
add
lods
add
push
out
cmps
xchg
and
dec
jno
daa
lock
mov
ss
sahf
dec
scas
pop
or
xor
stos
dec
imul
xor
mov
fcom
and
sbb
dec
add
sbb
arpl
mov
and
lods
inc
imul
push
sub
pop
hlt
fdiv
xchg
add
rcr
jb
outs
cmps
mov
retf
leave
cmp
jnp
and
aas
push
cmps
ds
retf
pmaxsw
scas
jne
pop
mov
pop
push
jmp
(bad)
mov
push
mov
xor
mov
cld
ds
pop
outs
in
test
cwde
inc
jo
sahf
es
pop
inc
mov
(bad)
or
push
shr
ret
push
sub
into
dec
into
lods
mov
out
jns
mov
(bad)
int
adc
add
lods
and
dec
add
nop
inc
lahf
fldl2e
or
hlt
xor
sbb
mov
addr16
repnz
bound
dec
sbb
xchg
stc
and
ds
stos
shl
ror
mov
pop
add
scas
icebp
jecxz
dec
sub
mov
aas
in
fs
sub
neg
mov
ret
into
mov
mov
cdq
push
sbb
xchg
push
pop
and
mov
xchg
out
mov
mov
mov
push
shr
xchg
mov
call
cmc
test
daa
sbb
mov
dec
js
mov
outs
pop
in
mov
jge
pushf
lds
or
js
fisttp
jno
jne
sti
jge
and
test
dec
adc
mov
ret
sub
fwait
push
xchg
push
loope
pop
je
addr16
sbb
cwde
mov
pop
out
xchg
test
cmp
fs
test
mov
inc
pop
push
div
push
(bad)
push
fiadd
mov
push
pop
scas
mov
push
lods
jne
or
pop
test
jnp
xor
movs
sub
xchg
inc
stos
sbb
xchg
data16
xlat
imul
xor
les
fwait
sbb
pop
jmp
push
push
mov
ror
sub
fcom
mov
mov
inc
lods
jnp
sbb
mov
(bad)
fs
cmp
fimul
hlt
fs
inc
inc
sbb
(bad)
hlt
fisttp
xchg
out
jno
cmc
and
cmc
sub
or
jo
jo
outs
stos
leave
movs
out
arpl
dec
in
cmc
ja
repz
rcl
imul
sbb
fisttp
adc
jo
out
sub
mov
mul
push
xor
sbb
adc
xchg
nop
push
loop
pop
scas
mov
fsin
add
or
sub
fisub
xor
mov
sbb
movs
int3
mov
sbb
ja
or
adc
sub
leave
inc
imul
and
fist
jg
ja
test
push
sbb
shl
pop
fs
sahf
xchg
fnsavew
adc
xchg
fiadd
out
loope
(bad)
sti
dec
add
mov
iret
lock
xlat
shl
inc
gs
pop
fwait
movs
movs
pop
pop
push
hlt
dec
mov
in
push
push
pop
shl
jecxz
mov
cmps
pop
push
mov
rcr
sbb
pop
cmp
sub
retf
xchg
ins
ins
push
ret
(bad)
std
ret
xchg
xor
ins
sahf
outs
jns
cmps
pop
ss
sub
ss
dec
mov
cmp
icebp
fs
jb
(bad)
stos
adc
sub
repz
xor
xor
(bad)
aam
pop
push
pushf
xor
cmc
push
mov
jb
pop
xchg
fst
mov
mov
mov
movs
mov
rep
std
xchg
inc
test
movs
jnp
stos
inc
jo
dec
push
imul
inc
or
mov
sbb
xor
xchg
test
and
jle
imul
jp
inc
inc
sub
push
push
gs
pop
inc
ret
stos
mov
test
xor
push
imul
cmp
and
dec
fisub
xor
aam
pop
movs
push
inc
pushf
inc
mov
popf
cmp
dec
sbb
repnz
loop
xor
enter
aaa
ins
lock
push
jbe
ss
push
jp
movs
sbb
dec
icebp
ins
mov
push
cmps
and
int
xchg
jecxz
icebp
test
cwde
sub
dec
mov
adc
pop
into
cmp
cmp
lods
dec
and
(bad)
pop
push
xor
cmps
mov
ins
sar
jbe
dec
scas
xor
fidiv
inc
sub
js
inc
adc
and
data16
cmps
mov
in
bound
mov
inc
jge
mov
mov
aam
push
test
jge
mov
mov
pop
mov
ret
outs
repnz
xor
mov
inc
stos
ret
call
imul
sub
out
shl
jno
sbb
push
ror
jns
add
icebp
aam
xor
add
add
jnp
lods
xor
jmp
dec
jle
jecxz
sbb
pop
inc
inc
jb
push
cmp
push
and
jns
and
lahf
push
int3
xchg
dec
fidiv
leave
adc
sub
mov
push
dec
pop
dec
jbe
fisubr
dec
jns
mov
loope
jns
stos
push
cmp
and
sub
out
xor
mov
sub
out
push
fcmovb
jne
pop
popf
sbb
pusha
call
sbb
and
jne
bound
outs
inc
int3
fiadd
fidivr
jnp
cmps
push
cld
mov
neg
mov
sub
(bad)
shl
add
cmps
(bad)
js
cdq
cmp
push
inc
pop
dec
xlat
cmp
inc
jns
mov
fiadd
xchg
retf
arpl
aam
pop
adc
inc
pop
push
imul
jp
lods
retf
adc
add
outs
outs
adc
cmps
add
popf
dec
mov
or
lahf
call
icebp
mov
mov
pop
xchg
stos
inc
call
adc
push
mov
xchg
dec
xchg
sbb
bound
outs
jecxz
add
sub
add
mov
retf
push
test
jbe
mov
inc
inc
push
dec
mov
inc
push
jnp
xor
xchg
(bad)
cmp
pushw
cwde
cs
mov
cmc
mov
int
(bad)
inc
inc
imul
xchg
clc
xchg
push
stos
cmp
lods
mov
(bad)
std
or
hlt
jae
push
test
iret
test
xchg
pop
pop
push
fstp
out
xlat
std
shl
add
sahf
push
add
mov
jle
xchg
repnz
(bad)
inc
out
fdiv
out
dec
aam
test
fldenv
mov
outs
or
sub
xchg
xchg
in
mov
out
in
or
pushf
faddp
call
(bad)
sub
mov
push
push
mov
call
add
std
or
ret
lea
(bad)
cmp
add
dec
or
and
test
call
push
aas
adc
imul
add
popf
ret
shl
ins
and
xchg
jno
mov
out
out
jno
ret
dec
sbb
push
sub
dec
test
inc
xor
fdiv
shl
stos
mov
jecxz
xlat
movs
daa
push
xchg
js
jp
inc
sub
lods
pop
add
sti
inc
pop
or
data16
test
jne
mov
mov
or
xor
xor
pop
imul
mov
jno
scas
and
out
nop
cmp
ja
shl
movs
into
ret
add
bound
sub
jl
push
das
les
test
add
cmc
adc
push
std
lods
push
je
test
aam
jo
inc
mov
sbb
je
dec
fild
xor
ret
pop
jae
xor
ja
ss
mov
test
lods
leave
push
stos
lock
mov
shr
jge
clc
sub
push
xor
push
or
jl
clc
jbe
pop
push
inc
adc
add
in
repz
xor
and
or
je
(bad)
jp
mov
lods
call
inc
dec
mov
test
test
lahf
ret
jle
retf
mov
sbb
sub
cmp
stc
and
call
lea
repz
punpcklbw
cmp
mov
mov
lods
mov
mov
push
arpl
jge
pusha
enter
mov
gs
pop
dec
adc
addr16
imul
sbb
and
cmp
gs
and
mov
inc
or
pop
sbb
retf
(bad)
(bad)
jae
dec
mov
rcl
(bad)
sti
stos
jecxz
jecxz
mov
leave
sub
cwde
push
lahf
mov
or
jnp
cmp
xor
push
xchg
mov
(bad)
adc
imul
and
in
sbb
fdiv
pop
or
and
mov
jmp
je
dec
loope
ret
push
jae
ret
cmc
pop
adc
out
xor
pop
jae
aam
xchg
outs
mov
mov
fs
repz
mov
pop
cmp
out
fsubr
jb
adc
xchg
jbe
push
xchg
daa
pop
cmp
xor
jg
(bad)
xchg
mov
cmp
push
dec
dec
test
pop
test
pop
nop
xchg
dec
imul
sti
popf
cli
mov
xchg
mov
sub
xchg
lahf
cmp
lds
xchg
stos
push
mov
bound
pop
fwait
js
rcr
shl
ja
loop
push
fidivr
inc
jl
push
mov
jae
aad
loop
sahf
mov
data16
lods
mov
gs
dec
push
mov
xchg
xchg
mov
ds
or
shl
ret
ss
les
adc
dec
push
in
adc
ds
fwait
mov
int
mov
xor
out
icebp
cmp
imul
mov
sti
mov
in
mov
pop
dec
icebp
sbb
push
mov
and
retf
xchg
aaa
mov
scas
inc
cmps
das
movs
mov
aam
into
push
sub
add
mov
cli
ds
mov
and
cmp
dec
xchg
loop
call
push
test
sub
outs
mov
shr
imul
mov
lock
imul
into
xor
mov
stos
jmp
ss
ss
jo
scas
inc
arpl
jbe
push
lahf
push
int3
add
and
ds
je
cmp
or
outs
imul
mov
xor
call
mov
pushf
and
lahf
dec
sub
pusha
test
call
mov
push
jle
(bad)
pop
push
lods
(bad)
sub
inc
mov
js
dec
fbstp
ficomp
jbe
add
jbe
cmp
les
shl
xchg
mov
xor
stos
ret
lods
mov
ror
mov
shr
xchg
dec
stos
push
xchg
fdivr
fiadd
add
sbb
cmp
mov
add
lods
loopne
lahf
jae
lods
and
leave
icebp
shl
mov
push
cmp
adc
fdivr
push
inc
mov
repz
xlat
inc
(bad)
dec
or
in
and
dec
xchg
movs
jns
aas
int3
out
mov
xor
repz
dec
addr16
inc
adc
sub
lea
cld
in
adc
dec
lods
repnz
mov
mov
mov
in
movs
out
xchg
stos
push
jmp
pop
bound
int
mov
and
cld
jmp
lods
in
mov
dec
sub
mov
inc
and
sub
mov
pop
jp
inc
xchg
loope
nop
arpl
sub
mov
rol
imul
addr16
das
jmp
mov
hlt
bound
mov
mov
or
shl
add
push
lds
jnp
jns
sub
xchg
xor
cmps
dec
inc
in
or
push
push
xchg
(bad)
leave
out
inc
xlat
mov
data16
and
sub
push
and
outs
inc
jne
scas
fild
test
les
mov
loop
pop
out
ds
push
pusha
mov
arpl
lds
xor
rcr
cmp
retf
jg
xor
sub
mov
add
icebp
outs
mov
es
xchg
(bad)
mov
xor
popa
adc
not
out
jmp
mov
scas
xchg
sub
push
push
pop
pop
xchg
and
leave
cli
loopne
cmp
(bad)
xor
hlt
mov
mov
xchg
pop
cmc
scas
retf
sub
popa
sbb
jae
dec
mov
mov
test
mov
mov
mov
mov
adc
outs
lods
push
stos
fld
fdiv
pop
adc
out
xor
(bad)
sub
cwde
jbe
aad
ret
xor
cmp
cmp
push
xor
les
das
push
fsubr
cld
icebp
push
cmp
loopne
mov
aas
data16
xchg
xchg
xchg
in
pop
cli
(bad)
ja
sub
dec
in
mov
fs
sub
inc
(bad)
out
fisub
scas
movs
(bad)
in
sub
cld
outs
cmp
loope
push
xor
add
adc
mov
jecxz
ror
xchg
scas
cmp
fwait
or
jl
jnp
or
loope
and
push
cmp
cwde
leave
pop
or
add
adc
mov
xchg
inc
cmp
cld
mov
push
(bad)
gs
outs
sbb
xor
fiadd
mov
outs
test
bound
stc
stos
dec
(bad)
xchg
jg
fist
xchg
mov
scas
int3
push
es
adc
pop
pop
push
mov
push
dec
jae
push
jecxz
adc
stc
add
dec
out
stos
jge
mov
daa
adc
scas
jnp
pop
jge
out
and
xchg
mov
inc
push
pop
xor
adc
cdq
es
enter
jns
push
(bad)
xor
pop
fucomi
fadd
push
push
sub
retw
fwait
push
ret
shl
cmp
mov
imul
xor
aaa
adc
ins
inc
cmp
shr
xchg
test
leave
pop
mov
or
inc
and
jmp
pop
adc
into
and
dec
dec
mov
jbe
daa
stos
sti
shl
fisubr
xchg
std
mov
mov
pop
mov
sub
push
xchg
rcl
enterw
jae
iret
mov
dec
daa
outs
cmp
mov
add
mov
jne
push
pop
imul
in
les
mov
push
push
leave
out
pop
xchg
aas
cli
sub
pop
mov
jo
stos
iret
or
sbb
mov
xor
xchg
fstp
mov
sub
icebp
or
(bad)
xor
fwait
xor
mov
mov
sub
xchg
cmp
xchg
jae
dec
dec
and
inc
mov
fsub
lods
int
push
and
or
jne
dec
inc
mov
mov
mov
int3
pop
pop
sub
pop
sub
out
not
add
sar
mov
repz
jbe
jae
jmp
(bad)
fwait
xor
cwde
sub
mov
jg
retf
jns
or
or
pop
or
push
jecxz
mov
fnstcw
adc
sbb
ret
pop
aam
mov
test
scas
retf
jmp
inc
jne
xchg
inc
jmp
stos
call
cmp
fcmove
inc
pop
lods
in
movs
fisubr
sbb
cs
xchg
sbb
bound
inc
mov
xor
sub
(bad)
cmp
in
xor
push
out
mov
dec
pop
mov
pop
pusha
mov
lock
pop
jle
nop
icebp
or
add
fcom
aaa
mov
jo
dec
push
or
add
xor
in
scas
daa
(bad)
stos
call
dec
add
ins
cmp
pusha
(bad)
cmp
jb
cmp
jb
and
shl
mov
ss
add
cmp
fstp
punpckhbw
scas
sti
lahf
inc
sub
jbe
push
prefetch
or
mov
movs
cld
dec
gs
mov
cmp
pop
inc
xor
xor
sub
stos
lea
movd
daa
call
icebp
cmps
push
mov
outs
push
mov
xchg
dec
dec
les
and
and
dec
or
lds
scas
sbb
call
aaa
pop
retf
mov
dec
ret
(bad)
popf
mov
scas
mov
mov
jle
xchg
sbb
dec
inc
arpl
push
xchg
outs
add
and
cld
lds
(bad)
add
popw
daa
test
mov
pop
jb
scas
rol
call
and
test
inc
nop
xchg
adc
popf
mov
xchg
add
iret
mov
leave
add
(bad)
jnp
imul
call
bound
mov
push
(bad)
iret
add
(bad)
inc
mov
jbe
and
adc
nop
das
mov
addr16
xchg
and
div
ss
outs
adc
bound
pop
das
pushf
dec
dec
push
jmp
inc
ins
cmp
icebp
mov
add
push
repnz
jmp
or
mov
out
mov
push
scas
sub
push
sbb
scas
xchg
xchg
push
push
mov
push
loop
mov
lods
enter
jnp
movs
test
daa
stos
es
sbb
jp
and
movs
retf
sbb
leave
js
daa
test
hlt
xchg
sub
pop
cmp
in
pop
daa
(bad)
arpl
cmp
movs
aam
or
lock
inc
inc
lock
aaa
mov
mov
add
retf
push
push
sub
push
cli
inc
inc
in
test
imul
sar
add
adc
mov
adc
mov
lods
sub
imul
sub
fdiv
in
les
cmp
mov
push
add
xor
lock
mov
mov
out
scas
aaa
je
lods
push
fs
fadd
or
rol
fst
xor
jecxz
cli
test
shl
pop
cmp
push
mov
fldcw
cld
daa
call
lahf
outs
cmp
add
sti
cmp
or
cmc
xchg
or
ror
pop
push
push
xor
repz
dec
mul
lock
cmc
jmp
addr16
sbb
sti
icebp
xor
sbb
call
fstp
scas
in
stos
(bad)
sti
sti
nop
cmc
sbb
pop
mov
test
fst
jns
adc
and
ror
push
cmps
xor
in
inc
jns
sbb
adc
fstp
cmp
inc
push
inc
shr
jae
ret
outs
repnz
push
pushw
ret
jb
mov
lds
jge
rol
loop
fistp
addr16
and
imul
or
out
pop
and
mov
inc
inc
cs
inc
jb
xchg
xor
test
xchg
cld
(bad)
(bad)
push
inc
push
or
iret
mov
mov
push
push
dec
es
ds
sub
sub
fcomp
push
stos
call
xor
sti
jmp
adc
shl
cmc
daa
mov
(bad)
out
dec
xor
loop
add
xor
dec
(bad)
loop
lahf
sub
aad
dec
or
xor
imul
add
retf
xchg
cmp
in
in
data16
adc
(bad)
in
loop
lods
pusha
out
or
cmp
push
loope
daa
inc
adc
test
dec
jmp
xchg
mov
inc
hlt
xor
push
jno
sbb
stos
pushf
ins
push
je
mov
ror
movs
out
push
das
xchg
sub
(bad)
dec
and
xchg
or
jns
mov
lock
push
cli
in
mov
dec
lds
dec
mov
stos
fwait
dec
and
loopne
mov
mov
xchg
and
jge
hlt
out
and
xchg
or
in
jnp
pop
mov
push
sbb
(bad)
inc
push
popa
mov
(bad)
sbb
mov
or
xchg
imul
rcr
mov
pop
dec
dec
addr16
jl
mov
rcl
pop
jno
dec
sub
mov
shl
cmp
xor
psubb
jns
loopne
rol
pop
or
xchg
pop
adc
mov
out
adc
inc
inc
xor
and
push
addr16
mov
jae
push
xor
mov
sub
loop
pushf
(bad)
inc
jg
test
mov
inc
sub
jo
lds
ja
je
daa
pop
cs
les
cli
pop
mov
mov
pop
mov
call
enter
dec
sbb
adc
ror
les
out
mov
xchg
mov
mov
test
cmp
add
ror
and
enter
dec
in
pop
das
std
sar
xchg
sbb
dec
das
js
test
jg
rcl
or
cmp
bound
add
add
lea
cdq
push
push
inc
movs
jmp
jns
pop
sub
pusha
push
inc
push
sbb
mov
xor
call
les
ins
push
outs
cld
xor
movs
out
into
ret
or
lahf
jo
mov
daa
jns
jbe
pop
pop
mul
xchg
test
mov
outs
jmp
adc
push
mov
stos
jne
jl
stos
clc
outs
sbb
lock
(bad)
stc
pop
xchg
ds
test
dec
ds
adc
mov
ror
sbb
mov
mov
clc
into
leave
sub
xor
nop
ss
mov
add
icebp
push
out
test
cli
outs
mov
xor
adc
cmc
in
sbb
pop
sub
das
fisttp
jbe
mov
xchg
push
in
mov
icebp
nop
jmp
adc
push
imul
jp
je
cmps
cmc
add
rcr
out
add
(bad)
aas
pop
lods
cmps
loop
imul
pushf
js
imul
sbb
xchg
mov
out
jge
xor
adc
cmp
push
pop
stc
push
jae
inc
in
test
retf
dec
js
xchg
in
push
or
mov
and
scas
shr
jecxz
(bad)
pop
xchg
arpl
outs
(bad)
and
mov
cmp
cdq
sbb
sub
xchg
clc
jne
xchg
dec
aas
popa
mov
repnz
xchg
mov
retf
fucomp
call
mov
gs
cdq
pop
into
lea
femms
cmp
lods
arpl
idiv
sbb
sub
scas
aas
cmp
xor
scas
stos
adc
xchg
(bad)
xlat
fs
pop
ret
bswap
imul
call
(bad)
(bad)
and
pop
data16
fadd
fwait
addr16
repnz
sub
pop
sub
std
push
pusha
rcr
ret
jae
je
stos
fs
sbb
adc
mov
dec
adc
movs
pop
and
jle
mov
addr16
ja
pop
fsubr
aad
in
xchg
pop
push
cmp
outs
scas
mov
pusha
add
or
add
icebp
push
xlat
movs
shr
add
mov
shl
pop
imul
ja
jecxz
rcl
and
adc
out
sbb
iret
cmps
addr16
outs
mov
stos
jae
push
ror
sbb
out
in
loop
jo
push
enter
inc
push
mov
cmp
or
cmc
inc
test
sub
push
jecxz
std
xchg
retf
gs
fstp
(bad)
das
dec
sbb
test
retf
mov
jl
xchg
adc
push
(bad)
(bad)
scas
mul
jo
cmp
pop
out
inc
cld
aad
inc
cmp
pop
hlt
(bad)
xor
out
sub
lahf
push
jno
imul
pop
inc
ror
(bad)
fcomp
xor
pop
mov
ficomp
add
mov
pop
ja
test
inc
sbb
mov
arpl
push
and
scas
push
adc
mov
mov
xlat
ins
jns
fsub
mov
cmps
and
sbb
xchg
ror
in
aaa
inc
xchg
or
popf
test
mov
push
fs
cmp
and
ins
mov
clc
arpl
dec
sub
mov
iret
jge
mov
or
xor
cmc
cld
xchg
fwait
pop
std
sub
inc
pop
mov
or
(bad)
mov
out
inc
xor
ret
inc
rcl
test
jae
iret
daa
test
add
pop
stc
mov
xchg
out
hlt
lods
push
test
sahf
jmp
cmp
and
mov
mov
data16
out
(bad)
pop
test
call
int
push
inc
adc
rcl
xor
xor
sbb
or
js
gs
test
inc
xchg
jne
or
imul
mov
scas
xchg
add
add
ss
fwait
sti
or
and
pop
repnz
repz
aaa
pop
int
enter
retf
or
out
mov
sub
std
pop
(bad)
addr16
xchg
(bad)
or
movs
ja
inc
js
adc
and
cmp
and
outs
fisttp
fs
pop
lock
clc
shl
(bad)
movaps
aas
adc
push
push
ds
mov
push
mov
cmp
ins
(bad)
inc
fldcw
rcl
iret
dec
mov
adc
inc
adc
xor
cmp
mov
mov
aad
jecxz
sahf
cmp
pop
xchg
cmp
mov
push
in
or
mov
adc
sbb
jo
in
imul
imul
bound
inc
stos
adc
xchg
xchg
push
in
movs
inc
and
mov
sahf
arpl
jno
mov
xor
or
xchg
cmp
mov
cdq
sub
push
lods
xchg
in
xchg
push
sbb
sbb
clc
jecxz
imul
jb
shl
pusha
out
sar
scas
adc
mov
icebp
jle
xchg
dec
bound
imul
jmp
add
cmp
scas
push
movs
popf
or
fst
adc
nop
mov
scas
sbb
cmps
mov
shr
out
adc
clc
mov
mov
xor
data16
rol
outs
fadd
and
add
mov
xchg
xchg
(bad)
sti
or
xor
add
inc
jp
sbb
lods
(bad)
xor
leavew
adc
pop
imul
xchg
cmps
test
ja
pop
inc
sub
mov
sbb
or
and
xlat
mov
rcl
push
dec
xchg
push
div
cmc
push
xchg
dec
ret
fisub
pushf
cmp
icebp
add
leave
or
mov
mov
outs
mov
xchg
fcom
mov
shl
ds
out
cmp
gs
(bad)
popa
jae
and
imul
lods
cmp
jno
pop
push
mov
ret
xchg
loope
cmp
lea
xor
and
ror
ins
es
sub
idiv
sbb
das
aaa
mov
inc
or
add
add
es
and
cmp
mov
in
pop
dec
pushf
ret
or
int3
mov
aad
(bad)
loopne
fstp
and
outs
cs
clc
sar
imul
jecxz
lea
push
sbb
mov
mov
and
enter
pop
je
xchg
int3
cmovp
xchg
or
addr16
mov
das
mov
scas
repnz
les
das
popa
jge
add
add
mov
in
jg
dec
mov
mul
iret
stos
sub
pop
push
inc
cmc
cmp
out
jae
push
dec
inc
pop
dec
jnp
dec
push
ss
loop
mov
bound
inc
jnp
out
jmp
imul
(bad)
mov
push
inc
dec
out
xchg
jp
pushf
mov
ret
bound
or
mov
xor
add
pusha
pop
pushf
xor
test
and
clc
jnp
inc
(bad)
out
(bad)
mov
bound
mov
popa
sbb
sbb
sub
das
fisttp
lods
aas
or
push
sub
jecxz
je
mov
mov
mov
or
add
pop
add
scas
mov
xchg
inc
jmp
outs
mov
dec
bound
cmc
pop
ror
push
or
sub
stc
nop
adc
adc
icebp
adc
push
mov
push
rol
lock
out
shr
sbb
pop
lods
push
lods
les
dec
inc
jno
in
sub
xor
push
dec
dec
sti
mov
fisttp
test
or
sbb
idiv
push
mov
push
and
pop
pop
sbb
jbe
scas
movs
add
repnz
and
jae
or
xor
neg
test
sub
shl
jp
ja
push
in
fnstsw
lahf
js
aaa
and
movs
ss
pop
pop
(bad)
cmp
push
stos
aad
cmc
shl
sahf
les
cmp
in
popf
pop
fistp
cmp
mov
xor
jo
and
jae
rcr
xchg
jmp
jg
cmps
push
or
xchg
in
loop
cmp
iret
xor
test
in
cdq
push
clc
into
fistp
inc
jo
div
jg
dec
cs
dec
jo
test
fld
daa
xchg
hlt
xchg
jnp
pop
repz
movs
mov
fbstp
jge
jae
stos
pusha
imul
rcl
ret
cld
mov
push
xchg
add
pop
cmps
jo
cdq
xchg
pop
aam
dec
sub
call
jb
push
cmps
or
adc
stc
sbb
rcr
shr
pop
add
jecxz
rcr
inc
and
add
popa
not
and
jp
(bad)
jne
mov
dec
aas
adc
out
(bad)
mov
pushf
jae
out
ret
scas
mov
inc
jl
mov
inc
enter
xchg
stos
out
or
or
idiv
lods
ins
add
push
sub
xor
out
mov
mov
jae
pushf
push
inc
popa
jo
in
sub
in
mov
mov
fstp
cmp
cmc
sbb
mov
or
enter
add
sbb
mov
jnp
push
xlat
test
pop
out
aam
mov
loope
cmp
xchg
xor
inc
push
push
sbb
mov
pop
add
pop
adc
mov
cld
loope
mov
int
(bad)
fidivr
xchg
push
scas
dec
popf
je
pop
mov
std
and
mov
push
ja
cs
jg
fistp
sbb
rol
cmp
and
sub
jl
ficom
cmps
sub
jo
dec
or
repz
enter
pop
aam
out
mov
mov
(bad)
mov
or
fwait
cmp
sbb
cmp
sub
(bad)
stos
inc
cmps
sub
outs
ret
sub
jmp
mov
out
iret
mov
neg
ins
cmps
pusha
adc
mov
imul
sahf
lea
mov
sbb
pop
pop
int3
sub
add
cli
jae
retf
mov
aaa
mov
pop
cmp
mov
shl
adc
not
xchg
and
repnz
add
lods
or
mov
pop
stos
sub
(bad)
dec
daa
jae
pop
adc
(bad)
popf
ins
push
jns
rol
js
pop
sbb
(bad)
sbb
cmps
loope
xchg
je
pop
aad
cmp
pop
icebp
fnstcw
movs
and
push
pop
pop
push
and
ret
mov
test
dec
loopne
(bad)
sahf
stc
push
xchg
xor
push
(bad)
shr
pusha
push
in
test
shl
jg
imul
add
push
add
pushf
inc
dec
mov
cmp
gs
xchg
ret
ss
or
repnz
ret
lea
pop
sbb
iret
pop
imul
push
mov
mov
dec
stos
adc
xchg
cmp
jge
sahf
stc
jmp
xchg
lahf
es
rcl
and
sub
enter
push
adc
das
or
outs
aaa
mov
les
mov
mov
sub
sub
hlt
jns
popf
fwait
popf
jg
inc
ss
stc
mov
mov
jmp
movs
mov
pop
push
inc
xchg
fwait
push
mov
xor
cwde
mov
adc
push
xchg
addr16
push
pop
mov
mov
je
sahf
mov
neg
xchg
ret
test
mov
scas
cmp
daa
iret
cmp
cdq
loope
ror
mov
sub
pop
stos
ret
sti
xchg
fs
adc
mov
dec
leave
adc
dec
jle
lock
lea
out
bound
movs
lea
in
add
adc
pop
jmp
outs
lods
or
stos
push
out
adc
(bad)
fmul
mov
std
mov
push
dec
and
mov
pop
out
test
rcl
push
pusha
sub
mov
cld
mov
xor
cmp
sub
retf
je
jecxz
lds
(bad)
call
loopne
push
test
(bad)
pop
sub
pop
gs
test
in
add
cmp
mov
xchg
push
mov
sbb
lods
lods
push
test
mov
add
test
sbb
icebp
mov
arpl
sub
mov
outs
adc
jnp
cs
aad
cmps
mov
xchg
sar
xchg
(bad)
xchg
jp
mov
stos
pop
sub
in
(bad)
mov
arpl
sbb
xor
jmp
or
sti
test
xchg
add
ja
mov
push
loop
and
int
inc
pop
sti
jae
xchg
jb
test
(bad)
push
xor
cmps
jno
ja
int
(bad)
dec
lods
mov
and
aaa
pop
and
imul
and
pop
shr
mov
jle
pop
scas
ins
sub
fsub
sahf
aad
shl
mov
shl
inc
push
out
sbb
repnz
jmp
fst
and
xchg
jns
in
test
inc
test
retf
(bad)
push
push
inc
out
pushf
adc
imul
(bad)
push
xchg
loopne
lods
sbb
mov
and
pop
loope
push
sbb
not
mov
inc
aas
cmp
sub
jno
adc
dec
jb
xchg
jns
dec
ss
and
cmp
enter
cmp
je
imul
addr16
xchg
movs
jne
push
cmp
movs
aaa
scas
lea
loope
add
aam
(bad)
repz
(bad)
push
in
xchg
popa
cmps
fnstenv
mov
div
leave
fidiv
pop
sub
and
xchg
(bad)
jmp
pop
or
fst
cmps
and
jmp
xor
push
mov
mov
iret
add
pop
adc
push
push
(bad)
jle
cmps
mov
enter
xchg
push
aam
push
imul
adc
shl
clc
jmp
add
xchg
xchg
js
daa
out
lods
imul
nop
ins
mov
test
cs
imul
pop
js
or
rol
shl
jecxz
cmp
jl
dec
aaa
clc
test
pop
add
jnp
xchg
mov
ror
(bad)
cdq
aas
test
mov
push
jo
pop
mov
mov
jle
fst
jle
je
jmp
cmps
daa
pop
push
out
mov
dec
mov
stos
mul
xlat
call
(bad)
cmps
sbb
adc
loopne
and
lock
xlat
push
xor
xchg
(bad)
shl
xor
int
call
pusha
push
xchg
(bad)
int
lods
xchg
inc
sti
pop
in
sbb
add
gs
mov
xor
dec
retf
inc
clc
js
inc
ror
xchg
ja
iret
sbb
fisubr
sti
test
or
push
inc
inc
inc
sub
and
add
xchg
retf
shr
mov
repz
js
cli
pop
and
scas
mov
inc
jb
lods
pop
iret
aam
imul
xor
push
cdq
enter
out
xor
add
xchg
adc
xchg
movs
jmp
add
mov
push
sub
sti
lahf
lock
dec
rcl
mov
fs
(bad)
movs
push
leave
xchg
fdivr
jecxz
scas
fild
loope
sub
test
pop
scas
adc
pop
adc
sbb
loopne
mov
fwait
cmp
push
adc
sar
dec
stos
shr
sbb
jae
shl
mov
push
data16
xchg
scas
je
pop
repnz
retf
retf
stc
mov
les
sti
imul
loope
pop
imul
sub
xchg
je
loopne
arpl
jbe
int3
cmc
cmps
mov
sbb
cld
loopne
jno
loope
cmps
(bad)
das
int3
out
push
inc
jg
enter
cs
pop
neg
adc
pop
scas
mov
push
clc
xchg
xor
pop
jno
loope
cmps
inc
cs
cmps
push
mov
dec
mov
mov
pop
out
push
js
dec
scas
rol
ss
test
outs
xchg
mov
addr16
and
sbb
jo
cwde
ins
mov
popa
aas
or
ror
push
sub
ret
ret
inc
jnp
mov
xchg
dec
and
mov
sub
adc
xor
add
inc
popf
xchg
jl
out
test
jp
push
aaa
xchg
imul
or
les
rol
shl
loop
pop
enter
ds
jg
dec
cli
test
xchg
lahf
(bad)
je
mov
daa
nop
xchg
scas
xlat
mov
and
ret
hlt
jbe
fadd
and
jnp
pop
xlat
mov
imul
push
pop
mov
or
int3
xchg
pop
and
inc
and
hlt
mov
loopne
jle
(bad)
int
dec
mov
in
imul
sbb
fistp
mov
rol
sar
enter
outs
pop
jg
pop
dec
das
arpl
jg
push
push
(bad)
mov
lods
jl
dec
mov
clc
inc
cmps
(bad)
mov
stos
idiv
push
cdq
mov
iret
push
jne
cmps
retf
repz
jl
pop
adc
das
int
sub
and
scas
imul
retf
inc
push
inc
data16
loop
sti
jnp
pop
ret
mov
push
mov
das
add
adc
push
das
ins
mov
jae
aas
cmc
xor
mov
adc
das
jmp
adc
and
pop
adc
sub
add
retf
fsubp
inc
arpl
and
push
(bad)
xor
mov
sti
arpl
lods
add
rol
mov
clc
push
push
cmp
in
add
pop
out
push
mov
mov
sub
fidivr
call
ins
add
adc
adc
aam
(bad)
leave
xlat
jnp
cmc
rol
sbb
mov
shr
pushf
mov
arpl
scas
or
ret
mov
push
pop
dec
mov
in
sbb
sub
addr16
and
mov
mov
sbb
sti
push
loope
or
ds
xchg
nop
out
sbb
ins
fldenv
pop
test
je
sub
in
and
enter
mov
mov
or
and
adc
ins
xor
cld
push
div
js
sub
(bad)
jmp
hlt
jb
out
mov
sub
je
jmp
push
mov
fld
sub
lea
adc
or
pushf
xor
mov
and
cmp
and
call
jbe
or
iret
mov
xchg
inc
sbb
in
or
arpl
mov
jb
ror
xchg
pop
imul
into
lods
inc
fist
inc
sbb
enter
push
pushf
adc
push
mov
and
xor
xchg
mov
sar
outs
(bad)
push
dec
pop
add
pushf
test
imul
add
or
xchg
(bad)
add
sbb
sub
out
jl
adc
mov
aaa
pop
and
or
xor
add
call
push
lahf
imul
xchg
scas
std
adc
shr
dec
mov
jmp
inc
in
pop
out
mov
xor
das
loopne
adc
mov
movs
xchg
cld
inc
pop
sub
pop
test
cmp
lods
jmp
jle
or
dec
or
aad
mov
adc
imul
jle
xor
add
mov
out
inc
xchg
pop
push
cs
hlt
rol
cmp
sub
shr
sub
pushf
push
cmp
inc
xor
mov
jns
sbb
cs
xor
int
outs
retf
jecxz
(bad)
jp
das
jns
mov
xchg
dec
pop
xor
mov
stos
mov
ret
clc
das
mov
ret
mov
or
hlt
(bad)
hlt
pop
mov
sub
iret
xor
lods
(bad)
ja
pop
leave
rcl
arpl
shr
push
jl
js
push
sbb
shl
push
mov
inc
xchg
jne
or
inc
out
adc
cwd
or
lods
and
lock
lock
sbb
jae
push
outs
cmp
xchg
xchg
movs
sbb
or
fs
data16
ins
scas
fstp
pop
aaa
ins
pop
dec
test
sbb
test
test
pop
mov
(bad)
lods
fwait
jno
sbb
cs
jecxz
sti
xchg
push
hlt
push
mov
fistp
mov
sbb
lods
xchg
dec
inc
cmp
jno
out
push
xchg
arpl
sbb
cld
xchg
aaa
add
rcr
push
int
lods
jg
(bad)
mov
dec
or
xchg
hlt
xchg
mov
cld
aam
test
jp
mov
call
rcr
shl
outs
cmp
(bad)
loop
(bad)
inc
jns
sbb
cmp
jl
imul
lods
mov
jb
cs
outs
popa
add
xor
loopne
mov
aas
je
push
inc
add
fadd
mov
add
aas
pop
jae
inc
rcl
lahf
xchg
(bad)
pop
enter
icebp
aas
push
mov
test
inc
mov
cli
mov
push
int
mov
pop
adc
mov
inc
jne
xor
adc
movs
push
arpl
mul
mov
dec
adc
(bad)
push
fsub
jae
jne
mov
(bad)
jns
jnp
jbe
enter
jl
xor
jne
hlt
scas
(bad)
out
xchg
repz
iret
jge
cmps
push
pop
cli
imul
xor
repnz
retf
dec
inc
sahf
stos
xor
daa
xlat
pop
push
pop
arpl
pop
sub
das
cs
cdq
js
push
scas
dec
xchg
daa
add
ret
out
out
xor
push
jbe
pop
pop
adc
loope
nop
arpl
jg
cmps
ficomp
inc
add
sub
movs
xchg
jmp
cmp
std
mov
pop
rol
cmp
jb
push
fistp
stos
pusha
cs
or
or
gs
rcl
mov
xchg
and
push
inc
xchg
pop
adc
daa
dec
pop
pop
xchg
pop
not
cdq
mov
shr
aas
fwait
mov
aad
mov
shl
imul
stos
mov
sub
xor
or
jecxz
dec
push
call
sub
and
mov
cmp
and
scas
jle
dec
pop
sub
test
neg
stc
sti
sub
xchg
push
hlt
out
jo
cmp
int3
sub
pop
cmc
pop
jmp
mov
rol
repnz
repnz
outs
aas
js
jp
daa
push
jno
add
jo
addr16
cmps
inc
call
dec
js
dec
mov
ins
push
pop
jg
inc
sub
inc
cmp
arpl
ins
jmp
loopne
iret
aaa
jb
fadd
mov
dec
sti
ins
mov
loop
lds
out
adc
ja
dec
jne
or
ja
dec
out
addr16
dec
sbb
adc
test
cmp
dec
pop
sbb
cmps
jb
mov
cli
iret
adc
cmp
push
(bad)
outs
pop
adc
pop
ss
out
mov
lds
adc
sbb
pop
mov
xor
out
mov
dec
ss
retf
lock
cs
shl
dec
nop
fdiv
push
xchg
cmp
push
and
or
push
push
bound
test
pop
xchg
mov
aaa
es
cs
(bad)
stc
mov
addr16
test
sbb
int3
es
mov
xor
cmp
scas
mov
loope
push
sbb
test
mov
(bad)
test
mov
add
xor
mov
sbb
mov
sub
xchg
mov
push
xchg
add
out
imul
ret
out
push
cdq
pop
sub
dec
sbb
dec
aad
(bad)
sub
xor
mov
inc
pushf
jle
dec
cmps
fld
mov
neg
aas
js
shr
stos
push
call
stos
lahf
dec
call
fs
jle
push
sbb
pop
dec
jb
ror
add
xchg
mov
nop
xchg
test
xchg
sub
call
jmp
pusha
jmp
xchg
jecxz
push
int3
dec
inc
add
xor
xchg
jmp
inc
mov
pop
icebp
xchg
imul
out
dec
ins
movs
mul
mov
test
or
mov
test
test
ror
add
xchg
adc
mov
cli
push
repz
jo
scas
or
mov
or
jmp
icebp
jecxz
stc
and
mov
push
inc
dec
mov
cmp
inc
sbb
das
add
push
jbe
xor
in
daa
fadd
cmp
(bad)
hlt
loope
xchg
test
icebp
scas
inc
icebp
push
mov
sbb
mov
stc
outs
push
out
jmp
and
inc
xor
add
jne
mov
popa
jae
mov
aad
mov
outs
xor
mov
add
mov
je
mov
loope
xchg
sahf
inc
mov
mov
push
mov
mov
xlat
cmp
je
cwde
jns
adc
outs
xchg
add
jle
call
mov
cmp
mov
pusha
int3
xor
jg
ficom
pop
retf
push
and
cli
fnsave
and
scas
loop
pop
das
neg
pop
or
lds
hlt
fldcw
(bad)
les
mov
(bad)
dec
xor
push
imul
test
(bad)
in
jle
sbb
dec
repz
mov
sub
dec
adc
pop
cmp
or
mov
jns
std
sub
mov
dec
dec
scas
push
or
dec
scas
cld
leave
leave
jecxz
test
enter
push
xor
sahf
sbb
mov
popf
add
mov
aaa
rcl
ss
std
jno
push
ins
jno
xor
test
push
sbb
into
mov
adc
mov
jmp
mov
mov
inc
adc
push
mov
in
xor
inc
repnz
hlt
in
icebp
pop
xor
pop
add
inc
sub
adc
sahf
daa
sub
jg
sahf
or
bound
dec
test
outs
jecxz
rcr
sub
(bad)
pop
sbb
xor
mov
xchg
shl
push
or
es
dec
test
repnz
nop
or
rcl
imul
nop
sahf
mov
push
xchg
daa
xchg
das
inc
fmul
fs
mov
pop
jg
(bad)
les
sub
push
(bad)
retf
(bad)
loopne
out
mov
jl
sbb
repz
mov
push
not
ret
cmp
dec
mov
jo
jmp
cmps
out
pop
(bad)
fstp
adc
mov
mov
push
inc
je
jnp
std
bound
aaa
xchg
out
push
push
aam
mov
clc
xchg
das
pop
in
jmp
clc
stos
mov
mov
or
rol
stc
add
xor
mov
xchg
out
rcl
xchg
xlat
mov
nop
jp
ret
jns
mov
repnz
ror
clc
aaa
loopne
mov
in
xchg
cmp
movs
jns
jg
or
or
ja
lahf
popf
push
xchg
dec
mov
mov
pop
add
cmp
mov
pop
add
lods
push
push
jg
sub
imul
leave
aam
inc
sbb
popf
jbe
lahf
pop
(bad)
ss
pop
push
or
jns
jae
xor
cli
enter
xchg
ja
mov
xor
xor
mov
jl
nop
or
mov
dec
push
push
xor
mov
xor
daa
test
cmp
dec
icebp
inc
dec
pop
fdivr
push
pop
leave
xchg
xchg
lahf
jl
gs
sbb
js
pushf
push
pop
inc
mov
push
xchg
test
and
xchg
adc
lea
and
js
adc
int
jg
ror
sahf
jo
pop
outs
xchg
(bad)
sar
ss
push
and
jmp
rol
mov
ret
xor
sub
dec
jmp
mov
mov
movs
loope
loope
hlt
outs
mov
or
mov
sbb
pusha
(bad)
adc
xchg
xor
fbld
ret
adc
stos
mov
cli
push
jg
jne
sbb
inc
cmp
cmc
lods
shr
xor
jo
mov
outs
push
test
or
xor
lods
push
push
mov
jecxz
in
ins
cmp
add
repnz
shr
sub
repz
cmps
sub
dec
or
and
sbb
dec
fiadd
pop
aad
dec
es
daa
pop
fs
(bad)
rcr
iret
(bad)
rol
int
repz
mul
jne
call
jne
out
aad
mul
mov
mov
lds
xchg
scas
cmc
leave
in
pop
dec
aad
adc
rol
and
mov
mov
addr16
xlat
jae
aaa
test
dec
enter
and
push
push
scas
cmp
sti
fist
inc
add
jbe
sub
sti
ret
push
push
pop
inc
test
hlt
and
inc
xchg
xchg
xor
loope
xchg
push
ss
stos
jp
pop
daa
xchg
jno
mov
sub
stos
daa
retf
push
adc
test
mov
xlat
jae
aad
aas
popf
xchg
cmp
jp
adc
(bad)
(bad)
sahf
dec
das
push
inc
add
stos
jmp
scas
cmp
dec
imul
fisubr
xor
movs
jmp
push
and
mov
jge
mov
jp
jg
addr16
shl
cdq
das
(bad)
cmp
nop
jg
mov
cmp
push
aad
push
mov
xchg
sbb
retf
mov
push
xchg
pop
mov
clc
and
icebp
outs
bound
pop
leave
in
leave
cmp
and
pop
retf
xchg
add
add
mov
jo
jbe
xor
(bad)
mov
ret
movq
jl
fisttp
retf
add
sub
xor
in
cmp
mov
int3
mov
shl
inc
adc
into
jle
mov
mov
repz
jle
mov
inc
fcos
enter
rcl
rol
pop
daa
es
lock
xchg
mov
aaa
fcom
sar
cdq
add
sub
mov
cmp
fld
mov
loope
xor
add
imul
je
jle
sub
data16
mov
dec
adc
mov
xchg
(bad)
cmp
inc
cs
es
push
jo
push
in
loop
shl
outs
jge
add
push
push
adc
sbb
arpl
pop
mov
mov
outs
and
repz
jecxz
adc
and
mov
cmps
idiv
(bad)
xchg
xchg
repz
jmp
movs
add
movs
out
mov
or
int3
int
out
or
add
sub
or
mov
stos
in
pop
mov
sbb
cmp
and
add
iret
dec
mul
inc
stos
push
dec
lahf
xlat
and
and
mov
mov
cwde
or
xchg
cwde
jle
imul
inc
push
popa
loop
int
sar
outs
or
add
mov
pop
inc
mov
test
pop
push
inc
push
fisubr
mov
inc
jmp
imul
mov
dec
ja
add
mov
in
and
xor
mov
or
jmp
sub
shl
cli
test
lock
jmp
adc
mov
nop
and
fstp
mov
cs
sub
ins
and
push
or
sub
xor
xchg
rsqrtps
mov
xchg
or
pop
loope
in
in
add
mov
sbb
add
lock
or
movs
mov
adc
jle
int3
pop
daa
mov
lds
fistp
mov
xchg
scas
sbb
mul
shr
into
hlt
les
xchg
fidivr
jns
pop
sub
(bad)
and
ds
shr
mov
mov
sub
dec
sub
dec
aaa
rcl
adc
call
xor
fnsave
outs
pop
adc
inc
int
pop
push
retf
pop
hlt
mov
sbb
je
dec
xchg
ret
mul
sbb
js
jle
bnd
fs
mov
add
xor
cmps
jl
sub
rcr
iret
push
adc
(bad)
mov
imul
dec
add
inc
jb
ins
pushf
fist
add
jo
icebp
sub
fbstp
lods
dec
mov
fsub
cmp
push
icebp
lock
push
mov
or
ja
add
loope
outs
nop
and
mov
retf
lods
push
add
mov
icebp
xchg
das
shr
or
icebp
nop
gs
test
rcr
popa
in
push
inc
iret
or
sbb
push
scas
in
pop
add
jg
xor
add
cmp
shr
push
pop
jmp
jmp
test
pushf
sti
ins
jp
pop
and
imul
adc
push
jmp
cmp
loop
push
inc
add
scas
push
xlat
mov
out
push
lock
fild
jb
sub
imul
mov
retf
mov
fiadd
inc
jmp
sub
mov
(bad)
and
push
(bad)
xchg
pop
and
inc
test
inc
sub
mov
jge
pop
sbb
mov
push
out
(bad)
mov
pop
enter
sub
jbe
add
scas
aam
mov
cmps
or
enter
push
jae
stos
and
mov
fst
call
sub
inc
push
pop
mov
mov
retf
mov
cmp
xor
cmp
xchg
push
xchg
pop
push
mov
scas
in
and
mov
test
sbb
aaa
in
sub
icebp
pop
mov
aad
mov
stos
mov
jg
and
ret
es
cmp
mov
jg
data16
fs
or
sti
pop
enter
sbb
mov
push
mov
dec
mov
xchg
enter
cld
repnz
hlt
add
or
icebp
pshufw
lock
ror
push
mov
data16
mov
in
cmc
add
inc
fimul
adc
mov
xor
mov
int
push
inc
mov
mov
and
inc
inc
in
jo
mov
popa
jae
xchg
dec
test
ss
pop
push
fwait
cs
imul
ret
push
hlt
aad
xor
retf
dec
jmp
jmp
push
bound
mov
loop
sub
cld
sub
and
inc
push
push
rol
dec
fnstsw
xor
lds
lods
icebp
arpl
fild
out
mov
push
mov
xchg
xchg
out
push
jge
mov
or
add
fwait
stc
mov
scas
sahf
mov
sti
mov
sub
ret
call
mov
mov
adc
bound
lds
xor
test
sub
xchg
test
jbe
test
push
movs
lea
ds
sbb
sbb
cmc
mov
push
push
xor
stos
iret
aad
scas
xchg
inc
dec
je
fisubr
sub
stos
dec
nop
add
lds
test
mov
mov
mov
fiadd
fdivr
sbb
enter
in
mov
mov
adc
lds
movs
cli
fmul
inc
retf
jle
push
push
repnz
push
in
adc
xchg
mov
push
and
imul
and
push
mov
adc
inc
sbb
pop
loope
and
popf
mov
aam
adc
popf
lock
adc
dec
ret
mov
std
out
test
rol
xchg
(bad)
lds
inc
mov
sbb
or
xchg
es
push
mov
shl
dec
or
icebp
dec
sbb
retf
bound
pop
scas
popf
inc
mov
(bad)
pop
or
and
sub
push
adc
inc
ror
pop
add
dec
dec
inc
lock
dec
imul
add
mov
mov
xor
jns
cmp
adc
iret
pop
es
adc
aad
pop
pop
add
scas
cwde
daa
ror
fprem1
jnp
sar
cli
cmp
or
fcomp
test
push
inc
cli
pop
cmc
mov
cmp
pushf
xlat
ret
ror
jnp
clc
jnp
popf
pop
adc
pop
xchg
push
xor
or
mov
sub
aam
outs
aaa
test
push
lods
dec
test
cs
push
dec
fnstsw
faddp
push
rcr
in
(bad)
fcom
xor
jmp
test
jnp
inc
jb
or
ss
outs
or
or
sub
(bad)
push
cmps
jne
push
enter
xchg
lock
repz
clc
pop
add
cmp
push
mov
sub
ftst
outs
ds
cmp
pop
jecxz
ins
sbb
sub
adc
fwait
mov
popfw
dec
sub
xchg
ds
(bad)
sahf
cmp
xor
inc
in
cmp
and
pop
and
addr16
imul
ins
dec
push
packsswb
xor
ins
push
dec
push
xchg
xor
mov
mov
and
test
mov
out
jno
repz
adc
xchg
push
pop
dec
pop
xor
fldcw
or
aam
loope
and
sub
inc
scas
retf
sub
aam
pop
ds
leave
fld
sub
fild
ret
in
dec
out
inc
xor
ss
retf
rol
aaa
dec
sub
or
aas
xchg
cmc
shl
fdiv
jbe
hlt
fst
sub
mov
sar
(bad)
jae
adc
xor
mov
hlt
daa
scas
mov
sub
icebp
test
sar
retf
daa
repz
int3
add
xor
jns
pop
add
iret
adc
or
adc
or
lds
jle
and
sar
push
sar
mov
into
push
cmps
test
mov
dec
adc
out
sbb
dec
daa
or
pop
out
push
cli
add
pop
push
ret
popa
cmp
je
(bad)
pop
retf
loope
xor
xor
test
dec
push
and
mov
jne
cdq
xchg
bound
adc
int3
leave
jecxz
js
mov
sbb
add
repnz
or
xlat
push
cmc
mov
sub
mov
inc
int3
sbb
cmps
mov
into
sahf
cmp
adc
ja
fisttp
cwde
cmc
out
je
push
pop
add
push
sub
inc
(bad)
adc
mov
dec
pop
xor
xchg
pop
sbb
mov
lea
push
pop
jno
push
adc
ficom
mov
mov
movs
jne
fs
loopne
adc
jl
mov
out
or
retf
inc
and
std
gs
bound
icebp
scas
xchg
sbb
pop
xchg
mov
jnp
je
mov
mov
mov
mov
les
pop
push
dec
repnz
xchg
or
sbb
rcl
or
inc
xchg
adc
adc
jns
leave
push
es
pop
mov
inc
in
push
push
je
or
add
or
add
je
aam
cwde
js
pop
mov
add
out
cs
dec
into
xor
sti
bound
test
test
(bad)
fs
neg
xchg
call
(bad)
jp
sub
mov
out
xchg
push
xchg
pop
in
mov
rol
add
nop
mov
pop
sti
das
ret
push
add
mov
inc
push
(bad)
dec
inc
sbb
push
pop
mov
cmp
xchg
push
sub
sahf
ret
cdq
loope
das
and
add
jns
test
cwde
setp
enter
aas
xchg
das
jl
pop
test
jge
mov
hlt
jg
(bad)
jp
dec
lahf
pop
ret
mov
mov
push
aas
push
mov
fs
daa
sbb
leave
push
add
frstor
add
xor
ss
mov
clc
pop
inc
sbb
arpl
ins
sbb
rcl
jmp
movs
jno
add
mov
mov
mov
popa
ret
les
sub
and
push
mov
add
inc
jmp
adc
and
adc
xchg
hlt
add
sub
es
fwait
pop
mov
xchg
and
xchg
mov
xchg
mov
xlat
pop
retf
adc
adc
jne
add
pushf
add
lock
inc
jecxz
pop
sub
add
sbb
fcomi
call
dec
pop
sub
cmc
jb
call
sahf
cmps
mov
mov
add
mov
cmp
imul
sub
push
int
mov
loopne
xchg
ins
neg
movs
and
sar
jbe
push
cmc
inc
rcr
das
inc
xor
mov
test
jno
mov
mov
inc
pop
add
mov
fistp
inc
pop
retf
stos
cld
dec
ja
cld
sub
shl
jbe
shl
rcr
inc
ja
movs
stos
and
mov
nop
push
movs
adc
mov
aas
mov
mov
xchg
int3
mov
retf
add
enter
dec
mov
fld
lds
and
mov
jb
je
gs
(bad)
dec
push
ins
dec
mov
pop
shl
xchg
sub
jb
rol
dec
outs
dec
stos
xor
mov
xacquire
cmp
das
pop
ror
test
sub
aaa
jle
pop
mov
in
mov
jno
jno
or
xchg
push
jae
pop
pop
dec
aaa
mov
in
outs
(bad)
inc
stc
fadd
mov
xor
xor
mov
loope
jns
mov
popa
mov
neg
add
into
xchg
sbb
adc
and
mov
jmp
push
mov
mov
imul
add
(bad)
popa
ds
scas
xchg
or
movs
stos
repz
scas
and
push
and
loope
xchg
repz
adc
aaa
stos
(bad)
cwde
mul
out
cmps
push
retf
jno
ret
repz
ret
stos
push
mov
test
aad
arpl
scas
stc
test
aam
and
dec
mov
mov
push
push
mov
push
push
xor
lahf
dec
sbb
leave
test
mov
lods
call
rcl
pushf
add
retf
jl
or
xor
cmp
push
repnz
add
adc
sbb
dec
cmp
dec
mov
inc
push
jge
pop
cdq
je
pop
sub
mov
mov
imul
mov
push
aaa
lahf
or
repz
and
dec
mov
lods
ret
(bad)
rcr
mov
cs
movs
inc
add
pop
rol
jnp
jb
retf
mov
sbb
mov
add
xchg
push
pusha
adc
(bad)
jle
out
out
scas
ja
and
xchg
test
mov
cld
xor
retf
cmp
cli
scas
mov
cmps
(bad)
adc
dec
and
pushf
and
mov
test
out
sub
idiv
dec
outs
sahf
retf
xor
mov
push
add
mov
push
es
xchg
ret
sbb
jmp
movs
inc
or
cld
sti
outs
test
jl
inc
mov
ins
add
mov
push
push
(bad)
stos
ret
xchg
test
xchg
pop
sub
or
cld
rep
es
sti
sub
mov
push
sbb
push
push
dec
cs
loope
jle
sti
rol
sti
mov
fdivr
(bad)
push
icebp
push
xor
aaa
adc
data16
mov
jg
xor
jl
xchg
movs
call
push
push
fld
cmps
movs
jle
mov
jbe
inc
hlt
into
jmp
pop
and
(bad)
jecxz
jecxz
jmp
push
xchg
out
je
mov
in
daa
cmp
jae
mov
stc
das
adc
or
das
icebp
test
das
cmp
jp
ja
push
mov
add
jne
inc
pop
mov
xchg
lock
cmps
sub
add
daa
test
push
stos
mov
or
cli
mov
and
fs
addr16
push
pop
loopne
xchg
loopne
adc
sub
mul
addr16
into
xchg
lea
add
xlat
or
mov
jne
sub
in
or
imul
das
mov
or
dec
fisttp
or
push
and
into
xor
fidiv
mov
lods
leave
in
jnp
data16
pop
and
jl
jnp
hlt
jo
mov
dec
loop
lods
out
xchg
pop
leave
and
imul
push
sub
pop
jmp
inc
(bad)
fadd
fs
add
fst
dec
inc
retf
aas
test
lods
in
dec
sub
xchg
pop
add
(bad)
lea
movs
pop
or
out
or
fwait
iret
cmp
mov
push
push
and
jnp
jp
xchg
mov
lahf
adc
xchg
lods
mov
mov
adc
push
mov
mov
mov
aas
mov
in
cmc
xor
push
mul
sbb
cdq
add
cli
push
test
ret
jge
sub
pop
sub
stc
cmp
sub
xchg
mov
js
add
add
sub
and
push
xchg
imul
mov
retf
das
and
mov
jae
lock
xchg
aad
out
rol
cmp
imul
mov
inc
lods
add
ins
push
sub
mov
loope
test
inc
into
sbb
outs
cmps
push
mov
sbb
gs
loop
mov
cmp
adc
dec
out
sahf
or
sub
stc
cli
and
pop
push
mov
outs
imul
xor
inc
fcomp
cs
sti
mov
ins
add
pop
icebp
xor
mov
stos
mov
shl
cmp
pop
call
push
dec
jno
neg
jl
inc
mov
mov
enter
add
(bad)
aad
cld
call
inc
jne
jns
or
sub
fwait
icebp
or
jge
sar
lock
fwait
push
daa
test
dec
test
imul
rcr
xor
dec
das
ja
sub
sbb
dec
cmp
pop
sahf
mov
sub
push
(bad)
mov
retf
mov
jbe
dec
jmp
in
sahf
das
(bad)
jb
xchg
(bad)
mov
inc
outs
xor
fisub
xchg
shr
pop
xchg
arpl
mov
pushf
ins
sub
dec
jae
mov
stos
push
ror
xchg
push
(bad)
outs
mov
shl
retf
arpl
hlt
imul
iret
test
push
add
mov
test
imul
icebp
mov
stos
jae
push
mov
ret
xchg
adc
stc
mov
ins
mov
test
iret
rcr
data16
es
mov
jecxz
(bad)
mov
stos
dec
dec
cli
jne
cmps
lahf
inc
shr
movs
aaa
(bad)
inc
push
sbb
inc
adc
sbb
dec
push
movs
fsub
inc
popa
mov
in
pop
or
or
test
fidivr
mov
pop
shr
leave
push
or
int3
sbb
jg
jl
pop
inc
test
and
push
out
ficom
into
sbb
xchg
jns
lods
push
std
pop
ss
push
mov
xchg
push
data16
dec
jae
mov
ins
ror
(bad)
fcomp
ror
bound
add
ja
dec
xor
xchg
sti
adc
rcr
mov
mov
add
mov
fcmovb
test
jno
fnsave
bound
mov
push
(bad)
mov
jecxz
aam
mov
pop
pop
dec
movs
inc
test
mov
mov
hlt
jle
mov
jg
push
dec
adc
inc
pop
rol
enter
mov
test
les
mov
scas
push
jmp
repnz
aaa
mov
mov
stos
push
(bad)
mov
(bad)
xchg
dec
pop
sub
fst
xchg
movs
push
adc
mov
push
pushf
mov
out
push
in
dec
cmp
or
(bad)
and
arpl
inc
xchg
sub
mov
adc
push
mov
add
or
or
rcl
add
sahf
xchg
leave
out
inc
test
and
pop
movs
out
dec
and
(bad)
xchg
rcr
arpl
outs
ret
sub
imul
ja
scas
xor
lahf
outs
inc
mov
sbb
lods
pop
xchg
or
dec
lahf
mov
cmp
popa
push
jmp
sbb
add
out
mov
push
retf
stos
(bad)
mov
into
pop
jnp
je
out
mov
(bad)
mov
push
out
push
push
jnp
and
mov
imul
sar
sub
jnp
adc
fstp
fbstp
jns
cmp
sbb
dec
pushf
sub
in
mov
inc
cmp
test
jg
inc
mov
shl
xor
outs
lods
mov
inc
xchg
inc
out
adc
or
and
cmp
push
adc
push
in
xchg
xchg
or
lods
xchg
xor
push
cli
pop
fcom
jg
mov
push
mov
push
mov
out
pop
(bad)
pop
in
(bad)
pop
sub
jmp
mov
popf
xchg
jno
mov
jmp
xchg
daa
jecxz
push
popf
or
and
arpl
dec
xor
jbe
mov
ror
data16
pop
add
add
sbb
cwde
and
xchg
xchg
or
mov
test
and
push
add
mov
stos
retf
pop
pusha
mov
ins
xchg
ret
pusha
(bad)
gs
jbe
mov
jmp
xor
mov
cs
sbb
lds
cmp
in
ins
and
fsub
pop
sub
retf
(bad)
fimul
(bad)
test
retf
sub
fidivr
inc
push
pop
dec
enter
add
mov
sbb
sti
aas
push
lods
adc
test
mov
jo
sbb
xchg
into
xor
and
inc
push
inc
xchg
ja
push
mov
aam
or
xchg
repz
nop
scas
mov
out
pop
jbe
mov
cdq
aaa
iret
std
inc
pop
jae
jbe
inc
icebp
mov
dec
sub
mov
xchg
jecxz
mov
jmp
and
xchg
adc
sbb
fwait
sahf
sbb
movs
xchg
jecxz
jns
sti
ss
mov
mov
mov
pop
adc
cmps
push
jne
enter
lods
int3
cmp
and
ds
jle
int3
sub
rol
push
xchg
push
cmp
push
inc
imul
or
cmps
jmp
std
inc
inc
push
and
daa
sub
mov
xchg
xchg
movs
lods
test
shr
push
push
ret
dec
daa
mov
push
mov
mov
xchg
dec
sbb
not
sub
(bad)
iret
mov
(bad)
js
mov
mov
scas
xchg
jnp
cmp
dec
jge
ret
imul
aad
sbb
mov
sub
push
clc
nop
inc
rol
std
sbb
mov
push
and
dec
mov
in
dec
mov
jle
mov
mov
test
and
mov
call
rol
popf
(bad)
jmp
jae
mov
xchg
sub
push
cld
(bad)
daa
xor
lods
xchg
jo
aad
xchg
pop
dec
std
in
out
retf
cmp
(bad)
icebp
xor
mov
mov
jnp
sbb
inc
sub
push
mov
pop
in
mov
push
pop
fimul
das
mov
cmp
lock
xchg
mov
dec
xor
je
sbb
mov
ja
sub
jmp
jb
inc
xchg
iret
add
test
je
adc
faddp
pop
xchg
daa
movs
fist
adc
pop
loopne
imul
shl
fcomp
aas
(bad)
sti
inc
xchg
sbb
sbb
mov
fistp
(bad)
scas
out
adc
ror
out
xchg
jmp
nop
retf
dec
mov
(bad)
arpl
shl
test
out
inc
(bad)
cmps
mov
and
out
jg
fidiv
inc
int
mov
and
enter
sar
ror
xor
sub
jp
pop
(bad)
mov
adc
and
xchg
call
fstp
sub
inc
or
in
sub
popf
xchg
add
lods
xchg
mov
push
outs
xacquire
mov
out
jg
inc
dec
fidivr
mov
adc
out
jne
movs
arpl
sbb
mov
cmp
cmp
sub
sub
push
outs
push
test
lods
adc
getsec
cmp
push
aaa
xchg
xchg
xchg
rcr
cmp
cmp
les
sub
dec
pop
add
sub
les
test
out
je
mov
addr16
in
and
xchg
jns
stos
mov
cmp
dec
or
sub
addr16
aaa
inc
xchg
stos
jb
jg
adc
inc
xor
adc
test
stos
cmp
sub
icebp
xchg
ds
jecxz
mov
mov
popa
inc
icebp
js
add
addr16
ret
inc
push
sub
and
cmp
hlt
mov
sbb
mov
clc
mov
adc
and
push
sbb
and
inc
sub
add
ss
xor
fsub
cmc
call
test
pop
inc
xchg
xchg
ret
pop
lds
and
or
mov
cmps
mov
mov
push
ds
retf
sub
and
xchg
dec
mov
lds
and
outs
cdq
loope
jp
outs
call
aaa
pop
xchg
mov
mov
or
push
imul
push
sahf
pop
jnp
pop
jo
xchg
inc
mov
push
push
call
es
push
fistp
jo
xlat
movs
loopne
inc
icebp
sub
adc
mov
and
pushf
xchg
mov
mov
add
inc
mov
xchg
sti
stos
xchg
xchg
sti
test
mov
push
inc
cmp
jle
inc
nop
js
inc
add
xchg
mov
push
xchg
and
jle
pusha
iret
dec
pop
jge
ret
popa
hlt
(bad)
push
mov
std
mov
jmp
mov
xchg
ins
xchg
iret
push
add
loopne
and
mov
retf
adc
(bad)
out
dec
and
adc
iret
retf
imul
ror
ss
in
retf
xchg
test
inc
mov
xor
mov
push
pop
xchg
or
xor
lea
xchg
jnp
test
nop
mov
dec
stos
ja
repnz
test
je
and
mov
jne
mov
jno
sub
lods
push
mov
or
push
rcr
loop
push
lock
jno
sub
rol
pop
scas
pop
mov
cs
inc
test
jae
nop
retf
scas
test
jp
push
jmp
hlt
imul
stc
arpl
stos
mov
ret
mov
or
mov
sub
ss
push
stos
out
adc
in
sub
push
(bad)
and
icebp
nop
sub
inc
loope
mov
aam
xor
xchg
and
sub
mov
pusha
fdivr
mov
popf
fwait
jl
pop
ror
mov
mov
pop
lahf
lods
xor
jae
lahf
movs
jnp
shr
iret
sbb
retf
jecxz
push
in
dec
int3
mov
or
sub
gs
es
mov
fisub
mov
lods
xor
jae
stos
das
test
jp
mov
popf
xor
jmp
pop
cmp
push
xor
test
dec
dec
mov
sub
(bad)
in
cld
adc
lods
xchg
xor
(bad)
and
xor
xchg
lahf
pop
dec
adc
jp
push
movd
pop
mov
outs
pop
dec
add
dec
fisub
ja
xor
cmp
call
push
mov
loope
mov
xor
test
stc
into
js
push
cmps
(bad)
jge
push
movs
xchg
mov
mov
adc
scas
cmc
out
outs
dec
xor
or
pop
lea
test
enter
in
xchg
hlt
outs
addr16
mov
mov
cmp
jbe
jno
mov
rcl
idiv
movs
ret
jg
clc
or
lahf
ret
faddp
pop
ds
sub
add
aas
(bad)
jg
fisubr
sbb
scas
xor
std
mov
pop
and
and
pop
shl
pop
jno
inc
jb
sbb
push
and
jmp
push
daa
sbb
out
mov
push
inc
rcl
(bad)
scas
stc
xchg
inc
fdivr
int
jnp
repz
cmp
pop
adc
lds
push
sub
mov
ret
ret
shl
(bad)
hlt
sbb
jmp
xchg
aad
mov
or
cs
test
mov
aaa
outs
xor
mov
mov
xor
dec
cdq
push
cmp
cs
push
xchg
pop
adc
add
out
or
pop
pop
xchg
(bad)
fist
sbb
and
fwait
popa
sub
xchg
xchg
loop
test
xchg
adc
test
add
(bad)
cmps
les
pop
pop
xor
add
pop
or
sbb
mov
or
jns
jae
xchg
mov
addr16
adc
cmp
pop
cmc
icebp
out
lock
dec
inc
aam
(bad)
mov
aad
sub
sub
pop
xor
push
xchg
pop
loope
cld
add
sbb
push
in
jnp
inc
loop
mov
pop
outs
retf
inc
adc
pop
and
(bad)
int3
push
adc
and
push
push
mov
outs
push
mov
mov
mul
int
mov
das
or
enter
or
lds
inc
xor
sub
cld
int
ret
test
mov
int3
cli
xchg
ret
xlat
adc
push
neg
int
loop
mov
add
sub
inc
mov
out
cmp
sub
push
mov
jo
and
mov
jmp
shr
dec
fidivr
mov
scas
pusha
dec
pop
mov
mov
and
in
lahf
sub
icebp
shl
fld
push
clc
mov
push
ror
inc
and
dec
fmulp
mov
ins
jmp
and
cmp
adc
loope
jp
mov
icebp
inc
shl
fadd
repz
mov
pushf
xor
adc
inc
xchg
push
dec
test
add
xor
or
fwait
pop
dec
loop
cmps
stos
cmp
nop
add
adc
sub
movs
retf
add
and
mov
mov
shr
dec
mov
add
dec
push
adc
nop
xchg
scas
rcl
sbb
data16
pusha
ss
fmul
add
xchg
repnz
scas
outs
add
lods
push
ins
push
pop
cdq
xor
mov
lods
push
mov
jecxz
mov
arpl
fwait
lods
(bad)
pop
sahf
call
or
repz
(bad)
enter
retf
or
fcomp
dec
(bad)
sub
sub
or
(bad)
rol
and
inc
dec
dec
sub
dec
(bad)
jle
hlt
mov
mov
mov
or
push
sub
xchg
push
pop
dec
inc
adc
xor
fsave
ret
or
dec
es
dec
mov
int3
mov
cld
xor
jns
das
aad
push
pop
jns
inc
imul
xlat
ins
push
or
cli
or
cs
stos
jle
aas
jnp
lahf
dec
in
in
xchg
aad
mov
enter
push
pusha
and
repnz
imul
lods
dec
mov
das
fs
dec
xchg
xchg
and
in
and
lahf
cli
aaa
stos
cld
cmovns
aad
jae
jmp
mov
ror
paddd
xchg
stos
cmp
data16
push
aaa
jns
cmp
mov
cmp
dec
cli
and
push
add
or
fist
dec
sbb
and
add
push
inc
js
add
sbb
pop
cmc
sub
je
imul
xchg
jge
test
pop
push
pop
xchg
aaa
inc
or
outs
jbe
cwde
xchg
or
mov
(bad)
or
rcr
sahf
mov
jp
cmp
in
mov
cld
iret
iret
push
xor
push
push
aas
add
les
call
stos
mov
mov
scas
mov
ja
mov
xchg
or
push
pop
aam
(bad)
dec
xchg
sub
push
imul
push
inc
xchg
and
xor
movs
push
mov
sub
imul
xchg
xor
adc
jp
mov
dec
fidiv
inc
movs
sti
shl
add
retf
test
scas
cli
dec
shl
or
pop
sub
or
pop
xchg
inc
sbb
enter
xchg
pop
shl
sub
xchg
stos
push
jmp
test
in
sar
mov
mov
stos
shr
mov
test
inc
mov
std
cld
movs
mov
test
mov
pushf
nop
pop
mov
pop
mov
arpl
add
xchg
cmovnp
bound
mov
jl
test
addr16
jne
aas
leave
fs
sub
das
out
cmps
adc
out
push
ret
mov
int
mov
jle
jnp
out
dec
ret
js
xchg
sub
jg
repnz
mov
inc
getsec
mov
stc
fwait
xchg
aam
dec
push
adc
fs
jg
stc
xchg
sbb
(bad)
mov
adc
loope
js
jns
inc
fistp
adc
push
pushf
fst
dec
into
adc
icebp
push
inc
push
test
sub
mov
lods
pop
mov
call
adc
or
mov
xor
push
push
adc
jnp
js
popa
and
pop
and
(bad)
pusha
int3
std
aad
retf
ds
sub
mov
xor
jmp
jbe
aaa
dec
stc
mov
jl
and
xor
adc
push
pop
xor
mov
retf
popf
lahf
ins
sahf
cmp
out
imul
retf
bound
test
rcr
pop
mov
mov
js
mov
push
scas
imul
mov
dec
loopne
pushf
pop
mov
shr
ja
call
pop
push
div
mov
movs
xchg
aas
push
or
sub
dec
xchg
mov
add
retf
fs
in
fwait
mov
out
push
(bad)
pushf
shl
jnp
ret
inc
clc
xchg
pop
and
lahf
(bad)
mov
xor
clc
in
pop
sub
outs
mov
xchg
cs
jmp
aaa
fisubr
call
scas
add
ror
cld
sbb
dec
dec
fsub
test
and
(bad)
in
inc
(bad)
add
sti
xor
std
xchg
xor
fs
(bad)
xchg
stos
outs
ja
sbb
cmps
pop
shr
mov
(bad)
and
jl
sti
mov
push
(bad)
or
add
dec
mov
scas
and
sbb
push
gs
popa
and
fistp
mov
int3
repz
inc
scas
jnp
iret
push
or
lods
dec
pusha
test
add
in
mov
mov
xchg
les
nop
dec
test
pop
xchg
inc
ret
dec
(bad)
imul
dec
daa
push
dec
xchg
sbb
popf
jg
fidiv
loop
xchg
xor
icebp
call
cmp
ins
cli
lock
mov
jg
jp
fist
les
ss
ja
aad
repz
jnp
cmp
stos
lahf
mov
das
jp
out
jle
xor
imul
sbb
jmp
int3
inc
cmp
dec
scas
and
xchg
dec
inc
inc
xchg
jecxz
push
retf
xchg
mov
lods
xchg
xor
xchg
pop
into
les
aam
cmp
(bad)
adc
sub
shl
cmps
sahf
out
add
mov
repnz
inc
es
mov
xchg
xchg
cmp
and
add
addr16
into
daa
sub
mov
scas
or
mov
dec
cmc
jae
sbb
icebp
add
dec
movs
sbb
cmp
sub
retf
jbe
js
ror
sub
sub
leave
pop
shr
das
imul
loopne
push
lods
inc
test
retf
cmp
inc
adc
jecxz
ret
cmp
push
or
mov
mov
fisubr
jl
pushf
ror
aaa
fwait
retf
mov
push
cmp
int3
idiv
bound
mov
push
jnp
sub
inc
inc
mov
imul
sub
int
mov
inc
xchg
push
xchg
xor
xlat
push
std
push
mov
sbb
mov
xchg
or
add
arpl
dec
add
lea
shr
inc
iret
add
sbb
dec
nop
pop
adc
add
and
popa
mov
xchg
xor
sbb
push
les
dec
repnz
sub
mov
pusha
push
gs
ffree
(bad)
call
xchg
fild
adc
mov
push
popa
xor
add
mov
arpl
mov
loop
xchg
inc
push
xchg
push
in
rcl
dec
or
sahf
mov
push
push
mov
add
loopne
call
and
fs
xchg
out
imul
sbb
cmp
mov
fwait
mov
jp
ja
pusha
aad
or
sub
inc
push
mov
mov
push
adc
pop
xchg
or
imul
inc
mov
ret
sar
loop
dec
pop
das
xchg
xor
outs
lock
mov
pop
adc
repnz
enter
sub
das
adc
out
es
fadd
jns
(bad)
cmp
retf
add
fwait
mov
xchg
out
jmp
add
cmps
xchg
add
adc
ds
fwait
pop
push
jne
out
xchg
or
sub
loopne
xchg
in
mov
test
fcmovb
xchg
hlt
aad
cmps
adc
test
cmps
repz
push
adc
xchg
adc
hlt
in
loope
je
shl
clc
pop
and
or
(bad)
inc
aaa
int3
cs
dec
xchg
enter
inc
mov
sub
sub
loop
push
out
int3
xchg
hlt
into
int
sub
test
push
sub
mov
xchg
mov
cmp
bound
dec
lods
ss
rol
test
add
(bad)
gs
lods
test
xlat
inc
les
mov
xchg
dec
(bad)
mov
sbb
js
inc
shl
shr
in
jo
mov
lods
jnp
cmp
fstp
sar
inc
mov
pop
sbb
mov
ja
pop
mov
nop
mov
or
in
mov
leave
mov
mov
push
sub
mov
mov
lock
imul
xlat
ins
std
cld
iret
loop
fxch
and
dec
out
stos
cmps
std
xchg
add
fiadd
ja
cs
sbb
dec
push
fidivr
xlat
fsubr
inc
or
jg
mov
mov
xchg
sub
ja
mov
or
(bad)
in
loopne
sub
fs
or
inc
idiv
shl
mov
sub
lods
push
pop
lahf
pusha
repz
mov
inc
lods
cmps
add
xchg
add
mov
and
in
in
into
in
(bad)
retf
ja
movs
mov
pop
cmc
test
mov
inc
xchg
test
dec
gs
fisttp
mov
pop
mov
mov
mov
add
push
das
adc
nop
pop
mov
std
mov
push
ins
mov
pop
push
mov
adc
sub
das
add
retf
dec
push
daa
test
push
xor
cmp
jmp
or
data16
add
push
jb
jno
sub
es
test
repz
sbb
xchg
sbb
cdq
push
dec
stos
addr16
movs
ret
mov
inc
and
or
gs
adc
jl
pop
sub
arpl
jbe
fstp
adc
sub
retf
mov
xchg
add
xchg
dec
data16
data16
mov
aad
cmps
xor
mov
das
sub
(bad)
test
arpl
and
das
inc
mov
dec
and
adc
add
lods
rol
fstp
cmp
and
mov
pop
cmps
enter
fwait
arpl
xchg
outs
mov
mov
ja
call
jb
(bad)
cwde
push
mov
fcmovne
ds
pop
mov
imul
mov
test
xchg
cmp
pop
inc
and
inc
push
push
rcr
xchg
mov
stos
adc
fsub
mov
cmp
fidivr
stos
dec
xor
or
add
mov
xor
and
add
and
jne
cli
sti
mov
pop
add
add
push
inc
shr
push
das
and
mov
ss
and
add
inc
aam
dec
add
jae
ja
shl
xor
mov
pop
int
mov
cmp
hlt
xchg
adc
add
push
xor
mov
daa
xchg
call
xchg
and
lahf
into
(bad)
sub
sbb
sub
iret
imul
dec
pop
pop
mov
es
cmc
jbe
mov
repz
nop
add
in
daa
mov
sub
xlat
mov
sub
out
inc
scas
jno
in
pop
jb
daa
jnp
rcl
mov
pop
icebp
out
es
push
mov
data16
leave
xor
outs
xchg
jo
push
div
in
shr
enter
pop
call
nop
fild
or
xor
dec
movs
mov
sub
cmc
mov
fwait
pop
ins
sbb
fwait
push
shr
push
adc
retf
out
test
push
inc
jne
mov
mov
test
lods
cmp
stos
push
cmc
ja
or
xchg
cdq
clc
into
ret
push
mul
pusha
lds
sub
sub
imul
adc
mov
call
inc
repz
push
and
ret
inc
mov
dec
inc
cmc
inc
inc
mov
fcomp
ins
cld
inc
stos
sub
xor
and
cmp
adc
sub
xchg
dec
jbe
fistp
cdq
pop
pop
ds
push
loop
sahf
pop
sub
ja
pushf
mov
or
icebp
neg
ror
mov
add
lea
repz
test
mov
shl
pop
mov
popf
jmp
pop
push
adc
inc
test
fld
int3
jo
pop
sub
aas
mov
xchg
push
ins
adc
jle
sti
add
sbb
push
push
cmps
int3
xchg
inc
out
mov
sub
pop
xor
and
xor
mov
mov
cmp
cs
and
xchg
jbe
push
push
inc
sub
add
repz
cmp
jmp
stos
and
cmp
xchg
lods
hlt
mov
movs
dec
mov
push
cmp
in
sub
test
mov
add
je
leave
xor
outs
pop
leave
fstp
or
ja
mov
sti
(bad)
int
fidivr
sub
scas
add
loope
test
and
cdq
dec
cdq
jnp
lea
call
xchg
aad
jb
pop
add
leave
outs
mov
dec
js
neg
xor
enter
push
add
mov
or
cmc
sbb
or
xchg
dec
stos
stos
xchg
cmc
sub
repz
xchg
jno
inc
test
ins
xchg
and
sbb
aaa
add
stos
inc
sbb
cmp
jne
add
pop
movs
add
and
lods
mov
test
and
test
mov
mov
jns
pushf
bound
adc
jo
jl
ja
adc
add
jle
neg
out
sbb
cmc
add
mov
cwde
test
adc
imul
icebp
xchg
nop
xchg
dec
add
jmp
pop
push
jmp
mov
jo
out
neg
ror
in
pop
sahf
jo
xchg
push
mov
aas
mov
mov
retf
jno
xchg
xlat
lds
shl
jmp
cdq
shr
out
mov
and
inc
inc
mov
cmp
pop
jnp
icebp
mov
daa
or
(bad)
lods
int3
xchg
cmp
idiv
cmp
jb
add
jb
add
sbb
rol
mov
pop
sbb
pop
sub
push
shr
popa
sbb
cmp
jl
and
mov
push
ss
push
sbb
xor
mov
lods
dec
push
cmp
scas
ret
ja
add
imul
cmp
pop
mov
ffreep
jbe
hlt
cdq
push
sahf
lock
rol
enter
cdq
je
or
push
movs
(bad)
and
xor
movnti
nop
and
mov
imul
adc
dec
stos
rcl
out
into
add
rol
cmp
scas
jp
xor
jg
cmp
lock
xor
xor
std
xor
jae
inc
imul
cmp
sub
retf
pop
inc
inc
jbe
addr16
mov
add
push
add
adc
pop
sahf
mov
jl
call
aad
rcl
add
mov
fbld
ss
rcl
imul
stos
adc
dec
sbb
sub
dec
js
repnz
dec
jb
and
div
push
pop
sbb
cmp
shr
mov
pop
mov
jne
ror
pop
add
popf
or
into
stos
xlat
add
push
hlt
jmp
loopne
je
push
add
jnp
sub
retf
cmps
pop
fimul
rcl
pop
xchg
mov
mov
xor
mov
icebp
adc
and
sbb
adc
mov
mov
in
sbb
mov
aad
js
mov
repz
mov
in
inc
(bad)
push
cmp
sub
ret
stos
and
leave
add
inc
dec
and
push
mov
int3
jne
sbb
pop
sti
cmp
push
dec
inc
add
mov
lea
xchg
pop
test
daa
inc
lods
(bad)
cdq
cmp
sbb
into
add
xchg
stos
mov
jbe
mov
addr16
add
loope
jecxz
or
clc
or
or
out
cmps
bound
enter
lds
sar
jmp
ret
add
xchg
jbe
or
xchg
xchg
pop
pop
int3
mov
xchg
lods
mov
mov
out
pop
sbb
outs
sub
pop
xchg
bound
xor
dec
(bad)
mov
scas
dec
popf
fstp
add
hlt
js
mov
push
and
and
xor
ret
pop
sbb
adc
loop
div
inc
js
inc
les
pop
hlt
dec
push
mov
pop
aaa
xor
or
mov
addr16
adc
sbb
icebp
mov
cmp
xor
add
mov
sti
dec
xlat
call
inc
sbb
mov
xchg
inc
out
or
sbb
mov
mov
into
imul
sbb
xor
add
ins
jmp
pop
ds
mov
fxch
mov
push
xchg
pop
dec
aam
inc
mov
cmps
xor
push
(bad)
adc
add
imul
adc
shr
add
cmp
dec
dec
sbb
popa
pop
pushf
xor
pop
cld
and
xor
cmp
dec
lock
jnp
adc
and
mov
repnz
mov
pop
pusha
push
movs
or
dec
je
fidiv
ret
xor
cs
mov
(bad)
shl
test
ins
or
outs
ret
lea
jg
add
out
fstp
js
add
(bad)
sub
ret
int
dec
jbe
mov
pusha
cmps
ret
pop
stos
mov
shr
mov
leave
les
push
aad
bound
pop
dec
js
or
imul
inc
pop
ror
(bad)
out
mov
stos
retf
pop
dec
test
test
pop
stc
sbb
rcl
or
call
jo
and
loope
scas
aad
shl
arpl
adc
ror
inc
int3
ror
xchg
or
retf
sar
mov
outs
test
idiv
lea
add
add
xor
mov
or
push
out
rcr
es
jns
adc
dec
sub
aam
scas
push
lds
test
cs
add
cmp
cmp
je
repz
mov
inc
pop
or
inc
pop
push
sub
mov
test
pop
ja
jg
cmp
ds
mov
sub
mov
popf
xchg
outs
jnp
cli
stos
push
test
cwde
jmp
sahf
mov
aad
int
ja
mov
push
or
xor
outs
ss
or
add
test
cmp
dec
sbb
cli
mov
mov
mov
pop
mov
mov
enter
(bad)
mov
mov
bound
mov
cwde
sbb
or
daa
mov
add
ins
inc
arpl
repz
xchg
idiv
aas
cli
stos
pop
xchg
sub
dec
mov
jnp
pop
data16
sbb
cmp
sbb
xchg
call
ficom
fdiv
aas
arpl
jmp
pop
outs
push
into
dec
dec
push
push
jecxz
dec
jg
loop
outs
add
cwde
shr
inc
mov
fdivr
sti
das
pop
out
sub
sub
scas
retf
nop
(bad)
dec
push
or
adc
dec
imul
inc
loope
cs
push
cmp
outs
(bad)
pop
xchg
lahf
iret
dec
mov
sub
mov
mov
adc
mov
jp
mov
in
cmp
pop
test
int3
dec
add
xchg
push
into
or
leave
pop
(bad)
jmp
popf
ins
jno
add
repnz
xor
inc
ds
xchg
out
mov
retf
cld
sbb
add
or
in
jnp
lock
sbb
mov
push
mov
ret
cmps
fimul
push
cmps
push
push
xchg
ffreep
add
iret
add
ja
stos
xchg
repz
clc
jge
retf
test
stos
or
outs
add
retf
or
and
adc
add
mov
mov
out
mov
jo
aam
xchg
push
jb
fidiv
sub
push
adc
ja
pop
jne
cmc
nop
lods
inc
popa
jecxz
sub
sub
jecxz
aad
popa
add
sub
nop
xor
arpl
ds
stc
pop
dec
adc
retf
in
fwait
aad
mov
add
enter
push
pop
push
cmp
push
sub
push
jbe
add
fimul
pop
ins
rol
aad
mov
xchg
(bad)
aad
sbb
mov
lods
push
inc
cmp
mov
xlat
icebp
mov
aas
adc
stos
es
aaa
int
xchg
dec
xchg
stc
repz
mov
ds
mov
rcr
push
push
dec
int3
ss
(bad)
sahf
mov
add
mov
or
pop
jns
mov
sar
lahf
sub
scas
dec
ins
sti
xchg
inc
inc
dec
aaa
and
jns
jmp
sub
dec
cmc
es
mov
lods
adc
scas
or
jne
call
dec
pusha
add
imul
shl
add
push
mov
pop
dec
mov
ret
pop
(bad)
repz
lahf
mov
sub
shr
in
aaa
sbb
xchg
dec
pop
mov
sub
cmps
call
ja
sub
std
xchg
xchg
test
pushf
cmp
ror
push
xor
repz
lock
push
and
cmp
cs
push
ins
shl
add
popa
push
add
push
add
pop
mov
cmp
fdiv
popf
daa
sbb
mov
mov
call
push
xchg
and
push
retf
inc
outs
xchg
mov
scas
int3
sbb
js
fldcw
mov
sub
dec
arpl
mov
lea
jo
fcomp
adc
mov
push
sub
mov
cwde
lods
mov
add
and
cmps
dec
lock
lods
xchg
sub
ins
xlat
pop
fisubr
add
lods
les
push
mov
inc
mov
pop
sbb
je
mov
pop
or
setb
imul
rol
add
xlat
add
ss
push
stos
xor
inc
xchg
ret
loope
pusha
jle
jmp
pop
clc
imul
or
inc
scas
push
sub
dec
adc
in
add
repz
addr16
jmp
xchg
dec
xor
push
lahf
or
test
mov
es
xchg
jg
scas
jbe
pop
add
jl
adc
lods
pop
xchg
or
cli
fistp
div
mov
sub
enter
push
shl
neg
jno
jmp
mov
imul
aas
movlps
into
sahf
imul
retf
fdiv
add
push
or
and
jp
data16
sar
push
ja
iret
push
cmp
and
pop
mov
lea
add
add
sub
movs
xor
idiv
sahf
pop
xlat
xchg
mov
je
out
push
jp
dec
outs
jle
adc
dec
sub
rol
cmp
std
push
popf
add
xor
icebp
mov
rcl
(bad)
aas
xchg
(bad)
cmc
lahf
jmp
or
dec
out
xchg
test
retf
hlt
aam
sub
pop
shl
shr
inc
leave
or
pop
mov
push
in
pop
leave
jmp
fsubr
and
xchg
xor
verw
(bad)
add
adc
popf
add
and
sbb
stos
fidiv
xlat
fdivr
fistp
lock
aas
cmps
shl
ret
ret
adc
mov
mul
xor
sbb
dec
aaa
mov
(bad)
cwde
mov
(bad)
pushf
xchg
xchg
cs
inc
dec
pop
cmp
sub
xor
repz
jb
lds
leave
in
xchg
inc
push
adc
jg
in
push
jo
pop
mov
les
push
repz
sti
addr16
test
loopne
test
cmps
fcom
ficom
push
popa
dec
enter
and
sbb
adc
popf
or
fadd
lods
mov
pop
sub
xor
add
punpckhwd
gs
mul
out
repnz
loopne
mul
mov
jno
xchg
fwait
mov
loope
imul
scas
pop
inc
icebp
leave
push
push
sbb
ss
aas
stos
dec
cmps
ins
xchg
push
or
ins
xor
mov
ja
int
in
dec
mov
retf
enter
xchg
and
sbb
imul
stos
movs
repz
inc
sbb
cs
xor
out
jmp
jbe
mov
daa
lods
jbe
and
iret
adc
lods
jbe
mov
cmps
and
sti
nop
xsha1
cmps
mov
cmp
push
lods
or
inc
enter
loop
repnz
call
fsubr
nop
pop
pop
jp
jae
lods
jns
mov
push
or
add
push
sti
repnz
push
adc
ins
and
xor
mov
fist
inc
jmp
inc
mov
or
lock
push
xchg
push
out
or
outs
or
cmp
test
inc
xchg
das
add
out
xor
push
and
mov
mov
and
jle
ins
sbb
test
scas
mov
push
adc
xchg
fwait
pop
jmp
ss
test
bound
dec
loope
xor
into
ficom
mov
std
pop
fild
and
adc
retf
(bad)
shl
mov
adc
shr
adc
addr16
js
or
outs
fsubrp
retf
jae
jle
ds
xor
xor
ds
scas
retf
clc
cli
xor
ins
shr
sub
cld
pop
mov
push
out
imul
mov
mov
out
add
arpl
stos
fdiv
jecxz
push
repnz
test
ins
adc
rep
lods
call
ror
push
repnz
pop
dec
arpl
pop
(bad)
pop
push
cli
mov
xlat
js
mov
scas
fneni(8087
sbb
out
jl
dec
pop
sub
push
iret
retf
cmps
push
(bad)
enter
ret
cmp
icebp
test
test
add
sub
and
cli
stc
pop
std
mov
cmp
into
mov
ins
xrelease
xor
data16
int3
and
jg
daa
or
mov
fstp
pop
jecxz
push
imul
rcr
loope
xchg
xchg
(bad)
cmc
data16
dec
lods
lahf
scas
push
sub
dec
push
int3
cmp
cmp
or
inc
xchg
jp
and
inc
pop
aam
retf
xchg
xchg
dec
dec
out
lods
popa
jmp
push
mov
jl
pop
call
cmc
pop
in
cdq
jp
mov
std
popf
cdq
mov
movs
pop
outs
mov
or
(bad)
icebp
mov
aam
(bad)
pop
test
adc
(bad)
or
daa
das
pop
ja
in
std
lock
sub
and
mov
dec
cmp
inc
xor
das
fbstp
test
cdq
push
add
das
push
push
sbb
and
xchg
(bad)
push
pop
push
inc
sub
xchg
sbb
imul
sbb
xor
cli
(bad)
xchg
cmp
clc
mov
push
or
push
hlt
pop
pop
les
push
jle
sbb
icebp
jmp
mov
sub
push
hlt
cmp
cmp
fwait
cmp
or
dec
aas
xor
retf
mov
mov
mov
mul
sub
mov
sub
and
ja
xor
ds
imul
inc
aad
call
lods
retf
mul
add
test
lahf
push
sub
mov
add
mov
js
or
add
and
adc
jmp
mov
mov
idiv
adc
cmp
add
(bad)
mov
and
sub
sub
mov
cmp
popa
add
add
sar
sub
mov
sub
fscale
cmp
sub
mov
add
push
inc
inc
sbb
adc
adc
or
out
sub
fdiv
popa
stos
xor
shr
cmp
cdq
push
lahf
inc
stc
sub
push
push
shl
and
mov
and
popa
ret
add
(bad)
fidiv
inc
aaa
outs
lock
shl
jg
inc
cmp
cmps
sar
(bad)
jmp
jb
inc
inc
aad
jbe
daa
sub
xchg
add
adc
push
not
repz
or
pop
xchg
test
xchg
ds
enter
pop
mov
repz
jns
fisttp
(bad)
fiadd
xchg
and
nop
mov
cmp
rol
mov
or
jg
(bad)
inc
jno
push
jge
std
lods
jbe
test
mov
aaa
jecxz
ins
push
sub
imul
or
xchg
cmp
pop
pop
push
fisub
push
and
ficom
rol
ja
xor
ins
(bad)
cmc
xchg
sbb
lock
jge
mov
push
cmp
ins
movs
sahf
mov
call
ins
(bad)
jle
and
adc
stos
xchg
sbb
outs
adc
jns
shr
sub
movs
popa
call
mov
xchg
push
sahf
dec
(bad)
xchg
ret
loopne
ror
inc
xchg
mov
in
mov
call
push
add
(bad)
sbb
xchg
xchg
or
xchg
add
mov
fild
movs
mov
push
mov
iret
mov
push
out
retf
pop
jle
rol
test
adc
jge
(bad)
in
mov
push
add
jo
sbb
pop
mov
pop
shr
add
stc
neg
ins
and
out
dec
imul
(bad)
sbb
daa
lods
out
cmc
push
cmp
push
(bad)
ret
ja
fs
(bad)
sub
out
cmp
stos
jae
pop
inc
push
rcr
inc
out
add
pop
int3
sub
jle
cmp
imul
jmp
xor
int3
lods
and
add
push
int
or
push
rol
or
int3
jno
out
mov
sub
ins
xchg
push
xchg
add
lds
sbb
fsub
inc
std
sub
scas
adc
cmp
stos
sbb
test
push
and
outs
aam
shr
cmp
test
mov
cmp
mov
pushaw
push
pop
test
and
mov
jle
mov
test
pop
pop
es
nop
add
jne
addr16
stos
cwde
iretw
rcr
add
test
adc
adc
push
adc
dec
or
mov
sub
sub
mov
xchg
daa
repnz
xlat
cmc
lods
(bad)
mov
sbb
xor
cmps
in
pop
jle
stos
iret
gs
cmp
aad
push
dec
test
push
das
test
leave
shr
sbb
retf
jns
push
out
sub
dec
push
stos
jecxz
icebp
test
aam
arpl
test
in
or
arpl
fidivr
repnz
mov
mov
jmp
mov
xchg
(bad)
cli
les
enter
dec
xchg
ss
inc
mov
jge
push
call
setb
pop
std
inc
dec
sbb
cmps
daa
aam
or
and
loope
adc
ds
data16
pop
inc
mov
retf
xor
adc
or
call
add
mov
or
not
cmps
jns
inc
movs
stos
out
inc
jne
retf
popa
jle
and
mov
scas
jne
les
jl
mov
xor
movs
test
jne
retf
inc
daa
imul
(bad)
mov
cs
inc
add
jecxz
pop
sbb
jle
adc
adc
adc
pop
jae
in
mov
jmp
mov
out
mov
fwait
sub
popa
jmp
repz
movs
enter
ret
xchg
pop
push
fld
loopne
dec
cmp
imul
popa
xor
pushw
jg
xor
jecxz
push
fstp
mov
iret
enter
and
xchg
loop
daa
out
sub
xchg
fxch
sub
inc
mov
cmp
adc
and
push
das
test
jmp
inc
push
test
ret
aaa
xchg
xchg
sti
stos
std
(bad)
sub
jmp
inc
cmps
std
xor
not
outs
mov
push
popa
mov
xchg
repz
loope
jb
jo
xor
xchg
loopne
sbb
or
pop
push
jno
imul
sbb
ss
jne
shr
xchg
push
(bad)
jno
dec
jmp
dec
mov
test
retf
lock
pop
adc
mov
sub
pop
repnz
int3
lds
dec
dec
(bad)
in
popa
cmps
push
shr
push
pop
out
movs
inc
lods
imul
and
mov
inc
sahf
mov
addr16
in
arpl
rcr
lock
in
(bad)
hlt
imul
retf
jl
push
ds
in
push
cmp
mov
mov
outs
add
push
iret
retfw
mov
sub
fst
and
push
push
sbb
loope
jno
ins
scas
stos
adc
cmp
xor
ror
mov
shl
pop
clc
push
xchg
imul
fdiv
stc
mov
mov
push
int3
pop
sub
enter
add
(bad)
jns
leave
(bad)
xchg
out
movs
jbe
add
push
mov
call
fnsave
in
lock
dec
addr16
mov
je
add
ror
pop
aam
aam
sub
mov
test
sti
sbb
stc
lods
mov
dec
xor
sbb
pop
mov
sbb
and
pop
clc
loope
lds
xor
dec
push
xlat
jmp
xchg
push
(bad)
(bad)
icebp
stos
mov
push
add
or
daa
mov
push
mov
jnp
sub
pop
(bad)
and
(bad)
push
sub
into
pusha
or
int3
xchg
js
aam
ins
aaa
ins
ins
pushf
scas
sub
and
iret
xor
enter
lea
inc
retf
mov
adc
jl
js
cmp
mov
xchg
popf
(bad)
fisttp
sbb
repnz
adc
push
mov
xchg
inc
xlat
mov
lods
xchg
or
test
push
sbb
sbb
call
sbb
xor
or
mov
jl
cmps
outs
ss
push
mov
jnp
jns
adc
sar
add
adc
xchg
pushf
lds
mov
mov
sar
sub
ja
pusha
movs
jne
dec
sub
pop
(bad)
adc
iret
jg
xchg
sbb
data16
and
xor
maskmovq
idiv
shl
mov
mov
mov
outs
ficom
dec
sub
push
nop
ror
lods
pushf
sub
dec
loope
pusha
test
pop
and
jne
dec
sub
inc
xchg
cmp
out
call
sbb
adc
add
fcomp
retf
adc
stos
mov
(bad)
jl
imul
mov
push
mov
sub
fbstp
retf
inc
retf
push
xchg
test
xchg
repz
sbb
xor
pop
cmps
pop
jns
stos
stos
dec
mov
mov
iret
sub
fild
mov
(bad)
pop
push
js
lds
pop
retf
and
stc
add
and
inc
push
out
xlat
mov
push
adc
jg
jbe
sub
fisttp
add
pusha
or
call
retf
mov
dec
mov
mov
and
add
push
rol
xor
das
dec
lds
sbb
mov
int3
pop
xchg
(bad)
fadd
jo
popf
xlat
je
stos
test
pop
test
inc
push
test
add
ror
adc
jno
adc
fdiv
ins
sub
or
scas
push
aad
in
scas
retf
xlat
into
mov
nop
and
popf
shl
push
jp
in
pop
pop
jmp
sub
iret
inc
scas
rol
mov
retf
pop
mov
fsubr
dec
mov
and
push
pop
xchg
retf
mov
mov
outs
ds
push
xor
aam
inc
push
mov
outs
enter
mov
outs
or
ret
jbe
xchg
sub
sub
dec
xchg
xchg
pop
ret
outs
add
dec
mul
daa
cld
push
inc
mov
vmovd
in
push
loopne
jno
aas
xchg
mov
xor
cmp
aam
cmp
xor
add
mov
or
mov
adc
add
push
xor
cld
sahf
push
xchg
cmp
scas
outs
lods
icebp
jmp
shr
ret
xchg
cmps
popf
ja
mov
adc
ds
inc
repz
imul
cmp
loopne
out
hlt
pop
shl
dec
call
mov
ja
jae
(bad)
scas
neg
xchg
push
mov
sub
and
jnp
push
cs
dec
push
sbb
ror
jo
test
js
imul
or
mov
adc
cmc
jno
cmp
jg
xchg
cmc
xchg
push
lds
push
or
cwde
pop
adc
xchg
pop
pop
jne
pushf
adc
pop
xor
xor
out
xchg
dec
(bad)
cdq
jmp
mov
es
and
xchg
stos
(bad)
aas
jecxz
sub
fld
mov
mov
cwde
mov
repz
fld
div
mov
jbe
sbb
sahf
sbb
int
neg
mov
mov
sub
pop
mov
leave
dec
and
pop
xor
sub
mov
retf
inc
shl
in
sbb
fidivr
lods
push
cld
dec
push
push
jle
push
add
(bad)
jle
mov
cs
dec
or
inc
xor
imul
ret
pop
dec
cmps
pop
nop
dec
retf
adc
in
mov
sub
retf
inc
xchg
popf
ficomp
cwde
sbb
mov
jge
shl
mov
lods
shl
cmp
push
xchg
call
and
mov
fs
int3
retf
adc
ins
inc
cmps
cdq
xchg
sti
shl
scas
js
das
ror
sub
xlat
lds
adc
call
int3
lods
in
xchg
fdivr
pop
lods
iret
xor
pop
inc
xchg
fidivr
pop
adc
inc
pop
pop
fmul
push
sbb
sub
xor
push
pop
xchg
cmc
into
cli
adc
out
dec
xchg
jbe
mov
mov
cmc
jno
dec
(bad)
mov
cmc
xchg
pop
mov
adc
hlt
or
imul
xor
cmp
sbb
loopne
xor
push
enter
push
out
pop
retf
adc
jg
jae
aam
cmp
(bad)
inc
xchg
enter
pop
jmp
xor
mov
xchg
das
not
in
icebp
imul
xor
push
out
sub
add
test
pop
inc
ret
dec
mov
int3
add
jmp
(bad)
aaa
retf
sbb
jnp
je
mov
call
sbb
int
push
adc
and
in
scas
or
jg
mov
imul
jo
rcl
scas
xor
idiv
sbb
fs
sub
in
movs
add
addr16
dec
inc
xor
clc
sbb
mov
gs
pop
sub
fist
rol
stos
push
fdivr
pop
lods
stos
rol
aam
xchg
imul
sbb
sbb
jecxz
jns
inc
dec
(bad)
pop
ret
stos
lahf
mov
mov
mov
neg
fwait
pop
scas
test
arpl
cmp
inc
sub
sub
cmps
stos
es
inc
xor
mov
xor
xchg
hlt
push
adc
aaa
fcom
jl
in
sbb
and
inc
js
sahf
xchg
(bad)
xchg
out
in
cs
or
pushf
push
or
(bad)
dec
pushf
mov
and
stos
aam
jno
mov
cld
aaa
loop
xchg
iret
nop
(bad)
xchg
inc
arpl
xor
fcmovb
xchg
mov
test
adc
push
or
inc
popa
cmps
test
test
in
adc
retf
jmp
out
lahf
pop
dec
jne
jbe
and
xchg
xor
push
outs
add
shr
cmps
mov
sbb
out
mov
inc
push
pop
popf
imul
arpl
dec
jae
mov
mov
rol
(bad)
ficomp
jo
lods
or
push
pop
push
nop
jae
dec
(bad)
push
mov
aaa
add
xchg
test
and
leave
dec
(bad)
and
shl
ja
mov
mov
dec
data16
add
xor
and
pop
enter
outs
shr
jl
xor
mov
lods
ja
inc
inc
scas
mov
mov
xchg
test
sub
or
xor
call
fwait
xor
loop
lock
add
push
call
in
cmps
out
lds
out
xor
inc
inc
pop
mov
add
dec
sub
inc
mov
jge
xchg
fstp
pop
sbb
and
sbb
pop
xor
call
mov
cmp
(bad)
sahf
sti
cmps
rol
push
test
mov
test
dec
sbb
dec
push
xor
cmp
(bad)
cli
pop
stos
pop
ret
and
xchg
or
out
js
pop
jbe
push
dec
xor
popa
cmp
xchg
scas
jle
jnp
inc
mov
push
push
adc
add
out
mov
test
push
not
xchg
push
shl
(bad)
jmp
(bad)
pop
sbb
add
sub
mov
cld
int
push
aas
mov
push
mov
sbb
int
dec
jl
js
push
sbb
nop
xchg
call
repnz
test
cmp
retf
inc
fsub
retf
cmps
mov
neg
lock
push
pop
xchg
stc
test
pushf
adc
(bad)
out
mov
or
sub
icebp
xchg
xor
in
popa
push
adc
add
adc
push
stc
stos
imul
ror
aaa
scas
pop
scas
nop
xor
dec
cli
mov
les
adc
sbb
pop
mov
add
pusha
mov
rol
test
lahf
les
les
mov
jae
jp
in
outs
jnp
jns
ror
pop
pop
push
or
test
outs
xchg
ss
enter
enter
loopne
sbb
pop
cmp
mov
icebp
sub
sub
sub
jne
pushf
fcom
push
and
imul
mov
push
outs
iret
test
mov
movs
jo
aad
pop
aas
stos
xchg
stos
add
mov
test
out
dec
dec
jno
mov
push
(bad)
out
mov
mov
pop
inc
outs
mov
ins
leave
push
cmp
dec
repnz
std
ficomp
jne
pop
retf
enter
sub
pop
and
xchg
test
outs
fyl2x
inc
push
(bad)
punpckhwd
int
mov
neg
xlat
(bad)
push
push
imul
pop
mov
int3
mov
mov
add
pop
pop
repnz
push
pop
mov
sbb
in
(bad)
aas
das
ja
add
stos
enter
mov
pop
xchg
sbb
stc
ror
ret
mov
(bad)
pop
iret
and
add
popf
cmp
adc
inc
pop
movs
sbb
xor
in
xchg
stc
fadd
xlat
ds
cmp
jmp
dec
cmp
and
mov
xlat
dec
mov
mov
js
(bad)
test
dec
nop
add
jle
lds
daa
pop
inc
out
cmps
mov
inc
jne
mov
cmps
pusha
movs
js
inc
or
push
adc
sub
mov
jl
stc
xor
mov
jge
fadd
(bad)
mov
ficomp
push
mov
mov
aam
icebp
neg
rcr
or
imul
int
pop
out
cmc
cmps
mov
ins
fisub
pop
sbb
sbb
std
jmp
or
mov
inc
out
jle
mov
sbb
add
jno
mov
data16
mov
cdq
aaa
dec
pop
cmp
movs
jmp
ret
pusha
sbb
jmp
dec
sbb
loop
pusha
adc
sti
sub
mov
loopne
sub
jg
jle
add
mov
inc
or
in
or
ins
xchg
push
mov
je
mov
cmc
push
or
addr16
loope
mov
push
xor
or
and
mov
inc
jecxz
mov
add
test
int
pop
scas
(bad)
jg
pop
inc
gs
mov
xor
cmp
jg
test
leave
mul
sbb
mov
dec
ins
xor
fwait
push
fsubr
mov
fmul
dec
cmp
mov
(bad)
in
adc
add
push
jmp
jl
adc
movs
ret
jne
cli
imul
push
jmp
or
out
mov
mov
or
mov
sub
test
dec
ss
outs
hlt
jnp
mov
xchg
jno
push
mov
and
fadd
imul
imul
(bad)
jmp
nop
dec
call
js
lock
ror
xor
data16
cmc
and
jp
cmp
xchg
mov
pop
enter
xor
xor
test
dec
add
push
xor
ret
aaa
pop
mov
cmp
and
pcmpeqb
test
mov
xor
cmp
inc
jb
loopne
ins
test
or
imul
or
shr
add
pop
dec
cmp
pop
sbb
jno
sub
dec
(bad)
adc
and
or
pusha
(bad)
das
add
jae
or
cmps
ret
js
js
jmp
mov
push
xchg
pop
fucomp
jae
dec
lds
dec
cs
enter
mov
mov
and
pushf
adc
retf
call
fist
retf
lock
test
test
sub
test
cmp
adc
out
call
pop
or
sahf
arpl
arpl
das
repz
xchg
jmp
dec
push
retf
dec
xchg
dec
dec
shr
or
imul
outs
pop
(bad)
lahf
fwait
or
icebp
xor
or
hlt
dec
inc
pop
pop
sub
or
jb
and
inc
test
lods
les
jae
pop
adc
jb
push
or
ret
pop
stos
aam
add
repz
inc
pop
lock
rol
stos
mov
je
data16
mov
(bad)
mov
dec
jl
aaa
cmp
adc
dec
lods
inc
mov
fist
jb
clc
add
push
and
mov
mov
pop
push
nop
and
mov
jb
aaa
mov
xchg
cmps
out
jnp
dec
adc
inc
test
lods
cmp
stos
cmps
xor
out
lock
aam
stos
adc
aam
sti
je
adc
push
mov
inc
dec
out
mov
ja
jecxz
arpl
fistp
mov
or
dec
not
arpl
lds
(bad)
ds
mov
adc
test
pop
fs
inc
push
xchg
jno
loop
mul
xchg
test
xchg
aas
xchg
fst
mov
idiv
xor
div
cmp
mov
fwait
in
push
mov
or
or
push
das
mov
jae
into
call
pop
inc
test
aas
fidiv
loop
into
dec
(bad)
loopne
psubw
fcmove
push
mov
std
push
fs
cwde
jns
mov
sub
fmul
sub
mov
adc
les
jge
imul
out
(bad)
xchg
fwait
sbb
ror
das
xchg
rcr
lds
mov
jmp
test
add
aam
jle
loope
xchg
pop
fwait
pop
call
sbb
cmp
repnz
test
mov
out
cmc
mov
and
inc
adc
jmp
sbb
dec
jmp
mov
icebp
mov
imul
push
cmp
jge
enter
push
or
jl
push
sbb
div
and
out
jg
push
cmp
test
push
call
mov
jecxz
sub
ss
pop
sti
and
cmp
sub
sub
inc
stos
(bad)
cli
push
add
xchg
call
xor
into
mov
sub
retf
xchg
jae
push
stos
push
out
mov
pusha
xchg
call
neg
movs
in
ins
add
in
jne
ficom
pop
retf
mov
pop
aaa
test
stos
or
pop
adc
pop
cmp
fstp
ret
repz
mov
jl
retf
jg
xchg
push
bound
add
cld
dec
sahf
xor
shl
xor
inc
les
es
xchg
pop
jns
ror
jge
push
push
add
mov
xchg
mov
or
stos
(bad)
fldcw
xchg
push
cmp
push
xchg
adc
sub
pusha
mov
add
test
xchg
lea
jecxz
(bad)
faddp
add
mov
mov
mov
cwde
xor
lds
lahf
push
dec
lods
cmp
ror
inc
adc
pusha
aad
add
mov
arpl
lea
mov
jnp
sub
xchg
popa
mov
pop
jg
sub
jns
xchg
adc
movs
std
jmp
aad
ret
in
stos
test
push
cmp
or
repnz
push
pusha
and
sbb
fbstp
int
out
popa
stos
test
and
adc
cld
mov
mov
xchg
add
jl
push
outs
fcmovnb
push
fistp
jnp
and
outs
call
or
pop
test
out
xor
or
(bad)
(bad)
aam
push
mov
(bad)
out
and
adc
push
or
mov
das
leave
and
push
sbb
push
(bad)
mov
int3
adc
repz
mov
cmp
sub
adc
xchg
mov
loopne
sahf
mov
sub
sbb
(bad)
test
pop
cs
xor
push
(bad)
mov
inc
addr16
loope
test
pop
pop
sbb
into
ja
and
mov
or
cmps
scas
bound
mov
(bad)
daa
inc
inc
cmps
adc
jae
xchg
xor
mov
(bad)
cmp
mov
xchg
jg
xor
mov
push
inc
cdq
cmps
ficomp
std
in
pusha
mov
xor
jecxz
adc
nop
pop
mov
xchg
cmc
movs
add
xchg
aad
dec
and
hlt
mov
add
dec
cmp
mov
push
cmp
and
icebp
push
pop
scas
or
jl
adc
icebp
mov
fimul
and
or
dec
sti
lock
xchg
mov
outs
add
mov
mov
pushf
mov
mov
cwde
mov
mov
add
mov
inc
add
mov
pop
add
(bad)
rol
sub
ret
ins
out
daa
scas
cmp
pop
sbb
and
jmp
dec
push
(bad)
test
xchg
sbb
das
out
or
inc
xchg
pop
add
scas
(bad)
in
aaa
jnp
and
movs
mov
push
lahf
mov
pop
lea
rcr
adc
and
pop
dec
cmps
sbb
ret
stos
cmp
or
and
mov
leave
ret
jecxz
adc
outs
arpl
imul
scas
sahf
dec
dec
push
ja
dec
xchg
leave
ret
fidivr
fwait
adc
xor
loopne
push
mov
pop
idiv
xlat
loopne
movs
lods
ret
bound
adc
inc
mov
push
add
lods
cmp
repnz
retf
pcmpeqw
xor
xchg
mov
mov
cld
xchg
inc
inc
sbb
dec
xchg
ret
cs
dec
mov
ds
loopne
lock
imul
fmulp
adc
mov
aam
mov
cmp
pop
outs
xlat
push
xchg
mov
mov
push
retf
call
std
fwait
or
and
inc
(bad)
in
adc
and
sbb
(bad)
mov
test
int
jo
test
and
sbb
lock
xor
call
popf
sbb
adc
retf
ret
ins
fadd
loope
jb
shl
dec
mov
mov
test
cs
sar
or
xchg
cmc
or
mov
(bad)
lock
fcomp
jge
repz
cwde
sub
xchg
sub
lods
mov
or
fld
xor
in
jb
fidivr
pusha
xor
in
xor
bnd
mov
add
jmp
pop
push
inc
call
sub
nop
dec
lods
call
add
test
or
jno
jmp
push
enter
fiadd
jle
add
pop
iret
fistp
rol
scas
dec
add
das
pop
aad
mov
lods
clc
dec
push
scas
lds
clc
pop
push
ret
dec
adc
adc
sahf
gs
lods
(bad)
sti
mov
cmp
fadd
int
lods
imul
stc
dec
mov
jnp
mov
test
aas
lods
ins
scas
les
jmp
or
mov
inc
pop
dec
or
outs
mov
or
jns
(bad)
jns
jecxz
push
test
scas
ror
add
mov
xor
cmp
ins
xchg
call
retf
fisttp
push
xchg
adc
(bad)
out
adc
(bad)
ror
fadd
xchg
call
mov
cmps
sbb
lds
add
fwait
mov
mov
lahf
(bad)
repz
cmp
xchg
mov
mov
cmp
mov
dec
push
pop
cmp
xor
fmul
scas
je
outs
scas
imul
push
stos
fbstp
mov
xchg
int
inc
xchg
dec
mov
(bad)
out
(bad)
mov
push
mov
dec
(bad)
cli
adc
div
push
mov
push
jo
xchg
push
cli
fwait
out
mov
pushf
xchg
mov
mov
inc
xchg
pop
outs
jno
pop
popf
sbb
pop
fwait
sbb
pop
idiv
mov
jno
mov
dec
outs
retf
bnd
retf
rep
push
jmp
cmps
cmc
daa
jne
je
shr
ror
int3
in
dec
and
scas
repz
mul
rcl
div
shl
sub
pop
arpl
pop
mov
xchg
aas
sub
je
ret
jno
push
fcmove
sbb
(bad)
sub
mov
int3
cmp
sub
cs
push
and
push
xchg
fst
outs
inc
(bad)
das
sbb
ror
into
repz
inc
retf
jae
inc
dec
xchg
aam
outs
test
add
fld
sub
xchg
shr
jmp
sub
pop
and
mov
inc
dec
and
xchg
dec
mov
jmp
outs
inc
mov
xchg
dec
aaa
add
mov
mov
popa
out
(bad)
sub
inc
shl
mov
popa
sub
cmps
cmp
jmp
push
push
(bad)
jno
mov
ins
xor
xor
sti
(bad)
movs
dec
das
and
jge
mov
jnp
push
js
out
dec
test
fcmovb
retf
mov
(bad)
xchg
icebp
sbb
sub
or
stc
(bad)
stc
inc
sub
sub
xor
xchg
pushf
xlat
popf
mov
cli
fstp
xor
sti
fcomp
pop
fmul
lock
imul
add
das
push
xor
pop
clc
mov
push
push
outs
iret
xchg
jmp
jne
dec
mov
and
(bad)
ficom
mov
jne
and
cld
jne
or
out
mov
push
jnp
cmc
jmp
lahf
and
fistp
loope
adc
inc
mov
mov
(bad)
mov
jb
shr
xchg
push
mov
add
es
push
push
std
jp
inc
xor
sub
std
or
jbe
dec
xchg
ins
push
test
dec
jbe
ja
sub
sbb
sub
stos
fild
mov
inc
xchg
aaa
jae
in
inc
mov
pop
add
jle
adc
out
shr
test
xchg
pop
dec
sub
or
les
jmp
bound
push
mov
or
stos
cmp
xor
adc
xor
pop
call
stos
xlat
dec
dec
rcl
xor
loop
pop
sbb
pop
inc
fiadd
ds
(bad)
xchg
cmp
adc
push
and
ins
xor
cmp
in
pop
dec
shl
cmps
ins
ins
pop
xchg
pop
imul
jno
xor
in
dec
mov
je
out
retf
push
adc
jle
cmps
ds
xchg
jne
inc
in
aam
clc
mov
sub
dec
icebp
popf
and
ret
fnstsw
and
cs
movs
pop
ss
inc
test
jmp
add
inc
fnstenv
(bad)
in
aam
sub
xor
retf
xor
inc
(bad)
jnp
inc
mov
aam
or
lds
push
js
push
cld
pop
inc
repz
arpl
jo
jns
jno
inc
sbb
xor
jl
sub
jge
aas
or
inc
test
adc
cmps
xor
ret
ror
aaa
mov
imul
iret
push
inc
inc
and
das
xchg
mov
ror
fsub
jns
shr
mov
cld
mov
sub
retf
out
aaa
cmp
sub
add
pop
(bad)
dec
(bad)
aad
movs
movs
cwde
imul
icebp
(bad)
dec
imul
jne
mov
mov
aad
mov
lea
lds
(bad)
cld
push
dec
call
adc
not
cmp
mov
inc
sub
or
cld
test
xchg
mov
or
in
mov
mov
das
leave
(bad)
les
imul
imul
pop
inc
mov
std
add
jnp
movs
or
sbb
jmp
xchg
retf
pop
repz
sub
inc
enter
out
push
mov
inc
xor
repz
imul
mov
cmps
dec
pop
aam
mov
aam
pop
push
jo
mov
inc
push
out
aas
dec
or
bound
in
inc
rcl
int
sbb
cmps
into
xchg
ds
test
outs
test
clc
cs
je
jg
cdq
xor
sti
mov
pusha
and
xchg
jecxz
jno
push
dec
inc
cmp
pop
ret
mov
and
dec
aas
leave
iret
and
xor
js
adc
aaa
sbb
mov
std
dec
outs
xchg
sub
inc
stos
ret
jo
retf
jmp
inc
add
imul
or
xchg
stos
data16
retf
bnd
or
dec
int
leave
mov
push
xor
sbb
mul
and
ret
mov
mov
jo
mov
fcomp
aam
dec
repnz
fstp
adc
xor
mov
xchg
int3
in
in
loopne
clc
xchg
add
and
dec
hlt
xor
push
xchg
sbb
mov
mov
je
lds
push
or
fimul
adc
push
cmp
(bad)
retf
cmp
pop
adc
inc
js
adc
cmp
mov
mov
(bad)
jmp
xchg
cwde
sti
fwait
shl
mov
aaa
jp
popf
jecxz
fs
sti
scas
test
mov
or
je
call
lods
pop
scas
add
xor
jae
repz
outs
pop
push
ins
or
lea
mov
sub
mov
mov
or
fimul
inc
or
jmp
les
mov
mov
neg
dec
pop
sub
aam
js
test
mov
mov
daa
or
jo
push
scas
jbe
(bad)
inc
leave
pushf
pop
es
push
outs
int3
jle
pop
ret
sub
nop
jle
fs
add
and
ret
mov
jg
movs
stos
sti
xchg
ins
fidiv
ds
stos
sbb
cdq
lods
jno
addr16
sar
or
jno
xor
lods
mov
(bad)
in
fisttp
push
push
mov
fs
push
xor
dec
cmp
pop
pop
mov
in
push
not
adc
sbb
retf
stos
es
mov
enter
fdiv
sub
push
jmp
sbb
xor
add
(bad)
or
dec
scas
cmps
add
lods
test
outs
pop
pop
inc
arpl
arpl
fucom
and
push
cmp
ds
inc
shl
adc
inc
inc
cmp
mov
das
xor
pop
mov
mov
jnp
cmp
ja
lahf
pop
not
dec
inc
popa
push
js
push
fadd
sub
rol
and
pusha
dec
imul
pop
lahf
xor
jmp
outs
sub
in
inc
xor
xchg
mov
jnp
add
dec
nop
cs
inc
cmp
retf
mov
divps
fidiv
push
jno
into
jae
stos
leave
sub
mov
mov
es
dec
mov
mov
aad
sar
mov
jbe
mov
mov
mov
rcr
imul
push
inc
mov
fs
fst
mov
pop
out
test
cmc
repnz
or
and
pop
push
mov
shl
push
push
retf
das
nop
sub
or
sbb
arpl
rcl
cli
test
in
lds
xchg
aaa
daa
pop
push
sbb
daa
push
lock
ins
fsub
pop
cld
inc
in
(bad)
into
repnz
icebp
les
stos
ins
jmp
fldcw
jmp
jns
rcl
push
inc
fwait
mov
or
movs
dec
lock
fdiv
fisub
lods
pop
popf
sub
pusha
adc
add
out
call
sub
std
jno
xchg
fist
sub
ss
push
push
popa
add
std
shr
push
loopne
enter
aaa
pop
mov
and
test
mov
add
jg
push
xchg
outs
dec
lahf
mov
and
pop
std
or
dec
pop
dec
fcom
or
test
mov
push
pop
les
and
dec
adc
xor
ins
xor
fst
cs
or
jb
jnp
test
jl
popa
(bad)
jns
mov
pop
(bad)
jmp
sub
xor
test
and
leave
stos
in
and
mov
mov
imul
sbb
mov
push
jge
stos
cmps
jno
retf
out
mov
jns
cmp
pop
sub
retf
adc
rcr
pop
pushf
and
enter
push
out
or
fnsave
repnz
lahf
add
mov
popa
mov
mov
push
jbe
adc
mov
jnp
xor
mov
pop
add
stos
ins
jmp
sub
das
push
daa
inc
(bad)
inc
xchg
test
popf
arpl
test
jg
ds
sub
les
push
test
or
aas
pop
push
xor
adc
(bad)
movs
jg
adc
xor
jbe
pop
xor
xor
loop
shl
mul
je
retf
dec
sub
sbb
xchg
(bad)
fadd
inc
push
cwde
daa
bound
xchg
mov
mov
xchg
jb
jnp
dec
mov
mov
sti
in
push
jge
push
jp
cmovb
pop
mov
call
into
shl
fldcw
jnp
movs
int3
mov
xor
in
mov
push
je
cmp
imul
stc
push
add
lock
dec
lea
pop
and
mov
sbb
inc
sbb
test
fnstenv
adc
mov
fisttp
jo
lds
fldenv
std
add
jle
mov
xchg
xor
or
test
pop
push
ja
sub
jbe
cli
xlat
xchg
sti
xor
xchg
lea
imul
lods
clc
sbb
add
dec
dec
stos
stos
and
cmc
mov
mov
push
xor
add
push
clc
cs
frstor
iret
cmp
test
sbb
add
outs
(bad)
jge
jne
xor
aam
mov
or
jl
in
rcr
jle
push
push
pop
out
cmp
repz
fdivr
cmp
imul
or
call
jg
sbb
repnz
sbb
add
cmps
add
xor
xlat
xchg
dec
push
dec
pop
mov
ret
fwait
shl
ins
bound
push
jle
ds
jp
sbb
mov
ret
stos
xchg
fwait
pop
xchg
retf
repz
lods
push
add
jno
mov
ffree
fcomi
js
ins
jp
add
cmc
push
mov
dec
cmp
and
fist
cmp
xor
out
dec
enter
dec
iret
outs
cwde
std
int3
dec
not
outs
cmp
xor
mov
add
fistp
dec
sbb
add
add
dec
pop
jns
mov
inc
movs
mov
les
cmps
sub
or
push
xor
sub
test
and
xor
ds
icebp
mov
mov
in
(bad)
fsubr
movs
pusha
and
pop
cli
adc
pop
jl
rcl
pop
fiadd
sub
cmc
xchg
mov
or
(bad)
push
xor
icebp
in
mov
or
icebp
call
stos
inc
pop
out
pop
push
and
test
cld
and
pop
sub
and
mov
aaa
out
add
dec
push
mov
lea
lods
jne
fwait
pop
test
cmps
shl
jnp
hlt
mov
jns
xchg
imul
jmp
or
mov
push
pop
cmp
push
es
or
imul
xlat
lods
aas
pop
dec
daa
pusha
shr
ret
jmp
dec
xchg
jle
or
retf
or
(bad)
adc
add
inc
or
pop
jb
push
inc
jae
and
or
mov
jp
call
mov
dec
jmp
test
sti
test
stc
xchg
add
push
pop
or
push
pop
xchg
pop
xchg
dec
mov
or
dec
mov
lods
rcl
shufps
xor
das
push
repz
mov
sub
je
test
push
outs
stos
jl
pusha
mov
inc
push
jg
popf
mov
dec
repz
xchg
dec
sbb
mov
(bad)
retf
inc
xchg
lea
loope
adc
mov
test
mov
and
jo
sbb
mov
sbb
pop
mov
add
out
or
xor
shl
sub
loope
in
mov
fs
dec
pop
mov
jnp
push
xchg
inc
sub
xchg
xchg
imul
jns
sub
mov
iret
or
bound
fs
push
mov
sub
or
out
repnz
pop
test
stos
mov
and
add
add
sbb
pushf
pop
jae
into
retf
push
jg
pop
ja
adc
fmul
adc
iret
icebp
dec
mov
cs
mov
xchg
in
cdq
dec
add
jl
mov
cmps
into
(bad)
mov
jns
sbb
jle
mov
ins
lahf
jbe
sub
pop
and
xchg
mov
pop
mov
cwde
inc
iret
dec
(bad)
gs
popa
ret
cmp
inc
stc
daa
adc
int3
aad
call
or
arpl
scas
fistp
sbb
cmps
mov
movs
or
pop
xchg
shl
lods
sub
pop
add
cmc
adc
aam
retf
test
imul
xchg
iret
sbb
jb
std
inc
inc
clc
dec
cmp
push
repz
ds
mov
and
mov
sub
mov
xor
mul
clc
addr16
push
jle
mov
out
movs
es
and
js
mov
jg
and
in
scas
scas
in
dec
sahf
stos
test
outs
push
push
pusha
jno
es
xchg
inc
cmp
(bad)
cwde
cmps
lods
xchg
inc
retf
adc
pop
mov
iret
stos
dec
dec
inc
test
push
push
fst
or
fs
and
imul
mov
cmps
mov
or
mov
fst
mov
jp
jne
in
jl
add
pop
xor
xor
stc
mov
xlat
(bad)
xor
shr
hlt
retf
fdiv
dec
xor
ins
inc
test
out
mov
push
dec
sub
cmps
(bad)
pop
or
fs
jge
add
adc
mov
dec
ret
movs
test
stos
test
jae
xor
shl
lods
push
lods
lods
adc
pop
lock
imul
xchg
xchg
or
push
cs
aas
stos
pop
repz
inc
sub
inc
loopne
pop
pusha
enter
cdq
jne
sbb
loop
or
aad
jo
or
nop
jo
ror
mov
mov
into
iret
xor
pop
sub
pop
xchg
add
cmp
jge
sahf
xor
out
addr16
cwde
(bad)
mov
fidiv
popa
sbb
lods
mov
scas
ror
imul
mov
retf
stos
pop
xor
add
jle
out
cmc
add
mov
cwde
lea
jl
cld
test
jge
xchg
xchg
cmp
loope
mov
dec
cmp
popa
mov
popa
pop
push
or
call
mov
jmp
jbe
repnz
jae
dec
leave
xor
jno
sub
iret
xchg
xchg
in
imul
loopne
dec
pop
adc
lea
pop
add
push
mov
xlat
mov
stos
lods
pushf
loope
xor
jle
iret
xchg
mov
push
cs
or
push
xor
sbb
xlat
hlt
push
or
popf
mov
clc
push
mov
(bad)
lock
add
mov
push
mov
stos
fisub
test
shl
fimul
dec
inc
add
cmp
sub
loopne
outs
inc
es
mov
shl
repz
adc
std
cmps
inc
or
sub
out
fist
and
cmc
(bad)
cmp
sti
nop
push
pop
push
dec
cli
call
pop
and
cmp
lods
mov
fidiv
jb
or
pop
(bad)
call
xor
jns
dec
test
aas
or
add
scas
and
push
xor
or
mov
ins
jmp
xlat
(bad)
mul
es
jmp
jmp
in
lock
aaa
std
pop
mov
cs
add
xchg
mov
push
call
les
pop
out
out
push
pop
rol
mov
ds
(bad)
xchg
and
sar
lods
int3
sbb
jge
add
fs
jecxz
push
into
add
dec
call
inc
bnd
inc
fnstsw
inc
aam
call
cmc
jnp
out
into
fmul
jge
push
fwait
sub
movs
mov
das
std
add
test
sbb
dec
das
mov
pop
in
adc
iret
imul
mov
js
dec
cmps
sub
cmps
out
xor
xor
mov
jno
jmp
or
rcl
stos
clc
fild
inc
ins
mov
sbb
inc
jge
mov
mov
add
test
outs
xor
stos
pusha
sub
stos
sbb
xor
rcr
aas
into
add
fucomi
cmp
fidivr
ja
popa
jle
sub
add
sbb
lods
and
pop
enter
rcr
sub
jo
ss
nop
imul
adc
daa
ret
mov
stc
xchg
dec
or
test
jnp
repz
(bad)
sub
dec
stos
push
push
and
stos
lock
aas
xchg
adc
sub
pop
stc
lahf
dec
out
addr16
adc
xchg
inc
pop
rcl
test
cs
dec
xor
into
pop
xor
cmc
aas
shl
cmp
aad
xchg
mov
test
aam
fdivr
or
test
dec
mov
sbb
nop
cs
cmp
mov
dec
xchg
xchg
scas
test
in
mov
daa
pop
retf
sub
jge
dec
pop
cmp
movs
mov
xchg
test
push
ins
dec
dec
fist
pop
test
(bad)
mov
mov
neg
pop
mov
mov
cmp
(bad)
lock
lods
cmp
xchg
test
jo
sbb
push
xchg
mov
mov
sbb
push
jb
pop
(bad)
cli
add
cmps
std
lods
adc
sbb
sbb
sbb
test
mov
or
push
movs
pop
addr16
out
jb
inc
mov
jne
nop
jno
pushf
dec
dec
pop
cmp
and
or
inc
add
mov
mov
push
ins
pop
add
icebp
xor
or
push
sub
lods
adc
(bad)
test
(bad)
inc
sub
loopne
sub
xor
push
rol
push
xchg
mov
push
cmps
and
push
push
pusha
push
inc
lock
aad
aas
je
ins
push
pop
mov
cmp
pop
adc
or
ins
add
sbb
cmp
jle
mov
sub
not
jb
dec
xor
adc
xor
jbe
rol
fisubr
and
push
fs
popa
push
xchg
xchg
shl
lahf
lods
dec
dec
dec
jno
pushf
pop
push
(bad)
xchg
jae
and
stc
pop
mov
cwde
shl
ds
jl
sbb
push
adc
adc
lock
and
cmp
not
pop
xor
dec
jmp
test
retf
sub
jmp
int
retf
pop
js
add
daa
ror
dec
mov
push
hlt
jo
mov
mov
pop
dec
add
out
nop
into
inc
cmp
add
inc
inc
mov
mov
fistp
push
adc
fs
je
or
stos
ret
sahf
iret
and
mov
retf
loop
sub
and
adc
out
cmp
mov
push
cmps
mov
adc
dec
xchg
aad
or
jge
popa
pop
(bad)
pop
sbb
adc
xchg
adc
or
mov
push
add
mov
dec
das
out
sbb
adc
push
dec
add
in
sub
pop
dec
sbb
xchg
fist
push
mov
daa
sbb
dec
cmp
push
sbb
sub
rcl
xchg
sbb
cmps
aad
xchg
fmul
neg
dec
test
repz
popf
cmp
mov
jmp
imul
call
outs
in
or
sti
mov
pushf
pop
fistp
cmp
bound
cmp
aas
ja
cmps
mov
jmp
aas
mov
mov
inc
icebp
xchg
or
xchg
retf
jnp
xor
out
add
add
movs
cdq
(bad)
push
iret
(bad)
mov
stc
pop
sbb
xchg
mov
and
clc
inc
pop
pop
imul
es
imul
pop
clc
mov
popa
inc
cmp
pop
fdiv
outs
ja
mov
pop
xor
popf
mov
pop
mov
inc
fild
ret
cmp
mov
sbb
pop
mov
push
in
mov
push
mov
adc
dec
mov
push
pushf
iret
and
outs
sub
mov
shr
cwde
xchg
xchg
(bad)
fld
add
cmp
ss
daa
test
cmc
call
adc
jmp
ins
xchg
push
pop
aas
xor
call
push
add
mov
arpl
(bad)
pop
mov
or
fidivr
or
xchg
and
or
movs
add
pop
push
or
hlt
xor
icebp
or
fild
(bad)
stos
fwait
push
sub
sub
pop
jge
clc
jns
movs
daa
mov
sub
out
cli
daa
or
cmp
lea
repz
outs
mov
popf
inc
movs
adc
repnz
jmp
mov
add
add
push
stos
jg
aam
dec
mov
xor
adc
mov
xchg
mov
or
div
shl
dec
mov
sbb
or
dec
test
inc
jae
retf
push
add
sbb
pop
or
out
fcom
mov
pop
sub
jo
(bad)
cs
mov
fist
retf
inc
jecxz
adc
ins
popf
add
push
and
fidiv
pop
cmps
outs
sub
push
or
daa
mov
pop
xchg
and
dec
mov
mov
jle
aas
xchg
or
iret
int
jb
aaa
rcr
cmc
xchg
idiv
dec
mov
xor
ins
sub
aaa
inc
repz
fist
ret
jg
repnz
test
mov
stos
xor
fsubrp
inc
out
jns
jnp
stc
pusha
add
int3
test
jmp
js
adc
fcmovnbe
retf
sub
mov
and
inc
push
dec
retf
fucom
jge
mov
int
jmp
pop
sub
std
in
int3
shl
fidiv
cwde
dec
cmp
cmps
and
dec
push
jg
rol
push
add
jns
or
in
(bad)
mov
sub
or
iret
mov
or
sbb
popa
mov
imul
push
icebp
sbb
bswap
js
leave
std
mov
(bad)
retf
sub
(bad)
cmp
mov
cwde
sub
imul
push
retf
or
clc
push
imul
das
mov
test
iret
test
in
mov
pop
mov
scas
stos
add
imul
pop
loope
stos
inc
(bad)
push
or
test
push
cmp
sahf
and
das
mov
push
sub
jb
shl
xchg
and
pcmpeqw
fst
pop
jb
xchg
(bad)
mov
pop
out
jnp
cmp
out
(bad)
idiv
inc
push
repz
rol
add
xchg
adc
mov
mov
cmp
lds
stos
adc
retf
sbb
lock
mov
inc
sbb
aas
xor
push
out
pop
push
mov
xchg
and
lar
loop
loopne
data16
dec
xchg
jl
mov
push
rcl
aam
sbb
sbb
xchg
adc
push
sbb
fs
and
das
(bad)
push
cmp
mov
outs
pop
mov
popa
int3
dec
in
cmp
fist
add
gs
retf
ret
int
mov
pop
scas
ja
xor
sub
add
ins
mov
iret
jle
xor
xor
push
adc
inc
sbb
imul
jno
pop
or
dec
cmp
hlt
push
mov
fst
mov
(bad)
jnp
std
ins
jg
imul
push
push
cmp
pusha
hlt
nop
mov
xor
fsub
mov
out
xor
shr
mov
lahf
fwait
jbe
push
scas
xor
jbe
lahf
jmp
push
imul
add
mov
aam
xchg
sbb
xor
std
test
shr
test
(bad)
in
mov
retf
loopne
cvtdq2ps
test
mov
ds
loope
popa
enter
pop
fst
jbe
jle
in
mov
xchg
xor
xlat
pop
in
stc
int3
hlt
outs
mov
enter
xchg
push
cmovo
sub
movs
mov
aas
shr
mov
push
daa
jnp
mov
pop
(bad)
mov
(bad)
iret
cmc
push
mov
les
imul
xor
jns
xor
push
arpl
movs
mov
fsub
test
inc
test
adc
sub
addr16
mov
bswap
scas
in
cmps
push
or
and
pop
repz
mov
xchg
sbb
mov
jns
mov
or
sbb
jmp
pop
test
fisubr
int3
scas
test
jb
dec
dec
pop
mov
loopne
scas
pop
adc
mul
dec
test
pop
mov
xor
push
test
mov
jae
in
(bad)
xchg
es
jg
jno
sbb
ds
in
push
adc
cmc
daa
mov
out
ret
xor
push
mov
or
outs
mov
xor
sub
dec
or
stos
xchg
retf
out
sti
std
test
push
les
(bad)
mov
stc
dec
mov
xchg
inc
cmp
fwait
mov
call
cmp
test
arpl
jb
ss
test
add
fcmovnb
inc
sub
add
sub
dec
pop
inc
stos
pop
lock
jae
and
add
ins
jns
mov
not
repz
jno
(bad)
repz
aaa
outs
sbb
dec
ss
ins
add
cdq
data16
jno
cbw
leave
test
outs
add
call
and
jg
sbb
ds
stos
jnp
push
imul
lock
daa
stc
ins
mov
push
sar
in
add
iret
es
sub
daa
fld
stos
jmp
sub
outs
cmp
dec
push
fs
push
xor
lds
fs
pusha
(bad)
movs
pop
repz
xor
and
mov
(bad)
mov
mov
sub
cmp
add
pushf
cmp
dec
outs
cmps
hlt
addr16
add
xor
loope
outs
test
fwait
push
in
jg
inc
xchg
or
mov
push
lea
fmul
ja
sahf
sti
aad
bound
pop
or
out
adc
or
mov
adc
rcr
and
test
xchg
cmp
retf
push
jl
ins
scas
sub
xchg
mov
movs
mov
and
add
or
dec
fwait
mov
pop
das
out
dec
sub
inc
fcomp
adc
aaa
addr16
out
sub
imul
adc
inc
inc
pop
arpl
adc
jbe
loopne
fcomp
xor
inc
mov
push
movs
cmc
cmp
fwait
xor
scas
shl
inc
jl
lods
jmp
fistp
inc
les
ss
pop
xor
mov
push
jno
xor
rcr
movs
adc
into
ja
mov
jg
in
loope
ja
rcl
xchg
xor
jae
mov
stos
aad
(bad)
pop
xchg
sub
dec
cs
cmc
sub
mov
and
fsub
jmp
inc
dec
mov
call
push
div
iret
mov
dec
retf
mov
and
or
push
mov
mov
jno
fadd
and
stos
sbb
jecxz
(bad)
push
rcl
cmp
dec
cmp
push
shl
dec
pusha
mov
js
aam
int
stc
aam
add
sub
(bad)
in
mov
or
lods
lds
jmp
stos
hlt
mov
or
rol
popa
icebp
cmp
in
xor
jne
stos
ret
(bad)
test
mov
ds
adc
xlat
fcomip
jb
js
ins
aam
pop
sbb
push
stos
(bad)
iret
mov
xlat
(bad)
es
dec
and
call
ds
call
enter
pop
or
es
xchg
cmp
jecxz
mov
mov
mov
hlt
rol
popa
pop
retf
inc
push
pop
xor
inc
jg
sub
dec
loopne
pop
fyl2xp1
fwait
push
out
jno
or
iret
push
mov
jns
neg
aam
cmp
lods
mov
leave
ror
mov
shl
sub
mov
xchg
out
mov
push
outs
jl
mov
neg
cs
popa
aas
jmp
and
cwde
repz
popa
scas
int3
xor
iret
or
mov
pushf
(bad)
jnp
outs
and
dec
or
push
cmp
add
test
cmp
inc
jp
or
jnp
pop
ins
in
and
inc
mov
outs
xor
out
mov
inc
xchg
inc
imul
aad
scas
add
(bad)
inc
cmp
xor
or
jp
push
enter
mov
test
call
xor
jle
add
adc
mov
pop
repz
test
mov
cmp
and
xchg
inc
out
push
dec
push
and
pop
mov
movs
sbb
xor
and
(bad)
sbb
dec
cs
mov
fild
push
push
js
call
stos
jns
in
cmps
std
repz
fcom
dec
into
aad
mov
mov
jns
dec
dec
stos
adc
xor
and
or
jmp
fld
outs
add
mov
add
gs
jle
xor
pop
pop
sbb
add
add
shl
dec
jmp
add
xor
cmp
add
hlt
(bad)
sbb
xchg
sub
(bad)
rcr
mov
es
scas
push
and
addr16
fld
movs
dec
in
xor
and
jo
jl
lea
leave
xor
(bad)
not
add
leave
or
inc
sar
gs
jae
push
dec
imul
sbb
push
add
scas
iret
mov
mov
push
inc
xchg
pop
dec
jmp
ret
push
add
fcmovnb
inc
dec
mov
sub
mov
js
dec
dec
cmp
mov
fisttp
arpl
xchg
shl
(bad)
xchg
mov
xor
retf
push
test
out
mov
mov
pushf
jecxz
aad
mov
xchg
and
or
dec
in
jg
(bad)
sub
test
mov
jg
aad
mov
fwait
aaa
adc
sub
movs
push
es
dec
outs
jmp
stos
imul
ror
shr
mov
mov
pop
pop
das
push
xchg
imul
push
jbe
daa
in
test
adc
aad
jno
cs
dec
or
jg
fisubr
xchg
lahf
call
mov
jp
jb
fsubr
loop
ja
jne
or
call
push
retf
mov
neg
test
sub
and
lea
ror
pop
shl
or
mov
add
sbb
sbb
inc
es
push
fimul
test
sub
cli
push
js
pusha
xor
xchg
jp
mov
stos
push
inc
add
mov
test
mov
pop
sub
mov
xchg
pop
and
xchg
je
jno
out
jb
pop
push
cmps
sbb
aaa
jns
cmp
add
push
xor
cs
(bad)
call
stos
or
mov
dec
ds
(bad)
xchg
xor
lods
in
aam
fisubr
ss
push
mov
jge
scas
jle
ret
ret
leave
inc
xchg
enter
mov
test
mov
movs
pop
mov
push
call
icebp
inc
mov
adc
div
repz
pusha
jp
cli
push
xor
dec
lods
test
popa
aaa
div
sub
js
scas
cmps
jae
cdq
ret
mov
das
xchg
ror
stos
data16
xchg
bound
clc
out
mov
jnp
and
call
mov
or
push
add
imul
mov
mov
out
lds
cli
shr
push
test
pop
pop
push
add
sub
cdq
or
pop
ja
jno
ja
fld
test
out
imul
mov
xchg
mov
mov
adc
test
iret
cmps
scas
imul
xor
repz
mov
mov
mov
push
xchg
mov
int3
dec
sub
fwait
pop
sbb
jge
out
adc
movs
xchg
addr16
jbe
inc
mov
(bad)
pop
mov
mov
pop
mov
fucomi
aas
xchg
adc
push
jmp
jg
pop
ret
sub
jno
xchg
in
(bad)
nop
ds
jne
hlt
push
retf
aaa
mov
mov
shl
inc
fmul
aam
pop
lea
cdq
sub
scas
cli
mov
sbb
je
loopne
test
or
mov
js
ret
call
retw
jbe
or
(bad)
pop
in
jl
or
ja
test
clc
sub
pop
cmp
push
dec
rcl
inc
inc
jmp
sbb
sub
mov
dec
or
imul
push
out
xchg
xchg
clc
(bad)
push
ss
test
les
iret
or
out
mov
add
add
push
dec
cmp
adc
dec
test
inc
es
mov
inc
rcr
xor
push
cli
jne
iret
es
jmp
fmul
lods
xchg
retf
dec
pop
push
mov
dec
adc
in
mov
test
(bad)
jg
xchg
jb
pop
add
and
pop
pop
pop
dec
pop
sub
mov
mov
xor
mov
call
pop
repnz
add
push
or
cwde
xchg
cmps
sub
xchg
dec
(bad)
xlat
xchg
dec
sub
arpl
sti
aaa
mov
fisttp
fstp
retf
int3
mov
pop
mov
cmp
or
sub
scas
cmps
xchg
stc
inc
pushf
out
ins
push
aaa
cmp
call
xor
scas
cs
gs
mov
fwait
call
aam
retf
mov
sub
fs
jl
sbb
and
(bad)
jl
ret
xchg
retf
imul
aas
inc
xor
pushf
test
pusha
add
inc
aas
or
mov
ja
fldenv
or
cmc
jb
pop
xor
sub
retf
sbb
or
jnp
sahf
int3
push
js
es
fisubr
jmp
inc
scas
mov
or
ret
cmp
leave
lds
loope
xor
xchg
mov
rcr
inc
dec
add
ins
daa
jb
pop
add
loopne
cmp
and
dec
test
inc
sub
(bad)
ds
pusha
lahf
mov
and
retf
nop
mov
dec
xchg
sbb
jp
icebp
outs
xor
leave
std
test
or
sbb
pop
addr16
jp
hlt
and
lea
and
xchg
jp
lods
adc
mov
push
xchg
test
cs
dec
and
icebp
ret
push
xchg
fs
mov
fisttp
pop
data16
jno
dec
cdq
pop
mov
dec
cwde
jmp
scas
ret
mov
inc
push
aam
pop
sbb
(bad)
cmp
push
jo
jb
and
mov
call
add
into
push
pop
mov
dec
push
lock
mov
and
leave
rcl
or
pop
iret
out
ds
mov
in
and
mov
push
mov
jnp
or
or
or
daa
lods
lock
cmp
mov
lods
adc
pop
sbb
mov
cs
mov
jae
mov
bound
pop
pop
add
push
inc
xchg
sar
inc
out
addr16
adc
mov
(bad)
ror
push
and
cmp
sbb
xor
xchg
test
out
(bad)
mov
stos
mov
push
sub
pop
loop
sub
dec
sti
pop
mov
fdiv
fcomp
pop
adc
imul
jne
cli
outs
mov
fsub
or
push
cmp
mov
das
(bad)
jae
mov
xchg
inc
push
pop
jl
jb
in
test
clc
dec
jmp
jp
mov
adc
mov
sub
or
lods
pop
cli
mov
aas
mov
dec
arpl
cmps
pop
ror
inc
sub
push
jae
cmp
mov
es
add
push
fimul
jg
stos
sub
pop
jne
mov
jae
movs
xchg
xor
test
jp
inc
xchg
adc
loope
mov
popa
scas
push
lds
sbb
pop
dec
cmp
mov
scas
mov
or
cwde
fisub
lahf
jle
clc
or
retf
jmp
sub
adc
cwde
daa
pop
xchg
sub
ret
cld
add
lods
bound
retf
mov
ror
fdivr
hlt
mov
add
test
lods
pop
nop
into
mov
lock
addr16
push
or
mov
loopne
xchg
inc
sbb
cmc
lds
xchg
mov
xchg
int3
and
out
push
and
ret
push
mov
xchg
inc
std
mov
sbb
inc
pop
add
and
pusha
ins
imul
out
jno
add
loopne
and
mov
call
sub
dec
pop
inc
mov
dec
xchg
daa
in
lods
sub
inc
stos
enter
sbb
lods
bound
fisub
and
xor
cmp
or
push
cmp
cmp
jno
in
dec
add
dec
imul
mov
movs
hlt
cmp
dec
aam
pushf
or
movs
pop
mov
aad
xchg
mov
and
push
cmc
in
or
repnz
xlat
inc
inc
dec
xor
vmwrite
push
stos
sub
adc
inc
push
dec
adc
xlat
dec
push
(bad)
jo
mov
pop
xlat
daa
stos
retf
mov
add
outs
adc
xchg
retf
test
lock
cmc
inc
dec
pop
or
inc
jecxz
xor
test
or
popa
pop
cmp
aaa
pop
xor
fs
cwde
test
loop
test
sbb
rcl
or
cmps
les
fst
mov
mov
leave
dec
push
jge
hlt
call
out
scas
fsub
and
loopne
push
add
mov
push
test
mov
sbb
imul
mov
lds
scas
sbb
sub
cdq
dec
dec
xor
jg
xchg
(bad)
imul
and
jecxz
rol
mov
in
inc
sub
test
rol
mov
sti
fldenv
xor
cdq
retf
sub
push
cmp
jmp
in
or
mov
xor
sub
or
xchg
mov
cmps
(bad)
xchg
stc
mov
lahf
rol
lock
nop
je
test
sub
inc
inc
add
dec
cwde
inc
adc
lods
push
popa
inc
jno
(bad)
nop
cmp
pop
pop
cwde
aaa
or
(bad)
repz
test
fsubr
jl
int3
jle
xchg
mov
loop
inc
sub
dec
inc
iret
ret
xchg
push
dec
inc
dec
mov
add
fwait
icebp
sub
into
fidiv
out
pop
add
les
lock
add
xchg
loop
mov
(bad)
dec
int
xchg
mov
add
(bad)
cld
mov
not
xchg
mov
add
inc
cld
jmp
mov
shr
push
in
ds
clc
sar
lock
fdiv
fsub
lea
mov
scas
ins
pusha
or
sbb
fld
inc
mov
add
cmp
stos
cld
mov
test
jle
mov
into
(bad)
mov
cmp
repz
(bad)
scas
sbb
mov
or
push
mov
dec
popa
ja
jns
xor
in
xchg
push
scas
mov
dec
jmp
rol
jmp
pop
(bad)
pop
and
push
lahf
sub
ss
into
add
data16
sub
(bad)
outs
and
sbb
loop
pop
adc
stc
mov
sti
and
and
pop
popa
popf
push
repnz
sub
xchg
leave
ror
jbe
popa
mov
mov
out
inc
cmp
test
sar
add
sbb
push
test
pushf
arpl
adc
xchg
cwde
xor
add
cmp
or
fisttp
inc
cmp
lock
mov
repz
nop
out
cmps
push
jg
shl
gs
mov
adc
test
push
(bad)
(bad)
das
stc
jp
fmul
jecxz
int3
stc
add
cmps
icebp
adc
add
inc
imul
ret
arpl
sbb
mov
push
cli
jmp
test
pop
pop
pop
xor
or
xchg
daa
(bad)
dec
inc
cmp
ds
cmps
mov
pop
loop
mov
stos
mov
dec
or
lea
add
pushf
retf
sbb
xor
sbb
out
repz
adc
retf
in
dec
repnz
test
jmp
inc
xchg
mul
mov
ret
out
pop
cmp
pop
int
ret
push
push
and
push
or
or
gs
push
add
rol
div
pop
enter
xor
and
jge
inc
dec
ins
pop
sub
call
xchg
mov
lds
test
xor
lds
add
cmps
inc
jmp
dec
push
imul
cmp
sar
(bad)
xchg
sub
scas
in
in
je
dec
cmp
add
retf
aas
ins
(bad)
jp
into
pop
das
ins
xchg
push
aam
sub
das
loopne
int3
cmp
mov
adc
arpl
mov
adc
es
mov
adc
xor
aad
mov
fwait
stos
pop
pusha
sbb
mov
std
adc
pushf
call
and
and
push
push
pop
xchg
addr16
mov
pop
xor
xor
pcmpeqd
jl
pop
mov
stos
clc
and
mov
rcr
mov
fs
lahf
imul
pop
push
mov
hlt
mov
add
mov
in
jb
add
bound
dec
mov
shl
mov
xchg
imul
loopne
adc
std
aas
test
psllw
repnz
push
(bad)
and
mov
lods
imul
icebp
stos
leave
mov
jnp
lahf
adc
sbb
add
or
repz
out
cmps
cld
sbb
call
jmp
or
mov
lods
data16
jbe
dec
jge
jae
jle
mov
and
les
jnp
test
and
retf
stc
adc
rcl
push
je
popf
mov
movs
test
sub
jbe
fwait
xor
add
pop
aaa
adc
imul
mov
sub
stos
stos
fsub
mov
pusha
std
and
fimul
enter
xchg
push
xchg
sbb
sbb
xor
ficom
lods
or
idiv
mov
in
or
push
or
jnp
retf
or
ficom
xchg
jge
xor
jle
cmps
add
rol
into
jmp
fimul
daa
inc
push
sbb
ins
dec
cmp
pop
sub
dec
sti
pop
nop
cmp
jns
inc
mov
fnsave
add
hlt
dec
enter
or
(bad)
xor
addr16
out
mov
dec
js
or
pop
(bad)
out
mov
repz
push
neg
xor
inc
sub
pop
fidiv
je
cmp
iret
icebp
test
xor
lods
sub
xchg
jnp
iret
(bad)
push
clc
fsubr
jle
sbb
popf
add
fisub
enter
dec
adc
loop
out
dec
icebp
or
div
xchg
or
mov
jno
push
xchg
mov
xor
push
mov
mov
or
xor
shl
and
jg
sbb
(bad)
imul
gs
mov
jmp
pop
xor
ss
sbb
sub
cld
pop
inc
inc
fist
or
mov
retf
retf
data16
call
jae
adc
rol
pop
aas
sbb
dec
nop
pop
cmp
leave
outs
xchg
repz
push
fist
mov
adc
pop
dec
xchg
shr
wrssd
hlt
jge
push
mov
test
mov
mov
dec
and
jp
je
enter
add
retf
int
pop
popa
xchg
loopne
fbstp
jle
cmps
sti
push
dec
dec
mov
mov
or
ror
jl
lods
and
xchg
addr16
lock
mov
inc
push
rol
aam
jnp
add
sub
popf
pop
mov
sub
and
in
pop
sub
and
inc
dec
inc
xchg
mov
or
std
mov
jg
pop
popf
or
adc
pop
ja
dec
ds
pop
pop
(bad)
out
jbe
loopne
sbb
and
adc
stos
int
push
repnz
mov
mov
and
sub
test
push
gs
popa
cmp
dec
pop
mov
mov
mov
sbb
push
pusha
imul
inc
movs
retf
aam
neg
out
cmp
es
(bad)
shl
sub
inc
inc
and
sbb
icebp
js
sti
push
inc
or
or
cmp
fmulp
(bad)
pop
dec
pop
inc
lods
inc
sahf
scas
pushf
and
pop
inc
(bad)
cli
das
je
pop
push
retf
pop
mov
rcr
imul
in
xlat
jmp
add
ror
mov
inc
xchg
addr16
mov
js
jae
test
dec
inc
jb
and
hlt
inc
jb
add
or
jp
dec
int
jl
(bad)
retf
leave
jp
mov
neg
stos
adc
adc
aam
and
push
jns
jnp
loope
scas
les
jg
rcr
adc
or
jmp
sub
fild
dec
cmp
cmc
sub
jp
mov
xchg
and
mov
fidivr
xchg
inc
imul
ret
fdiv
addr16
add
or
stos
fsub
dec
or
bound
adc
ss
mov
mov
mov
les
call
pop
push
xor
cld
jmp
fistp
sub
mov
xor
add
push
pop
add
daa
jp
push
mov
cmp
push
mov
xchg
or
dec
inc
hlt
sti
mov
mov
hlt
fld
(bad)
sar
test
push
call
sub
inc
pop
pcmpgtd
call
mov
push
shl
iret
lsl
jmp
xor
cs
mov
adc
(bad)
inc
xor
cmc
dec
dec
aas
cmp
xor
int3
sub
shl
push
dec
sub
neg
loope
dec
xor
shl
jp
mov
jl
mov
aas
sub
push
test
jae
mov
push
adc
adc
mov
movsx
inc
push
loope
push
push
sub
push
int3
jne
ror
push
mov
xchg
lock
stos
test
fdiv
jns
inc
jge
inc
fmul
push
xchg
add
mov
ins
je
nop
xchg
xor
pop
mov
sub
xchg
xchg
fwait
dec
push
add
mov
and
jns
call
out
xor
das
mov
cmp
xor
push
inc
fild
es
mov
xchg
jmp
jl
xor
or
cmp
add
and
or
jae
mov
cmps
fs
arpl
daa
add
sbb
popf
mov
(bad)
scas
mov
movs
add
push
add
and
xchg
icebp
not
or
jns
fsubr
xchg
enter
adc
mov
stc
ficomp
fdecstp
stos
mov
sbb
sub
pop
or
dec
xchg
dec
movs
adc
daa
push
push
iret
mov
retf
sbb
adc
jge
pop
mov
push
(bad)
lahf
push
test
inc
add
int3
jecxz
adc
mov
xchg
bound
test
jbe
dec
mov
fisubr
add
cdq
aaa
js
sbb
nop
sub
idiv
ret
or
and
jl
push
fmul
xchg
mov
jl
push
out
push
jecxz
xor
ret
enter
clc
(bad)
repnz
ds
iret
movs
push
repz
inc
inc
fisubr
dec
mov
cmps
aam
out
pop
or
hlt
add
jns
fbstp
add
in
add
mov
push
call
aas
mov
inc
xlat
jge
test
fs
lods
mov
cmc
dec
push
xchg
leave
jmp
ret
jnp
pop
mov
cmps
or
jge
cmp
push
(bad)
sub
cmp
xchg
(bad)
push
jmp
(bad)
jns
dec
in
xor
ins
mov
dec
xchg
rcl
inc
(bad)
sbb
inc
test
push
repz
jle
stos
lock
mov
push
inc
mov
jno
dec
je
es
xlat
add
ja
add
(bad)
test
pop
cwde
outs
rcl
push
iret
repz
outs
adc
dec
sub
fld
iret
inc
shl
sub
imul
cs
mov
hlt
pop
mov
ins
iret
imul
pushf
sbb
fidiv
mov
pop
nop
xchg
pop
jbe
mov
hlt
icebp
(bad)
push
mov
and
ret
sub
sbb
pop
mov
jns
or
in
loope
or
sbb
sti
xchg
add
cld
daa
and
mov
push
jg
sub
stos
inc
jmp
and
jno
jmp
cmp
sbb
nop
in
jne
or
dec
xor
push
push
inc
adc
fmul
adc
in
inc
lock
xchg
test
retf
div
inc
pop
jg
je
pop
ret
dec
imul
push
mov
mov
ja
add
lock
push
repz
fisttp
sub
clc
repnz
cmp
xor
and
cmp
cmp
fwait
pop
call
or
outs
xchg
rcr
imul
movs
das
stos
aaa
das
std
cmps
xchg
push
push
or
rol
sbb
call
je
(bad)
sub
lods
adc
sbb
sub
(bad)
pop
cmp
dec
fnstsw
pop
jl
xchg
add
scas
popa
inc
(bad)
and
int3
push
cs
cmc
test
test
(bad)
rcr
and
jo
loopne
mov
push
or
nop
jg
inc
inc
pop
test
push
add
cmp
mov
cmp
jo
ror
jb
mov
retf
add
inc
js
dec
bound
ret
(bad)
pop
shl
or
pop
sub
inc
or
lods
scas
in
and
or
retf
sbb
sub
xchg
ins
cwde
or
out
call
movs
mov
iret
or
dec
fidivr
and
mov
arpl
shl
scas
and
add
retf
and
cdq
and
pop
push
jnp
or
push
leave
nop
jne
add
sar
mov
cmps
pop
pop
mov
and
jno
popf
pop
movs
ret
fwait
push
pushf
ret
adc
lods
leave
loopne
dec
cld
lahf
out
data16
inc
cli
mov
xchg
cmp
mov
pop
mov
shr
mov
sbb
bound
pop
inc
fstp
cdq
sahf
jmp
sbb
push
leave
and
and
not
mov
adc
icebp
sar
inc
add
mov
or
jge
int3
and
add
dec
ins
loop
sti
leave
mov
fisttp
add
test
dec
xchg
sub
add
mov
das
popa
mov
cmps
or
mov
xor
add
sbb
mov
push
imul
imul
ficomp
stos
add
dec
dec
xchg
stos
ins
sti
sub
std
sub
mov
(bad)
inc
pop
mov
push
mov
mov
push
into
and
ror
sub
std
or
mov
ret
jp
ficom
retf
xchg
call
adc
ret
into
lock
add
xor
jns
inc
mov
push
or
mov
ss
jnp
sbb
and
dec
cmp
pop
push
loope
pop
lea
sbb
xor
inc
inc
movs
into
retf
xor
mov
or
adc
adc
loop
loope
or
enter
jb
mov
clc
and
lahf
test
sti
lds
rol
pusha
xchg
and
jns
shl
int
inc
mov
retf
sub
add
setg
ret
dec
xor
ds
mov
lods
dec
fld
inc
and
daa
mov
stos
and
inc
add
push
shr
imul
adc
push
xchg
dec
nop
das
loope
mov
cmovle
mov
mov
sub
inc
mov
and
addr16
stc
xchg
repz
loop
addr16
fcomi
aaa
or
je
or
mov
fadd
jmp
mov
push
add
cmc
movs
push
mov
dec
aaa
mov
mov
idiv
ins
xor
test
inc
pop
mov
call
mov
or
xor
or
jae
es
sti
not
daa
or
pop
loop
push
test
lahf
stos
mov
loopne
lods
jmp
stos
dec
sub
retf
xchg
addr16
inc
inc
xchg
je
xchg
pop
pop
push
fsubr
mov
imul
pop
gs
or
add
pusha
pusha
bound
stc
scas
aas
cmc
mov
sbb
add
mov
mov
dec
gs
or
sub
das
and
add
inc
mov
mov
aam
and
jne
push
imul
pop
push
jecxz
push
gs
sar
mov
cmp
imul
push
mov
add
add
scas
popa
movd
lock
dec
out
sbb
pop
pop
(bad)
icebp
inc
call
mov
outs
inc
mov
pop
dec
dec
(bad)
add
push
or
pop
pop
retf
and
push
pop
push
pop
push
mov
sti
push
shl
pop
test
adc
iret
pop
das
or
and
mov
lods
loopne
mov
daa
cmp
stos
(bad)
fwait
or
cdq
cwde
xchg
lock
jle
aad
dec
shl
in
aam
add
pop
jno
push
in
(bad)
cmp
fadd
jle
mov
sbb
cmp
addr16
les
push
sub
es
dec
xchg
addr16
mov
sub
jmp
les
pop
into
pop
mov
pop
mov
adc
xchg
fcom
dec
test
push
add
push
dec
jmp
mov
hlt
aam
pop
xchg
retf
jp
(bad)
repz
mov
outs
repnz
push
mov
dec
jo
out
add
mov
mov
clc
mov
test
jmp
loope
sti
lea
shr
lock
js
(bad)
mov
or
outs
inc
imul
mov
mov
enter
cmp
sub
push
pop
test
sub
test
mov
push
leave
je
mov
pop
jg
lods
mov
mov
xchg
loope
sbb
data16
addr16
clc
mov
push
fwait
fwait
or
ss
mov
enter
and
inc
(bad)
xor
popa
call
fmul
adc
test
sbb
jb
add
test
add
jmp
sbb
imul
icebp
push
mov
mov
push
mov
inc
hlt
repz
or
inc
pop
movs
xchg
outs
inc
jae
retf
dec
and
fistp
outs
inc
xchg
cli
icebp
mov
mov
sbb
rcr
cmovbe
pop
js
mov
iret
(bad)
imul
loopne
inc
das
mov
lock
mov
test
add
push
cmp
(bad)
lods
jae
push
or
inc
shl
test
fisttp
jg
mov
fild
cmp
mov
xchg
sbb
pop
lods
sbb
pusha
or
sbb
push
ret
movs
popa
fild
push
shl
add
xchg
push
(bad)
push
and
sub
sti
stc
test
jns
inc
popa
lahf
and
inc
add
cli
add
pop
loopne
push
mov
dec
cmp
mov
fld
not
test
rol
popf
dec
jns
sbb
sti
out
repnz
xchg
jno
push
nop
std
(bad)
add
push
xchg
sahf
mov
add
aaa
ror
in
cmc
sub
shr
sub
add
js
rol
and
sub
ins
inc
add
mov
inc
mov
xchg
addr16
jo
and
pop
xchg
shl
mov
in
sbb
leave
xlat
neg
addr16
cwde
or
lods
pop
sbb
mov
mov
(bad)
inc
sub
adc
push
dec
test
fdivp
imul
xchg
sahf
mov
push
mov
dec
jmp
mov
mov
rcr
jp
rcr
xchg
sub
outs
sub
ficomp
xor
mov
out
sub
cmp
mov
lods
xchg
lahf
repnz
loopne
sub
fsub
ficomp
pop
xor
jo
test
int3
test
sbb
mov
xchg
xchg
push
clc
arpl
mov
xor
cwde
test
xchg
or
xchg
loop
gs
xchg
ins
fcom
int
adc
adc
shl
aam
mov
fldenv
jmp
icebp
push
in
and
daa
xchg
sbb
fsubr
int
(bad)
dec
pop
inc
hlt
add
ja
scas
stos
mov
pop
fs
or
jb
xor
dec
stos
push
addr16
and
outs
pop
mov
mov
sbb
pop
test
sar
daa
aad
retf
int
or
mov
fwait
or
les
inc
test
ror
scas
mov
add
or
sub
nop
pushf
pop
inc
outs
mov
pusha
stc
jg
dec
ss
mov
inc
xor
add
mov
xor
push
int
fs
or
sbb
xor
sbb
leavew
sahf
inc
jns
clc
pushf
das
and
sbb
cmp
sub
adc
in
or
(bad)
mov
push
es
loopne
and
ins
icebp
imul
shl
cmp
mov
push
sub
mov
add
or
xlat
inc
scas
ins
pop
sti
aas
shl
rcl
call
rol
jnp
adc
xchg
cmp
ins
popf
sti
inc
aad
arpl
add
ds
or
lods
cwde
ins
sbb
and
sub
es
in
add
not
retf
jg
enter
dec
add
jb
scas
push
aaa
ins
cwde
in
sar
shr
dec
mov
fst
jne
xchg
out
outs
dec
push
sub
xlat
icebp
dec
xchg
pop
xchg
push
inc
std
jle
sbb
xchg
outs
aaa
(bad)
cmp
shl
and
retf
js
aad
add
imul
es
lock
lds
sub
sub
jmp
jbe
mov
jle
in
lods
retf
inc
hlt
popf
pop
ret
mov
stc
sbb
inc
inc
cmp
fnstenv
inc
push
jae
mov
ds
data16
cmp
push
sub
test
mov
aam
xor
push
je
mov
dec
jle
jp
xor
loopne
shr
int3
add
inc
sub
in
and
out
dec
cmp
test
test
pop
ret
cld
(bad)
sbb
arpl
ins
imul
clc
mov
xchg
fwait
loope
test
xor
arpl
cli
(bad)
push
test
ins
daa
or
dec
sub
cmp
pop
sbb
jle
pushf
xchg
pop
cmc
push
dec
test
fnstenv
stos
xchg
cli
(bad)
aaa
inc
mov
imul
jmp
xor
movs
cmp
mov
jg
inc
xor
mov
jl
aas
retf
mov
(bad)
lahf
das
and
or
popf
jmp
mov
inc
rcl
push
in
sub
mov
test
fistp
pop
jno
nop
in
cs
mov
xor
ret
inc
adc
cmp
addr16
mov
add
in
push
fnsave
pop
cmp
cmp
rcr
jmp
das
jge
dec
dec
sub
mov
cmc
mov
pop
je
pop
std
sti
imul
and
push
push
mov
hlt
sub
int3
call
repnz
push
pop
mov
sar
inc
mov
adc
add
or
push
nop
cmp
xor
xor
and
lock
mov
mov
or
dec
xchg
int3
(bad)
leave
inc
add
das
and
lds
icebp
cmp
clc
mov
and
cwde
icebp
adc
xor
sti
or
loop
cmp
jmp
ss
aas
fisub
in
push
nop
cmp
rcr
repnz
or
push
into
add
je
lea
xchg
test
adc
jmp
lds
nop
push
adc
and
sub
fs
fiadd
lods
xchg
out
lods
cmp
add
mov
xchg
int
pop
hlt
out
fdiv
(bad)
mov
ins
and
stos
mov
lods
ja
cmp
xchg
pmaddwd
bound
and
pop
mov
dec
movs
or
ror
pop
push
sbb
sbb
add
pop
jp
rol
lds
mov
pop
sub
dec
aas
aam
call
push
sbb
arpl
add
lahf
(bad)
nop
pop
add
into
mov
add
jns
imul
dec
xchg
scas
out
pop
ins
mov
fild
mov
pop
dec
call
or
sar
gs
data16
dec
adc
lods
outs
imul
push
pusha
push
imul
xchg
sub
add
ja
inc
inc
bound
cmp
mov
add
lock
push
cld
not
test
lahf
push
jge
test
js
mov
dec
xchg
shr
out
jbe
into
pop
mov
(bad)
pop
dec
mov
pop
xor
nop
cwde
dec
push
mov
push
sub
cmp
mov
outs
dec
mov
mov
mov
xchg
enter
jl
inc
add
out
lods
pop
test
outs
xchg
mov
jmp
mov
adc
xchg
in
jge
popf
push
sahf
mov
mov
inc
dec
retf
loop
xchg
mov
pop
xchg
test
test
jo
mov
ss
xchg
add
pop
test
push
mov
push
arpl
mov
es
and
loopne
xlat
sbb
test
ret
and
add
inc
imul
xor
push
fld
ja
outs
imul
jle
outs
cmp
shr
(bad)
sub
cmc
fsubr
inc
mov
jmp
jl
add
cmp
dec
dec
lods
test
mov
fwait
mov
xchg
jmp
mov
mov
jnp
lods
clc
call
mov
or
sub
aas
sub
sub
cmp
mov
add
mov
aad
mov
or
pusha
lea
pop
(bad)
push
loopne
int3
xor
jne
test
cmp
mov
sbb
adc
adc
lods
push
mov
fild
aam
fcmove
push
add
mov
test
scas
mov
mov
enter
or
mov
xor
dec
add
push
out
fdivr
sbb
push
in
aad
adc
xor
push
push
add
xor
test
sbb
outs
jmp
jnp
and
mov
push
mov
lods
pop
xor
aad
mov
or
inc
inc
fcomp
es
sar
inc
pop
mov
mov
(bad)
mov
cmp
or
xor
adc
cwde
movs
mov
mov
mov
cdq
ret
sub
rcr
jne
adc
inc
call
jne
fld
sbb
stos
in
adc
loopne
mov
cmp
icebp
nop
cli
arpl
mov
ja
pop
push
xchg
lar
stos
xor
and
movs
test
inc
xor
and
xchg
sub
pop
popf
and
xlat
dec
loopne
add
jmp
xor
add
ret
jo
cwde
xor
cmp
lods
pop
iret
out
and
test
push
mov
inc
(bad)
cmc
fsubr
jbe
and
ja
inc
dec
pop
loop
mul
xchg
jnp
ja
fild
das
jmp
mov
mov
push
inc
add
push
retf
gs
fist
mov
test
inc
sbb
aas
inc
push
in
lahf
leave
js
cmp
xor
ins
pop
adc
xchg
jmp
xchg
sbb
clc
call
shl
cmp
inc
inc
jle
adc
scas
std
jo
stos
(bad)
pop
stc
cmp
cdq
fbstp
mov
retf
ret
jno
sub
cmps
shr
add
mov
mov
ret
stos
(bad)
jnp
in
dec
es
push
push
push
mov
nop
jg
ret
pop
cmp
inc
sbb
enter
call
test
sahf
mov
pop
(bad)
sbb
inc
push
out
push
mov
jl
xchg
xor
adc
push
inc
ror
dec
mov
xlat
jg
mov
xchg
neg
lods
pop
jp
stos
add
mov
push
(bad)
outs
mov
pop
in
dec
jge
and
pop
sub
lahf
xchg
es
inc
(bad)
sub
fdivrp
neg
loope
call
cmps
scas
daa
xchg
inc
mov
enter
retf
push
mov
mov
nop
xor
pop
lods
mov
shr
inc
mov
lods
(bad)
ret
enter
mov
fnstenv
out
fist
int3
iret
daa
fld
cmp
sub
xchg
fsubrp
js
pop
xlat
cmps
shr
cmp
pop
mov
stos
jl
movs
push
stos
in
xchg
jbe
(bad)
push
cmp
mov
movs
aad
int3
sti
outs
ins
in
call
sub
sbb
dec
push
fsub
in
mov
cmp
imul
sti
and
pushf
js
shl
mov
cmp
fscale
push
push
mov
mov
dec
sub
and
mov
mov
xchg
dec
mov
iret
mov
aaa
popa
sbb
stc
lds
mov
or
cmps
dec
in
ret
jb
shl
or
loope
out
scas
je
or
fmul
add
add
arpl
or
add
(bad)
and
data16
cs
ds
sbb
loopne
mov
sbb
repz
bound
int3
jnp
out
adc
cli
mov
and
int
sbb
or
mov
dec
xor
xchg
add
push
mov
ret
push
xchg
mov
push
xchg
push
fbstp
sub
cmp
ret
ficomp
sti
sbb
movs
outs
sbb
push
loop
add
xor
push
imul
jl
cmps
stos
xor
push
mov
jbe
add
jmp
xchg
and
or
retf
pop
dec
clc
xor
retf
pop
mov
cmp
cdq
or
retf
nop
push
bound
dec
ins
movs
int
ror
dec
ja
dec
ss
ins
ss
mov
retf
imul
dec
push
xchg
leave
mov
push
pop
clc
int3
xchg
imul
add
inc
test
popa
sbb
test
add
mov
xchg
mov
adc
sbb
ficomp
add
aad
and
repnz
adc
cmovns
jmp
iret
dec
out
pop
ins
(bad)
pop
and
dec
sar
mov
mov
mov
add
aam
mov
pop
stc
clc
push
sbb
push
pop
xchg
xchg
push
sar
inc
stos
inc
push
push
imul
lock
xchg
mov
repnz
pushfw
xor
mov
xchg
pop
sbb
and
jo
test
fiadd
add
pusha
xchg
lea
lods
xor
inc
jecxz
js
retf
jcxz
cli
mov
leave
clc
push
loope
test
lds
ror
pop
call
jns
or
jnp
or
(bad)
mov
or
jmp
add
dec
lock
sbb
cmp
jg
loop
out
cmc
xor
pop
hlt
xor
dec
adc
sbb
and
mov
sub
mov
sub
bound
shr
jb
sbb
test
stc
test
or
daa
fstp
jb
xchg
lods
push
ins
mov
push
fwait
push
ss
es
jo
je
mov
sbb
dec
mov
dec
test
push
lods
es
cmp
cmp
add
xchg
outs
xor
cmps
sub
sar
xor
cmp
test
inc
jno
dec
jl
aam
je
push
(bad)
pop
enter
xchg
popa
out
into
fsub
push
lea
sbb
add
and
enter
add
mov
xchg
pop
dec
stos
test
shl
mov
jb
call
add
cmc
pop
int
xchg
jle
shl
push
jno
xor
mov
test
fs
mov
push
xchg
mov
jle
xchg
into
add
jmp
in
adc
imul
cld
mov
adc
iret
jmp
sub
ds
xor
outs
lods
es
xchg
xchg
mov
jg
or
jne
push
push
mov
or
ja
and
jno
pop
sbb
sub
or
mov
enter
cmp
(bad)
mov
fadd
pop
ss
add
cmps
jmp
stos
xchg
and
cdq
pushf
(bad)
lock
push
stos
add
test
dec
cmps
add
push
outs
cmps
fidiv
add
mov
fcomp
addr16
mov
cs
pusha
pcmpgtd
mov
inc
imul
xchg
push
enter
aam
(bad)
cmp
mov
push
ss
fs
daa
daa
cs
cmp
pop
dec
jmp
mov
sub
dec
xchg
dec
push
inc
xchg
adc
sbb
mov
or
add
sub
shl
arpl
mov
xlat
push
iret
jae
xchg
in
xchg
dec
push
repz
(bad)
call
xor
stc
push
xor
and
mov
mov
adc
mov
mov
into
xchg
int3
fist
into
pop
push
outs
popf
imul
jge
jo
sbb
sub
and
pop
rcl
and
xchg
jmp
xor
daa
jg
dec
test
in
xchg
dec
or
not
movs
rcr
mov
loope
idiv
pop
sbb
fsub
dec
mov
sbb
cmp
add
xchg
imul
pop
mov
movs
jl
rcl
pusha
jge
fisubr
sub
add
sub
call
jnp
mov
scas
cmps
add
xchg
push
sbb
xor
call
repnz
push
xor
mov
pop
fstp
ins
mov
imul
cwde
pop
and
retf
shl
fstp
or
xchg
mov
xchg
clc
das
aad
and
movs
jge
mov
sbb
dec
in
mov
sahf
jnp
mov
xor
div
push
mov
pop
xor
fldenv
cmp
mov
scas
sub
push
stos
push
pop
xchg
je
inc
xor
scas
es
sub
cmps
fwait
mov
ds
sahf
scas
xor
cmp
mov
xor
xchg
dec
fisub
or
out
xlat
loope
pop
out
adc
adc
add
push
jb
into
sub
mov
aam
int3
push
es
es
and
push
and
mov
inc
jo
sbb
mov
dec
ss
scas
test
popa
mov
push
xchg
es
das
rol
ss
push
aaa
push
ss
mov
and
jmp
mov
mov
xor
and
cmp
sub
jne
fwait
shl
gs
movs
mov
pop
repz
jmp
or
les
xor
add
(bad)
cmp
icebp
clc
inc
cwde
es
int3
mov
pop
mov
push
enter
inc
cmps
test
or
mov
loope
pop
sahf
aaa
pop
pop
mov
xor
cmp
pop
and
js
sub
mov
mov
fistp
shl
dec
dec
cmp
mov
add
mov
pusha
test
pop
sbb
idiv
jb
imul
mov
push
mov
pop
xor
sub
pusha
and
sub
sbb
ficom
xchg
movs
dec
jge
dec
cld
movs
push
repnz
daa
lods
sbb
arpl
sub
jae
rcl
push
cld
dec
mov
pop
mov
lock
xor
or
mov
mov
ds
outs
sub
outs
enter
sub
xor
stos
jmp
outs
jne
inc
xchg
rcl
loopne
clc
jne
in
mov
call
push
outs
jne
mov
jg
repz
(bad)
test
pusha
es
inc
jne
adc
xor
push
bswap
jmp
ffreep
fidivr
mov
jnp
dec
icebp
xor
pop
mov
mov
xchg
cli
arpl
mov
mov
xchg
xchg
push
pop
add
leave
inc
cmp
sbb
sahf
cmps
cmp
adc
sub
xlat
out
sahf
rcl
sub
inc
data16
popa
mov
push
dec
sub
sti
icebp
xor
mov
aad
xor
dec
and
shr
cdq
jle
sub
add
enter
adc
cmp
dec
pop
ret
inc
cdq
lods
imul
push
push
xor
dec
jo
push
lds
mov
and
mul
add
mov
cmp
repz
mov
mov
mov
ja
nop
cs
or
push
fdivr
std
xlat
mov
scas
outs
xchg
js
inc
repnz
fwait
cmp
and
add
mov
dec
fwait
aad
rcl
inc
pop
mov
sbb
push
fmul
imul
adc
lods
scas
lods
cmps
outs
les
mov
push
mov
imul
xor
out
lods
xor
push
jnp
retf
ss
out
and
stc
pusha
xchg
push
inc
in
push
xchg
push
aas
sbb
(bad)
int3
in
movs
or
retf
pop
xchg
outs
ror
aam
sub
aaa
out
pop
jp
iret
sub
rcr
and
fdiv
sbb
xor
xchg
cmp
push
mov
xchg
lods
push
(bad)
sbb
shl
mov
in
mov
scas
addr16
jo
popa
test
and
sub
imul
lea
stos
bound
not
fwait
out
sub
shl
inc
mov
pop
lock
sbb
mov
ret
retf
pusha
xor
retf
sbb
aas
movs
cli
inc
mov
popf
dec
mov
push
push
(bad)
jns
outs
scas
daa
xchg
dec
sub
jg
jns
mov
cmp
into
mov
add
mov
pop
cld
xor
cmps
movs
xchg
sub
sub
sbb
mov
call
pop
push
pop
rol
icebp
mov
inc
repz
sub
cmp
lock
in
inc
cli
cmps
jl
xchg
or
into
xchg
jbe
shr
fnstenv
inc
ss
movs
addr16
cs
int3
xchg
inc
out
cmp
inc
xchg
xor
jmp
(bad)
xor
sti
dec
mov
mov
das
ins
(bad)
jmp
pop
inc
pushf
imul
rcr
in
jns
in
and
jnp
adc
imul
(bad)
jnp
int
lock
(bad)
sbb
sbb
inc
dec
push
int
daa
(bad)
jns
cmc
xor
or
(bad)
out
xor
imul
mov
aad
and
cmp
outs
pop
adc
push
xor
pop
mov
mov
lods
pextrw
adc
scas
jnp
scas
fld
adc
mov
scas
fimul
inc
ss
ror
mov
cli
jl
int
cmp
mov
js
clc
adc
xchg
sti
and
pop
jno
and
mov
jno
retf
cmps
movs
scas
mov
cs
sbb
push
pop
stos
pop
popa
ja
inc
sbb
xlat
ss
mov
mov
cmp
mov
xchg
and
pop
cld
das
sub
mov
inc
jmp
sub
sub
jg
retf
sahf
sub
js
cli
and
jle
pop
loop
js
hlt
sbb
xchg
imul
addr16
push
dec
scas
jle
inc
mov
add
out
inc
inc
mov
inc
aaa
call
ret
sbb
cdq
imul
inc
(bad)
enter
or
push
in
(bad)
icebp
sub
js
icebp
mov
aam
or
mov
adc
int3
pop
adc
imul
dec
mul
inc
ret
push
and
inc
daa
xchg
hlt
pop
or
dec
call
fcom
pop
sbb
dec
or
mov
(bad)
jne
repnz
xchg
test
jnp
add
ds
inc
scas
mov
repz
fdiv
add
pop
and
mov
mov
rcl
add
in
push
ins
push
xor
jno
cld
cmps
push
add
stc
push
loope
aas
ror
test
add
(bad)
loope
xchg
add
pop
add
fadd
in
(bad)
int3
xchg
int
in
cs
inc
dec
scas
repz
icebp
or
sbb
mov
jo
push
jae
iret
adc
cwde
mov
cmc
fild
lds
ins
test
mov
jge
jg
shl
add
mov
jno
retf
(bad)
pop
mov
adc
das
or
cmc
ret
out
cmps
pop
lock
sar
(bad)
or
xor
push
pop
icebp
lods
mov
ret
movs
jnp
lods
inc
jp
pop
push
jmp
mov
cs
pop
aam
fwait
cmc
jns
test
and
dec
sub
cmp
push
in
aad
xchg
adc
out
(bad)
fidiv
scas
scas
addr16
or
std
imul
mov
mov
push
or
dec
and
pop
and
sub
xchg
repnz
inc
xchg
fwait
aaa
rcl
inc
jnp
lea
add
xor
inc
int3
cdq
push
jns
add
cdq
call
inc
dec
xchg
ins
add
std
jns
cmp
push
retf
push
jg
(bad)
or
and
pop
xchg
aad
cmc
aaa
jmp
or
mov
jge
(bad)
js
ss
mov
test
dec
shr
dec
lods
ret
cmp
leave
push
imul
inc
rol
mov
fidiv
mov
push
in
dec
sub
jmp
xor
sub
cs
jecxz
xchg
scas
push
xchg
leave
in
xor
ret
pushf
dec
into
test
pop
mov
sbb
test
jb
inc
push
xor
sbb
dec
jl
adc
mov
pop
jo
dec
fstp
mov
add
and
ror
shr
jno
lahf
fnstsw
in
movs
cmp
mov
retf
sub
fild
or
scas
inc
movzx
daa
jmp
ja
adc
jmp
mov
sbb
mov
sbb
push
lds
test
outs
xlat
cmp
mov
dec
dec
lods
lods
int
sahf
mov
push
jns
cwde
test
pop
mov
out
test
lock
pop
pop
lods
add
dec
and
ja
adc
faddp
sub
stos
mov
xlat
xor
push
inc
sar
mov
aaa
add
aad
jmp
mov
sbb
jg
(bad)
ja
cmps
adc
sub
pop
add
ins
shr
pop
push
movs
retf
stos
mov
cld
sti
icebp
in
adc
cmp
push
jno
mov
in
mov
inc
mov
adc
sub
lds
mov
xlat
loopne
cmp
or
hlt
push
pop
and
mov
mov
pop
outs
push
bound
fsubrp
jno
test
xor
dec
(bad)
test
out
push
iret
pop
rol
iret
mul
dec
fisttp
mov
push
push
and
das
aad
arpl
sbb
stc
xor
mov
test
dec
loope
jbe
sti
shl
adc
sbb
mov
mov
das
mul
movs
lods
in
ud1
push
repnz
push
mov
test
mov
lea
iret
or
jmp
sahf
xor
out
stc
outs
ins
mov
retf
pushf
push
jecxz
not
dec
fsubr
pop
or
sbb
inc
adc
sahf
mov
dec
dec
inc
cmp
push
cmp
pop
ins
mov
xchg
lock
jle
(bad)
out
or
dec
outs
retf
mov
push
push
xchg
pop
mov
retf
sub
or
or
adc
and
ja
cmp
cmp
cdq
jmp
inc
sahf
int
into
idiv
dec
ror
dec
xor
xchg
cli
jg
push
enter
xchg
add
bound
sub
sub
push
or
mov
lock
add
out
and
cmp
fiadd
mov
mov
push
mov
dec
pop
cmp
inc
add
stos
add
add
in
int
inc
xchg
test
pop
cwde
mov
jecxz
and
popf
xchg
(bad)
mov
push
and
and
push
cmpxchg
sti
mov
popa
sbb
jg
pop
push
add
test
xor
scas
push
or
arpl
out
xor
jnp
mov
inc
ficom
jecxz
push
push
lds
(bad)
push
test
movs
mov
(bad)
xchg
ss
loope
std
pop
or
dec
jmp
sub
sub
push
pop
int
fild
push
xlat
int
cmp
pop
cli
enter
push
daa
sub
sti
xlat
js
test
test
push
dec
pop
inc
movs
(bad)
pop
test
inc
jp
sbb
das
xor
push
sti
jle
dec
mov
inc
adc
mov
xor
pop
mov
nop
xchg
jg
inc
mov
cmps
mov
dec
jp
hlt
aad
mov
add
shr
fistp
mov
dec
mov
(bad)
jl
push
ret
lock
inc
stc
outs
mov
pop
imul
fadd
adc
mov
pop
push
push
jns
jge
rcr
mov
ror
cli
test
or
xchg
dec
or
adc
cmp
and
loope
push
xor
lods
adc
dec
test
ins
mov
mov
shl
sbb
jg
dec
sub
je
(bad)
sbb
sbb
mov
neg
mov
jns
mov
cmp
jmp
pop
pop
mov
shr
stos
stos
mov
inc
jb
jns
aaa
das
adc
mov
and
mov
mov
add
daa
shl
cdq
sbb
dec
inc
push
stos
cli
stos
xor
mov
jg
leave
xchg
retf
inc
or
out
mov
std
rol
ds
repnz
push
cli
mov
or
nop
mov
sti
xchg
push
aaa
icebp
cmps
dec
inc
and
std
dec
jo
dec
and
sar
loopne
and
and
add
scas
inc
or
add
lods
test
in
push
out
inc
or
add
or
and
mov
cld
xor
enter
nop
movs
mov
cmps
in
sbb
out
daa
(bad)
add
dec
jae
rcr
cdq
shr
xchg
das
xchg
push
mov
xor
add
dec
in
mov
jns
mov
xchg
mov
imul
sub
movs
mov
rcl
out
xor
loop
sub
lds
mov
dec
imul
jmp
fs
fistp
mov
loope
pop
jmp
push
jg
(bad)
push
mov
sub
vlddqu
pop
xchg
leave
enter
addr16
pop
loopne
push
xor
mov
xchg
mov
lods
pop
inc
ja
jl
fidiv
pop
les
lods
call
push
jno
sbb
fisubr
dec
enter
sti
mov
dec
retf
cli
mov
and
xor
xor
out
and
ins
imul
cmp
xchg
dec
cmps
les
add
add
adc
repnz
(bad)
sub
dec
sbb
mov
pop
retfw
pop
scas
mov
cwde
push
mov
push
enter
mov
jecxz
inc
add
in
mul
adc
mov
sub
ss
scas
xor
(bad)
xchg
mov
mov
mov
sahf
push
out
cdq
aaa
test
push
jl
inc
stos
sub
and
add
rcl
add
jmp
sbb
and
jo
xchg
scas
rdtsc
aas
retf
mov
inc
xchg
mov
rol
pop
in
xor
ret
fnstenv
scas
sub
xor
mov
or
(bad)
adc
movs
sbb
movs
xor
cld
movs
jns
iret
push
add
out
xchg
jmp
addr16
mov
mov
popf
popf
sub
xchg
or
je
mov
add
pop
test
cmps
fdiv
jg
imul
fs
aaa
pushf
or
jmp
jp
lds
jns
jp
dec
mov
and
aas
xchg
fldcw
sub
repnz
clc
sub
push
popf
mov
adc
ins
mov
push
mov
adc
adc
popf
adc
sbb
enter
ss
inc
movlhps
sbb
push
imul
nop
inc
mov
pop
test
out
sbb
mov
or
dec
mov
dec
std
pop
xchg
adc
cmc
imul
fnstsw
outs
sbb
mov
test
mov
(bad)
cmp
lods
es
daa
test
jmp
bound
xchg
xchg
retf
xor
sub
mov
jmp
cld
mov
add
or
ds
sbb
ja
xor
mov
(bad)
push
xlat
and
test
sbb
repnz
mov
xchg
lods
dec
jns
xor
add
add
outs
pushf
imul
pop
pop
mov
mov
test
inc
imul
jmp
xchg
popa
idiv
mov
dec
cmp
push
test
pop
sti
sbb
dec
and
test
pop
pop
jmp
das
fwait
clc
mov
jb
iret
outs
into
or
adc
stc
loopne
ds
in
jmp
aas
cmps
pop
mov
add
in
jge
mov
lock
sbb
pop
and
mov
push
adc
mov
add
xchg
dec
inc
pop
imul
std
(bad)
(bad)
and
retf
fwait
xchg
pusha
sbb
cmp
out
test
jg
loope
es
xor
and
push
sbb
popa
pop
lahf
and
popa
retf
fs
mov
(bad)
xchg
bound
pop
sbb
bound
lsl
sub
xchg
jmp
stos
add
xor
push
icebp
shr
adc
aas
xchg
sub
mov
push
outs
sub
ror
scas
pop
bound
jecxz
sti
xor
mov
(bad)
imul
mov
in
and
ficomp
(bad)
les
fsub
cmp
dec
outs
test
mov
fisubr
lods
xchg
mov
dec
jg
jl
das
scas
jno
jg
int
jae
mov
and
cdq
ret
inc
xchg
iret
mov
ins
in
cdq
fst
push
or
xor
pushf
imul
cmps
outs
pop
jo
dec
sar
cmc
push
lds
mov
jne
loope
in
lea
ret
stc
xchg
adc
mov
icebp
mov
add
shl
repnz
xchg
cmp
test
je
and
inc
push
arpl
popf
shl
and
imul
pop
jns
nop
mov
push
jmp
sub
sbb
cmp
push
loopne
or
(bad)
out
in
dec
xchg
adc
dec
mov
les
xchg
fcmovu
cs
mov
adc
lods
movs
ins
sub
hlt
xor
push
pop
nop
mov
scas
mov
or
push
xor
adc
out
sub
xor
xor
xchg
mul
in
pop
lods
adc
loopne
loop
out
sbb
xchg
(bad)
cmc
lods
jmp
and
test
jmp
pusha
cld
sbb
sbb
scas
pop
mov
inc
push
cmp
out
or
shl
xchg
push
fdivr
dec
cmps
jae
jg
jmp
pop
fidiv
sbb
dec
icebp
dec
jo
cmp
push
inc
stc
xlat
or
pop
test
lods
mov
test
mov
stos
les
sbb
push
mov
push
mov
stc
lahf
sbb
mov
lock
(bad)
outs
sub
in
daa
test
and
push
xchg
mov
fmul
jg
mov
add
mov
jo
mov
sub
sbb
mov
add
push
repnz
sar
xchg
and
add
popf
pop
(bad)
sbb
pop
dec
or
mov
add
cmps
ds
add
mov
aaa
mov
jg
aad
shl
inc
pop
mov
call
fs
cmp
out
fwait
mov
jmp
mov
into
cmp
(bad)
fisttp
jo
mov
push
es
(bad)
retf
sub
and
out
adc
enter
sub
push
int3
xor
ret
dec
outs
mov
xchg
cmp
mov
nop
arpl
sbb
repz
in
add
or
fmulp
xchg
jno
jne
mov
mov
mov
dec
ret
fidiv
ins
adc
sbb
or
xor
pop
into
push
or
or
(bad)
mov
iret
pop
adc
mov
dec
jns
imul
cmp
in
mov
dec
cmp
cli
bound
sahf
(bad)
mov
jns
int3
rcl
add
and
jmp
xchg
sbb
dec
stos
out
mov
pop
xchg
add
int3
rol
inc
rol
push
repnz
cmp
mov
mov
jmp
jne
rcl
in
pop
sahf
cwde
daa
inc
retf
repz
xchg
mov
push
adc
lds
sbb
push
push
xlat
test
(bad)
aaa
pop
dec
cmp
mov
ror
sbb
jno
mov
xchg
add
cmp
adc
dec
outs
inc
push
jae
pop
xchg
fwait
(bad)
aas
dec
pop
or
retf
xchg
(bad)
outs
sbb
sub
push
xor
imul
xchg
out
cs
mov
xor
cmp
sub
rcl
mov
push
scas
jae
sbb
cmc
(bad)
stos
out
pop
call
jmp
inc
mov
jmp
xchg
inc
sub
pushf
jmp
sbb
sub
push
lods
ja
adc
and
jae
and
sar
test
mov
mov
jb
and
jl
sub
icebp
jns
ret
dec
inc
loope
pop
pop
jno
in
aas
addr16
aam
sbb
and
mov
outs
mov
and
sub
mov
xchg
cmp
xchg
dec
xchg
adc
sub
xchg
mov
inc
test
cs
lods
(bad)
add
in
inc
cs
dec
(bad)
fdivr
mov
imul
pusha
sub
cmps
jecxz
test
fwait
leave
xchg
mov
inc
cs
inc
in
enter
outs
sub
sahf
push
arpl
movs
jnp
outs
xor
mov
je
inc
cmps
sbb
mov
scas
cmp
cmp
jle
sbb
mov
cmps
shl
push
xor
aas
hlt
dec
pop
or
jb
inc
(bad)
fisttp
inc
mov
or
sbb
adc
test
test
sub
imul
pop
sbb
cs
mov
cmp
test
int
push
xor
sbb
sbb
or
ja
cwde
popf
test
stos
dec
mov
xlat
imul
push
push
dec
mov
mov
pushf
shl
loope
push
in
test
(bad)
cmc
mov
(bad)
adc
aaa
inc
inc
mov
hlt
pop
outs
add
leave
lds
xor
js
(bad)
jae
scas
adc
dec
pop
add
js
dec
ss
mov
and
pop
mov
pusha
imul
add
cmp
call
cli
repnz
into
and
in
jbe
mov
fimul
mov
es
jmp
pop
jae
mov
ins
push
push
fnstsw
jns
jmp
(bad)
mov
shl
aaa
cmp
or
pop
fist
inc
add
es
and
clc
pop
mov
sbb
xchg
mov
fwait
push
stc
in
sub
jns
inc
int
push
repnz
std
pop
sub
or
sbb
pop
jl
xchg
cmp
jecxz
aaa
pop
jns
jb
scas
pop
fstp
xor
inc
popa
pop
cli
sbb
pop
mov
test
sub
add
push
jp
dec
nop
adc
daa
test
xor
(bad)
repnz
pop
movs
cmps
mov
mov
xchg
int
ins
pusha
pusha
mov
pop
lahf
push
sub
inc
push
dec
mov
or
mov
dec
dec
out
add
or
add
push
fs
jg
out
dec
add
jmp
or
dec
pop
or
sub
jae
sahf
rcl
mov
sbb
mov
and
(bad)
clc
xor
aam
xchg
cmp
out
int
sub
mov
fnstenv
test
or
dec
lods
in
jae
sub
mov
push
dec
call
cli
pop
dec
out
jbe
add
add
jmp
dec
jnp
inc
stos
(bad)
test
idiv
(bad)
xchg
(bad)
jne
movs
ins
cmps
jmp
test
test
data16
xchg
or
in
sub
repnz
dec
ds
mov
pop
dec
loopne
or
dec
ret
movs
sub
scas
aam
pop
sub
arpl
xor
hlt
jb
pop
sbb
pop
dec
mov
pop
jno
sub
cmps
sub
dec
ror
out
imul
mov
rcr
cdq
jno
sbb
sbb
push
add
cld
dec
(bad)
je
leave
test
rol
rol
aad
or
xchg
outs
cdq
sbb
inc
mov
icebp
stos
mov
pop
mov
pop
pop
jg
stos
cmp
mov
pop
sar
stc
mov
mov
loop
imul
adc
gs
and
or
test
ins
jmp
pop
call
add
mov
cmp
xor
into
scas
cmp
pop
mov
xor
leave
cmp
pop
jmp
push
push
dec
push
sbb
dec
dec
std
sub
test
sub
xor
imul
xchg
mov
out
mov
jmp
imul
fist
nop
mov
in
rcl
adc
das
imul
dec
icebp
test
mov
cli
scas
inc
sbb
push
ss
jp
push
add
xchg
add
pop
and
bnd
pop
cmc
movs
ins
xor
lods
add
pop
test
push
rol
rol
je
lahf
xchg
or
xchg
add
pusha
(bad)
and
xchg
inc
sti
movs
push
stos
aaa
inc
into
push
mov
fwait
add
and
leave
xor
outs
jmp
cmc
dec
mov
sbb
push
cmps
movs
lods
fwait
int
cwde
aaa
mov
ret
stos
jmp
add
into
std
sub
dec
loop
mov
pop
and
or
ja
push
popa
out
mov
aas
loopne
gs
arpl
call
cmp
pop
rcl
and
mov
mov
mov
push
push
xchg
loope
mov
out
mov
fiadd
test
push
mov
lods
cmp
jg
and
mov
(bad)
out
mov
mov
das
cmp
dec
ret
popf
test
jb
mov
cwde
cmp
mov
call
(bad)
mov
add
jl
add
cmp
push
ret
cmp
jns
sub
mov
je
sub
out
dec
lds
xchg
jne
xor
aad
mov
push
or
pushf
pusha
dec
fmul
lea
adc
add
mov
mov
add
jl
js
loop
xchg
xchg
jmp
rcl
popf
fmul
retf
sub
xchg
cmp
lods
and
fisub
aaa
cmp
xchg
cld
test
out
dec
call
mov
mov
sar
cmp
dec
xchg
sbb
smsw
movs
shl
std
pushf
retf
pop
lds
hlt
ds
push
stos
arpl
movs
inc
sbb
cmps
es
inc
push
retf
xlat
retf
aam
jmp
or
xchg
and
std
mov
lds
jp
je
int3
fcomp
(bad)
sub
popf
std
jns
mov
iret
jb
add
ret
xchg
mov
scas
aas
xchg
push
push
pop
cvtdq2ps
pop
xor
adc
or
(bad)
ds
cld
imul
and
iret
pushf
xor
jbe
add
push
sbb
outs
push
jo
cmp
mov
pop
scas
sbb
out
and
xchg
out
xchg
mov
sbb
stc
leave
push
cld
jae
mov
addr16
clc
sbb
jb
cmp
ins
daa
outs
js
into
ret
out
cmp
cld
test
fmul
shl
inc
mov
xchg
scas
repz
xor
je
ds
je
push
mov
add
loopne
loope
jns
retf
fdiv
lods
push
pop
(bad)
sti
gs
repnz
cmp
cmps
shl
xchg
test
(bad)
movs
cmp
xchg
pop
sub
mov
andps
mov
aad
push
lea
sub
movs
xlat
cmc
adc
mov
adc
mov
dec
mov
dec
icebp
mov
not
test
mov
adc
pop
nop
int
mov
out
push
ja
fcom
fld
xor
dec
push
rcr
sub
dec
test
mov
enter
pop
(bad)
mov
sub
jae
addr16
scas
inc
cmc
add
or
xor
fcomip
loopne
icebp
cld
jle
xchg
dec
mov
lods
inc
in
call
das
fsub
and
push
push
ss
mov
jle
push
stos
stc
xchg
leave
not
retf
fdivr
cmp
retf
lock
mov
sub
inc
push
out
iret
cli
jo
jge
sbb
xor
ja
gs
neg
lods
xor
sbb
xchg
call
lock
out
push
into
es
into
std
addr16
clc
into
dec
adc
cdq
xchg
(bad)
and
ja
push
xchg
mov
in
mov
push
dec
pusha
or
aad
adc
add
push
cmp
movs
push
jge
rol
adc
mov
not
sub
sub
fwait
clc
call
xor
cmp
cld
inc
sar
stos
push
push
inc
pop
inc
lods
adc
xlat
dec
sbb
les
aas
jne
push
pop
jno
loopne
js
rcr
xchg
adc
push
aad
aad
xor
out
pop
dec
nop
gs
scas
inc
repnz
mov
(bad)
ror
fwait
icebp
or
rcr
rol
iret
imul
pop
mov
push
adc
inc
jno
pop
xchg
push
call
cld
movs
inc
sbb
shl
ins
and
push
xchg
rol
movs
daa
xlat
retf
sbb
or
(bad)
mov
pop
sar
pop
pop
rcl
js
or
pushf
fwait
cmp
mov
inc
xchg
arpl
dec
dec
dec
mov
pshufw
xchg
push
pusha
add
mov
mov
cmp
lods
stc
fwait
and
outs
stos
js
add
xchg
pop
rol
mov
lds
arpl
mov
cmps
movs
inc
scas
pop
push
stos
dec
(bad)
push
cmp
call
adc
adc
stc
cmc
dec
add
mov
mov
test
inc
(bad)
lods
xlat
pusha
lods
icebp
cmp
xchg
fs
xor
scas
mov
jae
or
sbb
std
sbb
mov
cmp
movs
mov
enter
ret
adc
xchg
sbb
clc
cvttps2pi
cmps
xchg
fdivp
out
(bad)
mov
clc
pop
ins
jnp
rol
push
xor
call
in
dec
cmps
rol
xchg
mov
mov
jns
jmp
xchg
js
cs
aaa
push
or
push
(bad)
xor
push
push
cmp
call
ins
lahf
jne
repnz
cwd
jae
cmp
push
push
adc
pop
not
add
xchg
xchg
test
pop
push
or
and
shl
jle
mov
retf
xchg
in
cli
adc
(bad)
arpl
(bad)
data16
loop
stos
movs
xchg
pop
test
or
cmps
jnp
jmp
sub
sbb
pop
jmp
jb
sub
xchg
pop
xor
or
retf
(bad)
stos
std
mov
lods
xchg
imul
add
inc
and
fcom
mov
in
mul
dec
mov
fisubr
sub
bound
mov
add
jp
jmp
aad
retf
push
das
lahf
xchg
(bad)
retf
inc
in
leave
or
xor
lds
and
push
cs
mov
cwde
rcl
stos
jmp
sbb
xor
push
xchg
retf
mov
repnz
pop
add
and
stc
sub
sub
in
pop
push
jns
dec
sbb
cmc
pop
iret
add
sbb
and
jmp
cmps
stos
add
xchg
push
xchg
shl
or
lea
test
fnstcw
mov
mov
(bad)
xchg
xchg
mov
dec
mov
mov
push
jb
fist
mov
stos
fisub
cli
icebp
dec
jae
inc
and
sbb
inc
lods
retf
adc
add
sbb
mov
sub
push
pop
xchg
loope
dec
push
and
aas
dec
mov
adc
ds
mov
stos
jbe
pusha
pop
popa
add
sbb
data16
imul
mov
jno
data16
inc
les
pop
xchg
sbb
push
ss
into
mov
jecxz
or
mov
or
or
mov
push
xchg
and
mov
out
xchg
push
loopne
add
cld
or
push
mov
cmp
int3
mov
scas
xor
cmps
test
pop
lahf
mov
dec
and
cs
jg
rcl
add
iret
scas
mov
sub
les
push
and
cld
pop
ret
sub
inc
in
dec
outs
fs
js
sub
mov
out
inc
in
rcr
push
xchg
out
xor
xchg
idiv
dec
imul
cmp
adc
sub
icebp
mov
movs
pusha
loope
test
push
(bad)
sbb
retf
push
xchg
xchg
ret
xor
and
(bad)
into
test
add
retf
mov
fnsave
jmp
lea
cmp
add
pushf
jl
add
xchg
imul
aas
in
xchg
push
fs
in
fiadd
hlt
mov
(bad)
inc
sbb
cmp
and
add
lock
add
jnp
cmp
push
cli
jno
test
test
ret
xlat
mov
retf
mov
and
mov
daa
jmp
xor
(bad)
cld
sbb
jae
das
jnp
jne
jno
inc
add
ins
xchg
test
inc
push
outs
dec
fmul
loopne
add
jae
mov
loop
call
ret
mov
adc
inc
je
mov
cmps
adc
scas
sar
xor
xor
rol
pop
stos
ins
push
mov
mov
repz
mov
cli
sub
mov
and
push
retf
shr
adc
mov
div
imul
sub
add
lods
popa
dec
add
sbb
jns
ret
out
pop
xchg
sbb
xlat
aaa
or
xchg
or
cmc
retf
sar
mov
pop
(bad)
adc
push
test
jp
mov
loope
cmps
cmp
test
xchg
cmc
adc
(bad)
jmp
iret
sti
and
(bad)
jnp
mov
cmp
movs
popa
pop
sbb
jmp
and
repnz
int3
les
daa
les
lds
out
(bad)
jmp
and
(bad)
neg
mov
jmp
or
mov
push
mov
dec
sbb
xor
sub
(bad)
addr16
push
add
mov
add
inc
jmp
push
add
and
outs
mov
push
and
inc
dec
sub
in
pop
std
sbb
jmp
mov
test
not
xlat
push
shl
in
or
push
xor
inc
movs
add
mov
inc
xor
jg
test
add
mov
xor
mov
jb
rcr
stos
dec
and
add
pop
out
mov
fwait
(bad)
mov
in
fucomp
jns
mov
test
repz
fisubr
push
ins
pusha
daa
lods
cmp
lea
push
dec
fcomp
es
(bad)
clc
fmul
dec
pop
and
xchg
adc
inc
ret
or
fadd
xchg
aas
sbb
cmp
shl
add
(bad)
(bad)
icebp
scas
scas
in
stos
mov
sub
cmp
and
sub
cmps
xchg
fwait
mov
jnp
in
imul
clc
inc
or
inc
imul
add
cli
lahf
rol
mov
sub
push
lahf
call
lahf
jnp
mov
add
cwde
rol
scas
xlat
outs
jae
and
cmp
sar
retf
mov
stc
test
mov
psubusw
(bad)
jmp
call
xchg
mov
jle
out
mov
sub
mov
in
in
jecxz
push
push
dec
scas
mov
dec
push
out
cmp
xchg
jp
les
mov
inc
(bad)
cmc
dec
das
fs
out
out
aas
add
cmps
and
mov
cmps
icebp
mov
ins
cmp
pop
sub
sar
ret
cld
jne
enter
push
gs
retf
xlat
icebp
push
das
mov
cli
cld
push
jge
(bad)
mov
adc
push
cld
(bad)
lods
lock
pop
lds
push
movaps
sub
push
xor
sub
outs
push
jg
and
neg
xchg
xor
dec
div
mov
addr16
idiv
mov
pop
or
inc
in
pop
ins
loopne
push
jecxz
into
or
jne
(bad)
adc
ret
adc
and
mov
movs
js
cmp
dec
xchg
cmp
test
xchg
mov
test
jecxz
shr
lds
fld
pushf
add
imul
or
in
(bad)
cmp
dec
push
scas
mov
mov
mov
mov
outs
push
xchg
movs
scas
in
nop
push
mov
cmp
inc
dec
cmps
xchg
pop
adc
in
(bad)
(bad)
dec
retf
lahf
into
test
mov
push
cs
jmp
scas
imul
xlat
scas
lods
addr16
inc
(bad)
jmp
xchg
mov
fdiv
xor
outs
ds
dec
xchg
pop
push
fisub
div
dec
outs
push
lahf
lea
fiadd
sahf
cmps
neg
add
inc
fnstsw
cmpxchg
ss
enter
xor
jl
cmp
das
movs
aaa
fs
push
cmp
lods
fdivr
mov
sub
mov
add
ret
adc
and
inc
pop
in
jnp
dec
ins
add
dec
dec
lahf
pop
cmp
jae
jg
cli
dec
scas
mov
mov
aaa
es
test
xchg
cmps
cli
xor
pop
sub
js
xor
pop
addr16
push
pop
sahf
outs
lock
and
adc
outs
loop
lea
sub
or
jmp
jecxz
jnp
stos
daa
cmp
or
ds
add
and
xor
out
dec
push
aam
rol
imul
mov
fisub
pushf
xor
psraw
pop
jnp
loopne
retf
pop
xchg
sti
xor
xchg
xchg
add
push
aas
sahf
pop
xchg
ret
pop
in
in
jg
std
sbb
mov
jne
cmp
repz
xor
pop
mov
fcmovnu
mov
sbb
loop
or
push
test
ret
sbb
sbb
std
in
scas
outs
push
dec
or
repz
stos
adc
pusha
aas
cmp
imul
xor
imul
in
inc
cdq
mov
mov
mov
cld
and
mov
imul
daa
clc
sub
outs
mov
and
xchg
rcr
fisub
inc
push
jnp
jle
adc
xlat
std
mov
scas
arpl
aam
mov
or
out
xor
js
scas
fucomi
sub
mov
test
mov
inc
xor
and
inc
test
cmps
dec
cmp
pop
mov
dec
aam
cmc
lods
xor
retf
and
loopne
mov
cmp
ja
out
or
mov
push
sbb
scas
stos
fwait
in
cmp
or
lds
cmp
or
jae
ss
inc
js
pop
mov
mov
xchg
add
pop
sub
int
cmp
jmp
jge
lods
or
jae
ins
push
mov
cwde
lods
inc
add
pusha
cs
sub
mov
adc
inc
retf
mov
xor
fs
mov
mov
adc
mov
cmp
out
cmps
test
cld
mov
cmp
enter
mov
icebp
ret
jnp
inc
sbb
mov
outs
add
cwde
out
jnp
aaa
sahf
xor
pop
mov
fisttp
cmp
mov
addr16
rol
sbb
shl
jb
sbb
gs
xlat
pop
mov
cmp
ins
xor
fild
sub
add
out
push
inc
jg
dec
xchg
mov
xlat
sub
adc
push
xchg
and
push
dec
mov
pop
pop
mov
fwait
mov
and
ss
push
ror
cmc
retf
fucomip
or
div
out
cwde
and
mov
inc
xchg
jg
iret
enter
adc
or
ficomp
out
push
xchg
push
call
cmps
jns
jle
mov
push
out
add
cmp
stos
and
in
cmp
repnz
inc
jbe
lods
ret
cmp
js
xchg
xchg
leave
pop
loopne
or
push
fisubr
jbe
shr
cmp
arpl
in
xchg
or
adc
jbe
and
push
inc
mov
es
push
fstp
fldz
mov
pusha
test
inc
or
aad
cmp
cmp
retf
add
xchg
pslld
sub
add
stos
xchg
jo
inc
out
lods
movs
pop
stos
es
inc
arpl
inc
xor
push
iret
inc
xor
mov
add
push
sub
xchg
push
ror
dec
mov
aaa
stc
inc
cmp
(bad)
arpl
cmp
xchg
jmp
movs
(bad)
or
cmp
aaa
popf
xor
inc
neg
xchg
jbe
push
mov
xor
inc
repnz
adc
stos
into
cmp
dec
rcl
add
and
inc
xor
pop
gs
sar
push
pop
pop
pop
or
xor
scas
lods
fisubr
add
lds
rep
adc
clc
rol
mov
inc
adc
jne
sub
in
xor
jle
mov
adc
xlat
scas
scas
mov
ret
push
add
je
sbb
ja
pop
js
lock
mov
mov
xor
push
push
xchg
mov
pushf
dec
jae
xchg
sti
jge
mov
dec
lock
push
cmc
push
pusha
pop
cdq
sub
stos
(bad)
call
(bad)
mov
test
test
in
not
jmp
test
xor
push
clc
loope
sub
out
adc
ds
mov
xor
xchg
into
rcr
xor
stos
out
sub
push
call
push
call
sub
sub
jnp
aaa
pop
pushf
imul
dec
push
adc
push
repz
popa
int
jbe
je
and
jecxz
enter
push
bound
aam
xor
cli
mov
retf
out
fsub
stos
or
scas
jno
out
and
dec
test
popf
rol
push
daa
cmp
push
test
nop
stos
pop
(bad)
sti
loop
mov
or
mov
sahf
and
addr16
int3
mov
gs
adc
or
fisub
dec
cmp
inc
addr16
es
push
jp
int3
cld
lods
mov
push
jmp
fwait
add
mov
sub
dec
je
in
shl
push
pop
mov
push
pop
cs
scas
idiv
fist
adc
push
les
cli
jmp
xchg
push
cli
imul
push
dec
push
cld
sbb
sbb
gs
mov
cli
hlt
xchg
jg
ret
cmp
dec
lds
sbb
outs
dec
jb
fnsave
shl
inc
and
xchg
adc
lahf
jle
jnp
and
add
loopne
imul
mov
xchg
xchg
push
cmc
mov
int
lock
cmp
imul
and
ror
push
js
mov
cmps
stc
adc
(bad)
into
addr16
cmp
and
out
cmp
adc
int
pmaxsw
mov
lea
cmps
push
xor
mov
lock
retf
cmp
fs
jp
sbb
or
sti
push
loop
inc
ds
pop
jmp
(bad)
cwde
fucomp
retf
pop
sbb
arpl
iret
sti
mov
push
js
ss
push
xchg
xchg
dec
sbb
inc
cli
pushf
scas
pop
and
popa
jb
xlat
cld
mov
popf
nop
fneni(8087
add
mov
fidiv
sbb
cmps
xchg
pop
dec
inc
dec
or
jmp
sahf
add
pop
push
hlt
outs
xchg
arpl
pop
pusha
or
add
mov
aaa
mov
mov
mov
div
ret
sar
pop
inc
(bad)
mov
imul
cdq
call
lahf
ss
das
repz
mov
stos
cld
xchg
dec
rol
aaa
stc
and
enter
xor
sub
out
loope
ret
sub
sbb
sub
je
pop
hlt
mov
push
(bad)
mov
outs
push
add
push
repz
int
jl
cmp
adc
push
sbb
and
xchg
iret
(bad)
cmp
test
dec
loop
ret
push
call
dec
and
pop
sahf
outs
(bad)
mov
pusha
adc
mov
jb
sti
sbb
push
inc
ds
xor
pop
and
push
or
xor
fisubr
mov
pop
or
add
fild
mov
add
mov
lea
out
xor
add
xor
ss
icebp
mov
addr16
sbb
test
jbe
mov
dec
fwait
sbb
mov
into
fxch
loope
add
jle
add
scas
test
sti
and
mov
stos
inc
inc
loopne
xor
je
(bad)
jne
shr
shl
outs
xchg
xchg
jl
dec
inc
xor
inc
or
mov
and
in
in
fucomi
or
pusha
xchg
das
xchg
push
ds
test
inc
sub
retfw
sar
cld
iret
syscall
xor
ror
pushf
retf
jnp
sti
popf
pop
je
out
ja
xchg
sub
push
and
push
jo
cs
pusha
test
xchg
pop
sbb
dec
daa
retf
dec
int3
jp
aad
retf
push
cmps
shl
ret
mov
xor
imul
dec
and
mov
iret
mov
pop
fistp
dec
shl
movs
arpl
adc
xchg
shr
or
dec
or
adc
mov
in
shr
pop
sub
push
xor
or
sub
xlat
mov
push
icebp
pop
aam
cmp
inc
fwait
mov
in
pop
outs
mov
dec
jnp
inc
sbb
push
movs
ins
call
jo
outs
mov
sub
hlt
adc
add
out
push
jbe
jg
and
sbb
jnp
sub
xlat
mov
xchg
cld
and
std
sub
push
xchg
inc
into
aaa
cmps
jnp
inc
sahf
ja
dec
cs
mov
pop
int
xor
pop
or
sti
sub
or
mov
and
jmp
ret
in
pop
movs
jl
loopne
imul
das
(bad)
(bad)
pop
imul
mov
pop
test
aaa
mov
out
mov
dec
mov
dec
lods
ss
fs
ins
jge
pop
cdq
dec
mov
sbb
fnstsw
mov
pop
xor
sar
pop
mov
sbb
and
and
inc
jno
repnz
or
add
mov
add
xchg
inc
out
cmps
mov
mov
xlat
jl
push
inc
jmp
jo
imul
mov
push
jbe
retf
pop
xor
lods
sbb
push
sbb
test
inc
add
mov
test
in
pop
jge
in
pop
jmp
ds
pushf
(bad)
xor
retf
or
inc
push
es
pop
add
or
sub
and
add
sbb
pusha
dec
out
push
sbb
cmp
ds
mov
popf
xchg
cld
(bad)
and
test
das
cmps
cs
arpl
and
addr16
iret
jmp
ins
jg
cmps
leave
mov
inc
mov
jnp
mov
mov
mov
jns
pop
dec
or
mov
stc
ss
jl
dec
pop
rcl
repnz
xchg
retf
xor
stos
sub
jecxz
mov
adc
jb
cmp
adc
dec
add
xchg
test
aaa
mov
ret
push
in
jae
cmp
inc
xchg
rcl
retf
out
jmp
jg
push
adc
jne
adc
sbb
jns
or
ret
or
ins
pop
shr
sahf
mov
std
dec
and
das
data16
movs
dec
and
pushf
das
mov
into
scas
pop
sar
loop
add
pusha
or
ret
pop
sbb
sub
aam
sbb
push
push
and
xor
pop
xor
lods
add
in
mov
movs
pop
jp
jp
daa
sub
cli
jmp
xor
out
inc
jle
test
jmp
in
ja
retf
movs
adc
test
int
mov
dec
stc
pusha
retf
push
xor
pop
(bad)
cli
out
loope
stos
inc
int3
retf
scas
push
push
fmul
ins
mov
(bad)
jns
sub
mov
ror
push
xchg
inc
(bad)
xchg
arpl
and
shr
into
fs
loop
in
xchg
mov
pop
pop
addr16
mov
sub
retf
pushf
push
inc
mov
jmp
(bad)
out
xchg
fldln2
mov
inc
movs
jmp
jns
fcomi
jge
dec
shl
loopne
sar
or
and
fwait
stos
sbb
jbe
xlat
mov
aas
cmp
dec
jb
adc
add
xor
sahf
xor
stos
mov
test
mov
imul
aam
and
xor
aam
pop
div
aas
adc
ret
jg
iret
push
push
adc
add
xor
xchg
enter
shl
es
pop
jmp
inc
and
push
mov
jl
or
jmp
mov
mov
mov
jecxz
xchg
fs
dec
mov
and
lock
cmps
mov
outs
or
adc
pop
icebp
pop
mov
inc
mov
sbb
inc
(bad)
sbb
ret
test
adc
xor
sub
xchg
dec
push
xor
aam
mov
jmp
jno
dec
mov
push
movs
add
add
loope
mov
bound
aaa
leave
push
mov
pusha
mov
bound
adc
outs
loope
(bad)
not
dec
mov
dec
arpl
test
leave
in
fdivrp
rcr
retf
jbe
repnz
jo
(bad)
sub
inc
cmp
int
mov
xchg
call
jnp
xor
xchg
lock
push
sub
cmps
pusha
stos
and
outs
cmp
mov
xchg
xor
jecxz
fidivr
pusha
jbe
mov
xchg
jmp
aad
mov
out
and
xchg
shl
jg
mov
xchg
dec
xor
shl
jmp
nop
jbe
das
shr
dec
movs
xlat
retf
xchg
push
icebp
out
(bad)
imul
jle
fcomp
bound
push
or
add
cmps
xchg
dec
xchg
push
xchg
xchg
in
mov
inc
pop
pop
xchg
mov
fmul
aam
scas
lock
mov
inc
inc
sub
cli
xor
int3
shr
push
push
mov
aad
sbb
mov
xlat
xor
out
mov
or
test
mov
and
jbe
dec
es
test
mov
mov
int3
mov
mov
mov
lods
ror
pop
sbb
inc
jle
add
mov
lahf
int
mov
or
mov
jbe
(bad)
cmps
das
hlt
loopne
sbb
mov
mov
imul
leave
call
mov
xor
inc
xchg
push
ror
pop
sbb
enter
mov
in
repz
adc
popf
sbb
mov
or
jl
xchg
ds
movs
push
hlt
call
loope
jmp
faddp
jns
mov
out
lods
or
rcl
add
es
push
repz
pop
pop
xor
repnz
adc
dec
cmp
call
ja
leave
or
xor
and
fnstcw
push
(bad)
fidiv
mov
ds
pop
xor
adc
in
mov
lods
repz
shl
and
in
push
mov
push
std
adc
mov
jg
sub
fsubp
ret
add
or
rcl
cli
clc
or
shr
push
dec
mov
add
cld
xchg
xlat
fimul
call
xchg
dec
sub
popa
test
inc
loopne
pop
xor
fs
mov
shr
or
cmp
sahf
push
std
xchg
ret
or
jno
push
and
mov
mov
xor
adc
not
mov
inc
adc
jge
fwait
mov
int
nop
push
pusha
fdiv
pushf
mov
into
cmp
in
inc
jno
xchg
jns
ret
jb
xchg
inc
call
add
repz
stos
dec
cmp
push
dec
ja
push
sub
gs
stc
jno
mov
adc
movs
dec
xchg
dec
pop
mov
mov
push
(bad)
out
in
pop
lock
push
xor
rol
cmps
push
push
rol
push
ret
mov
call
or
cmp
icebp
dec
dec
push
sbb
add
jne
retf
inc
mov
add
dec
je
retf
mov
sar
sub
push
mov
xchg
mov
or
out
dec
and
mov
add
ins
dec
jns
(bad)
pop
ss
imul
loopne
mov
add
xlat
into
shl
stos
dec
movlps
mov
popf
jge
jnp
or
mov
(bad)
hlt
out
dec
test
test
shl
outs
das
cmp
sbb
stos
jne
lods
cmp
add
inc
sbb
inc
add
aam
fcomp
adc
xor
cmp
bound
add
loopne
sbb
mov
dec
xor
cmp
jge
sbb
xchg
push
sbb
aam
retf
push
scas
mov
jbe
jnp
mov
ror
shr
stos
mov
dec
jb
push
cmp
mov
push
inc
sahf
inc
add
inc
stos
dec
not
(bad)
sbb
and
jnp
xor
arpl
mov
iret
cmp
pop
stc
outs
mov
fs
push
shl
lahf
jnp
arpl
mov
out
aad
hlt
je
mov
sbb
sub
movd
adc
xchg
gs
ds
icebp
cmp
push
cmp
mov
popa
mov
repz
jge
scas
or
inc
nop
call
xchg
dec
sahf
mov
or
nop
cmp
ds
cld
aad
mov
ret
popa
adc
retf
add
enter
retf
xchg
pop
shl
lea
repz
mov
mov
les
inc
push
cmp
mov
jg
xchg
jb
cmp
dec
scas
outs
sub
test
mov
push
(bad)
test
inc
bound
into
aam
and
int
xchg
enter
mov
xor
iret
push
pop
push
repz
mov
scas
aaa
jl
inc
outs
(bad)
iret
cwde
push
repnz
fs
das
mov
iret
jmp
jle
std
ins
push
push
fs
add
cmp
cli
lahf
or
xchg
mov
out
mov
ja
repz
(bad)
mov
add
je
ret
test
xchg
push
or
fwait
clc
push
call
and
push
cld
daa
into
inc
in
test
lods
adc
dec
movs
(bad)
enter
add
ss
shr
ds
push
ss
pop
loop
sbb
dec
mov
pop
stos
test
dec
inc
dec
xor
loopne
sar
dec
test
push
ds
cmc
gs
es
popf
xor
jns
mov
push
push
mov
jno
pop
jns
xchg
add
and
push
jbe
mov
(bad)
imul
movaps
icebp
push
push
lea
add
std
jo
pop
ins
lea
lods
cmp
enter
scas
bound
sub
imul
mov
ror
fimul
retf
stos
fptan
dec
or
movs
lods
push
outs
cmps
dec
cmp
adc
outs
mov
jae
jmp
inc
scas
push
(bad)
into
retf
dec
js
shr
cmp
repnz
push
mov
mov
xchg
pop
cmp
movs
stos
(bad)
pop
cs
ja
jmp
jl
push
imul
sbb
sbb
adc
push
lock
add
mov
and
jl
xchg
jl
mov
pop
les
xor
add
ret
mov
mov
(bad)
and
call
mov
or
sbb
fucomi
cwde
fwait
in
push
in
inc
repz
daa
div
xor
retf
cld
or
xchg
jg
int3
loope
pop
mov
jp
push
dec
mov
mov
mov
jle
das
cld
repnz
leave
dec
leave
jl
jmp
xchg
test
ins
lods
sahf
cdq
in
(bad)
icebp
hlt
ret
or
inc
fnsave
out
dec
imul
adc
add
and
and
ss
mov
call
nop
mov
out
sub
push
sub
xlat
xchg
ja
sub
inc
stc
adc
and
or
test
bound
imul
cmp
jne
xor
dec
(bad)
fadd
shl
xchg
cmp
inc
push
inc
add
popf
lds
mov
fdivrp
add
xlat
add
xchg
push
add
jae
push
pop
jnp
pop
mov
out
pusha
xchg
(bad)
js
jb
rol
(bad)
stc
(bad)
pop
sahf
jg
jb
sub
stos
stos
rol
dec
shl
jge
mov
ds
dec
in
add
push
inc
adc
cmps
sar
mov
pop
jl
and
lods
push
ret
jmp
test
sub
mov
(bad)
imul
es
and
ins
(bad)
cs
test
mov
sub
mov
addr16
scas
stc
pusha
push
add
mov
mov
adc
sbb
jp
div
je
popa
cs
jp
jne
mov
nop
mov
mov
mov
and
add
ds
inc
xchg
loop
push
dec
dec
cld
cmp
pop
and
fs
cdq
cmps
xchg
dec
fisubr
out
iret
stos
and
mov
nop
hlt
je
sbb
daa
lock
xchg
ds
enter
test
push
inc
lock
retf
pop
out
or
mov
push
imul
adc
and
rcl
or
xor
push
ret
sbb
sub
cmp
inc
add
xor
xchg
int
aas
stc
pop
bts
mov
outs
push
ins
repnz
or
rcr
or
push
shr
in
outs
inc
repz
nop
xchg
int
jl
cmps
shl
push
fld
jb
hlt
aaa
xchg
daa
push
add
pop
sub
rol
outs
pop
rcl
jmp
ret
sub
mov
les
lahf
(bad)
leave
xor
xor
repnz
ins
jle
mov
mov
retf
mov
xor
push
sbb
outs
les
lds
fcomip
or
mov
test
jno
xor
sahf
mov
mov
pop
pop
outs
push
aad
sar
mov
cwde
push
cdq
rcl
jmp
sbb
mov
dec
lds
loopne
(bad)
pop
out
adc
push
daa
test
scas
stc
imul
int
cmp
clc
or
inc
and
fsub
pop
lock
inc
xchg
movs
add
test
adc
pop
xchg
movs
cmp
in
mov
movs
dec
rcr
lock
stos
ja
cmp
je
inc
pop
sbb
ja
in
in
lock
sub
mov
dec
not
arpl
(bad)
mov
test
and
xor
leave
mov
mov
xchg
retf
push
ins
add
(bad)
es
jge
out
(bad)
pop
mov
mov
push
cmp
sbb
xchg
cmp
or
mov
enterw
les
mov
inc
xor
dec
mov
adc
inc
dec
shl
aas
test
jo
fs
push
xor
clc
cwde
inc
mov
aam
mov
es
add
pop
mov
jmp
pushf
dec
out
pop
mov
pop
push
dec
mov
jg
cmc
mov
ror
loop
and
or
jnp
sbb
clc
jbe
push
loope
or
cmps
push
lods
cmps
ret
xor
loopne
daa
into
xor
or
xor
div
fimul
mov
add
cmp
push
sar
aad
repnz
lods
ficomp
adc
pop
jle
(bad)
repnz
fmul
fiadd
or
mov
mov
test
in
sub
xchg
dec
cmc
push
scas
mov
push
add
in
dec
xor
pushw
mov
sbb
jae
aaa
test
push
int3
mov
ds
in
shr
xor
mov
adc
shl
xor
inc
shl
mov
imul
jecxz
mov
into
and
mov
xchg
inc
repnz
cmp
mov
fld
add
or
aam
cs
or
shl
sub
ins
aam
push
push
push
mov
jmp
sbb
ficom
bound
push
iret
int3
std
xchg
adc
ss
bound
cmp
les
into
jl
adc
xchg
pop
jno
add
pop
adc
enter
xor
sbb
out
or
cmp
sbb
xor
in
mov
xchg
pop
ins
or
scas
and
xchg
push
movs
fstp
mov
xchg
(bad)
push
mov
frstor
inc
scas
xor
ret
mov
fldcw
jle
rcr
loope
mov
push
add
ds
dec
lahf
out
push
cmp
mov
pop
cmp
xchg
pop
stos
enter
pop
rcr
sbb
call
or
cmp
scas
xchg
cmp
mov
xlat
xchg
dec
push
xchg
mov
push
sti
stos
adc
pop
(bad)
cld
xchg
mov
stos
lea
sbb
or
jle
ja
ret
dec
sub
cdq
push
pop
loopne
dec
fidiv
rcr
inc
sbb
xchg
dec
pop
aaa
mov
xor
pop
dec
(bad)
sbb
bound
pop
aaa
add
jp
jg
add
push
xor
xchg
(bad)
pop
adc
xor
mov
mov
arpl
cmc
das
test
or
not
ja
xchg
test
lods
aaa
jle
push
call
push
ss
xchg
push
xor
sub
xor
mov
ss
xchg
jmp
adc
int3
mov
cmc
xor
xor
call
fild
retf
mov
imul
jmp
and
xor
cmps
push
sub
(bad)
cmp
or
or
pop
jbe
or
pop
push
icebp
rcr
xor
not
dec
inc
retf
mov
inc
add
ja
div
dec
mov
jns
dec
iret
fdiv
(bad)
sti
sub
and
mov
xchg
xchg
ret
iret
jne
and
movs
push
stc
outs
cmc
adc
mov
fsub
sbb
popa
(bad)
cmp
mov
fild
push
sub
scas
push
loopne
add
test
pop
dec
and
jns
jnp
xor
std
mov
push
dec
popa
call
xchg
jmp
scas
xchg
ja
not
push
sub
jne
add
jmp
jge
rol
out
imul
jo
dec
or
out
cmc
nop
adc
fstp
and
ss
repz
aad
mul
lock
xchg
xchg
sub
int3
in
sbb
push
push
retf
mov
xchg
xlat
inc
push
xor
imul
add
shr
and
inc
xchg
in
push
jg
addr16
and
test
scas
sbb
jo
push
cli
mov
push
out
or
pop
jmp
inc
dec
outs
out
inc
or
scas
xchg
push
leave
jg
sahf
(bad)
nop
sbb
jle
mov
push
stos
or
stos
aaa
stos
popa
xor
mov
dec
es
out
xor
or
push
push
rsqrtps
inc
pusha
repnz
in
das
pop
dec
cmps
arpl
lock
addr16
je
test
sub
inc
sti
sbb
jp
xchg
test
jecxz
enter
bound
cwde
xor
mov
sub
jge
pop
jg
imul
and
mov
fs
add
dec
out
xor
out
loop
or
ret
repz
scas
mov
stos
push
pop
push
adc
lods
jne
or
inc
in
(bad)
test
test
sub
add
push
mov
mov
stos
adc
in
push
popa
stos
das
push
cmp
retf
into
dec
(bad)
aas
xor
mov
adc
jno
cld
pop
or
mov
ret
test
adc
sar
scas
mov
fcmovb
jb
sbb
or
int
cmp
jmp
pop
cs
loop
or
js
pop
sbb
xor
add
in
xchg
pop
adc
loopne
(bad)
mov
inc
sub
or
push
push
retf
sub
scas
call
js
push
push
js
jp
out
add
jnp
jne
sub
jl
in
xchg
pusha
rol
add
sbb
idiv
xchg
imul
push
inc
dec
sbb
or
mov
scas
mov
jmp
imul
cmps
sub
cdq
cs
xchg
imul
sub
into
and
mov
cmp
mov
push
jge
scas
stos
pop
nop
retf
mov
imul
jle
xchg
pop
pop
(bad)
mov
add
ss
adc
enter
push
pop
inc
xchg
mov
pop
add
and
jmp
jecxz
adc
pop
mov
sub
ds
lock
call
dec
mov
fwait
jg
das
das
fcmove
div
pusha
out
lds
iret
xor
rcl
int
or
shr
movd
iret
cmp
ret
aaa
mov
clc
xlat
push
xlat
xchg
aad
es
jl
pusha
cld
mov
pop
pop
cwde
ins
pop
cmps
jge
dec
inc
push
add
cmps
or
mov
or
ret
cwde
xchg
mov
sbb
test
addr16
addr16
inc
and
mov
push
mov
in
and
leave
ins
jbe
stos
pop
mov
jle
push
les
xchg
jmp
mov
not
push
mov
or
sub
(bad)
mov
add
jb
jle
ins
push
xor
mov
xor
xor
ds
stos
jnp
push
test
idiv
stc
sub
mov
out
cs
(bad)
out
sub
jp
adc
mov
scas
test
ja
mov
jb
test
pop
pop
dec
mov
cmc
cmp
repz
cmp
cs
jmp
add
sbb
mov
add
loope
sbb
jmp
xor
(bad)
sbb
pop
aaa
jg
(bad)
idiv
sbb
test
mov
icebp
into
sub
inc
sbb
mov
pop
xchg
pop
xchg
hlt
lods
sub
inc
mov
or
and
cmps
jecxz
rcr
dec
adc
mov
adc
data16
mov
movs
dec
(bad)
cld
mov
xchg
loop
sahf
cdq
(bad)
xchg
mov
sub
push
xchg
mov
or
cmps
jle
pop
pop
fs
cmp
in
std
mov
adc
(bad)
gs
popa
cmp
add
mov
adc
repnz
xor
pop
pop
pop
or
aaa
xlat
and
pushf
xlat
in
ins
jnp
pop
ret
daa
scas
add
movs
and
adc
xor
shr
add
push
mov
mov
or
stos
xchg
repnz
or
ja
sbb
mov
stos
fild
sbb
inc
mov
xchg
sub
inc
or
fsub
inc
imul
enter
mov
loope
and
push
jmp
sbb
pusha
mov
repnz
cs
jg
xchg
data16
loopne
out
ret
addr16
pop
(bad)
into
or
jmp
mov
push
fimul
dec
int
stos
pop
dec
test
push
mov
cmp
aas
push
pop
in
cdq
dec
xchg
lock
pushf
gs
pop
mov
add
stos
push
pop
push
jge
ss
inc
arpl
es
stos
ds
or
sub
cmps
adc
cwde
lods
call
push
sub
pop
push
pop
mov
imul
aad
jo
push
or
fisttp
ins
xchg
pop
jge
seta
push
test
jae
(bad)
arpl
pop
(bad)
jmp
test
test
mov
(bad)
push
in
cld
xchg
addr16
mov
cwde
xchg
ss
mov
inc
into
xchg
ror
in
popf
movs
sub
dec
sbb
stos
mov
or
cmp
mov
xor
repnz
es
aam
xor
pop
mov
fwait
loope
sub
retf
jg
test
pop
ins
sbb
gs
je
push
and
ret
retf
leave
movs
pop
adc
pop
xor
repz
ror
jle
and
wbinvd
pop
sbb
int3
into
aas
in
or
or
ja
fstp
hlt
pop
xor
mov
dec
pop
push
dec
xchg
test
sub
mov
jno
(bad)
jae
cmp
xchg
push
xor
push
xor
stos
test
loope
pop
jle
push
ss
test
aas
jbe
lock
clc
jl
enter
aaa
jle
je
dec
push
gs
dec
lock
pop
ret
hlt
pop
xlat
or
(bad)
or
daa
outs
cmp
cmc
addr16
int
adc
(bad)
imul
mov
inc
mov
test
nop
jecxz
dec
fs
js
xchg
pop
push
rcr
(bad)
out
cld
int3
xor
loop
mov
jbe
cmps
sbb
mov
push
ins
ja
pusha
out
and
adc
movs
lock
sub
pop
jle
repz
adc
push
pop
inc
movs
inc
xchg
pushf
mul
adc
dec
imul
xchg
dec
adc
pop
push
xor
sub
xchg
scas
lds
movs
pop
fdiv
sbb
adc
daa
xchg
es
repnz
push
arpl
jb
push
lahf
push
pop
jno
loope
mov
add
stos
inc
or
sub
mov
xchg
jp
or
in
mov
fnsave
enter
icebp
clc
xchg
sbb
pop
jb
push
std
(bad)
pop
pop
or
fisubr
mov
leave
jb
dec
out
movs
sub
or
mov
or
je
push
dec
xor
outs
cmp
xchg
cmp
out
mov
retf
mov
repz
mov
fiadd
jmp
inc
rol
dec
lods
ja
mov
sahf
call
imul
mov
sub
leave
dec
jae
scas
adc
fwait
push
lds
dec
cmps
stos
pusha
cmp
push
sbb
jmp
imul
dec
mov
xchg
pop
iret
test
push
cwde
sbb
cmp
lods
ins
cdq
dec
cmp
mov
out
sahf
lock
rcl
dec
dec
xchg
pop
imul
inc
jle
inc
mov
sub
xchg
pop
dec
fmulp
(bad)
test
xchg
jecxz
(bad)
call
into
pop
fs
aad
cmp
or
mov
mov
inc
ja
neg
shl
pop
xor
pop
adc
ins
test
scas
loope
int3
pop
mov
int3
xchg
arpl
scas
sbb
dec
outs
out
jno
adc
fbstp
retf
or
lods
add
mov
(bad)
test
cs
das
or
movs
mov
movs
je
leave
mov
in
mov
jg
jmp
jecxz
xor
leave
xchg
(bad)
xchg
out
dec
inc
shl
mov
outs
inc
fwait
scas
cmp
out
data16
call
arpl
jns
and
dec
cmps
add
push
xchg
add
ret
adc
(bad)
xchg
daa
sbb
pop
cmps
mov
idiv
push
retf
pop
jb
retf
and
fimul
adc
jp
xlat
(bad)
cmc
mov
div
mov
xor
inc
(bad)
fidiv
rcr
xor
ss
jo
movs
inc
mov
imul
sbb
jl
cmp
mov
sub
xchg
sar
push
imul
mov
out
jb
pop
xchg
cmp
push
aad
or
or
xor
push
xor
mov
mov
nop
jns
cmc
or
sub
mov
retf
in
sbb
push
loopne
add
pop
jp
fcomip
dec
adc
or
mov
mov
sti
mov
mov
mov
enter
sub
push
mov
mov
sbb
mov
jmp
jmp
fild
and
aaa
cmps
or
sub
jp
gs
cmp
arpl
inc
or
cs
(bad)
add
iret
(bad)
lods
inc
dec
and
push
popa
pop
mov
stos
add
xor
add
pop
pop
or
sub
xlat
test
mov
jp
cwde
xor
stos
das
and
(bad)
retf
inc
into
mov
jp
rol
add
imul
adc
out
(bad)
dec
or
rol
and
push
push
push
out
jae
add
loopne
fidivr
inc
hlt
jmp
sbb
cmp
dec
fistp
xor
push
stos
jl
sub
push
(bad)
cdq
cmps
stos
mov
inc
xchg
cmps
stos
repz
jns
jno
ds
push
into
jns
adc
stos
inc
dec
xchg
mov
out
test
add
push
or
pop
ja
out
fsub
pusha
and
aaa
xchg
in
imul
sti
test
sbb
test
mov
pusha
pop
push
lods
or
push
idiv
fsubr
jae
adc
loopne
jns
sbb
or
imul
leave
xor
or
mov
movs
sbb
cmp
pop
cmp
push
pop
fmul
(bad)
lea
push
mov
pop
nop
in
pop
adc
push
xor
call
xchg
dec
push
clc
mov
and
repz
or
retf
xor
mov
pop
fimul
dec
sub
stos
out
lahf
fs
mov
fadd
and
xor
sbb
not
mov
sbb
mov
test
mov
dec
pop
cmp
outs
mov
aam
lods
sub
jmp
scas
movs
pop
cmp
test
jmp
je
fwait
outs
not
(bad)
imul
push
pop
fwait
stos
es
sahf
aaa
push
mov
ret
sti
iret
imul
push
aas
ja
add
imul
popf
retf
add
ins
mov
adc
pop
mov
and
lock
inc
pop
pop
cmp
adc
sbb
or
loopne
push
rol
inc
sub
enter
push
mov
sbb
pop
mov
leave
inc
imul
mov
inc
stos
imul
mov
mov
pop
mov
rol
pop
xor
aas
sub
add
ret
jl
push
mov
pop
push
adc
(bad)
pop
sub
popf
mov
bound
inc
jae
jae
test
mov
jg
pop
xor
call
loope
mov
js
jnp
sub
jg
iret
ret
outs
mov
dec
call
xchg
imul
push
mov
sar
inc
out
fild
shr
xchg
(bad)
int3
retf
hlt
inc
lea
enter
xor
pop
dec
arpl
fmul
or
jg
outs
inc
push
jmp
out
mov
pop
inc
inc
(bad)
cld
xor
dec
dec
call
fisttp
cmp
mov
mov
inc
outs
cmc
xlat
add
xor
popa
(bad)
xor
cmc
cmp
ret
xor
fstp
xchg
mov
and
loope
lahf
xor
inc
add
test
cmps
cwde
xor
cli
sahf
pxor
push
ins
xchg
pop
scas
gs
retf
cmp
mov
in
mov
pop
pop
mov
inc
in
sub
inc
mov
dec
movs
add
pop
jnp
xor
std
adc
mov
sti
out
push
push
mov
sbb
test
mul
pop
cmp
xchg
cmp
dec
jmp
push
push
sub
xchg
sbb
sub
aas
inc
(bad)
call
pop
and
mov
ins
sub
mov
fwait
jmp
cmps
ret
hlt
leave
or
jns
inc
aam
test
add
scas
sub
mov
xchg
xchg
neg
inc
lods
addr16
inc
ret
das
add
hlt
sbb
mov
jmp
mov
sub
push
dec
jbe
or
stos
xchg
pusha
inc
xchg
es
fcomp
cs
mov
test
test
shl
xchg
pop
pop
data16
pop
ror
nop
ds
dec
dec
or
jo
add
mov
movs
push
outs
jb
cmp
jno
(bad)
mov
inc
add
out
fwait
cwde
inc
xchg
cmp
stc
test
and
mov
(bad)
cs
xlat
ins
jno
jg
ja
or
fsubp
lods
pop
hlt
out
xchg
cwde
mov
jne
add
or
lahf
mov
aam
pop
lods
addps
mov
mov
mov
xchg
push
adc
shl
xor
push
mov
cmp
aad
push
xor
add
and
adc
cld
outs
enter
addr16
xor
scas
push
jo
bound
xchg
outs
retf
mov
mov
repz
stos
push
add
es
cmps
movs
ror
pop
test
les
xchg
out
hlt
pusha
pushf
and
fnsave
int3
sti
cmp
aad
mov
adc
xor
(bad)
aaa
cmp
(bad)
cmps
es
jmp
mov
call
scas
cmp
retf
rcl
ins
mov
inc
(bad)
in
fwait
mov
shl
push
pop
jp
push
adc
jo
clc
cmp
idiv
xor
pusha
pop
enter
pop
sub
ret
mov
jge
jnp
or
sbb
xor
mov
add
adc
pusha
das
clc
cld
mov
add
inc
sbb
loopne
mov
cmps
in
dec
into
xor
xchg
lds
push
mov
andps
mov
pop
sar
popa
retf
lock
addr16
xor
stc
imul
mov
jno
mov
add
pop
in
cwde
retf
je
shr
pop
cmp
add
inc
jbe
rcl
xor
jae
fucomp
fstp
into
and
movs
inc
sub
lods
cmps
xchg
call
adc
and
add
push
ficomp
pop
int
jle
push
fs
cmps
and
pop
iret
mov
gs
cs
in
imul
ss
shr
xchg
mov
int3
hlt
es
inc
push
test
sub
inc
jle
fistp
popf
and
(bad)
into
adc
mov
xchg
push
cs
push
mov
and
(bad)
jl
jnp
out
cmc
mov
or
dec
pop
mov
dec
mov
inc
lods
mov
jge
mov
xor
or
leave
aaa
repnz
or
mov
jg
hlt
xchg
icebp
mov
pop
push
inc
dec
stos
push
inc
jbe
mov
push
jecxz
mov
inc
test
jno
int3
ret
or
and
ins
lahf
sub
push
jg
in
push
nop
mov
int3
popa
jle
inc
lahf
arpl
sbb
js
pushf
xchg
sub
cmp
retf
jbe
mov
retf
sbb
es
jmp
pop
mov
dec
jns
push
add
neg
adc
outs
scas
retf
out
cmc
mov
and
test
fbld
call
jecxz
lea
mov
xor
outs
pop
pop
f2xm1
loop
sahf
ds
pop
mov
push
bnd
pop
jb
inc
push
lods
fnstenv
inc
imul
inc
fwait
stc
and
mov
rcr
mov
cmps
and
xor
push
iret
jp
fld
call
mov
adc
sub
call
dec
test
sbb
aas
xor
rep
outs
adc
xchg
sbb
enter
pop
mov
dec
push
add
jae
mov
or
aaa
or
dec
out
xor
shr
shl
mov
or
xor
je
iret
scas
les
cmp
icebp
icebp
sti
outs
loop
add
jge
jnp
(bad)
and
push
jb
xlat
jecxz
fdiv
popa
jnp
mov
cmc
or
mov
sub
(bad)
jb
sahf
sahf
push
mov
aad
je
mov
inc
xchg
jge
ror
bound
test
fldenv
ficom
inc
pop
inc
retf
mov
push
aad
push
push
add
mov
and
lods
data16
pop
mov
mov
cmc
inc
or
nop
adc
clc
or
mov
(bad)
repnz
push
lods
call
push
adc
icebp
or
cs
stos
add
out
mov
sbb
mov
jne
idiv
(bad)
jno
push
mov
aam
scas
add
aad
adc
mov
(bad)
test
loop
dec
adc
mov
mov
test
pop
jp
pop
out
pop
nop
rcr
mov
adc
call
cmp
scas
xchg
push
mov
xchg
inc
rcl
push
mov
pop
lea
mov
ror
push
push
jle
int3
inc
xor
iret
loope
xor
shl
or
retf
test
nop
xlat
sbb
(bad)
pop
out
and
jle
dec
into
and
jg
mov
ins
jle
fistp
push
mov
std
mov
retf
dec
outs
dec
das
sbb
jmp
cs
and
fwait
jno
ror
sub
adc
add
push
repz
mov
out
or
pop
mov
xor
inc
mov
inc
add
adc
inc
enter
jns
aad
add
sbb
mov
adc
mov
pop
cmp
push
add
jmp
xor
ja
push
in
pop
iret
push
dec
jmp
dec
sbb
mov
jbe
and
mov
lds
push
sti
cmp
cmp
push
jle
pushf
fcmovne
or
jnp
call
add
in
lock
out
or
clc
or
sbb
mul
aam
xchg
adc
jl
xchg
jl
mov
xchg
dec
pop
mov
add
jge
stos
jmp
sar
xor
ret
jns
test
mov
loopne
pop
sub
mov
ret
mov
int3
inc
jae
addr16
jl
cmps
loope
movs
sti
mov
call
push
inc
lock
movs
gs
adc
inc
mov
jnp
jl
inc
xchg
sub
cmps
ins
mov
fld
cwde
cli
test
cmps
cmps
int
mov
pop
cmc
out
xlat
pop
dec
ror
mov
ss
and
xlat
sar
cmp
push
or
pop
enter
sbb
push
(bad)
jmp
mov
push
or
mov
data16
adc
les
xor
inc
mov
ret
in
imul
repz
ret
gs
lahf
xchg
mov
das
xor
gs
dec
ror
sar
fsubr
stos
shl
stos
outs
xor
cmc
push
fsub
retf
xchg
jno
mov
xchg
pusha
jmp
movs
push
xchg
jge
dec
out
or
add
test
push
int3
jge
bound
inc
clc
pop
aam
sahf
popa
add
sub
fst
icebp
xor
sbb
cmp
dec
in
mov
dec
mov
dec
xchg
mov
ror
and
inc
dec
and
mov
adc
(bad)
push
lahf
sti
es
stc
or
xor
add
sbb
xchg
push
xchg
mov
adc
sbb
test
retf
push
sub
push
jge
stos
in
shl
iretw
in
adc
shr
sub
add
xchg
or
xor
inc
dec
xor
(bad)
lods
dec
fst
aas
inc
out
inc
ffree
jecxz
push
icebp
sbb
push
pop
test
or
xchg
retf
mov
sbb
pop
push
out
mov
xchg
test
xor
dec
ja
aas
push
pop
into
sar
scas
leave
adc
lds
cmp
pushf
add
xchg
test
add
popa
retf
and
stc
fst
and
ss
pop
jae
add
mov
xor
mov
enter
fisub
sub
ss
clc
jmp
inc
inc
out
sub
inc
sbb
push
test
adc
ins
pushf
retf
mov
gs
mov
shl
xchg
aaa
or
xor
aas
ret
pop
mov
stc
sub
outs
fs
int
add
push
dec
inc
(bad)
in
xchg
cli
cmp
test
mov
sub
(bad)
sub
fs
ret
movs
jmp
ret
fwait
add
das
(bad)
sti
and
outs
dec
cmp
or
fld
mov
adc
retf
cmc
out
inc
pop
push
retf
inc
mov
mov
dec
out
fwait
pusha
xchg
retf
xlat
loope
and
cld
pop
jbe
adc
ja
mov
rcl
pop
and
fiadd
in
retf
leave
mov
xchg
(bad)
mov
xor
mov
sub
xor
cmp
vmovsd
adc
xchg
push
cmps
xor
sub
mov
push
jno
xchg
lods
dec
sub
or
addr16
mov
pop
loopne
shl
push
rol
push
cmc
adc
into
clc
sbb
into
add
aaa
std
pop
pop
push
push
btc
jge
adc
lods
bound
cs
sub
and
mov
lds
outs
cs
sbb
fstp
lods
sbb
add
push
rcl
lods
inc
or
jle
mov
xlat
push
pop
int
mov
pop
adc
repz
sbb
dec
pop
and
lock
inc
jmp
mov
movs
ret
(bad)
pop
add
hlt
loop
pop
sar
out
inc
test
adc
lock
inc
jl
pop
pop
daa
out
adc
sub
fs
out
sbb
mov
inc
je
or
jg
daa
test
cwde
sbb
out
jecxz
cmp
fwait
xchg
cmc
mov
dec
retf
xor
jo
scas
push
cdq
and
jb
aas
sar
mov
xchg
stos
ds
inc
in
std
adc
idiv
aam
in
inc
jb
and
jno
fldcw
test
dec
xor
add
test
mov
pusha
int3
cdq
addr16
dec
dec
scas
xor
and
mov
push
fldln2
gs
rol
not
pusha
outs
leave
pop
call
push
inc
dec
dec
icebp
lods
fsubr
aaa
inc
loope
mov
add
add
ins
pop
stc
movs
adc
sahf
fcomp
adc
mov
dec
xchg
cmp
mov
mov
stos
mov
add
mov
xor
test
push
sbb
arpl
add
in
add
scas
fwait
sub
cmp
inc
movs
(bad)
and
cmp
jmp
lock
(bad)
retf
fdivr
sbb
retf
icebp
xchg
or
cmps
out
dec
mov
ret
adc
fs
push
in
push
pop
cmps
or
scas
icebp
or
les
test
iret
aaa
sub
mov
outs
clc
xchg
addr16
scas
pop
xor
scas
mov
icebp
or
retf
rcl
mov
dec
cmps
loopne
shl
jecxz
inc
add
xor
maskmovq
(bad)
push
xchg
test
imul
dec
scas
xchg
mov
add
inc
lods
jmp
inc
ret
xor
cmps
jle
cmp
retf
xchg
dec
cld
test
fwait
inc
jno
add
sbb
inc
push
ret
cdq
mov
mov
int
cs
sbb
cmp
stos
xchg
xchg
stos
and
lock
push
fsubr
and
(bad)
(bad)
jl
jecxz
jle
xlat
mov
pop
jbe
je
mov
push
fiadd
(bad)
jmp
jnp
push
xchg
jg
mov
scas
push
mov
xchg
push
iret
jae
leave
sub
test
ret
push
cmp
xor
clc
mov
dec
pop
test
jo
stos
xor
jbe
push
ja
imul
fdiv
add
xlat
dec
mwait
stos
aaa
jno
xchg
into
les
addr16
or
test
bound
jne
lods
daa
outs
jmp
not
ja
test
mov
sub
sub
sub
mov
dec
push
dec
xor
push
push
test
ret
jmp
imul
pop
or
xor
dec
into
daa
out
loop
pop
pop
add
push
pop
or
pop
movs
jl
push
nop
mov
(bad)
out
mov
pushf
adc
les
movs
ss
xor
sub
and
hlt
shl
adc
jno
js
aad
fwait
pop
aas
mov
push
mov
pop
sub
push
fs
fbstp
push
pop
test
mov
adc
adc
ror
hlt
sbb
mov
stc
lods
fsubr
push
xor
stos
adc
(bad)
sbb
fidiv
std
jp
arpl
sbb
mov
inc
adc
inc
lds
push
aam
mov
mov
mov
push
cmp
pop
and
sub
mov
jbe
or
ins
push
shl
cmc
mov
test
pop
sbb
inc
xchg
stos
arpl
and
mov
sub
hlt
lods
in
mov
xchg
test
or
jl
sti
ds
scas
icebp
mov
inc
pop
cmpxchg
sub
retf
je
lods
ins
push
ret
push
repnz
push
pushf
(bad)
sub
aaa
test
in
push
(bad)
xor
inc
xchg
or
jb
fnstsw
enter
or
xchg
bound
jge
cmps
imul
mov
sbb
retf
mov
or
jo
enter
or
scas
mov
bound
icebp
mov
push
int
les
mov
add
test
push
lahf
sbb
jnp
xor
test
icebp
jmp
add
add
(bad)
mov
fcom
push
mov
inc
xor
mov
aam
les
lods
fwait
push
jo
pushf
fs
push
sbb
popa
clc
pop
stos
popf
inc
call
(bad)
push
push
and
shl
xchg
jg
(bad)
ins
sub
out
xchg
cmp
mov
fadd
mov
lahf
icebp
(bad)
xchg
(bad)
jnp
mov
ss
inc
sahf
xchg
push
pop
jbe
add
xchg
or
push
or
dec
and
int
push
lahf
jl
(bad)
(bad)
sar
in
ja
fsub
das
ins
outs
(bad)
sbb
xchg
shr
xchg
xchg
sbb
mov
(bad)
inc
movs
(bad)
dec
arpl
mov
pop
sbb
lock
xchg
add
pop
les
enter
xchg
out
scas
stc
mov
ror
cmp
mov
fst
pop
dec
and
out
call
add
push
mov
(bad)
fwait
stos
retf
mov
lea
adc
and
jno
cs
or
pop
cmps
imul
sbb
dec
maskmovq
test
es
and
xchg
jnp
loopne
repz
ss
xchg
outs
rol
(bad)
fstp
rcl
dec
out
sub
inc
xor
pop
mov
cld
std
daa
cdq
or
lea
addr16
jb
aad
jbe
or
or
lds
sti
clc
push
gs
bound
mov
shl
in
push
mov
jge
mov
xlat
mov
push
push
das
adc
mov
jmp
xchg
xor
cmps
ss
xchg
sbb
jne
jnp
and
sub
setp
sbb
or
lahf
inc
(bad)
leave
aaa
cmp
inc
xor
push
data16
fsub
out
add
xchg
retf
jp
adc
(bad)
fnsave
sbb
cmp
jecxz
or
aaa
ins
movd
mov
jg
xor
push
jl
push
inc
sbb
cld
ja
xor
add
jbe
cmp
movs
pop
sbb
dec
xchg
cwde
test
sar
pop
stos
adc
stc
mul
ficom
(bad)
ss
mov
aam
in
pop
inc
movs
stos
sub
cdq
pop
mov
adc
adc
inc
scas
int3
sub
mov
and
push
cmp
add
ret
push
repnz
test
jge
repnz
inc
mov
sub
(bad)
and
mov
jo
mov
inc
xchg
stos
push
mul
inc
retf
jge
inc
outs
xchg
test
nop
mov
int3
rcr
and
fst
inc
clc
pushf
out
or
pop
mov
push
pop
retf
mov
ret
stos
ror
repnz
mov
icebp
and
cmps
aad
mov
add
sahf
xlat
push
lea
(bad)
enter
stos
jmp
jo
in
(bad)
mov
xlat
ret
pusha
add
cmp
test
xchg
pop
jb
push
and
mov
or
or
(bad)
mov
jge
push
cmps
push
fimul
fisttp
int
enter
adc
lock
into
test
es
stos
sbb
mov
mov
scas
jo
cmp
cli
pop
cmp
fs
sub
std
addr16
aas
pop
mov
xchg
or
xor
inc
pop
sbb
xor
mov
add
cli
push
mov
stos
sbb
leave
(bad)
int3
lahf
mov
es
jp
add
xor
dec
sub
clc
jle
shr
movs
xor
ss
lods
mov
addr16
xor
sub
push
mov
retf
or
ins
xchg
(bad)
(bad)
stc
std
mov
iret
dec
je
mov
es
pop
xchg
jecxz
pop
mov
arpl
icebp
xor
test
mov
cwde
inc
adc
sbb
fsubr
sub
dec
jo
repnz
sbb
jns
add
ss
test
outs
call
loopne
fist
pop
sub
(bad)
sbb
xchg
sar
mov
sub
xor
sbb
stos
aas
xchg
add
add
cmc
ret
mov
push
add
icebp
aaa
xor
or
xor
(bad)
dec
movs
iret
xor
adc
xor
or
cmc
cli
dec
mov
mov
ss
dec
mov
ds
add
pop
push
fcom
test
in
movs
sub
add
leave
xor
nop
xor
into
mov
mov
push
adc
rol
adc
popa
fcmovnb
mov
pushw
sbb
mov
inc
push
shl
push
scas
dec
sub
div
pop
xor
mov
jbe
jge
push
or
jne
xor
sub
ins
idiv
xchg
sahf
push
dec
(bad)
in
pop
and
mov
mov
stc
mov
cmps
ja
out
mov
adc
fs
jae
add
inc
push
aaa
int
jnp
push
and
push
sbb
pop
pop
fdivr
shl
push
push
xor
sbb
jmp
lods
das
aad
in
inc
pop
fwait
xor
arpl
sti
cwde
sbb
push
call
and
je
jmp
inc
scas
push
mov
sbb
xor
les
inc
out
push
loopne
jge
leave
retf
test
(bad)
nop
test
push
popa
xchg
and
dec
retf
pop
hlt
popa
or
jnp
scas
push
aas
outs
into
fcom
and
and
pop
dec
add
ds
(bad)
pop
scas
jno
scas
daa
mov
and
and
add
xchg
and
mov
movs
mov
inc
push
je
dec
xchg
adc
(bad)
sub
mov
out
dec
or
shl
add
push
dec
lds
pop
jge
mov
movs
push
sbb
rcl
mov
push
mov
(bad)
ror
(bad)
nop
push
mov
push
push
call
add
mov
cli
pop
and
mov
arpl
sub
or
jl
push
daa
sub
mul
dec
push
loope
ret
lods
ins
aaa
push
movs
cli
inc
pop
adc
sub
mov
push
mov
int
stos
retf
fwait
add
test
pop
push
scas
dec
in
sbb
mov
ret
pop
or
pop
mov
jmp
pop
loope
scas
mov
pop
sub
mov
dec
ss
adc
mov
les
or
add
or
jle
enter
es
rol
adc
lods
jo
mul
sub
jbe
call
out
sbb
clc
xchg
imul
push
sbb
pop
mov
lds
jle
cwde
stos
movs
pop
sub
clc
xor
imul
test
(bad)
sti
adc
adc
pop
(bad)
jp
xchg
(bad)
jae
call
push
push
mov
or
adc
sbb
fidiv
(bad)
inc
mov
out
stos
sahf
loopne
push
pop
daa
retf
and
dec
out
lds
ins
cmps
(bad)
xor
dec
test
sub
dec
bound
pop
scas
xor
jle
scas
gs
mov
jns
fistp
cmp
bound
push
pop
sub
imul
sbb
inc
imul
push
ds
and
sub
jl
cs
xlat
ins
xchg
bound
imul
mov
push
xchg
ins
idiv
sub
cli
(bad)
fs
lahf
js
mov
ret
mov
rcr
jne
fdiv
das
fistp
rcl
xor
test
fwait
mov
sbb
push
popa
test
lock
mov
fsub
xchg
mov
mov
es
pushf
inc
int
sbb
retf
stos
imul
mov
push
inc
dec
arpl
shr
cdq
scas
mov
cs
jo
adc
mov
(bad)
lahf
or
push
test
mov
test
std
push
xor
xchg
enter
mov
inc
fisttp
bound
pushf
ja
cmc
push
sbb
outs
repz
push
ficomp
add
jns
cmc
mov
addr16
out
sub
or
xchg
mov
stc
push
mov
sbb
xor
inc
xchg
or
or
scas
mov
fdiv
scas
pop
cmp
push
mov
shl
adc
add
pop
or
mov
inc
sbb
mov
adc
jmp
(bad)
cdq
repz
clc
bound
jl
xchg
pop
scas
cmc
push
sub
push
shl
(bad)
jg
push
popa
or
jns
ret
pushf
push
es
lods
mov
ret
in
or
mov
mov
test
jnp
hlt
mov
xchg
adc
xchg
fs
push
rol
inc
cmp
xchg
xchg
sahf
ret
je
and
mov
adc
fdivr
stos
enter
sub
sbb
xor
xchg
dec
sbb
add
push
sub
out
icebp
xor
cmp
xchg
xor
mov
mov
sub
test
jle
int
push
nop
jecxz
push
sub
add
dec
push
out
add
popa
mov
sub
aas
mov
call
xchg
mov
ja
div
push
and
jnp
mov
rcl
in
mov
clc
je
add
ss
xchg
repz
icebp
cli
add
icebp
adc
cmps
dec
push
push
fisubr
sahf
(bad)
mov
xor
(bad)
inc
fstp
inc
push
or
mov
and
pushf
mov
dec
es
clc
sub
(bad)
(bad)
stc
xchg
sbb
jl
sub
mov
scas
rol
popf
jg
jecxz
rol
mov
jae
icebp
mov
sar
cli
mov
xchg
mov
pushf
xor
cli
nop
fldcw
scas
dec
xchg
mov
dec
js
push
push
or
inc
add
sbb
lea
ja
dec
idiv
movs
mov
cmps
jl
addr16
pop
cmp
(bad)
xor
int3
and
cmp
pop
fstp
in
(bad)
add
rol
in
inc
sbb
dec
and
jnp
jno
cmp
aaa
xor
and
jle
pushf
inc
pop
jb
mov
mov
mov
pop
pop
pop
cwde
jno
or
ja
mov
or
push
fcom
xchg
ja
jns
push
dec
lea
mov
stos
imul
retf
mov
add
fwait
and
stos
push
push
test
movs
add
adc
adc
xchg
(bad)
mov
pop
push
push
cli
inc
repz
test
outs
pop
lock
mov
pop
enter
pusha
(bad)
in
sar
int
inc
push
or
arpl
xchg
nop
jno
scas
daa
dec
push
dec
jne
xchg
dec
neg
sbb
cmp
xchg
inc
mov
push
dec
mov
icebp
mov
stos
mov
push
ins
arpl
fwait
leave
popf
jno
sbb
(bad)
not
cmps
push
icebp
xor
or
or
cld
addr16
jecxz
pop
xchg
pop
mov
push
outs
sahf
pusha
sbb
sub
dec
mov
aaa
mov
es
test
jns
mov
mov
movs
cld
inc
xlat
pop
je
jle
dec
mov
ds
pop
sub
adc
jns
mov
(bad)
sbb
rep
push
arpl
adc
cmps
jno
outs
popf
push
pop
mov
xor
call
jmp
sub
outs
add
adc
mov
adc
sub
out
xor
scas
mov
ss
mov
fs
test
imul
xchg
in
mov
mov
stos
push
adc
sub
push
lods
cmps
pusha
xchg
or
mul
ss
mov
jmp
xchg
pop
xchg
push
mov
mov
push
inc
mov
das
pop
icebp
out
sub
jno
scas
dec
fld
stos
xor
mov
pop
mov
dec
jnp
loope
push
ins
mov
inc
iret
out
mov
int3
lock
dec
xchg
enter
add
add
push
js
sbb
mov
sub
cmp
popf
scas
push
aad
push
imul
pop
cmp
cs
cwde
xor
test
sbb
xor
shl
nop
add
ss
call
fwait
push
push
out
dec
mov
mov
mov
test
fmul
pop
sar
jmp
mov
xor
ret
jmp
cs
mov
call
out
xchg
pusha
aas
mov
or
cmp
and
xor
sub
push
push
and
inc
mov
into
retf
arpl
pop
dec
dec
mul
nop
cmps
gs
les
loop
aaa
inc
adc
sbb
and
leave
jnp
movs
mov
outs
add
sahf
sub
bound
jg
dec
add
mov
jmp
pop
xor
cmps
mov
sub
mov
adc
or
add
sahf
or
enter
xor
movs
inc
out
out
xor
dec
mov
sahf
out
loop
div
inc
fdivr
cmp
add
push
cmp
xchg
test
aam
sub
out
(bad)
cmp
daa
mov
sub
repnz
enter
outs
in
and
sbb
jl
push
push
out
inc
dec
pop
cmp
xchg
in
adc
std
inc
clc
cmp
xor
mov
jmp
jle
cdq
push
leave
jno
sahf
xchg
in
inc
xor
xor
mov
pop
pop
xchg
xchg
imul
hlt
sar
pop
cmp
mov
inc
es
retf
xchg
add
aaa
jg
retf
or
shl
and
imul
int3
add
(bad)
popa
call
sub
sahf
js
xchg
repz
adc
xor
inc
and
stos
in
jno
in
fst
js
dec
add
and
dec
cmp
outs
sbb
int3
repnz
or
inc
jne
pushf
xchg
loopne
mov
les
adc
xor
push
mov
pop
mov
pop
js
push
xchg
cmp
push
mov
scas
aam
pop
mov
sub
add
les
(bad)
aas
int3
nop
repz
or
scas
scas
xchg
pop
sbb
sti
in
pop
push
mov
arpl
(bad)
(bad)
sub
xchg
push
mov
mov
sbb
jp
fiadd
cmp
(bad)
jnp
ficom
push
aad
sub
pop
xchg
inc
hlt
ret
lods
jo
add
das
sbb
into
push
adc
frstor
(bad)
xchg
jg
dec
xchg
(bad)
push
adc
push
cmp
mul
into
adc
jl
and
adc
or
sbb
xor
enter
cmp
push
xchg
out
sbb
pop
inc
mov
sub
adc
xchg
pop
mov
mov
cmp
aaa
(bad)
jl
push
fdivrp
mov
ds
and
dec
adc
push
cmp
jbe
pusha
pop
mov
xchg
mov
fiadd
adc
mul
xchg
jecxz
test
pop
mov
push
or
gs
xor
add
call
or
std
sub
iret
inc
sub
xchg
xor
sti
or
int
pop
fcomip
sub
mov
jns
push
hlt
(bad)
out
shr
int3
cmp
repnz
lods
adc
cs
mov
xor
and
xchg
mov
cmp
hlt
ret
push
in
xchg
fs
fnsave
adc
push
mov
(bad)
movs
jmp
dec
rcl
ror
dec
cmp
jmp
and
fbld
out
xor
xor
(bad)
retf
movs
stos
add
push
add
mov
(bad)
cmp
xchg
mov
std
aam
add
xchg
xor
jno
add
nop
pop
mov
jle
loope
push
inc
fld
xor
cmps
xchg
push
push
or
dec
into
mov
inc
stos
arpl
add
adc
xor
sbb
xor
rcl
inc
mov
daa
ja
lock
jmp
mov
inc
add
push
push
or
sbb
or
or
mov
and
rcl
add
clc
scas
dec
retf
jl
(bad)
sahf
inc
add
dec
lods
call
cmp
xchg
inc
cmp
push
push
push
and
inc
xchg
pop
pop
out
jmp
imul
sbb
loop
adc
inc
ds
ss
pop
push
test
push
or
aaa
cdq
mov
mov
add
add
jb
mov
ins
aam
nop
inc
(bad)
jb
jecxz
jmp
and
inc
xchg
fisttp
sub
add
lock
test
mov
mov
retf
pop
jp
loop
dec
lods
cmp
aam
jmp
sbb
adc
xchg
push
jmp
add
fld
add
cdq
repnz
xor
jne
imul
and
lods
loop
popa
push
xor
xchg
or
scas
aaa
inc
dec
jg
int3
mov
dec
je
push
inc
inc
cmp
jg
fs
jge
xor
mov
test
ds
ja
imul
adc
retf
push
icebp
retf
dec
test
push
mov
add
mov
(bad)
addr16
outs
add
out
dec
sub
cld
mov
xchg
movs
add
fisubr
arpl
jp
adc
push
and
das
fisttp
inc
das
or
inc
add
aam
mov
and
fisttp
arpl
cmp
sub
scas
push
adc
mov
cmp
inc
dec
mov
push
xlat
mov
adc
and
mov
sub
push
push
sbb
shr
stc
fist
jg
jmp
gs
js
add
push
das
aas
out
test
sbb
ja
test
cli
xor
adc
cmp
and
addr16
push
lds
dec
mov
or
stos
idiv
adc
(bad)
jmp
fmul
push
jb
xlat
cmc
adc
(bad)
fmul
jae
hlt
shr
dec
inc
sbb
or
data16
test
fxch
test
inc
mov
sub
push
inc
sar
(bad)
and
push
mov
sub
bt
pop
lods
dec
cmp
mov
cmp
push
xchg
ss
push
jo
enter
jmp
cs
or
inc
mov
mov
call
fwait
mul
xchg
jl
inc
outs
xor
mov
mov
push
jns
fbld
sbb
movs
pop
shr
retf
inc
data16
mov
shl
retf
inc
call
pop
add
aas
mov
repnz
xor
cmps
xor
cmp
dec
repnz
aas
ret
inc
call
push
ja
fidivr
sub
fcom
retf
mov
xchg
lods
push
sbb
test
or
lock
push
pop
push
add
repnz
mov
xchg
nop
jae
jo
aas
sbb
mov
pop
dec
mov
mov
push
xchg
repz
mov
dec
fisttp
xor
inc
imul
push
jg
add
jns
outs
inc
dec
(bad)
jae
sahf
jg
fisub
fbstp
adc
inc
mov
ins
push
sub
and
hlt
xor
nop
add
xor
push
dec
jge
jo
inc
cmp
mov
dec
cmp
dec
cmp
pop
cmp
push
cmp
imul
cmp
cmp
adc
pop
nop
mov
hlt
arpl
push
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aas
(bad)
jmp
mov
jg
and
aam
sbb
xor
(bad)
xlat
ret
push
sbb
dec
ins
jg
push
push
sbb
mov
add
push
inc
retf
repnz
jne
mov
pop
lock
outs
ja
adc
jne
mov
cs
sti
xlat
(bad)
xchg
ret
jmp
imul
stc
ret
stos
aas
mov
xchg
out
mov
je
cmp
mov
mov
pop
push
call
push
adc
out
xchg
add
jmp
push
and
jmp
sub
mov
std
iret
enter
jae
out
inc
mov
repz
push
ds
pusha
mov
call
out
shl
scas
sti
sub
xchg
push
fnstcw
mov
and
dec
(bad)
shr
pop
jge
aad
pop
and
frstpm(287
pop
xor
and
sti
jg
sub
idiv
cmps
mov
cmp
cwde
adc
ins
sahf
outs
lods
ret
aam
xchg
popf
and
scas
call
dec
ror
ja
repz
fst
lock
dec
imul
push
repz
inc
xchg
movs
stc
sbb
lods
or
xchg
sub
mov
cdq
loopne
test
xchg
push
pop
fisubr
jnp
imul
jl
and
scas
sahf
test
ins
or
in
(bad)
int
push
xchg
lds
rol
push
in
cmp
xchg
jp
xchg
icebp
daa
retf
call
and
jne
jb
dec
xchg
addr16
(bad)
loop
add
cmps
cmps
push
mov
add
sub
into
outs
add
mov
aas
dec
jmp
jae
jp
jbe
push
jmp
sti
jmp
sbb
test
mov
mov
inc
cmp
scas
les
mov
mov
ds
mov
lds
pop
arpl
xlat
mov
pop
push
in
xchg
(bad)
dec
sti
mov
imul
push
aad
(bad)
adc
pop
das
pop
dec
(bad)
push
mul
jo
in
rol
fcom
cmp
lds
sbb
popa
jg
call
mov
ret
jmp
imul
mov
addr16
retf
aam
jmp
std
les
xor
mov
jmp
out
stos
adc
inc
stc
mov
pop
jbe
outs
stc
stc
sub
mov
pop
enter
xlat
shr
std
sub
cs
adc
jb
loopne
stos
add
rcl
sub
xchg
mov
out
xchg
lods
jle
jl
or
xor
ret
mov
iret
push
xor
in
xchg
cs
repnz
xor
jg
pop
inc
mov
or
add
xchg
enter
push
in
and
ins
sub
in
rol
rcl
invd
jmp
daa
out
int
retf
pop
iret
aas
hlt
cmc
sbb
cli
or
ret
inc
mov
push
mov
adc
and
shl
add
dec
inc
xor
sub
(bad)
(bad)
xchg
arpl
mov
add
je
in
mov
rcl
arpl
das
enter
fwait
inc
xor
and
repnz
rol
in
xchg
adc
sbb
icebp
inc
cmp
adc
inc
adc
repz
retf
lea
sahf
repnz
mov
sub
cmp
into
mov
jecxz
adc
sahf
pop
jmp
sub
jns
sub
jmp
es
out
adc
inc
je
jecxz
push
mul
(bad)
repz
stos
push
ret
test
rol
dec
popa
inc
xchg
enter
sub
(bad)
and
(bad)
sbb
mov
adc
ins
loop
or
loop
loop
sbb
pop
cwde
in
push
retf
sti
cld
(bad)
mov
call
movs
xchg
inc
cmp
xor
ret
xchg
and
add
out
push
inc
adc
jmp
lea
sub
(bad)
enter
loopne
jl
and
inc
sub
push
inc
retf
mov
or
cdq
aas
push
inc
inc
les
(bad)
cwde
adc
sub
dec
out
(bad)
icebp
inc
cmp
inc
pushf
popf
test
cdq
mov
push
mov
loope
push
(bad)
push
pusha
cmp
scas
mov
jp
and
fs
dec
imul
push
fcmove
aam
push
adc
stos
not
repz
dec
repnz
dec
lahf
jp
pop
xchg
hlt
cmp
and
push
clc
inc
adc
or
or
push
and
aam
dec
int3
or
adc
scas
pop
push
sahf
sub
add
mov
int
in
int3
xchg
push
sbb
(bad)
rcr
lods
retf
cmps
mov
mov
mov
mov
dec
sahf
popf
aaa
push
leave
aas
jns
std
ja
push
mov
scas
cmps
cmps
outs
mov
and
jmp
jnp
repnz
sbb
gs
ins
ds
dec
xlat
mov
stos
daa
cmp
or
pop
and
test
mov
xor
mov
mov
push
std
and
sub
js
repnz
call
lahf
push
xor
(bad)
push
div
ins
idiv
cmp
sub
pop
sahf
popf
xor
jmp
das
fadd
sbb
add
add
inc
leave
pop
shl
mov
outs
jg
into
mov
push
or
adc
pushf
xchg
pop
cmc
pop
js
das
test
or
neg
enter
mov
mov
into
mov
adc
sbb
std
jns
das
retf
sbb
int
out
xchg
aaa
aaa
dec
jae
or
dec
aam
cmp
aam
scas
pop
inc
ds
pop
pusha
hlt
ins
dec
iret
stos
xor
xor
and
movhps
dec
bound
std
push
xchg
test
jecxz
icebp
fisub
jmp
or
adc
push
fisub
xchg
inc
push
add
xor
cmp
ror
dec
mov
pop
inc
std
clc
pop
push
stos
cmp
ins
xchg
int3
jecxz
call
imul
mov
mov
ja
xchg
pop
pop
sti
pushw
pop
mov
aam
aam
das
pop
jge
add
call
xchg
xor
test
dec
(bad)
pop
pop
stos
(bad)
iret
js
mov
add
stos
imul
sbb
and
repz
push
jecxz
out
push
jl
xchg
push
cmp
call
test
add
push
pop
xchg
adc
push
mov
adc
xchg
dec
mov
frstor
stos
aaa
imul
(bad)
jmp
add
mov
and
push
adc
or
add
hlt
xor
push
pop
fsub
movs
ret
cmp
lahf
mov
mov
popa
enter
rcl
adc
and
dec
lea
mov
push
in
cwde
enter
das
lds
and
dec
pusha
idiv
jg
jae
jge
into
add
xchg
or
pop
push
fidivr
sahf
xchg
push
shr
push
scas
mov
sti
adc
arpl
addr16
xchg
inc
dec
mov
or
(bad)
adc
mov
mov
movs
daa
adc
movs
adc
clc
jne
pop
ror
and
arpl
aam
inc
ret
adc
cmp
inc
jmp
adc
outs
sbb
cli
ins
outs
adc
dec
loop
pusha
inc
jl
shl
cli
dec
test
scas
mov
push
pop
inc
adc
pop
mov
pop
es
inc
leave
(bad)
mov
add
xchg
aad
sbb
test
shr
bound
loope
mov
sbb
rol
cmp
push
cmps
scas
scas
dec
out
dec
(bad)
jle
inc
into
idiv
call
sbb
mov
fs
dec
ins
mov
push
neg
(bad)
or
xchg
popa
mul
jecxz
pop
pop
adc
jbe
sbb
mov
shr
dec
push
and
xor
push
lds
dec
enter
cdq
push
xlat
popa
sbb
pop
add
add
inc
test
imul
cmps
iret
das
inc
rcl
add
add
mov
pop
sub
retf
jmp
fsubr
pop
stos
and
lods
sub
pop
add
dec
jmp
popa
pusha
sub
mov
jl
out
call
add
xchg
shl
rcl
mov
mov
or
sub
mov
fadd
cmps
call
dec
push
icebp
movs
mov
fdiv
push
dec
pop
xor
pop
rol
(bad)
pop
pop
movs
push
mov
xchg
push
repz
stc
into
sbb
sub
addr16
enter
mov
mov
icebp
mov
ds
sub
dec
xor
and
jbe
or
xchg
sub
mov
jmp
mov
(bad)
cli
adc
sbb
jae
stc
mov
adc
fist
lock
and
dec
scas
jg
aam
pop
test
pop
test
es
add
fwait
push
or
xchg
or
mov
pop
lods
add
fld
push
adc
sub
mov
inc
add
mov
mov
jg
mov
das
push
sub
and
mov
mov
iret
retf
mov
or
repnz
and
mov
dec
fist
arpl
push
ss
dec
ret
aam
retf
es
call
xor
xor
inc
sbb
aad
sub
out
pop
cmp
mov
mov
jge
sbb
adc
push
aad
mov
push
cmps
dec
stos
jg
push
les
mov
jg
lock
jge
sti
lahf
mov
add
sbb
btr
aaa
loopne
clc
cwde
enter
add
pop
dec
(bad)
jb
test
inc
mov
retf
hlt
ja
sti
ret
mov
jns
dec
jno
pop
jmp
push
dec
je
xchg
loope
fstp
xor
das
fisttp
mov
xor
(bad)
adc
scas
(bad)
in
cwde
sub
je
jmp
sub
mov
daa
aas
inc
adc
enter
adc
fs
inc
retf
out
push
inc
test
cdq
push
scas
das
mov
(bad)
mov
push
or
lahf
push
rcl
pop
pop
das
shr
jae
mov
mov
les
int3
rcr
sub
fist
push
mov
test
js
dec
pop
out
jl
push
sub
(bad)
push
push
pop
adc
adc
adc
not
sub
sbb
or
daa
xchg
cli
loopne
mov
stos
xor
xchg
xchg
pop
jmp
call
xchg
jle
jle
aas
add
pop
stc
mov
aaa
mov
xchg
popa
aam
mov
mov
je
pop
imul
(bad)
dec
or
aaa
push
mov
dec
xchg
xchg
scas
mov
add
mov
repz
fisub
inc
cs
sub
rol
ins
pop
repz
iret
in
mov
mov
out
sbb
or
cmp
daa
lods
addr16
lock
mov
test
pop
push
xchg
pusha
jmp
lods
push
nop
daa
rol
pop
repnz
sbb
mov
mul
sbb
xor
jge
sar
push
jo
cmps
add
ret
xor
mov
cli
pusha
pushf
and
mov
ins
and
les
sbb
mov
push
and
test
mov
je
xchg
in
sub
push
js
(bad)
or
mov
pop
outs
mov
cmp
retf
adc
mov
ds
lahf
mov
movs
movs
mov
push
adc
mov
js
aas
clc
dec
or
push
sbb
sub
xchg
popf
cdq
jmp
push
jmp
dec
add
jmp
daa
shr
sbb
repnz
dec
vmulpd
mov
push
in
in
dec
enter
jo
retf
fcmovnb
out
ja
addr16
test
rol
or
es
push
inc
stos
repz
lds
add
or
fcom
dec
ss
out
push
test
sbb
and
dec
xor
iret
fsin
xor
add
fimul
es
popf
stos
pop
imul
mov
xor
mov
test
add
xor
dec
lahf
push
adc
jle
add
arpl
cmps
xchg
cld
repz
push
test
jmp
(bad)
fisttp
jmp
jae
scas
dec
jmp
imul
dec
sub
push
test
adc
xor
xchg
mov
mov
sbb
ja
daa
mov
and
aaa
out
outs
push
into
pop
cmp
cmp
(bad)
in
push
xor
fisubr
adc
xor
pop
mov
add
jp
jmp
cld
inc
mov
stc
xor
adc
adc
repz
outs
aas
fild
enter
xor
ins
push
adc
and
mov
cmp
stc
sbb
add
and
shl
sub
cmp
dec
shl
call
daa
sub
daa
push
push
mov
ja
push
push
ja
mov
dec
das
fiadd
aas
push
fadd
add
fdiv
stos
xlat
sahf
pusha
xchg
xlat
push
das
pop
push
bnd
jmp
addr16
sbb
sub
test
(bad)
cmp
test
mov
mov
jae
sub
in
iret
hlt
sub
mov
pop
sbb
mov
scas
pop
mov
pusha
dec
dec
and
sbb
adc
cwde
cmp
nop
test
inc
test
xor
fild
sti
fsubr
int3
aad
mov
sahf
test
jbe
inc
mov
add
cmp
dec
test
dec
jl
mov
jbe
and
sbb
test
sbb
jp
dec
stos
xor
xchg
std
scas
fs
mov
aad
xor
xchg
mov
rcl
outs
mov
mov
xor
sar
jle
jno
mov
or
jle
repnz
in
aaa
rcl
jo
and
cmp
ins
mov
fucomi
aaa
pop
push
fs
lock
mov
jecxz
mov
aas
mov
pop
xchg
fsub
dec
sub
gs
loop
popf
ss
repnz
mov
xchg
mov
je
arpl
mov
fwait
xor
push
inc
xor
mov
mov
dec
outs
out
jne
mov
jmp
xor
xchg
sbb
adc
mov
jnp
xchg
dec
mov
sub
and
stos
int
mov
push
sahf
cmps
mov
push
mov
dec
inc
out
mov
pop
sub
adc
xor
lock
fist
dec
xchg
dec
adc
enter
(bad)
sbb
and
inc
in
mov
dec
xchg
in
cs
push
js
iret
xlat
adc
loop
test
xor
cmc
sbb
xchg
add
pushf
sahf
sub
les
sub
xchg
sbb
jnp
test
mov
pop
sahf
mov
xchg
popa
jae
jb
repz
in
push
fsubr
adc
pushf
mov
aas
mov
shl
mov
out
sub
or
jp
dec
lahf
mov
aaa
adc
or
gs
push
scas
je
xor
sbb
test
push
sub
sub
fsubr
inc
test
repnz
pop
ret
retf
mov
jge
xchg
add
jae
jo
adc
pop
xchg
adc
outs
cs
js
inc
shl
or
aaa
cld
sti
mov
xor
loope
mov
add
push
add
xchg
jbe
adc
push
add
cmps
lahf
mov
mov
pop
ins
(bad)
add
dec
and
xor
jnp
ins
sbb
inc
pusha
add
pop
add
aad
jp
in
xchg
pushf
inc
cwde
jg
in
pop
scas
pop
jmp
or
iret
and
xchg
cmp
in
shl
push
out
rcr
mov
add
enter
or
sbb
lahf
and
scas
push
sti
xchg
xchg
adc
jle
in
jmp
ins
pop
sbb
mov
ficom
outs
ret
push
pop
push
dec
xor
stc
dec
div
fist
aas
xchg
xchg
sub
sbb
mov
push
ret
sbb
xor
add
push
es
loope
cmp
push
gs
pop
ss
inc
imul
stos
push
jo
test
add
sbb
mov
pusha
dec
xor
sbb
push
mov
out
push
leave
add
ss
mov
scas
xor
adc
xor
jl
aam
push
aad
(bad)
cmp
iret
pop
xchg
push
cmp
sub
jae
test
mov
mov
iret
inc
and
dec
jmp
fistp
jmp
jge
jbe
push
sbb
dec
imul
rol
add
xchg
iret
imul
lods
mov
xchg
pop
pop
imul
stos
aaa
call
push
add
hlt
(bad)
mov
lods
push
push
test
mov
mov
xchg
ret
adc
or
es
pop
call
dec
div
mov
add
xlat
maskmovq
idiv
scas
ins
add
jb
hlt
or
mov
(bad)
sbb
mov
push
ss
cmps
or
(bad)
push
dec
and
aaa
dec
mov
add
mov
mov
mov
hlt
mov
push
or
pop
mov
not
fimul
loope
push
call
sub
addr16
mov
(bad)
fst
pop
dec
xchg
out
lods
adc
stos
add
xchg
inc
mov
and
js
rol
push
mov
imul
js
pop
cwde
mov
cmp
out
lahf
cmc
push
sbb
push
scas
jmp
push
imul
xchg
popa
scas
sub
neg
or
mov
and
jp
js
inc
mov
je
mov
hlt
push
adc
pop
ficomp
inc
inc
lock
pop
mov
mov
mov
pop
mov
add
clc
repnz
sbb
pop
ja
dec
test
mov
dec
pop
sub
mov
jb
and
out
or
pushf
lock
gs
and
mov
adc
std
test
mov
mov
push
cmp
div
call
adc
popa
ret
mov
mov
mov
outs
enter
fcomip
stos
or
iret
inc
das
mov
not
dec
xchg
inc
stos
nop
jae
mov
stos
mov
jecxz
add
lock
enter
ja
mov
add
daa
xor
aam
dec
outs
stos
pop
lods
mov
inc
or
xchg
add
icebp
sub
sar
pop
cmp
and
mov
popa
inc
mov
movs
mov
in
imul
and
retf
pop
inc
es
pop
stc
adc
ins
xor
xor
mov
mov
mov
adc
or
cmps
in
fistp
mov
cmp
inc
push
pop
lea
in
sar
scas
bound
dec
iret
dec
xchg
out
xchg
icebp
pop
mov
or
leave
cmp
arpl
movs
outs
xor
ret
mov
test
dec
sbb
push
out
xor
in
xchg
jno
xor
outs
mov
mov
cmp
add
lods
add
cmp
xchg
jge
gs
pop
inc
jl
cmp
mov
cmp
lock
fld
sti
mov
dec
pushf
push
mov
lods
(bad)
pop
movs
cmp
push
fdivr
jl
add
fcom
scas
lods
jmp
push
sub
mov
adc
test
sub
aam
leave
loopne
pop
les
jle
sti
pop
jle
xrelease
or
xor
inc
xor
loope
push
adc
in
sbb
jb
pop
push
into
push
inc
dec
out
cdq
or
nop
xchg
mov
arpl
aaa
daa
cmp
cmp
lock
and
hlt
dec
and
or
out
out
xchg
loop
mov
je
mov
aaa
xor
ror
pusha
cmp
lods
sub
mov
scas
xlat
fmul
pop
mov
xor
not
mov
or
inc
cwde
mov
pop
out
pop
scas
push
lock
dec
(bad)
inc
bnd
bound
jbe
int3
xlat
iret
mov
loopne
shl
out
adc
sti
jnp
in
fbstp
add
mov
add
ja
adc
cmp
adc
mov
add
lods
es
loope
nop
inc
idiv
icebp
mov
push
adc
movs
xor
in
sahf
jecxz
jge
mov
imul
ins
dec
popf
inc
je
inc
and
xchg
leave
cld
rol
xchg
sbb
pop
push
xchg
popa
mov
add
call
push
dec
sub
gs
ret
sbb
add
pop
xor
imul
add
in
ins
jo
adc
xlat
in
cmps
push
cmp
stos
jl
sahf
xor
popa
cmp
adc
out
call
and
pop
sub
sub
xchg
pop
cmp
add
push
out
and
test
mov
cmp
rcl
xchg
iret
inc
sbb
dec
push
jno
(bad)
dec
aad
cmp
push
cmp
pop
dec
or
push
xchg
mov
stos
psraw
dec
xchg
(bad)
and
and
cmp
inc
xor
xchg
dec
or
jnp
push
pop
outs
pop
mov
stc
jmp
lods
cmc
pushf
adc
lahf
es
jne
cs
cmc
and
das
dec
push
pusha
jmp
jle
push
or
mov
repz
and
mov
mov
pop
fmulp
stc
push
icebp
jg
in
jg
push
cwde
xor
xchg
ds
cld
cmp
jbe
dec
pop
and
rol
adc
sbb
jmp
push
push
add
mov
test
std
dec
xor
and
scas
sub
fchs
outs
dec
cmp
aaa
sub
test
mov
and
std
add
mov
(bad)
daa
adc
cmp
inc
retf
mov
aas
add
outs
inc
xchg
xor
in
adc
push
popf
aaa
push
test
ja
js
fcmovnb
clc
jae
mov
aaa
add
repnz
jnp
inc
stos
mov
mov
inc
cmp
pop
pop
test
ret
fsubr
and
hlt
adc
scas
adc
shr
mov
scas
pop
lea
pop
(bad)
mov
mov
stos
mov
or
xchg
dec
add
icebp
and
sub
(bad)
call
add
adc
daa
mov
les
add
mov
jg
daa
inc
ja
xchg
push
outs
xchg
mov
mov
add
mov
push
mov
hlt
ja
icebp
fstp
shr
xor
dec
aad
mov
imul
sub
dec
jmp
xor
mov
push
sbb
jne
or
mov
push
ror
(bad)
pop
aas
push
es
push
pop
xrstor
test
lods
pop
lahf
sub
shl
pop
add
out
xchg
inc
fdivr
dec
xchg
je
mov
inc
adc
iret
leave
xchg
xor
add
xchg
mov
xchg
sub
shl
popa
and
retf
sbb
das
stos
adc
repnz
mov
enter
add
pusha
sub
mov
jge
mov
jge
push
push
cmp
jmp
pusha
mov
in
je
sbb
jl
dec
out
dec
adc
lds
xor
in
jp
and
cmp
push
lea
call
jno
mov
adc
push
pop
xchg
stos
cld
pop
sbb
inc
(bad)
lock
fild
sahf
add
adc
sbb
out
(bad)
loopne
adc
dec
div
or
ficom
jmp
pusha
fnstsw
inc
xchg
adc
cmp
mov
and
popa
xchg
into
test
gs
bound
mov
and
add
jecxz
mov
inc
ja
int
and
clc
fs
jne
jne
add
(bad)
mov
pop
imul
fdiv
mov
cs
add
or
mov
movaps
js
xchg
mov
(bad)
stc
lods
xchg
inc
adc
lahf
or
add
das
dec
mov
mov
inc
or
rcr
sbb
test
pop
sub
add
outs
mov
mov
adc
add
addr16
(bad)
fdiv
test
sti
sbb
or
pop
shr
stos
mov
pop
bound
int3
mov
outs
mov
inc
bound
fnstcw
or
lock
mov
pop
pusha
jno
ins
add
adc
stc
add
cli
add
pop
das
jge
inc
retf
in
pop
mov
pop
out
or
xor
fucomi
jnp
stos
mov
das
push
pop
inc
cmp
out
test
dec
jecxz
mov
(bad)
xchg
push
xchg
jmp
dec
out
sbb
pop
jl
sbb
ficomp
(bad)
cli
out
sub
bound
test
jge
dec
addr16
pusha
test
arpl
mov
mov
sahf
ja
ins
fisub
xlat
das
push
jecxz
test
mov
lods
cmp
stc
or
and
std
push
repz
addr16
rep
push
imul
dec
pop
loope
sbb
push
and
push
push
pusha
fisubr
cmp
push
aaa
and
sbb
xchg
aas
loopne
std
call
int3
jg
mov
stos
jecxz
imul
adc
sbb
pop
sbb
mov
call
mov
retf
push
ins
jno
leave
test
test
jno
arpl
jecxz
add
dec
ss
xchg
pop
adc
inc
mov
into
or
lods
adc
ss
ins
scas
or
add
mov
retf
shl
mov
stos
ror
movs
mov
es
sbb
jo
push
add
cmp
retf
stos
retf
xchg
lock
cli
push
sub
in
movs
add
sub
add
movs
pop
out
or
je
or
sub
les
or
push
cmp
cli
loop
(bad)
jle
pop
aas
leave
inc
fimul
pop
in
inc
pop
add
pop
dec
nop
cmc
fld
lods
mov
leave
test
jo
out
loopne
mov
nop
jg
add
jp
stos
daa
int3
repnz
push
xor
call
out
mov
sahf
retf
mov
ret
mov
mov
lea
jmpw
pop
mov
push
pop
xchg
and
dec
cmp
loopne
(bad)
pop
in
je
and
imul
pop
fidivr
cmp
push
in
int
jle
mov
sub
iret
add
ror
and
loope
call
pop
jae
imul
mov
retf
shl
fld
jg
pop
pusha
sti
jle
inc
xor
adc
sub
inc
adc
ja
push
and
mov
push
mov
ss
sbb
jnp
stos
add
jmp
dec
test
aad
mov
jp
pop
push
dec
xor
dec
iret
jns
dec
push
rcr
mov
call
jmp
mov
jge
ins
mov
loopne
pop
cmp
cmp
push
imul
ds
push
arpl
loopne
sahf
into
ins
jmp
jno
(bad)
adc
sub
cmp
repz
outs
and
jb
and
mov
jns
das
sbb
lods
js
mov
xor
add
test
addr16
pop
mov
nop
inc
cmp
push
ret
test
sub
mov
push
(bad)
fldcw
push
adc
push
dec
sub
test
cli
(bad)
out
cs
loop
cmp
xchg
jns
mov
jnp
test
out
jno
out
ror
dec
in
xchg
push
and
ret
sub
cmps
loopne
js
mov
jns
pop
xor
es
outs
je
sub
loope
or
cmp
pop
repz
mov
sub
xchg
jae
add
inc
repnz
inc
cwde
xchg
push
or
sbb
aaa
xor
xchg
arpl
call
inc
call
sbb
(bad)
mov
dec
inc
push
stos
(bad)
mov
mov
mov
or
push
or
sub
(bad)
jge
data16
pushf
and
mov
or
dec
or
mov
mov
push
(bad)
mov
fild
xor
add
pop
mov
mov
mov
repnz
not
sub
shl
(bad)
std
jg
fwait
mov
push
sub
mov
add
add
fcmovnb
add
jnp
xor
ds
test
cwde
lods
fs
aaa
adc
and
inc
out
adc
fs
test
in
cmc
outs
push
jae
or
dec
add
and
or
pop
mov
leave
xor
in
ror
mov
xchg
leave
or
mov
ret
rcl
pop
lea
ucomiss
(bad)
aam
mov
sub
jae
lea
pop
out
pop
mov
mov
fadd
jl
fwait
outs
daa
sub
inc
sub
data16
int
mov
outs
cmp
and
add
push
aas
cmp
pop
repz
cmp
cmp
cmp
mov
cmp
rcl
cmp
jno
fidiv
xchg
jnp
sub
jl
xchg
mov
jmp
sub
push
fistp
dec
dec
inc
adc
stos
bound
jnp
pop
std
daa
jp
test
das
icebp
fistp
jg
lea
iret
adc
ins
push
push
lea
mov
adc
and
ret
retf
mov
jbe
sub
cmp
fld
adc
retf
and
pop
cmc
adc
pop
test
cwde
ja
es
pop
pop
fst
loopne
dec
cmps
and
mov
lock
mov
cli
sub
frndint
mov
pop
jle
xchg
xchg
mov
xchg
fisubr
xor
pop
icebp
enter
imul
adc
jmp
add
pop
das
es
imul
sar
add
int
pop
add
and
mov
mov
cmps
sbb
mov
ror
and
jl
stos
rcr
pop
or
fnstenv
leave
xor
xor
sub
mov
mov
push
jl
push
push
aam
aas
mov
mov
mov
push
pop
cdq
sar
push
or
mov
push
inc
jno
out
or
stc
in
imul
gs
inc
push
and
ins
inc
sbb
xor
mov
ret
lahf
adc
push
jns
shl
imul
xchg
(bad)
jnp
jecxz
iret
push
scas
jmp
mov
shl
jns
call
scas
dec
and
xchg
jns
xor
xor
fcomp
push
and
cwde
xor
mov
push
xchg
rol
adc
dec
mov
retf
pop
test
mov
sbb
fld
mov
cmps
out
jge
mov
sbb
inc
jb
idiv
sar
jp
mov
call
or
outs
mov
sti
jge
mov
jge
xchg
call
addr16
mov
mov
fwait
(bad)
lock
sbb
ret
ins
or
sti
ins
test
sub
(bad)
cli
pop
adc
pop
es
aaa
push
scas
popf
adc
mov
sbb
jle
out
repnz
imul
add
retf
or
js
adc
adc
jecxz
clc
mov
mov
call
test
std
aas
xor
in
inc
xlat
push
cli
ins
not
jb
mov
enter
(bad)
test
retf
sahf
(bad)
in
lock
sbb
xlat
iret
scas
inc
pusha
dec
rol
pop
dec
and
jg
shr
or
into
cs
rcr
in
mov
fadd
paddusb
repz
das
mov
mov
jns
lds
inc
cdq
jge
mov
out
std
call
add
jle
jno
cli
inc
mov
lahf
inc
inc
dec
iret
addr16
jg
retf
aam
ret
cmps
and
lods
scas
pop
scas
shr
scas
int
cmc
jle
fwait
jg
leave
sub
and
sub
jnp
fild
dec
std
xchg
lds
fcom
aad
push
loope
cwde
out
call
fwait
dec
xchg
mov
push
dec
dec
rcl
outs
or
push
dec
dec
fnstsw
daa
cli
imul
push
or
adc
push
mov
or
cmps
or
test
sbb
std
aas
jecxz
adc
mov
imul
sbb
cld
xor
mov
movs
pop
sbb
mov
loopne
ins
jb
dec
mov
retf
pop
repnz
cmp
or
retf
mov
es
xchg
arpl
call
pop
push
mov
mov
push
jae
xchg
imul
xchg
sbb
fld
cmp
mov
test
xchg
pushf
push
ret
mov
mov
cwde
inc
ins
add
shl
(bad)
mov
pop
mov
jne
jno
push
pop
out
xor
and
(bad)
pop
mov
push
inc
adc
(bad)
stos
mov
std
or
in
and
mov
sbb
fist
repz
dec
iret
sti
inc
stos
mov
mov
lods
ja
push
cmc
in
and
and
cmps
std
daa
inc
sbb
data16
test
push
mov
fbld
sub
sub
mov
sbb
inc
and
mov
in
lods
xchg
push
mov
sbb
sti
leave
icebp
push
pushf
dec
out
retf
test
sahf
or
clc
rep
add
xchg
mov
xor
cdq
not
mov
inc
xchg
(bad)
inc
sbb
ror
mov
sar
jl
adc
retf
and
ja
rcr
dec
push
enter
and
jmp
ds
mov
sub
inc
and
stos
or
(bad)
push
adc
jg
test
out
lods
mov
pop
inc
sbb
(bad)
dec
pop
int3
call
mov
jl
add
inc
bnd
adc
and
mov
jnp
je
ret
fcom
add
fild
mov
aas
dec
pop
sahf
pop
mov
add
xor
ins
jno
addr16
mov
outs
outs
loope
inc
jle
jmp
xchg
push
and
adc
retf
ins
and
cwde
leave
test
and
mov
adc
jbe
int3
retf
std
enter
push
mov
repz
mov
mov
mov
ficom
mov
mov
xor
xchg
shl
lea
sbb
leave
lods
icebp
repnz
loope
cwde
sub
add
add
add
ror
stc
rcr
int
add
inc
push
clc
dec
mov
call
adc
idiv
jmp
outs
adc
adc
pop
into
sub
int3
imul
mov
stos
pop
rol
imul
sbb
mov
push
sub
jp
or
cmp
ror
cmp
sub
mov
aas
aad
xchg
dec
neg
sub
outs
pop
pop
xchg
aam
adc
fisub
or
dec
hlt
sub
arpl
pop
dec
or
jp
test
adc
xor
mov
mov
add
imul
adc
fs
cwde
cmp
sub
and
mov
stos
xchg
cmp
rol
dec
cmp
or
loopne
aas
js
xchg
or
addr16
ror
idiv
repz
bound
loopne
sahf
in
or
rol
enter
inc
shr
icebp
(bad)
outs
test
daa
xchg
pop
jo
sbb
imul
pop
mov
xchg
mov
test
add
dec
dec
sub
(bad)
je
or
not
pusha
movs
push
push
jp
stos
add
xor
aad
xchg
jmp
int
mov
sbb
int
jns
dec
xchg
sti
dec
in
lock
pop
lea
cmc
or
pop
retf
mov
cmp
sahf
mov
ret
retf
dec
popa
sbb
push
iret
inc
cmp
pop
push
pop
sub
jae
rcr
dec
jg
outs
xor
sbb
ja
fs
stos
jp
fidivr
aaa
xchg
addr16
arpl
test
in
inc
mov
call
sub
pushf
scas
data16
ds
retf
test
push
or
addr16
push
retf
inc
push
add
loop
mov
mov
push
out
loope
stos
xor
jge
mov
cmp
mov
adc
sub
aas
mov
pop
enter
push
dec
push
pushf
add
xor
int3
repz
lods
add
je
inc
push
or
retf
stos
pop
daa
(bad)
cmps
pop
jl
and
jp
ror
(bad)
and
shr
xor
inc
inc
push
push
xchg
push
(bad)
sahf
into
icebp
ret
lea
push
pop
jne
(bad)
icebp
scas
add
xor
pop
or
das
(bad)
mov
push
xchg
push
mov
sub
or
scas
mov
popf
or
mov
mov
inc
xlat
scas
test
repnz
xchg
outs
mov
mov
aaa
es
mov
push
out
dec
dec
mov
inc
mov
stos
pop
aas
dec
gs
cmp
push
dec
mov
ja
(bad)
sub
xor
and
add
sub
pusha
ror
not
inc
and
nop
(bad)
mov
push
int
jp
fdivr
gs
dec
sub
push
jae
mov
inc
std
inc
mov
push
gs
push
jp
js
dec
cmp
aas
cmc
xlat
cld
mov
pop
les
pusha
mov
js
xchg
adc
pop
and
sub
cmp
jl
in
mov
sub
push
mov
daa
(bad)
mov
test
das
das
dec
mov
adc
and
cmp
loop
pop
out
mov
inc
loopne
retf
pop
std
aad
test
iret
retf
sub
xchg
imul
mov
dec
sar
shufps
push
dec
inc
fstp
pop
mov
sub
hlt
js
rcr
fiadd
ja
ds
push
xor
retf
inc
push
movs
(bad)
push
aaa
xchg
jne
ret
cmp
lea
test
xchg
out
push
test
mov
bound
fnstcw
loopne
and
sbb
mov
sub
ret
mov
call
pop
(bad)
mov
mov
sbb
jns
add
dec
mov
aam
mov
push
fimul
sbb
mov
sbb
dec
fidivr
dec
repz
nop
xchg
call
ror
cmp
dec
jmp
sub
aaa
imul
mov
enter
daa
mov
retw
sbb
inc
and
stos
mov
mov
adc
cwde
push
push
xchg
das
dec
cs
mov
xchg
call
inc
cwd
mov
mov
loopne
sbb
push
mov
fsub
push
in
jo
loop
stos
pop
push
test
outs
mov
leave
push
shr
std
outs
daa
sbb
shl
pop
inc
push
jmp
addr16
add
mov
pop
jecxz
mov
mov
adc
jmp
(bad)
lods
or
and
imul
enter
jg
movs
inc
push
mov
(bad)
lods
scas
retf
or
leave
and
or
dec
in
dec
xchg
(bad)
aaa
inc
push
mov
movs
jecxz
xor
xchg
mov
sbb
xchg
test
sti
hlt
jno
(bad)
or
(bad)
rcr
add
mov
sub
test
outs
sub
push
xor
loopne
inc
aas
xchg
mov
mov
arpl
movs
jmp
xlat
pop
(bad)
xor
xor
hlt
clc
add
cmp
push
cld
and
jae
xchg
shl
aas
mov
out
out
arpl
mov
pop
add
ret
ins
into
sbb
sub
add
stos
mov
scas
scas
jmp
clc
inc
jo
js
retf
jbe
scas
xchg
fucomi
sub
add
mov
mov
ror
arpl
pusha
mov
mov
scas
or
xor
mov
sbb
(bad)
mov
out
in
scas
daa
inc
ds
repz
sbb
add
cmp
or
clc
add
sbb
mov
test
mov
sti
aaa
xchg
inc
sbb
push
(bad)
cwde
xchg
stos
and
mov
out
and
addr16
sbb
ins
shr
call
sub
and
jmp
fld
xlat
xchg
dec
mov
and
cmp
push
stos
imul
adc
dec
dec
mov
imul
icebp
cwde
and
iret
xchg
lahf
outs
ss
mov
or
in
test
or
pop
xchg
imul
xlat
and
mov
ffreep
xchg
aam
stc
(bad)
xchg
jle
pop
sbb
sbb
mov
scas
mov
and
mov
(bad)
cmp
xchg
push
ds
jns
add
cmc
dec
ss
mov
test
push
and
jne
pop
add
sbb
daa
xchg
mov
cmp
clc
inc
adc
das
shr
xor
dec
(bad)
cmp
dec
mov
pop
out
enter
test
or
and
mov
int
xor
lods
mov
xchg
repz
icebp
lock
aas
int3
xor
ret
xchg
leave
hlt
add
addr16
xlat
cmp
mov
add
inc
fst
pop
sbb
jmp
imul
jns
mov
cmps
imul
jnp
shl
sub
mov
out
adc
dec
mov
movs
jl
mov
push
sbb
pop
xchg
mov
loop
test
mov
nop
shl
push
sub
aaa
adc
iret
movs
sbb
leave
or
aaa
pop
stos
scas
push
xchg
pop
mov
pop
push
in
xchg
pop
inc
loopne
aad
inc
mov
or
fsubr
pop
inc
xchg
mov
adc
pop
daa
loopne
setne
ret
jmp
out
stos
nop
(bad)
ret
inc
and
add
mov
adc
mov
aad
inc
jmp
jne
retf
dec
jbe
xor
push
and
(bad)
cdq
xor
cmp
out
add
clc
push
push
(bad)
sbb
inc
mov
gs
xor
test
xchg
push
inc
lock
jno
fs
pop
loopne
push
push
push
dec
xchg
scas
cmc
adc
mov
das
sti
mov
ret
stos
or
xchg
add
inc
xor
arpl
add
pop
pop
inc
loop
cwde
fisub
xor
or
mov
dec
pusha
ret
cmp
pop
jg
fld
test
fadd
stc
repz
mov
sub
xchg
out
xchg
sahf
jmp
adc
xor
jl
out
mov
add
dec
outs
(bad)
sub
(bad)
(bad)
stos
and
mov
mov
fdivr
cmps
mov
and
addr16
imul
dec
pop
repz
lods
inc
inc
jmp
rol
sub
ret
in
stos
aad
add
test
cwde
jecxz
xchg
retf
add
mov
pop
jae
daa
mov
push
shr
mov
dec
add
mov
aam
scas
aas
scas
and
addr16
cmps
mov
sti
push
rcr
and
sbb
and
ins
dec
ins
inc
and
pop
pop
jle
xor
sbb
push
aad
sbb
add
movs
jae
push
mov
mov
sti
jmp
pop
mov
popa
dec
cs
xchg
jnp
cmc
add
mov
sahf
test
xor
xchg
add
sub
xchg
xor
shl
(bad)
(bad)
test
sbb
inc
inc
sbb
cmps
leave
or
sbb
aaa
pop
pop
jmp
lahf
xchg
xchg
xchg
jne
in
adc
mov
or
jmp
pop
mov
mov
and
mov
or
call
or
cdq
fistp
jecxz
mov
int3
(bad)
dec
push
inc
xor
stos
cli
mov
mov
mov
xchg
sub
inc
mov
int
inc
pusha
(bad)
mov
ret
(bad)
mov
inc
mov
jne
pop
call
imul
jae
and
shl
in
mov
mov
(bad)
jae
ror
sbb
dec
xor
cli
test
icebp
lods
das
push
mov
adc
(bad)
cmp
mov
sahf
test
or
dec
(bad)
int
daa
and
inc
mov
lods
ja
pop
mov
push
jne
mov
push
and
(bad)
pop
addr16
adc
mov
mov
popa
jb
xchg
sbb
push
(bad)
xchg
mov
or
loop
jno
stos
xchg
lods
mov
xor
pop
scas
neg
mov
pop
dec
ret
jnp
mov
add
sti
and
mov
mov
jmp
push
adc
mul
(bad)
ins
test
mov
and
and
scas
loop
sub
cmp
or
xchg
xor
cmp
movs
xor
sar
enter
stc
scas
in
inc
dec
fist
repz
add
mov
outs
test
cmc
hlt
cmc
jle
ins
xor
bswap
mul
jno
ja
loope
mov
jg
cs
sub
mov
(bad)
and
das
pop
dec
jle
getsec
mov
jmp
adc
sub
xchg
sahf
popa
and
push
pop
add
jg
hlt
data16
das
xchg
dec
xchg
xchg
mov
das
outs
push
stos
sub
or
xchg
jmp
push
(bad)
arpl
xchg
(bad)
xor
dec
enter
rol
push
rcl
fdivp
aaa
movs
lahf
sbb
fdiv
mov
ficom
cmp
add
cmp
test
jns
and
es
push
inc
pop
dec
add
jmp
test
pop
dec
repz
mov
outs
stos
mov
and
adc
out
mov
test
daa
mov
test
pop
ins
rcl
jle
ret
call
xchg
or
pushf
cwde
sub
outs
push
push
es
pop
push
mov
push
jne
mov
movs
pop
mov
aam
mov
inc
dec
pop
into
add
pop
addr16
in
in
push
or
push
(bad)
cmp
pop
fsubr
push
out
or
scas
loop
dec
push
(bad)
push
sbb
mov
sub
daa
mov
mov
or
add
add
ret
push
in
xor
jp
loop
add
add
jbe
daa
dec
mov
cmp
inc
lea
ss
call
pop
xchg
shl
pop
fdiv
mov
std
lea
ds
call
cld
lahf
sti
cmp
mov
mov
mov
js
cmp
(bad)
or
pop
es
xor
inc
dec
pop
pop
imul
daa
call
(bad)
out
sbb
out
mov
sbb
dec
lds
and
pushw
mov
pop
add
cs
add
jns
xchg
lea
cwde
icebp
jp
movs
xchg
movsx
sbb
outs
icebp
cli
call
sub
push
in
add
mov
pop
push
dec
aas
inc
in
ret
xlat
movs
mov
xchg
sbb
inc
fild
xchg
rol
jne
leave
std
mov
mov
imul
mov
mov
lock
test
inc
xchg
mov
dec
mov
(bad)
pop
inc
jbe
das
sti
jbe
test
mov
(bad)
cmp
mov
aaa
mov
sub
sub
add
test
scas
mov
xchg
mov
cld
jmp
push
push
popf
shl
jl
mov
mov
fisubr
leave
mov
scas
sub
xor
mov
xchg
mov
(bad)
es
mov
ror
mov
leave
sub
jo
inc
xlat
mov
push
aas
push
xchg
call
scas
clc
rcr
cmp
pop
frstor
movs
push
jmp
scas
scas
mov
stos
jl
mov
das
adc
and
clc
jmp
sub
dec
or
jae
dec
push
or
add
push
mov
add
push
dec
or
data16
fidiv
or
cs
rol
or
std
xchg
aaa
js
mov
icebp
aad
mov
add
aaa
jb
aam
push
pop
not
movs
loope
mov
and
and
inc
push
test
out
daa
mov
pop
sub
das
sub
pop
fadd
mov
movs
(bad)
xchg
aas
clc
push
mov
aad
sub
cmp
sub
xor
push
xor
mov
hlt
cmp
movs
inc
mov
inc
pop
xchg
cmp
ror
stos
cwde
movs
test
leave
pop
sub
pushf
dec
retf
pop
fistp
daa
test
mov
int3
add
cmp
movs
lods
dec
add
jno
retf
dec
shr
jns
cld
mov
and
pop
mov
test
cmps
in
jmp
repnz
push
outs
xor
test
add
jmp
mov
sbb
mov
mov
pop
add
mov
(bad)
pop
mov
or
push
mov
push
and
adc
mov
mov
mov
nop
mov
xchg
pop
jmp
hlt
das
loopne
outs
mov
dec
adc
sar
(bad)
pop
imul
mov
int
mov
xor
leave
xchg
and
dec
push
jnp
jecxz
ret
movs
cwde
div
sbb
pop
pop
test
inc
loopne
out
mov
(bad)
xchg
mov
imul
out
das
call
ficom
pop
dec
xchg
daa
sbb
mov
push
dec
jno
cld
ds
inc
inc
mov
xor
std
inc
push
inc
fild
lods
sbb
fwait
jp
mov
mov
mov
stc
or
sub
adc
vmread
arpl
adc
push
shl
clc
imul
int3
push
add
inc
mov
out
mov
adc
mov
jl
xor
sub
cmps
fbstp
inc
loop
inc
into
push
scas
aaa
inc
nop
cmps
adc
dec
es
dec
push
jg
sbb
jb
stc
mov
fcom
nop
popa
xchg
push
std
in
inc
outs
jmp
daa
push
xchg
dec
(bad)
jb
or
shr
scas
adc
sub
fimul
push
out
push
popf
outs
fiadd
mov
sar
ss
jbe
mov
or
mov
sbb
cld
imul
push
mov
je
es
popf
test
clc
clc
lods
call
mov
ret
and
xlat
mov
xchg
xchg
div
add
mov
pop
test
pop
push
sbb
jb
inc
push
int
mov
and
dec
in
sbb
inc
jae
cmp
dec
jl
push
loop
cmps
outs
or
jmp
jge
sbb
push
or
inc
add
mov
dec
push
mov
sbb
sar
jl
or
mov
jle
inc
mov
and
and
addr16
inc
retf
adc
push
pop
call
imul
movs
mov
xchg
xchg
shr
jmp
and
hlt
hlt
pop
je
in
mov
mov
push
sbb
call
pop
dec
cwde
ins
sub
(bad)
icebp
outs
(bad)
mov
jecxz
pop
xor
leave
mov
sbb
stos
push
fsubp
je
jnp
or
call
test
inc
(bad)
mov
in
inc
bound
push
dec
pop
(bad)
cmp
sub
inc
dec
les
jne
xchg
enter
sbb
jecxz
pop
jno
pop
sbb
mov
mov
scas
or
inc
scas
adc
mov
dec
lahf
repnz
sub
mov
addr16
xor
rol
ret
mov
push
f2xm1
cmp
inc
mov
(bad)
(bad)
ds
mov
shl
fs
and
push
imul
in
xchg
cld
push
inc
mov
fild
and
out
cmp
rcr
icebp
pop
sbb
mov
add
push
nop
hlt
stos
dec
stos
enter
pusha
movs
mov
cmps
and
mov
mov
into
arpl
fs
fadd
jnp
out
dec
popf
in
pop
enter
imul
sub
dec
or
dec
cmp
cmp
neg
pop
pop
mov
js
bt
xor
jae
jmp
sbb
dec
fdivr
test
xchg
popf
mul
ss
cdq
cdq
push
popa
or
fiadd
mov
push
mov
pop
test
jecxz
mov
dec
popa
fst
inc
pop
fadd
and
xchg
enter
fistp
in
or
ret
ja
pop
cmc
and
jo
pop
add
and
stc
add
test
sbb
push
mov
xor
pop
and
or
push
(bad)
xor
out
popa
inc
inc
loope
adc
sub
outs
xchg
push
sbb
sub
push
movs
test
jle
call
jno
sub
sar
fwait
push
sbb
outs
inc
mov
movs
dec
bound
cmps
cmp
jbe
jnp
fimul
retf
mov
push
loop
iret
sub
ret
add
jp
jne
std
movs
ins
adc
mov
es
pop
hlt
stos
addr16
inc
mov
push
xchg
push
push
mov
fadd
mov
or
icebp
daa
out
add
rcl
movs
daa
mov
neg
xor
cmps
cli
out
pushf
cli
or
adc
cmps
stos
stos
xor
dec
loop
or
xor
push
mov
outs
xor
mov
in
xchg
mov
fadd
test
push
add
jecxz
lock
lods
pop
xchg
xchg
pop
adc
in
iret
add
adc
loopne
push
xor
mov
popf
push
fld
xor
pop
sub
push
pop
cmps
mov
push
mov
mov
das
and
or
push
push
xchg
out
into
cmp
xor
mov
jle
aas
test
scas
cmp
test
leave
fist
or
xor
test
(bad)
cs
lods
inc
ja
ss
call
sub
iret
(bad)
and
cmps
cmp
or
(bad)
pop
loop
cwde
push
push
cmp
(bad)
popa
xor
ret
jge
cmps
in
push
jmp
(bad)
sub
push
stos
aad
lds
dec
push
mov
sub
mov
sub
xchg
in
out
or
mov
fdiv
add
fcom
(bad)
daa
je
lea
std
xchg
outs
(bad)
stc
rcr
sbb
das
fdiv
sbb
push
xsaveopt
push
add
pop
ret
mov
mov
xor
ret
icebp
movs
test
sbb
sub
jge
gs
xor
outs
das
(bad)
(bad)
mov
xchg
js
loopne
in
je
add
sub
push
xlat
pop
sbb
push
int3
add
cmp
retf
jmp
adc
and
cmp
test
retf
cdq
call
out
jb
pop
(bad)
(bad)
mov
movs
sbb
xor
arpl
and
jno
push
rcr
pop
outs
pop
stos
mov
mov
out
loope
xchg
dec
xchg
mov
mov
scas
mov
pusha
lea
ss
mov
rcr
mov
mov
xlat
lds
scas
pop
adc
ins
mov
cmps
popa
xlat
mov
xor
scas
lds
icebp
jo
inc
daa
fcomp
outs
pop
xchg
push
xchg
into
mov
mov
movs
(bad)
mov
(bad)
xchg
jae
pop
mov
movs
outs
aam
into
out
outs
and
add
ret
mov
sbb
and
bound
inc
xlat
adc
push
mov
scas
mov
push
xor
xchg
and
fild
lods
inc
retf
hlt
fnstcw
nop
push
jb
or
sahf
push
push
scas
fadd
int3
mov
jl
push
adc
cmp
or
(bad)
stc
sub
xchg
sub
add
jmp
mov
lods
mov
shl
jle
je
iret
jmp
or
push
pop
jae
xchg
mov
push
mov
xor
je
ret
jp
mov
and
fidivr
push
mov
push
adc
js
dec
cli
add
and
adc
push
shl
ret
inc
clc
inc
fwait
dec
loop
and
jo
mov
inc
mov
dec
je
lods
fnsave
pop
push
icebp
adc
or
out
outs
jne
mov
in
mov
aaa
fidiv
cmp
lds
sub
inc
test
ins
jmp
(bad)
xlat
inc
enter
int3
push
hlt
inc
scas
xor
dec
xchg
ret
repz
and
sub
ja
xor
push
(bad)
fwait
push
add
mov
loope
arpl
iret
add
cdq
and
cmps
retf
ja
cli
or
pop
xchg
lock
lea
mov
inc
and
jno
add
or
sub
div
dec
std
mov
leave
clc
(bad)
jmp
xor
mov
adc
cmp
icebp
call
or
xor
dec
scas
adc
xchg
pusha
mov
sbb
aaa
dec
ja
scas
cmp
or
sub
mov
int3
xchg
and
aaa
pushf
mov
ins
adc
cmc
out
pop
cmps
retf
jp
std
inc
push
mov
ss
add
mul
les
mov
dec
sahf
lods
or
cmp
ins
mov
(bad)
(bad)
fstp
jnp
mov
mov
or
add
(bad)
or
in
out
mov
mov
jl
stc
scas
in
push
add
aad
jmp
cmp
xchg
or
imul
sbb
test
inc
mov
xchg
mov
(bad)
or
cdq
jbe
sbb
rcr
fcmovnbe
ret
fsub
repnz
push
xchg
jne
js
addr16
lods
mov
pop
jno
pop
mov
sbb
inc
jne
mov
or
lea
or
pop
and
sub
inc
fmul
mov
mov
scas
adc
sub
clc
dec
jno
addr16
out
mov
(bad)
mov
cmp
mov
retf
push
test
loope
push
sbb
outs
shr
dec
cmp
jbe
jmp
jbe
xor
pop
shl
fs
call
pushf
mov
sbb
cmp
push
push
lods
es
mov
mul
retf
push
push
out
mov
loop
pop
in
je
mov
or
cpuid
lods
dec
mov
pusha
dec
ret
pop
add
mul
push
sbb
cmp
icebp
nop
fldcw
fiadd
sub
outs
das
adc
mov
push
xor
mov
push
mov
mov
jl
lock
rol
pushf
mov
fild
repz
ss
xchg
and
inc
push
fnstsw
xchg
mov
cmp
pop
cmp
mov
arpl
stos
je
xchg
adc
(bad)
dec
mov
loope
enter
lahf
and
mov
outs
ror
(bad)
adc
stos
lods
repnz
into
mov
div
pop
(bad)
dec
inc
mov
movs
mov
jg
es
stos
jns
aaa
sub
mov
push
es
ficom
inc
in
push
dec
movs
fst
out
stc
jbe
mov
lea
ds
adc
lock
jg
push
aad
in
in
and
cwde
sub
add
ss
stos
repz
pop
inc
push
add
es
push
push
gs
adc
test
add
cmc
jns
adc
xchg
adc
mov
pop
sub
push
fsubr
lods
ja
mov
push
fst
push
mov
mov
test
sbb
inc
ficomp
mov
icebp
sub
jge
pop
xchg
imul
push
sbb
mov
cmp
mov
fistp
arpl
test
fdivr
lock
cs
sub
mov
cld
dec
pop
test
into
inc
push
mov
push
outs
push
push
ficomp
daa
pop
xor
imul
adc
cmp
call
mov
lds
xchg
popa
dec
and
in
(bad)
mov
xchg
push
xchg
add
inc
and
test
sub
xor
pop
loop
(bad)
(bad)
(bad)
pop
sbb
dec
test
mov
mov
enter
js
sub
in
sub
popf
dec
fmul
mov
retf
scas
pop
push
les
sub
dec
xchg
inc
dec
fs
jbe
mov
and
push
je
pop
cvtps2pd
or
clc
repnz
aaa
and
mov
mov
push
xor
in
into
cmp
inc
ins
or
or
call
stc
lds
in
jbe
fisubr
cmps
cmps
leave
ret
xor
pusha
out
add
mov
lods
add
or
mov
add
daa
and
test
jne
dec
mov
imul
in
mov
xor
push
inc
sahf
mov
mov
mov
push
retf
cmps
and
into
or
enter
pusha
icebp
ret
and
cmps
jecxz
jb
xchg
and
sahf
mov
mov
mov
push
add
sub
enter
shr
push
js
or
icebp
scas
data16
sub
jmp
jge
and
xchg
xchg
out
xchg
scas
or
(bad)
rol
out
sub
(bad)
jns
mov
cmp
les
ins
scas
jb
mov
or
daa
iret
das
mov
xor
jl
cmc
retf
add
scas
cmp
adc
bound
rcr
mov
ffree
sete
lods
ds
jp
inc
mov
in
sub
(bad)
icebp
data16
pusha
xchg
mov
jle
rcl
movs
push
adc
pop
or
lods
fidiv
lea
arpl
push
sub
(bad)
mov
sahf
mov
fcom
push
(bad)
mov
test
or
rcl
and
adc
push
(bad)
cmp
mov
xor
gs
push
loope
xchg
(bad)
mov
lock
mov
imul
sub
dec
repz
fsubp
or
sub
sbb
jb
pushf
out
add
test
test
mov
push
mov
or
aas
xchg
lahf
sahf
es
mov
lds
imul
mov
dec
pop
lahf
pop
mov
jl
aad
jecxz
mov
mov
popf
movs
jmp
pop
div
jmp
xchg
push
dec
push
mov
bound
loope
dec
enter
sbb
push
inc
ret
jb
push
imul
div
imul
ds
xchg
mov
movs
xchg
mov
sub
sti
shl
jns
test
mov
sbb
js
mov
cmp
cmp
imul
and
dec
inc
dec
ins
push
add
ror
frstor
(bad)
mulps
clc
mov
mov
adc
inc
inc
fwait
jmp
jle
hlt
mov
dec
rol
call
sahf
ss
push
fisttp
push
stc
or
and
movs
xchg
or
or
push
out
nop
mov
retf
mov
push
xor
xchg
and
push
mov
pop
in
pop
pop
repnz
cdq
and
sub
cmp
jo
dec
pop
mov
outs
mov
pop
fcmovb
lahf
xor
push
mov
mov
shl
push
or
sbb
mov
push
ins
push
mov
unpcklps
(bad)
aam
xchg
xor
stos
pop
hlt
push
adc
test
(bad)
mov
adc
arpl
out
rol
lods
movs
mul
cmp
mov
jne
ror
jb
es
dec
(bad)
fistp
push
inc
sbb
je
fdivr
add
mov
mov
jmp
sub
push
cld
inc
int3
iret
pop
dec
jg
mov
mov
xchg
add
aad
sub
push
repz
add
mov
cmp
mov
push
xchg
not
es
jg
push
arpl
inc
das
ds
(bad)
idiv
xchg
adc
mov
push
mov
xor
sub
cmp
std
jp
pushf
loopne
mov
out
or
scas
bound
pop
movs
xor
push
xor
es
xchg
mov
int
jbe
ja
pop
scas
imul
mov
inc
add
cmps
jmp
xchg
sbb
jns
(bad)
cmp
add
lods
xlat
add
adc
dec
es
dec
xchg
popa
xor
xor
jne
jmp
mov
mov
(bad)
mov
jbe
aas
(bad)
dec
fstp
push
add
jmp
enter
mov
sbb
pop
jo
clc
loope
lea
dec
addr16
(bad)
jb
sbb
fnsetpm(287
pop
sbb
imul
mov
and
push
aad
stc
loope
mov
fmul
push
not
inc
(bad)
std
sub
lahf
rol
and
mov
ret
sbb
pop
mov
push
xchg
add
sbb
xchg
adc
test
sbb
mov
xchg
push
imul
repz
shl
sbb
sbb
test
cmp
xor
mov
pop
push
pop
arpl
cmp
pop
or
sub
xor
or
inc
retf
jecxz
jne
repz
cs
xchg
mov
arpl
imul
retf
cmc
mov
lock
out
pop
mov
mov
pop
cli
pop
adc
adc
call
repnz
arpl
ret
fisttp
push
inc
into
jmp
adc
ss
and
aaa
(bad)
cmp
(bad)
ins
js
adc
adc
inc
lea
fsub
cmp
push
sahf
dec
add
jmp
int
push
push
cmp
gs
mov
cmp
add
xchg
inc
dec
or
xor
ret
cwde
cmp
js
js
cmc
imul
fcomp
dec
xchg
outs
dec
sbb
cmp
out
or
jg
add
test
loope
mov
pushf
jne
or
push
repz
sahf
call
mov
aaa
(bad)
test
cmp
call
aaa
lods
and
dec
inc
and
das
scas
imul
out
xlat
mov
in
sub
stos
pop
cmp
pusha
ins
push
imul
retf
nop
cmp
push
pop
shl
jle
adc
ret
and
retf
xchg
fbld
pop
lods
inc
int3
inc
(bad)
call
dec
into
or
mov
push
pop
mov
or
sbb
xor
push
mov
push
sbb
test
sub
xor
neg
sbb
lods
out
dec
out
inc
mov
into
mov
and
test
test
mov
or
repz
fnstenv
mov
ficom
push
dec
loop
push
es
addr16
xchg
cmps
xchg
daa
out
daa
fcomp
retf
inc
add
lea
xor
aam
dec
outs
popf
mov
fs
mov
ficom
jl
pop
ins
ret
test
loop
push
fisub
stc
xchg
add
pop
mov
mov
sbb
cmp
cdq
pop
and
in
lods
adc
ins
and
jge
div
push
loope
xchg
in
mov
mov
xor
out
sbb
das
lods
push
sbb
jnp
retf
mov
pop
test
cld
sbb
movs
das
mov
xchg
nop
push
mov
xchg
pop
xchg
push
and
xor
jle
test
sub
inc
cmp
pop
dec
and
jae
out
mov
sbb
jnp
dec
shl
sbb
and
adc
enter
mov
and
push
mov
test
in
jge
pop
mov
out
xor
or
test
mov
mov
push
xchg
inc
mov
stc
lods
popf
enter
leave
call
leave
repnz
and
or
jne
ret
es
jnp
or
dec
ins
jae
mov
call
call
stos
addr16
ja
outs
sbb
mov
(bad)
push
xchg
push
push
mov
rcr
xor
ja
rol
call
dec
mov
dec
inc
mov
jb
ss
stos
mov
cmp
fidivr
mov
sub
jno
mov
arpl
retf
pop
dec
mov
mov
sub
fsubr
outs
xchg
in
sar
pop
loope
in
inc
fwait
jg
or
inc
cld
jle
xor
mov
inc
mov
xlat
jle
jge
mov
out
dec
mov
rcl
sbb
xchg
movs
push
mov
add
add
pop
ins
xor
dec
xchg
imul
dec
push
add
mov
jnp
shl
and
pop
xlat
jno
dec
mov
popf
xor
addr16
lods
sbb
mov
add
xchg
mov
jb
xchg
in
out
aas
stos
push
pop
scas
outs
or
xor
xchg
dec
xor
outs
push
in
mov
mov
push
retf
mov
inc
push
jo
stos
ret
and
ss
mov
push
loopne
cmps
ss
xchg
inc
pop
mov
div
mov
outs
push
or
add
and
dec
imul
cld
inc
and
inc
sbb
jae
inc
and
lds
popa
sar
dec
daa
inc
dec
jmp
sub
cdq
(bad)
adc
popa
and
cmps
mov
icebp
js
pop
rol
ficom
push
bound
jo
jp
sub
sub
pushw
mov
stos
sub
xchg
pop
or
cld
mov
cdq
cmps
movs
repz
sub
jmp
dec
adc
clc
clc
push
inc
jle
cdq
push
out
mov
xlat
dec
mov
ret
xor
and
imul
mov
loop
rcl
add
add
dec
pusha
in
jg
and
jb
dec
xchg
ds
scas
jge
push
adc
jp
jge
sub
mov
in
or
jns
sti
or
mov
and
jno
xchg
jmp
iret
js
dec
test
jmp
sub
retf
sub
ins
xchg
mov
push
js
retf
pusha
call
pop
clc
cmp
add
adc
sbb
lock
dec
out
cmps
ss
fwait
mov
jp
push
iret
cld
add
xlat
out
icebp
pop
mov
push
and
push
ficomp
out
xchg
xchg
sbb
sbb
dec
(bad)
arpl
sbb
lock
fs
add
cmp
out
add
push
into
les
mov
jb
std
push
aad
mov
ins
mov
dec
sbb
add
das
cmp
retf
test
and
pop
es
push
jp
clc
out
in
aam
mov
mov
xchg
mov
dec
hlt
into
inc
outs
popf
push
mov
jmp
mov
mov
jl
xor
hlt
frstor
jg
lods
add
cmp
mov
cmp
repz
add
xor
daa
mov
sbb
dec
mov
push
iret
out
jmp
jne
movs
std
in
(bad)
jg
add
cmps
cmps
pop
shr
or
aam
scas
dec
outs
adc
enter
and
xchg
mov
repz
outs
ss
push
(bad)
and
push
aas
or
sar
jnp
jnp
jb
loopne
mov
(bad)
ja
push
mov
push
shr
mov
popa
sub
adc
retf
dec
adc
cmp
pop
pop
pop
mov
imul
cli
or
adc
dec
cld
pop
sbb
inc
push
stos
ficomp
mov
out
int
add
fs
sbb
inc
nop
and
call
imul
adc
jne
ds
xor
data16
inc
cmp
leave
scas
push
mov
loop
mov
stos
mov
dec
inc
in
into
ret
ror
cmp
sbb
push
dec
jp
dec
xchg
or
mov
ja
ins
inc
dec
cmp
mov
xchg
dec
jns
adc
imul
push
sub
pop
push
push
repnz
push
push
retf
inc
movs
sbb
das
dec
mov
adc
jecxz
test
or
or
mov
mov
ja
or
dec
repnz
adc
popf
and
rol
int
retf
mov
dec
and
mov
push
ss
fst
test
inc
push
fidivr
inc
(bad)
mov
mov
dec
jnp
mov
add
dec
push
sub
lea
mov
or
push
and
jmp
and
in
jmp
sbb
inc
jmp
das
fmul
ss
push
inc
jnp
inc
mov
imul
out
dec
mov
sbb
in
add
mov
adc
stos
xlat
out
(bad)
mov
cdq
js
mov
and
mov
sar
lods
popf
inc
jns
jle
(bad)
cmp
mov
push
ret
add
loope
rol
lahf
or
and
nop
pop
gs
stos
push
int
(bad)
imul
(bad)
shr
and
inc
retf
xsavec
mov
sbb
aam
call
jno
popf
or
jmp
bound
popa
sub
sub
inc
push
shl
cmp
mov
adc
loopne
adc
push
outs
mov
pop
jb
add
(bad)
out
std
adc
retf
repnz
sub
push
and
adc
test
push
outs
call
mov
mov
es
adc
sbb
cmc
or
dec
pop
xchg
sub
add
xchg
inc
push
rcl
sbb
jmp
pushf
loop
addr16
and
push
out
xlat
(bad)
jo
ins
(bad)
jl
dec
test
mov
xchg
ja
push
xchg
push
out
pop
retf
lods
jl
add
and
mov
or
lahf
fisttp
out
mov
or
sti
push
mov
mov
retf
clc
jp
in
sub
aaa
push
sbb
xor
sbb
add
pop
shr
enter
mov
ror
fcmovnu
xchg
mov
ret
addr16
or
fdivr
ja
aad
aaa
and
mov
xchg
stc
inc
push
js
mov
iret
sbb
jnp
inc
outs
jmp
fist
imul
pop
mov
jmp
imul
je
or
loope
dec
(bad)
xor
test
pop
stos
(bad)
sbb
mov
xchg
ds
mov
call
cmps
repnz
jmp
jne
cmp
repz
xchg
add
fdivr
adc
jecxz
dec
pushw
jns
add
cmp
add
fcom
cmp
xchg
(bad)
adc
int3
fs
sbb
icebp
jmp
adc
inc
jle
pop
aam
mov
pop
or
mov
leave
cmp
daa
and
push
inc
adc
lods
inc
adc
inc
daa
jo
js
jbe
cmp
sar
dec
shl
cmps
mov
int3
jge
jns
enter
sbb
aas
or
fs
pop
xor
fmul
retf
jle
mov
aad
scas
test
dec
scas
push
sbb
retf
das
leave
test
je
retf
out
aad
push
inc
in
inc
jg
inc
hlt
dec
inc
nop
xor
xchg
rol
in
add
fisubr
cmp
pusha
imul
test
out
(bad)
jecxz
jmp
jns
stos
movlhps
sub
pop
mov
leave
xchg
jle
sbb
adc
ret
inc
cmp
inc
or
rol
pop
cdq
jge
pushf
dec
pop
mov
jb
mov
xchg
js
inc
dec
sahf
or
mov
dec
jge
imul
ins
in
xor
repz
sub
xchg
les
adc
js
dec
or
xchg
jge
lock
jp
inc
test
mov
xchg
dec
push
and
xacquire
out
mov
pop
xor
mov
aas
clc
adc
jg
sysexit
inc
mov
cld
jp
add
pop
pushf
mov
jns
sbb
push
lock
xchg
and
add
out
cwde
je
xchg
mov
sbb
sub
and
sbb
shl
ror
mov
dec
dec
cmp
outs
pop
mov
push
jo
mov
neg
and
push
cld
mov
dec
adc
loop
xchg
pop
push
or
pop
repz
pop
imul
push
mov
push
loope
mov
repz
mov
popa
cdq
mov
(bad)
mov
inc
sbb
dec
je
push
dec
cmp
pop
ds
sub
sub
fiadd
push
nop
ret
cmp
or
repnz
out
push
(bad)
sbb
out
inc
xor
mov
push
inc
add
dec
mov
repnz
imul
xor
out
pop
mov
pop
lock
loop
xor
fmul
or
pop
clc
jle
fldcw
sbb
je
mov
sbb
adc
loope
aam
sub
cwde
shr
aam
sbb
ja
add
mov
and
mov
ss
jo
sub
imul
xchg
fidiv
dec
sbb
add
in
data16
push
adc
mov
call
push
sub
cli
mov
test
mov
fucomi
mov
mov
(bad)
ret
mov
and
add
call
fwait
dec
cwde
dec
jb
sbb
and
mov
sahf
jle
jle
and
sub
or
div
imul
jno
push
or
mov
push
adc
aas
fsub
jecxz
lea
rcl
mov
mov
repnz
and
sahf
aam
scas
cmp
push
sbb
xchg
dec
ret
sub
jmp
sub
pop
aaa
jmp
mov
xor
xlat
or
imul
jp
mov
je
sub
jge
adc
jp
jp
sbb
and
ss
jo
in
pop
outs
dec
add
fidiv
cs
jbe
mov
rcr
cmps
sub
cwde
jmp
jecxz
xor
lahf
bnd
stos
dec
and
adc
mov
add
or
ins
pop
pop
mov
ds
mov
xor
les
pop
sub
jp
dec
cs
mov
sbb
ins
or
dec
inc
repz
add
jbe
je
aam
mov
loopne
mov
mov
jge
lahf
cmp
in
lock
retf
add
adc
xchg
jg
jne
shr
pop
mov
xor
jns
mov
stos
stos
mov
daa
sbb
fdiv
scas
les
xchg
or
jg
aam
ss
push
cld
pop
and
pop
ins
xor
sbb
pop
push
adc
js
push
fsubr
and
cmp
pop
scas
retf
push
and
(bad)
ror
push
cmps
arpl
or
xchg
mov
jecxz
stos
adc
add
addr16
mov
sub
in
ficomp
push
xor
cmp
jecxz
data16
sbb
js
lods
es
adc
call
test
dec
gs
es
lock
not
jne
or
mov
push
and
enter
loop
dec
or
xlat
in
repnz
dec
adc
aam
clc
push
and
xchg
test
pusha
sbb
cvtpi2ps
mov
sub
add
add
lahf
je
rcl
call
aaa
(bad)
jmp
xor
(bad)
out
scas
scas
leave
add
jmp
lods
sub
jle
mov
lods
dec
out
in
jns
mov
and
add
cmp
das
rcl
(bad)
xchg
shl
xchg
enter
fwait
cwde
or
repz
fmul
pop
mov
fadd
jno
mov
or
stos
aaa
cmc
cmp
test
popa
in
add
pop
ret
pop
sub
nop
iret
(bad)
adc
fistp
scas
ss
lock
sub
scas
push
xchg
iret
call
mov
inc
ret
adc
jg
rol
mov
cmp
xchg
dec
pusha
mov
jl
push
xchg
add
xor
test
stos
imul
in
pop
sbb
adc
pop
shr
loope
sub
xor
or
sub
movs
jle
in
retf
loop
sub
cmc
lock
lods
jb
cmp
in
ret
pop
push
jmp
cmp
dec
sar
and
repnz
stc
imul
lds
call
fidivr
xchg
push
int3
pop
shr
and
addr16
push
icebp
xor
dec
sub
jae
mul
scas
mov
pop
lock
jge
and
jne
push
cmp
pushf
inc
cmc
or
inc
lds
leave
inc
ss
pop
je
pop
scas
adc
dec
jne
repz
push
xchg
xchg
movs
cmc
out
inc
mov
pop
pop
dec
sbb
fdiv
test
and
mov
and
push
sub
call
or
inc
xor
or
mov
pop
(bad)
not
mov
xor
cs
pop
xchg
ror
clc
popf
and
mov
icebp
pop
dec
loop
retf
mov
arpl
call
stc
sub
mov
dec
shr
ret
jns
retf
adc
mov
jnp
xchg
jp
push
imul
add
jle
in
push
sbb
and
sub
vmovhpd
bound
cli
xor
pop
into
aam
scas
movs
add
add
call
push
cwde
gs
inc
sub
xor
repnz
xchg
loope
(bad)
mov
rcr
loop
xor
xor
xor
push
lods
xlat
es
cmp
imul
mov
add
push
add
sub
in
inc
adc
mov
mov
jbe
or
bound
lahf
sub
dec
and
inc
and
lahf
shl
daa
pop
sub
nop
sbb
stos
in
scas
stos
mov
push
sbb
movs
(bad)
test
retf
ss
add
pop
xchg
pop
push
xor
das
xlat
aaa
retf
idiv
loop
(bad)
ficomp
das
dec
sub
sbb
mov
popf
jae
pop
xchg
xchg
jo
xor
mov
mov
test
cdq
test
inc
inc
pushf
scas
xor
rol
jmp
(bad)
push
or
(bad)
aaa
pop
(bad)
mov
mov
mov
mov
sbb
add
icebp
retf
pop
retf
dec
inc
push
fsub
call
es
data16
push
adc
aad
mov
xchg
scas
mov
xor
sbb
sahf
lock
test
xor
mov
pop
int
mov
(bad)
xchg
cmp
out
mov
mov
lods
(bad)
adc
add
das
inc
mov
pop
jnp
cmp
or
pop
mov
xchg
nop
push
jl
ret
dec
push
add
mov
push
stc
push
rcr
mul
xchg
inc
pop
sub
pop
jp
add
js
out
lods
mov
cwde
ror
fwait
popa
retf
mov
xchg
out
movs
outs
push
xor
mov
mov
test
rol
loopne
div
pop
adc
sbb
push
mov
daa
mov
(bad)
in
arpl
sub
push
push
pop
into
lods
dec
and
and
jno
inc
je
cli
(bad)
jo
inc
sub
cmp
pop
mov
sbb
xlat
imul
dec
push
(bad)
cmp
mov
push
out
dec
movs
add
push
and
adc
jge
xlat
pop
call
xchg
(bad)
cs
pop
nop
mov
mov
dec
je
test
cli
jae
and
push
fld
inc
push
mov
jmp
ins
aad
and
xor
retf
lock
adc
cmp
ins
push
jle
ja
outs
jno
lock
xor
sbb
dec
sub
xchg
push
or
cli
(bad)
adc
cli
icebp
call
sub
jnp
inc
xchg
sbb
mov
dec
push
outs
xchg
leave
pop
xchg
mov
(bad)
rol
(bad)
mov
add
mov
push
bound
cs
aas
mov
dec
in
mov
sub
inc
test
mov
mov
mov
aaa
mov
xor
clc
addr16
sbb
fisubr
clc
adc
adc
sub
sub
int3
cmc
jmp
push
test
pop
pop
or
dec
pop
xor
mov
inc
das
idiv
inc
jecxz
ins
inc
sub
lods
movs
arpl
dec
daa
dec
xor
jecxz
out
mov
nop
xchg
pop
dec
xchg
dec
jmp
sub
pusha
iret
xchg
and
pop
repz
out
retf
clc
out
lock
rcl
test
and
pop
sar
lock
xchg
cmps
lahf
inc
add
stos
pushf
ja
or
push
outs
and
or
push
(bad)
mul
push
or
pop
dec
aam
push
dec
sahf
jg
or
das
mov
xchg
xor
outs
inc
sub
call
les
and
xchg
sub
cmp
jbe
fs
mov
stos
in
sub
push
imul
add
mov
test
ds
or
and
(bad)
fnop
loope
mov
adc
xor
outs
pop
psubd
lds
iret
sbb
cmp
jno
mov
mov
leave
mov
jb
push
jae
inc
jmp
jle
popa
fdivrp
jmp
(bad)
add
mov
xchg
jnp
aaa
mul
retf
or
es
adc
pop
cmp
test
pop
mov
mov
push
rcl
mov
rol
dec
and
test
xor
daa
inc
test
pop
(bad)
xrelease
push
sub
push
push
icebp
jmp
pop
shl
sub
jle
test
or
xchg
call
sbb
pop
pop
jp
mov
mov
stos
sub
retf
mov
jmp
xor
jmp
movs
mov
into
scas
jmp
clc
dec
stos
jmp
or
add
pop
test
ss
ds
bound
push
gs
ror
movs
idiv
mov
push
loopne
push
mov
sahf
jne
je
fadd
and
fistp
sbb
or
mov
pop
adc
jl
jmp
or
jl
scas
loopne
pop
test
cs
and
call
lods
cmp
pushf
xchg
rcr
rcl
gs
inc
shr
pop
mov
push
inc
mov
loop
neg
xchg
sub
out
arpl
xchg
lods
and
test
lods
sar
cmc
pop
ror
(bad)
loop
add
xchg
mov
and
jno
mov
rcpps
pop
hlt
adc
out
add
add
sub
sar
inc
xchg
push
pop
jno
xchg
pushf
cdq
push
mov
stos
sti
sti
hlt
add
xchg
pop
add
enter
fistp
lods
mov
or
addr16
inc
ror
and
ins
sub
pop
adc
pushf
(bad)
(bad)
rol
jnp
inc
data16
mov
or
rcr
ret
(bad)
jge
mov
or
ss
push
xchg
push
das
sti
rcr
xchg
das
cmc
test
xchg
xlat
repz
xor
test
outs
add
mov
xrelease
fmul
out
mov
jg
inc
jle
in
mov
push
out
push
jmp
or
pop
popa
sub
rcr
inc
ret
inc
sub
xor
outs
push
fadd
xchg
in
or
out
or
adc
push
cmp
push
adc
retf
fstp
sahf
xchg
aam
(bad)
cmp
and
(bad)
call
sub
sbb
cmps
xchg
stos
ret
mov
push
add
push
jmp
cmc
or
data16
jnp
inc
data16
imul
cmp
cmps
imul
sbb
jmp
or
xchg
int
out
xor
sbb
mov
mov
or
mov
daa
scas
test
call
mov
idiv
jno
ins
mov
(bad)
bound
not
ins
in
xchg
mul
(bad)
xchg
repz
jmp
push
add
xchg
dec
and
pop
lds
nop
stos
enter
mov
iret
pop
mov
cmps
cmp
sub
inc
ret
xchg
add
pop
arpl
(bad)
retf
ret
dec
ss
jmp
aas
mov
out
out
not
xchg
bound
je
sbb
and
push
stos
lock
ret
dec
popa
cmp
fld
mov
cmps
lahf
fisttp
retf
xchg
in
outs
(bad)
xor
cs
push
inc
pop
add
push
xor
pop
push
test
sahf
fadd
inc
jae
sbb
test
mov
xchg
jmp
mov
sahf
add
push
cmp
adc
pushf
adc
adc
sub
pop
cdq
or
sub
jo
adc
and
jge
or
sbb
pusha
jl
push
retf
(bad)
xor
cld
dec
pop
push
sub
arpl
dec
sbb
xlat
push
imul
je
adc
mov
movs
in
sbb
inc
sti
(bad)
mov
int
lock
dec
xlat
pop
or
inc
mov
dec
int3
jmp
xchg
lea
sbb
push
sbb
lea
jg
jne
cdq
adc
pop
call
nop
(bad)
jl
dec
in
(bad)
hlt
add
mov
cmp
xchg
push
xchg
dec
push
jno
inc
xchg
aas
cmps
inc
dec
jge
sbb
setno
jg
sub
test
push
or
cs
or
xor
dec
into
daa
sti
or
outs
ret
cmp
repz
pusha
sub
shl
push
jmp
es
scas
and
js
shl
pop
dec
and
push
xor
or
call
(bad)
mov
lock
pop
loope
shr
inc
int3
idiv
js
cmps
in
adc
push
(bad)
in
dec
jo
repz
stos
shr
dec
hlt
imul
pushf
fs
or
sub
cs
mov
or
es
mov
stos
add
jo
or
retf
lea
jl
fisubr
add
push
xor
xor
scas
mul
mov
inc
rol
inc
push
test
fs
test
add
push
in
pop
push
inc
add
xor
mov
scas
(bad)
pop
adc
push
lea
sbb
jbe
popa
xchg
je
jne
sti
fdiv
rsqrtps
cmps
shr
sbb
call
lea
inc
sbb
push
mov
in
ja
pop
xchg
hlt
addr16
jmp
and
or
jmp
out
mov
jo
fnstenv
pop
fadd
nop
pop
mov
std
sub
xor
pop
aam
push
or
aas
loopne
pop
xchg
test
pushf
adc
retf
test
cmp
ja
mov
xchg
mov
shr
std
mov
fst
mov
inc
pop
mov
pop
xchg
add
mov
push
les
test
mov
outs
add
inc
jae
fucomi
sub
repnz
dec
rcl
repnz
aad
inc
sub
cmp
sbb
lods
loope
(bad)
shl
xor
scas
cwde
int3
push
fcmovne
cld
lods
ret
test
les
and
dec
(bad)
jmp
leave
or
retf
push
mov
pop
in
push
fs
out
pop
cmps
cmp
stc
push
mov
dec
and
cmp
mov
punpckhbw
movs
(bad)
mov
jbe
pop
bound
js
sub
dec
mov
(bad)
mov
test
stos
fs
push
ror
inc
xchg
dec
loopne
pop
int
movups
push
aam
add
sbb
repz
and
push
push
dec
stos
push
jge
sbb
jns
push
cmp
push
call
je
push
pop
and
cmp
sti
stc
push
push
scas
or
das
pop
or
and
das
sbb
lods
push
mul
or
dec
jmp
out
push
pop
push
imul
popa
adc
dec
(bad)
imul
jg
pop
or
gs
mov
seto
fwait
in
lods
retf
or
jmp
mov
imul
inc
leave
add
push
(bad)
test
call
mov
jecxz
and
mov
jle
mov
lods
les
push
push
pop
xchg
(bad)
imul
ret
pop
jo
leave
imul
adc
sub
and
pop
push
outs
rcr
xchg
leave
pop
jae
mov
into
adc
mov
mov
cmp
out
dec
cmp
sbb
pop
test
outs
loopne
out
jmp
iret
jle
loope
xchg
stc
dec
add
xchg
or
(bad)
idiv
jae
iret
add
sbb
push
ins
push
push
js
xchg
push
xchg
sti
push
outs
fidivr
cmp
push
scas
sbb
mov
out
pop
push
fmul
pop
inc
sbb
sub
rol
mov
mov
in
lock
push
or
aam
adc
mov
xchg
test
dec
adc
sbb
das
sbb
jb
sar
pop
push
adc
add
or
jns
fisub
fcom
xchg
push
test
mov
jbe
in
add
jle
in
ret
int3
mov
fstp
mov
mov
mov
sub
xchg
inc
scas
dec
fimul
pop
jge
inc
lds
in
dec
stos
stc
iret
or
stc
mov
xor
retf
adc
add
add
sub
mov
adc
(bad)
jb
imul
test
or
scas
and
adc
(bad)
pop
ja
mov
adc
movs
fbstp
std
mov
add
mov
and
pop
fiadd
rcr
movs
jnp
shl
jl
sbb
pop
dec
jmp
jnp
mov
cli
div
sub
inc
enter
sahf
mov
dec
stos
ficom
clc
fild
in
ss
inc
outs
je
test
xlat
scas
enter
cmp
cmp
xchg
ds
arpl
cdq
dec
ss
xor
mov
lds
mov
vpaddsb
sti
sar
mov
inc
mov
(bad)
xchg
sbb
mov
jnp
mov
sub
add
cmp
nop
push
push
jl
pop
pop
jp
arpl
shl
mov
sub
mov
jecxz
jle
xchg
sub
jge
fdiv
mov
xlat
sub
rcr
sub
sbb
pop
mov
arpl
cs
faddp
xchg
or
nop
sbb
repz
mov
imul
and
add
int3
popf
out
call
mov
mov
add
rcr
arpl
test
sub
sbb
fld
push
in
mov
mov
cmps
add
jne
mov
popa
in
inc
mov
in
jg
sbb
dec
pop
pop
push
pop
lods
lock
call
retf
pop
fwait
cdq
sbb
iret
sbb
jle
jg
ficom
pop
xchg
sbb
jae
(bad)
xor
ss
cli
push
adc
fistp
rcl
cmp
push
or
cld
addr16
sub
mov
(bad)
xor
dec
mov
jmp
cs
adc
movs
hlt
into
ins
xchg
outs
ret
cmp
pop
mov
mov
and
test
loop
xor
loope
dec
fucom
jmp
int
cli
push
shl
(bad)
cli
add
outs
cmps
(bad)
lock
dec
cwde
mov
dec
xchg
sar
daa
add
mov
ins
jo
iret
sub
sbb
push
or
add
cmc
adc
xchg
push
enter
pop
push
enter
mov
mov
fs
push
mov
fist
pop
xchg
dec
push
dec
push
test
push
and
pop
test
dec
cwde
push
push
movs
ja
jmp
(bad)
cmp
repnz
mov
sbb
cdq
std
mov
retf
and
sub
cmp
adc
in
pushf
add
scas
ss
ja
add
jbe
popa
aam
mov
add
xchg
dec
mov
bound
jne
mov
dec
add
idiv
retf
xor
inc
scas
js
pop
or
in
adc
aam
call
jnp
mov
and
or
movs
(bad)
popa
mov
sub
arpl
cmp
mov
push
aam
test
add
(bad)
jae
pop
and
dec
push
outs
sahf
out
jb
lods
aas
movs
mov
xlat
cmp
fld
sub
enter
test
add
jae
cmps
(bad)
in
stc
popa
pop
cmc
jnp
mov
jo
clc
repz
mov
xor
rcl
adc
add
dec
xor
jmp
test
dec
movs
int3
icebp
jp
pop
jb
int3
loopne
xchg
fbstp
pop
sbb
mov
xor
popf
fwait
mov
dec
push
les
iret
ret
popf
push
xchg
dec
cs
pop
popa
and
lods
push
xlat
pushf
imul
push
pop
test
repnz
call
cmc
mov
sbb
pop
repnz
ins
mov
mov
push
out
lods
cmp
out
sub
call
lods
mov
lea
enter
xchg
dec
pop
dec
xlat
aad
sub
xlat
xor
cmp
ins
adc
xchg
test
sub
(bad)
in
nop
inc
jmp
retf
cmps
nop
sbb
in
mov
fcomp
call
div
icebp
call
push
dec
inc
sub
das
loop
clc
pop
or
js
mov
add
retf
cli
mov
repz
rol
sbb
retf
pop
int
inc
cwde
cmc
push
dec
es
dec
push
(bad)
push
xor
mov
push
es
aas
dec
sub
push
pop
sub
das
mov
pop
xor
sbb
sbb
sub
fld
je
mov
stos
jmp
addr16
ret
or
int3
dec
push
inc
ins
dec
and
in
mov
push
(bad)
mov
inc
mov
cld
xlat
xchg
sbb
push
ins
enter
cwde
sub
inc
call
std
not
mov
call
fsqrt
outs
jno
or
sub
jno
jle
dec
je
and
shr
or
dec
push
je
lahf
or
rcl
clc
xor
pushf
pmaxsw
mov
dec
jmp
gs
push
addr16
cmp
pusha
(bad)
fadd
and
add
push
fdiv
push
repnz
fist
or
stos
inc
push
push
dec
(bad)
jg
leave
mov
scas
sbb
bound
fldcw
cld
inc
outs
mov
or
rcr
pop
daa
dec
dec
push
push
std
sbb
lds
retf
addr16
mov
inc
mov
inc
loopne
cmp
les
or
xor
and
jle
imul
test
and
inc
sbb
jp
inc
fbstp
mov
pop
sbb
sbb
ins
sti
test
and
(bad)
push
jle
cwde
pusha
or
dec
inc
loopne
mov
push
xchg
pop
inc
daa
dec
fdivr
add
mov
xlat
ins
cmp
repnz
leave
test
(bad)
adc
stos
aam
sbb
(bad)
or
lods
push
push
or
pop
icebp
mov
cmp
dec
or
mov
xchg
adc
imul
push
loope
and
xchg
mov
call
pop
mov
aad
std
popa
xor
mov
sbb
mov
jae
iret
imul
push
adc
cmp
sub
movs
rcl
sti
sbb
dec
mov
test
shl
mov
shr
imul
lock
jns
jb
sbb
addr16
pop
inc
test
xor
add
lea
popf
ja
sahf
or
and
sub
or
mov
mov
(bad)
stos
test
sub
mov
lods
sti
data16
std
mov
retf
stos
fst
dec
test
dec
mov
fld
jmp
pop
test
xchg
js
ret
dec
xor
stos
lods
xchg
xor
fdiv
add
test
fisttp
add
xchg
loope
pop
adc
or
or
cmps
sub
cs
push
loope
leave
aad
mov
mov
adc
push
push
cmp
mov
pop
pop
and
xchg
mov
lods
mov
sbb
xchg
and
mov
pushf
in
jb
pop
sub
mov
lahf
cli
lods
inc
mov
lahf
xor
cmp
sti
add
aaa
push
aas
cmps
dec
stos
iret
mov
inc
mov
push
pushf
xchg
mov
stos
ret
cdq
and
ror
adc
outs
pop
sub
sbb
(bad)
(bad)
sbb
ror
jne
ret
pop
in
sub
repz
pop
adc
sub
lds
push
mov
nop
push
mov
mov
mov
lahf
or
loope
or
mov
or
xor
cmp
or
mov
movs
push
shl
retf
ret
sbb
mov
imul
fbstp
fiadd
sub
aam
pop
out
adc
mov
pop
test
cmp
or
shr
push
jbe
inc
add
xor
jae
loop
and
dec
sbb
or
ins
inc
in
cs
ror
sbb
es
adc
adc
mov
pop
out
fnstcw
add
sbb
cmp
ss
inc
lods
lahf
inc
mov
lods
and
je
es
push
adc
or
mov
cs
adc
jmp
repz
repz
loop
dec
test
mov
stos
inc
and
aad
outs
fwait
ret
cmp
sahf
mov
in
adc
push
inc
push
nop
ss
and
push
push
xchg
pop
add
pop
nop
xor
retf
test
ret
pusha
mov
pop
cli
ret
ret
inc
xchg
call
jns
jns
ja
jnp
imul
pop
xchg
outs
push
icebp
cmp
mov
push
push
inc
imul
inc
add
push
fs
mov
dec
inc
xchg
jmp
push
push
and
add
add
test
aam
push
cdq
pushf
pushw
or
xor
sub
add
or
xchg
cmp
gs
xor
push
sub
outs
mov
pop
scas
xchg
dec
mov
sub
das
fs
pop
xor
enter
dec
lea
or
push
leave
or
jge
ins
retf
mov
idiv
push
int
push
not
inc
(bad)
in
sbb
stos
sbb
fs
icebp
out
imul
or
lods
test
sahf
fwait
add
fcomi
mov
popa
mov
ror
call
cmps
dec
mov
xlat
inc
xchg
pop
loopne
fnsave
retf
mov
(bad)
test
mov
imul
rcl
mov
ja
sar
and
adc
aam
mov
jb
pop
xchg
movs
pop
das
sub
enter
xor
add
dec
shr
out
iret
stos
lahf
push
sub
fidivr
ds
add
in
pop
rcl
das
scas
(bad)
mov
mov
cli
sub
xchg
push
mov
push
sbb
mov
xchg
cdq
add
shr
mov
(bad)
pushf
and
test
push
mov
cmp
lock
mov
punpckhbw
out
adc
add
push
pop
xor
daa
das
push
mov
(bad)
jg
je
movs
dec
adc
add
jbe
mov
div
pop
ret
mov
and
xor
bound
fld
add
push
and
in
cmps
pop
cmp
add
xchg
or
push
rcr
adc
push
mov
push
sub
iret
add
lock
cmp
imul
cmc
pop
pop
loopne
int
test
rcr
movs
cmp
jns
sub
mov
push
sbb
xchg
cmp
mov
mov
leave
ret
(bad)
fldenv
mov
fldcw
call
mov
imul
loopne
adc
fmul
xchg
push
(bad)
out
dec
inc
ret
sub
retf
imul
adc
jns
xchg
int3
adc
lods
imul
in
pop
std
push
les
dec
jp
or
xor
jnp
div
(bad)
sti
loope
aad
mov
xchg
sub
mov
popa
mov
mov
pop
call
pop
add
pusha
mov
add
adc
push
dec
push
or
daa
sub
leave
movs
sbb
sbb
xchg
mov
and
mov
push
daa
loop
out
add
iret
mov
fsub
sahf
add
xor
(bad)
inc
sbb
xchg
pop
mov
xor
xchg
dec
sbb
push
retf
adc
lock
jne
xor
and
out
fwait
ja
mov
add
cmp
ror
dec
pop
add
dec
mov
xchg
gs
and
shr
fs
jge
fld
mov
lock
pop
clc
mov
push
xchg
dec
add
popa
or
add
repnz
ficomp
hlt
sahf
stos
dec
iret
fsubr
sbb
aas
push
jb
(bad)
push
cld
in
mov
das
xor
dec
pop
sub
dec
bound
pop
mov
scas
(bad)
sbb
das
je
mov
inc
ror
push
cwde
pop
iret
test
dec
das
cmp
dec
out
or
xchg
das
cli
(bad)
fdiv
cmc
js
mov
sub
(bad)
jnp
add
xchg
cwde
and
xor
add
into
xchg
push
add
pop
sub
mov
cli
mov
dec
cmc
les
ins
jecxz
movs
out
sub
ret
jns
push
aaa
push
inc
pusha
jo
add
jecxz
ja
fbstp
sysenter
jg
pcmpgtb
lock
cmps
sbb
sar
mov
stos
adc
rcr
ins
adc
add
(bad)
adc
adc
stos
jnp
jo
movs
jo
jp
jmp
(bad)
jmp
jns
add
push
sbb
sub
mov
mov
sbb
fisubr
push
or
loop
addr16
ja
dec
add
xor
cmp
mov
sub
mov
jl
dec
inc
in
push
push
sahf
ss
cmp
and
push
adc
aad
ja
ret
daa
lods
test
sub
jno
inc
jmp
xor
mov
xor
retf
mov
out
xor
sub
inc
arpl
and
jbe
add
ins
cld
adc
repz
rol
imul
push
stos
push
jl
push
sub
neg
mov
adc
xchg
xchg
cmp
es
stos
or
pop
mov
xor
push
out
xor
cmc
xchg
sub
retf
pop
push
in
push
lea
inc
(bad)
mov
pop
shl
rcl
lea
push
call
dec
inc
jns
mov
loope
and
das
test
out
stos
jge
movs
les
fild
mov
pop
push
push
adc
rol
pmaxsw
in
xor
pop
ins
jmp
jle
jnp
mov
jo
sub
aas
xchg
cs
pop
or
dec
shl
mov
loop
mov
and
mov
lahf
popf
adc
out
inc
pop
(bad)
mov
xchg
cmp
add
stc
and
int
(bad)
(bad)
adc
shl
mov
arpl
inc
leave
adc
push
pop
sub
mov
sub
iret
jmp
leave
iret
fcmovb
enter
push
(bad)
fs
jae
cld
lahf
pop
push
sbb
pop
mov
sub
(bad)
aas
sahf
lods
and
mov
jg
daa
jno
inc
push
inc
add
ja
jae
loop
or
inc
xchg
jno
stos
push
jge
fisub
dec
pop
aaa
dec
cmps
inc
js
mov
enter
into
mov
push
adc
jb
adc
mov
sbb
pop
push
test
fs
imul
and
lods
mov
and
ret
inc
inc
loopne
inc
shl
jnp
jb
retf
mov
add
sbb
jno
ror
jne
aad
jae
push
mov
mov
(bad)
lea
and
popa
inc
inc
xchg
rol
fs
retf
mov
add
cmp
sub
push
mov
push
ds
test
movs
cs
cdq
repz
and
sub
ret
add
xchg
pop
shl
jnp
jb
retf
mov
add
xlat
fst
sbb
sub
call
mov
push
ds
test
test
(bad)
out
out
ror
adc
fs
cmps
jbe
inc
mov
mov
add
mov
mov
adc
dec
(bad)
jnp
aam
cmp
and
jecxz
fadd
std
aaa
jecxz
loope
or
xchg
mov
inc
mov
adc
jbe
xchg
js
(bad)
and
xor
jae
pop
les
mov
and
push
xor
fstp
sbb
jge
and
dec
mov
jno
fld
imul
(bad)
mov
call
pop
xchg
dec
jnp
xchg
out
cmp
or
push
push
aas
out
sub
push
outs
mov
cmps
retf
stos
or
jae
jno
jmp
fild
sub
mov
scas
and
xor
out
cmp
scas
mov
lds
or
scas
inc
lods
sub
inc
mov
xchg
inc
movs
add
shr
in
sahf
sar
mov
dec
lods
push
add
push
inc
xchg
(bad)
rol
fnstsw
je
and
lock
cmc
jbe
mov
mov
dec
movs
push
test
pop
xchg
or
test
xchg
imul
inc
je
mov
pop
sub
push
xchg
jg
scas
xchg
jl
dec
xchg
and
add
hlt
popa
mov
in
mov
push
idiv
imul
xchg
retf
mov
add
push
push
dec
enter
push
ins
xchg
dec
shr
popf
mov
je
and
mov
pop
mov
mov
dec
rcl
push
fs
int
addr16
sbb
adc
jecxz
movs
and
adc
mov
lock
pop
jns
mov
aad
sahf
retf
inc
js
mov
sub
scas
mov
sub
inc
and
push
inc
aam
mov
hlt
or
lds
xchg
retf
push
(bad)
scas
xor
movs
pop
pushw
stos
ins
adc
test
pop
loop
lds
enter
dec
xor
scas
add
fmul
inc
iret
xchg
mov
mov
cmp
bound
cmp
fs
dec
mov
scas
sbb
pop
xchg
outs
clc
mov
sub
push
sbb
jp
fs
jge
lock
pop
sbb
rcl
ror
push
add
xchg
in
jne
lock
(bad)
sub
rcl
test
mov
dec
mov
jb
sub
dec
shr
nop
popf
mov
je
and
repz
pop
and
loope
cmps
sub
jno
cmps
mov
xlat
imul
(bad)
sub
jne
sub
in
je
and
(bad)
clc
in
inc
repnz
rcl
sti
in
and
add
(bad)
loope
sub
push
ja
rol
push
pusha
mov
not
call
adc
cmps
stos
dec
cld
lods
scas
cmp
mov
jns
adc
int3
cmp
in
add
sub
fiadd
cmp
sub
inc
xor
cmp
std
xor
sub
mul
movs
movups
ins
jns
cmc
sub
sbb
xchg
aaa
or
or
bound
sbb
je
fild
inc
adc
sar
and
adc
loopne
in
movs
pop
mov
rcl
aad
rcr
mov
pop
adc
jmp
pop
inc
pop
jg
(bad)
jmp
fimul
clc
mov
sbb
repnz
sbb
test
lods
adc
mov
dec
adc
pop
movs
fcomip
inc
jmp
shl
sbb
retf
cmp
push
pop
push
xchg
hlt
cmc
sti
pop
test
sub
das
cld
cmps
lds
and
jnp
add
rcr
rcr
sub
xlat
push
inc
xor
ja
add
leave
mov
add
cmp
call
push
push
inc
ret
aad
stos
or
stos
add
mov
mov
icebp
cmp
popa
xchg
add
pop
popf
adc
cmps
aad
xchg
pop
call
out
sbb
stos
or
mov
adc
xor
cld
sbb
mov
jmp
mov
aad
outs
add
pop
mov
es
stc
aam
in
push
cdq
aam
push
add
bound
sbb
retf
les
push
aaa
cmp
and
out
adc
ins
pop
aas
icebp
mov
jo
sub
and
lea
xor
icebp
stos
cmps
sub
fisttp
aam
aam
hlt
(bad)
out
movs
mov
imul
xlat
sar
arpl
jae
dec
xchg
pop
mov
mov
int
scas
sti
or
jp
cmp
jo
cmps
xor
cli
lea
inc
mov
mov
inc
mov
xor
out
sbb
push
xor
inc
xchg
movs
or
xor
not
and
jl
call
sub
push
cmp
jnp
les
mov
iret
add
(bad)
push
push
int
sub
sti
xchg
sbb
push
clc
pop
hlt
and
sbb
xchg
test
aas
dec
stos
or
xor
cmp
cmc
inc
inc
ror
mov
mov
popa
into
stos
daa
mov
xchg
cmc
dec
fisttp
push
sar
fild
jp
cld
dec
inc
outs
clc
fbstp
je
jb
addr16
das
js
(bad)
(bad)
repz
ja
sub
test
retf
pushf
hlt
test
sub
mov
cmp
xor
mov
jne
pop
outs
pop
jb
loop
rcr
out
and
(bad)
sub
push
inc
out
adc
ror
add
cmps
xchg
(bad)
out
inc
pop
fmul
inc
jo
je
xchg
inc
xor
outs
fadd
stc
sbb
cs
mov
dec
lock
mov
adc
jle
cmp
or
pop
(bad)
sub
sbb
jnp
ret
(bad)
addr16
into
aas
fwait
aas
xor
jg
out
iret
cs
rcl
adc
pop
daa
fwait
stos
jp
mov
out
call
hlt
and
dec
les
add
mov
rol
push
xor
sub
or
jbe
iret
jmp
jns
jge
test
in
cmp
sub
cmp
xchg
push
pusha
fstp
push
push
and
add
retf
test
cmp
mov
cli
cwde
sub
and
jbe
leave
lds
aad
and
and
fs
pop
inc
add
fst
jl
add
das
inc
mov
fabs
rcl
pop
xchg
mov
push
and
pop
adc
jae
mov
push
push
daa
dec
push
adc
mov
push
pop
jmp
lock
jns
push
repz
(bad)
dec
cmp
fbstp
add
mov
push
dec
mov
(bad)
fmul
push
pop
call
loopne
mov
xor
adc
test
bound
pop
pop
pop
jl
mov
test
mov
xchg
fst
not
aas
mov
lock
test
fisub
pusha
mov
test
pop
popa
stc
mov
sub
ret
dec
(bad)
xor
xchg
into
popa
jecxz
mov
jno
in
dec
clc
jp
ficom
(bad)
sub
mov
or
lds
add
jp
mov
test
mov
aas
imul
fdiv
push
sbb
inc
jns
and
es
dec
mov
sti
push
add
or
stos
mov
icebp
sub
mov
mov
std
mov
not
push
pop
ret
mov
iret
mov
imul
or
(bad)
das
ret
cmp
inc
push
add
xchg
shl
jle
mov
push
stos
(bad)
pop
scas
push
adc
inc
lahf
data16
loop
movs
retf
ror
fbstp
inc
ret
sti
cmp
(bad)
xor
cmp
adc
or
inc
mov
and
push
fistp
pop
and
jno
cmps
fcmovbe
add
fild
xchg
pop
scas
retf
mov
adc
jmp
hlt
cmp
push
test
and
mov
sbb
icebp
and
xlat
inc
cmp
mov
xor
push
popf
or
push
and
cmp
imul
test
cmc
mov
mov
xchg
adc
into
dec
sub
scas
test
les
mov
jo
mov
or
mov
icebp
pop
jbe
pop
inc
sti
ins
scas
test
int
mov
int
mov
imul
scas
xchg
inc
add
mov
retf
test
arpl
daa
les
neg
push
dec
shl
lock
aad
xor
retf
aam
aaa
jae
push
pop
mov
fisubr
repz
stc
call
dec
test
or
icebp
or
and
xor
cli
das
jno
add
jg
jmp
adc
dec
stos
in
mov
popf
lock
test
add
mov
movaps
arpl
inc
lock
imul
stos
scas
xchg
enter
inc
cwde
inc
and
ds
dec
mov
add
xchg
xchg
xor
(bad)
outs
popf
call
pusha
mov
sbb
push
repz
cmp
repz
sub
cs
mov
repz
shl
out
xchg
dec
sbb
adc
js
inc
sub
or
pushf
cmps
sbb
cmc
outs
not
cmps
cmp
xchg
push
add
and
mov
(bad)
mov
repnz
movs
adc
(bad)
out
add
out
adc
jmp
iret
dec
ffreep
pop
sub
dec
outs
mov
fist
push
sub
dec
xchg
test
pop
outs
daa
mov
jg
out
push
ss
fmulp
pusha
xlat
es
add
hlt
mov
clc
stos
xchg
mov
(bad)
sbb
stos
jecxz
inc
inc
dec
dec
sbb
nop
(bad)
mov
or
xchg
xchg
mov
call
xor
pop
jg
fdivrp
in
mov
outs
ins
retf
mov
call
jae
sbb
sti
jge
mov
pop
jbe
cmp
int
push
fwait
dec
sbb
jbe
aad
or
adc
neg
(bad)
xchg
pop
xor
mov
data16
push
clc
out
pop
adc
les
test
icebp
(bad)
mov
cwde
dec
dec
(bad)
xchg
mov
into
ja
push
xor
inc
fimul
leave
pop
test
fistp
mov
jb
mov
or
call
mov
lods
icebp
push
call
out
daa
cmp
test
jmp
adc
and
mov
lods
mov
shr
into
add
and
pusha
mov
sahf
push
mov
outs
ror
jnp
push
mov
aas
icebp
adc
(bad)
out
xchg
fdivr
sub
jne
push
imul
mov
mov
rcr
adc
add
or
sbb
shr
mov
inc
xchg
jl
pop
mov
jmp
js
call
(bad)
fldcw
shl
jmp
jns
ins
into
mov
and
and
in
icebp
cmps
push
scas
xchg
jge
dec
cmp
mov
mov
inc
lahf
ss
popf
fwait
push
mul
scas
shl
jge
or
jne
loope
add
dec
sbb
lock
push
or
sahf
call
loopne
repz
push
hlt
cmps
stos
dec
into
add
icebp
sub
call
xor
sbb
mov
mov
mov
hlt
mov
dec
das
add
mov
arpl
push
sub
add
pop
pop
or
push
adc
jne
xor
pop
jmp
add
mov
sbb
push
add
movs
push
cmp
test
sub
out
dec
fcmovbe
pop
adc
and
inc
mov
cli
pop
jle
mov
push
test
cwde
dec
mov
jb
(bad)
retf
or
loop
repz
js
iret
(bad)
in
mov
mov
ss
mov
cmc
push
fwait
mov
cmps
fisttp
repnz
loope
and
cmp
rep
cdq
pop
sbb
pusha
mov
(bad)
fpatan
pop
push
inc
pop
mov
cs
popf
arpl
jp
inc
mov
xchg
int
xchg
test
int
stos
scas
into
icebp
enter
shl
icebp
sbb
icebp
mov
mov
dec
neg
mov
cld
push
xchg
call
dec
sbb
aam
sub
arpl
lods
push
xor
(bad)
jmp
scas
mov
mov
sub
or
mov
mov
arpl
aas
and
sbb
lods
imul
scas
out
cmc
(bad)
call
or
mov
mov
jo
pop
lods
js
push
push
test
test
push
push
bound
fild
pop
push
cmp
mov
lods
mov
xchg
clc
xchg
pop
fldenv
(bad)
jnp
xchg
call
mov
scas
dec
clc
ret
jnp
sbb
dec
or
mov
pop
jo
leave
adc
dec
enter
xchg
cld
imul
inc
psubsb
js
pop
push
jns
stos
retf
in
jle
retf
into
mov
js
mov
inc
dec
and
and
adc
mov
dec
or
dec
sub
das
push
or
cs
inc
cmp
sbb
pushf
idiv
push
inc
push
adc
dec
xchg
shl
nop
popf
arpl
mov
lds
sar
jge
push
jl
ins
lock
mov
or
call
sub
gs
xchg
dec
lods
(bad)
xor
aad
dec
inc
adc
mov
imul
dec
test
mov
cs
jbe
adc
cdq
jnp
push
fidiv
add
std
and
xor
push
test
clc
mov
pop
cmp
(bad)
int3
dec
inc
add
sub
xor
dec
mov
push
int3
rcr
les
(bad)
call
bound
lahf
leave
mov
cmp
xchg
pop
dec
pop
fisubr
das
std
ret
dec
push
in
clc
and
pop
jge
repnz
fwait
div
lods
outs
pop
div
fild
or
inc
or
rcr
or
pop
mov
scas
sub
add
repnz
mov
nop
jns
mov
popa
(bad)
mov
jecxz
push
xor
ja
das
test
gs
jmp
and
enter
inc
fsubr
xchg
xchg
out
ficom
enter
ret
popf
popf
in
push
xor
mov
jge
daa
sbb
sub
dec
lods
push
jns
pop
fsub
push
ret
cmps
push
ror
mov
mov
dec
jmp
add
dec
ret
loop
xor
or
call
push
popa
mov
ja
cld
jmp
gs
scas
cli
sbb
dec
fiadd
or
mov
sar
xor
sahf
(bad)
mov
jge
xchg
jmp
xor
out
mov
arpl
mov
out
cs
or
lea
xchg
mov
push
dec
inc
push
jp
and
mov
jecxz
push
mov
mov
movs
aad
retf
sub
or
or
jne
iret
push
sub
ins
imul
scas
ins
outs
mov
mov
pusha
dec
push
pusha
jno
out
sub
imul
mov
or
push
div
add
dec
jbe
dec
push
xlat
jnp
cmc
ja
addr16
out
shr
jge
cmp
das
test
(bad)
xor
call
stc
xchg
or
mov
call
das
sbb
stos
adc
cmc
mov
std
out
mov
dec
out
xchg
ds
test
ds
iret
add
cmp
or
jecxz
adc
clc
cmp
scas
and
loope
loopne
push
xchg
cwde
lods
aas
daa
mov
shr
mov
sub
xchg
imul
out
sti
dec
cmp
ins
lahf
jbe
xlat
je
sti
mov
adc
fbstp
or
jnp
nop
int
ror
jp
dec
mov
cdq
enter
or
xor
add
call
cld
movs
sbb
pop
enter
pusha
mov
xchg
push
adc
and
cmp
or
pop
fdiv
fidiv
inc
mov
out
jmp
adc
in
or
aas
jp
rcl
adc
jl
aaa
and
add
in
cmp
mov
fucomip
add
push
stos
retf
mov
imul
lds
imul
and
je
clc
sbb
imul
push
xor
aas
pop
add
repz
push
push
imul
xchg
jle
add
shr
sub
dec
adc
push
xchg
xor
inc
xchg
test
adc
cmps
xchg
pop
shl
push
or
popf
jmp
cmovbe
xchg
js
aam
sbb
xor
and
sub
sub
mov
or
arpl
(bad)
pushf
mov
dec
data16
jae
mov
mov
mov
fidivr
in
or
xlat
ins
jb
(bad)
das
adc
loopne
ror
mov
xchg
retf
sbb
gs
inc
shr
dec
sbb
dec
push
lods
int
mov
in
sbb
mov
jb
and
fild
xor
mov
test
inc
cmp
jno
push
pop
push
inc
int3
and
jp
push
daa
jbe
cmp
cs
cmps
jecxz
shl
mov
and
jae
mov
jbe
sub
pop
xor
dec
outs
les
mov
mov
and
push
or
xchg
cmc
imul
dec
icebp
inc
inc
pusha
inc
pop
pop
jno
and
push
call
pop
aas
inc
fs
mov
in
cwde
out
(bad)
sbb
leave
test
fsub
icebp
dec
mov
inc
mov
jmp
dec
call
pop
adc
and
leave
mov
jae
movd
or
scas
mov
daa
mov
sahf
push
inc
mov
(bad)
test
loope
dec
add
dec
retf
dec
lock
dec
fstp
cmps
jecxz
(bad)
dec
mov
pop
dec
cmp
sbb
inc
xchg
cs
or
sbb
fs
mov
cli
lods
icebp
sar
repz
scas
and
mov
or
or
jno
push
(bad)
mov
into
stos
loope
jne
jge
adc
jp
sub
ret
mov
push
pop
gs
retf
fcomi
pop
cs
test
(bad)
sub
inc
cmps
pop
hlt
mov
sbb
popa
jmp
mov
lock
mov
jl
loope
int
xchg
inc
xchg
out
dec
pop
fbld
fwait
and
imul
cmp
mov
out
ins
test
test
push
test
push
jg
scas
and
and
repnz
popf
push
cld
jnp
add
fcmovne
je
and
adc
daa
push
dec
test
out
in
int
cdq
lahf
lock
fsub
push
dec
(bad)
rcl
or
push
out
lods
ds
mov
jns
sub
lods
dec
fdivr
fcmovb
mov
push
mov
idiv
icebp
push
scas
lds
push
aam
outs
xor
xchg
jle
dec
jle
icebp
loope
push
lods
daa
adc
inc
cwde
lahf
xor
jle
retf
sbb
cli
and
adc
nop
mov
cdq
outs
lods
pop
xchg
dec
stc
loop
inc
cmp
stos
sub
and
adc
mov
xchg
rcr
mov
pop
scas
jno
xchg
jbe
add
loop
jae
mov
test
or
rcl
adc
cmc
dec
xchg
daa
test
fcom
sbb
jecxz
jns
aad
iret
popf
xor
andps
cmp
cmp
in
lock
sbb
mov
repnz
jnp
push
in
inc
sbb
fild
pop
ja
and
ror
hlt
fs
arpl
and
in
add
dec
lea
sub
cs
jle
mov
pop
and
cmp
das
cmp
dec
je
iret
sub
and
ret
mov
ins
sub
and
mov
adc
inc
adc
cmps
inc
pushf
sbb
adc
xor
cmp
loopne
loope
std
movs
loope
adc
scas
dec
popf
push
neg
add
repnz
jle
push
push
sbb
pop
dec
fwait
xchg
cs
jmp
stos
(bad)
(bad)
in
xchg
and
pop
mov
rcr
rol
repz
arpl
sub
clc
sbb
lahf
or
jbe
sub
and
out
fild
js
and
ja
or
xchg
xor
data16
xor
inc
adc
mov
push
or
pushf
sahf
stos
xchg
add
imul
bound
in
push
pop
mov
in
int
mov
scas
sub
ss
cmc
jp
shr
scas
dec
push
mov
xchg
cdq
hlt
adc
xchg
lds
cmp
xchg
cmp
enter
mov
adc
cmp
mov
repnz
retf
pop
(bad)
into
repnz
aad
stos
neg
mov
lock
jmp
stos
cwde
(bad)
shl
(bad)
loope
fadd
pop
enter
int3
mov
push
seta
aad
pop
rcpps
jmp
and
xor
mov
sub
xor
pop
or
mov
out
sub
cwde
or
js
xor
(bad)
popf
data16
jle
add
mov
aas
stos
cld
xchg
push
xchg
scas
iret
push
sub
jecxz
nop
push
idiv
add
xor
(bad)
pop
cmp
push
sbb
push
and
cmps
dec
push
add
loope
sti
lods
pusha
add
(bad)
stc
outs
out
imul
push
xor
adc
dec
mov
and
sbb
adc
mov
mov
in
adc
ror
dec
jns
ds
enter
sub
movs
pop
and
or
cli
pop
jge
addr16
sub
pop
inc
sbb
inc
push
test
add
sub
retf
call
(bad)
push
pop
adc
xchg
jl
out
xchg
je
pop
sbb
dec
jbe
adc
jbe
cmp
add
mov
jle
mov
jo
dec
pusha
push
push
rcl
push
out
cmp
fmul
stos
fiadd
mov
cmp
xchg
mov
stc
test
inc
sub
idiv
popa
jbe
leave
pop
cwde
pop
leave
xor
ffree
cli
ja
mov
fs
add
outs
and
das
dec
out
call
ss
push
push
adc
adc
iret
sub
pop
or
test
sub
mov
pop
mov
jge
adc
mov
mov
push
test
das
jns
inc
out
jle
sbb
push
repz
or
clc
push
dec
pushf
lods
fisttp
cmp
ret
jne
test
sub
inc
jecxz
jo
pop
xchg
sbb
addr16
dec
inc
xchg
loope
imul
jl
pop
cs
cli
xor
sbb
pop
adc
jno
pop
xchg
lahf
pop
push
fcom
push
pusha
iret
sbb
sub
jae
mov
xchg
mov
or
jmp
pop
cwde
ins
aam
push
sub
cwde
into
aam
scas
movs
nop
push
inc
cwde
push
out
mov
test
imul
fild
cmp
lahf
ja
push
mov
jecxz
fsubrp
and
and
out
test
ss
pop
rcr
pop
cmp
je
neg
test
mov
shl
sbb
adc
xor
mov
movs
push
scas
mov
dec
mov
cld
or
fs
push
mov
mov
sti
icebp
push
inc
sbb
pop
mov
push
push
sub
or
mov
inc
adc
or
adc
int
pop
rcl
call
xchg
pop
cmc
jnp
dec
sub
lods
push
enter
adc
jle
retf
fcmovnbe
aaa
retf
enter
inc
add
xlat
fidiv
sbb
popa
inc
add
rcr
sbb
xchg
sbb
sbb
bound
nop
cmp
repz
sti
pop
dec
jg
pop
shl
push
outs
sbb
ret
xchg
pop
sub
(bad)
mov
push
mov
adc
pop
cvtdq2ps
dec
xlat
mov
pop
imul
fsubr
shl
imul
aad
cmp
loope
repz
popf
push
repz
and
jmp
or
test
jmp
ins
(bad)
sub
into
jnp
rcl
and
test
in
jecxz
and
ror
not
xchg
ins
shl
dec
mov
cmps
(bad)
scas
add
or
mov
rol
add
stos
and
adc
jb
or
xchg
cmp
in
inc
lahf
inc
cmp
mov
cmp
cmp
sbb
jg
jle
popa
jg
outs
mov
or
stos
test
sub
jno
aas
ins
xchg
sbb
or
call
pushf
sub
mov
enter
cwde
sub
add
fstp
jno
int3
dec
ins
das
mov
call
fstp
mov
push
out
jge
adc
test
fs
fwait
mov
sub
mov
mov
adc
sub
div
jmp
mov
sub
int
mov
es
gs
aas
clc
mov
inc
sbb
ins
dec
push
or
inc
mov
pop
punpckhbw
add
out
pop
int3
push
xchg
xchg
in
jne
push
out
fcom
or
icebp
cmp
push
pop
imul
aas
daa
ins
dec
icebp
cmp
mov
fs
in
arpl
lds
xchg
cmc
rol
add
les
sub
or
push
shr
outs
mov
xchg
sub
xchg
mov
call
mov
lock
cmps
jno
jmp
add
sbb
stos
push
dec
mov
(bad)
rol
icebp
jae
cmc
cmc
ror
xor
call
aaa
pushw
lahf
cmp
pop
out
push
(bad)
xchg
retf
cmc
aas
test
jmp
arpl
in
pop
gs
test
outs
or
loopne
out
jmp
pop
out
xchg
mov
cmp
cmovb
jo
push
mov
call
arpl
jecxz
add
mov
push
stos
mov
iret
cmc
in
add
or
mov
dec
inc
jl
into
loopne
and
and
sub
adc
aad
mov
inc
mov
call
in
pushf
fisttp
das
mov
test
inc
ins
sub
pop
test
sti
in
xchg
cmp
adc
xor
mov
xor
mov
(bad)
loop
sti
mov
pushf
mov
div
shl
fnstsw
es
test
lahf
aaa
loope
sti
fldenv
stos
ret
mov
sbb
push
fs
fisttp
jl
dec
and
xchg
repz
adc
xlat
mov
mov
push
mov
aas
mov
iret
jne
scas
jo
ins
imul
bound
pop
mov
jg
aas
mov
xchg
imul
push
dec
icebp
test
sub
mov
xor
add
jbe
jns
aaa
fnstsw
iret
mov
inc
mov
in
mov
mov
adc
sti
jg
mov
lods
mov
test
mov
loop
sub
les
das
jle
out
inc
imul
rcr
xchg
int3
sti
and
aaa
dec
leave
stos
fs
cmp
(bad)
aad
cli
ss
adc
xor
fcomp
leave
mov
push
push
loopne
sbb
sbb
mov
arpl
xor
ret
(bad)
push
loope
scas
pop
hlt
xchg
dec
ss
jmp
push
test
sbb
iret
stos
movs
adc
pusha
jp
loope
mov
inc
jp
pop
jle
cmp
xor
inc
or
call
and
fist
stos
mov
push
(bad)
fisub
lds
sbb
jbe
xchg
pop
lock
sbb
mov
sbb
xor
(bad)
fsubr
push
pop
sar
std
es
inc
mov
adc
in
mov
aam
xchg
cmc
cmp
or
xchg
xchg
mov
out
push
sbb
das
mov
retf
push
(bad)
mov
icebp
cwde
adc
inc
pop
lahf
inc
jmp
jmp
addr16
lds
in
cmp
mov
sti
dec
test
push
dec
ret
lods
push
ret
mov
mov
not
and
rol
test
gs
das
popf
bound
jo
xchg
sub
mov
xchg
test
push
stc
sbb
(bad)
cmps
add
pinsrw
cmps
aas
das
xchg
pop
jg
loopne
dec
mov
pushf
push
inc
or
mov
adc
sub
mov
sbb
in
stos
(bad)
push
int
sbb
xor
xor
xlat
and
repz
mov
mov
push
cmp
mov
stos
dec
mov
mov
cmp
out
loop
mov
mov
mov
mov
imul
daa
rol
data16
mov
(bad)
sti
xor
sub
jbe
jno
nop
data16
out
aaa
and
sahf
sub
adc
ins
push
out
push
scas
mov
pop
cmc
loopne
ret
add
in
push
outs
inc
imul
pop
ret
ss
push
jmp
pop
(bad)
fwait
xchg
pop
gs
mov
daa
iret
jge
xchg
xlat
push
add
and
and
les
test
jno
jbe
jb
test
sbb
scas
sub
repnz
jb
mov
lea
pop
mov
ins
dec
cmps
push
cmp
mov
jnp
push
pop
mov
cmp
jno
int
stos
mov
stos
inc
dec
fild
xor
inc
and
in
sbb
inc
mov
js
and
cmp
sub
mov
stos
and
pop
stc
adc
jle
push
outs
or
add
loope
xor
scas
inc
xchg
inc
sub
adc
lods
or
push
cmps
leave
pop
into
(bad)
mov
dec
test
sbb
test
scas
dec
xchg
push
push
into
outs
mov
out
mov
test
(bad)
xor
rcr
daa
or
pop
sbb
pop
mov
or
imul
dec
push
xor
loope
jg
int
push
adc
aam
test
or
jae
repz
ds
rol
xor
out
data16
inc
push
ret
jecxz
or
mov
mov
lock
ret
mov
jle
and
xchg
test
and
test
cwde
ins
ret
dec
xor
and
mov
cs
loop
outs
mov
mov
and
sub
mov
pop
sahf
xlat
in
leave
sbb
mov
cmp
jle
xchg
pop
scas
or
rol
mov
inc
fsubr
test
clc
cmps
push
pop
jnp
jne
or
in
fdiv
or
mov
call
push
mov
pop
daa
or
sbb
jle
into
pop
pop
aaa
out
add
mov
imul
xchg
fbld
add
mov
and
xchg
mov
sub
fimul
or
mov
ds
leave
call
cmp
push
xor
sbb
ins
je
shl
into
shl
ror
movs
jnp
scas
jno
sbb
push
pushf
xchg
fidiv
pop
inc
test
fdiv
inc
pop
push
or
(bad)
ror
xor
dec
rol
popa
adc
xchg
retf
adc
and
push
pop
test
in
jmp
pop
movs
lock
xor
mov
pop
ins
mov
add
rol
repz
in
into
pop
cmp
and
scas
aaa
stos
pop
push
inc
sub
repnz
imul
adc
sbb
or
and
adc
ret
iret
mov
dec
mov
ret
pop
stos
ja
mov
(bad)
dec
cdq
jg
jp
sub
mov
cmp
movs
enter
(bad)
sbb
dec
(bad)
int3
jno
sti
stos
js
adc
out
add
mov
mov
mov
or
sbb
sub
je
and
repnz
pushf
mov
outs
mov
dec
scas
out
push
mov
div
arpl
xchg
dec
ret
out
xchg
std
das
push
push
cli
leave
dec
call
xor
sti
fisttp
mov
xchg
dec
test
adc
adc
sbb
lods
inc
push
out
lea
scas
test
out
cmc
jne
pop
dec
idiv
fstp
jg
xchg
cwde
repz
push
jmp
xor
dec
sub
pop
dec
xchg
lahf
sub
fmulp
(bad)
sbb
inc
fadd
dec
fild
sahf
out
stos
mov
xchg
inc
aad
sbb
loope
mov
shl
std
call
out
push
mov
xor
push
bound
jb
daa
xor
inc
xor
push
test
mov
loopne
sbb
mov
hlt
(bad)
xor
push
shr
pop
retf
mov
push
std
xor
and
jo
stos
dec
and
sbb
xchg
stos
jle
cld
fcomp
jmp
push
sbb
push
mov
mov
mov
inc
call
xor
push
and
icebp
xor
lahf
out
xor
sub
stos
iret
cld
jmp
sar
icebp
nop
popf
(bad)
(bad)
push
dec
xchg
sahf
sbb
add
iret
or
imul
jp
ins
push
cmp
add
pusha
push
sub
mov
pop
(bad)
cwde
stos
(bad)
xor
fidivr
jecxz
fisubr
in
cmp
outs
popf
std
jmp
cwde
sub
pop
retf
aas
shl
dec
push
add
arpl
sahf
sub
or
out
inc
pop
push
in
fs
fwait
sbb
retf
xor
push
int
lods
jl
inc
mov
es
pop
retf
xor
sbb
loopne
pop
add
push
push
(bad)
pop
cdq
mov
sbb
mov
test
ja
(bad)
adc
pop
sub
retf
sbb
or
inc
nop
aas
jbe
xchg
lds
pop
lock
dec
mov
je
mov
dec
aas
and
push
mov
adc
pop
dec
adc
fs
fnstcw
inc
pop
jno
push
jecxz
mov
jo
stos
pusha
and
jge
mov
mov
(bad)
shl
push
imul
repz
inc
xchg
cmp
sub
repnz
dec
jmp
loope
inc
lods
push
xchg
cmp
push
retf
xchg
cmp
sti
xchg
jb
sub
mov
or
ins
sbb
and
in
mov
sbb
push
and
inc
out
fisub
popf
sbb
(bad)
outs
push
cmc
jae
ret
(bad)
mov
mov
fcomp
xchg
or
repz
dec
jbe
sbb
mov
sub
les
and
mov
sub
pop
push
sub
jbe
into
jno
jno
xchg
les
push
mov
add
out
dec
ja
nop
out
pop
pop
or
lods
outs
mov
leave
scas
add
inc
ror
adc
rep
and
or
movs
dec
je
scas
xor
adc
inc
and
push
xchg
call
andnps
xchg
mov
pop
(bad)
jle
mov
cmp
jnp
ins
imul
sub
push
or
push
jl
aaa
scas
cmps
and
cmp
in
mov
mov
sar
xchg
cmps
(bad)
dec
add
push
cld
mov
cmp
sbb
test
(bad)
popa
inc
mov
add
aas
imul
inc
scas
mov
ret
sbb
lds
and
jne
sbb
push
addr16
inc
mul
sub
and
(bad)
jns
lods
popf
jle
cwde
inc
popf
fdivr
pop
or
or
aas
das
mov
scas
(bad)
adc
fcom
aaa
and
pop
push
jbe
call
jns
or
frstor
leave
ss
into
dec
scas
inc
inc
and
and
retf
mov
int3
test
pop
dec
retf
std
cmp
outs
call
push
jo
retf
push
push
or
les
cmp
push
fisub
cmp
je
call
push
sub
sub
aas
loopne
into
sub
xor
mov
lock
mov
dec
shl
cs
fwait
js
and
adc
inc
mov
push
aam
jns
inc
mov
jl
ds
test
cli
sub
cmp
inc
mov
push
pop
xchg
fwait
jl
push
and
add
cld
xchg
test
dec
mov
(bad)
and
add
icebp
out
jns
rcl
xor
fdivr
stc
push
xlat
js
lahf
data16
es
rcr
push
push
fiadd
retf
aaa
(bad)
push
test
out
fsub
stos
test
imul
daa
(bad)
fcomp
dec
jo
push
daa
dec
mov
ror
mov
mov
fisubr
adc
lds
push
mov
push
dec
push
aas
imul
retf
in
aaa
lock
neg
iret
ret
(bad)
sbb
psubq
arpl
nop
dec
xor
retf
sbb
cmps
dec
fs
into
pop
mov
mov
sub
leave
ins
cld
test
xchg
cmp
aaa
(bad)
and
add
push
sub
fimul
mov
xrelease
xchg
jge
mov
hlt
data16
int3
iret
inc
or
dec
push
dec
stos
dec
pop
add
test
xor
mov
jp
xchg
adc
push
or
sub
fidiv
retf
xor
push
mov
test
lock
aas
inc
pop
inc
xlat
push
cld
and
push
jg
frstor
or
movs
fdivr
retf
dec
out
sub
sub
shl
push
imul
sub
mov
jge
push
call
sub
mov
sub
cmc
neg
dec
cmp
and
call
outs
popf
xchg
in
test
mov
ret
mov
mov
push
inc
pop
enter
repnz
sti
(bad)
xchg
pop
adc
pop
ins
pop
sahf
in
or
and
sub
rcl
adc
jbe
js
int3
sub
ds
jne
repnz
cmp
daa
addr16
jp
xchg
lock
mov
xchg
or
jle
test
jecxz
xchg
xor
inc
and
mov
imul
iret
mov
aaa
stos
fwait
xor
in
adc
ret
push
dec
ror
repz
pop
rcl
jmp
adc
cmp
in
ret
xchg
or
pop
imul
xchg
bound
int3
mov
mov
pushf
pop
test
inc
xchg
adc
test
jns
dec
loope
stos
or
js
xor
inc
xchg
cmps
(bad)
(bad)
cmps
and
ja
pusha
sbb
out
ins
push
pusha
xor
pcmpeqd
sbb
scas
mov
mov
inc
jp
fwait
sub
and
iret
popf
or
pushw
mov
sbb
aas
or
jge
push
loop
sub
retf
mov
jmp
aam
mov
scas
fwait
ins
mov
and
inc
add
cs
cli
nop
xchg
mov
stos
call
outs
cmp
sub
out
popf
in
and
add
jb
pushf
call
or
inc
cmps
sub
and
or
and
das
xchg
push
jo
and
mov
or
iret
inc
push
pop
fmul
mov
push
sub
pop
jb
jg
out
mov
and
mov
test
cmp
mov
mov
xchg
push
clc
or
sbb
mov
pusha
or
out
daa
das
sti
(bad)
push
sahf
sub
icebp
pop
xor
(bad)
repz
mov
and
les
push
imul
jns
xchg
jbe
outs
sub
into
fld
movs
adc
or
adc
sti
(bad)
pop
data16
cmc
sub
pop
icebp
ror
ret
inc
repnz
sbb
enter
xchg
retf
sbb
cmp
jnp
ins
cmp
cmps
popa
aaa
push
outs
cmps
je
jns
xchg
out
dec
pop
clc
aaa
stos
dec
test
scas
into
in
popa
addr16
sub
dec
call
jg
loopne
cmp
jbe
or
fcomi
inc
sub
mov
sti
leave
jge
mov
pop
mov
xor
xchg
sti
aad
sub
bnd
dec
mov
add
aad
jo
pop
cld
add
scas
pop
pop
cmp
sti
mov
sbb
fnstsw
push
sub
hlt
cs
or
cmp
xlat
mov
fcom
enter
jl
push
out
aam
(bad)
(bad)
jg
cli
and
ds
in
imul
clc
loope
jnp
xor
cmp
add
and
push
loope
in
pop
mov
mov
dec
dec
inc
enter
out
stc
(bad)
das
inc
add
lds
retf
rcr
sbb
call
adc
sbb
enter
in
cmp
dec
out
daa
repz
jmp
mov
sahf
pop
push
add
fsub
arpl
(bad)
mov
jecxz
int3
out
inc
loop
(bad)
mov
retf
das
bound
pop
nop
dec
inc
movs
mov
lds
nop
fcmovnb
adc
and
sbb
dec
rol
loopne
sbb
pop
mov
aad
jecxz
mov
push
pop
rcl
add
in
dec
push
xchg
jmp
ret
cdq
les
rcl
cmp
xor
fild
sbb
test
adc
js
fcmovnu
pop
and
sub
pop
(bad)
int
xlat
stos
add
popf
js
sar
xor
ror
sub
inc
test
cld
mov
or
jmp
lods
(bad)
mov
es
sbb
xor
ins
push
and
(bad)
mov
es
push
stc
pop
xlat
push
mov
xchg
int
ficomp
icebp
call
fisub
stos
mov
mul
je
mov
cs
ret
mov
adc
cmc
sbb
and
icebp
fucomip
xchg
int
nop
lock
nop
xlat
adc
dec
xor
mov
inc
dec
in
repnz
hlt
mov
out
jno
pop
cmp
(bad)
xchg
pop
xchg
adc
cmp
sti
mov
(bad)
mov
repz
aad
pop
jae
fdivr
xor
addr16
or
(bad)
fs
adc
mov
add
test
idiv
js
ss
into
or
scas
pop
cwde
mov
test
stos
and
push
fcmove
clc
mov
xlat
sbb
out
cwde
adc
jle
xchg
popf
jo
dec
test
mov
xor
and
aas
scas
leave
and
sub
mov
stos
jb
add
mov
and
push
xor
out
in
pop
dec
cmp
adc
clc
sbb
and
mov
(bad)
stc
push
mov
ss
mov
dec
test
jmp
sbb
imul
xor
ret
(bad)
pop
les
dec
sub
arpl
adc
xor
push
mov
imul
imul
mov
push
ret
idiv
das
ja
mov
pop
sti
hlt
loop
adc
jbe
mov
pop
or
fst
xchg
mov
mov
or
sub
push
nop
in
mov
or
mov
fs
out
das
das
mov
inc
stc
je
xlat
push
sbb
jmp
popf
mov
xchg
jne
push
jmp
mov
xchg
dec
sub
add
loopne
fnstenv
add
push
adc
add
sbb
sbb
neg
and
stc
jge
(bad)
cmp
mov
(bad)
test
jecxz
fist
je
enter
pop
sub
jmp
out
enter
mov
pop
mov
shr
jb
jp
sub
(bad)
or
lods
imul
cmp
lods
mov
fild
jg
xor
mov
loop
nop
xchg
out
in
pushf
sub
mov
movs
jns
add
cli
ret
repz
mov
sahf
enter
nop
mov
sub
mov
sti
push
inc
nop
xchg
adc
push
jno
aad
jg
fwait
mov
(bad)
hlt
into
cmp
ret
ret
loope
cdq
mov
sub
cwde
sub
sub
pop
je
out
push
(bad)
dec
int3
scas
pop
mov
pop
mov
nop
sahf
lds
aad
mov
xchg
cmp
out
mov
mov
sti
adc
sub
lods
pop
push
das
mov
pushf
jecxz
mov
cmps
rcl
in
inc
(bad)
fisubr
sub
adc
jl
add
inc
push
mov
mov
add
bnd
mov
push
daa
repnz
xor
lahf
mov
neg
dec
fsub
sub
inc
cmp
mov
shl
jns
loop
jno
cli
out
jno
jmp
mov
or
bound
inc
jge
pop
pop
int
or
push
popa
mov
fs
adc
jnp
cmp
rcl
shr
or
fisub
xchg
inc
jecxz
push
fiadd
pop
mov
icebp
mov
xlat
xor
push
add
inc
scas
(bad)
stos
jecxz
pop
mov
jle
enter
adc
inc
and
xchg
call
adc
adc
cmp
and
push
mov
add
or
dec
ins
loopne
fdiv
or
ds
push
bound
adc
jmp
cld
or
mov
xor
sub
mov
sbb
pop
sub
dec
xlat
nop
jge
xor
add
aam
inc
cmc
mov
jge
pushf
cmc
mov
scas
xchg
pusha
sbb
ins
cmps
hlt
push
xchg
cmps
push
test
aaa
sar
add
ss
aaa
rol
push
rol
xchg
adc
scas
or
inc
hlt
stos
sub
adc
dec
sti
shl
nop
dec
pop
or
jb
std
ss
dec
ror
push
push
out
(bad)
jl
(bad)
pop
xor
mov
xor
add
push
and
outs
ror
test
call
outs
(bad)
in
icebp
ret
or
addr16
xor
lahf
movs
in
jg
movs
mov
mov
mov
adc
outs
lods
push
push
jg
dec
xchg
adc
adc
or
push
or
or
pop
aas
stos
ins
into
lock
(bad)
mov
jns
xor
push
loop
xlat
scas
add
repnz
mov
shr
imul
(bad)
push
inc
retf
rcl
xor
xchg
pop
mov
cli
or
shr
jnp
fisub
jg
dec
ss
jmp
push
xchg
lock
(bad)
adc
jae
add
out
(bad)
ss
fwait
push
sbb
data16
je
or
mov
jne
mov
push
sbb
cmp
pop
adc
xchg
pop
mov
lods
mov
jo
push
mov
enter
mov
frstor
sub
test
pop
add
xchg
cs
inc
test
fbld
outs
jg
mov
pop
mov
aad
mov
jae
adc
fld
push
or
sbb
adc
sahf
mov
(bad)
sti
rol
shl
mov
inc
and
hlt
xchg
push
fsub
dec
shr
dec
ss
jge
icebp
hlt
popa
test
cmc
mov
adc
imul
in
xchg
mov
push
dec
sub
stos
data16
out
mov
inc
pushf
or
inc
aam
in
mov
imul
fsubr
retf
add
outs
scas
jge
jg
sbb
dec
ror
sub
je
and
add
fisttp
xor
add
loop
(bad)
and
gs
jge
ins
adc
push
jb
pop
xchg
iret
outs
adc
xor
lock
lock
mov
xchg
retf
jg
retf
or
adc
or
cli
fwait
div
push
ins
xchg
rcr
fs
test
aad
sbb
call
and
mov
xchg
xchg
and
loopne
cli
ss
xchg
out
outs
lods
xchg
sbb
rcl
mov
in
je
adc
lock
push
mov
push
enter
dec
fbld
push
arpl
push
push
dec
mov
sbb
retf
push
(bad)
pop
push
retf
mov
inc
mov
out
pop
cmp
mov
mov
xchg
scas
dec
sti
cmp
std
je
ins
mov
mov
lods
(bad)
jo
sahf
fcom
dec
mov
into
add
gs
test
xor
dec
not
mov
stos
loop
cld
ja
cld
or
xor
adc
rol
test
out
sbb
div
lds
jnp
lahf
and
push
cmc
jge
sti
xor
stos
mov
bound
shl
test
push
test
jno
or
mov
push
xor
and
or
jl
test
pop
mov
pop
call
jl
or
dec
(bad)
movs
inc
cdq
shl
mov
movs
scas
data16
sub
icebp
push
out
mov
sti
outs
push
mov
sbb
or
out
mov
push
jne
jl
cmp
in
clc
rcl
jnp
pop
pop
ja
mov
idiv
push
fldenv
xlat
adc
sub
rcl
test
scas
ret
mov
into
sub
outs
xor
es
xor
mov
dec
xchg
ja
test
lods
cmps
mov
mov
pop
rcl
inc
test
ret
and
push
stc
retf
sti
out
adc
imul
and
call
or
cmps
in
test
(bad)
jmp
mov
push
or
sub
pop
and
pop
fucom
lods
cmps
or
pop
fmul
jb
mov
cli
es
dec
jo
jle
out
adc
mov
es
or
mov
mov
out
cmps
stos
lock
ret
ja
mov
movsx
add
bound
adc
imul
mov
add
and
xor
outs
mov
pop
inc
dec
xchg
cmp
mov
mov
adc
out
push
mov
push
es
add
loop
inc
jnp
ins
add
sub
das
and
lods
clc
je
adc
sub
jg
out
pop
mov
xchg
lahf
and
push
jbe
jno
pusha
shl
hlt
ja
jle
pop
pop
retf
repnz
cdq
mov
push
outs
and
xchg
cmp
push
mov
daa
cwde
popa
dec
(bad)
push
push
sub
cmp
out
les
sti
lea
cmc
cli
xchg
rep
push
mov
push
push
(bad)
xor
scas
push
stos
xor
mov
cmp
mov
jae
int
push
leave
inc
or
inc
push
sbb
mov
scas
add
xor
push
pop
add
mov
push
jmp
mov
in
pop
push
adc
sub
add
sub
push
jle
aas
outs
cmp
jmp
out
movs
leave
pop
dec
or
push
cmps
cmp
xchg
push
cmp
and
jp
cmp
fisttp
enter
sub
out
cmovle
or
push
int3
jbe
jnp
dec
mov
push
jl
ins
aad
lock
xchg
add
dec
xlat
cs
jge
cmc
and
inc
and
dec
in
data16
or
inc
cs
lds
push
lds
out
jb
mov
and
or
in
cld
test
rcr
xor
hlt
dec
cmp
in
stc
aaa
jg
(bad)
hlt
shl
mov
mov
or
outs
or
cmp
mov
scas
cmp
das
push
mov
pop
mov
scas
shl
dec
rep
outs
inc
into
btr
adc
test
mov
aam
adc
push
aad
outs
push
retf
mov
dec
pusha
les
sbb
test
retf
out
in
sub
dec
xchg
pop
add
xlat
mov
cmps
jns
mov
shl
scas
mov
popw
pusha
cmp
or
jmp
ds
stos
jbe
dec
xchg
sbb
or
stos
sub
mov
jae
das
push
out
stos
pop
pop
xor
cmp
pop
cld
in
scas
stos
jnp
xchg
pop
pop
jns
and
jmp
js
mov
mov
push
sub
and
push
adc
or
test
loopne
repz
enter
mov
xor
into
xchg
dec
add
jbe
xchg
scas
pop
inc
add
call
xor
repz
add
mov
pop
xor
inc
jmp
pandn
lds
nop
sub
mov
push
add
div
mov
jmp
pop
in
or
xor
sbb
pop
adc
push
aaa
mov
pop
add
stos
shl
push
out
imul
push
push
lahf
test
mov
xchg
inc
les
mov
sbb
xchg
push
jmp
lea
loope
popf
int3
pop
repz
ja
dec
mov
jmp
movs
pop
jge
div
cli
outs
jne
fistp
outs
test
push
adc
sub
mov
icebp
dec
fadd
out
aam
in
pop
push
in
ficomp
dec
pop
scas
mov
in
xor
adc
das
outs
push
mov
lahf
xlat
mov
inc
mov
jo
(bad)
fstp
retf
mov
sub
cmp
mov
int
les
stos
cmp
mov
adc
ins
push
clc
mov
lods
mov
jg
add
mov
aam
mov
xchg
scas
outs
pop
(bad)
jl
sahf
add
mov
fsub
or
scas
and
and
jge
jbe
ja
test
xor
mov
cdq
(bad)
xor
scas
jg
push
push
add
and
sbb
mov
shl
pop
cs
cmc
push
adc
mov
icebp
fcomp
std
pop
pusha
jg
nop
sahf
loope
cwde
ret
mov
dec
int
push
xchg
call
retf
sbb
shl
pusha
pop
xor
dec
and
lahf
in
add
jecxz
dec
and
xchg
sbb
int
fidivr
mov
inc
xor
pop
loope
jg
scas
dec
and
icebp
in
and
xlat
and
mov
jmp
cmp
push
ins
stos
fisttp
enter
jle
adc
sub
(bad)
push
lods
sti
nop
pushf
adc
adc
add
stos
push
in
mov
das
xchg
(bad)
and
addr16
inc
mov
mov
andps
xor
(bad)
mov
add
repnz
div
call
cmps
daa
jbe
jge
jb
dec
jmp
rcr
cmp
sbb
popa
xor
dec
add
jmp
jle
xchg
jmp
cmp
into
xchg
sbb
jg
pop
xchg
adc
cmps
cmc
mov
rcl
(bad)
es
jmp
jo
mov
in
cmp
push
ret
iret
adc
xchg
cmps
xchg
ret
push
jge
mov
neg
lock
call
out
dec
push
addr16
(bad)
ret
cmps
das
dec
mov
bound
jmp
sbb
jge
pusha
ja
pop
pushf
retf
or
jl
sub
(bad)
fdivp
mov
lock
imul
mov
cli
fs
pop
pop
cmps
ret
inc
and
sbb
dec
add
inc
(bad)
jns
sub
adc
aaa
test
fild
inc
dec
sahf
mov
mov
mov
sbb
cli
inc
xor
xor
cmp
push
sbb
test
push
fwait
cmps
mov
fisub
push
(bad)
xor
les
mov
sub
inc
sub
or
pop
push
push
cmp
les
xor
inc
sbb
inc
dec
test
jb
mov
sub
cmp
std
out
mov
or
sub
xchg
jp
icebp
retf
iret
ins
push
xchg
inc
jmp
icebp
leave
pusha
or
sbb
mov
fcomp
adc
(bad)
stos
call
stos
push
pop
test
hlt
cmps
lea
imul
adc
add
cmp
push
imul
push
inc
cmp
cmp
enter
push
loopne
je
test
daa
pop
xor
mov
inc
xor
sar
xchg
leave
scas
pop
pop
xchg
fdivr
xor
xchg
iret
mov
inc
jb
jmp
mov
aaa
shr
pop
mov
push
daa
cmps
iretw
cld
jbe
iret
or
scas
daa
hlt
pop
sub
aad
mov
jl
mov
xlat
shl
push
adc
xchg
pop
cmc
and
sub
mov
pop
push
les
jecxz
cmp
push
scas
xchg
lea
add
test
inc
mov
jae
loopne
xor
xchg
mov
out
imul
or
and
not
or
push
fcomp
inc
(bad)
sbb
retf
ret
pop
mov
pusha
dec
je
add
dec
aaa
xchg
push
jl
xchg
push
outs
dec
sub
dec
pushf
scas
pop
(bad)
dec
cmp
inc
push
pop
ret
mov
sub
dec
or
pushf
repz
enter
push
arpl
add
push
mov
jp
add
in
es
into
xor
(bad)
pop
mov
lds
dec
jmp
sub
push
fs
mov
repz
inc
scas
sar
call
aad
cmp
add
sub
scas
test
mov
dec
data16
cld
mov
hlt
mov
mov
imul
aad
loop
test
or
scas
and
das
xlat
movs
adc
xchg
jns
or
in
jmp
je
xchg
aad
leave
rcr
lods
mov
lea
fldcw
push
daa
cdq
pop
sar
push
rcl
cmp
push
fwait
je
imul
dec
xchg
mov
sar
icebp
jecxz
push
pushf
cwde
imul
xchg
sbb
cmp
jmp
test
arpl
icebp
inc
daa
fwait
mov
push
pop
into
in
mov
jne
add
dec
(bad)
scas
pop
pop
les
pop
xchg
fbld
add
iret
int3
or
ret
out
inc
push
das
push
mov
jecxz
push
xchg
cmps
out
inc
(bad)
stos
sti
retf
dec
std
lods
xchg
jns
adc
push
xchg
mov
jle
and
scas
gs
add
nop
repz
add
jb
dec
jae
mov
adc
dec
pop
xchg
imul
lea
aad
ficomp
test
sbb
or
push
adc
(bad)
js
add
pusha
pop
sub
pop
or
and
das
xor
out
dec
jo
test
fneni(8087
add
add
shl
inc
add
mov
inc
repnz
adc
mov
test
push
add
popf
ss
and
mov
es
fdiv
jno
enter
mov
int
dec
and
into
and
push
xor
mov
push
mov
loop
mov
push
cmp
jg
xchg
add
pop
mov
push
jmp
retf
daa
add
stos
xchg
sbb
outs
enter
test
nop
gs
dec
lahf
fadd
add
mov
jp
dec
pop
outs
pop
pop
cmp
es
jno
in
cli
dec
mov
sbb
xor
vpaddusb
sahf
cld
push
jno
int3
xor
mov
mov
jno
mov
jmp
add
dec
pop
popf
sahf
cmp
mov
loop
fimul
xchg
ins
js
ficom
xchg
mov
push
xchg
jns
out
xchg
pop
cwde
stc
hlt
or
mov
add
cs
mov
jb
test
inc
scas
(bad)
dec
js
jne
in
cmp
pop
(bad)
cmp
mov
push
(bad)
push
stos
adc
fisttp
dec
dec
lock
(bad)
nop
mov
and
stos
hlt
dec
jmp
xchg
sub
daa
outs
test
add
out
fisttp
mov
xchg
xlat
pushf
stos
or
out
ins
in
jmp
icebp
(bad)
pushf
ja
mov
pusha
ja
aam
rcr
jmp
jne
mov
call
sbb
out
xchg
hlt
sub
push
mov
in
push
add
or
rcl
call
sub
dec
or
jns
dec
mov
sub
xchg
mov
push
inc
(bad)
xor
ret
ins
jg
or
sub
imul
jno
mov
xchg
mov
pusha
push
xchg
je
push
repnz
sub
mov
retf
jge
sti
pop
clc
inc
sub
fwait
inc
cdq
test
scas
pop
fiadd
pcmpgtb
out
adc
stos
push
cmp
sub
push
pushf
cmp
mov
or
adc
jl
and
ret
xchg
stos
out
imul
mov
shl
loopne
pshufw
mov
push
das
jge
xchg
test
ja
xor
stc
aam
pushf
xchg
dec
das
es
cmp
pop
jnp
push
sub
mov
add
sub
ret
fadd
in
xchg
and
and
mov
pop
xchg
lahf
and
std
pslld
or
jo
pop
outs
imul
push
inc
add
je
cld
and
lahf
jnp
xor
out
sbb
int
test
sbb
js
xchg
or
xor
mul
sahf
mov
pushf
xchg
ds
cmc
pusha
or
inc
jns
pusha
push
rcl
clc
dec
push
leave
jno
mov
sahf
retf
cmp
push
push
adc
(bad)
jns
or
cmps
inc
pusha
aas
inc
and
cld
popa
nop
iret
push
jmp
sub
mov
push
test
sti
call
push
pop
xor
sbb
out
and
lahf
adc
(bad)
dec
push
mov
mov
retf
retf
rcl
call
and
pushf
sahf
aam
xor
sbb
dec
das
add
popf
push
inc
stc
call
test
jge
dec
add
push
sub
out
stos
adc
imul
xchg
mov
push
push
out
xlat
mov
sub
dec
xchg
push
add
daa
js
pop
inc
inc
mov
cmc
mov
mov
inc
mov
retf
and
addr16
jp
sub
sbb
jmp
stc
stos
inc
mov
dec
dec
scas
jnp
aaa
loop
sub
and
push
retf
scas
cdq
pop
mov
mov
xchg
test
retf
popa
enter
movs
stos
outs
sti
inc
ror
into
ins
mov
leave
cmps
jl
jnp
fwait
aas
jl
pushw
sub
jnp
mov
out
mov
sbb
inc
inc
mov
icebp
push
fidivr
fwait
dec
repnz
hlt
inc
mov
xchg
push
sbb
mov
outs
pusha
loope
xchg
icebp
repz
je
fbstp
add
or
jbe
and
push
pop
jo
(bad)
sahf
push
retf
cmp
iret
enter
and
test
lahf
pop
jl
outs
sahf
in
or
addr16
(bad)
pop
adc
hlt
retf
cmp
icebp
jo
(bad)
xchg
mov
or
sbb
mov
mov
iret
cwde
sti
pop
imul
mov
pop
ret
and
lahf
xchg
out
imul
xor
bnd
sbb
shl
push
mov
repz
hlt
sbb
jb
mov
xchg
push
jnp
aas
fwait
xchg
push
retf
sub
xchg
loope
sub
fsub
hlt
cdq
fisub
icebp
inc
icebp
stos
push
cwde
cmc
std
mov
(bad)
out
sar
fwait
push
adc
adc
push
out
push
cmp
add
iret
xor
(bad)
pusha
mov
cmps
pop
and
jns
pop
loop
std
repnz
mov
xor
push
xchg
neg
repnz
mov
xor
inc
aas
jmp
cmp
xchg
dec
jne
loop
xchg
and
data16
xor
imul
push
and
mov
or
xchg
jnp
retf
push
jo
push
es
dec
or
inc
mov
xchg
cmp
int
and
(bad)
stos
xor
(bad)
mov
mov
aas
inc
sbb
out
dec
sub
sti
jnp
push
mov
out
imul
cs
aam
das
xchg
aas
xchg
mov
jg
and
cs
add
dec
shl
sub
xlat
mov
jnp
xchg
mov
test
cmp
pop
dec
xchg
aad
xchg
pusha
fcom
pop
sbb
out
mov
add
scas
popa
push
out
push
in
mov
inc
mov
std
push
mov
iret
cs
xchg
pop
jmp
ja
repnz
mov
pusha
int
shr
retf
mov
xchg
scas
fsubp
jnp
out
mov
adc
cwde
mov
call
or
inc
push
or
jbe
lea
imul
and
push
push
hlt
mov
mov
xor
mov
xchg
cli
ror
sub
call
ins
sbb
xor
mov
mov
mov
jne
cmp
sbb
test
rcl
mov
sbb
mov
pop
inc
fadd
add
rol
arpl
(bad)
in
loopne
cwde
stos
hlt
stc
(bad)
mov
enter
or
loopne
inc
push
jle
in
xchg
sbb
jo
sti
lods
(bad)
int3
inc
ss
pop
into
aad
das
xor
pop
popf
sahf
arpl
add
push
call
xor
mov
dec
mov
lahf
xchg
mov
popf
nop
fneni(8087
add
mov
fidiv
fldenv
dec
shr
out
pop
push
dec
xchg
adc
movs
mov
loopne
scas
jne
and
xchg
adc
aad
inc
add
fsubr
pop
jo
scas
xchg
mov
scas
push
xchg
xor
lock
scas
pop
(bad)
jp
cmp
mov
shl
lea
dec
int3
adc
test
das
inc
jl
cmp
movs
(bad)
cmps
cmps
lock
mov
das
mov
fcomp
add
or
mov
out
dec
leave
push
adc
and
fs
mov
cmp
scas
daa
fsub
lea
pop
call
cmps
sub
cmp
adc
imul
ds
mov
fadd
(bad)
mov
inc
cmp
pushfw
inc
jns
cmp
fsub
out
push
es
test
enter
sub
xchg
stos
das
cmp
mov
add
xor
mov
push
mov
enter
retf
push
sahf
retf
adc
les
cli
dec
jecxz
retf
inc
jno
sub
or
jecxz
pop
inc
mov
shl
jbe
push
push
lods
das
retf
out
data16
nop
arpl
aas
idiv
jo
jg
fild
icebp
or
sub
dec
stos
or
icebp
add
jg
jl
push
push
sub
lods
mov
into
push
mov
mov
sub
add
or
cmp
jp
dec
xchg
mov
inc
shr
repnz
js
stos
xchg
or
mov
mov
arpl
and
or
jle
dec
fld
or
in
sub
fimul
test
sbb
push
sub
sbb
(bad)
(bad)
icebp
mov
std
movs
mov
sub
sub
jns
pushf
into
cmp
or
mov
or
sbb
or
or
(bad)
shl
jl
call
mov
outs
xchg
retw
fist
(bad)
mov
adc
pusha
jecxz
movs
inc
fwait
inc
sahf
cmp
jp
(bad)
repz
out
punpckhwd
mov
add
movs
aad
cmp
jno
test
in
inc
pusha
ds
inc
push
jl
je
dec
push
add
mov
ret
rol
cmp
push
loope
stos
xor
dec
retf
cdq
mov
outs
sbb
sbb
push
in
int3
dec
cs
lock
mov
dec
sub
dec
push
sbb
icebp
retf
add
push
mov
pop
mov
inc
xchg
les
inc
xor
and
fimul
out
cmp
add
outs
daa
ins
ss
mov
add
cld
mov
jl
(bad)
xor
lods
dec
push
enter
push
cmp
push
dec
adc
push
test
mov
xlat
in
and
pop
and
not
pop
loopne
test
mov
push
cmp
hlt
pusha
ds
inc
cmp
inc
push
sbb
add
dec
pop
inc
mov
dec
cmp
adc
lahf
pop
enter
add
test
(bad)
pushf
icebp
pop
enter
movs
push
sbb
or
pop
cmc
rcl
add
push
or
mov
sub
scas
dec
js
push
stos
mov
jmp
mov
sub
stos
ins
add
es
in
cmp
xor
call
lock
adc
fcom
(bad)
call
sbb
ja
das
or
add
xchg
cmc
fist
fstp
sbb
aas
addr16
mov
ret
out
push
dec
xchg
add
and
aas
pop
sbb
iret
or
ins
imul
pop
mov
mov
or
mov
data16
jns
adc
and
inc
cwde
xor
mov
push
pop
mov
dec
das
stc
mov
popf
add
xlat
and
daa
sbb
sub
sub
sbb
stc
sub
add
pop
xor
(bad)
mov
xchg
(bad)
lds
hlt
mov
jge
jle
mov
xchg
jl
xchg
stc
dec
sbb
mov
test
push
das
inc
mov
cmp
xlat
or
jno
cmp
xor
sbb
loopne
fs
inc
cmp
or
add
cmps
pop
ret
sub
stos
popa
aad
cmp
(bad)
and
ror
arpl
imul
in
mov
adc
outs
jne
repnz
pop
sub
retf
fisttp
addr16
ret
sbb
ins
mov
(bad)
push
push
fs
mov
xchg
rcr
pop
jmp
inc
test
ror
call
add
mov
jne
(bad)
mov
cmps
movs
inc
movs
dec
xchg
int
mov
xchg
ins
adc
scas
pop
lea
mov
in
sub
ins
leave
jnp
xor
inc
cmps
pop
out
stc
pop
cmp
daa
cmp
pop
sub
push
in
mov
jge
ins
push
mov
and
(bad)
retf
xor
add
pop
mov
mov
stos
(bad)
sbb
movs
aad
pop
clc
cwde
outs
adc
out
push
sti
xor
sub
jae
push
inc
push
xchg
mov
retf
or
popf
pop
jo
mov
push
inc
pushf
(bad)
movs
loopne
pop
pop
mov
cmp
and
scas
(bad)
out
adc
outs
pop
shr
cmps
jecxz
aam
sbb
cmps
or
ret
mov
ror
jg
stos
xchg
inc
dec
or
xchg
imul
jnp
xchg
sub
mov
jle
jae
cwde
push
fwait
xor
sbb
mov
jne
sub
cmps
stos
cmp
push
dec
std
push
movs
adc
stos
jg
sub
push
aas
mov
es
pop
inc
jnp
xor
ss
and
xchg
cs
mov
inc
cmp
xchg
movs
jge
inc
sbb
repz
add
dec
xchg
ss
fwait
cld
enter
jae
push
scas
(bad)
mov
test
popf
xor
repnz
enter
call
sbb
sub
jae
movs
in
test
fistp
movs
add
pop
sub
call
imul
sub
mov
xchg
mov
jp
pop
data16
push
lds
shr
sbb
adc
cs
mov
out
out
cs
pop
add
pop
jle
ds
cli
dec
lock
xchg
in
or
cmp
sbb
adc
and
sub
mov
into
dec
or
pop
arpl
ret
cwde
or
push
xor
jo
jecxz
pop
adc
mov
mov
sbb
push
push
pop
ins
lods
ss
dec
popf
mov
lds
jbe
inc
pop
pop
lods
arpl
push
mov
mov
test
rol
sahf
mov
mov
mov
lea
lock
and
aaa
jae
in
mov
pop
ror
(bad)
jns
pop
or
mov
mov
cmps
in
shl
pop
xrelease
mov
clc
test
push
loopne
mov
jns
or
lds
xchg
inc
mov
add
fmulp
jno
cmp
sbb
les
dec
push
mov
test
and
movs
aaa
mov
add
inc
pop
neg
mov
fsub
sub
push
jp
mov
push
(bad)
mov
mov
inc
outs
jnp
in
aaa
arpl
jae
mov
das
mov
fisub
add
jecxz
mov
add
pushf
adc
xchg
mov
sub
loop
xchg
add
fwait
xor
jg
fdivr
test
mov
xor
dec
mov
rol
daa
dec
xchg
retf
jb
mov
xchg
outs
or
add
call
push
jae
cmc
pop
outs
inc
cli
pop
mov
mov
popf
idiv
push
clc
movs
mov
push
out
dec
ins
aad
imul
mov
mov
cs
adc
dec
jle
push
push
mov
sub
fbld
push
stc
xor
xchg
test
scas
ins
adc
and
sub
mov
aas
xchg
mov
push
inc
das
ror
(bad)
cmp
cmp
pop
mov
mov
call
lods
pop
jle
and
push
fs
and
jp
clc
neg
popa
icebp
popa
jl
sbb
aad
sbb
sbb
in
mov
clc
inc
ss
sbb
scas
mov
xchg
fcom
cmp
test
mov
adc
mov
jmp
leave
hlt
xchg
mov
ret
xor
xchg
inc
js
xor
scas
jecxz
push
retf
dec
sahf
popf
into
xchg
enter
mov
xchg
pushf
sti
fwait
(bad)
aad
pop
rcl
push
repnz
into
add
jmp
fidivr
xchg
mov
out
data16
or
or
mov
pop
push
push
(bad)
jg
in
js
xor
xchg
jmp
cmp
int3
div
pop
data16
(bad)
dec
aaa
rcl
cmp
daa
pop
stc
cmp
stos
int3
js
add
inc
cld
cmp
dec
dec
push
pop
sub
bound
mov
(bad)
movs
inc
mov
stos
rol
stos
imul
adc
dec
adc
and
fist
push
add
mov
mov
fstp
fstp
cmps
sbb
mov
sub
bound
cwde
mov
sub
inc
inc
retf
cmp
pop
add
and
xchg
pop
mov
out
mov
movs
pop
js
or
inc
xchg
rcr
push
jp
icebp
cs
cs
pop
push
xchg
arpl
ins
inc
inc
loop
iret
idiv
mov
sub
add
and
scas
or
push
(bad)
ja
nop
scas
push
loopne
lods
push
mov
hlt
aas
popa
out
aas
and
xchg
mov
jno
sbb
inc
sbb
test
add
fiadd
xchg
les
test
push
cmps
retf
mov
addr16
cmp
and
shl
icebp
cmps
dec
sbb
sbb
imul
adc
call
jmp
jp
int3
in
rcl
xchg
jns
xchg
scas
xchg
jae
in
and
in
(bad)
xchg
cmp
(bad)
jp
xor
rcl
enter
cmp
rcl
jnp
aas
lea
mov
mov
ret
cmps
pop
sub
xchg
adc
jl
(bad)
xchg
jbe
inc
test
clc
(bad)
repnz
div
ds
jecxz
or
xchg
cmp
add
xchg
jecxz
cmc
aam
pop
repnz
xchg
daa
lahf
leave
rcr
add
hlt
mov
pop
xchg
pop
mov
pop
retf
cli
scas
sbb
pop
arpl
mov
inc
mov
leave
pop
sbb
fs
popf
jno
repz
test
test
pushf
cmc
popf
arpl
mov
xchg
add
aaa
cdq
mov
cld
jo
adc
xchg
jle
mov
sar
xchg
sti
mov
mov
out
jno
xchg
or
in
xchg
jmp
mov
xchg
push
(bad)
xlat
mov
inc
enter
push
and
lods
push
(bad)
xchg
mov
in
gs
inc
das
ret
fwait
jno
push
aaa
loop
push
sub
test
mov
xor
(bad)
and
(bad)
test
out
js
nop
ret
push
loopne
xor
imul
mov
push
push
pop
xor
mov
xchg
js
inc
into
cmp
pop
int3
push
or
shr
or
iret
cmp
div
pushw
mov
in
je
retf
sub
loopne
sub
fisttp
and
fcomp
into
popa
out
sbb
jp
pop
enter
cmp
aad
push
mov
cmp
jg
dec
sub
adc
jecxz
sub
and
cld
inc
xor
push
mov
xor
or
dec
pop
cmp
cli
out
shr
inc
and
call
leave
inc
inc
jp
inc
push
add
lods
mov
and
pop
xchg
adc
add
jg
hlt
add
lods
fucom
xchg
pop
mov
stc
sahf
inc
adc
pusha
mov
mov
cs
push
sbb
sbb
addr16
out
test
repz
add
shl
jg
mov
push
or
daa
imul
mov
arpl
je
outs
ins
das
cmps
bound
mov
movs
shl
cmp
and
sub
test
rol
stc
mov
jmp
xchg
loop
iret
outs
mov
cli
jecxz
les
pop
aad
mov
movs
in
cmp
std
iret
push
mov
rol
test
jo
and
or
inc
and
icebp
sub
xchg
shr
mov
(bad)
iret
push
psadbw
inc
mov
xlat
outs
inc
cmps
cwde
inc
push
in
les
ret
xor
pop
cmp
call
xchg
in
push
loop
dec
ret
lea
sbb
push
xor
popf
and
sub
lds
fcmovnb
lds
int
cli
loope
inc
pop
push
mov
loop
fs
ret
inc
jbe
mov
clc
in
iret
sbb
(bad)
jae
pushf
adc
movs
mov
dec
jb
call
scas
add
stos
mov
add
dec
pop
enter
jnp
ins
test
add
mov
mov
dec
ins
add
aam
ins
mov
popf
inc
stc
xchg
repz
stos
pop
outs
mov
mov
sbb
call
das
xor
sbb
mov
adc
es
fs
call
(bad)
adc
fwait
lods
ret
add
iret
div
push
out
icebp
es
fcom
outs
(bad)
jg
fmulp
jns
add
bound
mov
pop
cwde
das
adc
push
mov
inc
mov
test
cmps
adc
retf
mov
out
push
lock
jae
pop
push
lds
adc
pop
xchg
push
dec
in
idiv
cwde
mov
mov
add
dec
sub
movs
dec
mov
adc
je
cmp
pop
ins
aaa
mov
pop
call
dec
adc
xchg
ret
and
xchg
inc
adc
sar
or
push
out
push
ds
sbb
test
sbb
cmp
adc
outs
mov
pop
test
push
xor
adc
lahf
imul
push
mov
idiv
xchg
data16
push
sub
mov
dec
pop
sub
test
loope
imul
repz
call
repnz
mov
adc
jnp
pop
aam
cs
mov
sbb
or
xor
ds
jmp
xchg
cmp
(bad)
movs
enter
shl
rcl
nop
xchg
push
arpl
sub
ret
mov
and
sub
retf
mov
aad
adc
arpl
add
sub
loop
test
stos
or
mov
dec
jl
(bad)
adc
sbb
mov
jmp
lds
test
cmp
outs
xchg
js
inc
mov
or
aad
push
sbb
out
mov
int3
out
in
stos
adc
imul
lea
sub
and
jns
aam
and
jge
pop
js
fldenv
jns
mov
push
pop
push
das
xor
nop
xor
call
mov
pop
fist
xor
mov
mov
add
cwde
arpl
xor
jbe
or
adc
addr16
sahf
jb
add
jne
sub
and
ror
pop
inc
pushf
add
or
aaa
pusha
in
sbb
xor
inc
cmps
jmp
jmp
outs
cmp
push
push
xchg
mov
(bad)
jno
inc
xchg
stos
mov
addr16
xchg
aas
sub
jecxz
jle
stos
sub
sbb
sbb
out
sub
mov
xor
xchg
xchg
call
arpl
jbe
dec
call
cmc
cdq
adc
ja
ret
dec
mov
adc
sbb
xchg
xchg
cmps
dec
mov
fstp
xchg
dec
repz
inc
mov
addr16
push
leave
iret
out
in
imul
inc
loope
mov
outs
outs
cmc
and
push
add
out
cmp
icebp
aaa
sbb
popa
inc
fmul
stos
mov
sbb
mov
pop
and
or
and
pop
mov
lock
push
or
ins
push
pop
scas
es
(bad)
push
fidiv
mov
xor
fdivr
ins
jae
dec
aaa
push
test
jg
pop
pop
aad
or
call
mov
sub
sbb
stos
inc
mov
or
test
xlat
cmp
jae
inc
fimul
mov
dec
ja
in
sahf
add
sub
jl
dec
ins
imul
xor
test
xor
(bad)
xor
adc
xchg
pop
(bad)
and
push
test
dec
xchg
ret
push
cmc
enter
push
cmp
pop
jmp
inc
retf
call
dec
movs
and
test
and
mov
hlt
sub
pop
ficom
fdiv
mov
pusha
sbb
rol
cmc
lods
mov
or
mov
push
add
aaa
cs
out
repz
out
jne
dec
sub
xchg
ja
push
out
cs
push
test
call
mov
(bad)
out
sbb
or
(bad)
in
outs
mov
mov
sahf
and
adc
and
inc
mov
jb
inc
lods
xlat
mov
mov
sub
leave
inc
fisubr
test
dec
in
retf
sbb
xchg
xlat
and
(bad)
stos
sahf
pop
cmp
test
daa
push
inc
dec
stc
xchg
test
mov
lahf
push
jge
nop
sub
pop
out
inc
or
or
std
shl
inc
test
mov
push
and
push
inc
jns
inc
sub
outs
add
xchg
ret
lds
mov
ds
mov
jle
mov
and
cs
cld
inc
das
div
sub
push
rol
pminsw
or
sub
sub
call
sub
or
xchg
hlt
mov
movs
ficomp
xchg
pop
fld
push
add
add
gs
cdq
(bad)
fdivr
sbb
mov
pop
mov
(bad)
push
jle
xchg
enter
dec
sbb
inc
mov
cmps
push
jbe
push
push
mov
sbb
pop
push
ss
or
adc
adc
sbb
adc
sub
inc
mov
stos
rcr
cmp
sbb
mov
cmp
les
push
imul
movs
jg
(bad)
fsubr
pop
or
ror
push
jle
add
add
mov
cdq
push
push
addr16
pop
hlt
dec
out
(bad)
push
call
lock
scas
imul
lock
jl
(bad)
fmul
dec
movs
push
sub
push
jnp
dec
repnz
out
or
retf
repnz
mov
sbb
loopne
es
mov
xchg
jae
mov
mov
scas
jnp
pusha
jns
pusha
push
mov
fmul
mov
xor
sbb
aas
fucomp
xor
lock
and
mov
cli
mov
xchg
(bad)
xchg
push
mov
and
mov
push
dec
fdivp
shr
pop
and
inc
sbb
mov
aad
xchg
xchg
dec
xchg
dec
in
imul
retf
cld
gs
es
push
push
scas
jbe
stos
rcl
pop
jge
daa
repnz
fdiv
mov
neg
imul
ja
lock
pushf
mov
jge
iret
fdiv
jecxz
fistp
pop
gs
push
dec
adc
shr
add
jp
pop
mov
lock
and
or
or
neg
das
sar
mov
sub
test
sub
add
sub
aam
inc
dec
inc
in
call
add
pop
jbe
mov
retf
lahf
idiv
xchg
int
dec
jle
inc
test
es
adc
sbb
mov
add
movs
jbe
pop
jp
sbb
cs
loop
sar
xor
jno
aaa
inc
or
data16
push
ret
loopne
ins
in
rol
dec
push
add
retf
and
lods
adc
mov
jecxz
jae
dec
xor
xor
stc
jl
push
or
ja
xor
ins
(bad)
sbb
push
jmp
jns
test
mov
dec
aam
pop
cmp
repnz
int3
shl
pushf
xchg
mov
pop
repnz
lods
xlat
inc
jnp
pop
jnp
pop
fdiv
clc
pop
icebp
mov
sar
xor
xchg
mov
in
mov
imul
push
jae
xchg
or
fidiv
or
xchg
xchg
call
outs
xor
cli
xor
mov
xchg
cmp
sbb
xor
shl
xchg
stos
retf
cs
pop
sahf
pop
mov
jnp
outs
sub
adc
jl
push
and
js
pop
mov
add
inc
test
out
dec
adc
sub
dec
mov
cmps
shl
retf
push
or
aad
xchg
dec
xchg
inc
mov
mov
and
lods
and
sbb
in
inc
imul
ret
add
popa
imul
jmp
(bad)
not
sub
mov
sub
repnz
cmc
arpl
push
pop
adc
mov
cmps
fadd
dec
retf
adc
dec
mov
fstp
jl
push
mov
jg
cmp
pop
sub
sbb
pop
pop
dec
push
jns
call
push
cmp
jg
(bad)
scas
cmp
cmp
jge
push
out
stos
add
add
ins
(bad)
sub
push
ins
add
mov
int
xor
test
mov
sbb
les
push
test
imul
or
or
div
stos
inc
(bad)
sbb
dec
xor
pusha
xchg
cmp
xchg
sub
push
in
inc
pushf
mov
add
mov
and
push
mov
xchg
jns
sar
and
add
mov
into
mov
pop
or
fcom
or
call
mov
mov
outs
pop
aad
adc
stc
and
or
or
inc
dec
dec
movs
(bad)
adc
jl
adc
fld
lock
rcr
add
mov
mov
mul
(bad)
inc
sbb
cmp
enter
add
repnz
scas
cld
jae
add
idiv
mov
push
data16
fidivr
push
stos
outs
pop
call
mov
mov
clc
loop
stos
mov
(bad)
imul
in
push
fs
stc
xor
ds
adc
dec
out
rcl
xchg
test
mov
mov
jmp
push
push
adc
out
pop
cmps
mov
push
add
dec
fs
sub
mov
lahf
add
xchg
mov
mov
or
mov
sub
inc
lea
jecxz
mov
ja
in
jnp
cli
cmps
mov
inc
cmp
arpl
mov
loope
and
jmp
dec
dec
push
lahf
mov
je
xchg
ret
fwait
xchg
mov
sbb
scas
repz
call
test
hlt
scas
mov
call
mov
jae
cmps
sub
mov
dec
mov
imul
sub
pop
pop
mov
sbb
cmps
push
fild
test
xor
dec
arpl
stos
fbstp
int
mov
popa
xlat
mov
sub
sti
js
mov
shl
pop
imul
and
pusha
mov
mov
sbb
mov
loopne
or
or
ret
cmps
and
outs
push
jp
xor
iret
jg
sub
mov
retf
and
jno
fs
adc
out
dec
jo
inc
ret
push
ins
mov
mov
inc
jne
pop
fxch
aaa
mov
imul
mov
(bad)
enter
scas
stc
pop
xchg
fidivr
pop
jnp
pop
inc
in
adc
ss
add
dec
int3
data16
call
hlt
sar
mov
sahf
test
mov
pop
mov
ror
sti
jp
lock
mov
iret
xchg
fwait
mov
jg
push
repnz
add
and
and
fcom
mov
in
inc
mov
addr16
es
mov
cmp
jl
mov
adc
out
pop
ja
or
jmp
cmp
push
ret
push
mov
outs
inc
push
sbb
add
lock
adc
int3
mov
mov
ds
(bad)
je
call
retf
jmp
inc
xor
data16
push
push
mul
mov
adc
scas
inc
retf
enter
hlt
fwait
loope
pop
cmc
xchg
jbe
imul
xchg
mov
mov
push
clc
(bad)
cmp
adc
dec
addr16
pop
int3
mov
and
add
js
pop
pop
push
and
je
cmp
retf
stos
(bad)
enter
popf
xchg
je
rcr
cmp
pop
div
imul
imul
clc
aaa
test
shl
push
mov
rdtsc
jbe
cmp
enter
lods
ss
movs
scas
ins
pop
pop
adc
xchg
jmp
jg
imul
shl
cmp
out
mov
out
ja
and
dec
jmp
ror
ret
mov
sti
ret
jmp
mov
cmp
out
not
clc
push
add
pop
xchg
leave
pop
sub
lods
pushf
stc
sub
cli
addr16
xchg
in
rol
mov
push
in
push
icebp
fiadd
xor
(bad)
movs
push
shr
test
(bad)
fld
shr
mov
sub
xor
sub
adc
popf
xlat
sub
mov
arpl
retf
jecxz
sbb
jno
and
fs
repz
(bad)
rol
neg
mov
(bad)
clc
test
cmp
(bad)
rol
(bad)
mov
ja
dec
cmp
ret
pop
ins
xchg
js
add
out
pop
ror
test
xor
mov
jl
pop
les
hlt
push
out
aas
ds
or
mov
dec
retf
jb
das
cdq
cmps
cdq
lods
or
sti
add
jg
sahf
pop
and
ss
movs
sub
xor
jb
mov
lock
sub
fadd
inc
jg
mov
add
pop
xchg
ss
add
jb
add
adc
iret
or
scas
out
push
arpl
adc
arpl
lods
mov
jl
inc
retf
push
or
movs
imul
lods
jl
push
pop
mov
or
mov
mov
add
hlt
and
mov
iret
mov
sub
adc
fild
sar
or
retf
adc
jmp
scas
jl
dec
dec
jg
jb
cmps
mov
inc
push
push
iret
mov
mov
jecxz
aaa
pop
xor
outs
sub
das
dec
inc
pusha
xchg
(bad)
hlt
inc
xchg
hlt
push
and
inc
push
push
adc
fst
mov
add
shl
out
inc
xchg
pop
addr16
mov
pop
cwde
test
xchg
pop
ss
push
jle
enter
outs
ds
dec
js
inc
dec
pop
retf
aaa
shr
dec
jle
enter
outs
cmps
jg
sbb
aaa
shl
idiv
fadd
stos
pop
xor
xlat
mov
add
(bad)
aaa
rcl
and
scas
push
outs
jg
dec
xchg
scas
pop
ss
jl
call
jl
dec
xchg
mov
xchg
and
iret
xchg
daa
scas
iret
stos
aad
push
mov
adc
retf
sub
inc
jp
jg
out
daa
hlt
shl
inc
xchg
out
push
push
stos
adc
push
imul
inc
repnz
dec
das
hlt
sub
push
adc
sub
xchg
stos
into
adc
ret
dec
out
arpl
mov
div
adc
in
outs
push
stos
xor
push
mov
xchg
test
pop
div
test
mov
sbb
(bad)
aaa
rcr
jg
enter
push
stos
loope
fld
shr
jg
retf
xor
dec
enter
mov
mov
retf
aaa
rcr
add
enter
outs
add
dec
(bad)
scas
sub
not
fild
js
cmps
xchg
pop
shl
aaa
mov
sub
and
mov
mov
stos
mov
ja
adc
popa
push
adc
arpl
add
int3
lock
mov
and
fdiv
rcr
jl
shr
rcl
neg
cmps
sahf
xor
call
jo
fild
fs
pop
or
mov
test
rol
adc
ret
jg
js
push
loopne
pop
push
jbe
mov
addr16
push
(bad)
pop
jno
mov
int3
pop
and
sbb
or
inc
mov
cmc
adc
loope
pop
stos
ja
mov
add
(bad)
xlat
jnp
xlat
mov
int3
mov
retf
fucomp
mov
and
(bad)
lea
xchg
cmp
pusha
sub
jae
rol
cmps
jg
cs
ret
xchg
pop
out
out
sbb
cmp
icebp
push
and
inc
inc
jae
push
ja
add
movs
mov
sub
loope
stos
aas
ss
cmp
and
xchg
aaa
xchg
sub
xchg
cmp
int3
mov
add
aaa
push
adc
aaa
cmp
retf
adc
aaa
push
adc
popf
data16
test
inc
sub
jmp
xor
in
pop
rcl
jl
mov
xchg
and
cmp
fadd
int3
imul
nop
(bad)
in
sub
rcr
and
int3
mov
and
shl
sub
push
adc
cld
mov
es
outs
ds
fld
mov
mov
mov
and
in
inc
ja
sub
(bad)
jge
das
retf
in
adc
(bad)
cwde
mov
(bad)
retf
sub
leave
xchg
sbb
jmp
leave
popf
imul
jle
fwait
loope
xchg
repz
jg
mov
mov
in
jle
into
xor
xlat
(bad)
or
adc
inc
test
clc
sbb
sub
push
pusha
mov
jmp
popf
cmps
cmps
aam
jp
movs
push
mov
pop
cmp
jle
dec
sub
push
sahf
inc
jnp
data16
inc
shr
loop
add
and
shl
pop
fsubp
int3
push
sbb
pop
rdmsr
pop
and
xor
hlt
ret
jle
push
das
retf
(bad)
iret
mov
push
mov
cdq
jae
add
mov
popa
retf
sub
cmp
scas
cmps
lock
outs
aam
das
push
pop
add
add
ds
pop
mov
push
sbb
aas
xchg
js
mov
sub
ret
jl
cs
xchg
out
mov
retf
xchg
sbb
pop
and
sub
int
fs
psllw
xchg
pop
sar
sbb
dec
and
jge
ds
stc
(bad)
adc
lods
inc
jno
cmp
mov
push
mov
ret
xor
jmp
popa
div
ss
pop
push
shr
sbb
ins
adc
sbb
and
adc
and
in
ds
cmp
sub
and
inc
inc
in
int3
push
rcl
jb
lods
cli
add
jb
sub
cmp
bswap
cmps
push
cmp
mov
repz
ss
sub
mov
cmp
push
adc
push
sbb
les
sub
sbb
sub
xchg
arpl
mov
popa
movs
in
and
pop
xor
jbe
cs
push
pop
xlat
(bad)
jp
inc
es
sahf
shl
pop
shl
mov
xor
adc
add
aaa
push
push
fldenv
and
scas
mov
mov
xlat
xor
(bad)
ret
sti
imul
mov
push
test
icebp
repz
mov
cs
xchg
loopne
and
iret
mov
movs
sub
fldcw
pcmpeqd
(bad)
cmp
icebp
mov
outs
or
xor
(bad)
in
(bad)
jbe
and
pop
retf
(bad)
and
push
ja
aam
aad
sbb
hlt
cwde
stos
lahf
aad
cs
sub
dec
mov
shl
pop
push
xchg
jbe
icebp
fwait
pop
push
aas
xor
inc
cmp
in
lods
in
mov
fnstenv
push
stos
xchg
test
xchg
xor
es
sti
je
jmp
scas
sub
out
std
clc
outs
pop
push
xor
mov
les
bound
lock
pop
sub
push
inc
mov
imul
scas
cdq
adc
cmps
dec
mov
pop
loop
mov
jle
sub
out
lahf
push
fnstsw
pop
pop
bound
out
repnz
dec
popf
inc
add
sub
aam
xor
xor
and
cmc
pusha
push
push
stos
arpl
sub
mov
pop
aam
sbb
stos
sub
les
(bad)
mov
and
sbb
jne
and
and
iret
fimul
mov
cwde
and
mov
sub
push
jmp
stos
icebp
mov
scas
and
xchg
cmp
imul
and
loop
and
push
jp
test
add
in
fild
pop
stos
sti
fild
cs
xor
out
dec
aaa
jecxz
leave
xchg
and
sub
jae
fwait
inc
dec
add
gs
lock
push
clc
push
dec
push
push
jno
push
ret
push
push
retf
dec
push
cs
loop
inc
dec
mov
retf
lods
out
stos
ret
mov
sub
ret
jle
rol
sti
or
xchg
dec
(bad)
into
fiadd
mov
push
shl
sbb
fisub
push
int3
sbb
fcomip
and
ret
(bad)
loope
dec
call
mov
and
cmps
dec
sub
add
jbe
das
les
push
cmps
test
xchg
push
xchg
xchg
ss
push
xchg
push
(bad)
mov
outs
repz
cmc
dec
cdq
cld
sub
stos
push
cli
jle
pop
stos
call
(bad)
mov
out
push
test
mov
inc
mov
mov
pop
jns
in
mov
mov
sbb
sub
jle
icebp
and
mov
loope
or
js
retf
ror
iret
and
pop
aas
es
push
push
icebp
jl
cmc
xchg
pop
mov
test
sub
test
or
xchg
fistp
xchg
(bad)
and
mov
mov
pop
and
ja
dec
push
xor
imul
pop
cmc
lahf
push
in
cmp
and
xchg
mov
imul
repz
mov
dec
jmp
stos
mov
jmp
jmp
or
xchg
fmulp
enter
xchg
(bad)
fmul
out
fiadd
mov
adc
div
or
ja
mov
dec
mov
jg
fidivr
inc
cmp
aas
pop
test
imul
cvtdq2ps
jo
inc
mov
adc
push
add
jae
push
add
data16
ss
add
in
push
loop
std
pop
mov
repnz
and
xrelease
pop
test
jns
aam
mov
fild
cmp
mov
inc
xchg
call
test
out
sub
std
push
rcl
dec
mov
stos
daa
cwde
mov
jno
push
test
in
dec
push
aam
or
jg
xor
xlat
sbb
arpl
jbe
repz
mov
ret
inc
or
inc
sub
int3
addr16
movs
scas
aas
cs
dec
adc
test
jl
inc
repnz
sar
xor
rcl
xor
mov
inc
stos
push
push
xchg
jnp
icebp
xchg
lock
push
jae
or
aas
(bad)
mov
pop
inc
mov
jge
jmp
inc
mov
mov
arpl
lds
xlat
mov
push
jns
shr
push
mov
outs
fild
sub
fsubr
mov
or
or
sbb
push
mov
pop
sti
push
pusha
outs
jbe
xor
dec
cld
xor
fadd
add
in
and
lahf
mov
jge
int
cs
and
jge
or
lds
add
xor
inc
ja
push
(bad)
popa
dec
(bad)
lahf
shl
adc
and
and
inc
mov
retf
aad
jge
push
test
cmp
push
sbb
dec
movs
enter
shl
outs
sub
push
push
push
sar
sti
jp
cmps
pop
cmps
aad
fcmovbe
push
mov
mov
cmps
xchg
sub
(bad)
xchg
sub
adc
jl
cs
loope
or
sub
dec
push
out
cmps
xchg
call
sub
or
cmp
dec
pop
inc
bound
test
(bad)
loop
out
clc
pop
cmp
stos
test
mov
in
fmul
push
cmp
mov
xchg
iret
out
mov
fld
and
fcom
repnz
es
pop
adc
cmps
pop
mov
ds
enter
aaa
sbb
xchg
scas
mov
ja
sahf
retf
scas
adc
jno
cmpps
adc
push
cmp
mov
das
add
jge
int3
shl
and
cmp
es
jne
retf
lods
sbb
js
scas
pop
fisttp
pop
fimul
imul
mov
sbb
cmps
ins
cmps
ds
aam
mov
pop
jnp
ds
aas
fs
stos
add
pop
ret
mov
ja
xchg
aaa
shl
pop
inc
mov
ins
enter
sbb
mov
lock
pop
pop
sbb
dec
inc
outs
enter
std
movs
dec
test
mov
mov
dec
jle
rol
add
stos
shl
iret
or
push
(bad)
pop
mov
or
inc
mov
pop
inc
outs
(bad)
pop
in
mov
sbb
push
fsub
adc
cli
(bad)
fldcw
mov
mov
je
bound
pop
adc
sub
and
dec
mov
add
clc
ss
push
add
mov
aas
mov
jg
and
pop
stc
ficom
or
sub
mov
rol
dec
adc
mov
(bad)
std
fidiv
aaa
mov
ds
mov
or
xor
fsub
adc
iret
mov
sbb
adc
sbb
sbb
imul
push
call
or
push
xchg
add
mov
ins
icebp
das
in
fwait
pop
inc
xor
cmps
lods
je
dec
mov
fidivr
xchg
fist
loopne
cli
mov
push
sub
mul
cld
inc
xor
rol
out
dec
dec
dec
je
iret
xchg
icebp
mov
push
add
sub
pop
xchg
repz
cdq
push
fsubr
lahf
pop
jbe
jae
out
sbb
nop
push
outs
imul
ins
push
cmp
dec
or
cmps
imul
sub
sbb
iret
mov
xlat
lea
les
pop
call
(bad)
lahf
ja
xor
mov
push
or
cmp
jl
sub
sbb
cmp
adc
scas
sbb
pop
imul
ret
std
inc
popf
imul
std
mov
aam
in
sbb
xor
bnd
adc
mov
push
in
dec
add
enter
push
(bad)
retf
ret
ror
outs
das
cmp
dec
fimul
sub
ja
fld
xchg
icebp
dec
rcl
dec
pop
(bad)
aad
cmp
in
in
fadd
out
aaa
in
mov
mov
add
pop
xor
ja
xchg
mov
jle
inc
arpl
xchg
adc
sbb
movs
mov
pushf
sahf
push
popf
stc
das
inc
sub
adc
pushf
pop
mov
xchg
pop
pop
xchg
mov
scas
xor
xchg
mov
mov
std
test
hlt
cmp
ret
xor
retf
shr
mov
popa
mov
stos
ret
or
fmul
sub
sbb
cmps
and
and
sbb
inc
cwde
fld
inc
pop
xchg
pop
add
xchg
out
fistp
cmp
enter
pop
mov
out
adc
das
cmp
pop
add
(bad)
mov
arpl
and
add
les
test
test
sbb
mov
ss
arpl
push
jp
into
dec
fdivr
loop
in
cs
inc
test
dec
ret
or
mov
sub
stos
mov
pop
sbb
ret
jmp
ja
stc
mov
retf
and
loopne
jecxz
into
xchg
jg
push
mov
mov
push
push
push
or
movs
dec
hlt
push
pop
fidivr
test
retf
fwait
lds
push
mov
adc
dec
inc
js
retf
jp
sub
cmp
cmp
ret
cmps
xchg
mov
jge
(bad)
xchg
mov
jp
rcr
dec
add
iret
test
mov
and
adc
rcl
je
add
pop
test
and
cmp
ret
pop
ja
dec
add
xchg
rol
rol
xchg
or
lahf
and
add
(bad)
dec
or
pop
rcr
pop
xor
ja
je
xlat
fdivrp
mov
push
cmps
mov
(bad)
xor
cmp
pop
mov
retf
push
int3
rcr
mov
mov
icebp
push
scas
nop
xchg
fisttp
stc
mov
cmp
cdq
jge
inc
dec
dec
dec
fld
mov
cmc
mov
clc
daa
retf
sbb
xor
jo
mov
or
repz
xchg
addr16
out
repnz
cwde
pop
xchg
cwde
daa
xchg
pusha
in
dec
fld
inc
sub
jmp
gs
int
xchg
xchg
icebp
xchg
fnsavew
pop
data16
bound
add
cmp
lds
inc
mov
iret
cmp
icebp
xchg
leave
mov
cmps
loope
sbb
sub
inc
jb
fdivr
neg
add
lahf
mov
cmp
jnp
cmp
add
mov
hlt
add
inc
lods
xchg
add
push
sbb
pop
scas
aaa
hlt
mov
push
ins
dec
jb
pop
jecxz
clc
(bad)
xchg
test
repz
stc
cmp
jae
mov
xchg
add
jl
and
xor
test
(bad)
mov
xor
cmp
rcl
push
inc
iret
pop
ret
xlat
add
push
cli
pop
outs
out
push
aam
test
dec
mov
jg
push
div
mov
jo
inc
push
rcl
test
mov
and
add
xor
or
mov
dec
mov
push
sub
cmps
sbb
out
jl
jmp
scas
adc
adc
fwait
inc
xchg
pop
icebp
jp
ss
and
mov
rcr
daa
pop
add
add
xor
inc
inc
enter
hlt
and
clc
pop
mov
(bad)
loope
fmulp
push
jge
inc
adc
xchg
bound
cmps
mov
add
mul
pop
xchg
mov
pop
push
push
leave
mov
jbe
stos
push
or
xor
xchg
addr16
mov
repz
mov
pop
(bad)
por
test
not
pop
inc
xchg
xchg
cwde
jnp
fld
scas
mov
xchg
pop
dec
xchg
add
jne
or
jbe
aam
fwait
ss
jbe
scas
dec
add
inc
inc
cdq
jmp
cwde
jno
push
retf
xchg
xchg
xchg
in
call
movs
repnz
cwde
clc
mov
outs
xor
pop
lahf
xor
jp
adc
movs
inc
mov
push
scas
stos
loope
cld
(bad)
mov
xchg
mov
test
push
mov
hlt
xchg
lods
xor
jb
mov
or
dec
mov
mov
jbe
test
inc
jle
mov
popa
clc
fild
stos
and
cwde
test
dec
xchg
sar
jo
pusha
and
jp
pop
push
sub
push
or
dec
push
or
jl
jge
push
pop
int3
mov
test
into
and
cmp
or
jb
push
jecxz
fistp
jl
jmp
retf
mov
dec
int3
test
imul
jne
sbb
in
in
aaa
xor
cmp
xor
sub
jle
lock
xlat
cmc
add
arpl
repnz
outs
mov
xor
xor
les
outs
cmp
aas
(bad)
jno
push
and
push
gs
dec
call
hlt
jnp
mov
jmp
inc
and
rcr
inc
inc
js
pusha
push
sub
sbb
fwait
adc
lock
sbb
sub
or
std
rcl
mov
jmp
inc
sbb
sar
mov
xchg
ret
mov
sahf
or
clc
mov
(bad)
(bad)
arpl
dec
jb
mul
xor
mov
fs
dec
xchg
mov
add
sub
push
clc
jle
fcomip
das
and
data16
inc
stos
rcr
retf
fdivr
stos
mov
xchg
mov
imul
shl
outs
out
adc
xchg
fist
call
xor
sbb
sub
inc
outs
mov
scas
call
ret
mov
cmp
into
push
or
xor
xor
repz
xchg
and
xor
fst
stos
sbb
lea
dec
add
jmp
inc
sahf
mov
add
ror
popa
icebp
push
push
cmps
repz
nop
adc
popf
jl
iret
xchg
cwde
das
mov
xor
fsubr
sub
jbe
pop
xchg
jns
or
ja
xor
mov
push
xchg
in
and
push
pop
cmc
cmps
jmp
imul
mov
adc
gs
add
xor
mov
mov
out
jb
mov
dec
sahf
dec
mov
sub
mov
clc
sbb
sub
jo
in
dec
jae
xchg
scas
xchg
adc
pop
add
cmp
test
scas
inc
jl
cmps
imul
les
adc
add
cmp
fwait
sti
in
mov
dec
mov
dec
frstor
mov
xor
(bad)
pushf
jbe
mov
es
xchg
dec
mov
inc
aad
clc
ret
mov
lock
add
js
(bad)
ds
pop
fld
retf
mov
push
aad
cmp
dec
or
mov
xchg
imul
lock
nop
mov
bnd
push
and
add
fs
cmp
rcl
sub
mov
leave
jg
add
sub
int
hlt
xor
dec
jmp
popf
xchg
pop
sbb
pop
jp
and
xor
push
jmp
shl
je
movs
jae
test
in
stc
aam
cmp
rcl
xchg
rol
adc
es
jnp
outs
sar
xlat
mov
retf
pop
jae
xchg
aaa
xchg
sub
inc
retf
jge
sbb
jbe
pop
sub
scas
leave
std
adc
and
pushf
icebp
inc
mov
int
sbb
imul
sbb
jno
sub
xchg
icebp
aam
imul
test
xchg
ins
jl
repnz
aam
movs
or
add
add
test
add
push
mov
hlt
aaa
imul
js
pusha
icebp
ja
lds
(bad)
or
mov
xchg
inc
aam
stos
jno
sbb
loop
jb
cmp
shr
(bad)
scas
cli
mov
jae
test
or
das
out
push
and
pop
xchg
sbb
push
into
pop
or
pop
mov
lahf
aas
add
inc
jle
sbb
mov
(bad)
pop
sahf
xchg
leave
push
je
repnz
into
arpl
mov
mov
ret
mov
mov
mov
int
mov
loopne
push
scas
mov
push
pop
(bad)
sub
hlt
jmp
xor
stos
xchg
push
xor
cmp
or
nop
cmovg
sbb
ret
test
push
mov
popa
fisub
sbb
aaa
inc
(bad)
not
data16
aaa
jp
js
loope
dec
fisubr
cs
xlat
call
jp
xchg
dec
div
mov
xor
out
push
xchg
fmul
cmp
or
dec
mov
cmps
inc
inc
imul
cmp
jg
iret
inc
push
inc
rcl
xchg
jnp
faddp
not
sbb
pop
daa
push
or
sub
popf
mov
into
xchg
sbb
jns
sti
sub
in
mov
popa
push
sub
jmp
cmp
fsubr
add
jns
fbstp
sub
sbb
sbb
xchg
mov
xchg
stc
mov
xor
lock
ss
dec
mul
call
imul
pop
xchg
aad
repnz
daa
out
js
dec
push
inc
push
adc
xor
mov
enter
cmps
stos
adc
std
xor
hlt
les
gs
jmp
cmps
int
sub
jl
stos
push
mov
addr16
mov
pop
and
enter
movs
pop
push
jmp
mov
aaa
sub
jb
bnd
add
(bad)
jmp
mov
aas
scas
test
or
lea
inc
xchg
and
lahf
and
cmps
xchg
mov
adc
mov
sbb
mov
arpl
rcr
mov
adc
jnp
jmp
cmps
ins
add
push
loope
sub
mov
inc
(bad)
(bad)
or
rcl
movs
add
sub
jl
lds
aam
mov
gs
scas
push
stos
or
data16
mov
lock
fsubrp
xor
push
push
xchg
dec
cbw
or
jb
(bad)
push
das
shr
ja
jo
aaa
cmps
and
jle
retf
mov
sti
jae
outs
xor
movs
adc
cmps
pop
popf
push
(bad)
in
sub
test
jge
cmp
add
mov
popa
or
jmp
retfw
shl
fiadd
stc
mov
enter
pop
fwait
xor
and
lds
push
pop
dec
jo
stc
inc
je
mov
sbb
test
fnsave
xor
cwde
inc
cld
fs
or
mov
je
push
mov
(bad)
jle
pop
adc
mov
sbb
pop
jge
into
cmps
and
push
mov
into
push
push
sub
or
xor
retf
out
fs
scas
sbb
mov
out
adc
loop
adc
in
inc
push
shl
and
mov
fiadd
sbb
push
jo
jb
(bad)
mov
cmp
pop
xor
mov
leave
jno
cmps
ja
pop
aaa
dec
mov
(bad)
xchg
and
jmp
(bad)
fwait
cmp
mov
cmps
mov
cmp
in
xchg
push
mov
ret
jbe
fdivr
cmp
pushf
mov
adc
(bad)
mov
mov
cli
or
lock
clc
pushf
repnz
bound
lea
rcl
mov
fsubp
shl
pop
push
mov
mov
push
xor
push
icebp
les
loop
pusha
idiv
cmp
pop
cli
xor
in
pushf
clc
mov
jmp
ret
scas
mov
mov
or
ins
mov
dec
stos
push
jo
dec
dec
fist
iret
jl
push
int
push
clc
xchg
mov
aas
push
hlt
sbb
push
xor
call
xlat
sbb
mov
bound
es
and
movs
xor
pop
add
sar
jmp
sahf
hlt
pushf
dec
adc
mov
(bad)
push
sub
jo
mov
jg
mov
or
pop
imul
stc
jl
mov
inc
(bad)
mov
imul
ins
or
sbb
push
and
sbb
dec
cmp
in
pop
rcr
xchg
pop
sub
xchg
adc
mov
sar
add
fwait
dec
pop
pop
ja
ja
ins
cli
(bad)
arpl
pop
cmp
ret
movs
pushf
sub
ret
iret
pop
int3
icebp
add
push
push
fbstp
mov
pop
hlt
mov
sub
(bad)
gs
jns
fwait
into
lods
or
aad
sar
or
pop
sbb
not
je
jg
mov
sbb
sar
aam
lods
scas
ret
(bad)
mov
jnp
cwde
xchg
xchg
cmp
aam
loop
jae
out
dec
ror
repnz
test
or
nop
cmp
cwde
out
loop
outs
dec
mov
nop
sbb
in
sub
das
add
cmps
data16
div
in
add
iret
iret
xchg
ret
nop
dec
mov
shr
test
sub
mov
out
adc
push
jno
(bad)
ss
jg
mov
stos
fild
sti
addr16
popf
out
pop
hlt
cmp
aas
(bad)
cwde
pop
mov
sub
cmp
cmp
and
or
aas
pop
dec
fnstsw
push
sub
or
das
pop
sbb
movs
sub
mov
mov
dec
mov
push
push
cmp
cmps
scas
xchg
push
xchg
push
int
xchg
in
push
pop
dec
mov
retf
ins
add
ins
pushf
pop
sub
push
inc
stc
dec
fld
dec
push
hlt
lds
jbe
mov
stos
cmps
test
stos
push
leave
arpl
mov
sub
nop
mov
push
and
or
daa
cli
sbb
push
call
das
xchg
cmp
call
mov
sti
pop
xchg
shl
or
sbb
mov
sbb
push
das
bound
clc
aas
jle
imul
add
mov
fimul
xor
les
cmp
les
bound
shr
shl
sbb
hlt
gs
shl
retf
push
stos
(bad)
jle
pop
ins
out
scas
inc
ds
adc
(bad)
(bad)
sahf
fadd
sbb
or
or
push
rol
lahf
fdivr
adc
inc
rol
cmp
fmul
mov
push
adc
pop
cmp
pusha
jmp
jp
or
jl
outs
inc
pushf
aaa
adc
mov
pop
cs
stos
cmp
outs
mov
ret
mov
or
pop
mov
in
out
arpl
not
(bad)
in
daa
jne
outs
scas
jp
in
(bad)
jbe
or
fbstp
inc
cwde
rcr
in
and
imul
xchg
or
fisttp
jnp
repnz
mov
fcmove
repnz
popa
cdq
inc
(bad)
stos
adc
mov
adc
or
or
das
xchg
mov
ret
adc
rol
cmps
ror
push
add
push
pop
push
clc
and
push
sbb
out
xor
push
scas
or
imul
call
xchg
outs
stc
xchg
test
jl
push
sahf
xor
mov
add
dec
mov
sub
clc
pop
mul
lahf
ret
adc
xor
xlat
mov
dec
aam
cmp
int3
pop
jl
rcl
fdivp
neg
scas
push
sub
or
aas
rol
js
icebp
data16
mov
add
jns
into
mov
cmc
xchg
je
sub
mov
mov
call
and
mov
test
daa
jb
pop
out
ja
lods
xlat
jge
gs
sub
stos
js
xor
and
lods
into
sbb
xor
inc
xchg
jecxz
or
add
jns
loope
push
and
add
ror
ds
inc
mov
pop
jp
(bad)
(bad)
sub
ror
sub
xchg
or
add
mov
rcr
push
stos
mov
es
or
adc
cmp
(bad)
xor
jno
sub
(bad)
jo
retf
dec
adc
xchg
inc
lds
or
pop
aaa
rol
invd
mov
es
or
push
dec
xchg
out
fistp
push
test
inc
mov
push
fsubr
ror
dec
adc
sub
int3
or
ins
mov
leave
sti
push
or
out
and
add
xor
ins
mov
(bad)
push
aaa
cmps
pop
xchg
push
retf
xor
pop
scas
pop
jmp
ins
pop
in
(bad)
and
xchg
cld
mov
jne
pop
xor
shr
loopne
lods
mov
enter
pop
stos
stos
add
or
imul
into
inc
aaa
jmp
(bad)
jg
fisubr
cmps
jb
into
jg
retf
out
jnp
aad
outs
ja
hlt
mov
pop
sub
push
dec
xor
scas
int
retf
pop
shr
mov
idiv
icebp
aaa
inc
xchg
gs
mov
jns
sahf
outs
add
fldcw
hlt
push
test
fcmovu
add
bnd
loop
imul
mov
inc
or
dec
lahf
mov
cmps
fwait
adc
jmp
pop
pop
pop
jle
pop
fdivp
pop
jo
mov
push
or
aad
daa
or
stos
repnz
adc
push
mov
sbb
into
xor
pop
jl
inc
(bad)
sbb
pop
mov
jecxz
jnp
sti
call
pop
bt
ss
jo
push
or
test
imul
jbe
push
test
in
inc
repz
gs
adc
mov
and
enter
jb
and
imul
sbb
push
(bad)
pushf
jnp
mov
inc
stc
repz
hlt
mov
iret
lea
sti
pop
xchg
leave
or
mov
jo
mov
cli
movs
loopne
mov
dec
xchg
test
or
cdq
jle
xor
lock
clc
mov
sub
pop
sbb
cmps
cmp
sub
hlt
xchg
and
repz
clc
push
push
frstor
xchg
movs
es
sub
aas
fidiv
inc
mov
jae
popf
xchg
int
lods
es
and
mov
loop
loop
addr16
movs
xor
es
xchg
push
xor
and
out
hlt
xchg
loop
loop
ror
je
in
pop
retf
data16
jle
mov
push
mov
stos
fiadd
inc
ins
and
and
xor
and
cmp
arpl
push
push
or
mov
xchg
ins
bound
pop
shl
cmp
pop
jae
inc
mov
cmp
test
int3
nop
jl
(bad)
out
hlt
xchg
daa
push
or
adc
sbb
dec
pop
(bad)
mov
or
mov
sbb
adc
fdivr
fsub
mov
mov
pop
shl
pop
mov
repnz
repnz
in
mov
ffree
mov
mov
sbb
inc
cmp
fst
or
stos
or
(bad)
fwait
lock
es
movs
inc
pop
push
cs
jmp
mov
ds
nop
sbb
mov
sar
pop
mov
cmps
movs
frstor
fdivr
xchg
add
and
js
mov
jb
into
or
ret
iret
mov
in
bound
out
iret
xor
loope
and
shl
push
(bad)
retf
sub
xchg
es
out
inc
stos
fucomip
jmp
push
ds
pop
sub
movs
jnp
xlat
mul
inc
mov
dec
mov
cli
dec
adc
jg
(bad)
mov
xor
cmps
ja
jae
jno
ins
mov
outs
retf
retf
and
pop
cld
and
sar
stos
push
or
pushf
push
xchg
push
dec
push
cmp
push
mov
xchg
add
push
cli
sbb
cmps
scas
lods
jmp
or
pop
adc
xchg
movs
ret
sub
leave
push
sbb
xor
in
sub
out
push
mov
ror
push
leave
mov
mov
mov
mov
xchg
inc
dec
bound
sbb
repz
jle
in
sbb
(bad)
sbb
bound
sub
mov
sub
add
jl
dec
jge
pop
xchg
sahf
and
or
xchg
jbe
retf
jmp
dec
cmp
or
mov
fild
xchg
js
fbstp
sub
dec
test
adc
adc
loop
popa
cli
inc
jmp
adc
pusha
scas
adc
das
adc
ds
cmc
add
sub
push
jl
aaa
cmc
push
scas
jp
mov
int3
pushf
and
add
fld
add
xor
arpl
cmps
cmp
int
push
or
xchg
ret
mov
push
xor
fwait
int
retf
pavgb
int
into
retf
inc
push
movs
or
or
or
and
retf
and
jbe
sub
xchg
sub
into
fcom
aas
out
stos
add
iret
xchg
ins
test
mov
xchg
mov
dec
sub
adc
jne
cdq
add
outs
jmp
test
xor
ret
shl
sbb
push
hlt
shl
push
sbb
add
in
add
das
xchg
jg
test
sahf
sbb
cmp
mov
jge
pop
in
xchg
in
(bad)
repz
je
or
in
mov
jns
jg
xchg
out
lahf
nop
test
lahf
clc
jbe
jp
rol
push
add
jg
xchg
ins
mov
pusha
or
dec
aaa
sub
loopne
les
xchg
cmp
inc
cmp
xor
xchg
inc
pop
sub
push
xchg
pop
adc
in
gs
nop
ror
inc
ds
adc
pop
mov
(bad)
pop
sbb
xor
jnp
mov
mov
repz
dec
lods
jne
inc
fstp
add
sbb
icebp
aam
ins
jmp
jbe
or
xchg
(bad)
scas
das
out
inc
lods
dec
and
dec
(bad)
fbld
imul
mov
dec
pop
mov
movs
mov
adc
lahf
in
sbb
cmps
mov
cmp
dec
sub
sbb
xchg
push
dec
mov
test
or
mov
mov
out
push
loop
clc
push
and
cmp
cwde
scas
sar
or
pop
addr16
cmovo
mov
mov
hlt
jp
dec
(bad)
xchg
push
daa
mov
xchg
and
jns
leave
(bad)
das
pop
cmps
xchg
inc
xchg
cld
xchg
pop
dec
out
sbb
clc
xchg
inc
inc
(bad)
mov
jp
lock
rcr
das
add
pop
or
push
xchg
push
mov
jecxz
push
mov
scas
jmp
dec
nop
stc
mov
cmp
fiadd
loopne
retf
jnp
aad
pop
mov
out
push
scas
mov
pop
dec
icebp
jecxz
sub
nop
or
in
jmp
sbb
adc
outs
mov
loopne
mov
push
and
jp
cmp
pop
push
push
dec
in
fs
pop
mov
xlat
mov
or
xlat
retf
pop
mov
aas
sti
div
jns
call
or
and
and
sub
mov
sub
push
es
stos
clc
sub
pop
xchg
js
cmp
pop
push
pusha
inc
adc
pop
ror
iret
sbb
xlat
xor
in
mov
std
cs
xor
mov
mov
pop
and
lock
sbb
(bad)
sar
sar
xchg
dec
inc
les
pop
retf
loop
ins
repz
or
cmp
sti
and
mov
inc
cmps
test
jbe
cli
xlat
push
ins
loop
stos
add
int
mov
xlat
adc
add
retf
xlat
push
mov
fisubr
xchg
push
xchg
mov
pushf
xchg
mov
ins
mov
enterw
ficomp
adc
das
data16
neg
dec
cmps
test
mov
fsub
mov
or
adc
cmps
dec
lods
xchg
dec
lods
inc
ficomp
or
imul
into
lds
jne
or
sbb
popa
inc
arpl
ror
leave
mov
mov
mov
sub
pop
cmp
add
sbb
mov
fnstenv
loopne
xchg
outs
jnp
mov
jo
pop
jae
and
push
ins
sub
sbb
or
loop
inc
sub
or
shl
mov
pop
retf
or
or
or
dec
cmp
adc
aam
xchg
xchg
or
dec
xor
ficom
cmp
pop
pusha
loope
or
mov
add
iret
sub
lods
retf
pop
int
(bad)
pop
jns
cmp
add
xchg
cmp
cmp
add
or
push
in
dec
push
repz
sbb
or
ins
jle
iret
push
ja
sub
mov
cmps
sbb
ret
enter
sbb
mov
or
sub
dec
adc
add
cmps
xor
pop
mov
sahf
stos
sbb
lods
addr16
aaa
add
cmp
bound
mov
jmp
mov
aas
lods
pusha
add
add
loope
cmps
sub
call
jns
test
lahf
jmp
xor
ds
lock
lea
fistp
xchg
mov
xor
aaa
lds
das
sub
jmp
push
or
add
xchg
clc
xlat
jecxz
das
sub
cli
fstp
test
ins
add
add
sbb
pop
sub
push
jbe
mov
pop
push
into
jmp
or
jle
hlt
and
pop
ds
sbb
pop
add
xchg
jmp
jmp
ss
dec
clc
retf
cmp
pop
je
xchg
pop
adc
add
cmps
add
and
fld
sbb
mov
and
repnz
aad
repnz
push
stos
aam
add
cld
xchg
adc
xchg
mov
nop
xchg
(bad)
sbb
dec
xlat
das
popf
aaa
dec
push
ins
mov
cli
(bad)
push
fiadd
test
pushf
adc
retf
mov
or
cmps
cmps
cmp
mov
test
push
xchg
hlt
sbb
push
aad
test
jnp
jg
jge
aad
popa
xchg
and
inc
sbb
lds
aas
aas
inc
movs
stc
push
xor
pop
xor
push
xchg
leave
jne
mov
stos
mov
xchg
xchg
rcl
xchg
stos
pushf
pop
dec
sub
fcom
iret
dec
clc
xchg
pop
xchg
pop
fld
sbb
aaa
popa
jmp
icebp
mov
mov
sbb
mov
movs
jb
xchg
imul
cmp
mov
sahf
mov
movs
aaa
mov
sbb
jno
jecxz
sub
jnp
mov
or
mov
or
cmp
icebp
mov
mov
retf
mov
mov
push
inc
outs
leave
(bad)
js
mov
add
jne
jg
adc
neg
and
dec
out
sti
arpl
jno
loop
or
cld
dec
imul
add
rol
retf
mov
loopne
xchg
mov
outs
add
outs
(bad)
push
sub
adc
repnz
sub
lahf
mov
push
pop
cmps
hlt
mov
pop
push
dec
lods
or
sbb
sbb
cmp
nop
shl
sahf
xchg
(bad)
push
mov
pop
out
push
jns
retf
sub
cmps
or
mov
or
mov
js
sbb
pop
cs
and
jnp
adc
sub
ins
(bad)
jb
ds
std
mov
xor
pop
lahf
mov
adc
cs
test
push
sbb
cld
sub
mov
sahf
test
and
in
fnsave
adc
js
sti
cmp
icebp
fdiv
xchg
jno
sub
fisttp
pop
cmp
shl
out
lock
gs
in
mov
fcmovnbe
imul
lods
push
in
outs
jnp
imul
adc
mov
sub
adc
std
adc
cli
fidiv
pusha
out
and
push
dec
in
ins
pop
clc
jae
dec
idiv
cld
dec
sub
xlat
cdq
pop
cmc
push
enter
loope
not
or
sub
mov
xchg
add
or
ror
movs
cmp
inc
(bad)
lods
mov
sub
into
xchg
inc
jle
movs
repz
mov
stos
jl
add
dec
jbe
inc
mov
xchg
(bad)
aas
aad
jl
icebp
mov
dec
mov
push
(bad)
fcomp
test
inc
cmp
adc
es
into
sar
dec
loop
gs
out
push
push
push
ds
in
cwde
jnp
rcr
or
sub
sub
sub
fs
xlat
jmp
int3
jp
push
mov
pop
lds
add
retf
inc
sub
std
stc
push
push
repz
fadd
repz
sub
adc
push
mov
jno
das
sbb
(bad)
stc
ds
push
xchg
rcl
mov
dec
cmp
movs
repnz
inc
retf
ror
adc
fisttp
dec
jo
cmp
mov
xor
retf
xor
lods
sbb
mov
or
arpl
pop
lods
and
inc
xor
retf
mov
sub
inc
idiv
lock
jb
(bad)
imul
mov
leave
adc
jle
shr
or
inc
ret
jmp
data16
loope
ins
fsubrp
adc
adc
adc
jg
push
push
xchg
add
test
or
test
push
clc
ja
adc
movs
les
xor
adc
idiv
addr16
xlat
in
(bad)
retf
mov
add
xchg
xchg
sahf
cmps
scas
pop
mov
popa
inc
xchg
scas
push
call
adc
cld
mov
sub
loop
sub
outs
push
add
fs
add
pop
or
sahf
mov
pushf
(bad)
fild
mov
xchg
int3
stc
lods
leave
xor
xchg
aaa
pop
and
and
mov
mov
push
dec
cli
pop
xor
test
xchg
mov
dec
cmp
xchg
test
pop
mov
(bad)
mov
sbb
movs
mul
sub
ss
iret
jae
ja
sub
mov
inc
cmp
cmp
xor
aaa
icebp
ss
shr
adc
rol
and
xor
js
je
aas
and
movs
test
and
(bad)
sub
xchg
(bad)
xchg
inc
das
push
les
cmp
das
das
sbb
outs
mov
aas
xchg
pop
and
pop
and
(bad)
imul
jbe
inc
sbb
inc
ror
dec
adc
sbb
jmp
rcl
inc
mov
and
es
aad
sbb
nop
sbb
das
sbb
inc
std
or
mov
add
(bad)
cmps
dec
clc
mov
mov
stos
jg
(bad)
mov
push
stc
loop
push
pop
fsub
xchg
pop
mov
xchg
xor
push
and
sbb
or
dec
mov
sub
out
and
repz
int3
test
loop
mov
or
nop
push
data16
jb
inc
scas
mov
retf
dec
or
pop
dec
sbb
dec
lea
fst
das
loope
add
xor
scas
jg
xor
sar
(bad)
movs
xor
rcr
repnz
jmp
adc
jns
addr16
cmp
loope
xor
imul
sbb
(bad)
mov
aaa
in
xchg
fldenv
stos
icebp
cmp
repnz
inc
xchg
inc
push
sub
repnz
jmp
push
mov
sub
cs
nop
outs
call
push
jmp
xor
repz
jp
call
mov
dec
jg
pop
xor
cmps
addr16
inc
cmp
(bad)
jmp
loopne
sti
xchg
push
xchg
(bad)
daa
mov
dec
xchg
mov
inc
push
cmp
pop
mov
add
in
add
mov
push
out
mov
lahf
sub
push
add
stos
loope
in
pop
mov
fbstp
in
xchg
mov
(bad)
hlt
cld
pop
pop
ds
push
or
repz
pop
pop
jl
shr
push
shl
movs
nop
(bad)
mov
pop
xchg
xlat
lods
imul
mov
sbb
test
push
lods
jp
and
push
jg
sbb
imul
xchg
dec
int
retf
adc
adc
in
(bad)
push
ret
lahf
ins
cmp
loop
loopne
xchg
ins
jmp
das
push
and
in
pop
xor
aaa
pop
add
imul
(bad)
cmp
jnp
push
ins
cmp
add
fisttp
add
jle
shrd
cmc
mov
test
add
dec
mov
dec
mov
pop
scas
cmp
(bad)
cld
cmp
sub
(bad)
lock
cmps
sub
lock
outs
ins
scas
jl
leave
mov
and
fs
dec
pop
dec
mov
mov
ficom
jmp
aam
sub
test
aaa
jb
cmps
and
add
lss
mov
mov
sbb
adc
or
stos
popa
es
xor
jne
outs
test
test
adc
(bad)
dec
mov
fsub
xchg
aaa
stos
mov
into
sub
popa
in
sti
loop
add
scas
dec
adc
xor
mov
mov
fcom
fadd
and
fdiv
scas
jno
(bad)
mov
add
sub
dec
dec
sbb
mov
stos
xchg
pop
xor
push
movs
xchg
and
sbb
jne
jo
dec
inc
aad
xchg
aaa
and
jb
adc
add
xchg
jp
je
add
dec
add
cmp
cwde
in
jbe
lods
js
ja
fmul
sub
shl
popa
mov
rol
jge
sbb
mov
gs
mov
mov
cmp
mov
mov
pop
xchg
mov
arpl
cs
jns
inc
xor
pusha
rol
adc
sub
lods
jbe
test
repnz
scas
outs
inc
or
push
pop
mov
push
sbb
add
test
shl
push
mov
jmp
cmps
inc
fimul
mov
sbb
fdivr
enter
dec
ja
pop
pop
jnp
ret
data16
mov
push
rol
jmp
and
and
(bad)
mov
mov
lock
out
mov
jmp
push
and
mov
mov
scas
arpl
outs
pop
mov
rcr
retf
test
mov
xor
push
jp
cld
xchg
arpl
test
xlat
or
arpl
fs
jmp
xor
cld
out
call
scas
cmps
aam
mov
or
popf
sahf
xchg
dec
stos
mov
and
jae
rol
test
(bad)
sbb
pushf
sub
mov
pop
pop
xchg
sbb
mov
shl
aas
xor
add
ja
sub
mov
sbb
pop
(bad)
js
arpl
sbb
add
ret
fimul
addr16
call
lods
(bad)
cmp
pop
aas
cmp
inc
mov
mov
mov
sub
jle
jg
jo
call
sbb
imul
outs
mov
sub
jne
lds
jmp
lahf
mov
push
mov
lods
scas
dec
cli
daa
add
inc
ss
adc
mov
push
jb
rcr
lock
js
loopne
sbb
adc
sub
idiv
stos
mov
mov
dec
fld
stos
mov
test
shl
adc
dec
int3
dec
sbb
sbb
imul
in
repz
fdiv
(bad)
xchg
fldz
shl
call
push
add
jno
sub
pop
daa
pop
add
loop
xchg
xor
js
mov
xchg
pop
js
push
test
mul
pusha
jge
lock
cmp
sub
mov
push
mov
dec
stos
test
out
xchg
mov
or
and
xchg
fdiv
push
dec
not
xor
xchg
pusha
mov
adc
sbb
pop
retf
outs
aam
ret
mov
mov
dec
cmp
aam
data16
xchg
(bad)
stc
stos
mov
shr
(bad)
add
out
es
cdq
cwde
mov
inc
adc
cmps
repz
push
sbb
mov
xor
dec
in
jb
daa
mov
sub
dec
rol
dec
daa
in
xchg
xchg
in
mov
(bad)
pop
mov
xchg
je
icebp
and
ret
add
and
jp
sbb
pop
outs
scas
xor
cmp
out
lea
call
adc
ss
mov
cmps
(bad)
fcomp
inc
cli
or
or
mov
lock
scas
ret
les
repz
or
test
or
pushf
mov
xchg
mov
dec
test
sar
push
cmps
(bad)
pop
xlat
cwde
test
mov
bnd
(bad)
ins
stos
mov
jg
(bad)
fcomp
mov
call
shl
arpl
out
lahf
test
sub
cmp
add
in
ret
ret
sub
fiadd
or
popa
push
and
mov
jns
push
sbb
dec
call
or
dec
push
xor
fwait
mov
sbb
mov
xchg
rcl
sbb
mov
jmp
fwait
mov
sbb
ja
out
adc
leave
or
and
mov
neg
dec
imul
sbb
lock
bound
into
fisubr
int
enter
push
ret
or
pushf
popf
push
sbb
das
sub
fidiv
pop
push
mov
arpl
adc
stc
pushf
iret
fistp
ss
inc
adc
xchg
xchg
rcr
push
fidiv
mov
out
les
sbb
out
in
adc
rcr
push
fsub
cmp
sub
mov
xlat
test
fcomp
stos
lods
dec
imul
leave
jmp
into
pop
std
xlat
je
sub
leave
jle
adc
mov
adc
jno
shr
inc
call
aad
or
mov
xor
leave
aaa
add
mov
aaa
pop
mov
inc
outs
xchg
mov
test
sbb
xchg
add
inc
bnd
imul
repz
xchg
or
pop
test
scas
(bad)
push
ds
sti
and
mov
and
pop
xchg
cmp
mov
stos
dec
inc
test
les
daa
mov
stos
cmc
or
jle
mov
xchg
daa
xchg
jmp
imul
rcl
xchg
mov
or
inc
adc
add
or
xchg
rcr
mov
retf
imul
mov
dec
ficom
les
add
adc
ss
jbe
mov
push
or
shl
sub
ja
mov
mov
mov
icebp
mov
xchg
or
stos
fld
dec
jbe
mov
js
in
sbb
pushf
shl
or
dec
fadd
sub
add
outs
sub
sbb
sub
das
xchg
sbb
pop
xor
jg
cmps
test
jecxz
dec
jle
fild
and
push
pop
cmp
xor
jbe
inc
ss
xchg
xchg
xchg
mov
ret
fldcw
push
adc
out
ins
or
push
push
vmaxsd
add
sub
int
enter
add
pop
xchg
ins
dec
ds
scas
(bad)
pusha
or
int3
push
not
imul
inc
lock
or
sar
xchg
push
pop
sub
bound
pop
mov
and
and
mov
rcr
les
jmp
fstp
call
xchg
shr
sub
scas
mov
leave
adc
nop
pop
fist
call
lahf
in
mov
mov
cmp
xor
es
std
xchg
call
sti
hlt
xchg
lods
cmp
enter
adc
mov
nop
jno
popa
push
push
pop
jmp
popf
ss
xor
cmps
dec
lock
out
sbb
addr16
fld
scas
popa
sub
pop
dec
fidiv
loopne
test
push
pop
shl
fcmovnu
push
mov
pop
sub
test
fs
push
jnp
add
retf
cmp
pop
or
mov
and
cmp
sar
pop
fstp
(bad)
lods
adc
icebp
in
retf
mov
imul
loope
adc
cmp
xchg
inc
mov
js
xchg
add
les
int
movs
inc
sub
push
or
fdiv
sti
mov
push
dec
push
push
push
xor
jge
add
out
xor
add
xor
jnp
stc
outs
cmp
loopne
jo
lds
xchg
mov
jle
inc
fwait
loop
mov
or
call
cmc
pop
inc
dec
add
mov
imul
pop
dec
jmp
lds
xchg
sbb
inc
pop
and
xchg
lahf
pushf
scas
in
ins
adc
mov
dec
xchg
leave
iret
ret
cmp
les
jae
and
inc
sub
inc
adc
repz
push
xchg
ins
outs
rcl
cld
sti
enter
cmp
add
dec
adc
fisub
add
add
adc
bound
test
mov
aaa
dec
in
jbe
dec
lds
mov
jne
mov
cs
mov
or
inc
in
cld
mov
mov
lock
js
addr16
retf
sub
or
dec
and
std
cmp
mov
mov
fstp
xor
pop
sbb
push
shl
dec
sbb
jp
push
out
sbb
sub
or
ja
stos
pop
sub
popa
mov
add
mov
daa
ret
mov
ror
pop
adc
mov
aas
pop
fimul
mov
xchg
jle
inc
mov
loopne
stos
ret
mov
push
jl
jbe
mov
jp
xchg
shl
repnz
sub
pop
push
ins
jae
mov
mov
cli
mov
ins
sbb
enter
dec
jns
cmp
cld
pop
inc
mov
out
in
mov
inc
ss
into
mov
ja
cmc
adc
jl
mov
add
int
jle
repz
push
xor
sar
mov
test
jmp
movs
mov
cmp
pop
repz
push
into
addr16
idiv
out
pop
aaa
sub
and
retf
enter
fimul
pop
shl
push
les
retf
xchg
stos
xlat
or
mov
jmp
shl
sbb
bnd
xor
push
fisttp
dec
scas
loope
sub
ins
call
dec
jmp
inc
or
sub
xchg
or
int3
sub
stos
fninit
dec
inc
add
mov
mov
hlt
add
fisttp
or
cmps
and
mov
inc
idiv
(bad)
xor
sub
shr
and
jg
inc
rol
cld
outs
(bad)
and
mov
inc
or
addr16
sub
sub
add
test
mov
stc
sti
stc
daa
cmp
call
rdmsr
inc
loopne
addr16
mov
adc
movs
repz
dec
cmps
pop
ss
push
dec
stos
icebp
js
adc
add
lahf
es
push
xor
jo
fidiv
das
int3
out
jnp
sbb
cwde
push
push
sbb
cmp
mov
jno
or
and
ret
add
ins
ja
push
fucomip
xor
inc
mov
xchg
ret
xchg
out
std
sahf
sub
aas
mov
mov
push
(bad)
loop
mov
nop
add
ds
js
xlat
jb
sbb
retf
(bad)
out
and
xor
inc
lods
outs
imul
pusha
inc
inc
and
mov
push
mov
jg
fwait
(bad)
daa
scas
adc
pushf
sti
push
and
mov
and
in
mov
data16
xor
test
cmp
je
mov
call
daa
ret
jmp
pop
mov
test
inc
sub
mov
xor
div
jns
ja
gs
aas
mov
scas
jae
cs
and
fbstp
inc
or
sti
pop
sub
icebp
add
mov
sub
xchg
pop
cmps
jg
jne
dec
inc
dec
xchg
shl
into
jg
retf
mov
call
fcompp
in
inc
into
ja
mov
dec
xchg
xor
fimul
mov
mov
lods
fidiv
repz
add
fisub
repz
ror
mov
shufps
out
xor
jno
bnd
out
pop
cmp
sub
test
lods
fwait
mov
mov
mov
lods
mov
mov
or
push
adc
mov
xchg
fwait
cmp
add
cmps
sub
pusha
inc
jge
add
scas
scas
push
inc
inc
xchg
push
push
jg
loope
shl
and
inc
mov
xor
mov
cld
shr
pop
jo
cmp
xlat
jmp
scas
out
cmp
test
mov
lahf
iret
out
arpl
scas
jg
hlt
add
movs
outs
xchg
cmp
iret
idiv
(bad)
fwait
sahf
scas
imul
push
je
mov
sub
add
adc
ja
fbstp
push
(bad)
pop
sub
jae
out
jb
pop
jp
mov
out
scas
scas
adc
je
ja
rcl
sbb
mov
sbb
dec
push
mov
mov
mov
mov
inc
push
push
dec
test
test
int
fdivp
and
rol
and
cs
and
xchg
daa
jae
int
shl
adc
adc
sub
jb
aam
je
nop
cld
jbe
leave
imul
int3
test
aas
cs
push
sub
push
pop
add
dec
adc
jg
scas
xor
dec
outs
fld
add
mov
xchg
xchg
imul
(bad)
ds
pop
test
sub
fwait
stos
mov
repz
inc
sahf
aaa
xor
es
push
fs
dec
cmps
mov
push
adc
xor
push
fld
div
add
push
out
fisttp
neg
daa
in
push
sub
add
add
fdiv
movs
mov
jo
nop
sbb
dec
mov
adc
stc
fxch
and
sub
pop
jnp
enter
inc
cmp
xor
push
jmp
repz
int
mov
jg
pop
fst
jnp
inc
mov
jae
pushf
ins
lahf
stc
jb
adc
test
mov
jae
nop
cld
enter
push
mov
sbb
mov
in
pop
ret
rol
outs
sub
aas
jp
jae
arpl
ss
xchg
fsubr
out
sub
out
sub
mov
stos
clc
cwde
sbb
jl
or
les
mov
push
adc
int3
mov
pop
fwait
or
lahf
js
rcl
ficom
xchg
ds
xchg
call
pop
scas
sbb
jnp
add
add
inc
add
movs
call
add
es
and
dec
out
add
pop
xchg
mov
adc
xchg
lock
cmp
loope
jle
or
jo
push
ret
inc
aaa
jnp
lds
add
mov
arpl
xor
(bad)
enter
in
jns
dec
mov
push
ret
popf
aaa
outs
inc
jecxz
jg
adc
sub
xchg
xor
xor
xlat
push
sub
in
jbe
stos
dec
sub
jle
add
sbb
imul
ror
sub
dec
outs
sub
imul
jb
push
pop
add
das
xchg
inc
sbb
imul
hlt
add
sbb
xor
push
outs
mov
clc
stos
cmp
inc
mov
scas
sub
jge
div
jle
leave
xchg
das
daa
cmps
cmp
ins
(bad)
or
xor
cmp
mov
pop
mov
test
ret
nop
jmp
pushf
cli
mov
pop
push
mov
mov
es
retf
jae
cmp
lock
inc
test
je
mov
push
and
aaa
mov
push
(bad)
enter
out
pusha
push
iret
mov
pop
aas
xchg
leave
repz
sbb
rcr
adc
(bad)
cdq
mov
pop
into
leave
cdq
cmp
and
push
sub
hlt
adc
fnstenv
pop
inc
or
or
and
jno
repz
imul
mov
dec
add
push
(bad)
and
lods
and
dec
mov
std
iret
and
dec
sub
xchg
push
sub
pop
fist
sub
cmp
test
aas
sub
mov
pop
add
mov
sar
stc
jne
cmps
sbb
mov
fnstcw
and
sbb
xchg
jmp
fwait
pop
inc
jl
sar
fucomip
cmp
aam
movs
dec
in
loope
js
inc
and
adc
imul
cmp
inc
adc
xchg
xor
jp
fcomp
lahf
mov
mov
mov
mov
test
xor
(bad)
jge
mov
mov
imul
je
mov
jg
sahf
adc
les
jnp
sbb
cmps
rcl
cmp
popf
idiv
mov
icebp
mov
and
(bad)
mov
pop
and
add
enter
call
imul
add
movs
fisttp
(bad)
jg
int
mov
cmp
popa
or
sbb
cmp
cmp
lea
jmp
dec
pop
push
xchg
lahf
xor
adc
push
cmp
data16
add
out
clc
push
sub
xchg
call
jo
jb
stos
cdq
push
(bad)
cmps
nop
inc
jo
fistp
ins
inc
int3
fnstenv
xor
xchg
xor
into
mov
add
enter
sbb
sbb
js
je
sub
push
jne
xchg
or
dec
clc
cwde
pusha
lock
inc
out
out
sbb
add
cmp
xor
mov
iret
add
sahf
push
sub
add
into
in
jno
add
sub
push
lds
xchg
dec
pushf
ja
dec
or
loopne
pop
pop
mov
or
push
adc
pop
imul
or
ficom
imul
mov
cs
push
xchg
scas
xlat
adc
cmps
out
pop
repnz
xchg
sub
imul
xor
fdiv
inc
mov
add
push
adc
sbb
add
fst
mov
xor
add
aad
scas
dec
fmulp
cmp
xor
push
xor
test
in
mov
jmp
and
fadd
inc
fwait
cmc
inc
bound
test
jecxz
fdiv
loopne
dec
cdq
mov
sub
scas
dec
jno
xor
mov
fcmovnb
stc
jmp
movaps
jp
and
mov
and
pop
inc
out
and
or
jae
dec
mov
lods
or
mov
push
stos
sti
sub
pop
jbe
into
inc
sub
or
jno
into
mov
in
gs
cmp
xor
adc
movs
or
add
imul
addr16
popa
mov
cmp
sub
mov
xor
adc
cmp
out
(bad)
pusha
dec
lock
imul
mov
scas
sub
fsub
ins
push
xchg
jae
dec
and
jne
add
cmp
inc
cmp
cmc
rcr
sub
(bad)
sahf
int3
jno
sahf
inc
jo
xchg
xor
xchg
out
sub
pusha
sub
fisubr
bound
retf
stos
jns
test
adc
(bad)
addr16
fwait
jecxz
hlt
mov
mov
lods
popa
xlat
outs
mov
jge
repz
iret
dec
stc
sub
shl
pushf
jmp
lods
fld
cmp
jl
add
mov
adc
and
ret
jns
xchg
fwait
pop
in
sub
cmps
movsx
test
cmps
pop
mov
test
fs
sti
pop
stos
scas
fmulp
sub
adc
leave
xchg
add
push
and
mov
arpl
mov
fisubr
push
dec
or
xchg
icebp
sbb
jg
enter
cli
fcmovnbe
bound
inc
xchg
xchg
daa
push
into
xchg
fst
push
inc
and
ja
jns
js
push
pop
push
mov
icebp
mov
mov
sbb
inc
mov
out
mov
add
or
test
clc
dec
es
lock
loope
jg
gs
xchg
(bad)
aaa
pop
mov
cli
mov
sti
push
mov
out
and
gs
into
inc
xchg
das
pop
pop
subps
jl
retf
outs
lods
xchg
lods
cmp
push
fwait
loope
pop
es
gs
inc
xchg
inc
mov
(bad)
dec
mov
stc
ret
push
or
(bad)
xchg
cmp
cmps
nop
(bad)
push
xchg
jecxz
mov
push
mov
or
and
xchg
leave
(bad)
push
jns
call
aam
lock
mov
mov
cmp
aam
ror
gs
xchg
and
pop
fldenv
stos
(bad)
pop
mov
sub
mov
sub
cmp
add
lock
xchg
mov
add
mov
xor
retf
mov
js
stos
adc
sti
popf
push
add
mov
xchg
loope
pop
in
test
xlat
mov
adc
jno
or
pop
mov
(bad)
in
ret
mov
add
sub
les
ret
xchg
les
jle
push
push
xchg
lea
inc
ret
stos
dec
xor
inc
mov
js
mov
jg
pop
outs
ja
dec
scas
sti
xor
pop
or
ret
cmp
mov
mov
(bad)
xchg
fwait
lods
jg
adc
dec
bound
imul
sub
add
mov
movs
out
fimul
xchg
or
sub
mov
nop
add
test
mov
jecxz
(bad)
popa
sub
xor
xor
inc
in
cdq
jl
jmp
addr16
xchg
sbb
shld
sbb
pop
xor
ret
xor
(bad)
ret
nop
jb
pop
loope
in
rol
aas
outs
push
sub
scas
repz
or
icebp
pop
adc
icebp
push
test
out
cmp
inc
stos
popf
outs
daa
xor
lods
or
sub
push
add
inc
and
inc
xor
xchg
mov
xchg
outs
(bad)
xor
xchg
mov
mov
mov
jmp
jne
icebp
lds
dec
scas
xchg
pop
mul
sub
sbb
cmp
push
jp
sar
mov
sbb
lods
pop
inc
lock
jp
pop
hlt
jecxz
cmp
adc
jmp
add
push
(bad)
xor
outs
dec
jns
mov
(bad)
jle
jno
out
mov
xchg
jl
xlat
mov
push
enter
mov
xlat
in
sub
mov
push
or
rol
mov
in
mov
jns
add
jns
movs
xor
fild
cmp
lds
mov
fwait
mul
fistp
mov
xchg
fstp
call
jo
ins
loop
pop
mov
les
sbb
dec
out
jne
sbb
into
push
daa
and
mov
mov
out
retf
pop
push
dec
mov
inc
pop
xchg
sbb
cmp
jnp
and
mov
push
sbb
pop
mov
ss
mov
cmps
ins
pop
inc
xor
aas
xchg
movs
jns
push
inc
fidiv
loop
pop
xchg
jo
and
enter
inc
or
retf
imul
ins
dec
sar
cmc
call
jg
or
push
xchg
inc
adc
cmps
pop
lods
sub
ret
mov
stc
jg
imul
cmps
push
retf
inc
iret
je
fldcw
cs
dec
call
adc
mov
pop
mov
hlt
(bad)
mov
sahf
lea
and
jmp
adc
imul
push
inc
sub
in
pop
mov
daa
xchg
or
sub
pop
scas
int
xor
test
ds
mov
push
adc
stos
dec
sbb
arpl
dec
call
cwde
mov
pop
cmp
xor
mov
icebp
pop
inc
pusha
xchg
aas
xor
jg
out
out
(bad)
das
cmps
leave
lods
aas
gs
out
push
xchg
xor
arpl
xchg
push
cli
cmp
neg
xchg
shr
xor
or
or
push
dec
mov
loop
mov
adc
ja
aas
inc
mov
addr16
ret
or
jle
pop
repnz
ja
sahf
popa
mov
daa
lods
pusha
into
inc
jnp
xchg
push
(bad)
fsubr
jmp
enter
rcl
pop
scas
repz
(bad)
adc
mov
adc
xor
xchg
sub
add
js
adc
repz
lock
push
dec
xchg
pop
xchg
fdivr
mov
das
mov
das
xor
(bad)
stos
stos
xchg
cs
les
pushf
hlt
imul
fidiv
inc
mov
push
push
cmc
ja
inc
call
inc
cmp
add
mov
call
imul
dec
jle
jae
fcom
cld
mov
sub
cmps
or
cmp
xor
push
push
jmp
hlt
mov
push
add
and
mov
pop
push
pop
(bad)
retf
ret
dec
sub
adc
fldcw
or
leave
jnp
xchg
repz
cmps
div
daa
cmps
movups
sub
mov
fld
dec
mov
cli
lods
aad
int
inc
and
rcr
(bad)
sub
int
jg
int
sbb
adc
inc
icebp
inc
retf
dec
cdq
jmp
mov
fcom
daa
mov
cld
adc
push
push
sbb
pop
pushf
cwde
std
and
xchg
add
adc
mov
cmps
xor
adc
stos
jno
inc
data16
mov
push
into
lock
mov
push
adc
mov
xchg
pop
inc
pop
call
cmps
retf
not
add
jb
xchg
pop
(bad)
jecxz
jmp
push
iret
pop
pushf
ja
jmp
mov
enter
(bad)
xchg
adc
jmp
repz
aam
sbb
js
adc
dec
repnz
jmp
sbb
xor
push
call
mov
rcl
xor
push
dec
bound
lock
cmps
sub
mov
cmp
jmp
push
sbb
xlat
dec
mov
mov
push
(bad)
ja
arpl
cmp
ret
dec
out
clc
test
out
popa
inc
movs
adc
cmp
cs
jne
pop
or
adc
mov
push
(bad)
xor
xchg
mov
pop
fwait
mov
jno
test
out
jl
lods
pop
jo
dec
in
mov
adc
sub
dec
stos
fisubr
mov
movs
mov
call
data16
xchg
xchg
nop
cmp
adc
xor
pop
add
mov
dec
dec
loope
pop
jno
or
aam
pushf
test
or
and
xchg
sub
in
push
mov
add
inc
inc
cwde
movs
sub
dec
push
jae
call
and
xor
pop
and
aaa
cmp
add
movs
jge
in
test
mov
push
xor
into
mov
push
or
xchg
fild
sbb
in
inc
push
add
mov
cmp
cwde
(bad)
pop
std
xchg
sub
push
cmps
repz
mov
pop
mov
ja
push
cmp
mov
jnp
lea
sub
jae
call
adc
pop
ret
mov
add
push
add
icebp
pop
mov
cld
pop
fisubr
scas
inc
mov
(bad)
mov
int3
add
mov
fcmovnb
retf
mov
ss
add
push
pusha
xor
arpl
call
add
iret
int
add
leave
sub
jno
xchg
jg
shr
dec
jb
push
jno
jae
pop
mov
sub
(bad)
mov
(bad)
sti
mov
call
out
add
xor
push
mov
pop
pop
(bad)
loopne
xchg
dec
int
(bad)
lods
add
(bad)
sub
lds
push
int3
fist
sub
lea
repz
jo
arpl
test
cdq
aad
and
mov
(bad)
dec
ss
arpl
out
push
retf
test
(bad)
sahf
mov
(bad)
mov
add
xor
in
mov
popa
sbb
sub
movs
mov
push
sub
cdq
nop
mov
mov
pop
push
sbb
test
jns
mov
lods
inc
pop
pusha
push
dec
xchg
xchg
mov
stos
mov
imul
popf
push
cmp
mov
jae
imul
pop
(bad)
push
inc
dec
add
jmp
lds
push
scas
iret
cmc
jmp
cmp
sbb
push
jns
push
cmp
lahf
jg
mov
ins
pop
push
retf
ins
mov
cmp
add
adc
ja
xor
xor
dec
adc
mov
into
mov
jl
retf
mov
xor
arpl
xchg
movs
ja
pop
sbb
imul
xlat
sbb
ret
imul
test
xchg
push
jmp
cs
sbb
pop
rol
scas
das
sub
jmp
sub
lds
fst
adc
cmps
mov
ins
mov
cdq
mov
fistp
mov
mov
adc
xchg
mov
pop
mov
dec
call
dec
sahf
or
pop
jmp
add
iret
xchg
dec
adc
cmp
repz
adc
sbb
neg
dec
dec
and
push
test
add
cmps
xchg
xchg
jg
push
push
ins
sahf
xor
icebp
loop
jg
lock
sub
adc
and
mov
push
inc
cmps
pop
or
push
add
ret
jge
movs
dec
cmp
dec
inc
clc
cs
inc
test
dec
push
imul
pop
dec
(bad)
or
pop
pusha
mov
pushf
movs
dec
push
or
jge
pop
xchg
xchg
push
push
fst
push
not
stc
inc
pop
cmp
xor
inc
add
outs
hlt
xchg
rcl
ins
xchg
iret
retf
out
(bad)
dec
xchg
adc
fbld
jecxz
imul
je
rcl
push
dec
jo
ja
push
je
ja
(bad)
stc
loop
dec
call
adc
and
or
pop
pusha
push
add
jl
mov
pop
mov
hlt
xchg
inc
(bad)
bound
or
data16
push
lahf
js
stc
xchg
aas
cmp
add
xchg
into
or
scas
(bad)
pop
jno
xchg
lods
mov
and
ret
dec
mov
and
data16
std
jp
aaa
mov
mov
adc
xor
arpl
repz
nop
inc
(bad)
repz
sbb
xchg
(bad)
sbb
loop
ret
bound
push
or
je
ins
in
pop
cmp
pushf
int
iret
pop
or
repz
add
inc
ja
pop
loop
add
ret
rcl
sub
shl
(bad)
mov
pop
enter
mov
add
iret
dec
cmp
ret
cmc
loop
ret
sbb
cld
mov
xor
fstp
xchg
mov
or
ins
std
test
mov
enter
pusha
pop
aas
adc
mov
clc
(bad)
or
inc
inc
nop
loop
mov
adc
cmp
cdq
jae
arpl
mov
pop
and
inc
mov
push
xchg
ja
iret
mov
xchg
test
add
sub
cmp
or
int
arpl
jnp
fadd
retf
push
jg
xchg
cmp
and
sbb
aas
mov
push
sti
out
xor
retf
out
dec
movs
push
add
or
fild
and
(bad)
outs
add
sbb
push
mov
cmp
mov
pop
test
gs
jp
fwait
xchg
sti
dec
or
push
cmp
xchg
test
ja
push
jg
fs
mov
mov
xchg
jecxz
dec
test
les
cmp
inc
gs
mov
mov
push
mov
int
pop
mov
pop
scas
mov
push
fisttp
push
stos
pop
lock
dec
in
pop
(bad)
retf
jo
sbb
test
jbe
adc
mov
fdiv
aad
mov
dec
nop
or
inc
ret
xchg
sub
repnz
mov
sub
sbb
inc
jmp
mov
push
adc
mov
test
test
and
fld
retf
das
mov
jnp
pushf
add
and
stos
jns
test
mov
je
xlat
mov
mov
cmps
mov
cs
sub
sahf
cmp
mov
mov
in
and
mov
fstp
adc
add
pop
dec
je
sbb
push
mov
or
adc
lods
jl
(bad)
aam
adc
pop
mov
xchg
aaa
in
push
push
scas
scas
lods
xchg
pop
and
out
adc
sbb
ret
xchg
lods
push
sub
jge
mov
outs
movs
adc
aas
shr
inc
mov
mov
jne
push
les
sbb
pushf
xor
mov
(bad)
jae
inc
mov
out
inc
xor
int3
mov
int3
call
mov
imul
cmc
or
add
test
jns
sbb
in
(bad)
je
lds
inc
ins
or
fimul
pop
jo
xchg
push
xchg
(bad)
stos
xor
push
stos
inc
xor
mov
mov
test
cdq
dec
ja
push
mov
xchg
outs
cmp
fiadd
pop
push
hlt
mov
ret
test
cmp
imul
mov
mov
adc
sub
and
clc
push
lock
(bad)
and
(bad)
xchg
jmp
repz
hlt
adc
es
adc
push
test
dec
cdq
iret
add
pop
fidiv
cmps
jns
scas
test
dec
imul
out
pop
xchg
jno
out
add
fs
imul
loopne
jle
jnp
shl
fidiv
lods
jns
pop
inc
xor
es
adc
xor
dec
loopne
mov
fisub
push
out
fwait
pop
sti
push
out
mov
push
pop
ss
clc
or
dec
pop
iret
xchg
xchg
mov
pop
jmp
add
addr16
test
mov
xchg
ins
push
fsubr
and
push
sub
les
xchg
ins
jmp
hlt
push
lods
cs
xchg
in
mov
push
mov
sbb
xor
sbb
and
sbb
test
dec
xchg
jne
push
xchg
repz
idiv
lods
xchg
es
sub
jle
icebp
mov
push
add
cmp
stos
cwde
cmps
ins
inc
sub
jmp
or
mov
jae
les
xchg
jmp
popf
adc
mov
mov
out
push
stos
mov
imul
or
stc
jne
adc
xor
hlt
out
push
push
sub
je
sbb
add
mov
inc
jmp
shl
clc
(bad)
dec
outs
sub
jnp
sbb
scas
adc
xchg
int3
push
loope
mov
stc
jmp
xor
rcl
stos
xchg
jge
in
es
mov
or
xchg
xor
shr
adc
ss
retf
jle
sbb
cld
loope
idiv
adc
jno
pop
pop
dec
stos
mov
mov
fsub
jnp
(bad)
cld
xchg
xor
pusha
xchg
neg
push
out
or
mov
add
sti
stos
xchg
movs
bnd
or
enter
and
mov
mov
mov
inc
mov
inc
push
push
or
je
or
sbb
push
hlt
mov
pop
mov
push
inc
aad
in
inc
jae
mov
add
popa
jo
xchg
xor
pop
xchg
daa
mov
pop
xchg
pop
mov
outs
jbe
imul
scas
dec
les
out
jp
fldenv
push
imul
call
mov
retf
icebp
(bad)
lea
stos
mov
pop
mov
pop
xor
and
pop
cdq
add
or
cld
outs
sbb
add
xchg
adc
loope
adc
sub
jae
pop
test
test
push
sub
mov
in
pop
cmps
mov
jecxz
jns
ss
jbe
mov
inc
mov
push
xor
fcomi
repnz
add
out
das
mov
outs
push
push
push
mov
inc
push
cmp
inc
rep
xor
rol
push
fmul
dec
xchg
outs
pop
jge
xchg
popa
pop
sub
push
int
inc
or
cmp
mov
jo
iret
popa
add
cdq
(bad)
ja
cmp
ins
bound
mov
xchg
mov
iret
adc
xchg
adc
sar
in
lods
inc
mov
and
push
mov
sub
pop
jne
std
test
scas
xor
test
xchg
addr16
mov
mov
dec
push
mov
mov
dec
push
into
dec
mov
push
popf
jge
loope
and
mov
xchg
dec
add
loope
les
add
fmul
lods
xchg
jnp
mov
sbb
fimul
dec
jge
ds
int3
or
pop
int
mov
loope
and
dec
adc
ror
push
test
(bad)
mov
test
inc
push
sub
imul
xchg
push
retf
push
test
adc
mov
xchg
mov
jle
push
jae
sbb
mov
outs
jmp
imul
pusha
shr
jecxz
push
lds
mov
mov
imul
mov
es
ss
sub
add
or
or
lock
push
cld
push
hlt
dec
cdq
pop
mov
je
inc
mov
and
dec
xor
je
push
cmp
sub
iret
push
not
pop
fcmovne
shl
mov
lock
scas
leave
test
push
imul
sbb
add
xchg
mov
scas
xchg
aas
jp
xlat
into
jl
dec
mov
mov
in
xchg
or
xor
in
test
outs
lods
lock
mov
rcl
mov
(bad)
imul
mov
push
cmp
stos
popf
imul
xchg
retf
add
test
xchg
scas
push
cmps
lock
stos
adc
jg
(bad)
sub
popa
ret
mov
addr16
mov
push
mov
cmp
mov
pop
fcomp
inc
xor
sbb
xchg
sbb
xchg
into
mov
or
in
dec
retf
ja
ret
sahf
test
push
loopne
ins
js
call
push
ss
mov
and
push
ss
into
ror
sahf
mov
stc
(bad)
and
xor
push
test
fsubr
test
test
cmp
cmp
sbb
out
dec
ss
inc
dec
ds
mov
jnp
ins
stc
sub
test
sub
xchg
and
mov
movs
imul
and
jge
imul
(bad)
ins
or
cmc
and
retf
dec
movs
pop
mov
scas
or
cmp
push
mov
and
leave
mov
push
pop
sbb
(bad)
jne
inc
dec
int3
or
test
or
repz
xchg
mov
test
add
inc
ficom
pop
cld
cld
jnp
repnz
add
rol
add
jnp
inc
(bad)
test
xchg
sub
mov
mov
pop
cs
(bad)
(bad)
icebp
js
mov
mov
stos
dec
dec
xchg
push
and
sub
add
movs
jne
das
mov
jl
xor
clc
mov
stos
xor
xchg
add
movs
in
mov
push
sub
pop
dec
sub
cmp
xlat
in
and
add
dec
lods
pop
push
xor
xchg
adc
aas
and
or
jp
aaa
adc
xchg
jbe
push
inc
mov
mov
push
jnp
sahf
call
cmp
aas
mov
jecxz
xor
dec
enter
pop
cdq
sti
sub
push
sbb
adc
xor
cdq
(bad)
shl
test
rol
add
push
sahf
ror
sbb
push
inc
jg
dec
sbb
and
pop
scas
jmp
jno
call
sub
push
jle
pop
adc
outs
push
enter
sbb
test
sub
scas
dec
popf
int
or
push
sbb
dec
push
jb
push
sub
mov
(bad)
out
test
lock
jmp
push
test
or
inc
popf
add
jecxz
mov
add
inc
mov
push
jns
rcr
add
sub
imul
jnp
inc
fnstcw
in
aas
div
mov
xchg
add
popf
out
push
push
xor
cmp
cmp
jno
push
xchg
sbb
lea
jns
push
lods
iret
sar
nop
mov
sbb
lds
rcl
xchg
jg
add
aas
jmp
lea
cmp
idiv
jmp
rol
fadd
or
mov
retf
scas
cmps
adc
sub
icebp
mov
cli
mov
mov
and
and
mov
inc
inc
push
inc
je
adc
xor
out
bound
push
pop
sub
push
jle
imul
aaa
scas
mov
(bad)
inc
jo
inc
popf
nop
retf
mov
mov
sub
dec
stos
and
add
mov
mov
push
sbb
xchg
retf
mov
mov
mov
sbb
out
mov
out
or
pop
jmp
es
retf
jecxz
mov
mov
retf
pop
jecxz
out
jo
leave
xor
pop
mov
sbb
gs
enter
leave
jl
xchg
(bad)
sbb
inc
pop
out
pushf
out
inc
jb
std
jle
inc
xor
into
push
sbb
(bad)
cli
cmp
(bad)
cmp
push
das
xchg
data16
jle
js
and
or
repnz
inc
xlat
pushf
(bad)
adc
pop
jmp
xchg
jmp
cmps
add
mov
ss
mov
mov
push
out
pop
fwait
in
(bad)
js
push
push
add
or
shl
or
xor
loope
stos
sbb
sub
mov
adc
mov
jns
cmp
jmp
rcl
sbb
(bad)
sub
xchg
repnz
jl
test
es
icebp
jo
adc
pop
aas
aas
push
(bad)
push
dec
icebp
pop
test
xchg
xor
mov
dec
mov
xchg
sbb
aas
sub
push
jge
inc
mov
dec
push
jg
cld
stc
mov
jmp
retf
sti
sub
lock
pop
ds
inc
out
add
mov
push
pusha
inc
jo
adc
hlt
(bad)
push
(bad)
cdq
cmp
inc
pop
ftst
in
enter
push
inc
jmp
aas
mov
pop
sti
jl
adc
inc
pushf
mov
das
retf
loope
or
bound
inc
mul
mov
pop
setae
dec
jo
out
push
xchg
pop
mov
adc
xor
rcl
push
or
xor
arpl
aas
(bad)
xchg
pop
jmp
xchg
pop
repz
loope
in
push
pusha
cmps
adc
ret
es
repz
add
neg
jo
mov
dec
jecxz
jo
iret
imul
test
iret
and
mov
add
sar
adc
call
icebp
arpl
mov
dec
nop
jo
icebp
test
ja
sbb
inc
sar
stos
mov
pop
push
adc
mov
jbe
mov
push
sbb
push
xchg
pop
xor
std
sar
cmp
push
iret
mov
jo
jle
(bad)
loop
imul
ds
sbb
push
and
adc
lock
dec
mov
dec
repnz
mul
(bad)
mov
out
mov
outs
xchg
cmovnp
cmp
cwde
xchg
xchg
xor
pop
sbb
iret
sub
pop
cmp
shr
mov
pop
add
pop
push
push
jl
inc
pop
ds
pop
adc
inc
imul
fnstsw
ss
xor
mov
pop
sub
stos
cmps
fpatan
jmp
push
and
lds
lock
adc
(bad)
fs
push
hlt
cmps
stos
xchg
jns
pop
out
or
(bad)
aas
xchg
mov
add
push
push
js
dec
je
stos
dec
lods
sub
add
sahf
mov
xchg
sub
dec
dec
push
add
jg
int3
push
fdiv
inc
fdivr
fmul
sar
loope
shr
aas
scas
cs
xor
mov
push
sbb
fwait
popf
xchg
pop
repnz
or
push
inc
mov
xchg
and
popf
mov
inc
sub
push
(bad)
imul
dec
jp
lods
sub
(bad)
addr16
scas
data16
xchg
call
or
scas
pop
daa
mov
mov
iret
mov
lods
pop
loop
dec
xchg
repz
stc
add
ja
pop
push
clc
pop
rcr
mov
or
lds
push
(bad)
out
mov
sti
call
push
out
pop
sbb
and
or
nop
inc
xchg
(bad)
fcmovnb
es
mov
std
std
jmp
pop
dec
xchg
rol
push
movs
or
or
stc
sub
inc
sub
out
and
mov
and
push
ja
xchg
inc
mov
div
jg
pop
and
mov
rcl
or
mov
and
or
jnp
int
dec
mov
xchg
mov
adc
sbb
push
dec
mov
sub
lds
icebp
sti
imul
std
mov
pop
push
inc
out
aam
in
fdiv
pop
mov
pop
or
jb
jg
inc
test
mov
test
add
dec
xor
(bad)
clc
aas
push
imul
add
(bad)
lock
and
gs
push
cli
pop
inc
push
in
scas
cmp
add
ins
push
mov
xchg
dec
mov
dec
xor
es
mov
sahf
xchg
(bad)
push
int3
add
push
mov
(bad)
cmps
mov
pop
sahf
call
sti
js
ror
sti
(bad)
mov
outs
mov
xchg
fcomi
add
xchg
mov
call
xor
xor
adc
jnp
or
mov
pop
movs
mov
push
dec
adc
xchg
jg
lods
add
out
ret
sti
out
cdq
cmp
pop
fld
fnstsw
arpl
add
jmp
imul
call
arpl
stos
jp
je
std
jo
jb
xchg
sar
pop
jns
and
mov
push
xchg
jno
into
mov
cli
jnp
sbb
pop
out
ja
ins
push
mov
mov
lds
sbb
adc
leave
dec
or
mov
add
cld
mov
jno
pop
jne
pop
in
or
and
cmp
fs
pop
test
adc
cmps
pop
je
stos
std
xchg
daa
mov
test
cmp
mov
fwait
sahf
sbb
movs
mov
xchg
cmp
mov
add
pop
push
movs
and
push
sahf
les
push
(bad)
fcmovne
xchg
pop
into
cs
pop
xchg
push
ins
mov
push
xor
push
jmp
sbb
jns
cld
push
mov
das
lods
add
outs
mov
ror
jge
and
rcl
mov
push
xadd
lock
in
idiv
xor
push
lods
adc
in
shl
inc
xor
pop
pop
cmp
push
pop
sbb
sub
mov
or
nop
or
mov
push
into
idiv
sub
add
shl
ficom
aas
adc
je
adc
inc
inc
inc
push
mov
inc
fld
sub
push
lahf
test
adc
mov
push
(bad)
repnz
pop
mov
jge
jb
out
leave
jno
retf
jl
enter
ins
jle
rcl
sbb
sub
test
test
xchg
fmulp
mov
jbe
mov
inc
push
scas
int
cmps
mov
push
adc
clc
push
jbe
or
sub
mov
sub
xor
adc
mov
inc
pop
cmps
out
or
xchg
mov
push
xchg
stos
mov
sub
jae
js
mov
out
mov
out
push
(bad)
jns
or
jnp
int3
daa
or
adc
xor
leave
mov
and
in
xor
xor
and
sbb
and
dec
sbb
in
repnz
jb
xor
dec
mov
ret
jmp
test
sti
std
shl
xchg
xchg
ja
ret
dec
xchg
dec
fmul
jb
scas
jmp
movs
mov
sahf
jp
xchg
adc
and
(bad)
jle
jl
push
push
or
cmp
pusha
or
mov
pop
adc
aas
jnp
je
sub
sub
mov
nop
es
div
push
mov
sub
jmp
fidiv
test
loop
inc
dec
std
test
mov
fistp
call
push
je
mov
mov
imul
repz
or
add
push
add
out
dec
adc
push
movs
xchg
sub
inc
inc
add
adc
push
jbe
outs
mov
pop
jecxz
xor
jne
inc
or
or
mov
sbb
inc
mov
xor
xchg
add
add
stc
fidiv
mov
cmp
mov
push
aas
cmps
mov
adc
pop
jbe
cwde
jl
inc
aam
mov
ja
outs
pop
nop
jmp
add
out
mov
mov
sti
(bad)
std
pop
loop
leave
mov
mov
dec
pop
and
pop
mov
enter
inc
daa
inc
ret
pop
and
xchg
push
xchg
retf
into
push
pop
xor
mov
sbb
ja
enter
dec
sbb
adc
sub
mov
xor
stos
cmps
pop
inc
mov
adc
int3
push
icebp
lods
cmp
ret
mov
jne
mov
test
xchg
mov
aam
(bad)
sar
mov
adc
aad
jecxz
xchg
sti
shr
movups
and
sub
cmps
pop
out
cmp
clc
pop
dec
mov
xchg
xchg
mov
xchg
inc
retf
icebp
bound
xchg
imul
(bad)
clc
pop
xor
ins
dec
push
jnp
test
and
add
mov
test
add
dec
cmps
je
mov
fs
xchg
jmp
jg
pop
shl
fmul
pop
ret
out
inc
sub
popf
aad
cmp
jge
hlt
fisttp
jl
inc
jbe
pop
mov
sub
popa
xor
popf
stos
movs
int
jb
pxor
dec
inc
out
sti
adc
retf
data16
mov
pop
mov
ins
mov
adc
xchg
es
repnz
in
cld
arpl
(bad)
lahf
mov
dec
sub
push
icebp
(bad)
enter
(bad)
test
pop
adc
out
mov
fisttp
test
push
or
mov
mov
jno
mov
xor
rcr
call
scas
lea
dec
push
sub
pusha
mov
inc
adc
enter
push
scas
mov
or
stos
mov
cmp
sbb
gs
mov
and
imul
dec
pop
mov
(bad)
dec
stos
xchg
jge
je
iret
inc
add
out
repz
cmc
dec
aam
hlt
jl
adc
(bad)
mov
push
xor
sub
icebp
pop
inc
push
push
adc
cld
xchg
push
inc
adc
ret
ret
mov
pop
mov
call
add
ror
mov
ret
add
in
sti
cmp
jg
pop
sbb
sub
std
pop
addr16
pop
add
mov
rcl
inc
add
push
mov
test
stos
dec
mov
xchg
dec
call
push
ret
not
(bad)
rol
pop
mov
adc
or
ret
push
jg
test
mov
dec
out
(bad)
call
rcr
push
loop
sbb
leave
pop
movs
dec
ficom
push
push
mov
lods
dec
xlat
std
pop
nop
lea
jbe
outs
fst
sub
iret
sahf
aaa
fcmovb
and
jmp
or
cs
push
stos
add
sbb
fsub
dec
retf
jno
or
mov
add
xchg
cmc
push
inc
xchg
xor
xchg
inc
push
fsubr
push
ffree
test
jnp
stc
retf
fistp
dec
add
icebp
test
sbb
mov
stos
das
pop
push
sub
es
(bad)
push
sbb
bswap
lahf
sub
inc
or
pop
mov
ins
xchg
mov
mov
jnp
arpl
cmp
jns
dec
add
push
xchg
push
sub
ds
lea
(bad)
pusha
cli
sub
xchg
aas
nop
test
test
or
mov
pop
push
push
push
jnp
jae
xchg
add
inc
and
test
repnz
jle
xchg
mov
repz
outs
push
cmp
mul
in
push
jne
inc
push
dec
jnp
call
imul
xor
sahf
(bad)
jmp
movs
leave
xchg
xor
or
stos
cmp
dec
add
int3
out
cwde
mov
imul
into
push
jns
fdivr
fild
dec
pop
js
jle
add
movs
bound
data16
jo
and
mov
push
push
fstp
add
ret
jbe
call
or
dec
es
imul
push
ret
int
retf
int
jmp
jae
mov
outs
mov
and
inc
mov
xchg
ret
mov
mov
cmc
pop
out
lahf
sahf
mov
fisubr
xchg
or
sub
jl
xchg
cmp
or
sub
push
pop
scas
jl
rep
jp
xor
or
dec
stos
out
inc
jg
fcmovnb
icebp
retf
sub
ret
pop
mov
lods
pop
sub
push
jbe
mov
pop
inc
jae
aam
sub
sbb
mov
(bad)
jnp
iret
xor
sub
xchg
cmp
rol
adc
push
jo
dec
mov
(bad)
into
add
pop
mov
sti
stos
fist
pop
cmp
(bad)
xlat
jmp
ins
fdivr
inc
outs
push
mov
pop
inc
js
inc
jb
jp
push
push
jmp
call
rol
add
inc
popa
mov
sti
je
jmp
in
ficom
dec
dec
cs
dec
arpl
jge
lods
pushf
in
mov
outs
div
lahf
sbb
shl
and
push
jne
(bad)
loopne
jge
add
push
lahf
dec
rol
jbe
shl
pop
sub
ja
mov
xlat
adc
and
jae
repnz
fstp
je
(bad)
jl
lods
sub
jmp
adc
pop
jmp
outs
jns
jge
pop
jecxz
cmps
and
ins
cmps
aaa
cld
dec
out
pop
xor
fld
mov
and
fist
sahf
mov
mov
into
xchg
sub
xlat
and
sbb
mov
shl
fimul
dec
mov
pushf
add
and
mov
jg
xchg
xchg
mov
push
cmp
push
inc
push
mov
push
lds
cmc
dec
xor
nop
mov
and
lods
ror
mov
out
iret
push
fisubr
daa
or
inc
rcr
or
pop
pcmpeqb
sub
mov
pop
in
add
sub
lds
hlt
out
int
and
and
mov
ret
sbb
stos
mov
arpl
repz
inc
adc
mov
pop
pop
mov
nop
clc
cmc
imul
sbb
jo
jmp
rcl
pop
clc
sub
into
and
mov
mov
jecxz
adc
pop
popf
shl
sub
and
aas
mov
mov
popa
ss
pop
add
inc
inc
cmp
rcl
mov
(bad)
cwde
jne
sbb
pop
into
sub
jae
inc
(bad)
arpl
jo
popa
pop
add
mov
sbb
jl
pushf
inc
ficomp
mov
push
jae
pop
sahf
rcl
cdq
dec
es
jg
ja
push
push
popf
stc
stos
mov
pusha
push
push
jle
add
mov
in
popf
and
mov
fdivrp
add
xchg
les
in
fmul
jge
dec
push
mov
daa
out
mov
jg
das
adc
pop
xchg
xchg
add
and
jns
push
repnz
add
nop
and
sub
jns
aas
push
gs
mov
jno
pop
add
push
std
push
adc
ror
daa
cmps
bswap
jecxz
adc
pop
lods
jle
push
jle
sbb
or
enter
(bad)
cmc
push
scas
cmp
cmp
push
mov
jns
pop
jle
es
dec
sbb
push
xlat
push
mov
outs
not
or
nop
js
loop
gs
sbb
xchg
push
push
push
jle
sbb
xchg
loopne
pop
sub
push
shl
ret
js
stos
das
dec
sub
ret
push
add
std
push
push
adc
pop
jno
mov
push
cmp
fwait
or
les
(bad)
neg
aad
loopne
mov
jle
jge
es
shl
jg
dec
push
sub
es
out
inc
push
icebp
push
add
aam
push
and
inc
push
cs
out
xor
and
push
ss
das
(bad)
sub
push
sbb
xor
mov
and
jno
dec
(bad)
shl
pop
scas
out
daa
add
pop
pusha
mov
lock
sub
or
js
lods
xor
bound
out
add
and
xlat
movs
jno
xchg
inc
dec
dec
add
xor
cmp
iret
dec
dec
gs
mov
ss
into
fstp
test
int3
cmp
outs
and
add
cmp
adc
jmp
pop
ret
mov
cmp
movs
xchg
(bad)
lods
mov
jmp
arpl
mov
mov
js
push
scas
push
and
push
push
xor
pop
push
sub
fst
in
cmp
xchg
pop
movs
push
test
pop
mov
jnp
mov
sbb
and
push
mov
dec
imul
out
push
(bad)
lods
jns
adc
push
add
std
int3
pop
pop
mov
(bad)
cmp
mov
xlat
push
jae
test
stc
pushf
mov
add
or
xlat
das
push
and
jg
pop
test
or
cmp
sbb
dec
cmp
pop
cld
loope
push
repnz
xor
sbb
fwait
lahf
popa
fs
inc
loopne
sbb
push
movs
enter
jp
or
mov
(bad)
call
mov
rcr
jns
stos
xchg
sbb
xchg
stos
arpl
icebp
test
inc
xlat
jo
imul
mov
arpl
or
hlt
inc
push
push
fst
shl
and
mov
sbb
mov
mov
movs
dec
add
stos
call
xor
les
jmp
pop
jb
mov
xchg
inc
inc
mov
mov
xor
or
mov
push
movs
(bad)
popa
and
aas
lods
adc
jmp
mov
cld
push
xchg
mov
cmc
scas
(bad)
aas
mov
jb
sub
cwde
fsub
mov
xchg
mov
sti
lods
jbe
repnz
sahf
push
pop
iret
scas
push
je
mov
sbb
push
push
ins
stos
lock
sub
ret
mov
(bad)
outs
mov
rol
jae
xor
sbb
pop
call
mov
mov
dec
xor
inc
outs
pop
jle
cmp
add
jns
nop
pop
iret
mov
mov
mov
stos
jnp
add
sub
ret
jae
xchg
fwait
cmp
ins
xchg
mov
add
dec
mov
sar
addr16
movs
mov
movs
xor
movs
rcr
cmp
pop
movs
push
sub
icebp
cmc
and
es
scas
shl
div
sub
add
jb
out
rcl
xchg
ja
pop
in
push
mov
lods
mov
mov
(bad)
sub
xchg
push
mov
leave
pop
out
popa
xor
cwde
popa
std
dec
aas
sub
mov
jp
mov
imul
(bad)
pop
pushf
mov
imul
popf
mov
jbe
lods
aaa
je
mov
or
xor
lods
cmp
adc
add
aaa
les
scas
push
mov
int
pop
add
(bad)
repz
dec
push
cdq
jle
js
jns
mov
sub
outs
cwde
out
ja
(bad)
fild
xchg
xor
push
stos
ficomp
xlat
ja
ret
sbb
mov
cmp
sub
mov
inc
scas
cmp
jmp
aaa
jbe
ret
jae
cmp
push
shr
fs
cdq
inc
outs
cld
call
int
pop
xchg
xchg
jns
fwait
inc
and
adc
sbb
cmps
push
pop
inc
xchg
div
fimul
(bad)
cli
jne
sbb
dec
mov
cwde
dec
neg
stos
imul
leave
das
xor
cmp
dec
lock
in
sub
mov
dec
repz
mov
jns
bound
push
push
and
mov
les
dec
add
inc
lods
movs
(bad)
std
pop
test
mov
mov
retf
pusha
sub
mov
jno
xchg
es
aam
mov
pusha
cmps
xor
arpl
mov
mov
leave
loope
and
pop
test
mov
mov
push
les
xchg
pop
xchg
test
scas
and
jmp
sbb
inc
cmp
shr
jno
call
mov
dec
nop
scas
cmp
pop
es
and
sti
xchg
mov
std
sub
outs
ss
xor
mov
into
rol
aaa
(bad)
xchg
jmp
fidiv
rol
and
or
in
xchg
sbb
jmp
pop
jp
sbb
sub
xchg
shl
inc
push
dec
aaa
add
sub
stos
mov
stos
not
aas
ins
push
rcr
xchg
fwait
mov
hlt
lds
scas
push
jp
stos
xor
pop
(bad)
jl
rcr
outs
dec
mov
ret
sbb
aas
xlat
dec
jnp
pop
out
add
push
outs
jge
mov
scas
(bad)
push
push
mov
push
enter
bound
inc
paddw
std
sbb
sub
sbb
jbe
jmp
outs
mov
push
xor
adc
mov
or
mov
sbb
jnp
nop
pop
sub
stc
imul
mov
push
sbb
cmp
movs
dec
pop
jmp
pop
xor
ror
mov
jl
jns
iret
movs
xchg
jns
stos
cmp
cmps
(bad)
jb
dec
xor
pop
int
and
in
sti
leave
jmp
jg
repnz
mov
pushf
sti
call
mov
bound
jmp
cli
sub
dec
pop
pop
out
xor
aaa
popa
psraw
(bad)
imul
aad
or
mov
pushf
push
inc
test
sbb
imul
jmp
jl
add
and
daa
cmps
xor
push
push
cmp
pushf
push
adc
push
test
out
push
jp
movs
xchg
cmp
jns
mov
push
cwde
pop
scas
es
sub
mov
cwde
cmp
sub
sahf
into
dec
dec
imul
mov
jmp
popa
push
std
outs
mov
(bad)
xchg
adc
push
xor
inc
sub
pop
sbb
(bad)
mov
imul
shl
cli
(bad)
or
nop
mov
sbb
jecxz
je
lock
adc
pop
pop
fistp
xchg
rcl
xchg
gs
stos
test
je
sub
sahf
retf
mov
pop
xor
mov
in
icebp
dec
or
xchg
pop
xchg
hlt
sub
outs
dec
pop
gs
out
sahf
sbb
movs
mov
mov
fs
sbb
or
nop
mov
push
jae
pop
scas
leave
lods
and
mov
cmps
mov
push
sub
add
mov
adc
out
in
ins
cmp
repnz
stc
inc
jbe
mov
push
aas
lea
and
pop
pushf
or
push
addr16
into
mov
test
push
mov
push
je
and
lock
pop
sub
fwait
add
cs
retf
leave
jle
fabs
and
mov
das
pop
pop
push
mov
and
fwait
repnz
ret
push
push
test
inc
ins
pop
or
jmp
retf
cmp
out
test
xchg
dec
out
fimul
mov
jecxz
fcmovb
lods
add
mov
dec
and
aas
popf
hlt
pop
mov
arpl
mov
iret
bound
outs
int3
arpl
cwde
xchg
xchg
cmp
jns
push
push
nop
mov
xchg
ja
lods
clc
rol
out
retf
inc
xor
rol
ret
sahf
dec
int3
xchg
ja
pop
test
movs
repz
pusha
jae
scas
mov
outs
jp
inc
ss
mov
mov
or
add
add
push
dec
clc
cwde
pop
add
mov
popf
daa
inc
and
push
imul
aas
imul
mov
shufps
nop
dec
std
mov
aas
dec
mov
dec
(bad)
int3
xor
add
ret
mov
jb
dec
xchg
mov
imul
fidiv
cmp
pop
jb
mov
pop
add
adc
push
and
pop
or
adc
gs
cs
retf
or
loop
xchg
stos
xor
mov
cmc
cmp
popf
push
pop
mov
push
fcmovbe
cli
jge
in
lock
or
stos
gs
sahf
xchg
push
test
outs
adc
int3
mov
cmp
or
mov
or
ja
pop
int3
pusha
fsub
push
push
(bad)
repnz
das
push
xchg
xlat
fwait
dec
rol
scas
push
pop
push
mov
push
mov
iret
movs
loope
movs
add
outs
add
test
jno
xor
pop
cmp
mov
lea
lea
adc
add
out
mov
pop
adc
mov
inc
inc
xor
cmc
nop
aas
mov
(bad)
aaa
ins
add
jp
aad
mov
xor
sub
and
ficomp
icebp
inc
xchg
xor
test
idiv
mov
cwde
cmp
dec
and
jl
sbb
xchg
outs
aad
xchg
push
in
jmp
push
mov
pop
jp
lods
stos
das
adc
in
sahf
dec
and
dec
mov
ins
movs
inc
retf
ret
retf
push
inc
pop
xor
add
sbb
dec
inc
lea
ss
dec
ret
xor
aas
sub
dec
add
bnd
mov
aam
in
fwait
sar
mov
mov
inc
call
ror
add
cmp
xor
and
mov
add
xor
out
sar
in
clc
add
jnp
(bad)
std
and
jge
pop
sbb
and
fs
out
fcomp
add
rcl
fcomp
sub
dec
out
and
and
es
fs
pop
mov
mov
or
push
rcr
call
sahf
inc
jecxz
and
push
jae
div
pop
sub
cmps
call
xor
push
and
mov
add
jl
or
bound
cmp
jb
imul
lahf
stos
sbb
ins
retf
push
pop
movs
xor
in
(bad)
mov
cmp
adc
jae
out
in
or
push
nop
ret
cmp
mov
mov
(bad)
mov
mov
push
mov
or
mov
cmps
ss
mov
nop
inc
mov
popa
mov
push
add
(bad)
xor
inc
jp
and
push
xchg
bound
add
and
mov
test
mov
mov
or
(bad)
fnstsw
and
mov
test
xchg
fidivr
daa
stc
pushf
outs
cli
int
test
sub
repz
movs
inc
sub
mov
mov
lock
jge
push
sub
leave
in
xor
jo
pop
test
or
test
mov
test
dec
xor
std
(bad)
adc
and
cmp
aam
leave
and
dec
dec
pop
arpl
xchg
(bad)
lock
cwde
sub
lahf
es
inc
shl
jg
lods
mov
sub
and
dec
idiv
ins
cwde
push
mov
(bad)
aad
retf
rcl
push
jle
pop
push
xchg
movs
(bad)
cli
adc
lock
sub
sub
sbb
add
xor
nop
pop
mov
nop
or
sub
and
and
add
cdq
sbb
mov
sub
lds
lds
lock
xor
cwde
jb
mov
leave
rcl
push
push
rol
dec
ror
pop
stos
adc
scas
jbe
fadd
out
lock
mov
sbb
fs
not
lods
lds
repz
aam
push
test
inc
dec
jae
jecxz
add
sbb
popa
pop
push
fadd
fwait
add
or
mov
push
mov
cwde
cmps
sbb
xchg
test
cmp
inc
ja
and
cmp
shr
xchg
addr16
sbb
scas
arpl
icebp
sbb
adc
mov
fcmovnb
stos
add
out
mov
mov
repz
jmp
mov
pop
mov
pusha
xor
ret
es
repz
ror
pop
add
addr16
loope
or
nop
adc
movs
stos
xlat
add
add
sub
lock
and
adc
inc
call
pop
lock
fwait
es
mov
mov
clc
lods
jb
or
xchg
dec
push
loopne
scas
jae
inc
hlt
add
jmp
test
test
stos
jecxz
mov
mov
xor
rcr
icebp
ss
cmp
into
or
inc
dec
add
inc
push
mov
adc
repz
outs
daa
push
jl
or
cmp
dec
cmp
add
or
ss
cmp
push
sub
mov
test
xchg
ror
mov
pop
mov
les
mov
call
xor
inc
pop
or
loope
ret
mul
sar
mov
inc
stos
jecxz
add
mov
outs
push
jmp
mov
add
cmps
mov
test
jne
pop
in
mov
xchg
pop
or
or
mov
dec
pop
add
and
(bad)
outs
out
shr
sbb
aad
xor
xchg
cmps
out
in
mov
mov
sbb
jbe
adc
pop
sub
inc
cli
ins
sbb
mov
or
sbb
jmp
add
out
xor
(bad)
cmp
movs
pushf
test
mov
pop
push
mov
add
cmp
sub
pop
add
or
mov
stc
test
shr
adc
mov
call
mov
(bad)
pop
jns
jb
jns
jo
popaw
cmp
jge
cmps
outs
mov
xchg
repz
or
pop
dec
mov
scas
pop
test
mov
mov
pop
(bad)
fcom
cwde
cmp
mov
shl
push
dec
out
jecxz
xchg
fst
mov
inc
mov
push
repnz
sbb
cdq
call
push
call
mov
clc
cmp
cmc
xlat
mov
and
sub
pop
outs
rcr
mov
iret
pop
jns
cmp
int3
mov
inc
mov
push
dec
cli
pusha
adc
loopne
mov
and
xchg
cmp
aas
fisubr
ret
(bad)
and
or
or
ja
mov
imul
xchg
imul
inc
in
mov
cmp
invd
inc
out
add
mov
aaa
stos
mov
data16
(bad)
scas
jle
into
jae
jbe
adc
mov
stos
inc
jo
mov
ja
dec
pushf
sub
jp
xchg
and
sbb
adc
push
es
out
sbb
add
daa
lods
lds
rcr
push
popf
mov
test
int3
cmc
cmp
out
out
shr
fidiv
adc
jmp
fs
xor
ins
(bad)
xor
aam
mov
sar
aam
pop
inc
sub
push
retf
adc
fwait
adc
or
gs
aas
loop
ss
cmps
pop
es
sbb
push
mov
ss
(bad)
sti
stc
xchg
dec
xchg
js
push
push
dec
adc
cmc
mov
jmp
daa
pop
jb
inc
imul
scas
push
cmp
test
cld
int3
mov
mov
xor
sub
loop
mov
inc
pop
pushf
je
adc
push
(bad)
push
or
imul
mov
aad
add
mov
jmp
xor
cmps
sub
cld
hlt
sbb
mov
mov
iret
mov
mov
cmp
add
pop
and
lock
retf
imul
xchg
add
adc
inc
jo
fstp
mov
cwde
arpl
push
pop
outs
adc
das
fs
leave
cmp
out
pop
inc
or
xchg
inc
out
sub
bound
jge
mul
call
cmp
sbb
jmp
xchg
jo
call
or
add
sar
test
add
mov
enter
mov
jmp
sub
xchg
pop
push
push
jbe
pop
fsub
or
sbb
xor
pop
in
lahf
outs
push
lea
imul
ror
push
(bad)
mov
test
daa
mov
repnz
(bad)
call
hlt
mov
mov
pop
mov
test
xchg
or
popa
arpl
or
pushf
ret
inc
sbb
pop
push
mov
retf
call
or
or
xor
loop
imul
push
add
and
mov
mov
pop
add
lods
sub
cmps
xor
movs
pop
stos
mov
pushf
add
loope
out
cmp
and
mov
pop
sub
sbb
call
jmp
mov
pushf
ss
dec
mov
sub
fst
loopne
inc
dec
xchg
adc
xchg
and
adc
rol
or
iret
jl
scas
or
inc
inc
mov
and
add
popf
into
lds
fsub
retf
mov
or
push
push
mov
pop
and
and
aas
mov
pusha
nop
movs
(bad)
mov
sub
jl
ficom
cmp
enter
sub
movs
xchg
scas
cld
mov
out
ret
xchg
jno
loop
add
std
pushf
sbb
push
in
bound
movs
dec
push
mov
je
loope
sar
and
pop
xor
mov
sar
add
test
mov
retf
hlt
mov
icebp
jecxz
gs
ja
icebp
pop
jg
dec
mov
inc
pop
jmp
ret
inc
scas
inc
push
and
mov
ror
jo
out
retf
push
mov
daa
push
fmul
retf
imul
dec
inc
ror
imul
stc
repz
jae
scas
stos
and
movs
pop
mov
jno
adc
mov
test
pop
pop
add
ret
in
cmp
xchg
sub
retf
movs
clc
sbb
dec
mov
mov
jbe
cmp
or
jl
cdq
xchg
add
enter
add
popf
popa
aam
mov
xor
push
xor
cwde
scas
mul
pop
push
(bad)
push
xchg
stos
or
mov
sbb
push
into
jne
jp
sub
mov
pop
out
sub
mov
and
call
pop
mov
dec
push
outs
cmps
call
xchg
mov
mov
cmp
mov
push
jl
pop
cdq
(bad)
cmps
jb
add
mov
out
or
shl
in
dec
xchg
retf
cli
ds
adc
outs
xchg
add
out
aaa
or
xchg
adc
cs
mov
imul
push
or
data16
dec
rcr
cmp
push
cmc
sbb
in
mov
imul
jp
aaa
retf
movs
outs
or
jle
gs
ja
cmp
ror
and
pushf
mov
mov
inc
mov
xchg
xchg
mov
jecxz
cmove
nop
ret
cmp
out
repz
xchg
sub
cmp
jmp
pop
xor
bound
add
pusha
or
sub
cmovle
pushf
add
loope
test
aam
xchg
sub
(bad)
xor
dec
repz
in
push
inc
push
pop
sti
mov
gs
ins
xlat
push
adc
aam
jb
repz
fmulp
mov
sub
mov
outs
pushw
repnz
sbb
ss
nop
xor
imul
and
pop
mov
and
xchg
cli
out
cmp
repz
or
leave
sub
ret
sub
(bad)
int
nop
adc
sti
mov
mov
dec
sub
xchg
paddb
(bad)
std
js
loopne
fmul
push
mov
push
lea
mov
push
stos
sbb
or
adc
or
mov
in
(bad)
ds
das
shl
shl
adc
push
(bad)
stc
dec
sub
push
or
dec
cli
sbb
sbb
test
dec
leave
cmc
xlat
aam
enter
inc
push
(bad)
adc
push
arpl
xor
ss
imul
pop
out
sub
dec
mov
or
imul
pushf
mov
aas
nop
cmp
pop
mov
adc
mov
mov
stos
test
fdivr
mov
pushf
jecxz
outs
xchg
enter
in
xor
mov
push
std
test
mov
push
test
bound
adc
xchg
and
into
outs
cmp
xchg
fisub
push
out
push
pop
jmp
add
mov
add
scas
mov
mov
scas
arpl
int
and
imul
jle
add
jae
shl
xor
cli
adc
sbb
xor
imul
mov
imul
loopne
push
xchg
shl
pop
imul
sbb
ins
pop
dec
mov
imul
sets
cmc
in
fdiv
in
bound
popa
lds
ins
pop
aad
push
jg
pop
outs
scas
into
sub
or
and
icebp
je
cmp
stos
or
test
cmp
rcl
outs
hlt
jg
repz
lods
das
ja
in
dec
cmp
test
mov
mov
jnp
pusha
push
xchg
lock
push
sbb
pop
icebp
fwait
xchg
ins
stos
addr16
dec
push
and
xor
inc
pop
paddq
adc
and
mov
xchg
pop
xor
les
aas
xchg
cdq
cmps
pop
mov
pop
cmp
test
sub
mov
gs
push
sbb
fldcw
loope
mov
jae
sub
stos
sub
lods
sbb
call
aam
jno
jmp
mov
cmp
xor
push
xor
push
push
data16
loopne
add
(bad)
push
push
nop
sbb
(bad)
imul
rcr
adc
jae
adc
rcl
pop
adc
das
mov
or
dec
into
jle
push
push
ror
and
sub
bound
or
jle
cmc
mov
mov
test
loope
xlat
retf
adc
pop
(bad)
fadd
jb
xor
xor
enter
dec
pop
sar
out
xchg
jl
arpl
dec
stos
sub
and
sar
mov
or
call
std
js
jmp
pusha
dec
clc
in
xor
and
fs
das
push
nop
imul
sbb
dec
scas
fdiv
ja
and
push
test
xchg
iret
pusha
adc
dec
jmp
jge
push
jmp
and
fwait
cli
sbb
jae
into
ret
jo
pop
pop
aas
cmp
pop
rcr
add
xchg
inc
sbb
xchg
jle
xchg
xchg
adc
mov
mov
xchg
cmp
add
xchg
out
mov
inc
cli
ret
add
jge
nop
not
pop
int3
(bad)
mov
and
adc
xor
xor
(bad)
and
mov
push
inc
push
cwde
mov
mov
aam
movs
dec
pusha
out
xchg
push
fwait
sub
mov
sub
cwde
or
and
sbb
add
in
dec
imul
xor
xchg
dec
xchg
retf
dec
in
pop
bound
out
xor
inc
sub
push
mov
(bad)
add
sar
xor
fcom
xor
inc
das
fs
or
mov
jge
hlt
dec
loopne
das
retf
(bad)
xchg
jge
les
mov
fwait
in
data16
pop
dec
xchg
out
mov
add
or
mov
xor
jns
mov
inc
push
push
push
cld
mov
mov
call
xor
imul
jecxz
xchg
aas
loop
test
xchg
jmp
xor
test
add
inc
pop
inc
sub
mov
popf
shr
adc
lods
daa
shr
and
and
xchg
(bad)
(bad)
or
adc
nop
sbb
rcl
sbb
xor
push
cmp
in
std
sti
xor
mov
arpl
scas
arpl
mov
add
neg
xor
push
push
dec
ins
(bad)
push
lock
adc
push
sub
out
and
test
fld
out
test
addr16
sbb
mov
sti
in
xlat
out
cli
xor
xor
sbb
sub
adc
or
xor
das
or
jnp
mov
dec
dec
dec
idiv
mov
push
and
test
mov
push
fisubr
mov
push
dec
sahf
pop
mov
jp
mov
jl
ret
cmp
pusha
cmps
jo
outs
ins
out
or
icebp
jl
lods
mov
ins
cld
outs
jmp
or
call
add
jg
aad
xrelease
inc
mov
and
std
arpl
test
push
or
aaa
fist
push
scas
fimul
stos
dec
iret
xlat
out
jne
repnz
js
shl
push
outs
xchg
outs
and
pop
leave
(bad)
mov
neg
fimul
jo
mov
mov
stos
adc
and
sub
outs
jl
and
or
(bad)
xchg
dec
(bad)
(bad)
shl
pushf
rcl
ret
inc
clc
or
das
stos
push
inc
pushf
icebp
inc
out
inc
dec
mov
sub
or
xor
jge
jp
outs
jnp
popf
or
stos
jecxz
xor
aaa
lea
stos
mov
add
aas
aam
fisttp
inc
inc
les
outs
sub
inc
inc
mov
pop
stos
push
(bad)
pop
call
outs
cmp
fnstcw
adc
mov
lock
or
es
aaa
sub
ret
hlt
or
pop
out
xchg
push
dec
adc
push
aaa
(bad)
repz
movs
lahf
fld
mov
push
sub
and
jl
pop
imul
cmp
and
outs
xchg
jae
mov
iret
aam
stos
int3
push
out
in
inc
dec
cmp
xchg
out
add
das
fcomp
sub
test
mov
pop
xchg
push
dec
icebp
xchg
mov
pop
sbb
or
mov
xchg
xchg
pusha
and
or
push
test
push
jecxz
or
jle
xchg
daa
in
mov
inc
sbb
dec
or
les
iret
stc
mov
jecxz
std
cmps
xchg
icebp
mov
pop
(bad)
(bad)
jg
(bad)
mov
dec
cmp
push
mov
dec
pop
mov
xlat
dec
(bad)
jmp
popa
add
pop
push
mov
jnp
jp
mov
and
inc
adc
lods
inc
jno
js
pushf
mov
shl
mov
retf
imul
and
stos
fsubr
sbb
fistp
int3
cmp
gs
das
adc
adc
xchg
jnp
mov
xor
cmps
mov
rol
shl
push
or
shr
add
dec
lds
sbb
aaa
popf
jl
mov
mov
aad
cs
test
mov
jg
xchg
and
mov
pop
add
mov
enter
xor
jmp
push
pop
sub
hlt
lahf
add
adc
and
dec
cmp
sub
(bad)
mov
lods
jmp
movs
sbb
int
retf
clc
jmp
and
xor
jns
inc
scas
stc
scas
dec
sub
std
bound
cwde
dec
imul
xchg
sar
pop
add
arpl
mov
cmps
mov
cmp
test
jmp
push
jge
add
cld
fistp
mov
lds
mov
stos
in
stc
xchg
mov
dec
das
dec
mov
(bad)
movs
cs
mov
(bad)
sub
mov
lock
jp
ret
pop
cmps
outs
adc
xor
addr16
bound
aas
push
cmp
imul
fsub
pop
fs
daa
mov
sar
rol
sub
pop
jg
test
xor
(bad)
pop
pop
out
cld
jb
xchg
or
retf
inc
xor
jle
neg
push
aas
scas
adc
push
mov
push
mov
scas
movs
xchg
sbb
lahf
iret
sub
pop
jle
dec
stc
ror
and
test
push
sahf
clc
cmp
loopne
sbb
mov
(bad)
pop
imul
mov
(bad)
jl
cmps
mov
shr
leave
push
sub
mov
jnp
xchg
push
hlt
mov
sub
or
xlat
retf
adc
inc
cmp
inc
inc
div
adc
xor
pop
lea
(bad)
enter
js
inc
xor
inc
adc
push
jnp
jge
add
mov
lds
pop
sub
sub
mov
fdivr
test
data16
inc
(bad)
ins
int
sbb
cmp
addr16
mov
push
(bad)
push
or
call
xchg
in
stc
and
retf
pop
push
ficomp
dec
pop
ficomp
aas
mov
not
pop
push
pop
cmp
xchg
cmp
out
pop
test
dec
(bad)
mov
or
adc
mov
mov
add
push
pop
popf
xchg
in
and
gs
jno
jno
and
aaa
xchg
or
cmp
jmp
fadd
fisttp
stos
push
test
(bad)
mov
les
repz
push
mov
aam
inc
call
pop
push
push
lods
scas
inc
fldenv
in
les
push
mov
push
sbb
and
mov
(bad)
lahf
mov
fidivr
xor
arpl
sbb
mov
xchg
or
mov
pop
cmp
test
inc
inc
cld
xor
movs
in
mov
inc
xchg
es
test
scas
addr16
nop
nop
ret
addr16
jmp
or
add
pop
sbb
loop
push
add
and
lods
mov
sub
pop
sbb
xchg
in
jle
xchg
movs
out
bound
test
inc
sar
out
add
fld
pop
cwde
in
stc
inc
mov
imul
push
push
and
or
cmps
fucom
jmp
pop
ror
cmps
xchg
push
jmp
enter
pop
sbb
sub
jl
mov
add
mov
stos
movs
xor
or
jnp
jmp
ds
mov
(bad)
sbb
fild
mov
xchg
jg
pop
inc
push
cwde
ret
dec
scas
sub
popf
jecxz
or
jb
into
push
mov
mov
or
add
ins
xchg
mul
int
sbb
call
movs
aam
imul
cmp
call
push
or
or
inc
out
pop
aaa
sbb
call
fadd
xlat
push
xor
pop
pop
jl
test
fiadd
loopne
dec
stc
xchg
xchg
fdiv
xor
scas
aaa
out
jecxz
shl
and
inc
hlt
mov
push
mov
lods
xchg
adc
movs
sub
int3
mov
push
outs
test
xlat
test
mov
(bad)
(bad)
sbb
rcr
cmp
xlat
in
popa
add
mov
mov
dec
adc
in
or
push
jge
rcr
sbb
jb
mov
adc
push
pop
sti
mov
cmc
dec
arpl
lahf
push
xchg
push
xchg
cmp
bound
xor
jp
xchg
mov
or
das
std
adc
daa
scas
jp
aas
dec
mov
jnp
es
aad
out
and
sahf
pop
jo
jecxz
add
xchg
xchg
add
not
jmp
and
sub
icebp
mov
hlt
cld
scas
inc
cmp
jne
icebp
stos
rcl
mov
lods
xor
pop
add
outs
mov
jmp
rcl
mov
addr16
out
xchg
mov
mov
cli
add
pop
addr16
pop
out
xor
sbb
stos
fdivrp
mov
cmp
xor
inc
rcr
adc
jp
mov
sub
jne
mov
(bad)
push
lods
(bad)
test
ret
sub
(bad)
clc
pop
iret
sub
ror
pop
imul
pop
les
xchg
out
inc
xchg
ficom
(bad)
mov
and
inc
fst
pop
xchg
shl
js
retf
pop
fmul
jno
adc
stos
cmps
xor
(bad)
stos
jo
add
ror
jmp
dec
mov
pop
or
imul
or
add
gs
ds
xor
adc
sub
fld
(bad)
inc
xchg
scas
mov
cmp
cmp
mul
pop
repnz
or
mov
mov
out
mov
retf
add
jge
jne
les
jl
cmc
pop
sub
pop
(bad)
xor
retf
mov
repnz
jge
repnz
jmp
rcl
pop
push
sub
cld
mov
mov
retf
and
retf
adc
fs
push
add
or
xchg
sbb
xor
add
int3
stc
mov
and
xor
into
scas
jno
popa
ins
fisttp
push
pop
in
pop
fcomp
lods
outs
mov
ffreep
push
xor
adc
jo
pushf
imul
mov
add
repnz
jae
pop
xlat
js
pop
pop
movs
mov
jbe
in
aad
mov
scas
in
test
test
fidiv
inc
enter
pop
movs
stos
pop
mov
lea
jmp
lock
addr16
fdiv
call
mov
pop
fstp
ret
shl
movs
inc
fs
add
pop
shl
aas
scas
sbb
ds
sbb
cmp
idiv
mov
sahf
jnp
stos
cmps
in
and
jb
push
cwde
jg
stos
xchg
hlt
pusha
clc
adc
jnp
mov
pop
in
in
ror
pop
(bad)
mov
mov
ret
push
lock
mov
popf
pop
add
scas
das
push
mov
push
mov
xor
inc
mov
mov
in
ins
les
sbb
icebp
or
das
pop
push
scas
push
pop
dec
push
es
xchg
dec
push
sti
push
add
jl
sbb
adc
add
pop
(bad)
movs
pusha
hlt
dec
mov
fadd
sub
xchg
pusha
adc
je
das
jbe
iret
pusha
or
push
add
and
xlat
popa
add
xlat
push
xchg
ins
mov
repz
pop
inc
nop
fs
cmc
sar
add
mov
add
arpl
mov
adc
mov
pop
xor
xchg
dec
add
shl
shl
jno
cli
lea
xchg
test
adc
jge
push
das
adc
push
mov
or
test
adc
je
push
fwait
popa
movs
ret
xchg
test
push
(bad)
jns
cld
mov
xchg
or
fbld
je
adc
jmp
neg
data16
dec
jns
inc
jnp
xchg
xlat
sbb
lock
mov
lods
rcl
nop
stos
scas
xchg
mov
cmp
ffree
xlat
mov
test
jne
sbb
aas
sbb
pop
adc
scas
push
repz
stc
pop
adc
add
mov
cmp
push
mov
and
jle
test
add
ins
leave
jno
(bad)
inc
and
mov
aad
retf
sbb
ror
jb
jo
cmps
test
mov
cmp
or
mov
xor
push
shl
jb
test
call
cmp
sub
pop
dec
sub
pop
movs
cdq
(bad)
xchg
out
shl
enter
push
and
adc
jb
arpl
shl
jne
push
(bad)
in
adc
(bad)
push
popa
sub
scas
jecxz
scas
fmul
movs
jg
rcl
and
cs
jmp
lods
mov
ret
aas
ja
mov
mov
sahf
jns
xchg
mov
mov
int
fwait
mov
add
push
test
mov
jp
test
es
dec
dec
std
push
add
inc
aaa
cmp
cmp
jno
cmp
mov
loope
ret
cld
cdq
mov
dec
lods
jg
neg
xchg
out
mov
add
mov
test
mov
jecxz
scas
mov
loope
xchg
int
jo
in
sbb
cmp
test
mov
ret
mov
mov
dec
jo
push
mov
jg
test
xchg
sub
(bad)
jb
or
stos
lods
add
or
pop
jg
(bad)
push
dec
imul
addr16
or
inc
add
mov
out
sbb
aad
add
xor
push
in
and
addr16
pop
pop
pop
das
test
adc
out
push
daa
shl
(bad)
in
scas
inc
stos
outs
stos
aad
mov
push
xor
pop
addr16
loop
jecxz
push
pop
xchg
add
push
xor
fcomp
sahf
push
lds
(bad)
call
inc
aam
push
xchg
test
outs
enter
idiv
mov
bound
shl
xor
and
fstp
stos
xchg
cmps
and
fs
push
outs
aam
and
add
dec
xchg
js
add
or
sub
stos
cli
out
sti
jnp
or
das
jecxz
(bad)
fidiv
movs
jno
sbb
lds
adc
pop
pop
rol
pushf
div
js
sub
and
test
cmp
add
jnp
es
es
push
sbb
(bad)
rcr
mov
and
inc
movs
pop
mov
das
xchg
(bad)
jmp
test
and
lods
add
inc
enter
dec
jecxz
add
cld
test
inc
es
pop
pop
push
fdivrp
movs
jmp
xor
es
mov
std
dec
mov
add
cs
enter
or
rcr
into
sub
add
mul
fisub
out
mov
bswap
cwde
test
es
mov
imul
aam
mov
jnp
cmps
inc
push
je
inc
into
arpl
push
dec
xor
xor
cld
jmp
dec
mov
into
imul
out
test
xchg
stos
retf
repnz
mov
aas
push
out
repnz
jb
arpl
and
sub
(bad)
dec
xor
xchg
mov
push
mov
fidiv
ss
mov
or
loopne
mov
fdivr
aad
(bad)
push
call
mov
shr
hlt
dec
stos
es
jle
popf
jmp
iret
popa
hlt
test
sub
pop
mov
adc
jns
out
popf
inc
stc
sbb
lock
mov
push
and
push
movsx
outs
sti
movs
inc
mov
or
xchg
cwde
out
or
fsubr
idiv
int
mov
dec
mov
(bad)
cmc
mov
adc
push
popf
push
jecxz
stos
xchg
out
adc
push
rol
jb
cmps
enter
inc
inc
enter
test
repz
shr
xchg
or
and
push
into
xchg
xor
add
lods
rcl
test
add
nop
xchg
into
ds
scas
pop
movs
jp
icebp
fwait
and
push
loop
cmp
ins
imul
lds
sub
aaa
xchg
data16
std
lods
ins
mov
mov
int
sbb
rcl
lock
shl
sti
inc
ss
mov
adc
jne
jecxz
inc
inc
xlat
adc
mov
pushf
lods
mov
je
xchg
inc
lds
sbb
(bad)
push
push
dec
mov
(bad)
mov
and
xor
lea
mov
fistp
les
mov
sub
call
test
xchg
int3
shl
sti
inc
cmp
lock
(bad)
push
ins
sub
retf
and
mov
int
jp
call
mov
cmc
scas
out
pop
out
jo
xchg
movs
in
mov
lods
lock
call
arpl
push
mov
sub
jo
xchg
add
xlat
cld
ret
popf
(bad)
and
mov
clc
loope
outs
mov
xchg
xchg
sub
ret
loopne
adc
std
js
hlt
adc
mov
xchg
push
scas
jns
call
or
push
mov
jle
push
imul
addr16
and
inc
(bad)
push
rol
lds
jbe
jl
out
shl
scas
jo
mov
enter
ret
ret
add
mov
mov
push
mov
or
fwait
imul
ret
mov
push
fdiv
stos
scas
jmp
mov
fist
jno
cli
pop
adc
ss
or
jne
mov
jo
cli
arpl
test
bound
pushf
retf
setbe
or
es
pop
push
add
retf
xchg
inc
jmp
adc
sub
push
xchg
jo
cdq
adc
cs
jge
popf
cs
and
add
leave
bound
xor
jb
in
xor
pop
test
jge
push
xlat
icebp
(bad)
pop
dec
enter
loop
mov
test
and
scas
stos
push
cmc
push
add
fild
repnz
mov
call
(bad)
adc
dec
outs
mov
scas
push
adc
nop
and
xchg
sub
xor
mov
sti
or
test
adc
imul
hlt
jmp
test
sub
outs
mov
push
add
lahf
pop
rcr
aas
gs
pushf
icebp
jb
inc
sub
adc
lods
mov
mov
test
in
add
aas
inc
adc
iret
or
add
ins
mov
or
cmp
pusha
ror
sub
or
dec
enter
sbb
aas
pop
and
inc
jle
xchg
outs
or
jge
lds
nop
(bad)
push
jne
scas
shl
outs
dec
push
jp
imul
scas
shr
mov
ret
xor
mov
rcl
fadd
out
cs
dec
scas
lds
test
and
outs
and
imul
sub
xchg
pop
cmp
xchg
sti
mov
push
mov
sahf
mov
push
popa
outs
push
je
cmp
mov
mov
rcl
pop
xchg
lods
jbe
pop
popf
push
jge
pop
movs
push
scas
lahf
fnsave
mov
inc
xor
mov
and
(bad)
jl
rcl
push
mov
or
test
mov
sbb
jmp
push
cmp
test
push
ins
xchg
inc
lods
movs
add
ss
jecxz
or
je
sbb
mov
adc
or
dec
rol
scas
out
cmc
jo
xchg
aad
adc
sbb
push
shl
(bad)
cli
jb
sti
jg
dec
fcmovnbe
mov
push
leave
lock
xchg
call
inc
gs
push
aaa
jae
(bad)
jp
rol
mov
mov
and
aas
cmp
sbb
fsub
or
add
push
jae
mov
dec
int3
jecxz
call
sbb
and
rol
rcr
or
push
cmp
out
in
ins
cmp
jae
(bad)
icebp
loope
mov
ret
and
push
dec
ins
mov
jge
xor
lds
cmp
jle
jp
arpl
fsubr
ins
jmp
xor
xlat
cdq
movs
and
xor
mov
test
js
jmp
and
scas
je
sub
push
push
lahf
iret
ror
or
(bad)
stc
jno
and
fld
cmp
mov
pop
jp
ins
dec
pop
outs
xchg
ret
sbb
push
idiv
pop
fwait
ins
mov
dec
xchg
and
jbe
retf
fnsave
cmp
adc
push
rcr
jmp
lds
mov
out
lock
out
add
inc
cdq
(bad)
add
mov
ficomp
cmps
imul
xchg
xchg
inc
retf
jg
stc
sub
lock
sbb
xchg
ins
lods
cmps
jp
lods
inc
ss
inc
and
and
lods
jg
pop
pop
test
pushf
xlat
and
jmp
stos
inc
pop
dec
jge
push
mov
inc
repz
(bad)
mov
mov
jmp
shr
call
shl
bswap
shl
sub
sbb
pop
fcmovnbe
sub
rcr
fst
or
jbe
icebp
jnp
or
xchg
mov
enter
not
fnstenv
retf
and
cmps
outs
pop
mov
mov
xchg
cmps
xor
mov
pusha
pusha
xor
out
popf
xor
in
push
cmp
cmps
mov
jb
or
(bad)
cmp
sub
nop
out
out
scas
aad
clc
mov
push
test
sbb
add
fcmovbe
in
sahf
xchg
int3
xchg
inc
push
std
pop
add
les
pop
cmp
shr
cmp
stos
(bad)
stos
std
mov
cli
jmp
xchg
and
lods
sti
push
xchg
shl
fs
shl
and
adc
cmp
add
test
cmp
push
sub
ins
lods
fs
out
cmp
call
adc
clc
mov
shr
sahf
xchg
sub
test
rol
and
pusha
(bad)
mov
mov
xchg
cmp
mov
mov
mov
popf
add
in
scas
in
ds
adc
lea
xchg
mov
jbe
mov
sub
mov
movs
sti
fcmovnu
ror
xlat
mov
daa
popf
(bad)
mov
aaa
rcl
xchg
push
jmp
enter
int
push
and
sar
dec
in
inc
outs
add
pop
mov
and
cmp
xlat
xchg
and
inc
mov
enter
lahf
stos
sub
aam
icebp
dec
stos
inc
leave
into
push
aam
cmp
sub
add
push
nop
jge
shl
lds
ret
mov
int
in
adc
mov
jno
shl
mov
sub
xbegin
or
dec
pop
mov
cld
xlat
push
cmp
adc
fcmovu
mov
sbb
mov
bnd
div
lea
fld
(bad)
and
cdq
dec
mov
pop
test
imul
push
pop
pop
outs
mov
adc
mov
test
sub
lds
lds
mov
push
test
adc
mov
push
inc
fdiv
push
mov
aaa
jbe
or
out
leave
sub
arpl
push
xchg
js
adc
out
shl
and
in
pop
jb
add
movs
std
imul
mov
mov
iret
mov
mov
mov
jns
mov
cmp
daa
leave
add
ret
scas
addr16
ds
aad
div
es
daa
mov
mov
(bad)
adc
push
scas
cld
mul
pop
inc
dec
pop
mov
and
imul
mov
and
add
daa
jmp
je
aad
lahf
fisttp
fcmovnb
push
outs
idiv
(bad)
into
push
jno
cmp
push
xchg
clc
or
test
add
imul
pop
icebp
mov
loope
mov
mov
out
aad
fwait
dec
lds
mov
and
push
rol
fwait
mov
shl
out
push
jp
cmps
pop
not
pop
out
popf
pusha
and
add
mov
outs
inc
imul
sbb
mov
lahf
cmp
xchg
je
mov
and
outs
jg
mov
lods
mov
lods
in
cmp
(bad)
outs
scas
sub
mov
(bad)
jmp
scas
pop
fcmovu
jno
retf
pop
cmp
xchg
mov
and
push
ret
mov
mov
or
cmps
pop
ficomp
imul
rcl
and
fcom
ins
les
cmp
or
call
inc
pop
out
icebp
pop
mov
dec
and
jmp
mov
pusha
pop
sbb
mov
pop
scas
dec
mov
dec
les
fdiv
mov
movs
adc
outs
pop
ja
pusha
cmps
lods
ret
xchg
or
push
test
repnz
and
aas
repz
xor
cwde
pop
adc
das
rcr
mov
fbld
add
dec
idiv
sub
pop
sbb
jne
sahf
cs
fnstcw
nop
mov
push
shr
lods
sub
lea
ins
or
sub
popa
das
int3
mov
sub
rcl
or
fwait
pop
dec
sbb
and
mov
mov
push
lea
jle
sub
ja
xor
sub
cmp
and
push
pop
lock
not
push
or
cs
(bad)
sbb
std
mov
xchg
jmp
jae
cmp
out
or
and
or
pop
cmp
jno
add
iret
test
jp
sbb
imul
in
call
in
or
stos
mov
sub
xor
mov
adc
sti
push
mov
mov
test
sbb
mov
jns
imul
pop
stos
fbld
mov
outs
fdiv
fcomp
fs
fld
sbb
jecxz
mov
popa
jno
pushf
push
arpl
mov
add
lock
out
sbb
cmp
test
in
shr
mov
xlat
cmp
pop
sti
mov
pop
call
pop
out
int
xchg
push
cmp
(bad)
fnop
jp
or
xchg
adc
sub
xchg
pop
ret
imul
pop
retf
sbb
int
retf
(bad)
stos
xchg
mov
lods
shl
inc
rcpps
rol
or
sub
repz
jbe
add
ja
pop
inc
cmp
repnz
ins
lock
cmps
or
mov
adc
test
ret
call
xor
(bad)
repz
vmovd
inc
iret
daa
fcmovnbe
mov
popa
pop
mov
xor
call
cmp
imul
cmp
dec
xchg
lahf
cmps
xchg
jl
add
xchg
mov
jl
sahf
cmc
stos
je
clc
jp
and
fdiv
popa
jo
shl
je
mov
jmp
lock
xchg
lea
or
sbb
das
test
aaa
and
test
dec
imul
sahf
test
aaa
xor
sub
inc
push
ret
cmp
and
bound
mov
movs
scas
add
cmps
stos
int3
out
ins
call
call
stc
mov
xor
pop
mov
ror
push
sub
adc
add
dec
add
add
push
out
and
(bad)
push
mov
jo
rcl
push
(bad)
xor
ja
push
inc
sub
cli
(bad)
mov
sbb
cli
jnp
cmp
retf
iret
data16
xor
jmp
sub
jne
sbb
or
inc
push
pop
test
push
sub
daa
jae
push
call
xchg
inc
cmp
mov
dec
cmp
dec
stc
mov
lods
into
fsubp
xor
xchg
cmp
pop
push
cmc
push
adc
mov
mov
mov
and
sti
jg
or
imul
mov
(bad)
mov
mov
fwait
add
mov
clc
bound
fwait
push
fwait
rcl
ret
cs
clc
sahf
inc
mov
sbb
adc
jge
inc
jbe
adc
sub
hlt
daa
xchg
and
outs
jge
(bad)
jnp
jmp
xchg
mov
stos
push
cmp
pop
call
adc
aaa
test
inc
xchg
retfw
mov
dec
inc
inc
int3
jno
xchg
lods
stos
ret
stos
and
adc
sub
mov
fisub
mov
ins
call
push
dec
xchg
push
rcr
jne
mov
movs
(bad)
add
xor
inc
out
xor
add
mov
sbb
aad
sbb
jg
mov
imul
jb
mov
push
mov
xor
inc
push
aam
pop
retf
jbe
lock
adc
mov
nop
arpl
cmp
jmp
jg
ret
mov
mov
retf
dec
ret
cld
fbstp
cwde
cli
pusha
je
sub
pop
xchg
xor
jbe
rcl
jecxz
sub
and
and
ror
gs
xchg
fdiv
push
and
cmp
call
fidivr
movs
cli
pop
and
dec
dec
jbe
outs
jb
jmp
test
push
stc
je
inc
(bad)
and
outs
not
push
mov
mov
stos
jns
pop
popa
xor
jo
scas
sub
mov
shl
jecxz
lock
lock
xor
cs
or
fwait
icebp
push
and
inc
adc
inc
push
sbb
pop
or
xchg
mov
xchg
es
movs
popa
mov
dec
je
jl
jo
test
aaa
sbb
jle
fsub
loopne
rol
or
cmps
push
adc
das
iret
add
sub
pop
push
pop
icebp
jae
sahf
stos
scas
(bad)
stos
and
push
test
add
jmp
les
jl
lods
sbb
or
xor
lods
mov
mov
test
mov
(bad)
loop
push
xchg
icebp
adc
xor
pop
shl
add
sar
cmp
inc
xlat
daa
or
cmps
(bad)
dec
push
ds
retf
jmp
mov
jg
dec
and
or
fdivr
jp
les
outs
and
push
cmc
out
push
fs
xor
retf
xchg
mov
test
hlt
inc
xor
aaa
sahf
and
pop
and
or
icebp
cmp
sbb
adc
aam
cmc
fistp
out
data16
and
fidivr
hlt
(bad)
mov
into
fcmovnb
jmp
rol
add
imul
cmps
imul
mov
cmp
mov
shl
pop
les
mov
aas
lock
scas
retf
add
mov
rcl
xor
into
push
outs
ss
(bad)
adc
add
repnz
out
lods
add
lds
xchg
push
or
mov
test
xchg
adc
push
mov
fdivp
ds
out
lock
in
sub
dec
sub
jno
and
shr
xchg
jle
retf
sub
rcr
cmp
jae
mov
and
(bad)
aam
add
xchg
into
push
pop
xchg
mov
cmp
mov
cld
pop
test
cmc
jle
sub
data16
xlat
addr16
mov
scas
or
mov
pop
add
sbb
popa
test
mov
sub
gs
fldcw
fwait
push
stos
aad
xchg
jge
push
loopne
mov
fistp
fistp
ins
push
ds
adc
ins
sub
in
call
mov
pop
(bad)
shl
pop
add
jle
inc
jno
pop
or
jp
and
mov
add
adc
mov
mov
dec
es
xor
mov
in
push
jmp
push
or
xchg
xchg
xlat
jecxz
shl
jns
addr16
ds
xchg
sub
lds
sar
jle
inc
push
stc
jg
sub
or
enter
xchg
xchg
mov
bound
add
and
test
mov
call
scas
push
shl
(bad)
and
push
jne
mov
div
mov
lods
outs
jmp
adc
jmp
adc
inc
shr
xor
pop
movs
inc
mov
scas
data16
scas
push
mov
xchg
not
rcl
icebp
pop
shr
pop
adc
inc
mov
push
sub
jmp
push
and
movs
push
mov
imul
mov
outs
test
mov
rcl
pop
inc
into
adc
(bad)
clc
xor
add
aaa
mov
call
pop
outs
shr
mov
aas
ror
and
addr16
and
movs
or
add
jo
or
mov
inc
push
push
pop
mov
std
js
adc
in
push
ret
xchg
sahf
ret
mov
or
xchg
std
jnp
in
dec
pop
add
xchg
xchg
test
xchg
arpl
icebp
jo
sbb
adc
scas
xor
push
add
mov
mov
jb
push
xor
sub
in
int3
ins
mov
test
lds
pause
leave
stos
jecxz
out
sbb
dec
sbb
sti
int
sti
sub
jns
mov
imul
jnp
dec
fdiv
jmp
ret
sbb
add
das
mov
jl
das
sbb
ret
(bad)
fstp
xchg
(bad)
es
mov
and
rcl
cmp
imul
retf
popa
adc
fs
gs
pop
push
add
xor
and
into
sbb
daa
in
xchg
jecxz
push
lock
not
adc
and
lods
ds
and
pop
ja
sti
inc
in
in
inc
stos
mov
adc
mov
ss
inc
ret
pop
push
sbb
addr16
sub
mov
jge
test
push
mov
stos
jecxz
add
adc
add
lods
mov
pop
cmps
mov
in
scas
cmps
stos
pop
stos
mov
(bad)
ja
std
push
ss
mov
aam
mov
cmp
mov
dec
mov
out
xor
addr16
movs
xchg
jmp
rcr
ja
xchg
mov
xchg
xor
icebp
jg
inc
xchg
add
pop
bound
mov
lock
mov
add
push
mov
pop
mov
push
lods
push
shr
repz
cmp
jb
push
sbb
cwde
cmps
call
jmp
(bad)
leave
scas
je
jmp
add
pusha
mov
movs
int
leave
lahf
jmp
data16
dec
and
test
enter
mov
(bad)
je
out
adc
mov
push
nop
sub
add
dec
(bad)
mov
mov
lock
sbb
in
pop
addr16
jg
outs
mov
jbe
je
fisubr
pop
dec
sub
jae
jne
mov
in
je
dec
imul
lods
xchg
outs
dec
pop
xchg
mov
push
sub
int3
push
pop
psadbw
sti
out
jbe
and
sbb
imul
add
jl
inc
push
add
xor
imul
lahf
xchg
rcl
loope
mov
arpl
push
outs
popa
lods
sbb
popa
pop
dec
fs
cmp
fistp
inc
das
xor
mov
push
(bad)
std
mov
shl
xor
xchg
lds
and
outs
mov
aam
mov
mov
pop
repz
div
call
ja
pop
mov
sub
cwde
ret
jg
es
fbstp
jg
jno
dec
mov
xchg
mov
in
fistp
and
mov
sbb
das
adc
xchg
xlat
or
mov
push
pop
jecxz
shr
call
imul
push
movs
dec
mov
adc
popf
in
push
js
psllw
out
push
mov
sub
jo
stc
inc
or
push
aaa
stos
movs
xcrypt-ofb
cmps
sub
icebp
adc
shr
dec
cmp
call
scas
xchg
mov
mov
inc
mov
clc
xchg
sbb
sbb
fnstcw
ret
test
test
into
sub
aas
test
xchg
cmp
add
mov
addr16
mov
or
loope
sbb
idiv
cmp
movs
lahf
ja
aam
mov
push
xor
daa
push
iret
repnz
xchg
inc
add
sbb
adc
loope
fisttp
pop
pop
stos
add
inc
or
jle
mov
stc
dec
jns
mov
mov
lahf
outs
jbe
pop
je
inc
stc
mov
adc
out
jl
inc
shl
adc
movs
dec
test
sbb
cld
sub
push
add
push
daa
and
add
stos
in
mov
outs
cmps
outs
adc
jno
mov
mov
xor
test
sbb
mov
adc
hlt
dec
adc
dec
pop
inc
retf
pop
pop
mov
scas
mov
mov
lahf
mov
and
nop
into
xchg
xchg
mov
xchg
sub
out
push
jmp
lock
dec
dec
mov
std
jg
mov
inc
xlat
mov
xchg
arpl
js
outs
stos
int3
xor
sbb
arpl
test
mov
adc
and
lock
shl
add
sbb
inc
jp
mov
hlt
fcom
std
cmc
out
xchg
es
push
adc
dec
mov
icebp
jle
sahf
or
xchg
mov
or
or
pop
inc
sbb
pusha
repnz
and
mov
dec
jns
pop
inc
outs
mov
aas
add
xor
(bad)
cwde
xor
fld
push
das
je
test
push
adc
jg
sbb
mov
sub
cmp
bound
mov
leave
mov
loop
inc
and
cli
mov
add
mov
movs
mov
jmp
xchg
nop
into
push
retf
int
push
rol
mov
dec
push
xchg
(bad)
sbb
xchg
outs
aas
push
xchg
adc
icebp
mov
push
mov
cmp
mov
add
in
or
shl
sub
dec
xor
cs
loop
cli
xchg
mov
push
adc
push
ret
mov
push
call
xchg
ror
or
dec
xchg
push
pop
(bad)
sbb
mov
mov
push
(bad)
leave
mov
not
add
xchg
imul
mov
stos
bound
hlt
dec
sub
xor
adc
add
les
mov
pop
mov
scas
(bad)
push
and
rol
dec
inc
(bad)
ror
mov
push
or
ja
mov
repnz
shr
in
cmp
fwait
loopne
mov
push
test
pop
hlt
adc
data16
jae
jge
adc
stos
lds
mov
and
inc
fmul
pop
popa
out
xchg
outs
fwait
dec
test
cli
dec
es
sbb
out
and
push
retf
dec
lods
(bad)
out
jecxz
or
dec
mov
les
xchg
sub
xor
mov
dec
outs
xor
test
xchg
push
aaa
scas
fcomp
pop
mov
push
mov
into
ins
bound
xchg
hlt
loopne
loop
inc
daa
xchg
xchg
stos
xchg
sar
stos
cmp
push
push
bnd
lahf
adc
popf
mul
ins
push
aaa
add
dec
ss
fwait
mov
mov
inc
adc
dec
xchg
mov
data16
cmp
xchg
movs
mov
cmp
sub
push
cmp
rcr
mov
pop
call
daa
sbb
test
jb
loope
jno
outs
loop
outs
rol
jl
stos
call
sbb
sub
outs
xchg
movs
mov
mov
push
add
fstp
mov
cmps
dec
pop
data16
cwde
sub
pop
ins
fisttp
jle
stos
adc
out
mov
ret
scas
bnd
sub
dec
int3
add
sbb
pop
pop
xchg
test
xchg
adc
dec
iret
fbld
(bad)
jecxz
jp
jno
(bad)
mov
lds
js
and
or
(bad)
adc
in
and
cmps
jns
push
test
cli
sbb
dec
retf
or
cld
test
inc
pop
mov
pop
fist
xor
inc
es
xor
add
sahf
sti
inc
out
jmp
sub
sti
xor
rol
inc
pop
jae
loope
or
ja
mov
adc
jns
pop
jae
lods
ret
das
xchg
jmp
and
(bad)
retf
mov
add
scas
dec
(bad)
and
iret
jae
and
cmp
retf
push
xchg
and
sbb
xchg
mov
and
or
cld
ins
push
pop
jmp
adc
fstp
fistp
out
inc
xchg
or
es
pop
dec
daa
retf
adc
adc
inc
xchg
jae
addr16
mov
xor
lds
jns
mov
out
jo
ds
sti
mov
imul
stos
sar
xchg
retf
jl
add
push
push
or
dec
neg
scas
retf
push
ret
pushf
xor
mov
add
int3
dec
xchg
mov
xchg
mov
push
lahf
popf
mov
fld
or
mov
aad
push
push
(bad)
cmps
scas
sub
test
icebp
daa
sub
jbe
mov
mov
scas
cmp
int3
(bad)
lods
jmp
jg
dec
add
push
push
and
sub
imul
mov
inc
add
xor
pop
loope
mov
or
cld
jl
xchg
or
push
std
aam
icebp
mov
and
jno
lods
int
scas
ror
(bad)
scas
sub
lods
in
xchg
repz
frstor
xor
fild
jbe
arpl
adc
imul
and
rcl
(bad)
mov
push
push
jmp
inc
daa
inc
lock
daa
jae
stos
call
add
jnp
pop
scas
mov
stos
xor
pusha
push
aaa
xchg
jae
je
repz
mov
not
pop
push
icebp
push
sub
aas
mov
(bad)
jmp
fbstp
stos
pop
mov
cmp
fild
shl
arpl
iret
(bad)
outs
sbb
adc
sbb
shr
inc
adc
and
inc
or
cld
xor
(bad)
pop
sti
sbb
cdq
shl
jb
xor
sti
addr16
pop
or
dec
out
sub
pop
ret
pop
dec
loopne
mov
jmp
in
aaa
and
or
lods
rcl
mov
data16
rcl
add
shl
mov
imul
mov
call
lock
push
push
popf
pop
sub
test
int3
or
mov
lock
lds
jge
sbb
mov
push
or
pop
scas
loope
mov
cdq
shr
in
jne
mov
bound
or
push
sub
xchg
xchg
cmp
jecxz
fwait
(bad)
mov
ret
sar
hlt
pop
mov
jmp
icebp
loope
mov
adc
jnp
mov
dec
sub
or
in
push
inc
int
inc
inc
sub
jb
leave
call
xor
xchg
xchg
xor
jnp
outs
movs
mov
int3
mov
pop
repz
cmps
pusha
jne
sub
ret
add
or
ins
xchg
and
mov
pop
mov
sub
lods
mov
std
shl
fsubr
mov
clc
mov
or
push
push
mov
leave
add
sbb
sub
cmp
mov
push
add
mov
fimul
pushf
push
pusha
mov
jecxz
inc
add
dec
push
or
mov
mov
dec
idiv
dec
cmp
cwde
mov
test
loopne
xor
fild
aad
shr
(bad)
jae
cmp
imul
cs
test
popa
retf
idiv
dec
scas
ret
mov
push
in
mov
or
cwde
cmp
mov
jae
mov
aad
jp
jg
ret
fistp
outs
cmp
push
cmp
ror
dec
pop
adc
add
inc
push
pop
and
test
jns
imul
bound
pop
or
lods
imul
test
push
add
fiadd
push
sti
inc
fisubr
or
xor
outs
adc
inc
add
xchg
lahf
movs
xchg
mov
or
iret
dec
pop
inc
(bad)
pop
jmp
call
sub
sbb
cld
stos
imul
pop
and
movs
fcomp
enter
add
push
and
mov
xchg
jno
stos
or
mov
ret
mov
test
test
adc
lahf
mov
push
pop
ss
sub
and
add
pop
mov
test
push
and
dec
mov
ret
jl
dec
sub
repz
pop
mov
aad
add
dec
cmp
sbb
push
out
ficomp
mov
pop
mov
arpl
outs
(bad)
jno
fs
jno
pusha
sub
mov
mov
cmp
rol
jnp
movs
loop
sbb
sub
movs
jb
in
icebp
adc
mov
icebp
push
lock
ficomp
test
xchg
jo
push
les
icebp
xchg
jecxz
mov
xchg
ret
mul
xor
jp
test
pop
mov
cmp
or
and
inc
mov
mov
sbb
iret
jb
xchg
daa
cmovo
sbb
fnstcw
jno
mov
sbb
dec
in
push
or
les
mov
adc
shl
mov
push
xor
cmp
jge
sub
hlt
call
test
add
add
sub
ret
sub
shl
cmp
das
test
fsub
mov
icebp
leave
adc
imul
lods
mov
sub
sub
ret
push
or
ds
cmp
fisub
and
push
push
adc
sub
call
mov
sub
and
dec
pop
leave
rol
inc
pop
ret
out
add
fsub
dec
jnp
sahf
sub
inc
les
sbb
jl
out
(bad)
mov
loopne
jbe
mov
sub
mov
pop
xchg
mov
movs
sahf
adc
out
inc
fmulp
test
dec
repnz
outs
popa
xor
add
fwait
dec
xchg
aad
sti
(bad)
cmp
pop
add
jns
lahf
sbb
rol
add
sbb
int3
(bad)
repz
inc
inc
out
xchg
jnp
and
cmp
jge
jge
retf
sub
mov
mov
and
repnz
mov
and
fcmovne
fbstp
mov
outs
mov
adc
repz
mov
fst
push
enter
loope
and
inc
ss
daa
ffree
jmp
mov
(bad)
aam
iret
mov
rol
pop
imul
mov
and
fst
push
add
(bad)
das
nop
sub
mov
jle
adc
and
repz
mov
push
mov
sbb
aad
inc
cmp
adc
or
ja
fcom
test
iret
pop
xor
(bad)
and
or
retf
in
(bad)
and
push
adc
cmp
inc
fwait
or
out
popf
sub
push
test
inc
mov
pop
pop
push
(bad)
int
iret
inc
aad
jle
cli
mov
jnp
dec
push
sub
frstor
iret
jle
std
cmp
das
test
jae
addr16
in
add
retf
inc
pop
mov
loopne
cmc
test
xchg
mov
push
mov
xor
mov
into
add
push
cmp
xor
mov
jae
arpl
cmp
in
imul
jns
pop
push
sbb
outs
call
cli
ficom
fs
aad
mov
addr16
sub
mov
cmp
pop
fisubr
xor
pop
or
cmp
data16
cli
mov
test
pop
jge
jno
xor
data16
cmps
dec
clc
into
ins
cmp
loopne
bound
jbe
inc
xor
scas
sub
inc
iret
xor
cmp
dec
adc
loope
imul
adc
cmp
xchg
xchg
inc
bound
jne
daa
test
es
(bad)
mov
mov
jp
neg
rcr
mov
imul
icebp
ss
lods
je
sbb
mov
jp
or
and
retf
inc
stos
inc
sbb
pop
iret
sub
sub
data16
add
iret
addr16
ud2
dec
pop
std
push
cmp
inc
xor
xchg
xchg
mov
cli
(bad)
inc
lods
and
xchg
fcom
ret
or
outs
ds
add
sbb
pop
lods
mov
rcl
push
xchg
cmc
rol
pop
lock
jno
mov
movs
cmp
fdivr
push
jecxz
repnz
adc
pop
out
cs
xlat
test
hlt
jg
repnz
xchg
in
mov
sbb
nop
dec
sbb
adc
pop
int3
int3
pop
mov
pop
lock
aas
test
xor
inc
arpl
js
mov
call
cmp
add
mov
fiadd
xchg
cdq
jno
clc
push
outs
ins
and
jae
int
test
out
ror
das
movs
add
pop
loopne
sbb
mov
je
sbb
(bad)
je
cmp
add
push
dec
push
dec
in
push
xor
mov
cmp
xchg
mov
push
in
or
stc
shl
pop
sub
push
mov
hlt
ja
loop
jbe
add
int3
cmp
mov
rcr
cli
aas
loope
adc
xor
in
cld
sub
dec
jns
pop
imul
int
dec
adc
shl
shr
xchg
push
test
jne
and
fidivr
mov
je
int
sub
loop
enter
stc
xchg
mov
jmp
jle
xor
sbb
cli
xor
mov
mov
lods
push
ficom
js
daa
push
scas
stos
push
pop
es
push
jns
cmps
xlat
pop
retf
outs
xor
and
xchg
loope
or
sub
jg
jmp
or
das
cmp
(bad)
mov
mov
loop
xrelease
outs
jbe
arpl
leave
fimul
aaa
and
stos
jno
xor
clc
jae
sar
mov
xor
xchg
inc
fadd
dec
(bad)
cli
enter
popa
inc
adc
addr16
scas
stos
scas
(bad)
push
aas
iret
jp
push
push
push
shr
push
sahf
retf
fdivr
xor
or
xchg
stos
mov
shr
mov
push
mov
fcom
push
out
and
out
lock
cld
aam
in
jne
and
push
jle
stos
cmp
add
retf
jg
ins
push
out
push
mov
out
iret
stos
leave
leave
cmp
add
inc
je
pop
sbb
leave
popa
lods
scas
scas
mov
ret
cmc
pushf
xchg
add
mov
stc
outs
mov
stos
xor
in
mul
shr
push
xlat
add
mov
jge
(bad)
ins
ret
stos
pusha
push
out
inc
mov
mov
hlt
sbb
jno
push
add
cmp
in
test
shr
xor
or
ins
not
sbb
nop
sub
in
xchg
xchg
xchg
div
nop
and
or
cld
scas
and
(bad)
xchg
into
xchg
jmp
mov
test
dec
jno
jle
lods
xchg
loopne
or
add
mov
mul
cwde
retf
lods
xor
out
dec
mov
ret
push
and
push
or
enter
test
cmp
bnd
(bad)
out
scas
(bad)
sbb
jl
or
ins
jno
repz
inc
sahf
jno
cmp
retf
pop
sbb
lds
aad
add
call
cli
ins
adc
aaa
push
movups
aaa
xchg
push
hlt
mov
pushf
aad
cmps
adc
(bad)
(bad)
stc
icebp
addr16
jecxz
ret
js
inc
xchg
sub
in
jge
sbb
cs
dec
stos
push
pop
jge
sub
retf
xchg
and
mov
push
xchg
pop
aam
jle
xor
push
inc
fisttp
xor
cmps
xchg
out
repz
enter
push
sub
mov
pop
xchg
sbb
push
cmp
into
cmp
stos
ret
mov
repz
push
retf
(bad)
or
or
inc
outs
adc
addr16
jbe
xor
scas
cmp
lods
repz
cmp
dec
xchg
mov
jle
pop
mov
arpl
sbb
sbb
pop
fcom
pop
cmps
xor
test
inc
out
jecxz
inc
dec
and
outs
and
dec
push
add
jecxz
(bad)
stos
shr
mov
out
mov
push
je
(bad)
leave
xor
enter
xchg
lahf
mov
and
mov
scas
add
ret
popf
daa
cmp
mov
xor
jmp
cmp
mov
cs
pop
leave
mov
lea
adc
ins
std
ins
jmp
sub
ins
ret
sub
out
cmp
idiv
push
sub
sub
adc
fst
adc
leave
daa
clc
pop
and
test
jmp
mov
sbb
call
jp
cld
push
pusha
push
pop
adc
add
les
pop
mov
outs
cwde
cmp
adc
ror
mov
les
fwait
dec
mov
jle
cmp
test
xor
icebp
xchg
pop
sbb
test
loope
xchg
or
add
mov
or
out
mov
xchg
scas
cmps
jb
push
ss
xchg
inc
sub
sub
jo
xchg
call
popf
fwait
pop
or
cmp
or
pop
movs
mov
retf
or
jo
(bad)
retf
inc
dec
adc
inc
mov
gs
pop
iret
mov
jbe
das
adc
mov
mov
jo
push
shr
arpl
push
inc
scas
mov
aas
daa
retf
xchg
push
add
and
in
sub
test
(bad)
jge
scas
add
mov
sbb
add
xchg
fstp
addr16
test
adc
div
(bad)
fist
call
call
adc
retf
jno
mov
icebp
pop
xor
push
sbb
sub
lds
sbb
cmps
add
and
inc
sub
xchg
dec
call
ja
js
pop
test
jmp
in
popa
hlt
xchg
pop
push
add
jmp
inc
and
fstp
jno
inc
xor
sbb
jns
in
and
ret
dec
dec
retf
jno
arpl
outs
mov
adc
stos
repnz
rcr
cld
xor
shr
jg
test
dec
stos
aas
or
and
push
lea
jg
push
inc
scas
sbb
(bad)
cld
pop
inc
add
mov
imul
mov
or
jb
enter
mov
dec
arpl
test
or
cmps
mov
push
outs
(bad)
jecxz
mov
hlt
mov
test
xor
fcomip
pop
lea
mov
ret
push
push
xor
(bad)
jle
or
aaa
mov
jbe
outs
inc
loop
xchg
cmp
inc
out
mov
in
pop
xlat
ins
repnz
imul
int3
sub
pop
add
pop
(bad)
xchg
push
(bad)
adc
mov
dec
mov
and
ficomp
lds
xchg
scas
add
mov
cli
pop
clc
jmp
jne
push
mov
inc
dec
shl
movs
dec
and
jne
dec
adc
dec
xor
scas
fs
or
sub
pop
out
fmul
push
adc
jmp
movs
into
xor
jp
imul
xor
daa
mov
bound
fidivr
adc
push
shr
or
loop
mov
mov
nop
xchg
mov
out
pushf
adc
int
mov
add
inc
test
popf
mov
js
push
(bad)
sbb
xor
mov
jmp
jp
ins
mov
lock
stos
imul
sub
sbb
pop
sub
addr16
out
cs
push
mov
add
and
das
out
xchg
into
mov
mov
pop
in
retf
pop
imul
jmp
jno
in
pushf
add
(bad)
(bad)
pop
xor
add
jge
push
xchg
xchg
mov
jge
sbb
mov
adc
fmul
jns
call
mov
jecxz
(bad)
pop
ror
sbb
outs
adc
daa
cdq
and
add
adc
mov
push
adc
int3
daa
cmc
mov
call
loope
es
retf
push
or
shr
add
shl
jae
jecxz
les
or
addr16
scas
out
pop
mov
imul
cs
mov
add
mul
sub
inc
push
add
loope
cmp
enter
rol
add
sub
mov
pushf
rcl
ret
in
mov
je
sub
ret
inc
xchg
adc
mov
fld
or
cmp
loopne
jl
jnp
jno
push
jne
mov
jae
cmp
pop
outs
cmp
stos
ret
xchg
add
mov
xor
inc
inc
jecxz
lods
shl
xchg
imul
inc
repz
loopne
int
je
test
leave
cli
mov
mov
jecxz
dec
in
daa
dec
test
pop
xchg
test
cmp
mov
ins
pop
mov
mov
inc
gs
inc
pop
cld
cmc
add
adc
mov
leave
movs
sbb
push
repnz
retf
jl
(bad)
neg
stc
stc
mov
and
and
bound
adc
cwde
adc
jecxz
mov
ror
cmps
hlt
(bad)
mov
jl
xchg
jno
push
fimul
inc
dec
les
or
pmaxsw
int
or
xchg
(bad)
push
push
stos
popf
neg
int
shl
js
test
retf
fwait
jecxz
fsubr
out
es
add
sbb
stc
cdq
loop
mov
mov
mul
fs
mov
sbb
retf
out
ins
pop
push
pusha
dec
test
movs
into
mov
add
ficomp
xchg
dec
push
jmp
movs
mov
inc
retf
inc
test
loope
inc
js
idiv
jae
fnstcw
sub
mov
call
in
sub
push
xchg
stos
mov
ret
test
add
es
lock
stc
ins
frndint
es
cmc
(bad)
mov
imul
push
inc
lahf
shl
jnp
nop
sbb
fwait
lds
stos
scas
or
es
xor
les
add
pop
jo
push
and
sbb
sub
push
cs
out
pop
and
pop
adc
daa
call
stos
pop
adc
mov
jns
push
sub
lods
popf
test
push
push
test
or
lds
fcomp
mov
xor
sbb
sub
ja
xchg
cdq
dec
shl
ins
push
or
xor
out
mov
mov
jb
xchg
js
jnp
and
iret
(bad)
mov
repnz
outs
ret
cmp
cld
and
mov
mov
pop
pminub
inc
mov
(bad)
mov
pop
xor
sub
fist
mov
ds
cdq
mov
pop
sbb
adc
add
mov
or
sbb
icebp
jnp
cmp
mov
xchg
cmc
pop
das
push
xchg
sar
xor
xchg
enter
inc
push
push
enter
push
jle
add
stos
lahf
mov
adc
mov
mov
mov
(bad)
je
in
and
mov
xchg
sbb
inc
call
das
leave
mov
icebp
ins
dec
cmp
and
outs
xchg
scas
jae
adc
mov
out
pusha
aad
adc
(bad)
pop
ret
enter
jmp
xor
or
mov
ja
stos
xor
sub
push
xchg
xchg
dec
cwde
jmp
mov
pop
jae
jecxz
pop
ins
adc
pop
xlat
shl
and
test
mov
pop
sub
jmp
cld
xchg
ret
jae
imul
ret
push
push
les
imul
gs
ja
jno
jns
xor
das
cmp
scas
mov
test
scas
mov
cmp
and
jbe
cmp
rol
call
dec
pop
jge
push
data16
dec
xor
addr16
xchg
out
(bad)
xchg
add
cmps
and
movs
sbb
ja
push
ficom
rol
sbb
std
addr16
jnp
aas
inc
lds
scas
inc
ret
imul
shr
outs
and
sub
push
mov
js
jg
and
adc
cmp
leave
sub
or
inc
sub
mov
pop
cmps
sahf
or
in
outs
fistp
sub
test
sbb
add
sub
mov
test
ss
into
push
pop
xchg
mov
scas
and
and
mov
sub
jno
xchg
pop
sahf
into
aas
pop
or
pop
lds
mov
gs
pop
hlt
dec
xchg
push
lds
into
pop
mov
push
inc
lods
pop
shl
es
call
and
sbb
inc
cmp
pushf
mov
or
inc
(bad)
test
dec
pop
stos
or
add
pop
mov
int
rep
and
inc
mov
stos
dec
aas
inc
or
rcr
jle
inc
jle
xor
add
call
fucomi
jns
mov
sub
xchg
add
int
cmps
and
pop
test
stos
adc
lods
xor
xchg
(bad)
cmp
mov
xor
fwait
add
push
mov
inc
test
xor
inc
gs
sbb
loop
imul
xchg
sbb
fs
xor
(bad)
das
push
xchg
sti
sbb
sbb
dec
pop
jne
retf
mov
fistp
mov
mov
push
cwde
jb
xchg
bound
sahf
jne
fs
xor
fisubr
daa
push
xchg
mov
push
arpl
inc
or
neg
xchg
repz
push
sti
add
daa
je
xor
lods
pop
scas
inc
mov
pop
push
mov
inc
retf
jbe
stc
add
or
pop
cmps
push
mov
out
fcomi
jle
jno
dec
push
mov
loope
xor
mov
cmp
adc
inc
adc
mov
sub
xor
mov
clc
mov
dec
icebp
pop
cmp
and
imul
mov
inc
pop
cmps
cmc
xor
mov
xchg
cmp
push
jns
fstp
cld
mov
mov
repnz
out
adc
xchg
(bad)
(bad)
xor
and
push
pop
xchg
pop
sar
push
mov
neg
pop
frstor
int3
pop
fisttp
(bad)
retf
jge
lea
pop
test
xchg
repnz
adc
scas
out
scas
jns
sub
push
inc
mov
xor
pop
pusha
cmp
es
xor
and
inc
mov
sub
sub
mov
cmp
ds
setl
xchg
outs
aad
xchg
cmp
jmp
pop
push
aam
icebp
add
sbb
pop
cmps
pop
sbb
mov
and
add
cmps
xchg
and
in
and
and
imul
clc
gs
dec
dec
clc
sub
ins
push
call
inc
xchg
jae
mov
xchg
jl
imul
inc
test
nop
cmp
rcr
xor
ror
adc
mov
xchg
xlat
cmps
dec
(bad)
jne
add
retf
or
pusha
hlt
sahf
repz
scas
xor
clc
pop
into
lods
xchg
pop
cld
retf
jecxz
aas
jmp
fld
and
xor
cmp
je
sbb
sbb
and
xchg
inc
call
leave
xor
xor
cld
cmps
adc
(bad)
lds
fild
or
and
mov
jge
adc
rcl
mov
loope
sti
in
hlt
push
adc
imul
sbb
lahf
cwde
inc
xchg
int3
jmp
push
arpl
cmps
clc
and
xchg
xor
and
dec
fisubr
or
sbb
into
idiv
clc
push
add
cwde
(bad)
addr16
sbb
cmp
mov
loopne
cld
dec
pop
push
(bad)
cld
and
(bad)
xchg
and
fcmovb
mov
xor
xor
adc
data16
fs
pop
adc
xchg
sbb
adc
jb
mov
popf
retf
(bad)
repnz
push
mov
fisttp
clc
call
cld
loope
xchg
scas
xor
in
adc
dec
dec
clc
mov
movs
test
adc
test
bound
add
mov
scas
rcl
mov
(bad)
cmps
sub
adc
and
push
movs
mov
loope
mov
jge
aam
(bad)
aad
add
cmps
retf
repz
sub
sbb
fistp
mov
jle
or
pop
pushf
mov
sub
mov
push
pop
lds
sub
test
xchg
mov
push
jle
pop
stos
gs
jno
js
call
xchg
jge
test
test
mov
xchg
mov
out
mov
xor
or
aad
jo
(bad)
test
fld
inc
sub
push
mov
and
clc
sbb
adc
cmp
push
clc
xchg
sbb
sbb
mov
sub
push
sub
sbb
stc
call
jnp
js
or
inc
fmul
cmp
mov
pushf
mov
mul
push
test
fisttp
movs
and
rcr
pop
aas
sub
dec
ret
leave
sub
jg
jmp
cmp
pop
cmps
in
mov
push
add
mov
ret
or
sar
fisub
stc
xchg
test
jle
iret
mov
cmp
pop
icebp
lahf
and
leave
fwait
xchg
and
clc
xchg
loop
repnz
gs
pop
sub
push
icebp
mov
outs
cli
sar
shr
jo
imul
test
mov
adc
mov
scas
xchg
gs
lds
inc
jno
add
in
push
div
(bad)
sahf
test
retf
imul
xchg
mov
iret
ja
push
jo
aas
push
scas
push
adc
jnp
(bad)
fisttp
xchg
xchg
mov
cmp
add
rol
cdq
outs
sub
sbb
jnp
hlt
and
xchg
cmc
push
cmp
sbb
lods
dec
bound
scas
adc
scas
inc
mov
pop
push
mov
hlt
add
ins
loope
mov
stos
lahf
sub
data16
pop
cmp
(bad)
movs
push
ds
push
retf
sub
popf
scas
cmp
jne
sub
retf
shl
loope
jle
and
or
xor
mov
mov
and
sub
lods
es
mov
jne
jmp
repnz
call
jb
mov
inc
or
sbb
sub
icebp
or
ds
jmp
pop
hlt
imul
fwait
pop
push
mov
add
(bad)
add
fsubr
aaa
mov
sub
sbb
(bad)
dec
pop
pushf
xchg
jg
sub
fwait
push
mov
jg
cmc
sub
adc
neg
inc
test
gs
and
neg
out
(bad)
pop
fisttp
test
mov
mov
xchg
xchg
(bad)
(bad)
mul
inc
jne
xor
and
pop
and
mov
fst
mov
or
int3
mov
stos
(bad)
shl
gs
mov
and
cmp
or
(bad)
loope
mov
mov
or
lea
ds
push
mov
push
and
popf
dec
mov
jbe
push
cvttps2pi
and
or
sub
sub
cmp
call
out
or
xor
add
(bad)
out
mov
jge
mov
adc
into
cmps
lahf
stc
in
mov
(bad)
adc
xchg
gs
mov
test
push
mov
push
fstp
jmp
retf
adc
mov
gs
in
or
cmps
stc
pop
xchg
shr
cmps
pusha
arpl
xor
mov
sub
std
loop
xchg
(bad)
stc
jmp
cmc
xchg
imul
mov
pop
sahf
aaa
sub
mov
cmp
retf
std
sbb
lods
pop
shl
loopne
jg
inc
sub
add
in
in
int
fild
adc
call
xor
jp
ins
(bad)
push
sbb
xchg
cmps
inc
inc
ins
push
push
mov
int
pop
aad
cmps
jmp
loopne
fdiv
cli
loop
and
or
outs
scas
je
sti
mov
or
dec
mov
dec
out
or
jo
sti
xchg
icebp
jns
pusha
xor
adc
pop
jecxz
inc
cmp
ret
cmp
loopne
sar
ror
pop
add
scas
push
xchg
jp
cmps
pop
nop
jbe
xchg
or
in
jg
loop
scas
aas
dec
mov
imul
sub
xor
pop
test
nop
out
(bad)
mov
leave
mov
iret
dec
stc
add
bswap
mov
test
cmp
push
adc
gs
dec
and
retf
adc
mul
rol
push
xchg
push
or
(bad)
mov
xchg
pop
push
fst
mov
or
xor
fcom
mov
push
in
mov
stos
sbb
imul
sub
push
add
repnz
cmp
xor
shr
fcomp
cdq
mov
out
pop
das
push
icebp
mov
push
icebp
sub
(bad)
dec
xor
mov
retf
js
std
mov
jb
nop
call
push
mul
or
out
or
je
add
aam
addr16
call
adc
stos
cmps
ins
mov
mov
mov
jae
in
mov
pop
imul
ins
add
nop
div
mul
inc
dec
sub
std
pop
fiadd
sub
add
sub
mov
pop
cld
jecxz
mov
dec
cmp
maskmovq
test
arpl
call
xor
xchg
mov
xor
dec
mov
ins
ins
scas
pop
call
(bad)
mov
sub
mov
retf
adc
(bad)
(bad)
out
ins
test
sar
int3
xchg
adc
sub
popf
xlat
leave
inc
cmp
jb
mov
aam
or
push
inc
loopne
js
jmp
ins
test
jmp
std
pop
fidiv
add
and
shr
and
sub
jl
push
push
in
pop
dec
push
dec
test
mov
xchg
sti
adc
xchg
mov
push
test
push
ins
call
sub
(bad)
int
ror
(bad)
mov
push
enter
and
js
pop
adc
shl
into
aaa
add
dec
lahf
mov
(bad)
pop
(bad)
pusha
test
pop
addr16
nop
imul
fdivr
mov
loopne
std
cmps
dec
xchg
and
stos
mov
mov
pop
jge
add
stos
mov
cmps
jge
mov
aas
repz
(bad)
das
inc
cmp
out
push
push
ss
dec
adc
neg
call
enter
fmul
jae
int
mov
mov
add
scas
ins
xchg
pop
pusha
pop
push
shl
test
jmp
cmp
stos
repz
(bad)
pop
loopne
ficomp
imul
das
arpl
int
add
ror
(bad)
sub
nop
es
push
nop
inc
sub
mov
test
mov
xor
ins
push
fld
mov
mov
in
pop
add
repnz
jmp
mov
inc
icebp
pop
enter
test
lea
not
jp
dec
(bad)
iret
stos
cld
mov
dec
ds
arpl
out
or
xchg
ret
mov
jae
into
mov
mov
fisub
sub
fstp
adc
sbb
cwde
scas
es
mul
sbb
adc
pop
mov
movs
jno
jmp
jg
retf
push
addr16
inc
repz
lock
adc
dec
retf
gs
pop
out
lock
rcr
shl
adc
xor
or
xor
jmp
adc
cmp
loope
pop
imul
fwait
lods
(bad)
outs
call
ret
push
jbe
popf
sub
push
imul
fsubr
inc
sub
mov
adc
sub
mov
clc
rcl
pop
push
inc
pop
add
stc
sub
scas
out
cli
inc
mov
dec
js
push
retf
enter
cs
mov
lods
sbb
push
scas
pop
adc
inc
inc
push
mov
add
js
mov
add
(bad)
fs
mov
sahf
adc
(bad)
fist
sbb
mov
and
fsubr
dec
jb
xchg
xlat
gs
or
ret
je
xchg
(bad)
lock
rcl
and
xchg
dec
push
mov
stos
pop
(bad)
in
sub
arpl
mov
imul
dec
pop
sub
in
mov
les
mov
dec
mul
not
out
pop
into
shl
les
out
repz
shr
and
stos
pop
lods
adc
mov
es
loopne
cmp
jle
repnz
sbb
(bad)
push
dec
js
shl
test
push
movs
dec
jecxz
pop
add
loope
jge
cmp
cmps
mov
inc
popf
inc
and
lods
mov
dec
inc
ja
popf
stos
fs
mov
mov
je
dec
mov
jae
les
cs
dec
xchg
jg
lds
inc
jecxz
inc
cli
xchg
sbb
jmp
lods
jns
in
imul
sbb
pop
xchg
cmps
or
sysenter
inc
stos
scas
xchg
in
inc
push
sti
fist
test
ss
pushw
ret
pushf
(bad)
push
adc
loope
xchg
pop
sahf
or
dec
out
retf
popa
adc
and
test
jmp
stos
xor
xor
idiv
pop
push
push
shl
or
inc
stos
dec
out
adc
outs
xchg
mov
neg
(bad)
jmp
push
pop
xchg
test
mov
std
sub
mov
mov
sub
hlt
xchg
push
scas
jle
adc
ret
mov
fdivr
test
inc
or
test
pop
or
and
sub
add
fsubr
imul
enter
push
fldenv
push
add
add
push
cwde
sahf
retf
cwde
cmp
and
fsub
xchg
adc
add
pop
or
fistp
mov
ss
popf
add
mov
sbb
sbb
mov
test
jne
shl
bound
mov
sub
add
and
mov
clc
retf
mov
add
or
jp
push
not
into
inc
data16
dec
les
pop
int3
pushw
sbb
retf
xchg
sbb
out
mov
ret
js
shl
fwait
test
inc
lock
and
dec
outs
pop
stos
sahf
mov
aad
xchg
cs
inc
ret
mov
push
cld
inc
or
push
jle
jp
push
outs
dec
jo
leave
mov
cmp
inc
popf
stc
sbb
push
add
and
pop
dec
stc
jle
pop
jg
mov
mov
scas
dec
xchg
push
add
aaa
addr16
pusha
test
repz
dec
push
lahf
xlat
pop
loope
imul
stos
pop
sbb
imul
shl
jg
push
call
jl
cmp
adc
retf
jno
lock
in
sar
add
xor
cwde
mov
mov
cmp
cmp
test
mov
add
adc
dec
and
cmp
mov
lods
mov
mov
push
pop
stos
push
adc
je
idiv
stc
std
pop
mov
addr16
push
pop
fadd
out
mov
nop
mov
out
push
pop
sbb
push
repz
xchg
pop
(bad)
leave
(bad)
addr16
dec
jp
or
lods
imul
push
mov
fmul
or
outs
ds
ss
inc
mov
jmp
adc
sbb
ins
fwait
mov
imul
sbb
lock
pusha
mov
push
and
and
gs
adc
dec
jbe
jo
add
lods
pop
clc
jge
(bad)
mov
and
or
ins
push
adc
sar
arpl
scas
jnp
sbb
sbb
ja
cmps
pop
push
mov
lahf
push
xor
jge
icebp
push
mov
sti
fdivr
mov
cwde
mov
xchg
xchg
pop
bnd
js
cmps
clc
adc
push
mov
sbb
das
scas
dec
xor
push
mov
cwde
in
or
push
fadd
stos
xor
les
and
or
push
pop
stos
fld
push
and
test
dec
mov
fisub
fimul
jg
inc
and
dec
mov
sbb
lahf
xor
(bad)
push
sub
mov
ds
lock
dec
pop
and
cld
fxch
int
push
xchg
sub
sub
stos
mov
adc
mov
movs
dec
dec
movs
jmp
ret
push
in
retf
add
pop
(bad)
sbb
es
(bad)
daa
push
fld
cmc
int3
jmp
cmps
inc
jae
out
arpl
loop
xchg
aaa
bnd
add
mov
sbb
out
and
ret
jecxz
daa
jg
sub
add
mov
jmp
mov
out
sbb
xchg
test
mov
inc
inc
jmp
sar
ja
pop
(bad)
jecxz
(bad)
out
mov
pop
sub
lods
pop
lock
jmp
cli
cwde
movs
jno
rcl
xor
inc
das
leave
jb
fwait
out
daa
(bad)
into
mov
je
jg
and
loopne
fld
xor
and
retf
pop
stc
inc
mov
jns
mov
xchg
inc
mov
in
not
faddp
inc
stos
out
pop
adc
imul
int3
fdivrp
cmp
mov
sbb
push
xor
jecxz
adc
repz
stos
add
les
ds
pushf
add
jecxz
pop
out
inc
imul
xor
and
adc
je
and
(bad)
fnsave
sub
dec
retf
inc
div
sbb
das
fmul
mov
push
mov
ret
xlat
jae
xor
mov
lods
sbb
inc
add
pop
call
jbe
or
push
imul
(bad)
ds
adc
data16
inc
imul
xchg
cmp
jbe
cmc
and
bound
inc
mov
fisttp
rol
ja
ds
cmp
sbb
dec
div
shl
lahf
ja
cmp
add
ss
push
xchg
mov
jmp
in
pop
lods
mov
push
sub
cdq
adc
adc
mov
dec
stos
pop
rcr
pop
lock
push
xor
pop
ficom
push
idiv
adc
stos
push
cmp
mov
(bad)
iret
jo
ficomp
xor
sbb
lods
retf
arpl
fnstcw
mov
dec
sub
cmc
leave
loope
adc
sbb
popf
sub
adc
and
or
inc
imul
not
xchg
ja
jno
addr16
sub
hlt
and
lods
or
imul
dec
push
sub
rcl
add
mov
inc
jle
mov
push
hlt
mov
int
out
xchg
hlt
inc
push
xchg
icebp
sti
ficom
cmp
pop
test
or
mov
push
test
sub
daa
mov
clc
jnp
icebp
cmp
inc
imul
loope
and
or
push
jnp
dec
mov
adc
daa
jmp
jg
fbld
mov
sub
pop
outs
push
xor
outs
xchg
retf
fnsetpm(287
shl
inc
scas
ins
add
icebp
inc
dec
(bad)
and
mov
xor
std
mov
imul
adc
adc
sub
call
sub
adc
xchg
repz
mov
xchg
and
xlat
dec
and
or
xchg
xor
xchg
pop
mov
cs
mov
call
xchg
shl
in
jecxz
cmc
xchg
xchg
push
shl
es
inc
or
and
imul
pop
cmps
(bad)
cmp
dec
and
(bad)
dec
leave
and
pop
enter
neg
adc
sub
(bad)
fstp
scas
sub
outs
mov
add
adc
mov
mov
call
fbld
mov
add
fnsave
in
cmc
(bad)
fs
clc
and
push
sub
jmp
addr16
pop
jge
push
mov
data16
mov
in
ror
xchg
mov
pop
lahf
push
aaa
lods
jge
fmul
(bad)
neg
mov
retf
call
aas
and
lock
cmp
aas
popa
or
int
scas
jle
fucom
mov
add
jno
lods
aad
scas
jo
xchg
add
and
pusha
(bad)
or
pusha
inc
adc
arpl
or
fild
push
mov
push
xchg
idiv
jge
mov
xchg
or
sbb
ins
imul
outs
loope
and
ins
dec
call
cmc
ins
sbb
dec
push
mov
test
pop
movs
or
fimul
xor
rcr
cmp
call
mov
out
inc
test
xor
addr16
jmp
fsub
cmp
jnp
push
mov
xchg
mov
pusha
sbb
test
jno
pop
arpl
or
ror
xor
jns
pop
int3
mov
pop
jbe
stc
fs
(bad)
sti
mov
(bad)
cmp
(bad)
lea
dec
les
push
test
mov
cmp
jmp
pop
xchg
sub
jecxz
aam
cmp
lds
lods
scas
mov
cmc
cmp
imul
jne
push
or
xchg
inc
or
pop
mov
xchg
das
sti
or
cmp
or
leave
fistp
fs
mov
stos
(bad)
jge
(bad)
(bad)
mov
ret
or
xlat
(bad)
mov
into
mov
pop
repz
outs
nop
shr
aam
outs
adc
add
pop
call
(bad)
and
push
jnp
(bad)
cmp
inc
test
out
retf
jnp
cs
pop
add
out
hlt
push
stc
xchg
loop
out
int3
and
scas
iret
jnp
repz
(bad)
repz
push
adc
je
adc
int3
pop
fs
in
test
add
shl
je
outs
adc
aas
inc
div
test
push
sbb
mov
mov
scas
leave
outs
mov
mov
jmp
xchg
mov
mov
stos
jo
stos
sbb
movs
add
in
fild
xchg
ret
sub
sti
gs
mov
test
mov
mov
push
cmp
jnp
lods
mov
sbb
pop
add
push
push
push
push
scas
mov
inc
lock
out
or
stos
jle
std
retf
(bad)
das
and
add
push
dec
ss
pop
neg
ret
jecxz
cmp
js
cmp
rol
mov
pop
sti
pop
and
mov
pop
mov
add
push
leave
ret
ja
sub
or
mov
(bad)
retf
jmp
shl
movs
adc
jae
xrelease
push
sbb
int
rcl
in
push
test
mov
pop
inc
or
ror
popa
pop
push
lods
ret
movs
or
(bad)
bound
sahf
mov
rcr
mov
dec
icebp
adc
mov
xchg
jg
lahf
mov
(bad)
jns
xchg
or
(bad)
sub
sti
dec
pop
xchg
js
ins
push
(bad)
push
out
es
xchg
add
scas
repz
leave
test
(bad)
fbld
sbb
popfw
push
(bad)
loopne
mov
outs
jb
push
neg
xor
fs
inc
cmp
mov
repz
cmp
add
and
push
cmp
das
in
push
cli
rcr
pop
mov
mov
test
jbe
(bad)
cmpps
and
retf
fidivr
inc
imul
movs
rcl
xlat
pop
xor
jo
add
push
add
aad
icebp
imul
scas
xor
mov
ret
int3
in
fisttp
adc
arpl
call
sar
retf
mov
cmps
mov
push
mov
push
mov
pop
js
xchg
mov
test
pop
ja
mov
inc
enter
rol
(bad)
aas
out
daa
cmp
pop
ret
cdq
bound
and
xor
inc
jnp
dec
test
addr16
sub
sub
stos
lods
xlat
mov
inc
push
inc
lods
data16
xlat
pop
leave
repz
repnz
cmp
sub
xchg
xor
add
sbb
mov
mov
aas
sbb
jg
fsubr
das
pop
add
xor
aas
jle
div
movntq
mov
pop
xchg
iret
dec
cmp
repz
pop
in
movs
add
out
fisubr
xchg
mov
xchg
xchg
or
or
xchg
xchg
dec
dec
outs
push
push
dec
mov
cmp
lods
scas
dec
or
fidivr
push
bound
dec
test
inc
and
adc
jmp
mov
pop
xchg
ins
push
xchg
iret
mov
fld
fsubr
popa
and
ret
xchg
les
jae
in
pop
jo
jb
jb
ret
retf
sahf
addr16
(bad)
xor
xor
test
inc
sar
push
xchg
xchg
test
inc
pop
sub
dec
repnz
retf
or
adc
mov
sti
xchg
retf
mov
fld
div
add
add
add
int3
mov
mov
fisubr
mul
adc
icebp
loop
mov
pop
out
xchg
stc
(bad)
push
lahf
dec
sub
pop
test
mov
dec
xor
push
and
mov
push
out
(bad)
fist
out
xchg
out
ja
imul
ds
stos
mov
addr16
inc
and
stos
mov
inc
mov
lahf
clc
cmp
xor
dec
lods
dec
adc
cmp
or
mov
adc
fcomi
ins
mov
stos
dec
pop
mov
xchg
cld
cdq
add
adc
and
iret
push
lds
inc
int3
sub
dec
sbb
retf
fidiv
mov
scas
xchg
add
and
addr16
xchg
add
aam
cld
scas
jg
sub
cmps
icebp
xor
jmp
jp
stos
out
ret
jmp
or
lea
add
mov
jmp
mov
mov
dec
jo
mov
je
sub
ret
adc
inc
loopne
(bad)
ins
or
pop
or
jg
push
add
movs
xlat
push
xchg
int3
pusha
dec
in
jle
(bad)
dec
lea
ja
sbb
pop
test
jg
aaa
jmp
jmp
movs
and
xor
adc
test
enter
add
mov
and
ins
sbb
push
jnp
adc
retf
mov
or
sar
outs
iret
in
nop
inc
add
retf
movs
pop
xchg
rdtsc
shl
jge
or
cmp
pop
pop
scas
jbe
mov
fcmovne
mov
popa
add
jmp
inc
popa
enter
cmp
stos
jnp
pushf
mov
hlt
push
pop
dec
int3
icebp
mov
sbb
jmp
movntq
out
mov
and
test
push
shl
(bad)
pop
push
mov
cmp
inc
jle
pop
jb
push
daa
sub
ss
fwait
add
mov
hlt
sahf
mov
test
xchg
mov
cli
mov
push
push
xchg
xor
mul
retf
stos
jbe
fsubr
stos
mov
stc
xchg
out
dec
xchg
jp
ss
test
mov
xchg
or
ins
stos
call
imul
adc
inc
push
lock
jns
sahf
clc
mov
aad
jnp
pop
mov
or
push
daa
or
mov
ficom
rol
imul
mov
leave
ja
mov
int
popf
pop
ds
cld
push
jo
cmp
call
shr
aas
mov
hlt
xor
xor
sub
jb
push
fs
sub
adc
jns
(bad)
xor
rcr
test
loopne
xor
scas
and
inc
mov
push
xor
add
call
add
ja
push
aas
arpl
or
daa
(bad)
scas
in
es
jle
and
je
add
add
js
mov
mov
out
xor
loope
sub
jecxz
test
mov
adc
out
clc
xchg
inc
ds
(bad)
mov
test
out
add
(bad)
leave
mov
ja
in
sub
push
or
es
lea
dec
test
adc
es
cmps
fmul
(bad)
rcr
sub
sbb
in
sub
loope
pop
iret
push
pop
add
jl
clc
mov
cmp
dec
dec
(bad)
sbb
mov
dec
sbb
movs
jne
xlat
fisttp
dec
inc
aaa
sub
sar
out
and
jns
stos
ds
mov
jne
dec
push
xor
jl
out
(bad)
ficomp
out
mov
(bad)
pop
sar
mov
shl
arpl
mov
mov
(bad)
jno
cmps
xchg
jno
call
adc
out
imul
xchg
and
mov
shr
iret
ins
sahf
and
mov
pop
scas
retf
xchg
sub
aam
fbstp
xor
xchg
jb
imul
and
xor
xchg
addr16
ret
jmp
pusha
xor
xlat
imul
cmps
inc
sub
and
cs
pop
retf
verw
sub
bound
mov
cwde
movs
sbb
push
adc
ins
jge
(bad)
push
jl
add
pushf
movs
and
call
mov
mov
fmul
mov
sti
adc
and
test
mov
dec
xlat
jle
mov
mov
push
mov
push
and
xor
mov
test
das
push
js
inc
movs
jg
sbb
stos
sub
sti
stos
sbb
inc
jbe
jle
xor
dec
fucomi
mov
and
pop
rcr
and
jg
into
xchg
sub
js
mov
sub
cmps
add
add
mov
inc
push
jae
sti
xor
ror
test
aas
sbb
sub
arpl
push
sbb
and
pop
add
inc
ss
sbb
sub
sbb
jp
and
pushf
mov
adc
fs
cdq
push
xlat
pop
imul
mov
iret
jecxz
pop
es
aas
sar
mov
add
mov
inc
xchg
jmp
jnp
push
(bad)
rcl
pop
sti
test
cwde
arpl
or
pop
out
inc
inc
sbb
daa
and
cmp
outs
and
and
into
mov
int3
xor
add
mov
cdq
mov
cmp
mov
dec
retf
add
and
jnp
jmp
ret
inc
pusha
scas
add
pop
sar
mov
test
jb
pop
inc
jbe
xchg
dec
rcl
jmp
(bad)
or
(bad)
jae
sbb
int3
push
mov
cmps
sbb
jne
pop
stc
shl
pop
xchg
sub
ss
ret
jns
jae
ins
adc
test
and
jbe
test
xchg
pop
(bad)
pushf
mov
adc
sbb
ds
test
lds
daa
scas
leave
push
jmp
cli
scas
mov
into
push
inc
xchg
mov
pop
jns
int3
ins
adc
fist
cld
sub
dec
(bad)
pop
xor
inc
(bad)
push
std
dec
pop
ss
hlt
or
lods
pop
nop
retf
les
int
mov
shl
sti
shr
stos
jbe
or
sub
fwait
push
aas
in
retf
aas
adc
jnp
push
and
sub
inc
cmps
and
inc
(bad)
lahf
jbe
aad
sbb
push
sub
sbb
mov
xlat
mov
cmovl
mov
mov
in
jp
inc
mov
xchg
dec
in
add
xchg
stos
retf
fwait
add
lock
mov
adc
imul
add
jge
test
bt
pop
xchg
js
loope
into
(bad)
js
adc
cmp
and
out
je
adc
popa
(bad)
sbb
je
pushf
inc
inc
popa
add
push
sub
repz
(bad)
cmps
loopne
cs
mov
in
mov
ret
pop
call
or
push
or
jle
test
xchg
stos
mov
lock
pop
mov
mov
mov
es
jbe
add
jp
push
movs
dec
bound
cdq
fnsave
dec
dec
ret
popa
mov
pop
nop
xchg
mov
lahf
fidiv
in
stc
and
loope
or
loopne
cmps
or
push
push
ret
imul
xchg
nop
and
jle
dec
popa
out
(bad)
xchg
(bad)
jmp
outs
add
test
dec
mov
mov
mov
mov
retf
lock
inc
mov
(bad)
mov
jbe
xor
(bad)
cmp
(bad)
xchg
lds
xor
nop
jae
leave
push
sub
mov
sbb
pop
add
xchg
cmp
sbb
jb
sub
xor
bnd
pop
sub
push
jmp
ss
dec
push
or
fcmovne
mov
mov
jmp
add
cmp
nop
jne
arpl
aam
sbb
inc
pop
push
(bad)
inc
imul
aad
push
adc
add
xchg
inc
test
movs
pop
push
out
xchg
and
and
ss
fucom
or
(bad)
lods
xchg
jl
push
inc
mov
and
in
retf
neg
jecxz
lock
test
sub
inc
call
mov
or
jae
test
mov
das
in
inc
das
mov
add
out
arpl
inc
mov
or
jl
xchg
iretw
xchg
xor
daa
in
test
aad
and
xlat
xchg
das
cmp
sub
xor
mov
xchg
movs
imul
push
mov
fcom
das
jge
ds
das
xor
dec
(bad)
dec
push
leave
cli
iret
aam
add
mov
icebp
mov
div
leave
leave
mov
adc
dec
mov
mov
jp
jmp
jo
mov
sub
adc
mov
pushf
psadbw
aad
sub
retf
xor
cmp
cli
ss
add
pop
xor
scas
and
(bad)
(bad)
cwde
movs
mov
push
and
jmp
or
mov
loope
and
es
xor
inc
stos
xor
enter
cmp
xchg
cmps
cmp
out
pusha
mov
daa
lods
push
mov
std
dec
mov
xchg
push
sub
scas
push
or
push
and
(bad)
adc
dec
or
xor
mov
pop
retf
jnp
xchg
push
das
cmp
test
push
dec
jmp
lods
in
adc
jg
pop
or
and
xchg
adc
jns
test
into
jo
out
dec
mov
ja
std
cmc
call
add
cmovl
xor
cwde
ja
add
(bad)
xchg
add
push
stc
mov
test
or
out
inc
aas
cmp
push
fs
addr16
test
xor
fadd
shl
dec
pop
stos
inc
cmp
mov
sbb
lods
and
pop
test
ret
adc
sub
jmp
inc
adc
xlat
push
out
(bad)
movs
pop
xor
fstp
call
xor
movs
mov
jl
sbb
retf
xor
cmp
inc
aam
or
ret
add
sub
xchg
jg
jns
pop
mov
lods
sbb
mov
repnz
int
pop
or
loopne
mov
jns
xrstor
push
jmp
xchg
shrd
push
retf
adc
fdivr
ds
(bad)
(bad)
adc
xchg
mov
adc
mov
push
bound
(bad)
xor
dec
or
cdq
test
mov
mov
xor
jns
imul
fmul
test
repz
pop
sub
out
test
in
iret
repnz
movs
cld
push
sahf
push
fs
push
adc
mov
xchg
cmp
mov
push
loopne
jle
dec
(bad)
out
push
jbe
push
jmp
mov
jmp
mov
test
loop
mov
test
sbb
into
das
mov
mov
add
xor
jp
into
clc
mov
sti
in
addr16
fst
mov
cli
or
push
jg
xlat
out
adc
pop
sub
loopne
fcomi
ret
sti
(bad)
mov
pop
or
fmul
hlt
fnstsw
inc
mov
ins
inc
xchg
shl
je
mov
rcl
pop
sti
mov
ffree
lea
rcl
sub
loop
jae
(bad)
cmp
mov
stos
repz
fwait
adc
push
cmp
cmp
into
sar
jecxz
not
scas
test
push
mov
hlt
push
outs
jp
ds
ret
or
jnp
pop
mov
mov
jmp
xor
jbe
fdecstp
mov
fcmovnbe
lahf
mov
ja
mov
test
mov
push
push
mov
dec
repnz
test
out
mov
mov
or
(bad)
mov
pop
xchg
jno
call
cli
arpl
std
dec
clc
loop
popa
jge
cmps
push
or
and
nop
ins
jne
out
jo
rol
xor
dec
pop
jecxz
cmc
xor
push
sbb
xchg
icebp
sbb
movs
call
nop
cmp
ds
adc
or
mov
add
aas
das
movs
pop
push
test
std
push
push
shl
dec
dec
imul
daa
jb
xchg
push
dec
inc
inc
retf
mov
imul
hlt
(bad)
(bad)
rcr
sub
pop
mov
or
je
repz
sbb
pop
int3
mov
imul
in
(bad)
in
ret
inc
fild
add
add
sub
retf
fdiv
mov
lock
sbb
ret
sbb
aaa
pusha
mov
cmp
dec
mov
dec
pop
cmps
mul
(bad)
pop
jae
fwait
gs
or
mov
jbe
sahf
mov
aad
fstp
imul
mov
sbb
ins
cmc
ss
imul
pusha
push
push
cmp
jl
sbb
push
xchg
and
aaa
xor
ins
mov
les
or
push
lods
test
jno
push
mov
ret
icebp
push
les
push
jl
test
mov
mov
cs
and
xor
jp
xor
stos
mov
inc
test
out
es
ret
(bad)
jmp
std
ret
retf
stos
push
pop
icebp
mov
pop
retf
cmp
dec
mov
xchg
dec
fst
add
add
mov
fmul
in
rcr
sbb
xsha256
cmps
xchg
or
jl
jl
cli
xchg
fidiv
das
(bad)
sahf
or
scas
cmp
aas
dec
pop
mov
xchg
jae
push
adc
mov
xor
jmp
inc
into
out
loope
ds
(bad)
push
mov
pop
fld
xchg
add
mov
jnp
sub
mov
das
adc
mov
mov
(bad)
and
sar
outs
sub
cmp
dec
xchg
adc
dec
add
mov
lds
xchg
shufps
push
or
scas
mov
scas
and
lods
jb
and
jmp
loop
dec
inc
movs
out
cwde
(bad)
dec
arpl
lds
jmp
mov
icebp
and
dec
es
push
stos
push
and
sbb
mov
xchg
imul
adc
push
js
push
ins
push
outs
data16
sar
rol
xchg
aad
repz
rep
retf
add
pop
sahf
mul
lds
add
xchg
or
push
scas
rol
fadd
rol
or
adc
mov
cmp
mov
adc
je
sub
jae
loop
jecxz
mov
xor
push
jne
stos
arpl
push
lock
fidivr
in
gs
daa
push
les
fcom
mov
loope
lea
mov
rol
add
and
add
jl
je
adc
or
add
and
xchg
in
sbb
inc
arpl
ret
not
aaa
pop
test
repz
or
sbb
adc
inc
aam
imul
iret
mov
add
pop
xchg
mov
sbb
dec
pop
das
dec
sahf
jmp
pop
push
test
movs
movs
lds
sub
(bad)
push
sub
xchg
icebp
ja
inc
jmp
mul
push
(bad)
mov
xor
fbld
idiv
mov
or
mov
fmul
or
jg
es
xchg
sub
dec
test
mov
mov
xchg
mov
aas
add
ror
jl
je
movs
retf
push
dec
add
sbb
div
jnp
dec
call
call
mov
push
cmc
test
ret
in
icebp
sbb
and
jno
aad
bnd
and
cwde
sahf
or
stos
and
mov
addr16
push
daa
jg
xor
std
(bad)
jl
test
xchg
cmp
cmp
lods
bound
fnstsw
cld
sbb
xor
xlat
stc
mov
mov
icebp
fs
xchg
mov
dec
jo
adc
outs
pop
pop
sub
lea
add
mov
shl
jne
cld
adc
xlat
sub
outs
xor
sbb
loope
cs
fs
hlt
or
rcr
xor
pop
es
in
sbb
mov
mov
mov
inc
dec
fst
stos
arpl
or
(bad)
lock
ret
test
sub
fcmovne
dec
sbb
retf
push
or
rcl
push
cli
addr16
lds
pop
fnsave
cdq
jo
sar
mov
rol
or
mov
rcl
pop
push
daa
dec
mov
mov
daa
mov
mov
xor
ins
sbb
cmp
pop
adc
rcr
push
cmc
and
stos
cmps
lods
pop
scas
outs
dec
iret
jne
adc
cld
sub
jb
or
mov
push
mov
ja
dec
repz
ds
xchg
fcmovb
shl
push
iretw
ret
jnp
imul
(bad)
adc
shl
shl
int3
pushf
call
or
enter
stos
mov
adc
mov
or
mov
or
push
iret
push
hlt
xchg
fnsave
fistp
pop
mov
ins
fs
pop
xor
xchg
rcl
push
daa
xchg
js
sti
mov
sbb
test
sbb
retf
iret
push
cs
(bad)
shr
fimul
mov
push
call
jl
shl
test
outs
mov
ins
cmp
or
or
fsubr
xchg
push
mov
enter
or
add
adc
ins
sbb
mov
imul
xchg
mov
adc
and
push
push
dec
popf
cmp
repz
push
push
jno
nop
mov
repz
into
dec
nop
pushf
push
repz
pop
pop
inc
mov
adc
clc
shl
mov
rcl
in
push
or
div
sub
dec
mov
cmp
mov
mov
fwait
xchg
mov
ss
fs
cmp
xchg
or
and
(bad)
inc
into
adc
outs
cdq
xlat
or
jae
xchg
das
xchg
xor
push
add
jne
(bad)
mov
push
push
push
daa
mov
push
fcomip
aaa
clc
inc
push
stos
adc
xchg
lea
ja
adc
inc
dec
dec
ret
js
mov
lea
sbb
ss
nop
mov
mov
fs
mov
int
call
xchg
xchg
repz
adc
and
enter
aaa
in
add
add
pop
xchg
stos
mov
cmp
das
inc
int3
in
push
outs
sar
clc
dec
push
(bad)
push
lods
aaa
mov
push
fmul
repnz
loopne
sbb
or
xor
jmp
inc
mov
inc
jbe
shl
aas
xlat
es
inc
mov
add
movs
aas
out
pusha
sbb
(bad)
xlat
stos
imul
stos
xor
mov
pop
cmp
adc
mov
stos
pop
mov
mov
push
cmp
scas
add
adc
and
sub
call
mov
test
test
ffreep
loope
lea
pop
scas
jb
add
xchg
(bad)
fist
adc
fmulp
inc
xchg
addr16
mov
jecxz
scas
fyl2x
mov
retf
stc
mov
xor
mov
and
add
test
loop
mov
sbb
mov
add
xor
jge
pop
sub
out
sbb
fcom
rcr
xchg
xchg
xor
ror
adc
aas
cld
mov
aaa
test
scas
mov
sub
je
int3
mov
and
ds
pop
packsswb
fnstcw
jo
xchg
pop
and
add
test
cmps
mov
sbb
lods
push
stos
mov
add
or
cmp
add
cld
or
cmps
in
cmp
or
xlat
(bad)
mov
loop
jo
jns
push
jle
inc
jae
mov
ss
stc
ds
xchg
aaa
leave
or
btr
mov
loopne
inc
jbe
loopne
or
test
mov
jg
xor
mov
popf
jle
jecxz
cmps
ror
ret
aad
pop
mov
add
xor
push
retf
outs
test
xchg
push
sub
aas
pushf
retf
jp
neg
sbb
xor
enter
sub
adc
push
fidivr
cmp
mov
cmps
add
sub
rcl
and
stos
xchg
cmp
sub
aaa
adc
add
jmp
or
xchg
aas
jmp
cmp
mov
dec
es
cs
cmp
lahf
jge
adc
mov
fnsetpm(287
(bad)
xlat
mov
popa
sbb
jmp
mov
jb
into
jl
fisttp
retf
mov
inc
adc
retf
cmc
mov
inc
xlat
aam
out
add
js
add
jl
pusha
fild
nop
adc
fistp
lods
mov
call
jae
inc
movs
sub
dec
mov
ss
xchg
call
fcomp
pop
test
rcr
mov
mov
pop
mov
std
test
add
call
dec
inc
stos
pop
(bad)
mov
mov
mov
gs
mov
das
mov
neg
cmp
and
inc
(bad)
and
inc
fst
hlt
in
sbb
stos
inc
mov
je
mov
retf
(bad)
mov
jo
jge
movs
cmps
call
add
xchg
das
inc
sub
adc
cmps
test
ror
ins
pop
dec
mov
addr16
inc
scas
and
test
push
jbe
enter
push
xchg
sbb
add
mov
mov
cld
call
test
imul
inc
dec
or
jo
ret
enter
dec
push
push
or
xchg
es
dec
sahf
adc
sub
int3
ins
div
mov
aam
shl
ss
ins
dec
cli
dec
and
inc
ret
ja
mov
enter
add
test
loop
call
(bad)
iret
sub
scas
mov
jge
pop
sub
mov
add
jo
lds
add
adc
jl
cmps
mov
pop
add
rcr
or
adc
mov
and
pop
xchg
jg
js
sbb
lock
je
sbb
and
(bad)
daa
xlat
lods
push
jne
lods
cmp
sub
push
mov
stos
cmp
loopne
jae
xchg
cmp
cmp
jno
add
test
sti
mov
add
repz
dec
push
jge
pop
dec
jbe
int3
mov
push
fidivr
xor
scas
daa
push
lods
mov
sub
mov
scas
js
das
js
mov
test
stos
xchg
js
xchg
mov
xlat
mov
or
or
rcr
pop
mov
adc
pop
(bad)
mov
cwde
push
cs
dec
cmps
mov
xchg
scas
sub
stos
pop
(bad)
daa
push
retf
cmps
push
data16
push
xor
sbb
in
lods
lods
leave
xor
jg
stc
lea
inc
mov
enter
ror
dec
inc
ins
and
mov
std
iret
pop
cmp
clc
daa
daa
pusha
mov
lock
jecxz
imul
aas
cmp
xchg
push
push
scas
inc
ins
cmp
repz
lock
xchg
jecxz
idiv
call
dec
add
pop
fld
and
jns
int
xor
adc
mov
jbe
test
sub
dec
paddd
shl
and
rcl
xchg
inc
add
loop
cmp
repnz
repnz
adc
leave
mov
aas
(bad)
mov
dec
mov
int3
out
ja
cmp
pop
leave
jno
movs
fs
(bad)
xor
(bad)
mov
jge
inc
push
lea
(bad)
sub
push
push
fcmovnb
or
cmp
xlat
xlat
jle
jecxz
dec
pop
sbb
xchg
pop
xor
loope
sub
stc
das
test
mov
iret
jmp
sbb
lock
dec
ss
push
inc
test
mov
ins
or
pop
call
data16
stos
addr16
mov
jp
retf
cwde
mov
mov
test
imul
les
fwait
inc
data16
pop
call
pop
imul
jge
loope
sbb
push
inc
sbb
(bad)
mov
das
xor
aas
ret
jg
sahf
ret
inc
outs
iret
enter
sub
add
and
mov
xchg
add
mov
push
iret
std
cmp
imul
add
pushf
mov
ror
or
loopne
xor
add
xchg
ffree
test
nop
pop
ss
retf
ins
mov
push
adc
jbe
int
(bad)
mov
arpl
leave
lods
int3
popf
push
push
retf
div
pop
out
mul
mov
push
mov
jge
sbb
mov
push
push
jmp
cmp
inc
sub
faddp
les
arpl
sub
and
ins
push
aas
xchg
arpl
push
push
(bad)
(bad)
mov
mov
mov
pop
sub
sub
add
repz
and
fs
push
pusha
xchg
int3
xchg
mov
xchg
(bad)
call
scas
movs
xchg
sbb
push
icebp
fstp
push
call
xchg
inc
jb
or
pop
and
adc
jmp
mov
dec
sbb
rol
or
mov
(bad)
shl
cmp
jbe
push
fistp
call
ret
dec
(bad)
popf
pop
dec
loope
retf
adc
dec
mov
bound
push
sub
xor
mov
mov
sbb
and
(bad)
xchg
push
push
inc
ret
hlt
dec
sahf
test
(bad)
enter
add
out
push
push
mov
retf
xlat
mov
dec
ret
hlt
jle
aas
mov
push
sbb
jl
adc
lds
push
xchg
loope
pop
jno
inc
add
imul
xchg
js
aad
add
sub
test
xor
(bad)
jmp
mov
call
jo
inc
xlat
fist
ja
das
push
jmp
cs
mov
dec
mov
mov
mov
xor
mov
mov
push
xchg
mov
cld
addr16
adc
outs
(bad)
daa
push
out
shl
cs
pop
mov
dec
xchg
jne
adc
ror
push
lock
and
(bad)
jb
xchg
repnz
or
loope
ret
xor
mov
fcom
mov
pop
sub
cld
div
test
jno
ret
push
(bad)
repnz
pop
aam
out
pushf
call
add
dec
cli
push
inc
or
mov
fnstenv
test
pop
imul
ficomp
add
dec
push
inc
pop
lea
mov
xchg
mov
pop
dec
adc
xor
mov
push
stos
inc
stos
mov
mov
scas
into
scas
retf
xor
push
cmp
jmp
mov
movs
nop
adc
lods
add
xchg
mov
jg
(bad)
mul
loope
jne
aaa
(bad)
mov
or
add
adc
ja
and
imul
rcl
imul
sub
adc
ins
stos
(bad)
loope
jne
mov
inc
inc
mov
pop
imul
call
imul
jecxz
(bad)
pop
scas
jne
call
scas
xor
(bad)
retf
lahf
cmp
shr
or
pop
xchg
dec
retf
mov
stc
jmp
adc
mov
xor
sahf
ds
pop
sub
addr16
jae
or
or
lods
jg
push
aas
push
mov
(bad)
fwait
test
aaa
mov
cmp
lahf
popf
xchg
dec
inc
jno
fisubr
fs
imul
xchg
adc
rcr
xor
sar
das
cmp
pop
xor
pop
pop
xchg
(bad)
lods
xchg
out
push
dec
cmp
or
or
scas
push
lahf
sub
push
in
xlat
movs
or
jecxz
mov
cs
test
add
mov
pop
pop
adc
xchg
xor
push
pop
mov
xor
or
jmp
sar
add
test
xchg
jae
xchg
daa
repz
pop
(bad)
mov
shl
and
dec
test
shl
add
out
(bad)
mul
shl
pop
js
or
icebp
arpl
or
imul
adc
push
ins
jae
outs
out
in
jne
cmp
xchg
retf
pop
lea
stos
push
dec
(bad)
lock
inc
sub
pop
inc
jae
movs
mov
and
iret
jmp
ins
mov
push
jno
(bad)
xor
push
movs
xor
jne
imul
mov
pop
sub
push
sbb
call
(bad)
add
mov
cmps
pop
fwait
push
xchg
xchg
jg
icebp
(bad)
mov
dec
loope
xor
repnz
bswap
dec
jne
lods
dec
push
mov
into
sbb
push
sub
es
stos
and
imul
fstp
out
movs
push
bound
sbb
movs
shr
cmp
and
xchg
das
pop
push
ds
clc
mov
fsubr
jo
rcr
sub
xor
arpl
pusha
lock
movs
mov
ds
inc
push
sub
cmp
scas
pop
xchg
push
and
popf
xchg
jb
out
out
mov
cmp
int
inc
or
or
mov
scas
aam
and
leave
std
push
or
fisttp
aas
push
add
ret
mov
and
loopne
xchg
arpl
(bad)
stos
ins
inc
pushf
adc
addr16
mov
pop
pusha
dec
jge
sub
inc
dec
mov
add
sbb
(bad)
add
test
push
xchg
sub
pop
xchg
shl
sub
and
scas
and
stc
jne
mov
inc
nop
push
dec
dec
in
xchg
xor
push
leave
aad
lock
mov
arpl
mov
inc
popf
(bad)
out
add
repz
inc
cmp
dec
add
push
sahf
scas
loopne
aad
mov
mov
or
pop
out
jle
mov
jmp
cli
and
or
dec
ror
dec
mov
push
and
stc
in
xor
test
inc
xor
out
cmp
pop
mov
or
(bad)
jmp
xor
pop
es
fcomp
or
test
clc
xchg
xor
push
push
sbb
pop
ja
jno
movs
mov
push
lock
imul
stos
mov
mov
shr
mov
mov
xchg
xor
aam
nop
jg
mov
pop
arpl
in
jmp
fwait
push
jmp
retf
push
leave
imul
imul
sbb
ins
jo
jmp
xor
rcl
(bad)
cdq
xchg
sti
and
test
push
mov
inc
(bad)
sub
xchg
mov
out
adc
or
sti
(bad)
mov
fcomip
inc
mov
ja
jmp
and
dec
or
push
repz
loop
and
mov
bound
cmp
not
icebp
cmp
mov
mov
mov
(bad)
cs
call
dec
xor
ja
iret
std
ins
mov
pop
jp
push
clc
xchg
adc
pushf
inc
test
lock
int3
out
lds
lock
inc
and
xchg
dec
and
shl
xchg
push
into
ss
jecxz
add
xor
(bad)
fstp
cld
inc
test
hlt
cmc
dec
sub
aad
add
stc
mov
mov
xchg
scas
mov
lds
adc
mov
pop
dec
dec
jmp
mov
repnz
or
iret
inc
cmp
rcl
in
mov
mov
mov
and
sbb
fld
push
dec
addr16
stos
stos
rcl
dec
mov
ret
or
xor
jp
imul
or
das
pop
pop
xor
outs
jg
or
or
into
dec
jge
lds
ins
mov
push
fimul
or
imul
mov
inc
fsubrp
aas
xchg
mov
inc
bnd
jge
hlt
xchg
inc
pop
add
lds
shl
mov
sbb
add
xchg
shr
mov
int3
push
es
bound
call
mov
push
xor
retf
ins
loop
aaa
in
retf
xchg
xchg
(bad)
mov
scas
jno
(bad)
retf
outs
cdq
or
fisub
mov
jns
stos
ror
cld
inc
xor
(bad)
aam
sahf
jmp
and
xchg
mov
mov
test
xchg
xor
aam
fst
call
imul
scas
inc
push
push
fcmovnbe
mov
jmp
shl
cmp
push
test
push
rcl
jl
cdq
repnz
inc
adc
jecxz
ror
or
pop
pop
adc
xor
(bad)
aad
shr
xchg
xchg
enter
adc
ret
repz
lds
(bad)
into
hlt
(bad)
aas
pop
xchg
xor
out
(bad)
inc
fs
sbb
push
nop
dec
(bad)
xor
cs
xchg
jmp
jl
sub
mov
movs
sahf
ror
dec
sbb
mov
or
scas
mov
mov
sti
enter
or
xchg
mov
popfw
cmp
push
mov
mov
fisubr
adc
dec
xchg
jno
das
imul
mov
cmp
and
mov
mov
or
mov
fwait
iret
loope
mov
(bad)
outs
fs
ror
(bad)
jbe
ja
lods
mov
mov
mov
retf
fisub
je
ret
and
fsubrp
or
ror
ss
or
inc
ret
push
int
shr
cmp
cmp
jge
ja
sbb
xchg
mov
movs
mov
mov
mov
push
jae
outs
les
add
clc
add
js
mov
test
adc
mov
push
repnz
fimul
repz
inc
or
mov
popa
out
xchg
pop
cmp
mov
cli
repz
fst
ret
inc
test
aad
jecxz
jb
mov
out
ins
push
rcl
dec
xchg
ins
ficomp
mov
add
push
lock
mov
sar
mov
jge
mov
xchg
lock
test
popf
scas
scas
ds
aaa
inc
test
les
ficomp
leave
out
cli
xor
and
add
adc
hlt
outs
cwde
inc
stc
add
jne
fild
fwait
in
je
scas
mov
jg
in
lea
arpl
sub
call
add
xchg
mov
repnz
test
retf
es
sti
inc
imul
jecxz
clc
jae
cwde
mov
mov
scas
xchg
xchg
dec
fwait
addr16
push
inc
out
xchg
xchg
shl
call
pop
inc
addr16
mov
sbb
xchg
out
adc
pop
push
jo
fmul
pop
cmps
(bad)
mov
xchg
pop
ret
jp
mov
mov
out
jno
adc
pusha
cdq
sub
cmp
fist
mov
xchg
jnp
cmps
dec
mov
sub
mov
dec
fsubr
push
ds
xor
jecxz
sub
icebp
fistp
xlat
sub
xor
pop
ffree
xchg
into
mov
pop
in
jno
add
fsub
jne
std
pop
xor
sbb
stos
(bad)
and
hlt
jmp
mov
jb
push
jbe
pop
sub
mov
push
push
jg
scas
retf
mov
movs
lahf
(bad)
pop
jle
sub
call
daa
inc
(bad)
lock
pop
jle
fucomip
cmps
pop
jl
movs
and
or
call
std
pop
leave
push
das
movs
xchg
dec
push
dec
(bad)
xlat
jle
jg
mov
or
inc
xor
fs
lea
cmps
repnz
ds
ins
dec
mov
xor
and
in
jns
xor
sbb
loope
mov
pop
push
and
and
xor
enter
add
icebp
sbb
mov
jp
inc
sbb
sub
popf
pop
hlt
(bad)
stc
jl
sti
jl
ja
or
sar
(bad)
add
push
imul
mov
add
in
jl
(bad)
inc
sub
daa
dec
aam
sbb
je
push
das
out
pop
mov
dec
mov
adc
push
shl
cs
xchg
ss
inc
jns
movs
jo
scas
xchg
push
mov
daa
push
jg
out
test
retf
pop
(bad)
mov
jmp
mov
std
(bad)
scas
imul
xchg
and
inc
jns
lods
retf
scas
pop
repz
mov
(bad)
inc
mov
or
(bad)
out
shl
pop
das
ffreep
xchg
xchg
inc
cmc
jb
cmp
neg
(bad)
pusha
mov
sbb
mov
pop
sbb
(bad)
sbb
addr16
js
push
(bad)
das
fs
sbb
popa
dec
leave
xor
ror
add
pop
xchg
(bad)
push
out
scas
xchg
add
out
add
(bad)
aam
imul
mov
adc
cmps
jg
inc
xchg
xchg
push
out
or
mov
jnp
jmp
dec
stos
sub
push
shl
add
aaa
mov
jmp
cmps
das
outs
sar
ret
imul
fnstsw
out
push
xor
test
fist
fsubr
pop
bnd
or
jns
add
test
jmp
pushf
or
es
out
(bad)
mov
outs
inc
ds
and
cmp
dec
lods
inc
in
mov
sbb
and
imul
sub
mov
retf
sub
push
repz
imul
push
call
ja
pop
mov
stc
mov
dec
fsub
in
dec
nop
add
nop
mov
jle
stos
dec
xchg
cwde
sbb
dec
lds
inc
mov
test
dec
mov
add
or
movs
test
jecxz
pop
push
xlat
inc
hlt
outs
mov
or
nop
cdq
mov
call
fstp
mov
mov
stos
or
les
mov
dec
mov
mov
ret
and
or
aaa
cmp
sub
push
nop
ja
dec
push
cmp
add
xchg
jns
pop
inc
ins
jno
inc
xchg
pop
jae
cmp
inc
and
push
push
jne
dec
loop
push
nop
sub
pop
imul
push
mov
popf
ss
cmp
dec
mov
mov
idiv
push
fld
neg
call
mov
xor
shr
movs
sub
int3
mov
aam
mov
ss
jmp
out
imul
stos
pop
add
pop
push
and
push
add
sti
shl
stos
push
fild
bound
nop
imul
mov
cmp
adc
push
stos
push
stos
cmps
inc
mov
stos
inc
xchg
xchg
xor
add
(bad)
mov
fwait
stos
ret
cmp
out
xchg
mov
sti
(bad)
jecxz
mov
pop
or
imul
mov
popf
cli
shr
xlat
jns
cmp
push
daa
sub
test
mov
dec
xchg
retf
in
aas
xchg
pop
lea
scas
shl
retw
xchg
or
xor
test
dec
mov
movs
mov
lock
pop
cli
(bad)
jns
dec
cmps
mov
retf
jmp
sbb
jb
fcomp
dec
jb
lods
aas
mov
outs
in
jno
mov
cs
mov
xor
mov
ret
test
xchg
adc
cmp
cmp
icebp
jmp
pushf
pop
xor
data16
add
fwait
in
lods
scas
adc
or
ret
rcr
or
sahf
pusha
mov
stos
fwait
popa
int
sbb
pop
data16
fidiv
sbb
cmp
sahf
push
xor
clc
aaa
rol
push
push
inc
push
xchg
test
outs
(bad)
xchg
div
jl
or
xchg
stos
in
div
push
mov
fbstp
mov
scas
sbb
outs
xchg
add
dec
stos
dec
mov
scas
imul
inc
pushf
fiadd
div
xor
add
ins
xchg
or
and
xor
rcr
adc
loope
adc
jae
and
sti
cmp
sub
cmps
inc
mov
lds
enter
inc
mov
data16
mov
sbb
cmp
stc
stc
bound
sbb
out
dec
sub
addr16
cld
pop
ds
mov
mov
into
push
es
cmp
push
mov
pop
xor
cdq
movs
xchg
mov
bnd
bound
mov
aas
add
add
call
add
mov
imul
add
pop
stos
(bad)
jmp
push
(bad)
aas
sbb
outs
hlt
aaa
(bad)
sbb
repz
jge
dec
or
mov
mov
aas
sbb
into
out
and
mov
push
inc
xchg
(bad)
lock
add
sub
xchg
cld
cmps
ins
dec
mov
out
test
sbb
push
loope
ror
pop
daa
or
inc
fwait
sub
add
lds
(bad)
std
mov
test
xor
mov
test
adc
shr
cmp
mov
lock
or
mov
push
inc
sub
icebp
jmp
jg
mov
leave
lds
addr16
dec
mov
out
sbb
add
sbb
add
fidiv
int
(bad)
mov
xlat
sub
cs
mov
or
test
mov
test
repnz
xor
(bad)
mov
sbb
jecxz
xor
dec
hlt
pop
push
test
and
jle
mov
pop
push
shl
or
xor
push
test
inc
cmp
mov
cmp
or
jne
sbb
dec
repnz
sbb
and
sbb
out
pushf
(bad)
pop
xchg
data16
sbb
cmp
pushf
jae
push
stc
cmp
sub
adc
cld
cs
ror
lahf
jno
push
pop
sub
dec
pop
xlat
inc
sub
mov
xor
sub
mov
jle
daa
pop
aad
js
jmp
sbb
jmp
cmps
nop
add
stos
adc
lds
push
or
jno
test
and
imul
inc
dec
mov
sar
inc
adc
mov
sbb
sbb
sub
mov
mov
fdivr
mov
mov
das
retf
xchg
jge
rcl
pop
pop
xor
dec
std
pop
push
mov
arpl
push
mov
inc
mov
scas
jge
xlat
push
lds
and
cmp
push
icebp
imul
push
mov
loopne
mov
add
lods
das
outs
repz
test
add
lds
push
imul
or
mov
call
retf
sub
stc
mov
mov
repnz
mov
div
retf
ret
pop
pusha
dec
mov
cmp
push
fadd
pop
test
inc
pop
fistp
pop
rol
movs
fmul
test
sub
or
retf
add
pop
ficom
sbb
retf
call
aaa
lods
sub
or
stos
pop
jl
or
scas
and
cmp
aaa
ja
and
nop
clc
inc
inc
or
es
adc
sti
push
add
je
inc
ds
imul
(bad)
xchg
push
sti
inc
aad
xor
add
sbb
in
scas
sbb
rcr
xor
add
pop
shl
into
inc
in
inc
loopne
(bad)
movs
retf
imul
push
jo
inc
inc
jmp
out
fisubr
dec
jbe
add
adc
push
xchg
sub
inc
push
push
ret
or
pop
test
pop
sub
cmps
sub
je
mov
xchg
dec
mov
out
retf
mov
enter
or
fisubr
movs
xor
push
jge
cmp
jle
out
into
sub
loope
pop
fist
mov
mov
xor
jmp
ss
sub
sahf
or
das
retf
mov
ins
adc
jmp
xchg
mov
dec
mov
in
push
sbb
inc
shl
adc
retf
imul
add
or
or
mov
addr16
inc
pop
cmp
pop
scas
jmp
sbb
sub
div
aam
jg
add
stos
jl
xchg
aad
inc
sbb
enter
cld
xchg
nop
jno
sub
loopne
jno
enter
ja
inc
xchg
daa
stc
retf
stos
jle
xchg
or
adc
lods
nop
cmp
push
pop
xchg
inc
xchg
dec
push
aam
mov
adc
aad
bound
and
add
repnz
aad
pop
or
les
out
pop
aas
xchg
xlat
fmul
jle
mov
(bad)
jo
push
sbb
inc
aas
sbb
and
sbb
fistp
test
scas
cmp
loope
or
jae
xchg
push
sub
aas
daa
jne
outs
adc
shr
mov
dec
div
adc
xchg
les
or
scas
fimul
pop
shr
addr16
ret
add
cmps
fwait
popa
sub
cs
mov
mov
dec
loop
popf
pop
jnp
push
dec
fs
jo
dec
sbb
mov
call
(bad)
imul
or
repnz
mov
inc
push
rcr
rol
loop
xchg
call
or
int
repnz
sbb
mov
xchg
pop
je
loopne
(bad)
fs
xchg
add
add
mov
sbb
mov
into
iret
in
sbb
mov
cld
or
mov
leave
add
dec
cmp
mov
mov
pop
add
rcr
and
add
and
dec
adc
mov
das
cwde
jb
nop
xchg
pop
fcom
pop
dec
mov
fnclex
movs
jge
mov
js
ret
jl
xchg
inc
(bad)
std
sub
cmp
sbb
dec
sbb
cmp
mov
lahf
jge
jmp
stos
stc
add
retf
repnz
pop
sbb
hlt
jmp
dec
loope
or
jle
arpl
sbb
mov
mov
inc
push
pop
jmp
jecxz
cmp
jmp
in
jmp
ds
ja
mov
jbe
push
dec
(bad)
out
jmp
add
je
out
pushf
sbb
xor
cmp
lea
pop
xchg
fcom
jno
xchg
sti
mov
pop
push
or
mov
(bad)
mov
(bad)
ret
mov
or
into
shl
push
fimul
daa
sub
xchg
daa
push
push
daa
and
(bad)
adc
shl
popf
cmps
loope
cmps
repz
pop
mov
sbb
shl
int3
xchg
dec
imul
call
test
popf
sub
and
ror
out
retf
popa
push
push
xor
and
pop
addr16
dec
arpl
rcl
es
fmul
ins
jmp
mov
repz
fdivr
fisttp
adc
add
mov
xchg
or
test
jo
xor
push
cmp
jecxz
or
lods
push
lock
mov
inc
add
ror
jns
jp
adc
add
stc
mov
dec
jae
push
push
jg
mov
(bad)
cmps
adc
iret
mov
cmp
or
jae
mov
in
push
data16
dec
shl
loope
and
fisubr
aaa
inc
add
adc
sbb
jns
fsubr
adc
xor
movs
imul
cmps
jae
and
or
or
in
int
jmp
cdq
test
jne
push
inc
ss
setg
fcomp
xor
mov
call
pop
mov
out
or
jl
push
dec
mov
jp
sbb
xchg
aad
mov
jns
inc
jno
dec
or
es
cwde
stc
pushf
sbb
in
(bad)
out
fs
sbb
add
sbb
dec
dec
lods
rol
mov
stos
or
jp
sub
adc
shl
pop
int
inc
fisttp
sub
mov
pusha
stos
mov
cld
xchg
out
ret
mov
mov
aam
sub
dec
adc
pop
inc
mov
clc
dec
adc
inc
pop
pop
sbb
dec
jmp
jb
test
stc
jg
sub
fdivr
or
jecxz
inc
cmp
xlat
lock
xor
cmp
in
scas
push
fucomi
cs
push
and
and
addr16
inc
add
dec
fwait
xor
or
dec
stos
call
sub
inc
jno
nop
mov
mov
sar
and
or
jns
aas
sbb
hlt
pop
cld
loop
sub
(bad)
mov
jns
push
outs
cmp
(bad)
int3
sbb
pop
imul
jle
das
sub
hlt
lds
into
mov
mov
imul
jbe
ja
daa
(bad)
adc
or
gs
mov
sub
into
loopne
shl
inc
mov
jg
int3
(bad)
jne
sar
or
outs
movs
xlat
sub
adc
out
out
mov
pop
ror
retf
xor
xchg
stos
or
test
add
loope
jnp
push
adc
test
fisttp
push
mov
pop
in
push
mov
pop
mov
push
in
jb
call
jl
lds
int
push
ds
inc
push
add
inc
dec
leave
retf
ja
mov
(bad)
adc
aam
jmp
cmp
xchg
ja
push
enter
ss
lods
(bad)
jnp
jae
fwait
inc
rol
test
jg
ror
subps
dec
mov
cmp
push
fld
inc
ins
pop
(bad)
gs
aam
popf
test
sbb
sar
pop
inc
mov
test
out
ja
push
fnsave
mov
arpl
lea
xchg
(bad)
jo
and
call
cmp
mov
repz
mov
dec
add
repnz
push
enter
add
inc
push
repnz
aam
popf
in
stos
retf
nop
or
cmp
or
xchg
aas
and
mov
mov
in
ds
sub
sub
ret
mov
ss
push
dec
sbb
mov
int3
dec
test
or
rcl
fild
adc
aas
cmp
push
lock
xchg
pop
sahf
sbb
test
and
mov
nop
ret
nop
inc
sbb
sub
(bad)
bnd
jmp
jno
dec
dec
and
jmp
and
add
mov
es
sbb
sub
sti
mov
imul
lods
out
mov
lock
xchg
icebp
xchg
mov
inc
mov
push
sahf
cmps
lahf
mov
xchg
inc
das
mov
pop
repz
cmc
cmp
pop
and
in
aaa
xchg
sub
sub
out
cs
arpl
sbb
loope
test
cmp
push
add
push
add
inc
pop
retf
dec
jmp
xor
in
push
dec
xchg
inc
ds
dec
or
jecxz
add
or
aas
jns
xor
shl
adc
sub
jmp
sub
into
sbb
sbb
push
push
add
push
xchg
sub
sub
icebp
call
jecxz
(bad)
icebp
popf
sbb
je
xchg
clc
vmulsd
add
repz
(bad)
sti
dec
lock
adc
xlat
outs
add
aas
in
leave
inc
inc
inc
je
ficom
popa
movs
retf
xchg
sub
sbb
inc
movs
aaa
xor
mov
std
sbb
add
jnp
leave
mov
push
adc
push
(bad)
setne
push
mov
ret
xchg
imul
mov
movs
in
pop
pushf
(bad)
hlt
fs
xchg
and
push
cmps
add
mov
(bad)
mov
jg
mov
jle
and
mov
jmp
int
dec
or
and
jno
jne
add
dec
fs
mov
push
pop
icebp
jmp
mov
lods
in
int3
out
jg
lods
pop
rcl
aam
lock
cmps
stc
xchg
inc
outs
fst
adc
push
in
xchg
data16
ficomp
out
inc
inc
(bad)
xchg
enter
cmp
mov
xchg
arpl
repnz
mov
into
mov
aaa
sub
cmp
push
sbb
dec
dec
cmp
repz
sti
xchg
pop
mov
add
pop
or
sti
and
sbb
mov
mov
and
jl
sub
xchg
(bad)
(bad)
dec
pop
mov
sahf
dec
jmp
push
mov
jae
nop
ja
xchg
sbb
xchg
mov
jle
xchg
sbb
js
shl
(bad)
mov
add
push
das
jp
or
mov
xchg
sub
ret
je
mov
ins
mov
push
nop
outs
fwait
lds
mov
and
enter
xor
cmp
add
add
iret
pop
lock
dec
pop
cwde
lods
jbe
mov
mov
jae
jno
xchg
mov
or
jae
jns
jno
fwait
(bad)
scas
lahf
ja
mov
mov
inc
test
gs
xchg
add
imul
outs
dec
loop
adc
xchg
mov
jl
inc
scas
adc
xchg
leave
or
repnz
cmps
mov
or
adc
fsub
push
adc
mov
mov
cmp
ja
rol
loopne
loope
push
leave
dec
jno
scas
enter
test
popf
mov
imul
call
pop
nop
fcomp
add
sub
fisttp
inc
pop
xor
out
mov
jg
add
mov
adc
mov
inc
cs
dec
(bad)
push
xor
outs
mov
ss
or
ret
push
scas
dec
stos
and
cmp
mov
lods
aas
mov
adc
pop
lock
sub
fiadd
dec
pop
test
into
jmp
cli
movs
add
mov
mov
(bad)
and
push
and
int3
sbb
mov
pop
or
adc
daa
pop
xor
pop
inc
push
dec
xor
cbw
xchg
or
daa
dec
dec
(bad)
addr16
mov
mov
jl
or
xor
dec
mov
adc
stos
cs
inc
loop
call
jle
pop
repz
int
inc
pop
push
xor
(bad)
fwait
cwde
jmp
shl
cmp
enter
stos
push
aad
mov
pop
push
scas
lock
fistp
lock
inc
js
fisttp
or
cmp
aaa
ss
cmp
lahf
pop
sub
xchg
out
sub
dec
loope
not
data16
mov
jne
ret
jo
fist
leave
sbb
(bad)
call
ins
jmp
inc
aad
or
fsub
(bad)
aas
mov
push
scas
dec
(bad)
wbinvd
in
xchg
xchg
inc
mov
mov
push
and
and
pop
mov
pop
call
ss
jns
aas
fld
lock
sub
rcl
and
ins
xchg
mov
jae
jo
aam
fcmove
mov
mov
cmp
and
jp
int3
out
push
adc
addr16
repnz
ror
fs
hlt
jmp
push
(bad)
jp
mov
data16
sub
cdq
push
test
dec
fcom
in
xchg
or
test
xchg
or
dec
shr
call
inc
and
sbb
sbb
std
or
out
add
aad
sbb
pop
or
and
mov
into
sahf
sti
cdq
ficomp
jl
inc
push
or
call
xor
out
ret
mov
xor
ins
mov
xor
sti
inc
or
mov
sub
gs
xlat
push
iret
rcl
push
pusha
and
push
push
mov
(bad)
push
and
shl
mov
xor
push
pop
mov
mov
shl
inc
dec
cmp
loop
cmp
jno
xchg
das
ins
mov
(bad)
lock
imul
mov
pop
fld
in
(bad)
(bad)
aas
and
inc
scas
pop
mov
or
stos
pop
movs
repz
and
jmp
mov
xchg
test
stos
js
shl
cmp
xor
inc
aam
scas
push
mov
ficomp
cdq
sbb
mov
imul
jp
pop
into
(bad)
bt
mov
jae
sbb
push
out
mov
mov
mov
jp
jmp
pusha
popa
fwait
out
out
sub
mov
idiv
test
mov
int3
inc
cmp
outs
repz
inc
stos
inc
fdiv
nop
mov
sbb
sub
dec
imul
mov
or
dec
jge
mov
retf
cmp
add
pop
je
xor
adc
sbb
jmp
in
mov
fstp
adc
daa
scas
xor
aad
or
imul
mov
shl
pop
mov
iret
retf
std
mov
pop
je
in
fwait
leave
lods
sub
into
repnz
push
hlt
pop
into
jnp
(bad)
mov
mov
push
mov
mov
into
xor
jb
cwde
popa
into
sbb
jno
fbld
sub
cmp
xchg
jge
retf
dec
addr16
bound
sub
mov
icebp
inc
fdivr
pop
push
cdq
retf
test
and
loop
iret
addr16
mov
push
mov
sub
push
pop
lock
pushf
jne
outs
fisub
out
cwde
arpl
popa
cmps
into
add
ss
jl
outs
es
std
adc
adc
pop
lds
add
shr
popf
jne
or
push
retf
jae
push
fs
push
ds
sub
hlt
xlat
jb
mov
xor
sahf
shr
xor
stos
mov
push
rcl
imul
mov
xor
push
int
scas
and
ret
add
sbb
sub
dec
add
loopne
inc
aas
xchg
call
imul
or
aam
js
pop
jl
hlt
mov
mov
clc
pop
fiadd
out
xchg
addr16
and
dec
and
int3
ja
mov
in
iret
adc
or
(bad)
xlat
dec
cmp
xor
cld
(bad)
daa
inc
stos
mov
popa
add
jnp
dec
iret
or
retf
mov
mov
mov
inc
add
xchg
push
pop
(bad)
sar
add
mov
mov
shl
dec
xchg
xor
and
xor
scas
push
pop
(bad)
std
xor
les
push
mov
xchg
mov
pop
and
inc
xlat
inc
iret
std
test
aad
mov
lock
push
push
push
les
(bad)
and
dec
out
fwait
cld
dec
icebp
shr
lods
jne
cmc
not
pop
daa
sbb
je
inc
or
push
nop
push
jno
dec
adc
push
repnz
and
mov
mov
(bad)
sub
sbb
mov
icebp
(bad)
mov
adc
inc
jbe
cmps
jo
(bad)
das
into
mov
xchg
mov
call
mov
jno
stc
xchg
xchg
mov
or
jg
stos
jnp
push
push
sub
xor
cmp
ficom
push
rcr
scas
push
mov
jno
movs
imul
pop
xchg
vpand
jmp
neg
cmp
iret
mov
icebp
mov
adc
sub
cld
jae
inc
adc
mul
jmp
xor
pop
jle
or
mov
pop
stos
leave
loope
dec
pop
pop
test
(bad)
test
aad
jne
rcl
adc
fiadd
xchg
jg
pusha
mov
fsubr
dec
mov
das
or
mov
std
jo
adc
xchg
inc
das
or
pushf
dec
add
dec
test
xor
pop
inc
push
mov
xchg
mov
xchg
repz
add
pop
out
adc
jmp
sbb
les
fs
ror
std
outs
mov
push
cmp
jo
scas
xor
cmps
add
pop
es
repnz
fwait
sub
(bad)
lds
sbb
loopne
xor
call
jecxz
stos
push
in
std
pop
pop
mov
cmc
inc
add
into
lods
lea
cmp
in
mov
pop
out
movs
adc
retf
mov
fmul
hlt
sbb
mov
iret
js
jle
and
mov
scas
jmp
or
jg
mov
dec
xchg
mov
pop
push
xor
or
shl
enter
icebp
test
cdq
dec
cmp
xor
add
push
(bad)
shr
sbb
adc
jmp
mov
retf
scas
sbb
jno
bts
pusha
popf
jecxz
scas
stos
add
rcl
inc
push
sub
xchg
ja
rcr
push
mov
or
add
xor
jmp
cmp
lea
sti
mov
cli
dec
lea
ret
xchg
rol
mov
xor
mov
call
mov
or
inc
and
lock
jns
sbb
cmps
ret
stos
and
sar
adc
fdivr
xor
or
or
cmp
test
jo
mov
or
ret
and
add
jnp
cmp
add
inc
les
scas
setno
mov
inc
pop
shl
sub
in
jmp
add
fwait
mov
inc
call
(bad)
iret
push
push
add
test
outs
pop
daa
not
int3
pop
in
sub
out
stc
das
adc
shl
inc
ret
mov
sti
xlat
fsubr
fmul
sbb
aaa
sti
imul
imul
xchg
dec
ss
icebp
sti
add
sti
iret
jmp
cli
jge
push
inc
outs
xor
mov
(bad)
out
test
data16
cwde
or
push
push
es
adc
arpl
retf
das
mov
(bad)
add
lods
aam
pop
mov
shl
aaa
adc
push
mov
inc
popa
add
fwait
inc
sbb
inc
imul
pop
xchg
xchg
out
or
adc
xchg
ins
adc
test
fisub
mov
jl
or
xchg
xor
ds
or
cld
push
repz
fdiv
add
hlt
adc
ds
push
(bad)
scas
inc
bound
adc
mov
mov
and
inc
mov
retw
clc
dec
retf
and
jge
imul
push
or
test
outs
jbe
mov
in
shl
xlat
xchg
dec
mov
(bad)
mov
div
cli
jns
dec
scas
sub
push
icebp
dec
mov
je
repnz
jns
add
fld
stos
cmp
mov
test
nop
and
cmps
or
or
mov
cs
push
mov
int
push
lock
adc
cdq
scas
fld
push
daa
cdq
jbe
sahf
sbb
icebp
push
jo
dec
xor
push
adc
mov
sbb
repz
xor
push
out
and
in
xlat
adc
shl
inc
dec
add
and
into
mov
int3
push
sbb
cmp
and
jg
jbe
out
imul
mov
(bad)
push
gs
nop
mov
cld
addr16
mov
pop
nop
pop
sbb
jmp
cli
fnsave
mov
cmp
test
(bad)
xor
fldenv
mov
mov
sbb
mov
imul
iret
jle
loope
mov
pop
pop
adc
jmp
or
mov
es
pushf
je
sub
ds
cdq
mov
clc
push
stos
test
out
test
add
sub
fst
das
in
sbb
test
call
retf
neg
popa
adc
daa
pop
sbb
jecxz
push
or
outs
mov
jg
mov
and
add
sbb
out
xchg
(bad)
ins
scas
dec
mov
lahf
pop
shr
sti
shl
repnz
(bad)
mov
lock
or
(bad)
iret
jno
mov
mov
mov
arpl
mov
call
pusha
nop
inc
mov
jb
pop
(bad)
in
xchg
lds
icebp
cmps
pop
fs
xchg
test
xchg
(bad)
stos
pop
shl
sub
cs
dec
sub
push
imul
sub
jp
(bad)
mov
xchg
aam
pushf
or
stc
imul
push
cmps
pop
jmp
adc
frstor
inc
sub
adc
pusha
repz
push
xchg
mov
mov
test
mov
sub
sbb
and
pop
xor
add
sbb
stos
xor
and
mov
inc
adc
adc
out
fcom
push
dec
mov
xchg
fmul
pop
scas
xchg
lock
fwait
jge
push
mov
jle
sbb
and
das
cmp
and
shl
imul
std
sub
mov
lods
xor
hlt
cmp
not
nop
jmp
dec
xor
dec
test
loopne
aaa
jmp
jl
inc
or
pop
dec
or
(bad)
out
mov
sti
push
in
das
icebp
ror
int
outs
retf
out
adc
or
sub
pop
repz
js
aas
cmp
adc
mov
inc
loopne
xor
ds
adc
rcr
sub
jg
sub
xor
ja
fisttp
adc
lds
mov
xor
inc
sub
test
pop
or
pop
jnp
fmulp
sahf
jg
push
inc
pop
push
mov
cwde
std
lea
mov
inc
aad
or
and
out
mov
mov
mov
push
sbb
dec
int3
sub
(bad)
loop
add
bound
mov
mov
popf
dec
inc
sti
repz
jae
jnp
and
adc
cmp
sti
fidiv
stos
push
jo
dec
dec
sub
popa
dec
sub
mov
cmc
jmp
mov
sub
test
fwait
movs
sub
(bad)
jbe
aas
js
add
scas
aad
dec
push
sbb
clc
les
pop
jl
mov
sub
arpl
push
ja
stos
ss
dec
sub
data16
cs
xchg
ss
push
sub
imul
dec
jp
add
pop
retf
cwde
in
fs
or
xchg
das
lds
fdivrp
fst
pop
jnp
out
adc
and
sub
sub
xchg
mov
and
in
jne
es
push
gs
shl
stos
test
xor
mov
fstp
ins
push
in
cs
loop
into
repnz
ins
pop
sub
pop
mov
or
adc
out
cmps
mov
sahf
movs
inc
mov
pop
enter
jo
push
movs
adc
ds
xchg
test
xor
test
sbb
mov
add
add
mov
push
fst
sti
out
xchg
call
mov
loopne
ja
inc
mov
imul
xchg
out
xchg
ja
pop
cmps
bound
cs
fild
nop
push
inc
test
inc
push
xchg
imul
adc
lds
and
mov
clc
out
out
jmp
and
cmp
push
or
test
mov
xchg
jnp
stc
or
mov
in
xchg
mov
inc
rol
adc
stos
pop
jnp
push
fdiv
or
and
inc
xchg
dec
les
(bad)
std
imul
(bad)
movs
jnp
jns
pop
jb
mov
pop
loopne
inc
xor
xor
lahf
and
push
jle
pop
push
into
and
(bad)
rcr
adc
out
sti
push
daa
mov
pop
lea
or
lds
imul
xor
inc
pusha
aam
ja
pop
mov
push
in
out
pop
in
dec
(bad)
ss
stos
or
sbb
push
fisubr
shr
or
js
add
push
xchg
mov
jmp
lods
dec
mov
adc
mov
ret
push
mov
pop
push
pop
jne
std
stos
out
pop
(bad)
mov
add
retf
daa
or
mov
xchg
jmp
push
inc
(bad)
push
and
or
push
icebp
pop
xor
pop
icebp
fdiv
jno
mov
out
pop
ins
loop
fdivr
or
fdiv
call
imul
pop
aas
enter
sub
mov
mov
inc
mov
ror
cdq
xor
lds
cwde
jo
daa
test
gs
add
(bad)
out
lea
loop
fcomp
enter
push
push
sub
pop
fwait
outs
pop
dec
cmp
addr16
push
push
push
cli
cld
xchg
dec
ret
jmp
loop
ds
jl
rcr
mov
inc
add
add
into
aas
inc
pop
in
fdiv
clc
daa
adc
loop
(bad)
outs
push
es
lods
cmp
test
add
mov
sbb
mov
js
adc
repz
push
test
imul
jnp
imul
fisub
test
imul
and
fist
mov
mov
iret
sti
ret
fst
pop
xor
test
push
push
mov
(bad)
retf
dec
clc
hlt
jge
add
dec
sub
push
(bad)
pop
adc
xchg
push
scas
dec
xchg
cmps
mov
inc
sub
mul
or
cli
mov
sub
xchg
cmps
add
jle
cs
(bad)
push
adc
lds
push
retf
mov
push
ficomp
jnp
push
(bad)
add
nop
add
loope
xor
pusha
callw
lods
adc
scas
push
movs
mov
leave
(bad)
aaa
mov
repz
ror
xor
dec
inc
pop
int
xor
es
inc
lods
jae
jg
jne
xor
push
or
stos
xchg
sar
loop
mov
pop
popf
stos
cs
mov
pushf
mov
or
imul
push
xlat
outs
sti
xchg
shr
call
and
push
or
pusha
test
std
jecxz
sbb
or
and
lds
fiadd
js
mov
mov
dec
xor
and
or
or
(bad)
cld
and
sub
jne
xor
sub
pop
push
loope
pushf
outs
and
jae
setge
or
(bad)
fprem
or
xchg
sar
sub
sub
div
xlat
adc
and
cld
loope
sub
jg
adc
(bad)
cmp
add
repnz
rcr
sbb
dec
xchg
outs
nop
add
pop
push
cwde
jl
dec
lods
xchg
daa
out
jnp
call
lock
fild
cld
pop
pop
(bad)
and
sbb
pop
xchg
bswap
mov
cli
sub
dec
or
test
xchg
fdivrp
adc
in
test
icebp
popf
or
iret
je
inc
push
jl
push
aaa
dec
fcomp
xchg
cmp
dec
mov
sbb
pop
or
xchg
cmps
fsubr
loop
call
inc
ficomp
test
jge
shl
and
add
push
sbb
fcomp
sbb
popf
xor
push
test
mov
(bad)
cmps
shl
int3
push
test
aas
add
and
jns
in
mov
aaa
inc
jg
nop
jmp
jo
cmps
(bad)
aas
pop
inc
xor
ror
nop
(bad)
or
out
es
inc
addr16
dec
mov
pop
push
cwde
fs
xor
xchg
mov
mov
lods
repnz
retf
test
jno
test
mov
aaa
js
add
push
sbb
jg
mov
nop
lea
mov
dec
outs
push
iret
xchg
mov
test
jae
inc
cmp
push
mov
test
sub
test
pop
stc
aas
daa
outs
mov
dec
std
arpl
mov
cwde
dec
inc
sbb
jae
push
shl
and
icebp
aaa
xchg
mov
int
test
fistp
aaa
jle
bound
jecxz
jecxz
sbb
shl
inc
and
sbb
mov
js
or
std
sti
(bad)
mov
fst
cmp
pusha
push
jns
cmp
sbb
jnp
lods
pop
sub
hlt
pushf
cmps
and
mov
leave
ficomp
ret
push
outs
lea
mov
adc
sbb
inc
or
fadd
add
jb
fsub
jge
or
mov
add
push
es
mov
fsub
mov
stos
mov
mov
jl
add
sub
mov
mov
shl
cld
dec
mov
fidivr
cmps
test
aaa
dec
nop
jae
retf
out
test
sbb
lea
and
or
repz
shr
outs
cmp
mov
mov
inc
sub
jae
imul
xchg
ds
test
push
mov
sub
cli
outs
test
cmps
(bad)
retf
outs
imul
popa
dec
jbe
cmp
pop
cmp
div
sub
pop
dec
popf
and
fsubr
or
test
inc
pop
ret
xchg
stc
ret
fsub
mul
or
jae
stos
iret
xchg
push
add
mov
repnz
fs
and
popf
mov
les
cmp
mov
adc
(bad)
aas
out
jae
push
nop
fwait
loop
stos
(bad)
sti
inc
sar
cli
test
call
xchg
in
mov
cmps
cmps
xchg
out
push
jo
pop
sti
(bad)
ficomp
push
pop
sti
scas
jae
xchg
pop
test
cmp
aad
std
mov
mov
cld
fmul
jecxz
jb
mov
outs
mov
xor
das
mov
mov
jne
mov
arpl
(bad)
test
inc
jae
xchg
outs
test
push
jb
and
je
aad
sub
jb
mov
ss
call
mov
add
xor
out
nop
in
xlat
(bad)
imul
retf
jnp
lea
or
jmp
pop
sub
scas
jecxz
cmp
js
add
popa
inc
cmps
add
loopne
jmp
leave
retf
mov
(bad)
js
add
inc
sub
imul
popf
pusha
sbb
aas
sub
adc
loope
or
fstp
mov
jge
jmp
pop
sub
cmp
xchg
jecxz
push
fadd
outs
or
out
push
mov
sub
imul
adc
dec
outs
in
xchg
cmp
div
clc
add
cmc
push
sub
pop
push
mov
and
pop
pop
adc
imul
cmp
or
fbld
ds
pop
adc
shl
xor
pop
or
ja
adc
pop
sub
iret
fwait
dec
jne
pop
js
push
mov
imul
lahf
xchg
add
inc
push
stos
pop
xchg
out
stos
adc
fcmovnu
ins
xchg
dec
push
sub
sub
enter
pop
scas
aas
mov
inc
outs
adc
xchg
dec
inc
cmp
inc
fdivr
mul
das
les
mov
jg
lock
(bad)
js
pop
popf
ds
movs
test
push
mov
mov
and
xor
jmp
stos
pop
xchg
dec
cmp
jnp
pop
xor
sub
shr
lods
mov
int
test
int
push
jb
repz
xchg
xor
mov
push
loop
xchg
mov
pop
leave
pop
inc
lea
sbb
jl
cmp
loope
(bad)
stos
add
inc
scas
scas
pop
aas
push
inc
mov
dec
mov
fs
out
imul
sub
and
xor
outs
fdivr
mov
sbb
mov
jae
or
jae
sub
mov
leave
aas
(bad)
cmp
aas
std
mov
pushf
cmp
cmps
dec
lock
mov
inc
mov
das
mov
ins
inc
mov
push
in
ret
inc
lea
xor
out
jg
mov
mov
jmp
mul
xchg
lods
ins
sti
ins
mov
(bad)
adc
popf
loope
mov
jo
jno
pop
jns
pop
rol
repz
push
outs
imul
movs
popf
ds
enter
scas
stc
int
icebp
push
in
pop
call
push
enter
or
xor
push
push
rol
jl
mov
sar
xor
pop
test
mov
or
xchg
out
adc
nop
test
test
or
xchg
push
mov
xchg
xor
dec
mov
sbb
pop
mov
add
push
sbb
dec
push
test
repz
nop
loope
sub
loope
(bad)
in
mov
mov
sbb
iret
inc
sbb
push
pop
sub
movs
retf
mov
xor
jl
movs
push
mov
jbe
adc
inc
mov
aas
enter
mov
imul
jl
cmp
xor
sbb
stos
sub
daa
jne
mov
enter
retf
shr
xor
mov
push
mov
sub
cdq
loopne
nop
nop
out
push
add
jg
mov
jne
push
jle
pop
(bad)
xor
lds
xchg
(bad)
scas
pop
fwait
add
push
loope
outs
sub
xchg
push
xchg
fild
add
push
inc
and
retf
adc
mov
xchg
adc
sub
ja
ret
sub
adc
arpl
pop
mov
js
inc
push
add
adc
xchg
mov
out
clc
xchg
popf
inc
test
das
movs
pop
mov
pop
mov
cmps
xor
xor
mov
sbb
ret
mov
pop
iret
mov
cmp
pop
dec
sub
aam
mov
mov
mov
sub
aas
retf
inc
dec
sub
adc
ds
xchg
add
mov
sub
pop
shr
dec
xor
test
xor
fidivr
inc
pop
addr16
cmp
xchg
mov
lahf
stos
retf
mov
jecxz
push
nop
mov
imul
push
push
push
add
aas
lock
inc
and
jg
cmp
pushf
jmp
scas
or
add
inc
fcom
cdq
or
xor
retf
xchg
(bad)
mov
icebp
push
dec
add
mov
sahf
ret
mov
retf
xor
push
push
pop
mov
mov
call
sbb
ins
sti
xor
sets
cmp
jb
add
fs
cmp
add
pop
je
cmps
aam
xlat
out
ja
or
mov
call
sub
xchg
es
sbb
mov
and
and
mov
stos
pop
cmps
imul
out
push
pop
xchg
push
xor
sbb
in
mov
das
pop
mov
xchg
or
popa
outs
ins
xor
mov
mov
hlt
inc
iret
out
and
push
leave
popf
enter
shl
lock
sub
orps
or
push
mov
aam
mov
pop
adc
sub
jle
lods
arpl
jo
and
jge
push
mov
mov
cmps
vpsllw
pop
movs
cmp
mov
mov
fld
gs
inc
and
pop
inc
inc
sbb
add
and
pop
sti
out
mov
inc
fistp
cmp
xchg
cli
nop
inc
loopne
xchg
inc
mov
fsubr
cmc
mov
shr
out
sub
inc
clc
add
mov
loope
ins
mov
(bad)
jecxz
pop
or
into
not
push
retf
mov
nop
jmp
rcl
xor
push
cmp
and
lea
stc
or
and
lds
inc
leave
aaa
mov
pop
xchg
ins
cmps
fst
or
mov
out
jb
mov
out
jnp
xchg
mov
jb
mov
bound
sub
in
adc
xor
aad
cmp
adc
rcl
js
ds
jbe
loope
sbb
(bad)
fs
jns
xor
stos
xchg
fs
lods
dec
fidiv
stc
cs
fld
add
adc
push
xchg
pushf
xor
adc
inc
mov
xchg
push
mov
ror
pop
mov
inc
leave
int
xor
pop
and
lods
and
mov
xlat
mov
mov
push
adc
adc
daa
xor
je
add
mov
or
mov
xchg
and
mov
inc
cld
pusha
jae
jbe
inc
lock
sbb
out
icebp
das
mov
sub
and
iret
sar
xchg
sub
(bad)
mov
add
jno
ret
dec
hlt
leave
leave
outs
adc
sbb
inc
cmp
inc
inc
dec
add
test
cs
xchg
scas
cmc
imul
(bad)
shr
add
daa
sub
and
sub
xor
or
sub
ds
sub
dec
ldmxcsr
shl
push
or
add
dec
mov
out
mov
xor
push
mov
xlat
scas
rcr
mov
lds
in
dec
xchg
add
cwde
dec
(bad)
mov
fstp
push
(bad)
mov
popa
and
(bad)
cmc
aad
dec
popa
enter
enter
dec
aas
mov
mov
scas
jp
test
rcl
les
and
mov
jb
ficom
xor
dec
and
or
mov
jg
adc
and
in
pop
cmp
jno
jmp
lahf
add
push
mov
sbb
(bad)
call
es
retf
lea
sub
out
shl
dec
test
retf
aas
sti
or
int
mov
dec
retf
cmp
test
add
push
mov
les
fiadd
fs
xchg
dec
add
or
retf
mov
clc
ret
dec
(bad)
mov
add
xlat
mov
add
test
mov
sbb
cmp
push
adc
sbb
cdq
add
scas
inc
cmp
test
ds
mov
xchg
cmc
adc
shr
stos
jnp
(bad)
jmp
inc
enter
pop
repnz
aas
dec
imul
mov
dec
xchg
dec
inc
xchg
xchg
jl
mov
movs
test
(bad)
int
fdivr
xor
xchg
push
sahf
mov
push
xchg
out
add
aas
sub
adc
std
cmp
lods
std
sub
cmp
cdq
cld
pop
add
inc
(bad)
sti
fcom
xor
sbb
into
call
repnz
popf
add
in
aad
(bad)
jl
add
push
aaa
out
loopne
aas
adc
pop
inc
ss
lock
mov
popf
mov
mov
pop
adc
add
sbb
jnp
mov
ret
push
loopne
ins
pop
push
mov
call
pop
stos
pop
mov
push
mov
and
dec
out
or
loopne
mov
in
fdiv
mov
adc
jo
aad
mov
sbb
dec
sub
jg
adc
jne
mov
inc
push
mov
xchg
outs
and
clc
popf
cld
popa
sbb
jmp
mov
mov
jbe
hlt
xor
scas
jo
inc
xchg
jne
inc
mov
das
xchg
pop
cmp
inc
sbb
jle
xchg
push
inc
xchg
sub
mov
adc
cmps
push
in
jp
retf
push
cmp
clc
(bad)
push
and
pusha
dec
add
test
adc
xchg
nop
ins
ins
inc
mov
sub
jle
neg
fst
dec
out
mov
test
adc
xchg
sbb
xor
shl
or
xchg
inc
imul
je
test
mov
test
inc
movs
fbld
xor
push
shl
mov
rcl
pop
loop
ffreep
xor
jp
addr16
jmp
pop
xchg
loop
jmp
inc
mov
idiv
cmp
enter
adc
adc
mov
push
(bad)
mov
loope
retf
add
pop
inc
add
inc
into
xchg
mov
sbb
int
femms
mov
clc
xor
pop
xchg
call
inc
xchg
cmps
cli
sbb
adc
mov
dec
adc
(bad)
cld
mov
mov
xchg
cmp
jbe
jle
xchg
cmp
sbb
inc
cli
repnz
xor
ins
adc
dec
xchg
fwait
mov
(bad)
jb
cwde
stos
mov
add
jp
dec
ss
xor
push
test
push
add
repnz
and
fld
dec
mov
repz
sub
call
mov
lods
in
dec
sub
(bad)
xchg
sbb
add
sub
xlat
pop
mov
stos
cmp
or
dec
nop
ja
dec
fdivr
data16
mov
add
sub
add
je
dec
jge
ret
push
mov
pop
mov
xor
inc
jbe
dec
cli
fnstsw
(bad)
popa
scas
xlat
pusha
mov
fdiv
sub
jne
mov
call
push
gs
push
cmp
sub
mov
adc
and
cmp
pop
xor
dec
push
sahf
js
into
cli
ins
shl
retf
sbb
loope
xor
mov
test
sbb
xlat
pop
rol
lods
dec
xor
rol
xor
sbb
pop
daa
hlt
push
inc
lds
xchg
repz
and
addr16
mov
mov
shl
mov
sub
pusha
xor
mov
xor
mov
jmp
stos
adc
out
lea
xchg
cmp
mov
push
ficom
mul
pop
add
repz
sub
xor
mov
ret
or
push
test
push
dec
add
sbb
lahf
fsub
pop
xchg
sub
mov
mov
and
mov
stos
sub
push
add
stos
dec
sub
adc
jns
iret
mov
popa
dec
daa
icebp
or
mov
pop
or
repnz
push
dec
ss
or
push
imul
ror
mov
xchg
xor
fwait
xchg
xchg
or
outs
shl
addr16
pop
cmp
and
popa
sub
mul
pop
mov
repz
ins
sub
loop
test
int
arpl
push
jbe
ins
dec
push
stc
jecxz
std
xchg
pop
fld
rol
pop
push
adc
dec
xchg
push
pusha
repnz
mov
or
fptan
sub
lds
mov
mov
xchg
mov
scas
xchg
push
and
inc
push
aaa
push
cmp
mov
nop
mov
mov
movs
icebp
pop
cs
lock
mov
dec
iret
les
movs
cld
std
(bad)
iret
mov
xor
cmp
add
mov
pushf
cdq
dec
mov
and
xchg
out
movs
pop
jae
mov
in
hlt
clc
xchg
out
push
inc
add
les
jnp
or
dec
rcr
dec
inc
pop
not
scas
mov
inc
call
retf
stos
add
xor
inc
pop
push
iret
jle
jno
jnp
and
or
jae
leave
sub
lock
mov
mov
and
push
sar
push
mov
mov
pop
or
pop
lods
enter
or
dec
mov
loope
(bad)
fst
imul
jbe
mov
add
mov
stos
cmp
stos
stc
dec
cmp
inc
and
jbe
jg
fdiv
mov
sbb
inc
je
dec
mov
mov
mov
add
push
hlt
sbb
jmp
cld
loopne
xchg
ds
cwde
pop
(bad)
push
mov
icebp
mov
mov
sub
adc
les
jle
out
cli
mov
mov
cli
pop
sbb
cmp
cmp
jno
jg
xchg
inc
or
add
into
push
push
inc
mov
int3
push
xchg
ds
(bad)
dec
push
jmp
push
jno
(bad)
xchg
sbb
shl
and
mov
add
adc
fsubr
jns
pop
cs
fcmovbe
mov
sub
cmps
cmp
pop
jmp
pop
fild
mov
push
cmp
movs
dec
leave
jg
lods
push
stos
lea
sbb
out
sub
into
loopne
retf
loope
xor
and
xchg
push
or
or
and
or
std
mov
mov
hlt
loop
lods
push
outs
cmc
adc
mov
or
xor
dec
mov
shl
and
xchg
out
mov
ja
adc
arpl
(bad)
cs
cdq
xlat
addr16
sbb
(bad)
dec
inc
sar
jle
mov
pop
push
hlt
cmp
mov
ins
sub
xchg
shl
xor
retf
test
cmps
xchg
sub
add
mov
jb
push
aaa
pop
add
sub
(bad)
fdiv
pop
cmp
test
jbe
or
push
add
xor
mov
push
sub
push
lahf
popa
ret
add
rcr
or
push
cmp
repz
outs
retf
jmp
aam
stos
outs
lods
in
into
int
xor
push
es
jno
jl
push
dec
and
js
mov
pop
push
lock
and
sub
mov
cmps
jae
cld
xor
lods
mov
call
cmps
test
ja
mov
lahf
mov
push
cmc
ret
test
daa
and
mov
retf
xor
mov
and
sub
or
jo
retf
xor
gs
pop
out
sub
inc
jecxz
out
mov
push
iret
cmp
data16
xchg
mov
cmp
ror
not
inc
call
xchg
adc
dec
mov
pop
inc
sar
jg
inc
icebp
add
ins
push
das
lods
mov
cmp
lods
cmp
pop
test
mov
dec
jecxz
inc
pop
inc
movs
push
(bad)
mov
int
test
and
push
pop
or
mov
pop
call
or
into
sub
or
mov
xchg
pop
lods
pop
xchg
ja
shr
jmp
jmp
jnp
adc
mov
retf
lods
sbb
dec
lds
movs
stc
mov
dec
(bad)
repnz
lds
or
pop
mov
push
jle
xchg
push
(bad)
sub
xchg
push
pop
(bad)
sbb
mov
fstp
mov
mov
loope
mov
loopne
test
aad
push
push
xchg
(bad)
popf
dec
jbe
mov
pop
loope
xchg
test
repz
popf
sbb
aaa
rcr
ret
and
es
scas
sub
push
(bad)
ja
add
xor
cld
mov
adc
call
jg
in
shr
popa
pop
mov
xor
xor
shr
xor
and
enter
xchg
xchg
dec
dec
or
pop
loopne
stos
add
int
push
ret
cdq
inc
push
mov
iret
fdivr
fmul
push
out
mov
xchg
xchg
xor
das
inc
imul
daa
repnz
mov
faddp
in
clc
into
adc
push
or
jmp
arpl
xchg
jno
stc
push
ins
(bad)
cmp
iret
not
dec
fisttp
pop
dec
stos
data16
mov
jg
test
inc
int
repnz
div
or
jnp
scas
mov
mov
es
mov
xor
push
pop
inc
jo
mov
(bad)
jle
sub
or
ins
jg
or
movs
inc
mov
(bad)
jno
add
dec
test
dec
mov
mov
cwde
and
inc
ret
jns
dec
mov
scas
retf
mov
fadd
mov
cli
xadd
inc
daa
outs
or
jnp
enter
ins
pop
imul
jne
xor
mov
js
(bad)
shl
hlt
inc
mov
mov
jp
push
repz
arpl
xchg
cmps
out
push
cli
scas
xchg
inc
adc
(bad)
daa
cld
aaa
hlt
cmp
test
mov
xor
inc
adc
push
enter
dec
add
and
inc
mov
imul
inc
sahf
sub
dec
and
and
sbb
ss
(bad)
pop
lock
xchg
dec
sub
mov
icebp
xchg
jg
pop
nop
bound
shr
cli
int3
jle
lds
mov
add
retf
iret
fwait
and
push
inc
aad
sub
jmp
xchg
sahf
push
adc
scas
mov
mov
iret
lock
cs
out
mov
cmp
xor
push
fbstp
bound
jp
mov
scas
mov
mov
pop
movs
inc
pop
xor
push
dec
xchg
rcr
xor
shl
cmps
iret
or
fdiv
xchg
mov
lods
jne
movs
fsin
mov
pop
pop
xchg
cmp
out
test
ret
dec
xor
icebp
imul
push
push
mov
arpl
adc
pop
pop
xchg
inc
sub
in
(bad)
jnp
pushf
xchg
xchg
adc
jno
dec
lods
test
mov
cmc
scas
arpl
jmp
fmul
pop
sbb
push
push
cmp
fdivr
push
repz
cli
jnp
cmp
retf
xchg
mov
or
cmp
test
jns
push
ret
add
push
les
(bad)
ins
aad
aas
test
inc
add
push
lock
sar
mov
cld
stos
push
add
in
popa
xchg
sbb
stos
lahf
mov
lahf
mov
scas
push
mov
cmp
cmps
jb
cwde
push
and
inc
xor
inc
or
in
and
xchg
sub
retf
cmps
mov
pop
je
xchg
cdq
stc
pop
mov
cli
dec
mov
sbb
fistp
loopne
add
and
dec
inc
idiv
icebp
ja
js
es
pop
repnz
(bad)
xor
mov
dec
into
fwait
stc
icebp
jmp
xor
test
add
adc
sbb
pop
ins
pop
cs
repnz
and
sub
jl
dec
dec
aad
cmp
ins
mov
loopne
or
xchg
test
out
stc
and
sbb
in
xchg
inc
ret
stc
and
ins
and
mov
cmc
retf
mov
lock
push
pop
shr
shr
adc
mov
add
icebp
sub
jnp
icebp
pop
or
cli
fstp
mov
jg
jbe
push
sub
outs
ret
outs
fst
shl
(bad)
cdq
adc
pop
dec
xor
or
xor
out
dec
neg
cmps
test
push
add
scas
jle
retf
ret
mov
adc
ret
sub
mov
sub
inc
sbb
fldl2e
jno
push
push
xchg
push
aas
push
(bad)
test
lea
test
xchg
(bad)
mov
sbb
loop
push
enter
mov
xor
and
push
(bad)
stos
sbb
add
and
jmp
inc
loop
xchg
mov
dec
ret
or
push
sbb
cld
popa
sbb
push
mov
(bad)
scas
xchg
rcl
mov
and
cli
dec
cmps
out
xor
pop
mov
in
(bad)
hlt
out
enter
pop
or
nop
sbb
scas
dec
(bad)
js
push
jmp
dec
jg
jns
enter
lea
xchg
mov
and
clc
fcomi
sbb
mov
dec
cmp
test
gs
and
pop
and
cmp
sub
adc
repnz
ss
jmp
enter
jmp
loope
dec
and
xchg
dec
xchg
or
add
jmp
dec
stos
mov
sbb
test
dec
xchg
mov
adc
adc
loope
jmp
jns
push
js
jecxz
popa
dec
sub
jmp
mov
cmp
repz
or
cmps
cmc
clc
imul
push
outs
push
mov
enter
add
jo
jg
lods
add
xlat
loope
ins
push
es
xor
call
push
push
shr
push
xchg
or
add
leave
sbb
imul
ret
movs
xchg
bound
xchg
sbb
dec
ret
pusha
js
inc
sbb
repnz
js
dec
sub
xchg
int3
dec
xor
je
xchg
xor
mov
cmc
lea
imul
fst
sbb
mov
push
sub
popa
test
mov
add
and
arpl
mov
mov
cli
cmp
jmp
aas
fistp
retf
(bad)
xchg
sahf
mov
arpl
adc
shr
adc
outs
pop
dec
iret
shr
pop
daa
pop
jl
add
mov
dec
or
xor
jne
adc
mov
adc
push
mov
mov
in
xor
jge
and
xchg
je
mov
cwde
sbb
(bad)
js
sub
mov
or
pop
(bad)
cdq
pop
repnz
call
fiadd
add
aam
out
outs
fidiv
mov
and
iret
repnz
mov
shr
sub
lods
xchg
pop
xor
jp
xchg
outs
xchg
add
push
xor
xor
mov
jl
and
xchg
dec
xchg
daa
push
dec
es
movs
inc
ins
jnp
lock
jae
mov
es
mov
ins
cmp
push
sbb
retf
mov
dec
test
movs
inc
addr16
dec
movs
jmp
xor
mov
lods
call
test
je
cmp
(bad)
jno
movs
cmp
xchg
sbb
fstp
or
mov
bound
adc
stc
cs
retf
xor
cli
and
ins
xchg
push
inc
add
xlat
fidivr
jmp
mov
jg
rcl
shl
stos
jg
shl
add
jl
cmp
sub
mov
fs
call
shl
pusha
add
cmp
push
inc
mov
loopne
in
out
mov
das
movs
cmp
mov
xchg
in
push
sbb
sub
test
lock
shr
mov
xchg
mov
jno
cmc
mov
aam
test
push
cmp
div
sub
adc
or
aaa
add
cmp
push
ret
iret
fmul
push
push
cmps
scas
mov
add
dec
push
add
stos
(bad)
out
cmp
and
(bad)
aas
inc
mov
pop
fidivr
mov
push
and
dec
xchg
mov
(bad)
mov
dec
push
xchg
fcomp
jg
in
dec
aas
jmp
nop
xor
or
repnz
das
loop
mov
sub
je
das
inc
test
inc
fwait
pop
mov
pop
mov
push
jmp
stos
mov
scas
mov
sahf
into
inc
and
mov
sbb
add
fist
(bad)
push
repnz
adc
adc
dec
adc
and
jp
push
test
je
or
stos
test
clc
hlt
out
fs
push
and
inc
pushf
push
in
jne
adc
(bad)
mov
into
mov
fs
cmp
leave
retf
scas
sub
or
jnp
cmp
and
out
loope
loop
retf
jmp
jb
outs
out
stos
test
movlps
xlat
pop
and
bound
and
(bad)
pop
pop
ficomp
mov
sahf
popa
fild
mov
fsub
dec
push
add
add
xor
dec
xchg
jbe
push
icebp
aas
addr16
jae
push
and
xchg
or
dec
xor
mov
pop
repz
adc
xchg
push
movs
cli
mov
not
jnp
jb
push
or
lock
into
lods
push
and
push
addr16
adc
jg
sbb
cdq
inc
xchg
pusha
add
in
push
js
lea
jmp
jl
lock
cmc
dec
adc
jo
add
xchg
xor
or
inc
std
jnp
cmp
dec
icebp
xor
mov
test
mov
sbb
dec
mov
mov
pop
arpl
bound
or
jle
pop
xor
shl
ret
jno
(bad)
xlat
int
stos
adc
mov
iret
xchg
dec
(bad)
pop
int3
repz
dec
rcl
inc
lock
mul
sbb
xchg
repz
adc
jbe
cdq
mov
fwait
push
loope
xchg
stc
scas
add
enter
bound
into
xchg
add
mov
sub
add
shr
mov
lock
sub
sbb
or
les
rcl
(bad)
add
sub
mov
adc
or
push
jbe
popf
leave
pop
inc
repz
movs
idiv
bnd
cdq
mov
das
push
cmp
push
test
and
mov
xchg
jmp
into
(bad)
push
das
iret
or
jge
push
mov
pop
mov
mov
mov
loop
xor
pop
mov
mov
stc
arpl
loope
xchg
in
fdiv
jmp
ret
sub
scas
movs
stos
or
pop
popa
mov
cmp
pop
and
nop
pop
add
xchg
jb
add
dec
jno
cmp
lods
mov
xor
out
ds
test
rol
xchg
arpl
push
adc
sbb
and
mov
or
scas
dec
xor
push
jbe
mov
loop
sbb
jmp
lahf
ror
mov
stos
test
rcr
sbb
adc
xor
add
jo
int3
lds
dec
jl
mov
mov
push
xchg
mov
scas
jg
enter
outs
(bad)
sbb
dec
retf
adc
loope
push
jmp
pop
mov
jle
and
or
stos
mov
pop
fbstp
repz
xchg
ror
and
in
lods
sbb
mov
mov
sbb
xor
stc
and
js
xchg
out
mov
in
xchg
retf
xor
inc
or
mov
cwde
not
stos
dec
int
push
jns
fcomi
rcl
jmp
mov
xlat
sub
repz
inc
retf
retf
sub
xchg
cdq
mov
pusha
or
sbb
cmps
pop
cmp
rol
lea
adc
xor
(bad)
lock
out
xor
mov
and
mov
pop
ret
rcl
jb
ud1
icebp
outs
clc
pop
push
push
test
mov
adc
push
outs
int3
out
dec
and
ss
adc
(bad)
and
sub
out
jmp
add
and
rcl
mov
inc
mov
inc
cmp
adc
mov
div
add
int3
stos
cmp
xchg
add
fwait
pop
pop
iret
push
inc
and
push
sahf
inc
cli
sbb
test
(bad)
cmc
mov
pusha
das
pop
adc
sbb
aaa
inc
loopne
mov
hlt
xchg
xchg
pop
mov
inc
test
mov
je
div
cmps
inc
push
xor
out
scas
imul
mov
xchg
mov
stos
jg
mov
ja
dec
dec
and
call
popa
into
stos
jnp
aam
or
nop
cs
inc
sbb
pop
and
or
xchg
adc
xor
cmp
inc
fstp
inc
fcom
push
mov
test
cld
jnp
fadd
dec
push
repz
(bad)
dec
adc
hlt
xchg
pop
adc
mov
or
push
lods
scas
repz
sub
xor
clc
and
outs
mov
shl
enter
cdq
add
call
mov
mov
adc
shl
jmp
addr16
int3
inc
push
jmp
scas
inc
test
xor
test
cli
push
add
pop
shr
or
adc
sbb
sub
mov
dec
nop
jle
shl
cmp
pop
inc
mov
and
sub
js
data16
push
dec
dec
outs
push
in
add
cwde
sti
mov
cld
mov
jecxz
lock
mov
or
shl
cwde
jnp
stc
dec
enter
inc
stc
cdq
xlat
imul
dec
jne
pop
inc
rcl
mov
cmp
js
fs
pop
out
sbb
add
dec
stos
sar
mov
test
mov
dec
mov
stos
jmp
es
test
repnz
or
scas
xchg
mov
mov
mov
test
lods
push
mov
push
popf
loop
jg
loopne
test
in
mov
push
jae
dec
or
pop
(bad)
leave
sbb
js
pop
js
lods
into
in
sbb
pop
push
movs
pop
dec
push
test
int
jbe
jns
shr
inc
inc
dec
xchg
pushf
pop
sbb
fdiv
and
push
push
sbb
pop
adc
int3
shr
(bad)
dec
or
dec
fsub
mov
jno
sub
retf
aas
(bad)
scas
inc
sub
or
fs
jg
cmp
xchg
sub
mov
push
mov
or
sbb
dec
pushf
inc
fisubr
or
mov
push
xor
icebp
addr16
cmp
dec
ror
rcr
inc
xor
mov
pop
les
shr
dec
jp
and
jno
outs
cdq
mov
test
push
nop
push
sti
rep
inc
jecxz
mov
cmps
sbb
xchg
cmp
and
mov
ins
pop
pop
adc
fwait
(bad)
jno
xchg
jb
add
jp
call
fwait
xchg
sub
mov
jno
inc
clc
adc
and
sti
hlt
jle
cmc
cdq
xor
or
or
and
jo
shl
leave
retf
repz
call
aas
fstp
push
push
and
sbb
jmp
lds
ror
adc
dec
not
icebp
(bad)
cmp
arpl
stos
ins
lods
push
repnz
dec
sbb
pusha
jle
and
jae
cmp
adc
push
std
mov
mov
out
test
shl
mov
test
pushf
ficom
or
scas
adc
dec
jge
scas
inc
push
pop
dec
lods
dec
cmps
movs
or
stc
jg
das
inc
cmp
xchg
push
xor
clc
enter
xchg
push
or
mov
js
shl
mov
push
pop
sbb
mov
push
rcl
inc
pop
rol
fldenv
ds
inc
lock
pop
inc
icebp
inc
push
fnstcw
sub
fidivr
retf
mov
xor
inc
out
stos
jmp
cld
pusha
lods
mov
iret
pop
sub
and
in
inc
xchg
mov
iret
cmc
shl
sub
ds
pop
mov
jns
xchg
lods
push
sar
out
icebp
fadd
cmp
xchg
dec
aaa
push
div
scas
or
xchg
in
jae
xchg
xchg
ja
call
ins
rcr
movs
and
lea
push
addr16
sbb
or
sete
adc
mov
mov
arpl
into
xchg
xor
icebp
mov
icebp
clc
ja
daa
mov
mov
adc
xchg
ror
mov
shl
(bad)
rcr
or
shr
dec
push
dec
add
out
das
aam
xchg
pop
jnp
xchg
ja
je
lds
pop
sbb
inc
stos
inc
sbb
add
add
loopne
or
loope
repz
stos
imul
arpl
mov
imul
inc
div
jmp
mov
xchg
push
scas
jge
inc
pusha
and
test
and
int3
lock
xlat
aas
ds
or
inc
out
cli
dec
das
xchg
lea
cmc
aas
sub
ret
mov
stos
add
fst
push
in
std
repnz
cmp
sub
test
inc
iret
(bad)
fcom
dec
arpl
push
and
inc
es
add
stos
hlt
mov
ds
xor
sub
add
shr
xor
lock
push
adc
aas
ins
sub
adc
cs
cmps
in
mov
xchg
fprem1
mov
push
iret
jle
add
mov
xchg
push
dec
ret
rol
and
mov
jnp
mov
test
mov
push
push
sbb
jnp
and
adc
ds
jb
mov
mov
je
fcom
xor
add
rcr
fwait
xchg
add
mov
pop
stc
mov
stos
shl
cmps
sbb
add
mov
data16
in
jne
jns
lock
outs
iret
in
or
xchg
jg
loop
push
ror
sbb
sbb
outs
aam
xchg
or
sub
pop
lods
xchg
and
fsub
out
rcr
or
mov
popa
cmp
gs
push
xchg
stos
xchg
push
or
mov
arpl
loopne
loopne
mov
fdiv
in
inc
stos
ds
sbb
cmp
jle
push
(bad)
cmp
inc
mov
mov
and
fist
(bad)
adc
cli
scas
fcom
and
test
jmp
add
inc
push
xor
pop
xor
xchg
pusha
xor
mov
test
jno
stos
mov
dec
bound
lods
mov
mov
mov
push
lea
pop
cmp
xchg
mul
sub
push
jb
add
gs
addr16
dec
cli
add
xor
mov
stos
rcl
pop
lods
and
fdivr
call
ret
pushf
xor
jnp
adc
jg
ret
add
pop
sbb
or
shr
push
pop
(bad)
(bad)
pop
sti
inc
scas
std
mov
or
shl
adc
mov
xchg
test
pushf
mov
sbb
ds
mov
push
lahf
imul
push
fidivr
nop
push
out
sbb
js
iret
test
leave
xor
inc
scas
pop
cld
fisubr
ret
fdivp
lods
ins
inc
push
mov
mov
imul
lds
add
mov
retf
inc
push
pop
push
push
icebp
add
sbb
mov
out
aaa
ds
stos
hlt
fdiv
cmp
mov
pusha
test
mov
mov
sbb
or
das
ret
int3
scas
dec
repz
not
test
jbe
sbb
rol
lahf
pusha
je
test
imul
dec
lods
sub
int3
push
repnz
sub
nop
jno
out
sbb
fisub
cmps
retf
sub
adc
outs
lds
test
popa
mov
mov
mov
sbb
cmps
fcomp
xor
mov
lahf
aaa
or
sbb
imul
sbb
cs
add
jnp
in
and
icebp
outs
loopne
cmp
in
cmp
scas
aam
cmp
sbb
xchg
pop
and
popa
jb
sbb
movs
int3
jmp
ret
enter
and
dec
sbb
mov
retf
iret
(bad)
rcl
mov
cmps
and
xchg
addr16
cs
push
push
mov
repnz
test
mov
cmp
or
mov
sbb
arpl
repz
imul
mov
(bad)
pop
lods
inc
cmp
and
inc
and
in
sar
lods
(bad)
cmps
or
int3
xchg
push
push
sub
(bad)
fwait
mov
add
xor
imul
arpl
jmp
mov
add
fwait
add
in
ffree
jge
cmc
fimul
dec
mov
add
cmp
call
and
adc
pop
stc
fild
into
cmps
jnp
fist
dec
loop
mov
xor
int3
loope
pop
(bad)
icebp
xor
out
lock
and
(bad)
retf
retf
jle
dec
mov
push
ss
push
xchg
push
xchg
pop
jb
push
aas
ficom
cmps
inc
jmp
outs
sbb
mov
sbb
mov
xchg
jae
push
pop
inc
push
mov
push
aas
cmp
std
aas
jmp
jno
inc
stc
sbb
loope
jae
jmp
xor
inc
jne
in
call
js
mov
cmp
and
mov
mov
into
mov
fnstenv
push
jmp
fwait
ja
ja
test
dec
cdq
addr16
mov
mov
cmp
sbb
adc
xlat
loopne
jb
iret
mov
pop
xchg
ret
maskmovq
test
into
sbb
lahf
add
cmp
lahf
and
add
pop
mov
and
pop
xchg
mov
sbb
jbe
fstp
push
push
sti
fmulp
xchg
sub
scas
inc
add
pop
xchg
fnstsw
sbb
scas
ret
aaa
xchg
xchg
imul
repnz
iret
inc
pop
adc
sub
ret
mov
jl
fs
mov
addr16
xor
cwde
daa
arpl
mov
add
es
scas
and
mov
sub
push
mov
jnp
shr
gs
mov
or
fnsave
jb
nop
sti
jp
pop
frstor
aad
jae
sbb
mov
jbe
mov
sub
mov
outs
sub
mov
pop
(bad)
in
xor
sbb
and
dec
int
and
xchg
sahf
cs
mov
adc
sub
mov
aas
jns
dec
xchg
or
iret
stos
cmp
cmp
xchg
(bad)
rol
outs
cmp
xchg
int3
and
loopne
nop
ss
mov
lds
neg
jae
xor
(bad)
inc
add
retf
loop
mov
out
ficomp
or
lahf
in
inc
xchg
push
xchg
adc
mov
xchg
inc
dec
fist
enter
or
add
mov
aam
lahf
loop
jb
xor
aas
pop
cwde
xchg
jo
fcom
outs
out
xchg
es
call
jno
ret
push
test
mov
call
ja
stos
fimul
xchg
push
push
dec
sbb
jb
repnz
mov
nop
jg
dec
fcom
add
xor
push
pop
dec
pop
dec
loop
mov
daa
repz
dec
sub
test
mov
repz
mov
shr
inc
rol
fwait
jnp
std
pop
bound
sbb
ja
push
jmp
(bad)
mov
push
push
test
jno
sbb
push
mov
leave
dec
inc
mov
xchg
sbb
push
jne
out
popf
xlat
pop
inc
mov
jecxz
int
adc
enter
add
inc
stos
lds
imul
into
pushw
and
das
outs
(bad)
shr
push
loope
or
movs
mov
rcl
cmp
fisubr
push
push
scas
inc
hlt
std
mov
mov
jo
clc
push
das
push
stos
mov
test
push
push
jmp
jno
lods
cld
sar
mov
jp
add
cmps
add
xor
push
out
xchg
push
cmp
fimul
pop
xchg
lods
leave
push
in
mov
rcr
cmps
(bad)
enter
inc
add
xor
push
mov
jbe
fisttp
push
out
inc
or
or
and
and
xchg
mov
push
adc
xor
mov
xor
std
std
and
sti
cmp
mov
push
sbb
jne
mov
xchg
jmp
adc
sbb
xchg
mov
adc
adc
repz
xchg
or
gs
xchg
adc
fst
sbb
iret
or
mov
(bad)
mov
xchg
sub
jg
pop
mov
les
push
mov
arpl
aas
and
cmp
and
add
sbb
push
mov
sar
gs
out
loope
loopne
js
jl
xchg
pop
push
xchg
stc
scas
add
mov
stc
or
mov
dec
dec
out
into
jle
jp
cs
and
ins
jg
mov
and
and
jmp
dec
mov
add
push
mov
add
jl
mov
loopne
pop
ds
(bad)
dec
adc
xchg
mov
iret
nop
bound
test
inc
mov
jg
xchg
repz
pop
and
pop
push
adc
dec
ret
and
jnp
aas
je
push
call
mov
mov
push
push
(bad)
sub
lods
pop
sub
fiadd
sahf
je
adc
inc
das
or
sbb
(bad)
inc
daa
pop
call
into
xor
push
and
ins
lods
int
jae
les
mov
cmp
mov
pushf
cmp
xchg
mov
jl
dec
push
sub
push
int
xchg
mov
mov
dec
or
lea
movs
pushf
retf
jnp
in
cli
sar
mov
int3
outs
enter
add
sub
pop
xor
gs
add
pop
gs
int
out
lods
mov
clc
mov
push
xor
sbb
mov
cli
pusha
inc
lahf
or
jmp
mov
int
push
(bad)
je
sub
jns
aas
pop
faddp
call
fucomi
in
pop
dec
cmp
cmp
mov
(bad)
fsub
mov
pop
stos
cmps
inc
repnz
pop
ror
fwait
xchg
jl
lods
pushf
dec
es
add
aaa
adc
inc
pop
dec
stos
mov
mov
(bad)
in
mov
push
pop
mov
sub
and
add
fwait
call
mov
call
ins
xchg
sub
pop
add
xchg
adc
push
add
jmp
std
sti
sub
xchg
adc
push
leave
mov
pushf
pop
inc
clc
pop
pop
lock
sub
rcr
pop
stos
ds
cmp
or
outs
repnz
(bad)
mov
jo
cmp
cmc
xor
cmp
push
push
jle
mov
fwait
lods
inc
fdivr
das
out
push
sub
aas
stos
scas
movups
cmp
sahf
ds
add
dec
inc
pop
adc
je
cmps
lock
ins
push
jns
push
jno
out
lock
repz
push
jecxz
cmp
retf
sub
mov
imul
sbb
add
mov
jecxz
and
(bad)
push
dec
jecxz
dec
pop
cmp
cmp
dec
and
jno
push
ins
es
push
pop
inc
test
ds
mov
cmp
pop
ret
lea
shl
out
mov
mov
push
and
pop
xchg
add
dec
sub
imul
out
jns
mov
jl
repnz
dec
lods
or
sub
ja
shl
cmps
jbe
jno
mov
aad
out
iret
not
pop
push
pop
pop
push
sub
or
dec
jno
in
sub
ins
mov
inc
push
mov
push
retf
jmp
test
fmulp
rol
mov
xchg
cmp
cs
cmps
movs
push
cdq
shl
shr
adc
xchg
clc
adc
bswap
inc
retf
out
sbb
jmp
adc
mov
push
add
mov
ins
xchg
adc
or
lea
pop
aaa
sub
push
and
push
and
dec
xchg
fnstsw
cmp
and
pop
jp
mov
mov
push
or
push
inc
jo
inc
inc
push
out
mov
test
daa
fnsave
fst
xor
or
dec
loope
loope
test
lea
adc
xor
mov
nop
push
je
sahf
inc
dec
inc
call
cmp
sub
mov
shl
es
arpl
add
adc
inc
mov
inc
ss
in
inc
stc
push
dec
(bad)
fstp
dec
stc
and
cmp
iret
mov
adc
jbe
pop
pop
xchg
stc
jmp
stos
scas
test
into
add
push
jae
jecxz
mov
dec
inc
jo
retf
adc
test
mov
pop
scas
xor
fstp
scas
arpl
mov
into
xchg
ins
jmp
mov
pop
sub
cmp
ins
xchg
xor
add
mov
(bad)
js
clc
shl
sub
jmp
inc
addr16
xchg
gs
les
rcr
mov
ror
mov
cmp
mov
divps
dec
imul
mov
out
test
cmp
adc
pusha
out
pop
jp
scas
pop
stc
imul
scas
xchg
popf
xchg
(bad)
rcr
pop
aam
mov
jg
push
and
ds
xlat
mov
les
mov
fstp
out
and
sbb
cmp
jmp
xchg
mov
lds
pop
mov
clc
add
xchg
cmp
cdq
jno
or
mov
xor
iret
(bad)
push
lahf
jle
and
cld
imul
inc
cmps
movs
xchg
les
mov
pop
mov
movs
shl
mov
jp
cmc
stos
push
or
stc
add
imul
adc
mov
mov
sbb
sbb
fistp
je
or
jns
push
fdiv
sahf
loope
mov
retf
sub
imul
dec
popf
adc
and
fidiv
mov
imul
dec
repz
or
neg
sub
inc
cs
pop
push
push
adc
add
mov
ins
fdivp
mov
(bad)
jno
jp
jmp
push
fisttp
int3
sbb
pop
sub
pop
fucom
test
hlt
test
clc
xchg
add
or
add
dec
lods
idiv
daa
or
fist
xor
add
mov
aas
retf
adc
shl
in
dec
sbb
lods
inc
stos
xchg
fst
arpl
and
xor
mov
sbb
cmps
sbb
fdiv
hlt
mov
in
xchg
jno
mov
sbb
push
test
mov
arpl
pop
cmps
xor
popf
addr16
jae
mov
or
add
add
mov
fwait
scas
dec
jno
adc
out
hlt
cmps
sub
or
inc
inc
in
xchg
das
cdq
and
or
sbb
fnstsw
push
pop
dec
xor
jmp
int3
shl
xor
push
mov
xlat
xchg
sub
jbe
outs
mov
add
jae
fcomp
cli
push
jl
outs
push
sub
add
push
push
dec
call
xchg
mov
sub
mov
mov
xchg
xlat
mov
and
fld
jp
inc
or
scas
sub
pop
or
jae
pop
pushf
pop
mov
pop
mov
push
nop
inc
jp
sbb
test
loop
(bad)
mov
cmps
sbb
sbb
jne
mov
outs
dec
jg
test
pop
jmp
dec
add
daa
das
jg
mov
cmp
pop
stc
das
mov
dec
inc
jns
repnz
rcr
(bad)
and
iret
mov
mov
cmp
int
and
fidivr
push
and
mov
xlat
or
adc
mov
lods
pop
icebp
les
fmul
inc
popf
xchg
stos
add
xor
mov
jge
jne
xor
aaa
pop
ror
idiv
inc
outs
adc
jno
fs
(bad)
jge
dec
ror
push
aaa
mov
ret
push
lods
xchg
inc
mov
push
xlat
leave
fnstenv
pop
pusha
dec
jl
or
add
xor
lea
jmp
xchg
dec
mov
or
xchg
mov
rcr
pop
fisubr
icebp
(bad)
fnsave
push
jo
out
add
mov
ror
jp
mov
movs
or
lods
mov
imul
fs
push
leave
mov
mov
push
sbb
ss
bound
sbb
sub
(bad)
out
leave
ins
fld
add
clc
iret
(bad)
mov
ja
ret
test
dec
out
icebp
repnz
int3
hlt
xchg
inc
push
jp
cwde
sub
imul
dec
adc
out
inc
scas
aas
mov
leave
dec
nop
fsubr
jecxz
xchg
mov
ja
and
stos
js
addr16
mov
arpl
push
fidiv
add
cs
(bad)
not
loopne
movs
inc
push
adc
inc
ret
cmps
pop
sbb
inc
dec
add
sub
jne
pop
fidiv
xlat
(bad)
clc
push
rcl
pop
pusha
xlat
mov
adc
pop
(bad)
ja
pop
aaa
std
shr
sar
push
data16
or
xor
scas
je
xor
js
jg
test
inc
(bad)
ds
add
loope
sbb
leave
adc
and
mov
pop
call
mov
cs
xchg
test
shl
aaa
rcr
mov
push
mov
jbe
xchg
call
sti
jbe
pushf
mov
inc
fadd
add
sub
dec
xor
dec
cmc
mov
arpl
rcr
inc
retf
adc
mov
loopne
sub
aad
jle
std
test
sbb
stos
out
std
aaa
jbe
(bad)
push
xchg
retf
inc
mov
xor
leave
lods
jge
les
stos
loopne
xchg
and
(bad)
push
dec
ja
sbb
cmp
mov
in
ja
aam
jmp
xor
pop
xchg
jge
cmp
sbb
mov
xchg
jae
jno
ins
call
cdq
inc
mov
arpl
sbb
pop
ret
mov
and
cmp
pop
mov
mov
mov
movs
test
inc
sbb
inc
xchg
add
push
mov
cld
imul
fwait
scas
push
call
popa
and
stos
fs
dec
jp
lea
cmp
sbb
int
inc
or
pop
je
jb
inc
sbb
push
inc
aaa
cmp
ins
mov
fstp
lea
and
sub
sub
xchg
retf
and
xchg
mov
std
dec
fs
mov
movs
jnp
aad
out
mov
push
or
mov
cli
add
pop
cmp
push
add
call
cmp
xchg
addr16
sub
mov
and
(bad)
aas
fimul
jle
push
inc
or
lods
jle
mov
xchg
xor
fbstp
lds
mov
ins
xchg
mov
jp
push
and
push
retf
or
sbb
out
or
dec
mov
add
and
cmps
mul
popa
cmp
pusha
rep
pop
sbb
mov
shl
bound
adc
add
or
mov
mov
mov
inc
xchg
xor
sbb
lahf
pop
xor
int
in
cmp
inc
loope
cld
jg
mov
out
daa
mov
popa
inc
add
mov
cmp
cmps
cdq
frstor
or
pop
sbb
push
add
ror
mov
or
stos
push
sysexit
dec
mov
out
mov
inc
adc
and
ins
out
pop
jno
inc
imul
push
ins
rol
add
imul
mov
mov
sub
repnz
cdq
fwait
mov
leave
dec
cli
test
enter
aaa
mov
lock
cs
xlat
(bad)
shl
fbstp
pop
inc
xchg
out
loope
stos
mov
pop
loop
mov
scas
sbb
dec
out
mov
add
arpl
loopne
and
movs
stos
ja
cmp
scas
or
cdq
sub
test
and
cmp
clc
xor
pop
xor
rcl
les
sub
(bad)
jb
(bad)
(bad)
pop
jno
dec
inc
lahf
cmp
mov
and
mov
mov
cmp
test
cdq
mov
cdq
jmp
sbb
sub
dec
mov
sbb
inc
loopne
rcl
data16
add
xor
outs
outs
jmp
popf
sti
mov
mov
mov
stos
cdq
ret
mov
loopne
mov
cmp
adc
sahf
cmp
repz
aam
js
mov
int
enter
lods
sub
js
hlt
jecxz
xchg
mov
test
call
pop
enter
xor
cmp
add
sub
mov
fnstcw
adc
xchg
cmp
and
sbb
stc
mov
arpl
test
test
adc
outs
xchg
mov
test
cmps
or
push
sahf
pop
aad
test
push
ror
leave
push
ss
mov
cmps
mov
(bad)
(bad)
vpmaddwd
(bad)
loope
test
mov
add
shr
pop
(bad)
cmc
out
(bad)
adc
shl
mov
mov
jno
jg
mov
pop
fst
lds
and
add
in
data16
sahf
xchg
std
cld
pop
int
inc
addr16
mov
repz
mov
lods
ffree
in
dec
sub
jge
imul
jp
pop
sub
jnp
pop
jo
shr
sbb
rcl
sub
jne
and
into
jne
mov
adc
cmp
loop
ret
bound
cmp
addr16
sbb
std
repnz
out
jbe
jne
dec
(bad)
icebp
xor
loope
js
mov
push
call
xchg
inc
loopne
aas
aam
mov
xchg
lods
jp
sbb
loop
fld
pop
xchg
and
into
add
rol
mov
(bad)
enter
dec
and
in
inc
fld
or
jge
cwde
es
pop
ret
(bad)
fisubr
sub
xchg
push
ins
add
push
leave
outs
fst
mov
push
pop
pushw
mov
inc
push
loope
jns
push
xchg
idiv
stos
loopne
icebp
nop
cmp
push
jnp
ret
out
mov
cdq
dec
dec
sti
push
pop
dec
sub
mov
xchg
mov
sbb
cld
sti
inc
test
mov
stos
leave
mov
push
xchg
push
test
push
shr
dec
popf
pop
pop
sbb
mov
add
es
dec
ins
inc
jnp
adc
shr
mov
push
int3
out
mov
jmp
mov
out
pop
call
es
add
ja
jg
or
aam
push
mov
stos
mov
xchg
fwait
icebp
jae
rcl
pushf
dec
aam
mov
test
adc
push
nop
dec
nop
daa
mov
inc
cmps
add
dec
test
push
repz
aaa
jge
jp
push
(bad)
je
mov
stos
xchg
jecxz
(bad)
lea
xchg
mov
imul
scas
pusha
and
outs
pop
add
and
cmp
or
sub
dec
add
pop
pop
cmp
inc
(bad)
mov
je
pop
shr
rcl
scas
xchg
iret
sub
or
xchg
jae
out
das
je
(bad)
ds
popf
neg
pop
stos
pop
xor
push
adc
stos
test
nop
add
cli
mov
xchg
aaa
push
jns
push
or
(bad)
into
aaa
dec
and
xor
mov
sbb
scas
rcl
repnz
arpl
jnp
adc
add
inc
cmp
fisub
cmps
popa
(bad)
sbb
pop
mov
xchg
or
iret
je
bswap
imul
dec
data16
and
jecxz
mov
push
sub
cmp
xor
xchg
dec
xchg
sbb
inc
xor
sub
dec
call
cmp
add
ss
inc
mov
aaa
(bad)
sbb
mov
out
dec
push
sar
out
xor
rol
jae
inc
ret
cdq
fwait
adc
jp
fldenv
sbb
je
cmp
jge
push
test
jnp
fwait
ret
aas
mov
and
and
ret
in
sbb
nop
mov
mov
jmp
js
sahf
xor
push
adc
xor
mov
lods
jl
xchg
pop
cmp
and
fs
xchg
daa
adc
pop
cmp
sub
js
adc
lea
add
outs
pop
pop
jne
inc
adc
push
cmp
sbb
std
inc
dec
iret
in
pop
lods
in
aas
pop
inc
sub
mov
mov
call
or
mov
ins
mov
mov
dec
or
jmp
aad
push
xor
lods
std
ss
mov
mov
test
and
xchg
dec
jb
mov
shl
inc
pop
repnz
fstp
mov
dec
adc
movs
inc
mov
mov
lahf
pop
xchg
jo
push
xor
ja
mov
lock
int3
dec
mov
lods
test
es
sub
out
add
mov
push
jnp
add
mov
xchg
cmp
in
mov
dec
outs
mov
mov
scas
pusha
add
xor
mov
bound
inc
push
div
adc
repnz
cmp
mov
in
shl
movs
fisub
dec
cmp
in
or
pop
scas
mov
std
cmp
dec
lds
call
xchg
lahf
lods
jp
out
jae
leave
sub
rol
movs
call
stos
out
mov
retf
dec
adc
push
xchg
in
xor
ret
add
mov
cmp
cmp
mov
shl
int
dec
xor
push
lock
xor
or
xchg
bound
or
dec
popf
xlat
mov
mov
push
movs
mov
xchg
pop
push
jb
xor
lock
xchg
sub
jo
pop
in
int
shr
jmp
aas
pop
sbb
and
adc
pop
lock
mov
neg
mov
ror
shl
retf
es
xor
add
mov
aad
mov
sbb
mov
movs
je
leave
xor
mov
mov
inc
inc
sbb
dec
dec
push
sbb
xor
imul
call
cwde
shl
lock
mov
daa
popf
pop
pusha
in
jno
addr16
(bad)
in
xchg
mov
and
and
mov
push
push
mov
push
mov
int
shl
mov
pop
bnd
(bad)
aam
test
sbb
sub
lds
test
push
xor
sub
fisub
popa
jae
mov
lds
sub
addr16
aaa
inc
dec
xlat
pop
jg
mov
sub
xchg
push
adc
fstp
pop
ss
add
dec
ds
sub
stos
ret
adc
push
cs
(bad)
je
mov
adc
dec
and
pop
push
jp
fisttp
add
mov
call
cs
repz
pop
aaa
mov
shl
in
lods
dec
jb
mov
mov
ins
jmp
push
jle
inc
fild
(bad)
push
dec
in
or
leave
ja
pop
jbe
ror
push
in
mov
add
xchg
hlt
popf
xor
sub
sub
sub
xchg
dec
add
pop
add
mov
pop
jns
leave
add
xchg
mov
mov
out
pushf
sub
add
or
cmp
into
or
sar
dec
pop
lea
xor
or
xchg
inc
imul
out
mov
push
inc
loop
sub
xor
imul
imul
mov
fisubr
mov
pop
xor
push
inc
(bad)
cmp
xchg
loope
lahf
sub
cwde
cwde
cmp
or
sub
mov
cmp
cs
push
dec
or
imul
ins
packssdw
(bad)
mov
jmp
inc
mov
retf
mov
movs
mov
sub
and
in
inc
xor
dec
les
cdq
dec
jns
push
inc
inc
sbb
jp
inc
out
jnp
sub
call
dec
fcmovnbe
adc
pop
add
outs
adc
fwait
lods
push
add
into
stos
or
in
sbb
jnp
jmp
sub
pop
push
cmp
cli
xor
pop
es
xchg
or
into
mov
addr16
push
mov
jp
xchg
ss
add
sub
xor
jb
movs
or
dec
imul
lods
mov
pop
sar
ret
jae
test
inc
retf
xor
pop
cmp
cmp
cmc
sub
gs
add
hlt
and
and
icebp
mov
xor
mov
enter
ret
jl
sbb
repnz
imul
sahf
int3
sbb
test
iret
mov
jle
ins
dec
xor
xor
mov
mov
popf
fstp
fisubr
pop
sub
out
ret
in
(bad)
lock
mov
fcomp
sub
push
movs
add
test
call
outs
sub
cmp
rol
rcl
cmp
mov
xor
adc
icebp
push
or
fucomip
xor
ja
stos
add
mov
movs
clc
(bad)
xchg
mov
xor
jns
mulps
dec
inc
(bad)
sub
sahf
rcr
aas
push
jb
arpl
jmp
dec
loopne
xchg
xchg
not
or
push
repnz
in
pop
push
cmp
push
xchg
jmp
int3
(bad)
sub
xchg
or
ret
sbb
mov
test
jnp
mov
cmps
ja
aas
cmp
aas
sbb
mov
and
push
sbb
mov
pop
dec
icebp
lea
fs
fs
jmp
cmp
push
push
and
inc
and
adc
(bad)
mov
sbb
movs
rcr
xchg
push
sti
dec
fild
ja
les
pop
jns
inc
mov
sbb
and
retf
aas
jp
imul
out
mov
call
lea
mov
stos
jl
xchg
fild
idiv
leave
push
addr16
jae
loopne
push
arpl
addr16
mov
(bad)
cmps
popa
arpl
sbb
in
xchg
cmc
cdq
inc
push
mov
repnz
jae
fimul
sbb
(bad)
fisubr
mov
out
xor
xor
sbb
repnz
adc
fst
scas
push
cli
imul
cmp
dec
mov
sbb
dec
mov
jmp
stos
adc
mov
sub
movs
fisubr
ret
cmp
aaa
cs
ja
cld
mov
pop
xor
xchg
shl
jae
mov
call
pop
and
inc
arpl
cld
dec
pushf
dec
arpl
pop
push
mov
inc
out
rcl
mov
bound
xchg
dec
not
dec
jo
int3
jg
jbe
or
mov
mov
(bad)
std
iret
pop
outs
xor
xchg
inc
xor
pop
mov
dec
stos
jg
dec
mov
push
push
inc
jne
cmps
outs
out
popa
pop
lods
dec
ret
push
ror
ss
mov
cdq
pop
jae
arpl
push
lods
shr
ret
arpl
stos
sub
inc
pop
ret
shl
lods
dec
(bad)
sbb
out
adc
dec
bound
lds
sub
or
cs
(bad)
push
daa
enter
adc
ret
aad
xchg
adc
jae
xchg
and
sub
adc
daa
mov
pop
fwait
hlt
mov
aaa
lds
sub
popa
cs
jne
in
add
loop
push
inc
pop
add
cmp
out
popa
adc
(bad)
jmp
push
(bad)
out
fist
iret
cmc
bound
inc
push
xchg
pop
jo
scas
shl
stos
push
loope
icebp
pusha
push
jmp
js
lea
gs
(bad)
lds
fistp
push
inc
sbb
aad
pop
ret
sbb
iret
stos
sbb
sbb
xchg
outs
xchg
mov
pop
jo
loopne
ret
mov
mov
mov
(bad)
jnp
xor
push
mov
enter
data16
je
dec
sar
fidiv
add
arpl
or
jp
adc
lock
add
arpl
add
mov
pop
jle
jecxz
mov
mov
jecxz
shl
adc
lock
adc
inc
ret
add
popa
adc
test
lods
inc
call
gs
scas
ret
rcl
aaa
adc
loopne
inc
mov
xchg
ja
call
lods
jno
dec
ret
push
jecxz
push
bound
mov
inc
rol
mov
mov
or
retf
push
inc
in
push
gs
add
(bad)
cmps
lods
pop
lds
(bad)
into
mov
call
push
lods
inc
test
push
lods
and
jg
mov
jnp
dec
mov
cmps
fild
jns
push
lods
shl
cmps
mov
stos
rcr
ds
dec
xor
sbb
(bad)
jl
ffreep
repz
rol
xor
jnp
add
mov
lods
jno
aas
and
or
jnp
xchg
jg
mov
jae
enter
bound
inc
jecxz
(bad)
aas
push
pop
or
ins
(bad)
aas
stos
aas
cli
mov
shr
data16
(bad)
mov
lods
aaa
shl
adc
out
add
mov
add
push
push
jnp
sub
mov
lahf
(bad)
dec
in
inc
mov
pop
inc
pop
bound
sar
sbb
arpl
cwde
add
inc
xor
sbb
cmp
mov
icebp
gs
xlat
fcom
mul
add
fisttp
stos
retf
loopne
xor
xchg
psrld
pop
dec
jne
sbb
(bad)
(bad)
pop
sbb
scas
push
rol
pop
xchg
jp
pop
stos
(bad)
scas
lods
jae
lods
loope
inc
mov
sbb
je
mov
mov
out
and
bound
sbb
pusha
call
push
repnz
(bad)
idiv
jle
out
ins
dec
out
xor
adc
loopne
fadd
xor
rcl
and
pop
add
mov
ret
in
hlt
sahf
in
and
or
fwait
pop
adc
ja
inc
ss
cdq
jae
(bad)
in
add
(bad)
fucomip
pop
xchg
pusha
in
xor
(bad)
stc
xor
mov
inc
(bad)
out
mov
pop
imul
inc
jnp
add
clc
pop
add
rcl
inc
mov
into
ja
loope
mov
(bad)
pop
outs
shl
bound
xchg
fadd
mov
ins
dec
adc
xchg
ret
sbb
div
les
push
sub
out
lods
xchg
out
mov
in
jae
dec
jb
ss
call
dec
jecxz
movs
cs
pop
xchg
jb
dec
jmp
cld
lods
outs
mov
into
cs
daa
sahf
add
hlt
mov
and
loope
xchg
or
push
adc
mov
jnp
out
out
mov
mov
xchg
inc
dec
pop
pop
or
aam
rol
rcl
push
mov
popa
mov
cmp
cwde
iret
push
test
or
sbb
or
call
in
divps
mov
jg
mov
mov
out
xor
fs
fdiv
js
sbb
jmp
jnp
out
sbb
xor
dec
xchg
xchg
mov
(bad)
aaa
out
loope
push
clc
sub
xchg
jnp
shl
pop
enter
jbe
rol
mov
daa
jp
stos
mov
jnp
xchg
ror
jmp
mov
lock
mov
xchg
std
js
or
adc
call
sbb
fs
outs
fs
sub
hlt
out
div
xchg
ret
ja
dec
and
mov
push
jge
mov
inc
iret
sbb
xchg
js
sahf
(bad)
jp
stos
mov
cmp
fisub
inc
pop
add
jmp
mov
sti
test
es
mov
addr16
aam
inc
xchg
sbb
aam
test
xchg
call
test
mov
sbb
gs
(bad)
loope
jecxz
cmps
icebp
inc
xchg
jno
mov
inc
xchg
inc
jle
inc
ss
push
push
(bad)
into
mov
outs
mov
or
xchg
nop
adc
mov
shl
pop
mov
stos
add
sar
rol
jnp
pop
sub
mov
pop
pop
rcr
mov
mov
mov
into
pusha
mov
retf
sbb
pop
xchg
add
and
mov
inc
out
hlt
push
inc
add
and
mov
inc
repz
scas
jnp
inc
ret
xchg
stos
sub
addr16
sbb
call
(bad)
and
addr16
pop
mov
xchg
dec
pop
(bad)
mov
fs
sbb
inc
stos
jg
inc
scas
jmp
stos
or
mov
inc
lock
call
stos
adc
xchg
push
call
imul
pop
(bad)
loop
push
test
out
push
or
jnp
cli
push
cmps
mov
jg
adc
stc
inc
jno
cli
imul
jle
rol
sub
cli
cli
addr16
xchg
mov
ffree
sbb
jge
push
stos
adc
popa
arpl
mov
pop
pop
pop
inc
mov
xlat
popa
stc
xchg
mov
enter
pop
cs
inc
xchg
mov
inc
stos
pop
push
push
test
pop
imul
daa
xchg
out
pop
jmp
out
cli
(bad)
(bad)
push
pop
out
and
cmp
test
inc
xchg
push
cmps
inc
push
ds
shl
push
jnp
push
enter
pop
ds
jle
mov
and
mov
mov
rcr
inc
repz
mov
push
push
mov
mov
lds
jb
mov
into
fiadd
inc
fs
jp
dec
rcr
push
cmp
and
adc
arpl
scas
shl
adc
lahf
push
das
mov
adc
pop
push
lea
sub
sub
stos
cmp
clc
repz
add
mov
icebp
fs
and
cmp
pop
sub
les
mov
outs
arpl
jg
sub
ja
daa
(bad)
lock
jnp
loope
mov
aas
xor
or
mov
or
mov
and
jl
pop
scas
shr
in
mov
retf
outs
jmp
loopne
sub
mov
rol
shr
es
pop
mov
cmp
into
mov
stos
sub
adc
pop
aaa
mov
pop
icebp
clc
xchg
data16
retf
gs
sub
dec
mul
je
pop
nop
add
sub
fst
rol
popa
cmps
fistp
rcl
(bad)
into
push
dec
ds
(bad)
sti
or
retf
ret
jbe
fisub
mov
pop
icebp
inc
test
(bad)
retf
xchg
aas
(bad)
arpl
jle
loope
jae
hlt
push
mov
mov
ror
mov
adc
pop
and
mov
adc
addr16
lock
pop
jnp
mov
repz
adc
mov
jnp
jnp
inc
mov
into
loope
out
neg
stos
mov
pop
test
ds
fmul
mov
sub
je
pop
xor
mov
ffreep
dec
xchg
mov
adc
call
xor
xor
jl
test
jp
xchg
fs
sti
mov
jg
arpl
xchg
adc
cli
sub
les
and
retf
shl
pop
add
cmps
rol
call
cld
cli
adc
popa
push
mov
addr16
test
(bad)
jmp
sub
xchg
cdq
retf
repnz
xor
stos
test
loopne
xchg
jmp
ret
mov
ret
ror
imul
jecxz
push
mov
pop
jp
imul
scas
mov
sti
or
mov
mov
inc
scas
out
mov
mov
ffreep
pop
push
lea
ins
cdq
test
jg
iret
ja
lahf
retf
mov
popa
sub
out
loopne
fnclex
test
icebp
bound
sti
repz
sub
pusha
lods
outs
imul
imul
push
neg
retf
test
cmps
push
push
xor
ret
ret
sbb
loope
pop
and
xchg
mov
push
pop
dec
lea
ja
or
(bad)
(bad)
(bad)
sti
fst
loop
pop
pusha
ret
or
mov
add
sub
adc
sbb
(bad)
stos
out
adc
mov
push
and
mov
stos
es
jmp
rol
xor
das
xchg
xchg
inc
enter
and
push
pusha
aas
(bad)
pop
mul
icebp
cmp
pop
lock
push
(bad)
scas
xchg
lahf
lock
iret
adc
mov
popf
cmp
outs
add
imul
ror
mov
scas
hlt
stos
ins
mov
sub
fisttp
outs
inc
inc
outs
jbe
fst
test
xchg
dec
jl
mov
cmps
dec
xchg
pop
push
gs
push
daa
cmp
and
xchg
mov
cmp
sub
in
iret
iret
pop
shr
cs
jnp
mov
retf
mul
adc
mov
and
cmp
shl
sbb
mov
loope
mov
add
popf
into
mov
popf
int
push
sbb
sub
shl
lahf
or
xchg
push
mov
fistp
popa
mov
xlat
adc
adc
dec
pop
cmps
addr16
push
push
and
jae
std
push
mov
inc
push
mov
sbb
loopne
dec
xor
and
push
sbb
and
mov
daa
pop
repnz
mov
por
adc
int3
cmp
sbb
pop
jo
mov
jbe
pop
mov
cmp
sbb
sub
mov
ud0
sbb
addr16
aaa
adc
adc
bound
dec
inc
or
xchg
pop
sti
(bad)
xchg
rol
lods
inc
inc
sbb
mov
pop
mov
jo
inc
loopne
push
adc
xchg
and
loop
inc
les
xchg
mov
fisubr
pop
jmp
imul
test
mov
stos
aaa
nop
pop
xor
rcl
xchg
cmp
ret
test
and
inc
inc
add
cdq
ins
mov
ds
arpl
xchg
xor
dec
lock
imul
(bad)
push
xor
call
scas
mov
adc
js
sbb
into
xor
push
mov
and
cs
pop
retf
jg
jo
repz
pop
or
pusha
das
stos
icebp
(bad)
pop
scas
jnp
icebp
sub
pop
push
das
cwde
aaa
outs
and
je
dec
jo
sbb
div
jo
xchg
adc
call
das
je
adc
in
test
movs
es
mov
jbe
pop
nop
dec
je
mov
test
test
daa
add
adc
lock
mov
dec
mov
inc
call
cld
adc
scas
sub
inc
add
pop
inc
rcr
cmp
and
jnp
add
inc
push
pop
mov
push
ins
mov
call
mov
dec
ins
pop
jns
cmps
popw
or
lea
leave
call
cmp
inc
sub
in
dec
test
(bad)
and
hlt
ret
das
and
lods
aas
popa
jae
rcl
pop
sub
mov
in
or
sahf
dec
inc
adc
js
mov
push
mov
ds
push
xchg
push
push
pop
(bad)
push
cmps
scas
mov
mov
sub
ret
mov
add
push
mov
data16
sub
test
shl
das
add
in
push
mov
das
push
pop
retf
fisub
ror
jo
arpl
rol
stos
lods
pop
push
push
jne
jbe
neg
pop
dec
xor
inc
or
rcr
in
or
fld
push
hlt
aam
jmp
push
bnd
jbe
push
jnp
daa
dec
les
test
scas
sbb
imul
cdq
or
stc
pop
cmp
add
push
push
icebp
cli
mov
lock
sub
inc
pop
(bad)
mov
adc
std
ret
lahf
leave
mov
xchg
daa
test
jns
xor
jo
push
popa
nop
lock
and
test
adc
jno
push
jmp
aam
cmps
dec
into
add
add
add
fld
mov
ja
movs
mov
push
movs
adc
sar
scas
mov
outs
and
dec
ss
push
and
outs
adc
sbb
icebp
mul
jl
dec
arpl
inc
sbb
rcl
cli
adc
cld
scas
es
icebp
scas
xlat
jle
not
push
jmp
lock
enter
jmp
mov
rcl
sub
mov
gs
mov
inc
leave
add
push
mov
jmp
retf
not
push
jle
ja
pop
jmp
push
add
les
(bad)
ss
jb
xchg
leave
sub
out
data16
cld
xchg
fdiv
xor
lahf
in
(bad)
aaa
shl
in
push
fsubr
pop
and
in
mov
adc
lock
stc
repz
lea
loop
stos
sub
inc
test
pop
mov
lea
nop
stos
das
data16
pop
cmp
add
ret
mov
push
add
pop
les
outs
cs
dec
or
xchg
fs
xor
jl
mov
neg
and
cwde
or
imul
cs
mov
mov
div
outs
mov
mov
out
daa
mov
sbb
xor
jns
gs
je
pop
cmp
push
aaa
jmp
rcl
xchg
inc
adc
fstp
push
clc
and
cmps
push
lods
sbb
mov
cli
mov
adc
dec
pop
pop
mov
call
xlat
sbb
mov
aaa
aas
adc
mov
ins
push
fimul
jle
jl
dec
fisttp
shl
loopne
scas
mov
cmp
(bad)
ja
adc
mov
test
retf
pop
into
and
inc
stos
add
lock
aaa
(bad)
out
out
ins
and
mov
inc
(bad)
pop
shl
int3
jg
sbb
outs
inc
jg
dec
hlt
mov
xchg
imul
sbb
push
and
cs
sbb
pop
adc
shr
mov
mov
repz
addr16
sbb
adc
or
and
push
in
or
xchg
movs
div
and
outs
pop
dec
(bad)
(bad)
sub
jb
adc
mov
(bad)
fwait
fwait
jecxz
arpl
and
add
lock
push
mov
cmp
pop
mov
scas
data16
mov
dec
sbb
xor
shr
cmc
pop
outs
xor
sbb
pop
xchg
ror
push
aam
aaa
inc
daa
loope
xchg
jecxz
inc
shl
xchg
mov
mov
mov
test
ins
push
inc
add
cmps
add
inc
dec
fs
sub
loop
or
sbb
push
aaa
in
lods
rol
repnz
out
movs
stos
jnp
(bad)
mov
lahf
xchg
fbld
shl
mov
and
cmp
sub
dec
adc
lods
cmp
jl
gs
push
ds
pop
test
xor
jne
add
fld
out
pop
pop
sbb
add
mov
hlt
sahf
call
je
sub
fild
sbb
xlat
jmp
mov
loop
mov
adc
xlat
sbb
stos
mov
add
mov
sub
and
xlat
mov
(bad)
fcomp
pop
push
jae
and
mov
pusha
mov
rol
(bad)
cs
inc
inc
mov
push
mov
inc
mov
and
pop
pop
push
inc
and
imul
ret
mov
fidiv
pop
rcr
mov
adc
cmp
test
(bad)
popa
pop
js
shl
inc
out
mov
jae
sbb
adc
loope
inc
int3
sub
add
add
outs
sbb
lea
mov
fdiv
mov
stos
sar
shr
addr16
mov
inc
rcr
add
cmp
daa
adc
inc
sub
stos
mov
push
rcr
cmp
sbb
mov
jnp
push
sub
hlt
fcomp
gs
pop
adc
loope
dec
or
ins
(bad)
gs
pushf
pushf
ror
int3
addr16
fidiv
fwait
rcl
jo
fmul
xor
xchg
mov
retf
cmps
xor
xor
mov
dec
push
xchg
sub
scas
push
push
test
sub
mov
sbb
add
inc
out
mov
sub
push
jno
jmp
xchg
mov
scas
scas
out
ret
lahf
adc
jno
rcr
out
push
xchg
loope
xchg
push
icebp
mov
pop
xor
sbb
retf
mov
push
scas
inc
add
mov
ret
jbe
pop
mov
retf
stos
adc
and
push
sbb
jo
push
jno
fcomi
mov
mov
mov
mov
cld
mov
inc
(bad)
jo
adc
add
in
out
mov
mov
mov
(bad)
loope
(bad)
movs
retf
or
xchg
jecxz
jns
xlat
push
push
sub
cli
adc
popa
lock
cmp
and
adc
les
pusha
or
iret
icebp
repz
xchg
dec
jl
fs
jnp
jp
mov
add
pop
xchg
int3
repnz
jge
add
je
cld
sbb
cmps
shl
mov
mov
fcom
scas
icebp
lods
inc
or
jnp
cmp
add
push
add
add
pop
mov
or
push
into
pop
div
shl
test
(bad)
fisttp
scas
add
ja
xor
xchg
sub
mov
jmp
mov
xor
idiv
xchg
pop
adc
mov
mov
sub
sub
jns
repnz
mov
or
call
scas
xchg
ret
jle
mov
cmovg
leave
adc
pop
push
add
mov
or
or
in
add
in
push
push
adc
iret
fiadd
mov
pushf
cld
or
jle
pop
jge
pop
mov
mov
adc
jle
jle
hlt
sub
xlat
adc
pop
xchg
jbe
test
div
mov
mov
push
sub
jg
mov
sbb
sar
jp
mov
mov
cmps
adc
cli
fxch
dec
pushf
mov
test
mov
fistp
and
clc
icebp
mov
fwait
push
lea
loope
mov
js
sub
mov
repnz
ret
call
and
jecxz
and
and
mov
or
repz
mov
scas
(bad)
cmp
jg
loope
inc
xchg
stos
adc
cld
fimul
mov
in
add
mov
aam
(bad)
push
icebp
imul
and
cmp
dec
pop
mov
xor
or
lea
cmps
lods
pop
xor
loope
nop
pop
jo
lahf
sar
das
dec
nop
mov
jne
pop
sub
cli
mov
xlat
pushf
icebp
jno
pusha
jbe
pop
mov
xchg
pop
push
jbe
xchg
push
inc
out
sub
out
dec
xchg
mov
stos
push
inc
mov
out
inc
cmps
sub
int
mov
ret
mov
or
inc
int
mov
rol
push
out
stc
ins
sub
outs
dec
xchg
mov
xchg
push
inc
retf
xor
out
add
jo
mov
mov
push
or
out
push
nop
jo
or
mov
mov
inc
ds
out
je
aaa
rcr
aad
out
push
std
shl
jmp
sti
pop
fmul
mov
fwait
icebp
dec
add
popf
lea
xchg
icebp
hlt
(bad)
scas
(bad)
ins
jg
ds
mov
aam
sub
xlat
inc
sub
push
xor
pushf
fistp
imul
xchg
xchg
xor
out
out
test
das
cmp
push
push
cmp
imul
mov
pop
ds
sti
add
xor
jo
add
push
cmp
jo
repnz
js
inc
mov
mov
xchg
or
pop
mov
fs
jl
pop
in
scas
rcr
mov
jo
inc
sbb
jp
sbb
mov
cmp
fst
and
out
inc
sub
aaa
rcl
(bad)
mov
push
push
ror
arpl
out
sub
mov
loope
inc
jo
dec
mov
sub
cmp
mov
push
cs
stos
adc
sbb
xor
jmp
mov
mov
je
jae
dec
xchg
mov
das
sbb
and
(bad)
pop
lds
mov
lds
mov
push
xchg
sub
xlat
(bad)
pop
icebp
jge
adc
mov
xchg
lock
mov
bound
scas
inc
or
in
std
ja
jecxz
inc
mov
xchg
pop
xor
ret
enter
adc
out
add
sub
mov
mov
loope
inc
jmp
sub
gs
mov
jno
aaa
mov
or
cli
xchg
pop
sbb
rol
mov
mov
inc
jo
aad
int3
out
in
jo
pop
out
mov
mov
sub
jg
sbb
mov
or
sub
std
stos
pusha
test
inc
das
(bad)
mov
mov
push
add
push
(bad)
cwde
dec
mov
loope
ror
in
popa
fidivr
rol
push
add
rol
push
xchg
jg
or
sar
xchg
into
ins
or
push
push
jmp
push
and
outs
leave
or
add
sub
xlat
inc
mov
mov
adc
xchg
lods
and
out
enter
fld
sbb
mov
imul
inc
js
mov
jg
(bad)
mov
xchg
or
push
mov
aam
jl
sbb
mov
pop
inc
cmp
nop
jo
adc
inc
outs
imul
xchg
mov
call
add
cmp
fcomp
jb
mov
inc
das
mov
add
out
ret
cmp
xchg
xor
mov
add
out
out
xchg
into
jp
inc
es
cmc
adc
add
adc
inc
and
push
jmp
or
mov
add
mov
mov
clc
add
data16
loope
int
and
out
fmul
mov
mov
in
sub
pop
jl
xchg
cwde
jb
sbb
sub
push
loopne
xchg
xlat
jg
scas
sub
sub
in
das
cvtpi2ps
mov
fild
imul
xor
ret
enter
in
xor
das
sub
sbb
pop
mov
hlt
mov
and
sub
mov
and
(bad)
mov
push
stos
jo
or
mov
adc
into
jmp
(bad)
in
out
ror
jnp
test
sub
jbe
popf
mov
clc
sti
pop
xchg
repz
sub
push
xchg
sar
retf
std
mov
jo
loope
jbe
(bad)
inc
icebp
jecxz
or
mov
sub
mov
rcl
mov
out
ja
push
mov
retf
xchg
mov
push
inc
call
inc
das
mov
ja
and
rol
lock
out
push
jmp
lea
add
mov
outs
mov
add
add
xor
push
mov
(bad)
push
or
inc
add
adc
xor
adc
adc
aad
mov
std
jnp
mov
push
mov
dec
add
les
popa
scas
and
fwait
push
push
and
xchg
add
mov
retf
xchg
aas
stos
push
inc
jmp
inc
das
mov
daa
xchg
sub
xlat
inc
sub
xor
mov
out
xchg
sub
and
inc
xor
inc
js
aam
jg
(bad)
mov
xchg
and
shr
out
push
mov
dec
adc
sub
add
jecxz
mov
ds
addr16
outs
xor
ja
pop
mov
sahf
pop
mov
push
cld
jl
out
addr16
lea
mov
adc
fld
xchg
push
jo
iret
inc
push
xchg
adc
(bad)
out
push
jmp
inc
or
pop
mov
push
xchg
sub
xor
ret
enter
jge
(bad)
out
add
sub
mov
mov
loope
inc
jmp
sub
xor
mov
inc
jg
nop
loopne
out
push
jmp
add
out
mov
ret
add
mov
outs
jl
repnz
push
dec
lahf
mov
iret
aaa
mov
or
jl
into
jle
mov
sbb
inc
ins
ins
inc
ins
adc
xchg
imul
inc
loope
push
add
mov
add
hlt
call
xchg
sub
xor
ret
enter
sub
xchg
sub
mov
mov
loope
inc
sbb
cmp
push
pop
xchg
add
inc
inc
js
add
add
cs
pop
pop
movs
pop
cmp
inc
sub
mov
ret
adc
mov
aas
jl
and
mov
adc
std
lock
loop
lods
jg
sbb
cmp
or
mov
cmps
sub
jle
mov
sahf
test
outs
jg
inc
xchg
inc
inc
das
mov
push
xchg
xchg
ret
mov
push
push
cmp
sub
add
adc
ret
fidiv
scas
pop
rcr
out
inc
xchg
jl
mov
loope
inc
sub
sub
mov
mov
ret
dec
mov
sub
hlt
sub
sbb
add
adc
and
adc
int
adc
scas
imul
mov
cmp
test
pop
sub
mov
ror
inc
arpl
push
loope
xchg
add
mov
retf
xchg
jg
push
inc
stos
aas
push
dec
xor
or
push
lods
mov
push
cmc
mov
push
or
out
in
sub
sub
xor
dec
jae
rol
call
inc
(bad)
mov
inc
cmps
jo
add
cmp
pop
inc
jg
inc
in
inc
or
jnp
pop
mov
int3
scas
cmp
sbb
jmp
hlt
bound
cmc
push
imul
mov
fist
jle
mov
bound
inc
mov
imul
cmovae
ss
rol
push
repnz
or
das
lock
js
and
jg
or
iret
mov
adc
and
retf
xor
das
pop
(bad)
in
mov
mov
fsubr
scas
adc
pop
xor
push
mov
mov
jb
inc
(bad)
mov
inc
push
jae
or
mov
dec
push
jp
lock
clc
jl
mov
outs
sub
push
retf
mov
out
inc
dec
cmp
popf
dec
das
ret
xchg
ror
jecxz
mov
xchg
mov
xchg
pop
pop
ret
sti
test
adc
out
out
hlt
xchg
fist
push
jmp
cs
das
or
xchg
jg
or
sar
xchg
into
stos
or
adc
fs
mov
add
jae
mov
mov
push
or
out
ret
mov
jp
pop
xchg
clc
mov
imul
inc
js
in
jl
or
ror
xor
sbb
mov
push
loope
pop
push
pop
cmp
adc
mov
pop
adc
mov
jg
or
xor
push
pop
and
jae
loopne
push
jno
pushf
mov
pop
mov
in
mov
xor
pushf
mov
outs
lahf
movs
stos
cmp
out
xchg
into
jge
mov
cmp
push
xchg
adc
mov
add
ret
xchg
mov
fdiv
inc
jae
xor
push
lahf
icebp
movs
sub
sub
psrlq
mov
push
add
movs
adc
pop
rcr
sub
(bad)
enter
xor
pop
mul
pop
pop
add
ror
shr
dec
xchg
test
nop
xor
aaa
pop
mov
retf
shr
dec
mov
push
push
int
mov
xor
popa
bound
das
sub
cmp
xor
cmp
push
bswap
shr
pop
ret
pop
mov
scas
add
mov
js
das
popa
sub
push
test
test
mov
jle
rcl
cwde
jae
mov
push
pop
jnp
xor
aaa
jmp
sbb
push
jmp
xlat
repnz
mov
mov
xor
jmp
mov
ret
and
ins
iret
adc
retf
ds
inc
cmps
xchg
sub
fs
push
lahf
mov
xchg
lock
outs
jmp
push
pop
xor
fdiv
push
scas
or
retf
mov
xor
ins
mov
jae
bnd
lahf
mov
mov
push
push
mov
xchg
sbb
or
sub
inc
in
ins
mov
mov
dec
loopne
retf
lock
pop
mov
hlt
jbe
mov
xchg
cmp
mov
out
test
sbb
mov
push
bswap
jno
dec
mov
and
sub
or
icebp
pop
and
xchg
(bad)
jmp
ret
inc
or
jg
enter
pop
bndldx
mov
push
or
jno
and
pop
and
sub
dec
fwait
inc
lahf
mov
ss
push
out
lds
enter
cmp
cld
rol
mov
mov
cmp
push
mov
push
sbb
retf
push
lock
wrmsr
mov
push
lock
wrmsr
mov
push
lock
ret
mov
push
lock
retf
push
outs
pop
jge
xor
fwait
push
pop
push
out
xor
fwait
push
pop
jg
sbb
shr
push
pop
adc
sbb
shr
push
pop
sub
sbb
shr
sahf
or
jl
or
jno
sbb
rcr
idiv
fucomp
pop
add
cmp
or
pushf
mov
or
int
or
adc
out
push
xchg
loop
mov
hlt
jbe
push
in
lea
mov
push
push
lea
int3
mov
push
pop
and
xor
mov
xor
aas
push
ret
inc
mov
xor
retf
push
lock
push
xor
and
hlt
lock
mov
push
jl
jg
pop
mov
or
dec
add
push
loopne
loope
mov
add
adc
(bad)
jl
or
outs
mov
or
dec
mov
or
repnz
or
aad
cmp
push
xchg
or
xor
or
iret
mov
or
cs
or
jbe
mov
xchg
or
rol
fs
jmp
or
push
mov
push
ins
xchg
retf
push
xor
not
push
dec
cmp
div
inc
xlat
jge
(bad)
jnp
rcl
xor
int
inc
test
sub
inc
dec
push
lahf
inc
test
sub
mov
test
jno
mov
(bad)
mov
int
mov
xor
jp
jmp
push
lahf
dec
test
(bad)
mov
dec
test
das
repz
mov
dec
test
das
repz
mov
dec
test
das
repz
mov
dec
test
das
lock
adc
inc
cmp
scas
test
adc
push
adc
sbb
scas
int
mov
or
retf
pushf
jbe
push
icebp
lea
mov
push
push
xchg
lea
mov
push
push
pop
sub
or
ins
mov
pushf
sbb
fdiv
push
pop
adc
sbb
mov
push
clc
lock
push
cmp
adc
cmp
clc
sub
xor
add
xchg
jae
mov
add
xchg
inc
frstor
mov
pop
icebp
adc
push
loopne
adc
nop
add
test
dec
mov
xor
(bad)
fsubr
add
sahf
xor
(bad)
aas
ins
mov
sahf
xor
jmp
ins
mov
sahf
xor
inc
push
or
xor
lea
add
or
mov
pop
lods
or
or
mov
pop
lods
or
or
mov
pop
lods
or
or
mov
pop
lods
or
or
dec
div
jp
jns
dec
imul
mov
cwde
popa
xchg
inc
test
jge
mov
div
bound
out
das
pusha
pop
push
scas
cmc
test
(bad)
cs
retf
add
cmps
xor
jno
or
or
(bad)
das
repnz
jno
push
cdq
jmp
jle
pop
mov
push
repnz
xchg
ja
(bad)
push
js
iret
stos
xor
lock
xlat
lock
or
mov
jo
rcr
(bad)
jp
jl
or
add
cs
cmc
out
jle
mov
pop
jl
pushf
rol
lds
xchg
push
bound
jg
or
aaa
icebp
inc
imul
lds
sahf
lea
pop
test
push
sahf
rol
inc
jl
mov
lds
adc
push
in
fist
mov
sbb
retf
xchg
das
addr16
pop
mov
js
push
mov
dec
push
jl
pop
fadd
mov
out
stos
imul
add
inc
idiv
ret
loope
je
pop
or
popa
sub
popa
movs
or
int
inc
add
pusha
(bad)
pop
shl
jp
retf
loopne
mov
pop
test
sahf
int
ja
push
out
inc
(bad)
pop
mov
cmps
or
cs
retf
mov
push
cmps
xor
mov
pop
idiv
mov
or
push
sbb
and
and
mov
aaa
push
mov
pop
push
mov
rcl
mov
sbb
pop
test
sbb
retf
jecxz
mov
mov
sbb
pop
idiv
iret
loope
ja
mov
lock
xlat
rcl
pusha
mov
sub
retf
pop
push
rcr
sub
outs
out
mov
pop
push
mov
pop
div
jp
jns
pop
imul
movs
ret
push
mov
sbb
mov
sahf
sub
das
mov
mov
(bad)
std
add
mov
mov
push
add
retf
push
je
push
jle
div
dec
mov
mov
push
push
mov
(bad)
jmp
arpl
(bad)
retf
mov
mov
and
lock
mov
lea
dec
cmps
int
inc
mov
(bad)
into
mov
mul
adc
mov
and
test
in
fdivr
sub
mov
push
pop
push
xchg
push
idiv
enter
push
cmps
jecxz
push
aas
sub
mov
rcl
push
idiv
enter
push
mov
hlt
xlat
cmp
push
pop
pusha
xchg
(bad)
push
data16
fistp
xchg
push
idiv
leave
loope
je
jb
das
push
aas
ds
jo
xchg
(bad)
das
pushaw
shl
or
sbb
add
ds
div
jp
jne
cmps
pop
and
lock
inc
fild
mov
inc
(bad)
stos
movs
cmc
push
scas
push
imul
mov
ficomp
add
pop
mov
pop
mov
(bad)
push
push
cmc
push
scas
push
imul
mov
ficomp
or
pop
pop
adc
into
xchg
push
adc
(bad)
mov
fiadd
add
or
pop
pop
adc
into
xchg
push
scas
push
imul
xchg
nop
(bad)
mov
and
mov
dec
lahf
daa
shl
pop
jae
outs
not
mov
fisttp
mov
mov
push
rcl
and
add
psrad
dec
xchg
(bad)
pop
jb
fidiv
pop
push
mov
aaa
mov
add
xchg
xchg
sbb
sub
(bad)
push
push
jge
pop
mov
xchg
sub
popf
mov
sub
dec
mov
sub
mov
jmp
rcl
(bad)
stos
xchg
xchg
daa
mov
test
or
movs
cwde
jg
or
je
sbb
(bad)
fild
or
cs
scas
pop
add
retf
push
ja
push
jle
div
gs
fild
or
pop
pop
pop
mov
push
ja
push
jle
div
inc
(bad)
fild
or
and
scas
pop
push
mov
nop
jmp
bound
(bad)
mov
add
shl
jmp
pop
nop
mov
mov
fidivr
or
movs
call
sub
jno
pop
push
enter
mov
shr
xchg
mov
push
sub
(bad)
push
push
push
jno
pop
push
enter
mov
mov
mov
pusha
pop
dec
xchg
(bad)
das
pop
pusha
loop
scas
pop
xor
iret
loope
mov
mov
arpl
mov
jecxz
push
dec
push
xchg
push
pop
mov
inc
mov
mov
add
stos
pop
jo
gs
add
imul
dec
mov
pop
xchg
out
test
mov
push
push
mov
retf
ja
mov
mov
push
cmps
ins
ss
mov
mov
sub
push
jno
xor
mov
test
ja
dec
push
pop
push
jae
sub
or
stc
out
test
xor
or
int
mov
mov
sub
sbb
sub
inc
mov
arpl
(bad)
ret
pop
xchg
idiv
pop
into
bound
mov
mov
into
jmp
xchg
pop
adc
imul
loope
mov
rcr
into
retf
mov
push
cmps
bound
shl
loop
xchg
pop
xor
push
jno
xor
ja
mov
mov
(bad)
mov
pop
mov
push
dec
fcom
sub
lods
loope
mov
adc
ins
pop
arpl
pop
movs
into
add
in
xchg
ret
test
xchg
pop
das
ret
inc
adc
push
out
movs
pop
rcr
mov
add
push
push
ror
jp
lock
sub
push
inc
mov
adc
sub
adc
sbb
mov
xchg
sbb
cmp
sbb
sub
mov
push
dec
or
push
scas
nop
pop
xchg
test
mov
mov
xchg
cs
push
into
gs
jnp
sar
icebp
mov
xchg
enter
bound
jl
mov
mov
adc
fs
popa
pop
pop
jecxz
push
inc
push
jno
pop
pop
les
mov
gs
xchg
adc
push
xchg
retf
xchg
mov
xor
sub
pop
sbb
jge
jge
and
mov
xor
(bad)
mov
dec
pop
adc
dec
push
sbb
lods
push
jmp
and
dec
sar
pusha
mov
dec
mov
mov
push
not
xchg
jmp
lock
test
icebp
(bad)
jg
xor
sub
inc
xchg
push
add
xchg
jp
inc
stos
dec
and
mov
dec
int3
std
push
ss
jmp
test
xchg
jge
(bad)
mov
inc
mov
push
cmp
add
shl
mov
scas
pop
cwde
xchg
xlat
inc
mov
push
lods
mov
adc
scas
add
jbe
jmp
shr
mov
jnp
add
jl
dec
mov
add
icebp
cld
mov
jmp
jns
adc
loope
jg
pop
push
shr
hlt
push
scas
jmp
lock
pushf
sub
mov
xchg
xchg
call
mov
xchg
imul
sahf
repz
dec
sub
test
ss
clc
cs
push
adc
repz
jge
ret
mov
cs
pop
jmp
xor
dec
pop
shl
mov
scas
pop
popf
call
mov
mov
push
jle
scas
add
mov
jmp
lock
add
jl
ja
das
sbb
pop
inc
es
mov
int
mov
js
push
cmp
xor
sub
scas
mov
mov
hlt
mov
pop
jnp
inc
outs
lods
retf
pop
pop
stos
dec
out
test
jbe
or
fild
or
and
fadd
and
lahf
rcl
retf
arpl
test
xchg
jge
(bad)
mov
inc
mov
ret
adc
adc
loop
pop
jge
mov
and
jbe
xchg
mov
(bad)
aaa
idiv
imul
cmps
pop
xor
test
test
sbb
jle
scas
or
loop
rcl
inc
push
inc
mov
jle
push
adc
push
push
or
push
repz
xchg
push
in
fist
scas
out
inc
adc
adc
enter
hlt
pop
xchg
imul
fdiv
xor
shr
mov
push
and
push
mov
inc
ficomp
or
inc
cmp
push
mov
ja
mov
call
ds
je
xchg
mov
cmp
add
xchg
fwait
pop
stos
sub
jg
scas
add
fild
jmp
inc
das
jae
fimul
mov
add
shl
ja
mov
out
(bad)
daa
xor
repz
adc
mov
xor
(bad)
(bad)
jnp
dec
scas
push
lock
and
mov
mov
pop
xor
in
inc
push
mov
je
add
sub
rcl
and
popf
sbb
mov
cmp
test
mov
fistp
push
sti
outs
cs
mov
xchg
out
loopne
and
cmps
in
lea
hlt
shl
add
and
jbe
inc
sbb
pop
mov
jno
sbb
cmp
sub
(bad)
xchg
and
mov
and
mov
cwde
mul
test
jle
icebp
pop
mov
stc
fistp
push
push
cmc
push
push
dec
and
push
push
repz
pop
mov
cmp
push
nop
and
dec
sub
add
sub
xchg
stos
ret
sub
jbe
add
pop
push
mov
mov
xchg
scas
cmc
inc
mov
push
sar
cmp
stc
sub
int3
and
mov
jnp
add
movs
ins
mov
inc
mov
mov
int
jnp
inc
mov
push
cmps
pop
jmp
ja
mov
mov
loope
cmps
in
inc
mov
mov
ret
scas
mov
aam
sbb
or
sbb
push
mov
jnp
push
mov
push
fimul
xchg
lahf
pop
inc
fs
test
popf
push
(bad)
in
xor
jge
adc
push
fist
div
stc
pop
hlt
push
imul
jmp
fisttp
cli
ficom
lods
ins
mov
fdiv
and
fsubr
loop
lods
idiv
ins
sbb
and
repnz
add
add
push
cmp
mov
cmp
pop
mov
xchg
xlat
std
mov
in
stc
mov
(bad)
ds
fidiv
cmp
cmp
mov
or
retf
pushf
aad
pushf
test
xor
xchg
xor
inc
xlat
mov
ins
mov
pop
jbe
and
test
pop
ficom
pop
xlat
pop
ret
data16
cmp
push
add
and
arpl
sbb
pop
nop
lea
xchg
stc
push
scas
jmp
std
pop
sub
imul
pop
cmp
and
lahf
scas
jbe
cmc
fwait
jnp
inc
mov
xchg
gs
and
push
xchg
xchg
cmps
mov
mov
dec
lahf
stos
scas
add
mov
sub
jmp
dec
shl
data16
xor
pushw
or
repz
sub
aas
and
iret
pushf
push
mov
xchg
test
int3
mov
cmps
(bad)
and
add
inc
rcr
and
mov
das
mov
inc
int3
loop
stos
movs
jb
sbb
push
add
div
add
scas
lahf
jbe
sbb
shl
mov
out
cmc
dec
rcl
mov
mov
loop
pop
xchg
jmp
cmc
sbb
sahf
dec
push
jo
mov
add
fist
mov
jg
mov
pushf
pop
mov
jmp
sub
pop
dec
add
shl
call
mov
mov
or
stos
sbb
sub
jmp
shl
inc
inc
pop
sub
les
xor
out
push
loope
test
inc
jb
adc
push
adc
ret
sub
jnp
push
xor
and
pop
rol
shl
int
jnp
adc
push
cli
inc
outs
adc
sub
mov
jg
jno
mov
es
adc
xor
jne
mov
out
ret
jge
xchg
aaa
shr
jg
(bad)
outs
movs
mov
sbb
add
xor
mov
mov
(bad)
scas
stc
movs
push
push
inc
(bad)
out
mov
adc
and
iret
scas
aas
pop
scas
jmp
cmp
data16
mov
xchg
ja
shl
fist
sbb
jbe
jmp
jl
pop
out
and
mov
add
xchg
loop
test
mov
loopne
adc
mov
aaa
xlat
ins
lock
pop
mov
mov
ds
dec
fidiv
lea
xor
mov
push
inc
mov
push
stos
add
push
mov
jae
scas
movs
mov
jns
ror
fidiv
jbe
dec
shr
fidivr
push
jmp
mov
inc
test
rcl
ja
gs
xchg
js
aas
dec
test
shl
mov
add
hlt
scas
and
xchg
xchg
inc
adc
mov
dec
pop
dec
push
lock
loop
into
dec
out
xchg
jecxz
push
mov
outs
stos
pop
rcl
push
sbb
mov
pop
das
push
imul
adc
adc
icebp
xchg
ins
sti
sbb
scas
cmps
pop
xchg
xor
cmps
icebp
retf
ror
jb
mov
sbb
dec
jns
xlat
mov
adc
xchg
lds
sub
and
xchg
mov
add
xchg
ss
fmul
push
jl
pop
xchg
outs
scas
pop
popa
mov
mov
dec
out
mov
mov
xchg
xlat
das
pushf
sub
out
cwde
test
inc
pushf
sub
jecxz
mov
mov
int3
sar
mov
mov
mov
fiadd
push
pop
icebp
mov
add
mov
in
mov
mov
xchg
and
cld
mov
xchg
add
pop
sub
dec
mov
out
fbstp
mov
sub
xchg
jmp
enter
inc
(bad)
mov
sub
jns
xchg
int
push
clc
loope
scas
stos
jae
push
clc
adc
mov
xchg
fwait
scas
pop
sub
adc
repnz
sub
ja
cmp
mov
ja
dec
(bad)
lea
adc
jl
sar
aaa
mov
push
rcl
cmp
stc
mov
ror
dec
mov
aas
shl
cld
std
xchg
scas
scas
daa
mov
adc
inc
shl
add
xlat
fdiv
sbb
dec
cs
pushaw
or
xchg
push
and
lahf
call
enter
rcl
and
sub
inc
popa
int3
adc
sti
mov
push
mov
xchg
rcl
outs
enter
imul
xchg
(bad)
into
mov
jg
cwde
sub
adc
test
hlt
adc
xlat
adc
ret
dec
push
xchg
mov
sub
jo
mov
and
shr
mov
sahf
mov
test
fnstenv
dec
ja
pop
push
and
iret
jge
dec
xchg
jecxz
jge
out
scas
inc
mov
xchg
and
in
mov
les
jae
nop
int
pop
stos
mov
scas
imul
mov
in
inc
sbb
mov
xor
sub
xor
test
arpl
lods
dec
daa
inc
es
rcr
xor
add
aaa
mov
cmps
lea
mov
xor
scas
in
dec
and
shr
ja
sahf
adc
inc
bound
jmp
cdq
pop
jmp
adc
adc
pcmpgtb
dec
push
popf
gs
movs
jnp
call
(bad)
jmp
in
push
pop
mov
ret
pop
jl
pop
loop
icebp
adc
fwait
pop
jb
push
lods
std
adc
inc
cmc
inc
popa
data16
xor
sub
ret
out
aam
sahf
inc
movs
lock
dec
adc
cmp
scas
adc
shr
mov
jnp
xchg
mov
push
adc
mov
xchg
jmp
pop
mov
lea
das
es
pop
cmp
push
push
dec
or
fsub
adc
into
ja
mov
jg
fild
jae
sysexit
jp
stc
loopne
cdq
outs
jo
sub
sbb
dec
not
sti
data16
bound
scas
mov
xchg
sti
stos
add
icebp
xchg
xchg
push
stos
aam
xchg
test
mov
push
xchg
ret
mov
loope
mov
adc
push
push
in
scas
mov
sbb
pop
push
jp
dec
lahf
pop
mov
pop
mov
mov
stos
pop
push
mov
ss
das
stos
cdq
aas
sar
pop
mov
retf
pop
sbb
xchg
arpl
xchg
sub
jae
nop
push
or
jge
fiadd
shl
call
xchg
shl
inc
push
add
mov
and
movs
icebp
sub
dec
adc
stos
pusha
mov
jl
push
out
jl
dec
movs
jg
in
sar
stc
dec
out
mov
push
cwde
nop
adc
and
sub
jge
inc
xchg
pop
push
xlat
lods
mul
ror
inc
dec
sub
xlat
mov
scas
test
lahf
pop
sub
push
dec
jne
push
je
in
inc
adc
sub
movs
xchg
ficomp
mov
xor
enter
jnp
mov
sahf
inc
lds
enter
ins
nop
lea
xchg
fwait
scas
add
and
nop
mov
push
mov
sar
cmps
mov
mov
ins
retf
jmp
inc
mov
int
fwait
xlat
scas
retf
retf
mov
sbb
(bad)
cmc
inc
push
push
(bad)
inc
popf
test
add
adc
sub
loop
scas
call
enter
shl
scas
sub
sti
xchg
rcl
loopne
int3
pop
popf
adc
inc
add
mov
daa
cmp
mov
shl
loope
push
repnz
push
scas
mov
sub
fwait
popa
mov
adc
(bad)
xchg
inc
pop
mov
shr
mov
and
in
ror
jbe
push
push
fidiv
dec
add
push
add
dec
nop
push
jb
jecxz
outs
inc
dec
movs
mov
sbb
push
icebp
cli
pop
and
push
into
cld
shl
(bad)
mov
stc
fisubr
dec
add
ja
and
pop
or
icebp
movs
call
cs
sub
adc
leave
jnp
int
push
push
lock
call
mov
aaa
int3
xchg
pop
nop
push
pop
cli
jg
das
imul
icebp
push
(bad)
lea
ret
jbe
(bad)
mov
movsx
jmp
cs
jmp
hlt
call
inc
sbb
rol
into
mov
sub
jmp
mov
inc
mov
xlat
ret
jnp
movs
mov
mov
cli
xchg
fwait
cmp
mov
test
mov
mov
and
iret
sbb
jp
add
sub
pop
into
and
mov
push
push
test
cmp
add
pop
push
dec
xchg
das
rcl
sub
scas
sub
push
dec
inc
mov
rcl
shr
inc
call
jmp
inc
mov
jg
scas
xor
mov
mov
adc
add
out
popa
push
scas
jge
jl
ds
mov
adc
push
call
sbb
movs
push
in
pusha
dec
and
mov
xor
aam
jl
jb
cmp
push
pop
popa
mov
pop
iret
push
push
mov
icebp
mov
shl
adc
and
rdtsc
mov
or
call
out
or
add
mov
add
mov
add
iret
imul
sub
not
mov
cmp
pop
jne
outs
retf
shl
into
mov
xor
(bad)
sti
(bad)
xor
pusha
dec
rol
fwait
ror
jle
xor
add
add
mov
adc
adc
(bad)
mov
das
and
loop
inc
lods
imul
sub
mov
scas
mov
sub
lock
push
xchg
dec
movs
test
jo
jnp
push
xchg
dec
jae
nop
cmp
daa
lahf
rcr
retf
mov
sbb
add
cs
mov
and
pop
rcl
fwait
push
loopne
or
lods
imul
sub
jne
inc
ins
out
inc
inc
es
dec
aaa
js
cmps
mov
test
shl
iret
cmp
es
jae
sub
sar
lock
pusha
inc
ds
push
aam
repz
push
ss
imul
jmp
add
push
and
nop
enter
cmps
xchg
dec
add
das
inc
push
xchg
iret
imul
bound
adc
add
test
sub
les
mov
push
ss
fisttp
mov
shl
xchg
(bad)
retf
inc
xor
das
push
fidivr
mov
sub
add
(bad)
mov
lahf
(bad)
jmp
inc
ss
es
pushf
mov
sub
or
or
mov
mov
mov
shl
pusha
ror
jp
xchg
out
jp
rcl
shr
inc
push
add
sub
push
test
mov
into
rcl
lock
dec
ss
cli
push
mov
pop
xor
sub
mov
(bad)
call
iret
cmp
add
call
push
out
pusha
aaa
mov
push
or
pop
mov
jmp
jecxz
lods
sub
inc
xchg
retf
adc
push
test
add
iret
adc
xchg
xchg
stos
sbb
adc
push
sub
shl
pop
mov
cmp
mov
call
hlt
iret
js
push
xchg
sbb
(bad)
ds
pusha
and
popa
push
loop
push
push
xchg
cmp
iret
popa
mov
nop
and
aaa
ss
mov
add
shl
jmp
add
pop
std
push
adc
mov
push
repz
fwait
push
cs
mov
icebp
xlat
aaa
(bad)
jae
add
inc
mov
iret
dec
cmps
jnp
movs
mov
mov
push
shl
iret
cmp
xchg
jae
sub
leave
pop
xchg
shr
scas
mov
and
pop
push
add
jmp
outs
xchg
or
push
movs
push
mov
adc
jl
outs
lods
and
sub
je
or
retf
movs
add
jmp
out
xchg
adc
lock
xor
das
(bad)
icebp
sub
inc
mov
inc
repz
test
add
push
add
inc
das
and
mov
stos
scas
mov
ja
pop
dec
mov
inc
push
inc
xchg
adc
sbb
adc
and
pop
push
and
fld
mov
lock
test
not
pop
inc
iret
add
mov
mov
int
test
pop
inc
jle
scas
jae
mov
ret
inc
inc
xchg
mov
push
outs
push
add
jg
xor
sub
xor
cdq
jmp
sbb
test
push
push
lea
loope
cmp
shl
mov
ror
mov
retf
inc
movs
pop
pop
dec
aad
xchg
cmp
iret
js
sbb
movs
mov
int3
sbb
jle
(bad)
jmp
div
mov
xor
mov
mov
jg
dec
jge
push
fmul
popa
dec
adc
adc
comiss
adc
pop
inc
fiadd
fbstp
div
rol
jle
mov
gs
dec
mov
xchg
pop
jae
loopne
scas
dec
lods
dec
sbb
hlt
das
daa
push
sub
das
pop
sub
test
enter
(bad)
jbe
(bad)
xlat
sbb
push
data16
pop
fist
(bad)
push
(bad)
cmp
dec
enter
push
jae
nop
ret
mov
jo
xlat
xchg
pop
retf
mov
fistp
outs
mov
push
pop
mov
jo
enter
iret
test
add
push
clc
jno
xchg
push
daa
xchg
adc
adc
and
pop
bound
aad
xchg
pop
and
xor
call
(bad)
and
icebp
lea
imul
pushf
xchg
sub
fprem
jno
test
dec
nop
mov
mov
mov
ja
mov
nop
add
push
xchg
pop
stos
repnz
adc
and
pop
mov
mov
sub
sbb
ds
fist
call
shl
out
lea
push
jae
nop
ja
sbb
mov
(bad)
xchg
jmp
lock
sbb
aam
add
(bad)
std
call
scas
jne
(bad)
xchg
(bad)
sti
jno
mov
pop
aas
rol
mov
push
and
sbb
adc
push
hlt
cld
ror
(bad)
jmp
jmp
pushf
xchg
push
cmp
xchg
xor
ja
jmp
push
xchg
popa
pop
popa
sti
xor
add
ins
adc
xchg
pop
jecxz
cs
pop
aas
add
cmp
add
(bad)
adc
pushf
in
stos
idiv
addr16
ds
and
shl
adc
sbb
and
xchg
fs
popa
mov
cmp
mov
lock
cs
scas
mov
in
std
mov
inc
loope
cdq
imul
push
adc
(bad)
cmp
(bad)
clc
push
sbb
mov
fidiv
sahf
aad
jnp
in
inc
(bad)
fcmove
mov
jmp
outs
cli
fwait
lods
mov
or
push
or
or
pop
fs
cwde
pop
add
pop
inc
retf
ret
rcr
dec
xchg
sbb
addr16
sbb
(bad)
pop
hlt
adc
xor
sbb
dec
xchg
adc
popa
sahf
sbb
out
lds
sbb
js
adc
push
loop
outs
xor
mov
dec
jmp
mov
inc
out
mov
pop
pop
or
dec
cli
lods
cld
shl
and
pop
popf
pop
xor
cdq
lea
inc
mov
mov
out
int3
sar
pop
cmp
ss
xchg
cmp
mov
mov
(bad)
arpl
mov
mov
push
inc
fcom
rcr
mov
and
sub
mov
mov
pop
shl
push
jecxz
or
out
test
in
add
ret
mov
sbb
sub
xchg
outs
cld
pop
lahf
add
xchg
cmp
mov
inc
mov
movs
call
push
cmp
inc
mov
imul
xchg
into
popf
push
add
dec
(bad)
and
imul
mov
mov
les
cs
lahf
mov
mov
test
les
outs
mov
lahf
mov
xchg
add
push
mov
shr
out
pop
mov
mov
xchg
mov
clc
int3
dec
pop
xchg
xchg
cli
cmps
in
scas
dec
sub
ins
lea
aas
in
push
pop
fidivr
mov
rcr
sbb
ret
pop
addr16
shl
fcomp
jne
gs
inc
push
mov
mov
mov
push
push
fcmovnu
sub
pusha
xor
push
jle
add
mov
jmp
xchg
stos
mov
cmp
inc
ret
pop
inc
cmp
fnstenv
adc
mov
aaa
jns
out
push
pop
(bad)
loop
inc
mov
mov
fild
adc
push
pop
nop
or
mov
ss
std
shr
pop
icebp
fsubr
sub
jb
mov
dec
leave
and
mov
out
cmc
pop
mov
stos
fwait
daa
or
cmps
mov
mov
data16
xchg
xchg
ja
sbb
mov
mov
push
push
popf
inc
sbb
adc
mov
mov
test
mov
pop
rcl
inc
(bad)
xlat
mov
and
data16
ds
sub
lds
dec
stos
sub
(bad)
repz
mov
rcl
(bad)
jecxz
mov
fdiv
nop
stos
scas
add
(bad)
mov
(bad)
jmp
out
sbb
push
xchg
es
adc
dec
push
xor
imul
xchg
mov
xor
out
and
das
outs
lahf
push
repz
dec
mov
ss
arpl
xchg
imul
aaa
xchg
pusha
dec
pusha
sti
retf
xchg
xor
(bad)
and
out
mov
push
into
xchg
mov
retf
jmp
push
dec
dec
stos
cmp
xor
aam
add
push
das
or
jl
test
push
xor
nop
movs
clc
imul
mov
cmc
adc
add
loopne
hlt
lock
mov
xor
or
mov
inc
jb
xchg
mov
sbb
and
ss
pop
mov
stc
jae
cmps
pop
in
or
add
imul
add
scas
loop
pop
ficomp
jg
lahf
fwait
ret
jmp
in
inc
jle
push
xchg
popf
das
sub
pop
mov
xor
xchg
scas
stc
pop
xchg
jnp
add
imul
sub
add
jle
inc
sub
adc
jae
push
sbb
scas
pop
add
(bad)
cmp
dec
pop
inc
or
push
shl
mov
xlat
pop
jle
pop
inc
sbb
pop
popf
punpcklbw
repz
adc
inc
or
mul
sbb
fadd
mov
ror
sbb
ret
jge
xchg
xor
jl
cld
and
scas
xchg
fistp
cmp
jae
out
stos
popw
jae
data16
jo
or
push
outs
jae
data16
data16
div
data16
rcl
add
inc
je
fwait
or
hlt
sub
and
cld
mov
push
jl
jmp
(bad)
push
xchg
lock
gs
or
add
aad
mov
mov
mov
das
sub
xchg
cwde
mov
lock
loop
push
(bad)
out
jmp
or
adc
adc
das
or
push
rcl
mov
jae
(bad)
sub
bound
jns
xchg
sbb
jno
out
adc
sbb
adc
sub
mov
jmp
(bad)
fwait
push
pop
scas
test
adc
lods
mov
add
mov
xor
jae
mov
jmp
pop
xor
adc
(bad)
mov
inc
mov
repnz
out
mov
push
adc
mov
jg
into
int
or
jge
out
sbb
jmp
pop
push
das
mov
mov
addr16
and
adc
ins
dec
ret
adc
rcl
inc
adc
sbb
stos
mov
aaa
cmp
cmps
inc
push
xor
jl
inc
shl
mov
fnstcw
inc
push
cwde
lock
popa
inc
mov
mov
sbb
movs
xchg
mov
pushf
or
mov
mov
pop
(bad)
jle
xchg
icebp
outs
mov
cld
(bad)
pop
push
lock
popa
fnstsw
addr16
test
jmp
iret
outs
or
pop
sub
enter
sbb
ja
sbb
lock
pop
mov
push
(bad)
mov
test
outs
push
dec
mov
leave
xchg
inc
jb
adc
jp
dec
sahf
(bad)
int
cmp
pop
or
cwd
jnp
dec
xchg
mov
inc
fsubr
sbb
in
(bad)
test
shr
ret
aas
mov
loope
aam
loopne
shl
mov
pop
mov
push
or
mov
shld
inc
scas
test
and
xor
or
xchg
adc
push
cmps
pop
call
xchg
pop
sbb
in
or
call
adc
loop
dec
mov
xchg
xchg
xchg
dec
ret
and
jb
add
jbe
mov
outs
sub
jae
hlt
(bad)
push
mov
ins
out
mov
and
mov
mov
jmp
jecxz
or
stc
and
dec
jbe
sub
(bad)
hlt
lahf
mov
mov
xchg
retf
adc
push
int
mov
out
fst
scas
jmp
adc
mov
adc
mov
jmp
dec
mov
shl
jbe
das
sub
mov
mov
rcr
jg
push
adc
xchg
sub
jle
pop
xchg
xchg
daa
push
mov
jne
(bad)
lock
mov
sub
xchg
push
or
in
cmp
push
sub
shl
xor
sub
xchg
ud1
xor
jg
enter
daa
mov
(bad)
or
dec
sbb
adc
aam
push
push
bound
lods
and
lock
in
adc
ret
push
stos
jno
push
stos
std
mov
push
test
call
test
adc
outs
mov
mov
std
fcmovne
scas
retf
xchg
retf
cmp
pop
outs
dec
cmps
and
out
in
xchg
jmp
mov
pop
iret
mov
ins
mov
mov
call
jg
inc
lods
ins
and
popf
jnp
clc
cld
aaa
inc
sahf
retf
xchg
add
xor
daa
inc
repnz
int
and
or
push
and
mov
mov
mov
das
nop
aas
mov
xchg
cmp
sysenter
push
and
pop
mov
lea
pop
retf
xor
(bad)
out
sub
ror
xor
pop
(bad)
out
cmp
mov
inc
retf
sub
mov
jg
dec
cmps
inc
push
push
add
mov
pop
and
dec
(bad)
ins
nop
call
or
stos
cmp
dec
inc
(bad)
fisttp
lea
pusha
adc
mov
jp
(bad)
push
sub
jae
stos
not
jecxz
xchg
loope
call
mov
mov
jp
repnz
dec
push
js
mov
cmp
fist
push
(bad)
dec
xchg
adc
nop
les
xchg
push
enter
mov
dec
add
jo
pop
out
sub
xchg
adc
push
ret
not
sbb
add
xchg
pop
test
test
push
mov
xor
and
push
scas
mov
fcomp
mov
(bad)
sbb
xchg
xor
int3
dec
adc
sbb
adc
inc
xor
cmp
mov
xor
sub
xchg
loope
push
ror
retf
xchg
test
das
arpl
mov
inc
push
lahf
xlat
(bad)
xlat
adc
sub
mov
xchg
xchg
mov
ret
pop
or
adc
(bad)
cli
sub
outs
pop
add
xchg
call
icebp
cmp
and
xor
sub
mov
mov
xlat
mov
xchg
in
push
push
push
movs
lahf
mov
push
out
jg
mov
retf
out
push
ret
(bad)
push
push
jns
adc
shl
pop
xchg
jge
cmp
out
sub
in
aam
icebp
xchg
mov
sub
or
das
inc
dec
ror
mov
inc
test
push
cwde
bnd
jne
push
jecxz
mov
adc
mov
xchg
jl
outs
adc
retf
imul
seta
(bad)
and
retf
jg
cs
xor
cwde
cli
fistp
fcomp
rol
cli
dec
mov
mov
(bad)
adc
cs
popa
xchg
vpcmpeqd
fwait
outs
imul
(bad)
mov
shl
jmp
cmp
add
jl
(bad)
dec
jno
pop
sbb
in
pop
sub
clc
cdq
jl
fnstenv
xchg
dec
outs
loopne
xlat
push
xchg
scas
xlat
fild
xor
das
arpl
ins
mov
jae
xchg
iret
(bad)
fwait
jnp
cmp
shl
enter
xchg
inc
xchg
lahf
fmul
popa
mov
jmp
sub
repz
loope
ret
pusha
jmp
fidiv
mov
push
mov
imul
int
xchg
xchg
test
neg
daa
sub
pop
lock
addr16
iret
(bad)
enter
scas
fld
jmp
adc
or
fnstenv
sbb
loope
mov
mov
inc
fwait
stos
add
mov
pop
mov
mov
inc
rol
test
sub
or
mov
sbb
out
dec
mov
sbb
xrelease
fld
fist
fimul
or
pop
dec
xlat
inc
retf
mov
xor
imul
inc
sub
and
push
pop
loope
xchg
loop
jge
ins
int3
lahf
enter
xor
jle
aas
clc
into
scas
and
bound
ins
aad
test
cmp
add
jo
imul
cwde
and
shl
fnstenv
aaa
sbb
push
mov
out
mov
sub
scas
push
fidivr
fld
sbb
rcl
add
sbb
cmp
push
xchg
sbb
das
into
xchg
scas
inc
inc
sar
lods
mov
mov
adc
call
mov
xor
mov
add
iret
push
rol
int
pushf
dec
jmp
mov
int3
inc
xchg
scas
adc
(bad)
hlt
xor
retf
xlat
and
out
mov
xchg
fistp
fnstcw
add
jns
stos
movs
lock
mov
sub
(bad)
lock
(bad)
int
not
dec
es
aam
lahf
ds
mov
mov
ja
mov
mov
jg
in
shr
call
xlat
inc
not
mov
inc
jbe
int3
push
scas
adc
rcl
scas
xchg
xchg
cmp
mov
mov
mov
rcl
xchg
das
cs
movlps
imul
and
out
hlt
adc
mov
out
adc
mov
bnd
dec
sub
daa
push
or
repnz
mov
(bad)
lahf
jo
dec
adc
fiadd
pop
fisttp
int3
(bad)
push
fimul
jns
fild
shr
cmc
ins
xchg
neg
shl
test
cli
arpl
imul
mov
pop
aaa
pusha
push
adc
lock
and
inc
repnz
sub
je
or
popf
add
and
add
cmp
mov
mov
repnz
icebp
dec
in
mov
sub
adc
cmp
xchg
jge
ret
mov
sub
mov
dec
xor
cmc
clc
ds
or
mov
sub
pop
stos
and
inc
jmp
push
mov
int
addr16
or
cmps
pop
fdiv
pop
call
movs
sub
outs
jmp
pop
loop
shl
lods
mov
cmps
jle
cmp
mov
xlat
cwde
xchg
ss
push
mov
jbe
xchg
das
hlt
jbe
and
xor
push
test
cli
mov
(bad)
fild
jle
mov
fnstenv
mov
pop
fwait
dec
movs
int
out
push
adc
lahf
out
icebp
sub
xor
das
cmps
ret
push
repnz
fdivr
fldcw
mov
scas
ins
push
cmps
sub
out
mov
rcl
mov
jnp
add
repnz
push
inc
sahf
dec
jecxz
(bad)
sti
adc
xchg
push
adc
fcomi
push
jg
sub
fimul
xchg
sub
xchg
add
mov
test
test
xor
dec
mov
retf
or
test
sub
ffreep
or
fild
pop
mov
out
hlt
mov
pop
jnp
inc
int3
sub
mov
mov
je
test
xor
xchg
jecxz
push
and
rcr
push
in
pop
cmp
mov
push
into
jmp
mov
rcl
and
lock
dec
repnz
retf
sub
inc
mov
fist
out
iret
pop
mov
pusha
(bad)
fcomi
es
adc
mov
lods
xchg
lods
jecxz
icebp
and
pop
sub
jbe
arpl
ret
leave
pop
jmp
out
inc
outs
inc
mov
data16
jo
jmp
sbb
pop
mov
dec
lods
int
mov
push
lea
scas
int3
loope
push
mov
iret
xchg
push
lods
test
lods
je
imul
cmp
ffreep
fstp
not
adc
jo
not
add
adc
push
dec
outs
retf
fwait
mov
mov
jle
(bad)
adc
shl
icebp
lods
xor
in
lods
inc
pop
lock
inc
dec
adc
rcl
xchg
(bad)
mov
xor
or
xchg
loope
icebp
mov
test
psrlw
das
jle
mov
inc
or
and
stos
enter
outs
mov
push
cs
jg
or
pushw
repnz
lahf
mov
adc
jne
jg
sub
jle
inc
cmps
(bad)
adc
sahf
dec
sub
xchg
rol
ja
push
bound
(bad)
ins
or
or
xchg
pop
and
sbb
or
or
sbb
xor
mov
fimul
int
and
cmp
std
pushf
jle
mov
push
inc
cmp
js
cmp
dec
mov
or
inc
jno
std
push
popf
mov
jae
jecxz
pop
xchg
sti
push
neg
mov
push
push
fld
push
push
or
fstp
xchg
pop
jns
les
jnp
push
ins
push
xchg
ins
add
dec
cmc
rcr
fwait
xchg
ss
repz
push
and
cmps
push
das
(bad)
aaa
push
push
test
xchg
sbb
sub
push
push
popf
hlt
mov
adc
arpl
push
shl
push
inc
jnp
ss
push
xchg
pop
ins
add
stos
hlt
rcr
fwait
xchg
ss
rcl
push
das
(bad)
xchg
push
push
test
cmps
push
sbb
or
push
push
jp
mov
add
lods
test
adc
cmps
add
mov
rcr
fwait
stos
ss
xor
dec
das
(bad)
ja
push
test
inc
data16
sbb
imul
push
pop
idiv
add
rcl
int
out
mov
dec
xor
test
bnd
xchg
fist
stos
pop
je
pop
dec
cmp
push
dec
int
into
cmps
pop
push
or
add
sub
cs
outs
ret
mov
add
sub
push
or
push
push
imul
retf
test
fidivr
dec
out
dec
repz
out
jne
out
ret
lfs
je
jl
sub
movntps
rcl
xlat
and
ret
in
adc
ret
xchg
sbb
mov
imul
int3
cpuid
stos
shl
icebp
xchg
xor
fiadd
cmp
retf
(bad)
bsf
mov
jg
ret
adc
repz
fild
shr
int
int
sub
fldcw
lods
lsl
ret
cmp
push
cli
outs
or
adc
add
outs
ret
add
adc
xchg
sub
jbe
push
or
sub
xor
jns
xchg
clc
ret
mov
data16
stos
jnp
(bad)
jg
push
out
movs
add
out
mov
std
ret
test
inc
mov
jge
mov
repz
cmp
aam
xor
mov
push
or
mov
or
or
adc
sbb
push
adc
outs
mov
ret
push
imul
jno
or
xchg
adc
ret
xor
rol
mov
data16
sub
or
xor
out
cmp
aam
ret
mov
imul
jne
ret
push
out
scas
mov
out
js
mov
ret
aaa
xchg
dec
ret
test
xadd
add
hlt
mov
cmp
repnz
es
js
xchg
leave
ret
leave
dec
mul
imul
mov
or
mov
fcomip
ret
dec
loopne
ret
jb
imul
cmp
sbb
inc
pop
cmps
imul
sub
or
ret
dec
xchg
test
jnp
out
js
int3
outs
(bad)
ds
(bad)
pop
jb
and
mov
xor
(bad)
les
xor
(bad)
push
repz
sub
out
xchg
or
add
je
aam
push
sbb
(bad)
dec
ret
sbb
iret
push
mov
loop
sub
mov
mov
sub
sub
ins
sbb
and
inc
push
jmp
call
fsubr
and
shl
inc
mov
inc
loopne
push
xchg
(bad)
dec
fdiv
ins
inc
push
movs
rcl
xchg
mov
jo
call
addr16
(bad)
(bad)
jmp
test
jmp
fs
shl
ins
cmp
inc
and
sub
push
mov
imul
cmps
mov
and
mov
and
mov
push
add
xlat
loope
push
(bad)
repnz
movs
test
xchg
aas
daa
inc
cli
jbe
rcr
outs
rcr
pop
inc
mov
mov
add
push
mov
scas
mov
cmp
mov
jl
jmp
inc
cvtps2pd
sub
jl
jle
ins
dec
mov
fisubr
call
cs
mov
and
call
in
movs
ss
xor
adc
xor
adc
mov
stc
call
add
mov
mov
xchg
jl
mov
cdq
xchg
inc
ds
pop
cmps
pop
push
add
loope
mov
pop
lock
scas
or
add
adc
jle
xchg
ret
mov
add
test
sti
repnz
leave
push
ds
(bad)
(bad)
jg
ret
shl
jne
scas
pop
das
cmp
mov
sbb
adc
in
cwde
(bad)
(bad)
sti
and
retf
mov
nop
(bad)
(bad)
cmp
sub
add
adc
sub
enter
cmp
fistp
cmps
sub
sub
xchg
lahf
retf
sub
int
cli
mov
mov
push
jl
aam
das
icebp
and
push
push
and
pop
fsubr
mov
je
mov
mov
mov
add
into
jecxz
sar
xor
pop
pop
fucomip
dec
pop
je
ss
push
sub
or
dec
mov
push
or
fidiv
push
cmp
jmp
(bad)
into
aaa
xlat
pop
jns
mov
mov
test
inc
ss
mov
sub
pusha
push
mov
pop
pop
mov
push
movs
adc
push
cmps
mov
adc
aas
mov
movs
cld
cmp
jge
mov
movs
mov
stc
(bad)
add
push
and
inc
ret
fwait
aaa
inc
rol
mov
mov
cmp
xchg
push
mov
lock
jbe
dec
rcr
icebp
push
stos
inc
adc
mov
mov
and
mov
ret
pmaxub
outs
push
pop
adc
mov
and
stc
dec
sar
ins
lock
adc
mov
xor
aas
add
aaa
dec
rol
test
scas
repnz
adc
push
std
fistp
mov
pop
cmp
fild
dec
repz
out
push
cmps
add
test
int3
pop
xchg
ss
add
xor
mov
loopne
jp
fidivr
mov
xchg
into
scas
or
fwait
dec
or
mov
or
pop
adc
mov
inc
ret
stc
dec
sar
(bad)
repz
adc
mov
xor
aas
and
lock
leave
mov
lahf
lock
pop
ror
push
mul
pop
mov
loopne
add
add
mov
and
(bad)
push
or
fmul
sub
movs
cmp
pushf
or
inc
jg
cmps
jo
jmp
pop
sub
lods
(bad)
imul
mov
cmp
(bad)
mov
js
jp
fidiv
scas
setnp
mov
es
push
mov
pop
mov
xchg
jne
in
cli
jp
fimul
sbb
sti
mov
fwait
aaa
inc
adc
imul
ret
loopne
mov
cmp
sahf
mov
je
stos
ins
test
rcr
retf
popf
push
test
or
fnstsw
push
(bad)
in
fimul
fdivr
daa
rol
sar
pop
pushf
push
adc
in
sub
push
push
fidivr
inc
in
push
sub
and
pop
fidiv
push
lods
jge
push
sub
pusha
test
pop
stos
ror
or
inc
into
js
lea
js
mov
pop
fnstcw
cmps
lods
in
dec
jae
std
cdq
push
les
pop
cmp
cmp
cmc
mov
lock
dec
(bad)
fild
call
into
jnp
inc
ret
fwait
aaa
dec
pop
jle
mov
cmp
or
mov
mov
shr
fs
jnp
xchg
call
push
(bad)
mov
jp
add
adc
xchg
call
call
push
std
fistp
mov
and
aam
jp
cli
adc
aaa
mov
not
adc
push
rol
psraw
mov
pop
pop
push
sar
cli
and
lock
es
pop
cmc
or
test
femms
(bad)
dec
(bad)
fild
xchg
cmps
jae
mov
add
add
aaa
inc
js
push
xchg
or
pop
(bad)
pusha
rcl
mov
push
movs
xor
xor
jg
imul
cmp
pause
in
add
xor
or
ss
scas
mov
mov
inc
shl
jbe
adc
in
mov
(bad)
mov
es
clc
(bad)
mov
push
xor
les
cmp
xchg
or
push
jb
stos
sub
sub
sbb
mov
sub
or
push
push
mov
pop
xchg
out
pop
push
mul
ret
xlat
xchg
push
push
out
sbb
xor
add
rcl
out
fwait
out
adc
mov
xor
aas
and
mov
icebp
(bad)
dec
retf
push
addr16
jmp
dec
mov
sar
in
stos
mov
psraw
mov
pop
pop
jp
mov
and
xlat
or
sar
pop
sbb
mov
int
enter
push
pop
aam
pop
push
(bad)
mov
sbb
pusha
xchg
add
mov
inc
xor
xor
adc
outs
pop
mov
xchg
pop
mov
pop
pop
mov
js
and
dec
sub
inc
cmps
inc
xchg
popa
pop
jb
inc
xchg
pop
dec
into
or
pop
gs
retf
adc
mov
call
push
mov
jl
aad
inc
or
add
sbb
into
mov
pop
js
lock
jae
sti
cld
dec
lods
cmp
sbb
(bad)
in
int
xor
pop
jg
es
nop
mul
mov
cmp
sub
mov
mov
shl
push
push
mov
xchg
aaa
icebp
cli
call
popa
retf
lahf
xchg
push
jno
add
add
rcl
sar
aam
push
adc
mov
xor
mov
aam
dec
leave
fild
mov
jmp
dec
mov
sar
lea
jb
(bad)
fsubr
xchg
jno
add
int3
stos
dec
jl
mov
movs
xchg
cmc
sub
dec
popa
lods
cld
inc
outs
pop
sbb
movs
call
or
or
push
cmps
outs
shr
inc
cdq
mul
gs
mov
xor
push
rcr
add
sub
mov
xor
aas
cmp
mov
out
mov
rcr
add
icebp
xchg
jno
push
es
pop
xchg
into
pop
push
call
in
inc
push
pop
ja
push
xchg
mov
fiadd
jae
dec
mov
leave
mov
add
in
fimul
fbstp
ror
mov
add
jnp
idiv
pop
hlt
sar
ds
test
add
push
daa
mov
mov
loop
or
movs
fwait
pop
call
xchg
adc
jne
pop
pusha
sbb
sub
bound
push
push
ss
push
push
xchg
out
stos
ins
sbb
fwait
adc
sub
icebp
adc
shl
xchg
sbb
fild
outs
adc
rcr
xor
push
stos
and
jae
sbb
pop
dec
(bad)
fild
hlt
push
pop
jmp
dec
mov
sar
xchg
push
stos
ret
adc
dec
mov
mov
pop
scas
mov
mul
scas
lods
repnz
push
repz
aas
mov
xchg
mov
cmp
movsx
rcl
cmp
dec
fld
bound
xchg
pop
nop
ficom
xchg
jne
push
adc
rcpps
rcl
dec
fxch
and
mov
comiss
push
and
adc
cmp
stc
dec
sar
add
sub
imul
pop
dec
repnz
mov
ins
fidivr
push
pop
cli
outs
pop
mov
in
fwait
mov
sub
jle
mov
cmp
mov
mov
push
clc
push
add
jo
les
cmp
mov
ret
in
sub
and
push
sub
adc
pop
lock
sub
test
das
add
lock
sbb
shl
sbb
mov
jb
mov
pop
sbb
scas
xchg
xchg
push
cld
sub
call
pop
pop
push
push
mov
cmp
mov
ds
xor
int
retf
rcr
push
nop
push
inc
jle
into
jg
and
and
dec
sub
fmulp
mov
pop
xchg
sub
adc
push
shl
xchg
push
sbb
jecxz
and
mov
iret
mov
scas
ret
sub
sub
mov
xchg
pop
pop
(bad)
cmp
jg
mov
cmps
mov
jmp
in
lds
mov
pop
call
dec
shl
addr16
mov
mov
rol
scas
mov
pop
sbb
scas
mov
xchg
jg
sahf
dec
lods
fwait
mov
jne
pop
jb
mov
aas
inc
lahf
mov
push
cmc
dec
stc
fwait
shl
push
mov
sub
push
inc
retf
fwait
mov
jb
jle
mov
cmp
sub
cwde
adc
daa
inc
sar
mov
jae
inc
sub
pushf
jp
inc
inc
add
call
dec
push
jp
and
jb
imul
push
rol
mov
dec
mov
push
adc
pop
sub
sbb
jb
inc
adc
xchg
retf
ret
stc
dec
sar
hlt
mov
sub
mov
xor
aas
sub
mov
mov
or
fild
das
lock
ins
ins
movs
add
pop
cmp
ins
mov
inc
jb
dec
retf
rcr
dec
dec
mov
sar
mov
jae
dec
mov
mov
push
leave
sub
neg
mov
mov
ret
popa
push
or
sub
mov
in
out
or
pop
inc
cmp
iret
mov
or
xchg
lock
js
into
test
pushf
mov
jp
clc
xchg
or
ds
daa
adc
fstp
push
iret
sbb
fild
outs
add
sbb
xchg
sub
inc
inc
pop
xor
mov
mov
rcr
mov
jae
dec
mov
cmps
mov
fs
neg
mov
pop
adc
mov
hlt
mov
dec
ror
mov
jae
leave
idiv
cld
popa
sar
ds
in
add
mov
mov
mov
sub
jno
push
movs
lods
adc
pop
scas
test
out
lods
xor
mov
aas
cdq
xor
xor
movs
cmp
mov
adc
and
mov
mov
xchg
into
adc
or
fwait
and
xchg
sub
adc
loope
mov
icebp
sbb
fild
outs
lock
das
sub
ror
push
mul
movs
mov
push
mov
and
xchg
and
mov
movs
sub
inc
movs
mov
push
stos
out
add
iret
scas
dec
loope
out
inc
repz
jmp
pusha
bound
cdq
inc
pop
mov
cmp
push
(bad)
xor
fild
call
icebp
sbb
fcomp
sahf
ror
imul
dec
cld
jnp
pop
push
movs
sbb
mov
inc
sar
inc
mov
call
sahf
push
loopne
push
lea
xchg
sub
xlat
inc
ret
fwait
aaa
add
gs
push
icebp
and
dec
(bad)
fild
mov
jmp
dec
xchg
aas
xor
xchg
push
ss
push
sbb
jecxz
jnp
mov
pop
mov
inc
fidivr
inc
pop
mov
ror
or
fwait
dec
pop
jno
pop
ret
lahf
pop
mov
fsubr
mov
xchg
clc
retf
out
push
iret
aaa
cwde
lods
mov
stos
pushf
xchg
mov
pop
icebp
cmps
add
lock
adc
hlt
jno
dec
add
xchg
test
rcl
push
and
sub
jo
jle
cmp
inc
pop
mov
xchg
inc
adc
inc
jo
pop
xchg
scas
rol
xor
mov
xor
add
add
sar
and
clc
loope
fdiv
xor
aas
cli
cmp
pop
lock
jmp
jb
stos
jo
xlat
inc
xor
and
push
icebp
mov
movs
push
jne
out
mov
rol
js
sbb
xchg
or
bound
dec
pushf
scas
sbb
pop
sbb
imul
push
rcl
adc
pop
mov
dec
fstp
aam
dec
xor
(bad)
push
out
and
out
scas
stos
push
jmp
or
pop
pop
add
mov
pop
sbb
scas
mov
xchg
jg
sahf
dec
lods
fwait
mov
add
pop
(bad)
int
sbb
fwait
lods
mov
cvtpi2ps
fistp
outs
cmp
fwait
inc
fadd
scas
sbb
pop
xor
xor
pop
sahf
and
adc
fisttp
sti
cmps
inc
(bad)
pop
mov
inc
dec
pop
pop
call
add
push
or
outs
fsub
and
xchg
xchg
pop
lods
ret
enter
pop
adc
adc
mov
or
pop
pushf
rcr
mov
into
mov
xchg
into
jae
or
fwait
dec
(bad)
add
pop
ret
lock
fsub
cmp
into
stos
mov
nop
add
stc
retf
shl
and
ret
fwait
aaa
mov
pop
jle
(bad)
mov
clc
sahf
sar
dec
pop
mov
mov
jge
inc
jae
pop
xchg
jae
aad
pop
xor
cwde
test
mov
jo
and
ss
dec
pop
add
sar
es
inc
xchg
inc
mov
jno
fnstsw
push
movs
push
retf
xchg
xchg
mov
cwde
or
test
xchg
add
push
pop
add
push
add
pop
push
or
cmp
sti
dec
add
out
pop
enter
les
mov
xchg
mov
das
sbb
fild
outs
pusha
xchg
xor
inc
rol
repz
bound
xor
mov
jmp
dec
pop
adc
mov
xchg
fstp
mov
fidivr
neg
mov
dec
pop
adc
mov
xchg
mov
dec
ror
stos
push
adc
(bad)
idiv
push
inc
mov
js
imul
mov
or
test
dec
mov
sbb
pop
cs
int3
icebp
or
jle
mov
stos
cmp
fwait
pop
pop
scas
fistp
dec
ja
push
xchg
dec
mov
je
into
pop
push
call
scas
xchg
mov
xor
mov
push
jmp
sahf
dec
lods
fwait
mov
or
mov
cmp
retf
xchg
mov
lahf
sub
fistp
outs
lock
shl
mov
pop
push
in
or
fild
aaa
pop
ja
push
mov
pop
sar
sub
out
push
rcl
(bad)
mov
int
(bad)
rcl
jae
ret
mov
xchg
shl
retf
out
jmp
out
xor
xchg
aas
popf
call
cmp
or
iret
mov
and
push
push
xor
(bad)
xchg
mov
fwait
mov
inc
das
inc
mov
xor
aas
pop
add
mov
lock
dec
(bad)
(bad)
mov
push
nop
fbld
mov
push
(bad)
pop
test
pusha
push
sbb
in
add
pop
add
xor
aas
(bad)
mov
mov
mov
ror
xor
outs
pusha
mov
pusha
pop
into
xor
das
inc
and
push
movs
inc
gs
xor
mov
daa
jns
add
imul
(bad)
popf
jbe
daa
stc
inc
fisttp
jns
out
es
adc
cdq
push
icebp
scas
mov
cmp
retf
sbb
sbb
fild
outs
rcl
fwait
inc
mov
das
xchg
xchg
loope
pop
scas
fistp
into
pop
ja
push
xchg
dec
mov
jae
push
stos
jae
das
aas
inc
sbb
nop
pop
add
inc
sar
stc
mov
mov
aam
pop
test
sahf
mov
mov
shl
jno
stos
jb
cld
fsubr
push
lahf
mov
ret
push
push
push
adc
jnp
jne
mov
dec
out
mov
outs
cmps
pop
sar
data16
dec
mov
add
into
(bad)
cmps
fcom
es
push
add
ret
sub
pop
adc
cmp
push
out
sbb
fild
outs
and
sbb
xchg
das
xchg
mov
fistp
mov
xchg
mov
pop
adc
loope
movs
sub
call
add
add
add
sar
and
les
mov
cmp
dec
xchg
cs
push
outs
pop
out
test
(bad)
mov
mov
push
cmps
jl
push
js
call
dec
sbb
mov
retf
mov
mov
xchg
mov
stc
dec
shl
pop
pop
cmps
arpl
sub
push
std
fistp
movs
mov
mov
(bad)
fild
push
mov
xchg
sub
daa
dec
rcr
cmps
pop
stos
adc
das
adc
push
mov
add
and
mov
and
xlat
hlt
mov
pop
mov
mov
stc
fwait
dec
push
push
mov
cmp
mov
ds
cs
push
xchg
imul
imul
movs
mov
push
ret
adc
loop
add
push
add
pop
push
jmp
movs
pop
pop
jmp
and
add
data16
out
scas
out
pop
sti
pop
xchg
into
and
mov
comiss
movs
pop
jle
push
and
cmp
dec
sar
add
adc
imul
add
repnz
mov
ins
fidivr
mov
test
mov
stos
stos
xchg
into
adc
mov
aas
cli
mov
xchg
scas
fistp
pop
push
jp
push
add
or
mov
push
ret
adc
shr
add
push
add
pop
push
cmp
cmp
jmp
and
mov
push
test
mov
xchg
push
pop
add
inc
scas
mov
sub
dec
mov
push
xchg
mov
xchg
shl
das
push
sbb
shl
pop
add
push
sub
icebp
shr
jae
movs
adc
stc
dec
ror
movs
pop
adc
mov
xor
movs
imul
or
fild
cmps
movs
je
repz
push
scas
push
out
lods
ret
xchg
lods
mov
add
mov
adc
mov
jno
mov
lods
adc
mov
enter
inc
les
(bad)
xor
add
or
ret
pop
and
xchg
sub
(bad)
inc
ret
fwait
aaa
xchg
jle
test
in
inc
add
xchg
mov
push
es
sahf
mov
das
push
jecxz
movs
cmp
pushf
add
add
and
mov
ror
mov
jo
mov
xor
movs
jg
mov
cdq
add
stc
(bad)
rcr
push
mov
and
push
out
cld
stos
mov
jns
push
sub
or
sbb
rsqrtps
cmps
xor
inc
cmp
test
xor
test
pop
dec
pop
sbb
sbb
pop
pushf
shr
adc
lods
fwait
mov
pop
add
and
mov
aas
inc
and
movs
scas
(bad)
ds
mov
int
retf
rcl
rcl
clc
cmp
outs
or
scas
scas
ds
jb
pop
test
outs
shr
mov
jge
inc
adc
xchg
scas
mov
pop
xor
clc
or
mov
jno
and
aaa
mov
push
mov
add
setg
push
push
pop
push
push
and
mov
and
pop
sbb
push
popa
or
sub
test
ret
addr16
rol
or
stos
fistp
scas
movs
lea
xchg
fist
inc
es
add
repz
add
xor
movs
mov
imul
lock
mov
xchg
into
scas
or
fwait
dec
and
mov
(bad)
push
lods
movs
add
sar
and
les
jae
in
mov
or
cmp
pop
test
lahf
cmp
shr
cmp
out
retf
mov
or
push
(bad)
fwait
repnz
mov
lods
in
in
rol
mov
dec
xchg
dec
pop
adc
ja
or
sbb
shl
add
xor
pop
pop
add
add
mov
xor
movs
scas
das
ds
rol
int
retf
shl
dec
pop
and
sub
xlat
inc
ret
fwait
aaa
icebp
pop
add
repnz
cmp
sub
movs
mov
jno
and
aaa
xchg
test
mov
inc
cmp
pop
mul
imul
stos
lock
mov
mov
push
mov
pop
shl
xor
pop
lods
fisttp
pop
or
int
xchg
jno
cmp
in
adc
movs
push
mov
jno
pop
cmps
inc
cmp
pop
hlt
movs
mov
push
jecxz
lock
mov
xchg
into
inc
or
fwait
dec
outs
ins
add
(bad)
sub
rcl
push
mov
hlt
movs
out
cwde
lock
int
retf
ror
inc
xchg
and
(bad)
jae
inc
(bad)
push
xchg
pop
xor
sbb
push
pop
test
and
aaa
mov
repz
inc
cmp
push
cmc
movs
mov
daa
sbb
xor
cmps
retf
loope
scas
mov
xor
icebp
pushf
into
shrd
inc
cmps
fadd
dec
retf
inc
fcomp
imul
sub
movs
cmp
(bad)
test
rol
push
push
rol
das
push
xor
movs
cmp
sub
movs
pop
sahf
mov
test
rcl
xchg
push
pop
shl
shl
fwait
shl
add
ret
mov
jp
fidivr
xchg
movs
mov
push
mov
pop
and
inc
retf
fwait
mov
imul
lods
fdiv
test
cmp
pop
xchg
and
test
rcl
outs
push
pop
rcl
stos
add
xor
push
nop
iret
icebp
jge
addr16
nop
bound
inc
cmp
(bad)
mov
inc
cmps
add
push
mov
call
(bad)
movs
outs
out
(bad)
cmps
(bad)
fcom
xchg
push
pop
adc
mov
xor
aas
sbb
movs
imul
mov
icebp
xchg
push
add
ins
push
movs
mov
dec
(bad)
fild
out
xchg
movs
call
and
mov
pop
jmp
fimul
fwait
jno
outs
add
inc
sar
cli
leave
(bad)
icebp
mov
xor
jmp
jb
stos
jo
aam
push
push
js
push
nop
pop
(bad)
ss
nop
adc
mov
(bad)
lock
cmp
sbb
dec
js
call
lods
cld
movs
aad
(bad)
mov
(bad)
adc
add
repz
pop
inc
pop
xor
movs
mov
imul
lock
mov
xchg
into
mov
or
fwait
dec
nop
mov
pop
and
mov
cmp
or
movs
scas
(bad)
aas
push
push
jle
movs
or
mov
les
jae
jo
mov
std
movs
loope
adc
sub
fistp
outs
loopne
test
(bad)
fwait
cmps
jge
add
jb
push
sub
mov
pop
xor
mov
and
xor
and
push
cmp
xor
loopne
sbb
adc
sar
fimul
xor
inc
pushf
movs
lea
xchg
sti
adc
inc
push
mov
xchg
pop
xor
movs
mov
imul
lock
mov
xchg
into
into
or
fwait
dec
loope
add
ret
inc
adc
jnp
movs
loope
push
pop
scas
add
push
adc
add
jo
mov
xor
movs
imul
pop
cdq
movs
je
push
mov
cmp
dec
movs
int
push
lods
retf
ficom
push
cmps
dec
sub
in
es
daa
sbb
into
xchg
cmps
xor
sar
xor
test
pop
inc
xchg
(bad)
retf
add
inc
sar
xchg
jp
stos
xchg
adc
ror
mov
jbe
out
pop
pop
mov
pmaxub
xor
dec
adc
or
fwait
dec
xor
mov
cmp
in
out
scas
das
xor
xor
rcr
adc
mov
shl
jns
add
bnd
xor
movs
sub
jns
movs
(bad)
aas
lods
pop
dec
inc
add
jns
hlt
scas
pop
pop
rcl
jae
add
xor
sbb
icebp
push
pop
lock
nop
bound
pop
inc
cmp
dec
mov
xor
pop
xchg
mov
shr
sbb
movs
loopne
call
cmc
fwait
cmp
arpl
mov
sub
movs
mov
loope
adc
pop
jb
stos
sub
sub
mov
mov
cmp
pusha
in
mov
and
sbb
adc
out
pusha
or
fwait
cmp
jo
gs
mov
in
imul
or
fbstp
iret
ss
(bad)
mov
pop
nop
inc
stos
mov
sub
stos
xchg
or
cld
push
or
scas
nop
cmps
xor
and
jne
sbb
cmc
ret
test
pop
and
and
pushf
shl
out
mov
adc
inc
xchg
mov
scas
xor
xor
movs
mov
or
(bad)
fwait
inc
push
mov
xchg
scas
jb
pop
xor
movs
mov
daa
add
add
sar
and
sti
ret
jo
mov
xor
movs
imul
out
fild
and
scas
cmc
arpl
repnz
dec
mov
push
or
(bad)
fisub
ja
push
scas
mov
adc
add
add
repnz
add
jno
test
rcl
daa
inc
pop
cmps
add
sub
push
std
fistp
movs
mov
mov
(bad)
fild
rol
jno
daa
dec
rcr
inc
pop
stos
mov
das
push
dec
neg
popf
fild
push
and
pop
mov
pop
jmp
fimul
fwait
jno
mov
mov
aas
cli
jmp
fistp
aam
jmp
lea
push
push
scas
or
pop
nop
adc
pop
nop
retf
mov
jmp
mov
push
or
outs
sbb
mov
icebp
mov
adc
je
add
sub
or
test
movs
arpl
mov
pop
out
sbb
arpl
call
add
repnz
mov
cmp
shr
scas
aas
ds
xchg
add
stc
retf
sar
adc
rol
movs
xor
lock
mov
cmp
push
movs
xor
mov
test
scas
mov
jmp
fimul
fwait
jno
inc
add
adc
mov
add
pop
hlt
repnz
mov
xor
pop
push
mov
inc
sahf
or
jae
arpl
mov
cmp
das
push
cli
pop
call
jnp
mov
fwait
mov
ret
pop
mov
fidivr
mov
stos
ins
sbb
fwait
rcl
mov
cmp
shr
movs
loope
adc
sbb
fild
outs
pusha
xchg
mov
fisub
stos
repz
dec
mov
call
dec
movs
push
add
jns
(bad)
mov
pop
stos
adc
jae
dec
mov
jmp
push
push
cmc
repnz
in
sbb
push
add
dec
mov
push
mov
outs
pusha
lods
jnp
mov
xchg
aas
imul
inc
push
movs
in
mov
ror
aaa
imul
push
pop
push
in
fimul
out
mov
dec
ret
stc
dec
sar
jno
pop
adc
mov
xor
aas
and
inc
xor
push
mov
jg
(bad)
jae
inc
(bad)
inc
add
xor
add
cmp
int
movs
mov
jno
and
aaa
leave
mov
pop
mov
mov
stc
fwait
dec
lods
inc
add
repnz
push
push
mov
ja
test
mov
mov
outs
or
jg
cmps
mov
test
stos
inc
cdq
idiv
lds
popa
xor
(bad)
pop
in
push
data16
jb
stos
sub
sub
dec
add
adc
pop
scas
fistp
ja
lea
xchg
mov
(bad)
fwait
inc
inc
dec
add
jae
scas
loop
pop
xor
movs
mov
daa
add
add
sar
and
les
mov
shl
lock
jmp
jb
stos
jo
aam
push
push
add
mov
pop
mov
pop
std
xor
add
dec
push
and
ret
adc
jb
add
dec
add
pop
push
fld
jo
jmp
and
mov
push
test
idiv
jmp
or
add
xor
mov
aas
inc
add
icebp
mov
ins
add
push
inc
add
adc
mov
cmp
dec
shl
pop
pop
int
(bad)
shl
jo
and
sub
push
inc
retf
fwait
mov
inc
add
inc
mov
cmp
jecxz
movs
xor
daa
sbb
lahf
cmc
push
scas
cmps
mov
add
cmps
mov
pop
xor
iret
mov
lods
mov
xchg
mov
sbb
xor
add
cs
cmps
push
fist
(bad)
xchg
dec
add
jecxz
mov
cmp
fcmovnu
movs
loope
adc
sbb
fild
outs
add
sbb
xchg
sub
inc
inc
pop
xor
movs
mov
pop
add
(bad)
cmc
fwait
inc
cmps
xchg
add
xor
add
xor
mov
push
pop
fs
and
aaa
pop
std
lock
mov
mov
stc
fwait
dec
cmp
push
mov
idiv
sub
xor
xor
call
pop
or
fwait
loopne
mov
sub
mov
sub
xchg
push
clc
ret
addr16
add
sub
fucomi
push
or
scas
or
pop
xchg
mov
or
daa
adc
jp
icebp
jnp
add
push
scas
cmps
sbb
jg
scas
popa
mov
rcl
push
push
test
out
sbb
sbb
inc
xchg
mov
outs
adc
xor
inc
or
mov
dec
test
xlat
(bad)
xchg
mov
push
adc
jg
js
fst
dec
shr
push
jmp
aad
xor
leave
fsubr
mov
pop
pop
jnp
data16
push
mov
pop
push
ins
add
adc
xor
mov
sbb
movs
sbb
mov
mov
int3
xchg
outs
hlt
inc
clc
arpl
sbb
ja
jmp
xor
push
add
fwait
mov
rcl
xchg
das
das
(bad)
dec
pop
ins
sbb
adc
mov
jns
iret
jl
jae
mov
mov
ror
(bad)
lods
push
mov
lea
pop
xchg
jae
add
add
in
and
out
lahf
mov
cld
jns
out
add
les
pmulhw
fldenv
sub
repnz
jnp
jg
push
or
sar
mov
xchg
jg
je
iret
cmps
stc
jge
push
pop
sar
bnd
jg
push
retf
dec
xor
mov
mov
sub
sahf
shr
and
lods
retf
xor
ja
mov
push
jns
outs
and
dec
xchg
cmp
nop
mov
lahf
(bad)
adc
idiv
push
mov
add
push
or
cdq
fst
ds
loopne
pop
push
dec
xchg
ret
out
sar
mov
mov
ret
xchg
imul
xchg
rol
mov
mov
xor
retf
div
jmp
ja
fwait
mov
ds
adc
xlat
sub
cdq
dec
ja
adc
jl
cmps
shl
xlat
xchg
test
fcmovnbe
xchg
mov
jns
xlat
aam
jg
and
loope
out
js
jl
call
out
fwait
retf
(bad)
and
outs
(bad)
push
scas
jmp
call
cmps
lock
xor
fist
cmp
push
mov
lahf
inc
enter
dec
sub
out
sub
cmp
aas
sub
cmp
jne
jo
cdq
dec
jnp
jne
and
push
xlat
scas
cli
fld
jle
jae
adc
or
rcl
and
mov
pop
sar
push
ret
jg
push
retf
das
xor
mov
mov
sub
sahf
ror
das
mov
push
xor
neg
and
jnp
mov
and
cmps
fldcw
int3
inc
inc
cmp
aaa
nop
ss
jg
repz
mov
push
rol
dec
in
ja
(bad)
pop
xor
aas
shl
xor
cmp
mov
sar
jnp
jmp
outs
stos
cmp
loopne
sub
shl
mov
mov
into
sbb
xor
cmp
adc
mov
shl
mov
jnp
add
inc
popa
movs
xchg
outs
adc
xchg
imul
enter
js
jnp
and
scas
xchg
aaa
mov
add
aam
into
in
jecxz
lahf
mov
(bad)
dec
test
or
lock
xlat
jbe
scas
cmp
jle
maxps
test
jg
inc
and
mov
das
push
hlt
cmps
or
pushf
inc
adc
movs
ja
mov
out
sti
jnp
add
mov
sahf
cli
jp
fimul
daa
(bad)
and
popf
int3
pop
lods
dec
test
dec
fcomi
ret
(bad)
ror
adc
sbb
inc
pop
mov
push
jp
clc
imul
push
push
pop
fist
push
pop
and
add
xor
mov
pop
test
mov
imul
popa
into
and
js
mov
fistp
adc
inc
push
sub
into
mov
bnd
push
je
pop
les
adc
pop
adc
std
cdq
add
movs
test
(bad)
out
(bad)
pop
ficom
jmp
pushf
div
stc
dec
ror
xchg
cmp
xchg
dec
cmps
add
pop
test
iret
xchg
ficom
fstp
int3
pop
jbe
mov
outs
outs
dec
xor
fimul
fwait
jecxz
cmp
mov
(bad)
movs
jecxz
stc
mov
jo
sbb
sbb
xor
inc
nop
fmulp
pop
std
fistp
movs
mov
jg
fwait
mov
loop
inc
xor
out
or
icebp
sti
pop
jo
and
mov
add
imul
ret
and
mov
mov
sub
add
or
fistp
adc
pop
iret
in
push
sub
into
jo
mov
adc
div
retf
loopne
xchg
mov
bound
in
push
cwde
mov
rcr
mov
ror
dec
dec
aaa
ds
out
mov
inc
xchg
cmp
mov
cmp
retf
xchg
xchg
out
mov
inc
movs
hlt
fidivr
out
add
cmp
movs
arpl
daa
popa
push
inc
push
or
mov
mov
arpl
cmps
mov
mov
loopne
test
(bad)
pop
sub
call
mov
loopne
scas
call
push
jae
xchg
and
xor
jecxz
xor
int
sahf
xor
mov
xchg
scas
pop
stos
sub
loop
add
sub
sub
sbb
out
mov
and
movs
test
dec
cmps
mov
add
xchg
lods
in
out
call
adc
mov
stos
jmp
xor
mov
adc
pop
inc
test
jmp
iret
xchg
jno
mov
mul
popa
movs
lahf
jg
xlat
movs
scas
inc
test
loopne
js
cli
in
out
mov
cmp
or
fcom
fwait
dec
cmp
push
mov
push
and
inc
xor
push
dec
mov
xchg
aas
push
dec
mov
outs
movs
mov
or
aaa
mov
adc
and
mov
jae
and
xchg
cmp
test
ds
(bad)
fwait
fwait
mov
mov
mov
retf
stos
dec
scas
outs
arpl
popa
test
xchg
sub
aas
push
movs
xor
movs
xchg
mov
je
dec
aas
shl
mov
shl
je
(bad)
cwde
cmp
fmul
xchg
stos
ffreep
add
dec
shl
adc
inc
xchg
mov
movs
loop
(bad)
stc
stos
push
push
mov
pop
js
out
mov
adc
loop
dec
(bad)
fild
or
pop
aas
fld
sub
ss
push
mov
jl
push
popa
cdq
cmp
in
test
retf
adc
dec
sar
mov
pop
adc
mov
pop
push
sbb
repz
cmps
mov
nop
(bad)
scas
ss
push
push
out
loop
mov
mov
push
mov
sub
mov
or
test
jne
xchg
shl
jmp
imul
or
fsub
out
mov
fwait
inc
outs
outs
jle
xor
pop
mov
jae
jmp
fild
cmc
add
xor
add
adc
scas
push
sub
adc
jmp
hlt
push
ja
xor
mov
lods
fwait
mov
cmc
add
add
adc
pop
and
push
mov
sub
add
lahf
(bad)
mov
or
sub
movs
repnz
mov
xchg
push
enter
ins
test
push
aam
adc
cmp
or
shl
retf
ss
cmp
out
cmp
mov
popf
adc
ds
lea
data16
jae
inc
sbb
mov
imul
jmp
pop
adc
inc
add
scas
mov
add
xor
pop
jge
test
mov
out
sbb
rol
inc
add
mov
mov
inc
shl
mov
mov
cmc
jmp
pop
sub
test
test
pop
adc
inc
add
scas
mov
hlt
sbb
mov
icebp
xlat
cmp
fsub
cmp
iret
push
cmc
cmps
sub
push
add
mov
ror
fneni(8087
cmp
mov
and
push
shr
int3
cmps
add
mov
aas
mov
cmp
mov
adc
popf
ja
mov
bound
(bad)
and
jmp
fild
jmp
add
adc
arpl
jo
test
xchg
jmp
dec
sub
movs
adc
add
jns
xchg
jae
pop
outs
pop
push
mov
loope
(bad)
push
popa
ror
movs
pop
push
jb
mov
jp
mov
in
sbb
retf
hlt
repz
adc
pop
mov
movs
loope
xchg
pop
dec
icebp
ja
(bad)
pop
std
adc
inc
add
sbb
aad
pop
sbb
jns
or
sbb
pop
inc
mov
pop
mov
and
cwde
pop
jb
push
lods
std
adc
mov
mov
cmps
adc
jb
push
sub
dec
mov
(bad)
mov
test
(bad)
hlt
and
data16
neg
xchg
fild
dec
lds
out
mov
bound
mov
mov
loop
xor
cmc
inc
test
rcr
jne
mov
fcmovb
pop
aam
push
cmc
pop
fiadd
pop
test
xchg
mov
mov
je
sahf
mov
dec
rol
xor
xor
aas
(bad)
(bad)
es
push
lock
neg
xor
std
add
stos
cs
retf
hlt
je
retf
enter
bound
sar
(bad)
test
mov
jl
inc
cmp
push
fist
sar
lock
mov
repz
add
hlt
mov
add
or
int
(bad)
shl
rol
ret
xchg
hlt
sar
add
pop
stos
fbld
aam
inc
pop
mov
nop
dec
add
ror
aas
xchg
mov
xor
push
mov
in
rcl
push
inc
retf
fwait
(bad)
addr16
xchg
sub
mov
xchg
aaa
mov
mov
cmps
pop
dec
(bad)
icebp
pop
adc
jne
lds
add
jbe
retf
jl
std
jp
ficomp
inc
jmp
push
push
jb
into
jbe
dec
shl
lock
test
add
and
mov
je
dec
inc
xchg
lods
dec
push
inc
retf
fwait
(bad)
outs
jl
jecxz
mov
cmp
aaa
sbb
test
(bad)
fwait
mov
int3
add
(bad)
movs
bnd
mov
sbb
push
rcr
jns
dec
adc
mov
push
hlt
das
aam
dec
shr
lea
in
sub
repz
call
dec
add
scas
hlt
mov
icebp
div
and
pop
int
(bad)
shl
rol
ret
xchg
hlt
shl
sub
pop
stos
fbld
fimul
add
imul
jp
fimul
movs
push
stos
in
sbb
push
ret
movs
and
push
jns
xchg
ins
sbb
fwait
test
inc
dec
lods
fwait
jno
inc
aaa
sub
fwait
mov
xchg
sub
mov
movs
jmp
das
repz
cmp
shr
xchg
sub
jb
ret
mov
pop
inc
mov
not
jle
add
jno
inc
int3
pop
cmp
mov
pop
sbb
xchg
inc
out
call
mov
outs
cmps
ret
movs
jbe
mov
pop
mov
dec
inc
dec
add
mov
mov
retf
cmp
mov
mov
xor
jg
int
stos
push
push
shl
add
jns
push
cwde
lea
pushf
shr
or
rcl
inc
sub
inc
lahf
pop
fbld
sbb
(bad)
mov
jmp
movs
test
xor
retf
xchg
fiadd
lds
fimul
fwait
shl
test
xchg
sub
mul
sub
data16
idiv
adc
lock
(bad)
dec
fstp
pop
test
movs
xor
push
and
jl
das
add
xchg
cld
fisttp
or
fwait
jl
das
add
lahf
mov
or
fwait
jl
das
add
lahf
call
int3
fadd
push
xchg
cs
push
mov
add
ret
arpl
std
jp
fidiv
ret
movs
stos
push
push
test
push
xchg
movs
and
push
push
xchg
add
(bad)
cli
fwait
aaa
jnp
add
sub
push
std
fistp
movs
add
ins
cmp
jmp
movs
mov
cs
loopne
shl
sub
ss
jp
fidivr
int3
movs
stos
push
push
xchg
les
iret
movs
jns
push
mov
jp
fidivr
xor
sub
pop
push
adc
push
mov
mov
aad
inc
inc
dec
mov
sbb
fistp
mov
int
(bad)
jb
movs
mov
jmp
push
push
add
jmp
push
push
sbb
mov
pop
clc
add
sub
jecxz
mov
sub
call
movs
sub
pop
jo
and
cmp
or
sar
adc
pop
test
vunpckhps
aam
sub
xchg
cmp
or
pop
fimul
movs
jns
push
jae
jp
fidiv
cs
xchg
stos
mov
out
rcl
inc
lahf
mov
into
sub
add
nop
and
(bad)
js
mov
test
call
data16
ret
retf
mov
sbb
stos
fistp
retf
mov
and
or
xchg
sub
fwait
aas
sbb
pop
movs
jmp
das
fld
xor
jo
pop
movs
xchg
cmp
push
pop
movs
xchg
sub
xor
ret
(bad)
icebp
or
fild
push
push
mov
pop
test
mov
push
hlt
mov
repz
mov
jg
mov
stos
push
push
sbb
ins
pop
mov
jns
push
add
and
pushf
shr
or
sar
sub
pop
test
vunpckhps
aam
sub
mov
mov
sub
clc
mov
push
adc
push
inc
sub
pmaxub
sti
mov
and
push
sbb
add
pop
sub
xchg
jg
fimul
fwait
shr
sub
mul
adc
lock
idiv
iret
adc
lock
pop
cmps
mov
xor
push
and
dec
mov
sub
push
push
lods
fwait
jno
mov
sub
dec
dec
mov
adc
add
cmp
xchg
movs
xchg
cmp
loopne
mov
enter
adc
outs
jns
rol
sub
(bad)
inc
lds
imul
jp
fisttp
or
push
aad
icebp
pop
cs
xchg
mov
adc
aaa
pop
mov
xchg
(bad)
mov
dec
sar
ss
test
(bad)
fwait
inc
stc
mov
jmp
ret
mov
add
imul
mov
add
inc
shr
mul
pop
data16
or
xchg
ja
sub
shl
jno
add
cs
xor
inc
retf
fwait
je
fiadd
call
out
fild
and
imul
add
call
jp
test
cmps
mov
movs
mov
dec
lock
imul
push
movs
add
std
xchg
addr16
test
cmps
in
xor
pop
pusha
xchg
inc
(bad)
(bad)
fistp
arpl
rcr
hlt
gs
test
retf
sbb
add
loop
pop
mov
mov
js
dec
ins
and
add
mov
mov
dec
in
mov
push
dec
int3
or
adc
push
aad
and
dec
mov
jnp
dec
push
scas
and
jns
mov
or
pop
push
movs
lock
dec
sbb
aaa
test
mov
in
pop
jmp
xor
icebp
pop
sub
fsubr
retf
or
push
sub
pop
or
mov
js
dec
mov
mov
cmp
push
or
mov
inc
cwde
outs
mov
popf
nop
rcr
mov
mov
sbb
cmp
xchg
out
or
aad
adc
mov
sbb
aaa
sbb
mov
out
mov
push
adc
sqrtps
inc
jns
add
or
push
mov
shr
cmp
daa
movs
dec
sbb
cs
push
xor
xchg
out
push
rol
nop
aad
adc
mov
sbb
aaa
jb
mov
mov
cmp
adc
or
in
lds
cdq
add
aas
mov
cwde
arpl
popf
nop
sar
dec
mov
mov
movs
dec
sbb
sbb
push
in
popa
mov
sahf
in
pop
mov
sahf
in
dec
mov
sahf
aam
or
stos
pushf
fistp
sar
adc
push
aam
jl
(bad)
adc
pop
dec
stos
shl
dec
stos
enter
adc
and
movs
arpl
adc
sub
adc
xor
fsub
pop
push
xchg
jge
xlat
fild
call
ficomp
and
sbb
add
shr
cld
movs
lds
fwait
jno
xlat
add
jb
mov
aas
inc
jmp
lock
retf
push
neg
pop
jb
stos
sub
sub
aam
dec
mov
and
xchg
and
adc
lock
push
std
fistp
movs
mov
mov
(bad)
fild
cmp
mov
aad
daa
dec
rcr
ficomp
repz
jp
mov
xchg
test
pmaxub
fstp
mov
jbe
stc
dec
sar
pop
ficomp
inc
outs
cmps
add
jnp
test
mov
dec
ss
inc
ret
fwait
aaa
jg
add
mov
cmp
mov
daa
push
xor
mov
pop
jmp
sahf
dec
lods
fwait
mov
fiadd
jb
mov
aas
inc
adc
jecxz
push
jmp
mov
sub
dec
xchg
mov
test
xor
rcr
cmp
aad
or
mov
add
movs
mov
cmp
lods
test
mov
test
scas
retf
jmp
push
or
jb
mov
loope
add
pop
add
add
adc
add
sbb
test
pop
int
retf
sar
push
and
sqrtps
(bad)
jp
aaa
push
fild
out
mov
or
fbstp
jne
xchg
fdiv
inc
lds
imul
scas
or
lock
fild
daa
mov
and
and
fadd
out
dec
sar
pop
push
and
mov
pop
std
fistp
movs
add
out
jmp
dec
and
mov
pop
ror
int3
daa
rol
mov
cmp
movs
shr
push
cmc
lods
mov
add
icebp
imul
(bad)
fild
push
cmps
jae
gs
pop
push
es
adc
stos
add
popa
and
xor
and
xor
mov
adc
(bad)
out
pop
ret
xor
out
jmp
scas
iret
call
pop
mov
mov
and
and
out
cld
and
retf
pop
out
mov
xchg
(bad)
movs
xor
mov
out
scas
fisub
pop
jmp
or
add
mov
sbb
sub
push
dec
push
jns
pop
jb
stos
sub
sub
fild
fisubr
stc
(bad)
pop
push
retf
pop
and
jae
inc
inc
in
xchg
jae
icebp
mul
mov
or
cmc
ficom
aaa
pop
or
mov
pop
cmps
out
jo
imul
mov
in
xchg
jo
nop
(bad)
in
mov
retf
adc
ss
or
ret
jecxz
fsub
push
mov
lahf
jg
or
inc
das
mov
push
out
ror
add
fsub
add
int3
sti
add
stc
repnz
and
pop
push
int
add
adc
push
jnp
movs
cmp
adc
movs
(bad)
mov
add
add
xchg
mov
fmul
fwait
je
jecxz
push
jbe
mov
cmp
mov
ds
gs
stc
retf
rol
into
pop
inc
add
sbb
call
(bad)
aas
and
movs
pop
pop
mov
neg
mov
mov
rol
or
fwait
dec
popf
jecxz
pop
scas
pop
mov
cmp
das
mov
repz
adc
jae
push
ss
jp
fimul
rcpps
pop
aam
jl
aaa
mov
mov
add
icebp
stc
jg
hlt
push
jne
pusha
jmp
imul
shl
add
mov
xchg
mov
push
sub
scas
repnz
arpl
(bad)
jl
loope
repz
xchg
movs
out
pusha
mov
cmps
in
mov
adc
iret
push
inc
std
cmps
(bad)
jp
repz
inc
neg
mov
popa
pusha
xchg
mov
sar
jne
data16
bound
lods
aaa
(bad)
stc
les
pop
int
ret
out
xchg
outs
(bad)
hlt
cmp
sbb
xor
retf
sub
faddp
cmc
xchg
mov
mov
xor
sub
add
push
les
out
mov
loop
iret
add
inc
mov
mov
pop
lahf
dec
push
je
inc
sub
mov
pop
cwde
inc
mov
push
push
retf
dec
sub
popa
pop
(bad)
inc
pop
fwait
pop
imul
dec
xchg
scas
test
int
retf
mov
arpl
push
ret
cmc
sahf
xchg
imul
or
ret
ja
sub
sbb
sub
loopne
retf
out
inc
into
mov
mov
not
ja
cs
out
sub
les
loop
iret
add
dec
mov
inc
pop
lahf
xchg
jae
iret
dec
sub
ja
xlat
(bad)
hlt
inc
xlat
cmp
push
jp
sti
sub
scas
xchg
adc
cmc
dec
xchg
and
jbe
mov
mov
call
mov
(bad)
mov
push
push
xchg
cs
pop
out
sbb
lock
mov
sub
sub
pusha
vpaddd
fwait
xlat
imul
mov
mov
pop
lahf
(bad)
jae
iret
xchg
ret
das
nop
das
(bad)
hlt
sti
xlat
fdivr
mov
sub
sub
and
add
int
out
jb
div
lods
fsub
pop
add
imul
inc
push
or
dec
jmp
es
push
ins
ret
loop
imul
cmps
in
mov
cmp
add
jnp
fld
mov
mov
aaa
dec
pop
jg
out
xor
mov
outs
imul
outs
push
or
scas
dec
push
adc
ret
inc
outs
imul
ds
pop
dec
out
push
xchg
out
jp
inc
push
ret
xchg
ins
imul
dec
into
mov
xchg
out
push
adc
push
ret
and
stos
(bad)
dec
jg
xchg
out
xchg
aas
push
push
ret
push
shr
outs
imul
cmp
mov
xchg
popa
imul
popa
push
or
cs
or
dec
iret
xchg
out
push
adc
push
ret
add
clc
shr
or
fcomip
push
out
outs
pop
scas
out
mov
rcl
mov
pusha
imul
icebp
or
pop
fild
push
ret
xchg
popa
imul
popa
push
or
add
or
or
push
pop
ret
loop
imul
sub
or
xchg
lock
cmp
push
ret
dec
ret
inc
pop
imul
fisttp
or
iret
mov
out
dec
scas
movs
out
jne
xchg
pop
pop
dec
mov
mov
or
push
mov
aam
push
ret
xchg
nop
add
sar
pop
stos
pop
mov
push
mov
pop
aas
pop
repz
mov
sub
nop
sub
int
outs
mov
ficomp
pop
ins
in
jne
add
retf
mov
sbb
(bad)
sahf
jl
jg
outs
iret
repz
add
inc
lock
inc
adc
push
and
push
mov
ins
pminub
add
dec
inc
in
jns
lock
aaa
adc
push
and
cmpps
push
in
scas
fild
in
mov
(bad)
shr
mov
gs
cmp
jo
rcl
shl
push
xor
jne
sbb
inc
push
aaa
push
repz
cmpps
sbb
js
adc
ror
jb
push
sub
(bad)
mov
sbb
sar
std
rcl
adc
push
ds
jge
(bad)
jg
sbb
cmps
fist
shr
shr
xor
jl
test
pop
adc
js
rcl
ror
dec
ret
adc
rcr
push
out
cmpps
push
in
scas
pop
cs
mov
rol
test
inc
mov
jo
mov
sbb
xor
sbb
jae
shr
ret
test
add
outs
push
movhlps
and
xor
jns
fadd
mov
data16
xchg
shufps
out
cmps
out
pop
ret
outs
lods
adc
push
mov
xor
test
addr16
sbb
mov
(bad)
sar
stos
sub
mov
dec
inc
inc
xchg
or
sub
sbb
loope
icebp
xchg
jb
pop
call
gs
and
jo
mov
ins
stc
jl
dec
xor
movaps
sti
sbb
dec
pop
pop
dec
mov
jns
inc
cs
inc
xlat
push
cmp
lock
mov
data16
and
xlat
inc
jmp
sar
aad
stos
xor
inc
call
outs
or
push
pop
push
jae
call
dec
not
add
lods
jecxz
pop
xor
aad
test
pop
(bad)
mov
and
cmp
ret
test
add
jo
aam
mov
retf
test
sub
inc
ret
push
adc
(bad)
imul
mov
add
pop
push
pop
jl
rcl
(bad)
sub
rcr
dec
inc
mov
data16
mov
dec
outs
ret
xchg
hlt
add
dec
xor
lock
adc
loop
push
test
(bad)
in
cmps
inc
jmp
cmc
hlt
add
push
imul
inc
xchg
xchg
dec
jbe
ss
or
stos
rcr
adc
xchg
cmp
repz
push
or
push
mov
xor
std
in
jnp
ret
loopne
fist
pop
mov
inc
xchg
jmp
or
add
neg
ret
inc
(bad)
mov
pusha
(bad)
mov
fs
inc
lds
adc
mov
add
cmps
and
push
push
shl
mov
mov
mov
cmps
sbb
adc
scas
scas
pop
jle
popa
dec
or
mov
shl
mov
pop
mov
in
or
pop
inc
test
mov
push
xor
mov
sahf
jmp
add
es
add
jo
adc
test
ja
(bad)
mov
push
mov
arpl
outs
shl
cli
icebp
push
or
add
fist
jmp
sub
mov
cmp
push
mov
imul
shr
xlat
clc
mov
stos
outs
ret
nop
aam
jns
rcl
cs
aaa
push
lods
cmps
lahf
and
push
pop
(bad)
das
into
dec
mov
jmp
inc
pop
lahf
out
push
mov
jb
mov
jmp
cmp
or
xlat
dec
movs
addr16
call
pushf
daa
jg
test
xchg
xchg
(bad)
sub
mov
bound
xor
lock
int3
mov
cdq
cmp
addr16
or
jbe
sbb
push
pop
sub
daa
mov
fstp
mov
mov
and
stc
pop
jns
ss
ret
loope
xchg
push
push
pop
mov
jmp
xchg
mov
mov
inc
sbb
inc
dec
xlat
stc
imul
popf
adc
push
add
sub
(bad)
jl
pop
mov
mov
mov
imul
out
or
sub
mov
mov
xchg
adc
out
(bad)
mov
test
imul
mov
mov
add
scas
mov
out
retf
in
addr16
imul
mov
test
jnp
cmp
jno
fisttp
addr16
xchg
sub
fs
mov
leave
out
retf
mov
push
ss
ret
ret
push
push
add
cld
enter
inc
in
mov
sub
cmps
dec
mov
xchg
pop
xchg
retf
push
scas
int
mov
inc
sub
or
das
mov
test
lahf
mov
out
xor
idiv
retf
sbb
cs
xchg
sti
pop
or
iret
mov
or
push
sub
mov
sub
jbe
not
dec
imul
adc
idiv
push
mov
shr
test
mov
(bad)
outs
call
mov
js
pop
cmc
inc
mov
out
retf
cmps
out
sbb
jns
movs
ret
cs
xchg
sti
pop
dec
sbb
in
and
mov
div
imul
jb
xchg
push
fild
xchg
call
fcmovne
jmp
xchg
imul
push
scas
fist
push
jle
sbb
not
ret
or
mov
test
out
pop
push
push
inc
jmp
xlat
sub
mov
jmp
aas
out
jno
mov
jmp
pop
ss
jno
aaa
ret
fisttp
scas
jl
xchg
imul
cs
sub
mov
jno
pop
mov
sub
daa
lahf
mov
xchg
pop
sub
pop
xchg
pusha
inc
pushf
dec
inc
dec
rcr
push
push
lahf
jnp
push
jbe
test
sbb
xchg
fadd
jns
fcom
pop
xchg
mov
pop
repz
scas
icebp
mov
xchg
adc
imul
mov
iret
add
lahf
cmps
push
pop
pop
jp
cmp
out
icebp
shr
push
jo
push
push
adc
mov
nop
or
push
xchg
(bad)
pop
inc
sbb
sbb
call
pop
pushf
je
dec
push
test
fsubr
inc
xor
jle
mov
not
xchg
popf
jmp
and
(bad)
jecxz
mov
test
les
loope
cmps
cmp
xchg
fisubr
push
push
call
(bad)
adc
cmps
data16
jl
dec
fcom
ret
mov
mov
enter
xchg
or
pop
shl
mov
inc
adc
stos
inc
lock
adc
test
mov
mov
out
pop
cdq
int3
sbb
call
lods
bound
adc
push
fsub
pusha
inc
movs
je
mov
mov
and
mov
into
pop
pop
jns
xor
ins
jle
xchg
scas
jle
jge
(bad)
jp
je
or
hlt
lahf
jp
inc
fiadd
popf
cs
out
pop
nop
dec
inc
fs
jbe
in
lahf
lahf
ret
aaa
jl
sub
lock
sub
int
ret
out
sub
sub
ins
dec
fs
sub
push
ss
enter
push
push
xchg
lea
ret
dec
xor
ret
sub
sbb
mov
mov
out
mov
inc
(bad)
sub
mov
sbb
xchg
inc
ret
jmp
push
adc
sub
xor
arpl
outs
and
lea
ret
xor
das
scas
push
stc
sbb
pop
xchg
in
fs
mov
mov
stos
xor
jecxz
xor
jno
inc
push
mov
test
ja
jae
sub
sbb
adc
out
xchg
outs
and
call
stos
popa
push
jnp
pop
retf
int3
fld
out
jbe
out
mov
jbe
mov
inc
push
push
movs
lock
sahf
sti
sbb
mov
es
sbb
and
or
jecxz
cmps
push
push
add
xlat
dec
popa
lock
addps
push
sub
icebp
outs
imul
xchg
add
rcr
movs
xlat
(bad)
lods
addr16
je
outs
jge
mov
stos
cmp
mov
mov
out
mov
and
call
push
sti
dec
jle
add
loope
out
in
or
lds
sub
ret
movs
cmp
(bad)
stos
retf
mov
leave
loop
idiv
and
ret
pop
retf
rcl
mov
sub
push
retf
dec
pop
cmp
or
sub
stc
das
or
retf
xchg
push
cmp
dec
xor
push
icebp
test
xor
xchg
push
retf
ret
dec
std
or
je
test
mov
ror
mov
mov
add
arpl
lods
ja
jb
mov
scas
dec
in
ja
push
aad
fld
ror
push
add
xchg
sahf
push
add
mov
imul
mov
pop
pop
mov
call
outs
xchg
into
xchg
out
cmp
sub
add
push
ret
out
cmp
movs
imul
sbb
clts
lds
call
mov
pop
shr
das
add
scas
rcr
in
mov
ds
pop
inc
mov
ss
pusha
call
iret
mov
mov
adc
mov
push
dec
sbb
push
push
movs
mov
out
(bad)
pop
jg
nop
jmp
test
test
lods
or
inc
(bad)
int3
outs
pop
push
and
repnz
or
pop
mov
scas
fsub
retf
inc
inc
pop
imul
das
int
cmp
test
mov
pop
stos
mov
fist
or
mov
add
icebp
xor
mov
mov
in
stos
cmp
mov
adc
push
pop
push
dec
repz
and
mov
in
xor
int
mov
jno
mov
mov
pop
jl
scas
push
fucomi
dec
das
retf
loop
push
ins
and
out
outs
mov
lahf
push
adc
adc
(bad)
mov
pop
jl
sub
in
out
shl
cmp
movsx
cmps
lock
adc
pop
mov
faddp
test
or
pop
mov
jnp
push
int3
push
scas
push
pop
in
adc
inc
mov
(bad)
pand
push
xchg
call
mov
lods
xchg
jg
test
dec
add
add
pop
push
mov
in
mov
enter
or
mov
cmp
xchg
cmp
mov
adc
mov
push
dec
sbb
mov
mov
xchg
pop
jb
stos
jo
aam
xor
xor
into
push
cwde
inc
leave
push
pop
mov
movs
push
cmp
out
mov
xor
inc
or
push
mov
dec
ret
ss
push
add
pop
push
test
mov
int3
call
in
ins
daa
mov
(bad)
repz
push
stos
out
(bad)
(bad)
xchg
push
adc
xchg
push
mov
push
es
ret
xchg
mov
in
inc
dec
mov
mov
test
mov
mov
pushf
xchg
and
std
pop
mov
add
dec
jae
adc
enter
pop
push
mov
inc
push
jle
push
cwde
ror
pop
and
xchg
daa
add
mov
mov
xor
mov
push
inc
xchg
inc
pop
xor
bound
mov
imul
stos
sbb
mov
cmc
scas
ret
gs
fsubr
add
cli
pusha
pushf
mov
mov
pop
adc
js
into
add
fisubr
inc
sti
push
ja
test
pop
movs
cmp
mov
jmp
test
dec
inc
sub
push
push
mov
out
adc
inc
add
sbb
clts
cmp
call
push
cmp
jg
lds
dec
shr
add
dec
push
mov
mov
in
scas
cwde
les
cmps
not
jne
mov
mov
scas
into
imul
pop
or
(bad)
ret
ja
cmps
jg
movs
out
mov
cmp
push
scas
mov
add
push
xchg
push
retf
mov
mov
retf
pop
mov
add
(bad)
sub
push
sti
push
ja
xchg
sub
movs
pop
loop
push
mov
sbb
push
jle
push
mov
imul
push
dec
pushf
jmp
add
cs
mov
in
aaa
mov
adc
sub
cmovo
mov
and
xchg
pop
stos
call
jae
inc
sub
loopne
inc
inc
test
cdq
imul
jbe
into
cmps
cmp
mov
mov
jp
mov
sub
push
scas
test
ret
jns
add
fs
loop
jbe
sbb
cmovo
mov
shl
pop
inc
dec
xor
cs
mov
push
cmc
in
xor
mov
push
les
mov
mov
sbb
addr16
pop
adc
leave
pop
pop
dec
jae
das
add
(bad)
scas
mov
mov
mov
test
addr16
push
(bad)
cld
push
retf
out
jb
mov
push
adc
out
idiv
or
jns
xor
jnp
inc
mov
in
lea
push
call
or
or
scas
pop
les
inc
cdq
mul
xchg
push
imul
jne
movs
in
mov
mov
adc
mov
push
dec
sub
movs
mov
lock
mov
push
xchg
lea
mov
aad
pop
rcl
push
ja
(bad)
sub
movs
pop
jb
push
not
mov
pop
lock
mov
and
test
inc
lods
jo
xchg
jo
scas
in
pop
sbb
cmovo
pop
mov
mov
mov
rol
pop
cwde
push
sub
dec
sub
add
sub
cmp
mov
adc
cmp
js
push
add
pop
jle
mov
mov
ja
mov
mov
dec
int3
mov
pop
push
scas
test
in
stos
mov
xchg
push
fstp
(bad)
inc
push
mov
clc
ret
mov
cmps
scas
icebp
sub
push
fisubr
jle
mov
in
jno
mov
push
cwde
retf
add
sub
movs
pop
jb
push
mov
jle
pop
mov
enter
adc
cmp
mov
jge
popa
in
fnsave
pop
push
push
in
daa
sub
mov
lods
adc
pop
scas
test
sar
mov
mov
inc
mov
cmp
add
scas
imul
and
scas
xor
movs
cmp
or
xchg
jmp
inc
shl
dec
xchg
iret
mov
inc
rcl
dec
retf
aaa
inc
sub
inc
xor
dec
leave
iret
ficom
mov
pop
ins
into
in
inc
mov
xchg
stos
fld
sub
aas
movs
pop
pop
scas
mov
pop
scas
add
dec
ja
repnz
mov
mul
mov
sbb
scas
(bad)
sub
push
jno
push
mov
sub
scas
test
rol
mov
cmp
in
pushf
aam
movs
pop
ret
cli
mov
addr16
mov
sbb
mov
test
sub
sub
sub
dec
xor
js
jle
mov
mov
mov
mov
ficomp
adc
dec
fist
loopne
jp
mov
mov
sbb
sti
cmc
mov
pop
lock
mov
and
retf
sti
xor
dec
int
inc
dec
push
repnz
lock
int
mov
jg
mov
xchg
or
aaa
rol
mov
push
or
add
sbb
jmp
rol
or
mov
jae
retf
xor
xchg
push
rol
pushf
mov
mov
int
std
pop
mov
add
out
sub
push
sti
push
ja
xchg
sub
movs
pop
xor
in
and
mov
pop
sub
pop
inc
dec
dec
push
jg
pop
fiadd
mov
in
aaa
inc
scas
movs
loope
adc
sub
cmovo
mov
push
inc
pop
sbb
and
push
fstp
leave
hlt
mov
sbb
pcmpgtd
push
mov
fisub
lods
jge
push
pop
aas
call
push
test
sti
aas
cdq
xor
xor
push
fwait
out
jp
lods
movs
pop
bound
fs
jle
dec
mov
cli
in
cmp
jo
test
push
and
push
ret
out
sbb
movs
imul
(bad)
(bad)
mov
push
nop
sbb
faddp
dec
call
jg
shl
add
out
jo
mov
jp
jnp
mov
mov
cmps
das
lock
imul
push
inc
mov
and
adc
daa
mov
sub
mov
push
(bad)
adc
dec
pushf
cmp
enter
inc
sbb
and
lods
pop
shr
adc
dec
mov
sbb
dec
mov
and
mov
scas
into
add
outs
das
push
jne
push
ja
je
stos
movs
pop
mov
push
adc
sbb
push
jle
dec
mov
mov
mov
and
mov
add
(bad)
add
hlt
xchg
push
icebp
in
jno
stos
movs
mov
jno
mov
mov
stos
mov
push
mov
cmps
jg
jo
jg
mov
pusha
push
outs
mov
pop
inc
or
lds
sbb
mov
push
push
das
(bad)
mov
mov
mov
dec
push
test
adc
jnp
or
lea
mov
dec
mov
ja
mov
test
cmps
fcomip
sub
jns
push
sbb
push
pop
xchg
(bad)
loope
adc
sbb
jo
pop
push
xchg
cwde
mov
out
pop
stos
(bad)
adc
and
popa
dec
into
cmp
add
jle
mov
in
rcl
xchg
movs
scas
arpl
pop
clc
add
mov
mov
adc
std
pop
mov
add
scas
jg
push
xchg
out
push
nop
mov
ret
repnz
jns
fs
mov
mov
lods
push
call
popf
bound
arpl
cmp
push
sub
(bad)
call
ins
mov
rcr
das
push
addr16
ins
dec
into
jmp
add
into
sar
repnz
mov
pushf
mov
mov
push
pop
in
sub
imul
sbb
xor
xchg
stos
int3
mov
mov
jmp
lds
dec
sub
add
outs
push
mov
in
aaa
fist
pop
ret
xor
jo
pop
xchg
adc
dec
cmp
xchg
mov
push
in
and
outs
add
mov
lea
push
ins
mov
movs
aad
(bad)
mov
pop
mov
stos
outs
adc
xchg
push
dec
rcr
cdq
add
sahf
sar
hlt
cmp
loope
adc
sbb
je
jnp
xchg
sub
mov
call
das
xchg
jp
scas
push
in
in
stos
push
nop
movs
(bad)
rcl
ja
mov
xor
mov
xchg
std
mov
jb
stos
jo
or
dec
mov
add
push
mov
rol
sbb
mov
add
xchg
add
dec
add
bound
xchg
into
inc
jge
inc
sub
jne
pop
sbb
xorps
mov
push
push
push
or
mov
loop
cmps
mov
mov
mov
dec
mov
mov
mov
retf
pop
xchg
sub
mov
mov
fist
sub
fidiv
pop
mov
pop
mov
cs
dec
and
dec
and
sub
inc
adc
pop
mov
fwait
icebp
mov
aas
cmps
push
sub
pusha
xor
push
pop
std
pop
mov
push
(bad)
sub
mov
mov
mov
dec
push
pop
pop
adc
mov
movq
mov
xchg
mov
cmp
mov
adc
mov
push
dec
and
mov
lock
sbb
mov
xchg
fmul
mov
aad
xchg
push
add
push
dec
nop
sti
push
add
fs
sbb
sti
push
sbb
pop
lock
pop
and
sbb
push
hlt
in
aaa
nop
push
xor
xor
imul
xor
xchg
pop
push
pushf
mov
mov
into
add
and
jno
ins
sub
adc
mov
mov
xchg
cmp
iret
or
mov
pop
ret
loop
dec
pop
pop
cmps
out
repnz
outs
enter
push
das
sbb
je
jl
into
jg
mov
sub
(bad)
pop
pop
jb
stos
sub
out
cld
jae
inc
sub
xchg
scas
adc
movs
sub
out
mov
call
mov
movs
sbb
pop
add
retf
stc
mov
push
add
inc
adc
icebp
mov
and
inc
lahf
and
mov
es
pop
in
ins
inc
push
test
jmp
cmps
or
rcr
leave
push
inc
mov
div
sub
fild
enter
(bad)
pop
fild
enter
movs
pop
fild
leave
test
lods
sar
ret
mov
cmps
out
icebp
sub
imul
add
les
jmp
push
pop
fdiv
mov
movs
add
mov
xor
adc
cmps
scas
icebp
jo
imul
in
test
push
in
cld
scas
mov
push
dec
pop
lods
sar
xor
in
jbe
test
pop
inc
lahf
shr
mov
retf
sbb
mov
push
add
rcl
mov
cmps
(bad)
sub
push
pop
push
dec
icebp
repz
sub
mov
in
xor
add
push
mov
sbb
(bad)
xchg
movs
jecxz
fwait
push
mov
mov
pop
push
dec
pushf
jmp
add
je
push
shr
aaa
mov
adc
sub
cmovo
movs
je
push
mov
mov
stos
call
jae
inc
pop
es
push
test
int
daa
adc
(bad)
lods
xchg
xchg
xlat
push
sbb
xor
push
mov
adc
mov
adc
js
add
sbb
mov
movs
(bad)
ror
daa
push
pop
push
dec
repz
dec
mov
rol
in
adc
add
les
mov
xchg
into
ret
out
addr16
pop
add
inc
sbb
and
scas
mov
mov
movs
lea
mov
mov
add
(bad)
cld
push
retf
out
jb
add
adc
repnz
inc
mov
xchg
rcl
mov
push
sbb
bswap
or
add
mov
jl
mov
es
punpckldq
mov
adc
mov
dec
pop
add
mov
inc
cpuid
xor
mov
mov
sbb
xchg
lea
mov
pop
adc
pop
mov
call
ds
idiv
xchg
jo
retf
icebp
mov
mov
stos
jg
jae
dec
fist
loopne
pop
add
scas
xchg
pop
pop
mov
lock
mov
mov
push
scas
push
cs
push
add
mov
mov
push
xchg
cmp
cmp
imul
or
imul
sub
addr16
or
cdq
xchg
sub
scas
iret
mov
adc
test
add
loop
push
ja
gs
or
add
jle
scas
movs
mov
jl
fwait
mov
and
jl
inc
(bad)
pusha
add
icebp
cwde
xor
scas
movs
sti
mov
mov
dec
pop
jmp
jge
push
scas
outs
in
cs
ret
mov
or
jl
pop
and
into
sbb
sub
cwde
sub
gs
mov
addr16
rol
jne
sbb
cmovo
movs
je
icebp
xchg
daa
mov
push
adc
xchg
dec
fist
mov
add
xchg
mov
mov
dec
pop
jmp
test
dec
jne
add
xlat
or
mov
mov
xor
sbb
paddusw
pop
xchg
fxch
mov
dec
pop
jmp
sbb
xchg
pop
add
arpl
imul
mov
push
mov
jo
pop
mov
std
and
add
mov
int3
mov
in
jns
(bad)
jmp
jne
cdq
dec
xchg
mov
sbb
pop
xlat
(bad)
mov
cli
add
movs
je
push
xchg
sbb
gs
pop
shr
das
movs
pop
ins
dec
retf
add
cmps
mov
outs
add
xchg
mov
adc
icebp
jo
pop
pop
pop
dec
adc
add
fldcw
hlt
hlt
mov
fisttp
push
xchg
lock
mov
mov
push
mov
pop
rcr
sub
mov
mov
scas
retf
mov
movs
fidivr
shrd
sub
jg
xchg
movs
inc
stos
addr16
or
inc
scas
jns
jmp
pop
cmps
pop
lock
push
pop
push
dec
repz
dec
mov
in
adc
repnz
hlt
imul
movs
add
xchg
sub
push
push
pop
adc
leave
pop
pop
dec
jae
push
mov
mov
push
pop
and
jl
inc
ins
push
xchg
jae
out
add
sub
stos
pushf
repz
add
mov
mov
sbb
mov
mov
mov
pop
ret
(bad)
addr16
jno
jne
mov
pop
fld
ds
in
lahf
sbb
call
in
aaa
mov
mov
sbb
sbb
jo
sbb
xchg
cli
mov
lds
stos
dec
(bad)
sbb
in
cmc
in
xor
icebp
mov
lds
mov
movs
adc
mov
sbb
mov
and
movs
ins
pop
jl
inc
xchg
xchg
jo
mov
cmovo
push
mov
mov
shr
jae
add
xor
push
xchg
iret
icebp
jnp
gs
xchg
bound
push
call
push
xor
jae
scas
pop
fs
data16
dec
add
push
aaa
push
leave
push
push
pop
cmp
call
push
xchg
add
mov
and
jno
cmp
adc
inc
mov
(bad)
mov
jl
shr
mov
je
and
pushf
movs
xchg
test
xchg
repnz
sub
inc
adc
scas
xchg
cdq
sub
dec
mov
mov
dec
sar
js
push
mov
scas
out
mov
inc
xchg
push
pop
int3
fisttp
loop
xchg
dec
sub
pop
jno
add
cli
mov
in
pop
inc
jle
pop
jl
add
sti
mov
jns
stos
lahf
cmc
pop
mov
mov
mov
int3
icebp
adc
lahf
movs
ja
mov
add
add
inc
dec
(bad)
lods
adc
mov
pop
xchg
inc
lods
mov
sub
lods
mov
mov
into
sub
push
jno
xchg
mov
sub
nop
mov
in
lds
rol
jns
cmps
nop
dec
sub
jbe
movs
mov
in
cmp
jb
stos
sub
sub
dec
xor
test
scas
xor
stos
or
xchg
push
push
jns
mov
jp
stos
fist
das
rol
popa
dec
into
imul
aam
push
push
in
shl
ds
sub
pushf
mov
movs
lea
mov
mov
add
add
pop
add
jns
repz
xchg
iret
hlt
push
adc
dec
adc
xor
xchg
jno
rcl
xor
ror
sbb
sbb
sbb
mov
lock
mov
xchg
into
xchg
out
test
add
push
dec
add
push
mov
in
sbb
test
js
mov
inc
pop
jmp
dec
scas
push
add
jno
in
mov
jo
mov
movs
add
sar
mov
cmps
fcomip
jo
pop
pop
pop
dec
adc
mov
mov
xor
mov
shl
jg
dec
cs
retf
inc
cmp
push
ss
icebp
inc
adc
mov
cs
push
adc
test
or
movs
(bad)
xor
inc
jecxz
imul
(bad)
clts
aaa
test
mov
mov
rol
sti
push
ja
aad
jecxz
pop
and
in
inc
rol
inc
fist
stc
sbb
cmovg
sar
mov
adc
ins
mov
sbb
movd
pop
add
sub
jb
stos
jo
aad
push
push
not
mov
jno
pusha
xchg
retf
mov
in
dec
fist
jmp
and
sahf
mov
int
xor
dec
add
push
xor
pop
inc
pop
jmp
pop
sbb
push
push
mov
push
xchg
mov
mov
inc
pop
jmp
test
dec
arpl
mov
in
mov
out
mov
and
add
push
arpl
pop
jb
inc
cli
mov
scas
add
in
stos
push
out
mov
mov
mov
mov
push
xchg
mov
inc
pop
stos
movups
inc
pop
es
or
and
dec
or
or
push
pop
mov
push
shr
sti
mov
adc
cmps
jl
movs
jns
call
cmp
mov
mov
sahf
mov
imul
sub
sub
dec
xor
inc
add
xchg
test
repnz
repnz
mov
je
pushf
mov
movs
lea
xchg
test
std
pop
mov
add
mov
push
dec
nop
sub
ret
arpl
in
sti
out
icebp
movs
daa
sbb
pop
pushf
mov
movs
(bad)
ror
retf
pop
dec
adc
inc
add
inc
xchg
xor
mov
dec
outs
test
dec
ins
jg
mov
jg
or
outs
inc
mov
fisttp
and
shr
stos
leave
jmp
aad
(bad)
mov
pop
mov
add
js
push
ja
fwait
sub
mov
and
(bad)
movs
mov
sbb
sbb
movs
inc
push
push
cld
push
ja
inc
das
call
push
xchg
sbb
and
pop
pop
lock
jl
(bad)
mov
and
jl
inc
fadd
pushf
or
pop
sti
push
retf
out
shr
mov
repnz
in
sbb
push
add
dec
fist
jmp
ficom
mov
push
adc
ret
call
jo
sbb
movq
mov
out
cmp
mov
adc
mov
push
dec
xor
push
mov
xchg
xor
mov
or
mov
jmp
mov
push
add
jg
xlat
mov
jae
sbb
push
mov
mov
cdq
mov
push
mov
cmps
out
icebp
jo
pop
pop
pop
dec
adc
inc
add
and
mov
mov
mov
sbb
pop
jnp
adc
jnp
mov
hlt
xor
lds
xchg
rol
xchg
xchg
dec
add
sti
sub
lea
mov
movs
sbb
add
shl
pop
call
add
and
push
jmp
and
push
les
sbb
jo
fcomi
xchg
sbb
addr16
stos
movups
mov
into
mov
into
mov
mov
movs
add
cmp
mov
adc
mov
push
dec
sbb
push
mov
adc
xchg
xchg
mov
pop
mov
cmc
add
pop
pop
pop
dec
add
retf
xor
les
pop
mov
arpl
in
xchg
test
xchg
mov
mov
outs
nop
icebp
push
adc
xor
shl
adc
and
shr
dec
inc
ror
mov
hlt
ds
cs
mov
inc
(bad)
jae
push
scas
inc
out
repz
mov
mov
nop
pop
rol
pusha
jecxz
stos
xor
pop
pop
scas
pop
lods
inc
inc
mov
lock
and
pop
push
div
pop
rol
gs
add
add
add
rep
stos
xor
jmp
nop
mov
xlat
pop
adc
pop
and
mov
or
pop
mov
cmp
jno
ret
sbb
pop
in
mov
adc
fs
jge
jmp
das
shr
mov
stos
popf
lock
cmps
lahf
mov
jae
jae
push
mov
push
mov
mov
bound
adc
mov
xor
sub
rcl
mov
out
add
cld
call
inc
stc
or
jb
sbb
adc
adc
xchg
addr16
lods
xchg
xor
mov
inc
xchg
shr
das
adc
(bad)
adc
imul
xlat
stc
inc
es
mov
jae
pushf
sub
mov
sbb
mov
jg
icebp
xlat
pop
xlat
fcmovne
xchg
dec
or
arpl
int
ja
in
loopne
pop
(bad)
jnp
fcomp
add
cmps
mov
das
or
pop
(bad)
xchg
mov
fld
sbb
xchg
inc
xor
arpl
mov
jmp
lds
and
xchg
and
sbb
dec
pop
xchg
cdq
jno
pop
or
push
imul
pop
mov
arpl
jb
adc
xchg
sbb
(bad)
mov
xchg
ret
jo
aas
push
jno
push
jae
xchg
scas
daa
mov
addr16
retf
mov
cmps
xchg
inc
ror
test
sahf
xor
ja
jg
dec
push
push
or
ret
shl
cwde
cs
lock
xchg
dec
pop
sub
test
lock
popf
mov
xchg
adc
retf
cmps
sbb
repz
(bad)
adc
cld
shl
pop
push
add
sbb
add
out
mov
push
push
(bad)
push
je
outs
fld
xor
jb
sbb
adc
or
xchg
xchg
xor
adc
xchg
sub
into
xchg
and
sar
and
mov
or
pop
mov
cmp
jno
shl
and
push
jp
lea
ds
cmp
dec
repnz
pushf
add
xchg
out
call
ds
push
js
inc
xor
mov
retf
pop
push
popa
fdiv
ins
ror
adc
push
sub
retf
push
(bad)
std
lods
rcr
jg
(bad)
fdiv
sub
cli
dec
xor
mov
jmp
xlat
jmp
inc
mov
and
add
hlt
clc
icebp
mov
mov
mov
das
sbb
push
sar
scas
fdivr
dec
sub
mov
pushf
xchg
jnp
out
push
sbb
aas
fst
push
xor
jne
jle
out
pushf
cmp
add
out
nop
stos
fwait
lock
out
mov
icebp
aam
call
push
xchg
dec
data16
dec
dec
sub
mov
dec
jg
loope
sub
lock
lods
dec
xchg
aad
loope
bound
and
mov
jnp
add
icebp
js
mov
inc
out
jmp
and
dec
mov
jg
dec
push
push
movs
stos
mov
push
mov
xor
je
mov
iret
mov
push
js
mov
adc
aaa
and
clc
push
rol
mov
cmc
adc
cdq
bound
xchg
mov
xor
ret
ins
mov
add
push
repz
cmps
xchg
xor
int3
dec
test
push
pop
sub
pop
jo
out
gs
sub
push
lock
arpl
push
push
mov
adc
inc
in
shl
jg
test
ins
mov
add
add
hlt
fimul
sub
rol
mov
das
mov
pop
sar
mov
inc
and
rcr
jnp
and
jbe
push
push
popa
mov
xchg
icebp
sbb
sbb
in
pop
xor
dec
pop
rol
adc
mov
cli
pop
cmps
ja
rcr
mov
cdq
push
(bad)
jmp
in
in
mov
pop
pusha
push
inc
adc
das
cmp
inc
mov
ds
lds
push
rol
or
mov
sbb
mov
cs
or
push
outs
cmps
out
mov
cmps
(bad)
in
and
out
push
ret
stos
jnp
(bad)
cmps
inc
cli
sbb
and
jle
imul
mov
sbb
pop
push
cdq
movs
scas
ja
and
in
xor
add
repz
push
scas
mov
arpl
add
sbb
(bad)
das
ror
and
add
cld
dec
mov
xchg
js
xchg
dec
jge
scas
push
and
adc
jecxz
xchg
pcmpeqd
add
mov
shl
or
or
(bad)
mov
cli
mov
and
ds
cmps
ins
out
and
fdivr
cmp
push
in
jns
rcr
jg
iret
mov
mov
cli
mov
leave
fld
mov
add
and
pop
retf
mov
cmps
jl
enter
xor
and
xor
mov
aas
scas
mov
push
je
ja
imul
(bad)
pop
inc
(bad)
loop
sahf
dec
(bad)
imul
push
movs
int3
mov
xchg
js
sbb
cmp
sbb
aaa
scas
ins
popa
shl
(bad)
lock
and
popa
adc
sub
cdq
lods
sub
pop
add
jbe
jmp
movs
loop
mov
dec
xor
jg
lahf
adc
dec
(bad)
sbb
pop
sti
push
stos
inc
mov
cdq
mov
push
das
hlt
sub
in
mov
repnz
push
mov
mov
pushf
jg
adc
cdq
add
int
mov
mov
sub
inc
addr16
mov
leave
lea
xor
ror
xchg
cmp
out
dec
cmp
jg
cmps
bnd
add
mov
scas
and
repnz
mov
push
inc
scas
imul
sbb
mov
pop
inc
pushf
xchg
fst
pop
pop
cmp
fwait
sub
das
mov
bound
adc
scas
jae
mov
pop
pop
fcmovu
xor
add
jle
sti
or
in
mov
movs
loop
add
stos
jnp
repnz
push
inc
(bad)
mov
(bad)
std
imul
xor
xor
mov
jmp
xor
jmp
push
es
push
aaa
dec
data16
rol
pop
sbb
inc
or
add
adc
sbb
push
es
jmp
push
xchg
xor
inc
push
cmp
push
xchg
sti
add
sbb
test
out
mov
dec
jl
or
arpl
out
sub
sbb
sti
xchg
ret
das
xor
movs
mov
dec
xor
imul
shl
pop
mov
mov
cmp
mov
xor
ret
xchg
lods
add
pop
dec
sub
sbb
add
mov
fcmovbe
ja
xchg
cmp
add
(bad)
pop
fst
pop
test
mov
mov
std
aaa
shr
lods
jg
(bad)
push
stos
mov
push
xor
sbb
mov
jl
and
push
mov
popf
lea
icebp
(bad)
sub
dec
sub
adc
adc
jp
(bad)
out
test
jg
pop
push
add
loop
fiadd
adc
or
loopne
sahf
popa
pop
bound
sbb
ror
push
outs
mov
lahf
int3
stos
xlat
movs
jns
rol
sbb
cmp
test
stos
inc
push
mov
adc
add
std
jge
repz
mov
mov
mov
rcr
push
sbb
or
dec
jl
into
mov
add
ret
pushf
push
mov
xor
mov
aas
scas
mov
icebp
push
push
mov
stc
xor
pop
jge
push
jge
repz
shl
mov
mov
rcr
push
je
or
dec
inc
clc
into
mov
add
cmps
rcr
jle
xchg
mov
nop
mov
test
jmp
mov
push
push
push
or
cmp
shr
jg
xchg
adc
loope
sub
adc
bound
loopne
retf
test
jbe
pop
xor
add
inc
jge
or
mov
mov
push
sub
ss
mov
retf
jle
(bad)
jge
inc
xchg
xor
sub
test
jp
mov
and
mov
popf
lea
push
adc
loope
call
jae
loope
dec
mov
mov
sbb
inc
push
fnsave
jmp
dec
test
jmp
ret
mov
mov
inc
sti
repnz
mov
popf
lea
push
cmp
mov
jle
jge
mov
pop
adc
fs
xor
xchg
add
inc
jge
or
push
cmp
pop
aas
sub
ss
cmps
mov
ret
(bad)
xor
call
pushf
fldenv
int3
adc
jge
repz
or
mov
cmps
jbe
stos
inc
das
jecxz
mov
test
jmp
ss
sbb
jg
add
mov
jle
out
fbld
push
out
mov
jle
pop
nop
enter
pop
adc
call
outs
and
mov
pop
icebp
push
es
pop
leave
sti
rcl
fisub
push
inc
arpl
fld
mov
je
pushf
mov
mov
shr
or
cmp
inc
adc
lock
sub
scas
xchg
add
pop
adc
inc
add
scas
hlt
std
push
fs
push
les
jp
rcl
xlat
push
repnz
pop
(bad)
es
aaa
loopne
in
push
jge
in
movs
les
mov
mov
push
mov
in
es
cmc
ficom
push
fadd
nop
fs
aaa
not
outs
jg
dec
jmp
scas
lock
jp
scas
shl
pushf
imul
pop
pop
test
xchg
inc
push
jae
test
push
fild
mov
scas
xor
outs
jp
ret
std
icebp
inc
pop
push
sbb
mov
pop
adc
ja
lds
push
push
enter
dec
fist
es
ja
push
je
jge
adc
push
add
fistp
sti
push
cmps
pop
(bad)
movs
aas
in
xchg
push
out
fstp
fst
lahf
retf
mov
sahf
jl
(bad)
mov
aam
das
jecxz
sbb
push
add
(bad)
hlt
scas
push
(bad)
lahf
pop
push
ds
cmp
push
jle
loope
cmps
push
inc
shr
or
jle
xor
lock
mov
add
add
hlt
pop
sbb
push
xchg
dec
xchg
hlt
add
pop
push
mov
aas
ja
das
inc
xchg
test
jb
scas
shr
and
mul
es
push
and
sub
cs
and
ret
mov
jg
mov
cmp
cwde
lahf
imul
or
pop
adc
into
mov
dec
push
sti
xchg
aaa
jle
(bad)
inc
and
ins
mov
stos
mov
and
mov
test
bound
outs
xchg
into
dec
sbb
aaa
jle
lds
movs
add
jg
add
std
add
push
pop
pop
sti
push
pop
or
movs
and
push
lock
cmp
sbb
lock
add
inc
pop
pop
sti
enter
les
push
and
xor
cld
add
jno
pop
fst
or
ret
mov
mov
and
add
add
pop
or
lds
jne
mov
adc
scas
mov
sbb
test
xchg
std
pushf
and
sbb
outs
xchg
into
dec
sbb
aaa
shl
push
movs
cld
mov
xor
std
pushf
and
mov
pop
adc
into
jge
dec
push
sti
mov
movs
cld
mov
jecxz
std
pushf
ret
jnp
pop
adc
shl
cmp
test
dec
add
stos
push
and
les
pushf
xchg
mov
mov
pop
mov
adc
sti
mov
icebp
pop
cs
xchg
(bad)
dec
movs
aas
mov
xchg
stos
shl
mov
in
add
pop
test
std
jge
mov
movs
(bad)
mov
test
sbb
stos
sti
add
ja
push
out
pushf
xlat
pop
mov
outs
lahf
rcr
dec
sar
mov
movs
cld
mov
cmp
add
jg
xchg
fcom
cld
cwde
sbb
out
pushf
aaa
jle
shl
mov
mov
cmp
mov
xor
std
pushf
and
imul
inc
sti
push
dec
or
push
jnp
add
cmps
mov
in
mov
mov
sbb
adc
lock
in
movs
sti
sti
push
cmps
pop
and
movs
(bad)
mov
int
sbb
icebp
add
or
sti
test
movs
(bad)
mov
mov
or
jle
adc
icebp
add
xor
dec
in
pushf
dec
rol
movs
push
xor
ins
jg
sbb
shl
inc
inc
addr16
push
sti
enter
ret
movs
jns
push
mov
fisttp
dec
sub
mov
inc
dec
in
pushf
xchg
pop
xchg
adc
pop
mov
xchg
adc
scas
cmps
xor
mov
test
push
pop
pop
add
lahf
push
int3
jno
push
movs
lahf
dec
push
push
push
add
add
sti
mov
mov
mov
in
movs
and
ins
mov
xchg
mov
das
mov
mov
push
mov
pop
adc
into
jg
dec
push
sti
test
jle
shl
sbb
in
add
dec
fist
lods
ret
icebp
pop
cs
mov
fidivr
cmps
or
push
push
pushf
(bad)
jg
pop
repz
sti
stos
arpl
push
push
xor
mov
fild
mov
(bad)
xor
jle
adc
add
pop
ins
sti
inc
push
or
movs
jnp
push
lods
add
test
push
mov
jae
sbb
jle
or
push
test
dec
fist
pop
retf
cs
nop
neg
aas
add
das
sub
daa
add
pushf
pop
mov
or
mov
dec
iret
sub
mov
sti
bound
jg
scas
outs
sub
xor
sub
sti
mov
xchg
int
jns
push
push
and
sti
push
push
adc
mov
lock
jle
adc
arpl
add
in
movs
repz
push
dec
adc
mov
iret
mov
minps
inc
in
movs
sti
sti
push
cmps
adc
movs
(bad)
mov
xchg
cli
sbb
rol
mov
pop
and
movs
push
es
sub
sti
inc
jle
out
movs
jnp
ins
xchg
cwde
adc
jge
xchg
movs
(bad)
mov
sub
das
repz
add
pop
ins
sti
inc
dec
xor
jnp
push
repnz
popf
adc
sub
cmp
pop
popa
push
xchg
push
pop
(bad)
pop
mov
add
jo
cmp
pop
int
push
add
push
pop
pop
sti
daa
ss
dec
push
movs
cld
mov
sub
xchg
mov
pop
adc
mov
pushf
icebp
outs
fistp
pop
push
push
add
in
ins
mov
xchg
mov
(bad)
mov
xlat
push
hlt
pushf
and
stos
pop
popa
push
xchg
pusha
pop
mov
dec
jle
(bad)
icebp
pop
cs
xchg
dec
dec
movs
aas
mov
mov
shr
fadd
push
jmp
shr
pop
mov
lahf
shl
mov
xchg
pushf
jle
xchg
sbb
pop
mov
lahf
sbb
scas
lahf
xor
sub
in
add
nop
xchg
add
mov
sub
das
xchg
xor
mov
in
rcr
popa
scas
std
sub
add
mul
pop
pushf
mov
rol
addr16
pushf
mov
rol
addr16
pushf
mov
rol
xchg
pushf
imul
sub
jl
sbb
lahf
pop
mov
enter
popa
pusha
mov
sti
jns
outs
into
pusha
pop
add
mov
mov
shl
xchg
push
mov
movs
push
cmp
jcxz
push
addr16
push
add
mov
movs
out
mov
out
mov
pop
push
add
jl
out
lahf
dec
out
mov
(bad)
push
lds
(bad)
adc
cwde
add
push
sbb
aaa
lds
mov
add
in
ret
out
scas
xchg
pushf
sbb
adc
addr16
out
rol
ins
aam
adc
add
pop
or
mov
jnp
inc
push
mov
out
and
mov
adc
push
mov
mov
fwait
add
mov
push
mov
shr
add
push
out
test
mov
popa
jle
pusha
push
test
mov
xchg
add
pop
or
mov
shl
inc
mov
mov
loope
daa
bound
outs
push
xor
xchg
out
outs
rol
mov
sahf
add
or
iret
aaa
jbe
mov
mov
(bad)
mov
sbb
xchg
popa
push
xor
jl
out
pusha
rol
cmp
lock
nop
add
rcr
iret
aaa
inc
mov
add
in
test
mov
mov
(bad)
icebp
push
sub
fsubr
lock
push
test
mov
xchg
add
(bad)
dec
iret
aaa
js
mov
mov
mov
sbb
xchg
xor
jl
out
(bad)
rol
sub
lock
add
loop
iret
aaa
or
and
add
loopne
aam
and
lods
loopne
aam
and
add
loopne
aam
and
add
loopne
aam
and
lods
loop
dec
scas
mov
je
loopne
dec
setge
rcr
dec
clc
popf
arpl
pop
xchg
dec
aad
arpl
pop
xchg
dec
dec
popf
arpl
pop
nop
pop
ss
in
retf
mov
fcmovbe
jns
pop
push
leave
imul
push
mov
mov
sub
mov
call
sbb
cmc
mov
ror
(bad)
mov
pop
xchg
sub
retf
stc
bound
sub
xchg
and
cwde
int3
pushf
xlat
sub
mov
sub
adc
adc
jnp
add
mov
shl
cmp
call
test
xchg
arpl
arpl
push
repz
pop
mov
into
add
xchg
mov
pop
push
repz
out
fs
ss
push
addr16
das
hlt
xchg
mov
push
sar
out
mov
jg
push
mov
inc
fwait
add
dec
mov
test
retf
sub
and
aad
stc
out
aaa
mov
mov
pusha
hlt
aas
(bad)
pop
pop
adc
sub
pop
in
inc
retf
popf
push
sbb
scas
(bad)
imul
and
xchg
mov
fwait
std
ror
jno
div
xor
scas
stc
arpl
xor
add
div
push
push
xchg
cld
shr
mov
mov
dec
or
jo
fs
xchg
rol
daa
enter
mov
push
aas
shl
inc
push
inc
jmp
push
or
cmp
and
stc
aaa
retf
sub
or
sbb
sbb
sti
jge
imul
cmp
pop
mov
out
shl
jle
fld
sub
add
iretw
aad
movs
adc
jge
not
or
mov
jmp
mov
outs
cwde
or
mov
dec
push
dec
pop
das
pop
xchg
xchg
cmps
cmp
sub
add
sar
lea
dec
pop
das
pop
xchg
out
and
sub
add
idiv
sar
xchg
jo
sub
mov
pop
push
movs
leave
adc
(bad)
ret
out
je
mov
push
push
dec
mov
xchg
jae
in
add
cs
pop
inc
retf
mov
cmp
(bad)
jl
sar
addr16
push
call
inc
mov
and
add
clc
aam
in
and
xor
xchg
dec
ret
push
inc
cmc
loope
(bad)
jg
retf
aam
add
das
cdq
mov
rcl
lods
loopne
push
(bad)
mov
adc
pop
push
sti
mov
scas
inc
imul
jp
loopne
push
(bad)
adc
pop
adc
cmp
pop
cs
adc
fs
(bad)
push
pop
mov
pop
xor
cmps
add
xchg
popa
test
dec
add
jae
dec
pop
push
nop
scas
cmps
inc
lods
pop
(bad)
shr
rcr
ror
cld
jmp
mov
jge
push
mov
hlt
popf
adc
jle
fidiv
xchg
jae
ret
imul
adc
movs
xchg
mov
dec
mov
adc
gs
jo
neg
mov
sti
pop
mov
jmp
outs
push
jo
add
and
stc
add
sbb
and
and
pop
or
ja
hlt
cs
call
jle
jno
sbb
xchg
cmp
sar
test
sti
mov
mov
jns
out
mov
or
push
mov
xchg
out
pop
pop
retf
test
pop
shr
push
push
(bad)
mov
retf
cmps
fdivr
fidiv
and
mov
adc
sar
xchg
into
jp
(bad)
daa
pop
push
call
imul
mov
les
jmp
adc
jae
xchg
xchg
ds
dec
push
xchg
mov
push
(bad)
mov
jae
sbb
or
jmp
push
xchg
xchg
xor
push
add
jae
mov
daa
out
pop
lock
push
add
jmp
push
mov
xor
sub
(bad)
mov
jmp
pop
mul
xchg
scas
cmps
pop
mov
mov
shl
inc
cmps
loopne
fs
ins
mov
and
popa
pusha
addr16
ds
scas
inc
shr
cmp
mov
push
sti
lods
adc
xor
retf
movs
pop
mov
push
sub
push
push
xor
cmps
sub
push
mov
stos
call
aaa
fxtract
pop
loope
or
cmp
ror
sub
scas
call
pop
cmp
cwde
iret
test
aad
(bad)
shl
push
jmp
sbb
jle
aaa
mov
xchg
dec
rcl
scas
addr16
jae
aam
cmps
imul
cdq
xchg
jecxz
cmp
xor
cs
fmul
neg
add
cmp
jle
or
stos
sbb
xchg
xchg
stos
test
xchg
ret
outs
rcr
les
in
dec
(bad)
cmp
pop
div
adc
xor
lods
push
out
hlt
and
and
xchg
test
jp
(bad)
jb
and
pop
loope
add
gs
mov
bound
(bad)
outs
jb
outs
in
pop
mov
ins
or
push
retf
movs
xor
stos
dec
call
in
jnp
cmc
dec
pop
inc
jmp
fcmovbe
call
push
shl
xchg
or
push
test
or
into
fbstp
mov
neg
mov
cmp
outs
xchg
mov
leave
aaa
cmp
fld
test
sub
sub
sbb
mov
(bad)
cld
add
popa
pop
test
mov
leave
pop
shr
fdiv
lock
add
push
and
xor
iret
cmp
test
push
add
cwde
sti
xlat
(bad)
xchg
fild
cdq
std
clc
mov
pop
inc
push
outs
sbb
out
add
or
fild
into
sar
call
fwait
xor
js
(bad)
sar
add
mov
je
addr16
(bad)
jnp
cdq
(bad)
add
je
rol
cmps
mov
jg
hlt
fld
inc
dec
cmp
ret
jnp
adc
retf
out
mov
in
fcmovb
aad
(bad)
fstp
add
in
sar
out
xchg
mov
pop
push
iret
out
xchg
fst
rol
and
push
and
mov
into
or
les
sbb
je
mov
test
adc
clc
push
push
mov
xchg
hlt
mov
jl
xor
xchg
dec
pop
xor
xor
xchg
pusha
jb
movs
push
jo
loopne
shr
idiv
je
jle
or
test
mov
and
in
pop
xchg
mov
jne
dec
mov
fmul
ret
cmp
test
(bad)
jne
dec
fcom
sub
aas
mov
xchg
push
dec
clc
jns
xchg
sub
add
mov
adc
jmp
out
or
xchg
(bad)
aas
mov
icebp
clc
xor
je
inc
ror
adc
jnp
rcl
sub
mov
lds
mov
inc
stos
popa
adc
pop
and
push
xchg
jl
push
test
stos
dec
mov
cmp
pop
xchg
dec
mov
xor
and
xor
adc
fwait
mov
or
push
enter
iret
stos
scas
or
clc
das
daa
or
and
mov
fsubr
sub
push
mov
push
repnz
shr
push
dec
fdivr
into
and
inc
neg
mov
dec
pop
jo
pop
(bad)
loop
aas
mov
in
das
mov
arpl
mov
hlt
push
sbb
(bad)
idiv
add
pop
jecxz
lock
mov
nop
fild
mov
(bad)
mov
inc
rcr
cmps
lahf
adc
das
mov
fs
mov
xchg
ja
shr
rcl
mov
outs
mov
sbb
or
and
sbb
adc
bound
cmp
inc
jo
mov
adc
mov
xchg
jle
stc
bound
dec
sub
inc
stos
(bad)
mov
xor
adc
xchg
sti
cmovo
push
movs
xchg
ror
inc
push
push
push
mov
sub
pop
mov
retf
inc
call
mov
adc
sbb
add
inc
push
push
bnd
xchg
mov
je
pop
xor
mov
or
dec
popf
xor
xor
scas
sti
pop
loope
data16
icebp
int3
jmp
jle
add
sub
xor
aas
dec
xchg
aas
nop
jg
push
mov
enter
inc
ins
mov
xlat
(bad)
pop
and
mov
push
and
in
iret
xor
sub
loope
inc
push
xor
mov
icebp
push
pusha
pop
mov
iret
mov
push
adc
enter
push
dec
das
sbb
push
cmp
dec
aaa
lock
add
enter
inc
push
mov
js
test
fucom
xchg
mov
bound
cvtps2pd
xchg
xchg
dec
inc
movs
test
xor
cmc
call
push
mov
sahf
inc
sub
mov
push
ins
neg
ins
fstp
mov
add
inc
pop
pop
and
scas
push
jae
or
minps
pop
push
push
les
cli
sbb
std
fwait
test
mov
aad
or
dec
ret
ds
iret
retf
ds
mov
pop
(bad)
adc
retf
adc
pop
je
and
in
xor
jno
stc
jge
repz
jp
icebp
or
mov
data16
jbe
pop
sub
dec
cmp
imul
daa
and
cmp
mov
xchg
out
les
cwde
shl
pusha
mov
jmp
add
mov
movs
xchg
loopne
lock
aam
enter
push
adc
fs
push
mov
call
cmp
mov
test
push
dec
(bad)
mov
sub
sbb
xchg
mov
mov
pop
or
outs
not
cmc
pop
scas
arpl
inc
xor
mov
inc
test
jmp
shr
loopne
adc
pop
mov
push
xlat
xor
stc
ins
arpl
mov
lds
mov
nop
sbb
push
push
data16
stos
add
fild
mov
mov
mov
dec
mov
shl
retf
sbb
je
push
cmp
add
mov
pop
sub
js
or
clc
jl
fistp
stos
cmp
jno
sar
dec
add
loop
sbb
jmp
cwde
(bad)
mov
stos
out
gs
sbb
mov
push
jmp
sub
in
sti
push
mov
add
sbb
jecxz
pop
jmp
sub
movs
in
and
mov
xor
jl
aaa
in
or
mov
(bad)
popf
adc
loop
xchg
dec
das
(bad)
mov
test
loopne
test
lock
loopne
xchg
xchg
sahf
(bad)
jb
mov
cmc
xor
adc
xchg
or
stos
fwait
clc
mov
cmp
(bad)
adc
jns
push
sbb
inc
dec
ins
test
cli
xchg
popa
cmp
mov
xchg
jnp
dec
inc
pop
hlt
into
into
pop
mov
movs
pop
imul
jae
mov
out
mov
mov
ret
ror
imul
faddp
pop
push
out
mov
pop
inc
mov
je
xlat
and
push
mov
pop
lds
dec
push
pop
dec
jmp
sbb
int
sar
mov
cmp
int
jl
mov
or
mov
xchg
or
add
add
imul
pop
pushf
aaa
rcr
pop
popa
xchg
icebp
xchg
stc
adc
loope
imul
retf
dec
cli
adc
mov
adc
cmp
pop
sub
add
repnz
out
push
dec
jne
push
ins
call
popa
or
dec
lds
sahf
sbb
cmp
ret
int3
rol
mov
fld
fstp
dec
and
stc
fs
push
ja
out
ret
push
in
push
(bad)
cli
mov
(bad)
aas
inc
pop
pop
mov
pop
test
and
adc
int3
cmp
mov
sub
cwde
out
sub
out
out
push
adc
or
shl
sar
fadd
fwait
xchg
dec
gs
imul
mov
jmp
and
out
je
mov
out
out
adc
push
fld
(bad)
xchg
rcr
repz
arpl
push
out
lea
mov
mov
mov
or
sbb
sub
in
out
add
pop
in
rcr
mov
repnz
mov
stos
sbb
outs
jp
iret
into
sub
sub
adc
jno
repnz
ror
cs
psllw
iret
add
mov
sbb
clc
jg
and
sub
out
out
into
adc
and
jp
xlat
sti
not
pop
outs
lods
sbb
pop
lods
or
xor
sub
test
popa
add
ret
icebp
push
mov
fisttp
rep
rol
cmp
jmp
les
(bad)
rcl
pushw
lods
pusha
hlt
xchg
adc
or
fld
xor
sbb
out
sub
or
ss
mov
imul
dec
out
cmp
cmps
lods
lds
adc
adc
fist
leave
xchg
fs
dec
adc
mov
jle
xor
stos
sbb
and
sub
adc
push
push
mov
push
mov
(bad)
push
lods
popf
retf
loop
jmp
mov
xchg
dec
xor
jne
mov
iret
test
xor
jo
into
xlat
in
imul
(bad)
rol
or
cs
xor
fistp
ds
inc
into
xor
xor
frstor
into
aad
xchg
jno
dec
cwde
cmp
pop
push
ds
(bad)
jg
pop
(bad)
and
add
mov
cs
push
add
jb
stc
mov
js
or
int3
jmp
push
loopne
xchg
mov
ret
bound
pshufw
jae
and
hlt
out
xor
jno
mov
add
ret
dec
fs
das
ins
jbe
rcr
repz
pop
dec
mov
sbb
push
push
jns
data16
(bad)
xor
xchg
xchg
cli
sbb
jnp
mov
adc
add
idiv
aad
xchg
ret
div
fbstp
dec
add
mov
cmps
add
sub
test
xor
les
call
scas
test
shl
jg
imul
jp
mov
(bad)
or
mov
mov
test
loopne
xor
add
inc
mov
xor
inc
inc
ins
add
jge
jl
fidiv
inc
stos
push
iret
and
push
xchg
ja
push
ins
out
mov
add
push
push
imul
add
inc
mov
popa
mov
ins
push
inc
cmps
push
mov
inc
stos
ins
mov
test
ret
arpl
ins
xchg
ja
add
mov
adc
push
imul
add
inc
mov
fs
ins
push
inc
pop
jns
addr16
mov
retf
pop
enter
jecxz
adc
adc
xlat
test
lock
xlat
inc
mov
and
push
pop
aaa
ret
mul
ss
mov
push
cli
add
adc
sub
push
xlat
(bad)
fnstenv
cli
mov
sahf
dec
xor
inc
adc
adc
xchg
mov
mov
xchg
aam
xchg
(bad)
(bad)
sti
ficom
push
jae
and
and
or
or
push
mov
aad
into
jnp
int
push
jle
hlt
push
push
(bad)
arpl
mov
popa
xchg
jle
push
push
outs
xor
xchg
mov
mov
sbb
fs
add
pusha
sub
push
mov
sbb
(bad)
out
and
int
and
jecxz
rcr
mov
fs
lods
nop
in
(bad)
xchg
sub
jecxz
ret
mov
inc
lods
aaa
sar
xchg
dec
push
push
cmps
dec
pop
jbe
aad
and
add
mov
sar
jg
ds
xchg
fild
adc
adc
push
lds
scas
pop
in
xchg
sub
sub
test
mov
lods
mov
push
cli
lds
in
daa
(bad)
mov
jns
div
outs
pop
dec
pop
js
ret
mov
lods
push
std
push
dec
sub
or
out
(bad)
imul
(bad)
shl
out
cmp
inc
fwait
inc
inc
data16
mov
xchg
cmp
push
pop
cmc
pop
push
repnz
dec
xchg
jnp
jbe
and
pop
add
mov
inc
sahf
pop
dec
sub
test
aas
scas
or
inc
dec
and
(bad)
mov
mov
and
popf
enter
mov
push
ss
xor
sub
sub
jbe
mov
sbb
adc
and
mov
sbb
inc
xor
xor
mov
fiadd
inc
jmp
adc
mov
jg
pop
dec
scas
mov
aaa
jmp
dec
lods
jns
mov
xchg
mov
pusha
mov
fst
jae
xchg
mov
jo
jmp
or
gs
sub
sub
jb
ja
loopne
sti
mov
pop
gs
sub
add
and
pop
cmps
call
adc
stos
shl
pop
ins
je
mov
aaa
push
pusha
sub
xchg
jmp
clc
mov
rol
xchg
rol
bound
and
mov
push
jg
pop
mov
jnp
sbb
sub
sub
loop
push
cmp
gs
inc
loopne
sub
mov
popa
sbb
mov
ret
shl
test
out
pop
test
push
loop
aam
das
mov
leave
xchg
xchg
aas
stos
jbe
iret
pop
pop
shr
pop
ins
pop
jmp
mov
push
inc
pop
lock
mov
dec
mov
push
mov
iret
dec
mov
out
dec
outs
xor
adc
stos
pop
scas
aaa
adc
adc
div
pop
das
inc
fs
mov
fld
cli
enter
(bad)
adc
mov
arpl
inc
fild
stos
lds
push
outs
sahf
clc
sub
pop
mov
jmp
mov
imul
mov
fisttp
push
not
test
hlt
or
(bad)
mov
inc
jle
jb
push
mov
add
out
sbb
cmp
xor
dec
lahf
aaa
pop
in
hlt
aas
ja
push
(bad)
je
cmc
jg
aad
jl
and
sub
push
lods
adc
retf
add
pop
mov
mov
xchg
xor
xchg
xor
pop
pop
pop
je
fwait
cli
adc
(bad)
int
cmc
mov
pop
fwait
xchg
jle
arpl
xor
div
mov
cmc
test
loopne
cld
add
sub
lods
test
sbb
inc
loope
jnp
pop
fild
imul
inc
mov
cli
push
push
add
(bad)
mov
(bad)
jmp
push
das
xor
outs
arpl
adc
xor
sub
js
fwait
outs
aas
xchg
xchg
test
shl
dec
in
lods
pop
mov
dec
div
enter
xchg
mov
enter
mov
inc
xlat
cmps
mov
int3
ja
and
push
adc
cmp
xchg
sbb
push
push
push
shl
jnp
cmp
or
pop
jo
jno
(bad)
fs
cmp
or
lds
ss
ror
in
hlt
jo
dec
add
fs
cs
iret
test
mov
sub
and
mov
mov
push
hlt
(bad)
add
and
leave
jg
pop
out
and
fs
in
arpl
les
xchg
mov
les
adc
dec
leave
loope
mov
xor
mov
jns
div
inc
arpl
xor
mov
jb
pop
cmps
iret
loope
jl
push
xor
xor
pop
repnz
xchg
frstor
repz
mov
popf
inc
movs
lods
mov
push
jns
sti
xchg
jno
les
retf
jle
and
shr
aas
cdq
pop
lods
stos
sbb
jg
push
xchg
inc
es
mov
pop
push
pop
clc
arpl
data16
and
push
rol
or
xor
sti
test
mov
push
je
cmpxchg
xor
jnp
es
xchg
js
add
jno
lds
or
jmp
retf
das
pop
jle
in
xchg
push
pop
xchg
add
mov
str
cli
icebp
sub
outs
rcl
inc
test
cwde
rcl
pop
and
adc
lahf
add
cmc
xchg
ret
ins
or
sbb
int
add
lods
add
popa
xchg
cdq
fnstcw
ret
mov
dec
mov
scas
inc
js
xor
xchg
sar
mov
aad
arpl
scas
mov
sub
mov
adc
fisttp
mov
fidiv
bound
enter
jmp
jno
add
imul
dec
push
xor
xchg
pop
mov
inc
adc
add
cmc
in
sub
xchg
or
scas
jno
sub
and
xchg
es
cmp
mov
and
or
das
into
clc
scas
sub
hlt
or
mov
pop
dec
jg
mov
fidiv
retf
sbb
retf
cs
sub
jnp
mov
ss
mov
sti
mov
add
mov
and
and
push
pop
daa
lahf
xchg
imul
fstp
push
mov
push
bound
pop
scas
push
scas
sub
fisubr
jbe
out
iret
cmp
adc
fld
dec
not
adc
repnz
test
ss
ds
and
mov
mov
sub
mov
sub
iret
pop
cmc
in
es
imul
ds
or
retf
test
sub
jle
and
sub
mov
adc
retf
inc
xchg
adc
dec
out
and
xlat
or
mov
mov
ret
jmp
adc
mov
mov
pop
aas
retf
jne
inc
adc
sbb
or
push
sub
gs
lahf
add
push
and
mov
dec
sti
sub
pop
imul
or
in
aam
ins
dec
xchg
inc
sbb
cmp
ss
pop
sar
es
out
or
add
adc
outs
and
call
cmp
fisubr
daa
daa
fisttp
icebp
shr
mov
ret
push
or
sbb
jb
imul
xchg
fdiv
jb
test
repz
(bad)
cmps
std
jecxz
mov
push
mov
mov
pop
sbb
imul
popa
cmps
inc
out
add
mov
pop
xchg
mov
outs
cmp
dec
stc
and
or
out
mov
pop
xchg
push
icebp
out
push
push
sub
or
mov
and
push
mov
mov
mov
add
jle
ja
stos
fwait
xor
adc
pop
leave
push
xor
add
pop
fild
xor
pop
ss
movs
mov
inc
add
ins
pop
cmp
inc
stos
or
or
sbb
xchg
dec
xor
sbb
push
test
xor
pop
inc
inc
xchg
ss
push
sub
pop
rcl
scas
std
lock
mov
dec
cmps
ret
xchg
imul
adc
sbb
push
push
sub
xchg
push
cmp
push
pop
xor
dec
das
push
dec
and
jl
or
daa
test
xchg
ja
pop
cmp
sub
push
into
movs
inc
mov
addr16
int
mov
sub
sti
les
pop
sahf
jmp
test
cmp
push
jl
jle
mov
shl
push
mov
jbe
or
adc
fld
cli
push
sar
add
int
or
jmp
adc
dec
fidiv
ja
outs
rcl
push
(bad)
leave
sub
aaa
inc
outs
pop
adc
add
hlt
mov
mov
dec
add
pop
aad
add
mov
cmp
jp
inc
movs
xor
mov
jmp
out
xchg
out
mov
push
xchg
push
mov
loop
test
xchg
jmp
push
jle
pusha
pushw
xor
scas
out
(bad)
loope
jmp
push
stc
ins
imul
and
mov
add
imul
mul
mov
xchg
add
les
xlat
ds
movs
daa
rcr
mov
adc
push
mov
sbb
retf
jbe
rol
mov
xor
and
ret
sub
cmp
ret
test
call
push
pop
mov
xor
hlt
test
add
and
xchg
dec
sbb
push
push
lahf
in
stos
inc
push
and
cmp
add
push
xlat
mov
call
cwde
mov
ja
mov
imul
xchg
addr16
push
fild
dec
sbb
cmp
cmp
xor
fild
in
out
ror
repnz
aas
test
add
push
adc
jae
xchg
lock
addr16
es
popf
pop
lods
pop
jp
aaa
inc
mov
dec
cli
add
leave
xor
jo
es
or
not
push
loopne
adc
xor
lds
out
retf
and
call
or
ret
add
dec
ds
add
and
loope
sar
scas
mov
cwde
scas
fist
loop
push
push
and
and
jb
test
(bad)
rol
jge
mov
pop
imul
pop
jnp
test
int
add
xchg
out
std
jmp
xchg
aas
ret
pop
outs
ds
mov
mov
mov
int3
aaa
xor
mov
jae
dec
hlt
sbb
popa
push
call
push
cwde
sar
xchg
mov
hlt
ins
add
and
lahf
mov
sbb
popa
and
xor
cmp
jno
in
ss
add
(bad)
imul
adc
das
mov
xlat
push
cdq
mov
pop
repz
inc
out
adc
call
jmp
jmp
xor
call
inc
push
je
sub
pop
mov
inc
jbe
int3
push
out
adc
shl
jg
loop
je
loope
pop
(bad)
fbstp
int3
call
mov
ret
bound
fild
enter
ins
xor
mov
iret
pop
add
cmp
mov
xor
fcmovne
ja
stos
fcomp
pop
loope
addr16
jnp
hlt
test
mov
adc
(bad)
lods
mov
push
aam
pop
mov
push
xor
aam
mov
mov
sub
mov
stos
jg
sbb
mov
dec
push
pop
pop
neg
xor
int3
int3
push
loop
aas
jbe
xchg
das
or
sub
xchg
shr
rcr
into
cmp
(bad)
cmps
xchg
xor
mov
ror
(bad)
lods
push
cmp
mov
(bad)
aaa
stos
test
sahf
pop
jecxz
xor
int
inc
dec
sub
adc
push
inc
jle
outs
sar
ficom
xlat
pop
push
(bad)
xor
pop
push
push
add
arpl
xchg
sub
mov
ins
jbe
mov
and
cmp
sub
sub
adc
and
mov
push
pop
xor
and
jg
mov
mov
mov
out
cmp
sub
push
dec
fcmovb
inc
xchg
xchg
mov
inc
and
adc
jg
inc
pop
inc
push
cmps
js
inc
lock
jbe
push
cli
fldenv
or
repz
(bad)
out
mov
sysenter
and
add
sub
int
dec
mov
out
inc
and
mov
dec
push
out
ss
popa
scas
push
adc
jo
call
adc
fcom
jbe
or
xchg
xchg
scas
repz
data16
sbb
lar
pop
push
clc
add
xlat
fadd
sub
ins
push
push
add
fisub
cs
shr
sub
bound
repz
mov
mov
mov
add
cmc
jns
dec
inc
and
mov
into
xor
cmc
lds
mov
pop
mov
push
cmp
arpl
xchg
adc
daa
sub
inc
sub
and
push
shl
fldcw
mov
jnp
out
lds
add
xchg
scas
rcl
or
xchg
out
pop
scas
div
scas
ja
xchg
repz
stos
sub
mov
scas
add
icebp
imul
push
add
fmul
scas
call
push
scas
lahf
(bad)
call
adc
scas
sub
jle
out
push
mov
popw
retf
sbb
call
inc
mov
sub
sbb
pop
movs
push
add
mov
pop
jle
cmps
shl
hlt
and
inc
sbb
push
pop
int3
cs
mov
add
jnp
add
mov
or
push
ret
jecxz
mov
push
xchg
fcmovb
mov
sub
xchg
lahf
sbb
or
sub
inc
mov
jg
push
call
push
push
stos
fcmovb
or
lock
mov
in
repnz
cmps
mov
loop
xlat
add
push
sub
push
sbb
stos
mov
sar
mov
jnp
add
repnz
pushf
sahf
mov
jmp
dec
stos
push
sar
sub
add
pop
xchg
jecxz
call
xchg
mov
pop
jle
push
adc
pop
or
(bad)
xchg
inc
add
rol
clc
inc
pop
repz
xor
pop
retf
ror
push
mov
repz
sbb
push
inc
fiadd
and
add
into
shl
imul
repz
retf
out
xchg
fistp
ret
sbb
xchg
scas
ret
mov
add
shl
lock
outs
pop
data16
mov
jae
out
xchg
ret
pop
stos
sbb
mov
scas
cmc
xchg
scas
jmp
xchg
loop
pop
call
icebp
imul
arpl
and
mov
jae
pusha
push
(bad)
adc
cld
popa
push
jg
shr
mov
into
test
movs
shl
stc
sub
push
repz
movs
icebp
sub
and
mov
add
repnz
and
imul
or
mov
repz
mov
mov
ja
retf
xor
ja
ror
sbb
adc
pop
push
jle
jmp
mov
icebp
mov
push
iret
dec
sub
pop
aas
or
outs
ins
mov
xchg
adc
loopne
inc
jg
out
adc
test
retf
pop
push
xor
call
imul
mov
hlt
push
mov
iret
xchg
mov
cmp
xlat
aaa
mov
mov
cmp
aam
sar
adc
repz
add
pop
mov
add
cmps
xor
xchg
adc
xlat
aas
mov
mov
ret
test
dec
adc
push
lds
adc
dec
lods
movs
fistp
mov
fxch
jmp
xchg
outs
popf
and
fs
sub
ins
int
add
mov
xchg
mov
in
mov
adc
inc
movs
mov
cwde
adc
xchg
fadd
xchg
iret
and
push
xor
sbb
les
fsubrp
jns
(bad)
(bad)
mov
pop
pop
mov
cmp
iret
push
not
sbb
pop
push
and
je
shl
mul
retf
jmp
lock
jno
fidiv
fs
ss
into
repnz
sahf
adc
xor
out
mov
cmps
fwait
adc
lods
rcl
icebp
pop
cmps
and
mov
fisubr
fdivr
xchg
pop
adc
loop
iret
add
daa
mov
mov
pop
lahf
xor
mov
sahf
xor
jl
and
pushf
lods
sub
or
inc
fwait
imul
inc
(bad)
mov
data16
in
fs
dec
sub
arpl
xor
mov
add
push
sahf
cld
mov
push
lods
jl
loope
sbb
pop
mov
pop
sub
dec
popa
xor
adc
pop
push
scas
enter
cmps
icebp
sbb
sub
xor
jg
push
jbe
xchg
push
ins
aam
pushf
fcmovnb
pop
call
ins
push
mov
and
loop
inc
in
adc
fistp
cmp
in
and
dec
inc
push
lods
dec
icebp
pop
add
(bad)
sub
dec
mov
push
cmp
call
sti
xor
xchg
in
clc
jnp
movs
sbb
retf
arpl
mov
dec
pop
imul
cmc
push
fiadd
push
test
pop
gs
cmp
pop
pop
mov
jno
push
inc
fwait
test
mov
outs
aam
mov
daa
call
dec
out
sbb
push
das
arpl
pop
das
sub
lock
push
stos
scas
idiv
push
push
sub
pop
neg
jmp
imul
cmp
cmps
mov
shr
out
ret
ja
(bad)
sub
and
dec
push
adc
pop
add
add
outs
ficom
test
lods
pop
mov
mov
inc
call
(bad)
inc
pop
shl
sbb
inc
cmps
out
std
shl
mov
dec
mov
or
xchg
or
xor
aaa
jl
and
mov
aaa
push
out
xchg
pop
push
pop
adc
mov
retf
fcmovnb
(bad)
pop
stos
movs
mov
jle
popf
add
jae
adc
mov
jns
mov
cli
fs
inc
push
add
fisttp
scas
pusha
jg
inc
and
aaa
in
jno
jecxz
mov
pop
out
mov
xchg
fadd
jbe
push
popf
ror
ins
xor
fcomip
sub
adc
repz
cli
pusha
fdivr
add
sbb
aas
push
mov
pop
cs
push
repnz
sbb
and
push
sub
out
pop
ja
icebp
sub
jbe
mov
rcl
leave
xor
mov
adc
pushf
stc
retf
mov
mov
or
fwait
mov
mov
fs
push
lds
cmp
inc
pushf
pop
add
add
mov
mov
(bad)
jg
retf
aaa
sub
shl
adc
pop
mov
sbb
clc
lds
mov
enter
jns
test
and
test
adc
ins
jl
and
jmp
out
mov
sub
test
push
fimul
jo
sbb
mov
hlt
mov
push
inc
jg
sub
neg
je
adc
sub
sub
adc
(bad)
mov
imul
sbb
push
bnd
jl
hlt
xchg
dec
xor
push
arpl
mov
rol
xchg
mov
or
inc
stos
into
stc
pop
and
push
xchg
call
bound
pop
push
ror
scas
outs
ss
fsubr
rcl
sbb
rcl
mov
or
push
mov
add
loop
sbb
jp
shl
mov
inc
jmp
inc
add
aad
pop
cmps
mov
mov
test
cwde
adc
scas
sub
js
sub
imul
shr
(bad)
ja
or
dec
sbb
sub
outs
xchg
xchg
loop
pop
xchg
push
or
xor
mov
retf
xchg
sub
mov
(bad)
fs
stc
in
mov
mov
or
gs
bound
out
lock
shl
xchg
mov
push
dec
jmp
pop
xchg
mov
pop
adc
retf
mov
add
pop
sbb
inc
mov
imul
push
and
jle
outs
xchg
mov
xlat
jge
sti
mul
xchg
mov
les
fwait
lods
sbb
stos
mul
pop
xlat
sub
enter
and
scas
xor
shr
fidiv
xchg
outs
aad
div
dec
jmp
dec
retf
adc
and
pop
jb
xlat
mov
xchg
(bad)
das
add
sub
fiadd
xchg
movs
xlat
mov
xchg
das
shr
jae
xchg
mov
jno
mov
sbb
into
stc
adc
aaa
das
xchg
lock
jle
call
cwde
sahf
pop
mov
jmp
lea
jmp
scas
jmp
adc
jl
dec
scas
retf
pop
aaa
xchg
dec
push
mov
in
jo
fild
sti
jmp
lahf
push
push
xor
mov
ins
or
test
xchg
sti
cmps
retf
stos
in
cdq
jns
xor
jnp
cmp
ja
mov
inc
sbb
dec
lea
imul
loope
movs
push
add
scas
iret
aaa
dec
ret
lea
ins
imul
imul
or
(bad)
scas
cmp
sub
popa
(bad)
mov
sbb
cmp
pop
arpl
mov
jbe
and
inc
xchg
inc
adc
push
fisubr
adc
push
push
mov
dec
test
icebp
into
sub
inc
loop
mov
jne
(bad)
retf
pop
dec
ins
enter
pop
mov
aaa
pop
pop
sar
(bad)
jnp
cmp
mov
inc
push
pop
stos
xor
add
push
adc
pop
sahf
in
shl
jmp
sbb
add
mov
add
jae
pop
ss
repnz
add
inc
dec
(bad)
ret
mov
mov
push
retf
adc
adc
add
fistp
in
or
inc
xlat
cmc
push
push
push
hlt
xchg
cmp
pop
xchg
iret
jno
mov
adc
int3
cmp
cmp
sbb
ret
outs
xchg
lea
xchg
adc
loop
fisttp
rol
(bad)
in
setl
add
add
push
dec
xchg
pop
mov
outs
or
cmps
call
out
mov
not
push
leave
and
daa
jno
jecxz
mov
xchg
mov
cmps
les
sysexit
jmp
inc
sbb
pop
cmp
rol
mov
xchg
test
cs
jbe
inc
stos
jmp
push
scas
mov
dec
xchg
rcr
jmp
sti
icebp
dec
ins
out
inc
mov
dec
(bad)
xchg
mov
jg
xchg
inc
lahf
jns
xor
sbb
pusha
cmp
mov
mov
dec
jp
inc
ss
clc
sub
sar
stc
dec
inc
aad
iret
push
push
push
dec
push
cmc
cmp
pop
rol
adc
scas
and
pop
sbb
fnstcw
mov
sbb
add
repnz
inc
retf
stc
xchg
imul
aas
fisubr
or
movs
xor
stc
sub
jb
or
test
icebp
push
das
inc
inc
mov
and
icebp
jle
fild
mov
retf
push
test
movs
push
inc
jg
dec
inc
mov
retf
mov
mov
xor
xor
fwait
dec
push
dec
add
lock
mov
adc
jmp
push
inc
xchg
pop
push
in
push
mov
or
dec
adc
push
das
pop
pop
imul
inc
and
xchg
inc
in
push
xor
loopne
mov
dec
sbb
push
jmp
xchg
das
in
aaa
lods
sbb
jg
dec
sub
add
dec
pop
dec
dec
xchg
pop
das
in
sub
adc
cs
jecxz
inc
push
outs
sub
sbb
test
call
aaa
bound
outs
push
jle
imul
jp
shl
das
js
add
dec
and
mov
imul
mov
imul
popf
cmp
mov
push
push
jae
xchg
adc
pushw
addr16
or
mov
ss
inc
rcl
sbb
pop
(bad)
adc
pop
inc
push
retf
stos
cmp
add
pop
adc
cmps
inc
in
sbb
aad
shl
mov
or
adc
mov
sbb
ret
and
hlt
push
sub
daa
pushf
jb
stos
fist
push
cmp
ins
sub
stos
stc
or
xor
mov
push
mov
cmp
int3
add
inc
aam
sub
(bad)
loope
inc
iret
(bad)
cmp
and
sbb
addr16
adc
rol
scas
call
push
sbb
adc
movs
test
pop
lods
pop
scas
aaa
scas
cmp
push
cmp
repz
aas
xchg
and
shr
div
add
push
scas
mov
xchg
and
fistp
pop
rcr
imul
mov
inc
xchg
adc
outs
inc
shr
loop
inc
push
xchg
pop
adc
and
mov
pop
scas
das
mov
clc
xchg
xor
mov
outs
pop
push
add
stos
sub
hlt
mov
lds
scas
das
adc
mov
adc
icebp
mov
sub
push
data16
jne
push
mov
aam
das
in
xor
xchg
shl
test
scas
scas
and
xor
xchg
pop
jae
loopne
cmps
inc
mov
rcl
jle
mov
mov
sti
stos
stc
imul
cwde
xchg
jae
aaa
stos
pushf
push
push
jle
jno
lods
jle
push
es
mov
lods
mov
mov
sbb
sub
jg
stc
es
test
retf
popf
push
scas
iret
mov
inc
pusha
out
mov
xor
test
test
lods
pop
mov
dec
inc
sub
adc
and
push
lods
sub
inc
mov
xor
ins
jmp
mov
ss
adc
mov
pop
(bad)
pop
mov
cmps
xchg
aas
call
in
inc
jg
mov
idiv
movs
bound
mov
push
(bad)
inc
retf
inc
xor
jmp
inc
loopne
push
cmp
push
shl
sbb
mov
stos
mov
xchg
and
test
dec
or
xchg
adc
xchg
xlat
stos
inc
push
xchg
pop
sbb
jp
mov
jl
cwde
nop
jg
enter
stos
aaa
cmc
sti
inc
inc
xor
pop
sub
jae
xchg
inc
mov
xchg
lahf
jno
test
dec
dec
pop
shl
and
and
sbb
sbb
cmp
mov
sub
retf
icebp
push
shl
mov
xchg
ss
sbb
cmp
das
das
fdiv
addr16
push
jl
xor
sti
scas
or
stos
test
div
nop
jl
dec
shl
gs
dec
jecxz
push
pop
int3
pop
mov
jo
pop
or
cmp
enter
repz
inc
xchg
xchg
push
in
repnz
inc
retf
neg
mov
ins
push
jae
(bad)
mov
xchg
xchg
xchg
cmp
dec
fwait
xchg
int
movs
and
mov
scas
jg
mov
sar
pushf
rol
sbb
mov
jecxz
shr
std
inc
(bad)
fdivr
and
mov
dec
sbb
retf
scas
fstp
daa
xor
push
jg
jmp
dec
ss
(bad)
jg
pop
sub
jg
mov
das
pop
push
add
dec
sub
mov
pop
(bad)
mov
mov
push
adc
je
jmp
mov
mov
and
xchg
cmp
dec
xchg
pop
das
or
psrlq
mov
push
imul
ret
repz
sahf
pop
repnz
sub
mov
push
test
xchg
shl
(bad)
push
pop
das
(bad)
icebp
jg
scas
sub
push
das
mov
aam
push
call
ja
or
outs
xor
and
out
rcr
sbb
push
pop
jne
or
adc
cdq
into
push
not
aas
nop
push
mov
jae
push
xor
sub
mov
cmps
xchg
idiv
push
fwait
jmp
das
dec
push
push
lock
pop
ins
dec
rcr
jmp
xchg
push
(bad)
arpl
pop
push
inc
scas
jg
push
dec
je
dec
popa
fs
dec
stos
mov
xchg
or
jmp
add
add
jo
dec
stos
lea
fnstsw
in
pop
test
out
pop
sbb
xchg
ss
sbb
lock
sbb
add
push
push
call
mov
push
stc
inc
xchg
cli
mov
(bad)
mov
rcr
hlt
mov
pop
or
movs
cmp
ret
or
sti
into
mov
aaa
sub
xchg
jbe
pushf
sbb
sbb
adc
push
das
mov
cmp
mov
out
icebp
adc
mov
mov
test
adc
jae
push
mov
ss
push
pop
xor
mov
inc
shl
sub
xchg
xchg
push
ret
jecxz
mov
fbld
ja
push
inc
add
and
pop
xchg
xchg
jae
jecxz
push
mov
fwait
movs
push
push
add
sub
cmc
mov
jl
into
dec
loope
std
add
bound
ds
bound
adc
retf
add
xchg
sbb
xlat
test
imul
jle
sub
das
shl
cmps
shr
ja
call
xchg
adc
in
adc
pop
and
inc
cmp
sub
xor
adc
inc
xchg
icebp
sahf
inc
add
test
mov
mov
cmps
mov
jge
cmp
jl
lods
sti
fdivr
imul
dec
sub
iret
loopne
mov
mov
sar
cmp
sub
inc
mov
xor
dec
xchg
push
das
mov
fisub
push
sbb
push
repz
push
pop
and
shl
mul
push
and
fldenv
jl
pop
retf
pop
push
push
mov
mov
pushf
push
inc
stos
jecxz
push
fs
xor
cmps
add
mov
aaa
test
cmps
jmp
jge
mov
adc
push
sbb
les
mov
stos
enter
mov
pop
mov
aaa
aam
shl
jge
push
push
pop
mov
sbb
imul
mov
inc
pushf
rcl
push
mov
add
out
and
xchg
(bad)
sahf
mov
hlt
pusha
add
enter
mov
es
push
js
and
push
pop
outs
js
mov
ret
pop
scas
adc
inc
inc
jl
push
mov
mov
scas
daa
adc
inc
imul
arpl
das
pop
inc
lock
inc
sbb
rcr
punpcklwd
push
xchg
jns
repz
push
push
jbe
sbb
jl
pop
mov
jbe
ins
loopne
movs
lock
ret
mov
jae
push
ins
jnp
mov
jno
das
mov
pop
pusha
add
adc
dec
daa
mov
test
sbb
jl
dec
jo
bound
xchg
imul
xchg
push
jl
sbb
stc
sub
mov
sbb
mov
inc
mov
popf
icebp
push
mov
xchg
and
inc
sbb
rcpps
inc
sbb
dec
push
hlt
scas
arpl
mov
pop
movs
retf
cmp
dec
cmps
lods
push
xchg
pop
call
shl
mov
mov
add
retf
sbb
xlat
xchg
icebp
pusha
mov
dec
add
retf
scas
cmps
pop
out
icebp
outs
shr
and
inc
adc
dec
dec
mov
pop
in
data16
sub
jns
ja
pop
and
push
out
inc
pop
pop
scas
sub
neg
adc
sub
mov
je
adc
enter
mov
sbb
gs
pop
and
inc
cmp
cld
test
mov
adc
inc
xchg
sti
push
inc
data16
arpl
sar
jl
movs
cmp
(bad)
aaa
cdq
cwde
aaa
fwait
in
inc
xor
xchg
mov
cld
enter
dec
pushf
shl
movs
push
mov
adc
xchg
pop
and
inc
add
mov
xchg
mov
aam
adc
inc
ss
stc
push
or
sub
xor
add
cmp
mov
mov
push
cmp
mov
mov
adc
(bad)
test
mov
mov
aaa
xchg
dec
sub
push
add
inc
xor
fstp
loopne
popa
inc
ror
cmps
sbb
adc
retf
jp
hlt
inc
jo
pop
aam
mov
in
test
sub
dec
shl
ds
mov
icebp
shr
adc
adc
inc
repz
mov
sub
test
and
fwait
test
pop
and
dec
jmp
outs
sbb
sub
or
sub
test
push
mov
mov
jg
mov
mov
xchg
aas
jae
loope
scas
sub
jmp
shl
xor
adc
retf
adc
cli
shr
adc
shl
nop
dec
mov
inc
push
ins
enter
ins
pop
cmps
scas
fwait
xchg
mov
inc
pusha
add
mov
dec
loope
dec
sbb
cmc
or
inc
xchg
shr
pop
pusha
(bad)
cmps
imul
adc
and
repnz
mov
imul
shl
push
xchg
je
dec
movs
rcl
cs
dec
add
aas
loopne
test
mov
fwait
mov
call
mov
(bad)
sti
enter
ins
xor
movs
popa
in
mov
push
mov
adc
ret
mov
pop
stc
sbb
outs
rcl
bnd
xor
mov
cmp
outs
jns
sbb
xchg
into
and
mov
sar
out
call
mov
xor
je
dec
xchg
fld
clc
sub
jae
(bad)
xor
push
outs
das
leave
ret
inc
nop
fstp
push
lods
mov
imul
(bad)
pop
mov
mov
pop
inc
inc
test
pop
mov
cmp
pop
ins
jo
xchg
adc
mov
jg
mov
xor
dec
test
fsub
aaa
scas
cs
xor
shl
mov
rcl
inc
(bad)
in
mov
mov
(bad)
stos
(bad)
aaa
sar
or
dec
push
mov
inc
push
push
xchg
mov
fisttp
dec
xchg
test
test
mov
push
bound
pop
outs
add
movs
cmp
push
rcr
xlat
das
mov
mov
inc
retf
imul
(bad)
outs
cli
lea
xchg
and
or
adc
push
rol
pop
and
xor
fist
shl
mov
rol
scas
jg
xchg
fist
out
lahf
inc
stos
lahf
cs
push
ffreep
jg
xchg
ja
js
mov
mov
scas
fnstsw
mov
retf
aam
adc
repnz
test
push
cmp
out
(bad)
cmp
or
pushf
xor
sahf
idiv
push
stc
cmp
cwde
inc
jmp
dec
push
cmp
js
mov
mov
adc
pop
xor
hlt
jge
mov
jmp
jae
pop
jns
sbb
and
dec
cmp
mov
dec
push
sbb
out
aas
imul
xchg
inc
test
rcl
test
test
clc
mov
or
retf
stos
pusha
xor
ret
mov
push
xchg
sub
je
mov
scas
lahf
adc
loopne
ret
pop
call
xlat
(bad)
fstp
lods
push
call
mov
sar
dec
inc
fsubr
mov
xor
shl
push
dec
fimul
or
movs
inc
xchg
rcl
lock
lods
add
cmp
add
add
add
fsubr
mov
xor
movs
imul
dec
fimul
or
movs
inc
cwde
xchg
sahf
push
mov
ret
in
pop
int
sub
ds
pop
int3
dec
jle
add
pop
hlt
cli
push
fisub
ja
loope
mov
push
das
int3
ja
and
(bad)
mov
add
addr16
fidivr
and
sti
xlat
sbb
ss
add
xor
adc
mov
fcmovbe
rcr
mov
test
inc
pop
outs
daa
or
mov
call
int
mov
mov
or
push
jl
mov
mov
sbb
mov
push
jbe
and
jle
sbb
or
mov
sub
pop
mov
mov
add
test
icebp
pop
imul
pusha
ins
icebp
cmp
hlt
sbb
pushf
fdivrp
loopne
or
inc
std
in
jle
(bad)
mov
mov
fadd
pop
nop
mov
dec
movs
sbb
sub
rcr
pop
das
loop
pop
and
leave
(bad)
(bad)
xchg
xor
shl
hlt
xchg
lea
movs
dec
ds
ror
loope
loope
in
dec
mov
popa
std
inc
adc
jbe
test
mov
xlat
lea
jmp
push
scas
cdq
lea
cmp
test
pop
fldcw
sub
ds
(bad)
jmp
out
jns
movs
sub
mov
cwde
and
add
add
inc
jae
push
push
inc
sub
jge
xor
inc
jle
fcomp
push
iret
sub
xchg
faddp
push
xchg
je
cmps
(bad)
shl
inc
fcmovne
lock
rcl
pop
das
xcrypt-ofb
cmps
test
(bad)
pop
lahf
jbe
cs
ffree
hlt
out
jg
mov
loop
mov
sub
jmp
out
shl
fimul
push
inc
scas
cmovp
push
(bad)
xchg
inc
scas
popa
popa
sahf
jmp
jg
movs
ss
les
(bad)
aad
pusha
fdiv
sub
inc
mov
xchg
out
push
pop
retf
or
sbb
jp
jle
popa
sub
mov
jae
hlt
rcr
mov
mov
pop
icebp
outs
inc
or
scas
popa
rol
cwde
xor
sub
mov
mov
push
fcomp
add
mov
out
pop
jno
mov
or
je
fidiv
sub
or
test
push
cmps
xchg
mov
inc
jg
lock
popa
je
mov
cmp
ja
mov
test
xchg
ja
mov
xchg
pop
lahf
into
ins
cs
ret
hlt
xchg
jg
mov
or
mov
sub
sub
xor
lock
clc
in
sub
or
push
out
dec
fisttp
mov
xchg
xlat
push
les
pop
das
jge
icebp
ss
call
jb
or
jecxz
pop
ja
xchg
je
pop
gs
out
cwde
fwait
das
or
ins
popf
ret
push
sar
push
dec
mov
mov
mov
ins
outs
in
mov
loop
jne
sub
add
jno
ret
in
not
and
icebp
sbb
sub
inc
in
aas
push
and
int
jnp
mov
push
xchg
mov
add
loope
jne
int
enter
stos
jbe
out
rol
mov
movs
aam
mov
sub
pop
adc
icebp
cmp
jne
aad
push
sbb
rcr
sbb
pop
add
push
shl
mov
test
fisttp
shl
jp
aam
cmp
push
jb
scas
sbb
push
ja
xchg
scas
jge
pop
sar
xchg
and
cli
dec
cmp
sub
int
loopne
and
ins
lahf
push
pop
add
repnz
repnz
rcr
add
inc
test
mov
add
movs
mov
bound
je
mov
repnz
cmp
(bad)
sbb
push
mov
ss
clc
jno
mov
and
inc
icebp
and
jne
in
mov
mov
xor
sub
push
int3
push
inc
add
(bad)
imul
lods
and
pop
xlat
cli
mov
mov
mov
pop
cmp
sar
idiv
sub
inc
cmp
stos
retfw
arpl
ret
dec
xchg
xor
fcomp
popf
push
test
call
dec
and
cli
fcom
loope
mov
icebp
add
pop
jle
scas
pop
cmps
mov
aaa
xchg
bound
push
push
mov
mov
mov
xchg
inc
das
xchg
repz
popa
pop
jl
mov
mov
push
out
sub
shr
repz
das
sbb
mov
mov
mov
je
hlt
mov
cmp
jnp
add
neg
mov
and
inc
ret
mov
outs
xchg
iret
(bad)
mov
call
jno
mov
mov
das
mov
push
cdq
ret
stos
mov
xchg
mov
mov
ror
inc
pop
mov
pop
aaa
sub
jmp
inc
push
(bad)
sbb
shl
jno
les
mov
adc
cmp
dec
push
mov
imul
push
sbb
jl
addr16
stc
ror
xchg
add
mul
pusha
popf
jmp
xor
mov
adc
jmp
mov
ins
mov
mov
(bad)
fst
pop
push
sar
aad
sbb
int
(bad)
jmp
jge
sub
mov
and
(bad)
fcomi
sbb
sbb
dec
and
ror
dec
test
push
jg
jae
pusha
stos
ja
push
mov
inc
mov
or
and
cmps
adc
xchg
and
pop
ret
arpl
lahf
jl
shl
cmps
mov
das
add
stc
aas
xor
add
dec
sahf
mov
mov
loope
(bad)
movs
popa
scas
es
rol
addr16
ja
dec
jecxz
mov
stc
xchg
push
movs
jns
sub
daa
mov
sub
xor
pop
jne
iret
outs
lods
sbb
or
leave
popa
js
mov
jg
sub
pop
bnd
stos
adc
adc
inc
xchg
test
retf
out
xchg
hlt
not
aaa
or
call
into
adc
mov
jnp
test
leave
out
stos
sbb
fist
in
xchg
sub
ret
xor
lods
push
loopne
push
popa
sub
mov
cs
out
(bad)
(bad)
icebp
pop
daa
cmc
mov
and
cmp
arpl
push
pop
bound
pop
cmps
neg
dec
shr
ins
fwait
or
sub
inc
sub
and
jg
jne
loope
ret
inc
push
or
in
mov
retf
push
add
mov
xchg
jecxz
fs
jmp
mov
out
mov
bound
push
or
adc
pusha
push
cmp
rol
xchg
lods
test
xchg
(bad)
pop
xor
call
sbb
rcl
das
push
add
jp
add
or
fwait
sub
shl
mov
or
push
addr16
dec
jmp
dec
imul
loope
icebp
dec
(bad)
enter
add
test
jno
loopne
jb
jle
test
push
or
xchg
sbb
dec
adc
dec
pop
rol
and
mov
inc
xchg
lods
sahf
sbb
push
inc
call
and
xor
out
inc
fist
mov
pop
push
push
xor
es
into
jl
in
mov
or
imul
leave
stos
es
nop
sar
jge
retf
dec
data16
cs
mov
mov
cmp
daa
mov
clc
xchg
imul
stos
pop
mov
mov
mov
das
or
cwde
mov
inc
fs
into
pop
adc
(bad)
push
neg
mov
adc
inc
pop
out
pop
shl
outs
cdq
cwde
into
outs
dec
jp
add
mov
push
sub
nop
xchg
xlat
push
push
and
mov
ret
xchg
mov
jne
scas
in
setge
aas
sub
dec
xchg
or
mov
scas
pop
pop
aam
push
dec
sar
push
mov
movs
mov
ins
dec
or
ror
push
loop
dec
sbb
div
outs
rcr
add
dec
stos
mov
push
pop
jmp
mov
add
pop
ins
pusha
fst
ins
pop
arpl
adc
scas
dec
pop
lock
and
out
mov
add
fld
ffreep
ins
into
dec
pop
sbb
test
pushf
call
adc
xor
cs
fild
and
lock
loop
daa
hlt
mov
sbb
call
xor
pop
ret
push
pop
sbb
pop
push
adc
pusha
hlt
dec
mov
xor
cmps
cmps
jb
cmp
inc
(bad)
mov
into
clc
sub
ret
ret
ins
cmc
fdivrp
fnop
in
mov
jecxz
or
int3
(bad)
sub
repnz
pop
mov
test
dec
cmp
sti
cmps
dec
stos
iret
stos
fcom
aas
xchg
dec
add
inc
mov
push
mov
imul
cmp
fiadd
fwait
das
jle
sahf
les
repz
shr
xor
rol
mov
sbb
xor
adc
fwait
addr16
(bad)
call
inc
sbb
imul
cwde
int3
test
test
call
mov
out
jg
jne
mov
push
add
inc
test
xchg
add
or
push
out
dec
cmp
mov
pusha
push
dec
retf
jecxz
imul
jg
pop
stos
mov
dec
push
icebp
cli
bound
mov
adc
xor
lds
add
mov
pop
retf
adc
dec
mov
jge
stos
arpl
(bad)
stos
or
or
pop
add
fnstenv
pushf
and
jne
xchg
jnp
inc
jmp
sub
push
and
xchg
js
pop
jmp
mov
push
xor
lods
je
jo
std
inc
xor
cmp
mov
das
das
dec
sub
xor
das
(bad)
retf
popa
mov
cmp
sub
icebp
cld
push
jg
push
lock
mov
cmp
pop
mov
fld
and
xchg
cmp
mov
mov
ja
ss
mov
lods
jno
cli
rcr
in
pop
icebp
and
xor
cmps
and
fistp
sbb
xchg
retf
xor
addr16
mov
outs
adc
enter
mov
sub
jge
sbb
cmc
mov
scas
rol
stos
popa
lods
pop
(bad)
into
fst
int3
call
xchg
pop
cmc
sub
xor
arpl
call
push
sbb
mov
out
xchg
arpl
mov
cmc
mov
jecxz
(bad)
xchg
ins
idiv
das
mov
push
pushf
rol
xchg
idiv
push
(bad)
dec
mov
aad
(bad)
sti
mov
pop
jg
pop
mov
sti
and
mov
push
scas
arpl
repz
inc
cwde
cmp
add
fdiv
icebp
mov
(bad)
adc
ins
and
jle
push
jmp
gs
push
(bad)
pop
mov
adc
test
in
mov
sti
ror
jle
jecxz
push
loope
ins
jl
sbb
add
(bad)
addr16
aam
scas
pop
shl
sahf
pop
test
daa
sub
xor
fistp
xchg
rcl
mov
ret
push
aad
push
scas
sub
nop
retf
out
push
cmp
fmul
mov
mov
in
out
loope
and
test
mov
or
mov
jg
mov
stc
mov
shl
js
or
aaa
sub
ror
pop
into
pop
lods
popf
push
xchg
add
imul
sar
jecxz
mov
cdq
jno
or
out
icebp
jp
test
lods
fiadd
jno
or
xchg
sbb
jmp
adc
mov
jg
or
and
xchg
leave
mov
loopne
ja
push
fdiv
adc
inc
push
repnz
out
retf
xor
loopne
cli
pop
test
push
cdq
xchg
add
imul
inc
out
cmps
xchg
push
ja
sub
(bad)
mov
push
out
sbb
retf
pop
or
fwait
test
mov
dec
ss
pop
aaa
mov
loop
sar
mov
jmp
and
or
stos
sub
mov
adc
dec
or
add
pop
call
push
(bad)
inc
xor
mov
leave
lea
xchg
out
xchg
inc
fdiv
sub
pop
jns
sub
cmp
retf
and
mov
jns
adc
xchg
(bad)
cli
repnz
inc
call
int3
and
pop
and
or
xor
jg
pop
fidiv
(bad)
fdivr
push
mov
fucomi
ja
xchg
adc
scas
cmp
test
xchg
cmp
lods
sbb
mov
adc
jmp
pop
test
sub
rcr
push
dec
(bad)
fld
push
into
adc
jg
inc
sub
mov
shl
stos
mov
adc
pop
xchg
pop
mov
in
mov
mov
add
lods
aaa
sar
sar
pop
mov
push
push
and
adc
or
imul
je
cmp
push
shl
push
adc
pop
ja
loop
mov
das
pop
adc
in
xchg
mov
addr16
ret
mov
xchg
retf
fcom
pop
xchg
sbb
scas
jecxz
mov
mov
jecxz
push
bound
add
ret
out
lods
jg
jecxz
adc
fmul
inc
je
xchg
(bad)
mov
fwait
dec
xchg
pop
bound
ret
xor
xchg
adc
mov
pop
sti
sar
sub
sub
test
test
or
xlat
scas
xchg
stos
fistp
or
mov
ret
stos
lods
dec
loop
mov
mov
mov
or
jecxz
xchg
mov
add
hlt
jg
add
rcr
mov
mov
das
sbb
xchg
jnp
mov
lds
sbb
into
stos
sbb
pop
retf
loopne
push
arpl
mov
pop
push
(bad)
adc
pop
lods
jnp
xor
gs
vmovq
hlt
push
sbb
ja
hlt
xlat
adc
adc
mov
mov
ret
push
jecxz
push
bound
sbb
(bad)
cs
adc
fs
stos
sub
cmps
cmp
add
xor
ja
ja
jge
mov
mov
mov
arpl
into
sbb
sbb
inc
mov
inc
add
stos
inc
loopne
sbb
pushf
mov
jecxz
mov
sub
xor
add
or
lock
jl
add
pusha
sar
je
mov
je
ret
jmp
sub
inc
jp
lock
mov
push
das
dec
jne
lods
iret
ds
inc
dec
bound
add
pop
(bad)
loope
mov
mov
aaa
ret
pop
dec
mov
addr16
sub
test
imul
js
xlat
jae
and
pop
lock
jl
jle
pop
sub
dec
lahf
sbb
and
sub
push
gs
ret
fwait
dec
jg
mov
arpl
daa
cs
lahf
sbb
int3
fs
mov
(bad)
icebp
push
and
mov
mov
cs
(bad)
jnp
sti
adc
inc
dec
add
pop
sub
arpl
cmps
data16
mov
clc
je
fcmovnb
adc
(bad)
shr
cli
outs
bound
inc
jmp
call
xchg
pop
es
hlt
loop
pop
adc
fdivr
test
nop
sar
adc
das
pop
adc
ror
inc
repz
les
jns
jnp
jbe
add
sbb
adc
or
or
xchg
mov
inc
fistp
push
loopne
addr16
push
cmps
xchg
adc
rcl
data16
pop
or
ret
sub
jmp
push
test
jecxz
pop
cmps
xchg
mov
stos
aas
inc
stos
sub
icebp
mov
pop
inc
repz
scas
fwait
sbb
into
xchg
arpl
bound
xor
jmp
loope
(bad)
mov
icebp
inc
ins
pop
into
pop
dec
int
push
loope
fild
inc
jb
int
(bad)
ret
loope
push
pushf
and
(bad)
push
jnp
push
jle
push
dec
call
popa
sub
scas
mov
pop
cs
jbe
add
out
pop
jmp
sbb
popa
push
(bad)
sbb
jae
cmc
pop
and
mov
or
cs
pop
cmps
aaa
push
jg
out
pop
xchg
inc
lahf
cdq
sub
push
scas
stos
fld
cdq
lods
inc
sub
enter
mov
sub
mov
mov
jp
adc
xchg
push
sbb
int
out
mov
out
out
push
push
mov
and
pop
out
dec
inc
xchg
sub
xchg
rcr
ror
movs
jle
fisubr
call
push
inc
and
pop
sbb
fldz
mov
out
in
sub
cld
ss
out
cmps
dec
push
inc
push
clc
fdivr
(bad)
mov
mov
push
push
and
movs
js
push
int
inc
xchg
scas
mov
cmp
outs
lds
mov
test
fcmovu
and
mov
fs
dec
jge
xchg
xchg
or
ja
cmp
xchg
dec
fidivr
sti
clc
push
push
xor
(bad)
ins
xor
lods
push
push
xchg
fnsave
not
xchg
cld
mov
jecxz
sub
mov
mov
mov
push
mov
jecxz
pop
xchg
loop
dec
test
xlat
add
and
cmps
div
dec
mov
inc
inc
xchg
add
adc
fucomi
aad
jle
and
std
pop
pushf
push
or
sbb
hlt
das
arpl
jne
(bad)
sub
inc
inc
mov
fstp
mov
(bad)
xchg
add
add
shl
sub
ret
adc
sub
or
fcom
push
mov
fst
inc
data16
jae
add
add
xchg
inc
mov
push
sbb
dec
mov
test
sti
sbb
and
retf
fidiv
sub
das
cli
aas
cmp
es
ret
and
add
fiadd
jle
push
xchg
fwait
gs
shr
je
lods
scas
mov
cs
add
loopne
pop
pop
js
mov
pop
arpl
mov
shr
fnstcw
mov
pop
(bad)
mov
add
arpl
in
xchg
hlt
inc
xor
nop
or
sahf
xchg
dec
jg
inc
or
pop
aas
add
sbb
stos
bnd
jp
and
dec
adc
or
or
ss
cmps
jg
sar
push
pop
lods
pushf
sbb
xor
in
retf
mov
pusha
jl
cs
je
dec
xchg
mov
out
and
out
lods
(bad)
mov
mov
add
mov
sub
retf
daa
pop
sbb
push
sub
jge
mov
inc
or
push
sbb
hlt
and
enter
aad
jp
pop
inc
cmp
stos
imul
push
pop
cli
sub
imul
or
or
jo
mov
jne
pop
or
and
faddp
mov
inc
add
push
or
pop
adc
add
add
jle
fdivp
pop
sub
adc
idiv
sub
push
cwde
fst
ret
mov
dec
out
(bad)
push
push
fiadd
inc
scas
call
adc
rcl
pop
push
pushf
mov
jg
push
lods
ja
inc
leave
and
movs
test
sbb
out
icebp
push
cmps
or
mov
push
jle
xchg
out
mov
movs
enter
xchg
dec
retf
pop
fs
adc
icebp
cs
inc
mov
dec
test
push
fwait
jnp
push
mov
cld
xchg
movs
imul
jns
or
sbb
sar
jne
mov
mov
pop
(bad)
inc
push
outs
mov
and
add
std
icebp
loope
or
lahf
sti
cdq
xchg
popa
mov
mov
arpl
out
test
inc
daa
xchg
mov
pop
add
xchg
int
mov
add
cmp
test
dec
and
repnz
jo
leave
in
pop
xor
adc
pushf
(bad)
or
mov
dec
mov
jg
dec
out
je
sub
les
mov
imul
sub
cmp
jecxz
jbe
mov
fwait
xchg
sahf
(bad)
out
sub
ret
test
repz
jg
in
call
add
pusha
sub
(bad)
rol
ss
pop
xchg
into
repz
jnp
mov
or
jp
(bad)
ja
pop
mov
dec
jbe
push
push
das
fldcw
inc
jg
push
push
les
stos
iret
out
in
xor
out
sub
sub
mov
daa
into
imul
loopne
push
cmp
add
leave
in
rcr
sbb
push
into
pop
inc
xchg
test
xor
cmps
leave
loopne
pop
inc
shr
daa
mov
ja
mov
inc
idiv
rcl
pop
call
and
jnp
arpl
popa
cmp
cmp
pop
jecxz
ret
push
rcl
push
and
push
mov
xchg
push
not
jecxz
mov
int3
sub
dec
shl
cmps
das
sbb
inc
or
push
pop
jle
pop
mov
mov
cs
add
mul
mov
dec
fist
dec
jno
mov
imul
test
cs
push
xchg
scas
aas
mov
data16
lock
cmc
sub
fmul
test
inc
sbb
scas
icebp
push
sti
sub
data16
(bad)
sub
mov
lods
xchg
lods
add
jecxz
cs
je
and
push
lods
xchg
int
pop
jae
xlat
jl
retf
scas
scas
movs
sbb
dec
xchg
cmps
loopne
and
inc
dec
test
adc
sub
mov
mov
push
sar
arpl
scas
push
sub
pop
push
sbb
and
and
inc
pushf
ins
ret
ja
(bad)
shl
mov
jnp
add
repnz
mov
sub
sbb
add
movs
push
add
mov
xchg
jp
xchg
mov
ja
fld
call
call
add
sub
pop
push
dec
sbb
dec
sar
adc
inc
int3
mov
outs
inc
inc
clc
imul
(bad)
cmc
lea
push
ss
fwait
ja
mov
pop
outs
retf
js
lea
and
sar
adc
mov
cmp
popa
mov
out
retf
lahf
movs
shl
call
icebp
ret
in
or
push
shr
jl
mov
out
inc
jb
jne
and
adc
and
and
(bad)
(bad)
retf
scas
add
adc
(bad)
xor
fcomip
pushf
sub
cdq
aaa
jnp
sti
xlat
and
jg
jmp
jns
das
inc
into
and
xchg
dec
dec
inc
cwde
mov
sub
and
add
into
test
push
ja
hlt
(bad)
scas
xchg
pusha
nop
jae
stos
pop
and
mov
das
repz
mov
addr16
lock
mov
stc
inc
mov
mov
mov
ss
and
pop
sbb
addr16
jmp
or
mov
pop
addr16
sbb
push
push
ret
jbe
neg
and
pop
cmp
aaa
outs
dec
sub
xor
aad
retf
cli
cli
out
stos
pop
push
mov
xchg
or
jl
lds
scas
dec
outs
mov
ret
mov
fs
repnz
push
inc
mov
loopne
retf
adc
mov
iret
fwait
push
mov
pusha
mov
icebp
idiv
sub
mov
lods
xchg
xchg
daa
sbb
sar
pop
jg
xchg
push
dec
adc
or
leave
sti
shl
add
cmp
and
loope
int3
xchg
sub
mov
sbb
clc
sub
stos
aaa
inc
(bad)
jmp
jae
outs
movs
movs
lock
mov
jmp
mov
shr
inc
xor
cmc
jge
retf
test
daa
xor
loopne
fxam
shl
cli
sub
clc
or
ror
test
push
and
cmp
adc
push
mov
loope
shl
pop
xchg
fistp
mov
call
mov
jbe
push
or
mov
int
mov
ja
pop
cmps
mov
fild
mov
cmps
dec
fiadd
xor
das
mov
adc
outs
addr16
loope
in
or
adc
shr
stos
adc
xchg
and
add
dec
mov
loope
rcr
aam
cmp
cmp
pop
les
fcomp
fsub
sub
aam
mov
test
imul
push
and
scas
pushf
or
dec
xchg
cmp
mov
push
sbb
std
inc
movs
hlt
fdiv
sub
mov
mov
xchg
lock
ins
not
push
cmp
mov
cwde
push
ret
fucomi
jo
sub
sti
jno
mov
shl
push
push
test
lahf
push
int3
les
stos
jo
into
(bad)
mov
imul
pop
push
nop
pop
mov
mov
jp
ror
call
clc
arpl
dec
and
sbb
inc
data16
mov
repnz
aaa
mov
cmp
mov
fistp
fsub
mov
stos
das
jle
bound
loop
lahf
cli
fild
mov
fld
inc
(bad)
ss
jp
mov
push
jmp
aaa
jp
xchg
push
mov
movs
fwait
sub
xchg
dec
xchg
mov
rcl
out
retf
dec
cwde
xadd
out
xchg
into
ror
jp
pop
push
cmc
stos
mov
div
push
icebp
mov
push
mov
stc
mov
pushf
aaa
jae
push
cmp
pop
cwde
dec
sar
mov
push
ds
loop
sub
paddd
mov
ror
mov
fs
jp
inc
call
iret
mov
jp
fstp
jle
mov
and
and
mov
call
push
and
mov
add
sub
aam
jp
push
xchg
and
cwde
stc
sub
ss
jg
or
sar
xchg
pusha
push
jp
and
inc
push
cwde
inc
jae
mov
mov
aam
mov
mov
push
jmp
cwde
xchg
push
and
inc
pop
xor
adc
cmps
dec
cwde
mov
xchg
iret
sub
es
leave
push
inc
jp
ret
push
aas
pop
frstor
mov
mov
sbb
lds
and
mov
das
jp
mov
push
jmp
aaa
jp
xchg
push
ret
in
fwait
sub
fs
xchg
mov
rcl
mov
out
(bad)
sub
inc
push
mov
push
xchg
js
dec
push
loop
dec
cmps
mov
pop
and
mov
aas
mov
inc
mov
fwait
das
jae
icebp
jmp
xchg
xor
cmp
(bad)
ds
test
(bad)
push
cwde
adc
mov
jg
mov
aaa
lahf
mov
or
mov
pop
stc
out
lods
cmps
push
push
cmp
fld
mov
pop
pop
or
cld
dec
cmp
cdq
pushf
loope
scas
mov
jmp
adc
mov
pushf
stos
push
dec
jp
push
add
xor
mov
in
jae
xchg
push
retf
sbb
test
test
dec
xchg
lds
push
lea
jo
das
push
outs
jmp
and
into
mov
add
jo
push
cmp
fbstp
mov
sbb
jp
add
test
mov
push
inc
mov
adc
jae
fucomi
addr16
xor
mov
addr16
adc
rol
cmp
mov
ja
jbe
inc
or
cmps
or
div
fld
adc
push
sbb
test
sbb
xlat
jbe
pushf
call
push
xchg
mov
cwde
xchg
push
sbb
inc
xor
ret
enter
les
movs
mov
cmp
mov
fwait
mov
and
inc
xchg
div
jp
xchg
push
out
out
mov
mov
pop
cmp
jp
mov
or
jo
fsubr
push
pop
pop
ret
mov
jge
jae
jmp
(bad)
sub
dec
xor
lahf
mov
fwait
xor
xchg
jl
cmp
xchg
out
ds
int
pop
fcmovu
xchg
mov
(bad)
push
lea
adc
xlat
mov
and
cmp
retf
xchg
in
mul
(bad)
push
mov
out
mov
sahf
mov
outs
cmp
retf
jecxz
add
pop
mov
mov
push
add
mov
fwait
sub
idiv
mov
inc
mov
scas
pop
cmp
xchg
fwait
xchg
mov
push
mov
sub
pop
nop
sub
cwde
xor
icebp
mov
xchg
hlt
pop
jae
fcmovnbe
mov
pop
cmp
(bad)
mov
(bad)
cmp
gs
pushf
pop
pop
cs
shr
and
sub
sahf
jecxz
lds
adc
and
fnstcw
mov
fwait
aas
das
scas
dec
inc
and
pop
xchg
pop
mov
push
push
std
lds
(bad)
loope
cld
aaa
das
aad
aaa
mov
push
je
das
cwde
ret
inc
mov
sub
mov
push
or
mov
push
jp
mov
fwait
pop
jae
or
jmp
jp
inc
outs
(bad)
cli
movs
retf
stos
push
ret
jae
pop
cmp
mov
scas
push
das
shl
mov
std
(bad)
psllw
cmp
mov
mov
adc
mov
aas
outs
adc
add
loopne
push
sub
jno
loop
js
ds
out
mov
add
sub
aam
jp
push
xchg
pop
xor
out
out
aaa
das
lods
addr16
mov
push
stos
lea
cwde
ret
sti
mov
adc
xor
retf
xor
das
dec
(bad)
in
mov
pop
bound
mov
int3
stos
sub
adc
pop
and
push
and
mov
xchg
mov
(bad)
mov
inc
cmps
jo
jnp
mov
xor
and
cmp
mov
movs
mov
sbb
and
mov
lds
in
lea
mov
mov
popf
out
cmp
jg
sbb
(bad)
stos
(bad)
lds
push
mov
setno
aam
sub
cwde
dec
out
xchg
sbb
push
test
das
inc
inc
js
cmp
adc
push
movs
xor
xchg
(bad)
out
mov
repnz
arpl
mov
div
mov
mov
in
mov
and
push
jmp
mov
add
sar
out
jle
scas
jo
mov
mov
test
cmps
mov
xchg
sbb
movs
or
xchg
jmp
pop
sub
push
pop
fst
jno
(bad)
ja
inc
(bad)
xchg
push
push
sub
push
jp
ds
xor
mov
inc
das
mov
addr16
sub
aam
sub
cwde
test
adc
push
mov
sub
pop
inc
js
adc
add
retf
sub
sbb
cwde
daa
mov
inc
mov
adc
inc
push
cwde
add
jne
mov
(bad)
mov
inc
mov
add
jae
retf
jmp
xor
xor
and
mov
push
sub
sbb
cmp
ins
jp
push
cld
ja
sub
xchg
lock
inc
xchg
mov
aad
or
loope
or
call
push
imul
jmp
enter
into
aaa
or
stos
cld
or
sub
in
jbe
jp
mov
ins
pop
das
shl
push
push
cmc
lea
cwde
ret
adc
retf
mov
ret
mov
mov
div
mov
mov
sbb
pop
add
mov
jno
iret
mov
pop
mov
rcl
bound
mov
inc
in
(bad)
int
mov
jbe
bound
popf
push
inc
in
or
arpl
xchg
lock
pop
jp
fsubp
imul
pop
je
pop
push
mov
xchg
pop
fnstcw
jecxz
xchg
mov
mov
xchg
aaa
das
dec
fs
mov
push
or
int
jmp
sub
mov
jno
loopne
das
sub
icebp
mov
icebp
xchg
ret
mov
jp
mov
push
ss
push
cmp
pop
cwde
out
mov
retf
mov
retf
js
jb
adc
mov
mov
retf
jae
adc
push
retf
mov
out
inc
and
dec
mov
sub
test
ins
add
or
cmp
mov
out
xchg
gs
retf
dec
cwde
pop
sar
xchg
into
in
jp
jmp
call
mov
pushf
stos
sub
sub
mov
daa
xchg
out
mov
push
push
pop
ret
jno
cwde
sub
dec
xchg
mov
div
push
mov
jae
jge
mov
pop
mov
inc
mov
add
jo
not
add
sub
cmp
sbb
mov
ins
shr
movs
or
sub
std
dec
mov
enter
xor
jno
shl
cdq
fs
mov
mov
push
xchg
int3
xor
xchg
stos
out
xchg
sub
xor
xchg
les
loop
xchg
jp
das
std
mov
mov
push
add
inc
sbb
sub
push
icebp
mov
push
xchg
repz
jp
mov
test
jae
push
cmp
xchg
fwait
push
push
mov
push
mov
pop
sub
xor
cwde
jmp
push
sub
push
mov
jnp
mov
fwait
jnp
push
mov
sbb
mov
add
cmps
data16
mov
inc
popf
cmp
pop
scas
inc
fimul
sbb
xchg
or
cdq
sub
mov
leave
sbb
cwde
dec
out
xchg
(bad)
adc
push
xchg
lea
cwde
retf
sub
push
inc
js
cmp
jg
or
iret
mov
adc
cmp
(bad)
mov
in
stos
jo
or
mov
pop
pop
sbb
cwde
pop
mov
pop
mov
inc
push
pop
int
imul
cmp
sar
or
sahf
ja
jno
pop
js
inc
pop
dec
retf
xchg
loopne
or
enter
mov
cmp
rol
fisub
ret
(bad)
dec
ins
pop
dec
sbb
adc
add
das
push
ret
jmp
mov
xchg
into
(bad)
or
push
push
and
xchg
fwait
test
out
xchg
ret
jp
ds
mov
mov
inc
das
mov
pop
xchg
sub
xlat
jnp
mov
lods
sbb
cwde
daa
cmp
or
adc
inc
push
jle
sub
les
jae
push
cmp
pop
cwde
pop
sar
mov
fwait
ds
fidivr
cwde
mov
push
inc
jmp
mov
jge
pop
dec
sbb
int
pop
repnz
and
movs
fwait
xchg
js
scas
mov
mov
xchg
ins
sti
pop
cli
test
cld
jnp
xchg
cwde
in
xchg
dec
idiv
mov
add
mov
push
add
loope
jp
mov
fwait
sub
idiv
mov
push
xchg
mov
pop
mov
xor
in
jo
or
mov
mov
retf
xor
jo
mov
mov
pop
dec
mov
out
aas
jg
xor
lahf
out
daa
test
test
cs
mov
into
in
hlt
jmp
mov
jmp
dec
scas
ins
add
les
addr16
sahf
or
and
retf
inc
pop
sbb
imul
bnd
repz
mov
out
ret
mov
mov
push
add
loope
jp
loopne
(bad)
mov
aad
bnd
push
push
std
imul
jmp
push
jp
mov
add
jo
mov
mov
pop
jmp
push
cwde
mov
mov
ret
mov
jp
pop
(bad)
jp
mov
push
xchg
mov
and
add
adc
jo
sub
and
ret
jl
aaa
ret
xchg
add
pop
push
pop
fmul
jp
rcr
scas
xor
push
gs
lods
ja
loop
sub
data16
in
sbb
loopne
pop
xchg
add
bnd
push
push
push
(bad)
cwde
imul
icebp
in
mov
xchg
into
aam
jp
push
push
jae
xchg
fwait
jg
mov
retf
xchg
lods
stos
push
jp
adc
sbb
cwde
imul
mov
mov
mov
jp
mov
dec
idiv
mov
inc
mov
mov
pop
add
inc
jp
mov
cwde
jmp
scas
sub
pop
or
ds
ins
xchg
jmp
scas
std
popf
std
dec
xchg
imul
loop
push
(bad)
mov
push
cli
push
leave
xchg
inc
sub
sub
jbe
pop
arpl
mov
nop
bound
sub
pop
cmc
mov
push
(bad)
jg
cwde
mov
out
xchg
sub
lock
mov
in
inc
adc
ret
ins
mov
fwait
ja
scas
out
inc
and
pop
xchg
mov
push
push
cs
fstp
xor
and
(bad)
mov
movs
stos
jo
or
mov
pop
les
push
cwde
mov
scas
data16
push
pop
cdq
lea
add
sub
out
xchg
jl
cmp
in
out
and
rol
push
cmp
jp
fsub
fbld
ret
jnp
sbb
movs
out
mov
mov
and
pushf
out
pop
sbb
adc
sbb
mov
push
xchg
xor
mov
loop
push
call
mov
mov
cmp
jp
ret
jnp
mov
fwait
das
das
xchg
movs
int3
popf
out
xchg
pop
fcmovu
jnp
cmp
mov
mov
in
aaa
das
inc
push
es
pop
sbb
xchg
fwait
pop
push
mov
push
mov
inc
adc
sub
cwde
xor
dec
mov
sub
lods
aaa
jae
push
mov
fnstcw
mov
sub
enter
ja
sbb
pop
xor
lea
xchg
leave
aam
mov
and
mov
adc
cmps
stc
out
(bad)
or
jecxz
cwde
sub
push
dec
xchg
mov
rcl
mov
out
(bad)
sub
jl
mov
push
xchg
adc
mov
jmp
imul
and
push
push
jp
push
push
pop
or
cwde
movs
mov
or
cli
xchg
pop
sbb
rcr
mov
mov
mov
mov
in
jo
pop
out
mov
pop
sub
mov
sub
jg
add
mov
xor
push
mov
stos
pusha
mov
jnp
cmps
out
sub
ret
jnp
mov
mov
das
je
(bad)
and
cmp
mov
call
add
mov
fwait
sub
icebp
xchg
jmp
rol
out
sahf
sub
repnz
aaa
jp
xchg
push
xchg
in
fwait
sub
mov
xchg
mov
rcl
jo
dec
mov
jo
sub
mov
pop
(bad)
les
jp
adc
sub
cwde
xor
push
mov
xchg
fcom
jae
inc
sub
add
jp
enter
push
inc
jmp
xor
fwait
std
rol
sbb
pop
or
sbb
scas
sub
push
fnsave
lock
out
pop
xchg
sbb
loopne
pop
xchg
mov
push
push
bound
cwde
adc
push
loopne
mov
aaa
push
jg
adc
retf
inc
stos
sub
sub
mov
push
lods
and
adc
ret
push
nop
and
cwde
adc
pusha
jmp
or
mov
inc
(bad)
jo
mov
mov
es
lock
mov
daa
mov
retf
adc
jbe
cwde
jnp
push
adc
and
out
popf
jmp
inc
mov
lock
xchg
xor
in
mov
xlat
clc
js
retf
adc
xchg
aas
cdq
sub
mov
pop
adc
fwait
xor
jmp
sahf
test
call
mov
sub
push
cmc
mov
push
(bad)
std
push
cwde
mov
lock
sub
sub
cmp
sub
dec
xchg
mov
sar
retf
xor
out
mov
mov
mov
pop
push
cwde
mov
mov
push
xchg
jo
xor
imul
aas
inc
inc
cmp
fisttp
movs
(bad)
mov
pop
hlt
jmp
jmp
sub
aaa
xor
scas
mov
movs
or
in
sbb
rcr
in
jnp
das
jno
jnp
mov
add
das
rcl
mov
push
push
add
pushf
shl
out
xchg
test
ins
popa
mov
push
xchg
xchg
mov
lock
out
inc
das
push
fucomip
mov
or
push
push
fisubr
pop
sahf
test
xor
adc
(bad)
mov
xor
and
test
inc
adc
dec
xchg
mov
pop
mov
mov
inc
out
mov
rcl
jae
rol
push
sub
jp
leave
mov
push
add
mov
je
out
jmp
cwde
icebp
pop
bound
xchg
cmps
clc
xor
test
(bad)
push
jmp
sub
xor
ret
enter
imul
add
das
xchg
mov
mov
push
add
mov
cwde
sub
cmc
ins
pop
mov
out
xchg
sub
aam
sub
cwde
pop
mov
or
inc
xchg
pop
xor
rcr
mov
pop
sbb
adc
(bad)
mov
lods
stos
jo
or
mov
pop
rcr
add
shl
dec
mul
repnz
jl
sbb
movs
dec
dec
retf
dec
cwde
data16
enter
xchg
push
inc
jp
jp
push
mov
adc
ds
lea
cmp
pop
hlt
cdq
mov
pop
int
xor
fcom
mov
mov
in
sub
sub
and
jp
mov
and
das
lods
dec
nop
mov
push
xchg
add
mov
fwait
sub
in
mov
xchg
enter
retf
xor
jae
mov
mov
pop
call
mov
ret
mov
jp
pop
xchg
fdiv
cmp
test
mov
push
sub
and
sbb
or
enter
lahf
clc
sbb
jp
dec
sub
sbb
bound
pop
cmp
lods
movs
jle
add
push
mov
sub
cmp
cmp
inc
js
ins
xchg
jg
or
sar
xchg
into
or
imul
push
cwde
addr16
mov
sbb
sub
sub
xchg
out
iret
cmp
push
jp
fwait
dec
mov
sub
int3
sub
mov
pop
sbb
xchg
fwait
aas
push
mov
push
mov
mov
mov
pop
scas
scas
nop
repz
dec
xchg
pushf
stos
jge
sub
jg
or
ins
outs
test
and
je
push
fist
cmp
inc
bound
movs
popf
cmps
cmps
enter
mov
sbb
mov
addr16
mov
xor
xchg
add
mov
inc
ss
pushf
addr16
mov
push
fisttp
mov
out
xchg
into
jge
jp
ret
push
call
push
cwde
addr16
mov
hlt
stos
sub
xlat
jnp
mov
fwait
(bad)
jo
push
lds
loope
jp
mov
ret
mov
mov
mov
dec
mov
jnp
mov
mov
jo
imul
push
jp
push
add
fwait
adc
adc
cs
mov
idiv
repnz
fcmovnb
outs
mov
adc
and
cmp
pop
mov
mov
push
sub
loop
mov
push
push
push
cwde
adc
push
mov
mov
scas
xchg
into
xor
jp
push
push
adc
xchg
fwait
pop
push
mov
retf
xchg
lea
mov
xchg
sub
aam
jp
push
nop
retf
and
jmp
or
mov
inc
sahf
jo
dec
xchg
mov
pop
add
inc
jp
mov
cwde
sub
push
into
mov
sbb
mov
mov
push
fcom
jp
pusha
pop
cs
movs
retf
out
lds
out
mov
mov
add
(bad)
adc
aam
xchg
(bad)
hlt
cmp
test
sub
jl
fnstcw
mov
fwait
addr16
xchg
mov
xchg
pop
mov
push
xchg
inc
xor
out
out
aaa
das
dec
fs
mov
push
or
das
cwde
ret
imul
xchg
nop
push
or
add
jecxz
fwait
div
mov
mov
aaa
cmps
sub
add
jo
add
out
mov
mov
pop
in
xchg
fwait
xchg
pop
mov
push
mov
sbb
pop
pop
lds
retf
scas
inc
(bad)
pop
jle
add
mov
gs
mov
ds
pop
sti
pop
pop
sub
push
dec
lods
inc
cmp
int
das
repnz
test
rcl
pop
mov
sbb
mov
jnp
pop
push
addr16
mov
int3
stos
sub
sub
mov
movs
out
mul
sub
mov
push
xchg
mov
mov
push
jmp
inc
or
inc
xchg
push
push
stos
out
mov
mov
pop
sbb
adc
(bad)
mov
lods
stos
jo
or
mov
pop
cld
sbb
cwde
pop
mov
pop
mov
add
cwde
ret
inc
aas
sbb
fwait
adc
call
pop
stos
test
addr16
pop
jae
cs
(bad)
ror
xor
inc
adc
(bad)
sbb
xchg
loope
xor
cmps
jge
gs
xlat
rol
clc
cwde
imul
mov
mov
adc
iret
adc
ret
repz
fwait
daa
sub
pop
inc
and
pop
xchg
jb
bnd
pop
push
pop
cmp
fwait
inc
das
mov
les
das
cli
fs
mov
push
jge
das
cwde
ret
stos
mov
retf
mov
call
div
mov
mov
je
adc
lock
out
inc
jae
pop
jmp
in
add
jmp
call
hlt
cmp
gs
jmp
int3
arpl
jmp
fsubr
aaa
sbb
push
pusha
ds
jmp
sub
push
retf
jmp
mov
xchg
into
ja
jp
push
push
retf
fwait
out
pop
mov
retf
xchg
retf
jp
ds
xchg
add
push
push
mov
das
xchg
sub
xlat
jnp
mov
mov
adc
hlt
call
mov
pop
xchg
dec
mov
imul
inc
js
fdivr
mov
pop
or
xchg
fwait
clts
mov
push
mov
xchg
adc
xor
or
lods
stos
jge
sub
pop
add
fs
jge
jl
in
fidivr
lock
xor
push
jp
xchg
into
add
adc
(bad)
pushf
jmp
sub
icebp
mov
icebp
xchg
(bad)
mov
lock
out
xchg
sub
sub
xchg
loop
aaa
jp
xchg
push
in
in
fwait
sub
ins
dec
xchg
mov
rcl
mov
out
(bad)
sub
dec
movzx
pop
(bad)
jg
cwde
mov
mov
push
nop
jo
pop
into
mov
and
mov
sar
lock
(bad)
out
ss
out
mov
pop
xchg
xchg
xor
cmp
out
push
or
popa
dec
jb
rol
jae
pop
jp
jne
add
add
push
adc
frstor
adc
pop
jp
jne
sub
jmp
sbb
mov
inc
jns
mov
sar
push
sbb
clc
inc
js
mov
mov
pop
cwde
scas
add
and
xor
(bad)
fst
mov
lock
in
sub
aam
jp
push
nop
sbb
cwde
adc
js
mov
jg
shl
stos
out
out
jo
mov
mov
es
lock
cwde
add
xchg
pop
cmp
ffreep
jnp
fwait
aaa
sub
push
push
mov
movs
push
fldenv
mov
shl
test
push
or
out
(bad)
stos
mov
adc
aam
mov
and
cmp
inc
nop
add
sahf
repz
mov
je
sub
jge
mov
push
push
ret
stos
fwait
sub
retf
sub
push
icebp
mov
push
xchg
cmc
mov
lock
out
cmps
sub
aas
jmp
dec
jp
stos
push
(bad)
adc
push
jp
ds
fwait
add
fwait
div
mov
mov
push
mov
and
push
jmp
add
add
popf
push
out
(bad)
jl
or
test
test
jl
popf
push
dec
lahf
retf
mov
jbe
fnstcw
push
xchg
xchg
push
pop
jecxz
add
imul
adc
retf
stos
push
jp
ds
stos
add
dec
push
mov
out
xchg
jle
jl
mov
push
push
js
fwait
mov
out
jmp
aad
mov
jmp
xchg
test
inc
jp
mov
pushf
adc
adc
mov
cwde
dec
sar
mov
push
ds
call
jo
mov
mov
dec
stos
sub
jg
jo
arpl
fs
mov
mov
mov
jp
dec
jl
ret
imul
mov
lock
pop
fld
add
fst
jno
sbb
bound
add
pop
add
out
es
pusha
jmp
aaa
jp
xchg
push
stos
in
fwait
sub
lods
dec
xchg
mov
rcl
out
retf
dec
cwde
pop
sar
xchg
into
jmp
mov
dec
mov
mov
je
adc
jnp
mov
push
jmp
fnsave
cwde
xchg
push
lds
out
mov
cmp
pop
adc
mov
xor
mov
test
fdivr
pop
jnp
or
mov
adc
rol
scas
mov
mov
cmp
scas
push
mov
(bad)
jl
aaa
adc
inc
xchg
aam
bnd
push
push
cli
imul
jmp
or
push
push
jecxz
xchg
fwait
iret
pop
mov
retf
xchg
jge
push
jp
xor
sbb
fwait
adc
mov
mov
ror
stos
sub
aam
mov
mov
fwait
aas
jae
in
jmp
jp
xchg
pop
cmp
rcr
mov
mov
shl
mov
int3
fs
jo
imul
push
jp
sbb
push
adc
sbb
dec
push
stos
out
mov
jnp
aad
push
lea
push
mov
icebp
movs
loop
push
xor
sbb
xchg
mov
jp
shl
loopne
push
adc
cwde
xchg
sar
xchg
into
pop
or
ds
sti
add
sbb
mov
not
sub
cwde
(bad)
mov
hlt
xchg
jo
sar
push
pop
ret
xor
mov
daa
mov
inc
mov
cwde
aaa
sar
mov
cli
ds
adc
jo
mov
cmp
sub
jp
inc
inc
(bad)
mov
and
pop
dec
mov
dec
push
mov
add
sub
jp
inc
mov
add
das
sub
rol
dec
push
push
movs
and
imul
jbe
jp
xchg
push
or
movs
fwait
sub
aaa
dec
xchg
mov
idiv
das
mov
pop
xchg
sub
aam
sub
cwde
pop
out
xchg
enter
adc
xchg
and
fwait
xchg
jo
xor
mov
jo
dec
mov
jo
pusha
loopne
out
pop
and
test
inc
and
(bad)
mov
cmp
jo
aam
aas
sub
cmp
arpl
movs
dec
leave
ja
cwde
out
sub
fisttp
pusha
int
mov
pop
mov
cmp
fnsave
push
adc
div
repnz
cwde
inc
mov
hlt
xchg
mov
repz
or
in
inc
jae
call
jp
push
push
sub
xchg
fwait
mov
mov
mov
mov
jbe
aas
mov
pop
mov
cwde
sub
dec
xchg
mov
sar
retf
xor
out
div
or
mov
hlt
mov
cmp
pop
push
xor
js
mul
dec
das
and
cs
jp
jp
mov
movs
xchg
and
mov
sahf
rcl
imul
mov
and
clc
or
mov
lahf
je
sub
mov
push
out
enter
mov
add
das
in
add
loope
jp
mov
fwait
sub
idiv
mov
push
xchg
mov
pop
fimul
mov
push
mov
mov
push
test
outs
xor
icebp
mov
icebp
mov
xchg
ins
pop
jae
push
mov
mov
imul
out
ss
enter
mov
in
lods
mov
jne
xlat
lock
or
xchg
scas
sbb
rcr
outs
and
ret
repnz
fwait
aaa
das
scas
push
inc
and
pop
xchg
das
mov
push
push
es
cwde
imul
shld
sahf
mov
pop
cwde
sar
out
xchg
into
pop
or
rcl
repz
div
mov
mov
test
and
xchg
adc
dec
xchg
mov
pop
aam
das
cwde
dec
int
retf
jmp
mov
or
cwde
adc
inc
test
es
bts
add
std
lock
jb
stos
jg
push
scas
xchg
or
jo
lods
ja
mov
js
sub
in
sub
mov
push
add
outs
jp
mov
sub
sub
pop
cmc
mov
push
jmp
push
cwde
mov
mov
in
sub
sub
push
mov
push
xchg
mov
pop
push
das
cwde
ret
mov
out
mov
es
pop
lock
push
cwde
add
int
mov
(bad)
mov
inc
mov
add
jae
add
mov
lods
xor
dec
into
mov
test
and
dec
inc
sub
pop
dec
mov
jnp
out
jg
mov
movs
xchg
aam
mov
and
lods
imul
mov
push
mov
cs
int
mov
fs
pop
cmc
mov
push
(bad)
fist
mov
mov
adc
arpl
and
mov
adc
das
stos
addr16
mov
push
lods
lea
cwde
ret
fstp
in
jo
popa
shl
mov
jnp
mov
(bad)
icebp
jo
pop
out
mov
pop
add
(bad)
stos
sub
adc
pop
(bad)
push
cwde
xchg
inc
inc
js
cwde
sub
xchg
adc
mov
mov
repnz
and
inc
mov
mov
jecxz
jmp
cmp
fdiv
rcr
test
icebp
pop
(bad)
hlt
pop
adc
sbb
add
dec
pop
cmc
mov
out
rsm
push
sbb
pop
cmp
lea
or
cmp
or
(bad)
xchg
mov
adc
repz
(bad)
dec
adc
add
stos
addr16
add
inc
shl
jo
(bad)
call
mov
mov
mov
das
jae
cmp
int3
lahf
icebp
dec
push
repnz
push
xor
(bad)
imul
ret
mov
pusha
add
cmp
jns
loopne
ret
data16
lahf
jnp
pop
mov
xor
adc
sbb
out
cwde
ds
sub
cmp
xchg
xlat
dec
sub
mov
sti
push
leave
mov
retf
nop
es
add
push
fs
mov
inc
mov
icebp
xchg
jg
inc
push
retf
imul
xchg
es
push
sub
mov
cmp
jmp
mov
ja
xchg
pusha
inc
scas
pop
dec
mov
adc
sub
xor
ja
fdivrp
pop
dec
loope
in
arpl
test
or
pop
push
stos
jle
test
and
loopne
mov
pop
outs
enter
(bad)
in
das
jb
adc
add
popa
pop
bound
sub
lods
and
add
scas
add
push
mov
call
xchg
lods
outs
movs
and
mov
inc
add
pop
cmp
lods
jo
fs
je
inc
not
xchg
jne
mov
sbb
and
xchg
shl
fdiv
or
addr16
push
adc
and
retf
sbb
outs
add
lods
int
and
xor
mov
aaa
test
jne
pop
mov
daa
mov
ins
pop
xor
xchg
daa
xchg
lods
retf
ins
push
push
daa
push
ins
repnz
(bad)
sbb
sub
push
jbe
dec
call
push
ins
push
sub
jmp
mov
add
xor
xchg
and
mov
sti
and
data16
jmp
xchg
repz
adc
push
sahf
es
das
push
lods
das
sbb
mov
add
pop
push
push
imul
iret
jbe
pop
nop
out
jle
call
adc
jmp
enter
dec
pop
je
das
loope
test
pop
call
dec
aas
mov
mov
xor
enter
mov
inc
sub
pop
shr
and
mov
sub
mov
xor
or
jno
lods
pop
les
ja
lock
sahf
cmp
add
in
jb
push
sbb
dec
add
sbb
mov
push
pushf
cmp
add
addr16
stos
pop
xchg
sti
sbb
cmps
(bad)
out
jg
hlt
sar
mov
(bad)
repnz
jge
mov
add
push
mov
sbb
xor
push
xchg
call
mov
jl
ret
rol
fs
stos
mov
in
sub
lods
pop
adc
repz
push
lods
popa
mov
dec
pop
out
inc
jne
ficom
push
add
(bad)
int
mov
mov
push
and
cmp
or
inc
imul
mov
push
xchg
imul
pop
aaa
ds
test
xchg
popf
loope
xor
push
iret
retf
pop
repz
cmc
xor
or
pop
lods
or
mov
mov
pop
adc
mov
jle
pop
sar
push
or
xor
dec
test
stos
mov
inc
invd
dec
(bad)
jle
cli
movs
cmp
mul
mov
not
jmp
ret
jno
and
jne
mov
stos
inc
push
xchg
cld
hlt
enter
mov
push
rol
movs
xor
jl
mov
jb
push
cs
push
mov
adc
push
xchg
stos
jl
das
cld
xchg
mov
sub
mov
aad
call
test
sbb
in
xor
mov
or
jl
dec
lods
or
popf
xchg
xchg
mov
lods
outs
jg
jg
push
dec
pusha
repnz
jb
xor
dec
dec
popf
adc
jmp
scas
dec
scas
cmp
out
jnp
xor
adc
and
pop
cmc
cmp
push
xchg
xchg
push
add
inc
or
xchg
add
aas
mov
sbb
mov
pop
xchg
inc
aam
adc
or
sub
sub
test
pop
repz
sbb
jg
inc
or
mov
and
mov
outs
add
aam
into
or
cmps
inc
data16
ror
jge
daa
mov
cmp
push
sub
jo
sub
stos
arpl
mul
adc
fs
call
adc
stc
push
sbb
xor
xor
mov
jl
xor
and
sub
sub
shl
imul
rol
jbe
add
pop
push
js
add
mov
add
mov
xchg
xor
ret
add
(bad)
or
mov
imul
mov
jp
sub
jecxz
sbb
dec
cli
or
push
fxch
sbb
loope
or
and
aam
add
scas
mul
dec
xchg
shr
cdq
test
leave
jmp
aaa
fiadd
scas
xchg
test
mov
iret
iret
mov
retf
addr16
sbb
fiadd
pop
sbb
lods
scas
mov
icebp
je
mov
xor
sub
hlt
scas
outs
repnz
adc
sbb
pop
aam
xchg
das
mov
dec
aaa
pushf
ja
stos
jb
(bad)
jo
jmp
mov
cmp
jl
or
ds
stos
popa
xor
daa
xchg
cmp
mov
(bad)
pop
dec
cmps
ret
out
ror
or
fwait
add
xchg
popa
pop
arpl
cmp
dec
ficom
xor
(bad)
xor
push
sub
mov
fwait
lahf
sbb
dec
xchg
pop
and
imul
adc
adc
xchg
fist
imul
mov
les
rol
(bad)
retf
lea
scas
xchg
(bad)
test
aam
data16
jmp
mov
mov
repz
push
sub
loopne
jl
pop
movs
stos
pop
or
fadd
lea
sub
in
jae
stos
inc
lahf
mov
in
adc
int3
out
int3
push
sbb
int
jmp
mov
pushf
stos
mov
ja
out
xor
scas
mov
push
or
push
add
mov
xchg
jae
push
shl
add
mov
dec
xchg
retf
les
test
lock
pushw
dec
add
and
mov
jg
add
push
dec
in
push
xor
adc
mov
enter
xor
mov
ds
aas
and
mov
push
fmulp
es
test
fwait
mov
pop
mov
cmps
pop
pop
xor
xchg
inc
mov
sbb
mov
call
push
aam
(bad)
mov
dec
das
fldcw
inc
mov
cmps
stos
inc
es
repnz
xor
ds
xchg
mov
mov
into
adc
cli
cmps
add
mov
jnp
sti
or
mov
ja
jns
xchg
lods
call
xchg
jnp
add
in
mov
xchg
sbb
cwde
(bad)
sbb
call
in
scas
and
and
inc
jae
les
mov
cmps
adc
cwde
pop
imul
jnp
clc
xchg
jae
and
sub
sti
dec
mov
cli
xor
retf
pop
xor
cwde
out
mov
jecxz
ficomp
and
stos
mov
mov
mov
jb
(bad)
(bad)
cli
je
pop
add
fisttp
or
and
jno
and
mov
jmp
push
test
push
imul
or
jmp
div
xor
and
fwait
sahf
push
movs
aaa
sub
and
dec
bound
xchg
sub
mov
(bad)
rcr
outs
lahf
mov
fstp
mov
xor
push
jns
sub
movs
dec
test
stos
sbb
mov
aaa
dec
cmp
shl
sub
fnsave
es
xor
dec
push
test
jns
(bad)
xor
cmp
pop
add
lds
mov
jno
leave
imul
xchg
movs
(bad)
ja
and
xor
div
push
(bad)
fbstp
out
add
push
mov
mov
fist
mov
xlat
hlt
mov
mov
les
or
hlt
xor
out
cmp
pop
sbb
xchg
sbb
cmps
addr16
fadd
je
test
dec
adc
(bad)
repnz
or
(bad)
jp
adc
dec
mov
ins
jo
jg
nop
mov
out
adc
pop
mul
das
(bad)
jmp
add
dec
jb
add
sbb
call
mov
call
(bad)
add
and
dec
(bad)
cmp
cmp
das
cmovg
jmp
sti
inc
mov
rcl
mov
sti
ret
fwait
xor
vpcmpgtb
and
out
and
mov
sahf
add
adc
mov
pop
dec
out
jg
es
rol
pop
out
push
ret
sbb
mov
xchg
stos
retf
sbb
or
or
pop
dec
sub
and
adc
icebp
scas
mov
shl
and
and
pushf
(bad)
cli
repnz
pop
dec
xchg
mul
popf
ret
stos
inc
sub
(bad)
adc
pop
mov
mov
loope
repz
xor
jl
mov
jp
cmc
push
enter
jl
jmp
xlat
icebp
mov
enter
arpl
mov
add
xchg
(bad)
loop
or
enter
or
inc
jne
retf
cmps
adc
mov
add
fwait
iret
aad
sahf
mov
icebp
push
stos
mov
scas
mov
push
adc
mov
jbe
push
sbb
shr
inc
stos
pop
mov
stos
xchg
xchg
(bad)
jno
sub
jl
repz
xchg
loope
adc
aas
inc
clc
xrelease
mov
xchg
add
dec
test
aad
push
inc
pop
and
push
mov
out
lock
push
mov
sbb
xor
cmp
cmc
sub
mov
nop
adc
out
cdq
mov
and
mov
or
push
add
mov
inc
rol
(bad)
jg
mov
stos
je
mov
dec
xchg
cs
mov
fimul
cs
mov
retf
cmp
retf
aam
ins
and
cmp
rcr
shl
pop
sub
movs
popf
cmp
lock
mov
movs
cwde
mov
fwait
sub
inc
xchg
loop
mov
lods
xor
xchg
and
pop
mov
repnz
sub
adc
pop
sub
mov
int3
push
mov
pop
mov
mov
popf
jg
sbb
xor
movs
xchg
imul
mov
dec
div
sub
fiadd
xchg
jnp
inc
xor
ret
rcr
repnz
dec
das
sub
jbe
iret
sbb
cmc
lock
xchg
in
pop
push
xchg
repnz
push
xor
jg
pop
mov
add
push
in
push
push
sub
out
sbb
inc
jne
pop
loope
xchg
cmp
(bad)
pop
inc
enter
(bad)
push
ss
mov
mov
add
fsub
sub
jecxz
fnstenv
or
retf
cwde
cmp
fld
test
pop
fisttp
jno
pushf
mov
xchg
(bad)
jg
push
(bad)
mov
cmc
and
ss
xor
fs
es
je
and
push
push
jp
or
dec
sbb
mov
retf
pusha
mov
xchg
(bad)
xrelease
jl
sar
xchg
data16
pop
mov
leave
cmc
test
aas
mov
sbb
call
jnp
inc
jnp
scas
sub
(bad)
xor
scas
push
mov
inc
scas
add
xchg
arpl
pop
bound
ficomp
mov
mov
push
push
jmp
nop
and
and
jae
addr16
inc
mov
push
cmp
mov
sub
aas
sub
adc
push
aam
jo
mov
push
mov
nop
outs
fsub
sub
(bad)
inc
pop
nop
scas
pop
xchg
jno
inc
(bad)
push
cmp
lock
test
or
shl
in
jecxz
cmc
jno
in
adc
xchg
and
mov
repz
pusha
mov
add
or
mov
mov
bound
je
push
and
pop
scas
fwait
jmp
pop
adc
int3
pop
xchg
jmp
in
inc
cmp
sub
mov
fcom
add
mov
sti
pop
stc
ins
mov
loopne
imul
jae
mov
xlat
jmp
add
jecxz
out
mov
xor
jp
xchg
and
add
and
dec
add
ret
mov
cmp
test
int3
xchg
cwde
sbb
add
in
fwait
xchg
fst
fbstp
or
dec
mov
or
or
neg
in
xchg
fcomp
ret
push
push
aam
jg
push
jle
sub
inc
mov
lods
add
dec
ds
test
js
xchg
loopne
ret
xchg
or
popa
dec
int
jns
push
popa
jo
outs
out
inc
mov
rcr
dec
mov
push
cmps
lock
das
xchg
imul
mov
out
outs
xor
jae
int3
push
loopne
pop
dec
xor
push
or
repz
pop
add
cmp
lods
repnz
jo
cmp
sbb
retf
test
test
shl
mov
push
mov
dec
pop
sbb
lahf
clc
or
shr
sub
stos
push
movs
dec
xor
stos
mov
les
fadd
retf
and
dec
scas
cmp
adc
arpl
cmp
aad
out
or
call
sbb
mov
in
js
pop
nop
data16
lock
dec
adc
xchg
loopne
xchg
fs
cmp
ret
test
pushf
mov
dec
sti
daa
dec
push
div
das
loopne
add
(bad)
cmc
or
fs
(bad)
div
out
mov
pop
inc
das
and
dec
lock
pop
int
jae
xchg
push
loope
adc
inc
xchg
sar
mov
xor
scas
jo
adc
xchg
fs
hlt
adc
ret
push
mov
push
dec
push
cs
xchg
out
cmp
jl
cmp
mov
aad
or
push
icebp
shr
shl
xor
fld
pop
mov
shr
push
scas
jne
ins
(bad)
or
pop
cmps
xor
in
and
mov
or
add
scas
aad
arpl
or
push
shr
push
sub
(bad)
(bad)
imul
pop
or
pop
and
loop
imul
iret
retf
dec
rcr
sbb
mov
jecxz
ss
and
mov
aam
popf
and
lahf
int
(bad)
js
lahf
mov
shl
cmp
inc
jl
lods
call
bnd
leave
sub
xlat
ficomp
adc
in
sub
xchg
dec
ja
and
add
xor
cmp
imul
jle
lar
repz
jmp
mov
sub
push
push
out
xor
cs
in
mov
mov
jne
in
add
sbb
in
push
movs
out
(bad)
call
inc
lds
inc
fwait
sub
sub
mov
aaa
retf
push
ss
cwde
push
adc
stc
push
push
js
xchg
addr16
in
addr16
(bad)
sbb
xchg
clc
out
mov
sub
inc
xor
aad
dec
ja
or
sub
jmp
mov
cmovle
cdq
or
lods
jb
sub
ins
or
sbb
add
mov
idiv
shr
xchg
sbb
xlat
push
loope
adc
pusha
mov
arpl
stos
xchg
mov
mov
xchg
pushf
mov
leave
jo
mov
add
lods
fstp
nop
dec
sbb
sbb
and
mov
and
cmp
inc
push
cs
stos
mov
sub
scas
je
jno
push
fisub
test
mov
out
lods
mov
add
mov
xchg
fisttp
cmp
push
add
je
or
xor
mov
stos
call
test
inc
stos
scas
add
mov
call
pop
push
sub
inc
aam
cmp
mov
clc
cmps
push
pop
jno
or
fild
sbb
scas
xlat
sub
scas
adc
and
mov
hlt
add
rcl
xor
cmps
push
test
add
scas
repz
out
mov
push
mov
int
pushf
and
jle
adc
in
push
sbb
xor
adc
add
(bad)
xlat
dec
sub
fild
pop
mov
stc
das
sahf
dec
sbb
inc
add
lock
sub
arpl
pusha
(bad)
mov
jp
ss
shl
mov
std
je
mov
ja
xadd
push
frstor
inc
pop
xchg
fcom
mov
dec
jle
add
scas
push
jmp
arpl
out
dec
mov
mov
mov
mov
mov
push
xlat
movs
cdq
fisttp
mov
sub
nop
in
out
xchg
inc
int
push
mov
xchg
stos
mov
mov
pop
xchg
inc
adc
push
inc
(bad)
addr16
sbb
daa
dec
out
das
mov
adc
dec
cmp
sub
adc
ret
out
cmps
jl
xor
dec
add
sub
jp
pusha
pop
jb
ret
xlat
mov
dec
pop
sbb
add
arpl
inc
cli
xchg
xor
add
sub
test
lock
cmp
cli
cmps
test
out
(bad)
inc
fwait
cmps
fidivr
jmp
xchg
mov
add
mov
jle
in
xchg
adc
cmp
repz
int3
div
inc
test
mov
cmps
and
pop
addr16
clc
mov
xor
mov
inc
iret
dec
aaa
movs
mov
pop
mov
push
mov
stos
and
or
lds
icebp
ja
daa
fcmovbe
shr
(bad)
daa
shl
mov
ror
movs
ret
daa
cmp
mov
xor
xchg
or
pop
out
test
shl
imul
inc
inc
mov
mov
retf
jns
add
ins
push
pop
in
repz
iret
inc
arpl
xchg
mov
adc
stos
dec
mov
jp
ret
in
sub
out
scas
xchg
or
lea
push
sbb
push
mov
movs
ret
fwait
jns
adc
shl
or
cmp
cmp
loope
aam
jo
sbb
and
pop
mov
(bad)
(bad)
sbb
xor
ja
adc
dec
or
cmovs
and
es
or
push
mov
arpl
inc
push
xor
sub
cmp
xchg
or
sub
enter
dec
aaa
(bad)
cmp
mov
clc
jg
scas
mov
mov
call
add
mov
enter
scas
jmp
mov
aad
cld
pop
arpl
mov
out
clc
bound
sar
ret
out
cli
(bad)
repz
xchg
xchg
aaa
cli
popa
xor
(bad)
test
lahf
adc
sbb
dec
sbb
scas
sbb
loop
cmp
out
jle
dec
hlt
fwait
adc
fcom
mov
jmp
or
mov
in
mov
cmps
mov
iret
dec
test
sub
add
sub
neg
ret
push
daa
loopne
loop
mov
push
sbb
mov
repnz
out
cs
fdiv
fmul
cmc
and
inc
adc
adc
test
add
outs
mov
or
jbe
clc
das
leave
retf
clc
inc
xchg
sar
fisttp
and
movs
mov
stc
std
xchg
fmul
jmp
fcom
cmp
xor
cmp
or
ss
test
(bad)
retf
push
mov
sub
lds
iret
inc
adc
fisttp
inc
sbb
hlt
test
cmp
mov
test
jbe
ins
(bad)
dec
pop
(bad)
stos
(bad)
push
and
xor
and
or
pop
dec
pop
pop
ret
ret
jne
dec
rol
sub
pop
lahf
xchg
xchg
lahf
jns
outs
jecxz
sub
sbb
inc
mov
mov
mov
sub
stc
ins
jmp
(bad)
xchg
add
mov
(bad)
into
outs
xor
push
xchg
popf
jg
jb
sub
xor
mov
jmp
adc
ins
adc
scas
mov
lea
mov
jecxz
aaa
mov
jge
outs
out
push
push
(bad)
mov
stc
mov
mov
in
aas
push
sbb
push
xchg
or
push
pop
xor
hlt
and
pop
mov
and
mov
pop
jl
repnz
lock
(bad)
ret
mov
aaa
imul
dec
(bad)
jp
test
dec
test
mov
call
test
aaa
cmp
cmc
add
mov
neg
fsubr
test
pusha
or
cmps
mov
xor
mov
mul
leave
test
popf
in
mov
inc
xchg
push
cmc
bnd
cld
xchg
mov
mov
sbb
inc
add
mov
stc
mov
aaa
out
xchg
cmp
and
jmp
scas
inc
rcl
mov
sar
stos
jns
iret
fistp
test
arpl
mov
jge
(bad)
jo
retf
cs
enter
stos
(bad)
out
gs
xlat
rcr
and
les
fcomi
call
mov
fadd
test
ret
push
or
(bad)
sub
loope
inc
retf
aad
leave
ja
dec
mov
dec
idiv
ds
jns
das
lock
ret
push
lods
mov
out
xchg
icebp
dec
fbstp
push
cmp
aad
(bad)
pop
xor
mov
lock
jno
adc
and
adc
push
and
out
(bad)
xchg
out
add
out
mov
mov
xchg
pop
xchg
dec
repz
xchg
add
mov
add
icebp
fs
call
sub
push
mov
pop
sbb
dec
retf
sub
into
adc
fistp
dec
ret
mov
xlat
scas
das
enter
mov
push
dec
mov
ret
mov
ss
pop
and
ror
call
outs
retf
das
add
cmps
enter
bound
lods
cmp
shl
lods
cmps
and
dec
sbb
xchg
mov
vpmacsswd
sub
xchg
sub
jo
and
dec
add
ins
cs
scas
in
ins
sbb
dec
mov
aaa
jg
pop
fwait
rcl
cmp
adc
and
jg
jno
push
icebp
cdq
mov
stos
mov
inc
and
xor
dec
in
push
jle
ror
and
inc
mov
cmp
mov
les
mov
ss
cmp
ss
adc
(bad)
(bad)
jnp
outs
push
clc
push
fiadd
daa
fisub
jmp
push
jnp
push
jmp
loop
cmp
mov
jl
(bad)
pop
sub
sub
test
call
xor
int
outs
push
lods
jnp
not
jecxz
and
or
jge
pusha
scas
rcr
call
xchg
dec
rcl
int
push
loopne
movs
retf
ss
cli
mov
clc
push
cmps
ins
jl
sub
bound
pop
iret
ds
ins
push
int
rcr
mov
mov
and
outs
dec
out
sub
mov
dec
out
ror
leave
and
mov
fisubr
(bad)
popa
cmps
test
add
sbb
xchg
inc
adc
jno
cli
sbb
clc
xchg
repz
inc
jmp
mov
imul
ret
test
sbb
(bad)
stc
or
lods
xchg
sar
lahf
scas
sbb
shl
xchg
jmp
enter
cwde
test
sub
aad
data16
retf
sbb
cmp
xchg
pop
xchg
out
xchg
jne
pop
mov
inc
nop
mov
pop
adc
jg
inc
ins
stos
inc
leave
sahf
sub
add
jmp
sbb
shr
pop
ret
(bad)
push
add
push
pop
ins
rcl
int3
mov
add
push
mov
cmp
sub
jmp
retf
call
dec
fistp
clc
imul
jbe
xlat
das
or
out
mov
lea
xchg
repnz
inc
mov
lds
mov
je
nop
call
mov
shl
aad
mov
push
jp
inc
lea
mov
xchg
jne
push
or
(bad)
mov
in
mov
out
imul
shr
ror
mov
sbb
or
inc
jmp
mov
in
xor
pop
pop
jb
cmc
sahf
cs
jo
inc
fs
stc
imul
out
pushaw
shl
sbb
push
(bad)
fsub
pop
add
addr16
pop
enter
push
jns
jnp
ins
mov
push
cs
mov
push
pop
mov
jnp
je
mov
sti
imul
fadd
retf
xor
adc
in
ins
stos
inc
mov
xlat
out
out
pop
cmp
ins
into
into
mov
adc
sub
sbb
mov
pop
jecxz
loopne
xor
mov
data16
scas
jmp
inc
inc
mov
jb
mov
xchg
int
or
out
mov
test
xchg
cmp
inc
repnz
jg
das
mov
push
movntq
mov
daa
xor
inc
pop
lock
push
pop
or
das
es
daa
sub
fild
cmp
sbb
add
stc
and
add
pop
cdq
inc
xchg
or
jmp
pop
add
jo
jb
jne
stos
push
ss
sbb
imul
repnz
ret
(bad)
adc
sbb
inc
loope
sahf
dec
mov
and
call
mov
xchg
mov
mov
add
dec
lahf
xor
aad
and
and
mov
ret
mov
xchg
xchg
xchg
in
ret
push
clc
stos
mov
daa
pop
adc
fs
mov
pop
cmp
add
push
push
cmp
nop
aad
repz
jle
mov
jmp
stc
ror
fdivr
jmp
test
xchg
cwde
sar
aas
outs
or
stos
aas
retf
and
das
xlat
jbe
shr
(bad)
cli
sbb
pop
test
mov
mov
gs
mov
int3
mov
mov
push
push
xchg
dec
stos
and
push
and
iret
inc
lahf
push
scas
mov
push
adc
push
jnp
arpl
xchg
jecxz
test
dec
test
cmp
das
jl
push
sub
fisubr
sbb
push
xchg
adc
div
sub
or
mov
je
ins
cld
adc
mov
xchg
mov
xchg
or
pop
ja
cmp
inc
or
xchg
xor
cmc
lds
icebp
lahf
add
xor
pop
jp
frndint
iret
add
lods
push
pop
mov
add
xor
mov
inc
mov
pop
cmps
pop
sahf
xor
jmp
and
pop
retf
por
cmp
xor
sbb
jae
gs
cmp
fbld
push
out
push
xor
sub
xor
mov
inc
add
xchg
jmp
and
outs
fsubr
pop
pop
cli
cdq
mov
sub
ja
or
sub
ins
test
push
outs
sahf
xor
adc
push
movs
sub
or
push
retf
popa
push
push
mov
fnstsw
cwde
sub
jnp
daa
and
mov
inc
cmps
retf
cmc
pop
ret
or
imul
jle
fnsave
sub
xchg
jmp
mov
mov
imul
mov
sti
mov
mov
xchg
push
scas
addr16
mul
mov
sub
rol
sub
mov
jp
mov
fidiv
call
push
test
ins
test
inc
or
test
int
dec
xor
sub
add
inc
pop
dec
ss
add
dec
xor
mov
nop
xchg
div
test
outs
jle
movs
add
addr16
lods
sbb
inc
xchg
imul
xor
ret
test
nop
stos
jno
addr16
mov
fwait
cmp
rcr
mov
cdq
enter
jg
jge
adc
lods
(bad)
jae
sahf
xchg
mov
daa
ins
mov
js
xchg
inc
sub
test
push
jmp
test
shl
(bad)
xchg
sub
xor
ins
sub
jmp
sbb
enter
clc
stos
movs
sbb
repz
sbb
pop
std
dec
repz
nop
outs
mov
push
pop
repnz
imul
and
es
(bad)
out
dec
lea
pop
or
nop
mov
or
sbb
and
jno
rcr
arpl
fdiv
mov
and
std
das
cwde
outs
and
aas
sbb
xchg
ret
call
jp
retf
mov
cmp
ret
inc
not
push
fnstenv
pop
jle
xchg
mov
(bad)
fdiv
push
aaa
dec
xchg
cmp
push
or
ror
mov
(bad)
lods
inc
push
lock
xlat
aaa
(bad)
push
mov
sti
xlat
xchg
clc
jp
and
test
inc
and
ror
lods
into
xor
sbb
hlt
pop
fistp
jmp
xor
and
dec
test
mov
sbb
aad
jle
jb
les
retf
inc
lahf
lods
arpl
mov
es
pusha
xor
or
push
inc
mov
add
jnp
xchg
test
add
push
pop
inc
fwait
jnp
cmp
pop
sub
jecxz
loopne
(bad)
mov
push
push
xlat
adc
pop
xchg
outs
cwde
sbb
ds
hlt
ins
push
dec
out
push
pushf
jp
or
stos
push
cmc
inc
or
push
fs
mov
inc
sub
bound
cmp
cwde
jne
lock
jge
popa
and
and
mov
xchg
sub
sbb
mov
xchg
jno
(bad)
mov
sub
je
push
(bad)
dec
inc
out
inc
imul
jecxz
cmps
add
mov
dec
mov
dec
jp
and
pop
add
pop
mov
enter
in
dec
xchg
test
mov
cld
ins
rcr
xchg
retf
movs
test
retf
push
loop
pop
jns
out
push
inc
pop
call
sbb
xchg
ins
repz
ret
sub
ins
push
loope
fild
jmp
fs
lock
sub
xchg
xor
loope
fst
repz
call
pop
shl
add
into
outs
adc
mov
scas
ret
ror
jmp
in
(bad)
sbb
mov
mov
xchg
call
sub
mov
ins
sub
and
outs
mov
cmps
fild
jmp
dec
scas
push
fldenv
call
aad
adc
mov
pusha
stos
scas
aaa
int3
xchg
enter
add
lock
mov
cmp
mov
xchg
dec
and
lock
(bad)
pop
jl
shr
inc
cmp
or
into
cmps
lahf
fwait
jg
dec
jbe
sbb
jb
outs
push
(bad)
push
sbb
pop
fs
fist
out
cdq
sub
dec
fmulp
retf
scas
jg
cmps
pop
cdq
ja
pop
clc
push
bound
hlt
push
push
sub
into
or
(bad)
xchg
mov
add
mov
loop
arpl
push
cmp
jo
arpl
loop
popf
inc
stos
imul
mov
test
sub
or
les
push
mov
out
or
jmp
jmp
dec
dec
mov
sar
pop
push
push
pop
fistp
add
dec
push
xchg
enter
test
mov
jg
stos
add
and
loopne
pop
add
in
mov
mov
jge
bound
pop
jbe
mov
test
fwait
inc
inc
dec
mov
xchg
xchg
dec
(bad)
jnp
rol
mov
scas
add
adc
bnd
test
mov
pop
xchg
jmp
xchg
xor
in
sub
rol
xor
test
xchg
xchg
dec
lods
or
repnz
or
scas
dec
loopne
iret
mov
or
push
sub
call
jno
stos
cmp
push
lahf
jl
adc
mov
es
(bad)
jo
xor
pop
jle
mov
push
mov
(bad)
jae
mov
scas
pusha
xchg
ret
jmp
mov
nop
sub
mov
(bad)
ja
push
enter
pop
push
add
retf
push
xor
outs
and
je
cmc
jnp
cwde
icebp
in
or
pop
jecxz
add
push
inc
loope
mov
mov
add
repz
cmp
jno
icebp
idiv
push
sub
fild
pop
lock
mov
iret
or
push
adc
lock
jecxz
sbb
inc
fst
xchg
pop
frstpm(287
inc
cmps
inc
xor
daa
add
pop
mov
stos
pusha
(bad)
das
ja
and
jecxz
test
aaa
inc
add
jmp
push
gs
jb
push
jmp
stos
push
fwait
adc
mov
mov
sbb
fninit
xor
mov
test
mov
scas
stc
or
je
(bad)
ds
repz
lock
out
push
add
pop
mov
dec
mov
rcr
sub
aas
rcl
push
mov
aad
mov
scas
cld
pop
sub
stos
mov
sbb
cmp
mov
stos
add
into
fcmovnb
jb
int3
jmp
sbb
xchg
and
inc
push
and
add
sti
pop
jecxz
sub
or
mov
or
mov
push
or
xor
xor
cld
cmp
dec
xchg
sub
xchg
fcmovu
hlt
cmp
cs
push
cmp
pusha
mov
fst
xchg
rol
lods
add
push
mov
test
or
or
pop
fisubr
imul
outs
sub
in
lods
inc
and
add
leave
sti
mov
fild
fldcw
jb
sub
push
(bad)
inc
sub
sbb
add
mov
xor
push
mov
mov
push
jg
mov
pop
test
mov
rcl
test
pop
adc
stos
dec
sub
and
push
adc
mov
add
div
jbe
mov
lea
clc
mov
mov
call
clc
push
jmp
mov
into
jmp
outs
sub
jmp
sub
jbe
out
sahf
sbb
cs
mov
stos
mov
aas
inc
dec
(bad)
stos
mov
imul
cmp
sbb
jmp
sub
std
xrelease
or
pop
sbb
(bad)
jmp
imul
sbb
nop
xlat
cmps
inc
mov
jnp
mov
pop
fld
jecxz
push
iret
xor
adc
inc
xor
sub
scas
stos
daa
cmp
or
pop
and
test
mov
push
daa
dec
dec
retf
and
push
sahf
and
inc
dec
jg
pop
mov
push
(bad)
repz
add
inc
call
(bad)
ja
sub
or
imul
lahf
pop
scas
gs
out
mov
or
jg
adc
ins
push
xor
mov
loopne
call
or
pop
dec
xchg
and
(bad)
fucomip
cmp
xchg
push
jg
jbe
scas
mov
xor
xchg
rol
add
mov
jp
push
es
mov
icebp
sbb
push
mov
xchg
scas
frstor
inc
push
jmp
push
xchg
ror
and
jno
pop
lahf
fsub
and
js
and
mov
stos
lds
movs
aad
pop
test
mov
pop
xchg
bound
pop
push
inc
mov
or
lods
mov
xchg
cmp
ret
ret
ins
ret
xor
or
xor
xor
iret
mov
inc
push
and
outs
loope
add
cdq
jmp
sti
mov
frstor
test
(bad)
xchg
jae
icebp
mov
mov
push
add
test
jge
mov
push
ret
iret
leave
adc
out
pop
jl
ss
popf
dec
aaa
sub
xor
and
outs
cmp
call
fwait
adc
retf
dec
push
push
xchg
bound
dec
or
test
and
cmc
ins
imul
mov
cs
fdiv
xchg
nop
jg
movs
mov
mov
mov
rcl
xchg
cmp
push
sbb
shr
or
xor
addr16
xchg
das
inc
cs
cdq
loop
ja
mov
ja
inc
lahf
and
lds
sar
rcr
inc
out
inc
arpl
xchg
pop
lds
cmc
int3
clc
xor
daa
inc
leave
stos
sar
fs
retf
addr16
int
shl
lock
dec
add
cmps
stos
imul
push
lahf
sbb
ror
aas
retf
leave
sub
test
div
pop
jp
ror
test
popa
ud2
sub
lods
dec
xchg
pop
mov
mov
mov
call
into
sub
mov
add
ins
push
repz
stos
mov
cmp
or
mov
jp
push
xchg
out
fs
retf
mov
dec
pop
rcr
mov
jge
je
sub
inc
loop
pop
loopne
inc
scas
inc
cmp
pushf
or
push
xchg
mov
arpl
dec
fldln2
pop
push
fldenv
mov
pop
xor
jbe
sbb
pop
add
xchg
mov
add
or
movs
ror
loopne
mov
dec
mov
ds
movs
inc
xchg
mov
call
jnp
mov
xchg
out
inc
in
cmp
popa
xchg
xchg
lods
sahf
dec
mov
les
popa
nop
dec
push
cld
xchg
lock
pushaw
sti
call
stc
xchg
iret
mov
sbb
test
loop
ss
lea
mov
scas
or
(bad)
lods
(bad)
into
inc
push
dec
xor
(bad)
push
xchg
dec
mov
out
sbb
rcr
cmps
(bad)
jmp
push
xchg
xor
push
cmps
jg
inc
pop
push
push
jp
dec
mov
ror
xchg
push
xchg
loopne
jae
adc
mov
pop
mov
add
call
or
dec
out
mov
cld
je
jle
ret
jge
pop
addr16
popf
adc
nop
je
sub
(bad)
xor
jb
(bad)
push
or
xor
stos
xor
mov
inc
jmp
rol
ret
xchg
gs
shl
cmp
mov
jmp
and
jno
mov
stc
dec
lods
(bad)
cmp
cmp
imul
pminsw
cmp
or
sti
add
push
or
lock
or
loopne
add
(bad)
hlt
les
mov
bound
(bad)
push
or
mov
jae
loope
cmps
cmps
add
pop
sub
adc
mov
mov
xchg
xchg
movs
lock
loop
arpl
scas
xchg
mov
sbb
xchg
ror
int
push
xor
icebp
mov
push
arpl
leave
loop
cmps
inc
test
retf
scas
xchg
and
jl
(bad)
out
pushf
xor
leave
outs
dec
push
mov
sbb
scas
cld
cmps
inc
xor
and
dec
jb
iret
imul
adc
das
xchg
pop
mov
add
mov
(bad)
cmp
cld
scas
pop
es
xchg
ror
xchg
xchg
ficom
jmp
js
xor
xchg
ret
out
and
(bad)
mov
icebp
xor
add
or
mov
adc
hlt
popa
xor
retf
retf
add
mov
xor
and
xchg
test
jge
jae
xchg
and
push
dec
retf
and
mov
fstp
xchg
sub
enter
jno
fs
and
repnz
clc
push
and
addr16
div
xchg
and
div
mov
int
push
cmp
das
loope
pop
pop
sbb
xchg
mov
mov
clc
jbe
xchg
pop
jno
jg
mov
ror
or
mov
mov
push
xchg
mov
pop
xchg
lods
test
ror
pop
sbb
jbe
stos
jge
sub
or
push
push
call
dec
push
rol
loope
mov
daa
fsubrp
push
sub
jmp
shl
push
push
adc
push
ret
out
ja
mov
push
push
lds
pop
outs
mov
jo
mov
rol
mov
mov
ins
mov
push
add
aas
push
add
(bad)
lock
out
test
outs
sub
mov
ficom
xchg
and
test
ret
stc
xchg
ror
repnz
mov
inc
sbb
movs
adc
dec
sbb
push
js
pushf
cmp
in
adc
push
jmp
sub
enter
xchg
xchg
lods
sbb
mov
push
jbe
arpl
xchg
push
idiv
ja
das
push
xor
imul
rcl
mov
pusha
cwde
and
std
lds
sti
ins
test
loope
xor
sub
retf
and
cmps
jae
(bad)
and
pop
stos
ret
or
fadd
repz
les
jl
pandn
inc
icebp
stc
jae
outs
push
or
dec
stos
sbb
adc
stos
out
movs
mov
mov
xor
pop
lds
out
fisttp
not
movs
ins
xchg
dec
test
shr
pop
mov
add
cs
lahf
fisubr
or
sbb
xor
aam
and
sbb
bnd
jmp
test
out
sub
fcom
mov
xchg
data16
out
repnz
sbb
adc
push
jle
test
lock
cmp
add
scas
ds
or
in
sbb
ret
fiadd
add
les
repz
and
pop
icebp
hlt
mov
inc
xor
sbb
push
xchg
(bad)
pop
cmp
pop
xchg
mov
push
jmp
xchg
out
fdivr
dec
pop
lock
mov
add
(bad)
ret
es
sub
(bad)
jno
out
pusha
daa
fwait
push
neg
jo
xchg
call
and
and
inc
xchg
les
mov
xchg
movs
jmp
or
sub
mov
dec
std
iret
movq
test
sbb
inc
jmp
jno
mov
loope
mov
or
ret
stos
add
ret
jmp
adc
test
in
leave
jne
or
cmp
sbb
mov
sub
sbb
xlat
and
call
(bad)
les
cmp
in
jle
jae
loope
pusha
nop
push
les
and
clc
xchg
jg
push
imul
lods
scas
dec
aaa
sub
shl
mov
test
lds
stos
dec
lock
loop
add
data16
popf
std
mov
jmp
cmps
movs
(bad)
stc
mov
or
das
fadd
loop
shl
loope
mov
xor
jae
in
jge
clc
mov
test
xor
jge
fsub
pushf
jmp
movs
iret
sub
pop
ins
push
push
mov
getsec
in
dec
pop
das
idiv
mov
dec
push
pusha
cwde
mov
sub
sbb
call
xchg
and
mov
mov
pop
jns
ja
fadd
repz
add
dec
jnp
shr
sub
or
push
(bad)
push
mov
popf
aaa
xchg
mov
pop
mov
ins
das
into
mov
push
daa
cld
repz
sbb
mov
mov
or
mov
in
add
cmp
lahf
add
xor
pop
js
add
mov
mov
cmp
push
sub
adc
dec
loop
pop
icebp
dec
jmp
xor
pop
retf
in
pop
fisub
or
mov
outs
scas
jbe
xchg
test
data16
sub
stc
push
iret
clc
cmp
mov
(bad)
test
retf
enter
pop
jne
pop
cmp
imul
pop
mov
outs
fs
in
xor
xchg
imul
sub
mov
inc
jbe
pusha
mov
inc
add
pushf
mov
mov
stc
cmp
jl
jae
mov
mov
not
(bad)
sbb
sbb
popf
stos
je
mov
mov
push
ins
add
push
or
xchg
iret
xchg
stos
in
int3
into
mov
sar
sub
cmp
jl
pop
lea
lds
je
cs
rcr
cmps
sub
mov
jne
sbb
jp
sar
pop
xor
cmp
pop
mov
sub
call
inc
and
aad
dec
rcr
jns
add
stc
(bad)
xchg
mov
pop
pop
popa
cmp
push
repz
repz
popa
imul
xchg
xor
loop
mov
in
dec
xor
xchg
adc
or
es
scas
jg
cmp
(bad)
outs
xchg
push
call
mov
not
fbld
pushf
out
std
(bad)
cld
pop
arpl
jp
jmp
fbld
sti
mov
pop
inc
push
jmp
mov
push
pop
adc
lods
xor
mov
lea
and
mov
cdq
es
lds
xor
jg
xchg
dec
stos
pushf
push
cmp
cmp
ins
jle
jns
xor
mov
cwde
sub
inc
sub
sar
adc
mov
xor
rcl
(bad)
out
mov
push
fld
movs
imul
stos
cdq
pop
aas
lods
jne
mov
fdiv
pop
aam
push
mov
xchg
inc
ss
(bad)
sar
add
(bad)
int3
sbb
sub
stos
cmp
sub
mov
aaa
xchg
xchg
retf
leave
aaa
mov
or
xchg
aaa
or
cmp
fneni(8087
push
or
xlat
or
push
lods
cmp
adc
cmp
pushf
inc
mov
mov
mov
mov
inc
xchg
mov
fs
rcl
into
mul
jo
je
pushf
push
adc
mul
cmp
dec
push
adc
dec
mov
sbb
xchg
js
pop
scas
mov
mov
ja
(bad)
fsub
out
xchg
dec
cdq
add
adc
movs
mov
or
(bad)
aad
xchg
push
xchg
into
sub
jle
rcr
(bad)
sbb
push
xchg
or
ins
inc
das
and
pop
ret
mov
fnsave
ss
push
jns
push
cmp
mov
pop
or
push
loop
pop
push
mov
add
enter
mov
in
(bad)
fistp
dec
add
adc
adc
inc
cld
push
push
(bad)
push
into
jno
inc
jno
inc
cmp
jb
div
xchg
xlat
dec
dec
fs
sbb
call
push
mov
(bad)
xlat
mov
(bad)
(bad)
mov
sahf
test
pop
outs
xchg
stos
adc
fmul
jmp
mov
xor
pop
dec
addr16
cmp
mov
aad
adc
sub
mov
arpl
xor
push
pop
movs
push
xor
test
int3
cmp
jns
adc
jl
sar
jo
xchg
or
xlat
mov
fisubr
add
pusha
pop
fld
mov
inc
es
inc
cwde
sbb
call
jecxz
xchg
mov
movd
in
fsubr
mov
pop
xor
jnp
adc
retf
mov
xor
lea
jle
and
repz
push
pop
cmp
cmp
inc
dec
cli
push
lahf
mov
push
repnz
das
add
cmp
push
push
test
sbb
idiv
or
xchg
les
xchg
mov
pop
out
jecxz
push
out
fild
(bad)
inc
out
aaa
mov
movs
mov
xor
mov
adc
mov
fdivrp
arpl
lods
push
aaa
and
mov
or
xor
mov
(bad)
xchg
dec
mov
adc
mov
adc
inc
sub
retf
or
data16
test
scas
and
retf
cld
mov
adc
sbb
or
in
out
mov
mov
xchg
add
retf
fiadd
pop
and
inc
jae
sub
fdivr
mov
dec
jbe
xlat
xlat
inc
js
pop
mov
(bad)
std
mov
dec
mov
jns
mov
xchg
pushf
push
adc
cmp
retf
mov
dec
pop
add
(bad)
enter
xchg
and
cmp
int3
mov
add
sbb
dec
and
scas
cmp
dec
stos
cwde
sub
imul
(bad)
into
cmp
pop
fcmovnu
jbe
ss
adc
jecxz
sbb
push
das
dec
cld
xchg
push
les
mov
enter
jp
mov
aas
jecxz
bound
in
jmp
inc
push
clc
inc
(bad)
sub
test
cli
pop
in
push
push
mov
cmps
pop
mov
int3
test
xchg
add
lahf
mov
(bad)
mov
inc
jg
push
test
and
sub
and
cmps
jo
psllq
inc
mov
stc
mov
xor
cmp
retf
icebp
add
mov
outs
mov
in
or
lods
test
dec
ficom
stc
fadd
sar
dec
repnz
scas
jae
shr
xor
push
inc
leave
pop
jns
fimul
mov
addr16
in
lea
leave
in
jb
es
xor
fdivr
push
dec
cmp
clc
push
scas
xor
adc
loope
pop
xchg
sub
ja
xlat
stos
add
sahf
cdq
sub
aas
sbb
fldcw
mov
mov
fnsave
div
or
aas
mov
jnp
inc
xchg
pushf
rol
mov
mov
lods
ins
lods
mov
and
xor
adc
call
xchg
out
or
jp
adc
xchg
pop
sbb
jle
fwait
int
or
cli
or
or
ret
xor
and
or
loopne
pusha
pop
das
in
mov
sbb
xor
pop
or
imul
(bad)
xchg
ins
pushf
movs
jae
sbb
addr16
add
xchg
(bad)
jg
ins
mov
cli
add
stos
fadd
sub
sahf
or
ja
ror
jne
stos
sub
and
jnp
dec
xor
mov
enter
sbb
and
sub
adc
mov
mul
(bad)
or
dec
in
lods
inc
dec
dec
sbb
xor
mov
test
in
ret
out
hlt
ret
dec
loop
dec
cmp
xor
out
int3
test
mov
sub
jmp
inc
aad
das
test
icebp
dec
and
pop
movs
sub
sub
add
leave
(bad)
xor
fisubr
call
bswap
or
mov
in
xlat
scas
loop
jp
or
or
scas
outs
loopne
pop
inc
dec
gs
mov
mov
adc
dec
dec
(bad)
mov
mov
inc
nop
or
or
and
adc
jmp
mov
and
ficom
icebp
js
in
jae
xchg
fcmovu
add
mov
sub
test
test
pop
pop
xor
mov
mov
jbe
add
pop
mov
movs
sub
or
lds
pop
je
cmps
(bad)
ja
cdq
dec
mov
clc
scas
fimul
jbe
mov
pop
mov
add
(bad)
pop
cmp
inc
or
clc
and
clc
test
stos
outs
fadd
mov
pop
mov
ja
fld
test
(bad)
ds
ins
call
dec
dec
push
ins
lods
sbb
jbe
mov
in
retf
ja
pop
ficom
jns
jl
into
mov
jg
add
shl
adc
out
add
mov
push
test
repz
das
loope
icebp
mov
or
arpl
cs
mov
pusha
mov
(bad)
sbb
lods
mov
sub
sbb
jecxz
mov
fsubr
xchg
call
icebp
cmp
fdiv
xor
(bad)
pop
dec
sar
dec
pop
jmp
push
loopne
lods
pop
ret
mov
push
scas
dec
push
inc
jbe
rol
rcl
scas
mov
in
mul
sbb
dec
xchg
imul
sahf
sub
sbb
loopne
clc
sbb
jmp
sbb
nop
xor
sbb
out
imul
out
jae
or
scas
pop
sar
(bad)
das
test
mov
movs
(bad)
(bad)
push
jne
(bad)
movs
add
cmp
push
ss
adc
jae
mov
retf
mov
adc
dec
mov
sub
cli
mov
mov
jo
inc
int3
repz
test
loope
push
push
(bad)
in
imul
xchg
out
push
aad
shl
jae
pop
loope
lds
into
xchg
ret
(bad)
icebp
cmp
daa
pop
scas
imul
or
mov
sub
sub
cmps
jl
loop
cmps
mov
in
and
stos
call
mov
and
adc
or
or
push
aad
or
cmp
xchg
lea
aaa
mov
jle
xchg
dec
retf
mov
pop
retf
and
dec
push
repnz
push
arpl
cmps
loop
jmp
xor
scas
pushw
cmp
leave
inc
sub
fnstenv
and
xchg
lods
or
pop
test
std
cmp
xlat
scas
mov
xchg
cwde
push
adc
cwde
and
and
adc
sbb
add
in
mov
and
jl
xchg
xor
jge
fld
dec
jmp
loopne
push
cmp
sbb
(bad)
xchg
into
or
adc
jge
shl
fcom
cli
fild
shr
pop
mov
js
lock
sbb
outs
mov
sbb
pop
stos
sbb
out
dec
fwait
pop
aas
dec
jmp
sbb
std
push
shr
int
jmp
std
mov
or
push
sar
add
(bad)
scas
pop
ja
push
lods
push
sar
xchg
mov
xor
or
add
jo
cmp
dec
jne
mov
ror
daa
cmps
push
in
imul
and
ins
and
pop
ds
xchg
dec
or
mov
test
inc
jmp
pushf
mov
jne
mov
pop
mov
add
jge
and
lea
ins
fsub
mov
sbb
inc
xor
or
js
mov
dec
xchg
test
loopne
mov
dec
mov
add
nop
sub
mov
lea
add
sahf
push
mov
pop
(bad)
mov
jp
pop
add
mov
mov
lds
pushf
call
lock
sub
std
lods
(bad)
fwait
pop
dec
and
pop
xchg
rcr
cmp
and
(bad)
movs
push
sub
mov
clc
pushf
sbb
mov
es
cdq
cmp
movs
hlt
outs
sbb
push
add
scas
push
jle
nop
pop
out
stos
mov
jle
sti
push
mov
pop
shr
push
or
push
mov
jmp
cmp
pop
inc
test
fstp
dec
or
lods
mov
or
cld
or
jbe
das
pop
pop
or
fisttp
(bad)
test
addr16
outs
outs
jp
iret
sti
push
retf
cmp
jo
cwde
and
test
xor
jns
test
lea
mov
sbb
mov
ins
push
adc
shr
aam
daa
ds
sbb
test
popf
xchg
push
popa
dec
je
call
cmp
adc
(bad)
ficom
mov
loope
dec
outs
push
lock
call
pushf
mov
in
aas
bound
scas
or
int
pop
clc
retf
pop
das
mov
pusha
push
mov
and
pcmpeqd
push
lock
cmp
cmc
cwde
aaa
mov
mov
xor
shr
mov
shr
aas
shr
jae
iret
adc
cmp
loope
iret
in
fucomp
and
mov
xor
leave
jl
dec
pop
stc
adc
push
push
and
and
int3
jmp
push
mov
jp
icebp
mov
(bad)
or
jmp
lods
pop
or
(bad)
pop
jle
je
mov
pop
loop
mov
inc
mov
and
or
add
xchg
dec
gs
or
dec
pop
es
repz
ds
dec
hlt
lock
adc
add
imul
cdq
das
push
mov
mov
fiadd
push
adc
pop
sub
popf
sub
int
jo
iret
sub
ins
pop
add
mov
add
or
ret
int
neg
ret
inc
mov
(bad)
cwde
(bad)
xlat
cmc
pop
mov
mov
fimul
jmp
pop
aas
jae
fs
pusha
cmp
push
(bad)
lods
xchg
sub
out
mov
cli
xor
mov
inc
shl
mov
popf
in
jge
mov
jmp
cmc
mov
fnstenv
sub
loope
sub
xor
scas
mov
mov
xor
mov
or
sar
xor
mov
add
cmp
ror
mov
dec
nop
dec
inc
mov
sti
in
mov
je
and
cmp
fisttp
stos
adc
lea
inc
inc
test
xor
cmp
pop
test
cli
cwde
jmp
xchg
outs
sub
sar
(bad)
adc
in
in
mov
add
mov
and
cs
cmc
and
lock
or
ins
push
xor
ficomp
retf
scas
pop
lahf
and
xchg
pop
or
mov
jg
xchg
mov
(bad)
js
adc
rcr
xchg
iret
jg
fidiv
jbe
test
lods
test
mov
call
adc
push
cdq
fsub
jbe
into
shr
shl
jg
jmp
retf
jl
sahf
mov
aas
retf
xor
dec
repnz
gs
(bad)
fsubp
xchg
xchg
outs
fild
push
sbb
mov
mov
ret
xor
out
pop
adc
add
cld
stos
loopne
jae
sbb
push
(bad)
or
push
(bad)
cmp
aad
setae
in
retf
ret
psrad
(bad)
movs
out
dec
push
ins
(bad)
mov
and
pop
fnstsw
mov
aaa
(bad)
stos
and
imul
xchg
bound
gs
xchg
push
leave
(bad)
popa
les
out
cmc
loop
shl
(bad)
pop
sbb
mov
js
imul
arpl
in
sbb
sbb
sbb
mov
js
imul
(bad)
fidivr
xor
sbb
push
in
ret
push
jecxz
push
js
sbb
arpl
push
shr
jl
out
adc
dec
mov
int3
pusha
pop
add
lock
aam
add
and
(bad)
arpl
xchg
sbb
icebp
outs
jo
push
das
cld
push
rcr
add
xchg
and
jne
mov
sub
in
push
jecxz
add
lds
cs
(bad)
xchg
fistp
iret
cmc
push
mov
stos
retf
adc
aaa
adc
sub
int
fld
bound
retf
inc
and
xchg
inc
dec
cli
movs
pop
push
push
xchg
add
inc
xchg
sbb
mov
jg
cmps
pop
pop
mov
inc
push
sub
sub
cmp
mov
stc
sub
fadd
shl
pop
test
jno
enter
mov
jo
aam
mov
test
shr
retf
inc
add
dec
mov
test
lods
imul
xchg
sub
push
mov
ins
out
jo
pop
into
push
or
ret
push
dec
adc
(bad)
jecxz
shl
mov
mov
loope
jb
in
adc
and
mov
test
stos
push
fs
test
xor
cmp
or
fwait
mov
ret
jmp
lods
hlt
mov
add
hlt
ror
push
ss
call
shl
(bad)
mov
pop
inc
jl
sub
mov
pop
in
inc
stos
repz
outs
rol
lock
outs
lea
pusha
mov
dec
mov
icebp
es
xchg
call
(bad)
int
retf
pop
js
and
jp
das
xchg
xor
iret
jnp
inc
adc
loop
jecxz
rcr
repz
mov
iret
mov
rcl
and
and
sbb
lahf
test
shl
icebp
arpl
jmp
xchg
mov
test
sub
icebp
mov
jl
gs
scas
jnp
cmp
inc
in
out
sahf
mov
lock
xchg
pop
pop
sub
adc
test
mov
aaa
inc
retf
cmp
xor
xchg
cmps
popa
jo
in
adc
push
or
in
sub
inc
jp
iret
jp
add
icebp
jle
(bad)
lods
push
out
(bad)
jg
out
xchg
test
sub
pop
stos
mov
inc
mov
sub
ins
movs
lods
jmp
sub
call
mov
mov
test
movs
and
iret
bound
test
mov
sub
inc
mov
add
pusha
out
idiv
leave
push
fs
jno
or
xchg
push
ds
retf
pusha
dec
pop
dec
fs
(bad)
xchg
and
push
loope
cli
rcl
pop
rcr
mov
sub
inc
ds
mov
or
add
or
mov
mov
(bad)
push
push
sub
pop
jb
xchg
and
xor
xchg
scas
iret
iret
iret
xor
rcr
adc
add
repnz
jle
mov
imul
jg
cmp
ret
mov
mov
cs
add
ja
adc
and
or
dec
dec
arpl
or
movs
dec
push
fist
push
rcl
sub
mov
add
mov
or
mov
jge
movs
and
je
cli
inc
(bad)
aad
bound
xlat
popw
loopne
add
mov
pop
pop
outs
sub
es
jmp
ficom
int
dec
(bad)
xchg
jb
mov
push
aas
adc
jecxz
jo
pop
dec
fst
gs
out
push
loop
movs
stc
arpl
imul
push
sbb
cmps
iret
mov
jne
(bad)
daa
out
push
or
xor
xchg
dec
or
or
mov
sti
jmp
sub
xchg
push
pushf
mov
inc
push
xchg
pop
dec
mov
fiadd
push
mov
repz
pusha
retf
cmp
push
fisub
scas
or
inc
dec
js
or
stc
push
fidivr
and
mov
mov
adc
movs
outs
mov
adc
fs
pop
nop
outs
out
inc
mov
jmp
hlt
mov
cdq
inc
add
add
nop
mov
add
out
ret
xchg
mov
icebp
dec
shr
(bad)
outs
cld
mov
mov
push
sub
sbb
mov
dec
xchg
das
push
cld
adc
aam
imul
ret
scas
or
dec
add
mov
xlat
shr
ret
out
xor
es
retf
xchg
sahf
mov
and
adc
mov
inc
xor
mov
fcmovnbe
mov
sub
fadd
pop
retf
mov
mov
enter
dec
stos
or
mov
(bad)
jg
inc
es
pusha
mov
inc
pop
lds
jmp
addr16
shl
push
pop
in
loopne
or
lock
inc
leave
push
xchg
push
mov
pop
mov
js
jmp
push
cmp
sbb
das
xchg
popa
sbb
dec
push
dec
(bad)
outs
jmp
loopne
pop
xor
cs
call
pop
jne
pushf
pop
aad
imul
in
xchg
add
fwait
idiv
sub
test
inc
aam
ror
in
push
mov
push
and
xor
lock
shr
pslld
cmp
fsub
push
add
rol
jg
mov
shl
outs
jbe
in
(bad)
push
add
popa
nop
out
imul
cdq
fsub
scas
in
adc
jmp
mov
(bad)
push
mov
enter
mov
cmc
or
cs
adc
fdiv
and
adc
push
jle
push
pop
jnp
add
mov
mov
out
jns
sub
sub
cmps
pop
shl
add
xlat
(bad)
fiadd
and
push
loopne
push
cwde
imul
test
push
mov
and
and
inc
int
lods
sti
mov
sub
(bad)
mov
dec
es
(bad)
sbb
test
cmps
sar
xchg
mov
int3
sub
and
scas
sbb
scas
mov
xchg
hlt
mov
les
(bad)
pop
mov
mov
mov
pop
mov
mov
mov
in
test
jl
(bad)
(bad)
jl
dec
xor
push
es
fist
push
sbb
popa
adc
and
inc
cwde
jbe
and
jns
xchg
jb
jo
gs
pop
stos
push
sbb
cmc
test
mov
in
adc
dec
(bad)
xlat
jl
dec
add
push
ss
jmp
retf
inc
call
mov
jle
fst
mov
rcl
sar
adc
jo
ret
(bad)
and
sub
sub
adc
cmp
sub
push
mov
loope
(bad)
xor
lods
mov
int
cld
sub
fidiv
(bad)
cld
lods
dec
psubusb
call
daa
adc
jne
pusha
in
icebp
pushf
sar
fsubp
mov
sub
jge
fs
das
fwait
or
je
mov
and
shl
pushf
jb
mov
cmps
cmp
and
ror
call
inc
retf
loope
push
data16
das
scas
idiv
ja
stos
scas
sti
movs
or
jecxz
(bad)
arpl
das
nop
inc
jl
push
bound
push
repz
test
retf
adc
adc
xchg
sbb
sahf
mov
mov
out
cwde
aas
mov
cmc
cmp
add
scas
cmp
jg
push
adc
pop
jo
test
(bad)
adc
or
retf
jl
rol
inc
data16
add
cmps
div
scas
stos
dec
sub
shl
(bad)
push
clc
cmp
(bad)
mov
(bad)
scas
call
and
add
(bad)
outs
jg
and
mov
sub
mov
and
or
pop
je
pop
push
push
and
mov
daa
xchg
inc
pop
test
pop
xchg
add
fcomp
pop
mov
mov
test
xor
xor
cmp
xchg
(bad)
mov
pop
ret
mov
mov
xchg
mul
xchg
add
xchg
push
add
pushf
(bad)
js
mov
rcr
pop
sti
mov
xor
add
pop
dec
push
add
xor
jnp
jecxz
(bad)
mov
jne
sti
lahf
shl
jbe
fnstcw
sub
pop
inc
sbb
aaa
pop
hlt
mov
mov
pop
xchg
mov
pop
ds
inc
jbe
push
retf
cs
je
mov
outs
dec
inc
rol
mul
or
mov
ja
mov
out
mov
jmp
push
test
das
movs
fwait
out
push
repnz
inc
fcomi
mov
push
jbe
ret
in
addr16
ins
gs
and
xlat
mov
sub
call
retf
scas
mov
lods
pop
mov
or
dec
push
bound
mov
add
mov
inc
lahf
mov
icebp
loope
retf
pop
hlt
movs
xlat
fs
(bad)
rcl
popf
loope
jl
dec
aam
das
sub
into
pop
adc
push
and
inc
push
and
sub
mov
add
fiadd
push
out
lods
loopne
push
xor
call
shl
inc
fimul
addr16
pop
sbb
dec
test
push
out
mov
jbe
scas
addr16
test
sub
xor
inc
or
lock
je
dec
out
inc
xor
mov
sbb
imul
inc
xchg
adc
outs
es
inc
dec
lods
jp
call
adc
pop
stos
sub
iret
cld
push
scas
xchg
mov
lods
push
fnstsw
push
mov
adc
popa
and
pop
cdq
sub
aaa
jo
pusha
push
lods
inc
mov
(bad)
jbe
jb
lods
pop
cmp
sub
push
dec
dec
pop
or
icebp
mov
pop
cmps
lds
jl
xchg
mov
xor
inc
retf
mov
in
dec
sbb
push
nop
mov
pop
cmp
int3
cs
jp
jge
mov
es
adc
dec
(bad)
icebp
cdq
popf
mov
adc
jecxz
outs
pop
mov
pop
inc
jbe
mov
fdivp
das
or
xchg
inc
dec
cmps
cmp
and
jbe
xor
dec
mov
xchg
push
and
repz
retf
jecxz
add
stos
push
xor
fmul
mov
add
stos
popf
push
mov
add
xchg
sub
push
shr
add
enter
xchg
fnstsw
call
enter
bound
pushf
fild
jae
push
xchg
rep
sbb
test
add
xchg
jnp
xchg
push
retf
push
call
and
imul
xor
stos
jae
inc
dec
fld
xchg
xchg
rol
mov
mov
mov
data16
stc
jns
fs
xchg
mov
mov
pop
scas
jecxz
pop
les
mov
cdq
and
outs
mov
jne
mov
add
push
dec
aam
into
cmp
in
fdiv
dec
sbb
mov
sbb
pop
rol
xchg
stos
push
ror
loopne
pop
mov
sbb
add
loopne
xchg
lahf
add
dec
loop
mov
(bad)
out
pop
cmp
pop
cmp
inc
sar
int
(bad)
out
push
mov
xor
rcl
enter
fidiv
mov
ds
(bad)
xchg
ror
mov
leave
mov
shl
add
cs
in
(bad)
(bad)
jg
fisttp
add
pop
mov
loop
lahf
push
(bad)
jmp
jmp
ds
mov
arpl
in
dec
jmp
sub
jne
or
pop
push
push
mov
outs
pusha
or
push
jnp
aas
(bad)
cmp
dec
adc
arpl
stc
cmp
rcr
fisubr
loope
adc
(bad)
push
cmps
xchg
pop
int3
ins
jne
adc
adc
es
mov
sbb
das
aam
and
call
xchg
dec
fxrstor
into
sti
stos
lahf
push
addr16
fwait
mov
cmps
lds
call
xchg
inc
les
xchg
cmp
repz
jmp
sub
addr16
mov
cmc
arpl
or
ins
xor
sbb
dec
inc
(bad)
sub
pop
scas
cmp
mov
sbb
or
inc
out
jp
xchg
shl
xchg
pop
movs
mov
cmp
inc
mov
and
arpl
ror
cs
cmc
sti
into
jmp
lea
xchg
cmp
shr
mov
sub
lock
sbb
iret
fstp
jae
retfw
arpl
mov
and
daa
jmp
(bad)
push
dec
sub
or
push
mov
push
inc
ins
daa
xor
jne
pop
fstp
scas
test
and
pop
enter
sbb
out
fwait
inc
loope
dec
jmp
call
lock
mov
cld
(bad)
push
cmps
sbb
jl
xchg
popa
dec
scas
dec
out
mov
xlat
jl
mov
imul
out
pop
adc
int3
lock
and
dec
stc
mov
ror
add
push
test
dec
push
repnz
sub
rol
inc
gs
cmp
js
pop
arpl
inc
adc
adc
mov
and
sbb
push
adc
(bad)
mov
nop
jmp
or
pop
push
fld
jmp
aam
fdivp
mov
jns
inc
push
dec
xlat
xchg
fistp
xchg
pop
into
cmc
repnz
mov
push
xchg
push
adc
jl
mov
mov
xchg
mov
mov
in
sub
sbb
xor
aam
add
dec
rol
out
jbe
sbb
mov
test
fs
xor
add
jle
lds
mov
jge
daa
out
pushf
and
adc
mov
dec
test
pop
test
cs
push
in
mov
jno
fistp
or
xchg
movs
iret
cmp
shl
cmps
push
push
div
movs
or
add
in
int3
aaa
leave
jno
add
(bad)
aas
sti
push
scas
add
lods
out
pop
stos
adc
push
jle
lods
loop
out
cmps
call
std
jecxz
push
sti
mov
shr
aaa
fidivr
ins
xor
fstp
hlt
xor
or
dec
repz
adc
dec
ffree
jge
faddp
jp
shl
sub
sub
sbb
mov
data16
sub
out
mov
test
add
je
imul
nop
stos
retf
ja
dec
and
fwait
daa
pop
mov
fisub
xor
sub
(bad)
scas
cmp
mov
shr
pop
lods
js
nop
push
xchg
add
js
test
ins
or
or
pop
adc
jp
dec
jl
mov
pop
loope
jae
xchg
xchg
je
jmp
pop
stc
mov
in
outs
mov
mov
dec
jns
mov
jbe
fs
cmc
cmps
push
lahf
je
inc
xchg
fnstenv
cmp
push
mov
jb
mov
xor
push
les
jne
ja
lds
mov
stc
or
jp
pop
mov
jg
test
push
iret
push
es
arpl
scas
pop
mov
test
pop
cwde
xlat
int3
out
clc
pop
push
popa
mov
outs
jns
sub
outs
test
fistp
rcl
and
xor
mov
push
je
cmp
mov
dec
scas
sti
jmp
leave
test
and
push
pop
mov
and
add
pop
aaa
mov
mov
(bad)
popa
sahf
scas
out
les
add
out
or
adc
cmp
test
dec
gs
push
stos
sti
xor
hlt
out
fld
aam
mov
sub
mov
dec
(bad)
enter
arpl
popa
scas
stc
in
(bad)
and
inc
jle
mov
fistp
xor
das
mov
mov
pusha
mov
rol
mov
out
push
push
add
adc
repnz
sub
loopne
in
pop
jno
jecxz
push
jp
xor
xchg
daa
pusha
mov
aaa
(bad)
pusha
xchg
loopne
sar
imul
ds
or
out
(bad)
bswap
aas
push
imul
popf
pusha
and
push
mov
(bad)
xor
mov
jae
mov
pushf
adc
adc
out
data16
pop
ret
test
jle
mov
add
adc
dec
(bad)
inc
addr16
or
xchg
imul
jns
mov
xor
out
pop
sub
out
je
lahf
xlat
fsub
ret
jne
jp
addr16
es
jp
mov
or
(bad)
stos
sub
push
aas
sbb
xchg
call
inc
push
or
push
or
adc
dec
repz
adc
dec
push
and
dec
cmps
sub
movs
add
(bad)
pop
imul
cmp
iret
retf
ret
xlat
mov
mov
imul
hlt
sbb
jb
mov
adc
(bad)
sbb
(bad)
sub
mov
jg
inc
xor
int
in
xchg
pop
mov
jne
inc
xor
mov
(bad)
stos
ins
fwait
xchg
mov
adc
add
into
push
pavgb
mov
xchg
add
cli
pop
cmps
pop
xchg
mov
or
jecxz
xor
jb
add
cwde
jmp
cwde
pop
dec
shr
push
xor
loope
dec
bound
pusha
scas
lods
xchg
push
loopne
pop
bound
sbb
int
sbb
js
pop
ret
das
(bad)
arpl
or
aad
add
in
xchg
push
sub
pop
adc
mov
sub
cli
out
cs
mov
and
mov
popf
ret
stos
enter
ss
loope
push
mov
in
push
(bad)
into
add
popa
lds
fisubr
xor
(bad)
retf
adc
sub
adc
ret
inc
pop
and
pushf
mov
imul
jl
ffreep
pop
xchg
mov
jbe
xor
popa
call
lahf
sbb
ja
inc
jl
into
inc
je
xchg
fstp
dec
sub
out
(bad)
dec
in
xlat
mov
inc
ja
sar
js
jne
(bad)
and
and
clc
enter
outs
dec
jb
push
lds
sbb
pop
mov
mov
cmps
retf
shl
ja
pop
jno
xchg
fs
stos
bound
out
out
push
mov
mov
push
mov
add
adc
test
xchg
mov
imul
mov
add
sbb
cmps
test
out
add
loopne
mov
mov
dec
out
enter
add
lea
or
cmps
sub
add
out
xchg
icebp
ret
aaa
ret
js
enter
into
cmp
xchg
sub
jmp
inc
retf
fwait
rcl
call
das
push
cmp
shl
jge
mov
xor
sub
mov
and
and
inc
xchg
pop
push
xchg
or
adc
jb
ss
test
push
je
sar
pop
mov
daa
lods
ja
repz
clc
jbe
mov
scas
inc
scas
punpcklbw
sub
or
pushf
retf
icebp
dec
and
stos
inc
push
ret
fcmovu
scas
fistp
xchg
push
fstp
sti
push
cmps
and
dec
lahf
jno
shl
into
ret
test
pop
(bad)
mov
enter
(bad)
daa
or
movs
js
aam
push
pop
scas
pop
xor
xchg
jbe
adc
mov
enter
push
fldenv
nop
sahf
xor
mov
enter
imul
push
pop
xchg
dec
pop
sub
mov
ss
(bad)
call
ins
popf
xchg
and
out
add
icebp
in
stos
sub
sahf
add
push
push
and
daa
stos
scas
dec
lods
pop
arpl
jecxz
jl
xchg
scas
push
xchg
mov
sbb
leave
data16
mov
sub
mov
rol
test
xchg
not
or
adc
imul
enter
mov
rcl
jle
xchg
and
xor
and
or
lock
enter
mov
push
fld
jbe
sub
sub
adc
out
repnz
jle
or
jne
push
jecxz
(bad)
and
sub
fidivr
pop
shl
icebp
es
mov
je
repz
jg
or
push
ror
sub
arpl
cmp
adc
jmp
adc
push
mov
hlt
icebp
jl
mov
stc
sbb
cmc
mul
int
call
adc
jg
dec
and
and
sti
jle
jp
data16
cmovae
outs
sbb
adc
cmps
xchg
sbb
sub
xlat
cmp
cmp
or
jge
pop
mov
xor
xchg
repz
push
jae
sub
mov
mov
dec
jl
jnp
test
jge
or
ss
test
stos
inc
mov
scas
ins
loope
sbb
or
scas
jno
int
dec
push
jle
jge
xlat
pop
or
adc
xor
add
sub
adc
cwde
out
xor
retf
idiv
pop
mov
stc
sub
in
rcr
push
push
cmc
fstp
(bad)
cmp
xor
rcr
enter
inc
loop
push
mov
push
call
push
add
nop
retf
push
jl
dec
mov
xlat
bound
cmp
in
jae
leave
jbe
sbb
xor
or
lock
call
aad
leave
push
mov
mov
cmp
cli
mov
rol
add
cdq
pop
fsub
test
xchg
retf
pop
pop
int
(bad)
dec
pop
fild
push
mov
in
sub
mov
xchg
push
push
cwde
or
lea
sub
xchg
iret
hlt
js
xor
sub
adc
out
cmc
ret
rcr
jge
xor
pushf
cmp
rcr
jbe
mov
adc
mov
fwait
iret
shl
sbb
xor
das
jmp
retf
and
lods
push
cmp
jle
inc
or
push
sar
jne
jl
je
or
mul
jns
stos
push
xchg
jno
int3
scas
sub
xchg
xchg
(bad)
stos
adc
int
add
push
jle
jbe
mov
adc
cdq
mov
mov
aaa
dec
push
push
pop
xor
xor
cs
aaa
stos
pushf
pop
hlt
xchg
and
lods
mov
push
outs
mov
jmp
call
call
xchg
pop
ret
xor
adc
push
fwait
sub
and
adc
je
add
mov
jl
sub
scas
pop
inc
dec
call
cs
repnz
cmc
outs
test
dec
mov
pop
adc
xchg
xor
cmp
inc
xchg
stos
movs
pusha
pusha
stc
jnp
add
push
call
push
adc
loope
jo
dec
popa
xchg
jecxz
sbb
imul
mov
imul
scas
adc
mov
push
jp
dec
les
and
push
xchg
aaa
dec
sub
bswap
xchg
lds
ja
pop
test
pop
(bad)
stos
inc
jne
sub
mov
dec
sub
je
push
xchg
add
fwait
mov
enter
out
xor
inc
and
xlat
dec
xor
xchg
out
ja
inc
xor
mov
out
repz
(bad)
xor
adc
fild
xchg
(bad)
xlat
loop
sub
aas
mov
cmp
aad
mov
test
push
lods
add
ins
ret
icebp
sbb
sub
and
xchg
and
inc
sub
out
scas
or
outs
je
adc
into
sahf
imul
in
pop
stos
les
ins
jns
add
stos
pop
xchg
ficom
loope
and
test
ret
adc
push
call
jne
stos
sub
mov
aad
repz
aaa
dec
cmp
stc
ficomp
(bad)
jp
in
or
fs
ret
fs
ror
(bad)
ds
adc
dec
icebp
inc
lods
sti
stos
add
mov
jbe
mov
pop
lahf
cwde
mov
jle
dec
cmp
cmp
(bad)
jnp
xor
call
sbb
xor
xchg
xchg
mov
aad
sbb
scas
inc
scas
push
imul
fcomp
fild
jg
(bad)
gs
mov
loope
sbb
sbb
add
std
arpl
js
(bad)
sub
and
cmp
jno
mov
mov
sbb
push
pop
aas
and
sub
sub
pop
xor
xor
xchg
(bad)
mov
sub
ret
scas
popa
les
out
in
push
sbb
adc
mov
lock
push
pop
sub
xor
aas
xchg
bound
jg
mov
aas
retf
call
add
mov
test
push
or
mov
push
pop
out
lods
xchg
hlt
ret
ret
sti
inc
jnp
rol
lods
aaa
imul
lods
or
fbstp
ins
mul
dec
cmp
outs
arpl
fiadd
jnp
dec
push
gs
lods
jecxz
xchg
(bad)
mov
pop
(bad)
pop
mov
cmps
add
popa
loopne
xlat
in
retf
sub
mov
js
fdiv
mov
jno
ja
(bad)
mov
jl
stc
rcr
pop
push
(bad)
xlat
add
adc
jmp
hlt
inc
and
scas
pop
xor
jbe
mov
mov
jmp
sub
(bad)
sbb
inc
mov
sbb
inc
mov
stos
and
lods
mov
clc
mov
mov
repnz
mov
cmp
imul
pusha
or
arpl
or
jmp
mov
jns
fadd
sbb
lock
retf
jmp
inc
xchg
and
fstp
cmc
pop
retf
into
repz
out
sar
arpl
sub
retf
push
cmps
(bad)
(bad)
push
xchg
mov
push
inc
mov
jo
pop
ret
stc
xor
(bad)
fstp
ror
pop
scas
jb
mov
or
push
call
mov
and
inc
adc
enter
xor
icebp
mov
scas
add
not
lds
push
mov
lods
jl
push
sub
loope
push
shl
(bad)
mov
push
jge
wrmsr
iret
loop
and
in
das
and
mov
pusha
(bad)
das
push
out
cmp
mov
add
test
mov
push
pop
mov
fdivr
fnstenv
sar
xchg
xchg
in
hlt
mov
mov
adc
push
and
mov
ret
xchg
mov
(bad)
push
xor
mov
push
and
(bad)
(bad)
pop
fs
test
ret
dec
pop
mov
xchg
xchg
fisub
and
or
sub
or
ins
mov
stos
mov
inc
push
pop
xor
jns
(bad)
ffree
xor
cmp
arpl
fadd
and
mov
ins
repz
cmp
pop
mov
xor
fsin
mov
push
jmp
add
add
mov
addr16
(bad)
or
pop
sbb
in
pop
mov
ficomp
clc
dec
iret
gs
xor
mov
xchg
xor
inc
ins
dec
ds
pop
xchg
push
pop
stos
jge
(bad)
nop
push
(bad)
xchg
ficomp
lods
mov
inc
out
outs
sbb
mov
fidivr
push
mov
iret
out
xor
add
std
xor
cmp
or
loopne
adc
and
xchg
and
mov
(bad)
into
push
aas
xor
sbb
push
ins
std
jbe
push
jns
movs
xchg
jns
push
loope
fist
and
push
retf
out
pop
and
jg
es
push
add
pop
xchg
jle
dec
inc
mov
sbb
mov
xchg
dec
jg
jo
mov
mov
pop
mov
adc
hlt
cmp
(bad)
sbb
or
add
ret
(bad)
pop
fistp
jbe
xchg
xor
out
or
and
test
rcr
mov
sbb
push
add
mov
adc
sub
movs
imul
and
jmp
cmps
mov
cmp
pushf
add
arpl
push
xor
lds
idiv
mov
mov
imul
jmp
outs
push
movs
dec
sar
aas
stc
fadd
mov
and
dec
mov
fnstenv
and
das
xchg
test
fs
sbb
lock
ror
retf
stos
setle
push
xchg
retf
dec
stos
sti
jbe
inc
fwait
sub
cwde
fucomip
out
dec
and
retf
push
mov
neg
retf
xor
mov
pop
fdiv
mov
leave
in
push
nop
dec
pop
ss
sbb
popa
loopne
repnz
call
cmps
loope
test
jbe
xchg
mul
xlat
pop
retf
push
push
xchg
int
pop
clc
out
imul
hlt
ret
cs
adc
xchg
sar
sub
ja
adc
push
jno
dec
pop
cmp
jae
test
shl
sbb
(bad)
jmp
js
mov
mov
jbe
rcl
sub
mov
scas
(bad)
sahf
adc
in
sub
push
les
add
mov
stc
xchg
sub
stc
imul
cmp
add
jbe
dec
xchg
sub
inc
lods
xor
pop
jb
and
xor
in
jo
mov
rcr
mov
add
rcr
xor
fidiv
inc
fbstp
test
dec
or
push
adc
das
fsubrp
mov
mov
jg
pushf
or
not
xchg
mov
(bad)
loope
cmp
popa
sbb
mov
iret
xchg
push
mov
sbb
and
mov
push
ror
mov
fidiv
neg
mov
shr
push
add
lahf
(bad)
dec
push
add
and
and
loop
repz
pop
test
cmp
and
clc
xor
xchg
inc
push
pushf
xlat
ret
(bad)
and
add
and
retf
jbe
pop
dec
push
ja
sbb
adc
pop
sar
movs
movs
jecxz
mov
push
shl
lock
jmp
std
fsub
add
fadd
push
test
or
dec
jmp
ins
push
mov
scas
jecxz
aas
mov
test
sbb
ss
inc
mov
lea
push
repz
xchg
stos
idiv
loope
call
call
rol
mov
dec
cdq
daa
sub
or
addr16
sti
fcmovu
mov
pop
out
inc
mov
jbe
test
inc
xlat
dec
add
in
push
aad
inc
xor
aam
mov
cld
frstor
pop
(bad)
push
fdiv
sbb
pop
stc
repz
mov
fiadd
inc
mov
mov
cmp
stos
lods
jo
aad
aas
and
call
add
shl
cdq
sbb
mov
inc
jbe
rcl
mov
adc
cmps
jnp
iret
lods
inc
es
sbb
out
mov
push
xor
or
iret
push
xchg
sub
or
(bad)
jns
shl
sbb
mov
aas
leave
idiv
outs
sub
stc
jb
jnp
scas
stos
jmp
cmp
mov
adc
jmp
mov
je
mov
je
push
jle
arpl
xor
packsswb
cmp
push
loop
push
(bad)
das
into
sahf
mov
pop
mov
sub
das
ret
push
inc
outs
(bad)
mov
inc
stos
cmp
dec
push
shr
fsub
push
add
out
push
ja
pushf
or
cmps
ror
inc
xchg
fwait
aaa
rcl
push
adc
mov
add
mov
jbe
or
sbb
sbb
inc
(bad)
lock
adc
es
icebp
sbb
imul
(bad)
mov
or
jne
(bad)
fisttp
ror
sti
push
call
stos
outs
mov
mov
jle
jle
test
pop
and
cmp
jle
adc
add
clc
cmps
mov
cmp
loope
leave
mov
repz
out
sar
test
jo
scas
aaa
push
pop
add
rsm
out
push
sub
jae
nop
xchg
mov
pop
dec
(bad)
adc
xchg
push
lahf
or
call
push
mov
xchg
sub
jl
fidivr
mov
mov
cwde
push
sub
inc
stos
je
ss
jg
mov
and
xor
pop
outs
push
mov
(bad)
pop
sub
rcr
or
(bad)
jl
mov
cmps
dec
daa
shr
inc
add
in
icebp
jl
inc
jle
add
dec
shr
aaa
mov
js
jle
imul
mov
rcr
add
add
sbb
mov
mov
add
clc
sbb
ins
iret
ficom
stos
fwait
aad
mov
or
mov
ret
test
sub
ds
mov
mov
not
mov
add
and
pop
xchg
iret
mov
aam
xchg
call
outs
mov
jle
leave
call
cmps
add
inc
sbb
fnstsw
push
mov
mov
(bad)
into
inc
jo
fiadd
iret
aam
sub
sar
jnp
jmp
adc
ret
mov
push
xor
and
dec
and
fdiv
fs
outs
jae
into
(bad)
outs
adc
jbe
pusha
fild
mov
xor
or
data16
jecxz
stos
pop
jmp
mov
ret
arpl
ss
icebp
push
sbb
into
cs
fwait
ret
xchg
cmp
fdiv
movs
in
mov
fbld
addr16
mov
xchg
sbb
movs
(bad)
scas
enter
xchg
jns
not
or
sub
out
dec
les
aam
stc
mov
je
pop
rcl
add
mov
pop
jbe
(bad)
fcomp
cmp
dec
mov
sahf
mov
stos
fwait
mov
outs
cmp
sbb
jle
xchg
mov
adc
or
daa
loopne
das
cmp
inc
mov
out
dec
push
into
call
stos
aam
mov
addr16
shl
movs
jne
sub
mov
sub
popa
fist
xor
arpl
mov
inc
loopne
dec
hlt
lods
stos
push
xchg
test
out
enter
xchg
ja
imul
loope
dec
mov
lods
sub
shr
or
test
clc
mov
bound
out
aas
fild
push
push
xchg
mov
mov
and
int3
jl
mov
js
clc
push
out
push
shl
jp
sbb
xchg
arpl
mov
and
add
aaa
push
cmp
stc
stos
fild
xlat
inc
scas
pop
xchg
(bad)
sub
xchg
repnz
push
lea
stc
(bad)
xor
call
and
mov
test
ss
and
sbb
scas
push
mov
jno
push
scas
mov
test
stos
in
sub
xlat
xor
pop
(bad)
shr
hlt
push
or
loop
sub
lock
pop
scas
jnp
sub
push
dec
jmp
stos
dec
movs
mul
in
jne
arpl
jl
xchg
mov
fs
inc
xchg
dec
inc
sub
push
xor
loope
pop
pop
cld
es
dec
out
jle
dec
and
push
mov
jo
add
hlt
mov
nop
sbb
rol
loop
jbe
mov
out
(bad)
std
dec
mov
imul
pop
inc
ins
mov
or
lds
push
jns
gs
jb
ins
sub
cld
pop
(bad)
jne
jo
cmp
inc
or
retf
ror
neg
cmps
add
addr16
lds
ret
(bad)
pop
ss
cmp
int3
and
test
in
mov
iret
call
ret
rol
int3
ja
cmp
jo
sbb
cli
push
xchg
and
(bad)
cmc
xrelease
sbb
loopne
ss
push
mov
add
fsubr
jp
cmp
and
call
lahf
jl
jecxz
call
mov
loope
mov
sub
xor
xchg
ins
(bad)
sub
fist
push
fimul
sub
inc
jmp
cmps
rol
inc
out
push
cmc
adc
jno
pop
jecxz
ja
ja
(bad)
(bad)
cs
mov
add
scas
ja
ins
inc
data16
outs
stos
pop
rol
and
cmp
push
loop
mov
(bad)
mov
retf
cwde
dec
mov
(bad)
rcl
sbb
inc
xchg
adc
(bad)
cwde
sub
add
scas
scas
cmps
mov
push
mov
movs
mov
sub
lock
cmp
mov
rol
ja
sbb
div
ds
sub
or
loope
out
mov
(bad)
repnz
mov
mov
mov
iret
dec
aam
dec
adc
into
ret
or
rsqrtps
lds
call
movs
test
(bad)
(bad)
mov
test
and
outs
idiv
(bad)
rcl
ds
sub
aad
cs
clc
dec
fwait
jg
add
icebp
jge
(bad)
jmp
xchg
and
and
xchg
sub
inc
int3
add
in
and
jne
push
sub
or
push
dec
jbe
pusha
sbb
jg
dec
push
in
dec
jne
ret
dec
dec
int3
retf
push
in
push
nop
or
les
push
int3
add
pop
inc
mov
repz
arpl
mov
ins
int
call
out
ins
stos
jg
test
and
push
xor
cmp
or
retf
jbe
das
mov
xor
loope
push
es
popf
mov
ins
add
jnp
imul
pop
adc
or
mov
xor
xor
lahf
jmp
pusha
adc
dec
xchg
push
push
xor
cmps
xor
retf
pop
mov
lock
fisubr
push
cli
and
int
push
js
aas
mov
mov
stos
outs
sbb
movs
retf
jae
xor
sub
sub
or
cld
and
(bad)
sqrtps
shl
sub
and
adc
addr16
adc
jo
mov
(bad)
pop
fsubr
cs
mov
sar
adc
mul
mov
mov
add
push
push
fisubr
cmp
icebp
scas
pop
add
sub
sbb
ret
and
inc
push
ret
xchg
cmps
pushf
rcl
stos
add
jnp
sbb
mov
and
sbb
imul
mov
imul
mov
dec
data16
push
(bad)
fs
ret
mov
and
xor
cdq
add
ja
sbb
jmp
int
jle
sub
push
imul
test
loopne
sub
jb
inc
stc
ins
sub
lock
pop
into
lds
dec
xor
test
leave
push
shl
aam
and
sub
pop
fucom
mov
repnz
mov
mov
and
nop
pop
cld
dec
jmp
scas
(bad)
push
stos
push
retf
shr
inc
test
mov
and
loopne
ds
inc
cs
or
aad
mov
in
(bad)
jmp
mov
push
mov
inc
xor
mov
jmp
push
xor
fdivr
mov
mov
scas
leave
adc
push
or
cmp
js
(bad)
mov
or
out
and
jnp
cld
sbb
syscall
into
sbb
inc
pop
sbb
sub
addr16
div
add
(bad)
push
in
arpl
nop
inc
daa
call
arpl
dec
mul
xchg
xchg
sub
push
shl
mov
fwait
loopne
scas
inc
nop
mov
lods
and
jg
push
adc
mov
repnz
xchg
popa
nop
scas
scas
ja
sti
xchg
mov
jg
arpl
pop
pusha
call
scas
cmp
adc
add
fisttp
lods
jge
and
mov
cmp
or
cmp
pop
dec
pop
cs
jle
pop
xor
mov
stos
push
jnp
inc
xor
xchg
lea
aas
shl
cmp
add
cmp
dec
daa
mov
jle
add
sahf
inc
je
shr
ja
rol
scas
rol
adc
ret
pop
cs
popf
mov
push
test
cmp
mov
hlt
xchg
or
les
cmps
out
sub
mov
pop
dec
inc
loopne
mov
retf
mov
or
xor
xchg
jb
iret
cmp
push
jmp
fwait
mov
pusha
clc
cmp
push
loope
jecxz
sti
xor
jecxz
inc
cs
push
push
ja
sbb
jp
mov
rcr
lock
ret
sub
mov
pushf
aaa
cmp
inc
cmp
jnp
push
xlat
pop
push
push
or
in
cmps
lock
sbb
push
mov
lock
bound
jne
push
push
scas
mov
cmps
mov
loope
xchg
lods
stos
scas
adc
out
mov
(bad)
cmp
sub
out
gs
aas
ret
push
into
cld
scas
mov
push
inc
and
inc
adc
and
arpl
add
retf
mov
sbb
mov
mov
ja
ret
dec
cld
adc
and
inc
rcl
in
addr16
mov
ret
dec
sbb
ror
ins
(bad)
jecxz
stc
lods
cmp
mov
mov
mov
lahf
imul
adc
adc
jno
mov
push
lods
shl
xchg
cmp
dec
push
jae
(bad)
pop
push
jo
jnp
push
retf
cmp
xchg
jmp
cmp
dec
test
dec
enter
add
sbb
jb
dec
and
ret
idiv
sub
imul
cmc
sahf
sbb
popa
push
pop
cdq
xor
jecxz
inc
pusha
sub
sbb
jae
jg
push
mov
sub
in
sbb
add
sub
cmp
inc
jmp
pop
outs
sub
ja
sub
xor
inc
or
mov
mov
test
xor
add
cmps
xchg
pop
int
or
add
jno
(bad)
jns
pop
ins
into
cmps
mov
std
fidivr
dec
sub
shr
mov
or
shr
mov
adc
lods
dec
cmps
push
hlt
or
add
sub
sar
nop
aaa
rcl
jae
sub
test
data16
pop
cmp
jo
out
clc
mov
sbb
icebp
ret
mov
mov
dec
sti
jnp
hlt
mov
enter
enter
loope
jp
cdq
and
and
icebp
inc
push
mov
xor
pop
jbe
sub
icebp
pop
adc
neg
inc
push
jle
pop
out
push
imul
clc
pop
push
add
sbb
jle
mov
fidiv
xchg
add
stos
pushf
pop
out
leave
mov
das
pushf
jb
pop
scas
arpl
add
jmp
jno
clc
cmp
ins
in
rol
bswap
mov
in
push
jmp
call
or
pop
popf
ins
sbb
xor
add
loop
std
or
in
dec
leave
and
sbb
push
adc
hlt
mov
mov
sub
jnp
arpl
cmc
lods
mov
les
fwait
repz
xchg
ins
cmp
std
push
inc
xchg
fsub
push
bound
sub
and
jge
arpl
test
add
and
dec
je
and
(bad)
pushf
inc
and
call
scas
fdivr
adc
imul
scas
test
mov
sub
repz
fild
push
sti
sbb
jle
loop
sbb
scas
add
mov
jmp
and
int3
jmp
and
pop
sbb
jae
sbb
test
xlat
add
fild
ret
imul
mov
push
test
nop
mov
clc
sub
je
xchg
mov
and
push
aaa
dec
mov
xchg
jns
sub
int
hlt
jns
cli
dec
repz
call
aas
cs
adc
fdivr
aam
push
xor
ss
hlt
xor
push
mov
add
leave
(bad)
cmc
out
jnp
fnstcw
test
dec
enter
leave
icebp
popf
idiv
adc
jae
mov
and
les
jmp
or
stos
mov
dec
jge
jle
mov
push
stos
jge
dec
pop
std
das
adc
dec
shl
or
cmps
mov
in
or
inc
stos
mov
pusha
dec
fldenv
(bad)
mov
jnp
out
test
out
(bad)
out
in
fisttp
mov
loopne
cwde
dec
jmp
popf
aaa
clc
shl
jne
sbb
outs
mov
dec
repnz
test
out
jne
adc
jmp
xchg
(bad)
jnp
test
cli
arpl
mov
into
retf
outs
lock
(bad)
pop
out
adc
in
aas
icebp
cli
xchg
push
ins
and
push
cmps
jp
xchg
xor
mov
mov
div
add
pop
out
cmp
adc
push
adc
imul
sar
mov
inc
or
mov
jge
push
(bad)
mov
inc
out
pop
push
rcl
add
jnp
lock
and
mov
mov
(bad)
fbld
mov
xchg
dec
mov
inc
stc
(bad)
aaa
int3
adc
cmp
jo
stos
bound
jne
js
gs
pop
lahf
mov
push
pop
add
inc
dec
pop
mov
cmps
inc
inc
jns
push
nop
jg
call
xor
pop
cs
xchg
mov
inc
test
cmp
lods
inc
retf
push
hlt
movs
repnz
dec
dec
jbe
movs
mov
imul
or
ret
icebp
inc
or
iret
aaa
call
movs
pop
stos
mov
ss
outs
rcr
dec
(bad)
lea
and
iret
sub
jl
and
xchg
mov
mov
push
lock
xlat
inc
jg
pop
jo
jecxz
mov
push
enter
cwde
push
ret
ret
pop
dec
icebp
sbb
dec
bound
sbb
and
std
jnp
add
jg
xchg
pop
mov
adc
jecxz
xchg
dec
mov
test
stos
push
push
jmp
out
movs
out
pop
inc
push
int3
jle
jp
arpl
retf
cmps
push
repz
scas
ja
mov
stos
jl
dec
inc
mov
mov
sbb
xor
es
icebp
adc
adc
and
hlt
test
mov
dec
ds
mov
pop
gs
not
enter
ins
and
or
enter
iret
retf
xchg
loope
adc
cmp
adc
sub
push
fnsave
cmp
dec
and
scas
clc
cmc
repz
retf
push
pop
sub
jl
cmp
add
push
je
push
or
xchg
inc
das
push
dec
cmp
aas
repz
jno
jmp
sub
scas
inc
mov
retf
cmp
in
push
lods
test
push
jne
in
cmp
push
rol
dec
js
idiv
scas
(bad)
mov
fs
ret
mov
cs
inc
push
test
(bad)
cwde
mov
mov
cld
fs
pop
push
aaa
inc
out
mov
cmp
pushfw
ret
pop
inc
test
stos
pop
xchg
inc
mov
mov
mov
xor
mov
mov
jns
lods
stos
test
add
cmp
daa
dec
ss
or
or
push
les
outs
retf
sbb
rol
stos
xchg
ss
sti
clc
das
das
or
(bad)
jmp
icebp
das
das
out
sub
inc
xchg
push
pushf
xchg
movs
pop
je
mov
hlt
mov
iret
mov
in
xor
mov
loope
cwde
inc
test
lahf
inc
(bad)
ja
push
test
(bad)
mov
dec
out
enter
dec
ins
mov
mov
xor
or
adc
sbb
push
mov
shr
es
movs
xchg
test
sbb
icebp
xor
ror
ins
xchg
movs
add
lock
pop
ins
fwait
push
push
aam
cmps
scas
iret
div
test
test
gs
sbb
sub
in
ins
jns
aas
or
dec
jmp
jp
cmps
or
dec
cld
ret
push
jmp
or
inc
loopne
sub
add
lods
lds
or
xchg
pop
rol
das
xlat
das
xor
xchg
pop
dec
push
jmp
mov
ja
pop
(bad)
setl
loopne
add
xchg
dec
xlat
iret
jno
(bad)
scas
(bad)
cdq
hlt
lahf
imul
xchg
xlat
popf
adc
in
adc
out
mov
lds
cwde
ja
push
dec
cmp
scas
adc
xchg
sbb
push
scas
add
(bad)
jb
jbe
xor
mov
call
cwde
mov
test
mov
(bad)
fadd
outs
mov
jo
stos
stos
pop
mov
jmp
or
mov
call
mov
(bad)
add
adc
pop
push
dec
ret
push
and
jne
sub
or
pushf
push
inc
repnz
je
nop
daa
in
pop
test
or
imul
and
xor
lock
adc
push
arpl
and
lock
xchg
mov
int3
push
push
into
stos
fxch
cld
into
sub
mov
sbb
mov
dec
push
fisubr
add
xchg
cdq
das
adc
cmps
pop
dec
cmp
push
jecxz
sbb
adc
shl
mov
mov
or
xor
mov
movs
cmp
jns
or
adc
call
push
push
into
es
call
or
mov
lock
sbb
sbb
sub
cmp
or
lahf
mov
sub
mov
mov
or
rol
jl
xchg
sub
ss
push
push
leave
call
(bad)
and
or
xlat
jnp
clc
adc
mov
jp
into
scas
jl
xchg
sub
repz
push
lods
pop
mul
push
xlat
test
cmp
(bad)
js
test
and
pusha
and
jmp
mov
sbb
cmc
mov
or
arpl
sbb
and
pop
int3
sub
mov
xor
lods
movs
daa
lahf
jecxz
dec
pop
adc
jbe
mov
push
push
xchg
jge
jle
jge
retf
loop
mov
adc
cmp
out
push
jae
push
les
out
add
das
test
xor
dec
retf
fcom
pop
add
loope
mov
jmp
adc
cs
xchg
icebp
fnstcw
lahf
mov
xchg
ror
int
js
dec
add
mov
mov
push
pop
lock
loop
icebp
arpl
into
mov
shr
xchg
pop
or
mov
ds
mov
add
xchg
test
pushf
hlt
mov
push
lock
sahf
adc
fs
pop
cmps
stos
xor
sbb
jae
mov
push
cmp
imul
jg
ficom
adc
sbb
lock
pop
std
movs
ret
jg
dec
push
rcl
mov
or
pop
jg
add
repz
and
aaa
pop
jl
aaa
psubb
out
mov
inc
mov
push
les
sub
adc
ds
movs
sbb
scas
push
arpl
stc
jns
addr16
fstp
repnz
add
cmp
inc
sbb
icebp
or
retf
ss
data16
mov
mov
fsincos
mov
push
fidivr
pop
mov
push
and
loope
jl
hlt
(bad)
(bad)
loope
gs
stc
jle
mov
mov
je
adc
addr16
add
push
mov
sbb
cmp
lahf
push
out
fisttp
scas
xchg
mov
adc
in
and
icebp
clc
fucomi
or
(bad)
inc
stos
xlat
mov
jo
xchg
mov
sub
jb
scas
xor
out
push
sub
ffree
sub
aas
mov
outs
out
push
clc
push
loop
add
xchg
mov
das
ror
outs
ss
stos
xchg
or
xchg
xchg
loop
icebp
arpl
popa
into
sbb
outs
scas
mov
xlat
add
pop
pop
mov
xchg
movs
cmc
pop
xor
xor
jge
sub
loope
add
cmp
or
cdq
sub
ror
outs
and
sbb
or
mov
sbb
mov
mov
jmp
jg
(bad)
adc
call
jmp
mov
mov
stos
test
jnp
loope
(bad)
data16
sub
add
push
shl
xor
adc
les
pop
mov
cmp
adc
shl
movs
test
pop
pop
arpl
dec
pop
jecxz
stc
add
clc
sti
lods
push
shr
retf
imul
dec
mov
inc
xchg
hlt
mov
(bad)
cmp
or
(bad)
test
out
enter
push
sub
dec
ret
data16
sti
shl
mov
push
retf
push
xchg
xchg
shl
jns
pop
clc
sbb
cmps
adc
and
aas
scas
cmp
js
scas
push
les
les
jmp
inc
stos
cmps
pop
add
aam
cdq
xor
loope
or
sub
test
jb
push
imul
movs
lea
push
cs
aas
push
(bad)
fucom
call
out
clc
aaa
push
mov
dec
push
out
cs
xchg
stos
jne
movaps
scas
mov
retf
pushf
aam
ja
jnp
mov
jge
dec
nop
icebp
neg
cmc
xor
or
into
mov
sar
call
sbb
dec
test
fld
xchg
mov
sahf
dec
cmp
xchg
mov
mov
xchg
mov
stos
mov
push
bnd
int3
fdiv
lea
mov
sbb
stc
sub
mov
push
repnz
or
mov
push
cmps
mov
dec
repz
cmc
xor
bound
and
es
add
inc
add
xor
xchg
das
test
inc
mov
sub
repnz
ret
adc
xchg
stc
inc
clc
rol
into
loop
fxch
ror
scas
and
and
xchg
or
dec
clc
fwait
out
or
repz
cmp
das
nop
sub
push
mov
cmp
int
sti
add
xchg
mov
jo
inc
(bad)
pop
das
mov
mov
mov
mov
les
jns
and
and
mov
push
nop
mov
mov
ins
neg
sbb
pop
adc
push
pushf
and
imul
neg
and
pop
sti
xlat
dec
xchg
ja
ret
scas
pop
movs
ret
sbb
inc
xor
mov
ror
push
adc
sub
and
enter
popa
or
dec
neg
pop
push
push
push
inc
xchg
push
mul
aaa
into
aas
aam
mov
inc
jne
jle
cmp
shl
repz
push
xchg
cld
pop
mov
mov
stc
movd
rcl
pop
dec
push
mov
xchg
xchg
imul
pop
mov
mov
mov
dec
movs
sar
xor
adc
add
push
jg
push
and
cmp
and
not
adc
mov
xlat
mov
push
shl
dec
popa
into
jb
adc
push
outs
loopne
cmps
pop
stos
add
pop
sar
(bad)
pop
addr16
mov
jle
mov
retf
mov
dec
sub
repz
nop
mov
adc
mov
adc
jnp
pop
jno
lock
mov
js
ret
fst
jmp
jle
jl
dec
pop
sar
neg
ds
jg
jmp
jnp
sbb
fstp
pop
das
sbb
mov
scas
das
test
xchg
pop
mov
retf
mov
sar
stos
call
push
xchg
jg
mov
mov
push
mov
shl
xor
sar
sbb
mov
or
jp
in
xchg
(bad)
jae
pushf
(bad)
shr
(bad)
pop
scas
add
push
add
pop
outs
int3
jg
xor
inc
mov
mov
push
sbb
push
push
out
repz
das
inc
enter
hlt
mov
das
xadd
inc
add
addr16
xchg
add
mov
mov
jg
mov
repz
scas
aam
mov
ja
cmp
lock
lahf
xor
int
pop
sub
out
mov
retf
push
fidiv
sub
and
loope
mov
sub
ret
outs
push
(bad)
icebp
fistp
je
ret
mov
mov
xchg
sub
lock
mov
clc
xlat
xchg
fst
(bad)
ja
adc
dec
jle
jg
dec
fimul
(bad)
pop
stos
loope
fst
(bad)
dec
xor
mov
adc
nop
sub
rcl
sub
pop
test
xlat
lods
xchg
xchg
jmp
jmp
not
icebp
sbb
adc
dec
lock
out
fisubr
adc
inc
shl
scas
mov
push
inc
rol
sti
push
int3
jmp
mov
push
outs
lds
inc
retf
add
shl
inc
jecxz
adc
xor
add
xlat
lods
test
xchg
pop
hlt
call
cdq
pop
xchg
lea
ja
dec
and
das
and
dec
popf
outs
jmp
and
(bad)
not
jbe
push
stos
pop
les
mov
add
push
dec
data16
call
ss
jmp
mov
fcom
sar
sub
neg
retf
movntq
jnp
sahf
pop
dec
push
jp
jnp
dec
dec
popa
test
cdq
sbb
(bad)
and
rol
arpl
ret
daa
fmul
push
enter
and
cmp
test
ja
xchg
xor
dec
test
push
out
(bad)
xlat
dec
clc
lods
push
icebp
out
xchg
and
repz
test
lods
(bad)
push
xor
cdq
(bad)
pop
dec
fcom
fs
or
ins
out
das
mov
pop
aaa
mov
adc
je
mov
fmul
dec
out
ja
mov
inc
test
mov
int3
pop
and
cmps
sub
dec
icebp
clc
es
sub
mov
push
xchg
dec
mul
scas
and
rcl
(bad)
movs
test
aaa
shl
ds
mov
les
mov
retf
or
dec
push
mov
xchg
lahf
scas
adc
push
add
xchg
scas
or
sub
inc
in
shl
mov
xlat
inc
mov
jnp
add
loope
jp
add
pop
add
push
cli
mov
imul
icebp
arpl
jecxz
pop
mov
mov
rcr
add
xchg
inc
fadd
xchg
mov
loop
dec
sub
inc
div
inc
add
push
push
mov
retf
retf
jl
dec
mov
scas
dec
push
push
xor
sbb
js
data16
jl
outs
jae
nop
mov
adc
shr
inc
adc
and
pop
mov
mov
aaa
mov
enter
ds
shl
dec
push
shl
lea
xchg
push
das
cmp
push
push
div
inc
mov
stos
mov
push
out
xchg
pop
mov
jmp
pushf
sub
and
pop
mov
adc
xlat
add
push
dec
or
cmps
inc
stos
mov
js
jb
inc
ds
pop
icebp
bound
rcl
hlt
fild
mov
and
push
push
dec
inc
outs
pop
dec
jp
xchg
sahf
outs
mov
adc
fistp
neg
int3
int3
lahf
adc
jae
or
nop
ins
lea
and
and
jmp
dec
shr
and
sub
or
mov
inc
ret
outs
xlat
ret
dec
retf
mov
fld
or
mov
rcr
ficomp
sub
in
les
pop
xlat
jnp
sbb
jp
jne
popa
push
adc
mov
push
sbb
int
mov
push
rcr
jle
adc
hlt
loopne
sar
adc
mov
lahf
push
repz
ficomp
sub
loopne
sar
and
leave
in
dec
or
push
pusha
iret
jg
or
repz
int3
scas
xor
jb
repz
in
xor
int
retf
idiv
lock
push
rcl
cld
test
stc
imul
retf
in
or
cwde
sub
inc
mov
push
or
cwde
gs
xchg
loop
inc
mov
jmp
push
inc
lea
pop
push
cmp
not
outs
xchg
fmulp
adc
dec
ss
cmp
aam
mov
mov
sub
sub
sar
retf
push
jp
imul
or
cmp
retf
(bad)
sub
dec
stos
out
ins
mov
mov
call
pop
nop
sub
rol
(bad)
dec
jmp
enter
mul
lahf
pop
cld
fs
(bad)
push
xor
scas
(bad)
mov
jo
mov
inc
pop
pop
(bad)
fwait
jmp
enter
inc
ficomp
mov
in
jge
outs
pop
cmp
pop
push
out
add
retf
js
push
aaa
mul
mov
jb
mov
sbb
mov
pop
fcom
das
pop
lock
dec
call
shl
fs
add
test
dec
movs
jp
int3
mov
jmp
dec
add
out
(bad)
mov
js
js
xrelease
mov
lahf
inc
sub
mov
pop
sub
rcr
lock
mov
sub
mov
leave
xchg
(bad)
fist
iret
loop
jge
movs
pop
sub
fist
push
adc
fld
and
in
adc
push
bnd
sub
inc
scas
sub
inc
ficomp
xor
adc
dec
mov
mov
(bad)
stos
pop
add
shl
jle
mov
sar
imul
repnz
imul
dec
cdq
loop
mov
(bad)
sub
xor
push
push
mov
(bad)
(bad)
push
retf
push
cld
push
jl
iret
mov
lock
iret
push
fs
adc
xlat
or
ret
dec
call
js
and
cmp
mov
scas
jns
push
fwait
sbb
into
inc
jle
jl
dec
pop
rcl
mov
sahf
adc
adc
xor
iret
das
push
pop
jp
ficomp
lea
xchg
aas
scas
cmp
fwait
sbb
iret
push
dec
xchg
jg
adc
or
pushf
and
repz
xchg
mov
test
mov
xchg
push
sbb
push
mov
pop
mov
xor
add
dec
imul
ret
pop
mov
pop
adc
adc
into
jl
sub
pop
mov
popf
push
mov
repz
neg
std
pop
test
and
ja
dec
jb
lahf
shl
into
jmp
push
xor
mov
rcr
sahf
adc
stos
xor
call
(bad)
out
mov
(bad)
sub
xor
xlat
push
mov
inc
(bad)
ins
(bad)
push
lock
cld
loope
mov
jno
dec
fst
retf
xor
repnz
jae
xchg
jg
cmp
xchg
frstor
loope
scas
push
stos
or
call
cmps
jmp
pop
adc
inc
scas
jmp
repnz
ficomp
repz
shl
iret
sub
or
pop
test
add
stos
pop
rol
daa
hlt
ret
pop
cmp
leave
das
ss
and
retf
inc
jo
sti
jp
les
in
sub
pushf
add
adc
adc
inc
add
mov
mov
fnstsw
pop
inc
push
mov
(bad)
mov
test
lock
dec
das
call
aam
xchg
or
std
push
(bad)
add
(bad)
iret
xchg
frstor
lahf
mov
cld
popf
scas
fmulp
xchg
call
mov
dec
cli
(bad)
(bad)
ss
pop
inc
(bad)
lock
jo
dec
push
mov
dec
das
jge
push
(bad)
jg
inc
retf
shl
adc
sub
xchg
sub
jle
das
addr16
sub
test
jne
hlt
add
adc
ret
rol
push
push
aaa
jmp
and
pmovmskb
imul
(bad)
stc
xor
push
clc
push
mov
lods
xchg
aas
cmp
popf
int
jge
mov
ins
(bad)
out
retf
jmp
mov
push
dec
xor
xchg
call
jnp
adc
push
or
jmp
inc
lahf
jbe
push
shl
push
mov
push
or
xor
sbb
jp
mov
cmp
jnp
pop
enter
les
jmp
and
push
int
fild
jle
ins
movs
test
push
mov
loopne
mov
push
mov
inc
stos
and
sti
ins
mov
fiadd
jg
in
test
call
loopne
mov
jmp
jno
and
outs
xchg
ins
fcomp
jle
inc
in
sub
sahf
jp
(bad)
xor
popf
retf
lahf
fild
jle
mov
test
mov
lea
jns
movs
test
repz
loopne
mov
jo
push
(bad)
jno
dec
and
sti
ins
add
jle
inc
in
mov
sahf
test
popf
out
ror
jle
fsub
daa
(bad)
loopne
mov
inc
mov
dec
sbb
(bad)
push
add
popf
push
jl
int3
fild
dec
push
jl
int3
fnsetpm(287
cmc
adc
stos
push
jl
int3
fcmovnb
cmc
adc
sahf
mov
fcmovne
(bad)
sbb
sahf
xchg
mov
add
inc
xchg
xor
and
mov
pop
adc
sbb
xchg
xchg
and
mov
cmc
shl
icebp
div
add
or
movs
jg
jnp
ins
mov
and
fbstp
dec
push
dec
add
jnp
fist
xchg
call
push
xlat
or
push
mul
fistp
cmp
dec
movs
or
clc
div
lock
ds
jns
es
fld
test
in
mov
cmp
(bad)
addr16
cmp
movs
pop
(bad)
fwait
sub
or
mov
fstp
pusha
imul
jg
sahf
dec
adc
out
outs
mov
pop
inc
pushf
ret
xor
xor
shl
(bad)
call
mov
push
push
not
jae
push
fadd
mov
push
sub
das
adc
(bad)
mov
test
fucomip
test
outs
xchg
mov
popa
fidiv
outs
xchg
mov
imul
shl
inc
and
and
lds
pop
dec
sbb
fs
movs
pop
aad
xchg
jnp
loop
mov
je
call
(bad)
cmp
repz
mov
das
xlat
xlat
vpackuswb
pusha
mov
dec
loopne
and
dec
inc
call
sti
(bad)
mov
fwait
aas
bound
cmps
push
neg
mov
push
and
adc
xchg
adc
mov
mov
das
and
out
mov
and
push
push
sbb
pop
outs
dec
dec
leave
jmp
sbb
cmps
mov
sub
test
aas
sbb
push
ret
es
clc
aam
or
xlat
cli
add
xor
cmp
cmp
repnz
scas
or
xor
rol
rcr
cmp
shl
int
inc
inc
push
adc
std
rcl
stos
(bad)
aas
hlt
add
xchg
sub
fwait
std
dec
add
and
pushf
ret
mov
and
hlt
daa
jl
jmp
xlat
add
lds
push
push
ss
in
cmp
mov
sbb
hlt
pop
in
(bad)
ds
pop
js
inc
adc
dec
jbe
retf
das
lock
mov
ret
push
test
pop
rol
lods
test
or
cmps
adc
mov
jne
cwde
fs
icebp
fld
mov
mov
sub
ins
outs
push
xlat
out
hlt
mov
(bad)
sahf
sbb
xchg
mov
mov
add
lods
xor
cld
hlt
xlat
adc
mov
repnz
(bad)
aam
cli
pusha
mov
call
inc
dec
sahf
div
lock
adc
add
repnz
daa
mov
ja
cmp
xor
aad
cmp
or
leave
outs
xor
xlat
push
cmps
adc
sbb
into
bound
into
inc
jmp
pop
das
int
scas
dec
mov
dec
out
mov
int
inc
in
inc
inc
neg
addr16
pop
imul
mov
ds
fs
stos
and
fwait
mul
aam
fwait
push
and
ret
inc
add
push
and
adc
dec
call
ds
leave
in
pushf
cmps
and
pop
xor
cmp
xchg
and
push
out
mov
jecxz
jge
pushf
out
mov
aas
and
lods
out
adc
or
mov
mov
lds
add
dec
arpl
push
out
xchg
and
and
call
dec
popf
(bad)
push
pop
add
push
and
adc
push
mov
repnz
iret
mov
enter
sbb
iret
(bad)
mov
mov
iret
je
ror
retf
fbstp
mov
mov
das
ja
ror
int
mov
ja
ror
int
mov
ja
ror
retf
pop
ja
ror
retf
outs
ja
ror
int
mov
lahf
fmul
int
mov
lahf
fmul
retf
pop
ja
fmul
retf
ret
lock
mov
add
into
adc
adc
push
enter
stos
iret
pop
sub
clc
(bad)
xchg
mov
fisttp
out
(bad)
fcmovb
jp
xchg
dec
loop
or
(bad)
ffreep
jp
xchg
or
fisttp
into
(bad)
ffreep
jp
xchg
leave
jecxz
or
(bad)
ffreep
jp
xchg
mov
fisttp
cs
(bad)
ffreep
jp
xchg
dec
(bad)
or
push
cli
xlat
call
jl
or
push
in
nop
(bad)
(bad)
pop
jl
leave
out
cld
nop
(bad)
(bad)
pop
jl
mov
push
mov
pop
jl
dec
fadd
pushf
nop
(bad)
fdivr
pop
jl
or
push
lods
nop
(bad)
fdivr
pop
jp
pop
xchg
pusha
mov
jnp
or
enter
xor
pop
jbe
push
ins
jbe
sub
sbb
xchg
adc
or
mov
push
fucom
out
jne
mov
mov
pop
pusha
arpl
xchg
or
inc
repz
mov
sbb
js
push
push
clc
xor
retf
adc
mov
sub
dec
cdq
cmp
mov
loopne
je
(bad)
(bad)
cmp
jle
clc
(bad)
dec
jo
or
push
cmp
enter
cli
fwait
sub
fcmovu
sub
clc
inc
mov
adc
inc
xchg
arpl
cli
mov
sar
sbb
leave
xchg
push
sub
lahf
sub
icebp
ret
int3
mov
repz
pop
add
mov
scas
lock
fist
cli
je
sbb
mov
cmp
xchg
data16
jl
addr16
jne
sbb
mov
mov
test
hlt
mov
mov
adc
dec
jl
clc
ss
dec
xchg
aam
inc
sbb
movs
cmp
mov
sti
cli
in
inc
daa
out
adc
sti
ins
je
sbb
push
stos
test
les
xchg
xchg
inc
dec
jl
dec
xor
pop
and
dec
movs
cmp
cmp
clc
cli
xchg
or
fimul
outs
je
sbb
in
cli
mov
inc
daa
rcl
fisub
ins
je
sbb
js
test
outs
mov
retf
(bad)
adc
dec
jl
push
xor
add
movs
push
pop
(bad)
mov
int3
fld
cmp
xchg
fisttp
cmp
add
fld
xchg
das
(bad)
pop
int3
fisttp
xchg
cs
ja
fucomi
sub
cli
add
fcmovne
sub
call
iret
fld
adc
in
(bad)
sub
add
inc
int3
loope
pop
sbb
cwde
sub
inc
cdq
int
dec
nop
retf
jnp
inc
sub
inc
adc
push
test
cmp
or
out
adc
xchg
mov
lock
jns
mov
adc
sbb
popa
fwait
jnp
(bad)
int
scas
ret
sbb
add
test
dec
mov
sbb
push
cdq
xor
das
sub
sbb
rcr
xchg
test
jnp
aam
sbb
cmps
push
xchg
in
push
or
repz
ds
(bad)
pushf
iret
mov
jmp
dec
mov
ret
lock
cmp
dec
pop
push
sbb
ret
inc
lods
mov
cmp
jg
push
pusha
out
adc
jns
fs
ret
push
test
(bad)
addr16
mov
push
xor
fdiv
add
pop
mov
dec
out
jbe
sbb
xor
push
out
mov
mov
out
imul
jne
inc
jo
sbb
or
mov
adc
cmp
mov
xchg
cdq
call
pop
mov
push
dec
xchg
sti
xchg
sbb
xchg
add
aaa
outs
sbb
sub
xchg
iret
mov
add
jecxz
pop
cmps
sub
icebp
add
push
add
sub
icebp
add
push
add
sub
icebp
add
push
add
sub
icebp
add
push
add
xor
icebp
add
push
add
cmps
xor
sbb
add
push
add
cmps
xor
sbb
add
push
add
cmps
xor
sbb
add
push
add
cmps
xor
icebp
add
push
pop
imul
add
push
pop
imul
push
pop
imul
add
push
pop
jge
lahf
sub
movs
int3
add
arpl
jno
mov
(bad)
(bad)
shr
imul
mov
repnz
leave
or
ds
inc
xchg
add
into
or
xor
repz
mov
ret
adc
mov
rcl
lahf
mov
dec
outs
mov
and
lahf
mov
dec
outs
mov
xor
lahf
mov
dec
outs
mov
add
lahf
mov
dec
outs
mov
adc
lahf
mov
dec
outs
cwde
arpl
addr16
ret
jne
aaa
sbb
mov
sub
add
push
out
inc
sub
outs
cmp
cmp
push
and
fist
loop
dec
inc
and
shr
pushf
aas
mov
and
neg
outs
or
fstp
in
dec
gs
stos
sub
stos
call
lods
dec
(bad)
jnp
div
ret
xchg
xchg
mov
sub
ds
push
and
jecxz
into
push
push
out
cld
add
lahf
out
test
shr
test
adc
scas
out
inc
outs
push
sub
enter
fsubr
xor
mov
test
mov
enter
(bad)
sub
sti
ror
or
push
in
mov
inc
pop
leave
adc
cmps
ins
je
sbb
std
stos
test
loopne
cmp
xchg
data16
cwde
aam
hlt
cmp
xor
movs
cmps
dec
jl
and
sub
jmp
movs
cmp
mov
sti
cli
cs
fisubr
ss
xor
ins
inc
sbb
cmp
cmp
clc
cli
cdq
or
fiadd
outs
je
sbb
popf
lods
test
xor
xchg
pushw
dec
jl
hlt
xor
sbb
sbb
cmp
sti
sti
dec
xchg
push
outs
je
sbb
in
stos
test
shl
or
jl
les
(bad)
sub
fisttp
xchg
(bad)
mov
fucomi
sub
sti
add
fcmovne
sub
fwait
add
fld
sub
mov
(bad)
lods
iret
fisttp
sub
xor
lods
cmp
xchg
pusha
into
adc
icebp
pop
fnsave
xchg
(bad)
xchg
dec
mov
push
test
cmp
addr16
add
sub
cmp
push
daa
jecxz
das
arpl
scas
sbb
inc
jmp
into
inc
daa
mov
push
jl
div
sub
sbb
push
xchg
push
pop
cld
int
xchg
xor
(bad)
fdivr
lock
hlt
(bad)
jp
and
push
fst
inc
jmp
xor
nop
lea
sbb
rcr
das
mov
sbb
retf
inc
shl
aaa
dec
test
lods
or
mov
add
mov
outs
inc
gs
neg
movs
inc
fmul
push
push
fwait
aaa
ss
js
int3
movs
dec
(bad)
call
push
add
mov
cmp
out
ds
in
repz
movs
mov
(bad)
cmps
mov
das
test
adc
rcl
shl
sbb
xor
cs
push
jo
push
mov
sub
cmp
in
cmp
mov
mov
cs
push
mov
sub
push
jp
daa
adc
lahf
pop
dec
retf
(bad)
movs
mov
jmp
sar
(bad)
fistp
pop
stc
stos
pop
adc
push
xor
jns
mov
addr16
mov
jae
pop
stos
addr16
cmp
mov
ret
pop
fld
adc
add
shl
push
adc
sar
mov
jno
int
mov
iret
sbb
(bad)
lds
shr
cli
dec
dec
imul
xchg
inc
push
xchg
xchg
jecxz
mov
mov
dec
call
icebp
scas
enter
jmp
(bad)
add
xor
jmp
fdiv
mov
mov
(bad)
into
adc
xor
aaa
adc
or
jecxz
mov
mov
cmp
jmp
shr
arpl
inc
dec
and
nop
pop
dec
ds
ret
jg
dec
push
xchg
es
out
ja
push
push
stc
jecxz
add
fbld
and
hlt
mov
dec
out
(bad)
dec
js
fs
push
lock
mov
or
outs
push
push
dec
loopne
xor
ja
mov
push
fs
scas
jp
mov
push
movs
pop
push
fld
jle
pushf
pop
das
jle
out
stos
mov
aaa
rcr
aam
cdq
lock
int
jl
pop
add
in
sbb
test
inc
sub
scas
mov
xor
xchg
stos
push
push
jbe
(bad)
hlt
lea
bound
push
cmp
out
mov
push
scas
mov
(bad)
push
inc
ds
or
add
jb
stos
outs
hlt
hlt
jmp
iret
inc
mov
ins
scas
or
lahf
call
push
or
mov
outs
fs
repnz
pop
sub
lds
inc
lods
inc
inc
mov
stc
imul
jmp
inc
rcr
imul
mov
enter
lock
push
lods
push
cmp
aaa
scas
div
inc
imul
mov
ins
adc
retf
sub
and
pop
retf
stos
test
shr
ret
push
fistp
shr
icebp
jecxz
inc
fistp
ins
dec
js
retf
lock
xchg
xchg
adc
xor
adc
jo
push
and
inc
sbb
loop
test
shr
repz
add
mov
test
aas
mov
outs
fs
push
sbb
sub
jge
sub
mov
retf
dec
jg
cwde
xlat
aaa
or
or
ins
shl
repnz
mov
scas
cdq
jg
dec
adc
dec
xor
jg
movs
xchg
pop
daa
retf
push
sar
and
jge
(bad)
mov
(bad)
jno
push
int
fdivr
jnp
arpl
xchg
dec
or
jmp
push
push
(bad)
inc
add
xor
loope
daa
arpl
shl
and
gs
in
jae
sub
repnz
das
sbb
cmp
and
rcr
mov
inc
mov
(bad)
nop
fisub
hlt
push
scas
push
mov
test
retf
inc
xor
div
imul
(bad)
(bad)
fs
mov
push
add
fisttp
adc
add
and
dec
in
sbb
(bad)
adc
xlat
mov
ret
fsub
jb
sub
add
int3
sbb
nop
int
cld
mov
das
xlat
mov
lahf
fldcw
imul
popa
sar
cs
gs
pop
shl
cmps
les
sahf
les
int3
(bad)
sub
sub
xchg
fcmovnu
and
inc
rcl
int3
(bad)
sub
(bad)
mov
xchg
jle
lods
dec
and
or
xor
js
lods
test
movs
inc
retf
push
popa
push
mov
xchg
mov
cs
add
sti
push
arpl
arpl
cli
push
gs
jbe
xchg
bound
out
sub
inc
gs
push
sti
test
sub
mov
xor
pop
push
pop
leave
cmp
and
sub
inc
mov
pusha
jg
out
addr16
dec
rcl
cmp
and
fwait
inc
push
xchg
into
push
add
mov
out
sub
not
(bad)
and
lock
dec
push
push
xchg
push
mov
std
(bad)
adc
inc
add
and
mov
fmul
lock
dec
pop
dec
and
ss
repnz
push
stos
(bad)
es
pop
(bad)
(bad)
fcmovnbe
xchg
and
add
gs
mov
mov
iret
mov
or
or
push
scas
pop
call
inc
mov
or
movs
mov
fs
adc
lods
inc
pop
pop
add
sahf
out
pop
fwait
pop
cmps
mov
sub
pop
mov
ja
mov
(bad)
rcl
ins
call
inc
push
xor
inc
data16
push
pop
pop
adc
pop
gs
xor
lock
ds
pop
add
lods
pop
adc
neg
jnp
mov
jecxz
fsubr
test
jnp
lods
daa
pop
sbb
mov
xchg
or
stos
push
arpl
push
ins
iret
jbe
xchg
(bad)
retf
in
adc
mov
push
pushf
test
xor
sub
in
adc
and
icebp
retf
call
sub
pop
push
daa
leave
call
fs
sub
(bad)
and
xor
in
in
out
jns
shr
(bad)
jg
popf
ror
addr16
adc
mov
mov
out
mov
dec
in
add
jecxz
pushaw
push
ds
xor
push
xchg
jnp
ret
sbb
pop
retf
lea
adc
inc
enter
retf
sbb
daa
mov
mov
in
ret
xchg
lds
bound
int
jnp
sub
mov
ret
movs
push
cwde
push
jno
pushf
and
call
push
in
jle
adc
lods
inc
jle
push
out
jmp
test
rcr
mov
les
pop
icebp
pop
lods
jge
dec
fld
adc
out
cmps
dec
jecxz
jo
mov
cld
add
cld
inc
and
movs
aaa
cmp
gs
mov
or
xlat
dec
xchg
bound
mov
hlt
sbb
(bad)
(bad)
mov
ds
inc
push
xchg
sub
mov
repz
pusha
push
out
push
sub
push
pushf
ret
iret
fstp
xor
and
repnz
popa
ja
popf
xor
stc
sub
mov
enter
(bad)
and
rol
in
(bad)
jbe
lds
loopne
xchg
adc
mov
xor
inc
(bad)
and
dec
cmc
js
xchg
icebp
sbb
idiv
scas
inc
mov
add
inc
sbb
mov
mov
icebp
sbb
and
mov
mov
out
adc
(bad)
(bad)
push
inc
jle
inc
pusha
sub
and
dec
icebp
jnp
lock
imul
stos
inc
mov
push
fs
inc
sbb
mov
mov
out
cwde
mov
xchg
dec
xchg
(bad)
xor
out
mov
fs
fsub
movs
scas
fnstenv
jns
and
sahf
sub
outs
(bad)
fistp
pop
mov
shl
and
mov
sbb
mov
ret
inc
cwde
popf
and
push
inc
push
repnz
mov
push
xchg
or
push
call
scas
mov
loope
push
xchg
fisttp
inc
imul
and
jp
push
fdivr
das
push
push
out
fistp
cmp
or
out
fistp
mov
repnz
sbb
adc
jle
push
stos
iret
das
sub
adc
inc
ficomp
ds
aam
popa
outs
inc
cwde
jg
fdivp
adc
and
pop
sbb
stos
inc
arpl
iret
mov
and
lods
xchg
xlat
sbb
lock
scas
cmp
sub
and
lods
mov
repnz
adc
mov
fsubr
mov
cmp
mov
fwait
cmp
adc
lods
rol
mov
fsubr
mov
cmp
stos
or
outs
fwait
cmp
adc
mov
fucomp
and
stos
mov
pushf
cmp
adc
lods
rol
ret
mov
fucomp
mov
pop
and
or
mov
imul
push
pop
add
sahf
cmp
adc
scas
shl
sub
fdivp
adc
leave
stos
int3
pop
sbb
ret
and
jg
cwde
add
hlt
hlt
vmwrite
ficomp
(bad)
jp
xchg
(bad)
cld
dec
xor
jns
retf
push
ror
jg
inc
rcl
sub
je
das
test
xchg
push
std
push
movs
inc
adc
mov
xor
push
test
pop
shr
sti
or
shl
cmc
xchg
inc
dec
icebp
dec
and
jns
fistp
mov
push
adc
xchg
fist
call
sub
test
jmp
ror
pop
jne
pop
jbe
mov
mov
je
mov
out
fbld
mov
(bad)
push
(bad)
cli
shl
pop
stos
sub
(bad)
(bad)
cdq
and
add
cmp
retf
xchg
push
jo
jle
mov
sub
add
or
mov
shl
pushf
jmp
lahf
push
xchg
cmps
test
out
sbb
jo
mov
(bad)
neg
data16
mov
cli
push
adc
ins
outs
je
sbb
inc
stos
test
dec
mov
mov
js
sbb
adc
cmp
xchg
data16
or
xor
pop
dec
jl
inc
xor
addr16
sbb
jl
sahf
ss
loope
aam
inc
sbb
movs
cmp
cmp
clc
cli
dec
cmp
mov
clc
cli
xor
inc
daa
lds
(bad)
ins
je
sbb
retf
(bad)
mov
cmp
xchg
xor
movs
loopne
or
cli
outs
or
fisubr
je
sbb
inc
stos
test
ss
hlt
(bad)
adc
dec
adc
je
pop
jne
xchg
sub
dec
jg
je
pop
jne
xchg
or
dec
pop
enter
jne
xchg
push
je
pop
jne
xchg
dec
sub
stos
push
shl
jp
jne
push
mov
and
push
mov
das
hlt
jne
sar
inc
xchg
jno
enter
cmp
(bad)
jmp
aas
jg
addr16
shr
cli
movs
ror
and
adc
adc
loope
adc
sub
add
ins
sub
mov
jp
mov
fdiv
push
pushf
(bad)
mov
mov
lea
ret
lahf
(bad)
mov
add
push
fld
inc
sbb
vpunpckhwd
ror
cdq
sub
and
lahf
push
loopne
pushf
fwait
cmp
not
cwde
cmp
sub
test
and
call
push
add
dec
test
sbb
adc
push
add
or
cmp
sub
test
dec
enter
inc
jle
mov
out
rcl
or
aaa
xor
fidivr
out
ret
ss
mov
add
mov
push
and
cli
mov
sbb
popa
fldenv
cli
jg
into
adc
inc
loopne
int
(bad)
psubd
fist
push
add
jmp
rol
in
add
mov
(bad)
push
push
push
mov
inc
call
sbb
and
pop
push
mov
fdivrp
movs
addr16
pop
push
icebp
sbb
into
popa
addr16
addr16
mov
repnz
mov
push
ss
mov
mov
leave
out
sti
movs
mov
mov
add
dec
imul
push
add
neg
sbb
mov
push
or
jb
or
sbb
mov
ss
sbb
jg
mov
mov
mov
sti
movs
mov
mov
add
dec
imul
push
add
addr16
push
mov
scas
mov
pop
ja
imul
addr16
out
mov
dec
mov
push
fiadd
popf
sbb
push
xchg
into
popa
dec
enter
idiv
movs
hlt
push
sub
jg
test
aam
push
repnz
mov
repz
out
aaa
jnp
sahf
pop
pop
mov
mov
mov
cli
cmp
jno
rol
xor
jg
into
lahf
pop
add
lahf
mov
adc
psubsb
clc
addr16
das
pop
cmps
mov
lgs
stos
shl
int3
mov
inc
sbb
xor
stos
adc
mov
lea
(bad)
mov
pop
add
lahf
outs
xchg
cmp
adc
cmps
push
fisttp
push
call
je
das
fwait
cmps
mov
lss
stos
adc
int3
mov
inc
sbb
xor
stos
push
add
lea
gs
mov
test
xlat
sti
dec
adc
add
mov
mov
loop
fld
mov
pop
add
mov
pop
outs
mov
pop
adc
scas
push
mov
mov
imul
mov
ja
inc
jno
iret
add
out
test
dec
cmp
pop
cmp
cmps
adc
(bad)
jmp
cli
popa
pushf
int
aas
daa
push
jne
mov
sti
mov
pusha
retf
inc
hlt
dec
cmp
mov
inc
shl
ja
dec
and
sbb
iret
mov
sbb
push
iret
add
jb
mov
lahf
pop
pusha
ror
(bad)
hlt
cmp
mov
or
test
mov
cmps
jmp
dec
stos
inc
mov
sub
mov
inc
mov
and
test
inc
mov
loopne
mov
ret
fidiv
outs
fdivrp
ins
aad
test
clc
inc
in
or
(bad)
adc
dec
popf
and
inc
pop
jle
stos
movs
test
xchg
jno
pop
mov
jle
inc
in
and
call
dec
popf
cwde
ror
jg
and
ins
aam
loopne
mov
sub
inc
popa
and
sti
ins
sahf
pop
test
loope
in
push
and
add
popf
or
je
imul
movs
test
out
ins
inc
(bad)
loopne
mov
sti
movs
push
(bad)
jno
xor
outs
std
sti
ins
cs
test
xor
and
sahf
mov
popf
cmp
(bad)
jmp
loope
ja
and
adc
loope
ja
add
adc
out
add
shl
int3
push
jg
popf
add
int3
je
sub
add
int3
adc
sub
sbb
sar
rcl
xor
ss
xor
dec
xchg
test
jle
jmp
sti
xchg
mov
push
xchg
cmp
jne
lea
stos
ret
fstp
add
or
sub
add
mov
lea
movs
xchg
sbb
ja
(bad)
adc
inc
cmp
retf
xchg
pop
and
lods
mov
mov
pop
sbb
xchg
lock
mov
adc
jl
sbb
mov
imul
fs
sti
mul
push
sub
popf
and
push
xchg
mov
xchg
or
pop
jnp
(bad)
or
xchg
mov
mov
dec
adc
lahf
das
addr16
pop
cmp
dec
mov
jecxz
mov
jo
sar
(bad)
fist
call
cld
pop
das
inc
hlt
or
pop
or
clc
test
mov
in
adc
push
loopne
out
dec
push
scas
aam
call
popf
loop
push
or
mov
popa
mov
mov
shr
xor
inc
repnz
push
and
rcl
enter
cmp
cli
xchg
jno
lds
cmp
retf
in
jmp
aaa
dec
jno
jge
js
clc
or
mov
loopne
rcl
scas
in
imul
inc
cs
pop
enter
push
sub
mov
pusha
mov
mov
ror
mov
clc
inc
sub
pop
jbe
das
and
repz
adc
mov
push
bnd
mov
cli
aaa
cmc
xchg
shl
or
lock
es
inc
mov
es
mov
les
jle
mov
cmp
stos
das
cs
push
adc
inc
xchg
mul
ror
mov
pop
jp
push
in
jg
mov
and
scas
adc
mov
jae
scas
loope
fs
and
sbb
pop
cmp
sub
sbb
lahf
idiv
inc
add
rcl
cmp
(bad)
push
xchg
retf
movs
xchg
mov
mov
enter
outs
(bad)
xchg
sar
and
push
xlat
retf
jno
cdq
adc
ins
jle
jp
adc
clc
aaa
scas
push
scas
adc
cmc
call
js
mov
inc
sbb
push
cmp
retf
jecxz
adc
ja
dec
out
or
xlat
sub
jbe
xchg
ja
shr
inc
test
lods
adc
mov
sbb
pminub
xchg
test
adc
xchg
jmp
jle
pop
add
es
xor
pop
mov
sbb
(bad)
sbb
dec
jl
push
inc
sar
ja
jmp
icebp
sbb
sbb
push
xchg
push
add
stos
adc
lea
test
xchg
retf
sbb
add
retf
out
mov
mov
add
std
or
call
in
pop
iret
ret
and
sbb
inc
dec
in
ror
pop
mov
mov
movs
sub
in
pop
cmps
mov
adc
icebp
lods
xchg
xchg
imul
and
dec
add
jbe
jg
in
jg
xchg
shr
out
stos
std
adc
les
sti
jecxz
ficomp
jg
xchg
lahf
sbb
ins
push
mov
pop
outs
jmp
sub
outs
sbb
jecxz
inc
jb
mov
push
clc
inc
inc
inc
daa
pop
inc
addr16
jns
inc
das
mov
loope
cmps
(bad)
fsub
nop
inc
sbb
pop
je
dec
sub
into
add
ror
xor
xchg
(bad)
stos
stos
js
icebp
sbb
dec
lds
pushf
mov
(bad)
je
pop
bound
enter
jle
pop
leave
test
pop
add
xchg
xchg
push
and
mov
mov
stos
push
pop
cmps
adc
sar
pop
adc
jmp
enter
inc
in
jg
mov
dec
daa
ds
(bad)
fwait
aaa
shl
(bad)
cmp
ret
push
push
jbe
retf
mov
pusha
(bad)
sti
fst
jle
mov
push
mov
loop
mov
mov
xchg
cmp
mov
mov
mov
mov
add
cmp
jmp
push
xor
fwait
push
(bad)
cmps
retf
push
jmp
sub
push
cmp
fld
adc
fbld
and
loop
iret
stos
push
cmps
das
mov
sub
ret
retf
inc
dec
adc
adc
pop
lock
jmp
adc
mov
xlat
adc
sar
push
add
cdq
pop
xchg
cmp
addr16
test
jnp
(bad)
mov
xchg
lods
cs
popa
das
xor
and
loope
xchg
sub
and
mov
loopne
into
or
mov
xchg
(bad)
das
or
retf
mov
xchg
pop
add
ins
scas
retf
adc
sahf
sub
add
sahf
adc
xchg
push
cmc
inc
mov
test
adc
push
out
cmps
mov
shl
hlt
mov
jle
les
sub
xchg
sbb
mov
push
scas
retf
mov
inc
repnz
out
dec
and
mov
loope
xchg
dec
xchg
mov
pop
nop
cmp
or
shr
push
jae
pushf
sub
inc
retf
pop
xchg
scas
push
fnstcw
je
retf
cmp
call
push
dec
xchg
rcl
adc
lea
xchg
jle
dec
pop
or
push
add
xor
mov
mov
pop
aad
xchg
aaa
fwait
push
pop
push
push
aam
cmp
in
rol
pmaddwd
lahf
inc
jp
inc
cmp
stos
mov
in
pop
pop
inc
(bad)
pop
jno
call
push
mov
add
adc
mov
retf
push
gs
cld
xor
retf
and
push
test
sbb
push
jmp
sub
push
loopne
into
fwait
mov
das
out
test
lock
push
lods
nop
mov
push
sbb
mov
aas
mov
mov
stos
test
rcl
lods
pop
push
dec
pop
outs
add
mov
mov
sar
mov
shl
pop
enter
test
sub
inc
sub
jp
fwait
scas
sbb
mov
mov
daa
adc
xor
call
lds
je
fld
inc
mov
adc
inc
xor
xchg
mov
stos
mov
add
pop
retf
shr
lods
retf
aas
retf
addr16
xchg
fild
int
push
inc
jle
mov
in
cli
dec
div
fstp
repz
mov
sub
mov
das
jns
(bad)
sub
popa
or
jae
or
or
(bad)
mov
retf
pop
ja
or
test
cmps
out
push
adc
aaa
das
repz
sub
push
je
and
pop
jle
fwait
inc
mov
pop
dec
xchg
or
cli
jb
sub
xor
and
jl
div
out
jnp
adc
pushf
loop
stos
jecxz
icebp
int3
(bad)
xor
mov
pop
xor
(bad)
aas
out
jno
xor
pop
adc
push
adc
jns
and
nop
retf
pop
sub
das
sub
ss
add
mov
dec
jb
repnz
push
adc
jg
or
leave
shl
mov
dec
push
stos
retf
retf
sbb
sbb
adc
js
movs
or
test
xchg
jge
shl
out
push
enter
outs
mov
lea
xchg
or
clc
aaa
push
sbb
jg
dec
jb
push
xchg
xchg
dec
scas
cwde
imul
loope
scas
jbe
mov
jecxz
or
hlt
push
adc
inc
cmp
push
mov
xchg
adc
lods
mul
shl
shl
imul
push
push
(bad)
(bad)
or
push
xor
stos
push
test
scas
retf
test
push
mov
sbb
push
xchg
jg
mov
jl
dec
mov
scas
loope
sbb
loope
scas
fild
das
pop
inc
xor
push
hlt
daa
adc
and
imul
xlat
add
ret
or
(bad)
push
sar
mov
retf
mov
retf
dec
into
mov
xchg
fild
movs
pop
jg
dec
dec
mov
xchg
ins
das
mov
mov
cmps
retf
stos
dec
adc
rol
dec
adc
and
cmp
and
add
mov
mov
ror
dec
shr
outs
repz
dec
sahf
lea
xchg
sbb
jo
sub
je
jbe
mov
das
xchg
ret
inc
mov
movs
xchg
mov
adc
push
das
sti
inc
jns
push
ins
adc
inc
jg
or
mov
xlat
movs
idiv
sar
rcr
pop
jo
pop
mov
mov
add
pop
pop
(bad)
jg
or
shl
mov
mov
dec
(bad)
lea
xchg
pop
das
ins
ss
add
dec
out
push
xchg
xchg
pop
scas
lahf
imul
and
scas
jne
retf
adc
addr16
push
inc
bound
hlt
adc
add
lock
not
rcl
in
pop
shl
jg
mov
retf
push
and
mov
xchg
xlat
scas
outs
push
push
push
xchg
xchg
lods
pop
mov
adc
test
pop
stos
mov
mov
popa
cmps
xchg
push
dec
rcr
jle
mov
into
(bad)
fisttp
ss
xchg
(bad)
shr
xor
xor
pop
xlat
loopne
test
dec
inc
rcr
out
mov
sub
outs
bndstx
repz
sar
mov
out
dec
mov
pop
jno
xchg
pop
pop
mov
jl
jo
lods
test
cli
push
test
aad
add
es
es
push
mov
sub
sub
les
sub
das
pop
ins
call
jb
icebp
mov
inc
mov
add
pop
fcom
es
push
int3
ja
and
ins
sub
dec
lds
jle
cmp
push
nop
ror
xor
hlt
dec
mov
icebp
mov
ret
xchg
loopne
or
pop
iret
pop
test
rol
cmp
cld
in
mov
add
push
sub
bound
pop
xchg
repz
ret
push
out
mov
sub
xchg
stc
and
mov
xor
movs
ret
stc
xchg
jns
push
sub
push
and
(bad)
jge
and
inc
add
pop
and
fild
popa
mov
mov
mov
adc
(bad)
test
in
xor
movs
shr
imul
push
imul
push
ins
xchg
cmp
sbb
sub
push
cmp
cld
stc
mov
push
mov
cmp
push
xlat
push
cld
sar
jp
and
mov
xor
sbb
jp
not
iret
clc
cmp
pushfw
xchg
inc
or
xchg
pop
jge
fidivr
pop
pop
aas
adc
sti
mov
cld
xor
cmps
fcmovne
jmp
std
std
out
imul
jmp
dec
pop
mov
sub
or
pop
or
push
inc
mov
clc
test
icebp
imul
jg
cmp
sub
lods
dec
sti
xchg
loopne
in
in
xchg
and
sub
je
jg
mov
jae
xchg
inc
scas
push
scas
mov
lahf
idiv
pop
movs
mov
xchg
push
outs
ret
movs
pop
cdq
es
inc
adc
add
lods
(bad)
xor
xchg
cmp
sub
std
ja
adc
inc
das
cmp
shr
scas
into
retf
jle
sub
dec
out
or
ins
sbb
test
shl
push
pop
(bad)
and
in
xchg
cdq
stc
out
or
lock
jmp
sahf
or
dec
push
xchg
stos
scas
jmp
sbb
sub
sahf
mov
cmp
xchg
mov
out
dec
or
stos
jmp
xor
add
or
mov
stc
or
sbb
lods
aaa
sti
js
ret
fs
adc
sub
imul
in
xchg
imul
jb
or
dec
push
call
mov
imul
pop
inc
xor
lock
push
retf
cdq
shl
mov
loope
or
dec
push
jmp
lods
pop
fisubr
dec
pop
inc
retf
cmp
leave
xor
mov
or
and
fstp
pop
jmp
mov
or
dec
retf
jecxz
lahf
cli
mov
retf
cmps
je
test
push
and
call
or
and
mov
xchg
xchg
jnp
mov
imul
mov
and
or
pop
repnz
neg
or
dec
push
xchg
(bad)
clc
or
dec
push
jmp
cld
lahf
rcr
xchg
idiv
lahf
ret
dec
lock
cmp
sub
(bad)
xchg
dec
fimul
sub
(bad)
fs
jl
push
adc
cmova
cwde
push
adc
mov
or
lahf
in
push
retf
daa
jbe
(bad)
xchg
cdq
cld
out
xor
out
mov
popf
or
leave
xchg
or
mov
jl
push
add
cmove
cwde
push
aam
pmuludq
call
fs
dec
scas
addr16
lahf
icebp
push
cmp
pop
ret
add
xor
ins
and
fstp
inc
jmp
mov
hlt
fimul
aam
push
push
push
jae
or
dec
push
push
push
jae
xchg
cdq
cld
out
(bad)
cmps
xor
hlt
out
pop
cmps
xor
in
pusha
daa
repnz
inc
sti
or
and
fist
push
mov
inc
sbb
pop
mov
push
retf
cdq
shl
cdq
rcl
outs
xchg
add
lahf
shl
jmp
out
cld
out
shl
out
retf
push
pop
leave
in
pusha
xchg
mov
inc
sti
or
repnz
repnz
cmp
imul
iret
adc
sub
xchg
(bad)
adc
psllq
repz
retf
and
mov
outs
ss
dec
mov
xchg
xchg
lds
adc
pop
out
push
test
scas
and
jns
mov
loop
adc
push
dec
mov
ja
push
scas
push
jnp
mov
(bad)
jb
out
lods
lea
lahf
out
pushf
aaa
pop
inc
outs
retf
cmc
(bad)
sub
inc
inc
je
inc
mov
imul
cli
xchg
out
cs
push
xlat
loope
scas
mov
sti
xchg
(bad)
lock
cdq
mov
ins
sub
inc
or
xchg
js
fs
into
inc
cwde
sub
or
les
scas
aaa
shr
xchg
sub
nop
jmp
and
fild
jmp
push
jl
dec
out
ficom
pop
enter
popa
repnz
pop
cs
(bad)
stos
cmp
jns
ret
sbb
lea
xchg
out
push
push
sub
push
je
and
jle
iret
inc
ss
cld
push
push
daa
iret
fnstsw
ja
jmp
mov
push
test
mov
outs
(bad)
call
test
mov
cmp
loope
xor
mov
jae
push
jl
mov
pusha
call
adc
jnp
pop
daa
cmps
mov
mov
xor
push
mov
stos
push
mov
push
and
or
push
mov
pushf
jle
ins
add
xor
pop
neg
xchg
gs
mov
sti
sar
clc
mov
cli
ja
je
xchg
aam
inc
sbb
adc
dec
outs
je
sbb
out
test
in
mov
inc
(bad)
adc
dec
jl
shl
hlt
and
aam
inc
sbb
movs
cmp
cmp
clc
cli
cmp
ficomp
mov
test
mov
adc
js
mov
inc
inc
leave
hlt
std
xchg
lahf
ss
out
xchg
aam
inc
sbb
movs
cmp
cmp
clc
cli
or
fisubr
sbb
jo
test
addr16
ret
(bad)
adc
dec
jl
outs
xor
jge
sbb
jl
cmps
jns
or
cli
mov
inc
daa
mov
je
sbb
inc
stos
test
aaa
mov
repz
adc
dec
jl
aas
xor
in
inc
sbb
gs
add
push
arpl
popa
into
pusha
push
pop
enter
popa
dec
adc
push
stos
repz
jmp
pop
cmp
in
mov
out
bound
pop
outs
or
jmp
stos
xchg
(bad)
cdq
scas
dec
jno
ja
xlat
xor
retf
xchg
add
push
dec
inc
aam
(bad)
stos
lahf
rcl
arpl
scas
pop
xor
scas
rcr
push
loope
or
pushf
or
jl
scas
jno
mov
cmps
jae
ins
pop
add
cmp
sub
rol
call
sbb
out
push
add
aam
and
stos
mov
push
jne
xchg
in
xor
sub
cdq
ins
(bad)
popa
mov
mov
das
or
xlat
inc
pop
push
aam
dec
(bad)
cmp
out
jo
fist
int
mov
pop
push
call
cmc
test
push
sbb
cwde
add
enter
jl
test
test
push
xchg
cld
mov
push
pusha
adc
xor
ja
sti
jno
movs
push
test
push
popf
dec
rol
mov
fadd
cmp
xor
mov
test
mul
mov
test
(bad)
mov
mov
jne
xchg
das
adc
jns
ss
jns
mov
adc
or
lea
loop
mov
rcl
adc
pushf
mov
mov
sub
inc
loopne
sub
xchg
xor
sahf
inc
out
xor
pop
cmps
fdiv
data16
mov
enter
scas
push
add
xchg
iret
mov
mov
not
pop
pop
push
test
mov
test
mov
ret
ins
cmp
ins
mov
mul
jno
pop
xor
mov
das
jbe
cmp
cmp
dec
popa
pop
arpl
dec
jns
data16
icebp
lds
stos
not
lock
xchg
mov
loopne
pusha
loopne
dec
xchg
repz
outs
cmps
outs
(bad)
rcr
push
mov
inc
adc
sbb
push
mov
and
push
add
sub
mov
mov
xlat
jno
or
sub
jle
or
xchg
clc
jne
xchg
pop
push
sbb
js
and
icebp
pop
push
push
fsubp
and
cmp
cli
ins
cmps
rcl
dec
and
daa
in
fnstsw
inc
in
cmp
stos
ror
or
or
call
rcpps
cmc
add
inc
pop
dec
xchg
mov
stos
push
inc
or
inc
add
aas
jae
in
je
mov
adc
(bad)
std
xchg
xchg
jg
clc
aas
add
jle
stos
pusha
and
out
imul
fwait
out
mov
mov
mov
sar
out
mov
or
ret
(bad)
dec
lock
sub
inc
xchg
push
clc
mov
ror
mov
jno
leave
cmps
jg
jmp
ret
adc
dec
rcl
outs
mov
jge
xchg
xor
add
jle
aam
mov
jae
ret
sbb
mov
mov
out
mov
mov
jg
outs
adc
xchg
mov
and
fs
mov
adc
mov
xor
mov
dec
mov
lock
call
mov
ins
int3
and
jg
mov
das
movs
test
sub
dec
mov
pop
test
bound
sbb
pusha
xchg
jbe
mov
push
test
(bad)
sti
lds
repnz
outs
ins
fs
jl
jmp
inc
repnz
add
sbb
pop
call
push
sar
and
out
stos
push
retf
jg
sub
stos
push
out
fadd
out
stos
push
out
xchg
sub
jmp
dec
adc
sbb
(bad)
sub
or
sub
sbb
jmp
sbb
call
mov
sub
movs
mov
jae
ret
hlt
out
mov
mov
icebp
int3
mov
cmc
int3
mov
icebp
inc
int3
adc
jbe
mov
aaa
jbe
dec
cmp
das
pusha
lfs
xor
pop
cmp
add
mov
aas
lock
imul
das
push
cmp
repz
ret
in
fwait
cmp
push
or
fadd
cmp
inc
(bad)
(bad)
or
lahf
lss
add
(bad)
(bad)
or
lahf
lss
cs
(bad)
(bad)
or
lahf
lss
sub
(bad)
fdivr
or
lahf
lss
ss
(bad)
fdivr
or
nop
lss
nop
(bad)
fcmovnu
adc
das
push
(bad)
(bad)
push
or
fadd
xlat
(bad)
push
or
fadd
xlat
(bad)
push
or
fadd
xlat
(bad)
push
or
fadd
xlat
(bad)
push
or
fadd
aam
push
or
fadd
aam
push
or
fadd
jnp
ret
icebp
jg
mov
fs
das
ds
repz
dec
jnp
mov
and
xor
sbb
pusha
iret
mov
repz
in
fld
add
das
pusha
pop
repnz
aad
das
xchg
outs
ret
mov
jmp
pop
mov
enter
imul
push
enter
jg
(bad)
dec
dec
imul
sti
enter
(bad)
xor
dec
dec
imul
sti
enter
pop
xor
dec
dec
imul
sti
enter
das
xor
dec
dec
imul
sti
enter
xor
dec
pop
int3
or
icebp
pop
int3
push
sahf
push
xor
dec
add
sbb
xor
icebp
pop
int3
push
dec
push
xor
dec
add
sbb
xor
icebp
pop
int3
push
mov
add
and
cmp
pop
mov
enter
adc
rol
repz
lock
pop
adc
and
sub
lock
pop
push
mov
(bad)
jbe
pop
pop
pop
(bad)
out
(bad)
sub
push
push
sbb
icebp
push
xor
sti
mov
inc
cmps
pop
mov
enter
iret
repz
imul
retf
fistp
push
xlat
push
inc
rol
xchg
retf
rol
adc
test
mov
push
add
push
xor
stos
dec
lahf
unpcklps
jae
cmp
xlat
jp
or
xchg
lock
mov
jo
sti
xchg
nop
pop
mov
adc
mov
loop
push
test
repz
stos
stos
sahf
adc
imul
xchg
push
imul
cdq
fadd
xchg
xlat
jnp
push
sub
xor
cmps
sti
dec
test
pop
outs
stc
xchg
stos
pop
shl
cmp
jecxz
xor
lods
xchg
xor
addr16
cmp
dec
scas
addr16
cwde
aas
dec
retf
rcl
shl
sub
and
inc
add
jae
in
ja
inc
hlt
push
pushf
mov
cmc
xor
dec
leave
daa
pop
icebp
mov
dec
dec
xchg
sub
ja
xchg
dec
(bad)
movlps
add
leave
aam
ror
ret
jmp
mov
arpl
or
and
mov
loop
and
sar
sahf
cmc
pushf
(bad)
mov
dec
popf
mov
inc
idiv
dec
movs
test
xor
sub
push
fidivr
jo
mov
outs
loopne
ins
ret
pop
test
out
inc
in
repz
add
popf
das
ror
jle
push
jns
mov
jno
std
and
sti
ins
push
test
sbb
sahf
xor
(bad)
repz
popf
cld
ror
jle
(bad)
movs
test
jb
ins
sub
mul
inc
int
outs
and
ins
mov
inc
in
dec
and
mov
loopne
mov
mov
inc
and
sti
ins
cmp
jle
inc
in
retf
and
add
popf
out
(bad)
(bad)
fild
jle
push
movs
test
(bad)
pop
(bad)
loopne
mov
pop
mov
inc
xchg
and
inc
dec
popf
(bad)
aad
push
int3
fistp
inc
push
data16
xchg
lock
fcmovnb
xchg
call
adc
mov
jmp
lds
adc
xor
inc
inc
(bad)
pop
inc
retf
inc
fisttp
push
cmp
mov
jg
dec
xchg
mov
jecxz
fwait
adc
push
jecxz
sti
inc
mov
dec
xchg
jmp
sub
les
xchg
cmps
sub
inc
hlt
pop
dec
lahf
inc
lods
dec
mul
popa
add
cmp
sti
dec
xchg
mov
pop
stos
daa
mov
jb
add
int3
cmps
cmp
jno
into
mov
fldcw
(bad)
sbb
mov
dec
fstp
xchg
lds
ins
inc
cld
sbb
imul
lods
bound
adc
mov
push
push
js
cs
jno
pop
fst
loopne
ret
int3
add
add
retf
fwait
dec
fst
hlt
adc
jle
adc
loope
push
jle
adc
jle
rcl
adc
popa
pushf
push
mov
aas
out
sub
mov
inc
ret
mov
push
sbb
mov
push
ret
pop
lahf
sbb
addr16
js
cmc
cmp
stos
cmp
mov
call
cmc
(bad)
push
pop
adc
inc
mov
outs
mov
sub
add
adc
xor
or
add
retf
push
sub
cs
jg
movs
imul
mov
enter
inc
cmp
or
lock
dec
lock
adc
push
bswap
lock
call
xor
sub
sbb
lds
gs
mov
jle
out
xchg
lahf
iret
out
sbb
aad
dec
js
stos
in
jle
and
and
xchg
jg
enter
jae
pusha
mov
add
sbb
adc
push
out
fmul
cmp
push
sbb
inc
retf
sbb
add
stos
lea
jl
xor
std
test
jp
pop
data16
mov
(bad)
push
cmp
neg
dec
mov
inc
xor
fwait
pop
(bad)
(bad)
jbe
xor
leave
add
xlat
push
rcr
shl
or
ja
icebp
ss
mov
jle
shr
lock
cmps
fld
js
retf
fs
xor
addr16
je
sub
jnp
aad
ins
dec
dec
js
dec
cmp
scas
xor
xchg
mov
mov
jl
loop
jecxz
jp
xor
pop
xlat
and
call
jl
or
imul
fisttp
mov
fwait
or
movs
ins
out
adc
cmp
push
repnz
add
mov
fisttp
push
fisub
mov
jge
out
ds
fnstenv
xor
dec
popf
jns
lods
jae
or
into
lock
daa
daa
push
lods
in
fwait
(bad)
adc
lock
jno
xchg
jae
sbb
push
nop
scas
inc
fwait
add
mov
movs
cmp
cmps
pop
push
daa
retf
pushf
mov
mov
cmp
push
stos
adc
icebp
into
sub
rol
push
jp
out
clc
imul
or
imul
test
jl
cdq
jecxz
sbb
lods
cmp
test
retf
dec
div
pop
repnz
daa
mov
(bad)
(bad)
call
addr16
or
jbe
pop
pop
(bad)
shl
cmp
cmp
push
mov
out
jmp
xor
ja
or
jno
test
pop
jo
(bad)
ja
add
jne
inc
sub
dec
inc
mov
enter
int
inc
jbe
adc
add
out
(bad)
cmp
mov
inc
pushf
scas
ds
fwait
imul
inc
jle
xchg
lock
cmp
xchg
jge
lock
xor
je
jbe
mov
sahf
mov
daa
into
xchg
das
pop
out
enter
lock
fist
mov
mov
retf
dec
jg
push
add
mov
cdq
inc
int3
xchg
dec
test
inc
or
xor
xor
pop
ret
cmp
bsf
ins
or
sub
test
push
sub
mov
sar
cs
pop
cld
pop
jno
and
cmp
add
cmp
stos
and
test
rcl
adc
ss
add
adc
ja
fs
inc
cmps
outs
dec
push
and
jmp
scas
jmp
mov
mov
icebp
jp
and
dec
mov
add
fild
push
call
jae
xchg
and
mov
xchg
jnp
jmp
scas
stos
inc
add
fsubr
mov
cmps
lea
aas
mov
push
outs
jmp
inc
cmp
ja
cmp
jns
push
mov
push
xchg
pop
mov
sub
(bad)
mov
push
xor
pop
and
in
inc
sub
inc
mov
and
scas
push
and
adc
pop
push
test
mov
jno
dec
clc
inc
mov
fld
push
fucomip
aas
aaa
or
mov
adc
xchg
outs
lods
ret
xchg
push
int
test
imul
pavgb
scas
xlat
mov
dec
and
aaa
cwde
push
cs
pushf
xlat
sar
xchg
mov
xor
popa
retf
lahf
pop
enter
inc
xor
inc
or
sub
stos
aad
lock
xchg
push
retf
scas
inc
(bad)
fsub
dec
(bad)
mov
mov
mov
push
jne
dec
adc
cmp
lods
cdq
mov
scas
fist
sub
fisub
(bad)
aas
pop
js
lea
push
out
scas
mov
or
pusha
repnz
sbb
loop
sahf
inc
iret
test
xchg
dec
inc
mov
movs
dec
dec
mov
retf
out
and
cmps
inc
dec
push
mov
or
rcl
pop
and
push
pop
fs
(bad)
add
sti
mov
mov
lods
(bad)
fsqrt
mov
shl
jns
repz
sbb
push
inc
hlt
sub
hlt
sti
pop
retf
in
mov
push
inc
loop
mov
xchg
movs
cmps
adc
xchg
ror
rcl
add
mov
dec
sbb
sub
aas
inc
test
imul
iretw
test
xor
pop
scas
stos
sub
cs
mov
xlat
rcl
mov
add
and
push
mov
(bad)
xchg
add
out
lock
xchg
and
mul
sub
push
scas
lea
fidiv
aaa
jmp
sub
sahf
pop
shl
imul
xchg
je
dec
mov
push
imul
icebp
mov
xchg
and
cmps
xor
(bad)
adc
cmps
aam
adc
loope
into
xchg
inc
stos
push
push
stos
int3
adc
inc
sub
or
cwde
je
push
movs
mov
(bad)
outs
std
push
adc
sub
mov
gs
mov
pushf
mov
rcr
mov
fdiv
dec
mov
repz
ret
xchg
jle
ficom
shr
fild
imul
sbb
sub
jp
and
test
cwde
add
xchg
ja
movs
leave
xchg
cmc
sbb
pop
and
loopne
enter
loopne
cmp
mov
bound
pop
retf
push
mov
pop
inc
fcomp
or
dec
pop
push
sub
pop
fldcw
enter
sti
pop
dec
adc
xchg
mul
in
mov
xchg
int
and
stc
sub
xchg
scas
pop
and
test
shr
jb
cwde
pop
push
sub
scas
push
loopne
jg
in
dec
cli
push
repnz
iret
xchg
test
lahf
lods
fimul
jl
jns
(bad)
ins
xor
stos
and
scas
out
jae
repnz
(bad)
lock
xor
pop
jo
sub
and
or
push
scas
daa
inc
jmp
mov
lea
ins
scas
loop
pushf
scas
push
xor
pause
inc
dec
fdiv
inc
and
lds
clc
lods
jge
mov
lahf
adc
retf
popf
xor
sub
inc
retf
retf
inc
in
jle
jbe
mov
sub
icebp
inc
and
mov
mov
lahf
fpatan
out
dec
or
jo
or
fstp
xchg
cmp
or
sbb
ins
dec
push
cmova
outs
push
adc
xor
ss
call
dec
mov
jns
loope
cmp
dec
or
pop
jne
push
lock
mov
mul
sub
add
aaa
jno
sub
out
inc
fisubr
pop
adc
add
jmp
pop
bound
(bad)
push
out
(bad)
(bad)
cmp
push
dec
test
lds
out
daa
loopne
cmp
xor
pop
push
adc
sub
loopne
stos
lock
and
lods
aas
mov
lock
and
or
sti
xchg
popa
sti
test
shr
jne
xchg
sub
in
enter
jne
xchg
loop
ror
mov
and
or
dec
stos
and
fiadd
mov
xlat
lods
adc
add
jecxz
mov
ss
pusha
retf
aad
ds
or
xchg
bound
xchg
mul
(bad)
outs
test
jle
stc
push
mov
ret
sbb
mov
adc
jge
adc
and
jmp
iret
cmp
jns
gs
out
push
pushf
bound
mov
daa
sub
(bad)
mov
push
outs
fdivr
mov
xlat
xor
cmp
clc
mov
scas
cld
xchg
xchg
movs
cli
les
push
fwait
jg
cmp
aad
imul
lea
pop
xchg
daa
cwde
pusha
int3
and
loopne
std
push
or
sub
inc
in
xchg
stc
mov
retf
xchg
mov
shr
dec
fsubr
out
or
sub
mov
sahf
xchg
ins
scas
pop
xor
xchg
push
sbb
cmp
ror
repnz
xor
jno
les
scas
dec
xor
add
mov
imul
inc
mov
loope
mov
jp
inc
inc
push
sti
dec
push
icebp
ins
retf
or
pop
xchg
adc
jbe
mov
dec
mov
mov
popf
mov
int
jg
mov
les
cmp
sahf
retf
xchg
pop
mov
mov
imul
dec
push
or
(bad)
push
mov
ins
in
mov
adc
pusha
test
js
(bad)
cs
in
mov
mov
imul
add
enter
out
push
cmp
icebp
sahf
push
jp
shr
xchg
stos
jnp
jno
popf
into
mov
adc
xor
(bad)
ss
(bad)
fisub
cmps
xchg
jp
stos
jnp
sbb
sub
aaa
mov
idiv
mov
xor
fisub
mov
lock
je
mov
push
lahf
pop
mov
jg
leave
mov
shr
pop
jmp
xchg
and
push
or
adc
lock
clc
shr
pop
add
call
icebp
and
jp
xlat
add
jmp
ins
data16
je
not
cwde
stos
adc
xchg
mov
jno
cs
xchg
inc
ins
enter
xor
cmps
dec
inc
rcl
ins
repnz
ficom
pop
sub
sbb
test
mov
mov
jmp
mov
push
sub
xchg
movs
sbb
scas
mov
mov
arpl
xchg
push
aaa
aam
shr
scas
inc
into
icebp
xchg
adc
and
dec
(bad)
repnz
call
aas
or
dec
jbe
mov
mov
fld
sbb
xor
nop
(bad)
xor
out
icebp
dec
lock
xor
xor
(bad)
mov
pop
adc
pop
into
sbb
add
xor
pop
or
fimul
add
sub
inc
cmp
mov
jne
adc
inc
push
mov
inc
mov
rcl
push
fld
retf
jae
cmp
jp
dec
mov
scas
pop
pop
sar
jp
fcomp
aam
xor
mov
cwde
jno
mov
jbe
fwait
pop
jmp
ret
mov
or
jns
and
or
ins
adc
mov
sbb
repz
cmc
mov
xchg
jle
neg
clc
sub
movs
xchg
push
lods
int
mov
adc
jmp
mov
shr
imul
mov
add
jmp
scas
xlat
add
and
mov
push
and
jmp
mov
mov
cmp
cmp
fcmovnbe
adc
and
mov
fnstsw
mov
xchg
leave
inc
xor
inc
push
pop
(bad)
mov
push
(bad)
(bad)
in
jb
stos
and
pop
outs
rol
arpl
push
enter
sub
das
cmp
adc
cwde
jmp
jp
bts
mov
and
inc
mov
mov
and
out
inc
icebp
mov
xor
mov
push
movs
push
sar
stos
dec
sub
sti
mov
mov
dec
out
in
neg
out
stos
mov
mov
pop
xlat
or
push
mov
push
and
mov
lahf
les
outs
daa
xor
iret
ret
ret
mov
adc
or
enter
push
add
retf
mov
lods
mov
xchg
cmp
mov
loop
xor
sub
ja
lods
or
pop
das
jle
add
es
dec
pop
and
mul
sbb
ds
mov
or
or
mov
shl
adc
sub
dec
popa
or
mov
scas
int
test
mov
arpl
(bad)
in
lock
xor
inc
lods
rol
inc
mov
cmps
retf
imul
out
or
push
imul
mov
cld
add
sub
dec
mov
mov
dec
mov
enter
pop
jnp
xchg
inc
adc
sub
mov
outs
sub
jno
popf
jb
mov
xchg
and
add
push
lods
and
inc
jg
push
hlt
mov
xor
outs
or
sub
cmp
rcl
adc
or
(bad)
xchg
lds
adc
(bad)
int3
mov
add
outs
jmp
fdivr
lock
mov
fisub
(bad)
retf
mov
mov
loope
repnz
fcmovb
or
add
and
and
pusha
cmp
shl
test
outs
je
clc
ss
clc
add
jnp
dec
pop
adc
in
fwait
daa
mov
outs
ss
les
aam
outs
mov
jb
and
mov
fnstcw
fild
outs
repz
mov
fwait
std
and
outs
jg
xor
out
fs
jmp
(bad)
(bad)
mov
sti
je
into
lock
fwait
sbb
pusha
add
mov
cmp
cmps
xor
cdq
adc
icebp
xchg
push
adc
loopne
push
mov
push
lea
daa
outs
adc
rol
xlat
mov
pop
fs
xor
mov
mov
push
jp
lahf
pop
clc
xchg
mov
sub
ja
into
ror
cmp
jle
repnz
mov
ret
jl
pop
mov
cmps
lock
sub
aaa
mov
ins
fisubr
aaa
and
sub
dec
arpl
adc
arpl
adc
mov
test
retf
shl
in
adc
mov
gs
shl
call
mov
ret
add
cmp
cmps
lods
mov
scas
inc
sub
jmp
rcl
mov
js
movs
ss
imul
jl
(bad)
sub
arpl
mov
mov
fisubr
repz
cmp
mov
shr
stos
pop
fist
inc
icebp
xchg
jl
pop
adc
sti
xchg
pop
je
shl
dec
loop
sbb
lods
jge
fwait
dec
call
add
int3
scas
movs
and
aad
(bad)
ret
popa
out
xlat
mov
jmp
(bad)
int
xlat
lahf
mov
test
or
cmps
xchg
call
adc
cmps
push
mov
xchg
xchg
idiv
ja
in
aaa
shr
and
jbe
xchg
int
jbe
sbb
sub
xchg
mov
mov
sub
scas
(bad)
jno
repz
repnz
jmp
jnp
stos
mov
jle
test
mov
xor
push
aaa
test
jp
cmp
sub
cli
les
paddq
push
cmp
push
(bad)
fs
push
leave
cmp
int
adc
cmp
inc
xchg
hlt
mov
mov
fisttp
add
inc
push
jne
sbb
int3
cmp
and
cmps
inc
jmp
xchg
inc
lods
jge
inc
in
jmp
scas
pop
and
les
(bad)
outs
dec
mov
retf
push
push
mov
les
xchg
mov
jle
mov
js
mov
into
mov
mov
loop
aad
movs
ss
sub
xor
mov
inc
cmp
jo
cli
jns
mov
fdivr
sbb
rcl
icebp
(bad)
cmp
ja
inc
push
int3
mov
push
and
shr
jbe
aas
outs
xchg
inc
cs
inc
(bad)
icebp
jbe
mov
cmc
cmps
push
outs
jb
dec
mov
dec
lea
scas
call
pop
adc
cmp
adc
push
jo
ja
loop
clc
xor
out
icebp
push
je
les
add
pop
pop
jmp
sub
loop
shl
aaa
int
fwait
adc
ja
inc
and
xor
dec
push
xchg
dec
dec
or
jmp
retf
rcl
xor
lds
pop
xchg
mov
cmp
scas
scas
pusha
retf
cld
cdq
push
sbb
fld
and
stos
xchg
retf
ds
(bad)
int
(bad)
cmps
mov
add
shl
hlt
mov
das
in
xchg
push
dec
dec
sbb
sbb
ins
push
and
push
or
pushf
fsubrp
test
ja
into
int3
and
xor
movaps
in
or
xchg
retf
cdq
lods
psrld
xchg
sbb
cdq
(bad)
ins
leave
mov
cmp
mov
mov
push
adc
jmp
shl
push
int3
ret
scas
and
jecxz
pop
shl
pop
test
lock
mov
cwde
push
icebp
push
call
adc
mov
fdiv
(bad)
jmp
mov
add
mov
test
lds
adc
sub
(bad)
pop
into
adc
pop
mov
shl
pusha
les
(bad)
retf
sbb
ror
pop
jge
xchg
push
push
scas
mov
mov
pop
sub
sub
mov
retf
jnp
loopne
scas
jnp
mov
(bad)
jo
cdq
jmp
adc
mov
jnp
dec
ja
mov
js
dec
out
les
dec
stc
loope
mov
inc
inc
add
push
mov
imul
mov
cmp
push
pop
call
repz
dec
jg
es
jmp
lahf
add
outs
mov
je
ret
imul
cwde
outs
xchg
add
mov
lea
adc
fdivr
das
inc
push
xchg
add
ret
sbb
fidivr
call
mov
jl
jmp
cmps
pop
cmp
retf
push
cwde
cmc
jp
mov
xor
and
(bad)
or
xchg
mov
clc
movs
lea
ins
inc
fcmove
imul
aas
inc
shl
and
mov
adc
pop
ja
dec
jl
add
jp
lahf
xchg
movs
icebp
xlat
inc
pop
mov
jmp
jp
pop
sbb
test
cmc
sub
add
inc
jbe
test
inc
push
jae
imul
inc
inc
stc
inc
out
adc
imul
(bad)
scas
mov
pushf
dec
ss
xor
cmp
into
or
(bad)
mov
in
in
bound
add
daa
cmp
mov
mov
push
add
and
mov
and
sar
aad
aam
mov
ret
and
mov
popa
clc
aam
gs
add
out
pop
and
outs
mov
xor
or
or
out
lds
mov
xlat
jno
adc
dec
add
data16
retf
fs
(bad)
adc
aaa
fiadd
mov
fadd
cs
imul
sar
pop
adc
movs
dec
add
jnp
dec
hlt
icebp
pop
jo
mov
and
icebp
pushf
cs
push
into
push
fs
leave
mov
and
je
or
mov
nop
icebp
push
cwde
fiadd
nop
mov
mov
push
push
arpl
shl
and
ds
mov
rol
std
mov
jp
cmps
sub
mov
jmp
leave
out
imul
push
pop
(bad)
mov
icebp
nop
and
les
ror
push
jae
and
add
adc
jno
pop
jg
and
icebp
in
push
fimul
adc
movs
push
dec
popf
pop
add
test
std
repz
push
sub
adc
stos
clc
fidiv
out
cmp
pop
inc
in
popf
sub
lock
enter
fdivr
dec
sub
in
jg
jb
cmps
fcomp
mov
call
scas
scas
sub
std
pop
add
retf
cmps
stos
xchg
cmp
(bad)
pop
xchg
repnz
lahf
adc
shl
push
push
adc
fsub
push
mov
call
push
and
push
mov
fimul
div
aaa
xchg
icebp
jg
movs
push
xor
jno
and
mov
clc
mov
out
jle
arpl
outs
je
jle
mov
frstor
fisubr
lea
sbb
and
test
jnp
daa
jmp
add
mov
call
jne
cmc
out
adc
les
aaa
dec
push
sar
test
int
lock
(bad)
pop
cmp
retf
sbb
es
enter
lahf
fcmovnbe
dec
fsubr
jecxz
xchg
xchg
mov
(bad)
mov
sbb
mov
xor
in
(bad)
test
aas
and
mov
mov
dec
data16
pop
rcl
arpl
pop
das
mov
inc
cli
xchg
dec
sbb
sub
in
test
and
pop
inc
jb
mov
(bad)
outs
test
and
iret
pop
(bad)
icebp
inc
push
and
out
sub
std
inc
push
push
mov
ror
call
ins
cwde
pushf
cmp
sub
jmp
inc
add
pop
push
or
mov
dec
mov
xchg
lahf
fwait
iret
not
repnz
jbe
and
cmps
ins
mov
mov
push
bound
movs
xor
cmp
or
jmp
stc
std
das
add
fst
stos
xchg
dec
ja
add
adc
int3
popa
and
(bad)
mov
shl
and
dec
mov
push
xchg
int
scas
jecxz
pop
and
pop
push
and
(bad)
retf
ror
stc
adc
mov
push
scas
push
int
nop
adc
push
stos
jb
inc
dec
xchg
(bad)
call
add
mov
jne
xchg
pavgw
icebp
fld
push
in
enter
or
mov
pop
push
cmc
ret
push
or
push
jl
test
add
jl
aaa
es
cmp
rep
lock
push
cwde
mov
fcmovnu
push
into
jmp
push
cli
in
add
iret
scas
sub
sub
shl
xlat
mov
cmp
push
and
shl
xchg
test
stos
cmps
imul
pop
stc
out
sbb
rcl
imul
inc
xor
push
xchg
(bad)
stc
scas
ds
jno
mov
mov
or
ror
ja
loop
fwait
int
test
jge
and
and
xchg
test
and
mov
(bad)
push
test
fwait
or
clc
jnp
fild
mov
not
cmp
stc
fsubr
pop
jb
sub
adc
out
pop
xlat
pusha
cdq
inc
push
xchg
scas
(bad)
sub
call
mov
jnp
pop
xor
hlt
enter
pop
sbb
jle
mov
mov
push
ins
mov
mov
sbb
mov
(bad)
scas
inc
xor
push
mov
push
shl
xchg
lea
jg
xor
shl
mov
ret
js
pop
adc
outs
sub
sbb
mov
nop
inc
jg
mov
sub
fidivr
sahf
es
sbb
stos
ins
push
xchg
rcr
scas
dec
ret
out
das
stos
pop
addr16
adc
add
dec
and
ret
pushf
imul
out
ret
sbb
dec
sbb
cmp
cli
mov
cmc
and
jnp
imul
(bad)
(bad)
xchg
aaa
lds
lods
cmps
lods
jo
test
or
out
pop
jecxz
sub
retf
push
cmp
jecxz
and
mov
popa
mov
mov
or
(bad)
in
dec
and
mov
das
out
push
add
aam
movs
xchg
push
push
sub
inc
cmp
jmp
add
cmp
nop
sbb
retf
shl
mov
sub
sub
stos
push
cmps
adc
out
sbb
sub
push
jno
mov
push
retf
icebp
into
out
leave
in
addr16
fimul
sub
shl
rcr
daa
call
out
dec
loop
jl
add
cmp
(bad)
in
cli
movs
(bad)
xor
dec
fwait
cmps
out
xor
push
popf
and
test
mov
outs
dec
push
add
and
scas
lea
jg
idiv
push
xchg
ds
xchg
xchg
adc
sbb
cli
dec
mov
jl
aas
hlt
dec
cmps
in
imul
cwde
push
test
pop
sbb
jno
or
xchg
enter
dec
fwait
or
sbb
jns
loopne
stos
xchg
cmc
aaa
leave
les
out
xor
out
jae
xchg
inc
mul
mov
xchg
mov
push
out
pop
int3
stos
xchg
cdq
pop
sub
imul
stos
stos
sti
or
xlat
jl
add
push
aaa
push
adc
mov
inc
pop
lock
xchg
inc
movs
xchg
pop
nop
pop
inc
xor
int3
cmp
sbb
fwait
scas
out
out
movs
push
loop
outs
jmp
push
inc
call
(bad)
ror
(bad)
iret
stos
mov
pop
push
inc
xchg
mov
in
scas
dec
dec
mov
sti
neg
push
push
repnz
scas
into
xchg
mov
mov
xchg
mov
mov
(bad)
daa
pop
inc
lods
adc
stos
das
cmps
(bad)
aad
scas
sbb
jmp
dec
add
jg
retf
pop
scas
dec
out
ret
jne
ret
dec
sub
aas
repnz
jne
adc
xlat
push
aam
pop
mov
pop
das
jmp
mov
pop
pop
pusha
adc
pushf
ror
pop
fcomp
inc
xchg
jg
(bad)
shr
mov
mov
mov
repnz
pop
lea
push
jg
sbb
mov
int3
mov
mov
hlt
xlat
mov
xchg
mov
pop
adc
push
scas
(bad)
fld
and
(bad)
xchg
lahf
sub
lds
pushf
mov
mov
pop
adc
xchg
jno
stos
cmps
pop
xor
retf
out
jae
xchg
mov
jmp
dec
and
repz
mov
sub
sbb
and
jo
iret
das
enter
inc
xor
pop
mov
push
outs
inc
test
sub
(bad)
sbb
into
dec
aad
data16
stos
xchg
daa
or
jp
sub
lea
jbe
movhps
je
inc
inc
jno
popa
test
add
pop
retf
adc
pop
xchg
das
shr
outs
pop
retf
dec
mov
sub
add
daa
ror
add
data16
jecxz
test
es
mul
and
ins
scas
mov
add
push
push
addr16
push
cli
xchg
arpl
je
test
jg
or
push
jne
bound
mov
mov
aaa
ds
stos
inc
sub
loop
(bad)
mul
sbb
cmovp
pop
xchg
es
scas
push
stos
sti
shl
retf
fwait
adc
jl
inc
fidivr
mov
xchg
adc
xchg
dec
div
cmps
ja
addr16
push
adc
jecxz
sbb
test
loop
xchg
xlat
int
mov
test
jg
mov
push
mov
dec
push
outs
rsqrtps
pop
dec
call
or
bound
mov
fwait
mov
test
push
loop
call
sbb
push
pop
or
out
ror
fwait
push
mov
cmps
adc
add
push
arpl
test
call
test
test
popf
(bad)
aam
js
push
call
jno
lahf
sti
cmp
inc
pop
in
xor
mov
pushf
dec
sub
in
mov
cmp
mov
jg
dec
pop
ja
loop
sbb
je
js
sbb
jbe
mov
xchg
fwait
pop
retf
retf
jg
sar
mov
iret
bound
je
pop
or
pop
mov
test
scas
dec
xchg
pop
iret
movs
aas
mov
cmp
outs
fs
repz
sub
cmps
mov
outs
add
rcr
stos
push
fcomip
lock
add
xor
retf
pop
and
mov
mov
cmp
into
rcr
adc
and
bswap
sbb
aad
shr
xchg
arpl
mov
outs
inc
mov
mov
out
jp
jmp
nop
push
popa
call
outs
xchg
fld
jge
daa
int3
jge
je
sbb
popa
movs
pop
push
sbb
push
ret
data16
lahf
jnp
int3
push
icebp
test
sti
jmp
jecxz
aam
ds
mov
stos
dec
mov
jo
(bad)
mov
push
sbb
cld
push
stos
sar
test
push
xor
push
dec
and
inc
lds
lods
or
fcom
jns
jl
xor
mov
fisubr
(bad)
sub
jae
repnz
mov
xlat
push
mov
xchg
pop
cmp
aas
or
dec
sbb
fisttp
xchg
outs
push
test
pop
mov
push
enter
jg
pop
jmp
js
sub
ret
outs
ror
ja
sub
mov
xchg
or
ret
leave
inc
mov
pop
outs
test
je
(bad)
jno
fwait
adc
int3
hlt
pop
scas
pop
xor
es
shl
dec
push
xchg
(bad)
pop
fld
retf
mov
dec
mov
add
or
inc
iret
stos
in
mov
mov
sub
or
pop
fneni(8087
xchg
xor
sbb
fiadd
jno
ja
fcomp
and
or
xor
psubsw
jge
and
imul
test
popf
sub
or
dec
pop
mov
mov
test
ret
push
inc
js
not
xor
ins
repz
xchg
test
outs
dec
mov
cld
imul
(bad)
mov
(bad)
mov
cld
add
xchg
repnz
push
mov
mov
mov
clts
push
cmp
mov
arpl
call
dec
pop
jmp
sub
add
sbb
sub
jo
mov
arpl
adc
sar
mov
push
and
inc
inc
adc
mov
icebp
fild
add
adc
inc
data16
scas
ja
das
xchg
push
inc
and
cs
pop
ret
fisttp
jmp
icebp
sbb
stos
add
adc
add
call
scas
mov
dec
sti
ret
xor
xchg
aad
pop
pop
mov
jb
aas
(bad)
pop
shr
cmp
neg
pop
inc
lea
push
test
sbb
jle
and
pop
mov
jne
mov
push
jbe
mov
push
stos
and
cs
nop
pop
push
push
jmp
or
cld
mov
out
jge
mov
je
scas
div
ins
mov
mov
rcr
mov
jmp
scas
inc
xchg
aas
push
inc
add
mov
not
xchg
retf
xchg
push
or
cmp
stos
(bad)
fild
ror
xor
cmp
xor
mov
jmp
shl
iret
into
shr
jbe
loop
pop
push
inc
(bad)
mov
imul
jmp
(bad)
push
add
or
div
lahf
cmps
sar
or
movs
jmp
jb
pop
call
imul
jb
adc
aaa
test
sub
test
pop
xor
scas
retf
mov
ds
mov
push
dec
call
fwait
enter
aad
pop
push
lea
inc
fmul
outs
xchg
stos
jmp
dec
cwde
(bad)
shl
stos
or
aas
dec
and
dec
push
xchg
pop
bound
fisttp
inc
(bad)
jmp
retf
repnz
shr
js
out
add
scas
push
xchg
retf
mov
sub
mov
pop
or
shl
jmp
cmc
pop
stos
outs
mov
movs
shr
dec
cmps
cwde
cmps
sbb
inc
inc
pop
cli
test
gs
push
arpl
pop
pop
or
je
sub
dec
icebp
call
(bad)
xor
cs
ret
xchg
fsub
cmp
inc
cmp
and
test
jp
xor
or
test
pop
mov
add
xlat
xor
sub
xchg
pop
neg
fwait
add
pop
repnz
cli
cld
(bad)
push
retf
cmp
add
dec
ss
sub
sub
scas
dec
ret
rol
adc
out
imul
loopne
xchg
fwait
xchg
addr16
movs
sub
enter
retf
neg
out
aas
jmp
jo
xchg
pop
dec
sub
hlt
scas
and
or
xor
(bad)
pop
in
xchg
jmp
and
pop
adc
leave
push
push
and
mov
pop
lods
imul
xchg
popa
xchg
clc
int3
retf
xlat
cs
aam
cmp
out
sub
lock
push
xchg
dec
mov
lods
scas
add
jns
(bad)
imul
mov
imul
or
addr16
div
retf
(bad)
jno
push
repnz
hlt
(bad)
pop
push
cmp
bound
rcl
xchg
pop
dec
sub
or
shl
(bad)
aaa
mov
addr16
mov
inc
out
mov
sar
out
jmp
mov
xor
add
dec
cmp
xchg
cs
jle
sar
leave
ins
or
mov
inc
sbb
icebp
xchg
xchg
mov
inc
das
icebp
adc
cmp
or
mov
lds
mov
ja
xor
cmp
and
sub
outs
xor
stos
push
dec
sbb
xor
in
inc
mov
stos
ret
mov
test
and
adc
enter
enter
mov
pop
sub
nop
aaa
not
dec
xor
pushf
sbb
ins
mov
outs
cmps
enter
test
inc
and
iret
pop
mov
push
outs
repnz
mov
pusha
add
mov
neg
push
retf
and
push
ret
ret
lahf
and
add
push
sub
fld
loopne
(bad)
push
mov
xchg
sub
out
or
cld
das
outs
push
retf
sub
sbb
and
bound
adc
jmp
jo
pop
push
sub
pop
inc
pop
jmp
outs
ret
lahf
sub
mov
and
(bad)
mov
test
xchg
and
add
sub
sub
sub
mov
or
pop
mov
div
fisubr
mov
mov
jmp
push
push
xchg
pop
loop
aaa
or
call
push
addr16
lahf
push
je
out
mov
div
andps
(bad)
pop
enter
ret
xchg
dec
push
push
adc
dec
or
arpl
retf
sub
mov
idiv
out
push
xor
cld
add
push
jmp
outs
loop
not
pop
push
add
pop
scas
dec
and
jb
and
pop
(bad)
retf
push
shr
mov
dec
add
mov
idiv
retf
jae
mov
ret
mov
jb
in
sbb
push
retf
retf
mov
sub
imul
mov
neg
loope
push
(bad)
pop
ret
out
pop
hlt
ret
xor
mov
sahf
sub
outs
mov
push
mov
jl
scas
mov
test
retf
ret
jno
push
jb
addr16
shl
out
hlt
(bad)
rcl
nop
sub
sub
mov
mov
push
add
mov
neg
pop
retf
pop
jo
push
ss
mov
iret
add
mov
idiv
pop
leave
jg
and
sti
and
idiv
mov
ret
jmp
cs
inc
sub
dec
outs
push
retf
sub
push
clc
add
xchg
not
push
je
pop
int
and
jmp
push
xchg
pop
sti
push
lea
arpl
aas
and
fidivr
inc
dec
ja
aas
xchg
pop
shl
sti
cmps
fist
aas
pop
or
imul
add
adc
pop
outs
xchg
aaa
nop
cmp
(bad)
xor
scas
not
push
xor
pop
adc
out
push
sub
(bad)
mov
idiv
cmp
or
push
jb
jmp
jnp
repz
mov
(bad)
mov
dec
jp
pop
sahf
mov
adc
push
(bad)
stos
and
add
test
pop
sub
or
dec
mov
das
js
retf
adc
data16
xchg
not
push
mov
sub
or
retf
imul
jmp
add
mov
in
inc
retf
stos
cmp
test
jns
rcr
(bad)
arpl
dec
sub
jle
cmc
enter
sbb
jg
arpl
jle
aaa
mov
aam
div
sysexit
cmp
ret
fbstp
push
mov
push
int3
ret
dec
lock
cmp
mov
push
push
add
into
pop
add
int
dec
pop
push
divps
jmp
jae
clc
or
(bad)
mov
mov
nop
mov
push
push
xor
push
mov
mov
xchg
xor
and
daa
and
js
fisttp
push
retf
dec
and
sbb
pop
and
add
mov
mov
dec
mov
xchg
repz
test
movs
mov
stos
mov
adc
xchg
and
push
jg
dec
jne
ret
mov
add
aas
dec
push
clc
out
mov
(bad)
into
sgdtd
sbb
repnz
leave
in
add
popf
add
shl
clc
rcl
repnz
dec
mov
mov
add
xchg
test
mov
outs
adc
xor
xchg
mov
xor
dec
and
push
imul
mov
and
mov
xor
sti
push
pop
jno
ins
mov
mov
add
push
mov
jmp
lahf
sub
xor
xchg
xor
add
or
xor
sub
inc
cmp
push
push
in
xchg
fmul
mov
mov
jp
imul
movs
test
out
sbb
push
jae
(bad)
cmps
mov
clc
stos
lahf
adc
cmp
lods
xor
xor
push
dec
mov
fidivr
sub
ins
cli
fisttp
push
sbb
mov
xor
push
push
jg
outs
mov
mov
push
or
(bad)
(bad)
lods
jle
ret
cs
dec
xchg
xor
dec
imul
ret
cmp
xor
push
loop
test
fimul
leave
test
push
jl
imul
push
mov
mov
push
adc
jne
lds
push
add
ds
jbe
repnz
push
test
mov
adc
out
cld
test
fdiv
pop
scas
int3
mov
sar
lods
push
and
iret
mov
or
stc
mov
cmp
popf
stos
and
mov
inc
xor
stos
imul
jp
mov
dec
mul
scas
jnp
mov
pusha
mov
fdiv
dec
out
push
jecxz
sbb
nop
imul
hlt
movs
xor
jno
mov
xchg
xor
leave
sub
je
leave
outs
xchg
push
xor
and
sahf
adc
icebp
xchg
loopne
test
pop
out
cmps
mov
scas
ja
dec
dec
push
scas
pop
nop
sub
push
stos
and
pop
fs
ins
je
push
jg
lods
cmp
(bad)
retf
mov
into
dec
call
ret
mov
fdivr
sub
jbe
push
mov
jmp
retf
ret
add
jg
test
inc
jecxz
fst
addr16
mov
test
or
(bad)
add
mov
out
ja
out
lahf
cld
(bad)
push
cmc
jg
dec
mov
hlt
ret
aas
dec
je
jno
push
pop
cs
nop
loopne
adc
lahf
jecxz
repz
inc
sbb
pop
xchg
(bad)
push
jmp
pop
mov
mov
shl
jmp
xchg
xchg
inc
punpckldq
push
mov
mov
jnp
and
sar
pushf
repz
jmp
lea
mov
dec
rol
add
lea
mov
sti
sbb
inc
mov
mov
add
sete
jnp
mov
scas
lahf
dec
lahf
ror
xor
xor
sbb
dec
xchg
daa
mov
(bad)
test
jbe
into
xor
jmp
add
aaa
pushw
fisttp
jae
aam
ja
enter
and
leave
adc
mov
fidiv
std
daa
fstp
push
xor
pop
stos
xor
jmp
gs
inc
xor
mov
jno
dec
aad
mov
(bad)
xchg
jecxz
inc
push
in
jp
(bad)
scas
push
push
xchg
push
ins
imul
scas
pop
add
pop
xchg
pop
dec
pop
inc
mov
and
mov
inc
xor
in
mov
add
(bad)
mov
mov
rcr
inc
into
dec
push
out
mov
mov
call
rol
scas
inc
mov
mov
out
iret
push
inc
cwde
punpckhbw
xor
push
lock
jno
test
das
int
mov
xchg
fadd
adc
outs
jb
jb
dec
xchg
repz
bound
cwde
and
jl
cld
xchg
arpl
add
ins
inc
adc
sbb
aaa
cmps
or
outs
pshufw
push
or
sub
jbe
das
push
and
jmp
loop
pop
add
cld
scas
mov
retf
sub
cmp
jnp
mov
retf
dec
fldenv
or
mov
mov
xchg
pop
outs
sub
data16
pop
inc
pop
(bad)
pop
sub
lahf
shl
adc
aas
and
xlat
jg
cmp
dec
push
xchg
(bad)
cmp
add
adc
mov
and
cmps
das
mov
xlat
pop
or
(bad)
js
xor
inc
mov
dec
jmp
repnz
add
pop
cs
test
aam
xchg
pushf
outs
pop
xor
lahf
cdq
pop
call
scas
fnstsw
dec
inc
inc
bound
xchg
daa
dec
jmp
loope
xlat
and
es
punpckhwd
jmp
cmps
jl
je
sti
into
dec
xor
outs
rcr
xlat
jecxz
clc
push
fdivr
int3
mov
out
cmps
xlat
jmp
out
cwde
shr
in
aad
shl
stos
xlat
pmaxsw
(bad)
mov
call
and
iret
fist
scas
pusha
loope
adc
leave
xchg
(bad)
clc
mov
push
repz
in
sub
push
pop
jne
inc
push
or
outs
xor
jmp
iret
pop
cmp
xchg
(bad)
pop
mov
cmp
xchg
lahf
or
push
aam
les
bound
mov
sar
sbb
sbb
imul
sub
test
and
movs
aam
jmp
jmp
test
out
or
pop
jmp
repz
imul
pop
arpl
outs
xchg
or
adc
in
aas
mov
sub
jecxz
in
xor
sbb
int3
jae
(bad)
sbb
add
das
pop
and
into
or
jmp
and
xor
jecxz
jp
outs
(bad)
stos
inc
adc
and
les
xor
mov
hlt
ja
icebp
(bad)
xor
mov
push
scas
mov
rol
fwait
pusha
xor
jecxz
sbb
mov
mov
imul
or
xor
lds
imul
and
mov
outs
fsubr
es
or
adc
cmps
jae
out
in
gs
or
or
ret
jmp
xchg
cld
(bad)
shl
add
push
dec
fistp
(bad)
test
div
iret
stos
retf
call
mov
xor
jecxz
mov
test
pop
xor
(bad)
mov
mov
retf
pusha
loope
cmps
aas
pop
cmovns
mov
fisttp
add
rcl
pop
jbe
add
xchg
scas
sbb
cmp
cs
cmp
jecxz
fist
mov
out
bound
xchg
rcl
outs
push
xchg
cdq
neg
add
inc
icebp
(bad)
fiadd
mov
xor
mov
xchg
mov
fwait
mov
or
rep
xor
and
imul
fisttp
mov
aas
data16
inc
add
aaa
xchg
retf
aas
imul
push
sbb
mov
mov
sbb
fcomp
out
test
sub
adc
mov
xchg
jmp
shl
xor
pusha
jns
jmp
call
push
mov
aam
xor
outs
fild
xchg
pop
ja
or
and
push
xor
test
xchg
stos
add
fwait
cmp
mov
mov
pop
int3
or
(bad)
push
popa
push
cmps
cmovno
sub
push
or
jnp
add
retf
inc
call
(bad)
aas
cmps
push
xchg
sbb
pop
ficomp
xor
sbb
pop
in
movs
mov
mov
(bad)
pop
inc
ss
out
outs
inc
push
loope
ror
xchg
adc
fcomip
xchg
cmps
jne
xchg
outs
xchg
pop
cmps
fmul
lods
rcr
(bad)
adc
fs
cld
mov
fcom
inc
cmps
pop
mov
mov
inc
sub
int3
pop
inc
retf
dec
jno
xor
call
pushf
push
sti
jecxz
loopne
xchg
xchg
loopne
pop
jnp
sub
pop
loop
dec
cmp
xchg
or
or
inc
(bad)
not
jae
imul
les
mov
(bad)
out
fsubr
outs
adc
dec
loopne
push
sub
ja
fisubr
xchg
sub
aaa
mov
jle
add
push
cmp
jmp
and
adc
mov
adc
cmp
(bad)
mov
mov
jmp
imul
scas
inc
xchg
call
adc
movs
adc
adc
xor
xchg
das
imul
mov
cmp
cs
and
out
das
sub
mov
jg
(bad)
jp
es
outs
pop
or
aam
dec
push
jge
ret
inc
add
pop
int3
ss
ins
xchg
fwait
xchg
lock
push
xor
push
pop
pop
cld
ror
repz
add
out
stos
xchg
movs
fwait
pop
xchg
shl
das
sahf
and
pop
repz
