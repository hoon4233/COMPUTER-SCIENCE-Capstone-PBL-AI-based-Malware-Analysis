jnp
mov
add
inc
mov
add
hlt
jno
add
push
mov
push
mov
sub
push
and
or
add
call
add
(bad)
pop
pop
ret
add
push
test
je
data16
jne
add
add
out
add
rcr
mov
data16
add
rol
movs
mov
or
add
fist
into
call
add
add
mov
mov
mov
adc
sbb
pop
and
inc
cld
add
pop
or
sub
lea
mov
mov
cmc
add
lea
push
mov
pop
popf
add
inc
jne
push
call
dec
add
call
ret
or
mov
lods
or
add
add
lods
addr16
pusha
add
xchg
push
or
test
inc
jl
push
and
inc
mov
shl
or
inc
adc
mov
cld
jmp
add
inc
nop
sbb
pop
xchg
inc
add
add
add
push
push
lea
or
lock
inc
push
ins
add
mov
xor
mov
leave
ret
lock
xor
shl
cmp
jae
add
mov
push
in
inc
xor
gs
push
adc
pop
add
js
jo
loopne
popa
jg
or
outs
repnz
nop
cmp
sbb
or
add
mov
pop
inc
or
add
loopne
or
mov
call
ret
add
jae
mov
inc
or
xor
rol
adc
je
call
cmp
jo
jae
mov
xor
add
ret
push
mov
inc
and
test
(bad)
cmp
jne
add
adc
cmp
pop
add
cld
add
mov
mov
add
jne
lea
dec
sbb
lea
push
call
mov
pop
add
mov
pusha
test
push
aas
pop
popa
out
add
mov
je
push
xor
pop
or
inc
or
add
jne
mov
push
mov
push
mov
add
mov
mov
push
cmp
setne
mov
adc
ret
je
mov
cmp
dec
sbb
pop
mov
mov
add
push
jnp
shr
add
push
push
push
call
add
adc
clc
(bad)
je
xchg
add
je
std
add
mov
cmp
or
ror
adc
inc
cwde
pop
xchg
mov
mov
pop
not
adc
or
xor
add
mov
pop
nop
or
mov
inc
icebp
in
xchg
or
int3
jno
xor
into
adc
push
and
push
pushf
pop
les
add
mov
mov
inc
ds
test
inc
sbb
pop
je
nop
pop
add
dec
add
dec
sbb
dec
lock
sar
inc
call
push
mov
sbb
push
push
dec
jne
call
les
add
push
add
push
pop
jmp
mov
outs
add
push
push
mov
ins
adc
mov
test
mov
xor
fadd
add
or
add
pop
mov
mov
adc
push
sgdtd
jmp
fst
and
mov
mov
push
les
xor
ds
pop
add
maskmovq
div
xor
mov
mov
jo
call
add
nop
add
and
cmpxchg
mov
pusha
mov
add
aam
shl
add
mov
pop
inc
jmp
test
aaa
jle
popa
nop
pop
add
adc
das
add
nop
jno
sbb
std
and
adc
fstp
and
push
cmp
adc
inc
or
add
dec
push
int
sub
adc
xor
repnz
xchg
adc
xor
xor
xor
aas
add
rol
out
in
or
das
add
and
cmp
out
adc
adc
pushf
lods
xchg
or
cmc
xchg
icebp
lahf
fadd
add
jecxz
pop
jno
push
adc
popf
xchg
fadd
mov
fdivr
lock
mov
cld
pop
test
pop
ror
push
les
push
adc
xor
mov
lea
jnp
movs
movs
movs
pop
movs
mov
or
cmp
xchg
pop
loopne
popf
pop
out
pop
and
mov
xor
sub
lock
xchg
adc
or
sbb
push
jo
pusha
push
pop
add
nop
xchg
movs
push
xor
imul
arpl
inc
jo
sub
add
cmp
adc
stc
jmp
movzx
mov
add
or
test
jne
add
xor
ss
jae
pop
out
inc
cmps
cmc
add
and
ret
(bad)
add
or
add
jne
je
push
lea
or
mov
xchg
adc
xchg
enter
imul
push
push
push
add
rcr
add
clc
push
push
mov
push
test
sar
add
movzx
leave
les
fidiv
in
inc
xor
mov
or
ret
call
mov
str
repz
in
pop
adc
xchg
or
adc
rol
outs
mul
xor
inc
push
aaa
mov
xor
cmp
push
les
arpl
push
call
les
inc
icebp
sub
adc
xor
add
call
and
push
mov
psllw
or
xor
ins
jne
push
test
jmp
sbb
adc
xor
test
pop
add
clc
mov
rol
add
test
pop
xchg
mov
pop
sahf
add
fs
pop
in
jmp
test
je
adc
mov
inc
add
inc
xor
call
(bad)
lea
xchg
push
aam
xchg
pusha
cwde
adc
add
lock
inc
shl
les
jo
xchg
push
sub
jo
adc
aad
loopne
add
adc
leave
shl
or
inc
add
cli
adc
bound
or
push
push
mov
adc
popf
xchg
push
(bad)
adc
jo
or
and
push
mov
das
mov
outs
mov
push
xor
enter
push
add
push
or
loop
inc
add
aad
add
mov
sbb
push
push
push
mov
push
pushf
popa
add
frstor
add
or
and
xor
nop
pop
(bad)
aas
sub
mov
les
push
push
call
add
xor
push
add
add
push
cdq
xor
lea
push
sub
sub
fmul
movs
loopne
adc
adc
sub
pop
dec
int3
dec
add
test
adc
add
dec
add
push
push
and
or
mov
or
add
gs
add
add
add
loope
clc
pop
addr16
retf
shr
adc
add
jns
jb
adc
xor
add
je
and
sbb
adc
(bad)
sbb
pop
xchg
xchg
add
repnz
add
mov
mov
scas
push
rol
fidivr
add
add
and
inc
sbb
test
add
add
fist
mov
inc
std
jno
pop
cld
call
add
push
adc
call
pop
pop
push
mov
push
and
cdq
push
or
and
test
lea
sti
(bad)
call
call
add
cwde
add
rcr
push
sbb
sahf
daa
adc
fild
push
lea
mov
mov
movs
pop
adc
add
adc
inc
ja
enter
popa
pop
fmul
rcr
add
lock
pop
test
sahf
adc
loopne
push
loopne
sbb
adc
aaa
mov
mov
add
adc
sbb
dec
popa
push
cwde
lea
inc
mov
add
sub
sbb
test
pop
rcr
xor
cmp
test
mov
xchg
xor
test
push
adc
push
push
mov
jno
call
and
inc
sub
sbb
loopne
adc
cmp
mov
sbb
mov
adc
inc
inc
xor
mov
and
push
hlt
in
cmp
arpl
add
push
stc
pop
pop
rcr
js
fsub
loope
add
push
xor
jge
xchg
lds
xchg
js
xchg
pop
enter
add
mov
adc
nop
cdq
or
add
lahf
lahf
pop
dec
int3
pop
gs
inc
inc
add
jno
push
mov
test
pop
dec
mov
mov
adc
mov
rcr
shl
ror
into
jmp
push
test
pop
push
jp
adc
mov
and
stc
xchg
push
cmp
or
in
xchg
clc
xlat
cwde
pop
shl
outs
rcl
repz
rcr
test
fadd
mov
fcomp
rcr
adc
dec
aad
cmp
rcl
pusha
or
mov
or
call
mov
xchg
cmp
mov
cs
into
sub
mov
cmp
adc
cwde
rol
lahf
rol
add
or
je
add
cdq
imul
into
add
pushw
and
adc
add
or
pop
add
mov
mov
adc
inc
cmp
jb
push
mov
or
idiv
push
call
pop
or
leave
pop
push
mov
shl
mov
inc
sbb
adc
adc
sbb
rol
xor
push
pusha
or
sub
adc
pushf
push
mov
push
enter
inc
cmp
daa
aam
mov
dec
dec
add
and
and
lea
add
push
inc
add
test
nop
push
les
adc
mov
dec
add
add
popf
les
jno
mov
jge
(bad)
rol
add
jecxz
push
push
push
mov
add
sub
sub
mov
inc
pop
cs
and
rdtsc
sub
add
int
adc
inc
cmp
pop
push
add
pop
dec
push
jne
jns
jne
or
std
or
icebp
pop
rcl
sub
dec
jmp
push
inc
and
mov
clc
cwde
or
fadd
add
cmp
cmc
sbb
add
jb
pop
add
xor
add
sbb
pusha
add
adc
cmc
adc
mov
add
push
push
push
and
gs
or
inc
jge
int
cld
daa
call
adc
inc
mov
dec
cmp
adc
push
xchg
add
add
push
adc
mov
sub
xchg
imul
gs
or
lock
jbe
mov
scas
push
inc
dec
sbb
sbb
daa
adc
sub
dec
and
inc
push
adc
pop
adc
jno
and
pop
push
push
push
cld
or
rol
sbb
test
nop
or
sub
pop
cmp
cs
add
sub
xchg
lahf
mov
xor
inc
adc
or
sbb
icebp
je
adc
sbb
add
jmp
jo
retf
mov
add
push
inc
mov
push
sbb
push
mov
je
mov
lea
add
popa
sbb
and
sbb
outs
add
inc
or
call
sub
add
mov
adc
push
(bad)
push
pop
sub
popf
pusha
jne
push
push
xchg
pop
lock
mov
mov
iret
es
add
adc
enter
mov
rol
mov
fldcw
out
push
inc
popf
fadd
and
lods
pop
mov
call
add
es
repz
xchg
in
lea
push
dec
inc
add
or
adc
push
test
(bad)
or
test
dec
sub
mov
push
repz
arpl
add
add
iret
mov
mov
into
pop
pop
and
test
push
and
jecxz
inc
int3
add
nop
jl
movs
out
lea
aam
mov
scas
adc
sub
inc
ret
or
jp
mov
inc
mov
call
test
dec
and
and
add
sbb
sbb
dec
dec
sub
in
and
loop
adc
or
push
inc
add
inc
ret
push
adc
adc
lea
mov
sub
inc
push
aas
mov
mov
dec
add
ret
add
test
ret
add
or
and
sub
add
adc
add
ins
add
mov
mov
and
sub
or
mul
push
xor
pop
pusha
movs
pop
dec
adc
adc
scas
bound
mov
sub
mov
or
fisttp
mov
test
scas
cwde
lahf
sub
in
add
add
adc
fmul
daa
pop
push
mov
mov
add
push
add
mov
rol
outs
mov
fsubr
inc
inc
inc
mov
nop
enter
mov
inc
inc
shl
icebp
pop
in
ret
dec
add
add
jbe
jb
xchg
add
rcr
push
int3
inc
dec
inc
mov
movs
arpl
sbb
push
or
inc
add
add
xchg
inc
dec
sbb
add
aas
int
dec
dec
adc
push
jne
or
xlat
shr
les
ret
sub
add
adc
jne
dec
nop
push
adc
dec
pop
mov
add
cmp
sbb
dec
ret
add
mov
add
jae
adc
push
push
add
add
lock
sbb
add
imul
sbb
loope
xor
cmp
sub
enter
(bad)
push
ror
ror
(bad)
pop
xchg
inc
xchg
fsubr
add
adc
and
adc
inc
push
pop
and
add
mov
and
imul
inc
push
test
sub
gs
pushf
mov
ins
data16
not
rcl
sti
or
pop
jmp
add
and
sub
and
push
sbb
add
or
add
xor
dec
fimul
aad
and
pop
jmp
mov
add
ror
std
adc
enter
pop
push
(bad)
out
rcr
rol
ret
lds
add
sub
xor
or
adc
push
daa
sbb
push
daa
or
push
inc
frstor
dec
and
or
push
or
jmp
mov
adc
and
add
push
push
enter
dec
or
add
xchg
ror
and
call
nop
mov
adc
mov
add
add
add
sub
jmp
sar
movs
add
add
mov
sub
sbb
stc
add
inc
add
mov
mov
test
or
cmp
test
adc
enter
and
add
mov
shl
rol
sar
jmp
xor
or
nop
push
cmp
jmp
push
fwait
push
jecxz
pop
adc
mov
clc
xchg
add
fs
inc
pop
cmps
push
add
jmp
xor
pop
mov
push
mov
sbb
icebp
push
adc
add
xor
fwait
xor
cmp
aam
sub
inc
inc
jae
xchg
adc
add
add
inc
dec
icebp
fldenv
test
add
enter
jmp
popf
add
add
call
inc
rol
rcl
xchg
test
cmp
push
ret
loope
adc
push
adc
push
push
push
jle
mov
imul
add
std
add
movs
inc
pop
and
adc
or
dec
add
sbb
xchg
lea
or
inc
add
out
adc
sub
popf
fisubr
shr
sbb
add
lods
pop
call
jne
push
push
repz
add
inc
popa
(bad)
adc
dec
sub
adc
pop
push
push
mov
sbb
test
or
push
sub
bound
cmp
cdq
or
nop
sbb
and
pop
pop
push
and
xadd
das
mov
and
add
sbb
cld
stos
adc
add
add
mov
and
adc
inc
sbb
sbb
cmps
xor
lea
loop
inc
jmp
pop
call
cmp
pop
adc
inc
hlt
adc
or
les
mov
push
data16
push
inc
cmps
xor
jno
je
aam
push
add
loopne
fld
gs
pop
mov
and
inc
ret
fld
cmp
push
jns
popa
xor
dec
shl
jo
or
add
cs
sbb
dec
jl
add
mov
retf
or
and
imul
sbb
pop
outs
cmps
inc
outs
add
inc
je
xor
jns
stc
xor
jne
inc
stc
adc
lock
ins
push
push
js
adc
pop
pusha
popa
add
rol
and
or
or
outs
or
pop
xchg
outs
add
hlt
sub
xor
lock
xor
test
pop
and
(bad)
adc
adc
xchg
in
nop
add
add
std
pop
mov
loopne
add
cmp
inc
pop
xor
mov
mov
ror
test
je
test
cmp
or
and
into
sbb
loope
or
je
add
pop
adc
mov
dec
xchg
in
dec
jp
cmps
ret
mov
pop
dec
adc
aad
adc
push
or
add
sti
push
lods
cmp
adc
add
or
xor
push
ins
push
jo
cmp
add
push
add
test
out
sbb
dec
sub
sub
add
scas
scas
lock
adc
std
xor
call
or
je
or
adc
pop
add
push
push
xchg
add
push
outs
sub
sbb
adc
adc
inc
add
pusha
mov
mov
push
icebp
pop
add
or
mov
sbb
sbb
and
pop
adc
aam
and
and
jle
sub
add
jmp
mov
cmc
imul
mov
ss
test
pusha
add
ss
retf
out
and
adc
pop
inc
sub
mov
dec
jb
adc
xchg
call
sub
push
repnz
inc
push
mov
inc
xor
aad
push
jb
loopne
(bad)
popa
inc
adc
pop
push
into
add
dec
adc
push
aas
xchg
xor
xor
out
pop
push
bound
add
sar
push
std
add
call
push
pop
cmp
add
lds
add
push
cli
inc
retf
dec
(bad)
inc
mov
mov
or
add
pop
test
imul
fxch
aas
ss
jne
mov
cmp
or
dec
int3
mov
mov
cmp
jo
push
ins
inc
popa
xchg
mov
dec
cmp
xchg
loope
rcl
mov
push
xchg
jns
(bad)
rol
push
mov
adc
and
mov
ins
pop
jns
add
add
add
loopne
mov
add
or
add
add
or
inc
test
iret
dec
movnti
sub
in
pop
pop
push
lea
loopne
mov
mov
xchg
or
cs
add
inc
adc
dec
daa
pop
sub
adc
mov
add
mov
sub
push
push
mov
adc
mov
sbb
add
mov
pop
inc
mov
dec
aaa
imul
scas
and
push
and
enter
cmp
add
stos
jecxz
add
and
add
cmp
add
push
call
loopne
sub
mov
mov
pusha
jbe
add
sbb
sbb
add
push
add
inc
loop
push
(bad)
sub
pop
mov
cld
xchg
dec
jo
dec
loopne
jae
rcr
clc
scas
inc
out
push
add
jge
push
(bad)
jne
adc
xchg
scas
mov
xchg
pop
adc
cmp
xchg
and
inc
or
test
jle
mov
mov
adc
add
mov
xor
cmp
add
inc
xor
jecxz
inc
add
sbb
imul
pop
mov
mov
pop
aaa
mov
mov
adc
sub
xor
dec
jo
push
adc
rcl
sbb
jmp
cdq
pop
sahf
scas
inc
and
int
or
or
xor
mov
add
sub
pop
add
test
pmaxsw
add
inc
loopne
add
mov
xchg
or
xchg
and
or
push
dec
add
ins
add
fld
bound
dec
add
int
cmc
inc
add
push
add
push
nop
push
(bad)
xor
mov
sbb
cmp
push
xor
xor
test
or
sub
dec
xor
popa
mov
inc
sbb
mov
add
adc
mov
xor
push
sub
add
add
inc
or
add
and
add
add
add
adc
jmp
pop
jl
cmp
jge
ja
add
or
sbb
adc
and
loop
pop
adc
dec
and
xor
sub
xor
adc
or
mov
push
or
movs
bound
cdq
bound
push
(bad)
repnz
mov
lea
add
dec
or
dec
into
mov
stc
adc
repnz
adc
in
dec
dec
pop
add
add
jle
ins
(bad)
into
call
popa
es
jmp
dec
push
pushf
cmp
fsub
std
test
cmps
push
adc
jo
ret
pop
jmp
clc
movs
rcl
add
cdq
push
clc
aad
call
call
in
or
js
ficom
mov
movs
scas
push
push
sub
add
push
mov
mov
das
daa
mov
cmp
and
sub
mov
jne
(bad)
adc
mov
aas
push
inc
sub
jmp
xor
cs
push
or
in
xor
(bad)
adc
push
push
test
dec
pop
sti
nop
adc
mov
inc
push
push
mov
call
adc
add
jo
pusha
inc
xchg
call
jo
jl
add
mov
or
add
ds
ficom
mov
pop
push
mov
mov
pop
inc
popf
add
jno
jno
adc
inc
lods
xor
es
mov
inc
lock
push
retf
sbb
and
int3
mov
rcr
and
test
jo
cwde
leave
and
mov
jno
fld
cmp
fadd
xor
and
cmp
sbb
inc
sbb
add
cmp
add
pop
mov
in
add
push
xor
pop
sbb
jmp
dec
cs
add
mov
inc
and
js
or
and
fs
daa
jne
mov
inc
nop
outs
mov
pop
pop
dec
nop
fisub
and
add
mov
add
inc
mov
ror
aad
mov
add
mov
nop
clc
pusha
xchg
or
push
jg
add
sbb
or
inc
(bad)
jge
cmp
jne
add
ja
push
call
push
mov
pushf
cmc
jo
cld
push
mov
sub
rcl
test
push
mov
inc
or
enter
ror
xor
inc
inc
cmp
inc
inc
ror
or
inc
lock
inc
xor
lods
xchg
pop
sbb
and
push
aam
mov
sub
je
dec
imul
push
mov
bound
push
jbe
sub
cmp
jne
add
repz
inc
push
add
xor
movs
mov
add
xor
popa
add
and
inc
sbb
mov
push
out
cwde
add
pop
pop
popf
es
pop
sub
or
adc
daa
mov
aas
xor
aam
adc
or
or
adc
and
pop
shr
arpl
cmp
add
add
leave
sbb
add
adc
inc
bound
pusha
xchg
and
pop
xchg
mov
jbe
add
(bad)
data16
push
lock
mov
mov
push
in
sbb
jle
add
shl
cmp
je
add
mov
jmp
sub
shr
test
mov
mov
mov
adc
shl
push
cmp
mov
mov
mov
add
mov
xchg
shr
into
sub
lds
add
mov
jmp
mov
push
xlat
xchg
sbb
add
push
adc
cmp
ret
add
or
in
mov
clc
mov
push
add
push
add
xchg
fwait
mov
add
or
xor
imul
pop
mov
jmp
push
lock
cmc
inc
sub
mov
cmp
jne
jge
call
and
test
cli
or
dec
sub
push
cli
inc
mov
in
push
cld
rol
add
(bad)
dec
bound
inc
add
sub
aam
ret
adc
inc
push
xchg
test
add
or
cmp
and
adc
cmp
jl
jmp
xchg
test
and
aam
test
inc
add
mov
cmp
xchg
add
jne
push
mov
sbb
mov
popf
xchg
mov
push
je
sub
pop
add
mov
les
gs
test
loopne
loopne
mov
test
cmp
jg
std
or
test
inc
movs
mov
lea
dec
xor
cmp
jne
add
adc
jne
cmp
mov
add
mov
sbb
or
mov
or
push
mov
daa
push
sbb
mov
loope
cmp
jne
jle
mov
adc
jge
adc
pop
and
adc
dec
clc
mov
loopne
or
inc
nop
or
add
sbb
nop
or
pop
add
icebp
in
sub
xor
mov
inc
popa
cwde
dec
push
stos
and
adc
push
sub
je
mov
and
jg
cwde
adc
mov
mov
mov
sbb
cs
scas
pop
rcr
or
xor
inc
inc
rcl
push
mov
popa
lock
rcl
repnz
and
mov
add
jge
pop
push
les
add
push
push
mov
test
add
push
push
mov
test
mov
add
inc
mov
ins
ins
add
add
inc
add
inc
dec
mov
pop
jbe
loope
sub
jp
and
and
or
add
syscall
shl
inc
icebp
das
data16
es
test
pushf
addr16
adc
mov
pushf
and
adc
cwde
(bad)
fisub
pop
pusha
nop
aad
inc
push
aas
pusha
add
js
add
scas
mov
fcom
loop
xor
xor
inc
cmps
and
push
mov
and
dec
add
cmp
je
push
push
jmp
add
adc
dec
sbb
nop
pop
mov
out
out
mov
pop
add
pop
pop
inc
dec
xchg
xchg
cmp
stos
pop
mov
push
inc
xchg
ins
mov
and
adc
sub
jbe
xor
gs
lods
mov
(bad)
scas
leave
or
lea
ja
push
mov
aaa
or
punpckldq
adc
push
aam
mov
inc
xor
data16
adc
adc
add
push
jmp
or
test
push
cmp
push
mov
or
and
or
inc
inc
add
xor
add
shl
arpl
mov
test
inc
add
and
inc
xchg
sbb
xor
in
push
in
xchg
out
in
jns
bound
je
aad
dec
and
add
add
adc
xor
clc
ror
xchg
sbb
(bad)
(bad)
adc
sbb
add
add
in
in
and
cmp
cmp
or
add
inc
cmp
pushw
nop
mov
inc
add
nop
push
and
mov
or
inc
cmps
add
add
and
inc
xor
push
and
mov
mov
xor
sbb
adc
push
mov
dec
nop
mov
add
sar
jae
rcl
jmp
cmp
(bad)
ins
enter
mov
xchg
or
scas
mov
sbb
push
push
out
aas
push
test
sbb
jne
xor
iret
nop
call
or
add
xor
and
add
add
add
dec
inc
add
les
ror
adc
popa
and
mov
and
inc
xor
mov
sbb
fcmovbe
sti
lea
loopne
or
cld
add
sub
mov
adc
pop
adc
je
jno
popa
and
inc
push
pop
add
dec
fisub
xchg
push
add
adc
cmp
ror
adc
fs
or
jno
inc
xor
dec
inc
add
xlat
repz
inc
add
leave
bound
xor
push
ins
and
(bad)
lock
jbe
data16
mov
outs
mov
loope
inc
xchg
fsub
out
and
add
push
mul
add
add
mov
add
push
pusha
jl
xlat
sbb
sbb
popf
dec
pop
mov
adc
mov
adc
nop
add
or
mov
test
mov
rol
inc
push
div
push
cmp
ja
add
sbb
jae
mov
mov
adc
xchg
sub
or
pop
add
inc
and
(bad)
pop
adc
sub
and
adc
add
test
into
pop
add
test
bound
mov
aam
xor
jne
jge
jmp
cmp
inc
test
add
push
or
add
nop
sbb
adc
add
je
mov
pop
or
jge
cmp
add
pop
or
add
cmps
es
or
add
jp
inc
or
dec
sub
push
inc
xor
or
add
push
daa
adc
mov
adc
rol
icebp
inc
js
pushf
adc
test
adc
add
mov
int
or
mov
shl
jmp
push
or
push
mov
mov
and
lods
and
sbb
bt
loop
sbb
sub
add
inc
xor
push
dec
and
add
or
add
sbb
inc
pop
adc
test
and
mov
add
or
lock
and
and
pop
or
adc
or
jge
or
and
add
jbe
inc
adc
jne
cmp
test
je
loopne
daa
jle
ror
test
jl
add
test
jb
std
mov
dec
jl
cmp
ja
inc
adc
or
jg
rcl
loope
mov
mov
xor
adc
ficomp
push
mov
rcl
mov
test
movs
sbb
and
jmp
cmp
sub
loope
jmp
mov
cli
mov
popf
add
jb
dec
adc
cmps
shl
lea
movs
add
mov
add
pushf
add
inc
add
push
repnz
jecxz
push
sar
dec
pop
jp
mov
leave
lock
add
xchg
movs
mov
dec
add
daa
xchg
add
sbb
xchg
cmc
dec
lock
xchg
xchg
add
pusha
out
push
inc
movs
cmps
in
cwde
pop
inc
jno
and
and
adc
pusha
sbb
adc
add
cli
sub
and
add
lds
add
shl
(bad)
bound
jp
inc
jae
ror
and
push
and
push
cs
pop
pusha
mov
adc
add
push
in
push
push
pop
loopne
or
inc
test
adc
mov
(bad)
loop
pusha
mov
retf
arpl
add
push
xor
push
mov
rol
pusha
(bad)
and
mov
adc
inc
mov
cli
xchg
adc
xchg
add
sub
add
sub
add
stc
push
add
add
push
push
adc
ins
jb
push
add
jmp
ror
pushf
loopne
in
iret
add
mov
sub
mov
and
and
sub
add
push
push
push
and
dec
arpl
push
add
mov
inc
hlt
pop
xor
mov
jmp
loopne
sbb
and
add
sbb
call
dec
xchg
cli
fidiv
sub
adc
xor
cmp
jne
dec
mov
cmp
je
add
bound
ret
pusha
push
aaa
popa
mov
add
inc
mov
mov
sub
inc
ins
add
push
push
call
nop
add
sbb
or
xor
inc
push
or
stos
dec
add
mov
xchg
movs
dec
add
aaa
nop
sbb
inc
popa
xor
cmp
adc
jae
inc
adc
add
inc
push
push
adc
outs
loopne
add
mov
and
push
mov
inc
xchg
test
add
adc
ror
add
add
push
movs
sti
add
jbe
inc
hlt
jb
push
outs
pusha
or
popa
cmp
popa
test
push
lea
push
adc
pop
dec
pop
sub
inc
loope
adc
mov
loopne
push
mov
push
xchg
ror
and
enter
dec
adc
shl
sbb
into
mov
add
(bad)
and
lods
mov
test
sbb
sub
sar
in
or
jmp
popf
icebp
pop
inc
cdq
ror
mov
push
or
psllw
rcl
dec
fst
pop
out
pop
adc
test
jns
jae
stc
or
div
pop
lea
push
(bad)
call
leave
or
leave
and
out
xchg
adc
mov
clc
xchg
adc
or
push
adc
add
mov
aad
inc
add
push
popa
icebp
or
sbb
in
xor
call
sar
sar
lahf
xor
inc
mov
push
adc
push
movaps
or
bswap
cmc
and
lock
imul
inc
pop
and
add
(bad)
mov
sub
xchg
gs
push
xchg
mov
push
data16
aaa
jo
stos
(bad)
sbb
scas
sbb
mov
lds
push
adc
rcl
add
push
add
push
sbb
and
sub
push
sub
add
xor
ins
xchg
dec
adc
dec
and
or
xchg
and
nop
out
sub
adc
(bad)
call
in
dec
lea
adc
shr
cmp
mov
nop
pop
test
mov
adc
sub
push
jae
sahf
and
cwde
out
call
xor
dec
inc
jo
dec
xor
neg
add
clc
push
mov
sub
xor
xchg
and
inc
call
mov
xchg
ds
cwde
mov
or
or
push
cld
or
cs
sbb
sub
ins
int3
push
cmc
adc
(bad)
mov
inc
push
shl
and
push
push
rcl
push
(bad)
mov
lds
cmps
(bad)
or
add
sub
cmp
adc
xor
mov
xchg
push
push
aas
arpl
jmp
jb
nop
sub
mov
add
lea
lea
mov
add
add
sub
mov
fisub
(bad)
or
xchg
sub
mov
cmp
aas
mov
popa
fwait
rcl
mov
add
mov
es
add
es
cwde
outs
jmp
movs
mov
inc
xor
in
mov
ret
fadd
test
ret
out
cs
stos
repz
add
test
push
add
push
cmps
or
inc
push
xlat
cmps
push
les
sbb
mov
mov
repnz
push
add
xor
into
mov
cmp
movs
inc
test
add
sbb
add
xchg
push
mov
(bad)
jb
popa
out
rcl
add
sub
je
outs
aaa
and
vmread
mov
xchg
mov
mov
pop
push
and
and
push
xor
and
hlt
inc
sbb
movs
hlt
inc
sub
mov
pop
mov
inc
(bad)
or
or
fs
xor
jmp
das
or
dec
popa
loopne
jbe
mov
pop
sub
bound
xor
add
inc
(bad)
cmps
cmps
or
fld
ret
jmp
mov
mov
es
mov
adc
add
and
and
xchg
xor
or
add
adc
or
mov
mov
mov
ds
mov
sbb
ja
bound
call
bound
adc
pop
pusha
or
fcom
sahf
imul
aas
and
js
sub
shr
jnp
add
mov
add
in
and
xor
rcl
shl
and
(bad)
jbe
add
inc
mov
pusha
cmp
lock
pop
popa
test
and
and
xchg
call
inc
loope
add
fsub
inc
jmp
cmp
xchg
popa
and
in
pop
adc
mov
push
pop
pusha
or
xor
fsub
inc
nop
clc
adc
nop
clc
add
add
mov
rol
clc
add
clc
adc
xchg
clc
lds
out
in
mov
or
add
(bad)
enter
mov
adc
cmp
cmp
and
jne
mov
inc
in
or
xchg
gs
lock
push
push
and
inc
inc
cmp
cmp
push
jo
push
(bad)
loopne
js
pop
pop
push
out
ins
pusha
adc
nop
or
push
call
xchg
aad
push
mov
add
sbb
jae
sbb
pushf
cwde
jecxz
xchg
shl
push
mov
jo
add
and
push
and
push
sub
sahf
and
and
(bad)
cmp
inc
add
xor
add
adc
adc
add
or
push
and
mov
and
push
inc
mov
test
cmp
rcl
je
aam
sbb
add
add
pop
aaa
arpl
add
movhps
clc
mov
fsub
jb
adc
or
add
adc
ror
adc
inc
add
or
aam
xchg
jo
push
and
jo
and
pop
and
xor
sub
movs
add
xor
sub
xor
(bad)
cs
adc
bound
jecxz
and
add
adc
clc
push
cmp
jb
ja
adc
mov
add
and
mov
push
or
or
sbb
nop
fadd
add
mov
inc
mov
mov
dec
adc
mov
test
retf
adc
les
lea
sbb
adc
adc
clc
mov
and
inc
pop
mov
mov
or
add
cli
push
daa
pop
add
add
mov
push
les
push
push
pop
mov
or
push
add
add
cmp
add
imul
add
movlps
ror
popa
push
icebp
push
es
aam
mov
pop
ja
pop
pop
repnz
leave
lock
or
pop
jge
ja
xor
and
adc
ins
inc
and
mov
ficom
push
and
sub
adc
or
ret
imul
dec
push
sbb
mov
cmp
pop
retf
aam
std
jno
call
pop
das
push
test
push
jo
pushf
and
xchg
add
cs
cwde
shl
add
sub
add
adc
ror
sbb
pop
imul
mov
jb
xchg
retf
and
sub
daa
and
shl
addr16
call
push
inc
mov
sti
or
mov
sbb
jne
test
xor
test
loop
add
sbb
scas
shl
add
cmp
movs
push
xor
push
adc
cmp
cmp
dec
or
cmp
xor
ficom
and
adc
xor
in
mov
(bad)
das
loope
sbb
ret
js
call
mov
mov
add
or
pop
outs
xor
jno
clc
sub
lds
ret
add
mov
arpl
add
sbb
inc
pop
inc
adc
(bad)
das
je
adc
add
or
outs
shl
ja
mov
add
clc
bound
push
shr
lea
push
and
dec
adc
mov
jmp
rcl
mov
fs
sub
arpl
or
rol
(bad)
ss
inc
or
sub
retf
and
adc
adc
adc
adc
jp
cmps
push
add
xor
adc
dec
or
add
mov
cmp
jne
add
pop
push
sub
ins
push
ss
loopne
xor
adc
call
nop
push
jo
xchg
lds
or
jle
jmp
push
push
mov
(bad)
sub
or
mov
iret
jae
sub
jle
and
mov
rol
push
or
lds
mov
mov
jl
ror
mov
push
cdq
add
pop
jmp
lock
inc
pusha
adc
push
pop
mov
jb
or
outs
jl
call
sub
jmp
adc
add
push
add
nop
call
add
popa
dec
adc
aas
rol
cwde
test
gs
xchg
cmps
shl
or
stc
daa
cmp
jb
cmp
add
cmp
rcl
xchg
aam
xor
shl
lds
adc
ret
pop
mul
jge
ss
inc
mov
mov
and
nop
add
sbb
push
add
jno
jge
ins
and
ds
cmp
mov
mov
xchg
jmp
ins
arpl
sub
mov
mov
cmp
xchg
repnz
dec
add
aaa
and
dec
retf
xchg
add
mov
loopne
ret
lods
adc
cmp
jge
lock
scas
bound
sbb
or
add
ret
mov
mov
adc
jmp
mov
xchg
sbb
loopne
(bad)
test
sub
jne
push
shl
push
push
pop
popa
pop
and
pop
(bad)
call
push
cmp
cmp
and
sbb
jnp
xor
and
dec
sbb
loopne
add
into
imul
inc
call
push
call
lds
mov
add
mov
push
push
dec
sub
sub
test
mov
or
lock
bound
adc
pop
pushf
push
ss
pop
ss
push
ss
mov
ss
ss
ss
or
xor
xor
xor
cmp
into
adc
cmps
lock
sar
stos
inc
and
hlt
call
call
push
push
dec
movs
mov
outs
add
jg
xchg
jecxz
inc
out
ins
cmp
pop
and
pusha
add
fistp
push
push
add
xchg
or
and
sbb
movsx
jl
add
add
or
imul
push
push
inc
or
add
sub
add
cmp
je
dec
add
dec
pusha
inc
jmp
inc
lock
into
add
adc
or
outs
inc
or
fmul
cmp
pop
adc
pop
mov
(bad)
mov
adc
pusha
sbb
enter
out
xor
push
mov
xor
shl
push
push
adc
imul
jmp
cmp
cmps
or
popf
adc
push
pop
test
mov
mov
dec
stos
dec
and
jbe
add
movs
adc
push
sbb
rol
push
pop
inc
ror
popa
rol
add
loopne
or
jne
bound
push
cmp
inc
movs
pop
pusha
(bad)
adc
fisttp
mov
push
cmp
sub
pop
dec
and
push
data16
loopne
adc
pop
shr
mov
lea
push
mov
mov
ss
(bad)
adc
and
adc
push
jmp
add
add
push
push
call
call
arpl
(bad)
xor
dec
pop
and
push
jno
pop
xchg
pop
or
add
or
test
pop
lock
push
push
xor
pop
add
pop
add
or
sub
add
adc
cmp
js
dec
pop
inc
dec
and
or
add
and
fmul
pop
mov
movs
popa
cmp
sbb
fisttp
loope
aas
cmp
or
dec
adc
add
cmp
jle
push
or
and
jo
cmp
xor
daa
pop
and
and
inc
jno
adc
cwde
adc
stos
loopne
lea
aad
mov
mov
fst
xor
dec
sbb
loopne
or
adc
sub
fist
sub
(bad)
loop
test
jmp
push
push
jmp
adc
adc
ins
cld
bound
je
scas
or
mov
loope
add
mov
idiv
stc
ss
add
and
add
out
(bad)
xor
sbb
cmp
bound
add
xor
xor
jge
jge
push
pop
xor
inc
xchg
js
push
add
adc
nop
js
bound
xchg
clc
and
sbb
and
inc
inc
add
ja
inc
push
popa
add
xchg
lea
and
repnz
je
add
add
add
cmc
and
dec
pop
jo
sar
sbb
dec
and
inc
push
js
jno
adc
push
cmp
aad
xchg
jb
mov
inc
and
imul
ret
push
add
push
(bad)
jg
mov
nop
ins
pop
cmp
add
add
mov
icebp
pop
shl
mov
push
sub
adc
and
enter
add
mov
cmp
and
mov
popa
xlat
pop
mov
push
loopne
push
mov
mov
cmp
jne
popf
xor
push
push
mov
pop
push
mov
xlat
mov
add
push
in
test
add
add
jae
cmc
pop
or
sbb
sbb
icebp
pop
sbb
xchg
or
lahf
or
add
or
cmp
pop
sti
inc
add
repnz
les
sahf
mov
add
add
call
out
in
add
mov
add
leave
xor
mov
add
enter
push
mov
inc
cdq
or
sahf
fadd
fsub
test
xchg
adc
daa
les
push
mov
sbb
aad
adc
js
retf
add
call
lea
call
inc
test
mov
pusha
cmp
mov
push
push
clc
mov
pop
sbb
xor
ret
and
fimul
sub
pop
jle
add
jl
sub
push
inc
and
(bad)
jbe
sub
rol
into
cmps
cmps
adc
pop
aad
call
sbb
pop
sbb
add
mov
xor
(bad)
push
inc
jae
xor
inc
push
loop
rol
dec
adc
test
pop
rcl
sbb
jge
and
cmps
add
std
inc
add
xor
sbb
push
cmp
mov
mov
xchg
fwait
sub
clc
pop
add
xorps
sbb
mov
add
call
add
jae
mov
(bad)
xor
push
and
(bad)
pop
add
mov
adc
inc
sar
push
pop
aas
pusha
inc
cmp
mov
jne
add
jge
inc
sub
inc
imul
leave
add
inc
xor
add
adc
dec
or
cli
(bad)
inc
fs
stc
xor
pop
and
outs
mov
xor
adc
xchg
adc
adc
push
test
adc
loopne
test
adc
xchg
add
lahf
cmp
adc
out
adc
nop
cwde
cmp
sbb
xor
repnz
js
(bad)
sub
push
movs
xor
sub
movs
mov
push
sub
popa
push
pop
inc
push
push
popf
icebp
push
inc
or
bound
mov
inc
adc
(bad)
or
loop
add
xlat
xor
add
jg
or
fld
mov
cmp
xchg
repnz
mov
push
mov
dec
adc
add
sub
cmp
adc
xchg
ds
sbb
push
lea
add
ror
out
ret
push
or
adc
push
add
dec
and
push
add
mov
les
inc
and
cmp
bound
push
aad
push
add
pop
push
inc
lea
adc
mov
sub
test
hlt
(bad)
add
jge
adc
fld
push
pusha
mov
mov
sbb
and
test
add
mov
push
nop
inc
or
fiadd
out
enter
xlat
push
cld
rol
(bad)
pop
sbb
jecxz
push
xchg
sbb
lock
dec
pusha
sahf
daa
gs
pop
sbb
cmp
push
xchg
into
sub
(bad)
(bad)
out
add
lea
cmp
loopne
push
rcl
adc
mov
(bad)
push
shr
sub
jo
popa
jne
jb
adc
add
adc
jmp
adc
add
outs
xchg
pusha
xchg
or
adc
jmp
mov
sub
push
aam
add
inc
adc
in
nop
loopne
loope
inc
xor
add
mov
sbb
je
call
add
push
pusha
xor
mov
xor
or
push
add
dec
add
inc
push
mov
cwde
mov
loopne
push
ror
cwde
push
pop
mov
mov
push
loopne
sub
push
xor
sbb
push
test
and
and
jle
push
add
adc
mov
and
enter
adc
pop
or
mov
repnz
sbb
ins
pusha
add
ins
lock
mov
(bad)
fwait
inc
nop
xchg
aaa
add
out
call
lds
es
inc
adc
add
sub
add
sub
add
ud0
pop
shl
xor
div
fimul
in
add
call
inc
sub
cmp
loopne
cmp
or
and
adc
cmp
imul
loop
add
mov
or
lea
pop
test
add
(bad)
and
jbe
xor
xchg
das
xchg
pop
xchg
test
inc
pop
nop
add
out
bound
cmp
popa
xor
lea
loope
ins
xchg
pop
and
sbb
xor
xor
or
call
pop
adc
rcr
aas
xor
ret
mov
and
xor
pop
inc
adc
call
pop
mov
mov
add
cs
popf
inc
xor
loopne
outs
xor
shl
aam
inc
add
jle
adc
add
or
in
and
push
xchg
jge
add
push
adc
xor
inc
rcl
add
nop
test
adc
push
or
dec
out
mulps
inc
cmps
fidiv
nop
push
mov
out
jg
sub
aas
mov
inc
pop
bound
adc
push
cmps
mov
adc
pop
(bad)
ficom
or
push
mov
call
movs
xor
sbb
mov
or
enter
rol
mov
int3
adc
shr
adc
ror
sbb
inc
sahf
or
jp
je
lods
and
cmp
mov
sbb
scas
pop
add
mov
xor
inc
sbb
add
scas
bound
inc
pop
sbb
mov
ins
add
adc
stos
outs
adc
call
and
clc
(bad)
sub
cmps
addr16
mov
adc
pop
xchg
stos
stos
mov
ins
pop
add
sti
push
pop
adc
sub
popa
jle
add
mov
and
add
pop
ins
mov
xor
out
mov
les
daa
retf
mov
and
xchg
aam
jb
push
xlat
push
int3
in
lock
smsw
push
add
push
add
nop
das
jbe
or
pop
adc
sub
or
xchg
popa
in
test
test
cmp
pop
popa
mov
retf
out
pop
mov
sub
shr
lods
ss
fimul
push
cmp
add
imul
add
ds
push
adc
(bad)
shl
jmp
loope
push
push
push
push
jb
adc
xchg
adc
xchg
add
outs
xchg
or
add
ret
mov
adc
push
push
jecxz
push
xor
add
(bad)
fmulp
and
add
not
dec
adc
and
ficomp
inc
push
test
je
add
enter
je
add
cmp
retf
popa
cmpxchg
dec
(bad)
mov
push
dec
or
add
cmp
aas
enter
into
add
and
inc
or
bound
mov
and
fnstcw
inc
out
or
pop
hlt
lods
adc
es
adc
adc
sub
push
add
jb
cmp
xor
retf
es
rcr
rcl
sub
daa
sub
gs
add
mov
sar
cmp
je
dec
cli
or
mov
mov
add
xchg
jno
inc
add
add
ja
data16
push
repnz
ror
pusha
nop
push
bound
movzx
fld
dec
(bad)
and
xchg
lock
dec
xchg
sbb
push
mov
loopne
or
jns
or
bound
cwde
push
or
add
sub
add
or
cmps
mov
or
mov
call
mov
push
and
stos
lock
int
pop
pop
and
xor
out
mov
add
icebp
xor
lea
mov
cmp
xor
push
je
mov
sub
and
cmp
mov
pop
adc
pop
xor
xor
adc
mov
push
rol
call
cld
add
(bad)
add
xor
adc
jbe
or
mov
cmp
mov
or
or
loop
push
jbe
mov
mov
adc
or
adc
and
add
jb
sub
cmp
(bad)
shl
into
adc
fistp
add
call
add
pop
sub
ret
add
nop
and
loope
sbb
pop
or
push
inc
int
add
add
lock
loopne
sbb
dec
push
sub
lea
arpl
jle
add
in
or
ss
adc
add
fiadd
xor
test
cmps
(bad)
and
sbb
xchg
push
push
push
stos
inc
mov
xor
scas
or
add
dec
mov
fld
add
mov
cmps
dec
pusha
sti
lock
inc
adc
mov
lock
mov
inc
lock
dec
movs
adc
xor
jle
or
test
or
pop
push
mov
jbe
add
pop
aam
adc
inc
push
push
mov
push
cmp
add
test
cmc
xchg
push
sahf
add
fsubr
inc
dec
nop
mov
stc
sub
inc
mov
adc
sbb
pop
mov
call
arpl
ret
stos
shl
add
mov
inc
es
stos
adc
dec
xor
test
add
pop
mov
and
les
mov
ins
mov
add
cmp
push
rcl
loop
add
adc
adc
and
or
ret
jmp
mov
test
adc
add
mov
add
call
xor
ds
shl
pop
or
retf
ret
push
sar
and
or
add
ret
jmp
xor
xor
add
inc
add
js
(bad)
push
fs
and
pusha
push
and
sbb
inc
rcl
movs
cmp
jno
sbb
inc
push
push
push
call
and
inc
or
pop
(bad)
data16
mov
or
mov
dec
ins
test
and
adc
adc
mov
retf
sbb
stc
cmp
je
call
add
dec
xor
sbb
mov
inc
rcr
loopne
pop
rcl
push
push
jno
push
push
lahf
sub
or
loope
adc
jmp
dec
push
dec
pusha
hlt
ror
or
add
(bad)
loop
scas
nop
push
mov
nop
push
adc
pusha
xchg
mov
adc
xchg
out
mov
jb
cmp
adc
push
push
and
add
(bad)
(bad)
pop
pop
jne
and
fild
sub
pushf
xor
mov
rep
jmp
rcl
mov
add
or
and
add
jmp
add
and
lock
js
leave
add
add
xor
and
mov
mov
pop
mov
mov
mov
inc
add
mov
add
add
jno
lea
lods
inc
sub
mov
sbb
xchg
push
leave
cmp
jb
inc
pop
mov
lods
retf
or
retf
add
pushf
or
fldenv
inc
in
scas
nop
dec
hlt
dec
into
add
sbb
scas
retf
sbb
into
add
sbb
scas
retf
sbb
iret
add
sbb
pop
retf
sbb
fisttp
call
lock
xor
clc
or
or
rol
or
pop
pop
leave
ret
nop
test
sub
das
or
add
cmp
lods
aad
pop
push
rcr
xchg
ret
fist
rcl
rcl
aas
pop
retf
rcl
or
rol
push
stc
dec
xor
sub
sub
add
or
or
xor
lea
xor
pop
aas
repnz
aas
and
dec
mov
jne
movs
push
push
or
pushf
sub
int
out
add
xor
rol
or
add
add
add
adc
adc
lods
add
sbb
add
sbb
rol
adc
add
add
sbb
rol
or
add
or
rol
ss
push
fnstcw
ret
dec
add
mov
xor
sbb
and
stos
and
cmps
add
or
push
jne
adc
pop
fdiv
push
loope
or
and
mov
(bad)
push
or
cld
push
cmp
or
lock
adc
nop
adc
inc
and
jg
scas
fcom
(bad)
stos
add
outs
and
daa
add
test
test
je
cmps
cmp
mov
cmp
push
add
push
xor
cmp
add
dec
js
mov
push
mov
mov
mov
call
inc
and
hlt
or
pusha
out
mov
enter
jge
jl
pop
add
and
add
js
retf
ss
add
jmp
adc
add
loopne
fbstp
mov
jno
or
lods
mov
call
adc
fwait
or
pop
sub
fs
fwait
adc
je
pop
ret
cmc
loop
or
or
add
and
popa
adc
outs
nop
pop
inc
out
cmps
add
(bad)
pop
sub
in
xchg
call
adc
inc
xlat
and
adc
or
xor
push
sub
fldenv
mov
adc
mov
mov
or
enter
mov
mov
and
mov
mov
fadd
dec
push
push
push
mov
lods
push
and
push
jo
or
rol
pop
mov
push
psrld
mov
or
push
xor
dec
adc
add
cmps
scas
out
xor
jo
sub
data16
add
and
shl
push
mov
add
rcl
adc
mov
clc
and
setae
bswap
pop
(bad)
cmp
xchg
pop
push
sbb
xor
jecxz
jae
and
add
jb
cmp
inc
sbb
add
push
call
loopne
mov
jmp
add
push
push
adc
sub
push
xchg
mov
xor
cmp
loope
pop
mov
sub
or
or
shl
adc
or
inc
mov
sub
rcl
or
adc
out
push
shl
stos
mov
paddsb
sbb
inc
daa
fs
pop
or
adc
adc
adc
cmp
xchg
mov
or
sti
mov
ins
mov
sbb
add
inc
or
mov
push
imul
push
push
dec
sbb
stos
jmp
and
and
mov
mov
xchg
sar
sar
rcl
xchg
xchg
push
adc
rcl
icebp
inc
mov
dec
cdq
add
repnz
or
call
(bad)
pop
push
outs
sub
inc
ud2
mov
add
enter
or
add
cmp
jg
pop
mov
lea
test
add
dec
dec
mov
cmc
mov
mov
jns
mov
adc
xor
(bad)
or
mov
jmp
mov
xor
cmp
jae
adc
test
and
ja
add
push
inc
je
cmp
mov
cmp
push
xchg
adc
jnp
add
add
adc
cmp
push
mul
push
pop
dec
xor
jp
in
sbb
cmc
lahf
pusha
jo
push
or
(bad)
fst
jne
sbb
xchg
aas
add
cmp
inc
mov
sbb
outs
xor
rcr
push
ror
ins
pop
movs
inc
repnz
push
or
cwde
inc
xchg
mov
lea
add
nop
aam
sbb
add
ins
or
ret
xor
sub
cmp
je
sbb
add
test
jne
std
test
push
push
cmp
jne
fcmovbe
dec
nop
dec
add
xchg
adc
inc
ja
add
mov
cmp
inc
adc
adc
add
inc
hlt
add
adc
cmp
sbb
xor
mov
rol
aas
shl
adc
dec
mov
or
push
rcr
sub
cmp
add
push
add
enter
mov
shl
cmp
mov
rol
mov
je
add
push
cmp
pusha
test
rsqrtps
cmc
xor
cmp
sahf
jle
cs
test
or
outs
add
mov
adc
mov
inc
inc
push
jo
test
or
add
and
pusha
cld
add
dec
push
adc
jge
mov
xchg
ret
inc
outs
and
and
add
mov
loope
and
(bad)
test
or
and
xchg
fnsave
add
xor
push
pop
xchg
stos
cmp
je
aam
test
call
pop
es
ins
push
and
xor
ror
loopne
adc
or
and
and
adc
dec
or
pusha
test
loop
cmps
je
das
jno
adc
or
inc
or
ret
inc
adc
add
test
fimul
nop
jne
popf
and
add
push
arpl
add
fcomp
bound
jp
push
or
cmp
or
add
clc
or
mov
add
mov
pusha
pinsrw
addr16
jmp
push
or
mov
or
dec
not
add
adc
icebp
pop
add
mov
push
inc
add
test
je
push
test
pop
or
inc
jmp
nop
jb
push
pop
sahf
add
dec
add
or
xor
mov
loope
push
and
icebp
add
or
jb
fistp
data16
push
push
(bad)
cmp
imul
adc
sbb
addr16
rol
rcr
rol
xor
adc
outs
xor
mov
clc
add
cmp
(bad)
scas
mov
add
lods
lahf
push
loopne
and
push
imul
loope
and
test
es
push
punpcklwd
nop
xchg
sub
inc
xchg
adc
inc
out
add
in
sbb
sbb
add
or
sbb
cs
and
rol
inc
xchg
sub
cwde
(bad)
dec
lock
das
add
pop
cld
add
nop
cmp
and
ins
pop
adc
fcomi
adc
pop
ret
fisub
push
push
call
repnz
pop
lds
cwde
pop
dec
sub
ja
fwait
sbb
push
imul
xlat
xor
(bad)
sbb
je
xor
cmp
sub
xor
outs
push
add
or
popa
adc
daa
push
adc
jne
xor
push
and
jmp
push
add
push
push
call
(bad)
adc
adc
add
push
pop
mov
jp
arpl
adc
cmp
mov
mov
mov
outs
lock
int3
inc
scas
int
push
jo
dec
or
gs
popa
dec
xchg
cmps
adc
and
mov
pop
loopne
pop
fmul
jne
mov
dec
mov
mov
add
sbb
jne
push
movzx
push
pusha
sub
mov
fcom
(bad)
clc
or
sub
add
loopne
adc
add
mov
and
and
add
push
movs
sub
mov
add
and
jne
pop
les
inc
clc
xchg
add
inc
push
inc
call
je
add
add
mov
addr16
lea
add
jl
stos
jbe
xchg
add
call
sub
mov
rcl
mov
xchg
and
lods
cmp
cmp
je
sub
cmp
add
mov
dec
mov
leave
jmp
cmp
cmp
xor
out
pop
das
inc
add
or
jne
cmp
add
and
sub
jne
mov
shr
push
shl
add
or
lods
imul
push
(bad)
adc
add
jne
les
jbe
push
call
hlt
jo
clc
mov
mov
fdiv
bound
pop
fimul
add
cmp
data16
push
and
fdivr
sbb
xchg
enter
test
adc
mov
xchg
sub
rol
adc
pusha
fwait
push
sub
add
mov
enter
xor
test
scas
imul
add
or
fadd
fwait
nop
rol
dec
inc
mov
mov
sbb
sub
movs
not
js
cmp
pop
add
dec
add
inc
add
xchg
sbb
add
push
pop
push
pop
mov
gs
adc
inc
add
hlt
fwait
and
ins
adc
and
dec
and
mov
ror
les
imul
dec
and
and
mov
mov
lods
loope
fdiv
outs
push
sbb
or
into
inc
fcomp
xor
xchg
add
adc
inc
xchg
call
push
xchg
sub
inc
mov
add
dec
adc
adc
xor
xor
sbb
adc
mov
add
and
sbb
add
sysret
xor
imul
cmp
pop
adc
adc
xchg
pop
xor
add
pusha
dec
adc
add
sti
cmp
add
dec
xor
cwde
add
add
inc
or
loopne
mov
or
add
add
mov
lock
mov
mov
sbb
out
out
retf
and
test
rcr
adc
adc
les
dec
inc
mov
xor
cli
add
cwde
mov
adc
push
out
(bad)
jmp
gs
push
dec
pusha
mov
jmp
cmp
mov
or
nop
call
xchg
push
push
push
push
xor
sbb
pop
lock
loope
or
sar
add
add
add
sbb
and
rcl
ss
sub
push
add
add
or
adc
dec
add
call
cmp
stos
sub
push
sub
test
add
loopne
add
xchg
add
(bad)
cmc
and
adc
pop
out
imul
adc
outs
loope
daa
add
mov
inc
loop
loope
adc
mov
or
mov
fdivr
dec
mov
aas
push
add
arpl
and
aad
and
adc
xchg
and
or
loopne
sbb
imul
icebp
dec
add
pusha
in
and
sub
jb
cmp
and
add
mov
dec
pusha
mov
jmp
inc
jne
(bad)
adc
mov
inc
or
xchg
sub
xor
out
repz
je
and
icebp
pop
je
inc
push
cld
movzx
and
icebp
mov
inc
repnz
movsx
cmp
pop
call
add
mov
push
or
add
cmp
push
and
xchg
inc
mov
adc
jns
mov
inc
das
cmc
cmp
jo
push
es
xor
neg
repnz
push
add
das
imul
mov
ror
loopne
push
mov
mov
adc
cmp
cmp
or
shl
sbb
push
inc
xor
jae
cmp
push
add
jmp
pusha
xlat
or
push
xchg
adc
repz
ror
mov
and
repnz
fisttp
or
and
daa
popa
retf
pop
icebp
add
push
and
loope
xor
ins
cmp
mov
xor
cmps
xor
inc
pop
or
adc
in
or
push
add
sbb
jmp
shl
and
push
ja
imul
adc
and
cs
rol
clc
or
sbb
push
mov
pusha
pop
push
add
mov
test
aas
xor
sub
push
pop
add
mov
add
cmp
xchg
loop
adc
in
and
fild
jge
jmp
add
dec
jmp
inc
push
xlat
aaa
fadd
add
ror
sub
clc
popa
mov
gs
mov
cmp
(bad)
ja
in
and
psubusw
mov
hlt
mov
shl
movs
sub
(bad)
jno
test
or
xchg
pop
mov
adc
test
test
add
(bad)
adc
and
sub
fisttp
mov
jmp
or
mov
je
cmp
je
dec
sbb
fnstcw
push
or
add
and
push
dec
and
pop
call
(bad)
int3
push
adc
lea
mov
shl
pusha
push
ror
push
add
jnp
gs
xchg
add
cmp
je
sub
or
daa
jmp
add
dec
cmps
aas
or
or
mov
loope
push
add
sbb
nop
push
xor
mov
fs
inc
test
mov
inc
xor
sub
dec
loopne
or
and
push
les
fimul
sub
add
adc
xlat
nop
add
in
gs
and
(bad)
jle
cmp
iret
add
aam
sub
dec
xchg
call
adc
out
aaa
add
or
add
mov
and
sbb
add
inc
add
push
jg
add
jbe
xor
or
add
inc
add
sub
pop
inc
int
add
push
nop
sub
push
push
sar
int3
ficom
and
adc
call
add
jne
push
call
xor
and
es
pusha
test
and
lock
pop
mov
push
sbb
inc
lock
cmp
(bad)
in
xchg
std
outs
cmp
add
pop
jb
arpl
or
sahf
add
or
push
scas
popf
sbb
inc
gs
es
push
pop
popa
mov
loopne
inc
or
es
mov
je
and
add
(bad)
jb
sbb
loopne
or
repz
or
push
sbb
(bad)
mov
add
inc
mov
push
and
add
test
and
mov
sub
adc
or
hlt
rol
mov
mov
shl
sub
pop
add
clc
mov
sub
add
sub
add
mov
das
mov
inc
xchg
adc
xlat
push
add
push
fdiv
and
pop
call
cmp
add
push
nop
push
test
out
add
add
and
stos
(bad)
sbb
adc
hlt
sbb
pop
popa
aas
adc
add
outs
jle
add
test
sub
cld
add
loopne
adc
add
ds
pop
sub
push
aad
jge
add
fistp
dec
inc
rcr
mov
js
lock
je
push
mov
or
adc
arpl
adc
add
push
ficom
loopne
cmp
push
mov
stos
cmp
ins
xchg
pop
cmp
wrmsr
loope
daa
xor
pusha
sahf
cmp
pop
adc
icebp
or
inc
add
xor
mov
mov
sbb
adc
sbb
adc
push
push
add
lahf
push
sub
dec
sbb
inc
pop
(bad)
stc
mov
push
loope
jns
sub
push
push
xor
push
pop
xor
pop
(bad)
mov
pop
xor
stc
icebp
add
fidiv
mov
mov
dec
(bad)
popa
jbe
cwde
aas
pusha
in
or
inc
in
ss
stos
or
mov
mov
aas
jbe
jno
and
lock
ror
arpl
and
mov
aaa
rol
cmc
jmp
add
repz
cmp
jl
inc
outs
punpcklbw
inc
loopne
sbb
push
mov
inc
or
call
jno
pop
jo
push
mov
ret
aam
mov
inc
jle
setge
push
sub
pop
rdpmc
adc
dec
jecxz
xor
push
shr
sbb
mov
add
sbb
or
sub
rcr
xlat
xchg
ficomp
dec
or
xor
push
push
mov
mov
or
inc
pop
call
cmp
add
cmp
jne
jmp
add
push
inc
add
sbb
inc
add
add
jne
inc
add
inc
pop
xchg
push
inc
push
addr16
adc
addr16
mov
outs
inc
nop
arpl
and
ret
repz
jne
and
cli
push
rol
xor
and
data16
or
cs
push
add
lods
push
add
adc
mov
jmp
adc
mov
lods
add
jb
inc
scas
jbe
inc
jmp
fstp
cmp
add
cmp
je
mov
inc
cmps
inc
add
jne
add
jle
jp
and
jo
ror
fsubr
rol
sbb
inc
pop
(bad)
fild
rcl
cmp
inc
sbb
xchg
add
adc
std
jo
push
jge
mov
ins
add
add
cmp
fiadd
je
cmp
jb
mov
je
and
jbe
lock
outs
add
inc
inc
adc
adc
inc
ja
mov
pop
in
lahf
push
xchg
jo
xor
pop
xchg
mov
adc
mov
adc
pop
and
push
or
inc
adc
and
imul
push
ret
or
mul
mov
jns
inc
add
sbb
inc
pop
add
inc
add
cmp
and
das
loopne
push
lds
out
cs
adc
adc
cld
jns
inc
sub
and
xchg
push
lea
jb
or
push
sub
add
push
rcl
jmp
test
in
sbb
jns
push
cmp
add
jmp
mov
cmp
xchg
js
and
add
xchg
or
cmp
aaa
cmp
add
add
cmp
or
sbb
adc
inc
fisttp
inc
adc
sub
add
shl
sbb
pop
jle
icebp
dec
push
add
xor
test
cmp
or
add
pop
adc
dec
cmp
inc
inc
sbb
or
inc
xchg
loopne
xor
inc
loopne
sub
icebp
add
sar
and
add
adc
sbb
pop
or
add
pop
push
push
int3
fdivrp
nop
sbb
mov
xchg
inc
pop
add
repz
jmp
mov
pop
out
nop
nop
sbb
les
pusha
cmp
lahf
push
push
push
xchg
add
and
cmp
adc
xchg
popf
sbb
xchg
sahf
push
sub
pop
push
xor
cmp
int
mov
adc
(bad)
and
fisttp
adc
mov
inc
adc
dec
mov
ret
add
push
pop
cmp
es
xor
mov
int
push
mov
pusha
mov
dec
enter
push
fs
add
cmp
nop
adc
retf
call
mov
test
mov
add
mov
add
sar
inc
inc
mov
add
jne
jne
and
and
sti
out
pavgb
aaa
add
and
dec
nop
or
adc
adc
mov
xor
test
je
test
add
add
je
jmp
lea
call
lea
scas
and
dec
(bad)
cld
and
adc
sar
dec
jo
stos
lea
test
outs
sub
push
add
inc
leave
add
or
into
add
lea
adc
loope
clc
adc
inc
sbb
lds
dec
or
les
cmp
jo
ret
add
inc
shl
loope
clc
xor
adc
test
and
sar
dec
or
ds
(bad)
retf
jmp
inc
or
inc
or
mov
inc
sbb
lea
add
ins
inc
push
ror
add
or
add
add
add
gs
lea
sar
ret
inc
add
inc
ret
add
loope
clc
cmp
and
or
mov
fadd
ds
mov
or
lock
rol
xor
or
add
cmps
pop
add
lock
rcr
add
iret
aaa
movs
or
cmps
call
cmp
rol
mov
rol
mov
mov
pop
xchg
jmp
mov
mov
rcl
or
and
adc
daa
outs
lea
push
push
(bad)
loopne
add
imul
inc
adc
fcom
nop
mov
mov
pop
mov
add
ds
sub
cld
push
std
add
mov
bound
dec
push
add
sub
push
push
push
cld
mov
test
jecxz
iret
and
idiv
jbe
xor
add
xor
xor
adc
jge
jmp
or
ror
rcr
test
add
xchg
and
dec
add
xor
or
add
inc
add
and
sub
add
clc
dec
in
and
adc
mov
and
adc
xor
test
and
les
push
aam
sbb
xchg
or
xchg
push
mov
out
dec
add
inc
jmp
dec
push
rcr
lods
mov
add
mov
test
mov
or
out
stc
add
jg
adc
mov
mov
mov
push
ins
or
mov
and
leave
xor
push
cmp
bound
add
(bad)
adc
cmps
pop
mov
or
push
lahf
sahf
pop
in
xor
(bad)
mov
mov
add
jno
cmp
xor
sub
xor
jmp
xor
adc
adc
(bad)
imul
add
inc
cld
cmp
jge
cmp
dec
or
jbe
pop
xchg
lock
rol
mov
adc
rcl
inc
add
adc
mov
cmp
pop
ja
cmp
jbe
inc
clc
in
xor
mov
mov
dec
arpl
add
clc
dec
sub
dec
mov
inc
dec
mov
test
inc
cmps
push
aas
pusha
loope
repnz
pop
ret
(bad)
push
sub
loopne
pushf
mov
daa
push
cmp
les
mov
adc
mov
dec
add
icebp
call
adc
icebp
pop
pop
jmp
pushf
or
sbb
test
es
inc
push
adc
inc
pop
sub
xor
add
or
dec
clc
cdq
sbb
cmps
arpl
and
add
push
or
cmp
add
call
inc
and
sub
inc
xchg
mov
mov
scas
jg
lea
adc
adc
xor
inc
std
and
dec
ret
pop
mov
mov
mov
xor
pusha
mov
jmp
adc
mov
out
ins
xchg
mov
add
ja
and
sbb
fwait
jb
gs
lock
inc
sub
mov
add
and
xchg
add
pop
pop
and
sbb
imul
imul
mov
sub
sub
jle
or
test
in
dec
xor
fst
add
scas
sub
inc
adc
cs
dec
adc
xchg
add
sub
push
fistp
adc
push
call
inc
fdivr
mov
cmp
les
xor
add
xor
sub
adc
pusha
sar
add
inc
add
adc
pop
and
aad
sub
cmp
add
or
inc
pusha
in
jg
sbb
mov
nop
lds
inc
loopne
or
ror
add
and
or
pushf
and
and
pop
sub
mov
and
xchg
inc
fld
pusha
jle
sahf
movs
mov
(bad)
in
add
dec
pop
out
mov
das
jbe
sbb
add
test
and
jno
data16
and
inc
add
add
mov
js
push
(bad)
inc
inc
push
cli
cmp
add
inc
add
mov
pop
xchg
in
jmp
jne
sub
or
mov
ror
das
cs
lds
rcl
(bad)
adc
cmp
dec
out
add
mov
mov
push
add
mov
adc
rol
push
sub
mov
pop
adc
or
jne
pop
add
inc
xchg
inc
and
and
add
jb
add
xlat
xor
and
pop
ret
mov
(bad)
add
(bad)
inc
nop
imul
mov
call
or
shr
cmps
add
add
jne
lea
or
xchg
adc
jp
inc
call
mov
push
add
into
test
mov
nop
fadd
or
adc
pop
add
adc
pop
jne
cmp
cmovo
cs
push
adc
inc
fld
jmp
mov
pop
jae
cmp
je
aam
or
push
and
rol
jne
push
cmp
jae
test
iret
push
div
add
adc
jp
pop
xor
ins
lock
fcom
inc
inc
mov
ret
add
daa
inc
adc
push
xor
ds
push
xor
mov
outs
adc
cmc
add
repz
bound
xor
jns
inc
lea
xor
push
push
pop
sbb
les
pop
sbb
test
clc
add
sub
ret
fadd
outs
lods
ss
mov
jl
mov
pusha
jl
nop
call
push
xchg
nop
add
add
push
add
push
jmp
inc
pop
mov
adc
adc
add
addr16
dec
ror
das
jge
cli
(bad)
loopne
adc
adc
push
dec
xor
ror
pop
ret
rcpps
xchg
pop
adc
(bad)
dec
add
jge
add
push
mov
mov
adc
shl
add
push
mov
mov
pop
in
add
inc
push
rol
add
jle
mov
jmp
pop
cmc
inc
dec
and
inc
sub
cmp
fucomi
sub
jge
pop
fiadd
add
inc
xchg
call
add
loope
cmp
cmps
rol
imul
cmp
add
or
mov
sub
(bad)
out
ficom
lea
test
and
adc
mov
and
add
mov
xor
into
inc
pusha
pop
add
call
add
xlat
aam
cmps
xlat
push
or
mov
add
xor
or
into
add
inc
add
mov
add
scas
cmp
pop
dec
adc
mov
gs
xchg
xchg
xchg
pop
or
jae
push
push
je
inc
add
xchg
sub
rcl
test
pusha
xlat
add
push
pop
pop
sub
and
cmps
rol
nop
jo
inc
mov
xor
push
push
aad
stos
lods
push
les
push
add
mov
mov
pop
fmul
shl
fs
inc
fild
add
push
mov
cmp
push
push
push
jmp
mov
xor
jle
push
fwait
or
xchg
pushf
push
push
inc
das
xor
add
push
xor
aad
add
adc
mov
jge
fmul
out
add
xchg
push
adc
pusha
xor
push
lea
aad
or
in
xor
mov
jmp
sbb
ror
pop
cmp
xor
std
rdpmc
xchg
xor
inc
sbb
rcr
xor
pop
loopne
xchg
pop
dec
pop
add
hlt
push
push
inc
pop
stos
lods
mov
sbb
xlat
or
nop
adc
nop
pop
or
rol
adc
push
or
fs
push
mov
sbb
mov
lea
mov
dec
call
sbb
aas
or
add
jmp
mov
sbb
and
or
std
and
and
adc
push
push
mov
mov
mov
and
jb
dec
adc
add
fwait
or
je
mov
push
inc
ror
pop
mov
push
jp
mov
enter
xor
mov
add
push
sub
cld
pop
int3
mov
(bad)
xor
xchg
sbb
push
xchg
aam
adc
hlt
push
daa
out
add
shl
or
jg
and
add
dec
pushf
cmp
and
inc
cmp
jg
in
mov
jae
xchg
and
jo
popf
sub
add
fmul
jae
cmps
sbb
dec
xchg
enter
and
adc
or
dec
adc
ror
push
loopne
adc
adc
mov
adc
push
push
aad
adc
add
mov
adc
or
xchg
add
or
or
js
xor
dec
in
and
add
aas
daa
aas
xor
arpl
adc
adc
jmp
stos
jmp
dec
and
imul
repnz
pop
sub
stos
add
pushf
popa
add
jecxz
jno
inc
nop
mov
and
test
sub
lahf
inc
adc
icebp
mov
add
cmp
add
scas
pop
and
lock
push
enter
or
scas
lods
adc
mov
cmp
push
pusha
add
mov
outs
(bad)
mov
adc
loope
mov
sub
add
push
sqrtps
in
pop
cmp
je
mov
sbb
loope
cmp
lds
push
adc
lahf
xchg
mov
pop
xchg
inc
call
mov
inc
je
stc
push
enter
cmp
mov
fadd
sbb
rcr
and
add
sti
(bad)
repnz
jo
add
test
pushf
add
sbb
popf
inc
loopne
and
push
imul
and
add
mov
inc
bnd
(bad)
je
inc
mov
lods
fcom
push
xchg
xchg
xor
xor
out
or
pusha
xor
rcl
mov
(bad)
stc
bound
xor
pusha
jne
inc
xor
add
loope
or
and
and
stc
pusha
xchg
setp
pusha
cmc
xor
loop
pop
push
push
and
mov
test
and
rcl
aas
sbb
mov
adc
mov
mov
ds
add
adc
std
aad
and
loope
inc
sbb
adc
and
pop
push
xor
or
inc
stc
and
loop
pop
int3
dec
add
arpl
repz
inc
cmp
arpl
adc
push
pop
push
outs
sub
add
pop
nop
fsubp
pop
push
or
das
pop
add
add
popa
iret
es
add
xchg
shl
rol
cmps
popa
iret
add
and
or
ret
popf
and
sbb
jecxz
add
or
dec
nop
xchg
adc
jbe
mov
mov
pop
sub
adc
xor
adc
aaa
xchg
cs
pop
loop
or
test
addr16
data16
mov
xchg
xchg
adc
bound
xchg
mov
add
adc
ins
fdiv
and
sub
rcr
push
adc
sbb
pop
add
in
add
into
(bad)
jmp
loope
push
fdiv
push
in
and
shl
push
add
out
xor
aaa
xor
data16
fsub
push
push
push
pop
pop
mov
pusha
repz
in
adc
lock
add
dec
hlt
dec
jns
call
push
pop
cmp
ja
xor
push
jne
scas
lods
movs
in
sbb
stos
ret
adc
and
sbb
movs
cwde
sbb
mov
jnp
mov
xchg
cmp
mov
popa
xchg
jecxz
xor
inc
mov
sub
mov
cmp
inc
mov
adc
sub
push
call
es
iret
and
ret
sbb
push
cmp
pop
lods
jmp
jle
rol
add
mov
call
mov
add
sbb
sub
xchg
rol
fs
(bad)
fcomip
arpl
pop
(bad)
iret
loopne
and
push
xor
adc
push
or
mov
inc
sub
popa
add
cmp
adc
xor
cmp
mov
popa
ja
push
sbb
push
bound
bound
cmp
ja
addr16
inc
push
daa
push
push
pop
adc
inc
nop
rol
jmp
fisttp
dec
xor
in
aas
cwde
das
xchg
jo
mov
or
rcl
call
mov
outs
mov
cmp
jbe
add
add
or
xor
push
adc
add
mov
mov
add
or
mov
popa
pop
xor
je
push
pop
movs
mov
adc
adc
stos
dec
xchg
adc
and
leave
adc
cmp
(bad)
repnz
add
popa
push
push
pop
rol
add
sbb
add
inc
push
and
dec
cld
mov
mov
aaa
jno
mov
adc
and
add
xor
jo
popf
pop
xchg
mov
adc
jne
cwde
push
nop
fadd
sub
pop
sub
adc
call
inc
loopne
add
jno
or
rol
xchg
or
mov
dec
loopne
ins
add
mov
dec
mov
inc
mov
sbb
(bad)
jb
jp
xor
shr
push
jg
push
mov
std
daa
(bad)
call
sbb
not
jge
jmp
push
ja
push
push
shl
jbe
push
cmp
jne
shr
outs
fadd
cmp
jnp
mov
ficomp
adc
push
fs
pop
in
bound
mov
pop
ret
sub
and
lock
(bad)
and
shl
xor
adc
mov
adc
popa
fld
call
test
sar
pop
xor
ds
add
mov
addr16
cwde
cld
mov
mov
push
xchg
push
rol
mov
sbb
sbb
pop
inc
mov
mov
add
fcom
dec
sub
mov
rcl
dec
adc
push
aad
bound
mov
enter
push
xor
rcr
test
or
nop
ret
cmp
add
repnz
inc
add
shl
sub
jo
nop
and
dec
mov
pusha
push
add
pop
hlt
das
je
ficomp
push
or
stc
jp
mov
shl
xor
je
adc
mov
mov
sub
je
fwait
add
adc
movs
cmp
loope
sbb
cdq
push
and
sbb
mov
pop
and
pop
mov
jl
and
ret
out
inc
or
pop
in
or
or
sbb
icebp
add
mov
add
push
or
pop
and
xor
inc
xor
call
pop
inc
xor
fstp
adc
or
sar
push
inc
mov
pop
sbb
push
fs
icebp
or
rol
call
jmp
push
push
push
adc
cmp
in
pop
inc
add
adc
push
daa
call
int3
inc
add
sbb
pusha
mov
and
not
add
enter
or
adc
mov
stos
xor
and
push
adc
add
sbb
add
adc
rcr
and
add
and
and
sub
pop
add
mov
dec
push
mov
lods
xor
(bad)
adc
jo
sub
sub
add
inc
add
add
inc
add
jl
inc
movs
or
jne
mov
lea
inc
fsubr
lock
shl
mov
adc
movs
pop
sbb
mov
push
fsubr
scas
sbb
xor
stos
sbb
mov
or
ins
loopne
add
bound
fst
push
test
rol
mov
push
popa
pusha
inc
adc
mov
sub
mov
or
leave
je
add
repz
add
inc
mov
mov
cmp
push
imul
loope
jg
jmp
sub
add
movdqa
or
test
add
adc
add
ja
add
lock
mov
pop
dec
lock
add
and
push
adc
push
add
movs
pusha
jo
add
outs
dec
lock
enter
jo
mov
inc
ror
jne
mov
dec
adc
or
ja
shr
sar
pop
mov
sbb
inc
inc
mov
or
repz
je
mov
mov
lea
jbe
lea
dec
jne
mov
fnsave
inc
xchg
loopne
pop
inc
inc
dec
or
pop
pop
jb
mov
add
shr
retf
ret
popa
cmp
mov
pop
jmp
cmps
nop
icebp
pop
add
xor
jb
test
lods
pop
mov
xchg
call
sub
xlat
xchg
popa
pop
inc
or
adc
mov
out
or
mov
adc
add
cwde
dec
ret
mov
xor
out
fist
xor
and
test
test
inc
call
je
sub
mov
add
or
call
add
and
or
test
adc
add
ror
dec
sbb
sbb
sub
retw
push
sbb
shl
dec
or
rol
jmp
and
jg
xor
shr
adc
pusha
aas
ds
sub
add
je
push
xchg
and
fst
pop
or
mov
mov
push
xor
mov
and
cld
fld
cmps
(bad)
nop
cmp
pop
lahf
and
mov
arpl
(bad)
dec
das
loopne
push
int
neg
or
aam
push
adc
xchg
fsub
inc
ror
or
aam
mul
rol
test
push
nop
dec
mov
dec
adc
dec
and
mov
add
xor
sbb
jmp
mov
and
pop
or
sub
sbb
mov
xchg
adc
popf
inc
jmp
cli
or
mov
lea
push
xchg
dec
xor
sbb
mov
mov
xlat
ror
or
mov
jnp
xor
mov
das
in
jg
jbe
add
loopne
add
es
inc
inc
repz
push
inc
xor
add
jmp
daa
lock
push
in
adc
das
and
inc
or
ja
and
sbb
or
xlat
lahf
ds
gs
adc
ret
pop
je
ret
xchg
pop
lea
push
aaa
push
push
cmps
xchg
mov
push
xor
loope
and
(bad)
test
mov
fwait
sbb
add
mov
repz
test
mov
pusha
call
sub
adc
into
cmps
movs
cmps
cmps
retf
fadd
push
mov
in
outs
dec
push
push
and
mul
clc
and
pop
inc
or
int
lea
jno
sbb
dec
add
ret
cs
add
mov
dec
add
add
add
or
inc
and
xor
pop
ret
sbb
or
(bad)
loop
bound
pusha
xchg
shl
sub
jns
add
cmp
je
sbb
add
mov
adc
jl
mov
cmp
imul
pop
mov
in
push
add
les
mov
cmp
rcl
or
xor
add
test
or
xor
rcl
inc
add
or
das
adc
mov
dec
add
into
push
add
sbb
jb
jle
nop
or
daa
sub
add
mov
pop
test
adc
pop
cmp
jno
adc
add
add
ror
cwde
out
and
add
add
out
mov
cmps
into
adc
xor
jae
add
sti
cmp
adc
push
rol
rcl
and
test
push
test
or
sti
jl
jp
xor
mov
ror
mov
push
popa
add
loopne
add
add
pop
mov
pop
jmp
adc
xor
pop
fild
xchg
add
out
sar
and
imul
xor
push
push
push
add
mov
mov
adc
add
dec
loope
je
cmp
jno
adc
mov
add
mov
push
repnz
inc
add
outs
or
shl
mov
pop
add
xchg
xor
out
xor
out
adc
add
mov
xor
or
and
rcl
dec
push
add
adc
(bad)
mov
lea
push
adc
adc
pop
sbb
dec
adc
dec
adc
data16
dec
mov
popf
mov
pop
shl
mov
rcl
mov
(bad)
xor
add
(bad)
hlt
sub
fmul
loop
adc
mov
mov
xchg
pop
fist
rcl
ret
popa
push
add
cwde
sbb
dec
bound
add
ins
adc
add
push
jmp
pop
add
movs
xchg
daa
mov
loopne
and
imul
adc
cmps
(bad)
and
dec
lds
inc
dec
popa
ret
add
push
or
inc
dec
adc
lea
add
in
popf
and
and
pop
call
and
inc
mov
jmp
lock
jnp
call
xor
lss
pop
xor
mov
pusha
sbb
hlt
outs
pushf
or
push
add
mov
(bad)
and
loopne
cmp
rol
xchg
add
inc
dec
loop
pusha
cmps
jo
add
lea
mov
mov
mov
cmp
je
pop
scas
xchg
ror
mov
fs
ror
call
adc
clc
or
out
lods
ds
or
lock
push
or
fiadd
or
adc
push
fstp
icebp
add
and
or
mov
xchg
popa
mov
cwde
xor
xor
push
pop
xchg
xor
add
sbb
or
and
and
sub
push
(bad)
bnd
xor
add
and
add
dec
mov
sub
mov
add
nop
add
daa
add
enter
ror
pop
arpl
push
icebp
adc
lea
sub
lds
add
retf
push
and
sub
and
xchg
in
adc
xchg
shl
jmp
out
nop
pop
punpcklbw
push
add
jge
cmp
jge
mov
push
or
ss
push
xor
bnd
add
add
inc
in
call
sub
sub
push
xor
xor
dec
adc
push
push
push
cs
and
jmp
or
cmp
cmp
add
jl
xor
or
xor
mov
add
cmc
xor
mov
and
jo
or
mov
cmp
jl
shl
pusha
fiadd
and
aaa
adc
add
call
sbb
mov
call
sbb
and
jo
aas
jge
aad
test
add
or
(bad)
sbb
jge
in
add
push
aaa
and
pop
mov
mov
sub
xor
repnz
scas
add
idiv
pop
adc
cmp
sbb
(bad)
mov
push
inc
adc
adc
mov
ins
push
fisub
sub
or
jne
xchg
push
movs
movs
push
pop
xchg
jecxz
mov
xor
jae
pushf
sbb
xor
pop
data16
mov
call
popa
adc
in
ins
or
lea
adc
adc
push
xor
popa
sub
mov
add
dec
aas
mov
nop
adc
adc
or
inc
sbb
ds
add
add
retf
sbb
xchg
sbb
add
stc
add
sbb
lods
or
jmp
add
push
mov
call
in
pop
clc
mov
pop
or
test
adc
jl
and
cmps
mov
shr
es
add
sbb
rcr
clc
add
cmp
xchg
pop
dec
push
or
mov
shl
add
mov
dec
and
leave
sar
cmps
sbb
dec
sar
mov
cwde
add
rol
mov
and
push
mov
mov
sub
or
das
pushf
xor
inc
mov
fadd
adc
push
test
add
rol
add
inc
call
out
mov
cmp
push
push
cwde
sbb
add
cmc
rdrand
(bad)
xor
mov
xor
mov
popa
adc
cmp
sub
test
ss
rol
inc
add
fwait
rcr
push
adc
enter
xor
or
adc
in
push
xchg
lock
fisttp
icebp
iret
push
fisttp
or
push
sar
push
jl
and
sub
es
adc
(bad)
cmp
push
loope
add
lea
ja
sub
or
call
inc
test
adc
cmp
fiadd
mov
fwait
cld
loopne
or
inc
inc
adc
popf
push
mov
adc
cmp
sub
cmp
add
loope
add
or
cmp
push
or
lock
jno
jne
mov
sub
test
js
push
adc
pop
das
add
test
and
push
test
or
and
sub
or
fmul
mov
mov
add
inc
or
push
push
inc
push
inc
mov
or
mov
or
add
jle
mov
add
add
rcr
and
xor
push
inc
adc
and
clc
ja
mov
add
jecxz
je
adc
test
add
add
inc
jne
shl
out
sub
adc
pop
jne
push
shr
sbb
(bad)
shl
add
push
pop
dec
or
inc
mov
mov
adc
pop
xchg
test
in
gs
rcr
test
add
fs
outs
mov
push
idiv
bound
lock
lahf
in
add
adc
dec
repnz
rol
outs
or
mov
out
adc
jne
add
adc
ja
and
push
jmp
mov
pop
inc
jo
push
sbb
inc
xor
and
bound
push
push
cs
sub
add
sub
in
adc
xchg
ret
and
or
jmp
les
and
sbb
mov
add
dec
add
mov
movsx
add
loope
je
push
sbb
aaa
arpl
and
pop
div
add
mov
add
pop
ret
pop
add
rcl
xor
add
stc
xchg
popa
cmp
sbb
movs
std
add
sbb
pusha
xchg
rol
popa
movs
and
xchg
or
and
sbb
xor
push
sub
jo
add
enter
aaa
and
mov
cwde
das
pusha
inc
or
add
daa
sahf
adc
add
sbb
jmp
dec
test
pop
add
cmp
arpl
or
xchg
imul
pop
fwait
inc
adc
inc
ins
stos
pop
and
and
rcl
inc
xor
mov
call
sub
icebp
je
cmp
adc
test
lock
add
dec
and
xor
pushf
pop
enter
push
add
pusha
cmp
add
add
adc
ficom
or
adc
rol
enter
mov
push
add
cmp
je
adc
inc
adc
xor
cmp
and
mov
jo
mov
and
dec
xchg
mov
ins
movs
or
pop
dec
les
add
jns
cmc
xor
pop
adc
ja
sbb
jp
mov
inc
pop
and
adc
(bad)
hlt
movs
pop
xor
jl
push
xchg
add
pop
push
sub
push
push
mov
adc
sbb
inc
test
or
pop
jnp
adc
push
or
jl
call
adc
dec
pusha
and
add
fist
push
sbb
movs
adc
icebp
ror
add
test
dec
rcr
adc
and
bnd
jecxz
push
inc
(bad)
movs
add
add
xor
adc
mov
in
mov
and
xchg
gs
add
inc
cmp
popf
adc
add
sahf
aam
mov
rcl
or
xor
ror
repnz
jmp
push
mov
or
nop
sub
add
xor
imul
mov
int
inc
xchg
nop
push
and
les
pusha
fcomp
mov
xor
adc
pop
mov
pusha
add
addr16
adc
fmul
sbb
test
and
add
or
inc
inc
adc
rcl
or
mov
inc
xchg
popa
dec
xor
nop
push
mov
cld
shr
inc
das
cmp
adc
push
mov
rol
push
fidiv
rcr
push
push
xchg
pushf
xchg
or
xor
jo
xor
cmp
xor
pop
mov
mov
add
mov
ror
adc
xchg
or
pusha
sbb
aad
adc
adc
es
mov
es
add
inc
gs
mov
add
call
xchg
lea
adc
xchg
and
mov
pop
sbb
pop
lods
xor
pushf
es
fisttp
pop
test
push
cmp
shl
push
push
push
rcr
or
add
jns
or
femms
xor
std
add
cmp
adc
add
push
lea
das
inc
(bad)
xor
sbb
pop
fidivr
jmp
or
cmps
inc
add
pop
mov
cmp
test
not
adc
inc
mov
jmp
xor
pop
pusha
adc
sub
call
pop
cmp
and
jne
and
mov
xchg
shl
xchg
adc
xchg
or
and
xor
nop
shl
and
inc
outs
sub
sbb
mov
ret
adc
js
mov
or
and
sub
scas
pop
mov
loop
bound
sub
pop
mov
ins
(bad)
add
or
in
mov
push
loopne
and
sub
xor
push
repnz
loope
and
push
xor
pushw
xor
push
loope
add
mov
cli
xchg
xchg
cmp
sbb
bound
dec
add
inc
or
sbb
dec
ret
shl
cmps
jp
and
shl
scas
frstor
jg
shl
loop
and
shl
adc
and
adc
mul
push
mov
outs
adc
and
or
xacquire
outs
or
mov
push
and
repnz
jg
nop
jmp
call
or
push
lock
js
adc
inc
inc
shr
xor
and
xor
and
sbb
aaa
jp
mov
pusha
push
dec
(bad)
out
je
or
or
sbb
pop
pop
xor
cmp
dec
and
or
push
movs
or
inc
and
and
xor
push
xor
add
push
xchg
and
mov
call
pop
add
popa
and
adc
pop
aam
ins
sbb
test
adc
call
jl
push
out
mov
pusha
ss
retf
xor
inc
jne
dec
push
push
jmp
xor
and
mov
sqrtps
xor
jae
pop
mov
push
adc
and
inc
sbb
mov
mov
sub
and
push
and
adc
sub
pop
stos
push
inc
shl
daa
ret
xor
pop
add
cmps
test
push
div
bound
data16
call
push
cmp
inc
cmp
or
dec
add
call
push
les
mov
jge
test
inc
mov
xor
ja
adc
mov
inc
es
adc
(bad)
dec
call
mov
mov
add
mov
aas
mov
jo
fisttp
jg
mov
cmps
inc
and
add
ins
sub
mov
push
or
add
dec
adc
mov
mov
mov
hlt
adc
dec
and
push
bound
push
cmps
rcr
scas
(bad)
ror
add
add
mov
adc
sbb
rol
movzx
xor
xchg
rol
ret
and
icebp
adc
cmp
or
test
xor
dec
sbb
dec
div
jl
sub
mov
jo
cld
loopne
dec
add
adc
cmovge
movsx
test
mov
mov
inc
loopne
or
es
sub
push
std
cmc
inc
std
push
or
mov
arpl
and
dec
inc
and
and
adc
mov
add
and
call
sbb
push
mov
dec
push
inc
add
jne
lea
inc
rol
fmul
and
bound
test
mov
add
cld
and
dec
mov
jne
add
and
btr
or
lock
fmul
add
fstp
xchg
or
pop
ror
adc
bound
push
sti
dec
pop
popa
adc
popa
and
xchg
add
int3
adc
(bad)
clc
dec
je
cmp
push
ins
je
pop
cmp
add
xor
pop
adc
loopne
push
ja
xor
int
xor
pop
fs
add
cmp
jne
sbb
add
mov
ret
cmp
mov
sbb
adc
xor
je
test
and
test
and
and
je
movs
lea
add
push
lea
es
and
sbb
das
inc
push
adc
test
adc
mov
cmc
lock
call
push
pop
pop
or
mov
cld
adc
outs
dec
add
sub
and
gs
xor
and
cld
sbb
aas
and
mov
mov
add
lea
repnz
jmp
push
sub
rol
test
rol
out
int
jne
mov
mov
fsub
mov
pop
not
icebp
inc
or
or
jl
adc
adc
loop
xchg
and
mov
aas
movzx
cli
stos
mov
push
mov
lahf
pop
xchg
shl
ret
popf
sahf
cmp
loopne
popf
and
xor
mov
mov
and
cmp
pop
push
lock
rcl
xor
xor
inc
test
clc
pop
adc
pop
pop
or
sbb
cwde
pop
sbb
movntps
jno
jl
or
cmp
call
cmp
add
nop
pop
sbb
mov
jge
ins
ror
xor
and
xor
xor
cmps
icebp
pusha
imul
das
add
inc
daa
popa
stos
add
jmp
movs
cmp
nop
ds
add
or
cmp
cmove
test
push
cmp
pop
push
icebp
shr
arpl
clc
addr16
sbb
push
pushf
push
push
xor
or
popa
dec
test
aaa
leave
popa
call
and
and
adc
mov
and
xchg
and
add
add
sub
add
pop
add
cmp
or
add
pop
mov
test
ins
pop
dec
add
xchg
xchg
add
mov
xchg
ret
and
sar
mov
mov
mov
pop
retf
adc
add
(bad)
mov
add
(bad)
rcl
test
or
inc
mov
sbb
inc
add
das
xchg
pop
mov
je
pop
fcmovne
icebp
adc
sub
pop
or
fmul
xor
test
mov
push
xchg
push
pusha
std
bsr
and
hlt
adc
xor
push
adc
dec
mov
test
sub
adc
push
xchg
dec
push
jne
gs
mov
push
sbb
aam
or
adc
jno
dec
xor
out
arpl
ud0
or
push
(bad)
out
or
push
push
outs
test
arpl
mov
mov
add
push
cmp
sub
pusha
jmp
pop
ror
test
leave
push
shl
je
aad
cmp
lock
sar
lahf
dec
mov
mov
les
adc
or
or
jo
add
neg
adc
div
jne
dec
dec
dec
push
mov
mov
sbb
push
aas
rol
adc
xor
imul
bound
adc
js
xor
adc
lea
retf
or
cld
addr16
sbb
mov
sub
mov
xchg
fmul
pop
jns
test
xor
push
inc
sub
loopne
(bad)
pop
sbb
mov
arpl
movs
inc
adc
add
inc
pop
pop
mov
cmp
je
dec
call
add
add
adc
add
fnsave
jle
or
fneni(8087
adc
sub
add
(bad)
adc
jl
lea
jae
fcomp
adc
fbld
stc
adc
add
xchg
sbb
inc
inc
mov
mov
sub
push
retf
inc
mov
pop
xor
pop
mov
jmp
adc
outs
ret
shr
mov
das
popa
pop
and
mov
xor
pop
ror
or
je
push
lock
fmul
cmp
pop
push
mov
scas
push
pop
sbb
inc
xor
rcl
rcl
add
add
fsubr
and
mov
and
stos
push
push
fiadd
outs
push
push
inc
jb
addr16
repnz
mov
(bad)
int
lds
call
push
leave
bound
daa
or
mov
and
add
or
nop
movs
jne
jl
inc
inc
je
and
jmp
lods
repz
dec
bound
add
inc
aaa
icebp
pop
or
scas
jle
push
retf
fistp
pop
adc
arpl
ins
pop
mov
mov
sbb
bound
mov
scas
lods
int
out
sbb
jle
ror
add
mov
add
sub
add
in
inc
add
nop
aad
add
jle
push
addr16
add
fstp
add
cmps
nop
fadd
add
add
scas
or
adc
ret
cmps
and
jae
jno
pavgb
or
test
jmp
or
or
or
les
adc
xchg
sbb
movs
push
test
jbe
lea
mov
leave
adc
test
cmp
loopne
in
sub
mov
arpl
inc
mul
xor
test
mov
add
mov
mov
push
test
or
movs
add
out
push
mov
add
mov
imul
add
lds
retf
add
sete
or
scas
cmp
push
jns
jecxz
mov
mov
sub
push
adc
pop
pusha
and
jmp
sub
je
add
push
je
dec
je
push
adc
push
js
sbb
or
call
or
jmp
dec
in
xor
call
iret
and
and
xor
push
movs
jo
inc
inc
hlt
ror
das
shl
(bad)
or
and
je
xor
jmp
xor
fsub
outs
inc
adc
loopne
add
movs
ss
test
call
in
push
cmp
jne
movs
add
add
or
or
movs
mov
push
mov
std
inc
(bad)
test
and
push
mov
push
pop
add
js
adc
mov
push
xor
fdiv
into
xor
adc
pusha
popf
add
push
call
and
adc
sub
xor
mov
add
repnz
fwait
and
jg
add
cmp
xchg
and
adc
xchg
inc
mov
sbb
fcmovb
adc
jo
shr
mov
outs
jp
xchg
xchg
jo
mov
loop
movs
push
daa
or
out
xchg
push
adc
xchg
dec
mov
mov
arpl
inc
or
stos
wbinvd
jle
out
outs
loop
mov
jo
and
pop
loopne
xlat
jmp
sbb
ret
add
nop
dec
hlt
mov
add
adc
ud2
xchg
clc
add
icebp
xchg
clc
lds
clc
hlt
pop
and
xlat
add
or
jle
xchg
add
dec
add
push
push
push
push
push
push
and
inc
and
or
push
add
add
xor
mov
add
(bad)
(bad)
je
or
cli
(bad)
je
cmp
jbe
add
mov
mov
int
cmp
jne
sbb
call
add
shl
push
retf
inc
idiv
or
xor
inc
add
mov
je
mov
adc
call
packuswb
popa
mov
and
mov
add
pop
(bad)
icebp
pop
xchg
movlps
add
add
mov
xor
movs
pop
shl
imul
adc
mov
add
pop
adc
jmp
inc
push
push
push
mov
adc
push
mov
rol
adc
sbb
push
cmc
out
jnp
mov
sbb
mov
jnp
jbe
xor
push
shl
loopne
mov
sbb
cmp
dec
out
jo
jecxz
sti
and
inc
adc
fwait
adc
call
mov
movs
add
fnstenv
cmp
xchg
add
ficom
outs
xor
or
sub
mov
and
or
pop
das
adc
scas
sbb
test
fucomip
xor
xchg
loop
push
test
adc
cmp
and
mov
lea
sbb
push
xor
(bad)
popa
pop
addr16
jecxz
jne
push
retf
adc
pop
add
ds
cld
and
daa
cs
jmp
dec
push
mov
test
pop
or
es
jecxz
mov
xor
dec
call
xchg
ror
jecxz
jecxz
or
push
fucomi
hlt
out
int3
add
cmp
int3
pushf
lea
retf
push
add
sub
or
dec
mov
xor
ret
xchg
js
adc
frstor
mov
cmc
add
loope
mov
shl
inc
sti
jg
add
daa
call
loop
add
add
arpl
cmp
adc
nop
popa
pop
add
mov
mov
pop
jmp
cwde
ss
add
aas
jge
fst
adc
add
and
cld
stos
mov
add
arpl
adc
aam
test
jne
test
lahf
test
das
or
push
jnp
mov
sbb
or
pop
rol
or
lock
out
dec
or
je
push
mov
push
loope
pop
fistp
movs
or
fcmovbe
jne
or
adc
fcom
lock
sub
pusha
xchg
inc
loopne
adc
mov
fcom
inc
add
xor
outs
or
xor
and
adc
add
push
std
popa
pmuludq
or
push
jnp
lock
pop
mov
sbb
cwde
dec
adc
add
lea
inc
jg
adc
adc
add
xchg
repz
mov
je
add
icebp
nop
push
lods
stc
dec
lea
cmp
rol
mov
mov
fild
jb
inc
pop
ret
pop
and
and
push
push
jmp
loopne
nop
push
not
call
fs
pop
or
and
mov
cmp
add
add
add
imul
outs
stos
loopne
sub
ror
out
push
and
(bad)
ins
push
jp
je
sbb
out
jmp
pop
push
jmp
fmul
popa
mov
pop
add
retf
push
repz
push
sbb
add
jo
push
mov
pop
add
add
dec
inc
dec
and
sbb
call
and
inc
push
rol
pop
mov
jl
and
add
xor
adc
xchg
(bad)
rcl
pusha
arpl
and
repnz
inc
push
push
lea
pop
mov
add
loopne
xchg
call
or
adc
ins
clc
inc
add
je
test
inc
add
mov
xchg
fist
adc
sub
shl
fdivp
ret
aaa
jbe
mov
or
xor
add
pop
and
adc
push
mov
push
clc
call
xor
inc
xor
add
je
rol
call
rol
sbb
jp
popf
or
mov
adc
sub
mov
out
popf
pop
xor
movs
add
lock
adc
push
push
jno
add
jno
shl
xchg
add
xchg
inc
movs
jnp
add
and
sbb
xor
mov
or
xor
les
pop
cmp
mov
jmp
and
clc
mov
xchg
leave
cmp
add
and
sub
cmp
push
loopne
add
sub
adc
nop
cmp
sbb
lock
push
mov
out
xchg
pusha
cmp
push
rcl
xor
movq
push
pop
add
sbb
retf
pop
popa
(bad)
mov
arpl
bound
ficom
call
xor
add
pushf
sub
xor
add
into
xor
xor
sub
xchg
add
pop
mov
pop
add
data16
inc
je
xchg
shr
cmp
fbstp
shl
je
dec
or
inc
and
or
pop
xor
(bad)
int
mov
mov
mov
loop
cmp
call
xor
mov
rcl
movs
sub
mov
cli
add
in
cmp
mov
mov
jno
inc
push
loop
in
iret
je
(bad)
arpl
fstp
add
neg
das
pusha
out
push
cmps
popa
popa
les
add
xor
call
sbb
mov
retf
mov
inc
and
push
inc
xor
mov
sbb
repz
jno
sub
cmp
pop
jo
mov
inc
mov
shl
or
ror
mov
sbb
or
into
mov
adc
rol
dec
jne
lea
popa
adc
dec
and
das
xor
in
sbb
pop
mov
(bad)
xor
out
inc
adc
mov
pop
inc
les
pop
sub
inc
cmp
(bad)
jb
mov
mov
or
fmul
hlt
push
add
mov
movzx
add
enter
rol
call
xchg
sbb
or
pusha
ja
and
add
ror
add
push
sbb
test
mov
std
jle
inc
add
outs
push
shl
dec
mov
mov
sar
and
dec
push
sbb
xchg
pop
adc
adc
into
adc
mov
add
jmp
mov
and
sub
mov
pushf
push
dec
sahf
add
cmp
add
mov
adc
add
lea
cmp
ja
or
lea
and
or
or
cmp
rcr
add
xor
and
inc
cmp
jb
push
mov
push
add
xor
push
dec
xor
daa
rol
mov
out
or
pusha
sbb
jne
cmp
ss
ror
loop
out
push
xor
sbb
or
mov
mov
pusha
mov
and
fadd
out
fist
(bad)
dec
mov
add
add
sbb
into
xor
dec
rcr
sbb
jg
or
out
pop
add
dec
inc
lods
and
in
stos
push
sub
and
lds
cmp
lds
mov
jge
cmp
jne
mov
xor
sub
add
sti
add
daa
or
sub
jle
mov
xor
ja
clc
dec
test
je
add
icebp
inc
mov
add
mov
scas
cmps
push
add
inc
push
inc
mov
or
jno
add
push
arpl
dec
push
fcom
cmp
popa
adc
jge
and
inc
out
mov
nop
cmp
inc
nop
push
test
pusha
fdivr
add
dec
add
push
test
cmp
jo
lock
imul
push
or
pop
lods
lahf
add
adc
add
or
sub
sub
mov
ds
pop
mov
cmp
scas
or
dec
or
or
xor
cmp
jbe
(bad)
sbb
test
loope
inc
push
cmp
push
add
xchg
mov
jo
movs
hlt
sbb
call
add
cmp
sar
test
rcr
gs
adc
or
sbb
mov
add
icebp
mov
call
jmp
dec
add
pusha
addr16
pop
loope
mov
xor
add
in
stos
lods
adc
dec
jne
push
rol
movs
xchg
jl
out
ret
loopne
xor
adc
adc
jne
in
gs
mov
mov
fdiv
mov
test
ins
nop
ins
mov
add
xor
mov
add
ja
cmp
pusha
icebp
inc
push
or
mov
sti
rep
and
ds
cmps
add
jbe
push
sbb
pop
(bad)
ins
dec
and
scas
dec
mov
pop
push
gs
xlat
sbb
adc
test
rol
mov
call
mov
add
inc
cld
cmp
xor
sbb
mov
or
or
add
mov
data16
add
adc
jge
mov
sbb
mov
sbb
nop
dec
or
ret
popa
or
mov
popa
(bad)
pop
fst
jecxz
push
fadd
adc
call
inc
pop
dec
mov
outs
jmp
ret
add
push
and
inc
dec
inc
test
sbb
mov
sbb
cmp
jne
push
std
call
mov
push
dec
add
fadd
aaa
add
lea
add
fdiv
cmp
repz
inc
xor
int3
rol
inc
pop
scas
push
test
jno
or
rdtsc
xchg
mov
test
pop
xchg
movups
dec
add
adc
loope
mov
sbb
sahf
sbb
retf
xor
jne
cmp
or
add
scas
add
sub
inc
icebp
jo
(bad)
iret
xor
add
add
scas
adc
addr16
pop
ret
jp
push
sub
addr16
cmp
jp
dec
sbb
outs
mov
(bad)
mov
out
imul
pop
mov
or
push
hlt
mov
out
pop
stos
jle
mov
add
and
and
push
dec
mov
pop
aaa
in
cmp
movzx
xchg
loopne
nop
mov
fild
jno
sub
jb
addr16
mov
pop
loopne
mov
and
rcl
jae
ret
push
push
stc
imul
ds
or
adc
adc
pop
and
inc
mov
push
add
cmps
cs
xor
hlt
in
add
stc
scas
and
js
add
mov
add
icebp
push
test
add
imul
inc
cs
mov
movzx
inc
rol
mov
pop
mov
hlt
xor
add
xor
xor
sbb
add
repnz
adc
pop
int3
(bad)
inc
shl
adc
call
call
pusha
adc
cmp
push
nop
into
and
add
neg
xchg
inc
push
jmp
mov
add
adc
sbb
call
adc
add
pushf
mov
add
inc
inc
inc
and
adc
out
xor
in
add
cld
nop
dec
div
retf
add
add
push
(bad)
mov
add
(bad)
add
loop
bound
pusha
int3
inc
shr
jne
imul
inc
and
add
push
(bad)
mov
mov
mov
adc
add
mov
mov
add
add
add
add
add
jne
mov
mov
mov
sbb
jl
mov
add
add
out
and
add
sar
jmp
mov
pop
loope
add
lds
mov
btr
dec
cdq
rcr
add
add
jne
test
push
loopne
and
popa
cmove
leave
movzx
ror
shr
inc
(bad)
jno
dec
push
adc
xor
scas
sub
dec
add
je
add
add
push
sahf
and
pop
je
js
out
mov
and
add
(bad)
(bad)
mov
shufps
repz
out
jb
loope
pop
and
sar
add
pop
mov
mov
pop
xchg
inc
rol
adc
shl
icebp
mov
and
(bad)
rol
jmp
mov
mov
and
or
jmp
jmp
add
repz
mul
rol
shl
inc
cmp
ret
or
shl
xor
add
add
pusha
and
shr
and
add
jne
or
sbb
dec
jl
cdq
xor
fs
add
inc
push
or
(bad)
add
sbb
adc
inc
sbb
add
add
and
push
clc
mov
rol
and
push
cmp
mov
iretw
xor
mov
jnp
adc
or
dec
or
cmps
rcl
pop
jge
mov
push
mov
push
loop
xchg
fadd
repnz
retf
push
pop
sub
shl
rol
push
cmps
ss
add
sbb
push
add
mov
mov
push
cmc
jg
mov
lea
clc
movs
add
or
adc
inc
and
adc
bound
nop
jmp
adc
stos
or
jmp
mov
mov
mov
or
mov
push
loop
add
xchg
rol
cs
dec
cmp
inc
loopne
pop
xchg
sbb
inc
in
push
adc
adc
push
adc
aas
mov
add
jne
mov
mov
pop
push
out
mov
inc
xchg
fadd
and
inc
adc
mov
mov
loop
add
add
xchg
adc
(bad)
fst
inc
add
adc
lock
push
les
arpl
and
add
icebp
jg
ss
dec
push
add
inc
mov
out
ins
xchg
sub
stos
sub
adc
psrlw
xlat
(bad)
mov
repz
movs
adc
aad
mov
jecxz
adc
xor
adc
test
add
mov
inc
or
and
and
push
xchg
add
xchg
scas
shr
push
fwait
xchg
js
int3
adc
mov
fdivr
mov
add
mov
cmp
add
cmp
xor
and
xchg
ret
rol
xor
inc
xor
jo
addr16
xor
jge
cmps
or
retf
movs
add
add
cmp
jb
push
xor
nop
mov
xor
cld
xor
repnz
loop
mov
pop
aas
xor
xor
test
div
data16
jge
and
ror
jae
and
outs
push
pop
add
fs
inc
outs
dec
mov
cld
cmp
cvtps2pi
or
lods
push
push
stc
sub
mov
lods
and
rol
in
inc
(bad)
lock
fs
ficomp
add
or
or
and
retf
mov
xor
out
inc
inc
push
dec
add
pusha
fcom
mov
inc
daa
jo
pop
xchg
xchg
fcomp
inc
nop
or
push
or
adc
adc
push
and
cmp
inc
sub
add
mul
inc
sub
add
or
jecxz
adc
and
inc
and
add
call
jne
ss
mov
sbb
sub
mov
outs
mov
xor
push
lock
lds
or
outs
mov
jecxz
inc
mov
cmp
sub
ror
add
adc
enter
add
adc
push
fstp
lock
or
cs
jne
push
pop
adc
push
push
call
movs
jmp
leave
adc
push
popa
add
push
test
scas
cmp
pop
mov
in
popf
pop
xchg
movs
les
push
pop
or
iret
adc
mov
and
add
or
add
sbb
inc
je
inc
cmp
push
out
das
or
rcl
mov
cld
rcl
and
sbb
sub
call
adc
and
push
loope
outs
out
pop
rcr
nop
mov
add
adc
xor
or
pop
push
and
xlat
int
add
xlat
aaa
and
mov
adc
mov
aaa
push
push
add
call
xor
push
shr
call
add
sub
loopne
or
adc
push
call
xchg
imul
mov
jmp
out
add
clc
pop
je
mov
pop
adc
sub
loopne
sbb
add
sahf
ins
inc
cmp
lock
daa
sar
icebp
ins
push
push
xchg
int
ret
mov
mov
jl
adc
push
sbb
and
jo
jl
pusha
and
and
add
xor
add
lds
cmps
push
push
mov
inc
sub
gs
push
jb
push
add
or
mov
xor
popa
cmp
add
jmp
stos
dec
sbb
mov
xlat
xor
into
and
adc
jo
adc
and
addr16
cmp
inc
adc
aas
and
add
mov
inc
add
fcomip
push
xor
pusha
in
sub
xor
jns
fs
aaa
jo
gs
add
imul
and
retf
nop
mov
push
test
adc
jne
in
push
aaa
add
loope
inc
addr16
or
les
add
add
shl
jbe
loopne
add
mov
sbb
mov
sub
cli
es
xchg
dec
add
pusha
mov
repnz
out
push
and
jo
add
pop
add
and
lock
aaa
shl
push
mov
cwde
pop
out
pop
and
adc
mov
(bad)
pop
jmp
add
dec
mov
pusha
pusha
add
sub
cmp
jne
mov
adc
and
and
and
(bad)
lods
adc
dec
adc
add
add
shl
adc
and
dec
xor
loope
mov
adc
jl
xor
pop
add
data16
arpl
out
add
add
push
adc
inc
add
call
dec
push
push
push
(bad)
xor
out
add
sub
push
popa
adc
push
mov
pusha
mov
fisub
jo
or
lea
add
push
pop
mov
adc
cmp
es
ret
xchg
pop
jle
cmp
push
xchg
jo
inc
es
jle
cmp
imul
outs
cmp
xor
mov
mov
pop
shl
das
mov
loope
ror
push
adc
mov
shl
test
jecxz
adc
cs
inc
mov
rcl
rol
add
adc
mov
or
push
push
call
add
jle
jmp
adc
add
and
and
push
nop
xor
les
retf
call
xchg
add
test
je
stos
and
inc
ret
xchg
xor
sbb
call
jmp
test
loopne
sub
(bad)
cli
pop
loop
push
xor
adc
pop
adc
jge
mov
cmp
data16
sub
sbb
inc
ja
xor
adc
stos
sub
retf
add
shl
or
pop
lea
je
call
adc
jbe
repz
jo
jle
xor
mov
inc
and
push
adc
jbe
lods
xchg
add
cmp
sbb
or
dec
sub
dec
jo
pop
sbb
add
xchg
js
sub
lods
in
(bad)
sbb
sbb
test
inc
nop
cmp
lock
and
or
push
les
sub
push
inc
dec
xor
and
xchg
pop
lds
cmp
pcmpeqw
or
or
add
add
sbb
adc
jne
cmp
outs
xchg
adc
or
and
(bad)
cld
jnp
and
adc
mov
add
inc
jmp
dec
jmp
pusha
sub
pop
jle
xchg
loopne
pop
adc
xor
inc
ds
popa
adc
call
pop
sbb
xor
pop
cdq
adc
xchg
pop
adc
mov
push
inc
loopne
or
sbb
push
push
and
pop
popf
sahf
mul
xchg
adc
and
ret
and
pop
pop
fbld
push
pusha
add
sbb
xchg
mov
pop
cmp
or
lea
jns
jno
jmp
xor
sub
pusha
add
push
or
jmp
and
add
adc
add
and
dec
icebp
pop
and
fs
xchg
xchg
rcl
cmps
call
adc
jle
and
add
xor
sbb
ins
add
sbb
add
mov
push
lea
call
aaa
inc
or
lock
or
xor
xor
mov
or
ror
mov
sub
bound
gs
fisttp
adc
jg
adc
out
push
or
mov
inc
xor
push
add
adc
sub
cmp
je
sub
cmp
xor
sbb
jg
das
xor
popa
add
adc
xor
xchg
pop
inc
(bad)
jg
cmp
add
xchg
cld
xor
movs
loop
sbb
outs
cmp
or
cwde
and
or
les
push
call
jne
or
lods
or
or
fs
mov
leave
xor
push
push
mov
jmp
fdivp
mov
orps
aas
push
xchg
cmp
or
fs
adc
adc
hlt
xor
xor
cmp
or
mov
adc
mov
or
inc
add
mov
lahf
clc
push
add
popa
popf
pop
push
or
popf
push
jb
adc
push
add
dec
xchg
adc
adc
ins
adc
xchg
icebp
or
loope
inc
lea
add
cmp
je
or
and
add
je
add
push
push
enter
loop
popa
outs
loopne
psadbw
or
je
out
hlt
mov
loopne
or
adc
cs
and
inc
mov
loope
add
aad
add
inc
add
je
cmp
push
(bad)
jecxz
xor
jl
add
mov
and
mov
xor
popf
lar
mov
adc
adc
inc
loopne
adc
adc
mov
cmp
dec
sub
mov
inc
inc
pop
and
fwait
add
cmp
jl
addr16
mov
mov
inc
cmp
jmp
pop
add
add
lock
pop
dec
and
and
stos
(bad)
adc
adc
push
xchg
jne
xchg
pop
xchg
stc
test
push
or
mov
ss
in
xchg
add
ds
mov
dec
adc
stc
inc
lar
cwde
(bad)
or
ja
sbb
and
or
not
push
sub
add
js
sbb
idiv
mov
and
mov
and
gs
pop
pusha
add
mov
das
jecxz
fidivr
or
repz
(bad)
dec
stc
leave
add
adc
mov
adc
dec
or
mov
add
aaa
add
jle
cmps
push
adc
icebp
and
adc
jecxz
add
aaa
gs
add
leave
adc
sahf
mov
inc
pusha
pop
or
mov
xadd
and
inc
push
sub
retf
dec
pusha
popf
xor
or
shl
add
add
add
(bad)
adc
clc
cmp
jl
add
pop
mov
ficomp
inc
cmp
cmp
sbb
movs
dec
sbb
adc
adc
and
in
xor
dec
sbb
add
rol
or
mov
lods
xor
inc
cvtps2pd
ins
ret
adc
mov
or
rcl
sbb
mov
pop
add
sub
adc
jecxz
adc
mov
adc
xchg
mov
push
scas
add
mov
into
adc
mov
cmp
pop
cwde
and
sub
cmp
nop
push
mov
mov
xchg
adc
cmp
nop
dec
or
out
mov
les
pop
xor
add
cmp
jg
cdq
rcl
dec
shl
dec
loope
add
xchg
outs
cli
cs
dec
xchg
jb
sbb
cmc
adc
aam
fidivr
inc
mov
xor
lds
jno
sbb
popf
xor
es
popf
mov
mov
(bad)
and
cmps
pop
movs
shl
xchg
sbb
push
cmp
jne
push
bound
and
sbb
mov
adc
adc
stos
inc
xor
ins
push
mov
(bad)
push
xor
or
cld
inc
test
or
add
push
or
test
push
mov
sub
push
or
add
adc
sbb
xor
xor
cld
arpl
adc
jns
and
add
ja
sbb
mov
sub
sbb
rcl
inc
(bad)
js
sub
xchg
push
add
xchg
push
aaa
add
ja
and
ja
test
adc
or
pop
dec
bound
pusha
cmps
adc
cmp
jo
into
cdq
jae
inc
push
xchg
outs
je
and
add
cld
or
jmp
lods
test
ret
popf
bound
lock
aas
jae
and
or
in
xchg
cmp
pusha
adc
jmp
inc
inc
test
lahf
cs
adc
push
xchg
mov
add
inc
add
test
mov
(bad)
ret
adc
xchg
pusha
xor
or
pusha
dec
cmps
mov
test
add
adc
xor
outs
mov
xor
add
add
daa
and
add
daa
nop
sbb
shl
jne
jne
push
jmp
retf
cmps
lock
or
cmp
sub
adc
mov
push
sbb
aam
push
add
push
add
push
pop
jae
lock
adc
and
or
scas
jge
shl
xor
xor
(bad)
dec
and
xchg
jae
or
mov
and
push
bound
movs
jnp
inc
xchg
cmp
jg
sub
sbb
adc
sbb
add
push
push
adc
(bad)
dec
hlt
jae
addr16
in
clc
push
lea
cmp
aaa
jl
cmp
jg
add
add
adc
pusha
add
sub
add
jl
add
inc
or
xchg
and
fisubr
xor
xchg
or
ins
adc
clc
call
loopne
popa
xor
daa
shl
push
push
jb
shl
push
dec
mov
add
add
add
enter
xchg
fcomi
popa
nop
jecxz
push
mov
mov
test
adc
sbb
popa
(bad)
mov
cmc
repnz
push
mov
cmp
xor
push
xchg
add
and
add
xchg
cwde
pop
and
mov
and
stc
push
inc
cmp
(bad)
xor
adc
and
push
or
dec
dec
adc
stc
inc
push
inc
and
mov
retf
and
leave
sbb
hlt
add
jle
imul
add
clc
sbb
push
and
pusha
and
or
jecxz
or
xor
dec
int3
and
pushf
adc
push
out
mov
xchg
adc
xchg
pop
and
and
jne
bound
pusha
enter
inc
jl
push
inc
adc
loopne
pop
or
mov
rol
(bad)
xor
or
lea
(bad)
(bad)
push
and
lea
push
nop
add
lock
hlt
jg
cmp
inc
out
mov
call
pop
fs
adc
ror
and
jbe
mov
stos
push
inc
(bad)
mov
icebp
ffreep
cmp
nop
push
(bad)
(bad)
xlat
std
fild
fadd
mov
hlt
add
add
jne
jbe
push
xchg
in
push
dec
dec
fimul
in
test
or
pop
jb
dec
xchg
sbb
and
add
xchg
loope
add
mov
inc
mov
add
push
call
pop
or
shl
repnz
add
out
inc
and
in
xor
les
daa
fiadd
or
push
fsub
add
mov
xchg
cmps
dec
or
adc
or
xor
add
add
lea
out
adc
test
pop
mov
add
jne
push
icebp
add
and
adc
pop
pop
adc
jmp
div
inc
sbb
jbe
sar
fist
pop
mov
add
cmp
je
cmp
and
xor
cmps
pusha
(bad)
mov
popa
outs
adc
aaa
mov
push
and
cmp
jge
pop
xchg
push
daa
mov
out
add
and
inc
pop
push
sbb
xchg
xchg
push
daa
add
cwde
pop
xor
(bad)
xchg
xchg
add
sbb
mov
jne
xchg
je
test
mov
mov
or
xor
sbb
jns
inc
add
inc
pop
sub
loop
inc
out
inc
inc
aaa
movs
imul
push
and
or
cld
call
addr16
pop
or
fstp
push
mov
adc
add
mov
and
or
mov
push
xchg
sub
inc
mov
pop
mov
ins
or
adc
setle
add
enter
inc
call
cmp
sub
icebp
mov
or
mov
enter
movs
mov
daa
repnz
aaa
(bad)
fdivp
inc
or
sbb
add
xor
lock
push
lock
rol
push
add
sbb
in
push
mul
add
rcl
cmp
adc
sti
dec
or
gs
pop
push
jnp
test
xchg
or
les
movzx
jbe
lock
add
loope
or
cmp
push
add
jmp
movs
push
and
lea
jb
icebp
jne
mov
outs
fcom
push
xor
add
push
push
test
movs
inc
ret
xchg
add
push
pop
inc
add
adc
ss
imul
movs
cmps
rol
pop
inc
ret
mov
pop
sub
sti
adc
(bad)
ror
int
movs
(bad)
ret
xor
cs
lock
push
das
test
add
adc
inc
dec
int
movs
push
inc
cwde
add
add
push
and
dec
lea
dec
push
push
dec
lock
push
dec
test
add
pop
adc
dec
dec
int
movs
(bad)
inc
cwde
add
add
movs
out
fisub
push
dec
lea
movs
xchg
aam
ins
push
push
dec
lock
push
cmp
ret
aam
adc
cmp
int
movs
(bad)
push
pushf
add
xor
add
inc
add
add
mov
adc
add
mov
push
shr
adc
inc
pop
int
scas
or
movs
xchg
movs
jbe
xchg
pop
pop
xor
sub
sub
sub
pusha
cmp
xor
pusha
add
push
push
or
ins
arpl
imul
mov
shl
cmc
daa
cmp
xchg
jecxz
test
push
in
test
ret
in
inc
push
inc
mov
in
mov
icebp
sahf
out
test
arpl
xchg
call
shr
cmc
lahf
pop
stos
push
adc
or
test
mov
pop
js
or
jmp
pop
dec
add
repz
test
test
in
pop
jns
push
mov
repnz
push
lock
icebp
test
xchg
pop
imul
pop
inc
test
sbb
adc
pop
mov
hlt
xchg
pop
sub
pop
pop
pop
sar
or
add
(bad)
mov
add
adc
not
mov
ror
and
jle
or
xor
sar
xchg
pop
mov
dec
lods
aas
shr
adc
and
mov
xchg
pop
mov
aas
inc
clc
dec
xor
cli
test
pop
pop
js
xor
fdivr
mov
pop
test
and
loope
sti
xchg
rol
mov
pop
adc
lods
(bad)
or
push
movs
pop
add
add
jae
jo
add
or
out
mov
inc
adc
rol
rcl
cmp
ret
sbb
ret
stos
sbb
ret
inc
xor
(bad)
mov
or
test
sbb
sub
rep
mov
mov
xchg
inc
pop
sbb
cmps
retf
sbb
mov
add
retf
sbb
mov
and
adc
and
and
and
hlt
outs
js
sub
adc
outs
adc
in
imul
and
adc
movs
adc
lods
mov
(bad)
jg
push
add
add
inc
adc
pusha
fs
adc
hlt
jle
xor
add
pop
add
ds
punpcklwd
xor
push
and
ins
push
jle
icebp
pop
add
xor
add
pop
add
pusha
and
adc
and
adc
sub
sub
sub
sub
jmp
xchg
inc
xchg
clc
add
icebp
add
add
in
sbb
loop
inc
std
sbb
pop
sbb
inc
sub
or
jno
or
jle
add
(bad)
mov
inc
or
jne
or
cwde
sbb
jmp
outs
push
lock
sbb
jno
xor
ret
mov
jge
sub
cmps
mov
call
adc
push
jmp
and
inc
int
je
pop
mov
cmp
jge
adc
add
push
add
dec
mov
cmp
test
inc
les
punpckhdq
add
mov
cmp
add
adc
jp
(bad)
lahf
nop
fadd
pop
xchg
sar
sbb
cmp
cmp
ss
or
shl
add
mov
scas
(bad)
inc
xor
frstor
pop
xchg
loopne
dec
sub
shl
adc
jb
ja
cmps
xor
addr16
call
and
jbe
push
push
push
pop
pusha
in
movs
or
movs
sub
cmovl
mov
ficomp
sar
pop
cmp
std
add
clc
and
(bad)
je
push
cmp
lahf
mov
shl
xor
mov
xor
pop
add
daa
add
cwde
lahf
repz
add
add
add
cs
add
or
push
inc
mov
mov
cmp
cmp
sbb
or
inc
adc
adc
push
xchg
cmp
call
aam
clc
dec
add
adc
adc
shr
jmp
inc
icebp
jae
cli
ds
jno
adc
mov
cld
mov
push
test
xchg
or
xor
sbb
inc
pop
jle
mov
and
cld
inc
mov
mov
add
push
mov
and
and
add
mov
rol
cmp
mov
inc
inc
mov
cmp
add
push
rol
dec
cmp
cmp
push
or
sbb
mov
adc
in
jns
stos
loopne
jns
sbb
test
adc
and
rcl
cmp
mov
cmps
in
rol
adc
fisub
sub
sub
popa
dec
repnz
jo
pop
mov
movs
cs
sub
and
xchg
add
pusha
cmp
push
push
test
adc
push
xor
push
dec
lods
loop
push
dec
lock
jo
mov
dec
std
lock
adc
jecxz
fnsave
mov
add
xor
add
fnsave
dec
test
add
sar
adc
retf
gs
push
mov
jno
retf
add
sbb
in
sbb
dec
and
inc
push
add
or
(bad)
loope
sbb
fs
lss
inc
dec
add
add
inc
adc
or
xor
mov
adc
push
fwait
nop
test
jno
jo
add
push
add
or
or
adc
hlt
jno
aaa
xor
adc
add
jbe
movs
pop
add
lock
mov
nop
lods
out
or
into
cmp
lahf
or
loope
mov
jae
adc
mul
mov
out
and
rol
sbb
pusha
fild
mov
mov
xor
inc
add
es
add
movs
adc
mov
or
bts
jmp
push
push
xchg
dec
test
jp
mov
add
bt
jae
mov
retf
pusha
cmp
shl
add
add
shl
xor
mov
mov
add
cmp
push
sbb
mov
sbb
add
cs
and
xchg
call
pop
add
pop
or
mov
outs
or
mov
add
push
mov
xlat
iret
and
mov
mov
jne
int3
inc
push
and
ja
jae
push
inc
loope
add
leave
ret
push
call
xor
mov
adc
leave
ret
push
adc
pop
ds
bound
adc
data16
mov
rol
nop
and
mov
inc
and
imul
and
lea
inc
cmp
ja
add
lea
sub
sbb
pusha
fisttp
shrd
cmps
ins
mov
and
cwde
pop
les
cwde
scas
add
push
push
cwde
lahf
jno
aaa
loopne
or
popa
jp
jns
push
xor
call
mov
inc
or
xchg
mov
add
add
and
push
dec
jo
cmp
and
xor
mov
adc
sbb
jno
mov
add
jmp
mov
call
in
adc
jg
mov
mov
jmp
popa
pop
repnz
dec
add
add
xor
add
fdiv
mov
(bad)
dec
pop
adc
and
(bad)
cmp
jo
sbb
icebp
sub
adc
inc
add
jmp
xchg
xor
or
push
and
and
mov
jmp
and
jbe
loopne
imul
adc
loope
add
xchg
add
add
inc
sbb
inc
test
or
adc
add
add
push
test
jne
pop
mov
or
pop
sub
jl
push
xchg
add
outs
xor
test
nop
call
les
add
sbb
mov
test
cmp
push
and
nop
push
add
dec
or
enter
imul
mov
or
test
mov
loope
sbb
xor
stos
add
push
pop
adc
dec
sbb
jo
jmp
dec
cmp
je
mov
adc
lock
or
xor
icebp
shr
jno
push
fistp
repnz
push
adc
jo
jecxz
mov
add
fistp
movs
jg
arpl
push
sub
shl
add
mov
shl
icebp
popa
cld
add
cmp
mov
push
push
adc
mov
adc
pop
and
stos
cdq
cmp
adc
cmp
pop
pop
add
call
pop
jmp
mov
add
inc
mov
pusha
inc
(bad)
loopne
or
dec
xor
test
add
pop
jne
test
je
cdq
inc
lea
add
sub
and
sub
and
movs
lea
mov
ret
test
call
pop
jo
xor
add
jo
movs
add
adc
test
xchg
popa
jne
add
xor
call
add
imul
inc
cmp
add
movs
push
test
inc
fld
xchg
not
or
add
add
sub
lds
sbb
push
inc
adc
inc
add
inc
mov
adc
adc
sub
and
sub
call
test
sahf
jg
mov
cmp
push
add
mov
mov
scas
mov
ins
mov
test
push
div
jmp
sub
mul
sbb
mov
fs
sbb
add
mov
xor
add
jo
mov
pop
adc
add
dec
and
jne
push
inc
dec
push
mov
call
or
add
shl
into
add
lods
xchg
adc
cmps
mov
push
call
xchg
loop
adc
xor
ret
pop
push
mov
cmp
sahf
and
inc
add
adc
adc
dec
adc
mov
adc
loop
das
mov
mov
add
mul
repz
fwait
and
mov
cmp
cdq
xor
dec
mov
jmp
adc
pop
lock
fwait
adc
or
and
shr
add
add
add
mov
add
or
je
test
or
stos
and
xor
add
pop
push
js
push
xchg
pop
test
jo
adc
aam
xor
add
sbb
nop
xor
cld
addr16
or
xor
fnstsw
add
or
add
push
vmovups
or
and
xor
js
xor
je
jecxz
pop
push
push
js
push
test
vmread
rcl
pop
adc
lea
adc
rcl
mov
adc
xor
test
adc
add
mov
adc
add
js
add
add
adc
jno
cmp
inc
push
add
xor
push
add
and
pop
push
js
push
push
test
pop
js
rcl
pop
and
adc
rcl
add
add
test
adc
push
movs
add
mov
sbb
mov
adc
sub
adc
cmp
sbb
push
rol
cmps
push
ja
loopne
pop
pop
sbb
mov
(bad)
mov
in
test
push
pop
in
lock
add
add
retf
cmp
jae
inc
mov
pop
ja
and
and
popa
mov
fisubr
add
cmp
je
movzx
repnz
sub
cmp
inc
sar
adc
lea
adc
stos
movs
add
push
mov
push
out
movups
push
mov
jge
or
call
call
pop
repz
js
adc
add
pop
push
sub
mov
jmp
jmp
mov
adc
shr
xchg
or
(bad)
adc
sahf
adc
add
loopne
leave
adc
add
js
mov
add
push
out
js
jo
aaa
out
js
sahf
adc
mov
add
adc
push
pop
and
dec
and
icebp
js
outs
or
scas
test
add
js
(bad)
sbb
add
push
hlt
cmp
push
hlt
mov
mov
push
(bad)
pop
jo
mov
idiv
(bad)
test
mov
neg
and
cmp
clc
cmp
and
add
and
jb
adc
(bad)
test
pop
cli
js
push
adc
mov
adc
mov
lds
xchg
adc
lds
push
and
shl
adc
pop
std
push
pop
pshufw
add
lahf
jns
ret
js
xchg
adc
paddd
jb
sbb
dec
xchg
nop
(bad)
ret
or
add
pop
jmp
jecxz
push
push
jecxz
push
jecxz
repnz
in
icebp
dec
js
xor
mov
adc
pop
add
adc
mov
jne
adc
sahf
adc
in
add
sbb
sbb
pop
lock
jo
adc
xchg
adc
rcl
mov
adc
in
add
sbb
ret
push
jecxz
add
stos
sub
shl
outs
sbb
add
mov
adc
sahf
adc
in
add
sbb
pop
adc
bound
jecxz
adc
xor
xchg
adc
mov
aad
inc
sbb
popf
adc
shl
adc
loop
mov
mov
pop
sbb
add
jne
adc
std
shl
add
in
add
jecxz
and
push
push
js
jecxz
adc
add
adc
lahf
xor
in
add
pop
jecxz
xlat
jmp
js
in
xlat
jbe
js
in
adc
nop
mov
fwait
cli
adc
popa
push
je
mov
adc
or
xor
or
inc
test
sar
and
add
mov
gs
adc
out
adc
int
pop
add
loope
mov
fisttp
sahf
js
in
xchg
adc
add
cmp
fstp
push
and
das
push
adc
js
xor
sar
pop
js
in
xchg
adc
inc
outs
lahf
adc
loopne
adc
sahf
adc
xchg
mov
loop
js
mov
sar
nop
js
in
adc
xchg
adc
mov
mov
loop
add
xor
push
test
sub
in
outs
and
sbb
add
cmc
sbb
neg
cmp
inc
cs
push
jo
push
das
lock
lea
sar
mov
pop
in
das
adc
jo
push
sbb
and
sbb
push
cli
cmp
push
das
adc
and
pusha
out
add
cli
hlt
shr
mov
or
outs
mov
cmc
loopne
inc
push
sbb
add
rol
out
out
rol
and
add
push
sub
inc
push
adc
lock
xor
sbb
js
icebp
outs
rol
add
or
mov
lock
repz
jp
icebp
outs
inc
push
mov
sbb
xchg
mov
adc
lock
mov
push
outs
rol
js
icebp
xchg
adc
xor
aad
adc
lock
mov
inc
cmps
js
(bad)
xchg
adc
inc
mov
mov
cmp
dec
pshufw
das
rcl
jae
repnz
loopne
aaa
and
push
pop
js
repnz
das
adc
pop
fist
push
mov
jne
icebp
lock
xchg
and
icebp
or
js
xchg
adc
push
xchg
adc
lahf
adc
lock
xor
outs
add
lea
sbb
shl
xchg
adc
loopne
popf
add
sub
imul
mov
sub
xor
fneni(8087
imul
cmp
adc
jmp
movs
inc
lods
pop
add
sbb
add
aaa
es
add
adc
iret
js
rol
dec
add
adc
sbb
adc
cmc
and
add
jne
icebp
sub
sbb
jecxz
mov
fiadd
iret
add
add
loopne
nop
sub
or
mov
add
inc
loop
ss
lahf
push
add
pop
pop
inc
add
pop
add
adc
inc
add
and
jge
add
mov
add
popf
push
inc
add
inc
(bad)
push
cmp
rol
push
add
xchg
pop
inc
add
add
mov
add
adc
rol
pop
inc
add
cmp
push
pop
adc
add
add
add
cmp
add
add
cmp
fimul
lock
xlat
or
mov
pop
and
sti
das
and
xchg
pop
xor
sar
cmps
add
je
and
aad
add
rol
je
add
push
cld
jne
mov
sub
adc
pop
ja
or
in
add
cmp
jne
and
mov
dec
or
cld
add
jne
or
jmp
into
and
xchg
pop
nop
in
into
inc
add
pop
dec
sbb
jmp
and
mov
push
or
les
jmp
mov
and
add
cmp
jne
inc
inc
inc
sbb
repz
aaa
adc
push
sub
jmp
adc
jmp
ret
push
icebp
lea
inc
adc
pop
mov
or
add
cmp
or
lahf
pop
test
xchg
pop
add
add
or
and
(bad)
and
xor
clc
jb
mov
dec
adc
adc
push
or
xor
add
add
sub
push
cmp
je
rol
or
pop
and
mov
repnz
or
adc
mov
repnz
or
sbb
mov
adc
mov
data16
push
fmul
mov
push
repnz
mov
aas
and
add
adc
ja
pusha
mov
add
add
enter
push
stos
ret
es
enter
mov
movs
mov
push
je
(bad)
jno
or
jbe
test
push
inc
mov
xor
mov
pop
mov
pop
mov
inc
adc
mov
daa
mov
mov
mov
mov
in
push
mov
jg
push
jne
jbe
idiv
inc
jmp
jg
dec
loopne
sbb
push
adc
adc
cmp
repz
xor
add
mov
adc
push
mov
ret
into
add
shr
into
add
call
push
pop
popa
sbb
mov
push
jg
inc
sbb
gs
mov
pop
or
cli
icebp
add
xchg
loopne
push
mov
adc
clc
cmp
and
pop
add
add
push
in
lods
pop
rcl
ret
cld
shr
mov
test
xor
jnp
cmp
inc
(bad)
mov
sbb
dec
mov
adc
sub
inc
add
mov
mov
mov
call
adc
xor
arpl
jne
adc
sub
xchg
push
ret
inc
xlat
sbb
inc
jb
adc
adc
lahf
jle
push
add
and
rol
shl
add
popf
int
mov
or
imul
adc
sbb
mov
inc
cmp
jp
jo
mov
enter
sbb
add
inc
inc
or
sbb
repz
inc
lods
std
push
rcl
pushf
aaa
call
mov
jo
mov
xor
adc
es
loope
aad
add
xor
dec
push
adc
out
inc
aas
push
les
inc
add
inc
or
adc
jns
cwde
add
push
inc
add
cmp
xor
(bad)
xor
or
jne
sub
sti
inc
pusha
or
(bad)
mov
jl
mov
xor
mov
xor
sbb
inc
lock
inc
and
cmp
ja
or
cmp
add
sbb
xor
mov
or
(bad)
fadd
sbb
mov
mov
jb
rcr
or
and
fld
sbb
outs
xor
loope
jae
das
mov
ret
imul
jmp
inc
xor
add
push
push
lds
mov
fdiv
ret
mov
rcl
nop
add
add
add
inc
jno
push
pop
out
paddsb
fdiv
ins
or
or
(bad)
loopne
push
push
mov
jmp
add
pop
jge
pop
test
mov
inc
stc
pusha
je
test
and
and
clc
add
ja
jmp
pop
dec
mov
jno
scas
cld
lahf
add
aad
inc
add
(bad)
xor
cmp
xchg
mov
les
inc
gs
pop
push
cmp
pop
ss
ins
cmp
(bad)
outs
xor
adc
and
fimul
mov
and
imul
and
shl
jmp
sub
sbb
mov
pop
test
cmp
into
add
test
xchg
mov
adc
addr16
adc
jmp
or
aam
das
inc
pop
cmp
movs
xchg
adc
cmpxchg
jg
ja
cmp
push
pop
fcom
rcr
add
ffreep
loopne
or
inc
xor
and
rcl
mov
add
mov
pop
je
sbb
push
mov
not
xor
dec
loopne
push
or
inc
xor
movs
pusha
scas
or
mov
sbb
sahf
fadd
in
xor
pusha
iret
push
mov
xor
sbb
out
outs
fadd
jb
adc
xchg
daa
sbb
mov
add
clc
nop
dec
in
test
or
in
mov
xor
in
push
push
dec
mov
je
mov
xchg
add
test
add
fsub
jo
sar
adc
sti
inc
mov
or
jp
mov
add
aas
mov
or
sbb
or
and
sbb
lock
retf
test
adc
mov
lock
inc
arpl
xchg
loopne
inc
js
mov
test
sub
jo
(bad)
adc
add
pop
lea
div
push
push
and
inc
clc
aam
push
shl
push
push
add
add
mov
fsub
or
add
ret
mov
(bad)
fdiv
sbb
sbb
mov
or
cmp
je
or
add
in
pop
add
cmp
ror
adc
pop
push
dec
adc
or
or
jne
add
ins
push
inc
push
lock
loope
sbb
pop
push
and
pop
aaa
cmp
add
test
add
push
add
je
mov
mov
add
push
add
pop
lock
pusha
add
fstp
scas
data16
out
es
pop
inc
ror
inc
inc
add
inc
adc
add
adc
mov
in
xor
adc
or
add
mov
sub
inc
lock
push
mov
stos
sbb
or
jmp
add
pusha
or
dec
lock
add
mov
mov
pusha
mov
mov
xchg
retf
inc
test
jnp
popa
xor
jmp
add
enter
fsubr
add
psadbw
add
xor
jl
mov
mov
mov
and
xor
xor
(bad)
popf
test
sub
push
movs
lock
pop
lock
dec
pusha
dec
adc
lahf
xor
hlt
mov
adc
adc
xor
sbb
adc
(bad)
(bad)
outs
sbb
add
adc
jg
inc
in
scas
add
push
mov
inc
hlt
test
xor
xchg
sar
push
adc
jmp
dec
pop
or
push
test
add
or
mov
xor
xchg
mov
add
outs
nop
out
ror
rol
aas
sbb
mov
aam
aad
cmp
jne
xchg
inc
pusha
dec
pop
push
jmp
push
loop
add
push
jns
sbb
clc
test
xchg
daa
push
xchg
push
sub
push
add
and
xor
jp
adc
and
mov
pusha
dec
fs
mov
jle
add
test
daa
inc
adc
rcr
adc
and
in
out
pusha
outs
adc
sahf
pusha
mov
cmp
add
cs
jp
pop
mov
arpl
mov
jmp
mov
not
gs
adc
(bad)
movs
inc
sub
push
xor
mov
push
or
stos
cwde
icebp
xor
dec
add
mov
popf
add
invd
jb
imul
inc
xor
mov
add
push
inc
mov
cmp
or
add
push
add
enter
mov
pop
xchg
dec
inc
xor
jns
add
xor
mov
cmp
aas
cmp
outs
cmp
jno
push
push
retf
dec
inc
nop
mov
adc
mov
je
add
adc
hlt
jmp
test
push
mov
out
mov
out
cmpxchg
enter
push
jmp
mov
jnp
push
call
jl
cmp
or
push
and
scas
mov
adc
cmp
repnz
mov
dec
pop
xchg
inc
pop
adc
pusha
lock
sub
sti
ds
xchg
xor
test
push
jp
mov
test
adc
push
adc
int
mov
xlat
mov
or
and
sub
xor
pop
pop
add
jno
xor
popf
jecxz
push
push
jecxz
test
xlat
and
outs
xchg
ss
shl
call
jb
jecxz
inc
dec
xlat
rol
xor
adc
arpl
cmp
icebp
js
sar
mov
adc
mov
lea
inc
sub
das
add
sbb
cmc
dec
xchg
pusha
in
(bad)
mov
mov
adc
mov
push
(bad)
adc
inc
jge
mov
rcr
jg
adc
add
push
pusha
(bad)
adc
lock
sub
test
jp
xor
in
sub
cmp
inc
sbb
repz
add
xor
addr16
and
xor
(bad)
or
call
and
je
sbb
adc
xor
mov
cmp
pop
pop
xor
sub
out
cwde
xor
lock
in
scas
cwde
add
loopne
add
adc
cmp
jne
inc
jmp
dec
jnp
add
or
les
mov
adc
or
and
cmp
popa
or
add
xor
mov
lods
xchg
or
mov
sbb
add
jb
cld
or
rcr
sbb
jno
std
jecxz
xchg
adc
cwd
add
test
cmp
jne
add
add
adc
(bad)
mov
jbe
loopne
add
push
out
cmovo
test
aad
shl
fld
leave
ret
(bad)
cmp
enter
sbb
add
dec
adc
push
sbb
pop
add
test
or
dec
rol
je
mov
mov
call
jmp
mov
pop
mov
sbb
test
add
mov
test
jne
test
add
cmp
fdiv
dec
inc
or
mov
pop
jne
lods
sub
add
in
add
and
pop
push
inc
jmp
cmps
lods
adc
jmp
sbb
or
adc
pop
add
xchg
inc
jmp
es
add
adc
mov
add
xor
push
add
ret
jno
les
adc
jmp
and
cdq
and
mov
sub
mov
add
mov
cld
inc
xor
and
and
mov
sub
push
cmp
jb
push
sub
push
mov
add
mov
add
and
shr
rol
push
xor
push
ret
sub
or
call
and
adc
loope
xchg
loop
js
sti
add
or
shl
dec
sbb
xchg
or
daa
adc
les
dec
xor
stos
xor
in
add
test
nop
rol
(bad)
xchg
shl
jmp
test
adc
add
clc
pop
adc
pop
and
push
mov
sub
sub
cwde
adc
fist
sahf
push
add
clc
int
repz
xchg
pop
add
dec
add
in
inc
inc
adc
xor
adc
dec
sbb
stos
scas
push
mov
pop
adc
retfw
add
dec
or
aaa
mov
cmp
das
cs
mov
nop
(bad)
shl
add
loopne
test
inc
or
push
jecxz
xor
jb
or
xlat
fisubr
mov
jp
sbb
hlt
jg
sbb
hlt
dec
test
ss
mov
jmp
or
push
ss
adc
leave
push
add
cs
and
add
and
add
dec
mov
jne
sub
shr
sbb
div
cmps
es
pop
pusha
stos
adc
cmp
sti
mov
arpl
inc
test
jmp
cmc
adc
push
scas
pusha
or
and
add
movs
repnz
jne
mov
cdq
sbb
jle
xchg
not
xor
adc
pop
arpl
mov
inc
(bad)
stc
add
test
mov
jp
rol
push
div
jb
push
nop
rol
ds
push
and
add
and
(bad)
cmp
je
cmp
sub
daa
inc
add
in
xor
add
pusha
dec
or
push
out
pop
in
mov
push
jmp
add
mov
aas
adc
inc
in
dec
(bad)
fbld
xor
sbb
add
push
fsubr
xor
and
add
inc
mov
dec
daa
adc
(bad)
sub
mov
and
outs
sub
or
jbe
sub
add
or
xor
and
inc
outs
add
dec
adc
fild
cwde
in
add
push
or
adc
sbb
add
cmps
mov
pop
mov
inc
in
adc
inc
pop
jno
xchg
adc
clc
add
pop
jne
cmp
jne
pop
aad
jmp
and
adc
xchg
in
clc
add
arpl
ror
dec
push
push
adc
add
test
xchg
cmps
jo
mov
and
mov
arpl
and
adc
push
xchg
push
inc
cmp
ds
and
cdq
xor
ss
data16
push
lea
inc
cmp
cmp
imul
cmp
nop
movs
add
loope
cmovo
outs
add
inc
add
sub
add
adc
sub
lock
mov
sub
pop
and
sbb
loope
icebp
add
add
daa
add
js
ins
mov
add
pop
add
mov
shr
or
add
add
mov
fimul
jg
mul
xchg
or
xchg
adc
into
adc
dec
and
sub
pop
jb
push
mov
and
push
fist
jne
fild
inc
retf
nop
movs
outs
add
or
add
fidivr
jge
je
or
and
mov
add
and
push
hlt
adc
call
xchg
cdq
push
xchg
jno
aaa
and
std
add
jge
je
cmp
loopne
xor
add
xor
pop
dec
js
add
movs
add
and
arpl
adc
and
sahf
add
jne
cmp
mov
jmp
in
cmp
pop
or
stc
popa
fcmovb
lds
(bad)
test
mov
rol
pop
add
xor
mov
and
js
mov
push
aaa
mov
rol
test
mov
cmp
adc
pusha
pop
add
inc
rcl
sti
popa
mov
lahf
sahf
pushf
pop
and
mov
mov
clc
or
push
shl
and
adc
mov
lahf
add
pusha
mov
pop
and
inc
add
add
add
jmp
mov
and
and
(bad)
icebp
jo
test
ror
and
aam
inc
aaa
jmp
add
add
stc
add
inc
push
inc
cld
je
push
adc
pop
mov
int
cmp
shl
pusha
loope
inc
nop
pusha
cmps
mov
xchg
or
xchg
or
adc
or
imul
cmp
and
add
test
adc
dec
dec
mov
or
add
test
xchg
push
test
or
inc
or
mov
aas
or
inc
aas
adc
jle
cmc
inc
jecxz
adc
das
mov
std
jo
or
sub
add
out
test
mov
xchg
es
mov
mov
inc
mov
lods
test
add
mov
add
inc
cmp
mov
push
outs
and
inc
xchg
test
nop
cmp
cmp
push
leave
jmp
or
or
xor
pusha
or
dec
movs
adc
push
and
push
jmp
mov
xchg
add
or
pop
and
inc
add
adc
adc
loop
jp
adc
dec
adc
mov
pop
dec
dec
mov
adc
loopne
es
push
movs
loope
or
scas
inc
jb
adc
cmc
inc
or
and
or
add
push
and
cs
or
dec
add
push
add
sbb
lock
adc
add
cwde
xor
in
adc
lock
cmps
xor
inc
ret
inc
addr16
inc
ret
add
dec
arpl
and
ret
push
cmp
jo
stc
in
adc
cmp
adc
and
push
and
xchg
inc
jecxz
inc
xor
mov
or
pop
mov
lds
mov
lds
and
mov
in
add
ins
or
adc
shl
mov
nop
mov
add
lds
rcr
pop
jge
push
inc
add
lods
adc
push
xchg
dec
mov
mov
xchg
jae
cmp
add
jecxz
fs
sub
and
or
cmp
inc
fdivr
fidiv
add
ret
cmp
add
gs
or
lods
iret
jno
jns
add
inc
pop
bound
push
inc
pusha
movs
cmp
sbb
jmp
push
adc
mov
jecxz
xor
(bad)
lea
mov
icebp
push
sbb
or
or
add
fmul
in
jl
xchg
mov
daa
repnz
dec
push
fnsave
xor
inc
lock
add
cmp
jmp
outs
mov
mov
addr16
and
mov
or
call
pxor
push
push
inc
xor
sbb
or
sub
pop
mov
ja
aam
fwait
and
rol
cmps
out
adc
iret
adc
adc
sbb
adc
stc
sbb
je
sbb
add
cwde
sub
adc
dec
jne
push
scas
jo
sub
or
mov
ror
nop
add
push
addr16
sub
add
mov
cmp
sbb
xchg
add
add
sbb
inc
dec
jne
pop
pop
ret
mov
fdiv
fild
add
rcl
and
adc
adc
sbb
and
clc
pop
jmp
pop
mov
push
push
inc
xor
sbb
or
cmp
adc
cmp
xchg
pop
test
xchg
leave
cmc
std
in
inc
mov
pop
xor
jno
add
cmovb
je
mov
and
(bad)
push
sbb
icebp
jg
adc
inc
fwait
retf
cmp
retf
push
mov
add
add
mov
adc
push
xor
adc
fld
inc
cmp
inc
or
xor
hlt
aas
sti
adc
dec
(bad)
mov
sub
sbb
addr16
adc
jae
push
div
jbe
out
add
inc
add
mov
adc
adc
xchg
repnz
paddusw
stc
add
xchg
adc
inc
push
pcmpgtb
std
add
jo
pop
shl
ret
push
icebp
repz
neg
and
jno
or
clc
xchg
in
xor
sub
add
xchg
jo
jmp
add
(bad)
cmp
cdq
adc
add
dec
jne
push
add
sub
add
xchg
inc
mov
loopne
sub
push
fcmovb
loopne
scas
stos
shl
sbb
and
mov
sub
retf
xchg
enter
adc
push
xchg
or
or
imul
push
cmp
jle
cmp
add
mov
ret
sbb
xchg
fadd
xor
inc
lock
and
or
xor
or
inc
add
inc
jae
adc
cmp
push
shl
frstor
add
mov
out
add
dec
adc
xor
ror
cmps
clc
nop
or
or
jo
aaa
sahf
imul
add
push
mov
jne
lea
dec
shl
je
dec
cmc
les
rol
idiv
add
xor
dec
mov
cmovg
data16
aaa
inc
es
adc
sub
inc
pop
test
rcl
rcl
and
and
push
movs
xchg
inc
imul
push
rol
rcl
xor
rcl
sub
mov
rol
dec
fist
inc
xor
dec
add
xor
sub
pop
mov
push
stos
repnz
xor
jno
mov
or
jne
cmp
jo
out
hlt
push
push
xor
loope
jno
or
add
ds
ss
push
or
pop
lock
mov
not
inc
pop
mov
adc
shr
push
sub
dec
or
push
jle
pusha
mov
add
mov
mov
(bad)
pop
adc
mov
or
push
or
mov
dec
mov
xor
sub
add
or
(bad)
cmp
push
cld
ds
jg
mov
pop
or
gs
call
sbb
sbb
pop
push
push
call
jmp
xor
fidiv
add
mov
jle
rol
xor
inc
inc
sbb
add
clc
je
sub
test
into
and
adc
nop
push
ja
lods
adc
push
adc
xor
je
pop
jmp
and
scas
fwait
add
inc
mov
and
inc
inc
adc
mov
mov
adc
add
inc
daa
sub
cmp
adc
fdivr
leave
push
sbb
iret
fs
lock
popa
je
pop
sbb
inc
jmp
add
inc
rcr
mov
nop
stc
arpl
stc
repz
jno
fst
test
xchg
inc
xor
cmps
dec
aas
shr
mov
cmps
dec
inc
ins
mov
adc
imul
fst
pusha
mov
(bad)
popa
mov
and
hlt
and
call
in
and
hlt
jne
sub
cmps
dec
shl
add
cmps
dec
aas
ret
hlt
aaa
jp
in
pusha
mov
mov
sub
jo
dec
fbld
icebp
adc
ja
push
sub
clc
jne
mov
stos
dec
aas
and
aas
dec
and
adc
pusha
cmps
mov
or
dec
lahf
mov
mov
adc
sbb
mov
sub
leave
lods
mov
add
and
stos
dec
lahf
mov
dec
or
mov
xchg
and
test
dec
lea
stos
dec
or
add
test
sbb
adc
nop
out
movs
(bad)
or
aas
xor
sbb
xor
fisttp
sbb
xor
xor
stos
adc
add
or
adc
cmp
sub
xor
inc
inc
data16
dec
aaa
or
mov
add
add
shl
xchg
adc
sub
push
add
or
mov
pop
ds
sub
(bad)
fld
push
jne
mul
or
jecxz
bound
add
jmp
jp
loopne
add
ret
rcl
add
pop
push
pop
and
enter
sub
push
and
pop
and
ficom
dec
aaa
fcom
or
mov
sub
inc
mov
cmp
pop
or
rol
push
mov
adc
cmp
bnd
mov
push
add
mov
jne
push
inc
push
add
adc
mov
ins
sbb
mov
add
adc
jne
mov
enter
popa
mov
xacquire
xor
cmp
mov
(bad)
lock
and
es
and
adc
jo
or
mov
add
rcl
jg
sbb
(bad)
jae
inc
movs
and
movs
push
icebp
xchg
fld
fld
mov
or
adc
movs
sub
ds
dec
sbb
xchg
and
add
add
shl
push
add
imul
adc
jg
or
pop
iret
mov
cmp
push
mov
adc
into
xor
mov
sahf
jle
inc
push
jne
cli
push
lahf
pop
inc
mov
icebp
pop
(bad)
xchg
or
push
jmp
push
je
mov
adc
push
add
dec
cdq
mov
aas
and
mov
lock
xchg
pop
fmul
pop
pop
movs
jo
pop
aas
push
inc
out
popa
add
rcl
add
call
(bad)
(bad)
out
test
xor
repnz
mov
adc
inc
into
mov
jb
mov
jb
adc
xchg
or
clc
cmp
lds
fwait
inc
inc
daa
les
sahf
push
popa
ret
push
mov
inc
add
mov
ror
adc
mov
push
or
mov
inc
mov
or
jmp
call
jmp
fs
sbb
pop
test
sbb
jnp
or
cmc
ss
int3
add
sbb
jmp
outs
lock
or
data16
sub
inc
sub
pop
or
sub
jbe
retf
fadd
inc
adc
and
je
mov
lods
and
and
inc
sub
pushf
push
inc
and
ret
add
retf
rol
movs
call
and
cwde
imul
add
adc
icebp
shl
out
or
out
adc
xor
adc
mov
fild
xor
add
pop
inc
push
mov
jno
mov
popa
fmul
cmp
sub
push
mov
cmp
psllw
lock
sub
mov
push
inc
mov
push
add
js
add
arpl
mov
add
(bad)
adc
add
cmp
jne
mov
sub
pop
jne
mov
pop
add
jmp
fwait
jmp
add
lock
mov
add
sbb
lock
mov
sahf
adc
adc
jg
je
lea
xor
sbb
add
and
dec
adc
jmp
cld
jb
jne
cmp
clc
jbe
cmp
pusha
push
and
mov
inc
sbb
or
push
mov
push
add
mov
vlddqu
push
inc
xor
popf
pop
lds
cmps
push
lahf
xor
cmps
push
sub
imul
jne
imul
sbb
sbb
xchg
sub
ret
add
xor
call
and
pop
or
inc
or
adc
sub
jecxz
inc
and
adc
or
sahf
jae
mov
dec
call
loopne
dec
add
mov
mov
sbb
pop
pop
or
adc
ins
in
sbb
add
mov
adc
mov
(bad)
fcom
scas
pop
pop
pop
push
xchg
pop
sbb
inc
std
inc
sub
lea
push
and
push
shl
mov
and
dec
icebp
xchg
ins
xchg
and
adc
dec
stc
jbe
xor
adc
gs
or
je
shl
inc
mov
mov
sahf
(bad)
popa
mov
inc
ja
or
(bad)
add
js
mov
adc
jle
and
jae
add
pusha
lods
add
or
add
jne
xor
cmp
je
inc
mov
jo
mov
shr
push
dec
and
mov
jp
adc
fsubp
mov
mov
push
push
mov
cmp
pusha
retw
xor
dec
xchg
push
mov
and
mov
xchg
sub
adc
mov
lea
push
cld
push
fisub
push
test
add
pop
aaa
dec
inc
add
cmp
clc
add
hlt
add
jmp
and
jmp
mov
add
lea
or
dec
in
cs
test
or
inc
or
and
push
push
dec
or
mov
add
xor
rol
adc
or
add
rol
add
data16
pop
or
ret
inc
rcl
mov
lea
sub
mov
xchg
les
push
and
nop
fdivrp
les
adc
add
or
fwait
add
ret
pop
sub
push
dec
push
int
add
add
add
pop
cmps
mov
arpl
xchg
dec
jns
sub
mov
cwde
mov
aas
add
jmp
ret
nop
inc
or
movs
nop
lahf
push
inc
test
or
mov
fild
not
sub
xchg
mov
pop
cmp
push
pop
cmp
movs
lahf
mov
test
sti
push
sbb
mov
xor
push
push
out
das
push
add
movs
jo
xchg
int
push
nop
out
jmp
str
mov
sub
add
fild
mov
mov
cmc
pop
sub
fcom
adc
retf
jnp
imul
leave
cdq
clc
int
gs
sub
ds
js
dec
loop
pop
sti
popa
and
inc
jae
dec
adc
pop
xchg
jno
add
mov
cmp
pop
sbb
adc
cwde
add
rcr
dec
push
add
sbb
mov
inc
pusha
mov
out
hlt
xchg
add
test
aad
xchg
dec
lock
dec
jo
aam
add
hlt
jnp
inc
mov
nop
inc
loopne
(bad)
aad
movs
dec
add
sbb
inc
test
xchg
(bad)
div
inc
sbb
or
leave
add
mov
mov
push
lock
push
add
sar
sbb
mov
ins
out
popa
cmp
xchg
push
in
xor
(bad)
data16
jmp
mov
add
push
add
push
sub
push
and
lock
add
fwait
adc
push
xor
rcr
ror
add
mov
dec
shr
popf
cld
add
icebp
popf
loopne
enter
pop
stc
add
add
jne
cwde
out
leave
inc
aam
inc
pop
pushf
adc
xchg
mov
adc
add
fcom
add
or
icebp
add
mov
add
xor
or
push
xchg
inc
sub
or
jb
adc
mov
ja
mov
test
and
xor
ret
jb
add
add
mov
sub
mov
push
cmp
stos
xchg
or
addr16
sbb
xchg
mov
xor
and
test
and
pop
shl
add
xchg
or
pop
(bad)
and
and
loopne
les
jecxz
mov
push
jo
xchg
inc
addr16
push
and
xchg
out
(bad)
push
test
push
ss
pop
jo
pop
nop
inc
push
xchg
(bad)
push
push
add
push
push
push
pop
jo
inc
pop
or
inc
je
jb
bound
je
jae
add
gs
popa
mov
add
jo
jb
gs
je
jbe
inc
sbb
ins
jo
popa
je
xor
rcl
push
and
test
out
les
icebp
ss
xchg
gs
popa
or
outs
jb
add
ins
add
gs
imul
jns
add
ins
add
jae
jb
popa
je
aad
xchg
pop
add
sbb
inc
push
(bad)
push
xchg
adc
or
aaa
xchg
mul
push
test
add
outs
fs
jo
adc
aam
or
je
outs
fs
xchg
and
jb
jmp
outs
jae
sbb
inc
push
sbb
test
daa
push
push
add
(bad)
div
push
nop
xor
add
(bad)
hlt
ss
push
dec
push
inc
outs
jne
push
jns
adc
inc
xor
adc
ret
dec
outs
outs
cmp
push
push
and
pushw
push
mov
xchg
add
xchg
cmps
aaa
push
xchg
xor
pop
dec
push
ror
xor
push
rcl
sbb
xor
push
out
pop
add
aaa
xchg
add
xchg
dec
xchg
ss
hlt
push
pop
in
pop
nop
inc
push
test
xchg
inc
cmc
(bad)
xchg
or
push
push
nop
in
push
es
fcomp
push
inc
xchg
in
es
push
(bad)
xchg
push
dec
push
push
cmc
add
add
arpl
outs
adc
xchg
or
(bad)
or
inc
add
push
in
test
push
cmc
xchg
xchg
test
(bad)
xchg
xchg
inc
push
mov
nop
push
cmp
adc
shl
aad
in
add
dec
xor
movs
fiadd
and
push
xchg
add
pop
inc
xchg
(bad)
out
push
xor
dec
inc
adc
adc
inc
inc
es
inc
sar
outs
xchg
and
push
add
(bad)
(bad)
inc
push
dec
xor
rol
es
adc
ins
popa
in
adc
popa
jb
jne
jo
adc
inc
push
push
add
daa
push
je
push
outs
ja
xchg
push
in
rol
add
stos
xor
push
xlat
xchg
out
ins
ror
fsubr
push
in
push
rcl
push
push
xchg
add
inc
adc
jae
add
addr16
popf
add
inc
outs
jb
popf
or
jb
add
push
das
adc
add
in
ss
ins
and
cmp
cld
adc
xchg
jae
inc
xchg
int
add
push
and
test
ins
jne
push
addr16
in
(bad)
sbb
push
aaa
xchg
inc
add
jmp
gs
sub
or
bound
daa
inc
mov
push
push
push
cmp
stc
xor
push
and
adc
push
xchg
ins
and
pop
movups
push
adc
or
xchg
es
out
les
mov
cmc
add
jne
jb
push
gs
daa
cmp
sub
adc
push
mov
movs
pop
inc
dec
add
outs
lock
adc
jno
jo
addr16
add
sbb
add
push
and
push
inc
mov
sub
inc
inc
fs
and
xchg
adc
cmp
adc
add
xchg
loopne
push
xchg
inc
adc
js
das
xor
push
(bad)
in
push
push
push
inc
js
arpl
add
sub
inc
mov
cmovne
push
mov
test
mov
mov
loope
or
or
repnz
add
shr
or
lods
rol
pop
shr
jb
or
add
shl
fisubr
or
cmp
jb
call
add
adc
adc
add
xor
hlt
data16
sub
mov
js
add
sub
mov
inc
adc
clc
add
call
push
or
cmp
je
call
xchg
push
into
adc
(bad)
aas
inc
cmps
mov
shl
inc
and
push
mov
call
cmp
add
add
add
call
pop
mov
inc
lods
push
dec
shl
sub
mov
or
add
sub
pop
addr16
add
and
jbe
dec
push
jmp
and
lods
add
push
add
ins
and
inc
or
jmp
and
mov
lock
add
xchg
scas
mov
sbb
loop
pusha
mov
cmp
sbb
add
pop
ror
add
(bad)
sbb
sub
loopne
add
push
jbe
and
add
add
inc
add
add
inc
add
or
add
add
inc
add
jl
or
call
inc
add
add
inc
add
test
add
iret
add
or
push
push
loopne
es
ss
add
dec
pop
sbb
les
mov
rcr
add
adc
adc
nop
mul
add
adc
call
lar
rol
pop
lock
push
data16
inc
add
adc
or
scas
dec
adc
xor
les
mov
mov
inc
push
into
jb
sub
leave
push
nop
sbb
add
les
stos
or
les
push
or
lds
pusha
stos
or
mov
or
mov
enter
adc
stos
sub
(bad)
and
sbb
mov
add
shl
inc
sbb
pop
rcl
rcl
and
push
sub
adc
and
loope
sbb
retf
or
pushf
add
and
ret
add
adc
add
pop
xor
outs
imul
outs
and
push
adc
rol
dec
sahf
int
outs
jb
adc
rol
push
xor
xor
lock
pop
push
inc
add
add
add
add
push
inc
push
adc
add
mov
add
adc
xchg
push
xor
jns
and
sub
inc
add
cmp
dec
outs
je
add
outs
jne
push
and
xchg
pop
inc
test
add
sbb
bound
add
imul
adc
loop
add
dec
dec
inc
sbb
loopne
aad
and
adc
rol
dec
dec
dec
inc
push
inc
push
pop
mov
inc
xchg
xor
inc
dec
or
xor
add
std
adc
shl
add
call
rcl
sub
or
ror
fiadd
add
adc
leave
inc
push
sub
xor
pusha
jo
adc
lock
adc
xor
popa
jno
adc
icebp
add
adc
xor
bound
adc
repnz
adc
xor
arpl
adc
repz
adc
xor
push
fs
adc
add
adc
gs
adc
cmc
add
inc
push
data16
adc
test
pop
cmps
sbb
jne
ja
jns
jp
jl
jle
add
cs
add
mov
jmp
dec
cmp
and
mov
mov
in
add
test
jo
scas
inc
dec
lock
add
rcr
lock
icebp
icebp
dec
test
add
add
add
mov
lock
shr
out
inc
adc
inc
xchg
jmp
jg
and
inc
aam
rol
test
add
xchg
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
popf
sahf
lahf
add
movs
cmps
cmps
add
lods
scas
scas
add
mov
mov
mov
mov
rol
(bad)
(bad)
add
leave
retf
int
iret
add
rcl
rcl
aad
xlat
add
(bad)
fcmovnu
fstp
fild
loopne
loop
in
out
add
jmp
out
out
add
icebp
repnz
cmc
div
pop
clc
stc
cli
sti
cld
outs
and
das
add
(bad)
shr
js
adc
repnz
std
hlt
scas
or
hlt
jae
fimul
test
add
into
cmp
aam
xchg
adc
arpl
in
and
dec
dec
inc
dec
inc
inc
mov
xor
adc
inc
add
push
inc
inc
inc
sub
cmovge
inc
fs
jns
add
and
inc
jmp
les
mov
xor
sbb
mov
add
dec
stos
push
sbb
les
inc
mov
cdq
xor
add
retf
add
add
dec
sub
(bad)
or
pushf
add
push
sbb
sbb
jb
add
popa
les
bound
fcom
sbb
fistp
aad
aad
aad
aad
aad
aad
ret
pop
cli
in
xor
push
int
popf
push
sbb
jne
ins
inc
inc
dec
mov
shl
add
push
sbb
push
cmps
inc
inc
or
aam
loopne
mov
ins
and
push
ror
aad
aad
aad
aad
adc
and
lds
add
add
add
and
add
das
fs
add
push
fld
inc
or
mov
gs
bound
add
dec
xchg
push
ins
dec
add
adc
and
push
inc
jne
addr16
popa
add
ins
or
outs
and
inc
bound
pusha
adc
and
(bad)
pop
push
es
lock
out
and
adc
imul
adc
nop
xlat
add
pop
in
popa
leave
sbb
push
mov
inc
push
push
add
and
jne
jae
dec
je
inc
out
push
inc
push
inc
jne
shl
out
and
jne
sbb
inc
(bad)
push
fadd
sbb
mov
push
add
push
jg
ins
sbb
push
and
inc
and
push
add
lock
inc
sbb
cmp
ds
inc
xor
push
daa
ror
xlat
pop
rcl
push
add
shl
out
and
and
adc
push
add
cwde
je
add
jbe
test
sbb
push
inc
test
test
add
add
aad
or
add
mov
imul
sub
and
jns
push
fs
(bad)
(bad)
add
(bad)
sub
add
and
or
push
ds
sbb
push
xchg
push
sub
add
sub
das
aam
nop
jl
inc
es
fcom
dec
movs
sbb
and
inc
mov
add
push
mov
or
push
or
fnsave
icebp
push
or
push
add
dec
cmp
xor
fs
push
sub
shl
add
sub
add
xor
(bad)
push
sub
push
hlt
ret
in
in
adc
movs
adc
cmp
shl
rol
out
sbb
std
sbb
and
inc
add
(bad)
cmc
and
adc
inc
pop
and
cmp
loopne
fistp
push
jle
inc
xor
adc
jle
dec
and
jbe
rcl
shr
inc
or
xor
aas
add
popa
inc
push
push
add
add
rcl
fmul
sbb
imul
push
icebp
fimul
aam
inc
aad
aam
inc
test
mov
jge
cs
test
dec
push
rcr
push
add
ret
xor
cmp
neg
popa
ja
adc
or
push
add
fiadd
jne
pop
pop
jb
pop
ror
iret
ror
das
pusha
push
fisttp
pop
push
cdq
rcl
or
push
ror
push
push
pop
repnz
push
or
add
das
rcl
inc
pop
add
add
pop
pop
repnz
add
push
push
repnz
test
adc
add
xor
cmp
add
adc
xor
popf
adc
sbb
and
add
jl
push
add
rol
aad
push
fild
dec
shl
inc
lods
adc
and
pop
repnz
mov
pop
call
jnp
push
or
and
lea
sbb
inc
out
add
add
cmc
mov
jmp
adc
cmp
test
sbb
test
nop
rcr
adc
or
push
js
add
mov
xlat
lahf
pop
mov
(bad)
push
push
mov
cmp
adc
popa
stos
adc
adc
shl
pop
adc
sbb
imul
dec
adc
lock
retf
scas
add
add
pop
jno
in
and
sbb
jmp
adc
sbb
jg
add
add
sub
nop
sbb
rol
sbb
mov
inc
out
and
loopne
int
sbb
rol
les
adc
add
sbb
cmps
and
ret
rol
mov
sbb
mov
xlat
or
add
add
test
ins
sub
add
ins
and
push
push
cmc
xor
sub
gs
ror
adc
xor
inc
and
add
dec
push
repnz
inc
inc
sbb
or
fiadd
sub
and
adc
rcl
or
pop
mov
rol
add
stos
shr
pop
push
push
out
dec
add
sbb
xchg
mov
cmp
or
push
cld
shl
adc
add
push
sbb
push
fimul
ins
rcr
pusha
mov
jo
push
push
loopne
add
and
lea
sahf
dec
loopne
adc
push
cdq
(bad)
(bad)
push
push
jne
out
bound
add
push
push
xchg
push
push
cmps
lds
sahf
sbb
cld
push
and
dec
add
push
inc
xchg
pop
pusha
push
out
ins
sbb
jmp
scas
pop
add
push
popa
jbe
imul
(bad)
pop
ins
outs
call
loope
dec
adc
jae
add
arpl
add
sbb
shl
mov
adc
ins
pusha
mov
inc
hlt
(bad)
push
xchg
push
lods
sub
and
mov
mov
push
add
mov
jns
ins
imul
pop
add
and
add
pop
pop
movs
dec
pop
jbe
jno
daa
push
data16
mov
or
and
add
imul
cmc
nop
dec
outs
popa
jo
jb
outs
ss
push
pop
and
dec
adc
inc
daa
test
push
es
ds
(bad)
or
add
or
add
add
dec
dec
in
and
lea
je
mov
sbb
aaa
xchg
(bad)
pop
push
push
xlat
cs
adc
adc
punpckhwd
jae
xchg
mov
jle
adc
out
push
mov
rcl
lahf
mov
xchg
(bad)
push
loop
test
push
xchg
or
jo
ds
xchg
dec
push
out
pop
imul
xor
sbb
add
gs
arpl
jo
add
push
ss
(bad)
out
aaa
dec
popa
inc
jb
sub
jae
cmc
inc
lods
aaa
int
and
aad
or
je
outs
jne
sbb
sbb
in
sub
sub
or
call
imul
nop
dec
or
pop
jecxz
mov
inc
xchg
test
imul
xor
sahf
jbe
adc
inc
imul
inc
not
imul
inc
push
bound
and
push
jae
(bad)
or
imul
lea
add
data16
push
mov
and
xchg
popa
mov
js
not
add
ror
(bad)
daa
jo
fst
sub
es
add
ja
jp
gs
ins
repnz
xchg
inc
nop
or
fadd
test
and
bound
adc
imul
pop
xor
mov
xor
xchg
loopne
adc
aaa
(bad)
adc
ja
pop
ins
adc
ja
imul
outs
or
cmp
out
push
or
jne
ins
sbb
addr16
cld
add
sub
and
cmps
adc
es
push
sub
add
cmp
push
pop
inc
sub
jb
add
mov
out
add
daa
pop
out
and
add
sar
and
or
jbe
fld
dec
ss
pop
iret
mov
jne
and
jo
jne
ins
mov
arpl
push
push
pushf
sub
sbb
test
(bad)
es
xchg
(bad)
retw
push
loope
adc
and
xchg
cmp
adc
outs
je
pop
xor
add
mov
bound
jp
imul
es
jno
jbe
add
xlat
cmc
shl
ins
add
clc
rcl
arpl
pop
je
add
scas
or
add
push
xchg
add
pop
sbb
out
inc
push
out
sub
int
dec
adc
das
js
cli
add
add
xchg
xchg
add
inc
in
mov
inc
(bad)
mov
outs
ins
mov
push
inc
sub
test
add
sub
iret
es
push
std
dec
ins
aad
int
in
sbb
adc
xchg
test
imul
addr16
sub
pop
sbb
cdq
sbb
xor
jb
cmp
and
jns
(bad)
push
je
std
add
inc
xchg
pop
rcl
adc
outs
sar
int3
je
or
and
xchg
jmp
into
push
sbb
add
popa
add
cmc
pop
pop
xchg
jo
sbb
ins
inc
stc
xchg
add
and
add
in
add
cmp
add
and
rol
dec
dec
inc
add
xor
test
add
dec
add
add
inc
dec
push
add
into
add
int
adc
mov
retf
sbb
pop
ror
inc
add
ret
(bad)
and
inc
pop
sbb
add
lds
dec
add
mov
pop
add
xor
add
hlt
rcr
add
into
and
add
sbb
int3
add
inc
and
mov
retf
and
cwde
sbb
add
bound
xor
and
pusha
sbb
and
add
and
inc
sbb
xor
inc
xor
add
push
add
sbb
dec
adc
adc
in
add
and
int
inc
push
push
add
and
retf
and
pushf
sbb
add
enter
inc
ins
sbb
add
lds
inc
add
sbb
add
ret
and
aas
shl
cs
shl
inc
shl
add
ror
int
inc
xchg
mov
movs
sbb
add
pop
add
add
add
inc
add
inc
(bad)
add
push
add
push
sbb
aad
rol
add
inc
push
add
test
rol
pop
jge
pop
inc
add
inc
sbb
loopne
inc
add
and
add
inc
add
mov
sbb
dec
aas
call
add
dec
add
sbb
test
add
int3
add
inc
sub
mov
or
pushf
mov
push
push
dec
mov
js
rcl
sbb
sbb
pop
rcl
or
sbb
adc
add
or
sub
adc
adc
sbb
pusha
movs
sbb
out
add
in
pusha
arpl
and
lds
ds
pusha
xlat
loop
add
mov
add
push
lods
jle
nop
in
add
cmp
push
add
adc
outs
jne
ins
shr
mov
jg
add
pusha
add
pusha
and
inc
push
push
push
les
xor
add
and
cmp
pop
or
aaa
xor
xor
pop
shl
mov
pusha
push
or
add
test
add
add
or
jo
inc
add
add
and
sbb
jo
or
xchg
and
popa
push
jae
and
stos
adc
add
xor
inc
jle
xchg
add
inc
popa
and
nop
adc
daa
pop
xchg
test
adc
push
fisub
cmps
pop
sbb
or
cmp
imul
add
leave
add
daa
add
jbe
loopne
or
ficom
mov
addr16
pusha
jg
jb
inc
mov
jo
add
(bad)
dec
jbe
std
adc
lock
adc
scas
and
xchg
add
sbb
add
movs
inc
addr16
pusha
gs
shrd
mov
adc
daa
fstp
(bad)
data16
jbe
xor
add
(bad)
test
xlat
je
not
out
imul
mov
fst
add
sbb
adc
jbe
je
push
xchg
adc
add
int3
mov
xchg
aam
push
xor
add
push
inc
inc
cmps
cmp
push
push
lock
cmps
add
ficom
fmul
shl
sar
repz
cmp
mov
mov
shr
rcr
rcr
xor
dec
add
add
sbb
mov
bswap
inc
or
add
and
add
inc
xlat
out
data16
add
jbe
sub
daa
push
les
push
mov
(bad)
es
ret
rol
push
loopne
rol
push
ret
or
aad
add
or
ret
mov
ret
rol
or
loop
add
push
loopne
or
xor
add
push
adc
add
or
loop
add
rol
adc
mov
add
xor
rcr
or
xchg
adc
adc
ds
mov
pop
inc
pop
adc
rcl
pop
js
jb
nop
xor
inc
daa
daa
bound
add
(bad)
icebp
xor
cs
cmc
gs
in
xor
xor
cmc
inc
xchg
and
mov
pop
xchg
jbe
mov
in
adc
sub
add
leave
add
add
inc
mov
stos
or
lds
dec
or
ret
add
(bad)
or
mov
add
jnp
shl
rol
or
add
add
or
iret
sbb
add
add
add
or
test
add
or
into
add
or
test
add
or
int
int3
or
test
add
fadd
add
mov
add
add
movs
or
retf
or
test
add
add
test
mov
retf
or
les
xor
add
retf
std
adc
lea
or
retf
or
add
rol
xor
or
retf
add
add
or
add
inc
les
sub
test
add
fnstcw
inc
mov
or
ret
or
inc
(bad)
fld
rol
or
aas
and
or
xor
add
mov
and
push
shl
and
pop
or
adc
lahf
sub
pop
dec
shl
xor
mov
add
(bad)
push
add
loop
xor
push
push
push
pusha
out
add
inc
add
add
add
add
daa
cmp
sbb
sub
add
rcr
adc
sub
add
push
js
jo
jo
(bad)
push
push
adc
loopne
adc
pop
adc
ds
in
push
push
mov
push
xchg
mov
bound
or
push
out
and
gs
pusha
(bad)
jne
bsf
lock
pop
inc
loope
adc
push
or
xor
lock
and
pop
inc
loop
sub
je
dec
lock
ror
fdivr
add
inc
xor
shl
shr
fiadd
arpl
xor
push
and
cmp
ds
fld
push
jb
adc
add
sbb
adc
add
int3
jmp
les
inc
add
or
int
fmul
into
add
or
rol
jo
add
fstp
inc
add
or
and
sub
inc
ret
xchg
cld
sbb
jo
dec
or
and
xor
rol
test
dec
sbb
push
int
add
mov
add
xchg
or
retf
cmp
xor
sbb
xor
add
and
pusha
push
add
push
ret
(bad)
les
or
int3
add
scas
lods
push
jbe
add
adc
out
lods
xrelease
jb
shl
push
int
add
inc
add
add
add
jno
lods
adc
add
lds
lea
retf
add
or
into
add
fld
or
add
rol
or
or
xchg
popf
add
scas
inc
leave
and
lock
inc
push
loopne
in
or
and
cmp
(bad)
push
jl
push
out
mov
adc
inc
adc
or
and
inc
leave
test
icebp
inc
retf
sub
pop
sub
adc
add
add
add
cli
sub
das
rcr
jmp
mov
push
into
dec
rol
dec
or
push
fxch
sbb
leave
sahf
add
dec
enter
or
je
call
mov
push
das
rcr
enter
cmp
into
add
cld
outs
mov
add
rcr
add
loope
or
aad
inc
ret
xor
rol
leave
sbb
adc
pushf
inc
(bad)
add
test
add
rcr
ror
ins
pop
or
adc
pop
lds
out
std
repnz
imul
fisttp
add
sbb
mov
jl
push
frstor
push
aam
pop
dec
fcom
mov
or
fist
fmul
adc
add
adc
add
add
add
sbb
leave
lahf
lods
add
or
dec
enter
add
cmp
das
rcr
mov
add
lds
ins
or
jp
add
xlat
lods
adc
sahf
jl
leave
ins
(bad)
add
or
mov
or
mov
inc
fst
pop
inc
into
add
or
shl
add
sbb
pop
and
mov
aam
icebp
add
xor
push
hlt
pushf
rol
(bad)
(bad)
bswap
pop
add
outs
mov
fadd
push
ror
mov
into
fs
adc
mov
adc
inc
mov
add
add
inc
add
cmp
das
dec
add
ficom
add
loopne
add
or
jmp
add
pop
or
adc
lock
add
or
xchg
dec
(bad)
sbb
add
sub
sbb
adc
adc
pushf
inc
cdq
fstp
dec
fiadd
add
fistp
pop
rcr
icebp
add
xchg
call
ret
adc
dec
add
sbb
rcr
das
ror
outs
add
cmp
inc
cmp
cmp
add
std
adc
rcl
das
rol
into
or
loope
push
lods
rol
jmp
add
fld
ins
inc
retf
or
rcl
cmp
(bad)
inc
(bad)
dec
xchg
add
or
dec
fmul
add
fild
enter
scas
mov
fst
add
add
inc
into
add
add
sahf
add
sub
mov
fdivr
add
adc
cmp
int3
int3
add
fsubr
adc
adc
sub
mov
mov
push
push
add
(bad)
(bad)
(bad)
adc
mov
std
lock
sub
add
add
adc
in
int
add
repz
add
dec
cmp
enter
and
and
in
pop
mov
movs
in
aam
add
add
pushf
inc
iret
add
out
and
rcr
into
xor
sahf
mov
in
(bad)
(bad)
or
rcl
sbb
leave
push
mov
mov
dec
lea
jmp
cmp
add
sub
and
add
(bad)
dec
xchg
jl
adc
leave
test
sub
cwde
jl
lock
jl
enter
leave
into
fiadd
adc
mov
jl
sub
mov
mov
jmp
lock
sub
jl
int
aaa
mov
jne
inc
sub
arpl
fsub
rol
outs
jo
int3
test
iret
mov
pushf
dec
fstp
cld
iret
mov
into
test
nop
fistp
iret
adc
push
outs
shl
les
sub
fldcw
add
cmps
les
fnstsw
push
repnz
mov
pop
fldcw
fnsave
shl
pop
lahf
rol
add
cmp
cmp
mov
adc
ret
add
add
pop
outs
mov
retf
or
ror
mov
int
sbb
ror
out
stc
mov
mov
push
add
ja
or
ret
lea
sub
adc
sbb
seto
or
jg
pop
sub
ret
mov
mov
add
inc
add
or
adc
icebp
add
inc
add
add
outs
pop
nop
add
jl
jle
out
adc
add
in
adc
loope
nop
dec
dec
das
std
repz
data16
rcr
jg
nop
ret
mov
jl
pop
xlat
cmp
ror
xlat
cdq
jge
xlat
mov
jmp
sub
adc
push
mov
paddd
sar
sar
in
push
movs
cmc
cmp
lods
adc
rcr
pusha
jecxz
inc
in
push
sub
adc
push
dec
sbb
int3
movq
or
push
das
or
out
das
add
dec
xchg
dec
dec
dec
inc
sbb
in
test
add
cmp
dec
add
into
push
add
fmul
(bad)
cmp
ror
add
add
inc
outs
jmp
inc
in
sbb
xchg
jno
add
and
in
adc
or
adc
inc
push
xor
adc
inc
sbb
add
aad
(bad)
aad
mov
and
movs
xchg
add
aad
xor
in
mov
or
or
sbb
outs
idiv
and
adc
dec
rcl
rcl
ror
add
adc
fstp
mov
lods
xor
lods
fild
iret
mov
clc
lods
iret
xor
sub
jp
lods
(bad)
outs
xor
sbb
or
nop
dec
sar
aad
mov
add
adc
adc
aad
sub
ficomp
sbb
lods
iret
adc
fild
mov
fbld
lods
fcomip
add
jp
lods
fbstp
lods
ffreep
push
addr16
loopne
xchg
pushf
add
or
and
dec
add
das
mov
add
dec
or
jno
fadd
loope
adc
add
add
mov
add
pusha
fdivr
test
mov
scas
pop
push
pop
push
pop
in
fist
adc
cli
or
int
ss
into
push
rcr
fld
adc
iret
add
popf
sar
jge
arpl
stos
outs
das
ret
iret
pusha
fcomp
mov
cli
or
mov
sbb
inc
push
sbb
in
xor
mov
inc
jp
dec
loop
aam
ret
push
mov
arpl
fisubr
adc
ffree
mov
not
sub
or
adc
rcl
dec
in
test
dec
ret
sbb
daa
xchg
out
add
and
(bad)
add
adc
fcmovbe
arpl
rol
and
add
lock
dec
or
shl
leave
or
mov
add
add
in
adc
int
or
push
mov
and
fild
iret
loopne
push
add
std
cdq
imul
pushf
dec
add
push
test
jo
or
pop
in
inc
ficom
rcr
lds
adc
lods
iret
lock
add
jnp
rcl
ret
test
push
shr
mov
dec
in
aam
iret
add
sub
inc
fild
fbld
(bad)
dec
cld
or
int3
adc
add
add
jo
inc
les
sbb
aas
inc
or
dec
inc
cld
dec
inc
add
stos
sbb
rol
(bad)
push
pop
or
dec
lods
les
aam
lahf
add
(bad)
out
or
inc
cs
inc
push
mov
bnd
in
or
addr16
add
or
mov
jne
jne
repz
xchg
aas
popa
push
add
add
xchg
add
push
or
or
lds
dec
or
enter
or
loope
sub
sub
inc
push
mov
fsub
dec
shl
push
and
push
aas
shl
push
cmp
retf
xchg
dec
out
cmc
data16
repz
push
fidiv
loope
pop
inc
jp
and
jbe
out
or
xor
cmp
sub
xor
bound
push
cs
add
and
popa
jne
jmp
push
jmp
fmul
inc
in
pcmpeqw
ins
ja
jb
sub
dec
add
and
dec
and
push
dec
inc
dec
push
push
and
(bad)
frstor
gs
inc
and
pop
add
push
in
leave
xor
add
lea
(bad)
push
scas
push
add
dec
fwait
retf
xchg
out
or
xor
sbb
fist
push
pop
leave
adc
icebp
jle
icebp
out
jns
mov
adc
icebp
adc
loope
adc
addr16
adc
icebp
iret
adc
rol
rcl
adc
ins
aad
rcr
sbb
cmc
or
add
mov
adc
iret
adc
mov
sbb
adc
cmp
xchg
int3
and
inc
(bad)
out
shl
(bad)
icebp
fild
xchg
aad
and
sbb
icebp
aad
loope
sbb
sbb
mov
rcr
shl
rcr
(bad)
rcr
jmp
mov
adc
mov
jl
dec
adc
pop
test
mov
inc
pop
push
adc
mov
or
push
mov
inc
into
jl
int
sbb
enter
push
mov
sbb
inc
add
outs
add
sub
loope
(bad)
add
cmc
push
jl
ror
mov
add
sbb
aad
call
add
push
add
inc
rol
or
inc
rol
ror
rol
or
test
add
or
int
int3
or
test
add
or
int3
add
mov
add
add
mov
mov
inc
enter
inc
mov
mov
or
les
inc
or
(bad)
cmp
ret
or
(bad)
or
or
shr
ror
in
shr
int3
add
nop
or
mov
retf
or
les
inc
or
mov
add
and
mov
add
add
scas
out
stos
or
inc
int
enter
int
mov
or
leave
add
or
mov
add
add
and
rcr
leave
pcmpeqd
add
outs
outs
hlt
out
pop
add
sahf
push
add
pusha
lods
sbb
fwait
stc
adc
in
add
iret
mov
cmc
stc
push
adc
jg
or
jg
out
lock
ins
lock
lock
adc
inc
sub
lods
fstp
add
adc
movs
ret
es
daa
cwde
cld
leave
add
add
retf
sbb
mov
shl
sub
inc
mov
pop
adc
inc
mov
lock
cs
xor
push
cs
mov
pusha
sub
and
and
pop
add
and
pop
fisubr
pop
fwait
adc
in
or
inc
jle
mov
adc
sbb
push
push
jae
(bad)
cmp
daa
pop
and
lock
sub
rol
into
out
or
add
or
retf
add
jl
add
inc
or
ret
add
inc
rol
or
fistp
or
int
enter
add
or
enter
rol
lods
lods
rol
and
rol
int3
aad
or
add
or
int
mov
mov
js
shl
add
add
inc
sahf
cli
loope
adc
or
(bad)
and
ss
gs
lock
inc
into
or
enter
pop
push
stos
daa
aas
sti
popf
or
and
shl
push
and
or
push
clc
bt
add
(bad)
stc
inc
xor
pop
push
mov
aas
push
inc
daa
es
and
test
pcmpeqd
inc
js
mov
dec
adc
ss
push
inc
addr16
lea
imul
push
aad
adc
div
inc
aaa
push
pop
(bad)
sbb
int3
aas
fistp
adc
data16
call
push
aas
and
sti
add
push
mov
pop
add
xchg
adc
add
push
adc
rcr
outs
nop
cmp
rcl
pop
or
repz
mov
xlat
adc
fst
ins
jmp
add
outs
je
cmp
bound
retf
add
mov
push
push
aam
scas
xor
fisubr
mov
aam
lods
add
sub
push
add
mov
or
aad
xlat
add
mov
jo
lock
icebp
or
fs
jae
lock
std
and
inc
add
jo
add
or
or
jb
mov
adc
add
add
pop
add
xchg
loopne
fld
add
enter
push
inc
test
out
add
fdivp
mov
adc
and
sub
imul
fisttp
add
lds
mov
mov
clc
mov
jmp
add
add
adc
add
aad
sub
mov
rol
inc
pop
loopne
push
sub
push
add
add
loop
add
adc
mov
bound
fild
adc
mov
aad
and
fs
add
xchg
add
shr
loopne
fcom
aam
inc
lds
test
retf
add
cmp
movs
add
cmps
push
pop
mov
aas
xchg
adc
mov
add
cmp
aam
add
add
in
jo
xor
add
push
adc
add
data16
add
loopne
and
jo
pusha
or
mov
and
or
(bad)
shl
adc
push
add
mov
test
retf
add
jle
mov
cmps
add
mul
add
pop
pop
push
fsub
nop
push
push
jo
add
rol
add
stos
fimul
pusha
pop
inc
nop
fldenv
(bad)
or
mov
loop
pusha
pop
push
loopne
inc
sub
add
(bad)
adc
add
cmp
jae
std
add
cmp
ins
aad
cdq
mov
add
test
add
adc
mov
jl
push
jge
aad
and
and
xor
jb
jle
imul
sub
pop
ja
and
ja
sub
loop
lock
and
push
add
push
mov
pop
push
inc
add
fisubr
dec
ins
mov
lahf
or
mov
add
add
add
std
add
add
popf
push
test
js
pushf
sbb
lods
add
mov
mov
sub
out
add
jg
jbe
or
push
dec
add
add
rcr
add
aas
add
or
and
or
add
nop
push
inc
add
or
add
stos
adc
and
rol
pop
ins
cmps
add
push
imul
sub
aam
mov
jnp
inc
(bad)
dec
pop
dec
aad
test
fs
ret
in
sbb
push
jae
or
sub
add
fisubr
push
pop
add
add
stos
clc
aam
ret
pop
adc
push
adc
fld
nop
repz
rcl
jmp
inc
stos
test
icebp
add
sbb
inc
js
add
ret
in
add
cmp
fld
jno
fld
push
int
push
add
mov
pusha
push
inc
or
add
mov
push
cwde
inc
or
xor
aam
mov
adc
fisub
xchg
lea
movs
push
daa
lds
mov
push
lock
add
jno
or
pushf
mov
sbb
popa
push
lock
push
rol
sbb
and
sbb
aad
pusha
add
inc
mov
dec
xor
inc
mov
fldenv
lock
ror
jp
sub
sub
push
das
push
add
fcomp
rcl
rcr
nop
inc
push
rol
pop
or
sub
mov
add
pop
int
xlat
adc
mov
shl
fisttp
mov
jmp
add
mov
jl
cmp
rcr
cmp
fistp
add
rcl
and
or
jo
sub
push
xor
and
pop
cli
int
or
add
and
cmps
fidiv
or
enter
in
or
inc
icebp
fmul
inc
or
clc
push
loop
mov
leave
push
jo
inc
push
aad
rol
adc
add
cmc
add
add
int3
and
jne
cld
dec
inc
push
repz
add
add
dec
add
jne
movs
push
add
aam
enter
adc
cmp
push
xor
mov
xor
es
cmps
ficomp
(bad)
jo
sbb
pop
fisttp
sar
push
mov
sbb
loop
loopne
bound
dec
push
mov
add
pop
jnp
add
mov
or
add
test
or
push
push
dec
and
mov
add
loopne
imul
add
repz
pop
sub
loope
push
jp
push
jne
add
add
out
cmp
add
adc
adc
jbe
add
inc
add
lods
add
pop
add
mov
inc
in
outs
push
in
cmp
fimul
pavgb
push
mov
add
xlat
lods
add
or
xor
loopne
adc
dec
add
in
arpl
cmp
pop
nop
push
popf
add
pusha
movs
add
add
popf
add
add
adc
pop
xchg
inc
push
sub
mov
mov
or
add
into
or
ficomp
aaa
in
or
and
mov
add
add
or
lock
add
stos
mov
sub
jge
inc
mov
test
mov
pavgb
cmps
add
add
mov
add
rol
loopne
lock
push
lods
add
add
dec
inc
retf
add
add
in
inc
and
cs
pusha
push
add
add
or
fld
das
lods
mov
or
add
pusha
ins
and
adc
inc
adc
rcr
push
push
rol
ins
add
cmc
add
push
inc
inc
aad
push
pop
sub
stc
add
icebp
push
or
and
and
das
sbb
add
add
add
dec
sub
add
mov
or
add
push
sub
js
add
inc
add
int3
outs
mov
clc
add
push
iret
int
ret
and
mov
movs
mov
int
sbb
inc
add
add
lock
cmp
movs
call
adc
adc
mov
xchg
mov
aam
cmpxchg
and
push
pop
mov
and
pusha
dec
or
push
lea
dec
ret
into
mov
in
and
cmp
and
lock
or
and
movs
mov
adc
mov
pop
stc
xor
xor
add
mov
inc
xor
inc
push
and
dec
iret
mov
lock
shl
xor
or
int
dec
mov
push
or
or
and
push
mov
jg
adc
xchg
add
and
mov
and
shl
and
push
lea
ror
jno
dec
pop
xor
pop
pop
xchg
fs
add
popa
xor
or
adc
pop
dec
inc
mov
push
xor
push
int3
and
and
cmp
enter
and
bound
mov
mov
and
add
or
mov
or
mov
mov
mov
pusha
mov
and
push
sub
add
and
or
lods
mov
adc
or
pusha
adc
mov
pusha
mov
add
adc
or
add
mov
mov
xchg
scas
xor
adc
push
add
mov
adc
cmp
adc
jbe
adc
adc
xchg
es
add
and
inc
bound
ss
bound
and
inc
bound
and
jmp
sub
add
or
dec
bound
and
dec
(bad)
stc
and
pop
sahf
inc
xor
xchg
call
xor
call
and
call
les
and
or
or
sbb
cmp
cmp
adc
or
jae
or
leave
xor
mov
cdq
xchg
ret
repz
and
or
add
jnp
ins
inc
imul
int3
push
leave
add
jp
movs
retf
mov
pop
lods
add
lea
adc
dec
adc
push
add
pop
sar
or
stc
inc
pop
add
xor
dec
xchg
push
shl
jge
push
test
out
jge
push
loope
iret
sub
fnsave
lods
cmc
shr
loopne
add
je
push
pop
mov
sbb
mov
adc
(bad)
mov
cmp
add
inc
adc
ficomp
mov
sbb
sub
adc
and
or
xchg
add
and
adc
push
and
add
and
add
sub
cmp
aad
and
scas
rol
add
cdq
add
es
xor
pusha
dec
arpl
adc
and
add
mov
mov
(bad)
mov
mov
add
pop
inc
xor
xchg
add
pop
popf
inc
ins
inc
pop
pop
out
cld
cmc
mov
or
int3
rcl
add
shl
adc
inc
mov
and
sub
add
inc
inc
xchg
or
and
push
jbe
js
fbstp
add
fild
dec
xor
sar
punpckhwd
add
pop
xchg
or
add
pop
dec
gs
mov
je
lahf
(bad)
enter
cmps
xchg
dec
sbb
iret
rcl
sbb
jg
aam
movs
push
xchg
ins
repz
xor
movs
fldenv
pop
repnz
pop
xchg
pop
loopne
je
cdq
inc
xchg
retf
mov
xor
dec
das
xor
pop
push
lahf
rcr
and
(bad)
mov
pop
sbb
fisttp
mov
leave
adc
into
cwde
jno
loop
xchg
add
pop
inc
add
pusha
push
add
jle
adc
mov
inc
sub
adc
jge
add
loop
pusha
or
cmps
add
ins
or
or
sub
cmps
add
test
xor
and
push
add
bound
add
mov
or
sub
adc
mov
add
lahf
jns
push
nop
or
push
sub
leave
mov
inc
push
cld
and
or
loop
and
inc
push
push
and
clc
add
enter
clc
add
mov
pop
nop
mov
add
mov
xchg
push
js
imul
or
xor
sbb
in
add
add
mov
mov
xchg
or
mov
or
adc
inc
out
and
add
mov
inc
jno
test
clc
add
mov
add
or
pusha
in
js
jno
or
mov
(bad)
clc
add
movs
fst
cmp
movs
fiadd
inc
inc
mov
adc
and
pop
add
add
add
stos
xchg
mov
and
sub
clc
add
clc
add
xchg
mov
jae
push
adc
(bad)
rcl
jb
fimul
push
adc
loop
add
push
pop
sbb
add
xchg
add
daa
pusha
stos
adc
dec
push
test
cld
xor
adc
sub
add
adc
add
push
xor
loopne
popa
jo
cmp
(bad)
(bad)
adc
unpcklps
daa
cmp
push
and
add
sub
bound
and
and
pusha
icebp
adc
add
xor
or
les
jo
das
loope
jb
rcl
inc
cs
loop
mov
das
imul
mov
jp
add
shl
add
bound
pushf
push
dec
popa
loopne
repz
adc
lods
add
out
push
xor
or
sbb
push
cmp
xchg
cmps
sub
add
adc
mov
dec
adc
inc
dec
outs
sbb
pop
daa
sub
es
and
sub
xchg
pop
adc
and
add
les
pop
js
add
lods
add
pop
mov
jmp
push
popa
adc
mov
and
push
and
daa
cs
gs
adc
dec
fadd
sbb
es
push
and
and
pop
ins
push
xchg
push
dec
loope
xor
lds
and
jno
bound
add
sbb
inc
pop
or
push
imul
adc
push
adc
cmp
aas
adc
jb
lds
mov
push
sbb
outs
je
mov
and
pop
and
mov
jl
lods
mov
cmp
push
mov
adc
pop
mov
adc
push
adc
int
les
sbb
xchg
jns
jno
aas
jno
fwait
and
cmc
jo
cmc
sbb
jo
or
xor
adc
sub
mov
push
and
cs
push
adc
pusha
xchg
push
mov
(bad)
ins
push
inc
add
push
inc
mov
xchg
out
inc
add
inc
loopne
jae
and
pushf
and
add
or
push
sub
xor
add
adc
rcl
mov
push
adc
mov
inc
add
add
test
xor
dec
fild
jb
ror
shl
iret
fstp
sbb
aad
cli
xchg
push
sbb
dec
aam
dec
in
mov
ins
xor
es
jbe
gs
jne
inc
cmp
sub
push
aas
add
dec
outs
sbb
fwait
sub
scas
mov
adc
call
scas
sbb
jg
adc
cmp
xor
mov
push
cwde
mov
dec
and
cdq
stos
cmps
dec
push
movs
and
mov
xchg
jae
jno
sbb
cmp
icebp
sub
sahf
call
aad
or
xor
and
aad
and
dec
adc
jg
jg
imul
ret
stos
jbe
xchg
push
jo
std
pop
fiadd
push
rcr
je
pop
and
retf
popa
or
into
dec
pop
fld
or
push
push
cmp
jnp
jo
cwde
add
xchg
shl
mov
mov
pushf
sub
dec
pop
adc
test
add
lock
sbb
or
inc
jne
in
pusha
(bad)
(bad)
dec
ja
jp
sahf
cmp
jp
cmc
xchg
cmp
call
cmp
mov
or
retf
mov
sahf
ss
loope
cmp
cmp
push
sti
cmp
scas
loopne
gs
fsubr
mov
daa
bsf
rcl
int
jecxz
aad
jle
cmp
xchg
add
pop
sub
inc
mov
cmc
mov
or
pop
stc
call
cmp
nop
or
or
and
mov
test
mov
out
inc
mov
movs
xor
jmp
outs
movs
inc
das
cld
aaa
jnp
gs
jmp
lods
fisubr
stos
sbb
mov
inc
aaa
cmp
and
daa
call
sbb
cmp
push
sbb
add
in
imul
mov
das
xchg
leave
test
repnz
pop
mov
mov
movs
mov
test
jmp
push
jo
xor
mov
clc
ins
test
jnp
jl
mov
sub
jne
jne
(bad)
jns
xchg
je
push
xchg
fidiv
mov
cmp
out
jle
arpl
cmp
stc
xor
jo
cmp
pop
test
js
cmp
inc
(bad)
sbb
inc
pop
enter
cli
fwait
jmp
push
inc
xor
push
mov
pop
cmps
js
sub
call
mov
fs
shl
popa
arpl
mov
mov
cli
js
xor
xchg
pop
loope
test
pusha
mov
fst
out
sbb
dec
mov
popa
mov
dec
jmp
pop
push
dec
mov
push
add
inc
ret
movs
xor
test
enter
outs
shr
jle
xchg
icebp
outs
mov
cmp
out
out
cmp
ins
bound
test
mov
mov
rcr
push
xchg
retf
js
mov
ficom
sub
mov
sub
out
adc
loopne
loope
push
mov
mov
loope
jg
test
xor
sub
cli
out
cmp
mov
sar
fwait
jnp
and
jbe
fnstenv
pop
mov
mov
push
sub
aas
cld
mov
retfw
push
(bad)
in
dec
push
jle
jo
pusha
cmps
xor
sahf
or
adc
cmp
cwde
add
fidiv
mov
(bad)
adc
into
inc
in
xchg
retf
fucomi
adc
inc
mov
mov
xchg
in
aas
jne
iret
pop
popf
dec
xchg
fld
je
ins
les
cdq
mov
mov
ds
cdq
hlt
sbb
fst
in
sbb
es
and
inc
xchg
mov
retf
cmp
bound
xchg
les
xchg
mov
retf
mov
mov
push
mov
std
mov
mov
aad
movhps
test
xor
sahf
test
mov
pop
stos
jmp
add
xor
pop
dec
in
leave
ins
add
ins
idiv
mov
adc
fs
out
call
jmp
popf
sar
imul
movs
xchg
cmp
sbb
(bad)
sub
pmaxsw
dec
cwde
aaa
clc
dec
or
sbb
mov
sbb
inc
call
xor
push
leave
imul
xor
ret
rcr
repnz
sbb
es
xor
cmp
mov
cwde
in
aad
in
mov
push
and
scas
sub
aas
movs
mov
in
out
iret
xchg
ret
out
and
mov
sub
shl
mov
lods
push
sti
xor
ret
stos
std
add
sbb
sbb
and
out
sub
lock
pusha
mov
movs
movs
push
cwde
pop
jmp
inc
bound
sahf
xor
inc
pop
lahf
push
xlat
adc
add
in
ret
mov
dec
pop
sub
pop
or
(bad)
test
(bad)
(bad)
in
shr
lock
mov
cmp
cdq
mov
ja
(bad)
jmp
es
jbe
mov
mov
adc
sbb
xor
cmps
ins
dec
enter
jecxz
or
or
add
mov
(bad)
test
mov
xchg
scas
rcl
lea
xor
mov
(bad)
adc
or
push
jo
mov
pop
sub
mov
mov
out
and
push
mov
adc
dec
push
lahf
ds
add
out
xor
shl
xor
adc
fldenv
gs
aaa
and
ds
aas
int
std
icebp
cmps
lods
add
sub
sbb
sub
or
(bad)
leave
push
fsubr
push
bound
fcomip
sub
mov
xor
out
push
loop
mov
daa
cmp
mov
mov
std
lods
outs
jle
(bad)
mov
(bad)
out
jle
retf
popa
and
mov
outs
xchg
inc
cmps
pop
sub
sbb
imul
jl
cwde
push
aad
les
inc
inc
rcl
fdiv
imul
idiv
int
push
imul
sub
sbb
stos
sub
or
repz
dec
sub
push
inc
mov
and
test
push
loope
adc
dec
sub
out
(bad)
loopne
jecxz
retf
sub
mov
mov
push
push
adc
pop
clc
retf
inc
retf
fstp
retf
xor
sbb
lahf
rcl
pop
or
call
add
daa
xchg
add
sbb
xor
push
sbb
inc
test
push
fsub
mov
out
dec
shl
clc
adc
sbb
outs
int3
jns
cmp
popf
cmps
and
xchg
jo
push
xor
scas
or
cmp
and
int
mov
fwait
and
ins
imul
rol
sbb
outs
dec
stos
mov
inc
xor
cmp
jg
jnp
push
dec
std
or
ss
ret
ret
mov
xchg
xchg
call
inc
push
je
imul
outs
dec
js
mov
adc
or
imul
retf
adc
xchg
push
adc
fsubr
and
dec
mov
cmp
test
mov
push
fisubr
mov
or
jo
in
dec
xchg
cwde
aaa
xchg
out
xchg
mov
pop
push
push
(bad)
jg
xchg
je
mov
stos
or
jp
fdiv
pushf
imul
add
xor
or
pop
shl
mul
xchg
dec
mov
out
mov
loop
test
inc
add
xchg
mov
cmps
outs
jo
loop
adc
push
scas
jmp
inc
xchg
cmp
loop
sub
fs
and
pop
lahf
jbe
mov
nop
mov
mov
loope
ret
inc
dec
inc
mov
or
ja
sbb
not
xchg
add
xchg
int3
pop
out
(bad)
lods
or
pop
mov
add
inc
and
or
retf
out
mov
stos
xchg
cmp
mov
leave
dec
dec
push
mov
je
xchg
pop
aam
xchg
sbb
add
jo
bound
add
add
cmps
pop
add
jo
or
mov
ins
xchg
mov
add
movs
sub
xor
into
mov
or
hlt
add
dec
mov
sub
add
add
xor
xor
cmps
popa
inc
or
add
leave
gs
add
xchg
add
sub
and
push
out
mov
jnp
popf
push
add
pop
push
inc
ins
mov
bound
sub
add
cmc
sub
sbb
xor
clc
xchg
pop
movs
sub
sub
mov
sub
sub
push
add
sbb
sbb
adc
jle
inc
popf
sub
lods
(bad)
adc
aad
add
pop
and
inc
bound
and
pop
int3
xchg
inc
popa
add
cli
inc
and
popa
pop
addr16
push
xor
loope
or
and
cs
jo
adc
sbb
pop
cmp
sub
rcl
les
and
sub
rol
push
shl
or
sub
or
shl
add
mov
adc
and
sub
(bad)
ja
sub
pop
add
sbb
adc
aaa
outs
adc
das
sub
mov
jl
mov
mov
and
pop
aad
scas
and
sbb
sbb
and
xchg
pusha
xor
pop
sub
inc
add
daa
pop
pop
mov
add
inc
push
jne
scas
je
int
loop
ror
xor
out
xchg
add
aam
adc
jo
adc
aam
mov
add
sbb
xor
add
fs
and
sub
rcl
(bad)
in
sahf
and
es
mov
into
sub
and
and
add
fimul
adc
adc
jb
xor
rol
pop
inc
adc
inc
adc
cmp
pusha
test
or
adc
add
in
and
rcr
adc
popa
add
(bad)
rcr
push
dec
and
or
mov
popa
ret
mov
stos
mov
ret
pusha
mov
lds
add
cmps
push
arpl
adc
sub
pop
inc
or
and
xor
or
cwde
add
mov
mov
adc
ret
adc
cmps
xchg
sub
or
pop
push
sbb
add
and
pop
push
pshufw
ret
push
inc
rcl
inc
or
adc
mov
fbstp
stos
and
pop
mov
pop
or
and
push
push
sub
xchg
js
xchg
je
and
push
pop
cmp
jl
adc
add
aam
adc
lods
stc
repnz
cmc
adc
cmc
mov
lock
mov
add
pushf
sub
xchg
cli
inc
sbb
cmp
and
mov
dec
add
add
push
mov
adc
and
pusha
fs
push
and
dec
(bad)
dec
pusha
call
push
retf
pop
jae
xor
and
push
add
mov
add
in
mov
and
sub
add
rcr
rol
out
inc
mov
lock
pop
loopne
into
pop
mov
cs
in
(bad)
cmp
push
push
aad
adc
mov
pop
push
ins
and
add
pop
mov
push
dec
sbb
loop
add
and
inc
out
or
ret
push
fs
xor
xor
scas
push
push
and
push
outs
add
pop
xor
mov
xor
cs
stos
add
pop
xchg
and
pop
ret
ins
es
ds
pusha
rol
setnp
test
sub
and
dec
or
or
js
inc
jbe
xlat
adc
bound
sahf
inc
fstp
add
pop
sti
and
lea
and
mov
dec
push
adc
pop
mov
or
mov
adc
or
movs
cmp
push
add
dec
add
or
(bad)
fimul
pop
inc
call
add
jo
dec
mov
push
loopne
xor
punpckldq
and
add
add
pop
das
add
push
inc
add
add
sbb
ret
jg
loopne
add
aad
sub
loopne
pushf
adc
push
add
pushf
adc
mov
fst
mov
add
mov
add
clc
and
mov
or
xchg
xlat
xor
xchg
cmp
data16
push
loope
pusha
or
outs
add
sub
or
in
cmp
pusha
cmp
test
popa
or
loopne
or
pop
inc
and
add
popa
movs
pop
js
lea
jbe
in
icebp
jo
mov
add
add
inc
add
and
daa
shl
push
push
mov
and
fcom
xchg
xchg
sub
sbb
adc
loop
pusha
cmps
retf
xchg
add
imul
and
xor
ficom
adc
add
mov
xchg
pop
push
sbb
retf
add
and
xor
inc
sbb
rcr
mov
add
(bad)
dec
bound
ret
or
fstp
call
sub
pop
out
add
adc
rcl
mov
nop
xor
xchg
in
and
inc
test
shl
mov
jge
xor
mov
adc
add
adc
pusha
xor
jno
push
sub
pop
sbb
or
or
rcr
mov
ja
push
ds
and
or
dec
and
cwde
mov
sbb
mov
nop
sub
adc
xchg
inc
loopne
sub
sbb
jecxz
add
xchg
push
add
push
adc
call
lds
and
adc
sub
dec
(bad)
or
xchg
mov
fst
in
adc
or
add
xor
adc
fadd
inc
imul
popf
push
or
sub
add
ficom
rol
jno
xlat
and
or
sub
pop
jne
inc
test
xchg
sub
inc
push
dec
pop
inc
jmp
push
sbb
and
push
xchg
nop
or
add
add
xchg
jae
pusha
leave
sbb
jbe
pusha
adc
inc
inc
push
add
xchg
or
stos
sbb
push
inc
jne
scas
jl
adc
jp
or
jae
jne
push
sbb
stos
or
mov
push
shl
in
out
push
fisubr
xchg
or
add
(bad)
iret
es
and
adc
inc
retf
pop
xor
xchg
mov
add
(bad)
(bad)
pushf
xchg
pop
or
lahf
and
jno
adc
add
imul
inc
adc
and
jae
add
out
push
dec
popa
out
xor
pop
jno
adc
adc
mov
adc
xchg
xchg
push
adc
adc
mov
adc
sbb
inc
jge
pop
(bad)
add
jmp
push
test
xor
xor
add
jae
add
je
sbb
cmp
xchg
jmp
push
mov
fcmovu
push
add
push
in
add
inc
add
mov
out
sub
adc
and
add
sub
adc
and
addr16
inc
add
or
cmc
mov
test
push
aam
pop
dec
xor
sbb
pop
jle
adc
das
imul
add
mov
repz
loop
add
or
jmp
adc
loopne
inc
xchg
mov
xchg
inc
add
jbe
or
mov
and
push
xor
les
lods
inc
cmp
(bad)
mov
jmp
jno
jge
inc
pop
in
and
xchg
bound
xchg
or
mov
jecxz
push
gs
movs
not
xor
mov
loopne
xchg
or
imul
xlat
push
out
es
xchg
rol
mov
and
movs
movs
in
add
in
pop
ja
inc
loopne
fistp
add
jle
daa
push
and
sbb
xor
cld
add
mov
adc
adc
add
push
xor
inc
ret
add
or
cmc
in
and
push
jno
movs
cli
add
(bad)
and
inc
into
xchg
sbb
and
adc
rol
and
adc
sbb
sbb
adc
sbb
sbb
add
xchg
ins
daa
add
mov
js
xor
and
push
jns
(bad)
scas
rcr
adc
sub
adc
or
inc
in
(bad)
or
pushf
adc
adc
add
fidiv
and
xor
jge
add
or
dec
add
shl
sti
and
inc
and
inc
add
jns
ins
pusha
stos
outs
inc
pop
pushf
add
push
lock
add
pop
mov
xchg
and
or
and
mov
into
add
imul
adc
int
sbb
or
das
adc
popf
cmp
or
jo
dec
push
xchg
mov
or
xor
bound
inc
fs
push
sbb
xchg
xor
inc
popa
push
cmp
adc
sbb
or
push
test
inc
jae
pop
cmp
cli
inc
and
jmp
inc
cmps
and
jle
ret
inc
clc
dec
push
and
hlt
pop
add
stos
mov
xchg
sbb
(bad)
adc
jo
adc
adc
add
(bad)
adc
ror
inc
pop
in
mov
mov
mov
xor
retf
retf
in
jbe
dec
sub
or
aam
test
xor
add
cld
mov
sbb
add
sahf
xor
or
mov
cmps
pop
pusha
loopne
and
inc
(bad)
push
xor
add
in
cwde
xor
pop
push
push
lods
xchg
(bad)
adc
and
inc
xchg
loopne
sub
fidiv
shl
jge
sbb
into
and
popf
mov
sbb
fld
mov
fwait
jge
sbb
gs
or
or
jbe
xchg
and
push
stos
mov
sub
mov
sub
sub
dec
rcr
inc
or
add
adc
retw
das
sbb
sub
add
mov
cwde
add
jb
and
add
sub
sub
inc
adc
inc
mov
or
mov
adc
push
and
es
add
call
loop
mov
xchg
adc
or
loop
and
inc
fidiv
loop
ffree
push
xchg
or
jp
xchg
cmp
and
and
int
add
jnp
sbb
daa
and
xchg
adc
adc
pop
add
sbb
xor
push
push
adc
pop
adc
xchg
mov
add
int3
dec
adc
push
add
and
mov
add
and
xchg
or
add
push
dec
es
xor
inc
ins
mov
pop
aad
mov
dec
mov
ins
cmp
pop
adc
pop
pop
push
sub
mov
xchg
jmp
jo
scas
std
jno
in
adc
adc
push
adc
mov
and
and
and
retf
scas
das
push
dec
push
rol
mov
add
pop
cmp
mov
xor
pusha
and
add
lods
pusha
loope
and
xchg
mov
cdq
add
adc
mov
or
or
mov
sbb
mov
and
xchg
and
xchg
pop
push
je
jmp
or
adc
repnz
or
retf
scas
add
fmulp
movs
rcl
test
fst
movs
jmp
and
push
sahf
jmp
add
push
jmp
pop
call
shr
sahf
push
test
loop
inc
jge
mov
push
ins
and
push
ds
arpl
stos
pop
(bad)
and
pop
or
les
add
sub
add
sub
push
xchg
xchg
add
sub
sub
push
or
arpl
test
pop
xchg
sub
add
and
aas
cmps
mov
and
or
mov
or
push
add
outs
or
pop
or
add
pusha
cmp
in
dec
add
sub
pusha
dec
adc
inc
test
outs
rcl
adc
bound
push
pop
(bad)
aaa
pop
js
push
and
cmp
imul
in
cmp
jp
add
(bad)
(bad)
jmp
ins
push
bound
icebp
sub
test
mov
cdq
mov
outs
mov
mov
scas
inc
call
pop
dec
cli
mov
push
mov
add
addr16
stos
xor
mov
mov
iret
jo
push
xor
push
sub
adc
in
xor
stos
lea
(bad)
loop
mov
lds
mov
data16
cmp
jmp
fdivr
mov
fwait
or
rcl
in
rep
outs
std
sti
dec
arpl
xor
xchg
inc
in
add
cmps
pop
popa
mov
sti
arpl
scas
sub
cs
sub
into
std
add
inc
cdq
or
leave
xchg
xor
fistp
test
lock
or
imul
mov
xchg
in
in
dec
pusha
cmc
sar
xchg
scas
xchg
xchg
mov
shl
xor
push
jmp
mov
call
mov
fwait
cld
adc
mov
mov
dec
sahf
mov
xchg
jb
out
mov
scas
retf
imul
mov
mov
xchg
xchg
in
jmp
bound
mov
cmp
xor
and
lods
inc
arpl
inc
xor
sub
stos
adc
xor
xor
shl
aaa
jp
or
ins
mov
fst
in
jg
mov
js
mov
stc
xchg
outs
xor
retf
push
push
pop
cmp
int3
out
dec
cs
inc
cwde
mov
aaa
sbb
rcr
shl
sbb
mov
add
add
ret
stc
mov
cmp
jmp
fistp
pop
pop
push
fcomp
mov
push
pop
dec
je
outs
xor
pop
mov
popf
push
mov
push
xlat
inc
xor
cmps
sbb
cli
mov
jnp
push
cld
arpl
(bad)
xor
mov
add
adc
push
mov
adc
jle
sub
mov
push
div
cld
inc
add
daa
and
jne
jmp
dec
daa
xlat
data16
pop
add
outs
pop
jae
sti
sbb
lahf
push
aas
pop
ret
mov
data16
xchg
outs
push
jne
adc
lods
mov
xchg
mov
inc
sbb
mov
dec
in
push
repz
pop
and
mov
xor
adc
cmp
xor
(bad)
mov
push
dec
add
or
pop
sbb
jmp
mov
jmp
stc
mov
nop
cmp
jne
gs
out
push
pop
shr
aam
xchg
pop
fisttp
lods
adc
out
xchg
push
(bad)
push
mov
adc
aaa
mov
data16
ins
clc
xchg
out
cmp
stos
add
addr16
adc
add
(bad)
xchg
(bad)
es
aam
sbb
mov
pop
push
lock
loopne
inc
xchg
push
rcl
xlat
es
add
add
inc
outs
cmp
xchg
mov
(bad)
or
imul
dec
rcl
loop
and
pop
adc
xchg
arpl
and
add
and
(bad)
inc
es
push
adc
es
shl
nop
inc
push
rcl
xchg
and
xor
nop
add
cmc
inc
push
inc
daa
pop
lock
pop
push
aaa
(bad)
rcl
add
xchg
add
pop
fld
and
ficom
stos
ret
add
add
arpl
sub
gs
jb
jne
cmp
js
and
out
inc
(bad)
xor
inc
push
and
gs
bound
jecxz
adc
je
gs
gs
xchg
loop
mov
add
push
inc
xchg
imul
lock
and
add
add
inc
xchg
add
push
push
xor
or
jb
jo
rol
push
inc
and
push
es
aad
add
jne
data16
or
jne
jae
addr16
mov
jno
pushf
and
push
mov
(bad)
push
data16
cmp
push
ss
xor
xchg
push
pop
and
push
push
mov
out
xor
es
ret
push
push
mov
adc
jno
imul
and
cs
adc
adc
icebp
add
xchg
data16
adc
push
add
jae
jns
xchg
add
popa
outs
or
and
cs
and
sbb
and
xchg
jne
out
inc
inc
xchg
adc
xchg
add
rcl
pop
xor
xchg
not
push
xor
test
adc
add
repz
mul
xor
jb
jo
div
mov
and
xchg
xchg
sbb
and
or
sti
sbb
mov
dec
pusha
xchg
out
push
rol
push
loop
loop
and
xchg
outs
leave
adc
in
pop
rol
lock
arpl
and
xor
cs
das
mov
dec
add
test
jns
push
ins
add
pop
xchg
adc
mov
mov
or
pop
dec
and
sar
je
arpl
jne
add
pop
add
or
mov
cmp
outs
(bad)
ins
mov
sbb
cld
add
push
loopne
in
or
adc
jnp
adc
adc
adc
adc
adc
addr16
addr16
js
mov
rcr
and
jo
add
adc
mov
add
dec
sbb
ret
outs
loopne
or
and
or
pop
push
aaa
fstp
jnp
adc
lahf
adc
pop
adc
rcr
push
sbb
xchg
push
push
xchg
add
jb
or
movs
xor
sbb
(bad)
or
push
(bad)
push
sbb
adc
mov
inc
fsub
(bad)
sar
aam
(bad)
mov
sbb
xor
sbb
sbb
xor
inc
push
push
inc
mov
pop
sar
rcl
jne
add
pop
sbb
lds
aas
je
push
inc
add
dec
push
mov
sub
inc
mov
add
wrmsr
into
sbb
int3
push
rep
mov
dec
loope
push
aas
jae
and
pop
rcl
loope
dec
jo
cmp
adc
adc
lock
adc
aam
and
cmc
inc
add
pop
add
das
mov
push
add
add
lock
mov
mov
mov
or
mov
mov
mov
mov
or
mov
or
add
add
add
mov
stos
or
add
stos
mov
or
add
stos
or
mov
stos
stos
add
add
stos
or
add
mov
stos
jp
stos
mov
mov
push
jno
pop
add
inc
adc
add
dec
dec
add
push
(bad)
sbb
rol
add
add
inc
adc
jo
adc
jp
add
lahf
cli
mov
icebp
sti
add
getsec
xchg
adc
dec
ret
push
adc
dec
and
nop
inc
push
push
add
pop
add
bound
pop
and
add
adc
dec
adc
mov
lock
int3
xor
in
in
xor
mov
mov
retf
in
dec
out
add
cmc
add
rol
das
loopne
push
add
scas
sbb
dec
adc
(bad)
loope
add
imul
mov
or
ins
xor
dec
jb
add
add
div
xlat
push
and
push
(bad)
fs
add
inc
shl
add
or
mov
push
das
nop
cdq
sti
inc
inc
jecxz
adc
inc
inc
mov
ds
adc
or
adc
test
add
adc
adc
loope
push
cmps
mul
mov
retf
mov
aaa
fadd
adc
out
pop
sub
ins
sbb
mov
rcr
adc
sti
sbb
adc
cmps
or
add
out
add
adc
add
pop
inc
es
and
inc
aad
adc
or
pop
pop
cwde
loopne
xchg
add
jo
and
jns
adc
push
movs
gs
cmp
add
inc
add
popa
dec
adc
jo
jl
inc
lds
dec
jl
lds
cmp
push
add
add
inc
xchg
add
stos
out
add
loop
add
or
arpl
pusha
in
add
aaa
ins
add
and
bound
add
and
leave
adc
ss
ret
inc
adc
nop
rol
xor
and
adc
adc
add
push
add
push
adc
xchg
shl
adc
xor
loope
jo
push
or
sbb
sbb
adc
sbb
shl
adc
and
shl
lock
adc
and
sbb
or
sbb
push
or
or
or
pop
add
or
add
sbb
sbb
add
add
sbb
push
pop
or
adc
inc
jo
xor
adc
push
add
sbb
add
push
jno
jb
add
push
ins
cmovo
or
inc
sbb
and
inc
push
in
or
adc
mov
adc
add
pop
or
push
add
adc
jo
rcl
jo
sbb
and
adc
push
add
lock
push
add
add
adc
fs
inc
sbb
inc
imul
or
lock
aas
and
adc
cwde
mov
push
inc
add
xor
inc
ror
jo
add
adc
sbb
and
jo
adc
loopne
add
sbb
ror
push
add
add
add
mov
or
adc
shl
and
add
xor
add
xor
test
sub
and
adc
xor
test
or
jnp
inc
inc
add
inc
add
inc
inc
add
or
js
inc
add
inc
add
test
inc
inc
add
ret
dec
add
inc
inc
add
inc
add
or
or
int
pop
or
sbb
or
add
in
or
test
or
push
adc
inc
or
adc
pusha
add
adc
pop
adc
clc
mov
test
mov
and
xchg
adc
push
inc
fsub
push
outs
and
sbb
push
push
nop
pop
nop
scas
add
lock
rcl
sbb
sbb
rcl
xchg
push
and
jg
push
add
xor
adc
sbb
and
push
xor
add
push
(bad)
(bad)
lea
pop
adc
adc
xor
rol
fiadd
pusha
or
pusha
jo
mov
inc
add
add
adc
jl
mov
xchg
sbb
and
or
pop
push
adc
sbb
aam
add
or
add
pop
adc
or
add
and
or
fnstsw
jne
rol
add
sbb
push
sbb
add
shl
sbb
inc
or
sbb
add
in
adc
loopne
or
shl
and
adc
adc
cmc
pop
adc
add
add
pop
push
pusha
jo
pop
fxam
das
in
pop
or
adc
rol
ficom
add
add
add
add
sub
add
push
push
and
nop
out
sbb
xchg
dec
adc
inc
push
cmp
and
dec
add
rol
or
xadd
or
nop
and
shl
sub
sbb
inc
nop
sbb
and
add
inc
adc
pushf
xor
push
nop
loopne
jo
add
cmp
pop
ds
add
pusha
(bad)
dec
adc
pop
stc
adc
sbb
add
adc
adc
add
jne
adc
adc
adc
or
mov
adc
jno
push
mov
add
pop
je
sbb
and
cli
xchg
jne
add
add
loope
rcl
add
mov
xchg
or
popf
out
add
push
pop
add
out
adc
xor
and
xor
mov
dec
and
xor
inc
dec
and
loopne
xor
and
xor
ror
inc
sar
xor
adc
push
pop
dec
push
xor
adc
pusha
jo
loop
add
pop
sbb
push
rcl
adc
retf
push
push
jo
mov
push
cmps
add
cdq
syscall
sub
push
pop
mov
add
add
push
ret
or
add
push
lds
loope
push
add
or
fs
and
pop
inc
adc
nop
sbb
adc
inc
adc
and
sbb
jo
xchg
nop
xchg
in
or
or
push
add
inc
pop
adc
and
or
sbb
dec
add
add
push
mov
add
and
mov
loope
jo
add
add
jo
loopne
add
adc
adc
sbb
nop
sub
add
nop
aaa
sub
aam
adc
test
push
cmp
add
shr
call
push
sbb
das
sbb
pop
add
or
pop
xor
cdq
lea
add
add
add
adc
push
adc
loopne
add
bound
push
adc
and
mov
sbb
push
adc
add
fld
jno
movs
sbb
sbb
pop
add
and
or
jo
js
dec
add
xadd
pop
sbb
jmp
cmp
in
(bad)
or
inc
adc
jne
add
jle
mov
(bad)
add
clts
popa
mov
or
gs
jo
rcl
repnz
dec
and
loope
or
popa
and
sub
xchg
sub
lock
and
add
xor
adc
loopne
and
cmp
popf
or
push
add
lock
xlat
mov
push
fst
sbb
adc
pop
jo
mov
xor
push
test
adc
or
or
sbb
mov
inc
or
and
xchg
mov
jle
add
pop
jg
push
mov
mov
aad
and
shl
add
gs
gs
enter
pop
xor
mov
and
xchg
adc
xchg
pop
jno
rcl
add
add
add
add
xor
add
lods
push
ret
add
add
loope
push
test
add
or
and
add
push
adc
mov
adc
xchg
or
or
xor
pop
nop
mov
dec
adc
loopne
adc
and
stc
inc
sbb
push
mov
or
shr
test
push
pop
mov
repnz
add
ins
adc
lahf
add
rcl
mov
adc
adc
cli
or
fdivrp
add
adc
or
mov
mov
push
push
jle
adc
mov
push
jl
jno
ret
or
or
jge
push
pop
cmps
repnz
push
xor
movs
pop
xor
pop
ret
adc
adc
aaa
pop
sbb
add
cld
add
inc
pop
cmps
and
(bad)
cmps
or
adc
add
xor
rol
adc
cmp
icebp
das
fst
in
jno
loopne
jno
adc
add
dec
and
adc
or
add
retf
ins
add
test
adc
sbb
add
jmp
add
add
out
adc
shl
mov
xor
mov
xor
mov
push
mov
jno
adc
jbe
loopne
lds
or
lock
sar
ret
add
loopne
xor
and
add
lods
mul
push
push
push
xor
or
xor
adc
cs
jo
or
adc
and
or
add
loopne
adc
xor
inc
add
add
adc
or
pushf
aam
ja
mov
and
sbb
add
or
adc
mov
inc
add
mov
js
sbb
and
or
or
jl
xchg
loopne
xchg
push
and
push
sbb
add
add
mov
adc
add
dec
or
popa
jl
cmp
push
(bad)
sbb
fiadd
adc
jo
rcl
pusha
add
repz
nop
ds
cmps
or
xlat
mov
ror
rol
mov
inc
inc
inc
inc
inc
add
aaa
ss
inc
sub
cmp
sub
aaa
sub
cmp
xor
inc
and
add
add
add
movs
lea
int3
add
add
outs
fs
or
add
adc
stos
mov
add
inc
inc
adc
and
and
jbe
nop
es
pop
div
xor
push
sbb
add
rol
xchg
and
add
add
outs
jb
push
push
xchg
loopne
out
pop
es
icebp
and
pop
adc
jb
loopne
adc
sbb
inc
adc
retf
adc
mov
add
sbb
popa
ret
mov
add
stos
and
mov
mov
add
icebp
je
xchg
arpl
add
sbb
scas
inc
pop
sbb
add
inc
add
sub
add
or
push
xor
rol
add
imul
popa
add
mov
push
mov
adc
xor
(bad)
or
or
(bad)
adc
mov
push
and
pop
add
pop
add
or
sbb
and
adc
mov
adc
add
aam
sub
fadd
loope
push
stos
add
nop
adc
adc
pusha
loopne
or
push
add
or
mov
or
sbb
ret
or
out
adc
xor
or
and
add
das
push
xor
adc
and
test
(bad)
test
add
adc
mov
xor
add
test
rcr
push
cmp
popf
sti
nop
push
nop
pop
sbb
aas
push
and
lahf
xor
xor
adc
pop
push
and
add
rcl
cmp
add
adc
pop
sub
retf
push
clc
add
jecxz
push
add
jbe
loopne
add
rcl
add
sub
popa
xchg
shl
cmp
add
sub
or
or
inc
and
adc
xor
add
add
and
adc
pop
inc
add
add
push
sbb
sbb
pop
daa
adc
inc
paddd
hlt
and
xor
pusha
not
jg
jge
rol
or
ret
add
leave
adc
pop
and
or
loope
jbe
and
jbe
arpl
push
mov
add
mov
xor
popa
add
and
xor
dec
int
aaa
push
sbb
add
mov
loope
in
add
add
jle
inc
ucomiss
or
xchg
add
pop
xchg
xor
stc
ss
clc
inc
pop
loope
xor
mov
mov
sbb
loopne
add
xor
jb
je
jb
outs
gs
sahf
ins
pusha
push
(bad)
push
test
adc
push
pop
cs
push
jo
ss
inc
add
jae
add
xchg
inc
push
pop
inc
aaa
lds
push
aaa
xchg
movs
in
xchg
dec
cmp
adc
adc
jae
pop
push
inc
(bad)
xchg
push
daa
push
ss
and
ss
es
push
xchg
xchg
inc
xchg
xlat
or
es
aaa
sbb
in
add
jo
loop
jmp
add
sub
or
sbb
rcr
outs
rep
sub
xchg
push
and
push
and
adc
or
dec
loop
nop
nop
fadd
xor
mov
and
cmp
adc
adc
add
inc
xor
rol
ficom
ficom
add
add
and
movs
sub
inc
add
adc
popa
add
sbb
add
adc
adc
sbb
adc
add
xor
sub
xor
add
adc
add
push
push
(bad)
sbb
jb
add
sbb
add
add
adc
xchg
add
or
adc
xchg
add
(bad)
add
adc
push
scas
mov
sbb
shl
or
add
mov
add
lock
add
sbb
inc
adc
adc
enter
cld
mov
movups
es
inc
es
jb
unpckhps
stos
adc
push
adc
adc
adc
icebp
adc
jl
mov
xor
pop
fcom
xchg
add
add
or
or
mov
adc
or
and
jb
pop
(bad)
cmp
ss
or
rcl
lds
adc
or
xor
sub
mov
add
adc
movs
adc
or
push
pop
inc
sub
add
cdq
or
shl
and
xchg
or
xchg
adc
or
loope
or
sub
push
mov
or
mov
pop
sbb
add
or
add
shl
pop
test
and
pop
(bad)
cmp
xor
and
and
adc
adc
adc
push
mov
mov
jb
and
jo
and
xor
add
or
push
adc
(bad)
or
mov
rol
cmp
add
inc
xchg
and
or
movups
or
and
push
push
push
lds
dec
adc
adc
xor
adc
adc
adc
push
rcl
xchg
inc
movs
enter
cmp
xchg
xor
das
stos
inc
adc
sbb
bound
rcr
jecxz
ret
xor
fmul
sbb
(bad)
rol
push
sub
sbb
jb
add
mov
dec
shl
and
sbb
xor
add
pop
mov
inc
add
adc
rol
mov
inc
adc
shr
add
aam
add
and
adc
nop
inc
push
mov
cld
mov
or
inc
mov
pusha
inc
movups
sbb
jb
(bad)
sub
or
sbb
cmp
in
push
sub
pushf
adc
ror
inc
push
and
loopne
xchg
(bad)
icebp
fistp
shl
or
jecxz
and
and
xlat
add
pusha
loope
add
push
adc
adc
mov
jb
or
adc
and
sbb
push
push
adc
and
les
pushf
pop
xchg
cld
cld
push
add
and
mov
rcl
sbb
bound
arpl
push
sbb
jb
or
or
movs
adc
or
sub
mov
lds
or
nop
cmc
xchg
and
push
adc
mov
or
add
and
and
or
add
rol
icebp
xor
xchg
add
sub
(bad)
or
inc
pop
sbb
movs
and
push
sub
push
pop
and
push
add
xchg
adc
push
adc
adc
xor
inc
mov
add
or
mov
dec
adc
add
test
bound
or
and
and
and
xchg
add
cmp
adc
add
imul
sbb
rol
mov
ror
adc
adc
ds
cmp
and
inc
and
or
pop
xor
push
push
mov
adc
and
and
push
cmc
push
or
add
add
add
adc
adc
shl
add
sbb
bound
mov
adc
adc
adc
or
or
lods
test
add
sub
loope
add
mov
jl
add
pop
add
sldt
or
repnz
push
and
add
push
mov
adc
xor
mov
or
js
loopne
mov
inc
add
inc
add
sub
mov
popa
add
inc
add
adc
mov
cwde
add
or
lea
mov
sbb
bound
fldcw
loop
add
icebp
sbb
adc
jle
inc
adc
adc
loop
inc
icebp
adc
pop
add
pop
popa
and
rcr
or
or
lds
or
inc
add
adc
adc
and
add
adc
inc
xchg
adc
sub
sahf
or
and
and
jo
xchg
add
add
inc
or
mov
push
pop
push
add
or
push
sbb
jb
push
lahf
pop
mov
push
movs
add
stc
in
xor
and
and
add
mov
add
test
dec
and
bound
cdq
push
sbb
bound
lds
adc
inc
inc
test
shr
adc
and
ins
and
dec
mov
inc
arpl
adc
nop
popa
push
add
or
adc
cmp
and
or
and
jp
out
sbb
jne
xor
push
adc
add
ret
rcl
and
add
sbb
add
add
pop
adc
shr
stos
and
int
sub
sbb
into
adc
and
js
push
xor
pusha
fcom
add
mov
inc
adc
add
adc
stos
and
pusha
and
or
adc
call
adc
adc
or
jo
or
or
and
aam
and
adc
jb
or
retf
add
xlat
or
adc
adc
xor
mov
mov
add
xchg
adc
fiadd
add
sbb
bound
int
loopne
and
dec
adc
ret
pop
lods
pushf
push
add
mov
sbb
bound
adc
or
add
add
and
and
pushf
stos
dec
or
or
mov
inc
and
cs
into
adc
inc
or
adc
pop
adc
add
pop
adc
push
adc
add
push
adc
pop
adc
adc
fwait
sub
and
adc
or
pusha
and
or
(bad)
aad
ror
mov
inc
aam
cmp
into
add
and
pop
adc
adc
add
stc
xor
(bad)
add
sub
dec
push
inc
adc
and
inc
bound
dec
xchg
jb
sbb
jb
add
adc
jno
add
or
push
icebp
mov
jp
adc
push
push
sbb
adc
enter
adc
xor
push
les
and
and
add
adc
xor
ret
sbb
scas
ror
and
add
adc
xor
push
lock
push
and
adc
and
loopne
sbb
and
adc
add
je
pop
or
and
dec
xor
aaa
jo
and
or
test
pop
sbb
jb
and
clc
jo
test
stos
and
mov
adc
movs
xchg
dec
ret
mov
pop
or
sbb
pop
inc
push
movups
outs
nop
sbb
loopne
xor
and
and
and
add
and
fcomp
jo
stc
push
adc
inc
inc
popf
or
adc
push
sbb
and
shl
sbb
mov
pop
sbb
adc
pop
adc
push
add
add
ror
adc
(bad)
jle
add
ror
inc
inc
sbb
ret
and
loope
adc
adc
mov
xchg
inc
test
fnsave
xor
inc
adc
add
sub
cmp
adc
push
mov
jle
adc
std
add
add
dec
add
stc
pop
push
les
ret
loopne
adc
test
das
lock
push
and
mov
xchg
adc
sbb
inc
pop
and
test
or
adc
adc
mov
jl
adc
add
add
inc
loope
add
and
inc
and
jo
popa
lahf
add
adc
pop
in
add
adc
adc
inc
push
or
pop
dec
add
push
and
add
mov
daa
adc
add
or
adc
add
inc
adc
add
cmp
and
adc
push
add
pop
adc
pop
pusha
rcl
and
adc
and
sub
or
pop
sub
push
inc
rcl
inc
xor
repnz
adc
adc
ret
or
add
sub
add
xchg
and
and
jb
nop
das
mov
or
inc
adc
add
adc
ror
add
adc
out
(bad)
add
sub
hlt
jo
pushf
sbb
lock
ror
or
adc
add
bound
ins
xchg
test
in
add
sub
add
xor
or
fsub
mov
and
xchg
adc
push
aam
popa
add
or
xchg
add
shl
and
vpinsrb
ror
add
popf
and
add
fist
sar
and
mov
adc
popa
push
add
sub
mov
clc
bound
stos
dec
or
or
dec
mov
rcr
pushf
adc
add
and
add
add
jbe
test
and
adc
add
ror
mov
mov
and
push
test
mov
das
add
and
xchg
or
mov
adc
mov
adc
and
inc
add
push
adc
push
lock
adc
add
add
add
pop
add
les
and
push
pusha
push
rol
mov
or
or
add
adc
xor
sbb
jb
or
add
dec
cmp
xchg
nop
xchg
sub
add
add
cmp
inc
add
or
fist
or
push
add
adc
loope
out
add
adc
mov
sbb
iret
add
or
adc
rcl
sar
imul
inc
push
push
pop
add
imul
push
data16
add
fisub
adc
or
adc
aas
sbb
jb
add
or
mov
add
push
adc
adc
adc
mov
loopne
add
add
lea
not
xchg
mov
dec
pusha
jb
sub
or
bound
mov
std
or
add
sub
sbb
popf
add
fistp
pusha
(bad)
xor
inc
add
outs
add
xor
xor
push
sbb
adc
sbb
push
arpl
add
push
nop
retf
adc
and
sbb
scas
mov
pop
adc
ret
adc
add
push
xchg
ror
mov
push
gs
loop
fimul
es
xor
add
dec
sbb
icebp
push
xor
mov
jl
adc
and
mov
push
push
sub
add
add
mov
adc
xchg
and
add
out
sub
fcmovbe
test
and
sub
cmc
adc
dec
loope
add
inc
ins
popf
aad
xchg
lods
dec
or
add
xchg
inc
push
sub
push
sub
je
add
sbb
adc
(bad)
int3
add
aad
adc
inc
adc
and
adc
loope
xor
loop
jb
or
mov
add
add
jmp
or
adc
and
add
push
loopne
add
add
into
pop
adc
adc
cmp
cmp
mov
dec
adc
lods
and
sub
bound
sub
not
(bad)
inc
push
and
sub
mov
sbb
bound
adc
loope
push
dec
adc
jne
xchg
icebp
enter
sbb
or
iret
jb
inc
push
add
repz
and
retf
sub
or
loop
add
sub
mov
shl
and
mov
mov
adc
push
shr
adc
add
nop
fld
mov
ins
xor
adc
adc
aam
adc
add
cmp
or
or
pop
popa
add
not
add
sbb
ss
dec
adc
inc
adc
add
std
(bad)
adc
add
ret
add
jo
inc
or
push
add
or
sbb
add
sbb
loope
in
pop
inc
adc
sub
and
ret
push
inc
adc
add
loopne
scas
pop
inc
sbb
pop
add
push
rcr
mov
add
and
mov
and
movs
add
add
push
or
mov
cwde
adc
adc
adc
add
inc
mov
rcl
add
add
cmp
add
inc
inc
mov
sub
sub
add
adc
and
scas
mov
add
dec
inc
add
add
adc
mov
popf
and
ins
pushf
push
lods
mov
add
push
adc
adc
add
popa
sbb
mov
xchg
add
inc
vunpcklpd
add
push
jge
test
adc
inc
add
push
and
add
add
and
xor
sbb
mov
add
lock
adc
outs
add
and
cmovs
mov
add
sub
(bad)
adc
sub
inc
adc
xchg
nop
inc
add
popa
inc
adc
rol
pop
and
sub
mov
unpcklps
push
pop
ret
push
push
or
inc
repnz
pop
es
add
pusha
in
xor
push
in
nop
pop
and
sub
mov
push
add
inc
pop
nop
push
and
das
or
or
and
push
clc
dec
and
inc
(bad)
sub
inc
movlhps
push
xor
mov
(bad)
in
adc
iret
push
(bad)
in
and
jb
push
adc
adc
xor
add
pusha
and
and
loopne
push
pop
jmp
cmp
add
es
pop
or
adc
in
bound
lods
xor
or
pop
lea
outs
and
stos
add
inc
or
add
or
mov
xchg
or
mov
or
adc
and
nop
add
mov
and
or
mov
or
sbb
test
mov
push
add
and
add
cmc
add
shl
adc
adc
mov
adc
popa
adc
xor
xor
adc
adc
push
inc
add
and
and
adc
adc
adc
push
push
adc
mov
arpl
and
adc
aam
xor
add
nop
add
nop
add
push
bound
cmp
jno
mov
adc
add
ds
pop
adc
stos
adc
push
adc
add
xor
sbb
push
add
lods
jmp
test
and
add
fimul
dec
or
cli
inc
shl
ss
push
add
rol
and
add
mov
(bad)
pop
and
(bad)
pop
adc
lar
loop
xchg
sub
fs
cmp
or
inc
xor
push
pop
cmp
add
mov
and
(bad)
or
add
int3
add
add
sbb
pop
push
add
or
sahf
mov
arpl
sbb
mov
out
mov
sbb
pusha
mov
sbb
mov
(bad)
adc
xchg
adc
sbb
cmp
movups
adc
adc
shl
and
sub
jo
test
or
and
(bad)
shr
mov
adc
call
adc
push
push
dec
add
sbb
sub
rcl
pop
scas
add
inc
pop
add
push
adc
test
adc
xchg
add
adc
cmp
or
stos
pop
dec
add
imul
mov
xor
jns
and
push
pusha
test
add
data16
mov
call
add
add
add
pop
push
add
retf
(bad)
enter
pop
leave
shl
call
jmp
adc
xor
aaa
pop
add
out
ret
icebp
mov
mov
add
dec
int
dec
adc
pop
add
add
jno
adc
push
inc
or
jne
add
add
add
mov
jb
and
pop
pop
and
aas
and
mov
cmp
test
add
fcom
loope
push
mov
push
pop
adc
adc
or
jecxz
and
adc
adc
or
retf
or
xchg
adc
test
sub
adc
push
loope
push
(bad)
fiadd
adc
add
mov
sbb
lods
push
mov
and
cmp
ret
add
int
jbe
push
add
jecxz
inc
jge
sbb
pop
loop
add
popf
sbb
mov
and
inc
dec
mov
xchg
int
hlt
mov
and
add
pop
and
add
or
pop
and
push
mov
jmp
rol
and
(bad)
bound
push
add
or
mov
mov
and
jl
call
pop
jl
add
cdq
add
mul
ret
in
adc
adc
dec
das
adc
xor
add
mov
out
jo
and
adc
add
movs
add
jecxz
or
dec
and
sbb
cmp
add
push
mov
add
jmp
adc
adc
sbb
add
call
cmovno
repnz
adc
add
sbb
adc
add
idiv
add
adc
lea
out
mov
xchg
and
add
stos
add
inc
push
into
lahf
loopne
nop
add
lock
adc
adc
iret
sbb
xchg
shl
dec
adc
and
adc
adc
mov
inc
push
dec
pop
arpl
push
mov
or
shr
push
scas
aam
retf
xchg
push
add
sbb
adc
or
add
push
imul
mov
mov
cmps
sbb
adc
adc
stos
adc
adc
xor
adc
xor
adc
inc
push
or
loopne
sub
or
sub
dec
add
xchg
add
call
mov
ror
mov
movs
add
and
jo
cmps
cmovge
add
adc
inc
xor
mov
sbb
jbe
arpl
push
(bad)
loop
cmps
and
loopne
shl
arpl
test
jge
mov
adc
cmp
adc
xchg
xor
sti
or
add
xor
adc
aas
add
in
cmp
pop
push
adc
loope
push
popa
lock
push
loop
or
mov
ret
push
outs
add
jo
shl
nop
mov
xchg
pop
std
xchg
adc
sub
lods
add
and
movs
push
push
pop
pop
or
add
adc
adc
and
adc
add
adc
repnz
mov
dec
add
mov
jae
add
retf
push
add
inc
mov
cs
cmp
sub
sbb
test
loop
je
xor
sub
ins
push
imul
aam
push
lds
dec
add
out
pusha
repnz
add
adc
adc
call
or
lock
inc
jmp
pop
xor
xchg
adc
adc
adc
push
mov
lock
jmp
lock
mov
pop
bound
xor
leave
adc
popf
repnz
pop
test
lock
addr16
jne
js
ja
push
push
and
add
outs
xor
jge
mov
loope
ins
lea
or
or
cli
ret
adc
shl
add
push
shl
loopne
lds
mov
or
mov
leave
adc
adc
push
add
out
add
loopne
adc
out
add
loopne
adc
out
add
or
ror
adc
add
scas
ss
or
mov
rcl
add
sub
push
add
add
and
int
mov
pusha
and
jno
popa
and
lock
daa
add
and
add
and
or
pop
pusha
fld
mov
popa
jl
adc
adc
jg
cmps
or
xchg
and
mov
call
jne
retf
push
add
add
or
in
or
pop
aad
add
and
add
out
xchg
pushaw
lea
adc
ins
and
pop
hlt
lods
cld
pop
and
add
sbb
sbb
imul
pusha
mov
add
scas
stos
adc
pop
adc
adc
add
mov
mov
mov
adc
or
xchg
adc
pop
loopne
adc
xor
or
lds
loope
outs
add
sbb
mov
loopne
xor
sbb
outs
push
adc
aaa
add
ss
inc
push
and
xchg
jl
adc
adc
add
adc
cmp
jp
neg
xor
or
xor
std
jno
add
add
adc
mov
sbb
mov
ret
sbb
mov
and
xchg
inc
push
add
push
or
mov
jae
adc
push
loopne
or
jp
lock
std
cmp
mov
or
adc
xor
or
ror
cs
mov
jb
rcl
jo
fist
mov
xor
rol
mov
add
add
pop
movs
jle
and
push
jo
add
data16
loop
fcmovb
nop
shl
add
(bad)
push
add
push
add
add
mov
mov
xchg
and
lods
add
(bad)
and
not
sbb
adc
(bad)
and
loopne
adc
inc
adc
mov
mov
jns
js
sbb
sbb
mov
rcl
inc
in
dec
dec
cdq
or
push
inc
popa
pushf
adc
and
pop
add
add
push
add
popa
lock
or
push
jecxz
add
push
repz
sbb
mov
popa
lds
loopne
cmp
push
inc
fadd
pop
add
daa
repnz
cmps
add
xchg
(bad)
xchg
(bad)
push
inc
push
push
jnp
add
loopne
sub
xchg
es
add
es
ss
push
out
xchg
push
(bad)
and
push
ss
mov
bound
dec
pop
je
arpl
add
push
data16
cmps
sub
jo
enter
outs
popa
dec
fs
pop
imul
sbb
dec
outs
push
inc
imul
je
jmp
pusha
dec
or
aad
cld
and
test
add
outs
gs
add
jb
arpl
mov
daa
push
jbe
or
not
pop
xor
in
jle
sbb
in
div
lods
push
mov
sar
inc
inc
push
add
push
ss
xchg
push
xor
adc
mov
popa
imul
pop
rcl
add
push
mov
outs
inc
lea
pop
adc
arpl
popa
outs
jns
xchg
inc
mul
adc
inc
adc
add
je
dec
fs
lods
add
bound
gs
add
adc
popa
push
loopne
mov
mov
xor
sbb
add
dec
jns
cmp
push
add
jb
fs
add
lods
sbb
ret
inc
xor
jae
add
push
add
mov
shl
loopne
pop
xor
xchg
sub
push
(bad)
push
push
and
push
inc
fs
jns
inc
imul
aaa
adc
adc
inc
jns
clc
inc
cwde
pop
inc
pop
jbe
push
xchg
inc
pop
xchg
xchg
mov
xchg
inc
ja
inc
aaa
push
add
and
(bad)
outs
jb
xchg
jae
cwde
mov
fidiv
xor
and
jo
add
adc
push
scas
inc
adc
add
cmp
imul
ins
ins
inc
shl
cmp
ret
aaa
adc
ins
movs
or
aas
adc
push
popa
pop
jb
jb
xor
sbb
imul
outs
ins
inc
je
jo
test
xor
dec
mov
into
and
gs
jae
ins
fld
xor
jo
add
push
inc
adc
popa
jo
pop
or
shl
ret
or
outs
inc
or
je
and
imul
popa
inc
pushf
xor
inc
jns
mov
push
mov
and
(bad)
test
push
push
add
hlt
(bad)
push
push
inc
xchg
xchg
xlat
push
aaa
mul
test
add
(bad)
pop
xchg
and
and
pop
push
add
xchg
out
or
sub
xchg
xchg
fld
push
(bad)
aas
xor
inc
aaa
push
cmps
es
rol
fld
add
or
jb
inc
ret
xchg
xchg
add
push
adc
sub
or
(bad)
xor
or
dec
ins
imul
imul
push
outs
dec
in
push
or
gs
xlat
xchg
and
jbe
pop
inc
pop
push
sub
es
popa
and
and
add
adc
outs
gs
or
mov
outs
popa
gs
and
inc
movs
ins
inc
adc
add
push
imul
icebp
(bad)
ss
dec
inc
inc
data16
add
add
xor
push
and
fild
shl
mov
aaa
xchg
mov
add
add
xchg
adc
sti
mov
mov
rcl
push
lahf
add
mov
es
add
clc
sbb
or
add
loopne
push
xlat
in
mov
cmp
enter
adc
and
ins
popa
outs
imul
add
outs
dec
bound
in
jae
cmp
imul
es
xchg
cmp
int3
inc
push
out
out
add
push
outs
outs
arpl
adc
je
adc
mov
pop
add
std
adc
or
pop
bound
(bad)
cmps
movs
adc
jmp
adc
sbb
dec
cmp
or
outs
cld
xor
add
xchg
add
push
aaa
inc
daa
test
call
xchg
ss
push
add
(bad)
retf
fs
push
ss
das
inc
fadd
rcl
add
cmp
dec
cli
add
shl
cmp
out
xor
je
or
xchg
clc
nop
mov
outs
imul
mov
inc
xor
push
jmp
mov
adc
repnz
add
cmps
inc
add
xchg
loopne
add
or
mul
daa
push
mov
pop
inc
pop
(bad)
adc
imul
inc
loop
inc
arpl
xor
es
and
ss
test
pop
outs
je
jns
pop
push
sub
test
or
push
loop
rcr
mov
test
outs
push
mov
sar
sub
mov
xchg
and
cmps
adc
pusha
push
popa
inc
call
and
and
rol
ss
inc
cmc
ss
push
push
fisub
adc
nop
pop
es
and
push
mov
movs
jae
add
ins
ins
jne
jae
push
add
inc
mov
xchg
adc
(bad)
adc
add
dec
adc
or
jb
cmp
jns
push
pop
addr16
shl
lahf
jae
and
gs
bound
and
pop
adc
and
in
xor
push
jo
push
xchg
imul
daa
pop
add
add
jp
dec
push
xor
xchg
aaa
jne
ins
jae
mov
gs
mov
inc
push
xor
adc
adc
rcl
inc
out
pop
xor
enter
adc
adc
dec
icebp
pop
jb
push
sar
xchg
pavgw
inc
aad
inc
dec
(bad)
xchg
adc
xchg
jp
fild
(bad)
sbb
xor
fmul
pusha
lea
pop
pop
push
icebp
(bad)
mov
cdq
push
retf
ret
nop
push
(bad)
mul
inc
aaa
lds
cmp
and
adc
xor
(bad)
xchg
mov
pop
enter
popa
push
adc
pop
jbe
push
dec
add
popa
stc
sbb
inc
push
jbe
cmps
inc
add
jo
bound
jo
or
and
call
ss
adc
ficom
xchg
and
(bad)
adc
inc
leave
add
sub
dec
xor
das
add
adc
addr16
add
inc
mov
jnp
mov
add
adc
out
add
jbe
and
xor
sub
fs
add
adc
xchg
jle
scas
jmp
sub
or
psllw
dec
or
inc
aaa
pop
mov
repz
cmps
add
xor
push
mov
loopne
or
or
push
mov
and
cmps
mov
push
add
xor
dec
gs
pop
ins
or
mov
jle
and
es
add
(bad)
or
push
push
push
xchg
cmc
out
xchg
jo
pop
rcr
shl
xchg
inc
sbb
pusha
pop
add
pop
cmp
adc
(bad)
popa
adc
or
inc
gs
or
pop
lock
rol
cmps
jg
push
add
mov
mov
rol
jno
adc
or
add
out
scas
xor
push
sub
pusha
push
or
mov
xor
adc
gs
inc
icebp
push
push
cmc
xor
add
inc
inc
push
pop
fstp
mul
pop
push
in
arpl
fs
push
sbb
lea
scas
inc
add
or
pop
ss
aad
mov
pop
movs
leave
add
push
sbb
adc
add
mov
push
push
sub
adc
mov
sub
jo
fwait
push
loope
inc
jae
ins
mov
pop
sub
push
push
popf
push
jb
nop
out
push
aam
push
or
nop
daa
adc
repnz
icebp
scas
call
adc
add
movs
or
call
sbb
in
pusha
jmp
call
mov
adc
shl
rol
addr16
cmp
adc
stc
xor
ins
jle
push
sbb
adc
data16
pop
lahf
push
(bad)
xor
mov
dec
adc
sbb
xchg
add
push
adc
std
popa
repz
push
or
aaa
sar
and
inc
lds
lahf
out
xor
and
jp
add
das
xlat
and
add
pop
sbb
not
es
cmps
lods
add
add
lock
dec
setb
movs
inc
push
sbb
xor
pusha
outs
pusha
not
loope
add
inc
adc
add
imul
sbb
xor
mov
loop
inc
xchg
xchg
mul
inc
inc
fs
pop
loop
push
fisub
cwde
inc
rcl
jmp
or
push
adc
jbe
imul
jbe
cmp
mov
fcom
packsswb
jb
(bad)
add
xor
leave
add
call
std
add
and
jns
push
add
inc
mov
adc
ins
inc
push
sub
pop
rol
mov
fwait
pop
inc
movs
mov
inc
(bad)
jg
jle
cwde
sbb
lock
xchg
daa
push
and
rcr
sbb
cmp
push
pop
mov
adc
push
popa
jns
push
or
inc
je
cmps
push
add
jns
dec
push
lods
or
fsubr
pop
add
popa
add
jne
pop
push
adc
adc
add
jns
loope
popf
cmp
add
in
je
in
add
dec
and
mov
popa
inc
ret
mov
inc
push
add
adc
shr
inc
je
push
xor
call
ja
or
adc
add
aaa
es
adc
in
sub
ins
adc
add
outs
push
imul
and
push
adc
test
jecxz
and
addr16
mov
xlat
es
out
adc
gs
fst
outs
sbb
rcl
pop
xor
push
inc
fs
xor
or
add
or
add
jo
add
and
push
push
pusha
cli
add
sub
imul
popa
sub
or
pop
cmp
add
cwde
pop
inc
mov
fild
cmp
adc
int
push
mov
push
outs
inc
xor
push
loopne
movs
push
add
daa
push
push
pop
cmc
leave
es
je
sbb
xor
inc
and
jo
call
xor
ja
aam
sub
mov
jae
or
imul
adc
fs
mov
push
inc
adc
and
in
adc
aad
inc
xchg
in
inc
add
push
je
adc
xchg
add
inc
push
xor
and
cmp
inc
inc
adc
inc
mov
xor
test
dec
sbb
fiadd
or
push
cmp
cmp
aaa
xor
test
xchg
test
inc
inc
pop
dec
or
push
inc
cmp
les
inc
inc
inc
push
xor
in
inc
cmc
add
add
inc
inc
push
inc
inc
push
mov
mul
pop
dec
inc
inc
push
dec
inc
inc
(bad)
lock
adc
push
or
aad
lock
adc
icebp
jo
dec
inc
and
push
pop
push
inc
adc
push
xor
add
xor
test
and
arpl
adc
push
xor
aam
movhps
test
aam
neg
arpl
add
nop
and
and
push
and
test
xchg
add
and
push
inc
je
add
adc
or
cs
pusha
je
jmp
(bad)
sbb
hlt
xor
xchg
mov
jb
add
cmp
or
sbb
mov
jmp
xchg
xchg
pop
add
outs
adc
mov
xor
push
cmps
jecxz
leave
ret
add
add
add
fisub
test
inc
mov
test
xchg
add
mov
dec
adc
out
(bad)
and
pusha
or
adc
add
data16
add
nop
outs
adc
inc
lea
or
sub
or
push
pop
push
dec
dec
pusha
add
xchg
sbb
push
mov
dec
adc
adc
or
mov
push
add
dec
inc
inc
dec
pop
add
or
push
dec
push
or
or
inc
pop
or
pop
test
xchg
sahf
and
test
add
add
je
and
fs
test
jns
cmp
sbb
or
push
and
pop
push
popaw
xor
dec
adc
stos
or
cmp
clc
and
or
pop
add
bound
mov
or
and
stos
or
adc
movs
push
dec
les
and
(bad)
xor
adc
add
imul
push
inc
dec
push
and
fisub
ret
bound
jno
data16
inc
sub
ds
inc
dec
leave
adc
add
cmc
add
push
inc
dec
inc
push
clc
cmp
daa
mov
push
and
pop
loopne
inc
add
ret
inc
push
push
dec
push
inc
dec
dec
push
cmp
inc
pop
dec
sbb
call
addr16
add
out
or
inc
cmp
adc
out
test
and
imul
and
mov
addr16
inc
sub
xchg
adc
add
xor
arpl
jo
adc
inc
pop
jo
out
(bad)
add
push
xchg
mov
and
lock
rcl
popf
and
inc
add
loope
dec
loop
pusha
clc
shl
sub
mov
xor
and
imul
pusha
dec
adc
out
adc
mov
xchg
data16
add
addr16
sub
imul
imul
jecxz
adc
add
imul
push
lods
and
adc
es
repz
push
jne
or
jae
js
into
push
pusha
enter
gs
bound
add
and
xor
adc
sbb
xchg
ja
sahf
dec
loope
add
dec
push
sbb
rcl
push
or
sbb
inc
xchg
push
push
push
es
pop
daa
inc
inc
xchg
and
ja
adc
xchg
push
cmps
int3
or
push
pop
add
xor
xrelease
xor
or
add
hlt
xor
inc
push
and
add
jo
aam
retf
and
add
dec
hlt
das
es
cmp
and
sbb
out
hlt
out
push
inc
adc
ror
add
jae
cmp
std
add
push
test
xchg
and
in
mov
outs
add
gs
push
adc
sub
dec
add
xor
retf
mov
test
cmps
loop
push
add
inc
inc
push
inc
add
xchg
or
fs
cmc
push
adc
and
rcl
add
xor
xor
das
or
shr
inc
and
inc
add
sbb
and
mov
jge
pushfw
shl
repz
jbe
loopne
adc
sub
scas
add
addr16
outs
enter
xchg
jo
push
cmp
mov
push
dec
push
adc
and
aam
and
inc
adc
adc
xor
ds
pop
add
xchg
sub
dec
test
jne
and
arpl
add
push
fs
push
push
jne
push
gs
xor
nop
pop
add
add
xchg
push
(bad)
imul
adc
inc
cmp
push
mov
push
shl
push
adc
(bad)
ins
inc
sbb
adc
add
bound
mov
and
cmp
inc
inc
or
or
and
cmp
loopne
push
sub
and
les
test
push
or
sub
int
sbb
imul
cmps
stos
inc
idiv
and
mov
xchg
dec
mov
cmps
inc
jl
movs
inc
and
adc
add
fst
bound
cdq
adc
push
add
pusha
mov
xchg
cmp
cli
add
es
pusha
and
and
and
dec
add
cmps
dec
and
add
push
dec
and
(bad)
fcom
xchg
mov
dec
add
test
adc
inc
arpl
push
or
getsec
inc
mov
pop
push
jo
in
push
xor
scas
je
test
dec
push
xor
dec
adc
push
push
test
xchg
and
das
xor
sbb
inc
and
mov
inc
cmps
pop
add
xor
imul
add
mov
imul
dec
or
popf
es
jno
imul
jmp
pop
inc
push
or
not
ss
adc
sub
mov
and
popa
dec
add
pmulhuw
dec
sub
mov
adc
inc
loop
aaa
mov
and
xor
xor
inc
mov
mov
add
pusha
mov
int3
add
inc
gs
xor
and
mov
das
jne
dec
cmp
lods
add
cmovl
mov
outs
add
jae
adc
icebp
sub
loope
add
sbb
sub
repnz
out
xor
add
ret
and
xor
sbb
and
loopne
xchg
xor
xor
dec
push
adc
cmp
cmc
add
cmp
adc
push
sbb
les
into
pop
push
outs
dec
and
loop
fadd
and
jo
shl
imul
mul
and
push
pop
fistp
push
repnz
xor
adc
loopne
test
movs
pusha
adc
pop
adc
push
daa
ret
cs
sub
dec
inc
ins
popa
push
inc
bound
adc
jno
inc
add
outs
xor
jae
popa
ja
inc
es
pop
and
shr
mov
inc
push
push
add
jmp
inc
or
sub
sar
test
push
adc
mov
inc
pusha
mov
outs
popa
push
ins
ret
daa
movs
add
pushf
adc
add
scas
sub
in
jmp
sub
arpl
xchg
and
adc
xchg
add
sub
jp
pusha
cmps
xor
nop
and
and
ds
push
and
and
mov
dec
inc
jl
inc
(bad)
je
cmp
sbb
sbb
add
push
add
mov
inc
shl
outs
push
xchg
pop
and
sysret
int
dec
bound
gs
push
(bad)
push
inc
mov
add
push
shl
icebp
(bad)
pop
mov
lds
loop
jb
out
or
popa
mov
scas
gs
push
cmp
or
xor
cmp
mov
ins
add
out
mov
rcl
enter
aad
popf
imul
adc
push
add
repz
in
inc
stos
dec
xchg
aam
or
ds
jl
mov
scas
dec
out
fs
pop
popa
cmps
pop
inc
je
(bad)
inc
or
rcr
dec
add
push
sub
hlt
inc
out
add
rcr
inc
push
movs
sub
xchg
add
gs
inc
in
pop
arpl
stc
mov
repz
add
pop
pop
jno
call
inc
pop
push
push
and
je
adc
aas
mov
sub
inc
repz
stos
inc
adc
and
push
(bad)
mov
mov
jb
arpl
icebp
add
add
adc
pop
xadd
pop
rol
(bad)
aaa
fisub
das
sbb
and
(bad)
and
mov
(bad)
jmp
arpl
add
or
add
or
or
adc
adc
push
or
pop
or
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
adc
adc
adc
adc
(bad)
add
or
or
pop
or
push
or
add
add
or
or
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
or
adc
add
or
adc
add
or
ud2
add
or
or
add
or
push
or
add
add
or
or
add
push
add
sbb
or
add
sbb
or
add
sbb
or
add
push
add
adc
or
add
adc
or
add
adc
or
add
push
add
or
or
add
push
add
add
or
add
add
or
add
add
or
or
add
or
adc
add
or
adc
add
or
(bad)
add
or
or
add
or
push
or
add
add
or
or
add
push
add
sbb
or
add
sbb
or
add
sbb
or
add
push
add
adc
or
add
adc
or
add
adc
or
add
push
add
or
or
add
push
add
add
or
add
add
or
add
add
or
or
add
or
adc
add
or
adc
add
or
wbinvd
add
or
or
add
or
push
or
add
add
or
or
add
push
add
sbb
or
add
sbb
or
add
sbb
or
add
push
add
adc
or
add
adc
or
add
adc
or
add
push
add
or
or
add
push
add
add
or
add
add
or
add
add
and
or
add
and
adc
add
and
adc
add
and
mov
push
and
or
add
and
push
and
add
add
and
adc
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
sbb
adc
nop
push
sbb
pop
sbb
add
add
sbb
adc
adc
adc
nop
push
sbb
or
pop
sbb
push
sbb
add
add
sbb
adc
add
sbb
adc
add
sbb
bndstx
push
sbb
or
add
sbb
push
sbb
add
add
sbb
adc
add
sbb
adc
add
sbb
bndldx
push
sbb
or
add
sbb
push
sbb
add
add
sbb
adc
add
sbb
adc
add
sbb
nop
push
sbb
or
add
sbb
push
sbb
add
add
sbb
adc
add
sbb
adc
add
sbb
prefetchnta
push
sbb
or
add
sbb
push
sbb
add
add
sbb
adc
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
adc
adc
unpckhps
push
adc
pop
adc
add
add
adc
adc
adc
adc
unpcklps
push
adc
or
pop
adc
push
adc
add
add
adc
adc
add
adc
adc
add
adc
movlps
push
adc
or
add
adc
push
adc
add
add
adc
adc
add
adc
adc
add
adc
movlps
push
adc
or
add
adc
push
adc
add
add
adc
adc
add
adc
adc
add
adc
movups
push
adc
or
add
adc
push
adc
add
add
adc
adc
add
adc
adc
add
adc
movups
push
adc
or
add
adc
push
adc
add
add
adc
adc
add
lldt
lldt
str
str
str
sldt
sldt
sldt
add
lldt
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
or
adc
add
or
adc
add
or
push
or
or
add
or
push
or
add
add
or
adc
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
pop
add
add
pop
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
push
add
add
push
add
add
adc
syscall
add
add
pop
add
add
add
add
adc
adc
adc
(bad)
add
add
or
pop
add
push
add
add
add
add
adc
add
add
adc
add
add
lsl
push
add
or
add
add
push
add
add
add
add
adc
add
add
adc
add
add
adc
add
add
push
add
or
add
add
push
add
add
add
add
add
adc
add
add
adc
add
add
push
add
or
add
add
push
add
add
add
sbb
add
add
sbb
add
add
push
jo
inc
add
pop
add
jb
inc
ins
gs
fs
outs
ins
outs
ja
inc
add
push
add
adc
add
add
ins
outs
popa
dec
je
gs
je
gs
je
outs
jo
push
add
jo
push
outs
outs
imul
outs
dec
add
outs
dec
je
gs
jb
jb
inc
add
outs
dec
jo
popa
je
gs
imul
gs
jb
cs
outs
add
outs
imul
add
adc
add
add
push
add
or
add
add
add
add
or
add
add
add
add
outs
dec
add
jae
outs
jb
add
and
jbe
and
add
mul
daa
push
inc
push
push
lock
out
test
loopne
xchg
inc
pop
out
nop
es
div
xor
pop
pop
adc
xor
test
je
add
add
add
add
add
jecxz
add
adc
loopne
sub
dec
mov
add
add
add
sbb
push
add
adc
add
sbb
adc
ds
pop
adc
pop
adc
add
cs
add
pusha
and
sbb
xor
add
sbb
sbb
pop
add
add
adc
xchg
or
sbb
mov
jnp
les
add
ror
add
sti
fadd
call
push
cmp
and
fidivr
xor
ror
and
pop
jo
ds
shl
inc
push
sub
out
cmp
es
or
jb
push
add
xor
mov
and
bound
add
test
or
test
or
push
repz
pop
loop
dec
push
pop
push
and
adc
sub
add
add
loopne
adc
push
stos
out
outs
aad
ins
outs
arpl
jmp
pop
setb
dec
push
push
add
sbb
sub
mov
inc
sbb
add
push
and
cmp
mov
inc
xchg
sub
movs
mov
pop
mov
jo
aad
xchg
or
lock
dec
lock
xlat
xor
push
dec
daa
inc
push
daa
out
jno
pop
xchg
push
mov
or
or
pop
ds
ret
xchg
in
sbb
xchg
mov
cmp
add
inc
dec
popa
cmp
fimul
sub
push
out
pop
or
ror
sub
je
pop
xor
and
or
sub
pop
push
enter
sbb
add
and
add
cld
cmp
pop
jp
sahf
fwait
out
dec
or
inc
push
sub
rol
mov
add
sahf
jg
xor
xchg
pop
mov
pavgb
test
mov
movs
sbb
dec
movs
xlat
add
bound
or
inc
inc
inc
xor
push
jge
(bad)
jbe
push
pop
daa
xchg
mov
ret
xor
stos
sub
sbb
cmp
jo
ss
adc
dec
mov
and
imul
in
jl
add
out
jae
ret
adc
pop
xor
cmps
and
or
popa
xor
lods
or
cwde
push
in
cmp
add
xor
xchg
add
xor
push
or
pop
push
(bad)
pop
pusha
ins
xchg
dec
push
(bad)
in
(bad)
or
adc
push
fs
nop
and
stos
add
xchg
pusha
pop
and
adc
cmps
scas
and
or
add
sub
add
gs
or
ins
push
aad
pop
or
bound
sub
scas
cmp
add
pusha
ins
fidiv
div
xchg
rcl
bound
or
dec
push
add
add
ins
gs
mov
mov
push
adc
push
inc
test
es
push
in
push
ss
data16
pushf
jo
test
xor
loope
imul
jge
in
dec
xor
aad
lock
jo
sub
ret
aaa
add
jo
popa
xchg
add
and
pop
adc
lods
test
iret
push
add
mov
int3
(bad)
es
or
mov
dec
jmp
sub
xor
or
jge
ss
and
movs
(bad)
cdq
add
add
xchg
or
add
inc
scas
add
lods
xchg
sbb
imul
add
outs
or
rol
push
add
int
lock
out
dec
push
or
pop
inc
test
pop
push
jbe
mov
push
daa
xchg
cs
retf
out
jbe
adc
in
or
dec
scas
xchg
adc
push
push
dec
icebp
pop
es
adc
mov
call
mov
jmp
or
inc
mov
and
dec
test
es
push
loopne
and
movs
shr
mov
xchg
cli
fcomip
lahf
add
pop
add
push
mul
add
inc
lock
adc
jo
lds
frstor
repz
mov
(bad)
imul
sti
sbb
out
and
dec
repnz
bound
retf
pop
cmp
loope
shl
(bad)
pop
xchg
and
nop
sbb
adc
pop
loopne
adc
adc
jmp
imul
push
add
push
and
pavgb
dec
pusha
(bad)
or
adc
loopne
and
and
push
or
loopne
aaa
lods
lock
push
inc
lock
ds
ins
cmp
js
nop
test
or
pusha
push
inc
jo
jecxz
pop
pop
and
adc
xor
jo
sbb
scas
ficom
jmp
pop
popa
ss
mov
mov
popa
out
out
ret
adc
sbb
add
mov
jecxz
rol
pop
bound
loop
int
jne
repnz
in
cmp
call
loopne
pop
push
shl
push
call
(bad)
cmps
mov
xor
(bad)
inc
nop
add
dec
adc
cmps
es
jb
movlps
xchg
xchg
xor
or
stc
inc
dec
and
daa
xor
xchg
mov
pop
mov
jmp
popf
push
data16
popa
adc
test
in
cmp
adc
jle
adc
sbb
(bad)
(bad)
inc
pop
loopne
adc
inc
mov
xor
mov
or
inc
xor
lahf
push
leave
lock
movs
xchg
adc
dec
add
or
es
addr16
in
push
mul
add
add
adc
gs
jo
std
add
dec
or
jb
inc
pop
push
and
adc
dec
sub
xchg
or
add
and
cmp
sbb
fs
cmp
pop
mov
data16
cmp
push
pop
and
add
mov
ins
jne
cmp
(bad)
jbe
scas
cmp
cwde
jo
sbb
jb
or
hlt
pop
cmps
loopne
pop
mov
pop
add
mov
adc
fisttp
fs
adc
add
xor
sahf
fwait
popa
cmp
push
push
loopne
xor
sub
inc
mov
mov
sub
(bad)
es
and
jb
mov
mov
mov
stos
inc
push
sbb
add
sti
mov
push
rol
xchg
call
lar
sbb
push
jns
push
daa
arpl
mov
cmp
(bad)
aaa
pusha
imul
cmp
daa
and
add
jle
popf
push
repnz
outs
and
add
cmp
push
shl
and
fisttp
adc
cmps
ins
cmc
sbb
xchg
push
stc
jne
gs
push
data16
in
cdq
ds
sbb
dec
xor
and
bound
popf
jg
cmp
daa
mov
daa
xor
cmp
add
test
loopne
sub
in
pop
cld
add
cmp
nop
add
push
leave
push
(bad)
in
pop
pop
ror
dec
push
xor
lds
adc
shl
sub
jmp
push
mov
xor
adc
jae
loopne
popa
stos
das
xor
push
data16
push
adc
aam
mov
je
xlat
jmp
add
and
inc
adc
xchg
push
inc
pop
cs
inc
jge
loop
js
jmp
daa
add
xor
and
inc
jbe
adc
xor
nop
push
pop
out
or
xchg
test
test
mov
and
clc
cmps
pusha
bound
mul
js
es
ret
xchg
xchg
adc
and
adc
push
and
push
xchg
mov
rol
push
add
pop
add
inc
mov
inc
sbb
ret
add
or
lock
mov
add
mov
lds
inc
pop
add
outs
cmp
adc
and
xchg
add
add
or
push
mov
lock
lock
push
push
mov
push
add
add
mov
inc
test
or
pop
mov
mov
fadd
add
loopne
add
rol
pop
or
add
add
je
add
add
add
or
ret
add
dec
xor
mov
and
sub
sub
inc
pusha
bound
cs
add
pop
push
or
add
jno
fs
dec
dec
shl
inc
add
sub
jnp
xor
aad
xor
dec
pop
mov
imul
xor
dec
pop
adc
hlt
add
das
inc
jns
inc
inc
add
stos
adc
sub
dec
add
or
arpl
hlt
mov
add
imul
sbb
add
leave
pop
repnz
jo
adc
xor
add
sub
mov
adc
add
and
pop
pusha
add
and
icebp
and
lds
add
add
inc
int3
inc
mov
mov
add
(bad)
xor
xor
xor
mov
xor
xor
sbb
or
jae
sub
add
lock
xor
xor
mov
xor
add
xor
hlt
xor
xor
retf
xor
xor
xor
cmp
daa
add
jg
je
ja
(bad)
mov
push
daa
and
daa
mov
add
dec
adc
add
lock
add
shl
add
ins
and
inc
sub
es
les
imul
inc
add
and
aas
inc
jo
loopne
add
add
add
add
add
adc
adc
and
enter
or
and
out
adc
add
and
into
adc
add
and
int3
adc
add
sbb
inc
retf
add
dec
add
mov
jno
pusha
dec
add
ret
mov
add
inc
add
jge
adc
add
inc
add
mov
mov
nop
cmps
retf
pop
cmps
adc
ja
jo
add
add
and
das
and
xor
xor
add
and
jb
adc
adc
add
and
jo
lock
mov
sub
outs
sub
push
lahf
and
push
mov
xor
jo
or
and
and
and
and
inc
add
les
mov
adc
ror
dec
add
hlt
and
mov
add
adc
rol
adc
inc
adc
inc
lock
mov
sub
(bad)
and
add
add
push
adc
repnz
loopne
and
adc
add
and
or
add
add
or
add
adc
mov
and
adc
inc
inc
add
outs
xor
or
xor
stc
adc
mov
or
sti
xor
sub
xor
sahf
dec
add
and
add
lock
push
dec
adc
sub
dec
pop
xor
(bad)
sub
retf
add
shl
inc
add
imul
mov
inc
dec
add
xor
xor
inc
add
xor
pusha
xor
inc
add
xor
adc
xor
inc
and
adc
rcr
inc
js
add
mov
arpl
add
and
sub
(bad)
push
sbb
cmp
pop
push
adc
and
adc
rol
push
retf
adc
push
inc
daa
cmp
sub
fisubr
les
rcr
dec
and
inc
adc
add
jb
aad
pusha
xchg
xchg
or
adc
cs
xor
sub
add
pop
loopne
push
loope
add
dec
adc
add
xor
imul
inc
dec
inc
inc
inc
sub
adc
push
(bad)
retf
aas
aam
test
xor
add
cmp
cmp
cmp
aaa
aam
aam
mov
add
and
add
sub
sub
sub
daa
and
movs
and
and
and
add
push
aam
mov
xchg
sbb
sbb
sbb
sbb
push
in
add
adc
adc
adc
add
pcmpeqb
test
add
or
or
or
or
pop
add
pop
add
mov
hlt
add
add
add
les
add
add
add
inc
cmp
(bad)
mov
nop
sti
xor
sar
repz
add
div
xor
cmc
mov
ret
loope
out
xor
add
in
ret
in
ret
call
out
out
in
in
loopne
ret
loop
loope
rol
pusha
fild
and
mov
rcr
push
fldenv
adc
xlat
ret
(bad)
add
xchg
aad
aam
rol
jo
push
rol
shl
or
into
xor
add
int3
push
int3
jecxz
arpl
add
retf
push
mov
mov
mov
add
mov
mov
mov
scas
mov
lods
add
stos
and
add
repz
jae
sbb
inc
xchg
rcl
xchg
jecxz
xchg
xchg
add
and
add
mov
and
add
push
and
xor
adc
jp
js
js
shl
jae
jb
jb
mov
jae
jecxz
jae
add
ins
adc
push
imul
mov
arpl
arpl
mov
and
popa
shl
adc
add
pop
add
xchg
pop
add
and
jo
add
out
or
cmp
mov
pusha
sbb
add
lods
adc
add
int
fadd
les
push
inc
sbb
ret
sbb
adc
retf
inc
mov
and
arpl
inc
shl
shl
xor
and
add
adc
push
mov
and
add
(bad)
in
add
or
inc
add
mov
mov
nop
adc
sbb
enter
cmp
sbb
mov
adc
adc
out
cs
adc
xor
mov
adc
sbb
push
xor
and
dec
mov
add
adc
or
inc
(bad)
out
add
mov
add
or
jo
inc
les
mov
push
inc
inc
add
lods
inc
les
aad
pop
adc
stos
inc
les
scas
or
adc
stos
inc
inc
inc
add
inc
les
call
inc
inc
add
mov
icebp
pop
adc
adc
adc
pop
adc
adc
add
cmps
inc
or
or
jb
jle
add
es
pop
adc
adc
adc
les
pop
or
adc
xchg
inc
inc
dec
add
adc
xchg
inc
les
dec
or
adc
xchg
inc
inc
dec
add
loopne
mov
inc
les
pop
push
or
sub
xchg
inc
inc
dec
add
or
adc
xchg
inc
les
or
adc
xchg
add
add
add
or
inc
fld
xchg
add
and
or
jmp
mov
add
or
dec
add
or
or
or
add
mov
lds
add
add
inc
or
add
xor
mov
push
or
mov
push
inc
test
loopne
adc
mov
add
loopne
add
jo
sbb
loopne
adc
rcl
pop
(bad)
ror
fmul
dec
add
or
or
or
fcomp
and
or
pop
aam
pusha
and
dec
add
and
dec
add
pop
(bad)
jmp
rol
xor
jle
pop
adc
adc
pop
adc
adc
pop
adc
adc
pop
adc
adc
pop
adc
adc
pop
js
nop
jo
js
add
push
sub
fldcw
nop
jmp
adc
mov
cmps
pop
or
cmps
mov
pop
or
(bad)
jbe
shl
jbe
ins
rol
push
ins
shl
gs
ins
shl
push
ins
shl
fs
ins
rol
xor
shl
push
ins
shl
arpl
rol
ins
add
imul
or
push
xchg
add
stos
sub
or
and
add
scas
add
xchg
cmp
sbb
inc
add
lds
push
mov
les
dec
mov
pushaw
pop
sbb
xor
pop
shl
fsub
cmps
add
pop
nop
fsub
sub
jo
push
adc
add
xchg
or
adc
add
add
movs
add
add
int
or
add
add
push
add
pop
or
add
pop
or
int
or
add
pop
or
int
or
inc
add
or
ss
pop
or
inc
add
add
add
pushf
add
dec
or
and
adc
dec
add
mov
add
dec
add
loopne
add
mov
ins
pop
or
pop
sub
inc
inc
inc
movs
xor
adc
pop
iret
add
pop
retf
add
lds
cmc
push
pop
rol
cmc
push
je
outs
jo
xor
pusha
and
jo
push
push
push
and
cmp
ss
push
inc
adc
aas
rol
add
adc
cmp
add
jno
rcl
cmp
ror
adc
inc
jo
mov
or
mov
dec
or
add
jbe
adc
or
add
test
pop
or
jle
dec
lock
sbb
mov
push
das
sbb
add
push
jb
mov
sbb
pusha
cs
jb
adc
sbb
shr
and
adc
push
shl
and
shl
sub
rcl
sub
rol
jmp
add
add
adc
test
add
add
and
lahf
add
icebp
sbb
jmp
add
add
jmp
or
add
retf
add
mov
push
sbb
mov
add
pop
rcl
push
inc
or
mov
sbb
sbb
xchg
add
and
icebp
sbb
xchg
sbb
mov
sbb
loop
add
add
add
aam
xchg
sbb
xchg
sbb
adc
test
add
test
sbb
cmp
pop
imul
or
add
jecxz
adc
add
add
adc
pop
daa
push
xor
add
xor
aas
add
ror
pusha
inc
add
push
mov
in
push
adc
push
and
pop
or
mov
add
add
in
adc
pop
or
jmp
and
inc
addps
inc
xor
or
push
shl
stc
adc
xor
dec
adc
inc
mov
dec
add
sub
rcl
int3
mov
nop
dec
adc
pop
rol
nop
into
adc
adc
or
loope
adc
inc
add
nop
add
jg
xchg
inc
sub
adc
add
dec
and
xor
and
adc
ror
dec
cmp
mov
cmp
inc
add
add
mov
add
push
aam
nop
retf
jae
adc
dec
nop
iret
and
add
pop
inc
and
adc
add
gs
nop
shl
add
mov
test
jns
dec
adc
xor
inc
dec
je
jo
movs
inc
adc
inc
nop
int
pusha
and
push
les
push
or
lds
add
add
add
sbb
daa
add
stc
xor
cmp
cmp
add
add
add
or
inc
fiadd
jmp
add
add
xor
add
add
sub
test
cmp
lahf
inc
movs
add
inc
(bad)
movs
and
dec
nop
mov
inc
adc
mov
rcr
add
popa
sub
push
push
icebp
cmp
push
inc
mov
call
mov
cmp
fst
shl
cwde
inc
add
add
cmp
inc
push
add
fldcw
bound
add
cmp
inc
mov
xor
inc
sub
push
push
rol
push
push
ret
pop
push
aad
and
and
aaa
inc
clc
sub
inc
xchg
push
pop
add
add
sub
enter
mov
add
push
bswap
add
inc
mov
add
jnp
push
mov
nop
dec
pop
pusha
inc
rol
fs
push
nop
xchg
jae
and
inc
add
dec
cmp
inc
sbb
adc
inc
mov
adc
inc
rol
push
jnp
movs
punpcklbw
push
nop
dec
dec
adc
push
ins
daa
inc
adc
adc
dec
push
push
jle
adc
pop
adc
leave
and
inc
and
push
sahf
movs
adc
and
shl
shl
lea
inc
or
cmp
jl
push
bound
mov
cmp
xchg
push
mov
rcl
inc
inc
pop
add
arpl
je
adc
repz
movs
js
pop
cmp
adc
sub
add
xor
jge
or
cmp
add
xor
inc
js
sbb
or
sub
add
stc
add
inc
fs
cdq
pop
pop
add
add
das
adc
dec
sub
mov
shl
add
dec
adc
xchg
jno
mov
loopne
add
add
inc
or
pop
jno
and
adc
add
aam
adc
pop
jno
adc
inc
out
and
mov
jns
or
dec
add
enter
std
sbb
inc
mov
inc
imul
add
sub
cmp
adc
mov
in
nop
out
shr
movs
push
add
aam
xor
arpl
and
add
add
inc
and
mov
call
dec
aas
xchg
add
jno
(bad)
inc
push
add
sub
dec
inc
add
test
add
call
inc
loop
into
sub
shl
xchg
adc
add
nop
xor
rol
jb
add
(bad)
nop
xor
adc
and
xor
sbb
jnp
inc
sbb
pop
sub
add
fsubr
adc
enter
pop
jno
fadd
jg
leave
xor
inc
push
add
add
inc
dec
add
sub
lods
inc
add
daa
add
sub
xor
push
push
or
or
les
adc
fmul
and
or
sub
inc
xor
pop
inc
sub
dec
xor
or
pushf
cmp
adc
rol
(bad)
nop
push
add
enter
sahf
inc
test
cmp
inc
jecxz
inc
sub
adc
xchg
inc
fild
add
add
inc
mov
sahf
rol
inc
adc
bound
pop
fild
rol
inc
xor
adc
mov
adc
fadd
add
dec
or
add
pop
pusha
nop
into
xor
add
adc
adc
push
or
and
adc
pop
in
add
inc
add
add
add
inc
sub
xchg
xchg
pop
push
daa
push
inc
dec
nop
and
fsub
rcl
fimul
add
inc
dec
adc
in
adc
push
jns
add
add
inc
add
add
add
sub
ins
adc
push
shl
xchg
jo
rcr
adc
mov
push
adc
dec
adc
loopne
shr
and
adc
xor
or
xor
push
cmp
dec
and
lock
(bad)
jns
add
push
sub
pop
add
inc
ret
push
repz
jne
jge
add
inc
mov
and
outs
add
adc
inc
and
add
adc
aas
and
dec
aas
inc
pop
sub
xchg
adc
sub
add
cmc
add
add
ds
add
scas
fild
adc
inc
sbb
aaa
add
popa
pavgb
into
add
inc
xor
add
adc
xor
rcr
adc
inc
adc
sar
adc
inc
pop
add
add
pusha
or
cmp
or
mov
or
xchg
aam
push
jp
mov
fiadd
adc
cmp
xchg
ds
add
jne
pusha
sub
add
xor
or
mov
ss
aas
loopne
test
push
add
inc
(bad)
cmp
sbb
loope
adc
xchg
in
push
cmp
ds
push
sub
retf
add
xchg
mov
push
push
nop
cmp
fiadd
xor
push
nop
sbb
dec
add
and
mov
shl
or
in
adc
adc
push
rcr
adc
aaa
lock
loope
pop
adc
loope
inc
dec
add
rcr
inc
fisttp
imul
add
call
aad
mov
jns
adc
adc
cmp
sbb
sub
pop
stc
add
(bad)
or
add
push
jecxz
adc
inc
jb
arpl
shl
nop
dec
add
push
mov
xor
adc
loope
pop
push
xor
rcl
mov
xchg
adc
and
cmp
sub
xor
xor
cmp
jo
or
add
ins
add
ret
or
sar
inc
or
mov
xchg
sbb
dec
add
add
add
mov
pop
outs
push
rol
rol
inc
daa
pushf
xor
popf
cmp
loopne
or
daa
cmp
jbe
xor
aas
add
pop
adc
add
jnp
enter
loopne
and
cmp
sbb
popa
and
cmp
push
dec
jmp
movs
sub
and
and
push
add
and
mov
xor
and
add
add
cli
inc
or
add
adc
jg
cmp
pop
jae
bound
fcomp
adc
and
xchg
in
adc
xor
mov
out
inc
cmp
adc
add
test
nop
aad
add
add
xor
add
mov
inc
xchg
pop
js
sbb
aaa
xor
ret
xor
or
pop
mov
add
daa
adc
add
mov
push
ror
mov
add
mov
pop
cmp
and
pushf
and
pop
cmp
cmp
adc
or
and
mov
push
cmp
sbb
pop
jno
dec
cmp
pop
add
inc
add
jno
mov
mov
mov
loopne
inc
fld
xor
cmp
add
add
push
pop
lods
cmp
add
add
xlat
pop
push
or
aas
cmp
push
or
fiadd
jo
mov
push
add
inc
add
mov
push
lods
add
add
daa
cmp
cmp
lea
sbb
or
sbb
cmp
in
mov
pop
pop
test
inc
outs
or
daa
outs
ja
lods
das
dec
add
test
leave
or
adc
inc
mov
dec
add
pop
push
add
add
adc
add
adc
adc
ins
pusha
aam
or
inc
mov
cmp
add
add
sbb
(bad)
push
xchg
add
push
xor
int
xchg
add
cmp
push
cdq
mov
pop
xchg
xchg
call
arpl
nop
mov
adc
rcl
add
xor
jbe
inc
(bad)
arpl
push
adc
push
adc
(bad)
loopne
arpl
add
pop
xchg
daa
xor
add
push
xor
cmp
push
rol
cs
ffreep
shr
add
rcl
adc
and
dec
and
cmp
add
add
add
ror
or
xor
xor
loopne
adc
sbb
or
adc
popa
xchg
inc
inc
pop
retf
add
sbb
cmp
scas
adc
xor
shr
mov
inc
ins
clc
add
jne
movs
xor
mov
add
rol
fmul
test
adc
inc
sub
add
dec
add
add
add
idiv
outs
add
add
retf
push
rcr
or
pop
pop
or
xor
add
push
add
adc
jno
adc
inc
dec
and
adc
sub
xor
sbb
add
add
inc
add
adc
add
es
and
inc
test
add
pusha
adc
shl
in
push
rcl
fdivr
inc
call
daa
aaa
rcl
outs
sbb
pminub
or
and
call
xor
push
aaa
cmps
add
add
sub
sbb
fs
mov
inc
push
sub
jns
or
adc
xor
adc
adc
xchg
adc
test
jo
arpl
and
push
or
sbb
fs
add
dec
adc
pusha
adc
out
add
add
nop
and
xor
adc
fmul
ja
outs
jae
nop
add
mov
adc
or
imul
and
mov
sbb
cmp
add
or
dec
or
jae
jnp
push
pop
xor
push
xor
dec
pusha
add
adc
adc
jp
nop
sbb
nop
push
or
inc
push
mov
shr
xchg
outs
adc
and
push
(bad)
mov
popa
sub
mov
adc
and
nop
fs
sar
nop
push
arpl
jbe
pop
inc
add
jne
fisub
xchg
ror
adc
adc
int3
push
adc
xor
pop
xor
add
push
xor
push
rcr
lods
adc
(bad)
adc
shr
test
and
icebp
inc
sub
adc
add
bound
lsl
or
sbb
add
jo
sbb
pop
or
retf
add
adc
out
add
add
rol
push
jb
add
mov
dec
adc
xor
jge
inc
push
and
stos
xor
rcl
jg
scas
pop
adc
nop
sbb
nop
adc
add
loopne
and
and
mov
add
cmp
pop
mov
jge
inc
push
and
mov
push
adc
aaa
adc
inc
pop
add
adc
jbe
rol
inc
adc
nop
das
xor
outs
add
cmp
xor
bound
add
sub
xor
rcl
inc
push
add
add
pop
daa
mov
adc
inc
inc
mov
mov
out
inc
ret
sub
adc
add
cmp
leave
add
push
popw
loop
xor
adc
adc
inc
sbb
inc
rcr
nop
sbb
ins
adc
mov
or
and
add
push
dec
add
xchg
pop
adc
add
test
push
add
inc
adc
sahf
push
shl
mov
out
add
pop
push
ds
repnz
sti
inc
cmp
hlt
fild
rcr
outs
(bad)
push
scas
(bad)
movs
repnz
cmc
inc
gs
data16
icebp
inc
cld
xchg
mov
xor
ret
cwde
pop
outs
ror
repz
rol
mov
scas
fdiv
loope
lock
mov
cmc
outs
add
mov
hlt
add
and
or
out
icebp
mov
or
out
fidivr
rcl
outs
rol
outs
ret
cmc
dec
cmps
adc
fisttp
push
icebp
jb
push
das
in
lock
add
adc
pop
out
or
(bad)
outs
ret
cmc
mov
scas
scas
loop
lock
std
dec
jge
ss
sbb
icebp
xchg
lods
dec
sbb
mov
mov
outs
xchg
loope
jb
stc
xchg
out
push
outs
out
icebp
sub
or
lock
(bad)
push
push
outs
ins
rcr
div
bound
iret
retf
call
outs
scas
xor
mov
or
inc
push
sti
sbb
jecxz
push
xor
dec
popf
ds
ret
sub
jmp
xor
adc
jno
jecxz
jecxz
div
inc
pop
scas
add
mov
pop
cmps
cmp
lods
inc
repz
cmps
sub
xor
nop
dec
xor
imul
in
pop
adc
pop
aaa
ins
sbb
retf
repnz
or
test
mov
mov
aas
data16
sub
sbb
pushf
push
enter
leave
inc
out
pop
mov
outs
iret
cmp
mov
lea
pop
cmp
lds
pop
cmp
push
rcr
ret
fs
xchg
loope
iret
xchg
fwait
sbb
int3
mov
dec
imul
add
add
int
dec
mov
leave
add
imul
das
sbb
mov
fcomp
jno
in
bound
nop
std
xlat
pushf
mov
adc
mov
loop
mov
push
clc
(bad)
pop
jle
hlt
xchg
push
sbb
idiv
adc
sbb
cwde
fidiv
loop
lods
sbb
jmp
jne
fisttp
hlt
fild
js
and
mov
or
xor
ins
cld
inc
add
xor
xor
stc
mov
and
stos
dec
xchg
push
in
and
leave
retf
cmp
nop
xor
pop
dec
sub
shl
mov
cwde
lea
or
jb
in
mov
mov
aam
fucomip
push
inc
movs
cs
xor
aaa
loopne
sbb
inc
into
add
je
cmc
mov
dec
mov
add
adc
sbb
pop
push
repz
xchg
mov
push
or
fsub
xor
(bad)
add
xor
cs
pop
enter
out
add
aaa
sub
call
(bad)
stc
mov
or
into
pushf
jmp
sub
mov
mov
jmp
stos
retf
xchg
jb
inc
cmp
fisttp
jmp
xchg
push
sti
out
jo
in
out
mov
pop
ss
sub
outs
les
mov
pop
js
nop
mov
in
ins
ss
int3
add
push
cmp
in
sub
cmp
jmp
retf
aad
pop
test
test
add
push
dec
call
icebp
xchg
cmp
push
mov
fcomp
push
xor
fsub
enter
fisubr
iret
adc
div
push
out
xor
mov
imul
push
pop
rcr
mov
jmp
int3
in
retf
outs
mov
inc
sbb
and
dec
add
jmp
mov
faddp
and
lods
out
cwde
(bad)
add
stc
jne
cwde
adc
dec
pop
or
sbb
mov
stc
clc
adc
jbe
push
pop
fmul
aam
repnz
imul
(bad)
pop
dec
cmp
push
fist
or
jecxz
ret
sub
dec
stc
inc
mov
aas
add
sbb
shl
mov
jb
add
push
jo
in
movs
sub
aas
mov
int3
pop
fwait
imul
or
jmp
push
jne
mov
cmp
or
xchg
sti
fimul
sub
fs
sub
push
xchg
ja
push
xchg
cmp
(bad)
mov
(bad)
sbb
sbb
or
aad
mov
dec
sbb
push
cwde
fs
push
sub
cmc
sub
rol
mov
addr16
gs
and
mov
cld
inc
mov
or
in
push
jl
cli
scas
sti
xor
jb
push
inc
imul
out
std
ins
(bad)
aaa
lds
inc
jno
(bad)
mov
xchg
jg
outs
mov
and
clc
pop
mov
pop
int
inc
sbb
xlat
and
pusha
add
xlat
xlat
ss
gs
dec
cs
xor
or
dec
push
shl
pop
test
inc
sub
xlat
mov
and
lods
push
xor
fiadd
push
push
fnstsw
or
rcl
adc
xchg
nop
(bad)
xlat
xchg
sti
adc
mov
mov
or
(bad)
add
push
cmp
cmp
sub
cmp
dec
cs
loopne
dec
outs
cmp
(bad)
cwde
jo
adc
mov
scas
lock
add
add
add
add
xchg
add
arpl
adc
add
add
into
sbb
sbb
add
add
add
add
add
mov
adc
jnp
(bad)
adc
add
add
mov
rol
add
mov
add
sbb
sbb
xchg
add
pusha
and
rol
test
popa
fcomp
enter
sbb
sub
enter
adc
enter
jg
cli
aaa
inc
and
ins
test
jg
daa
fdivr
xchg
lea
fdivr
ins
pop
add
fcomp
add
push
xor
ins
xor
jne
popf
xchg
jne
sbb
xor
(bad)
lods
jb
and
adc
loope
lea
cmps
or
(bad)
lods
outs
mov
add
mov
inc
mov
lods
imul
inc
jno
add
cmp
(bad)
lods
fs
fadd
inc
xor
push
iret
lea
enter
(bad)
lods
popa
adc
fadd
inc
add
fcomp
(bad)
lea
fmul
loope
mov
ins
inc
add
push
mov
sub
pop
fcomp
aad
enter
xor
add
push
fcomp
ror
pop
add
movs
fdivr
inc
enter
add
or
int3
add
nop
fmul
les
ficom
inc
enter
rol
lea
sbb
cmp
jae
inc
lds
outs
fdivr
inc
dec
fdivr
xor
ins
push
add
les
fsubr
aam
ja
xor
and
inc
sbb
lea
aas
fmul
add
and
ins
add
cmp
cmp
mov
add
fcomp
pusha
mov
and
or
leave
es
add
dec
add
xor
daa
xor
xor
xor
mov
fsubr
add
xor
dec
inc
xchg
add
mov
mov
add
fsub
das
movs
pusha
dec
cmp
and
mov
inc
sub
dec
and
add
mov
sub
adc
je
sub
inc
ins
or
xor
inc
arpl
add
int3
rol
xor
ins
mov
mov
add
dec
cmp
or
or
dec
shl
mov
dec
push
scas
mov
inc
push
add
adc
and
and
daa
add
mov
adc
adc
xor
inc
nop
adc
adc
xor
add
dec
sbb
out
fstp
add
mov
mov
jo
aam
xor
mov
loope
xor
xor
ss
xchg
retf
inc
xor
and
(bad)
adc
add
(bad)
xor
retf
add
test
push
test
add
frstor
mov
add
loopne
push
cmps
add
add
psrlq
or
mov
add
and
push
movs
xor
test
mov
fbld
inc
dec
iret
and
inc
pop
jno
movs
xchg
or
lock
loope
nop
leave
pop
movs
and
jmp
jge
add
cmovo
pusha
(bad)
pusha
daa
dec
arpl
packssdw
add
sbb
jecxz
loope
pop
mov
push
std
pop
dec
mov
xor
daa
lock
add
rol
and
dec
add
inc
cmp
push
ret
inc
xor
subps
sub
(bad)
lock
loop
inc
cmp
ror
cmovnp
stc
xor
leave
and
std
inc
hlt
jb
inc
xor
or
cli
retf
es
dec
add
das
popf
xor
add
pminsw
lods
sub
ins
cmps
leave
sub
shr
cld
loopne
adc
add
mov
pusha
call
or
or
mov
(bad)
pop
mov
lods
ret
fcomp
adc
stos
stos
xor
lea
dec
retf
lods
mov
sbb
stos
mov
lea
aad
lods
lods
fcomp
pop
gs
fsubr
retf
fcomp
cmc
leave
lods
sahf
fsubr
adc
push
sbb
stc
rol
lea
mov
lods
mov
jp
sbb
sbb
enter
sbb
pop
stos
test
fmul
mov
cmps
add
or
pop
loope
dec
and
or
js
jmp
and
jbe
pop
add
ds
loope
and
inc
inc
add
dec
push
xchg
add
add
sub
and
cmc
push
add
xor
mov
leave
sub
xor
dec
das
adc
adc
pop
adc
and
outs
xor
ja
(bad)
and
bound
enter
movs
jecxz
stos
dec
and
xor
test
xor
push
add
dec
xor
lea
xor
dec
ss
xor
dec
mov
adc
inc
cmp
mov
or
mov
xor
inc
mov
push
inc
fisubr
das
lock
add
enter
loopne
add
or
rol
ins
test
shl
(bad)
int3
push
xchg
add
rol
mov
pop
push
lds
and
and
push
xchg
add
rol
test
push
push
mov
xchg
and
add
cs
adc
test
enter
push
push
test
adc
ins
inc
or
jmp
or
std
and
clc
add
xor
dec
inc
pusha
add
std
and
inc
xor
and
add
test
mov
xor
adc
sub
inc
add
and
loopne
adc
push
inc
inc
xor
ss
xor
les
jle
movs
shl
adc
jge
int3
ins
pusha
cmp
jge
add
inc
inc
xchg
or
inc
and
xor
inc
dec
push
jl
ins
add
add
inc
push
cmp
and
push
add
rol
loop
pop
or
xchg
sar
and
jp
xor
sbb
rcl
loopne
push
fidivr
mov
rcl
lods
dec
inc
add
ins
ror
sub
cmp
ror
add
mov
inc
add
ins
inc
test
cmp
inc
sbb
add
ins
loopne
inc
or
cmp
add
or
ins
xchg
inc
dec
add
sub
sub
xor
jo
aaa
xor
inc
xor
and
aaa
adc
ror
add
(bad)
loopne
and
add
or
xor
dec
add
inc
dec
add
inc
and
add
cmp
adc
and
cld
push
je
add
sub
inc
inc
sub
arpl
sub
add
daa
add
xor
and
shl
out
push
ins
pusha
or
and
sub
inc
add
and
fidivr
pusha
sbb
pusha
aas
popa
pop
jl
loope
pop
div
test
es
and
fild
cmc
test
mov
add
adc
xor
add
jo
inc
add
or
add
add
ret
inc
xor
xor
jno
add
push
push
or
rcl
shl
popa
int3
movs
loop
inc
push
js
pop
inc
xchg
dec
xor
add
(bad)
sbb
test
int3
aad
xor
lds
add
or
add
and
dec
push
dec
pusha
add
bt
test
push
inc
or
fsub
xor
inc
and
movs
jecxz
inc
add
add
ins
push
push
movs
inc
and
inc
rcl
mov
add
or
movs
jne
leave
push
adc
xor
lock
movs
xor
and
or
and
shl
add
or
xor
les
jo
rcl
pop
add
inc
adc
rol
cmp
add
or
xor
(bad)
or
or
cmp
sub
add
into
inc
xor
cmp
add
inc
push
js
jmp
or
pop
push
cmp
daa
ins
xchg
add
mov
call
ins
jne
or
jo
xor
xor
sbb
and
push
pop
cmp
adc
sbb
add
xor
adc
mov
add
and
mov
sbb
xor
hlt
xor
mov
pop
lea
adc
sbb
movups
add
xor
dec
inc
cwde
mov
mov
dec
inc
js
out
test
lock
inc
pop
xor
mov
cmps
dec
inc
dec
xor
inc
inc
xor
ret
inc
and
inc
inc
or
in
or
sub
xor
inc
adc
lds
mov
add
test
add
xor
inc
add
sub
test
adc
or
or
inc
sbb
inc
xor
sub
stc
xor
sbb
mov
loopne
sub
push
jecxz
test
aam
add
add
add
jno
lods
xor
fild
loopne
je
add
rcr
xchg
and
mov
rol
in
adc
aam
fsub
or
xor
adc
mov
ret
mov
and
add
or
or
lahf
add
xor
adc
adc
cmp
hlt
dec
add
sti
mov
ins
add
iret
or
loopne
adc
jmp
dec
add
add
adc
add
inc
xor
in
or
xor
adc
cmp
movs
add
bound
xor
leave
or
and
push
xor
mov
add
jb
xchg
add
dec
inc
push
or
mov
add
jmp
and
push
rol
and
push
inc
and
inc
mov
sbb
jae
xor
stos
or
xor
add
mov
adc
xor
xor
(bad)
fcmove
shl
call
add
adc
adc
mov
cmp
pop
mov
shl
add
xor
or
add
test
pmuludq
mov
jo
fadd
inc
mov
jo
pushf
add
inc
mov
and
adc
sbb
mov
inc
adc
add
and
dec
in
push
push
adc
loop
xor
je
xor
nop
arpl
or
add
je
add
or
adc
stos
or
xor
adc
mov
or
xor
add
adc
push
and
jmp
(bad)
xor
add
arpl
fadd
leave
push
xor
rcr
or
push
lea
adc
sar
pop
add
xchg
nop
cdq
sub
push
push
sbb
xchg
lea
push
add
pusha
leave
push
adc
pusha
xchg
xor
mov
lock
adc
mov
inc
push
(bad)
push
xor
inc
push
xor
dec
rcr
pusha
mov
add
inc
add
xchg
or
xor
adc
mov
add
nop
pop
sbb
sbb
push
xchg
sub
push
push
dec
sbb
test
lods
jl
mov
lods
jbe
pop
xchg
lods
jno
aad
clc
xchg
nop
scas
retf
fmul
(bad)
lods
imul
data16
xchg
add
pop
(bad)
lods
popa
xchg
sub
lock
xchg
add
retf
lods
pop
popf
mov
fdivr
(bad)
push
popf
mov
inc
sbb
pop
movs
iret
adc
arpl
add
mov
adc
xor
and
inc
test
aam
inc
or
cmc
inc
add
inc
xor
inc
jmp
cmps
adc
ins
or
ss
adc
dec
mov
inc
sub
loop
jmp
adc
add
cld
ins
add
push
add
call
test
inc
int
adc
es
into
jmp
add
pop
add
movs
test
jno
xor
in
xor
xchg
inc
xor
lock
or
dec
sub
int
add
xor
mov
aas
ins
pusha
mov
push
add
mov
aas
ins
push
add
lea
sbb
ret
push
cmc
inc
fimul
add
inc
adc
sub
cmp
push
push
add
loopne
adc
jecxz
bound
fisubr
popa
add
push
sbb
arpl
retf
cdq
bound
fucomp
xor
dec
dec
fstp
xor
mov
cdq
mov
push
or
dec
dec
and
add
mov
shl
push
add
pop
add
xchg
dec
inc
inc
add
or
nop
mov
add
clc
and
or
cmp
xchg
adc
add
xor
inc
fdiv
adc
or
inc
add
inc
mov
fistp
push
add
xor
sub
inc
add
add
fidivr
xor
push
xor
adc
or
xchg
lea
rol
dec
add
sbb
mov
pusha
add
xor
push
adc
adc
or
add
nop
pusha
lahf
loop
dec
and
(bad)
lods
sub
push
xor
inc
xor
and
inc
push
xchg
push
inc
dec
dec
add
inc
or
je
add
movs
add
(bad)
push
push
inc
dec
adc
add
in
sbb
add
and
rol
add
or
push
loope
add
add
or
add
adc
clts
add
sbb
loope
pusha
add
inc
and
adc
dec
push
add
loope
dec
cmps
add
aad
iret
in
add
xchg
or
push
int3
add
dec
xor
xor
and
or
and
bound
add
enter
das
xor
mov
dec
arpl
into
js
jnp
test
mov
lock
aaa
bound
int
test
std
into
push
inc
xor
sti
(bad)
into
cmp
push
cmp
stc
scas
or
shr
pmulhw
stos
icebp
shl
ret
or
dec
or
mov
int3
add
and
mov
add
add
dec
or
and
mov
test
inc
(bad)
inc
add
cmp
shl
dec
inc
and
add
or
add
xor
mov
adc
ret
or
iret
push
test
or
lock
add
fidivr
sub
or
dec
or
and
inc
ret
adc
or
inc
push
rcl
in
adc
rcr
pop
or
add
mov
mov
inc
mov
adc
nop
loopne
or
inc
out
dec
add
xor
pop
(bad)
or
add
loopne
adc
retf
or
fsub
or
push
outs
pop
jo
push
or
in
mov
add
push
pop
loopne
inc
add
inc
xchg
ins
xchg
lock
loopne
adc
retf
add
pop
add
sbb
xor
fidivr
inc
inc
add
add
or
cs
add
or
sub
enter
inc
push
cwde
or
dec
xchg
jecxz
fbld
test
popa
or
inc
stos
add
mov
cmps
cmp
add
mov
fidiv
out
sub
lods
retf
add
inc
inc
mov
mov
fwait
sub
retf
push
rol
adc
cmp
sar
cmp
adc
imul
and
fiadd
movs
ja
jne
outs
or
mov
adc
jmp
std
ror
pop
sar
pop
sbb
stc
jge
and
cli
ins
inc
dec
(bad)
lock
out
aaa
je
adc
rcr
adc
or
int
stc
aad
add
mov
jae
mov
jmp
(bad)
jmp
addr16
neg
fucomip
xchg
jb
push
add
cmp
test
push
lods
outs
adc
out
dec
mov
jnp
sbb
dec
xor
pop
or
lods
adc
sub
jle
cs
inc
jl
and
cdq
test
out
push
adc
movs
or
xchg
addr16
leave
push
fst
add
bound
movs
push
cmp
movs
imul
adc
mov
cmps
sbb
shr
fs
and
mov
and
pop
xchg
push
lock
stos
adc
inc
cmp
mov
pop
push
test
push
mov
jns
cmp
xlat
std
or
ret
sahf
jp
(bad)
pushf
movs
into
xchg
test
arpl
or
mov
fs
retf
inc
imul
push
xlat
pop
mov
ja
fsubr
int
xchg
enter
leave
add
sbb
inc
xor
cdq
fs
push
inc
and
repz
cs
jmp
dec
fsubr
xor
lods
dec
imul
aad
fs
or
(bad)
in
inc
xchg
pop
mov
jle
xchg
in
les
ja
mov
mov
(bad)
xor
ins
mov
stos
sub
add
gs
or
sub
sar
xchg
cmp
test
test
push
or
pusha
add
or
mov
lock
dec
inc
cmc
popf
mov
scas
mov
add
mov
push
mov
and
int3
mul
aad
or
cmp
into
pop
xchg
fwait
aas
pop
sar
je
push
ret
sbb
push
add
fstp
xchg
inc
sbb
adc
lods
mov
imul
or
or
fidivr
inc
faddp
daa
leave
mov
repnz
push
mov
or
mov
leave
aaa
xchg
inc
sub
mov
pushf
jno
shr
fstp
fs
std
inc
jmp
mov
sahf
xchg
sbb
dec
nop
or
mov
fwait
ss
adc
shl
sub
mov
lds
retf
das
aam
mov
dec
outs
mov
movs
cmp
es
sub
in
fcomi
fdiv
xchg
mov
fwait
ja
stos
ins
sbb
sbb
xchg
sub
add
jmp
imul
or
push
lods
loope
mov
or
repnz
xchg
xlat
dec
inc
mov
cli
inc
je
rcl
mov
dec
clc
xor
mov
out
and
add
lods
pop
int3
in
dec
dec
repz
mov
mov
mov
mov
pop
mov
cmp
nop
mov
rcr
in
out
push
mov
adc
pop
push
fs
jne
push
mov
nop
mov
jge
cli
test
repz
shr
sar
sub
sub
dec
outs
dec
int
or
or
and
push
push
jp
outs
jo
in
mov
cmp
add
xor
imul
repz
in
dec
jl
clc
enter
jbe
shl
imul
cmps
movs
rcl
inc
jnp
aaa
push
sub
or
push
repnz
outs
imul
pop
(bad)
push
push
test
or
pop
pop
loopne
arpl
popa
lods
out
outs
adc
std
pop
dec
aam
adc
mov
fnsave
(bad)
mov
xor
lods
sbb
xchg
xchg
and
test
jge
xchg
push
ss
dec
ror
repnz
fidiv
leave
loope
mov
mov
adc
cmps
les
out
dec
xchg
mov
mov
pop
dec
lods
into
mov
jnp
int3
mov
pusha
(bad)
dec
push
fisttp
ja
gs
pop
lods
adc
fcomp
lds
outs
sub
cmp
out
fst
inc
adc
je
jmp
data16
pop
(bad)
adc
(bad)
(bad)
inc
fbstp
sbb
mov
lahf
dec
cs
fidiv
pop
aad
ret
add
out
outs
mov
and
add
stos
outs
ficom
outs
mov
sbb
neg
sub
cmps
jno
xor
add
adc
sbb
xchg
lds
lahf
fisttp
push
mov
in
ret
cld
mov
jmp
add
lea
mov
mov
je
add
pop
sub
leave
inc
and
fs
add
push
cmp
sub
ret
fs
aas
sti
data16
cmp
fisubr
out
cmps
and
mov
pop
repz
or
sub
clc
mov
lds
popf
push
dec
inc
cmovl
adc
xor
mov
repnz
lods
aad
dec
loopne
mov
ja
daa
jecxz
stos
out
add
and
push
dec
xor
stc
arpl
pop
and
xor
xlat
je
pop
sub
loopne
shl
add
arpl
inc
fnsave
or
(bad)
mov
rcr
inc
mov
sub
dec
mov
test
inc
(bad)
push
ss
or
pop
test
movs
(bad)
enter
pushf
mov
pop
fiadd
in
adc
mov
shr
fsubr
and
lds
fisttp
(bad)
out
sbb
inc
inc
rcl
outs
jg
xor
cmp
or
rol
ja
jle
loop
aas
or
sub
adc
repnz
xor
add
xchg
jbe
mov
push
aas
vmovapd
sbb
stos
int
inc
add
jbe
sub
jl
lds
int3
and
mov
xor
push
stc
cwde
push
les
call
pushf
fldcw
add
add
sbb
xor
and
mov
jnp
into
cdq
mov
adc
call
xchg
sar
out
jo
push
inc
dec
dec
lods
push
inc
and
jl
scas
dec
sbb
mov
fistp
sub
add
ror
imul
repz
and
xor
ss
and
pop
(bad)
shr
jg
stos
cmovle
add
cmc
ins
stos
mov
loope
mul
and
sbb
cli
jmp
rcl
fisub
xor
dec
sbb
pop
movs
adc
pop
or
or
sti
jmp
popf
sbb
xchg
xchg
inc
popf
xlat
stos
sbb
jmp
push
sbb
movs
mov
xor
clc
and
pop
push
imul
sub
mov
jo
(bad)
jo
sbb
xchg
jns
cmps
dec
push
ss
in
popa
bound
ror
mov
mov
pop
fwait
cmps
push
rcl
add
je
and
stos
stos
fmul
dec
lods
push
nop
or
xor
or
scas
pop
out
dec
mov
dec
(bad)
int3
fadd
test
test
push
repnz
cmps
retf
loop
dec
or
or
add
cld
aam
rcl
mov
sub
or
ja
iret
fistp
into
mov
add
sub
xchg
mov
xchg
sub
out
pop
sub
and
pop
xchg
in
and
add
popa
test
pusha
test
inc
fisub
cmp
push
push
popa
stos
ins
loope
push
inc
mov
call
cs
mov
cmps
scas
jge
imul
pop
lock
aad
aam
imul
out
sub
adc
mov
jns
rcr
cmp
retf
mov
xor
into
inc
gs
inc
nop
out
ins
jns
and
ja
cmp
xchg
cmp
in
or
mov
cmp
dec
jae
mov
jle
fsub
jge
xor
in
or
(bad)
stos
rcr
sbb
gs
add
lds
and
hlt
adc
mov
cs
cdq
popf
and
or
sbb
dec
and
mov
loop
jle
shl
mov
sti
cmp
dec
shl
arpl
shl
pushf
in
loope
jnp
retf
ins
dec
pusha
xchg
ret
arpl
cmp
dec
push
addr16
dec
and
shl
push
loope
jle
push
fst
xor
jmp
xor
cmp
cmps
repnz
pop
in
xor
mov
add
call
adc
mov
icebp
inc
dec
xlat
pop
mov
fisttp
ror
popa
push
leave
pop
jg
cmp
push
sbb
stos
aas
dec
cmp
aas
stc
addr16
pop
push
and
loopne
in
bound
scas
jb
mov
retf
jns
mov
bound
sbb
stos
movs
icebp
fsub
jmp
xchg
aaa
add
leave
mov
mov
xor
leave
ret
movs
and
xlat
repnz
(bad)
loop
xor
mov
inc
cmps
les
ror
mov
jno
addr16
scas
push
xchg
mov
ret
out
jbe
cli
push
push
icebp
mov
mov
sub
call
pop
jecxz
dec
call
nop
hlt
mov
xor
xchg
loopne
push
ret
and
and
ds
ffreep
and
or
push
mov
dec
sub
ficom
sti
add
and
push
data16
shl
popf
rol
pop
jecxz
or
ret
(bad)
mov
je
shr
dec
cmps
inc
inc
cmp
frstor
push
sub
fidivr
stos
clc
ds
dec
inc
rcl
or
mov
call
aas
movs
mov
mov
dec
stc
ins
inc
sbb
pushf
cmp
jb
and
inc
bound
(bad)
imul
mov
and
mov
in
mov
ret
sbb
bound
adc
cmps
sbb
jp
ds
cmp
in
fisubr
aad
push
jno
test
repz
fld
mov
enter
add
pop
imul
mov
mov
(bad)
sub
call
icebp
xchg
mov
fstp
in
(bad)
neg
jmp
je
iret
sub
sub
iret
and
cdq
lods
sub
inc
loop
xchg
cmps
mov
sub
inc
mov
ret
or
data16
lods
call
mov
jle
jle
idiv
shl
adc
div
add
ret
outs
pop
or
add
add
sub
adc
sub
pop
and
add
add
xor
inc
scas
pop
and
adc
adc
mov
push
and
add
pusha
fadd
inc
stos
or
rol
or
pusha
pop
or
sbb
push
cmp
mov
sbb
nop
add
add
(bad)
ds
jno
cmp
xor
icebp
(bad)
out
das
aas
push
add
mov
and
pusha
push
or
xor
xor
ss
cmc
data16
test
adc
pop
aas
test
lods
outs
push
push
push
inc
adc
pop
test
in
test
add
scas
inc
and
adc
xor
add
pusha
xor
push
fadd
add
push
hlt
and
add
push
sbb
xor
sub
xor
rol
push
add
pop
mov
test
and
fidiv
idiv
rcl
and
or
add
retf
cmp
cmp
adc
aam
pop
adc
and
dec
add
pusha
inc
fcom
ds
test
mov
fcom
fiadd
jp
ret
inc
sti
add
ror
jno
and
xor
xor
xor
cmp
inc
dec
sub
pop
add
mov
adc
pop
or
adc
mov
imul
add
jb
loope
add
adc
and
ror
xor
adc
mov
xor
push
fadd
push
adc
or
sbb
adc
dec
lea
adc
adc
adc
push
add
pop
adc
add
test
mov
popa
loope
push
call
sbb
add
int3
and
push
jl
mov
aam
inc
push
push
push
inc
or
push
or
adc
or
jp
fmul
adc
shl
adc
mov
ins
movs
retf
push
push
dec
ins
stos
ret
adc
mov
inc
mov
mov
xor
dec
jge
or
and
xor
inc
and
inc
mov
adc
adc
mov
fsubr
rol
hlt
aam
push
xchg
shl
lds
add
and
nop
loopne
jb
shl
xchg
and
xchg
add
jo
or
mov
xchg
adc
ror
push
fstp
aaa
sti
xor
add
inc
and
sub
or
cmp
or
and
xor
test
pop
and
cmps
add
pop
loope
jbe
mov
add
jb
and
add
jbe
push
add
push
inc
add
out
enter
add
sub
mov
and
not
add
add
aam
add
adc
add
sub
inc
inc
ss
sub
jp
cmp
jge
jns
(bad)
jne
pop
mov
adc
adc
xor
inc
rcr
adc
outs
and
add
jne
jno
dec
xchg
pop
jbe
sbb
cmp
xchg
fnstcw
and
add
or
imul
pop
xor
jmp
sbb
in
jb
or
lock
or
inc
add
(bad)
jmp
and
push
dec
and
ror
pop
pusha
xchg
mov
gs
add
jne
add
push
mov
loopne
add
cmp
outs
test
dec
sti
mov
(bad)
add
inc
mov
iret
add
add
rcr
adc
dec
adc
inc
adc
mov
pop
add
inc
add
push
add
cmovno
jl
or
add
and
sub
add
pop
mov
jns
mov
pusha
and
in
fild
inc
rcr
push
fsub
sar
fucomp
ret
mov
imul
cmps
mov
jmp
lock
sub
fild
push
adc
add
(bad)
adc
inc
rol
shl
(bad)
std
add
push
adc
inc
pop
rol
jecxz
add
aad
adc
rol
sbb
aad
ret
fcmovnu
add
rcl
sbb
xor
sub
cmp
adc
lock
sub
repnz
cmp
rol
push
(bad)
rcl
adc
fild
mov
rol
aas
rcl
push
sbb
push
aad
add
adc
(bad)
pop
inc
rol
push
add
inc
mov
sub
aad
jo
leave
or
mov
rcl
fadd
leave
dec
(bad)
mov
rcl
push
add
xlat
adc
add
jge
add
sbb
test
lahf
sub
and
xchg
push
adc
and
aaa
stc
ret
aas
ret
inc
push
push
or
xor
into
pop
xchg
mov
add
or
jnp
or
adc
mov
adc
popa
pop
add
test
adc
outs
push
xor
xchg
arpl
movs
adc
cmps
aaa
mov
sub
push
and
mov
xor
and
sahf
add
je
adc
cmp
mov
pusha
ins
and
sbb
jno
fisub
dec
inc
add
add
rcl
pop
adc
push
sbb
push
add
adc
xchg
and
outs
add
mov
mov
and
mov
jns
pop
sahf
pop
adc
aaa
scas
adc
gs
add
aad
pop
add
add
rol
xchg
in
xchg
add
push
call
add
dec
pusha
dec
push
push
and
push
cmovb
pusha
pop
jno
dec
sub
jo
cmp
or
or
dec
ins
jb
add
add
jo
xor
or
cmp
fisub
dec
jp
adc
inc
fs
xor
or
push
sbb
mov
push
sub
stos
ficom
or
inc
aas
add
xor
dec
or
(bad)
sub
or
dec
cmc
add
loopne
mov
add
cmp
pop
sub
cmp
sbb
add
and
daa
inc
mov
adc
adc
add
cmp
xchg
int
xchg
sub
jno
aam
addr16
jmp
adc
sub
aaa
loope
adc
dec
bound
pop
push
adc
into
adc
(bad)
xor
cmc
sub
xchg
rol
shr
dec
es
hlt
fs
inc
lea
pop
test
xchg
dec
ret
ins
pushf
add
xchg
cmps
pop
and
push
je
(bad)
xor
aaa
out
adc
cmp
les
mov
add
stos
xor
inc
rcr
or
push
push
pop
cmp
push
ror
gs
repnz
aas
add
js
push
adc
mov
add
add
add
add
bound
xor
or
fdiv
xor
or
mov
xchg
xor
adc
cmp
push
push
jmp
xor
fstp
ins
and
push
jo
adc
inc
xor
cli
aas
inc
inc
popa
xor
add
push
les
xchg
fcom
prefetch
push
ja
add
pop
or
es
enter
push
jo
push
or
push
adc
mov
xor
hlt
popf
jb
xor
adc
mov
movs
pop
mov
and
lock
sbb
or
rcr
loope
pop
adc
scas
sbb
and
add
adc
mov
or
add
daa
sub
adc
cmp
sar
pop
adc
hlt
test
push
dec
(bad)
in
and
fsubrp
ja
inc
xor
cs
repnz
xor
fiadd
dec
and
fsub
inc
add
and
stos
cmp
pop
xor
add
popf
adc
and
jmp
and
shr
aam
lock
push
icebp
or
fisub
mov
inc
dec
(bad)
fld
adc
fsub
scas
and
fld
push
aad
jecxz
mov
mov
add
repnz
and
sub
or
inc
rol
sbb
push
sub
add
add
inc
inc
jo
and
mov
mov
shl
in
add
popa
adc
sub
mov
(bad)
shl
mov
sbb
xor
jo
ss
imul
aam
cmp
mov
mov
sub
inc
add
sar
sub
jns
cmp
nop
and
inc
ss
cs
xor
(bad)
fdiv
loop
adc
fist
in
rcl
test
scas
xor
jno
add
add
inc
sbb
cmp
add
hlt
arpl
aad
aas
mov
pushf
das
nop
sar
sbb
add
pushf
das
jo
stc
add
sbb
jno
sub
or
call
add
(bad)
shl
inc
shl
push
push
pop
xor
mov
movs
adc
jecxz
push
push
add
daa
add
mov
add
add
repz
jg
adc
push
add
pop
mov
push
sub
sar
pusha
xlat
add
add
adc
ja
aaa
bound
and
or
pop
sub
xor
xor
add
test
fs
inc
sub
sbb
dec
rcl
push
push
add
xchg
mov
pop
xchg
test
dec
mov
pop
sbb
enter
push
ror
arpl
and
adc
inc
add
mov
mov
icebp
add
cld
xor
push
and
add
add
cs
xor
add
dec
lock
cmp
pop
rol
xor
dec
dec
add
loopne
je
add
ds
jmp
iret
sub
cmp
pop
add
sub
add
xor
adc
inc
loop
or
iret
and
sub
adc
xor
xor
pop
adc
jae
pop
and
or
pusha
out
adc
cmp
cmp
push
and
add
xor
adc
push
dec
push
xor
push
and
adc
mov
sub
xchg
mov
adc
outs
in
adc
mov
aam
(bad)
in
jo
scas
add
pop
out
push
adc
out
xchg
xchg
sub
and
mov
shr
ret
ds
cmp
adc
pusha
fisttp
xor
pop
arpl
cmps
sbb
jecxz
adc
bound
jl
pop
fucomip
ret
adc
jmp
xchg
or
add
jne
push
inc
sbb
adc
pop
and
mov
jmp
push
arpl
fist
mov
and
or
adc
and
loopne
aas
inc
add
and
push
adc
pusha
mov
xor
mov
movs
ins
or
inc
nop
ror
jmp
adc
add
xor
adc
sar
or
or
test
ds
(bad)
(bad)
pusha
rol
sub
and
shl
adc
pop
xor
pop
ss
pop
inc
inc
add
jae
add
mov
shr
adc
pusha
add
add
add
cmp
xchg
out
push
cmp
nop
mov
cmc
xchg
mul
pushf
adc
(bad)
xchg
mov
push
repnz
mov
test
cmps
push
inc
ins
daa
movs
arpl
nop
aas
inc
enter
je
in
inc
shl
and
xchg
and
or
xor
pop
mov
add
pop
push
cmp
call
adc
in
push
mov
scas
dec
mov
push
push
shr
push
adc
and
sbb
pop
inc
add
inc
and
or
lds
out
cmp
add
pop
add
cmp
jle
xor
fiadd
or
push
adc
and
adc
or
sbb
mov
inc
or
enter
sbb
in
cmp
inc
or
aad
mov
mov
es
int
push
push
inc
mov
sub
inc
cmp
sbb
xchg
xor
mov
pop
fwait
pop
adc
(bad)
xor
ror
jns
sub
jle
or
mov
int
in
rcl
adc
add
adc
xchg
jne
inc
jp
and
dec
mov
pushaw
sbb
adc
je
dec
test
dec
test
dec
test
test
adc
fnsave
and
push
in
push
mov
outs
in
leave
mov
cmps
sbb
push
lock
test
or
in
jo
inc
inc
daa
add
add
pop
rcl
jbe
sub
lock
stos
in
and
push
xor
add
push
aam
out
loopne
add
dec
or
dec
and
push
int
jo
mov
aaa
and
lds
sub
xor
add
or
int3
add
out
adc
ret
xor
pop
add
push
pop
or
ret
adc
pop
inc
mov
inc
or
lds
sub
les
dec
mov
jmp
ror
popa
add
and
add
stos
xor
int
sub
add
or
std
into
add
sbb
imul
nop
push
(bad)
enter
je
jns
add
mov
xchg
jg
adc
ss
arpl
sub
and
dec
aas
pop
adc
add
adc
inc
sub
add
inc
cmp
pusha
push
adc
stos
sbb
stos
push
push
loopne
and
fcom
(bad)
mov
add
gs
pop
or
jge
std
out
push
push
adc
xchg
xor
jecxz
xor
icebp
add
aad
or
test
loope
adc
je
or
add
pop
jge
cs
ins
adc
pop
loopne
pop
xor
out
jecxz
mov
loope
sbb
fadd
and
sbb
sub
nop
or
fs
inc
scas
adc
call
dec
xor
and
pop
pusha
xor
add
mov
call
fwait
pusha
dec
js
adc
bound
(bad)
test
mov
adc
and
push
push
sub
ret
push
and
push
mov
add
push
popa
adc
add
xchg
sub
sbb
push
clc
ss
loopne
mov
adc
and
mov
call
ror
adc
or
adc
nop
movups
scas
push
xchg
and
daa
cmp
adc
adc
mov
adc
psadbw
inc
and
adc
inc
push
mov
inc
or
mov
jnp
add
or
xor
or
movs
mov
test
mov
js
xlat
adc
cmp
adc
dec
adc
adc
add
or
adc
and
adc
and
inc
adc
icebp
mov
mov
ds
jo
cmp
jae
push
das
add
xchg
icebp
add
lock
push
cmp
cmp
mov
pusha
ret
and
push
mov
outs
jno
das
xchg
jno
jg
push
sbb
and
add
adc
add
add
ror
adc
(bad)
push
(bad)
fmul
(bad)
inc
xlat
add
cli
jle
sbb
and
arpl
push
mov
add
push
inc
adc
push
push
in
mov
test
inc
add
or
stos
push
xor
dec
xor
xor
sub
sbb
cmp
stc
sbb
jae
jne
sub
mov
push
cwde
mov
sub
test
enter
add
cdq
jno
(bad)
cld
pop
daa
xor
iret
jg
sbb
stos
sbb
or
add
and
call
and
jmp
add
daa
mov
fld
xor
jno
cmp
add
inc
adc
mov
shl
inc
sahf
add
adc
int
add
push
inc
sbb
fmul
push
inc
sbb
hlt
xchg
add
les
rcl
mov
ds
dec
nop
push
ds
imul
aaa
sbb
push
adc
sub
lea
fmul
daa
bound
ret
lods
adc
push
cmps
pusha
shl
lds
bound
ds
cmp
dec
es
ds
push
fmul
bound
leave
lods
and
cmc
sar
sub
sub
jge
clc
push
push
and
jmp
and
sbb
ror
add
cmp
sub
lea
adc
imul
jno
(bad)
lea
or
shr
push
shl
int3
lea
fmul
cdq
mov
and
ins
dec
push
or
adc
mov
push
fcomp
inc
test
ror
pop
loopne
icebp
iret
pop
into
add
add
push
mov
fadd
push
cmc
shr
nop
ror
pusha
iret
lods
hlt
pop
jp
movs
and
repnz
call
add
je
jl
out
xchg
cmp
dec
push
ror
xor
sbb
loopne
cmp
push
rcr
push
in
or
scas
xor
ins
sub
ficomp
push
mov
adc
xchg
adc
cmp
inc
push
mov
(bad)
fcmovu
xlat
int3
pop
or
in
sub
(bad)
adc
push
pop
aam
cmp
fadd
and
rcr
enter
retf
mov
into
mov
fmul
ror
(bad)
pusha
sbb
movups
add
pushf
add
retf
fmul
mov
xchg
stos
push
sub
lea
retf
lods
mov
push
push
mov
movs
retf
jge
clc
add
movs
sar
(bad)
dec
pop
loopne
xor
enter
lods
lods
outs
add
xor
jb
enter
sbb
jns
cwde
sub
fmul
pop
lock
add
push
inc
stos
icebp
jmp
(bad)
or
and
pop
and
lea
mov
jno
add
cmp
sbb
xor
stc
inc
add
stc
inc
add
lea
add
xchg
inc
sbb
push
pusha
retf
clc
add
and
xchg
fdiv
lods
xor
fadd
pop
add
nop
fmul
adc
pop
loopne
adc
or
enter
jge
retf
jl
cmp
mov
dec
push
add
lods
jg
push
lock
dec
push
add
call
add
popa
sub
ins
sub
jp
scas
fsubr
add
adc
enter
je
cdq
fmul
enter
add
add
enter
add
fmul
(bad)
(bad)
les
std
pop
add
cmp
lea
dec
rcr
lods
imul
push
scas
push
dec
push
add
push
adc
inc
push
pusha
xchg
(bad)
lea
nop
fdivr
xchg
icebp
retf
push
cmps
int3
push
and
xchg
rcl
add
aad
cmps
dec
push
loopne
xchg
jmp
pop
fsubr
leave
in
add
add
adc
add
mov
add
push
fmul
sub
lds
(bad)
test
ror
add
lods
dec
sbb
inc
daa
push
loopne
icebp
scas
push
pop
loopne
lea
dec
fcomp
sar
rcr
push
add
push
int3
ins
and
add
or
lea
sub
jnp
mov
(bad)
retf
enter
mov
rol
enter
fcomp
xor
enter
xor
cwde
fmul
enter
xor
sbb
enter
xor
jae
or
cs
jb
sub
ins
pop
add
test
enter
sub
jp
add
enter
sbb
call
sbb
xor
push
sbb
stos
add
sub
fdivr
int3
pop
mov
(bad)
les
add
and
ins
mov
add
dec
ror
sbb
or
adc
or
call
inc
add
jo
(bad)
popa
(bad)
fs
or
clc
fsubr
mov
add
jo
imul
pop
call
jge
add
jo
jae
(bad)
adc
inc
fdiv
cld
add
add
int3
pop
(bad)
in
add
fsubr
jne
fadd
loopne
popf
add
std
pop
mov
jg
and
jge
cld
fmul
dec
mov
pop
cmps
fadd
dec
inc
(bad)
jb
leave
(bad)
hlt
fmul
and
leave
lods
icebp
adc
or
inc
add
lock
inc
loopne
retf
pop
jp
dec
add
pop
call
or
out
jle
addr16
inc
inc
out
aaa
xchg
add
mov
enter
lods
loopne
ins
sbb
int3
dec
loopne
loope
add
sbb
dec
dec
loopne
mov
dec
fadd
mov
mov
pop
int3
dec
loopne
mov
xor
das
fmul
add
fcomp
gs
test
aam
push
dec
inc
int
ins
add
rcr
sub
aaa
jb
pop
xor
aaa
add
pop
dec
inc
loopne
mov
or
jl
cs
dec
inc
loopne
add
dec
mov
bound
retf
mov
(bad)
hlt
add
fmul
jae
icebp
popa
add
sub
sub
fcomp
push
les
int3
ins
mov
sub
int3
lea
data16
pushf
add
cmp
lods
mov
jl
mov
loope
popa
les
push
fwait
(bad)
fsubr
icebp
add
dec
jo
shl
imul
enter
push
dec
xor
push
add
adc
retf
lea
mov
cli
or
(bad)
pop
ret
hlt
add
push
bound
call
add
and
mov
ret
int3
add
push
bound
call
add
pop
dec
add
icebp
ret
ins
movs
add
or
stos
fmul
lea
push
and
dec
jl
popa
mov
inc
lock
adc
adc
(bad)
dec
adc
inc
inc
mov
push
test
sub
cdq
fmul
ret
sbb
xchg
jbe
dec
jo
lea
add
xchg
fmul
xchg
rcr
hlt
add
push
add
cmp
jge
fadd
fmul
pop
adc
sar
fmul
enter
(bad)
fmul
pop
adc
movs
add
adc
mov
sub
dec
jo
or
pop
adc
adc
jge
sub
jo
pop
dec
loopne
xor
rcl
xor
sub
fsubr
sub
jns
add
or
or
jo
or
xlat
or
inc
push
xlat
or
or
sbb
dec
jo
or
push
icebp
retf
rcr
jno
aad
xlat
xchg
add
rol
mov
fsub
dec
rcl
leave
(bad)
xlat
xchg
add
cwde
add
xchg
mov
fadd
or
popa
mov
jo
add
xchg
mov
shl
arpl
xlat
xchg
add
add
xchg
mov
jbe
push
mov
push
inc
pop
loope
lds
mov
pop
fadd
inc
add
or
add
nop
push
icebp
mov
adc
sub
adc
lds
dec
sbb
rol
push
xchg
add
or
mov
dec
lock
push
dec
(bad)
and
outs
or
or
jo
or
push
add
sub
lea
inc
mov
pop
push
add
ins
dec
add
dec
adc
inc
fmul
inc
adc
ins
(bad)
in
inc
shr
retf
fmul
cmp
adc
fdiv
mov
inc
and
or
outs
or
or
outs
or
push
inc
popa
icebp
bound
push
(bad)
fdivr
ret
lea
hlt
bound
sub
aam
lea
bound
or
adc
and
daa
fsubr
popa
sub
add
adc
fcomp
lea
add
fcomp
inc
popa
shl
xor
add
adc
fdivr
ror
fidiv
pusha
adc
or
add
adc
(bad)
sar
lock
fsubr
loopne
add
pop
add
pop
cwde
fcomp
loope
or
test
xor
fmul
dec
adc
retf
pop
jp
nop
add
pop
stos
inc
or
shr
out
inc
nop
inc
popa
add
fmul
inc
jo
lods
push
adc
dec
fadd
inc
push
inc
popa
or
fsubr
out
or
sub
adc
add
pop
add
ror
cmp
dec
popa
test
lock
sti
adc
fdiv
mov
jge
adc
add
fdivr
xchg
xlat
mov
pop
iret
lea
sub
or
or
adc
or
iret
lea
ficomp
ror
cmp
add
and
xchg
adc
ins
or
out
not
add
xor
adc
fadd
inc
add
fcomp
lea
add
fsubr
ficom
push
fst
mov
mov
inc
(bad)
mov
pop
aam
(bad)
rol
fcomp
or
jo
mov
jp
lea
dec
cmp
sbb
rcl
mov
fadd
aaa
rcl
adc
add
inc
icebp
cmp
enter
mov
aam
lods
int3
adc
xchg
shl
pushf
xor
add
add
js
adc
lds
mov
aas
xor
lods
popa
rcl
xchg
inc
mov
pop
xchg
mov
cmp
add
add
push
fadd
dec
add
mov
shl
je
fadd
mov
mov
out
push
cmp
lea
mov
or
cmp
ret
ins
pusha
add
sbb
lea
scas
fcomp
cmp
jo
sar
dec
scas
fmul
xor
loop
cmp
jmp
stos
outs
pop
cmp
clc
add
pop
enter
add
push
retf
add
hlt
int
rol
adc
fcomp
test
push
pop
cmp
jmp
cwde
add
cmc
cmp
lds
pop
lds
cmp
and
ins
dec
xor
mov
and
xchg
fmul
xor
leave
lods
xchg
and
xchg
fadd
xor
sub
int3
jge
xchg
mov
xchg
pop
sub
ds
mov
dec
sub
mov
add
pop
jno
outs
push
sub
stc
push
inc
test
movs
loopne
and
jg
mov
add
add
jge
or
pusha
and
add
adc
and
and
out
je
and
add
inc
les
cmp
ds
lds
cwde
dec
loopne
loop
sbb
inc
pop
add
stos
ret
inc
shr
nop
sub
add
and
sub
inc
mov
dec
xor
add
mov
add
lds
push
enter
xor
add
sub
pusha
add
or
or
inc
push
(bad)
mov
or
pop
xchg
(bad)
jmp
mov
push
sti
mov
or
xchg
mov
rol
jb
gs
add
mov
xor
mov
in
mov
(bad)
xchg
add
stos
xor
std
adc
sbb
fdiv
cs
jg
xor
jg
push
mov
rcl
dec
test
adc
out
adc
or
rol
add
mov
shl
mov
mov
xchg
adc
push
cmovae
(bad)
xchg
add
and
add
icebp
and
inc
in
xchg
add
mov
add
sbb
daa
adc
jg
xor
add
pop
add
outs
mov
push
mov
fdiv
rol
mov
cmp
mov
aaa
das
sbb
scas
adc
inc
or
inc
adc
sbb
xchg
pushf
inc
xchg
cmp
arpl
xchg
sub
adc
and
xor
push
ins
adc
and
mov
push
das
adc
int
imul
leave
adc
stc
mov
add
add
or
add
dec
pop
loopne
or
enter
adc
call
mov
add
xor
stc
add
pushf
pop
addr16
sbb
pop
and
and
mov
inc
aad
call
add
add
mov
cmp
jae
sbb
rcl
pop
add
mov
mov
out
mov
je
push
repz
cmp
adc
sub
pusha
push
sub
fcom
mov
add
dec
repnz
mov
cli
adc
inc
mov
inc
or
call
pop
sub
dec
das
call
das
sub
shl
push
sub
push
(bad)
cmp
bound
and
sub
sbb
add
xor
xor
pop
mov
sar
push
imul
sub
mov
mov
es
add
sbb
or
dec
leave
push
add
loop
mov
push
and
or
cdq
add
jb
rcr
adc
or
add
adc
mov
add
or
loopne
(bad)
sbb
test
ror
sbb
jae
sbb
jmp
xchg
jnp
pop
add
adc
leave
jo
and
bound
mov
xor
sub
sub
xadd
push
imul
movs
rcl
popf
sbb
(bad)
sti
mov
push
adc
push
or
and
bound
add
in
and
in
jecxz
or
dec
push
out
std
nop
mov
pusha
or
pusha
lds
add
out
sbb
dec
adc
pop
add
mov
add
and
or
or
add
ja
add
pop
adc
adc
loop
popf
call
(bad)
(bad)
cld
mov
pop
or
sbb
and
cmp
or
mov
sub
sub
fadd
int
mov
or
ret
and
dec
out
xor
add
jnp
push
jno
pop
not
cmp
push
dec
mov
dec
or
cdq
inc
or
adc
lahf
and
add
mov
mov
adc
retf
jnp
or
inc
cmp
pop
push
add
and
push
adc
sbb
adc
dec
smsw
sbb
rol
rcr
sbb
adc
pusha
fild
jg
and
inc
fucomi
rcr
in
jb
fadd
sbb
xchg
jecxz
in
xchg
int
add
dec
sahf
(bad)
pop
inc
add
add
repz
pop
push
repnz
add
pop
int3
or
pop
stos
mov
stos
adc
or
rol
ret
add
or
sub
adc
adc
add
add
add
lds
jmp
pop
dec
or
ret
pop
imul
into
cmc
scas
cmp
and
push
vphsubwd
in
in
fiadd
push
or
mov
out
mov
lock
call
sbb
pop
sub
test
clc
pushf
test
hlt
ret
outs
test
repz
out
fsubr
outs
add
or
das
test
mov
and
into
mov
movs
repnz
rol
sbb
popa
sar
lock
or
ins
pop
shl
rcr
or
lods
gs
fcmovnbe
fsubr
adc
mov
mov
std
sahf
cli
push
cmp
mov
nop
dec
nop
xchg
repnz
sbb
dec
arpl
cmp
pop
mov
dec
imul
or
adc
pop
int3
aad
add
cs
push
xchg
in
push
call
stos
and
fdivr
mov
mov
adc
push
retf
sub
push
or
test
pop
(bad)
fstp
js
aad
ins
jp
mov
pop
cmp
cmp
cs
lea
add
aam
or
neg
jmp
(bad)
das
fdiv
dec
or
aas
dec
dec
or
ss
addr16
jmp
bound
add
xchg
add
int
daa
test
inc
mov
faddp
dec
iret
(bad)
lods
or
fs
dec
arpl
shl
ret
les
or
sbb
mov
call
fadd
jg
adc
or
jnp
add
sub
dec
inc
pop
add
adc
pusha
xchg
out
scas
paddd
(bad)
and
enter
dec
mov
xchg
std
retf
add
sub
pop
and
push
in
jnp
fidivr
pop
pusha
movs
cli
jmp
in
icebp
dec
std
mov
dec
(bad)
xor
push
pop
pop
pushf
inc
(bad)
int3
ficom
fsubr
inc
lods
mov
test
or
mov
dec
push
aaa
cmp
dec
add
cmovnp
dec
scas
dec
outs
out
add
dec
inc
test
or
addr16
adc
adc
fwait
ds
add
in
int
push
cmp
xchg
ins
inc
es
cmp
cmp
(bad)
stc
inc
pop
add
outs
adc
shl
xor
jbe
jge
retf
xchg
push
sbb
retf
xor
pop
jmp
jo
hlt
sub
inc
cmp
cmp
repz
cs
adc
push
test
fimul
cmp
or
enter
in
es
lea
pop
shr
ss
inc
imul
(bad)
and
ret
(bad)
(bad)
gs
unpcklps
pmulhuw
jl
xchg
cmps
sbb
stos
mov
outs
jmp
mov
shr
jns
in
nop
push
loop
mov
test
(bad)
imul
jge
dec
mov
mov
hlt
rol
mul
mov
sub
xchg
xor
inc
xchg
fisub
jp
fistp
dec
inc
retf
add
pusha
std
pop
mov
fs
mov
imul
push
inc
ret
or
push
or
mov
push
jns
int
cmps
lods
push
cwde
jnp
pop
xchg
inc
rol
sub
xchg
aas
pushf
fldcw
xlat
icebp
dec
jecxz
sahf
adc
inc
xchg
xor
pop
repnz
mov
jp
je
fstp
adc
scas
adc
adc
cs
dec
dec
jp
ds
int
ret
cld
xor
xor
cmp
jp
sbb
jecxz
shr
sub
scas
sbb
shl
outs
and
sbb
mov
dec
ss
mov
imul
clc
mov
loopne
adc
arpl
sub
popf
jno
and
and
cmps
arpl
daa
fild
ss
jnp
pusha
jb
and
pop
dec
inc
dec
fistp
cdq
dec
xlat
icebp
and
dec
clc
and
sbb
popf
aas
pop
std
ss
repz
push
call
and
mov
mov
daa
inc
pop
sub
add
add
add
retf
pop
bound
push
xchg
sub
xchg
cmp
or
test
adc
in
jle
mov
outs
add
stos
(bad)
adc
repz
cmps
rol
cmps
imul
stos
jne
aad
jb
rcl
mov
inc
cmc
add
mov
jno
scas
sub
popa
clc
push
jno
sub
sbb
shr
not
and
mov
stos
hlt
(bad)
lods
bound
push
out
out
sbb
cmp
push
xor
mov
cmp
out
les
pop
xchg
mov
mov
imul
adc
retf
outs
xor
and
xor
sar
adc
call
cmp
dec
push
cmp
jbe
dec
aam
push
loopne
mov
xlat
and
test
call
mov
ss
sbb
mov
or
ins
movs
fidiv
push
int
sbb
dec
sahf
and
xchg
fist
std
fldcw
into
mov
push
add
cmp
add
jb
aad
pop
xchg
or
mov
ds
xor
pop
imul
scas
pusha
iret
mov
push
cmp
popf
dec
sbb
adc
cmp
iret
std
jmp
xchg
fnstcw
adc
jp
mov
(bad)
sbb
jo
jg
push
lods
rol
or
cdq
(bad)
imul
cmp
push
movs
cwde
movs
xchg
mov
lahf
push
jle
ret
je
mov
pop
test
mov
or
sbb
lods
adc
lea
jp
imul
int3
ret
cli
lods
adc
fs
sbb
imul
add
clc
ret
ja
fwait
cmp
int3
lock
cmpxchg
pop
data16
or
mov
jmp
popa
mov
in
sub
popa
jmp
sbb
test
sub
popa
mov
cli
jmp
sahf
push
mov
outs
lods
ja
mov
loope
xchg
push
xchg
fmul
dec
push
fsub
cmp
shl
xchg
mov
xchg
mov
cmp
(bad)
retf
push
enter
sbb
fisub
aaa
mov
push
pop
stc
ror
jl
sti
es
ins
cwde
fcom
xchg
nop
outs
popf
inc
push
jnp
fwait
or
add
test
dec
enter
jbe
inc
dec
stos
mov
or
push
pop
dec
mov
(bad)
xor
and
push
sar
lds
xor
cmp
lds
pop
scas
mov
inc
sbb
adc
cmc
fstp
sbb
or
pushf
loop
pop
fwait
pop
(bad)
(bad)
adc
jb
fsubr
hlt
mov
xchg
cli
test
out
popf
jo
jle
mov
cmp
scas
and
inc
cmp
add
jg
adc
push
addr16
sbb
cmp
dec
mov
mov
fstp
dec
aam
mov
jno
clc
dec
aam
and
push
repz
mov
popf
jno
mov
aad
enter
out
mov
xlat
jnp
inc
bnd
dec
dec
xor
sub
dec
and
sub
jl
js
sbb
(bad)
icebp
leave
lea
mov
add
out
xchg
in
shl
push
sbb
fcmove
cmp
mov
mov
pop
cmp
adc
mov
std
sti
stc
stos
mov
repz
(bad)
je
cld
mov
add
jmp
lds
mov
xchg
jecxz
call
sahf
popa
dec
jne
ins
adc
xor
jecxz
lods
push
push
lds
push
es
mov
imul
and
cmp
mov
xchg
mov
scas
scas
js
scas
data16
mov
jb
dec
je
mov
or
jp
cmps
xchg
outs
idiv
and
popa
and
inc
test
inc
jmp
(bad)
push
adc
out
cmp
xchg
adc
dec
movd
sub
(bad)
dec
dec
cmp
sbb
clc
je
idiv
pop
inc
pop
inc
push
jno
rol
bound
inc
int
fisub
push
cld
jb
movs
ss
inc
fxch
jmp
pop
jl
mov
cmp
push
xchg
aad
jg
add
call
(bad)
rcr
loop
pop
stos
icebp
cmp
dec
in
mov
push
in
push
push
pushf
adc
jae
inc
in
jg
dec
(bad)
lock
rcl
dec
inc
pop
popa
push
xor
adc
push
xor
fld
jmp
cmp
sub
mov
mov
rcl
sub
jecxz
ja
aad
lods
loop
std
push
movs
data16
sub
call
ret
out
das
mov
mov
leave
ret
not
dec
mov
test
inc
pushf
mov
addr16
push
dec
cmc
mov
mov
mov
jg
in
push
or
push
push
test
push
mov
adc
xchg
ret
ret
jmp
in
cmp
xor
sbb
jle
adc
and
call
sbb
cmps
mov
jns
xchg
imul
into
or
int
inc
push
push
sub
mov
loope
jne
mov
xor
je
xor
or
movs
adc
add
scas
jb
pop
mov
sub
setle
imul
mov
ins
rol
bound
xchg
inc
int3
fild
in
les
mov
rcl
xchg
stos
xlat
pop
(bad)
mov
jmp
jle
pop
cmc
sbb
push
xor
cmp
int
mov
into
hlt
cdq
iret
jg
std
and
(bad)
movs
jp
pushf
test
xlat
sbb
push
out
(bad)
jmp
jg
inc
out
pop
xor
sbb
mov
stc
xor
or
cmp
push
call
cld
jl
cld
imul
mov
fmulp
fldcw
mov
(bad)
(bad)
pop
mov
cld
pop
out
ret
mov
inc
jge
xor
retf
or
jmp
iret
jg
enter
pcmpeqb
in
ins
(bad)
repnz
jecxz
lea
int
xor
xchg
dec
sub
jge
inc
sbb
mov
jnp
mov
xor
inc
fistp
pusha
cmc
sub
leave
cmpxchg
adc
mov
xchg
xlat
adc
dec
xchg
inc
loopne
xchg
pop
cmp
adc
shr
adc
add
xor
mov
cwde
dec
jne
cmp
dec
jge
js
movs
fild
add
mov
enter
sub
sbb
push
repz
or
mov
je
or
mov
xchg
push
pusha
sbb
shl
jecxz
ret
xor
inc
aad
pop
lods
xchg
ds
(bad)
call
jmp
dec
dec
arpl
jge
add
adc
cmp
mov
mov
(bad)
xchg
and
jg
lock
aad
fcomi
cmc
jne
jbe
sub
cmp
sub
cmp
jmp
repnz
nop
mov
retf
sub
rcl
mov
mov
mov
call
popf
out
dec
adc
push
mov
sbb
imul
xchg
div
adc
jg
xor
adc
mov
add
data16
retf
int3
pop
aad
cdq
cmps
fcomp
jb
pop
push
nop
fcom
mul
loop
jnp
inc
pop
adc
aad
mov
shr
cs
jg
jne
js
push
xor
mov
xor
push
pop
jmp
push
fxch
and
imul
jecxz
lods
push
fstp
mov
mov
lock
push
xor
or
(bad)
jno
dec
cmp
ja
retf
inc
addr16
js
xor
cmp
cli
push
(bad)
cmps
push
xor
inc
das
mov
mov
das
push
push
or
mov
aad
xchg
and
test
xor
mov
inc
(bad)
pop
or
push
hlt
cdq
test
add
(bad)
jecxz
add
jp
out
cmp
fcmovnb
mov
jb
sub
mov
mov
pop
(bad)
add
icebp
adc
jl
jecxz
pushf
dec
in
ss
cmp
in
sbb
sbb
fcomip
test
cmp
mov
leave
xchg
mov
fstp
adc
pop
ret
mov
ss
fs
bound
retf
mov
and
in
out
cmp
loop
adc
mov
cmps
cmp
lods
adc
jns
mov
retf
aaa
pop
movs
scas
xchg
mov
not
imul
hlt
pop
jb
inc
mov
test
cld
movs
add
or
pop
mov
cld
mov
push
loopne
xchg
clc
call
mov
xor
or
(bad)
int
mov
sbb
cmp
push
repz
call
jo
dec
aas
ins
test
mov
mov
data16
mov
pop
cmp
lock
inc
xchg
adc
push
xchg
or
(bad)
adc
push
add
dec
push
sub
pop
or
imul
push
inc
sar
mov
add
es
fdiv
fisub
xor
out
aam
stos
inc
push
jb
dec
inc
sti
dec
aam
xor
rol
inc
jp
ins
in
addr16
xor
add
add
sub
data16
inc
aas
adc
mov
dec
(bad)
mov
dec
sub
jecxz
xor
sbb
(bad)
(bad)
gs
stc
pushf
mov
jmp
jbe
jge
sub
and
xor
mov
(bad)
aad
add
cmp
xor
jp
push
fcmovbe
sahf
(bad)
cmp
(bad)
xchg
lea
add
loope
cmp
scas
inc
std
push
je
mov
add
sub
iret
lock
jmp
cmp
outs
jge
jmp
add
ins
ds
xchg
sub
cmp
jp
fcomp
cmps
test
movs
fadd
xor
xchg
inc
sbb
jae
xchg
add
pushf
fld
test
(bad)
ss
sbb
pinsrw
jnp
mov
nop
ds
sar
pushf
pop
into
dec
cmp
(bad)
and
mov
sti
icebp
inc
hlt
int3
pop
push
push
data16
out
xor
or
bnd
or
jnp
jnp
push
pop
leave
aad
and
lahf
int3
jle
(bad)
(bad)
jl
sub
in
fstp
pop
or
cmps
(bad)
inc
pop
scas
mov
push
mov
cwde
aad
push
adc
inc
pop
jecxz
fld
test
ror
daa
sbb
ja
outs
test
or
mov
jle
sar
jge
(bad)
xchg
icebp
aam
dec
dec
ins
popa
test
imul
jmp
jmp
data16
pop
jecxz
lahf
sub
fdivr
and
sbb
icebp
inc
adc
jbe
mov
mov
div
retf
fcomi
(bad)
sti
stos
aas
enter
retf
test
pop
jno
stc
dec
xchg
test
or
push
cli
outs
sbb
mov
jne
jg
fsub
lds
sbb
mov
pop
outs
icebp
add
xor
adc
mov
mov
cdq
inc
pusha
push
cmc
add
retf
inc
iret
cdq
(bad)
jmp
test
mov
aam
imul
in
sub
test
icebp
push
in
test
ja
nop
rol
fdiv
sub
popa
push
sub
xor
mov
daa
into
les
sub
scas
dec
adc
test
(bad)
call
mov
sub
nop
sar
mov
push
fdiv
cmps
(bad)
jg
popa
daa
fnstcw
jp
adc
xchg
cmp
jecxz
dec
call
pop
lds
cmp
push
movs
jge
sub
daa
mov
repnz
mov
dec
cmps
les
movs
xor
mov
inc
(bad)
jg
stos
cli
dec
sub
cmps
xchg
pop
arpl
xor
or
add
xchg
ins
dec
mov
add
bswap
pop
push
js
lea
test
push
cdq
out
call
jl
pand
push
xor
test
cld
push
adc
lock
cmp
or
xor
xchg
retf
daa
cmp
pop
or
test
cdq
push
jp
adc
jns
pushf
pop
xchg
push
mov
cmps
ja
mov
mov
and
daa
cmp
pop
(bad)
adc
push
dec
sbb
into
pushf
dec
mov
pop
cmp
bound
sbb
add
inc
inc
pop
in
and
or
lahf
cwde
aam
mov
test
aas
add
iret
fwait
mov
in
stc
mov
call
sub
and
mov
fsubr
pop
xchg
jle
push
mov
xor
leave
into
sbb
ss
mov
jo
clc
movs
inc
ret
dec
es
dec
inc
outs
pushf
test
rcl
test
aaa
jae
ficom
push
pop
pop
jg
iret
cmps
and
mov
hlt
outs
inc
scas
in
push
cmc
xor
and
xchg
mov
xchg
xor
arpl
fsubr
loopne
xchg
aaa
jb
mov
(bad)
xchg
mov
mov
sbb
jecxz
cld
mov
jmp
jbe
nop
mov
push
stc
xchg
mov
xchg
xchg
push
std
pop
jb
sbb
std
sbb
movs
dec
push
jmp
mov
mov
sbb
adc
pop
sub
retf
sub
mov
and
scas
gs
sub
adc
aaa
mov
jge
xchg
adc
fcmovnb
push
les
xor
inc
mov
call
js
arpl
adc
mov
enter
mov
js
test
mov
adc
stc
xchg
mov
sti
outs
inc
inc
mov
push
pop
cmp
inc
movs
fadd
data16
xchg
mov
mov
push
test
xor
imul
mov
sbb
ds
push
adc
inc
stos
dec
in
sub
pop
loopne
push
cmp
ds
add
sub
mov
pop
sub
push
std
sbb
cmp
xchg
mov
int3
jmp
mov
bound
or
fistp
lahf
outs
mov
mov
pop
in
or
dec
fsubr
neg
inc
push
clc
xchg
je
xchg
stc
fldenv
jge
adc
pop
and
xchg
sbb
std
push
mov
clc
xor
mov
cld
sub
out
cli
adc
pop
jle
addr16
outs
scas
and
(bad)
inc
xor
loope
push
adc
sub
mov
cs
sub
cwde
popa
inc
lahf
pop
or
xchg
daa
inc
lods
(bad)
dec
cmp
jmp
addr16
add
adc
fimul
enter
aas
sub
add
dec
aas
inc
cdq
bound
mov
cmps
pop
jnp
adc
xchg
xacquire
xor
mov
data16
sub
mov
push
iret
push
push
jg
and
push
cmps
xchg
in
fwait
jno
mov
out
jp
cmp
jbe
out
cmp
pop
das
jbe
jg
mov
loopne
idiv
mov
repnz
in
in
mov
and
lds
hlt
jo
out
ds
and
into
fst
add
push
sub
mov
scas
retf
jne
jbe
jle
push
jns
out
push
push
cld
leave
pushf
add
data16
and
mov
inc
pop
retf
stos
retf
cld
out
adc
into
pop
dec
jo
(bad)
clc
loopne
push
add
or
out
rcr
dec
jg
jecxz
icebp
jmp
dec
outs
in
jmp
cmps
pop
(bad)
xor
or
ins
fidivr
movs
xchg
ror
mov
adc
fst
adc
jle
lods
xor
ja
fucomip
inc
lods
jmp
outs
arpl
sahf
cmp
pop
xchg
inc
mov
arpl
pop
out
nop
cdq
xchg
mov
retf
mov
cmc
jae
mov
lods
xchg
lods
xor
cld
mov
shl
jns
jae
cli
cmc
add
push
cmp
mov
test
lea
adc
mov
mov
mov
pop
pop
mov
packuswb
mov
mov
sub
lea
outs
ret
sbb
jnp
mov
add
lods
test
mov
sbb
mov
jl
jg
daa
and
arpl
push
retf
jns
test
out
repnz
push
jns
inc
mov
rol
mov
retf
adc
and
test
repz
sbb
jge
es
mov
in
fisub
iret
rcl
push
mov
ret
jp
mov
iret
push
sbb
xor
pushf
ret
and
popf
push
inc
out
xchg
outs
inc
mov
and
adc
or
lea
retf
sti
jne
dec
test
sbb
pop
loopne
adc
aad
sbb
repnz
cmp
sbb
mov
inc
xchg
mov
mov
adc
cmp
rcr
dec
das
add
out
(bad)
enter
push
xchg
cs
imul
mov
loop
mov
ds
mov
push
xor
cmp
sar
dec
out
jb
xchg
xchg
dec
add
in
ins
xor
(bad)
cmp
adc
ror
mov
fldcw
mov
in
push
sub
dec
in
xchg
xor
xchg
(bad)
xchg
mov
das
std
ret
xchg
jmp
fldcw
mov
mov
repnz
add
pusha
adc
pop
fdivr
jl
pop
es
sub
loopne
repz
pop
and
xchg
sbb
imul
mov
pop
jge
jle
ror
cdq
pop
mov
or
and
pop
fsubr
mov
in
fnsave
hlt
mov
adc
test
test
ins
(bad)
inc
hlt
fs
sub
inc
int3
out
mov
hlt
test
mov
and
hlt
push
ja
mov
jmp
pushf
xor
push
shl
and
jbe
push
cmp
loop
and
cmc
jmp
fcomp
sti
(bad)
inc
jl
push
push
cmp
stos
mov
jbe
mov
dec
jmp
jmp
inc
inc
mov
xchg
adc
fiadd
sub
daa
jne
pop
outs
into
inc
mov
dec
gs
loope
sbb
int3
sti
stos
scas
add
push
ss
mov
push
out
mov
gs
loop
test
add
(bad)
push
mov
pop
lods
dec
xor
iret
pushf
movaps
push
jae
push
or
jo
jb
mov
fistp
mov
push
sub
jmp
fistp
xlat
add
and
aas
sbb
jge
mov
and
sub
mov
test
jge
std
inc
popa
test
fsubr
pop
xor
daa
es
jmp
jg
pop
mov
add
fwait
clc
sahf
int3
xor
cld
xchg
cwde
xchg
(bad)
(bad)
cmp
add
cmp
int
inc
enter
push
dec
pop
adc
inc
dec
sbb
push
in
pop
mov
ins
add
cmps
pop
pop
pop
pop
or
inc
mov
ss
inc
stos
lods
shr
sub
xchg
mov
fwait
dec
(bad)
shl
push
jbe
sub
nop
xchg
sbb
inc
jmp
mov
mov
adc
xchg
stc
mov
or
mov
dec
xchg
inc
push
xor
xor
sub
test
push
repz
outs
std
jnp
inc
mov
jo
jl
cmp
lds
test
xor
or
add
mov
cs
rcr
fisttp
cmp
or
int
cmp
aam
in
iret
loope
retf
xor
push
jno
ja
mov
jb
sub
sbb
push
das
mov
loopne
pop
fild
mov
push
jno
push
xor
and
fwait
push
xchg
pusha
scas
mov
sbb
or
inc
retf
loopne
mov
stos
inc
sahf
lds
loope
jmp
push
psrlw
mov
mov
test
sbb
div
imul
bound
adc
sub
jb
in
mov
leave
in
or
inc
inc
fmul
mov
and
loop
pop
add
xor
jb
jne
inc
and
mov
sbb
push
stos
mov
sub
scas
addr16
dec
fistp
lock
add
pop
out
add
add
jb
pop
pop
sub
push
ins
dec
cs
mov
hlt
xor
lea
mov
repnz
cmp
push
adc
mul
fwait
cdq
(bad)
cld
xchg
pop
fnstcw
cmps
int3
dec
scas
jle
loopne
lods
outs
bound
adc
ds
retf
retf
inc
fst
popf
sbb
stos
test
enter
fst
mov
or
ins
outs
ror
pop
cmp
das
(bad)
and
xor
sar
repz
mov
adc
add
aaa
mov
sub
mov
xchg
ficom
cwde
mov
popf
mov
fs
jbe
inc
jge
neg
icebp
sbb
cmp
jns
shl
mov
push
cmps
ja
xchg
ja
add
jp
lods
cli
push
movs
dec
outs
in
cmp
add
ds
pop
or
pushf
jmp
les
cmp
test
mov
sub
hlt
fdivrp
fwait
jo
mov
jo
or
dec
aam
pushf
imul
iret
and
ins
sub
sub
popf
add
cld
int3
push
scas
das
movs
shl
lods
inc
nop
leave
jbe
xor
lods
mov
(bad)
rol
mov
cmp
add
inc
mov
(bad)
mov
fwait
and
call
sbb
pop
ret
jl
add
and
imul
fucomip
inc
mov
cli
loop
inc
push
dec
das
call
nop
jecxz
loop
pop
jge
ja
jnp
or
rcl
ss
dec
adc
hlt
daa
dec
cmp
aad
pop
fdivr
sub
mov
cmps
in
outs
sub
fisubr
pop
imul
jnp
xchg
jle
ss
lahf
into
and
or
push
jmp
or
mov
add
pushf
fucomi
or
(bad)
rcl
and
das
or
mov
ds
ss
lea
xchg
xchg
repnz
pop
push
call
push
out
nop
cli
and
add
add
add
movs
in
adc
lds
inc
scas
sar
sbb
push
mov
shl
adc
outs
or
jle
sahf
jmp
lock
sar
mov
ret
mov
and
ficom
mov
enter
das
mov
mov
les
dec
or
cli
ficom
adc
xchg
test
arpl
ins
and
(bad)
rep
cmp
retf
inc
xchg
mov
or
inc
dec
xor
fst
ud2
or
and
daa
pop
sub
sbb
dec
push
data16
mov
in
xor
adc
repnz
loop
in
imul
fwait
das
xchg
outs
sahf
(bad)
sbb
xchg
xor
sbb
and
test
aaa
lock
mov
inc
and
daa
inc
leave
stos
fnstsw
mov
imul
and
test
shl
aas
jb
cmps
mov
xor
or
popf
mov
dec
imul
popa
aad
mov
inc
sub
jnp
xlat
dec
adc
push
xchg
xor
sub
in
and
mov
dec
xchg
lds
pop
sti
ret
dec
mov
retf
xchg
push
jmp
xor
mov
xchg
pop
imul
int
add
xor
xor
mov
jno
xchg
cmp
fst
xchg
jecxz
jne
call
xchg
push
in
outs
fiadd
stc
jnp
xchg
scas
jmp
ror
out
cmc
clc
mov
aaa
push
add
int3
cmps
xor
pop
and
movs
mov
(bad)
fsin
sbb
cmps
stos
lahf
and
jns
scas
pop
adc
rcr
mov
ret
data16
jp
movs
int3
mov
sbb
cmp
mov
sbb
jmp
iret
stc
sti
aaa
dec
aad
int3
js
push
adc
pop
add
sub
jl
jg
xchg
loope
and
das
out
dec
xchg
or
ins
ret
sti
dec
or
fs
int3
aaa
adc
cmp
aas
push
xchg
or
mov
jg
je
xor
not
xchg
mov
push
leave
sub
xchg
cmc
outs
loopne
adc
out
aas
sti
popa
inc
outs
or
xor
(bad)
(bad)
xchg
sbb
(bad)
jae
aas
or
in
shl
jns
inc
dec
xchg
xchg
ror
jns
xchg
fst
jge
mov
lock
cmp
jae
fbld
inc
pop
(bad)
les
loop
push
std
outs
add
mov
xchg
test
cmps
sahf
ror
shl
xlat
in
adc
icebp
mov
mov
fld
mov
pop
inc
inc
(bad)
gs
adc
imul
icebp
cmp
idiv
xor
inc
sub
push
cs
std
adc
dec
lea
fucomi
pushf
add
mov
les
mov
cmp
xor
xchg
cmp
jle
and
ror
cmp
push
mov
mov
sahf
sub
mov
xchg
sar
and
ins
mov
stos
add
mov
add
dec
lods
sbb
loopne
jae
inc
sbb
call
leave
test
xor
fstp
or
mov
xchg
cdq
popa
enter
jne
int3
pusha
movs
movs
pop
mov
mul
movs
int
pop
adc
in
and
shl
jmp
sub
cmp
push
leave
stos
fidiv
sahf
mov
xor
push
pop
or
pushf
sub
cmp
cmp
xor
sub
pop
int3
in
imul
cmps
push
pop
lea
div
imul
fcom
out
xchg
jns
xchg
and
xor
sbb
cmp
and
jle
in
paddw
out
sub
adc
lds
sti
ss
lss
mov
jbe
sbb
lds
stos
or
addr16
inc
repnz
xchg
inc
jns
test
dec
fadd
outs
fild
retf
push
sub
xchg
repnz
ror
mov
repz
mov
xchg
aas
jbe
sub
inc
mov
rol
inc
lods
xor
dec
loope
enter
sub
clc
jae
pop
mov
int3
mov
xor
scas
and
fadd
adc
loope
test
(bad)
push
pushf
addr16
cmps
mov
xchg
jns
aam
fnstsw
or
nop
scas
mov
(bad)
and
cdq
scas
mov
outs
jge
inc
popf
mov
shl
bound
add
add
add
inc
push
clc
and
add
add
lea
add
nop
mov
add
inc
add
shl
(bad)
jmp
smsw
inc
pop
adc
stos
xchg
out
add
add
ror
add
sub
inc
inc
(bad)
rol
add
bound
call
add
mov
add
and
je
adc
in
xor
in
mov
add
add
add
mov
sub
and
push
push
add
push
or
arpl
ret
cld
or
ror
cld
add
sbb
push
fldenv
or
sbb
ins
inc
jne
or
dec
imul
pop
push
ret
or
add
sbb
repz
mov
add
mov
jl
add
push
and
push
and
and
add
push
call
adc
adc
or
jmp
pusha
dec
and
retf
adc
ins
jo
adc
bound
mov
adc
add
jb
adc
mov
pop
add
or
int3
inc
ins
sbb
xor
inc
push
js
mov
sub
adc
push
lds
adc
fst
rcl
xchg
adc
xchg
sub
faddp
cwde
push
sar
push
push
cmps
and
cmp
sar
lods
xchg
pop
adc
shl
fnstsw
cmp
shr
lea
int
ds
pop
int
sbb
test
ror
daa
and
add
adc
mov
or
ins
xor
nop
arpl
je
push
inc
dec
ficomp
inc
adc
push
add
and
dec
rol
push
adc
ror
xchg
and
mov
fld
jo
add
mov
pop
or
mov
(bad)
fmul
xchg
sub
aad
call
inc
sbb
jno
sbb
pop
xor
or
sbb
adc
call
inc
cwde
sbb
fld
add
rol
loopne
push
leave
add
icebp
call
and
(bad)
and
push
adc
inc
je
and
and
sub
xor
fwait
xchg
mov
mov
into
mov
mov
push
fadd
and
or
or
add
and
push
or
push
mov
push
mov
inc
add
rcl
adc
leave
arpl
ficomp
not
add
adc
repz
or
lar
adc
xchg
cli
movs
add
int3
add
inc
ror
or
inc
mov
pop
aaa
adc
jno
dec
adc
lods
inc
push
push
or
pop
jo
jecxz
or
jno
pop
mov
or
add
jle
mov
(bad)
push
adc
jmp
dec
xchg
inc
sub
mov
sbb
add
lahf
cmp
ret
sub
xor
(bad)
pop
push
rcl
push
sub
mov
call
adc
pop
cdq
and
or
lock
push
xor
pop
out
inc
push
scas
pusha
sar
and
add
push
rcr
add
pop
shl
adc
fdiv
adc
ja
or
shl
xor
mov
xor
pusha
inc
or
sbb
movs
lock
jecxz
adc
bound
and
add
push
lea
add
add
out
xor
ror
jo
or
adc
jp
cli
sub
inc
xor
pop
test
nop
(bad)
pop
mov
or
mov
hlt
pusha
std
pusha
psubsb
xchg
push
adc
add
jo
scas
inc
xor
out
inc
mov
add
ins
push
(bad)
fwait
dec
and
or
adc
and
or
pop
into
add
cmc
pusha
aam
imul
mov
adc
xor
ds
sti
or
sbb
or
jecxz
push
cmovnp
add
mov
push
mov
push
or
mov
mov
jbe
mov
js
add
call
addr16
or
fcomp
xadd
outs
lock
jle
das
sub
sub
ins
ss
push
jno
sbb
add
fnsave
xchg
bound
icebp
inc
cwde
in
add
dec
leave
push
push
sub
icebp
add
cmp
rcr
inc
imul
and
jae
xor
mov
cmp
and
or
or
(bad)
or
push
xchg
in
rol
add
and
add
rol
jnp
add
imul
outs
or
retf
or
retf
adc
test
bound
and
or
add
lea
popa
add
jb
jnp
xor
test
jmp
inc
push
adc
push
and
add
(bad)
in
xor
pop
xlat
add
pop
cmp
jae
push
push
aas
mov
les
xor
xor
test
je
popf
lods
call
adc
xchg
adc
dec
inc
pop
shl
and
cmps
sbb
or
cmp
sub
jne
pop
test
or
repnz
pcmpgtb
aam
adc
not
adc
or
mov
pop
sub
(bad)
sbb
sti
out
cmp
into
or
popa
ins
or
inc
sbb
jne
sub
pusha
pop
jmp
test
aam
mov
pop
mov
cmp
lahf
mov
jb
sbb
jb
xchg
or
imul
imul
xor
(bad)
xor
pop
and
inc
push
inc
mov
xor
fs
and
and
lock
rcr
aas
mov
mov
movups
dec
pop
xor
inc
ret
cdq
pop
adc
mov
aas
sbb
and
push
adc
fst
and
and
add
adc
pop
lds
out
loop
fld
mul
ja
iret
xchg
adc
adc
sub
adc
adc
jl
adc
cmove
aad
push
push
inc
ret
dec
pop
ret
aad
ret
pop
pop
xor
punpcklwd
inc
data16
push
rdmsr
repz
cmp
gs
xor
cmc
popa
addps
push
jo
(bad)
inc
push
repnz
add
jno
in
sbb
ds
xchg
xor
and
push
or
dec
lock
dec
jmp
adc
push
cdq
adc
push
mov
inc
inc
push
and
add
rcl
sbb
add
push
sub
sub
movs
sbb
cs
in
pusha
sub
or
push
ror
push
or
sub
or
fstp
pop
adc
adc
cli
in
add
sub
and
pop
add
mov
test
add
jecxz
jno
adc
shr
adc
sti
pushf
and
jo
mov
ror
add
xchg
sbb
add
mov
pop
xchg
sub
sub
inc
shl
adc
and
jo
or
jb
and
adc
jle
arpl
and
sub
push
jo
push
add
or
inc
mov
repnz
repz
outs
mov
cmp
sbb
inc
sub
adc
push
in
shr
xchg
pop
xchg
and
and
dec
push
sub
cmp
xor
add
cmp
loopne
repz
add
jb
stos
adc
pop
or
ins
sahf
popa
and
leave
dec
pop
cmp
pop
push
add
loopne
gs
bound
pop
add
xor
push
inc
clc
cmc
and
jge
inc
xor
push
mov
push
pop
pushw
hlt
pop
push
(bad)
and
sbb
pusha
dec
xor
lock
mov
jo
in
cmp
jle
add
hlt
and
hlt
add
rol
mov
popf
dec
and
inc
loopne
cmp
aas
mov
int
ss
out
add
mov
mov
cwde
pop
out
push
add
cmps
push
jle
adc
scas
jp
xchg
add
jb
xchg
shr
mov
add
pop
xor
aaa
xor
push
add
popa
xor
xchg
lahf
push
cmc
xor
push
xchg
jmp
nop
and
fld
nop
(bad)
addr16
or
mov
daa
add
adc
mov
jns
imul
cmp
jp
pusha
and
push
nop
pop
clc
push
inc
rcl
inc
mov
int
sub
add
adc
lock
repz
cmp
pusha
and
es
ror
jg
xchg
jecxz
pop
mov
and
pop
nop
lahf
xchg
aas
sbb
nop
add
pop
mov
jbe
add
jmp
iret
cld
add
(bad)
or
push
adc
out
add
add
lods
in
dec
mov
aas
push
pusha
xchg
mov
mov
push
aas
sahf
cmps
jl
outs
and
jo
fwait
dec
sbb
xor
lock
mov
mov
sub
cmp
retfw
push
das
add
mov
test
xlat
add
inc
jne
add
push
dec
inc
aad
pop
mov
movs
ins
adc
add
push
xor
adc
xor
mov
es
daa
out
movs
retf
push
or
push
adc
lock
es
add
or
add
sbb
xchg
adc
out
mov
and
cmp
add
or
add
adc
adc
ror
push
or
or
and
clc
add
cmp
sbb
adc
movups
adc
mov
loopne
dec
aam
shr
adc
adc
add
jo
add
push
lock
pop
add
add
dec
add
inc
jge
and
or
outs
ins
add
push
dec
inc
and
and
outs
jne
and
and
outs
outs
popa
arpl
ins
popa
add
outs
jb
and
add
and
dec
add
mov
push
mov
inc
add
rcr
imul
adc
add
add
inc
and
aaa
inc
xor
adc
or
icebp
or
fldlg2
mov
cwde
fadd
in
cmps
test
fsubr
lock
add
pusha
mov
movs
jl
or
out
pop
aad
sbb
and
clc
mov
xlat
test
adc
jle
pop
cmp
push
fld
add
jns
add
in
push
pop
je
sbb
mov
sbb
sbb
mov
add
sbb
mov
add
out
or
into
popf
jb
add
pushf
and
sbb
push
aad
sub
rcr
pushf
rcr
xchg
or
loopne
add
add
cmp
add
pushf
mov
aad
mov
rcr
stos
cmp
leave
cmp
sbb
add
adc
sbb
pushf
jno
imul
and
es
(bad)
jge
add
add
push
fdivr
xchg
push
fist
push
fdivr
(bad)
pop
sbb
aam
inc
fadd
jo
push
push
inc
cmp
add
pushf
and
sub
pop
ret
pusha
rcr
stos
frstor
frstor
rcr
add
or
fadd
cmovo
sbb
pushf
adc
wrmsr
rcr
stos
pushf
aad
cmp
sbb
pushf
test
cmp
fmul
push
adc
xor
mov
inc
mov
sbb
lds
xor
xor
retf
adc
fsubr
ins
add
push
rol
rol
jo
inc
movmskps
rcr
jge
push
pushf
(bad)
fild
movmskps
rcr
std
push
adc
add
jo
pop
push
pushf
inc
stos
retf
or
cmp
or
pop
and
fisub
seto
sbb
mov
(bad)
(bad)
add
add
xor
add
add
ret
stos
rcr
pushf
and
add
add
pusha
rcr
jno
gs
cmp
sbb
std
push
repnz
sbb
retf
jge
out
jge
lods
mov
pushf
loope
or
fiadd
mov
add
add
ins
jge
or
cmp
test
pushf
rcl
and
fiadd
sldt
sbb
pusha
fidivr
loopne
call
push
jne
stc
add
pushf
xchg
(bad)
or
fimul
push
cmp
adc
cld
pushf
jno
fimul
mov
jmp
sti
lods
popa
(bad)
sbb
sbb
push
movs
iret
sbb
gs
pushf
and
push
mov
nop
iret
sbb
ret
adc
add
std
inc
mov
test
add
add
arpl
mov
dec
mov
sbb
movs
sub
cmp
add
pushf
adc
les
pop
fimul
add
add
push
mov
shr
iret
sbb
bound
(bad)
add
pushf
loope
inc
xchg
retf
jmp
fmul
and
sbb
movs
pushf
xchg
jmp
pushf
popa
(bad)
push
retf
popf
jne
or
call
pop
cmp
test
into
sbb
xchg
leave
sub
into
sbb
pusha
xchg
pushf
push
cdq
fidiv
ror
sbb
adc
inc
jmp
pushf
jno
add
test
add
fld
cmpxchg
sbb
xchg
mov
push
into
sbb
push
outs
pop
fs
into
sbb
jbe
nop
(bad)
pushf
pavgb
pop
arpl
repz
xor
push
cmp
mov
pushf
adc
add
add
test
add
push
into
sbb
jnp
outs
add
fcomp
add
inc
into
sbb
push
mov
mov
stc
add
pushf
loope
aas
xchg
(bad)
or
mov
pushf
out
xor
retf
sbb
xchg
adc
fcomp
and
add
sbb
bound
add
pushf
mov
inc
xchg
loope
sbb
pusha
mov
push
fdiv
pushf
add
enter
fcomp
or
sub
fistp
add
mov
sbb
pushf
push
les
pop
arpl
int
inc
fst
pop
add
fidiv
inc
sbb
xlat
xor
xlat
pushf
and
aas
xchg
rol
jecxz
fidiv
pusha
int
inc
jge
xor
(bad)
sbb
bound
stos
pushf
ret
jmp
retf
pushf
mov
stc
add
pushf
loope
ficom
xchg
rcl
mov
int
cmp
cmp
cmp
(bad)
push
ret
frstor
int
cmp
push
sbb
lock
pushf
mov
add
dec
out
sbb
cmp
push
cmps
jmp
ror
adc
jmp
ror
(bad)
ror
xor
push
(bad)
or
pushf
mov
sbb
cmp
xor
repnz
pushf
push
ret
pop
push
add
add
pushf
inc
ror
adc
jmp
bound
or
or
add
pushf
and
movs
xchg
nop
fisttp
pusha
int3
sbb
in
aas
or
in
dec
ins
in
movs
add
xor
jo
lods
push
ins
lods
lods
hlt
add
lods
icebp
shl
add
in
pop
inc
xor
sar
add
(bad)
dec
cmps
fcmovu
mov
sbb
inc
imul
shr
and
retf
push
add
sub
pushf
(bad)
retf
sbb
pushf
xchg
lods
retf
pushf
pavgb
sbb
or
pushf
push
(bad)
pusha
pavgb
adc
xor
add
cmp
jno
dec
xlat
lods
fisubr
(bad)
jle
mov
sbb
lea
push
leave
lods
bound
pushf
aad
int3
cmp
add
push
inc
shl
in
dec
adc
inc
adc
lods
(bad)
mov
adc
or
fadd
sub
add
call
xor
xchg
add
adc
xchg
arpl
mov
mov
imul
inc
or
jge
in
push
xchg
and
and
xchg
and
shl
sti
mov
mov
or
jb
and
mov
push
pop
xchg
or
mov
inc
add
add
(bad)
fs
lds
cmps
cmp
stos
add
adc
mov
shl
call
adc
mov
adc
dec
movs
cmp
and
and
or
and
add
mov
xor
or
adc
adc
outs
dec
ret
out
dec
aad
loopne
cmp
adc
mov
jg
xor
aaa
dec
xor
jne
imul
gs
loopne
add
or
rol
xor
add
pop
shl
frstor
adc
push
or
mov
add
add
jnp
popa
shr
sahf
sub
ss
mov
add
mov
xchg
add
pusha
pusha
retf
imul
mov
jo
add
lea
push
pusha
or
push
loop
addr16
(bad)
and
cwde
out
inc
sbb
xchg
and
ds
xor
cdq
or
push
rol
sub
mov
in
adc
push
icebp
aaa
add
pop
xchg
rol
jle
aas
adc
and
adc
inc
and
std
cmp
popa
add
test
sbb
inc
or
pop
adc
add
xchg
cmp
ss
cmp
pop
test
xor
adc
inc
dec
call
loopne
jne
push
cdq
mov
add
pop
cmps
add
ins
add
or
and
es
in
or
xchg
or
lock
mov
mov
adc
mov
test
inc
jne
pop
and
or
mov
imul
xor
xor
sub
sub
jbe
pop
mov
inc
pop
sahf
popf
inc
and
outs
jb
sbb
enter
jbe
jp
mov
sub
lock
mov
das
rol
ret
ins
and
xchg
call
enter
ficom
loopne
add
retf
sub
dec
jo
or
scas
cmps
mov
add
jo
and
adc
pop
adc
and
arpl
cld
and
call
push
sbb
loopne
cmp
add
test
or
imul
shl
and
cmps
ror
push
push
mov
rcr
xchg
add
and
jle
sbb
push
xchg
inc
fs
add
inc
push
bound
add
cdq
adc
(bad)
adc
mov
pusha
or
ins
pop
cmp
ror
and
popa
add
aad
movs
add
xor
shr
add
mov
jne
and
pop
or
and
mov
les
fcom
aam
addr16
add
xchg
add
inc
and
fidivr
adc
not
aas
pop
push
icebp
pusha
dec
push
adc
fs
adc
repnz
out
dec
or
in
dec
pop
movs
add
dec
dec
mov
fs
and
adc
jbe
mov
jns
shr
loope
int3
and
pop
dec
sbb
sbb
mov
add
xchg
ss
cli
xlat
sub
or
xor
or
(bad)
jne
test
and
fninit
inc
add
fnstenv
push
outs
add
adc
iret
add
dec
add
sti
aas
and
mov
add
adc
or
add
inc
add
or
(bad)
ss
out
popf
xchg
rol
repz
fbld
pop
sub
add
(bad)
adc
mul
loopne
shl
pop
loop
test
imul
push
adc
data16
cmp
mov
bound
and
jo
pop
cmps
das
push
pop
loop
and
jg
daa
push
lock
xor
adc
or
and
pop
stos
inc
sub
and
or
xchg
sahf
xor
imul
xor
ins
arpl
adc
add
cld
add
inc
inc
aas
mov
mov
shl
xchg
cmc
xchg
or
(bad)
lea
sbb
popa
dec
cmps
adc
pop
cmp
dec
push
pop
mov
ret
ja
arpl
and
xor
inc
or
ret
jbe
add
cmp
and
jno
adc
repnz
cwde
inc
shl
fcmovu
and
call
aaa
mov
jb
popa
xor
fisub
lahf
cwde
loopne
xchg
outs
or
pop
jmp
outs
push
or
sub
pop
mov
add
fiadd
push
adc
ins
icebp
retf
and
rcl
inc
(bad)
or
adc
cmp
sbb
(bad)
pop
or
inc
sbb
and
push
inc
sub
xchg
inc
jo
adc
jo
adc
scas
jnp
lock
sbb
push
inc
jmp
(bad)
mov
std
inc
adc
jbe
outs
push
ss
and
ret
sbb
outs
dec
and
adc
loopne
dec
dec
hlt
fiadd
or
adc
jmp
sbb
rcl
sub
add
(bad)
icebp
inc
pop
sub
dec
jl
rcl
jbe
mov
loope
xchg
or
arpl
(bad)
or
jae
aas
and
(bad)
punpcklwd
adc
or
shl
sbb
stc
adc
aad
adc
jb
xchg
shr
jbe
cwde
in
or
mov
xchg
xor
add
js
mov
aad
jmp
in
or
push
jo
adc
adc
add
loopne
adc
cmps
rol
rcr
rcr
xchg
bound
pop
sbb
sub
jecxz
sbb
and
(bad)
pop
adc
xor
rcl
add
jne
or
loope
add
sub
or
je
inc
test
movs
je
xor
ja
pusha
jae
mov
in
icebp
adc
jmp
dec
or
adc
mov
xchg
mov
or
xor
mov
and
xchg
ja
adc
or
and
repnz
outs
and
mov
adc
pop
pusha
imul
sbb
push
repz
mov
and
sbb
aam
inc
dec
ins
push
pop
aam
dec
std
ja
push
aam
rcr
lds
add
pop
or
lock
inc
push
push
nop
movs
(bad)
in
or
sub
or
mov
popa
inc
fistp
xor
xchg
lds
arpl
or
push
add
and
pop
jno
sbb
add
inc
inc
arpl
xor
mov
ret
and
pop
xlat
ret
gs
mov
psubq
outs
and
fist
push
inc
or
arpl
mov
in
shl
movs
push
xchg
iret
mov
mov
fisubr
xchg
stos
and
adc
loop
xor
and
or
in
add
sub
sub
inc
push
cmp
popa
mov
rcl
xlat
rcl
loope
fist
add
fsub
lea
push
sub
dec
or
sub
ror
push
frstor
daa
call
sub
cmp
bound
or
aam
adc
rcr
xchg
xor
ja
sbb
lea
and
inc
and
adc
push
or
ror
nop
push
mov
sbb
lds
and
sbb
push
add
je
add
adc
in
and
sbb
jb
or
adc
mov
push
add
bound
or
dec
xor
jle
xor
jno
fist
mov
adc
inc
dec
add
pushf
pop
sub
push
mov
sbb
push
mov
sbb
push
popa
adc
call
or
push
stos
or
(bad)
loopne
add
rcl
jnp
enter
jno
mov
sub
mov
and
cmp
adc
mov
movs
inc
add
add
pop
adc
and
xor
add
and
xor
es
mov
xor
sub
xor
les
xor
or
loopne
xor
addr16
or
adc
test
cmp
mov
jae
add
fisub
mov
les
pushf
dec
and
xchg
mov
sbb
or
xor
adc
not
and
mov
push
lds
sub
add
cmp
mov
adc
bound
lds
jno
mov
pop
mov
adc
inc
xor
mov
push
xlat
xor
add
cs
and
mov
retf
sbb
and
addr16
popa
or
push
sub
push
adc
push
movs
fidivr
push
add
or
xchg
adc
add
add
dec
gs
gs
scas
dec
inc
shl
sbb
sti
mov
jl
(bad)
jmp
into
dec
push
pusha
rcr
sub
imul
and
sub
add
mov
jmp
and
jne
cmp
retf
cmp
retf
stos
cmp
retf
cmp
leave
and
call
adc
repz
jle
nop
nop
jmp
or
adc
push
loope
je
cdq
dec
aad
mov
inc
data16
push
or
or
rol
and
or
add
xchg
(bad)
in
inc
ins
jecxz
retf
xchg
sub
ret
sbb
sbb
test
cdq
adc
mov
push
sub
and
sub
cdq
inc
dec
adc
loop
inc
pop
ja
add
xor
pop
xchg
pusha
(bad)
sbb
das
inc
outs
mov
sbb
adc
and
xchg
xchg
imul
loope
add
sbb
dec
or
jg
pop
sbb
test
pop
mov
sbb
xchg
inc
test
adc
movs
lahf
push
adc
jmp
adc
mov
(bad)
lock
mov
mov
mov
inc
pusha
sbb
pop
leave
scas
adc
pop
adc
add
das
lods
xor
sub
xchg
inc
adc
xchg
and
add
dec
pop
xchg
fiadd
or
add
ret
mov
ins
stc
mov
pop
sub
mov
icebp
shl
or
sub
xchg
adc
and
jecxz
or
and
xor
out
fisub
adc
add
sahf
mov
mov
push
add
adc
sbb
les
sbb
adc
pushf
es
xor
sbb
cwde
mov
adc
sub
mov
xor
aas
xchg
lea
adc
shl
ins
stc
nop
das
jnp
sbb
adc
push
jb
bound
adc
in
add
aaa
pop
push
or
mov
pop
adc
push
or
inc
adc
adc
pop
and
add
lahf
adc
and
jmp
lds
loop
cmp
jno
std
or
xchg
sbb
pusha
add
mov
sub
xchg
or
push
rcr
sub
into
push
push
adc
ret
subps
jb
xor
mov
fs
push
inc
xor
xor
cmp
and
xor
inc
jb
mov
cmc
jo
xchg
fld
add
pop
xchg
and
test
push
aas
dec
sub
sub
inc
repnz
and
jnp
adc
retf
add
xchg
cmp
inc
inc
bound
retfw
inc
cli
xchg
cld
and
xor
test
loope
adc
int
and
cmp
sub
test
mov
xchg
sbb
cmp
adc
jae
jns
sbb
add
fdiv
dec
jecxz
and
xor
add
xchg
retf
popa
jo
jo
jle
loop
pusha
xor
adc
(bad)
xor
pop
test
pop
and
add
xchg
adc
nop
mov
mov
fld
leave
pmulhuw
sub
mov
test
add
mov
pusha
ret
shl
xor
or
add
or
stos
aad
ja
and
adc
stos
aad
xchg
dec
push
push
add
add
rol
push
cmp
add
loope
xor
push
xor
mov
fmul
or
or
aaa
inc
mov
pusha
jo
push
aam
push
pop
mov
test
mov
sub
repnz
push
test
dec
je
adc
loopne
cmp
pop
call
cmp
and
mov
and
adc
adc
imul
fnstenv
push
add
cwde
push
push
fldenv
jmp
push
lea
test
add
cmp
add
add
push
out
scas
add
sub
add
(bad)
nop
jnp
push
and
xchg
test
mov
mov
dec
arpl
add
fidiv
push
or
mov
jmp
or
daa
mov
sub
xor
mov
jno
sub
xor
enter
xor
or
sub
and
test
mov
adc
and
popa
pop
sub
mov
sbb
push
es
ret
stos
pop
movs
mov
mov
int3
pusha
sub
bound
loopne
imul
or
mov
mov
ss
and
or
and
rcl
test
jl
add
aas
pusha
(bad)
or
jmp
mov
call
stos
xor
dec
mov
adc
pusha
or
pop
sbb
mov
imul
outs
adc
or
add
add
pop
cmps
rcl
xchg
adc
push
sbb
or
adc
adc
mov
inc
(bad)
or
lahf
and
ds
inc
jmp
mov
outs
bound
and
mov
add
xchg
and
es
and
push
jecxz
popa
and
outs
jle
test
rol
adc
loopne
arpl
cmp
inc
ficom
mov
and
cmp
js
jp
add
js
and
push
mov
lds
mov
nop
push
fld
and
jbe
out
nop
dec
es
add
xchg
push
add
pop
inc
and
cmp
cmps
rol
mov
xchg
clc
xor
sbb
add
and
neg
push
jecxz
add
push
add
out
sbb
sbb
adc
mov
xchg
push
cmp
jecxz
sbb
adc
iret
add
push
nop
push
xor
loop
(bad)
push
mov
adc
ins
and
nop
jbe
cmps
add
test
xor
push
out
push
mov
imul
adc
repz
xor
loopne
jo
jg
mov
xchg
or
shr
pop
mov
jecxz
xchg
adc
btr
push
and
adc
fucom
sub
mov
xchg
and
add
adc
adc
(bad)
and
mov
jae
retf
xor
or
inc
and
xor
fst
add
push
cmps
dec
and
and
repnz
sar
mov
test
repnz
and
xor
add
add
daa
xchg
adc
daa
sub
jo
cmp
add
bound
and
pop
test
sbb
jg
sub
adc
imul
out
and
mov
xor
ins
jo
add
push
jmp
adc
repnz
aad
pop
nop
nop
xchg
nop
mov
dec
lock
(bad)
(bad)
jge
inc
add
sbb
div
jp
add
int
sbb
sbb
cmovge
imul
xor
sbb
or
aam
imul
or
test
adc
add
or
repz
cli
or
xchg
test
and
in
loop
push
push
aad
and
push
and
cli
xchg
out
ins
sbb
fisttp
into
push
scas
loopne
popf
test
cdq
(bad)
jle
das
jne
xchg
das
scas
(bad)
loop
out
pop
push
ja
cli
test
sahf
inc
pusha
mov
jne
repz
loopne
lods
mov
dec
mov
inc
bound
push
push
div
cmp
das
imul
xor
xlat
enter
ret
jo
stos
sbb
add
ds
jns
or
mov
fcom
out
sub
sub
sbb
jbe
or
fidiv
repnz
sub
xchg
mov
mov
xchg
cdq
shl
daa
ss
mov
sbb
and
push
je
scas
mov
daa
dec
movs
imul
inc
mov
mov
arpl
stc
(bad)
xchg
(bad)
sbb
add
ficom
retf
and
push
arpl
ins
loope
jnp
test
out
add
fsubr
xor
pop
mov
mov
sbb
daa
adc
pop
xchg
xchg
inc
fisub
cmp
jl
mov
xor
in
jle
and
mov
cmps
ja
and
sub
jb
xchg
cmp
into
test
add
xchg
and
iret
add
jno
xor
loop
push
inc
push
xor
js
aad
pop
lods
xchg
inc
jmp
lea
jb
bound
or
cmc
lds
push
push
xlat
retf
repnz
cwde
stos
lock
mov
mov
push
loopne
repz
je
ss
call
push
aas
add
xchg
ja
xchg
sub
mov
adc
push
mov
inc
mov
sar
dec
sbb
jo
cmp
dec
or
fisub
scas
xchg
inc
xchg
cmp
add
sub
push
mov
mov
jno
sbb
stc
or
xor
mov
adc
repnz
btr
imul
sbb
pushf
jbe
movs
movs
ret
call
cli
fstp
mov
enter
mov
in
shl
cwde
and
push
adc
push
jle
cmps
push
mov
call
mov
ss
div
mov
bound
movs
mov
ret
imul
inc
mov
dec
movs
bound
pop
and
mov
and
fild
movs
and
outs
test
sbb
je
jo
imul
stos
push
jmp
adc
and
or
or
fstp
jb
mov
mov
sub
cld
icebp
add
inc
jecxz
jmp
push
pop
mov
or
ror
add
div
mov
or
hlt
sub
popf
repz
fmul
jb
push
int
cdq
xlat
mov
xchg
iret
mov
mov
jecxz
adc
out
push
adc
imul
pop
addr16
xor
imul
in
cmp
add
xchg
sbb
mov
push
mov
mov
jg
repz
daa
in
data16
adc
pop
cmp
sbb
add
dec
leave
add
mov
push
cwde
cmp
or
lea
mov
mov
sub
jo
fidiv
cdq
sahf
hlt
push
jl
popa
jb
inc
imul
sbb
add
add
add
(bad)
aas
adc
cmp
inc
dec
lods
retf
cmps
mov
aad
inc
jbe
ds
ja
loope
dec
movs
add
gs
test
push
outs
movs
aam
leave
adc
sub
mov
leave
leave
cmp
loop
xlat
stc
arpl
scas
mov
jbe
and
shr
nop
punpckldq
or
retf
mov
adc
push
in
in
into
cld
or
fld
ret
jbe
inc
jmp
je
lock
inc
cld
ds
aam
xchg
and
xor
addr16
cli
neg
xor
sub
sbb
mov
ror
push
or
add
and
icebp
xor
stos
or
cmps
mov
and
iret
xchg
cs
inc
cmps
mov
int
inc
and
or
test
aam
pop
add
add
gs
jnp
add
fcmovnbe
repnz
pop
and
mov
mov
add
test
mov
inc
movs
sbb
mov
sub
les
dec
ins
mov
mov
ror
pusha
loope
lea
call
rcl
outs
push
jne
in
and
pushf
stos
mov
es
fdivr
ss
xor
outs
jl
mov
retf
inc
out
mov
ja
push
vmwrite
xor
inc
or
das
(bad)
jno
sbb
cli
je
mov
or
dec
pushf
jmp
xchg
neg
inc
ret
xchg
add
adc
jmp
push
add
jge
inc
dec
ror
add
dec
jg
cmp
add
inc
and
cmps
mov
cmp
scas
jne
xor
mov
or
fmul
outs
int
es
inc
pop
inc
xor
retf
fst
cli
cmps
sub
pop
std
out
dec
jle
cs
mov
scas
pop
cmp
mov
mov
mov
push
jae
ds
xor
popa
jl
mov
shr
lahf
out
add
xchg
je
and
inc
pop
out
dec
add
stos
push
xor
and
ds
clc
and
xchg
jbe
sub
dec
mov
xchg
add
xsavec
arpl
sbb
mov
pop
jmp
jne
pop
cld
dec
or
and
dec
mov
push
adc
fdiv
les
pop
pop
loop
push
data16
pop
or
(bad)
sub
dec
nop
adc
outs
push
cmp
jbe
mov
mov
sbb
sbb
adc
or
jnp
out
mov
jns
and
ins
(bad)
mov
sub
mov
cmps
lods
xor
mov
and
mov
fimul
lds
dec
mov
jmp
xchg
sub
mov
mov
fdiv
mov
pop
cmc
mov
rol
dec
push
movs
inc
mov
rol
fld
arpl
in
in
retf
scas
arpl
sti
mul
push
dec
cld
dec
push
lea
int
mov
mov
cmp
add
mov
jg
and
add
add
pusha
add
add
add
add
ins
push
add
shl
add
push
(bad)
or
add
or
sbb
pop
leave
pop
fucomip
xor
iret
lea
fcomp
add
and
fadd
dec
add
fcomp
ror
jns
rdmsr
int
cwde
or
std
and
fdiv
iret
lea
add
fdivr
push
jo
mov
(bad)
sti
fmul
lods
mul
lods
fadd
and
(bad)
cmc
fmul
jae
xor
lods
repnz
fadd
jb
adc
or
icebp
fmul
lods
out
and
dec
add
loopne
inc
in
fcomp
rol
sbb
and
mov
jnp
mov
push
add
lods
pop
and
or
add
fmul
inc
adc
lods
fbld
pop
fadd
adc
push
lds
ins
pop
mov
mov
inc
popa
ficomp
cmp
push
js
int
inc
pop
(bad)
sub
jo
xchg
jns
mov
jno
add
and
jo
or
xchg
adc
mov
jg
not
jp
fmul
and
fucom
pop
retf
cmc
jo
sbb
pop
retf
jmp
sbb
pusha
mov
fadd
mov
adc
add
fmul
push
jp
or
shr
sbb
and
fdivr
jbe
in
lods
mov
jne
sar
into
lea
retf
lods
mov
jae
popa
mov
fmul
push
jp
mov
jo
sub
add
enter
add
jp
add
xchg
int
fsub
xor
sub
mov
lods
lods
ret
and
cmp
xor
push
sbb
or
jp
cli
and
pop
cmps
pop
cmc
sahf
cmps
mov
mov
retf
pop
cmc
outs
add
pop
cmc
sahf
mov
loopne
lods
fwait
pop
xchg
fsub
xor
sbb
dec
xor
sbb
mov
adc
retf
test
pop
xchg
fmul
and
xchg
(bad)
pop
fcomi
pop
nop
xor
jno
mov
jge
adc
sbb
fsub
fsub
mov
mov
mov
adc
pop
xchg
pop
fmul
pop
dec
loope
pop
sbb
dec
fadd
ja
clc
push
out
sub
sbb
clc
mov
sbb
mov
inc
add
push
add
jb
(bad)
lods
jge
lahf
jno
xor
dec
jl
lahf
xchg
pop
jl
mov
pop
retf
pop
jp
or
js
stos
inc
js
cmps
or
je
retf
cdq
jno
loopne
jb
cdq
xchg
pop
jb
fmul
outs
pop
imul
ins
pop
adc
enter
mov
(bad)
xor
sub
enter
push
xchg
lea
data16
inc
outs
enter
bound
popf
lahf
or
pop
or
std
fcom
mov
sbb
lds
fsubr
lea
xor
lea
pop
mov
xchg
mov
pop
popa
fldlg2
pop
adc
push
rcr
enter
aam
pop
dec
fcomp
les
pop
dec
push
rcr
les
fcomp
mov
int
and
mov
mov
mov
sbb
adc
sub
xor
adc
sbb
lods
ds
arpl
mov
xor
fadd
jae
mov
jp
ret
lea
bound
mov
jo
adc
jp
and
mov
xchg
jg
jecxz
mov
ret
jge
in
xor
fsubr
jecxz
enter
xor
mov
pop
sub
sub
push
jp
(bad)
jp
and
loope
nop
sub
sub
push
data16
loopne
add
mov
ins
pop
sub
inc
push
fadd
jne
loop
les
fadd
mov
rcl
fadd
shl
ret
lea
sbb
retf
mov
jbe
fmul
sbb
cmps
sbb
ja
inc
jg
shr
jo
jle
loope
pop
mov
ret
adc
jp
mov
sbb
dec
jb
mov
sbb
ror
mov
outs
xlat
xchg
pop
adc
push
or
jl
inc
or
mov
loope
ins
ins
xor
mov
ror
pop
adc
je
shl
outs
out
inc
jge
jge
pop
add
sbb
out
xlat
sbb
add
sub
or
push
inc
pusha
mov
sbb
iret
add
xor
arpl
(bad)
adc
push
cld
fdivr
mov
fistp
mov
sbb
imul
iret
lods
neg
inc
push
popa
fist
(bad)
neg
enter
iret
lods
repz
and
loope
add
fs
nop
imul
addr16
rcr
pop
nop
push
in
fmul
arpl
sbb
sub
call
xchg
call
into
lods
in
sbb
add
loop
and
bound
into
jge
in
push
loopne
sub
cmp
ins
sar
int
les
fcmovu
call
cmp
sub
xchg
adc
mov
inc
fadd
push
sbb
push
sbb
push
dec
addr16
sbb
fnsave
push
rcr
enter
into
(bad)
in
add
adc
int3
adc
int3
lea
push
retf
int3
lea
enter
int3
jge
cld
push
or
fnsave
in
push
ret
sub
adc
shl
fadd
loopne
popa
pop
adc
lods
push
sub
mov
sbb
imul
aam
push
or
retf
mov
push
mov
or
add
gs
lods
mov
les
retf
mov
sbb
icebp
adc
pop
push
fiadd
lea
rcr
jmp
push
pop
push
retf
popa
sar
push
sub
add
cmp
lods
mov
ins
inc
loope
and
lea
(bad)
call
sub
sub
cmp
push
inc
xchg
rol
xchg
rol
fmul
push
mov
lea
mov
enter
push
dec
shl
dec
and
inc
jmp
push
push
pop
push
xchg
enter
ror
mov
pop
fmul
push
xchg
les
in
and
sbb
imul
lods
sbb
add
mov
lea
pop
sub
add
icebp
mov
rcl
or
adc
jp
mov
pushaw
mov
push
imul
je
cmp
aad
rcl
push
jb
sbb
shr
push
push
pop
push
data16
rcr
push
outs
(bad)
aaa
imul
lods
or
adc
mov
adc
fadd
or
mov
rcl
push
fs
mov
add
loopne
shl
mov
push
pop
test
imul
push
pop
fld
push
pop
mov
dec
data16
push
sbb
sbb
gs
mov
int3
lea
rol
fmul
mov
pop
pusha
add
sub
dec
sbb
sbb
dec
popa
mov
sbb
mov
sar
adc
mov
dec
jmp
mov
xchg
punpcklbw
stos
xchg
mov
xchg
(bad)
add
add
icebp
xor
retf
sbb
jae
pusha
mov
jae
lock
push
stos
retf
(bad)
add
add
cmp
(bad)
(bad)
mov
icebp
ror
mov
add
cmp
push
frstor
push
xor
lock
push
xor
sub
rcl
push
xor
add
sbb
pushf
mov
push
add
and
lock
sbb
push
push
std
repz
push
fst
push
aad
(bad)
retf
jae
jo
jae
adc
and
lock
mov
pop
add
add
aad
add
mov
sbb
sbb
push
sbb
pushf
push
ror
adc
push
xchg
retf
dec
pusha
or
jmp
sbb
xlat
sbb
aam
pshufw
jns
and
movs
inc
sub
push
cmps
pushf
adc
sbb
sbb
aam
cmpxchg
sbb
dec
pusha
add
dec
(bad)
icebp
add
add
add
sbb
aad
xor
stc
add
push
cmp
xchg
aam
cmp
popf
dec
mov
pushf
cmp
push
adc
bound
int
inc
int
add
xor
aam
pavgb
sbb
lea
xor
repz
ss
add
cmps
(bad)
test
or
add
cmp
inc
sub
mov
sbb
cmp
inc
stos
int
setl
jb
stos
or
add
push
aam
add
aam
push
or
push
adc
push
aas
pushf
pshufw
add
push
xor
add
adc
cmp
leave
sbb
pushf
xor
stc
add
and
cmp
(bad)
pushf
xor
stc
add
dec
ss
add
leave
sbb
fdivrp
arpl
repz
test
add
pushf
jb
stc
add
xor
loopne
sbb
pushf
push
shr
xor
sbb
sbb
inc
shl
pavgb
push
adc
xor
pushf
popa
aas
das
add
add
mov
movs
enter
inc
add
lock
pushf
inc
fisttp
ret
stc
add
add
pushf
repnz
retf
pushf
xchg
iret
sub
pushf
punpcklbw
sbb
sbb
xor
push
test
iret
cmp
mov
icebp
fimul
rcr
and
xor
sbb
pushf
ss
add
sbb
add
sbb
mov
frstor
xor
lock
retf
mov
es
pushf
xchg
fiadd
ss
add
pop
(bad)
(bad)
sbb
call
and
cmp
lock
rcr
xor
and
jnp
popa
fimul
and
lock
push
fisub
push
add
cmp
add
nop
(bad)
sbb
pushf
adc
pushf
pavgb
or
adc
cs
hlt
shl
pshufw
loop
popa
cs
jecxz
sahf
lock
add
cmp
xchg
pop
xchg
inc
mov
add
(bad)
(bad)
jmp
fdivr
rcr
and
or
inc
cmp
les
shl
push
mov
push
add
sar
jno
vucomisd
js
and
mov
test
(bad)
ds
test
fimul
push
cmp
cmp
push
sti
cmp
(bad)
xor
int3
sbb
cmp
cmps
jmp
mov
add
mov
mov
enter
and
xor
adc
movs
and
jle
jne
mov
scas
and
inc
lods
inc
adc
les
push
lock
sbb
repz
movs
clc
lods
ret
hlt
mov
xchg
push
adc
retf
add
arpl
into
or
int3
sbb
stos
enter
inc
std
jl
sbb
xor
pop
mov
sub
inc
stos
cmp
jbe
out
and
jbe
repnz
xor
stos
jnp
and
test
xor
out
in
lods
mov
fnstcw
(bad)
adc
inc
int
xchg
lea
or
icebp
push
xchg
or
dec
fwait
dec
pushf
push
fst
cmps
jg
ss
jno
mov
repnz
and
mov
dec
inc
xchg
loopne
mov
cmp
xor
jp
scas
push
add
les
and
pop
jmp
mov
dec
xor
repnz
xchg
inc
fcmovnu
out
inc
cmp
jmp
fs
(bad)
and
lods
cld
inc
mov
cs
(bad)
cmps
push
pop
lock
aas
shr
pop
push
ss
mov
inc
xor
pop
ret
jp
xchg
xchg
jae
mov
jle
xlat
jge
sbb
lahf
xor
movs
es
inc
xor
mov
lods
mov
jno
and
and
int3
jle
icebp
ins
inc
movs
jne
or
dec
push
sub
cld
loop
stc
mov
rol
into
sub
clc
jle
sti
popf
jae
daa
pop
gs
ins
add
and
clc
faddp
mov
sub
test
xchg
xchg
or
xor
div
xor
stc
aaa
clc
dec
fistp
aaa
fcom
or
jmp
aaa
xor
sub
scas
leave
dec
jbe
mul
pop
sub
pop
sahf
mov
mov
imul
or
pop
cdq
bound
pop
sbb
int
or
add
lock
mov
outs
(bad)
cmp
lock
sahf
js
clc
xor
inc
mov
out
sub
adc
sub
jnp
push
aad
fcomp
inc
(bad)
jmp
sbb
jp
inc
popf
mov
in
loopne
jno
outs
outs
add
jmp
push
jecxz
jp
mov
stc
hlt
xchg
imul
mov
ss
test
inc
stos
xchg
daa
leave
dec
add
mov
pop
mov
sub
xor
leave
xchg
add
mov
mov
test
sbb
cld
mov
(bad)
dec
test
jle
and
mov
and
add
add
add
sub
add
call
add
mov
daa
inc
add
mov
add
sub
add
cwde
pusha
aas
inc
rol
or
sar
mov
mov
add
shl
xchg
fdiv
mov
inc
or
push
xor
dec
es
add
add
rol
sub
add
add
add
inc
pop
pusha
out
test
shl
add
ja
ss
and
adc
and
gs
adc
movs
mov
int3
(bad)
lahf
and
lds
add
cmp
(bad)
add
cmp
shl
adc
and
cld
jmp
shl
shl
bound
and
or
pop
sub
pop
jmp
and
adc
mov
inc
loopne
fcom
push
mov
cmps
adc
scas
jnp
sub
fsubr
dec
movs
nop
xchg
and
and
outs
call
pop
add
jno
fcmovnb
(bad)
push
and
and
sbb
lods
adc
jae
xor
js
(bad)
sub
test
or
or
inc
dec
and
mov
push
int3
pop
cmc
shl
(bad)
mov
test
and
rcl
nop
movs
mov
xor
xor
je
inc
mov
sub
adc
pusha
xor
(bad)
in
mov
add
jecxz
push
scas
jnp
add
add
or
jo
hlt
sub
sub
sbb
add
scas
jnp
call
arpl
push
jle
sbb
loope
or
les
enter
(bad)
cmp
pusha
js
mov
sub
and
xchg
add
pop
push
push
mov
data16
push
push
(bad)
pushf
nop
cmp
pop
fistp
jnp
add
scas
mov
and
cmp
rcr
shl
ins
icebp
add
sbb
adc
cmp
cmps
(bad)
and
(bad)
mov
cmp
pop
or
push
inc
inc
mov
call
add
add
add
add
imul
xor
dec
push
je
cmp
daa
jecxz
ja
fidiv
sbb
aas
mov
and
sbb
xor
es
adc
pop
(bad)
pusha
push
push
mov
and
scas
retf
sahf
mov
cdq
in
popa
(bad)
or
xor
push
shl
mov
push
or
or
inc
leave
sub
jg
arpl
or
xchg
loopne
pop
outs
xchg
and
jge
jbe
sub
test
xor
test
aam
cdq
xor
enter
push
nop
in
not
pop
adc
push
gs
fist
sub
push
sbb
sub
pop
xchg
jo
ret
out
push
or
add
add
cmc
and
adc
rol
and
jb
jae
or
mov
add
push
jecxz
or
out
daa
inc
add
mov
push
rol
pcmpgtw
jl
add
xor
sub
mov
rol
ss
or
or
cmp
lds
pop
cwde
fstp
fisttp
add
aas
mov
and
and
sbb
mov
in
sub
outs
or
and
rol
ret
cmp
jb
push
pop
and
es
iret
pop
or
mov
sub
cdq
inc
adc
and
add
and
stos
xor
cld
and
stos
xor
jmp
leave
loopne
xor
or
inc
loopne
inc
push
mov
push
inc
add
add
sbb
push
add
and
add
cmp
dec
xor
ror
shr
push
and
psadbw
add
add
push
rol
push
add
add
push
sub
sbb
add
xor
add
and
cdq
cmps
stos
and
cmps
cmps
stos
xor
and
lds
popa
aaa
sub
push
sahf
push
es
pop
iret
mov
loopne
add
bound
das
add
push
inc
mov
inc
xor
pusha
mov
jne
sbb
out
inc
jo
adc
call
add
push
fiadd
mov
jbe
add
add
add
rol
cmpxchg
push
repnz
scas
push
add
imul
xor
sbb
stos
pushf
jbe
sub
pushf
mov
sbb
stos
pushf
ss
sub
es
rcr
pusha
and
jge
pop
jge
push
mov
mov
or
jp
adc
add
or
sbb
inc
das
inc
jo
xchg
ror
xchg
inc
das
push
loopne
sbb
cmp
push
add
or
es
mov
and
pushf
inc
xor
push
(bad)
fisub
lds
(bad)
jge
inc
jge
push
add
add
push
fadd
ss
push
and
fisttp
inc
int3
imul
or
iret
std
add
push
and
fcom
ret
sub
pushf
pshufw
ret
push
ss
mov
mov
pusha
lds
sar
fild
movmskps
sbb
cmp
xchg
fild
cmpxchg
repnz
not
and
lds
mov
jbe
and
outs
mul
add
shr
add
fisttp
movups
sbb
and
stc
add
push
mov
mov
add
int
jmp
adc
dec
pushf
push
cmps
fild
mov
or
xor
add
loopne
sbb
cmp
fild
rol
sbb
cmp
or
adc
in
shl
cmp
add
pushf
popa
retf
imul
retf
lods
je
lods
or
sahf
add
inc
add
jge
push
dec
nop
mov
xor
or
or
jo
sbb
mov
add
cmp
les
push
mov
pusha
repnz
add
add
add
sub
dec
les
scas
cmp
sbb
xchg
cmps
pushf
aad
xor
cmp
out
inc
inc
pushf
shr
or
pusha
fidivr
movups
sbb
in
test
pushf
mov
fcom
mov
or
inc
fisubr
(bad)
ret
sbb
sub
pushf
pavgb
sbb
mov
add
sbb
sbb
adc
loope
add
cmp
jno
lods
xor
add
fisubr
cmps
fst
or
sbb
aad
push
fisub
ret
sbb
push
fidivr
add
pushf
inc
fimul
aad
or
mov
push
vpandn
and
imul
pop
pushf
popa
ret
sbb
fst
mov
add
(bad)
add
pop
scas
pushf
xchg
int
add
push
cmc
(bad)
fstp
xor
sbb
cmp
xlat
cmp
push
xlat
fld
es
ret
sbb
jge
sahf
jge
aad
cmps
data16
push
add
fs
push
das
pushf
mov
xor
stc
add
pushf
xchg
fldenv
and
and
push
aad
sbb
and
cmp
pushf
jno
sub
test
sub
mov
or
ret
jge
xchg
pop
pop
pushf
mov
or
ret
pushf
gs
ss
pushf
xor
push
int3
fmul
mov
or
mov
or
or
or
ss
or
mov
or
or
sub
leave
mov
adc
nop
fnsave
mov
adc
mov
mov
or
(bad)
xor
mov
or
or
or
fmul
add
mov
or
(bad)
mov
or
rcr
mov
or
inc
fsubr
mov
or
ror
sub
xor
stc
add
adc
dec
fist
mov
adc
pusha
mov
mov
or
or
and
add
pushf
mov
or
xchg
or
mov
or
pop
pushf
mov
or
xor
dec
(bad)
add
dec
fbld
jnp
and
mov
fist
jae
dec
fist
nop
xor
popa
push
scas
inc
pop
out
mov
rcl
or
test
cmp
adc
cmp
adc
xor
frstor
add
fist
jae
cmp
adc
retf
stc
add
fist
ja
cmp
adc
xor
and
sti
fisub
pushf
mov
add
jo
out
add
fist
imul
fbld
cmp
mov
push
out
or
repz
push
add
shl
in
fsub
cmp
adc
cmp
and
push
jmp
push
mov
adc
sti
fisub
pushf
(bad)
out
add
sbb
adc
mov
shl
mov
mov
or
ss
out
es
pop
fcomi
add
ror
fisub
mov
mov
push
add
mov
or
add
add
add
adc
jnp
push
add
outs
and
fs
jnp
adc
jbe
popa
add
jge
add
adc
jnp
adc
push
add
dec
and
xlat
mov
add
add
sbb
out
xor
adc
jo
pop
jb
xchg
add
mov
(bad)
in
bound
push
xor
adc
push
nop
fist
bound
inc
rcl
and
(bad)
mov
add
(bad)
cmps
xor
pushf
jb
retf
inc
adc
mov
pushf
enter
iret
jp
pushf
stos
sbb
sub
jno
xchg
cs
or
mov
jb
push
inc
and
pop
or
pop
ins
pop
and
mov
xor
inc
or
loope
add
aas
test
je
or
(bad)
push
or
inc
aad
jge
dec
scas
fst
fstp
into
mov
and
popa
jne
add
adc
cmp
fisub
cli
shl
pop
xchg
fbld
dec
inc
or
mov
push
sti
pop
xchg
lock
outs
rcl
xchg
mov
adc
fstp
and
lock
add
jo
push
and
aad
mov
sub
and
ja
or
and
xor
sub
mov
adc
add
ficomp
adc
pop
cmc
ja
inc
add
data16
dec
sub
or
push
and
repnz
adc
xchg
stos
js
adc
icebp
les
jecxz
push
jp
xor
push
adc
add
shl
xchg
add
imul
sbb
mov
and
scas
mov
and
dec
add
xor
das
xor
push
nop
inc
mov
and
(bad)
xor
jbe
bound
adc
add
pop
cmps
mov
pop
aaa
add
add
adc
xchg
xor
add
pop
pop
inc
push
rcr
mov
adc
add
cmc
and
invd
pop
aaa
and
sub
pop
loop
jae
(bad)
mov
xor
out
inc
xchg
jmp
xor
and
jno
inc
or
pop
(bad)
or
add
(bad)
sub
jo
cs
add
push
push
cld
push
pop
xor
add
jb
push
jb
(bad)
mov
fld
add
add
lds
rol
push
in
and
aas
sbb
mov
push
push
push
call
cmp
arpl
div
xchg
add
mov
push
imul
in
jns
and
push
loopne
and
jo
(bad)
jb
pop
adc
pop
and
inc
adc
xchg
and
ret
loop
push
add
xchg
fld
push
rcr
sub
mov
jo
pop
sub
arpl
mov
and
cmp
aaa
jge
in
dec
outs
enter
ret
rcl
jmp
cmp
or
pop
dec
dec
adc
out
pop
jae
jb
sahf
add
inc
shl
mov
jno
adc
or
sbb
xor
adc
or
ret
repz
cmp
and
push
imul
and
or
sub
call
lods
jge
sub
jg
(bad)
cmps
adc
std
push
pop
gs
mov
ja
lock
adc
add
scas
pop
pop
sub
sub
jmp
je
or
mov
jge
mov
stc
xchg
xor
je
xor
adc
and
addr16
jno
or
pop
in
xchg
outs
push
ror
pop
loop
sahf
data16
add
cmp
add
xchg
lods
pop
adc
test
in
pusha
adc
jge
test
bound
or
frstor
scas
mov
mov
or
add
or
rol
mov
in
push
add
(bad)
fisub
add
mov
cmp
and
jno
push
loop
and
ins
sub
and
or
adc
mov
push
jmp
sbb
xor
neg
adc
ret
push
jae
adc
or
push
add
pusha
cmp
ja
adc
mov
and
pcmpgtb
add
ss
push
and
mov
dec
add
push
or
mov
mov
sbb
add
inc
push
and
push
pop
pop
and
dec
gs
inc
gs
push
push
inc
add
data16
sub
pop
js
or
sub
jb
fs
adc
xchg
push
(bad)
stc
ds
inc
cli
pop
sub
sahf
bound
xor
dec
aad
bound
and
mov
mov
sbb
std
add
scas
sbb
push
or
pop
retf
push
jb
aaa
test
push
jge
dec
push
into
loop
mov
xor
pop
adc
pop
and
inc
cmp
repz
adc
or
xchg
add
cmps
call
push
mov
and
out
aam
add
push
cmp
or
jnp
xor
test
mov
adc
add
lds
push
inc
std
dec
add
or
pop
leave
in
mov
xlat
jg
xchg
or
aad
xor
es
jo
adc
adc
mov
xchg
xor
dec
sub
loopne
jbe
xor
mov
inc
and
pop
push
sub
xor
in
inc
mov
test
fwait
sub
shl
dec
xor
pushf
adc
xchg
adc
jp
mov
push
xchg
adc
adc
mov
push
loope
push
and
les
test
fidivr
xor
xor
scas
out
imul
push
gs
jno
sbb
jno
mov
and
pop
sbb
add
push
int
adc
xor
in
mov
cmp
push
sbb
dec
add
popa
xchg
and
lea
adc
je
push
inc
xchg
mov
cdq
xor
cdq
xor
or
imul
shl
xchg
shl
data16
push
mov
sub
sub
or
cld
or
mov
push
sbb
and
sbb
dec
retf
cld
add
sbb
aaa
fmul
push
inc
sub
add
stos
mov
and
gs
push
imul
add
add
xchg
dec
xchg
mov
and
arpl
pusha
ja
cwde
push
cli
xchg
inc
mov
sbb
inc
pop
cmps
je
mov
push
std
loopne
mov
addr16
test
sbb
add
mov
outs
sbb
mov
sub
pop
(bad)
jae
push
add
or
cli
cmp
pusha
ficom
mov
mov
(bad)
adc
xchg
sar
adc
mov
add
sub
gs
sub
add
mov
inc
out
xor
mov
xor
int
repnz
and
xor
adc
xchg
sub
push
or
mov
add
or
icebp
fist
das
rol
ror
push
inc
(bad)
dec
iret
rcl
scas
shl
neg
sub
rcl
das
aam
scas
rol
scas
shr
scas
aad
scas
rcl
outs
ror
scas
aad
out
push
loope
(bad)
add
imul
push
pop
das
fs
jb
dec
in
scas
pop
stc
out
aam
das
push
repz
xlat
jae
xlat
(bad)
das
cmps
lock
stc
(bad)
jmp
imul
icebp
pop
sti
mov
sbb
lock
xor
xchg
pop
or
pop
outs
sar
add
and
inc
shl
je
xchg
inc
dec
pop
inc
rol
rcl
pop
iret
inc
dec
mul
pop
stos
adc
inc
adc
xchg
test
ins
sub
inc
dec
and
adc
mov
inc
rol
add
movs
dec
adc
retf
dec
sub
(bad)
xor
inc
mov
jno
lock
pcmpeqb
outs
inc
pop
lods
pusha
sub
adc
lds
add
add
ror
add
add
add
and
fld
aas
inc
fisubr
inc
or
push
das
arpl
mov
icebp
sub
pop
pop
loop
lock
or
add
loop
lock
das
pop
in
sub
sub
push
ret
repnz
lock
adc
lock
iret
dec
icebp
add
mov
das
xchg
int3
clc
adc
lock
aam
repnz
xchg
out
sub
and
cli
sbb
and
sub
jmp
add
xor
inc
adc
add
repnz
adc
add
leave
xchg
adc
stc
retf
sbb
aad
sbb
adc
mov
xchg
sub
adc
ss
sub
xchg
mov
loope
adc
adc
mov
xchg
rcr
inc
mov
add
push
adc
loop
dec
and
inc
inc
xor
pop
dec
addr16
out
popa
xor
sbb
cmc
sbb
push
punpcklbw
jns
cmc
push
into
or
lods
pusha
sub
sub
(bad)
mov
sub
mov
out
fbld
jb
push
add
xor
(bad)
(bad)
sbb
les
fs
shl
inc
and
dec
loop
icebp
sub
add
adc
lock
das
popa
(bad)
and
stc
push
mov
push
dec
dec
and
adc
or
sub
clc
adc
or
imul
je
shl
and
popa
retf
jo
repz
pushw
mov
sub
mov
add
or
es
(bad)
push
mov
adc
es
adc
pusha
fst
xchg
test
pop
pushf
scas
adc
inc
and
call
adc
or
push
adc
inc
add
pop
cmp
inc
add
push
outs
push
repnz
lock
imul
push
or
adc
(bad)
add
jno
jmp
adc
push
pop
adc
inc
jmp
add
cmps
sub
cmps
outs
inc
push
and
jo
bound
xor
in
xor
pushf
inc
jo
jae
mov
jb
adc
in
or
js
popa
xor
mov
loop
or
es
ins
xchg
pop
pop
sub
les
inc
retf
test
fcmovnbe
or
xchg
jl
movs
mov
adc
pusha
sbb
sbb
inc
cmps
mov
or
xor
inc
and
mov
xchg
dec
add
out
mov
mov
ret
lahf
sbb
lods
pop
push
ins
sbb
pop
push
dec
xor
sbb
int
hlt
int
and
or
jno
adc
add
ds
or
pusha
shr
mov
loopne
add
adc
lods
xor
call
push
(bad)
and
inc
fwait
sbb
jmp
mov
rcl
push
xor
add
cdq
lock
cld
adc
add
and
cmp
sbb
popf
add
sbb
cld
mov
mov
cmp
mov
add
outs
stc
adc
inc
jb
inc
and
xor
ds
imul
and
and
loope
or
hlt
lock
push
data16
aad
call
ja
in
jg
outs
dec
sub
inc
fdivr
dec
cmp
pop
push
arpl
or
add
sbb
mov
push
inc
adc
jbe
push
xchg
clc
mov
mov
and
cmp
out
jbe
or
inc
or
std
mov
mov
pop
push
int
std
add
and
bound
int3
out
xchg
das
xor
test
cmp
lods
pop
cmp
outs
popa
jae
outs
pusha
adc
push
fbld
js
mov
fdiv
clc
pop
push
shl
push
nop
cld
ficom
ror
pop
mov
sub
and
push
add
xchg
add
and
icebp
sbb
cmp
fdivr
data16
add
or
inc
loopne
push
xchg
mov
xor
cmp
add
xor
adc
pop
and
add
or
fist
add
push
dec
mov
sbb
fstp
jo
fadd
add
adc
pop
and
mov
fidiv
mov
fisub
loopne
in
and
push
sti
pop
pusha
popa
and
or
adc
jno
and
xor
xchg
neg
mov
mov
inc
(bad)
xor
repnz
addr16
sub
pop
jo
inc
inc
xchg
push
or
fist
add
js
mov
cmp
loope
repnz
xor
push
mov
pushf
out
mov
cdq
xchg
mov
fisubr
xlat
mov
pop
imul
inc
or
stos
lea
in
fidivr
nop
and
jmp
and
xchg
in
adc
(bad)
out
add
stos
jne
add
dec
add
and
std
cwde
xor
js
pop
popa
ret
je
or
jmp
pusha
lods
pusha
jl
inc
or
pop
outs
or
test
ins
and
or
and
fld
add
jae
loopne
adc
mov
push
pop
and
push
loope
dec
iret
adc
push
sbb
mov
and
ror
bound
(bad)
arpl
jb
jo
punpcklwd
sbb
or
xchg
lds
ror
bound
xor
or
bound
outs
ins
ret
adc
in
sub
mov
cmp
daa
push
inc
or
pop
xchg
cmp
add
jp
jnp
sub
add
add
add
sbb
add
mov
retf
outs
pusha
jmp
push
or
inc
push
pop
repnz
nop
cmp
sbb
xor
jb
mov
sub
loop
or
or
pop
or
enter
pop
pop
fild
add
addr16
stc
push
adc
push
dec
gs
jae
adc
add
test
adc
ret
sar
(bad)
cdq
add
pop
scas
or
xor
xor
jle
loop
dec
cmp
sub
sub
inc
inc
cmps
or
inc
add
mov
popa
add
loop
and
xor
sub
(bad)
inc
cmp
add
xchg
dec
and
sub
adc
and
cmp
ret
adc
inc
ret
inc
adc
inc
call
call
mov
cli
inc
mov
dec
push
popf
shl
xchg
adc
sbb
jmp
adc
or
stos
adc
jo
add
shl
xor
sub
jo
adc
push
ret
xor
cmp
fs
xor
jbe
repz
dec
movs
add
xor
xchg
cwde
ins
xor
loop
adc
jbe
sti
adc
aaa
jnp
add
sbb
jns
add
repnz
sbb
cmp
inc
jo
add
and
dec
sub
or
cwde
jmp
jo
lds
pop
shl
retf
mov
push
je
xchg
cmp
add
imul
iret
sub
rol
sub
sbb
add
add
or
pop
pop
and
cmp
dec
add
hlt
add
dec
sahf
or
mov
adc
movs
add
jle
adc
mov
adc
rol
sub
adc
push
push
and
rol
push
arpl
or
pushf
in
add
xor
mov
mov
push
push
inc
xor
adc
leave
mov
adc
jnp
or
sub
push
add
sub
or
and
or
and
adc
sub
loopne
or
or
or
jo
(bad)
xchg
or
or
addr16
or
sub
sbb
adc
inc
sbb
mov
add
or
cmps
and
shl
sbb
pusha
push
push
cs
sub
(bad)
loop
add
and
add
cli
loop
ret
add
icebp
pop
or
sbb
pop
jl
or
mov
push
repnz
jge
mov
shl
cmp
outs
add
sub
mov
jmp
and
inc
add
xor
or
xor
pop
add
dec
and
data16
push
dec
add
mov
gs
sbb
cwde
add
test
cmp
repnz
jge
ret
xchg
or
sub
sbb
jne
push
push
and
mov
movs
inc
adc
adc
mov
js
dec
or
push
sbb
or
mov
jo
dec
rol
inc
mov
add
add
iret
adc
and
add
add
inc
push
adc
dec
or
or
mov
cmps
leave
and
wrmsr
sub
fimul
shl
clc
loopne
push
add
mov
out
out
pop
movs
xchg
add
loope
pusha
cmp
jmp
mov
and
or
xchg
adc
icebp
bound
dec
add
sub
popf
retf
mov
mov
loope
sbb
dec
and
sub
jne
rcl
(bad)
sub
shl
adc
repz
xor
inc
mov
push
adc
sbb
rol
pusha
pop
cmc
and
push
pop
pop
mov
add
jl
movlps
rcl
push
adc
fnstsw
sldt
pop
(bad)
jmp
test
jecxz
sbb
es
adc
pop
call
inc
popa
mov
push
adc
add
push
or
xchg
lock
or
sub
std
ficom
add
sbb
and
popf
adc
fcom
pop
in
and
hlt
mov
adc
sub
jo
dec
push
jge
(bad)
int3
rol
nop
hlt
push
pop
or
nop
add
adc
dec
and
nop
mov
cmp
dec
fcom
dec
jne
and
add
data16
sbb
pusha
xor
ret
add
push
sbb
pop
movs
data16
cmp
add
inc
outs
pop
sbb
or
jns
mov
in
and
loop
add
add
or
leave
jb
inc
cmp
sbb
or
ja
xor
sbb
repnz
aaa
add
cs
sub
pop
or
cmp
add
add
xor
and
sub
fld
lds
dec
add
push
push
or
ss
adc
adc
popa
shl
pusha
jno
adc
xchg
loop
jb
rcl
push
jno
adc
pop
push
push
pop
sbb
or
lods
int
dec
test
ins
scas
dec
loop
inc
lds
xor
aam
adc
add
(bad)
arpl
xor
pop
push
je
adc
movs
push
or
test
xchg
jae
fmul
ror
xchg
or
test
cmps
jo
les
mov
mov
pusha
div
fdivr
jnp
mov
lahf
fldenv
mov
mov
adc
or
xor
or
mov
retf
or
mov
fmul
movs
adc
lods
mov
imul
idiv
scas
sub
or
mov
dec
mov
sub
mov
inc
retf
mov
push
iret
scas
mov
xor
xchg
push
iret
dec
add
or
fsubr
inc
lods
jo
lods
cmps
sub
jmp
cmc
add
mov
pop
retf
lods
or
mov
and
ret
test
enter
dec
mov
(bad)
mov
dec
xchg
(bad)
mov
enter
retf
lahf
mov
xchg
lahf
mov
add
(bad)
(bad)
dec
leave
lea
stos
add
xor
sub
mov
jp
jge
cld
or
fcomp
jge
in
and
and
fadd
lock
inc
mov
enter
push
sbb
inc
iret
stos
mov
mov
(bad)
lea
add
sub
fdivr
lea
fmul
fmul
enter
or
(bad)
lea
jno
or
retf
or
mov
or
or
fmul
imul
mov
scas
or
mov
hlt
or
cmp
jo
or
int
cwde
xor
lods
push
(bad)
lods
fs
mov
inc
or
xchg
fmul
xor
xor
push
aaa
das
inc
test
test
and
pop
fmul
ins
adc
push
daa
or
dec
lds
pop
mul
inc
movs
inc
adc
adc
lea
inc
dec
fsubr
test
ins
sbb
sub
inc
or
pop
xor
or
sub
fsub
je
add
test
les
and
or
pop
mov
popf
adc
push
shr
fcomp
inc
stos
adc
lods
aas
daa
fcmovu
xchg
inc
stos
shl
add
test
ret
lea
mov
cmp
stos
adc
shl
cmp
dec
inc
cmps
jo
lods
fmul
adc
lods
xor
ret
lods
inc
xor
jne
sub
sub
fmul
xor
mov
or
or
scas
xor
adc
fisttp
jb
(bad)
lea
fmul
lock
dec
stos
mov
aas
mov
cmps
jo
pop
ret
ret
shl
test
jno
inc
(bad)
lea
fmul
add
lods
adc
add
dec
cmps
adc
jmp
lock
(bad)
mov
int3
lea
pop
xor
or
pop
mov
xlat
jo
adc
or
xlat
nop
or
pop
or
cld
or
fcomp
rcl
enter
or
daa
fmul
dec
lods
jo
adc
out
adc
dec
pushf
sar
sar
mov
xor
mov
or
(bad)
cdq
jo
and
retf
fmul
push
iret
lods
hlt
pusha
es
hlt
adc
inc
xchg
xor
cs
fmul
xchg
adc
lods
out
inc
es
jmp
rol
fdivr
mov
xor
fs
or
iret
xchg
adc
lds
dec
xchg
xor
xor
(bad)
retf
hlt
or
bound
clc
into
popf
jo
adc
mov
into
pushf
jo
and
inc
aaa
cwde
jo
adc
dec
fwait
jo
adc
inc
aaa
test
ins
adc
inc
aaa
cwde
adc
lea
ins
xor
aaa
test
shr
loopne
cwde
ror
lea
fsubr
movs
in
xchg
jo
push
or
or
cmp
(bad)
fsubr
adc
les
or
es
fmul
int3
lea
ret
fmul
ins
and
mov
shr
mov
xor
xor
clc
int
out
popf
nop
or
ret
or
inc
pushf
jo
lods
mov
fbstp
push
or
out
mov
call
or
mov
jae
or
pop
sub
or
es
inc
xchg
adc
sbb
into
xchg
add
(bad)
mov
jno
cmp
mov
or
retf
lahf
and
rcr
jmp
into
lahf
loopne
mov
push
pop
(bad)
into
sahf
nop
pop
adc
icebp
or
jo
lods
and
in
les
xchg
and
leave
lea
pop
repnz
adc
into
cdq
adc
fmul
jmp
or
sbb
retf
or
xchg
loopne
sub
call
xchg
jo
jnp
enter
or
xlat
dec
adc
lea
or
or
jg
sti
pop
or
sbb
dec
sahf
sub
mov
or
aam
xor
jge
mov
loopne
mov
fadd
repnz
adc
nop
or
sbb
xchg
add
push
ss
push
cwde
lock
push
ret
ficomp
enter
popf
mov
enter
popf
mov
ror
loopne
mov
outs
push
in
xor
addr16
enter
loopne
mov
in
or
mov
ficomp
mov
mov
push
mov
sahf
lock
xchg
or
fmul
call
mov
cwde
loopne
sub
sbb
ins
or
lahf
or
xor
mov
movs
or
sub
sahf
sbb
mov
jmp
push
pop
jmp
sbb
mov
ficomp
mov
xchg
nop
inc
loop
nop
mov
lahf
loopne
mov
jno
adc
or
sbb
dec
xchg
mov
push
call
dec
sbb
add
sbb
into
call
jg
jno
pushf
or
or
loopne
mov
xlat
cmp
je
cmp
(bad)
fsubr
mov
sahf
sbb
out
jmp
sub
xchg
adc
lods
das
test
sbb
(bad)
xchg
or
nop
loopne
mov
jmp
cmp
dec
mov
sar
dec
popf
and
jnp
mov
inc
add
ins
lods
or
or
and
dec
cdq
jo
pop
ret
and
sub
inc
and
enter
cmp
(bad)
ins
pop
or
and
jle
cwde
xor
jo
lods
inc
push
pop
jp
xor
adc
fmul
loope
add
jae
or
or
sahf
xor
hlt
sar
jg
popf
or
je
in
or
enter
lods
or
shr
push
shr
call
and
jns
or
mov
xchg
loop
popa
call
and
leave
or
sbb
call
and
or
call
and
fcomp
inc
neg
push
xchg
iret
ins
sbb
xor
and
sub
mov
in
jne
pop
or
fmul
test
dec
mov
fadd
mov
adc
loopne
and
push
mov
loop
arpl
movs
or
in
jg
or
mov
test
dec
mov
fadd
loop
or
inc
and
inc
mov
fadd
test
cmp
(bad)
mov
(bad)
mov
aad
mov
or
rol
fild
popa
out
lock
es
mov
lock
movs
adc
or
out
dec
or
pop
mov
mov
xchg
fsub
out
or
pop
mov
ins
mov
lds
and
icebp
and
cmp
xchg
fmul
jmp
fimul
loopne
lea
xor
mov
out
or
pop
mov
ins
adc
mov
and
fsubr
icebp
and
cmp
pusha
in
xor
cmp
dec
lea
retf
lods
mov
jge
in
or
pop
dec
ret
lods
movs
or
pushf
sub
test
(bad)
pop
pop
dec
mov
cmps
and
ds
in
xor
push
ret
fmul
test
lods
popa
mov
adc
into
test
push
jae
in
or
mov
pop
dec
inc
xor
cmp
in
and
fwait
mov
mov
and
cdq
fmul
in
in
or
mov
in
aam
push
dec
mov
lds
pushf
xor
lds
leave
lea
or
in
or
mov
mov
mov
lods
mov
into
fadd
xchg
and
pusha
add
and
add
inc
mov
add
and
retf
ins
and
xor
lea
lock
lods
jge
cmps
fdiv
daa
loop
lea
and
xor
pusha
add
jecxz
aam
ja
movs
test
mov
mov
(bad)
fadd
mov
lea
and
dec
mov
jno
and
arpl
test
jp
adc
into
xchg
(bad)
lods
inc
ins
jge
jecxz
or
test
dec
test
mov
adc
xor
xchg
lds
mov
pop
and
dec
popa
add
or
pop
and
push
lock
mov
sbb
or
add
mov
and
fadd
and
lea
mov
test
mov
adc
push
mov
and
push
cmp
mov
lea
push
dec
fmul
xchg
fisubr
les
cmp
jo
inc
or
add
les
fdivr
adc
int
pop
sbb
or
or
push
cmp
adc
dec
(bad)
mov
jns
adc
fmul
cmp
in
arpl
int3
or
push
or
dec
sub
gs
xor
dec
int3
lea
sbb
mov
mov
dec
les
jl
sub
push
or
mov
(bad)
aaa
or
mov
enter
lods
sub
jecxz
arpl
loope
or
and
or
adc
and
ss
pop
and
push
call
rcl
popf
adc
add
les
push
mov
movs
or
ss
pop
dec
add
or
dec
or
movs
or
ss
mov
xchg
xor
jge
or
mov
and
fadd
xchg
adc
test
push
pop
or
or
or
add
loopne
or
and
or
test
and
(bad)
dec
or
push
xchg
shl
int3
xor
arpl
sbb
enter
iret
add
lds
pop
or
add
jb
cmps
sbb
aaa
pop
pop
xor
add
mov
bound
test
mov
mov
jno
dec
cmp
pop
or
(bad)
fistp
inc
or
adc
mov
jp
sub
mov
lahf
pop
add
rcr
add
cmps
sbb
inc
daa
lahf
cmp
add
push
xor
add
mov
and
or
inc
jbe
or
das
mov
popf
js
sub
adc
neg
sub
xor
sub
xchg
jne
mov
arpl
xor
imul
adc
(bad)
lods
mov
imul
or
ss
xchg
sbb
and
int3
xor
mov
je
sbb
ins
jnp
bswap
fld
or
and
adc
sub
pop
lds
in
dec
jne
adc
fisub
mov
adc
sub
xchg
xchg
retf
sub
inc
sub
inc
icebp
push
jne
scas
adc
push
add
in
inc
push
inc
lock
xchg
add
shl
add
clc
sub
adc
or
adc
call
push
aaa
cmps
xchg
cmpxchg
and
add
or
cmp
mov
push
movs
cwde
lds
add
in
add
add
sbb
mov
push
std
std
sbb
xor
data16
sbb
mov
cmp
add
push
mov
xor
adc
ja
and
add
sub
and
mov
jg
or
xor
outs
pop
into
clc
outs
pop
and
sbb
popa
add
lock
mov
repnz
les
and
imul
or
(bad)
push
sub
icebp
xor
inc
rcl
xchg
int3
inc
mov
push
jo
mov
add
pusha
sbb
dec
imul
xor
popa
ins
scas
pop
inc
lock
pop
push
ret
add
pop
pusha
adc
or
retf
add
lock
add
xor
dec
jno
sbb
add
lods
inc
cmps
add
mov
sbb
dec
sbb
push
mov
pop
ins
xor
xor
in
pop
lock
imul
dec
test
ret
cmp
mov
mov
mov
loopne
or
or
dec
add
arpl
or
and
add
jmp
adc
xor
fidiv
jns
cmp
pop
inc
adc
icebp
add
jl
imul
cdq
fisub
or
into
xchg
es
add
fld
cmp
add
add
adc
add
adc
seto
fsubr
inc
add
push
cmps
jnp
adc
outs
cmp
test
and
jo
or
mov
adc
adc
sbb
in
adc
mov
push
push
mov
jmp
push
or
sub
std
pop
push
mov
in
adc
mov
pop
and
add
test
mov
jae
sub
and
rcr
adc
mov
jns
pop
add
shr
rol
xor
xor
push
nop
pop
xchg
add
xchg
add
dec
push
pop
nop
pusha
int
fdivrp
sub
mov
and
cmp
enter
cwde
mov
xchg
js
jbe
loope
or
arpl
iret
mov
aad
pusha
inc
cmp
mov
inc
cdq
sbb
mov
sbb
cmp
cmpps
jl
mov
push
(bad)
enter
(bad)
add
add
ror
jo
out
jmp
add
outs
loop
icebp
jmp
or
mov
loopne
or
popf
xorps
adc
add
(bad)
mov
retf
and
sbb
xchg
aas
ja
js
mov
sar
clc
test
add
push
mov
test
dec
imul
out
mov
xchg
lock
loope
jo
and
shr
sub
or
or
or
cmp
and
and
jge
sub
adc
xchg
and
pop
add
or
out
inc
and
and
(bad)
out
leave
push
add
push
push
cmovg
xor
iret
mov
add
pop
add
sbb
ret
pushf
add
push
add
jg
pop
or
dec
sbb
jo
out
movs
mov
jbe
popa
add
xor
add
adc
dec
pop
sub
loopne
outs
xor
in
xor
jge
xor
dec
adc
push
repz
adc
dec
or
ins
fidivr
xor
pop
icebp
pop
or
or
cmp
ror
(bad)
retf
add
xor
pop
and
or
ins
add
push
lods
fcomp
xchg
add
push
and
mov
loop
add
pop
sbb
(bad)
and
bound
pop
sbb
in
test
xor
push
jno
aad
add
jo
or
pop
lea
add
fdiv
(bad)
push
out
je
call
add
jb
cmps
sbb
jo
sqrtps
mov
sbb
stc
dec
pop
xor
push
ret
adc
push
pop
mov
mov
enter
adc
xor
outs
pop
xlat
inc
adc
iret
lods
rcl
stc
add
jnp
pop
sub
mov
sbb
mov
and
jb
add
mov
jp
mov
pop
arpl
std
xchg
fadd
mov
dec
jl
adc
and
mov
popa
mov
icebp
add
pushf
das
push
xchg
enter
pushf
das
jo
stc
add
enter
stos
and
fnstenv
dec
and
add
inc
adc
cmp
cmp
fisttp
xor
adc
add
push
push
add
mov
jo
push
hlt
cmp
push
or
mov
inc
pop
lock
arpl
add
push
call
or
out
pop
adc
adc
xchg
cmp
xor
and
cmp
xor
call
push
lea
sub
sbb
mov
xor
adc
xchg
xchg
js
not
cs
arpl
lods
xchg
cmp
add
adc
sbb
adc
add
mov
xor
inc
push
xchg
inc
div
pop
push
ins
sahf
scas
add
in
or
jbe
sub
xor
sub
bound
push
lds
test
fild
mov
pop
lods
xor
add
add
push
mov
ja
adc
add
sub
add
xchg
jb
push
mov
add
pusha
xchg
pop
sbb
out
mov
pop
xchg
pop
pop
cmp
xchg
add
add
dec
xor
call
add
push
nop
icebp
pop
pop
add
hlt
inc
inc
inc
xor
out
or
jo
mov
push
imul
shr
movs
pusha
mov
add
(bad)
adc
outs
push
mov
dec
add
cld
and
mov
push
loop
push
mov
or
xchg
add
or
loopne
mov
push
push
ror
les
mov
pusha
and
(bad)
sbb
fldenv
or
fidivr
repnz
push
xor
inc
adc
inc
adc
fwait
add
popa
push
inc
push
xchg
inc
xor
xor
jae
mov
sahf
aaa
in
mov
and
push
test
inc
mov
pop
xchg
pusha
cdq
add
test
int3
shr
or
das
rcr
loopne
pop
pop
mov
jnp
stos
rcr
aam
stos
repnz
jb
add
mov
fsubr
fbstp
gs
or
jmp
stos
cmp
or
std
repnz
adc
aaa
bound
sbb
or
mov
shl
call
mov
adc
dec
pop
dec
aam
ror
add
add
int3
sbb
push
pop
or
out
ss
movs
adc
add
cmp
jo
retf
xlat
push
inc
rcl
sbb
movs
pop
in
(bad)
(bad)
xchg
add
js
push
fidiv
xor
or
adc
inc
sub
adc
pop
jb
enter
add
xor
add
shl
or
inc
xor
and
inc
test
arpl
nop
sbb
or
xor
dec
add
fbstp
adc
xchg
imul
mov
add
jecxz
add
pusha
jle
sub
mov
and
xchg
push
and
push
push
pusha
loopne
ss
add
clc
and
stos
in
add
pusha
mov
and
jmp
and
push
loop
push
sbb
add
popa
sub
xchg
sti
test
adc
bound
repz
clc
add
bound
aam
xor
cmpps
xor
and
daa
and
es
push
test
pop
push
adc
mov
or
stos
inc
jb
xor
xchg
loope
dec
aas
daa
add
xlat
lods
add
adc
inc
or
daa
push
and
aam
xor
add
pop
or
std
cmps
or
leave
mov
xor
pop
xor
push
repz
lahf
push
jae
add
pop
sbb
sti
movs
les
call
(bad)
nop
cmp
push
inc
adc
cmp
ds
add
jg
xchg
sbb
sub
push
in
jge
add
loope
loope
or
repnz
adc
sti
leave
push
push
and
imul
add
aas
int
add
xchg
sbb
add
jne
mov
push
mov
add
add
cmps
xor
or
scas
fld
push
arpl
jo
xor
and
sub
or
(bad)
adc
inc
or
and
push
ins
adc
pop
push
loopne
or
(bad)
bound
adc
cmc
push
icebp
and
mov
xor
jnp
or
xchg
ins
or
xor
adc
rol
mov
xor
lods
cmp
test
mov
add
aam
mov
mov
adc
test
dec
push
je
xor
mov
pavgb
xor
xor
mov
loopne
daa
xor
mov
sbb
in
out
or
in
push
adc
adc
jo
or
mov
xor
sbb
stos
and
add
push
cwde
and
adc
mov
adc
ror
ret
cwde
sub
shl
mov
in
ficom
push
push
jg
rcr
dec
pop
push
hlt
(bad)
rcl
dec
daa
je
nop
es
nop
fcom
cmp
mov
push
mov
jb
cmp
cmp
add
mov
inc
push
pop
pop
rcr
pop
rol
inc
pop
pop
adc
test
adc
dec
imul
and
lods
inc
popa
repz
pop
xor
add
shl
dec
sub
and
or
pop
outs
add
mov
xor
xor
repz
xchg
mov
add
adc
arpl
das
adc
adc
repz
loop
inc
inc
jge
loop
mov
pop
adc
test
sbb
cmp
imul
leave
xor
iret
arpl
add
pop
dec
adc
and
xor
adc
cmp
add
out
xor
push
in
gs
xor
push
shl
add
add
xor
test
out
pop
pop
and
and
add
ror
sub
add
or
inc
xchg
mov
xchg
mov
xor
push
inc
cmps
mov
loope
inc
inc
pop
inc
jmp
imul
and
sub
adc
pop
lds
sub
fiadd
adc
sub
push
jmp
xchg
mov
dec
or
add
mov
(bad)
(bad)
call
push
(bad)
ror
mov
sub
add
fstp
cmp
and
sahf
cmp
ret
mov
scas
inc
push
cmp
sbb
test
mov
pop
mov
into
sub
sbb
outs
repz
rcr
lea
dec
sub
cmps
xchg
out
mov
inc
test
xchg
nop
and
sub
nop
dec
or
cwde
dec
icebp
cwde
push
jo
dec
jmp
stc
adc
jae
or
adc
jmp
xchg
sbb
sbb
inc
aam
xchg
add
pop
fisttp
jle
inc
or
repnz
inc
cmp
pushf
fs
xchg
retf
dec
jmp
cmp
pop
cdq
call
and
dec
cli
mov
cwde
add
dec
mov
push
or
repz
ret
mov
loope
push
aam
adc
pop
inc
fbld
xor
cmp
xor
nop
lods
aad
inc
das
xchg
mov
imul
and
add
adc
je
mov
or
pop
sti
popa
(bad)
in
inc
lock
inc
push
pop
pop
sti
lahf
fldcw
xchg
cwde
sbb
ja
jae
movs
hlt
or
inc
hlt
fadd
jge
jns
cmp
jmp
(bad)
jae
out
scas
inc
mov
test
sbb
lahf
loope
jno
pop
cmp
push
stos
cli
mov
xchg
sub
std
xchg
xor
or
aad
lfs
(bad)
data16
out
pop
icebp
loop
addr16
mov
pop
mov
and
retf
pop
ins
xor
push
arpl
inc
jno
sub
sub
xchg
mov
add
cmps
mov
arpl
inc
outs
pop
test
jmp
cmp
mov
mov
lds
inc
and
cmp
cmp
sbb
sub
sbb
sbb
jecxz
hlt
fnsave
fist
stos
js
out
adc
xor
shl
lea
idiv
ins
inc
or
mov
jl
leave
fild
xchg
lods
pop
lea
xchg
bound
jae
sub
ret
mov
aas
aaa
mov
xchg
inc
mov
add
jl
cmc
ret
scas
imul
test
lock
xor
xor
repz
xchg
xchg
sub
lods
daa
or
add
in
mov
aam
inc
add
into
ds
or
gs
test
pop
clc
cmps
cmps
call
dec
int
sbb
mov
dec
jmp
call
cs
cmps
in
xor
jo
repnz
bound
mov
push
repz
movs
and
in
clc
jbe
out
leave
test
fsub
lock
and
fidivr
mov
(bad)
mov
ja
(bad)
icebp
fstp
xor
stos
arpl
std
test
pop
dec
mov
dec
xor
sub
push
(bad)
sbb
leave
cmp
cwde
in
out
mov
cmp
and
gs
out
xchg
mov
mov
pop
dec
dec
jmp
sbb
cmc
fld
jp
mov
add
psrld
push
pop
add
out
inc
and
xor
retf
sbb
addr16
inc
cli
dec
and
push
sub
add
cmp
xchg
jle
aas
adc
rcr
sti
mov
fadd
cwde
xchg
cmps
inc
(bad)
add
popf
std
mov
cdq
ins
aad
cmp
mov
sub
xchg
sbb
in
repz
push
repnz
pop
popa
adc
pop
mov
inc
popa
aaa
pusha
or
js
adc
add
add
add
add
add
dec
add
add
push
add
fsubr
add
add
jmp
or
add
add
and
push
and
ret
jle
pushf
lods
sbb
sbb
and
cmp
ds
mov
mov
add
sbb
add
and
pushf
loope
cmps
ret
mov
stos
pushf
or
jnp
xor
(bad)
add
jne
cmp
jo
gs
pushf
xor
pushf
movmskps
sbb
fst
loope
outs
mov
and
push
icebp
add
stos
adc
xchg
push
xor
imul
adc
rol
cmp
xlat
sub
in
das
add
shr
bound
add
ss
adc
jo
lahf
adc
mov
sbb
and
mov
icebp
add
mov
inc
mov
sub
(bad)
stc
add
stos
and
mov
mov
sbb
add
add
add
pusha
inc
add
lea
stos
stos
adc
(bad)
stos
stos
adc
cmp
sbb
inc
xor
aam
cmpxchg
mov
pushf
add
stc
add
stos
stos
adc
cmps
sbb
add
mov
sbb
sub
ret
sub
mov
pushf
mov
sbb
test
sub
cmc
add
stos
and
mov
mov
sbb
sbb
ret
sub
retf
add
mov
cmp
lea
es
sbb
out
adc
shl
xchg
xor
adc
mov
sbb
mov
sbb
pop
jb
or
cmpxchg
or
jbe
loope
mov
sbb
ror
pop
pushf
push
rol
cmpxchg
sub
cmps
sbb
add
mov
sub
pushf
pavgb
sbb
pushf
shr
jnp
icebp
add
mov
stos
and
mov
ds
enter
push
or
test
stos
adc
imul
pusha
pop
in
in
and
adc
mov
xor
sub
lods
push
in
jo
stos
adc
dec
hlt
in
inc
add
or
add
pop
and
add
fisttp
shl
mov
sbb
dec
test
add
retf
stos
adc
icebp
cmp
mov
retf
stos
adc
lock
test
mov
rcl
mov
sbb
and
ins
clc
add
stos
adc
retf
stos
adc
pushf
cmpxchg
inc
xor
xor
mov
sbb
mov
sbb
sub
scas
cmp
add
add
mov
adc
stos
adc
retf
stos
adc
inc
shr
jmp
jmp
xchg
adc
ret
xor
lea
stos
adc
call
icebp
ins
(bad)
and
push
cmpxchg
sbb
mov
fisttp
adc
and
mov
sbb
mov
sbb
pushf
retf
sub
lea
stos
adc
in
xchg
xor
test
stos
adc
in
gs
mov
mov
fld
dec
push
mov
cmc
add
stos
adc
xchg
fld
and
adc
push
fnsave
movs
xor
inc
mov
jge
(bad)
cmps
retf
dec
pusha
scas
dec
and
dec
lock
icebp
fstp
xor
sbb
pushf
loope
add
add
cmps
retf
pushf
ss
(bad)
add
pushf
rcr
mov
sub
or
(bad)
test
mov
mov
xchg
sub
add
retf
dec
gs
frstor
adc
sti
add
pushf
xchg
int
xchg
pushf
xor
pop
ficom
sub
popf
inc
push
adc
test
add
ror
(bad)
popf
push
dec
pop
add
fimul
mov
push
dec
pop
hlt
shr
(bad)
xchg
(bad)
sbb
cmp
rol
xchg
(bad)
(bad)
(bad)
inc
add
add
jno
loop
cmp
mov
shl
repnz
ins
jge
nop
rcl
mov
mov
lea
xchg
fistp
sbb
leave
leave
test
les
mov
pop
clc
mov
mov
cmp
xchg
xor
repz
lock
xor
ins
push
or
pusha
arpl
mov
pop
pop
(bad)
(bad)
xlat
neg
dec
pop
ret
inc
sub
or
sub
jb
retf
rol
cld
pusha
fisttp
daa
add
outs
stc
xor
dec
test
shr
test
popa
dec
movs
in
stc
and
sub
xchg
mov
jbe
fneni(8087
push
xchg
jns
hlt
cwde
out
imul
ror
jo
iret
test
out
test
mov
mov
mov
xchg
cmp
ret
xchg
imul
mov
test
retf
mov
les
fcom
aad
inc
in
das
push
push
pop
fistp
xor
mov
in
push
stos
cmc
cmp
loopne
nop
dec
mov
and
pop
inc
imul
lock
cmp
mov
xor
outs
dec
jno
adc
mov
inc
sti
shl
xor
mov
jg
out
push
sub
inc
aaa
test
fwait
mov
inc
and
and
fdivp
retf
fsub
xchg
push
shr
xor
(bad)
cmps
shr
in
(bad)
scas
jae
adc
test
rcr
dec
cli
and
xchg
mov
dec
mov
popa
mov
jo
aam
cdq
adc
inc
mov
test
push
or
pusha
stos
jp
mov
cmp
push
div
dec
push
ja
adc
jecxz
or
mov
jle
cld
push
cmp
mov
pop
sbb
cs
push
dec
fstp
movs
cmp
xlat
jae
push
imul
mov
leave
push
cld
add
mov
lock
cmp
hlt
fdivr
in
in
jl
inc
cmps
loop
mov
out
bound
std
mov
cmp
mov
(bad)
dec
jmp
cmp
into
out
rcl
xor
mov
mov
fild
sub
and
(bad)
nop
xchg
jmp
sub
and
fadd
outs
dec
mov
outs
push
aaa
dec
neg
mov
retf
cmc
xchg
pop
push
sbb
or
(bad)
xchg
clc
pop
inc
add
sar
js
inc
mov
out
sbb
xchg
lahf
bound
fldenv
xchg
and
(bad)
lahf
in
push
inc
and
adc
into
mov
mov
add
sahf
ret
mov
popf
pop
pop
movs
sbb
dec
(bad)
cmc
push
in
mov
pushf
f2xm1
mov
mov
lea
shl
xchg
aad
push
sub
test
daa
jecxz
cmp
pop
sbb
arpl
push
push
shr
xor
in
sbb
xchg
and
mov
jmp
mov
test
test
inc
jg
add
jmp
loope
pop
(bad)
sub
(bad)
rol
iret
cmp
(bad)
adc
xor
jb
stos
mov
neg
ins
clc
pop
stos
and
jns
fadd
and
test
sbb
push
pop
shl
sbb
imul
sti
mov
stos
or
clc
jae
and
cmp
repz
push
ds
fwait
xchg
pop
push
mov
mov
and
mov
add
adc
nop
xor
inc
adc
nop
sub
and
adc
inc
xor
inc
and
add
xor
inc
and
add
cs
inc
and
add
xor
fs
and
add
xor
inc
and
add
xor
inc
and
add
sub
inc
and
add
xor
movs
inc
and
add
xor
inc
and
add
xor
inc
and
add
es
inc
and
add
xor
in
and
add
xor
inc
and
add
xor
inc
and
add
and
inc
and
add
xor
and
and
inc
and
add
xor
inc
and
xchg
inc
and
fs
and
inc
and
add
xor
inc
and
rol
mov
sub
add
dec
add
xor
mov
jo
and
jb
xor
and
inc
push
inc
and
loopne
add
xchg
pop
xor
cwde
inc
xor
push
inc
loope
or
in
(bad)
or
dec
adc
push
push
adc
push
or
adc
xor
inc
lock
and
loope
or
jl
or
or
pop
or
lock
inc
rol
mov
xor
add
and
or
inc
and
add
xor
test
xor
inc
adc
mov
jo
and
pop
inc
inc
add
push
xor
inc
add
and
inc
push
inc
adc
(bad)
xor
test
inc
and
xor
inc
xor
and
cmps
adc
rol
inc
and
xor
xor
and
xor
inc
adc
mov
lock
and
jb
loopne
and
dec
test
ror
out
inc
icebp
xor
dec
and
xor
xor
mov
and
xor
xor
xor
xor
inc
icebp
xor
mov
adc
and
xor
xor
and
xor
xor
and
xor
icebp
xor
and
xor
xor
aaa
dec
and
inc
add
add
xor
push
dec
and
add
xor
dec
adc
pop
inc
lock
and
xor
dec
and
dec
and
dec
and
ror
xor
mov
mov
and
cs
and
dec
and
or
xor
lea
jo
and
dec
and
dec
and
iret
add
xor
dec
and
sub
jecxz
or
add
mov
ret
add
xor
jmp
loopne
loop
pop
xor
mov
lock
and
dec
and
dec
and
ror
xor
mov
mov
and
sub
xor
nop
dec
and
xor
cmp
mov
and
cmp
dec
and
inc
add
cmps
dec
and
inc
and
add
add
mov
add
xor
out
and
iret
xor
adc
xor
dec
and
aaa
sar
and
and
ror
ror
add
xor
inc
pop
add
mov
push
xor
adc
and
or
xor
xor
xor
mov
push
jnp
add
jno
xor
pop
xor
xor
ret
add
ret
xor
inc
and
add
xor
lahf
or
xor
pop
dec
and
mov
shl
cwde
add
xor
dec
and
and
adc
add
add
xor
sbb
ror
out
inc
add
add
sbb
add
xor
xor
xchg
dec
and
sahf
add
xor
popf
adc
pop
push
add
add
dec
and
push
add
xor
xor
inc
dec
and
xor
sub
or
xor
dec
and
mov
xor
dec
and
inc
add
xor
mov
jb
or
aas
lock
sbb
xor
aas
loopne
and
xchg
jle
add
add
xor
and
ror
push
inc
add
add
xor
dec
and
add
cmp
pusha
pusha
ds
dec
and
mov
or
xor
lea
pusha
dec
and
xor
cmp
xchg
movs
xor
scas
dec
and
add
int
add
leave
add
adc
add
(bad)
mov
add
xor
sar
loopne
and
xor
cmp
aad
and
xor
cmp
dec
and
xor
cmp
inc
sar
mov
xchg
cmp
xchg
dec
and
xor
cmp
xor
cmp
and
pusha
dec
and
test
cdq
add
xor
dec
and
adc
and
jl
xor
sar
and
stos
xor
cmp
adc
push
cmp
dec
and
xor
cmp
dec
and
inc
add
mov
adc
dec
and
and
push
jno
mov
test
mov
dec
and
add
add
push
bound
ss
and
pusha
dec
and
push
dec
and
dec
and
dec
and
(bad)
mov
xor
and
add
xor
xor
cmp
jne
adc
inc
and
adc
jle
repnz
and
add
bound
adc
inc
and
inc
add
add
jb
inc
and
in
or
inc
xchg
xor
push
xor
test
pop
xor
xor
and
mov
inc
add
inc
and
sbb
jne
repnz
or
pusha
push
xor
xor
xor
daa
dec
and
inc
inc
add
movs
dec
and
add
add
add
push
inc
and
add
xor
adc
add
add
xor
inc
and
add
ret
and
add
inc
and
cmp
imul
add
mov
xor
ds
inc
and
mov
add
xor
mov
jo
and
xor
cmp
sahf
sub
fld
gs
loop
and
add
mov
xor
inc
mov
add
add
xor
in
add
bound
xor
cmp
inc
and
in
mov
inc
and
xor
mov
loopne
and
xor
cmp
xor
push
cmp
inc
and
add
and
add
sar
mov
adc
add
xor
loopne
add
xor
ror
mov
movs
dec
and
dec
and
add
inc
dec
and
adc
xchg
add
push
sub
add
inc
and
xor
xchg
cmp
inc
and
mov
push
cmp
inc
and
ins
adc
adc
inc
and
xor
aaa
loopne
and
xor
aaa
rol
xor
push
aaa
rol
adc
add
xor
dec
and
dec
shl
adc
push
nop
ss
inc
and
xchg
inc
add
dec
xor
pop
or
adc
jo
and
xor
xor
sahf
fiadd
pop
add
push
inc
dec
and
inc
xor
dec
and
add
loop
and
push
inc
xor
dec
and
inc
xor
test
inc
add
push
dec
and
add
xor
ror
inc
and
inc
and
xor
xor
inc
and
mov
and
add
xor
dec
and
add
xor
js
xor
push
push
xor
xor
xor
and
cwde
inc
add
mov
push
add
xor
push
inc
and
and
xor
xor
inc
and
and
mov
xor
jmp
xor
xor
push
call
jb
outs
and
std
add
and
add
outs
and
mov
icebp
add
and
in
add
and
add
outs
and
mov
loope
mov
jb
outs
and
fld
mov
jb
outs
and
add
outs
and
mov
rol
mov
jb
outs
and
int
mov
jb
outs
and
add
outs
and
mov
rol
es
outs
and
mov
loope
and
add
outs
and
mov
mov
mov
jb
outs
and
lods
add
and
add
outs
and
mov
mov
loope
and
popf
add
and
add
outs
and
mov
xchg
add
and
lea
mov
jb
outs
and
add
outs
and
mov
add
outs
and
jge
mov
jb
outs
and
add
outs
and
mov
jno
mov
jb
outs
and
ins
add
and
add
outs
and
mov
popa
add
and
pop
add
and
add
outs
and
mov
push
add
and
dec
add
and
add
outs
and
mov
inc
add
and
cmp
push
es
cmp
mov
outs
and
add
bound
xchg
mov
popa
sub
add
bound
sub
push
es
sub
add
(bad)
and
mov
outs
and
mov
(bad)
es
add
pusha
and
(bad)
es
and
push
and
(bad)
es
inc
and
and
mov
es
add
pusha
and
(bad)
es
add
pusha
and
(bad)
es
and
push
and
(bad)
es
inc
and
and
mov
es
add
pusha
and
(bad)
xor
and
(bad)
xor
and
(bad)
xor
pusha
and
mov
xor
das
pusha
and
(bad)
xor
and
(bad)
xor
and
(bad)
xor
pusha
and
mov
xor
cs
and
(bad)
xor
and
(bad)
xor
and
(bad)
xor
pusha
and
mov
xor
sub
(bad)
xor
and
(bad)
xor
and
(bad)
xor
pusha
and
mov
xor
sub
and
(bad)
xor
and
(bad)
xor
and
(bad)
xor
pusha
and
mov
xor
sub
and
(bad)
xor
and
(bad)
xor
and
(bad)
xor
jo
and
sub
push
xor
and
(bad)
xor
and
(bad)
xor
loopne
and
mov
xor
sub
push
xor
and
(bad)
xor
and
(bad)
xor
loopne
and
mov
xor
sub
push
xor
and
(bad)
xor
and
and
(bad)
xor
daa
pusha
and
mov
es
es
and
(bad)
xor
and
(bad)
xor
and
and
(bad)
xor
es
and
mov
es
and
(bad)
xor
and
(bad)
xor
and
and
(bad)
xor
and
mov
es
and
and
(bad)
xor
and
(bad)
xor
and
and
(bad)
xor
and
and
mov
es
and
and
(bad)
xor
and
(bad)
xor
and
and
(bad)
xor
and
and
mov
es
and
and
(bad)
xor
and
(bad)
xor
and
and
(bad)
xor
and
and
mov
es
and
and
(bad)
xor
and
(bad)
xor
xor
and
(bad)
xor
and
and
mov
add
(bad)
or
push
es
pop
add
push
fs
and
add
push
es
add
add
(bad)
nop
dec
and
outs
add
add
add
xor
mov
adc
and
xor
cs
dec
and
ret
dec
add
inc
out
xor
and
(bad)
in
ins
mov
sar
xchg
push
popa
add
ins
mov
push
inc
add
popa
xor
add
add
and
fdiv
xor
sub
mov
add
adc
and
sub
add
stos
inc
or
mov
mov
or
xchg
jo
add
push
loope
add
sbb
mov
out
adc
and
xor
dec
inc
pop
sbb
add
daa
shr
inc
xor
add
mov
and
lock
inc
pop
sbb
add
xor
movs
and
jo
inc
pop
sbb
push
add
movs
and
lock
inc
sbb
add
cmp
dec
mov
pop
add
xor
push
adc
shl
inc
adc
sub
movs
xor
mov
popa
fst
ins
mov
inc
push
push
add
sbb
adc
adc
inc
loope
and
add
adc
and
add
xor
fbstp
xor
pop
inc
push
iret
es
add
xchg
lds
sub
loope
and
adc
fsub
dec
sub
and
mov
inc
pop
lds
inc
add
rcl
sub
add
mov
shl
xchg
adc
dec
and
push
add
fiadd
add
adc
mov
popf
sub
test
add
int
xchg
add
adc
inc
adc
jmp
add
and
add
inc
ret
dec
mov
and
nop
push
add
jo
and
xor
sbb
add
add
(bad)
dec
inc
es
and
or
add
inc
imul
and
add
inc
pop
push
and
ror
sub
popa
mov
xchg
adc
add
and
mov
add
adc
and
xor
push
push
ins
inc
add
rol
dec
xor
add
inc
popa
pop
adc
add
sub
push
ins
mov
sbb
push
mov
pop
add
adc
dec
mov
adc
inc
ins
loop
adc
add
adc
mov
add
lods
and
adc
inc
add
and
add
loope
add
push
lds
or
xor
mov
inc
dec
and
add
push
adc
mov
add
mov
adc
add
add
xor
inc
add
and
pop
adc
push
adc
movs
or
movs
sbb
and
adc
pusha
or
adc
push
add
or
push
adc
push
jp
add
jmp
add
add
add
popf
add
adc
sub
and
xor
or
loopne
add
add
stos
add
cmc
and
dec
and
inc
adc
add
add
sbb
gs
popa
or
adc
adc
add
push
add
and
add
add
adc
jmp
mov
adc
push
cmp
add
arpl
cmp
or
push
pusha
sbb
xor
pop
test
add
mov
lahf
imul
test
ins
push
arpl
and
add
push
loopne
sub
loopne
add
inc
ins
loop
adc
dec
and
and
add
add
and
and
add
add
xor
and
add
push
add
fdivr
in
inc
and
and
push
push
mov
adc
es
sbb
add
adc
or
adc
adc
lock
loop
or
xor
nop
or
sbb
push
add
add
enter
pusha
pop
or
inc
xor
adc
or
mov
repnz
and
and
push
inc
and
xchg
adc
repnz
inc
and
rol
pop
adc
mov
adc
dec
and
adc
stos
dec
and
mov
cmps
dec
and
add
inc
and
pop
adc
or
add
lock
pusha
push
bnd
adc
(bad)
adc
dec
and
adc
or
mov
test
out
mov
push
movs
cmps
pop
push
sub
bound
inc
and
or
adc
inc
and
sbb
unpcklps
aaa
loopne
jmp
push
adc
dec
and
inc
xchg
adc
jecxz
dec
add
inc
jns
mov
aas
push
push
dec
pop
adc
add
jo
adc
and
out
shl
scas
xchg
add
and
mov
adc
dec
and
jns
adc
inc
and
inc
and
inc
add
or
jb
or
fadd
rol
and
adc
dec
and
in
xor
and
inc
and
adc
inc
and
and
inc
add
adc
add
push
sub
mov
mov
xchg
dec
and
icebp
mov
cmp
inc
jmp
and
adc
fist
inc
add
adc
dec
and
and
ins
adc
aam
fld
icebp
or
inc
add
adc
inc
and
adc
inc
adc
or
mov
or
dec
and
fld
adc
pop
push
inc
add
adc
inc
adc
clc
out
adc
push
inc
add
add
adc
and
adc
pop
cmp
add
add
push
fmul
adc
jo
and
adc
sub
or
fadd
repz
pop
adc
ret
aad
push
test
mov
dec
and
and
add
push
adc
xchg
inc
and
adc
inc
and
adc
xchg
inc
adc
cli
adc
dec
and
movs
adc
frstor
popa
ror
dec
add
jns
add
rcl
leave
add
adc
inc
and
add
add
add
add
adc
inc
and
adc
lock
and
loopne
add
adc
mov
jge
adc
mov
push
arpl
mov
cmp
adc
push
mov
loopne
dec
add
rcl
push
shl
and
inc
add
retf
jmp
mov
and
adc
mov
int
adc
inc
add
add
cmp
add
imul
inc
and
adc
movs
dec
and
xor
mov
bound
add
dec
and
adc
xor
adc
loopne
loopne
add
adc
dec
and
gs
adc
rdmsr
mov
and
inc
movs
les
sub
cmp
add
loopne
and
adc
and
gs
and
adc
jne
add
aad
push
add
add
and
or
sub
add
add
adc
pop
mov
add
adc
inc
adc
(bad)
mov
mov
dec
cmp
jno
retf
xor
add
pop
pop
popf
pop
add
adc
sbb
shl
unpcklps
and
adc
sbb
and
inc
add
and
dec
and
adc
or
mov
or
fcomip
mov
adc
rol
shl
push
or
aas
adc
push
leave
loope
add
sub
jl
test
es
mov
pushf
rcl
aad
scas
add
or
add
or
sub
pusha
push
add
push
das
ror
add
adc
lock
shl
jae
and
add
push
data16
out
out
cmp
les
inc
or
add
push
movs
jbe
add
or
push
push
add
(bad)
pop
jb
je
dec
jo
add
mov
lds
add
mov
jle
sbb
sbb
and
push
jecxz
jecxz
adc
or
jecxz
and
push
into
dec
ror
inc
xor
pop
repnz
xlat
add
outs
inc
add
pop
cdq
and
jns
adc
inc
mov
cmpps
je
outs
and
jle
mov
or
lock
add
pop
jmp
ins
add
pop
sbb
repnz
mov
rol
sub
neg
mov
sbb
adc
adc
addr16
daa
(bad)
push
add
sub
xor
push
jo
fimul
pusha
(bad)
add
inc
add
and
repnz
test
push
xchg
add
(bad)
cmp
pop
and
in
adc
add
jbe
je
adc
icebp
push
dec
int
push
adc
fistp
mov
push
push
cmps
ror
push
(bad)
add
xor
and
inc
aam
sbb
push
push
pop
sar
iret
add
add
add
add
and
add
push
popa
ror
popf
and
push
lds
jb
movs
add
inc
dec
loopne
add
rcr
inc
adc
and
es
out
outs
adc
and
and
add
icebp
jg
or
sti
add
in
dec
pop
and
add
retf
adc
aas
rol
inc
dec
rcl
out
ret
mov
pshufw
loope
pop
xor
add
test
add
xor
push
push
es
jle
xchg
push
adc
(bad)
mov
ss
sbb
add
add
mov
add
in
xor
add
mov
jae
outs
or
push
outs
por
outs
dec
sub
jns
or
rcr
and
ret
pop
or
or
jecxz
jae
movs
or
hlt
add
add
jae
xchg
add
xor
(bad)
xor
and
push
rol
jbe
shl
xchg
add
inc
rol
push
and
and
arpl
loopne
add
xor
add
xor
and
popa
ja
je
outs
push
and
arpl
imul
and
je
imul
and
add
ins
sbb
sub
out
sub
repnz
cmp
mov
clc
add
stc
dec
adc
repnz
mov
shl
xchg
test
aaa
adc
xor
xchg
je
add
add
xchg
or
test
pop
(bad)
push
or
dec
les
add
sbb
add
dec
adc
add
adc
nop
test
mov
aas
cmp
jae
sbb
inc
dec
ds
adc
mov
mov
add
pop
out
and
add
inc
rol
sub
and
pop
sbb
xor
add
bound
push
xor
xor
stc
and
add
dec
pusha
add
and
push
xchg
pop
xor
xor
push
sti
pop
or
cmps
das
adc
xor
ins
sbb
pop
nop
xchg
xchg
or
outs
jns
aaa
dec
inc
push
pusha
rol
sub
fisubr
cli
mov
inc
xor
push
add
repz
lea
loop
pop
xor
dec
int
in
and
das
add
jmp
mov
adc
add
and
cmps
cmp
mov
add
mov
add
sub
sub
adc
mov
mov
cmps
push
jae
int
pop
add
mov
inc
push
or
and
and
pop
imul
push
sbb
xor
or
adc
add
(bad)
aas
jo
pop
fist
cmp
imul
ds
inc
std
cmps
inc
lock
pop
or
or
rcl
stos
jbe
sbb
inc
jnp
sbb
jge
out
dec
push
adc
adc
idiv
inc
push
xor
adc
push
adc
add
loopne
rcr
popa
add
pop
sub
add
ja
sub
xchg
out
mov
sar
idiv
leave
shl
adc
adc
pop
pop
popa
ss
packsswb
sbb
jnp
inc
int
add
jno
xor
add
pusha
jge
jae
push
sbb
add
sbb
icebp
add
inc
mov
add
rcl
push
pop
nop
adc
push
sti
test
xor
add
(bad)
retf
sub
or
aad
add
daa
outs
cld
mov
jns
mov
inc
xor
ret
push
sti
pusha
xchg
adc
add
aaa
in
es
aad
inc
mov
sbb
dec
adc
jne
nop
imul
mov
pushf
cmp
dec
dec
xor
sub
push
imul
mov
dec
or
sbb
je
fnsave
out
jbe
add
popa
xchg
in
repz
add
adc
test
scas
inc
adc
add
add
xor
add
pop
cmp
push
inc
xor
cs
fild
mov
add
adc
popa
add
add
or
cmp
pop
cmp
ret
mov
js
pop
xchg
les
adc
jmp
adc
xchg
sub
test
out
push
icebp
out
fild
ins
add
movs
mov
add
add
rcr
and
movs
mov
push
and
popa
mov
ss
add
sbb
add
cmp
adc
out
push
loopne
adc
cmc
adc
or
or
stc
jp
xchg
jo
test
and
(bad)
mov
pop
mov
xor
add
rol
fs
inc
push
or
and
xor
xor
mov
sbb
add
mov
imul
mov
fs
rol
add
add
stc
adc
or
test
push
inc
lock
mov
fcomip
and
cmp
cmp
rol
lock
mov
pusha
call
dec
xchg
adc
test
jle
sub
mov
sbb
aam
push
and
js
cmp
add
rcl
ret
call
sbb
rol
mov
xchg
add
push
jl
mov
pop
(bad)
ror
ret
lock
add
sar
mov
add
es
fs
sbb
mov
adc
pop
pusha
pop
push
or
(bad)
or
mov
aaa
adc
test
retf
or
movs
cmp
and
and
sbb
add
pop
adc
and
add
xor
cmps
and
push
lods
or
xor
aad
sbb
fwait
aam
mov
push
add
mov
int
push
mov
fwait
and
add
sub
and
adc
icebp
neg
xchg
sbb
cmp
nop
pop
in
imul
and
xor
(bad)
push
mov
push
xchg
bound
xor
xor
shl
jle
or
dec
add
mov
lods
add
sub
mul
popf
add
sbb
and
out
popf
xor
imul
nop
cld
and
fwait
imul
jle
sbb
xor
aam
nop
mov
xor
jbe
loope
and
adc
lea
add
jnp
and
mov
jno
inc
and
(bad)
pop
add
and
sub
shl
shr
lea
pop
sub
sbb
ret
(bad)
and
add
ja
pop
xchg
mov
setb
and
dec
sbb
jp
shl
push
inc
push
add
in
mov
ja
and
sbb
xchg
mov
sbb
call
shl
xor
adc
jnp
and
xchg
push
xor
push
stos
push
and
xlat
adc
pop
rcl
mov
jne
sar
cdq
add
xor
mov
mov
adc
push
mov
jmp
(bad)
(bad)
std
aam
jne
or
or
inc
outs
adc
mov
(bad)
cmp
jo
pop
and
push
adc
sbb
popf
sub
or
add
jmp
inc
or
adc
push
push
stos
adc
jae
popa
retf
loopne
xor
jno
or
adc
pop
popa
add
and
out
adc
call
jmp
sbb
inc
xor
nop
dec
and
and
add
push
shl
stc
pop
enter
outs
pop
push
fiadd
(bad)
stc
add
gs
jnp
pop
sbb
push
inc
add
popf
cmp
(bad)
adc
loopne
pusha
adc
cmp
int
in
and
aam
pop
inc
or
repnz
add
xor
and
adc
sub
jae
jae
lea
sbb
push
cmp
xchg
jmp
jae
push
xor
test
add
adc
sub
mov
add
jo
fistp
repnz
and
mov
xchg
sbb
add
mov
and
ror
and
pop
rol
mov
xor
sbb
cmp
jmp
add
add
jns
add
or
xchg
cmp
add
xor
rcr
mov
or
mov
or
adc
neg
pushf
adc
pushf
pop
mov
add
retf
out
bound
fcmovb
sti
mov
mov
push
ficomp
call
ja
shl
and
daa
cmp
adc
mov
jp
loopne
mov
pop
mov
test
aas
xor
stos
sbb
add
test
(bad)
xor
pusha
dec
mov
adc
or
nop
xlat
mov
push
mov
inc
mov
or
mov
adc
mov
inc
inc
push
mov
push
sahf
sub
push
or
cli
adc
jmp
push
ins
popa
add
(bad)
pusha
dec
or
xchg
adc
scas
mov
jg
test
lods
loopne
add
out
adc
pop
mov
mov
xor
or
mov
(bad)
(bad)
inc
add
jne
inc
add
xchg
and
pop
sub
(bad)
ret
jns
push
xchg
mov
test
push
mov
aad
xor
dec
test
push
(bad)
into
inc
push
ins
lds
push
leave
and
stos
add
fwait
sbb
jmp
xor
cmc
in
es
fcmovne
or
and
and
shr
sbb
inc
cmp
outs
sub
in
mov
loope
arpl
ror
hlt
dec
push
sbb
fnstcw
jp
ret
ds
addr16
addps
data16
add
aam
ja
cmps
dec
fwait
es
inc
mov
xchg
and
scas
push
or
mov
sbb
imul
push
shr
push
xchg
sbb
pop
jns
xor
lds
mov
mov
push
addr16
sub
clc
add
not
arpl
mov
out
cli
nop
cld
sub
rcr
fst
mov
cmp
sbb
pop
mov
xor
jbe
call
in
test
adc
xchg
sub
or
push
jmp
neg
imul
dec
push
pop
enter
aas
dec
mov
cmp
out
cmc
or
nop
xchg
adc
dec
mov
mov
in
push
pop
pop
aas
fild
retf
not
pop
xor
xchg
mov
or
ror
fsub
(bad)
and
lods
inc
stc
push
mov
push
aad
sbb
xor
ds
pop
inc
cmp
push
cmc
jecxz
sbb
imul
mov
cmp
add
push
and
shl
jbe
mov
pusha
xchg
icebp
mov
clc
clc
mov
test
mov
and
jg
std
and
mov
xor
pop
sub
pop
adc
das
mov
sbb
fist
xchg
add
test
out
mov
test
mov
mov
jmp
inc
dec
and
xchg
test
dec
lods
ins
gs
add
dec
push
xor
cmp
repz
cli
mov
fsub
(bad)
icebp
mov
mov
icebp
sub
or
mov
adc
pop
push
das
and
and
loopne
xor
and
imul
or
sbb
mov
ror
add
out
or
xchg
les
or
add
add
sub
xor
and
lea
mov
leave
bound
mov
xlat
cmc
retf
dec
push
out
xchg
imul
mov
sar
mov
jmp
xchg
je
leave
out
imul
into
cmps
aam
out
arpl
in
les
xchg
mul
lds
adc
stc
sar
out
pusha
mul
dec
sub
mov
call
aam
lea
jecxz
fcomi
mov
int3
jo
gs
mov
inc
jnp
das
jbe
xchg
(bad)
mov
icebp
pop
inc
push
je
neg
mov
jl
fsub
pop
mov
(bad)
nop
add
or
mov
clc
popa
sbb
arpl
outs
shl
sbb
fiadd
mov
cmp
cdq
(bad)
adc
mov
jp
cmp
jnp
cmp
mov
inc
fsub
(bad)
sub
mov
fidivr
aaa
add
popw
mov
mov
pop
std
repnz
push
or
enter
mov
mov
and
adc
or
pop
jp
pop
cmc
dec
mov
mov
jnp
outs
addr16
aam
push
pop
(bad)
rol
(bad)
pop
jae
inc
add
mov
mov
imul
mov
jmp
dec
xor
stos
test
aas
push
push
pop
mov
and
movs
and
dec
add
inc
jg
fld
xchg
into
mov
jnp
lea
pop
push
out
ins
js
inc
daa
inc
sbb
jmp
mov
mov
outs
push
cmps
loop
pop
push
xchg
ins
pop
out
in
icebp
xchg
ret
ins
dec
jns
aam
xchg
cld
inc
movs
sbb
(bad)
repnz
nop
sti
aas
xor
aad
loope
scas
jg
fcomp
aad
pushf
cdq
int3
adc
test
pop
xchg
sub
retf
jg
mov
sbb
neg
sbb
cmc
das
das
dec
sbb
test
in
and
mov
inc
push
mov
jne
add
add
inc
retf
sar
stc
sahf
cli
and
imul
mov
(bad)
not
cmp
pop
retf
push
push
sub
shl
cmc
movs
pop
jbe
adc
xor
xor
sbb
cs
loop
add
add
ins
add
sbb
add
mul
out
mov
cld
inc
xor
push
ins
je
or
repnz
aad
iret
int
or
std
pop
out
adc
push
imul
and
mov
lods
sub
add
or
cdq
and
pop
mov
call
inc
jl
xchg
lods
movs
movs
pop
into
push
je
cli
mov
fucomip
les
push
inc
or
inc
hlt
sbb
jnp
mov
push
imul
pop
je
mov
push
pushfw
adc
imul
enter
fs
xchg
lea
sub
jp
adc
shr
ins
add
retf
fiadd
mul
push
pop
out
add
jle
in
fsubr
test
and
cmp
stos
pop
xor
mov
and
add
jb
pop
out
adc
pop
in
ds
or
sar
enter
es
jno
(bad)
cmps
sub
daa
not
loope
dec
xor
lods
cmp
pop
jbe
xchg
sub
popf
mov
in
xchg
inc
adc
cmp
cmps
data16
mov
xchg
mov
pop
or
xchg
pop
adc
out
sbb
pop
dec
jl
aaa
sub
cwde
ficomp
cmp
outs
sbb
fwait
mov
pop
test
inc
ds
and
outs
(bad)
sub
adc
mov
scas
jae
gs
jge
fisub
in
push
les
lods
jmp
pop
inc
jle
fsubr
dec
test
das
ss
and
jmp
std
or
(bad)
fsub
popa
pop
add
jp
daa
push
pop
retf
xor
push
stos
xor
popa
movs
test
in
mov
frstor
and
(bad)
mov
lock
sbb
psubsb
ins
pop
shl
in
(bad)
pop
jne
fbstp
inc
jecxz
push
enter
sti
add
ror
and
sbb
arpl
or
jmp
mov
xor
js
sub
dec
pop
loop
or
adc
and
data16
lahf
ins
cmp
lds
popf
fsubrp
sbb
into
pop
mov
push
cmp
fsub
and
std
jl
ins
popa
lea
or
mov
push
dec
arpl
pop
int3
mov
shl
clc
jne
bound
adc
aam
je
loope
fidiv
and
mov
or
pop
in
dec
mul
xchg
aam
shl
call
stos
aas
push
mov
and
std
jae
lea
xchg
dec
mov
cdq
and
add
xlat
lods
sbb
lea
push
mov
lods
fcmovnu
xlat
dec
popa
adc
cmp
xchg
xor
add
cmp
int
in
dec
fldenv
retf
lods
xor
fidiv
outs
frstor
ins
pop
mov
mov
scas
dec
ds
pop
les
jae
cld
xor
cmc
jge
daa
(bad)
inc
mov
or
bound
cmovp
mov
xchg
test
sbb
gs
jmp
iret
and
mov
xchg
mov
sbb
shl
fmul
stos
adc
in
int3
ds
ss
mov
(bad)
pop
push
cli
sahf
ss
xchg
sbb
(bad)
xchg
push
cmp
dec
ss
popa
adc
push
xchg
dec
xchg
rcl
addr16
adc
mov
fld
ins
mov
push
push
xchg
push
xchg
add
sti
pop
xchg
gs
push
jmp
outs
mov
in
dec
sti
fstp
in
sub
xor
das
xlat
cmp
mov
mov
inc
pop
push
loop
pop
add
jg
sbb
sbb
cmp
stos
movs
mov
adc
push
adc
adc
add
add
add
sahf
xor
lock
fwait
inc
shl
outs
xor
nop
jmp
ret
push
sbb
jbe
add
jno
and
add
mov
mov
jb
sub
or
test
(bad)
inc
cmp
es
fstp
mov
or
xor
jno
jo
inc
fwait
icebp
push
sbb
frstor
dec
adc
fild
aaa
mov
shr
shl
pop
cmps
out
stos
ss
sbb
push
pop
mov
into
add
inc
or
cdq
pusha
cdq
xor
sub
arpl
loopne
ror
mov
or
rol
shr
xchg
add
sbb
adc
fld
shl
push
push
bound
add
push
xchg
rol
out
add
dec
pop
push
and
or
adc
out
pusha
lock
and
pushf
adc
ins
xchg
pop
and
xor
pop
and
jne
lds
xchg
dec
shr
mov
dec
rcr
aas
push
mov
ins
add
cdq
mov
popa
xchg
jmp
push
pop
and
mov
xor
or
rol
or
inc
sub
xor
rcl
test
outs
and
stos
add
scas
and
jnp
mov
xchg
shl
add
inc
adc
pop
shl
outs
and
jnp
push
and
or
sbb
or
sbb
repnz
xor
add
fisubr
cmp
aas
inc
xor
or
dec
sub
xchg
lea
dec
pop
jns
add
mov
adc
adc
imul
add
lock
sub
hlt
lock
cmp
fisub
std
and
pmaddwd
adc
adc
bound
jecxz
push
shl
inc
dec
xor
add
push
cdq
and
inc
inc
lds
inc
lods
push
cs
and
retf
and
inc
sbb
dec
and
or
ins
mov
adc
popf
lock
aas
add
or
xchg
or
mov
sbb
imul
inc
pop
add
inc
jae
aas
or
xor
test
pushf
cdq
xor
imul
add
test
rol
push
push
xlat
in
dec
mov
shl
cmp
xlat
adc
push
sub
pop
mov
fld
cmps
fstp
je
mov
add
add
push
add
dec
rcl
push
xchg
arpl
dec
setae
cmc
push
dec
inc
xor
loopne
test
jne
mov
adc
cmp
mov
pop
es
push
sbb
loopne
add
inc
jmp
mov
push
mov
cmp
std
sbb
push
adc
pop
iret
xchg
mov
shl
fmul
and
add
ja
inc
or
sbb
push
pop
lods
pusha
mov
mov
pop
stos
scas
and
mov
xchg
sub
sub
or
or
fs
inc
sti
lds
loopne
rol
popf
mov
test
mov
and
icebp
int3
daa
lock
pop
or
rcr
daa
add
add
adc
ds
mov
pop
(bad)
inc
js
pop
mov
sub
fadd
sbb
add
adc
pop
pop
bound
pusha
sbb
int
add
cmp
add
jne
daa
mov
mov
clc
js
icebp
out
dec
bound
nop
cld
push
or
scas
push
xor
push
pusha
add
sbb
pop
jae
pop
pop
mov
add
add
sbb
mov
icebp
nop
add
fs
ficom
push
pusha
pop
lock
adc
lods
xchg
xor
add
lock
xchg
loope
mov
imul
adc
repnz
push
fsubr
jo
mov
jo
xchg
adc
pop
rcl
push
add
inc
add
test
push
adc
loop
dec
and
xchg
adc
push
sub
push
sbb
push
sbb
and
mov
adc
pop
pop
lock
dec
pop
stc
repnz
adc
xchg
cmp
push
leavew
repnz
adc
xchg
loope
dec
adc
int3
mov
adc
push
mov
js
adc
dec
xchg
mov
push
cwde
adc
stos
sub
sub
adc
add
movs
jne
(bad)
adc
fild
jno
mov
fadd
xchg
add
mov
add
push
mov
aad
pop
push
xor
add
push
aam
ds
test
imul
sbb
cmc
lock
gs
adc
add
xchg
xchg
leave
jle
std
repnz
and
adc
jmp
enter
lock
sub
mov
push
pop
adc
loope
pop
pop
adc
push
add
adc
inc
push
adc
aaa
jmp
neg
jo
adc
fld
push
cld
or
mov
push
pop
retf
or
mov
mov
pusha
inc
xor
add
or
or
inc
pop
add
or
retf
add
mov
pusha
xchg
add
add
adc
or
rol
mov
sbb
rcl
mov
enter
cmps
ss
inc
inc
push
add
jl
push
inc
rcl
adc
sbb
mov
xor
and
or
or
pushf
(bad)
out
add
adc
inc
xor
sub
mov
pop
add
(bad)
ja
setb
loope
push
add
js
pop
xchg
cmp
or
inc
loopne
adc
add
adc
iret
ds
repnz
inc
sbb
aam
sub
sub
adc
adc
(bad)
sahf
mov
jo
sub
ins
and
adc
jp
mov
dec
loope
pop
leave
add
add
test
cmp
xchg
imul
add
out
adc
(bad)
mov
sbb
cmc
mov
(bad)
movups
sbb
aaa
cdq
or
and
jle
aaa
xor
add
or
push
ins
or
or
adc
jl
movs
les
cs
stos
aam
lock
data16
dec
popf
ds
xchg
mov
push
sub
or
call
xchg
sub
inc
add
adc
ret
xchg
dec
and
push
xchg
lds
and
sti
imul
sub
inc
addr16
push
adc
inc
add
in
jo
cmp
pop
jmp
or
imul
inc
sub
(bad)
adc
dec
rcr
inc
xor
sbb
fld
shl
pop
dec
adc
(bad)
and
add
scas
ds
data16
cmovb
push
adc
shr
mov
lds
lods
xchg
dec
push
sbb
add
xchg
add
inc
and
or
adc
dec
test
sub
add
scas
or
aad
test
ja
leave
jmp
jne
xor
add
pop
and
xor
imul
adc
mov
jl
cmps
pop
hlt
sbb
fiadd
xor
and
jno
push
cmps
mov
(bad)
adc
pop
xor
cld
push
xchg
test
push
je
jl
data16
(bad)
shl
sub
add
rcl
xor
mov
push
cmps
jmp
push
add
movs
mov
pop
add
jg
loopne
cmps
loop
loopne
xor
lahf
icebp
xor
lock
or
xchg
push
rcl
cmp
inc
adc
ret
add
and
inc
rcl
loopne
adc
nop
add
test
cmps
sub
mov
dec
loop
pop
mov
mov
push
and
nop
or
test
ror
movs
sbb
bound
clc
xchg
inc
inc
lock
xor
sar
xor
and
push
or
add
sbb
inc
and
mov
xor
jbe
or
sub
pop
or
add
es
xchg
(bad)
adc
cld
add
adc
or
nop
(bad)
and
add
mov
xchg
adc
and
xor
inc
ror
adc
pop
adc
jb
mov
lds
call
and
push
pop
sub
loopne
mov
or
push
mov
ja
loopne
add
test
xor
pop
nop
cdq
rcl
xor
or
pop
daa
and
adc
rcr
sbb
pop
mov
cwde
inc
xchg
lock
rcr
jmp
adc
adc
or
or
jae
cmp
mov
ret
xor
or
or
sbb
loop
popa
and
adc
or
cmp
jecxz
or
jmp
xor
mov
add
out
xchg
adc
shl
mov
sub
cmc
xor
push
aas
xchg
daa
push
aas
and
inc
pop
daa
push
aas
sar
in
adc
call
add
inc
aam
rcr
mov
mov
nop
scas
add
or
inc
std
not
jae
dec
cwde
adc
add
sbb
sbb
pop
pop
adc
mov
xor
(bad)
test
xchg
sbb
pop
adc
sub
or
push
pop
adc
xchg
jno
xor
mov
xor
xchg
sub
xchg
and
das
mov
dec
addr16
and
xor
scas
sub
out
pop
sbb
jp
out
xor
or
add
sub
data16
inc
mov
inc
mov
sub
push
or
add
in
add
mov
loop
adc
add
cmp
or
or
add
adc
pop
cmp
mov
sahf
in
and
mov
adc
test
adc
pop
push
xor
xor
push
jo
xor
hlt
push
inc
sub
call
and
add
lods
sbb
das
push
push
mov
mov
dec
jmp
out
adc
pop
fsubr
mov
arpl
mov
and
movs
adc
lahf
adc
or
sbb
or
add
adc
ss
inc
and
cmp
cmp
call
sub
cmp
pop
loopne
and
pop
xchg
push
jp
adc
dec
adc
add
mov
adc
or
outs
adc
push
ss
loop
pop
iret
aas
jno
mov
and
push
adc
add
add
and
lahf
mov
sub
imul
dec
sbb
rol
std
sbb
pop
adc
mov
push
ss
mov
pop
adc
xor
add
cmps
dec
cmp
cdq
aaa
mov
adc
and
pop
mov
mov
rcl
and
shr
into
sbb
fwait
dec
add
out
sbb
mov
and
cmps
mov
fwait
neg
push
inc
mov
dec
out
dec
adc
in
pop
adc
or
push
bound
int3
adc
and
mov
sti
push
push
pusha
push
mov
adc
cmp
add
sub
stc
dec
and
adc
movs
add
push
and
dec
add
(bad)
cmps
push
cmp
add
jecxz
xchg
add
movs
stos
enter
rcl
adc
lock
mov
sub
aas
push
loope
and
adc
xor
shl
shl
nop
adc
mov
loop
cmps
fldlg2
adc
mov
xchg
sub
icebp
adc
mov
xor
retf
mov
movs
push
cmp
test
sub
xlat
in
add
xor
and
std
or
and
bound
scas
pushf
jl
adc
retf
adc
inc
adc
arpl
lds
jbe
ror
mov
and
popa
xlat
cdq
arpl
push
pop
sbb
ss
inc
mov
pusha
(bad)
xlat
sbb
pop
pop
aam
loopne
fnsave
xchg
into
xchg
test
fcompp
(bad)
xlat
add
pop
sbb
jecxz
xor
lock
xchg
mov
(bad)
push
pop
out
ror
out
xlat
adc
loope
xor
fistp
scas
aad
outs
rcl
outs
ret
cmc
jb
repz
or
dec
jge
push
call
push
sub
shl
xlat
xor
jmp
retf
pop
xor
sub
shl
push
lock
outs
push
mov
hlt
outs
xlat
lock
(bad)
pop
in
cmp
ror
outs
inc
test
icebp
mov
mov
scas
fmul
(bad)
jbe
xlat
add
fs
jle
sub
in
test
mov
fimul
out
(bad)
sti
adc
outs
rol
fldcw
pop
jbe
outs
arpl
dec
cld
mov
pop
sti
inc
add
or
loopne
(bad)
(bad)
(bad)
(bad)
fist
push
ja
in
outs
cli
cmp
push
mov
sub
into
push
retf
inc
lea
lahf
dec
pop
or
out
scas
icebp
mov
adc
retf
mov
xor
jle
push
xor
jge
popf
cmp
in
sbb
or
dec
cmp
xchg
jle
and
cmp
mov
pusha
hlt
test
mov
(bad)
sbb
mov
mov
dec
sub
call
push
in
cmp
push
nop
add
add
and
mov
mov
push
repnz
adc
add
and
test
mov
mov
retf
dec
sbb
xchg
aad
mov
jbe
sub
and
push
mov
lods
dec
adc
shr
fldcw
pusha
(bad)
imul
mov
test
shr
in
dec
cmps
push
enter
repnz
jl
repz
adc
inc
pusha
jbe
dec
es
inc
loopne
not
add
pop
sbb
xlat
fisttp
xlat
imul
clc
cmp
inc
add
mov
shl
xor
in
das
shr
or
repz
test
sbb
mov
mov
iret
push
cs
ins
xchg
movs
sbb
or
xchg
sub
cld
fst
aad
in
jae
pop
sti
out
sbb
test
push
sub
and
xor
cmc
aaa
xchg
lahf
mov
sar
adc
retf
mov
pop
in
sbb
movs
dec
mov
mov
pop
in
loope
stc
pop
jg
xchg
inc
inc
adc
or
adc
data16
and
jle
xchg
push
cmc
aas
xor
int
std
iret
imul
adc
mov
ds
mov
scas
daa
push
clc
xchg
dec
mov
sub
sub
ret
mov
lahf
in
call
and
pusha
sbb
mov
push
mov
loopne
pop
sub
xor
inc
ror
push
(bad)
int
mov
or
mov
scas
mov
dec
sbb
fist
push
push
sub
test
xchg
outs
mov
push
mov
fist
mov
mov
pop
shr
fsubr
jge
mov
and
and
cwde
pusha
mov
(bad)
cmp
(bad)
mov
and
scas
in
aam
jle
xor
cmp
and
repnz
and
mov
mov
call
or
push
ins
mov
jnp
out
(bad)
mov
mov
ja
lahf
add
adc
ins
adc
cmp
push
push
xor
fcmovnu
push
out
es
pop
test
mov
(bad)
in
(bad)
(bad)
lock
dec
fcmovu
push
in
sub
sbb
lahf
and
xor
ret
mov
ret
div
stos
add
fisttp
add
hlt
dec
and
cmp
add
add
rol
add
dec
and
push
add
jo
pop
pop
mov
es
(bad)
and
lock
lahf
lock
add
or
dec
add
xchg
xor
and
rcl
stc
blsfill
pop
loope
inc
sbb
push
aas
inc
fs
mov
xor
sbb
rcl
ret
les
in
adc
or
or
or
or
add
or
or
(bad)
xlat
lock
ret
rol
lea
push
jb
or
or
or
add
or
xchg
or
or
or
or
push
add
mov
jo
lea
sbb
or
push
add
or
ja
lods
fdivr
sbb
fbstp
sbb
push
es
inc
fidiv
ja
push
fnstenv
sbb
fdiv
sbb
pop
sbb
fcmovnbe
test
dec
fidiv
(bad)
or
xchg
or
or
adc
jl
out
push
mov
loop
add
or
das
pop
loop
or
add
push
or
pop
inc
das
mov
add
inc
or
jmp
or
or
or
(bad)
rcl
f2xm1
loopne
daa
mov
shl
retf
outs
std
popa
add
hlt
or
xchg
or
or
or
or
push
add
int3
or
das
test
inc
aam
lods
dec
das
push
fadd
xor
fidiv
or
or
sbb
ret
inc
shl
repnz
and
jo
sbb
(bad)
jo
sbb
ret
push
mov
bnd
jo
sbb
shl
sbb
and
and
ror
fld
leave
lea
cmp
add
jecxz
iret
lea
test
xchg
rcr
ret
lods
xor
xchg
ror
adc
jno
add
les
xor
inc
adc
inc
fist
repz
push
adc
lea
sbb
nop
rcr
rcr
jp
sbb
xlat
jo
sbb
jo
xor
loopne
daa
nop
rcl
clc
loopne
ficom
loop
into
ins
cmp
sbb
cs
js
sbb
aam
fistp
jmp
and
nop
inc
rcl
add
push
pop
pop
adc
or
or
or
or
fmul
or
or
fdiv
adc
mov
fsub
adc
mov
fucomip
popa
add
xchg
sub
or
or
or
or
push
gs
fdiv
or
mov
dec
aam
ror
sub
add
leave
loopne
add
push
pop
and
out
add
retf
ret
xlat
jbe
or
cli
mov
ja
iret
pusha
pop
push
les
inc
daa
jo
int
dec
inc
retf
out
bnd
and
lahf
in
pop
inc
enter
mov
ret
xlat
cmps
and
pop
movs
or
mov
xlat
xor
add
mov
xor
and
pop
sbb
pop
jl
out
pop
sbb
add
fs
nop
fdivr
out
repnz
pop
and
and
xor
(bad)
xlat
xor
add
cmp
or
xor
or
pcmpgtd
push
sub
fsubr
(bad)
fdivr
inc
daa
and
shl
retf
sbb
ret
pusha
fstp
cmp
pusha
ror
cmp
inc
cmp
pusha
rcr
dec
add
inc
int3
jo
inc
sbb
adc
jo
mov
rol
sbb
jo
inc
daa
pusha
ror
int3
lods
adc
cs
fadd
enter
jns
and
mov
mul
inc
(bad)
mov
add
fs
add
jecxz
jbe
push
dec
or
(bad)
cmps
and
popf
js
cmp
rcr
add
and
mov
mov
inc
rol
mov
jo
inc
push
and
iret
mov
cmps
push
ror
retf
lods
mov
pusha
retf
lods
mov
jno
les
mov
mov
add
movs
or
cs
(bad)
leave
rcr
fmul
jo
inc
or
pusha
jmp
mov
mov
cmp
retf
cmp
dec
or
xchg
xchg
leave
loopne
lea
or
fmul
mov
lds
es
add
mov
and
mov
cwde
fmul
and
ret
add
or
dec
sub
mov
inc
or
js
inc
retf
xor
ins
enter
sub
xchg
or
add
sub
add
or
sub
lea
movs
or
sub
shl
xor
and
push
xor
push
add
add
or
pop
jno
dec
cmps
enter
jb
sbb
push
inc
inc
add
(bad)
lea
or
outs
(bad)
mov
push
add
and
iret
cmp
or
mov
mov
jb
add
or
pop
mov
jle
ss
push
aad
ret
loopne
add
or
inc
(bad)
repnz
and
xor
jb
and
loopne
add
sbb
add
and
xor
daa
and
lock
and
xor
mov
pushf
and
shl
xor
lds
mov
mov
dec
add
xchg
nop
lds
add
or
adc
or
add
or
or
ss
add
rcl
(bad)
fs
add
or
mov
xor
dec
add
push
sub
lock
daa
and
int3
lock
retf
xor
dec
and
adc
dec
and
lock
daa
and
or
adc
repnz
and
repz
push
out
jns
and
and
mov
mov
es
pusha
or
mov
and
and
sbb
pusha
push
fwait
daa
add
push
fwait
call
(bad)
sbb
adc
or
shl
or
ret
clc
sub
pop
or
mov
or
pop
sbb
push
xchg
ret
bound
shl
lea
test
out
cmp
(bad)
leave
xor
rol
dec
clc
and
adc
enter
retf
fsubr
add
lock
popf
add
sbb
rol
xor
les
enter
xchg
adc
ret
jo
and
pusha
rcl
scas
inc
and
shl
test
or
pop
mov
xchg
add
and
enter
or
into
loopne
mov
je
push
int
rcl
scas
and
jo
and
add
sbb
pusha
rcr
or
rcr
js
dec
daa
add
leave
xor
lods
add
sub
fadd
enter
inc
retf
fmul
mov
jae
pop
or
pop
xor
and
add
iret
adc
ret
or
sub
fmul
data16
add
mov
outs
add
outs
mov
clc
movsx
es
adc
ror
loopne
in
cmp
fmul
jmp
sub
pop
(bad)
(bad)
mov
mov
icebp
btr
and
test
ins
mov
pop
lock
and
pop
adc
lock
cmovne
sub
imul
sub
and
pop
lock
mov
inc
test
retf
(bad)
out
cmp
out
cmp
jb
lock
(bad)
adc
lock
(bad)
mov
mov
mov
or
xor
popf
fdivr
dec
call
dec
or
and
btr
mov
or
nop
fdivr
shl
sub
mov
mov
movzx
and
add
mov
or
sub
fcomp
int3
lea
or
cmp
pop
fadd
jo
adc
jp
mov
iret
mov
retf
lods
adc
iret
mov
pop
dec
mov
mov
daa
(bad)
dec
mov
sub
or
fcomp
(bad)
iret
mov
sub
dec
mov
mov
add
test
dec
mov
retf
or
ret
pop
or
or
push
das
push
sub
xor
fadd
add
(bad)
fdivr
and
iret
mov
outs
and
js
(bad)
iret
mov
test
leave
jge
hlt
or
push
pop
xchg
xor
in
lea
adc
fmul
mov
jo
adc
mov
lea
or
sub
fadd
mov
lea
je
jle
mov
cmps
ror
out
nop
or
cmp
dec
or
repnz
scas
xor
mov
dec
add
add
cld
adc
imul
and
stos
mov
fdiv
cmps
mov
jne
lock
es
stos
mov
sti
shl
arpl
sti
test
mov
(bad)
or
cli
pop
sub
mov
pop
mov
lds
(bad)
mov
call
sbb
fadd
fdivr
pop
es
movs
or
(bad)
pop
jb
and
push
(bad)
xor
mov
movs
or
test
(bad)
cli
clc
or
adc
cli
loopne
sahf
sbb
add
cli
ror
dec
sahf
inc
mov
dec
cmp
popf
jno
test
or
mov
nop
or
fmul
in
popa
add
or
mov
push
and
mov
aaa
ja
pop
or
sbb
push
and
lods
ss
sub
mov
mov
or
cmp
or
mov
pop
fadd
cli
pop
sub
stc
lock
xchg
repnz
xchg
movsx
and
(bad)
mov
or
sub
adc
jb
loop
test
daa
fmul
mov
and
or
scas
fs
or
and
out
daa
xchg
(bad)
mov
xchg
loop
or
stc
push
or
xchg
nop
lfs
aaa
xor
or
jo
and
xchg
loopne
nop
scas
fs
shl
ffreep
popf
adc
pop
push
or
adc
aaa
xor
jle
sbb
(bad)
mov
aam
lea
or
xchg
cmp
mov
mov
(bad)
(bad)
mov
fadd
mov
jge
(bad)
fcomp
shl
sub
imul
sub
mov
or
dec
jno
and
or
cmps
or
fmul
mov
stos
and
iret
scas
adc
loop
or
arpl
out
fdivr
ror
sub
sub
test
arpl
xchg
mov
cmps
or
or
stos
xor
jmp
fmul
test
and
in
mov
fstp
popf
xor
stos
nop
in
adc
neg
xlat
push
adc
dec
add
fstp
or
jmp
sbb
shl
jbe
mov
shl
test
pop
sbb
adc
(bad)
jmp
mov
dec
mov
inc
cwde
jp
dec
inc
cwde
add
out
mov
mov
mov
jnp
clc
es
cmps
lds
pushf
push
jmp
mov
pop
bound
add
out
fwait
and
xchg
xchg
sbb
sub
(bad)
mov
inc
scas
mov
ins
add
sub
stos
stc
fwait
ds
xchg
outs
inc
ins
mov
cmp
mov
mov
stc
cmps
jmp
and
les
push
in
aas
shl
and
jl
cmp
scas
inc
jle
sub
leave
dec
push
inc
add
(bad)
pop
pop
cs
pop
xor
lods
jp
dec
cmps
stos
ret
movs
out
(bad)
std
jae
mov
pop
arpl
arpl
jge
movs
adc
pop
adc
push
mov
int
sti
pop
popa
ds
mov
pop
int
adc
popf
shl
jp
mov
aad
iret
jae
pop
mov
jmp
outs
mov
jmp
inc
pop
(bad)
imul
or
lods
mov
sahf
fnsave
mov
bound
cmp
adc
mov
push
jge
in
push
fcmovnb
or
imul
(bad)
repz
xor
pop
pop
and
in
ss
loop
xor
mov
dec
inc
pop
ret
push
xor
aam
push
mov
movs
hlt
jle
adc
sar
add
jae
push
imul
dec
pop
rol
outs
add
inc
mov
out
pop
aam
in
and
push
add
mov
jg
jnp
pop
sbb
cmps
and
es
sbb
mov
outs
mov
clc
push
xchg
jecxz
(bad)
adc
push
mov
shr
shl
(bad)
icebp
xor
mov
rep
into
inc
dec
mov
dec
adc
(bad)
mov
pop
ins
push
loop
lods
inc
not
adc
dec
rcr
cmp
sti
mov
arpl
inc
aas
and
fmul
shl
push
lock
out
outs
pusha
dec
push
(bad)
retf
es
inc
loopne
addr16
pop
adc
(bad)
cmc
xor
int3
jns
ss
mov
jp
push
xor
(bad)
aas
arpl
(bad)
retf
xchg
fxch
inc
xchg
js
adc
cli
ss
jne
in
mov
and
cwde
mov
int3
sbb
test
loop
bound
jg
push
retf
sbb
into
lods
stos
xchg
rcr
add
fadd
or
sahf
or
push
lds
dec
movs
adc
lock
mov
shl
adc
daa
cmp
out
mov
jle
(bad)
fnstcw
pop
(bad)
pop
adc
xor
dec
or
sbb
arpl
ss
rcr
fwait
adc
icebp
lahf
and
inc
mov
mov
xchg
sub
ins
mov
and
push
fdivr
(bad)
imul
ins
shr
xor
add
mov
pop
es
imul
xlat
adc
mov
mov
dec
scas
xor
aaa
push
jbe
cld
aad
stos
push
mov
aam
sub
push
jg
xchg
pop
xchg
fst
push
adc
jo
mov
add
out
jbe
imul
jae
neg
fs
lods
cmp
jno
jmp
out
add
popa
(bad)
xor
inc
add
adc
add
pop
enter
add
adc
add
add
pop
rol
sub
push
push
adc
add
pusha
push
mov
add
mov
add
adc
add
add
inc
addr16
bound
push
and
xor
pusha
mov
sub
and
mov
pusha
or
cmp
sub
pusha
addr16
rol
clc
movs
aad
mov
add
pop
rcl
add
test
ds
mov
ds
adc
or
inc
and
add
jno
jo
xchg
(bad)
mov
xor
pop
xor
xor
jge
gs
sub
mov
jb
rcr
sub
jge
push
in
inc
(bad)
cmp
fs
repnz
aaa
aad
inc
push
and
add
rcl
cmps
fiadd
xlat
adc
cmp
fadd
(bad)
sub
or
cli
arpl
xchg
sub
sub
jo
sub
aaa
pop
shl
sub
push
ins
repz
sub
sub
push
pusha
js
add
sar
adc
arpl
xchg
sbb
test
add
icebp
cmps
shl
and
pop
xor
cmp
and
repz
sbb
add
cs
and
lock
stos
shl
jnp
sti
and
push
and
and
imul
and
push
mov
adc
into
add
pop
adc
adc
add
jmp
arpl
and
add
add
sbb
add
pop
add
ficomp
add
fdiv
mul
sbb
pop
inc
loope
and
xor
mov
rol
adc
sub
adc
fs
shl
xor
test
pop
repnz
or
test
mov
or
and
or
ret
mov
and
xchg
and
jmp
adc
or
inc
jmp
adc
inc
repnz
and
(bad)
sub
push
and
adc
push
or
loopne
mov
push
pop
push
or
js
jnp
jbe
jp
sub
and
div
not
add
out
mov
jmp
xor
hlt
cmp
and
lock
bound
or
cmc
add
or
adc
push
or
aas
adc
add
push
daa
pusha
add
test
push
(bad)
and
fistp
add
sbb
add
sub
xor
pop
or
add
je
adc
sub
jno
and
and
ins
sub
pop
das
ror
pop
add
gs
lock
rcl
cmp
in
pop
push
enter
or
cmp
jmp
adc
dec
cmp
jo
add
adc
js
and
mov
push
daa
add
push
or
push
sub
mov
aaa
push
pop
rcl
jae
cmp
adc
xor
sbb
push
dec
pusha
pop
or
dec
aam
add
enter
repnz
lock
add
xor
inc
push
xor
jbe
add
inc
sub
jo
in
loopne
jae
ret
dec
add
xchg
sub
or
adc
or
xchg
adc
popa
and
and
add
ret
and
add
iret
xor
and
and
push
add
mov
xor
push
add
push
and
and
aaa
add
add
adc
jbe
cmp
jmp
or
xor
or
stos
mov
pop
jp
(bad)
or
xor
xor
popf
aaa
inc
vmread
xor
add
fdiv
int3
push
(bad)
adc
xor
jo
xor
mov
add
inc
add
inc
mov
addr16
sub
and
jbe
ins
and
arpl
dec
adc
mov
and
add
pop
add
push
add
fcmovnb
add
shl
xor
xlat
mov
jecxz
loop
mov
push
adc
xchg
sbb
(bad)
or
adc
shl
and
inc
or
bound
or
adc
adc
ret
and
xor
pop
or
pop
jp
in
inc
push
out
pusha
pop
movs
jl
and
mov
inc
daa
sbb
fs
pushf
push
and
or
inc
dec
movs
repz
hlt
xchg
ret
and
xchg
int
push
nop
jns
or
jmp
adc
add
add
setno
test
pop
xlat
add
or
xor
lock
jae
or
sub
mov
pusha
test
out
and
rol
or
push
pop
sbb
and
adc
or
dec
add
adc
adc
mov
jb
push
ret
fld
sti
or
mov
pop
mov
push
and
pop
inc
jne
push
cmps
push
aaa
jne
rol
(bad)
ss
push
(bad)
add
jle
or
add
pushf
cmps
jb
pop
xchg
xchg
mov
nop
int
leave
add
test
das
sbb
hlt
loop
lock
repz
cmp
sahf
mov
inc
sbb
mov
and
push
pop
add
jl
lds
mov
push
xor
jmp
xor
push
inc
add
fisttp
push
and
and
adc
jb
lahf
jge
and
mov
inc
or
add
pop
loopne
add
pusha
cmps
clc
xchg
add
jg
mov
daa
js
add
pop
jge
jmp
pop
vmovaps
fwait
or
mov
xchg
inc
nop
lods
and
or
jb
or
jae
and
dec
xor
jb
mov
je
cmp
push
inc
ins
inc
push
pop
imul
jge
xchg
add
sbb
pop
addr16
push
jb
jo
add
mov
mov
push
or
cmp
imul
repz
movs
and
mov
xor
mov
mov
idiv
cmp
push
mov
ret
inc
sbb
xrelease
or
add
mov
add
xchg
popa
movups
xor
adc
adc
mov
jge
pop
test
int
mov
xor
xor
adc
shl
dec
and
cmp
pop
mov
adc
adc
aam
mov
add
adc
adc
popa
push
add
push
jbe
adc
das
or
or
ror
pop
jb
daa
push
stos
out
jmp
adc
or
in
loop
jo
in
adc
push
adc
and
test
adc
and
push
mov
xchg
and
lds
push
add
adc
jge
push
or
xor
dec
mov
dec
sub
or
add
add
pop
adc
add
mov
scas
fiadd
and
sahf
pop
xchg
cwde
xchg
add
aas
ret
movs
or
pop
add
adc
leave
and
shl
push
add
sbb
sub
dec
and
add
xlat
bound
cmp
inc
sti
out
and
jno
xor
das
inc
push
and
jo
adc
pop
dec
sub
xchg
adc
aaa
xor
into
jmp
and
add
jmp
jbe
ret
add
add
sub
xor
pop
xor
cmp
jmp
imul
cmp
push
push
add
lods
pusha
sub
pop
popa
fadd
mov
f2xm1
imul
mov
loop
imul
sbb
adc
sar
adc
arpl
cmc
mov
and
pop
inc
nop
mov
ins
inc
nop
sbb
sub
xchg
pop
aam
stos
inc
adc
fnstenv
push
mov
add
pop
add
add
dec
push
push
jo
pop
sub
adc
test
add
sbb
dec
and
pop
add
push
aad
in
push
adc
lods
sub
add
mov
push
and
ss
popa
mov
pop
fiadd
or
and
or
jne
and
adc
add
push
out
hlt
pop
es
lods
adc
mov
sub
xor
sub
mov
cmc
mov
shl
mov
push
push
jge
addr16
xor
(bad)
shl
dec
push
rcr
xor
call
lds
ror
add
adc
outs
jo
or
adc
and
sbb
jbe
xor
push
add
mov
add
imul
daa
pop
lahf
xor
or
sub
inc
cmp
(bad)
(bad)
(bad)
(bad)
push
(bad)
adc
sub
int
cmps
les
mov
or
lahf
out
push
mov
and
outs
into
add
mov
mov
jae
out
pop
mov
int3
or
or
enter
adc
out
pop
pop
xor
lods
push
(bad)
mov
adc
lds
push
xlat
sti
xor
push
test
adc
(bad)
aad
cmp
loope
mov
adc
adc
push
adc
fistp
mov
loopne
jp
push
movs
lock
xchg
sub
rep
fadd
mov
xor
call
or
cmp
scas
das
xchg
or
cmp
sub
push
je
sub
pop
sti
push
shl
mov
popf
out
movs
sub
test
aam
adc
movs
pop
mov
daa
test
push
dec
idiv
addr16
data16
add
add
inc
sub
in
or
mov
scas
add
mov
mov
add
mov
mov
jecxz
ja
dec
imul
and
cmp
jne
into
int3
mov
add
mov
sbb
cwde
push
dec
nop
add
or
fsubr
inc
popa
ret
pop
jns
push
mov
pop
jecxz
sbb
mov
es
cdq
xchg
out
(bad)
fxch
xor
push
cmp
sahf
pop
fwait
pushf
mov
and
movs
jp
or
sub
lods
outs
xchg
mov
cmps
loopne
test
mov
or
iret
lock
loopne
jle
push
imul
fisttp
or
jmp
jge
lods
dec
mov
xchg
pop
jae
daa
dec
or
imul
or
sub
xchg
in
push
jl
es
push
push
dec
stc
mov
xchg
inc
popf
icebp
pusha
call
icebp
or
sbb
or
iret
sbb
shl
ss
or
icebp
sti
mov
xchg
jl
cdq
push
lock
push
jne
fild
dec
in
or
xchg
mov
push
pop
cwde
xor
mov
cdq
sbb
add
cmps
push
test
mov
jae
stos
mov
rcr
shl
scas
aad
mov
cmp
daa
cmps
sub
mov
ror
mov
or
cmp
pop
popa
mov
aas
push
sub
cmp
loop
push
cmp
(bad)
imul
dec
dec
sbb
cwde
jnp
push
sub
inc
clc
add
ss
sub
xor
ja
sbb
aad
in
loope
lea
out
fcomp
cmc
mov
add
cmp
rcl
sbb
adc
fsubr
lods
out
inc
cmp
fidiv
out
lods
shl
jbe
call
ss
jmp
mov
sbb
push
popf
es
outs
addr16
cld
ss
pop
popa
pop
adc
xor
ss
enter
(bad)
xlat
dec
pop
or
add
pop
into
movs
or
jb
in
cdq
xchg
fs
cmp
(bad)
mov
jg
(bad)
jo
lea
iret
mov
outs
or
and
sti
adc
fist
xchg
dec
push
pop
inc
je
or
and
inc
sbb
jno
jl
add
sbb
nop
mov
lock
je
dec
call
ret
pop
fnstcw
in
add
fstp
fld
ins
cs
sub
inc
add
xchg
push
sbb
gs
stos
aas
movs
push
cmps
daa
out
mov
out
cmps
pushf
push
inc
std
pop
mov
in
add
mov
push
hlt
lods
fld
call
out
xchg
mov
(bad)
xor
push
push
cmp
stos
ret
adc
adc
add
ret
pop
into
or
sbb
mov
xor
pop
jl
dec
bound
les
cmp
inc
mov
sbb
mov
push
aas
cmp
das
fild
stos
mov
pop
pop
push
retf
mov
in
inc
hlt
movs
in
div
or
xchg
xchg
jp
mov
xchg
xchg
enter
adc
mov
inc
rcr
cmp
rol
xor
cmp
or
call
mov
lock
lea
adc
sbb
sbb
mov
pusha
jno
push
xchg
into
jbe
and
adc
jbe
adc
idiv
mov
push
push
xor
sbb
push
adc
imul
fnstsw
or
add
fdivp
(bad)
int3
inc
das
jo
jne
mov
cmp
mov
pop
neg
push
cmp
cmp
fdiv
sub
dec
stos
xchg
push
lds
aaa
sbb
push
aam
add
xchg
out
jnp
cmc
aad
in
jno
xlat
or
jb
cld
inc
popf
adc
stos
icebp
jl
ins
retf
les
sbb
sub
les
and
mov
lock
jecxz
push
pop
movs
scas
cmp
pop
lock
je
jg
mov
fdiv
pop
and
jl
int3
lods
out
and
hlt
mov
push
cmp
xor
jg
(bad)
fst
ret
lock
push
call
push
sub
pusha
mov
sahf
sahf
push
push
cmps
push
mov
sub
rcr
inc
mov
xchg
(bad)
gs
js
addr16
mov
push
out
pop
adc
sub
xchg
cmps
push
aam
pop
ja
pop
inc
push
enter
call
cmp
pop
cmps
mov
ret
out
fwait
push
mov
push
icebp
xchg
mov
add
inc
xor
out
mov
mov
push
cvtps2pi
push
sbb
cmps
adc
jbe
ins
arpl
sub
jne
add
mov
push
sbb
sbb
push
sahf
mov
test
in
out
sub
lods
pop
cmps
mov
add
mov
pop
adc
cwde
mov
nop
xchg
retf
pop
inc
adc
mov
fnstenv
inc
jecxz
pop
aaa
add
sbb
sub
int
outs
push
jno
sub
jnp
mov
add
ja
pop
xchg
inc
nop
sti
movs
jg
xchg
(bad)
cmp
mov
add
push
int
sub
mov
add
add
add
xchg
add
add
sbb
arpl
xchg
add
add
mov
add
or
adc
add
mov
add
or
adc
add
mov
add
or
adc
add
mov
add
or
adc
add
mov
add
or
adc
add
mov
add
pop
cmc
adc
add
mov
add
add
sbb
sbb
mov
add
add
arpl
xchg
add
add
scas
in
int3
add
daa
rol
xchg
add
add
scas
mov
add
or
daa
mov
xchg
add
pusha
mov
cs
add
adc
add
adc
mov
sbb
arpl
xchg
ins
add
dec
add
sbb
sbb
inc
mov
cmp
inc
and
stos
mov
xor
mov
xor
inc
arpl
mov
add
xor
adc
ror
jo
icebp
xchg
ss
add
stos
call
gs
or
retf
add
rcl
push
or
add
mov
sub
add
test
xchg
mov
cmc
dec
add
xor
dec
add
sbb
jmp
or
xchg
ins
or
daa
daa
dec
push
cmc
xor
mov
push
jb
dec
and
adc
or
sbb
movs
dec
adc
stos
xor
cmc
jge
add
stos
cwde
ins
aaa
retf
add
add
pop
cld
adc
jo
inc
ror
jo
inc
and
enter
lods
xor
dec
sahf
or
cmps
fsub
or
mov
pusha
retf
les
rol
fimul
(bad)
mov
cmps
or
retf
sub
xor
adc
jp
add
add
xchg
push
ja
inc
add
jbe
rol
jns
into
push
xchg
call
adc
xchg
aam
call
mov
ins
add
cdq
add
add
ret
test
xchg
dec
and
and
and
dec
add
test
push
or
add
ss
fsubr
inc
lea
ins
ins
jb
inc
inc
add
mov
add
movs
test
xchg
xor
mov
inc
mov
or
jns
pop
and
inc
leave
aad
shl
inc
add
or
jns
int3
xor
xor
shl
xor
push
lock
fwait
xchg
xor
loopne
fwait
daa
dec
inc
add
add
mov
xchg
push
sub
mov
rcr
sahf
pop
imul
(bad)
mov
or
sar
(bad)
inc
pop
clc
mov
sub
js
mov
call
in
addr16
add
xor
dec
dec
and
xor
dec
xor
add
fdiv
push
xor
shl
add
das
imul
mov
add
and
jle
add
xor
ror
lds
test
inc
xor
rol
inc
add
add
movs
enter
add
pop
cmp
xor
add
gs
jge
add
add
movs
aad
or
inc
adc
inc
arpl
outs
add
xor
inc
lods
push
sbb
push
rcl
adc
mov
ins
nop
add
pop
or
dec
and
sub
push
jne
ja
in
scas
dec
mov
inc
add
xor
shl
pusha
ss
push
xchg
xor
add
inc
add
adc
xchg
imul
add
and
adc
add
mov
je
rcl
add
push
add
xor
enter
add
nop
pop
inc
adc
add
xor
dec
xor
push
add
test
sub
add
add
jne
push
push
aam
xor
add
add
imul
and
adc
push
add
and
arpl
mov
xor
inc
sbb
adc
pop
mov
add
pop
loopne
push
add
inc
clc
xor
or
xor
dec
xor
add
and
inc
xor
dec
add
and
sub
add
inc
xor
dec
mov
push
inc
add
rcl
movs
add
and
ss
inc
test
and
jl
xchg
add
inc
add
add
mov
add
dec
add
lods
xor
inc
add
and
xor
and
dec
inc
add
and
in
add
xor
push
data16
dec
add
inc
dec
add
aas
xor
add
and
inc
inc
inc
xor
inc
and
inc
ins
adc
inc
sbb
adc
dec
inc
add
inc
add
and
xor
loop
dec
add
shl
lods
add
push
shl
add
and
add
dec
fadd
xor
sahf
mov
xor
pop
(bad)
shr
les
push
dec
add
inc
add
inc
sub
dec
xor
inc
add
lock
add
add
and
inc
add
rol
test
lods
into
xor
or
pop
loopne
xor
ins
movs
popa
nop
push
aas
in
cmp
or
push
add
add
and
and
add
push
or
xor
add
arpl
inc
mov
adc
add
nop
and
hlt
add
add
sub
inc
xor
xor
dec
xor
inc
enter
movs
popa
mov
sub
add
dec
cmp
xor
sub
and
ret
push
and
push
dec
add
adc
mov
sub
inc
lds
scas
fimul
movs
add
push
pop
or
cmp
mov
nop
call
push
cmp
fcom
xor
dec
cmp
xor
dec
pop
lods
add
add
add
adc
dec
arpl
adc
pop
add
pusha
adc
and
rol
les
and
xchg
cmp
xor
and
(bad)
push
pop
add
mov
jno
ret
or
adc
repnz
xor
adc
mov
xor
nop
add
xor
je
xor
ror
inc
arpl
mov
and
cs
or
adc
xor
inc
add
or
add
add
push
push
div
lds
adc
add
add
push
out
in
inc
or
in
shr
es
rol
dec
and
and
xchg
stos
xor
dec
and
add
xor
rol
add
or
inc
push
ins
xor
inc
add
sub
pop
xor
in
add
xor
inc
add
push
inc
xor
mov
push
xor
and
and
popa
lods
pusha
sub
add
out
inc
inc
sub
inc
rol
add
pushf
ret
pop
pop
loopne
pusha
sub
ins
inc
inc
cmp
cld
xor
dec
adc
nop
pop
add
pop
sub
popa
sub
pusha
aas
popa
sub
xchg
inc
add
call
add
mov
add
dec
ja
push
jno
bound
inc
add
inc
ret
pusha
xor
mov
inc
and
xor
ins
push
and
ins
loop
inc
and
xor
and
add
pop
inc
or
add
add
scas
mov
dec
xor
push
and
add
repnz
rcr
inc
arpl
pusha
fisub
bound
add
inc
adc
xor
in
adc
sbb
adc
ror
push
sbb
add
cmc
rcr
fst
sbb
xor
and
int
or
xchg
pop
out
xor
repz
das
das
js
xor
repz
shl
repz
cmp
mov
and
xchg
pop
mov
xor
loop
xor
mov
xor
and
jle
xor
mov
push
xor
inc
pop
fild
icebp
int3
and
sub
aas
in
inc
adc
stos
pop
adc
xor
stos
inc
mov
push
xlat
xor
jecxz
enter
push
jecxz
inc
and
mov
ss
jecxz
mov
aaa
lock
xor
cmp
xor
xor
push
sbb
jecxz
sbb
jecxz
in
sbb
mov
rcl
shl
stc
xchg
push
arpl
repnz
push
rcl
dec
and
adc
dec
sub
sub
xlat
pop
inc
add
sub
not
shl
add
and
inc
sbb
sub
sub
shl
ret
shl
adc
dec
sub
adc
sub
adc
sub
adc
xor
adc
sub
and
adc
sub
or
xor
push
xor
and
xor
leave
je
mov
xor
xor
push
ret
ror
and
sub
adc
xor
push
xor
xor
and
xor
mov
mov
xor
push
mov
dec
and
adc
sub
push
(bad)
and
and
mov
sbb
xor
mov
movs
adc
adc
sub
and
dec
and
adc
xor
xor
and
sub
(bad)
push
mov
mov
rol
xor
push
sbb
sub
mov
xor
mov
push
mov
mov
inc
xchg
movs
mov
xchg
push
sbb
sub
push
xchg
mov
xor
xor
xchg
sar
push
xchg
bound
adc
xchg
bound
jae
adc
xchg
and
xchg
dec
jbe
xor
in
adc
xor
xor
mov
push
xchg
shr
xchg
push
xchg
xchg
inc
and
xor
adc
sub
jecxz
xor
xor
or
repnz
and
adc
xor
aad
sub
xor
imul
xor
adc
test
push
sub
stos
xor
and
adc
sub
mov
xchg
inc
and
sub
xor
mov
adc
xor
and
cmp
push
jae
push
add
xor
push
push
and
dec
daa
das
cmp
xor
push
push
push
xchg
je
or
push
xor
xor
mov
mov
es
adc
xor
add
movs
pop
sub
pop
sbb
es
cmps
adc
es
inc
rcr
xor
arpl
int
ror
xor
and
mov
and
and
and
and
and
adc
bound
and
and
add
push
shr
push
push
pop
xor
pop
push
rol
inc
jb
and
adc
xor
xor
adc
scas
adc
xor
pop
loop
and
add
mov
mov
daa
stos
cmc
xor
ficomp
sar
push
add
inc
bound
xor
shl
cmc
sbb
and
and
mov
xor
xchg
sub
xchg
xchg
sbb
and
mov
and
add
loop
and
in
adc
and
leave
sub
sub
and
add
adc
adc
adc
and
cmps
push
xchg
push
and
and
pop
adc
and
loop
push
and
ins
adc
and
dec
and
adc
xor
mov
dec
and
xor
loop
and
xchg
ja
sbb
and
xor
stos
adc
adc
mov
push
nop
adc
retf
and
and
and
loop
adc
and
and
xor
rcr
inc
add
aas
add
bound
add
add
dec
daa
out
add
and
sbb
add
add
sub
xor
repnz
and
pop
repnz
and
adc
adc
repz
repz
adc
retf
pop
xor
xchg
ficom
or
repz
inc
push
repz
cmp
repz
xchg
lea
xor
xchg
popf
sbb
xor
cmp
rcr
push
repz
jno
pop
push
pop
repnz
test
in
push
scas
or
push
xchg
xchg
in
cmp
jecxz
leave
loop
dec
and
dec
and
or
jecxz
rdtsc
jecxz
aad
xor
push
stc
push
jecxz
stc
loop
fisubr
loop
pop
push
jecxz
aam
xor
rcl
shl
mov
punpckldq
shl
push
rol
dec
and
pop
rcl
and
xor
rcl
shl
and
jne
sbb
and
ret
push
cmp
xor
popa
ret
cs
loope
and
jle
ret
adc
push
fisub
ret
adc
gs
xor
or
mov
xor
popa
adc
dec
sbb
sbb
ret
popa
sub
sbb
add
xchg
mov
add
xor
sbb
and
sbb
adc
add
mov
and
or
popa
mov
sbb
or
inc
push
and
push
pop
xor
push
adc
inc
pop
sbb
movs
inc
mov
sbb
movs
and
aad
sbb
and
push
sbb
and
xor
movs
or
xor
mov
xor
sbb
and
xor
int
adc
sbb
movs
xchg
loope
adc
sbb
inc
loop
adc
sbb
sub
xchg
popa
pop
adc
sbb
ss
xchg
popa
cmps
and
jge
xor
jge
sbb
sbb
xor
lock
data16
and
ss
xor
dec
and
and
sub
xor
xchg
popf
sbb
cmc
sbb
ficom
sub
pop
cmc
es
push
sqrtps
add
jne
mov
pop
cmps
adc
push
push
jae
jmp
loope
and
out
pop
jb
jmp
inc
sub
push
push
jb
pusha
and
push
push
bound
adc
push
imul
and
inc
bound
inc
gs
and
adc
push
xchg
test
xor
xor
add
jecxz
dec
push
dec
push
xor
loope
and
and
xor
daa
dec
adc
loope
adc
adc
push
rcr
push
loope
adc
xor
mov
and
fsub
adc
adc
jmp
push
add
xor
cmp
adc
add
cmp
dec
adc
adc
push
mov
inc
xor
inc
push
inc
loope
adc
adc
push
xor
add
ret
and
add
int
adc
jmp
adc
add
sub
sub
sbb
rol
xor
pop
xor
cmp
add
add
xor
push
and
inc
or
push
or
push
int3
and
and
cmc
pop
and
adc
adc
and
mov
or
and
nop
and
and
and
cmc
add
loope
and
inc
and
adc
adc
mov
and
push
or
adc
or
rol
adc
add
dec
xor
sub
sbb
dec
adc
add
push
adc
rol
adc
inc
cs
mov
xchg
dec
and
adc
test
or
push
adc
inc
and
jb
sub
add
adc
ror
stos
adc
dec
and
add
push
adc
xor
xchg
daa
add
cwde
push
sbb
adc
xchg
add
mov
inc
dec
and
loopne
movs
rcl
repz
and
adc
jmp
and
dec
add
cmps
dec
and
mov
and
mov
xor
push
adc
push
dec
adc
clc
adc
dec
and
adc
push
dec
and
cdq
adc
lds
jnp
rol
pusha
adc
xor
shr
inc
add
add
shl
imul
inc
add
popa
jg
je
xor
cmp
pusha
fidivr
inc
add
inc
add
inc
add
inc
add
in
sbb
cwde
das
imul
adc
and
add
and
shrd
adc
out
adc
nop
push
adc
movs
adc
icebp
ror
dec
sub
inc
jecxz
and
mov
add
add
add
sbb
add
push
adc
rcr
mov
mov
sti
lea
movs
adc
add
dec
add
add
sub
push
xchg
(bad)
and
loopne
popa
adc
push
push
push
adc
add
sub
pop
inc
adc
rcr
adc
push
nop
inc
add
loopne
mov
adc
push
pusha
loopne
in
dec
add
push
cs
push
pop
gs
add
adc
dec
and
adc
fs
adc
fs
mov
dec
and
fnsave
and
adc
inc
and
adc
inc
and
push
add
addr16
add
pop
and
lods
jbe
fimul
or
adc
and
lock
imul
add
sub
ins
adc
or
adc
add
test
popa
call
inc
pop
fiadd
fstp
adc
push
or
add
inc
push
inc
and
cmp
jae
inc
icebp
inc
and
mov
and
adc
inc
and
mov
or
jg
inc
add
dec
and
adc
inc
and
add
adc
dec
lock
(bad)
(bad)
cmp
add
add
mov
push
test
and
test
add
retf
lds
sub
test
test
adc
gs
push
pop
jge
jp
push
fidiv
leave
mov
(bad)
popa
(bad)
iret
movs
inc
or
sub
push
cmp
ret
xor
iret
dec
es
cmps
jmp
retf
or
push
retf
pop
jp
loopne
jno
mov
cwde
xor
jbe
inc
(bad)
push
sbb
or
mov
push
cmp
test
and
daa
add
sbb
push
daa
mov
ret
mov
push
scas
sub
xor
xchg
adc
lahf
add
jmp
adc
jge
(bad)
loop
aaa
pop
mov
nop
mov
jl
push
mov
jecxz
cmp
lahf
pop
jbe
jne
(bad)
repnz
fcomp
xchg
jp
mov
sub
push
sub
pop
or
jno
pop
into
jo
jne
add
pop
stos
pop
mov
fbld
lods
(bad)
in
dec
cdq
inc
and
popf
jg
sub
adc
jmp
jle
stos
or
call
sub
scas
and
jns
retf
cmp
jp
inc
gs
pop
pop
jecxz
lock
fcom
inc
jmp
pop
sbb
(bad)
pop
(bad)
ficom
mov
mov
dec
sahf
pop
test
pop
fwait
dec
(bad)
addr16
call
rcr
and
xchg
cmp
jl
out
sub
dec
mov
leave
out
loopne
fidivr
mov
dec
jo
pop
mov
(bad)
aad
(bad)
ins
mov
xchg
jb
push
aaa
adc
call
jg
dec
or
mov
fisttp
or
(bad)
(bad)
xor
sbb
xchg
pop
sub
pop
cmc
sub
inc
mov
cli
sbb
fst
xor
mov
(bad)
lock
pop
in
daa
rcl
(bad)
xchg
cmp
aad
cmp
das
push
inc
ins
or
addr16
pop
mul
inc
leave
add
test
push
loop
mov
pop
outs
fwait
xchg
inc
sbb
retf
mov
dec
in
mov
xchg
(bad)
push
mov
jb
pop
sbb
add
mov
data16
out
push
push
mov
jne
cmp
sbb
and
push
mov
adc
stos
aad
out
adc
jmp
int3
lods
mov
inc
mov
scas
iret
pushf
dec
pop
xchg
and
inc
out
movs
jge
not
out
sbb
push
dec
inc
arpl
push
popf
out
adc
xchg
push
xor
xchg
aam
add
lahf
pop
push
pop
mov
sub
stc
cmp
xor
mov
popf
xchg
ins
adc
or
jnp
jb
stos
ret
sahf
mov
pop
pop
add
push
jno
cmc
adc
jbe
or
ds
or
jg
jge
les
mov
jne
test
(bad)
or
xchg
sub
scas
jb
(bad)
sub
rcr
je
loope
lock
adc
sub
jp
pop
push
ins
sbb
fnstenv
add
inc
sbb
stos
and
lods
mov
mov
xchg
loopne
outs
imul
mov
pop
sub
xchg
mov
sub
xchg
push
aad
cmps
inc
cmp
mov
mov
rcpps
loopne
outs
fstp
dec
sbb
and
jae
fld
cli
sub
xchg
and
pop
mov
inc
adc
mov
fisubr
jp
add
add
add
add
add
bound
jae
inc
arpl
outs
jae
push
adc
add
push
pop
jp
or
dec
and
xor
fnstcw
movs
cmps
mov
pop
nop
ffree
ret
rcr
mov
cmp
shr
(bad)
aad
dec
adc
mov
adc
mov
int
gs
pusha
and
mov
sub
and
sub
or
arpl
aaa
aaa
cld
add
aam
lahf
and
es
mov
imul
ds
sbb
xchg
mov
add
add
add
add
xor
push
add
and
add
add
add
add
add
mov
test
dec
sbb
sbb
add
je
add
gs
jne
outs
dec
cmp
imul
jb
push
add
jne
imul
jne
add
arpl
jb
push
jo
jb
je
dec
cs
imul
je
jns
add
jne
imul
bound
imul
je
bound
je
inc
jns
add
imul
ins
outs
inc
gs
imul
arpl
add
push
jb
ins
imul
gs
jns
push
add
jne
imul
outs
outs
call
push
es
and
xor
push
xchg
(bad)
es
xchg
aaa
pop
add
imul
ins
gs
jb
push
inc
xchg
xchg
add
fs
(bad)
or
add
jb
jae
inc
and
ins
jne
add
jo
push
lock
jb
imul
adc
gs
add
add
xor
mov
loopne
in
rol
jb
add
fsub
mul
xchg
push
adc
out
xchg
out
add
xlat
inc
push
push
add
pop
bound
(bad)
jmp
and
adc
mov
push
icebp
gs
add
not
and
jmp
mov
daa
and
cdq
sub
mov
retf
add
push
xor
and
adc
sub
add
and
cmp
add
jo
mov
add
ret
adc
add
repnz
add
adc
pusha
add
pop
push
add
add
ret
inc
and
nop
(bad)
and
push
xchg
inc
and
xchg
inc
and
adc
xchg
inc
and
inc
add
push
aam
cdq
push
sub
sbb
pusha
adc
and
sub
add
add
adc
mov
and
jb
lock
nop
movs
dec
and
adc
inc
and
adc
push
adc
mov
and
and
adc
jo
adc
pop
inc
push
inc
xor
sar
mov
sbb
adc
rcl
adc
retf
add
das
or
inc
jno
and
add
iret
and
xchg
add
and
pusha
inc
loopne
sbb
or
add
rol
loopne
int
dec
mov
iret
or
or
out
or
shr
add
xchg
iret
push
or
aas
loop
inc
push
push
cwde
add
shr
push
(bad)
(bad)
mov
xor
aas
add
jmp
mov
adc
add
scas
or
adc
add
out
icebp
test
or
mov
call
add
pop
leave
push
mov
pop
jmp
add
and
add
cli
jecxz
push
xchg
sub
push
inc
add
fwait
mov
push
pop
adc
add
mov
pop
sbb
adc
test
add
sbb
push
add
data16
xchg
jbe
in
sub
imul
icebp
mov
es
jle
inc
fmul
add
pop
loope
push
xor
inc
add
lock
adc
xor
add
aaa
xor
xor
bound
outs
push
jns
dec
arpl
add
push
and
popa
jb
je
outs
cmp
and
shl
push
inc
and
mov
icebp
mov
add
std
adc
add
inc
repnz
xor
and
dec
stc
cmc
lock
and
xchg
in
loopne
push
ss
or
xor
push
inc
xor
xor
jbe
xchg
adc
push
and
ds
or
sub
jb
scas
in
fsub
sub
mov
inc
inc
or
fstp
inc
icebp
jl
clc
dec
gs
adc
push
nop
xchg
jmp
sbb
jo
and
pop
les
add
push
push
xchg
mov
sub
add
jg
dec
and
pop
jae
pop
fsubr
push
inc
bound
pop
push
sbb
(bad)
push
or
in
push
mov
js
or
das
jmp
or
and
popa
outs
les
add
fisubr
or
cld
les
or
push
mov
mov
mov
xor
mov
mov
cld
out
push
nop
cld
mov
ins
or
lods
lahf
retf
push
std
and
mov
inc
(bad)
push
and
in
je
lahf
sub
add
lahf
sbb
xchg
into
(bad)
cmc
mov
or
shl
inc
mov
fs
pop
aaa
movs
sahf
(bad)
out
popf
add
and
out
mov
add
fistp
sbb
xchg
adc
test
outs
outs
pop
adc
shl
jbe
xor
shl
pop
psrlq
jl
div
cmp
add
push
imul
jo
fld
push
pop
inc
pop
dec
cli
adc
add
push
or
lods
add
or
or
add
xor
xchg
aas
mov
sbb
sar
jne
aas
loop
cmp
push
xor
aas
mov
cld
cmp
add
xor
fdivp
ror
adc
dec
pop
xor
div
xor
inc
add
data16
adc
adc
xor
xor
and
outs
sbb
adc
sbb
xor
add
jo
xchg
adc
add
push
and
xor
xchg
jo
inc
jno
push
mov
adc
or
or
dec
adc
jle
mov
xor
and
push
adc
mov
push
dec
daa
movs
das
add
xlat
sub
movs
inc
jae
leave
sbb
test
jb
push
jbe
mov
imul
xor
adc
(bad)
ret
xor
sbb
jo
xor
mov
pusha
imul
das
rcl
nop
push
add
bound
pusha
jae
mov
inc
inc
ja
push
out
shl
xor
push
mov
inc
and
or
or
adc
pusha
(bad)
cmp
or
or
popf
or
mov
icebp
inc
adc
add
aad
push
(bad)
push
add
repz
imul
lea
shl
(bad)
push
or
or
shl
xchg
mov
xor
rcr
mov
add
outs
js
gs
inc
adc
xchg
add
inc
add
sub
jns
xor
inc
add
pop
add
push
sub
add
push
adc
xchg
add
xor
cmp
mov
bound
popf
and
and
je
(bad)
in
mov
pop
add
sti
dec
xor
add
stos
xlat
adc
adc
pusha
xchg
mov
or
adc
add
mov
gs
les
and
push
push
pop
and
jmp
loop
pop
adc
push
push
sub
add
add
mov
jno
xchg
cli
jno
jmp
jle
dec
aad
out
mov
std
adc
add
xor
pusha
jo
jl
aas
push
fs
xlat
push
sbb
dec
mov
add
aam
inc
adc
push
add
xor
push
xor
pop
movs
or
in
xor
jle
mov
mov
xor
sub
into
loopne
adc
sar
mul
leave
(bad)
sbb
xchg
add
retf
add
cmps
and
lock
adc
popa
or
test
arpl
add
cmps
sbb
adc
cmp
jnp
sbb
xchg
in
xor
sub
cmp
adc
mov
shl
xor
inc
test
xor
adc
push
out
dec
adc
or
rcl
jo
jb
jne
pop
(bad)
xor
add
xor
das
data16
jp
xor
loope
and
add
loope
inc
sub
leave
sbb
xor
sbb
popa
mov
and
dec
cld
out
cmp
repnz
xor
pop
mov
adc
daa
adc
adc
sbb
jmp
xchg
adc
ret
dec
xchg
shl
jne
add
add
cmps
clc
mov
add
sbb
sbb
and
xor
sbb
pusha
dec
jnp
add
sub
push
push
add
push
adc
pop
cmp
pop
(bad)
jmp
xchg
pop
pusha
(bad)
ret
clc
and
push
xlat
mov
outs
sub
cmp
inc
stc
jne
push
loop
xor
sbb
mov
arpl
or
hlt
adc
lods
mov
shl
(bad)
outs
push
add
or
sub
adc
out
xor
dec
xor
rol
cwde
add
shl
xchg
add
ret
repz
xor
add
add
push
sbb
into
sahf
lock
movs
push
sar
lock
xchg
add
push
add
std
repnz
pusha
ret
adc
aad
push
or
sub
adc
xchg
adc
xchg
adc
add
xlat
or
jbe
dec
and
xor
pop
inc
sub
movups
mov
pusha
nop
pop
push
add
and
adc
jae
or
lods
add
adc
not
or
and
loopne
adc
pop
adc
stos
and
ror
in
std
clc
add
inc
adc
repnz
pop
push
add
add
mov
sub
adc
add
add
sbb
dec
adc
add
jmp
cmp
pop
and
lods
xchg
push
or
or
bound
je
leave
xchg
add
xchg
add
adc
push
sub
jne
pop
xchg
dec
inc
inc
sbb
inc
pop
dec
xor
(bad)
pop
xor
dec
xchg
repnz
pop
rol
cmp
repnz
xchg
aad
fmul
inc
jmp
inc
outs
cmps
adc
sub
ror
add
lock
ss
push
shr
xor
xor
js
cwde
popa
xchg
sbb
pop
shl
add
inc
loop
std
push
mov
xor
xchg
add
add
cmp
fcmovu
shr
ret
inc
repz
adc
call
push
rol
xor
xor
adc
jne
lds
cmps
add
adc
xor
xor
add
add
add
psadbw
jbe
or
pop
js
fild
add
push
and
pop
inc
shr
div
jp
mov
cmp
sub
ret
push
and
and
iret
xor
add
adc
movs
jb
jmp
(bad)
popf
data16
adc
add
adc
push
repnz
or
add
push
or
movs
inc
and
nop
sub
and
mov
xor
add
outs
sbb
lds
adc
adc
adc
jp
aaa
adc
push
aad
mov
xchg
xor
adc
push
xor
arpl
add
xor
add
stos
sub
push
outs
and
mov
push
mov
cs
pop
lock
xor
xchg
fs
cmps
cdq
test
add
or
adc
mov
fs
sbb
les
jecxz
aam
jmp
sub
and
push
adc
jbe
mov
push
adc
popa
add
loope
es
bound
xchg
push
lock
xor
ins
inc
mov
bound
adc
inc
mov
stos
adc
push
sbb
(bad)
and
sub
and
adc
push
add
out
and
jmp
adc
and
outs
adc
(bad)
dec
(bad)
adc
sub
adc
movs
jno
push
loopne
adc
push
pop
push
jo
push
and
jmp
(bad)
adc
pusha
cmps
jno
fstp
jo
xor
inc
sahf
lock
push
call
xchg
push
out
das
mov
repnz
sbb
add
jg
inc
jecxz
scas
push
inc
or
add
add
leave
repnz
pop
sbb
std
push
add
adc
or
retf
push
cmc
ins
ror
loope
mov
xchg
rcr
pusha
mov
sbb
xchg
or
sbb
rcl
jg
mov
adc
add
cdq
xor
out
push
push
fild
push
add
push
push
nop
sahf
add
sahf
add
and
adc
xchg
sbb
hlt
mov
imul
repnz
dec
ror
pop
inc
jo
mov
push
push
add
xor
ss
push
mov
push
xor
and
sbb
mov
sahf
push
and
sub
xor
sub
cmp
movs
sbb
xlat
or
xchg
jnp
imul
jecxz
jo
imul
and
pop
jo
and
or
test
ds
cmp
gs
pop
add
push
push
dec
fwait
sbb
mov
xchg
adc
jno
and
cmp
mov
jl
(bad)
scas
ret
adc
loop
iret
mov
inc
loope
cmc
push
mov
fptan
adc
add
or
repnz
fisub
mov
jmp
and
mov
das
pop
lods
out
adc
cmp
ss
(bad)
mov
gs
bound
je
arpl
mov
xchg
adc
call
sub
jge
mov
jne
xor
mov
and
adc
add
xchg
adc
inc
invd
xchg
stos
mov
mov
xchg
add
or
mov
xor
and
add
push
mov
sub
mov
fwait
sbb
push
and
xchg
jmp
lods
in
add
mov
jns
sub
xor
shl
cli
sbb
add
pusha
push
push
pop
test
mov
add
test
sub
add
pop
lea
nop
pusha
sub
dec
mov
push
pcmpgtd
out
popa
add
xchg
jne
push
push
and
adc
or
rol
push
mov
inc
add
cs
adc
out
adc
(bad)
adc
lock
icebp
pop
xor
loopne
ror
adc
xor
jbe
pushf
add
sub
pop
xchg
adc
fimul
jbe
loopne
xchg
push
and
test
icebp
add
ins
pop
hlt
add
adc
or
adc
sahf
cmp
sbb
outs
adc
adc
inc
jle
mov
jmp
push
aad
inc
(bad)
and
adc
adc
nop
or
lods
out
retf
mov
pop
adc
jl
xchg
loopne
add
rcr
lea
rcl
inc
adc
mov
push
pop
bound
inc
push
xor
rcl
or
outs
or
sub
sbb
nop
popa
retf
adc
mov
sti
popa
pop
xchg
pop
xchg
dec
and
and
stc
add
enter
xchg
jp
add
push
in
int3
adc
pop
fcom
xor
push
test
sbb
test
sbb
and
adc
hlt
xchg
adc
fs
cmps
scas
push
stos
pmullw
add
sub
push
add
inc
shl
sub
pop
ja
add
loopne
hlt
push
push
sbb
add
movs
dec
rcl
cli
add
shl
xor
sbb
(bad)
jae
adc
xor
in
or
xor
xadd
add
pop
add
add
hlt
add
pop
rcr
xor
inc
add
fbld
mov
sahf
pop
push
mov
das
les
ror
sti
mov
xor
add
fstp
(bad)
jno
mov
push
mov
mov
cmp
cmp
pop
repnz
cmp
sbb
xor
jnp
xor
in
stos
shl
js
xor
jg
and
pop
add
or
inc
cmp
pop
gs
mov
or
push
lods
mov
add
mov
pop
add
mov
dec
xor
xor
mov
inc
push
ins
ds
rol
or
shl
fwait
cmp
xor
cmp
enter
daa
push
jae
(bad)
rcl
add
adc
int
icebp
adc
aad
out
adc
icebp
add
xchg
or
mov
or
movs
pop
rcr
scas
fwait
mov
aaa
addr16
rcl
and
dec
addr16
pop
test
push
shl
nop
adc
add
int
xlat
inc
adc
aaa
(bad)
push
cs
push
pop
mov
nop
or
loopne
push
cmp
adc
ror
push
pop
lods
add
mov
adc
mov
add
sub
aam
rcr
xchg
daa
ret
dec
inc
push
cmp
add
pop
inc
mov
bound
and
stos
add
adc
adc
dec
arpl
add
not
add
scas
pop
cmp
(bad)
(bad)
inc
add
add
jmp
sbb
(bad)
jmp
sub
push
add
xor
pop
retf
sti
lock
jecxz
std
xor
push
sbb
mov
mov
loop
out
push
add
sub
sub
popa
daa
sub
push
cmc
add
jo
movs
xor
lods
mov
outs
lock
pop
rcl
xchg
cmp
ficomp
mov
mov
aam
fs
mov
xchg
mov
(bad)
or
cmp
push
fsub
xchg
xor
xor
mov
dec
gs
fisubr
cmps
ror
fcmovnu
xor
push
ret
push
(bad)
mov
and
bound
jbe
pop
and
into
out
ins
inc
stos
or
paddw
outs
out
jmp
push
out
mov
in
jae
xor
add
xchg
sbb
addr16
pop
add
pop
hlt
ins
in
jp
iret
es
push
add
fisub
add
pop
mov
pop
in
dec
sub
test
(bad)
or
sbb
adc
push
inc
mov
pop
add
cwde
or
and
(bad)
gs
and
lahf
leave
daa
jb
daa
les
xchg
loopne
pushf
neg
aaa
adc
fcomp
jno
in
adc
mov
xchg
dec
xlat
mov
add
mov
sub
outs
(bad)
push
loopne
sar
popa
inc
and
add
pop
mov
xlat
mov
rcr
aas
inc
imul
mov
ss
lods
pop
outs
cmc
js
or
adc
xchg
cmp
push
pop
or
call
push
(bad)
hlt
ror
xor
mov
push
add
data16
loope
cdq
(bad)
out
inc
or
jno
mov
sub
push
(bad)
xchg
xor
scas
mov
mov
not
(bad)
in
xor
retf
js
ficom
sub
rcr
dec
mov
pop
mov
sbb
jne
dec
mov
cmp
cmp
gs
sub
mov
test
js
dec
rcl
jne
cwde
sub
call
jg
push
adc
and
ret
(bad)
test
add
or
popf
mov
add
jae
push
jb
mov
inc
mov
lahf
fstp
lea
jle
ja
mov
or
shr
adc
test
push
pop
jl
mov
inc
psubusb
mov
fsub
sub
mov
adc
nop
outs
mov
inc
jmp
pop
in
mov
push
mov
cmp
pop
cmp
stos
lahf
sub
push
add
mov
ins
arpl
cmps
ret
scas
inc
adc
dec
int
cmp
pop
push
push
fsub
push
outs
mov
push
cli
pop
push
xchg
and
sub
out
aad
sar
sbb
mov
div
ja
jns
fdiv
icebp
mov
sub
mov
enter
rol
outs
out
pop
int
mov
sbb
pop
pop
cmc
dec
pshufw
and
cli
scas
mov
push
inc
push
pcmpgtd
lods
mov
inc
add
pop
cmc
retf
add
clc
push
sbb
or
adc
addr16
dec
jle
jns
cmp
ss
jmp
pop
mov
sbb
mov
or
stos
fild
mov
fisttp
push
(bad)
(bad)
jmp
xor
sub
retf
lea
fimul
retf
cmp
jno
push
mov
add
or
pop
cmp
or
dec
cmps
movs
sub
sub
pop
push
test
in
iret
adc
xchg
mov
enter
mov
xor
xor
cwde
in
pop
inc
push
add
lds
sub
and
sub
add
add
add
add
add
and
add
push
add
cmps
dec
add
push
and
and
sub
and
call
sub
sub
or
add
or
ret
xor
pusha
and
or
and
inc
lds
pusha
sldt
adc
add
or
cmp
or
and
mov
mov
nop
dec
push
add
add
and
add
add
daa
push
mov
or
inc
pop
sbb
cwde
add
jb
jbe
inc
sub
mov
adc
inc
push
das
xor
jne
push
ja
add
pop
mov
inc
inc
xor
xor
add
adc
sub
ror
push
test
ret
cmp
addr16
punpcklbw
adc
and
dec
dec
add
mov
sub
xchg
inc
arpl
adc
inc
je
mov
mov
(bad)
hlt
fwait
cmp
mov
jo
adc
xlat
mov
ins
bound
or
cmp
xor
cmp
dec
push
dec
pusha
and
adc
cmp
xchg
outs
pop
rcl
sub
mov
add
movs
sbb
cmp
nop
xor
shl
add
or
sub
(bad)
sub
sbb
and
aas
and
xor
inc
add
test
or
sahf
outs
nop
adc
xchg
push
push
pop
push
pop
push
sub
push
nop
push
cmp
and
and
jo
pop
test
xchg
shl
rcr
les
pop
mov
nop
sub
pop
xchg
push
and
xchg
pop
add
int3
ret
cmp
mov
or
cdq
xor
cmp
adc
int
sbb
adc
xchg
ja
cdq
add
push
in
push
sub
add
fs
fld
cmp
push
jb
imul
shl
jl
arpl
sbb
add
push
push
test
inc
adc
xchg
sbb
xchg
adc
jbe
bound
push
fsubp
push
fidivr
lock
cmps
dec
sbb
push
push
or
int
ret
shl
lock
jne
xchg
ret
add
test
and
test
jl
sbb
test
sub
test
inc
inc
pop
jae
mov
jb
and
add
adc
js
xlat
pop
adc
add
mov
pop
adc
js
dec
xor
mov
cmp
popa
or
clc
add
cwde
xchg
or
pop
add
jp
cmp
dec
fwait
aas
xchg
push
ds
movs
pop
sbb
stos
lods
addr16
loope
push
add
stos
push
mov
and
or
pop
mov
shr
jo
cdq
inc
not
test
and
add
sub
adc
inc
mov
dec
stos
loop
bound
cld
mov
inc
retf
push
bound
clc
retf
push
and
sub
fisubr
test
ficomp
push
nop
sbb
xchg
push
jl
mov
rol
sbb
push
xchg
cmps
fsub
aam
inc
or
xor
mov
or
fwait
jns
xor
add
add
sahf
fild
cmp
add
pop
pop
gs
pop
sbb
push
cmp
in
adc
mov
inc
rol
mov
aad
adc
ret
add
ja
inc
xor
in
sbb
ja
xchg
dec
xchg
mov
mov
jge
mov
mov
js
ins
or
or
inc
xlat
cs
pop
sub
mov
or
jb
das
mov
fadd
pushf
cmp
mov
cmovl
cmp
fnstenv
pushf
das
and
(bad)
loopne
dec
pop
loopne
hlt
add
scas
or
in
sbb
or
add
xor
sbb
es
sbb
(bad)
sbb
sar
mov
add
pushf
mov
or
push
adc
cmp
cmp
aas
xor
cmps
dec
lock
(bad)
jmp
add
add
add
add
test
jecxz
loopne
push
stos
std
push
out
add
push
cld
into
jmp
outs
sbb
loope
loope
adc
xor
stos
mov
(bad)
daa
add
ret
cdq
cmp
dec
inc
jo
cmps
sbb
add
repnz
(bad)
fisubr
pushf
aas
mov
or
sbb
dec
sahf
ja
sub
inc
ja
mov
sahf
leave
mov
push
into
add
test
push
jbe
pop
lods
jno
mov
pop
mov
cmc
cdq
adc
adc
cmp
int3
cmps
sbb
pop
mov
retf
add
sbb
add
out
inc
jne
mov
fdivr
inc
adc
mov
pop
mov
and
inc
inc
lods
fcom
pop
fnstsw
mov
in
mov
repz
popa
xchg
repz
pop
or
shl
(bad)
test
out
inc
in
or
dec
inc
xor
out
outs
push
in
test
add
mov
sbb
das
mov
xchg
fimul
cdq
or
aad
mov
sti
mov
ret
inc
jb
fwait
shl
xchg
fidivr
fstp
retf
inc
mov
push
dec
fnstsw
retf
mov
mov
nop
ret
lea
fucom
lods
stc
repnz
ret
outs
xchg
xor
test
adc
add
test
ins
push
fstp
pop
ror
aaa
fnstsw
aaa
cli
cmp
into
xchg
pusha
scas
ret
stos
mov
aad
leave
xor
sar
mov
or
xor
(bad)
xor
push
je
add
pop
sbb
retf
inc
arpl
lds
outs
int3
rol
jno
movs
aad
(bad)
sbb
es
pop
fisub
arpl
aam
aas
push
fcmovbe
shl
test
add
pop
cmp
retf
daa
xchg
pop
xchg
test
psrlw
dec
cmps
sahf
xchg
popa
jmp
imul
cmp
hlt
stos
push
lods
jo
ja
call
ja
mov
mov
dec
xor
inc
lea
and
hlt
clc
cs
mov
xchg
cmps
inc
or
and
(bad)
call
cmp
(bad)
xor
cmp
fisubr
call
fwait
rcl
mov
mov
leave
imul
ja
and
std
jge
shr
loop
fnstcw
cdq
xchg
adc
adc
mov
jmp
aas
mov
mov
imul
retf
xchg
in
cmp
mov
jg
leave
mov
or
mov
adc
fadd
cwde
out
dec
js
xor
or
mov
and
inc
xchg
sar
xchg
mov
je
pop
js
loope
mov
test
scas
fsub
or
mov
retf
xchg
add
adc
fdiv
add
push
call
stos
jae
mov
push
shr
(bad)
and
fwait
enter
or
xchg
iret
cmp
fidivr
xchg
mov
(bad)
arpl
cmp
xchg
mov
fsubr
sahf
xchg
in
pop
ret
es
push
jns
inc
sub
push
pusha
das
pushf
loop
xlat
sbb
inc
scas
xchg
mov
lds
je
leave
enter
mov
in
cmps
adc
outs
test
test
mov
adc
jecxz
mov
mov
adc
ja
ret
pusha
out
repnz
pop
mov
jnp
aam
pop
add
cld
into
sti
daa
add
push
sub
cmp
repz
sub
jecxz
in
hlt
xor
add
(bad)
mov
nop
icebp
retf
popa
(bad)
ret
mov
xchg
jns
dec
(bad)
iret
pop
mov
hlt
sbb
pop
push
mov
cmps
lds
lds
sub
outs
test
jg
sbb
scas
fsubr
aad
and
lahf
faddp
cs
jb
xchg
loopne
mov
ja
xchg
jmp
inc
adc
lock
(bad)
repnz
retf
aaa
add
add
mov
add
and
add
daa
test
add
add
sub
add
sbb
or
add
jne
add
add
bound
lods
cmp
sub
les
(bad)
(bad)
jmp
lods
inc
or
loope
ret
fnstenv
loope
sbb
sbb
jle
pushf
pop
and
sbb
and
xor
jle
pushf
repz
jno
popa
(bad)
push
fiadd
adc
xlat
and
ror
sbb
mov
or
popf
pushf
push
jno
cmps
ror
pushf
push
xchg
leave
sub
pushf
pavgb
sbb
pushf
mov
inc
adc
sbb
lods
cmp
adc
(bad)
cmp
jo
(bad)
add
(bad)
jmp
push
nop
stc
sub
dec
mov
or
ror
loopne
sub
xor
or
adc
push
adc
aam
push
or
popf
je
pushf
xor
popa
ror
rol
cmp
in
push
jmp
pushf
mov
(bad)
sbb
pop
mov
shl
xor
popa
xor
xor
inc
rol
stc
add
pop
push
push
rcr
push
xor
aas
cmovo
push
ins
jge
or
add
pushf
xor
popa
add
jecxz
and
add
pop
push
xor
jmp
ss
lock
popa
ds
popa
sar
in
and
pushf
cmpxchg
std
popa
xchg
lds
adc
xchg
movs
fcomp
aad
rcr
push
out
retf
sbb
dec
pusha
jmp
and
test
jecxz
push
add
push
pushf
inc
sar
jecxz
push
add
ja
add
pusha
fmul
imul
aaa
ret
adc
jecxz
dec
or
mul
jo
or
xor
popa
ror
dec
inc
std
sbb
in
cmc
add
pop
push
ret
in
xor
xor
fistp
xor
popa
mov
xchg
add
lock
pushf
xor
popa
xchg
sbb
iret
stc
add
pushf
xor
popa
inc
sub
dec
xor
add
lods
icebp
fistp
(bad)
rol
fistp
cmovo
lds
mov
jbe
sub
add
cli
retf
add
pop
pop
and
stc
pushf
wrmsr
cli
popa
adc
cli
popa
xchg
sbb
punpcklbw
jmp
rol
jae
fucomp
lds
pushf
mov
pop
xor
fisttp
mov
and
(bad)
add
pushf
push
shr
hlt
pushf
wrmsr
cli
popa
adc
cli
popa
shl
fisttp
sbb
(bad)
cmp
add
mov
pop
ss
push
push
(bad)
adc
and
ja
pop
pushf
xchg
les
fsub
add
add
sbb
add
mov
rcr
add
fidiv
sbb
pop
stc
cmp
add
pushf
adc
imul
add
pushf
add
imul
pushf
xchg
fdiv
lock
rcr
pop
and
lock
xor
sbb
sti
ja
add
(bad)
add
add
push
fimul
mov
rcr
push
into
sub
xor
sbb
stos
std
push
(bad)
repz
pushf
mov
retf
sbb
cli
popa
adc
push
fst
push
(bad)
(bad)
ret
sbb
sub
add
or
adc
mov
pop
popw
dec
outs
ror
pushf
wrmsr
sti
popa
adc
nop
fcomp
xor
popa
loope
push
fisubr
(bad)
(bad)
and
ror
mov
push
add
cmp
dec
cmc
add
pushf
xor
popa
jbe
retf
sub
jmp
xlat
add
daa
cmp
adc
sti
popa
adc
push
xchg
retf
sub
sbb
adc
add
(bad)
add
sbb
xor
mov
push
add
rcr
xor
in
and
jns
mov
fldenv
fiadd
mov
cli
popa
adc
leave
pop
push
pop
xor
xor
fimul
xor
popa
adc
cmp
rcr
xor
(bad)
lds
dec
repnz
fsub
cmp
cmp
push
cmp
popa
adc
(bad)
popa
sar
pushf
inc
int
add
cwde
ins
gs
pushf
xor
push
(bad)
cmp
popa
adc
add
enter
cmps
sbb
fnstenv
adc
ret
pop
es
and
lock
pop
push
add
add
dec
sbb
add
xchg
jge
jl
xor
jge
add
pushf
xor
popa
ror
xlat
or
aad
or
pusha
ret
mov
(bad)
movmskps
sbb
jge
in
and
mov
add
ins
jge
push
retf
add
pushf
loope
aas
mov
aas
xchg
xchg
fdivr
mov
sbb
dec
xor
int
add
pop
es
adc
jecxz
fsubr
fcmovu
add
sbb
pop
stos
int
(bad)
lea
sbb
adc
fnop
add
jo
add
stos
lods
fs
cmp
add
movs
jb
aad
xor
ss
sbb
or
ret
add
pop
data16
dec
int
rcr
add
pushf
push
mov
or
sbb
add
ss
adc
test
add
sub
mov
sti
popa
adc
sti
popa
rol
movs
sub
add
pop
push
add
in
arpl
fst
jnp
rcl
jmp
mov
adc
ret
pop
push
movs
ret
rol
fneni(8087
wrmsr
cld
popa
mov
loopne
imul
wrmsr
cld
popa
mov
sar
pushf
or
add
iret
pushf
xor
popa
jbe
ret
and
cmps
mov
sub
jnp
push
sbb
xor
cmp
pushf
mov
add
add
loopne
int3
sbb
pop
jbe
adc
adc
or
into
pushf
xor
popa
ja
rcr
and
mov
push
cwde
ret
ror
adc
cmp
mov
test
jmp
xor
popa
xchg
and
sub
jmp
lock
xor
or
fimul
bound
xchg
(bad)
icebp
fild
sbb
sbb
xor
rcr
dec
wrmsr
push
and
add
fcmove
xlat
push
gs
repnz
add
xor
or
xor
adc
in
cmp
add
(bad)
retf
shl
sub
and
jmp
inc
fisubr
add
mov
rcl
div
ds
add
and
pop
and
adc
fld
movs
ins
loop
ret
or
sbb
movs
add
push
in
sbb
ss
mov
iret
sbb
dec
push
scas
jecxz
mov
cld
pushf
icebp
test
pop
out
sti
pushf
icebp
test
fld
push
icebp
test
push
cmc
fld
seto
sbb
mov
or
sbb
pop
push
mov
or
jo
sbb
or
mov
sbb
and
sbb
pushf
icebp
hlt
and
fwait
jg
repz
mov
cmps
fimul
or
inc
iret
sbb
dec
stos
lods
and
pushf
push
in
sub
add
iret
sbb
cmp
xchg
cmp
pushf
inc
(bad)
aad
xor
mov
mov
add
push
(bad)
out
xor
add
fstp
lock
and
add
or
sbb
and
xor
ds
enter
repz
pushf
icebp
out
adc
repz
or
std
out
and
add
gs
jle
jmp
aad
out
fadd
repnz
(bad)
out
and
add
xor
call
mov
std
out
ret
iret
call
ja
sbb
push
sbb
mov
pop
push
pushf
rcr
(bad)
out
and
add
mov
sbb
push
into
sbb
push
sbb
xor
cmp
icebp
aam
mov
(bad)
fsub
(bad)
out
and
add
pushf
(bad)
out
and
add
inc
arpl
xchg
(bad)
test
push
sbb
ror
arpl
stc
add
pushf
mov
pop
pop
pushf
push
enter
fistp
jb
sub
lods
movs
mov
icebp
out
add
push
pushf
xor
aas
(bad)
out
and
add
cmp
jno
dec
adc
adc
dec
cmpxchg
out
and
add
push
inc
pushf
add
or
push
sub
inc
pushf
repnz
add
nop
int
push
inc
pop
push
aas
jge
jle
repz
push
sbb
rcr
pop
mov
pop
shl
dec
jo
add
pushf
mov
int
inc
jge
mov
inc
dec
sbb
jb
rcl
cmc
mov
movmskps
sbb
push
sbb
icebp
fild
and
add
and
lock
push
sbb
rcr
pushf
repnz
pushf
rcl
and
loop
sub
hlt
add
push
sbb
shl
mov
pop
str
sbb
frstor
or
iret
pushf
mov
add
push
movmskps
int3
sbb
fst
pushf
xor
or
and
add
push
paddusw
jb
and
push
(bad)
int3
sbb
push
push
xlat
pop
cmpxchg
out
and
add
pop
pushf
add
addr16
out
adc
add
(bad)
add
nop
int3
sbb
out
push
sbb
pushf
cmpxchg
mov
xor
repnz
movs
pushf
and
pop
push
jo
add
(bad)
fild
rcr
pushf
adc
or
cmps
jmp
icebp
add
pushf
icebp
out
add
mov
pushf
icebp
in
adc
repz
(bad)
ss
sbb
push
push
(bad)
stc
add
iret
push
sbb
xor
jae
add
jb
jae
sub
shr
arpl
jmp
sbb
push
sbb
sub
sbb
xor
sbb
outs
xor
push
mov
xor
sub
inc
je
iret
push
sbb
loopne
adc
(bad)
sti
sahf
adc
mov
imul
add
push
out
push
adc
push
(bad)
jmp
mov
push
lahf
or
jge
adc
sbb
repz
cmpxchg
outs
and
add
or
aad
cmpxchg
outs
and
add
push
mov
cmp
push
and
ror
imul
fbld
mov
outs
and
add
icebp
add
stos
lock
and
ror
aad
cli
dec
inc
jb
pop
jno
and
sbb
pop
sbb
push
and
lock
in
lock
rcl
push
jmp
xor
scas
ins
es
rcl
jne
fld
arpl
or
stos
lock
pushf
repnz
cmp
cmpxchg
outs
and
add
push
push
pop
rol
or
sbb
pop
aam
aad
cmpxchg
outs
and
add
punpcklbw
retf
pop
push
mov
loopne
lock
(bad)
dec
adc
push
test
and
mov
xchg
outs
mov
pop
call
sbb
mov
pop
mov
and
test
cs
jbe
jns
xchg
mov
or
mov
ja
lds
xchg
or
rol
ja
xor
mov
and
(bad)
inc
movs
mov
outs
and
mov
add
or
mov
jecxz
cmps
xor
mov
push
dec
push
pop
lods
xor
xor
outs
pushf
mov
adc
adc
cld
xchg
daa
mov
out
ret
shl
ds
xchg
rcr
xchg
je
stos
sti
fxch
rcl
push
push
mov
call
loope
aam
pop
or
mov
lea
and
cld
fsubr
mov
das
ins
mul
or
jg
pop
aaa
xchg
push
scas
out
test
shr
call
adc
pop
mov
test
sub
movs
and
sub
xor
xor
pop
cdq
mov
int3
ds
mov
lods
sbb
(bad)
dec
add
jmp
sar
adc
loop
iret
pushf
pop
sbb
popf
xchg
scas
pop
js
push
or
xchg
sub
pop
(bad)
shr
add
cmp
adc
(bad)
arpl
cdq
aad
mov
out
mov
ss
in
pop
test
cmp
ja
js
outs
data16
ret
inc
dec
fdivr
xor
add
mov
movs
mov
cwde
int3
pop
sub
sbb
(bad)
xchg
jb
mov
inc
dec
inc
xor
int3
sbb
xchg
sbb
lea
inc
xor
dec
pop
pop
and
pop
push
scas
dec
cld
xchg
push
jne
mov
leave
aas
mov
jle
push
out
sub
test
xchg
pop
sub
xor
(bad)
xor
fistp
in
xchg
in
pop
pop
popa
das
addr16
adc
or
repnz
push
stos
and
push
cmc
or
jns
jne
scas
rol
sub
push
mov
iret
aam
sub
and
or
scas
pop
aaa
pop
sub
push
sbb
mov
iret
push
and
xor
in
outs
jnp
(bad)
stos
repz
mov
test
in
int3
sahf
add
daa
cmp
mul
test
gs
pop
xchg
jg
and
movs
js
sbb
popf
loope
jbe
lods
push
pop
pop
xchg
movs
dec
in
push
aas
stos
adc
(bad)
jge
(bad)
lds
jg
add
lea
mov
test
jg
dec
call
push
pop
jno
cmc
ins
ins
or
cmp
xor
xchg
out
dec
and
push
jno
and
mov
loope
gs
icebp
out
lds
cmp
dec
mov
sub
push
xlat
idiv
loop
push
mov
scas
xchg
lock
ror
and
fwait
imul
loope
repnz
add
push
xor
or
sub
mov
pop
pop
and
cdq
mov
mov
add
pop
cmp
or
fcmovnu
cmps
xlat
out
shl
pop
push
neg
inc
jno
push
xor
sbb
sbb
das
mov
cmp
dec
clc
inc
and
dec
cmp
jo
add
jle
mov
jo
mov
push
fistp
addr16
mov
push
push
add
shl
sub
add
cmp
shr
jle
mov
mov
or
pop
popa
push
or
pop
pop
xor
xchg
enter
sbb
mov
clc
stos
mov
xchg
(bad)
(bad)
pop
fisubr
xchg
push
scas
dec
sbb
xlat
test
xor
stos
call
stc
add
add
add
adc
and
sub
add
and
add
sub
add
int3
and
and
sub
es
add
adc
and
sub
add
and
add
sub
add
enter
push
add
sub
add
dec
fiadd
fisub
add
add
add
(bad)
push
add
add
inc
sbb
aas
imul
add
sub
add
les
adc
mov
jae
adc
add
pop
adc
adc
add
sub
add
shl
or
or
scas
xor
adc
adc
push
add
sub
add
mov
push
adc
pop
push
add
sub
add
mov
or
(bad)
(bad)
push
add
add
inc
sbb
sub
and
sub
adc
and
sub
call
add
sub
add
add
add
and
push
add
sub
sub
add
or
or
push
or
add
aam
out
fwait
ret
jnp
(bad)
push
lods
adc
push
test
add
add
jo
inc
add
push
sub
add
lods
test
test
loopne
jns
push
inc
pushf
mov
cmps
cmp
adc
loope
push
arpl
adc
popa
movs
add
or
test
outs
add
aam
mov
sub
or
mov
popa
pop
pushf
rol
or
adc
repnz
loop
sar
stos
cmps
mov
adc
add
adc
icebp
fadd
test
adc
push
adc
xchg
add
jo
sbb
xor
mov
adc
pop
push
jae
jo
xchg
jae
adc
add
rcl
and
repnz
and
jnp
je
mov
movs
fidivr
add
in
rol
add
xchg
push
nop
cmp
sub
push
sar
add
lock
cmp
fdivr
xor
xlat
cmp
(bad)
xor
xor
add
and
aas
mov
mov
and
es
add
mov
nop
xchg
or
std
adc
sbb
ror
test
ret
xor
cmc
pop
mov
add
add
jae
or
retf
push
arpl
push
push
push
mov
add
mov
ss
rol
adc
in
xchg
inc
pop
add
ss
mov
push
xor
out
add
dec
pop
inc
mov
dec
pop
loopne
hlt
add
retf
hlt
add
dec
pop
lock
dec
addr16
hlt
add
fimul
rcl
aad
aaa
jo
jbe
stc
add
pushf
movups
stc
add
into
repz
add
enter
shl
int3
pop
fldenv
pop
pop
add
mov
cmps
xor
sub
add
and
(bad)
hlt
sbb
dec
pop
jne
sbb
and
xor
mov
dec
lahf
lods
and
mov
jbe
rcl
pop
icebp
dec
mov
lahf
dec
adc
xor
xor
sub
xor
mov
pop
add
and
cdq
rol
add
pop
adc
icebp
push
jno
add
xchg
or
mov
inc
aas
int3
loop
push
sbb
mov
add
out
call
pop
inc
and
adc
jg
inc
mov
and
stos
xchg
or
adc
adc
std
and
arpl
xor
adc
fcomi
icebp
mov
pop
(bad)
jnp
push
pop
cld
aad
adc
mov
adc
cwde
adc
xor
or
and
(bad)
and
pop
sbb
xlat
push
pusha
pop
sbb
sbb
stos
push
inc
js
mov
adc
and
add
nop
and
ss
inc
add
hlt
xor
movs
adc
push
lock
push
push
sub
adc
and
test
or
loope
xor
adc
push
mov
jno
fs
and
push
cld
pop
dec
sbb
push
and
loope
xor
push
jns
adc
outs
je
add
lock
mov
cmp
add
lock
out
jo
pop
shr
push
sbb
add
jb
loope
fcmovnb
push
jo
lds
push
(bad)
and
add
mov
add
pop
add
xchg
out
mov
xchg
ror
sbb
pop
pop
dec
aad
test
pop
into
pop
outs
jo
dec
adc
mov
fld
push
pop
sbb
or
rol
xchg
pop
dec
pop
cmc
ror
adc
cmp
imul
inc
add
or
rol
sbb
sub
ret
sbb
fcmovb
adc
jne
sbb
pop
call
adc
inc
or
jecxz
xchg
pop
cmp
jg
sub
or
add
retf
adc
cwde
aad
inc
aad
push
and
pop
add
xor
jns
add
inc
icebp
push
add
fadd
fs
pop
jno
mov
mov
pop
xchg
push
pop
or
xor
mul
jo
mov
push
add
or
pop
or
ret
inc
jb
nop
jns
add
pop
fld
movs
dec
inc
adc
inc
adc
add
fdivr
inc
mov
dec
and
xor
xor
and
and
cs
cmp
or
pop
inc
adc
les
fwait
add
push
cmc
adc
in
sbb
jb
repnz
add
jae
push
repz
inc
add
and
pusha
or
or
and
add
pop
add
jb
rdtsc
cwde
xchg
xchg
and
ret
test
jns
cmps
mov
adc
jmp
outs
push
xor
movups
xchg
inc
nop
inc
adc
jnp
mov
add
cdq
dec
dec
jne
adc
movs
and
mov
add
pusha
in
push
sbb
aad
imul
push
fnsave
cmp
add
pop
shl
ja
add
dec
rcl
pop
repnz
xchg
add
bound
rcr
push
push
aam
or
or
or
je
jmp
jmp
js
shr
loop
sub
xchg
xchg
ret
and
and
scas
adc
fnstenv
jne
add
outs
lea
adc
int
adc
pushf
push
sti
call
xor
pop
nop
pop
icebp
adc
xchg
fiadd
jno
pop
cmp
in
add
dec
adc
ret
push
xor
add
fiadd
imul
xor
aaa
xor
add
add
cmps
xchg
adc
push
jnp
mul
push
xchg
or
sti
fadd
movs
xlat
adc
fbld
add
adc
daa
loope
add
pop
jo
and
or
add
adc
mov
cmp
push
add
(bad)
xchg
in
push
ins
loopne
rol
popa
add
loop
adc
into
mov
mov
shl
retf
sbb
out
loop
and
push
sbb
bnd
jno
and
xor
and
or
sti
xchg
adc
mov
mov
xor
jb
adc
add
test
add
fld
add
fwait
sub
sbb
lods
adc
or
pop
or
xchg
adc
mov
pop
scas
or
(bad)
loopne
xor
pop
dec
sub
mov
push
mov
dec
stos
mov
pop
jp
push
nop
push
outs
xor
out
ja
pop
add
mov
sbb
jle
or
add
add
xor
pop
or
add
add
add
pop
loopne
add
or
jg
xor
add
call
add
int
add
and
add
mov
inc
or
hlt
xor
aaa
daa
test
ficom
imul
add
ins
mov
(bad)
clc
push
add
push
adc
push
loope
adc
gs
(bad)
clc
inc
sub
shl
add
ja
das
xor
or
push
aas
sbb
sbb
sbb
push
or
test
aad
add
(bad)
jno
push
fist
nop
or
or
and
rcl
lods
add
add
add
(bad)
clc
xchg
shr
and
test
inc
in
ja
xor
sub
ret
adc
dec
and
and
push
push
mov
and
loop
and
adc
jp
push
aaa
jo
adc
shl
adc
push
jge
psllw
xchg
stc
ret
push
hlt
daa
clc
pushw
jb
push
rcl
icebp
push
push
rcl
push
adc
xchg
ret
sub
add
xchg
adc
add
add
push
out
shl
mov
pop
push
pop
add
sbb
add
vrsqrtps
icebp
inc
mov
and
adc
movs
inc
adc
mov
ret
jp
adc
inc
and
adc
mov
inc
add
add
adc
push
sbb
pop
movs
fimul
and
test
jmp
ins
and
push
or
stc
adc
or
sbb
xchg
adc
or
lock
psrlw
push
sub
dec
push
icebp
movs
push
sbb
mov
les
push
xor
cs
cmp
mov
aas
add
rol
push
jmp
or
jmp
add
adc
cmps
repz
and
sbb
adc
or
popf
in
add
mov
adc
cmp
push
cmpxchg
aas
adc
fist
fidiv
sub
add
push
rcr
add
ror
aad
je
mov
adc
jo
lea
shr
movs
dec
adc
imul
xor
out
inc
(bad)
out
push
dec
adc
out
xor
out
xor
or
jne
std
test
inc
or
dec
adc
or
adc
or
adc
or
or
aas
repnz
dec
or
repnz
or
or
lea
sub
ror
repz
or
sub
adc
rol
push
adc
push
jnp
sbb
adc
nop
xchg
inc
add
adc
rcl
into
and
movs
xor
cmps
lods
mov
inc
add
adc
dec
and
and
adc
dec
and
xlat
lds
adc
inc
and
push
out
add
jge
or
adc
or
das
rdmsr
xchg
lock
psrld
push
jne
xor
inc
add
dec
add
stos
adc
inc
and
adc
inc
and
movs
adc
inc
adc
cld
adc
dec
and
adc
add
dec
add
xor
or
mov
out
jo
aas
adc
shl
lock
nop
fnstcw
add
add
xchg
xchg
inc
add
pop
adc
dec
and
and
aad
and
shl
jle
inc
and
adc
rol
gs
inc
sbb
inc
adc
jo
sub
ror
daa
add
dec
and
adc
push
(bad)
cmp
jno
outs
xor
aas
mov
dec
adc
mov
sbb
mov
add
add
call
gs
in
test
aas
add
and
add
dec
adc
movs
pusha
repnz
add
sbb
adc
adc
push
loopne
add
and
fsub
add
add
add
inc
and
xchg
inc
and
mov
inc
add
rol
add
or
adc
inc
add
mov
cmc
or
jo
and
add
ret
rol
xchg
and
and
adc
pop
inc
add
jne
add
pop
sbb
jle
fs
cmps
pop
loopne
and
inc
pop
jle
add
das
sbb
xor
add
and
and
add
cwde
and
adc
sub
jl
jo
and
ins
mov
adc
inc
and
xor
inc
push
sbb
adc
inc
and
adc
inc
daa
push
sub
inc
sbb
(bad)
adc
repz
add
std
mov
xchg
inc
adc
dec
and
jge
adc
call
and
in
add
dec
and
or
mul
mov
adc
lahf
scas
add
and
sub
push
and
add
sub
add
jb
pusha
and
or
jg
adc
repnz
add
and
ins
and
adc
and
xchg
sub
mov
cmp
and
add
adc
std
adc
push
jo
popa
pop
add
adc
mul
jne
or
add
and
and
inc
and
and
adc
in
jo
ss
xchg
add
adc
adc
inc
and
and
pop
inc
add
adc
and
cmp
dec
mov
repz
dec
and
enter
stc
jno
add
pop
mov
add
scas
xor
mov
sub
xchg
jmp
mov
inc
mov
cdq
and
pcmpgtw
add
or
outs
mov
jbe
icebp
dec
adc
inc
pop
into
add
sub
sub
or
movs
loope
adc
cs
adc
inc
adc
adc
ret
pop
adc
adc
popa
mov
(bad)
fst
outs
or
into
adc
in
jo
push
push
xchg
loopne
popa
mov
sbb
inc
adc
pop
ret
bound
jbe
pop
pusha
pop
int3
mov
rcl
add
adc
dec
and
or
mov
cs
ror
mov
popa
aam
adc
push
out
shl
sbb
push
div
push
std
fistp
jb
jno
sbb
inc
xor
xor
lds
xor
mov
and
xchg
xor
inc
mov
push
inc
mov
xchg
rol
xor
fadd
movs
fwait
adc
jg
xchg
inc
and
pop
mov
inc
and
stos
cmp
or
add
xor
or
xor
cmp
ret
inc
add
dec
and
inc
add
into
xor
inc
inc
inc
mov
inc
xor
inc
ret
inc
mov
xchg
dec
and
repnz
mov
dec
and
inc
mov
inc
repnz
add
xor
xlat
or
inc
and
inc
and
retf
inc
and
inc
cmp
inc
pusha
dec
and
mov
inc
ret
or
inc
and
inc
and
add
inc
and
test
adc
or
add
inc
and
sub
inc
ret
or
mov
xor
dec
and
das
xor
xor
lock
mov
inc
adc
inc
and
add
xor
lods
fadd
xor
inc
mov
inc
ret
adc
or
sbb
mov
sbb
add
xor
adc
or
mov
xor
ja
add
inc
ret
pop
add
dec
and
sub
add
xor
mov
add
add
add
xor
xchg
mov
xor
mov
dec
adc
cld
add
inc
and
dec
cld
xor
dec
xor
mov
rol
inc
dec
loopne
and
add
and
sbb
jl
or
add
xor
add
and
add
xor
dec
and
in
jnp
and
or
loopne
xchg
jnp
and
out
ret
dec
and
xor
dec
jo
and
xor
inc
dec
pusha
dec
and
xor
dec
adc
and
int3
add
jl
and
fdiv
dec
xor
inc
mov
dec
dec
and
add
jl
sbb
adc
or
add
jl
sbb
xor
dec
and
retf
inc
mov
dec
and
sbb
xor
dec
loopne
and
xor
add
dec
and
xor
dec
and
retf
inc
mov
dec
and
sbb
xor
dec
nop
dec
and
or
xor
dec
and
dec
and
sbb
xor
dec
mov
inc
mov
rol
icebp
dec
inc
dec
and
mov
rol
dec
mov
inc
mov
js
xor
mov
and
mov
inc
mov
dec
and
add
xor
dec
and
jnp
and
sbb
jl
or
jnp
and
xchg
xchg
xor
inc
mov
inc
mov
dec
and
add
xor
dec
and
jnp
and
sbb
dec
and
or
xor
test
dec
and
add
movs
xor
dec
and
jnp
and
jle
xor
inc
mov
inc
mov
inc
and
add
xor
inc
and
add
xor
inc
adc
xor
add
xor
inc
dec
and
add
jl
sbb
and
add
mov
xor
xchg
inc
rol
data16
inc
mov
inc
push
mov
inc
and
add
jl
sbb
cmp
jp
rol
and
jnp
and
pop
xor
inc
mov
inc
inc
mov
inc
and
add
jl
sbb
jb
pusha
inc
and
xor
inc
mov
inc
mov
rol
inc
inc
daa
dec
and
or
jl
sbb
or
add
jl
sbb
mov
add
jl
sbb
cmp
inc
jl
sbb
xor
dec
and
inc
and
jb
mov
inc
mov
xchg
inc
and
add
xor
iret
or
icebp
dec
rol
into
adc
or
dec
add
jl
sbb
xor
dec
mov
inc
xor
add
xor
jnp
xchg
xor
dec
mov
inc
mov
inc
and
dec
add
jl
sbb
jb
pusha
push
dec
and
and
rol
jl
sbb
jl
adc
iret
add
jl
sbb
mov
xor
mov
(bad)
dec
add
jl
sbb
inc
dec
and
xor
dec
mov
inc
mov
pusha
dec
and
sbb
inc
inc
add
and
(bad)
pop
add
mov
lock
mov
inc
mov
clc
cmp
add
inc
loop
sbb
jb
mov
inc
mov
xor
mov
dec
and
sbb
xor
dec
jo
and
xor
jb
mov
inc
mov
add
jnp
and
out
xor
dec
inc
inc
and
xor
dec
mov
inc
mov
daa
mov
xchg
jl
sbb
ins
inc
xor
inc
and
xor
inc
and
mov
mov
inc
mov
ja
jnp
and
adc
adc
add
xor
dec
and
push
dec
xor
dec
and
dec
xor
add
and
jnp
and
or
adc
add
xor
dec
and
mov
or
pop
add
jl
sbb
xor
inc
mov
inc
mov
push
add
jl
sbb
jl
or
push
inc
xor
dec
and
jnp
and
dec
mov
mov
inc
add
jl
sbb
mov
dec
and
add
xor
ins
push
add
jo
mov
inc
mov
xor
das
add
jnp
and
mov
mov
daa
add
jl
sbb
mov
inc
mov
lock
and
dec
and
add
jl
sbb
xor
inc
pusha
inc
and
push
inc
and
mov
dec
and
add
xor
test
pop
add
jl
sbb
lock
(bad)
call
iret
sub
xchg
inc
cmp
lds
xor
retf
adc
pop
pop
mov
vpunpckhwd
mov
popa
aaa
xchg
xor
xor
cdq
(bad)
not
loope
mov
jb
mov
adc
add
(bad)
jmp
(bad)
pop
cmps
ins
add
xchg
aaa
mov
sbb
mov
pop
adc
push
mov
mov
popf
or
ret
push
ins
fnstsw
(bad)
xor
and
or
scas
xchg
sbb
or
jmp
or
mov
xor
icebp
not
jbe
xor
sub
jno
and
jne
or
lods
jmp
sbb
ins
gs
outs
inc
or
rcl
in
lods
out
js
scas
adc
push
lea
repnz
jns
adc
sbb
cmps
mov
rcr
sub
and
push
add
push
pop
leave
int
mov
pop
(bad)
cmc
xor
hlt
loopne
cmp
add
(bad)
dec
clc
or
sbb
xor
js
and
mov
neg
jne
add
push
xlat
rcr
(bad)
push
je
mov
cmp
dec
ffree
xchg
dec
popf
inc
out
pop
mov
daa
and
add
enter
std
aas
mov
cmp
mov
test
or
fstp
lods
xchg
cmp
or
push
cmp
aaa
jp
cmp
sub
and
add
aaa
jmp
sbb
push
outs
fist
ficom
jp
mov
dec
outs
adc
mov
push
fidiv
pusha
addr16
inc
cmp
outs
xor
out
jns
(bad)
pop
call
add
ror
mov
pop
dec
bndstx
int
xchg
push
dec
mov
mov
xchg
clc
loopne
sahf
dec
xchg
adc
mov
int3
adc
and
repz
adc
pop
add
jae
rcl
pop
ds
xor
mov
ja
and
aas
and
fs
inc
scas
adc
fisttp
mov
in
jo
imul
loopne
fwait
clc
int
dec
stc
loop
or
and
movs
retf
or
mov
cld
cld
xor
pop
jo
aas
xchg
dec
sbb
data16
jge
jmp
sbb
ret
movs
inc
iret
hlt
je
(bad)
or
sbb
add
(bad)
adc
push
cmps
sbb
push
stos
inc
mov
data16
cwde
(bad)
shl
dec
adc
jo
cs
jmp
push
jbe
mov
cmp
inc
mov
sub
fs
call
mov
ror
cs
sbb
test
jmp
cli
iret
adc
xchg
retf
xchg
pushf
add
xchg
pop
cmps
or
ret
push
jb
jne
mov
and
push
jle
adc
mov
jmp
xchg
js
mov
mov
in
pop
mov
add
std
enter
inc
into
fwait
icebp
scas
xor
jb
sbb
scas
inc
mov
jecxz
je
pop
mov
or
loope
aas
movs
jnp
mov
fst
jge
ficomp
sqrtps
neg
mov
mov
push
loope
push
sub
test
ss
mov
lods
dec
dec
aas
call
lods
cmp
xor
(bad)
adc
cmp
aaa
dec
pop
loop
lds
mov
push
in
xchg
mov
jo
repnz
test
push
enter
enter
lahf
cld
int
sbb
xchg
xor
xchg
test
add
and
imul
sub
adc
sub
or
dec
(bad)
push
stos
inc
cmps
pop
add
adc
mov
inc
out
xor
xchg
mov
shr
not
jmp
pop
xor
cld
loope
sbb
dec
(bad)
sub
sbb
jno
cmp
mov
xchg
fnstenv
xchg
loope
gs
sar
jno
lock
add
(bad)
fwait
call
inc
push
stos
popa
pop
push
mov
call
call
push
int3
sti
push
add
sub
sub
mov
xchg
(bad)
leave
xor
lahf
and
fsub
add
adc
mov
sub
lahf
fldenv
xchg
dec
pop
ins
push
pop
cdq
in
ins
mov
pop
and
(bad)
and
inc
sub
out
imul
add
test
add
ficomp
fadd
xor
adc
movs
xchg
xor
(bad)
pop
sub
cs
clc
(bad)
ja
adc
xchg
ss
jge
test
mov
and
dec
sub
sahf
ror
mov
ror
jle
adc
dec
cs
inc
stc
sub
push
cld
cs
push
sub
loopne
push
cmp
lock
dec
sti
out
adc
xlat
jns
jecxz
and
mov
and
jb
test
mov
push
adc
dec
out
aad
jmp
popa
aas
stc
into
sbb
pop
sub
mov
retf
pop
xchg
cmp
clc
mov
mov
hlt
or
out
push
sub
xlat
imul
push
mov
retf
push
imul
xor
iret
sub
pop
jmp
push
mov
sahf
mov
ss
std
fcomp
into
test
add
iret
xchg
test
addr16
cld
cwde
push
das
sub
fndisi(8087
sub
sbb
cs
push
out
push
pop
lods
push
inc
retf
cmp
call
sbb
out
icebp
es
popa
cmps
fs
cmp
jg
pop
adc
and
out
xor
pop
ss
pop
lods
pop
sub
mov
and
data16
inc
xor
xchg
and
daa
jno
pop
mov
adc
mov
call
dec
push
rol
push
mov
ss
shr
popf
mov
shl
scas
adc
rcl
rcl
pop
inc
retf
xor
xchg
retf
rcl
sub
mov
neg
adc
sahf
mov
(bad)
mov
rol
pop
pop
je
(bad)
int3
cli
cli
fstp
inc
sbb
sbb
pop
hlt
ss
les
fistp
mov
gs
mov
mov
mov
and
fs
jae
jbe
xchg
cs
sbb
adc
mov
mov
xor
xchg
jle
imul
pop
add
je
add
adc
push
mov
fcom
mov
cli
or
jg
rcr
(bad)
sub
mov
mov
sbb
inc
in
adc
inc
cmp
mov
in
retf
xchg
adc
and
mov
cld
scas
and
dec
(bad)
cmp
inc
xchg
jp
fld1
lock
popf
(bad)
jbe
rol
lods
outs
or
ror
add
call
les
test
enter
(bad)
test
xchg
push
jl
mov
test
in
pop
add
jo
stc
mov
and
push
mov
imul
imul
test
jl
xchg
pop
jmp
(bad)
add
(bad)
mov
outs
sub
(bad)
cld
sub
fnsave
pusha
loope
cmp
and
(bad)
jg
pop
js
jo
dec
add
in
or
aaa
in
mov
sar
popa
adc
sbb
div
sbb
pop
retf
xchg
ja
movs
ror
hlt
mov
jae
adc
ret
lods
scas
xchg
(bad)
adc
mov
mov
adc
push
mov
imul
and
xchg
xlat
and
xor
lods
fdiv
cmp
cmps
movs
xchg
sub
and
rcr
pop
movs
mov
das
lock
add
pop
call
jne
add
xchg
int3
inc
jns
and
jp
dec
dec
sbb
adc
inc
cmc
xchg
xchg
push
and
adc
mov
enter
fsub
das
jne
mov
dec
mov
dec
in
add
xchg
in
shl
int3
xlat
je
in
mov
xlat
jge
inc
mov
hlt
scas
push
inc
cmps
xor
xlat
fisttp
or
cmp
das
les
fcomp
fdiv
ret
movs
jmp
sbb
and
sub
add
inc
fwait
enter
and
ss
push
fadd
sbb
mov
jae
fwait
test
mov
cmc
mov
aaa
xor
cmp
popf
dec
cmc
sahf
aad
sti
addr16
cmp
int3
shl
fnstenv
xchg
inc
das
cld
test
leave
(bad)
or
mov
ins
jg
sub
fadd
aad
adc
pop
(bad)
mov
cmp
shr
std
pushf
dec
push
mov
sti
or
sar
lds
daa
sbb
stos
fs
dec
pop
add
dec
xor
fmul
pop
jb
inc
icebp
(bad)
lods
das
in
fsub
rcl
mov
mov
ins
xor
scas
imul
mov
out
cmp
adc
jl
popa
jbe
aad
aaa
fsubp
inc
fmul
sub
jmp
sti
in
jmp
std
cmp
lods
iret
mov
xchg
or
mov
push
mov
fist
fwait
in
(bad)
fsub
movs
dec
sub
and
(bad)
mov
push
mov
adc
mov
inc
sysexit
cmp
add
xchg
scas
ret
add
gs
add
enter
out
push
loop
(bad)
pop
mov
js
stos
sti
mov
rcl
scas
je
fild
sub
popa
pop
add
push
loope
dec
pop
in
jp
sbb
popa
add
out
retf
mov
cmps
xlat
outs
gs
in
aam
dec
cs
dec
mov
jb
in
sar
jge
mov
or
fwait
daa
inc
ins
bound
or
jmp
sbb
push
push
popf
shl
mov
adc
mov
and
xchg
xchg
outs
sub
add
stos
push
inc
cdq
(bad)
sbb
mov
ret
jmp
test
pop
lock
pushf
nop
loop
push
std
rcr
in
cmp
inc
mov
sub
sub
scas
xor
fs
lds
retf
adc
rol
loop
xchg
lahf
into
xor
push
and
sar
leave
mov
inc
xchg
mov
lods
pop
mov
movs
shl
pop
bound
(bad)
dec
pop
inc
test
pop
pop
(bad)
cdq
stos
fld
adc
inc
push
mov
sub
loope
repz
fdiv
test
adc
sar
or
pop
jae
sbb
mov
into
inc
mov
stc
fwait
mov
scas
and
pop
sti
sti
jp
xor
imul
out
add
dec
jecxz
sar
stos
xchg
in
mov
adc
mov
gs
mov
popf
sub
ds
lods
cmps
xchg
call
shl
mov
adc
xor
cmp
gs
mov
pop
or
fs
fs
cmp
cdq
dec
mov
fcomp
sub
scas
jge
pop
jmp
push
out
sbb
ja
mov
imul
hlt
xor
mov
gs
jl
and
popa
rcl
pop
pop
mov
dec
sub
scas
mov
jne
repz
push
repz
retf
repnz
cmp
repz
cli
movs
xor
jg
sahf
aad
dec
pop
push
out
cmp
sbb
push
sti
ret
lock
in
shr
or
bound
pop
adc
mov
pop
and
call
mov
pop
stos
adc
fsubr
xchg
xor
adc
and
mov
add
push
pop
sub
jp
and
loope
mov
in
sti
aad
sbb
push
sub
jmp
inc
(bad)
xor
scas
js
adc
push
mov
cmps
adc
and
xlat
loope
jmp
out
fsubr
out
sbb
jge
clc
das
mov
out
or
mov
push
push
mov
inc
movs
sub
xor
sub
into
sbb
jo
push
xor
jmp
movs
mov
or
and
jge
pop
clc
loop
mov
mov
mov
imul
lods
rcr
xchg
adc
pop
ja
idiv
shr
xor
outs
nop
stos
xor
mov
xchg
sub
mov
mov
or
or
aaa
sbb
(bad)
fcom
dec
pop
push
mov
dec
jnp
dec
jecxz
aaa
shl
push
(bad)
gs
mov
sbb
pop
push
mov
stos
sbb
or
xor
cmp
inc
loopne
or
(bad)
inc
or
popf
ds
push
cmp
popa
mov
sti
out
cdq
(bad)
jmp
hlt
mov
fcmovnbe
fsub
ins
inc
loopne
sub
int3
sbb
ins
xor
cmp
jle
and
adc
ja
pop
mov
in
jle
inc
icebp
xchg
lahf
out
pop
rcl
jle
ret
sbb
adc
adc
aad
or
rcl
pop
pop
out
inc
sbb
add
loope
mov
cmp
and
cmps
outs
jmp
test
jp
repz
aam
es
in
popa
je
out
cmp
bound
or
fdivrp
mov
xor
push
cwde
ins
xor
adc
xor
retf
jmp
inc
xchg
adc
call
cwde
daa
or
jns
xchg
lods
dec
aaa
lock
push
cli
xor
jne
aam
cmc
pop
sub
icebp
xor
cs
mov
outs
cld
scas
test
in
jno
enter
pop
and
xor
jnp
xor
mov
outs
mov
push
ins
inc
and
adc
in
pop
je
xchg
out
adc
sub
cwde
pop
inc
sbb
inc
outs
push
(bad)
adc
psubsb
add
add
cmps
add
(bad)
(bad)
jmp
xor
scas
jne
and
pop
aas
call
js
int
adc
mov
or
inc
fs
xor
fsub
pop
jne
mov
mov
jecxz
and
or
sahf
punpckldq
and
sbb
add
jbe
int3
or
xor
adc
bnd
arpl
mov
loopne
jae
jno
dec
xlat
shl
dec
xchg
add
jp
scas
leave
pop
adc
fisttp
inc
rcl
push
stos
inc
movs
lods
inc
pop
out
xor
cmp
jns
idiv
mov
fsub
fdiv
repz
mov
shr
pop
sub
jmp
or
aaa
push
call
add
push
fmul
or
and
fdivr
iret
cmp
dec
call
sub
pop
push
out
ror
jmp
fsubr
sbb
sbb
mov
rol
pusha
ins
ja
or
push
adc
sar
std
mov
and
pop
mov
fsubr
adc
fbstp
sub
xchg
rol
mov
loope
mov
inc
int
jne
mov
inc
or
cdq
ret
jl
dec
push
scas
push
leave
stc
inc
add
cmps
icebp
mov
mov
xor
sti
and
int
jbe
or
jns
ds
mov
add
mov
les
fisttp
push
xor
xor
adc
sub
repnz
push
mov
out
les
push
mov
cli
sub
xchg
cmps
or
jmp
or
mov
push
cmp
pop
cwde
push
(bad)
pop
(bad)
pop
jg
dec
mov
and
xor
xchg
cmps
retf
loope
pop
call
mov
pop
push
jae
cwde
add
mov
mov
dec
adc
mov
jns
jnp
push
addr16
and
push
mov
imul
jno
xor
rol
mov
lods
xor
stos
or
out
inc
retf
cmp
imul
ret
sub
sub
pop
nop
mov
es
pop
popa
shl
pusha
iret
pop
mov
mov
push
stos
lock
sbb
xchg
fidiv
frstor
mov
mov
pop
aam
cmps
cmc
or
arpl
xor
push
test
mov
daa
dec
pusha
fwait
or
pop
sub
mov
call
xchg
aaa
jle
mov
pop
add
scas
(bad)
sub
nop
cs
push
ins
aaa
fsubr
add
pusha
xor
adc
loope
or
adc
jl
(bad)
push
fdiv
xchg
shl
xor
sahf
jmp
mov
add
inc
cmp
xchg
push
cwde
jbe
leave
jbe
mov
mov
jp
out
jg
loopne
add
xchg
fwait
mov
jmp
daa
mov
shr
or
adc
xchg
mov
xor
mov
ins
sub
sbb
pop
jb
cmp
adc
ror
push
jecxz
pop
cmp
retf
inc
movs
in
sub
pop
jmp
ret
std
push
loope
xchg
add
sub
repnz
std
pop
fcomp
sbb
mov
add
pushf
dec
inc
mov
pop
inc
mov
outs
cs
mov
and
sahf
arpl
stos
adc
jge
pop
push
sbb
(bad)
pop
fidivr
aaa
pop
adc
adc
sbb
or
jg
adc
arpl
jb
add
pop
shl
mov
push
fwait
xchg
dec
or
pop
and
jecxz
cmc
push
xchg
ds
into
fstp
and
test
lock
lods
xchg
push
loope
sti
sbb
mov
loope
ret
stos
mov
xchg
push
ret
div
(bad)
mov
sbb
mov
inc
inc
and
mov
jbe
lock
mov
jns
das
mov
push
and
out
clc
mov
cmp
lea
clc
lahf
jge
push
sbb
frstor
push
pop
inc
jmp
gs
jl
ins
pop
jmp
loop
stc
or
dec
sar
outs
xor
pusha
xchg
mov
ret
daa
inc
inc
mov
int3
sbb
xchg
fldenv
fld
jbe
push
sbb
sub
sbb
mov
inc
cdq
xchg
push
jb
cmps
add
sub
ret
dec
ins
in
fistp
xor
aaa
sub
(bad)
jg
mov
sti
jbe
popf
(bad)
cld
(bad)
call
repnz
int
lods
std
(bad)
ja
(bad)
or
imul
shl
loop
(bad)
mov
les
add
add
cmovb
xor
inc
cmp
add
iret
jo
or
add
xor
mov
outs
js
mov
add
or
push
in
push
add
call
add
add
add
cli
mov
add
or
pop
cmp
or
mov
and
and
pop
xchg
out
ror
add
cmp
push
adc
fadd
or
and
ins
rol
je
add
ret
jo
sub
fsub
pop
add
xor
add
mov
push
rol
and
lods
nop
sbb
dec
ror
mov
mov
test
add
xor
add
add
inc
add
aas
and
mov
ins
xor
lods
pusha
push
bound
and
sbb
shl
add
(bad)
sbb
mov
ror
or
mov
inc
xor
rol
adc
rol
in
ins
or
sub
mov
fisttp
add
popa
shl
rol
loopne
pop
mov
ss
stos
ror
inc
ror
or
lahf
cmp
cmp
in
sbb
in
rol
adc
pop
xchg
push
sar
sub
push
sub
jo
sbb
out
loope
sbb
mov
and
(bad)
daa
jo
pop
and
ficomp
add
leave
add
ret
mov
mov
and
xor
jge
add
lds
jl
mov
pop
dec
gs
cmp
mov
jae
xor
add
stos
mov
(bad)
adc
xor
sub
mov
adc
jb
cmp
add
test
nop
xor
sbb
dec
sub
or
adc
and
mov
pop
add
and
xor
pushf
or
xor
adc
add
ins
lea
xor
mov
cmp
adc
cmp
xchg
movs
mov
lea
sub
icebp
or
sbb
shl
and
and
fcomp
mov
add
rcr
jecxz
adc
lds
and
fisub
cmp
and
int
add
add
add
add
cmp
add
into
inc
add
adc
jo
pop
sub
rcl
push
add
iret
or
and
mov
nop
mov
or
and
cmps
adc
mov
rol
movs
imul
dec
jle
sbb
sub
and
push
adc
or
mov
mov
mov
xor
dec
loopne
sbb
stos
cs
and
popa
mov
stos
sub
clc
adc
loopne
lods
sub
and
lock
and
cs
in
jno
and
adc
jo
push
fistp
dec
sbb
mov
pop
inc
adc
bound
push
dec
cmp
mov
psrlq
inc
add
push
xlat
push
add
add
or
sub
psubusw
add
jne
xchg
xor
add
scas
sar
push
mov
cmp
inc
mov
cmp
loope
into
mov
mov
push
pop
adc
pusha
adc
and
pusha
and
adc
bound
adc
push
test
pop
add
sub
jae
add
lds
stos
test
or
push
dec
add
cmp
push
jnp
inc
sbb
(bad)
xchg
jae
xor
xor
popf
adc
add
ret
mov
icebp
dec
(bad)
push
inc
fimul
push
ror
xchg
push
jmp
test
test
add
push
addr16
retf
or
jle
add
adc
xor
pusha
push
add
and
mov
shr
shl
aas
inc
push
adc
jnp
add
xchg
or
adc
aad
jno
loopne
xchg
fndisi(8087
and
inc
add
xchg
scas
ror
adc
cli
(bad)
pop
adc
xor
pop
jb
xor
lahf
out
test
or
sbb
lods
fcmovb
std
push
or
icebp
push
or
nop
cmc
mov
or
push
or
nop
aad
mov
int3
or
scas
or
std
or
fmul
xor
or
or
adc
and
push
jmp
aas
push
fldenv
or
cmps
adc
sub
ficom
mov
mov
test
xor
xor
adc
push
cmp
xor
and
add
or
pop
push
lds
and
adc
inc
rcl
xor
adc
lds
or
sub
push
pop
inc
cli
push
xchg
inc
imul
(bad)
xor
push
mov
fld
add
jge
dec
pop
adc
add
and
and
xchg
mov
adc
sti
mov
lods
ins
and
popa
add
sbb
(bad)
retf
xor
adc
inc
sbb
jge
lods
adc
jne
push
ret
imul
rcl
adc
and
add
xor
or
adc
mov
mov
adc
add
and
add
xchg
mov
inc
jecxz
and
mov
or
mov
xor
loop
adc
pop
pop
and
or
mov
ds
add
sbb
call
jne
in
add
pop
stos
call
xor
fs
push
jae
cmps
lea
sbb
ret
and
xchg
lahf
sbb
sbb
loop
pop
lods
mov
pop
add
loop
adc
add
sbb
rcl
adc
dec
ss
adc
loopne
add
jo
and
inc
pusha
cmp
push
add
jno
out
not
cdq
imul
add
xor
icebp
add
pop
inc
rcl
mov
aam
inc
in
scas
adc
sub
js
add
mov
pusha
pop
and
sub
jo
stos
push
push
or
pusha
je
mov
cs
(bad)
push
pop
(bad)
push
add
icebp
add
mov
and
sar
outs
or
mov
test
add
fsubr
inc
rcr
sub
xor
in
cs
mov
pop
push
rol
test
or
jns
push
xlat
aad
push
mov
ja
adc
shl
xchg
add
lock
daa
sar
pop
mov
repnz
jo
cmp
sub
push
add
test
push
adc
aam
inc
pop
adc
dec
fbld
push
xchg
pop
and
dec
adc
es
data16
out
add
add
mov
jge
adc
mul
mov
add
fmul
adc
shl
xchg
push
mov
pop
xchg
and
push
xor
or
and
inc
mov
or
sub
xadd
in
jbe
mov
add
rcl
loope
adc
sub
add
add
add
push
adc
adc
dec
rol
and
xchg
and
test
adc
add
and
ret
stos
pop
jl
daa
pusha
lds
sub
dec
cdq
xor
mov
shl
add
sbb
add
out
nop
and
add
in
adc
fwait
inc
and
add
xor
adc
sbb
les
sub
add
jo
pop
ja
dec
jge
mov
add
dec
jno
out
inc
stos
jno
jle
adc
jge
and
neg
out
xchg
jge
sbb
fadd
jno
add
jo
pusha
add
pop
push
movups
lock
mov
mov
sub
add
mov
jb
mov
ret
cli
xor
pushf
add
std
out
fs
test
inc
push
cmps
(bad)
test
dec
mov
outs
add
mov
loope
pusha
pushf
les
das
std
cmp
scas
in
je
add
push
nop
rol
mov
ja
pop
or
pop
pop
sbb
adc
popa
in
push
test
outs
outs
stos
sub
dec
adc
inc
rol
mov
retf
cs
sub
xchg
adc
lods
inc
jmp
and
add
adc
stc
add
and
fucomip
adc
arpl
sub
jno
sub
popa
add
test
sub
add
out
out
out
push
sti
adc
add
push
add
add
mov
push
stos
or
dec
add
cmps
adc
dec
inc
pop
stos
inc
or
adc
stos
inc
mov
inc
push
inc
add
mov
mov
inc
push
lods
inc
or
adc
sub
inc
mov
and
loopne
jo
jo
pop
push
and
cmps
adc
data16
in
mov
or
rol
xor
xor
cmp
jl
add
mov
fs
add
out
add
and
add
enter
(bad)
call
xchg
int3
and
sbb
mov
jo
ficom
les
movs
fld
sbb
rcl
lahf
idiv
fidivr
fsub
(bad)
mov
pop
pushf
xchg
jmp
cmp
jns
mov
and
pop
push
scas
jmp
inc
push
enter
xchg
repnz
pop
adc
xchg
pushf
xchg
add
aas
cmp
dec
pop
vmovdqu
inc
pusha
xchg
imul
inc
cmp
loopne
bound
(bad)
jmp
mov
mul
adc
dec
cmp
xchg
push
push
xchg
sbb
sbb
call
mov
jae
mov
dec
ret
push
add
dec
xchg
cmc
pop
and
add
pop
mov
pusha
sub
(bad)
fcmovnu
jecxz
into
push
repnz
ret
es
mov
sbb
mov
add
xchg
jns
(bad)
mov
ins
in
fld
xchg
pushf
mov
imul
fnstsw
pusha
ins
loop
push
js
pop
cli
pushf
or
sub
das
or
push
int3
jmp
pushf
push
push
pop
or
add
mov
or
popf
outs
dec
push
mov
xlat
dec
sahf
not
rcl
rcl
hlt
fs
ret
ins
mov
push
rcr
push
pusha
pop
mov
mov
popa
adc
repnz
nop
jecxz
push
popf
adc
adc
int3
imul
add
xchg
push
lock
adc
mov
mov
inc
pop
mov
nop
or
jnp
iret
pusha
loop
aam
xchg
stc
outs
sar
mov
inc
and
cld
loop
push
xor
addr16
sbb
inc
inc
add
cmps
add
inc
in
stc
cmp
inc
dec
jge
and
scas
pop
aaa
das
into
dec
ficom
(bad)
and
sub
in
movs
addr16
std
xchg
pop
push
cwde
test
test
xor
jl
retf
test
sbb
jne
cmp
test
dec
in
xchg
outs
mov
xor
jno
out
xor
(bad)
neg
out
test
xchg
mov
push
sbb
leave
mov
bound
pop
add
test
sbb
stos
in
(bad)
jnp
and
cmps
enter
cmp
push
call
sbb
rcl
fcmovnu
mov
std
fmul
ins
mov
pop
add
loope
or
retf
pusha
cwde
mov
retf
push
cmp
pop
cmp
push
data16
(bad)
sub
inc
(bad)
iret
lea
adc
cdq
inc
push
or
push
or
jp
nop
lahf
jge
pop
push
ret
push
fs
mov
inc
sub
cmp
jl
cmc
div
adc
and
push
nop
mov
shr
retf
rcr
sbb
add
adc
inc
fmul
cmps
jae
xchg
stos
in
inc
retf
adc
xchg
fild
sbb
lea
push
(bad)
fs
inc
loopne
lods
rcl
sub
(bad)
dec
cmps
or
mov
mov
add
rcl
sbb
mov
sbb
test
adc
retf
in
inc
dec
or
(bad)
fsub
repnz
fcom
xor
test
or
aas
pop
out
(bad)
sbb
leave
sbb
ss
adc
xchg
and
popf
mov
lea
sahf
rcr
push
sahf
mov
pop
sub
pop
mov
popa
cmp
pop
and
bound
mov
lahf
int3
stos
arpl
test
push
(bad)
jnp
or
cs
mov
dec
lock
xor
mov
xchg
sub
xchg
cmps
imul
retf
stos
jle
movs
imul
sbb
cmp
xor
mov
push
or
je
jmp
or
icebp
mov
or
out
and
repnz
out
xor
in
mov
pop
sub
jnp
lds
imul
pop
sahf
int
pop
aas
scas
mov
std
push
test
sub
push
add
out
mov
call
lea
dec
or
jmp
sar
fsub
aas
bnd
pop
js
movs
pop
in
and
mov
inc
fprem
leave
mov
ds
jo
je
mov
mov
jp
jl
lahf
pop
dec
inc
jbe
jmp
mov
cmps
cmp
xchg
or
cli
ror
std
jmp
jp
inc
lods
sbb
sbb
retf
into
aas
mov
add
dec
add
lds
pop
cld
rcl
call
push
push
cs
retf
inc
inc
push
jmp
sbb
out
popa
(bad)
or
sub
pop
fdivr
xchg
pslld
adc
lods
sub
mov
mov
push
scas
clc
jmp
xchg
inc
test
pop
retf
retf
outs
mov
add
sbb
shl
xchg
in
pop
jb
xchg
nop
cli
inc
aas
pushf
sub
lock
add
mov
cmp
add
push
retf
scas
jae
mov
inc
imul
fcmovu
dec
push
idiv
xchg
mov
les
xchg
imul
mov
fwait
xor
push
mov
pop
rcl
adc
add
xlat
add
in
sub
inc
xchg
movs
cmp
pop
push
aas
ds
pop
and
cdq
inc
test
add
scas
leave
jbe
inc
mov
xchg
je
mov
ja
mov
in
and
push
cmp
pop
mul
cmp
imul
jmp
mov
mov
xchg
push
stos
je
clc
pushf
fist
outs
jg
lods
out
jno
push
shr
shl
into
xchg
xchg
or
dec
lods
(bad)
and
or
test
sub
out
cmp
(bad)
mov
and
mov
xchg
pop
pop
or
mov
jl
int3
aam
fwait
adc
add
xchg
js
lods
cmp
test
jecxz
das
mov
pop
push
cmp
adc
cmp
(bad)
(bad)
jmp
imul
lock
adc
fwait
cli
sub
push
les
dec
inc
mov
or
jno
and
mov
jecxz
sub
cmps
mov
imul
jmp
or
mov
hlt
sti
or
jns
or
fistp
and
ins
inc
push
sub
jb
imul
mov
sub
aam
ja
ret
gs
pop
dec
sahf
test
stc
fwait
lds
mov
jp
call
and
out
mov
pop
out
aad
mov
jne
jmp
inc
(bad)
jbe
push
retf
add
cmp
in
gs
sar
or
mov
scas
mov
and
push
mov
ja
rcl
push
mov
cmp
cmp
pop
and
cmovno
dec
(bad)
retf
sbb
jmp
pusha
mov
imul
rcl
dec
repnz
cmp
add
mov
and
xchg
push
sbb
fstp
pop
gs
sub
in
cmp
clc
dec
mov
push
sbb
ret
sbb
outs
sysret
mov
mov
test
push
xchg
into
mov
out
popw
jno
fmul
ret
pop
xor
stos
push
test
call
sub
sub
sbb
push
inc
and
pop
mov
bound
inc
fwait
lds
in
cmc
jle
int
cmp
lock
stos
sahf
push
jne
cwde
adc
lea
inc
repz
mov
jmp
add
out
and
or
jbe
stc
push
in
jmp
push
jo
pop
shl
inc
push
push
push
adc
int3
pop
jnp
mov
add
sbb
xchg
mov
sbb
or
cmp
push
or
loope
lahf
cs
fsub
cmp
iret
ja
jne
mov
cdq
aad
mov
mul
stos
cmps
ror
and
xchg
sbb
xor
retf
shr
dec
pushf
push
out
lods
add
ret
pusha
mov
shl
pop
push
fwait
xchg
sti
xor
aaa
neg
cmp
cli
mov
cdq
(bad)
jmp
pop
pop
fiadd
ins
sub
adc
dec
xchg
and
gs
stos
fsubr
pop
xor
add
cpuid
adc
sub
mov
and
stos
mov
mov
jl
jnp
xchg
pop
bound
add
mov
push
test
sar
movs
sub
gs
and
and
adc
xchg
cmp
pop
sub
add
repnz
inc
fwait
inc
js
dec
fisubr
add
push
dec
jo
pop
(bad)
mov
cmp
sbb
retf
rol
sub
ror
pop
fisub
add
pushf
xchg
xchg
jg
mov
rcr
jbe
out
inc
adc
daa
call
adc
and
test
mov
adc
cs
ss
fdivr
xchg
xchg
and
outs
xor
rcr
mov
out
lods
xor
sub
jg
ror
jb
ja
mov
rcl
aam
shr
loop
retf
xchg
aad
mov
add
adc
mov
adc
or
push
push
push
paddb
add
inc
push
bound
pop
arpl
popa
jae
inc
jae
fs
adc
add
(bad)
not
aaa
push
push
add
outs
iret
and
pop
xlat
rcl
adc
add
add
or
add
ror
(bad)
dec
fcmovu
adc
add
rcl
mov
inc
jae
push
in
inc
jbe
nop
daa
pop
pop
cmp
loopne
pop
daa
imul
inc
mov
or
add
loop
out
loopne
dec
push
loop
jno
push
adc
jb
xchg
(bad)
or
fistp
jecxz
add
rol
push
or
xchg
push
mov
stc
mov
je
loop
or
repnz
pop
push
mov
adc
add
push
jne
cmp
add
shr
jmp
push
add
jb
sbb
call
mov
xor
sbb
mov
nop
ror
add
jmp
jp
add
pop
pop
jno
mov
shl
es
je
add
cwde
cmp
call
test
or
fwait
cmp
xchg
or
fwait
gs
add
jecxz
hlt
jecxz
repz
fsubr
push
lods
adc
push
adc
jecxz
cmp
cmp
xor
add
aas
mov
gs
aad
sbb
ss
jbe
add
cdq
ins
ins
ret
add
in
hlt
in
sub
mov
daa
mov
sbb
mov
lds
pop
add
add
add
cdq
xor
cdq
xor
fsubr
loopne
rol
xor
add
lds
loop
dec
add
xor
icebp
inc
inc
mov
add
je
add
out
xor
jbe
add
add
stos
fadd
mov
fidivr
test
sbb
push
add
mov
repnz
fsubr
aas
aas
mov
add
adc
stos
lods
mov
adc
xchg
inc
xor
and
cdq
xor
aad
fstp
loopne
add
xor
loopne
adc
sub
ret
fcmovu
sbb
aaa
ja
lock
and
sub
loopne
cmps
push
nop
call
inc
and
or
jo
mov
or
fcomp
mov
scas
push
pusha
out
into
std
ds
enter
gs
cmps
xchg
out
cmc
add
retf
les
push
movs
pop
push
shr
loop
sub
rcl
and
add
sub
outs
dec
add
ins
sbb
movs
add
mov
loop
hlt
call
pusha
pop
cmpxchg
jns
sub
mov
pop
lock
jp
call
mov
add
mov
push
rol
mov
jmp
inc
or
mov
jo
add
xor
pop
mov
sbb
cld
mov
outs
(bad)
mov
jg
jmp
out
test
mov
mov
out
xchg
aam
lods
fucomp
add
cmc
movs
movs
fidivr
leave
add
gs
add
aas
cmp
arpl
push
jns
pusha
mov
cmps
loopne
jle
fild
add
out
div
fcomi
loop
add
scas
ret
in
out
div
add
int3
inc
shl
mov
pushf
add
add
xor
aam
pop
add
neg
call
out
add
add
mov
xor
add
ror
into
aad
out
div
in
in
or
add
pusha
push
sub
push
mov
mov
pop
pop
aas
je
je
and
pop
mov
xchg
loop
out
div
xor
adc
rol
ror
inc
or
ret
into
jle
cmp
sub
test
pop
mov
sub
lods
push
pop
and
pop
mov
in
hlt
jmp
imul
xor
and
mov
iret
dec
std
int3
or
add
add
jmp
xchg
dec
dec
mov
dec
dec
mov
and
outs
add
inc
xor
xchg
mov
pop
mov
xlat
jmp
out
or
icebp
retf
aam
retf
int
add
in
imul
jmp
mov
dec
cmp
push
inc
dec
inc
xor
ret
repz
xor
cmp
add
retf
push
sub
pushf
pop
fild
add
scas
dec
or
lods
mov
mov
test
test
cmp
push
ins
pop
pop
shl
ds
ss
shl
loop
or
jmp
outs
mov
add
imul
leave
aam
leave
add
shr
jmp
jle
(bad)
std
sub
popf
xchg
ror
xor
inc
xor
or
pushf
in
test
lock
add
pop
add
jg
pushf
movs
and
enter
enter
fsubr
retf
retf
jmp
popf
popf
fsubr
ret
add
pop
test
sbb
and
or
mov
loopne
shl
nop
jnp
es
ja
or
sub
cmps
retf
push
or
test
add
stos
and
or
push
jge
or
push
add
retf
inc
imul
jnp
adc
aas
pop
lahf
inc
add
lahf
inc
push
mov
adc
adc
add
pushf
adc
xchg
daa
pop
xchg
xchg
lods
mov
(bad)
pop
call
add
inc
movs
jno
out
pusha
pop
jo
lock
mov
inc
xchg
and
jo
xor
xchg
gs
or
ins
jge
adc
jecxz
pushf
mov
add
arpl
pop
aaa
sub
sub
xor
das
pop
push
push
push
je
mov
das
loop
in
adc
xchg
dec
dec
xchg
(bad)
cmp
pusha
cmp
add
(bad)
xor
push
push
jnp
and
jge
push
xchg
mov
xor
push
lock
repz
push
stc
add
rcl
jecxz
inc
sar
adc
pop
adc
cmp
syscall
push
or
shr
sub
call
xchg
xchg
dec
or
mov
add
add
int
nop
lods
pusha
sbb
sub
test
sub
test
rol
push
jle
cmp
mov
aaa
adc
add
add
nop
sbb
mov
sbb
mov
and
loopne
xor
xchg
adc
(bad)
cmp
jle
je
or
add
int
inc
add
sbb
pop
pop
mov
or
or
or
mov
sar
add
push
mov
adc
mov
pop
sbb
rol
imul
push
adc
loopne
add
shr
or
add
and
lock
add
add
adc
mov
cmp
jo
fs
add
sbb
ret
or
adc
in
push
(bad)
clc
add
sub
add
adc
adc
and
inc
mov
pop
daa
into
rcr
or
or
add
xchg
(bad)
emms
add
add
add
add
and
or
push
push
fwait
add
mov
add
in
sti
push
pop
pop
fwait
add
mov
add
inc
mov
and
fiadd
cmp
jnp
jo
sub
bound
jo
cwde
add
push
sti
add
sub
sub
cmp
push
push
cli
or
xchg
add
daa
jo
lds
mov
jb
das
add
stos
adc
mov
es
aad
jmp
repnz
add
or
popf
adc
and
inc
adc
add
inc
inc
mov
daa
xchg
sbb
add
in
cmp
ret
mov
dec
pop
(bad)
or
pusha
fs
jnp
imul
sub
add
add
inc
aaa
inc
or
clc
nop
and
push
and
ret
repz
add
rcl
mov
ds
adc
ret
inc
add
inc
ret
mov
add
clc
adc
push
pop
push
mov
xor
xor
xor
adc
mov
cmp
sub
adc
xor
push
enter
xor
cwde
adc
pop
rcl
jnp
shl
or
stos
sub
inc
inc
ret
xchg
pop
rcl
push
push
xchg
sbb
js
enter
nop
cmp
popa
shl
rcr
add
and
loope
jno
xchg
push
xchg
pop
mov
adc
je
dec
mov
pushf
enter
(bad)
mov
xor
pop
jno
xchg
fscale
and
cmp
xchg
add
push
inc
push
cdq
mov
or
add
loopne
add
add
adc
jnp
jp
mov
push
add
cwde
add
or
adc
jo
loopne
xchg
push
add
or
lock
data16
imul
or
loopne
mov
std
(bad)
clc
sub
jmp
hlt
shl
mov
(bad)
sahf
pop
cmp
hlt
cld
call
out
aas
adc
sbb
pusha
add
add
loop
jg
push
inc
fiadd
stc
scas
jg
(bad)
in
xlat
cld
add
mov
imul
add
cld
fsubr
cmc
aaa
cld
scas
call
scas
jae
out
sub
mov
int
retf
push
ja
add
lods
jg
out
std
add
les
dec
(bad)
xor
cmc
mov
add
iret
(bad)
jns
pop
pop
es
pop
push
push
(bad)
pop
das
add
pop
mov
add
movsx
shr
cli
cld
add
sti
scas
jg
(bad)
ja
std
int
push
mov
xor
jg
jmp
add
pop
push
mov
dec
dec
inc
pop
pop
and
repz
aas
dec
lock
out
cmp
add
sub
add
repnz
push
add
sub
add
add
jle
add
add
add
adc
or
add
push
add
repnz
add
add
jle
add
add
add
or
or
add
add
inc
add
xor
pop
and
add
add
add
add
push
add
mov
push
add
sub
