retf
cmp
mov
inc
mov
add
inc
jno
fstp
inc
inc
dec
cli
inc
std
mov
fs
pop
nop
mov
std
sub
inc
cdq
(bad)
fild
dec
cli
retf
mov
inc
jno
icebp
int3
add
mov
xor
imul
icebp
cld
jno
fld
or
int3
xchg
stc
dec
(bad)
xchg
add
dec
dec
push
sahf
sahf
iret
clc
dec
cli
inc
std
int3
ds
mov
(bad)
pop
adc
and
mov
test
xor
movs
sbb
add
jae
jle
repnz
inc
jno
cmc
in
jbe
mov
(bad)
mov
inc
std
dec
cli
dec
js
cli
inc
std
(bad)
mov
leave
mov
or
jae
add
mov
bnd
add
cli
inc
jo
mov
add
lods
adc
mov
dec
pop
jo
or
jno
pop
jnp
add
les
add
sbb
inc
std
ret
dec
or
dec
add
mov
dec
add
mov
dec
or
add
push
jbe
test
sar
leave
les
mov
stc
ret
stos
sbb
add
add
dec
mov
dec
jbe
idiv
xchg
dec
mov
into
iret
adc
add
stos
mov
ja
in
and
add
add
ds
xchg
dec
cmp
inc
test
xchg
inc
adc
or
or
jmp
dec
nop
dec
adc
int3
ds
hlt
(bad)
pop
dec
cli
inc
std
movs
ffree
add
mov
push
dec
or
cli
inc
jle
repnz
std
cmps
push
cmp
dec
jns
stc
idiv
inc
std
dec
cmps
pop
mov
mov
sar
mov
clc
cld
dec
cli
inc
push
cmps
pop
ins
dec
or
sbb
inc
dec
cli
inc
std
movs
sub
inc
std
sbb
xchg
mov
pop
dec
or
mov
gs
dec
cli
inc
jle
jmp
pop
and
jnp
(bad)
cdq
shr
test
and
shl
mov
or
mov
inc
std
mov
push
enter
std
mov
pusha
dec
or
dec
add
cmps
mov
test
jle
leave
mov
stos
test
xor
inc
xor
sahf
jecxz
dec
cli
inc
ds
scas
leave
sbb
out
or
dec
adc
mov
adc
cmp
leave
cmp
stc
sub
and
cli
rcl
adc
std
dec
jae
jle
add
stos
xchg
mov
sbb
jg
dec
mov
leave
cmp
dec
mov
mov
cli
int
mov
mov
aas
cmp
inc
scas
cmps
push
ss
dec
retf
mov
dec
xchg
rcr
cli
int
jp
repz
cli
inc
jle
idiv
mov
inc
mov
cmp
cli
inc
or
add
je
jns
in
je
mov
mov
xor
jle
pop
mov
(bad)
pop
ret
adc
pop
inc
gs
(bad)
cmp
int
mov
sub
daa
lds
dec
nop
inc
xchg
dec
nop
inc
add
idiv
test
leave
cmp
or
dec
or
(bad)
jno
movs
mov
xor
xchg
dec
add
mov
std
(bad)
cmp
mov
cli
dec
or
(bad)
jno
movs
jecxz
xor
inc
std
dec
adc
or
leave
cmp
add
(bad)
pop
adc
(bad)
jmp
add
std
dec
cli
sub
mov
dec
add
repnz
ss
inc
je
repz
dec
retf
adc
add
push
add
out
std
mov
push
add
push
test
ss
inc
je
add
cmp
dec
repz
dec
retf
adc
retf
cmp
add
cmp
movs
mov
sbb
jle
jmp
hlt
imul
jae
int3
xchg
jae
add
hlt
mov
dec
jns
add
sub
inc
je
rcr
mov
mov
add
add
les
inc
repnz
out
jle
lahf
pop
or
leave
or
xor
std
cmp
jns
mov
push
add
push
retf
mov
cmp
retf
mov
xchg
or
leave
or
jle
add
inc
mov
add
dec
je
jns
add
jp
cld
dec
(bad)
mov
jle
add
push
cmps
xchg
adc
std
dec
cli
test
cmp
inc
scas
sbb
sbb
add
iret
retf
js
add
inc
aas
(bad)
outs
mov
clc
cmp
std
les
mov
(bad)
jl
dec
(bad)
mov
cmp
sti
inc
add
or
imul
dec
sti
inc
add
adc
js
add
imul
mov
leave
and
dec
sti
inc
add
cli
mov
xor
scas
leave
sbb
test
dec
inc
(bad)
out
(bad)
or
je
retf
mov
imul
retf
add
mov
jmp
mov
add
mov
and
int
les
repnz
push
cli
pop
mov
(bad)
pop
adc
adc
xchg
jg
inc
mov
mov
add
int3
mov
lea
les
and
push
jae
or
add
test
movs
(bad)
cmp
aas
cs
retf
sahf
sbb
repnz
push
cli
retf
mov
lea
add
movs
sbb
scas
leave
sbb
test
push
jbe
out
xchg
pop
jnp
add
rol
mov
xor
or
out
mov
ja
mov
icebp
inc
inc
push
in
jbe
xor
jle
add
pop
mov
retf
mov
lea
add
pop
mov
(bad)
pop
adc
lock
jae
cld
mov
xchg
dec
mov
mov
daa
movs
mov
js
add
retf
add
xchg
adc
add
sbb
xor
mov
adc
push
pop
stos
sbb
push
add
movs
push
xor
scas
leave
sbb
pop
jbe
idiv
jg
rcr
mov
mov
cmc
cmps
xchg
xor
dec
jae
xchg
dec
nop
inc
xchg
mov
inc
std
sbb
mov
xchg
dec
adc
dec
cli
leave
add
mov
jae
(bad)
or
mov
(bad)
pop
adc
cmp
jmp
or
jbe
jecxz
inc
std
mov
jae
jle
data16
dec
cli
xor
out
data16
dec
stos
retf
in
test
mov
add
clc
push
dec
cli
inc
or
cmp
retf
in
test
inc
std
adc
sbb
push
pusha
scas
sbb
enter
ror
mov
std
int3
fadd
sub
inc
xchg
dec
adc
mov
scas
mov
inc
std
(bad)
cmp
out
or
inc
or
cmp
dec
popa
(bad)
jae
adc
sbb
sub
and
stos
test
aas
cli
inc
je
retf
xor
cmc
fdivr
(bad)
(bad)
jae
mov
xchg
loopne
or
int3
retf
in
mov
push
std
dec
cli
inc
je
jnp
mov
cli
inc
int3
(bad)
repz
repnz
leave
mov
dec
retf
cmp
add
add
jnp
adc
push
cmps
xchg
adc
std
dec
cli
test
aas
cli
inc
scas
sbb
outs
je
sti
cwde
je
jnp
cmp
cli
inc
mov
gs
mov
hlt
mov
inc
jle
cld
dec
cli
retf
mov
or
sbb
js
add
ret
rcl
add
dec
mov
rcr
std
pop
jno
add
repnz
and
int3
(bad)
pop
or
add
mov
add
imul
xchg
dec
xchg
mov
or
add
cs
mov
ret
cmp
mov
icebp
int3
(bad)
pop
or
sti
inc
std
(bad)
and
(bad)
cmp
ds
inc
std
ret
lods
les
adc
add
mov
repnz
rol
dec
jns
add
(bad)
cli
inc
jle
add
jb
hlt
mov
dec
mov
test
inc
cmp
push
jns
xor
std
cmp
ret
fdiv
dec
add
dec
pop
cmp
or
jae
aam
jae
xchg
dec
adc
dec
cli
sbb
cwde
je
pushf
xchg
or
leave
mov
or
stos
int
scas
jns
in
(bad)
sbb
inc
push
jmp
stos
(bad)
lds
add
adc
ror
dec
cmp
in
mov
add
les
mov
std
dec
jae
add
xor
mov
int
xchg
add
fcomp
cli
adc
add
inc
je
push
dec
cmp
xor
std
mov
inc
std
les
mov
inc
ja
inc
std
mov
add
ret
rcl
add
dec
mov
rcr
std
pop
jno
add
repnz
or
mov
add
mov
mov
(bad)
jg
add
movs
sbb
scas
leave
sbb
push
dec
scas
sbb
data16
sti
mov
je
jae
aam
jae
jle
push
inc
jbe
repnz
dec
(bad)
std
inc
and
cld
dec
cli
inc
je
jae
aam
jae
push
cmp
aam
mov
add
or
retf
sti
jl
cmp
jl
cmp
ret
cwde
mov
retf
mov
dec
stos
sub
mov
inc
std
int3
ds
jl
cmc
ja
dec
cmp
pop
in
mov
mov
mov
or
jae
aam
jae
jle
push
inc
mov
pop
adc
or
mov
mov
add
mov
jno
movs
out
es
jns
cmp
stos
out
les
jl
xor
jl
xor
ret
cwde
mov
leave
add
or
cmc
iret
(bad)
jo
inc
jg
add
cli
ret
xor
dec
xchg
jg
add
cmps
imul
std
dec
adc
mov
mov
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
cli
inc
mov
dec
adc
xchg
dec
cli
leave
mov
dec
nop
inc
lods
cmps
mov
std
dec
jno
cmc
(bad)
cmp
xor
dec
cli
xor
std
ret
lods
sbb
(bad)
mov
std
and
stos
sub
daa
or
add
dec
jnp
in
cli
inc
add
add
mov
sbb
inc
out
inc
std
cmps
sahf
sub
stos
hlt
movs
jns
pop
jnp
sub
cli
inc
je
sti
cwde
je
cmp
add
push
mov
xchg
dec
cli
leave
js
add
test
mov
adc
push
repz
das
dec
std
dec
jae
cld
xchg
jae
xchg
dec
adc
mov
test
and
inc
je
ss
aam
jae
add
ss
cmp
sti
mov
icebp
int3
(bad)
fcomp
cli
inc
mov
cli
inc
jo
sbb
popa
in
mov
mov
add
xor
icebp
dec
cli
int
xchg
add
and
add
js
pop
mov
mov
xor
(bad)
dec
std
dec
jae
cld
xchg
jae
jo
cmp
popa
in
mov
mov
add
dec
js
repnz
std
daa
stos
loopne
dec
add
mov
add
ds
je
mov
mov
add
mov
xor
dec
ja
inc
mov
mov
mov
mov
cmp
or
dec
cmp
dec
cli
es
inc
mov
jns
clc
inc
std
iret
inc
mov
repnz
pop
inc
std
dec
nop
inc
xchg
adc
add
ret
add
or
dec
je
pushf
leave
inc
std
add
sub
dec
or
mov
repnz
jg
add
cli
inc
repnz
int3
inc
std
dec
cmc
idiv
add
int
mov
mov
pop
push
cli
test
aas
cli
inc
jle
test
dec
mov
clc
pop
pop
add
dec
jns
dec
mov
mov
dec
or
cmp
std
dec
jae
cld
xchg
jae
xchg
dec
xchg
xchg
sbb
out
mov
mov
shl
sub
daa
xor
mov
mov
mov
add
add
dec
cmp
dec
mov
std
dec
nop
inc
xchg
mov
add
daa
stos
loopne
dec
adc
or
(bad)
mov
fisub
mov
mov
int3
mov
idiv
mov
inc
mov
lds
add
cld
dec
cli
inc
xchg
dec
xchg
in
sbb
out
mov
mov
shl
sub
daa
inc
mov
add
adc
test
jb
mov
cmp
dec
mov
std
dec
nop
inc
xchg
in
sbb
std
daa
stos
loopne
dec
adc
cmp
mov
fisub
mov
mov
push
mov
idiv
mov
inc
mov
lds
add
cld
dec
cli
inc
xchg
dec
xchg
aam
or
mov
mov
shl
xchg
add
inc
std
imul
std
dec
or
mov
xchg
dec
xchg
ret
sbb
out
mov
mov
shl
xchg
add
inc
std
and
mov
add
cmps
aad
add
add
add
dec
xchg
stc
sbb
mov
mov
or
(bad)
mov
loopne
sti
sub
repnz
mov
or
idiv
mov
inc
mov
lds
add
cld
dec
cli
inc
jle
dec
mov
jmp
push
dec
or
pop
mov
cmp
jmp
clc
aas
dec
add
dec
pop
adc
or
mov
jo
dec
cmp
add
loopne
std
dec
jae
or
mov
and
les
add
add
mov
or
retf
add
add
js
sbb
leave
mov
xchg
jae
jle
push
inc
repnz
std
dec
jns
sub
and
(bad)
cmp
pop
lahf
add
std
inc
mov
mov
std
dec
cli
rcl
test
cmp
mov
push
mov
mov
jo
push
add
add
lds
(bad)
retf
push
jnp
sub
cli
inc
jo
cs
ins
scas
mov
mov
lds
cli
inc
je
push
dec
cmp
dec
cli
int
lahf
add
lds
mov
mov
push
cli
inc
std
(bad)
mov
sub
dec
repz
sti
inc
std
dec
ja
adc
les
add
add
mov
adc
stc
inc
std
ret
add
es
lds
push
leave
and
int3
xchg
dec
cli
ror
call
movs
add
adc
lds
push
dec
cmp
dec
cli
rcl
test
mov
inc
add
add
pop
push
cli
int
mov
mov
xchg
dec
cli
ret
cmp
in
mov
mov
std
dec
nop
inc
adc
imul
dec
std
dec
or
mov
add
push
mov
add
lahf
mov
add
data16
dec
jns
jmp
mov
mov
adc
bound
pop
mov
mov
add
jae
inc
dec
cli
inc
std
mov
add
push
je
inc
inc
std
dec
cli
mov
les
add
add
mov
je
jns
add
lds
jmp
js
add
rcr
mov
add
inc
std
dec
cli
leave
mov
dec
cli
inc
hlt
(bad)
cmc
(bad)
cli
inc
jo
push
mov
js
add
js
sbb
cwde
int3
xchg
jae
jle
push
inc
repnz
std
dec
jns
dec
mov
mov
std
dec
nop
inc
adc
push
jnp
mov
mov
add
jg
add
add
les
mov
adc
mov
in
(bad)
sbb
inc
push
jmp
jle
jmp
dec
or
jbe
push
mov
ret
xor
or
leave
and
int3
xchg
dec
cli
ret
pop
mov
mov
mov
mov
mov
jmp
dec
jae
add
dec
js
sti
inc
std
int3
inc
enter
inc
repnz
cmc
inc
std
dec
ja
popf
mov
mov
dec
mov
jg
add
add
mov
je
jns
add
lds
cli
inc
fwait
int3
inc
and
mov
dec
repnz
std
dec
jns
xchg
mov
mov
std
dec
cli
int
cs
cmc
xchg
mov
mov
add
ds
je
mov
mov
push
(bad)
jg
add
inc
and
mov
inc
repnz
jne
std
dec
cmp
mov
xchg
dec
add
mov
add
mov
mov
jg
cli
inc
jle
out
leave
and
ret
add
mov
xor
add
add
and
mov
adc
add
clc
mov
mov
xchg
dec
cli
ret
cmp
inc
jo
pop
mov
movs
scas
mov
mov
(bad)
jmp
int3
inc
enter
inc
mov
push
loopne
cli
mov
(bad)
jg
add
jg
add
add
lock
add
lock
add
add
jg
add
add
in
mov
adc
add
xchg
mov
cli
mov
add
jg
add
add
fwait
add
add
inc
cmp
pop
mov
js
add
jo
sbb
ret
inc
lahf
add
dec
jbe
sub
int
lods
dec
inc
rcr
std
mov
add
ret
inc
fwait
add
dec
jbe
cs
int
lods
dec
jbe
and
int
lods
dec
jbe
es
int
lods
dec
jl
stos
push
std
dec
jno
sbb
(bad)
retf
inc
adc
mov
pop
mov
(bad)
pop
sub
daa
jle
mov
psubd
dec
cli
inc
std
pop
sahf
leave
fmul
inc
std
int3
push
push
scas
sbb
add
test
xchg
cmp
xchg
dec
xchg
sbb
dec
cli
test
daa
cli
inc
jle
(bad)
clc
mov
cli
inc
or
push
leave
mov
mov
add
mov
mov
push
mov
fmul
cli
inc
jbe
sbb
mov
and
and
lods
inc
std
movs
push
xchg
mov
push
cmps
fidiv
or
dec
cli
shl
adc
xchg
pop
jae
aam
jae
xchg
iret
dec
add
and
and
mov
dec
adc
cwde
dec
cli
leave
cmp
adc
dec
cli
pop
sbb
jle
loop
stos
les
pushf
shl
add
std
dec
or
leave
cmp
push
or
fild
cli
inc
jl
out
push
std
dec
jns
in
mov
js
push
cli
inc
jle
repnz
mov
cli
inc
std
(bad)
xor
(bad)
cmp
std
dec
cli
inc
std
(bad)
or
ja
pop
add
dec
dec
dec
mov
xor
test
dec
(bad)
mov
jb
clc
inc
std
mov
lds
mov
fistp
cli
inc
add
hlt
mov
jno
dec
push
dec
mov
inc
(bad)
inc
adc
clc
inc
std
iret
neg
push
cli
add
dec
ret
pusha
clc
inc
std
mov
cli
inc
mov
lods
pusha
push
cli
inc
clc
ja
add
movs
cld
mov
std
(bad)
xor
(bad)
cmp
add
fistp
cli
mov
std
mov
cli
push
mov
adc
inc
std
into
adc
dec
cli
shl
gs
pop
pop
add
loop
fistp
mov
bound
cli
inc
mov
adc
inc
std
test
je
or
cmp
neg
push
cli
inc
adc
add
pop
bound
cli
dec
mov
adc
inc
std
into
cmp
push
gs
inc
pop
add
loop
out
mov
mov
bound
cli
inc
mov
adc
inc
std
(bad)
xor
(bad)
cmp
lock
gs
dec
cmp
inc
dec
inc
adc
add
add
cli
inc
mov
adc
inc
std
into
or
dec
cli
shl
gs
dec
cmp
inc
dec
inc
adc
add
add
cli
mov
std
into
adc
lock
gs
movlps
dec
cli
loope
sar
fistp
jae
jge
loop
mov
dec
cli
inc
pop
mov
cmp
dec
ret
dec
adc
mov
dec
repnz
dec
cli
loope
sar
fistp
cli
mov
std
int3
(bad)
js
push
cli
inc
adc
cli
inc
std
(bad)
xor
(bad)
cmp
clc
ja
add
dec
adc
std
dec
cli
jno
cmps
es
std
dec
jp
in
mov
mov
dec
cli
leave
or
pop
pop
add
inc
dec
inc
lods
out
mov
adc
mov
aas
cli
mov
lds
mov
inc
std
xor
inc
xor
js
dec
add
iret
neg
push
cli
add
jne
inc
mov
mov
lods
pusha
push
cli
inc
clc
ja
add
movs
fistp
std
into
cmp
dec
cli
shl
gs
movups
(bad)
adc
cld
dec
cli
leave
xor
cmps
jae
add
hlt
mov
sar
cmp
or
pop
aas
pop
add
(bad)
xor
(bad)
cmp
dec
mov
mov
dec
cli
enter
idiv
aas
pop
add
int3
sbb
or
dec
or
inc
repnz
jl
std
dec
jp
or
pop
dec
repnz
scas
jae
or
or
inc
mov
fs
cli
inc
clc
inc
push
std
int3
mov
pop
jp
or
or
xor
mov
jns
cmc
fistp
rol
neg
push
cli
shl
je
jae
mov
sar
movs
pusha
push
cli
ret
sbb
iret
xchg
cmp
dec
ins
psubd
not
mov
(bad)
or
jbe
not
mov
dec
out
js
push
cli
mov
std
out
repnz
fistp
mov
pop
cli
inc
jle
not
mov
(bad)
or
jbe
not
mov
dec
out
call
clc
inc
push
std
out
ret
dec
ret
inc
icebp
fistp
inc
mov
mov
cwde
pop
dec
push
std
jle
add
inc
inc
jmp
dec
cli
mov
(bad)
mov
sbb
scas
leave
sbb
lods
pop
inc
adc
loop
into
or
mov
std
daa
repz
mov
dec
cli
leave
cmp
jmp
test
adc
inc
pop
adc
std
mov
sbb
mov
push
adc
in
jmp
or
movs
inc
std
in
push
fnstsw
cli
push
adc
in
retf
dec
xchg
push
inc
or
movs
inc
std
in
mov
mov
mov
(bad)
pop
ret
adc
test
jae
dec
jnp
in
push
cli
inc
add
hlt
mov
or
stos
mov
std
mov
inc
je
rcr
adc
add
cmp
push
add
dec
cli
ret
cwde
mov
rcl
sti
inc
std
int3
lahf
mov
dec
or
cli
rcl
test
mov
inc
cmp
es
std
dec
cli
int
cmp
std
(bad)
mov
hlt
mov
dec
cli
inc
std
(bad)
and
(bad)
cmp
std
dec
jns
inc
dec
ja
inc
ret
inc
dec
cli
inc
std
mov
stos
sub
dec
cld
inc
jo
push
adc
pop
push
fnstsw
jae
jo
data16
pop
nop
inc
xchg
dec
nop
inc
xchg
dec
add
and
dec
ja
pop
pop
add
lock
and
cli
inc
add
hlt
mov
cmp
std
and
cld
mov
pushf
dec
cli
rcl
mov
mov
movs
adc
mov
xor
or
stos
mov
sbb
add
inc
jbe
push
stos
icebp
not
std
dec
or
leave
adc
sbb
push
pop
cmp
push
imul
mov
adc
jae
add
mov
retf
mov
jae
add
jle
leave
test
jae
adc
and
stos
int
cmps
stos
mov
jo
push
adc
mov
jo
push
cli
retf
mov
or
leave
aas
data16
test
xor
inc
push
mov
test
cmp
add
mov
dec
xchg
mov
push
in
sar
adc
icebp
sbb
pop
jbe
repnz
mov
sti
mov
idiv
jno
mov
leave
inc
dec
add
dec
(bad)
mov
aad
dec
add
dec
(bad)
mov
loope
dec
add
dec
(bad)
mov
in
inc
dec
add
dec
(bad)
mov
jns
clc
inc
std
les
inc
ja
(bad)
enter
add
mov
dec
cwde
cld
mov
jno
xor
ins
inc
std
dec
jae
mov
dec
push
jmp
cmp
(bad)
cli
inc
std
mov
pop
dec
cmc
imul
pop
ret
or
stc
dec
dec
pop
in
jns
cmp
repnz
inc
cmps
cli
inc
std
cmp
cmp
es
add
pop
adc
mov
sbb
push
call
sbb
cli
inc
je
add
xor
ret
clc
dec
add
pop
dec
rcl
adc
les
inc
cld
mov
test
les
inc
std
dec
cli
stos
fld
add
jge
call
mov
add
add
dec
add
iret
(bad)
jle
cmp
jl
dec
(bad)
or
test
iret
mov
mov
inc
jge
cld
inc
mov
mov
dec
dec
cld
jl
cmp
jge
dec
cli
inc
mov
jle
inc
ror
jmp
and
pop
ja
lds
stos
stc
int3
cmp
dec
out
inc
std
dec
cli
rol
clc
xor
jge
cld
inc
mov
jae
jle
clc
rol
clc
xor
adc
dec
pop
je
jns
stc
inc
dec
inc
sti
jb
inc
std
dec
mov
cmps
cli
inc
std
cmp
ret
xor
ret
clc
dec
add
pop
dec
rcl
stc
(bad)
mov
int
dec
inc
int3
adc
add
jmp
dec
jp
ret
dec
(bad)
adc
rol
sti
xor
adc
dec
(bad)
jle
mov
test
iret
mov
leave
leave
add
stc
inc
jb
dec
shl
jge
dec
cli
inc
mov
dec
cmps
dec
cli
retf
test
ja
out
dec
sti
mov
stc
pop
sti
inc
std
dec
mov
inc
std
inc
js
add
xor
adc
push
stos
mov
xor
or
adc
adc
jae
inc
mov
rol
stc
inc
std
cmp
rol
stc
inc
std
cmp
push
jbe
imul
dec
cli
inc
les
cli
inc
std
int3
cmp
add
hlt
mov
pop
cmp
fstp
mov
mov
push
mov
xor
or
in
adc
push
cli
xor
int3
lahf
mov
and
pop
std
enter
add
mov
cmp
(bad)
pop
jne
in
mov
(bad)
mov
call
sti
nop
je
push
int
push
sti
retf
test
jae
(bad)
push
(bad)
sar
cmp
jae
cld
xchg
rcl
cld
lahf
jns
stc
(bad)
mov
test
jbe
add
in
mov
xor
or
sar
cld
lahf
jns
stc
(bad)
mov
leave
stc
jb
inc
std
dec
test
push
cmp
clc
mov
mov
mov
ret
cmp
push
cmps
xchg
adc
fmul
test
push
cli
inc
scas
sbb
mov
add
cli
inc
ror
jge
std
xchg
and
lds
mov
push
or
sbb
in
inc
dec
lds
mov
jmp
inc
or
jp
push
nop
add
dec
dec
retf
add
inc
add
dec
pop
adc
imul
adc
call
aaa
inc
ja
lock
add
push
adc
dec
cli
retf
push
(bad)
(bad)
aad
(bad)
mov
mov
mov
sub
push
ja
lock
inc
add
push
cmp
and
stos
fnstcw
cli
retf
push
(bad)
(bad)
push
fstp
mov
scas
add
or
jecxz
mov
mov
or
js
adc
imul
adc
inc
jle
out
pusha
ins
psubd
retf
pusha
inc
std
dec
cmc
imul
adc
inc
jbe
out
adc
leave
push
mov
xor
or
and
les
cli
inc
adc
(bad)
jg
and
dec
add
les
and
adc
lods
in
leave
and
dec
jae
or
adc
dec
jmp
dec
cli
leave
cmp
or
cmp
clc
leave
dec
repnz
ds
jmp
mov
ss
jg
and
mov
xor
or
adc
int3
std
dec
cli
sub
mov
inc
add
push
scas
add
add
mov
je
push
dec
cmp
iret
and
add
fnstsw
add
mov
dec
push
retf
leave
cmc
jns
stc
je
std
add
inc
mov
inc
std
cmp
stc
inc
std
cmp
cli
push
std
dec
jae
jge
add
cmp
cli
inc
jl
cli
mov
dec
mov
add
push
test
mov
mov
adc
cli
retf
js
and
add
mov
adc
cmps
mov
mov
mov
lahf
add
cli
test
repnz
outs
mov
mov
sbb
outs
imul
(bad)
outs
mov
mov
ret
pop
mov
jno
or
clc
leave
and
adc
scas
clc
inc
mov
jno
in
(bad)
jbe
adc
fimul
scas
add
and
dec
cld
test
push
add
mov
std
cmp
dec
add
iret
inc
mov
mov
push
inc
or
cli
inc
je
pop
sahf
add
(bad)
jl
dec
cli
leave
push
int3
cmp
dec
lds
add
sahf
add
add
inc
inc
jg
and
and
add
outs
aam
mov
inc
inc
jg
and
and
xchg
and
and
int
mul
cmc
and
lods
inc
std
les
and
and
retf
js
and
hlt
and
and
mov
mov
sub
les
and
test
push
mov
dec
scas
daa
test
nop
add
inc
mov
mov
mov
mov
sbb
nop
add
lahf
add
outs
add
inc
dec
aad
mov
clc
retf
jmp
dec
jae
or
jmp
dec
cli
leave
js
and
dec
js
sti
inc
std
iret
xchg
inc
jle
cld
dec
cli
retf
js
adc
inc
shl
rol
sti
inc
std
cmps
loope
std
dec
jno
or
inc
dec
cli
ret
pop
mov
add
dec
jae
sbb
pop
sahf
add
and
cmc
sbb
mov
lds
push
dec
ret
push
jae
jle
stc
rol
(bad)
push
je
jns
stc
iret
ret
inc
jae
jle
inc
lds
dec
mov
aaa
mov
std
inc
dec
aad
xchg
add
leave
dec
pop
pop
call
add
inc
shl
retf
stc
jp
inc
std
dec
jns
add
mov
movs
and
or
mov
mov
inc
add
(bad)
jmp
mov
test
add
pop
sahf
add
inc
push
pop
xchg
add
rol
sti
inc
std
dec
cli
xor
dec
inc
std
cmp
rol
stc
inc
std
dec
cli
xor
stc
dec
cli
inc
std
cmp
rol
inc
dec
cli
xor
or
mov
stc
jg
and
pop
rol
dec
lds
mov
dec
pushf
and
and
mov
icebp
iret
inc
mov
mov
add
mov
mov
sbb
cmps
clc
sbb
add
mov
add
inc
mov
mov
inc
stc
dec
cli
xor
or
add
scas
add
or
jecxz
mov
mov
outs
push
mov
pop
mov
(bad)
pop
ret
adc
push
stos
les
xchg
lahf
ffree
mov
cmp
add
cmp
inc
or
cli
inc
push
jmp
sub
std
ret
jo
jg
mov
dec
cli
mov
ret
jo
outs
std
mov
dec
cli
mov
iret
shl
inc
mov
sub
dec
jp
add
add
ja
cmc
imul
stos
pop
or
add
or
movs
inc
addr16
std
mov
xor
mov
dec
adc
std
dec
cli
retf
dec
adc
sub
iret
std
dec
cli
sar
sti
jge
dec
cli
inc
and
add
aas
(bad)
scas
mov
fmul
add
mov
add
mov
lods
std
ret
pop
dec
mov
mov
xor
or
add
idiv
(bad)
(bad)
dec
jle
std
ret
add
or
inc
fmul
jp
std
dec
pop
add
leave
aas
data16
test
cmc
idiv
jb
inc
std
dec
(bad)
sti
js
dec
jp
add
add
or
ret
add
inc
push
pop
jo
repnz
scas
mov
or
mov
dec
adc
or
inc
jge
cmova
(bad)
cmp
(bad)
scas
mov
jle
cli
inc
mov
add
mov
xchg
adc
scas
sbb
fwait
mov
sub
inc
or
sub
dec
cli
inc
stos
and
cli
inc
je
jns
add
jp
cld
dec
(bad)
mov
jge
les
dec
cmp
retf
stos
sti
add
cld
xor
leave
and
mov
and
jae
inc
dec
fiadd
cmps
adc
dec
lods
pop
inc
sub
cld
in
or
clc
aam
cli
inc
or
add
xor
cmc
ret
sbb
lods
inc
std
ret
sbb
inc
cli
inc
std
int3
ds
int3
mov
jae
mov
(bad)
pop
pop
inc
mov
or
sub
and
nop
inc
adc
adc
ret
adc
push
stos
lock
push
movs
cmp
cwde
push
cli
inc
xchg
dec
xchg
sar
cli
sub
and
cli
inc
std
iret
add
adc
dec
jae
jle
add
dec
std
cmp
retf
mov
jle
stos
pushf
mov
sbb
mov
inc
stos
cmps
mov
cmp
adc
dec
cli
leave
mov
dec
cli
mov
(bad)
mov
inc
jle
test
jno
icebp
(bad)
mov
add
add
or
add
push
push
adc
sbb
ja
dec
cli
retf
mov
mov
movs
push
cmps
xchg
adc
icebp
sbb
pop
inc
into
xchg
fidivr
(bad)
cmp
inc
std
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
cli
inc
cmp
mov
ret
add
adc
inc
xor
inc
std
mov
jae
xchg
dec
nop
inc
xchg
dec
lods
test
push
cli
inc
jbe
test
int3
xor
std
cmp
leave
ds
test
add
not
adc
and
stos
sub
daa
or
add
cli
inc
stos
cmps
data16
dec
jae
or
mov
inc
std
dec
cli
pop
mov
(bad)
pop
adc
pop
out
jge
mov
mov
xchg
iret
cli
inc
std
and
cli
sub
dec
cli
add
repnz
push
cli
inc
je
jns
add
(bad)
jno
movs
ret
mov
jae
xchg
dec
nop
inc
xchg
dec
lods
test
push
cli
inc
xchg
dec
ja
add
add
dec
stos
cmps
jle
std
dec
lods
test
pop
cli
inc
int3
(bad)
mov
jno
(bad)
cmp
adc
stos
sbb
cmc
mov
push
or
std
cld
dec
cli
jno
(bad)
and
inc
ret
dec
cmp
(bad)
xor
cmp
les
xor
add
imul
mov
cli
test
mov
scas
dec
cli
ret
cmp
fwait
push
pop
cmc
idiv
push
stos
sub
scas
mov
inc
std
int3
ds
mov
cmps
retf
mov
ret
dec
pop
les
je
dec
cmp
scas
mov
mov
dec
cli
ret
cmp
push
cmps
xchg
adc
stos
sbb
cmc
les
stos
mov
mov
push
std
dec
xchg
jnp
or
cli
inc
movs
jle
stos
out
inc
dec
inc
(bad)
pop
xchg
jne
or
cli
inc
jle
repnz
les
sbb
std
cmps
jmp
mov
adc
jae
add
movs
sbb
scas
leave
sbb
push
fs
sbb
push
je
rcr
mov
sub
inc
jle
adc
sub
inc
jo
or
enter
std
idiv
inc
std
dec
or
je
retf
cwde
je
jp
in
dec
pop
mov
add
inc
mov
repnz
dec
cli
mov
(bad)
mov
idiv
dec
or
cmp
iret
xchg
nop
mov
rol
iret
xchg
mov
std
cmp
retf
mov
dec
jb
add
inc
std
inc
dec
add
clc
mov
mov
inc
mov
sub
add
cmp
je
sti
cwde
je
jno
icebp
inc
dec
inc
jbe
repnz
dec
pop
rcl
std
dec
cmc
imul
dec
mov
leave
xor
clc
mov
or
mov
dec
dec
paddb
test
cmc
imul
clc
scas
mov
mov
inc
cli
inc
jbe
test
repnz
test
cmc
imul
or
retf
mov
xchg
and
push
ins
idiv
push
mov
sar
add
push
cmp
cmp
shr
push
cmc
fild
ins
punpckhdq
ins
fild
ins
fild
ins
punpckhdq
ins
fild
ins
fild
ins
jbe
shr
push
daa
fild
ins
idiv
lock
scas
mov
push
dec
jns
lds
cmp
shr
push
cmc
fild
ins
int3
cmp
push
and
cmp
shr
push
ins
fild
ins
sub
leave
in
mov
sbb
popf
test
dec
cli
inc
movs
fild
ins
(bad)
mov
rcl
mov
fbstp
ins
fild
jbe
(bad)
shr
jno
cmc
fild
int3
pop
push
ins
fistp
stc
fild
les
lods
ins
fild
jle
not
ins
fistp
std
fild
mov
fwait
shr
push
call
push
mov
dec
repnz
xor
lock
dec
adc
jns
and
push
ins
idiv
push
mov
fild
ins
adc
ins
fild
add
cmp
sti
test
(bad)
and
ins
fild
cmp
push
ins
jle
shr
push
ins
fild
ins
(bad)
xor
ins
fild
or
push
ins
fisubr
ins
fild
ins
fild
ins
icebp
repnz
xor
int
push
ins
dec
add
ins
fild
pandn
ins
idiv
lock
dec
push
ins
cmp
sti
sub
(bad)
and
ins
fild
cmp
push
ins
jle
shr
push
ins
fild
ins
(bad)
xor
ins
fild
or
push
ins
fisubr
ins
fild
ins
fild
ins
icebp
adc
jns
jno
fild
ins
dec
add
ins
fild
pandn
ins
cs
ins
fild
adc
jmp
add
lods
leave
sbb
pop
jbe
repnz
mov
inc
cmp
inc
mov
or
leave
mov
(bad)
mov
jno
(bad)
mov
mov
scas
jae
and
mov
movs
std
dec
cli
clc
inc
sbb
inc
or
push
leave
mov
(bad)
and
pop
adc
or
jb
push
iret
xchg
mov
cmps
jp
std
dec
jae
sub
dec
inc
inc
std
dec
cli
dec
dec
sbb
leave
add
sub
or
sub
or
add
stc
push
(bad)
xor
pop
jae
cld
mov
cmc
div
pop
cmc
idiv
push
(bad)
mov
in
(bad)
and
pmaddwd
in
inc
dec
or
in
les
xor
cmc
daa
push
std
dec
ja
nop
cmps
mov
cli
dec
dec
or
adc
mov
ret
repnz
scas
mov
aas
add
inc
xchg
dec
ja
nop
cld
mov
cli
inc
jle
fdivrp
mov
sub
leave
mov
int3
cmp
fwait
mov
mov
clc
mov
dec
jg
add
sbb
scas
leave
sbb
push
jo
sbb
aaa
je
retf
mov
mov
fbstp
dec
stc
sub
add
data16
sub
sbb
add
dec
pop
(bad)
adc
dec
cli
int
scas
stos
mov
add
inc
jae
hlt
(bad)
cmc
(bad)
loopne
cli
inc
repnz
xchg
jmp
dec
rcl
inc
add
(bad)
sub
pop
repnz
xchg
leave
jb
std
mov
jb
std
mov
add
inc
xchg
inc
nop
inc
je
stc
inc
cmp
mov
adc
int3
ds
pop
xchg
std
(bad)
mov
xchg
add
inc
je
stc
add
inc
or
mov
std
mov
repnz
xor
cs
mov
movs
jmp
and
pop
es
mov
or
inc
pop
fwait
inc
add
dec
call
mov
out
inc
std
(bad)
mov
inc
std
les
leave
aas
inc
dec
xchg
cmp
jmp
or
cli
inc
je
and
jbe
and
mov
xor
sub
je
es
mov
jne
inc
xchg
setb
inc
or
inc
adc
int3
ds
pop
xchg
std
(bad)
mov
xchg
cli
inc
je
stc
add
inc
or
mov
std
mov
repnz
xor
cs
mov
movs
in
leave
or
(bad)
and
mov
mov
add
inc
or
inc
add
jbe
mov
xchg
jae
(bad)
jb
std
mov
mov
outs
mov
lock
inc
add
(bad)
idiv
nop
stc
jge
repnz
scas
sub
jno
push
(bad)
neg
jne
cmp
jle
adc
mov
cs
cmp
add
dec
std
mov
mov
mov
std
and
cli
sub
daa
cli
inc
std
syscall
xor
std
dec
jae
sbb
stos
mov
mov
cli
leave
or
lahf
jae
add
push
test
pop
cli
inc
scas
cmps
add
std
dec
retf
cmp
scas
leave
sbb
push
pop
dec
adc
(bad)
mov
leave
js
pop
mov
clc
cmp
std
in
inc
std
ret
and
cli
inc
or
add
mov
dec
cli
cli
add
mov
mov
inc
cmp
in
aaa
(bad)
sub
je
jns
mov
mov
mov
ret
xchg
cmps
ds
dec
cmc
test
jmp
mov
add
mov
and
(bad)
mov
mov
mov
dec
mov
mov
std
dec
jae
or
jg
add
cld
mov
js
add
add
xchg
rcr
sub
nop
mov
mov
xchg
add
inc
je
shl
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
cli
inc
mov
mov
adc
(bad)
jg
add
or
cmp
xor
std
pop
adc
dec
cli
sub
ret
add
loop
std
daa
add
mov
mov
mov
std
mov
mov
mov
test
or
inc
add
hlt
mov
nop
mov
mov
syscall
cli
inc
jl
adc
mov
mov
mov
mov
mov
std
iret
adc
dec
cli
mov
std
daa
cmp
and
add
add
xchg
inc
std
dec
jp
loopne
cli
inc
scas
daa
xchg
lahf
mov
or
cli
rcl
ds
adc
movs
lods
pop
test
push
inc
imul
mov
std
into
cmp
ret
cwde
mov
int
mov
int
mov
sub
daa
lds
dec
nop
inc
xchg
dec
nop
inc
add
idiv
mov
cli
leave
or
xor
std
cmp
leave
mov
mov
xchg
cmp
push
xchg
dec
nop
inc
add
jmp
dec
cli
mov
mov
cli
pop
mov
(bad)
pop
pop
inc
js
ret
add
(bad)
cmp
adc
pop
add
push
add
idiv
std
dec
cli
ret
cmp
sbb
stos
lock
mov
xchg
dec
nop
inc
jo
out
adc
cmp
mov
cmc
cmps
cld
inc
std
dec
jns
in
cmps
sub
inc
mov
cmp
mov
mov
sti
dec
clc
inc
xchg
dec
nop
inc
xchg
dec
add
dec
adc
inc
cmp
jle
stos
retf
pop
add
out
mov
add
jmp
dec
cli
dec
cmp
mov
(bad)
mov
cli
jno
movs
jmp
adc
mov
std
mov
mov
std
jle
add
stos
jns
jmp
pop
jno
in
jae
in
or
xchg
xor
inc
inc
dec
out
inc
std
mov
jae
cmp
int
mov
sub
dec
clc
inc
xchg
dec
add
dec
adc
inc
cmp
jle
stos
rol
pop
lods
sbb
xor
adc
inc
cmp
mov
mov
std
jle
stos
in
xlat
add
dec
or
leave
cmp
mov
add
sbb
lods
pop
lods
pop
inc
call
add
(bad)
cmp
add
dec
mov
add
cmps
mov
mov
mov
mov
mov
mov
mov
daa
cmp
inc
xchg
dec
nop
inc
xchg
cs
push
std
dec
pop
mov
cmp
movs
out
leave
add
mov
mov
jae
cli
inc
je
push
pop
mov
or
pop
je
retf
mov
add
dec
ja
pushf
nop
mov
sub
lods
pop
jbe
repnz
mov
push
xchg
je
rol
and
xor
and
xchg
stos
mov
mov
inc
jae
aam
jno
in
mov
inc
std
into
mov
inc
je
jns
jmp
inc
mov
jp
ret
dec
(bad)
bound
rol
lock
cmp
clc
xor
inc
or
push
leave
mov
(bad)
and
push
jo
mov
xchg
stos
test
or
inc
je
jnp
add
in
inc
std
inc
add
inc
and
cmps
ds
dec
jno
add
cmp
(bad)
scas
mov
push
inc
retf
adc
jnp
add
nop
inc
std
adc
sbb
push
push
scas
sbb
cdq
xchg
data16
leave
or
sbb
sar
mov
xchg
jns
cmc
sbb
inc
std
(bad)
mov
adc
dec
retf
mov
pop
cmc
idiv
jl
mov
inc
cmp
inc
dec
inc
into
int3
or
jne
leave
push
(bad)
cmp
xor
sub
stos
mov
dec
cmp
mov
stc
out
cli
inc
fs
cmp
stos
mov
out
cli
inc
inc
add
test
dec
jae
or
lods
retf
cmp
inc
stos
cmps
inc
push
std
dec
jns
jmp
inc
dec
add
(bad)
loopne
add
xor
scas
leave
sbb
mov
dec
(bad)
mov
sbb
cli
faddp
or
int3
inc
std
int3
pop
mov
mov
inc
jle
push
mov
or
ret
add
imul
jle
repnz
ds
and
rol
repnz
lock
cmps
mov
cmps
fisttp
dec
add
add
dec
jae
and
push
cli
inc
std
mov
add
mov
add
add
aad
mov
mov
stc
dec
cli
pop
xchg
movhlps
mov
mov
mov
std
dec
or
mov
add
repnz
dec
cli
inc
adc
(bad)
or
(bad)
cmp
mov
mov
mov
add
jp
cld
dec
(bad)
mov
jbe
ss
scas
cmps
test
cmc
daa
scas
lahf
mov
cmps
ds
cmc
daa
mov
mov
mov
mov
std
int3
ds
adc
div
inc
std
dec
arpl
sbb
or
add
add
cmc
cmps
mov
std
dec
inc
dec
std
dec
cli
(bad)
mov
mov
retf
or
inc
inc
sub
inc
std
(bad)
or
mov
xchg
jno
add
sbb
jae
dec
cli
ret
cmp
pop
mov
cli
mov
(bad)
jg
add
inc
std
dec
cli
(bad)
mov
mov
or
cli
push
mov
mov
inc
xchg
ja
or
add
add
cmc
cmps
ss
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
cli
push
mov
mov
inc
jae
or
pop
mov
mov
dec
cli
inc
fs
xchg
(bad)
mov
inc
std
dec
arpl
add
les
jnp
cli
inc
jle
jmp
or
add
popa
and
mov
push
adc
div
inc
std
dec
arpl
sbb
or
add
add
dec
jns
cmc
daa
lock
mov
mov
mov
std
int3
ds
je
shl
mov
dec
cli
inc
fs
xchg
mov
dec
mov
xlat
or
inc
jle
repnz
nop
mov
mov
mov
inc
adc
test
ret
pop
dec
xchg
mov
inc
std
dec
arpl
add
les
inc
or
inc
jle
jmp
cmps
bound
std
dec
inc
test
dec
cli
(bad)
mov
sub
xchg
mov
mov
imul
jo
and
add
jno
add
sub
xchg
inc
jle
fisubr
inc
inc
cli
inc
std
(bad)
or
cmp
std
dec
inc
and
dec
cli
(bad)
mov
retf
inc
mov
mov
and
mov
push
adc
div
inc
std
dec
arpl
sbb
or
add
add
dec
jns
cmc
into
or
mov
or
cli
inc
std
(bad)
or
cmp
mov
mov
mov
std
int3
ds
adc
div
inc
std
dec
arpl
sbb
or
add
add
dec
jns
cmc
daa
ins
sahf
mov
les
add
and
std
pop
adc
mov
pop
adc
mov
dec
cli
inc
fs
xchg
test
std
mov
mov
dec
or
repnz
pop
adc
inc
or
pop
mov
mov
dec
cli
inc
fs
xchg
mov
dec
mov
or
test
or
cli
inc
std
(bad)
or
cmp
std
dec
inc
and
dec
cli
(bad)
mov
retf
inc
mov
mov
and
mov
push
jle
fiadd
retf
pop
dec
jns
inc
mov
mov
std
dec
cmp
std
dec
add
sbb
test
mov
inc
mov
mov
add
inc
mov
inc
mov
mov
je
inc
pop
std
dec
cli
(bad)
mov
sbb
inc
std
cmc
mov
cmp
or
leave
push
(bad)
sub
int
dec
cli
mov
and
cli
mov
mov
pop
jae
aam
jae
add
inc
mov
inc
mov
mov
repnz
mov
or
loop
js
cli
mov
add
sahf
sahf
mov
push
cli
inc
jle
loop
ror
cli
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
mov
mov
std
int3
ds
je
shl
mov
dec
cli
inc
fs
xchg
test
std
mov
mov
fisttp
cli
inc
jle
repnz
psubd
inc
cli
inc
std
(bad)
or
cmp
mov
mov
mov
std
int3
ds
jl
inc
mov
std
dec
add
mov
add
pop
mov
add
pop
mov
je
adc
cld
dec
cli
retf
mov
mov
mov
std
iret
inc
inc
std
mov
inc
repnz
mov
std
dec
jae
aam
jae
jbe
out
std
xchg
inc
(bad)
retf
add
cli
inc
jbe
add
adc
out
sub
push
mov
mov
cli
inc
jle
test
mov
xor
std
cmp
leave
cmp
jae
inc
mov
mov
std
dec
ja
std
dec
add
lds
pop
mov
add
rol
jg
add
add
je
or
or
loop
dec
mov
jg
add
and
std
pop
adc
cmp
movs
mov
(bad)
jg
add
add
test
jo
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
mov
mov
std
int3
ds
adc
div
inc
std
dec
arpl
sbb
or
add
jg
dec
jns
cmc
cmps
cmps
jg
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
cli
push
mov
ret
ret
cmp
cmc
or
cmps
rol
or
mov
mov
jg
std
mov
adc
cli
add
std
mov
test
mov
mov
js
add
add
rcr
mov
mov
std
int3
ds
adc
div
inc
std
dec
arpl
sbb
or
add
jg
dec
jns
cmc
cmps
ds
dec
inc
dec
std
dec
cli
(bad)
mov
mov
ss
mov
mov
ret
dec
cli
ret
cmp
mov
mov
les
div
inc
std
dec
arpl
sbb
or
add
jle
dec
jns
cmc
daa
enter
add
mov
std
int3
ds
adc
div
inc
std
dec
arpl
sub
dec
cli
stc
sahf
dec
cli
inc
fs
push
mov
ret
nop
mov
jle
dec
jns
in
cmps
(bad)
jle
dec
inc
dec
std
dec
cli
(bad)
mov
mov
mov
cli
push
mov
ret
dec
cli
ret
cmp
scas
cdq
sub
inc
adc
div
inc
std
dec
arpl
sbb
or
add
jle
dec
jns
cmc
cmps
es
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
cli
push
mov
ror
cmp
test
dec
cli
inc
fs
xchg
jmp
std
dec
arpl
add
les
pop
jb
inc
jle
jmp
cli
push
mov
ror
cmp
mov
test
pop
mov
ror
test
ret
pop
dec
xchg
mov
dec
mov
jg
cli
inc
jle
repnz
xchg
mov
mov
ror
cmp
imul
cli
stc
test
ret
pop
dec
xchg
mov
dec
mov
mov
cli
inc
jle
repnz
xchg
mov
mov
ror
cmp
mov
mov
mov
lock
std
dec
arpl
sbb
or
add
jge
dec
jns
cmc
ret
add
push
mov
call
ss
dec
jns
in
cmps
push
jl
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
cli
push
mov
ror
cmp
mov
mov
and
std
mov
mov
dec
jae
inc
jle
repnz
jae
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
mov
mov
std
int3
ds
adc
not
inc
std
dec
arpl
cmp
inc
std
sbb
add
adc
ret
jae
inc
jle
jmp
inc
cli
inc
std
(bad)
or
cmp
mov
mov
mov
std
int3
ds
xchg
xchg
daa
add
mov
mov
xlat
jae
inc
jle
repnz
or
cmps
sbb
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
cli
push
mov
(bad)
dec
cli
ret
cmp
sti
(bad)
dec
cli
stc
test
ret
pop
dec
xchg
out
inc
std
neg
mov
sbb
add
stos
daa
les
pop
je
inc
jle
jmp
cli
push
mov
(bad)
dec
cli
ret
cmp
inc
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
cli
inc
mov
jle
inc
std
(bad)
jg
add
clc
inc
std
mov
mov
dec
ja
inc
xchg
dec
ja
or
add
mov
add
cli
mov
add
add
mov
std
(bad)
or
add
adc
retf
retf
js
add
sbb
scas
leave
sbb
push
inc
cld
dec
cli
pop
inc
adc
cmp
(bad)
cmp
stos
(bad)
into
cmp
dec
dec
or
add
ret
add
rol
cli
sub
mov
mov
cld
dec
cli
rcl
ds
jge
add
jl
cmp
ret
dec
xchg
or
or
cli
rcl
sub
mov
or
mov
inc
jge
mov
ffree
add
(bad)
cmp
leave
sbb
push
fdivr
dec
cli
adc
gs
pop
cli
inc
or
add
in
mov
mov
jge
sti
dec
imul
add
inc
clc
dec
cli
inc
std
(bad)
jg
add
add
cmp
retf
mov
mov
push
adc
les
inc
mov
mov
push
adc
(bad)
jg
add
pop
mov
std
dec
jno
cmc
les
add
dec
test
fisub
add
jae
stos
cmps
shl
dec
jae
mov
pop
mov
retf
leave
js
pop
mov
add
cli
inc
jbe
repnz
jo
pop
mov
clc
les
add
sti
int
dec
sti
add
mov
sub
cli
inc
je
outs
mov
xchg
dec
ja
pop
mov
mov
std
dec
jae
int3
mov
xchg
pop
adc
les
sub
dec
cli
inc
jo
dec
mov
push
xchg
mov
add
daa
clc
inc
std
iret
adc
cmp
or
cli
inc
int3
(bad)
adc
dec
test
mov
mov
std
ret
add
dec
mov
jae
cli
inc
add
outs
mov
ins
mov
mov
add
add
mov
pop
mov
mov
add
or
je
mov
repz
cli
inc
int3
(bad)
adc
dec
cli
sub
mov
mov
sub
inc
je
retf
mov
dec
mov
mov
add
ret
cmps
sub
lds
add
daa
std
dec
nop
add
dec
ja
inc
mov
mov
std
dec
jns
loope
jg
add
cli
clc
xchg
sbb
inc
or
add
lds
mov
mov
fwait
mov
add
inc
les
mov
inc
mov
xchg
add
add
rcl
xchg
inc
std
ret
add
adc
lds
add
clc
add
nop
inc
xchg
outs
nop
inc
xchg
dec
nop
inc
jo
push
mov
std
cmps
out
jne
dec
repz
adc
std
dec
add
mov
std
into
adc
mov
add
call
cmp
js
add
add
adc
cmp
lds
movs
aam
add
ret
add
es
cmps
mov
xor
(bad)
pop
xchg
cmps
stc
inc
std
cmps
jb
std
dec
jp
xchg
mov
mov
add
xor
cmp
inc
adc
int3
inc
rol
mov
inc
mov
inc
or
jnp
inc
inc
pop
cmps
inc
std
mov
pop
mov
stc
dec
cli
inc
jo
push
mov
adc
and
mov
mov
xchg
repnz
jge
mov
inc
mov
in
mov
mov
add
int3
pop
fadd
mov
inc
jl
movs
outs
std
dec
adc
jmp
js
pop
mov
leave
dec
cli
rcl
movs
inc
std
sbb
(bad)
into
dec
cli
sub
mov
in
mov
test
jl
inc
add
pop
mov
iret
dec
cli
retf
js
pop
mov
add
adc
test
pop
ret
adc
push
stos
les
mov
sbb
mov
mov
cmc
cmps
adc
dec
jae
fwait
(bad)
scas
mov
daa
jl
inc
je
pushf
leave
test
add
jae
dec
jae
fwait
(bad)
scas
mov
cmps
cmp
dec
jae
fwait
(bad)
scas
mov
mov
cmc
idiv
mov
nop
repnz
scas
mov
lahf
cmc
imul
stos
sub
cmps
cs
dec
jae
int3
(bad)
jns
loope
cmc
aam
(bad)
mov
mov
xchg
dec
ja
in
jae
mov
dec
cli
ret
cmp
xor
cmp
jle
inc
add
test
add
mov
cmps
mov
xor
add
mov
adc
call
adc
dec
cli
leave
add
sbb
idiv
dec
cmc
imul
clc
scas
mov
or
inc
lods
cmps
(bad)
jno
dec
ja
add
daa
jle
mov
dec
adc
dec
cli
leave
cmp
add
(bad)
cmp
sti
iret
dec
cli
int
mov
push
adc
sbb
xor
dec
cli
retf
mov
xchg
adc
loop
cli
test
jg
inc
scas
sbb
lods
repnz
leave
leave
add
mov
sbb
dec
cli
ror
test
ret
sbb
retf
add
mov
inc
std
(bad)
cmp
cmp
dec
cli
leave
add
sbb
cmc
cmp
into
inc
std
int3
ds
hlt
(bad)
(bad)
bound
cli
xor
icebp
cmps
stos
jo
dec
inc
icebp
mov
(bad)
jg
sbb
jle
add
adc
mov
jo
inc
mov
js
sbb
jae
cli
inc
hlt
(bad)
mov
mov
test
mov
std
dec
jns
cmc
inc
cmp
sbb
inc
adc
add
neg
mov
cmp
jmp
and
jae
inc
push
fiadd
cmps
push
outs
std
dec
test
dec
inc
or
add
idiv
or
dec
or
lahf
add
jae
scas
daa
inc
dec
adc
int
cli
leave
and
xor
std
cmp
leave
cmp
add
adc
int3
ds
xchg
sbb
pop
leave
dec
cli
ret
cmp
add
(bad)
jg
and
and
leave
or
daa
mov
mov
scas
add
je
dec
jns
cmc
cmps
push
jae
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
retf
add
cli
inc
jle
repnz
test
cmps
inc
jae
dec
inc
dec
std
dec
cli
(bad)
mov
mov
pop
jl
inc
inc
sub
inc
std
(bad)
or
inc
sbb
pop
es
ret
sbb
ror
inc
std
int3
ds
adc
div
inc
std
dec
arpl
sbb
sbb
dec
sbb
into
dec
cli
ret
cmp
ja
or
sbb
into
dec
cli
ret
cmp
mov
test
add
ja
dec
cli
stc
test
ret
pop
dec
xchg
sbb
std
ret
sbb
sbb
inc
std
int3
ds
adc
div
inc
std
dec
arpl
and
iret
dec
cli
stc
sahf
dec
cli
inc
fs
cli
mov
movs
xchg
mov
mov
or
inc
jle
jmp
or
sbb
and
sbb
iret
dec
cli
ret
cmp
repz
dec
cli
stc
test
ret
pop
dec
xchg
sbb
std
ret
sbb
sahf
enter
ds
xchg
inc
and
inc
sbb
repnz
ds
jl
cli
adc
dec
adc
iret
dec
cli
stc
test
ret
pop
dec
xchg
sbb
std
ret
sbb
fmulp
inc
std
int3
ds
xchg
dec
and
inc
sbb
xor
inc
std
int3
ds
adc
div
inc
std
dec
arpl
and
iret
dec
cli
stc
sahf
dec
cli
inc
fs
cli
mov
movs
xchg
mov
mov
jecxz
cli
inc
jle
jmp
retf
add
cli
inc
jle
repnz
jle
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
scas
add
jb
dec
jns
cmc
(bad)
or
(bad)
cmp
mov
mov
mov
adc
inc
jle
repnz
jle
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
scas
add
jno
dec
jns
cmc
daa
loopne
mov
scas
add
jno
dec
jns
cmc
cmps
mov
dec
inc
dec
std
dec
cli
(bad)
mov
mov
or
retf
add
cli
inc
jle
repnz
out
inc
std
mov
dec
jo
cli
mov
rcl
cli
mov
mov
mov
test
jle
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
scas
add
jno
dec
jns
cmc
daa
cli
sahf
mov
scas
add
jno
dec
jns
cmc
mul
pop
std
dec
or
lahf
add
retf
div
inc
std
dec
arpl
sbb
sbb
dec
sbb
int
cli
ret
cmp
test
dec
cli
inc
fs
cmp
pop
jo
cli
mov
jmp
mov
mov
pop
jg
inc
jle
jmp
inc
cli
inc
std
(bad)
or
cmp
mov
scas
add
jo
dec
jns
cmc
daa
and
mov
scas
add
jo
dec
jns
cmc
into
or
ret
dec
cli
test
jg
inc
inc
inc
cli
inc
std
(bad)
or
cmp
mov
scas
add
jo
dec
jns
cmc
cmps
fidiv
dec
inc
dec
std
dec
cli
(bad)
mov
mov
repz
inc
inc
sub
inc
std
(bad)
or
inc
sbb
pop
es
ret
sbb
dec
retf
int3
ds
xchg
lahf
daa
add
ret
sbb
pop
retf
int3
ds
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
xchg
inc
std
dec
mov
inc
std
(bad)
jg
and
add
jg
sbb
pop
xlat
inc
std
and
and
int
dec
sbb
add
(bad)
inc
std
mov
mov
jnp
cli
inc
int3
(bad)
mov
mov
(bad)
jg
and
movs
sbb
scas
leave
sbb
push
int3
stc
dec
cli
adc
shl
leave
add
int3
pop
fadd
mov
inc
int3
mov
cli
inc
jbe
repnz
les
inc
je
outs
mov
cld
dec
cli
mov
(bad)
jg
push
mov
leave
cmp
stos
test
pusha
cli
inc
adc
daa
cli
xchg
mov
dec
cli
leave
js
pop
mov
std
ret
add
aam
std
daa
inc
dec
ja
dec
mov
mov
mov
or
cli
rcl
ds
(bad)
cmc
les
cli
inc
xchg
dec
sti
inc
std
ret
add
dec
mov
mov
arpl
leave
js
add
dec
out
pop
mov
dec
mov
mov
add
cmp
aaa
clc
inc
std
daa
pop
pushf
mov
mov
mov
std
dec
ja
dec
mov
mov
add
aam
std
cmps
dec
movs
add
add
mov
xchg
dec
ja
inc
mov
mov
std
dec
jns
loope
add
(bad)
cmp
mov
std
mov
add
cli
ret
inc
xlat
pop
mov
fwait
mov
add
add
(bad)
cmp
mov
sbb
pop
mov
js
add
add
nop
inc
xchg
dec
nop
pusha
xchg
dec
nop
inc
xchg
dec
ja
add
cli
test
fs
inc
hlt
(bad)
cmc
les
inc
add
push
mov
aam
cli
clc
xchg
jno
inc
or
add
cmc
pop
mov
mov
std
daa
xchg
mov
mov
std
dec
jns
in
mov
push
mov
inc
push
popa
jnp
lock
inc
jo
push
mov
mov
rol
(bad)
cmp
cmp
dec
cli
inc
adc
iret
jg
push
mov
inc
ja
test
pop
cmc
inc
std
dec
xchg
inc
or
gs
inc
xchg
dec
sti
inc
std
ret
add
xor
dec
jae
int3
mov
xchg
or
push
mov
dec
mov
ret
cmp
mov
jns
cli
inc
std
ret
push
mov
adc
mov
test
inc
cmp
sti
cli
inc
std
and
pop
mov
push
mov
adc
ret
add
outs
mov
sub
or
mov
add
xchg
dec
and
cli
inc
lods
daa
icebp
pushf
mov
arpl
inc
jle
out
dec
cmp
xchg
mov
inc
std
les
add
test
adc
cli
outs
mov
sub
adc
retf
add
lods
mov
add
jns
icebp
mov
sbb
jg
push
mov
leave
cmp
adc
js
pop
mov
std
ret
add
rol
and
pop
mov
std
dec
jae
aam
jae
add
pop
mov
aad
cli
retf
js
pop
mov
xor
inc
(bad)
pop
ret
adc
push
stos
les
cwde
mov
mov
test
data16
inc
je
push
mov
aam
cli
retf
test
ja
call
sub
dec
jae
scas
sbb
pop
fimul
clc
jp
cli
inc
or
cmp
inc
std
mov
dec
jo
cld
inc
scas
cmps
cli
addr16
dec
test
inc
jo
push
adc
adc
inc
adc
(bad)
cmp
add
and
rol
ret
lods
sbb
jg
dec
cli
push
adc
les
mov
mov
sbb
inc
dec
jmp
dec
lods
pop
inc
mov
ins
inc
std
dec
or
scas
add
add
push
je
sti
mov
mov
adc
xchg
mov
js
or
das
addr16
inc
xchg
dec
add
inc
or
pop
dec
mov
shl
leave
or
cmp
clc
push
adc
(bad)
cmp
push
adc
jle
not
inc
dec
shl
ror
or
cmp
add
std
movs
xchg
leave
add
inc
dec
add
and
stos
test
gs
inc
jo
push
adc
dec
cli
mov
std
cmps
out
imul
mov
cmp
xchg
mov
mov
gs
inc
jle
loop
mov
daa
mov
jne
sar
inc
std
into
cmp
add
add
dec
or
add
xchg
push
stos
lock
add
mov
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
xchg
sar
dec
cli
sub
and
jmp
mov
mov
std
cmps
jbe
std
dec
jnp
outs
es
inc
xchg
dec
lods
sub
mov
test
push
cli
test
addr16
inc
xchg
dec
lods
sub
mov
rcr
fwait
addr16
inc
xchg
dec
lods
sub
mov
ins
bound
cli
test
addr16
inc
xchg
dec
lods
sub
mov
pop
push
addr16
inc
je
retf
mov
stos
and
gs
cmps
retf
dec
nop
inc
stos
and
gs
cmps
fisubr
dec
nop
inc
stos
and
pop
add
cmps
jmp
and
pop
add
cmps
cli
push
aam
jae
xchg
dec
lods
sub
mov
jo
push
cli
test
push
lods
sub
mov
mov
push
cli
test
push
lods
sub
mov
aam
or
cli
inc
xchg
dec
lods
sub
mov
fcomp
cli
test
push
sti
mov
sbb
lods
sbb
movs
loopne
leave
add
mov
xchg
sar
inc
std
in
fcmovbe
mov
psubd
add
cli
test
push
add
inc
adc
in
(bad)
fistp
cli
sub
mov
rcr
repz
retf
mov
add
fistp
cli
jecxz
sar
add
and
gs
cmps
push
data16
dec
nop
mov
mov
dec
cli
jecxz
fistp
add
and
outs
add
cmps
cmp
dec
nop
mov
mov
dec
cli
jecxz
out
mov
add
and
gs
cmps
data16
dec
nop
mov
mov
dec
cli
jecxz
(bad)
mov
add
and
gs
cmps
and
jae
cld
mov
xchg
out
mov
inc
std
in
out
mov
psubd
add
cli
test
imul
adc
jmp
push
jb
jl
adc
dec
xchg
mov
or
adc
add
push
fwait
mov
mov
mov
cmc
sar
inc
std
dec
nop
inc
lods
cmps
xchg
data16
dec
ja
or
push
inc
je
sar
add
fistp
mov
adc
add
mov
cli
sub
dec
jp
xchg
xchg
and
fwait
mov
dec
cli
test
imul
add
and
gs
and
jno
add
cmps
sahf
adc
dec
cli
shr
xchg
call
add
dec
pop
inc
bound
cli
sub
mov
je
push
cli
sub
mov
add
push
cli
sub
cli
inc
jbe
add
mov
nop
adc
iret
stos
sub
nop
mov
add
and
cli
inc
pop
das
pop
add
and
cli
sub
and
cli
sub
and
cli
inc
xchg
dec
nop
inc
xchg
inc
nop
push
adc
(bad)
cmp
cmp
sti
push
xchg
jg
jne
sar
inc
std
and
gs
and
pop
add
and
cli
inc
xchg
sub
inc
lods
daa
xchg
fwait
mov
or
mov
std
dec
pop
cmp
or
iret
je
push
cli
sub
mov
add
push
cli
sub
daa
fld
dec
nop
cmp
dec
stos
sub
xchg
mov
add
and
cli
inc
pop
out
pop
add
and
gs
and
pop
add
and
cli
inc
xchg
out
cli
inc
std
and
cli
adc
daa
and
adc
in
neg
mov
addr16
inc
xchg
dec
add
inc
xchg
dec
add
inc
xchg
pop
xchg
cmp
dec
cli
sub
cli
inc
xchg
addr16
inc
std
dec
stos
sub
mov
add
and
cli
inc
pop
pop
gs
and
gs
and
pop
add
and
push
inc
std
dec
nop
push
xchg
dec
cli
shr
xchg
lds
or
sahf
fs
dec
pop
test
push
cli
sub
dec
xchg
add
dec
cli
adc
daa
(bad)
call
sti
inc
std
mov
test
push
cli
test
imul
xchg
dec
add
inc
xchg
dec
add
inc
xchg
arpl
inc
std
and
cli
inc
xchg
xor
stos
sub
nop
mov
add
and
cli
inc
pop
iret
pop
add
mov
add
mov
je
push
cli
sub
mov
and
cli
sub
dec
cli
inc
xchg
jae
jmp
cli
inc
xchg
dec
cli
shr
xchg
lds
or
cmp
dec
pop
ins
bound
cli
test
mov
mov
leave
sar
jne
out
mov
jnp
test
xchg
inc
std
dec
xchg
inc
std
dec
stos
sub
xchg
and
std
and
cli
inc
pop
fistp
std
into
or
sub
mov
je
push
cli
sub
mov
add
push
cli
sub
daa
jnp
std
dec
xchg
mov
jmp
dec
cli
inc
lods
daa
test
call
mov
xor
or
iret
je
push
cli
sub
mov
add
push
cli
sub
and
cli
inc
xchg
mov
inc
std
daa
cli
inc
std
pop
xchg
add
or
mov
inc
fimul
jecxz
(bad)
mov
jne
sar
jne
out
mov
mov
int3
dec
cli
inc
xchg
sub
sub
xchg
mov
add
and
cli
inc
pop
mov
add
(bad)
cmp
je
push
cli
sub
mov
add
push
cli
sub
and
cli
inc
xchg
out
cli
inc
std
daa
cli
inc
std
pop
xchg
inc
daa
or
mov
iret
fisttp
jecxz
in
mov
jne
sar
jne
out
mov
ins
cld
dec
cli
sub
inc
xchg
pop
xchg
inc
std
iret
stos
sub
nop
mov
add
daa
cli
inc
std
dec
adc
fisttp
jecxz
out
mov
jne
sar
jne
out
mov
ret
cli
sub
dec
cli
inc
xchg
pop
xchg
inc
std
iret
stos
sub
mov
add
daa
cli
inc
std
dec
adc
dec
cli
jecxz
fidivr
mov
add
fistp
call
addr16
pushf
std
dec
cli
sub
daa
cli
inc
jge
xchg
pushf
and
mov
inc
std
cmps
and
dec
pop
push
std
mov
je
push
cli
sub
mov
and
cli
sub
and
cli
inc
xchg
pop
xchg
inc
std
iret
stos
sub
nop
mov
add
daa
cli
inc
std
dec
adc
fmul
jecxz
sar
jne
sar
jne
out
mov
(bad)
dec
cli
sub
inc
xchg
push
xchg
inc
std
iret
stos
sub
xchg
mov
add
and
cli
inc
pop
xlat
pop
add
cmps
xchg
mov
fisttp
mov
(bad)
mov
ss
add
adc
in
sbb
sub
std
dec
xchg
mov
or
adc
mov
leave
cmp
push
fwait
mov
mov
jmp
mov
mov
add
fistp
cli
int
mov
in
std
into
adc
sub
mov
je
push
cli
sub
sbb
add
lods
les
adc
dec
cli
shr
xchg
mov
std
dec
cli
inc
adc
in
mov
inc
add
fistp
(bad)
retf
mov
int3
adc
daa
cli
inc
jge
xchg
mov
mov
ret
fisttp
jecxz
sar
jns
dec
nop
inc
add
fistp
mov
ins
cld
dec
cli
retf
mov
int3
adc
daa
repz
jge
xchg
pushf
and
mov
jg
dec
cli
jecxz
out
mov
inc
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
xchg
cld
dec
sub
and
out
test
outs
cli
inc
je
nop
inc
stos
and
gs
cmps
sbb
dec
nop
inc
add
fistp
call
sub
inc
std
iret
stos
sub
nop
mov
add
and
cli
inc
pop
cmps
addr16
mov
add
xchg
mov
add
dec
cli
mov
std
cmps
push
std
dec
xchg
xor
std
daa
mov
jne
sar
inc
std
iret
(bad)
rcr
cli
je
pop
nop
inc
xchg
dec
xchg
push
cld
dec
cli
mov
std
cmps
cmps
pop
std
dec
adc
nop
inc
xchg
add
inc
std
mov
test
push
cli
test
push
cli
inc
xchg
dec
add
inc
xchg
dec
add
inc
xchg
arpl
inc
std
and
sub
dec
jp
xchg
xchg
and
call
in
std
in
jp
mov
cmp
inc
xchg
dec
add
inc
xchg
dec
add
inc
xchg
arpl
inc
std
and
push
inc
std
dec
xchg
inc
std
iret
stos
sub
nop
mov
add
and
cli
inc
pop
arpl
std
cmps
xchg
mov
mov
inc
add
fistp
mov
push
xchg
into
cli
inc
std
and
cli
inc
xchg
dec
cli
inc
lods
daa
test
call
inc
pop
std
dec
pop
xor
or
add
cmp
gs
and
pop
add
and
jge
std
dec
xchg
cmp
cli
sub
dec
cli
adc
daa
and
adc
in
retf
dec
nop
inc
add
fistp
mov
push
xchg
mov
inc
std
daa
pop
inc
std
dec
nop
and
dec
cli
inc
lods
daa
jmp
call
mov
mov
push
cli
sub
mov
je
push
cli
sub
mov
add
push
cli
sub
and
cli
inc
xchg
out
cli
inc
std
daa
cli
inc
std
pop
xchg
inc
daa
or
mov
dec
jecxz
cli
jecxz
in
mov
jne
sar
jne
out
mov
movs
cld
dec
cli
sub
dec
cli
inc
xchg
push
xchg
inc
std
dec
stos
sub
xchg
and
std
and
cli
inc
pop
xor
std
and
gs
and
pop
add
and
cli
inc
xchg
mov
inc
std
and
cli
adc
daa
and
adc
in
pop
jecxz
dec
nop
inc
add
fistp
call
int
inc
std
and
cli
inc
jge
xchg
rcr
cli
sub
xchg
mov
inc
std
cmps
call
psubd
cmp
cli
mov
std
and
pop
add
and
mov
inc
jge
xchg
pushf
and
mov
inc
std
cmps
ficomp
dec
pop
push
std
mov
je
push
cli
sub
mov
and
cli
sub
and
out
sub
dec
jp
xchg
xchg
and
call
cli
test
push
cli
inc
pop
outs
gs
and
gs
and
pop
add
and
cli
inc
xchg
psubq
and
jp
xchg
lods
and
std
daa
add
adc
in
(bad)
clc
push
mov
leave
add
cmps
xor
mov
push
scas
sbb
and
dec
std
dec
nop
inc
xchg
iret
cli
inc
std
and
stc
sub
dec
cli
rol
repnz
push
cli
inc
je
jns
add
aam
dec
cli
sub
sbb
retf
in
cli
leave
mov
add
out
jecxz
std
int3
lahf
mov
stc
dec
cli
inc
jo
or
jo
push
adc
push
adc
cmp
sub
sti
mov
inc
jge
cwde
jecxz
mov
test
jbe
mov
add
push
sub
sbb
add
mov
dec
add
repnz
test
loop
mov
xchg
inc
xchg
dec
ja
add
daa
(bad)
hlt
mov
dec
jp
imul
loop
jle
cli
inc
or
cmp
sub
sti
inc
std
sbb
(bad)
lock
lock
jl
push
pop
std
dec
xchg
loop
or
add
adc
dec
cli
leave
or
cmps
adc
inc
dec
std
dec
cli
(bad)
mov
xchg
jne
add
xor
mov
mov
mov
std
dec
jp
add
push
xchg
xchg
dec
add
ret
add
loop
std
iret
xchg
or
mov
mov
or
inc
jl
mov
std
dec
jp
add
push
xchg
pop
dec
add
ret
add
in
inc
std
iret
xchg
int
mov
mov
aas
pop
cli
inc
jge
add
or
int
dec
add
jmp
dec
cli
rol
sahf
icebp
mov
mov
mov
std
dec
jae
or
add
cmp
xchg
int3
dec
add
ret
add
in
inc
std
iret
xchg
pop
(bad)
mov
mov
cmps
pop
cli
inc
jge
add
lahf
dec
or
add
add
dec
cli
rol
sti
repnz
mov
mov
std
dec
jae
aam
jae
jge
add
popa
dec
or
add
dec
jmp
xor
mov
mov
mov
std
dec
jp
add
push
xchg
sbb
std
ret
add
in
inc
std
and
mov
or
add
inc
arpl
cli
test
stos
add
add
daa
inc
icebp
mov
push
cli
test
mov
mov
std
cmps
push
pop
std
dec
jns
aad
or
add
(bad)
mov
xor
inc
(bad)
pop
adc
lock
adc
jae
aam
jae
je
lods
test
push
cli
inc
jo
cld
inc
stos
sbb
inc
adc
repz
mov
std
dec
movs
push
cmps
adc
inc
std
sbb
jl
into
dec
std
dec
test
add
cmp
int3
mov
lea
mov
or
sub
retf
add
cli
inc
adc
div
inc
std
dec
arpl
add
mov
(bad)
push
xchg
jecxz
add
ret
or
out
inc
std
iret
inc
mov
mov
inc
mov
xchg
cli
int
mov
adc
or
iret
inc
mov
mov
inc
mov
cmps
dec
or
or
out
call
mov
(bad)
push
xchg
dec
dec
add
ret
or
out
inc
std
iret
inc
mov
mov
inc
mov
pop
dec
or
or
cmp
dec
cli
rcl
rol
inc
mov
mov
inc
mov
je
or
or
sbb
dec
cli
rol
mov
xchg
add
std
ret
or
out
inc
std
iret
inc
mov
mov
dec
mov
sub
or
or
addr16
dec
or
cmp
inc
mov
mov
dec
mov
retf
dec
or
or
inc
call
mov
(bad)
push
xchg
in
add
ret
or
out
inc
std
iret
inc
mov
mov
dec
mov
mov
cli
int
mov
adc
or
scas
or
rol
mov
xchg
cmps
dec
add
ret
or
out
inc
std
iret
inc
mov
mov
dec
mov
inc
dec
or
or
shr
dec
cli
rol
mov
xchg
outs
dec
add
ret
or
out
inc
std
daa
mov
mov
mov
cld
lods
add
jae
and
xchg
xor
cli
sub
mov
mov
je
adc
push
mov
mov
inc
cmps
or
(bad)
leave
dec
cli
inc
je
retf
mov
mov
cwde
push
cli
inc
int3
xchg
nop
inc
xchg
aas
pop
add
cmps
sbb
add
jg
add
inc
jg
dec
test
jge
push
mov
jns
clc
inc
std
iret
inc
mov
repnz
std
dec
jp
add
jg
cld
dec
cli
xchg
push
mov
add
daa
iret
cdq
mov
mov
mov
std
dec
jns
icebp
test
je
and
jle
add
aam
ret
dec
inc
sub
adc
stos
cmp
std
add
mov
std
add
enter
dec
jns
popf
sar
sub
mov
add
ret
add
loop
std
into
adc
icebp
dec
cli
sub
mov
add
ret
add
mov
ds
push
push
xchg
inc
stc
dec
cli
int
mov
mov
jmp
mov
or
int
mov
mov
and
cli
int
mov
mov
jmp
inc
jo
push
mov
aaa
pop
cli
inc
jle
out
int
mov
mov
call
mov
mov
lods
ret
add
mov
add
ret
add
cmp
inc
std
int3
ds
xchg
dec
ja
add
pop
push
std
dec
nop
inc
xchg
mov
jg
add
addr16
hlt
(bad)
cmc
lds
push
mov
clc
pop
adc
je
add
out
dec
cli
mov
(bad)
jg
or
inc
mov
repnz
int
std
dec
add
mov
std
daa
pop
cwde
mov
mov
mov
std
dec
jns
in
daa
jne
mov
mov
mov
std
dec
ja
add
(bad)
push
std
dec
jae
and
imul
jge
(bad)
mov
mov
lds
retf
(bad)
mov
push
inc
add
mov
add
cmp
hlt
dec
cli
mov
add
jg
add
and
std
ret
add
in
inc
std
int3
ds
jo
push
mov
aas
pop
cli
inc
je
sub
add
dec
push
std
dec
jno
sub
xor
push
stos
and
cli
inc
je
push
mov
(bad)
dec
cli
mov
(bad)
jg
or
jg
add
cli
push
mov
in
dec
cli
int
mov
mov
out
dec
cli
int
mov
mov
or
std
inc
stos
cmps
mov
std
dec
ja
add
and
add
mov
dec
adc
out
dec
cli
adc
ret
add
dec
lods
add
add
ds
cmp
dec
pop
mov
add
pop
cli
inc
jl
cwde
adc
dec
xchg
add
pop
cli
inc
movs
cmps
push
mov
cmps
xchg
inc
std
sbb
inc
das
jmp
push
std
dec
test
inc
and
stos
sti
or
inc
xchg
fisttp
std
and
in
adc
(bad)
jg
adc
out
adc
and
cli
inc
movs
(bad)
and
(bad)
cmp
mov
push
cli
xchg
pop
addr16
(bad)
inc
std
into
or
lods
sar
inc
std
daa
add
rcr
test
pop
cli
inc
adc
pop
adc
dec
cli
leave
and
daa
inc
dec
ja
dec
mov
vpmacsswd
std
and
mov
scas
add
add
jge
mov
inc
repnz
std
dec
jns
mov
mov
xor
or
dec
add
into
cmp
ror
arpl
inc
inc
pushf
mov
in
push
jae
or
add
test
movs
(bad)
cmp
mov
add
add
test
pop
cli
inc
repnz
inc
not
mov
cli
add
mov
mov
inc
cmp
in
aaa
(bad)
sub
je
jns
pushf
(bad)
or
imul
lds
add
not
mov
jl
cmp
rcl
repnz
std
mov
adc
out
inc
std
(bad)
cmp
cmp
push
lods
add
pop
mov
pop
mov
push
mov
or
push
mov
jmp
ret
adc
dec
scas
add
cli
inc
jo
pop
lods
add
add
push
std
dec
ja
pop
mov
jle
add
cli
int
in
push
mov
in
dec
cli
leave
and
and
cli
inc
xchg
repnz
std
daa
push
mov
or
mov
inc
std
(bad)
and
(bad)
cmp
inc
sub
iret
inc
sub
cli
inc
push
sub
dec
xchg
mov
add
daa
cmp
mov
or
cli
inc
jo
shr
mov
push
cli
inc
std
mov
and
std
daa
push
mov
or
mov
inc
std
(bad)
and
(bad)
cmp
inc
lods
pop
mov
sub
cli
inc
push
sub
pop
xchg
mov
add
daa
cmp
mov
push
cli
test
pop
cli
inc
jle
mov
mov
sub
cli
inc
push
jmp
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
xchg
inc
std
dec
mov
inc
adc
(bad)
mov
inc
xchg
dec
stos
test
inc
cli
inc
cmp
inc
mov
mov
cli
adc
pop
repz
cli
int
cli
adc
mov
std
cmp
sub
ret
stos
pop
ja
dec
mov
(bad)
hlt
adc
and
stos
sub
daa
or
dec
cmps
inc
dec
std
dec
cmp
inc
std
ret
lods
ret
adc
jmp
std
ret
adc
mov
xor
mov
lods
adc
dec
scas
add
adc
repnz
cli
sub
ret
lods
and
mov
test
inc
cli
inc
inc
mov
leave
js
pop
mov
adc
(bad)
hlt
adc
ret
es
jae
cld
xchg
jae
pop
jnp
add
(bad)
mov
cmp
cmp
dec
nop
inc
adc
(bad)
mov
cwde
je
xchg
inc
or
std
cmps
push
dec
std
dec
jae
sub
dec
cli
inc
xchg
dec
adc
in
dec
cli
leave
mov
dec
cli
mov
(bad)
jg
adc
pop
mov
mov
dec
cmp
inc
std
mov
inc
je
sti
cwde
je
ja
inc
pop
adc
repnz
cli
sub
mov
je
push
cli
sub
and
cli
sub
and
xor
scas
and
std
daa
sbb
adc
in
cli
fistp
cli
inc
xchg
fisttp
std
and
out
std
dec
nop
inc
adc
int3
ds
adc
jb
inc
std
iret
mov
fisub
add
cmps
push
dec
std
dec
xchg
ds
dec
test
mov
sar
mov
cmps
dec
std
dec
nop
inc
lods
mov
in
adc
adc
add
inc
std
(bad)
and
(bad)
cmp
js
pop
mov
push
mov
xchg
hlt
mov
or
mov
inc
jge
je
add
cmp
dec
or
xchg
hlt
mov
dec
adc
mov
ror
mov
call
xchg
dec
nop
inc
xchg
or
dec
std
dec
stos
test
inc
cli
inc
jo
push
scas
add
cli
sub
cmp
nop
inc
adc
pop
adc
icebp
dec
cli
sub
daa
push
inc
std
dec
nop
inc
add
fistp
cli
stos
in
mov
dec
std
dec
jae
aam
jae
jo
push
adc
and
cli
int
stos
stos
test
inc
cli
inc
hlt
(bad)
(bad)
xchg
mov
pop
cli
adc
ror
scas
sbb
pop
inc
adc
leave
mov
or
ret
add
dec
cli
inc
add
inc
sub
dec
cli
test
rcr
std
inc
jle
dec
jge
dec
cli
inc
mov
cld
dec
cli
dec
jno
repnz
std
jb
inc
std
dec
cmc
les
cli
inc
adc
repnz
std
int3
(bad)
sub
cli
inc
repnz
cs
std
dec
xchg
mov
or
dec
add
cmps
in
add
add
mov
es
pop
mov
add
jg
add
pop
mov
sbb
test
cmp
retf
std
ret
add
mov
mov
dec
cli
dec
cmp
xchg
pop
mov
add
jno
xor
ds
mov
lds
retf
add
outs
nop
add
pop
mov
int3
and
pop
mov
add
es
sub
cli
sub
mov
add
push
cli
test
inc
cli
inc
je
sar
cdq
sti
mov
sar
dec
cli
loope
sti
mov
add
mov
add
sub
std
dec
jp
(bad)
sti
mov
mov
std
cmps
sbb
sar
add
dec
cmc
lds
xchg
hlt
mov
mov
sbb
std
inc
std
mov
add
sar
dec
js
std
inc
std
and
cli
inc
adc
std
inc
std
out
cli
fistp
repnz
icebp
dec
cli
leave
add
cmps
pop
mov
clc
dec
cli
inc
jbe
out
leave
js
add
add
cmp
jnp
fistp
std
cmp
add
cmp
jnp
jg
add
cmp
jnp
mov
(bad)
jnp
fistp
std
cmp
jnp
xor
std
cmp
jnp
out
pop
add
cmp
jnp
inc
gs
cmp
jnp
pop
gs
inc
jg
sti
dec
cli
sub
mov
push
adc
les
add
pop
add
cmp
jnp
out
pop
add
cmp
jnp
jnp
add
cmp
sub
jmp
inc
cli
inc
xchg
mov
mov
adc
into
cmp
ret
pop
xchg
pop
mov
and
jg
add
test
jg
add
cli
inc
je
retf
mov
std
dec
cli
int
mov
mov
adc
xor
std
iret
inc
mov
mov
inc
xchg
dec
xchg
adc
cmps
ret
dec
add
inc
adc
cmps
and
std
dec
jo
add
or
lss
xor
cli
inc
repnz
std
dec
xchg
mov
js
add
add
add
inc
adc
ret
add
mov
xor
(bad)
push
nop
inc
xchg
adc
add
ret
add
push
dec
shl
sub
and
mov
out
test
add
cmps
cmps
dec
std
dec
adc
xchg
inc
or
add
lds
mov
mov
add
and
std
ret
add
test
ds
xchg
mov
inc
std
ret
add
out
mov
dec
cli
rol
mov
xchg
dec
nop
inc
xchg
inc
and
std
and
cli
inc
add
aad
dec
adc
sbb
inc
jo
pop
mov
add
jp
cld
dec
(bad)
mov
frstor
sbb
inc
adc
mov
pop
push
inc
cli
inc
adc
inc
mov
add
cmc
idiv
add
add
jle
add
xchg
test
dec
nop
inc
xchg
test
add
and
cli
inc
add
aad
dec
adc
hlt
dec
cli
test
jge
push
mov
js
add
add
xor
or
dec
cli
int
mov
mov
or
add
cwde
mov
mov
mov
std
dec
jns
in
daa
add
lds
mov
mov
pop
or
cli
inc
jge
pop
mov
frstor
cmp
inc
adc
mov
rcr
add
inc
adc
stc
inc
std
ret
add
or
rcl
or
out
cli
inc
jle
jmp
retf
add
gs
cmps
jle
std
dec
jp
add
fisubr
std
and
mov
scas
cmc
dec
cli
mov
std
cmps
dec
std
dec
adc
dec
ror
fild
ret
add
or
pop
cwde
mov
mov
dec
inc
cli
inc
jle
jmp
retf
add
gs
cmps
out
std
dec
jp
add
fisubr
std
and
mov
(bad)
cmc
dec
cli
mov
std
cmps
into
dec
std
dec
adc
dec
cli
int
mov
mov
mov
cmp
ret
add
dec
nop
inc
xchg
arpl
test
inc
cli
inc
add
fistp
cli
test
cmp
add
rol
push
mov
mov
add
(bad)
jl
xor
sub
and
mov
push
cmc
dec
cli
mov
std
cmps
cmp
dec
adc
dec
sar
mov
push
mov
mov
jl
add
dec
ja
add
jg
add
and
std
ret
add
repz
std
int3
ds
xchg
mov
inc
std
ret
add
fcmovu
mov
dec
cli
rol
mov
xchg
dec
nop
inc
xchg
pop
sub
test
dec
cli
inc
add
fistp
cli
test
cmp
add
rol
pop
mov
mov
add
(bad)
jl
xor
sub
and
mov
sbb
dec
cli
mov
std
cmps
repnz
std
dec
adc
dec
cli
sar
mov
add
add
inc
mov
add
add
xor
adc
int
mov
mov
or
add
cwde
mov
mov
mov
std
dec
jns
in
not
or
dec
or
mov
sbb
nop
inc
xchg
dec
nop
inc
xchg
dec
nop
inc
xchg
dec
cli
inc
mov
dec
adc
clc
dec
cli
leave
js
add
add
cli
mov
add
jp
(bad)
sti
mov
int
jg
add
int3
xor
std
cmp
leave
ds
pop
mov
int
mov
mov
clc
dec
cli
sub
ret
add
xchg
mov
or
add
add
ja
or
add
add
sti
inc
mov
push
mov
jo
or
dec
mov
jp
std
dec
nop
inc
jo
push
mov
jmp
or
or
sub
inc
std
mov
mov
mov
test
dec
cli
inc
add
loopne
dec
adc
sti
dec
cli
sub
and
cli
sub
daa
cli
inc
std
setb
psubd
je
or
int3
mov
xchg
dec
add
mov
std
ret
pop
or
mov
xor
std
ret
add
push
mov
mov
mov
std
and
pop
mov
xchg
mov
dec
mov
mov
test
dec
cli
inc
je
retf
mov
or
sub
inc
std
mov
sub
or
cli
sub
and
mov
add
daa
stos
hlt
mov
dec
jp
pop
ret
add
sub
mov
dec
bound
cli
test
dec
cli
inc
je
retf
mov
add
out
mov
icebp
mov
dec
adc
adc
test
pop
ret
adc
push
stos
les
mov
(bad)
cmp
inc
cld
dec
cli
dec
js
cli
inc
std
int3
xchg
inc
jg
std
dec
cli
jnp
retf
pop
add
cmp
mov
std
cmps
pop
inc
std
dec
jnp
push
or
inc
(bad)
jp
fnstsw
jp
mov
dec
cli
jnp
iret
pop
add
cmp
mov
std
cmps
mov
shl
mov
jne
fidivr
inc
std
je
pop
push
mov
push
mov
cli
inc
je
or
leave
cmp
bound
cli
xor
bound
cli
test
dec
cli
inc
(bad)
jp
fistp
mov
mov
mov
test
push
cli
test
dec
cli
inc
(bad)
jp
fistp
mov
mov
mov
les
test
dec
cli
inc
push
inc
inc
cmc
icebp
dec
cli
mov
(bad)
mov
fwait
(bad)
jp
fnstsw
fcmovbe
mov
out
mov
pop
rcl
inc
je
sar
rcl
mov
pop
fnop
mov
aad
dec
pop
push
cli
sar
sar
pop
test
mov
fistp
(bad)
fnstcw
out
mov
pop
loope
mov
push
add
out
mov
icebp
sbb
inc
push
dec
jae
aam
jae
mov
pop
cli
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
scas
leave
sbb
lods
test
dec
cli
inc
je
jp
fistp
fldcw
ffreep
add
lods
cmps
stos
inc
std
dec
jns
cmc
(bad)
mov
imul
jg
cmp
stos
loope
cmc
(bad)
cli
inc
cmp
int3
add
mov
inc
inc
hlt
(bad)
mov
mov
xor
and
cli
inc
xchg
dec
lods
sub
pop
adc
adc
mov
inc
std
(bad)
cli
push
std
dec
jg
fnstenv
push
std
dec
mov
fnstenv
jno
fld
add
add
add
mov
jno
fld
retf
sub
xchg
jbe
fiadd
cli
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
add
inc
ins
(bad)
inc
std
dec
