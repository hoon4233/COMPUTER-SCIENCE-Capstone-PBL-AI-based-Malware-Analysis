push
inc
or
je
push
call
add
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
lea
mov
push
lea
call
add
push
lea
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
push
mov
push
lea
push
mov
mov
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
call
mov
lea
mov
call
mov
mov
lea
mov
mov
call
xor
mov
lea
mov
mov
call
or
mov
mov
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
call
mov
mov
xor
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
lea
mov
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
lea
mov
call
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
mov
mov
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
lea
call
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
mov
call
mov
mov
call
mov
call
mov
push
call
mov
movzx
push
push
lea
call
mov
lea
mov
mov
call
mov
lea
mov
call
mov
lea
push
mov
call
mov
push
mov
call
mov
mov
add
or
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
mov
mov
lea
mov
mov
call
mov
mov
lea
mov
mov
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
mov
call
mov
push
call
mov
call
test
je
push
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
mov
sub
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
pop
test
jmp
push
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
push
push
mov
call
mov
call
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
cmp
je
lea
call
test
je
lea
call
test
jne
lea
call
test
je
lea
call
test
jne
lea
call
test
jne
lea
push
lea
call
mov
mov
mov
call
test
je
mov
jmp
xor
mov
test
je
and
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
pop
je
call
mov
mov
mov
push
mov
call
jmp
call
mov
mov
mov
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
push
call
mov
call
test
je
call
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
mov
push
mov
mov
mov
lea
mov
add
test
jne
sub
push
push
mov
call
pop
mov
pop
pop
ret
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
push
mov
cmp
je
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
cmp
mov
jne
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
mov
call
mov
lea
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
push
mov
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
mov
mov
mov
push
lea
mov
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
mov
push
lea
mov
call
mov
mov
push
lea
call
mov
mov
pop
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
mov
call
mov
mov
mov
mov
push
push
push
lea
call
lea
push
mov
call
mov
push
push
lea
call
mov
push
push
lea
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
call
mov
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
xor
cmp
je
push
call
add
mov
call
mov
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
lea
call
mov
mov
cmp
mov
je
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
lea
in
dec
mov
ins
xor
cmp
lds
rep
shl
jl
pop
jge
test
mov
int3
in
(bad)
std
ins
gs
sbb
aad
inc
adc
mov
stos
push
mov
push
addr16
dec
push
mov
imul
jge
div
add
xchg
int3
cmps
ins
hlt
mov
add
sub
in
jnp
sub
lods
mov
idiv
or
test
sub
cmp
dec
pop
mov
jl
adc
scas
push
lods
ss
xchg
jge
(bad)
retf
mov
jecxz
or
pop
pop
mov
jne
fld
rol
clc
rcr
loopne
pop
sbb
sbb
ins
xchg
ror
mov
fsubr
xchg
std
in
sbb
or
push
ja
mov
cmp
fbld
icebp
cld
add
sbb
retf
jns
or
popf
retf
scas
mov
cmp
pop
popf
mov
mov
jl
bound
je
inc
(bad)
xchg
fstp
cmps
adc
repz
jns
lods
ret
js
pusha
sbb
push
std
cmp
std
mov
fwait
jmp
xchg
fwait
int3
inc
inc
enter
test
dec
jl
pop
dec
push
ins
pop
rol
mov
fsub
sub
out
lahf
lods
mov
mov
std
fcmove
cmp
push
sub
outs
lea
or
sub
cld
cdq
inc
mov
in
jbe
sub
sub
movs
repz
ins
sti
jge
or
(bad)
mov
(bad)
lock
or
cmps
bound
rcr
pushf
pop
or
scas
add
mov
cmps
inc
icebp
scas
cmp
cmp
jl
and
js
dec
cmc
jg
fsub
mov
stc
in
xor
rol
jns
das
sahf
pop
inc
cmp
cld
push
or
popf
in
je
out
rcr
cld
pop
sub
push
pop
out
dec
jg
icebp
xchg
(bad)
in
inc
outs
fimul
loope
cld
cld
popa
leave
std
in
in
mov
dec
sbb
ins
leave
(bad)
adc
ins
push
sahf
ds
test
fdivr
(bad)
or
sbb
daa
dec
mov
cmp
add
jmp
aas
js
mov
(bad)
xchg
push
mov
test
stc
xchg
xchg
sbb
std
inc
test
sub
or
jae
add
sub
mov
jle
pop
jge
stos
jnp
mov
jnp
shr
mov
adc
test
fsubr
mov
int
std
fxch
or
std
push
or
daa
mov
or
test
push
inc
dec
mov
xchg
je
jmp
cmp
in
fistp
dec
lods
das
jb
or
dec
mov
cmp
cwde
fucom
mov
and
je
out
mov
push
mov
out
sbb
sbb
pop
dec
mov
sub
fdivr
pop
and
cmp
cmp
les
or
xchg
ror
xor
xchg
std
sbb
dec
or
scas
cmps
adc
xor
retf
out
je
scas
mov
test
cmp
mov
xor
dec
mov
mov
in
lds
repnz
and
jmp
les
inc
inc
call
daa
xchg
cmp
push
jl
or
push
pop
shl
sub
cs
outs
dec
mov
push
mov
mov
adc
push
jnp
int3
xor
jl
mov
mov
inc
or
in
mov
icebp
in
cmp
xor
xchg
sbb
out
call
hlt
in
mov
and
pop
rcr
vpaddusb
lea
test
imul
cmc
ret
mov
mov
adc
jmp
xchg
cmp
dec
ins
push
jmp
and
pushf
ja
xchg
dec
and
ds
xor
sub
dec
scas
aam
mov
(bad)
int3
imul
dec
neg
mov
mov
sbb
into
xor
aas
lods
pushf
mov
ins
icebp
sbb
outs
xor
mov
std
or
mov
movd
aas
sbb
push
adc
or
fdivp
jne
push
pop
ins
pop
fmulp
nop
xchg
ds
jecxz
ss
push
inc
pop
mov
imul
pop
rcl
in
push
sar
cmp
dec
mov
sbb
jno
mov
ja
loope
or
sbb
mov
test
dec
push
sub
fwait
dec
pop
fs
jb
mov
jno
test
push
stos
sub
jp
cwde
xchg
pop
cmp
pop
cmp
push
js
and
mov
pop
ins
adc
mov
lahf
fsub
popf
dec
xchg
mov
mov
test
dec
test
adc
test
and
jae
jb
ss
sahf
cmp
mov
into
cmp
sbb
inc
push
cmp
pop
mov
adc
cld
into
std
or
xchg
adc
std
mov
mov
and
adc
pushf
imul
ins
leave
inc
lds
mov
and
aad
mov
mov
dec
jno
push
mov
movs
fwait
cmp
xor
or
sbb
adc
ss
push
stos
out
sub
push
fs
cld
aad
add
jl
fistp
xor
sub
test
push
push
sub
or
loop
or
int3
ins
mov
xchg
or
vmread
aad
dec
mov
std
dec
fidivr
jl
jbe
pop
sbb
dec
lea
loope
pop
lea
xchg
cmp
pop
ins
int3
adc
cmc
jmp
imul
lahf
mov
xor
mov
or
popa
jne
jno
lods
sbb
push
mov
mov
loopne
hlt
mov
sub
pop
or
stc
in
or
in
sbb
jmp
adc
or
imul
fs
lods
sub
inc
icebp
adc
das
add
or
cmc
ds
shl
pushf
(bad)
loop
neg
pop
cs
mov
sub
jnp
cld
stos
rcr
jae
in
adc
test
or
loop
into
mov
loop
in
std
iret
cmp
jb
add
test
mov
loope
lock
mov
dec
cmp
pop
psubb
loop
fild
cmp
leave
lds
out
pop
stc
nop
neg
das
adc
or
xor
test
fimul
mov
call
repz
and
and
sub
outs
std
pop
push
nop
gs
and
pop
dec
gs
fstp
adc
pop
jle
lods
inc
cs
ret
adc
sbb
mov
jp
or
pop
enter
mov
popa
int
loopne
aad
cld
mov
lock
mov
cld
fidivr
push
cld
std
lods
and
add
js
mov
add
mov
arpl
test
in
pop
nop
ret
dec
gs
fisubr
dec
pop
fs
call
cmc
fcmovnu
xchg
lock
mov
adc
je
imul
add
dec
jae
cmc
pop
jmp
mov
sbb
test
mov
cld
jne
cmp
mov
sbb
fmul
mov
in
push
jne
fs
jge
and
cmp
pop
in
and
sub
fst
in
rol
dec
mov
mov
lods
scas
pop
jl
sub
adc
xlat
pop
out
lods
mov
lea
dec
jle
shr
pop
popf
mov
push
cmp
in
jae
xchg
xchg
mov
fsub
mov
in
mov
maxps
imul
pop
cs
dec
movs
push
pop
sub
sbb
mov
lahf
jnp
jmp
mov
jl
inc
xchg
jns
icebp
mov
pop
(bad)
jmp
popf
fild
mov
pusha
fadd
add
jns
xchg
mov
shl
into
cmp
pop
dec
mov
cmp
jge
movs
ins
lea
pop
mov
popf
(bad)
aad
mov
fsub
les
les
ins
pushw
jl
out
mov
pop
pop
scas
pushf
test
or
ret
mov
lahf
dec
cmp
movs
push
sub
cmp
cmps
cmp
ins
mov
jae
sar
ins
das
das
cmp
push
outs
stos
or
push
je
mov
repz
cld
dec
push
arpl
out
sub
ret
sbb
pop
jns
movs
scas
push
push
out
cs
mov
cmps
iret
mov
std
sbb
lods
push
and
jl
(bad)
fldcw
movs
test
call
mov
js
(bad)
lods
(bad)
jnp
sub
lock
mov
lods
out
inc
xchg
fldenv
jecxz
pop
xchg
out
sub
add
hlt
fistp
mov
movs
popf
add
push
outs
sub
sub
mov
neg
xor
cli
cmp
outs
sub
repz
aam
pop
push
imul
or
ins
cmps
mov
ins
inc
sub
stc
cld
fistp
mov
clc
sub
aas
cmp
(bad)
pop
push
xchg
pusha
mov
dec
mov
fnsave
gs
mov
scas
mov
ror
dec
leave
add
jmp
aas
lahf
int3
das
mov
scas
retf
or
sub
in
inc
pop
pop
pop
outs
pop
and
scas
mov
fld
aas
rol
jnp
pop
mov
sbb
sahf
test
inc
in
inc
or
xchg
mov
int
inc
pushf
enter
rol
lgs
test
mov
sbb
fdiv
mov
in
enter
aaa
jnp
js
in
push
dec
mov
arpl
fucom
push
sbb
sub
ja
in
pushf
adc
(bad)
std
sbb
dec
mov
leave
mov
cmps
push
xor
call
lods
push
ds
iret
lods
iret
pusha
mov
or
outs
xchg
inc
inc
dec
dec
in
scas
dec
icebp
dec
cwde
jno
rcr
pop
sbb
pop
sahf
std
int3
pop
jb
enter
movs
aas
pop
dec
xchg
jae
dec
jns
inc
ins
rol
xchg
fwait
mov
push
(bad)
fstp
gs
cmp
fmul
or
ins
pop
in
dec
fld
xchg
test
sbb
aas
jmp
pushf
xor
jbe
inc
dec
dec
cs
imul
dec
pop
(bad)
movs
mov
ins
arpl
hlt
mov
call
inc
mov
pop
loop
loop
fsub
arpl
nop
push
stos
lahf
mov
jmp
push
les
push
or
out
das
push
mov
pop
mov
scas
lods
sbb
stos
jl
cs
ins
push
xor
sbb
cmp
pop
test
aam
repnz
xor
test
pop
and
int3
outs
pushf
xchg
ror
cmp
emms
sub
and
sbb
mov
push
adc
jge
push
jmp
dec
push
ja
sub
push
jne
cmp
fsubr
sbb
xor
aas
int
and
and
cmps
or
adc
das
lods
lods
movs
cld
or
loop
jmp
dec
inc
pop
sub
sub
mov
stos
(bad)
int3
in
in
mov
cli
push
jo
add
ds
retf
js
fisttp
dec
call
or
sub
enter
or
test
aas
mov
pop
jns
dec
push
and
popf
mov
out
sbb
xor
out
ror
mov
xchg
pusha
push
imul
inc
sbb
inc
out
sub
xor
jns
sbb
xchg
in
pop
mov
mov
(bad)
(bad)
aad
sbb
dec
int
add
lock
sub
call
and
and
jge
cmp
inc
sub
add
rol
pop
dec
(bad)
dec
scas
out
dec
or
nop
inc
aaa
cwde
clc
mov
xor
mov
xor
jmp
fs
aaa
stos
inc
popf
cmc
jl
iret
sub
in
cmp
dec
call
cld
test
call
(bad)
addr16
push
xchg
mov
sbb
(bad)
jl
fsubr
mov
pop
in
and
cmps
retf
scas
imul
cmc
bound
out
pop
in
pop
jne
test
xchg
pushf
fstp
ror
or
push
mov
(bad)
scas
or
jge
dec
fdiv
popf
fidivr
pop
cld
test
sbb
cmp
pop
int
push
dec
sahf
add
pop
repnz
xor
aam
mov
pop
mov
out
and
arpl
mov
ins
add
dec
and
aas
rcr
pop
daa
lock
push
xlat
int3
jmp
lods
cmp
std
mov
dec
cmc
mov
int
repz
pop
pop
pop
fcomp
sbb
int3
sbb
mov
stos
mov
mov
int3
data16
in
sbb
push
sbb
pop
js
sbb
xchg
ret
loope
jge
push
data16
sbb
inc
in
and
cmp
inc
cmp
arpl
cmp
and
pop
(bad)
cld
fdivr
les
mov
and
pop
repz
and
inc
add
jmp
pop
ins
out
std
xchg
dec
pop
cmp
fisttp
mov
mov
fnstsw
push
add
push
fs
push
push
mov
clc
xor
inc
sbb
cld
sub
sbb
dec
ret
jg
mov
mov
icebp
xchg
loope
out
pushf
loope
cwde
sbb
mov
arpl
popf
stos
dec
mov
lock
xchg
xchg
loopne
mov
xor
pop
sbb
jl
in
dec
cmp
pop
or
mov
mov
nop
or
push
jo
pop
jg
xchg
xchg
jge
and
cmp
inc
jge
retf
jmp
adc
jbe
sar
jo
jge
sub
cdq
add
popf
into
xchg
popa
and
out
pop
mov
(bad)
lods
sbb
mov
(bad)
xor
xchg
cmp
jge
shr
dec
push
stc
jg
pop
adc
mov
adc
adc
ror
sar
xor
and
pushf
cmp
test
je
(bad)
inc
leave
mov
sub
xor
mov
clc
push
add
popf
mov
cdq
pop
cmps
pop
jl
dec
test
mov
les
in
fistp
sub
xor
outs
pushf
cld
pop
xor
cdq
jmp
cli
cmc
lea
stc
sbb
call
idiv
imul
mov
fbld
fs
and
add
pop
out
jle
pushf
push
mov
call
out
push
dec
adc
adc
les
rcr
dec
movs
ins
dec
push
mov
ins
mov
scas
mov
cmps
xchg
fmul
stos
aaa
bound
adc
sub
inc
je
sbb
inc
or
pop
ins
adc
jecxz
mov
sbb
movs
xor
outs
scas
mov
and
dec
shrd
xchg
mov
inc
mov
int
sub
xchg
xor
icebp
jle
pop
mov
sub
sahf
in
or
push
jge
popf
rcl
fimul
lea
sub
cmp
mov
adc
lock
fs
xchg
(bad)
fmul
in
test
mov
pop
mov
push
push
in
aad
pushf
clc
dec
pusha
jge
(bad)
(bad)
sbb
pop
adc
cld
pop
pusha
pop
std
pop
hlt
lock
pop
mov
mov
dec
dec
inc
mov
mov
and
stos
popf
out
sub
popf
add
jl
sub
cmp
popf
push
std
pop
cs
jns
or
dec
or
int
mov
xor
ins
or
repz
mov
jle
in
jne
cmps
lods
cmp
sbb
mov
mov
(bad)
jl
jge
jge
or
mov
scas
sub
adc
jp
aam
jns
mov
ins
xor
fldcw
xchg
call
rol
push
xchg
cld
mov
scas
dec
push
jo
pop
pop
int3
mov
inc
movs
sbb
sub
push
sub
pop
push
pushf
nop
test
movs
jge
xchg
scas
lea
adc
mov
or
movs
pop
scas
dec
hlt
or
std
inc
pop
shl
cli
push
pop
pop
in
lock
xchg
enter
std
cmp
cmp
ficomp
mov
sbb
pop
inc
mov
mov
repnz
je
xchg
jl
and
mov
add
inc
pop
dec
push
cmp
out
ins
(bad)
popf
inc
push
pop
sti
xor
aad
pop
push
adc
cmp
inc
sbb
mov
mov
test
arpl
mov
mov
jmp
jg
in
push
jmp
or
daa
pushf
xchg
sbb
or
or
or
inc
and
jb
scas
call
jl
(bad)
fst
push
std
pop
jns
xor
ds
xor
sbb
inc
aas
mov
pop
in
out
int
dec
ret
or
adc
push
jge
push
cld
imul
test
cmc
fnsave
adc
add
mov
pop
mov
loop
push
lahf
mov
add
jno
cli
in
adc
sete
jmp
sar
enter
pop
mov
push
jmp
hlt
call
mov
adc
iret
xor
fbld
mov
mov
mov
jb
dec
sbb
aad
rcl
movs
adc
dec
popa
adc
mov
cdq
mov
mov
retf
scas
xchg
popf
retf
fisttp
or
cmp
jp
dec
dec
sbb
pushf
cs
dec
add
sar
cwde
int3
int3
dec
pushf
lea
adc
test
sbb
pop
pop
or
cli
mov
pop
imul
(bad)
add
cmp
adc
pop
dec
out
mov
sbb
or
out
fcomp
cs
je
pop
pop
adc
imul
ror
pop
mov
mov
xor
leave
mov
sub
stc
in
mov
pushf
test
cdq
in
add
ret
cli
out
retf
pop
mov
sbb
cmps
cdq
jle
adc
push
and
or
lds
mov
fstp
mov
cld
push
int3
popf
and
and
int3
leave
fcomp
cmp
jns
sbb
sub
mov
bound
dec
aas
(bad)
sub
pop
xchg
mov
imul
adc
pop
pop
cmps
ins
sub
clc
sub
in
je
cmp
dec
out
mov
jp
neg
mov
dec
mov
out
sbb
or
sbb
hlt
out
int
int
sbb
fs
sbb
and
mov
mov
mov
inc
int3
jle
int3
aad
push
dec
in
(bad)
xchg
(bad)
pop
cwde
push
push
mov
(bad)
cld
jno
retf
and
mov
pop
xchg
adc
call
and
xchg
mov
into
jmp
mov
xchg
in
push
sbb
push
js
mov
pop
imul
jae
notrack
xchg
aam
add
xor
inc
dec
sub
cdq
xchg
int
pop
fimul
jmp
jecxz
sbb
xor
dec
cmp
fbld
sub
nop
sub
jbe
and
movs
adc
loopne
lods
inc
inc
out
mov
rcr
loop
iret
or
cld
add
lods
ins
leave
jl
inc
cdq
sbb
or
sub
push
gs
mov
pusha
pop
jecxz
retf
xchg
gs
add
or
sub
scas
xchg
xor
mov
popf
repnz
cmp
xor
sub
mov
add
cld
sbb
adc
out
or
lods
leave
ins
sub
dec
sub
xor
pop
enter
inc
and
xchg
scas
test
pop
mov
or
or
xorps
jge
cmp
loop
fcom
mov
shl
mov
icebp
ret
mov
std
fistp
pop
cld
fucomip
mov
xchg
outs
sbb
mov
push
sbb
xor
mov
push
in
ret
iret
mov
pusha
cs
mov
test
sti
fbld
mov
pushf
mov
int
push
in
pop
scas
xor
sub
dec
xchg
jge
lea
cmp
(bad)
jle
icebp
and
popf
daa
or
jae
shr
jge
ss
popf
and
xchg
cmp
dec
call
cmp
lds
jb
add
mov
hlt
outs
movs
cwde
mov
int3
mov
loope
in
ror
jmp
cmp
inc
sbb
mov
retf
sti
pop
dec
out
lods
pop
std
push
mov
mov
mov
and
push
movs
pusha
pop
jmp
pop
int3
push
shl
ds
ins
nop
xchg
mov
jno
int3
in
push
in
(bad)
popf
das
in
pop
dec
or
pop
jbe
rep
cmp
sti
and
frstor
(bad)
jmp
inc
arpl
inc
xor
pop
sbb
xchg
lods
mov
or
int
ins
or
inc
or
sbb
ins
sar
rcr
es
(bad)
push
dec
int
icebp
dec
push
jl
jge
lods
or
mov
push
sub
ret
jg
scas
mov
je
ins
aad
(bad)
lock
outs
std
and
push
xchg
jge
mov
jnp
and
push
(bad)
cmc
jmp
pushf
xchg
mov
mov
fdivr
loop
sahf
mov
adc
or
sub
xor
jmp
sub
fnstsw
mov
pusha
iret
retf
sti
std
adc
cmp
aas
jge
mov
dec
or
(bad)
mov
std
cs
repnz
int
(bad)
neg
imul
or
sbb
ins
jg
sbb
push
and
int
jecxz
imul
ins
fldenv
mov
push
mov
or
jae
and
jge
popf
or
mov
(bad)
sahf
movs
inc
mov
or
aas
mov
int3
dec
mov
push
in
pusha
inc
dec
add
sbb
div
cmp
loop
mov
jle
test
loop
aam
or
xlat
scas
mov
jecxz
cmp
mov
and
movs
xor
fmul
jae
xchg
popa
cmp
popf
repz
adc
popf
mov
inc
das
lock
or
or
lods
pop
ret
aam
inc
idiv
addr16
js
or
outs
inc
fmul
enter
add
lea
test
jl
adc
mov
add
idiv
fild
jns
mov
and
ins
gs
sbb
test
sub
inc
mov
jg
pop
mov
ss
ds
dec
std
mov
and
scas
mov
std
pop
mov
sbb
mov
js
pop
jl
mov
jmp
into
movs
jp
lods
stc
mov
loopne
inc
mov
mov
imul
mov
inc
mov
push
daa
sbb
fdiv
mov
pop
inc
jb
inc
mov
mov
or
inc
jge
clc
sub
mov
jl
jg
pop
sar
inc
mov
(bad)
push
xlat
std
and
add
fimul
pop
pop
imul
rcl
jl
movs
out
jnp
imul
push
jge
mov
jno
out
repz
ds
add
cld
xchg
pop
sbb
inc
xchg
and
repz
cmps
loop
int
retf
mov
sub
sbb
fucomip
arpl
(bad)
sbb
sub
mov
push
cld
rol
cmp
faddp
cs
das
jne
inc
pop
push
and
xchg
mov
jecxz
ins
add
mov
cmp
or
mov
dec
fistp
mov
(bad)
xor
int
ja
sub
xchg
pop
hlt
xor
sub
movs
dec
mov
sub
(bad)
stc
jno
pop
rcr
inc
jl
dec
cld
lods
pop
add
(bad)
or
dec
cmp
fst
mov
js
add
retf
enter
jmp
jl
sub
and
sbb
sub
stos
mov
popf
in
mov
stos
jmp
mov
sub
scas
push
cmp
das
mov
or
ficom
xchg
in
xor
mov
inc
outs
call
cmp
int3
mov
cld
popf
iret
sub
mov
pusha
sub
or
fstp
jnp
shr
sub
mov
(bad)
fs
sub
adc
jno
and
xlat
dec
cmps
stos
movs
(bad)
mov
retf
xor
fsub
(bad)
adc
sub
pushf
cwde
xchg
jl
jl
scas
sbb
int3
mov
mov
sti
in
adc
pushf
sub
sub
mov
jns
mov
push
push
mov
push
fcom
adc
stos
sub
push
mov
ins
jae
push
in
mov
add
out
dec
popf
int
push
ins
dec
movs
pop
and
neg
sbb
imul
outs
add
mov
jae
mov
pop
aad
cmps
push
push
mov
dec
pop
(bad)
fsub
je
scas
cs
retf
dec
adc
dec
adc
mov
or
jne
das
mov
cs
lods
and
sbb
jge
mov
ja
pop
sahf
mov
sub
xor
cld
inc
scas
sbb
imul
movzx
pop
test
ss
add
or
scas
aaa
es
jno
out
jno
in
add
pop
stos
xor
stos
xchg
scas
test
push
mov
or
ret
pushf
pop
pop
dec
mov
push
std
cmp
fnstcw
jne
mov
into
ins
push
pop
mov
sbb
or
sub
hlt
pop
pop
shr
les
fnsave
and
cmp
or
dec
setns
pop
paddsb
popf
dec
sub
pop
mov
lea
lea
sub
or
les
leave
lods
ss
sbb
gs
push
or
je
push
xchg
and
xor
lods
jmp
ffree
add
cmp
out
sar
or
test
lahf
cmp
cmc
(bad)
in
jl
lea
xlat
cmp
mov
dec
js
mov
adc
mov
jns
xchg
mov
xchg
in
ret
inc
pop
xchg
repz
lods
xchg
mov
shr
fidivr
mov
(bad)
das
(bad)
push
pushf
aaa
push
hlt
dec
fimul
test
out
dec
mov
je
lods
repz
add
push
cmp
pop
or
cmp
sbb
add
cmp
fbstp
push
aaa
ins
std
mov
in
es
out
jecxz
inc
jns
ins
sti
or
pop
jle
add
pop
test
scas
std
scas
sub
dec
xor
fisub
push
(bad)
aam
adc
sbb
xor
mov
mov
xor
enter
fist
and
xchg
adc
xor
xor
mov
jge
div
or
and
ins
(bad)
cld
ins
mov
ins
adc
retf
popf
xchg
(bad)
fsubrp
ds
or
std
adc
jge
push
jp
icebp
fld
ficom
cdq
sbb
and
add
in
mov
mov
rol
out
and
test
(bad)
daa
sbb
add
xor
adc
rol
jg
jns
pop
or
clc
xchg
fnsave
pushf
xchg
sub
mov
ret
mov
or
adc
cdq
test
sbb
sub
std
xchg
jne
inc
arpl
aaa
jp
mov
sub
out
lahf
test
sbb
sub
push
out
cmp
iret
mov
mov
adc
or
or
fisubr
or
in
dec
enter
mov
jns
imul
int
int
fmul
psadbw
inc
pop
push
gs
jge
pop
jle
sbb
or
add
mov
inc
in
xor
dec
js
inc
jecxz
xchg
ss
pop
pop
aam
rcl
and
movs
ins
in
inc
jle
dec
int
sbb
pop
lahf
lea
jge
(bad)
int
out
outs
or
ja
mov
into
pop
jg
push
stos
push
mov
js
ins
pushf
xchg
in
xchg
or
sub
(bad)
mov
or
in
pushf
mov
inc
fisubr
clc
out
lods
dec
sbb
call
in
sbb
sub
loope
mov
cld
imul
push
fldenv
sub
sbb
loope
jbe
sbb
and
in
repnz
add
xchg
(bad)
test
in
jle
mov
mov
repnz
test
inc
or
test
(bad)
xchg
xchg
add
dec
sahf
lods
lahf
jmp
or
push
and
xor
jl
repnz
dec
dec
jge
ds
pop
popf
mov
mov
test
std
push
(bad)
fdivr
test
popa
outs
jbe
ins
in
sti
cmp
mul
mov
xchg
js
shr
in
add
inc
rol
mov
stos
int
test
or
sbb
outs
cmp
pop
fbld
(bad)
cmp
push
cmp
lods
fldcw
and
sbb
aaa
mov
pop
jmp
jmp
call
movs
mov
and
pop
pop
pop
jge
adc
addr16
hlt
push
xlat
mov
sbb
xchg
out
bound
cmc
enter
cmp
sbb
jno
or
outs
add
pop
inc
pop
test
pcmpgtb
fadd
mov
jg
js
adc
jg
js
inc
sub
daa
mov
call
loopne
(bad)
pushf
fdivp
iret
call
(bad)
loope
dec
sbb
adc
and
fst
cmp
push
jo
mov
sbb
jl
fisttp
lock
pushw
fdiv
inc
and
cmp
sahf
pushf
mov
jae
aam
(bad)
sbb
inc
sub
jns
aas
mov
cmp
mov
ret
jbe
iret
scas
push
sbb
sub
shl
(bad)
cld
leave
je
out
fsub
lock
stos
pop
mov
adc
lea
(bad)
enter
test
cld
xchg
push
jns
out
in
out
movs
cmc
mov
scas
push
stos
out
or
sub
dec
push
sbb
shl
push
call
jp
adc
mul
sbb
dec
dec
jns
mov
inc
xor
sahf
mov
lahf
sub
add
add
mov
sbb
pop
test
mov
scas
jle
ret
test
leave
cld
dec
(bad)
cld
push
and
push
cmp
cld
or
pushf
mov
fidiv
mov
sub
push
in
add
ja
loopne
lods
sub
jnp
ins
cmp
int
iret
mov
jb
clc
in
jge
jl
xor
mov
int
or
test
lahf
je
lods
mov
jns
les
leave
cmps
cs
add
call
ins
inc
popf
mov
mov
data16
call
mov
inc
or
adc
fnstenv
mov
and
jae
add
not
ins
jl
dec
in
mov
pushf
jecxz
(bad)
pop
loope
int
sbb
xor
push
shl
add
mov
sahf
shl
cs
sbb
sahf
jbe
je
aaa
cs
mov
jbe
inc
push
mov
push
push
jle
push
or
lods
cli
xor
inc
xchg
sub
fldenv
push
mov
aaa
push
in
adc
pop
and
pop
cmp
in
pop
aad
push
mov
lods
ins
cmp
and
fnstenv
xlat
jecxz
ins
lock
popf
dec
cwde
lods
scas
mov
push
outs
clc
adc
sub
dec
and
mov
adc
pop
xor
pop
add
sbb
(bad)
fcomp
and
stos
adc
inc
mov
jecxz
fiadd
mov
enter
lock
lods
loope
(bad)
push
lahf
bound
sub
ret
shl
leave
(bad)
sbb
mov
xchg
mov
aad
dec
jns
pusha
jno
aas
cmp
outs
out
dec
aaa
inc
imul
or
mov
out
jg
data16
clc
dec
sti
daa
jmp
gs
inc
jae
sbb
arpl
push
cld
daa
xchg
lods
bound
lds
loopne
adc
mov
cmp
adc
sub
ja
cmp
fsub
mov
xchg
fsubr
pop
pop
mov
pop
xor
jg
movs
mov
adc
jg
pop
add
pop
pop
or
inc
xchg
and
adc
adc
dec
scas
enter
inc
push
xchg
shl
ins
jo
pop
dec
fld
mov
das
jle
xchg
lods
mov
or
call
inc
in
or
xchg
ds
ror
mov
mov
sar
or
jmp
jne
pop
not
call
xor
stos
mov
data16
pop
pop
cs
cmp
pop
dec
cwde
jg
fwait
mov
(bad)
in
popf
cld
adc
dec
and
inc
stc
adc
pop
jns
lods
pop
or
ret
mov
(bad)
js
retf
hlt
xchg
jae
repnz
mov
jp
mov
(bad)
pop
(bad)
lods
(bad)
je
(bad)
out
pop
jmp
pop
cmp
or
in
jle
cdq
cmp
mov
adc
dec
sub
in
mov
cmp
pushf
jecxz
and
sahf
aam
cmp
stc
ins
imul
cdq
sub
cmps
test
test
push
xchg
xor
jp
or
neg
pushf
mov
int
add
or
lea
outs
jge
jne
enter
sub
mov
stos
imul
push
pop
test
sbb
mov
(bad)
in
push
fbstp
xchg
das
pop
sub
mov
into
test
shl
sahf
or
mov
push
xchg
jl
into
and
mov
adc
cld
adc
rcl
fwait
push
jbe
aad
leave
push
mov
sub
cmps
mov
lods
mov
aaa
js
add
pushf
pop
idiv
std
cmp
loop
scas
sub
lock
sub
test
sbb
jecxz
mov
cmp
lahf
push
jns
jmp
mov
aas
jg
outs
push
inc
dec
inc
or
lds
ficom
dec
sbb
push
cld
mov
adc
movs
adc
inc
and
or
inc
sub
mov
aas
push
dec
dec
ins
cmp
mov
push
cmps
mov
(bad)
scas
mov
sar
and
mov
sbb
fwait
pop
imul
out
cmp
pusha
lods
psubd
inc
lahf
hlt
cmp
sbb
jle
scas
imul
popf
adc
shl
pushf
call
ds
iret
add
push
aas
pop
pop
push
retf
in
lods
cmp
jecxz
(bad)
cli
in
lods
sub
jl
jbe
xchg
aam
sbb
mov
or
sbb
dec
nop
adc
dec
or
int3
push
shl
and
adc
push
sbb
sahf
or
cmp
sbb
lods
lock
shl
sub
mov
push
sub
sub
outs
xchg
dec
fst
std
fisttp
mov
inc
jae
ins
sub
inc
dec
and
(bad)
sahf
push
mov
mov
pushf
add
aad
push
and
xor
jo
fldcw
jns
and
addr16
int
mov
dec
dec
movs
or
inc
sbb
je
add
pop
mov
fnstenv
inc
mov
(bad)
aas
movs
dec
rcl
add
add
sub
xchg
mov
dec
mov
adc
inc
hlt
adc
idiv
push
dec
mov
popf
or
cmps
inc
jp
fdiv
cmp
leave
dec
add
inc
nop
hlt
push
movs
movs
lock
ds
div
push
or
adc
lds
jo
push
cmp
lock
sbb
in
movs
cwde
cmp
cmp
pushf
and
push
(bad)
pop
pushf
lar
mov
fcomp
push
push
test
push
test
push
jbe
nop
jmp
std
xor
ins
cmp
dec
daa
and
pop
inc
pop
jb
icebp
fldcw
cwde
sub
ins
pop
aas
arpl
ins
test
jnp
mov
xchg
dec
(bad)
int3
mov
dec
std
cli
or
cld
cmp
into
rol
repz
outs
xchg
cmp
lea
xor
inc
fidiv
or
loope
mov
jno
aam
ror
aad
cmp
sub
cmp
xadd
adc
ss
in
xor
cwde
push
fist
mov
lods
mov
jg
cmp
retf
daa
cmp
cmps
mov
push
(bad)
out
push
fs
sub
adc
outs
mov
fld
cmps
jmp
std
cdq
adc
loop
jnp
jno
icebp
sub
clc
mov
pop
add
cld
jp
hlt
pushf
sub
xor
fstp
mov
dec
jle
sbb
and
mov
inc
stos
int
stc
cld
add
push
dec
das
in
and
or
cmc
jb
dec
pushf
xchg
dec
lea
sub
scas
out
sub
cmps
out
mov
mov
mov
(bad)
cs
mov
fnstcw
pop
(bad)
cwde
or
xchg
cwde
pop
ja
cs
jl
in
cmp
xchg
test
retf
jp
js
stos
pop
in
pop
mov
xchg
and
mov
(bad)
fldcw
pop
sbb
je
xchg
movs
adc
cmp
or
cmp
sbb
stos
adc
pop
dec
sub
std
inc
test
sbb
or
jne
adc
dec
pop
sbb
dec
std
sub
jae
iret
fld
fisubr
int3
sbb
mov
into
pop
push
leave
or
dec
jp
(bad)
in
cmp
mov
fbstp
cmc
dec
cmp
sbb
mov
adc
into
jge
jbe
cmc
cmp
(bad)
mov
dec
hlt
js
jp
retf
fmul
or
sbb
fs
pushf
out
cs
xchg
mov
dec
in
(bad)
test
sub
lds
pushf
mov
push
callw
popf
inc
fld
(bad)
test
sub
push
(bad)
rcr
xor
xor
dec
ins
dec
fs
js
jle
setb
mov
das
cmps
add
outs
or
mov
ins
popf
or
shr
(bad)
and
push
popa
nop
loope
sub
bound
loope
xor
popf
mov
mov
int
sub
push
popf
push
in
sub
fcom
pop
mov
or
test
adc
loop
xor
jle
sbb
mov
pop
loop
jp
in
ret
jb
data16
mov
cmp
xchg
adc
adc
std
inc
pop
pop
inc
int
xchg
in
jmp
cld
aad
xchg
cld
or
adc
in
cmp
push
iret
in
arpl
mov
pushf
dec
adc
and
ins
mov
add
cli
outs
sar
sub
out
cmp
fdiv
leave
fucomi
sub
dec
mov
ins
cmps
fnstsw
xchg
repnz
cli
cmp
imul
movs
add
mov
mov
leave
mov
or
enter
or
xchg
pop
addr16
ins
jge
std
call
retf
lock
int3
repz
jl
sbb
adc
or
push
out
out
in
fldenv
xor
jg
aas
push
ins
dec
mov
lahf
pop
push
inc
popf
les
test
xchg
aaa
sbb
dec
dec
cmp
hlt
cmp
movs
int
std
dec
stc
xor
push
add
inc
xchg
dec
pop
int3
pop
lock
popf
sub
add
sub
(bad)
scas
fcomp
fild
mov
mov
add
lds
pop
cld
ins
retf
pushf
fwait
int
call
mov
shl
pop
dec
imul
mov
cld
sbb
add
sub
ret
(bad)
cmp
pop
pop
sbb
lock
call
jmp
push
pop
push
and
dec
imul
stos
inc
mov
int
fcmovb
fs
shl
outs
jle
imul
mov
inc
pop
movs
lods
add
int
pop
and
nop
sub
retf
jle
pushf
cmp
mov
jmp
dec
jmp
adc
mov
sbb
test
xor
out
push
jnp
xor
int3
mov
mov
sub
mov
fdivr
div
iret
in
loope
xor
push
mov
std
sub
add
std
sub
dec
xchg
lea
push
pop
sub
cmp
jnp
mov
or
inc
popf
movs
lea
das
sbb
adc
xchg
out
and
in
mov
aam
lods
out
popf
sbb
sbb
imul
popf
xchg
jne
cwde
(bad)
sti
popf
lods
fld
in
pushf
(bad)
sub
or
nop
push
mov
fs
call
sub
sbb
in
mov
sahf
ins
or
aam
sbb
leave
call
rcr
mov
les
scas
sbb
out
add
push
movs
rep
test
xchg
out
or
(bad)
sbb
or
jp
repnz
les
pop
cli
mov
es
int3
xchg
das
cs
inc
dec
fcomp
mov
mov
jmp
outs
hlt
mov
push
sub
popa
push
int3
jmp
pop
out
sub
push
in
fcom
or
or
mov
imul
test
stos
fnop
lea
add
or
push
(bad)
hlt
push
sub
mov
or
retf
cmc
retf
jmp
les
ins
cmp
and
fidivr
mov
mov
neg
xchg
pop
sbb
push
pop
hlt
xor
jnp
fwait
in
mov
jmp
or
mov
hlt
sbb
test
dec
in
pop
por
mov
dec
ficomp
pop
push
cmp
in
sbb
movs
mov
pop
(bad)
repnz
jg
into
leave
popf
mov
cmp
push
xor
scas
ins
pop
dec
adc
neg
ins
lods
hlt
mov
or
scas
cmp
and
lahf
inc
pop
xchg
ins
movs
add
fwait
sbb
jb
cmc
or
popa
add
aas
pop
push
not
xchg
mov
ret
ins
jmp
add
and
cmp
iret
mov
pop
cld
test
gs
mov
stos
sub
push
adc
arpl
cmc
add
shl
dec
test
dec
push
add
push
sahf
dec
xchg
ins
sbb
push
repz
fwait
mov
xor
lods
les
or
dec
inc
push
out
cmp
ins
xor
or
js
mov
movs
and
cdq
xchg
xchg
std
dec
in
or
jno
pop
mov
xlat
imul
pop
pop
fldcw
(bad)
xchg
out
ins
sbb
sbb
fcomp
outs
mov
imul
cmp
int3
repz
in
out
sbb
inc
leave
jge
pop
jnp
pusha
clc
pop
and
sar
jnp
stc
mov
pusha
inc
push
cmp
jmp
cmps
cmp
dec
dec
jg
popf
add
aam
cmps
fild
sub
call
jns
repz
push
vmovaps
xchg
and
(bad)
movs
sahf
jge
or
xor
ficomp
movs
ins
daa
cdq
mov
dec
test
pop
in
dec
(bad)
in
lahf
add
lods
jl
or
and
outs
(bad)
jl
dec
ret
fwait
lea
cdq
das
(bad)
dec
jp
das
adc
ror
mov
sub
mov
add
or
repz
cmp
cwde
cmp
pop
ins
push
add
scas
inc
lods
mov
jle
std
lahf
(bad)
lods
aam
inc
jecxz
xchg
push
push
mov
dec
dec
fs
mov
adc
loopne
inc
test
jge
jbe
cmp
push
outs
and
mov
dec
mov
fild
mov
or
xlat
sti
xor
cmp
push
sub
sub
pop
add
sbb
and
mov
sbb
ins
(bad)
add
int
xchg
ss
fstp
arpl
push
jnp
ins
add
mov
ret
pushf
jl
adc
ins
fdivr
daa
aad
mov
jge
test
jle
pop
(bad)
retf
push
mov
pop
sbb
ins
inc
sub
imul
out
mov
push
inc
mov
stos
jnp
jp
pop
movs
(bad)
(bad)
cmp
ds
aas
test
push
pinsrw
xchg
pop
xor
mov
aam
push
cmp
jmp
mov
jg
test
xor
jmp
xchg
pop
push
fidivr
int
aad
xchg
outs
sub
sub
mov
push
imul
in
or
push
jb
dec
dec
rcr
jb
pop
push
push
fnstenv
inc
leave
pop
push
lds
pop
pmuludq
inc
pop
stos
dec
pop
ins
loop
jne
stos
jge
xchg
mov
mov
fistp
xchg
xor
cmp
ins
call
leave
sbb
es
cs
not
mov
xor
int
jge
sub
(bad)
das
fwait
cmp
sub
fstp
pusha
push
stos
add
(bad)
cmp
das
enter
in
imul
inc
sub
adc
inc
push
sbb
dec
cmp
ins
pushf
cmp
dec
cmps
dec
jmp
aas
dec
or
sub
cli
lods
and
iret
stc
out
or
sub
jo
pop
pop
push
repz
add
popa
repz
pop
fdivr
leave
daa
cwde
pop
or
in
mov
cmp
push
in
das
mov
or
mov
out
sub
sbb
sbb
sub
pusha
in
xchg
shl
add
sbb
jno
or
cmps
paddusw
hlt
daa
cmp
(bad)
jns
dec
loopne
mov
mov
cmp
fisttp
mov
pushf
sub
pop
int3
test
lods
sbb
sbb
cmp
push
push
das
les
jge
ins
ja
test
adc
pop
mov
int3
cmp
mov
add
xchg
cmp
sub
lea
test
ins
in
std
je
adc
jns
sub
add
fnsave
jle
adc
int
movs
sbb
dec
(bad)
pop
daa
or
cmps
xor
inc
ja
xor
jl
fnstcw
sar
pop
mul
jmp
jo
xchg
jge
cdq
repnz
sahf
lods
pushf
(bad)
cmp
mov
aad
loopne
and
std
push
dec
or
in
xor
mov
test
pop
fstp
mov
std
mov
shr
pushf
pop
mov
and
adc
shr
and
push
xchg
or
(bad)
bound
xlat
and
adc
call
cmp
or
mov
mov
loope
adc
pop
stc
mov
movs
in
or
and
cmp
test
outs
loope
call
hlt
loop
mov
data16
ds
not
jle
data16
or
sbb
fld1
dec
ins
in
fmul
jno
mov
add
ins
dec
mov
popa
sbb
out
mov
pop
idiv
sub
int3
(bad)
popa
dec
cmp
(bad)
and
xchg
sub
xchg
dec
add
leave
jo
mov
daa
icebp
or
push
jg
(bad)
mov
add
call
mov
frstor
into
outs
jo
push
mov
mov
repnz
movs
jmp
in
dec
sub
adc
outs
fmul
or
stos
lea
sub
bound
dec
xchg
dec
inc
pop
add
imul
(bad)
enter
or
cmp
pop
cmp
mov
sub
cdq
pop
not
xchg
out
dec
out
push
les
pop
gs
sbb
add
mov
pmaxsw
std
mov
inc
fdiv
xchg
pop
jge
dec
icebp
push
int
mov
mov
cmc
and
fadd
dec
jnp
pop
frstor
jl
test
in
outs
shl
aad
rcr
add
mov
das
sub
ds
mov
sub
in
pop
shl
sbb
in
dec
pop
add
inc
pop
cmps
jbe
mov
xchg
lea
xchg
(bad)
ror
mov
icebp
jl
jno
adc
in
dec
add
or
fldcw
lods
outs
jecxz
push
(bad)
jg
int
movs
test
pop
mov
mov
cmp
mov
fadd
xlat
or
mov
stc
cmc
sbb
cwde
aad
sub
jg
inc
sub
loop
push
sub
cdq
(bad)
shl
hlt
xchg
scas
or
(bad)
cmp
fistp
pop
ins
cmp
outs
stos
dec
jno
(bad)
into
inc
mov
pop
mov
das
movs
push
js
sbb
xor
mov
ret
mov
or
xor
push
xchg
mov
mov
xor
and
pop
addr16
push
ins
in
cld
xor
or
cmps
xlat
or
lods
mov
outs
je
sbb
lds
aaa
int3
inc
pusha
lea
fist
and
xor
xor
pop
push
cwde
add
push
mov
jg
or
ins
jl
dec
xchg
scas
(bad)
push
mov
jb
ja
int3
xor
enter
mov
sbb
je
mov
pop
in
pushf
shl
stc
(bad)
jno
movs
cmp
call
popa
movs
into
ins
loop
pop
cld
or
adc
scas
(bad)
fdiv
and
jecxz
adc
cmp
adc
jmp
imul
ins
into
clc
and
pop
push
pop
xchg
(bad)
sub
in
xchg
jo
int
dec
es
and
movs
call
idiv
iret
shl
xor
fild
fs
cdq
in
ins
push
pop
xchg
in
sbb
jae
jns
add
pop
mov
es
int3
xor
shl
ficomp
mov
pop
out
fdivr
shl
shl
sti
call
cdq
or
mov
cmp
dec
xor
xchg
sub
int3
pop
mov
and
mov
(bad)
mov
xor
lods
mov
fldenv
mov
lahf
(bad)
pop
cwde
or
ins
hlt
fwait
push
shl
clc
sub
pop
mov
pushf
mov
jne
mov
mov
mov
popf
and
sbb
xchg
cmc
mov
test
sbb
lods
push
cmp
ins
lahf
(bad)
paddusw
dec
fstp
(bad)
stc
test
jl
lods
mov
pop
and
fs
dec
fstp
fwait
add
out
jns
pop
outs
test
adc
(bad)
cmp
add
mov
add
test
and
add
je
jns
or
mov
outs
out
jbe
int3
inc
jmp
out
pusha
sti
adc
jg
sbb
adc
out
pop
jge
pop
in
xchg
aam
retf
loope
(bad)
jmp
mov
jbe
retf
outs
or
(bad)
call
pop
jns
mov
es
(bad)
popf
push
imul
inc
pop
jmp
cmps
jnp
loopne
stos
clc
add
popf
int
dec
jp
repnz
ins
adc
test
pop
ins
dec
or
and
mov
popf
test
xor
xchg
sbb
lods
hlt
std
ja
jg
movs
shr
jae
sub
xor
xchg
pushf
mov
pop
call
mov
and
loop
outs
mov
loopne
div
stc
and
pop
ins
aaa
pop
int3
or
xor
lods
mov
mov
or
idiv
ins
stos
push
(bad)
jnp
mov
cdq
sub
sub
into
test
repz
and
inc
neg
lahf
add
jns
scas
test
cmp
dec
mov
ins
mov
scas
lods
fs
lea
jl
jb
je
inc
mov
cli
jns
pushf
cmp
adc
mov
pop
fs
int3
inc
push
sub
and
sahf
xor
mov
sub
jbe
mov
add
jb
fsubp
jb
mov
into
dec
jo
fnstenv
es
xchg
pop
dec
(bad)
mov
xchg
(bad)
retf
sub
les
out
xchg
fadd
out
mov
mov
int3
loope
jnp
dec
jb
jns
cmp
xor
fld
mov
mov
cmp
int
leave
push
pop
or
xor
enter
sbb
dec
xchg
and
enter
sub
push
and
or
jge
fwait
mov
jne
shl
push
mov
ret
jno
adc
mov
(bad)
inc
pop
out
jbe
hlt
scas
dec
mov
sbb
add
std
add
daa
mov
mov
cld
aad
ins
jne
or
mov
or
jns
and
pushf
jl
sbb
cmp
stos
fild
cmp
imul
push
dec
loope
shl
push
(bad)
mov
clc
(bad)
fdivp
call
cld
cmc
jmp
bound
ins
xchg
sub
stos
pop
into
ud0
in
jge
jg
fist
add
(bad)
(bad)
lahf
je
or
mov
lea
and
sbb
xor
inc
std
sub
add
lods
jl
cmp
dec
pop
fadd
cmp
and
add
sub
push
sbb
int3
stos
loop
cld
mov
fsub
xchg
test
inc
std
or
retf
sub
sub
cmp
mov
ror
jp
test
(bad)
cmp
mov
fwait
aas
(bad)
fldcw
mov
pop
rcr
inc
sbb
fwait
sub
aad
dec
push
mov
add
dec
push
mov
sbb
retf
and
cmp
or
ret
repnz
adc
xchg
fsub
mov
adc
movs
in
scas
pushf
aaa
xchg
hlt
xor
dec
push
clc
aas
xchg
scas
dec
adc
add
lods
std
les
add
or
outs
or
jp
pop
push
sub
inc
mov
push
jmp
inc
pop
pop
mov
sub
dec
push
inc
imul
jle
cmp
mov
into
cmp
cwde
lods
imul
push
ret
adc
iret
fst
ficom
int3
call
loope
xor
jl
popf
mov
jo
add
xor
nop
cmps
test
cmp
lea
jl
shr
push
gs
ror
lods
shr
dec
or
xlat
jl
dec
aas
xor
aaa
xchg
cli
dec
mov
push
ds
jns
fstp
inc
ficomp
ss
xor
jg
sbb
dec
in
dec
mov
or
scas
sbb
outs
retf
cmc
adc
dec
adc
or
rcr
mov
lods
inc
mov
add
sbb
fdivp
cli
sbb
stc
int
add
je
hlt
std
outs
leave
inc
sbb
inc
aaa
or
ins
jg
pop
or
dec
in
stos
push
dec
std
in
push
sub
pusha
arpl
mov
jmp
fcomp
add
aaa
pop
(bad)
jb
fidiv
push
and
mov
call
test
pop
adc
sub
cmp
dec
dec
pop
mov
dec
mov
mov
cwde
retf
jbe
outs
daa
jno
sbb
jbe
addr16
ss
in
mov
xchg
(bad)
mov
js
das
fs
cmp
adc
cmp
retf
pop
sbb
mov
xchg
test
push
mov
cmp
ins
xchg
pop
mov
test
xor
push
scas
lock
pop
inc
loop
rcl
mov
inc
xor
les
push
push
cmp
ss
mov
jno
cwde
xor
dec
dec
fcomp
adc
pop
xor
not
sti
out
repz
int
lods
jne
mov
mov
mov
pop
jnp
aad
or
add
hlt
mov
fprem
imul
xchg
outs
or
jmp
cmp
adc
pop
adc
inc
sub
mov
popf
out
pop
sbb
out
cmp
jp
inc
cmp
enter
lods
ins
pop
(bad)
dec
jae
pop
aad
arpl
adc
or
enter
sbb
das
out
inc
mov
imul
out
xchg
out
ins
pop
xor
add
aam
push
imul
cmp
add
jle
mov
retf
lock
jae
or
cmp
lock
jne
jb
cwde
add
jno
shr
pusha
dec
icebp
sahf
outs
inc
adc
int3
jp
lods
(bad)
sbb
out
mov
shr
out
sub
aad
xchg
ss
std
mov
dec
jnp
or
mov
in
sbb
aaa
mov
nop
cmp
outs
and
push
add
pop
push
cmp
pop
dec
fst
ins
mov
xor
jns
mov
imul
xchg
sahf
push
cmp
enter
cmp
mov
cmp
and
fisubr
gs
add
gs
popfw
fdivr
(bad)
sub
dec
push
xor
or
xor
retf
xchg
mov
sub
or
les
std
mov
ins
movs
neg
push
out
je
add
in
mov
retf
mov
dec
test
aas
in
ins
sbb
ja
jecxz
mov
mov
sub
and
ret
fdivr
test
nop
mov
xchg
push
mov
fucomp
js
loop
push
mov
out
popf
add
sub
add
dec
sub
lods
in
jp
ins
sbb
inc
lea
iret
retf
int3
push
push
in
mov
notrack
sbb
fcomp
and
sub
mov
pushf
ret
mov
rcr
xor
adc
sbb
mov
cmc
sub
mov
std
pop
outs
test
jns
fcomp
outs
in
sub
jge
jecxz
enter
es
test
xchg
jge
push
adc
push
adc
mov
jnp
or
xchg
movs
ret
das
shr
pop
pusha
rol
loop
sbb
or
(bad)
imul
cmp
sbb
outs
xor
aad
aas
in
cs
stc
ins
pushf
pop
enter
mov
push
int
repz
mov
or
out
xchg
dec
call
test
call
pop
call
sbb
out
pop
push
das
jle
int3
enter
cmp
dec
mov
lods
jg
(bad)
std
sbb
ficom
cwde
movs
or
mov
test
mov
push
in
mov
scas
fidiv
in
jno
jl
and
lea
fisubr
dec
jg
mov
jecxz
cmp
retf
out
mov
sbb
leave
xor
cli
jbe
lds
sbb
dec
out
popf
mov
pop
inc
adc
mov
jb
add
sub
imul
jno
out
sub
adc
sbb
sbb
adc
mov
mov
mov
inc
cld
test
fwait
pop
les
or
sbb
stc
ret
xchg
sub
cmps
gs
cmp
popa
test
scas
dec
imul
push
jge
dec
imul
or
mov
mov
outs
sub
shl
std
add
imul
js
outs
sub
cmp
in
mov
mov
mov
jp
int
aas
data16
xor
and
adc
ja
lods
sbb
mov
inc
mov
nop
ja
or
cmp
sub
(bad)
sahf
sub
pushf
push
cli
jns
dec
jnp
fdivr
lods
imul
(bad)
fdivr
imul
pop
xor
or
push
xor
lock
in
iret
mov
cld
sbb
sbb
dec
ins
push
aam
xlat
out
add
mov
mov
in
test
dec
pop
test
sahf
inc
adc
test
cld
mov
inc
mov
lahf
hlt
lods
jl
in
adc
lds
test
pusha
out
adc
add
out
and
cmp
fcmovne
jae
sub
std
ficomp
in
sbb
mov
push
out
sub
jg
lods
mov
call
hlt
arpl
adc
gs
push
ins
mov
dec
sub
imul
enter
loop
imul
mov
and
test
inc
retf
mov
sbb
adc
cmp
add
inc
lods
pop
or
pop
jge
mov
fst
dec
xchg
sbb
dec
pusha
adc
inc
pop
push
sbb
dec
jge
gs
pop
xor
lods
jge
adc
or
(bad)
sbb
cmps
jmp
jns
pop
xor
mov
mov
mov
adc
sbb
repz
repnz
inc
cdq
ror
sbb
jae
mov
aas
fstp
ins
ins
inc
mov
sub
jno
xor
aad
fist
aam
jmp
jp
cld
sbb
int3
sti
xchg
push
hlt
rcl
sub
lea
push
add
movs
repnz
push
rcr
sbb
ins
pop
xor
mov
shr
sbb
add
stos
fucomp
pop
dec
jmp
in
mov
popf
in
leave
or
mov
push
pop
sbb
mov
cmp
fimul
ror
cs
test
cmp
mov
int3
mov
imul
in
cmp
xchg
sbb
xor
and
cld
int3
dec
xchg
dec
pop
mov
sbb
lods
xchg
into
sub
mov
fld
mov
xor
hlt
pop
(bad)
dec
adc
pushf
(bad)
cld
jmp
aas
ss
retf
repnz
xchg
jbe
or
cld
pop
out
pop
imul
ds
jp
mov
pushf
push
(bad)
inc
out
(bad)
jb
bt
sbb
mov
xlat
in
movs
push
ficom
or
imul
dec
test
xor
cmp
or
jl
clc
dec
test
mov
push
adc
push
in
and
pop
sbb
cwde
mov
rcl
iret
scas
pusha
mov
sbb
or
pop
ret
js
dec
test
cmps
pop
imul
cwde
sahf
int
into
adc
add
jl
mov
pop
dec
push
arpl
cwde
std
outs
imul
icebp
cmp
dec
data16
mov
and
xor
daa
push
enter
cmp
cmp
and
or
fistp
jle
cmp
outs
dec
mov
or
clc
or
adc
sub
fdivr
jmp
cs
push
or
retf
mov
rol
xor
test
mov
es
jbe
aam
inc
mov
les
(bad)
movs
cs
sbb
mov
lds
out
ds
jl
and
jnp
jmp
sub
les
leave
mov
mov
sub
dec
adc
imul
mov
cli
(bad)
loope
pusha
push
or
sub
sub
lods
les
sti
outs
(bad)
mov
push
or
mov
std
ins
sub
mov
stc
hlt
sub
jg
(bad)
or
(bad)
cmp
jb
repz
mov
add
mov
mov
add
cmp
aam
outs
or
lods
in
push
push
lea
xchg
aas
or
rcr
movs
(bad)
cmp
mov
aad
dec
dec
test
mov
mov
retf
(bad)
in
in
mov
jbe
cs
lock
pop
(bad)
jns
fistp
lods
push
ss
or
dec
sub
push
test
xchg
js
add
outs
fbstp
jnp
fisubr
push
and
xor
daa
fsubp
and
aad
mov
bound
jnp
add
pop
(bad)
or
leave
inc
cld
in
lea
sub
jnp
(bad)
dec
jg
pop
in
dec
dec
jns
mov
int3
scas
mov
fst
jnp
test
xchg
adc
dec
sahf
jbe
fwait
jecxz
fild
outs
xchg
sbb
call
stc
test
jp
or
loop
fsubr
push
mov
mov
or
test
rcl
lods
xchg
and
sub
aaa
ds
test
add
cmp
aad
enter
aam
fstp
popa
xchg
sub
dec
out
inc
icebp
fnsave
mov
test
loopne
or
or
inc
inc
cmp
dec
sbb
mov
fldz
mov
or
sbb
(bad)
sbb
mov
cmc
ins
addr16
or
std
sahf
das
rcr
sahf
sbb
cmp
out
xchg
lahf
or
pop
daa
mov
sub
lods
mov
add
lea
imul
std
sti
scas
xor
sub
ror
add
sub
mov
dec
jo
jno
fist
ror
mov
dec
fisubr
jg
add
sub
out
mov
adc
jl
or
adc
aam
cmc
pop
test
dec
mov
push
jae
jae
shr
xchg
xor
in
out
pop
pop
out
lods
push
inc
lahf
pushf
in
cmp
xor
push
rcl
mov
push
jae
pop
xor
mov
test
fsubr
mov
test
jne
das
cmp
test
(bad)
xor
fwait
or
inc
daa
retf
je
sbb
ins
sub
pop
data16
lods
fisubr
mov
lods
in
dec
(bad)
sbb
xor
jmp
int3
jmp
pushf
das
lods
pop
xor
push
(bad)
aas
aas
sub
mov
jo
dec
loop
jmp
inc
mov
int
ja
jnp
iret
out
push
or
mov
in
test
enter
movs
in
ficomp
pushf
mov
(bad)
mov
sub
xchg
in
shl
pop
pop
addr16
loop
xchg
cmp
fdivr
push
adc
or
in
adc
ins
mov
stos
retf
mov
xchg
test
popf
(bad)
or
(bad)
jo
xor
cmp
and
pop
(bad)
pop
mov
push
mov
(bad)
fnstenv
sub
fmul
stc
or
fld
xchg
(bad)
fcmovb
repz
pop
sbb
jmp
pop
mov
lahf
lods
xchg
mov
leave
in
xor
in
cmp
sub
inc
cmps
jnp
dec
into
adc
jno
popa
jae
mov
fimul
mov
retf
add
std
mov
or
sbb
cld
add
mov
push
pop
out
mov
cmp
jno
outs
enter
sub
and
push
sti
push
arpl
ins
xor
fwait
mov
mov
leave
(bad)
int3
aam
mov
(bad)
repz
cmc
retf
push
into
fucomp
sbb
mov
xor
or
or
inc
sbb
mov
je
inc
jnp
lahf
xchg
mov
scas
(bad)
fmul
fisubr
pop
(bad)
mov
ret
daa
in
(bad)
fistp
lea
icebp
add
lods
jl
sub
or
ret
ret
adc
and
test
or
loop
jl
repz
jge
or
loop
push
bnd
test
inc
lea
ret
jle
xor
mov
test
inc
movs
xchg
ins
ds
mov
or
adc
dec
(bad)
pop
lahf
xor
in
nop
push
inc
ds
mov
out
out
hlt
pop
pop
dec
mov
dec
cli
add
push
lods
retf
fs
cwde
lods
popf
xchg
aad
xchg
xchg
js
push
retf
fucomip
adc
mov
aaa
or
add
or
fs
test
or
mov
lahf
pop
add
popa
mov
pusha
ror
inc
jae
mov
ins
sbb
push
outs
gs
in
lods
int
dec
dec
push
in
pushf
sbb
clc
arpl
mov
repz
cmp
pop
xor
sbb
xor
out
mov
add
inc
pop
aad
push
and
inc
outs
xchg
push
mov
sbb
inc
jl
loope
leave
ds
jmp
div
jne
pop
or
sbb
push
mov
iret
cmc
movs
jo
cmp
in
jge
rol
loope
int
fistp
int3
movs
hlt
sbb
push
cmp
mov
sub
std
aaa
xchg
adc
jl
pop
in
or
mov
or
fisttp
mov
jno
xor
aaa
les
pop
pop
inc
inc
data16
sbb
fcom
fsubr
int3
jae
or
or
inc
jge
retf
jo
xchg
dec
mov
push
cmp
pop
dec
arpl
sub
mov
fsubrp
pop
push
adc
in
out
mov
adc
hlt
fmul
aas
mov
sbb
jnp
lods
xchg
mov
pusha
and
inc
rol
jns
aad
xor
jo
jge
jae
jmp
add
cmp
out
xor
icebp
repnz
ins
mov
inc
mov
xchg
outs
les
cmc
or
push
add
dec
and
pop
ins
cmp
inc
mov
inc
arpl
cmps
mov
jl
xchg
pop
inc
pop
dec
movs
fisubr
sub
add
mov
mov
adc
dec
mov
jns
fcom
ins
or
arpl
jmp
sahf
data16
repnz
xchg
pop
shl
pop
into
dec
scas
jl
fnsave
mov
jmp
ds
or
pop
inc
(bad)
or
dec
inc
dec
adc
nop
mov
aas
(bad)
fdiv
(bad)
and
or
or
into
mov
int
sub
ds
shl
cmp
arpl
sbb
cmp
xor
inc
test
mov
cmps
scas
mov
or
jg
add
inc
pop
cmp
cmp
js
xchg
ins
dec
mov
in
lods
xchg
(bad)
(bad)
pop
mov
test
adc
lahf
mov
pop
push
xor
jmp
pop
sub
scas
mov
xchg
mov
or
lock
mov
daa
clc
jl
stc
std
pushf
add
jmp
or
dec
pop
sbb
sbb
jbe
pop
mov
ins
jnp
lods
mov
(bad)
loope
call
and
or
or
(bad)
scas
movs
jp
xlat
jns
push
addr16
xor
sbb
or
loop
adc
das
retf
jae
adc
adc
sbb
cmovg
mov
imul
loop
and
ins
data16
push
xchg
sbb
mov
(bad)
pushf
cdq
je
dec
lods
scas
fprem
mov
add
sub
ins
jne
pop
mov
push
out
mov
movs
xchg
xchg
push
ds
dec
stos
pop
dec
std
push
jne
popf
sub
sahf
jecxz
dec
ins
xor
mov
outs
mov
cdq
int
xchg
lahf
cli
fistp
jmp
ret
sub
cmp
(bad)
push
mov
scas
clc
les
dec
cs
mov
aad
push
pop
rol
int3
dec
xchg
in
inc
arpl
pop
clc
jl
rol
cmp
cmp
sbb
mov
cmp
(bad)
jge
add
sub
dec
jle
nop
dec
loopne
shl
pop
mov
std
pop
cmps
in
call
jnp
in
add
sub
mov
pop
dec
loop
inc
aad
repz
xchg
test
sti
mov
cs
in
add
mov
(bad)
mov
adc
fldenv
(bad)
cmp
loope
cli
cmp
push
mov
or
xchg
adc
sti
in
movs
das
mov
dec
mov
cmp
pop
adc
xor
(bad)
jle
in
ds
fninit
es
shl
mov
add
ret
cmp
pop
sub
stos
rcl
int3
in
cmps
dec
and
mov
dec
sub
popf
mov
mov
int3
(bad)
fidivr
fld
xlat
dec
ret
jl
mov
adc
pop
test
mov
cmp
outs
out
stos
addr16
adc
fwait
or
jp
dec
cwde
xchg
leave
je
and
xor
into
int3
xor
popf
jb
(bad)
lods
out
out
int
lods
call
mov
fs
pop
in
or
and
mov
mov
jle
das
sub
aad
cwde
sbb
pop
jl
jge
jnp
(bad)
cld
in
clc
sub
add
in
or
cmps
cmps
cmp
rcr
imul
retf
jmp
mov
or
pop
push
xchg
rcr
sub
mov
cwde
lods
int3
mov
inc
js
jnp
mov
and
ins
push
jnp
loop
mov
popf
xchg
stos
dec
int3
sbb
xor
or
mov
push
pop
jge
mov
jae
mov
fsub
fwait
test
mov
pop
pop
mov
pop
aam
sti
dec
rcl
fnsave
mov
fild
or
push
jg
xor
pop
inc
and
push
sub
jle
addr16
int3
sub
fnstcw
add
out
jl
adc
iret
shr
hlt
lods
test
sbb
(bad)
(bad)
and
sbb
or
repz
cmp
rol
mov
lds
sub
mov
mov
ret
push
pop
in
lock
sti
lods
les
jae
lods
sbb
test
mov
push
retf
popa
js
das
pop
xchg
ss
addr16
mov
aad
out
popf
xor
std
pop
ins
cmp
pushf
jle
das
shl
dec
in
sub
leave
sub
pop
xor
dec
pusha
add
push
pop
rol
mov
retf
mov
out
jo
in
pop
cdq
adc
sahf
xchg
fs
ins
or
dec
mov
mov
dec
cmp
out
into
mov
pushf
movs
push
movs
push
(bad)
sti
ret
add
mov
push
adc
fsub
sbb
aas
and
adc
repz
mov
(bad)
out
std
test
je
aaa
pop
cld
pop
in
inc
outs
and
cmp
jbe
fsub
fdivr
hlt
jle
in
sub
int
pop
outs
scas
pop
cmp
jne
movs
in
aad
lods
sub
lods
rcr
stos
add
sbb
mov
cmp
pop
inc
sbb
fwait
(bad)
cmp
repz
fdiv
cmp
dec
xchg
dec
int3
ficom
fild
adc
scas
popa
and
jp
jb
add
repnz
in
or
loopne
pop
mov
mov
int3
call
mov
out
and
daa
xchg
ds
fnstsw
neg
xchg
pop
or
and
int
jg
aas
mov
paddusw
and
pop
sbb
nop
stos
pop
push
dec
sub
(bad)
jmp
jp
std
sub
outs
sub
cmp
ins
push
div
inc
mov
lods
jmp
in
arpl
ds
test
js
sbb
mov
mov
mov
popf
sub
mov
or
sbb
xchg
dec
cwde
jb
sbb
push
sahf
jmp
lods
out
mov
dec
inc
sbb
cli
lods
pop
xlat
pop
ds
jg
sbb
lods
inc
fisttp
sub
adc
add
cwde
xlat
rol
dec
jl
das
or
enter
push
ret
jl
adc
stos
push
mov
sahf
mov
ins
aaa
stc
out
jl
push
mov
mov
adc
inc
cmp
stos
test
sub
mov
nop
add
sahf
call
jl
ret
or
adc
pop
int
out
mov
lods
pushf
cmp
cld
ror
(bad)
sbb
inc
or
pop
cmp
in
or
jne
int
pop
jge
std
mov
pop
enter
(bad)
sbb
jns
pop
sub
jp
mov
lods
stc
mul
pop
jl
punpckhbw
pop
rol
mov
sub
cld
test
test
int
scas
in
mov
out
shl
add
mov
or
cmp
imul
hlt
in
xchg
add
xor
mov
jnp
jge
retf
rol
ins
fdivr
sbb
mov
fistp
pop
in
fdivr
inc
sti
push
dec
jle
add
rcr
jns
(bad)
jecxz
jecxz
cmps
cmp
mov
mov
lds
pop
and
not
jl
cmp
pop
sub
pop
in
sbb
imul
test
mov
xor
fisubr
and
sub
dec
adc
jl
(bad)
inc
pop
dec
xchg
js
cmp
hlt
test
adc
add
and
fisubr
imul
sub
cmp
scas
jmp
sub
shl
je
pop
fcomp
pop
sub
fmul
lods
push
cli
inc
sar
mov
mov
dec
sub
push
shr
jge
movs
mov
ror
fist
and
mov
dec
mov
fimul
mov
out
rcr
sar
push
or
lods
(bad)
mov
daa
pop
and
or
test
fwait
jg
add
fdiv
inc
in
mov
pop
mov
in
mov
or
xor
xor
pop
cmp
jmp
add
shl
std
sar
cmp
pushf
add
sub
inc
retf
pusha
in
cwde
mov
mov
sbb
sbb
dec
shrd
inc
pusha
dec
lods
or
mov
fisubr
inc
popf
sbb
out
mov
sbb
jge
dec
inc
rol
ins
je
cmp
mov
inc
test
sbb
push
ins
retf
jecxz
jb
mov
mov
dec
fdiv
(bad)
int
out
aas
in
pop
mov
aaa
pop
dec
test
push
pushf
nop
std
in
sbb
push
jge
test
shr
ficomp
push
cwde
stos
in
dec
jg
lods
and
cs
in
sub
or
xor
push
or
popf
(bad)
cld
mov
(bad)
std
lods
mov
mov
jl
es
cmp
sar
lods
lahf
jb
in
add
(bad)
mov
add
jmp
sbb
mov
push
adc
(bad)
sbb
sub
adc
mov
or
inc
or
mov
push
leave
dec
in
and
cmp
push
lds
and
jge
outs
mov
stos
sbb
sub
mov
jmp
dec
ins
mov
ins
enter
ficomp
ins
sbb
pop
icebp
dec
pop
mov
mov
push
bound
mov
inc
aad
pop
mov
xchg
jnp
pop
loope
scas
sub
xchg
mov
and
cdq
pushf
cs
push
mov
(bad)
jnp
lods
jp
add
cmp
mov
cwde
inc
dec
int
test
jne
arpl
fnstsw
cmp
push
xor
lods
inc
sbb
adc
xchg
fstp
repnz
int3
cmp
cmp
imul
ds
into
std
fcomp
cmp
or
gs
call
shl
mov
mov
ins
in
mov
leave
lods
and
push
fs
aam
pop
add
ds
jl
test
adc
(bad)
jns
fwait
lods
mov
scas
mov
mov
jl
cld
lea
push
jg
xor
pop
inc
pop
(bad)
in
leave
mov
inc
pop
in
or
imul
imul
test
and
ins
mov
imul
ds
inc
out
shl
sbb
pushf
clc
jge
push
dec
mov
adc
jecxz
add
fsub
aam
fwait
sbb
aam
mov
adc
sbb
dec
dec
push
mov
ins
push
jae
pop
inc
and
or
mov
aad
jl
mov
pop
in
add
adc
outs
movs
pop
jecxz
xchg
ins
pushf
clc
lods
adc
jge
jl
iret
xchg
jo
push
das
cdq
out
and
dec
cli
sub
xchg
mov
mov
lea
sti
add
ss
inc
pop
dec
lea
imul
jmp
mov
(bad)
jle
and
lods
adc
loope
call
adc
out
mov
shr
aas
mov
nop
jge
je
fimul
and
addr16
mov
mov
fldz
inc
pop
or
push
adc
push
pop
jnp
js
daa
mov
popf
fs
into
inc
(bad)
mov
hlt
dec
cmp
out
adc
pop
and
int
mov
sbb
adc
sub
lods
mov
pop
add
pushf
mov
sub
mov
fadd
jne
(bad)
lods
push
or
ror
pushf
call
je
mov
pop
popf
test
jmp
xor
sbb
and
push
dec
shl
cmp
mov
cli
push
fsubr
cmp
push
lods
or
ret
ror
push
pop
and
fild
iret
not
fadd
xor
loopne
mov
and
sub
leave
aad
fucom
sub
jmp
fldcw
sbb
fisubr
ss
or
into
dec
popa
pop
sub
mov
fdivr
mov
xor
inc
pusha
sub
jmp
fdivr
shl
adc
xchg
jle
pop
jle
mov
pop
cmp
fstp
(bad)
ins
fsubp
cmp
lahf
push
cmovs
daa
out
cmp
aad
or
pop
test
pop
pop
push
add
out
cld
and
cld
pop
cmp
repnz
lods
xchg
imul
cli
movs
push
push
xlat
not
mov
sbb
pop
pop
mov
adc
jno
mov
jns
lahf
mov
fnsave
inc
dec
xchg
(bad)
popf
cs
(bad)
dec
fs
fcomip
pop
je
push
ins
inc
mov
adc
add
pop
outs
lahf
movs
or
clc
adc
mov
xchg
fcmovu
lods
fsubr
enter
int3
sti
dec
es
pop
sbb
push
cmp
test
out
or
les
into
retf
nop
mov
jnp
loope
ins
xor
lods
push
and
push
sbb
inc
sar
jmp
dec
fnstenv
(bad)
jns
xchg
mov
inc
inc
leave
out
inc
pop
cld
(bad)
jmp
pop
xchg
cld
int
icebp
xor
cmp
test
push
std
mov
fistp
int
mov
mov
xchg
push
add
lahf
inc
neg
jno
mov
mov
adc
movs
cmp
adc
repnz
xor
push
cmps
pop
adc
test
cli
dec
test
sbb
add
ins
das
sub
sti
in
scas
pop
ins
int3
int3
and
cmovl
(bad)
xchg
mov
mov
(bad)
jl
sbb
pop
ins
ins
sbb
mov
(bad)
mov
xor
arpl
cld
xchg
add
mov
or
cmps
loop
test
(bad)
ins
mov
fistp
(bad)
loopne
push
push
pop
sub
ss
cld
fs
bound
jnp
(bad)
(bad)
or
jmp
scas
cmps
xor
stc
inc
pop
arpl
push
dec
jb
cmp
jmp
mov
jmp
or
sbb
pusha
js
inc
pushf
popa
mov
jl
mov
and
ror
jmp
push
xchg
push
out
jge
scas
xor
or
jns
pop
cld
xor
leave
mov
jl
push
xchg
ins
or
push
and
hlt
test
adc
pop
pop
fidiv
push
pshufw
mov
jecxz
push
mov
fisubr
inc
fnsave
inc
pop
sub
pop
sbb
mov
pushf
push
fnstenv
je
push
movs
popf
ins
outs
inc
ds
jmp
push
daa
mov
fwait
jmp
cmp
mov
add
pop
scas
fisttp
xor
aam
fild
xchg
xchg
adc
lea
int3
push
xchg
jns
mov
(bad)
ffreep
xchg
out
lods
aam
mov
dec
mov
add
push
or
jp
cmp
mov
fcmovu
ins
xchg
push
mov
add
push
mov
ret
push
dec
jp
jle
push
popf
sub
push
sbb
pop
fcom
cmp
push
or
sahf
popf
xchg
sar
out
mov
or
retf
das
jge
sbb
int
add
(bad)
int
cmp
dec
jg
xchg
in
pusha
int
cmp
ret
push
pusha
and
dec
dec
sahf
sti
(bad)
jmp
jns
mov
enter
std
lods
sbb
sbb
sbb
jnp
ins
mov
js
scas
mov
sar
or
and
addr16
jge
movs
mov
xor
dec
jmp
adc
stc
xchg
test
pusha
mov
mov
xor
out
fnstcw
or
or
in
je
inc
aam
(bad)
mov
sbb
jb
xchg
sbb
push
and
lds
dec
scas
lea
and
in
sbb
test
xor
iret
in
aas
and
push
or
cmp
sub
mov
test
loope
mov
mov
js
dec
aaa
jno
dec
inc
cmp
mov
fsub
jg
leave
lods
cld
int3
lahf
scas
cmps
add
push
jmp
inc
outs
jne
push
js
sahf
mov
fadd
call
pop
mov
int
dec
cmp
jecxz
mov
scas
std
scas
add
fmul
mov
push
ds
dec
scas
(bad)
fdivr
pop
jns
jg
cwde
imul
aad
stos
mov
aad
or
cwde
or
fdiv
and
cdq
scas
cwde
dec
dec
fist
and
push
je
rol
int
bound
cmp
pop
fwait
mov
jnp
mov
jnp
push
add
adc
cld
cmp
jnp
sbb
ins
ins
jl
in
cmp
int3
repnz
outs
push
push
push
leave
fidivr
cld
adc
mov
cdq
lods
stos
pop
sub
lods
inc
xchg
push
scas
cmp
mov
outs
sub
jb
rcr
stos
lahf
pop
imul
inc
lods
pop
jbe
cmp
int3
fs
add
mov
dec
jle
mov
jp
out
mov
pop
scas
adc
mov
jbe
lods
add
std
jge
xchg
scas
xor
adc
ins
jge
xor
pop
adc
jmp
lods
jnp
std
dec
movs
lea
mov
(bad)
int3
add
call
ins
push
stos
outs
xor
pop
test
mov
dec
icebp
std
(bad)
mov
and
sub
pop
scas
call
outs
mov
outs
push
jbe
jle
fadd
jo
cmps
cmp
(bad)
cmp
ret
add
mov
cmp
pop
cld
fimul
sar
out
popf
mov
mov
lods
das
mov
aam
xor
sbb
pop
push
ins
scas
add
xchg
cmp
test
movlps
stc
les
inc
cmps
adc
movs
scas
pop
stos
fstp
icebp
jmp
push
jb
adc
sbb
movs
jmp
dec
push
mov
add
dec
lods
test
mov
mov
dec
adc
mov
dec
xchg
mov
shl
cs
sub
sbb
or
fisttp
dec
gs
mov
cmp
retf
mov
rcr
mov
jl
inc
test
fs
xchg
outs
push
add
mov
(bad)
sub
test
adc
ret
(bad)
xchg
pop
xchg
push
add
jnp
shl
test
stos
sub
mov
xchg
sub
cmps
das
lods
jecxz
fisttp
xchg
stos
sti
inc
or
inc
sbb
dec
push
inc
imul
test
sbb
dec
pop
mov
mov
fdivp
outs
ins
mov
lds
push
dec
push
push
mov
in
sub
ret
out
pop
lock
adc
cmovle
dec
aaa
mov
pushf
mov
ss
(bad)
in
sub
xor
stos
ins
add
and
sub
aas
hlt
xor
popf
sahf
xor
mov
dec
ins
out
cmp
dec
mov
fadd
loopne
inc
mov
retf
pushf
jae
mov
pop
fstp
gs
dec
ds
mov
mov
inc
sub
sbb
ret
dec
pop
in
push
xchg
xor
call
push
or
loopne
mov
or
iret
pop
jmp
mov
cmp
push
pop
pop
std
lds
add
pop
stos
and
lods
mov
sbb
mov
or
test
jecxz
loope
jge
loopne
xchg
hlt
and
(bad)
iret
stc
inc
clc
loopne
inc
test
and
cmp
arpl
jns
adc
mov
clc
xor
sbb
push
fsub
pop
jg
sub
lods
dec
pop
dec
aaa
dec
test
div
(bad)
mov
fsub
dec
aam
repz
pop
pushf
inc
pop
dec
sbb
mov
test
xor
xchg
mov
mov
sbb
mov
dec
or
ins
or
in
ffree
push
mov
fmul
push
jge
push
adc
scas
popf
jmp
ins
jno
popa
mov
ds
repnz
xor
or
repnz
add
lods
sbb
mov
pusha
lea
mov
xor
xor
fisttp
add
ins
or
pop
in
gs
fidivr
(bad)
in
iret
xchg
mov
fnstcw
int
or
push
jns
pop
sbb
retf
out
mov
xchg
xlat
adc
jbe
mov
or
pop
fiadd
imul
dec
hlt
jmp
fdivr
repnz
adc
mov
cld
pop
or
xchg
int3
hlt
mov
dec
jmp
cmp
outs
lds
sub
push
pop
xchg
popa
out
pop
fwait
popf
or
cwde
cmp
mov
ror
sub
into
dec
push
shr
lods
(bad)
loop
xor
loopne
jl
lods
push
imul
cmps
daa
jmp
ja
sbb
or
add
inc
popf
mov
aas
dec
mov
dec
rcr
outs
std
aad
lea
mov
hlt
stc
push
ret
test
add
test
dec
out
cmp
xor
jmp
mov
sbb
pop
or
icebp
mov
sbb
std
cmps
sbb
call
ins
les
add
cmp
add
mov
out
pusha
dec
es
stc
xchg
sub
ja
das
mov
repnz
mov
in
cmp
div
mov
in
jns
das
or
cmp
cmp
pop
mov
jp
jl
imul
mov
inc
jmp
test
push
and
adc
test
fwait
into
jno
jb
sbb
sub
mov
mov
pushf
neg
cmp
in
cmps
imul
fisubr
pop
outs
mov
iret
jno
sbb
mov
lahf
or
mov
jne
faddp
gs
stos
leave
bswap
(bad)
sbb
imul
(bad)
fiadd
out
inc
and
inc
iret
scas
pop
adc
cmp
sub
pop
jge
or
aam
or
or
adc
mov
dec
xchg
shl
add
jmp
mov
(bad)
popf
adc
lea
popa
pop
repz
mov
mov
sar
xchg
icebp
lds
sbb
fsub
xlat
(bad)
jmp
scas
cld
(bad)
mov
out
or
xchg
cmp
push
xchg
inc
lods
movs
lea
push
mov
pop
jmp
aam
xor
cmp
cmp
sbb
mov
lahf
in
nop
(bad)
sahf
cmp
or
cmp
or
int3
or
push
pop
sbb
ins
shl
nop
pop
jae
(bad)
sbb
mov
or
cmp
stos
cdq
mov
xchg
in
ret
xchg
xor
inc
daa
jno
stos
mov
push
add
mov
mov
or
jl
inc
data16
jb
daa
xor
pop
or
xchg
pop
sahf
(bad)
cld
dec
ins
and
mov
enter
les
ins
push
cwde
mov
mov
dec
xchg
outs
xor
ror
push
or
pop
les
ins
cmp
xor
pop
inc
movs
gs
pop
scas
sub
(bad)
pop
cs
mov
into
xor
movd
adc
cmp
scas
jp
mov
or
call
fsubr
dec
inc
cmp
sub
or
pop
les
pop
jo
add
or
mov
out
pop
jmp
pop
hlt
push
popf
movs
inc
dec
sbb
pushf
push
cld
mov
or
cwde
xchg
stos
mov
lea
repnz
ret
and
test
nop
dec
or
mov
cmp
mov
sbb
aam
mov
cmp
mov
int
and
fcom
lea
fwait
jmp
or
and
stc
movs
lea
std
jo
xor
call
push
add
aaa
jae
jae
gs
or
mov
mov
add
adc
nop
sahf
push
pop
cdq
int
inc
ror
test
fcmovnbe
fwait
popf
loopne
out
test
mov
je
imul
js
dec
lods
sub
cdq
xchg
aad
cmp
out
cli
push
popf
push
jae
pusha
pop
sahf
xchg
dec
sub
and
jne
mov
mov
stos
mov
sub
leave
sbb
stos
nop
jl
lahf
sub
dec
cmp
mov
leave
adc
mov
setle
adc
ret
sub
int3
push
dec
adc
inc
xor
retf
cmp
lods
jmp
cmp
movs
dec
pop
std
ins
and
xchg
bsf
in
cld
push
pop
pop
in
sub
pop
rcr
cmp
mov
or
push
ins
hlt
push
dec
dec
aad
pushf
mov
add
mov
inc
inc
dec
mov
mov
and
sti
lea
cld
sbb
iret
dec
ins
test
sub
gs
lods
pop
mov
call
mov
pop
jns
ss
(bad)
movsx
xor
adc
ds
adc
inc
out
std
rcr
dec
mov
inc
dec
outs
adc
pop
ins
cld
jmp
inc
jl
aam
adc
dec
fld
dec
sbb
sahf
add
rol
ffree
mov
dec
fs
sub
ss
adc
push
movs
pusha
jo
stc
lods
pushf
mov
shl
sub
add
test
cdq
mov
mov
and
mov
sub
enter
test
movs
jbe
push
js
xchg
mov
test
test
std
repnz
sbb
pop
movs
dec
adc
call
inc
enter
push
sbb
sbb
adc
fdiv
stos
mov
inc
mov
daa
pushf
cld
lea
pushf
sbb
outs
pop
int3
pop
push
shl
pushf
fst
mov
ins
popa
pop
outs
mov
repz
retf
scas
(bad)
(bad)
data16
mov
adc
test
xchg
popf
sub
aad
pop
mov
sbb
lea
dec
mov
mov
sub
das
leave
bound
inc
cmp
xchg
xchg
push
aaa
push
mov
and
sbb
cs
xor
jns
scas
fstp
mov
mov
sar
fucomp
cmp
cwde
xor
push
test
cwde
popf
push
cmp
iret
mov
push
mov
ss
adc
cmp
lea
push
int3
push
jno
mov
jge
stos
jecxz
cmp
pop
sbb
cld
std
jne
jl
fsubr
push
stc
sub
add
pop
mov
call
ror
jecxz
int3
xlat
xchg
dec
dec
call
dec
dec
sahf
xchg
int
clc
and
adc
lods
inc
outs
enter
jmp
add
fld
sbb
call
(bad)
test
sub
imul
jo
ficom
cld
pop
lods
in
in
imul
jns
jno
or
adc
mov
rcl
xor
enter
mov
pop
data16
jl
outs
mov
aad
mov
xchg
mov
lods
rol
fmul
mov
push
ror
sub
xor
inc
cmp
sub
sub
out
pushf
mov
das
imul
cdq
add
mov
pop
ss
loopne
adc
mov
sub
clc
cmps
inc
shl
mov
ss
(bad)
and
jns
push
hlt
cli
ins
std
inc
mov
and
retf
scas
dec
sbb
mov
sub
data16
pushf
sbb
jle
push
movs
sub
cld
and
ins
hlt
dec
lods
add
jle
adc
ins
jl
fs
jmp
popf
cmp
int3
daa
sbb
xchg
popf
adc
pop
(bad)
or
cmp
jb
scas
cmp
sub
(bad)
hlt
cli
mov
popf
pop
rcr
jge
inc
jge
cld
push
pop
mov
stos
mov
ror
inc
push
xchg
outs
push
movs
adc
cmp
ins
test
stc
push
pop
and
cld
ja
pop
ins
or
push
(bad)
ins
jmp
adc
add
xchg
fsub
ins
in
ja
or
rcr
dec
xchg
and
pushf
mov
xor
int3
xor
pop
ds
cmp
mov
pop
iret
jnp
mov
popf
ret
in
(bad)
lods
cmc
div
mov
mov
sbb
sbb
fistp
mov
mov
in
stos
test
dec
sbb
pushf
or
fisttp
cmps
dec
js
sub
in
mov
push
dec
fnsave
xchg
fnstenv
ins
or
loopne
sbb
inc
mov
adc
in
mov
movs
(bad)
cmp
and
mov
mov
jl
mov
test
movs
cmp
push
inc
and
bound
adc
jl
push
div
test
lods
mov
call
pop
cmp
rcr
xor
mov
adc
mov
sahf
cmp
lock
mov
mov
fstp
pop
mov
jmp
inc
adc
or
lods
enter
out
push
or
int3
stc
sub
pop
cmc
cld
mov
inc
scas
sub
push
jl
mov
cmp
orps
jnp
or
leave
mov
xor
retf
adc
arpl
sub
aad
movs
fst
jno
sub
dec
cmc
(bad)
repz
xor
and
push
hlt
xchg
pop
sub
or
cld
jp
mov
call
sbb
ret
call
sahf
inc
fmul
mov
(bad)
xor
cmc
or
adc
push
fisttp
pop
mov
movs
sbb
sub
push
rol
push
pop
ins
pushf
in
fist
std
mov
mov
cmp
outs
scas
sbb
push
scas
pop
cli
fisubr
dec
adc
lahf
push
pop
pusha
sub
jns
std
sub
sbb
icebp
push
pop
mov
adc
in
jle
cdq
aas
repnz
sahf
repz
adc
sub
mov
mov
dec
std
rcl
xor
mov
sub
fisttp
dec
imul
push
mov
fwait
imul
cld
inc
fnsave
std
xor
stc
mov
push
inc
mov
cmp
sar
dec
mov
pop
push
sub
cmp
pop
leave
lods
outs
nop
mov
lods
fisttp
sub
mov
aad
rcl
xchg
cmp
xchg
not
call
mov
ret
inc
mov
jge
jge
mov
rcr
mov
mov
int
inc
in
cmp
dec
push
xchg
out
or
ins
popf
loop
mov
inc
shl
add
lods
xor
mov
and
pop
push
pop
xchg
xchg
jl
lock
repnz
(bad)
(bad)
fldcw
aas
cmps
clts
test
out
inc
pushf
sbb
cmp
xchg
test
mov
hlt
(bad)
ucomiss
cmp
rcr
lods
dec
ret
sbb
xchg
xchg
std
arpl
mov
(bad)
cmc
jb
cli
lds
stos
push
lods
lods
jecxz
mov
iret
push
pop
pop
jge
scas
inc
sbb
jnp
or
les
or
cdq
xchg
push
adc
lahf
in
pushf
lahf
shl
sbb
arpl
sbb
(bad)
adc
jnp
iret
push
loopne
rol
or
in
daa
adc
and
pop
inc
mov
repz
in
popf
mov
iret
sar
push
pop
push
in
pop
sub
push
daa
aam
sub
js
movs
inc
lods
rcpps
dec
icebp
sub
pop
mov
mov
mov
stos
(bad)
mov
fwait
sbb
clc
sbb
push
sub
scas
dec
xchg
mov
sbb
adc
(bad)
adc
cmp
sub
out
sub
jnp
mov
dec
push
mov
xchg
or
mov
dec
mov
push
imul
pop
jge
mov
or
test
jge
cmp
cli
mov
push
in
xor
int
imul
mov
das
sub
pop
mov
clc
call
adc
in
mov
mov
in
lods
icebp
mov
pushf
(bad)
call
sub
pop
adc
test
pusha
or
imul
or
cdq
ins
mov
ret
mov
in
sbb
push
jge
or
call
popf
push
(bad)
mov
pop
das
sbb
xchg
mov
je
jle
std
aas
or
fnstsw
fld
jmp
push
xor
test
inc
stc
jae
dec
jbe
fdivrp
inc
dec
mov
fwait
push
add
test
fcomp
(bad)
xlat
jnp
add
lods
mov
cmp
mov
sub
sub
xchg
out
std
(bad)
mov
adc
mov
lods
inc
pop
sbb
mov
popf
jmp
sub
and
pushf
sub
dec
dec
xchg
pushf
in
sub
int3
out
aam
jne
mov
dec
fimul
or
adc
or
and
test
pop
mov
xor
xor
jp
fucom
into
mov
lahf
jmp
inc
pop
pushf
mov
jae
test
dec
pop
mov
inc
and
inc
clc
fimul
pushf
cmp
jnp
sub
push
inc
xchg
lea
lods
or
mov
mov
js
sub
adc
out
pop
ins
sbb
mov
lods
jnp
sub
int3
push
push
jnp
movs
(bad)
dec
ret
inc
pop
ja
nop
pop
sub
pop
frstor
mov
movs
jno
loope
sbb
outs
ins
xor
or
repnz
je
test
cs
loope
dec
cdq
mov
les
scas
dec
shr
ucomiss
pop
(bad)
sbb
cld
mov
sbb
pop
test
arpl
sbb
mov
pop
shr
out
mov
in
cld
std
arpl
jp
jl
gs
gs
mov
in
sub
cli
outs
outs
(bad)
cmc
push
cmp
popf
(bad)
sbb
jmp
add
jmp
push
les
mov
adc
lods
cmp
stos
adc
rol
out
int
push
imul
outs
and
push
imul
sahf
pop
jl
fnstenv
or
in
xor
dec
movs
sub
push
adc
das
jg
fucomp
add
outs
mov
mov
shr
dec
outs
adc
fisttp
mov
dec
ffree
(bad)
cmps
xchg
add
retf
nop
out
mul
ins
cmps
sbb
dec
ss
outs
xchg
or
outs
aaa
sub
push
cmp
inc
push
lahf
sub
outs
imul
cs
dec
sbb
mov
jecxz
mov
pop
cld
cmova
jg
cs
call
punpcklwd
add
mov
int3
adc
jl
std
imul
(bad)
cmp
jge
popa
daa
data16
gs
and
ins
ret
or
iret
pop
push
out
lock
mov
sub
sub
cdq
clc
dec
mov
(bad)
loopne
(bad)
jmp
adc
pop
pop
retf
call
arpl
add
mov
sahf
dec
and
push
das
repnz
sti
sub
and
mov
cmp
adc
(bad)
hlt
xlat
repz
sbb
add
outs
ds
jnp
mov
xchg
mov
test
ins
repz
cmps
jl
outs
mov
and
mov
ss
jl
jmp
jne
push
cmp
mov
bound
add
(bad)
fistp
loopne
lods
push
adc
mov
test
adc
dec
ja
xor
imul
outs
mov
ret
xlat
out
ds
(bad)
pop
cmp
mov
xchg
sub
js
jge
inc
or
(bad)
cwde
in
int
mov
je
dec
xchg
inc
ins
ret
sahf
jne
pop
pop
or
sub
push
(bad)
aam
sbb
test
push
ror
jge
pop
fxch
jo
mov
add
mov
pop
or
dec
cmp
dec
mov
add
mov
xlat
pop
cmp
nop
pushf
stos
mov
add
and
ds
out
(bad)
mov
mov
jp
mov
adc
and
inc
xchg
ror
inc
aaa
into
mov
ret
repnz
pop
mov
aam
pushf
sub
jnp
add
in
cmc
pushf
fcomi
stc
icebp
jmp
loopne
cli
push
scas
xor
or
pop
mov
test
fidiv
(bad)
aaa
jecxz
(bad)
sub
xor
adc
add
int
xchg
daa
or
sbb
cmovle
push
sbb
pop
shr
xchg
jmp
add
test
(bad)
mov
adc
gs
test
jno
dec
cdq
(bad)
test
fstp
mov
out
(bad)
aas
ds
add
out
sub
jmp
xchg
xor
mov
sti
fdiv
mov
jmp
(bad)
push
(bad)
jmp
in
pop
push
fisubr
in
jg
out
pop
jle
repz
cwde
pop
cld
arpl
jmp
ins
or
fnstsw
outs
gs
push
retf
push
fwait
in
ret
inc
daa
enter
or
xchg
mov
sub
lods
adc
adc
pop
mov
mov
pop
or
or
xlat
jecxz
pusha
lea
add
xchg
sbb
leave
in
jl
sub
sub
movs
lods
mov
sub
push
or
scas
push
pop
mov
dec
sbb
add
sti
push
dec
mov
add
jns
mov
in
into
pop
ror
scas
mov
mov
lock
inc
out
jbe
gs
xor
inc
int3
xchg
fs
cmp
int3
jle
je
sub
pop
and
enter
dec
fisttp
push
mov
ret
mov
ret
aam
in
(bad)
jge
and
sahf
(bad)
push
fst
push
cmp
(bad)
sti
inc
hlt
int
rol
cmc
fcom
in
js
clc
int3
add
repz
add
sbb
lahf
adc
les
clc
call
mov
jmp
jle
pop
ud2
sahf
or
sub
sbb
adc
lods
push
fistp
inc
sub
(bad)
mov
mov
call
or
mov
in
aad
push
push
div
cmp
repz
lea
jmp
adc
add
xchg
push
clc
gs
sub
cmc
fcomp
sub
into
jl
push
xor
pop
js
mov
test
ins
imul
or
stc
fidiv
sub
mov
arpl
sbb
sub
addr16
stos
aad
ja
ret
push
pop
fdivr
ror
push
int3
dec
test
outs
xchg
inc
in
jp
jl
xchg
je
push
clc
push
lods
jg
jo
popf
jae
or
xchg
std
inc
ret
dec
lods
jbe
cmp
push
mov
shr
aas
sub
dec
xor
mov
cwde
in
add
cld
jnp
imul
imul
mov
test
or
push
jmp
in
pop
or
sbb
mov
mov
call
and
(bad)
in
rcl
sub
call
ins
xchg
(bad)
ret
call
cmps
mov
jecxz
std
cmp
clc
fucom
fbld
cmc
add
or
lods
movs
cmp
lods
jge
aam
push
or
inc
or
sub
pop
mov
xchg
out
test
mov
std
iret
lods
sub
in
ins
call
out
or
dec
into
push
xor
rcr
xchg
mov
adc
adc
dec
mov
dec
dec
lods
js
stos
cmp
into
movs
mov
inc
cmp
cld
pop
dec
cmp
cmp
fnstsw
mov
sub
adc
test
aaa
mov
add
in
mov
lds
mov
mov
push
fsubr
scas
cmps
push
mov
or
nop
sar
mov
test
mov
(bad)
or
ja
sbb
or
mov
jae
jmp
pop
(bad)
inc
movs
loope
xor
xchg
cmp
push
pop
sbb
fmul
lods
in
adc
in
lds
retf
lea
cs
cli
xor
cmp
pop
scas
pop
les
in
xchg
fdiv
scas
cdq
movs
adc
les
sbb
mov
push
sub
imul
(bad)
and
sub
pop
movs
aam
or
xchg
dec
inc
xor
lahf
cmps
dec
int
out
xchg
cmc
inc
mov
jle
sahf
push
js
cld
std
(bad)
int3
lea
jle
sti
enter
mov
sub
mov
jbe
add
pop
stos
fwait
jbe
test
shl
lods
cs
xchg
sub
dec
lahf
mov
jg
lea
dec
loop
and
dec
and
mov
pusha
ins
xor
inc
shl
int
dec
loop
pop
test
clc
scas
xchg
mov
mov
cmp
scas
(bad)
adc
inc
cdq
cmp
dec
jmp
(bad)
or
iret
cli
int
gs
jl
mov
lods
sbb
push
fiadd
mov
sub
rep
dec
jbe
mov
(bad)
dec
ja
cmp
xlat
xchg
(bad)
inc
pop
cmp
jecxz
sahf
xor
mov
fcom
outs
fwait
out
in
lds
cmp
mov
mov
xchg
mov
fcmovbe
and
in
repz
cmp
mov
adc
(bad)
daa
sbb
popf
test
ja
dec
stc
lods
cli
inc
adc
xchg
or
adc
mov
xchg
push
xor
or
and
jg
sub
loop
in
pop
add
lds
popf
in
mov
add
cdq
pop
jle
cwde
pop
xchg
je
push
and
adc
popf
mov
dec
mov
(bad)
xchg
enter
mov
jne
dec
jl
dec
jecxz
ss
sbb
push
jmp
mov
jbe
loop
or
pop
push
lods
add
sar
outs
imul
mov
(bad)
in
fnstsw
pop
in
mov
dec
mov
sub
and
dec
mov
mov
icebp
mov
fistp
push
cmp
enter
mov
adc
imul
adc
mov
int
push
xchg
mov
dec
repnz
xor
movs
js
stc
stos
push
or
popf
mov
xor
sti
dec
or
mov
jg
mov
lea
inc
bound
push
movs
test
mov
ds
loopne
mov
sbb
add
pushf
mov
pop
cmps
push
cld
mov
retf
pop
out
jecxz
mov
sbb
xor
iret
jns
pop
mov
mov
(bad)
sbb
mov
loopne
dec
mov
adc
inc
addr16
(bad)
push
inc
pop
icebp
lods
push
scas
ins
cmp
inc
sub
cld
imul
lods
outs
push
pop
in
int3
in
aas
test
ins
stc
gs
push
sub
push
mov
adc
in
inc
je
cmp
pop
lods
and
cdq
ror
out
popf
and
cmp
cld
int
stos
sub
dec
lock
stos
cld
xor
or
popa
mov
push
mov
hlt
pop
pop
pop
jge
sub
in
xchg
ret
not
rol
lahf
xor
pushf
jg
cli
movs
mov
mov
push
retf
dec
out
call
pop
pop
mul
fcomip
xor
mov
xor
std
out
repnz
or
test
test
movs
sar
jmp
shl
or
pushf
loop
retf
dec
cmps
in
aaa
cs
jge
cs
jne
repnz
or
call
inc
aam
out
xlat
fdivr
jb
push
int
xor
xchg
lock
dec
std
test
out
ja
aas
scas
jg
nop
cwde
in
mov
lods
jmp
jg
jg
mov
adc
ins
iret
imul
jg
mov
jns
or
movs
outs
std
jne
retf
movs
adc
shr
fsubr
repz
retf
pop
js
pop
jae
push
jmp
push
add
cmp
in
sti
adc
xchg
mov
retf
into
jge
sbb
ja
test
enter
xor
inc
mov
push
in
das
ins
leave
lods
pop
dec
jmp
cmp
int
cmps
push
dec
not
(bad)
loopne
jns
dec
cmp
mov
in
push
outs
dec
(bad)
lea
jae
in
cwde
test
cwde
stos
(bad)
pop
call
mov
mov
dec
jecxz
ret
movs
xor
mov
cli
sub
cmp
xor
das
sub
sbb
inc
fmul
cmp
xchg
imul
call
es
das
and
out
jno
adc
ret
lahf
hlt
or
jns
stos
in
test
mov
mov
(bad)
outs
(bad)
std
xor
or
jne
arpl
lods
mov
xchg
or
or
dec
inc
mov
add
repnz
sub
pop
xlat
fs
push
jmp
sub
ins
imul
out
std
mov
jns
dec
or
lahf
add
cli
or
shr
push
cmps
cmp
pop
dec
sub
mov
popf
push
push
xchg
stos
in
mov
lea
sbb
mov
add
mov
mov
(bad)
loope
mov
or
fisttp
outs
pop
mov
or
mov
sub
fsubr
out
mov
int3
jl
cmp
xor
push
or
adc
pop
retf
jge
dec
hlt
lea
and
sbb
mov
push
cmp
test
xchg
sbb
outs
mov
jg
mov
loop
daa
mov
sbb
rcl
sbb
arpl
mov
retf
int
fmul
mov
dec
and
sbb
dec
fdivr
in
sbb
cld
out
(bad)
jg
loopne
jo
mov
das
dec
sub
sti
aam
inc
loopne
mov
int3
in
sub
cs
add
lock
adc
ret
and
cmps
dec
and
das
inc
lods
repnz
jg
xor
and
jmp
outs
imul
es
or
inc
add
or
pop
scas
mul
ins
mov
mov
iret
xchg
popf
jl
xchg
cmp
cmp
in
movs
push
push
sub
(bad)
mov
jecxz
fidiv
jmp
cmp
cmp
ret
sub
shl
mov
adc
sbb
adc
outs
leave
pop
int3
fisub
dec
push
inc
std
std
adc
mov
pop
jno
aam
add
popf
and
mov
lock
sub
stc
call
push
xor
sub
aaa
leave
ins
jl
push
mov
lods
xchg
sub
jp
cld
cmp
bswap
dec
fmul
adc
mov
enter
outs
aad
stos
repz
inc
inc
cld
cmps
(bad)
sub
sub
leave
cli
adc
pop
or
scas
sub
mov
aas
jno
das
daa
imul
sbb
ss
jle
ror
sub
sub
mov
dec
push
dec
int
sub
shr
sbb
pop
jmp
mov
shl
out
add
adc
sbb
dec
mov
test
sbb
pop
dec
arpl
in
out
dec
push
stc
push
rol
sbb
mov
sub
nop
aas
shr
mov
ror
rol
sub
add
imul
fsubrp
push
ins
xlat
pop
xchg
(bad)
adc
cmp
cld
mov
add
sub
pop
jge
and
or
call
(bad)
cs
scas
(bad)
fsub
sub
outs
cwde
add
mov
inc
outs
pop
int3
stc
fild
repnz
push
jne
gs
sub
mov
mov
fcomp
fcom
cwde
cmp
daa
ds
adc
dec
ins
ins
bound
sub
xlat
icebp
sub
loope
into
popf
retf
fmul
mov
out
mov
push
mov
out
dec
mov
mov
fucom
outs
ins
xchg
jmp
xchg
je
xor
cmp
out
shl
lea
pop
loope
dec
pushf
push
popf
mov
jmp
fisubr
gs
and
cmp
pop
rcr
int3
xchg
ret
popa
inc
clc
and
jge
test
mov
push
pop
lods
test
ds
call
retf
mov
fmul
mov
pop
std
pop
jns
bound
dec
jle
or
sub
push
cld
mov
xchg
jecxz
into
iret
sub
outs
sbb
cli
xor
in
in
mov
push
cli
lahf
call
popf
mov
stos
or
es
inc
adc
inc
out
xor
cmps
in
dec
outs
pop
mov
cwde
out
mov
sbb
repnz
fwait
jl
add
in
cmp
mov
sbb
lods
cdq
xor
fsubp
out
icebp
cmps
retf
mov
xchg
(bad)
mov
mov
vunpckhpd
vmovups
out
test
push
pop
fist
shl
pop
ins
ins
add
jge
jmp
out
ror
popf
push
fwait
or
push
mov
outs
fisttp
adc
aaa
jle
mov
imul
mov
jbe
std
ficomp
std
int3
xchg
pushf
ss
mov
movs
jl
scas
in
pop
nop
aas
jmp
cmp
sub
inc
fcomp
add
sub
dec
inc
das
pop
inc
jecxz
jmp
add
fidivr
je
gs
cmps
ficomp
inc
fmul
push
mov
mov
arpl
dec
ins
cmp
cmps
sub
rcl
dec
xor
(bad)
sub
stos
sub
fucom
lods
xchg
sets
(bad)
pop
xchg
cmp
and
xchg
push
movs
dec
jne
xchg
pop
adc
xchg
aam
sbb
dec
mov
adc
sbb
or
fmul
or
clc
jne
mov
mov
lds
or
pop
and
das
sub
dec
xor
xor
sub
sub
sbb
sbb
dec
add
push
ret
repz
jecxz
ror
call
in
inc
and
outs
sbb
inc
xor
dec
xor
mov
or
in
je
jl
outs
fwait
mov
fistp
dec
sub
mov
movs
in
out
mov
cmps
int
cmp
outs
jp
xchg
pushf
cmp
test
es
aam
and
ret
repnz
lds
out
adc
add
adc
mov
mov
stc
call
cmp
hlt
pop
scas
gs
test
in
in
mov
dec
add
cmp
ins
xchg
fld
jae
je
sbb
jl
mov
aam
aam
cdq
int3
mov
das
sbb
mov
and
mov
pop
cdq
dec
xor
mov
inc
and
sbb
or
xchg
or
popf
mov
imul
ds
pop
mov
(bad)
pop
fild
adc
stc
in
pushf
js
jle
mov
pop
fsubr
into
int
fwait
mov
mov
push
outs
cmp
ins
adc
sub
mov
mov
repz
cmp
dec
ins
pop
daa
push
mov
sahf
add
cmp
into
aad
mov
push
mov
mov
xor
cmp
jbe
lea
dec
jge
or
mov
std
jge
popf
cwde
jns
adc
frstor
call
jmp
repnz
or
(bad)
mov
sub
pop
movs
xchg
sub
scas
scas
sub
mov
and
imul
adc
and
mov
adc
inc
(bad)
hlt
in
fmul
imul
aas
push
jo
pop
lea
fmul
retf
or
hlt
jmp
jg
jo
add
out
pushf
xor
mov
int3
mov
adc
icebp
je
cli
pop
sub
jne
xchg
mov
daa
stos
push
jo
jecxz
nop
push
int3
(bad)
out
add
jp
pop
add
sbb
mov
pop
lock
mov
popf
cs
fwait
ret
xor
adc
sbb
jae
movsx
in
inc
sahf
jmp
repnz
add
push
cmc
or
(bad)
fst
push
aad
rcr
fdivrp
ins
fistp
push
mov
dec
xor
xchg
jmp
shr
and
les
sbb
fsub
pop
xchg
mov
test
xor
jg
mov
sbb
std
and
(bad)
pop
(bad)
lods
jecxz
lea
dec
call
mov
or
lods
or
outs
pop
add
jo
push
fs
mov
test
and
repz
int
(bad)
and
int3
add
popf
lea
xchg
cmp
mov
mov
sub
repnz
sub
fimul
das
push
pop
dec
xor
test
pop
outs
and
scas
out
mov
loop
pop
dec
fsub
or
sub
pop
ficomp
jg
lock
fidivr
loop
scas
mov
mov
das
jmp
pop
jle
mov
push
dec
dec
addr16
mov
repz
pushf
adc
dec
mov
and
mov
push
shl
sbb
imul
call
(bad)
cwde
mov
(bad)
and
adc
mov
pop
push
(bad)
out
test
dec
dec
mov
pop
bnd
pushf
call
sub
in
outs
mov
fmul
lods
fsubr
dec
xchg
dec
cmp
or
jle
pop
loop
(bad)
sbb
fimul
xchg
std
test
jb
das
ins
mov
int
sbb
lods
addr16
mov
sbb
rep
jmp
cmc
cmps
(bad)
pop
adc
mov
mov
adc
ins
add
sbb
mov
sub
dec
ins
in
stc
pop
pop
in
test
bound
leave
pop
pop
std
lods
fnsave
mov
and
xchg
pop
cmps
add
icebp
ffree
pop
push
sbb
jno
stos
(bad)
and
lods
out
into
test
(bad)
mov
push
in
les
mov
push
(bad)
in
dec
pusha
inc
in
aas
inc
shl
in
jecxz
mov
inc
mov
xor
leave
sbb
ins
loop
xchg
dec
sub
fsubp
shl
int3
je
jecxz
inc
add
arpl
ds
out
dec
adc
mov
pop
sub
mov
mov
jge
cmp
ins
sbb
sub
jg
xor
cli
das
cdq
cld
mov
sub
je
hlt
iret
inc
stos
sub
fld
and
fsubp
cmp
frstor
stos
or
mov
mov
ins
cld
xor
ins
push
adc
mov
dec
in
dec
cli
shr
xor
outs
mov
cwde
mov
ins
adc
scas
adc
scas
imul
mov
cld
scas
inc
das
sbb
jnp
xlat
ins
pop
loopne
fs
sub
lods
retf
push
repz
mov
pop
sbb
xchg
scas
aaa
dec
dec
sbb
or
outs
in
jae
push
cmp
jmp
data16
lods
pop
mov
cmp
and
aam
call
sub
fmul
gs
in
stos
push
push
cmp
imul
cmp
mov
int
pop
inc
imul
mov
push
add
cmp
lods
cmps
xchg
lds
xchg
mov
loop
cmp
push
in
mov
xchg
mov
adc
adc
into
mov
add
and
sbb
inc
or
stc
das
out
add
(bad)
lods
data16
push
adc
pop
ret
jge
sub
sahf
cmp
or
push
push
test
inc
mov
hlt
int3
int
push
dec
ins
cmp
xchg
xor
lods
and
xor
icebp
dec
jp
dec
test
and
mov
outs
iret
je
push
mov
mov
shr
dec
lods
leave
lods
lea
sti
int
sub
push
sub
mov
sub
gs
enter
mov
cwde
adc
and
and
add
js
lea
sub
sbb
lahf
dec
xlat
lea
push
push
cdq
jns
std
test
xchg
or
int3
std
sbb
jle
or
shl
lahf
rol
mov
inc
pop
scas
test
and
fcomip
lds
imul
and
dec
mov
popf
pop
push
in
pushf
pop
sar
movs
enter
jge
std
sub
das
mov
add
in
(bad)
cmp
ins
dec
or
test
outs
or
stos
lahf
lods
cmp
retf
jo
jno
mov
cmp
gs
sbb
mov
and
jbe
popf
push
(bad)
and
adc
dec
cld
xchg
sbb
gs
ret
mov
jmp
mov
mov
ss
inc
mov
push
mov
or
pop
ins
stos
stc
sahf
fist
xor
and
pop
out
dec
sbb
repnz
push
dec
or
fwait
ja
mov
test
imul
int3
int
sbb
(bad)
hlt
xor
jae
clc
(bad)
sub
inc
dec
pusha
cdq
push
lods
ins
add
cmp
repz
aas
das
inc
aaa
imul
mov
mov
scas
out
arpl
mov
mov
pusha
xor
push
lods
dec
popf
fild
test
dec
test
mov
loope
lods
int3
cmp
repnz
push
bound
jecxz
cmp
gs
or
xor
in
or
je
in
mov
sub
jp
add
or
mov
cmp
les
lods
jmp
pop
popa
pop
bound
push
pop
int3
sbb
xchg
sbb
xchg
lea
xor
mov
lods
jne
movsx
inc
lods
es
leave
ret
in
dec
add
cmp
loopne
sub
out
push
mov
cmp
int3
out
mov
mov
pop
xor
call
jecxz
retf
out
inc
xor
mov
mov
xlat
add
hlt
lock
adc
dec
ret
sbb
inc
ins
add
call
mov
scas
mov
add
fmul
cdq
jbe
pop
dec
fld
fstp
shr
mov
in
jbe
call
cmp
bt
in
mov
dec
sub
cmc
xchg
loopne
add
mov
or
mov
mov
cli
cli
das
add
sub
int3
ja
fdiv
clc
xchg
ds
dec
add
and
into
leave
dec
jae
or
in
bound
cwde
xchg
xor
push
jbe
push
mov
int
popf
movs
mov
popf
test
sti
loop
retf
lea
bound
sub
ds
jo
sub
sub
imul
push
xchg
das
out
popf
frstor
aam
sbb
add
pop
cmp
popf
das
xchg
jg
jmp
sub
mov
in
adc
ja
push
pop
scas
out
push
adc
and
inc
test
les
sbb
push
jo
mov
dec
or
lea
fcomip
shl
or
div
mov
cmc
es
pusha
sbb
mov
or
xchg
jecxz
fwait
or
ins
rcl
int
aam
push
xlat
or
dec
arpl
lods
or
stos
ins
outs
xchg
mov
dec
add
xchg
mov
mov
push
xor
mov
cs
dec
lds
mov
xchg
jno
cdq
clc
dec
lods
mov
stos
jecxz
mov
pushf
int3
adc
inc
dec
call
(bad)
cmp
pop
addr16
adc
dec
xchg
mov
mov
jo
xor
mov
loop
fucomp
or
jmp
outs
push
mov
into
cmp
outs
jl
xchg
icebp
lahf
xchg
sub
jp
les
xchg
xor
cmp
sub
mov
(bad)
out
push
leave
ja
jl
call
xor
push
adc
in
pop
push
pop
cmp
xchg
je
les
mov
ja
mov
push
jmp
out
out
push
jns
imul
jl
cmps
and
dec
push
fs
nop
pop
mov
(bad)
pop
movs
jl
xlat
pop
imul
xlat
les
mov
jecxz
adc
mov
cmpxchg
sub
mov
fcomp
and
pop
rol
cmp
pushf
xor
xor
enter
into
les
in
in
stos
inc
or
fmul
cmp
sub
lea
sbb
or
int
ds
sub
scas
leave
stc
ret
xchg
mov
inc
dec
fdivr
sub
xor
add
dec
cmp
cs
popf
lods
into
pop
pop
call
push
adc
cmp
cli
adc
inc
or
sbb
sbb
retf
in
push
dec
and
xor
lods
push
int3
mov
pushf
fsubr
pop
xor
call
cmp
adc
and
retf
cmps
aad
push
mov
pop
and
jnp
sub
push
mov
std
sub
mov
std
xchg
popa
cmp
lods
cld
mov
push
in
push
xchg
jle
xchg
mov
add
std
int
push
xchg
and
les
dec
ret
fldcw
jp
icebp
dec
xchg
inc
mov
bound
mov
xor
mov
dec
mov
ret
inc
nop
(bad)
jge
jmp
lods
dec
sbb
fbstp
sbb
loop
sub
lea
sahf
frstor
ja
pop
int3
scas
adc
xlat
jge
out
cmovle
outs
push
xchg
pop
jb
mov
mov
stos
cmp
int3
and
xor
pop
cmp
dec
sub
outs
lods
sbb
or
sti
lods
cdq
push
enter
mov
mov
mov
aas
inc
aam
pop
fld
cmp
mov
fcomp
int3
mov
ds
xor
call
mov
data16
mov
jge
dec
call
ds
or
mov
sub
lods
dec
push
xchg
in
mov
mov
pusha
xchg
add
push
mov
bound
and
cmp
jmp
sbb
ja
scas
xor
push
test
mov
adc
pop
in
jl
sub
inc
pop
mov
mov
in
sti
dec
aad
and
pushf
dec
jl
inc
jns
std
jl
mov
enter
or
imul
ror
(bad)
pop
je
inc
cmp
retf
pop
cmps
xchg
mov
mov
xchg
inc
dec
jle
adc
mov
fdiv
sbb
(bad)
xchg
int
in
test
scas
or
into
sar
xor
js
repz
mov
mov
stc
clc
or
push
sub
sub
mov
dec
push
sbb
and
stc
(bad)
add
fwait
cmp
fist
push
dec
pop
call
pop
or
retf
xchg
std
pop
arpl
hlt
int
repz
ror
add
fdivr
jge
add
jecxz
int3
or
in
sahf
mov
jg
mov
arpl
sets
sub
cmps
ins
sbb
or
mov
pushf
mov
mov
in
ins
inc
clc
(bad)
dec
data16
ret
mov
push
sub
rol
pop
sub
jl
dec
enter
pushf
and
xor
dec
mov
lods
sar
sub
mov
add
je
lea
cmp
mov
std
pushf
jmp
push
and
adc
in
ja
xchg
sbb
xchg
mov
cmp
dec
out
sbb
xchg
clc
xor
or
pushf
pop
pushf
ret
scas
jecxz
xchg
lods
mov
mov
cmp
leave
sahf
cmp
add
jp
mov
pop
mov
or
test
leave
(bad)
(bad)
mov
adc
mov
mov
mov
sbb
cmp
pop
jnp
shl
cmp
cdq
mov
and
jnp
lods
mov
cld
jge
xor
test
gs
jl
fld
and
into
or
dec
lahf
into
js
dec
imul
inc
ins
mov
fild
sti
fidiv
movs
push
sub
xor
add
inc
ror
fisubr
push
cs
lods
xchg
or
aas
sahf
push
adc
scas
jl
dec
cmc
popf
fdivrp
ins
mov
(bad)
cld
rcr
inc
mov
push
cli
xor
or
fisttp
cmp
jmp
mov
xor
add
mov
dec
push
pushf
cli
and
push
cmp
imul
jne
mov
mov
ret
jmp
outs
adc
jg
jle
inc
pop
inc
push
push
call
stos
cmp
movs
sbb
pop
in
cld
int3
aad
and
xor
scas
pusha
fcomp
ds
movs
mov
stos
enter
dec
or
add
push
sbb
mov
lahf
fs
ins
jl
dec
pop
adc
lods
cmp
(bad)
les
sar
push
cmp
cmp
lods
push
xchg
cmp
mov
les
pop
enter
pop
cmps
stos
jmp
fdiv
sbb
jge
sbb
mov
pop
xor
data16
fistp
arpl
add
xchg
cmp
ins
cld
mov
rcl
xchg
xor
int3
(bad)
data16
xlat
pushf
sub
jae
adc
lahf
lock
and
push
sub
mov
test
fsub
and
test
sbb
pushf
jl
test
pop
sub
push
mov
cmp
hlt
fdivr
cdq
ins
pushf
sbb
push
outs
push
ds
mov
mov
mov
fwait
pushf
sbb
cmc
cmp
mov
or
(bad)
fnstsw
imul
jmp
jmp
ss
mov
int3
in
stos
mov
jl
(bad)
scas
in
inc
int3
pop
and
test
(bad)
stos
(bad)
add
push
adc
iret
jle
xchg
cmp
cmps
cli
movs
lods
jg
aad
out
push
add
iret
sbb
sub
dec
or
xchg
aas
jnp
and
(bad)
sti
pop
cmp
adc
push
sbb
cwde
sbb
push
push
in
test
ret
mov
sub
pop
int
imul
or
jge
mov
mov
outs
xchg
pop
ret
pop
adc
stc
aaa
pushf
pop
cmp
lods
inc
ins
push
bound
cmps
lds
stos
aam
fadd
jb
or
pop
aas
out
imul
jmp
cmc
std
xor
out
dec
ds
sbb
stos
rcl
or
sbb
pushf
(bad)
daa
icebp
(bad)
std
les
mov
dec
and
or
and
rcr
xchg
cmps
sbb
xchg
es
fstp
fsubr
adc
in
dec
cld
repnz
ja
push
and
sub
in
(bad)
cld
jo
in
sub
rcl
add
into
bound
dec
mov
adc
nop
lods
repnz
xchg
jecxz
rol
in
sbb
mov
rcr
add
xlat
jmp
xor
leave
mov
ds
push
sbb
jg
cmp
arpl
push
int
movs
sub
(bad)
jmp
jecxz
jmp
push
sbb
sbb
add
dec
add
sub
xchg
in
mov
retf
jne
in
sub
dec
retf
fstp
cmp
jg
mov
cmps
out
mov
div
mov
movs
push
fcmovne
out
pop
in
ins
push
int
dec
cmps
shl
cmp
pushf
jl
shr
mov
mov
call
in
sbb
jae
out
adc
ins
aaa
leave
int3
scas
sub
out
mov
pop
popa
in
in
scas
dec
sub
mov
dec
nop
pop
pop
dec
mov
add
out
ins
dec
stc
push
sbb
mov
stos
pop
ins
xor
jns
mov
push
mov
ret
not
and
mov
js
cmp
or
cmovb
(bad)
fld
xchg
or
or
test
jge
jae
and
add
lods
cwde
mov
in
aad
fisttp
jl
or
dec
gs
or
aas
xchg
xchg
and
mov
std
cdq
push
pop
jae
mov
sbb
popf
cmc
push
push
nop
aad
es
pushf
(bad)
(bad)
lods
add
xor
gs
jl
rcr
bound
(bad)
add
icebp
(bad)
fmul
in
sub
int
mov
adc
js
iret
cmp
pushf
mov
stc
movs
dec
jno
ss
imul
pop
jl
push
jge
lea
inc
jbe
jmp
data16
mov
dec
into
pop
inc
imul
sub
jne
call
ins
push
popa
and
out
sub
dec
sbb
(bad)
in
and
sbb
int
aaa
in
cld
sub
jae
jne
pop
cmp
mov
in
idiv
xchg
sbb
or
call
test
adc
pop
(bad)
fmul
fadd
test
cdq
xlat
test
add
(bad)
adc
outs
jle
mov
and
xlat
and
or
dec
mov
adc
mov
jno
stos
lds
in
mov
aad
leave
adc
xchg
xchg
sub
sbb
test
push
xchg
add
test
lds
(bad)
in
imul
bound
sub
jns
daa
int
call
jmp
dec
mov
push
xchg
jne
das
push
lea
call
inc
mov
std
sbb
cld
sti
ins
dec
ins
cld
lods
xlat
mov
push
and
(bad)
xchg
ins
mov
lahf
mov
(bad)
xlat
out
je
sub
nop
test
dec
cwde
pop
sbb
lea
jmp
imul
sbb
or
ret
lods
cmp
sub
cmp
lock
push
push
movsx
cmp
cmp
xor
hlt
mov
popf
fsubr
mov
sbb
out
imul
mov
(bad)
in
cli
rol
out
jae
pop
test
sub
rol
jl
pop
ja
inc
jl
cmp
adc
push
cmp
sbb
sbb
sbb
mov
jecxz
mov
mov
in
or
sbb
push
or
inc
adc
ds
sbb
in
(bad)
push
minps
cmp
inc
outs
pop
or
fmul
fwait
in
cs
mov
or
cmp
sbb
pushf
sub
pop
imul
daa
lea
pop
lahf
lea
mov
dec
popa
push
inc
js
inc
push
cmp
or
js
jo
mov
lods
push
hlt
inc
or
mov
xchg
aad
lock
daa
inc
inc
push
sbb
cmp
idiv
fist
enter
push
xor
jle
adc
sbb
imul
jae
cmc
inc
fsubr
jge
fstp
cmp
dec
mov
int
or
das
xchg
jb
inc
fmul
cld
sbb
mov
add
xchg
mov
adc
call
fidivr
dec
call
inc
jmp
mov
adc
scas
push
mov
dec
add
dec
scas
outs
cld
aas
jne
mov
jnp
xchg
in
dec
cwde
inc
ds
jns
push
sbb
dec
pop
sub
inc
(bad)
in
pusha
scas
aad
popf
and
cmp
mov
js
xchg
and
add
mov
ja
xchg
je
lods
lea
adc
mov
mov
cmp
push
mov
pop
lahf
and
mov
push
leave
movs
push
ret
inc
cmc
mov
test
in
and
std
popf
dec
mov
sbb
push
adc
sbb
fstp
mov
push
adc
mov
dec
(bad)
shl
ins
push
jge
inc
call
mov
mov
imul
ret
ins
adc
imul
or
pop
in
mov
call
cmps
xchg
xor
jns
push
daa
ret
push
inc
lods
or
mov
jecxz
into
jmp
cmp
(bad)
jae
add
dec
out
lea
movs
and
rcl
cmp
aaa
or
loopne
mov
push
imul
xor
in
xor
int
sub
adc
push
rcr
sub
ins
mov
ins
cs
or
jmp
jg
add
or
sub
jnp
pop
in
(bad)
xchg
pop
jae
dec
mov
mov
enter
cmp
ror
jae
or
loopne
jle
out
adc
mov
inc
std
mov
add
ds
(bad)
adc
jg
xchg
js
dec
cdq
mov
lods
dec
adc
push
push
push
rcr
inc
and
mov
sbb
fnstcw
cmp
xor
dec
xor
jo
dec
in
or
paddusw
sbb
nop
mov
jle
out
pop
inc
sub
nop
das
cwde
lock
inc
loopne
dec
pop
push
loopne
mov
sub
ds
add
shl
mov
mov
cmp
leave
frstor
dec
test
add
and
fnstenv
lea
jbe
pop
je
cmp
sbb
push
and
cli
clc
aad
cmps
dec
cmp
(bad)
or
pop
push
mov
rcl
and
fprem
push
cld
sbb
cld
(bad)
mov
sub
in
call
fs
in
in
ret
in
mov
jae
inc
dec
pop
cmp
add
pushf
fdivr
and
call
pushf
sar
sti
or
fmul
cs
inc
or
xor
sbb
mov
arpl
lods
cwde
ror
push
test
inc
cmp
add
jle
or
movs
mov
inc
aam
(bad)
(bad)
call
int
(bad)
out
dec
jnp
or
sbb
out
xor
dec
dec
dec
enter
movs
jmp
(bad)
fsubr
jae
cmp
jge
sub
push
ins
or
scas
pushf
popf
(bad)
jmp
into
(bad)
sbb
or
ins
sub
push
retf
jmp
sub
imul
data16
dec
imul
xchg
out
push
iret
mov
add
scas
jle
mov
call
shl
sub
add
adc
pop
in
popa
out
lods
fdiv
mov
mov
add
or
call
push
out
mov
mov
dec
std
mov
scas
ins
push
and
cmps
dec
fdiv
mov
dec
and
iret
ds
in
and
and
lods
xchg
push
aas
mov
stos
out
mov
xor
jne
xor
or
ja
fcomp
and
fsubr
ret
in
dec
cld
push
jbe
mov
xor
(bad)
scas
outs
adc
aas
add
push
mov
stos
push
ins
dec
pop
movs
jle
movs
gs
xchg
cmp
int
in
ins
or
mov
sub
in
cmc
mov
dec
(bad)
sbb
int3
cmp
mov
and
stc
enter
ror
xchg
(bad)
adc
cmp
dec
jb
dec
retf
sub
add
xchg
(bad)
ins
(bad)
jge
dec
pop
pushf
dec
lea
ja
xor
dec
jb
add
movs
in
and
sbb
and
retf
pop
sub
bound
mov
xchg
mov
dec
arpl
ror
push
fisttp
outs
add
mov
int
pop
out
sbb
cli
dec
xchg
fwait
xchg
jl
int3
mov
scas
gs
repz
sbb
jns
or
(bad)
jg
inc
fstp
jmp
lock
leave
mov
sbb
pop
pop
or
and
cmc
jb
jge
icebp
sbb
test
cmp
rcr
push
or
fstp
ror
push
inc
adc
sahf
sbb
mov
mov
jge
clc
(bad)
std
(bad)
rcr
(bad)
popf
sbb
repz
cmc
mov
dec
into
xchg
icebp
mov
aad
loope
into
ins
sar
(bad)
lea
push
retf
loope
jecxz
fstp
inc
lods
push
sbb
mov
int
pop
fsub
ror
das
aas
mov
push
add
dec
gs
pop
mov
sbb
pop
mov
in
retf
dec
outs
mov
into
js
sub
push
stc
push
mov
mov
dec
pushf
fsubr
jl
repz
or
xchg
pop
clc
mov
cmp
sbb
pop
fs
push
fdivr
pop
in
(bad)
aad
int3
(bad)
std
mov
int3
sbb
ja
sbb
in
in
pushf
lods
jp
mov
pop
outs
mov
cmc
push
pop
cdq
adc
push
dec
and
ficom
mov
mov
mov
sahf
fcmovne
and
sub
je
scas
das
pop
loop
cmp
fs
outs
dec
stos
mov
or
loope
adc
and
dec
dec
dec
dec
jnp
bound
add
(bad)
(bad)
pushf
push
mov
mov
inc
mov
mov
pop
and
inc
mov
out
jb
or
jmp
pop
into
aaa
lds
les
mov
int
sbb
ss
xchg
inc
mov
jge
add
and
dec
test
int3
std
jb
mov
and
fdiv
cmps
ss
inc
sbb
dec
sub
add
hlt
adc
cs
push
adc
sub
dec
xchg
ret
test
clc
adc
outs
test
or
out
scas
movs
(bad)
aad
movs
jmp
sub
pop
sub
popf
enter
cmp
int3
jns
push
push
add
mov
pop
pop
mov
cmps
mov
jg
jmp
push
aas
or
(bad)
aas
pop
dec
sbb
fs
and
mov
mov
fbld
or
cld
cld
(bad)
shr
sbb
or
cmps
sbb
mov
shl
test
mov
sbb
jg
(bad)
pop
xchg
inc
outs
aad
gs
sub
or
xor
dec
cmp
or
mov
ds
mov
pop
loopne
cmc
cwde
(bad)
pop
lahf
mov
lock
cs
xchg
mov
mov
add
das
adc
mov
sahf
test
sub
out
add
shl
and
xor
js
shl
es
jg
sub
dec
int3
push
outs
movs
out
test
sub
fwait
(bad)
in
shl
cmp
jnp
xchg
out
scas
sub
sbb
mov
outs
or
mov
cli
pop
loopne
add
jmp
cmp
enter
dec
adc
push
jecxz
mov
or
adc
sub
scas
sub
cmc
aas
cmp
into
cwde
mov
fadd
test
scas
jo
popf
and
scas
inc
sbb
xchg
pusha
inc
mov
mov
add
cmc
repz
fdivr
cmps
icebp
cmp
push
ror
scas
dec
xor
imul
lods
fdiv
out
into
pop
cmp
(bad)
and
jle
dec
cmp
pop
out
in
fmul
into
sub
fcom
(bad)
push
test
(bad)
mov
loopne
ins
int3
pop
das
loope
stc
sbb
aas
stos
rcr
pop
mov
push
add
dec
add
ins
retf
in
lds
imul
pop
(bad)
push
jnp
adc
popa
fisttp
mov
(bad)
xchg
imul
pop
mov
jns
loope
fimul
data16
inc
sbb
inc
push
neg
cli
into
add
dec
call
fsubr
or
fbld
cmc
mov
rcr
mov
mov
int
fst
in
stos
cmps
jae
call
jmp
je
aad
jbe
outs
loopne
iret
mov
scas
xchg
pop
mov
adc
inc
push
adc
into
test
mov
pop
pushf
out
inc
lods
das
mov
in
fistp
je
cs
mov
imul
movs
clc
lahf
mov
scas
add
dec
and
dec
jecxz
ins
push
jecxz
pusha
frstor
add
fld
add
sar
das
(bad)
aas
cmp
jbe
loopne
ret
adc
adc
sbb
mov
call
repz
cmp
inc
jns
pop
adc
pop
inc
push
outs
adc
daa
jbe
cmp
mov
(bad)
lods
jnp
outs
add
adc
mov
inc
mov
sub
mov
and
sbb
test
sbb
or
test
arpl
test
rol
int3
mov
xlat
sub
adc
cmc
stc
out
pop
mov
mov
xchg
dec
shl
sub
dec
xchg
test
sar
push
push
loop
imul
or
int
adc
cmc
enter
push
fst
das
jg
pop
dec
(bad)
sub
pop
and
mov
fimul
std
enter
xor
sub
in
(bad)
and
jnp
or
enter
jl
test
int3
cmc
int3
add
xchg
mov
rcr
xor
mov
sbb
mov
pop
dec
or
leave
xlat
jne
and
xor
les
ins
mov
gs
sti
push
xlat
adc
fsub
sbb
adc
in
pop
push
rol
add
ror
xchg
mov
leave
in
aam
int3
out
ins
int3
enter
or
add
cwde
loopne
(bad)
fadd
popf
call
lods
and
repnz
dec
adc
test
jnp
push
pushf
fsub
scas
push
into
in
inc
scas
test
push
adc
ds
into
sub
dec
pushf
scas
pop
sub
lahf
jb
out
jo
loop
ja
or
jmp
jl
and
xor
loopne
popf
cmp
outs
int
ja
into
das
jae
popf
imul
or
sub
das
ret
jo
and
lods
cdq
retf
sub
mov
int
lds
inc
fstp
fiadd
std
mov
fisubr
hlt
fld
xchg
fnstcw
shr
add
stc
repz
pop
in
mov
mov
popf
jnp
(bad)
out
in
push
pop
fnsave
xlat
sub
icebp
or
push
push
int
imul
cmp
aam
mov
mov
int3
shr
add
aad
in
das
cld
in
or
leave
es
(bad)
out
adc
fs
mov
in
ss
ins
pop
cmp
adc
sub
les
into
and
pop
fadd
jmp
pop
retf
xor
es
jge
pop
dec
hlt
mov
movs
mov
dec
adc
adc
cmp
mov
sbb
add
cmp
sbb
add
int3
pushf
and
lods
cmps
push
popf
push
add
pop
mov
dec
je
lods
adc
fisub
jbe
jle
cmp
or
sbb
push
bnd
cmp
in
jbe
xor
aam
jns
cs
scas
sub
cwde
xlat
addr16
xchg
mov
ret
in
in
in
jge
add
ins
inc
jo
dec
jecxz
jge
xor
in
sar
(bad)
fdiv
sub
not
or
(bad)
xor
ins
pop
mov
inc
movs
pushf
out
shr
adc
fidivr
lea
mov
sub
inc
dec
cld
popf
int3
and
push
lods
ins
sbb
ins
dec
jo
out
aam
sahf
in
jno
dec
rcr
mov
shl
imul
sub
add
mov
pusha
test
jno
adc
inc
push
pop
mov
shl
sub
pop
dec
or
sbb
ins
sbb
ret
lea
jmp
or
mov
ret
lods
js
int3
enter
shl
mov
call
int3
mov
int3
sub
push
push
test
(bad)
ror
sub
mov
adc
int3
mov
mov
mov
push
mov
loope
push
mov
cs
std
sub
pop
shr
pop
mov
jne
mov
xchg
scas
lods
cmp
or
int
pop
sub
pop
push
or
fwait
outs
(bad)
imul
fwait
mov
pushf
sti
mov
xchg
add
call
popf
add
loopne
data16
mov
scas
call
in
fcom
mov
xor
mov
push
daa
sub
dec
cwde
lea
test
fwait
sub
inc
cmp
in
dec
xchg
pop
popf
dec
int
jnp
sub
scas
call
cmp
int
repnz
icebp
pop
fdivr
jno
sub
sbb
iret
xchg
fldcw
cmp
js
or
or
jns
loop
inc
cld
pop
jo
mov
sub
(bad)
lods
sub
pusha
call
sbb
jmp
scas
sbb
xor
mov
fsubr
nop
dec
adc
cli
dec
loope
cmp
repnz
ficom
fdiv
enter
and
sbb
rcr
test
int
(bad)
in
mov
jb
rol
out
mov
mov
jo
dec
sbb
cwde
pushf
fcomp
lods
adc
enter
mov
ins
sbb
xchg
fdivr
mov
sbb
inc
test
hlt
shr
dec
sbb
(bad)
xchg
lea
add
iret
retf
or
pop
pop
sub
cmp
add
jge
aam
sahf
cld
mov
pop
bound
fisttp
pop
sar
ret
adc
jnp
mov
push
mov
(bad)
push
dec
fcmovnu
dec
pop
test
div
dec
jl
dec
ins
imul
inc
jno
(bad)
fcom
(bad)
sbb
in
add
loopne
fimul
pop
lods
jmp
sbb
fsub
mov
enter
sbb
mov
aad
pop
dec
sub
mov
out
mov
push
in
js
int
fsub
or
xchg
or
dec
rol
inc
cmp
popf
jmp
ror
xchg
mov
adc
loope
iret
dec
lds
fisttp
push
ja
lods
jo
jae
cmp
add
int3
inc
loope
add
cdq
inc
out
or
xchg
and
call
sbb
(bad)
out
push
ja
xor
outs
ss
mov
inc
shl
jnp
add
(bad)
mov
rol
mov
ds
pop
imul
pop
jp
jl
pop
mov
pop
mov
inc
ins
std
lods
sti
mov
xor
push
lea
xchg
sub
pop
inc
mov
stos
in
imul
ret
add
dec
clc
in
pushf
je
std
in
enter
xchg
push
sti
daa
jge
pusha
aad
sub
jo
mov
scas
and
imul
add
xor
cld
mov
imul
fild
or
jae
rcr
push
mov
int3
fcom
pop
jmp
ins
sbb
pop
push
sbb
lods
jns
std
adc
mov
fabs
jmp
and
in
dec
nop
scas
push
in
pop
stos
jbe
pop
add
scas
xchg
sub
int
mov
hlt
adc
mov
jnp
dec
call
sbb
in
and
jo
in
aas
bound
jge
jge
cmp
pushf
sti
ror
mov
push
loopne
xor
std
push
jnp
mov
jg
mov
addr16
int
jmp
and
sub
cmp
jl
push
test
dec
mov
and
in
add
mov
push
mov
or
ins
sbb
popa
inc
jle
dec
jae
cmp
int
lods
push
pop
mov
xchg
retf
das
add
sbb
and
dec
fnstcw
mov
lods
mov
jp
int
(bad)
pop
dec
pop
lds
cmp
mov
push
or
call
or
sar
cmp
xchg
xor
ins
outs
push
xchg
nop
outs
fild
push
ror
dec
addr16
sbb
xchg
push
ins
xchg
xor
mov
push
inc
mov
xchg
mov
push
enter
mov
nop
pop
adc
gs
mov
mov
cmp
and
jmp
cdq
and
add
les
push
mov
add
aad
mov
jge
adc
ins
cmp
fisubr
push
in
cmp
jo
in
ins
cmp
sub
inc
sbb
and
pop
lods
pop
mov
cld
fadd
mov
sub
neg
faddp
cmp
mov
inc
push
or
mov
lock
fwait
and
mov
sar
adc
push
jns
pop
or
lods
dec
mov
push
(bad)
out
(bad)
in
retf
sub
ja
push
dec
jnp
sbb
int
js
icebp
stos
xchg
mov
loope
arpl
(bad)
pop
add
jo
pusha
dec
push
xor
pushf
push
call
movs
lea
in
xchg
pusha
fld
popa
out
jne
pop
lods
pop
cmp
dec
neg
ror
dec
push
adc
mov
mov
scas
inc
mov
fsubr
loopne
dec
dec
in
cs
xor
std
inc
and
ins
push
mov
mov
in
add
dec
push
dec
cmp
inc
or
ins
popf
and
xchg
jbe
sub
dec
jl
shl
cmp
adc
dec
pusha
lods
and
push
fmul
jge
sbb
cmp
jmp
pop
neg
and
repz
push
mov
pushf
or
and
adc
lods
sbb
and
arpl
jge
jg
fidivr
pop
dec
mov
ret
in
sub
in
int
cmp
retf
std
xchg
mov
dec
ret
mov
push
lods
into
sar
fmul
out
ret
fsubr
cmp
push
call
sub
mov
in
out
mov
or
sahf
dec
jmp
retf
mov
jge
mov
icebp
mov
jmp
loope
sbb
xchg
arpl
add
js
outs
inc
push
jg
leave
jl
and
shr
cmp
fist
into
cmp
jno
cmp
dec
mov
aas
mov
lds
sub
rcl
cmp
fadd
sbb
imul
mov
jo
mov
iret
cvtdq2ps
retf
enter
jo
cmp
jo
lahf
push
mov
ret
iret
or
jae
loop
or
stos
jnp
cmps
fisubr
ficomp
push
pop
mov
shl
and
cmp
shl
int3
ds
pop
outs
repz
lahf
nop
shr
mov
push
fs
lods
jge
cld
xor
add
jl
mov
cmp
mov
js
push
fcomp
int3
in
fmul
sbb
test
mov
push
test
icebp
imul
or
mov
sbb
mov
sub
pop
mov
test
xchg
add
(bad)
(bad)
fst
dec
xor
jp
mov
ja
mov
cli
sub
lods
lods
and
adc
out
icebp
pop
jo
jecxz
shl
push
(bad)
push
shl
ror
cwde
or
cmp
aad
sub
leave
or
jp
hlt
xor
sbb
into
cmp
xor
and
adc
in
mov
je
pop
jb
jae
out
dec
mov
pushf
mov
int
mov
sub
outs
in
in
(bad)
cs
xor
jns
cmps
sbb
fdivr
std
sub
mov
add
ins
push
pop
cwde
sub
inc
mov
push
repz
test
jns
jns
xor
push
and
ins
mov
in
jmp
cli
mov
in
repnz
cs
mov
pusha
sbb
pop
shr
cdq
adc
movs
lods
cmp
repnz
movs
mov
into
aad
sti
popa
lds
adc
dec
shl
inc
xor
in
mov
push
sbb
daa
movs
pushf
xlat
in
jns
lock
fcom
lods
pop
jb
shr
jno
in
sub
cmp
popf
in
mov
lock
fs
arpl
(bad)
fidiv
pusha
push
lock
test
and
(bad)
mov
out
lahf
inc
outs
mov
mov
adc
popa
int3
data16
mov
push
aas
or
xor
fisttp
cwde
dec
jg
mov
cmps
dec
iret
rcr
ins
push
lock
jl
cli
lods
xchg
mov
mov
xor
js
jge
(bad)
stos
inc
lock
dec
push
sbb
or
clc
and
stos
sahf
dec
int3
popf
lods
mov
cwde
fisttp
mov
mov
jo
js
jb
scas
mov
(bad)
aad
ror
retf
xchg
pop
cmp
cmp
cmp
mov
popf
inc
imul
pop
ficomp
sbb
retf
jo
mov
mov
call
cmp
or
cmp
fstp
std
std
sbb
int
(bad)
and
cmp
mov
shr
lock
push
jg
push
sub
push
sbb
xor
mov
out
mov
fiadd
enter
push
push
icebp
lock
es
mov
xchg
pop
push
mov
push
mov
int3
sti
cdq
add
sbb
iret
pop
adc
cmp
or
mov
dec
or
cmp
xchg
jmp
mov
xor
mov
push
ins
in
ins
icebp
jl
jmpw
cmps
fs
mov
push
ss
and
out
mov
add
jne
bound
cwde
sbb
adc
int3
test
pushf
lock
outs
inc
pop
ffree
leave
sbb
mov
rol
fbstp
out
xor
mov
cmp
(bad)
fisttp
push
mov
mov
mov
pop
and
retf
jmp
mov
stc
ret
cld
sub
sub
jge
inc
cli
std
out
repz
cli
mov
repz
dec
sbb
outs
or
cmp
xchg
dec
jnp
jl
adc
mov
cmp
fdivr
mov
pop
test
cdq
or
mov
jnp
gs
mov
sti
stos
mov
out
adc
sbb
in
mov
pushf
add
and
cmp
fsubrp
retf
xchg
(bad)
in
jmp
fucomi
das
pop
sbb
push
retf
dec
push
pop
mov
dec
repnz
cs
std
(bad)
into
pop
and
mov
mov
sub
mov
shr
mov
stc
sub
mov
cmps
fiadd
ss
(bad)
mov
in
cmp
addr16
call
int
pop
adc
mov
popf
ins
mov
inc
jmp
xchg
mov
ret
std
and
int3
xchg
jmp
mov
dec
mov
mov
sbb
pushf
ret
popf
mov
fsub
ins
or
cmp
mov
sbb
retf
and
cs
dec
imul
or
iret
fwait
cmp
test
push
jmp
pop
repz
and
jge
mov
ficomp
sbb
stos
pop
mov
mov
mov
and
sbb
loope
pushf
in
repz
ds
inc
sub
jno
xchg
mov
xchg
test
in
mov
leave
dec
pop
fs
jo
jle
cmc
inc
lods
pusha
jle
push
stos
mov
pop
dec
in
fadd
aam
add
inc
and
lods
ds
sub
rol
xchg
clc
or
sbb
cld
mov
sti
out
in
cmp
mov
cmp
mov
push
sbb
sbb
sbb
(bad)
push
test
mov
stos
xchg
sub
and
fcomp
gs
es
cwde
xchg
mov
fcomip
pop
data16
nop
and
in
adc
lods
fcomp
add
or
lods
push
inc
nop
lea
ins
test
pusha
rcr
pushf
pusha
rol
fsubp
sbb
and
mov
ins
pushf
mov
sub
push
cmp
in
(bad)
std
xor
rcr
test
adc
dec
lock
out
adc
and
add
loopne
mov
cmps
aaa
popa
mov
in
(bad)
sti
stos
xor
shl
jge
jl
xchg
pop
mov
cmc
xchg
adc
push
or
aam
rol
add
mov
mov
inc
push
inc
cmp
inc
mov
js
push
aaa
add
loopne
clc
fist
cmp
test
push
popf
mov
int
adc
or
mov
int3
ret
test
ins
dec
cmp
lea
add
mov
sub
or
sbb
fmul
xor
jl
mov
ins
adc
js
mov
push
out
push
sbb
fscale
sar
sar
mov
dec
jbe
and
pushf
mov
xor
pop
shr
push
aas
outs
jno
sub
ins
and
sbb
loope
call
je
cmp
sbb
mov
lahf
cmp
loope
lods
in
ret
mov
mov
mov
adc
pop
inc
lea
mov
mov
bsr
in
std
cmp
xlat
int3
mov
(bad)
jo
jo
adc
push
call
jne
and
or
push
jl
mov
dec
outs
fistp
sub
loope
mov
adc
sbb
fld
push
daa
idiv
popa
and
inc
imul
shl
ins
dec
xchg
nop
cli
or
pop
loope
int
test
xchg
mov
mov
sar
nop
fcmovne
and
icebp
cld
sbb
int
lods
push
sub
dec
adc
mov
adc
push
call
jae
xor
inc
(bad)
fld
shl
rcr
push
ror
sub
inc
cmp
ins
cld
loope
iret
jecxz
xchg
in
in
mov
dec
bound
mov
and
mov
add
pop
cwde
mov
fidivr
and
stos
cmc
lods
dec
cli
call
mov
ins
loopne
jne
or
adc
mov
ins
int
pop
dec
outs
sub
cmp
xchg
jp
int
fnstsw
cmp
aad
in
xor
sbb
push
mul
inc
sub
popf
or
ins
shl
cs
jbe
in
cmp
or
fnstsw
push
cmp
mov
pop
popa
int
ror
daa
ins
std
in
xor
lea
ins
push
mov
push
sub
push
icebp
and
lahf
std
or
ret
sub
push
mov
xchg
mov
dec
lods
push
sbb
int3
loope
dec
mov
add
pushf
jno
nop
nop
xchg
sahf
or
inc
mov
loop
sbb
imul
push
mov
xor
sbb
fcomp
pushf
pop
mov
sub
test
std
jge
cmps
sar
vpmaddwd
xchg
call
sub
mov
xchg
loopne
xlat
and
popa
int
mov
inc
xchg
mov
stos
cmp
jbe
shl
inc
fdiv
jecxz
cmp
in
add
mov
out
ins
in
nop
loopne
int
pop
mov
inc
sti
fisttp
mov
sub
shl
lods
in
std
pushf
dec
out
addr16
mov
xor
lock
in
int3
mov
pop
mov
mov
sahf
imul
in
fistp
xor
and
add
xor
sub
enter
jb
popf
fldcw
in
int
stc
xor
xor
out
add
inc
dec
adc
push
cmp
shr
push
lds
adc
inc
shl
jl
inc
inc
call
add
xor
out
shl
dec
aaa
sbb
test
jl
inc
popa
add
sbb
leave
jge
mov
inc
inc
cmp
ret
div
lea
mov
adc
std
fs
jo
gs
sub
add
ror
and
mov
xchg
pushf
mov
mov
add
ins
add
popa
and
sub
test
pusha
aad
sahf
cmp
pop
aaa
adc
add
mov
jle
push
mov
jge
inc
pusha
shr
pop
(bad)
pop
jne
push
cmp
daa
push
jmp
inc
in
lods
ins
xchg
push
push
je
scas
pop
mov
mov
add
in
ror
fucom
ins
pop
cmc
out
outs
pop
sub
fisubr
out
into
addr16
mov
sti
outs
rcl
std
std
or
push
mov
dec
inc
popa
ja
sub
mov
mov
das
cmp
mov
mov
jmp
xchg
adc
mov
ror
rol
adc
mov
cld
jo
pusha
nop
push
jno
or
lods
pop
(bad)
rol
loope
pop
sub
lods
xor
pop
pop
jno
popa
outs
shl
ins
in
int
loope
in
or
mov
dec
iret
mov
xchg
inc
xor
sti
jge
cmp
loop
mov
add
icebp
shl
retf
mov
lea
sbb
push
(bad)
lea
or
shr
and
xor
cmp
mov
inc
mov
loopne
mov
push
mov
cmp
or
movs
or
imul
pusha
sub
inc
mov
lods
enter
or
cmp
repnz
int
or
cmps
jo
ins
pop
mov
sub
sar
inc
sahf
iret
push
or
or
adc
xor
jns
clc
mov
dec
sub
out
xor
cmp
push
ins
shl
add
cmp
call
popf
sub
add
fxch
lea
and
pusha
test
ret
xor
jecxz
xchg
mov
(bad)
and
pop
out
add
daa
out
jp
add
inc
popf
mov
push
jo
ror
pop
dec
mov
fsubr
xchg
or
sbb
nop
jae
rcl
mov
loope
pop
cmp
adc
jo
mov
call
cmp
push
jle
push
xor
lods
out
cmc
es
sbb
mov
mov
pushf
int
jp
pop
add
mov
ror
adc
pop
xor
adc
movs
sub
mov
mov
cmp
or
push
int
xor
repz
lods
fadd
dec
xor
mov
ins
call
icebp
int
outs
sbb
or
adc
xchg
dec
jno
popf
mov
mov
inc
rcl
or
int
std
scas
cs
in
dec
pop
iret
cld
dec
loopne
inc
mov
and
shr
fucom
in
call
int3
rcl
loope
pushf
jno
jl
adc
lahf
sti
add
lods
icebp
loopne
and
jl
(bad)
mov
xchg
xchg
sbb
out
xchg
xchg
mov
mov
shl
adc
fucomp
aam
(bad)
or
sbb
add
xchg
push
mov
cmp
jmp
and
xor
adc
shr
add
cmp
pusha
cwde
popa
mov
jg
jge
push
iret
iret
pop
adc
sub
xchg
xor
imul
mov
stc
fmul
cmc
xchg
hlt
sub
or
and
xchg
lods
lea
adc
jge
cmp
stos
mov
or
in
sbb
add
adc
js
push
mov
push
mov
out
adc
mov
sbb
in
push
xor
jge
cmps
xchg
mov
dec
ins
lods
jns
retf
cs
clc
loope
out
test
lds
pushf
sbb
lods
into
mov
ss
aas
mov
xor
pusha
in
adc
sub
cmps
mov
dec
lods
and
dec
sub
shl
inc
daa
adc
int3
rcr
rcr
add
mov
mov
int
sbb
icebp
xor
sub
mov
xchg
pop
sbb
ret
inc
cmp
loopne
mov
lods
shr
jmp
mov
cwde
pop
cmp
or
in
ds
cmp
mov
loopne
dec
ret
(bad)
add
or
icebp
movs
xchg
mov
je
pop
xchg
dec
pop
test
cmp
push
sub
loop
test
mov
adc
pop
ror
std
call
mov
das
mov
or
push
sub
xor
and
cmp
jl
dec
mov
and
(bad)
popf
ss
adc
ret
loop
fisttp
dec
xlat
inc
xlat
out
popa
and
push
jno
pop
xor
in
mov
pop
cmp
jge
pop
lea
adc
pop
sbb
xchg
pop
xchg
jbe
cld
push
cmp
sbb
int3
xor
lock
scas
dec
mov
jle
push
and
test
mov
or
ret
les
adc
inc
jecxz
and
push
sub
and
ror
xor
push
dec
mov
jle
mov
loopne
ror
xor
cli
jno
xor
push
stc
inc
lods
xor
push
push
dec
ins
std
xor
ds
ret
add
pop
dec
ins
dec
push
gs
inc
mov
not
add
clc
mov
mov
dec
js
sub
cwde
jmp
ror
jl
push
mov
pop
cmp
ins
pushf
icebp
push
jmp
dec
addr16
inc
inc
fsub
xchg
xchg
pop
int
jae
mov
jb
and
mov
xor
in
mov
xor
mov
(bad)
movs
lea
daa
lahf
push
pushf
or
or
cs
in
mov
xchg
scas
adc
or
push
add
add
sub
(bad)
xor
ror
cs
ins
jge
jecxz
gs
mov
lods
rol
jge
add
xchg
add
dec
mov
inc
in
xchg
sbb
pop
(bad)
stc
inc
ins
mov
frstor
jg
xor
add
pop
sub
jno
inc
push
popf
dec
mov
fist
loope
stos
cmp
jb
cmp
adc
lds
rcr
xor
addr16
outs
sub
mov
shr
out
xchg
dec
(bad)
scas
clc
(bad)
call
int
cmp
movs
adc
adc
cli
jl
and
psllq
cwde
or
test
dec
das
addr16
xchg
adc
sub
dec
jecxz
out
jne
(bad)
popf
test
cmp
sub
mov
ins
jg
test
xor
xchg
test
ror
and
das
dec
sbb
pop
pop
lods
inc
iret
mov
inc
sahf
gs
imul
pop
dec
sub
aas
jl
pop
inc
sbb
jb
sbb
sbb
popf
or
mov
xchg
int
shr
jge
sub
aas
push
call
rol
shr
sbb
sub
cmp
mov
mov
sahf
in
dec
xlat
test
dec
and
ins
popa
cld
sub
js
jg
or
mov
aam
fist
add
cdq
or
cwde
cld
and
cld
mov
retf
mov
out
test
(bad)
or
(bad)
inc
out
jp
sbb
and
jge
pop
sub
or
out
into
or
stos
push
xchg
or
and
addr16
dec
xchg
iret
push
leave
in
mov
punpckhdq
std
mov
mov
sbb
sar
cmp
test
mov
loop
idiv
dec
dec
and
jb
sbb
cs
jmp
call
js
in
sar
int
pop
or
sbb
stos
inc
mov
popf
pop
sub
sahf
pushf
push
jae
push
mov
ds
ins
test
fucomp
push
add
(bad)
xchg
add
add
sub
xor
add
mov
(bad)
cmc
lods
mov
mov
shl
int
int
loop
leave
sbb
mov
shl
mov
out
in
not
shr
aad
push
mov
jge
mov
mov
pop
add
cld
shl
sbb
pushf
mov
lods
outs
xor
cmp
xchg
sbb
jle
mov
sub
pop
inc
out
mov
fs
(bad)
scas
ins
push
out
cs
inc
and
adc
xor
scas
mov
fnsave
mov
cdq
mov
sbb
cmp
sub
inc
jmp
push
lods
ins
mul
sub
lea
lahf
sbb
jl
out
rcr
dec
cld
std
lahf
xchg
pushf
and
cmp
repz
and
xchg
test
pop
stos
sti
inc
or
sub
outs
fucomi
or
dec
out
and
mov
ja
int
mov
fs
in
adc
mov
inc
add
pushf
jns
mov
cmp
push
out
dec
outs
xchg
sub
hlt
popf
pop
mov
dec
sub
sbb
gs
jo
mov
cmp
arpl
pop
add
mov
arpl
cmp
das
fstp
lahf
xor
sbb
(bad)
iret
js
retf
scas
dec
cwde
and
jbe
shl
sub
dec
nop
outs
jmp
jl
jle
in
fwait
jp
pop
jp
pop
lock
popa
and
push
(bad)
pop
mov
das
repz
xchg
wbinvd
(bad)
and
ret
arpl
sbb
jl
xchg
loop
jae
jmp
int
or
sub
cmp
leave
adc
push
xlat
mov
push
out
sub
or
dec
rcl
les
dec
adc
pop
cmpxchg
mov
jge
(bad)
(bad)
fisttp
repnz
mov
imul
cld
and
jl
int3
outs
ret
pushf
outs
jo
xor
pushf
ins
in
and
mov
movs
adc
add
mov
(bad)
pop
sub
ret
mov
mov
xchg
scas
int
movs
mov
pop
push
mov
pop
dec
sbb
pop
adc
sbb
push
jb
bound
dec
fcomp
popf
mov
dec
(bad)
push
mov
mov
cmp
psubb
enter
ffreep
jle
inc
stos
aad
mov
sub
sbb
out
fsubp
mov
xchg
mul
rcl
repz
pusha
xchg
ret
fcom
push
popa
int
movs
jl
call
cmp
mov
sub
pushf
cmp
adc
rcr
out
sbb
pushf
jb
inc
mov
pop
in
push
shl
mov
stc
das
(bad)
mov
adc
pusha
dec
fst
inc
scas
aam
mov
sbb
hlt
and
daa
or
ret
and
leave
hlt
dec
sub
dec
mov
int3
in
pop
jne
int3
cmp
repz
push
push
lods
inc
pop
jmp
mov
add
sub
in
inc
out
sbb
cld
xchg
pop
dec
movs
or
aam
cs
adc
sbb
outs
mov
and
adc
push
(bad)
push
call
fisttp
jl
xor
jmp
cmc
xor
sbb
es
lock
fdivr
xor
mov
inc
sub
inc
jg
cmp
int3
inc
sbb
pop
pop
icebp
out
cmp
dec
xor
ins
int
jl
pop
mov
jge
cmp
(bad)
fbstp
mov
adc
dec
inc
and
mov
popf
jge
mov
es
mov
aad
int3
out
sti
loopne
ins
sbb
inc
nop
ja
pop
iret
inc
jnp
dec
inc
bound
add
cmp
out
clc
cmps
sbb
cdq
jnp
lahf
dec
movs
jb
ja
inc
mov
popa
scas
sbb
sbb
or
fild
and
dec
sub
push
push
popa
mov
or
add
shl
fisub
cmp
mov
mov
sar
fisttp
(bad)
stos
jle
pushf
xor
mov
movs
adc
mov
out
add
push
and
inc
xchg
lea
dec
mov
pop
xchg
fucomi
lods
in
cld
ins
cld
mov
ins
xor
loop
call
mov
pop
lods
add
pushf
arpl
popa
inc
int3
in
lods
shl
xor
retf
mov
cmp
xchg
addr16
dec
loope
cli
ficomp
cmp
push
sub
popf
ins
mov
and
cdq
test
ror
fdivr
clc
scas
das
in
dec
or
stos
outs
test
push
dec
mov
jae
dec
dec
js
or
push
fldcw
jb
jge
xchg
pop
jp
mov
dec
xchg
mov
repnz
ret
int
sub
xchg
sub
jns
pop
loopne
test
dec
fimul
cmp
dec
cmp
mov
mov
outs
push
mov
neg
es
arpl
jns
push
jp
outs
jb
jecxz
cmp
xor
aas
inc
or
retf
jmp
test
fsubr
movs
ja
scas
xor
inc
mov
cli
mov
and
retf
xchg
sub
or
int3
ficom
push
cli
jno
in
inc
pop
mov
cli
mov
jl
dec
push
test
xchg
pop
fs
or
jg
mov
jnp
retf
sbb
in
in
jecxz
(bad)
int3
retf
neg
mov
or
jns
fmul
ret
or
scas
and
stos
outs
mov
dec
sub
mov
dec
fucom
arpl
jge
mov
mov
xchg
es
fwait
push
cmp
inc
sbb
popf
in
enter
push
jle
xor
adc
test
cmp
add
and
or
sub
lods
cmp
cmp
jge
aad
ins
sub
add
pop
enter
sbb
retf
ins
adc
stc
repz
pop
jmp
sbb
and
fucomp
fild
(bad)
sbb
sub
sub
push
imul
(bad)
in
std
add
adc
push
ret
cld
mov
add
jnp
mov
nop
jne
test
add
ror
mov
pop
loop
jmp
jb
jle
push
fwait
int
rol
fisubr
sbb
sub
retf
mov
add
pop
nop
retf
loop
retf
fisttp
and
and
je
push
push
jb
rcl
neg
jl
jecxz
cld
loope
mov
push
or
jb
fistp
cmp
lds
scas
call
cmp
call
adc
test
out
pop
ror
or
mov
jne
in
adc
sub
pushf
je
test
push
int3
pop
dec
sub
outs
adc
add
fsubr
into
cmp
inc
adc
ins
dec
mov
lea
(bad)
or
in
fwait
sbb
add
fcom
push
or
jle
movs
adc
mov
add
xor
push
sahf
mov
mov
mov
dec
xor
sbb
hlt
cli
push
lahf
in
jo
fdiv
push
aas
jo
or
fdivr
sbb
cmp
mov
retf
xchg
xor
mov
inc
and
adc
push
je
or
xor
cld
add
aaa
push
dec
mov
imul
push
les
cmp
dec
pop
rcl
add
cld
push
std
cmp
repz
lahf
xchg
or
jbe
xor
jmp
bound
pop
mov
mov
adc
test
out
aas
sub
(bad)
clc
add
push
fwait
loop
jns
lock
adc
xor
mov
or
push
leave
mov
clc
stos
arpl
push
(bad)
test
sbb
add
xor
mov
lahf
test
sbb
inc
fwait
nop
mov
cmp
(bad)
sbb
add
xchg
(bad)
ss
fist
ins
sbb
mov
mov
inc
fdivr
or
pop
dec
push
lock
mov
jecxz
bound
add
hlt
arpl
mov
pushf
mov
(bad)
adc
add
cmp
scas
jl
(bad)
mov
mov
fwait
nop
or
mov
add
pop
push
imul
mov
(bad)
mov
pusha
cmc
or
push
mov
pop
mov
(bad)
popf
mov
mov
clc
sbb
out
fcmovnbe
arpl
fcomp
adc
xchg
xor
xor
mov
push
mov
mov
fnstenv
mov
jne
jo
mov
push
enter
mov
dec
dec
nop
mov
jl
adc
(bad)
pop
sar
cld
jecxz
outs
les
icebp
mov
mov
shr
dec
push
fmul
xchg
or
sub
adc
xor
push
inc
mov
ror
adc
clc
add
jns
or
sbb
mov
xchg
pop
shr
pusha
imul
push
pop
mov
(bad)
jno
xor
mov
test
outs
dec
xor
and
xchg
(bad)
js
lock
je
js
xchg
push
mov
out
add
inc
fwait
aas
or
scas
xor
adc
mul
cmp
adc
gs
jl
adc
hlt
stos
test
js
rol
call
popa
test
test
shl
stc
cmp
add
outs
daa
mov
adc
pusha
test
or
and
push
repz
mov
int
xchg
push
enter
fcom
xchg
pop
pop
inc
mov
rcr
lds
adc
pop
or
jo
mov
add
fimul
or
pop
test
cmp
and
xor
mov
mov
xor
xor
hlt
adc
mov
pop
mov
inc
fdiv
mov
icebp
lds
dec
jno
repz
icebp
xor
jmp
sar
mov
adc
xor
xchg
ins
pop
or
push
mov
jo
pop
rol
sub
lock
cld
add
imul
ins
sub
mov
aam
and
mov
iret
and
mov
mov
fadd
inc
mov
push
jp
mov
xchg
lock
mov
mov
adc
fiadd
xor
mov
les
loop
or
inc
and
outs
fidivr
mov
mov
sbb
add
xchg
std
out
stc
adc
inc
test
cmp
push
dec
pop
mov
add
xchg
shl
jne
icebp
mov
mov
mov
xor
xor
mov
(bad)
test
(bad)
xor
iret
and
dec
in
pushf
sub
mov
inc
bound
cmps
dec
mov
mov
mov
inc
sub
stos
faddp
(bad)
out
dec
mov
sub
sub
jae
cld
cs
loope
and
push
test
stos
daa
pop
jae
hlt
inc
in
adc
ret
loop
pop
mov
and
dec
jle
push
outs
cs
ins
rcl
sar
adc
push
nop
neg
cs
iret
(bad)
pop
scas
cmps
out
jbe
ror
jmp
lahf
mov
inc
and
dec
and
mov
mul
or
jecxz
gs
jecxz
fwait
test
std
movs
enter
dec
and
dec
and
cs
mov
xor
xchg
std
sbb
mov
pop
xor
ror
pop
cmps
push
loop
scas
xchg
mov
fisub
sub
jns
popa
in
xchg
cmp
imul
test
mov
in
es
add
cmps
ret
cs
or
and
pop
xor
and
cmps
loope
cs
fnstcw
pop
inc
movs
ss
pop
push
ret
es
and
ret
cs
xlat
movs
inc
rcl
sahf
scas
dec
pop
dec
xchg
sti
xchg
inc
and
jle
rcr
cmp
pushf
mov
cs
loope
cmc
jno
push
sub
sbb
ss
push
das
mov
mov
fstp
xchg
shr
inc
push
(bad)
adc
outs
push
mov
mov
aad
xchg
enter
ss
loopne
jne
xchg
xchg
cli
test
inc
cmp
scas
pop
pop
jbe
pushf
pop
jae
sahf
aad
sub
and
sahf
mov
jle
jge
inc
icebp
jge
gs
std
shl
sbb
and
cmp
sub
int3
sub
stos
add
push
shr
aam
cmp
xchg
mov
mov
sub
mov
mov
mov
sub
daa
cmps
adc
jmp
push
xor
or
inc
icebp
stos
jge
mov
adc
data16
pop
das
mov
addr16
xor
movs
xchg
mov
shl
dec
sub
xchg
stos
jecxz
sub
sbb
and
stos
retf
sub
sub
mov
lds
cmc
cld
xor
xor
test
mov
jmp
std
ds
in
cmc
mov
test
mov
sub
adc
mov
mov
mov
cmps
add
gs
xchg
push
or
xchg
cld
cmc
out
sbb
data16
xchg
mov
push
movs
shl
adc
into
out
lods
cmc
out
sub
(bad)
jge
push
lds
loop
xchg
and
sub
popf
cld
stc
shl
jg
mov
pop
inc
push
push
cwde
(bad)
hlt
sub
in
push
pusha
mov
pop
imul
xchg
xor
clc
fstp
jo
push
xchg
mov
sbb
mov
xor
push
fwait
jmp
push
sbb
in
sbb
or
rcl
and
enter
sti
push
std
nop
cmp
aaa
pop
(bad)
jnp
push
call
cmp
mov
call
sbb
jg
retf
cmps
clc
in
xor
imul
xchg
leave
std
mov
cmp
xor
mov
mov
jmp
mov
inc
fdivr
jbe
xchg
int
and
icebp
dec
push
es
push
ror
adc
mov
jbe
push
mov
push
xlat
jl
mov
mov
(bad)
fbstp
data16
push
mov
loop
inc
enter
inc
or
addr16
sbb
jno
sbb
push
fnstcw
daa
xor
mov
icebp
ds
jb
sbb
xor
and
(bad)
cli
push
jnp
sub
aam
enter
sub
aam
push
mov
adc
enter
add
movs
sbb
(bad)
push
mov
dec
lods
retf
inc
jle
mov
inc
mov
test
(bad)
cmc
xor
add
gs
lds
and
loope
xchg
adc
unpckhps
(bad)
adc
inc
mov
lds
mov
push
repz
mov
add
sbb
inc
imul
sbb
aam
rol
pusha
dec
mov
cmps
inc
add
add
aam
pusha
dec
das
add
jmp
test
or
mov
loope
ins
mov
adc
or
pushf
add
loope
jle
mov
mov
or
adc
push
dec
int
loope
sbb
enter
and
iret
loopne
fst
push
xchg
mov
jmp
inc
and
add
inc
dec
mov
and
sub
lods
aad
outs
sti
movs
sub
sub
inc
imul
mov
shl
(bad)
sub
jp
inc
ja
jmp
loope
(bad)
in
(bad)
sti
lods
movs
inc
add
stos
ins
add
dec
dec
iret
adc
and
mov
mov
jb
sbb
std
(bad)
adc
jmp
or
loope
lds
lds
jne
inc
inc
mov
arpl
mov
inc
mov
mov
loope
jo
pop
mov
sub
add
cmp
cli
xchg
add
aam
test
rol
loope
movs
and
(bad)
in
push
es
inc
adc
test
mov
cmp
stc
sub
into
nop
outs
ret
dec
je
daa
dec
xor
dec
sahf
dec
push
push
fwait
shr
je
sbb
mov
push
and
pop
pop
jo
adc
mov
or
xchg
(bad)
inc
jmp
inc
aas
ds
aam
push
icebp
das
les
sbb
add
mov
nop
std
mov
retf
push
test
sbb
cmp
leave
pop
call
sub
pop
mov
inc
fadd
enter
sub
ret
pop
pop
mov
xchg
mov
mov
xor
fiadd
jmp
iret
imul
add
jecxz
xor
xchg
and
push
cmp
xor
nop
call
fidiv
push
xchg
sub
sti
mov
iret
jne
cmp
icebp
lahf
dec
cmc
scas
lahf
push
daa
mov
push
out
xchg
(bad)
std
dec
mov
test
inc
dec
sahf
retf
sahf
aad
lods
fisub
lahf
sahf
mov
push
pop
loop
jl
popf
sahf
cld
dec
lea
jl
or
mov
cli
xor
jl
int
push
into
mov
xchg
push
je
cld
dec
lea
push
mov
sub
div
cld
push
int
cld
into
or
push
jl
lea
scas
push
adc
icebp
popa
dec
and
add
adc
push
paddb
dec
je
push
sbb
xor
lahf
arpl
out
fnstsw
cmps
aaa
iret
jl
pusha
inc
adc
add
add
je
xchg
cmp
xchg
pop
push
icebp
add
pop
cdq
push
push
mov
je
xchg
sub
pop
sbb
aam
add
cwde
dec
cmp
cld
adc
icebp
scas
sbb
fs
jb
outs
mov
je
inc
iret
and
(bad)
sub
xchg
div
inc
imul
xchg
push
call
jne
gs
shl
rcl
retf
sbb
xchg
mov
xchg
cmp
inc
dec
jb
xchg
xchg
jmp
mov
push
xchg
mov
sbb
ficomp
and
push
sti
jno
push
inc
sbb
popf
call
mov
jns
jns
jns
xor
lea
jmp
fcomip
and
aad
cli
fxtract
stc
xor
push
mov
loop
stc
ins
add
(bad)
mov
pop
mov
dec
sbb
cld
dec
xchg
(bad)
mov
ins
nop
icebp
adc
ss
(bad)
jmp
add
cli
test
or
or
xor
sbb
mov
ret
xchg
ds
lock
xor
faddp
repnz
push
cmp
icebp
ins
sbb
jb
cmps
jbe
xor
cmps
xchg
movs
repnz
jno
push
xchg
out
sahf
xchg
mov
xor
xor
pop
inc
shr
push
mov
into
jl
test
push
xor
shl
ficomp
xchg
xchg
bound
mov
jbe
not
jbe
push
outs
stc
das
push
xchg
stc
jno
jge
mov
push
xchg
mov
push
push
and
xchg
cmp
inc
jmp
fnstcw
jns
dec
push
sub
stc
mov
jb
sub
icebp
push
sub
add
jbe
xchg
xchg
repnz
xchg
stc
jno
fiadd
push
xchg
add
rol
adc
in
out
xor
outs
xor
adc
repz
es
push
mov
add
jmp
pushf
loope
push
or
cmp
sub
pop
iret
mov
leave
jmp
sahf
test
(bad)
push
fsubr
(bad)
jge
shl
mov
jle
loope
sub
mov
and
cwde
lods
push
ret
das
popa
lock
xor
adc
jno
jno
aad
ror
xchg
sub
jo
icebp
sub
jmp
push
retf
push
setno
cmc
dec
lock
jo
adc
push
mov
pop
shr
jmp
es
imul
jmp
jl
inc
aad
in
popf
popa
lock
and
and
xchg
sub
pusha
jle
cmp
push
pusha
lock
xor
push
sub
aad
jmp
push
dec
stc
sub
or
fsubr
cmp
arpl
push
sub
xchg
sub
mov
dec
shl
and
push
push
cli
lods
inc
xor
dec
lock
xor
xchg
push
mov
lock
jge
add
adc
ror
pop
sub
sub
adc
int3
pop
xlat
gs
ret
fcomp
push
pop
fcomp
test
pop
sbb
pop
xlat
fcomp
fist
imul
adc
sub
push
xchg
imul
xchg
imul
lods
imul
(bad)
arpl
and
pushf
(bad)
arpl
arpl
mov
xchg
push
sub
push
test
(bad)
movaps
mov
dec
mov
fwait
xchg
arpl
xchg
arpl
aam
jns
cmp
mov
fwait
dec
jnp
inc
xchg
rol
nop
gs
test
xchg
inc
xchg
jnp
stos
jno
xor
sub
out
stc
shr
aaa
fbstp
ret
ds
xor
sar
ss
jle
jge
nop
inc
nop
push
xchg
xchg
inc
xchg
addr16
pop
int3
pusha
cmp
out
and
std
sbb
mov
fdivrp
fimul
jl
sbb
std
add
test
lea
push
je
inc
mov
jbe
mov
scas
icebp
das
gs
out
test
and
mov
jo
lahf
sbb
cmp
outs
jae
scas
inc
mov
daa
sbb
sbb
and
dec
lahf
mov
xchg
push
gs
pushf
aam
push
loope
mov
out
das
bound
loope
xor
xchg
dec
mov
fsub
mov
in
dec
mov
ret
les
pop
inc
sbb
ror
clc
jl
sbb
test
jb
hlt
ss
aaa
ficomp
add
jle
inc
dec
mov
cld
sbb
ret
push
stos
(bad)
(bad)
nop
sbb
mov
jl
push
cmp
jmp
lea
add
push
jo
push
dec
mov
mov
addr16
cmp
push
test
pop
imul
out
imul
stos
jmp
mul
push
cmp
idiv
lock
mov
inc
cmp
pop
inc
mov
in
jo
ins
sub
sub
int3
test
jp
clc
or
push
sti
test
neg
popa
sbb
inc
pop
inc
jmp
rol
xchg
jmp
pop
jbe
imul
repnz
mul
push
xor
add
(bad)
mov
xchg
push
repnz
sbb
and
int3
xor
cmp
sub
dec
and
push
test
inc
outs
xor
mov
test
clc
ins
inc
sbb
mov
add
or
jp
shr
nop
or
aad
jecxz
mov
movs
xchg
adc
jecxz
xchg
xchg
std
mov
sbb
xlat
shl
retf
loopne
xchg
mov
int3
(bad)
jecxz
adc
icebp
aam
push
rol
iret
cmc
push
stc
adc
(bad)
aad
hlt
jecxz
retf
fucom
enter
jo
jecxz
mov
icebp
mov
(bad)
iret
stc
or
push
cmps
(bad)
fmulp
in
cwde
mov
retf
ffreep
mov
retf
ret
xchg
xchg
scas
int3
(bad)
std
(bad)
mov
rol
repz
mov
std
(bad)
loop
(bad)
mov
stos
ficom
inc
push
mov
cs
cmp
aaa
ret
jbe
add
shr
call
fistp
int3
shl
pop
not
mov
nop
mov
lock
mov
rcr
xor
adc
cmp
xor
adc
cmp
(bad)
cmp
outs
xor
push
pop
xor
adc
xor
rcr
xor
adc
xor
push
pop
xor
adc
xor
rcr
xor
adc
dec
xor
xor
cmp
stos
sbb
sbb
sub
dec
jb
pop
pop
mov
pop
dec
jb
push
pop
jae
push
jl
push
jae
mov
dec
jb
imul
sbb
inc
pop
push
dec
sahf
call
and
push
dec
arpl
mov
push
cmp
push
pop
push
and
adc
dec
mov
push
dec
arpl
dec
xor
ins
dec
bound
jae
(bad)
push
xor
jg
xor
sub
arpl
lods
retf
adc
repz
push
cmp
jmp
push
popf
fild
mov
jl
or
les
jge
data16
sub
jge
add
popf
mov
ret
or
add
addr16
xor
into
and
adc
fwait
shl
adc
test
pop
scas
cli
ss
out
stc
jo
mov
pushf
int3
xchg
dec
loop
adc
jo
jo
xchg
jmp
lock
sub
sub
mov
popa
(bad)
pushf
dec
or
push
dec
outs
dec
add
js
in
and
nop
mov
xchg
int3
adc
outs
test
cmps
mov
jno
jbe
in
bound
(bad)
pushf
hlt
cmp
or
xor
clc
icebp
mov
jo
pusha
cmp
jmp
pop
mov
sbb
stc
or
mov
call
xor
ins
xor
mov
jmp
mov
mov
aaa
or
mov
xlat
mov
jp
inc
retf
sub
mov
jmp
pusha
mov
test
sti
test
add
adc
lds
add
icebp
test
(bad)
sub
sti
push
or
cmp
push
imul
fidiv
ds
fld
push
adc
imul
sub
pop
shr
push
xchg
mov
xchg
outs
inc
cmp
sbb
std
xor
popa
clc
movs
or
or
or
push
inc
clc
in
nop
mov
adc
mov
cmp
add
pushf
adc
outs
push
sbb
mov
xchg
cmps
mov
pop
jb
jg
pop
daa
mov
mov
jb
inc
and
cwde
sbb
jmp
jb
pop
or
jb
cmp
lods
ror
xor
aaa
sub
(bad)
dec
mov
or
mov
test
sub
sub
pop
push
popf
mov
in
cmp
adc
sar
mov
repz
adc
cld
and
shr
mov
sbb
mov
ret
xchg
out
mov
xchg
jl
or
dec
push
pop
push
mov
movs
mov
push
test
push
mov
push
lods
add
or
ret
or
gs
bnd
bound
mov
mov
dec
outs
or
add
movs
ret
cmp
fnstenv
(bad)
jge
stc
idiv
ror
push
sub
enter
shr
inc
ds
bound
jb
inc
sub
loop
mov
adc
jge
in
out
in
movs
mov
and
inc
cmp
pop
repz
(bad)
std
jb
ja
inc
or
fnsave
int
push
mov
(bad)
and
sub
sub
mov
xchg
int
test
push
aas
fmul
imul
es
popf
inc
test
ret
cmp
div
repz
dec
imul
xor
lods
fisub
sub
push
cdq
scas
clc
push
out
push
out
push
shl
sbb
mov
pushf
pop
cdq
(bad)
out
xor
adc
and
xlat
cmps
dec
int3
in
xchg
das
or
jmp
dec
cmps
retf
test
pop
aad
aas
test
test
(bad)
push
jmp
xor
jmp
xchg
inc
push
fdivr
or
scas
and
mov
sub
aam
mov
xor
std
pop
mov
push
mov
cmp
cmp
xor
mov
pop
add
xchg
jb
fcmovnbe
repnz
cli
cwd
cs
and
test
pop
(bad)
xchg
into
nop
sti
int
aam
mov
in
mov
pop
sbb
ds
mov
add
gs
sub
loopne
icebp
and
push
mov
aam
imul
mov
xchg
test
les
push
xor
push
inc
dec
(bad)
cmc
aam
xchg
movs
pop
aam
mov
movs
jno
xor
xor
dec
jecxz
xchg
jp
sbb
repz
jge
neg
div
ror
push
pop
out
add
jecxz
add
sbb
xor
add
idiv
and
rol
add
add
pusha
das
jp
jb
mov
xchg
mov
lods
mov
in
mov
pop
iret
daa
pop
cmp
movs
mov
inc
(bad)
sub
cwde
push
add
popf
iret
in
xchg
nop
xchg
das
movs
jg
movs
adc
test
jne
jno
xchg
and
fistp
movs
add
add
xlat
jns
add
rol
add
mov
adc
add
mov
adc
or
dec
adc
(bad)
push
and
cmp
jl
mov
in
push
xchg
int3
rol
mov
retf
fistp
add
pop
pop
mov
xchg
cmp
push
pop
pop
push
adc
fld
pop
addr16
cli
pusha
push
sbb
pop
adc
(bad)
and
cmp
inc
cmp
sti
mov
cwde
cmp
mov
and
fidiv
mov
ins
jle
adc
pop
(bad)
rol
jg
ficom
(bad)
and
cmp
add
pushf
vpunpcklwd
movs
mov
out
cmp
inc
pusha
mov
push
mov
and
in
fisubr
adc
je
or
fist
xor
or
jge
fistp
xor
iret
pop
xlat
ja
push
adc
into
or
push
and
mov
push
and
mov
pop
push
shr
nop
cmc
stc
pop
xor
jmp
sub
movs
shl
mov
push
aas
xor
sub
pop
lahf
mov
xor
dec
pop
jg
push
xor
nop
xchg
fstp
scas
or
dec
cmp
push
ret
xchg
and
pop
clc
mov
stos
and
fdiv
and
pusha
xor
mov
jle
ss
cld
cwde
in
movs
sbb
or
lds
and
jp
mov
fistp
call
and
cmp
mov
loop
ins
xchg
mov
scas
pop
daa
fdiv
int
xchg
mov
mov
dec
xchg
fldcw
sti
mov
movs
or
fwait
cli
clc
jnp
and
or
cmp
call
rcr
and
mov
jae
movs
mov
pop
xor
xchg
mov
and
ds
adc
enter
fisub
mov
fadd
and
jnp
xor
sahf
inc
jmp
sbb
xor
fidivr
sahf
mov
repnz
ds
mov
(bad)
fcmovnb
pop
pop
arpl
clc
fstp
add
in
adc
ret
ficom
sbb
push
inc
sbb
or
adc
enter
cli
cmc
sbb
imul
dec
sbb
loope
or
les
sbb
dec
cld
test
stos
mov
test
pop
cmp
mov
call
pusha
xchg
lock
jl
and
fwait
ret
(bad)
repnz
xchg
adc
int
push
pop
cmp
rol
sbb
or
and
icebp
mov
rol
repz
xor
push
add
jb
pop
dec
jb
ds
icebp
das
and
adc
jp
imul
fld
ja
adc
ds
xor
add
adc
cmp
jecxz
sub
jb
test
jno
inc
dec
cmc
(bad)
jae
in
adc
cmps
(bad)
(bad)
mov
lock
push
push
hlt
xor
data16
aaa
iret
icebp
and
and
inc
xor
ret
mov
js
scas
test
cld
lock
xor
xchg
mov
fimul
inc
loop
adc
jno
push
push
adc
iret
cld
(bad)
int3
leave
add
popf
js
(bad)
out
adc
pop
dec
jo
in
bound
(bad)
sar
loopne
adc
add
mov
ret
enter
loope
rcl
and
loop
jle
js
data16
mov
or
sbb
add
outs
fstp
outs
into
and
mov
push
shl
hlt
out
shl
ret
repnz
repnz
cmps
add
mov
(bad)
or
adc
in
or
repnz
loop
push
test
retf
repnz
mov
mov
(bad)
out
(bad)
nop
cmp
pop
mov
sub
inc
push
jns
xor
rcl
cs
loope
mov
add
jbe
aas
scas
cmp
(bad)
(bad)
sbb
mov
loope
sub
fsub
gs
ror
jo
pop
sub
retf
sar
mov
js
jl
dec
mov
sti
nop
dec
xchg
mov
sub
dec
inc
jg
dec
std
mov
cs
push
lahf
inc
sub
xchg
xchg
addr16
inc
or
fist
cli
loop
adc
sbb
gs
push
repnz
inc
inc
ins
jge
pusha
cli
inc
xchg
push
stos
fidiv
lea
add
pop
bnd
jp
and
push
les
aas
dec
push
lock
aam
sub
ins
arpl
dec
in
add
or
pop
xor
mov
sub
dec
mov
cli
mov
fwait
jmp
mov
ins
sub
fwait
push
scas
add
push
adc
inc
adc
xchg
dec
jl
dec
or
cs
rcl
push
ret
xor
mov
dec
fst
pop
pop
cs
mov
jo
fst
cmp
stos
mov
cmp
sub
jge
scas
mov
stc
mov
push
jmp
sbb
xchg
rcr
cmp
push
aad
dec
scas
imul
or
cld
int3
jp
push
stos
(bad)
lods
jmp
das
and
arpl
ficomp
into
push
xchg
mov
dec
xor
fcomp
cld
mov
add
cmp
fsubr
jae
pop
aad
pop
lods
aam
inc
dec
cdq
imul
cmp
dec
inc
popf
mov
jp
dec
cmp
dec
adc
lods
jno
mov
dec
arpl
outs
stos
ins
mov
jmp
add
add
sar
outs
mov
bound
push
jecxz
add
(bad)
mov
xchg
mov
jne
dec
(bad)
and
rcl
call
mov
mov
ret
mov
popf
fisttp
pop
ss
sbb
(bad)
pop
arpl
movs
fdiv
and
mov
pop
pop
xchg
jo
mov
push
sbb
or
or
jbe
and
rcr
cld
cmp
xchg
jmp
xor
pop
dec
test
fstp
cmp
xor
or
retf
pushf
aam
cli
jl
(bad)
xor
or
cld
cli
cmp
ins
pop
or
adc
sub
cld
shr
cwde
pop
dec
inc
xchg
scas
mov
repnz
sub
dec
push
dec
pop
shl
adc
mov
adc
mov
imul
jle
fnstcw
lahf
mov
mov
int3
in
(bad)
jg
pop
sub
retf
pushf
fild
xor
pop
popa
jmp
and
push
imul
enter
pop
push
push
xor
cmp
or
ins
fcomp
cdq
retf
not
stc
mov
jns
or
sbb
jmp
retf
scas
int3
pop
pusha
inc
fidivr
out
aas
das
or
in
fwait
sbb
push
int3
aad
sub
sub
adc
jnp
or
or
retf
das
dec
pop
popa
jle
pop
fwait
or
pop
std
outs
mov
sub
pop
or
lds
push
and
sub
mov
mov
fs
push
gs
mov
xchg
aad
xchg
lods
mov
adc
xchg
shl
es
inc
jb
push
(bad)
xlat
jecxz
xchg
push
in
xor
jne
mov
mov
xchg
mov
fistp
or
xor
sahf
or
repnz
popa
popa
add
shl
inc
mov
push
and
xor
add
lds
lods
xchg
inc
inc
leave
(bad)
xor
adc
mov
nop
xchg
inc
daa
mov
inc
fld
test
and
adc
cld
cmps
sub
mov
xor
fldenv
jb
lock
mov
in
lock
test
test
aad
(bad)
shl
push
sub
movs
pusha
jo
push
mov
cmp
adc
mov
jb
or
mov
int3
mov
add
sbb
or
(bad)
push
jnp
sbb
push
ror
push
dec
jo
lock
sbb
fs
bound
mov
jns
dec
bound
adc
shr
dec
(bad)
mov
jecxz
(bad)
jp
adc
pop
mov
dec
aaa
jb
jb
xor
and
sahf
mov
push
push
xor
addr16
fwait
push
dec
ss
bound
arpl
mov
xor
(bad)
cld
stc
mov
and
add
jnp
in
and
int
(bad)
into
sbb
mov
std
rcr
push
push
test
and
mov
imul
pop
xor
add
push
mov
inc
call
pop
and
jmp
fld
mov
cli
(bad)
call
pop
xchg
xchg
int
cld
(bad)
clc
xchg
unpckhps
mov
(bad)
pop
dec
mov
ds
test
sar
cmps
js
adc
aas
push
and
imul
jge
sbb
and
ins
clc
out
sbb
pop
pop
dec
or
mov
test
(bad)
or
(bad)
jnp
lods
pop
repnz
shl
je
mov
mov
sub
out
pop
lock
mov
mov
ror
xchg
neg
inc
in
pushf
add
sar
jnp
sbb
dec
jne
pop
mov
aas
leave
fld
jnp
jmp
popa
sub
sbb
movs
push
jle
mov
daa
add
in
dec
xchg
push
add
jb
mov
ds
jmp
push
xor
xchg
fwait
jnp
popa
jecxz
cdq
dec
(bad)
jmp
push
add
jnp
adc
pop
cmp
cmp
pusha
xchg
sbb
pop
repz
(bad)
or
retf
cmp
mov
inc
sbb
bound
nop
push
lods
jnp
pop
sbb
xchg
and
mov
fwait
dec
mov
les
xor
(bad)
cmp
sbb
sub
dec
dec
jne
dec
popa
arpl
aas
lds
loop
pop
inc
mov
fcmove
in
retf
hlt
jns
mov
and
pop
jo
inc
jnp
xchg
test
mov
jbe
bound
jnp
sub
scas
mov
mul
push
cs
xchg
aad
adc
jb
inc
push
std
cmc
repz
mov
fdivr
jmp
je
fnstsw
add
in
in
sub
jecxz
cmp
jp
mov
scas
ins
ds
scas
int3
pop
cmp
lods
(bad)
pushf
outs
or
jl
jmp
push
jnp
or
and
mov
shl
int3
sub
mov
cmp
push
cli
lock
lods
pop
call
sar
iret
pop
xchg
fs
in
sbb
pop
push
popf
dec
(bad)
fcomip
lods
ret
mov
rcl
test
pop
push
lods
mov
ret
or
scas
mov
pop
loope
jb
ins
out
int
push
lea
cli
rcl
inc
xchg
fsubr
jl
cmp
jo
mov
cmps
bound
mov
xor
in
fld
push
or
call
mov
jno
rcl
cld
sbb
dec
aad
je
inc
sbb
mov
add
ins
sub
mov
mov
jmp
pop
or
add
fbstp
aam
sub
inc
push
(bad)
mov
mov
inc
inc
mov
test
in
loope
or
fist
(bad)
jb
sbb
push
mov
inc
add
aaa
pushf
sub
add
repnz
test
jecxz
dec
pop
in
cmc
jg
jbe
push
(bad)
(bad)
jl
ret
inc
sbb
inc
xchg
mov
jbe
cmc
daa
rcr
xor
xchg
xchg
and
xor
sub
pop
adc
mov
(bad)
mov
int3
ins
xchg
in
stos
lods
(bad)
rcr
jae
pop
inc
jb
or
dec
cmp
add
mov
scas
adc
sub
movs
jno
push
int
bound
xchg
dec
push
jecxz
(bad)
cmp
pop
pop
clc
mov
fiadd
fnstsw
movs
add
pop
mov
sub
frndint
adc
cdq
out
adc
adc
repz
or
adc
ror
sbb
ret
add
out
or
mov
icebp
sbb
xor
or
cmps
lahf
pop
and
sar
add
cdq
mov
dec
xlat
dec
push
retf
xchg
rcl
xor
xor
xor
(bad)
(bad)
mov
stc
ja
lods
adc
fsub
loope
cld
ror
mov
mov
std
or
jb
shr
retf
jb
adc
mov
and
mov
mov
leave
out
icebp
daa
jmp
add
lock
and
xchg
cmps
add
test
shl
es
jmp
pushf
add
xchg
jge
stos
loop
je
es
sub
pop
ret
loop
cld
mov
pop
out
mov
iret
out
pop
xchg
mov
add
retf
sbb
pop
cmp
fbstp
or
adc
retf
test
repnz
jb
add
pop
dec
wrmsr
adc
adc
adc
push
ret
jb
dec
or
cdq
bound
test
test
jecxz
cmp
(bad)
bound
sti
in
jmp
mov
dec
push
outs
loop
and
and
fcom
mov
or
sub
(bad)
dec
push
jbe
jae
add
xlat
adc
mov
shl
int
jmp
(bad)
jno
inc
pop
jg
push
sub
call
xor
shl
inc
and
loop
and
mov
dec
xchg
stos
loop
cmps
and
add
cmp
pop
shl
and
int
data16
cli
(bad)
mov
in
dec
frstorw
adc
mov
cmps
adc
inc
mov
sbb
ficomp
dec
bound
xchg
xchg
sbb
sbb
aas
xor
mul
adc
sar
clc
jge
push
movs
out
arpl
dec
and
je
dec
fcmovb
aas
mov
sbb
cwde
dec
jge
cwde
jmp
adc
mov
mov
frstor
sbb
ins
ds
sbb
std
dec
adc
sbb
iret
lods
fild
fwait
test
out
mov
lea
push
outs
or
and
in
and
out
ins
in
mov
call
popa
pop
sbb
push
retf
cmp
lea
imul
jno
jbe
int3
js
aaa
aas
mov
jl
repz
loopne
mov
pushf
cmp
jmp
sub
cmp
cmp
inc
or
dec
mov
call
cli
int
cmp
ja
cwde
fmul
adc
test
call
sbb
ds
outs
imul
mov
xor
pop
push
mov
pushf
cmp
call
ret
mov
mov
int3
loopne
xor
jne
adc
fsubr
outs
fisubr
adc
jge
pusha
mov
jmp
and
push
dec
sahf
into
mov
mov
inc
xchg
fmul
pop
jnp
or
add
int3
in
test
fwait
mov
or
add
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
call
mov
neg
sbb
add
push
mov
add
call
push
mov
call
mov
mov
push
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
push
mov
call
mov
push
mov
call
mov
call
test
je
lea
push
push
call
mov
call
mov
mov
sub
push
call
lea
add
mov
mov
lea
push
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
push
push
mov
call
mov
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
add
call
push
mov
push
push
lea
call
push
lea
push
call
mov
call
test
jne
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
push
push
push
jmp
mov
cmp
je
mov
call
test
je
mov
call
test
je
mov
call
test
je
call
mov
mov
push
push
push
mov
call
add
call
mov
push
push
push
lea
call
push
lea
push
jmp
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
lea
push
mov
mov
call
mov
call
lea
call
mov
lea
add
push
mov
call
mov
mov
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
mov
mov
call
mov
mov
push
push
mov
call
add
mov
mov
push
call
mov
call
mov
mov
call
lea
push
call
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
mov
mov
and
mov
fild
and
mov
mov
fild
mov
sub
lea
fchs
faddp
fdiv
fstp
push
push
push
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
call
mov
mov
add
push
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
lea
push
push
call
mov
mov
add
push
push
lea
call
call
mov
mov
push
push
mov
call
add
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
cmp
jne
mov
push
push
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
lea
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
lea
call
mov
call
movzx
push
push
push
lea
call
lea
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
movzx
push
push
push
lea
call
mov
mov
push
push
lea
push
push
call
add
call
cmp
jne
mov
push
push
push
call
call
mov
mov
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
pop
ret
push
mov
cmp
jne
cmp
je
lea
call
lea
pop
jmp
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
lea
call
mov
call
movzx
push
push
call
mov
push
lea
call
push
push
lea
call
mov
mov
mov
push
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
push
call
mov
call
xor
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jle
push
push
call
add
cmp
je
sub
sar
cmp
je
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
call
mov
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
mov
mov
mov
push
push
push
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
mov
mov
call
mov
mov
mov
push
push
push
mov
mov
call
test
jne
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
xor
mov
mov
mov
mov
push
mov
call
mov
lea
push
push
mov
call
mov
call
mov
mov
cmp
setne
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
push
lea
call
mov
mov
mov
mov
lea
push
mov
push
push
lea
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
push
lea
call
mov
lea
push
mov
call
mov
lea
call
mov
call
test
je
mov
call
test
jne
mov
call
test
je
mov
call
test
je
mov
pop
mov
pop
pop
mov
mov
pop
ret
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
mov
lea
push
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
mov
push
push
call
add
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
cmp
je
push
call
mov
call
test
jne
mov
call
test
je
mov
call
test
jne
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
lea
push
mov
call
mov
mov
call
test
sete
mov
lea
call
cmp
je
lea
push
mov
call
mov
lea
push
mov
call
mov
lea
call
mov
lea
call
push
push
lea
call
test
jne
call
mov
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
push
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
push
push
push
push
lea
mov
call
mov
cmp
je
call
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
cmp
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
lea
push
push
push
push
lea
mov
mov
call
mov
cmp
je
call
mov
mov
push
push
push
call
add
mov
lea
call
mov
mov
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
call
mov
mov
push
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
push
jne
push
push
mov
jmp
lea
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
push
mov
lea
push
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jne
mov
add
push
call
lea
add
mov
mov
lea
push
lea
call
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
je
lea
call
test
je
lea
call
test
jne
mov
lea
push
mov
call
push
push
lea
push
lea
call
cmp
jne
call
mov
mov
push
push
push
mov
call
add
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
pop
pop
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
mov
push
push
push
push
call
mov
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
mov
call
lea
mov
call
lea
lea
push
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
call
push
mov
call
call
mov
push
lea
mov
call
mov
call
mov
call
push
mov
lea
mov
push
mov
call
mov
mov
mov
call
call
mov
mov
push
push
push
push
mov
call
add
push
lea
lea
push
mov
call
lea
push
mov
call
lea
mov
call
mov
push
mov
call
lea
push
call
lea
mov
call
mov
push
mov
call
mov
call
push
mov
mov
call
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
lea
push
mov
mov
call
mov
call
lea
mov
mov
call
test
jne
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
mov
call
lea
add
push
mov
call
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
call
test
je
mov
push
push
call
test
je
lea
call
mov
push
push
lea
call
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
lea
call
mov
push
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
mov
sub
push
call
add
add
mov
mov
lea
push
lea
call
mov
push
push
push
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
lea
call
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
lea
call
mov
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
mov
mov
pop
ret
mov
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
mov
mov
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
push
lea
mov
call
mov
mov
mov
mov
lea
push
mov
push
mov
push
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
call
test
je
mov
call
test
jne
mov
call
test
jne
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
cmp
je
push
mov
call
mov
mov
mov
mov
mov
pop
mov
pop
pop
ret
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
mov
push
call
cmp
lea
jl
cmp
jne
mov
mov
lock
mov
pop
pop
pop
ret
mov
mov
mov
push
push
mov
call
mov
test
jne
jmp
mov
mov
mov
add
push
add
push
push
lea
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
lea
push
mov
je
cmp
lea
jge
cmp
jge
push
call
mov
mov
pop
mov
pop
ret
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
call
add
mov
pop
pop
ret
call
cmp
je
call
mov
call
xor
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
add
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
push
push
push
push
mov
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
mov
je
lea
mov
add
sub
jne
cmp
jle
mov
push
lea
call
mov
mov
push
push
push
push
call
add
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
int3
push
mov
mov
push
push
push
mov
push
mov
mov
mov
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
xor
push
mov
mov
mov
mov
mov
push
push
lea
push
push
call
mov
call
mov
mov
push
push
lea
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
push
sub
mov
push
mov
call
add
add
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
lea
mov
push
call
add
cmp
mov
jne
pop
mov
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
shr
push
mov
add
mov
movzx
push
push
push
call
test
je
push
push
push
call
mov
add
test
jne
pop
pop
xor
pop
pop
ret
movzx
call
push
push
push
push
push
lea
push
push
push
mov
call
mov
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
movzx
mov
push
push
push
push
push
mov
push
push
call
push
call
test
jl
mov
cmp
jg
mov
mov
pop
mov
pop
mov
pop
pop
ret
push
call
int3
int3
int3
int3
push
mov
push
push
mov
test
mov
jne
call
pop
pop
pop
ret
mov
test
jne
push
call
mov
mov
mov
push
mov
sub
mov
sub
mov
sub
or
jge
push
mov
call
mov
cmp
mov
push
ja
lea
push
push
push
call
jmp
push
push
push
call
add
test
pop
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
ret
int3
int3
push
mov
sub
mov
push
xor
cmp
push
mov
mov
je
mov
push
mov
xor
cmp
jle
mov
cmp
jne
test
jne
mov
mov
sub
mov
sub
sub
or
mov
jge
push
mov
call
mov
mov
mov
add
mov
lea
sar
cmp
jl
test
je
test
jl
mov
cmp
jg
mov
mov
mov
pop
mov
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
mov
test
push
push
mov
jg
jl
mov
cmp
jae
mov
xor
jmp
mov
push
push
push
push
call
push
push
lea
mov
mov
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
push
mov
add
mov
mov
adc
mov
cmp
jl
jg
cmp
jbe
push
push
lea
call
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
push
mov
push
mov
test
je
mov
mov
mov
or
jne
mov
push
push
mov
call
mov
mov
push
push
mov
call
mov
pop
pop
ret
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
call
cmp
je
push
call
mov
call
push
push
call
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
mov
jne
jmp
lea
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
mov
lea
push
call
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
jmp
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
lea
add
cmp
je
cmp
lea
jl
mov
cmp
jne
push
call
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
push
push
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
push
lea
push
mov
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
push
mov
call
test
je
mov
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
mov
add
lea
cmp
mov
je
cmp
jl
mov
cmp
jne
mov
mov
call
cmp
lea
jl
cmp
jne
mov
mov
lock
jmp
mov
mov
mov
push
push
mov
call
mov
test
je
mov
mov
mov
lea
push
add
lea
push
push
lea
push
call
add
mov
add
or
lock
dec
test
jg
mov
mov
mov
push
mov
call
add
mov
jmp
mov
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
call
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
xor
test
setne
mov
test
jne
push
call
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
jmp
lea
mov
add
test
jne
sub
sar
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
mov
call
push
lea
mov
call
mov
push
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
jne
mov
mov
push
push
call
add
test
je
mov
mov
push
push
call
add
cmp
jne
xor
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
setne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
test
setne
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
call
test
je
mov
call
pop
mov
pop
ret
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
mov
mov
push
push
push
call
mov
add
test
je
push
lea
call
mov
call
mov
push
push
push
mov
call
mov
add
lea
push
mov
call
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
push
push
mov
test
mov
mov
mov
jge
push
call
lea
add
mov
mov
test
je
mov
push
push
call
add
cmp
jne
pop
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
sub
push
mov
mov
mov
mov
test
mov
jge
mov
push
call
add
add
add
mov
test
je
mov
push
push
call
add
cmp
jne
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
movzx
mov
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
mov
lea
mov
lea
push
push
call
mov
mov
add
test
mov
je
lea
mov
add
sub
jne
mov
cmp
jle
mov
push
lea
call
mov
push
push
push
push
call
mov
add
test
jne
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
sar
js
cmp
jg
mov
mov
mov
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
jne
mov
push
call
mov
push
call
mov
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
push
je
mov
push
push
call
add
cmp
jne
mov
push
push
call
mov
mov
push
push
call
mov
add
test
je
mov
push
push
call
add
mov
pop
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
sub
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
push
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
push
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
mov
push
mov
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
push
mov
push
mov
mov
push
push
push
call
mov
push
call
mov
mov
add
push
push
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
call
add
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
push
call
mov
add
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
lea
call
mov
lea
push
lea
push
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
push
call
add
push
mov
mov
push
mov
call
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
xor
push
mov
mov
call
mov
call
mov
push
push
lea
push
lea
mov
mov
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
jne
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
add
lea
push
adc
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
push
push
push
push
call
push
push
mov
mov
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
push
call
test
je
mov
add
mov
call
cmp
ja
jb
cmp
jae
call
mov
lea
push
call
mov
call
mov
mov
lea
push
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
push
push
lea
call
push
lea
push
call
mov
sub
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
pop
pop
mov
mov
pop
ret
push
lea
call
mov
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jmp
mov
movsx
push
lea
push
push
call
add
lea
call
cmp
ja
jb
cmp
jae
lea
call
test
je
mov
push
call
cmp
je
add
cmp
jle
push
push
call
test
je
nop
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
add
push
call
mov
add
add
mov
mov
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
jmp
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
lea
call
mov
test
je
push
call
add
mov
mov
pop
xor
pop
mov
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
lea
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
push
lea
call
test
setne
call
mov
mov
add
push
call
lea
mov
mov
movzx
mov
mov
push
push
push
push
call
add
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
cmp
jne
push
push
lea
call
mov
call
mov
mov
movzx
push
push
push
push
push
call
add
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
call
push
mov
mov
push
mov
call
mov
push
mov
mov
push
call
mov
mov
call
mov
add
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
xor
mov
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
jne
xor
mov
mov
pop
pop
pop
mov
pop
ret
push
push
lea
call
push
lea
call
test
je
push
push
lea
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
push
push
push
push
push
push
lea
push
call
test
jne
call
push
push
lea
call
push
lea
push
call
mov
lea
push
mov
push
push
call
test
jne
mov
mov
push
call
cmp
jne
call
push
push
lea
call
push
lea
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
push
lea
push
lea
call
mov
lea
push
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
nop
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
push
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
push
push
push
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
push
push
lea
push
push
mov
call
mov
call
mov
call
mov
mov
push
push
push
mov
call
add
push
lea
push
lea
call
mov
call
mov
push
push
push
mov
call
add
push
lea
call
test
jne
call
mov
mov
push
push
push
call
add
jmp
push
call
mov
test
mov
jne
mov
call
mov
mov
push
push
push
push
call
mov
add
push
push
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
pop
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
lea
call
test
jne
call
mov
mov
push
push
call
add
jmp
mov
push
call
test
jne
call
mov
mov
add
call
mov
push
push
push
call
add
jmp
lea
call
mov
push
push
lea
call
test
je
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
mov
call
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
mov
push
mov
push
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
mov
add
cmp
jl
push
push
call
add
test
je
sub
sar
je
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
jmp
push
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
jle
mov
push
lea
call
mov
push
call
add
cmp
jge
call
cmp
je
call
mov
push
push
mov
call
add
jmp
lea
call
mov
call
movzx
push
push
push
lea
call
mov
push
push
push
push
call
cmp
jne
call
mov
mov
push
push
call
jmp
call
mov
mov
push
push
call
mov
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
pop
pop
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
movzx
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
lea
call
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
call
push
push
lea
call
mov
mov
mov
mov
mov
mov
lea
lea
push
call
lea
add
push
call
mov
lea
call
or
mov
lea
call
mov
mov
call
push
mov
mov
mov
push
call
mov
mov
mov
add
mov
mov
call
mov
mov
jmp
mov
push
mov
lea
call
mov
mov
mov
ret
call
push
push
lea
call
mov
push
mov
lea
call
mov
lea
call
mov
mov
mov
ret
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
push
push
xor
mov
mov
mov
cmp
jge
push
call
mov
cmp
je
cmp
je
mov
lea
mov
lea
cmp
mov
jae
push
push
call
mov
lea
add
cmp
jae
mov
push
push
call
mov
mov
add
add
lea
push
mov
mov
push
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
cmp
jge
mov
cmp
je
mov
mov
call
cmp
jne
call
mov
mov
mov
call
mov
mov
lea
mov
push
push
mov
call
mov
jmp
mov
mov
mov
mov
test
je
mov
mov
call
test
jne
call
mov
mov
mov
call
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
call
xor
test
setne
test
jne
push
call
mov
mov
mov
call
add
mov
mov
mov
test
je
test
jne
movzx
push
call
test
je
push
push
mov
call
jmp
xor
jmp
mov
lea
nop
mov
add
test
jne
sub
push
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
push
je
jmp
lea
mov
cmp
je
mov
lea
mov
cmp
ja
sub
mov
mov
mov
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
or
mov
lea
mov
mov
mov
sub
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
or
add
jne
mov
cmp
jne
mov
cmp
jbe
mov
sub
cmp
lea
je
mov
push
call
add
cmp
ja
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
push
je
mov
push
push
call
add
cmp
je
mov
call
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
xor
mov
mov
mov
cmp
push
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
test
je
mov
push
mov
call
mov
mov
mov
pop
pop
pop
mov
mov
mov
pop
ret
mov
mov
push
push
call
add
test
je
mov
mov
push
push
push
call
add
push
lea
call
mov
mov
mov
lea
push
push
call
add
mov
mov
lea
call
jmp
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
add
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
push
lea
push
lea
call
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
cmp
sete
test
sete
test
jne
call
mov
mov
push
push
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
push
lea
push
lea
call
push
lea
call
lea
call
lea
call
test
je
push
push
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
add
push
call
lea
mov
mov
mov
add
push
call
lea
mov
mov
mov
mov
push
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
test
jne
pop
pop
pop
mov
push
push
call
call
mov
push
push
mov
call
add
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
mov
mov
push
call
mov
call
or
mov
mov
call
lea
push
mov
call
mov
add
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
push
call
mov
call
test
jne
lea
call
mov
mov
push
call
push
push
push
lea
push
push
call
add
lea
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
push
mov
mov
push
mov
call
mov
call
mov
mov
call
lea
push
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
add
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
mov
jmp
lea
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
or
mov
mov
add
lea
mov
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
jne
mov
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
cmp
mov
jge
mov
cmp
je
push
call
mov
jmp
push
lea
push
lea
call
mov
call
mov
cmp
mov
jl
mov
lea
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
push
push
lea
call
push
lea
call
mov
mov
push
push
lea
call
mov
push
lea
call
test
jne
push
push
push
mov
push
call
add
test
jne
call
mov
mov
push
push
push
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
cmp
jle
mov
cmp
je
push
call
mov
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
mov
push
push
call
test
je
mov
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
call
add
cmp
jne
mov
push
lea
or
push
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
cmp
jne
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
push
push
push
lea
push
call
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
lea
call
mov
cmp
je
mov
cmp
je
push
call
add
mov
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
mov
xor
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
mov
push
push
push
push
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
mov
mov
add
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
push
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
lea
call
mov
mov
mov
push
push
push
push
push
push
push
push
call
mov
cmp
jle
mov
mov
mov
sub
lea
sub
or
jge
push
lea
call
mov
test
je
push
push
push
push
mov
push
push
push
push
call
mov
test
jne
xor
jmp
mov
lea
mov
add
test
jne
sub
js
cmp
jg
mov
mov
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
mov
xor
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
je
mov
cmp
je
mov
cmp
je
push
push
lea
call
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
jmp
push
mov
push
call
add
test
jne
push
push
lea
call
push
lea
call
lea
call
mov
mov
mov
push
mov
push
lea
call
test
jne
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
jmp
mov
push
mov
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
push
mov
mov
lea
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
pop
pop
pop
mov
pop
ret
call
mov
mov
push
mov
push
mov
push
push
push
mov
call
add
mov
mov
ret
mov
lea
call
mov
lea
call
mov
jmp
call
mov
mov
push
push
push
mov
call
add
jmp
call
mov
push
push
mov
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
mov
call
push
push
push
lea
call
push
lea
push
call
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
mov
jmp
xor
test
je
and
mov
test
pop
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
call
lea
push
lea
mov
call
mov
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
pop
mov
xor
mov
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
mov
call
add
cmp
jl
nop
push
lea
push
lea
call
mov
call
cmp
je
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
add
call
add
cmp
jle
mov
mov
mov
push
lea
push
lea
call
mov
mov
cmp
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
sub
add
mov
mov
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
mov
push
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
call
test
je
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
call
mov
call
movzx
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
add
push
add
call
add
cmp
jle
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
push
call
add
cmp
jl
push
call
add
cmp
jg
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
test
jne
push
lea
push
lea
call
mov
call
test
je
push
lea
push
lea
call
mov
call
push
mov
call
add
cmp
jne
push
lea
push
lea
call
mov
call
test
je
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
call
push
push
push
push
lea
call
push
lea
push
call
call
push
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
lea
call
cmp
jne
mov
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
sete
test
sete
test
je
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
push
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
lea
push
push
push
push
lea
call
push
lea
call
mov
call
push
lea
mov
mov
push
call
mov
mov
push
push
lea
push
lea
call
push
lea
call
mov
mov
call
call
mov
mov
push
mov
push
push
push
mov
call
add
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
call
mov
lea
call
mov
pop
xor
mov
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
push
lea
call
mov
mov
push
push
lea
push
push
call
mov
mov
add
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
push
push
xor
cmp
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
push
lea
call
mov
mov
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
jmp
mov
xor
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
add
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
push
call
add
add
mov
mov
mov
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
sub
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
add
mov
push
mov
call
add
mov
mov
mov
mov
add
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
mov
add
push
lea
call
mov
lea
call
mov
lea
call
mov
xor
mov
mov
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
sub
push
call
mov
mov
push
push
push
call
mov
add
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
push
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
add
lea
call
lea
call
test
je
push
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
lea
call
push
lea
call
push
lea
push
lea
call
mov
call
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
call
mov
xor
test
setne
push
lea
push
push
push
call
mov
mov
add
lea
lea
mov
add
test
jne
mov
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
add
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
lea
call
test
jne
pop
pop
mov
lea
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jge
call
push
push
push
push
lea
call
push
lea
push
call
push
push
lea
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
lea
call
mov
mov
push
push
lea
push
push
call
push
mov
call
add
cmp
jl
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
add
push
call
lea
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
mov
mov
push
call
mov
push
mov
lea
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
lea
mov
mov
add
test
jne
sub
sar
push
lea
mov
push
push
push
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
mov
add
push
mov
call
add
cmp
jle
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
push
lea
call
mov
lea
call
mov
lea
call
push
push
lea
call
mov
mov
test
jge
push
call
movzx
cmp
jne
cmp
jge
push
call
movzx
cmp
je
push
lea
call
push
lea
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
mov
call
test
je
call
mov
mov
push
push
call
add
lea
push
push
call
mov
call
mov
push
lea
call
mov
lea
call
push
push
lea
push
lea
call
mov
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
jne
mov
lea
lea
push
push
lea
push
lea
mov
call
mov
lea
push
push
lea
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
lea
push
lea
call
mov
lea
push
mov
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
je
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
lea
call
mov
call
test
sete
test
je
call
push
push
push
push
lea
call
push
lea
push
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
lea
call
mov
lea
call
push
lea
push
lea
call
mov
call
mov
call
mov
mov
push
push
push
push
mov
call
mov
add
push
push
push
push
call
test
je
push
push
call
mov
lea
call
mov
xor
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
push
call
add
mov
mov
test
je
mov
call
mov
jmp
xor
mov
lea
push
lea
call
add
mov
mov
push
push
mov
call
mov
mov
test
je
mov
jmp
mov
push
lea
push
push
push
push
push
push
mov
call
mov
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
push
push
call
test
je
mov
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
adc
ss
rol
pushf
stos
add
pop
add
nop
nop
nop
nop
nop
nop
stc
in
cld
mov
inc
lahf
xchg
ror
retf
push
js
pushf
stos
and
loopne
mov
jmp
lods
and
imul
rcr
jae
jmp
outs
cdq
push
retf
and
fnsave
xchg
adc
fwait
dec
push
fstp
dec
ror
inc
ffree
and
fwait
push
xchg
(bad)
mov
pop
out
ret
inc
out
movs
test
xchg
dec
ds
sub
retf
je
stos
adc
les
scas
jae
jmp
pushf
adc
std
xor
xchg
lahf
pop
lahf
mov
retf
mov
xchg
retf
outs
popa
ins
pop
out
jg
std
mov
ret
inc
pusha
stos
inc
sbb
pop
mov
add
sub
adc
call
sub
adc
push
and
mov
bound
jmp
and
inc
sahf
cdq
and
mul
lods
addr16
sbb
jp
dec
mov
push
mov
imul
ret
(bad)
je
jg
out
ror
adc
jmp
xchg
test
stc
lahf
jmp
and
iret
adc
pushf
nop
xor
jecxz
js
pushf
cmc
mov
test
bound
jmp
jne
aas
dec
mov
jmp
mov
add
rol
dec
mov
cmps
daa
in
sbb
xor
and
call
in
cdq
cmp
out
adc
arpl
in
inc
and
pop
cmp
test
sbb
push
jp
pop
sbb
rol
imul
not
jae
jmp
mov
xchg
adc
ss
cwde
sar
jmp
inc
popf
push
fimul
mov
push
in
xchg
xor
bound
sbb
test
pushf
mov
sahf
xchg
mov
or
in
nop
das
or
inc
adc
mov
pushf
mov
ss
ror
nop
daa
xor
pop
sub
daa
pop
sub
mov
es
stos
test
leave
pop
mov
mov
push
(bad)
xchg
adc
push
pusha
scas
lods
addr16
pop
sbb
vunpckhps
pop
call
xchg
or
rcl
in
pop
fadd
lods
ss
fstp
push
xchg
nop
nop
jg
daa
sub
std
leave
dec
xor
data16
sub
shr
rcl
adc
push
fldenv
je
lock
pop
jmp
sbb
stos
retf
pop
pushf
cld
call
cwde
fwait
dec
ds
test
call
icebp
sbb
jp
lods
nop
nop
es
cdq
ins
out
gs
mov
push
imul
movsx
ret
push
retf
dec
in
fisub
clc
loop
dec
mov
les
push
xor
cdq
ins
in
push
sbb
push
out
nop
adc
fadd
and
jmp
imul
inc
mov
in
dec
leave
jne
inc
popf
inc
fistp
fistp
in
gs
push
pusha
dec
enter
shl
pop
and
lahf
push
ss
xchg
cmp
(bad)
sbb
xor
jnp
test
pop
push
arpl
aas
neg
cmp
sbb
dec
lods
data16
and
test
dec
add
ret
pusha
adc
inc
loope
fbstp
inc
inc
scas
adc
cld
out
push
jmp
mov
jg
and
pop
cdq
jo
xchg
mov
aad
pop
xchg
and
pop
and
mov
push
xor
daa
sbb
notrack
retf
dec
xor
dec
fdivr
retf
out
movzx
call
and
mov
lea
adc
and
pop
adc
mov
cli
adc
inc
inc
int3
das
sbb
or
test
dec
daa
icebp
iret
popf
mov
push
lods
(bad)
imul
ss
cmps
sar
nop
jbe
push
das
jle
adc
xchg
call
pop
arpl
clc
outs
out
xchg
daa
push
mov
and
cdq
gs
and
lds
sbb
aam
out
push
adc
dec
push
in
adc
ss
mov
fdiv
pop
ds
push
add
(bad)
daa
xor
out
push
mov
int3
ret
gs
push
adc
ss
dec
rol
xchg
push
and
xchg
cdq
push
mov
cdq
sbb
sbb
fsub
fwait
and
daa
push
mov
and
cdq
jle
shl
lds
sbb
xlat
adc
jmp
add
push
xchg
test
jae
ret
inc
or
pop
out
push
in
or
xchg
das
mov
sahf
fsub
mov
test
arpl
je
inc
icebp
mov
push
xor
sar
xor
jge
xor
jmp
pop
lods
scas
xchg
xchg
int
xor
rol
arpl
addr16
or
mov
leave
dec
das
mov
or
push
lods
vunpckhps
pop
inc
icebp
mov
fmul
sub
pusha
pushf
rcl
cmps
pop
mov
xor
push
fbstp
movs
sub
adc
cmp
cmps
stos
fmul
add
and
daa
sub
dec
mov
fmul
push
xor
out
out
(bad)
push
add
xchg
pop
jmp
inc
mov
cdq
mov
cli
and
lock
mov
jmp
push
int3
inc
mov
jbe
xchg
daa
and
or
jecxz
aas
test
mov
js
xchg
adc
jle
and
fild
push
and
loopne
jb
adc
mov
and
fiadd
pusha
cdq
jmp
lods
bound
jns
dec
nop
and
outs
xchg
repnz
jae
rcl
push
sub
xchg
xchg
sbb
nop
sub
in
sbb
mov
mov
xchg
cmp
cld
cs
sbb
xchg
or
pusha
push
sbb
cmps
sbb
push
vunpcklps
pop
ins
and
and
pop
sub
mov
pusha
cs
or
icebp
movs
retf
fsubr
or
not
add
xlat
mov
das
push
adc
(bad)
in
pop
jmp
adc
mov
imul
cwde
cwde
push
xchg
das
fistp
inc
mov
and
test
mov
inc
xor
adc
cmc
push
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
jne
push
push
push
push
lea
push
call
test
je
mov
sub
je
sub
je
sub
jne
push
call
mov
call
jmp
call
mov
call
jmp
mov
push
push
push
push
call
call
mov
mov
push
push
push
push
call
lea
push
call
lea
push
call
push
call
lea
push
push
call
test
jne
mov
push
push
lea
mov
call
mov
and
cmp
pop
je
cmp
je
cmp
jne
call
mov
mov
push
push
push
mov
call
lea
add
cmp
jne
call
push
push
push
lea
call
mov
push
mov
call
mov
lea
call
push
lea
call
push
lea
push
call
push
call
add
call
mov
mov
mov
push
mov
push
push
push
call
mov
add
mov
lea
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
cmp
je
push
push
lea
call
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
lea
mov
add
test
jne
sub
push
sar
lea
push
push
push
push
lea
call
call
mov
mov
mov
push
push
push
call
add
mov
lea
call
mov
lea
call
mov
call
mov
mov
push
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
cmp
mov
je
call
cmp
je
call
cmp
je
call
mov
mov
push
push
push
call
add
jmp
call
mov
mov
push
push
push
call
add
lea
push
push
mov
call
push
call
test
je
lea
push
push
push
call
mov
push
push
push
lea
push
push
push
mov
mov
call
push
push
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
xor
test
mov
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
add
cmp
jl
mov
push
lea
push
mov
lea
mov
call
mov
call
test
je
xor
jmp
mov
test
je
and
mov
test
je
call
push
push
push
push
lea
call
push
lea
push
call
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
mov
call
mov
pop
and
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
push
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
lea
push
lea
call
mov
call
push
push
lea
push
lea
mov
call
mov
call
push
mov
lea
push
push
lea
push
lea
call
mov
call
mov
lea
push
call
mov
call
mov
mov
mov
mov
push
lea
push
lea
call
mov
call
mov
mov
mov
cmp
je
mov
cmp
je
push
push
lea
call
mov
mov
push
push
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
movzx
movzx
push
push
mov
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
lea
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
lea
push
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
call
mov
lea
call
mov
push
push
lea
push
call
mov
mov
push
push
push
push
mov
mov
mov
mov
call
push
push
push
push
mov
call
mov
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
add
mov
call
mov
xor
cmp
je
mov
mov
cmp
mov
mov
je
mov
jmp
mov
mov
mov
add
mov
jne
mov
cmp
je
lea
mov
cmp
jne
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
cmp
je
push
mov
mov
mov
mov
mov
mov
add
mov
mov
call
cmp
jne
call
mov
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
lea
call
call
cmp
je
call
mov
call
mov
call
call
mov
call
mov
pop
mov
pop
mov
pop
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
call
xor
cmp
jne
mov
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
cmp
je
call
mov
call
push
lea
push
lea
call
mov
call
test
sete
cmp
jne
push
push
lea
call
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
push
lea
push
push
lea
push
lea
call
mov
call
mov
mov
cmp
jne
mov
cmp
jne
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
xor
mov
mov
pop
pop
pop
mov
pop
ret
call
cmp
jne
call
mov
mov
push
push
push
call
push
call
add
mov
mov
cmp
je
mov
call
mov
jmp
xor
mov
call
push
mov
call
mov
call
call
mov
call
call
mov
mov
cmp
je
mov
jmp
xor
call
mov
call
mov
push
call
mov
cmp
je
push
call
mov
call
mov
cmp
je
push
push
push
lea
push
call
mov
call
mov
push
lea
mov
mov
push
call
mov
call
mov
mov
call
mov
lea
call
mov
cmp
je
call
mov
mov
push
push
push
mov
call
mov
add
push
push
call
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
call
add
mov
lea
call
mov
lea
call
mov
lea
call
mov
pop
pop
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
xor
cmp
mov
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
mov
mov
mov
push
mov
call
add
cmp
jl
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
lea
push
lea
call
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
mov
mov
mov
add
lea
lea
push
push
push
lea
call
push
lea
mov
call
mov
mov
mov
mov
push
add
call
add
cmp
jle
call
mov
call
xor
test
setne
test
jne
push
call
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
mov
mov
mov
call
add
mov
mov
push
push
lea
call
push
lea
call
mov
push
lea
call
mov
mov
mov
push
push
lea
call
test
je
mov
mov
push
push
lea
push
lea
call
mov
push
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
mov
push
push
push
call
add
cmp
jl
push
push
call
add
test
je
sub
sar
cmp
je
mov
mov
adc
cmps
cmc
inc
stos
adc
add
out
popw
sub
mov
mov
xchg
mov
inc
les
pusha
loopne
repz
inc
and
inc
mov
adc
push
xchg
loop
mov
inc
mov
cs
leavew
jg
mov
xchg
push
stos
cmps
fwait
in
repnz
stos
jp
or
sbb
sahf
xchg
rcl
repnz
jbe
push
test
fdivp
data16
cmp
pusha
push
inc
mov
jecxz
call
push
add
pop
loopne
xchg
add
mov
test
xchg
pop
xchg
or
fisub
repz
ret
imul
sub
add
cmp
bound
or
xlat
adc
imul
pop
sub
dec
loop
mov
cmc
ret
out
jl
or
scas
inc
ficom
mov
mov
push
cli
ficomp
test
rol
sbb
mov
cmc
neg
xchg
mov
pop
mov
mov
mov
inc
into
push
not
xor
scas
push
add
pop
loopne
sbb
fbld
mov
pop
xchg
pop
add
mov
add
loope
xlat
inc
xchg
mov
and
sub
inc
inc
fcom
retf
or
js
out
imul
sub
pop
pop
iret
ja
test
adc
xchg
out
jl
test
adc
sar
cld
nop
adc
es
repz
sub
xchg
out
lods
xor
jb
inc
push
cli
mov
mul
dec
push
inc
jge
sahf
add
mov
aas
out
ret
fsubp
xor
and
jns
(bad)
push
enter
mov
xchg
xchg
fisub
inc
or
iret
pusha
xchg
popa
mov
push
inc
(bad)
mov
cmc
out
jmp
outs
xor
cli
mov
xchg
mov
dec
mov
mov
jg
popf
(bad)
out
adc
lods
scas
imul
push
div
dec
push
or
movs
test
mov
not
icebp
cmp
sar
out
pusha
xchg
mov
loop
pusha
adc
rol
add
xor
dec
aam
nop
dec
neg
div
fcomp
std
adc
ficom
lar
xchg
je
jecxz
dec
cmps
mov
jbe
data16
jbe
inc
lock
ds
mov
pusha
push
push
std
mov
addr16
test
ss
pop
mov
push
push
(bad)
push
mov
(bad)
mov
cwde
cmp
out
xchg
or
(bad)
and
mov
ss
rcr
jecxz
sbb
aas
mov
push
xor
or
pop
retf
mov
scas
rol
aad
les
sub
rcr
jno
repz
movs
je
(bad)
cmp
addr16
or
(bad)
out
loope
(bad)
cmp
mov
popf
xchg
add
repz
xchg
xor
and
jmp
push
adc
ds
nop
out
movs
pop
dec
add
mov
aas
adc
repz
add
cmp
enter
addr16
jns
js
push
stos
outs
inc
jns
xor
daa
pop
fisub
or
int
mov
pop
out
jnp
addr16
(bad)
sahf
adc
dec
push
mov
pop
loop
pop
mov
ds
icebp
xor
xor
mov
cmps
inc
sub
xchg
mov
ja
out
add
fidiv
and
jnp
add
out
jp
cs
push
sti
adc
push
jmp
addr16
xlat
sub
or
dec
(bad)
cmps
adc
or
loopne
mov
xchg
push
out
jle
les
xor
clc
and
adc
xor
or
daa
jmp
fmul
push
jae
pop
cmps
push
data16
adc
lods
push
fcmovb
pop
mov
pop
inc
into
and
sahf
ret
sbb
push
sbb
cli
ja
jmp
bound
or
(bad)
es
ds
push
cmp
jbe
push
xchg
xor
and
cmps
pop
fwait
pop
mov
iret
test
into
xlat
add
cmp
rol
xor
stc
adc
outs
adc
mov
xor
or
int
mov
add
mov
lods
dec
mov
scas
in
shr
jns
pop
imul
xchg
xor
cs
jle
cmp
cpuid
mov
jb
cmp
pop
xchg
(bad)
cmp
les
xlat
push
fcmovnu
aaa
mov
ss
adc
(bad)
xor
or
mul
shld
stos
xor
sahf
and
outs
inc
push
inc
or
inc
cmps
pop
mov
es
mov
shl
ret
xchg
jecxz
daa
mov
jae
fbstp
xchg
add
mov
push
loop
sbb
out
inc
cli
ins
aaa
jo
stos
(bad)
mov
cmps
sub
xor
xchg
rcr
les
mov
(bad)
fnstsw
(bad)
mov
mov
js
mov
les
adc
popa
(bad)
iret
xor
dec
cld
sub
inc
div
xchg
add
dec
ja
adc
lods
ds
aaa
adc
xor
inc
es
add
adc
cmc
bound
or
std
bound
adc
stos
xchg
rcl
push
es
imul
xor
(bad)
and
mov
and
mov
icebp
jg
addr16
movs
ins
int3
and
icebp
mov
dec
nop
ss
popa
clc
cmp
and
jg
mov
and
jo
adc
aad
fistp
pop
mov
stc
mov
xlat
out
loope
in
xchg
dec
mov
mov
add
out
bound
push
inc
cmp
movs
fwait
cwde
(bad)
in
xlat
cli
outs
in
xchg
imul
mov
pushf
and
(bad)
and
ins
cli
in
lea
(bad)
mul
out
cmp
into
push
xchg
pop
or
xchg
mov
enter
inc
call
xchg
xor
jecxz
mov
jmp
sbb
pop
into
aaa
mov
jecxz
arpl
push
icebp
je
movs
add
mov
jb
lds
mov
jmp
xchg
mov
push
outs
nop
and
xor
or
repnz
scas
xchg
test
js
mov
sub
pop
aad
pop
mov
in
data16
pop
xchg
sbb
es
jno
add
gs
pop
mov
pop
popa
jb
ss
or
lds
(bad)
ja
fs
fwait
mov
mov
sub
cmp
aas
jmp
hlt
test
out
jb
cmps
adc
dec
xchg
outs
out
not
ins
xchg
mov
mov
or
or
fwait
imul
dec
inc
fs
adc
xchg
add
push
test
add
pushf
ja
stos
(bad)
jne
outs
push
mov
cmp
icebp
and
aad
aad
js
aas
jmp
std
mov
and
sti
rsm
pushf
scas
into
push
or
push
sub
dec
movs
jb
xchg
add
push
hlt
repnz
fwait
imul
and
jge
dec
push
mov
xor
or
jmp
mov
and
das
jae
fsubp
dec
inc
repnz
and
xlat
push
xor
xchg
das
lods
add
push
hlt
aaa
ins
icebp
mov
xor
push
sbb
gs
xchg
adc
mov
dec
xchg
jbe
and
jge
and
cmps
jae
push
xchg
inc
iret
add
push
and
and
aam
pop
mov
sub
jne
outs
xchg
mov
lea
mov
mov
loopne
xor
and
ins
ss
idiv
sbb
shl
xchg
and
dec
mov
pop
arpl
ds
cmps
mov
xchg
xchg
outs
inc
(bad)
and
rcl
pop
nop
jbe
mov
mov
inc
nop
and
aaa
xlat
out
xchg
xchg
cld
into
sbb
add
inc
out
and
mov
(bad)
je
rol
xor
fcomp
push
pop
inc
xor
xchg
jmp
loop
bound
or
mov
fcom
mov
inc
adc
aad
xchg
leave
dec
(bad)
push
cmc
lahf
adc
rcl
xchg
add
es
rol
and
push
pusha
inc
div
push
mov
jge
movs
fs
(bad)
push
jecxz
ror
ja
add
cmps
push
idiv
adc
jle
xor
push
xchg
movs
xchg
setg
ret
div
cwde
mov
adc
mov
aam
movs
jae
addr16
xor
adc
scas
test
gs
ss
addr16
call
(bad)
jne
sbb
sar
jns
push
stc
aam
lahf
dec
mov
dec
les
xor
xor
mov
into
pop
lea
sahf
push
outs
add
and
(bad)
int3
loope
adc
pop
add
jne
mov
aam
lods
test
not
out
add
sbb
pushf
pop
xlat
in
std
xadd
pop
mov
push
and
ret
and
or
das
inc
pop
stos
cmp
lods
sbb
adc
ss
in
xor
lock
out
add
push
(bad)
xor
movs
in
outs
cmp
shr
cmp
xor
ret
mov
pop
je
shl
xchg
push
das
scas
addr16
test
sub
mov
das
sub
in
add
in
inc
js
mov
sub
sub
int
inc
nop
adc
mov
loop
stos
inc
icebp
xchg
inc
or
lea
jbe
in
inc
shl
loop
mov
dec
inc
aaa
jae
push
xchg
jne
repz
adc
leave
jecxz
pop
cwde
jo
push
ret
ds
not
rcl
ins
jecxz
scas
xlat
pushf
adc
or
jp
repz
test
fmul
mov
pusha
pop
mov
sub
sti
adc
pushf
popa
xlat
aad
gs
mov
mov
mov
in
sub
pop
loop
jno
cld
in
(bad)
shl
inc
adc
sbb
xor
lock
in
ret
lds
fistp
int
(bad)
push
xchg
xchg
mov
and
mov
xchg
xor
sbb
in
adc
outs
xchg
xlat
sbb
xchg
scas
test
sub
retf
shl
rol
mov
sub
xor
or
test
adc
fiadd
push
mov
or
push
inc
cmp
(bad)
or
inc
mov
inc
daa
push
repz
inc
xchg
mov
cmp
push
cdq
ins
outs
jne
jmp
cmps
jnp
sar
repnz
push
rcl
xlat
cmp
push
mov
lock
pop
cmp
jle
sub
data16
jns
xor
ffreep
mov
and
je
movs
inc
or
inc
imul
outs
in
sub
(bad)
pushf
dec
(bad)
ror
xor
cmp
mov
test
pop
xchg
add
sbb
and
lods
adc
push
frstor
shl
pusha
das
mov
xchg
fst
in
xchg
add
jecxz
sub
and
sbb
aam
push
adc
add
sbb
fadd
mov
mov
xor
xchg
mov
pcmpgtd
test
mov
out
cdq
mov
mov
and
out
ret
adc
xor
and
mov
adc
push
addr16
inc
and
div
xor
outs
(bad)
mov
push
push
data16
test
adc
and
iret
adc
inc
stos
and
arpl
nop
mov
mov
jae
sbb
xor
(bad)
push
movs
loopne
and
adc
push
jl
xor
arpl
push
out
mov
push
cdq
mov
stc
jg
imul
xor
pusha
lds
std
push
adc
mov
dec
loopne
test
jbe
ja
adc
mov
mov
and
inc
jno
and
add
gs
test
inc
pop
xchg
cwde
in
je
mov
jmp
jbe
or
inc
sub
jge
lock
(bad)
cwde
cwde
add
mov
xor
push
in
jne
jae
pop
out
xor
les
push
or
jb
jecxz
test
pop
out
xor
and
sub
fst
mov
push
xor
inc
in
popf
cmps
das
popf
adc
in
stos
cli
adc
sub
jle
addr16
and
jo
(bad)
dec
cmp
xchg
call
mov
xchg
cld
hlt
push
jecxz
push
in
(bad)
mov
out
shr
ret
adc
pop
fld
mov
outs
sar
aas
inc
sub
or
jo
shl
repz
or
sbb
popf
sub
inc
push
inc
aam
cmp
cmp
arpl
adc
mov
lds
not
adc
add
adc
inc
xchg
pop
nop
jb
data16
out
jmp
pop
call
jecxz
pop
rol
shl
xchg
xchg
repz
inc
repnz
add
ss
shl
adc
push
fadd
(bad)
dec
arpl
mov
fld
push
sub
cmps
loop
and
jle
mov
pop
inc
mov
rcl
or
xchg
adc
push
pushf
imul
add
arpl
fist
loop
jmp
(bad)
mov
pop
adc
je
cmps
jecxz
data16
test
mov
stos
or
enter
repz
xchg
add
test
add
jb
pop
and
mov
ja
lds
rcl
adc
icebp
mov
and
cmps
(bad)
add
pop
rol
(bad)
ss
ds
sub
out
xchg
jge
popa
mov
test
xchg
iret
idiv
jmp
ret
mov
(bad)
outs
push
(bad)
ja
push
jmp
jb
cmp
sbb
out
(bad)
sub
mov
aam
mov
mov
stos
aaa
push
push
pop
mov
jge
test
mov
sahf
or
and
jb
cmps
lock
xor
cli
inc
or
xor
pop
in
mov
jmp
repz
push
sub
stos
jge
mov
lea
idiv
sbb
mov
icebp
aaa
aad
mov
aaa
scas
jne
shl
cmc
clc
imul
cmp
mov
xlat
xchg
sub
add
lods
repz
mov
add
mov
mov
adc
aaa
sbb
mov
lahf
stos
fstp
iret
hlt
pop
push
or
adc
sahf
fisttp
and
retf
jge
loope
add
inc
pop
sbb
xchg
int
pop
fidiv
enter
mov
adc
adc
push
jns
leave
dec
jecxz
fld
push
repz
aas
cmps
xlat
and
test
pop
mov
repnz
mov
je
loopne
fisttp
mov
jle
cmc
jmp
in
fisttp
and
cmp
arpl
in
xor
adc
xor
push
mov
xchg
push
dec
pop
jecxz
sahf
(bad)
aas
xchg
inc
or
aam
repz
sub
jmp
inc
inc
int3
movs
(bad)
ja
test
call
add
aas
dec
(bad)
pop
sub
dec
xchg
mov
jle
movs
push
inc
mov
lea
outs
dec
mov
imul
out
cmp
jae
xlat
adc
pop
rcr
add
jecxz
cmp
daa
jnp
jecxz
movlps
movs
xchg
adc
mov
js
push
test
dec
hlt
pushaw
mov
mov
lahf
push
xchg
arpl
jne
jb
xchg
in
stc
inc
jge
push
lahf
push
cs
sahf
mov
setae
mov
stos
cmovnp
fdivp
es
mov
inc
icebp
fcomp
pop
push
imul
ds
push
xor
ins
jae
or
dec
jmp
jl
push
clc
mov
loop
daa
add
mov
hlt
call
pop
cwde
ins
or
rol
and
jmp
iret
jae
sar
lds
loop
pop
in
xor
dec
mov
fcomp
test
xchg
push
gs
push
adc
hlt
jnp
out
sbb
imul
mov
mov
test
ret
cmc
mov
mov
mov
repnz
sti
ds
fdivr
dec
add
fidiv
mov
outs
cli
push
push
jg
repz
xchg
dec
and
pop
and
lods
sbb
sbb
in
cmp
lods
sbb
gs
fistp
and
popf
and
daa
arpl
jge
mov
dec
xchg
sbb
fisub
mov
adc
daa
es
repnz
jbe
lock
lods
nop
dec
mov
inc
push
ret
ret
fisubr
push
test
movs
mov
jl
dec
iret
cmps
jbe
loopne
push
or
jns
mov
(bad)
and
(bad)
mov
in
inc
lea
daa
sar
push
sub
aaa
push
mov
aad
or
dec
test
rcr
mov
mov
xor
push
loope
test
push
fcmovnb
dec
jge
xlat
mov
jmp
jbe
adc
jno
mov
push
ins
or
mov
dec
jle
and
mov
icebp
jecxz
and
push
call
iret
adc
out
pop
lods
fstp
(bad)
xchg
fs
sub
rcr
xchg
adc
rcr
sbb
pusha
addr16
loop
xchg
ins
add
pop
pop
xchg
and
int3
fdiv
retf
add
cmp
inc
sbb
dec
movs
xchg
push
add
sbb
out
cmc
xor
in
ret
pop
aaa
test
outs
adc
loopne
pop
int
(bad)
push
cmps
div
push
push
pop
add
rcl
push
icebp
xor
mov
push
add
dec
mov
in
call
adc
cli
mov
cwde
std
add
test
pop
mov
out
shl
in
cmps
shl
jbe
test
(bad)
fld
jecxz
arpl
cli
dec
arpl
inc
rol
xchg
mov
xchg
cwde
stos
push
dec
dec
fs
rol
dec
sahf
inc
mov
mov
imul
repz
cmp
jae
ins
cdq
aad
loope
mov
lods
xor
xor
xlat
scas
mov
xchg
jo
sub
retf
out
scas
pop
call
in
jbe
and
mov
std
mov
add
nop
push
pusha
push
jo
and
push
xchg
xor
pusha
cmc
jbe
je
inc
jb
xor
test
cmps
sbb
fnstsw
pop
adc
jg
xor
jnp
push
shl
icebp
adc
adc
popa
mov
gs
inc
neg
pop
jbe
add
cs
fwait
jge
stos
cmps
popa
in
out
jne
fist
mov
jmp
sbb
mov
xor
mov
mov
xor
addr16
mov
ret
outs
lods
jnp
push
mov
mov
jge
or
dec
daa
push
fcomp
lds
aam
sbb
xlat
add
xor
je
cmps
push
jmp
stos
ins
cmp
sub
pusha
mov
push
pop
mov
(bad)
sbb
loope
ins
mov
cwde
ja
out
mov
rcl
dec
das
daa
mov
dec
inc
push
push
sbb
mov
cmps
mov
inc
jbe
cwde
jno
int3
sub
pop
mov
adc
mov
ret
push
and
sub
rcl
out
sahf
xchg
push
dec
sub
outs
bound
cmp
int
pcmpeqd
sbb
xchg
sub
aaa
or
add
and
cmp
adc
fisub
out
sbb
mov
ret
jmp
xchg
push
mov
or
ds
cmp
jbe
jb
pop
xchg
(bad)
fcom
out
jb
adc
pop
mov
jmp
es
inc
int
mov
bound
push
cmp
shl
hlt
outs
mov
adc
repz
outs
jbe
mov
ds
out
fwait
sub
adc
jae
dec
mov
inc
and
fisttp
sub
aad
std
es
cmp
test
shl
lahf
repnz
icebp
addr16
mov
mov
mul
push
pop
fbstp
cmp
fidiv
inc
pop
aad
repz
jnp
shl
jmp
dec
jl
daa
or
int
outs
cli
fcomp
jecxz
fcom
or
xchg
sbb
stc
jge
outs
test
cmp
mov
ret
lods
data16
add
repnz
inc
rcr
push
(bad)
rol
jbe
dec
out
in
cwde
inc
(bad)
xlat
add
adc
push
addr16
lods
push
int3
jge
cld
xlat
add
add
push
or
sbb
in
repnz
push
xchg
cwde
aaa
scas
push
jmp
jbe
or
sub
leave
ret
and
iret
pop
or
xchg
pop
shl
test
pop
lods
adc
mov
mov
daa
jp
popa
jmp
inc
mov
adc
jg
test
add
push
movq
push
int
lock
mov
pop
aas
je
push
hlt
mov
push
adc
xor
pop
sar
bound
xchg
xor
pop
cmp
add
jo
aad
fist
push
pop
cmp
cmps
je
nop
xor
adc
loope
or
js
jge
sub
push
xor
ss
xchg
daa
aad
dec
add
and
mov
jmp
adc
or
xor
adc
daa
push
jno
sub
popa
jg
mov
fwait
imul
ret
sbb
loope
mov
in
mov
outs
fcmovnu
jmp
daa
loop
jae
sahf
xor
or
inc
xor
(bad)
cmps
jae
xchg
sbb
mov
scas
pop
mov
xor
sbb
iret
(bad)
cs
daa
mov
xor
sub
in
add
imul
or
xchg
jbe
mov
scas
add
outs
(bad)
movs
(bad)
rol
add
div
mov
inc
pop
and
ja
scas
lods
push
mov
xchg
dec
vpsadbw
ror
(bad)
jae
stos
add
mov
dec
stos
(bad)
out
adc
inc
sub
inc
xchg
inc
xlat
les
xchg
or
adc
xchg
sub
adc
dec
push
xchg
sub
jbe
out
(bad)
retf
xor
mov
or
inc
pop
out
fcom
bound
cld
nop
jp
les
mov
ins
in
and
mov
pop
xor
add
ret
push
je
and
push
xchg
mov
add
lds
clc
inc
jb
xchg
dec
mov
add
mov
and
out
(bad)
jmp
adc
lock
call
test
iret
js
sti
cmovg
mov
and
mov
dec
sbb
mov
push
pop
invd
and
inc
add
push
xchg
jle
loop
cdq
movs
jge
xchg
jp
scas
add
mov
fnsave
inc
or
push
nop
out
nop
rcr
jg
lods
add
clc
das
push
or
jmp
dec
pop
mov
push
icebp
(bad)
mov
fidiv
add
and
push
fstp
dec
stos
jmp
sbb
ds
sub
add
pop
stc
mov
shl
stos
push
push
inc
push
or
es
push
movs
dec
sbb
xchg
das
push
mov
outs
adc
mov
cwde
repz
push
int
hlt
popf
sub
xor
dec
push
ins
stos
(bad)
stos
mov
daa
loopne
arpl
bound
clc
jb
mov
push
inc
cmps
fcom
ret
in
jmp
rcl
xchg
imul
ficom
outs
scas
es
and
inc
out
(bad)
adc
js
sub
cmp
and
sub
inc
mov
rol
pop
push
scas
out
int
les
ins
mov
int3
inc
or
jae
sbb
stos
adc
push
mul
ins
push
mov
dec
repnz
test
inc
sahf
mov
loopne
mov
mov
sahf
imul
cmps
mov
inc
es
(bad)
scas
sub
inc
jmp
in
(bad)
lods
(bad)
test
es
mov
pop
adc
rep
cmps
sub
sbb
xor
or
aam
and
aaa
cmp
sub
test
pusha
or
call
test
add
mov
mov
pop
inc
mov
popa
inc
outs
ret
and
xrelease
push
inc
out
xchg
inc
mov
sbb
addr16
hlt
not
nop
shl
retf
and
and
dec
ret
enter
bound
dec
stos
pop
xchg
mov
cmp
outs
sub
adc
cmp
add
fcomp
add
outs
jge
(bad)
sub
jp
inc
jne
xchg
inc
xchg
data16
jmp
adc
pop
das
add
mov
out
fist
dec
mul
shl
inc
mov
push
xor
gs
push
xchg
sub
popa
sbb
lea
icebp
retf
rol
data16
je
loopne
jecxz
hlt
jg
pop
pop
jns
mov
push
out
loop
sbb
mov
dec
cmp
sbb
imul
push
cmps
jbe
or
pop
cmps
(bad)
xchg
adc
mov
mov
add
mov
shl
adc
daa
rcl
jae
mov
arpl
rol
dec
ss
jbe
call
loop
mov
add
leave
pop
fisttp
mov
fild
jno
jmp
(bad)
sahf
in
cmp
push
push
ret
in
sbb
hlt
sbb
jb
push
jns
xor
out
inc
fdivr
jmp
dec
cmp
xchg
out
push
jae
ret
loop
(bad)
int3
jmp
xchg
mov
jo
xor
retf
icebp
and
inc
pause
daa
lea
pop
jmp
cmps
mov
inc
jno
into
scas
xchg
nop
add
xor
and
fist
in
xor
sahf
mov
neg
jmp
xchg
adc
push
xchg
push
xchg
push
mov
xor
repz
jecxz
sub
mov
call
fcmovnb
repnz
sub
mov
fsub
retf
xchg
ja
add
retf
bound
xor
sbb
cmp
mov
rol
add
scas
(bad)
dec
push
push
rcr
dec
out
stos
sysenter
pop
imul
cmp
add
stos
cli
mov
scas
mov
repnz
cmps
mov
mov
xchg
pop
out
test
pop
mov
push
stos
xor
popf
pusha
dec
push
pop
cmps
daa
mov
push
mov
pusha
scas
adc
bound
aaa
pop
(bad)
cmp
cmp
in
dec
lea
pusha
adc
xor
jbe
arpl
repz
mov
push
mov
fneni(8087
sbb
pusha
shl
push
popa
popf
lock
ret
popa
push
(bad)
mov
or
test
addr16
mov
cs
push
mov
xor
sar
aad
mov
adc
xor
cmc
push
and
lods
add
mov
or
(bad)
les
(bad)
xchg
hlt
inc
and
cwde
fwait
or
and
jnp
cmp
callw
xchg
add
aaa
ins
rol
xchg
je
xor
aaa
ja
rol
mov
aam
jne
mov
popa
sbb
inc
pop
jns
retf
cmp
pop
mov
and
mov
mov
xchg
ret
or
(bad)
into
pop
cmps
ss
xchg
(bad)
pop
test
neg
daa
xchg
je
mov
stos
shl
mov
mov
fidivr
mov
jae
push
xor
jb
in
in
push
push
nop
adc
add
mov
and
jg
leave
arpl
xor
mov
push
stc
mov
into
repz
adc
push
movs
nop
and
fstp
mov
fild
sti
inc
mov
nop
push
xor
(bad)
punpcklwd
ins
xchg
and
test
leave
xor
or
ss
add
in
(bad)
rcr
jecxz
rol
pop
clc
iret
xor
and
cmp
inc
mov
inc
xadd
mov
loope
xchg
and
loop
pop
call
fld
ret
cwde
inc
xchg
dec
jbe
in
sbb
aaa
in
xchg
push
enter
shr
xor
push
dec
jbe
(bad)
adc
inc
add
mov
mov
pop
cmp
clc
mov
pop
stos
sahf
retfw
pop
mov
mov
outs
mov
adc
repz
imul
fidivr
mov
add
fidiv
inc
das
pop
or
mov
fdiv
inc
xchg
xor
inc
and
js
mov
lods
and
pushf
pusha
fs
mov
shl
pop
adc
sbb
xor
cmp
icebp
fstp
xchg
xor
cli
adc
inc
shr
push
stos
movs
inc
mov
arpl
jg
xchg
shl
inc
push
vmovss
adc
pop
data16
xchg
fbstp
sbb
loope
jbe
jg
dec
pushf
sahf
sti
adc
shr
adc
push
inc
adc
(bad)
pop
(bad)
aaa
retf
aad
xchg
repnz
push
mov
clc
dec
cmp
mov
repz
aad
inc
or
lahf
mov
xor
mov
jbe
scas
cmps
mov
retf
fs
outs
inc
(bad)
mov
mov
cmp
inc
icebp
jb
adc
leave
cmp
push
es
xchg
das
aad
xchg
xchg
and
jne
lock
inc
jle
dec
iret
loop
ins
ret
pop
mov
or
arpl
stos
jecxz
repnz
xor
push
sub
inc
test
data16
push
lods
repz
inc
fistp
xchg
push
sti
push
stos
scas
int
xchg
or
arpl
(bad)
sbb
mov
idiv
jne
test
or
mov
xchg
inc
inc
push
mov
(bad)
loopne
or
cmp
cmc
lea
xchg
loop
and
jae
mov
push
push
sbb
pop
jno
xor
sbb
pop
imul
sub
adc
and
gs
std
pop
shl
xor
icebp
jmp
inc
ficom
inc
nop
movs
and
mov
mov
icebp
cmps
adc
shl
ret
xor
cs
xchg
lahf
jmp
sbb
xchg
mov
rdrand
inc
(bad)
test
dec
cmp
fisub
test
stos
add
add
or
rol
icebp
jecxz
ds
popf
fwait
add
dec
inc
mov
sub
xor
or
nop
es
push
loop
repnz
lds
xchg
or
iretw
mov
sub
and
(bad)
(bad)
adc
fld
rcr
mul
ror
mov
lods
or
fs
pop
scas
pop
xchg
in
arpl
out
retf
call
cmps
gs
push
repz
jle
adc
xor
xlat
xchg
cmp
pop
mov
xlat
lock
jae
cmp
mov
mov
test
xchg
push
loop
call
dec
icebp
xor
movs
xor
in
xchg
add
inc
daa
in
jge
mov
clc
or
cmp
mov
(bad)
mov
imul
mov
jbe
pop
out
stos
test
loop
call
imul
bound
push
sub
fidiv
test
xor
inc
mov
mov
ja
aaa
xor
push
mov
add
push
mov
push
xchg
jl
adc
and
cmps
inc
add
push
nop
sbb
sub
pop
ret
out
sar
jb
loop
ret
mov
and
push
xchg
push
into
stos
jb
add
(bad)
and
mov
and
test
jnp
fistp
cs
imul
jnp
(bad)
xchg
mov
cmp
das
out
ins
inc
sub
fs
gs
enter
movs
jns
push
add
ret
push
sub
xchg
(bad)
pop
inc
mov
les
les
inc
xchg
mov
fnstsw
aad
adc
icebp
push
or
dec
in
xchg
inc
int3
dec
and
lds
mov
or
dec
(bad)
div
mov
ret
fisubr
mov
jecxz
sub
pop
adc
push
lds
mov
loope
adc
sbb
push
rcr
movs
xchg
jnp
jbe
sahf
das
mov
js
push
inc
push
jae
sub
stos
jg
jmp
mov
jns
mov
iret
rdtsc
mov
cmp
sbb
pop
xor
fwait
add
xor
adc
xor
(bad)
lods
jns
push
xor
cmc
adc
mov
xchg
les
in
sub
cmps
cli
xor
enter
mov
(bad)
loopne
movs
mov
icebp
xor
inc
mov
add
sub
ss
xor
test
js
aas
mov
xchg
lods
mov
rcr
iret
frstor
cmp
push
outs
and
out
xchg
jl
pop
push
cmps
xor
or
jae
mov
cmps
ins
sub
pop
aaa
mov
es
adc
xor
xor
inc
mov
push
push
inc
push
jnp
pusha
mov
jbe
ins
xchg
push
sti
out
jle
mov
sahf
push
test
lods
(bad)
inc
ins
or
jp
sub
outs
xchg
mov
daa
add
fs
xchg
(bad)
sar
test
mov
aas
mov
push
pop
shl
out
not
je
out
jae
das
inc
lods
leave
add
jmp
test
mov
sbb
push
bound
inc
mov
sbb
sar
lds
cli
mov
cmp
cmc
xchg
xlat
xor
das
xor
stos
mov
out
xor
xchg
dec
adc
cmp
add
mov
xor
add
xchg
mov
push
fist
pop
out
mov
data16
and
jno
jmp
jnp
jae
inc
sbb
adc
add
pushw
cmps
or
add
in
pop
jnp
xor
adc
mov
dec
adc
add
push
push
xchg
bound
cmps
retf
mov
pop
fidivr
cmps
sub
nop
add
ss
dec
pop
in
mov
fwait
jns
pop
cld
inc
jne
xchg
fistp
inc
aaa
in
shl
scas
or
and
cmp
jae
push
repz
arpl
adc
adc
test
popa
mov
mov
cmps
cwde
fcmovbe
movs
push
push
push
loope
dec
std
cmc
jbe
rcl
fs
mov
ds
pusha
outs
xchg
fldenv
sub
dec
dec
pop
push
push
adc
push
cmp
jne
iret
daa
arpl
sti
inc
movs
inc
ficomp
jmp
mov
mov
push
mov
call
xor
(bad)
(bad)
(bad)
cli
cmc
lock
mov
jmp
fcomi
pop
push
sar
mov
push
outs
push
pop
jecxz
arpl
pop
(bad)
push
dec
add
inc
push
push
out
call
sbb
jmp
shl
adc
pop
and
cdq
outs
jecxz
inc
mov
xchg
loop
or
jmp
inc
or
mov
jno
nop
sub
fldenv
fwait
out
(bad)
mov
loope
cmps
pop
mov
or
lea
out
(bad)
and
dec
sbb
cmp
add
and
push
push
(bad)
mov
fimul
outs
jmp
inc
xchg
push
add
xchg
xor
ret
lock
sub
mov
clc
mov
in
cmps
xor
xchg
popf
add
fsubr
jp
pop
call
mov
cmp
scas
inc
repz
mov
adc
pop
sahf
jbe
daa
int3
icebp
mov
lahf
mov
sar
dec
jbe
jno
push
test
add
and
push
xor
inc
mov
add
loope
inc
sbb
(bad)
rcl
fstp
adc
jmp
stos
sbb
scas
or
mov
mov
dec
pop
(bad)
scas
cmps
mov
aam
hlt
mov
dec
pop
(bad)
and
test
mov
inc
int
aam
xlat
xchg
jecxz
sbb
pop
mov
lahf
xor
xchg
add
push
pop
xchg
xlat
nop
imul
mov
or
mov
xor
(bad)
daa
dec
mov
xchg
imul
pop
mov
lock
fisub
xchg
leave
jmp
adc
xchg
arpl
dec
adc
sub
iret
sbb
rcl
mov
inc
sub
pop
ret
ja
ins
mul
add
and
sub
xor
and
adc
mov
ret
dec
cmps
xlat
mov
ja
int
cs
(bad)
inc
adc
or
sti
dec
into
lds
sbb
jae
sub
xor
xor
push
pop
sbb
mov
mov
(bad)
xor
xchg
lods
in
push
jge
ins
out
pop
sub
mov
xchg
(bad)
inc
sbb
sub
and
mov
mov
jne
inc
mov
jae
dec
(bad)
scas
jae
sbb
jae
adc
data16
cwde
mov
dec
shl
cld
cs
pop
add
dec
dec
pop
int3
sbb
mov
inc
inc
cwde
inc
test
pop
dec
pop
push
fisub
fnstenv
enter
clc
mov
mov
dec
aam
dec
gs
xor
or
test
mov
rsqrtps
int
sbb
mov
scas
dec
and
sub
int3
repz
ret
and
push
sub
enter
xchg
imul
lea
pop
loop
loope
loopne
int3
or
jmp
mov
pop
jae
aad
mov
std
and
mov
icebp
pop
popa
js
test
(bad)
push
in
sbb
pop
lahf
and
add
icebp
jl
xchg
dec
loop
daa
(bad)
ds
(bad)
outs
xlat
inc
das
xchg
into
adc
int3
fidiv
lods
jnp
jmp
lock
ins
mov
inc
xchg
xchg
pop
in
xchg
jmp
pop
mov
addr16
xchg
loope
cmps
or
xlat
push
shr
push
jbe
mov
(bad)
sahf
test
add
push
mov
rcr
icebp
mov
fstp
test
push
mov
inc
mov
inc
mov
in
dec
mov
xchg
ds
add
fs
rcl
push
leave
xchg
and
mov
iret
dec
cwde
sar
fst
mov
mov
je
loop
loope
repz
inc
stos
test
ret
mov
mov
dec
inc
adc
jle
and
out
je
inc
ret
or
ror
add
ja
inc
mov
pop
ds
imul
shl
hlt
mov
aas
and
or
push
je
jo
fsub
cs
ret
mov
xchg
stc
(bad)
outs
int
pop
sbb
push
repnz
pusha
xchg
dec
mov
pushf
inc
pop
adc
(bad)
ja
lahf
outs
loop
mov
sahf
ds
repz
mov
shr
jecxz
sahf
push
pop
mov
mov
jge
enter
aaa
rol
inc
mov
sbb
std
out
sub
icebp
mov
sub
ret
clc
jae
cmp
inc
lods
fwait
mov
push
mov
outs
leave
ret
dec
mov
or
dec
les
pop
sbb
(bad)
xor
fmul
popa
rcl
pop
ret
daa
xor
inc
dec
add
push
rol
or
add
inc
cmp
(bad)
jp
scas
popf
mov
mov
xlat
inc
call
mov
jge
push
xlat
push
adc
push
jb
inc
(bad)
jle
xlat
jb
add
not
push
test
jg
sti
and
cmps
pop
inc
inc
jg
mov
pop
xchg
vcvtss2usi
xchg
mov
cmp
push
mov
xchg
mov
mov
cmc
and
inc
mov
xor
xlat
arpl
jne
mov
sub
addr16
adc
xchg
jne
adc
les
cmp
jp
inc
pop
xchg
sti
pushf
dec
and
test
lea
cwde
mov
fs
vpcomw
iret
lahf
call
out
(bad)
xchg
into
dec
pop
dec
in
xchg
xor
retf
retf
outs
mov
fcomp
pop
repz
aam
cli
ins
outs
or
jle
and
cmps
or
fwait
and
and
mov
inc
mov
jne
xchg
xor
aad
add
mov
je
mov
test
sbb
xchg
adc
jmp
add
shl
cmc
inc
es
cdq
movs
ja
jl
and
ja
(bad)
mov
sub
hlt
mov
jae
add
jmp
xchg
add
ss
mov
mov
lahf
dec
(bad)
call
cmp
mov
mov
mov
xchg
push
cld
scas
mov
jg
addr16
scas
and
bound
push
outs
sub
retf
add
data16
mov
in
enter
(bad)
jae
mov
pop
xchg
pop
imul
or
xchg
fwait
push
scas
xlat
idiv
xchg
ret
out
je
mov
inc
jae
cwde
mov
aam
xor
push
mov
xor
cld
lods
adc
sub
(bad)
xchg
jg
bound
data16
adc
stos
mov
sbb
push
lods
(bad)
fisttp
xor
push
jecxz
arpl
lea
or
and
sub
cmp
fucom
add
shl
out
and
(bad)
retf
fwait
dec
pop
pusha
mov
pop
sahf
adc
pop
sub
rol
mov
lods
out
loopne
xchg
ds
shl
push
mov
test
dec
arpl
inc
fild
rol
dec
call
mov
add
dec
xchg
stos
bound
outs
out
shl
and
inc
push
sti
mov
mov
mov
ins
mov
dec
cmc
stos
pop
jle
(bad)
(bad)
popa
es
(bad)
add
sbb
shl
sti
(bad)
outs
inc
dec
outs
(bad)
movs
cmps
mov
sbb
es
xlat
jae
xor
into
fcom
jp
ja
mov
push
mov
ret
sub
jl
retf
adc
sbb
daa
mov
imul
xor
add
stos
push
pop
daa
div
and
xor
jge
mul
inc
and
mov
xchg
pop
shl
lea
xor
cmp
jne
lahf
jno
add
adc
sub
sub
dec
cmc
inc
aam
rcr
out
(bad)
dec
retf
in
mul
mov
inc
ins
ins
rol
shl
pop
je
xchg
xchg
mov
(bad)
sahf
xchg
addr16
push
xchg
pusha
or
dec
adc
cmc
or
mov
retf
push
inc
mov
xor
and
xchg
push
xchg
mov
or
cmc
cli
push
sbb
or
frstor
xor
movs
sub
daa
jl
iret
and
lock
mov
mov
jb
inc
in
jecxz
lds
jl
xlat
icebp
adc
movs
shl
sbb
mov
imul
mov
pop
mov
mov
mov
in
neg
mov
mov
js
jns
sbb
xchg
push
(bad)
inc
and
xor
pop
pop
std
inc
mov
dec
(bad)
imul
or
daa
sub
mov
xor
dec
enter
push
pop
out
mov
mov
ss
xor
inc
(bad)
mov
pop
xor
loope
loopne
cli
pusha
push
push
and
xor
push
inc
sti
push
mov
loop
push
into
and
(bad)
in
xor
mov
push
test
fidiv
jb
mov
mov
mov
add
test
adc
dec
aaa
popa
pop
adc
mov
fsub
pusha
lea
inc
push
jae
mov
add
in
sub
shl
xor
pop
ror
in
add
xchg
adc
add
pop
aam
pop
jae
or
mov
push
rcl
dec
jg
clc
xchg
pop
mov
aaa
outs
cmp
rol
push
add
out
jp
bound
pop
ja
test
add
aaa
mov
js
inc
(bad)
mov
int
outs
movs
push
or
arpl
mov
and
cmp
inc
out
jae
or
xchg
push
jmp
and
out
cmps
(bad)
test
mov
jbe
hlt
and
ss
push
inc
adc
es
pop
in
mov
mov
sub
jo
stc
inc
enter
mov
push
cmp
adc
mov
or
enter
arpl
mov
shl
inc
fwait
xor
pop
xchg
xchg
xchg
ja
retw
xchg
or
mov
jecxz
sahf
in
pop
test
add
adc
nop
pop
push
popa
std
add
add
jmp
in
mov
inc
(bad)
fist
jae
mov
mov
out
movs
ins
add
or
or
mov
mov
jae
lea
retf
xchg
(bad)
mov
jbe
pop
sbb
cmp
push
jne
adc
xor
xor
pop
and
popa
mov
test
push
retf
stc
xor
jbe
jb
data16
int
mov
aad
xchg
bound
jecxz
cdq
(bad)
xlat
(bad)
daa
add
mov
pusha
cmps
ins
leave
inc
push
and
out
jge
jne
pop
sar
push
mov
outs
lds
mov
pop
pop
pop
push
pop
fwait
dec
scas
sahf
cmp
lock
iret
ret
inc
and
dec
add
adc
int3
out
mov
adc
push
push
add
mov
mov
(bad)
and
mov
pop
jge
stos
popf
inc
jmp
iret
cmps
dec
mov
(bad)
scas
jo
fwait
xchg
addr16
repnz
and
sahf
outs
bound
repz
mov
cmps
ret
(bad)
adc
in
add
push
mov
rol
jp
mul
adc
cmp
adc
rcl
sbb
mov
xor
jl
aas
push
push
add
push
add
in
ret
pusha
hlt
addr16
jmp
out
mov
xor
fcomip
rcl
add
aad
xchg
push
dec
in
adc
adc
push
xchg
and
daa
js
and
retf
xchg
aam
imul
and
jle
cmp
jmp
ret
sahf
icebp
std
push
push
call
push
fistp
shl
and
addr16
bswap
cwde
in
test
lock
jmp
gs
push
ins
jmp
pop
jge
loope
push
loope
pop
imul
push
ror
ss
push
mov
mov
mov
and
inc
bound
push
jbe
inc
jae
addr16
sub
sub
enter
and
arpl
sbb
pop
daa
stos
repnz
add
inc
arpl
scas
xor
sti
mov
or
stos
jmp
call
add
and
jmp
retf
arpl
fistp
popf
dec
mov
ss
mov
sbb
push
adc
mov
jmp
jecxz
data16
inc
xor
les
lods
jne
das
shl
push
cmps
xchg
cmp
cmc
ja
pop
add
or
xor
pusha
adc
pop
push
and
fist
repz
jne
jecxz
aaa
add
xchg
add
aad
xchg
sbb
inc
mov
test
cmp
cli
adc
pop
xlat
jge
inc
jl
xchg
fcom
iret
sbb
hlt
jbe
add
call
inc
ret
xchg
neg
xor
mov
and
shl
out
dec
pop
mov
rcl
loop
xor
adc
cmp
pop
pop
cmps
pusha
icebp
xchg
mov
pop
std
pop
mov
adc
jge
sub
jb
xchg
into
data16
call
push
and
fiadd
mov
cmp
sub
add
jo
inc
mov
or
aas
cmp
stos
cmp
pushf
shl
daa
out
jno
xchg
(bad)
xlat
and
mov
lea
dec
xchg
adc
or
fcomi
xchg
out
retf
push
pop
xchg
data16
xchg
lock
inc
adc
add
add
stos
cmp
ss
inc
push
js
cmp
adc
mov
pop
push
movs
sub
add
add
pusha
xlat
ret
sub
shl
popf
pop
dec
hlt
or
jbe
adc
sti
loopne
push
scas
in
add
xor
jg
push
xchg
mov
adc
nop
mov
mov
sti
sahf
stc
in
inc
lods
push
lea
and
loopne
xchg
mov
mov
jg
aaa
imul
aad
xchg
inc
(bad)
shr
(bad)
arpl
imul
stos
xor
(bad)
cmc
sbb
pop
push
imul
jbe
push
repz
xchg
inc
sbb
xchg
inc
push
inc
arpl
add
test
ja
movs
gs
hlt
inc
(bad)
popa
dec
loopne
sahf
bound
push
jae
addr16
jmp
pusha
ror
lea
mov
or
push
fild
loopne
sub
nop
inc
and
mov
out
mov
inc
fild
mov
out
sub
aas
shl
adc
iret
or
(bad)
adc
in
push
xchg
xchg
icebp
cs
push
int3
or
not
sub
cmps
xor
inc
call
mov
mov
inc
mov
or
inc
push
sti
xchg
mov
cwde
in
fist
ret
push
mov
out
daa
daa
ret
and
jb
or
cmp
sbb
retf
mov
or
ret
adc
mov
xchg
pop
mov
mov
push
cmps
repz
ror
pop
into
sub
jge
lds
test
sub
popa
(bad)
cmp
mov
push
mov
pop
rcl
fsubrp
and
jae
mov
jb
fs
repz
sub
loope
or
cmp
sbb
add
jno
mov
push
inc
mov
cs
add
mov
aaa
or
mov
adc
lock
or
push
shl
jae
sub
cmp
dec
dec
aad
push
out
pop
inc
inc
xlat
push
adc
mul
icebp
or
sub
jmp
call
inc
xor
imul
movs
repnz
jmp
cwde
fidivr
jle
fxch
xor
push
and
adc
add
stos
addr16
popa
mov
xor
cmp
mov
imul
sub
add
jno
aad
lods
loop
inc
aaa
daa
push
inc
pushw
in
add
and
rcr
push
and
es
stos
or
mov
cmc
cs
imul
push
loop
loop
aam
and
cdq
push
lock
lock
mov
xor
push
mov
add
lahf
mov
loop
shl
mov
and
sub
dec
add
icebp
call
(bad)
push
sub
mov
sub
push
or
cmp
aad
iret
add
shl
js
inc
cmc
pop
cmps
mov
ficom
add
push
nop
xchg
data16
aam
jb
push
sbb
mov
xchg
pop
retf
aas
in
test
push
adc
inc
jae
mov
out
or
clc
aam
jb
xchg
(bad)
jae
sbb
lods
out
add
and
hlt
sub
xchg
hlt
adc
loop
jnp
sahf
adc
cmp
jno
fwait
cmps
inc
xchg
jo
dec
mov
add
call
cmps
and
xor
shl
mov
inc
mov
out
push
movs
jge
pop
lahf
inc
sbb
in
dec
push
into
push
mov
mov
imul
pushw
push
pushf
and
lock
cdq
inc
xchg
pop
mov
repz
lahf
leave
pop
shl
jno
popa
data16
push
int3
aam
jno
in
xchg
ret
jno
push
(bad)
jecxz
cmp
sar
shl
loop
cmp
push
mov
mov
sahf
mov
hlt
jbe
mov
xor
and
cmps
fidivr
push
loop
xchg
mov
mov
or
inc
bound
xchg
mov
sbb
xchg
test
add
out
in
imul
repnz
mov
push
leave
jne
pusha
(bad)
mov
xchg
mov
inc
dec
jmp
fs
sbb
scas
call
dec
xchg
push
(bad)
call
inc
dec
mov
mov
call
pop
pop
adc
daa
div
out
mov
lock
cwde
fiadd
jl
lock
jnp
add
lock
popf
cmp
xchg
ror
push
dec
jnp
and
out
xlat
and
pop
sti
loop
fcom
out
int3
and
jae
pop
cld
sti
add
repz
or
xor
shl
rcl
(bad)
pop
aam
arpl
and
push
inc
fwait
and
dec
pop
or
(bad)
sub
and
inc
push
adc
jecxz
aaa
(bad)
fnsave
cmp
or
jnp
es
dec
into
mov
push
push
fucomi
div
jp
pop
je
and
les
add
aas
mov
inc
xchg
inc
pop
aad
int
inc
add
das
outs
and
or
xchg
je
in
dec
test
test
frstor
push
int
fadd
sub
adc
push
or
xor
mov
repz
iret
mov
mov
push
std
jno
loop
inc
test
inc
cld
ins
mov
adc
dec
addr16
and
push
jecxz
mov
mov
cmp
retf
js
popf
cdq
ss
push
es
dec
xlat
push
jae
cmp
retf
dec
fadd
jne
ins
lahf
xchg
mov
adc
pop
dec
xchg
dec
aad
push
mov
add
mov
xchg
mov
or
aaa
inc
scas
push
mov
repnz
loop
mov
add
jns
jecxz
dec
dec
add
xchg
xchg
xchg
call
and
stos
dec
xor
pop
push
fsub
cwde
lds
adc
adc
jo
pop
dec
mov
icebp
fs
dec
iret
xchg
hlt
stos
inc
xor
fmul
out
and
scas
push
sahf
inc
sub
out
jae
das
jne
shl
push
mov
add
fld
int
shl
adc
mov
adc
(bad)
icebp
xchg
sti
fmul
loop
enter
shr
xchg
push
pop
mov
mov
xchg
xor
call
add
je
repnz
or
inc
aaa
xor
pop
rol
out
xchg
popf
not
data16
(bad)
xchg
fild
cmps
adc
xchg
les
adc
inc
inc
adc
xor
sbb
add
call
mov
mov
push
jb
cmps
scas
xchg
loopne
les
(bad)
rcl
jg
clc
xchg
mov
jmp
push
add
mov
push
fwait
add
adc
pusha
inc
out
xchg
mov
inc
jmp
gs
mov
loopne
fdiv
mov
bound
add
sub
xor
fstp
ror
inc
push
mov
mov
icebp
jge
ja
xor
fwait
adc
push
dec
jg
xchg
pop
mov
add
jb
in
inc
inc
out
cmc
jbe
pop
sub
aas
test
mov
lds
add
gs
ficom
rol
(bad)
sbb
sar
ds
mov
and
and
sbb
fistp
or
sbb
jns
mov
dec
movs
scas
enter
mov
repnz
sub
outs
fild
sbb
mov
xor
inc
jle
imul
rcr
in
repnz
or
push
dec
mov
inc
xor
sub
xor
mov
sbb
lock
imul
pop
inc
push
mov
adc
fld
sub
xlat
rol
add
pop
aaa
ja
out
inc
sahf
push
fistp
mov
push
pop
push
sti
jecxz
scas
in
sub
mov
adc
call
cmp
test
div
cmc
sti
in
shl
inc
mov
push
imul
mov
cmp
cmp
sbb
push
test
bound
ja
call
(bad)
xchg
ret
push
sbb
inc
inc
mov
inc
div
(bad)
push
arpl
loop
pop
push
adc
fs
stc
jbe
and
add
je
dec
call
and
das
cmp
aad
ret
ss
push
arpl
jo
xlat
and
std
sbb
add
push
inc
mov
xor
xor
pop
dec
pop
int
pop
mov
stos
inc
inc
loop
imul
push
adc
call
and
aad
mov
inc
push
fcmovb
scas
mov
cmc
gs
jbe
jne
or
ror
fdiv
test
aas
mov
push
aas
out
push
fcomp
es
div
pop
mov
cmps
mov
push
(bad)
fsubr
xchg
xor
test
fdiv
jnp
adc
pop
adc
xchg
movs
vmwrite
repz
nop
in
jbe
pushf
cmps
push
into
das
sub
nop
xor
cmc
or
(bad)
mov
inc
sbb
mov
nop
xchg
push
xchg
jg
inc
jns
add
xor
jge
sub
aaa
sbb
add
repnz
adc
fs
div
xchg
inc
jmp
clc
sbb
jbe
jg
inc
pop
dec
lds
jmp
xchg
pop
iret
jno
fild
xchg
out
out
ret
add
jnp
shr
cmp
cmp
push
and
cmp
sbb
out
cmps
or
pop
pop
aam
push
adc
out
iret
test
cdq
popf
icebp
xor
into
sub
sahf
xlat
mov
adc
push
xor
rol
scas
lea
xchg
mov
xchg
les
xchg
mov
retf
ja
ret
rol
sub
xor
adc
xchg
dec
out
ins
xchg
fsub
nop
cwde
mov
out
push
jecxz
jbe
and
adc
sub
xchg
cmp
mov
add
movs
dec
movs
pop
push
fsubr
popf
cmps
xchg
mov
xor
push
mov
and
jge
repnz
div
pop
push
or
sti
rcr
inc
rcr
push
sub
stc
rcl
xor
jp
(bad)
xchg
cmp
dec
ret
cwde
cmps
mov
mov
and
retf
into
pop
dec
sbb
xchg
aaa
or
xor
cmp
mov
xchg
or
cmp
cdq
test
xor
pop
adc
adc
aaa
imul
int
(bad)
call
xchg
ret
std
enter
xlat
test
mov
mov
in
test
test
bswap
jmp
jecxz
inc
lods
inc
pop
mov
ret
mov
fldenv
cmps
pop
div
jbe
mov
rcr
push
cmps
xor
jne
pop
cdq
fcomp
inc
jno
pop
pop
int
shl
mov
jmp
pop
mov
ja
mov
mov
nop
xchg
call
ins
popa
xor
fld
movs
pusha
in
xchg
leave
fcom
ret
movntps
jmp
cmp
sub
adc
pop
lods
stos
xchg
inc
ds
icebp
fidivr
sub
xchg
push
les
imul
add
add
adc
not
rcl
or
jnp
sti
js
push
aas
lock
rcl
fwait
xchg
xor
cmp
test
or
repz
dec
and
das
daa
mov
xchg
sar
retf
cmp
xchg
(bad)
addr16
or
fnstsw
jbe
scas
mov
enter
dec
push
xchg
dec
or
mov
movs
mov
xor
retf
xchg
inc
movs
in
out
ins
pusha
mov
aam
mov
je
xchg
push
test
jno
gs
aaa
or
lahf
jecxz
sbb
xlat
or
pop
mov
jno
mov
push
out
push
gs
push
cmps
in
lods
xor
aad
les
jnp
ret
fisub
xchg
xchg
mov
mov
and
stos
outs
outs
loope
std
sub
aaa
add
jle
push
(bad)
test
or
inc
ret
aas
pop
ficomp
xor
icebp
gs
push
test
daa
adc
xchg
ins
jbe
(bad)
out
pop
lock
mov
cmps
call
xlat
dec
es
cwde
add
add
inc
push
out
(bad)
and
aas
into
es
pop
mov
es
pop
and
xor
cmps
ins
xor
mov
pop
fcomp
sbb
jmp
les
mov
data16
bound
push
pushf
cmp
mov
in
rcl
enter
movs
dec
push
arpl
arpl
arpl
push
outs
pop
stos
fsub
int
sub
inc
shl
dec
or
cmc
sbb
mov
pusha
and
mov
pop
imul
rol
or
push
(bad)
loop
(bad)
mov
(bad)
and
sub
jno
inc
lods
ror
xor
aas
push
inc
sti
(bad)
iret
ds
push
sbb
idiv
icebp
mov
inc
sub
pop
pop
inc
xchg
adc
cld
ds
add
and
or
and
jle
arpl
pop
sbb
jae
stos
fincstp
scas
or
mov
or
in
mov
xchg
inc
adc
repz
pop
iret
xor
mov
das
push
ins
imul
push
sti
pop
xchg
jmp
pop
dec
(bad)
cld
pop
popa
mov
cmps
ret
cmp
mov
sbb
ss
adc
imul
fsub
enter
and
movs
(bad)
push
out
or
add
jmp
inc
lds
repz
ds
cmps
inc
and
jmp
sar
mov
xlat
int3
mov
xor
in
scas
hlt
add
sub
adc
sub
idiv
out
and
fcom
bound
xchg
add
inc
aad
xchg
pop
sbb
fdivp
pop
mov
add
in
adc
ins
mov
sub
adc
in
call
es
add
push
aad
aas
mov
inc
inc
sub
retf
mov
rcr
or
dec
icebp
pop
xchg
add
sti
push
xchg
xchg
pusha
ficom
ficom
hlt
xchg
push
dec
xor
or
push
arpl
add
adc
pop
mov
push
jns
pop
add
inc
sbb
sbb
out
sahf
lods
jmp
cmps
sub
out
jl
mov
les
inc
add
ja
scas
mov
sahf
jg
xchg
mov
xor
(bad)
bound
cwde
push
jbe
push
mov
jbe
sti
dec
loope
xor
push
jnp
or
repz
shr
push
cmps
data16
or
(bad)
xchg
sbb
pop
xchg
loope
add
sahf
inc
xchg
add
adc
mov
xor
mov
ss
(bad)
adc
out
mov
sbb
bound
cmp
mov
add
mov
inc
xchg
ret
xor
push
fcmovnu
jge
aaa
data16
xchg
gs
cmp
xchg
icebp
mov
popa
add
and
int
fiadd
lea
loopne
adc
in
retf
inc
mov
aaa
push
xchg
or
push
je
xor
ret
xchg
call
xchg
mov
les
mov
test
jbe
add
addr16
xchg
repz
sti
stos
jmp
cwde
pop
dec
xor
add
ja
iret
jbe
mov
pop
dec
jecxz
push
mov
mov
pop
adc
xchg
fbld
mov
movs
int3
push
pop
pop
xchg
adc
push
(bad)
in
cwde
mov
cs
(bad)
neg
adc
sbb
mov
stos
fldenv
jno
(bad)
out
mov
pop
lods
bound
mov
inc
jnp
pop
and
xchg
in
mov
mov
mov
mov
lahf
add
push
xchg
sbb
dec
mov
mov
movs
push
jne
adc
or
xchg
inc
shl
adc
mov
test
jmp
push
or
xchg
and
pop
dec
repnz
aam
enter
outs
mov
shl
xor
arpl
shl
push
test
xlat
pop
xor
push
add
pop
mov
idiv
jne
jnp
sar
xchg
adc
jmp
sbb
xor
xchg
add
das
js
aad
jns
or
lods
stc
shr
daa
ds
pop
les
(bad)
mov
mov
cmp
cs
jmp
cmc
div
mov
xchg
push
push
cmp
xchg
out
adc
scas
mov
and
mov
xor
mov
aas
icebp
push
in
ret
mul
movs
rep
arpl
arpl
dec
cdq
push
xchg
dec
xor
adc
arpl
xchg
inc
sbb
inc
jg
jns
sub
or
idiv
mov
adc
jmp
inc
sbb
jmp
cmps
sahf
(bad)
mov
in
movs
sbb
cs
pop
int
inc
jno
inc
daa
xlat
jmp
sub
repz
sub
(bad)
fst
(bad)
ss
push
add
push
pop
shl
xchg
bound
test
push
popa
jle
dec
inc
xor
(bad)
cmc
mov
into
sbb
adc
jmp
fist
jmp
xor
mov
fdivr
lods
fisttp
in
xor
mov
mov
jne
inc
js
push
mov
imul
stos
aas
add
xchg
ror
cmp
inc
pushf
cmps
and
shl
inc
adc
cmc
scas
xchg
ss
jb
xchg
in
mov
mov
jle
jmp
in
stos
sub
loopne
cmps
pop
xlat
jae
popa
push
or
jnp
xor
lea
xchg
push
std
or
cmp
add
rcr
inc
mov
and
add
cmps
mov
push
fadd
push
mul
xchg
xchg
imul
cmp
rol
inc
pushf
retf
xlat
and
pop
lods
jb
loop
mov
test
(bad)
(bad)
mov
cmp
or
cwde
jne
mov
xchg
ins
mov
fs
in
icebp
and
js
push
xor
jne
ss
movs
xchg
aas
fmulp
and
and
push
rcr
out
retf
std
mov
or
jae
shl
pop
adc
loope
and
(bad)
es
or
out
retf
loope
movs
add
mov
gs
push
jp
mov
xchg
mov
xor
mov
mov
lahf
xchg
cmps
dec
test
jge
inc
call
jp
xor
fbld
ins
dec
arpl
cs
cmp
repz
push
popw
mov
and
adc
inc
dec
pop
xchg
mov
or
movs
mov
xlat
data16
and
cld
xor
loope
dec
(bad)
neg
mov
(bad)
jmp
int
and
sub
adc
adc
xchg
cmp
nop
data16
rcr
push
adc
out
dec
in
(bad)
test
or
enter
test
call
jge
mov
js
mov
out
hlt
inc
scas
mov
pop
adc
movs
jl
shr
ret
add
push
xchg
je
fcomi
in
xlat
lahf
cmps
or
dec
xchg
cmp
arpl
into
hlt
fld
push
xor
inc
arpl
sub
jb
out
sub
jle
mov
inc
pop
pusha
inc
jp
je
(bad)
je
imul
rcr
xchg
pushf
nop
sbb
mov
mov
pop
xor
add
mov
mov
popa
mov
ins
add
xor
add
ds
mov
and
xchg
ds
outs
push
ret
loope
mov
hlt
adc
fnstsw
push
loopne
cmps
push
add
inc
lea
mov
rol
xchg
ds
add
aas
(bad)
ins
add
imul
inc
ins
fcmovnb
adc
push
pop
xchg
cs
add
out
inc
repnz
dec
loop
adc
sbb
rcl
cmc
or
(bad)
(bad)
push
repz
xor
jne
xchg
push
xchg
idiv
and
dec
not
outs
jg
mov
adc
jle
mov
movs
loop
and
(bad)
call
add
mov
lods
in
fs
mov
mov
out
jmp
and
outs
sub
scas
mov
cmp
push
sti
and
mov
jp
and
xchg
sbb
inc
dec
or
xlat
push
gs
retf
int3
xchg
movs
and
aas
or
add
pop
pop
pop
ins
outs
add
mov
adc
data16
mov
sti
jb
lock
inc
cwde
pop
jb
and
ret
mov
xor
xchg
call
adc
cmps
aam
loopne
mov
fs
xlat
mov
mov
ret
std
les
fidivr
ds
jge
ds
adc
cdq
xor
cmp
(bad)
rol
add
ret
adc
dec
pop
in
fdiv
arpl
imul
(bad)
rol
shl
xchg
cdq
mov
pushf
inc
loop
ret
push
movs
lds
ficom
(bad)
aaa
lock
mov
mov
mul
enter
push
xchg
push
shl
outs
adc
jge
pop
jmp
scas
repz
imul
stc
mov
cld
fnstcw
jmp
mov
xor
mov
enter
dec
retf
push
or
retf
add
sbb
es
mov
repz
mov
lahf
jo
inc
jae
push
cmp
jne
and
add
daa
mov
adc
aaa
pop
mov
mov
adc
cmp
not
and
jo
shl
scas
inc
or
fs
int3
mov
jo
sbb
add
int3
jnp
shl
mov
stos
and
sbb
inc
inc
icebp
cmps
mov
cmps
je
jo
ficomp
inc
push
cmc
jecxz
in
push
inc
mov
call
bound
cmc
xchg
xchg
xchg
sub
inc
mov
xchg
int
and
aam
(bad)
fcom
sub
ret
ret
and
mov
test
cdq
in
test
xchg
xchg
xchg
scas
jp
adc
rol
adc
jo
add
imul
pop
cwde
cmps
aaa
xchg
add
ds
jl
out
inc
ret
jecxz
aas
mov
hlt
shl
stc
inc
hlt
inc
dec
jg
pop
mov
fs
repnz
clc
arpl
cli
imul
mov
cmp
movs
or
adc
jo
pop
jne
add
mov
xor
pause
lock
popf
dec
push
add
sub
les
mov
xchg
dec
ror
and
shl
pop
lods
cs
and
mov
ror
rcl
imul
mov
xchg
and
push
sub
test
adc
fstp
cmps
gs
xchg
jmp
jne
and
mov
and
call
dec
daa
dec
xor
sub
pop
mov
adc
sbb
sahf
adc
adc
(bad)
repz
dec
adc
rcl
pop
sub
xchg
fst
loop
mov
jnp
dec
stc
pop
push
mov
pop
retf
gs
xor
popa
call
sahf
adc
stc
sub
xor
cmp
dec
cmps
imul
loopne
push
push
rol
or
xchg
call
cs
stos
ret
jmp
jbe
std
jo
mov
shl
repz
and
and
pusha
mov
sub
sbb
inc
sub
repz
xchg
shl
arpl
fimul
xor
ins
mov
pop
fs
xchg
in
test
sub
(bad)
nop
sbb
in
cmp
xchg
xor
xchg
test
cmp
cmc
and
das
gs
fisttp
inc
and
adc
adc
mov
xor
ins
(bad)
jae
hlt
push
inc
fcom
(bad)
pushf
push
imul
xchg
add
push
clc
mov
inc
sub
adc
mov
adc
xchg
dec
cmp
in
jae
aam
and
fisub
mov
mov
addr16
(bad)
jge
mov
mov
push
xor
dec
sbb
sbb
sbb
or
cmps
cmp
scas
pop
mov
push
xor
out
clc
mov
mov
es
or
add
jo
pop
cwde
int3
int3
or
inc
lock
pusha
dec
lds
add
adc
aad
mov
cmp
xchg
jp
mov
sub
imul
aaa
cmp
add
leave
lahf
ret
out
pop
sub
xchg
int3
in
cmc
in
in
(bad)
xor
mov
or
mov
cmps
ss
mov
and
pop
mov
dec
push
imul
in
jmp
jge
jmp
or
imul
sub
(bad)
sbb
(bad)
push
mov
jo
xchg
adc
out
xchg
scas
jge
movs
mov
jns
cmp
push
xor
std
add
inc
xor
fnstcw
ins
push
cmp
push
pop
pop
je
not
out
loopne
mov
cld
repnz
cmp
(bad)
arpl
jecxz
push
loop
stos
sbb
cmp
inc
mov
loope
cmc
pushf
imul
cmps
pop
mov
mov
dec
add
pop
iret
xor
arpl
jle
mov
test
(bad)
mov
in
push
mov
pop
xchg
jmp
push
ficom
shl
shl
loop
xchg
pop
out
daa
mov
mov
(bad)
not
mov
xchg
aad
lahf
xchg
mov
out
sti
bound
mov
mov
and
add
xchg
dec
and
outs
(bad)
adc
xchg
jbe
pop
pop
or
add
sar
push
and
jns
mov
adc
les
fstp
aam
push
cli
popf
mov
je
push
scas
sbb
mov
xchg
outs
jmp
mov
jbe
jg
push
jmp
sbb
test
test
imul
cmps
mov
mov
imul
mov
sub
sar
mov
cs
pusha
pop
cli
inc
xor
and
jb
jnp
clc
pop
retf
stc
out
loope
imul
jae
add
mov
inc
hlt
xchg
arpl
cli
iret
inc
aam
inc
pop
jmp
(bad)
iret
retf
arpl
jecxz
adc
inc
jne
hlt
sbb
jnp
clc
popa
inc
icebp
xchg
inc
adc
xor
sti
repnz
add
or
mov
xchg
cwde
int3
dec
mov
sti
scas
xchg
sbb
and
pop
repz
mov
mov
int3
jmp
mov
xchg
xchg
cmps
arpl
sub
clc
jg
fiadd
and
movs
popa
adc
leave
sbb
jns
mov
in
add
cmp
xchg
mov
inc
cli
jno
lods
mov
outs
xchg
inc
adc
dec
xchg
nop
ror
adc
adc
sti
repz
push
xlat
scas
and
pop
dec
cmps
sbb
pop
ret
loop
(bad)
pop
inc
adc
push
mov
sbb
inc
pop
mov
sahf
nop
inc
xchg
xlat
cmp
popa
ds
mov
mov
jge
sub
aad
fnstcw
arpl
pusha
xor
adc
push
repz
inc
mov
mov
dec
lock
cmp
imul
adc
xor
call
jb
adc
out
mov
or
mov
inc
(bad)
push
inc
gs
(bad)
jge
adc
adc
rcl
cmps
push
sbb
gs
dec
or
xchg
aad
jl
loopne
sub
and
fcom
inc
popf
retf
fidivr
popf
mov
push
int
and
lea
dec
mov
loopne
mov
aad
es
repnz
imul
add
les
inc
cdq
push
mov
mov
xchg
push
mov
inc
xlat
clc
nop
je
adc
mov
mov
push
lods
inc
inc
cdq
icebp
cmp
ins
loop
adc
out
mov
cmp
dec
inc
les
sub
mov
cmps
inc
fcom
jle
push
add
cwde
push
fs
rcr
ret
xor
mov
out
and
jecxz
leave
xorps
add
mov
gs
lock
mov
fdiv
xor
inc
les
dec
add
jecxz
adc
and
mov
jbe
ror
(bad)
and
sbb
adc
int3
push
add
fcom
ja
cmps
fs
xchg
mov
retf
adc
test
aam
adc
jl
fwait
adc
add
pop
cmps
test
add
xchg
hlt
inc
pop
xor
sbb
jbe
dec
das
mov
jnp
daa
ins
xchg
mov
and
pop
cld
mov
in
(bad)
and
pop
add
loop
sub
mov
cmps
outs
cmps
xchg
out
push
mov
aaa
test
inc
int
push
hlt
fs
daa
pusha
push
out
inc
xor
push
out
ins
nop
scas
jp
into
cmp
movs
push
(bad)
adc
push
addr16
fstp
mov
or
rcl
ret
pop
aam
scas
jbe
mov
dec
lea
scas
dec
mov
sbb
jge
fidiv
cmp
xchg
dec
bound
push
mov
push
push
push
aam
fs
outs
movs
lds
repz
mov
xlat
xchg
aaa
inc
add
in
into
ins
sbb
mov
mov
(bad)
adc
adc
add
sti
mov
sbb
xchg
jae
or
fisubr
rcl
xchg
mov
mov
aas
and
out
sub
fisttp
inc
ret
inc
pop
test
cmp
aad
ds
jb
inc
fdiv
dec
mov
jge
fbstp
xor
mov
jmp
sub
(bad)
xor
es
call
inc
push
push
cs
data16
js
adc
jbe
repz
push
ror
mov
ret
xchg
and
xor
retf
mov
fsub
fs
push
rcl
cmp
imul
in
test
push
push
ret
ss
je
pop
mov
cmp
ret
hlt
lock
mov
mov
push
sti
inc
imul
sub
xchg
retf
test
and
ret
jbe
rcr
pop
adc
add
dec
mov
xchg
out
call
je
mov
jb
inc
lea
sub
rol
jb
iret
jmp
retf
retf
inc
mov
jl
test
xor
retf
inc
inc
xchg
jecxz
and
jo
pop
jle
ret
dec
and
push
xor
popf
jbe
push
ins
push
mov
dec
sbb
xchg
les
(bad)
or
cmps
and
dec
ror
cmp
out
inc
jae
jmp
xor
scas
add
mov
xor
sbb
dec
jno
mov
sbb
xor
popf
and
popa
gs
lds
and
ret
(bad)
mov
mov
in
push
push
sar
cs
push
out
inc
jbe
inc
arpl
adc
push
push
int
sbb
push
add
cmp
pop
cmps
cmp
jecxz
push
repnz
pop
aas
push
into
xchg
ins
shl
jp
test
movs
in
mov
adc
les
test
jmp
jnp
cmc
cmp
mov
ret
add
sbb
inc
mov
push
xor
xchg
mov
in
test
out
cmps
adc
adc
add
ja
jb
mov
shl
lds
jg
scas
xlat
fadd
push
sbb
cmp
pop
shr
fdiv
pop
mov
into
(bad)
xlat
loopne
out
out
xchg
test
xchg
mov
rcr
cs
jp
hlt
sub
ss
cmp
mov
out
mov
ror
leave
inc
dec
mov
inc
xchg
jb
inc
retf
push
mov
scas
test
adc
xlat
mov
adc
jb
retf
xchg
mov
mov
lods
cmp
lock
xchg
arpl
mov
pop
repz
mov
ja
inc
pop
rol
sub
fsub
inc
(bad)
push
and
inc
pop
scas
push
scas
hlt
enter
sub
das
cwde
pop
push
push
mov
mov
inc
mov
(bad)
cmp
mov
fucomi
rcr
jnp
in
(bad)
mov
repz
aas
adc
mov
add
outs
int
adc
iret
daa
mov
sahf
cwde
sbb
dec
mov
or
cmp
(bad)
adc
jmp
movs
push
popa
test
addr16
hlt
xor
mov
sub
jecxz
cli
add
repz
mov
or
cs
push
leave
arpl
inc
add
xor
mov
pop
out
repz
mov
dec
dec
popf
and
jge
hlt
loopne
jae
jmp
shr
daa
fwait
jb
xchg
xchg
shl
fidiv
jae
fiadd
dec
repnz
int
push
push
pop
dec
scas
mov
test
mov
jbe
movs
aaa
mov
xor
push
rol
aad
xor
and
sub
xor
popf
ins
ss
sub
cmp
inc
mov
mov
mov
sbb
xchg
sbb
jle
test
cmp
xor
div
test
mov
sub
sbb
pop
arpl
(bad)
clc
sbb
cmp
sbb
mov
in
sub
stos
cdq
sahf
mov
adc
push
icebp
xor
xchg
cmp
cmps
xchg
inc
xchg
mul
jl
push
and
and
sub
add
repz
mov
inc
mov
pop
push
inc
or
ret
daa
repnz
jmp
xchg
pop
mov
xchg
aas
mov
push
push
aaa
mov
dec
(bad)
test
xchg
retf
jecxz
push
shl
xchg
dec
js
cmp
(bad)
(bad)
and
push
mov
or
data16
data16
xchg
add
arpl
arpl
rcl
xor
jmp
adc
or
int
or
or
push
xchg
out
jo
xlat
fdivr
add
pop
jmp
in
mov
mov
cmp
data16
sar
inc
mov
call
sbb
inc
scas
stos
cmp
and
stos
rcl
imul
in
aam
fist
movs
outs
outs
push
xor
jg
pop
push
lods
or
icebp
pop
call
mov
lds
mov
scas
clc
out
xchg
arpl
repnz
add
xchg
retf
jp
mov
dec
push
es
jmp
mov
adc
inc
ss
mov
into
xchg
inc
retf
je
jne
and
jo
loop
jbe
mov
add
shr
dec
sub
mov
mov
movs
sub
fs
fbld
repnz
xlat
xchg
add
and
xor
ret
and
or
push
out
xor
test
mov
lock
jo
xor
push
sub
and
das
(bad)
push
mov
push
popa
mov
add
mov
sub
nop
mov
cs
es
lods
dec
mov
stos
dec
add
fisub
mov
mov
mov
loop
add
(bad)
mov
jbe
adc
cmps
pop
or
or
pop
(bad)
int
cmps
add
dec
aam
or
add
xchg
enter
hlt
rol
pop
dec
les
addr16
sbb
jp
jno
and
sahf
iret
(bad)
div
popa
rcl
scas
jae
dec
out
adc
and
addr16
test
ins
xchg
and
mov
inc
xchg
popf
jecxz
test
and
jne
jne
cmc
into
int
add
pop
pop
enter
xor
and
das
push
lea
sar
retf
add
bound
adc
rcl
cs
aaa
aaa
(bad)
cmp
adc
pop
xchg
lods
int
rol
xchg
bound
mov
jle
push
popa
sub
(bad)
mov
ror
cdq
sbb
pop
call
inc
test
(bad)
idiv
je
xor
and
xor
inc
xchg
cmc
mov
fs
sub
shl
dec
inc
and
in
adc
mov
icebp
mov
fs
rcr
test
pushf
div
xchg
push
xchg
out
fwait
add
fild
mov
shl
xchg
test
adc
sub
jl
aad
inc
scas
inc
mov
out
inc
test
fdiv
xchg
push
les
sub
pop
mov
div
shl
sahf
imul
cs
sbb
jbe
jae
(bad)
int
cmp
add
xchg
cwde
test
xor
mov
push
mov
jae
jbe
jbe
push
hlt
sub
sbb
push
in
shl
jnp
xchg
and
push
mov
daa
add
xor
inc
mov
xchg
ss
push
sub
mov
xchg
xor
xor
pop
ins
push
mov
pusha
xchg
neg
mov
repz
shl
mov
sub
ret
retf
out
mov
repz
mov
mov
dec
loop
and
fst
adc
mov
or
movs
jo
xchg
ja
mov
ficomp
and
xor
adc
inc
inc
(bad)
jbe
or
aas
ret
adc
xor
xchg
cmps
pop
outs
aam
sbb
int3
jmp
arpl
fwait
jmp
and
push
addr16
xor
fdivr
pop
sbb
jbe
and
pop
stc
into
dec
mov
pop
div
repz
jecxz
shl
dec
std
mov
sub
movs
ss
pop
jge
push
call
shl
add
inc
pop
jbe
shl
sub
push
mov
xor
mov
mov
pcmpgtw
dec
inc
pop
mov
push
gs
and
xchg
add
mov
adc
(bad)
mov
fwait
mov
and
sar
in
(bad)
jge
pop
sbb
loop
add
ss
data16
pop
mov
add
jp
mov
xor
stc
sub
adc
call
mov
clc
and
xor
adc
int3
out
sub
mov
into
sbb
jmp
pop
cdq
push
mov
mov
cmp
(bad)
push
mov
push
inc
mov
jbe
xchg
adc
lock
test
jbe
and
pop
je
cmp
imul
inc
xchg
pop
mov
dec
cmp
pop
(bad)
inc
pop
cmps
mov
sub
push
jg
daa
mov
jb
adc
out
hlt
dec
popa
fstp
pop
adc
adc
(bad)
fcomp
push
push
(bad)
push
fcom
inc
pop
ret
mov
mov
ret
inc
stos
lock
jne
mov
pop
pop
xchg
jp
jb
adc
shr
jbe
rol
or
jp
pop
or
fwait
cli
popf
adc
lds
and
loop
inc
aaa
xor
test
push
dec
adc
push
jbe
retf
add
add
xchg
xchg
xor
cmp
aaa
(bad)
loop
(bad)
fdivr
inc
push
addr16
rol
(bad)
arpl
sahf
sti
xor
repnz
xchg
into
call
test
add
add
mov
push
pop
int
jmp
jmp
add
jge
dec
adc
xor
push
push
dec
test
adc
inc
or
adc
out
adc
dec
mov
adc
and
(bad)
mov
or
arpl
mov
movs
inc
mov
dec
and
adc
cld
dec
aas
push
ret
mov
cwde
jne
(bad)
cmp
push
test
cmp
mov
lock
int3
dec
jne
inc
inc
mov
mov
rcr
jle
stos
cmp
and
sbb
adc
sbb
mov
enter
test
shl
lea
inc
cdq
push
mov
dec
fcom
adc
pop
lea
sub
loopne
in
jge
inc
mov
xor
push
clc
jp
xchg
xchg
mov
mov
adc
add
mov
sbb
aam
xchg
loopne
clc
sub
mov
xchg
(bad)
lds
xchg
or
aaa
mov
jo
inc
mov
shl
addr16
inc
xchg
xchg
out
jns
push
popa
(bad)
nop
data16
(bad)
stos
repnz
sub
outs
bound
clc
push
inc
pop
sbb
out
ss
out
jae
sub
mov
rcl
bound
add
je
ins
add
clc
retf
add
inc
cdq
retf
mov
jnp
test
mov
in
loopne
daa
xlat
push
lahf
add
jbe
adc
lahf
sub
xor
(bad)
cmc
inc
rcl
jne
xchg
(bad)
mov
add
jmp
jmp
inc
jmp
(bad)
sub
mov
pop
stos
and
inc
adc
xchg
test
ror
push
fsub
movs
push
jmp
xor
mov
pop
pop
xchg
inc
jbe
test
push
mov
ja
mov
xlat
retf
push
push
pusha
cmp
test
or
cmp
add
in
daa
jae
and
dec
mov
cdq
je
adc
adc
xor
dec
push
add
out
in
xor
mov
jecxz
jo
repnz
sbb
(bad)
mov
rcl
in
xchg
lods
repnz
add
and
rcl
lahf
jno
rol
out
jmp
cmp
push
cmp
jmp
mov
and
ficomp
adc
jns
(bad)
das
cdq
push
jae
pop
xchg
out
neg
mov
xor
jle
pop
loop
int3
gs
pop
adc
push
or
aad
xor
dec
add
sub
mov
sbb
and
(bad)
movs
mov
ss
pop
mov
xor
cmp
icebp
xlat
push
fwait
ins
jmp
sbb
xor
fs
push
adc
cmc
scas
or
dec
cmc
call
push
pop
sub
jmp
push
cmp
xchg
cmps
push
xchg
out
jle
fnstsw
vandps
inc
jno
aad
xor
leave
xchg
xor
push
cs
xor
out
xor
scas
inc
xor
sbb
rol
enter
test
ja
std
jns
mov
cmp
cli
(bad)
ret
nop
push
ret
push
test
fistp
fwait
pop
shl
mov
add
sbb
icebp
repz
aam
mov
cmps
sub
arpl
mov
mov
xchg
lods
ror
loopne
out
dec
mov
mov
pop
fnstenv
pushf
xchg
sub
xor
jbe
xor
jmp
mov
mov
mov
sti
and
push
jno
adc
mov
ror
sbb
mov
mov
imul
cwde
xor
mov
ret
or
repz
xor
dec
adc
jbe
xchg
jno
(bad)
sub
enter
mov
sub
push
lods
imul
cmp
loope
data16
icebp
leave
xchg
xchg
add
lock
adc
cmp
xor
pop
add
pop
and
xor
xchg
xchg
bnd
mov
pop
in
mov
inc
sbb
or
addr16
cmps
mov
lods
ins
jmp
mov
add
add
sub
idiv
jg
les
scas
xor
xor
xsha256
cmps
adc
jb
push
pop
and
mov
xor
push
daa
loope
std
xchg
cs
out
rcr
ds
mov
xchg
sub
push
repnz
fidivr
mov
xlat
(bad)
in
jo
or
sbb
xlat
mov
xor
mov
xor
and
fwait
aad
out
cmp
and
mov
push
xchg
test
cmp
ret
push
sbb
xchg
shr
adc
lods
mov
pop
out
dec
mov
fisub
mov
and
or
push
sahf
cmp
pusha
(bad)
int
lahf
movs
in
xchg
fstp
ret
loop
gs
xchg
fwait
les
in
inc
xor
xchg
jmp
es
das
adc
xchg
mov
daa
aam
es
inc
push
loopne
jecxz
popf
or
fst
mov
retf
mov
and
sbb
(bad)
xchg
dec
push
push
push
xor
stos
cmc
mov
and
add
push
jbe
mov
(bad)
jmp
mov
push
adc
mov
enter
mov
jno
jmp
xor
loope
fdiv
mov
dec
pop
mov
cmp
adc
xor
ret
into
mov
cmps
xchg
dec
(bad)
cmp
pslld
mov
iret
cmp
out
mov
pushf
jbe
ss
mov
out
xchg
ins
in
adc
das
and
lods
pop
mov
xchg
cmp
sub
inc
shl
cwde
and
and
xchg
test
push
mov
xlat
icebp
adc
div
test
push
and
into
daa
call
dec
push
add
jp
xchg
pop
ds
jno
inc
aam
add
div
popaw
push
mov
mov
xchg
push
fcmove
push
xor
jle
sahf
rcr
inc
movs
shr
jae
je
add
ss
xchg
push
jbe
and
push
push
cmps
adc
cmps
add
add
or
push
pop
pop
xchg
call
jmp
ret
mov
or
nop
mov
pop
mov
clc
les
dec
jbe
sbb
inc
fwait
call
xchg
cmps
jno
leave
sahf
stc
adc
mov
inc
cwde
push
loopne
lods
push
das
sbb
(bad)
or
add
xchg
pop
ror
sub
mov
fwait
cmp
lods
xor
xor
mov
pop
loope
adc
jae
inc
and
xchg
adc
sti
inc
cmps
jae
add
bound
and
clc
stos
mov
and
mov
mov
mov
jp
pusha
icebp
jb
add
rol
call
add
into
sbb
call
sar
cmp
push
test
mov
mov
jge
mov
iret
add
cmc
pop
gs
inc
sbb
fisttp
(bad)
retf
jno
pop
and
add
xchg
sub
or
xchg
adc
stc
dec
dec
pop
xchg
mov
mov
mov
aam
adc
repz
stc
es
sub
hlt
cmps
les
cwde
jae
add
arpl
and
push
cmps
mov
aas
cwde
inc
imul
add
pop
mov
mov
ins
adc
and
pop
sbb
sbb
mov
sbb
sub
scas
in
es
dec
rol
ret
out
ja
jle
sub
ins
jle
jecxz
jmp
cwde
jne
bound
cmp
inc
dec
inc
and
neg
repz
ret
and
add
dec
add
bound
mov
dec
xchg
cmps
into
xor
xchg
je
pop
inc
pop
adc
ss
pop
cmp
adc
mov
test
aas
xchg
ror
std
nop
rcl
sbb
dec
inc
jbe
mov
fwait
into
or
fcom
pop
dec
inc
jae
fldenv
daa
push
sub
dec
enter
cs
adc
xor
test
nop
pop
cmp
icebp
fld
ja
pop
sti
dec
loope
jge
cli
mov
outs
and
rcl
inc
fist
mov
mov
hlt
bound
xor
outs
ret
push
xor
or
jl
push
xor
push
dec
adc
xchg
push
inc
jl
dec
mov
or
and
add
in
(bad)
push
loopne
ret
push
(bad)
out
test
push
mov
add
jbe
test
ror
mov
icebp
out
cmps
popf
mov
jnp
lahf
pop
cdq
adc
cmp
mov
xor
xchg
rol
rcl
pop
and
stos
jle
mov
pop
xor
push
push
jae
jne
inc
sti
pop
sub
mov
xchg
or
bound
sbb
xchg
leavew
cs
xor
lock
mov
mov
push
rcl
adc
popa
loope
mov
mov
outs
jl
lahf
jge
icebp
shl
and
add
mov
out
mov
jmp
jmp
aaa
sub
or
push
xor
push
repnz
outs
lods
pusha
ja
in
dec
stos
xchg
int
sbb
ret
push
and
pop
push
adc
jnp
ins
xchg
bound
les
in
xor
rcr
or
lock
push
es
jp
(bad)
fwait
inc
push
xchg
test
jo
daa
ret
add
imul
sub
repz
pop
call
and
mov
lds
loop
inc
aaa
popf
retf
lock
test
push
add
and
shl
jecxz
jno
aaa
and
icebp
scas
std
leave
dec
sbb
in
mov
mov
mov
ja
jmp
stos
xchg
push
fist
jle
inc
ss
pop
iret
mov
inc
aad
out
or
mov
test
cld
mov
jno
repz
int3
adc
out
mov
call
jmp
dec
test
fsub
cmp
mov
push
outs
xchg
pusha
push
push
push
mov
arpl
mov
pop
push
into
sbb
outs
inc
xor
repz
fdiv
add
pop
jge
pop
retf
and
mul
bound
ins
sub
sbb
push
jecxz
sbb
fbld
and
xchg
pop
xchg
cli
inc
and
add
push
or
xchg
pop
dec
arpl
and
xor
jge
das
jmp
mov
add
push
mov
jmp
ss
adc
jno
sbb
mov
ret
je
jecxz
dec
xchg
xor
mov
mov
add
out
xchg
cmp
jbe
and
rcl
mov
xchg
and
aaa
push
sub
and
inc
jo
lods
mov
fisttp
je
and
ret
mov
(bad)
shr
out
inc
xchg
adc
adc
aaa
lds
pop
adc
call
xlat
pushf
xor
cld
mov
out
repz
push
inc
jb
ss
xchg
push
in
ins
into
add
push
xor
inc
and
(bad)
xor
sub
(bad)
loop
(bad)
mov
jae
push
xor
xor
fcmovnbe
pop
sti
retf
mov
test
fld
(bad)
mov
xchg
pop
push
arpl
inc
ret
leave
imul
test
pop
gs
dec
mov
adc
das
dec
stos
jmp
jbe
inc
fiadd
shr
jecxz
test
icebp
neg
loop
pop
and
push
add
push
xchg
arpl
xor
test
(bad)
aad
mov
sbb
bnd
scas
sbb
adc
mov
std
xchg
cmps
popf
and
push
sbb
inc
add
inc
into
and
test
add
pop
pop
and
or
(bad)
std
ja
xor
fnsave
je
stos
add
jnp
mov
ret
(bad)
xchg
arpl
lahf
data16
sahf
movs
daa
cmps
rcl
push
or
es
and
inc
adc
push
imul
bound
inc
jno
lock
mov
sub
and
cmp
jmp
repz
dec
sub
mov
jns
cmp
sub
rol
xor
out
stos
jno
addr16
repnz
push
push
push
ss
or
and
jmp
pushf
icebp
adc
lds
ins
pop
sub
mov
xchg
push
add
xor
mov
or
mov
add
cmp
xor
test
mov
mov
push
enter
lock
aam
test
pop
loop
jb
cli
adc
stos
out
and
repz
xor
jae
arpl
mov
movs
sbb
inc
pop
sub
mov
icebp
adc
xor
ds
fsub
in
xlat
add
xchg
jae
mov
in
mov
rcl
cwde
popf
mov
or
cmc
pop
mov
retf
push
lahf
in
push
dec
sbb
out
in
fist
leave
std
(bad)
sti
mov
mov
mov
stos
and
push
stc
sbb
hlt
(bad)
aam
and
xchg
and
xor
mov
std
imul
xchg
adc
sbb
ret
out
fidiv
sub
loop
xchg
inc
xor
and
in
xchg
push
(bad)
mov
add
fisubr
retf
in
cli
aam
push
arpl
pop
(bad)
shl
jb
push
add
mov
xchg
lods
(bad)
fidiv
loopne
jmp
in
xor
mov
push
inc
mov
pop
mov
adc
fdivr
ret
xchg
lahf
jecxz
and
(bad)
je
std
xchg
mov
xchg
xchg
push
adc
jecxz
rol
mov
in
movs
ret
mov
push
push
add
rol
cmp
in
xor
fimul
sub
rcr
xor
pop
xchg
outs
push
add
ret
inc
popf
dec
cmps
ds
out
or
lds
test
xor
pop
lods
ins
cmp
scas
call
push
cmp
xchg
retf
mov
and
pop
ds
jne
mov
mov
sbb
ins
sub
in
(bad)
inc
pop
mov
stos
mov
arpl
lea
cli
jae
fld
(bad)
mov
pop
icebp
mul
cmp
add
cmps
push
add
mov
jbe
or
idiv
dec
jb
mov
hlt
inc
push
mov
dec
cli
fs
enter
push
cmp
and
shl
mov
mov
add
ret
fwait
data16
inc
push
mov
inc
daa
sub
xchg
mov
adc
and
dec
mov
or
fst
ja
xor
sbb
(bad)
jns
mov
sub
enter
jl
xor
xchg
inc
cwde
push
rol
inc
cwde
loop
cmp
ins
cmp
push
(bad)
pop
adc
or
add
and
ins
loope
pop
dec
mov
(bad)
icebp
lds
jg
outs
hlt
lods
xor
push
jp
imul
test
inc
jae
push
add
inc
scas
and
and
addr16
dec
test
call
std
mov
aad
rcr
cmps
jg
and
jb
pop
cmc
mov
iret
sbb
iret
adc
pop
push
or
push
retf
addr16
loop
sbb
sahf
lahf
pop
into
and
cld
add
outs
xchg
shl
cmp
sub
jnp
mov
in
xor
repnz
inc
mov
mov
mov
mov
stos
sub
push
mov
ret
and
in
int3
jae
xchg
add
fdiv
push
bnd
and
push
imul
xor
adc
push
repz
push
pushf
ds
imul
ja
xor
xor
mov
std
ins
ins
dec
dec
std
adc
movs
xchg
or
shl
dec
out
std
and
daa
cmp
or
inc
and
shr
leave
mul
nop
lahf
jno
lods
mov
mov
mov
push
xchg
push
xlat
fdiv
push
jmp
and
(bad)
cmc
cmp
inc
and
add
repz
dec
xor
in
xchg
push
imul
movs
adc
mov
out
ja
adc
adc
js
daa
outs
dec
adc
scas
sar
adc
inc
loop
ins
cld
retf
hlt
sub
jle
push
out
push
and
dec
or
retf
out
inc
(bad)
xchg
icebp
ins
call
data16
addr16
push
jbe
sahf
mov
popa
enter
loop
sub
xor
in
enter
popf
rcl
call
jne
jl
mov
ja
xchg
dec
push
dec
hlt
jecxz
pop
iret
adc
mov
outs
jmp
cs
sahf
cld
and
dec
dec
dec
popa
xor
das
fdiv
repnz
pop
pop
fcom
sbb
lods
push
mov
adc
push
test
jle
and
inc
iret
dec
mov
stc
and
repz
mov
shl
aaa
neg
je
loope
(bad)
pop
xchg
push
xchg
out
aaa
adc
shl
mov
or
pop
stc
add
div
mov
ficomp
and
dec
enter
sbb
inc
xchg
rcl
loope
sbb
movs
sbb
test
mov
add
repnz
xchg
outs
mov
clc
jae
cmps
jae
je
dec
jle
push
icebp
ds
lods
pop
pop
pop
or
xchg
mov
inc
ja
sub
test
pop
push
ja
arpl
out
or
(bad)
mov
fwait
lods
hlt
pop
aaa
cmps
push
ror
pop
sbb
(bad)
xor
xchg
mov
push
cmp
in
pop
sar
inc
inc
jl
xor
mov
aad
int
jg
xor
cwde
push
ins
imul
mov
(bad)
loope
fsubrp
sbb
loopne
ins
inc
jo
sbb
and
popa
ret
xor
ss
mov
inc
inc
pop
pop
pushf
movs
lock
mov
inc
sub
mov
mov
sub
jl
xchg
enter
lock
mov
cmps
mov
cmp
sbb
push
addr16
or
jbe
cmp
aad
inc
or
test
push
cwde
test
scas
push
jmp
mul
pop
add
xor
adc
push
ret
inc
jo
lahf
xor
icebp
jb
and
gs
xor
inc
sar
movs
test
jb
shl
inc
fidivr
and
ins
adc
bound
jb
push
sbb
push
and
clc
dec
retf
pop
mov
push
ret
ja
add
icebp
sub
inc
and
rcl
pop
ret
inc
push
sub
pop
retf
add
inc
movs
mov
adc
aam
add
out
mov
imul
adc
jbe
jbe
cmp
inc
cmp
add
lea
cli
cmps
xchg
(bad)
mov
and
out
push
movs
pop
loop
les
and
xchg
bound
sub
stos
hlt
adc
movs
ds
pop
push
cmp
scas
adc
call
mov
push
es
into
sti
and
inc
and
and
push
xchg
xlat
loopne
inc
call
cmp
test
jns
repnz
not
or
add
lock
push
push
(bad)
ror
les
call
neg
adc
push
leave
dec
loop
jne
cmp
inc
sbb
dec
and
nop
xchg
repnz
test
sahf
push
xchg
xor
xchg
int
jg
cs
inc
stos
push
ror
mov
mov
mov
arpl
cmp
aam
mul
jae
fld
icebp
push
push
mov
iret
fisub
out
push
mov
lods
sbb
dec
xor
mov
push
cmp
and
mov
(bad)
sbb
dec
sbb
adc
cs
into
int
repz
adc
out
sar
aad
popa
dec
inc
add
test
pop
not
adc
fucom
pop
shr
add
xor
shl
mov
pop
mov
cmps
add
pusha
gs
inc
jg
fadd
cld
mov
hlt
sub
push
xor
imul
repz
shr
repnz
data16
ins
mov
jmp
dec
adc
ret
add
outs
(bad)
bound
inc
push
xor
jo
popa
imul
inc
fbld
xchg
rcl
mov
xor
mov
repz
mov
enter
mov
add
push
mov
movs
push
loopne
inc
test
ret
push
outs
ret
mov
inc
cmp
addr16
test
ret
std
leave
dec
(bad)
cmc
adc
loop
ins
sbb
int
(bad)
cmp
mov
(bad)
add
and
imul
aad
mov
sbb
or
add
inc
push
mov
and
dec
pop
mov
(bad)
mov
arpl
adc
add
mov
les
xchg
ret
xchg
in
inc
xchg
jns
inc
out
xchg
mov
pop
adc
adc
and
xor
ds
(bad)
pop
mov
(bad)
out
or
js
mov
fistp
mov
adc
xor
dec
xchg
fld
imul
or
test
mov
es
jo
(bad)
adc
fadd
daa
mov
or
mov
iret
jb
rcl
aaa
push
dec
aad
xchg
jg
js
mov
shl
or
jno
xchg
or
mov
xlat
push
dec
ja
bound
xchg
mov
sti
jae
(bad)
push
sar
lock
sbb
inc
aam
dec
adc
jne
dec
cld
daa
adc
sbb
rol
aam
cs
repz
jae
push
mov
dec
mov
mov
push
in
(bad)
fimul
push
jmp
daa
fcomp
jb
adc
pop
stc
add
push
sbb
mov
fsubr
jbe
mov
stc
(bad)
arpl
lock
inc
cmp
ins
xchg
and
ins
test
hlt
fist
xchg
pop
pop
enter
lods
fstp
js
push
push
jg
lods
jmp
mov
shl
pop
repnz
daa
fnsave
cmc
or
inc
xchg
and
adc
lods
ret
cmp
sub
lods
xchg
or
xchg
pop
aam
jns
lods
cmps
ror
push
fiadd
dec
sbb
xchg
popa
push
ficom
pop
mov
mov
rcl
xor
xchg
popa
mov
pop
bound
jecxz
mov
dec
add
xor
aam
cld
scas
pop
push
pmaddwd
es
jb
rcl
fs
movs
mov
out
mov
mov
jno
and
cmc
adc
stos
add
push
xchg
mov
ja
test
xchg
inc
loope
mov
adc
ja
xchg
mov
inc
jecxz
inc
cwde
or
ins
iret
pop
jecxz
add
inc
retf
ds
pop
jae
and
ja
inc
inc
outs
push
dec
repz
mov
repz
aad
ret
stos
test
aaa
in
xor
fs
xor
outs
inc
mov
adc
mov
mov
pop
push
sahf
(bad)
mov
daa
fst
mov
sbb
(bad)
data16
add
push
mov
cmp
loopne
enter
push
pop
dec
sub
retf
enter
pop
pop
pop
pop
inc
(bad)
mov
xchg
xlat
mov
mov
mov
cmps
and
fadd
ret
idiv
je
out
sti
outs
mov
dec
int
shr
fldenv
stc
inc
xchg
cs
shl
and
daa
outs
leave
pop
jb
aas
add
jge
or
mov
cmp
add
xchg
(bad)
daa
or
adc
ja
js
dec
xchg
mov
cmp
(bad)
ds
addr16
mov
cmp
sbb
arpl
ret
jmp
int3
mov
ds
dec
mov
mov
mov
shl
jmp
mov
ss
mov
inc
es
xor
mov
lds
jp
jb
xlat
push
dec
mov
(bad)
adc
adc
add
mov
enter
mov
push
fld
jmp
xor
fld
ins
div
pusha
inc
mov
jl
mov
xor
icebp
loop
out
jecxz
sahf
(bad)
and
xchg
pop
loopne
push
(bad)
shl
repnz
ret
jbe
cli
adc
jae
sbb
xor
test
(bad)
iret
bound
jle
xchg
add
in
pop
loopne
ins
sub
pop
test
out
jne
or
(bad)
push
stos
lock
push
std
xchg
int
ret
icebp
gs
ins
rol
pusha
jno
push
in
mov
push
mov
push
jbe
cmp
retf
push
and
lock
popa
shl
dec
bound
pop
mov
jecxz
jecxz
rcl
push
js
arpl
aaa
pop
jmp
add
mov
pop
out
mov
add
xchg
jno
xchg
mov
xor
inc
lods
(bad)
frstor
mov
mov
repnz
mov
xchg
aad
xchg
jecxz
mov
arpl
sbb
jmp
out
xchg
jbe
sbb
aas
aad
pop
or
ss
cmps
mov
fimul
xor
push
jb
jp
ret
pop
cmps
jg
outs
mov
xchg
arpl
arpl
mov
cmp
fcomp
out
in
pop
adc
pushf
mov
in
pop
push
jl
xor
push
xchg
into
sti
xor
jbe
inc
xor
cld
inc
sbb
xor
int3
mov
daa
and
adc
gs
mov
repnz
test
pop
pop
xchg
jmp
int
add
out
cmps
test
xor
push
mov
and
mov
in
fistp
mov
xchg
xor
bound
movs
cmp
adc
xchg
(bad)
jae
loopne
mov
gs
daa
int
mov
sbb
test
in
mov
ja
jge
sbb
inc
and
adc
and
mov
jns
nop
test
aas
xchg
adc
xchg
mov
jae
jne
cmp
jmp
or
or
push
jno
mov
or
cmp
add
jge
jae
mov
inc
movs
inc
addr16
jnp
repz
loop
inc
push
into
lahf
repz
das
fs
shl
icebp
fs
xor
gs
aaa
ins
out
mov
inc
ins
rcl
add
xor
mov
stmxcsr
cmps
xor
xor
mov
inc
push
push
pop
sub
repnz
cdq
sub
mov
adc
xchg
dec
arpl
mov
push
aad
mov
and
rcr
mov
xor
jmp
push
aad
pop
cli
pop
into
xor
fadd
fs
shl
fs
repz
(bad)
cmp
movs
or
lds
jle
mov
call
aam
push
lods
sar
xor
cmps
cmp
xor
add
and
gs
pop
call
push
faddp
mov
data16
loop
adc
repz
mov
mov
pop
xor
sbb
xor
push
shl
adc
shl
fdivr
mov
(bad)
mov
icebp
loop
xor
xchg
popf
xchg
cmp
pop
mov
mov
aas
inc
mov
ret
jmp
repnz
out
pusha
fucom
mov
arpl
movs
dec
imul
xor
rol
mov
adc
cmp
inc
xor
push
adc
movs
out
cmp
sti
mov
adc
or
push
fidiv
pop
and
in
and
add
(bad)
ins
inc
sbb
out
pop
mov
fcom
adc
mov
or
std
sub
mov
push
adc
jmp
add
neg
scas
mov
aad
loope
cmp
xchg
int
sub
ror
mov
cdq
dec
xor
stos
sar
call
leave
jecxz
and
int3
mov
push
add
cmps
sub
movs
enter
gs
and
jmp
(bad)
xor
sti
aas
clc
adc
mul
cmps
pop
mov
or
lods
ja
idiv
cmps
repnz
ficom
jbe
xor
popa
es
outs
mov
pop
xchg
jno
ret
inc
dec
mov
mov
mov
xchg
and
rol
or
push
xchg
pop
rcl
lods
ds
clc
adc
push
or
pop
push
call
ins
adc
add
pop
add
push
or
test
jno
ja
shl
jne
mov
pop
mov
out
sub
ss
mov
push
test
cmps
rcl
fst
push
(bad)
mov
test
pushf
pop
sti
jae
inc
xor
add
inc
cmp
cmps
and
cmps
test
imul
adc
xchg
jae
xchg
fisttp
push
cmps
jne
inc
jecxz
ret
pusha
movs
xchg
mov
jne
push
xor
and
and
mov
adc
mov
data16
sbb
loopne
test
in
dec
aad
stos
push
in
cmp
hlt
lock
popa
mov
(bad)
stc
and
cmps
push
or
mov
data16
add
dec
sub
js
jle
rep
inc
mov
and
pop
jb
icebp
dec
adc
push
and
stc
cdq
inc
mov
ret
mov
adc
jb
inc
mov
out
xor
xlat
cdq
add
fist
or
fs
stos
push
inc
cmps
popa
mov
and
loop
repz
dec
mov
push
mov
and
test
xchg
(bad)
fistp
pop
jnp
pop
addr16
dec
push
popa
jg
ja
pop
shl
mov
jmp
aaa
movs
repz
mov
movs
lock
aas
xor
xchg
fnstenv
dec
or
ficomp
cmc
jle
cmps
xchg
gs
inc
mov
mov
adc
rcl
into
pop
in
mov
rcl
mov
out
dec
push
daa
in
rol
xor
cmp
popa
idiv
outs
jg
arpl
shl
xchg
adc
loop
ror
mov
mov
int3
lds
ins
ds
and
jg
fistp
mov
inc
out
aam
ret
int3
test
(bad)
xchg
clc
ds
lods
stos
icebp
idiv
call
(bad)
ss
arpl
push
fidiv
pop
xchg
or
xchg
adc
movs
repnz
lahf
dec
inc
(bad)
lods
push
cmps
in
xchg
rcl
cmp
sbb
cmp
mov
cmps
(bad)
push
sahf
fs
sbb
push
xlat
clc
std
pop
adc
clc
xchg
cmp
or
loop
cs
out
xchg
cs
(bad)
cs
mov
dec
lds
xor
std
daa
sbb
in
add
not
dec
and
cmp
jae
sbb
pop
or
and
pop
push
jcxz
hlt
out
jmp
jmp
add
push
jb
cmp
out
mov
ret
ss
xchg
(bad)
cmp
mov
pop
or
dec
out
and
rol
xchg
xor
sar
jmp
ja
iret
mov
dec
shl
jo
xor
cmp
movs
push
jae
dec
rol
in
xor
push
ficom
icebp
dec
cdq
fisubr
add
cmps
not
ins
push
scas
enter
add
in
dec
repz
mov
in
rol
dec
imul
pop
sub
push
add
xchg
or
test
xor
bt
cs
into
js
mov
push
mov
mov
test
sahf
xor
lock
rcr
sub
dec
push
mov
out
addr16
ret
inc
addr16
mov
add
mov
(bad)
mov
nop
xlat
mov
clc
push
and
js
sub
fst
lods
xor
movs
mov
xor
inc
js
xor
ret
mov
jb
fbld
ret
lods
push
adc
add
addr16
adc
mov
mov
je
push
and
and
or
pop
mov
repnz
out
fs
inc
xchg
sub
jmp
mov
sbb
sbb
inc
mov
dec
inc
leave
xor
(bad)
push
stos
inc
mov
or
loope
lds
cmps
data16
int3
std
(bad)
mov
inc
mov
mov
arpl
xchg
adc
addr16
adc
jb
outs
test
sbb
mov
jae
push
out
arpl
inc
xchg
cmps
xchg
in
pop
je
xchg
push
pop
jmp
dec
ja
add
xchg
lea
add
mov
cmp
mov
and
cmp
std
gs
inc
inc
mov
daa
aaa
cmp
mov
inc
cdq
dec
cmp
mov
pop
sub
adc
sti
jb
pop
daa
push
retf
xor
mov
out
mov
sbb
nop
pop
push
(bad)
jbe
push
jecxz
adc
cmc
and
and
inc
jmp
dec
out
cmps
add
mov
shl
pop
cdq
xor
sbb
mov
adc
push
adc
in
int3
jge
loop
shl
mov
scas
ficomp
hlt
cmp
repnz
(bad)
jp
and
je
jl
(bad)
repz
icebp
stc
jns
xchg
mov
pop
div
dec
xchg
mov
add
adc
stos
mov
sti
test
lods
mov
adc
sub
mov
xchg
addr16
mov
jge
mov
call
and
push
jmp
ret
addr16
push
push
xchg
xchg
iret
adc
cs
loop
mul
jl
retf
es
adc
loopne
pop
(bad)
mov
lea
add
inc
ins
dec
cmps
push
cmps
je
sbb
aaa
fist
ds
movups
add
ss
sar
mov
mov
loope
mov
loopne
std
stc
lahf
push
(bad)
icebp
xchg
add
or
out
test
xchg
lea
mov
(bad)
hlt
and
inc
fst
xchg
and
push
sbb
mov
fcmovbe
inc
inc
daa
idiv
out
push
adc
sub
es
cmp
movs
(bad)
icebp
jmp
dec
pop
ret
add
repz
sub
jmp
daa
adc
inc
jmp
mov
test
add
(bad)
out
scas
pusha
cmp
or
dec
sub
into
push
into
xor
add
je
lds
fnstsw
inc
jecxz
sub
xor
xchg
sbb
bound
add
shl
daa
inc
pavgb
pop
inc
call
hlt
lock
inc
xchg
adc
data16
inc
mov
dec
out
sub
jge
ret
ret
call
jae
xor
xor
add
push
ret
add
inc
arpl
jae
push
pop
fst
and
les
mov
jbe
daa
mov
adc
push
fnstenv
into
out
sbb
cmp
rol
pop
pop
mov
mov
scas
dec
jbe
adc
lods
push
push
(bad)
(bad)
adc
dec
adc
xchg
pop
(bad)
mov
out
imul
xchg
out
push
scas
test
pop
and
add
cmp
adc
push
push
into
aad
mov
fstp
data16
retf
add
ret
pusha
mov
addr16
sbb
xchg
pop
jecxz
pop
cmp
push
les
retf
inc
fldenv
cmp
out
pop
sbb
inc
add
lods
repz
or
or
add
rol
std
les
mov
pop
lds
mov
loop
pusha
and
lods
mov
inc
ror
dec
dec
mov
lea
ja
jns
adc
inc
arpl
mov
add
push
push
pop
add
daa
pusha
lods
push
mov
(bad)
retf
loopne
or
in
jmp
sbb
mov
jp
sub
enter
xor
or
add
shl
xor
mov
xchg
add
inc
loopne
ret
movs
out
(bad)
stc
in
push
add
sub
xchg
sub
(bad)
mov
inc
popf
xchg
fwait
mov
ss
ret
(bad)
jmp
mov
dec
outs
out
outs
sar
inc
scas
cmps
scas
call
in
bound
push
ja
nop
push
or
and
xchg
das
xchg
xor
in
and
inc
fild
or
jecxz
mov
or
xor
fisttp
inc
mov
(bad)
jge
or
mov
cmp
xchg
and
cmp
stos
std
lea
pop
adc
add
(bad)
inc
aad
jnp
xchg
(bad)
arpl
xchg
test
xchg
mov
sbb
cs
xchg
add
cwde
dec
lahf
iret
test
cmp
in
jle
lods
sbb
(bad)
jecxz
leavew
add
dec
xor
lds
ret
repnz
repz
adc
add
push
cmps
cmps
add
add
(bad)
enter
cmps
add
cwde
int
and
aaa
pop
mov
or
add
mov
js
into
shl
sti
aaa
outs
dec
or
pop
or
xor
cmp
sbb
aam
jb
cmps
rcl
imul
ror
lods
pusha
popf
lahf
jae
push
movs
mov
jae
jecxz
xchg
movs
xchg
repz
mov
leave
scas
mov
cmp
mov
fs
push
ins
xor
jmp
mov
dec
xchg
push
loop
or
daa
retf
push
stc
les
ss
cmp
icebp
jmp
ss
ss
aam
jbe
pushf
cmp
and
inc
not
fstp
xchg
add
in
movs
aas
ds
jmp
and
sub
inc
jb
cdq
es
mov
jb
ds
pushf
das
repnz
sub
mov
ret
sbb
inc
mov
add
adc
lods
cwde
jge
pop
mov
test
cli
retf
mov
dec
mov
daa
xlat
dec
cmp
xchg
dec
adc
lods
repz
shl
retf
jp
push
icebp
push
add
pop
jl
cmp
xchg
adc
jno
mov
mov
ficom
dec
scas
push
out
repnz
cmp
push
inc
add
ret
pop
imul
repnz
jecxz
pop
xchg
loope
xor
adc
es
out
daa
pop
mov
push
sahf
sahf
add
ret
cdq
stos
jno
xlat
mov
hlt
sub
aaa
jbe
inc
inc
xor
push
cmp
call
loope
mov
sbb
ds
mov
cmc
(bad)
retf
int
xor
sar
lods
in
icebp
mov
sahf
addr16
jo
loope
aam
stos
ja
add
jns
ja
imul
shl
mov
jle
and
cmp
les
(bad)
or
imul
ret
jnp
jo
sbb
and
popf
das
out
xchg
arpl
(bad)
jnp
and
and
jmp
in
outs
sbb
icebp
(bad)
pop
mov
push
push
aam
mov
jae
ret
sar
or
loope
enter
xchg
and
enter
adc
sti
cs
mov
xor
hlt
add
adc
xchg
cmp
jmp
adc
inc
adc
ds
dec
mov
sar
mov
inc
adc
daa
cmc
or
push
pushf
push
mov
bound
xchg
jg
xor
inc
pop
int
stos
jge
imul
leave
mov
xchg
nop
sbb
cld
xchg
mov
out
ret
mov
div
adc
inc
hlt
pop
cmps
add
int
and
xlat
inc
inc
xor
lock
cmp
push
jmp
push
inc
push
and
shl
rcl
mov
nop
jne
out
retf
add
mov
inc
mov
xchg
scas
rcl
cli
or
into
push
ja
xchg
addr16
and
push
cld
dec
jbe
shl
xor
ret
add
ss
xor
pop
jg
xchg
mov
lods
ror
mov
inc
nop
mov
div
mov
dec
rsqrtps
aaa
clc
mov
lds
adc
lea
xor
or
xchg
popf
loop
movs
pop
cmps
jmp
and
rcl
icebp
mov
les
pop
shl
xchg
mov
and
mov
test
mov
ds
jne
(bad)
cmps
inc
xchg
aam
cmps
and
inc
inc
push
jmp
xor
xchg
enter
test
adc
mov
inc
or
xchg
xchg
popf
dec
pop
out
test
xchg
scas
inc
les
repnz
inc
sub
push
and
jo
push
pusha
out
shl
xchg
jo
cdq
test
xor
cmps
mov
inc
mov
repnz
mov
lock
cmp
mov
cld
scas
shr
jae
xor
aam
arpl
xchg
cmp
mov
iret
ja
push
cmp
adc
xchg
cs
adc
and
cmp
inc
mov
xchg
repz
add
mov
add
out
lds
mov
push
xor
xor
xlat
cs
(bad)
aad
scas
aas
push
pop
inc
les
mov
xor
sbb
xchg
inc
push
aad
add
vcmpss
add
mov
mov
hlt
add
rol
jge
xor
or
shl
pushf
repz
sub
out
leave
jbe
bound
pop
cs
or
addr16
jmp
sub
mov
jae
into
push
add
cs
adc
mov
(bad)
or
and
pop
mov
adc
iret
jl
lock
pop
repz
adc
xchg
mov
push
mov
repz
js
sub
daa
xchg
int
xor
inc
sar
int
dec
adc
inc
pop
mov
movs
movs
push
idiv
aad
lds
loopne
xor
leave
jl
ins
dec
jle
scas
addr16
push
les
(bad)
out
into
retf
push
mov
ss
ss
adc
in
push
fstp
mov
push
adc
add
imul
dec
cli
add
sahf
fadd
push
and
pop
nop
int3
aaa
ficom
in
ror
test
push
call
jge
mov
push
jg
mov
and
mov
mov
gs
or
clts
test
aaa
mov
cmp
aad
cmp
pop
cwde
push
repz
xchg
and
addr16
aaa
imul
mov
movs
push
jecxz
mov
jo
dec
inc
mov
mov
ss
pusha
lods
into
jle
dec
pcmpgtd
push
in
pop
mul
fild
outs
into
jo
ins
cmp
jbe
jnp
sub
jmp
add
ja
sbb
add
daa
(bad)
ja
loop
cmp
cwde
pop
rcl
cmp
sbb
sub
cmp
push
add
retf
ficomp
inc
(bad)
inc
mov
data16
data16
ins
mov
adc
push
cmp
jecxz
mov
mov
mov
mov
neg
es
mov
stc
add
hlt
cld
cmc
xor
stos
test
dec
inc
dec
test
outs
mov
xchg
sahf
jbe
inc
lock
out
mov
out
and
mov
out
or
enter
adc
inc
fisttp
shl
(bad)
jmp
jae
cmp
mov
mov
(bad)
cmp
adc
cmp
ins
rol
jp
cmp
in
addr16
not
inc
jne
push
pop
cmp
and
xor
and
or
mov
cdq
hlt
test
loop
es
ds
jmp
jns
mov
adc
inc
stos
push
arpl
loope
test
and
scas
add
ss
cmp
clc
push
out
out
repnz
mov
ins
and
mov
loope
push
jbe
and
mov
xor
in
dec
adc
jb
inc
adc
dec
fdivp
mov
mov
mov
leave
cs
add
jle
std
push
push
pop
daa
add
xchg
fidiv
xlat
adc
lahf
stos
cmp
int3
xchg
cmp
cmps
and
jl
mov
mov
aaa
cmps
mov
push
dec
jbe
push
cmp
push
(bad)
pop
call
push
dec
shl
lahf
pop
outs
jns
adc
sti
addr16
adc
sbb
mov
pop
in
int3
lock
mov
dec
xchg
mov
ret
push
movlps
or
cmps
xor
pop
dec
stos
xor
lock
hlt
sbb
lea
es
scas
pop
scas
xchg
ja
mov
sub
popa
xor
push
int
pop
pop
loop
arpl
and
inc
push
cmps
arpl
jbe
add
ss
loop
ficom
and
dec
div
jne
mov
pop
rcr
and
inc
(bad)
xor
pop
loopne
(bad)
jecxz
scas
xchg
inc
adc
mov
xchg
iret
cmp
(bad)
neg
sub
cmp
mov
loope
pop
rcl
pop
and
mul
pop
fucomip
mov
pop
mov
sub
aam
scas
or
lock
(bad)
jmp
or
push
loopne
(bad)
jo
add
aad
adc
xor
int3
cmps
jae
fistp
cmp
dec
and
push
mov
stc
sbb
jbe
jge
out
adc
mov
adc
std
ins
in
and
iret
mov
out
inc
aad
mov
not
(bad)
or
push
xor
rcr
retf
shl
loop
inc
push
inc
fstp
add
xor
movs
call
push
das
jle
repnz
push
cli
mov
movs
inc
(bad)
add
inc
xchg
push
xor
or
arpl
je
xor
push
shl
xchg
add
arpl
popf
jo
pop
pop
mov
mov
(bad)
fist
call
lea
dec
and
xchg
push
(bad)
mov
enter
sbb
pop
mov
inc
aam
sbb
popa
shl
sar
repnz
idiv
mov
mov
or
(bad)
daa
daa
pop
(bad)
ds
pushf
jg
outs
mov
arpl
cmp
aaa
xchg
xor
xlat
es
add
dec
test
jmp
xchg
mov
sahf
cdq
xchg
aaa
xchg
retf
out
inc
out
lds
adc
jmp
add
fisttp
xor
jae
adc
mov
sbb
std
mov
mov
xchg
js
bound
adc
lods
ds
inc
ret
int
jae
rcl
push
(bad)
call
test
or
jo
repz
adc
int
loop
addr16
int3
jmp
cmp
sub
mov
mov
lods
push
aad
inc
mov
mov
pop
fld
lods
add
aaa
sti
in
mov
stos
addr16
leave
fisttp
xor
outs
add
mov
jnp
add
lea
int3
jecxz
and
inc
mov
lds
jnp
mov
ins
test
jle
repz
popf
mov
cdq
icebp
inc
addr16
cmps
es
arpl
and
cdq
outs
inc
push
xchg
xor
mov
dec
arpl
inc
popa
add
xor
gs
push
sbb
retf
scas
push
or
adc
add
movs
xor
fcmovnb
cld
mov
jo
ret
cwde
or
movs
sbb
cmp
sar
fs
sbb
out
xchg
(bad)
mov
sbb
or
dec
pop
adc
aam
sbb
inc
inc
je
(bad)
xor
mov
pop
dec
inc
jnp
or
sub
xlat
aad
push
out
sub
out
aam
cs
cmp
sbb
push
pop
pop
daa
push
icebp
xor
aas
jnp
mov
in
shr
push
or
dec
inc
jmp
jbe
gs
(bad)
into
shl
outs
jne
dec
jbe
addr16
stos
cmp
test
mov
hlt
mov
das
add
fwait
sbb
jmp
push
repz
scas
mov
stos
movs
js
hlt
pop
mov
inc
inc
pop
(bad)
inc
jae
in
fbld
les
mov
lods
arpl
add
js
(bad)
cmp
inc
mov
ja
sbb
movs
jle
and
aaa
mov
jbe
imul
call
add
and
xchg
sahf
shl
jp
(bad)
xchg
add
mul
mov
ret
retf
mov
mov
inc
mov
int3
push
(bad)
mov
pop
or
xlat
pusha
popf
pop
loope
pop
loop
retf
or
xlat
and
xor
push
sub
sbb
xlat
repnz
popf
adc
dec
inc
pop
repnz
jle
ret
add
cwde
data16
or
xor
push
cmp
popa
test
fwait
lds
and
cmc
add
add
mov
add
mov
jb
mov
push
inc
fs
pop
stos
pushf
mov
rol
inc
loop
xor
inc
mov
add
mov
lock
ret
cmp
adc
mov
lds
int3
leave
movs
xor
mov
push
fcom
push
js
mov
fild
scas
xor
stc
jae
sub
daa
adc
imul
shl
mov
pop
aaa
lods
ja
pop
pop
in
arpl
clc
sub
and
dec
xor
stos
inc
fld
ss
clc
(bad)
xchg
arpl
fcomi
mov
cs
cli
pop
pop
jno
sub
adc
gs
popf
mov
mov
cwde
out
pop
fwait
rol
jle
push
jnp
loope
and
bound
scas
mov
je
movntq
icebp
xchg
lods
xor
es
mov
jbe
jo
jl
add
jno
ins
lds
cwde
movs
add
fwait
data16
daa
sahf
lds
iret
xor
dec
jmp
adc
adc
xchg
ds
outs
inc
sub
mov
stc
jecxz
mov
sub
scas
hlt
push
loop
aas
sub
cmp
sub
add
lds
xor
or
imul
inc
jnp
push
enter
rol
fwait
enter
mov
daa
pusha
pop
inc
jmp
sar
rol
scas
sar
jmp
movs
push
cs
sub
fst
jecxz
stc
jns
popf
(bad)
test
icebp
cmc
movs
push
(bad)
sbb
pusha
sub
(bad)
pop
xchg
sar
and
imul
(bad)
ficom
dec
pop
rcl
pop
push
dec
mov
cmps
mov
push
push
push
fld
cmps
push
or
inc
xor
loope
(bad)
jno
lock
int
stos
mov
mov
add
loope
shl
xchg
bound
push
icebp
sub
jl
jae
adc
test
retw
(bad)
sar
pop
call
nop
or
and
xlat
push
pop
ds
mov
mov
jb
addr16
and
push
outs
push
jmp
das
pop
int3
mov
cmpps
ret
shl
test
mov
imul
ins
cmps
sbb
inc
scas
jmp
and
jns
sub
test
mov
adc
mov
jle
test
ins
pop
cmp
pop
pop
xlat
scas
inc
sbb
pop
xor
add
ss
adc
dec
cmp
pop
dec
pop
fmul
ja
push
xabort
push
mov
jle
and
inc
ss
ror
ins
sti
cmp
and
push
adc
mov
xchg
xchg
sub
js
adc
mov
sbb
push
mov
mov
push
fisttp
xor
xchg
das
cld
cmc
outs
mov
jp
(bad)
jae
adc
and
ss
pop
xor
ins
sbb
push
test
rcl
mov
cs
test
jne
xchg
push
inc
cmc
in
clc
dec
inc
inc
stos
call
shl
sub
aad
fsubr
sbb
pop
out
jecxz
in
xchg
stos
in
mov
addr16
or
stc
jns
sub
jp
outs
call
mov
ja
jg
push
mov
das
xor
pop
xchg
out
or
xlat
pop
adc
sbb
adc
xor
pop
xchg
or
test
bnd
test
sub
mov
fcmovb
call
adc
push
ret
loop
int
pushf
xlat
and
or
mov
sub
aam
pop
sti
inc
add
rcl
dec
push
cmc
cmps
div
xor
and
or
fiadd
repz
in
out
xchg
repz
rcr
sub
lahf
mov
push
pop
pop
pop
cmp
inc
into
ficom
jecxz
fnstenv
ret
inc
in
and
idiv
add
cmp
in
xor
pop
jno
ret
es
es
and
cmp
add
cmps
cmp
jne
repnz
mov
jns
lahf
and
add
mov
or
adc
(bad)
movs
mov
data16
(bad)
fisubr
mov
sbb
push
push
jmp
sbb
imul
rcr
dec
pop
data16
mov
loopne
les
ins
mov
ins
jmp
shr
xchg
xchg
and
scas
mov
xchg
and
cwde
mov
lods
in
aam
mov
sub
add
(bad)
das
xchg
int3
aam
cwde
movs
xchg
or
pop
sbb
lock
loop
mov
mov
mov
test
lods
into
sub
lock
xchg
out
xchg
adc
adc
lock
imul
mov
outs
rol
xor
out
xor
sar
bound
push
inc
xchg
and
mov
pop
test
and
push
xor
ja
mov
out
sub
inc
xchg
pop
xor
mov
imul
pop
jecxz
fsub
dec
and
add
and
(bad)
adc
mov
adc
sbb
lds
mov
sub
and
test
push
add
test
daa
xchg
or
clc
push
data16
cwde
push
retf
call
pop
and
sub
jecxz
repnz
sbb
jns
mov
pop
sub
repz
inc
(bad)
std
ret
les
cmps
adc
xor
sub
xchg
in
mov
mov
and
ret
jecxz
scas
jnp
ins
rcr
out
add
sub
fisub
cmp
popa
faddp
in
push
mov
cwde
push
cmps
xchg
arpl
or
sahf
or
push
paddd
jnp
cli
pop
iret
cmp
outs
inc
out
das
jecxz
or
mov
lods
pop
push
inc
xchg
out
mov
(bad)
hlt
mov
adc
cmps
mov
mov
les
mov
adc
punpckhdq
mov
mov
xchg
pop
jae
aaa
das
les
and
es
mov
or
sbb
movaps
cmc
das
sbb
les
lock
xor
cs
cmps
ins
cmc
shr
adc
aam
(bad)
pop
inc
adc
shl
mov
push
cwde
jbe
ja
add
shr
sub
repz
mov
inc
je
clc
xor
inc
inc
out
into
mov
jae
cwde
mov
add
add
or
leave
xchg
icebp
add
add
movs
and
add
xor
jne
js
sbb
movs
mov
es
adc
jae
imul
movs
icebp
div
cmp
and
jae
neg
cmc
jmp
rcr
mov
sti
mov
ja
rcl
std
mov
mov
fimul
mov
call
retf
sbb
jp
and
sbb
xor
sub
add
sahf
dec
cmc
repnz
sti
enter
pop
push
jbe
fadd
cmp
cmp
out
inc
rcr
ret
cmp
inc
(bad)
adc
cmp
sbb
in
aad
test
out
mov
push
call
jl
imul
adc
fistp
imul
sub
iret
jo
inc
mov
gs
mov
fxtract
ret
dec
or
test
dec
push
rcl
inc
mov
jbe
pop
outs
sub
movntq
cmps
repnz
jo
add
(bad)
pop
sbb
mov
xchg
icebp
test
dec
inc
dec
jge
mov
and
fmul
es
in
xor
sub
jae
mov
cwde
sbb
jae
push
movs
(bad)
(bad)
daa
and
add
addr16
(bad)
ins
fistp
pop
(bad)
xor
(bad)
sub
inc
test
push
shl
or
test
repz
mov
pop
gs
xchg
xor
mov
and
sub
xor
mov
cwd
into
ins
bound
sub
out
push
and
cmp
jmp
inc
ja
jge
push
and
cmp
xchg
xor
test
jbe
sub
mov
les
pop
hlt
adc
add
jns
mov
push
loope
add
add
and
push
mov
mov
xchg
inc
into
or
and
not
out
mov
loopne
arpl
pushf
bnd
ss
inc
into
imul
clc
cdq
mov
push
(bad)
retf
dec
xchg
pop
push
popf
repz
dec
jl
(bad)
push
int
dec
push
test
mov
and
cmp
push
arpl
jecxz
stos
fwait
popf
mov
xchg
loope
jecxz
loopne
ret
rcr
bound
(bad)
cmp
pop
jne
not
and
push
pop
dec
mov
dec
jo
cmps
ror
fnstenv
adc
int
pop
fistp
lock
into
push
jg
and
fadd
loop
aad
push
or
add
jb
pop
mov
into
inc
mov
movs
dec
xlat
sub
lahf
jns
das
movs
rcl
sub
xchg
sti
push
inc
mov
jge
sbb
fmul
ja
lods
add
mov
cmps
and
xor
bnd
push
pop
repz
jg
xor
enter
fstp
pop
imul
popa
(bad)
popa
mov
mov
lahf
xor
lods
xor
cmps
stc
call
sti
rcl
(bad)
or
mov
les
out
es
shr
xor
fs
dec
cmps
cmp
shl
mov
and
dec
cmp
je
jbe
fadd
mov
and
out
push
adc
cmps
out
scas
xor
out
push
sbb
aas
pop
fistp
xlat
mov
mov
dec
sub
jcxz
xlat
and
fwait
jecxz
lods
daa
or
sti
neg
xor
push
cmps
jnp
fwait
cmps
std
addr16
pop
inc
push
pop
cmp
dec
mov
pop
sbb
les
dec
cmp
jae
sbb
sbb
imul
push
sub
add
shl
retf
into
data16
movs
pop
iret
iret
push
and
in
les
adc
cmps
outs
jecxz
jae
shl
cmc
jle
sub
rcl
add
cli
es
out
bound
repz
add
xchg
mov
pop
shl
je
push
lods
rcl
jmp
lea
fs
loopne
xlat
daa
ins
inc
add
sbb
data16
bound
mov
and
mov
push
dec
push
push
cmps
loopne
stc
add
push
push
inc
xor
jp
xlat
and
(bad)
xor
xchg
jns
mov
push
loopne
pop
jmp
xor
cwde
and
add
ret
int3
inc
jns
mov
inc
call
stos
outs
and
dec
jl
mov
push
mov
sbb
retf
arpl
repnz
mov
add
adc
int3
js
call
into
aad
adc
mov
outs
add
sbb
push
push
movs
add
and
adc
data16
add
sbb
ret
mov
xchg
mov
adc
repz
sti
add
sbb
mov
loope
loope
(bad)
adc
popf
cwde
scas
cli
mov
pop
inc
cli
scas
push
ret
ins
rol
or
push
stos
addr16
in
xor
call
dec
cmps
inc
pop
cs
pop
push
add
popf
test
push
push
aaa
push
out
sbb
cmps
sbb
or
add
in
jmp
cmp
mov
aas
sbb
add
sbb
mov
sbb
pop
jmp
add
xchg
das
lahf
(bad)
(bad)
(bad)
push
mov
sub
add
push
cmp
lock
lods
sbb
mul
call
pop
rcl
and
icebp
mov
arpl
mov
test
cmp
cmp
outs
mov
rol
mov
fcom
inc
out
mov
aaa
cmp
jne
mov
sbb
bound
pop
bound
daa
mov
adc
aam
test
adc
xor
adc
jo
sahf
and
lds
mov
push
mov
and
and
out
hlt
or
ficomp
(bad)
cmp
pop
loop
outs
xlat
aaa
xchg
(bad)
nop
je
outs
xor
cmp
cmps
mov
popf
stos
popa
ret
les
adc
data16
daa
mov
sub
out
jb
shl
pop
(bad)
mov
out
mov
pop
pop
and
(bad)
or
loop
in
mov
cmps
xchg
mov
push
mov
loopne
cmp
or
or
fdivrp
imul
cmps
mov
jae
sub
loope
jmp
dec
mov
fistp
jo
cli
mov
ins
int
push
mov
loope
call
push
jns
pop
jmp
push
adc
in
inc
cmp
lods
pop
push
mov
ja
mov
mov
test
adc
(bad)
fld
pop
mov
pop
inc
movsx
cmp
pop
stos
stos
dec
out
pusha
push
(bad)
cwde
add
or
or
inc
or
arpl
(bad)
out
dec
mov
pop
or
not
arpl
imul
or
xchg
lods
xor
enter
out
mov
inc
imul
clc
mov
lock
cmc
pop
pop
add
(bad)
cmc
(bad)
xchg
push
rol
sub
retf
mov
rol
jge
sub
iret
sub
movs
pop
xchg
cdq
xor
fwait
ja
push
movs
push
mov
push
sub
cld
adc
add
inc
push
push
cmp
lahf
mov
adc
and
adc
xchg
and
and
xor
mov
out
dec
leave
push
iret
arpl
or
sub
faddp
add
pop
or
push
imul
scas
popa
mov
in
and
jle
mov
adc
cmp
jne
repnz
or
xlat
xchg
push
mov
loop
and
call
dec
lods
adc
out
mov
mov
pop
jl
call
adc
sbb
movs
add
rol
inc
pop
fistp
loop
arpl
jmp
retf
mov
jle
add
rol
xchg
jg
repz
xor
std
push
gs
jecxz
dec
js
mov
out
pop
dec
cmp
inc
xchg
pusha
mov
repnz
mov
je
mov
xchg
jge
and
add
shr
jae
sbb
mov
shl
retf
and
adc
cmp
dec
adc
ror
add
adc
popa
mov
xor
sbb
dec
push
pop
icebp
xor
loop
cli
push
repz
push
pop
movs
pusha
rcl
aam
retf
mov
push
pop
call
push
xor
xchg
movs
aad
xchg
and
ds
mov
ret
jnp
dec
add
ret
fdiv
add
loop
inc
pop
and
adc
mov
outs
inc
out
pop
iret
loope
mov
ins
or
push
xchg
cmp
mov
jp
adc
jae
inc
shl
mov
mov
pusha
outs
and
mov
jne
jbe
test
and
fild
xor
lea
out
adc
xchg
repz
aaa
shl
adc
sbb
shl
push
iret
arpl
push
out
dec
inc
icebp
add
(bad)
adc
add
xor
sbb
aaa
push
lods
xchg
jae
pop
pop
inc
xchg
xor
mov
adc
add
(bad)
pop
gs
cmp
in
mov
lea
rol
mov
(bad)
dec
mov
in
add
dec
sbb
xchg
je
repnz
xchg
test
(bad)
mov
xor
mov
add
bound
jle
pusha
mov
push
mov
call
popa
bnd
stc
je
cmp
jg
data16
hlt
xor
int
xchg
out
mov
pop
rep
stc
lods
push
or
mov
sub
rol
test
mov
push
jae
push
clc
stc
call
lods
add
mov
iret
lfs
out
jmp
mov
adc
jo
ds
add
fs
(bad)
std
mov
mov
imul
shr
fadd
jl
mov
mov
fwait
mov
jle
jle
rol
sbb
push
mov
sbb
sub
test
jg
pusha
xor
mov
jb
in
push
neg
inc
mov
mov
outs
mov
fwait
xchg
jmp
cmps
push
push
and
pop
hlt
push
adc
addr16
adc
push
push
inc
pop
ret
(bad)
repnz
add
out
add
pop
fdiv
jecxz
adc
mov
push
fsub
push
call
push
data16
and
and
stos
mov
cli
aaa
push
enter
sbb
add
arpl
sbb
stos
or
in
mov
cli
jnp
xor
mov
mov
cdq
sub
es
(bad)
repnz
push
jo
and
jge
aad
mov
addr16
and
inc
adc
mov
and
pop
pop
jp
cmp
mov
retf
enter
retf
cmp
mov
jnp
jl
xor
mov
mov
(bad)
out
sub
mov
or
pop
bound
xchg
xor
pop
rol
mov
out
xchg
iret
sub
sub
fisttp
rcl
pushf
add
outs
ss
add
adc
or
mov
clc
mov
adc
inc
enter
std
pop
out
dec
and
xlat
and
or
repnz
movs
jmp
(bad)
dec
or
repnz
(bad)
addr16
and
adc
push
cs
int3
mov
mov
sbb
out
nop
(bad)
hlt
cmp
cmps
rcr
sti
stos
add
push
and
cmp
movs
push
shl
jo
sub
mov
mov
add
out
jnp
dec
sbb
shl
fwait
sbb
cs
jb
jbe
push
fbld
xchg
sti
addr16
aad
das
ret
int3
dec
sbb
pop
hlt
inc
movs
js
ret
aam
enter
call
or
icebp
pop
or
adc
and
stc
fiadd
fcmovbe
stos
lods
test
push
adc
mov
ret
es
repz
mov
adc
push
and
lock
mov
inc
jmp
jbe
mov
cmp
push
or
jecxz
xchg
sub
(bad)
adc
pop
xchg
push
data16
js
(bad)
mov
xchg
inc
arpl
out
mov
pop
jo
ret
pop
pop
daa
and
pop
pop
sub
outs
ss
shr
pop
xor
je
ss
inc
call
(bad)
xchg
cdq
hlt
mov
inc
push
push
rol
add
adc
arpl
add
mov
shl
ret
ss
mov
cmps
arpl
mul
mov
inc
call
xchg
xchg
daa
ja
cld
cmc
push
iret
data16
or
aas
mov
xchg
inc
lods
stos
out
xchg
xor
adc
rcl
adc
push
jae
data16
sub
pop
mov
inc
inc
xchg
gs
cmps
inc
(bad)
lods
jle
std
(bad)
lahf
adc
or
repnz
(bad)
adc
test
shl
mov
or
sbb
ret
adc
daa
xchg
mov
push
(bad)
sti
stc
xchg
inc
(bad)
adc
sub
std
inc
mov
adc
in
bnd
mov
push
xchg
push
outs
mov
push
cwde
ror
adc
push
mov
xchg
jp
shr
sbb
and
xor
xor
jne
fcomp
lock
shl
cmps
(bad)
call
sub
jne
mov
hlt
cmp
ja
inc
add
in
push
repnz
cwde
adc
inc
ror
dec
inc
xchg
add
fwait
cs
jg
icebp
repnz
shl
ret
in
mov
mov
sbb
add
je
adc
xchg
daa
mov
adc
outs
mov
cmp
xor
add
sbb
das
pop
add
jae
inc
arpl
add
sub
fcomp
pop
ret
mov
idiv
(bad)
dec
scas
push
cmps
push
jmp
fwait
dec
mov
jb
out
inc
push
or
sti
jecxz
adc
jno
xchg
push
pop
cmps
xchg
mov
sbb
mov
xchg
xchg
push
mov
ret
pop
out
mov
jae
adc
xor
jge
fsubp
add
pop
jbe
pop
push
adc
jle
pop
std
mov
xchg
or
xchg
adc
dec
and
jae
push
cmp
cmp
push
add
jg
mov
aaa
mov
es
sub
rcl
or
fpatan
push
and
dec
add
std
cdq
stos
mov
push
dec
aaa
sbb
jbe
clc
pop
mov
test
retf
std
outs
push
xchg
sub
fwait
arpl
push
inc
and
shl
or
addr16
es
std
pop
jbe
sbb
xchg
mov
jbe
fsubr
scas
sub
jge
div
xchg
inc
mov
xchg
test
and
in
and
arpl
rol
xor
pop
cmovae
lods
fs
sbb
test
inc
or
in
ja
push
and
adc
test
push
jo
cmp
ds
mov
add
and
loop
ss
ret
leave
shr
loope
mov
jmp
(bad)
pop
add
jl
repz
xchg
xchg
jo
or
iret
out
mov
or
sub
cmps
inc
mov
(bad)
in
mov
fisub
sbb
popa
cs
jmp
scas
mov
(bad)
pop
outs
xchg
or
shl
mov
xchg
cwde
stc
jle
in
iret
je
idiv
movs
into
and
and
inc
xchg
rol
jae
xchg
xor
shl
repnz
hlt
add
aas
lock
mul
enter
mov
mov
call
sub
jg
push
ret
mov
adc
dec
xchg
notrack
shl
xor
mov
ds
adc
imul
lahf
sub
pop
adc
xor
repnz
aam
cli
mov
rcl
or
add
into
adc
and
xchg
into
ficom
ja
mov
dec
push
dec
xchg
mov
in
out
mul
xor
fdivr
popf
push
jb
xor
pop
push
pop
in
jp
rol
ficom
mov
adc
or
test
test
addr16
(bad)
and
out
add
xchg
xchg
jbe
gs
loop
xor
out
rol
xchg
add
adc
pop
jnp
sbb
inc
push
xor
call
loope
leave
stos
push
es
xor
ins
pop
pop
xchg
clc
jbe
inc
add
cmc
(bad)
call
push
sub
ret
nop
xor
push
xchg
add
adc
dec
pushf
(bad)
mov
in
idiv
popa
arpl
mov
and
scas
mov
sub
and
retf
push
xchg
ret
xchg
pusha
leave
push
mov
push
(bad)
fidivr
mov
fistp
inc
jae
inc
fldenv
mov
sub
pop
xchg
add
test
inc
bound
cwde
push
enter
xor
or
scas
adc
arpl
mov
xchg
call
out
mov
mov
xchg
and
sbb
sub
stos
jae
outs
mov
fs
sub
xor
pop
and
jae
add
cwde
cmps
into
arpl
test
popf
cli
xchg
cmp
xor
sub
outs
pusha
in
lahf
out
push
(bad)
jo
scas
loop
mov
addr16
adc
ret
push
les
xchg
sub
jae
jno
out
or
mov
arpl
push
ret
push
xchg
cmps
pop
clc
cmp
or
mov
and
cmp
lea
xchg
imul
xchg
add
push
push
push
cmps
addr16
mov
xchg
push
cmp
jbe
es
and
in
and
jl
push
sub
xor
inc
mov
push
shr
add
rcr
add
arpl
push
push
jbe
xchg
adc
fldenv
daa
xor
sti
sbb
adc
push
mov
jecxz
cmp
xchg
popa
and
mov
mov
cli
out
fsub
add
adc
inc
(bad)
push
sbb
(bad)
xchg
out
sub
push
or
call
add
adc
inc
mov
xchg
xchg
repnz
jo
aas
fwait
cvtps2pd
xlat
rcr
stos
jb
seta
mov
div
repz
ret
mov
shr
cmps
and
addr16
sbb
jbe
mov
pop
sti
arpl
mov
push
dec
inc
imul
not
or
mov
xchg
std
std
and
sub
stc
in
fdiv
cmp
lds
retf
cmp
push
mov
rcl
out
sbb
out
cmp
or
fisub
jnp
cmps
mov
mov
in
mov
(bad)
cmp
mov
pmaxsw
movs
daa
jg
call
adc
push
(bad)
in
inc
add
daa
push
test
div
dec
pusha
or
mov
ds
js
sub
push
scas
xchg
mov
hlt
sbb
sbb
scas
hlt
pop
out
int3
sub
inc
(bad)
pop
sbb
sub
jo
cmps
in
push
popa
xchg
ds
(bad)
adc
xchg
jno
push
mov
pop
scas
scas
lds
fwait
mov
outs
mov
jle
repnz
or
cmp
xlat
mov
sbb
test
adc
sub
push
xchg
sar
nop
and
push
pusha
push
cmp
xchg
sbb
adc
in
int3
xor
adc
adc
add
xchg
mov
inc
nop
adc
adc
in
xchg
ret
maxps
cld
mov
jb
arpl
mov
mov
sbb
jbe
(bad)
pop
adc
arpl
xor
xchg
mov
jbe
mov
mov
dec
jp
imul
add
jbe
sbb
mov
push
lea
inc
ret
and
in
ret
nop
test
hlt
push
daa
xor
add
xor
push
pusha
cmc
pop
rcl
jle
xor
mov
aam
cmp
cmp
and
xchg
(bad)
arpl
(bad)
mov
inc
xchg
mov
adc
mov
sbb
push
sbb
mov
mov
imul
in
mov
popf
inc
popa
cmp
psrad
shl
add
jno
fwait
dec
and
test
imul
adc
push
call
out
xor
mov
outs
or
movs
rcl
jmp
jns
in
(bad)
cmp
cmp
xchg
inc
pop
xchg
jge
dec
mov
mov
cld
ds
ss
shl
repz
xor
(bad)
enter
dec
cs
outs
xchg
jg
mov
ja
inc
xchg
stos
jp
push
push
sub
pushf
idiv
into
aaa
test
std
mov
jo
dec
(bad)
mov
rol
dec
sub
shr
in
adc
cdq
mov
sub
not
pusha
icebp
sbb
adc
sub
shl
aaa
frstor
ret
lea
cmps
jmp
mov
mov
out
ret
pop
mov
pop
mov
pop
loop
and
xchg
xchg
fwait
ret
arpl
cmp
mov
ret
mov
jmp
xchg
mov
scas
push
xchg
pop
repnz
jo
or
sbb
nop
push
(bad)
out
sub
ds
sar
mov
fisttp
sub
push
sbb
dec
(bad)
push
cmp
or
mov
pop
push
mov
call
scas
jbe
out
xor
bound
sbb
test
sbb
push
inc
xchg
addr16
movs
sbb
and
shl
cmp
pop
fiadd
loopne
cmc
or
aad
push
loop
adc
aaa
adc
mov
jne
cmps
lahf
sub
dec
and
ret
pop
iret
cli
out
ss
add
jb
mov
push
xor
loope
aaa
scas
test
rol
sub
push
and
test
pop
das
fwait
inc
xor
xchg
and
das
cmp
ds
in
pop
enter
xor
mov
cs
mov
adc
xchg
mov
pop
xlat
dec
or
add
xor
cmp
loop
add
pusha
inc
xlat
icebp
js
(bad)
(bad)
cmps
inc
xchg
es
sub
cli
jne
outs
movs
adc
mov
jecxz
(bad)
stos
add
or
push
mov
push
inc
cwde
fldcw
icebp
push
test
fldenv
das
cmp
cmps
xor
repz
dec
push
mov
push
pop
cs
pusha
adc
int
addr16
leave
(bad)
xchg
xchg
xchg
imul
es
fidiv
or
and
ss
(bad)
and
xchg
push
gs
and
mov
retf
rol
cmp
rol
outs
sti
aaa
cli
lds
lea
test
add
mov
add
cmps
adc
repz
cmp
jae
cmps
arpl
loopne
inc
ret
inc
shl
cmp
gs
es
aad
not
shl
push
aaa
cmps
addr16
ja
inc
mov
test
mov
xor
mov
movs
(bad)
repnz
mov
lea
jns
adc
inc
xchg
pop
test
inc
push
mov
adc
aad
shl
scas
mov
mov
icebp
pop
xchg
push
mov
xchg
push
dec
or
je
xchg
inc
mov
jge
addr16
dec
icebp
aam
retf
add
or
mov
adc
xchg
push
mov
ins
ret
and
clc
sar
ja
dec
xchg
push
xchg
cmps
sar
sbb
shl
mov
ja
mov
in
mov
retf
push
mov
jno
push
jmp
inc
xchg
(bad)
sub
ja
jns
dec
icebp
das
jp
jns
lods
jle
cmps
and
push
adc
bound
fwait
fwait
jae
mov
pusha
in
lods
or
outs
fcomip
rcl
push
dec
je
out
scas
into
xor
scas
cmp
mov
aas
push
enter
pop
jle
movs
mov
je
mov
ret
xor
stos
sbb
loopne
pushf
add
into
imul
(bad)
out
push
or
int3
out
cmp
aaa
mov
xor
xor
lock
call
xor
aam
(bad)
cmp
loopne
inc
dec
popf
and
(bad)
sbb
test
cmc
inc
dec
inc
cdq
int
out
jp
jmp
push
sti
cmps
push
mov
je
xchg
jmp
ins
dec
ret
pop
and
fdiv
int
addr16
inc
mov
adc
inc
mov
or
inc
bnd
ror
jo
xchg
mov
cmp
loopne
shl
mov
lock
adc
aam
mov
imul
(bad)
push
ret
std
lock
and
bnd
ret
add
mov
into
mov
dec
ins
lock
jns
mov
cmp
repz
dec
ss
xchg
pop
lea
pop
jg
adc
dec
dec
cmp
data16
(bad)
retf
data16
movnti
lahf
push
mov
scas
stos
jge
pop
xor
mov
mov
jae
retf
mov
test
xchg
add
retf
ds
ins
cmp
xchg
in
dec
(bad)
jp
(bad)
mov
sbb
sti
imul
dec
push
push
or
dec
push
(bad)
mov
push
pop
pop
std
mov
xchg
shl
mov
imul
repz
jg
ret
jns
cmp
pop
push
push
inc
ret
inc
imul
stos
outs
push
aad
ret
cmp
shr
popf
mov
pop
sar
mov
xchg
nop
push
dec
mov
sbb
(bad)
mov
das
movs
jg
fistp
mov
or
jbe
xchg
repz
push
push
(bad)
test
out
outs
fisubr
stos
jae
inc
pop
pop
gs
pusha
cmp
xchg
adc
jecxz
or
adc
(bad)
inc
xor
or
ja
mov
push
(bad)
mov
repz
sub
inc
fisttp
stos
mov
mov
clc
inc
mov
(bad)
ret
das
mov
call
into
dec
ret
xchg
fdivr
ins
scas
push
mov
xchg
add
(bad)
jnp
out
xor
idiv
mov
add
ret
es
adc
outs
repnz
dec
xchg
adc
sbb
pop
mov
pop
rcl
fadd
push
push
dec
mov
bound
sub
rcl
inc
leave
les
add
pop
cmp
imul
cwde
xchg
mov
dec
(bad)
mul
cdq
rcr
pmulhuw
pop
repz
inc
mov
and
ss
xchg
pop
pop
or
aaa
das
cmp
call
cmps
outs
jne
inc
dec
push
xlat
idiv
dec
mov
ins
(bad)
cs
inc
ret
loope
xor
xchg
dec
mov
inc
sti
xor
jae
fbstp
call
fucomip
arpl
outs
push
(bad)
stc
gs
jnp
add
inc
mov
outs
pop
into
fild
xor
int3
(bad)
mov
lea
jbe
inc
jp
ret
or
pop
push
es
xor
popa
sbb
push
outs
fdivr
(bad)
or
adc
inc
mov
aas
push
inc
call
add
push
jae
in
mov
jo
mov
inc
std
xchg
outs
mov
out
mov
shr
dec
sub
jns
retf
rep
jmp
es
mov
push
dec
call
imul
(bad)
and
fsubrp
cmps
add
inc
mov
lahf
data16
xchg
xchg
cmps
xchg
jecxz
ret
xchg
(bad)
and
add
pop
imul
push
xchg
cld
daa
push
mov
(bad)
push
mov
push
sub
jecxz
sar
arpl
adc
ss
sub
(bad)
push
push
xchg
mov
jecxz
or
cld
xor
inc
idiv
in
rol
std
mov
dec
mov
js
sub
inc
push
inc
push
hlt
xor
ret
xlat
sar
rcr
push
cli
rcr
adc
mov
inc
sub
addr16
repnz
dec
dec
mov
cld
pop
xchg
pop
xor
in
xor
ret
sbb
jg
mov
add
mov
inc
scas
cmp
inc
add
mov
mov
jne
das
push
arpl
dec
or
and
sbb
add
cli
xor
xlat
inc
sbb
xor
or
and
call
xchg
mov
jmp
push
adc
push
aam
adc
(bad)
mov
adc
loop
push
mov
out
mov
inc
lods
adc
sbb
cs
sub
rol
dec
cmp
mov
jnp
push
out
add
and
inc
mov
or
cmps
ret
sar
mov
lds
outs
xchg
mov
(bad)
aaa
adc
rol
out
and
jecxz
adc
mov
gs
mov
mov
ds
jmp
mov
fnstenv
sbb
shl
movs
mov
or
int
mov
dec
push
adc
retf
xor
repz
pop
das
stos
adc
outs
mov
mov
or
inc
data16
les
stos
and
sbb
xor
mov
xchg
test
ficom
jecxz
jmp
mov
mov
mov
in
jmp
pop
mov
add
mov
pop
xchg
(bad)
mov
outs
add
jbe
(bad)
push
xchg
rcl
mov
mov
dec
cdq
pushw
scas
enter
pop
aas
sbb
imul
pop
mov
mov
stos
add
and
out
imul
cli
ja
xchg
jmp
lds
out
mov
dec
adc
mov
sysret
xlat
(bad)
aas
cmp
pop
lds
scas
sbb
sahf
mov
sbb
xor
sar
and
sbb
and
xor
cmp
test
xchg
(bad)
mov
nop
dec
xchg
cmp
frstor
cmp
xchg
pop
es
jbe
jae
repnz
std
out
repz
sbb
out
inc
repnz
(bad)
cmc
(bad)
jbe
ins
popa
xchg
ja
js
daa
std
loop
mov
(bad)
add
and
inc
pop
iret
jmp
cdq
ret
lods
aaa
xlat
add
jmp
jbe
sub
(bad)
cmp
mul
pop
or
hlt
in
jo
mov
adc
mov
stos
cld
adc
rcl
in
bound
mov
xor
jle
dec
(bad)
clc
movs
sub
call
mov
jl
xchg
dec
(bad)
cmc
repz
and
(bad)
fstp
and
xor
call
scas
pop
xchg
test
cmp
arpl
xor
ret
jmp
jg
adc
push
test
repz
iret
mov
lahf
arpl
loop
cmp
rcl
rcl
xchg
arpl
pop
xchg
pop
dec
push
(bad)
cmp
xchg
dec
call
sbb
add
stos
pusha
xchg
dec
movs
and
ja
test
ds
jmp
cs
pop
add
mov
push
retf
cs
inc
inc
xchg
cmps
adc
out
rol
pop
and
mov
dec
stos
out
mov
dec
push
imul
xchg
cli
fisttp
xchg
fidivr
fsub
(bad)
mov
xchg
idiv
aaa
push
cmp
xlat
(bad)
xor
push
pop
pop
repz
jg
xor
push
jae
rcr
push
(bad)
shl
movs
rcr
int3
add
repz
icebp
fcmovb
dec
fist
test
mov
add
or
imul
dec
getsec
ret
in
iret
xchg
shl
cli
jo
dec
xchg
sahf
scas
rcl
mov
mov
or
push
ret
adc
xchg
adc
out
mov
inc
movs
pop
pushf
push
inc
neg
daa
jecxz
fisttp
cs
ror
xor
mov
xchg
nop
(bad)
retf
aaa
and
xor
mov
(bad)
out
mov
repz
mov
push
dec
(bad)
test
pop
loope
pop
mov
in
out
ret
int
inc
add
xor
jle
lods
mov
xchg
jg
push
jmp
xchg
push
jp
cmp
xor
push
(bad)
fidivr
mov
xor
and
mov
pop
lea
mov
(bad)
pop
sub
adc
and
and
mov
mov
mov
dec
cmp
(bad)
int3
or
and
and
call
sbb
jp
cmp
dec
in
mov
mov
rcr
or
push
dec
call
xchg
cmp
sub
pop
pop
dec
mov
sbb
ja
mov
loop
sbb
cs
mov
or
test
rcr
dec
mov
mov
mov
arpl
push
out
das
(bad)
ret
push
aas
aas
cmp
(bad)
out
outs
cmp
mov
jp
xchg
jp
scas
jg
std
(bad)
stc
cs
or
inc
and
fcmovne
retf
and
sub
push
mov
xor
cmp
cmp
add
out
es
daa
xlat
jmp
fs
mov
inc
xchg
rol
mov
xchg
psubusb
ret
out
and
outs
ss
enter
mov
nop
adc
cmp
xor
inc
or
(bad)
push
and
pusha
adc
inc
inc
jno
xchg
es
repnz
and
ds
fcmovu
sbb
call
imul
bound
retf
mov
shl
add
aam
jae
add
xor
pop
cmp
arpl
dec
mov
shl
push
jmp
or
call
mov
and
call
mov
sahf
mov
call
adc
jbe
repnz
inc
adc
mov
(bad)
mov
call
loope
popa
inc
ret
inc
push
sar
inc
out
or
ss
sbb
sbb
inc
xlat
mov
movs
fistp
neg
fs
outs
dec
popf
xchg
adc
daa
in
fwait
adc
mov
pandn
push
btr
pop
jno
cmps
(bad)
cli
and
dec
cmp
(bad)
add
mov
idiv
sbb
shr
fs
xchg
mov
dec
mov
cmp
mov
sub
jae
popa
ret
into
popf
or
inc
jb
cmp
sub
es
mov
adc
sbb
retf
mov
pop
les
mov
les
mov
fmul
les
addr16
sti
mov
icebp
movs
ficom
outs
pop
add
xchg
jecxz
or
mov
retf
outs
movs
mov
push
mov
jmp
ret
ss
push
mov
mov
out
jnp
mov
fidivr
xor
data16
add
sbb
push
push
sub
inc
mov
jmp
or
js
shl
xchg
push
dec
stc
shl
dec
mov
and
shl
or
loopne
xor
add
jp
pop
push
sub
xor
iret
iret
adc
out
ror
retf
add
pop
outs
cmps
cli
mov
add
mov
es
push
and
div
aad
test
xchg
rcr
xchg
add
xor
and
or
(bad)
dec
ss
repnz
mov
inc
bound
mov
push
sub
and
mov
push
push
cwde
jecxz
ret
xchg
adc
sar
inc
jecxz
xor
and
in
xlat
bound
bound
jo
(bad)
push
inc
jnp
add
jecxz
sahf
sbb
mov
add
bound
xchg
pop
push
repnz
popf
mov
mov
mov
jmp
xchg
push
adc
xchg
xchg
inc
jbe
mov
ret
mov
xor
adc
not
pop
push
xchg
jle
out
retf
push
dec
(bad)
pop
or
xchg
and
repz
push
push
out
inc
(bad)
mov
ror
xor
push
fadd
daa
fnstenv
dec
add
int3
iret
pop
add
aad
xchg
ret
inc
ret
mov
sub
mov
jge
sti
xchg
add
arpl
lds
fisub
mov
add
add
loope
and
(bad)
loopne
repnz
pushf
stos
cmps
push
fwait
push
scas
add
test
xor
mov
push
hlt
and
icebp
jne
outs
ins
xchg
dec
mov
data16
ss
push
js
jae
or
test
adc
faddp
fs
out
in
sub
je
add
mov
shl
scas
push
fist
ret
add
adc
mov
mov
scas
inc
add
and
call
(bad)
jbe
test
mov
mov
xchg
adc
mov
ret
stc
rcr
push
daa
jbe
sbb
push
ss
call
xchg
push
inc
cmps
test
push
cmps
inc
xchg
jge
gs
jg
pop
mov
and
xor
or
cmps
push
adc
jbe
in
jl
adc
addr16
pop
out
(bad)
das
and
lfs
and
loop
push
stos
addr16
hlt
and
adc
shr
jmp
cmps
xor
xchg
jp
xor
adc
and
fucomi
shl
xchg
js
mov
inc
mov
add
test
or
outs
out
scas
xor
cs
dec
jns
cmps
push
retf
pop
(bad)
xor
push
cmp
aad
cwde
ret
xchg
xor
sbb
push
out
out
push
jecxz
ins
pop
ret
out
cmps
xor
leave
fcmovu
dec
loopne
jg
dec
pop
jecxz
and
dec
inc
into
aas
fisub
mov
daa
mul
mov
mov
push
dec
test
in
inc
adc
and
adc
into
inc
push
jbe
out
sbb
or
mov
adc
addr16
or
(bad)
aaa
inc
pusha
clc
jae
push
int
in
cmp
popa
and
in
dec
mov
mov
out
ret
jbe
stos
dec
jae
and
addr16
rol
xchg
xor
add
ficomp
sbb
jns
mov
add
push
sub
jb
(bad)
xor
pop
sub
xor
mov
in
sub
neg
sub
pop
mov
cmp
cmp
mov
mov
add
imul
pop
adc
mov
add
add
int3
or
adc
or
cmps
popa
mov
or
lods
cmp
out
pushf
mov
sub
(bad)
and
xor
sub
pop
mov
jle
mov
dec
cs
xchg
cmp
ret
and
inc
dec
inc
stc
ins
jmp
ret
aad
(bad)
cmps
(bad)
cmc
div
je
scas
and
xor
adc
cmp
xchg
(bad)
imul
loop
movs
mov
movs
jg
and
shl
mov
test
in
jb
jle
icebp
push
push
push
and
and
mov
push
add
inc
fisub
rol
cmps
add
sar
mov
xor
mov
out
in
in
push
in
and
cdq
es
aam
add
jecxz
pop
dec
push
jp
push
in
adc
sbb
add
in
cmp
test
stos
fs
dec
dec
rcl
mov
mov
repz
ins
jmp
add
add
adc
pop
fst
test
jp
imul
xchg
jae
xor
sbb
sub
push
push
xchg
push
xor
add
and
ficomp
push
(bad)
jno
dec
adc
adc
arpl
xchg
js
push
lahf
inc
lahf
xor
lods
push
sub
sub
xchg
xchg
retf
pop
retf
xchg
jno
mov
adc
adc
xchg
cmps
cli
inc
xor
jg
adc
inc
dec
jmp
mov
push
into
loope
pop
iret
vunpcklpd
jbe
dec
mov
inc
xchg
jecxz
add
fldl2e
enter
ds
out
cmc
stc
pop
ret
mov
cmps
add
xchg
fsub
data16
inc
fwait
aad
pop
push
and
stc
ret
adc
into
xor
(bad)
aas
addr16
(bad)
dec
popa
cmp
cmp
out
push
cld
cmc
fistp
rcl
cmp
pop
movs
jmp
mov
daa
js
adc
mov
jmp
int3
int3
and
dec
scas
xchg
mov
leave
repnz
shr
aam
sar
cmp
push
daa
add
fisub
rol
(bad)
push
jg
out
loope
jl
sbb
int3
xor
in
xor
mov
fld
ror
mov
push
xchg
das
jmp
add
(bad)
cmp
imul
mov
aam
loopne
mov
in
push
repz
jne
fmul
scas
retf
mov
mov
mov
popf
mov
or
sub
loope
mov
jae
shr
cmc
sub
daa
sub
inc
leave
sub
mov
cmp
(bad)
jo
outs
xor
xchg
mov
(bad)
pop
mov
jae
rdmsr
ins
pop
add
rcl
or
mov
sbb
js
jmp
loop
and
(bad)
cld
sub
add
or
mov
push
xchg
loope
fsub
mov
pop
data16
lods
pop
imul
jle
lds
adc
add
ret
mov
into
dec
int
ss
cmp
in
adc
xor
or
out
xchg
push
add
xchg
xor
stc
mov
loop
xchg
xor
(bad)
jne
mov
xchg
dec
cdq
mov
mov
repz
in
fcmovne
mov
not
dec
mov
dec
inc
pop
push
stos
cmps
mov
mov
lods
pop
or
inc
repnz
leave
and
stos
fbld
mov
pop
lods
inc
jb
cmps
mov
shl
push
jne
xor
shr
xchg
cmp
adc
ja
xlat
mov
or
dec
mov
rcl
push
push
xor
jne
jns
(bad)
out
jmp
in
bnd
pusha
mul
add
dec
(bad)
(bad)
aam
cmc
cmp
out
sbb
add
mov
xchg
je
xchg
pusha
in
outs
add
jl
lock
cmps
fcom
ins
mov
out
pusha
mov
mov
aaa
jecxz
inc
and
dec
ficom
(bad)
cmps
and
movs
aas
inc
mov
fist
cmp
sub
or
nop
(bad)
bound
mov
hlt
mov
outs
add
repz
daa
clc
ret
lods
je
xchg
ret
pop
sahf
pop
inc
dec
cmp
not
and
cwde
and
xor
mov
sub
in
push
xchg
push
rcl
cmp
mov
cmp
ja
outs
ss
xchg
jb
pop
mov
addr16
stos
dec
and
loope
sbb
pop
xor
push
jmp
pusha
fcomp
jmp
pusha
push
cmp
and
mov
push
push
out
mov
or
mov
push
jb
aad
loop
mov
cmp
adc
add
mov
dec
lods
or
inc
push
adc
push
mov
and
ret
dec
stos
jns
inc
pop
retf
push
push
mov
pop
xchg
arpl
cli
xlat
push
scas
push
rcl
cdq
xor
xlat
pusha
adc
push
push
in
shr
add
sbb
pop
add
retf
and
mov
sahf
jecxz
jecxz
pushf
xchg
jmp
mov
jmp
ror
aaa
not
pop
dec
lock
fistp
inc
and
(bad)
pushf
jae
das
dec
cmp
out
inc
xchg
stc
pop
in
test
loope
inc
inc
dec
cmp
xchg
mov
xchg
sti
iret
mov
cli
ins
out
int
loopne
and
mov
cmp
fs
pusha
and
std
mov
es
sub
xor
xchg
cmps
out
add
aas
inc
inc
cmps
test
fimul
adc
mov
cmps
sbb
add
in
call
adc
mov
data16
outs
ret
jle
leave
or
std
add
sbb
mov
clc
out
out
mov
in
lods
(bad)
sbb
mov
push
mov
push
pop
in
inc
inc
mov
fcomp
dec
dec
aad
cmc
sti
ror
xchg
add
adc
lahf
in
(bad)
aad
cmps
shl
fwait
idiv
stos
sub
das
icebp
mov
pop
ss
sti
mov
aad
push
cmp
dec
jmp
sbb
arpl
movs
dec
jle
je
mov
sti
adc
dec
call
mov
and
pop
adc
ins
xor
cmp
movs
pop
or
jne
lds
cdq
adc
xor
fimul
shl
mov
mov
add
gs
add
mov
mov
cs
adc
movs
loope
xchg
jo
adc
mov
cmp
lahf
mov
cmp
push
mov
das
xchg
sti
lds
jbe
xor
ss
pop
xchg
inc
fwait
cmc
cmp
adc
idiv
(bad)
ds
jo
push
cs
(bad)
lods
jne
xchg
pop
ja
shl
push
sbb
popf
mov
(bad)
fimul
mov
imul
ret
fdivp
xchg
add
arpl
mov
mov
(bad)
fsub
daa
pop
sbb
ret
outs
jmp
mov
jmp
(bad)
push
xchg
rcl
pop
fadd
inc
add
and
push
cmc
inc
inc
scas
adc
cld
leave
lods
sub
ja
inc
fisub
inc
and
daa
sub
gs
(bad)
pop
adc
push
xor
inc
mov
pop
ret
popf
mov
daa
add
arpl
push
add
inc
push
push
and
xor
or
mov
ret
adc
inc
mov
push
inc
packuswb
rcr
addr16
jae
push
mov
lock
push
add
jne
push
mov
xchg
inc
sar
pop
push
push
sbb
push
inc
mov
push
inc
gs
fld
popf
mov
mov
shl
push
dec
rcl
cmc
jae
sbb
push
fmul
in
shr
cld
push
cli
fadd
out
add
cmc
push
pop
mov
jg
daa
pop
jecxz
cmp
mov
add
pop
add
int
cmc
ret
mov
cmp
cmps
sbb
out
inc
les
and
xchg
fcom
sbb
inc
push
jecxz
jae
repz
mov
sub
xchg
aaa
cmp
movs
xor
and
mul
xor
pop
mov
xchg
pop
mov
jl
iret
idiv
ret
mov
cmp
fwait
test
inc
mov
mov
mov
nop
jae
lock
mov
repz
lock
xor
sbb
cmp
mov
sub
jl
add
sbb
jg
(bad)
cld
adc
addr16
iret
cld
mov
mov
jg
push
mov
xor
inc
repz
aam
les
adc
push
in
adc
mov
inc
push
jae
lds
xlat
jo
and
mov
(bad)
mov
cmp
mov
je
je
sub
je
jae
mov
cld
fwait
jo
arpl
cmp
(bad)
mov
xor
jno
mov
movs
not
mov
mov
sub
les
cli
hlt
mov
js
div
ret
and
cmp
fwait
aad
iret
lods
lock
aaa
and
pop
sub
or
jecxz
mov
jecxz
clc
pop
jo
repz
or
(bad)
fdiv
hlt
sub
push
pop
sub
test
sti
mov
mov
jecxz
and
(bad)
xor
outs
stos
xor
fwait
je
repnz
sub
mov
lods
ja
repz
or
jo
lds
jns
adc
lock
jb
scas
out
imul
jbe
mov
xor
mov
retf
repz
mov
sub
fwait
cs
cmps
nop
test
jo
test
sub
xchg
inc
add
or
dec
mov
std
sbb
scas
dec
fwait
jl
inc
sub
inc
cmps
dec
sub
fs
iret
xlat
out
inc
mov
mov
call
(bad)
in
test
mov
or
or
iret
and
imul
popf
jp
fbld
aaa
mov
xchg
call
or
xor
dec
hlt
in
ins
jne
xchg
or
comiss
outs
outs
xchg
test
and
ins
fdivr
or
cmp
or
or
mov
fisttp
test
outs
out
mov
or
or
dec
scas
dec
das
enter
enter
adc
imul
xor
fisub
xlat
retf
push
pop
sub
(bad)
ffreep
cld
ins
movaps
retf
test
mov
inc
jmp
sub
movs
les
js
test
or
mov
test
ins
adc
fstp
test
in
aam
test
jae
ins
mov
jmp
inc
fisttp
dec
sub
(bad)
jg
cmp
sub
test
js
fimul
mov
or
jl
dec
test
mov
sub
pop
xlat
jnp
out
adc
sti
mov
cmp
cmp
scas
and
sub
in
xchg
test
gs
stos
loope
xor
dec
dec
mov
out
inc
cli
ins
sbb
loop
mov
sbb
scas
mov
inc
cmp
daa
sbb
daa
cmp
xor
sub
mov
adc
cs
cmp
test
xor
out
out
movups
in
xor
nop
jbe
sub
mov
jnp
add
out
cmp
jmp
mov
add
in
es
out
out
add
lods
icebp
xor
mov
mov
and
(bad)
and
sub
scas
push
push
pusha
cs
cs
lods
add
mov
sub
test
add
push
xor
out
call
sar
lock
jns
test
outs
cmp
scas
lock
mov
add
cmp
xor
sub
std
movs
nop
out
xor
scas
aam
popa
out
inc
retf
nop
es
mov
dec
out
pusha
dec
nop
outs
out
sbb
mov
adc
pop
outs
nop
jnp
and
mov
push
test
jnp
inc
adc
mov
les
dec
push
mov
lock
fadd
pmaxsw
push
inc
out
int
nop
jp
xchg
je
clc
dec
jecxz
mov
lock
xchg
xchg
outs
nop
in
push
and
aad
out
or
clc
cli
lock
stos
xor
stos
add
sbb
int3
jmp
call
gs
sub
gs
sbb
jnp
pushf
shl
(bad)
imul
mov
test
mov
push
(bad)
lods
adc
iret
xchg
aaa
dec
xor
jne
cmps
jne
pop
jmp
in
lea
addr16
das
lods
cmps
retf
mov
repz
pop
sub
movs
xchg
neg
(bad)
adc
inc
dec
mov
xchg
in
and
and
inc
stos
das
lods
cmps
(bad)
int
(bad)
mov
and
je
gs
rol
movs
pop
push
mov
in
cwde
(bad)
daa
and
cmp
cmps
sub
stos
cld
mov
xchg
sub
std
in
add
adc
add
push
add
pop
and
lods
(bad)
mov
push
out
xor
inc
test
out
xor
push
sub
jp
push
xor
add
loop
imul
or
dec
push
into
ja
(bad)
shr
das
movs
gs
imul
scas
xor
inc
into
mov
xchg
arpl
mov
push
or
or
and
lods
cs
(bad)
xchg
inc
mov
dec
push
sbb
push
cld
mov
pop
push
xor
ret
mov
and
gs
sbb
sub
push
inc
pop
cmc
inc
push
pop
movs
xor
pop
xor
and
xchg
push
adc
inc
sbb
(bad)
shl
xchg
out
mov
add
movs
or
push
inc
adc
adc
test
aaa
pop
(bad)
scas
mov
xchg
in
xchg
rcl
movs
fwait
rcl
(bad)
xchg
out
adc
mov
aad
push
leave
aad
popa
cmp
in
xchg
adc
add
push
xchg
movups
push
adc
out
cli
pop
inc
sub
xor
inc
popa
pop
jne
sub
rcr
in
add
push
xchg
(bad)
xchg
mov
ins
jbe
xchg
adc
adc
jbe
es
ss
jbe
inc
dec
popf
jmp
cs
movsx
shl
xchg
xchg
jle
xchg
gs
jno
in
lods
xchg
and
add
imul
mov
sub
gs
sub
(bad)
nop
xor
push
sbb
add
adc
movs
hlt
cmp
sbb
gs
adc
sub
add
adc
and
inc
push
fild
sbb
dec
adc
xchg
or
sub
in
or
pop
out
popf
(bad)
mov
(bad)
and
outs
xor
aaa
inc
(bad)
popa
ja
xchg
aaa
rol
rol
push
popa
sub
ja
xchg
neg
push
sbb
mov
daa
call
rcl
mov
xor
(bad)
add
loop
loope
stos
sub
sbb
scas
adc
fldcw
stos
popa
jmp
push
je
cli
fst
pop
popfw
loope
cmp
mov
test
stos
dec
inc
xchg
mov
rol
mov
push
jmp
mov
stos
ror
stos
push
arpl
or
test
push
sub
mov
jl
lahf
cmps
cld
fwait
mov
cmp
scas
cmp
stos
pop
aad
jecxz
jle
pop
fld
and
push
jmp
mov
mov
sar
sub
cmp
push
sub
test
stc
fbstp
inc
sub
pushf
pop
jg
inc
mov
inc
xchg
inc
in
cmps
loope
sub
push
es
aad
xor
jno
mov
cmp
push
outs
cmp
cdq
jg
push
push
stos
xchg
cmp
cmp
enter
jns
xchg
imul
jl
cld
(bad)
push
and
cmc
cli
std
mov
cdq
cli
in
cmp
out
mov
sub
aad
push
xchg
jbe
inc
stos
push
fdivr
std
cmp
jmp
mov
je
imul
loope
jmp
stos
cmp
cmp
popf
push
stos
pop
stos
jbe
aad
sub
push
es
pop
mov
jg
cmp
xchg
jge
int
sub
(bad)
in
frstor
jge
dec
daa
jge
popf
gs
jge
fldenv
cdq
stos
aam
popf
dec
jo
adc
imul
jge
dec
jmp
push
sub
mov
mov
inc
xchg
and
(bad)
cmp
stc
cmp
icebp
fs
es
add
jge
pushf
movs
inc
dec
mov
rcr
jne
cmc
or
dec
mov
rol
pop
push
cdq
and
bnd
push
repnz
mov
or
mov
popa
sbb
dec
or
cli
fcomp
pop
out
cmp
fnstcw
push
movs
adc
push
xchg
jb
jae
repnz
sahf
stc
jb
adc
sbb
nop
sub
cli
sti
adc
mov
loop
(bad)
and
sub
and
push
repnz
stos
les
xor
pop
mov
test
jp
rcl
xchg
dec
mov
pop
cli
adc
aaa
mov
retf
adc
mov
or
adc
xchg
xor
out
sbb
cli
mov
mov
mov
retf
adc
cmp
pop
addr16
rcl
ins
mov
repnz
sahf
push
adc
rcl
cmp
pop
push
sbb
jmp
pushf
call
cmp
cmp
cmps
jno
inc
(bad)
xor
outs
xor
in
sbb
loope
jno
ficom
xor
sbb
adc
push
call
pop
inc
icebp
stos
cmp
inc
jno
xchg
call
mov
cmps
jno
push
mov
loope
push
call
in
cdq
icebp
mov
dec
popa
cld
push
sbb
mov
shl
mov
mov
mov
sbb
ja
shl
fsub
mov
fld
jae
popa
push
in
ds
repnz
arpl
mov
stos
addr16
and
sub
daa
fucomi
mov
jmp
test
or
sbb
cmp
sbb
not
out
std
fs
mov
jg
lahf
or
fsubr
push
mov
ss
shl
mov
(bad)
push
xchg
fiadd
popa
adc
mov
fld
int3
dec
shl
cmp
push
mov
push
icebp
ds
push
mov
mov
push
add
and
in
pop
fiadd
popa
popa
(bad)
(bad)
push
(bad)
popa
sub
or
fiadd
fisub
sahf
loop
std
sub
jbe
xchg
dec
push
popa
imul
xchg
mov
ins
xor
mov
popa
mov
je
leave
cli
mov
fidiv
lods
ds
and
and
jbe
jae
mov
and
xor
mov
loope
ror
push
inc
test
loopne
xchg
enter
xchg
popa
shl
ds
lahf
mov
sbb
loope
jle
cwde
mov
cdq
popa
imul
push
int
lods
(bad)
jmp
cmc
out
inc
mov
push
and
call
fisubr
sbb
sub
adc
jmp
xor
and
(bad)
mov
or
xchg
push
(bad)
dec
and
lods
xchg
(bad)
movs
int
xchg
mov
inc
and
mov
hlt
adc
in
in
les
jne
mov
pop
(bad)
repz
mov
sbb
movs
dec
(bad)
xchg
mov
je
je
sub
dec
test
cmc
aad
mov
push
mov
fs
cld
aad
mov
xchg
and
gs
cmps
jle
cmp
lahf
ds
push
pop
ds
pop
pop
ds
push
pop
ds
ficomp
ds
pop
pop
ds
push
pop
ds
ficomp
ds
pop
pop
ds
push
pop
ds
ficomp
ds
pop
pop
ds
push
pop
ds
ficomp
ds
pop
pop
ds
loop
sbb
shr
push
or
sub
jle
sahf
fistp
sub
ror
bnd
or
cs
mov
mov
or
sar
aaa
ror
sbb
mov
in
dec
mov
shr
jae
mov
in
div
pop
mov
jge
imul
jp
into
push
pop
ds
scas
xor
xchg
adc
fld
jl
pushf
out
retf
(bad)
clc
sub
lock
dec
jne
test
shr
out
mov
push
cwde
xor
push
mov
push
add
push
mov
pop
dec
ret
xor
adc
xor
push
inc
mov
xchg
inc
mov
push
ret
or
arpl
loop
out
and
push
out
jg
jns
imul
stc
je
outs
mov
inc
mov
xchg
inc
mov
push
shl
or
sub
cli
mov
ret
gs
push
and
out
ins
cli
in
sbb
xchg
ins
lds
sub
sbb
push
mov
cli
or
pop
int3
xor
xor
mov
cmp
push
cmp
pop
fldenv
sti
lods
sbb
mov
add
add
sub
or
ins
rcr
call
sbb
in
lahf
ins
cld
or
or
ins
leave
in
sub
pop
popf
jb
stos
ins
call
or
mov
mov
(bad)
pop
fld
ins
mov
xchg
ins
jecxz
cmc
adc
outs
lods
push
or
push
call
mov
fist
movs
jg
pop
push
pop
ret
sub
(bad)
sahf
test
mul
or
stos
dec
ficomp
jmp
popf
sahf
int
mov
rol
xchg
inc
cmps
xor
xchg
jg
ins
in
in
inc
mov
nop
dec
in
xchg
cmp
sub
inc
imul
nop
pop
(bad)
sbb
jle
pop
mov
xchg
and
adc
clc
adc
ins
xchg
pop
xchg
jbe
xchg
inc
jno
push
in
movs
or
mov
mov
aam
movs
jbe
jo
dec
in
push
dec
mov
or
pop
(bad)
pop
(bad)
jle
rol
pushf
dec
xchg
jle
pop
into
jl
dec
lea
and
dec
pop
popf
push
nop
ins
int3
adc
jb
jp
ins
popa
xchg
or
push
mov
or
jb
pop
in
push
nop
and
mov
inc
idiv
pop
(bad)
or
push
sub
inc
dec
adc
clc
mov
sub
push
mov
jne
and
xchg
(bad)
retf
dec
aad
in
mov
in
and
and
in
in
movs
jg
pop
in
(bad)
fwait
aam
xor
aam
rcr
cli
rcr
cli
ret
sti
mov
aam
fist
dec
xor
mov
sti
mov
mov
loope
jle
dec
fwait
aam
pushf
clc
mov
sar
neg
mov
clc
call
mov
push
icebp
cmps
aam
jmp
xchg
mov
in
jnp
xchg
shl
std
or
test
dec
jle
mov
test
mov
rcr
out
xchg
aad
out
mov
(bad)
mov
fwait
aam
sbb
test
cmps
mov
ret
hlt
enter
ret
movs
mov
mov
(bad)
jo
jg
pop
call
jecxz
xor
push
mov
(bad)
inc
jae
sub
gs
add
mov
xchg
cmp
pop
and
imul
sbb
in
enter
and
rcl
mov
sbb
icebp
cld
jae
mov
xor
xchg
inc
xlat
dec
jl
js
in
mov
ins
or
retf
or
pop
std
lea
inc
mov
or
push
dec
cs
fdivr
mov
inc
dec
mov
pushf
jns
jg
sbb
mov
popa
sbb
std
fwait
mov
(bad)
outs
xchg
xor
pop
fstp
in
sub
ja
(bad)
cmp
jnp
or
sbb
sti
dec
clc
ins
cmp
mov
fisubr
fstp
cld
lods
or
out
adc
jge
adc
aas
outs
fisttp
(bad)
ins
mov
cli
cli
jnp
imul
jle
iret
cdq
bswap
dec
sahf
mov
jmp
test
pop
out
lods
push
cs
cmp
clc
ds
cld
fs
int
scas
call
pop
sahf
jg
push
xchg
or
cmp
cld
sub
mov
(bad)
pushf
jae
mov
cdq
imul
dec
cmp
into
test
pop
or
push
or
jle
sti
jmp
sub
cmp
mov
pop
sti
jns
ins
jno
push
int
shl
dec
mov
or
sub
sbb
push
mov
dec
sbb
fsubr
jae
stos
stos
stos
test
jb
call
jg
mov
(bad)
push
sbb
bsr
nop
imul
std
cmp
fisub
mov
pop
stos
xor
rcl
cld
ss
out
or
sbb
jge
outs
mov
mov
iret
fwait
pop
test
mov
mov
and
sub
ins
push
sub
fsubr
mov
fisubr
mov
(bad)
or
inc
(bad)
jecxz
scas
mov
push
into
pusha
inc
in
in
ds
sub
ret
outs
test
jmp
iret
and
mov
outs
and
int
stos
inc
stos
xor
cwde
pop
mov
and
pop
aad
push
jge
stos
add
mov
pop
push
lods
(bad)
pop
adc
push
lods
mov
(bad)
dec
in
(bad)
or
sub
shr
das
mov
popf
adc
mov
popa
ret
aad
ror
mov
out
xchg
cmp
imul
mov
or
inc
fisttp
inc
fst
jge
sub
cmp
enter
mov
cli
inc
pop
jmp
outs
push
scas
aaa
mov
sbb
push
loope
push
pop
ror
stos
xor
sub
and
jno
in
gs
pop
in
shl
jl
push
ja
xchg
inc
rol
xlat
and
xor
add
addr16
inc
add
gs
xchg
and
adc
adc
icebp
and
jge
inc
add
xchg
arpl
aad
adc
xchg
rcl
gs
or
mov
mov
xor
icebp
xchg
aaa
jne
mov
nop
push
mov
xchg
lock
ja
rcl
int3
xchg
mov
xchg
ss
sar
mov
pop
xchg
aaa
aad
movs
mov
(bad)
rep
mov
popa
xor
bound
lds
shl
inc
push
pop
lea
rcl
adc
adc
test
adc
ins
mov
jno
aaa
xchg
mov
xor
arpl
add
cmc
rcr
leave
mov
mov
jne
shl
xor
inc
and
mul
(bad)
jae
movs
and
mov
enter
packssdw
mov
mov
mov
(bad)
push
lds
or
jecxz
popa
mov
adc
movs
stos
pop
int3
shr
inc
rol
repnz
(bad)
shl
cmp
std
add
imul
or
outs
xchg
dec
xor
xchg
push
out
sub
adc
data16
adc
and
jl
lock
add
fidivr
cmc
add
ja
test
loop
and
pusha
shr
and
fld
jae
bound
stos
push
ret
movs
xrelease
mov
rol
(bad)
add
jmp
mov
ret
xor
pop
add
ins
rol
adc
rol
jecxz
or
jns
mul
cld
fiadd
mov
(bad)
ret
add
jge
jae
ror
out
xchg
ret
shl
push
add
arpl
and
in
and
cmp
push
inc
test
daa
pop
mov
mov
jo
jg
or
clc
sbb
xchg
inc
pop
pop
push
cmp
mov
sbb
push
fdiv
mov
out
or
fistp
mov
fs
jp
dec
push
jno
push
pop
jl
xchg
pop
mov
cmp
sbb
pop
cwde
jl
dec
pop
jmp
cmp
lahf
jl
pop
mov
sysenter
xchg
dec
mov
mov
call
push
mov
mov
cmp
sti
aaa
lahf
int
(bad)
pop
adc
sub
mov
ins
idiv
ins
mov
xchg
iret
stos
stos
test
xchg
mov
stc
add
mov
test
sub
stos
adc
sub
pop
mov
int3
mov
sti
enter
jmp
push
pop
push
cmp
jg
fimul
test
ins
cmp
rcl
jmp
mov
nop
scas
xor
sbb
ins
xor
mov
mov
xor
jns
mov
lahf
ins
mov
cs
ss
mov
or
inc
fbstp
outs
push
xchg
mov
mov
mov
and
pushf
dec
loop
mov
loopne
out
and
cmp
loopne
icebp
test
es
sbb
retf
iret
scas
xchg
shl
inc
push
pop
sbb
into
adc
adc
outs
pop
mov
rcr
repnz
cmp
xchg
cld
outs
and
ror
inc
lahf
mov
cli
inc
add
out
push
mov
imul
rcr
nop
ret
out
push
stos
sub
in
aas
loopne
aas
into
lock
add
ss
pushf
xor
enter
(bad)
pop
pop
sbb
jmp
loopne
lds
jle
ja
scas
outs
xor
out
lock
cs
sbb
lock
xor
and
icebp
ret
xor
cld
cmps
popa
cmc
in
retf
int
hlt
mov
mov
vunpckhpd
(bad)
cmp
push
stc
cmp
loopne
jae
lea
mov
pop
push
pop
mov
mov
dec
jno
inc
push
dec
mul
sahf
push
ror
ins
inc
loopne
or
mov
(bad)
retf
outs
loopne
sbb
mov
fs
fimul
mov
add
and
dec
sub
lahf
rol
ds
jle
rcr
loop
lock
or
push
push
pushf
cmp
xchg
loopne
sub
mov
add
sub
stc
cmpxchg
xchg
cs
fldenv
mov
sub
ins
mov
pop
inc
push
lea
gs
adc
call
jno
mov
push
mov
sbb
fist
dec
inc
sahf
dec
dec
inc
fwait
icebp
cdq
sar
mov
add
xchg
jmp
pop
mov
es
xchg
retf
scas
xor
lahf
jno
call
sbb
fld
js
inc
sbb
mov
test
aaa
sub
jae
add
inc
fsubr
das
xor
out
xor
jns
loope
pop
and
(bad)
aad
stos
outs
mov
shl
(bad)
cmp
dec
adc
popa
call
pop
mov
sub
icebp
sbb
xchg
mov
aaa
cs
xchg
cmp
jb
push
add
stos
lock
test
jmp
in
retf
(bad)
jl
jp
jp
push
rol
pop
inc
daa
xchg
mov
xchg
ficomp
lea
icebp
jno
popf
and
add
neg
mov
push
mov
popf
inc
gs
jle
or
add
sub
add
cmp
es
push
mov
mov
pushf
mov
mov
push
or
inc
stc
ret
lds
mov
sub
dec
popa
jecxz
shl
les
dec
(bad)
pop
jl
fwait
out
popa
sar
dec
dec
jno
inc
fdiv
shl
(bad)
ret
mov
jae
inc
aas
jmp
test
mov
movs
xor
ror
mov
je
push
add
cmp
inc
out
sti
rcr
mov
jo
cld
cwde
or
and
lock
cmp
icebp
outs
inc
push
jle
add
inc
(bad)
cmp
ret
(bad)
stos
dec
js
dec
push
inc
ins
into
xchg
and
dec
cs
nop
int3
adc
push
icebp
xchg
dec
sub
lods
arpl
test
inc
shr
cmc
fsubr
pop
ror
shl
pop
mov
mov
(bad)
in
push
out
sahf
lods
mov
(bad)
outs
test
inc
inc
mov
jno
adc
out
sahf
ja
mov
bound
hlt
mov
int
std
scas
xor
(bad)
call
sub
retf
inc
scas
mov
movs
or
inc
out
push
scas
popf
sub
cld
dec
dec
dec
adc
pop
and
test
int3
jp
imul
cli
fcmovu
pop
ins
dec
in
es
xor
fs
in
sbb
jle
push
sub
mov
mov
cmp
adc
and
pop
(bad)
mov
sub
add
stos
sti
scas
inc
lea
sahf
sbb
or
test
ins
dec
xchg
lahf
in
jp
sbb
in
das
stos
xor
mov
jp
sub
shr
xor
mov
adc
into
cdq
cmc
call
jnp
enter
test
dec
sub
stc
sub
in
sar
jle
mov
test
mov
xchg
jp
aam
push
and
rol
das
test
mov
and
(bad)
test
adc
retf
aam
mov
sub
cwde
inc
cmc
fisttp
hlt
inc
xor
test
inc
push
sub
in
add
fdivrp
cmps
dec
inc
adc
mov
cli
imul
add
in
pop
scas
aad
xchg
test
sbb
call
dec
and
adc
jp
xchg
ror
pop
enter
aam
mov
inc
cmp
and
outs
sbb
pusha
fisubr
outs
sbb
cmp
bound
sbb
inc
adc
pusha
loope
arpl
loopne
and
popa
outs
sbb
popa
mov
call
loopne
loope
(bad)
mov
and
jle
pusha
jle
adc
jp
sahf
outs
sqrtps
fwait
loop
mov
and
loope
arpl
adc
mov
mov
sbb
jl
add
imul
jo
iret
sub
cmp
(bad)
mov
leave
adc
xor
cmps
fnstenv
adc
push
fdiv
ja
outs
outs
ret
adc
mov
movs
fld
pop
mov
xchg
stos
hlt
outs
in
inc
out
addr16
jno
push
mov
bound
daa
int
loope
imul
popa
lahf
xlat
mov
mov
sbb
adc
xchg
sti
mov
push
cmps
jmp
loope
out
sub
add
outs
mov
cld
dec
mov
sbb
mov
mov
stos
and
jmp
sbb
fs
aas
adc
inc
test
aas
and
xchg
in
adc
sbb
loopne
jmp
lock
or
xchg
jns
add
out
loopne
xchg
mov
fnstcw
loop
movs
sysexit
cdq
addr16
dec
(bad)
cmc
jns
inc
fistp
jns
pop
lods
push
xlat
push
add
cmp
jns
movs
clc
mov
add
add
cmps
imul
dec
push
xchg
sbb
mov
jbe
cmps
mov
pusha
sbb
outs
xchg
pop
mov
test
cpuid
lods
inc
pop
lods
jb
or
or
pop
sahf
pop
sub
inc
push
mov
jmp
(bad)
sub
test
pop
call
sar
or
adc
das
dec
mov
xchg
inc
pop
in
ror
inc
fisttp
inc
mov
xor
loope
cld
out
cmp
xchg
pop
adc
call
xchg
sub
outs
jo
xlat
out
mov
stos
push
sbb
pop
or
xchg
sahf
xchg
and
xchg
ja
push
add
dec
and
jmp
xchg
lea
ret
lods
out
mov
mov
outs
repz
movs
mov
iret
arpl
or
ins
xor
(bad)
repz
adc
inc
mov
call
repz
pusha
mov
inc
inc
adc
mov
and
mov
add
push
pop
jle
cmp
fistp
lods
shr
mov
pop
jmp
pop
mov
jmp
div
(bad)
aaa
xor
call
outs
int3
and
scas
loop
dec
imul
adc
sbb
push
daa
or
jmp
sar
jmp
mov
inc
adc
ror
dec
ror
lds
or
and
pop
mov
mov
sub
inc
into
shl
int3
xchg
mov
pavgb
jl
into
dec
or
les
mov
in
into
mul
(bad)
jge
daa
dec
cmc
lea
pushf
add
inc
cmc
je
packssdw
mov
cli
aas
iret
pop
dec
and
aas
(bad)
das
popa
jb
xor
xor
ror
fwait
jge
inc
xchg
sbb
adc
dec
into
jae
xor
ja
mov
idiv
jb
mov
outs
clc
adc
hlt
jb
scas
mov
xor
jl
lahf
sub
iret
loopne
stos
out
cld
cmp
ss
adc
repz
dec
mov
sub
jle
mov
or
sub
ja
jno
mov
mov
int
cld
sub
mov
mov
mov
test
daa
mov
mov
test
sti
or
sub
dec
mov
jne
ja
mov
mov
std
or
sub
lea
mov
mov
sti
or
mov
jo
jae
mov
mov
repnz
mov
stos
mov
push
stc
das
mov
mov
jae
jae
mov
mov
int3
or
sub
mov
mov
psubq
dec
mov
mov
test
mov
jno
jo
mov
mov
repnz
mov
stos
mov
psubb
mov
mov
mov
or
mov
je
je
mov
mov
test
es
mov
jae
dec
stos
mov
push
stc
cs
xor
xchg
jnp
push
mov
add
fdiv
lods
retf
push
push
mov
mov
push
lea
add
loopne
jmp
pop
cmps
stos
cdq
test
mov
in
lea
pop
or
or
out
dec
lods
sbb
lods
addr16
mov
xor
imul
pop
sahf
call
stos
jbe
fild
stos
jnp
mov
mov
sub
jnp
or
jb
imul
daa
adc
push
or
cdq
mov
retf
aas
ins
rol
sub
mov
ss
fcomp
mov
mov
cld
jb
mov
lea
push
ret
rcl
rol
push
xor
cmc
sbb
push
inc
add
repnz
xlat
les
fmul
pop
scas
sbb
xor
jns
mov
retf
push
mov
xor
xor
add
out
jmp
jmp
imul
lea
jp
or
push
push
cli
and
mov
mov
addr16
ins
mov
mov
sub
pop
cmp
and
adc
jnp
sub
ret
dec
jne
or
cmp
cmp
outs
(bad)
mov
(bad)
mov
sub
outs
jecxz
jae
push
xchg
inc
inc
mov
mov
mov
jmp
xor
out
aaa
fs
and
mov
nop
outs
sbb
mov
cmp
mov
data16
inc
push
jmp
out
ret
std
adc
clc
mov
push
pop
mov
lods
dec
push
ret
push
dec
adc
or
sbb
ins
scas
mov
(bad)
push
jns
cmp
lea
cmp
aas
and
pop
fdivr
ja
cmps
push
jnp
push
es
std
push
cmp
cli
clc
cmp
icebp
jns
sbb
xchg
adc
clc
pop
lods
les
mov
add
push
adc
inc
cmp
adc
out
pop
jb
adc
fidivr
mov
cdq
(bad)
sbb
push
shl
mov
jns
ret
push
fmul
and
dec
outs
inc
mov
mov
adc
aaa
and
daa
mov
enter
dec
adc
or
mov
bound
push
push
or
aad
push
jmp
xchg
int3
outs
outs
pop
movs
imul
inc
aam
cs
xor
not
in
ret
sbb
das
pop
jo
scas
out
es
sar
xlat
mov
inc
push
push
into
sahf
daa
lahf
idiv
mov
xlat
mov
retf
jecxz
push
sub
stc
std
fmulp
inc
lods
push
xor
or
cmp
sahf
stos
jmp
push
ins
sub
pushf
(bad)
dec
pop
or
adc
cld
jbe
pop
mov
fild
jns
stos
xor
dec
sub
jecxz
xlat
out
(bad)
aam
fiadd
cs
lock
sahf
inc
imul
test
inc
fistp
jg
push
xchg
ins
sbb
dec
jnp
addr16
cmp
sub
or
sbb
sub
lea
mov
push
mov
test
mov
pop
repnz
adc
mov
pop
cmc
inc
mov
push
pushf
push
bnd
xor
in
test
test
add
in
les
xchg
xchg
mov
dec
inc
xchg
outs
xchg
adc
xor
xchg
push
xor
add
sub
or
push
data16
xchg
cmp
mov
mov
data16
push
dec
in
and
mov
in
jbe
xchg
jmp
adc
xor
push
xchg
add
imul
xor
mov
inc
cmps
idiv
mov
pop
out
push
and
add
inc
mov
and
shr
add
push
sub
rcl
arpl
cmc
xor
pop
leave
jle
mov
shl
cli
in
push
jae
inc
jge
loopne
mul
xor
pop
mov
dec
xchg
out
cs
sahf
jno
shl
mov
aaa
jmp
jo
pusha
mov
sub
mov
loopne
jecxz
ins
push
fisttp
ret
bound
into
jae
adc
and
push
aad
aad
test
ror
xchg
dec
dec
xchg
ret
bound
and
ss
ja
and
xchg
div
mov
add
add
mov
lea
movs
xor
test
setne
movs
movs
mov
mov
test
mov
movs
mov
jne
mov
jmp
xor
mov
mov
mov
lea
push
push
push
mov
call
cmp
mov
jge
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
cmp
jne
and
mov
lea
push
push
push
mov
call
mov
test
mov
jge
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
jmp
mov
lea
push
push
lea
push
push
call
mov
test
mov
mov
jge
test
je
mov
push
call
mov
or
test
jmp
test
mov
je
mov
push
call
jmp
mov
mov
and
xor
push
pop
mul
seto
mov
neg
or
push
call
and
pop
mov
jmp
mov
call
mov
ret
mov
mov
test
jne
mov
or
test
je
mov
push
call
mov
jmp
mov
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
xor
cmp
jne
push
mov
call
mov
or
pop
cmp
jmp
mov
mov
mov
cmp
jae
mov
mov
imul
mov
add
mov
cmp
jbe
cmp
je
mov
cmp
jne
mov
add
and
lea
push
and
mov
add
mov
xor
push
push
push
mov
mov
push
add
movzx
push
push
push
movzx
push
push
movzx
push
push
xor
push
call
add
jmp
cmp
jne
or
mov
mov
mov
mov
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
lea
and
mov
add
mov
xor
push
push
push
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
push
call
add
jmp
cmp
jne
push
lea
push
lea
push
push
xor
mov
mov
mov
mov
mov
call
cmp
je
mov
jmp
cmp
je
mov
lea
movs
movs
movs
movs
mov
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
push
call
push
and
mov
call
pop
pop
jmp
lea
mov
and
lea
movs
movs
movs
movs
mov
mov
imul
mov
mov
mov
mov
add
mov
movzx
push
call
mov
push
lea
mov
dec
not
and
mov
lea
and
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
jmp
movzx
cmp
jne
and
push
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
cmp
jne
mov
test
jbe
mov
add
push
call
add
dec
pop
jne
jmp
mov
jmp
cmp
jne
inc
mov
add
cmp
jne
mov
lea
mov
mov
add
mov
movzx
push
call
mov
lea
dec
not
and
mov
mov
lea
and
push
lea
and
push
push
movzx
push
push
push
movzx
push
push
movzx
push
push
mov
push
mov
add
call
add
add
mov
inc
mov
mov
jmp
cmp
jne
push
mov
call
test
mov
jge
xor
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
push
call
push
and
mov
call
mov
or
pop
pop
test
jmp
mov
mov
push
and
mov
call
pop
mov
mov
jmp
mov
call
mov
ret
mov
mov
xor
cmp
jne
cmp
jbe
mov
add
push
call
inc
add
cmp
pop
jb
jmp
push
push
push
call
push
push
push
push
push
call
mov
add
cmp
jge
push
call
pop
mov
push
mov
call
mov
or
pop
cmp
je
mov
push
call
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
mov
mov
lea
push
push
push
call
cmp
mov
jl
mov
mov
lea
push
push
push
call
test
jl
mov
lea
push
push
mov
mov
push
call
test
jl
mov
mov
lea
push
mov
add
push
push
call
mov
mov
push
call
mov
mov
push
call
push
call
cmp
pop
je
push
mov
call
jmp
xor
mov
mov
mov
push
call
mov
mov
cmp
je
add
push
push
call
push
call
cmp
pop
je
push
push
mov
call
jmp
xor
mov
mov
push
mov
call
mov
mov
mov
mov
mov
cmp
mov
jbe
mov
jmp
imul
push
call
xor
cmp
setne
mov
cmp
jne
jmp
mov
imul
push
push
push
call
mov
add
call
mov
call
jmp
mov
cmp
jne
xor
jmp
mov
lea
push
lea
push
push
push
call
cmp
jl
push
lea
push
mov
call
or
push
lea
push
mov
mov
mov
mov
mov
mov
call
mov
or
push
push
lea
push
push
mov
mov
mov
mov
mov
mov
push
call
mov
cmp
jge
mov
mov
push
call
mov
jmp
mov
lea
push
xor
push
mov
mov
xor
push
mov
mov
mov
mov
mov
push
call
cmp
mov
jge
mov
mov
push
call
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
mov
jle
xor
push
call
pop
mov
cmp
mov
je
push
mov
call
jmp
xor
or
mov
inc
mov
mov
add
cmp
jl
mov
cmp
je
cmp
jle
mov
push
pop
add
sub
mov
mov
jmp
mov
mov
mov
cmp
mov
je
jmp
mov
lea
push
mov
add
mov
call
mov
mov
push
push
mov
call
cmp
jne
mov
call
mov
cmp
je
mov
push
call
add
dec
jne
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
je
xor
cmp
je
inc
cmp
mov
jl
mov
mov
mov
mov
mov
cmp
je
mov
cmp
mov
je
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
mov
xor
inc
cmp
jne
mov
mov
lea
push
push
call
test
je
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
push
push
lea
call
mov
mov
push
push
push
add
call
push
push
movzx
push
push
lea
call
mov
push
lea
call
movzx
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
lea
jmp
push
push
lea
call
push
mov
call
mov
mov
mov
mov
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
mov
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
mov
call
push
call
push
call
mov
mov
lea
push
push
call
jmp
sub
je
sub
je
dec
dec
je
dec
je
dec
je
dec
jne
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
mov
mov
mov
lea
push
push
call
jmp
push
push
lea
call
mov
lea
push
push
call
jmp
push
push
lea
call
lea
jmp
push
push
lea
call
mov
mov
mov
push
push
push
push
call
push
push
push
push
push
call
jmp
cmp
jne
push
push
lea
call
mov
push
mov
call
mov
mov
mov
shr
lea
push
push
push
push
call
push
call
add
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
lea
mov
call
or
lea
push
call
cmp
jne
inc
mov
add
add
cmp
jle
cmp
jle
mov
xor
call
ret
lea
cmp
jne
mov
mov
push
push
push
call
cmp
jl
cmp
mov
jle
mov
mov
mov
mov
mov
cmp
mov
je
mov
imul
mov
mov
lea
push
mov
mov
call
mov
lea
cmp
je
inc
cmp
mov
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
lea
push
mov
call
lea
movzx
cmp
mov
mov
jl
cmp
jle
cmp
je
cmp
jne
or
push
lea
call
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
lea
push
mov
mov
push
mov
mov
push
call
push
mov
call
or
lea
push
call
inc
add
cmp
jne
inc
mov
add
cmp
jl
mov
cmp
mov
je
lea
push
lea
call
mov
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
push
mov
push
call
test
jne
inc
xor
inc
cmp
jne
mov
mov
lea
push
push
call
cmp
jl
cmp
jne
mov
mov
push
push
call
cmp
jl
mov
mov
mov
push
call
cmp
jne
cmp
jle
mov
mov
push
push
push
push
call
mov
cmp
mov
jge
mov
mov
call
mov
jmp
mov
cmp
jne
or
jmp
push
mov
call
mov
push
lea
call
xor
cmp
mov
jne
mov
cmp
je
mov
xor
cmp
setne
cmp
jne
call
mov
xor
cmp
setne
cmp
je
push
call
mov
call
mov
push
mov
call
mov
mov
cmp
je
push
mov
call
push
push
call
mov
imul
push
push
push
mov
call
add
or
cmp
je
push
push
call
xor
call
ret
push
mov
mov
test
je
mov
test
je
push
call
push
mov
test
je
mov
call
push
call
pop
and
pop
cmp
je
mov
call
mov
test
je
and
mov
push
call
mov
test
je
and
mov
push
call
pop
ret
push
mov
sub
push
push
mov
mov
xor
cmp
push
jne
jmp
mov
cmp
je
mov
call
cmp
mov
je
push
call
neg
sbb
inc
mov
je
call
push
call
mov
lea
push
push
call
lea
push
mov
push
call
mov
sub
mov
cdq
push
sub
sar
push
push
push
mov
sub
cdq
sub
sar
push
call
mov
push
call
mov
mov
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
push
push
push
call
cmp
mov
jne
mov
cmp
jge
cmp
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
jmp
mov
mov
mov
lea
push
push
push
call
cmp
jl
mov
mov
lea
push
push
call
mov
mov
push
call
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
mov
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
push
call
mov
call
cmp
mov
je
mov
sub
mov
push
push
mov
sub
push
push
push
call
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
mov
call
mov
or
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
push
mov
lea
push
mov
push
mov
call
add
mov
mov
call
ret
push
mov
call
mov
cmp
jne
push
call
pop
mov
mov
and
test
je
push
call
jmp
xor
or
mov
mov
call
call
ret
push
mov
mov
test
push
je
mov
mov
push
push
call
mov
mov
mov
call
and
mov
test
je
mov
mov
call
mov
push
mov
mov
mov
movzx
lea
mov
call
mov
mov
mov
push
push
call
mov
test
je
mov
mov
call
pop
pop
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
mov
cmp
je
mov
mov
lea
push
push
push
call
test
jl
mov
cmp
je
lea
push
push
mov
mov
push
call
test
jl
mov
cmp
je
push
mov
push
call
mov
mov
push
call
mov
mov
push
call
jmp
mov
mov
cmp
je
mov
cmp
je
mov
push
push
call
mov
mov
cmp
jne
lea
mov
call
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
cmp
je
push
call
push
call
pop
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
cmp
je
cmp
mov
jle
xor
mov
mov
mov
cmp
mov
je
lea
push
mov
mov
call
cmp
mov
mov
jne
mov
mov
call
mov
mov
cmp
je
mov
push
call
inc
mov
add
cmp
jl
push
call
mov
cmp
je
push
call
mov
cmp
je
mov
push
call
mov
call
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
call
push
call
pop
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
or
call
call
ret
push
mov
push
push
push
push
xor
cmp
mov
mov
je
push
push
call
cmp
je
cmp
jle
mov
lea
push
call
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
cmp
jne
mov
cmp
jl
jmp
mov
imul
push
mov
call
jmp
cmp
jle
and
mov
mov
lea
cmp
je
push
lea
call
push
mov
add
push
call
pop
pop
mov
add
mov
call
test
jne
add
inc
cmp
jl
mov
and
jmp
call
xor
cmp
jle
mov
mov
mov
mov
jmp
mov
lea
push
mov
mov
call
mov
cmp
je
mov
test
jne
inc
add
cmp
jl
jmp
mov
imul
push
mov
call
pop
pop
pop
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
xor
mov
xor
mov
mov
cmp
setne
cmp
jne
call
xor
cmp
setne
cmp
je
lea
push
call
mov
push
pop
lea
push
push
mov
mov
call
cmp
jne
mov
lea
push
call
lea
push
call
jmp
mov
lea
push
push
mov
call
test
je
movzx
mov
mov
cmp
jg
je
cmp
jg
je
dec
dec
je
dec
je
dec
je
dec
je
dec
je
dec
jne
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
fld
fstp
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
cmp
jne
push
mov
call
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
mov
mov
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
push
lea
mov
call
lea
push
mov
call
jmp
push
mov
call
movzx
push
push
lea
call
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
jmp
sub
je
dec
je
dec
dec
je
dec
je
dec
jne
lea
push
push
mov
call
test
je
movzx
push
movzx
push
movzx
push
movzx
push
movzx
push
movsx
push
lea
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
push
fstp
movzx
push
movzx
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
movzx
fldz
movzx
fstp
movsx
push
push
push
push
push
push
lea
mov
call
mov
fld
fstp
lea
push
lea
mov
call
lea
jmp
lea
push
push
mov
call
test
je
cmp
fild
jbe
dec
fdiv
jne
cmp
jne
fchs
fstp
mov
lea
push
lea
mov
call
lea
jmp
push
mov
call
push
lea
call
mov
push
push
lea
mov
call
push
lea
mov
call
lea
push
call
mov
add
mov
call
mov
lea
push
call
lea
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
mov
call
mov
xor
cmp
mov
mov
mov
jle
mov
mov
imul
mov
test
je
mov
test
mov
je
mov
shl
mov
lea
push
mov
mov
call
mov
push
lea
push
push
mov
call
add
lea
push
call
and
cmp
je
mov
inc
push
lea
push
mov
call
push
lea
mov
call
lea
push
mov
call
lea
jmp
mov
add
mov
lea
mov
xor
inc
mov
mov
mov
mov
test
je
mov
lea
push
push
push
call
test
jl
mov
mov
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
mov
push
call
and
cmp
je
push
call
cmp
je
push
call
cmp
je
push
call
inc
add
or
lea
push
call
cmp
jne
inc
mov
cmp
jl
and
xor
call
ret
push
mov
call
mov
mov
mov
mov
xor
cmp
mov
je
cmp
jne
mov
mov
cmp
je
mov
call
push
call
pop
mov
call
push
lea
push
mov
call
push
mov
push
call
push
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
lea
push
call
mov
mov
jmp
mov
cmp
mov
mov
je
mov
jmp
mov
mov
cmp
je
cmp
je
mov
mov
push
push
call
push
call
mov
cmp
pop
je
mov
mov
mov
cmp
jne
cmp
je
mov
cmp
je
add
cmp
je
mov
mov
push
push
mov
call
mov
cmp
je
cmp
je
dec
lea
mov
call
mov
sub
call
or
mov
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
mov
test
jne
xor
jmp
mov
test
jne
xor
jmp
mov
push
push
push
push
call
ret
mov
mov
test
je
push
call
test
je
xor
inc
ret
xor
ret
push
mov
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
xor
pop
ret
test
je
mov
mov
call
test
jne
mov
test
je
test
je
xor
inc
pop
ret
mov
test
jne
ret
mov
test
je
jmp
push
push
call
and
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
push
call
push
call
ret
mov
test
je
mov
push
push
call
ret
push
mov
push
push
call
test
je
push
push
push
push
call
mov
call
pop
ret
push
push
mov
xor
test
je
push
mov
push
push
call
and
cmp
jne
cmp
je
push
mov
call
push
call
mov
push
push
call
test
je
pop
pop
mov
pop
ret
push
push
mov
test
push
je
mov
mov
push
push
call
push
call
mov
jmp
push
call
push
call
push
push
call
mov
test
je
cmp
je
mov
push
push
call
push
call
test
je
mov
push
push
call
push
call
mov
push
push
call
test
je
push
mov
test
je
push
call
test
je
test
je
mov
call
test
jne
push
push
push
jmp
mov
push
call
push
call
mov
test
jne
mov
jmp
push
push
push
call
mov
pop
mov
pop
pop
pop
ret
push
mov
test
je
push
mov
xor
push
mov
test
jne
mov
test
jne
push
call
push
call
test
jne
test
je
test
jne
mov
mov
call
call
push
call
cmp
je
push
call
test
je
pop
pop
mov
pop
jmp
pop
pop
pop
ret
push
mov
test
je
push
call
test
je
push
mov
cmp
je
mov
mov
test
jne
push
call
push
call
test
jne
jmp
mov
xor
test
je
cmp
jne
push
call
test
je
test
je
test
je
cmp
je
push
mov
call
test
jne
mov
push
mov
call
pop
pop
ret
push
mov
push
mov
call
test
jne
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
mov
mov
call
cmp
je
push
push
push
call
mov
test
je
cmp
jne
xor
pop
pop
pop
ret
mov
jmp
push
mov
mov
test
je
push
call
pop
ret
push
push
call
mov
neg
sbb
and
add
test
je
xor
cmp
push
setne
push
push
push
call
pop
ret
push
mov
test
push
je
push
push
call
test
jne
push
push
call
jmp
push
push
push
call
mov
test
je
mov
push
push
call
pop
pop
push
push
push
call
mov
test
je
cmp
jne
pop
pop
ret
mov
push
push
push
push
call
mov
shr
cmp
jne
movzx
jmp
xor
inc
ret
push
mov
push
and
push
mov
push
mov
push
mov
call
test
je
test
je
push
push
call
test
jne
push
call
pop
mov
mov
cmp
push
jne
test
je
test
je
push
call
push
push
call
mov
test
je
cmp
je
push
call
test
pop
je
push
jmp
push
push
jmp
test
je
push
call
test
pop
jne
test
je
cmp
je
push
push
call
test
jne
push
call
push
push
call
mov
push
call
test
pop
je
mov
call
test
je
push
push
call
pop
pop
pop
pop
pop
leave
ret
push
mov
mov
call
test
je
mov
test
push
push
mov
je
mov
lea
lea
push
mov
call
mov
mov
test
je
mov
cmp
je
mov
cmp
je
cmp
jne
xor
pop
pop
pop
ret
push
mov
push
push
push
mov
test
jne
call
mov
and
test
mov
je
mov
test
je
mov
jmp
mov
test
je
push
call
push
push
call
test
je
push
push
call
mov
jmp
inc
cmp
je
cmp
jg
push
push
call
test
pop
pop
jne
push
mov
call
mov
test
jne
mov
call
mov
test
je
test
mov
mov
je
xor
test
je
cmp
je
lea
push
lea
call
cmp
mov
jne
jmp
mov
jmp
lea
push
lea
call
mov
mov
cmp
je
test
je
test
je
cmp
jne
mov
mov
lea
push
lea
call
mov
push
push
call
test
pop
pop
je
test
je
mov
test
je
mov
jmp
mov
test
je
push
call
test
jne
jmp
cmp
je
mov
mov
call
test
je
cmp
jne
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
push
push
push
push
call
mov
test
jne
mov
call
mov
test
je
mov
test
mov
je
lea
push
lea
call
mov
mov
test
je
cmp
je
cmp
je
call
cmp
je
cmp
jne
jmp
mov
xor
push
push
push
call
mov
xor
cmp
je
push
call
test
pop
je
mov
push
push
call
mov
cmp
je
cmp
je
mov
cmp
je
mov
jmp
mov
cmp
je
push
call
test
je
mov
jmp
cmp
je
mov
mov
call
test
je
cmp
je
cmp
jne
mov
inc
cmp
jl
xor
pop
pop
pop
leave
ret
call
int3
push
mov
call
mov
test
jne
and
jmp
mov
mov
mov
mov
mov
call
push
mov
call
mov
cmp
mov
jb
cmp
jbe
add
cmp
ja
test
je
mov
mov
cmp
jne
push
call
push
call
cmp
je
push
call
push
call
mov
test
jne
test
je
mov
test
je
cmp
je
mov
push
mov
push
call
test
jne
inc
jmp
cmp
je
cmp
je
cmp
jne
test
je
mov
test
je
mov
movzx
cmp
jne
test
jne
cmp
jne
test
je
xor
jmp
mov
push
xor
mov
call
and
mov
mov
sub
mov
je
dec
dec
je
sub
jne
cmp
jne
push
call
test
jge
cmp
je
push
push
call
cmp
jne
test
jne
movzx
cmp
jne
test
jne
cmp
je
push
push
push
call
test
je
mov
test
je
push
mov
call
jmp
push
push
call
movzx
cmp
jg
je
cmp
je
cmp
je
cmp
je
mov
test
jne
push
push
call
test
mov
je
mov
call
push
call
cmp
je
call
push
call
push
call
pop
push
mov
call
test
je
mov
call
push
call
push
push
call
pop
pop
push
call
test
je
call
push
call
push
push
push
call
mov
call
ret
test
jne
push
call
mov
xor
test
setl
mov
push
push
call
test
je
cmp
je
mov
mov
push
mov
call
jmp
mov
test
je
push
call
jmp
push
push
mov
call
mov
test
je
mov
and
push
call
push
push
call
pop
pop
jmp
cmp
jl
cmp
jle
cmp
jle
cmp
jne
test
jne
push
call
test
pop
je
mov
mov
call
jmp
push
call
xor
cmp
mov
jne
jmp
xor
push
push
call
mov
cmp
je
mov
call
test
jne
push
call
jmp
cmp
je
push
push
push
push
push
push
mov
call
add
or
jmp
mov
call
mov
ret
mov
push
push
call
test
jne
cmp
mov
push
je
call
jmp
call
mov
test
je
cmp
je
mov
push
call
cmp
je
mov
mov
push
call
jmp
mov
test
je
push
call
jmp
push
mov
push
call
mov
test
je
mov
mov
xor
push
mov
call
cmp
je
push
push
push
push
call
mov
jmp
push
mov
call
mov
mov
call
mov
and
test
mov
mov
jne
test
je
call
mov
and
mov
neg
sbb
not
and
and
mov
mov
mov
mov
call
ret
push
call
pop
ret
push
push
call
pop
pop
ret
mov
xor
ret
push
mov
mov
push
mov
cmp
jbe
mov
test
jne
call
add
cmp
jb
mov
test
push
mov
jne
mov
call
jmp
mov
push
call
test
je
mov
mov
pop
pop
ret
mov
xor
ret
cmp
push
push
mov
ja
mov
cmp
jbe
call
mov
xor
cmp
jb
ja
cmp
jbe
mov
push
mov
call
mov
xor
cmp
ja
jb
cmp
jae
mov
mov
pop
pop
ret
push
push
mov
test
mov
jne
xor
jmp
cmp
jne
call
mov
mov
cmp
ja
lea
cmp
ja
cmp
jae
sub
mov
mov
mov
push
add
push
push
mov
call
add
mov
pop
pop
ret
push
push
mov
test
mov
je
cmp
jne
call
mov
lea
cmp
jb
cmp
jbe
mov
push
mov
call
mov
lea
cmp
ja
mov
mov
push
push
add
push
mov
call
add
mov
cmp
jbe
mov
pop
pop
ret
push
mov
push
push
mov
mov
xor
xor
cmp
jne
mov
mov
jmp
cmp
jne
mov
add
mov
adc
jmp
cmp
jne
cmp
jl
jg
cmp
jbe
push
push
push
call
mov
xor
add
adc
cmp
jg
jl
cmp
jb
cmp
jbe
mov
push
mov
call
mov
pop
mov
xor
pop
pop
ret
push
mov
mov
push
xor
cmp
mov
mov
mov
mov
je
cmp
je
mov
push
call
mov
pop
pop
ret
mov
jmp
push
mov
cmp
push
mov
jne
xor
cmp
sbb
neg
jmp
cmp
jne
mov
add
mov
cmp
jbe
mov
xor
jmp
push
mov
test
je
mov
test
je
cmp
push
mov
jne
mov
lea
cmp
jb
cmp
jb
cmp
jbe
mov
push
mov
call
mov
mov
add
cmp
mov
jne
mov
mov
add
cmp
jae
mov
mov
add
mov
jmp
call
cmp
jne
mov
sub
mov
mov
add
cmp
jae
mov
mov
add
mov
sub
add
mov
sub
pop
jmp
xor
pop
pop
pop
ret
mov
ret
push
mov
call
mov
mov
mov
xor
cmp
mov
je
call
or
mov
mov
mov
mov
mov
call
call
ret
push
mov
push
push
push
push
call
mov
add
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
call
add
lea
push
mov
call
mov
xor
cmp
sete
xor
call
leave
ret
push
xor
cmp
je
xor
cmp
pop
setne
ret
push
push
call
push
mov
call
mov
cmp
je
mov
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
push
push
call
cmp
mov
je
cmp
je
push
jmp
push
push
call
cmp
mov
je
xor
inc
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
mov
mov
xor
jmp
call
test
je
jmp
test
push
push
jne
mov
xor
cmp
jle
cmp
jle
mov
push
call
cmp
jge
push
call
cmp
jl
xor
jmp
mov
pop
pop
ret
push
mov
sub
call
test
je
push
push
call
jmp
test
je
mov
jmp
push
call
test
je
lea
push
push
call
jmp
lea
push
push
call
test
je
push
lea
push
call
jmp
xor
leave
ret
push
mov
sub
push
push
call
test
je
mov
push
push
call
mov
xor
cmp
je
cmp
jne
cmp
jb
push
lea
push
push
push
push
push
call
mov
jmp
cmp
push
jne
mov
xor
cmp
je
cmp
jb
push
lea
push
push
push
call
test
je
mov
mov
push
mov
call
push
mov
call
lea
lea
movs
movs
movs
movs
xor
inc
cmp
mov
mov
jb
push
add
push
push
push
push
push
call
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
xor
cmp
push
push
mov
jne
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
jbe
mov
jmp
cmp
mov
jbe
mov
mov
mov
mov
cmp
jae
mov
add
add
inc
mov
mov
add
cmp
jb
cmp
jae
mov
mov
sub
shl
add
sub
lea
mov
add
sub
dec
jne
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
lea
push
call
mov
add
cmp
ja
mov
push
pop
jmp
cmp
jne
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
cmp
mov
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
push
push
push
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
push
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
movzx
test
je
test
je
test
je
push
call
mov
mov
mov
add
jmp
mov
jmp
mov
and
mov
mov
sub
mov
push
movs
push
movs
push
movs
push
push
movs
call
jmp
cmp
jne
mov
cmp
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
mov
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
push
mov
push
call
jmp
push
mov
push
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
movzx
test
je
test
jne
mov
mov
and
jmp
cmp
jne
push
call
mov
mov
mov
add
jmp
cmp
jne
mov
jmp
push
call
lea
mov
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
push
mov
mov
sub
mov
movs
movs
movs
push
movs
call
jmp
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jl
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
jmp
test
je
cmp
jne
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
mov
test
jl
mov
mov
jmp
test
je
cmp
jne
mov
mov
cmp
lea
movs
movs
movs
movs
je
push
push
push
lea
push
call
mov
test
jge
mov
mov
jmp
lea
mov
mov
push
sub
mov
lea
movs
movs
movs
push
movs
call
mov
jmp
cmp
je
mov
jmp
mov
mov
mov
add
push
sub
mov
movs
movs
movs
push
movs
call
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
jmp
mov
mov
add
push
push
call
mov
test
jl
mov
mov
lea
push
call
mov
pop
pop
pop
leave
ret
lea
in
das
inc
add
xor
(bad)
xor
xor
inc
add
inc
add
xor
mov
xor
push
xor
mov
inc
add
xor
add
inc
add
xor
add
inc
add
inc
add
in
push
push
xor
cmp
push
push
jbe
mov
mov
lea
xor
push
push
call
test
jne
mov
mov
mov
mov
add
cmp
jb
cmp
je
inc
cmp
jb
xor
pop
pop
pop
leave
ret
mov
jmp
push
mov
call
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
push
push
call
mov
not
and
or
cmp
jne
xor
jmp
push
push
push
call
mov
xor
cmp
je
or
push
push
push
push
push
push
push
call
xor
inc
pop
ret
push
push
push
push
push
call
ret
push
push
push
push
push
call
ret
ret
cmp
mov
je
jmp
jmp
push
mov
push
mov
mov
test
jne
mov
call
mov
test
jne
push
push
push
push
call
jmp
push
push
push
push
push
call
pop
pop
ret
lea
ret
push
mov
call
mov
test
je
push
push
call
xor
pop
ret
push
mov
push
push
push
mov
push
push
call
mov
test
je
push
push
call
mov
test
movzx
mov
je
cmp
jb
mov
or
or
push
push
push
push
mov
mov
call
test
jne
or
mov
pop
jmp
or
pop
pop
pop
ret
push
mov
push
mov
mov
mov
mov
cmp
je
cmp
je
add
jmp
cmp
jne
cmp
jb
cmp
ja
mov
jmp
xor
mov
mov
pop
pop
ret
push
mov
push
and
push
mov
mov
lea
push
push
mov
push
push
call
test
jne
push
mov
push
mov
push
call
mov
mov
pop
leave
ret
push
mov
call
mov
mov
mov
pop
ret
mov
mov
mov
ret
ret
push
mov
call
cmp
jne
and
push
push
mov
call
push
push
call
pop
ret
mov
ret
push
mov
push
push
push
push
push
call
pop
ret
mov
test
jne
mov
jmp
mov
xor
ret
mov
test
jne
mov
jmp
and
mov
ret
lea
cmp
jne
push
push
push
push
call
test
jl
xor
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
call
ret
mov
push
mov
push
call
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
push
push
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
push
mov
push
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
mov
push
push
push
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
push
mov
push
push
call
ret
mov
mov
push
push
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
push
mov
push
push
lea
sub
mov
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
xor
ret
xor
inc
ret
mov
mov
cmp
jb
cmp
jbe
cmp
jb
cmp
ja
push
call
jmp
xor
ret
mov
and
ret
xor
ret
mov
test
je
cmp
je
cmp
je
xor
inc
ret
xor
ret
mov
test
jne
call
and
xor
inc
ret
mov
test
jne
call
and
xor
inc
ret
mov
ret
mov
ret
mov
mov
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
movzx
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
push
push
push
push
push
push
push
push
push
push
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
push
call
mov
mov
call
mov
call
ret
xor
cmp
je
xor
cmp
sete
mov
cmp
je
call
mov
jmp
xor
push
push
call
cmp
je
push
call
ret
push
push
call
push
call
ret
push
push
call
ret
push
push
call
ret
push
push
push
push
push
push
call
dec
dec
ret
push
mov
mov
cmp
je
mov
cmp
je
cmp
je
call
mov
mov
cmp
je
push
call
pop
ret
push
mov
mov
cmp
je
push
call
mov
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
push
mov
push
call
mov
call
mov
mov
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
push
mov
mov
mov
sub
push
sub
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
mov
test
push
push
push
jne
xor
jmp
mov
push
mov
push
mov
mov
mov
push
mov
mov
sub
push
sub
push
mov
push
push
or
push
push
push
push
call
pop
pop
pop
pop
ret
push
call
mov
mov
test
je
mov
test
je
push
push
push
push
call
cmp
mov
je
test
je
push
call
test
jl
mov
push
mov
call
pop
ret
push
mov
push
push
mov
test
push
jne
call
push
call
xor
test
mov
jle
mov
push
mov
call
test
je
cmp
je
push
push
call
test
jne
jmp
push
push
call
cmp
je
inc
cmp
jl
xor
pop
pop
pop
pop
ret
push
call
jmp
mov
mov
test
je
push
call
ret
push
mov
call
test
je
push
call
mov
pop
ret
push
mov
call
mov
cmp
jne
mov
cmp
jne
push
pop
jmp
cmp
jne
xor
inc
jmp
cmp
jne
xor
mov
push
push
mov
call
jmp
push
mov
push
mov
call
pop
ret
cmp
jne
call
mov
test
je
test
jne
push
call
xor
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
lea
call
push
and
push
push
push
push
push
push
push
push
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
push
lea
push
movs
push
movs
push
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
push
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
sub
mov
lea
movs
movs
movs
mov
movs
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
and
push
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
push
mov
and
mov
call
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
push
push
push
mov
test
jne
mov
jmp
push
mov
push
lea
call
cmp
mov
mov
pop
je
push
push
call
xor
pop
leave
ret
push
mov
call
mov
mov
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
call
mov
mov
mov
mov
mov
call
ret
mov
ret
jmp
mov
mov
push
push
mov
call
mov
call
mov
ret
push
mov
sub
push
mov
push
mov
call
mov
mov
test
je
mov
jmp
test
je
push
call
jmp
push
push
call
mov
test
je
push
push
push
push
call
test
je
mov
push
mov
lea
push
push
call
test
jne
test
je
push
push
call
test
je
test
je
xor
test
mov
jne
call
test
je
mov
lea
push
push
push
call
push
call
mov
lea
push
lea
push
call
lea
push
lea
push
call
jmp
lea
push
push
call
lea
push
push
push
call
push
call
lea
push
lea
push
call
jmp
push
call
mov
mov
lea
push
push
call
lea
push
push
call
push
lea
push
push
push
call
mov
mov
mov
mov
add
cdq
sub
mov
sub
mov
cdq
sub
mov
sar
sar
sub
mov
sub
mov
mov
add
cdq
sub
mov
mov
cdq
sub
sar
sar
sub
cmp
jge
mov
jmp
add
cmp
jle
sub
add
mov
cmp
pop
jge
mov
jmp
mov
add
cmp
jle
mov
sub
add
push
push
push
push
push
mov
push
call
pop
pop
leave
ret
sub
push
push
push
xor
push
inc
xor
test
mov
mov
mov
je
call
test
je
xor
push
call
or
mov
call
mov
mov
jmp
push
push
push
push
push
call
test
jne
cmp
je
push
mov
call
push
call
xor
test
jne
cmp
je
cmp
jne
push
push
push
push
call
test
jne
push
push
push
push
call
inc
test
jne
mov
cmp
jne
call
test
je
cmp
je
mov
mov
cmp
je
cmp
jne
push
mov
call
push
call
xor
mov
mov
call
test
je
push
call
test
pop
je
mov
mov
push
push
push
push
push
call
test
jne
jmp
push
call
or
jmp
and
mov
pop
pop
pop
pop
add
ret
mov
mov
mov
test
je
and
mov
xor
push
push
push
push
call
ret
push
mov
call
push
call
pop
mov
mov
xor
cmp
mov
je
call
call
ret
push
mov
call
mov
mov
and
test
je
call
call
ret
push
mov
cmp
jne
push
call
test
mov
jne
push
call
test
mov
setne
mov
mov
pop
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
and
lea
push
call
push
call
mov
test
je
and
lea
push
mov
call
mov
xor
test
setne
test
jne
jmp
call
mov
call
call
ret
cmp
je
push
push
call
ret
push
mov
cmp
jne
push
call
push
call
mov
mov
mov
mov
pop
ret
push
push
call
mov
xor
mov
lea
push
call
push
call
mov
mov
cmp
jne
xor
jmp
mov
lea
push
mov
call
mov
xor
cmp
setne
cmp
jne
call
push
call
mov
mov
call
mov
call
ret
cmp
je
xor
cmp
sete
mov
test
je
call
mov
jmp
xor
push
push
call
test
je
push
call
ret
push
call
mov
mov
call
ret
jmp
push
push
mov
call
mov
test
jne
jmp
call
mov
call
movsx
shr
movsx
mov
mov
lea
pop
ret
push
mov
push
mov
call
test
jne
jmp
push
mov
push
mov
push
call
pop
ret
push
mov
call
call
mov
cmp
jne
cmp
je
push
call
push
mov
call
pop
mov
mov
and
test
je
push
push
push
push
push
call
jmp
xor
or
push
mov
call
mov
call
ret
push
push
push
call
push
mov
mov
call
mov
push
mov
call
mov
pop
pop
ret
push
call
mov
xor
test
je
add
jmp
ret
push
mov
test
push
mov
jne
xor
jmp
push
push
call
mov
push
lea
mov
call
push
mov
mov
call
xor
inc
pop
pop
pop
ret
push
mov
push
mov
test
je
push
call
test
je
push
lea
call
and
and
mov
pop
pop
ret
push
push
mov
call
mov
test
jne
jmp
call
cmp
je
mov
test
je
push
call
and
cmp
je
and
xor
pop
ret
xor
inc
pop
ret
push
mov
mov
test
je
mov
push
call
mov
and
test
je
mov
push
push
push
call
mov
test
je
mov
push
call
mov
pop
jmp
push
mov
sub
push
push
push
mov
call
mov
xor
cmp
je
cmp
jne
call
cmp
jne
call
cmp
jne
call
test
je
push
call
mov
cmp
jne
mov
mov
cmp
je
mov
call
mov
mov
xor
inc
test
je
mov
push
call
and
test
je
call
mov
test
je
cmp
je
push
lea
push
push
call
mov
add
mov
mov
lea
push
push
push
push
mov
mov
call
mov
mov
push
push
call
mov
mov
call
mov
push
push
call
cmp
jne
mov
mov
call
mov
test
je
push
push
push
call
mov
call
mov
mov
call
pop
pop
pop
leave
ret
push
mov
mov
push
xor
cmp
jne
cmp
jne
xor
jmp
cmp
je
push
call
cmp
jne
jmp
push
lea
call
mov
cmp
jne
cmp
je
cmp
jne
push
call
jmp
mov
mov
call
mov
mov
pop
pop
ret
push
mov
sub
mov
push
mov
mov
mov
push
mov
mov
call
test
jne
call
mov
lea
push
sub
push
mov
mov
push
mov
call
pop
leave
ret
push
mov
push
push
push
push
call
mov
mov
test
je
push
call
test
je
push
push
push
call
test
jne
cmp
push
jne
call
jmp
call
test
jne
push
call
jmp
push
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
pop
ret
push
push
mov
mov
jmp
push
call
test
je
mov
push
mov
call
test
jne
cmp
je
push
call
mov
test
jne
xor
pop
pop
ret
xor
inc
jmp
push
mov
push
mov
call
test
jne
call
push
mov
push
mov
push
push
call
pop
ret
push
mov
cmp
je
mov
mov
call
test
jne
mov
call
pop
ret
push
push
push
mov
call
test
jne
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
push
push
push
push
call
xor
inc
jmp
mov
call
neg
sbb
neg
pop
pop
pop
ret
push
mov
push
push
mov
cmp
jne
call
jmp
mov
and
lea
push
push
mov
push
call
test
jge
mov
jmp
mov
pop
leave
ret
push
mov
mov
test
je
push
call
test
jne
mov
call
pop
ret
push
mov
sub
push
push
push
mov
mov
mov
jmp
lea
push
call
push
push
push
push
lea
push
call
test
jne
mov
call
pop
pop
pop
leave
ret
push
mov
push
lea
mov
mov
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
push
push
lea
push
xor
call
mov
mov
call
cmp
je
push
call
test
je
mov
jmp
mov
and
cmp
jne
call
mov
mov
call
mov
mov
pop
leave
ret
push
mov
mov
push
call
mov
push
push
push
call
and
pop
mov
pop
jmp
push
call
test
je
mov
ret
xor
ret
push
mov
sub
test
jne
push
mov
mov
call
test
jne
lea
push
push
call
mov
mov
cmp
jne
mov
cmp
jne
push
push
call
push
call
test
je
mov
call
test
jne
mov
mov
call
test
je
push
mov
call
pop
leave
ret
push
mov
call
push
mov
call
mov
xor
xor
cmp
setne
mov
cmp
jne
call
lea
push
mov
pop
lea
rep
mov
mov
cmp
mov
mov
mov
mov
mov
mov
mov
mov
jne
cmp
je
mov
mov
push
call
and
cmp
jne
lea
push
lea
push
push
call
push
mov
push
mov
push
call
cmp
mov
jne
push
lea
push
push
call
jmp
mov
add
push
push
call
mov
mov
call
mov
ret
mov
mov
push
lea
pop
lea
rep
call
ret
push
mov
cmp
jne
xor
inc
jmp
push
mov
push
call
test
je
cmp
jne
push
push
push
push
push
call
jmp
push
push
push
push
call
pop
pop
ret
push
mov
call
mov
mov
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
call
mov
test
je
mov
push
call
mov
test
je
cmp
jne
and
or
mov
call
call
ret
push
mov
push
mov
mov
test
je
lea
push
call
test
je
mov
jmp
mov
call
pop
pop
ret
push
mov
cmp
push
mov
jne
push
mov
call
test
jne
call
mov
cmp
jne
push
jmp
push
call
push
call
test
je
push
push
call
test
je
mov
push
mov
call
jmp
mov
push
push
push
call
test
je
push
mov
call
test
jne
mov
call
pop
pop
ret
test
je
mov
test
jne
xor
ret
push
push
mov
push
jmp
mov
mov
call
test
jne
push
call
push
call
mov
test
jne
pop
pop
ret
mov
jmp
push
mov
test
je
cmp
jne
xor
pop
ret
mov
call
test
jne
mov
call
mov
test
je
mov
jmp
mov
mov
call
test
jne
mov
pop
ret
push
mov
push
push
push
mov
call
jmp
cmp
je
push
call
test
je
push
push
push
push
push
call
jmp
push
push
push
push
call
cmp
je
push
call
test
je
push
push
push
push
push
push
call
push
push
call
mov
test
jne
pop
pop
pop
ret
push
mov
call
push
call
test
jne
xor
jmp
mov
lea
push
mov
call
test
jne
push
call
push
mov
call
test
je
mov
test
je
push
lea
call
mov
test
je
push
lea
call
push
and
lea
mov
call
and
xor
test
setne
or
mov
lea
call
mov
jmp
push
mov
call
call
ret
cmp
push
mov
je
cmp
jne
push
push
call
test
jne
mov
call
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
ret
push
mov
mov
xor
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
mov
mov
sub
mov
push
lea
push
movs
push
movs
push
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
push
push
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
mov
sub
mov
push
lea
movs
movs
movs
push
movs
call
pop
pop
pop
ret
push
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
pop
ret
mov
cmp
push
push
jne
mov
jmp
mov
mov
sub
mov
lea
movs
movs
movs
push
movs
call
pop
pop
ret
mov
mov
neg
sbb
and
add
ret
mov
mov
mov
mov
mov
xor
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
push
push
push
call
pop
ret
push
mov
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
push
push
call
pop
ret
mov
cmp
jne
mov
jmp
mov
push
mov
push
call
ret
mov
cmp
jne
mov
jmp
push
mov
push
mov
push
push
call
ret
mov
test
jne
push
call
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
cmp
push
mov
jne
push
call
test
je
mov
push
mov
call
jmp
push
push
call
test
jne
mov
call
pop
pop
ret
push
mov
push
lea
push
mov
push
mov
call
test
je
mov
jmp
mov
call
pop
pop
ret
mov
push
push
push
mov
call
test
jne
mov
call
pop
ret
push
push
call
push
mov
call
mov
test
jne
call
cmp
jne
push
call
test
pop
mov
jne
xor
jmp
push
push
call
test
mov
jne
push
call
and
jmp
push
call
push
push
push
push
call
pop
ret
push
mov
sub
mov
push
push
push
movzx
shr
xor
cmp
mov
mov
jne
cmp
jne
xor
jmp
lea
call
mov
push
lea
push
push
push
mov
mov
call
cmp
jne
xor
inc
jmp
mov
jmp
push
mov
call
cmp
jne
call
mov
cmp
je
push
push
call
test
jne
cmp
je
mov
push
push
push
mov
push
call
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
mov
push
push
mov
call
movzx
mov
mov
push
mov
mov
call
test
jne
call
mov
cmp
jne
xor
inc
jmp
push
push
call
test
jne
mov
push
lea
push
movzx
or
push
push
mov
mov
mov
mov
call
pop
pop
pop
leave
ret
push
mov
push
call
test
je
mov
call
test
je
mov
jmp
push
push
call
test
je
push
call
jmp
push
push
call
pop
ret
test
je
mov
test
jne
xor
ret
push
mov
push
jmp
mov
push
call
test
jne
push
call
pop
ret
push
mov
call
mov
test
je
cmp
jne
mov
call
mov
call
test
jne
push
push
push
push
push
push
call
mov
pop
jmp
push
mov
call
mov
test
je
cmp
jne
push
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
pop
ret
push
mov
call
cmp
jne
mov
call
mov
call
test
jne
call
push
push
push
push
push
push
call
mov
call
pop
ret
xor
push
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
ret
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
xor
inc
ret
xor
ret
cmp
jne
xor
ret
mov
mov
push
push
call
ret
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
inc
jmp
xor
ret
push
mov
cmp
push
push
push
je
mov
test
je
mov
test
jne
mov
jmp
push
and
call
test
je
mov
add
mov
push
call
mov
xor
jmp
mov
xor
test
sete
test
mov
jne
push
push
call
test
pop
pop
je
cmp
je
push
push
push
push
call
test
je
cmp
jne
test
jl
add
mov
test
jne
mov
jmp
mov
pop
pop
pop
pop
ret
mov
mov
mov
mov
call
jmp
mov
inc
mov
ret
mov
dec
push
mov
jne
test
je
mov
push
call
mov
pop
ret
push
push
push
push
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
sub
jmp
push
mov
push
push
push
mov
mov
call
test
jne
push
mov
call
mov
test
je
push
mov
test
je
push
call
test
je
mov
call
cmp
je
test
mov
mov
jne
and
jmp
mov
mov
lea
push
push
push
push
call
pop
pop
pop
leave
ret
push
mov
cmp
push
jne
cmp
je
cmp
je
cmp
jne
mov
call
test
je
push
call
push
call
mov
test
je
call
push
call
cmp
je
mov
call
test
je
push
call
xor
inc
jmp
xor
pop
pop
ret
push
mov
call
mov
mov
push
push
call
and
and
mov
mov
xor
inc
sub
je
sub
je
sub
je
sub
jne
push
call
mov
lea
push
lea
push
push
call
push
push
push
push
push
call
push
mov
lea
push
push
call
mov
call
ret
push
push
push
call
push
push
call
push
call
push
call
jmp
push
call
mov
shr
push
movsx
push
push
call
xor
test
sete
jmp
push
call
push
mov
call
push
push
push
call
test
je
push
push
push
push
push
call
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
mov
mov
call
mov
ret
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
push
mov
mov
call
mov
xor
test
setne
test
jne
call
cmp
je
push
push
push
push
call
jmp
mov
mov
mov
call
test
movzx
mov
jne
mov
test
jne
test
jne
cmp
jne
push
pop
push
push
lea
push
call
lea
mov
push
mov
push
push
call
add
test
mov
je
push
push
call
movzx
cmp
jne
jmp
push
lea
call
and
push
mov
call
mov
mov
call
mov
mov
call
mov
push
push
push
mov
call
cmp
je
mov
mov
and
or
cmp
je
push
push
call
jmp
push
lea
push
push
call
test
je
and
lea
push
push
call
test
pop
pop
je
push
push
call
test
mov
je
mov
push
push
call
test
jne
push
push
push
call
push
push
call
cmp
jne
push
call
push
push
push
call
push
push
push
push
call
cmp
mov
je
push
call
and
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
push
mov
call
mov
test
jne
call
push
mov
cmp
je
cmp
jne
call
push
push
push
push
call
test
mov
jne
call
mov
pop
pop
ret
push
mov
sub
push
push
mov
test
mov
je
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
lea
mov
mov
push
mov
call
test
jne
mov
mov
call
xor
jmp
push
call
push
push
push
push
push
push
push
push
push
push
push
push
call
add
mov
call
test
jne
mov
mov
call
xor
test
setne
pop
pop
leave
ret
push
push
mov
mov
push
call
test
je
mov
mov
call
mov
xor
push
push
push
push
call
push
push
push
push
push
push
call
mov
call
mov
cmp
jne
jmp
push
push
push
push
call
push
push
push
push
push
push
call
call
cmp
je
push
push
push
push
call
pop
pop
pop
ret
push
mov
call
mov
xor
mov
mov
mov
cmp
mov
jne
push
mov
push
call
test
je
mov
jmp
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
jne
jmp
cmp
mov
jne
push
call
push
push
push
call
cmp
jne
mov
shr
push
movsx
push
push
call
test
jne
mov
test
je
cmp
jle
cmp
jb
cmp
jbe
cmp
jb
cmp
jbe
lea
cmp
ja
mov
mov
lea
push
push
push
push
call
test
jne
mov
mov
call
mov
xor
push
lea
mov
and
call
imul
mov
add
cmp
mov
jne
mov
mov
cmp
jne
mov
lea
mov
call
test
je
cmp
jb
jmp
mov
mov
mov
mov
mov
jmp
cmp
push
push
jae
push
push
call
test
mov
je
mov
mov
lea
call
mov
mov
mov
lea
cmp
ja
jmp
mov
mov
push
push
jmp
mov
mov
cmp
je
push
push
push
add
push
call
mov
test
jne
mov
call
mov
mov
cmp
jne
mov
and
lea
call
or
lea
call
xor
call
ret
movsx
shr
movsx
push
push
jmp
push
call
push
mov
call
jmp
push
jmp
mov
call
jmp
push
call
push
jmp
mov
shr
push
movzx
push
push
call
push
mov
call
jmp
push
push
call
jmp
push
jmp
lea
call
mov
lea
mov
mov
call
mov
mov
push
mov
mov
call
test
jne
mov
test
je
push
lea
call
test
je
mov
lea
push
push
lea
push
mov
call
and
and
lea
mov
mov
call
jmp
lea
call
mov
push
mov
lea
push
mov
mov
call
and
mov
lea
mov
call
jmp
mov
shr
push
push
call
push
movzx
jmp
mov
shr
push
movzx
jmp
push
call
push
mov
shr
jmp
mov
call
jmp
push
jmp
mov
shr
push
movzx
jmp
mov
shr
movsx
push
movsx
jmp
mov
shr
push
movzx
jmp
push
call
push
push
call
push
xor
cmp
sete
jmp
push
call
jmp
push
call
jmp
mov
shr
movsx
push
movsx
push
push
call
jmp
push
jmp
push
call
push
jmp
mov
shr
push
movzx
jmp
movsx
shr
movsx
push
push
push
call
jmp
push
push
call
push
jmp
mov
shr
push
push
call
jmp
mov
movsx
shr
cmp
movsx
mov
mov
jne
push
call
push
push
push
jmp
push
push
jmp
push
push
mov
call
jmp
push
mov
call
jmp
mov
push
shr
push
movzx
push
jmp
movsx
shr
movsx
push
push
push
mov
call
jmp
push
push
mov
call
jmp
movsx
shr
movsx
push
push
mov
shr
push
movzx
push
mov
call
mov
jmp
mov
call
test
mov
je
jmp
mov
lea
mov
call
mov
push
push
mov
call
mov
mov
test
je
mov
mov
or
lea
call
xor
inc
jmp
nop
jo
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
outs
inc
add
jo
add
outs
inc
add
outs
inc
add
jb
add
jno
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
outs
inc
add
outs
inc
add
jo
add
jo
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
inc
add
jno
add
add
add
jno
add
jno
add
jb
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
outs
inc
add
in
mov
sub
mov
cmp
push
ja
je
cmp
jb
cmp
jbe
cmp
je
cmp
jne
mov
mov
mov
mov
mov
xor
push
lea
push
movzx
or
push
push
call
jmp
mov
xor
push
shr
push
or
push
push
call
test
je
mov
xor
inc
cmp
je
mov
jmp
cmp
jb
cmp
jbe
cmp
jne
push
add
push
push
push
call
jmp
lea
cmp
ja
mov
push
mov
add
push
mov
lea
push
xor
push
push
mov
call
cmp
pop
jne
xor
pop
leave
ret
and
push
mov
cmp
je
mov
mov
push
call
push
push
mov
call
pop
ret
push
mov
call
mov
xor
cmp
jne
mov
jmp
push
mov
mov
mov
call
pop
mov
mov
cmp
mov
je
push
call
jmp
xor
jmp
mov
call
mov
ret
mov
xor
mov
cmp
je
mov
mov
mov
call
ret
push
sub
lea
mov
xor
mov
push
mov
call
and
call
mov
call
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
push
lea
call
mov
mov
xor
push
push
lea
push
mov
mov
call
test
je
lea
push
push
push
push
lea
push
push
call
add
jmp
push
push
push
lea
push
push
call
add
push
push
mov
push
call
lea
mov
call
mov
push
mov
call
mov
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
push
mov
call
mov
call
mov
call
mov
call
and
mov
call
mov
call
test
jne
call
push
push
push
push
call
test
jne
push
push
push
call
or
lea
call
call
ret
mov
ret
push
mov
cmp
je
push
push
mov
push
lea
push
push
call
add
cmp
pop
ja
test
jne
pop
ret
mov
test
je
mov
xor
inc
jmp
pop
jmp
push
mov
call
mov
cmp
mov
jne
mov
call
mov
test
jl
mov
test
jne
lea
push
call
mov
test
jl
and
mov
mov
and
lea
push
push
push
call
test
jl
mov
lea
push
lea
push
mov
mov
push
call
push
push
push
call
mov
mov
mov
or
xor
test
je
mov
push
call
jmp
push
push
push
call
mov
mov
xor
mov
call
ret
push
mov
call
mov
lea
push
push
push
call
add
test
jne
push
call
test
pop
jne
xor
jmp
call
cmp
je
push
call
and
call
mov
lea
push
mov
call
push
mov
call
or
push
call
xor
inc
call
ret
push
call
push
push
call
int3
push
mov
sub
push
mov
push
xor
cmp
mov
mov
je
push
movzx
cmp
je
inc
inc
movzx
movzx
inc
inc
mov
add
cmp
mov
je
cmp
jne
mov
jmp
cmp
jne
mov
cmp
jne
push
pop
xor
lea
rep
or
push
lea
mov
call
mov
mov
lea
push
push
movzx
push
push
mov
push
call
cmp
jne
and
mov
add
call
xor
jmp
cmp
je
cmp
jne
push
movzx
push
push
movzx
push
mov
push
call
cmp
jne
mov
add
cmp
jne
cmp
pop
je
mov
push
push
push
push
push
push
call
mov
pop
pop
leave
ret
mov
push
mov
push
mov
call
movzx
mov
mov
push
push
call
test
mov
jne
push
push
call
mov
push
call
pop
pop
ret
push
mov
sub
call
mov
mov
not
and
jne
xor
inc
jmp
push
push
push
push
xor
lea
push
push
xor
call
mov
add
mov
call
test
mov
push
mov
mov
pop
mov
mov
je
lea
push
mov
mov
call
test
je
inc
test
je
or
lea
push
mov
call
test
je
or
test
je
lea
push
mov
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
push
lea
push
mov
mov
call
test
je
or
test
je
push
lea
push
mov
call
or
and
test
je
push
lea
push
mov
call
or
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
test
je
push
lea
push
mov
call
or
mov
or
mov
mov
mov
and
cmp
jne
or
mov
or
mov
and
pop
sub
pop
neg
sbb
inc
pop
leave
ret
push
mov
cmp
jne
push
call
mov
xor
inc
pop
ret
push
push
push
push
xor
xor
cmp
mov
je
call
mov
push
push
push
call
test
je
push
push
call
mov
test
je
push
call
mov
push
mov
call
test
mov
je
test
je
push
call
mov
pop
pop
pop
pop
ret
push
mov
mov
test
jne
call
mov
push
xor
inc
test
je
mov
mov
mov
mov
jmp
mov
add
cmp
push
ja
jmp
call
jmp
call
jmp
push
call
jmp
push
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
push
push
call
jmp
mov
test
je
push
call
xor
cmp
sete
and
jmp
mov
test
je
push
push
call
jmp
push
jmp
push
call
mov
mov
jmp
xor
pop
pop
pop
ret
lea
dec
jge
add
inc
add
inc
add
inc
add
inc
add
jge
add
jge
add
jge
add
jge
add
jge
add
in
mov
cmp
push
mov
jne
call
cmp
jne
call
call
push
mov
push
mov
push
mov
push
call
jmp
cmp
push
push
jne
mov
and
test
je
mov
mov
mov
call
mov
jmp
cmp
jne
mov
jmp
cmp
je
cmp
jne
cmp
jne
cmp
jne
cmp
je
jmp
mov
test
je
push
push
call
test
pop
pop
je
mov
mov
mov
add
mov
test
jne
mov
test
jne
mov
jmp
cmp
je
mov
shr
movzx
mov
jne
mov
mov
call
jmp
push
push
push
push
call
test
jne
call
mov
cmp
jne
xor
pop
pop
pop
pop
ret
push
push
push
push
push
push
push
call
jmp
mov
ret
mov
ret
mov
ret
mov
ret
push
push
mov
call
mov
mov
call
test
je
mov
call
push
call
mov
push
mov
call
pop
ret
mov
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
ret
push
push
push
push
push
call
ret
push
mov
call
mov
xor
inc
xor
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
lea
mov
test
je
call
and
pop
ret
call
mov
mov
push
mov
call
ret
call
mov
mov
push
mov
call
ret
mov
ret
push
push
mov
mov
xor
cmp
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
add
or
push
push
push
call
jmp
cmp
je
cmp
jne
push
mov
call
cmp
jne
push
call
push
call
push
push
push
push
call
pop
push
mov
call
mov
pop
pop
ret
push
mov
mov
test
je
cmp
jne
mov
cmp
jb
call
mov
neg
sbb
and
or
push
push
push
call
jmp
mov
test
je
push
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
pop
pop
ret
push
mov
test
push
push
mov
jne
call
mov
test
je
cmp
jne
mov
mov
push
push
push
call
mov
and
cmp
jae
push
push
or
push
push
mov
call
jmp
mov
test
je
push
push
call
pop
pop
pop
ret
push
lea
sub
mov
xor
mov
push
push
push
call
movsx
shr
cmp
movsx
mov
jle
cmp
jg
jmp
cmp
jle
push
pop
lea
cdq
sub
lea
sar
mov
sar
mov
shl
add
sub
cmp
jle
push
pop
push
pop
cmp
jle
mov
push
lea
push
push
call
mov
add
sar
add
imul
lea
lea
mov
mov
mov
movzx
mov
shl
inc
not
movzx
mov
mov
add
dec
jne
lea
push
push
push
push
push
call
test
pop
pop
mov
pop
jne
push
push
call
mov
mov
xor
call
add
leave
ret
push
mov
mov
push
xor
xor
cmp
setne
push
mov
call
cmp
je
cmp
jne
mov
cmp
jb
call
cmp
jne
call
cmp
je
push
mov
push
push
push
push
call
pop
pop
ret
push
push
mov
test
mov
je
cmp
je
cmp
je
call
cmp
je
push
call
add
cmp
jle
push
call
test
jle
cmp
jne
mov
jmp
push
and
call
push
call
pop
pop
ret
cmp
je
mov
mov
jmp
xor
inc
ret
cmp
jne
call
lea
cmp
je
mov
mov
mov
jmp
ret
cmp
jne
call
mov
mov
jmp
mov
mov
test
jne
call
add
cmp
jne
mov
push
call
jmp
mov
mov
push
mov
call
ret
cmp
je
mov
mov
jmp
xor
ret
mov
test
jl
cmp
jl
call
mov
lea
ret
mov
push
push
push
push
call
ret
push
mov
mov
test
jne
call
mov
mov
cmp
jb
push
mov
add
cmp
jb
call
lea
push
call
mov
mov
push
mov
call
test
jne
mov
mov
push
call
xor
pop
inc
pop
ret
push
mov
sub
push
push
push
lea
push
xor
mov
push
push
push
mov
push
mov
mov
mov
mov
call
test
jne
lea
push
lea
push
push
push
push
push
push
push
mov
push
call
test
jne
lea
push
lea
push
mov
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
je
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
xor
push
mov
call
mov
cmp
jne
xor
jmp
lea
push
lea
push
push
push
push
push
push
push
push
call
push
call
mov
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
cmp
push
mov
je
push
call
mov
test
je
push
lea
push
push
push
push
push
call
push
mov
call
xor
test
sete
jmp
push
lea
push
push
push
call
add
push
lea
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
mov
test
push
mov
push
jne
call
test
je
push
call
and
push
mov
lea
push
push
call
mov
add
cmp
ja
push
lea
push
push
call
cmp
jne
push
lea
push
call
test
je
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
test
jne
call
mov
test
je
push
call
and
pop
ret
push
mov
test
je
push
push
call
mov
and
je
push
dec
call
test
jne
push
call
pop
pop
ret
push
call
mov
test
je
mov
test
je
push
call
pop
mov
lea
cmp
ja
push
call
and
jmp
sub
sub
push
push
call
pop
pop
xor
inc
pop
ret
jmp
push
mov
sub
mov
xor
mov
mov
push
mov
push
lea
push
push
call
lea
push
push
call
pop
neg
pop
mov
sbb
xor
inc
pop
call
leave
ret
push
mov
sub
push
push
lea
push
push
call
mov
push
push
jmp
push
call
test
je
push
push
call
test
je
lea
push
push
call
push
lea
push
push
call
test
jne
push
push
call
mov
test
jne
pop
pop
leave
ret
mov
jmp
cmp
jne
xor
ret
mov
mov
jmp
cmp
jne
call
mov
mov
jmp
push
sub
lea
mov
xor
mov
push
mov
call
mov
mov
mov
lea
push
push
push
mov
mov
call
mov
test
jne
push
lea
push
push
push
call
mov
test
jne
and
lea
push
lea
call
lea
push
push
mov
call
mov
mov
test
setne
add
mov
call
test
jne
or
jmp
mov
mov
call
mov
ret
mov
mov
cmp
je
cmp
jne
push
push
call
mov
push
call
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
push
sub
lea
mov
xor
mov
push
mov
call
xor
mov
mov
mov
call
cmp
mov
je
lea
push
mov
call
cmp
je
mov
push
push
push
push
mov
call
cmp
jne
cmp
je
xor
cmp
setne
cmp
jne
jmp
push
lea
call
push
lea
mov
call
push
lea
push
lea
push
call
push
mov
push
lea
push
call
add
mov
add
mov
call
lea
push
mov
push
call
lea
push
push
push
call
test
jne
push
lea
push
push
push
call
cmp
jne
lea
push
push
call
push
call
lea
push
lea
push
push
push
call
mov
add
call
mov
add
call
xor
inc
mov
mov
pop
pop
pop
pop
mov
xor
call
add
leave
ret
call
xor
cmp
sete
mov
ret
call
add
push
call
ret
call
mov
mov
ret
call
mov
ret
call
cmp
jne
push
push
call
call
mov
test
je
mov
test
je
call
test
je
mov
mov
pop
jmp
call
cmp
jne
push
call
pop
ret
call
add
push
call
test
jne
jmp
ret
push
push
mov
test
mov
jne
push
pop
mov
test
je
push
call
and
pop
cmp
je
xor
push
pop
mov
mul
seto
neg
or
push
call
mov
shl
push
push
push
mov
call
add
mov
pop
pop
ret
push
mov
mov
test
je
push
call
and
pop
mov
and
and
call
and
pop
ret
mov
mov
mov
dec
mov
jne
call
ret
mov
push
mov
mov
shr
mov
xor
div
mov
mov
mov
test
je
mov
jmp
cmp
je
mov
test
jne
xor
pop
ret
test
jne
call
push
mov
test
jne
xor
jmp
push
mov
mov
xor
shr
div
mov
jmp
cmp
je
mov
test
jne
xor
pop
pop
ret
mov
jmp
push
mov
test
jne
xor
jmp
push
mov
mov
shr
xor
div
lea
mov
jmp
cmp
je
mov
mov
test
jne
pop
pop
ret
mov
push
mov
call
xor
inc
jmp
mov
push
mov
test
je
cmp
push
jne
mov
xor
test
jbe
mov
mov
test
jne
inc
add
cmp
jb
call
mov
test
jne
mov
shr
xor
push
mov
div
inc
cmp
jae
mov
lea
mov
test
jne
inc
add
cmp
jb
pop
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
mov
ret
mov
mov
xor
cmp
mov
jg
push
pop
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
inc
mov
and
and
pop
ret
push
mov
push
push
push
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
push
push
mov
call
mov
call
mov
mov
mov
shl
mov
mov
mov
mov
pop
add
pop
leave
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
call
inc
ret
push
mov
call
mov
mov
mov
push
mov
push
lea
call
and
push
lea
call
lea
push
mov
mov
call
xor
cmp
mov
jne
call
cmp
je
push
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
push
mov
call
mov
mov
test
jne
xor
call
ret
push
lea
call
test
jne
lea
push
call
test
je
mov
add
mov
cmp
jne
mov
jmp
push
call
and
lea
mov
call
mov
test
jne
call
push
call
push
lea
call
push
or
mov
call
mov
add
mov
cmp
jne
mov
mov
jmp
push
call
push
push
call
int3
push
mov
sub
push
mov
test
je
mov
neg
sbb
mov
je
push
lea
lea
push
lea
push
lea
push
mov
call
mov
add
and
cmp
jne
and
push
call
cmp
jne
pop
lea
call
lea
call
pop
leave
ret
push
mov
call
mov
mov
mov
mov
call
lea
mov
call
lea
mov
call
or
lea
call
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
call
mov
mov
xor
cmp
je
dec
cmp
mov
jne
cmp
je
cmp
je
call
cmp
je
mov
cmp
je
push
push
call
mov
call
mov
call
mov
call
mov
call
mov
call
push
call
mov
mov
call
mov
test
je
test
je
mov
test
je
push
call
cmp
pop
jae
cmp
je
mov
and
test
je
push
call
push
mov
call
pop
pop
push
call
test
pop
mov
jne
cmp
je
push
call
pop
mov
pop
xor
cmp
pop
setne
pop
pop
ret
push
mov
mov
push
xor
mov
mov
mov
mov
call
mov
pop
pop
ret
mov
test
jne
call
mov
mov
dec
mov
jne
call
ret
test
jne
jmp
mov
test
je
mov
test
push
mov
mov
je
and
jmp
and
push
call
mov
pop
ret
mov
test
jne
call
cmp
push
jne
mov
mov
jmp
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
mov
mov
push
call
pop
ret
mov
test
jne
mov
jmp
mov
cmp
je
mov
test
jne
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
ret
mov
jmp
push
mov
cmp
jne
push
push
lea
push
call
mov
mov
imul
add
dec
lea
js
mov
mov
mov
dec
sub
test
jge
mov
mov
mov
mov
mov
mov
mov
inc
and
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
ret
push
mov
test
push
mov
jne
push
call
jmp
push
push
call
mov
mov
mov
test
je
mov
jmp
mov
mov
pop
pop
ret
push
mov
mov
call
test
je
push
call
pop
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
mov
call
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
call
pop
mov
mov
jmp
mov
cmp
jne
cmp
ja
push
call
push
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
sub
push
add
push
push
call
add
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
cmp
jl
push
call
push
mov
push
push
push
call
mov
mov
sub
push
add
push
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
push
mov
mov
push
not
test
mov
push
mov
je
push
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
jmp
call
push
push
mov
call
mov
test
mov
jbe
mov
cmp
jae
mov
push
push
mov
call
add
sub
jne
pop
pop
pop
pop
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
xor
inc
ret
xor
ret
push
mov
call
push
mov
push
mov
and
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
mov
call
mov
mov
mov
and
push
push
call
mov
test
je
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
test
jne
mov
jmp
mov
mov
xor
ret
push
mov
call
mov
mov
mov
test
jne
mov
jmp
call
push
mov
push
and
push
mov
call
mov
test
je
mov
mov
xor
jmp
mov
call
mov
ret
mov
call
ret
mov
mov
mov
mov
ret
cmp
jb
call
movzx
mov
push
mov
push
add
jmp
cmp
je
test
mov
jne
mov
mov
and
cmp
jae
and
add
inc
mov
test
jne
pop
pop
ret
call
int3
mov
ret
mov
test
jl
cmp
jge
imul
add
ret
call
int3
mov
mov
mov
test
push
mov
mov
mov
mov
pop
je
test
jne
call
ret
cmp
je
push
call
pop
ret
mov
mov
or
sub
cmp
jae
mov
ret
add
mov
mov
xor
ret
push
mov
cmp
je
push
call
pop
test
je
push
call
pop
mov
pop
ret
mov
test
je
and
push
push
push
push
call
xor
add
inc
ret
push
push
call
mov
xor
mov
mov
push
push
lea
push
call
add
cmp
jge
mov
jmp
mov
call
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
call
mov
mov
lea
call
ret
push
mov
push
mov
push
push
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
cmp
je
xor
cmp
jle
mov
mov
add
push
call
add
inc
cmp
jl
push
call
pop
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
mov
jg
mov
mov
imul
push
call
push
xor
push
push
mov
call
add
cmp
jle
xor
mov
mov
add
je
mov
mov
add
dec
jne
jmp
cmp
jg
mov
cmp
jge
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
mov
mov
mov
sub
inc
cmp
jl
jmp
jle
sub
test
mov
jle
mov
imul
mov
push
add
call
mov
inc
sub
add
cmp
jl
jmp
mov
cmp
jne
mov
cdq
and
add
sar
cmp
jge
push
pop
jmp
mov
cmp
jle
mov
mov
add
cmp
mov
jl
mov
mov
cmp
jl
imul
push
call
mov
imul
push
push
mov
push
push
call
mov
mov
mov
sub
imul
imul
push
add
push
push
call
mov
sub
add
xor
test
jle
mov
add
imul
add
je
and
and
mov
sub
inc
cmp
jl
push
call
pop
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
mov
test
mov
je
test
jne
call
mov
mov
push
push
not
test
push
mov
mov
je
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
jmp
test
jbe
mov
cmp
jae
mov
mov
mov
imul
push
push
call
add
sub
test
ja
pop
pop
pop
pop
ret
mov
mov
cmp
je
cmp
mov
je
and
mov
mov
mov
mov
mov
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
mov
neg
sbb
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
cmp
mov
je
push
xor
cmp
jle
push
xor
mov
push
add
call
inc
add
cmp
jl
pop
push
call
pop
pop
pop
ret
push
push
mov
mov
not
test
mov
mov
je
push
call
jmp
call
push
push
mov
call
push
push
push
call
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
jmp
push
push
mov
test
mov
jge
call
cmp
jl
push
lea
push
call
push
mov
imul
add
call
pop
pop
ret
push
mov
mov
sub
mov
call
mov
sub
call
mov
sub
pop
jmp
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
add
cmp
je
cmp
jne
mov
mov
add
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
jmp
mov
movzx
mov
movzx
dec
mov
cmp
mov
je
test
je
and
or
cmp
jl
cmp
je
mov
mov
shl
cmp
lea
je
cmp
je
mov
push
push
add
push
push
mov
call
test
jl
mov
mov
jmp
cmp
jne
mov
and
mov
mov
jmp
cmp
jne
cmp
jne
mov
mov
mov
test
push
pop
je
cmp
jne
mov
test
je
mov
xor
cmp
push
setne
mov
call
test
pop
je
mov
mov
mov
jmp
and
push
push
lea
push
call
mov
and
push
push
mov
call
or
cmp
je
push
call
pop
mov
mov
push
pop
jmp
mov
mov
jmp
movzx
add
cmp
ja
jmp
movsx
jmp
movzx
jmp
movsx
jmp
movzx
jmp
mov
mov
mov
mov
add
jmp
fld
fstp
jmp
fld
fstp
jmp
xor
cmp
setne
jmp
mov
mov
add
inc
mov
cmp
jne
cmp
jle
mov
mov
mov
mov
jmp
mov
cmp
je
mov
mov
mov
mov
jmp
xor
call
ret
nop
aam
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
sahf
inc
add
sahf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
popf
inc
add
sahf
inc
add
popf
inc
add
popf
inc
add
mov
call
mov
push
lea
call
mov
mov
xor
cmp
mov
mov
mov
jne
lea
mov
push
call
test
mov
mov
mov
movzx
mov
je
lea
push
call
test
pop
jne
or
cmp
je
push
push
call
mov
jmp
mov
call
mov
mov
push
push
lea
push
push
call
movzx
and
mov
add
inc
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
mov
push
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
xor
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
or
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
call
test
je
mov
xor
mov
rep
mov
mov
rep
pop
pop
ret
call
mov
mov
mov
push
mov
push
push
push
call
add
xor
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
xor
mov
mov
shl
push
call
test
pop
jne
or
cmp
je
push
push
jmp
mov
cmp
ja
shl
mov
call
mov
mov
push
push
push
call
add
push
push
call
mov
lea
push
call
test
pop
je
mov
call
mov
xor
mov
mov
mov
mov
mov
mov
mov
lea
push
push
lea
push
mov
push
push
push
push
push
call
test
mov
jne
movzx
cmp
push
push
push
mov
je
cmp
je
cmp
je
add
cmp
ja
call
mov
mov
jmp
call
mov
jmp
call
fstp
jmp
call
fstp
fld
fstp
mov
mov
xor
cmp
jbe
mov
mov
push
call
add
inc
cmp
jb
cmp
lea
je
mov
call
or
cmp
je
push
push
call
mov
jmp
mov
xor
cmp
jbe
mov
push
call
inc
add
cmp
jb
push
push
call
call
mov
test
je
mov
mov
movzx
add
cmp
ja
jmp
mov
jmp
mov
mov
mov
mov
jmp
fld
fstp
jmp
fld
fstp
jmp
neg
sbb
mov
jmp
lea
mov
movs
movs
movs
movs
jmp
mov
jmp
movzx
sub
je
dec
je
sub
je
dec
jne
test
je
mov
push
call
jmp
lea
push
call
jmp
push
call
lea
mov
call
or
cmp
je
push
push
call
xor
lea
call
ret
lea
xor
mov
inc
add
mov
inc
add
mov
inc
add
inc
add
inc
add
mov
inc
add
inc
add
inc
add
inc
add
mov
inc
add
inc
add
mov
inc
add
mov
call
mov
mov
call
lea
mov
mov
call
and
lea
call
lea
call
mov
mov
mov
add
neg
sbb
and
cmp
mov
mov
mov
je
push
mov
call
neg
mov
sbb
and
add
mov
call
ret
push
lea
sub
mov
xor
mov
push
push
mov
push
mov
push
push
push
call
add
lea
push
mov
mov
call
test
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
cmp
je
push
lea
call
push
call
mov
add
mov
call
add
mov
cmp
je
push
lea
call
mov
push
call
lea
mov
call
jmp
push
mov
call
test
push
lea
push
je
push
call
mov
jmp
push
call
mov
push
lea
call
push
call
mov
add
mov
call
xor
cmp
jne
call
push
lea
call
push
call
mov
add
mov
call
cmp
jne
cmp
je
call
mov
push
lea
call
push
call
mov
add
mov
call
mov
pop
pop
xor
pop
call
add
leave
ret
push
mov
call
mov
mov
mov
mov
and
test
je
call
cmp
je
push
call
pop
or
mov
call
call
ret
mov
mov
cmp
jb
xor
ret
inc
cmp
mov
sbb
neg
ret
and
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
add
call
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
mov
cmp
jb
xor
jmp
mov
mov
imul
add
push
push
push
push
call
add
inc
xor
inc
pop
ret
push
mov
call
mov
push
add
lea
call
mov
and
test
je
and
mov
mov
mov
mov
mov
cmp
je
mov
push
mov
call
test
je
add
dec
jmp
mov
call
mov
ret
jmp
mov
test
je
sub
mov
xor
cmp
setne
mov
or
cmp
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
xor
mov
mov
mov
cmp
je
mov
mov
call
cmp
je
dec
jmp
mov
call
mov
ret
xor
xor
cmp
setne
or
cmp
mov
je
push
push
call
mov
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
mov
call
or
cmp
je
push
push
call
xor
call
ret
push
mov
call
mov
push
add
lea
call
mov
and
and
mov
mov
mov
mov
call
mov
mov
test
je
mov
jmp
mov
mov
add
push
call
add
and
mov
or
cmp
je
push
push
call
mov
call
ret
mov
call
mov
ret
push
mov
call
mov
mov
mov
and
and
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
push
call
pop
mov
mov
xor
cmp
mov
je
push
push
push
push
call
mov
mov
call
ret
mov
and
mov
ret
push
mov
mov
test
je
cmp
je
mov
push
call
and
pop
ret
push
mov
mov
test
je
push
call
and
pop
pop
ret
push
mov
call
mov
mov
mov
mov
pop
ret
push
push
mov
xor
cmp
jle
push
push
mov
call
cmp
je
push
mov
call
cmp
je
push
mov
call
push
mov
mov
call
mov
mov
xor
cmp
setne
inc
mov
cmp
jl
pop
pop
pop
ret
jmp
push
mov
call
mov
xor
cmp
je
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
cmp
je
push
call
mov
test
mov
je
lea
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
xor
push
pop
mul
seto
neg
or
push
call
mov
mov
shl
push
push
push
mov
call
mov
shl
add
cmp
lea
mov
mov
je
mov
add
lea
add
push
mov
mov
pop
mov
movzx
test
mov
mov
je
and
or
mov
movzx
mov
cmp
jg
je
dec
dec
cmp
ja
jmp
add
add
mov
mov
jmp
add
add
mov
jmp
mov
add
mov
add
mov
mov
mov
mov
jmp
add
mov
fld
add
fstp
jmp
add
mov
fld
add
fstp
jmp
add
add
mov
jmp
add
add
mov
push
mov
call
cmp
mov
je
test
jne
call
add
add
mov
neg
sbb
mov
jmp
add
mov
add
mov
movs
movs
movs
movs
mov
push
pop
jmp
sub
cmp
ja
jmp
add
add
mov
mov
neg
sbb
push
and
mov
push
push
lea
mov
call
push
push
lea
mov
call
cmp
mov
je
push
call
pop
jmp
add
add
mov
mov
sub
sub
inc
mov
cmp
mov
jne
mov
xor
lea
push
xor
call
cmp
je
lea
push
lea
push
push
call
mov
mov
or
mov
add
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
lea
mov
call
mov
cmp
je
mov
shl
lea
jmp
cmp
jne
push
call
sub
inc
cmp
jne
push
call
cmp
pop
mov
jge
lea
push
call
cmp
je
push
call
cmp
je
lea
push
call
push
call
pop
mov
cmp
mov
je
push
mov
push
push
call
mov
push
mov
mov
call
test
je
push
lea
call
push
mov
call
push
call
test
je
push
lea
call
push
call
push
call
test
je
push
lea
call
push
call
mov
mov
mov
mov
push
lea
push
mov
call
mov
cmp
je
cmp
je
push
push
lea
push
push
call
mov
cmp
jge
lea
push
call
push
jmp
movzx
add
cmp
ja
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
mov
mov
mov
mov
jmp
fld
mov
fstp
jmp
fld
mov
fstp
jmp
push
push
call
push
call
jmp
mov
xor
cmp
setne
mov
jmp
mov
lea
movs
movs
movs
movs
xor
jmp
mov
mov
mov
lea
mov
call
or
cmp
je
push
call
pop
call
ret
mov
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
test
inc
add
test
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
test
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
lods
inc
add
inc
add
inc
add
add
add
inc
add
inc
add
inc
add
stos
inc
add
stos
inc
add
lods
inc
add
inc
add
lods
inc
add
lods
inc
add
mov
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
push
mov
call
mov
pop
mov
pop
ret
call
call
call
cmp
jne
push
call
mov
test
je
mov
test
je
mov
push
call
and
call
lea
cmp
jne
call
call
and
pop
ret
cmp
je
push
call
jmp
cmp
push
mov
jne
call
inc
mov
call
sub
cmp
jbe
call
call
mov
pop
ret
push
mov
call
call
mov
call
xor
cmp
je
or
jmp
push
call
cmp
jge
push
call
xor
jmp
mov
call
mov
cmp
mov
jne
push
call
pop
mov
mov
cmp
mov
je
call
jmp
xor
or
mov
call
mov
call
xor
inc
call
ret
mov
ret
push
call
mov
inc
pop
movs
jmp
int3
push
add
into
xor
mov
jmp
jp
sbb
fs
xchg
retf
mov
iret
jmp
sub
sysexit
mov
cwde
(bad)
push
dec
jbe
jae
xor
cmp
test
cld
push
(bad)
sub
ins
pushf
data16
enter
jmp
rol
and
out
das
loop
arpl
popf
cmc
stos
push
dec
push
push
pop
jmp
hlt
push
or
xor
ins
int
neg
js
and
xor
lods
dec
inc
pop
(bad)
cmp
outs
daa
sub
fcomp
jo
cli
stos
push
fcom
loop
xchg
jle
lsl
rol
add
or
mov
neg
(bad)
xchg
pop
mov
es
mov
fiadd
jb
cmp
test
daa
sar
loop
mov
outs
jo
loop
inc
or
js
push
push
jae
adc
out
stos
xor
clts
jmp
ds
pushf
xor
addr16
cmp
xchg
mov
mov
dec
xor
or
adc
scas
mov
aaa
sub
nop
or
xlat
cli
add
cmp
or
and
sbb
cmp
outs
jp
jb
mov
neg
lods
cld
call
push
add
mov
scas
mov
cli
mov
ret
iret
cmp
xchg
ficom
es
ins
xor
inc
mov
or
stos
sar
mov
in
imul
mov
push
push
stos
sar
leave
sbb
loope
out
mov
test
fisttp
pop
adc
imul
xchg
fild
xor
(bad)
mov
mov
inc
inc
out
daa
cmc
inc
push
mov
jae
push
fwait
(bad)
data16
dec
lock
mov
or
and
mov
jmp
jmp
call
sub
sbb
push
fs
inc
sbb
xchg
jp
scas
mov
mov
ins
aas
mov
dec
add
in
mov
je
call
mov
xchg
cmps
jae
mov
cmp
shr
and
dec
push
bound
loop
bound
int3
and
cmp
xor
push
enter
jo
or
cmp
dec
mov
les
and
mov
push
retf
mul
mov
inc
push
pop
xor
cli
inc
dec
adc
mov
xor
mov
(bad)
mov
aam
lahf
and
ret
dec
loopne
mov
and
inc
je
js
aad
jb
retf
mov
fcomp
mov
or
cmp
(bad)
ret
dec
cmc
mov
dec
sar
sbb
std
test
and
sbb
pusha
pop
shr
aas
pop
repnz
and
xor
sti
enter
mov
mov
add
mov
pop
dec
sbb
pusha
add
sub
sbb
(bad)
jnp
inc
es
sub
(bad)
retf
dec
dec
xchg
or
mov
stos
add
jns
xor
cmp
pop
rcl
jecxz
cmps
jmp
stos
inc
jl
pop
push
loopne
repnz
xor
bound
(bad)
ficomp
loopne
fidiv
movs
push
das
cmp
and
sub
fidivr
rcr
call
fidivr
and
shr
and
mov
cmp
mov
xor
rcr
xor
add
push
aad
push
rcr
cmp
jmp
(bad)
jb
iret
loop
aas
daa
adc
les
int
or
movs
or
or
movs
sti
repnz
in
sbb
mov
repnz
adc
imul
adc
clc
stos
cmps
sub
sti
or
cwde
out
jp
and
mov
sbb
inc
ret
mov
mov
sti
jnp
ja
pop
add
loopne
dec
sub
pop
adc
push
jmp
push
arpl
shr
jmp
xchg
iret
cwde
lahf
adc
pop
cmp
fisub
inc
or
outs
inc
and
pop
leave
popf
or
mov
pop
les
mov
xlat
pop
(bad)
mov
gs
add
xchg
mov
mov
mov
mov
push
arpl
fsubr
sub
jb
jl
(bad)
idiv
mov
cs
mov
add
add
jge
add
xor
loop
les
fdivp
outs
hlt
outs
mov
add
imul
push
fwait
or
lock
and
jbe
mov
rdpmc
push
ins
(bad)
mov
cld
clc
jp
xor
mov
xor
call
cmp
aas
or
repz
adc
add
mov
adc
call
out
or
sti
mov
xor
push
sbb
or
adc
vxorpd
movs
cmps
dec
clc
jmp
push
dec
jo
fistp
push
loopne
bound
jmp
ror
jmp
or
push
jb
mov
and
rol
ds
enter
in
jo
sub
fwait
inc
push
fs
fisttp
add
jmp
xor
shl
xor
or
push
xchg
in
popa
push
movs
hlt
arpl
cmp
das
into
pop
sub
mov
retf
shr
cmp
inc
das
mov
ins
loope
or
xchg
sbb
or
movs
and
push
xor
mov
stos
push
jl
movs
pop
mov
call
mov
mov
sub
fs
mov
js
xor
dec
xchg
sbb
clc
mov
out
repz
bound
call
mov
jb
xor
mov
mov
sub
in
add
or
lahf
inc
mov
pop
cld
jns
dec
aaa
cmp
mov
call
std
pop
scas
jle
aam
bound
bound
icebp
inc
add
jmp
or
mov
(bad)
pop
xor
cmp
jle
sbb
ret
dec
cmp
cwde
dec
mov
push
cmp
xchg
fist
ret
dec
sbb
jo
or
fwait
enter
mov
push
test
cmp
cmc
push
jo
ret
jl
sub
add
loope
repz
add
cmp
cmp
mov
jo
loopne
push
inc
loope
inc
retf
or
and
test
mov
jmp
in
pushw
or
es
(bad)
pop
inc
sar
dec
lock
or
ss
(bad)
ficom
int3
pop
retf
jnp
and
mov
sti
mov
dec
je
cmp
out
pop
xor
scas
and
add
mov
jb
gs
movs
repz
mov
rol
xor
and
xor
and
mul
sbb
inc
outs
push
push
adc
loope
sti
in
retf
mov
sub
pop
adc
xchg
xor
mov
retf
lds
rol
test
cmp
and
daa
inc
and
repnz
xchg
test
cli
cmp
xor
mov
pop
fst
daa
add
jbe
jp
inc
call
push
sti
cld
fwait
outs
adc
add
in
add
repnz
pushf
out
cwde
cmp
inc
cld
mov
aas
inc
dec
repnz
xor
(bad)
jnp
push
call
pop
sub
cli
cmp
push
mov
jmp
xchg
jne
adc
push
jmp
add
ds
jns
stc
jns
cmps
pop
mov
(bad)
jmp
xchg
lods
push
or
push
xchg
and
jb
loop
xchg
nop
push
dec
aam
dec
add
inc
test
or
jb
jnp
fcomp
aaa
aas
mov
cmps
into
xchg
dec
cmp
mov
icebp
jb
xchg
adc
xchg
mov
dec
idiv
in
push
adc
pop
mov
jae
test
test
mov
mov
call
mov
mov
test
xor
int3
mov
enter
sub
push
stos
inc
stos
jmp
jnp
fs
aaa
sbb
add
dec
and
daa
mov
xchg
push
(bad)
out
arpl
mov
sbb
aad
mov
push
inc
sub
es
loope
jp
and
add
mov
sub
mov
nop
cmp
or
(bad)
dec
pop
fst
jo
or
test
int
(bad)
call
adc
sub
sub
test
ja
push
sbb
push
pushf
jmp
adc
adc
stos
iret
jmp
jae
enter
nop
popa
leave
jl
bound
shl
movs
(bad)
dec
ins
or
ror
in
daa
mov
pushf
sbb
popf
xchg
xor
movs
fst
aam
ror
scas
xor
sub
mov
mov
sbb
clc
jmp
out
inc
dec
xor
or
pushf
(bad)
mov
mov
retf
not
and
xor
cmps
dec
cmps
out
mov
dec
push
or
mov
dec
xor
stos
pop
outs
fistp
retf
imul
mov
mov
enter
mov
mov
push
in
retf
cli
and
mov
sahf
lods
dec
pop
int
stos
add
fisubr
call
inc
and
aad
sbb
cmp
pop
cmp
dec
sbb
or
out
jo
dec
add
xchg
dec
inc
jecxz
xchg
rol
mov
or
retf
hlt
and
dec
xchg
jns
adc
dec
cld
add
inc
retf
jae
arpl
hlt
mov
mov
push
xlat
call
add
clc
div
cs
ret
enter
pop
inc
cmp
inc
int
lock
jb
push
cmp
pop
(bad)
pop
arpl
movs
push
pop
cli
cmp
adc
or
cdq
add
test
aaa
iret
sbb
dec
add
pop
lahf
sub
cmp
in
xchg
std
out
(bad)
jp
div
jae
cwde
ds
jg
sbb
jge
push
out
outs
sbb
pop
test
call
mov
add
lds
add
sbb
hlt
pop
cdq
cld
mov
fcom
mov
sbb
popa
pop
pop
and
push
lahf
or
mov
jmp
enter
inc
sahf
imul
xchg
xor
pop
test
and
cld
hlt
fs
inc
retf
jg
adc
scas
xor
dec
sbb
mov
inc
xor
pushw
ret
test
mov
cmp
rol
push
test
mov
nop
stos
dec
adc
fdivr
out
push
aaa
fxch
mov
mov
inc
xor
or
fisub
push
and
add
cdq
(bad)
cmp
and
je
stos
mov
scas
push
pop
pop
dec
mov
xor
cmps
jmp
in
push
push
popa
mov
mov
and
inc
rol
fbld
mov
(bad)
inc
clc
adc
mov
mov
xor
push
fsubr
ret
retf
cdq
ins
nop
into
xrelease
jbe
adc
dec
pop
or
cmp
dec
dec
cmps
dec
add
(bad)
or
fs
iret
retf
mov
xor
jge
pop
test
xor
sub
jmp
sbb
sbb
ffreep
(bad)
inc
jns
sti
jg
movs
stos
jmp
or
jo
mov
mov
and
sub
cmp
xor
pushf
and
(bad)
aaa
add
jl
mov
cmc
xchg
add
mov
mov
pop
sbb
out
ror
loop
repnz
xor
dec
dec
inc
push
jmp
cs
sub
pop
rcr
enter
aas
(bad)
arpl
inc
push
outs
or
add
in
es
jmp
cmp
jmp
mov
inc
push
fadd
imul
dec
or
pop
mov
jns
ret
rcl
pop
mov
dec
adc
rcl
dec
lds
std
inc
frstor
fisttp
pop
pop
mov
xor
inc
scas
imul
ret
sti
mov
mov
or
jne
sub
leave
jo
test
imul
scas
cmps
aad
sbb
call
inc
retf
in
pop
mov
stos
dec
sbb
mov
push
cmps
loopne
mov
or
cmp
and
mov
clc
or
or
add
cmp
sahf
mov
mov
pop
repnz
das
inc
dec
rcl
in
mov
cld
xor
outs
mov
push
xchg
lea
call
add
sub
jb
jecxz
xor
jecxz
mov
addr16
and
lahf
std
inc
cli
and
jb
pop
push
retf
bound
leave
and
and
rol
and
mov
int3
add
push
xchg
dec
adc
and
(bad)
jmp
dec
adc
ins
xor
popf
stc
mov
pop
cli
pop
jecxz
dec
mov
(bad)
fisub
inc
push
int3
fneni(8087
cli
mov
call
or
dec
enter
sbb
call
lock
clc
dec
daa
xor
pop
xchg
and
pop
fcmove
fdivp
xor
mov
out
out
int
dec
dec
mov
int3
jmp
cmp
call
push
xor
ret
add
arpl
mov
cdq
aad
inc
out
jp
xchg
inc
mov
push
push
jo
jb
cs
mov
sbb
adc
cli
jno
cmp
pop
into
mov
fidiv
out
cdq
mov
mov
push
lock
mov
mov
xor
vpcmpeqd
inc
arpl
ja
ja
sbb
add
xor
mov
out
enter
and
mov
xor
(bad)
movs
(bad)
adc
push
outs
cmps
xor
pop
cmp
fdivr
xchg
mov
or
adc
aas
sub
adc
int
and
adc
ret
mov
push
loop
jnp
fisttp
ret
retf
mov
fimul
cld
xchg
xchg
push
dec
js
ins
fist
sub
mov
adc
mov
shr
aaa
test
and
pop
stos
inc
or
push
movs
mov
cmc
jmp
mov
aaa
cli
mov
adc
scas
and
(bad)
dec
test
xor
jl
dec
add
xchg
movs
jecxz
and
jns
add
add
out
or
pop
sbb
push
sbb
inc
push
dec
retf
outs
add
inc
bound
mov
inc
jno
retf
scas
bound
xchg
mov
retf
mov
nop
sub
cmp
fimul
loope
push
jno
pusha
popf
shr
scas
or
pushf
push
data16
in
xchg
cld
jne
(bad)
cld
arpl
ins
inc
ret
test
hlt
adc
mov
jb
sub
call
xchg
jne
dec
imul
pop
pop
jbe
(bad)
stos
idiv
pushf
fbld
call
and
xchg
mov
push
aas
ins
push
aam
mov
adc
mov
lods
retf
mov
sub
jp
sub
fiadd
and
adc
mov
or
jb
or
xor
ror
push
and
bound
inc
sbb
jb
xchg
(bad)
repz
call
mov
cmp
imul
out
das
stos
adc
xor
bound
pop
mov
mov
inc
shl
aad
inc
ret
out
fistp
push
lea
lock
arpl
dec
xor
retf
loop
pop
dec
es
xor
jns
push
jp
xor
dec
sbb
popf
out
xchg
add
mov
fwait
adc
pop
icebp
jnp
sub
pop
dec
sti
xor
xor
test
cwde
add
ins
push
adc
push
xchg
imul
sub
sub
test
in
push
dec
jo
dec
push
inc
fld
cmp
inc
mov
stos
pop
call
mov
pop
and
push
ret
mov
jecxz
mov
sub
popa
sbb
dec
inc
jmp
dec
jg
outs
xor
or
push
cmps
dec
jge
pop
call
jg
push
adc
push
jmp
jp
jg
icebp
and
cmc
jb
or
mov
xchg
add
mov
sbb
outs
and
call
push
daa
jg
into
sbb
sar
xor
adc
ss
push
xor
jmp
inc
xchg
or
jmp
mov
pop
scas
outs
xor
pop
bound
add
pop
lods
popa
call
ss
xor
test
popf
sub
imul
retf
or
push
xor
sbb
daa
push
pop
adc
aad
push
fneni(8087
shl
arpl
(bad)
adc
jno
bound
mov
int
fcom
or
dec
xchg
jmp
popf
repnz
and
and
(bad)
mov
jmp
jmp
clc
jge
bound
mov
mov
and
xchg
and
pop
sahf
add
in
jb
call
imul
cmp
icebp
mov
dec
int3
adc
clc
inc
and
xor
rcl
or
and
repnz
pop
xor
(bad)
inc
dec
call
push
les
sub
into
dec
mov
adc
pop
fwait
cmp
cmp
jae
out
adc
lods
ror
pop
jnp
test
daa
leave
(bad)
cdq
stos
(bad)
sahf
mov
out
call
stos
mov
xlat
mov
shl
mov
sbb
fcomp
adc
push
jbe
or
or
adc
jne
push
cmc
push
jge
jg
(bad)
fcomp
stos
lods
shl
push
pushf
ja
sub
push
or
fidivr
gs
jecxz
add
lods
jle
in
and
mov
je
mov
inc
mov
push
jg
add
adc
sbb
xor
enter
pop
xor
retf
cmp
stos
pop
mov
enter
push
div
lock
arpl
ret
xor
cmp
outs
loopne
or
mov
mov
outs
adc
fwait
adc
mov
pop
jns
jp
test
jge
(bad)
push
ja
xchg
pop
ret
and
scas
mov
dec
test
pop
xor
pop
inc
mov
je
mov
add
jb
mov
daa
jle
jmp
js
clc
jne
daa
mov
scas
sbb
push
(bad)
or
aas
sbb
jmp
repz
push
mov
and
shl
fild
stos
sub
and
repz
adc
pop
lea
(bad)
nop
(bad)
fdivr
fstp
imul
and
(bad)
mov
cmp
mov
fiadd
add
pop
mov
mov
mov
cdq
xlat
sti
sub
mov
adc
mov
dec
retf
xchg
mov
or
or
into
or
int
retf
sar
rol
bound
jae
das
cmp
xor
movs
xchg
dec
pop
test
and
pop
mov
add
test
mov
fs
leave
xchg
xlat
cli
ins
adc
push
jb
push
cdq
(bad)
pop
mov
push
imul
bound
stos
dec
retf
push
in
lods
fnstenv
pop
xor
repz
jae
push
cmp
lods
sub
vpcmpgtb
lahf
cld
loope
xchg
cmp
ins
ret
cli
or
xchg
jp
leave
xlat
retf
lock
sub
cli
or
js
(bad)
inc
add
das
lds
call
test
movs
push
adc
outs
xchg
ins
rol
imul
jp
mov
push
jmp
jmp
imul
dec
xlat
xchg
sbb
je
shr
push
scas
cmp
cmp
rol
ret
pop
scas
ret
xchg
cmp
mov
(bad)
aam
mov
lahf
loope
cs
inc
jb
jb
mov
call
nop
or
out
das
push
push
std
jmp
repz
mov
jnp
daa
xor
mov
movs
jae
cmps
mov
mov
mov
fwait
sar
cli
mov
dec
sbb
and
sbb
ins
in
inc
push
or
cmp
sbb
mov
dec
mul
push
inc
mov
leave
cli
jne
jmp
nop
jle
jp
mov
adc
jmp
repz
scas
out
out
sub
dec
mov
and
dec
push
and
fwait
daa
inc
xlat
stos
inc
out
adc
fbstp
cdq
add
das
(bad)
iret
mov
push
pop
hlt
fld
aam
mov
into
lock
mov
push
inc
mov
aaa
xchg
mov
cmp
lods
arpl
into
pushf
stos
data16
add
or
enter
retf
jle
jo
xchg
add
inc
jb
pusha
fsub
pop
xor
movs
sti
or
mov
cmps
shl
xor
and
push
(bad)
push
sbb
out
add
jnp
mov
jb
jl
jl
push
mov
xchg
xor
das
or
adc
sub
pop
inc
add
ds
xlat
shr
int3
mov
repz
xchg
dec
repnz
mov
imul
out
mov
xchg
fwait
sbb
out
and
das
cmp
outs
xor
push
adc
sbb
add
mov
retf
rcr
test
push
aam
sub
mov
cld
cli
adc
call
mov
mov
(bad)
loope
stos
repz
xor
or
sbb
push
stos
dec
mov
push
jmp
fnsetpm(287
popa
or
jmp
add
mov
dec
adc
cmps
sbb
sbb
push
xchg
push
cwde
out
mov
sbb
fstp
popa
iret
ins
dec
dec
xchg
hlt
push
test
xchg
ret
or
outs
mov
das
hlt
jp
xor
cld
cmp
lods
push
sti
xor
add
mov
jb
shl
xlat
or
popf
sbb
cmp
loopne
loopne
xchg
ret
and
data16
xor
fistp
fidiv
pop
dec
fwait
jg
mov
pop
shl
ret
aam
stc
add
sub
inc
test
pop
sar
add
dec
jle
inc
jp
sbb
int
imul
add
(bad)
push
or
sub
cld
out
xor
arpl
test
fild
or
mov
or
cwde
xchg
dec
mov
rcl
mov
retf
xchg
mov
sbb
outs
lds
adc
inc
sbb
add
call
js
repz
out
mov
(bad)
ds
mov
push
mov
icebp
push
mov
stos
cmp
mov
std
in
sub
jbe
das
aad
mov
push
cmp
repnz
push
bound
out
xchg
xchg
fcomp
jns
test
mov
xor
es
scas
sub
shr
fstp
ret
out
test
test
mov
sar
and
lea
test
pop
adc
add
call
test
ins
repz
test
add
sub
adc
mov
arpl
scas
jno
xchg
js
push
sbb
retf
or
popf
fadd
push
cmp
or
dec
lock
(bad)
aam
dec
lds
pusha
iret
add
popa
popf
and
xchg
xlat
and
stos
into
xor
fst
mov
mov
adc
popa
bound
iret
pusha
retf
mov
fstp
fmul
mov
mov
mov
scas
(bad)
jnp
dec
into
adc
in
aas
pop
shr
xchg
push
mov
aaa
shr
push
mov
call
mov
jmp
outs
pop
or
jle
push
shl
inc
repnz
jecxz
repnz
mov
test
call
cmp
add
call
cmp
jecxz
rcl
xlat
dec
loop
repz
mov
inc
jae
sti
mov
adc
fldpi
mov
leave
cmp
mov
jl
aas
jb
cmp
adc
cmps
js
mov
mov
mov
lock
cmp
mul
push
imul
je
repnz
mov
rol
mov
shl
fsub
test
arpl
cdq
cmp
inc
xor
jmp
adc
pop
dec
adc
shl
and
jo
push
inc
icebp
cmp
xchg
call
(bad)
pop
cmp
stos
xchg
inc
inc
push
fdiv
inc
out
jl
arpl
mov
or
in
mov
push
(bad)
fild
push
outs
mov
(bad)
sar
mov
shl
out
pop
in
aad
cmp
out
or
scas
sub
or
cli
pop
mov
(bad)
cli
cmps
in
and
add
dec
mov
bound
mov
bound
inc
mov
or
and
in
movs
(bad)
pop
lock
mov
xchg
pop
ins
push
mov
add
ret
pop
loop
fs
inc
mov
or
add
push
push
ds
or
sbb
dec
fistp
(bad)
xchg
inc
push
outs
adc
mov
outs
jae
sbb
das
shr
push
push
sbb
xchg
cmp
pop
iret
push
fmulp
xchg
mov
ret
dec
xor
add
icebp
scas
push
(bad)
cmp
adc
xor
arpl
cli
push
or
inc
ret
jnp
and
add
add
fcmovu
push
fdiv
pop
adc
push
or
repnz
lahf
call
in
add
icebp
mov
mov
(bad)
dec
mov
shl
fist
inc
loop
aam
jge
adc
xor
es
adc
clc
popa
and
add
jl
lods
push
nop
dec
dec
cmp
ds
enter
dec
inc
in
test
inc
jbe
test
mov
and
adc
es
mov
xor
lds
lods
ins
aaa
arpl
adc
inc
sahf
int
(bad)
jg
imul
adc
stos
movs
push
sbb
xchg
cmp
out
das
adc
stos
mov
retf
adc
stc
fwait
cli
call
test
jnp
cs
xor
retf
loope
push
(bad)
mov
jmp
adc
and
xchg
inc
push
push
fdiv
ds
fistp
mov
sbb
sahf
mov
retfw
aas
inc
xlat
xchg
mov
dec
adc
push
cmp
xlat
rol
xor
push
or
sbb
mov
cmove
sub
xchg
or
cmp
sahf
sahf
sub
js
fisubr
jmp
stos
dec
cld
cmp
test
mov
imul
fsub
mov
xor
das
shl
sbb
mov
pop
dec
ror
mov
and
or
es
cld
sub
jmp
outs
arpl
cmp
fcmovne
sbb
mov
cmp
sub
cmp
ins
in
xor
sub
(bad)
mov
test
sub
xor
pop
call
ss
or
mov
fimul
mov
fwait
aad
repz
fisubr
test
jns
movs
leave
cmp
and
and
clc
shr
or
jo
xchg
add
stos
jae
sbb
rcl
push
(bad)
fimul
sub
and
je
cmps
add
mov
pop
(bad)
fs
pop
outs
loop
and
mov
fdiv
mov
mov
push
lea
pop
jle
sbb
dec
jo
arpl
jg
mov
shl
fdivr
xor
push
cmp
and
cdq
cmps
push
ss
jno
pop
outs
xor
daa
mov
nop
loope
and
nop
xor
pop
pop
mov
add
popa
leave
stc
loope
mov
pop
xor
cs
adc
and
mov
fmul
ja
xchg
xchg
mov
jo
cmp
stc
and
sbb
lock
adc
and
retf
or
xchg
(bad)
or
(bad)
jns
movs
fcomp
sub
in
test
fwait
lods
test
and
repnz
outs
cmp
inc
dec
js
inc
sar
stos
sahf
iret
sahf
and
cmps
mov
adc
out
loopne
inc
jns
push
fadd
add
fsubrp
sub
cmp
mov
ficomp
clc
pop
scas
jle
inc
repnz
mov
ins
add
jo
shl
pusha
not
jecxz
mov
sar
test
out
jnp
pop
dec
les
data16
jecxz
into
iret
aas
and
or
scas
jae
mov
ret
fimul
fst
xchg
cmps
push
cmp
ret
jmp
mov
scas
mov
(bad)
fcmove
jp
mov
xor
mov
add
fcomp
mov
add
mov
mov
mov
(bad)
adc
imul
sub
and
inc
or
and
js
add
sbb
cmp
xor
jecxz
mov
xchg
stos
push
mov
sbb
popa
inc
test
sub
jmp
jecxz
inc
out
sbb
mov
adc
in
mov
enter
add
jl
jmp
or
pop
pop
add
cmp
jecxz
xchg
and
(bad)
xchg
push
mov
ja
stos
inc
(bad)
cmp
push
int
xor
retf
lods
out
scas
jmp
rcr
sar
mov
int3
mov
inc
mov
jne
ret
jae
inc
and
repnz
jb
cli
mov
lock
shr
mov
(bad)
jl
jnp
scas
inc
sbb
sbb
push
mov
repnz
adc
call
xor
bound
push
dec
cli
stos
nop
cld
mov
call
jmp
adc
test
and
mov
(bad)
fisub
jecxz
ja
sub
pop
pushf
test
mov
mov
inc
push
test
int3
pop
xchg
mov
adc
fsub
sub
add
cmp
sbb
sar
int3
adc
jne
pop
test
rcl
xor
push
arpl
sbb
cmps
call
retf
std
inc
mov
push
cmp
mov
fwait
(bad)
xchg
retf
loope
adc
shl
les
fwait
sbb
popa
retf
xchg
push
loop
loopne
push
pop
mov
ret
xor
sbb
loop
inc
int3
sub
sbb
into
ins
cmc
mov
cmps
xchg
(bad)
arpl
inc
shl
movs
and
cmp
rol
shl
std
sbb
sahf
and
add
pop
jno
xor
shl
cwde
movs
xchg
push
mov
or
sub
fstp
xchg
leave
retf
and
inc
rcr
jb
push
retf
xchg
and
cdq
cmps
sbb
jnp
pop
and
mov
test
push
xchg
jge
gs
and
cmp
mov
dec
cmp
icebp
pop
push
inc
xchg
xor
inc
repnz
xchg
stos
mov
jb
ss
imul
pop
scas
cli
sbb
sub
(bad)
jl
test
dec
cmp
aaa
dec
and
sub
and
aas
repnz
add
int
push
adc
dec
shl
std
stos
fwait
jp
popa
jns
das
dec
(bad)
xor
adc
xlat
push
xchg
daa
pop
xor
outs
ret
or
clc
ja
addr16
mov
xchg
push
leave
jmp
adc
add
mov
sbb
je
pusha
(bad)
jmp
imul
pop
repnz
fwait
test
ror
loope
outs
retf
adc
and
push
jg
adc
pop
and
xchg
jb
jno
or
stos
retf
pop
push
stos
mov
inc
or
sbb
fwait
jb
shl
mov
and
aas
repnz
sbb
ficom
push
stos
sub
rol
fidivr
inc
jge
mov
pop
pusha
mov
xor
loop
movs
imul
mov
cli
jnp
scas
loop
xchg
(bad)
lock
stc
mov
or
lea
cmp
xor
or
scas
jecxz
inc
mov
pop
punpckhdq
mov
adc
ja
xor
adc
pop
cmp
cli
ja
dec
pop
int
ja
test
adc
cmp
rol
lock
jge
mov
add
in
dec
adc
and
push
sahf
in
and
pop
in
lds
shl
inc
imul
daa
das
es
push
pushf
daa
loopne
mov
mov
enter
jne
jae
icebp
aas
pop
fcmovb
fdiv
test
dec
cmc
adc
push
or
int3
and
mov
pop
shr
or
mov
dec
xchg
mov
lods
ja
es
or
retf
repnz
es
xor
jp
sbb
inc
cmp
cdq
test
xlat
dec
xchg
imul
outs
adc
inc
sub
in
inc
loopne
sbb
pop
sbb
add
inc
idiv
arpl
xor
cli
mov
jno
sub
aam
repnz
mov
push
mov
cmp
repz
int
xor
pop
rcl
shr
mov
ss
inc
or
pop
gs
cmp
dec
mov
inc
ret
pop
or
xchg
push
xchg
enter
add
mov
ficomp
mov
out
jecxz
push
push
or
mov
and
pop
stc
sub
mov
dec
ret
cmp
(bad)
jp
and
cmp
mov
cmps
retf
add
xor
push
mov
scas
sub
xor
pusha
aam
imul
sbb
sub
cmc
push
pop
dec
mov
inc
and
jnp
fild
adc
(bad)
iret
inc
dec
loopne
ja
(bad)
(bad)
pop
inc
sti
aad
xchg
dec
xor
iret
mov
mov
cmps
push
arpl
fucomip
mov
jl
push
out
paddd
add
arpl
fisub
pop
xor
sub
rcr
adc
imul
test
rcr
jmp
inc
arpl
push
xor
shl
cmp
push
stc
adc
outs
or
inc
xchg
inc
or
cmp
xor
es
adc
xor
retf
test
xor
inc
outs
and
sub
int
xlat
inc
sub
cld
mov
fisubr
pushw
jbe
add
or
adc
cwde
(bad)
in
jg
mov
mov
mov
(bad)
cmp
cwde
cmova
xor
imul
call
cmp
mov
xor
push
pusha
dec
mov
dec
xchg
xchg
and
shl
jmp
retf
mov
stc
imul
inc
dec
(bad)
in
pop
(bad)
repnz
jb
xchg
pop
xchg
pop
push
jge
daa
iret
mov
adc
and
sub
and
and
cwde
popa
jle
test
and
ret
dec
repnz
out
mov
call
jecxz
dec
ret
in
dec
mov
push
and
fxch
stos
sahf
imul
loop
mov
sbb
fst
add
push
mov
popa
mov
xchg
pop
test
adc
fisttp
mov
jg
xor
jbe
push
shr
inc
sub
aad
ret
(bad)
adc
sbb
out
int3
xchg
mov
sbb
xchg
pop
clc
fs
mov
mov
push
sar
test
mov
mov
push
inc
add
por
loope
dec
jp
sub
iret
xor
xchg
aad
xor
jo
gs
push
or
sub
ret
jno
movs
add
adc
outs
mov
call
xlat
or
or
pop
sub
outs
push
pop
pusha
shl
add
fwait
xor
push
fcomip
sbb
sub
xchg
adc
out
ret
sub
ret
rcl
mov
or
push
sbb
repz
or
xchg
adc
fsubr
xor
(bad)
mov
push
and
outs
fwait
movs
hlt
jmp
mov
mov
push
cmp
je
loop
inc
hlt
sub
test
xchg
sub
push
or
inc
inc
push
jno
jae
sub
sbb
add
xor
lahf
stos
dec
jnp
push
or
push
pop
xchg
adc
pop
(bad)
test
sbb
jl
push
scas
pusha
push
jne
test
outs
fwait
dec
stos
jmp
sbb
hlt
sub
and
dec
dec
inc
fisub
out
loop
jae
(bad)
bound
dec
call
out
ins
dec
adc
sbb
fs
dec
iret
pop
mov
ins
sub
out
fldenv
rcr
dec
jne
movs
push
mov
ins
or
xchg
adc
cmp
and
jno
mov
add
(bad)
jg
add
mov
fmul
jnp
push
outs
in
and
mov
arpl
mov
mov
(bad)
int3
mov
rcr
pop
pop
xchg
push
xchg
les
cmp
lea
adc
cmp
pop
bound
push
xor
imul
les
cmp
and
inc
rol
mov
fwait
xchg
cmp
pop
cwde
cmc
mov
ror
ret
cmp
mov
retf
xchg
call
aas
and
add
in
pop
jmp
pop
scas
jp
aaa
push
and
repnz
mov
add
test
pop
lods
dec
xor
push
dec
pop
retf
add
(bad)
test
rcl
adc
push
jmp
(bad)
addr16
out
aaa
cld
push
ins
int3
retf
(bad)
fldenv
push
inc
dec
bndstx
call
mov
push
mov
push
xor
stos
cmps
mov
add
sub
pop
sbb
or
xchg
sub
lock
repnz
push
jae
pop
jno
xor
aaa
loopne
aad
loop
in
adc
dec
(bad)
loopne
(bad)
ss
leave
mov
icebp
or
jp
pop
ret
jo
fldenv
mov
dec
inc
daa
jp
or
rcr
(bad)
ins
test
mov
movs
dec
popa
repz
xor
mov
retf
xlat
outs
xchg
pop
scas
xor
xor
mov
cmp
mov
adc
lods
test
ret
push
add
popa
or
sbb
mov
test
lock
mov
repnz
loop
call
nop
xor
mov
cld
dec
mov
sbb
loope
movups
xlat
out
jp
cwde
test
stc
mov
loop
fld
push
pop
stc
push
cmp
sub
test
movs
mov
dec
call
sahf
adc
retf
and
mov
test
sahf
out
out
cdq
mov
mov
push
into
jae
pushf
daa
jns
inc
add
pop
cmp
sbb
in
das
adc
(bad)
test
fstp
cmp
in
xchg
push
or
mov
out
daa
arpl
movs
in
cld
push
fcmovne
int3
retf
or
ret
into
pop
sbb
push
push
addr16
cmp
test
imul
mov
call
mov
call
jb
xchg
adc
ret
mov
bnd
and
sub
data16
ss
cmp
mov
or
sbb
jno
mov
imul
cmp
imul
sub
shr
int3
cwde
and
repz
push
popa
push
scas
xchg
loop
call
ins
mov
xlat
jb
jecxz
nop
sbb
sbb
and
retf
cwde
fimul
call
fstp
pcmpgtw
xchg
xor
mov
xchg
es
rcl
jmp
cli
jnp
inc
pop
and
popf
and
std
dec
pop
push
xchg
cmp
push
mov
hlt
(bad)
fidivr
jp
xchg
and
jb
cmps
into
rcr
push
(bad)
in
jo
sub
push
aaa
scas
and
adc
aad
adc
push
add
movs
and
clc
sub
sbb
fsubp
jmp
mov
outs
xor
aaa
sbb
mov
pop
xlat
cmp
gs
push
jmp
adc
xchg
dec
mov
pop
imul
test
pop
push
fisubr
push
inc
xchg
repnz
mov
(bad)
and
es
(bad)
lds
cs
xchg
icebp
push
jge
les
outs
(bad)
cmp
adc
(bad)
fcmovb
xor
pop
ins
dec
loope
adc
mov
cmps
lahf
mov
and
pop
mov
and
adc
jbe
xor
cmp
jb
stos
shr
dec
ss
mov
icebp
test
shr
int
mov
xor
ds
mov
mov
mov
test
cmp
shl
pop
push
xchg
jp
out
mov
push
inc
sub
ret
xor
add
(bad)
mov
out
retf
xchg
sbb
sbb
scas
loop
or
sbb
imul
xor
push
and
rol
mov
sub
rol
dec
sub
sub
pop
push
push
ins
cmp
mov
mov
test
push
and
call
pop
sti
jle
ins
pop
mov
sbb
jmp
pop
inc
xchg
jmp
mov
cmp
adc
test
(bad)
and
xor
xor
rcl
add
push
retf
mov
adc
retf
out
(bad)
sbb
pop
addr16
stos
stos
inc
mov
(bad)
xor
push
sahf
das
mov
mov
cmp
inc
xchg
scas
add
xor
dec
xlat
out
ja
fmul
nop
cmp
bound
sub
sahf
mov
xor
sub
mov
xor
mov
mov
ret
andps
scas
inc
rcl
fwait
pop
cmp
call
jle
xor
outs
pop
lods
das
xchg
adc
(bad)
push
add
repnz
loopne
cli
pop
sar
(bad)
bound
pusha
mov
sar
inc
dec
test
mov
cmps
fwait
pushf
lods
out
push
shr
xor
xlat
pop
lods
push
jae
pop
and
hlt
(bad)
mov
add
outs
test
push
mov
in
pushf
sub
stos
cdq
jno
push
ret
sbb
cmp
dec
xor
fisubr
retf
mov
repz
aam
int3
xchg
xchg
inc
call
push
pop
dec
mov
mov
add
cmp
nop
ds
jbe
imul
lock
adc
es
mov
jno
xor
jo
hlt
sub
inc
xlat
add
lahf
or
rcl
rol
mov
dec
sub
mov
add
imul
cmp
jge
in
dec
jno
inc
cmp
retf
mov
cmp
sub
stos
pop
fsubr
arpl
xchg
pusha
das
jne
mov
add
push
mov
and
retfw
ret
sub
sti
sub
mov
mov
lock
scas
push
bound
push
js
jmp
scas
mov
loope
jge
into
minps
(bad)
sub
mov
mov
stc
or
mov
ret
sbb
sub
sub
inc
pop
xor
sbb
ror
mov
sahf
cli
(bad)
imul
mov
xchg
sbb
inc
es
mov
loope
xchg
fptan
call
in
xor
js
push
sub
popa
xor
xchg
and
hlt
test
repz
adc
push
add
mov
or
mov
mov
inc
in
jns
out
dec
add
xchg
int
scas
pop
dec
dec
xchg
inc
repnz
sub
adc
neg
xchg
push
inc
push
xchg
pop
add
cli
imul
dec
xchg
sbb
push
cmp
mov
cmp
shl
data16
or
add
or
cmp
mov
mov
in
cmps
cli
mov
push
enter
imul
sub
sbb
fisubr
inc
mov
adc
pusha
lds
bound
add
jb
sahf
adc
adc
sahf
xchg
cmp
rcr
leave
iret
cmps
push
cld
push
outs
icebp
xchg
iret
mov
sahf
cmp
push
inc
inc
xor
jp
nop
cmc
jae
fidiv
nop
cld
aam
mov
loopne
jno
cmc
arpl
jge
in
mov
mov
inc
(bad)
sub
mov
dec
retf
iret
and
dec
ss
sbb
sbb
cmp
icebp
(bad)
mov
pop
cmc
in
dec
(bad)
shl
test
jnp
dec
pop
jo
xchg
dec
pop
cmp
fucomp
pop
ins
scas
sub
neg
xchg
mov
inc
sbb
lea
xor
mov
sbb
xor
xor
iret
mov
inc
xor
je
call
push
stos
mul
dec
(bad)
leave
ret
add
je
call
mov
call
sbb
test
jbe
mov
sahf
fwait
cmp
mov
sbb
(bad)
jnp
hlt
push
sub
shr
pushf
xor
mov
dec
cld
ds
or
aam
repz
fidivr
ficom
sub
ret
push
arpl
ret
scas
rcr
add
push
inc
mov
mov
add
(bad)
fsub
out
mov
fild
retf
ds
cmps
jno
lods
test
add
or
retf
stos
sub
mov
and
jbe
(bad)
add
xchg
mov
dec
pop
and
mov
mov
pop
int
fucomip
sar
bound
popa
not
lds
mov
add
and
cmp
retf
sub
mov
mov
cmp
ret
push
div
push
ret
call
imul
(bad)
lds
push
inc
jle
shl
jb
pop
jecxz
hlt
xor
adc
mov
dec
push
jno
add
cmps
retf
adc
pop
loopne
fstp
jo
xor
dec
fmul
cli
jns
clc
add
jp
mov
into
gs
push
jmp
popa
mov
pop
lods
fimul
outs
and
call
fs
in
jmp
sub
jns
div
sbb
mov
cs
xchg
pop
mov
mov
test
rcl
push
dec
int3
inc
and
cmp
rcl
or
mov
and
ss
lahf
inc
rcr
je
push
aas
xchg
mov
add
cli
cmp
sti
sub
xchg
inc
xchg
fist
fnstsw
dec
sbb
ss
jne
fnstsw
arpl
movs
dec
adc
mov
lea
fwait
pop
inc
jb
push
ja
jmp
cmp
jbe
(bad)
pop
add
adc
jne
or
sub
loop
cmp
inc
(bad)
in
dec
repz
pop
loop
dec
pusha
xor
imul
or
mov
and
mov
cmp
cmps
stc
xor
lock
fistp
call
push
fcmovnbe
(bad)
cli
ret
retf
mov
adc
in
cld
(bad)
push
cmp
adc
push
cdq
outs
ss
pushf
ficomp
loopne
cmp
stos
add
ds
mov
adc
mov
push
mov
arpl
mov
mov
iret
mov
fstp
pop
inc
ret
dec
mov
pop
loop
mov
xor
inc
mov
jmp
inc
xchg
jecxz
dec
shl
push
mov
sub
add
pop
adc
sub
ror
mov
jecxz
jecxz
xchg
fidiv
dec
dec
jns
imul
xchg
shl
xchg
mov
nop
ds
mov
rcr
pop
pop
fstp
sbb
inc
or
push
mov
jge
mov
add
div
mov
or
clc
ret
icebp
das
add
jmp
int3
lds
fmul
movs
js
(bad)
ret
adc
mov
fisubr
sbb
xlat
xor
aam
jmp
push
enter
xchg
sub
rol
add
call
(bad)
push
adc
and
mov
sar
xor
div
fwait
mov
or
jmp
test
mov
add
push
mov
mov
lods
cmp
shl
sbb
push
cld
mov
pop
mov
loop
mov
fwait
std
add
mov
and
retf
sbb
pop
aad
push
mov
or
retf
jae
jns
stos
ins
adc
bound
jg
cmp
movs
adc
sub
call
cwde
pop
inc
sub
fmul
je
lahf
mov
mov
pop
ret
mov
lahf
mov
or
pop
daa
mov
hlt
ret
mov
inc
shl
lahf
inc
test
pop
lea
mov
mov
jg
fs
arpl
lahf
lock
stos
stc
or
lods
into
xchg
rcr
and
mov
in
xchg
(bad)
sahf
mov
mov
into
daa
fdiv
inc
adc
xchg
dec
clc
jae
out
jae
inc
or
aaa
inc
(bad)
add
sbb
jmp
xor
mov
sbb
(bad)
mov
icebp
aam
test
xchg
pop
out
daa
xchg
popa
ss
icebp
movs
ret
xchg
adc
adc
es
pusha
push
or
dec
cmp
ins
enter
sti
imul
cld
mov
and
test
rcl
sbb
fisubr
retf
pop
add
mov
mov
pop
and
fisub
ins
dec
repnz
jmp
sbb
jb
dec
jae
cld
mov
std
cwde
inc
add
dec
push
push
hlt
fs
xlat
cmp
cmp
out
mov
stos
cmp
imul
stos
mov
shl
adc
jae
lods
cwde
mov
nop
(bad)
pop
sti
sub
sbb
jbe
xchg
or
aam
(bad)
retf
popa
adc
in
adc
mov
xor
out
xchg
xchg
imul
popa
mov
inc
xor
jnp
(bad)
xchg
aam
push
not
mov
(bad)
mov
int
test
ret
enter
or
pop
mov
mov
jae
(bad)
or
and
fwait
fs
xchg
jb
push
jmp
clc
es
stc
mov
retf
pop
int
fist
mov
sbb
xor
call
sbb
dec
pusha
jb
mov
fnstenv
jmp
jo
mov
imul
shl
cmp
in
call
(bad)
loop
inc
outs
sbb
jp
push
xor
ins
or
ret
stc
pop
sbb
jb
xor
jmp
mov
ss
mov
cmp
add
(bad)
jle
xor
ins
test
mov
cmp
jbe
aas
xor
js
shl
js
test
call
add
fisub
std
mov
and
shl
dec
sub
and
sub
jb
pop
dec
stos
push
cmp
pop
xor
in
inc
mov
add
and
push
pusha
mov
popf
retf
lods
cmp
stos
xchg
ss
das
je
jbe
retf
fs
stos
or
jbe
setae
inc
mov
cmps
push
ret
cs
repz
mov
(bad)
jno
dec
mov
push
pop
rol
xchg
jo
or
sub
cwde
sbb
or
int
daa
jl
rcr
cmp
test
mov
adc
or
daa
cmp
(bad)
fcomp
inc
jno
jne
mov
scas
fwait
add
(bad)
in
sub
fsub
add
sahf
sbb
cmp
cwde
retf
pushf
iret
adc
dec
arpl
rcl
das
rcr
mov
push
push
dec
mov
xchg
jbe
lahf
sti
inc
jnp
ins
jmp
(bad)
cli
cmp
dec
mov
int3
js
aas
or
dec
dec
jb
xchg
das
sbb
mov
jge
xor
stos
mov
jmp
sbb
push
push
cmc
aam
rol
out
sbb
fidiv
test
dec
inc
sbb
push
into
xchg
gs
(bad)
loope
lock
mov
sbb
sub
pop
inc
or
pop
call
jnp
js
adc
movs
mov
(bad)
mov
repz
mov
leave
adc
mov
retf
push
inc
or
pushf
adc
push
out
xor
sub
imul
fcmovnu
push
mov
mov
push
cs
push
movs
cmp
cmp
mov
add
mov
movs
in
loop
ins
or
jecxz
add
jae
jl
sub
stos
rcl
cmp
cld
push
cmp
movs
mov
jmp
stos
fidiv
or
fxam
ret
pop
mov
adc
sbb
jae
and
sar
inc
add
add
sbb
jno
(bad)
cmp
packsswb
and
(bad)
mov
and
call
inc
dec
sbb
mov
sti
xor
in
add
jp
xor
push
pop
pop
cwde
add
test
pop
jg
shl
dec
mov
xor
jp
retf
movs
pop
adc
movups
and
test
jp
js
cli
test
jmp
cmp
fldenv
adc
sub
arpl
idiv
mov
mov
xor
jb
sbb
dec
mov
mov
push
(bad)
and
add
dec
mov
in
or
ret
inc
(bad)
stos
arpl
pushf
aad
push
cmp
jmp
jb
xor
xor
stos
mov
push
mov
fcomp
cmp
xchg
jae
ins
lock
enter
jmp
ins
(bad)
stos
repnz
mov
xchg
pop
jne
mov
sbb
test
mov
mov
push
repz
cld
cwde
or
ret
sub
jne
pop
(bad)
movs
and
sbb
int
ss
es
push
and
adc
ret
xchg
aaa
(bad)
das
pop
stos
xchg
repz
ins
imul
inc
mov
in
xchg
adc
punpckldq
in
cwde
nop
pop
xchg
icebp
(bad)
jmp
inc
sbb
push
push
out
mov
loope
and
out
xchg
(bad)
push
lahf
call
xor
push
xor
int3
mov
fiadd
mov
mov
clc
scas
xchg
adc
xchg
dec
sbb
sbb
dec
sbb
adc
les
repnz
out
imul
sub
arpl
push
(bad)
cs
pop
jno
and
cmp
adc
xchg
sub
jecxz
retf
cli
mov
dec
xor
fs
cli
pop
mov
sbb
jb
call
test
pop
es
sahf
loope
mov
cmp
inc
iret
mov
test
inc
cmp
dec
mov
lea
stos
fdiv
jno
and
pop
repz
push
inc
out
movs
inc
jl
gs
popa
or
mov
ret
fnop
rcr
test
sub
mov
imul
clc
add
ja
dec
cmp
test
fmul
dec
push
lock
sub
dec
jmp
pop
lock
sahf
lods
in
cld
mov
push
outs
xor
addr16
lahf
jp
jecxz
mov
pop
and
(bad)
arpl
xchg
jmp
cmp
sbb
xor
mov
jo
jns
inc
cmp
jmp
retf
xchg
or
add
in
push
pusha
sbb
aaa
jno
jb
push
and
push
nop
push
xchg
repnz
sub
and
push
stos
fcom
sbb
(bad)
sbb
(bad)
cmc
cmp
or
jb
mov
lahf
and
xor
stc
nop
mov
or
fcom
pop
push
int3
push
push
push
mov
stos
xchg
popf
loope
ret
sub
cmp
test
test
mov
adc
fldenv
cmps
mov
mov
jg
sbb
imul
ins
mov
sub
xor
cwde
dec
repnz
pop
inc
cmp
cmp
arpl
adc
or
add
mov
push
lahf
ins
cwde
xor
xchg
popa
sbb
inc
mov
cmp
cmp
lods
jns
stos
(bad)
adc
mov
repnz
outs
sbb
pop
pop
cli
dec
outs
push
pusha
cmp
scas
mov
retf
fild
(bad)
mov
nop
dec
xor
std
add
lods
popa
cmp
mov
call
and
mov
dec
lods
and
jae
out
xor
cmp
inc
xchg
mov
retf
rcr
add
(bad)
bound
xor
sti
(bad)
or
loopne
pop
rol
clc
dec
bnd
push
dec
jge
sbb
cmp
out
je
outs
cmp
pop
push
xchg
sub
dec
jecxz
mov
je
sub
scas
xchg
adc
loop
sub
push
fwait
ja
ja
repnz
jae
adc
test
or
mov
test
data16
inc
mov
inc
inc
sbb
mov
dec
daa
xor
sub
ins
sbb
and
shl
xor
hlt
jne
sahf
jg
or
and
xchg
mov
pop
or
mov
ins
out
adc
(bad)
ficom
jmp
inc
xor
aaa
or
inc
push
adc
mov
in
(bad)
xlat
call
stos
push
scas
jp
sahf
ins
aaa
pop
repnz
ss
stos
push
push
xor
dec
push
sub
sub
adc
cs
jp
clc
jnp
movs
into
fwait
sub
or
pop
mov
jnp
cmp
loop
mov
pop
xor
imul
imul
mov
push
jb
adc
adc
push
in
shl
retf
idiv
adc
dec
push
add
and
stos
or
sar
fld
sar
or
or
cmp
call
jge
loop
push
dec
sub
cdq
mov
mov
ds
push
cmp
fwait
pop
cmp
xor
out
pusha
jno
iret
and
xor
das
jp
dec
push
xor
int
jmp
sar
ss
add
and
or
pop
das
push
xchg
add
push
add
mov
sub
xlat
xor
rcl
and
popf
or
xor
dec
jmp
shl
sub
adc
mov
rcr
xor
in
sbb
call
sar
fs
enter
std
movs
xchg
xchg
fld
popa
sub
iret
push
jb
jp
mov
cmp
ds
dec
pop
inc
mov
push
out
mov
inc
inc
cmps
push
add
pop
push
jnp
add
sbb
xor
mov
jmp
and
outs
cmp
and
jmp
popa
imul
xor
ds
adc
mov
jbe
out
ds
xor
sahf
jmp
or
dec
stos
fiadd
cwde
jle
and
dec
xlat
pop
outs
ret
and
retf
and
mov
shr
adc
test
int3
push
fidiv
xor
mov
inc
dec
push
fcmovne
xor
repz
mov
jno
cld
push
inc
jecxz
adc
das
repnz
sbb
push
or
scas
pusha
and
mov
push
into
ret
pop
xchg
push
xlat
xchg
xor
out
mov
push
inc
fs
xchg
mov
in
xchg
xchg
add
popa
cli
pop
xor
and
clc
and
mov
daa
aas
mov
data16
cmp
mov
push
mov
adc
ret
inc
int3
xor
jecxz
sti
push
jmp
and
fnstsw
aad
imul
sbb
mov
cmps
call
mov
addr16
adc
jnp
test
sbb
sbb
movs
pop
mov
adc
in
inc
mov
shl
out
jp
in
cmp
jno
loop
xchg
pop
rcl
add
mov
inc
pushf
not
mov
int3
sbb
shl
call
mov
dec
icebp
sub
cmps
not
mov
pop
mov
dec
icebp
popf
cmc
push
mov
stos
add
dec
stos
and
xor
or
out
or
cli
sub
int3
mov
push
pop
lds
mov
mov
xor
fdiv
push
mov
repz
rol
mov
add
stos
retf
imul
loop
add
jmp
loop
jno
clc
imul
sbb
mov
shl
add
ret
mov
fcom
mov
adc
add
scas
cmovp
jnp
add
sub
mov
in
sbb
jecxz
adc
call
loop
or
mov
adc
xlat
stos
mov
inc
push
dec
daa
cmp
sub
xlat
dec
push
test
mov
push
sti
mov
mov
(bad)
sbb
sub
je
lea
repz
not
xlat
jno
jl
mov
mov
scas
hlt
mov
arpl
mov
dec
ins
cmp
stos
cld
(bad)
xlat
push
les
xor
mov
arpl
sub
cmp
movs
mov
xor
or
dec
cmps
xchg
jmp
fstp
jb
sub
push
xchg
adc
sub
sub
xor
sbb
cmp
push
jmp
enter
ret
mov
and
out
js
shl
cmp
adc
push
xor
xchg
scas
outs
mov
pop
cmc
sahf
imul
adc
aaa
push
ret
and
ret
fistp
mov
dec
xchg
sbb
and
jnp
lock
in
pop
xchg
cli
sbb
hlt
in
mov
jne
add
xor
jmp
xchg
ficom
outs
inc
xlat
cmp
xor
rcl
imul
lahf
sbb
inc
jno
sbb
xchg
rcr
ret
dec
test
push
mov
sbb
jb
pop
pop
test
inc
or
jmp
mov
test
sub
and
cwde
xor
push
bnd
mov
and
ficom
pushw
imul
pop
adc
cli
jl
push
and
ss
mov
aas
ins
push
stc
add
mov
mov
push
cmp
daa
fcomp
jno
add
icebp
and
sub
jae
dec
ficomp
pop
push
cmp
add
jnp
mov
push
cwde
stc
stos
rcr
mov
mov
add
fidivr
xchg
mov
adc
mov
xchg
sti
pop
pop
(bad)
cmps
xor
or
push
cmp
jae
retf
adc
lods
or
loop
and
sub
jmp
cmp
je
push
add
rcr
jne
sbb
arpl
cmps
xchg
icebp
popf
fst
mov
out
shl
dec
aam
imul
xor
outs
push
retf
stos
jb
mov
movs
mov
or
sub
fsubr
pop
cmps
scas
callw
fiadd
fwait
ret
mov
das
mov
out
shl
mov
push
push
adc
push
add
adc
xor
xchg
scas
push
and
xor
push
retf
and
xchg
jecxz
les
and
in
retf
mov
addr16
xchg
and
mov
xor
xor
retf
mov
pushf
adc
add
cmp
and
jb
aam
popf
xor
xor
dec
shl
leavew
das
adc
sahf
mov
mov
mov
mov
inc
out
ss
popf
cs
je
fdiv
ds
sub
push
pop
mov
cmp
lods
call
add
jmp
mov
test
and
cs
add
pop
movzx
and
sbb
ret
movs
or
add
xchg
fsub
ins
pop
cmp
pop
dec
hlt
mov
inc
sub
mov
sbb
daa
fbld
jmp
pop
and
dec
push
push
test
inc
call
retf
and
add
push
jno
jp
adc
daa
adc
and
dec
jp
sbb
out
fs
repnz
dec
xchg
inc
int
sbb
sbb
jle
int
adc
mov
mov
rol
inc
loop
aad
dec
dec
mov
shl
cmc
movs
mov
sub
iret
adc
inc
arpl
cs
(bad)
fidivr
imul
sub
rcr
sbb
sbb
jb
ss
stc
mov
push
repz
(bad)
std
cmps
out
mov
xor
lods
inc
mov
pop
adc
or
adc
addr16
dec
pop
mov
mov
xor
pop
sbb
adc
stc
push
outs
cmp
(bad)
pop
pop
jb
test
jmp
stos
sub
sub
fmul
call
xor
jno
mov
adc
push
call
repnz
popf
(bad)
rol
rcr
and
cld
sub
xor
and
cmp
in
movs
jmp
and
fdiv
xor
adc
inc
dec
rcr
push
push
jp
enter
cmps
std
aad
retf
jp
or
out
bound
or
(bad)
ficom
das
bound
out
add
jae
and
or
jmp
xor
jns
sar
xor
xchg
scas
cmc
pop
dec
ins
dec
retf
jnp
stos
(bad)
pop
std
int3
fwait
jb
outs
scas
xchg
cs
and
pop
lods
fcom
loop
cmp
div
sahf
cmps
shr
js
mov
in
inc
mov
dec
je
push
retf
movs
jmp
in
jns
enter
retf
jb
add
sub
inc
xchg
jb
mov
and
add
push
retf
add
ja
mov
fcmovu
push
push
jb
movs
mov
nop
repz
bound
xchg
cmp
imul
push
jnp
jnp
push
pop
int
jge
(bad)
rcl
push
cmc
repnz
sbb
loop
out
xor
fidivr
pop
add
retf
fisttp
div
push
mov
sub
add
clc
xor
add
ret
push
xchg
jp
inc
(bad)
mov
in
jmp
adc
mov
jecxz
pop
cli
cmp
cmp
jnp
and
icebp
xchg
pop
pop
adc
ror
dec
fist
pusha
add
popfw
add
fwait
xchg
cmp
xor
cmps
pop
in
imul
ret
sub
je
stos
cmps
mov
iret
xchg
fs
xchg
or
outs
xchg
sahf
or
mov
retf
xor
push
jae
ja
ficom
popf
dec
shr
fucomip
inc
or
ficom
inc
push
xchg
pushf
and
adc
addr16
mov
and
mov
xchg
and
cmp
push
mov
cwde
jbe
rcl
dec
mov
add
cmp
jecxz
cmp
xchg
jnp
add
icebp
adc
adc
mov
mov
icebp
cmp
(bad)
pop
push
sahf
ds
inc
mov
loopne
mov
add
xor
or
dec
arpl
mov
stc
mov
add
add
xchg
mov
fbld
xrelease
sar
sbb
add
cmp
repz
inc
clc
fistp
shl
fdiv
jp
gs
pop
outs
fwait
test
mov
xchg
call
stos
add
mov
mov
xchg
or
mov
sbb
fwait
mov
out
xor
jbe
ret
ss
inc
mov
in
mov
dec
hlt
or
or
fadd
mov
and
xor
test
inc
add
jb
scas
mov
jns
movs
pop
inc
lea
or
cmp
fcmovbe
add
stos
cld
pop
outs
iret
mov
test
inc
in
inc
les
scas
retf
clc
xor
xor
fs
xor
add
mov
inc
dec
dec
movhps
push
add
push
mov
cmp
jnp
cmp
pop
in
repnz
fwait
mov
pop
jno
sub
ret
sbb
push
xor
cmp
lahf
mov
push
dec
(bad)
ja
mov
adc
xor
and
jp
add
sub
jne
(bad)
les
call
sub
mov
ja
lods
iret
arpl
mov
fistp
jl
movs
rcr
aam
mov
imul
or
push
out
test
and
inc
fiadd
xchg
leave
and
jmp
call
sub
mov
popa
pop
dec
xor
jle
fiadd
stos
dec
pushf
jge
inc
daa
xor
or
in
jnp
int
push
add
adc
sbb
pop
mov
mov
(bad)
aad
sbb
jl
pop
jmp
mov
push
xlat
cli
arpl
rcr
dec
add
jne
sti
arpl
adc
fs
inc
retf
div
xor
mov
sahf
shl
add
test
not
addr16
xchg
mov
or
icebp
mov
inc
int
retf
sar
inc
call
cmp
inc
add
or
or
sbb
(bad)
fs
leave
inc
movs
iret
je
fsubr
pop
mov
dec
jae
dec
lock
sbb
jmp
fbld
sti
push
scas
inc
loopne
(bad)
push
or
push
add
das
xor
(bad)
jne
push
popf
or
(bad)
aad
mov
sbb
dec
xor
cld
repz
les
cwde
fadd
repnz
rcr
clc
push
mov
pop
mov
pop
jg
movs
mov
(bad)
iret
test
ror
imul
mov
add
inc
xchg
mov
and
push
mov
mov
shl
iret
imul
ret
cmp
lods
pop
fwait
mov
ret
push
movs
popa
pop
or
pop
dec
in
xor
xor
inc
and
sar
add
pushf
retf
iret
loop
and
xchg
mov
mov
ror
push
jmp
sti
xor
out
shl
scas
lahf
call
dec
pop
pop
sbb
mov
mov
loop
sub
push
fdivr
mov
jb
sti
(bad)
cmps
add
in
imul
retf
imul
das
das
fsubr
movs
sbb
xor
and
ss
mov
add
pop
ret
fs
jb
pop
mov
mov
add
xor
xchg
dec
adc
pop
dec
sbb
and
fiadd
fcmove
dec
scas
sahf
add
jp
and
and
cmc
jecxz
bound
int
lds
ja
jae
leave
stc
gs
mov
mov
pop
jecxz
inc
fisubr
or
or
or
push
cli
imul
cmp
dec
sbb
std
aaa
mov
int3
sbb
outs
fdiv
xchg
pop
ins
gs
ficom
retf
lock
fisttp
in
je
push
cmc
(bad)
(bad)
fcomi
add
mov
(bad)
lods
mov
lds
lods
(bad)
retf
ja
js
stos
fisttp
in
int3
inc
fcom
mov
dec
cmp
inc
lds
inc
ins
fld
retf
lds
mov
sbb
push
xchg
adc
and
mov
sbb
dec
jae
int
repz
mov
call
sub
adc
cmp
sub
mov
scas
jns
mov
std
sbb
jae
mov
pop
push
retf
daa
and
bound
sbb
mov
pop
ret
mov
mov
scas
mov
mov
adc
adc
or
dec
pop
xor
and
jecxz
inc
and
fadd
push
sub
shl
jecxz
jmp
jnp
mov
lahf
mov
pop
pop
xchg
test
push
mov
data16
ss
sub
(bad)
pop
mov
ret
push
stos
jmp
mov
ds
pop
mov
sub
xchg
dec
idiv
lea
mov
and
hlt
rcl
leave
mov
fstp
imul
sar
mov
or
jge
cdq
retf
les
push
setge
in
in
dec
xor
xor
mov
add
movs
out
adc
mov
ret
and
test
pop
sbb
xor
ja
ret
jb
hlt
repnz
mov
jmp
data16
(bad)
jl
pop
pop
push
pop
in
lea
mov
cs
repnz
push
fcom
mov
rcl
ret
in
ficom
add
retf
jmp
inc
mov
sti
jno
jns
jne
xor
jmp
sar
(bad)
jp
ins
adc
loop
cmp
push
test
out
pop
xor
jle
cmc
retf
rcr
push
and
jecxz
sbb
mov
test
dec
mov
xor
sub
sbb
add
and
fsub
std
cmp
nop
test
je
or
fidiv
mov
pop
cmp
out
mov
xchg
mov
(bad)
jge
scas
inc
push
mov
inc
sub
xchg
mov
sub
push
inc
xor
ret
mov
movs
xchg
and
xchg
mov
dec
xor
push
stos
dec
pop
loop
cld
xchg
adc
rcl
or
lds
iret
ror
repnz
rcl
xchg
cld
mov
push
pop
sbb
adc
add
rcl
add
dec
cli
sti
fidiv
js
sub
sub
es
mov
add
xchg
je
dec
jecxz
dec
and
(bad)
imul
inc
mov
mov
cli
push
push
(bad)
adc
cld
and
scas
add
jnp
icebp
ins
inc
sbb
ret
out
mov
(bad)
jne
mov
sbb
aaa
push
cmp
mov
not
fcmovne
mov
push
js
sbb
test
mov
inc
mov
pop
pop
or
loope
cdq
dec
mov
adc
mov
mov
mov
imul
mov
je
ror
pop
lahf
das
(bad)
repnz
jae
mov
aaa
fs
ret
push
(bad)
inc
dec
bound
fisub
mov
lods
aam
sti
and
xor
mov
add
push
cmps
cmp
dec
(bad)
fbld
arpl
jo
and
mov
or
jg
jge
clc
inc
(bad)
leave
inc
pop
pop
out
add
sbb
fiadd
ds
push
mov
ret
stos
sbb
popf
adc
(bad)
mov
leave
dec
add
inc
pop
push
leave
sub
call
inc
movs
or
inc
and
cmp
cmp
and
dec
mov
mov
xchg
add
rol
or
vpsllw
pop
pop
imul
cli
jp
cmp
ret
mov
lds
movs
push
icebp
ss
repnz
shl
(bad)
mov
clc
jae
ret
test
repz
and
out
mov
jae
mov
and
xor
ror
sub
stos
call
clc
jl
mov
push
pop
mov
rol
aam
inc
imul
jno
cdq
fdivr
or
and
or
sti
and
loopne
or
inc
repnz
retf
push
or
gs
fdiv
pop
mov
fsub
retf
aam
cmp
or
int3
or
mov
sbb
jmp
jns
xchg
sub
mov
inc
push
test
sbb
sbb
pop
cli
mov
mov
stos
mov
mov
adc
pop
cmp
cmp
cmp
jb
push
mov
jp
shr
ds
gs
or
pop
mov
sbb
mov
sub
clc
aam
shl
shl
inc
mov
add
or
mov
dec
sar
shr
pushf
ins
aam
cmp
sub
push
xor
pop
cmp
mov
nop
lea
movs
int3
push
add
jno
inc
mov
xchg
pusha
cmp
pop
jmp
cld
add
xchg
mul
outs
push
pusha
push
jl
sbb
mov
push
scas
sbb
or
icebp
jecxz
stos
inc
mov
push
add
or
sbb
fwait
mov
xor
push
push
push
cwde
inc
pop
cmp
sbb
xor
inc
add
test
adc
fistp
dec
push
inc
dec
sub
ins
push
bound
sbb
mov
xor
and
loopne
push
push
repz
and
inc
xor
xchg
loopne
cmp
ins
pop
clc
stos
stc
mov
(bad)
mov
mov
aas
add
test
cld
call
pop
(bad)
call
call
in
retf
cs
add
and
jbe
call
mov
in
jmp
lods
xor
int
ins
das
mov
jnp
addr16
fsubr
push
jg
jge
outs
jbe
sar
fsub
hlt
outs
sub
out
rcr
mov
cmp
leave
dec
inc
(bad)
jne
cmp
sbb
pop
ret
adc
leave
push
repz
sub
xchg
(bad)
(bad)
rcr
xor
xor
in
mov
jno
cli
push
rcl
mov
xchg
cmc
xor
push
jb
adc
lods
ja
adc
push
repz
into
test
add
stos
push
stc
(bad)
pop
jo
and
adc
or
push
loop
and
retf
bnd
adc
add
(bad)
pop
mov
xor
xor
sbb
test
jmp
pop
add
jnp
pop
ja
in
add
push
rol
hlt
shl
lds
xchg
call
xchg
mov
xchg
hlt
inc
and
scas
bound
fwait
shl
pop
xor
mul
js
dec
jmp
xor
push
in
stos
adc
retf
loop
pop
xchg
adc
or
sbb
cmp
pop
jp
call
inc
fstp
aad
gs
xor
and
inc
call
sahf
jno
int3
mov
sub
sub
and
adc
mov
xchg
inc
and
adc
cmp
add
loop
push
retf
pop
ins
not
cmp
sbb
mov
xchg
cdq
ret
jmp
or
push
jno
scas
mov
pop
(bad)
std
mov
mov
ret
push
mov
retf
cmp
sahf
sub
loope
pop
(bad)
dec
loope
push
cmp
js
or
les
les
cdq
jno
stos
xor
movs
cmp
sub
outs
mov
inc
jnp
add
mov
pop
push
retf
add
cld
mov
adc
dec
sti
adc
jle
imul
fdiv
adc
mov
sub
jo
int3
xor
loop
fmul
hlt
xor
sbb
aam
add
(bad)
std
mov
jl
cli
push
mov
(bad)
mov
mov
mov
mov
out
sti
dec
aad
neg
cld
jg
arpl
mov
xor
loop
js
mov
or
dec
inc
sub
not
cwde
pop
mov
cmp
stos
(bad)
xlat
aaa
sub
cmp
loopne
sub
jg
or
inc
push
arpl
cs
xor
xchg
mov
push
fild
push
dec
inc
pop
ss
push
imul
test
mov
xchg
or
cld
test
ins
push
idiv
in
lea
lods
shl
or
nop
stos
cmps
jae
leave
retf
mov
(bad)
fwait
shr
cmp
mov
inc
mov
adc
imul
mov
inc
xchg
mov
(bad)
loopne
test
xlat
push
or
and
cmp
or
and
lock
pop
inc
ret
(bad)
jmp
pop
imul
movs
fldln2
(bad)
mov
lock
mov
in
add
call
xor
lds
(bad)
int3
mov
pop
aaa
push
mov
sbb
lods
mov
pop
dec
mov
inc
mov
inc
and
clc
push
dec
imul
outs
lods
scas
repnz
sbb
loope
adc
sub
cli
push
adc
test
fs
fst
xor
push
data16
(bad)
arpl
adc
xchg
sub
push
and
pop
mov
ror
cmp
dec
fidiv
dec
pop
fidivr
mov
sbb
(bad)
mov
sbb
push
loope
sbb
mul
xchg
cmp
adc
jecxz
retf
or
cmp
inc
mov
mov
sti
add
jmp
(bad)
(bad)
aam
sbb
push
or
jb
pop
bound
mov
adc
cmps
fwait
es
jae
mov
sbb
jle
and
pop
pop
bound
mov
fs
dec
mov
repnz
stos
xchg
imul
mov
dec
pushf
jb
addr16
ret
jmp
(bad)
cmps
jmp
nop
in
loop
mov
pop
sub
shl
jl
enter
cwde
jge
scas
test
push
jns
push
jno
retf
mov
mov
loope
mov
out
cmc
inc
popf
movq
div
push
mov
xchg
inc
xchg
sahf
sbb
pop
xchg
lock
(bad)
loop
lods
jle
cmc
and
cs
aaa
and
imul
ret
mov
mov
mov
dec
lods
(bad)
mov
bound
imul
mov
fwait
bound
retf
cli
stos
call
or
sbb
cwde
out
fadd
add
push
loopne
cmp
test
cmps
adc
fwait
push
push
test
ficom
pop
shr
xchg
retf
mov
dec
jp
mov
js
adc
mov
xor
mov
sti
(bad)
fsubp
out
jmp
and
jbe
mov
xor
arpl
aaa
shr
sahf
lods
lock
in
fs
ds
repnz
adc
mov
cmps
pop
arpl
xchg
add
mov
adc
adc
add
int3
clc
xlat
fsub
jb
scas
or
add
jg
dec
cmps
push
inc
inc
gs
inc
and
jmp
adc
fwait
dec
lods
and
mov
jno
mov
jp
xchg
sub
xor
call
pop
clc
inc
and
cmp
retf
xchg
adc
cmp
ret
pusha
inc
les
or
ret
in
push
mov
(bad)
lock
stos
and
mov
fdivr
(bad)
inc
and
mov
mov
fs
sbb
pop
jb
sahf
sbb
out
imul
inc
dec
adc
dec
popa
xor
adc
ins
mov
(bad)
dec
jae
mov
jns
cmp
inc
bnd
rcl
pop
push
xchg
mov
mov
pop
mov
cli
(bad)
outs
inc
or
mov
push
ins
inc
adc
adc
call
adc
sbb
and
lds
sub
std
(bad)
or
adc
and
fwait
mov
inc
arpl
pusha
adc
jae
retf
mov
jle
fwait
nop
ficomp
or
arpl
lock
or
sbb
popa
rdmsr
jmp
jae
int3
jb
mov
jge
loope
cmp
fstp
pop
mov
xchg
xchg
sub
enter
in
jno
pop
sub
jne
ror
push
ja
push
ins
jo
retf
sti
fsubr
pop
cmp
dec
and
mov
jecxz
cmp
mov
lods
lock
stos
cli
adc
sahf
clc
hlt
cmp
jns
dec
inc
jmp
pop
icebp
add
mov
sbb
mov
out
cmp
jp
or
repz
lods
dec
movs
ins
jl
add
rcl
mov
pop
and
shr
cs
jmp
xor
stos
aaa
dec
mov
sbb
cmp
push
cmp
(bad)
leave
cmp
push
sbb
push
and
(bad)
jl
sbb
mov
push
mov
es
mov
dec
jo
dec
pushf
sub
push
sub
adc
pop
push
adc
stos
inc
mov
xor
adc
or
add
sub
jp
stos
push
jo
mov
repz
ror
mov
pop
shr
push
xor
xor
add
xchg
sahf
je
jnp
enter
cmc
shl
out
xchg
sbb
es
mov
lods
ret
ret
lods
mov
je
jp
pop
jp
icebp
bound
not
dec
into
js
movs
lods
mov
scas
ret
xor
jnp
mov
adc
bound
jl
xchg
mov
fnstenv
ret
retf
sbb
fisttp
popa
adc
xlat
dec
outs
push
dec
sub
inc
mov
pop
jnp
movs
add
repz
jo
sub
bound
test
aam
inc
cmp
sub
xchg
mov
loopne
xchg
cmp
inc
and
jae
into
fld
iret
mov
stos
(bad)
mov
cmp
cmp
sbb
push
and
shl
xor
mov
dec
inc
ror
sti
cwde
or
dec
mov
xor
arpl
adc
mov
or
push
push
cmps
jmp
cmps
scas
scas
rcl
neg
mov
shr
in
dec
and
mov
leave
push
jae
les
loopne
(bad)
push
int3
jb
out
call
call
das
dec
repz
retf
nop
rep
cmc
movs
leave
sub
in
aam
or
mov
push
jbe
or
jmp
mov
out
lahf
mov
add
add
xor
jae
retf
push
mov
fmul
mov
je
out
int3
mov
add
push
inc
xor
add
mov
shl
sar
clc
xor
sub
imul
pushf
shl
fsub
lahf
inc
cmps
mov
or
push
mov
push
pop
xor
adc
cwde
cmp
xchg
jno
cmc
call
cwde
je
push
je
push
sbb
fsub
or
(bad)
loope
and
pop
rcr
in
adc
std
mov
inc
inc
jg
fsubr
pop
outs
mov
test
repz
out
mov
xor
push
adc
call
mov
pop
dec
jne
inc
xor
mov
cmp
jg
loope
push
add
bound
sub
movs
je
xchg
addr16
icebp
cmc
adc
int3
jns
inc
inc
arpl
xor
das
movs
jbe
xor
nop
imul
cmp
xchg
pop
clc
push
sub
mov
mov
fstp
add
ss
ds
jge
pushf
mov
nop
add
stos
lods
mov
ins
inc
outs
pop
fs
dec
ds
adc
xlat
fsub
pop
retf
test
xor
cli
lahf
dec
and
mov
sbb
loop
lds
fdiv
dec
jnp
pop
jo
mov
hlt
and
popa
sbb
dec
push
pop
out
ret
clc
push
pushf
dec
repnz
test
mov
inc
push
fidiv
ja
loop
sub
inc
sbb
repnz
stos
or
cmc
jno
in
jp
pop
push
pop
sub
xor
xchg
add
jo
adc
shr
movs
inc
stos
add
inc
enter
call
jecxz
in
imul
inc
daa
and
or
sbb
imul
inc
sub
inc
adc
push
or
inc
ss
push
jnp
mov
(bad)
ret
mov
or
ret
adc
imul
xor
jo
mov
pop
clc
test
movs
jp
cmps
inc
scas
adc
dec
mov
xchg
mov
loop
or
(bad)
cwde
sub
into
movs
sub
aas
(bad)
shl
or
shr
or
dec
inc
das
jns
mov
imul
cmp
bound
mov
rol
fstp
cli
test
pop
aad
cmp
push
sub
mov
stos
outs
mov
pop
dec
or
jmp
jo
push
push
mov
ja
or
fs
xchg
loop
pop
imul
mov
mov
sub
retf
xchg
pop
and
jge
mov
sub
push
dec
push
or
mov
das
enter
enter
and
pop
les
xchg
js
test
or
into
xchg
add
mov
int3
ror
xor
fbstp
cs
pop
xchg
pop
mov
mov
adc
lea
jae
mov
lock
add
jecxz
bound
rcr
and
cmp
jno
stos
mov
dec
dec
jno
sub
int
mov
jae
push
loop
fwait
inc
push
xchg
jno
mov
jge
push
aas
dec
jl
mov
outs
mov
jg
cmp
lea
rol
mov
lahf
xchg
push
sub
in
aaa
or
mov
ins
nop
retf
sti
and
and
jbe
mov
aas
mov
inc
or
adc
aas
xor
cdq
push
or
mov
fidivr
popa
ret
ret
pop
jp
inc
hlt
push
stos
cmp
push
or
sub
fsubr
add
push
arpl
or
nop
imul
fwait
(bad)
mov
jne
and
sbb
call
cmp
xor
ret
shl
pop
push
dec
imul
mov
inc
push
dec
push
call
mov
xchg
das
outs
jne
sbb
adc
dec
adc
jne
int
cwde
or
scas
xor
push
mov
mov
adc
push
xor
scas
ror
adc
pop
lods
and
and
int3
lahf
loopne
stos
xchg
retf
and
mov
cdq
or
sub
out
jo
es
cmc
pushf
shl
arpl
jae
adc
iret
loop
or
out
cmp
test
or
pop
sub
ret
sub
out
arpl
lds
push
sub
jmp
push
and
leave
jmp
inc
sbb
sub
sbb
mov
mov
push
sub
fs
pushf
popa
test
repnz
in
repnz
repnz
daa
inc
add
or
xchg
push
pop
adc
idiv
dec
fbld
stc
ins
sbb
imul
pusha
jge
loopne
retf
push
(bad)
pop
call
scas
mov
cmc
xor
js
cmp
or
fdivr
ror
imul
push
ficom
add
mov
xchg
add
ficom
or
push
mov
pop
ins
push
add
dec
in
mov
int
and
mov
div
mov
or
ds
mov
mov
mov
push
adc
repnz
or
(bad)
loopne
ror
jp
pop
jbe
stos
js
call
mov
xor
pop
add
mov
xchg
jp
or
mov
jp
pushf
cmp
repnz
jmp
dec
mov
or
dec
xor
nop
retf
xchg
adc
leave
ss
test
pop
adc
mov
or
push
nop
movs
jb
cmps
jno
sbb
inc
push
sub
fdiv
push
pop
in
loop
or
push
or
lahf
push
out
rol
dec
imul
mov
push
and
repnz
inc
jnp
push
push
pusha
push
cmp
repnz
outs
push
inc
push
mov
inc
mov
retf
xor
sub
test
lods
push
adc
sub
cmp
scas
sti
out
xor
test
pushf
push
sub
mov
dec
jne
ret
and
mov
mov
xor
mov
jmp
lea
pop
or
mov
stc
out
xchg
mov
(bad)
xchg
xchg
push
adc
sti
push
adc
xor
out
jp
xor
dec
imul
leave
test
mov
sub
cmp
or
jo
jnp
daa
fcomp
and
sbb
push
fisub
aas
ins
mov
inc
test
push
adc
popa
cmc
mov
cdq
cmp
xchg
cmps
aad
pushf
loopne
jo
xchg
sub
call
inc
sbb
outs
(bad)
or
sti
pop
sub
jnp
fist
lods
ret
call
mov
mov
push
pop
ds
(bad)
stc
cmp
cmp
adc
mov
jnp
pop
scas
nop
imul
bound
and
or
daa
shl
call
ret
adc
jle
mov
mov
in
ficomp
aad
and
shld
xchg
mov
xchg
dec
mov
xor
jns
mov
movs
and
imul
repnz
or
sub
add
xor
add
pop
mov
sub
add
jg
mov
data16
pop
xchg
ja
dec
dec
pop
(bad)
idiv
sub
in
popf
pusha
push
mov
inc
push
mov
dec
jmp
mov
mov
mov
aas
sbb
fsub
shr
out
inc
adc
test
bnd
adc
mov
leave
adc
retf
cld
cmps
stos
mov
pop
xchg
mov
cmp
dec
mov
test
xchg
mov
imul
in
mov
scas
sub
dec
dec
bnd
es
jno
and
jl
out
(bad)
push
pop
call
push
adc
(bad)
mov
xchg
stos
xchg
mov
fld
ficomp
push
pop
jnp
inc
je
fcmovbe
dec
sti
and
mov
int
dec
ret
(bad)
retf
pop
push
mov
cwde
xor
lods
pmuludq
inc
in
fwait
popa
mov
sahf
call
mov
add
xor
push
lahf
inc
pop
movs
jne
jp
add
sbb
lods
sub
dec
add
xchg
call
jns
xor
xor
mov
add
xchg
fldenv
loope
stos
and
push
stos
repnz
shl
jae
out
pop
pop
sbb
les
cmps
(bad)
fwait
(bad)
shr
push
adc
pop
add
scas
out
sub
mov
jno
scas
fs
mov
out
jle
call
bound
imul
sbb
inc
shl
or
mov
imul
add
cmps
mov
dec
or
sub
mov
lds
jmp
and
push
repz
out
mov
call
push
mov
sub
shr
fadd
push
cdq
dec
mov
pusha
bound
mov
jmp
repnz
dec
push
test
pop
loope
xor
mov
cmps
(bad)
repz
fstp
mov
pop
mov
movs
clc
mov
xor
outs
scas
enter
adc
ins
out
mov
stc
sar
mov
jnp
shl
mov
sub
mov
sbb
xchg
or
loop
pop
push
mov
push
inc
add
mov
fisubr
adc
sbb
jne
(bad)
movs
in
jecxz
test
and
cmps
mov
add
addr16
cmp
xor
dec
lock
mov
sub
sbb
inc
and
push
shr
daa
mov
imul
add
pop
cdq
in
lock
sti
outs
mov
or
call
cs
push
lea
inc
out
mov
mov
cmp
mov
(bad)
inc
les
xor
jp
or
jae
and
neg
stos
jecxz
movs
call
xchg
adc
frstor
pop
pop
repnz
popf
xchg
popf
ins
xchg
pop
rcr
movs
xor
les
cmp
jb
int
push
std
and
into
inc
adc
dec
stc
cmp
jne
lahf
popa
pop
xchg
jb
(bad)
dec
cmc
jmp
mov
and
pminub
mov
cmp
pop
push
cdq
inc
int
push
push
repnz
mov
retf
inc
xor
xchg
cmp
repnz
out
and
rol
adc
and
cli
mov
jmp
cmps
or
or
push
pop
xchg
mov
add
addr16
shl
mov
out
pop
or
arpl
stos
push
sub
aas
add
(bad)
loop
inc
sub
iret
daa
xor
int
dec
push
cwde
lods
repnz
push
or
ret
fldcw
cmp
imul
pop
retf
adc
sbb
push
jmp
das
sub
(bad)
mov
mov
add
out
inc
out
cmp
pop
dec
cmp
(bad)
pushf
push
(bad)
sbb
and
or
jp
mov
test
dec
popf
xor
dec
sub
loop
imul
call
or
sbb
aas
sub
ficomp
and
js
mov
xchg
pushf
cmp
jae
mov
inc
dec
inc
jb
jmp
clc
sbb
xchg
mov
mov
mov
sbb
dec
stc
mov
xor
jecxz
les
push
lds
cmp
mov
jmp
mov
retf
jns
inc
sbb
shl
cmp
mov
jmp
cli
int3
or
ds
push
pop
pop
pop
or
jmp
in
repnz
cmp
xchg
xchg
nop
sbb
lds
sub
leave
jne
repnz
jecxz
jnp
call
ret
iret
pushf
adc
add
aaa
das
pop
idiv
cmc
push
data16
fcom
inc
push
adc
push
dec
inc
inc
mov
ret
jp
or
popa
or
daa
inc
dec
cld
shl
and
xchg
fdiv
or
mov
mov
les
retf
(bad)
lock
adc
add
push
mul
sti
mov
inc
xor
inc
dec
add
pop
popf
pop
mov
xor
repz
fbld
inc
and
mov
loopne
jle
sti
push
sub
out
xchg
pop
scas
push
aad
dec
jmp
sub
ret
mov
mov
mov
sub
xchg
movs
jmp
cmp
(bad)
mov
gs
xlat
ss
inc
push
test
cmp
fsub
out
cmp
xor
shl
xor
mov
leave
nop
push
or
les
ss
mov
or
jle
jecxz
pop
dec
lock
mov
jnp
js
into
inc
dec
mov
das
push
(bad)
xlat
push
js
mov
call
cmp
inc
jecxz
inc
fwait
push
stos
aas
push
lds
stos
sbb
int
sbb
ins
scas
adc
push
push
mov
add
popf
mov
xor
stos
aam
shl
mov
std
or
push
sub
sahf
movs
addr16
loop
imul
xor
popa
(bad)
push
mov
fs
outs
mov
mov
retf
mov
pop
lods
dec
sub
hlt
jmp
xor
repz
push
sbb
mov
xchg
jp
adc
jl
and
mov
je
lock
lods
xor
cwde
or
xor
or
and
xchg
imul
mov
(bad)
xchg
add
cmp
xor
ret
movs
push
xor
int3
add
out
xchg
out
ror
mov
(bad)
mov
inc
pop
pop
les
dec
mov
mov
or
int3
mov
stos
in
jae
cmp
stc
mov
xchg
mov
jbe
inc
xor
mov
stos
rol
ret
ror
xchg
lods
push
mov
call
xchg
jg
mul
fadd
les
int3
or
jp
or
in
scas
into
mov
mov
cmp
clc
lods
xchg
int3
adc
push
mov
loop
mov
enter
mov
or
dec
jae
adc
jmp
not
ret
cli
les
loopne
cmp
mov
out
pop
xor
pop
inc
neg
cmp
div
call
or
or
sbb
repz
sub
pop
out
mov
jb
xchg
not
or
lods
sbb
cmp
xor
fsub
cmp
sti
jno
mov
jl
jp
sub
call
jb
jl
jg
movs
or
dec
in
out
inc
inc
je
inc
jns
sbb
sbb
aaa
cmp
jmp
loop
sar
pusha
call
rcl
ret
xchg
data16
jmp
rcl
in
(bad)
sti
xchg
fxtract
shr
ror
sahf
test
aad
pop
xor
sbb
lods
ficomp
cmp
inc
and
mov
rcr
retf
(bad)
cmp
adc
push
and
mov
xchg
push
xor
cmp
mov
jle
sbb
ror
pop
das
shr
mov
xchg
imul
add
call
xor
pop
jle
inc
int
sti
dec
inc
push
sbb
push
cld
dec
mov
call
or
pop
cmp
and
scas
adc
xchg
scas
jp
rcl
push
cmp
jb
sub
push
dec
shl
mov
sbb
jp
pop
out
add
lahf
pop
ret
in
mov
call
in
jmp
ins
bound
add
and
mov
ret
dec
cli
mov
icebp
cli
and
pop
repnz
push
je
lods
push
shr
ins
(bad)
gs
adc
test
add
sub
test
rcl
mov
sbb
in
adc
retf
xor
push
push
mov
mov
(bad)
xchg
shl
mov
mov
pop
mov
cld
mov
ret
out
or
sub
or
push
(bad)
div
sbb
pop
(bad)
mov
jl
xor
loop
shr
les
add
jmp
inc
pop
and
xor
sbb
xchg
shl
rol
cli
or
loopne
mov
push
cli
dec
jb
fs
jns
push
outs
repnz
dec
das
shr
lods
sub
(bad)
hlt
sahf
movs
add
push
sub
xchg
test
fiadd
pop
daa
add
sbb
inc
mov
sbb
dec
inc
push
xlat
int3
pop
sub
xchg
shl
(bad)
jmp
jno
mov
xchg
xchg
mov
cmc
dec
mov
arpl
cmp
pop
aam
cmp
mov
push
push
xor
repnz
imul
js
loop
sub
jmp
xor
ds
mov
mov
mov
fdiv
and
xor
(bad)
jae
dec
push
sti
push
add
dec
les
lahf
scas
in
ds
popa
xchg
rcl
push
xor
jno
jae
sbb
xor
xchg
pop
movs
sti
adc
and
xor
pop
rcr
ret
jmp
imul
jecxz
mov
inc
ss
lock
stos
shl
adc
in
jp
into
jecxz
out
jnp
and
pop
push
addr16
(bad)
rcl
cld
dec
pop
test
retf
sbb
ss
lods
loopne
shl
xor
retf
add
fwait
aad
adc
jnp
jp
cs
cwde
sbb
jns
sti
call
ret
scas
sbb
in
repnz
mov
add
push
sbb
out
mov
mov
cmp
sbb
int3
sub
lahf
xor
jb
movs
pop
sbb
pop
mov
scas
jg
pop
push
or
push
jbe
dec
pop
sub
shr
mov
pop
jae
inc
out
pop
popf
(bad)
ror
jge
adc
bound
xchg
pop
int
call
std
push
sar
gs
mov
adc
loop
add
mov
jmp
xor
inc
push
pop
jl
jns
es
push
btc
cs
gs
and
cmp
fmul
pop
in
mov
addr16
add
aaa
and
popf
cli
xchg
leave
cdq
cmp
xchg
cmps
push
sar
jecxz
cmp
call
push
fidiv
adc
ds
and
shr
jb
mov
sub
dec
lea
aas
xchg
mov
inc
push
sub
and
ins
mov
jl
jecxz
mov
mov
push
pop
or
mov
int
cdq
rcl
add
push
fimul
or
or
mov
or
ins
adc
sbb
pop
cs
sbb
repnz
jo
shl
leave
xchg
sbb
and
or
add
mov
add
pop
xchg
aad
xchg
mov
mov
inc
fld
add
and
and
xchg
inc
stos
(bad)
mov
call
jns
shr
imul
(bad)
jmp
mov
call
jl
inc
repnz
dec
ja
sub
inc
dec
mov
pop
add
mov
inc
adc
sbb
cwde
and
push
(bad)
lods
or
loope
cmps
jmp
loop
addr16
sbb
mov
test
bound
es
popw
adc
push
pop
cmp
ins
jno
clc
dec
dec
call
sbb
xchg
push
xor
push
fiadd
sbb
aam
call
mov
int
in
repnz
clc
jp
jnp
pop
repnz
test
jp
cmp
mov
aam
hlt
imul
mov
xchg
jbe
shl
xchg
hlt
and
lods
dec
mov
test
pop
mov
or
out
or
test
stos
xor
dec
and
pop
push
dec
dec
repz
cmps
adc
and
test
xchg
ds
stos
popf
loop
call
adc
push
popf
jb
push
sub
or
pop
adc
or
cmps
jmp
ror
or
es
or
es
inc
ret
jmp
nop
clc
fcmove
push
add
sbb
pop
ds
inc
pop
fs
(bad)
fidiv
sar
iret
jmp
cmp
sti
or
add
cmp
pop
dec
and
pusha
add
mov
aaa
adc
jne
cmp
pusha
fidiv
xchg
lds
xchg
test
sub
push
ficom
and
jge
lea
inc
push
mov
les
xor
retf
int
rcl
mov
int
retf
test
push
dec
mov
xor
retf
int
push
sbb
imul
jb
or
jmp
fwait
and
dec
mov
inc
pop
mov
push
mov
pusha
nop
call
arpl
adc
(bad)
mov
fimul
call
loopne
xor
mov
push
and
or
ins
inc
jmp
movs
pop
push
xor
push
dec
jmp
adc
sub
das
dec
mov
pop
bound
in
cli
dec
cdq
pop
sub
add
repnz
pop
mov
and
(bad)
xlat
out
pop
or
dec
xor
lahf
test
or
push
ret
addr16
dec
mov
retf
inc
pop
inc
jle
data16
xlat
and
nop
sbb
in
js
push
addr16
clc
inc
jne
and
cmp
push
in
cmp
dec
imul
jecxz
ins
int3
or
stos
mov
icebp
sub
pop
movs
mov
mov
hlt
stos
and
shr
ret
jmp
call
or
sbb
fninit
call
cmps
inc
mov
xchg
mov
popa
ins
dec
or
sub
fwait
push
or
jmp
cmp
test
pushf
add
push
imul
aad
mov
push
into
inc
jg
fnstsw
pop
add
hlt
out
mov
push
pusha
rcl
mov
shr
retf
add
bound
into
inc
call
adc
sub
cmp
rcl
repnz
xchg
cli
adc
or
mov
sbb
or
adc
fcomp
adc
mov
ds
cmp
js
cmp
movs
dec
bound
pop
std
in
dec
cmp
add
cli
nop
call
mov
xchg
sub
mov
xchg
adc
loop
pop
inc
fwait
jno
das
cli
scas
in
mov
sub
mov
mov
sbb
sbb
fld
push
dec
or
jo
pop
ficom
or
adc
jnp
enter
enter
jle
sahf
dec
mov
adc
cwde
jmp
stos
rcr
test
das
int
cmp
lahf
ret
mov
shl
add
jae
cwde
xor
jb
sub
push
es
icebp
and
call
xor
push
inc
mov
push
ret
cmps
es
push
sahf
(bad)
xchg
imul
pusha
or
jb
js
nop
retf
xchg
xor
pop
enter
xchg
sti
ja
ret
xor
std
inc
repnz
jo
in
jp
(bad)
xchg
into
xchg
jo
sbb
in
xchg
cli
sub
outs
or
dec
mov
scas
cld
rcl
mov
retf
add
aad
mov
leave
dec
and
mov
and
mov
dec
or
jmp
mov
test
out
push
mov
mov
dec
outs
(bad)
sub
xor
fstp
sub
jae
sub
mov
call
sbb
sub
sbb
fdivr
mov
jae
not
adc
xor
fiadd
xor
inc
retf
jle
jl
movs
xor
call
mov
cwde
(bad)
test
mov
dec
call
repz
int
mov
inc
cmp
mov
or
dec
cmc
scas
ret
mov
ins
ja
mov
mov
push
add
ret
inc
and
fs
sahf
call
stos
stos
jmp
aas
fdiv
imul
push
jbe
xor
mov
mov
out
cmc
outs
jae
sbb
pop
cmp
(bad)
xlat
xchg
xchg
mov
mul
sub
cmp
inc
ror
jecxz
hlt
pusha
jmp
data16
sahf
loope
mov
adc
jbe
jo
sbb
movs
or
pop
in
call
mov
adc
and
addr16
shl
mov
jecxz
or
loop
inc
sub
dec
push
and
push
mov
mov
loope
(bad)
add
test
sub
xchg
out
pushf
jno
test
jmp
jmp
retf
ror
jmp
stos
jae
xor
adc
pop
mov
arpl
fwait
popf
mov
(bad)
and
scas
addr16
es
pop
fisttp
add
cmps
add
or
jmp
pop
sar
jbe
jne
pop
xor
scas
adc
ficomp
push
pop
jnp
push
test
sbb
shr
retf
and
nop
(bad)
ret
out
mov
sbb
sbb
clc
rcr
inc
xor
idiv
scas
stos
add
sbb
jle
push
std
sub
xor
mov
mov
(bad)
adc
cmps
dec
push
jbe
inc
or
xchg
sbb
pop
mov
mov
fst
and
fisub
pop
pop
aaa
outs
cmc
fist
xchg
cmp
ins
sub
jge
push
sahf
sbb
(bad)
mov
mov
cmp
add
fst
pusha
xor
(bad)
aas
jle
stc
push
mov
xchg
repz
sahf
call
mov
mov
lea
fdivr
jmp
in
ret
adc
iret
xchg
push
imul
and
mov
repnz
cmp
jb
sti
mov
call
mov
sbb
cmps
es
pop
repz
cld
cmp
jbe
xor
or
pop
rol
xchg
imul
call
cld
test
imul
ds
add
repnz
clc
mov
inc
test
gs
inc
lds
xchg
mov
std
adc
clc
jbe
bound
xchg
leave
jle
out
jmp
inc
mov
pop
call
push
test
(bad)
xor
(bad)
je
in
jmp
sbb
fldcw
stos
jnp
(bad)
out
xor
mov
xchg
xchg
aas
push
dec
dec
stos
aaa
int
sbb
in
jp
(bad)
push
gs
adc
fisub
in
out
mov
mov
cmps
aaa
out
stos
or
ja
xor
mov
out
dec
xchg
aas
test
sbb
jmp
cwde
test
jae
push
or
xchg
mov
retf
or
mov
or
stos
push
xor
dec
adc
mov
cmc
inc
xor
mov
rcl
add
push
or
mov
call
and
xor
ret
dec
jg
loop
or
push
cli
scas
xor
daa
call
shr
mov
inc
popf
fcmovu
test
or
les
jno
push
scas
adc
mov
fdiv
aam
fldenv
jmp
jp
aad
adc
and
mov
dec
push
and
mov
lds
push
jb
pop
pop
xchg
adc
dec
add
dec
sbb
test
out
test
mov
mov
cmp
outs
stos
jg
cmp
fcmovbe
loopne
outs
jecxz
cmp
xor
add
pop
adc
and
jb
dec
arpl
nop
call
jb
push
int
cmovae
or
add
sub
arpl
call
mov
stos
push
cmp
cmp
or
mov
mov
enter
ret
jmp
mov
adc
mov
repz
(bad)
retf
jge
and
pop
sbb
xchg
and
call
sar
call
scas
ret
push
pop
add
aaa
inc
int
inc
sub
(bad)
retf
push
xor
mov
cdq
in
es
in
and
pop
jnp
bswap
div
addr16
mov
rcr
popf
cli
ins
vpor
in
pop
xor
pop
mov
jo
out
in
seta
repz
adc
mov
mov
ret
cmp
shl
mov
stos
retf
pop
adc
xor
xor
sahf
in
jno
repnz
jne
leave
stos
xor
sub
dec
mov
mov
retf
fldenv
leave
sub
mov
mov
ret
jae
ins
mov
popf
leave
daa
movs
in
jns
xrelease
icebp
cmps
repnz
mov
jnp
mov
repz
and
sti
xor
(bad)
cmps
cs
jg
test
sbb
xchg
xor
and
adc
xor
and
and
sub
shr
js
sbb
mov
iret
(bad)
fnstcw
adc
inc
call
jle
xor
fbld
test
ret
dec
sub
nop
into
xchg
mov
loop
jg
sbb
sti
pop
ficomp
icebp
stos
dec
xor
(bad)
xor
xchg
outs
cli
and
dec
dec
fcomp
inc
xor
int3
dec
adc
and
mov
call
or
inc
je
loopne
es
sbb
jnp
fsub
leave
and
(bad)
jl
push
inc
mov
push
cmc
xor
sbb
and
sub
mov
dec
xchg
pop
repz
sub
sti
enter
or
inc
mov
mov
bound
pusha
dec
mov
push
mov
sub
ja
dec
mov
add
loope
jle
scas
mov
mov
dec
pop
cmp
mov
int
push
inc
pop
mov
mov
mov
leave
jb
adc
pop
pop
iret
adc
ret
jl
call
push
adc
jnp
scas
lods
sub
dec
ds
int
add
push
cmp
call
add
adc
xlat
mov
pop
and
cld
add
mov
pushf
push
dec
sbb
fcmovb
shl
loop
jmp
pop
pop
dec
add
mov
push
mov
addr16
add
test
sbb
test
sub
push
mov
mov
dec
cmp
push
pop
cwde
mov
ror
pop
loop
jle
lods
jge
mov
aas
retf
cmp
pop
mov
daa
pop
add
mov
sbb
into
mov
pop
cli
(bad)
jp
pop
out
dec
ret
rcr
inc
(bad)
cmps
into
jbe
cmp
mov
inc
mov
sbb
sub
or
jmp
cmp
sub
lahf
push
ds
xor
adc
or
mov
push
fimul
mov
ins
and
inc
and
and
jae
xchg
sub
out
cmp
jecxz
imul
jp
cmp
sub
mov
or
or
lea
dec
ret
shr
push
(bad)
repz
(bad)
lahf
add
cmp
out
gs
jns
adc
xor
fld
pop
out
push
xor
out
inc
jmp
inc
call
xchg
stos
js
repz
add
cmps
or
xchg
push
or
xchg
jae
sub
bound
pop
or
mov
pop
mov
(bad)
mov
and
and
movs
xchg
xchg
loop
fnstcw
and
dec
repnz
cmp
sbb
xor
inc
repnz
inc
xor
jle
sbb
test
mov
dec
pop
mov
bound
inc
add
retf
inc
cdq
dec
(bad)
cmc
int3
push
jnp
xchg
or
fld
inc
jbe
lahf
dec
cli
mov
shl
jp
mov
mov
sbb
or
xlat
push
add
sbb
adc
add
mov
mov
clc
fdiv
sbb
cmps
in
and
sub
cmp
jns
mov
mov
mov
mov
mov
in
xchg
xor
push
fdiv
inc
mov
cmps
jb
sub
cdq
cmps
inc
in
cli
stc
xchg
rcl
or
xchg
cmp
or
pop
adc
pop
mov
mov
fcmove
mov
dec
fwait
or
push
jne
mov
or
outs
ror
movs
je
loope
and
dec
pop
jae
(bad)
mov
xchg
sbb
js
jmp
mov
(bad)
ja
mov
xchg
fnstenv
repnz
dec
pop
retf
mov
cmps
repz
ror
mov
push
mov
outs
mov
mov
cmp
mov
jmp
sahf
sub
out
or
jbe
xchg
xor
dec
and
pop
adc
and
xor
cmp
mov
test
inc
pusha
cmp
aaa
xlat
push
lds
cmp
test
(bad)
arpl
mov
pop
pop
sbb
loop
cs
cli
ret
arpl
push
push
mov
fdiv
mov
cld
dec
push
or
shl
pop
ins
xor
outs
pop
mov
data16
imul
movs
mov
inc
dec
pop
fbld
add
sbb
lods
imul
mov
mov
sbb
dec
dec
fsubr
jmp
cmp
jg
xchg
mov
add
sbb
pop
lock
pop
rcl
dec
or
push
add
cdq
pop
cmp
xchg
pop
(bad)
xchg
and
or
loop
call
ficomp
mov
jb
fs
mov
out
mov
or
movs
push
fs
sub
mov
jae
pop
pop
lea
jmp
sar
jecxz
inc
outs
popf
mov
xchg
pusha
cli
xor
pop
popa
fwait
mov
jmp
adc
ret
pop
cmp
adc
sub
xor
cli
hlt
inc
popa
fs
mov
mov
mov
retf
mov
repnz
push
pop
mov
xchg
cmp
aam
cmp
sub
gs
push
popa
mov
imul
adc
je
aaa
dec
in
add
dec
fbstp
cmps
stos
adc
dec
push
mov
xchg
fwait
push
add
jmp
ret
repnz
imul
dec
mov
ss
popf
mov
mov
jns
xchg
rcr
push
test
cmp
push
jmp
sbb
int
imul
mov
fnsave
fnstenv
jnp
lds
aas
(bad)
aas
in
mov
stos
mov
(bad)
loop
and
jne
shr
add
icebp
jp
add
sub
inc
out
mov
xchg
sub
add
cmp
mov
popf
dec
loopne
fwait
ret
xchg
out
xor
out
xchg
add
xlat
jmp
add
sub
popa
icebp
dec
dec
add
mov
cmp
retf
add
mov
xor
cmc
mov
into
das
adc
mov
sub
idiv
mov
adc
mov
push
out
adc
xor
add
or
jb
test
cli
pushf
les
cmp
cmp
and
stos
xchg
dec
pop
repnz
cli
sub
and
adc
loop
mov
mov
je
inc
dec
mov
sub
frstor
bound
addr16
mov
inc
loop
icebp
ror
imul
clc
ret
sbb
sub
sbb
mov
retf
dec
inc
jae
push
shl
imul
aaa
inc
inc
push
push
ret
sbb
pop
adc
repz
ins
popa
sbb
push
add
add
stos
dec
xchg
or
cwde
mov
mov
add
xor
int3
pop
xchg
ds
das
fwait
sub
leave
xchg
pop
das
jmp
and
in
jbe
jae
jae
or
cmps
mov
stos
outs
nop
out
cli
mov
mov
pop
dec
push
js
retf
daa
imul
pop
clc
repz
pop
in
fadd
retf
jg
pop
push
lds
jg
dec
das
daa
icebp
icebp
ja
ror
sbb
aad
(bad)
fwait
(bad)
in
push
test
add
imul
fcomp
sti
add
in
xchg
cmp
pop
and
cmp
or
int
aam
and
xlat
inc
call
dec
repnz
inc
outs
rcl
xchg
add
mov
sbb
pop
sub
or
pushf
shr
std
jp
xchg
(bad)
mov
cs
sub
imul
fwait
nop
or
jae
sub
bndldx
repz
stos
or
mov
add
clc
daa
mov
je
sub
test
mov
sar
add
clc
inc
mov
ins
or
stos
or
xchg
mov
cmps
xchg
shl
xlat
mov
sar
cli
inc
pop
mov
pop
xchg
adc
out
and
sub
jae
inc
mov
std
pop
int
(bad)
cli
sub
pop
jne
cmps
sbb
(bad)
mov
ret
ror
in
cmc
cs
stos
ja
sub
fist
fsub
pop
(bad)
inc
imul
(bad)
dec
fdivrp
stos
repnz
mov
retf
lods
dec
popa
push
mul
mov
rcr
jecxz
jge
push
xor
fisubr
mov
push
movs
sbb
outs
inc
pop
fldl2t
test
out
imul
sar
mov
mov
push
xchg
add
mov
push
push
fdiv
or
sbb
loop
jno
inc
xor
icebp
xor
lds
xchg
cwde
xor
test
mov
movs
cli
add
cmp
mov
shl
aad
test
mov
and
clc
dec
and
add
dec
icebp
push
and
mov
add
push
pusha
fwait
pop
mov
jbe
mov
dec
jp
jp
ret
fdivr
clc
inc
movs
popa
into
mov
add
dec
data16
mov
pop
sub
add
xchg
fistp
xor
sub
ja
leave
stos
pushf
inc
fisubr
leave
in
scas
or
gs
mov
push
sbb
jo
inc
mov
dec
xor
mov
sub
mov
jnp
mov
ret
cmp
movs
xor
shr
sub
adc
cdq
push
xchg
enter
ret
cmp
mov
js
inc
jmp
add
jle
out
jae
push
gs
sub
movs
sti
cmp
and
cmps
mov
sbb
(bad)
push
call
test
mov
jno
rcr
ffreep
retf
adc
test
xor
aas
jle
xor
retf
add
(bad)
rol
shr
(bad)
fistp
mov
daa
push
push
mov
retf
out
ins
mov
into
in
xlat
daa
pop
jae
and
cmp
out
xor
js
das
and
sti
push
add
fidivr
shl
mov
stos
sbb
je
out
push
jle
jmp
pop
test
iret
and
retf
int3
test
xor
pop
xchg
jne
dec
jbe
ds
repnz
loope
(bad)
xchg
shl
pushf
mov
mov
dec
xor
jle
add
adc
stos
push
sub
push
es
xor
(bad)
stc
in
mov
xchg
jmp
xor
aad
or
or
mov
sub
jb
fidiv
mov
aas
out
mov
sub
jle
xchg
pop
inc
xchg
inc
dec
inc
out
mov
xchg
or
cmps
ins
rol
leave
adc
fstp
fwait
adc
loope
push
es
aam
pop
ja
call
call
ds
push
adc
mov
and
dec
test
setae
repnz
mov
(bad)
in
jae
rcl
es
xchg
mov
mov
sbb
retf
xchg
xchg
(bad)
jne
cli
in
es
cmp
loop
pop
repnz
shr
mov
add
fwait
out
xchg
jno
adc
in
pop
cmps
jle
stc
jnp
adc
retf
iret
test
js
loop
xchg
push
cmp
push
sub
adc
push
stc
(bad)
jmp
sbb
test
jmp
lea
rcl
xor
ret
adc
mov
arpl
sbb
add
pop
aad
addr16
sub
test
int
popf
shl
ret
push
dec
mov
jecxz
enter
fwait
cmps
fimul
lods
rcl
(bad)
in
call
ret
jns
xor
lea
retf
cmp
jns
imul
and
and
jno
push
loopne
stos
sub
mov
xor
xlat
inc
cmp
mov
or
cmp
push
sub
or
fidivr
mov
adc
adc
pop
jns
arpl
or
mov
ins
lock
sub
fs
and
xrelease
dec
int
xchg
dec
bound
mov
dec
xor
jnp
mov
ins
retf
jmp
pop
fst
jl
cwde
add
dec
scas
mov
cmps
or
in
ficomp
(bad)
or
add
mov
mov
mov
adc
mov
mov
div
(bad)
xchg
inc
loop
add
jp
or
adc
cwde
and
sbb
repz
push
or
push
inc
inc
aaa
outs
lock
cmp
or
sbb
jp
pop
cmc
jnp
mov
jbe
outs
retf
pop
xchg
xchg
ret
mov
nop
mov
xrelease
in
sbb
imul
into
push
scas
jle
js
xor
js
add
push
stos
lods
out
int
cmps
ficom
xor
or
daa
ja
mov
(bad)
imul
in
mov
push
mov
stc
push
inc
dec
fcmovne
les
mov
scas
and
xor
iret
jmp
cmp
jmp
mov
mov
fistp
cld
dec
jo
jle
in
jmp
ds
mul
aaa
jg
mov
loop
mov
call
test
mov
push
inc
sahf
sub
mov
push
mov
jmp
arpl
xor
xchg
out
(bad)
je
xor
shl
jb
pop
xor
push
or
jp
push
dec
xchg
js
sbb
inc
mov
xchg
inc
pop
pop
repnz
pushf
int3
loopne
inc
mov
ret
adc
mov
jnp
sbb
pop
in
clc
push
dec
movs
test
lds
sbb
jp
push
ret
stos
cmp
jge
push
push
stos
pop
dec
repnz
or
jbe
push
lahf
jle
call
lahf
gs
mov
or
dec
push
xor
sub
cmp
jmp
iret
add
in
mov
or
je
xor
clc
xchg
retf
push
mov
push
jecxz
ror
mov
mov
mov
into
add
aam
ret
repz
shl
adc
sbb
sub
test
mov
(bad)
bound
scas
jecxz
add
xor
in
scas
xor
xchg
inc
xor
xchg
push
test
bound
repz
pop
mov
loop
fdiv
sbb
aas
pop
cmp
lahf
(bad)
call
add
push
fdiv
sbb
sbb
mov
in
xor
inc
adc
or
jle
push
fldcw
dec
mov
adc
lock
test
nop
xor
mov
jge
jne
xor
aaa
sbb
repz
(bad)
jno
add
ficomp
shr
mov
mov
jg
inc
outs
lahf
ror
mov
add
ret
xor
sub
ror
bound
lock
cli
sbb
adc
and
mov
je
mov
scas
sub
rcr
push
inc
sub
or
mov
xor
lods
add
push
mov
push
and
mov
push
sti
test
fwait
popf
nop
jne
and
(bad)
call
fdivr
repnz
xchg
int3
push
outs
cmp
or
pop
call
pop
test
push
jb
rcr
adc
jns
adc
xchg
jl
jae
jmp
int
stc
ja
sub
call
lds
mov
jno
push
dec
and
xchg
stc
xchg
(bad)
cli
adc
pop
fisub
test
and
stc
jno
sub
mov
adc
xchg
pop
mov
inc
push
jp
repnz
jb
inc
inc
fld
mov
iret
jmp
inc
adc
push
push
sbb
dec
add
data16
and
cdq
mov
(bad)
xor
add
dec
sbb
ss
cmp
xor
daa
inc
inc
cmp
pop
push
jnp
xchg
mov
ret
(bad)
jl
xor
mov
movs
call
xchg
stc
inc
hlt
cmp
jp
pop
xchg
lods
mov
fsub
mov
sbb
dec
and
add
xchg
pop
jno
repz
jmp
or
inc
mov
cli
jl
sar
sar
adc
inc
or
ficomp
int
retf
dec
stos
fs
and
icebp
imul
(bad)
or
pop
mov
adc
int
sbb
test
push
(bad)
sbb
sbb
and
xchg
push
pop
xchg
fsubr
leave
fld
or
mov
test
jb
pop
dec
sub
dec
int
enter
dec
xlat
add
fcom
rsqrtps
or
push
cmp
fistp
adc
jmp
mov
add
push
ins
dec
mov
aaa
pusha
je
push
xchg
clc
xchg
xchg
jnp
mov
cdq
clc
sbb
mov
rol
movs
jmp
push
stos
xchg
neg
cwde
retf
call
in
fisttp
add
ret
cs
stos
rcr
mov
cli
pop
inc
imul
mov
push
dec
and
xchg
data16
fadd
imul
pusha
jno
lods
inc
mov
add
inc
popf
sub
sbb
repnz
dec
pop
xor
mov
loope
adc
call
fcmovu
jo
xor
jb
mov
popf
scas
cmp
jl
fwait
and
dec
iret
and
cld
jecxz
jmp
ins
movs
fld
and
lock
cmp
ja
outs
(bad)
pop
int
rcr
cwde
pop
xor
loopne
xchg
xor
mov
add
shl
lahf
retf
inc
shl
or
xor
jle
sbb
mov
jecxz
cli
mov
push
loop
lock
mov
pushf
push
dec
push
cmp
cld
test
in
mov
test
and
int
lahf
and
mov
cmp
shr
call
sti
ror
sbb
ds
call
push
shr
sbb
ins
pop
sub
jmp
sub
popf
lea
xchg
in
mov
sbb
mov
imul
jg
leave
jb
addr16
xchg
push
cmp
rol
dec
pusha
ss
mov
retf
mov
push
cmp
out
cmc
dec
(bad)
cli
cwde
mov
ror
xor
pop
push
and
out
and
xchg
xchg
bswap
xchg
cli
add
fwait
js
adc
mov
xor
inc
push
and
fisub
mov
rcl
and
lods
adc
je
cmp
mov
clc
mov
mov
out
(bad)
(bad)
mul
adc
addr16
das
int
dec
stos
jecxz
lea
dec
repz
mov
call
aam
pop
pop
pop
pop
ss
sub
adc
inc
mov
and
fwait
dec
jae
ja
mov
push
inc
hlt
imul
dec
mov
(bad)
xchg
repnz
das
jmp
stos
popf
ret
jne
push
(bad)
jmp
jo
adc
mov
call
repz
outs
or
mov
push
cmp
xchg
imul
xlat
and
sub
jne
mov
sub
clc
loop
sar
adc
add
leave
cmps
and
test
stos
leave
repz
push
push
cmps
fldcw
cli
rcr
mov
js
call
mov
cmp
or
xchg
pop
in
out
dec
cmp
(bad)
mov
jne
pop
sub
aas
ja
mov
cmps
sub
loop
inc
xor
dec
or
adc
clc
jae
inc
push
jne
push
lea
xor
or
mov
inc
repz
popf
inc
mov
xlat
cs
retf
pop
std
push
jg
jns
sub
pop
dec
sahf
dec
xchg
add
loopne
mov
nop
cdq
mov
outs
xor
pop
(bad)
idiv
nop
cmp
or
bound
push
mov
dec
popf
mov
std
shl
pop
or
sar
ss
adc
push
aaa
or
pop
inc
(bad)
push
loopne
ss
fcmovu
ret
stos
xchg
push
(bad)
nop
push
xchg
xchg
add
push
adc
push
imul
imul
push
add
ret
test
xchg
mov
mov
mov
in
retf
(bad)
mov
stos
out
in
cmc
pop
dec
xor
jns
push
loop
pop
xor
sbb
iret
in
movs
add
cmps
or
mov
bound
es
aad
adc
and
jp
ret
sahf
pop
int
(bad)
(bad)
pop
push
adc
mov
jmp
cmp
outs
bound
jno
fist
rol
ds
and
add
inc
cwde
bound
aas
sub
stos
inc
nop
sar
pop
sbb
retf
mov
push
xchg
jp
out
shr
adc
cli
ret
mov
inc
pop
pop
dec
jmp
cmps
jmp
add
dec
sub
in
rcr
fstp
xchg
ficom
arpl
jno
mov
jp
jno
and
not
mov
repnz
and
xor
push
repz
(bad)
pop
dec
push
dec
ja
or
cwde
dec
mov
cmp
xor
add
loopne
or
mov
mov
cmps
and
xor
call
lods
xchg
sbb
adc
(bad)
daa
and
add
fucomi
cwde
push
jmp
jns
sub
sub
(bad)
inc
push
sbb
add
xchg
rol
or
ja
xchg
and
ds
(bad)
test
or
je
mov
or
push
sub
rcr
or
cli
retf
pop
adc
ins
retf
sub
or
loop
xchg
leave
fimul
jno
cmp
add
aad
mov
leave
jns
and
outs
in
(bad)
fnsave
jp
pop
jo
cmc
and
fcom
sti
jnp
pop
cmp
sbb
or
js
stos
push
cld
or
nop
add
mov
dec
and
int3
outs
and
int3
mov
retf
(bad)
popa
jno
in
outs
jmp
jmp
adc
cmp
test
ins
repnz
mov
xchg
fucomip
in
test
popf
add
jae
pusha
pop
div
jge
test
mov
push
or
lock
fiadd
gs
lahf
mov
xchg
lea
jge
xchg
imul
add
retf
push
sti
inc
stos
mov
test
(bad)
out
sbb
xchg
sbb
xchg
lods
push
leave
mov
imul
ins
xor
mov
cmp
inc
dec
jmp
aad
sbb
retf
popa
or
cmp
cmp
mov
push
mov
call
fs
daa
js
xchg
repz
bound
mov
pop
dec
xchg
call
sbb
scas
pusha
stos
jne
sti
enter
loopne
int
(bad)
adc
cld
pop
mov
ret
stc
lock
repnz
ja
pop
xor
mul
ror
fisttp
inc
xor
adc
lahf
lahf
ret
fwait
loope
imul
xlat
fld
xchg
and
test
je
cmps
nop
out
dec
sub
enter
pop
lods
mov
xor
sub
xchg
jo
and
inc
in
xor
mov
mov
lds
clc
xchg
call
push
mov
pop
add
call
adc
add
mov
sub
sub
cmp
mov
sti
stos
lock
mov
es
rol
inc
ins
xchg
dec
cmp
sub
out
mov
enter
pop
dec
gs
sar
pop
inc
inc
fnstcw
mov
or
inc
retf
int
xchg
sti
sub
sub
repz
ins
adc
push
jb
pop
dec
adc
sbb
loop
jno
or
mov
dec
sar
fmul
stos
adc
fsub
jl
mov
movs
sbb
in
cmp
icebp
test
repnz
loope
and
dec
xchg
in
bound
icebp
outs
or
xchg
int3
shl
dec
add
(bad)
xchg
bound
cmp
and
hlt
fdivr
not
cdq
(bad)
xor
mov
cli
mul
sub
xchg
pop
inc
xchg
(bad)
fstp
mov
sbb
ds
and
clc
loop
fnstenv
bound
sbb
sub
movs
xlat
xchg
pop
rcl
xor
push
(bad)
adc
pop
xchg
pop
lods
sub
mov
aaa
jge
push
fmul
jbe
leave
jmp
out
jne
dec
adc
and
jne
and
push
popa
nop
xchg
mov
xchg
inc
lds
out
jmp
test
jle
sbb
jg
test
dec
out
fdiv
sbb
adc
bound
add
rcl
repnz
mov
repnz
pop
stos
add
jle
inc
pcmpeqd
arpl
add
and
das
mov
mov
sbb
shr
(bad)
jmp
or
mov
call
loopne
dec
dec
xchg
call
or
push
ja
push
je
sub
bound
hlt
test
cmp
sub
retf
shr
and
inc
rcl
(bad)
out
mov
and
lock
add
out
jecxz
add
data16
outs
xchg
leave
pop
and
sbb
ja
sti
dec
sbb
mov
aaa
mov
sbb
xchg
leave
push
(bad)
mov
mov
sbb
and
adc
pop
es
outs
sub
cmp
dec
xchg
mov
rol
xor
xchg
pop
bound
cli
mov
(bad)
test
loop
pusha
push
push
jmp
adc
test
add
jnp
jbe
sahf
mov
add
outs
dec
cmp
int3
xchg
push
leave
shr
sar
adc
movs
sub
xchg
push
shl
jbe
jns
push
cmp
pop
in
adc
sbb
stos
push
mov
imul
and
cs
ins
fdivr
mov
xor
jg
push
inc
mov
out
xchg
lds
(bad)
mov
push
mov
cmp
popf
ret
cld
adc
add
scas
loop
cld
or
je
sahf
adc
or
outs
xchg
sub
xchg
addr16
movs
in
sbb
sbb
pop
or
lods
lea
loop
cmp
cli
pop
or
lods
scas
ret
adc
retf
ins
fldcw
sbb
lods
jle
les
hlt
ins
add
mov
ins
xchg
add
add
cs
jne
pop
lahf
fsubr
xchg
sbb
sbb
sub
jg
pop
mov
lock
xchg
mul
jmp
xchg
dec
pop
push
jnp
ret
mov
pop
aaa
and
leave
(bad)
fdivr
nop
fimul
lock
dec
dec
sti
mov
mov
dec
dec
sti
loopne
addr16
ror
mov
mov
mov
pop
sub
aas
sub
popf
in
(bad)
cld
dec
mov
or
cmp
sbb
xchg
stos
add
push
and
aad
dec
mov
and
lahf
xor
bound
sbb
mov
out
clc
mov
call
xor
sub
ficomp
mov
mov
or
add
cli
cmp
fidivr
cmp
adc
or
pop
push
rol
jmp
gs
lods
jb
add
into
sti
je
call
push
ret
pop
pop
dec
jp
fwait
out
loopne
repz
int3
jge
dec
push
out
jp
push
xchg
stos
sbb
adc
adc
jg
sub
scas
retfw
je
cmps
out
int3
xor
dec
cmc
push
aad
cmc
push
and
aaa
push
inc
std
mov
mov
add
fnstsw
daa
inc
scas
cli
push
fsub
mul
cs
test
pop
stos
imul
xchg
movs
scas
(bad)
add
mov
jecxz
aaa
movs
js
call
ss
jp
adc
cdq
in
mov
lock
mov
add
ja
in
retf
je
in
push
mov
shl
jb
jbe
cld
mov
mov
xchg
jns
add
sub
xchg
adc
fdiv
jl
push
xchg
xchg
sub
test
ins
es
inc
sbb
jp
jae
push
leave
sub
jae
or
frstor
int
push
adc
cwde
(bad)
aaa
inc
adc
mov
inc
push
shr
(bad)
ss
clc
scas
jmp
ret
mov
pop
addr16
fld
jae
repnz
test
inc
test
dec
js
push
ret
fcom
stos
inc
dec
mov
adc
dec
xchg
gs
push
xchg
xor
and
lock
sub
jmp
mov
cmp
or
loope
inc
dec
dec
cmp
inc
pop
enter
fsub
data16
jl
pushf
sub
sti
pop
jmp
sbb
mov
lea
neg
mov
cmps
aam
imul
jmp
test
or
cmp
ja
out
sbb
ror
mov
outs
cmps
xlat
push
bnd
mov
lock
inc
adc
mov
mov
(bad)
fs
xchg
das
mov
imul
cmp
sbb
leave
cmp
retf
xchg
adc
cmp
out
mov
mov
mov
sub
or
jge
jnp
jae
jb
loop
div
xor
sti
stos
dec
pop
xlat
pop
xor
cld
aam
sub
xchg
sbb
xchg
test
pop
loopne
test
data16
cmp
xchg
ds
inc
jl
pop
xchg
cmp
out
retf
mov
cmp
imul
sbb
sub
dec
jnp
jae
xchg
ret
sbb
enter
and
xor
sahf
pop
js
jns
jae
jmp
cli
sub
add
repnz
ss
mov
sbb
jmp
lock
sub
inc
fmul
daa
sbb
fcmovnbe
mov
pop
fwait
cli
(bad)
sbb
add
ds
inc
sar
mov
sub
fcmove
fmul
jmp
repnz
dec
cmp
xchg
(bad)
fidivr
cdq
(bad)
jmp
cmp
jmp
enter
repnz
xlat
dec
and
or
jp
or
or
push
or
adc
dec
hlt
jecxz
adc
inc
xchg
pop
jns
and
jg
jnp
mov
les
sbb
sub
call
xor
mov
mov
out
sar
sahf
repnz
fsin
pop
adc
inc
sub
inc
mov
push
outs
mov
pop
mov
push
out
movs
les
and
mov
push
ja
out
addr16
adc
xlat
push
(bad)
stc
movs
cmp
call
mov
push
pop
sub
sub
clc
dec
sti
hlt
mov
mov
loop
lahf
sti
push
mov
jmp
outs
mov
jle
jg
(bad)
mov
cli
mov
inc
(bad)
test
fsub
ja
jne
popa
pop
shl
mov
push
bound
sub
dec
mov
rcl
imul
pop
popa
mov
mov
outs
ds
lock
mov
xchg
mov
lock
shl
ss
repz
in
add
inc
pop
(bad)
pop
inc
stc
pop
call
adc
mov
mov
cmps
sti
mov
push
and
pop
out
inc
ins
mov
outs
cs
xchg
fld
(bad)
fist
inc
jb
mov
das
(bad)
fistp
rcr
out
mov
mov
and
mov
pop
dec
cmp
jbe
push
fmul
sbb
sahf
inc
scas
add
push
pop
pop
iret
xchg
pop
inc
stos
jns
test
lahf
je
addr16
cmp
outs
pusha
pop
pop
push
mov
mov
pmullw
xor
push
sbb
cli
mov
(bad)
mov
outs
push
data16
xlat
shl
add
pop
pop
jnp
mov
retf
test
xchg
les
movs
and
movs
rcr
and
pop
adc
mov
jl
dec
outs
call
sub
cs
je
sahf
mov
pusha
leave
pop
in
mov
lods
dec
mov
mov
xor
jbe
or
xchg
shl
(bad)
mov
enter
je
mov
xchg
xchg
call
je
mov
lods
aam
cmps
inc
call
cwde
adc
in
and
xchg
jmp
add
mov
sub
gs
(bad)
nop
jb
ja
mov
xor
jb
inc
fmul
pusha
xor
mov
and
mov
retf
mov
xchg
sahf
add
dec
pop
dec
pop
push
dec
push
jmp
sub
cmp
cmps
adc
adc
je
repz
cmp
cwde
aam
mov
fpatan
and
xor
ror
cmp
cmps
xor
mov
xchg
(bad)
nop
repnz
int3
retf
call
fisubr
add
imul
fmul
leave
mov
mov
xlat
pushf
pop
fneni(8087
sbb
jb
mov
mov
mov
shr
fwait
mul
cmps
stc
stos
out
inc
adc
addr16
iret
add
inc
xchg
sub
push
add
dec
xlat
int3
mov
cmp
call
dec
dec
sub
bnd
xor
push
bound
xor
jmp
cli
lods
je
xchg
push
jo
jnp
loope
addr16
repz
cwde
inc
cwde
(bad)
jb
pop
push
ret
jg
(bad)
dec
enter
mov
dec
sbb
hlt
jge
pop
xor
jp
lods
pop
aam
out
mov
nop
dec
not
jae
sbb
xchg
fcom
call
mov
jecxz
cmp
dec
inc
(bad)
adc
cmps
sub
in
fbld
out
or
inc
mov
xchg
call
out
repz
pop
cwde
xor
and
call
pop
fwait
rcl
mov
lock
shl
arpl
retf
sbb
cmp
repnz
and
push
add
cmp
lock
sbb
arpl
ins
aas
loop
rcl
xchg
retf
retf
ins
mov
sar
add
dec
add
jle
inc
adc
jmp
mov
sbb
xchg
adc
test
fistp
sar
ror
cmp
stc
cmp
pop
sbb
mov
movs
xor
loop
add
and
adc
or
cld
(bad)
call
sub
loopne
pop
mov
cwde
js
or
pop
popa
dec
xor
popf
call
push
sub
jo
ins
cmp
jno
sahf
in
leave
retf
inc
test
mov
imul
inc
mov
xor
shl
cmp
dec
and
icebp
stos
or
and
and
adc
dec
xchg
mov
test
in
lea
push
xor
pop
movs
enter
and
outs
nop
int3
lock
mov
pushf
xchg
(bad)
mov
(bad)
jecxz
mov
(bad)
xor
add
pop
pop
jmp
xor
out
xlat
dec
call
imul
mov
into
fucompp
dec
lahf
std
test
sub
loop
or
and
in
repz
mov
dec
mov
rcr
std
jne
stos
sti
mov
imul
sti
xchg
ss
int
mov
xor
les
mov
or
imul
nop
popa
xchg
push
or
test
movs
inc
mov
mov
rcl
dec
sbb
xchg
inc
jb
les
pop
xchg
cmp
sar
jg
jae
(bad)
and
mov
mov
int
adc
jns
call
lahf
in
sub
push
xor
jmp
jno
bnd
mov
inc
push
es
pushf
lock
loopne
fild
jp
sahf
adc
inc
bnd
out
test
xchg
mov
(bad)
add
dec
push
ds
and
xor
(bad)
js
enter
mov
(bad)
pop
mov
push
adc
ss
inc
xor
fiadd
test
jecxz
push
jne
sbb
adc
sub
add
mov
jl
and
xor
fwait
or
popa
fadd
(bad)
jae
push
and
cmps
ror
xor
push
div
lea
dec
jb
jecxz
xor
cmc
cmp
push
cli
or
fisttp
cmp
cli
pop
mov
scas
daa
nop
inc
in
stos
sub
dec
mov
pop
inc
mov
ror
mov
push
adc
jecxz
rcl
xchg
inc
xchg
and
inc
jg
jno
retf
lods
jle
mov
mov
ret
add
inc
ins
inc
and
jbe
nop
aas
push
mov
in
movs
add
inc
dec
dec
fisubr
clc
xchg
fisubr
dec
push
ror
or
test
sub
test
sub
mov
inc
add
adc
push
shl
pop
test
jae
pop
mov
pop
pop
push
adc
jp
add
adc
cli
add
cmp
mov
mov
loop
mov
jge
jmp
loopne
je
aam
retf
call
mov
jae
mov
fst
dec
add
inc
icebp
adc
cmp
cmp
test
cwde
xor
test
gs
xchg
sbb
jl
loop
dec
lods
adc
and
cmp
push
or
rcl
pushf
retf
jo
fcmovne
mov
mov
pop
inc
sbb
adc
retf
xor
push
push
push
jecxz
addr16
and
pop
sbb
jmp
repnz
mov
mov
and
mov
sbb
retf
jmp
or
loop
aam
retf
in
xor
jmp
movs
fsubp
and
call
call
xchg
dec
jb
sub
ds
psllq
repnz
idiv
mov
call
dec
inc
and
test
mov
ret
test
jmp
push
mov
mov
mov
pop
ins
into
jp
or
push
cmp
lods
lahf
movs
retf
jb
outs
cmp
es
fiadd
cwde
repnz
loop
shl
pushf
mov
clc
leave
mov
lock
or
and
fisubr
pop
repnz
mov
xchg
inc
sbb
cmp
je
stos
push
xchg
(bad)
mov
sar
push
adc
dec
idiv
or
loop
(bad)
inc
lods
(bad)
not
jp
or
sbb
dec
xlat
aam
neg
out
add
push
pop
les
sub
mov
jb
test
fsub
loop
(bad)
adc
cwde
repnz
sub
dec
iret
call
clc
sahf
add
sbb
or
mov
xor
jbe
or
daa
or
ret
cmp
and
and
push
cmp
push
mov
add
bound
mov
inc
ret
sbb
nop
mov
loope
push
push
push
pop
inc
xlat
inc
aam
xor
xchg
jl
mov
mov
jl
or
mov
push
inc
sbb
daa
sbb
ror
cmps
(bad)
scas
inc
push
mov
and
ror
and
(bad)
mov
inc
pop
xchg
mov
jb
inc
pop
sbb
xor
pop
or
dec
jp
lahf
ja
jp
xchg
rcl
mov
scas
in
xor
pop
jb
gs
mov
data16
imul
xor
fnstsw
xor
or
retf
mov
data16
or
cli
ins
ror
das
jb
inc
mov
xchg
pusha
mov
cli
push
ficom
jecxz
in
into
in
repnz
call
inc
inc
repz
cwde
push
sbb
sbb
inc
cmc
stos
pop
retf
mov
ss
or
stos
push
retf
stos
jnp
aaa
out
aaa
and
repnz
lods
int
repnz
jnp
arpl
push
stos
or
push
daa
int3
lahf
xchg
retf
xchg
push
mov
jge
mov
push
xor
(bad)
lds
mov
stos
pop
repz
jnp
xchg
fidivr
xchg
fdiv
ins
xchg
dec
push
hlt
inc
push
mov
scas
inc
retf
inc
cs
lods
test
push
jmp
ret
(bad)
sti
je
jp
fiadd
pop
jbe
popf
adc
into
mov
cmp
scas
jbe
stos
jg
mov
add
jbe
jno
add
mov
or
(bad)
fucompp
lds
imul
push
inc
inc
movd
es
mov
cmp
and
std
mov
or
fisub
in
inc
int3
or
adc
(bad)
retf
jns
mov
cwde
clc
(bad)
out
test
xor
cmp
jecxz
jbe
hlt
jbe
inc
add
shrd
cdq
neg
fist
dec
mov
push
and
test
push
add
cmp
aam
out
mov
ds
adc
lods
addr16
dec
outs
or
rcl
in
lods
shr
sub
push
loope
xor
push
inc
pop
dec
add
not
not
outs
mov
pop
inc
imul
adc
sub
retf
push
cli
xor
push
ins
ds
aas
sub
jl
cld
pop
mov
retf
into
mov
cmp
push
std
dec
adc
daa
mov
mov
adc
mov
shl
mov
add
inc
sbb
dec
test
push
ss
outs
aaa
sahf
push
test
mov
sub
scas
js
nop
xor
inc
pop
pop
mov
mov
jl
push
sahf
leave
push
jle
jae
mov
lds
sahf
enter
jecxz
dec
test
jge
lods
aaa
ror
pop
push
sub
out
push
(bad)
jmp
and
mov
push
dec
inc
jl
xchg
sub
div
jp
stos
fadd
in
(bad)
(bad)
xchg
fdivrp
add
inc
push
jb
jae
cmc
and
scas
dec
sbb
mov
icebp
mov
pop
adc
ja
loope
push
cmc
inc
in
div
lahf
mov
push
fisub
sub
push
bnd
sbb
mov
push
mov
sahf
xchg
sub
sub
xchg
rol
ret
cmps
mov
or
push
in
mov
cmp
xor
bound
push
cmp
mov
call
inc
dec
mov
hlt
push
push
cmp
pop
pushf
sub
cmp
inc
xor
ret
add
jmp
jp
stc
(bad)
js
es
arpl
sub
xchg
mov
lods
outs
jnp
enter
mul
inc
dec
xor
fcmovbe
fsub
popf
(bad)
fisub
inc
jb
jbe
push
push
dec
or
mov
out
pop
lds
div
(bad)
jl
(bad)
pop
pop
ror
fidiv
adc
adc
mov
aas
fmul
in
fxch
fadd
mov
or
jnp
or
and
loope
adc
xchg
pop
test
in
or
nop
stos
dec
inc
or
add
jbe
out
lock
sub
cmps
or
mov
loope
int
movs
into
sbb
dec
mov
retf
mov
popa
jmp
xor
(bad)
clc
mov
into
adc
xor
mov
add
lods
adc
mov
xchg
push
dec
lock
fdivr
sub
xchg
xor
test
jnp
adc
mov
out
loopne
stc
or
fldln2
loopne
test
repz
pop
lock
data16
sbb
push
aad
mov
cmp
xor
out
bound
mov
xchg
es
and
pop
scas
push
bound
jne
push
loope
loop
cmps
ja
mov
dec
cli
aad
mov
jne
sbb
sbb
pop
jge
mov
pop
mov
push
cwde
cmc
dec
sbb
into
clc
test
es
or
push
add
lods
pop
mov
dec
mov
xor
jg
scas
jb
inc
sbb
sub
mov
mov
mov
xlat
push
int
(bad)
mov
inc
shl
dec
aam
scas
sbb
rol
ds
stos
(bad)
mov
xor
cbw
push
mov
push
retf
mov
scas
add
add
mov
dec
inc
push
outs
sub
adc
sahf
fld
fcmovnb
xchg
lods
mov
sub
jbe
xchg
imul
stos
push
fidiv
data16
jecxz
push
div
test
xor
dec
push
les
int
arpl
jne
mov
ficom
in
pop
sub
leave
sbb
push
xor
mul
inc
jae
xchg
sub
nop
sbb
outs
movs
xchg
inc
sbb
xchg
test
adc
mov
inc
fwait
into
retf
sub
xchg
cmp
imul
sar
pushf
cmp
jo
ss
mov
jo
fild
sub
sub
outs
fsubr
mov
xor
xchg
and
ret
xchg
sbb
sub
push
jle
dec
xor
pop
add
hlt
jp
xchg
inc
sbb
and
xchg
(bad)
fs
and
xor
lock
xchg
adc
lds
push
fucomip
outs
sbb
arpl
fisub
lock
mov
jecxz
or
xchg
sbb
test
xlat
in
lahf
xchg
(bad)
xchg
pop
jg
sub
or
div
es
sub
addr16
(bad)
xchg
mov
pop
dec
sahf
stc
repz
stos
add
addr16
inc
mov
pop
xor
and
pop
shl
jo
fiadd
imul
ds
fwait
repz
push
cdq
jle
adc
jl
punpcklwd
push
cmp
pop
fdiv
jg
add
les
adc
mov
ds
xchg
mov
mov
cs
ret
push
xor
xor
jbe
mov
cs
out
cmp
outs
aaa
mov
xor
out
push
sar
sbb
(bad)
into
das
inc
(bad)
mov
in
scas
sar
inc
ins
fistp
sbb
adc
mov
sbb
or
repnz
xchg
cmp
(bad)
jecxz
cmp
pop
jae
and
push
sbb
push
mov
mov
cld
mov
aas
sbb
fmul
mov
mov
cmp
xchg
pop
xchg
xchg
or
cmp
fdiv
inc
mov
inc
cld
xor
xchg
es
adc
inc
push
jne
mov
(bad)
cmps
push
push
xchg
mov
pop
jae
dec
fiadd
aas
pop
aam
das
mov
pop
arpl
ret
xchg
mov
cmp
ficom
cmp
cmps
and
dec
inc
iret
in
mov
icebp
pushf
mov
retf
jecxz
jle
or
pop
inc
xchg
xor
ret
retf
movs
(bad)
das
retf
nop
retf
adc
mov
rcr
icebp
in
sti
lahf
inc
push
loope
jmp
mov
or
shl
imul
scas
hlt
mov
movs
sbb
dec
cmp
call
enter
shr
pmulhw
into
mov
ins
xor
mov
sbb
push
sub
adc
scas
or
stos
adc
das
mov
mov
add
jg
das
pop
(bad)
jg
dec
(bad)
shl
test
loop
dec
xor
push
ss
test
and
mov
or
cmovns
mov
out
jbe
fsubp
iret
and
out
leave
and
push
xchg
inc
push
xor
aad
pop
into
imul
test
and
fst
jo
mov
aad
mov
sub
mov
jae
aam
inc
jbe
lods
in
test
in
repnz
jecxz
add
repnz
sbb
ret
call
jne
in
lds
aam
and
sub
and
dec
or
imul
sbb
(bad)
les
adc
cmp
mov
mov
arpl
divps
mov
mov
adc
and
stos
(bad)
adc
jnp
or
sti
jl
imul
cmp
call
or
mov
ds
adc
ja
sub
xchg
dec
jmp
cmp
or
push
mov
add
repnz
xor
inc
shl
dec
or
test
push
addr16
dec
adc
(bad)
jp
std
mov
arpl
clc
out
adc
dec
xchg
dec
xor
cmps
jns
retf
cmp
sahf
push
jl
iret
sahf
in
push
mov
dec
and
ret
outs
outs
sub
adc
cmc
cmp
fidivr
call
adc
dec
and
inc
mov
push
or
sub
inc
ja
lea
ins
pop
loope
fisttp
xchg
mov
mov
xor
(bad)
dec
mov
push
repnz
and
xchg
fld
fist
pop
imul
jnp
in
inc
fdiv
mov
(bad)
mov
push
xchg
lds
in
pop
gs
adc
jp
(bad)
xor
push
and
mov
lea
ins
in
cld
aad
sbb
fmul
mov
je
cmps
stos
xchg
mov
dec
out
sbb
jb
jecxz
cmc
dec
sub
dec
std
addr16
imul
aaa
aad
bound
add
mov
ins
(bad)
push
daa
les
jg
mov
shl
pop
mov
cmp
ins
jmp
push
fidiv
pop
sub
je
lea
and
mov
movs
ins
add
xor
dec
and
(bad)
movs
cmp
cmp
xchg
into
ret
jmp
jge
(bad)
loop
pop
push
push
sbb
outs
push
jge
rol
jg
arpl
add
sbb
push
push
cli
add
lahf
repnz
loope
(bad)
pop
add
push
sbb
lods
jae
loopne
sar
or
sub
fsub
jp
shr
pop
push
fwait
pop
ror
add
fidivr
scas
mov
cwde
push
push
sbb
nop
ss
jge
sub
adc
into
fld
jb
test
jbe
(bad)
fld
call
into
or
bound
(bad)
out
je
(bad)
shl
inc
jp
lea
add
scas
mov
jp
ret
stos
rcl
sbb
cmp
jle
not
push
add
jb
fs
mov
mov
shl
mov
jg
jmp
fst
mov
pop
popa
lods
dec
mov
(bad)
retf
std
cmp
pop
fcom
and
add
out
mov
cdq
fdivr
ret
sub
jmp
push
pop
xor
call
shl
pop
pop
push
retf
scas
xchg
pop
imul
dec
and
outs
xor
fldpi
jge
fs
retf
and
push
sbb
push
nop
pop
mov
bound
les
mov
sbb
cmp
ret
test
mov
add
push
(bad)
adc
jae
xor
or
shr
lahf
cmp
mov
call
fmul
push
rol
ja
(bad)
not
push
pop
mov
outs
clc
pop
cs
cli
loop
pop
inc
popf
inc
and
out
xchg
iret
push
sbb
pop
sub
cli
rol
xor
fisubr
push
push
cs
sbb
fbld
cmp
inc
ret
pusha
(bad)
sub
inc
ret
sahf
cmp
jb
cs
loop
ret
sbb
test
and
mov
mov
xor
cmps
add
mov
push
pop
imul
out
ficomp
and
stos
ror
int
pop
loopne
sub
(bad)
js
sbb
xor
cmps
or
jbe
rcr
in
add
mov
inc
or
clc
rol
cmps
push
jmp
jne
pop
sub
add
retf
cmp
hlt
nop
leave
or
bndldx
jg
out
pop
das
inc
rcr
loop
pop
mov
retf
cmp
jle
mov
std
or
mov
pop
loop
dec
jp
enter
cmp
or
shr
(bad)
loop
leave
push
xchg
lock
mov
fwait
scas
cmps
mov
push
xchg
add
scas
dec
ins
adc
add
loope
rcl
jbe
pop
xor
das
jmp
xchg
lock
add
clc
pop
dec
add
repnz
into
jo
imul
lock
xchg
jmp
in
retf
adc
sub
jbe
fist
xchg
out
sbb
dec
or
sti
(bad)
call
inc
jne
in
arpl
push
imul
mov
and
movs
bound
dec
fdiv
mov
mov
and
or
xlat
dec
gs
lahf
dec
sub
pop
gs
jp
enter
jmp
repz
fcomp
int
push
stos
call
add
mov
mov
cmp
scas
mov
mov
xchg
jecxz
ret
mov
inc
jg
jle
rcl
mov
shl
mov
scas
(bad)
mov
call
dec
cs
sti
mov
xchg
in
mov
or
daa
aam
mov
(bad)
push
and
rcr
add
pop
pop
mov
ret
and
inc
sub
xlat
or
inc
push
ins
call
cwde
sahf
retf
(bad)
mov
push
js
sar
ds
ficom
mov
xchg
or
iret
jb
js
inc
sbb
cli
bound
and
loop
and
(bad)
cli
xchg
add
mov
loop
push
das
stos
and
xor
adc
jle
test
xchg
push
fidiv
mov
sbb
add
mov
cmp
or
xchg
xchg
mov
fdivr
(bad)
stos
and
(bad)
je
xor
aas
inc
sbb
or
ss
mov
mov
shr
push
dec
stos
es
jbe
xchg
push
sub
pop
nop
iret
xchg
push
dec
sti
mov
imul
repnz
inc
push
aaa
clc
mov
adc
in
retf
pop
push
mov
outs
push
(bad)
lds
ss
or
jmp
jg
mov
push
or
sub
and
sub
div
cmc
out
int3
ret
dec
adc
mov
xor
daa
pop
xor
loop
inc
inc
aas
retf
mov
mov
xchg
sbb
pusha
xchg
fcomp
dec
and
fisub
cs
stc
ds
push
dec
(bad)
sbb
xchg
jmp
cmps
push
test
loope
sub
mov
call
ret
out
push
ret
retf
cmps
cmps
or
cmp
push
sbb
jns
xor
sbb
jmp
sti
aam
sbb
mov
cs
retf
fsubr
jae
gs
ret
popa
push
sbb
mov
clc
dec
in
clc
fs
test
(bad)
ja
jp
fld
and
lahf
js
jp
pop
jp
retf
sub
outs
(bad)
push
push
loop
inc
fsubr
mul
inc
bswap
fisubr
mov
shl
mov
icebp
jmp
ds
pop
rcr
jl
mov
dec
out
stos
xor
into
jecxz
xor
stos
not
mov
mov
in
or
stos
push
push
das
adc
call
loop
sahf
in
or
movs
out
je
fwait
jl
jb
aas
cli
outs
sub
and
jmp
mov
mov
fild
push
mov
fst
stc
sub
out
dec
lds
and
movs
movs
mov
pop
ss
daa
pop
std
push
push
ret
jp
call
cs
sub
mov
jno
stos
xor
and
inc
adc
mov
cli
inc
sub
xor
sub
cs
shr
aad
push
mov
adc
cmp
pop
and
stc
push
xchg
bound
mov
xchg
push
(bad)
dec
xor
jp
into
pop
sub
pop
retf
shl
stc
ror
cmp
aas
stos
and
retf
inc
daa
mov
inc
mov
sahf
icebp
xchg
fidiv
iret
mov
pusha
pop
jmp
sbb
out
int3
dec
(bad)
xchg
add
cmp
adc
push
call
fs
push
aam
sub
dec
dec
(bad)
into
loope
stos
fidiv
xchg
xor
das
mov
rcl
pop
or
ficomp
cli
shr
imul
in
mov
retf
and
es
jmp
lahf
arpl
jb
ret
fucomi
mov
cli
dec
adc
icebp
mov
stos
ds
imul
mov
jo
movs
fdiv
jle
mov
cmp
retf
mov
cmp
fwait
xchg
js
inc
call
cwde
jle
mov
pusha
movs
pop
outs
sub
xlat
adc
div
or
mov
sub
cmp
shl
pop
adc
dec
ret
stos
adc
mov
loopne
xchg
(bad)
mov
cld
mov
(bad)
int3
or
sub
and
mov
cmps
or
xor
ins
xor
push
jge
sti
outs
bound
push
call
pop
inc
xchg
xor
jp
jnp
in
or
add
rep
gs
enter
mov
fist
scas
jnp
or
js
add
call
pop
sub
adc
inc
iret
jb
bound
dec
add
and
jecxz
das
mov
fsubr
inc
push
imul
fldcw
fiadd
sbb
imul
or
pop
dec
mov
mov
mov
aam
push
sub
cwde
outs
ss
and
aas
ror
and
stc
inc
loop
jle
or
(bad)
fidiv
scas
imul
add
ret
inc
jecxz
out
arpl
and
push
fiadd
xor
cmps
cmp
ror
and
mov
shl
mov
jnp
dec
pop
retf
add
repz
dec
jnp
imul
mov
sub
into
xchg
test
mov
es
int
sti
scas
movs
scas
sub
out
push
cwde
fwait
mov
or
inc
cmp
cmp
mov
aam
xchg
jle
or
sahf
pop
sbb
in
ret
pop
inc
es
mov
pusha
pop
addr16
xchg
in
lds
jbe
pop
add
push
push
sahf
mov
scas
stos
sub
or
mov
fnstsw
sar
sbb
push
gs
outs
and
das
mov
pop
jbe
add
push
dec
cmp
movs
cld
and
mov
mov
add
xchg
push
sbb
ficomp
and
push
or
jle
enter
add
ja
outs
ret
sbb
outs
dec
ds
push
and
imul
ja
jp
mov
call
leave
test
mov
push
shl
aam
push
(bad)
inc
aas
movs
sub
cli
cmps
mov
add
sub
iret
enter
or
(bad)
stos
rcr
xor
iret
push
out
call
push
pop
jo
ror
pop
xchg
cwde
lock
jbe
jp
jbe
test
retf
pusha
sbb
ins
sti
fwait
cmc
cmps
aam
add
js
inc
into
push
inc
mov
push
sbb
pop
mov
jmp
pop
daa
cmps
push
push
or
imul
jnp
outs
arpl
das
(bad)
dec
sub
xchg
fsubrp
push
(bad)
enter
cmps
es
cmp
es
js
or
cmp
adc
(bad)
fisttp
(bad)
jmp
repnz
dec
xchg
or
xchg
and
add
add
mov
or
ins
mov
lea
sbb
jae
and
inc
retf
push
out
and
mov
loope
enter
ret
fiadd
add
neg
test
xlat
adc
mov
stos
mov
pop
add
inc
and
jp
sbb
add
jb
dec
stos
pop
out
repz
cwde
retf
jnp
inc
retf
push
(bad)
fwait
int
(bad)
inc
pusha
mov
push
mov
in
cli
mov
xchg
hlt
add
sub
aaa
push
scas
jmp
dec
(bad)
dec
adc
in
xchg
cs
push
xchg
outs
push
push
xor
adc
jge
iret
cmps
cmp
xchg
pushf
xlat
fist
iret
mov
(bad)
jae
arpl
mov
xchg
ss
into
dec
or
mov
mov
jae
in
fld
icebp
adc
dec
adc
adc
mov
and
adc
(bad)
imul
or
push
jp
js
add
popf
jb
std
push
xor
add
cmps
sbb
aaa
jb
mul
jnp
push
inc
sahf
test
adc
jge
sub
xor
pushf
dec
or
out
(bad)
mov
out
push
jo
dec
sub
mov
or
popf
cmc
lods
jecxz
rol
adc
or
in
sahf
in
dec
es
push
shl
das
jae
ja
mov
or
mov
mov
cmps
mov
(bad)
fistp
sbb
loop
ins
dec
fwait
and
add
lods
sahf
icebp
xchg
push
pop
retf
hlt
(bad)
cwde
mov
pop
mov
popf
mov
shl
jb
bound
xchg
das
cmps
mov
dec
or
movs
mov
int
sbb
or
adc
(bad)
xor
mov
sbb
cdq
jge
(bad)
out
test
add
imul
adc
pop
mov
jb
mov
call
ret
or
inc
sbb
enter
fadd
div
mov
jo
xchg
xor
das
mov
(bad)
gs
data16
cld
test
xchg
int3
lds
cmp
sbb
jae
jne
add
pop
add
and
xchg
mov
out
cli
shl
fwait
and
and
mov
mov
or
sti
cmps
out
cmps
mov
mov
in
adc
jge
mov
jno
jnp
sub
mov
scas
xchg
lahf
xlat
cld
ins
jmp
xchg
mov
mov
int
pop
dec
xchg
mov
adc
es
dec
xor
leave
aad
cs
fwait
inc
inc
push
rcr
sub
jo
stos
dec
sti
ret
mov
lock
pop
pop
retf
or
(bad)
aaa
fstp
sahf
shl
cdq
cld
retf
je
add
dec
cmp
dec
push
push
cld
rcr
loop
mov
test
push
adc
adc
dec
xor
test
xchg
retf
mov
out
stc
jle
jnp
gs
dec
(bad)
fcom
sbb
outs
add
rcr
shr
lods
fldenv
ror
ret
jbe
mov
push
xor
loop
ds
rol
or
rcr
(bad)
aaa
adc
and
cmps
jne
jl
inc
cmp
ret
cmp
lea
or
xor
es
jl
mov
xchg
dec
sub
push
add
sbb
cmp
push
push
retf
mov
pop
test
jnp
movs
xchg
loop
dec
inc
cs
fdivr
aas
call
mov
mov
fwait
adc
add
mov
push
xor
sbb
jns
cmp
cs
lods
jge
fidiv
xchg
adc
xor
imul
mov
btr
cs
mov
cmp
imul
inc
les
call
mov
inc
jne
mov
dec
jb
repnz
ficomp
jp
stos
loop
fmul
pop
jb
cs
retf
dec
sbb
cmp
inc
mov
hlt
mov
ror
outs
ror
int
push
popf
push
inc
push
repz
out
int
sub
int
push
add
inc
mov
js
test
mov
inc
inc
std
push
leave
xchg
cld
pop
sub
mov
dec
ss
adc
mov
adc
scas
mov
hlt
sbb
call
addr16
es
repnz
mov
and
sti
and
xchg
in
mov
fadd
idiv
pop
xchg
rcr
sbb
inc
cwde
xor
add
cmp
jnp
daa
dec
call
mov
clc
lahf
stos
mov
sbb
sbb
dec
mov
mov
mov
cmp
pop
(bad)
jmp
movs
sub
jp
cwde
mov
mov
scas
dec
stos
test
outs
and
xor
mov
fcom
pop
or
push
pop
jmp
icebp
dec
push
pop
ja
jecxz
cmp
shr
add
les
inc
add
push
xchg
xchg
sub
gs
ja
xchg
sbb
or
daa
add
lock
or
stos
xor
jno
push
lods
loop
jl
ret
stc
mov
xor
hlt
rcr
mov
popa
retf
mov
mov
push
hlt
in
(bad)
pop
repnz
push
mov
or
jb
icebp
retf
je
mov
fwait
pop
sub
xchg
movs
sub
outs
jbe
mov
mov
(bad)
int
jl
(bad)
jb
mov
into
dec
push
add
xor
jbe
pop
and
pop
sbb
stos
push
fiadd
sub
push
in
pop
add
xor
rcl
push
mov
in
test
mov
in
cmp
jg
(bad)
scas
cmc
es
out
add
and
mov
or
out
or
jmp
xchg
(bad)
test
mov
out
push
jbe
jae
cmp
sar
mov
mov
call
add
jb
into
(bad)
sub
xchg
les
call
inc
sar
cmps
and
and
repnz
push
xor
scas
xor
cmp
in
sbb
outs
test
dec
repnz
cmp
imul
jne
sub
out
mov
or
mov
call
pop
lods
cmp
test
je
jmp
and
add
add
repz
or
jb
bound
call
or
jne
mov
stos
xor
and
inc
lds
sub
dec
add
jp
lds
stos
fisubr
repz
repz
mov
test
aas
(bad)
rol
sbb
dec
out
xor
dec
push
pop
push
xor
cmp
xchg
or
mov
xchg
ret
or
adc
les
pop
push
in
shl
rol
jmp
imul
push
and
add
adc
(bad)
or
int3
stos
fisub
pop
xor
dec
sbb
or
in
iret
xor
imul
loop
das
movs
add
dec
cwde
adc
popf
not
repnz
inc
cwde
add
and
cmc
pop
mov
dec
push
movs
add
xor
sub
lds
jae
mov
ret
xchg
xor
lods
xor
out
je
mul
nop
xchg
rol
jae
mov
pusha
sub
and
xchg
jg
push
and
sbb
mov
sahf
jmp
xchg
cmp
retf
test
sub
xchg
iret
lds
ss
dec
sub
xor
ds
fnstsw
inc
inc
jno
sbb
xchg
cmp
out
jmp
cmp
push
icebp
dec
mov
retf
mov
mov
ror
loop
mov
sub
lahf
dec
outs
jns
in
pop
popa
imul
ror
lahf
jp
in
and
sbb
imul
inc
ffree
cdq
cmp
xchg
ficom
call
jno
push
mov
das
iret
inc
push
jge
movs
xor
adc
fsubr
or
adc
inc
fwait
shl
aad
cmp
dec
loope
cwde
hlt
int
cld
cmps
adc
aam
mov
adc
pop
inc
inc
ja
sbb
mov
loopne
movs
stos
dec
int
mov
loop
xchg
pop
fs
and
mov
and
inc
push
gs
out
aad
add
sub
fiadd
pop
movs
or
jb
cmp
shl
call
scas
hlt
mov
rol
sub
enter
sub
sub
and
sbb
or
lahf
lods
jno
sub
popa
scas
inc
lea
out
xor
ficom
mov
rol
repz
sar
daa
pushf
and
and
xchg
mov
pop
mov
and
adc
lea
push
jl
inc
arpl
cwde
dec
cmp
xor
in
aas
sub
jae
bound
pop
pop
cwde
stos
aas
mov
mov
cmp
mov
cmp
xlat
sub
sub
jle
fmul
in
sbb
outs
fwait
imul
mov
mov
idiv
inc
pop
inc
sub
and
push
pop
pop
mov
mov
jne
inc
call
inc
sbb
sub
cwde
xchg
push
fisttp
shl
pushf
sub
xchg
lods
sbb
(bad)
cmp
dec
push
sbb
dec
adc
add
(bad)
(bad)
mov
dec
or
sub
fwait
dec
jmp
mov
cmps
fwait
push
retf
push
sub
out
xchg
scas
popf
lock
push
pop
push
imul
mov
xor
in
popf
adc
ja
mov
(bad)
stos
add
neg
sub
push
mov
daa
or
xchg
mov
xchg
in
ins
int
in
sub
ret
jp
sbb
inc
jmp
sub
cmps
hlt
mov
or
stc
sub
out
inc
jo
addr16
iret
shl
jmp
cmp
hlt
mov
add
pop
test
movs
jnp
icebp
xchg
xchg
sub
mov
sbb
push
mov
xor
push
pop
and
sub
jp
leave
fbstp
add
pop
ret
sbb
mov
rcr
aas
into
sbb
cmp
mov
cmp
mov
or
inc
sub
mov
push
mov
jmp
push
push
in
mov
aas
lahf
xchg
cmp
(bad)
ins
lods
sub
(bad)
ins
dec
dec
push
jge
int
jl
or
das
ins
rcr
jge
mov
cld
sub
and
call
mov
in
pop
cmp
dec
jne
mov
(bad)
icebp
shrd
std
setge
scas
xchg
scas
jl
popf
fild
imul
stc
sbb
setno
push
dec
or
mov
scas
jmp
inc
adc
jge
or
xor
sahf
xchg
(bad)
pop
popf
pushf
das
cmps
adc
mov
mov
fldenv
pop
aas
in
sbb
outs
mov
int3
imul
mov
aaa
add
std
out
out
int3
imul
cwde
sbb
jbe
fnsave
rcr
cmp
pop
and
jge
fcom
(bad)
mov
pusha
cmc
xor
scas
mov
jnp
jg
retf
jne
pushf
cmps
jns
iret
pop
jbe
push
jl
imul
hlt
stos
fucom
add
das
ins
sbb
and
adc
cmp
nop
or
scas
mov
dec
(bad)
fnstcw
popf
sub
dec
aaa
inc
jl
fimul
gs
ins
ds
ret
jno
push
mov
dec
push
scas
push
and
(bad)
sbb
repnz
mov
neg
scas
ds
dec
sbb
cwde
xor
mov
loop
sbb
jb
pop
inc
pop
mov
mov
xchg
mov
sbb
in
sbb
fdiv
dec
in
add
lock
repnz
in
fld
mov
call
and
dec
dec
sub
push
repnz
cmp
imul
sbb
call
mov
jb
out
dec
mov
in
(bad)
ret
pop
cmps
xchg
(bad)
sbb
lds
(bad)
call
cmps
mov
push
in
call
jmp
sub
mov
out
inc
pop
inc
mov
cli
cdq
xchg
dec
cmps
dec
call
loop
mov
call
daa
inc
add
ret
ds
(bad)
sbb
test
dec
mov
imul
inc
sub
xchg
adc
rcl
inc
sbb
xchg
push
push
fsub
call
out
or
mov
jbe
je
mov
sbb
xchg
(bad)
scas
mov
mov
jle
dec
(bad)
xchg
nop
pop
scas
scas
fs
xor
ds
add
hlt
push
cs
xchg
push
(bad)
cdq
xor
out
sbb
adc
shl
fwait
(bad)
neg
push
push
je
rcl
cdq
movs
ja
nop
je
pop
or
pop
test
cmp
je
arpl
shr
test
pushf
push
pop
cmp
lods
mov
outs
push
push
ins
mov
shr
repnz
sbb
lods
inc
or
adc
pop
shr
xor
dec
fnsave
pushf
pop
xor
or
je
pop
cmp
hlt
(bad)
push
inc
neg
fld
push
jp
cmp
rcl
push
push
push
jle
add
jno
shl
or
or
xor
jnp
nop
(bad)
fisub
fnsave
ja
add
mov
test
lock
push
fcomi
fcom
nop
jbe
xor
push
push
add
or
movs
xchg
lahf
push
pusha
fst
cmp
shl
hlt
xlat
movs
xor
push
je
int3
or
int3
pop
imul
inc
test
arpl
gs
inc
movs
sub
mov
and
and
shl
pop
cdq
pop
ret
adc
rcr
push
rcr
aas
inc
pop
cmp
test
jae
test
mov
aam
fs
sub
mov
repz
cmps
lock
aad
xchg
xchg
jmp
ficom
cmp
jecxz
add
dec
lea
adc
jg
or
mov
clc
rol
adc
rcr
fcmovnu
pop
pop
mov
dec
xchg
call
adc
xchg
cli
scas
push
push
inc
cmps
mov
mov
aaa
jecxz
loopne
arpl
pushf
retf
jecxz
fdiv
mov
jne
jne
mov
cmc
mov
fstp
xchg
jl
shr
mov
cmp
pop
in
cmc
pop
and
pusha
xor
loopne
and
mov
mov
inc
pushf
mov
mov
mov
inc
inc
inc
and
and
cmps
shl
jecxz
mov
xor
xor
xchg
cdq
inc
jmp
arpl
addr16
mov
addr16
fsub
repnz
fisub
pop
cmp
mov
mov
xor
xor
xchg
xchg
jmp
mov
mov
out
mov
inc
xor
cmp
jne
cmp
and
shr
sti
loope
daa
xor
adc
stos
cmp
mov
mov
lds
pop
xor
loop
jecxz
dec
ret
int
inc
sbb
out
repz
mov
adc
imul
mov
dec
jecxz
or
push
fst
dec
sbb
repz
ffree
retf
bound
lods
push
jb
lock
mov
ss
test
mov
pop
loopne
push
gs
adc
in
call
rol
dec
mov
in
mov
ret
lods
ret
xor
lods
in
inc
cwde
pop
mov
fs
inc
sbb
push
(bad)
scas
dec
in
inc
push
scas
je
out
fcom
ins
je
add
fsub
mov
shl
mov
and
add
mov
dec
out
jecxz
in
lods
out
test
xchg
in
(bad)
fidivr
adc
sti
xor
sbb
addr16
out
out
ja
push
fldl2e
movs
out
and
mov
xor
inc
lds
push
xchg
ja
in
mov
push
cmps
jmp
lods
add
add
or
addr16
out
cmps
adc
gs
sub
jmp
and
out
pop
dec
in
or
push
inc
out
inc
dec
mov
inc
inc
shl
aad
and
push
inc
push
mov
jnp
and
push
addr16
leave
xor
cmps
cmp
repz
or
dec
daa
xchg
movs
cdq
inc
out
out
sti
push
push
aaa
cwde
cwde
test
inc
enter
ret
out
stos
mov
aaa
sub
stos
test
rol
mov
inc
int
mov
stos
scas
ins
loopne
cmps
stos
into
adc
mov
mov
and
xchg
out
inc
(bad)
mov
das
scas
xchg
push
bound
dec
outs
mov
or
mov
aas
leavew
(bad)
test
mov
lods
mov
leave
shl
lods
div
pop
pop
push
(bad)
jmp
cmp
xchg
adc
inc
cmp
sbb
mov
xor
xchg
loope
sbb
or
mov
push
push
push
push
sub
push
pop
push
lods
fld
push
xchg
cmc
mov
in
adc
jae
popa
xor
adc
adc
jae
jno
xchg
rcl
enter
jecxz
lods
fld
push
sub
mov
mov
in
call
and
xor
sub
clc
frndint
mov
(bad)
pop
cmp
ja
pop
icebp
or
jp
adc
nop
cmps
stc
xchg
pop
pop
cmp
(bad)
and
jnp
test
mov
and
dec
fistp
aas
dec
test
push
jge
fist
lds
sar
inc
pop
loope
xchg
sbb
and
(bad)
repz
push
enter
jle
xchg
pop
or
mov
mov
mov
fidivr
(bad)
fst
cmps
push
dec
div
jle
jmp
mov
das
ins
or
cmps
pop
or
lods
je
jmp
jg
cmp
mov
jns
scas
leave
pusha
mov
popf
scas
js
pop
pusha
clc
jge
idiv
push
sbb
push
outs
xchg
jmp
out
loop
jmp
movntps
adc
mov
jb
mov
jnp
or
pushf
mov
jmp
sbb
mov
push
jae
retf
clc
cmp
or
call
inc
mov
dec
mov
or
push
cmp
imul
adc
push
pop
dec
jmp
dec
pop
cmc
sub
sbb
pop
or
cmp
dec
scas
push
mov
mov
pop
scas
lahf
stos
int
nop
adc
sbb
sbb
cwde
outs
jae
adc
je
mov
mov
pop
or
dec
mov
out
scas
cwde
jmp
sbb
or
cmps
retf
cmp
into
mov
fidivr
ja
push
sbb
cwde
sar
or
mov
mov
jecxz
scas
arpl
out
dec
iret
xchg
sub
add
sbb
stos
pop
scas
sbb
sbb
jnp
in
int3
mov
ds
aaa
push
or
ret
mov
pop
sbb
mov
sbb
sti
jecxz
sti
ror
or
cmc
cmp
jg
clc
sbb
retf
dec
stos
pop
jnp
adc
ret
sub
and
adc
clc
and
adc
sahf
outs
push
fisub
enter
sbb
push
adc
je
and
hlt
cmp
pusha
int3
je
jmp
add
pusha
stos
icebp
mov
mov
dec
fnclex
or
or
cmp
sub
dec
xchg
cmp
sbb
clc
push
adc
lods
fiadd
mov
adc
aas
pop
sbb
cmp
push
fcomp
es
adc
retf
cmp
fcmovnbe
mul
rcr
pop
mov
fwait
xchg
fwait
das
pop
xlat
jae
adc
sbb
push
pop
cld
sbb
ja
xor
repnz
dec
or
cmc
adc
xchg
pop
jb
outs
sbb
hlt
pop
adc
pushf
pop
test
pop
(bad)
adc
adc
rcr
dec
sar
pop
jnp
aad
push
push
mov
mov
mov
les
sbb
push
cmp
pop
(bad)
mov
call
fst
pop
stc
and
nop
inc
aas
pop
push
cmp
not
xchg
rcr
jns
cld
jg
iret
fst
addr16
jg
movs
jl
cmc
dec
pop
jmp
shr
(bad)
sahf
data16
sbb
jge
xchg
pop
push
(bad)
fst
jo
dec
fdiv
retf
mov
ins
leave
push
jmp
outs
adc
mov
mov
mov
ins
or
in
add
jge
mov
adc
repnz
std
or
mov
adc
sbb
std
jecxz
imul
jge
cmps
mov
ins
or
xchg
jge
int
jge
in
retf
xchg
ret
std
retf
out
adc
mov
fwait
mov
jmp
sbb
xchg
jge
push
movs
jbe
dec
or
lahf
pop
push
jge
sbb
jo
fst
jbe
sahf
fild
sbb
lahf
std
pop
aad
jmp
repz
ficom
pop
dec
fsub
adc
pop
pop
dec
xchg
aas
icebp
or
cmp
jl
(bad)
mul
sub
and
xchg
int
daa
lock
nop
dec
mov
sbb
cmp
xor
jb
fmul
sbb
xchg
mov
adc
scas
cmp
sbb
cmp
fdivr
in
(bad)
and
pop
mov
xor
cmp
mov
aam
adc
ret
or
cmp
fmul
movs
out
shl
aam
clc
ret
sbb
inc
cwde
(bad)
mov
test
std
jecxz
movzx
xchg
(bad)
(bad)
aaa
dec
stos
pushf
aaa
in
stos
mov
xchg
scas
stos
rcr
sub
sbb
fdiv
retf
int
push
out
mov
(bad)
lock
mov
ret
daa
lods
mov
push
cmps
(bad)
lahf
je
sbb
or
test
scas
pop
cld
jmp
pop
jl
jecxz
and
cld
vpshab
lahf
in
jl
push
ret
aad
mov
and
inc
clc
scas
clc
cmps
test
movs
iret
mov
outs
pop
les
mov
sbb
push
lods
dec
jo
je
ret
mov
inc
or
movs
adc
and
ret
xor
jecxz
ins
mov
and
push
scas
out
loopne
mov
jl
ja
outs
mov
nop
inc
in
fs
mov
das
das
cdq
sbb
xor
mov
dec
cmp
in
mov
scas
nop
iret
xor
pushf
dec
mov
out
mov
xor
push
fdiv
jl
fiadd
pushf
cmps
jp
hlt
imul
pop
cmp
int3
iret
add
pushf
(bad)
mov
nop
sbb
add
scas
xor
rol
fcomp
cld
and
ins
in
int
scas
xor
ins
adc
jmp
xchg
rcr
stos
ins
sub
pop
xor
ss
cmp
or
out
aad
jl
ins
stc
popa
in
ins
jo
cs
sub
test
ins
jne
xchg
cmp
push
jg
or
xchg
or
push
daa
add
jmp
inc
or
int
xor
add
xchg
test
jne
ins
(bad)
cmp
add
inc
and
data16
enter
lds
mov
inc
jmp
push
adc
or
stos
test
and
loopne
lds
lds
or
push
sub
retf
and
push
cmp
add
add
or
bound
jne
loope
or
bound
jne
cmc
js
int
lds
test
and
push
add
in
lds
test
sub
imul
rcr
and
lds
mov
jg
cmps
jge
lock
fst
pop
dec
das
addr16
mov
or
enter
pop
popf
push
retf
add
loope
push
test
test
movs
ja
push
mov
xchg
or
pop
lea
imul
adc
stos
das
leave
sub
fs
mov
in
hlt
cli
movs
cmps
out
shr
jbe
cli
das
cli
out
in
xchg
add
fwait
shr
add
jbe
inc
push
neg
add
pop
add
pop
sub
or
add
dec
ss
add
push
lds
mov
retf
sar
sbb
dec
push
loop
xor
(bad)
sub
or
sbb
and
gs
jl
jl
cmp
cmp
jl
jl
mov
xor
jb
xchg
cld
mov
xchg
cmp
cmp
cld
mov
xchg
mov
mov
xchg
cmp
cmp
cld
mov
xchg
mov
xor
repnz
adc
cmp
jl
inc
push
mov
jae
pop
ins
sub
or
push
push
cld
mov
push
inc
add
inc
push
movs
mov
inc
sbb
aad
in
jle
inc
or
push
jmp
jmp
push
push
inc
mov
cmps
add
lock
jmp
lods
mov
pop
cdq
pop
dec
leave
adc
cli
push
jge
mov
jno
xor
cmp
or
sbb
mov
jb
iret
test
std
ins
xchg
sbb
xor
pop
dec
clc
imul
out
add
adc
ins
sub
in
stos
in
mov
stos
in
retf
ins
sub
ins
sub
in
stos
in
mov
stos
in
retf
ins
sub
ins
sub
in
stos
in
mov
stos
in
retf
ins
sub
ins
sub
in
stos
in
mov
stos
in
retf
ins
sub
ins
sub
in
stos
in
mov
stos
in
fwait
sub
cmp
add
popf
mov
cdq
or
je
movs
mov
in
out
std
in
mov
sbb
xchg
lahf
stos
cwde
mov
sub
jl
inc
xor
cdq
(bad)
in
jmp
sbb
inc
sub
pop
or
mov
cs
fwait
lds
retf
add
or
pop
stos
mov
lods
enter
sbb
pop
pop
inc
pop
mov
scas
out
mov
sbb
cmp
mov
or
pop
ss
lods
fbld
or
ds
cdq
add
pusha
sub
jae
daa
inc
daa
movs
out
out
xchg
sbb
push
mov
xlat
ins
in
aad
sbb
cdq
dec
jl
cmc
fsubp
push
push
jle
jmp
xchg
mov
ins
xchg
test
(bad)
hlt
int
mov
movs
push
and
movs
mov
out
loope
xchg
loope
rcl
daa
and
and
mov
push
inc
daa
retf
xchg
mov
cmps
and
dec
sub
and
aam
mov
xchg
enter
xlat
mov
ficom
inc
push
retf
xchg
cmps
lods
leave
movs
mov
test
inc
and
xchg
xchg
test
int
loope
xchg
daa
xor
repnz
in
retf
test
retf
adc
dec
lds
cwde
mov
mov
retf
out
loop
cmps
sti
mov
sbb
cld
out
inc
aas
cld
mov
std
dec
xchg
mov
out
add
xchg
sub
jno
jmp
aaa
pop
adc
(bad)
cld
imul
les
movs
daa
inc
daa
movs
out
out
cmps
les
adc
inc
lea
lods
jb
adc
repnz
adc
jb
adc
int
int3
loop
sub
popa
jb
adc
outs
inc
sub
sbb
js
pop
mov
data16
jp
inc
jmp
jg
push
mul
fwait
cs
ret
jge
bswap
push
in
leave
inc
in
sbb
and
adc
in
leave
les
inc
clc
arpl
jns
sbb
and
call
fistp
je
jge
(bad)
iret
xchg
dec
jae
adc
jae
inc
lea
mov
int3
and
or
pusha
aad
call
or
jmp
fimul
mov
push
inc
mov
add
lahf
and
fcmovnu
retf
(bad)
imul
sti
mov
inc
or
jmp
inc
push
test
int3
cli
mov
daa
fisubr
test
sbb
xlat
add
lock
adc
lods
rcr
pop
std
pop
inc
scas
cmps
outs
test
adc
fisubr
dec
sbb
sub
mov
popf
into
imul
cmp
std
ds
aad
std
scas
jbe
push
or
enter
call
outs
test
lea
pop
in
fwait
sar
stc
scas
fidivr
pop
sub
or
repnz
sti
fimul
int
fmulp
or
and
pop
std
scas
stos
fnstenv
cmp
mov
(bad)
mov
mov
inc
cmp
fdivrp
fsubrp
gs
imul
pop
sub
mov
int
retf
std
sti
sahf
sahf
lahf
add
repnz
cmp
add
mov
cwde
in
mov
popa
icebp
mov
aas
sti
popf
push
cmp
push
jne
push
popf
call
cwde
test
ds
or
sub
mov
mov
dec
fwait
jp
cmp
sbb
dec
mov
jg
sub
dec
sbb
cwde
mov
push
sbb
lea
ds
aas
xchg
jecxz
retf
xchg
(bad)
or
pop
sbb
cmp
iret
jnp
jmp
inc
xor
xor
push
(bad)
sahf
pop
lods
cwde
in
fist
out
in
sub
ja
ret
(bad)
rol
fld
bound
cmp
ja
call
std
(bad)
inc
adc
cmp
xchg
retf
fisub
add
mov
mov
cmc
jp
dec
int
js
(bad)
fsubr
outs
pop
jge
iret
cli
pop
or
(bad)
lods
cmp
or
out
cmp
jge
int3
sbb
sub
jmp
jmp
shr
call
retf
sub
cmp
mov
mov
inc
mov
push
jmp
scas
mov
adc
test
mov
fistp
ins
les
dec
xlat
sbb
or
out
or
fcmovnu
sbb
aaa
stos
test
push
mov
jae
cmp
dec
(bad)
sbb
popf
cmp
ins
mov
fistp
movs
adc
pop
in
lahf
loope
add
(bad)
fstp
push
mov
call
or
inc
mov
test
sub
mov
pop
pop
call
pop
jmp
push
or
pop
repz
mov
mov
mov
in
cmp
ins
retf
pop
fistp
ins
lahf
loope
sbb
cmp
push
lea
jne
mov
mov
nop
sbb
cmp
push
pushf
nop
enter
cld
inc
std
xor
or
mov
add
outs
les
push
scas
and
imul
mov
jns
shr
cld
call
push
mov
stos
add
sub
fucom
aad
loop
into
xor
xor
inc
xchg
push
fidiv
cs
or
xlat
sahf
movs
mov
test
cli
hlt
retf
std
imul
call
xchg
push
(bad)
push
mov
mov
cmp
mov
add
and
call
js
xchg
xchg
ja
imul
adc
mov
mov
xor
in
pop
aaa
stos
push
(bad)
movs
jle
sbb
mov
adc
mov
out
aad
rcr
clc
xlat
inc
stc
and
push
jmp
add
mov
pusha
pushf
xor
xor
leave
adc
and
cs
sahf
(bad)
pop
push
retf
outs
outs
repz
mov
loop
mov
inc
xlat
sub
inc
sub
in
mov
jae
inc
fmul
mov
ret
xchg
stos
push
xchg
loop
pop
and
sub
rcl
xor
xchg
ror
mov
adc
inc
mov
rol
cmps
ret
popf
adc
das
push
js
imul
lea
div
xchg
aaa
idiv
xchg
into
fwait
in
into
and
jbe
pop
xor
lds
(bad)
sub
fs
scas
inc
aas
push
jg
mov
sub
jp
add
outs
jge
push
pusha
inc
lahf
(bad)
mov
sbb
push
mov
add
int
and
int3
scas
push
dec
js
inc
mov
and
xor
push
int3
int3
inc
loopne
cmp
scas
ret
vcmppd
mov
arpl
scas
add
mov
inc
inc
pop
jae
cmp
xor
bound
dec
mov
mov
add
sar
inc
pushf
push
sub
retf
rcr
pushf
jns
push
mov
fadd
cmp
fsubrp
and
test
pop
xchg
mov
sub
sub
xchg
or
mov
and
popa
adc
lods
push
pop
and
repz
movs
or
pop
sub
or
cmp
push
mov
fidiv
pop
int3
jae
pop
adc
push
lea
mov
lock
adc
or
adc
es
out
sbb
xchg
test
test
movs
cmc
jp
daa
aad
loope
aaa
aas
shl
dec
xchg
xchg
rol
mov
jp
push
and
(bad)
fstp
vpsubb
and
inc
xor
push
inc
inc
sbb
sub
push
sbb
dec
sub
movs
je
out
cmc
sbb
add
jae
adc
add
xchg
mov
jns
cmp
jnp
xchg
lock
xor
fs
adc
sar
adc
fisubr
sub
mov
retf
pop
cmp
test
xchg
inc
adc
mov
pop
push
nop
mov
test
sub
xchg
or
or
push
adc
gs
into
aad
movs
(bad)
jnp
pop
xor
aad
mov
xchg
push
sti
xchg
(bad)
(bad)
in
jne
inc
stos
xchg
out
push
pushf
rcl
xor
imul
pop
out
push
sub
ins
xchg
pop
dec
outs
dec
ja
sbb
fld
push
out
movs
push
inc
gs
arpl
movs
je
mov
xchg
pop
push
jnp
jl
(bad)
xchg
xchg
xor
dec
fwait
lea
jne
movs
push
lds
aas
or
pop
nop
mov
push
retf
xlat
fdiv
xchg
mov
mov
ja
pop
add
imul
jo
jl
jmp
jne
mul
outs
xchg
(bad)
sub
xchg
ss
rcr
shr
pop
push
push
cmps
inc
xchg
movs
xchg
inc
ja
pop
fdiv
dec
repz
js
jne
push
fwait
not
(bad)
adc
aaa
cmc
cmp
xchg
ja
xor
or
inc
cmps
fisubr
push
dec
mov
inc
xor
mov
aaa
mov
sbb
nop
mov
xchg
lock
mov
cwde
pop
xlat
or
test
pop
push
or
jmp
retf
push
adc
cmps
add
enter
mul
inc
push
cmps
dec
arpl
xor
shl
adc
xchg
stos
push
push
push
addr16
ror
imul
push
inc
hlt
stc
stos
lea
jle
mov
and
retf
pop
mov
push
ret
xchg
mov
int3
sub
sub
and
icebp
inc
ss
(bad)
in
es
dec
pop
or
cmps
pushf
mov
inc
or
xchg
push
sbb
mov
das
outs
(bad)
(bad)
jns
sahf
dec
pop
jnp
mov
in
jno
rcr
pushf
mov
out
fimul
mov
pop
pop
inc
sub
pop
test
dec
cld
dec
jmp
(bad)
lods
arpl
out
sbb
dec
sub
inc
lea
pop
in
sub
mov
mov
cmps
fld
(bad)
aaa
icebp
scas
jmp
das
imul
cli
mov
scas
cmp
sahf
out
mov
aas
xchg
shl
lods
fxam
into
add
outs
pop
lods
data16
jae
ret
in
and
xor
imul
mov
sbb
dec
sbb
push
cld
push
fcomip
cmps
mov
ficom
adc
lods
mov
(bad)
cs
fist
fdivr
lods
push
jno
iret
je
push
mov
jg
mov
cmp
(bad)
sahf
pop
mov
mov
xchg
scas
fldcw
inc
dec
or
sbb
inc
jnp
mov
sub
pop
mov
call
pushf
and
sub
aaa
scas
inc
mov
test
test
shl
out
aad
jg
mov
jb
fadd
shl
dec
adc
icebp
cdq
(bad)
inc
xchg
dec
movs
dec
sti
das
mov
js
pop
loopne
les
scas
retf
aam
pop
test
out
ja
sub
push
inc
cmp
movs
sti
retf
les
test
mov
jmp
neg
add
adc
sub
mov
or
mov
add
test
mov
imul
sub
jnp
and
and
cmp
sub
push
(bad)
sbb
movs
or
pop
and
push
sbb
jecxz
cmps
jmp
jno
test
retf
mov
or
stos
jp
xor
or
call
and
out
cmp
jnp
test
je
or
mov
not
(bad)
push
daa
pop
clc
out
mov
adc
mov
push
and
test
lahf
mov
scas
stos
sub
add
mov
cmp
out
or
sti
call
inc
(bad)
jb
lds
adc
cwde
xchg
dec
push
add
test
mov
cmp
call
jl
sbb
mov
in
test
cli
push
icebp
mov
mov
test
les
jno
pop
stos
and
add
xchg
push
mov
stos
adc
fdiv
sbb
push
jne
stos
lgs
cmp
lea
pop
sahf
enter
cmps
stos
cmp
int3
adc
xchg
retf
call
xchg
or
in
fwait
cmp
(bad)
xor
push
les
sbb
pop
inc
test
test
cmp
ret
mov
sahf
push
add
sbb
and
int
ins
fmul
cs
xchg
sbb
mov
xchg
icebp
inc
sbb
in
mov
xchg
pop
test
jne
dec
rol
and
loop
hlt
sbb
or
cli
(bad)
rol
pushf
sub
(bad)
je
rcl
and
pop
push
into
xor
icebp
sbb
dec
dec
imul
out
push
js
jle
xor
inc
test
xor
test
dec
stos
adc
loop
inc
aam
mov
pop
fsub
test
rcr
rcr
and
int3
ins
xchg
cmps
es
cmps
shl
xlat
pusha
push
ss
not
js
fcomp
cmps
add
dec
push
pop
and
cmp
push
inc
sub
ins
mov
test
fdiv
int3
xor
test
mov
dec
pop
ss
pop
frndint
mov
mov
fcomp
es
ret
movs
es
into
es
sub
pop
xchg
(bad)
mov
xchg
mov
xor
es
(bad)
jmp
and
lods
pop
jmp
xchg
sub
jno
add
xor
loopne
stos
mov
add
jo
and
mov
shl
pop
(bad)
jle
stos
sub
rcl
fisubr
mov
fadd
jo
cmps
mov
sub
pusha
stos
out
dec
movs
lahf
cmc
dec
jo
push
mov
push
or
fs
pushw
imul
in
cmc
mov
xchg
ret
popa
and
rol
and
jae
and
inc
fs
loop
out
cmc
in
push
push
xor
rcl
nop
loopne
cmc
rcl
bound
aaa
inc
push
xor
xlat
gs
jmp
sub
adc
push
adc
push
xchg
jne
mov
xchg
movs
mul
inc
jne
xchg
xor
mov
mov
xor
inc
xor
push
mov
dec
daa
fs
rcl
outs
and
jbe
shr
push
jmp
in
les
mov
xor
icebp
adc
test
xor
xchg
hlt
in
aaa
pop
and
mov
aam
out
adc
or
add
lock
(bad)
add
dec
ins
mov
stos
out
mul
jecxz
adc
jo
push
jg
mov
mov
xchg
adc
ret
iret
loop
cwde
or
push
frstor
inc
pop
in
inc
rcr
cmp
or
push
sbb
xor
add
and
mov
in
adc
outs
enter
xlat
call
dec
and
inc
mov
xchg
inc
rcl
dec
cld
ret
call
outs
add
add
inc
out
(bad)
mov
inc
shr
pushf
into
mov
mov
jb
out
xchg
sub
mov
push
mov
inc
in
sub
or
fild
dec
(bad)
out
lods
jne
xlat
or
cmc
push
mov
paddusw
ss
push
in
inc
leave
dec
cmp
call
adc
xchg
and
dec
out
jp
(bad)
repnz
xor
sub
push
add
xor
mov
mul
mov
sub
imul
ja
pop
shl
mov
cmps
xor
sub
mov
dec
sub
movs
cli
jne
repnz
cdq
shr
sar
fxch
iret
ret
jmp
mov
xor
add
test
dec
dec
jl
mov
(bad)
jmp
mul
mov
mov
and
sahf
shl
jmp
movs
pop
lock
sbb
aas
inc
cmc
mov
test
movs
pop
bound
call
adc
pop
aam
(bad)
bound
shl
mov
adc
sub
das
jl
and
sbb
addr16
not
ins
cmp
mov
pop
popa
pop
or
shl
or
add
mov
and
test
xchg
xchg
push
enter
imul
jno
fwait
call
rcl
ror
mov
je
lds
mov
retw
or
inc
sbb
outs
neg
sub
and
mov
sub
sub
dec
push
push
or
or
xor
or
mov
fimul
dec
cmp
cmp
add
push
call
in
push
mov
sbb
pushf
enter
lea
or
ror
out
dec
inc
jecxz
and
and
movs
mov
dec
mov
sub
sub
mov
stos
bound
or
mov
jp
and
jb
sub
xor
mov
lods
repz
mov
xor
pop
dec
(bad)
mov
(bad)
repnz
mov
sub
arpl
arpl
pop
cmp
or
hlt
sub
pop
sub
cmps
mov
and
test
add
push
jns
cmc
pop
push
jge
scas
adc
jge
mov
scas
xor
push
mov
jb
push
stc
mov
les
movs
mov
outs
jno
lods
stc
cmp
jle
sbb
xchg
push
push
push
rol
bound
sub
(bad)
js
jmp
retf
mov
add
sbb
rcl
push
sub
ret
retf
mov
push
sub
cmp
mov
sub
xstore-rng
cmps
or
cli
in
jl
(bad)
test
adc
shr
mov
fld
add
push
dec
dec
xor
int3
and
add
add
jl
dec
xchg
fwait
mov
xchg
mov
pop
or
pop
pop
xor
adc
pop
cmp
push
pop
cmp
lods
icebp
data16
cmc
repnz
dec
xchg
xor
adc
shl
mov
dec
stos
jmp
std
push
and
popf
int
sub
dec
sbb
sub
cmp
pop
loope
inc
lahf
lds
scas
aad
ret
cmp
lods
add
sbb
jp
popa
rcr
stos
inc
sub
add
cli
ds
in
jb
sbb
and
push
dec
int
movs
inc
xchg
js
aam
sahf
nop
leave
in
push
push
out
je
push
dec
xchg
mov
pop
out
popf
lds
and
mov
out
jg
call
emms
xor
push
inc
rcr
xlat
outs
xchg
out
icebp
stc
cdq
pop
pop
sub
dec
jl
xchg
mov
xchg
jnp
mov
pop
or
push
push
repnz
jbe
xchg
add
ret
cld
scas
std
xchg
and
repnz
add
in
pop
jecxz
or
pop
mov
retf
and
or
lahf
rcl
or
pop
in
(bad)
mov
sbb
mov
jne
xchg
ret
lock
jg
lods
xchg
mov
mov
loopne
in
int
inc
data16
mov
retf
or
ins
sbb
pop
aad
xchg
ss
dec
test
cmps
ds
and
out
or
imul
pop
pop
push
xchg
int
or
jb
add
pop
bound
in
add
xchg
cmp
fisub
sub
popf
enter
push
movs
pop
sbb
jl
jnp
adc
aad
mov
jge
sub
mov
dec
mov
mov
inc
test
cld
std
xor
in
(bad)
stos
sbb
cmps
aas
lods
ins
add
add
(bad)
nop
movs
int
or
xchg
push
retf
mov
pushf
xor
or
hlt
aam
jbe
mov
jmp
ins
mov
pop
movs
iret
jae
aas
cmp
sbb
js
pop
adc
xchg
ins
cwde
push
ret
fbstp
sub
movs
dec
in
and
outs
enter
sbb
push
or
mov
jb
adc
sub
push
and
jmp
mov
in
in
(bad)
or
pop
and
pop
(bad)
retf
push
popf
or
scas
in
ds
daa
out
sbb
out
mov
ret
inc
(bad)
sub
xor
stc
std
aam
mov
pushf
bound
jl
ins
ja
push
pop
cmp
xor
sub
push
inc
int
fist
call
adc
mov
jl
pop
add
jp
jo
add
jmp
int3
cmc
sti
inc
fcom
mov
inc
add
outs
add
jo
jecxz
cdq
rol
dec
sbb
rcl
out
lock
push
imul
pop
sub
inc
imul
xchg
xchg
or
jbe
inc
inc
add
pop
adc
ins
jb
nop
xor
dec
add
cmp
inc
aas
outs
fisttp
clc
cld
jg
mov
sub
call
sbb
iret
xor
ja
jmp
push
xchg
push
xchg
mov
mov
addr16
retf
movs
mov
ins
mov
pop
nop
loop
xchg
nop
mov
es
jmp
aaa
loopne
adc
ins
push
(bad)
inc
mov
or
mov
push
dec
mov
push
adc
xchg
arpl
arpl
cmp
loop
pop
(bad)
dec
sbb
and
lds
and
popa
or
sbb
xchg
jmp
pusha
jle
dec
es
sar
inc
int3
int3
int3
int3
int3
int3
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
dec
jns
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
xchg
mul
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
dec
jns
neg
neg
sbb
pop
pop
ret
push
push
call
mov
test
jne
call
mov
xor
jmp
cmp
jne
push
call
test
pop
mov
jne
call
mov
mov
jmp
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
test
push
jne
push
call
cmp
pop
mov
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
je
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
dec
mov
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
jmp
dec
js
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
mov
jmp
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
push
lea
push
push
lea
push
call
add
test
jne
xor
cmp
jle
dec
js
mov
mov
mov
mov
movzx
inc
mov
jmp
movsx
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
add
js
mov
mov
mov
add
jmp
movzx
push
push
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
sub
push
push
push
mov
xor
push
mov
mov
mov
mov
jmp
inc
inc
cmp
je
movzx
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
xor
or
jmp
mov
or
xor
inc
inc
inc
movzx
cmp
je
mov
cmp
je
movzx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
mov
or
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
and
and
or
or
jmp
cmp
jne
mov
or
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
mov
and
jmp
cmp
jne
mov
or
jmp
test
jne
or
jmp
mov
test
je
xor
jmp
or
inc
inc
movzx
cmp
jne
cmp
je
jmp
inc
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
inc
cmp
je
cmp
jne
push
push
lea
push
push
push
call
add
test
jne
mov
inc
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
mov
test
jne
test
js
lea
cmp
ja
lea
push
call
pop
test
je
mov
push
push
call
pop
pop
mov
mov
test
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
add
cmp
je
push
mov
add
push
call
pop
pop
test
mov
jne
push
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
and
mov
mov
mov
mov
or
mov
call
mov
call
ret
mov
push
call
pop
ret
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
push
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmp
jne
push
mov
call
mov
mov
call
jmp
pop
add
pop
pop
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
push
push
push
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
push
push
push
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
push
call
add
pop
ret
push
lea
sub
mov
xor
mov
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
cmp
jne
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
push
mov
and
imul
mov
sar
push
lea
mov
add
mov
add
sar
cmp
mov
mov
je
cmp
jne
mov
not
test
jne
call
xor
mov
call
push
push
push
push
push
mov
call
add
jmp
test
je
push
push
push
push
call
add
push
call
test
pop
je
mov
test
je
call
mov
xor
cmp
lea
sete
push
mov
push
mov
call
test
je
test
je
cmp
je
call
and
cmp
mov
mov
mov
jbe
and
jmp
mov
mov
test
jne
mov
xor
cmp
sete
movsx
push
mov
call
test
pop
jne
push
lea
push
push
call
add
cmp
je
jmp
mov
sub
add
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
inc
xor
push
push
push
lea
push
push
lea
push
push
push
inc
inc
mov
call
mov
test
je
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
cmp
je
push
lea
push
push
lea
push
mov
mov
push
call
test
je
cmp
jl
inc
inc
jmp
cmp
je
cmp
jne
movzx
xor
cmp
sete
inc
inc
add
mov
mov
mov
cmp
je
cmp
jne
push
call
cmp
pop
jne
inc
cmp
je
push
pop
push
mov
call
cmp
pop
jne
inc
inc
mov
cmp
jb
jmp
mov
add
test
je
mov
xor
cmp
mov
jne
cmp
mov
jbe
mov
and
sub
lea
cmp
jae
mov
inc
mov
inc
cmp
jne
inc
mov
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
jne
cmp
mov
jbe
mov
xor
sub
lea
cmp
jae
mov
add
movzx
inc
inc
cmp
jne
add
mov
inc
inc
inc
inc
mov
mov
inc
inc
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmp
mov
jbe
mov
and
sub
push
lea
pop
cmp
jae
mov
movzx
add
add
cmp
jne
mov
add
add
add
mov
add
cmp
jb
xor
push
push
push
lea
push
lea
sub
cdq
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
push
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
cmp
mov
jb
jmp
push
lea
push
push
push
push
call
test
je
mov
and
mov
jmp
call
mov
mov
test
jne
mov
xor
cmp
je
push
pop
cmp
jne
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
jne
xor
jmp
call
mov
call
mov
or
jmp
sub
pop
pop
mov
xor
pop
call
add
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
mov
cmp
jne
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
call
pop
push
call
test
jne
call
mov
jmp
mov
cmp
je
call
mov
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
push
xor
mov
cmp
jne
lea
mov
push
push
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
and
xor
jmp
push
mov
push
mov
push
mov
test
je
cmp
je
push
call
push
call
and
pop
add
cmp
jl
mov
pop
mov
test
je
cmp
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
push
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
mov
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
pop
call
mov
mov
jmp
mov
jmp
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmp
jne
push
call
test
pop
jne
push
call
pop
push
call
pop
pop
ret
push
mov
sub
cmp
jne
and
jmp
cmp
jae
movzx
mov
mov
and
movzx
mov
jmp
push
lea
call
mov
push
push
lea
push
push
lea
push
lea
push
push
call
add
test
jne
and
cmp
je
mov
and
movzx
movzx
and
leave
ret
push
mov
push
cmp
jne
xor
leave
ret
cmp
jae
movzx
mov
movzx
movzx
and
leave
ret
cmp
jne
push
lea
push
push
push
lea
push
push
push
call
add
push
push
push
call
add
leave
ret
push
mov
mov
sub
cmp
je
push
push
lea
call
mov
mov
xor
cmp
jne
mov
lea
cmp
ja
add
movzx
jmp
mov
cmp
jae
lea
push
push
push
call
add
test
movzx
je
mov
mov
movzx
jmp
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
test
movzx
je
movzx
cmp
je
mov
and
pop
leave
ret
push
mov
sub
push
xor
cmp
jne
xor
jmp
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
push
mov
cmp
jbe
call
push
push
push
push
push
mov
call
add
jmp
push
lea
call
mov
mov
cmp
jne
mov
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
add
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
cmp
je
mov
and
mov
jmp
add
cmp
je
mov
and
pop
pop
pop
leave
ret
push
mov
push
push
xor
cmp
jne
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
je
cmp
ja
movzx
cmp
jb
cmp
ja
add
movzx
movzx
cmp
jb
cmp
ja
add
inc
inc
inc
inc
dec
movzx
je
cmp
je
cmp
je
movzx
movzx
sub
jmp
push
push
push
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
push
mov
xor
mov
mov
cmp
push
je
mov
push
push
push
push
push
push
call
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
call
test
je
lea
push
push
call
test
pop
pop
jl
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
or
jmp
cmp
je
push
call
pop
jmp
push
push
xor
lea
push
call
add
cmp
pop
mov
jb
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
xor
ret
mov
add
cmp
jne
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
add
movzx
push
push
movzx
xor
test
push
lea
jbe
mov
mov
cmp
jb
mov
add
cmp
jb
add
add
cmp
jb
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
cmp
sete
mov
ret
mov
mov
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
ret
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
ret
push
call
pop
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
push
mov
call
mov
add
mov
jmp
mov
sub
je
sub
je
dec
je
call
mov
xor
push
push
push
push
push
call
add
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
mov
push
call
mov
pop
xor
cmp
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
inc
jmp
call
mov
mov
call
cmp
jne
push
push
call
pop
jmp
mov
mov
cmp
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
mov
ret
mov
mov
ret
push
call
xor
inc
ret
push
push
call
xor
mov
push
call
pop
mov
cmp
jne
lea
push
call
pop
cmp
je
push
push
push
push
push
call
add
cmp
je
push
call
cmp
je
push
push
call
mov
cmp
jne
mov
push
call
pop
mov
mov
push
push
call
mov
jmp
mov
mov
mov
mov
xor
cmp
sete
mov
ret
mov
cmp
jne
push
call
and
mov
mov
call
ret
mov
mov
ret
push
call
test
pop
je
push
call
test
pop
je
xor
inc
ret
xor
ret
push
mov
sub
mov
mov
mov
mov
mov
shr
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
mov
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
mov
mov
cdq
mov
mov
xor
sub
and
xor
sub
cdq
mov
xor
sub
and
xor
sub
mov
or
jne
mov
mov
and
mov
cmp
je
sub
push
push
push
call
add
mov
mov
test
je
mov
mov
add
sub
mov
add
sub
mov
mov
mov
mov
rep
mov
jmp
cmp
jne
neg
add
mov
mov
mov
mov
rep
mov
add
mov
add
mov
sub
push
push
push
call
add
mov
jmp
mov
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
pop
ret
push
mov
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
jmp
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
push
push
push
call
pop
push
call
add
cmp
mov
je
cmp
je
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
mov
and
cmp
jne
or
cmp
jne
mov
test
je
test
jne
mov
mov
dec
movzx
inc
mov
jmp
neg
sbb
and
add
or
mov
or
pop
pop
ret
push
mov
sub
mov
push
mov
push
pop
cmp
mov
mov
jne
call
and
call
mov
or
jmp
push
xor
cmp
jl
cmp
jb
call
mov
call
push
push
push
push
push
mov
call
add
or
jmp
mov
and
imul
sar
push
lea
mov
add
mov
test
jne
call
mov
call
mov
jmp
cmp
ja
cmp
mov
je
test
jne
cmp
je
mov
add
sar
mov
movsx
dec
push
pop
je
dec
jne
mov
not
test
je
and
mov
mov
mov
jmp
mov
not
test
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
shr
cmp
mov
jb
mov
push
call
cmp
pop
mov
jne
call
mov
call
mov
or
jmp
push
push
push
push
call
mov
mov
mov
add
mov
mov
add
test
je
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
je
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
cmp
mov
mov
jne
mov
mov
cmp
je
cmp
je
mov
mov
inc
dec
mov
mov
push
lea
push
push
push
mov
push
call
test
je
mov
cmp
jl
cmp
ja
mov
add
lea
test
je
cmp
je
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
dec
cmp
jae
lea
cmp
jne
inc
inc
mov
mov
jmp
mov
jmp
inc
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
mov
sub
cmp
mov
jne
test
je
dec
mov
test
js
inc
jmp
xor
inc
movzx
jmp
cmp
jg
cmp
jb
dec
movzx
inc
cmp
je
mov
movzx
movsx
test
jne
call
mov
jmp
inc
cmp
jne
add
jmp
mov
add
test
je
inc
cmp
mov
jl
mov
mov
mov
inc
cmp
jne
mov
mov
mov
inc
sub
jmp
neg
cdq
push
push
push
push
call
add
mov
sub
shr
push
push
push
push
push
push
call
test
mov
jne
call
push
call
pop
or
mov
cmp
je
push
call
pop
mov
cmp
jne
mov
jmp
mov
mov
xor
cmp
setne
add
mov
mov
jmp
cmp
je
mov
cmp
jne
or
jmp
and
mov
mov
add
cmp
mov
mov
jae
mov
movzx
cmp
je
cmp
je
mov
inc
inc
inc
inc
mov
jmp
mov
add
cmp
jae
lea
cmp
jne
add
mov
mov
jmp
mov
jmp
add
push
lea
push
push
lea
push
mov
push
call
test
jne
call
test
jne
cmp
je
mov
test
je
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
cmp
jne
cmp
je
push
push
push
push
call
add
cmp
je
mov
inc
inc
mov
cmp
jb
jmp
mov
lea
test
jne
or
jmp
mov
mov
inc
inc
sub
mov
jmp
call
push
pop
cmp
jne
call
mov
call
mov
jmp
cmp
jne
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
mov
cmp
sbb
inc
jne
call
mov
call
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
push
xor
push
mov
mov
mov
mov
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
xor
jmp
mov
jmp
or
mov
jmp
mov
or
xor
inc
inc
mov
cmp
push
je
lea
mov
cmp
je
movsx
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
sub
je
sub
jne
cmp
jne
or
mov
jmp
or
jmp
test
jne
or
jmp
mov
jmp
test
jne
mov
and
or
mov
mov
and
or
mov
jmp
cmp
jne
or
mov
jmp
sub
je
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
and
mov
jmp
cmp
jne
or
mov
jmp
test
jne
or
jmp
test
je
xor
jmp
or
inc
mov
cmp
jne
cmp
je
jmp
inc
cmp
je
push
push
push
call
add
test
jne
add
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
push
push
call
test
pop
pop
jne
add
or
jmp
inc
cmp
je
cmp
je
call
push
push
push
push
push
mov
call
add
jmp
push
push
lea
push
push
push
call
add
test
je
xor
jmp
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
test
push
push
mov
mov
je
cmp
jne
mov
add
jmp
mov
dec
mov
call
inc
cmp
jne
call
cmp
jne
mov
mov
call
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
xor
test
mov
mov
mov
mov
je
inc
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
xor
jmp
xor
xor
movsx
push
sar
pop
cmp
mov
ja
jmp
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
mov
jmp
cmp
jne
add
mov
mov
cmp
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
lea
push
movzx
push
mov
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
cmp
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
cmp
mov
je
mov
cmp
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
mov
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
mov
mov
add
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
je
mov
mov
mov
jmp
mov
xor
mov
add
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
cmp
jg
jl
cmp
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
cmp
jne
sub
sar
jmp
cmp
jne
mov
mov
mov
jmp
dec
cmp
je
inc
cmp
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
(bad)
(bad)
inc
add
inc
add
aad
add
(bad)
inc
add
(bad)
inc
add
inc
add
inc
add
inc
or
je
cmp
je
dec
js
mov
mov
inc
movzx
jmp
movsx
push
push
call
pop
pop
cmp
jne
or
ret
inc
ret
push
mov
push
mov
jmp
mov
mov
dec
call
cmp
je
cmp
jg
pop
pop
ret
push
lea
sub
mov
xor
mov
mov
push
mov
push
xor
push
mov
push
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
jne
call
push
push
push
push
mov
push
call
add
cmp
je
mov
and
or
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
push
sar
lea
call
and
imul
add
pop
pop
xor
jmp
mov
test
jne
cmp
je
mov
test
mov
mov
mov
mov
mov
je
inc
xor
cmp
mov
jl
mov
sub
cmp
ja
movsx
movzx
and
mov
imul
movzx
push
shr
pop
cmp
mov
je
push
pop
cmp
ja
jmp
xor
or
mov
mov
mov
mov
mov
mov
jmp
movsx
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
or
jmp
or
jmp
or
jmp
or
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
neg
jmp
mov
imul
movsx
lea
mov
jmp
and
jmp
cmp
jne
add
mov
mov
test
mov
jge
or
jmp
mov
imul
movsx
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
or
jmp
cmp
jne
inc
or
mov
jmp
or
jmp
or
jmp
mov
cmp
jne
cmp
jne
inc
inc
or
mov
jmp
cmp
jne
cmp
jne
inc
inc
and
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
and
and
lea
push
movzx
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
test
mov
je
mov
lea
call
jmp
movsx
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
mov
mov
or
cmp
lea
mov
mov
mov
jge
mov
jmp
test
jne
or
jmp
test
jne
or
mov
cmp
jne
mov
add
test
mov
mov
mov
je
test
jne
mov
mov
mov
mov
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
add
test
mov
je
movzx
push
push
lea
push
lea
push
call
add
test
je
mov
jmp
mov
mov
mov
lea
mov
jmp
mov
add
test
mov
je
mov
test
je
test
movsx
mov
je
cdq
sub
sar
mov
jmp
and
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
test
mov
je
or
jmp
mov
add
mov
call
test
je
test
je
mov
mov
jmp
mov
mov
mov
jmp
or
mov
mov
test
jns
add
mov
mov
jmp
jne
cmp
jne
mov
jmp
cmp
jle
mov
cmp
jle
mov
add
push
call
test
mov
pop
mov
push
je
mov
mov
mov
jmp
mov
pop
add
mov
mov
mov
mov
lea
push
push
movsx
push
mov
push
push
lea
push
push
push
call
pop
call
mov
add
and
je
cmp
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
test
jne
lea
push
push
push
call
pop
call
pop
pop
cmp
jne
or
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
test
mov
je
mov
add
mov
mov
mov
jmp
test
jne
add
test
je
test
mov
je
movsx
jmp
movzx
cdq
jmp
test
mov
je
cdq
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
or
test
mov
mov
jne
xor
cmp
jge
mov
jmp
and
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
dec
test
jg
mov
or
je
mov
cdq
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
test
mov
mov
je
test
je
mov
cmp
je
dec
mov
mov
inc
jmp
dec
cmp
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmp
je
inc
test
jne
sub
mov
cmp
jne
mov
test
je
test
je
mov
jmp
test
je
mov
jmp
test
je
mov
mov
mov
sub
sub
test
jne
push
lea
push
push
call
add
push
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmp
mov
je
test
jle
mov
mov
movzx
dec
push
push
lea
push
lea
inc
push
inc
call
add
test
jne
cmp
je
push
lea
lea
call
cmp
pop
jne
jmp
or
jmp
mov
push
lea
call
pop
cmp
jl
test
je
push
push
push
lea
call
add
cmp
je
push
call
and
pop
mov
mov
test
mov
je
mov
mov
jmp
call
mov
xor
push
push
push
push
push
jmp
xor
cmp
je
cmp
jne
cmp
je
mov
and
mov
mov
pop
pop
xor
pop
call
add
leave
ret
nop
clc
loopne
add
inc
add
inc
add
fild
loopne
add
loopne
add
inc
add
loope
add
add
ret
push
mov
sub
push
push
lea
call
mov
movsx
push
call
cmp
jmp
inc
movzx
push
call
test
pop
jne
movsx
push
call
cmp
pop
jne
inc
inc
mov
mov
mov
mov
mov
mov
inc
mov
mov
mov
mov
inc
test
jne
cmp
pop
je
mov
and
leave
ret
push
mov
sub
push
push
lea
call
mov
mov
test
mov
je
mov
mov
mov
cmp
je
inc
mov
test
jne
mov
inc
test
je
jmp
cmp
je
cmp
je
inc
mov
test
jne
mov
dec
cmp
je
mov
mov
push
mov
cmp
pop
jne
dec
mov
inc
inc
test
mov
jne
cmp
pop
je
mov
and
leave
ret
fldz
mov
fcomp
fnstsw
test
jp
xor
inc
ret
xor
ret
push
mov
push
push
cmp
push
push
je
lea
push
call
mov
mov
mov
mov
mov
jmp
lea
push
call
mov
mov
mov
add
leave
ret
push
push
push
push
call
add
ret
test
push
mov
je
push
call
inc
push
push
add
push
call
add
pop
ret
push
push
call
pop
pop
ret
push
push
call
pop
pop
ret
push
mov
sub
push
push
push
push
lea
mov
call
xor
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
jle
mov
jmp
xor
add
cmp
ja
call
push
jmp
cmp
je
mov
xor
cmp
setg
xor
cmp
sete
mov
add
mov
call
mov
cmp
mov
jne
mov
lea
cmp
jle
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
sete
add
add
cmp
jne
or
jmp
sub
add
push
push
push
call
add
xor
test
je
push
push
push
push
push
call
add
cmp
lea
je
mov
mov
inc
cmp
je
mov
dec
jns
neg
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
inc
cmp
jl
cdq
push
pop
idiv
add
mov
add
test
je
cmp
jne
push
lea
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
mov
jne
or
jmp
xor
cmp
sete
sub
xor
cmp
setg
sub
lea
push
lea
push
push
xor
cmp
sete
xor
cmp
setg
add
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
push
push
push
lea
mov
xor
mov
call
cmp
jge
mov
mov
cmp
jne
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
mov
add
cmp
mov
ja
call
push
jmp
mov
mov
mov
mov
mov
shr
mov
push
and
xor
cmp
jne
test
jne
mov
cmp
jne
or
jmp
add
push
push
lea
push
push
push
call
add
test
je
cmp
mov
je
mov
and
jmp
cmp
jne
mov
inc
mov
inc
cmp
push
sete
dec
and
add
mov
inc
push
call
test
pop
pop
je
cmp
sete
dec
and
add
mov
mov
jmp
and
xor
or
je
mov
inc
mov
mov
inc
test
sete
dec
and
add
mov
mov
inc
neg
sbb
and
and
xor
add
xor
or
jne
mov
mov
mov
and
inc
or
jne
mov
jmp
mov
jmp
mov
inc
mov
inc
cmp
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
and
mov
ja
cmp
jbe
mov
mov
cmp
jle
mov
and
mov
movsx
and
and
call
add
movzx
cmp
jbe
add
mov
sub
mov
mov
shrd
shr
inc
dec
cmp
mov
mov
jge
cmp
jl
mov
and
mov
movsx
and
and
call
cmp
jbe
lea
mov
cmp
je
cmp
jne
mov
dec
jmp
cmp
je
mov
cmp
jne
add
mov
jmp
inc
mov
jmp
inc
cmp
jle
push
push
push
call
add
add
mov
cmp
jne
mov
cmp
mov
sete
dec
and
add
mov
mov
mov
inc
call
xor
and
and
sub
push
pop
sbb
js
jg
cmp
jb
mov
inc
jmp
mov
inc
neg
adc
neg
cmp
mov
mov
jl
mov
jg
cmp
jb
push
push
push
push
call
add
mov
inc
cmp
mov
mov
mov
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
cmp
jne
test
jl
jg
cmp
jb
push
push
push
push
call
add
mov
mov
inc
mov
mov
add
mov
mov
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
mov
mov
mov
lea
dec
call
test
jne
call
push
pop
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
jmp
cmp
jbe
cmp
je
cmp
jne
xor
cmp
sete
add
add
mov
mov
cmp
mov
jne
mov
lea
mov
xor
inc
test
jg
mov
call
mov
inc
jmp
add
cmp
jle
mov
call
mov
mov
mov
mov
mov
mov
inc
test
jge
neg
cmp
jne
cmp
jl
mov
mov
mov
call
push
push
push
call
add
cmp
je
mov
and
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
cmp
jne
or
jmp
xor
cmp
sete
sub
mov
lea
push
mov
add
push
push
xor
cmp
sete
add
push
call
add
cmp
je
mov
jmp
push
lea
push
push
push
mov
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
push
push
pop
push
lea
push
lea
push
push
push
call
xor
add
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
mov
cmp
jbe
mov
dec
mov
xor
cmp
sete
cmp
lea
jne
or
jmp
sub
lea
push
push
push
push
call
add
cmp
je
mov
jmp
mov
dec
cmp
setl
cmp
jl
cmp
jge
cmp
je
mov
inc
test
jne
mov
push
lea
push
push
mov
push
call
add
jmp
push
lea
push
push
push
mov
push
push
call
add
mov
pop
pop
xor
pop
call
leave
ret
push
mov
mov
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
pop
ret
cmp
je
cmp
je
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
jmp
push
push
push
push
push
push
call
add
pop
ret
push
mov
push
push
push
push
push
push
push
call
add
pop
ret
push
push
push
xor
push
call
add
test
je
push
push
push
push
push
call
add
pop
ret
push
mov
sub
fld
fstp
fld
fstp
fld
fdiv
fmul
fsubr
fstp
fld1
fcomp
fnstsw
test
jp
xor
inc
leave
ret
xor
leave
ret
push
call
test
je
push
push
call
test
je
push
call
ret
jmp
push
mov
push
call
push
call
test
pop
pop
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
inc
test
jne
push
push
lea
cmp
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
or
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmp
je
push
mov
test
je
push
call
and
and
and
and
pop
pop
ret
mov
cmp
jne
mov
cmp
push
push
jne
call
test
pop
pop
mov
jne
xor
ret
mov
mov
mov
add
push
push
push
call
add
jmp
push
call
add
test
je
mov
shl
xor
inc
ret
push
push
inc
call
movzx
cmp
pop
je
push
push
call
test
pop
pop
jne
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
xor
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
jmp
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
mov
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
je
jmp
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
pop
pop
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
je
cmp
jne
cmp
je
mov
inc
inc
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
cmp
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
cmp
jne
push
inc
pop
inc
mov
jmp
mov
jmp
movzx
inc
inc
cmp
jne
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
cmp
ja
sub
inc
movzx
movzx
mov
mov
shr
add
mov
and
mov
shl
or
inc
dec
jne
mov
xor
jmp
movzx
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
jmp
push
push
lea
push
xor
push
mov
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
jmp
add
mov
jmp
add
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
mov
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
mov
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
shl
jmp
imul
jmp
test
jne
movzx
push
call
test
pop
je
mov
shl
call
movzx
mov
inc
cmp
movzx
lea
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
jmp
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
push
push
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
test
push
jne
movzx
mov
and
push
call
test
pop
je
mov
pop
ret
movzx
and
sub
pop
ret
cmp
je
jmp
ret
push
lea
sub
mov
xor
mov
mov
mov
push
xor
push
mov
cmp
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
jne
call
push
push
push
push
push
mov
call
add
or
jmp
cmp
je
push
lea
call
movzx
cmp
mov
mov
mov
je
push
push
push
call
test
pop
pop
je
push
dec
push
lea
call
pop
push
call
mov
pop
pop
inc
inc
movzx
push
push
call
test
pop
pop
jne
mov
jmp
mov
cmp
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
movzx
test
jne
movzx
push
call
test
pop
je
mov
inc
imul
lea
mov
jmp
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
inc
jmp
movzx
cmp
jne
lea
cmp
jne
inc
mov
mov
mov
jmp
cmp
jne
lea
cmp
jne
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
inc
jmp
cmp
je
cmp
je
cmp
je
inc
jmp
lea
cmp
je
inc
inc
jmp
dec
dec
cmp
je
cmp
mov
jne
mov
mov
mov
add
mov
jmp
xor
cmp
mov
mov
jne
movzx
cmp
je
cmp
mov
jne
mov
movzx
or
cmp
mov
je
cmp
je
cmp
je
push
lea
call
jmp
push
inc
call
movzx
cmp
mov
pop
je
mov
mov
mov
test
je
cmp
je
cmp
jne
cmp
je
cmp
je
cmp
jne
mov
mov
add
mov
add
mov
mov
cmp
mov
mov
jb
cmp
jg
je
cmp
je
push
pop
cmp
je
jle
cmp
jle
cmp
je
cmp
jne
cmp
mov
mov
je
jmp
mov
mov
mov
cmp
jne
mov
jmp
xor
cmp
jne
mov
mov
inc
jmp
cmp
jne
dec
push
inc
call
movzx
pop
mov
cmp
jne
or
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
movsx
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
lea
push
mov
mov
push
mov
push
lea
push
call
movzx
movsx
add
cmp
jne
mov
dec
test
je
push
inc
call
mov
movzx
mov
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
cmp
je
cmp
je
cmp
jne
mov
dec
test
je
mov
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
cmp
pop
mov
jne
mov
mov
lea
push
lea
push
inc
push
call
add
test
je
jmp
cmp
jne
mov
dec
test
jne
and
jmp
push
inc
call
movzx
pop
mov
test
jne
movzx
push
call
test
pop
je
mov
dec
test
je
mov
mov
inc
mov
lea
push
lea
push
inc
push
lea
lea
call
add
test
je
push
inc
call
movzx
test
pop
mov
je
push
dec
push
call
cmp
pop
pop
je
cmp
jne
mov
mov
inc
and
lea
push
call
mov
test
pop
je
lea
push
push
push
push
xor
push
call
add
cmp
je
cmp
je
cmp
jne
push
push
push
push
push
call
add
lea
push
movsx
push
push
dec
push
push
call
pop
call
push
call
add
jmp
test
jne
inc
mov
cmp
jle
mov
push
dec
push
mov
call
cmp
pop
pop
je
dec
cmp
je
mov
dec
test
je
push
inc
call
movzx
cmp
pop
mov
je
cmp
je
cmp
jne
cmp
jb
cmp
jbe
cmp
jne
cmp
jne
movzx
mov
xor
and
inc
shl
mov
shr
movsx
movsx
xor
test
mov
je
cmp
jne
cmp
je
cmp
je
mov
inc
inc
mov
jmp
mov
sub
je
sub
je
dec
dec
je
sub
je
sub
je
mov
cmp
jne
dec
cmp
jne
mov
mov
jmp
cmp
jle
mov
inc
inc
cmp
jne
add
mov
mov
test
jne
push
call
test
pop
mov
je
mov
mov
push
push
push
call
add
push
pop
cmp
jne
inc
mov
inc
mov
movzx
cmp
je
movzx
inc
inc
cmp
jne
mov
test
je
movzx
cmp
je
movzx
inc
inc
cmp
jae
movzx
jmp
movzx
movzx
mov
cmp
ja
sub
movzx
inc
movzx
mov
mov
and
mov
mov
shl
shr
add
or
inc
dec
jne
and
jmp
movzx
mov
movzx
mov
and
mov
shr
shl
add
or
movzx
cmp
jne
cmp
je
mov
mov
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
movzx
pop
mov
cmp
jne
push
inc
call
pop
movzx
push
pop
cmp
mov
je
cmp
je
cmp
mov
je
cmp
je
dec
jne
inc
mov
jmp
push
dec
push
call
pop
pop
push
pop
jmp
push
inc
call
cmp
movzx
pop
mov
je
sub
cmp
jge
inc
mov
mov
jmp
and
push
push
lea
push
push
call
add
cmp
je
mov
test
jle
add
sub
mov
jmp
inc
inc
jmp
push
dec
push
call
pop
pop
cmp
je
cmp
jne
inc
cmp
je
cmp
mov
je
and
jmp
mov
jmp
mov
mov
cmp
jne
mov
jmp
cmp
jne
dec
jne
test
je
mov
jmp
push
inc
call
pop
movzx
mov
cmp
je
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
mov
shld
shl
mov
mov
jmp
push
push
push
push
call
mov
mov
jmp
test
jne
movzx
push
call
test
pop
je
mov
mov
shld
shl
mov
mov
mov
call
mov
movzx
mov
inc
movzx
sub
cdq
add
adc
cmp
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
mov
mov
neg
adc
neg
mov
mov
jmp
cmp
jne
cmp
je
cmp
je
test
jne
movzx
push
call
test
pop
je
cmp
jne
cmp
jae
mov
shl
jmp
mov
imul
jmp
test
jne
movzx
push
call
test
pop
je
shl
mov
call
mov
movzx
mov
mov
inc
cmp
movzx
lea
mov
je
dec
je
push
inc
call
movzx
pop
mov
jmp
push
dec
push
call
pop
pop
cmp
je
neg
cmp
jne
and
cmp
je
cmp
jne
inc
mov
cmp
je
mov
mov
mov
mov
jmp
cmp
je
mov
mov
jmp
mov
mov
mov
inc
inc
inc
mov
jmp
push
inc
call
pop
mov
movzx
inc
inc
cmp
mov
mov
jne
cmp
jne
cmp
jne
mov
cmp
jne
mov
movzx
test
jne
jmp
cmp
jle
and
jmp
mov
call
mov
jmp
push
push
call
mov
jmp
call
cmp
mov
je
and
jmp
mov
jmp
push
push
call
pop
pop
cmp
pop
jne
push
call
pop
cmp
jne
push
call
pop
cmp
jne
mov
test
jne
cmp
jne
or
cmp
je
mov
and
jmp
cmp
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
mov
mov
pop
xor
pop
call
add
leave
ret
push
push
push
call
test
mov
jne
ret
mov
and
and
mov
xor
mov
mov
inc
ret
mov
mov
imul
add
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
dec
jne
mov
and
jmp
lea
shr
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
imul
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
mov
push
xor
cmp
jne
add
imul
push
push
push
push
call
cmp
jne
xor
jmp
add
mov
mov
imul
add
push
push
push
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
add
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
or
or
lea
mov
lea
mov
mov
mov
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
and
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
dec
jne
mov
and
jmp
add
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmp
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
test
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
lea
shr
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmp
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmp
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
imul
add
add
and
mov
sar
push
dec
cmp
push
push
jge
or
shr
or
jmp
add
or
xor
shr
mov
mov
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
jmp
cmp
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmp
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
jne
xor
jmp
push
call
pop
mov
mov
mov
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
and
mov
lea
mov
and
and
or
jne
inc
mov
add
jmp
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
add
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
cmp
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmp
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmp
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
pop
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmp
jne
push
call
pop
push
call
push
call
leave
ret
push
mov
push
push
push
mov
test
push
mov
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
or
jmp
dec
mov
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
mov
jmp
test
jne
push
call
cmp
pop
je
push
call
cmp
pop
je
push
call
sar
push
lea
call
and
imul
add
pop
pop
jmp
mov
test
je
xor
inc
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
je
mov
movzx
push
call
test
pop
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
cmp
jne
movsx
push
push
call
pop
or
jmp
push
mov
pop
push
lea
push
lea
push
call
add
cmp
jne
call
mov
jmp
add
js
mov
movzx
add
mov
jmp
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
call
cmp
pop
jne
call
mov
or
pop
ret
push
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
imul
sar
mov
lea
and
mov
pop
pop
ret
push
push
call
mov
cmp
jne
call
and
call
mov
or
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
je
push
call
pop
mov
mov
test
je
push
push
push
call
add
mov
jmp
call
mov
call
mov
or
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
mov
xor
mov
push
push
mov
xor
cmp
push
mov
je
push
call
test
pop
jne
call
mov
call
mov
push
push
push
push
push
call
add
jmp
call
mov
cmp
je
mov
cmp
jg
call
mov
jmp
mov
mov
jmp
mov
cmp
je
add
mov
mov
mov
mov
jmp
mov
mov
mov
lea
push
push
push
lea
push
call
cmp
je
cmp
je
cmp
jge
mov
jmp
call
mov
mov
jmp
cmp
jle
mov
push
push
call
mov
cmp
pop
pop
jne
call
mov
call
mov
jmp
lea
push
push
push
lea
push
call
cmp
je
cmp
jl
call
push
call
pop
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
push
call
pop
and
push
push
push
call
add
mov
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mul
mov
mov
mul
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mul
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jae
mov
cmp
jb
cmp
jae
movzx
sub
ret
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
mov
cmp
jb
cmp
jb
add
cmp
jb
cmp
jmp
cmp
jb
or
ret
push
mov
sub
mov
xor
mov
push
push
xor
cmp
push
mov
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
mov
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
push
push
push
push
push
push
call
test
je
mov
push
push
push
push
push
push
call
mov
cmp
mov
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
jmp
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
push
call
mov
pop
jmp
cmp
mov
mov
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
mov
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
add
cmp
mov
je
mov
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
jle
cmp
ja
add
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
call
add
push
push
push
push
push
push
call
cmp
mov
jne
xor
jmp
push
lea
push
push
push
push
push
call
mov
mov
add
neg
sbb
and
push
call
pop
jmp
push
push
push
push
push
push
call
mov
cmp
je
push
call
pop
mov
cmp
je
cmp
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
push
xor
cmp
push
mov
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
xor
cmp
push
push
push
setne
push
lea
push
push
call
mov
cmp
je
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
call
cmp
pop
je
mov
add
mov
test
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
push
push
push
push
call
mov
push
call
mov
pop
jmp
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
push
call
cmp
pop
jne
xor
jmp
cmp
je
push
push
lea
push
push
push
push
call
mov
add
cmp
je
mov
push
push
push
push
push
call
cmp
mov
je
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
sub
test
movzx
movzx
mov
mov
jne
or
leave
ret
and
push
push
mov
lea
push
push
push
xor
inc
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
push
push
push
or
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
mov
push
lea
push
push
call
add
or
mov
pop
mov
pop
leave
ret
push
mov
test
je
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
push
push
push
push
mov
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
jne
mov
jmp
mov
call
test
je
push
call
push
call
pop
pop
jmp
mov
jmp
mov
add
mov
cmp
je
add
push
call
mov
xor
pop
pop
pop
pop
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
mov
jne
xor
inc
jmp
mov
push
pop
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
push
call
push
call
pop
pop
mov
jmp
mov
mov
movzx
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
mov
lea
push
push
call
add
or
je
push
call
pop
or
jmp
mov
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
mov
mov
test
je
mov
mov
test
mov
je
push
call
mov
test
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
ret
push
mov
sub
push
push
mov
push
xor
cmp
mov
mov
mov
jne
cmp
jne
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
jne
xor
inc
jmp
push
call
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzx
lea
push
push
push
lea
push
push
call
mov
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
push
lea
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
or
lea
push
push
push
lea
push
push
call
add
or
je
push
call
push
call
push
call
push
call
add
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
pop
mov
mov
rep
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
inc
xor
cmp
mov
je
mov
mov
mov
cmp
je
push
call
mov
cmp
je
push
call
test
jne
push
call
push
call
pop
pop
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
xor
push
mov
cmp
push
mov
mov
mov
mov
mov
mov
mov
je
lea
cmp
jne
push
movzx
push
push
lea
push
push
call
add
test
jne
push
call
push
mov
push
mov
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
mov
xor
mov
mov
inc
cmp
jl
lea
push
push
call
test
je
cmp
ja
movzx
cmp
mov
jle
cmp
je
lea
mov
cmp
je
movzx
movzx
jmp
mov
mov
movzx
inc
cmp
jle
inc
inc
cmp
jne
mov
push
push
push
add
push
push
push
mov
push
push
call
add
test
je
mov
mov
push
push
mov
push
add
push
push
inc
push
push
push
push
call
add
test
je
mov
push
push
add
push
push
mov
push
inc
push
push
push
push
call
add
test
je
cmp
mov
mov
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
jle
cmp
je
lea
mov
mov
cmp
je
movzx
movzx
cmp
jg
lea
jmp
mov
mov
inc
inc
inc
mov
mov
movzx
cmp
jle
mov
inc
inc
cmp
mov
jne
push
lea
push
push
call
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
cmp
je
push
call
test
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
pop
mov
jmp
push
call
push
call
push
call
push
call
xor
add
inc
jmp
lea
mov
cmp
je
push
call
mov
mov
mov
mov
mov
mov
xor
mov
pop
pop
xor
pop
call
leave
ret
call
mov
mov
cmp
je
mov
test
jne
call
mov
ret
call
mov
cmp
je
mov
test
jne
call
mov
ret
mov
push
xor
cmp
push
push
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
cmp
jne
mov
jmp
mov
cmp
je
inc
dec
jne
cmp
je
mov
mov
inc
inc
cmp
je
dec
jne
cmp
jne
mov
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
push
mov
push
push
mov
xor
cmp
push
jne
cmp
jne
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
mov
cmp
ja
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
cmp
jne
mov
jmp
mov
cmp
jne
mov
jmp
cmp
mov
jne
mov
mov
inc
inc
cmp
je
dec
jne
jmp
mov
mov
inc
inc
cmp
je
dec
je
dec
jne
cmp
jne
mov
cmp
jne
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cdq
sub
mov
mov
sar
lea
push
mov
push
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
push
mov
test
je
cmp
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
push
call
test
je
lea
push
call
pop
mov
xor
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
xor
jmp
mov
sub
inc
cmp
ja
add
jmp
mov
sub
cmp
ja
add
movsx
shl
lea
mov
test
jne
mov
pop
ret
xor
mov
inc
cmp
jl
cmp
jle
sub
cmp
ja
inc
jmp
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
call
test
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
lea
push
mov
and
push
or
push
mov
call
test
jne
xor
jmp
lea
call
cmp
je
cmp
je
mov
push
mov
call
push
mov
call
pop
cmp
pop
je
xor
inc
mov
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
call
mov
mov
add
call
mov
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
xor
inc
jmp
lea
push
push
call
test
pop
pop
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
test
pop
pop
jne
or
mov
jmp
test
jne
mov
test
je
push
lea
push
push
call
add
test
jne
push
or
mov
call
cmp
pop
jne
mov
jmp
mov
test
jne
push
call
test
pop
je
or
mov
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
push
call
pop
xor
test
pop
jne
or
cmp
mov
je
or
mov
jmp
cmp
je
push
call
cmp
pop
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
cmp
jne
mov
mov
shr
not
and
mov
pop
pop
xor
pop
call
leave
ret
push
mov
sub
mov
xor
mov
push
push
mov
call
mov
mov
add
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
push
call
test
pop
pop
jne
cmp
jne
push
jmp
cmp
jne
cmp
je
lea
push
push
call
test
pop
pop
jne
push
push
mov
call
test
pop
pop
je
or
mov
mov
mov
shr
not
and
mov
pop
xor
pop
call
leave
ret
push
call
push
sub
neg
sbb
inc
mov
call
sub
neg
sbb
and
inc
cmp
pop
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
mov
test
je
test
je
test
jne
and
ret
push
call
sub
neg
sbb
inc
pop
mov
je
push
pop
jmp
mov
call
push
push
mov
call
test
jne
and
ret
push
push
push
push
call
mov
mov
xor
add
cmp
jne
or
jmp
lea
cmp
lea
mov
mov
je
cmp
je
push
push
push
call
add
mov
cmp
mov
je
cmp
je
mov
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
mov
cmp
je
cmp
je
push
call
sub
neg
pop
sbb
push
inc
push
mov
call
test
jne
mov
jmp
mov
call
mov
mov
cmp
je
mov
add
neg
sbb
and
mov
call
mov
test
je
cmp
je
cmp
je
movzx
push
call
test
je
push
push
call
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
test
je
cmp
mov
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
add
jmp
push
push
push
push
call
test
je
push
lea
push
push
push
call
test
je
push
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
pop
ret
push
mov
push
and
push
mov
test
jne
xor
jmp
cmp
push
jb
lea
test
jbe
mov
mov
mov
add
add
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
mov
test
je
cmp
jne
add
cmp
jb
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
movzx
movzx
jmp
mov
mov
jmp
mov
test
je
cmp
jne
inc
inc
inc
cmp
jb
xor
pop
pop
leave
ret
movzx
movzx
sub
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
sub
mov
xor
mov
push
lea
push
push
push
mov
call
test
jne
or
jmp
lea
push
call
pop
mov
xor
call
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
push
xor
cmp
mov
mov
mov
je
mov
lea
push
push
call
test
mov
je
cmp
jne
lea
push
push
call
test
je
cmp
jne
mov
cmp
mov
jne
push
call
mov
pop
inc
cmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
mov
jmp
push
push
push
push
push
push
call
mov
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
mov
cmp
je
lea
push
push
push
call
add
push
push
push
push
push
push
call
test
je
mov
cmp
je
push
push
push
push
push
push
push
push
call
test
je
mov
jmp
cmp
mov
jne
push
push
push
push
push
push
push
push
call
mov
cmp
je
push
push
call
cmp
pop
pop
mov
je
push
push
push
push
push
push
push
push
call
cmp
jne
push
call
pop
mov
jmp
cmp
je
mov
mov
push
call
pop
mov
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
mov
mov
mov
jmp
push
lea
push
push
push
call
cmp
mov
jne
call
test
je
push
call
pop
jmp
mov
and
imul
sar
mov
lea
and
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
and
call
mov
mov
mov
jmp
xor
cmp
jl
cmp
jb
call
mov
call
mov
push
push
push
push
push
call
add
jmp
mov
sar
lea
mov
and
imul
mov
movzx
and
jne
call
mov
call
mov
push
push
push
push
push
call
add
or
mov
jmp
push
call
pop
mov
mov
test
je
push
push
push
push
call
add
mov
mov
jmp
call
mov
call
mov
or
or
mov
call
mov
mov
call
ret
push
call
pop
ret
inc
push
call
test
pop
mov
mov
je
or
mov
jmp
or
lea
mov
mov
mov
and
mov
ret
mov
cmp
jne
call
mov
xor
ret
push
xor
cmp
jl
cmp
jb
call
push
push
push
push
push
mov
call
add
xor
pop
ret
mov
and
imul
sar
mov
movzx
and
pop
ret
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
mov
xor
pop
pop
leave
ret
push
lea
call
mov
cmp
jne
mov
cmp
je
movzx
mov
cmp
je
mov
and
xor
inc
jmp
lea
push
movzx
push
call
test
pop
pop
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
push
push
push
push
push
call
test
mov
jne
mov
cmp
jb
cmp
je
cmp
mov
je
mov
and
jmp
call
mov
cmp
je
mov
and
or
jmp
xor
cmp
setne
push
push
mov
push
push
push
push
call
test
jne
jmp
push
push
push
push
call
add
ret
xor
inc
cmp
jne
xor
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
push
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmp
je
cmp
jbe
lea
mov
mov
mov
cmp
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
sub
push
push
push
call
xor
cmp
mov
mov
mov
mov
jne
push
call
mov
cmp
je
mov
push
push
call
cmp
je
push
call
mov
push
mov
call
push
call
mov
push
mov
call
push
call
mov
lea
push
call
test
pop
pop
je
push
push
push
push
push
call
add
cmp
jne
push
push
call
push
call
cmp
pop
mov
je
push
push
call
push
call
pop
mov
mov
mov
cmp
je
cmp
je
push
call
push
mov
call
cmp
pop
pop
mov
je
cmp
je
call
cmp
je
lea
push
push
lea
push
push
push
call
test
je
test
jne
lea
push
call
test
pop
je
push
push
push
push
push
call
add
cmp
jb
or
jmp
or
jmp
mov
cmp
je
push
call
cmp
pop
je
call
cmp
mov
je
mov
cmp
je
push
call
cmp
pop
je
push
call
mov
push
call
cmp
pop
je
push
push
push
push
call
jmp
xor
pop
pop
pop
leave
ret
mov
push
xor
cmp
jl
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
push
push
push
push
push
mov
call
add
or
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
sub
push
lea
call
mov
cmp
jle
lea
push
push
push
call
add
jmp
mov
mov
movzx
and
cmp
je
mov
and
leave
ret
cmp
jne
mov
mov
movzx
and
ret
push
push
call
pop
pop
ret
push
mov
push
push
mov
xor
mov
mov
push
push
mov
push
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
push
push
push
mov
push
call
mov
test
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
test
je
mov
add
jmp
push
call
test
pop
je
mov
add
mov
jmp
xor
test
je
push
push
push
push
call
test
je
xor
cmp
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
mov
push
push
mov
xor
mov
mov
push
mov
push
push
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
mov
push
push
push
push
call
mov
cmp
mov
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
mov
add
jmp
push
call
cmp
pop
je
mov
add
mov
jmp
xor
cmp
je
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
push
call
pop
mov
jmp
push
push
push
push
call
lea
pop
pop
pop
mov
xor
call
leave
ret
push
mov
sub
push
lea
call
push
lea
push
push
push
push
push
call
add
cmp
je
mov
and
leave
ret
push
push
call
and
movapd
mov
jmp
mov
mov
mov
cmp
je
cmp
je
xor
ret
xor
inc
ret
mov
and
mov
mov
call
ret
push
mov
sub
xor
push
mov
mov
mov
push
pushf
pop
mov
xor
push
popf
pushf
pop
sub
je
push
popf
xor
cpuid
mov
mov
mov
mov
mov
cpuid
mov
mov
pop
test
je
call
test
je
xor
inc
jmp
xor
pop
leave
ret
call
mov
xor
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
add
cmp
je
mov
test
je
push
call
pop
cmp
je
inc
cmp
jl
mov
mov
add
push
call
mov
push
call
pop
mov
mov
inc
jmp
mov
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
movzx
lea
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
call
mov
mov
push
push
call
mov
push
call
mov
add
push
push
push
push
push
call
xor
pop
ret
sub
mov
mov
mov
push
push
push
mov
push
xor
push
push
push
push
mov
call
mov
mov
cmp
je
test
je
mov
not
mov
jmp
mov
mov
mov
xor
xor
mov
cmp
je
test
jne
mov
mov
not
mov
call
mov
lea
xor
push
xor
mov
call
mov
mov
cmp
mov
mov
je
test
je
not
mov
mov
jmp
mov
mov
mov
lea
push
xor
call
call
mov
mov
mov
xor
xor
cmp
je
test
jne
mov
mov
not
mov
lea
push
call
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
mov
mov
mov
mov
mov
and
test
jne
mov
sub
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
add
mov
mov
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
mov
xor
mov
add
mov
mov
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
push
push
push
push
mov
push
call
mov
add
mov
cmp
jle
xor
jmp
mov
push
mov
push
mov
push
mov
push
mov
push
call
pop
mov
pop
ret
int3
push
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
push
push
push
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
mov
push
mov
push
mov
push
mov
push
call
mov
or
mov
push
push
push
push
call
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
mov
push
mov
push
mov
push
mov
push
push
call
mov
or
mov
mov
push
mov
push
call
mov
or
mov
push
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
push
push
push
push
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
push
push
push
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
push
call
mov
or
mov
lea
push
push
lea
push
push
lea
push
push
mov
push
push
call
mov
or
mov
mov
or
mov
mov
push
push
call
mov
or
mov
push
push
push
push
push
call
mov
or
mov
push
push
call
mov
or
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
push
push
push
push
call
mov
or
mov
mov
push
mov
push
push
call
mov
or
mov
push
mov
push
call
mov
or
mov
push
push
call
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
or
mov
mov
push
call
mov
or
mov
push
call
test
je
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
or
xor
repnz
add
mov
shr
rep
mov
and
rep
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
sub
cmp
jae
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
mov
mov
add
mov
mov
jmp
mov
add
mov
mov
shl
mov
cmp
jge
mov
and
mov
sub
cmp
jae
mov
cmp
jae
mov
and
and
test
je
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
jbe
mov
shr
mov
mov
and
mov
cmp
ja
mov
jmp
mov
and
add
mov
jmp
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
add
mov
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
shl
mov
lea
mov
jmp
mov
shr
mov
mov
and
test
je
mov
and
mov
add
mov
mov
and
add
mov
mov
xor
mov
jmp
mov
and
add
mov
mov
xor
mov
mov
and
test
je
mov
add
xor
mov
and
mov
jmp
mov
add
xor
mov
sar
mov
mov
add
mov
mov
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
mov
mov
add
mov
cmp
je
mov
add
mov
jmp
mov
and
mov
lea
cmp
jbe
mov
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
and
add
mov
mov
add
mov
cmp
jne
mov
and
test
je
mov
add
xor
mov
and
shl
mov
mov
add
mov
mov
jmp
mov
add
xor
mov
and
shl
mov
mov
and
and
mov
lea
mov
mov
shl
mov
mov
mov
lea
cmp
jbe
pusha
mov
and
popa
mov
jmp
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
cmp
jae
mov
jmp
mov
add
cmp
jbe
mov
jmp
mov
sub
mov
mov
mov
sub
mov
test
je
mov
cmp
jae
mov
add
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
and
test
je
mov
add
xor
mov
sar
mov
add
xor
mov
shl
or
mov
jmp
mov
add
xor
mov
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
jmp
jmp
mov
mov
mov
xor
pop
pop
pop
mov
pop
ret
mov
cmp
fistp
inc
add
cmp
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
call
mov
add
mov
push
mov
push
call
mov
mov
mov
push
mov
push
push
mov
push
push
call
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
lea
mov
mov
xor
mov
rep
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
call
mov
mov
mov
mov
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
xor
repnz
not
sub
mov
mov
mov
shr
rep
mov
and
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
push
call
mov
mov
push
call
mov
mov
lea
push
mov
push
call
test
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
add
jmp
mov
mov
call
mov
mov
mov
mov
push
mov
push
call
push
mov
mov
push
call
mov
mov
mov
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fstp
push
call
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
add
call
add
sub
je
sub
je
push
push
call
add
pop
pop
pop
ret
push
push
call
mov
add
cmp
jge
mov
cmp
jle
push
jmp
lea
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jg
pop
push
push
push
call
add
pop
pop
xor
pop
ret
mov
push
push
push
call
add
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
push
push
push
call
mov
add
cmp
jl
cmp
jg
push
push
push
call
add
cmp
jge
push
lea
push
push
push
call
push
push
push
call
mov
add
cmp
jl
pop
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
lea
push
push
push
push
call
push
push
push
mov
call
push
push
push
call
push
push
mov
call
add
test
jg
push
push
call
jmp
push
push
call
add
lea
push
push
mov
call
add
cmp
jge
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
mov
push
lea
push
push
call
add
add
cmp
jl
jne
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
add
push
push
push
call
add
lea
push
call
add
lea
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
cmp
jge
push
mov
push
jmp
jmp
lea
mov
mov
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
mov
mov
sub
cmp
je
add
cdq
sub
mov
sar
push
push
push
call
mov
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
mov
push
push
push
call
add
jmp
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
mov
mov
add
jmp
push
push
push
call
add
test
je
push
push
push
call
push
push
push
call
add
jmp
push
push
call
add
cmp
je
push
push
push
call
push
push
call
lea
push
push
push
mov
call
push
push
push
call
push
push
push
call
mov
add
lea
add
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jle
push
push
call
add
push
push
call
add
jmp
jmp
lea
sub
push
push
push
call
push
push
call
add
test
je
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
test
je
cmp
jge
push
push
call
add
push
push
call
add
jmp
cmp
jl
push
push
push
call
push
push
push
call
add
jmp
push
push
call
mov
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
mov
mov
mov
mov
sub
sub
add
cmp
jge
sub
lea
mov
mov
mov
jmp
lea
lea
mov
mov
mov
push
push
push
call
add
cmp
jl
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
jle
push
push
push
call
add
push
push
call
push
push
push
call
add
pop
xor
pop
ret
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
sub
mov
xor
mov
push
lea
push
push
call
test
je
cmp
je
lea
push
push
call
add
test
je
lea
push
push
push
push
push
mov
call
add
push
push
call
push
push
call
add
mov
xor
call
add
ret
push
push
call
mov
add
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
call
push
push
mov
lea
push
push
push
push
push
call
test
je
lea
push
push
call
add
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
call
push
push
call
push
push
call
add
test
je
push
push
call
add
ret
push
push
push
call
push
push
call
push
mov
push
push
mov
call
push
push
call
push
push
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
push
call
mov
mov
add
test
je
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
mov
mov
call
mov
cmp
jne
push
call
mov
test
jne
call
test
mov
jne
pop
pop
pop
lea
pop
ret
mov
mov
push
push
call
test
jne
call
pop
pop
pop
mov
pop
ret
push
push
push
call
add
pop
pop
pop
xor
pop
ret
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
mov
call
mov
add
test
jne
lea
pop
pop
ret
push
call
push
push
call
add
cmp
mov
je
mov
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
mov
call
push
push
push
mov
call
push
push
push
call
mov
add
test
jne
push
push
push
call
add
push
push
push
call
add
cmp
mov
jne
lea
add
cmp
je
cmp
je
push
push
call
mov
add
test
jne
mov
lea
mov
add
test
jne
sub
lea
mov
sub
push
push
push
call
add
test
je
push
push
push
push
push
call
add
push
push
call
push
push
mov
call
push
push
call
add
test
jne
push
push
push
call
push
push
call
push
push
call
add
jmp
push
call
add
mov
pop
pop
pop
ret
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
call
add
push
mov
push
push
push
push
call
add
push
push
push
call
add
ret
push
mov
push
push
push
push
call
add
mov
call
mov
test
je
push
push
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
add
mov
mov
call
mov
test
je
push
push
call
add
test
je
lea
push
push
push
push
call
push
push
push
call
push
push
mov
call
push
mov
mov
call
add
test
je
push
push
push
call
add
push
push
push
push
push
call
add
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
push
push
call
add
test
jne
pop
pop
ret
push
sub
push
push
push
call
push
push
push
call
add
mov
call
mov
test
je
mov
call
push
mov
mov
call
add
test
je
cmp
je
push
call
add
push
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
push
mov
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
add
pop
mov
pop
ret
int3
push
mov
push
push
push
push
call
push
push
mov
call
push
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
push
push
call
add
cmp
je
push
push
call
add
push
push
push
push
call
add
mov
push
push
push
call
push
push
call
add
test
jne
push
push
push
call
push
push
push
push
call
add
push
push
call
push
push
push
call
push
push
call
add
cmp
je
push
push
call
add
test
je
push
push
call
add
add
jmp
push
push
call
add
add
jmp
push
push
call
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
pop
je
push
push
push
call
add
push
push
push
call
push
push
call
add
cmp
jne
push
push
call
push
push
call
push
push
push
call
add
pop
jg
mov
jp
push
and
dec
movs
retf
shl
jb
loop
shr
or
adc
mov
dec
cmps
dec
cld
retf
cmps
jecxz
bound
pushf
push
ins
add
mov
adc
sub
lea
int3
xlat
repnz
fst
or
adc
jbe
outs
out
pop
popf
into
push
mov
push
mov
dec
pop
loopne
add
mov
cmp
fwait
xor
daa
and
in
and
or
mov
mov
xchg
inc
(bad)
leave
add
lock
xchg
or
or
sub
push
shl
jl
mov
hlt
mov
mov
jns
cwde
add
lods
frstor
loopne
push
dec
repnz
(bad)
mov
cli
ins
cs
xor
dec
jbe
inc
in
mov
rcr
(bad)
test
lock
jmp
popa
sub
movs
cs
fsubrp
ja
ds
sub
aad
pop
rol
xchg
loop
cmp
cmp
lock
and
ret
adc
push
aam
dec
movs
push
push
jmp
jo
ins
cmps
jmp
retf
fst
jbe
shl
sbb
movs
addr16
mov
pushf
sbb
push
aam
in
mov
loop
jmp
cmps
lods
dec
in
aad
jecxz
xor
in
adc
inc
pop
daa
sub
jbe
or
mov
mov
mov
fptan
mov
int3
sbb
and
inc
enter
xor
mov
xchg
push
sti
add
fidiv
std
adc
adc
dec
sub
or
xor
mov
shr
out
add
mov
pop
jno
enter
sbb
mov
fwait
inc
test
jb
ret
mov
or
and
add
or
popf
mov
mov
mov
idiv
lods
div
add
repnz
dec
ret
pop
xor
popa
stos
and
xlat
daa
imul
xor
sub
push
pop
(bad)
(bad)
fldenv
mov
addr16
xchg
(bad)
shl
fs
enter
ins
retf
shl
jp
inc
or
pusha
nop
mov
mov
sar
jge
pop
push
test
jae
outs
sub
retf
cld
cmc
out
icebp
or
bound
ret
fbstp
lahf
xor
dec
push
jnp
push
std
mov
mov
mov
adc
stc
dec
ret
ins
daa
or
sub
push
pop
mov
ret
inc
sbb
mov
xor
pop
jae
mov
lahf
xor
xchg
sub
pop
sbb
fdivr
in
iret
fwait
neg
ret
ja
leave
sub
leave
jle
rcl
outs
adc
(bad)
jno
mov
cmc
lods
xlat
mov
cdq
push
popf
xor
mov
or
push
cmp
pop
mov
cs
popf
mov
pop
leave
inc
jne
fcom
fcomi
inc
imul
pushf
cmp
scas
int3
mov
adc
mov
data16
mov
dec
or
or
sbb
pop
je
inc
shr
shl
xor
dec
sbb
sub
xchg
cmp
das
fdivr
adc
xor
ins
xor
xchg
mov
dec
adc
jge
mov
inc
lods
(bad)
dec
sbb
sub
dec
movs
int3
cmc
cli
out
mov
inc
fistp
push
mul
std
and
dec
add
pop
adc
bound
inc
repnz
mov
bound
scas
mov
jnp
add
and
pop
mov
int3
pop
jmp
pop
mov
cld
nop
mov
adc
shr
ror
cwde
aam
mov
sub
mov
pushf
mov
das
aam
rcr
xchg
lea
jmp
mov
inc
jl
lods
bound
int
cmp
iret
xlat
dec
scas
cmp
mov
in
push
and
mov
lea
in
jmp
xchg
mov
cmp
xchg
or
cmp
ret
xor
push
or
xor
sahf
mov
jno
hlt
dec
xor
dec
out
cmp
push
icebp
jae
mov
mov
adc
pop
xchg
std
ror
sbb
pop
xchg
push
mov
add
sbb
adc
xchg
call
xor
stos
mov
jmp
mov
push
push
stos
outs
cmp
pop
lods
test
call
dec
imul
dec
adc
mov
jg
dec
mov
push
or
xlat
retf
jnp
sbb
sbb
sub
ins
adc
cmp
push
bound
(bad)
popf
lods
jp
mov
pop
shr
dec
sbb
mov
mov
cmps
lea
mov
jmp
popa
mov
pushf
cs
ins
sub
sbb
add
sbb
xor
xchg
sti
sbb
sar
aaa
pop
mov
pop
js
fs
mov
imul
addr16
(bad)
std
jb
xor
pop
xor
movs
mov
arpl
and
pop
cld
outs
retf
push
or
mov
mov
test
scas
out
ret
push
jo
jno
pop
push
xchg
or
in
loopne
cmps
addr16
dec
add
cmp
mov
pop
mov
and
call
and
cmp
mov
pop
aaa
push
arpl
cli
aaa
dec
sbb
loopne
mov
adc
mov
js
push
xor
mov
sbb
cld
pop
fmul
push
push
push
or
add
dec
out
push
and
(bad)
movs
les
jb
in
hlt
sbb
xor
(bad)
scas
outs
push
jge
mov
dec
push
(bad)
adc
jmp
push
add
ss
scas
sahf
movs
push
daa
and
cmp
mov
fcom
pop
cmp
cdq
outs
mov
cmp
fst
push
sar
and
xchg
or
cmps
fnstenv
dec
add
iret
(bad)
mov
jl
fcomp
fstp
nop
push
cmp
cmp
dec
inc
or
into
pushf
rcr
mov
mov
das
dec
mov
jle
lods
sbb
mov
xchg
xor
out
stc
inc
fadd
push
outs
scas
outs
mov
add
add
js
nop
popf
je
push
leave
pop
daa
mov
jecxz
out
push
ss
mov
jge
(bad)
cli
pop
loop
mov
call
pop
shr
sub
push
inc
push
push
ss
mov
jmp
xor
hlt
je
pusha
pushf
jno
jb
or
imul
mov
cld
jmp
dec
adc
call
lods
mov
jo
add
out
in
xchg
cmp
inc
sbb
mov
cld
loopne
adc
mov
xor
sub
ja
js
push
mov
xchg
and
js
adc
mov
(bad)
sbb
sub
xor
or
inc
sub
fisttp
mov
dec
(bad)
ror
stos
adc
inc
(bad)
or
int3
outs
mov
das
fild
aam
ror
frstor
idiv
aaa
mov
cmp
xlat
sbb
dec
mov
mov
mov
dec
or
in
xchg
and
test
ror
ins
inc
imul
or
fsubp
mov
push
jge
pop
jb
push
mov
push
scas
pusha
jb
pop
pop
jo
std
fmul
pop
jl
cli
call
dec
sahf
ins
or
jmp
imul
popf
adc
sub
repnz
movs
fs
cmp
lods
lds
adc
xchg
xlat
push
jb
sub
icebp
push
aad
les
stc
in
mov
add
mov
dec
push
xchg
cmp
jge
xlat
cmp
movs
adc
imul
fadd
cmp
dec
jo
push
cmp
inc
cli
or
sahf
add
mov
and
fmul
lahf
(bad)
iret
aas
idiv
iret
loop
in
push
pop
jg
enter
rcr
pusha
mov
adc
lea
xor
fucomp
ret
dec
je
mov
sbb
jns
mov
mov
addr16
xor
inc
jp
mov
stc
(bad)
jg
iret
leave
test
rcl
xor
and
out
int3
pop
mov
mov
loope
rcr
mov
dec
in
mov
in
nop
cmp
push
mov
sub
jmp
pop
retf
jl
adc
in
pop
popf
adc
shr
mov
repnz
jnp
int
imul
test
cmp
jecxz
call
inc
fwait
ror
or
into
popf
cmps
sbb
lods
push
andnps
in
mov
cmp
mov
adc
mov
fmul
cmp
cmp
jge
jl
or
mov
cmp
in
inc
mov
mov
daa
xor
jle
push
jmp
fwait
jne
fcmovnbe
cmp
scas
cmp
and
iret
fwait
or
sub
int3
js
push
xchg
shl
mov
xchg
lods
mov
dec
pminub
push
dec
test
loop
cmp
lock
loope
xor
je
(bad)
push
mov
jp
loop
repz
mov
sub
(bad)
ret
pop
dec
or
adc
in
cmp
sbb
add
mov
adc
mov
mov
enter
push
push
sub
aas
mov
stos
mov
pushf
repnz
xchg
dec
mov
push
sahf
adc
dec
aad
cmp
add
repnz
mov
daa
loope
les
cld
dec
inc
add
jo
shr
push
lahf
jecxz
cmp
enter
or
int3
pusha
sbb
push
jp
push
jge
loop
test
dec
or
fs
clc
test
stos
dec
(bad)
xor
shl
xchg
push
jle
fcomp
shl
pop
cmp
jl
ret
jp
xchg
aad
int3
sbb
mov
pop
cmp
imul
xchg
dec
sub
jecxz
xor
pushf
pushf
add
shr
dec
mov
and
jb
push
add
mov
aaa
mov
dec
jp
fnstcw
inc
scas
(bad)
pop
sbb
mov
or
pop
adc
inc
sbb
movs
je
daa
popa
in
(bad)
call
btr
add
lahf
xchg
ja
cmp
jnp
push
(bad)
jl
mov
cld
outs
mov
mov
mov
mov
or
mov
dec
inc
cmp
jl
mov
dec
mov
rcl
or
adc
stos
stos
push
mov
loopne
or
ins
mov
sub
xchg
cld
fcom
cmps
daa
scas
icebp
aaa
in
out
xchg
outs
lahf
push
dec
setp
add
loop
or
sbb
cld
add
test
or
mov
(bad)
push
out
xor
mov
pop
fcom
sbb
mov
das
pop
in
adc
and
out
adc
in
jbe
and
sbb
jecxz
arpl
retf
std
xor
mov
push
dec
lock
in
mov
or
loope
xor
push
stc
test
xlat
push
adc
fwait
push
mov
push
push
sub
pop
sub
fild
and
adc
int
scas
mov
dec
cmp
lods
jb
call
add
cdq
or
sbb
dec
je
rcr
add
(bad)
aas
cmp
nop
scas
inc
pop
push
in
imul
sbb
and
xchg
mov
cmc
fdivr
std
fs
adc
aad
dec
mov
lods
(bad)
jo
bound
xchg
or
out
cli
jns
aam
fstp
xor
std
in
xchg
js
mov
sub
int3
(bad)
es
xchg
mov
lahf
scas
mov
xor
sub
adc
add
dec
xchg
jbe
ins
loop
fsubr
and
push
add
fst
adc
mov
cmp
push
mov
xchg
jge
jle
mov
push
pop
sub
inc
inc
mov
lds
js
fs
mov
pop
sar
enter
xor
inc
leave
loop
repz
add
call
stos
sahf
movs
int3
push
outs
cmp
dec
dec
sub
mov
loop
ret
adc
mov
loopne
stos
out
loope
into
mov
pusha
xchg
(bad)
stos
inc
daa
cld
xchg
inc
inc
cli
push
jmp
gs
xchg
jge
sub
out
rcl
inc
dec
xor
and
xor
fs
sub
inc
cld
shl
jmp
(bad)
in
add
jne
xchg
or
xchg
or
xor
pop
lock
shl
mov
in
dec
xchg
pop
xchg
xor
lods
mov
push
(bad)
mov
dec
test
pop
nop
ret
mov
call
cmp
adc
pop
xor
jne
adc
ret
and
into
lea
retf
test
sbb
and
mov
add
(bad)
aam
aaa
and
jnp
cmp
xor
leave
jns
jmp
test
mov
scas
xchg
add
fidiv
add
rol
cmp
push
bound
leave
sar
inc
push
int3
mov
inc
mov
cmp
mov
je
and
lock
cli
mov
movs
scas
add
in
add
test
lods
loop
(bad)
push
cmp
jge
mov
pop
pop
aaa
sub
stos
mov
mov
fistp
into
sbb
jge
push
dec
add
out
jb
ret
adc
fdivr
icebp
repnz
xchg
stc
sbb
loop
mov
jle
aas
pop
pop
inc
(bad)
jmp
lods
mov
aas
mov
das
shl
fst
push
sar
aaa
cs
add
icebp
sbb
aaa
out
inc
add
cli
mov
add
adc
xchg
mov
jl
movs
(bad)
(bad)
bnd
and
and
fisttp
mov
cmp
adc
mov
stos
mov
shr
shl
sti
dec
inc
sub
scas
xlat
scas
dec
or
mov
call
cmps
pop
add
jne
mov
sub
pop
xchg
loop
shl
in
cmp
stos
mov
pusha
xor
mov
jbe
inc
sub
lods
loopne
mov
outs
pop
shr
repz
adc
dec
retf
jg
cmp
sbb
movs
(bad)
and
mov
cmps
or
outs
(bad)
dec
les
inc
push
daa
jns
cmp
mov
pop
jnp
mov
push
inc
fbld
xor
jp
pop
mov
and
push
add
xor
push
fimul
push
push
aaa
pop
dec
add
xchg
dec
and
outs
xor
dec
push
dec
inc
ret
add
out
sbb
cmp
cld
push
les
cmp
dec
(bad)
scas
inc
sbb
cs
dec
int
ds
es
inc
inc
xor
cdq
iret
sub
or
loop
int3
mov
outs
bound
movs
jmp
arpl
jp
push
push
and
mov
fs
neg
jae
inc
inc
xchg
std
pop
mov
push
xchg
adc
stos
repnz
je
mov
or
adc
sbb
push
ja
in
and
aad
fisubr
es
or
and
adc
sbb
jb
push
push
xor
loope
mov
cld
lods
cmps
test
sahf
adc
xchg
inc
out
push
sub
pop
inc
(bad)
(bad)
sub
stos
jge
fsubr
sbb
imul
mov
jle
cld
push
or
std
lods
mov
cmp
xchg
stos
cld
mov
jp
aad
add
or
inc
push
jmp
mov
aas
sub
out
mov
or
hlt
jb
adc
xchg
in
rcl
inc
out
mov
arpl
ds
mov
ret
pop
inc
mov
sub
out
dec
pop
aas
push
mov
lahf
inc
and
test
ins
test
repz
stc
dec
test
shr
sub
inc
in
in
(bad)
loop
mov
dec
jecxz
pop
mov
and
pop
or
lahf
arpl
dec
sub
and
shr
add
inc
out
sbb
pop
inc
test
ins
into
std
pop
push
call
mov
inc
ror
hlt
lods
push
addr16
or
inc
xor
ret
sub
popa
cmps
xchg
outs
int3
push
xor
scas
sar
mov
or
jmp
test
movs
in
loope
jne
retf
inc
lods
out
mov
or
pop
dec
push
in
popf
stos
jmp
das
ret
sub
mov
stc
sahf
es
sbb
jl
inc
fild
cmps
jb
mov
xlat
dec
(bad)
mov
retf
adc
ret
ss
inc
js
adc
js
jne
mov
jo
sbb
leave
mov
mov
cmp
fistp
out
sub
aas
ja
outs
adc
popf
fcmove
test
xlat
aaa
repnz
popa
mov
adc
add
dec
push
cli
push
cld
int
sahf
mov
lods
xchg
mov
add
adc
mov
rcl
sbb
into
mov
hlt
ret
lods
mov
jecxz
mul
sub
lds
dec
sbb
or
add
test
pop
in
out
sbb
and
loop
int
mov
jb
and
lock
repnz
jnp
sub
and
mov
adc
jmp
cmp
sbb
cmc
mov
out
ins
ins
mov
nop
xchg
mov
sub
mov
mov
and
mov
ret
loope
lods
imul
sar
cdq
int3
mov
clc
jae
add
ror
fld
scas
std
fwait
or
pop
std
aam
cmp
xchg
dec
mov
popf
add
cmps
xor
pop
dec
sub
mov
adc
push
sub
push
jge
pop
xchg
push
xor
shl
adc
fwait
call
push
and
jo
ins
mov
(bad)
out
lock
push
retf
xchg
mov
xor
dec
push
xchg
adc
jb
ins
add
stc
or
fnstenv
cmp
ror
adc
jbe
outs
push
fs
adc
aad
mov
ds
ds
enter
out
and
adc
test
(bad)
in
or
dec
ins
and
xchg
daa
add
enter
or
(bad)
fisttp
hlt
inc
adc
and
pop
test
or
mov
into
xchg
inc
jns
mov
je
cmp
or
ja
fwait
lock
and
jae
push
lods
mov
jae
retf
adc
cwde
sub
lods
pop
push
mov
cld
pop
sbb
imul
pop
retf
jl
sahf
movs
int3
in
jb
adc
inc
sbb
xchg
mov
out
sub
jno
lds
adc
clc
mov
lods
ror
jae
int
(bad)
fyl2x
fsubr
mov
fadd
cmp
add
push
bound
push
popa
in
hlt
fist
inc
fistp
jecxz
mov
rol
shl
aad
and
pop
xor
jne
xor
pop
push
dec
inc
test
dec
pop
cli
loop
(bad)
retf
jb
scas
xchg
shl
sahf
into
adc
and
and
xor
mov
mov
inc
xor
in
xor
cld
scas
fisttp
cmp
sub
pushf
pop
jae
ficom
mov
mov
sub
movs
mov
pop
sbb
loop
rcr
stc
cs
inc
mov
cmps
sbb
push
pushf
adc
pop
in
or
iret
aam
sbb
cmc
sti
into
std
out
sbb
cld
jecxz
inc
mov
addr16
ret
cmc
and
shr
ins
cdq
push
in
sbb
xchg
jmp
leave
fidivr
stc
test
cmps
jecxz
xchg
fs
stos
sub
(bad)
ret
std
nop
lahf
push
fcomp
in
sub
lods
xchg
sub
pop
jo
in
mov
pop
fs
fisttp
xchg
js
mov
mov
sbb
sbb
pop
jmp
push
or
sbb
push
adc
(bad)
sti
adc
je
cmp
or
retf
movs
xchg
popa
dec
cmps
or
jae
movs
fst
add
push
add
retf
out
call
rol
dec
mov
mov
and
sbb
cwde
je
not
in
fistp
retf
int3
dec
(bad)
mov
ja
lods
jl
xchg
out
imul
loope
fnstsw
or
jecxz
mov
idiv
adc
lea
inc
fwait
adc
xchg
dec
addr16
inc
stos
ds
inc
arpl
pop
mov
or
std
mov
ror
das
es
rol
jmp
inc
mov
test
daa
pop
mov
cwde
mov
and
and
mov
jns
popa
add
stc
test
and
dec
cdq
sbb
mov
mov
sar
fild
sbb
das
das
pop
scas
jno
sbb
jb
cmp
or
stos
mov
cwde
cli
pop
sub
retf
mov
sbb
mov
pop
and
push
xor
sbb
loop
or
sub
loop
enter
daa
(bad)
mov
scas
adc
sbb
inc
cmp
add
xchg
xchg
out
cwde
jnp
add
mov
or
xor
or
call
mov
repz
mov
jl
into
adc
jecxz
(bad)
addr16
dec
fcomp
repz
and
in
lods
adc
enter
push
and
fdiv
outs
push
(bad)
rcr
inc
in
retf
adc
xchg
add
dec
sub
mov
out
out
jg
sub
xlat
ja
mov
nop
fdivr
push
test
xor
loope
sbb
popf
mov
into
lds
nop
ret
lds
rcr
int
nop
leave
mov
bound
mov
stos
das
clc
sub
scas
fiadd
cmp
mov
movs
xor
pop
outs
sub
repz
(bad)
in
scas
shl
retf
addr16
les
outs
cld
cmp
sub
fisub
je
add
cwde
add
mov
mov
mov
icebp
popf
repnz
inc
cmc
lods
stc
adc
or
dec
mov
int3
cmp
xlat
lods
imul
in
jae
mov
mov
js
and
or
fld
xchg
jecxz
lock
lea
mov
inc
mov
mov
push
ss
mov
ficom
repnz
test
xchg
cmp
jmp
in
ficom
sub
rcr
dec
rcl
jnp
or
shl
rcl
test
icebp
push
jne
(bad)
repnz
inc
sahf
fcmovnbe
arpl
add
or
ja
arpl
popa
(bad)
mov
push
cli
hlt
bsr
cld
stos
cmp
clc
jo
ja
ret
jge
out
loop
mov
cmps
mov
xor
jecxz
lock
xchg
out
jg
idiv
lods
mov
rcl
fs
inc
push
neg
movs
push
pop
(bad)
jmp
mov
mov
retf
pop
cdq
test
push
call
std
mov
pop
fwait
add
xor
mov
jnp
xor
and
adc
inc
and
push
movs
push
ret
adc
pop
inc
adc
jae
bound
add
cmps
sbb
repnz
retf
std
test
and
add
ret
pusha
mov
inc
or
jb
out
adc
or
xor
cdq
pop
lods
in
jmp
xrelease
pop
cld
arpl
and
or
sbb
cld
inc
add
cmps
inc
xchg
jge
jge
cmc
cmps
lock
sub
push
mov
dec
pop
or
mov
mov
mov
(bad)
mov
stos
cmp
or
std
in
adc
cmp
idiv
sahf
sub
mov
pop
les
jl
dec
fst
fidiv
js
adc
push
push
mov
sub
sub
jbe
lods
int
mov
mov
sub
mov
repnz
bound
(bad)
enter
clc
and
push
in
ret
mov
mov
dec
ret
or
add
das
stos
adc
dec
add
fidiv
loope
shl
mov
std
jp
mov
and
lods
aam
jmp
pop
lea
and
or
sub
popf
push
(bad)
repz
pop
imul
mov
sub
sub
dec
pusha
sbb
jmp
or
ins
daa
movs
mov
rcr
jno
and
fmul
xchg
in
or
mov
fidiv
es
scas
xor
cmp
je
dec
bound
xchg
push
mov
repz
rcr
mov
inc
cld
pop
adc
lods
cmc
jge
hlt
mov
stos
cmp
sub
pop
das
(bad)
jb
loopne
pop
mov
sbb
enter
jge
out
sub
jmp
in
lock
mov
pop
mov
mov
pop
jbe
cmps
add
stc
inc
lock
sbb
mov
in
ret
push
enter
and
aam
pop
hlt
cmp
xchg
retf
push
sbb
mov
std
imul
pop
adc
rol
mov
not
mov
or
xchg
inc
inc
mov
mov
in
cdq
movq
add
ret
(bad)
jmp
jns
sub
adc
jb
add
shl
int
int
dec
arpl
dec
mov
dec
jne
bound
lods
sbb
xor
dec
leave
mov
xchg
sbb
(bad)
sti
adc
xchg
and
out
imul
jle
and
int
addr16
cwde
imul
push
mov
cs
mov
cmc
xchg
jno
jbe
lock
aam
les
lock
push
adc
or
out
adc
push
adc
cld
loopne
mov
sub
cmp
xchg
stc
sub
pusha
scas
jl
or
sub
popf
cld
ins
inc
or
mov
add
dec
bound
daa
xor
inc
sub
aaa
cs
shl
inc
es
loop
repnz
ins
icebp
scas
bound
(bad)
into
(bad)
fdivr
sub
leave
jecxz
push
scas
out
inc
pushf
sbb
dec
or
fdiv
fcom
aaa
add
pop
test
arpl
cwde
mov
daa
cmp
adc
test
mov
mov
and
mov
mov
or
imul
and
les
enter
or
sbb
ds
sahf
bound
adc
cmc
xchg
repnz
mov
xor
clc
ins
xlat
cmp
mov
int3
add
inc
ret
mov
mov
add
inc
or
mov
add
mov
popf
pop
add
fistp
gs
mov
(bad)
fadd
or
jb
and
shl
gs
clc
mov
sbb
sti
repnz
in
mov
dec
sub
fisttp
and
in
jecxz
inc
cmp
adc
and
in
cmps
fstp
(bad)
mov
adc
adc
dec
jbe
mov
call
mov
sar
or
ds
call
(bad)
jmp
mov
fisubr
int
mov
push
repz
int
add
lods
jne
jp
inc
adc
hlt
in
jmp
mov
lods
aam
or
push
mov
adc
jne
push
enter
jmp
mov
cdq
or
and
add
adc
nop
cmp
out
sbb
call
jbe
idiv
std
not
push
in
push
mov
sbb
mov
fcom
cmp
call
and
call
or
daa
ret
mov
loop
jle
mov
(bad)
push
mov
jecxz
and
inc
add
shl
add
test
pop
fistp
(bad)
cmp
in
add
fsub
fmul
inc
call
mov
sbb
rcr
cmp
test
add
sahf
aaa
daa
in
cld
or
fisttp
pop
mov
sub
push
mov
push
cmp
jne
xor
push
cmp
pusha
sbb
les
lods
inc
push
gs
out
xchg
and
cdq
sub
cdq
pushf
ins
add
jae
ror
inc
in
(bad)
scas
jp
sub
mov
mov
outs
enter
xor
ja
sub
outs
fwait
out
mov
out
lods
enter
shl
sbb
shr
ja
js
dec
cdq
push
mov
imul
inc
dec
shl
push
add
aad
dec
test
rol
jge
add
fwait
adc
xor
mov
lods
xor
inc
(bad)
fcmovu
out
push
adc
jmp
jb
pop
sbb
imul
cmps
ins
cmp
xchg
icebp
sub
stos
pushf
sbb
ja
ds
cmp
jle
pop
pop
jne
cmp
jno
cmp
xchg
dec
inc
sbb
or
hlt
xor
jbe
push
sbb
ret
repz
fidivr
int
ja
nop
dec
jle
xchg
dec
inc
sub
adc
inc
push
sbb
adc
dec
ret
sbb
retf
cdq
outs
push
in
rcr
retf
(bad)
xor
cmp
mov
aas
and
sbb
pop
cmp
cdq
sbb
and
cmp
push
add
and
outs
jae
mov
loop
sahf
jp
push
es
cmp
inc
xor
push
fnsave
dec
fidivr
lea
push
sbb
mov
out
ret
lods
loopne
jle
sub
call
aam
push
xor
sub
(bad)
cld
lods
cmp
mov
pusha
nop
mov
rcl
pop
inc
jle
sub
dec
call
stos
outs
adc
mov
lock
scas
stos
test
dec
addr16
mov
(bad)
cmc
ins
pusha
movs
push
je
aam
je
aad
sub
or
add
mov
daa
push
out
inc
sbb
xor
enter
add
ficom
add
popf
je
sti
jnp
outs
test
mov
ds
(bad)
dec
int
sahf
imul
xchg
pop
fistp
out
push
and
mov
jns
cs
mov
pop
ja
(bad)
sbb
adc
add
xor
ficomp
mov
xchg
loop
into
add
loopne
sbb
sub
jle
pop
push
sbb
jl
les
loopne
test
movs
or
bound
adc
add
ja
aas
mov
adc
push
add
cmp
test
and
stos
sbb
lea
std
adc
push
pushf
mov
aam
sahf
mov
popf
scas
pop
mov
and
sbb
jle
fwait
mov
jo
push
dec
mov
xor
shl
lods
jbe
inc
fbld
jl
jno
mov
pop
(bad)
inc
movhps
int3
mov
pushf
xor
mov
mov
xor
dec
mov
loope
lock
scas
adc
or
cmp
xlat
test
xchg
cmc
or
push
sbb
cs
fcom
xor
mov
aas
pop
cli
sub
lea
jl
or
call
popf
inc
mov
or
mov
push
add
test
rcl
ror
xchg
mov
mov
cwde
push
dec
adc
das
or
mov
mov
adc
jns
mov
repz
or
fdivr
xor
push
lods
std
ins
mov
les
sbb
jl
in
out
cmps
fdiv
mov
popa
push
sub
mov
repz
jo
xor
arpl
xchg
test
adc
mov
repnz
lds
cmp
fmul
ret
jmp
mov
jae
out
push
mov
cld
fs
and
adc
mov
sub
xor
std
fdiv
dec
inc
call
sub
sub
push
adc
lock
mov
xor
xchg
sbb
xchg
lods
lahf
sub
fstp
(bad)
aam
push
jmp
cld
pop
inc
inc
or
pushf
adc
nop
mov
push
adc
adc
(bad)
mov
pop
mov
ret
ss
push
out
cmp
push
les
stc
scas
repz
call
lods
mov
lods
movs
sbb
leave
in
dec
ficomp
push
lock
lods
mov
xchg
stos
mov
test
test
cmp
js
xor
and
mov
mov
cmp
mov
mov
mov
outs
or
daa
outs
inc
ins
jne
push
leave
pop
dec
mov
cmps
jg
clc
scas
repz
retf
js
ins
pop
pusha
dec
dec
jmp
sbb
repnz
xor
imul
mov
jmp
mov
fidivr
jge
push
stc
cmp
xor
sbb
inc
popa
jns
test
sub
call
push
xor
push
push
aad
pop
or
repnz
cwde
clc
ret
adc
es
mov
std
fdivr
pop
and
dec
lods
repnz
xchg
lods
add
popf
hlt
popf
pop
jns
shl
add
push
pop
arpl
mov
cmps
inc
sar
add
sbb
fcmove
test
std
(bad)
pusha
push
test
add
adc
loope
frstor
or
pop
inc
fsubr
dec
imul
push
cmp
rol
test
push
out
rcr
lods
pop
ins
(bad)
xchg
adc
push
xor
mov
xchg
or
xchg
push
iret
ret
add
es
xchg
inc
ins
jl
call
mov
fist
sahf
mov
ins
and
add
ret
mov
jecxz
ja
std
mov
ret
scas
es
lahf
push
test
lds
lahf
outs
ret
sub
ja
rcr
leave
loope
ret
xor
(bad)
bound
cmp
neg
(bad)
fcom
inc
mov
in
mov
push
scas
cmp
push
dec
in
hlt
and
bound
popf
cmps
push
repnz
es
adc
jb
cmps
dec
xchg
out
inc
mov
(bad)
mov
cmps
hlt
push
mul
pop
xor
fs
cmps
jno
js
sbb
into
pop
sbb
loope
pushf
pop
mov
aam
(bad)
sbb
es
shl
push
push
outs
fwait
imul
loope
(bad)
adc
push
imul
pop
aam
add
sub
fwait
stos
fcmove
ins
mov
inc
test
fs
sbb
(bad)
mov
mov
mov
xor
pop
sub
cld
xchg
movs
in
les
xor
loop
or
pop
inc
push
cs
sub
lock
xchg
fisubr
leave
iret
mov
xchg
dec
imul
or
aam
xor
jl
pop
sbb
sub
inc
push
push
ins
stc
jl
pop
dec
pop
mov
inc
inc
add
fist
out
scas
call
jb
push
mov
mov
outs
jmp
add
jnp
and
push
dec
iret
inc
fdivr
rol
div
xchg
or
shl
std
pusha
xor
sbb
inc
sbb
int
pushf
xor
call
bound
retf
pop
call
into
push
cli
pusha
ret
mov
sar
ja
push
xlat
mov
and
jg
lods
lea
pop
dec
mov
lods
je
mov
cmp
jnp
ins
sbb
push
pop
lods
popa
cmp
fisttp
push
int3
fdivr
iret
pop
xchg
or
add
pop
and
push
ds
shl
mov
icebp
fiadd
fimul
aas
mov
repz
xchg
(bad)
cwde
clc
in
mov
or
ficomp
lea
test
clc
rcr
jl
loop
mov
sub
adc
dec
and
mov
sub
xchg
hlt
xor
push
adc
pop
les
ds
in
mov
push
scas
jmp
(bad)
cmp
adc
in
repz
ret
add
ins
cld
cmp
or
ficomp
mov
add
scas
mov
jnp
adc
push
pusha
dec
loope
mov
pop
fsub
inc
dec
jg
pop
mov
adc
or
lahf
retf
dec
ins
mov
inc
aas
jmp
sub
xor
int3
or
lods
push
push
push
jecxz
pushf
adc
and
test
pop
cdq
lods
adc
fnstenv
xchg
clc
aaa
or
psubsb
lods
or
ins
arpl
fwait
mov
cmp
sbb
ins
arpl
mov
popf
(bad)
sbb
jmp
cwde
mov
mov
push
lea
mov
test
bound
mov
mov
aad
out
lea
in
xchg
int
or
or
neg
mov
outs
in
mov
jmp
inc
mov
jb
pop
sbb
sbb
das
neg
mov
shl
test
sbb
mov
jge
retf
in
repnz
mov
scas
mov
ds
inc
je
mov
arpl
adc
lods
xchg
and
xchg
dec
push
jl
xor
test
stos
inc
repz
cmp
out
mov
(bad)
mov
push
nop
xchg
pop
push
pop
mov
mov
mov
je
cwde
retf
or
jge
lock
pop
cmp
aas
dec
stc
mov
mov
dec
or
lods
rol
push
cmp
push
cmp
add
and
xor
dec
std
pop
mov
mov
aam
xchg
mov
jmp
popa
data16
and
adc
cmp
daa
lods
fsub
shl
push
dec
in
mov
and
jge
outs
jp
jnp
mov
int
sbb
lods
xchg
ins
or
fst
ret
mov
mov
or
inc
adc
es
cmp
xchg
mov
pop
pop
xchg
xor
xchg
jge
sub
dec
pusha
jmp
daa
jge
ins
push
loope
outs
xchg
cld
sub
adc
popf
jne
adc
push
mov
les
or
bound
gs
push
jmp
out
iret
fdivr
adc
adc
or
push
arpl
rcr
and
jecxz
mov
lods
xlat
mov
loop
jmp
mov
ja
out
mov
dec
leave
mov
jnp
fdivr
adc
pushf
add
mov
xchg
inc
xchg
sbb
iret
xchg
icebp
iret
lods
imul
movs
and
xchg
mov
dec
ins
ins
out
in
add
mov
(bad)
cmp
push
dec
inc
and
iret
sbb
mov
mov
iret
xchg
cmp
(bad)
mov
rol
enter
sbb
out
(bad)
retf
aaa
jbe
ins
ret
psraw
push
jg
test
sbb
retf
test
mov
sub
scas
xor
(bad)
mov
dec
push
pop
pop
shl
into
pop
jl
lods
ret
sti
or
sti
push
mov
and
pop
xor
out
test
fcom
mov
sub
inc
or
outs
pop
pop
or
lods
(bad)
pop
into
pop
imul
xchg
int
adc
dec
iret
push
jecxz
or
fdiv
jge
inc
fwait
retf
inc
dec
in
mov
call
scas
cmp
pop
dec
push
inc
and
cld
cmp
call
mov
iret
jp
add
and
and
add
xchg
sbb
and
(bad)
stc
cmps
pop
mov
lods
mov
fisubr
xchg
mov
jge
mov
imul
pop
sub
add
push
mov
mov
lods
fcomp
cmp
jge
jl
inc
mov
out
or
cwde
xchg
fst
adc
inc
sub
dec
cmp
jo
pop
and
in
mov
add
xchg
adc
mov
pushf
hlt
xchg
or
add
jne
fdivr
mov
cmp
inc
(bad)
int
pop
jmp
hlt
test
adc
jne
loop
inc
int3
scas
(bad)
cdq
inc
(bad)
sar
jecxz
inc
das
xor
inc
nop
imul
ror
popf
cmp
aam
bsf
pop
and
jnp
data16
push
stos
popf
mov
xchg
sahf
sub
push
(bad)
push
call
fmul
aas
add
xlat
call
out
pop
sbb
xchg
jg
enter
push
pop
mov
inc
sub
out
add
lods
ret
mov
cmp
mov
rol
sub
dec
pop
shr
stos
out
sub
iret
push
xchg
mov
das
pushf
dec
push
jl
or
push
(bad)
cmc
cmp
cmps
jmp
jge
fld
sub
ret
cmp
ins
add
push
add
jnp
in
xchg
leave
or
cmps
aaa
xlat
fs
lods
mov
or
fbstp
inc
pop
push
mov
adc
and
or
dec
stos
jge
xor
cmps
fisub
ins
xchg
sub
dec
or
out
retf
in
stos
std
add
add
sahf
data16
add
push
jle
cs
aam
inc
xor
or
in
outs
int3
push
outs
xchg
pop
cmp
(bad)
in
mov
fs
dec
leave
loopne
lea
clc
test
xor
push
mov
inc
mov
jp
sub
mov
mov
lock
xchg
and
ins
ret
ins
mov
and
jmp
push
mov
push
cmc
or
push
(bad)
test
inc
xchg
jl
xchg
adc
jno
push
or
lods
xor
rcl
or
clc
sbb
lods
std
retf
add
push
sub
fwait
mov
ror
xchg
pushf
pop
xchg
stos
xor
sub
test
jle
add
dec
xor
sub
and
cli
or
pop
in
jae
repz
mov
jnp
or
add
inc
push
jg
jle
inc
mov
ss
mov
test
mov
inc
bnd
mov
jb
sub
(bad)
lahf
adc
imul
movs
std
mov
xor
or
gs
in
cld
aad
jo
retf
js
dec
and
adc
ret
mov
jmp
repz
xor
pop
retf
adc
cli
sbb
lods
fimul
push
push
add
jmp
push
dec
and
pop
(bad)
mov
dec
pushf
inc
cld
shl
dec
xchg
mov
cld
in
ja
jb
out
adc
lods
jbe
dec
mov
dec
pop
push
mov
sbb
xchg
jne
sbb
lods
mov
fs
and
add
jmp
cld
into
xor
sbb
sbb
xor
xor
mov
repnz
inc
in
mov
dec
sub
xchg
test
test
xchg
dec
inc
xor
cdq
cwde
jne
pop
mov
das
scas
repz
push
(bad)
int3
(bad)
hlt
pop
loope
(bad)
daa
adc
xor
jecxz
sti
leave
add
xor
fs
cwde
mov
cmp
and
(bad)
xor
test
mov
out
test
je
xlat
xchg
cmp
push
push
arpl
jo
inc
adc
jge
mov
xchg
push
jmp
fcmove
nop
shl
xchg
mov
jmp
retf
movs
jmp
ret
xor
cwde
retf
in
getsec
loopne
ret
bound
(bad)
bnd
xor
cld
into
dec
dec
test
mov
pop
mov
dec
jmp
jmp
jmp
and
push
ins
pop
pop
push
or
popf
pop
sub
jecxz
xchg
add
pushf
jne
ret
xchg
inc
fnsave
and
pop
outs
pushf
ins
loope
xor
xchg
(bad)
in
jb
inc
sub
push
push
xchg
bound
stos
add
rol
in
jp
in
pushf
rcl
sub
xchg
xor
inc
sub
jge
movs
cmp
mov
cmps
dec
inc
dec
lahf
jg
fsub
aam
sub
xor
std
rcr
add
ret
jp
push
int
fidivr
xor
clc
xchg
sub
mov
cmp
push
mov
xor
and
fnstsw
movs
imul
out
mov
sbb
inc
loop
mov
cmps
std
es
mov
push
(bad)
addr16
cmps
arpl
stc
inc
dec
xchg
sbb
pop
nop
mov
add
hlt
mov
mov
arpl
ss
pop
ins
ja
ror
in
ins
xchg
xchg
stos
cmp
mov
test
push
push
xorps
cli
imul
in
mov
push
(bad)
jmp
loopne
xchg
jmp
scas
hlt
aaa
add
sbb
jns
and
das
jns
inc
div
ins
(bad)
into
call
and
mov
sub
popf
popa
test
adc
sub
js
jp
into
add
sub
inc
fst
sbb
pop
ins
sub
pop
movs
daa
mov
inc
sbb
xchg
out
inc
mov
bound
mov
lea
fistp
ret
loope
or
xor
fdivp
mov
and
out
(bad)
into
test
ror
iret
xchg
pop
adc
sub
xchg
lock
jbe
dec
mov
and
lock
(bad)
xor
dec
cmp
sbb
nop
(bad)
add
mov
fstp
xchg
pushf
lock
ror
fs
jbe
cmp
(bad)
jmp
or
sahf
jbe
js
psubusb
les
fiadd
fs
iret
ja
fdivrp
(bad)
jne
out
ds
pop
mov
xor
push
inc
scas
push
popf
sub
sar
(bad)
dec
cmp
out
lock
and
ss
je
xchg
lock
sbb
jbe
iret
cwde
dec
mov
repnz
push
fwait
popf
dec
and
or
xlat
in
sar
xchg
jl
rcr
mov
rol
cmp
lods
dec
test
outs
inc
cdq
bound
add
mov
ret
repz
repnz
fisub
jecxz
inc
fnstsw
xchg
(bad)
cmp
push
jmp
adc
clc
das
jo
aam
jmp
frstor
icebp
std
dec
sbb
fcom
and
in
xchg
mov
jecxz
xchg
adc
test
sub
add
mov
sar
or
mov
and
xchg
dec
shl
call
int3
mov
inc
lds
xlat
not
call
push
push
jle
nop
pop
imul
mov
enter
jle
pop
scas
int
pop
es
and
mov
xchg
sub
arpl
dec
inc
(bad)
outs
std
and
lock
repnz
je
imul
sti
jns
xchg
xor
lea
inc
cmp
ja
fisttp
fisttp
ds
adc
push
je
gs
jmp
fmul
icebp
xor
add
jg
pushf
mov
leave
jne
hlt
call
fdivr
xor
and
test
bound
or
cmp
mov
pop
pop
enter
nop
fiadd
xchg
(bad)
pop
jb
hlt
mov
bound
mov
push
ja
mov
repnz
push
and
pop
adc
add
mov
shl
pop
push
(bad)
aam
popa
mov
sbb
xchg
mov
xor
clc
adc
fs
fild
pop
mov
mov
dec
das
mov
data16
add
pop
dec
xchg
pop
cmp
or
jmp
adc
xor
or
in
outs
push
lea
das
popf
jb
out
lods
scas
enter
push
mov
out
outs
jb
mov
fidiv
fidiv
sub
and
add
pop
pop
add
fdiv
xchg
xchg
mov
pop
sub
js
sub
cmp
sbb
push
jno
or
and
xor
rcl
ins
and
mov
xchg
in
push
ins
mov
push
mov
inc
cmp
div
mov
je
xor
cmp
les
ret
dec
jns
out
fld
cmp
les
je
lods
ret
inc
fwait
es
mov
cld
adc
int3
and
or
iret
and
iret
es
cmps
dec
fidiv
daa
call
sbb
lock
imul
xchg
sbb
jl
adc
inc
cmps
aad
adc
jmp
mov
in
inc
into
pop
mov
ret
bound
mov
aad
cwde
push
daa
dec
out
loopne
mov
jmp
xchg
and
jo
xor
cmps
cs
jl
xchg
add
mov
sub
sub
test
jecxz
dec
pop
or
psrad
mov
xlat
outs
test
sbb
and
jecxz
inc
daa
mov
retf
add
inc
pop
push
pop
sbb
int
hlt
push
mov
jmp
out
bound
pusha
xor
retf
ficom
xabort
push
push
adc
xchg
jmp
jp
aad
ror
aas
jbe
or
out
leave
mov
repnz
mov
(bad)
push
push
(bad)
dec
jno
in
mov
sar
jno
sti
cld
je
out
push
add
iret
xchg
(bad)
in
out
xor
mov
loop
xor
(bad)
sub
fs
outs
inc
fadd
cli
fisttp
jmp
out
lods
mov
push
pushf
hlt
pusha
push
fcom
mov
mov
arpl
xlat
in
fsub
push
fimul
push
dec
push
aaa
bound
dec
jae
mov
dec
cmp
in
cmc
(bad)
cld
ja
(bad)
data16
sbb
jns
pushf
inc
xor
popf
adc
addr16
xor
mov
push
inc
push
jl
jge
mov
(bad)
(bad)
dec
fiadd
scas
pop
pushf
lods
clc
dec
mov
repnz
mul
mov
mov
mov
mov
adc
repz
pop
out
or
out
ins
ficomp
ror
inc
and
sub
repnz
in
repnz
sbb
push
jecxz
dec
inc
mov
gs
sub
sbb
adc
inc
in
pop
jp
lock
jp
pop
pop
daa
inc
jecxz
inc
mov
cmp
adc
or
fadd
push
jg
xor
xor
xchg
dec
mov
jb
jmp
stos
cmp
scas
mov
sbb
xor
popa
frstor
mul
jg
je
jl
retf
ss
mov
push
dec
loope
cs
and
sub
and
mov
xor
movs
jg
jo
mov
cs
add
cmp
jg
cmp
jne
lds
es
jb
neg
mov
cdq
lahf
xchg
ja
pop
(bad)
push
scas
cld
loopne
add
mov
lahf
int
loop
jno
js
fsub
inc
sub
lds
je
or
shl
aad
out
call
push
enter
pop
sahf
popa
sub
lea
test
in
out
add
loop
sbb
lods
out
mov
bnd
test
test
shr
mov
lds
cmp
and
addr16
push
mov
inc
loope
jmp
cdq
jecxz
jne
push
cs
or
aaa
push
dec
ja
mov
div
mov
inc
cmps
fisubr
out
sahf
dec
sbb
stc
lods
xchg
sbb
popf
and
mov
xchg
adc
int3
in
hlt
inc
std
jecxz
jecxz
fist
jo
popa
movs
mov
push
and
ret
lods
mov
pop
and
or
dec
(bad)
fiadd
xor
inc
or
cli
xchg
ret
pushf
mov
in
(bad)
adc
add
mov
scas
mov
es
int3
aad
adc
push
bound
loopne
mov
sahf
cwde
lods
mov
shl
sbb
and
sub
or
or
in
sbb
cmp
jae
daa
xor
outs
mov
sub
xchg
push
pop
ret
test
(bad)
rol
dec
std
and
xchg
mov
jp
cld
mov
retf
call
out
push
sub
std
call
ret
jp
out
mov
retf
mov
imul
xchg
popa
int3
ss
or
loope
rcl
push
push
inc
cmp
(bad)
loop
lock
mov
jbe
and
cmp
jb
nop
xchg
jb
retf
dec
adc
sub
push
mov
xor
cdq
cmp
std
xor
adc
aaa
mov
pop
ds
sub
mov
xchg
iret
fucomp
mov
loopne
jge
push
inc
imul
aaa
sbb
add
jae
mov
xor
popf
sub
xchg
mov
test
and
pop
sti
ror
movs
lock
adc
sbb
lock
xlat
and
je
repnz
js
fdivrp
ins
mov
mov
and
in
xchg
aas
pusha
mov
loope
mov
repz
xchg
inc
jno
pop
iret
and
add
jbe
cld
sahf
nop
enter
ins
mov
mov
aas
add
ins
arpl
jae
push
jl
xor
out
jle
cmc
(bad)
fisubr
mov
gs
mov
popa
ja
sbb
mov
movs
ja
inc
mov
ss
mov
cmp
or
fnstcw
movs
xchg
ss
xchg
ins
cmp
mov
pop
xchg
pop
out
ss
inc
mov
daa
neg
xchg
test
xor
test
enter
das
gs
pminub
push
inc
jp
in
lods
adc
psubusb
out
vminpd
ins
test
sub
sub
mov
fmul
loope
push
add
test
sub
mov
pop
mov
jmp
jp
sub
int
push
mov
out
pop
in
xlat
loop
inc
push
aad
cli
stos
sbb
mov
adc
cmp
xchg
scas
adc
jno
aad
cmps
repnz
idiv
in
(bad)
fsub
das
sub
gs
sbb
pop
jbe
push
mov
mov
sar
cwde
not
xchg
xchg
in
call
cmc
pop
cmp
xor
out
fstp
rcr
aad
out
clc
push
fmul
pushf
jbe
jae
xchg
jg
push
xor
int3
inc
mov
add
rcl
cld
in
jb
lock
jl
cmp
das
ror
cmp
mov
jo
jno
ret
push
lock
mov
xchg
test
push
inc
mov
out
bound
(bad)
mov
fs
mov
rcr
cmp
or
push
jae
fst
xchg
mov
xor
mov
shl
xrelease
setae
jecxz
pop
dec
aas
fdivr
adc
push
in
and
lock
mov
adc
mov
ret
ins
pop
and
adc
in
jb
movs
cld
fimul
inc
add
or
push
adc
push
frstor
sti
adc
rcl
dec
or
inc
sar
xchg
mov
jl
call
xadd
push
xor
or
pop
cmp
pop
(bad)
or
sbb
retf
push
mov
dec
int3
inc
dec
xor
pop
jb
jno
push
jle
cmp
fiadd
daa
xchg
outs
push
jbe
jns
xor
cmp
retf
dec
mov
and
cmp
dec
inc
mov
adc
sub
lock
shr
push
adc
xchg
outs
sub
aam
adc
aaa
outs
popf
(bad)
push
stos
xchg
test
pop
ret
ror
inc
ja
outs
lods
ds
mov
jns
loope
rcr
add
mov
stos
popa
scas
pop
pop
pop
sub
push
iret
ret
add
ins
mov
scas
sti
mov
cld
xchg
cmp
mov
mov
xor
stos
push
(bad)
inc
rol
outs
call
fiadd
inc
int
xchg
adc
adc
jbe
jo
xor
mov
movs
mov
sar
repz
rol
add
rcr
ror
sub
js
dec
pop
movs
push
iret
push
daa
ss
ins
adc
cmp
shr
add
jb
pop
dec
push
fisub
mov
fdivrp
sub
leave
xchg
movs
xchg
cmps
mov
add
adc
sub
movs
dec
mov
jmp
mov
test
addr16
adc
cwde
inc
xlat
mov
mov
aam
test
add
xchg
mov
icebp
jmp
inc
sbb
cli
jmp
pushf
jl
mov
cwde
xchg
call
pop
push
or
push
leave
call
test
mov
jl
mov
cmp
push
jb
cmp
je
pop
pop
sbb
mov
mov
mov
dec
into
gs
dec
outs
cmp
jp
(bad)
ins
nop
mov
test
out
rcr
dec
pop
dec
inc
adc
icebp
sahf
jb
add
stos
push
fsub
rcl
ror
xor
adc
jmp
jae
in
push
cld
jecxz
test
int3
bound
pop
(bad)
in
mov
sub
jecxz
and
mov
inc
and
imul
mov
mov
cwde
xchg
push
out
add
dec
das
fmul
pop
inc
push
imul
test
fild
xchg
mov
xor
jbe
inc
in
popf
pop
ins
(bad)
xlat
(bad)
xchg
xor
loop
call
or
fimul
cmp
sbb
fist
es
sar
xor
sub
retf
arpl
std
(bad)
rcl
(bad)
mov
dec
push
push
aad
pusha
cmp
test
xchg
fwait
out
sub
mov
adc
or
mov
aad
not
int3
push
add
cdq
movs
and
push
mov
dec
aas
or
aas
popa
mov
fdiv
inc
adc
test
xchg
in
pop
mov
jb
mov
xor
sbb
dec
inc
pop
in
enter
cmp
repnz
sub
das
or
push
bound
in
ds
mov
sbb
shr
scas
imul
mov
ins
ins
es
lods
and
pop
sar
xlat
loop
pop
sahf
xor
jnp
jae
add
add
push
int
fisttp
xor
dec
mov
cmp
push
dec
in
sub
adc
(bad)
jmp
xor
bound
xchg
in
xchg
scas
xor
shl
ficom
push
dec
sub
aam
fdivr
retf
(bad)
repz
and
xor
repnz
cmp
and
cmp
dec
pop
(bad)
sbb
jmp
aas
aad
mov
push
inc
sub
and
jmp
loop
jns
cmps
cmp
shr
daa
add
ins
lock
jle
cs
(bad)
pop
add
(bad)
mov
push
inc
addr16
dec
data16
sbb
fstp
or
lea
jb
enter
sub
ja
mov
mov
mov
dec
sbb
lahf
xor
xor
aaa
add
out
lods
xchg
cwde
cld
jmp
clc
ret
mov
adc
add
fcomp
adc
ffree
mov
xchg
cmp
mov
adc
loop
shl
sahf
push
mov
test
dec
rcl
pop
xchg
cmp
mov
ret
sub
sbb
mov
xchg
aad
and
jnp
rcr
cmp
popf
xor
sbb
scas
or
bnd
ret
fcomip
out
sbb
(bad)
cmp
aaa
mov
mov
sub
cdq
cmp
mov
mov
sar
movs
int3
cli
xchg
int3
cdq
icebp
mov
icebp
ficom
xchg
in
(bad)
mov
push
leave
call
lock
test
bound
aad
(bad)
sbb
mov
inc
rcr
mov
fldcw
icebp
xchg
shr
les
pop
mov
dec
pop
jo
ins
fcomp
or
pushf
ficomp
(bad)
push
dec
and
and
addr16
ins
or
dec
hlt
push
jno
les
clc
mov
pop
repnz
push
(bad)
ror
cmp
nop
out
xor
cmps
mov
cmp
mov
mov
dec
dec
dec
adc
cs
pushf
push
pop
push
jecxz
jmp
mov
pop
mov
pop
popf
or
jl
xchg
imul
pop
sub
xor
jbe
inc
repz
scas
mov
sbb
ins
fidiv
ins
and
test
ret
cmp
(bad)
arpl
sbb
push
jne
test
adc
inc
dec
lea
inc
add
cmp
xor
mov
or
pop
pop
and
scas
or
and
pop
pop
retf
ss
sub
or
jge
and
pop
add
cwde
sar
int
call
push
pushf
dec
imul
pusha
stc
test
cmp
mov
or
push
in
repz
fidiv
mov
test
aam
mov
aad
inc
sbb
cmp
jge
push
aaa
push
mov
jl
push
fwait
add
xor
(bad)
(bad)
jmp
mov
or
xor
xor
sahf
xor
ret
and
jo
fs
dec
add
push
inc
das
in
add
inc
repz
lds
test
dec
jns
jmp
out
mov
mov
mov
add
fiadd
mov
test
push
hlt
jne
add
mov
shl
int
sti
mov
mov
mov
push
les
sbb
sub
sub
xchg
test
cmp
ins
ror
ja
mov
or
std
aad
jb
jb
cmp
pop
inc
lahf
(bad)
cmp
add
mov
xchg
and
dec
dec
into
mov
push
repnz
int
jnp
jb
push
aad
xchg
push
pusha
pop
mov
pop
outs
cmps
and
dec
fs
sbb
jnp
jecxz
mov
fst
daa
adc
ret
xchg
test
das
loop
push
dec
pop
cs
and
cld
or
loop
jno
cmp
mov
adc
inc
in
into
lock
xor
mov
push
leave
pop
mov
fwait
mov
dec
mov
xor
push
jl
cdq
icebp
cdq
jo
add
pop
cs
cmps
imul
push
fs
pop
js
inc
and
sub
sub
inc
pop
mov
mov
mov
push
sbb
ret
imul
sbb
push
cmp
daa
shr
outs
jmp
mov
cvtdq2ps
fistp
pop
sbb
mov
and
push
(bad)
mov
mov
test
jns
mov
inc
mov
mov
jl
in
pop
sub
ret
sbb
popa
outs
mov
cmp
pop
and
dec
push
or
icebp
data16
cmp
push
xchg
ins
mov
lds
push
mov
inc
mov
mov
popa
mov
stos
add
loop
inc
sar
xchg
mov
add
mov
ja
push
add
sbb
in
inc
push
(bad)
cli
cmps
add
and
push
push
aas
outs
mov
mov
pop
mov
call
lods
mov
mov
ins
lea
push
mov
xchg
push
lods
lahf
call
jmp
xchg
aas
mov
addr16
add
int3
out
add
pusha
jp
pusha
dec
loop
es
outs
jbe
pop
(bad)
fsubr
ror
sbb
adc
and
jecxz
pop
sub
mov
cmp
scas
xchg
mov
jo
fsubr
cmps
iret
or
mov
jp
xchg
pop
sahf
out
or
push
sub
mov
stos
push
and
mov
adc
inc
xor
mov
pop
push
cli
cmp
mov
cmp
sbb
std
push
mov
mul
in
jb
jnp
xchg
mov
int3
xchg
mov
mov
pop
adc
jae
inc
lods
and
jb
mov
mov
mov
cmc
in
shr
fwait
jbe
cmp
push
push
mov
or
enter
icebp
sub
or
jne
push
adc
inc
or
jb
jecxz
push
or
addr16
dec
out
clc
pop
test
cld
imul
je
jmp
mov
push
outs
xor
(bad)
push
sbb
ret
add
mov
shl
push
fdiv
sbb
mov
sub
fstp
hlt
mov
sbb
cwde
sar
cmp
or
jecxz
(bad)
dec
inc
inc
pop
adc
bound
daa
xor
out
out
inc
xchg
jecxz
mov
lds
pop
or
fcomp
push
add
call
adc
pop
jle
sti
pop
add
add
inc
dec
adc
xchg
mov
loop
xor
fmul
xor
les
pop
mov
jno
std
push
nop
xchg
arpl
ficom
(bad)
and
retf
stos
xor
add
mov
(bad)
stos
inc
sahf
cmp
sbb
push
adc
jmp
xor
mov
gs
push
stos
or
xor
mov
cmc
push
ret
xchg
add
mov
xor
inc
push
clc
xor
add
adc
dec
jns
cli
dec
data16
xchg
push
test
xchg
fchs
int
ins
and
jge
cmp
jmp
pop
adc
inc
out
repz
mov
loope
mov
les
sbb
jae
pop
fsubr
or
gs
mul
test
push
pop
(bad)
dec
cmp
add
sub
pop
rol
icebp
sbb
push
pop
mov
jo
movs
mov
mov
adc
out
xor
retf
pop
push
dec
lea
test
ds
mov
loope
sbb
frstor
cli
or
adc
int3
lahf
ins
pop
or
addr16
add
push
pop
dec
call
mov
std
scas
test
mov
jmp
not
and
xor
jne
pop
push
imul
es
mov
xchg
cmc
pinsrw
jne
out
xor
and
int3
mov
mov
shr
mov
xlat
mov
loop
icebp
arpl
inc
xchg
push
fmul
mov
pop
loope
cmp
cs
cli
ror
or
mov
nop
ret
call
xor
or
retf
adc
mov
sub
lods
shl
lods
cmp
cld
mov
pop
mov
dec
ja
sub
fmul
mov
sub
mov
add
cli
je
imul
nop
ins
stos
lahf
pop
mov
pusha
nop
(bad)
shl
dec
and
pop
or
jns
fs
jo
cli
mov
scas
test
movs
xor
sub
mov
nop
add
call
xor
dec
jl
fnstsw
xchg
icebp
adc
ror
fs
aas
cld
sti
lock
inc
mov
fidiv
sti
adc
pop
cdq
cmps
mov
fsubr
out
mov
inc
(bad)
jecxz
mov
lods
sub
outs
or
rcl
mov
xchg
cmp
fnstenv
leave
adc
cdq
push
inc
scas
repz
cld
mov
bound
lea
pop
adc
jmp
mov
fdiv
mov
mov
push
repnz
push
cs
cli
add
cwde
jl
addr16
sub
push
int3
and
push
mov
out
jmp
gs
lock
mov
aam
or
clc
in
add
dec
push
jle
xchg
dec
mov
jne
rcr
adc
fwait
cmp
pop
pop
inc
addr16
cs
fstp
mov
int3
inc
(bad)
out
int3
fdiv
xchg
sbb
add
mov
sbb
sbb
or
sbb
jns
das
push
imul
scas
and
and
mov
jnp
int
lods
ret
lds
enter
push
xor
or
adc
neg
xchg
inc
repnz
shr
add
cs
ins
jnp
outs
inc
inc
push
dec
aaa
repnz
cmp
ret
sar
jmp
cdq
into
mov
adc
jle
fld
std
shl
push
mov
cmp
xor
inc
jl
(bad)
xchg
push
cmp
add
lods
xchg
fisub
xor
cmp
ret
push
arpl
pop
out
retf
arpl
or
in
(bad)
aad
lods
jl
jns
sub
outs
or
mov
mov
dec
pusha
and
ja
lods
jae
sbb
add
push
mov
adc
mov
out
out
stos
dec
push
out
retf
ins
in
and
sti
cmp
in
and
or
(bad)
popf
add
inc
in
cli
pop
mov
push
inc
mov
sbb
mov
mov
jp
push
int3
mov
mov
jb
loop
xchg
or
xchg
or
jle
mov
mov
lea
fmul
cmps
sub
push
add
retf
loope
cmp
cmc
mov
mov
out
aas
aam
ret
inc
or
cmp
arpl
mov
mov
loop
dec
outs
push
stos
mov
adc
sbb
jge
shl
xor
(bad)
and
ret
hlt
ins
inc
jg
sbb
fisubr
dec
mov
std
mov
xchg
cdq
hlt
int3
mov
or
inc
inc
repz
mov
add
jl
pop
out
mov
push
aam
mov
out
push
push
cmp
push
fsub
inc
pop
setns
lods
pop
sbb
scas
push
sbb
pop
ss
popf
jb
ret
mov
setb
push
scas
cmp
outs
and
jmp
lods
je
aas
popa
adc
mov
jns
pop
push
mov
lods
(bad)
rol
jmp
rcr
push
daa
out
lods
jecxz
inc
mov
and
mov
jmp
mov
cmp
push
mov
mov
adc
jl
add
pushf
push
xchg
jp
cmp
lods
mov
push
repnz
adc
jle
push
mov
xor
loopne
(bad)
aaa
repz
xchg
add
mov
mov
add
ror
ins
cmp
movs
scas
fnstsw
jns
add
mov
dec
mov
loopne
xor
sti
mov
mov
rol
(bad)
xor
in
sar
repnz
lea
sbb
aaa
jae
push
inc
mov
sbb
mov
and
aaa
cmp
arpl
sbb
jb
call
mov
add
test
xchg
scas
lods
and
push
mov
jge
fsub
sub
push
mov
or
or
fsub
lea
in
leave
sar
adc
std
push
xchg
sub
push
sub
push
mov
sbb
mov
pop
scas
bound
adc
jb
xchg
xor
sub
xor
mov
push
xchg
cld
jp
cmp
mov
cdq
aad
shl
ret
aas
enter
dec
mov
mov
inc
pop
cmp
outs
mov
and
push
sbb
ins
sub
pop
jmp
or
fcomp
ds
leave
dec
pusha
aas
in
mov
lea
rcr
sub
retf
cmp
and
ret
cs
add
dec
fsub
mov
or
push
or
cmp
dec
fstp
jle
dec
mov
ja
dec
jl
cmp
not
inc
adc
movs
sbb
std
push
xor
clc
xchg
aam
in
(bad)
dec
fld
sbb
push
dec
(bad)
cmp
dec
sub
dec
mov
cld
rcl
cdq
daa
ret
shr
fs
into
sub
popa
and
mov
mov
mov
(bad)
sub
push
and
daa
ds
push
xor
push
mov
mov
push
fsubr
loop
lock
outs
aad
push
sbb
icebp
je
ror
xchg
test
pop
mov
ret
jno
sbb
(bad)
fldcw
cmp
push
mov
dec
pop
nop
ss
outs
lods
dec
(bad)
sub
nop
mov
dec
sub
mul
sbb
scas
data16
jae
je
sahf
aaa
xchg
dec
call
xor
call
leave
dec
scas
sub
lods
sbb
mov
ins
and
sub
cmp
sub
jbe
jge
scas
mov
cmps
cwde
fsub
adc
fadd
mov
sub
stos
pop
and
fsubp
push
pop
mov
or
jl
(bad)
xchg
fimul
daa
xor
lods
adc
sahf
xchg
(bad)
pop
ror
cmp
sbb
outs
movs
or
xor
dec
cmp
pop
retf
test
mov
out
ins
(bad)
mov
push
popf
bound
jnp
cmps
fimul
jmp
push
mov
xchg
aas
jmp
push
test
mov
add
cld
mov
pop
les
into
mov
jae
push
or
and
sbb
int
retf
mov
loopne
pop
loop
movs
lods
xchg
(bad)
popf
fsubr
dec
repnz
mov
mov
push
add
es
lods
mov
xor
popa
stos
and
pop
jmp
call
and
push
dec
movs
and
mov
mov
xchg
mov
bound
cmp
jno
mov
cmp
cld
or
rcr
mov
xchg
loope
xchg
push
imul
xchg
jmp
mov
sahf
mov
aas
pop
cmp
dec
lods
(bad)
or
xor
in
lea
xlat
add
cdq
int3
into
lea
cli
test
test
mov
cmp
dec
ret
sub
test
push
push
cld
push
add
aas
jl
call
cmc
add
enter
xlat
adc
jecxz
scas
(bad)
xor
pushf
dec
clc
loop
fsubr
(bad)
hlt
cmp
jge
repnz
(bad)
outs
call
ret
adc
fsub
add
ret
pop
rcr
cld
or
in
jl
pop
push
push
xlat
push
mov
mov
sbb
push
jb
pushf
cmp
ret
sub
add
lock
and
or
jle
pusha
es
(bad)
imul
xchg
sbb
add
mul
pop
jg
mov
mov
mov
fistp
sahf
push
pushf
cmp
sub
mov
sub
ficom
outs
in
mov
cmp
icebp
test
aam
pushf
inc
or
add
test
hlt
dec
xchg
ja
mov
rcl
or
sbb
pusha
out
dec
out
mov
clc
sti
push
jl
fidivr
cmc
add
adc
xor
loop
cmc
sbb
mov
adc
fs
inc
rcr
cmp
scas
ficom
and
xchg
sbb
movs
fbstp
lods
shl
imul
mov
jp
sub
shr
dec
dec
out
bound
pop
leave
lods
loopne
fs
xor
jae
jno
sbb
mov
int3
lock
je
stos
mov
in
mov
mov
repz
ret
fld
nop
hlt
nop
dec
dec
dec
mov
ins
mov
push
sbb
mov
sbb
mov
jge
in
mov
mov
mov
adc
mov
add
popf
jmp
ret
pop
das
fisttp
jge
mov
es
into
(bad)
pop
cmc
or
std
push
mov
mov
jl
js
add
xor
sahf
cmp
push
xor
lods
adc
dec
dec
mov
lods
sbb
push
cmp
dec
jge
bound
inc
mov
fsub
jb
xor
sub
cwde
jecxz
mov
jmp
lods
into
bound
es
icebp
xchg
int
mov
rol
bound
stc
adc
sub
dec
fstp
jg
(bad)
int3
xor
retf
in
pop
push
scas
pop
imul
es
je
push
mov
movs
repz
cmps
inc
lock
clc
or
pop
cmc
arpl
mov
sbb
jmp
or
daa
scas
pop
add
and
stc
test
aam
inc
aaa
neg
inc
mov
push
and
mov
jge
adc
rcl
je
pop
inc
(bad)
jle
retf
loopne
lods
inc
or
add
xchg
xchg
popf
mov
cmc
loop
pop
(bad)
loop
xor
aaa
mov
dec
lock
adc
mov
pushf
mov
fisubr
add
xor
add
fisub
call
and
(bad)
mov
repnz
mov
mov
rol
add
push
ja
add
ret
jl
(bad)
aam
jb
lds
fimul
cdq
sahf
loopne
mov
sub
push
xor
push
arpl
cmp
nop
mov
out
mov
dec
pop
shl
(bad)
jb
je
dec
imul
lea
push
xchg
or
lahf
inc
push
test
cmp
xor
adc
add
stc
inc
lods
shl
mov
test
sub
and
test
inc
cmp
jo
jg
adc
loopne
repnz
lods
ret
gs
sahf
lods
outs
ret
retf
sti
in
pop
fs
fadd
sub
xchg
push
stos
xchg
sub
and
imul
pop
ss
cmp
pop
push
adc
rcr
inc
cs
es
sub
xor
addr16
inc
push
mov
mov
into
adc
in
mov
or
xchg
xchg
adc
sub
or
sbb
jo
test
sub
push
repz
mov
cmp
sar
daa
or
adc
xchg
mov
sbb
scas
fmul
push
ds
cdq
xor
aad
daa
loope
loop
fs
repnz
scas
sub
mov
cmp
aam
lods
xor
enter
add
out
or
xor
sub
fist
cmp
int
mov
pop
rol
pop
aas
mov
imul
dec
adc
xchg
cs
push
cwde
ja
mov
sub
ins
pop
retf
(bad)
shl
cdq
repnz
cmps
jb
adc
fwait
outs
lods
(bad)
int
fucomip
cmp
loop
xor
call
fld
call
push
mov
push
jmp
mov
fadd
enter
das
addr16
pop
xchg
loop
and
inc
inc
inc
mov
test
cmp
lods
or
dec
xlat
xchg
or
sbb
xor
sub
inc
or
(bad)
fild
xchg
sub
sub
cmp
sbb
or
xor
les
in
xchg
mov
sbb
in
dec
(bad)
ds
ss
jmp
imul
int3
mov
or
aad
frstor
dec
leave
call
daa
adc
scas
(bad)
aam
inc
ret
daa
fnstsw
mov
xchg
jecxz
ins
es
add
push
jecxz
enter
mov
fnstcw
sub
adc
int
repz
stc
dec
into
push
pop
xor
int3
jnp
sbb
mov
adc
in
inc
dec
jge
out
push
xchg
scas
mov
add
fisttp
rcr
(bad)
(bad)
jp
call
sub
cmc
loop
xchg
enter
pop
mov
(bad)
ss
pop
cmps
mov
dec
sbb
pusha
dec
popf
out
xchg
xchg
mov
inc
fdivr
pop
dec
aas
ins
mov
adc
ret
dec
clc
outs
(bad)
xchg
test
fsubr
sti
mov
and
push
and
jb
std
xchg
pop
shr
push
and
sub
nop
iret
xor
pusha
sub
push
xchg
fs
ins
sbb
xor
retf
(bad)
hlt
test
(bad)
shr
adc
ss
cli
cmp
dec
fnsave
jl
in
lods
cmps
and
xchg
mov
jl
lods
fcmovne
pop
jo
in
mov
imul
mov
push
mov
test
or
rcl
pop
jle
push
cmc
sbb
stc
fdiv
pop
cld
jmp
mov
mov
and
sub
cmp
hlt
push
aad
xor
mov
pusha
dec
icebp
imul
jle
inc
push
mov
addr16
je
dec
idiv
push
pushf
ror
dec
cmp
or
es
popf
mov
shl
enter
pop
inc
xchg
jmp
int3
inc
sbb
in
inc
mov
sar
xchg
aam
xor
jb
fisttp
daa
mov
cmp
or
adc
cs
lods
dec
dec
xor
push
or
and
fs
call
adc
and
dec
mov
cmp
fcmove
sub
loop
lahf
cmp
sbb
int3
jb
mov
jo
inc
scas
addr16
mov
ficomp
outs
push
fisub
xchg
test
mov
adc
je
data16
hlt
rep
mov
popf
retf
xchg
cs
xor
or
adc
mov
fucomip
repz
xchg
fst
xchg
xchg
in
adc
mov
gs
mov
xchg
jge
popf
(bad)
xor
rcr
ins
xor
cmp
push
outs
add
out
mov
fidiv
mov
fiadd
dec
lea
xor
jo
xchg
add
inc
int3
in
das
add
jle
retf
and
sub
scas
(bad)
leave
(bad)
jecxz
cmp
xchg
(bad)
setns
retf
hlt
movs
jl
pop
cmc
daa
push
ins
(bad)
ror
sub
mov
pop
mov
adc
das
ds
pop
lods
fsubr
add
push
adc
fstp
lods
std
lea
imul
dec
mov
les
sub
frstor
and
sbb
fxch
add
inc
mov
lea
mov
je
jg
add
std
test
adc
mov
scas
repnz
rcl
sub
mov
mov
pop
xchg
ins
sub
sub
jb
sbb
mov
(bad)
sub
pushf
addr16
test
xor
loop
add
popa
shl
retf
stos
mov
add
push
jnp
pushf
aam
cmp
popa
add
adc
inc
xchg
cs
jnp
pop
jl
scas
inc
cmp
outs
or
dec
cs
(bad)
stos
fs
sbb
gs
cmp
lock
fcmove
push
cmc
adc
out
dec
sbb
ins
es
cmp
inc
ins
add
sbb
dec
sahf
(bad)
pop
popa
xchg
shr
addr16
jl
data16
cmp
loop
cmp
add
test
jp
xchg
xor
(bad)
shl
xchg
and
int3
outs
push
or
lea
(bad)
mov
mov
rcl
adc
mov
lods
mov
jbe
dec
add
push
data16
pusha
fiadd
lock
xchg
mov
inc
pop
(bad)
imul
mov
add
outs
push
mov
cmp
ret
mov
in
push
call
popa
add
jge
fwait
add
and
dec
daa
repz
xlat
lahf
retf
(bad)
pop
out
movs
(bad)
jo
cmps
pushf
dec
cdq
cmp
push
es
mov
lods
push
xchg
mov
mov
mov
stos
rcr
add
repnz
push
dec
(bad)
clc
in
out
cdq
repz
lods
add
popa
sbb
jb
js
jmp
inc
pusha
and
rcr
mov
mov
jmp
jge
test
jecxz
ror
or
addr16
sub
out
sbb
int3
mov
jecxz
pushf
in
cmp
pop
push
cld
faddp
jp
(bad)
push
sbb
es
xchg
lods
mov
repnz
fwait
bound
outs
sub
popf
pusha
sub
ins
shl
pusha
xchg
pushf
inc
rcl
mov
xchg
xor
sub
pushf
scas
(bad)
int
pop
stos
push
sbb
xchg
ss
shl
mov
push
loope
fild
(bad)
jle
scas
add
add
adc
adc
je
cmp
mov
sbb
adc
lods
jecxz
cmp
pusha
lods
and
test
xor
cmp
push
jno
jmp
sub
mov
test
imul
xor
out
cli
js
loope
fistp
gs
inc
dec
or
push
xchg
jle
xchg
arpl
sub
sahf
vmread
loop
cld
cmp
push
fld
jo
xchg
mov
(bad)
enter
jp
mov
sar
jle
cmp
push
mov
cmp
sub
ds
jne
jb
add
aas
sar
adc
popf
mov
por
lods
in
gs
add
pop
lods
sub
jo
cmp
sti
ins
or
test
sar
adc
adc
ja
add
cmp
mov
fadd
int3
mov
movs
xor
inc
pusha
cmp
jnp
call
test
cmp
clc
mov
int3
adc
and
in
cmp
call
dec
ins
cmp
inc
mov
cwde
mov
sbb
jb
fs
pop
sbb
inc
jge
mov
retf
loope
push
add
or
xor
pop
inc
stc
lods
mov
(bad)
in
xchg
cld
pop
xchg
fild
repz
les
and
dec
cld
mov
jmp
adc
(bad)
jns
dec
mov
into
hlt
pop
sub
lods
pop
jns
loop
jo
sahf
in
rcr
jmp
sub
pop
fwait
aas
jb
mov
sti
std
in
mov
mov
cmp
stc
in
xor
or
ret
or
push
jbe
adc
dec
adc
gs
sar
xchg
pop
rcr
dec
pop
inc
sti
popf
and
mov
or
xchg
jmp
inc
cs
(bad)
jmp
inc
or
in
std
and
sahf
mov
add
mov
push
push
gs
arpl
push
cmp
stc
das
fbld
retf
cmp
sub
scas
mov
jbe
xor
fdiv
enter
inc
mov
ja
popa
mov
pushf
adc
or
(bad)
mov
or
push
das
pop
and
sub
mov
repnz
mov
clc
mov
add
test
mov
test
mov
jbe
lahf
mov
imul
inc
lds
sub
lock
inc
pop
retf
test
xchg
loope
sbb
dec
call
dec
dec
das
mov
xchg
sbb
push
jmp
adc
jmp
stos
bound
pop
scas
icebp
adc
or
xchg
popa
iret
dec
xor
jge
aaa
bound
(bad)
aam
mov
lds
inc
mov
ds
ins
sub
jnp
aas
adc
aaa
not
jmp
cs
shl
scas
je
adc
push
ja
mov
daa
inc
outs
or
mov
les
(bad)
pop
push
xchg
(bad)
repnz
adc
aas
test
stc
xor
mov
pop
in
mov
and
cdq
sahf
add
gs
pop
pop
xchg
jmp
stos
fild
js
dec
xor
dec
mov
iret
xchg
add
ss
in
imul
ror
pcmpgtb
push
or
sbb
adc
rol
push
fstp
jg
dec
jb
push
xchg
call
loop
and
mov
ret
adc
in
mov
bound
ret
xor
int3
xchg
in
sub
xchg
mov
mov
or
add
push
add
enter
out
imul
(bad)
test
test
push
push
add
in
cwde
mov
addr16
dec
mov
js
daa
cwde
mov
cmp
adc
mov
xchg
or
int3
jg
imul
jg
hlt
sub
arpl
add
mov
arpl
rcr
xor
(bad)
mov
xor
dec
mov
arpl
jns
int
call
es
xchg
jmp
and
dec
movs
sbb
add
inc
popa
mov
sub
jbe
pushf
lock
dec
popf
mov
jp
adc
mov
adc
scas
or
dec
out
mov
jae
std
jb
push
pop
jne
mov
fmul
cmps
push
xchg
into
fst
mov
fs
inc
cmp
push
int
cmps
lods
shr
fiadd
movs
(bad)
and
call
(bad)
push
or
std
and
fucomip
add
adc
and
sub
jg
cwde
rcl
(bad)
out
mov
test
push
mov
sub
jmp
neg
mov
lock
fld
punpckhbw
fiadd
movs
jmp
push
push
mov
and
(bad)
mov
xchg
push
test
test
shl
push
mov
out
inc
rcr
mov
mov
cmp
mov
lods
ud2
or
push
xlat
cmp
cmp
leave
push
push
loop
add
xor
jb
and
inc
ror
les
mov
cmp
cmp
mov
push
sub
nop
sbb
stos
je
data16
inc
mov
inc
dec
mov
dec
mov
aas
adc
jl
je
xor
inc
pop
sahf
add
out
repnz
ins
dec
into
add
jecxz
pop
pushf
inc
push
mov
iret
add
jg
pop
inc
sbb
call
cli
lods
lods
mov
cmps
aam
dec
lods
adc
popf
push
pop
pop
ds
dec
dec
sbb
pop
cli
xor
and
xchg
hlt
and
fnsave
out
iret
or
movs
in
cmps
ss
out
ret
xchg
out
pop
inc
xor
adc
push
pop
jno
inc
repnz
das
mov
int
imul
rcl
(bad)
jl
mov
push
aad
ret
sbb
test
xor
cdq
into
xchg
push
mov
mov
dec
cwde
pop
xchg
les
inc
adc
rep
loopne
xlat
and
idiv
retf
aas
or
sbb
cmp
inc
cli
div
xchg
(bad)
ds
sti
cld
out
mov
mov
mov
sub
mov
sbb
xchg
push
pusha
faddp
ds
mov
daa
jg
mov
loop
xchg
sahf
shl
scas
js
out
jge
mov
mov
mov
fcmovnb
out
scas
jle
call
jle
fild
es
adc
jp
fst
retf
arpl
mov
in
cmp
shl
cs
mov
test
sbb
out
in
pushf
movs
adc
inc
dec
adc
xchg
mov
push
sbb
pushf
mov
dec
ds
mov
push
dec
es
push
sub
nop
xor
dec
add
sbb
rep
fisubr
mov
add
ficom
mov
bound
mov
jge
push
xchg
clc
sbb
mov
in
into
bound
sbb
pop
cmps
inc
add
sub
(bad)
fisubr
call
cs
(bad)
pop
mov
or
mov
inc
fdiv
bound
add
mov
mov
sub
mov
addr16
aad
mov
mov
mov
push
pushf
push
sub
loop
ror
call
dec
jbe
pop
mov
(bad)
sub
fadd
add
jno
jmp
sti
sub
adc
rcr
mov
xchg
jmp
pushf
and
lods
rol
inc
fs
loope
mov
mov
loopne
arpl
cmp
jne
sub
cmp
iret
dec
lahf
sub
jnp
or
lods
add
xlat
data16
pusha
in
add
fs
shr
or
sbb
sti
jne
(bad)
test
adc
inc
repnz
dec
icebp
mov
jbe
mov
xor
ss
in
loop
sbb
and
and
popa
mov
push
add
adc
xchg
dec
pop
xlat
(bad)
out
loope
and
loop
mov
xor
movs
add
cmp
mov
test
sbb
idiv
jmp
pop
or
sbb
sub
xchg
mov
push
imul
mov
sar
fnsave
retf
repnz
ficomp
xor
inc
repnz
sub
mov
aad
jp
lahf
adc
pop
in
stos
add
mov
sbb
mov
pop
jb
mov
push
cs
add
ret
stos
aaa
ret
add
mov
add
or
rcl
(bad)
mov
sub
cld
push
mov
lea
jns
shr
jae
fs
cwde
(bad)
stos
sbb
pushf
js
into
shl
push
ficom
push
sub
test
mov
push
rol
das
aas
mov
pop
add
mov
sub
or
mov
adc
psrad
es
out
push
xchg
fld
in
cmp
movs
inc
inc
stos
(bad)
cmc
mov
push
push
arpl
rcl
xchg
test
enter
test
xchg
ins
xor
dec
cmp
jmp
push
leave
push
pop
repz
adc
or
jns
cmp
in
jb
add
cs
adc
mov
xor
(bad)
push
cld
xor
sbb
(bad)
rcr
outs
test
ins
test
lods
push
jl
add
gs
(bad)
ret
pop
bound
repnz
cmp
pop
adc
or
lods
mov
jg
repz
pop
(bad)
and
fist
ins
pop
loop
xor
add
rcr
scas
inc
call
pop
push
dec
pop
out
popa
out
leave
or
pop
adc
push
sub
test
lods
(bad)
into
inc
scas
push
mov
cmps
and
(bad)
loop
shl
call
ss
mov
lods
sub
mov
aaa
or
cmp
mov
inc
fdivrp
jmp
and
xchg
push
jle
add
jl
mov
xchg
inc
mov
rcr
sub
fist
pop
dec
test
cdq
sub
and
dec
sti
inc
cs
in
repz
mov
push
sbb
jnp
hlt
mov
es
adc
xor
fist
sti
mov
inc
mov
or
dec
jno
cli
aas
or
sub
adc
dec
xor
cwde
aam
test
mov
icebp
adc
(bad)
and
and
rcr
stos
xchg
mov
pop
movs
and
in
mov
cs
pop
imul
lock
and
mov
mov
lock
sub
pushf
push
or
jg
test
sub
loop
loop
in
dec
inc
lods
xchg
cmp
mov
jae
ins
pop
xor
xor
in
jl
jge
or
dec
mov
repnz
inc
mov
repnz
int
cmp
xchg
pop
into
call
pop
mov
daa
out
mov
fsub
inc
jmp
rol
mov
mov
lea
out
xor
mov
dec
daa
sbb
dec
test
and
out
mov
add
outs
fcmovne
and
(bad)
std
jecxz
lods
inc
imul
sbb
xchg
xchg
cli
sbb
mov
dec
je
addr16
mov
sbb
jne
mov
pushf
retf
mov
dec
and
push
repnz
lods
(bad)
lds
test
push
jmp
enter
lahf
int3
mov
ret
div
pusha
into
sub
push
push
jp
lods
mov
sahf
mov
lods
jb
sub
je
xchg
jecxz
mov
lods
mov
mov
mov
data16
or
sub
pushf
ss
and
cli
rep
xor
pop
push
jl
add
movs
xchg
bound
mov
xor
push
push
or
jp
jb
lahf
or
lods
pushf
xchg
arpl
inc
int3
rcr
xchg
push
xor
repz
lods
daa
sub
jl
mov
ret
fldenv
sub
lods
or
popf
adc
dec
pop
jmp
inc
pusha
inc
(bad)
in
mov
or
cdq
outs
pushf
dec
(bad)
loopne
das
pop
jo
call
mov
push
ficom
sbb
or
xor
shr
or
clc
pop
ja
sub
xchg
test
ret
nop
clc
rcr
xchg
xor
xor
bound
pop
mov
ds
pop
xor
mov
xchg
lods
ret
mov
mov
lods
(bad)
lods
icebp
sbb
mov
add
sar
int3
js
and
aaa
cmp
aaa
sti
xlat
dec
and
add
sub
test
aam
lods
std
mov
cmp
adc
or
jl
cmp
cli
cdq
and
int
test
int
std
ins
mov
and
jae
xor
cld
std
push
jo
xchg
ins
cli
mov
pop
add
mov
fbld
adc
cmp
adc
or
lods
pop
jne
or
sbb
ins
test
and
pop
push
dec
adc
mov
and
mov
hlt
ret
and
mov
fsubp
and
adc
scas
sar
inc
jae
popf
cmp
addr16
ins
call
dec
repnz
ror
rcr
jp
clc
jg
pop
sub
sub
stos
mov
mov
sbb
(bad)
xchg
sbb
shr
pop
mov
and
rol
(bad)
rcr
jl
cmps
mov
out
jecxz
cmps
jl
pop
push
xlat
and
cmp
cmp
fidivr
mov
out
adc
retf
js
lods
jb
bound
push
in
fdivr
push
or
jno
mov
add
mov
pushf
(bad)
sub
shl
sub
pop
jnp
add
popa
lods
mov
jmp
ret
sbb
inc
mov
out
mov
push
add
mov
pop
inc
add
stc
out
scas
mov
div
or
dec
imul
and
push
adc
mov
dec
retf
stos
cmp
adc
and
pop
pop
add
and
sub
xchg
mov
mov
out
outs
xor
pop
mov
out
mov
enter
in
cmp
idiv
xor
ror
pusha
jnp
ins
inc
jl
dec
ins
jmp
and
fdiv
fwait
adc
arpl
cld
ret
cld
retf
dec
mov
mov
push
aad
pushf
icebp
push
mov
repz
xchg
pop
mov
mov
pop
xor
fistp
push
int
push
sbb
mov
mov
mov
out
jl
pop
and
xchg
(bad)
jge
inc
outs
cmp
mov
or
mov
push
adc
pop
test
mov
jb
jmp
stos
aam
je
push
sbb
lahf
clc
sub
leave
pop
sbb
pop
adc
push
dec
imul
and
cmp
jo
data16
cmp
or
stos
and
ss
jbe
jmp
ret
das
jns
mov
pop
sbb
mov
daa
jns
in
loopne
and
cmp
retf
xor
std
add
jns
test
inc
fdecstp
aam
leave
outs
pop
and
mov
dec
mov
push
std
jae
dec
xchg
scas
shl
mov
jae
add
(bad)
push
in
mov
or
jnp
push
test
mov
sbb
sub
cmp
cmp
xchg
push
push
inc
jb
loopne
std
js
mov
idiv
mov
push
sbb
aas
mov
sbb
lea
xchg
adc
mov
dec
lds
retf
test
sbb
jg
add
push
mov
xchg
enter
mov
adc
mov
cs
adc
jnp
jae
fisttp
add
xchg
xchg
mov
je
sub
ret
or
xor
shr
xchg
clc
lods
jl
test
dec
xchg
fnstsw
test
outs
cld
adc
not
inc
sub
ficom
aas
adc
repnz
test
or
jmp
repnz
out
and
ins
cmc
sbb
enter
mov
push
jg
cmp
dec
mov
jae
jmp
pop
push
xor
and
sahf
rcr
ret
neg
test
mov
shl
push
arpl
ins
frstpm(287
leave
add
push
cmp
in
fld
jl
cmp
mov
push
mov
cmps
jl
ins
pop
mov
fsub
(bad)
in
xchg
mov
xchg
mov
jle
test
addr16
inc
or
in
xchg
inc
add
sbb
mov
scas
test
push
or
sub
push
xchg
addr16
xor
rcl
mov
or
fs
outs
sti
pop
hlt
jno
arpl
imul
jmp
add
jae
ins
nop
ins
inc
jl
xor
ret
ret
dec
sbb
(bad)
xchg
fcomp
xchg
push
jl
ret
push
stos
mov
push
xor
in
lahf
pop
dec
sbb
jnp
or
push
mov
ret
lods
inc
sbb
jmp
scas
ret
lods
into
mov
sar
add
or
je
mov
cmps
or
loope
jg
add
ror
in
mov
push
jnp
rol
push
pop
pop
(bad)
stc
cmp
dec
inc
int
pop
movs
sbb
xlat
int3
ss
fld
inc
call
das
fidivr
aam
push
sub
add
adc
scas
sbb
bound
jbe
cli
fdivp
dec
xor
push
push
in
mov
mov
mov
jnp
add
jl
lods
mov
sbb
jns
fucomi
cld
fldenv
inc
pop
test
push
or
mov
jl
out
sub
imul
pop
add
inc
bound
mov
bnd
xchg
mov
mov
adc
add
push
inc
mov
sub
retf
cmp
int3
push
mov
fisub
mov
xor
inc
clc
mov
and
stos
mov
dec
add
repnz
xor
ret
ins
inc
fsubp
fsubr
dec
cmp
pop
dec
(bad)
gs
sub
mov
imul
stc
(bad)
out
call
hlt
clc
ins
shl
repnz
push
dec
daa
aaa
iret
mov
stos
mov
aas
int
movs
shr
xor
adc
stos
pop
pop
dec
adc
fnstenv
arpl
fcmovu
adc
mov
es
retf
or
jbe
repnz
add
push
push
and
push
fdivr
cmp
sbb
mov
or
sbb
sti
je
ja
jl
add
jl
push
cld
sub
pop
jl
dec
jmp
inc
into
(bad)
fimul
fild
cld
push
jnp
cmp
xor
push
sbb
mov
jg
cmps
push
pop
pushf
imul
sbb
repnz
pop
dec
sbb
test
shr
int3
lods
inc
jns
gs
loope
lock
out
and
push
mov
retf
xchg
sub
aam
in
mov
mov
ror
dec
xor
fcomp
and
sub
out
add
imul
and
mov
jns
sub
xchg
sub
push
std
or
push
(bad)
mov
ins
inc
adc
mov
sbb
loope
aad
popf
fadd
jl
inc
leave
test
sbb
xor
xchg
or
xchg
xor
sbb
push
and
(bad)
(bad)
data16
rcr
retf
ror
jg
pushf
mov
out
and
push
xchg
jp
repnz
mov
rcl
mov
fadd
lds
sbb
mov
adc
inc
vpunpcklbw
or
loop
mov
adc
rcl
cmp
xchg
lods
test
cmp
dec
mov
mov
imul
pop
cmps
mov
movs
frstor
ds
fs
xor
jge
cmps
pop
es
mov
(bad)
cli
xchg
in
mov
test
mov
xor
movs
addr16
push
loopne
or
xor
cmc
lods
imul
add
aaa
je
add
pop
jo
inc
es
nop
fisubr
adc
push
sbb
das
mov
jg
adc
sbb
retf
iret
fcom
sbb
hlt
add
push
icebp
sub
add
hlt
fst
xchg
and
xchg
pop
mov
test
jmp
dec
adc
sub
pop
imul
mov
addr16
popaw
jg
pop
arpl
repnz
mov
call
inc
dec
jmp
rcl
cmp
pop
mul
mov
or
xor
add
popf
sub
fwait
std
dec
repz
xlat
push
pop
pop
aad
pushf
out
hlt
ins
shl
lahf
ror
cmps
retf
mov
js
push
ror
mov
retf
mov
mov
test
loope
stc
nop
int3
jno
cmp
fmul
or
sbb
dec
mov
xor
aaa
lods
mov
retf
mov
rcr
mov
adc
mov
js
scas
or
adc
inc
inc
mov
mov
push
push
repnz
mov
mov
out
and
rcl
lods
pop
cmc
mov
ds
inc
dec
mov
sti
jge
clc
dec
test
jmp
inc
inc
sbb
xchg
enter
ficom
and
xor
add
xor
lea
fst
or
dec
inc
outs
mov
(bad)
fcmovbe
ror
mov
add
mov
pop
fsubr
ror
dec
or
das
int
(bad)
dec
inc
and
gs
xchg
loopne
repnz
sub
mov
loope
ss
mov
mov
int
dec
ret
sbb
cli
fiadd
push
pop
inc
xor
add
push
xchg
sub
adc
int3
push
mov
add
leave
xchg
fsubr
inc
or
cmp
les
adc
sbb
pushf
lea
cmp
into
or
sub
in
retf
pop
hlt
gs
repnz
sbb
inc
stc
arpl
stos
mov
sub
and
ins
or
call
sbb
out
test
pop
cmp
push
mov
cmc
push
imul
pop
pop
inc
mov
jae
fsubr
cmc
jbe
lods
ret
jbe
sahf
sub
mov
fwait
jnp
popa
aam
jl
fimul
xchg
inc
int3
(bad)
mov
inc
dec
add
imul
cmps
in
xor
sbb
jmp
push
mov
dec
fnstcw
lods
add
inc
int
(bad)
dec
inc
xchg
xchg
les
sbb
aad
cmp
mul
push
add
adc
ror
test
imul
and
mov
mov
xor
adc
mov
retf
xchg
rol
pushf
jle
test
mov
test
lods
xlat
fst
inc
lahf
out
mov
cmp
pop
xchg
sbb
pop
push
fwait
push
hlt
in
dec
mov
xchg
retf
cld
sar
mov
jo
and
pop
dec
inc
xchg
pop
cmp
stos
out
add
rcl
in
cwde
shl
into
call
fdivr
mov
adc
pop
pushf
jae
push
add
pop
mov
inc
je
xor
outs
cmp
jo
les
jbe
in
sar
push
xor
sbb
jle
(bad)
jns
xlat
push
sbb
or
mov
mov
mov
lock
ins
fs
ret
cmp
cmps
mov
mov
daa
leave
sbb
push
pop
or
repnz
int3
lods
into
loop
mov
mov
mov
(bad)
and
loop
xor
mov
xor
push
push
fiadd
bound
(bad)
cmp
pop
add
add
sbb
fdiv
sbb
aam
out
cld
pop
mov
leave
dec
pop
mov
mov
repz
sub
ret
pop
push
push
lahf
shl
int
jae
sub
cdq
jo
jns
mov
int
cmps
push
out
mov
fisttp
enter
sbb
sub
fnstenv
in
pop
fdivr
fadd
mov
dec
mov
jge
adc
hlt
out
out
jnp
mov
scas
and
ins
mov
jnp
fistp
push
push
adc
lock
push
pop
pop
mov
jmp
out
push
stc
dec
or
ins
retf
inc
mov
pop
leave
addr16
push
pop
cld
ds
sub
in
pop
aam
mov
xor
and
in
adc
pop
data16
lock
mov
xchg
repnz
aad
(bad)
imul
add
dec
pushf
mov
dec
pop
hlt
jb
movs
ds
test
and
jecxz
stos
in
mov
int
pop
ds
xchg
loope
sub
push
xor
stc
jb
out
pop
cmps
mov
xor
rcl
cld
add
ror
into
test
outs
rol
mov
xchg
add
push
call
loopne
adc
hlt
dec
or
adc
add
cld
inc
mov
scas
mov
sub
jl
enter
add
jg
repz
sub
xchg
lea
dec
loope
mov
call
and
ficomp
mov
xchg
mov
mov
xor
fcmovne
dec
adc
je
jnp
push
rcr
jb
psraw
stc
int3
adc
inc
imul
stos
jecxz
in
enter
add
movs
stos
mov
sub
sub
mov
js
sub
addr16
mov
daa
sahf
or
adc
push
dec
jae
jo
mov
pushf
xchg
out
test
les
int3
cmp
add
(bad)
jnp
mov
cmp
pop
ret
ds
daa
xchg
inc
retf
mov
and
repnz
mov
in
mov
jge
mov
push
jp
cld
mov
xchg
mov
les
mov
test
in
rcr
(bad)
fisub
xor
push
lock
nop
rcr
loope
sbb
mov
pop
je
sub
ja
lea
int
jb
and
imul
xchg
cmp
out
inc
or
jne
dec
xchg
mov
xor
out
and
pop
pop
ins
pop
pop
daa
test
rol
or
hlt
sar
pop
fs
pop
inc
fidiv
mov
jae
loop
adc
inc
pop
and
mov
jnp
rol
stos
mov
or
mov
dec
jl
inc
jb
retf
sub
mov
popa
sbb
aaa
repnz
mov
jb
aaa
(bad)
xchg
sbb
xor
dec
sbb
sub
stos
add
mov
movs
es
clc
pop
jae
sub
push
and
test
mov
aad
xchg
xor
ret
cwde
and
push
add
aam
sar
sub
sbb
imul
int3
ret
and
sbb
xchg
(bad)
xor
push
arpl
and
popf
dec
mov
cmps
cld
cmc
add
js
mov
push
mov
out
sbb
test
hlt
outs
sub
ja
shr
push
mov
pop
lea
(bad)
in
xor
add
int3
jl
cmps
cwde
mov
or
mov
rol
jl
dec
dec
or
ds
ror
(bad)
sub
call
xchg
mov
mov
add
(bad)
adc
jae
and
xchg
inc
mov
repnz
loopne
std
mov
movs
ds
mov
inc
mov
inc
sbb
cmp
ffree
add
dec
stos
and
sbb
nop
inc
or
mov
imul
ror
jb
mov
mov
mov
pop
scas
(bad)
mov
test
shl
fild
outs
sbb
sub
cs
adc
nop
fsub
cld
sub
repnz
pushf
retf
adc
pop
adc
jge
add
push
jbe
adc
enter
ins
push
add
jge
mov
sub
and
pop
es
lods
aas
into
movlps
and
pop
imul
cmp
dec
jl
sar
push
mov
sti
std
ret
dec
out
pop
pop
add
test
mov
lods
and
ret
mov
cdq
(bad)
out
neg
cdq
jge
or
js
adc
or
je
nop
retf
cmp
sub
mov
retf
pop
xchg
mov
and
fwait
sub
pop
or
sti
mov
xlat
test
cmc
cdq
mov
mov
and
xor
sbb
pop
sub
mov
hlt
jmp
and
in
sub
cwde
es
mov
cs
fdivr
(bad)
(bad)
dec
mov
xor
xchg
pushf
mov
xor
cmp
inc
fcomp
mov
or
imul
pop
xchg
pushf
ins
jbe
jge
push
loopne
mov
xchg
push
loopne
imul
jecxz
mov
shl
mov
movs
ret
sahf
hlt
dec
cmp
mov
xchg
mov
out
and
pop
jl
dec
xor
fcomp
inc
dec
arpl
adc
cmp
xchg
(bad)
pop
cli
dec
jl
jb
ins
push
outs
xor
mov
or
lods
fs
pop
dec
xchg
fbld
ja
or
push
dec
cmps
ds
ror
cdq
jb
cmp
adc
add
fild
mov
xor
popa
push
call
dec
cdq
pop
pushf
mov
sub
sbb
or
stos
xor
xchg
jg
loop
(bad)
mov
sbb
je
cmp
and
jmp
out
iret
shr
cmp
rol
rcr
inc
push
pop
out
pop
jae
jo
ss
hlt
add
aad
jns
ins
push
xchg
call
rcr
mov
ret
cmp
sub
movs
mov
mov
push
push
inc
int3
mov
pop
and
arpl
inc
ins
push
je
frstor
and
xor
dec
ins
(bad)
cmp
adc
hlt
xchg
aam
xlat
cmp
adc
int3
mov
dec
pushf
inc
adc
popf
out
push
inc
sahf
lds
sbb
test
push
sbb
sbb
pop
cmps
pushf
popa
jmp
ins
nop
jb
or
mov
sbb
sar
ret
dec
mov
mov
adc
push
add
push
test
mov
jecxz
cmps
shl
sbb
fild
push
es
fyl2xp1
fisttp
int3
pop
arpl
mov
cmp
xor
xchg
xor
outs
cmp
xchg
inc
retf
xor
mov
ss
popf
adc
aad
jp
xor
or
push
dec
xchg
mov
add
or
ja
ret
jo
push
fidivr
retf
add
mov
lods
pop
jecxz
add
adc
outs
loope
mov
sub
sahf
adc
jnp
inc
add
inc
sahf
arpl
repz
push
sub
es
arpl
aad
pop
push
retf
dec
jbe
cmp
push
daa
fcom
xor
movs
jns
lea
sbb
jmp
(bad)
mov
xor
xor
sbb
push
mov
out
aaa
ret
je
add
das
jnp
jbe
adc
mov
retf
sahf
lock
mov
ins
test
or
sar
sar
dec
ins
fnstcw
and
call
loop
loope
jno
push
shl
dec
cld
xchg
xor
out
lods
stos
push
add
(bad)
dec
push
std
jmp
mov
inc
(bad)
cmp
cmp
xor
adc
and
push
pushf
mov
xor
lea
call
jge
mov
sbb
jbe
cmps
cmp
mov
aad
mov
test
xor
cmc
add
mov
in
jge
mov
arpl
adc
and
sub
push
cmps
jbe
in
mov
std
fst
fdiv
jb
sub
outs
bound
ja
dec
sbb
adc
push
clc
inc
sti
mov
aad
jmp
ret
das
sub
and
mov
sbb
and
nop
(bad)
movs
movs
xchg
mov
pop
push
jnp
dec
inc
loope
inc
sub
xor
in
pop
leave
sbb
(bad)
mov
rcl
in
fistp
push
sbb
dec
add
mov
jp
sub
les
or
mov
and
inc
fucomp
arpl
add
loopne
jnp
aaa
movs
js
mov
cmps
sbb
xchg
cli
sub
jg
aad
arpl
dec
pop
ins
sub
leave
jle
out
or
pop
or
adc
rol
push
push
fist
xor
cld
in
imul
or
lods
aaa
movaps
jp
sti
test
scas
push
mov
test
mov
inc
jge
fcomp
push
clc
cmp
pop
mov
(bad)
loop
out
imul
nop
es
cmp
jl
les
jg
cmp
in
and
shl
stc
pop
and
pop
out
cwde
shl
xor
cdq
movaps
lfs
lods
mov
pop
adc
jecxz
add
fcmovnu
inc
movs
mov
and
xor
in
mov
mov
push
cmp
call
push
stc
jmp
int3
ins
push
int3
lahf
stos
or
pop
iret
pmulhw
add
inc
pavgb
jle
loope
test
ja
lock
and
clc
or
add
cmp
mov
cld
fdiv
(bad)
jnp
loope
in
je
sbb
pop
in
aas
push
sbb
and
sub
enter
ins
xchg
jl
mov
icebp
mov
repnz
add
cmc
in
mov
(bad)
test
adc
mov
retf
dec
push
cmp
add
ret
jno
dec
xor
sbb
cmp
rcl
jge
sub
dec
shl
push
cli
xchg
outs
add
pop
std
dec
pop
lods
ins
ret
fiadd
loope
jmp
in
cmp
jns
inc
adc
ret
or
sub
dec
dec
iret
mov
fild
std
add
in
(bad)
push
mov
call
mov
jle
pop
or
pop
jmp
pushf
scas
hlt
jle
ret
in
test
mov
dec
cmp
push
sub
stos
inc
pop
mov
(bad)
std
add
push
xchg
in
(bad)
in
repnz
stc
ins
and
xor
adc
movs
or
imul
arpl
fcomp
or
adc
sahf
pusha
pop
addr16
xor
fistp
jp
add
dec
jle
loope
call
pop
adc
xor
pop
push
enter
dec
iret
movs
test
iret
xlat
test
sbb
inc
es
sar
and
jno
(bad)
in
jb
and
push
ins
int
lea
pop
or
add
cwde
call
not
mov
ret
pushf
je
mov
addr16
ds
aas
aas
int
jmp
lods
mov
bound
sbb
jo
sbb
scas
jbe
ror
sub
sub
int3
or
push
loop
loopne
mov
add
stos
cmp
stc
inc
add
xor
inc
aas
movs
dec
push
dec
mov
hlt
xlat
or
inc
xchg
sub
in
adc
dec
push
xor
jne
push
xor
push
jo
lods
ror
aam
mov
(bad)
cmp
data16
imul
xchg
aas
fnstenv
shl
dec
xchg
sub
in
popf
pop
aas
rcr
cld
mov
sbb
mov
adc
repz
fwait
jb
cmp
mov
or
or
(bad)
or
sbb
push
and
jl
fs
or
lock
or
sbb
das
xor
jecxz
and
sbb
or
dec
pop
cmp
sar
and
pop
(bad)
adc
xchg
xchg
mov
outs
jbe
pushf
pop
add
and
aaa
add
sahf
nop
dec
mov
mov
loop
paddb
jne
sbb
out
sub
fmul
xchg
adc
aad
xchg
sub
sub
addr16
and
movs
lods
mov
dec
sub
dec
loop
cwde
lods
loope
(bad)
int
sbb
imul
jb
pop
cmp
sbb
ins
xchg
mov
add
cmp
pop
push
push
stos
adc
jb
cmp
and
repz
imul
sub
popa
shr
jle
fwait
or
push
pop
jb
adc
nop
xor
sub
push
add
out
cmovge
movs
pop
pop
pop
sbb
inc
or
jle
int
pusha
sub
xchg
add
cmp
fsub
sbb
sub
jo
retf
jb
stos
dec
and
cld
sub
enter
xor
fst
nop
jb
xor
int3
and
shl
fdivr
jle
fbstp
xor
repnz
cmc
adc
cmp
call
sub
(bad)
sub
cld
test
xchg
mov
xor
add
shr
pop
and
add
jecxz
sub
jo
and
jl
icebp
outs
retf
inc
icebp
inc
repnz
std
sub
mov
(bad)
loopne
in
test
mov
cdq
jl
stos
test
push
shr
dec
xchg
bound
fsub
outs
cmps
xchg
ins
fiadd
and
mov
and
les
pop
push
push
hlt
xor
test
in
xchg
inc
mov
ins
adc
(bad)
imul
push
hlt
cmp
and
ror
cmp
fbld
mov
test
arpl
sbb
movs
dec
pop
mov
in
cmp
mov
movs
xor
and
popa
xchg
or
mov
jge
inc
jo
int
inc
mov
cmp
rcr
jl
jns
fsub
out
pop
dec
dec
(bad)
cmp
adc
in
push
or
cmp
pop
dec
pop
adc
sub
pop
xchg
xchg
out
mov
adc
jmp
mov
mov
das
sub
pop
cmp
xor
retf
push
mov
push
(bad)
mov
in
xor
jle
add
jb
aam
cld
adc
pushaw
push
adc
xchg
mov
dec
push
pop
xchg
xchg
or
and
in
pop
pushf
mov
retf
std
call
mov
sub
ret
inc
cld
xchg
mov
pop
or
mov
inc
pop
arpl
sub
in
ret
repz
mov
popf
sub
gs
call
dec
jb
cmp
push
ja
pop
pop
adc
ficomp
and
ror
mov
xor
xor
aam
adc
cli
jns
cmps
sub
cmps
repnz
stos
jnp
pop
lods
jbe
dec
xchg
xor
sti
(bad)
and
movs
pop
mov
fcom
mov
sub
bound
or
cmp
aam
jb
adc
movs
arpl
push
jp
cmp
xor
test
inc
sahf
ins
jmp
jmp
adc
push
push
shl
popa
mov
int3
push
mov
test
xchg
popf
xchg
or
in
mov
lods
mov
iret
jle
inc
dec
scas
hlt
jbe
mov
rcr
shl
adc
cmp
inc
pop
push
jmp
and
popa
mov
cmp
fdivr
ins
imul
inc
bound
jno
dec
push
xchg
retf
add
and
adc
int
(bad)
jne
rcr
bound
int3
arpl
xor
lock
push
cld
sahf
lahf
cmps
test
les
xor
fwait
and
push
push
xor
cmp
sub
and
jge
mov
mov
and
ds
repnz
ror
outs
pop
jmp
adc
ficom
leave
pop
cmp
(bad)
mov
mov
push
es
int3
repz
cmps
and
pop
xchg
ss
xchg
inc
push
ss
dec
repz
pushf
enter
sbb
xchg
mov
daa
xchg
xchg
mov
addr16
in
jecxz
or
dec
lahf
mov
mov
mov
rol
es
xor
xchg
xor
xchg
inc
jge
stos
fild
je
jnp
mov
cdq
dec
xchg
fidiv
xlat
cmp
mov
mov
xchg
xchg
ret
inc
jb
push
lods
int
sbb
mov
and
xchg
jle
dec
fistp
mov
mov
mov
push
(bad)
sub
add
daa
add
sub
xchg
pop
ror
sub
mov
or
ss
sub
fstp
pop
push
pop
mov
arpl
test
mov
and
inc
jne
dec
ds
push
dec
dec
ret
xchg
mov
and
mov
cwde
pop
retf
sbb
jb
scas
sbb
(bad)
inc
ins
(bad)
sahf
shl
adc
dec
stc
push
mov
adc
stos
iret
dec
loop
jecxz
cdq
pop
bound
nop
retf
imul
and
repz
ins
sti
pop
xor
cmc
fdivr
adc
jl
ret
adc
push
cmp
xor
icebp
mov
jecxz
in
in
mov
outs
mov
lods
adc
dec
rcr
fmul
xchg
inc
je
sbb
push
shl
stos
mov
sbb
iret
sub
cli
in
cmp
push
lods
(bad)
call
test
mov
push
jge
retf
cmp
cmp
xchg
push
pop
cmp
(bad)
leave
stos
xchg
aaa
mov
pop
jmp
out
mov
xor
pop
daa
cmp
shl
mov
rol
ror
xor
pop
jp
add
cmp
xor
in
adc
es
cmp
lock
shl
jecxz
frstor
mov
lods
pop
add
and
pop
mov
hlt
ins
mov
jo
in
inc
cmp
xor
bound
dec
pop
sti
frstor
bts
shl
cmp
dec
call
pop
adc
mov
push
test
or
ins
lods
js
cmp
fcomp
push
cmp
xor
jae
inc
cli
ret
ins
xchg
fsub
cdq
(bad)
fcomip
in
jl
ret
out
lock
or
xchg
sub
sbb
das
add
xor
lahf
mov
mov
scas
not
mov
lahf
xchg
mov
fidiv
sub
ror
push
jmp
in
cdq
pop
out
push
rcl
jbe
push
mov
cmp
push
sti
aaa
out
ja
fst
inc
enter
mov
dec
je
jo
shl
cmp
stc
stc
inc
pop
xchg
fld
scas
cli
mov
mov
cmps
cld
xor
or
xor
adc
pop
nop
retf
ds
add
rcl
inc
call
movs
sub
push
sub
mov
lds
repnz
(bad)
pushf
adc
jp
pusha
push
stc
hlt
and
push
sub
mov
das
sub
sbb
(bad)
fcomp
xlat
add
inc
and
cmp
and
mov
mov
mov
fnop
cmp
dec
jmp
pop
add
jae
xchg
or
dec
sahf
push
or
mov
pusha
popa
neg
mov
inc
mov
and
rcr
sub
lods
dec
mov
xchg
jns
cmc
adc
push
popa
not
fcomp
out
fldcw
mov
cmp
(bad)
fld
push
adc
and
gs
es
sub
outs
pop
inc
call
jnp
push
pop
enter
and
retf
ins
jge
ret
and
mov
mov
pushf
fs
lea
ss
outs
add
in
mov
mov
adc
(bad)
dec
adc
jl
ror
mov
(bad)
rol
push
repz
pushf
pop
pop
and
mov
mov
dec
cmp
dec
add
dec
int
pop
out
push
aas
or
mov
int3
push
jg
dec
popa
xchg
or
sbb
cld
inc
pop
push
xchg
pushf
ja
mov
dec
jp
das
adc
jb
stos
xor
sbb
test
push
loope
fldenv
test
xor
pop
sti
mov
jno
cmp
adc
inc
or
and
sub
test
jl
inc
ins
arpl
push
fist
inc
jb
xchg
pop
mov
xchg
mov
retf
xor
out
arpl
in
gs
in
inc
or
mov
lods
pop
jmp
lds
sbb
and
or
int3
and
inc
adc
sar
ret
and
std
outs
adc
pop
adc
loopne
jle
jmp
jecxz
(bad)
loopne
call
pop
fidivr
sub
mov
ss
jo
sahf
out
xor
ins
dec
push
clc
(bad)
(bad)
ret
shr
test
loop
fcomip
jbe
cmp
int3
(bad)
int
mov
(bad)
cli
aaa
cmp
inc
call
call
test
sbb
rol
shl
mov
sub
sbb
bound
hlt
scas
pop
push
mov
ja
int3
sub
sub
inc
int3
ret
int
mov
lods
sub
ret
in
mov
data16
into
mov
mov
out
jle
xor
mov
or
add
mov
mov
mov
ficomp
test
sub
adc
cmc
in
sahf
sbb
popf
adc
out
jg
sub
sub
aam
adc
push
scas
mov
sbb
mov
cld
sub
and
adc
pop
addr16
jo
sub
cmp
or
ret
scas
xor
cs
mov
and
(bad)
mov
aas
mov
add
add
adc
cld
add
movs
sbb
cmp
mov
add
add
add
cmp
jmp
retf
pop
ds
popf
xchg
fstp
adc
pop
imul
push
push
stos
mov
in
xchg
dec
jb
repnz
sub
xor
xchg
add
sti
jae
sub
add
mov
cmp
xchg
(bad)
cmp
mov
xor
push
jne
sbb
fsubp
push
inc
ins
test
(bad)
fadd
fsubrp
jns
mov
and
enter
xchg
push
mov
inc
xor
push
add
mov
cmp
jb
les
or
stos
jmp
jp
jae
sub
je
jno
and
in
shr
test
pop
inc
xor
cmp
loope
imul
xor
push
pop
sub
ins
mov
and
inc
sub
mov
mov
and
mov
loop
call
sub
or
ins
jae
repz
inc
popf
mov
adc
mov
and
iret
cmps
jno
dec
fsub
popa
ret
dec
xchg
push
push
lods
cwde
cmp
call
(bad)
je
dec
or
ret
mov
add
jbe
dec
jb
call
loop
je
repnz
imul
(bad)
or
pop
jl
mov
lahf
adc
jns
xchg
pop
sbb
lea
hlt
mov
cld
gs
jecxz
retf
xchg
sbb
jl
push
repnz
repnz
mov
cld
xchg
mov
hlt
outs
jmp
mov
push
in
push
and
imul
in
sbb
aaa
pop
mov
mov
add
jmp
test
sbb
mov
mov
sbb
repnz
dec
repnz
dec
std
mov
cli
push
sbb
in
(bad)
xlat
pop
bound
xor
int3
mov
cmp
or
pop
hlt
xchg
mov
and
inc
sar
jle
call
mov
xor
(bad)
shl
bound
sahf
pop
stc
push
inc
(bad)
dec
rcl
cmc
imul
mov
into
xchg
loop
add
hlt
imul
jg
hlt
and
and
dec
repz
stc
jno
mov
xor
adc
fsub
test
cli
icebp
mov
pop
mov
push
push
and
push
or
mov
pop
call
mov
add
jae
cs
bound
push
(bad)
push
ds
in
shl
push
inc
enter
jno
jmp
jb
jns
dec
stos
sbb
fnsave
je
inc
js
adc
inc
leave
cmps
or
and
inc
lods
dec
and
add
push
mov
call
mov
pop
push
and
bound
xlat
inc
sbb
out
std
add
mov
aaa
mov
mov
in
in
fisttp
inc
dec
jnp
jbe
js
xchg
sbb
bound
retf
xchg
cmps
shl
test
cmp
ins
scas
sahf
or
inc
sub
ret
aas
jle
push
xchg
test
push
lods
dec
(bad)
adc
fwait
and
jge
cli
sbb
shl
cmp
ret
fwait
aam
aam
jno
push
jns
push
inc
mov
jg
xchg
pop
std
not
addr16
dec
jno
imul
or
nop
clc
ret
or
out
ret
ins
dec
pop
je
add
pop
les
mov
push
lahf
sbb
clc
sub
stos
ret
dec
sbb
sub
add
push
sbb
xchg
hlt
test
shr
jno
ins
or
dec
test
jmp
std
jecxz
hlt
lods
into
pop
sar
pushf
int
sub
iret
mov
ins
das
popa
(bad)
js
movs
pop
ret
ret
pop
shl
addr16
sbb
cmp
pop
loop
inc
lea
jl
pushf
inc
dec
jnp
pushf
cmp
xor
loope
lahf
lds
adc
pusha
cmp
mov
jg
outs
stc
neg
mov
mov
es
mov
push
fldenv
jne
loop
arpl
ja
or
xor
fimul
jne
or
jmp
cmc
mov
sahf
clc
ins
mov
sub
inc
loop
adc
test
add
cmp
clc
mov
dec
pop
and
pop
cmc
leave
xchg
mov
push
ret
in
add
mov
fst
pop
loop
call
aas
imul
fwait
push
and
or
and
and
retf
or
ret
fidiv
in
jo
or
dec
imul
mov
in
sub
sbb
popf
shl
ins
mov
add
mov
or
loop
fst
scas
nop
dec
std
test
out
mov
xor
dec
scas
jp
jmp
mov
retf
loop
mov
repz
je
(bad)
ds
test
pop
sub
jge
cmp
movs
xlat
into
std
add
imul
add
sub
lods
push
lock
jp
pop
inc
test
sub
pop
push
js
int3
out
lea
push
adc
ins
bnd
inc
xor
mov
mov
into
dec
add
jle
ror
pushf
sub
push
push
lds
es
add
sub
mov
xor
sbb
sub
hlt
and
(bad)
push
pop
call
(bad)
xchg
int
dec
cli
sbb
sub
out
je
arpl
add
rcl
add
push
push
icebp
mov
imul
pop
xor
(bad)
(bad)
sbb
mov
adc
push
xor
aam
std
adc
repz
mov
xor
sbb
jne
add
cmp
and
push
inc
rsqrtps
mov
jmp
sub
sub
xor
add
ja
or
cmp
loop
test
or
mov
std
stc
xchg
pop
jb
or
jo
xor
push
xchg
lahf
and
inc
icebp
push
fcom
fstp
or
inc
jmp
aad
xchg
lods
pop
das
call
mov
jb
ret
repz
add
movs
pop
out
add
jne
pop
fadd
inc
pop
loopne
mov
push
sahf
les
cli
adc
jp
clc
popf
xor
gs
out
jmp
fst
outs
mov
mov
shl
das
loope
push
stos
mov
pop
repz
popf
xchg
xor
adc
lds
shr
cs
jg
mov
mov
sub
pop
or
cwde
cld
and
movs
xor
pop
sbb
dec
or
or
les
dec
mov
std
mov
loope
pop
push
out
and
out
add
dec
aas
sub
pushf
es
inc
cmp
xchg
fstp
rcr
dec
shl
bound
and
imul
and
pop
movs
clc
xchg
adc
loopne
mov
xchg
mov
movs
add
div
jb
inc
dec
pop
fcomip
jno
and
dec
inc
repz
cli
pop
inc
adc
push
mov
fimul
(bad)
arpl
xor
and
ror
sub
pusha
cmc
int3
add
mov
test
hlt
addr16
retf
int
addr16
sbb
loop
pop
add
mov
(bad)
mov
retf
div
bound
dec
and
ret
mov
in
and
inc
xor
cmps
leave
adc
and
push
frstor
int3
jg
iret
adc
cmp
xor
ret
ja
sub
dec
mov
shr
jmp
mov
fnsave
xor
xchg
jb
shl
xchg
xlat
pop
ret
adc
pop
push
dec
fdivr
int3
out
cmps
stos
rcl
icebp
fstp
ins
add
sbb
andps
xchg
f2xm1
dec
mov
sbb
rcl
sub
jle
les
pop
pop
mov
inc
call
mov
inc
das
and
test
in
and
or
cld
sahf
dec
dec
std
and
jecxz
fs
ds
xor
push
data16
mov
or
inc
mov
mov
icebp
out
jb
fyl2xp1
popf
mov
ret
jge
sub
jg
(bad)
imul
push
jb
movs
hlt
rol
stc
sbb
cmp
mov
inc
std
fidivr
ret
adc
in
popf
scas
lahf
xor
sbb
xlat
mov
inc
push
sbb
ret
cs
mov
loop
push
hlt
test
jge
loop
movs
loop
ffree
push
push
hlt
adc
inc
xor
inc
mov
sbb
fsub
int3
mov
mov
sbb
xchg
mov
mov
and
(bad)
movs
icebp
leave
jmp
ins
xor
sub
outs
test
data16
sub
mov
or
jmp
jge
and
cmc
sbb
push
out
jne
cmp
div
(bad)
outs
push
inc
mov
jg
or
mov
lahf
mul
xor
fisttp
sar
or
cmp
repnz
inc
shr
out
and
loop
xor
fcmovu
loop
ja
mov
and
mov
sub
pop
fsubr
pop
jp
fnstcw
add
idiv
(bad)
aam
add
movs
(bad)
(bad)
and
loop
scas
outs
pop
and
(bad)
jg
or
cmc
das
jge
sti
xchg
mov
xchg
addr16
retf
paddw
ret
xchg
lods
adc
mov
loope
push
dec
push
std
ja
call
jo
jg
mov
stos
outs
retf
xor
test
gs
aad
bound
pop
sbb
cmp
lods
call
pop
mov
in
mov
retf
adc
int
jb
ins
outs
pushf
(bad)
clc
sub
xor
cwde
outs
in
int3
loope
ret
out
leave
mov
jno
loope
and
jl
int3
repnz
mov
inc
ins
out
sub
xor
push
dec
or
push
push
sub
add
aam
add
xchg
fild
jp
hlt
dec
cmp
in
xor
in
sub
sbb
aas
jl
mov
lods
nop
fadd
jnp
rcr
push
loope
aaa
mov
test
sub
int3
adc
pop
ret
jmp
(bad)
sar
dec
mov
call
adc
dec
jmp
sbb
or
mov
sbb
inc
inc
inc
mov
ud0
movs
mov
popf
sahf
in
adc
add
dec
fdiv
outs
jl
clc
pop
ret
jle
ret
les
test
rcl
adc
xchg
data16
ret
ins
push
sbb
or
outs
data16
mov
or
int3
inc
xchg
and
je
ficomp
cmp
sub
pop
push
jb
jge
push
not
and
jne
iret
push
inc
hlt
int3
fdiv
aas
lods
pop
jmp
inc
mov
retf
inc
mov
sub
adc
std
int3
dec
repnz
and
push
jp
out
mov
add
ins
push
icebp
ret
pop
adc
bound
out
outs
in
mov
div
repz
xchg
aas
fiadd
sti
out
sub
popf
dec
jle
push
or
mov
mov
push
sbb
jbe
lods
int3
sbb
iret
je
bound
inc
push
push
jb
lods
or
arpl
push
xor
les
and
imul
mov
mov
push
ror
lock
lea
test
test
in
pop
repz
add
call
lea
icebp
call
jg
pop
or
lods
stos
cmp
mov
jl
cmp
adc
push
stc
ja
popf
mov
int
imul
inc
add
pop
push
lds
gs
leave
popf
and
and
outs
adc
cmp
jmp
(bad)
fwait
mov
sti
or
add
mov
or
fwait
jmp
add
mov
inc
or
ins
xchg
test
outs
into
cmp
les
push
pop
fsubr
enter
mov
push
mov
ret
mov
(bad)
call
pop
mov
es
fadd
jecxz
(bad)
push
add
mov
push
add
aas
sub
pop
dec
jns
(bad)
into
sub
dec
mov
sub
jge
jmp
and
or
std
int
dec
setb
in
mov
mov
and
xchg
push
or
fnstcw
sub
ss
int3
and
scas
repz
cmp
mov
mov
sub
sub
inc
mov
arpl
push
scas
add
or
test
out
mov
std
idiv
mov
imul
ins
dec
aaa
xor
cmps
sbb
stc
fdiv
adc
lahf
(bad)
jo
mov
lock
adc
rol
mov
xor
and
pop
cmp
push
push
clc
mov
sbb
mov
scas
cmp
fst
xchg
mov
push
das
jnp
dec
mul
xor
xor
dec
mov
sahf
dec
dec
ret
cmps
fwait
call
sub
leave
(bad)
xlat
fdivr
mov
push
mov
xchg
cmp
cmp
xchg
xchg
fidivr
scas
shr
sbb
adc
sbb
dec
mov
cmp
mul
jo
stc
sbb
jo
in
shl
aas
xor
movs
sbb
jbe
aas
inc
add
push
into
ins
loope
mov
sbb
repnz
and
pop
push
dec
sbb
scas
push
xor
cmp
or
pop
aas
(bad)
rcl
push
dec
jle
outs
clc
enter
mov
add
fimul
mov
fistp
cli
cmp
lfs
and
cs
neg
fadd
jecxz
push
stos
movs
adc
add
test
daa
adc
add
pop
add
dec
mov
inc
pop
inc
call
cmp
pop
int3
pop
pop
aas
mov
mov
sub
push
xchg
scas
add
jmp
push
es
test
dec
sbb
jecxz
jns
mov
fbstp
sbb
and
outs
cmp
lods
pop
adc
clc
push
ja
imul
adc
in
sbb
loope
or
or
and
xor
push
and
scas
nop
ret
ds
jle
add
jmp
in
repz
test
sbb
aas
out
in
adc
arpl
mov
jb
sbb
lock
sub
pusha
jmp
pushf
pop
arpl
mov
js
in
cmp
and
int
xchg
adc
xor
jge
jns
rcr
jb
inc
repz
icebp
(bad)
shl
aam
xor
xchg
test
adc
inc
jmp
or
aam
push
push
fist
inc
mov
add
ds
ss
dec
arpl
call
jb
mov
add
push
xor
xchg
shr
daa
retf
pusha
sar
sub
jns
repnz
push
movs
and
dec
xchg
or
xor
cmp
push
push
mov
and
sub
(bad)
pop
aam
jbe
pusha
ins
or
das
mov
fldcw
and
rcr
dec
jecxz
icebp
inc
mov
inc
xor
cmp
cdq
sbb
jmp
or
pusha
movs
fadd
repnz
push
pop
sbb
int3
nop
lds
lock
int3
not
in
push
mov
cdq
aam
inc
jo
pop
js
scas
mov
pop
stc
cmp
adc
sub
sub
imul
jmp
(bad)
outs
xor
inc
dec
mov
adc
push
lods
or
xor
mov
mov
jmp
lds
pop
mov
xchg
retf
mov
in
into
xor
ins
dec
jle
push
or
dec
loop
bnd
test
aas
pop
inc
pushf
into
aad
sbb
cwde
in
pushf
fs
imul
stos
popf
mov
leave
out
cmp
jne
in
sub
or
jmp
enter
pop
add
and
mov
pop
cmp
jecxz
sub
js
xor
rol
jnp
into
mov
jne
or
outs
add
pop
fnstenv
retf
jne
dec
dec
push
or
push
lahf
ds
movs
xchg
or
std
jb
ins
sub
out
cli
sub
pop
push
cs
add
and
pop
into
adc
jle
out
mov
vxorps
inc
stos
sbb
je
pop
mov
adc
gs
jle
rcr
mov
sbb
shl
cmp
mov
fs
dec
ret
enter
pop
adc
xor
repz
add
pop
std
and
mov
mov
and
clc
cmp
(bad)
call
or
pop
jl
jl
sub
xchg
push
int
mov
(bad)
loop
imul
inc
cmp
mul
pop
pushf
ret
cmp
ret
ret
sub
neg
xor
xor
jmp
repnz
jmp
lahf
xor
jb
xchg
test
daa
data16
pop
mov
or
cmp
sub
pop
mov
pop
mov
int
push
pop
loopne
dec
rcl
pop
and
lahf
sub
push
outs
or
xchg
adc
cmp
out
sahf
shl
dec
mov
push
mov
popf
dec
xor
mov
fidivr
inc
repz
mov
out
cmp
pop
dec
sub
lods
pop
mov
fwait
sub
cmp
lods
iret
test
push
inc
test
int3
jl
inc
es
push
push
jb
(bad)
lds
(bad)
sbb
stos
mov
cmc
lock
loopne
mov
test
(bad)
sub
lea
sbb
xchg
sub
adc
scas
sbb
xchg
scas
or
pop
push
jle
dec
jl
pop
int
or
dec
push
mov
mov
lds
scas
inc
mov
repnz
outs
push
push
jl
dec
xor
mov
push
jb
hlt
cmp
mov
(bad)
movs
out
xchg
pop
outs
sub
outs
(bad)
cs
das
mov
fwait
and
std
ss
clc
bound
or
mov
xchg
jmp
lea
mov
mov
mov
imul
shl
out
(bad)
(bad)
xchg
sbb
push
adc
out
pushf
sbb
sub
pop
add
dec
pop
sub
or
jb
sub
xor
icebp
sbb
push
sahf
nop
cmps
jmp
iret
cmp
adc
(bad)
xor
and
jg
pusha
jns
cmp
mov
(bad)
xchg
mov
ins
sbb
dec
push
iret
int3
bound
xchg
fnsave
(bad)
dec
mov
(bad)
cdq
push
cmp
ins
jo
xor
dec
fmul
lods
sbb
lds
imul
adc
xchg
mov
dec
pusha
mov
cdq
xchg
sbb
mov
sbb
out
loop
xchg
pop
fwait
and
sub
mov
jle
into
repnz
sbb
int3
js
or
hlt
or
ins
retf
aam
sahf
sub
jb
jno
in
aam
and
jl
cwde
retf
ret
in
cmp
sub
(bad)
xchg
loopne
imul
pop
adc
cmp
mov
add
imul
jno
cmp
repz
mov
mov
ins
mov
mov
and
or
dec
sub
fsub
aam
mov
mov
inc
xchg
push
ss
dec
inc
lods
and
adc
dec
fcomp
adc
arpl
jp
outs
or
sub
mov
into
pop
mov
push
mov
push
(bad)
sahf
xchg
mov
cmp
fsubr
jle
adc
sub
cdq
mov
adc
cmps
inc
sahf
repnz
test
adc
je
adc
inc
or
cli
lods
add
out
fist
(bad)
xlat
mov
(bad)
dec
clc
fisttp
add
jmp
lock
mov
int
call
pushf
test
add
dec
pop
mov
std
popf
shr
ds
outs
jge
mov
ret
bsf
outs
div
xchg
pop
sub
xor
mov
xchg
test
dec
lods
imul
push
rcr
cmp
dec
xor
movs
cld
mov
sahf
cmp
out
add
fisub
sub
add
mov
out
dec
aaa
int3
pop
dec
pop
stc
aam
lds
repz
xchg
dec
fistp
scas
fnsave
leave
xor
(bad)
cmps
and
dec
adc
call
pusha
pop
mov
scas
cmp
dec
mov
cs
xlat
sbb
retf
xchg
cmp
lds
and
push
shr
mov
(bad)
or
test
mov
and
mov
mov
or
push
xchg
pop
mov
lods
sub
push
and
add
repnz
cmp
pop
jle
jge
lock
jp
add
popf
mov
jae
lods
lea
out
sub
and
test
out
icebp
mov
cmp
out
sub
scas
test
dec
ins
inc
int
retf
push
mov
cmps
std
cwde
std
stc
mov
leave
lea
jbe
pop
dec
adc
outs
mov
fsubr
mov
rcr
inc
in
fnstsw
pop
pop
and
dec
shl
mov
push
shl
cwde
enter
mov
cld
stc
test
cmp
adc
jno
pop
or
mov
outs
sbb
jecxz
adc
dec
lahf
adc
xchg
or
adc
jbe
loope
sub
inc
and
mov
adc
xlat
pop
dec
retf
jb
imul
add
push
lods
lea
xchg
rol
cs
dec
adc
add
and
fcom
mov
pusha
cwde
out
retf
fiadd
repnz
inc
sbb
adc
jmp
jecxz
jecxz
(bad)
scas
popa
push
aad
(bad)
iret
daa
push
es
ds
rcl
mov
ror
mov
jge
mov
mov
dec
or
push
idiv
xor
ret
sub
or
mov
push
xchg
push
push
aaa
xor
sub
dec
pushf
push
cmps
lods
bound
adc
mov
les
arpl
sbb
dec
in
lahf
cwde
int3
cs
mov
xor
and
outs
adc
in
into
loopne
and
gs
add
stos
cmc
push
xchg
fistp
in
or
add
hlt
ins
add
xor
hlt
loop
pop
call
cdq
xchg
jo
or
inc
jle
xchg
add
push
inc
fnstcw
test
jo
and
ror
(bad)
dec
or
bnd
xor
push
inc
or
mov
push
sub
inc
leave
and
and
and
pushf
jb
mov
mov
mov
sub
cmp
mov
add
mov
xor
mov
jmp
push
xor
jl
jns
jmp
sar
repnz
xor
push
jb
repz
jle
in
lods
stos
jecxz
test
mov
sqrtps
test
push
push
adc
in
in
mov
int
jae
or
ds
bound
pop
xor
push
xchg
sub
xor
adc
jbe
push
jmp
ins
or
mov
push
(bad)
in
push
dec
aam
repz
mov
sbb
dec
sbb
and
imul
adc
dec
lods
xor
jge
pop
cmps
sub
lods
or
jp
adc
inc
imul
xor
or
mov
addr16
push
enter
sub
mov
xchg
dec
jg
jg
or
imul
cmp
inc
sub
call
retf
jge
inc
rcl
clc
(bad)
cmp
push
mov
test
cmps
inc
push
or
into
pop
mov
inc
add
cmp
rcl
out
fcomip
das
in
pop
sar
stos
daa
sub
sub
adc
mov
sbb
push
mul
test
(bad)
ficomp
(bad)
loope
push
or
pop
mov
inc
inc
les
ds
cmp
xchg
(bad)
int3
push
or
jbe
add
popf
stos
clc
jnp
xchg
(bad)
mov
jnp
mov
les
add
pop
pushf
sub
std
add
out
sbb
out
mov
and
xor
add
jnp
inc
outs
mov
mov
sar
loope
or
ins
cs
and
hlt
pop
fiadd
push
pop
add
mov
enter
push
stos
into
into
adc
push
cwde
add
cld
aas
push
fdiv
lods
out
jbe
dec
inc
mov
repnz
dec
shr
ret
int3
mov
jg
into
pop
or
mov
mov
lods
inc
adc
int3
mov
rol
add
sbb
in
fcomp
mov
mov
cld
loop
jge
ret
ins
xor
mov
cmp
scas
push
pop
cmps
adc
inc
ror
mov
ret
mov
push
xchg
jbe
outs
cmp
or
sbb
mov
sbb
mov
mov
add
add
sub
pop
aaa
dec
inc
sub
adc
test
lods
in
aas
(bad)
cmps
xchg
out
mov
push
xlat
sub
or
pop
jae
sub
pop
loope
popa
out
shr
aas
bound
cmp
inc
push
xor
call
enter
mov
pop
(bad)
mov
adc
stos
(bad)
fmul
sbb
test
fdiv
int
repnz
and
mov
or
cli
lock
cld
push
mov
jmp
bound
mov
ins
daa
inc
jns
icebp
mov
repnz
cmps
inc
lock
mov
sbb
xchg
pushf
xchg
pop
lds
sub
mov
xchg
pop
(bad)
mov
fs
iret
sub
fmul
inc
dec
xor
add
(bad)
not
and
lea
xchg
enter
jmp
push
sub
bound
mov
or
out
cmp
mov
sbb
fnstsw
ins
dec
push
jp
shl
iret
dec
push
inc
push
cmp
adc
jns
jb
pop
out
xor
sbb
data16
call
xlat
retf
push
aam
push
test
jno
repz
shr
in
pop
pop
(bad)
mov
jmp
or
lods
mov
mov
fs
mov
add
outs
les
xchg
mul
in
sbb
rol
mov
mov
jne
xchg
call
jnp
cmp
retf
xchg
imul
xlat
int3
sbb
jl
pop
jbe
inc
fimul
ja
dec
pushf
xor
sub
adc
test
jnp
pop
jecxz
cmp
mov
or
mov
xor
rol
cmc
(bad)
mov
dec
mov
jp
sbb
lods
les
or
mov
add
stos
addr16
loope
xchg
or
cwde
xor
rcl
not
push
loopne
push
push
ja
jne
mov
rcr
add
or
fs
repz
add
inc
xor
sub
xchg
test
bound
retf
std
aad
cs
test
ss
xchg
cmp
or
xchg
jno
out
rcl
js
pushf
data16
gs
out
xor
pop
add
lods
(bad)
mov
imul
mov
and
adc
add
inc
mov
dec
push
jmp
iret
lock
add
jnp
retf
out
push
dec
add
xchg
xor
mov
xchg
loopne
scas
sub
cs
or
movsx
aad
sub
sbb
inc
bound
or
jns
mov
cli
and
inc
aad
pop
retf
bound
cmps
push
push
scas
inc
or
cmp
data16
fstp
je
lds
cmp
add
aam
out
xor
lds
into
and
xchg
inc
pop
mov
cmp
mov
push
jb
add
xchg
add
mov
aam
and
repz
mov
icebp
in
sub
fsubr
lds
mov
into
add
xor
push
(bad)
hlt
mov
enter
(bad)
sbb
xchg
mov
loop
fisttp
loope
imul
fild
jp
aad
(bad)
lods
mov
jl
lods
mov
dec
shl
push
pop
(bad)
push
mov
or
ins
mov
ret
popf
test
pop
ret
mov
loop
mov
mov
cmp
nop
ret
test
or
adc
mov
xor
xor
xlat
and
clc
int3
xchg
cmc
repnz
xchg
cld
mov
mov
dec
ds
jae
add
in
in
sub
mov
mov
sbb
out
add
lahf
xchg
sbb
sbb
scas
fadd
xor
push
lods
repnz
xor
call
pop
push
mov
dec
jmp
xor
jmp
push
sbb
addr16
pop
and
sub
xchg
add
sub
and
adc
fwait
fs
(bad)
jg
sub
je
lock
pop
fnstsw
mov
adc
loope
add
lods
retf
pop
leave
aas
out
mov
mov
div
xchg
iret
imul
push
sbb
jbe
push
out
rcl
add
sbb
out
inc
shr
cmps
pushf
retf
mov
inc
mov
inc
push
enter
pop
lods
popf
ret
in
ret
lock
mov
bound
inc
push
cmp
pop
jg
sub
push
mov
ret
scas
push
lahf
inc
jnp
mov
push
arpl
sub
cmp
in
leave
xchg
iret
test
cli
sub
jg
(bad)
xchg
dec
push
ins
arpl
out
stos
inc
pop
adc
jmp
icebp
lahf
adc
push
pop
(bad)
adc
mov
inc
adc
fs
iret
cmp
daa
mov
clc
xchg
into
ins
dec
cmps
mov
adc
add
ins
jne
ja
jbe
jo
repnz
in
test
mov
sti
dec
es
je
xor
scas
mov
add
stos
xchg
call
dec
jp
ror
pop
xchg
push
lods
add
sub
dec
aad
lock
std
popa
popa
(bad)
dec
sbb
ds
xchg
push
data16
inc
cmp
mov
lods
(bad)
pop
add
mov
cmp
dec
ret
cmp
jno
ret
out
jae
adc
icebp
inc
or
outs
push
pop
fadd
or
imul
sub
jge
mov
push
sub
xor
arpl
lock
mov
xchg
lock
loopne
fucompp
xor
ins
cmp
and
sbb
xchg
dec
cmp
outs
push
ins
ret
mov
ins
xchg
in
ds
std
sbb
and
pop
inc
div
repnz
mov
pop
pop
push
add
and
rcl
mov
inc
sbb
dec
mov
xor
sbb
inc
stc
inc
out
mov
pop
arpl
or
aas
push
inc
add
push
std
inc
mul
mov
cmp
lods
xacquire
jbe
popf
xor
and
dec
mov
sahf
sbb
sbb
and
adc
dec
xchg
sub
enter
or
pop
cmp
xchg
fcom
push
mov
jmp
shr
int
mov
mov
inc
loop
adc
iret
jmp
pop
pop
mov
movs
inc
paddd
mov
(bad)
aaa
bound
cmps
xchg
sub
test
fst
stos
inc
xchg
(bad)
ds
inc
in
cwde
pop
pop
call
add
mov
push
sbb
rol
mov
cdq
adc
aam
ins
call
arpl
jb
cmp
int
das
xor
sar
xchg
pop
add
and
dec
or
jge
mov
jp
push
inc
fwait
add
arpl
in
mov
push
sbb
xchg
push
add
jle
dec
jl
or
mov
in
add
push
cmp
sbb
cld
bound
push
adc
mov
push
(bad)
cld
repnz
(bad)
nop
aas
inc
sub
sbb
pop
ror
bound
or
imul
hlt
in
retf
mov
pop
sbb
sub
mov
inc
jo
adc
outs
rcr
inc
cld
jb
mov
push
mov
add
xchg
dec
mov
pop
sub
cmp
xor
and
cmp
push
push
(bad)
and
and
ret
call
add
pop
adc
cmp
loop
arpl
dec
loope
daa
inc
arpl
inc
fnsave
into
push
xor
cld
jae
call
adc
ret
jge
fcom
sbb
dec
hlt
sbb
pop
mov
fnstcw
and
sub
rcr
js
jl
popf
pop
mov
cmp
jb
ret
out
adc
push
outs
jle
jb
(bad)
in
div
stos
adc
cmps
jecxz
or
pop
xchg
mov
cld
mov
xor
lea
outs
sub
pop
pop
repz
fidiv
popf
fucomip
or
jmp
loopne
cmps
jbe
int
inc
(bad)
test
xor
jge
jmp
inc
pop
pop
or
loop
ja
js
fmul
jmp
movs
jb
stc
jp
out
sub
jnp
cmp
and
ss
mov
dec
cmps
movs
or
push
call
cmp
lods
(bad)
cs
add
mov
loope
sub
sahf
fisttp
shr
xor
or
mov
cs
cmps
in
or
ins
in
sub
dec
inc
xlat
xchg
cmp
int
(bad)
int
and
jl
cmp
popa
sbb
clc
cmps
fcom
or
stc
imul
sub
adc
jae
dec
sub
mov
test
mov
scas
pop
fadd
(bad)
sbb
mov
xchg
adc
imul
movs
jecxz
xor
xor
aaa
cmp
pop
mov
sub
pop
mov
jno
fs
fsub
rep
jecxz
rcl
push
je
adc
outs
lods
ret
jns
shr
sub
repz
dec
inc
or
cld
adc
mov
int
dec
mov
and
sbb
xchg
enter
mov
xor
dec
scas
adc
sbb
jb
add
imul
sar
xlat
loopne
cdq
repz
ret
and
nop
inc
fld
jmp
ret
loope
ret
loopne
adc
jbe
adc
push
fwait
push
sbb
mov
or
loop
fst
sbb
dec
test
xor
lds
fwait
xor
inc
mov
in
scas
xchg
mov
mov
xor
ins
adc
pop
xor
arpl
mov
sub
loop
sti
cmps
fadd
fadd
mov
adc
mov
xchg
add
inc
xchg
or
fild
cmps
mov
popf
xchg
int3
mov
jmp
mov
pusha
cmp
mov
int3
in
bound
mov
push
lock
loopne
lods
inc
mov
jb
xchg
mov
mov
mov
les
int3
xchg
(bad)
add
push
dec
call
cmp
sbb
(bad)
fs
xchg
fimul
fdiv
in
fs
repz
inc
sub
pop
inc
jmp
dec
movs
pop
iret
fisubr
idiv
or
imul
in
push
dec
pop
sub
and
cmps
pop
jmp
push
sbb
or
inc
out
loopne
jne
jbe
or
pop
mov
xchg
mov
sub
ret
mov
jb
xor
xchg
adc
inc
fdivrp
aad
cmp
test
(bad)
mov
call
pop
sbb
test
mov
inc
scas
adc
inc
xchg
push
sbb
cdq
mov
push
ret
sbb
or
retf
xor
pop
cmp
in
inc
test
jmp
jmp
rol
cmp
mov
out
jbe
ja
mov
icebp
or
jp
sahf
test
iret
push
rcr
or
sub
xor
sahf
test
shl
lods
sbb
or
es
xchg
pop
leave
imul
mov
test
ja
mov
push
adc
push
sub
jl
(bad)
dec
test
aaa
icebp
mov
int
cmp
sahf
call
or
sub
xor
push
out
pushf
dec
and
cmp
or
mov
test
mov
add
inc
jmp
lock
push
movs
sbb
sub
mov
jg
jb
dec
aam
xor
pop
shl
or
mov
and
nop
movs
xchg
stos
in
repz
xchg
inc
test
jmp
or
rcr
imul
push
imul
cmp
pop
fidivr
repz
lea
cmp
xor
out
ins
loopne
mov
js
mov
fs
mov
ret
push
jo
pop
jge
ins
in
jb
push
and
push
xchg
adc
std
in
pushf
mov
and
adc
jecxz
adc
dec
pop
in
lock
push
sbb
jp
lock
mov
ret
dec
and
jb
jecxz
xor
(bad)
xor
push
jecxz
loop
jo
dec
pushf
retf
loop
xchg
jmp
add
or
rcl
loop
cli
outs
fnsave
nop
rcl
push
repz
push
ds
mov
add
adc
pop
jb
xchg
int
adc
fisub
or
xor
jl
gs
mov
(bad)
adc
pop
ret
ins
mov
or
(bad)
jo
xor
jns
lods
push
pop
in
or
das
fcom
mov
int3
sub
rcr
sub
mov
(bad)
mov
aas
cmp
or
mov
sub
and
jae
lea
xchg
adc
iret
pop
push
mov
or
adc
ins
and
mov
and
push
sub
fcomip
sub
sub
(bad)
(bad)
clc
loopne
mov
jle
jb
call
rcr
and
dec
ret
dec
cmp
div
push
add
add
dec
inc
jle
and
shl
sub
retf
ror
mov
bound
and
popf
in
jo
mov
popf
call
scas
sub
xor
cmp
cmp
hlt
in
jns
jns
and
mov
and
mov
stos
int3
push
adc
push
mov
fadd
add
mov
push
xor
dec
cmp
mov
sub
lods
jle
add
scas
cdq
lock
lods
lds
ret
stc
mov
sbb
sbb
jle
out
ficomp
jecxz
sbb
rol
jle
add
outs
cs
xchg
shr
mov
jno
inc
mov
mov
scas
adc
sbb
and
xor
ins
dec
sbb
iret
and
adc
test
mov
int3
push
push
pushf
hlt
and
lock
inc
and
add
call
mov
mov
dec
lods
je
addr16
or
adc
and
aam
sub
push
or
dec
mov
jmp
sub
cmp
outs
push
fwait
adc
mov
fcom
mov
rol
aam
inc
add
loope
push
pop
or
(bad)
mov
pop
adc
repnz
loopne
sbb
sbb
jo
add
mov
rcr
test
xchg
pushf
sub
shl
dec
adc
pusha
and
jb
movs
and
xchg
out
cld
mov
sub
inc
jl
fsub
nop
adc
add
dec
retf
jns
retf
retf
sub
adc
sbb
pop
scas
cmp
cmp
jne
lods
out
and
or
jp
outs
xchg
sahf
mov
push
loopne
mov
mov
in
shl
fsub
xchg
add
cli
cmp
mov
outs
int
jge
shl
popa
aas
pop
cdq
xchg
pushf
jb
cs
ror
jae
mov
adc
in
cmc
mov
outs
sahf
loop
xor
stos
adc
jle
cdq
sbb
mov
push
mov
imul
lock
jno
and
sar
cwde
add
out
sbb
ins
arpl
cmp
mov
fistp
ror
cmp
cmp
mov
sub
lods
ret
xlat
inc
rol
sub
mov
jb
pushf
ds
hlt
ins
ret
mov
cmp
dec
xor
arpl
outs
mov
and
(bad)
fisubr
ret
pop
lds
xor
push
xchg
pop
sbb
mov
adc
cmps
add
pushf
lock
inc
add
add
mov
jmp
mov
fcom
retf
(bad)
icebp
enter
(bad)
fnsave
jp
cmp
xchg
add
cmp
jl
lds
outs
pop
test
lahf
jl
test
sbb
or
mov
mov
push
mov
sbb
iret
sub
das
xor
jge
popa
mov
leave
movs
sbb
dec
out
jg
mov
fnstenv
lods
movs
ds
mov
pop
ret
mov
and
sub
xor
dec
in
and
int3
rcr
inc
ret
iret
mov
sub
pop
or
sub
pop
rol
bound
sbb
mov
push
pop
ss
xor
enter
push
adc
leave
and
fst
xchg
pop
pop
sbb
aad
scas
xchg
inc
je
jo
pusha
adc
mov
push
jge
ins
mov
(bad)
mov
xchg
popa
push
inc
repnz
fisubr
test
sub
mov
xlat
dec
int
(bad)
fdivr
jmp
jg
xchg
dec
sub
cmp
inc
xchg
inc
hlt
(bad)
push
pop
popa
iret
and
mov
sahf
cmp
icebp
add
mov
jg
sub
cwde
sub
lds
mov
mov
cmps
icebp
sbb
pop
ins
adc
add
imul
or
inc
ds
adc
lea
cmp
jl
dec
and
stos
push
cmp
test
xchg
scas
jmp
push
lods
repnz
xchg
out
sbb
push
ret
ins
mov
ins
retf
pop
add
repnz
xor
pusha
add
jge
dec
lea
add
int
push
push
es
adc
(bad)
clc
clc
out
int
add
adc
and
std
jle
and
cmp
out
xchg
bound
add
(bad)
test
rcl
fnsave
repz
cld
dec
lods
(bad)
jge
dec
repnz
ins
push
test
out
ins
or
cmp
and
mov
xchg
cmp
(bad)
fcom
mov
push
mov
add
arpl
ror
mov
arpl
fist
js
fstp
inc
mov
add
into
and
mov
into
add
add
hlt
sub
ds
lahf
(bad)
push
mov
or
push
(bad)
xchg
mov
es
mov
jle
scas
clc
and
inc
sbb
pop
xchg
dec
jmp
fdivp
mov
or
sub
sar
cmp
mov
xchg
ins
in
xchg
ss
test
push
sbb
xchg
cdq
push
pop
int3
or
mov
mov
imul
ins
or
xchg
cmp
in
cwde
xor
in
dec
mov
push
mov
jecxz
mov
rcr
je
jecxz
xchg
sbb
inc
fcmovnbe
pop
mov
jae
mov
dec
ret
inc
(bad)
pop
mov
(bad)
sub
cmp
push
fidiv
shl
sub
jg
ret
cwde
xor
dec
push
ins
aas
nop
pusha
mov
push
jecxz
xchg
sub
ins
push
shl
sub
sbb
rcr
sub
push
dec
(bad)
out
in
inc
jmp
lea
add
out
mov
adc
jo
mov
sbb
fwait
cmp
loop
mov
mov
pop
es
pop
push
icebp
mov
jo
inc
outs
sub
mov
loopne
rol
out
popf
xlat
arpl
cmp
dec
test
inc
adc
bound
loop
popf
jp
call
or
dec
xchg
cmp
ja
mov
rcl
sub
mov
sbb
js
mov
lods
xchg
mov
xor
fbstp
sar
dec
add
ins
jmp
sbb
rol
das
xchg
pop
and
cmp
lea
jge
adc
mov
mov
bound
pushf
cmps
adc
inc
push
mov
inc
adc
dec
out
jl
(bad)
mov
js
jb
xor
aam
adc
push
inc
or
push
icebp
in
ror
ret
shr
inc
sbb
push
into
mov
std
mov
or
test
ja
lea
pop
fisubr
adc
or
inc
xor
cmp
int3
in
add
repz
sub
cmp
xchg
fimul
jg
and
and
sub
sub
push
and
fistp
or
adc
sub
adc
loopne
(bad)
add
xchg
jo
push
dec
dec
add
inc
cld
sbb
cs
push
push
push
scas
loope
or
jnp
jge
mov
push
mov
mov
push
adc
(bad)
lods
(bad)
and
mov
xor
push
stos
fimul
outs
mov
mov
fiadd
mov
in
xchg
bound
out
rcl
je
test
adc
sub
inc
mov
dec
arpl
sbb
sbb
aaa
xor
add
xor
test
xor
(bad)
jne
out
cmp
inc
add
jo
in
in
xor
retf
popa
imul
inc
data16
sub
call
ficomp
icebp
inc
add
inc
icebp
sub
pusha
shl
in
das
push
lea
jp
repz
lods
sbb
xor
out
jo
pop
xlat
xor
mov
mov
leave
ins
push
into
outs
cwde
dec
loop
push
push
loope
icebp
mov
xor
inc
xor
loop
or
mov
mov
jle
mov
xor
push
sbb
lock
xor
xor
xchg
mov
jb
aam
iret
popa
popa
add
mov
mov
inc
ins
loope
xchg
test
jno
loop
or
ror
mov
lods
cs
xchg
push
aaa
add
dec
pop
(bad)
or
add
mov
div
push
inc
or
or
adc
dec
xor
cmp
int
neg
loop
lods
adc
sub
(bad)
mov
and
cdq
jae
pop
sub
add
pop
(bad)
sbb
aam
inc
push
pushf
push
or
mov
pop
arpl
je
sub
pop
aaa
jmp
mov
test
push
cmp
pop
inc
pop
ret
inc
mov
rcr
rcr
push
inc
mov
add
sub
inc
sbb
das
pop
sbb
mov
ret
inc
mov
fsubr
outs
dec
xor
and
dec
fdiv
les
fcom
arpl
ror
inc
pop
adc
or
dec
sahf
jb
pushf
sub
xchg
or
in
(bad)
jmp
sub
sub
out
inc
popa
gs
adc
cmps
repz
or
repnz
rcr
mov
xor
cmp
inc
and
jne
in
mov
mov
out
imul
add
push
inc
enter
sbb
mov
mov
movs
bound
aam
pop
imul
pop
mov
xor
out
mov
inc
bound
mov
test
and
push
daa
xchg
jl
xor
pavgw
mov
xor
sar
out
fbld
cli
push
push
xlat
dec
enter
repz
pop
push
push
push
sub
mov
lds
mov
push
mov
jle
mov
(bad)
cmp
sbb
cmp
or
pop
cmp
sbb
push
imul
push
loopne
mov
mov
addr16
stos
lahf
push
outs
mov
outs
out
je
lods
mov
shl
out
cmps
mov
popf
mov
int3
jns
stos
adc
or
dec
inc
dec
pop
add
(bad)
push
loope
jg
loopne
les
add
dec
fcom
xor
add
xor
pop
xor
jmp
xor
cmp
push
les
push
xchg
lods
out
fisttp
fisttp
retf
and
push
ins
sbb
data16
pusha
pop
out
cmp
sahf
(bad)
(bad)
cs
ror
jmp
into
cmps
loop
mov
sub
(bad)
repz
jbe
cwde
loop
imul
xor
sbb
lods
push
loope
adc
jae
or
mov
clc
add
leave
cli
and
cmp
and
mov
push
test
mov
xor
scas
xlat
scas
add
jl
mov
mov
add
adc
jp
xor
retf
jecxz
xchg
(bad)
repnz
ss
add
popf
xor
sub
inc
fstp
mov
sbb
mov
movs
loope
pop
or
sub
mov
mov
lea
sar
and
pop
loopne
leave
mov
jge
ins
mov
(bad)
and
pop
cmp
into
jb
out
sub
lods
xchg
ror
in
inc
in
fiadd
push
into
sub
jo
inc
enter
je
call
in
mov
nop
fadd
mov
xchg
or
sub
push
jmp
mov
jle
aas
out
arpl
loopne
sub
pop
dec
push
xor
jne
ret
fwait
sbb
and
popf
imul
xchg
jmp
xlat
pushf
inc
mov
movs
lahf
(bad)
(bad)
xlat
cdq
fwait
adc
add
or
mov
pop
add
or
and
inc
mov
adc
xchg
call
sbb
sbb
mov
leave
inc
adc
stos
in
jbe
push
fsub
mov
ss
in
jl
jo
rol
jno
sub
xchg
pop
mov
mul
lods
xor
leave
data16
jno
mov
inc
inc
test
xor
std
imul
xchg
jae
out
mov
lock
ficom
push
cli
(bad)
sub
dec
ins
adc
shr
sbb
sub
jbe
and
adc
adc
mov
lods
or
jno
mov
add
sbb
das
and
inc
xor
mov
mov
mov
mov
pop
mov
xchg
jmp
icebp
push
add
in
ret
cld
push
mov
ds
jo
and
push
mov
lods
ins
dec
pop
sub
xor
lods
push
lods
mov
ret
rol
pop
pop
jecxz
lods
ds
(bad)
ror
ins
mov
loopne
xchg
aad
mov
scas
bound
rcr
and
retf
xor
sbb
jp
xor
bound
xchg
ins
mov
and
in
adc
xor
add
es
fstp
xchg
jecxz
push
mov
xchg
pop
dec
inc
pop
add
or
cmp
neg
in
shl
fcom
xor
mov
inc
(bad)
xchg
adc
es
test
shr
and
jmp
add
repnz
mov
adc
mov
cld
outs
or
cdq
push
retf
fnstsw
test
out
sub
movs
lods
int3
xchg
fdiv
scas
inc
inc
enter
fdiv
loopne
icebp
inc
jl
sub
int3
js
in
daa
std
mov
cmp
sub
dec
bound
jno
xchg
sub
pop
mov
pop
xchg
xchg
les
repnz
lock
retf
pop
xor
inc
pop
and
dec
fimul
inc
sbb
dec
pop
mov
sbb
jmp
jecxz
icebp
cmp
dec
xchg
cmc
and
cs
push
inc
test
repz
and
pushf
lods
mov
out
jae
mov
jle
into
dec
push
mov
xor
cs
and
adc
out
ror
mov
xchg
repz
call
sbb
push
mov
test
push
ret
mov
add
jle
fcom
(bad)
outs
test
mov
mov
jmp
mov
push
mov
dec
mov
cli
test
push
stc
repz
cmp
pop
loope
sub
mov
mov
loop
mov
jbe
outs
jne
pusha
stc
sbb
or
sub
addr16
dec
mov
sub
adc
or
mov
and
int
repnz
loop
outs
jmp
adc
ins
ds
stos
stc
out
xchg
cmp
icebp
sahf
adc
ret
cdq
cmp
push
cmc
test
jno
add
jle
dec
mov
loope
inc
lds
fldenv
rol
inc
pop
scas
push
inc
std
in
iret
jo
mov
arpl
sub
lods
sub
mov
xor
or
cdq
repz
movs
inc
or
imul
gs
inc
(bad)
and
jo
add
jae
and
(bad)
inc
push
mov
aaa
clc
rol
sub
fnstcw
int
mov
lods
aas
push
repnz
jb
jle
inc
ret
xor
in
cmp
das
pop
les
mov
shl
movs
push
dec
ret
and
inc
sub
je
out
in
pop
cmp
xor
inc
int3
in
cmp
cmp
mov
or
pop
scas
cmp
pop
icebp
pop
cmps
std
out
cmp
adc
jb
sbb
or
pop
and
mov
dec
cld
ja
xchg
cwde
repnz
adc
ins
std
pop
fild
bound
or
test
mov
rol
mov
pop
test
sub
jl
pop
arpl
int
pusha
outs
adc
loop
ret
cmp
mov
rcr
mov
repnz
pusha
ins
fldcw
xor
mov
rcl
cmp
inc
fdivrp
cli
fisttp
push
loopne
push
ins
hlt
mov
sub
(bad)
retf
cs
sbb
dec
repnz
fstp
mov
ret
jns
hlt
movs
or
icebp
scas
mov
jne
loop
mov
in
push
sub
push
and
xor
push
std
ret
or
cmp
xchg
call
shr
add
imul
cld
(bad)
out
retf
lahf
push
fucom
ffree
std
lea
ror
fcomi
or
jecxz
out
(bad)
movs
and
ficom
loope
inc
cli
shl
xchg
lods
and
dec
adc
inc
mov
and
mov
fisttp
inc
add
sub
std
sbb
ins
sar
frndint
pop
adc
daa
sbb
test
sbb
push
mov
xchg
mov
not
test
(bad)
xor
xchg
push
xlat
add
inc
daa
arpl
sar
aam
sub
pop
rcr
sub
das
mov
cld
xor
emms
dec
jmp
pop
mov
or
lahf
mov
mov
out
js
fsub
iret
cli
mov
retf
int3
imul
and
jnp
nop
test
xor
adc
mov
stos
ror
xchg
jne
jl
pop
cmp
or
xor
cmps
scas
adc
dec
dec
stos
dec
mov
enter
int3
pushf
and
xchg
jg
dec
and
push
dec
xor
pop
lds
arpl
fdivp
fisub
fcom
in
fadd
iret
xchg
jl
enter
std
xchg
fdiv
push
jns
add
sub
ja
mov
sub
mov
ret
in
ret
push
add
gs
sub
sub
out
test
push
mov
in
xchg
fisttp
inc
push
sbb
ja
inc
aaa
pop
jne
and
xchg
and
data16
jmp
adc
adc
js
or
in
repz
mov
sbb
pop
je
(bad)
fsub
bound
cmp
test
in
jo
clc
jbe
ds
adc
xor
mov
adc
mov
inc
jle
push
daa
cmp
xor
int
lea
les
aam
hlt
pop
jl
sbb
shl
hlt
cmps
cmp
sbb
je
push
push
xor
fs
aam
mov
pop
push
xor
in
pop
shl
test
movs
sahf
xor
or
int3
mov
xor
je
xchg
mov
hlt
jp
scas
mov
dec
mov
add
or
stos
stos
xor
add
aaa
push
adc
sub
jo
rcr
inc
ja
jl
or
xlat
push
jb
stc
inc
mov
mov
mov
pop
shr
mov
inc
ds
jmp
hlt
push
adc
mov
rcr
xor
aam
cwde
mov
jo
stc
and
or
jo
in
xor
add
lock
ja
adc
xor
gs
popa
push
jno
inc
retf
push
sahf
add
pushf
out
cmp
aam
hlt
(bad)
push
scas
push
pop
push
jmp
mov
adc
cmp
mov
dec
dec
add
push
outs
dec
mov
cs
cmp
enter
(bad)
(bad)
add
imul
sbb
push
push
sahf
pop
pop
sub
pop
rol
or
(bad)
into
sub
std
dec
call
and
nop
push
dec
mov
pop
pop
inc
stos
and
sub
cdq
push
sub
jp
push
xchg
jg
pop
cmp
ds
adc
push
sub
cmps
ds
jbe
sbb
pop
outs
dec
jb
icebp
and
pop
push
std
mov
adc
sub
push
scas
mov
sub
call
or
addr16
push
pop
and
pushf
(bad)
xor
pop
cvtdq2ps
xchg
add
pop
shr
repnz
sub
push
mov
sbb
(bad)
cli
cmp
cli
stos
aam
data16
xchg
pcmpeqb
rcr
or
out
jg
(bad)
call
sub
inc
idiv
rcl
outs
mov
sbb
dec
jg
aaa
outs
shr
mov
sbb
ret
sub
sahf
leave
push
xor
sbb
mov
(bad)
add
mov
into
inc
lahf
cs
addr16
jp
btr
xor
mov
sub
push
(bad)
mov
pop
stos
cli
dec
mov
cdq
xlat
pop
mov
shl
mov
add
(bad)
call
sbb
sbb
(bad)
mov
retf
add
(bad)
push
(bad)
dec
and
jg
jne
aam
xor
push
aas
jnp
pop
xchg
cmp
xor
pop
lahf
pop
jg
aaa
nop
shl
mov
fwait
call
jmp
pop
inc
pop
(bad)
dec
adc
fstp
(bad)
xchg
pop
pop
fist
cmp
push
leave
mov
xchg
pop
sbb
lahf
cmp
sbb
sbb
fist
sti
fwait
sub
xor
jnp
mov
mov
fwait
xchg
fwait
xor
rcr
jae
push
dec
mov
into
mov
btr
scas
adc
fst
(bad)
je
or
push
xlat
jle
fist
push
xor
rol
outs
outs
scas
mov
fist
test
push
call
pop
sbb
das
dec
mov
add
cmp
pop
pop
scas
nop
add
nop
mov
int
int3
mov
cwde
loop
jns
call
clc
or
mov
jmp
das
inc
sbb
pop
les
pop
mov
ja
bndstx
xchg
pop
jmp
or
mov
jecxz
push
in
pop
stc
pop
das
outs
pusha
pop
xor
jmp
mov
addr16
jge
jg
idiv
lahf
xor
cmp
aas
xor
bound
push
sbb
fistp
xchg
pop
dec
cmps
enter
(bad)
loopne
pop
retf
sbb
mov
mov
sbb
pop
int3
loopne
(bad)
dec
pop
push
clc
xor
sbb
mov
mov
dec
lahf
shl
mov
mov
retf
arpl
(bad)
cmc
sahf
ja
ja
ja
pop
sub
pushf
push
pop
iret
out
lahf
jmp
dec
mov
xchg
(bad)
pop
xchg
mov
enter
(bad)
inc
cmp
jmp
retf
cmc
rcr
mov
pop
(bad)
call
mov
stos
pop
or
inc
cwde
or
pop
adc
pand
xlat
adc
pushf
and
inc
pushf
rcr
jns
loopne
int
inc
and
je
dec
je
adc
daa
xchg
sbb
sbb
cwde
dec
cwde
dec
cwde
dec
cdq
fisttp
fwait
test
pusha
mov
idiv
call
sbb
outs
pop
imul
xchg
pop
nop
xchg
xchg
lods
loopne
mov
sbb
xchg
adc
pop
pop
ds
xchg
xchg
int
mov
sbb
call
pushf
or
inc
inc
xchg
fcmovne
adc
sbb
pop
cmp
cmp
fist
aas
sar
mov
sub
dec
and
mov
pop
loop
rcr
mov
out
(bad)
arpl
mov
leave
pop
popw
iret
pop
or
fist
in
popa
xor
sbb
jns
inc
sti
(bad)
dec
add
mov
fidiv
(bad)
je
jnp
jae
lock
push
mov
mov
inc
jnp
jae
xor
add
(bad)
jnp
xor
aam
xor
setp
stc
jne
mov
stc
stc
sbb
stos
pop
pusha
mov
inc
sbb
jae
mov
push
xchg
mov
jbe
aam
push
jle
jp
inc
mov
js
cmc
test
clc
dec
pusha
mov
sti
aam
push
mov
aam
xor
jnp
aam
add
sti
mov
xor
lock
cmp
(bad)
loopne
jo
sbb
sub
fs
sti
test
add
stos
push
pop
lock
out
xor
mov
inc
push
out
sbb
fidiv
mov
(bad)
cmc
and
cs
popf
add
jo
std
stos
cmp
int3
and
push
push
sbb
pusha
mov
movs
push
lock
push
push
dec
ss
xor
jo
pushf
scas
stos
xchg
push
xor
sub
xchg
push
mov
push
out
xor
and
push
or
in
jo
std
mov
jbe
(bad)
adc
or
mov
mov
push
call
hlt
out
dec
ins
jo
std
inc
pusha
xor
sbb
mov
mov
cmp
mov
sub
mov
jg
push
(bad)
jge
(bad)
cdq
mov
ret
jge
aam
ss
xchg
cmp
jae
sti
push
aaa
cs
sahf
cmp
cli
or
aam
pop
jmp
stc
add
scas
std
inc
mov
ret
and
pop
or
ss
cmps
sbb
scas
xchg
push
inc
or
cmp
dec
out
or
inc
dec
xchg
in
arpl
outs
popf
ret
into
dec
and
mov
dec
test
out
and
mov
test
out
ret
push
or
inc
cmps
imul
and
ja
inc
test
(bad)
arpl
and
arpl
movs
je
jp
rol
inc
out
mov
mov
out
shr
add
mov
push
in
mov
cmps
in
or
out
xor
gs
and
sbb
pop
jns
push
and
mov
imul
adc
inc
and
(bad)
add
push
or
shr
movs
loopne
mov
int
xchg
or
and
pop
sbb
pop
jmp
xor
adc
adc
pop
jge
sar
rol
jmp
fs
in
out
fidiv
or
(bad)
fxch
retf
scas
js
(bad)
jmp
jge
cmp
rcl
mov
add
mov
mov
rcl
gs
mov
inc
sbb
xchg
aad
mov
add
jne
mov
xor
adc
ins
(bad)
mov
rcl
inc
inc
mov
mov
mov
shl
aam
and
jae
gs
pop
movs
fiadd
push
sar
(bad)
fbld
cmc
lds
(bad)
mov
jno
movs
(bad)
pop
ins
jmp
loope
and
mov
aad
movs
ins
push
and
push
test
sub
in
ins
push
pop
das
adc
xor
inc
push
or
jne
add
dec
cmc
jp
in
sub
jl
mul
push
outs
xor
rcl
out
xor
test
cmp
fild
scas
dec
or
xchg
call
cmp
popf
cmc
inc
mov
fisub
cmc
mov
add
add
gs
inc
and
add
test
leave
stos
inc
xor
ret
icebp
gs
mov
enter
rol
ss
stos
fcmove
push
and
push
push
shr
lods
in
add
jno
add
jno
jne
push
gs
sbb
dec
test
daa
xchg
sahf
icebp
xchg
xchg
sub
xchg
les
add
mov
retf
or
add
fadd
push
xchg
pop
jbe
xchg
fwait
hlt
push
adc
and
icebp
lds
xor
(bad)
xor
mov
mov
aad
and
inc
das
mov
shl
repnz
jno
xchg
and
jne
and
xor
in
aad
jbe
xchg
add
cmp
sar
dec
jp
inc
popa
jl
pushf
mov
push
mov
mov
pushf
mov
mov
pop
aam
not
jne
jae
xchg
nop
popf
and
mov
(bad)
mov
popf
push
inc
dec
mov
xor
inc
or
pop
mov
and
sbb
std
jne
cmp
cmp
div
mov
call
frndint
inc
movs
jo
cmc
and
fmul
cmp
hlt
or
fmul
push
test
push
adc
pop
(bad)
cmp
ds
ficom
push
pop
mov
dec
dec
fdiv
mov
jne
jne
push
inc
xor
and
shl
cmp
fcmovb
sub
push
jae
dec
pop
ret
xlat
lds
not
and
and
xchg
std
mov
mov
in
in
movs
icebp
or
shl
in
movs
icebp
movs
shl
mov
push
and
jns
ds
movs
shl
mov
call
int3
mov
shl
mov
and
outs
xor
mov
push
and
mov
shl
mov
push
mov
icebp
push
push
cmc
xor
popf
popf
mov
jne
loope
shl
rcl
xor
push
mov
jne
sbb
xchg
xor
icebp
lock
in
lds
jl
push
sbb
xor
xchg
and
aad
xor
and
mov
es
xchg
test
stc
sti
js
test
fs
mov
adc
lods
jbe
push
in
mov
rep
shl
bnd
fwait
retf
inc
push
cmp
pop
jmp
retf
add
jle
fwait
jecxz
and
push
sbb
out
outs
adc
and
sti
push
or
push
mov
fstp
adc
sbb
scas
and
repz
sbb
sbb
jl
retf
or
mov
retf
inc
data16
neg
fsub
repnz
sub
adc
out
and
out
or
mov
call
cmps
call
daa
repnz
shl
xor
loope
dec
fwait
jns
cli
jmp
xor
xor
je
mov
xor
sbb
adc
(bad)
push
adc
jae
ss
jns
fisubr
into
lahf
stc
mov
inc
xor
sbb
loopne
or
adc
dec
mov
imul
fwait
stos
push
mov
jg
(bad)
stc
(bad)
jbe
imul
fldcw
mov
shl
(bad)
mov
fbstp
push
mov
jnp
iret
imul
jp
push
xor
jmp
cdq
ss
jno
sbb
aas
lahf
stos
jb
xchg
add
pop
mov
mov
cli
xor
cmps
jb
adc
repz
call
jmp
pop
cli
scas
or
shl
mov
mov
out
repnz
shl
repnz
stos
fld
push
inc
and
pop
shl
dec
adc
jb
push
out
call
imul
push
sti
push
dec
push
pusha
jb
inc
out
and
iret
js
jmp
jae
push
loop
xchg
xchg
or
jmp
fimul
stc
inc
cdq
leave
iret
add
mov
mov
jg
mov
xchg
ret
and
not
test
dec
mov
les
push
push
mov
dec
rsm
retf
jg
inc
and
cli
fucomip
mov
jne
inc
jmp
lahf
push
sub
sbb
ret
aaa
in
pop
inc
add
sub
inc
push
sbb
pop
sub
mov
adc
adc
jecxz
mov
stos
out
ret
retf
inc
das
jecxz
cmps
imul
sub
sub
inc
mov
cmps
or
scas
bound
mov
adc
inc
add
mov
retf
push
inc
into
add
add
mov
inc
cmp
out
shl
or
sub
and
outs
sub
push
das
adc
cmp
(bad)
(bad)
pop
sub
imul
xor
dec
sub
cli
fwait
jne
or
or
dec
ficom
or
(bad)
mov
ret
retf
xchg
sub
or
xor
adc
and
xchg
add
(bad)
in
fucom
into
fbstp
xor
ds
xchg
mov
ds
pop
das
jnp
jle
jae
sbb
dec
repnz
jbe
mov
push
int
pop
jae
add
ss
repnz
jae
xor
cmp
pop
add
(bad)
int
in
xchg
or
dec
(bad)
pop
jae
xor
int
pop
jae
mov
mov
jl
mov
jae
shl
and
loop
and
cmp
xchg
fwait
push
inc
jecxz
sub
cmps
sti
mov
mov
jne
test
nop
sub
xor
push
jb
xor
dec
repz
repz
xor
dec
ins
push
xlat
lods
xchg
in
mov
pop
sub
sub
hlt
xchg
hlt
shl
cli
push
xor
and
mov
xor
mov
mov
dec
xor
fsub
pop
and
mov
in
cwde
test
pusha
fsub
and
inc
mov
jns
and
xchg
push
les
das
cmp
fiadd
cmp
into
cmp
cld
dec
mov
xchg
inc
aad
lea
mov
das
sbb
scas
jmp
repz
sbb
enter
add
xchg
mov
movs
mov
jae
xchg
repnz
shr
xor
ins
packsswb
rol
dec
je
mov
xchg
ret
inc
cmp
jae
xchg
xor
dec
add
lahf
retf
pop
xchg
jne
daa
popf
jae
dec
call
lahf
out
gs
xchg
pop
scas
xor
adc
push
clc
jle
addr16
pushf
sub
and
in
pop
cmp
popf
daa
iret
ins
out
inc
test
test
lods
or
ficomp
xor
out
lods
cmps
jbe
and
cmp
outs
retf
sbb
xchg
lods
test
sahf
jge
or
cs
movs
jno
mov
icebp
pop
ror
inc
movs
and
xor
les
add
test
and
and
or
inc
mov
lea
nop
adc
loop
mov
ins
or
test
push
loopne
xor
movs
into
lods
jb
add
xor
test
fs
scas
es
xor
ja
mov
ficom
mov
jb
mov
xor
pop
aad
repnz
hlt
int
inc
pusha
push
jno
cmc
pop
xchg
ja
cmps
xlat
inc
shl
inc
pusha
icebp
adc
cs
mov
sub
js
cmp
std
cmps
xor
sub
loop
xor
das
mov
cs
cmp
icebp
sbb
outs
fnstenv
sub
stc
lods
add
push
xchg
pushf
mov
pop
lock
call
cmp
jno
cmp
aas
xchg
xor
xor
jle
cmp
repnz
lds
mov
mov
pushf
mov
cmc
cmp
jne
jb
ins
cmc
xor
mov
mov
aad
in
pop
xchg
ins
lds
add
push
or
dec
ficom
jo
shl
test
jl
rcl
push
fsubr
mov
mov
pop
inc
nop
pop
fimul
(bad)
xchg
cmc
pop
aad
xor
pop
aad
mov
aad
popf
int3
mov
push
or
in
loope
mov
aam
mov
loope
mov
push
or
in
loope
mov
aam
mov
xchg
int
in
push
or
in
xchg
int3
mov
aam
mov
xchg
int3
mov
push
or
in
xchg
out
rcr
scas
ficomp
retf
scas
rol
mov
cwde
test
scas
ficomp
aad
shl
jecxz
lahf
ret
lds
ret
mov
test
icebp
mov
aad
xchg
int3
xchg
adc
int3
mov
mov
out
loopne
mov
mov
ror
adc
in
fadd
in
in
(bad)
jl
jmp
push
mov
movs
and
mov
cli
mov
imul
popa
xor
jle
and
mov
ins
inc
mov
popf
rcl
pushf
push
daa
je
lahf
mov
movs
out
call
int
out
ds
sub
add
mov
hlt
and
stos
jge
div
aad
push
mov
fist
shl
xor
mov
mov
sbb
mov
js
sbb
sbb
xchg
sub
xor
push
push
fimul
test
push
xchg
mov
mov
cmc
je
fs
dec
inc
cmp
inc
mov
or
inc
xchg
jno
xor
ja
(bad)
aad
loopne
add
xchg
xchg
movs
jno
adc
add
jb
data16
inc
mov
mov
mov
jbe
push
icebp
and
jne
mov
inc
push
xor
pop
nop
jbe
cmc
add
and
imul
sub
cmps
jle
and
rcl
add
add
lock
shl
push
mov
loop
xchg
mov
ins
aam
xchg
push
adc
mov
push
inc
push
repnz
adc
add
xchg
rol
adc
adc
mov
push
repz
xchg
jbe
ins
lahf
pusha
cmps
or
popa
les
jb
xchg
xor
imul
xchg
xor
mov
sbb
jae
mov
test
xchg
jp
adc
adc
es
push
movs
fs
xchg
inc
inc
xchg
and
fnstsw
sub
jg
sbb
ja
lock
xchg
adc
xchg
mov
inc
ret
mul
mov
mov
mov
mov
retf
sbb
push
into
arpl
push
inc
xchg
dec
mov
mov
mov
nop
lods
xchg
mov
repz
xor
and
test
enter
or
or
out
xor
int
fcom
scas
push
cmp
mov
push
pushf
in
in
fs
jae
xor
call
jb
xchg
dec
and
lahf
and
int3
jne
xchg
jge
dec
add
cmp
fdivr
test
inc
shl
jb
mov
(bad)
addr16
add
test
(bad)
sub
cs
mov
fs
cmp
sub
push
repnz
out
outs
mov
jne
adc
mov
test
pop
stc
push
test
les
pop
jb
and
sbb
cmp
scas
jnp
inc
jge
or
in
sar
jp
sbb
sub
test
cmp
sbb
(bad)
or
pop
cmp
js
mov
mov
dec
push
dec
dec
push
cmp
xchg
enter
(bad)
icebp
add
movs
cmp
or
mov
std
pop
dec
fsub
adc
enter
xor
fstp
scas
leave
(bad)
std
js
push
daa
dec
cmp
adc
arpl
dec
sbb
(bad)
sar
sar
das
and
mov
adc
cmp
pop
cs
int
push
rcr
or
gs
jno
mov
mov
or
ror
sahf
out
stos
aam
retf
scas
push
jge
push
cs
sbb
das
xor
push
pop
pop
cs
inc
std
js
mov
adc
fldcw
iret
mov
shr
(bad)
retf
ins
clc
in
cmp
push
out
push
and
fmul
sbb
or
scas
popf
lea
scas
cmp
sub
pop
pop
in
jmp
aam
adc
sbb
retf
scas
(bad)
sti
mov
jl
or
mov
push
and
and
imul
inc
sub
mov
sub
retf
(bad)
retf
push
jnp
call
push
mov
fucom
imul
mov
inc
or
cmp
dec
mov
out
cmp
popa
xchg
sub
jecxz
fs
inc
push
jnp
pop
mov
sti
retf
fs
movs
jecxz
lea
lea
inc
and
dec
adc
xor
dec
movs
cmps
mov
rol
mov
imul
xor
adc
fs
(bad)
out
retf
test
imul
movs
imul
and
(bad)
cmp
sti
cmp
je
dec
fnstcw
mov
sbb
jns
fisttp
nop
rcl
sub
stos
loop
imul
retf
stos
aas
or
dec
push
ins
or
retf
je
push
ret
xchg
dec
in
shr
lods
sub
psubd
aad
jns
mov
mov
into
(bad)
mov
stos
cmp
std
(bad)
xor
jl
sub
in
out
cmp
and
iret
cmps
rcr
mov
(bad)
or
jl
mov
jbe
es
lds
imul
fisttp
cmp
imul
jb
std
mov
xor
dec
das
cmp
loopne
pop
dec
fisttp
sti
ficomp
hlt
inc
xchg
xchg
jg
jmp
or
or
pop
lea
imul
shl
call
(bad)
scas
jg
ret
ret
movs
add
sub
jge
xchg
mov
jmp
aad
add
(bad)
cmp
call
cdq
sbb
mov
wrmsr
sub
push
ins
imul
mov
jbe
xor
or
push
push
xchg
dec
aas
jnp
out
sub
xor
cli
jb
aam
iret
push
jl
scas
mov
push
or
and
jg
stc
mov
es
inc
(bad)
dec
xor
dec
scas
sti
cvtps2pd
inc
aas
fcomi
test
ins
out
div
in
sub
add
rcl
ret
pop
into
rcr
cmp
adc
cmp
shr
push
(bad)
in
aas
lock
out
mov
lahf
adc
add
out
jg
jne
gs
pusha
lds
jp
adc
mov
bound
jmp
add
mov
sti
sbb
xor
cli
loopne
aad
popf
call
in
add
adc
call
fistp
pop
pop
outs
mov
inc
add
cmp
retf
repz
mov
and
mov
retf
sub
pop
xchg
jo
inc
push
scas
test
stc
loopne
enter
test
sub
fisub
fiadd
retf
rcl
dec
out
mov
repnz
dec
fisubr
inc
(bad)
fisttp
and
push
push
fstp
xor
rol
sbb
repnz
ret
jmp
rcr
jecxz
fiadd
repnz
lea
and
fstp
dec
(bad)
pop
movs
and
push
gs
add
sub
sbb
or
inc
cmp
cli
emms
(bad)
call
mov
call
sub
arpl
imul
pusha
shrd
mov
xchg
add
jnp
enter
sub
mov
dec
int
dec
push
mov
jae
jmp
dec
imul
js
rol
pop
stos
push
jl
mov
scas
(bad)
dec
scas
call
push
jmp
xor
xchg
retf
inc
mov
mov
sbb
in
rol
repnz
mov
jbe
arpl
imul
ja
jb
inc
sti
push
ret
cmp
sub
jb
xchg
push
mov
retf
push
daa
add
fsub
inc
jno
xchg
pop
int3
imul
pop
push
push
ins
movs
cdq
xor
sti
out
jmp
fwait
test
cmps
adc
sub
push
packsswb
sub
inc
call
icebp
and
imul
mov
add
outs
test
sbb
add
dec
in
mov
xor
push
in
test
fucom
sub
push
stc
stos
jno
ret
push
shl
push
aam
inc
push
inc
icebp
mov
inc
jecxz
push
pop
mov
jae
push
mov
rcr
inc
movs
imul
pop
arpl
or
and
xor
and
imul
and
retf
gs
in
stos
mov
add
and
push
fist
inc
cmp
mov
push
xchg
(bad)
bound
sub
jecxz
in
jmp
iret
mov
not
sbb
or
out
sbb
and
add
jge
cmp
mov
loopne
std
shr
adc
pop
jge
loop
bnd
das
dec
or
cmps
aam
stos
mov
sbb
jg
cmp
retf
jbe
dec
inc
retf
or
retf
lock
retf
or
adc
test
stos
ret
mov
dec
ins
stos
shr
inc
repnz
mov
sub
xor
clc
xchg
scas
mov
xor
jno
lods
add
fs
jno
das
pop
int
repnz
dec
stc
stos
sbb
mov
fs
jmp
xchg
and
outs
cli
add
popf
in
dec
stos
mov
jns
bound
inc
sub
inc
inc
(bad)
fistp
sub
sub
pop
(bad)
jnp
sub
ins
fist
int
or
pop
adc
iret
retf
(bad)
xchg
push
shl
cmp
push
inc
(bad)
mov
push
pushf
sbb
add
pop
dec
mov
dec
mov
mov
call
sub
loope
adc
mov
adc
call
fsubr
adc
adc
pop
rcl
lock
xchg
retf
adc
xchg
(bad)
ficom
xchg
cmp
fist
ret
imul
and
(bad)
jecxz
fcmovne
xlat
les
pop
add
xchg
nop
sbb
popf
cmp
mov
sar
pop
ins
(bad)
cli
stos
xchg
nop
fidiv
mov
popf
jns
icebp
je
adc
cmps
in
pop
jge
xor
mov
and
mov
xchg
(bad)
dec
(bad)
jl
push
das
mov
call
scas
dec
sti
int3
(bad)
mov
xor
shl
rcr
das
scas
aad
movs
and
scas
int3
adc
dec
mov
mov
cmps
scas
jmp
outs
and
cwde
cs
push
pop
and
add
rcl
and
aaa
sahf
and
in
cmpxchg
fist
sbb
push
xor
dec
sub
gs
cld
(bad)
icebp
shl
add
fs
dec
icebp
lock
stos
lahf
cmp
daa
nop
stos
jg
jg
cwde
jo
pop
pop
or
jo
loope
into
mov
aam
pop
(bad)
test
jg
mov
jg
(bad)
jecxz
retf
popa
cli
fcom
or
adc
adc
test
mov
fwait
in
mov
mov
fld
jo
jg
inc
bound
jge
sbb
cli
add
mov
jb
sbb
pop
push
mov
mov
or
or
mov
fcos
mov
imul
and
sub
int3
dec
jp
gs
int3
cmp
or
fcomp
cs
jg
cld
jp
dec
cmp
cli
imul
scas
or
dec
push
clc
pop
das
comiss
fld
aas
lods
mov
pop
js
or
mov
call
mov
xchg
push
out
mov
shr
inc
pop
jo
pushf
push
xchg
jp
and
xor
fld
mov
clc
cmp
pop
pop
sbb
push
out
xor
repz
push
lds
mov
movs
push
out
shl
outs
xchg
mov
pop
mov
cli
xchg
cli
cmc
sbb
cwde
mov
jmp
cld
mov
adc
sbb
dec
xchg
dec
xchg
hlt
lock
aad
repz
clc
xor
push
call
mov
ret
ret
xchg
sahf
(bad)
rol
fisub
xchg
int
and
addr16
mov
adc
pushf
inc
neg
pop
aad
ret
ficom
call
mov
adc
lods
xchg
lahf
hlt
push
call
fucomip
lds
(bad)
adc
cmp
jl
mov
int3
not
iret
and
xor
mov
mov
out
ja
cli
dec
les
mov
mov
je
jecxz
xchg
lahf
(bad)
popf
cmps
retf
xor
(bad)
retf
loopne
movs
leave
mov
and
inc
lods
fs
lods
inc
sar
add
loopne
add
pushf
jg
fcmovnu
adc
xor
jecxz
jmp
sbb
jmp
xchg
inc
jb
xchg
test
cmc
push
push
mov
adc
lods
(bad)
clc
sub
(bad)
addr16
loop
gs
sub
popf
sub
jnp
or
aaa
sahf
xchg
jne
in
inc
pop
push
xlat
cmp
test
mov
cli
dec
sub
fisttp
add
jg
mov
aaa
mov
into
inc
inc
inc
push
xchg
mov
les
pop
sbb
mov
repz
push
in
push
retf
out
hlt
iret
ja
mov
jae
mov
dec
mov
aas
jg
sub
in
cmc
mov
pop
or
adc
pusha
dec
push
lods
mov
jo
test
ror
add
xchg
sar
dec
inc
in
inc
sub
cld
adc
push
(bad)
loopne
push
or
mov
mov
pop
push
lods
jecxz
ins
pop
aaa
and
sbb
jo
outs
adc
xchg
pop
cmps
movs
clc
pop
into
push
lock
popf
sahf
cdq
dec
inc
mov
clc
jg
scas
sub
or
mov
cli
adc
or
adc
mov
push
or
fcom
loope
mov
dec
jo
adc
xchg
inc
aas
cld
(bad)
ins
pop
mov
nop
cmp
(bad)
or
test
je
jp
shl
and
scas
cmc
fld
sbb
or
xor
xchg
push
movs
push
test
cld
jo
push
adc
stos
mov
pop
scas
sti
push
add
test
js
and
lods
or
in
fs
gs
or
pop
add
into
mov
adc
popa
push
cmp
in
jmp
and
test
add
mov
xchg
cmp
dec
iret
or
dec
xchg
mov
outs
dec
daa
push
test
faddp
pusha
sub
repnz
jae
(bad)
repnz
pop
inc
in
jge
or
jg
loop
pop
mul
clc
sar
xchg
mov
xchg
xchg
lock
dec
cmc
lods
cmp
sbb
in
pop
cmp
mov
in
adc
mov
xchg
lahf
sub
test
jno
in
pop
and
add
movs
inc
cmp
dec
popf
mov
mov
mov
pop
mov
sbb
fwait
mov
pop
mov
inc
gs
jl
sub
fnstsw
les
rcl
sub
ds
mov
mov
cli
mov
adc
out
add
lahf
push
mov
fs
sub
xor
rol
in
(bad)
(bad)
push
fucomp
rcr
add
sub
xor
aaa
add
jecxz
sti
repz
popf
add
mov
or
sbb
aas
dec
out
mov
pop
sahf
xchg
das
adc
popf
add
dec
inc
dec
loopne
sbb
push
adc
inc
ror
sub
add
adc
dec
clc
repnz
pop
dec
inc
dec
xor
fdiv
mov
nop
pop
(bad)
(bad)
xchg
xchg
push
stos
arpl
jecxz
mov
dec
pop
mov
pop
ins
push
mov
add
(bad)
cld
adc
(bad)
int
mov
cld
dec
loop
mov
repnz
mov
call
(bad)
loopne
ds
inc
sub
outs
pop
cs
pop
stos
mov
pusha
adc
icebp
jg
mov
jo
sbb
jl
jecxz
mov
int
sub
mov
arpl
adc
cdq
call
outs
cmp
outs
mov
jae
sar
ins
repnz
dec
jle
(bad)
xchg
xor
sub
xor
or
jecxz
cmp
outs
std
pop
out
xchg
cs
and
std
fistp
and
push
inc
and
mov
in
sti
sub
rcl
jp
xchg
mov
sub
mov
jb
int3
push
and
cmp
inc
xor
mov
enter
fild
push
pop
or
inc
cmp
sbb
and
fnsave
xor
add
jmp
add
das
pop
test
(bad)
movs
add
je
popf
mov
cmp
shr
pop
cmps
inc
mov
mov
iret
push
icebp
sbb
xchg
mov
adc
ret
rcl
outs
inc
movs
jg
or
out
xchg
sti
sbb
xor
loop
mov
and
rcr
add
mov
add
adc
inc
xor
test
mov
jp
mov
pop
stos
mov
xchg
call
loop
mov
scas
movs
rcl
pop
and
jl
pop
push
xchg
jg
pop
sbb
ins
add
js
cld
fbstp
loope
pop
cwde
and
mov
adc
xor
and
mov
cmp
out
fdivrp
rcr
mov
sub
xor
(bad)
jle
outs
std
add
sub
in
jl
ins
and
adc
add
in
xor
inc
std
ins
adc
dec
mov
fld
stc
mov
pop
cmps
jl
mov
inc
push
lods
cmp
xor
mov
in
cmp
scas
aas
adc
xchg
sub
aas
adc
loop
cmp
ds
and
mov
dec
xchg
fist
add
mov
pop
fadd
repz
mov
adc
inc
xor
xor
mov
mov
xor
or
int3
inc
add
leave
repnz
jb
jp
add
in
mov
enter
nop
in
mov
dec
sar
stc
adc
pop
pop
jae
or
cvtps2pd
sub
jns
aas
fist
fimul
test
add
mov
fimul
sub
sbb
push
popf
pushf
xchg
sar
mov
pop
xor
mov
jg
fistp
jb
sar
xor
int
aad
dec
push
rcl
xor
xchg
in
jns
lock
add
jo
push
sbb
mov
pop
xor
sbb
sbb
sbb
inc
jae
sbb
mov
retf
pop
cs
pushf
or
daa
shr
stos
and
(bad)
ins
xchg
data16
sbb
mov
fistp
fcmovb
xchg
adc
mov
push
xor
retf
out
mov
mov
call
xor
shl
es
inc
pop
adc
ret
jge
jle
loop
jbe
(bad)
scas
lods
mov
mov
sub
fdivr
push
or
lods
loop
jp
in
xlat
pop
stos
lock
cmp
sub
push
mov
sub
test
mov
stos
dec
and
inc
xor
stos
in
imul
ror
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
pop
mov
mov
mov
pop
ret
push
push
lea
push
mov
call
call
mov
mov
push
mov
lea
push
push
push
push
mov
call
add
lea
push
mov
call
mov
call
test
je
mov
call
test
je
lea
push
mov
call
call
mov
push
call
movzx
push
push
lea
push
push
call
add
lea
push
mov
call
cmp
je
mov
test
je
call
test
jne
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
lea
call
mov
push
lea
mov
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
jne
mov
call
call
push
push
lea
call
push
lea
push
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
add
mov
call
mov
lea
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
mov
push
push
push
mov
sub
push
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
call
mov
mov
mov
mov
push
push
call
mov
mov
test
sete
movzx
mov
push
mov
push
mov
push
push
push
push
call
add
cmp
je
mov
test
je
mov
push
push
xor
call
test
je
lea
cmp
jge
call
mov
mov
push
push
push
push
call
add
push
call
mov
mov
push
push
add
call
test
jne
mov
mov
push
push
call
test
je
call
mov
push
push
push
mov
call
add
mov
call
call
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
lea
call
mov
push
lea
mov
call
mov
mov
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
mov
pop
jne
call
mov
push
push
mov
call
mov
add
call
call
push
push
jmp
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
test
je
mov
push
push
call
test
jne
mov
jmp
mov
jmp
mov
call
mov
mov
push
push
mov
push
push
push
mov
call
add
jmp
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
call
cmp
je
call
mov
mov
push
push
push
call
add
pop
mov
mov
mov
pop
ret
push
lea
push
mov
call
test
je
cmp
je
cmp
je
push
lea
call
mov
mov
push
lea
mov
call
mov
push
lea
call
lea
push
mov
call
mov
push
call
lea
push
lea
call
mov
call
mov
push
push
call
cmp
pop
je
mov
call
test
je
mov
lea
call
mov
call
mov
pop
pop
mov
mov
pop
ret
mov
call
call
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
lea
push
mov
call
mov
mov
lea
push
push
push
push
mov
call
mov
push
mov
call
lea
push
call
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
mov
push
call
ret
int3
push
mov
push
mov
mov
test
push
je
push
call
add
mov
cmp
mov
je
xor
mov
mov
mul
seto
neg
or
push
call
add
test
mov
jne
call
lea
push
push
push
call
add
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
test
push
mov
jne
mov
mov
pop
pop
ret
push
call
test
mov
jne
push
call
int3
int3
int3
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
test
je
mov
mov
push
call
mov
mov
mov
pop
ret
int3
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
push
mov
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
mov
pop
ret
push
mov
sub
lea
push
call
mov
mov
lea
push
push
push
push
mov
call
call
mov
mov
push
push
push
mov
call
add
lea
push
call
xor
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
call
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
call
mov
mov
xor
div
mov
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
push
push
call
add
test
jne
mov
test
jne
pop
pop
xor
pop
pop
ret
pop
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
mov
mov
add
push
call
add
add
mov
mov
lea
call
call
mov
mov
push
push
push
push
mov
call
mov
add
push
call
mov
push
push
push
push
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
lea
or
lock
dec
test
jg
mov
mov
mov
push
call
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
push
mov
xor
cmp
je
cmp
jbe
push
lea
mov
mov
test
mov
je
lea
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
test
mov
jne
add
cmp
jb
xor
pop
mov
push
call
mov
add
mov
mov
mov
call
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
int3
int3
int3
int3
int3
push
mov
push
mov
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
call
mov
fld
sub
fstp
push
push
call
add
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
push
mov
call
xor
mov
lea
mov
mov
call
mov
lea
call
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
push
push
mov
call
push
mov
mov
mov
call
mov
mov
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
movzx
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
call
test
je
mov
mov
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
call
mov
mov
mov
push
mov
push
push
push
push
push
mov
call
add
lea
call
mov
mov
lea
push
push
mov
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
push
call
push
push
push
call
push
call
mov
push
push
mov
call
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
lea
mov
call
mov
mov
lea
mov
mov
mov
test
je
mov
mov
push
call
mov
lea
call
mov
lea
call
mov
mov
call
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
call
test
je
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
mov
push
push
call
add
pop
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
call
mov
mov
push
mov
push
push
push
push
mov
call
add
lea
call
lea
mov
call
push
push
push
call
push
call
mov
mov
add
lea
or
lock
dec
test
pop
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
mov
pop
ret
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
lea
push
mov
call
add
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
push
call
mov
push
add
mov
mov
push
mov
call
add
mov
mov
mov
add
mov
mov
push
mov
call
add
add
mov
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
push
push
mov
push
push
call
mov
test
jne
call
mov
mov
call
push
mov
push
push
call
add
jmp
xor
mov
mul
seto
neg
or
push
call
mov
add
mov
mov
mov
push
push
call
test
jne
call
mov
mov
call
push
mov
push
push
call
mov
push
call
add
jmp
lea
call
mov
mov
mov
cmp
je
push
call
push
lea
push
push
mov
mov
call
add
push
push
push
push
push
push
lea
push
push
call
cmp
jl
push
push
mov
mov
push
call
mov
mov
lea
call
push
push
lea
call
mov
mov
push
sub
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
cmp
mov
je
lea
push
push
mov
mov
push
call
mov
mov
lea
call
cmp
je
add
cmp
jne
add
cmp
jne
mov
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
push
mov
mov
call
add
lea
push
call
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
push
mov
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
push
call
add
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
push
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
push
call
add
lea
call
mov
lea
call
test
jne
call
mov
mov
push
push
push
push
mov
call
add
jmp
mov
add
push
call
add
add
mov
mov
push
push
lea
call
mov
lea
jmp
lea
mov
add
sub
jne
mov
lea
push
push
call
mov
cmp
je
mov
lea
mov
add
push
call
add
add
mov
mov
lea
push
lea
call
mov
lea
call
mov
push
add
mov
mov
push
mov
call
add
add
mov
mov
mov
lea
call
lea
call
test
je
lea
push
push
call
add
test
je
lea
push
push
call
add
test
je
push
push
lea
mov
mov
push
call
mov
mov
lea
call
lea
push
push
call
mov
neg
sbb
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
push
call
mov
call
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
mov
mov
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
lea
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
push
jne
mov
push
push
lea
push
call
mov
mov
shl
add
lea
js
mov
mov
mov
sub
sub
test
jge
mov
xor
test
setne
test
jne
call
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
push
mov
call
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
lea
mov
push
mov
call
mov
mov
mov
lea
push
push
push
push
call
mov
push
lea
call
mov
cmp
jne
call
mov
mov
mov
push
push
push
call
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
mov
lea
call
jmp
call
mov
mov
push
push
push
mov
call
mov
add
test
mov
mov
jne
mov
mov
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
push
call
mov
add
mov
push
lea
mov
call
lea
call
mov
push
add
call
add
cmp
jg
lea
push
lea
push
lea
call
mov
call
test
je
push
push
mov
mov
push
push
lea
push
lea
call
mov
call
mov
mov
lea
call
jmp
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
cmp
sete
test
push
je
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
mov
mov
push
call
mov
mov
lea
call
jmp
lea
push
lea
call
mov
test
je
mov
push
push
call
add
test
setne
test
je
push
push
lea
push
lea
call
mov
call
sub
lea
fstp
call
mov
push
mov
mov
push
call
mov
mov
lea
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
add
call
add
cmp
jle
mov
push
push
call
call
mov
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
call
mov
mov
mov
mov
add
push
sub
mov
mov
mov
mov
mov
mov
mov
push
push
mov
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
lea
push
mov
call
add
mov
mov
mov
mov
cmp
jne
test
je
mov
cmp
jne
add
add
test
jne
xor
jmp
call
push
push
jmp
call
push
push
push
lea
call
push
lea
push
jmp
sbb
sbb
test
sete
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
test
je
mov
mov
push
push
push
push
call
push
mov
mov
push
call
mov
push
mov
mov
push
call
mov
mov
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
cmp
je
mov
test
je
push
call
add
mov
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
xor
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
push
lea
push
push
mov
call
test
jne
cmp
jne
mov
push
push
mov
call
cmp
jne
call
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
mov
test
push
jne
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
not
test
push
mov
je
mov
push
mov
call
cmp
je
xor
cmp
mov
jbe
mov
mov
test
je
push
push
push
call
push
lea
push
push
call
mov
test
jne
mov
add
cmp
mov
jb
pop
pop
pop
mov
mov
mov
pop
ret
mov
call
mov
test
je
jmp
lea
push
push
push
push
lea
sub
push
mov
call
mov
push
lea
push
push
call
push
lea
push
push
call
mov
lea
push
lea
push
push
mov
mov
call
test
jne
cmp
jne
mov
xor
mov
mov
mul
seto
neg
or
push
call
xor
add
test
setne
mov
test
je
lea
push
push
push
call
mov
mov
add
xor
cmp
setne
test
je
mov
push
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
lea
push
call
test
jne
mov
pop
pop
pop
mov
mov
pop
ret
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
xor
mov
mov
push
push
call
cmp
jne
mov
lea
call
pop
pop
mov
mov
mov
pop
ret
mov
push
lea
push
lea
push
lea
push
mov
mov
call
cmp
je
mov
mov
jmp
mov
cmp
jne
mov
mov
mov
mov
mov
lea
push
push
push
lea
push
push
push
call
mov
test
jge
call
mov
mov
push
push
push
push
call
add
mov
mov
push
call
mov
lea
call
pop
pop
pop
mov
mov
mov
pop
ret
push
call
cmp
mov
jne
push
call
mov
push
mov
call
mov
mov
mov
mov
push
call
mov
mov
mov
mov
lea
mov
add
sub
jne
mov
mov
mul
seto
mov
neg
or
push
call
add
xor
test
mov
jbe
lea
lea
xor
mov
mov
jmp
lea
mov
test
jl
mov
cmp
jge
mov
add
mov
test
jne
xor
mov
jmp
push
call
mov
test
mov
je
mov
mov
lea
test
mov
je
test
jne
xor
jmp
push
call
push
push
call
mov
mov
mov
mov
mov
push
call
sub
sub
add
add
cmp
jb
mov
mov
mov
lea
lea
mov
add
sub
jne
lea
push
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
push
push
push
or
mov
mov
push
push
mov
call
mov
push
mov
call
add
test
jge
call
mov
mov
mov
push
push
push
push
push
call
add
mov
lea
push
call
jmp
call
mov
mov
call
test
je
push
mov
call
mov
push
call
mov
lea
push
call
mov
mov
add
lea
lock
dec
test
jg
mov
mov
push
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
push
push
call
test
jne
lea
call
mov
mov
mov
push
push
lea
call
mov
lea
push
push
mov
mov
push
call
mov
mov
mov
call
mov
lea
call
mov
mov
pop
mov
pop
ret
call
mov
mov
push
mov
push
push
push
push
mov
call
mov
add
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
push
call
add
mov
mov
test
je
mov
mov
lea
test
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
mov
mov
mov
mov
test
je
mov
push
call
mov
mov
mov
mov
pop
ret
int3
int3
int3
push
mov
push
mov
push
push
mov
mov
mov
mov
push
push
push
call
mov
mov
sub
mov
sub
mov
lea
sub
add
or
mov
jge
push
mov
call
mov
mov
mov
push
push
add
push
mov
lea
push
call
add
test
jl
mov
cmp
jg
mov
mov
mov
pop
pop
pop
mov
pop
ret
push
call
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
push
mov
mov
push
call
add
mov
mov
mov
test
je
mov
mov
mov
lea
test
je
mov
mov
mov
mov
push
lea
push
lea
call
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
mov
push
call
add
push
push
call
int3
int3
int3
push
mov
mov
lea
push
push
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
lea
push
push
mov
call
mov
mov
add
push
push
push
push
push
push
push
call
mov
cmp
jne
xor
pop
mov
mov
mov
pop
ret
push
push
lea
push
push
lea
push
push
call
test
je
mov
mov
test
jbe
push
lea
push
lea
call
mov
mov
mov
push
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
lea
push
push
lea
push
push
call
test
jne
push
call
pop
xor
pop
mov
mov
mov
pop
ret
push
call
mov
pop
mov
pop
mov
mov
pop
ret
int3
push
mov
push
push
mov
push
mov
sub
push
mov
test
push
mov
push
mov
mov
jne
call
cmp
jne
call
mov
cmp
mov
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
lea
call
push
call
add
add
mov
mov
pop
mov
mov
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
push
push
mov
mov
push
mov
mov
mov
mov
cmp
mov
mov
je
push
lea
mov
or
mov
lea
mov
mov
mov
sub
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
push
call
add
cmp
mov
mov
jne
pop
mov
pop
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
sub
test
jne
call
push
push
push
lea
call
push
lea
push
call
mov
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
cmp
jne
call
push
push
push
lea
call
push
lea
push
call
push
lea
call
mov
mov
push
lea
call
mov
lea
push
lea
push
mov
call
mov
mov
lea
call
test
pop
je
lea
push
lea
push
call
mov
mov
push
mov
push
call
add
mov
mov
lea
call
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
int3
push
mov
mov
mov
sub
push
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
push
push
push
mov
mov
sub
push
mov
sub
cmp
pop
jae
push
push
lea
mov
mov
mov
call
mov
lea
push
lea
call
push
lea
push
call
add
mov
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
mov
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
sub
push
mov
mov
test
je
mov
push
push
call
add
cmp
je
mov
call
test
je
lea
push
mov
call
mov
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
push
push
call
add
push
lea
call
mov
lea
push
lea
push
call
add
mov
mov
mov
lea
call
mov
lea
call
mov
mov
pop
mov
mov
pop
ret
call
push
push
push
lea
call
push
lea
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
call
add
test
je
mov
push
push
push
call
add
push
lea
call
mov
mov
lea
push
push
call
add
mov
mov
lea
call
mov
pop
mov
mov
mov
pop
ret
mov
mov
push
mov
call
mov
mov
mov
mov
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
test
mov
jne
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
push
mov
call
mov
mov
push
push
push
push
call
call
mov
mov
push
push
push
call
push
call
mov
add
test
jle
push
push
lea
push
lea
call
mov
test
je
mov
push
push
call
add
mov
call
xor
test
setne
test
je
mov
mov
mov
call
add
mov
mov
lea
push
push
lea
push
lea
call
mov
call
mov
mov
push
push
push
lea
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
je
sub
je
sub
jne
push
lea
push
lea
call
mov
call
push
push
lea
push
jmp
push
lea
push
lea
call
mov
call
sub
fstp
lea
push
push
call
add
jmp
push
lea
push
lea
call
mov
call
test
mov
jne
mov
push
push
lea
push
call
add
mov
push
push
call
test
je
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
mov
push
push
push
call
add
mov
lea
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
sub
test
jg
pop
mov
push
push
call
test
je
lea
push
call
push
push
call
test
jne
call
push
push
mov
call
mov
mov
push
push
push
call
mov
add
pop
pop
mov
mov
pop
ret
call
push
lea
mov
mov
call
mov
push
lea
call
mov
push
lea
push
call
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
push
mov
mov
push
push
push
mov
call
push
mov
mov
call
mov
mov
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
mov
lea
call
mov
mov
add
cmp
ja
jmp
call
mov
mov
mov
push
push
push
call
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
mov
call
push
call
add
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
mov
push
push
push
mov
call
add
call
push
push
lea
call
push
lea
push
call
push
lea
push
mov
call
mov
push
lea
call
mov
lea
call
call
mov
mov
push
push
push
mov
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
add
call
push
push
push
lea
call
push
lea
push
call
mov
lea
call
mov
pop
mov
mov
pop
ret
push
inc
dec
add
dec
add
inc
dec
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
push
mov
push
push
or
test
jne
or
mov
mov
call
push
mov
mov
call
add
mov
mov
test
jne
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
call
mov
mov
push
push
push
call
mov
mov
add
mov
cmp
je
call
cmp
mov
jne
call
mov
mov
mov
push
push
push
push
call
add
cmp
jne
call
mov
jmp
call
mov
mov
push
push
push
call
add
mov
mov
pop
pop
mov
pop
ret
mov
push
push
push
call
add
test
je
mov
test
jne
lea
call
mov
mov
test
jne
mov
mov
push
mov
lea
push
push
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
call
mov
mov
pop
pop
mov
pop
ret
cmp
jne
cmp
jbe
mov
call
mov
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
mov
sub
push
push
call
mov
mov
push
push
push
call
call
mov
mov
push
push
call
mov
push
call
push
push
call
xor
add
test
mov
mov
jne
mov
mov
mov
push
lea
push
lea
call
mov
test
je
test
je
push
call
add
mov
call
mov
mov
push
push
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
call
mov
add
call
push
push
push
lea
call
push
lea
push
call
int3
push
mov
push
push
mov
push
mov
sub
push
push
mov
mov
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
lea
call
test
jne
mov
call
push
push
push
lea
call
push
lea
push
call
call
mov
push
push
mov
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
mov
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
je
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
int3
push
mov
mov
push
push
push
mov
sub
push
mov
push
mov
test
jne
call
push
push
push
lea
call
push
lea
push
call
push
mov
push
lea
call
mov
push
lea
push
mov
call
mov
push
push
lea
push
call
add
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
mov
mov
add
lea
or
lock
dec
test
jg
mov
mov
push
mov
call
call
mov
mov
push
push
call
call
mov
mov
push
push
push
mov
call
push
push
push
call
push
call
add
push
mov
mov
call
mov
push
push
mov
call
mov
test
pop
jne
call
push
push
push
lea
call
push
lea
push
call
push
push
push
push
call
mov
add
push
push
mov
call
call
mov
mov
mov
push
push
push
call
call
mov
mov
push
push
call
add
mov
mov
add
lea
or
lock
dec
test
pop
pop
jg
mov
mov
push
mov
call
mov
mov
mov
pop
ret
mov
ret
mov
xor
mov
mov
mov
mov
mov
ret
push
call
test
pop
je
mov
jmp
xor
ret
push
mov
mov
sub
call
test
je
push
call
pop
mov
pop
ret
push
mov
jmp
dec
cmp
je
mov
call
add
cmp
jne
pop
ret
jmp
push
mov
jmp
dec
cmp
je
mov
push
call
add
cmp
jne
pop
ret
jmp
push
mov
push
mov
push
call
push
call
add
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
jge
call
mov
cmp
jl
mov
cmp
jne
push
push
call
push
call
add
mov
mov
jmp
mov
cmp
jne
mov
shl
push
call
push
push
mov
call
add
mov
jmp
mov
cmp
jg
mov
cmp
jge
mov
sub
push
lea
push
call
jmp
jle
sub
push
lea
push
call
pop
pop
mov
jmp
mov
test
jne
mov
cdq
and
add
sar
cmp
jl
mov
cmp
jle
mov
jmp
cmp
jge
push
pop
add
cmp
mov
jl
mov
mov
cmp
jl
shl
push
call
mov
mov
shl
push
push
mov
shl
push
push
call
mov
mov
sub
push
lea
push
call
push
call
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
test
push
mov
jge
call
cmp
jl
push
lea
push
call
mov
push
lea
call
pop
pop
ret
push
mov
mov
push
not
test
mov
push
mov
je
push
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
jmp
call
push
push
mov
call
xor
cmp
jle
mov
lea
push
mov
call
inc
cmp
jl
pop
pop
pop
ret
mov
ret
mov
ret
mov
and
mov
ret
xor
ret
push
mov
push
mov
test
jne
mov
jmp
and
push
push
push
call
test
mov
pop
pop
jne
push
push
call
test
pop
pop
jne
lea
push
push
call
test
pop
pop
jne
mov
jmp
mov
xor
pop
pop
pop
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
xor
pop
ret
mov
and
mov
ret
push
push
push
mov
call
test
pop
pop
je
mov
add
neg
sbb
and
jmp
xor
pop
ret
push
mov
push
add
call
ret
mov
add
call
ret
mov
add
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
call
pop
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
mov
push
push
push
call
pop
ret
mov
mov
mov
push
call
ret
mov
mov
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
mov
push
mov
push
call
ret
push
mov
push
mov
push
mov
push
call
ret
push
mov
mov
push
mov
push
call
ret
mov
call
xor
ret
mov
mov
ret
xor
inc
ret
mov
mov
mov
mov
xor
ret
xor
inc
ret
xor
inc
ret
mov
and
mov
ret
push
mov
test
jne
mov
jmp
and
push
mov
cmp
je
mov
mov
call
test
je
mov
mov
push
call
mov
mov
xor
jmp
mov
pop
pop
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jne
mov
jmp
and
xor
inc
ret
mov
test
jl
cmp
jge
mov
lea
ret
push
push
push
push
call
int3
push
mov
push
push
lea
push
push
call
add
test
jge
push
call
mov
leave
ret
push
mov
test
jne
mov
jmp
and
push
push
call
test
pop
pop
jne
push
push
call
test
pop
pop
jne
mov
jmp
mov
mov
mov
push
call
xor
pop
ret
mov
test
jne
mov
jmp
and
mov
test
je
mov
mov
push
call
xor
jmp
mov
ret
mov
test
je
mov
push
call
ret
push
mov
call
xor
cmp
jne
cmp
je
push
push
lea
push
push
push
call
pop
ret
push
mov
push
xor
cmp
jle
cmp
jne
call
cmp
push
jle
lea
push
mov
call
mov
push
push
call
test
pop
pop
je
inc
cmp
jl
xor
pop
pop
pop
ret
xor
inc
jmp
mov
mov
lea
test
je
mov
mov
mov
ret
push
push
push
mov
call
push
call
add
test
je
mov
mov
mov
add
pop
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
cmp
mov
jne
mov
push
call
push
call
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
mov
cmp
mov
je
mov
lea
push
call
mov
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
call
test
jl
mov
test
je
mov
lea
push
push
call
mov
test
mov
je
mov
push
call
and
cmp
je
mov
mov
cmp
jne
mov
xor
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
je
cmp
jne
cmp
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
jmp
cmp
jne
cmp
jne
mov
cmp
je
mov
lea
push
push
call
cmp
je
push
lea
call
push
or
push
call
test
pop
pop
jne
mov
jmp
xor
test
je
and
push
call
test
jne
inc
mov
mov
imul
lea
cmp
jne
jmp
mov
cmp
mov
jne
mov
mov
test
je
mov
push
call
and
push
call
push
call
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
call
mov
and
mov
movzx
and
test
jge
mov
lea
call
mov
lea
call
ret
movsx
cmp
jbe
mov
jmp
test
je
mov
shl
cmp
ja
push
call
test
pop
je
movsx
shl
call
mov
jmp
movsx
shl
push
lea
call
mov
jmp
xor
test
je
movsx
xor
test
jle
mov
sub
dec
shl
add
mov
movsx
inc
cmp
jl
mov
mov
test
je
sub
lea
mov
mov
mov
mov
mov
mov
mov
lea
push
call
mov
test
jne
lea
push
push
lea
push
movsx
push
movzx
push
push
lea
push
push
call
mov
lea
push
call
jmp
push
mov
call
mov
mov
lea
mov
and
mov
and
push
mov
mov
mov
push
push
call
and
mov
call
ret
push
mov
call
xor
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
push
call
mov
mov
mov
lea
push
push
push
call
mov
mov
cmp
jne
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
mov
test
je
push
lea
call
push
mov
or
push
call
test
pop
pop
mov
je
mov
test
je
push
and
call
cmp
jne
inc
mov
imul
add
cmp
jne
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
mov
call
ret
mov
mov
call
imul
push
mov
mov
mov
mov
add
call
mov
test
je
xor
test
setne
mov
dec
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
or
test
je
mov
push
call
xor
jmp
push
push
mov
call
mov
mov
mov
mov
mov
pop
ret
push
mov
call
mov
mov
test
jne
xor
jmp
push
call
pop
mov
mov
and
test
je
push
push
call
jmp
xor
test
je
mov
xor
inc
call
ret
push
mov
call
mov
mov
call
test
je
xor
inc
jmp
mov
xor
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
or
cmp
mov
jne
cmp
je
mov
push
call
jmp
cmp
je
mov
push
call
xor
call
ret
push
mov
call
mov
push
lea
call
lea
xor
push
mov
call
mov
cmp
mov
je
mov
cmp
jne
push
call
push
push
lea
push
push
call
mov
push
push
lea
call
mov
push
push
lea
mov
call
mov
push
push
lea
mov
call
mov
push
lea
push
push
push
push
mov
push
call
mov
lea
push
call
lea
push
call
lea
push
call
lea
push
call
push
call
call
ret
push
mov
push
xor
lea
mov
mov
mov
cmp
je
push
push
call
mov
mov
mov
pop
pop
ret
push
mov
call
mov
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
cmp
jle
lea
push
mov
call
mov
mov
add
mov
cmp
je
inc
cmp
jl
or
test
je
mov
push
call
xor
call
ret
or
test
je
mov
push
call
xor
inc
jmp
push
mov
mov
mov
cmp
push
jne
test
jne
xor
inc
jmp
lea
test
jl
cmp
ja
push
push
push
call
add
test
je
mov
mov
push
mov
push
call
inc
xor
inc
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
push
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
push
mov
test
jne
mov
jmp
mov
and
and
push
lea
push
push
push
call
mov
test
jl
mov
mov
lea
push
push
push
call
mov
test
jl
mov
push
mov
push
call
mov
mov
test
je
mov
push
call
mov
test
je
mov
push
call
mov
pop
leave
ret
push
mov
call
mov
xor
test
setne
test
jne
push
call
and
mov
and
push
pop
lea
push
push
push
call
test
mov
jl
and
mov
lea
push
push
call
test
mov
jl
test
je
mov
cmp
je
test
jne
movzx
cmp
jne
push
push
call
pop
movzx
mov
pop
jmp
sub
je
sub
je
dec
je
movzx
jmp
push
jmp
push
jmp
push
pop
test
je
mov
mov
push
push
call
mov
or
test
je
mov
push
call
mov
call
ret
push
mov
push
push
push
push
mov
xor
cmp
jne
mov
jmp
mov
lea
push
push
mov
call
cmp
jl
mov
push
xor
cmp
jbe
mov
lea
push
push
push
call
cmp
jl
mov
mov
cmp
je
mov
push
push
call
mov
mov
movzx
inc
cmp
jl
push
mov
push
call
mov
cmp
je
movzx
cmp
jle
mov
jmp
cmp
mov
jle
mov
add
mov
movzx
cmp
mov
jne
mov
mov
mov
or
mov
cmp
jne
mov
push
push
call
pop
mov
mov
pop
inc
movsx
inc
inc
add
cmp
jl
movzx
movzx
sub
je
dec
je
dec
je
dec
jne
push
jmp
xor
jmp
push
jmp
push
pop
mov
mov
mov
mov
mov
push
mov
mov
push
call
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
push
mov
push
mov
test
mov
mov
mov
mov
je
test
je
test
je
test
je
push
mov
mov
movs
movs
movs
movs
mov
mov
movs
movs
movs
xor
cmp
movs
mov
mov
mov
je
lea
push
push
mov
mov
push
call
mov
xor
cmp
jl
mov
lea
push
push
push
mov
mov
push
call
mov
cmp
jl
mov
push
lea
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
push
push
push
push
call
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
call
mov
lea
push
push
push
mov
call
test
jl
mov
cmp
je
push
mov
push
push
call
mov
jmp
mov
lea
push
push
push
mov
mov
call
mov
cmp
jl
mov
mov
lea
push
push
call
mov
cmp
jl
mov
mov
lea
push
lea
push
push
call
mov
cmp
jl
mov
lea
push
mov
mov
push
call
mov
cmp
je
xor
cmp
jbe
mov
mov
lea
push
push
push
call
mov
cmp
jl
cmp
je
mov
movzx
inc
cmp
jl
jmp
mov
mov
lea
push
push
push
call
mov
cmp
jl
mov
lea
push
push
mov
mov
push
call
mov
cmp
jl
mov
mov
lea
push
push
call
cmp
je
push
push
push
push
call
mov
mov
add
push
push
call
mov
cmp
je
mov
push
call
mov
push
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
pop
jmp
mov
mov
pop
xor
pop
call
leave
ret
push
push
push
push
call
ret
mov
push
push
push
call
ret
push
mov
push
and
push
mov
push
push
call
push
mov
push
mov
push
push
lea
push
push
mov
call
test
je
mov
jmp
mov
push
mov
call
mov
lea
push
push
mov
push
call
test
jge
mov
jmp
test
je
mov
mov
imul
mov
call
mov
mov
push
lea
call
mov
mov
mov
call
cmp
je
test
je
xor
cmp
mov
setne
dec
mov
mov
test
je
mov
push
call
mov
pop
pop
pop
leave
ret
push
mov
mov
test
mov
je
push
lea
push
push
call
mov
test
je
mov
push
call
mov
test
je
mov
push
call
pop
ret
push
mov
call
mov
push
lea
call
lea
push
lea
push
lea
push
lea
push
push
call
test
jl
and
and
lea
push
movzx
push
push
movzx
push
lea
push
call
mov
test
mov
jge
or
test
je
mov
push
call
mov
jmp
mov
lea
push
lea
push
push
call
mov
test
jge
mov
or
test
je
mov
push
call
mov
jmp
lea
push
push
push
push
call
or
mov
mov
test
je
mov
push
call
mov
call
ret
mov
test
jne
mov
jmp
push
push
push
push
push
call
add
ret
push
mov
call
mov
mov
call
mov
xor
lea
mov
mov
mov
call
mov
mov
lea
call
lea
mov
call
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
call
mov
mov
mov
mov
mov
test
mov
je
mov
push
call
lea
call
lea
call
lea
call
mov
sub
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
mov
sub
call
or
mov
call
call
ret
lea
push
push
push
add
call
ret
push
mov
mov
test
je
mov
push
call
test
je
push
call
pop
mov
pop
ret
push
mov
call
mov
mov
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
mov
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
mov
xor
cmp
je
cmp
jne
mov
cmp
jne
push
push
call
test
pop
pop
je
inc
mov
imul
add
cmp
jne
mov
jmp
imul
mov
mov
mov
lea
push
push
lea
push
mov
push
call
test
jge
xor
jmp
push
lea
push
mov
push
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
mov
call
test
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
mov
lea
mov
call
test
je
push
xor
cmp
push
jle
push
lea
call
mov
push
push
push
call
push
mov
call
inc
cmp
jl
lea
call
xor
cmp
jle
lea
push
mov
call
mov
add
mov
push
mov
mov
call
push
mov
mov
call
mov
mov
mov
add
push
add
push
push
lea
call
push
mov
call
mov
test
mov
je
mov
call
push
call
pop
inc
cmp
jl
lea
call
pop
pop
pop
leave
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
pop
mov
push
push
push
mov
call
cmp
je
cmp
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
push
mov
call
mov
call
mov
call
push
lea
call
xor
push
mov
mov
call
mov
mov
push
push
call
test
je
push
lea
push
push
push
call
mov
add
push
push
push
push
push
push
call
jmp
mov
push
call
pop
mov
add
call
mov
call
ret
sub
push
push
push
push
xor
push
mov
call
pop
mov
call
lea
push
push
call
cmp
jne
push
mov
call
push
mov
call
mov
cmp
je
mov
call
cmp
je
mov
lea
push
push
push
call
test
jl
push
lea
call
mov
lea
cmp
jne
push
push
push
push
push
lea
push
push
push
lea
push
mov
call
mov
call
mov
push
push
push
call
test
jge
mov
mov
call
mov
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
mov
call
jmp
mov
cmp
je
push
push
push
push
push
push
mov
call
pop
pop
xor
pop
inc
pop
add
ret
push
mov
call
mov
and
and
lea
lea
mov
push
mov
call
cmp
je
lea
push
push
push
mov
call
mov
call
mov
or
test
je
mov
push
call
call
ret
mov
push
mov
cmp
jne
call
lea
cmp
je
push
push
call
lea
call
pop
ret
push
mov
call
mov
call
lea
xor
cmp
je
push
push
call
lea
mov
cmp
je
mov
mov
lea
push
push
push
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
mov
mov
push
call
cmp
je
push
push
call
mov
or
cmp
je
mov
push
call
mov
call
call
ret
mov
ret
push
mov
call
mov
mov
cmp
jne
and
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
cmp
je
and
mov
mov
and
lea
push
push
call
push
lea
call
push
mov
mov
call
mov
add
call
push
or
call
push
lea
call
push
mov
call
mov
mov
push
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
mov
push
lea
call
push
mov
push
and
mov
call
mov
add
call
call
ret
push
mov
call
mov
xor
xor
cmp
setne
cmp
jne
call
mov
mov
mov
mov
mov
lea
push
call
lea
push
call
mov
mov
mov
mov
cmp
mov
je
mov
lea
mov
lea
push
call
mov
mov
cmp
je
cmp
jne
mov
push
mov
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
jmp
push
lea
call
lea
mov
mov
call
mov
mov
mov
lea
push
push
call
mov
mov
cmp
je
lea
push
sub
mov
lea
movs
movs
mov
movs
movs
sub
mov
lea
movs
movs
movs
push
movs
call
mov
mov
cmp
jne
mov
jmp
mov
lea
push
push
push
call
cmp
je
mov
cmp
je
mov
cmp
jl
mov
cmp
mov
mov
je
mov
push
call
mov
add
call
mov
cmp
mov
je
mov
push
call
mov
lea
push
call
lea
push
call
mov
cmp
mov
je
mov
push
call
mov
cmp
mov
je
mov
push
call
mov
or
cmp
je
mov
push
call
mov
call
ret
push
mov
call
mov
mov
lea
mov
xor
mov
call
cmp
mov
jne
xor
jmp
mov
mov
mov
imul
lea
mov
cmp
je
cmp
jne
mov
push
lea
push
push
mov
mov
call
mov
xor
cmp
je
push
mov
call
test
jne
push
mov
mov
call
pop
mov
mov
cmp
mov
je
mov
neg
lea
sbb
push
and
push
call
mov
mov
jmp
mov
call
mov
ret
mov
mov
mov
test
jne
mov
or
push
call
mov
jmp
lea
push
push
push
push
call
test
mov
jl
lea
push
lea
call
jmp
push
mov
call
jmp
push
pop
cmp
jne
push
mov
call
test
jne
and
push
lea
push
push
mov
mov
call
mov
test
je
and
mov
lea
push
push
push
mov
call
mov
test
je
and
mov
lea
push
push
mov
call
cmp
je
and
push
mov
call
pop
mov
mov
test
mov
je
push
mov
push
neg
lea
sbb
and
push
push
call
jmp
xor
mov
mov
jmp
mov
call
mov
ret
mov
mov
cmp
jne
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
jmp
lea
push
lea
call
mov
test
mov
je
mov
push
call
mov
test
mov
je
mov
push
call
or
test
je
mov
push
call
inc
xor
jmp
mov
call
ret
mov
push
mov
cmp
jne
push
call
push
mov
call
pop
ret
mov
mov
mov
mov
jmp
push
mov
test
jl
call
cmp
jl
call
mov
call
mov
pop
ret
push
push
call
mov
xor
cmp
jne
mov
jmp
cmp
push
mov
jne
push
push
call
cmp
pop
pop
mov
jne
mov
jmp
push
mov
call
push
push
push
call
add
test
je
push
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
xor
mov
xor
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
xor
mov
cmp
setne
cmp
je
xor
cmp
setne
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
jne
call
mov
call
mov
call
ret
mov
push
call
pop
mov
test
je
push
call
pop
mov
mov
mov
mov
push
push
push
push
call
add
mov
mov
call
cmp
je
xor
jmp
xor
mov
push
call
pop
ret
push
mov
push
and
push
push
lea
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
call
mov
lea
push
push
push
push
call
mov
push
push
call
add
mov
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
mov
mov
test
je
mov
test
je
mov
mov
mov
add
cmp
je
test
je
mov
add
cmp
je
test
jne
pop
pop
pop
xor
ret
mov
add
cmp
jne
lea
mov
test
je
mov
add
cmp
jne
mov
test
je
mov
add
cmp
je
jmp
xor
pop
pop
pop
mov
jmp
lea
pop
pop
pop
ret
mov
pop
pop
pop
ret
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
jmp
mov
or
je
mov
mov
dec
jne
mov
mov
jmp
mov
mov
dec
je
push
push
lea
lea
cmp
jbe
mov
rep
pop
pop
sub
ret
int3
push
mov
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
push
push
push
push
push
call
pop
pop
cmp
je
lea
push
call
or
je
mov
cmp
jne
mov
or
je
push
call
jmp
mov
push
push
call
add
push
mov
call
mov
mov
mov
mov
mov
cmp
adc
mov
add
jmp
mov
pop
ret
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
je
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
cmp
setge
cmp
je
xor
mov
cmp
setne
cmp
je
cmp
je
mov
mov
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
mov
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
mov
cmp
je
dec
je
dec
js
mov
movzx
inc
mov
jmp
push
call
pop
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
mov
inc
cmp
jne
mov
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
mov
cmp
setne
cmp
je
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
mov
push
call
pop
pop
mov
push
call
mov
push
push
push
push
call
mov
push
push
call
add
mov
call
xor
mov
cmp
sete
dec
call
ret
mov
push
call
pop
ret
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fsin
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fsin
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fcos
fstsw
sahf
jp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fcos
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fptan
fstsw
sahf
jp
fstp
cmp
jne
mov
lea
jmp
fld
fxch
fprem1
fstsw
sahf
jp
fstp
fptan
fstp
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
fld
je
fchs
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
call
cmp
jae
fld1
fadd
fld1
fsub
fmulp
fsqrt
fxch
fpatan
cmp
jne
mov
lea
jmp
ja
mov
mov
and
or
jne
and
fstp
je
fldpi
jmp
fldz
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
cmp
je
fldcw
fld1
fpatan
cmp
jne
mov
lea
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
test
je
fchs
jmp
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
je
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpnlepd
cmp
jl
cmp
jg
andpd
addsd
movq
fld
ret
fld
ret
cmpnlepd
andpd
movq
fld
ret
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
psrlq
movd
andpd
psubd
psrlq
test
jne
cmp
jl
psllq
cmp
jg
movq
fld
ret
ucomisd
jnp
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
movq
psllq
movapd
cmpltpd
cmp
jl
cmp
jg
andpd
subsd
movq
fld
ret
fldz
ret
cmpltpd
orpd
andpd
movq
fld
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
fxch
cmp
je
fprem
jmp
call
fstsw
fwait
sahf
jp
fstp
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
movq
movapd
movapd
movapd
movapd
movapd
psllq
psrlq
psrlq
andpd
movd
psubd
mov
psrlq
psllq
movd
cmp
jl
cmp
jg
movq
subsd
orpd
movq
fld
ret
movq
fld
ret
cmp
movq
je
movq
cmp
fldz
jl
fchs
ret
movapd
addsd
movq
andpd
cmpneqpd
pextrw
andpd
orpd
mov
cmp
jne
movq
fld
ret
sub
movlpd
mov
mov
add
mov
add
mov
sub
mov
call
fld
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
fst
call
call
add
ret
lea
call
push
fstcw
mov
je
cmp
je
call
test
jne
fsqrt
cmp
jne
mov
lea
jmp
test
jne
test
jne
cmp
jne
jmp
call
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
cmp
jne
mov
lea
call
pop
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fxch
fstp
fst
mov
call
add
ret
lea
call
mov
push
fstcw
cmp
je
call
and
lea
cmp
je
call
je
test
je
mov
and
jne
fyl2x
call
cmp
jne
fchs
cmp
jne
lea
mov
jmp
cmp
jne
lea
mov
call
pop
ret
lea
call
test
jne
inc
jmp
faddp
mov
jmp
test
jne
faddp
mov
jmp
xor
jmp
xor
and
or
jne
lea
call
mov
mov
and
and
cmp
jne
or
jne
test
jne
sub
mov
push
sub
fstp
fstp
fsave
call
add
pop
frstor
fld
add
test
je
mov
jmp
mov
and
or
jne
fstp
mov
and
or
je
call
mov
shr
test
je
fld
test
je
fchs
mov
jmp
fldz
test
je
fchs
jmp
fstp
fld1
jmp
fld
call
fchs
test
jne
fstp
fstp
fld
mov
jmp
fld
frndint
fcomp
mov
fstsw
sahf
jne
fmul
inc
fld
frndint
fcompp
fstsw
sahf
jne
inc
ret
fstp
ret
int3
int3
int3
int3
int3
int3
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldln2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
sub
fst
call
call
add
ret
lea
call
push
fstcw
je
mov
cmp
je
fldcw
test
je
test
jne
fldlg2
fxch
fyl2x
cmp
jne
lea
mov
jmp
test
jne
jmp
test
jne
cmp
jne
and
je
fstp
fld
mov
jmp
call
jmp
test
jne
cmp
jne
fstp
fld
mov
cmp
jne
lea
mov
call
pop
ret
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
nop
cmp
je
sub
stmxcsr
mov
and
cmp
jne
fnstcw
mov
and
cmp
lea
jne
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
call
push
push
push
push
push
mov
call
fldz
add
jmp
push
mov
push
push
call
fld
mov
mov
and
cmp
pop
pop
jne
or
push
push
fstp
call
cmp
pop
pop
jle
cmp
jle
cmp
jne
push
fld
push
push
fstp
push
call
add
jmp
fld
jmp
fld
fadd
push
sub
fstp
fld
fstp
push
push
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
fld
add
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
push
push
call
mov
mov
and
cmp
pop
pop
jne
fld
push
push
fstp
call
test
pop
pop
jle
cmp
jle
cmp
jne
fild
push
sub
fstp
fld
fstp
push
call
add
jmp
push
push
call
pop
pop
jmp
fld
push
fadd
sub
fstp
fild
fstp
fld
fstp
push
push
call
add
jmp
fldz
fcomp
fnstsw
test
jnp
fld
lea
push
push
push
fstp
call
mov
mov
add
test
jge
mov
sub
cmp
jl
jmp
mov
sub
cmp
jg
add
cmp
jle
push
sub
fstp
fld
fstp
call
fstp
fild
fstp
push
push
fld
fstp
push
push
jmp
cmp
jle
add
push
push
push
fstp
call
add
push
sub
fstp
fild
fstp
jmp
cmp
jge
fmul
push
sub
fstp
fild
fstp
fld
fstp
push
push
jmp
cmp
jge
add
push
push
push
fstp
call
add
jmp
push
push
push
fstp
call
push
fstp
push
call
add
fld
pop
pop
leave
ret
call
mov
mov
ret
call
mov
imul
add
mov
mov
shr
and
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
xor
mov
test
je
mov
add
xor
je
sub
je
test
jne
sub
jb
push
mov
shl
add
mov
shl
add
jmp
pop
add
je
mov
add
xor
je
sub
jne
pop
ret
sub
jb
mov
xor
mov
add
xor
xor
add
and
je
mov
xor
je
xor
je
shr
xor
je
xor
je
jmp
pop
lea
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
lea
pop
pop
ret
int3
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
or
jmp
mov
cmp
je
push
mov
mov
lea
push
push
push
lea
push
mov
mov
call
add
dec
mov
js
mov
mov
jmp
lea
push
push
call
pop
pop
mov
pop
pop
leave
ret
push
mov
cmp
jl
jg
cmp
jb
mov
test
jl
mov
jg
test
jb
sub
sbb
mov
mov
fild
pop
ret
call
fldz
mov
pop
ret
push
mov
sub
push
push
xor
push
lea
push
push
mov
mov
xor
call
add
cmp
je
cmp
jne
push
push
push
push
push
call
add
mov
cmp
mov
mov
jne
cmp
je
push
push
call
mov
neg
pop
sbb
pop
inc
jmp
cmp
push
mov
mov
mov
je
call
mov
call
mov
push
lea
push
push
push
call
add
mov
call
cmp
je
mov
jmp
cmp
je
call
cmp
jne
call
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
test
mov
jne
mov
push
lea
push
push
push
call
add
mov
pop
push
call
pop
pop
mov
pop
leave
ret
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
push
call
test
jne
call
jmp
xor
test
je
push
call
pop
or
ret
xor
ret
push
mov
mov
push
push
push
xor
xor
sub
je
dec
je
dec
jne
mov
jmp
mov
push
pop
jmp
mov
push
jmp
mov
push
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
mov
cmp
je
cmp
je
mov
inc
cmp
jne
mov
jmp
mov
inc
mov
sub
push
add
push
push
call
push
call
add
test
je
push
push
push
push
push
call
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
pop
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
push
push
push
mov
push
push
call
mov
push
xor
inc
push
push
call
add
inc
cmp
jb
or
jmp
push
push
lea
push
push
call
add
test
je
push
push
push
push
push
call
add
lea
sub
add
push
push
push
call
add
test
je
push
push
push
push
push
call
add
xor
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
xor
mov
call
mov
mov
push
call
pop
test
jne
mov
mov
call
mov
jmp
push
call
pop
mov
cmp
jne
mov
push
jmp
mov
push
pop
cmp
jne
push
call
pop
jmp
push
push
mov
call
pop
test
pop
jne
push
push
call
pop
pop
test
je
mov
cmp
jne
call
mov
cmp
jne
mov
jmp
cmp
jne
push
call
pop
mov
cmp
je
mov
mov
push
push
jmp
cmp
je
push
call
pop
cmp
jb
mov
cmp
je
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
call
mov
mov
mov
mov
call
cmp
je
mov
jmp
xor
push
call
pop
ret
mov
mov
mov
call
ret
push
mov
push
and
lea
push
push
push
push
push
call
mov
add
leave
ret
push
push
call
xor
mov
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
jmp
mov
push
call
pop
test
jne
call
mov
jmp
push
call
pop
mov
mov
cmp
jne
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
mov
cmp
je
cmp
je
mov
mov
mov
mov
inc
push
mov
sub
push
push
call
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
jmp
push
push
mov
call
pop
pop
test
jne
call
mov
mov
cmp
jne
mov
jmp
mov
call
mov
mov
call
mov
push
push
push
push
lea
push
call
add
cmp
jne
push
push
mov
call
pop
pop
test
je
call
cmp
jne
call
mov
mov
cmp
je
push
call
pop
mov
cmp
jne
push
call
pop
jmp
mov
mov
mov
mov
or
mov
mov
mov
mov
mov
jmp
mov
mov
call
mov
cmp
je
call
mov
mov
call
ret
xor
mov
cmp
je
push
call
pop
push
call
pop
ret
push
mov
push
and
lea
push
push
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
sub
mov
sbb
xor
push
add
push
adc
push
push
call
pop
leave
ret
push
mov
push
push
push
lea
push
call
push
push
push
push
call
mov
xor
add
adc
mov
mov
xor
pop
leave
ret
mov
mov
push
mov
lea
jmp
cmp
je
add
cmp
jb
cmp
pop
jb
test
jne
lea
cmp
jb
cmp
jae
push
push
push
call
add
test
je
mov
inc
mov
lea
ret
xor
ret
push
push
call
xor
xor
mov
mov
mov
mov
mov
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
xor
mov
cmp
setne
cmp
je
mov
jmp
inc
cmp
je
mov
cmp
je
cmp
jne
mov
inc
cmp
je
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
jmp
cmp
jne
mov
or
push
push
lea
push
call
add
cmp
je
xor
inc
cmp
jne
mov
mov
mov
jmp
mov
mov
mov
push
call
pop
test
jne
push
call
push
call
pop
pop
jmp
push
call
pop
mov
mov
mov
call
mov
lea
mov
push
push
push
lea
push
push
mov
sar
and
imul
mov
push
push
call
test
je
push
call
mov
mov
lea
push
mov
push
call
add
mov
cmp
je
xor
call
mov
cmp
je
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
jne
mov
cmp
je
mov
jmp
mov
lea
push
call
pop
test
mov
jne
mov
push
pop
push
push
lea
push
call
add
mov
mov
mov
cmp
mov
je
mov
mov
cmp
mov
je
mov
mov
mov
mov
push
call
mov
push
call
lea
mov
push
call
lea
push
push
call
add
mov
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
call
mov
mov
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
jmp
mov
push
mov
push
call
pop
pop
mov
mov
cmp
jne
push
call
push
call
push
call
add
call
mov
mov
jmp
push
push
lea
push
call
add
mov
cmp
je
cmp
jne
push
push
push
push
push
call
add
cmp
je
push
call
push
call
push
call
push
call
add
jmp
mov
push
push
push
call
add
mov
cmp
je
cmp
je
push
call
pop
lea
mov
mov
cmp
jne
push
push
call
pop
pop
cmp
jmp
cmp
je
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
call
push
mov
call
pop
pop
mov
add
mov
cmp
jae
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
push
push
call
pop
pop
test
jne
lea
push
lea
push
push
push
push
push
push
push
push
push
call
mov
push
call
push
call
pop
pop
push
call
push
call
pop
pop
push
mov
call
push
call
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
mov
jmp
mov
push
call
pop
mov
mov
mov
mov
shl
cmp
je
push
call
pop
mov
shl
cmp
je
push
call
pop
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
or
xor
mov
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
push
call
pop
test
je
push
call
pop
mov
call
mov
cmp
jne
call
mov
jmp
push
call
call
mov
call
mov
push
push
lea
push
call
add
cmp
jne
call
cmp
jne
mov
mov
call
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
xor
cmp
setne
cmp
je
push
call
pop
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
jne
push
call
pop
cmp
je
push
call
pop
cmp
je
push
call
sar
lea
push
call
pop
pop
and
imul
add
jmp
mov
test
je
call
mov
push
push
push
push
push
call
add
or
cmp
jne
push
push
push
push
call
add
mov
mov
call
mov
call
ret
mov
push
call
pop
ret
lea
push
push
push
push
push
call
add
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
or
jmp
mov
cmp
je
cmp
je
cmp
jne
cmp
je
cmp
jne
mov
lea
cmp
jbe
jmp
mov
and
mov
push
call
pop
mov
push
call
push
call
pop
pop
and
mov
test
je
or
lea
push
pop
jmp
mov
cmp
jne
push
call
pop
cmp
jne
inc
or
jmp
or
jmp
or
mov
mov
mov
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
mov
push
push
push
lea
mov
call
mov
test
je
mov
test
jne
call
mov
xor
push
push
push
push
push
call
add
cmp
je
mov
and
fldz
jmp
mov
cmp
jle
lea
push
movzx
push
push
call
add
jmp
movzx
mov
movzx
and
test
je
inc
jmp
lea
push
push
push
push
call
pop
push
lea
push
push
call
add
test
mov
je
mov
add
mov
mov
test
je
test
fldz
fstp
je
mov
jmp
test
je
cmp
fld
jne
fchs
jmp
test
je
fldz
fcom
fnstsw
test
jp
fstp
call
mov
jmp
fstp
fld
fstp
cmp
je
mov
and
fld
pop
pop
pop
leave
ret
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
test
je
mov
push
test
push
je
mov
add
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
jne
sub
jmp
sub
jmp
sub
jmp
sub
mov
test
jne
mov
shr
jne
jmp
mov
add
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
mov
pop
pop
pop
ret
mov
xor
mov
mov
pop
pop
pop
ret
mov
mov
pop
pop
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
cmp
je
mov
mov
cmp
jne
push
push
call
pop
pop
jmp
push
lea
push
push
push
push
push
push
push
call
add
cmp
jne
call
mov
jmp
add
cmp
je
mov
and
pop
leave
ret
push
push
push
call
add
ret
mov
ret
mov
ret
push
push
call
and
mov
mov
mov
jmp
mov
mov
mov
xor
cmp
sete
mov
ret
mov
and
mov
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
mulsd
movlpd
fld
add
ret
movlpd
mulsd
subsd
mulsd
movlpd
fld
add
ret
jmp
nop
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fwait
mov
shl
sar
rol
mov
and
xlat
movsx
and
mov
add
add
jmp
cmp
jne
mov
or
and
mov
jmp
mov
mov
fldcw
mov
fxam
mov
fstsw
mov
fxch
mov
fxam
fstsw
fxch
mov
shl
sar
rol
mov
and
xlat
mov
shl
sar
rol
mov
and
xlat
shl
shl
or
movsx
and
mov
add
add
jmp
call
fxch
fstp
ret
call
jmp
fstp
fstp
fldz
ret
fstp
fstp
fld1
ret
fstp
fld
test
je
mov
ret
mov
fadd
ret
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fld
test
je
fxch
fstp
fld
test
je
mov
jmp
mov
faddp
ret
fstp
fstp
fld
cmp
jg
mov
or
ret
or
je
fchs
ret
int3
int3
int3
int3
int3
int3
fld
frndint
fsub
fxch
fchs
f2xm1
fld1
faddp
fscale
fstp
ret
mov
and
or
mov
fldcw
ret
test
je
mov
ret
fadd
mov
ret
mov
and
cmp
je
fld
ret
mov
sub
or
mov
mov
mov
shld
shl
mov
mov
fld
add
test
mov
ret
mov
and
cmp
je
ret
mov
ret
cmp
je
fldcw
pop
ret
mov
cmp
je
and
je
fstsw
and
je
mov
call
pop
ret
fldcw
pop
ret
sub
fst
mov
add
and
jmp
sub
fst
mov
add
and
je
cmp
je
mov
cmp
je
and
jne
fstsw
and
je
mov
cmp
je
call
pop
ret
call
pop
ret
fldcw
pop
ret
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jae
fmul
jmp
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
mov
jbe
fmul
jmp
int3
int3
int3
int3
push
mov
add
mov
mov
mov
mov
mov
jmp
push
mov
add
mov
fstp
mov
mov
mov
mov
mov
lea
lea
push
push
push
call
add
fld
cmp
je
fldcw
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
or
je
call
fsubrp
jmp
fld
fabs
fld
fcompp
fstsw
fwait
test
jne
call
or
je
fld
call
fxch
call
fsubrp
fdivp
ret
mov
call
or
je
call
fld1
fchs
fxch
fscale
jmp
fstp
fld
jmp
fstp
fld
ret
ret
call
jmp
jmp
mov
call
jmp
fldl2e
fmulp
xor
call
not
test
je
call
fxch
fstp
test
jne
not
fld1
faddp
fscale
jmp
call
faddp
or
jne
fld1
fadd
faddp
ret
fld
fld1
or
jne
fadd
fchs
fxch
fdivp
ret
int3
int3
int3
int3
push
mov
add
push
fstcw
fwait
cmp
je
call
or
call
pop
leave
ret
fxch
fst
fxch
fst
jmp
push
mov
add
push
fstcw
cmp
je
call
or
and
call
pop
leave
ret
fst
jmp
push
mov
add
push
push
push
call
add
push
push
call
add
fstcw
or
mov
call
call
pop
leave
ret
and
cmp
jne
fst
mov
or
je
cmp
je
cmp
je
or
je
movsx
mov
jmp
mov
and
jne
fstsw
and
je
mov
jmp
fldcw
fwait
ret
mov
and
or
je
cmp
je
jmp
mov
and
cmp
je
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jae
fmul
jmp
mov
fld
fxch
fscale
fstp
fld
fabs
fcomp
fstsw
sahf
jbe
fmul
push
push
mov
inc
mov
test
jne
cld
lea
lea
movs
movs
cmp
je
lea
lea
movs
movs
fstp
lea
lea
push
push
mov
mov
movsx
push
call
add
pop
pop
fld
jmp
push
mov
add
push
push
push
call
add
fstcw
and
call
call
pop
leave
ret
push
mov
add
push
mov
mov
and
cmp
jne
or
mov
mov
mov
shld
mov
mov
fld
jmp
fld
pop
leave
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
movlpd
mulsd
movlpd
cvtsd2si
addsd
movlpd
subsd
movapd
mulsd
unpcklpd
add
movsd
and
movapd
lea
shl
add
mulpd
subsd
mulsd
subsd
movlpd
unpcklpd
movsd
subsd
mulpd
subpd
movapd
mulsd
subsd
mulpd
mulpd
subsd
movapd
subsd
movlpd
addsd
subsd
mulsd
mulpd
mulsd
mulpd
mulpd
addpd
mulsd
addpd
mulpd
movsd
addsd
mulpd
movsd
addsd
addpd
movlpd
subsd
subsd
addsd
mulpd
addsd
addsd
addsd
addsd
addsd
unpckhpd
addsd
sub
addsd
movlpd
fld
add
ret
jg
pextrw
and
pinsrw
sub
movlpd
subsd
movlpd
fld
add
ret
jmp
lea
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
pextrw
and
sub
cmp
ja
unpcklpd
movapd
mulpd
cvtsd2si
movapd
addpd
movapd
subpd
movlpd
add
movapd
mulpd
and
mulsd
mov
mulpd
shl
subpd
mulpd
add
shl
add
addsd
movapd
subpd
movlpd
shl
lea
andpd
movapd
add
subpd
unpckhpd
divsd
subpd
movapd
subsd
mulpd
subpd
movapd
mulpd
movapd
mulpd
addsd
movapd
mulpd
addpd
addpd
mulpd
addpd
addpd
movapd
mulpd
mulpd
addpd
movapd
mulpd
addpd
movapd
mulpd
mulsd
mulpd
mulpd
movsd
addpd
movsd
mulsd
unpckhpd
addsd
unpckhpd
addsd
subsd
addsd
movsd
movlpd
unpckhpd
addsd
mulsd
addsd
addsd
addsd
movlpd
mulsd
movlpd
andpd
mulsd
mulsd
subsd
subsd
subsd
mulsd
movsd
subsd
addsd
subsd
addsd
subsd
sub
addsd
movlpd
fld
add
ret
jg
sub
shr
cmp
jne
movsd
mulsd
movlpd
mulsd
addsd
mulsd
movlpd
fld
add
ret
jmp
mov
lea
add
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
mulsd
addsd
mulsd
addsd
pshufd
addsd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pmovmskb
psllq
andpd
psrlq
movsd
movlpd
movsd
subsd
mulsd
addsd
subsd
mulsd
movsd
andpd
psllq
pextrw
orpd
sub
add
mulsd
mulsd
movapd
mulsd
mulsd
subsd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
subpd
movsd
mulsd
and
shl
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
pinsrw
addsd
pshufd
subsd
addsd
orpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
(bad)
fwait
inc
add
inc
add
dec
add
xchg
inc
add
pushf
inc
add
sbb
inc
add
inc
add
sbb
shl
add
jg
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
cmps
inc
add
loopne
add
movs
inc
add
inc
add
movs
inc
add
cmps
inc
add
inc
add
imul
inc
add
add
add
add
je
and
popa
add
add
add
bound
push
add
je
jae
add
push
add
arpl
push
add
js
je
and
inc
add
jb
ins
add
je
add
add
inc
add
ins
add
dec
add
ins
add
push
add
add
imul
dec
add
ins
add
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
add
arpl
jb
imul
outs
add
add
add
dec
add
push
add
je
and
inc
add
jae
arpl
jb
imul
outs
add
add
dec
add
outs
add
and
push
add
jne
jb
arpl
add
add
ins
add
add
add
outs
add
jb
arpl
add
add
add
ins
add
add
add
add
add
bound
push
add
je
add
dec
add
push
add
je
dec
add
outs
add
add
add
dec
add
outs
add
jb
dec
add
outs
add
add
dec
add
je
imul
add
add
inc
dec
outs
jne
add
cmp
add
add
add
inc
add
add
add
add
inc
add
inc
add
sbb
inc
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
gs
add
add
loope
add
jg
add
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
inc
add
inc
add
mov
add
mov
add
inc
add
loop
add
add
inc
add
inc
add
mov
add
inc
add
imul
imul
add
add
inc
add
add
add
add
add
loop
add
mov
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
mov
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
mov
inc
add
mov
add
inc
add
add
add
add
add
jbe
add
ins
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
push
add
add
inc
add
add
add
add
add
mov
add
push
add
add
mov
add
adc
add
dec
mov
add
push
add
add
push
add
add
add
and
add
add
add
dec
add
dec
add
add
add
add
outs
add
add
je
popa
add
ins
add
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jbe
add
bound
pop
add
add
add
add
add
je
add
and
add
jb
outs
add
add
outs
add
add
je
add
imul
inc
add
add
add
add
jae
add
jbe
add
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
dec
add
add
add
jb
outs
add
dec
add
add
add
add
add
add
dec
add
dec
add
add
add
outs
add
jb
outs
add
dec
add
outs
add
add
jb
xor
xor
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
add
jb
jbe
add
xor
xor
add
and
add
dec
add
dec
add
add
add
add
bound
pop
add
add
add
add
add
je
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jb
bound
pop
add
add
add
add
jo
add
sub
xor
sub
xor
add
inc
add
add
inc
add
add
add
add
jae
add
je
popa
add
ins
add
add
add
add
inc
add
add
inc
add
add
add
add
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
jne
js
push
add
add
push
add
jo
add
add
add
add
dec
add
dec
add
add
add
add
popa
add
ins
add
add
outs
add
add
and
add
add
add
dec
add
dec
add
add
add
imul
push
add
add
add
add
xor
xor
add
add
inc
add
add
inc
add
add
add
add
push
add
outs
add
push
add
jb
jbe
add
xor
xor
add
and
add
add
dec
add
dec
add
add
add
add
dec
add
push
add
je
add
xor
add
add
and
add
add
dec
add
push
add
je
add
xor
add
add
inc
add
add
inc
add
add
add
add
imul
popa
add
ins
add
inc
add
add
inc
add
add
add
add
data16
jne
ins
add
add
je
add
jae
imul
add
and
add
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
ins
dec
add
outs
dec
add
dec
add
outs
dec
add
jo
add
dec
add
jno
add
dec
add
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
dec
add
outs
dec
add
jo
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
ins
dec
add
add
fsubr
add
outs
dec
add
outs
dec
add
dec
add
add
add
ins
dec
add
outs
dec
add
jo
add
add
add
ins
dec
add
dec
add
outs
dec
add
outs
dec
add
dec
add
dec
add
add
add
jno
add
dec
add
jno
add
dec
add
dec
add
jb
add
jb
add
jb
add
jno
add
add
jno
add
add
dec
add
jb
add
jb
add
jb
add
jecxz
add
rol
dec
ins
gs
jne
jns
imul
inc
dec
ins
gs
imul
push
add
add
inc
add
add
add
dec
add
dec
add
inc
add
add
add
add
add
inc
add
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
inc
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
add
cmp
add
inc
add
cmp
mov
inc
add
inc
add
inc
add
rol
rol
mov
inc
add
inc
add
inc
add
add
jae
je
add
add
add
xor
add
add
pop
add
add
inc
add
add
add
add
add
inc
add
pop
das
mov
rcl
xchg
adc
add
push
or
cmp
rcl
cmp
mov
in
add
in
add
rol
push
outs
imul
outs
and
arpl
je
outs
outs
add
add
ins
loopne
add
add
add
add
add
add
add
add
inc
outs
jb
js
je
jb
arpl
jae
add
arpl
gs
ins
add
ss
add
gs
push
push
je
arpl
jne
jb
outs
je
add
jb
gs
xor
cs
ins
add
add
dec
inc
pop
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pusha
jbe
add
add
add
cmp
push
jbe
add
pop
dec
add
cmp
dec
jbe
add
pop
dec
add
inc
add
dec
add
pop
dec
add
jbe
add
pop
dec
add
sub
dec
add
pop
dec
add
inc
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
sub
add
add
add
cmp
add
cmp
add
add
ins
imul
test
scas
adc
ret
loopne
or
cmp
loop
test
int
dec
mov
ret
retf
stos
stos
add
int3
xchg
mov
jno
add
mov
sbb
dec
jmp
or
pop
xor
imul
movs
pop
test
sub
data16
inc
xchg
sti
ja
push
nop
mov
mov
mov
push
lock
retf
xor
sub
addr16
(bad)
mov
mov
sbb
shl
mov
pop
push
stos
mov
jb
cwde
outs
aaa
mov
xlat
push
cmps
sub
in
sub
pop
sahf
cmps
or
fcmove
pop
into
push
push
dec
push
jnp
add
les
xchg
dec
jmp
jg
xchg
in
stos
add
mov
pop
jb
nop
inc
push
addr16
jne
push
mov
mov
call
cmp
loope
idiv
cmp
arpl
sbb
cmps
adc
scas
pusha
out
lds
jp
mov
fisub
xor
enter
clc
xlat
cmp
adc
scas
(bad)
cmc
mov
loopne
mov
pop
cmps
outs
sub
(bad)
inc
and
ret
pop
inc
cmp
pop
dec
mov
inc
retf
add
adc
fisub
sbb
rcr
cld
out
scas
fidiv
xchg
scas
cs
stc
xchg
adc
addr16
bound
pop
sbb
arpl
xor
scas
add
add
in
xchg
pop
ins
cmp
xor
xchg
outs
push
jmp
sbb
pop
xchg
int3
and
push
lock
(bad)
xchg
mov
and
mov
cld
pushf
xor
pop
and
pop
jne
cwde
mov
daa
retf
neg
mov
xchg
imul
mov
ins
sub
loop
repz
sub
cmp
xor
sar
or
cmp
xchg
sbb
in
pop
jb
pop
fld
test
sub
mov
cs
jmp
xchg
bound
(bad)
ins
and
stos
push
lods
mov
mov
mov
xchg
(bad)
cmps
or
mov
mov
bound
dec
imul
sbb
cmp
mov
pop
sti
repnz
mul
mov
clc
mov
xchg
mov
ret
(bad)
add
cli
call
ja
adc
mov
push
sbb
mov
int3
ret
jl
popa
add
cli
ret
lods
repnz
stos
pop
sub
inc
xor
or
xchg
icebp
sbb
xchg
lds
mov
and
push
or
cli
jmp
dec
fimul
mov
in
push
xor
ret
pop
sbb
retf
push
retf
sar
mov
mov
dec
or
les
jmp
mov
test
leave
or
dec
jp
cvtpi2ps
jg
and
(bad)
adc
jle
outs
(bad)
sbb
jl
loop
(bad)
push
jnp
sbb
push
dec
jecxz
adc
imul
pop
aas
stc
cmp
and
scas
push
imul
cmps
repz
push
cmp
jb
repnz
or
or
push
mov
mov
pop
iret
push
out
addr16
cmp
sti
jg
cdq
add
retf
and
es
bnd
call
push
mov
stos
rcl
cmp
cmp
xor
inc
test
and
or
daa
sar
clc
sar
movs
push
or
mov
stc
icebp
ret
mov
mov
push
inc
sbb
sbb
pop
test
aas
jp
jnp
stos
arpl
(bad)
jmp
jno
leave
sbb
mov
sbb
cmc
jo
ret
push
bound
and
icebp
aad
out
retf
dec
pop
mov
ds
repnz
retf
jmp
push
call
fcom
aaa
jb
dec
pop
inc
out
sub
or
and
call
repnz
mov
or
mov
sahf
in
ins
inc
test
popa
inc
inc
mov
and
pop
mov
addr16
adc
aas
xchg
sbb
out
fldenv
xchg
outs
outs
mov
enter
push
int
(bad)
jl
adc
inc
mov
cli
test
les
xchg
fdivp
xor
shl
push
pop
repnz
gs
xchg
ret
sub
mov
cwde
ffree
mov
ficom
(bad)
scas
cmps
push
mov
dec
inc
adc
pop
je
or
lock
ss
ss
pop
or
dec
lods
ins
sub
add
ja
push
cs
xor
cmps
cmp
adc
sub
inc
pop
mov
cld
movs
ins
cdq
ret
add
mov
mov
adc
pushf
or
sub
dec
mov
xor
xchg
cld
sbb
xor
mov
inc
mov
push
fisub
(bad)
repnz
imul
daa
into
dec
sbb
(bad)
icebp
mov
ds
cwde
int
xchg
inc
imul
sub
inc
mov
or
movs
pop
inc
xacquire
push
enter
movs
cmp
addr16
and
mov
retf
ror
xor
ficomp
fbld
fmul
mul
ror
mov
dec
jmp
adc
and
cwde
mov
pop
push
sbb
(bad)
adc
int3
retf
xor
sbb
scas
cli
cmp
icebp
test
mov
add
loopne
pop
sar
scas
out
mov
cli
push
mov
jb
dec
js
lods
jne
inc
pop
jae
sar
jmp
out
sbb
xchg
sub
bnd
adc
(bad)
retf
inc
inc
nop
stos
loopne
out
pushf
and
and
in
jp
ret
add
adc
not
bound
mov
fistp
inc
(bad)
xor
push
adc
xchg
sub
add
sub
mov
or
mov
cld
(bad)
cvtps2pd
jmp
bound
rcl
push
jnp
or
ss
fimul
jmp
not
mov
jmp
mov
in
jp
inc
faddp
lahf
jae
ret
bound
imul
fistp
add
ret
or
and
repnz
mov
into
xor
dec
adc
mov
cmp
inc
and
retf
or
data16
push
je
call
push
ja
movs
cmp
inc
xor
push
add
gs
repnz
dec
inc
cld
rcr
xchg
xchg
mov
add
ins
or
jnp
inc
mov
add
repz
sub
sub
xchg
mov
mov
jae
adc
xchg
fld
dec
xchg
jnp
jo
mov
fcmovbe
mov
aaa
add
(bad)
xchg
retf
mov
loope
xchg
adc
sbb
or
jbe
paddw
jecxz
fwait
xor
les
mul
push
pop
ret
jne
bound
imul
jle
mov
sub
push
icebp
and
aad
jnp
ins
ds
lds
cmps
lea
jnp
hlt
jmp
int
ret
ds
dec
repz
test
cwde
pop
bound
jmp
push
dec
call
stos
bound
das
jb
into
sub
cdq
jb
rcl
inc
pop
jg
jno
or
div
cs
rcr
test
jne
mov
fist
mov
adc
test
sub
inc
imul
cmp
mov
fadd
and
mov
ficom
mov
mov
dec
xchg
xlat
nop
cmp
mov
mov
jmp
sub
enter
imul
push
fwait
inc
push
gs
or
xor
sti
aam
sbb
xchg
out
int3
or
lahf
ins
or
pop
xor
lods
inc
jge
lds
mov
adc
dec
cmps
inc
dec
xor
ss
rol
push
and
jmp
inc
cmp
cmp
and
aaa
(bad)
jp
test
fiadd
pop
jae
mov
aaa
mov
call
cld
jno
stos
jns
sbb
out
lock
mov
add
mov
sbb
sbb
jno
retf
outs
or
lahf
daa
jae
or
loopne
mov
jg
push
stos
add
pusha
cs
pop
fld
inc
inc
mov
test
cmp
retf
cmps
outs
dec
push
cmp
xlat
inc
push
in
mov
ror
call
and
jp
dec
fldcw
mov
add
repz
add
in
leave
sti
leave
dec
sub
repz
and
jnp
jo
jb
dec
rol
ror
pop
movs
xchg
(bad)
fcmovne
and
mov
ret
mov
mov
sub
in
leave
mov
push
xchg
dec
ja
addr16
(bad)
sub
and
fwait
pop
push
push
stos
xor
loopne
les
repnz
enter
enter
xor
pop
dec
add
cdq
ret
inc
fimul
mov
adc
pop
dec
push
xor
inc
dec
popa
sbb
in
adc
imul
mov
cld
adc
stos
shr
mov
or
movs
iret
pop
fcomp
loopne
fwait
int
push
jmp
inc
cmps
jle
xchg
sbb
call
jmp
xor
fimul
call
ficomp
nop
push
pushf
fcmovb
sbb
mov
or
cmps
stos
ret
ds
vcmpunord_sss
xchg
xchg
sbb
cmp
xor
clc
push
xor
pop
cmp
fadd
pop
mov
jl
and
pop
retf
arpl
or
or
xchg
mov
repnz
mov
sahf
dec
xor
retf
mov
and
leave
adc
repz
mov
sti
addr16
inc
mov
sbb
push
mov
inc
lahf
cdq
and
jecxz
leave
aam
ds
arpl
out
inc
or
xor
inc
or
(bad)
jg
jecxz
lods
mov
shl
clc
iret
ja
and
sti
cwde
sub
lods
call
xchg
xchg
mov
inc
out
mov
loop
mov
xor
cmp
and
pop
push
scas
adc
mov
sub
test
dec
adc
xor
inc
push
and
mov
aam
in
call
retf
mov
lods
push
mov
mov
push
pop
orps
mov
add
cmps
sbb
jnp
js
loope
add
and
sahf
je
mov
mov
call
sbb
jmp
sub
pop
push
fs
dec
cwde
mov
xor
jb
push
sbb
push
cmp
shl
rcr
test
adc
mov
fdivp
test
out
jmp
mov
dec
push
xchg
dec
jno
adc
das
push
int
and
cdq
jle
fnstcw
fcomp
stc
je
mov
inc
xchg
mov
xchg
loopne
outs
xor
stc
pop
sbb
push
mov
xchg
jo
lahf
or
xor
jmp
inc
cmp
ret
fmul
mov
xchg
jmp
sub
fcom
push
push
xor
popa
fsub
(bad)
fst
and
adc
mov
iret
push
cmps
jno
loop
cld
adc
inc
outs
hlt
call
hlt
mov
sahf
into
scas
mov
xor
inc
adc
out
cmps
cmp
sbb
add
into
(bad)
(bad)
loopne
fucompp
loopne
cli
jae
push
push
mov
push
cmp
mov
pushw
xlat
leave
jp
pop
mov
push
rol
mov
jmp
dec
pushf
out
adc
inc
arpl
das
or
sub
popf
pop
xchg
mov
mov
loope
sub
lock
dec
jmp
push
adc
cmp
push
dec
or
imul
jo
retf
mov
sahf
cwde
mov
mov
jae
loope
xor
retf
out
or
cmp
es
pop
jnp
icebp
cmp
add
push
mov
hlt
mov
or
cmp
pop
adc
jo
(bad)
and
cmps
dec
dec
retf
and
jg
popa
and
or
or
out
arpl
or
scas
sbb
or
dec
xor
sub
loopne
and
das
cmovae
test
mov
stos
cli
pop
ja
mov
push
add
mov
ins
xchg
aaa
outs
fptan
fcmove
jle
ror
inc
repz
mov
and
xor
mov
adc
hlt
sbb
xchg
mov
xchg
shl
xchg
push
out
sbb
in
imul
push
lea
jmp
xor
cdq
add
cmp
pop
outs
add
inc
fiadd
(bad)
shr
out
retf
add
ins
xor
pop
jl
repz
std
dec
pop
retf
push
mov
mov
jmp
pushf
or
pop
add
dec
sbb
pop
adc
and
pop
cmps
sub
outs
mov
cmp
jp
add
addr16
call
jecxz
cmc
pop
mov
or
inc
(bad)
xchg
repnz
xchg
inc
jmp
in
aad
sti
inc
fcomi
sub
sub
fwait
sahf
jp
stos
adc
inc
stos
lea
push
out
stos
fild
sub
mov
jne
mov
scas
fwait
retf
add
jnp
push
sub
(bad)
int
mov
mov
sar
ja
mov
mov
jl
mov
mov
test
add
repz
push
fwait
adc
inc
jmp
bound
adc
pop
aas
dec
mov
mov
sub
push
loopne
mov
js
or
sbb
mov
shr
xor
test
or
lods
jmp
fisub
and
cwde
pushf
pop
adc
mov
cmp
cli
arpl
xor
jns
pusha
jns
mov
ret
or
sti
or
shl
dec
adc
xor
inc
xor
add
push
mov
add
fs
and
(bad)
mov
imul
inc
push
neg
inc
sbb
ret
xchg
retf
push
fwait
jb
cmc
or
cli
adc
pop
sub
mov
aad
cld
inc
sub
fwait
sbb
inc
or
out
sbb
jno
inc
push
sti
cld
lods
into
aad
mov
arpl
out
xchg
jecxz
rcr
xlat
out
repnz
bound
pop
cmp
push
xchg
mov
repnz
xchg
push
xchg
mov
xchg
dec
push
lods
xchg
jae
sbb
xchg
rol
or
mov
push
fld
jecxz
hlt
cwde
pop
cld
movs
cmp
push
into
cli
test
inc
xchg
rcr
cmps
xchg
aad
call
cdq
(bad)
adc
js
popf
adc
cmp
inc
and
inc
ins
cmps
jb
mov
fild
mov
scas
(bad)
fwait
jb
repz
push
adc
xchg
fnsave
inc
cwde
add
jg
sbb
sbb
dec
cmp
xor
inc
or
movs
inc
xchg
in
dec
or
aas
ret
ja
mov
xchg
jge
mov
adc
fsubr
xchg
das
push
dec
or
jmp
dec
lods
imul
pushf
lods
mov
pop
fist
xor
jle
pop
push
xor
mov
sbb
pop
pop
int3
add
data16
push
fdivrp
bnd
pop
sub
in
cmp
fild
jb
fbstp
je
loope
sbb
inc
jl
jb
sahf
pop
xchg
aam
mov
lock
inc
call
btr
jmp
cmps
scas
outs
rcr
inc
jo
loope
adc
enter
stc
in
in
pop
retf
jbe
test
xchg
push
jmp
mov
fist
aas
shl
in
jbe
mov
push
cmp
cmp
add
mov
xchg
cmp
cmps
mov
dec
rol
jecxz
push
sub
pop
iret
sbb
sub
jbe
mov
mov
dec
mov
shr
jmp
out
sub
push
arpl
xchg
cmp
push
into
mov
ins
mov
pop
out
repnz
xor
fimul
leave
sub
adc
mov
cmp
stos
push
cmp
jns
sub
add
or
ret
or
adc
ror
add
push
stos
cli
sti
fisub
lods
mov
aas
and
sub
test
jbe
aad
fs
loop
arpl
adc
mov
jbe
mov
fcom
ror
inc
gs
mov
sbb
sub
dec
lea
jnp
cmp
pop
scas
sbb
sub
int
dec
fdivr
add
mov
loop
ss
or
xchg
scas
jne
dec
pop
add
jnp
mov
hlt
scas
repnz
stos
mov
xor
ins
lds
imul
int3
dec
imul
mov
stc
push
pop
stos
pop
shl
mov
add
add
jmp
mov
inc
and
adc
stos
nop
das
arpl
cdq
adc
push
pop
lahf
mov
loop
fnsave
popf
daa
rcl
fnstenv
(bad)
push
fstp
or
js
mov
mov
fsubr
movs
(bad)
loope
lock
outs
call
mov
test
call
call
jnp
ja
inc
xor
xchg
mov
out
mov
xor
inc
sub
pop
push
add
daa
and
inc
into
lock
pop
cli
cmp
bound
and
dec
sub
js
imul
arpl
jg
test
and
stc
jmp
inc
stc
mov
mov
push
nop
mov
je
push
push
sbb
and
pop
hlt
test
retf
push
loop
jo
les
ret
xlat
cld
push
(bad)
inc
xchg
out
dec
jb
sub
jp
xchg
jb
ret
inc
jl
push
push
int3
movs
loope
mov
lods
ins
sbb
mov
(bad)
sub
retf
mov
mov
loop
movs
sbb
ror
pop
lahf
sti
push
adc
adc
in
xchg
fdiv
in
loope
xchg
sbb
dec
rol
jge
push
ret
mov
das
fild
and
inc
mov
pop
or
jnp
pop
jp
jns
mov
sbb
into
jmp
and
jp
cmp
jnp
fwait
lahf
xchg
cvtdq2ps
push
dec
lods
mov
(bad)
mov
out
mov
inc
adc
adc
cli
in
sub
xor
xchg
push
or
popa
push
ins
mov
stos
mov
sub
sti
(bad)
jnp
ret
mov
jge
imul
dec
and
inc
push
cs
cmp
or
xor
mov
pop
push
retf
dec
adc
arpl
xchg
dec
adc
lock
push
mov
leave
push
push
hlt
popa
fst
ja
mov
test
std
lods
rcr
scas
sbb
add
and
push
imul
imul
out
in
push
aam
sar
jecxz
push
cmp
mov
mov
pop
xchg
mov
lea
into
aad
dec
xchg
sub
mov
cmps
mov
xchg
dec
ret
dec
ss
bound
xchg
stos
or
mov
xchg
lock
and
mov
test
arpl
das
cmp
push
xor
jmp
cmc
xor
pop
cwde
dec
movs
dec
add
dec
push
xorps
inc
js
dec
mov
jmp
ins
int3
ret
js
mov
mov
cwde
adc
call
call
test
sbb
add
in
and
push
rcl
pop
cmps
outs
and
ret
mov
jg
add
sti
mov
mov
nop
mov
outs
mov
adc
add
mov
push
dec
push
fcom
xchg
xchg
xor
xchg
jnp
leave
shl
pop
cli
dec
push
fisub
repz
xor
shl
sub
fcmove
and
in
inc
mov
in
fnstcw
push
(bad)
retf
test
add
stos
xor
jns
fs
mov
dec
ret
pop
xchg
xor
push
add
sbb
mov
sbb
cli
shl
mov
mov
in
push
or
push
fbstp
xchg
rcr
lods
shl
xor
pop
cmp
sub
jmp
lds
pop
dec
sub
pop
ret
scas
sub
cdq
mov
idiv
inc
cwde
cmp
pop
mov
cmp
out
retf
sbb
imul
sbb
das
addr16
xor
jmp
loop
(bad)
iret
movs
clc
cmp
pop
outs
data16
test
mov
cmps
xchg
jmp
sub
jl
jp
(bad)
test
mov
push
rol
sub
test
hlt
movs
cmps
cmp
adc
add
stos
mov
nop
add
mov
pop
call
stos
sbb
jnp
sbb
cmp
sbb
sub
pop
push
(bad)
rol
out
adc
xor
add
push
js
sbb
and
icebp
jmp
jne
jns
sub
add
push
pop
inc
push
test
dec
jg
mov
mov
mov
sub
jecxz
and
xor
mov
jbe
aam
scas
add
sti
sub
int
clc
mov
mov
add
retf
sahf
sbb
or
test
imul
mov
loop
push
adc
call
and
iret
pop
(bad)
dec
cdq
xor
jne
add
mov
(bad)
inc
sbb
sub
jecxz
and
sub
inc
cmp
outs
ror
add
inc
imul
jl
mov
fidivr
(bad)
sbb
sub
dec
out
movs
or
cmp
mov
add
or
mov
xor
and
stos
(bad)
jmp
fwait
inc
out
(bad)
mov
or
jno
sbb
or
test
dec
(bad)
add
mov
mov
out
or
(bad)
adc
mov
cmps
jae
cmp
and
(bad)
and
enter
adc
ret
daa
xchg
xor
push
sbb
inc
or
fbstp
lods
sbb
loope
fstp
mov
jo
sub
pop
xor
push
repnz
shl
xchg
dec
xlat
mov
inc
(bad)
(bad)
ss
les
loop
add
jg
int3
sub
mov
mov
pop
inc
daa
fwait
rcr
js
jle
and
sahf
pop
shl
loop
clc
sub
jae
xchg
jae
push
inc
and
pop
outs
mov
xor
bound
not
scas
bound
add
push
push
sbb
sub
push
add
sbb
stc
loopne
sbb
scas
or
fcom
cmp
sbb
dec
mov
jns
lock
cmp
mov
mov
mov
or
jp
push
bound
xchg
dec
jmp
imul
add
mov
jb
test
mov
stc
push
or
dec
cmp
push
ror
ror
sbb
jnp
mov
pop
mov
sub
jnp
adc
cmp
lods
mov
mov
adc
mov
sbb
div
mov
pop
mov
cmps
(bad)
sub
ret
movs
push
mov
pop
xchg
cmp
pop
adc
push
mov
jno
rcr
pop
test
test
inc
jo
xchg
call
fild
jp
cdq
je
repz
pop
mov
sub
inc
inc
dec
xor
cmp
and
cli
rcl
add
cmps
pushf
dec
out
add
cmp
mov
gs
out
int
jp
xlat
mov
dec
loop
lods
inc
push
(bad)
retf
dec
push
fwait
jnp
fcomip
xor
sbb
clc
mov
inc
mov
in
jae
push
div
mov
and
mov
aam
repz
add
iret
pop
bound
jmp
or
sbb
cmc
sub
(bad)
data16
ficom
call
sbb
xlat
ret
jbe
mov
(bad)
ja
push
xor
movs
pushf
iret
imul
cli
mov
jmp
xor
leave
xchg
es
jmp
movs
iret
pop
out
cmp
movs
test
out
in
adc
push
add
repz
mov
cmp
aaa
xlat
or
in
int
or
lods
daa
int
jne
inc
add
aaa
adc
or
sbb
jmp
mov
fiadd
mov
inc
mov
aam
pop
push
sub
pop
push
push
jl
fsubr
out
xchg
push
mov
pop
fisubr
xor
dec
fisttp
adc
jno
stc
cpuid
adc
or
clc
repz
mov
popa
mov
out
lahf
jns
mov
popf
retf
test
mov
sbb
jmp
loop
sub
jb
popa
and
xchg
pop
and
popf
outs
adc
adc
arpl
jnp
mov
cmp
mov
cmps
pop
not
imul
mov
mov
jno
test
mov
xchg
test
mov
cmp
push
pop
ss
mov
aas
test
rol
sub
sti
dec
repnz
pop
add
mov
jp
in
sub
ds
cs
jmp
leave
mov
xchg
std
mov
ret
sub
cli
lods
call
mov
cmps
psubb
cmp
fdiv
pop
dec
ins
push
das
dec
xlat
popf
add
inc
das
fs
loop
xor
add
mov
or
add
not
pop
mov
adc
out
inc
push
jmp
or
ins
fucom
out
mov
mov
mov
adc
daa
retf
cmp
push
or
inc
outs
nop
dec
mov
fcmovnb
sub
sbb
loop
hlt
xor
(bad)
repnz
repnz
push
aaa
and
in
jecxz
rcr
jmp
ss
add
jecxz
mov
mov
sbb
psrad
sub
pop
loope
stos
repz
(bad)
mov
jmp
lea
fiadd
ds
retf
cmc
out
mov
lock
mov
fwait
mov
cs
push
inc
push
popa
ins
das
inc
rcl
call
(bad)
push
xchg
dec
test
jb
gs
ror
loop
jbe
jb
imul
jge
(bad)
and
pop
dec
mov
mov
or
xchg
inc
rol
mov
inc
rcr
mov
cmp
pop
or
add
adc
or
sub
repnz
jnp
mov
mov
mov
test
jae
jae
push
add
enter
cmps
dec
sub
pop
lock
pop
dec
sbb
mov
mov
sbb
test
jle
jecxz
fisubr
sub
jnp
xor
inc
pop
jne
ja
aam
and
retf
dec
jmp
sti
loopne
add
xchg
fnstcw
mov
inc
scas
xchg
jecxz
fsubr
push
ror
jge
jae
dec
ins
xor
sub
cli
fadd
push
jmp
lods
cmp
bound
ret
mov
jmp
or
pushf
adc
jns
aad
cdq
add
std
(bad)
gs
mov
push
jnp
mov
pop
rol
jmp
ret
in
sub
dec
pop
dec
mov
push
push
ins
sub
repnz
popf
mov
jno
les
call
sub
pop
enter
bound
out
push
cmp
push
rcl
mov
outs
xlat
fild
sbb
sub
jecxz
xor
int3
lock
fimul
test
and
ins
movs
fwait
mov
pop
push
sti
xchg
cdq
push
push
cmp
sti
xchg
mov
jbe
and
and
popa
(bad)
xchg
xchg
mov
mov
jmp
dec
and
in
xchg
cmps
leave
push
jl
pop
mov
cmp
lods
loop
or
mov
mov
cs
cmp
jo
out
push
call
out
(bad)
sahf
fwait
jne
adc
and
loope
dec
sbb
aad
cmps
dec
jmp
sti
mov
xchg
cmp
mov
inc
xor
and
mov
imul
cmps
pop
loope
shr
jp
iret
ds
gs
sub
push
fnstcw
xchg
xor
fwait
pop
mov
cmps
sbb
shl
loop
iret
pop
xor
lods
stos
jp
cmps
lea
adc
xchg
lods
retf
mov
jb
xor
inc
retf
stos
adc
adc
outs
jnp
fadd
and
out
repz
bound
pop
jmp
dec
iret
pop
adc
pop
dec
push
inc
jmp
or
jbe
pop
popa
je
xchg
repnz
popa
add
(bad)
fimul
jae
or
inc
out
mov
movs
push
jmp
lea
xor
pop
sbb
mov
scas
pop
pop
repnz
mov
mov
dec
repz
sub
cwde
test
add
jp
mov
mov
mov
pop
popf
sbb
int3
stos
adc
xor
dec
pushaw
xchg
pusha
jmp
and
imul
xor
push
xchg
sbb
push
outs
push
add
fiadd
push
sub
mov
cmp
jmp
pop
mov
imul
mov
cs
mov
fisub
add
jb
push
out
(bad)
call
mov
mov
push
or
ror
xor
repz
push
inc
icebp
sub
cwde
xor
pop
js
push
lock
sub
lock
cmp
inc
cmps
xor
pop
mov
mov
(bad)
or
cmp
inc
cmp
and
(bad)
and
shl
fisubr
jmp
rcr
or
loop
fwait
adc
mov
scas
xor
cmp
test
test
enter
add
sub
loope
repnz
repz
add
test
jmp
mov
mov
push
pop
pusha
and
mov
pop
rcr
mov
ret
inc
sahf
inc
push
or
loop
pop
icebp
push
data16
leave
dec
push
inc
shl
adc
(bad)
int
lock
es
xor
ret
sub
xor
sub
adc
push
mov
or
dec
mov
push
cmp
stc
mov
pop
xor
mov
ins
add
stos
adc
add
pop
bound
xor
dec
pusha
fidivr
pop
pushf
cmp
ffree
xor
test
adc
loopne
or
(bad)
mov
test
mov
cdq
ror
bound
cdq
lods
inc
(bad)
fistp
push
and
ds
in
and
clc
add
add
pop
adc
outs
inc
outs
lods
or
rol
sar
mov
stos
(bad)
lods
shl
pusha
lea
jp
fcomi
cwde
mov
jb
mov
sti
arpl
repz
mov
jb
push
shl
ja
sahf
shl
std
aas
push
scas
fstp
push
fbld
in
xchg
clc
sti
call
and
add
fbld
push
lods
es
sub
push
adc
pop
and
jnp
pop
lods
sbb
adc
pop
sub
adc
push
(bad)
call
fisttp
cli
push
ins
mov
into
jno
mov
adc
jmp
inc
dec
jo
adc
dec
fist
jns
jmp
jmp
xchg
or
or
xchg
jno
rcl
fwait
(bad)
cwde
jg
add
fnstcw
xor
popa
mov
jmp
aaa
sub
sahf
and
stos
fdiv
sbb
shr
shr
arpl
jb
lods
mov
dec
sbb
rcr
test
mov
inc
dec
dec
cmp
iret
sbb
dec
adc
out
fyl2x
mov
stc
das
xchg
icebp
leave
adc
push
or
das
adc
pushf
jmp
sub
or
ds
inc
jo
adc
cwde
imul
push
ins
mov
out
inc
push
addr16
cli
inc
int3
iret
mov
xchg
cli
int
das
push
push
adc
rol
cli
(bad)
loopne
(bad)
out
das
or
add
xor
jmp
push
sbb
add
pop
cmp
in
(bad)
dec
in
add
adc
call
mov
sbb
inc
fidiv
mov
rcl
addr16
mov
and
dec
sub
inc
cmps
test
and
mov
(bad)
gs
mov
rcr
add
ja
xchg
fs
xchg
iret
lods
sub
lods
jmp
stc
or
xchg
xor
adc
inc
pop
xor
push
push
xor
jmp
jb
mov
ror
es
xchg
int
and
mov
sbb
xor
mov
mov
cmp
ret
xchg
lahf
sbb
scas
push
fmul
sbb
pop
sbb
aas
rol
call
jne
add
call
inc
addr16
jg
xor
jecxz
adc
aas
dec
retf
add
sub
aaa
(bad)
ficom
dec
jmp
pusha
mov
and
push
call
cmps
inc
jmp
cli
into
fisub
hlt
stos
jns
sub
adc
and
xor
jno
fistp
loopne
jns
das
fiadd
add
repnz
test
out
jne
popa
xchg
xor
jmp
dec
cwde
repnz
and
xchg
repnz
icebp
cmovbe
cli
push
push
xor
leave
or
shl
and
sbb
(bad)
adc
pop
and
in
mov
jmp
push
mov
add
pop
or
pop
or
mov
mov
repz
lods
sbb
or
loopne
and
aas
les
mov
add
lock
mov
mov
xchg
stc
ins
sahf
mov
jmp
retf
jecxz
add
cmp
adc
mov
adc
jp
test
pop
popf
shl
repnz
imul
cmp
pop
pop
(bad)
cli
xor
scas
pop
mov
jmp
repz
and
jge
or
or
add
xlat
jecxz
jne
in
add
call
popa
or
mov
in
dec
and
aaa
dec
(bad)
cmp
xchg
inc
or
mov
arpl
xchg
adc
or
sbb
cmp
sbb
mov
cmp
cs
push
int3
dec
inc
push
cmp
aaa
outs
sar
and
adc
jo
pushf
rcr
movs
xor
rcl
inc
add
adc
pop
ret
lods
retf
retf
xchg
test
aad
and
shl
inc
push
dec
jmp
icebp
rep
std
jecxz
cmp
test
push
inc
xor
imul
pop
adc
jmp
retf
jb
push
add
mov
xchg
ret
fdiv
pop
dec
and
or
fwait
or
mov
inc
mov
out
cwde
adc
mov
lea
jge
jnp
xchg
stc
sbb
push
mov
cmp
cmps
loopne
out
loop
sbb
push
ins
adc
inc
push
imul
lahf
test
inc
call
fwait
sub
aaa
mov
int3
xchg
dec
scas
push
mov
xor
dec
xchg
fbstp
retf
loop
inc
fadd
outs
aas
sbb
mov
push
call
in
adc
or
mov
in
xchg
xchg
lock
push
out
xchg
ins
fwait
scas
mov
add
push
retf
aaa
mov
push
daa
test
repnz
pusha
lock
jnp
jecxz
push
outs
pop
cmc
or
inc
fsubrp
xlat
das
stos
stc
test
add
mov
and
or
jmp
sub
out
xchg
xor
sub
pop
jae
mov
clc
mov
aas
and
mov
mov
ret
adc
or
dec
dec
(bad)
cmps
mov
stos
cmp
jge
repz
adc
xchg
push
add
outs
dec
adc
jne
jecxz
mov
xchg
lods
cmp
pavgw
sub
ins
fcomp
outs
sub
add
fstp
stos
loop
psubd
retf
aaa
xchg
arpl
cmp
jmp
div
sub
push
sub
add
loop
ret
lahf
cmp
pop
sub
pusha
sbb
jns
movs
shl
jmp
sti
or
add
adc
out
dec
jp
stos
xchg
(bad)
inc
mov
jb
adc
or
mov
xchg
out
hlt
das
jmp
dec
xchg
js
xchg
lods
out
shr
imul
mov
int3
xor
ret
in
mov
clc
xor
fimul
sbb
push
daa
cmps
aas
pop
out
fstp
push
pop
cs
inc
ret
out
shr
pop
xor
je
and
xchg
sbb
mov
pop
cmps
(bad)
in
cmp
inc
aas
movs
test
mov
dec
mov
or
lods
movs
jne
jecxz
in
mov
cld
les
retf
fiadd
pop
push
(bad)
fimul
pop
daa
add
rol
xor
cmp
shl
dec
add
jp
les
dec
and
data16
retf
je
pop
mov
or
jne
mov
pusha
xchg
dec
mov
js
pusha
xchg
pop
rol
adc
sub
dec
jecxz
xor
test
frstor
fstp
xchg
cmps
mov
std
mov
(bad)
mov
ret
ins
jmp
mov
dec
in
jp
dec
call
scas
add
loopne
jg
cmovno
dec
pop
ror
jmp
mov
popf
add
mov
cs
outs
sbb
cli
xchg
or
jg
popa
fisubr
cmp
jp
enter
xor
int3
xor
outs
sub
and
or
stos
cmp
cmp
out
push
or
pop
movs
mov
or
iret
add
adc
jmp
imul
call
push
daa
xor
push
fldcw
mov
sub
inc
jbe
push
fidivr
mov
data16
stc
jbe
retf
shl
bound
mov
sub
push
cmp
stos
adc
sbb
enter
and
xchg
dec
jnp
imul
or
movs
sahf
cli
loop
clc
dec
jno
stos
pop
aad
addr16
jb
and
jmp
arpl
movs
xchg
jae
outs
loop
xchg
push
or
(bad)
push
icebp
push
int3
(bad)
aad
and
mov
inc
sbb
sub
fsub
ds
sub
or
cmp
ins
les
and
xchg
mov
(bad)
rol
scas
jp
sub
push
adc
or
and
xchg
mov
repz
jae
xchg
into
mov
inc
xor
scas
ror
xchg
fwait
or
or
and
sbb
dec
cli
or
sahf
push
out
and
fist
mov
movs
popa
sub
lea
jg
jae
sbb
sbb
les
arpl
out
sbb
xlat
movs
jns
bnd
mov
mov
(bad)
jae
add
mov
rcr
shr
mov
stos
stos
mov
push
xchg
and
pusha
dec
ficomp
call
cmp
ret
inc
fbstp
movs
enter
xlat
mov
popa
adc
xor
out
and
test
mov
pop
jg
aam
add
cmp
arpl
mov
and
dec
inc
in
jnp
cs
pop
out
mov
imul
out
mov
bound
jecxz
call
dec
push
xor
mov
test
out
xor
mov
cmp
retf
addr16
sub
jmp
and
es
(bad)
mov
pop
mov
dec
mov
cmp
sub
and
push
jg
pop
addr16
mov
aaa
mov
and
push
sub
mov
push
int
js
mov
xchg
lock
cld
mul
mov
push
xor
jmp
repnz
xchg
hlt
cmp
ret
pushf
in
jp
pop
inc
and
xchg
cmp
push
or
aam
mov
mov
in
jmp
(bad)
push
adc
inc
sahf
xor
cmc
jb
and
(bad)
je
add
stos
mov
jae
call
xchg
mov
(bad)
rcr
add
(bad)
jb
ds
xor
jne
xchg
jb
mov
jecxz
pop
pop
push
push
sub
or
xor
nop
xor
call
xor
test
ins
fadd
cmp
push
shl
push
adc
out
rcl
push
lods
sub
mov
pop
mov
push
mov
jecxz
aas
ds
mov
sar
leave
cs
mov
nop
jl
adc
jmp
xlat
fist
scas
or
xor
sub
jecxz
jecxz
rol
inc
lea
and
mov
repz
test
or
mov
pop
mov
pop
push
push
rcl
retf
push
dec
mov
rcr
popa
mov
xor
jne
in
inc
fisttp
or
mov
ret
mov
push
cmp
(bad)
mov
xchg
pop
xor
in
addr16
push
imul
push
call
(bad)
fld
dec
lods
mov
das
cmps
cmp
je
jmp
arpl
push
push
aas
push
jb
jne
sbb
add
cli
push
sbb
int
ficom
call
pop
sbb
leave
cmp
inc
add
xchg
add
push
cli
pop
mov
push
es
xor
mov
test
dec
scas
sbb
(bad)
ror
dec
dec
pusha
pop
xchg
fsubp
lock
dec
addr16
adc
arpl
jo
shl
lock
or
out
dec
push
inc
or
sub
and
js
dec
xchg
out
and
inc
rol
push
push
inc
jmp
jns
push
gs
ja
jg
or
lahf
cmp
pop
mov
(bad)
fst
popf
repnz
adc
mov
call
add
push
cmp
and
mov
ds
data16
rcl
push
out
mov
stos
cmp
jb
push
dec
xor
popa
imul
cmp
mov
ja
mov
lahf
mov
mov
cmp
cmps
(bad)
outs
and
loope
cmp
shr
mov
dec
mov
test
repnz
adc
mov
sub
push
jge
imul
(bad)
jle
int
adc
cli
add
jle
stos
push
cmp
adc
jo
les
pop
adc
dec
(bad)
pop
xor
clc
jmp
mov
push
mov
vaddss
cli
bound
ret
fwait
adc
daa
pop
mov
dec
xchg
pushf
in
hlt
mov
test
(bad)
mov
dec
add
das
mov
es
sub
pop
jp
cmp
or
push
sar
mov
xor
jle
mov
daa
mov
cdq
leave
mov
jmp
sub
int
xchg
inc
inc
outs
mov
rcr
aaa
cmp
push
sbb
cmp
mov
dec
rol
mov
xchg
xchg
pop
and
mov
mov
sbb
jmp
shl
inc
mov
or
inc
jmp
ja
dec
out
push
(bad)
sub
je
sub
cmp
rcl
or
add
or
or
xor
pusha
mov
lods
ja
jns
sub
and
jae
mov
std
gs
or
cmp
loop
inc
jae
sbb
shr
hlt
mov
shl
xor
sub
sub
sti
xchg
std
mov
mov
xor
out
jl
mov
mov
mov
ror
jo
mov
(bad)
out
jp
mov
adc
fiadd
pop
push
jnp
sbb
cs
call
jb
xor
and
ins
ds
push
jp
sbb
out
ret
or
pop
mov
jmp
repnz
pushf
pop
in
in
out
jmp
fdivrp
cld
ss
sbb
loope
xchg
jmp
shr
mov
mov
adc
fist
addr16
test
or
pushf
fwait
dec
inc
and
fstp
movs
jnp
mov
push
add
mov
jne
jo
repnz
shl
jl
stos
int
pop
inc
loope
lahf
or
leave
jo
sub
ss
push
iret
je
xchg
shl
and
sahf
rol
repnz
popa
(bad)
es
mov
test
ins
ins
sub
xor
out
movs
into
lods
arpl
sbb
fwait
jb
sub
popa
adc
out
arpl
adc
sub
add
retf
xchg
dec
test
push
inc
pop
loop
fiadd
nop
(bad)
ss
in
push
arpl
jecxz
push
outs
inc
(bad)
mov
jg
idiv
inc
mov
ins
aam
jmp
bound
push
stos
pop
and
movs
mov
bound
fldenv
scas
shl
fcomp
mov
mov
cmp
mov
dec
cld
(bad)
out
dec
mov
fsub
test
pop
mov
aas
or
jge
xchg
pop
(bad)
into
shl
add
jnp
mov
push
test
inc
jne
pop
dec
sbb
mov
dec
mov
mov
addr16
cmp
push
psubd
ja
push
sub
je
adc
pop
sub
int3
test
push
in
sub
cmps
hlt
mov
sar
xor
mov
jb
pop
mov
movs
(bad)
push
mov
xor
dec
fstp
ds
xor
hlt
(bad)
gs
mov
mov
push
fst
inc
sub
inc
into
mov
or
pop
jmp
push
sbb
pop
ficomp
jmp
xchg
mov
cli
cmps
ret
(bad)
pushf
mov
xchg
nop
nop
dec
rcr
ds
mov
mov
(bad)
or
cmc
mov
loopne
rcr
jp
je
lds
imul
ret
movs
and
(bad)
iret
fst
mov
mov
xchg
mov
imul
xchg
pop
sub
cld
jp
loop
arpl
inc
cmp
retf
pop
xchg
sbb
xchg
xchg
inc
arpl
pop
sub
mov
pushf
call
xor
and
or
jb
js
mov
ja
sbb
mov
dec
xor
add
xlat
(bad)
bound
lock
bound
inc
out
fstp
add
aaa
icebp
pop
(bad)
imul
xor
sub
xchg
mov
push
ffree
jmp
loop
(bad)
loope
cmp
fild
jge
jmp
jmp
and
fidivr
fidiv
adc
cmp
ins
add
push
fistp
and
call
sub
icebp
sub
cli
add
aad
(bad)
jmp
loop
loope
jo
out
mov
out
sbb
add
adc
scas
shr
xor
jle
mov
dec
mov
jle
mov
movs
xor
pop
jmp
lds
(bad)
(bad)
retf
or
mov
sahf
leave
push
scas
adc
push
fmul
adc
mov
loopne
ret
push
mov
into
mov
mov
xchg
scas
mov
jecxz
xchg
mov
mov
movs
push
idiv
out
int3
and
pop
cmp
cmp
movs
or
stos
sub
or
daa
(bad)
(bad)
outs
mov
jb
inc
pop
ins
dec
jg
adc
push
and
in
sbb
sahf
in
(bad)
xor
adc
call
movs
jmp
push
mov
aam
dec
jecxz
pop
or
and
shl
(bad)
neg
lods
stos
mov
stos
dec
mov
sbb
jb
cli
in
cdq
push
push
jb
cmp
aas
inc
shl
stc
cs
imul
pop
sbb
lahf
and
xchg
push
mov
push
push
mov
or
nop
retf
push
sub
or
shl
cli
daa
pop
cmp
push
add
mov
mov
fs
je
rcl
test
push
cmp
or
hlt
out
aad
not
les
shr
adc
loop
ror
imul
xchg
mov
cmp
pop
pop
repz
(bad)
in
ret
jl
adc
and
pop
push
or
cmp
(bad)
jb
adc
imul
adc
sbb
dec
jae
push
push
sbb
inc
inc
mov
mov
mov
cmc
test
fistp
cdq
adc
es
aam
push
cs
(bad)
cs
push
icebp
test
scas
lods
out
scas
pop
je
retf
dec
add
out
neg
data16
mov
xchg
push
rep
push
(bad)
std
sub
mov
add
arpl
mov
mov
pusha
jle
stos
adc
mov
(bad)
sub
lahf
add
(bad)
jb
sub
mov
push
cmc
mov
(bad)
cmp
gs
stos
push
push
rcl
pop
dec
scas
xchg
sub
push
outs
movs
xor
mov
call
iret
jns
imul
pop
out
cmp
add
and
pop
push
test
cmps
test
nop
inc
(bad)
sbb
aaa
xchg
leave
pop
loopne
mov
loop
inc
loop
out
cld
xchg
(bad)
cdq
adc
js
mov
movs
inc
jmp
mov
inc
cmps
icebp
std
fmul
dec
and
mov
ucomiss
enter
add
jg
mov
popa
inc
inc
sbb
lds
sbb
out
test
jmp
mov
inc
jmp
add
add
(bad)
sub
stos
hlt
out
les
fnstcw
mov
xor
pop
xor
dec
mov
retf
cmps
neg
and
pusha
mov
cmc
out
pop
dec
pusha
xor
cs
push
xchg
inc
xchg
ds
adc
iret
xchg
fmulp
test
test
jbe
cs
rol
mov
cmp
jg
mov
lock
lds
out
or
and
arpl
fucomip
rcl
jbe
retf
mov
mov
or
stc
push
mov
hlt
ss
xor
mov
mov
fild
cmp
mov
lea
xlat
push
jbe
sbb
cmp
mov
adc
call
jnp
push
retf
push
retf
fldenv
adc
bound
pop
adc
add
cmp
sbb
cmps
scas
mov
scas
nop
xor
loop
dec
mov
movs
xor
push
loop
jle
test
das
stc
or
pop
xor
dec
cmc
inc
mov
sbb
sahf
dec
enter
xor
sub
mov
call
ret
cmc
sti
mov
test
jp
fs
sbb
sti
outs
inc
cmp
arpl
lock
sub
fdivr
in
fdiv
inc
mov
or
jmp
or
xor
jb
adc
fimul
lahf
inc
stos
retf
add
movs
adc
jge
inc
setl
xchg
inc
daa
jge
es
test
retf
imul
push
imul
sbb
mov
mov
loopne
xchg
pop
dec
into
push
and
mov
fimul
pop
jb
les
lods
retf
sbb
jns
mov
mov
mov
cmps
out
(bad)
lock
out
ins
bnd
popf
xchg
mov
sbb
pop
fs
or
mov
sbb
fdiv
push
stos
call
cld
cmp
and
imul
sti
dec
xlat
pop
push
mov
popf
sahf
sub
jae
adc
jmp
sbb
inc
fwait
xor
mov
in
mov
mov
movs
jmp
dec
rcl
sbb
call
or
sbb
ret
adc
add
lahf
push
movs
into
push
jno
pop
scas
stos
ss
pop
mov
mov
cmp
(bad)
jmp
xor
loope
lahf
push
cs
sub
fild
lock
sahf
sbb
pop
stos
(bad)
scas
loope
(bad)
xor
aad
dec
pop
xchg
add
xor
je
out
mov
cdq
mov
sub
pop
and
pop
push
mov
jecxz
jle
pop
icebp
xchg
or
or
outs
and
xlat
and
jae
push
mov
lds
inc
mov
(bad)
rol
and
fdivr
mov
mov
sub
cmp
lea
inc
mov
aas
cmp
or
sub
mov
repz
and
push
cld
xor
dec
outs
icebp
and
mov
push
mov
test
mov
ret
fimul
ins
sbb
dec
aad
jp
scas
int3
sub
jmp
or
gs
stc
bound
jle
dec
int
cs
jmp
addr16
test
cmp
dec
adc
adc
xor
push
or
mov
xor
mov
xchg
das
(bad)
add
bound
leave
add
sbb
lahf
(bad)
cmps
inc
js
pop
cdq
adc
mov
test
sahf
jb
sub
mov
or
iret
jb
in
adc
lea
cmps
arpl
add
mul
mov
dec
jmp
test
stos
mov
daa
(bad)
and
sub
rcr
push
adc
sar
sti
rcl
cmp
inc
hlt
inc
push
jb
gs
in
retf
in
mov
cmp
pop
push
xchg
pop
pusha
js
enter
sub
cmp
mov
pop
xchg
mov
test
jne
cli
dec
jg
sar
mov
inc
sub
enter
mov
add
sub
ins
dec
repnz
pop
push
cdq
popf
mov
test
pop
fcomip
xlat
adc
call
and
mov
cld
pop
adc
pop
out
fdiv
xchg
add
and
jl
sbb
fs
bound
sbb
and
ret
jp
es
xchg
or
jae
mov
fwait
sbb
jp
sbb
add
adc
dec
das
sub
sub
dec
and
ret
scas
xor
test
mul
cmp
movs
imul
out
mov
iret
enter
sub
sbb
int3
aas
fmul
push
adc
data16
mov
pop
mov
movs
call
and
mov
mov
je
sbb
iret
push
test
push
(bad)
call
xor
mov
mov
lahf
push
repz
cmp
jmp
retf
jecxz
pop
jnp
ret
rcl
shr
mul
jo
ret
test
adc
aad
mov
sbb
mov
es
test
mov
mov
mov
hlt
fnstcw
inc
adc
ret
and
in
idiv
mov
cwde
mov
scas
retf
dec
cld
push
mov
fist
pop
outs
dec
outs
add
push
ret
pop
mov
fistp
shr
push
mov
mov
int
jp
stos
repz
movs
popa
(bad)
pop
mov
cmp
hlt
ds
mov
in
push
stos
sahf
push
push
rcr
shl
mov
or
enter
gs
xchg
fcomp
leave
enter
call
movs
mov
sti
fs
push
push
push
call
outs
jp
jge
xchg
or
outs
ins
xor
rcl
ret
or
jp
sbb
ror
(bad)
pop
mov
mov
jp
mov
test
es
pop
fsubr
ror
shr
and
mov
ds
add
add
and
je
sub
and
sahf
or
xchg
(bad)
(bad)
jp
fwait
scas
jmp
mov
push
mov
and
mov
push
shr
and
out
add
xlat
and
(bad)
lea
rcl
jecxz
add
cli
bnd
(bad)
push
cmp
std
pop
push
adc
add
cld
mov
mov
out
jecxz
arpl
pop
mov
imul
ins
pop
or
aas
xchg
test
out
jp
fwait
cmp
dec
cmp
aas
mov
and
dec
imul
add
mov
xor
sub
ror
das
retf
imul
cs
push
push
aad
jle
int3
sbb
or
xchg
xchg
das
ror
mov
cdq
(bad)
xor
push
pop
(bad)
div
repnz
(bad)
(bad)
pop
xor
push
mov
pop
imul
test
add
and
push
sbb
fld
mov
(bad)
mov
xor
cmp
retf
mov
mov
jno
rcr
xchg
jmp
imul
sub
xchg
out
add
fs
adc
mov
pusha
add
stos
stos
lods
push
retf
xor
rol
test
jnp
pushf
sub
mov
add
add
leave
in
imul
pop
mov
add
pusha
outs
iret
sub
adc
test
or
push
sub
dec
mov
shl
or
xor
jp
sbb
push
arpl
pop
mov
sti
xor
inc
mov
into
jmp
ret
test
sar
mov
add
xchg
jae
fcom
test
sbb
pop
cdq
xchg
loop
cmp
jle
and
ficom
fwait
inc
dec
pop
bound
xchg
rcl
shl
cld
jae
xchg
cmp
inc
bound
ins
dec
jp
call
jb
sub
fnsetpm(287
ret
cmps
dec
add
adc
adc
and
jo
or
jge
mov
xchg
xchg
ins
jmp
cmp
sbb
pop
xchg
and
or
daa
jae
cld
xchg
pop
test
int3
cmp
adc
cmp
movaps
jle
std
jp
sub
inc
inc
ss
into
pop
loop
jno
int3
rcr
cmps
repnz
out
ds
mov
(bad)
arpl
popa
test
xor
fild
in
ret
fistp
jecxz
mov
call
popf
xor
in
push
int
dec
xchg
outs
outs
jmp
mov
fwait
mov
mov
push
sub
popa
fcom
xor
inc
lahf
or
cwde
arpl
lods
pop
mov
add
add
mov
dec
mov
outs
mov
fsub
xchg
(bad)
push
ret
cmc
dec
repnz
hlt
fbld
fmul
inc
mov
xor
cmps
add
je
mov
adc
and
aam
arpl
pop
mov
movs
(bad)
mov
xchg
pusha
pop
sbb
push
adc
add
mov
xchg
sub
rcr
dec
or
xchg
add
jl
jae
imul
xchg
jnp
push
cdq
xchg
adc
dec
xor
jg
push
fdivr
cld
int3
or
into
jae
inc
mov
push
cmp
or
cwde
or
iret
jmp
repnz
lock
mov
test
retf
mov
(bad)
retf
out
mov
sub
jp
dec
adc
adc
aaa
in
in
test
jg
mov
cmp
mov
ror
rcr
xor
inc
lock
jmp
mov
cmp
inc
cmp
sub
imul
jnp
popf
addr16
mov
jae
adc
inc
sbb
fucompp
add
dec
dec
add
adc
xor
mov
fbstp
retf
jecxz
push
sbb
div
test
pop
xchg
cmp
shl
sbb
test
mov
or
sub
mov
mov
mov
sbb
jmp
fstp
fs
aaa
test
retf
sbb
inc
fwait
call
dec
xor
mov
add
mov
jp
test
nop
xlat
lock
stos
movs
rcl
push
xor
push
mov
lgs
outs
mov
test
rcr
sbb
push
pop
dec
popa
sub
push
push
sahf
inc
xor
xchg
sti
mov
mov
fwait
xor
and
mov
inc
push
ins
adc
or
pop
bound
scas
xchg
mov
pop
dec
pop
pop
push
pop
xor
inc
add
dec
movs
mov
(bad)
call
or
rol
arpl
mov
lds
stc
add
mov
pushf
mov
addr16
(bad)
pop
add
mov
out
in
xor
xor
cmp
call
adc
push
xor
fidiv
xchg
addr16
add
icebp
ins
int
cmp
xor
sub
test
shr
add
xor
imul
jge
xchg
mov
sbb
in
push
dec
adc
stos
jg
addr16
dec
adc
leave
cmp
sub
enter
add
xchg
and
add
mov
test
fisubr
ds
sti
xor
push
shl
add
ret
xor
cdq
rcl
xor
sbb
scas
retf
popf
and
xchg
retf
adc
add
movs
shl
and
pop
cmp
mov
lock
cmp
int
les
pop
cmp
cmp
xchg
pop
aaa
sahf
push
mov
inc
add
mov
push
inc
leave
sti
std
add
or
sub
mov
mov
cmp
inc
int
dec
fisubr
jp
cmps
cmp
int
repz
mov
call
sbb
fwait
dec
sti
cli
fld
sbb
xor
stos
dec
mov
pop
jb
jns
jle
fisubr
xor
std
mov
fldenv
xor
push
push
test
retf
sbb
sbb
bound
shr
push
fstp
es
mov
mov
pop
pusha
dec
sbb
bnd
movs
push
xlat
pop
and
pop
push
or
xchg
fcmove
pop
mov
xchg
call
pop
pop
fsubr
xchg
xor
loop
(bad)
cld
pop
inc
mov
xchg
and
jmp
ss
pop
sbb
in
or
inc
enter
cmp
xor
jmp
cmc
ja
sbb
push
bound
bound
cmc
iret
repnz
adc
(bad)
frstor
cmps
inc
and
movs
cmp
bound
inc
cdq
popa
cli
(bad)
adc
in
ret
test
adc
jl
pop
sysexit
xor
out
je
and
jo
jle
mov
sub
cld
out
aas
test
in
pop
loop
cmp
loop
push
fsubp
or
repnz
lods
cmps
mov
mov
(bad)
fdiv
stc
loop
fmul
push
inc
sbb
push
mov
std
outs
push
mov
ror
ins
xchg
lods
test
adc
clc
xchg
cmps
rcr
cdq
cmp
fs
aas
add
aam
mov
stc
repnz
sti
dec
jns
inc
and
xor
mov
pop
inc
dec
adc
xchg
pop
cmc
ficomp
pop
add
movs
jecxz
push
aas
adc
inc
sbb
inc
mov
stc
or
cli
xchg
movs
out
gs
pop
rcr
dec
cwde
imul
pop
jp
imul
ins
inc
pusha
jmp
repnz
sbb
xlat
imul
pop
jp
js
fsubr
stos
idiv
in
cmp
sbb
cwde
dec
imul
push
loop
add
or
out
push
adc
fisttp
aam
xchg
popa
fimul
or
fs
xor
xor
iret
sub
dec
cli
inc
mov
push
jo
lock
repnz
sbb
mov
mov
clc
mov
shl
jmp
loope
out
jg
and
add
hlt
loope
seta
mov
stos
sar
push
scas
adc
sub
push
mov
aad
sbb
stos
or
mov
pop
add
or
or
jbe
xchg
test
mov
loop
push
cmp
ss
mov
inc
add
inc
pushw
sbb
and
js
jp
mov
mov
add
retf
lock
sub
jb
or
pop
icebp
pushw
jns
or
cmps
fcomp
jge
mov
out
mov
or
push
push
mov
xlat
inc
loop
aas
cwde
mov
psrad
jne
mov
cmp
jecxz
dec
jle
inc
inc
aaa
adc
pusha
mov
adc
mov
std
sti
cwde
mov
fnstcw
or
add
aaa
sub
arpl
icebp
or
cdq
loopne
loopne
lea
loop
mov
push
stos
loop
cmp
xor
xchg
(bad)
mov
fs
(bad)
frstor
cmc
sub
sbb
xor
jp
lods
fs
inc
sbb
adc
mov
adc
xor
movs
inc
aas
lock
push
into
(bad)
retf
cli
fwait
lock
jb
pop
and
das
lock
lds
push
arpl
sub
aas
stos
xchg
add
cmps
fwait
jle
mov
sbb
or
mov
inc
sbb
icebp
dec
mov
add
mov
rcl
cmp
pop
adc
out
jns
daa
fs
stos
pop
jns
std
and
aaa
add
adc
pop
inc
clc
mov
dec
jno
scas
cld
dec
cdq
retf
sub
add
and
cli
into
push
cmp
mov
int3
push
gs
(bad)
and
xchg
clc
int3
jle
js
pop
lock
leave
fld
adc
or
jb
test
mov
js
push
adc
(bad)
xchg
xchg
mov
mov
sub
push
popw
pop
pop
test
pushf
aaa
cmps
call
push
cmp
and
pop
shr
mov
addr16
pop
ss
inc
bound
xchg
sbb
and
cmp
pop
push
dec
dec
adc
loop
je
sub
retf
mov
scas
inc
stc
xlat
dec
fcomp
repz
pop
push
cmp
pop
bound
(bad)
jmp
mov
data16
sub
mov
ds
iret
jbe
call
inc
xor
cmp
popf
mov
xchg
out
cli
into
call
icebp
and
dec
xchg
imul
(bad)
(bad)
sti
or
mov
(bad)
retf
cs
pop
mov
push
test
mov
push
pop
push
jecxz
inc
std
lahf
aas
outs
cmp
sub
or
test
add
mov
sbb
test
out
and
xlat
push
fld
xor
ficom
fsub
mov
clc
inc
ret
mov
(bad)
push
into
inc
sub
dec
cmps
xor
fldenv
dec
adc
sti
inc
ret
mov
rol
repnz
add
xlat
cmp
repnz
xchg
imul
adc
jg
mov
adc
pop
push
in
sbb
aad
rcr
aam
push
jo
fild
shl
or
les
bound
push
test
sti
fimul
fwait
loopne
fsubr
xor
adc
pop
ror
adc
inc
cmp
xor
out
push
stos
mov
repz
xchg
mov
pushf
or
aam
rcl
pop
out
mov
xor
int
aas
test
lods
in
adc
jnp
xor
inc
test
jmp
sub
mov
imul
cmp
lea
lods
fidiv
loopne
xor
dec
sub
sub
dec
je
jecxz
mov
repz
add
xor
jnp
mov
fwait
(bad)
xor
add
out
stos
or
outs
test
loopne
mov
mov
int3
fsubr
sbb
jno
(bad)
and
std
outs
push
pop
push
adc
test
dec
in
pop
or
push
ret
xor
das
xlat
or
mov
cmps
push
fiadd
and
mov
push
sub
(bad)
(bad)
sahf
or
and
and
mov
sub
clc
push
jle
dec
sbb
repz
mov
out
shl
cld
retf
xor
jo
test
xor
cmp
je
push
mov
movs
push
pop
xchg
mov
inc
call
xor
and
cmc
or
push
out
fdiv
pop
call
cmps
jmp
jecxz
sub
cmp
les
or
call
and
jmp
dec
adc
and
in
stos
out
push
add
xchg
cmps
shl
inc
xchg
cmp
or
jne
mov
sbb
sbb
xor
adc
shr
jp
int3
movs
dec
xor
nop
or
repnz
cmp
push
bound
jecxz
enter
mov
inc
add
xchg
push
je
fisttp
ret
cld
dec
adc
arpl
fs
stos
bnd
out
jns
cmp
xchg
ret
mov
jl
bound
xor
adc
xor
jnp
and
jp
push
jge
stos
cmp
fld
call
inc
popf
adc
sbb
mov
ss
jnp
push
nop
fisttp
movs
push
dec
call
pop
cwde
adc
cmp
sub
(bad)
ins
dec
fadd
mov
(bad)
cwde
(bad)
call
xor
inc
pop
rcr
pop
std
mov
and
fdiv
popa
push
rcl
in
fsub
and
dec
sub
dec
mov
les
xor
out
xchg
repz
dec
jmp
push
ins
inc
fiadd
pop
loop
xchg
adc
jle
ins
jmp
mov
pop
xchg
or
mov
add
and
push
stos
daa
(bad)
daa
cdq
xchg
das
cs
sbb
jp
mov
adc
(bad)
push
xchg
sub
bound
adc
fadd
jge
mov
ja
inc
shr
push
inc
xor
mov
shr
adc
sar
ret
iret
mov
sahf
sbb
sbb
cli
jp
jmp
push
retf
push
sbb
rep
xchg
add
dec
mov
mov
inc
(bad)
sbb
inc
mov
push
sti
fadd
add
aad
lock
(bad)
pop
adc
or
in
add
ds
lods
stos
jp
xchg
loop
repnz
xchg
dec
shl
loopne
lock
sub
(bad)
in
mov
mov
aad
xor
dec
dec
jmp
pop
fmul
repnz
push
adc
jns
inc
popf
xchg
mov
sti
shl
push
nop
sahf
out
sub
shr
xor
xor
js
jl
xchg
inc
bound
xor
cld
test
dec
(bad)
fiadd
push
sahf
sar
inc
push
cmp
ja
stos
retf
stos
jnp
xchg
and
mov
loope
xchg
out
stos
adc
dec
jg
addr16
shl
mov
mov
shl
rol
xor
and
mov
pop
add
push
mov
mov
cmp
out
leave
jmp
sbb
stos
int3
inc
adc
pop
add
not
jb
call
icebp
imul
xor
test
(bad)
imul
xor
mov
inc
movs
repnz
sti
outs
jb
push
mov
popf
ret
outs
shl
sub
cmp
push
sub
movs
hlt
arpl
sub
jp
outs
xchg
popa
and
adc
test
jecxz
loop
dec
movs
sar
pushf
ss
lahf
fist
jo
xor
jl
xor
and
dec
adc
jb
push
dec
mov
mov
enter
test
sbb
xchg
xor
cmp
adc
es
pop
bound
in
clc
and
cmp
lahf
loopne
fcmovne
push
cmp
(bad)
jnp
mov
add
test
cmps
jo
adc
test
and
mov
stc
add
imul
or
lods
add
cmp
push
je
js
sbb
int3
jb
xor
mov
mov
fstp
loopne
jb
popa
dec
mov
outs
outs
or
xchg
sbb
sub
mov
clc
cmp
ins
mov
cmps
and
xor
add
(bad)
cwde
out
jmp
ficomp
stc
sub
sub
js
sub
movs
dec
sbb
xchg
xor
pop
or
add
xchg
sub
push
pop
(bad)
cmp
sub
stos
cmps
cmp
xor
jp
jp
jmp
xchg
sahf
mov
push
adc
adc
pop
lods
push
sar
sbb
mov
adc
cmp
mov
enter
cmps
and
push
xor
outs
jo
cmp
fsub
es
shr
cwde
in
push
inc
aaa
and
push
adc
mov
mov
add
inc
mov
jle
mov
int3
cmps
bound
sbb
test
or
jnp
sub
pop
mov
ret
add
pop
loope
pop
cmps
jmp
mov
repnz
xchg
push
xor
cmps
mov
fstp
test
out
cld
daa
imul
sahf
outs
bound
and
jp
ret
std
sub
sub
test
dec
je
call
jno
inc
mov
push
xchg
push
mov
mov
mov
sbb
add
push
cmps
inc
adc
and
cmp
mov
test
push
or
out
rcl
dec
ror
in
mov
jle
mov
sbb
fimul
in
not
outs
imul
add
sbb
jp
stos
mov
rcl
movs
dec
shl
cmp
or
inc
jp
cmp
and
mov
sub
push
cmp
cmp
dec
xor
shr
xor
arpl
out
mov
jb
fwait
lods
repz
cs
out
hlt
clc
dec
(bad)
jmp
pop
sub
out
xchg
repz
jns
test
mov
xchg
sbb
and
or
rcr
cmp
fstp
das
xchg
xlat
or
inc
dec
sahf
xor
aam
in
imul
jecxz
mov
jle
repnz
lea
mov
aas
xchg
mov
aad
shr
sub
pop
test
jns
pop
xchg
mov
stos
xchg
adc
dec
repz
lock
and
fidivr
repnz
sub
out
inc
dec
aas
xor
add
bound
imul
dec
pop
stos
jb
mov
add
mov
rol
or
push
sar
mov
inc
mov
out
mov
loope
dec
or
retf
sbb
popf
push
mov
inc
lea
sub
mov
and
loopne
ficomp
jnp
cld
(bad)
dec
(bad)
cs
test
or
dec
or
inc
sub
stos
push
pop
in
inc
sbb
(bad)
jmp
les
lods
jp
inc
pop
cmp
sbb
jns
cli
xor
jbe
fcmovbe
imul
icebp
cld
xor
mov
movs
outs
jg
test
test
inc
inc
pop
adc
test
mov
jns
ficom
repz
mov
sbb
rol
gs
pop
mov
sbb
js
sub
xor
mov
ins
xchg
xor
loope
jmp
jbe
sbb
sbb
push
mov
mov
jnp
dec
jbe
and
sti
inc
add
jb
mov
ins
movs
bound
adc
mov
adc
mov
movs
jle
leave
(bad)
retf
xchg
fbstp
out
mov
dec
xchg
adc
and
mov
push
mov
mov
cmp
jmp
movs
push
retf
daa
test
pop
adc
call
not
les
movs
sub
pushf
sub
in
sbb
jge
xchg
cmp
pop
adc
movs
call
loop
add
test
mov
int
cmps
or
mov
rcr
xchg
dec
dec
xchg
(bad)
out
fnstcw
add
popa
loopne
jmp
or
jmp
or
add
and
add
push
jmp
pop
adc
out
ja
scas
in
ins
sub
into
js
mov
jno
adc
in
js
mov
out
jmp
jns
mov
mov
jecxz
add
add
ret
popf
cwde
jl
out
add
aaa
push
not
dec
pop
dec
pop
push
iret
ins
jl
outs
jg
(bad)
repnz
push
push
cli
pop
aam
std
inc
stos
sub
ss
and
nop
js
(bad)
aaa
das
jge
jmp
enter
(bad)
fld
rol
leave
jb
rol
cmp
inc
fs
sub
fisub
std
aam
mov
mov
mov
cmps
lea
pop
in
(bad)
fldenv
loopne
sub
jb
mov
push
cmp
inc
lock
shl
jl
add
mov
and
and
dec
add
(bad)
jmp
jp
rcr
mov
into
fimul
imul
(bad)
jp
inc
add
mov
je
mov
xchg
jmp
stos
inc
or
mov
cmps
mov
jmp
in
(bad)
iret
xchg
test
inc
in
movs
data16
xor
jne
enter
pop
jle
imul
and
xor
add
xor
sti
adc
cmp
loope
mov
add
or
(bad)
and
fisttp
retf
sbb
loope
mov
xor
outs
push
xchg
ret
leave
stc
mov
adc
test
mov
push
loop
xchg
outs
mov
imul
call
adc
hlt
pushf
dec
mov
popa
mov
js
and
fstp
jne
nop
mov
cmp
add
lea
dec
stc
xor
arpl
xchg
push
(bad)
das
(bad)
xchg
shl
in
mov
ficomp
pop
pop
mov
dec
call
sub
or
mov
push
pop
xchg
xor
inc
ret
mov
test
int
mov
pusha
inc
ret
cdq
jl
(bad)
mov
loope
sbb
sub
leave
out
(bad)
movs
ss
(bad)
jge
cmp
push
dec
pop
fisub
inc
dec
loope
add
in
xchg
dec
gs
dec
cmp
mov
sti
sbb
mov
mov
adc
(bad)
pop
xchg
mov
mov
retf
add
xor
enter
repz
sbb
clc
shl
push
sbb
xor
js
or
adc
rol
popa
mov
cwde
jmp
dec
int
or
shr
mov
pop
nop
iret
xchg
push
xchg
js
jp
fcmovnbe
adc
add
retf
neg
daa
mov
repnz
sbb
fcomp
push
imul
pop
cmp
push
jge
jp
jge
imul
xchg
fdiv
movs
jmp
retf
push
or
jb
fisttp
inc
cmp
ret
lods
fistp
jmp
sbb
or
cmp
shl
dec
les
lods
ins
add
xlat
fchs
sti
out
pop
fstp
add
lods
xor
pop
inc
jg
and
jae
adc
sbb
pusha
sbb
arpl
clc
jno
sbb
cld
cmp
add
or
in
fistp
int3
stos
add
aad
in
sahf
rcr
mov
xchg
or
push
jmp
mov
mov
and
mov
push
imul
adc
add
movs
pop
dec
jae
jecxz
mov
call
adc
mov
xor
pop
xor
inc
js
lahf
mov
xchg
mov
push
sbb
cli
push
inc
mov
adc
pop
jmp
minps
push
lahf
sbb
push
pop
call
cmp
pop
push
push
and
push
retf
push
or
sahf
mov
aam
mov
mov
and
jecxz
or
lods
out
loop
pop
sbb
in
out
and
js
retf
test
xchg
(bad)
shl
call
mov
jg
repnz
pop
stos
adc
mov
fld
ins
and
repnz
test
(bad)
sub
int3
call
loop
ret
into
push
mov
add
retf
test
loopne
mov
dec
out
add
mov
lds
(bad)
sub
sahf
mov
fucomp
fwait
retf
jl
test
addr16
lods
push
call
fwait
mov
js
jne
ret
xor
xchg
stc
xor
push
or
pop
add
retf
sahf
cld
cmp
mov
enter
push
in
adc
or
(bad)
fmul
jp
frstor
mov
scas
sbb
test
cmp
lock
mov
cmp
fsub
adc
bnd
mov
and
mov
repz
bnd
sbb
xchg
retf
movs
ds
and
pop
in
out
xor
mov
add
cmp
arpl
mov
loop
(bad)
adc
pop
mov
sub
fwait
add
aam
adc
or
mov
in
lahf
mov
rcr
mov
add
xor
pusha
or
mov
jmp
iret
sbb
dec
or
jbe
jp
lods
in
loopne
cli
lar
ficom
in
inc
jo
jmp
mov
ins
push
test
sub
adc
popf
ds
xchg
aad
push
inc
fild
rol
cld
jb
nop
push
mov
(bad)
es
lods
xlat
repnz
push
jmp
push
dec
js
retf
ret
jl
or
xchg
or
pop
shr
sub
in
lds
push
xchg
sub
jle
sbb
rcl
mov
aas
and
out
fdivr
sub
push
sub
pop
adc
inc
call
daa
xor
sti
imul
rol
pop
imul
jo
cmp
cmp
lea
test
inc
add
ja
stos
popf
movs
int
mov
sbb
xchg
retf
stc
shr
dec
inc
jmp
bnd
xor
mov
cmp
jp
jge
jle
add
bnd
jecxz
push
adc
lock
mov
mov
ins
jecxz
shr
or
lods
mov
pop
push
fadd
dec
xor
push
movs
xchg
lock
fcomp
xchg
push
pusha
or
test
(bad)
clc
cs
fnstenv
pop
mov
les
adc
and
mov
and
or
test
pop
and
(bad)
jae
test
or
out
pop
repnz
loope
jno
fnstenv
ins
pop
xchg
push
inc
int3
(bad)
ds
add
mov
fld
sbb
mov
test
jp
mov
and
add
cli
push
cmp
mov
cld
inc
adc
or
or
mov
sub
mov
sbb
inc
inc
xor
popa
pop
retf
inc
outs
or
or
mov
imul
sub
repnz
mov
int3
push
cmp
gs
push
fwait
(bad)
aas
jecxz
repz
mov
inc
cmp
jns
and
fisub
push
dec
daa
pcmpeqb
and
jae
cdq
push
stos
cli
cmps
adc
mov
push
inc
in
adc
rcl
jecxz
in
cs
dec
rcr
ret
mov
mov
mov
bound
jne
mov
pop
enter
(bad)
and
and
sbb
cmp
es
(bad)
aam
inc
les
lock
mov
mov
cmp
mov
inc
fwait
imul
or
pop
ret
dec
cs
mov
sti
inc
or
sbb
in
out
xchg
lock
clc
or
repnz
ss
add
mov
nop
mov
lahf
inc
xchg
nop
movs
pusha
mov
stc
mov
mov
jb
stos
pop
mov
cmp
jmp
mov
fs
mov
mov
movs
ret
pop
ret
jno
pop
sbb
add
and
inc
or
jbe
jl
and
xchg
mov
ror
leave
sbb
mov
adc
nop
xor
xor
jae
jae
jl
lds
ror
stos
sbb
mov
cmc
mov
outs
jns
jl
cmps
sub
lds
dec
ret
into
call
inc
mulps
cmp
adc
push
mov
inc
out
cs
loopne
cmp
xlat
dec
mov
sbb
dec
ja
jne
mov
mov
outs
xchg
mov
sbb
or
xchg
cmp
jp
adc
xchg
pop
fst
pop
inc
and
and
jne
imul
lds
adc
frstor
and
into
lods
cmp
repnz
xchg
xor
push
ror
push
xchg
mov
mov
loopne
and
add
add
loop
mov
push
call
cmp
cli
xor
push
ret
sbb
jb
and
cmp
xchg
lea
mov
data16
mov
pop
retf
cmp
push
pop
leave
stos
fist
sub
cmc
jmp
aam
cmp
push
rcr
inc
jp
pusha
mov
(bad)
push
mov
fcmovb
cmc
and
xchg
cli
jnp
mov
mov
sbb
push
inc
dec
fmul
push
and
mov
and
fild
ss
or
sub
or
jle
pop
or
(bad)
sbb
push
enter
es
pop
mov
cld
add
icebp
add
xchg
xor
xor
call
or
js
pop
push
mov
test
arpl
hlt
aam
xor
lahf
push
psubb
cwde
or
in
inc
movs
pop
cmp
pop
inc
int
cmp
and
mov
cmp
xor
jmp
jle
inc
jns
add
in
neg
stos
mov
mov
ss
lock
add
dec
xor
dec
mov
sub
jne
xchg
bound
scas
jo
sti
dec
sar
add
inc
cmp
jo
add
nop
and
jle
pshufw
fdivr
pop
fsub
inc
test
cmc
retf
mov
xchg
test
icebp
jmp
pop
mov
sahf
xor
xlat
jo
pusha
mov
enter
jg
inc
mov
sub
aam
(bad)
xchg
or
add
mov
cmp
pop
call
leave
mov
jbe
sub
fnsave
fucom
adc
rol
mov
mov
lods
push
add
ins
fld
inc
xor
les
rcl
mul
call
push
cmp
jmp
sti
imul
xor
push
xchg
std
xchg
loope
cdq
adc
add
ror
fiadd
dec
ins
or
jns
je
shl
lods
mov
div
jne
jecxz
cld
mov
xor
ins
jns
push
xor
popa
frndint
mov
sbb
adc
mov
xchg
sub
data16
mov
scas
sub
or
add
mov
int
xchg
and
das
xchg
dec
cli
xchg
shr
mov
lds
movs
push
sbb
fisub
xchg
scas
sub
xchg
stos
sbb
retf
mov
stc
xchg
sti
xor
cmps
pusha
mov
repz
das
jg
test
popf
push
int3
loop
mov
cmps
fcmovu
enter
add
push
js
xor
adc
aas
push
outs
mov
cmp
sub
push
mov
mov
pop
(bad)
fadd
das
pop
inc
das
pushf
inc
push
mov
aam
mov
test
out
mov
pmovmskb
push
jno
push
add
pop
pop
repnz
jo
sub
repz
jb
cmps
mov
or
jp
(bad)
call
mov
xchg
enter
popa
pop
pop
les
inc
mov
adc
popf
adc
dec
lods
jno
xchg
out
push
ret
adc
mov
push
pop
mov
std
dec
cmps
lds
push
jbe
jp
hlt
and
stc
and
jecxz
mov
fcmovnbe
imul
call
(bad)
imul
xchg
xchg
pop
and
jp
or
xchg
loope
mov
into
rol
inc
or
or
sbb
mov
shl
xor
adc
aad
cmp
fistp
cli
cdq
aam
cmp
out
xchg
out
pushf
mov
leave
mov
shl
test
and
cmp
cmp
pop
ret
sti
in
or
push
fimul
js
fxch
jmp
inc
les
sub
pop
pop
mov
adc
ret
aad
call
inc
mov
push
jp
mov
out
mov
xchg
and
enter
in
fwait
loop
jmp
mov
inc
or
pop
adc
es
(bad)
mov
movs
adc
fist
(bad)
cmp
add
popf
call
sbb
pop
mov
inc
xor
repnz
aam
cmps
push
ret
rcr
int
cmp
bound
fsub
xchg
sar
pop
ss
xchg
les
ins
loopne
cmps
test
fmulp
loope
sbb
stos
inc
add
lahf
enter
lds
jb
dec
jmp
test
mov
imul
popa
inc
movs
mov
loopne
(bad)
sahf
push
xchg
(bad)
popf
ins
fist
jp
test
xchg
fwait
retf
adc
repnz
leave
inc
dec
push
sub
push
arpl
cdq
push
in
jae
pop
bound
(bad)
je
mov
aad
mov
adc
sub
cmp
pusha
ins
jmp
and
rcl
jecxz
sahf
jp
or
and
add
lods
push
adc
outs
lds
out
mov
(bad)
add
es
ja
xchg
arpl
ret
mov
mov
cmps
dec
sub
dec
outs
loop
repnz
cmp
xchg
cmps
out
xchg
xchg
sbb
sub
xor
mov
mov
cdq
stos
adc
xor
popa
sub
js
push
xchg
mov
movs
dec
lods
scas
rep
mov
pop
fwait
mov
aas
jg
hlt
inc
cli
ficomp
test
mov
scas
xchg
out
mov
push
pop
push
sbb
das
push
sub
stos
inc
fsub
mov
mov
rol
ins
xchg
jg
pusha
fnstenv
int
inc
lock
addr16
mov
cwde
stos
adc
call
adc
push
push
scas
cmp
lods
or
cs
mov
mov
outs
cs
push
inc
rcl
call
stc
ror
sbb
fsubr
call
stos
rcr
xchg
inc
cmp
bound
enter
mov
jmp
jmp
lock
jmp
pop
jl
cmp
mov
cmp
cmps
dec
mov
jnp
stos
mov
jae
(bad)
dec
sub
push
pusha
inc
mov
jp
aad
in
cmps
or
jp
bound
push
add
mov
push
outs
fidiv
add
leave
dec
retf
int3
mov
inc
sbb
(bad)
mov
or
test
pop
cmp
pop
arpl
repnz
jmp
add
inc
xor
or
push
adc
cdq
sub
out
ins
sti
stc
ins
mov
repz
sbb
adc
cmps
in
jb
mov
call
cmps
mov
sbb
ins
aaa
push
jmp
dec
lea
push
cmp
stc
ret
xor
cs
dec
mov
jne
pop
mov
push
cmp
hlt
mov
into
add
mov
pusha
shr
cmp
rol
test
cbw
and
shr
sub
push
push
leave
add
xchg
stos
push
stos
jb
sbb
enter
cwde
dec
mov
pop
xor
popa
sbb
inc
xor
(bad)
or
sbb
fs
retf
ret
or
sub
push
or
pop
data16
daa
jp
(bad)
sahf
push
das
xor
aad
push
add
test
sub
clc
adc
mov
call
or
fdiv
test
shl
cmp
push
mov
inc
out
aas
or
push
add
sbb
add
pop
mov
dec
bound
pop
jecxz
enter
jns
scas
adc
movs
test
mov
cdq
push
lods
and
popa
dec
sbb
adc
xor
fstp
in
and
inc
cmps
(bad)
mul
mov
daa
push
pop
adc
mov
ficomp
retf
jo
jl
jp
sub
pop
cmp
dec
out
outs
mov
lea
pop
sbb
stos
out
inc
stos
ror
sbb
ror
jle
pop
pop
push
jae
(bad)
(bad)
les
ins
cmp
(bad)
xchg
bound
sub
push
mov
xor
mov
sar
jb
out
ret
adc
js
cmp
out
xor
fdiv
fidivr
in
retf
ret
adc
mov
dec
and
mov
test
push
add
pop
aam
mov
push
cmp
clc
xchg
jmp
jg
xchg
sbb
adc
stc
push
fadd
inc
(bad)
nop
scas
hlt
dec
fdivrp
mov
cmp
jge
push
pop
stc
push
or
je
inc
fisubr
mov
in
fiadd
mov
daa
jmp
inc
cmp
sub
cld
(bad)
leave
jmp
jmp
and
or
fcom
int
idiv
pop
lds
mov
push
push
out
bound
bound
jae
imul
add
xchg
jl
xchg
sbb
push
add
js
xchg
rol
xor
jg
sbb
cli
xchg
(bad)
xchg
xchg
xchg
xchg
sub
test
loop
imul
adc
mov
cmc
in
xor
or
jg
in
cs
mov
add
jge
call
js
(bad)
int3
xchg
mov
xchg
adc
jp
aaa
and
pop
stos
dec
out
push
mov
adc
or
push
mov
mov
sub
sbb
adc
inc
adc
inc
add
xchg
mov
add
cmp
jne
sahf
not
mov
bound
sbb
inc
mov
sub
adc
cmp
cmp
dec
xchg
(bad)
xor
mov
add
or
inc
sbb
shl
scas
pop
cld
pop
pop
clc
sub
daa
fs
(bad)
cmp
arpl
cmps
test
ja
cwde
and
push
hlt
loopne
cmps
push
iret
xchg
sti
jmp
mov
imul
cli
lahf
loope
(bad)
dec
jg
cmp
leave
add
sbb
pop
jmp
push
mov
scas
mov
sbb
mov
push
push
mov
rol
or
pop
adc
cdq
shl
adc
or
inc
pop
add
xchg
aaa
pop
jmp
pop
cmps
push
outs
push
pop
mov
sub
adc
fstp
xor
(bad)
mov
mov
retf
fidiv
xor
(bad)
fsub
add
bound
sub
jecxz
in
dec
adc
sub
or
fidivr
dec
cmp
cli
ins
cli
shl
loope
mov
inc
adc
std
dec
cli
push
pop
jb
push
repnz
sbb
jle
mov
dec
ret
outs
add
outs
enter
pop
pop
lahf
sub
ret
add
fiadd
sti
jo
mov
cmp
mov
ficom
aad
mov
cwde
mov
jmp
(bad)
xchg
add
stc
test
or
sbb
fdivrp
test
iret
or
jecxz
xlat
ret
repnz
jle
push
das
mov
mov
imul
shl
mov
inc
int
sti
cmp
loopne
pop
loopne
mov
shr
pop
adc
sbb
rcl
std
pop
not
sub
and
jb
call
ror
adc
cmc
push
call
jp
push
push
mov
sbb
repnz
push
leave
ret
repz
inc
or
retf
repnz
cmc
fwait
jle
imul
leave
jge
push
and
push
sbb
fs
push
lods
mov
daa
cmp
adc
jg
push
movs
scas
(bad)
loopne
stc
pop
pop
mov
xchg
stos
and
bnd
jmp
pop
scas
xchg
jg
ret
jnp
xchg
mov
cmp
(bad)
mov
sbb
push
inc
cmp
rcl
push
cmp
push
mov
mov
ffree
mov
and
mov
mov
xor
xor
data16
fcmovnb
int3
mov
(bad)
sti
pop
repnz
cdq
push
push
or
imul
push
mov
pop
cmp
jmp
(bad)
movs
cmps
(bad)
dec
sbb
dec
dec
ror
out
dec
dec
cwde
popa
cs
(bad)
adc
xchg
call
je
cmp
aam
jp
(bad)
fdiv
xchg
cmps
out
lahf
mov
mov
shr
mov
fadd
adc
cmc
and
cwde
lea
push
(bad)
sti
leave
cdq
loop
movs
adc
sbb
fidiv
not
js
ins
jns
or
pop
sbb
imul
shl
xchg
push
(bad)
stos
xor
popa
loop
mov
xchg
xor
test
jbe
mov
sbb
adc
jnp
xor
sub
stos
jo
and
aaa
push
cdq
in
daa
popa
movs
jb
mov
jmp
fild
(bad)
repnz
enter
xchg
fsub
call
xor
jl
sbb
push
sub
add
scas
mov
pushf
(bad)
into
mov
dec
popf
pushf
out
pop
adc
adc
sub
cmp
movups
rcr
icebp
xor
xchg
sbb
mov
add
push
inc
lock
test
imul
jge
mov
shl
cmp
mov
std
mov
hlt
adc
daa
cli
sub
adc
xor
push
push
and
daa
sub
das
and
stos
outs
cmp
xor
in
mov
das
pusha
xchg
scas
in
pop
and
dec
jp
ror
mov
cwde
ffreep
cmps
call
fpatan
lds
stc
mov
(bad)
jecxz
in
jae
adc
xchg
shl
stos
xchg
and
ins
in
rol
jmp
mov
(bad)
xchg
push
out
adc
jl
jbe
cmovb
dec
jne
jae
xor
pop
jmp
repz
sub
fucomi
mov
jmp
xor
push
pushf
mov
sub
pop
sbb
xor
jmp
shr
dec
mov
inc
xor
repnz
mov
mov
and
sbb
fisttp
retf
lods
shl
mov
pop
cdq
push
jnp
mov
cmp
inc
and
(bad)
mov
jb
jle
shl
and
inc
retf
loope
cmp
sbb
add
scas
mov
xchg
inc
popf
jo
or
mov
lock
je
jbe
mov
xchg
call
enter
sbb
xor
adc
loopne
retf
pop
mov
addr16
mov
and
(bad)
rcl
xchg
loope
add
(bad)
xchg
sub
push
ins
ds
pop
mov
pop
scas
js
imul
aad
aam
inc
push
inc
dec
nop
in
in
mov
daa
or
pop
push
popa
jmp
xchg
jg
nop
das
xchg
mov
iret
sbb
push
push
adc
push
and
push
pop
sar
movs
and
in
mov
mov
lock
dec
adc
and
icebp
cmp
jle
dec
cmp
adc
hlt
in
jnp
pop
and
cmp
das
test
or
call
(bad)
cmps
add
mov
sbb
in
mov
jmp
cmp
in
add
movs
sbb
sub
(bad)
mov
xor
jmp
cmp
outs
imul
jae
xchg
xor
mov
mov
in
out
repnz
jmp
call
sub
repnz
std
push
xor
dec
fstp
cmps
repnz
int
imul
ins
inc
fcomi
mov
je
mov
popa
lods
cld
mov
xchg
das
retf
out
shl
and
test
retf
mul
mov
ins
jecxz
or
jmp
ins
fisttp
les
sbb
adc
test
sbb
imul
cmp
inc
stc
ror
fldenv
mov
sbb
and
xchg
cmp
mov
xchg
or
cwde
sahf
push
xlat
rol
adc
and
mov
jg
jge
or
dec
and
or
mov
xlat
xchg
movs
lods
sti
xor
and
and
and
push
sub
test
xor
(bad)
dec
mov
fwait
repnz
and
adc
mov
mov
call
inc
add
mov
in
lock
frstor
mov
lock
bound
repnz
jno
fisubr
retf
xchg
aad
inc
add
and
lahf
sub
jae
call
mov
sti
repz
sub
into
(bad)
cmp
add
jp
push
cmp
push
add
stos
push
mov
xor
stos
lahf
stos
mov
lahf
sbb
jae
push
mov
push
enter
outs
add
xor
rol
dec
jg
inc
cwde
xor
jne
xchg
movs
xchg
sahf
or
mov
sub
or
jle
test
jecxz
xor
push
movs
sti
mov
stos
fidiv
out
sbb
xchg
push
scas
in
or
inc
mov
inc
dec
adc
xor
cmp
shr
or
xchg
fisttp
cli
sub
and
ins
rcr
mov
faddp
ret
fwait
leave
fist
aam
push
xlat
arpl
std
jp
ds
scas
sub
cld
xchg
clc
cmp
in
jb
loopne
repnz
daa
test
fisttp
sar
add
gs
cli
int
in
jnp
mov
jno
dec
arpl
adc
mov
int
shr
mov
jp
ja
mov
pushf
leave
xchg
leave
pushf
aad
jmp
frstor
or
sbb
inc
je
xchg
(bad)
dec
xor
ret
push
dec
dec
mov
repnz
sti
aad
outs
sub
adc
shr
xchg
jecxz
pop
ja
push
jge
cs
inc
adc
mov
push
dec
sbb
mov
add
inc
out
cmp
xchg
jmp
call
dec
popf
int3
sbb
pushf
push
jnp
adc
rcr
rcr
mov
inc
jecxz
test
sub
mul
and
mov
jl
test
icebp
xlat
sbb
and
(bad)
push
pop
add
sbb
repz
and
ficom
rol
inc
arpl
retf
cmc
jecxz
repz
xor
jmp
pop
pop
push
inc
jg
mov
bound
add
aas
adc
daa
mov
mov
and
jne
stc
test
je
pop
retf
pusha
xchg
shl
pop
add
push
jns
xor
mov
mov
fist
fstp
cld
popf
mov
sbb
sub
repnz
or
out
xchg
mov
stos
add
ins
cli
sub
std
mov
or
hlt
jnp
sbb
or
pop
cld
stos
xchg
sub
jb
out
aad
cmps
imul
aaa
lods
fimul
or
mov
add
les
retf
(bad)
cmc
sub
mov
lock
mov
xchg
inc
adc
ss
mov
scas
retf
adc
hlt
mov
pop
xchg
push
std
push
inc
lods
adc
scas
int
dec
ret
or
neg
repnz
inc
xadd
shl
jnp
mov
add
mov
nop
sti
cmp
ins
fist
clts
(bad)
ss
ds
leave
xor
inc
scas
in
jecxz
rcr
push
mov
in
out
jnp
clc
ret
jne
cli
retf
sbb
aam
out
fst
dec
xor
push
cmp
cdq
and
xor
stos
push
fiadd
inc
add
test
bound
and
sub
retf
cwde
or
jb
inc
or
fwait
es
mov
or
arpl
jle
test
and
mov
sub
cwde
push
add
add
shl
cli
or
push
xor
je
and
xor
or
or
and
mov
inc
push
mov
mov
jb
push
push
aaa
hlt
mov
jae
xchg
sar
ds
and
(bad)
call
or
push
push
cmps
or
xchg
xor
outs
sub
push
fmul
enter
mov
mov
div
push
sbb
dec
xchg
cwde
jl
out
es
rol
das
popa
mov
and
mov
imul
xor
ins
js
cdq
cli
pop
retf
stos
cmp
std
xor
xchg
das
push
inc
xor
mov
xchg
mov
lea
sub
dec
repnz
xchg
stos
add
sub
outs
push
xor
or
inc
or
jmp
imul
mov
jbe
inc
inc
mov
mov
jbe
push
mov
add
or
adc
std
xlat
movs
lds
shl
ffreep
mov
(bad)
adc
sbb
dec
into
sub
inc
call
out
cmp
out
ret
cmps
adc
stos
mov
push
test
call
arpl
rcl
jnp
and
mov
push
sbb
xlat
pop
jmp
fimul
aad
inc
in
dec
lahf
ins
mov
mov
sub
retf
aam
xor
or
pop
jmp
inc
pop
das
and
mov
mov
js
cdq
loopne
into
fwait
cli
add
mov
sbb
cmp
rol
inc
sbb
fcomp
lods
faddp
dec
inc
or
xor
call
jb
out
or
movs
pop
add
les
cmp
cmp
hlt
dec
and
jl
out
inc
repnz
pop
in
jnp
xor
stc
jno
pop
and
loop
iret
hlt
add
mov
cwde
leave
les
dec
jmp
inc
lods
popa
sti
push
and
dec
cld
mov
ss
xor
pop
cld
iret
inc
pop
adc
add
sbb
xchg
mov
(bad)
pop
mov
dec
add
jmp
ins
imul
scas
fsub
popa
dec
adc
js
mov
dec
push
dec
adc
or
sar
adc
repnz
mov
fnstsw
dec
or
pop
and
jl
call
cli
mov
cwde
mov
in
stos
in
and
and
inc
mov
in
xchg
add
jne
mov
cld
add
add
leave
or
xor
ficom
or
sbb
cmp
(bad)
(bad)
bnd
repnz
adc
outs
rcr
xchg
dec
push
std
mov
xor
mov
loopne
(bad)
in
cmp
test
popf
dec
cmc
dec
ss
aaa
sbb
movs
push
ds
sub
popf
(bad)
inc
sbb
fwait
sar
(bad)
cld
push
jl
adc
mov
(bad)
fldcw
cli
cmp
cmp
and
rcl
jmp
pop
(bad)
lds
push
test
(bad)
ror
(bad)
xchg
imul
mov
sub
mov
inc
xor
jl
sub
sub
mov
cmp
out
repz
push
aad
rcr
imul
pop
jmp
lods
enter
repnz
call
bnd
ins
bound
out
bnd
mov
(bad)
fmul
ins
aas
cli
(bad)
aad
mov
das
repz
in
jl
adc
test
or
dec
sub
test
clc
mov
fcomp
or
mov
jecxz
and
jl
push
mov
add
leave
enter
mov
call
ret
pop
and
gs
ficom
popf
frstor
pop
int3
jg
jmp
inc
stos
cmp
mov
jp
dec
lods
aam
xor
and
retf
jecxz
dec
jmp
dec
or
xchg
lods
or
sbb
mov
or
imul
lock
ret
leave
xchg
mov
cmp
ret
adc
aaa
fisttp
push
mov
dec
xlat
xchg
jmp
jle
pop
inc
jb
jnp
inc
and
xchg
push
out
mov
loop
mov
push
and
mov
xchg
shl
add
ror
mov
mov
(bad)
retf
addr16
or
sbb
pop
cmp
mov
xor
shl
and
cli
add
bound
cmp
add
push
leave
stc
xchg
xlat
daa
sbb
(bad)
cld
mov
sti
daa
mov
mov
sub
jnp
dec
xor
and
scas
jecxz
dec
rol
xor
mov
push
cmp
dec
jp
lahf
cld
pop
inc
push
xor
inc
arpl
cdq
sbb
hlt
xchg
jns
sbb
cmp
sbb
cs
lods
inc
aam
scas
lds
push
lea
xchg
mov
inc
ja
rcr
cmp
(bad)
mov
or
jbe
pop
xchg
std
or
mov
fistp
push
call
jecxz
xor
ret
and
jbe
push
add
cmps
das
in
jmp
in
cmps
sub
mov
fcom
lahf
jb
jecxz
aas
jmp
lods
sti
scas
retf
arpl
movs
in
xchg
out
mov
(bad)
mov
jmp
cmp
mov
inc
jns
mov
jmp
sub
sbb
mov
mov
dec
dec
and
inc
sti
xchg
mov
sub
mul
mov
dec
lea
shl
jp
call
int3
and
adc
ss
jecxz
dec
mov
ss
mov
in
loopne
inc
pop
jae
clc
enter
adc
mov
inc
(bad)
push
test
jecxz
push
mov
xchg
add
and
cmp
and
cmp
mov
push
outs
inc
gs
fistp
sub
cmp
repz
cmp
(bad)
ins
test
mov
push
fcomp
jmp
into
xor
sub
inc
adc
and
pop
push
loope
sbb
jmp
aas
mov
pop
outs
cmovb
jb
pop
mov
mov
lea
(bad)
js
shl
cmp
push
dec
xchg
push
mov
push
sbb
dec
jno
or
shr
scas
leave
jmp
dec
mov
jb
mov
push
out
jnp
cmp
ffreep
xor
and
pop
jmp
int
in
imul
push
adc
pop
dec
mov
adc
ret
cmp
stc
arpl
cld
xchg
add
(bad)
adc
jno
fsub
mov
pop
push
or
jae
sub
add
adc
lea
xor
in
inc
mov
xor
jns
pop
loop
sub
xor
dec
sub
and
mov
jnp
push
mov
or
inc
lods
popa
cli
movs
mov
inc
retf
lock
push
mov
sub
add
mov
xchg
fimul
push
and
inc
xchg
push
(bad)
retf
jo
fisub
inc
test
test
xchg
fwait
repnz
cmp
dec
repz
jecxz
mov
bound
add
sbb
or
jns
pop
xchg
mov
dec
adc
sbb
outs
and
and
sbb
or
jae
rol
into
sbb
jb
test
sub
(bad)
sub
in
or
mov
jb
lock
outs
(bad)
jle
bound
push
and
cli
sbb
neg
stos
ficom
push
add
cmp
jecxz
loop
(bad)
ja
mov
jecxz
adc
jg
or
das
add
mov
int
push
(bad)
int3
cmp
xor
jb
inc
xor
or
cmp
call
xchg
jb
inc
mov
add
inc
adc
fld
jb
xor
xchg
cld
out
fnstsw
(bad)
rcl
in
jns
mov
adc
xor
push
out
mov
xchg
dec
loopne
ret
leave
daa
jno
js
pop
ror
lock
(bad)
push
das
push
jnp
cmp
test
call
(bad)
mov
nop
ins
mov
rol
mov
or
mov
jmp
pop
inc
push
fistp
(bad)
fistp
adc
add
mul
mov
xlat
sti
xor
out
inc
js
add
loop
in
mov
and
cld
out
movs
xchg
ror
cld
pop
daa
fucom
add
and
stc
xchg
pop
sbb
jle
popa
fsub
or
sar
arpl
sbb
jo
jge
cwde
pop
mov
mov
pop
clc
clc
mov
and
call
xchg
inc
mov
xchg
inc
push
out
xlat
sub
loop
out
xor
adc
cmp
cmp
rcr
dec
mov
adc
mov
cmp
arpl
cmp
lock
enter
xchg
loop
imul
or
or
cs
dec
sbb
cmps
clc
mov
and
dec
rcr
stos
push
sbb
cmps
scas
and
push
mov
lods
dec
add
fsub
or
jle
(bad)
fcom
mov
aad
jb
std
or
sub
mov
pusha
jg
sub
fs
mov
cmps
pop
mov
je
ret
out
cmp
mov
sbb
movs
jno
retf
xor
ret
push
xchg
xor
mov
in
mov
inc
dec
xor
or
push
dec
and
adc
and
ja
dec
or
dec
retf
and
xchg
neg
ret
push
or
jb
arpl
addr16
stos
mov
xor
jne
push
cs
inc
popf
cmp
inc
cs
push
stos
les
sbb
sbb
jne
or
lea
rol
sub
jb
xor
ss
lods
int3
mov
je
pop
add
and
xor
fstp
sub
mov
push
mov
mov
jp
push
push
push
push
arpl
rcr
stos
fist
mov
push
out
and
arpl
sahf
(bad)
test
stos
out
and
mov
aaa
rcr
cmp
sub
aas
(bad)
cmp
xchg
test
idiv
pusha
push
arpl
xchg
cld
idiv
add
mov
mov
sub
imul
sti
loop
or
in
mov
inc
icebp
btr
inc
fs
gs
sbb
jb
(bad)
xchg
movs
loop
in
push
push
pop
xor
jmp
shl
cli
pop
dec
or
jne
ror
aaa
das
mov
(bad)
jae
and
mov
shl
or
cmp
xchg
fist
(bad)
cli
mov
adc
lahf
or
cwde
std
jb
cmc
or
loope
dec
push
or
stos
push
jnp
mov
pop
push
push
sbb
mov
scas
jmp
movs
mov
jno
push
icebp
inc
or
xchg
ins
daa
xchg
ret
loopne
dec
cmc
xchg
mov
xchg
xor
or
dec
pop
inc
sub
mov
cmp
mov
cmp
test
sub
jge
adc
in
jmp
sar
jne
xchg
sbb
(bad)
sahf
jns
jmp
(bad)
jb
ret
dec
ins
and
mov
dec
rcl
jecxz
aam
lods
add
adc
mov
popf
fidiv
mov
pop
iret
or
push
push
xor
jmp
pop
stos
fisubr
jmp
mov
cmps
pop
dec
sti
int3
push
sbb
dec
rcl
mov
pop
stos
or
sbb
mov
shl
loope
fs
mov
cmc
loop
xchg
lahf
stos
sahf
sbb
xor
or
inc
mov
enter
jmp
scas
jo
xor
rcl
push
je
pop
inc
add
mov
mov
adc
inc
jecxz
pop
add
test
ja
mov
or
daa
fcom
cli
xor
ja
ficomp
xchg
call
fadd
loopne
sbb
sub
jecxz
jge
hlt
mov
rcr
ret
pop
jbe
ret
jle
add
fwait
mov
ret
jo
lods
hlt
mov
adc
sbb
add
push
push
xor
sbb
ds
sbb
pop
sti
rcl
sar
mov
xor
adc
jbe
fcmovu
inc
xchg
call
adc
dec
mov
les
jecxz
mov
push
push
xchg
jmp
xor
aaa
cwde
adc
test
fwait
jbe
ds
repz
adc
sahf
mov
aam
mov
retf
jp
sahf
(bad)
rcl
pop
scas
das
jl
enter
popa
jo
adc
pop
dec
bound
add
xchg
std
dec
test
sub
push
adc
inc
pop
in
out
sub
xor
pop
ret
aas
repnz
adc
retf
(bad)
pop
add
fidivr
push
push
xor
jl
inc
int
cmp
cmp
push
out
ret
(bad)
and
pop
adc
push
xchg
push
jl
popf
jo
les
push
ror
lods
xchg
outs
or
inc
add
sbb
xchg
xor
mov
imul
(bad)
stos
mov
push
stc
ins
mul
call
and
sahf
cmp
rol
scas
(bad)
xor
in
and
push
lahf
ret
and
arpl
mov
or
leave
out
or
mov
jmp
fsub
xor
and
jmp
fst
ds
mov
pop
add
mov
inc
push
adc
and
ret
retf
mov
pop
das
or
jno
out
add
rep
cmc
dec
or
loop
repnz
sub
in
add
loope
inc
mov
or
std
pop
and
xor
inc
and
mov
inc
out
adc
mov
pop
stos
mov
loopne
inc
adc
mov
loop
adc
jp
jl
sub
movs
(bad)
(bad)
pop
mov
xor
fstp
push
sbb
call
adc
mov
add
cmp
out
pop
outs
push
retf
add
and
fisub
cmp
ins
and
retf
ins
cmps
out
sar
in
or
jae
mov
add
pop
push
xor
cmc
jo
inc
scas
fstp
sbb
ss
repz
inc
stos
inc
and
(bad)
jmp
adc
lods
ret
add
and
ret
idiv
lods
sub
(bad)
stc
push
xor
call
adc
add
loopne
clc
xchg
or
scas
rcl
scas
rcr
push
cli
inc
ret
imul
sbb
das
pusha
and
loop
sub
sahf
call
retf
dec
dec
jp
stos
test
fsubr
lods
(bad)
mov
imul
dec
sbb
dec
loop
sub
lock
push
cmp
pusha
sub
xor
cld
dec
bound
mov
xchg
jb
xchg
sub
and
pop
(bad)
in
mov
lds
push
xor
das
sbb
mul
icebp
stc
mov
sahf
lea
push
inc
test
icebp
adc
fs
call
jb
cmp
jp
mov
int3
mov
mov
push
loope
(bad)
mov
movlps
cmps
fiadd
or
push
retf
xchg
add
xchg
jns
cmps
xor
or
call
jnp
push
sub
xor
adc
sbb
test
and
sbb
pop
fisub
mov
outs
test
and
push
jecxz
ror
daa
pop
cs
sbb
retf
sbb
mov
lods
fild
call
movs
pop
in
mov
and
ret
sub
jle
bound
fst
mov
(bad)
or
push
xchg
addr16
jmp
jl
rol
sub
cmp
xor
mov
(bad)
iret
push
popf
inc
cmp
mov
hlt
pusha
jmp
push
inc
sub
mov
mov
jmp
dec
call
shl
or
push
outs
in
call
mov
push
retf
les
mov
div
stos
dec
shl
pop
xor
enter
inc
push
xchg
and
cli
and
(bad)
pushf
dec
retf
rcr
push
mov
jns
push
mov
cmp
fdiv
movs
pop
das
pop
popf
push
call
xor
jbe
stos
jl
pop
jle
xlat
xchg
pusha
lods
push
retf
dec
fldcw
cmp
pop
inc
jle
call
push
inc
mov
mov
push
jb
retf
add
test
retf
bound
mov
retf
xor
sahf
mov
mov
ret
mov
in
into
and
pop
loop
pop
jge
sar
cmp
adc
in
inc
jb
retf
inc
enter
fst
dec
mov
inc
mov
adc
leave
mov
sbb
xchg
push
pop
call
sbb
(bad)
cmp
ror
mov
rol
stc
cli
cld
call
fwait
cmp
cdq
(bad)
push
dec
into
xchg
not
cwde
jae
xor
push
imul
push
mov
xor
mov
pop
in
mov
addr16
cmp
or
or
pop
and
sbb
jge
aad
sub
add
add
loopne
push
jb
data16
mov
mov
and
ret
in
push
loopne
movs
int3
xchg
mov
adc
adc
and
stos
js
or
mov
imul
xchg
and
in
add
mov
push
je
int3
jle
ja
push
loopne
mov
fadd
cmp
push
sti
hlt
push
mov
mov
push
add
cs
arpl
inc
sbb
mov
add
adc
mov
lods
das
sub
push
sub
les
test
sbb
clc
nop
adc
aaa
cli
mov
mov
push
jp
ins
arpl
jecxz
in
mov
jl
mov
mov
fisubr
aad
push
stos
and
pushf
das
add
jns
fcom
xlat
fstp
cmp
lods
sub
aas
cld
adc
adc
jbe
bound
jecxz
add
xor
mov
xor
mov
add
add
lahf
and
dec
xor
or
mov
fs
sbb
adc
fisub
jg
inc
(bad)
mov
sahf
(bad)
loopne
in
repnz
pushf
pop
int
push
mov
cmp
scas
ret
mov
cmps
data16
cmps
sub
adc
add
xor
jo
idiv
push
cmp
in
mov
mov
fwait
icebp
mov
xor
repnz
xor
xchg
xchg
fisttp
inc
dec
or
test
shr
jg
xor
push
idiv
jne
(bad)
sub
in
in
sbb
mov
cmp
xchg
or
adc
aam
inc
mov
push
icebp
xchg
sbb
mov
xchg
cmp
loop
jecxz
xchg
pop
xchg
dec
shr
or
jns
push
mov
jnp
add
jmp
mov
into
pusha
xor
jmp
bound
dec
das
jb
cli
xchg
push
imul
mov
inc
mov
dec
cmp
js
mov
(bad)
adc
cmps
or
and
sbb
push
fstp
jns
out
outs
sub
inc
sub
mov
pop
lock
clc
inc
adc
mul
cmp
scas
push
and
pop
mov
(bad)
jg
fist
jno
and
and
sti
or
scas
adc
movups
sar
xchg
pop
cmp
test
das
int
icebp
cld
jo
jb
xor
imul
mov
mov
push
fcom
inc
int
xor
jle
hlt
jl
movs
stc
jmp
rcl
push
rol
push
fidiv
scas
xor
arpl
or
pop
push
fwait
pop
fidivr
mov
sub
mov
out
xchg
mov
jmp
sub
jg
out
cld
mov
jb
andps
xchg
fdiv
mov
repz
das
test
mov
mov
jmp
xor
add
mov
(bad)
je
test
aas
jnp
outs
ret
xor
pop
sbb
outs
sbb
call
xchg
pop
mov
mov
sbb
call
lock
outs
movs
pop
mov
mov
in
fcomp
push
shr
leave
inc
mov
sar
mov
xchg
xchg
sbb
mov
(bad)
neg
shl
aad
pop
out
out
test
shl
sub
push
and
push
cli
aas
in
or
in
(bad)
bound
cmp
fdivr
jle
imul
push
enter
mov
jns
pop
lock
jp
dec
cmps
cwde
jle
mov
mov
push
ret
adc
and
addr16
sbb
in
jecxz
add
xor
test
call
imul
(bad)
mov
xor
inc
xchg
repz
mov
jge
or
xor
fucomi
mov
sub
push
addr16
mov
mov
cli
rcl
loop
rol
inc
cdq
ret
push
cli
jbe
ins
aas
(bad)
cli
inc
xchg
outs
fwait
sub
test
jbe
mov
mov
sbb
dec
jge
or
sub
jecxz
into
mov
mov
xchg
add
cmc
xor
ret
lods
stos
stos
pop
inc
cli
js
sub
cmp
out
stos
cmp
iret
mov
jmp
xor
pop
movs
stos
rcl
js
mov
mov
(bad)
jns
pop
bound
push
outs
(bad)
adc
xor
in
loope
xor
mov
adc
jae
repnz
lds
loop
xor
stos
xor
inc
movs
jnp
mov
lea
dec
mov
mov
xor
mov
repnz
ins
call
push
mov
fs
leave
push
cmp
push
xor
jne
and
in
test
mov
cld
push
cmp
sub
pop
das
cmp
pop
pop
jae
xchg
scas
jge
lock
and
push
xchg
sub
xchg
adc
push
pusha
iret
cmp
cs
repnz
ret
jb
jp
call
add
ja
xchg
js
jecxz
xor
out
add
cmp
fwait
stos
push
and
ret
pop
and
cmps
or
or
dec
cmp
leave
sbb
cmp
add
dec
int3
dec
sbb
call
(bad)
dec
inc
sub
mov
cmc
add
push
dec
test
fsubr
add
xor
outs
(bad)
add
add
test
in
loop
sbb
adc
inc
inc
sar
jecxz
add
adc
xchg
adc
xchg
xchg
push
popa
adc
outs
pop
mov
cmps
add
int
pop
push
das
jp
les
sbb
test
pop
out
fmul
sub
repz
jb
sbb
sub
test
sti
movs
jp
mov
pop
aam
out
cmp
pop
xor
jl
or
leave
xchg
leave
mov
in
mov
(bad)
stos
add
mov
retf
pop
inc
(bad)
cmp
lock
sbb
call
inc
cmp
sbb
(bad)
ja
sti
sbb
xor
inc
add
sub
bound
jecxz
fs
push
adc
ficomp
bound
or
enter
pop
movs
dec
addr16
cli
push
fimul
adc
push
js
and
pop
aam
fstp
cli
xor
lods
adc
pop
mov
and
cmp
and
sbb
jmp
fcom
mov
pop
fisttp
mov
dec
sbb
cmc
push
pop
sbb
das
xchg
shl
sbb
popa
fucomi
and
pop
jecxz
or
mov
jmp
cli
push
and
(bad)
lock
(bad)
test
mov
cdq
hlt
punpckhwd
inc
ficomp
call
cli
jmp
cmp
cmp
xor
mov
outs
fstp
in
call
xchg
dec
inc
push
xlat
add
fstp
outs
mov
add
mov
outs
cmp
or
mov
jbe
lods
call
mov
sbb
mov
xchg
jl
enter
das
and
bound
rcl
popa
retf
nop
cli
xchg
ds
lea
sub
or
mov
fwait
jbe
sub
or
outs
pop
hlt
push
(bad)
retf
xor
pop
add
fbld
mov
inc
push
adc
xor
sbb
shr
push
repnz
push
and
push
aas
frstor
sub
fmul
aad
cdq
cmp
sbb
jmp
xchg
arpl
repz
or
lds
pop
ins
dec
mov
adc
xor
cmps
clc
fbstp
jae
arpl
adc
sbb
pop
adc
imul
adc
sub
inc
inc
fimul
mov
mov
aaa
xor
int3
xchg
aam
sub
mov
sbb
sbb
adc
mov
fisttp
loop
inc
shl
sub
dec
pop
popa
push
fistp
jo
xor
or
mov
dec
retf
gs
and
push
enter
jo
sahf
repnz
xor
hlt
pop
loop
add
mov
inc
adc
retf
int
pop
jmp
test
sti
enter
loop
jo
push
push
dec
cmp
or
stos
xchg
push
mov
mov
inc
inc
sar
fldenv
inc
stos
es
adc
sti
xchg
lahf
mov
add
xchg
xor
mov
and
add
mov
and
shr
js
loope
sub
aas
ret
stos
loopne
test
adc
add
cdq
xor
in
nop
mov
push
xchg
add
and
out
mov
inc
sub
cld
and
outs
fs
inc
out
rol
adc
paddd
adc
mov
sub
cmp
xchg
jl
and
inc
push
lds
inc
call
sub
pop
xor
and
or
jbe
jp
fld
fidiv
push
mov
cmp
dec
sub
inc
adc
out
bound
(bad)
int
cmp
xchg
xchg
mov
jb
jno
adc
repz
sbb
inc
cmp
pop
div
mov
addr16
cmps
pop
pop
add
sahf
out
movaps
add
xchg
fistp
movs
leave
fild
jecxz
and
xlat
or
mov
mov
(bad)
sbb
neg
pop
add
(bad)
jno
mov
out
cmp
sti
xchg
jnp
into
rol
sub
xchg
(bad)
jecxz
jbe
xlat
add
push
dec
push
sbb
sbb
xor
clc
xor
les
nop
adc
cmp
xor
ins
jb
mov
outs
push
loop
mov
or
iret
mov
pop
in
adc
sub
adc
cli
std
fdivr
xchg
fbstp
sbb
adc
int3
and
movs
or
xchg
popa
jb
jbe
ja
addr16
add
xor
push
sar
stos
(bad)
mov
sub
mov
pop
sub
push
pop
sub
fs
pop
cmp
xchg
pop
add
call
or
test
sbb
fwait
push
mov
mov
fimul
xor
fst
jbe
test
sub
pop
fwait
iret
data16
push
mov
jecxz
dec
xlat
adc
cmps
dec
out
mov
inc
adc
fst
add
push
cwde
rcl
sbb
adc
repnz
mov
loopne
cdq
cmp
das
sbb
mov
push
add
and
or
xchg
leave
cmp
cmps
fnsave
push
adc
movs
or
jp
inc
and
add
sub
(bad)
xchg
lock
sbb
add
or
lods
xchg
ret
inc
mov
cmp
cmp
mov
push
push
imul
jae
loop
lock
cwde
fbld
jl
inc
sbb
push
push
pop
sbb
loope
jnp
repnz
mov
mov
lods
sti
call
xchg
jnp
jp
mov
lods
std
xchg
js
add
(bad)
cmp
dec
imul
pop
xor
cmp
jnp
cmp
fwait
mov
cmp
jecxz
jb
mov
mov
dec
fwait
push
call
cmp
cmps
jp
mov
fisub
cmp
test
sbb
cmp
xchg
or
repz
add
push
cmc
(bad)
rcr
sar
loop
cmp
and
sbb
inc
ret
jae
xor
imul
mov
mov
push
das
dec
xchg
push
jp
aaa
pop
xchg
xlat
add
sub
dec
sbb
jmp
and
pop
mov
mov
outs
xor
ret
jecxz
mov
jo
(bad)
std
fxam
popa
je
xchg
xor
repz
mov
adc
mov
xchg
aaa
sbb
jp
popf
mov
add
inc
fsin
sub
data16
mov
ja
imul
push
scas
hlt
add
add
lods
xor
jmp
xchg
jae
adc
ror
sbb
fs
shl
mov
movs
cwde
loope
mov
jb
int
adc
or
mov
es
sub
adc
push
lds
mov
lods
mov
inc
fistp
imul
lock
stos
retf
mov
pop
jo
in
mov
mov
test
pop
jg
mov
and
mov
push
pop
inc
add
dec
jnp
imul
and
repnz
cmps
sub
dec
push
outs
cli
add
pop
xor
dec
retf
xor
cmc
in
int
or
jmp
lods
cs
sub
adc
call
rcl
xchg
es
fild
int3
pop
mov
jbe
test
loop
mov
adc
neg
fcmovu
jb
mov
jmp
popf
sbb
jne
rcl
push
inc
inc
and
mov
mov
xchg
jo
sub
(bad)
sti
ss
xor
sub
jmp
mov
mov
add
xchg
out
jae
arpl
ins
jmp
add
sbb
push
stos
idiv
xchg
dec
jge
mov
cmp
push
push
xsha1
cmps
dec
xor
lahf
xchg
out
jle
cmps
pop
pop
or
mov
icebp
mov
aad
aas
outs
stos
push
mov
xchg
fst
mov
aam
shl
ret
fcom
cmp
sbb
stos
push
cli
pushf
and
jle
fidiv
sbb
(bad)
fstp
pushf
jnp
mov
adc
retf
shr
and
sbb
icebp
xchg
test
cld
cli
jl
mov
or
adc
test
mov
int
sbb
ror
leave
sahf
xor
ins
jge
add
xor
add
cwde
sbb
cld
in
stos
sahf
pop
cmps
jne
stos
sbb
lahf
add
fdivr
lods
mov
add
jle
or
popf
call
dec
pop
sbb
jnp
fwait
cmp
retf
jne
sbb
sbb
add
stos
and
into
jns
ficom
jns
mov
adc
jmp
out
inc
jmp
cmp
jmp
dec
push
dec
sub
leave
call
repnz
add
pop
mov
in
out
test
sub
cwde
pop
mov
repz
cmc
mov
scas
retf
ret
and
mov
jno
pop
jne
push
adc
dec
mov
repnz
fs
sbb
add
mov
mov
lods
xor
into
mov
cli
(bad)
cmps
jb
pop
push
loop
pusha
loope
std
and
pop
dec
scas
mov
push
imul
push
ret
sub
cmps
pushf
popf
pop
mov
fs
(bad)
jecxz
adc
dec
out
and
in
push
mov
add
(bad)
mov
sbb
stc
xchg
xchg
push
mov
rcl
or
push
fimul
retf
mov
fistp
repnz
retf
xchg
sbb
sbb
cli
shr
xchg
fnstcw
jno
retf
pop
mov
xor
inc
retf
loope
add
cmc
addr16
aas
adc
int
stc
or
imul
(bad)
imul
bound
retf
bound
cmp
jmp
imul
call
cmp
enter
pop
pop
inc
mov
inc
jbe
dec
sbb
adc
sub
or
(bad)
cs
lods
pop
call
dec
test
imul
repnz
outs
or
mov
xlat
sahf
mov
repz
scas
aam
sbb
push
inc
push
enter
aad
lods
sbb
push
stos
cmps
add
mov
int
arpl
rol
cmp
sbb
enter
push
ffreep
sbb
clc
lds
sbb
mov
jb
cli
inc
mov
jb
fwait
pop
imul
adc
xor
outs
mov
call
shr
int
cld
jne
push
xlat
push
cmp
mov
jns
push
push
js
push
xor
or
and
xchg
data16
fistp
stc
pop
inc
js
mov
cmp
ins
repnz
leave
rcl
movs
jns
jecxz
pop
stos
idiv
cs
pop
fst
xor
xor
sub
out
mov
mov
lods
mov
adc
fisubr
dec
lods
inc
ss
and
int3
repnz
sbb
inc
mov
mov
inc
int
(bad)
mov
jmp
mov
cmc
mov
mov
repnz
aam
and
fsubr
jbe
and
push
and
ins
add
sub
xor
cwde
xchg
mov
lods
sub
pusha
or
jle
push
xchg
shl
daa
inc
adc
lods
mov
or
call
ins
not
jne
les
jmp
(bad)
pand
mov
xchg
retf
cmp
fisttp
dec
pop
pop
xor
data16
push
xor
lds
imul
out
cmps
mov
push
mov
clc
mov
imul
xchg
stos
and
jp
imul
ins
inc
xor
or
mov
sahf
loopne
pushf
pop
sub
mov
dec
jb
adc
mov
pop
icebp
add
inc
pop
xchg
jle
pop
push
push
sub
xchg
ss
jecxz
xchg
(bad)
js
and
retf
das
mov
mov
fstp
sub
cmp
lock
dec
jns
clc
jg
fucomip
shl
stos
sbb
or
mov
mov
jnp
pop
mov
shl
shl
add
repz
mov
add
pop
dec
xor
xor
popa
hlt
push
call
cmp
jmp
pop
mov
cmp
(bad)
mov
sar
iret
and
jb
mov
adc
and
dec
hlt
pop
or
fimul
add
adc
jge
ror
cmps
dec
out
mov
or
out
aas
add
retf
lods
leave
mov
lods
dec
cmp
cmova
inc
pop
jecxz
xchg
addr16
sub
inc
mov
pop
mov
test
ins
loope
xchg
movs
jb
mov
sti
mov
sbb
push
push
daa
(bad)
cwde
test
cdq
push
push
jp
and
mov
push
sub
xor
fucomp
call
xchg
stc
es
bound
adc
xchg
cmp
sbb
cmp
shl
lods
pop
out
mov
ds
(bad)
jns
retf
sbb
repz
mov
mov
xor
stos
fimul
jne
and
and
jge
mov
out
jp
lods
adc
inc
add
lock
sub
xchg
stos
sbb
jge
popa
jb
stc
sar
retf
mov
xchg
add
in
outs
or
dec
jb
outs
push
iret
inc
cmp
test
jmp
jbe
and
or
lahf
ja
xchg
and
sbb
jmp
adc
jl
push
mov
icebp
xor
adc
lar
or
lea
stos
nop
call
sbb
sub
lds
sub
les
clc
cdq
rcr
out
pop
pop
inc
mov
push
inc
movs
rol
repz
hlt
(bad)
cmps
call
adc
cmps
(bad)
loop
lock
push
popa
icebp
ret
imul
mov
pushf
(bad)
call
sub
mov
sbb
bnd
scas
cmp
add
add
enter
jmp
mov
je
lahf
loop
pop
jae
add
frstor
or
cmp
outs
push
mov
mov
add
jle
add
popf
xor
xchg
jne
arpl
add
mov
add
dec
push
dec
xchg
mov
aad
pop
inc
sbb
mov
imul
cmp
iret
xchg
or
inc
imul
and
pop
xchg
ret
aad
xchg
mov
xchg
push
and
or
pop
call
and
lahf
or
ret
rol
jle
(bad)
jg
jnp
xor
push
mov
xor
mov
js
push
cmp
and
mov
in
or
jp
dec
ror
pushf
dec
pop
(bad)
and
ficom
outs
adc
cmp
ins
mov
add
out
mov
shl
xchg
or
dec
cli
std
popf
and
out
add
lods
cli
dec
push
leave
jmp
mov
movs
ficomp
outs
cmp
ret
cli
jl
push
dec
jnp
ss
outs
xor
int3
xor
imul
jae
out
inc
or
dec
shr
rcr
or
jo
and
ficom
sti
dec
loopne
push
sub
push
dec
ins
cmp
and
repz
mov
mov
xor
(bad)
loopne
or
lea
sub
out
cdq
nop
fiadd
sahf
rcr
inc
add
cwde
mov
mov
es
cmp
sahf
add
(bad)
jns
sbb
xchg
leave
jbe
add
sub
push
jbe
pop
ficom
sub
lock
sbb
sbb
and
dec
cmp
cmp
test
jl
mov
int3
or
mov
in
cld
pop
pop
movs
and
sub
cmp
das
adc
call
aas
mov
sahf
dec
test
pop
(bad)
jmp
fadd
xchg
data16
nop
dec
push
jnp
or
popa
pop
les
icebp
adc
adc
pop
jmp
in
mov
mov
out
xchg
dec
mov
or
cmp
lea
lds
adc
outs
mov
dec
pop
lods
push
or
jbe
rcl
movs
lods
cld
mov
lahf
dec
xchg
stos
pop
retf
call
jmp
push
enter
sbb
xchg
cmp
fisttp
jp
ret
jmp
sahf
fiadd
jmp
ret
sar
fbld
push
fild
jbe
or
(bad)
ror
pusha
je
sub
ret
jmp
dec
or
(bad)
fiadd
or
inc
and
stos
pop
mov
cwde
loop
repnz
cmps
out
imul
out
push
cmp
(bad)
hlt
cmp
int
nop
or
mov
add
fisub
inc
push
int
mov
outs
cmp
js
mov
imul
mov
push
push
(bad)
mov
ins
push
das
inc
xchg
and
pop
push
pop
cmps
clc
sbb
pop
jmp
xchg
aad
dec
movs
xor
in
and
scas
mov
cmp
fild
mov
and
not
add
adc
and
out
fidiv
pop
lock
jecxz
les
test
lods
mov
dec
pop
loop
sub
push
jb
xchg
retf
cs
fist
adc
in
pop
or
mov
xor
call
mov
mov
into
arpl
mov
ds
sub
sahf
jb
dec
mov
jb
add
jle
push
popf
adc
or
call
(bad)
jp
add
mov
es
dec
repz
dec
cmp
retf
repnz
and
(bad)
push
xor
and
mov
in
adc
aam
not
nop
shl
jns
mov
push
sub
add
rcl
lahf
int
mov
repnz
ja
dec
call
retf
jg
loope
out
sub
jns
jae
fwait
sbb
ret
movs
cmp
stos
and
pop
arpl
jg
inc
xor
adc
rcr
les
or
dec
(bad)
jmp
jb
call
not
push
int
xchg
inc
dec
cvtps2pd
add
mov
lahf
pop
iret
div
pop
in
jecxz
pop
out
dec
cmp
addr16
sahf
jo
cs
xchg
iret
lahf
jge
daa
xor
mov
fwait
jnp
push
retf
pop
jnp
pop
sahf
sbb
mov
mov
or
lods
lock
in
adc
sub
and
stos
sbb
(bad)
(bad)
cmp
(bad)
xchg
cmc
mov
mov
inc
cmp
jmp
cs
push
or
add
into
jnp
xor
mov
sbb
bound
jp
pop
ficomp
push
add
out
nop
mov
stos
pop
sub
dec
call
mov
xor
mov
or
fnstcw
push
or
push
jmp
(bad)
jnp
xlat
ss
mov
in
stos
not
imul
adc
test
test
mov
repz
lods
inc
xchg
xchg
call
arpl
(bad)
push
mov
mov
adc
mov
fst
push
pop
mov
mov
pop
mov
sub
inc
sub
or
imul
cmc
cmp
pop
cmp
jmp
pop
sub
cmps
mov
mov
icebp
dec
dec
xchg
jl
xchg
nop
sbb
inc
int3
test
in
mov
push
test
imul
loop
leave
popf
in
push
jae
cwde
fcmove
jnp
sbb
push
inc
dec
fwait
xchg
mov
mov
jmp
adc
call
and
in
cmc
or
les
sub
shl
sbb
cs
arpl
shl
mov
cmp
dec
ins
and
mov
dec
shl
sub
fs
outs
mov
jmp
in
(bad)
mov
mov
dec
add
inc
mov
or
inc
add
adc
jbe
mov
mov
mov
cmp
pop
sub
stc
aaa
and
cwde
add
retf
and
sahf
adc
jge
jb
nop
cmp
rcr
and
sbb
mov
and
jns
rol
les
cmps
sub
pop
dec
test
jnp
fsub
hlt
adc
icebp
cwde
lahf
fild
jp
sub
cmp
outs
cs
daa
clc
outs
mov
call
pop
lods
sub
mov
and
cwde
add
or
(bad)
jmp
xor
lods
pop
ror
ret
add
test
xchg
test
sbb
or
ret
and
icebp
fdivp
add
repnz
and
push
imul
mov
mov
nop
rcl
push
dec
ins
ss
pop
hlt
std
add
sub
sub
(bad)
ret
pop
xchg
aam
sti
shl
das
retf
(bad)
pop
push
arpl
jns
inc
mov
daa
retf
add
push
dec
cmp
loopne
jl
push
imul
das
mov
test
imul
rol
cmps
cld
es
mov
jb
dec
loopne
dec
add
sar
mov
and
das
dec
repnz
fist
cs
xchg
repnz
and
mov
movs
xchg
fld
dec
sbb
repz
pop
pop
test
xchg
mov
fwait
jo
(bad)
test
mov
stos
push
icebp
int3
mov
inc
sub
mov
ret
jae
push
xor
or
rol
push
jns
mov
loopne
or
jo
and
cmps
mov
mov
arpl
sar
jbe
ret
ds
pop
jmp
fiadd
jmp
fdivrp
sti
(bad)
ds
into
in
enter
inc
(bad)
mov
and
cmp
xor
xor
ds
adc
fcom
arpl
les
xor
xchg
mov
ficomp
dec
push
inc
(bad)
movs
in
sbb
(bad)
shr
aam
mov
inc
loop
fld
outs
xchg
mov
bound
jb
lea
add
push
jae
push
pop
mov
xor
int3
jae
sahf
test
retf
(bad)
loope
ds
pop
rcr
jecxz
lods
sbb
and
imul
fsub
mov
inc
cmp
dec
popa
inc
push
mov
lods
in
sub
dec
mov
loope
arpl
mov
ror
iret
stos
out
push
add
jmp
adc
adc
stos
mov
lea
fcom
jecxz
jecxz
(bad)
dec
inc
shr
cmp
sub
mov
cmp
data16
stc
imul
sbb
mov
mov
sub
(bad)
lahf
mov
xlat
push
retf
out
mov
mov
xor
xor
sub
push
sub
xor
(bad)
xor
jp
mov
loopne
sbb
(bad)
(bad)
jmp
(bad)
push
pop
push
cmc
repnz
push
add
and
xchg
dec
clc
jns
jg
sbb
lds
mov
dec
clc
rcr
and
jmp
int3
sbb
mov
cmp
or
pop
jle
stos
outs
push
inc
pop
retf
mov
stos
(bad)
jle
mov
mov
jmp
stos
pop
retf
ds
dec
ins
jnp
cs
call
inc
test
pop
pop
dec
jns
call
std
inc
jo
mov
ret
jecxz
stos
push
lods
jo
xor
xchg
adc
jg
jg
mov
cmps
mov
dec
sbb
retf
loop
call
mov
repz
dec
or
pop
inc
fs
sbb
pop
ret
mov
call
push
add
inc
mov
or
jae
adc
arpl
and
es
pop
sub
push
inc
call
jbe
pop
or
in
outs
adc
(bad)
and
or
cmc
(bad)
jecxz
pop
mov
pop
sti
cmp
ret
rcl
psrld
dec
test
retf
outs
sti
imul
ss
mov
aam
and
cmp
and
arpl
push
pop
sbb
pusha
sbb
enter
retf
jnp
sub
daa
int
cmp
ins
adc
rcl
int
call
mov
mov
xor
pop
scas
jg
test
ret
xor
mov
or
ret
imul
dec
and
jmp
mov
jl
inc
adc
sub
or
add
pop
cwde
pop
jno
cld
mov
push
popa
and
sub
clc
cwde
cmp
jl
jecxz
addr16
xchg
scas
mov
sbb
aas
dec
(bad)
add
or
lea
mov
stos
pop
dec
retf
arpl
call
sar
push
inc
push
mov
xchg
or
retf
sahf
iret
and
mov
push
and
retf
push
into
(bad)
push
outs
test
add
test
ret
into
xlat
cld
int3
xor
fistp
js
jecxz
mov
jno
addr16
jp
leave
jmp
in
xor
and
xor
into
daa
pop
cs
push
xor
repz
cmp
inc
cmp
mov
sbb
mov
(bad)
nop
adc
pop
jns
mov
imul
push
test
add
mov
sti
leave
mov
test
xchg
ret
fsub
xchg
fwait
push
repnz
inc
repnz
xchg
call
xchg
push
(bad)
push
lock
dec
mov
outs
push
push
jmp
hlt
ret
cmp
stos
mov
popa
(bad)
scas
xchg
jl
inc
mov
jmp
jb
add
ret
adc
pusha
push
call
(bad)
addr16
mov
test
xchg
cli
fisttp
js
imul
sbb
rcr
add
lea
shl
(bad)
jbe
sub
inc
jae
xor
fdivrp
mov
inc
fst
outs
repz
loop
sbb
sub
outs
add
sbb
stos
ficomp
xor
inc
xor
inc
jo
push
inc
loopne
cli
js
sahf
adc
mov
xchg
or
pusha
dec
mov
push
jp
lods
pop
shr
cwde
mov
jb
adc
cli
call
xchg
fwait
into
stc
jle
out
dec
jg
push
push
mov
xchg
xchg
mov
or
imul
ja
loop
repnz
dec
(bad)
push
push
mov
imul
sahf
ficom
mov
push
into
push
jmp
hlt
sub
push
pushf
push
loope
and
add
cli
scas
mov
mov
mov
xchg
push
inc
xchg
mov
mov
sbb
push
xor
pop
push
into
bound
mov
push
or
push
fld
sub
add
jp
fimul
es
jp
or
fisub
inc
push
dec
mov
mov
cli
inc
out
icebp
mov
push
bound
(bad)
neg
jnp
aam
arpl
or
shr
call
adc
add
cld
jle
daa
pop
inc
jo
arpl
mov
adc
rol
pop
inc
js
mov
mov
inc
ret
cmps
cmp
aam
lods
pop
fst
push
test
mov
iret
fiadd
pop
add
add
(bad)
retf
(bad)
call
adc
xor
fist
inc
shl
inc
jmp
mov
mov
push
mov
mov
pop
push
sti
inc
mov
out
scas
and
(bad)
loop
mov
cmp
push
imul
nop
or
fidiv
xor
das
fadd
cmps
(bad)
std
mul
call
push
arpl
inc
pop
fisub
or
jbe
xchg
inc
repnz
ficom
aas
push
jbe
xchg
sbb
xor
sbb
ja
mov
retf
cmp
and
lods
cmps
out
and
mov
xor
or
ret
out
addr16
push
into
test
pop
bound
xor
movs
add
sub
fldenv
cmp
(bad)
jae
xlat
iret
arpl
and
xor
repz
(bad)
daa
xchg
sub
xchg
mov
pop
inc
dec
lock
fisubr
inc
jb
sbb
mov
xchg
push
xor
leave
fnstenv
pushf
xchg
dec
and
movs
add
jmp
pop
jl
jmp
xchg
mov
mov
xor
jmp
mov
xor
pop
retf
fst
aad
ins
call
ss
and
shl
sahf
arpl
mov
aas
mov
out
cmps
inc
pop
rol
add
inc
inc
pop
sub
ss
out
pop
pop
enter
pop
out
push
add
jecxz
in
mov
dec
aam
xlat
les
mov
stos
jb
dec
push
mov
pop
add
retf
add
add
pop
and
leave
push
sbb
loopne
test
retf
test
ror
jge
dec
pushf
inc
stos
inc
jp
inc
mov
cmp
add
cli
dec
not
bound
sub
dec
(bad)
mov
jns
stos
xchg
add
les
mov
mov
jge
je
fld
mov
jb
push
aad
faddp
xchg
call
jne
or
add
outs
je
adc
sbb
sub
aam
div
(bad)
mov
out
pop
or
mov
imul
xchg
popa
cmp
push
pushf
jmp
mov
fwait
push
outs
mov
ficom
jnp
popf
ret
fwait
mov
cmps
dec
ret
xchg
jecxz
lea
aam
cmp
sub
or
xor
or
lahf
jae
mov
and
fwait
cmp
jp
sbb
das
push
mov
data16
sar
(bad)
retf
pop
jne
mov
mov
push
scas
cli
(bad)
sub
call
pushfw
je
das
adc
dec
sbb
out
adc
sub
xor
pop
cld
jmp
popa
loope
push
jb
dec
jbe
cmp
or
clc
gs
and
std
xchg
loopne
in
and
jg
repz
stc
pop
out
push
dec
ja
ja
sub
ficomp
aam
mov
xor
push
mov
adc
es
or
retf
jb
rcr
loop
mov
mov
test
repnz
push
xor
hlt
pop
push
dec
pop
jbe
or
xchg
or
in
mov
popa
into
jecxz
into
push
add
inc
cmp
jmp
hlt
or
mov
add
outs
pop
je
mov
add
mov
scas
test
out
mov
add
cmp
adc
lea
sahf
lds
cmp
sbb
jae
jne
xlat
mov
and
stos
inc
dec
es
cmp
std
adc
imul
mov
mov
add
cli
add
aad
out
aam
add
push
pop
jne
aas
stos
inc
xchg
mov
iret
imul
in
ins
bnd
imul
(bad)
mov
cmp
xchg
add
add
sbb
pop
addr16
rol
sbb
prefetch
pop
cmp
cmp
not
dec
mov
les
pop
fmul
push
adc
imul
in
jecxz
out
xchg
pop
in
xor
cli
mov
push
pop
dec
pop
sub
inc
mov
(bad)
repz
lods
repnz
pop
ret
jge
mov
jle
pop
aaa
mov
pop
jg
mov
ins
stc
and
sbb
inc
or
faddp
ins
xchg
fld
push
lahf
pop
sbb
stc
xor
fsub
xor
sahf
and
mov
mov
inc
(bad)
dec
and
and
push
es
xor
sbb
loope
cmps
mov
(bad)
repnz
or
push
xor
jp
jno
pop
inc
adc
mov
sbb
jmp
repnz
and
cmp
inc
cli
push
sub
mul
add
pop
mov
stos
out
mov
int
ds
jmp
and
xchg
jo
sub
aas
bound
dec
sbb
aaa
and
sub
test
jbe
data16
xor
inc
jp
movs
retf
pop
cdq
mov
fwait
mov
out
pusha
jecxz
fst
jns
mov
inc
ss
sbb
dec
cs
adc
stos
repnz
shl
push
test
cmp
sar
cmp
sub
xor
das
adc
push
call
out
pushf
iret
inc
mov
jg
xchg
rol
and
push
rcr
inc
je
movs
in
mov
mov
cmp
stos
or
cmp
or
or
dec
xchg
test
and
in
adc
pop
push
dec
retf
and
and
pop
inc
cli
mov
push
jb
xchg
(bad)
(bad)
cli
cmp
pop
sub
jp
sub
mov
jnp
sub
enter
xchg
shl
rcr
jmp
sub
dec
outs
lods
push
(bad)
lock
dec
xchg
xlat
add
jae
xchg
cli
mov
hlt
dec
mov
aas
dec
sbb
inc
or
and
mov
adc
(bad)
adc
xlat
push
(bad)
and
imul
sbb
sub
push
(bad)
cmp
jns
daa
and
xor
out
jbe
fbstp
xor
pop
push
clc
xchg
(bad)
les
hlt
imul
test
lea
dec
retf
push
or
xchg
out
sbb
sub
sbb
mov
ret
call
add
jbe
fldcw
inc
in
ret
arpl
xchg
fild
das
ss
mov
xchg
das
cmp
pop
jbe
repz
fs
jmp
leave
mov
lea
sub
jae
cs
rcr
dec
jb
dec
cmps
push
push
xor
xchg
bound
(bad)
pop
sub
adc
fs
mov
(bad)
icebp
scas
dec
adc
mov
cmp
sbb
daa
xor
mov
cmps
stos
bound
popf
push
lahf
push
push
daa
sti
push
pop
pop
ss
rol
push
pop
stos
jp
or
ins
vcmppd
out
aas
xor
xchg
pop
mov
inc
mov
test
push
or
sub
push
add
fnstenv
stos
into
jmp
sahf
mov
pop
mov
imul
lock
addr16
daa
sbb
cmovnp
and
out
dec
cmp
xor
std
hlt
or
es
adc
gs
xchg
xor
jne
mov
jo
mov
clc
lds
push
imul
jge
out
mov
aas
test
sbb
jl
mov
inc
pop
stos
stc
lods
add
push
jns
push
icebp
sahf
je
cmp
jae
sahf
inc
int3
mul
lea
(bad)
fsubr
dec
or
jo
(bad)
xchg
dec
sbb
mov
mov
das
dec
or
pop
dec
movs
and
stc
pop
xchg
aad
neg
add
sahf
fincstp
mov
push
mov
adc
loop
int3
(bad)
out
aad
(bad)
call
rcr
ror
mov
shl
mov
in
lahf
cdq
daa
mov
mov
jo
cmp
test
xchg
mov
lahf
outs
mov
or
jp
scas
xor
add
adc
sub
gs
cmp
fistp
cli
ret
popa
les
nop
cmp
jae
add
push
cmp
pop
lods
xchg
aaa
cdq
mov
cmp
mov
adc
mov
test
add
mov
fwait
and
loop
and
push
cmp
dec
arpl
mov
daa
push
test
xor
out
call
xchg
ins
add
cli
and
icebp
jle
xchg
and
aas
jnp
outs
sub
xor
push
fadd
push
sbb
push
cli
bound
fcomi
call
gs
ss
jno
movs
xor
push
pop
inc
jbe
or
lods
jo
push
cdq
fldenv
fcom
adc
(bad)
and
cmp
jmp
mov
test
mov
outs
popf
and
ja
test
test
mov
mov
fnstsw
push
lods
fcmovb
aaa
not
(bad)
lods
and
(bad)
cwde
stos
cli
mov
mov
lods
outs
dec
xor
ins
add
mov
jnp
lods
xchg
mov
out
ins
mov
mov
jo
adc
ror
mov
repz
pop
add
add
fwait
cmp
test
xchg
jmp
and
push
xlat
(bad)
adc
pop
cmc
xor
xor
repnz
scas
mov
fwait
(bad)
(bad)
jle
mov
jmp
dec
iret
or
xchg
mov
lods
loop
jge
(bad)
cwde
add
scas
aas
imul
into
xor
jb
pop
cmc
jo
push
mov
(bad)
and
inc
ret
sti
add
inc
mov
movs
cmp
bound
jmp
cld
lods
shr
gs
shr
bound
push
repnz
fsubr
mov
out
movs
retf
retf
clc
fwait
push
out
add
fs
or
jl
data16
inc
mov
mov
add
punpckhwd
aam
push
dec
pop
pop
retfw
mov
sbb
jo
add
fnsave
dec
push
pusha
or
movs
daa
jno
xchg
and
and
jle
push
jne
mov
ss
in
imul
sub
into
mov
mov
cld
out
mov
test
retf
cmp
jbe
mov
cmp
ficomp
pop
dec
xlat
enter
lea
xor
push
cmp
outs
push
sbb
push
cmp
scas
xchg
add
ret
mov
jno
adc
add
add
mov
call
lds
loope
pop
jno
inc
mov
push
outs
lahf
xor
add
lods
mov
jnp
jns
addr16
xchg
jnp
or
outs
cmp
push
fist
fsubr
mov
add
out
fwait
icebp
mov
ja
xor
mov
jns
imul
fcomp
sub
pop
out
mov
movs
mov
lds
fcom
daa
push
or
inc
std
add
icebp
or
push
pop
out
ror
pop
pop
sbb
pop
cmps
or
adc
mov
xor
sbb
sahf
aam
loope
mov
add
push
sub
loop
xor
in
sahf
sbb
pop
cmp
or
lods
push
fdivr
pop
out
gs
(bad)
mov
ins
adc
push
repz
cwde
(bad)
adc
jg
das
cmp
sbb
arpl
push
enter
pushf
jae
xlat
scas
daa
in
pop
in
mov
test
sbb
push
adc
retf
sar
mov
call
sbb
out
mov
movs
call
mov
(bad)
psubusw
xor
movs
(bad)
fwait
adc
ret
push
mov
push
sbb
sbb
ficom
mov
inc
inc
aaa
mov
mov
dec
push
mov
and
xchg
mov
mov
cmp
fidivr
jno
jb
rcl
and
bndldx
push
clc
stos
dec
std
enter
bound
(bad)
jecxz
loop
pop
fsubr
jb
mov
push
aad
rol
or
mov
push
add
ret
jmp
push
jmp
rcr
scas
(bad)
mov
jecxz
int3
xlat
push
retf
add
inc
call
dec
rol
repnz
test
and
pusha
call
mov
pop
push
push
sahf
fsub
mul
mov
lds
movs
mov
xchg
test
clc
cmps
xchg
dec
fstp
push
clc
adc
mov
(bad)
sti
lea
mov
sbb
adc
inc
into
dec
bswap
pusha
sub
jb
pop
mov
fidivr
lds
inc
mov
ja
mov
jns
sbb
fs
xchg
xchg
cli
mov
(bad)
imul
add
rcr
aaa
or
adc
mul
xchg
retf
sbb
and
push
and
jb
loop
jne
lahf
stos
pop
int3
pop
or
scas
leave
lahf
fld
adc
test
addr16
call
inc
sub
mov
sar
retf
or
(bad)
les
mov
cld
inc
adc
mov
adc
mov
shl
retf
retf
or
les
std
add
inc
inc
pop
jnp
mov
ins
jnp
pop
dec
clc
stos
pop
mov
xchg
and
pop
add
sub
out
ret
inc
xlat
pop
xor
dec
(bad)
cdq
call
mov
pop
(bad)
mov
pop
xor
or
enter
scas
push
sahf
mov
or
shl
jb
bound
sub
mov
stc
dec
jb
es
cmp
mov
repnz
inc
and
daa
mov
fcom
mov
into
xor
push
loop
and
lea
mov
dec
mov
xor
call
xchg
push
into
bound
push
int
push
add
jp
sbb
dec
mov
sahf
pop
jb
jg
adc
iret
or
jmp
clts
push
shl
loop
fisub
mov
inc
push
mul
mov
xchg
or
stos
dec
cwde
ret
push
xor
jp
xchg
cwde
inc
and
cmp
cmp
call
leave
(bad)
fistp
xor
fidiv
scas
push
xchg
data16
jmp
adc
jmp
push
push
xchg
mov
sbb
xchg
or
pop
repnz
xchg
bnd
pop
xor
mov
xchg
mov
sub
mov
scas
(bad)
xchg
test
jp
inc
dec
jmp
inc
(bad)
sahf
push
jbe
pop
xchg
imul
shr
push
retf
dec
es
push
sub
jecxz
mov
inc
mov
sbb
out
stos
push
stc
ret
fdivr
jbe
cmps
dec
push
popf
icebp
add
jbe
mov
pop
push
jbe
xor
mov
xor
js
inc
out
inc
or
sbb
aaa
mov
pop
jmp
push
or
adc
out
repz
cmc
push
jbe
dec
sub
push
stos
scas
xchg
mov
stos
ret
jbe
push
add
push
mov
jnp
int
jp
xchg
jb
movs
jnp
pop
daa
mov
out
inc
jge
jg
adc
pop
add
sub
push
loop
(bad)
scas
push
dec
(bad)
lea
aad
leave
xor
popf
push
test
mov
pushf
out
xor
sbb
sahf
sub
stos
sahf
fwait
ror
fistp
addr16
cs
push
test
cmps
sub
loop
nop
sub
lods
nop
or
sti
outs
imul
into
pusha
and
jg
retf
lahf
scas
out
dec
mov
push
(bad)
addr16
and
inc
not
(bad)
adc
loop
xor
stos
scas
scas
cmps
cli
les
inc
das
out
cmc
arpl
(bad)
(bad)
stos
mov
mov
mov
ins
repnz
test
loop
inc
inc
cmps
ror
dec
retf
into
or
std
fistp
fidiv
jae
cli
gs
(bad)
push
scas
mov
mov
je
(bad)
daa
(bad)
int3
push
jle
jp
les
gs
sbb
fistp
ins
jb
or
inc
loope
mov
neg
adc
or
fst
inc
mov
sub
sub
rcr
(bad)
iret
inc
in
out
rol
out
xchg
iret
adc
loope
dec
lahf
fcomp
cmp
out
addr16
sbb
cmp
std
arpl
jg
arpl
out
push
mov
xchg
pop
jmp
cmp
or
rcr
jns
fsub
mov
into
stos
pop
and
xor
push
cmp
or
jg
fadd
fisub
(bad)
(bad)
pop
or
xor
call
les
sbb
ret
into
mov
cld
jno
inc
push
dec
pop
jb
cmp
jmp
jb
xchg
pop
dec
fcomi
mov
ret
inc
inc
repz
loop
outs
imul
repz
sub
push
push
xor
xor
or
repnz
inc
xchg
adc
imul
sub
mov
rcr
daa
xor
fs
movs
ret
xchg
or
inc
mov
dec
mul
(bad)
clc
cmp
and
mov
ret
push
sbb
push
and
jmp
sti
inc
mov
imul
add
inc
push
(bad)
mov
movs
jnp
or
mov
or
ret
adc
and
push
or
loope
pop
ds
scas
aas
jae
ret
popf
add
add
cmps
rep
std
pop
sbb
inc
ret
ja
mov
fs
ins
in
out
cmp
cdq
(bad)
mov
xchg
add
jp
(bad)
sub
(bad)
push
dec
inc
test
in
jg
(bad)
test
daa
cmp
(bad)
lock
(bad)
xchg
(bad)
jg
jne
sbb
mov
(bad)
sbb
sbb
(bad)
mov
out
xchg
push
push
jne
jnp
call
outs
add
daa
dec
pushf
js
cmp
dec
sar
scas
mov
outs
(bad)
pop
and
icebp
cmp
push
mov
jl
jae
jle
jbe
xchg
pop
jl
test
div
jl
or
stos
dec
jp
jo
jo
sbb
lds
mov
jmp
out
je
xchg
push
jbe
jecxz
data16
push
aas
inc
mov
mov
aad
(bad)
adc
mov
std
pop
xchg
div
jnp
push
js
sahf
xchg
arpl
call
push
fistp
sahf
iret
push
je
mov
mov
test
test
call
pop
inc
pop
(bad)
jo
mov
not
sbb
out
fsub
data16
push
push
sub
jae
aas
aaa
mov
or
(bad)
imul
push
xchg
iret
sub
out
rcr
das
ss
test
sub
test
push
fisubr
aaa
sub
xchg
imul
adc
dec
and
fist
retf
sub
dec
das
dec
add
loope
mov
mov
mov
sbb
leave
fwait
cmp
gs
cmp
shl
std
pop
xchg
daa
inc
mov
sbb
mov
jmp
retf
ret
clc
add
sti
add
pop
push
mov
pop
fimul
das
xchg
push
sti
fisub
rol
xor
mov
aad
movs
sub
inc
cwde
sbb
inc
retf
call
clc
movs
shl
pop
xchg
daa
mov
push
jl
dec
out
sbb
xor
push
lea
push
loope
ds
cmp
not
fisub
adc
xchg
test
push
and
inc
ja
xor
mov
mul
push
inc
out
(bad)
mov
dec
xchg
aas
data16
or
jp
xor
in
jb
cld
inc
add
jp
clc
retf
fild
lahf
mov
(bad)
jmp
pop
rcr
adc
jp
mov
into
outs
lds
imul
fs
mov
inc
mov
fwait
(bad)
test
mov
movs
push
rcl
ds
stos
mov
sub
mov
inc
dec
repz
(bad)
movs
inc
out
test
pop
(bad)
jmp
mov
cmps
or
inc
mov
jl
call
pop
aas
stos
add
stos
arpl
jp
or
sbb
fwait
rol
sti
add
nop
xlat
iret
inc
inc
inc
lock
loop
adc
in
jae
addr16
dec
push
mov
pop
fcomi
iret
les
pop
push
cmp
adc
sub
clc
or
xchg
pop
mov
sbb
test
jb
sbb
sbb
into
outs
jecxz
adc
popf
mov
sbb
jb
xor
arpl
xchg
jg
jecxz
outs
fistp
mov
inc
pop
aas
or
xor
adc
lock
cmp
(bad)
aam
daa
repz
imul
adc
push
fdiv
and
mov
sbb
in
js
jmp
jnp
add
cmp
push
and
scas
mov
mov
mov
adc
adc
xor
out
xchg
test
jae
sti
(bad)
dec
pop
and
out
movs
test
ins
idiv
ror
fisub
jae
ss
ins
repz
fnstcw
ja
inc
push
dec
inc
cmps
div
mov
jge
push
(bad)
dec
fidiv
cs
stos
out
icebp
cmp
xchg
pop
jmp
adc
popa
pop
test
pusha
mov
fisubr
bnd
mov
lea
jmp
lock
sti
imul
jbe
ret
imul
or
lock
dec
cmps
mov
mov
push
or
mov
ds
adc
add
shr
fs
ror
adc
cmps
retf
sahf
cwde
ins
sub
jg
shufps
bound
push
push
mov
inc
mov
xchg
ret
mov
out
cli
mov
push
add
or
and
push
mov
out
scas
aad
sahf
in
xchg
retf
adc
and
outs
nop
cmp
cmp
sub
outs
push
pop
daa
movs
lods
movs
(bad)
mov
mov
(bad)
xchg
rol
and
outs
pusha
mov
cmp
addr16
ret
sti
mov
add
ds
icebp
fcom
cdq
adc
mov
xor
retf
mov
aad
cmp
ret
sub
or
neg
lds
push
int3
hlt
shl
xchg
(bad)
fild
add
lahf
inc
mov
mov
and
add
pusha
sub
mov
cmp
sbb
pop
push
pop
jmp
jge
dec
push
jmp
mov
xchg
fwait
mov
ja
(bad)
mov
cmp
or
(bad)
xor
or
ficomp
mov
fild
bound
inc
jmp
and
or
dec
mov
xchg
mov
xchg
add
cmp
xor
bound
(bad)
sbb
imul
push
ja
mov
sbb
or
aam
sub
xchg
mov
push
(bad)
(bad)
cld
cmp
push
jbe
sub
adc
mov
jecxz
nop
mov
stc
inc
pusha
jl
sbb
sbb
and
sub
or
push
loopne
fisubr
stos
sbb
add
inc
adc
data16
jne
jno
jmp
out
out
ret
cld
repz
sar
or
inc
xor
ins
iret
lods
mov
mov
mov
scas
mov
inc
push
sub
(bad)
pop
xchg
(bad)
out
(bad)
cmp
out
dec
dec
(bad)
push
cli
mov
ret
jp
or
dec
jecxz
dec
jle
or
jmp
int3
retf
ror
ss
jp
jl
mov
lea
jg
add
xchg
adc
popa
imul
add
adc
or
jle
outs
jae
sbb
jmp
cmp
repz
cli
loop
ss
sub
xor
dec
call
adc
imul
loop
adc
data16
mov
neg
outs
in
or
inc
mov
dec
loop
push
in
push
and
stc
push
popf
es
popa
dec
add
(bad)
(bad)
mov
test
inc
and
jge
pop
out
cmp
inc
mov
push
test
dec
add
xchg
jle
cmp
jp
cmps
xchg
or
int
adc
xor
out
push
or
ss
leave
jmp
js
ja
pop
push
sbb
adc
xor
sti
mov
and
add
mov
lea
xor
xchg
loope
adc
lds
jecxz
retf
es
call
fwait
xor
pop
xchg
and
mov
ss
mov
movs
xchg
sbb
daa
pop
sahf
mov
xchg
inc
shr
sar
dec
clc
(bad)
je
ins
adc
push
xor
add
dec
mov
lea
lahf
shl
mov
mov
movs
sbb
or
test
movs
and
out
xchg
jb
aad
test
je
pop
stos
fsub
sub
or
loopne
aam
lea
cld
into
out
or
mov
clc
mov
out
(bad)
xchg
or
outs
or
push
push
mov
pop
dec
pop
shr
sti
mov
inc
lock
cs
adc
push
call
pusha
add
popf
cli
rcr
xor
xlat
jne
popa
xor
or
scas
movs
popa
xchg
dec
xor
adc
pop
inc
push
repnz
add
push
fist
loopne
mov
adc
cmp
fs
push
sbb
repnz
pop
jo
push
sti
mov
test
jle
add
jnp
sub
pop
jmp
retf
into
test
dec
rol
test
pop
mov
pop
bound
ror
xchg
fimul
out
sbb
xlat
inc
(bad)
pop
sti
and
outs
push
addr16
fisub
loop
jae
cmps
std
test
pop
psubw
mov
into
mov
sub
(bad)
xchg
inc
test
sahf
fiadd
xchg
call
fiadd
in
call
mov
ret
dec
jle
cmp
sahf
retf
and
cmps
jb
(bad)
dec
adc
lock
mov
call
jmp
rol
sahf
dec
pop
imul
fcmovnu
cli
inc
or
(bad)
sbb
xor
call
add
sub
xchg
sti
loope
inc
sahf
cmp
mov
addr16
jne
outs
xor
shr
jecxz
pop
aaa
push
sbb
mov
jno
(bad)
(bad)
arpl
inc
jle
les
mov
mov
inc
cmp
cmp
pop
cmp
into
mov
test
shl
xlat
sub
dec
arpl
les
aad
hlt
push
mov
in
(bad)
inc
cli
and
xchg
push
outs
(bad)
fmul
(bad)
(bad)
inc
pop
ins
in
xor
jecxz
test
xor
in
sub
mov
jns
jae
xchg
repnz
inc
adc
sbb
loop
jns
scas
sti
and
push
mov
retf
test
sbb
add
std
arpl
and
pop
out
push
mov
ins
cmp
xchg
and
lds
add
std
pop
imul
inc
push
ins
cmp
jmp
out
sub
retf
stos
xor
stos
jl
xchg
sub
fcmove
cld
int3
in
aam
dec
movs
push
stos
retf
cs
jg
div
jecxz
or
int
movs
mov
into
push
and
jge
sbb
scas
jae
rol
cld
arpl
out
xor
fnstenv
in
xchg
lea
mov
rcl
rol
adc
push
add
movs
dec
(bad)
push
cmp
mov
mov
in
mov
std
pop
lods
sbb
ins
push
retf
xchg
mov
pop
push
push
jb
jl
fidiv
mov
adc
xor
adc
cld
daa
jmp
and
imul
jno
fst
xchg
scas
fisub
mov
icebp
out
fld
cmps
dec
addr16
mov
mov
push
sub
je
xchg
dec
push
push
shl
jne
movs
popa
loop
in
jnp
pusha
mov
pop
mov
and
das
cmps
inc
call
rol
inc
sub
jecxz
adc
mov
push
mov
push
jge
jp
sahf
rcl
sub
mov
add
dec
inc
dec
jge
push
dec
inc
xor
push
bound
and
sahf
jo
mov
cli
pop
retf
ins
fst
mov
add
into
sub
jns
add
adc
vaddsd
or
ror
mov
call
(bad)
js
jp
or
mov
mov
aad
pop
cmp
in
jb
or
test
adc
sub
fistp
adc
ror
add
cs
loope
adc
cmp
adc
jecxz
mov
stos
mov
icebp
movhps
daa
aam
stos
ret
cmp
out
and
jle
cmc
lea
cwde
jp
dec
mov
xchg
adc
dec
push
inc
dec
inc
outs
jbe
push
fild
jmp
pop
fs
dec
inc
pop
jmp
sti
sbb
sub
cmp
and
lods
pop
cmps
mov
popf
stos
add
rcr
pop
(bad)
rol
(bad)
fild
lods
int
out
mov
sub
sub
inc
cld
cmp
dec
mov
int
mov
or
inc
jl
(bad)
pop
lds
jge
or
mov
call
fbstp
and
adc
mov
jne
test
(bad)
adc
(bad)
out
cmp
mov
aam
cmp
xchg
jmp
sub
or
icebp
push
mov
shr
in
xchg
add
(bad)
shl
ret
sub
inc
pop
retf
fwait
aas
jb
and
imul
cmc
add
mov
pop
ja
sbb
cmp
add
xlat
in
mov
out
movs
(bad)
fistp
pop
in
test
ins
mov
add
xchg
sub
or
sub
push
xchg
call
sbb
push
imul
mov
cli
jmp
out
shl
call
ss
and
cmps
mov
popf
aad
in
inc
in
test
fidiv
adc
out
movs
and
movs
mov
or
pop
icebp
sbb
inc
clc
dec
sbb
cmp
jmp
xchg
cwde
sar
fimul
stc
jg
out
mov
sti
cwde
jbe
xchg
pop
xor
fwait
and
ds
sbb
cmp
mov
test
pop
jb
clc
jg
add
xor
mov
mov
das
xchg
stc
clc
fcom
mov
pop
or
mov
cmps
inc
push
or
inc
js
xchg
cmp
retf
(bad)
xchg
sti
push
sub
jnp
adc
jnp
mov
out
xor
jo
inc
cwde
jnp
sti
cmp
fwait
mov
xor
cmp
jmp
cmp
sub
mov
cwde
out
xor
xchg
pop
fimul
add
xchg
jmp
inc
les
imul
lea
adc
mov
les
sbb
cwde
jg
mov
jo
pop
out
jg
lock
stos
aas
sbb
fild
mov
pop
jne
neg
sbb
fisubr
scas
add
sar
gs
cmp
pop
mov
adc
cmp
cwde
xchg
adc
mov
sbb
sbb
mov
jge
xchg
sbb
fisub
inc
adc
stos
stc
loopne
stos
push
ins
pop
sub
or
pushf
bound
or
cmp
xor
std
mov
xor
test
jle
outs
std
or
jns
pop
outs
and
into
mov
pop
dec
fsubrp
cmc
mov
mov
jo
jne
std
cld
(bad)
cmp
pop
inc
imul
mov
std
(bad)
push
mov
jge
jne
(bad)
xor
mov
inc
dec
sti
pop
jnp
pop
adc
stc
cmc
dec
xchg
xor
mov
test
pusha
pop
das
or
mov
mov
sbb
jecxz
sub
fnstcw
das
cmp
add
imul
xor
retf
std
dec
mov
sbb
ret
or
fisttp
or
sub
mov
stos
dec
sbb
outs
xchg
jge
fcmovnb
jbe
xchg
dec
std
sub
ret
dec
push
ds
push
mov
sbb
stos
and
xor
pop
mov
addr16
push
std
mov
jns
lock
add
mov
stos
(bad)
fist
cmps
sbb
cld
stos
push
mov
stos
and
subps
cmp
std
(bad)
add
jns
xchg
sbb
std
out
(bad)
dec
and
xchg
call
paddsw
xor
pushf
loopne
nop
xlat
mov
xlat
pextrw
dec
lods
dec
jecxz
nop
jmp
and
iret
xchg
lea
ins
cs
movs
jge
xor
icebp
ins
stos
cmp
sbb
cmc
call
mov
lahf
jns
jge
push
xchg
test
dec
ins
mov
cmp
add
xlat
lods
jmp
pushf
loopne
adc
mov
leave
arpl
js
ins
jo
jne
lahf
mov
push
in
jmp
mov
std
test
in
btc
jns
dec
(bad)
fwait
mov
in
das
int
in
das
int
aas
(bad)
dec
stos
push
setle
lods
jne
outs
dec
cli
sub
imul
mov
or
xchg
imul
data16
aas
mov
dec
jecxz
xchg
push
sti
outs
mov
ins
jecxz
xchg
in
das
in
lahf
jge
in
icebp
call
fld
push
ror
lahf
popf
clc
imul
jmp
sub
cli
std
lds
lahf
jge
sub
mov
pop
in
inc
jmp
outs
mov
cmp
sub
jmp
jnp
shr
ins
retf
in
xchg
bound
addr16
push
jmp
xchg
sub
repz
stos
aas
xchg
hlt
add
add
mov
loope
clc
jmp
call
in
lods
das
in
push
fld
stos
push
out
ins
std
bound
aam
(bad)
push
adc
push
adc
jns
and
(bad)
sbb
jecxz
and
hlt
cdq
jb
push
out
sahf
sbb
pop
xchg
pop
xchg
sbb
ficom
or
push
jmp
gs
sbb
jnp
fwait
push
xchg
xchg
aaa
gs
gs
dec
rcr
push
fcmovbe
repnz
ficom
add
fstp
push
fcmovb
or
sub
pop
sbb
xchg
cdq
(bad)
and
sbb
test
inc
test
pop
fld
ficom
mov
(bad)
(bad)
fiadd
bnd
inc
fisubr
fdivr
push
mov
push
sbb
sbb
adc
xchg
push
ficom
ficom
push
popf
rcr
inc
mov
jmp
mov
xchg
in
xchg
mov
call
das
sub
cmps
xchg
adc
pop
add
sbb
ficomp
ret
sbb
mov
push
lahf
pop
andnps
push
(bad)
jb
shl
test
sbb
or
fimul
xchg
lds
sub
gs
je
gs
(bad)
inc
push
in
ret
adc
call
rcl
push
out
scas
icebp
data16
push
lea
aam
fucomip
adc
call
push
inc
push
jmp
sub
xchg
ss
hlt
mov
aad
test
sbb
hlt
or
xchg
mov
add
pop
push
pop
aam
das
retf
adc
pop
inc
push
inc
je
je
push
xor
out
inc
nop
enter
addr16
shr
xchg
ret
fcom
add
xchg
dec
jp
adc
cmps
jo
(bad)
push
inc
scas
cmp
xchg
cmp
pop
xor
sbb
adc
xchg
cld
xchg
adc
xchg
and
mov
ret
inc
nop
jecxz
add
ror
adc
push
add
aad
mov
stos
nop
adc
push
sub
shr
out
sub
and
addr16
retf
jno
add
inc
sbb
je
mov
(bad)
pop
ret
adc
push
cmp
and
sub
add
repz
push
dec
addr16
inc
je
dec
ret
add
cmp
pop
enter
stos
inc
or
out
sub
add
jae
adc
pop
push
arpl
ret
lock
inc
sub
add
hlt
dec
shl
xor
(bad)
mov
push
mov
jae
push
pop
adc
inc
je
push
add
pushf
ret
hlt
stos
lock
mov
inc
push
enter
(bad)
hlt
xchg
shl
xchg
je
adc
adc
adc
in
sub
addr16
into
push
pand
inc
out
ret
sar
dec
add
ss
push
xchg
xor
enter
add
(bad)
hlt
mov
ret
hlt
dec
cmp
addr16
inc
ror
dec
aam
sahf
dec
shr
push
rol
enter
adc
xchg
repz
je
or
mov
cmp
fld
test
fild
mov
cmp
je
push
movs
hlt
fcom
(bad)
fcom
rol
mov
clc
push
pop
hlt
mov
xchg
adc
mov
push
shr
mov
mov
mov
xor
inc
aad
mov
xchg
scas
lock
mov
inc
fidivr
test
sbb
xor
push
mov
mov
push
ds
fdiv
ds
mov
mov
mov
fstp
sbb
aad
mov
inc
adc
mov
in
not
hlt
clc
push
xchg
push
xor
lock
hlt
movs
lock
das
jo
xchg
pop
xor
js
push
in
neg
mov
stc
arpl
and
jecxz
mov
xor
jmp
clc
mov
popf
sti
jo
add
js
nop
pop
adc
mov
hlt
sbb
icebp
and
push
retf
ficom
imul
test
mov
ret
jae
xchg
aam
jae
dec
or
pop
mov
mov
xlat
in
sti
jno
mov
iret
xchg
test
xor
mov
xchg
int
dec
(bad)
xor
scas
sub
lods
inc
inc
mov
(bad)
inc
ja
pop
add
rcl
add
xor
mov
repz
and
(bad)
pushf
inc
mov
ror
sub
adc
xchg
add
out
push
in
mov
jge
loop
(bad)
adc
jp
push
hlt
fadd
sbb
xlat
mov
(bad)
mul
xlat
mov
(bad)
adc
mov
pop
add
shl
inc
loope
xor
aam
out
push
ins
push
lods
pop
(bad)
fild
pop
cmp
out
ja
pop
fwait
imul
xchg
ja
ja
push
aad
cmp
sbb
movs
ficomp
jl
push
(bad)
cmps
ficomp
and
xchg
jl
xchg
push
daa
pop
mov
or
push
xor
aam
xor
fincstp
push
xchg
cli
jecxz
pop
int
movs
fiadd
neg
rcl
jne
lds
in
cmp
repnz
ins
mov
inc
test
popa
inc
std
mul
xchg
add
jbe
push
js
in
cmp
and
pop
test
out
pop
push
pop
add
mov
test
add
add
mov
xchg
in
aaa
add
add
in
or
jle
call
xor
daa
movs
add
lds
and
lods
push
cld
pop
xchg
inc
enter
and
dec
ret
movs
sub
popf
dec
test
pop
add
std
pop
pop
or
jl
xlat
scas
jmp
xor
cld
sub
imul
mov
cmps
sbb
mov
inc
mov
imul
jl
ret
sahf
mov
and
jb
jmp
push
cs
test
mov
fstp
and
in
loop
mov
mov
xchg
push
popf
test
aad
popf
test
xchg
mov
and
inc
(bad)
and
push
add
jbe
or
out
repnz
daa
add
fnstcw
stos
mov
sahf
loopne
cmp
cs
jl
repnz
loop
out
bound
repnz
mov
xchg
jmp
sbb
sub
push
fnstsw
retf
jae
mov
mov
and
and
and
and
outs
and
jnp
push
repnz
jae
and
jb
and
and
push
loope
sbb
call
and
out
xor
and
and
mov
push
xchg
mov
mov
push
mov
mov
jb
jmp
mov
mov
repnz
dec
mov
jb
loop
fwait
(bad)
pushf
sahf
data16
jb
in
xchg
shr
fdiv
cwde
bound
fmul
and
sahf
(bad)
repnz
inc
jb
mov
mov
repnz
repnz
inc
adc
pop
sbb
ret
(bad)
cmps
into
cmp
jp
scas
jb
inc
adc
shl
out
in
dec
dec
loope
les
jmp
scas
sub
dec
out
shl
cs
out
enter
lahf
sub
dec
outs
jbe
push
and
xor
mov
ss
sub
outs
ret
enter
das
add
xor
lods
push
aam
fidivr
movs
mov
or
jle
jns
inc
fimul
jle
jle
push
jge
mov
and
rcl
fimul
call
inc
dec
lods
sbb
jbe
adc
pop
jbe
and
call
jle
push
sub
add
xor
jb
mov
fs
mov
or
inc
cmp
mov
jae
aad
dec
xchg
and
lods
js
mov
in
or
les
mov
add
ins
inc
or
pop
push
lods
cmp
psadbw
mov
xchg
out
mov
pop
repnz
popa
mov
test
inc
idiv
pop
or
pop
add
pop
in
loope
shl
pop
sbb
icebp
or
loope
mov
ins
mov
or
or
sbb
xor
dec
ret
ins
lods
lods
sub
jp
push
pop
add
repz
call
xor
sub
push
popa
push
inc
xor
dec
es
adc
sub
sub
jnp
sar
fs
mov
into
jbe
sbb
sub
imul
mov
les
jbe
xor
ins
jg
jg
call
pop
imul
test
jae
sub
dec
mov
adc
outs
mov
xor
ins
lea
xchg
lea
fldenv
mov
push
jb
push
jmp
(bad)
dec
dec
pop
cmps
mov
jg
xchg
push
add
xchg
gs
je
in
dec
lahf
sahf
hlt
out
lods
mov
cdq
jecxz
push
adc
sbb
jl
xor
aam
aas
std
push
(bad)
retf
rcr
or
pop
mov
adc
ret
adc
movs
mov
pop
cld
adc
jle
scas
outs
es
mov
fs
jp
adc
jno
in
jno
xchg
xchg
dec
call
pusha
mov
outs
cld
ficom
adc
dec
cdq
out
je
lahf
out
jl
fs
cmp
xor
xor
mov
shr
xchg
retf
adc
stos
mov
adc
adc
push
mov
out
shr
adc
xchg
dec
xor
hlt
stos
xor
xchg
outs
xchg
retf
push
mov
push
jne
pusha
cdq
aaa
sub
movs
rcr
xor
add
mov
and
sbb
out
mov
or
dec
shr
and
xchg
push
xor
inc
xchg
hlt
jno
or
xchg
push
cmp
dec
scas
fmul
inc
sub
mov
mov
jno
push
push
hlt
jb
push
aas
retf
shr
jl
imul
outs
cmp
scas
aas
ficomp
dec
xchg
sbb
aas
xchg
xor
push
outs
mov
mov
daa
xchg
xor
adc
jns
cwde
xchg
in
rcr
jg
or
mov
or
es
dec
xlat
jae
push
sbb
dec
dec
ret
aas
pop
mov
sub
add
xchg
(bad)
movs
pop
int3
add
das
shl
adc
cmp
pop
repz
fnstenv
btr
movs
cmps
in
dec
add
cmp
add
leave
std
adc
push
scas
fld
xlat
inc
add
adc
dec
in
pop
je
cmp
inc
movs
xchg
adc
or
daa
push
daa
push
out
out
cmps
aam
aam
xchg
out
daa
push
daa
push
out
out
cmps
aam
push
addr16
adc
aam
aam
adc
adc
push
daa
push
addr16
adc
aam
aam
adc
adc
push
daa
aam
xchg
out
daa
push
daa
push
out
out
cmps
aam
aam
je
xchg
daa
push
xchg
jmp
lds
addr16
adc
stos
aaa
pop
loopne
mov
call
dec
int3
ret
aaa
mov
fsubr
and
push
je
(bad)
sub
jmp
mov
push
xor
(bad)
rcl
sub
sub
adc
gs
das
cmp
outs
dec
cmp
mov
add
mov
repnz
and
jb
stos
jle
into
imul
add
retf
in
xchg
xchg
fucomp
dec
loop
adc
mov
push
ror
mov
push
mov
push
mov
push
ror
mov
push
mov
push
mov
push
ror
mov
push
mov
push
mov
push
ror
mov
push
mov
push
mov
push
ror
hlt
cli
adc
push
mov
mov
lahf
into
mov
std
mov
imul
in
cli
cmp
sub
lea
arpl
call
fisttp
dec
or
sar
out
in
adc
(bad)
jge
ins
outs
jbe
dec
cmc
loop
out
cld
push
jmp
inc
mov
outs
cmc
out
retf
xor
shl
xchg
imul
and
sbb
int3
out
shr
mov
xchg
(bad)
out
adc
cld
repz
mov
xlat
int
jmp
in
aaa
jmp
xchg
dec
cmps
push
(bad)
int
mov
movd
inc
pop
fbstp
clc
mov
cmp
dec
and
and
popf
jno
ins
xlat
mov
loop
jae
repz
sbb
jno
add
shl
inc
rcl
pusha
data16
mov
jle
leave
iret
pop
lahf
jmp
or
inc
push
push
ds
xchg
ds
inc
dec
pop
sbb
adc
stos
in
push
push
es
fs
inc
push
dec
retf
push
and
and
pop
adc
jae
inc
dec
xchg
stos
mov
adc
or
ja
in
in
and
and
push
push
dec
cmp
push
push
dec
add
(bad)
dec
dec
push
js
pop
dec
or
push
adc
push
dec
push
dec
or
and
dec
stos
iret
in
sbb
js
add
push
dec
pop
in
and
and
sub
xor
repnz
push
es
pop
fdivr
dec
push
rol
movs
leave
push
mov
addr16
xchg
fst
push
out
mov
sub
push
dec
in
in
push
push
dec
sub
mov
idiv
idiv
cld
idiv
jl
mov
xchg
cld
idiv
jl
out
je
and
xchg
cld
lahf
sub
pop
(bad)
idiv
cld
xchg
int3
mov
push
test
mov
cld
nop
fidivr
adc
xchg
mov
in
sub
xor
fidivr
test
lds
jp
movs
retf
(bad)
(bad)
cwde
xchg
lock
xchg
retf
xchg
and
iret
mov
mov
(bad)
sub
xor
cdq
in
mov
mov
and
not
mov
sub
ffreep
mov
mov
je
xchg
lods
das
mov
pop
(bad)
inc
sti
les
add
adc
(bad)
ins
ja
or
int3
or
stos
push
sbb
pop
fadd
movs
gs
gs
jno
scas
ins
dec
or
or
mov
es
sub
(bad)
in
push
xchg
or
and
ins
movs
ins
loop
jbe
pop
fidiv
jle
cmp
ds
lods
mov
inc
std
dec
sbb
or
dec
and
and
sbb
push
imul
aad
sub
hlt
addr16
shr
xchg
inc
scas
xor
hlt
sub
imul
adc
xchg
dec
movs
jmp
imul
or
retf
daa
sbb
retf
adc
jno
push
mov
inc
add
mov
loopne
loop
fs
pop
push
fadd
sbb
test
xchg
dec
setnp
out
cmp
ret
leave
pop
out
add
push
outs
sti
stos
(bad)
sub
adc
es
sahf
and
sar
cmp
mov
test
or
movs
lock
xor
dec
adc
(bad)
call
ss
mov
movs
outs
xchg
or
sbb
push
sbb
into
rol
sahf
add
pop
cmp
push
scas
dec
xchg
sbb
dec
fnsave
xchg
or
fidiv
push
inc
mov
in
mov
cwde
cmp
cmp
(bad)
shl
(bad)
cmp
and
scas
sub
sub
xor
ret
dec
mov
push
and
push
mov
sub
mov
sbb
das
mov
test
ja
sub
retf
aad
xor
(bad)
pop
xchg
fdiv
cwde
les
(bad)
(bad)
jns
jle
mov
cmp
imul
outs
dec
or
mov
fidiv
mov
pushf
pop
fdivr
loop
out
pusha
push
pop
xor
push
enter
cld
add
outs
jp
mov
xchg
pop
lea
repnz
jmp
mov
cli
int
lods
into
fmul
cmp
sahf
imul
scas
in
lahf
sub
pop
or
psubq
cdq
sub
addr16
xor
cmp
into
xlat
xchg
jl
sahf
add
std
lahf
add
jnp
lods
jg
(bad)
push
jmp
out
ds
pop
daa
dec
bswap
xchg
jle
(bad)
(bad)
cli
lods
or
cmp
test
push
leave
std
cmp
dec
pop
int
xchg
lods
fisubr
sub
inc
imul
out
mov
clc
pop
out
scas
push
xor
mov
in
sbb
int3
int
sbb
repnz
dec
fwait
imul
pop
iret
dec
retf
sbb
fsubr
push
cli
cs
mov
int
cmp
cmp
jne
imul
fstp
jnp
cmp
popa
pop
in
mov
or
inc
mov
ins
lahf
call
mov
ins
lods
aas
stos
jg
mov
lds
inc
mov
test
outs
mov
push
cmp
mov
ror
dec
(bad)
mov
sub
or
(bad)
cmp
sar
shr
out
shl
inc
std
add
imul
(bad)
in
sbb
popf
ins
in
ret
pop
fdiv
xchg
sbb
sti
(bad)
out
std
adc
retf
add
xchg
jg
or
fisubr
push
mov
inc
sbb
les
cmp
add
out
cmp
cmp
mov
mov
gs
push
repz
cmp
adc
jle
js
mov
stc
cs
loop
pop
test
xchg
jmp
iret
xor
mov
cld
mov
sub
stos
(bad)
shl
fwait
scas
sbb
jns
mov
mov
je
jge
jmp
pop
jge
out
push
mov
stc
sbb
cmp
leave
fldcw
mov
dec
and
dec
xor
push
xor
aas
or
iret
xlat
out
in
inc
sbb
call
mov
sbb
pop
repnz
and
jp
ins
cwde
popf
pop
mov
dec
xor
add
xchg
(bad)
popf
rcl
xchg
cmp
jge
or
add
sbb
xor
pop
stos
lods
mov
int3
mov
sbb
popf
hlt
ds
pop
mov
aas
jle
jl
mov
int
outs
aas
jo
mov
aaa
bound
jge
xchg
rcr
aad
or
(bad)
mov
mov
popf
xor
aas
mov
stos
int3
lods
pop
mov
mov
sub
mov
jge
or
rcr
hlt
inc
lahf
idiv
cli
scas
push
aas
int3
mov
(bad)
pop
push
dec
mov
mov
jp
jne
mov
(bad)
(bad)
fmul
sub
dec
addr16
sbb
inc
inc
popf
jle
imul
leave
add
or
mov
mov
mov
stos
js
stos
inc
mov
ret
js
outs
inc
mov
gs
push
jns
popa
cmp
push
mov
add
dec
and
and
pushf
xlat
sbb
int3
mov
xchg
push
daa
(bad)
frstor
and
or
push
fst
xor
stos
(bad)
std
or
int3
sti
cmps
imul
stos
push
and
rol
push
fidiv
mov
sub
push
es
push
ins
push
push
jecxz
in
ja
xchg
push
push
dec
pop
push
call
jmp
cmp
xchg
jbe
jmp
(bad)
cmp
imul
xchg
mov
push
push
sub
scas
cmp
jns
inc
push
sub
add
sub
data16
mov
mul
scas
out
call
pop
add
mov
jnp
imul
arpl
mov
aas
and
adc
xor
pop
inc
pop
imul
loope
and
cmp
add
dec
dec
mov
loopne
retf
ret
sbb
push
dec
dec
cmps
or
shl
push
mov
push
jo
inc
mov
je
je
repnz
pop
repnz
not
dec
xchg
pop
and
lahf
shr
jle
cmp
xor
shr
(bad)
and
xchg
push
arpl
aad
add
xor
xor
adc
adc
sbb
pop
es
adc
imul
inc
xor
in
push
mov
jno
inc
test
or
sub
bnd
push
out
inc
add
add
xor
loopne
pop
data16
inc
dec
ins
retf
xor
rol
cmp
lea
push
sub
cmp
jae
outs
iret
xor
lea
xor
ret
mov
jns
push
mov
lds
int
adc
repnz
and
inc
jp
ffreep
out
and
loopne
jo
cdq
and
in
mov
jae
push
mov
add
push
stc
xor
push
inc
xor
adc
cmp
mov
dec
xor
adc
cld
sbb
adc
xor
mov
repnz
pop
enter
add
jae
mov
aad
push
in
xchg
clc
stos
cwde
pop
mov
mov
mov
lods
mov
loop
std
repnz
mov
or
adc
repz
jl
jns
sub
dec
push
aas
push
sub
loop
xchg
int3
dec
adc
sub
cmps
mov
out
or
and
push
(bad)
ror
sbb
int3
mov
xor
jl
call
lea
daa
mov
jl
ror
shl
dec
push
retf
mov
(bad)
sbb
in
ret
pop
icebp
dec
ret
cmp
std
dec
in
inc
scas
ror
in
arpl
jbe
pop
jecxz
mov
sar
pop
xor
mov
sti
in
pop
shl
mov
or
cmp
sub
push
push
inc
loop
repnz
mov
pop
ret
clc
mov
mov
ret
dec
jo
mov
shr
into
and
adc
jae
fsubr
pop
lods
fdivrp
jge
mov
call
xor
and
int
outs
or
hlt
dec
sub
xlat
neg
pop
sub
sub
out
sahf
out
and
lock
sbb
div
jae
mov
push
lods
sub
call
adc
sbb
and
inc
or
sahf
push
rol
pop
and
test
rol
popf
ss
push
out
call
sbb
push
pop
pushf
mov
popa
adc
mov
fistp
dec
push
psubd
inc
add
jnp
mov
adc
aam
xchg
sti
in
stos
leave
jp
icebp
push
inc
in
cs
mov
ror
or
mov
sub
fwait
ds
mov
xchg
add
cwde
scas
mov
dec
pop
dec
or
(bad)
popf
adc
push
fsub
or
nop
mov
adc
add
push
fs
icebp
jmp
out
movs
sbb
call
movs
inc
movs
and
and
and
or
shr
push
outs
ds
jno
mov
push
mov
pop
pusha
sub
xchg
inc
mov
adc
add
mov
not
mov
mov
cmp
inc
outs
jne
pop
call
jle
inc
jl
mov
sub
or
pop
jb
jle
cmp
lods
mov
fsubr
push
mov
cld
lods
add
pop
stos
sub
xchg
cwde
mov
dec
push
jg
pop
dec
mov
out
inc
adc
cmp
pop
sbb
iret
jmp
mov
xchg
das
(bad)
mov
inc
lods
sub
sub
iret
rcr
leave
mov
nop
mov
and
into
push
inc
sbb
sub
sahf
scas
repz
dec
out
pushf
mov
repnz
jno
(bad)
mov
loope
lods
lods
aas
xor
outs
or
adc
jae
sub
(bad)
dec
aam
rcr
ss
mov
nop
pop
in
xlat
inc
movs
test
fild
pop
cld
xchg
(bad)
push
push
add
aas
adc
pop
lea
mov
and
mov
add
jb
(bad)
mov
push
sub
pop
ins
cli
or
push
jo
mov
int
sub
cmp
cmps
test
popa
(bad)
mov
cwde
cld
dec
leave
outs
xchg
jne
loop
cs
sysexit
loopne
popf
cmp
dec
test
mov
aas
jecxz
outs
cmps
enter
add
loopne
lods
cmp
enter
stos
mov
mov
mov
sbb
movs
out
cdq
inc
dec
loop
lds
jp
fs
cmp
and
test
repz
mov
movs
cwde
lods
sub
lds
movs
sbb
cmp
call
fdivr
pop
or
or
call
movs
pop
lea
cmps
loopne
call
fcom
enter
pop
or
mov
fsub
sbb
stos
call
cmp
mov
push
sbb
sub
inc
in
pop
and
int
int3
xor
push
push
bound
and
or
mov
inc
or
loopne
bound
(bad)
cmp
pushf
dec
out
out
les
mov
sub
lds
jne
mov
in
add
dec
mov
push
stos
xor
movs
popf
adc
int3
(bad)
out
test
and
and
push
pop
xchg
test
int3
adc
add
sub
pushf
adc
adc
sub
xchg
sbb
call
and
xor
inc
jp
int
lods
out
cmc
or
dec
inc
push
lds
daa
push
pop
pop
pop
add
mov
hlt
clc
xor
xchg
inc
sbb
mov
mov
jmp
je
int3
in
add
jmp
cmp
add
rcl
mov
aam
inc
imul
(bad)
dec
lods
xor
call
jmp
shr
rcr
pushf
mov
push
dec
xor
or
lods
rcr
jbe
inc
adc
movs
stos
mov
repnz
xlat
or
fs
fsub
mov
loop
ins
adc
inc
outs
sbb
jl
push
push
fdivp
in
les
xor
or
adc
jmp
adc
cmps
fcmovu
aaa
xchg
xchg
pop
fistp
xchg
int
scas
fldcw
(bad)
retf
adc
sbb
mov
xchg
rol
ss
mov
test
aam
leave
fisubr
aad
sbb
inc
sbb
or
icebp
xchg
mov
cmp
jmp
mov
retf
and
pushf
pop
mov
bndstx
cmp
fwait
add
lock
pop
fidiv
lahf
inc
cmc
push
jns
add
mov
(bad)
clc
pop
and
mov
leave
dec
jecxz
call
mov
mov
fidiv
add
dec
mov
inc
xlat
imul
jp
cdq
repz
aam
(bad)
fstp
mov
xor
sar
scas
sub
adc
cmps
or
inc
mov
rcr
xchg
jne
ja
ins
int3
cmp
and
(bad)
fimul
mov
mov
call
gs
sbb
lods
sub
mov
pop
sbb
shl
dec
iret
mov
adc
test
add
inc
(bad)
dec
fs
icebp
cmp
ja
add
or
xchg
jp
add
add
mov
cmp
imul
enter
mov
test
movs
mov
or
or
das
es
xor
inc
mov
stc
cmp
aad
and
mov
data16
ja
dec
imul
add
or
fwait
pusha
jecxz
fnsave
shl
in
xchg
out
sub
(bad)
xchg
aaa
mov
mov
les
ret
loope
pop
adc
outs
icebp
push
cs
sbb
in
ja
and
adc
pusha
adc
loop
dec
dec
call
int
lahf
repz
pop
jmp
push
ret
lods
pop
int3
aad
pop
std
pop
inc
outs
push
aad
mov
fld
push
dec
xor
inc
leave
xchg
sub
lahf
loope
and
imul
out
add
xchg
retf
jg
mov
jmp
test
cmps
and
out
adc
ret
jp
ror
call
and
dec
dec
aas
xor
sbb
pop
or
fistp
dec
clc
cmp
ss
add
mul
cmp
pop
fdivr
fs
mov
dec
dec
add
in
mov
popa
pop
xor
imul
sar
mov
dec
jb
ins
sub
lds
lods
hlt
rcr
push
push
hlt
add
xor
in
xchg
and
fcom
sbb
jmp
or
test
ss
add
add
ret
add
retf
ins
add
xchg
pushf
imul
adc
dec
stc
test
jae
mov
sub
mov
mov
adc
ret
(bad)
movs
test
inc
int
into
push
arpl
int3
aad
test
outs
xchg
push
mov
mov
inc
pushf
mov
movs
les
repz
mov
pop
fisubr
sbb
movs
dec
aad
xchg
push
or
dec
mov
addr16
aam
cmp
push
mov
dec
pop
cmps
sub
ret
aas
sub
adc
ret
push
(bad)
loopne
cmp
xchg
lea
neg
movs
shl
jg
inc
repnz
in
jne
sub
jp
or
or
fld
nop
cli
dec
push
xor
mov
into
or
adc
push
push
sub
lea
nop
and
dec
sbb
or
jnp
ror
cmp
fisub
inc
add
dec
data16
mov
sbb
pop
out
imul
ret
dec
loopne
out
sub
dec
adc
adc
add
sub
lock
inc
test
sub
mov
jb
clc
daa
push
xchg
leave
jecxz
mov
xchg
in
mov
daa
mov
(bad)
nop
cmps
ins
ss
jl
ds
push
loop
or
pushf
jecxz
shl
sub
in
and
and
jmp
add
push
and
loope
xchg
sahf
pop
pop
clc
push
push
scas
out
je
aaa
adc
fsubr
add
test
xor
adc
outs
inc
js
loope
js
xchg
into
mov
mov
iret
call
idiv
mov
sahf
mov
push
mov
out
adc
cmps
sbb
mov
scas
stos
sub
xlat
mov
retf
xor
cs
pop
jg
test
(bad)
shl
(bad)
or
ret
fimul
mov
bound
scas
xchg
mov
xor
ss
jmp
add
and
daa
pop
lds
int3
mov
xchg
mov
jae
push
gs
xor
ins
stos
fild
jge
inc
test
mov
test
js
repnz
mov
loop
xor
xor
cli
cmp
lods
std
mov
xchg
mov
mov
dec
inc
inc
int
mov
aam
push
int
std
mov
rcr
stos
mov
add
xchg
loop
lds
punpckldq
jo
imul
scas
mov
ins
push
xor
out
mov
popa
jne
mov
mov
and
xchg
jge
mov
outs
ficom
cmp
imul
mov
sbb
test
jbe
add
sbb
in
daa
or
in
add
cmp
pop
or
xor
loopne
les
ret
retf
popf
sub
ins
fwait
sbb
jbe
hlt
call
inc
xchg
fs
and
xchg
sbb
xor
adc
xchg
cmc
pop
adc
dec
mov
push
sbb
fwait
js
pop
jle
mov
out
pop
out
shl
jne
out
aad
fbstp
bound
cmp
shr
push
mov
xchg
out
dec
stos
push
adc
std
(bad)
icebp
test
fisttp
xchg
in
xchg
or
aam
push
imul
aaa
sub
orps
push
loopne
cli
into
rcr
fwait
mov
cmp
or
call
pop
sbb
mov
lods
rol
dec
push
cmps
scas
mov
stc
add
call
movs
scas
aad
and
pushf
in
ficom
push
add
sub
sbb
jne
xchg
jns
mov
pop
arpl
mov
fcmovnbe
xchg
sub
adc
lahf
and
(bad)
mov
lock
pop
dec
jb
mov
movs
mov
das
repz
mov
data16
sahf
ror
cwde
ret
out
sti
adc
and
xor
add
cmp
or
mov
clc
movs
outs
addr16
add
int3
and
mov
mov
fisttp
xchg
jne
mov
push
xor
xor
xor
dec
adc
xor
add
in
mov
cmp
fs
pop
ins
mov
loop
mov
out
in
cmps
sahf
aam
rol
sahf
imul
neg
lock
sbb
pop
(bad)
inc
cmp
sbb
aas
inc
cmp
cmp
sbb
into
xor
add
popa
sbb
adc
or
mov
add
add
pusha
adc
out
pop
add
cmp
push
rcl
ret
push
mov
ss
pop
and
aas
aam
adc
repnz
jmp
adc
adc
jno
push
sub
add
add
add
and
adc
mov
pop
dec
cmp
and
adc
jl
aaa
pop
and
das
cmp
and
adc
pop
mov
dec
cmp
es
lock
daa
xor
add
inc
daa
inc
adc
sahf
sub
cmp
sub
jp
mov
add
adc
add
aas
mov
xor
sub
aas
ja
push
xor
mov
cmp
sub
push
aas
inc
out
mov
adc
dec
cmp
adc
aas
and
(bad)
add
cmp
das
jo
aas
sub
pop
jl
ds
xor
pop
aas
lods
ds
stc
clc
sbb
xlat
xor
sbb
adc
inc
int
dec
cmp
xor
sbb
bound
add
clc
cmp
add
xor
push
lods
cmps
test
aaa
inc
sbb
jl
jnp
jle
dec
cmp
cmp
sbb
fnstcw
add
sbb
inc
pop
(bad)
loop
mov
add
add
cmp
sbb
int3
jnp
mov
add
add
cmp
or
iret
shl
adc
aas
movs
jmp
add
add
add
jo
aas
cld
jnp
scas
and
dec
cmp
inc
rcr
std
sbb
cmp
inc
and
mov
jne
and
cmp
add
add
int3
imul
cmp
dec
loopne
aas
xlat
cmc
outs
mov
add
add
dec
xor
aaa
mov
dec
cmp
dec
nop
sbb
int
test
cmp
dec
lock
xchg
add
dec
cmp
dec
push
push
aas
or
daa
mov
add
add
mov
xor
inc
scas
inc
cmp
push
add
aas
sub
inc
cmp
push
pusha
pop
aas
dec
and
loope
mov
add
inc
rcl
cmp
or
adc
aas
jmp
ror
add
sub
(bad)
mov
xchg
dec
cmp
cs
xor
cmp
das
cwde
and
fcmove
and
add
add
xor
and
lods
mov
adc
add
shl
lock
nop
and
cmp
xor
and
mov
and
cmp
xor
and
repz
adc
out
inc
cmp
xor
mov
jne
inc
cmp
ss
aas
ins
mov
push
fld
xor
dec
aaa
fsub
aas
sub
cmps
push
mov
add
jne
or
aas
mov
and
and
cmp
add
aas
hlt
pop
js
jns
inc
cmp
cmp
aas
bound
ficomp
add
aam
nop
and
jne
in
jecxz
inc
cmp
cmp
mov
fdiv
adc
lock
add
inc
sub
ss
cmp
aas
and
aas
hlt
daa
pushf
xchg
loope
inc
cmp
inc
dec
and
xor
push
test
add
aas
jne
jge
add
dec
cmp
inc
test
aas
sub
aaa
cmp
inc
fsub
aas
sbb
cmp
add
add
push
lods
popf
retf
or
add
add
xor
xor
xor
dec
pusha
and
push
cmp
add
nop
and
loope
fsubr
add
add
test
cmp
dec
call
jnp
cmp
cmp
dec
sbb
push
ja
dec
cmp
dec
dec
and
sub
add
add
js
aas
cmp
inc
repnz
push
mov
or
cmp
add
xor
cmp
fs
cmp
push
add
aas
jle
dec
jl
or
xor
es
push
les
cmp
push
pop
es
repz
ret
dec
inc
cmp
pop
mov
aas
push
sbb
dec
cmp
pop
mov
addr16
cmp
pop
call
inc
repnz
cmp
ror
pop
mov
movs
retf
add
add
rcr
push
mov
ins
mov
add
mov
popf
fwait
loope
sub
aam
push
mov
movs
shl
pop
push
mov
sbb
dec
mov
aad
push
mov
into
fs
mov
(bad)
call
adc
sbb
mov
(bad)
iret
adc
jno
pushf
xor
xlat
lahf
adc
(bad)
push
test
add
outs
adc
out
and
add
add
aas
adc
mov
stos
inc
mov
fstp
adc
ss
dec
mov
(bad)
adc
dec
xchg
pushf
cmp
inc
mov
fidivr
xor
inc
test
add
add
(bad)
adc
xor
jne
inc
retf
adc
add
add
fcomp
mov
pop
sti
clc
mov
fsubr
adc
repz
mov
add
add
call
mov
pop
ret
add
add
repz
mov
scas
adc
popf
fmul
add
add
mov
cmp
dec
ds
fisttp
mov
(bad)
add
pop
adc
sub
mov
loope
adc
jl
sbb
test
mov
inc
jge
pop
inc
mov
loop
adc
mov
mov
loop
adc
icebp
adc
add
add
adc
xchg
mov
jecxz
adc
jmp
add
fist
mov
loopne
dec
mov
in
adc
(bad)
mov
in
adc
div
add
add
dec
adc
ret
test
mov
out
adc
imul
add
out
adc
jl
xor
out
adc
add
adc
add
add
(bad)
adc
sbb
xor
add
add
int
jmp
add
cmp
aas
adc
mov
cs
jmp
jle
cld
jae
xor
add
add
retf
in
add
add
mov
pop
movsx
dec
dec
mov
(bad)
dec
mov
xor
sub
xlat
lahf
push
mov
std
inc
sti
mov
fdivr
push
mov
retf
mov
(bad)
or
xor
iret
stc
mov
ficomp
test
mov
mov
fstp
or
ins
or
cmp
(bad)
or
xchg
ffreep
scas
xchg
dec
mov
fdivr
mov
cmp
add
fstp
or
lahf
fwait
lods
xor
cmp
fidivr
(bad)
rcr
add
add
cmps
and
or
mov
loopne
or
add
sub
mov
scas
repnz
mov
mov
loop
or
mov
add
loopne
dec
mov
(bad)
mov
add
inc
clc
mov
std
mov
add
mov
aas
or
push
add
pop
in
or
jo
dec
mov
out
or
xchg
js
mov
out
or
sbb
add
js
sbb
mov
call
popf
(bad)
jbe
sbb
add
add
call
push
cwde
fisttp
xor
jmp
mov
push
shl
add
add
pop
push
mov
out
dec
mov
jmp
add
or
ror
add
jmp
add
stc
(bad)
xor
in
aas
add
push
scas
movs
and
add
add
fild
fmul
cmp
in
in
jg
mov
add
daa
mov
out
aas
add
adc
ds
out
fild
mov
lods
jbe
mov
out
jg
mov
xchg
push
daa
mov
lock
add
mov
sub
lock
push
inc
fiadd
add
jl
pop
add
in
inc
mov
repnz
mov
or
dec
mov
repnz
add
mov
add
push
repz
add
add
mov
repz
mov
mov
add
and
lahf
add
fdiv
add
sub
stc
xchg
dec
mov
jmp
mov
add
add
(bad)
(bad)
mov
xor
mov
in
aas
(bad)
mov
push
mov
add
std
mov
loopne
cmp
inc
out
mov
mov
cmp
mov
out
aas
cld
mov
daa
mov
mov
out
jg
mov
int
inc
mov
lock
mov
mov
icebp
(bad)
stc
mov
inc
call
add
aas
stc
mov
mov
add
and
jg
mov
(bad)
repz
mov
repz
ror
add
add
pop
je
xlat
push
dec
mov
cmc
aas
idiv
retf
sub
add
add
cmc
mov
mov
iret
test
mov
idiv
hlt
mov
sub
add
cmp
aas
hlt
mov
aas
adc
add
add
idiv
mov
fldl2t
inc
mov
clc
mov
mov
shr
add
add
stc
push
mov
pop
push
pop
mov
stc
aas
icebp
mov
adc
cmp
add
add
jg
mov
or
sub
add
add
jg
mov
pop
and
sbb
jg
mov
call
adc
(bad)
in
mov
jo
aaa
mov
idiv
mov
sti
xor
clc
(bad)
jmp
cmps
out
dec
mov
stc
jg
mov
lock
add
push
dec
jmp
xor
sti
jg
mov
shr
pop
mov
sti
jmp
mov
cmp
cld
jmp
mov
xor
inc
mov
cld
jg
mov
stos
sahf
cmp
cli
(bad)
fistp
push
fistp
mov
sti
(bad)
fdivr
cmp
add
cmp
fnstcw
mov
add
call
mov
mov
add
lock
call
mov
cmp
ss
(bad)
call
mov
out
inc
mov
(bad)
dec
mov
push
push
cmp
(bad)
inc
mov
loope
inc
mov
(bad)
inc
mov
shl
add
add
push
or
add
add
or
mov
mov
mov
push
mov
les
out
push
fs
cmps
ret
jns
arpl
mov
inc
cs
mov
add
lock
xor
push
lock
mov
mov
cmp
xor
sub
aas
pop
or
adc
call
outs
leave
ja
sbb
nop
mov
mov
lock
gs
movs
loop
lea
neg
sub
lock
es
loop
xchg
mov
xchg
aas
inc
cmp
repz
retf
lock
xor
dec
xchg
cmp
mov
ins
pop
mov
aas
or
dec
cmps
cwde
cmp
inc
jb
xchg
int3
lock
jno
loop
fcomp
nop
cmp
rcl
xor
jecxz
aas
push
jnp
daa
pop
cmp
sbb
(bad)
scas
data16
lock
jnp
dec
(bad)
in
fwait
imul
icebp
aas
cmp
xchg
mov
mov
movs
ins
mov
mov
mov
call
call
movs
enter
aas
or
cmp
jge
mov
mov
mov
jmp
aas
imul
shl
adc
jmp
mov
dec
jnp
pop
mov
pop
add
loopne
icebp
aas
pop
imul
xor
stos
mov
icebp
aas
cmp
mov
cmp
frndint
and
icebp
aas
mov
xchg
mov
cmp
repnz
xchg
test
jne
lea
fdivr
dec
pop
repnz
in
movs
xchg
xchg
jle
cmp
jne
jp
repnz
jb
(bad)
mov
mov
cmp
cmps
mov
into
push
repnz
movs
hlt
hlt
mov
fnstsw
inc
imul
fldl2t
inc
cdq
xor
cmc
loope
test
aas
jge
aas
mov
dec
call
sahf
repnz
push
adc
cmp
(bad)
sar
repnz
mov
or
or
in
test
repnz
aam
fist
nop
cmp
das
ds
and
inc
bswap
jno
adc
push
repz
in
xor
push
xchg
fmul
and
aas
jl
sbb
call
fs
cmp
aas
movs
pop
test
daa
xchg
cmp
lahf
xchg
pop
lds
aas
sub
pop
out
pop
mov
jno
aas
loope
inc
mov
data16
aas
mov
xchg
sahf
mov
(bad)
popa
(bad)
ss
mov
sub
sub
clc
call
dec
cmps
fdivp
aas
mov
fimul
add
cli
repz
repz
push
stc
and
xchg
mov
or
hlt
aas
js
xor
repz
mov
cmc
xor
aas
cwde
jns
jecxz
mov
aas
iret
sub
jp
dec
cmp
add
aas
jbe
ror
pushf
cmp
cmp
mov
xchg
aas
lock
cmp
rcl
lock
shl
(bad)
retf
cdq
cmp
sub
aad
mov
in
scas
xchg
inc
jge
or
fdiv
aas
xor
mov
cmps
sub
jbe
stc
hlt
aas
jecxz
pop
ror
mov
mov
ficom
cmc
aas
out
xchg
mov
mov
sub
sbb
setb
movs
push
cmc
aas
call
mov
inc
outs
cmc
aas
lods
xchg
sbb
cmp
(bad)
xchg
aam
(bad)
cmc
aas
out
call
push
dec
fld
stos
cmc
aas
lods
inc
inc
add
mov
pop
mov
leave
cmc
aas
mov
dec
cmp
dec
and
aas
pop
out
xor
cmps
fwait
cmp
fdiv
loope
idiv
inc
ficom
inc
loop
mov
jle
idiv
xchg
mov
jle
adc
inc
inc
idiv
xor
mov
(bad)
idiv
xor
xchg
mov
mov
push
xor
inc
scas
cmp
int
jg
sahf
mov
mov
xor
fwait
mov
adc
idiv
or
jmp
mov
das
sbb
mov
idiv
stos
mov
cmp
push
stc
jge
idiv
test
and
je
in
call
cdq
jp
xchg
cmp
aad
ins
fldcw
inc
push
jmp
idiv
shr
push
pop
and
mov
imul
cwde
cmp
add
jae
mov
add
ja
test
shl
aad
push
ror
cmp
dec
iret
ss
aas
jle
adc
cmp
sbb
push
daa
add
aas
sub
xchg
mov
mov
adc
mov
sbb
aas
sti
int
mov
in
xchg
inc
fldcw
aas
mov
(bad)
lahf
mov
(bad)
mov
aas
cmp
cdq
cmp
mov
clc
aas
es
xchg
jmp
mov
xor
clc
aas
stos
jecxz
xor
jo
ss
cdq
scas
icebp
clc
aas
ins
xchg
jecxz
adc
test
call
aas
and
popf
mov
aaa
aaa
stc
aas
mov
pop
addr16
inc
pop
stc
aas
cmp
movs
xchg
jl
jbe
push
dec
ficomp
rol
popf
mov
icebp
mov
into
xchg
mov
lock
aas
mov
jl
cmp
and
sbb
stc
aas
outs
dec
out
retf
cmp
in
jnp
or
aas
xor
sbb
dec
pop
xchg
mov
fwait
xor
aas
stos
fdivr
xor
mov
push
cli
aas
loope
(bad)
fld
popf
mov
sahf
jns
aas
(bad)
arpl
retf
fwait
cmp
std
jns
imul
push
leave
cli
nop
cmp
repz
shr
xor
(bad)
mov
lahf
call
pop
xor
mov
lea
pop
push
sti
aas
and
or
mov
mov
xlat
test
pop
and
pop
in
jb
sti
aas
jecxz
mov
mov
jbe
sti
aas
cmp
mov
mov
sti
aas
sub
cld
sahf
mov
push
int3
sti
aas
test
cmp
xlat
pop
ret
aas
jb
imul
std
sahf
mov
fwait
sbb
aas
fisttp
mov
cmp
inc
cld
aas
or
and
inc
fwait
cmp
rcl
icebp
addr16
aas
lods
cmp
dec
xchg
cmp
out
xchg
ins
(bad)
cld
aas
inc
pop
or
jno
imul
jmp
cmp
ret
pop
push
or
cld
aas
jb
adc
lea
pop
std
aas
pushf
jp
inc
aaa
mov
or
aas
ja
popf
jno
dec
popf
mov
sbb
aas
push
aaa
pop
xlat
add
cmp
leave
push
jecxz
std
aas
call
push
xchg
mov
out
std
aas
xor
pushf
cmp
mov
repz
std
aas
ret
js
ficom
xor
dec
sbb
movs
xchg
mov
inc
es
aas
xchg
adc
and
aas
mov
cs
(bad)
aas
(bad)
int3
test
cmp
dec
(bad)
sti
push
jp
aas
loope
or
and
xchg
cmp
nop
movs
mov
xchg
sub
icebp
mov
dec
iret
(bad)
aas
mov
pushf
mov
sbb
(bad)
aas
mov
movs
xchg
(bad)
popf
cmp
mov
(bad)
aas
inc
mov
cmp
inc
outs
pop
jbe
(bad)
aas
mov
cdq
cmp
mov
(bad)
aas
or
popf
mov
shl
repz
dec
xchg
jno
sub
sar
aas
out
gs
je
bound
add
add
add
inc
add
add
add
cmp
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
aas
add
add
add
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
addr16
jg
push
aas
mov
imul
mov
aas
mov
cmp
mov
cli
inc
out
add
add
(bad)
(bad)
(bad)
inc
add
inc
inc
adc
add
add
lock
add
add
add
jg
add
add
add
inc
add
add
add
add
add
add
loopne
add
add
add
loopne
add
add
add
adc
add
add
add
clc
inc
add
aas
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
clc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
jg
add
(bad)
(bad)
(bad)
(bad)
jg
cmp
inc
out
xor
xchg
push
repz
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
lds
aas
adc
and
(bad)
dec
mov
lds
mov
push
push
aad
push
jp
cwde
cdq
cdq
leave
aas
sbb
add
add
loopne
add
add
add
lock
add
add
add
lock
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
out
aas
add
add
add
out
aas
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
aas
add
add
add
aas
add
add
add
in
aas
add
add
add
in
aas
add
add
add
add
lods
jmp
add
add
add
aas
add
add
add
aas
add
add
add
jmp
repnz
cwde
jmp
cwde
jmp
inc
jmp
inc
jmp
in
jmp
add
in
jmp
add
call
add
add
add
aas
add
add
add
aas
add
add
add
call
add
cli
call
add
lods
call
add
lods
call
add
(bad)
call
add
(bad)
call
add
sbb
aas
add
add
add
call
add
shl
aas
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
out
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
out
add
add
add
out
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
in
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
jecxz
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
loop
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
add
add
add
aas
add
add
add
loop
add
add
add
loop
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loope
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
add
add
add
test
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
aas
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
cmp
test
(bad)
aas
adc
mov
leave
fidivr
add
fwait
jp
aas
xlat
out
daa
fldcw
and
add
ret
cmps
aas
shl
test
pop
cmp
xor
aas
inc
inc
mov
cmp
pop
inc
mov
rcl
rol
inc
cmp
mov
mov
inc
push
push
cmp
cmp
ins
xchg
mov
dec
jns
ds
pop
and
(bad)
aas
inc
cmp
cmp
sahf
xlat
sar
dec
js
and
or
cdq
ret
or
jns
dec
cmp
jb
dec
les
mov
sub
idiv
jbe
add
aas
in
(bad)
xlat
push
xor
or
out
and
add
mov
(bad)
xor
aas
cmp
mov
retf
sub
jmp
aaa
cmp
test
ds
xchg
into
aas
sbb
xchg
and
cmp
fdiv
and
iret
pop
aaa
cmp
add
sar
inc
or
out
xor
cmp
sbb
sar
mov
or
sbb
cmp
sub
test
cmp
loop
sar
ret
adc
and
add
push
sbb
sar
add
add
ret
aam
(bad)
int
or
cmp
sbb
pushf
or
cmp
sbb
pop
cli
mov
clc
dec
and
test
aas
sbb
mov
das
jb
cmp
sbb
aas
shl
(bad)
xor
mov
xlat
aas
mov
inc
addr16
scas
aas
cmp
rcr
push
pop
data16
cmp
add
fnstcw
inc
imul
push
fnstcw
pop
inc
repnz
add
fidivr
adc
adc
xchg
inc
fstp
(bad)
mov
xor
cmp
add
daa
sahf
int
fstp
push
fwait
xchg
outs
mov
cmp
mov
fdivr
ret
call
add
push
fnstsw
(bad)
cmove
sub
cmp
stos
aam
aas
std
sbb
sub
add
fidivr
mov
mov
cs
movups
aas
fdiv
aaa
popf
ja
sub
add
fistp
ins
(bad)
push
adc
ror
movs
and
dec
ins
sub
cmp
push
jb
aas
mov
loop
cmp
push
mov
rcr
dec
cs
jmp
loope
out
sub
adc
xor
aas
ret
shl
cmp
mov
loope
push
sub
add
outs
addr16
loope
stos
cmp
add
aas
jnp
dec
outs
push
cld
adc
sahf
ja
aas
jns
xor
cmp
sub
shl
mov
cmp
or
xor
pop
jecxz
xor
bound
fwait
xor
or
xor
cld
xchg
inc
sbb
fld
jecxz
mov
mov
fist
sbb
fsub
aas
ds
test
int
sub
iret
sbb
aas
test
push
mov
add
inc
iret
pop
arpl
aas
lods
retf
aad
sub
add
(bad)
call
test
xchg
test
ins
js
shr
in
and
xor
shl
es
sub
aas
leave
mov
push
add
sbb
xchg
ins
in
sahf
outs
shr
add
pop
push
stos
in
cli
arpl
jp
aad
add
and
sub
aas
mov
add
cmp
inc
cs
xor
xchg
push
repz
(bad)
dec
add
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
rcr
add
add
add
fstp
adc
(bad)
(bad)
(bad)
dec
(bad)
(bad)
dec
cmp
(bad)
jg
add
cmp
(bad)
jg
js
push
adc
pop
mov
pop
xor
pop
cmp
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
aas
add
add
add
lock
add
xor
add
add
add
inc
add
add
add
lock
add
add
add
jg
add
add
add
jg
add
add
add
jg
into
xchg
(bad)
adc
xor
or
xor
rcl
xchg
fadd
push
aas
neg
push
inc
xor
jp
mov
ins
jp
aas
add
in
test
jl
sbb
push
sub
add
fidiv
add
imul
add
xchg
aas
sbb
cld
cmp
ficomp
sahf
rcr
xor
neg
lods
mov
or
sbb
idiv
mov
icebp
bound
or
push
pop
cmps
aas
fist
sbb
mov
xchg
ror
push
shl
cmp
xor
lods
aas
pop
inc
fprem
fstp
cmp
adc
mov
jbe
scas
sub
pusha
icebp
in
pop
pushf
mov
aam
push
push
aas
loopne
cmp
sbb
mov
loop
cmp
daa
xchg
mov
rep
(bad)
int
les
cmp
jae
mov
lahf
jge
and
ret
pop
cmp
ja
mov
jp
mov
cmp
or
mov
int3
in
cmp
mov
mov
xor
icebp
ss
mov
mov
and
push
sub
es
sub
jmp
add
mov
repz
and
mov
lea
mov
add
cmp
fwait
ins
sar
cli
loope
lea
fisubr
lock
mov
cmp
aas
mov
xchg
icebp
sbb
add
(bad)
push
ret
ja
inc
or
sbb
test
or
add
pshufw
aas
jmp
mov
je
les
xor
mov
cmp
and
les
push
push
cs
jne
lds
sub
fbstp
cmp
sbb
lds
adc
sub
add
nop
push
mov
cdq
xchg
cld
sub
in
cmp
add
ins
pop
and
aas
int
inc
bound
push
sbb
xchg
mov
aas
lds
xchg
push
add
enter
xchg
add
push
or
int3
enter
iret
mov
add
out
fistp
aas
in
(bad)
jp
and
pop
jmp
repnz
push
xor
mov
sub
add
push
lds
stos
fs
imul
stc
jl
mov
aas
jb
js
and
xor
jecxz
int3
aas
jl
push
int
retf
xor
popf
xchg
int3
aas
jb
out
inc
mov
cmp
sti
adc
aas
or
sbb
pop
lahf
int
jae
xlat
mov
add
push
cmp
xchg
repnz
into
aas
xchg
adc
pop
pop
iret
aas
add
pop
cmp
sbb
idiv
and
pop
or
aas
jg
push
and
pop
cmp
or
(bad)
adc
cmp
xor
mov
cmp
jno
sar
xor
xor
add
sar
sbb
cmp
das
inc
sar
mov
xor
xchg
jp
aas
cdq
pop
sub
cmp
jp
sar
jle
jmp
iret
cmp
adc
fisttp
or
cs
daa
cmp
push
sar
stc
pop
movs
sub
jle
cmp
bound
aas
adc
or
sbb
inc
shl
aas
jns
sahf
lods
imul
or
aad
aas
mov
jmp
mov
sar
xor
mov
cdq
xchg
cmp
adc
pop
mov
pop
xor
pop
cmp
add
fstp
add
add
add
fstp
add
add
add
aas
add
add
add
aas
add
add
lock
add
lock
add
loopne
fidivr
add
add
loopne
fidivr
add
add
rcr
aas
add
add
rcr
aas
add
add
mov
add
add
add
add
add
add
add
add
fnstcw
add
add
push
add
aas
add
add
and
add
and
add
loopne
fdivr
add
add
loopne
fdivr
add
add
sub
xlat
aas
add
add
sub
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
pusha
scas
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
cwde
pop
xlat
aas
add
add
ror
xlat
aas
add
add
ror
xlat
aas
add
add
add
aas
add
add
add
aas
add
add
test
(bad)
aas
add
add
test
(bad)
aas
add
add
shl
(bad)
aas
add
add
shl
(bad)
aas
add
add
jo
aad
add
add
jo
aad
add
add
adc
add
adc
add
sub
aas
add
add
sub
aas
add
add
inc
and
aas
add
add
inc
and
aas
add
add
shl
aam
add
add
shl
aam
add
add
pusha
cmps
aam
add
add
pusha
cmps
aam
add
add
push
add
add
aam
add
add
clc
sub
aas
add
add
clc
sub
aas
add
add
js
sar
add
add
js
sar
add
add
cmp
add
add
add
adc
add
add
add
add
clc
dec
sar
add
add
clc
dec
sar
add
add
js
sar
add
add
js
sar
add
add
jo
sar
add
add
jo
sar
add
add
loopne
sar
add
add
loopne
sar
add
add
fdivr
aas
add
add
fdivr
aas
add
add
dec
dec
sar
add
add
dec
dec
sar
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
sar
add
add
jo
sar
add
add
pop
imul
add
sar
add
add
mov
add
add
add
add
add
add
add
add
jmp
add
add
sar
add
add
fadd
sar
add
add
fadd
sar
add
add
cmp
add
cmp
add
adc
aas
add
add
adc
aas
add
add
jo
sar
add
add
jo
sar
add
add
shl
aas
add
add
shl
aas
add
add
cwde
add
aas
add
add
cwde
add
aas
add
add
loopne
iret
aas
add
add
loopne
iret
aas
add
add
sub
add
add
sub
add
add
and
iret
aas
add
add
and
iret
aas
add
add
shl
aas
add
add
shl
aas
add
add
pusha
lahf
into
aas
add
add
pusha
lahf
into
aas
add
add
add
aas
add
add
add
aas
add
add
nop
sbb
aas
add
add
nop
sbb
aas
add
add
xor
int
add
add
xor
int
add
add
rcl
add
xchg
int
add
add
push
pop
int
add
add
push
pop
int
add
add
loopne
int
add
add
loopne
int
add
add
pusha
jecxz
aas
add
add
pusha
jecxz
aas
add
add
lock
int3
aas
add
add
lock
int3
aas
add
add
jo
int3
aas
add
add
jo
int3
aas
add
add
add
int3
aas
add
add
add
int3
aas
add
add
xor
aas
add
add
xor
aas
add
add
add
retf
aas
add
add
add
retf
aas
add
add
add
add
add
add
add
lock
add
add
add
inc
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
inc
add
add
add
inc
add
add
inc
add
add
add
cmp
add
add
add
cmp
add
add
add
cmp
sub
inc
adc
sub
adc
cli
inc
xchg
add
cli
inc
xchg
cmp
sahf
mov
cmp
sahf
mov
in
shl
pop
movs
push
push
push
lds
sub
es
push
movs
aas
jnp
(bad)
(bad)
(bad)
(bad)
fistp
dec
jne
push
mov
xor
sub
add
mul
push
ror
mov
add
popa
enter
mul
enter
inc
xchg
add
pop
cmps
call
pop
mov
add
pushf
das
jo
mov
shl
in
jecxz
add
mov
mov
rol
adc
add
lock
lds
call
bound
test
cmp
jb
add
mov
jmp
mov
cmp
imul
call
aam
add
outs
mov
mov
cmp
add
xchg
test
jecxz
mov
outs
jp
add
repnz
cwde
sub
cmp
jl
gs
imul
xor
cmp
pop
cmc
popf
sahf
add
mov
or
xor
cmp
add
cmps
test
add
mov
mov
jne
cmp
add
dec
clc
rcr
fisttp
mov
cmp
add
jge
int3
mov
mov
aaa
cmps
jno
add
shl
xor
cmps
add
ins
dec
sub
and
dec
cmps
fiadd
add
mov
mul
or
add
adc
cmp
mov
or
add
mov
cmp
cmp
mov
xchg
mov
jp
into
nop
jbe
daa
sub
aad
mov
sub
cmps
sub
jbe
stc
add
pop
out
shl
popf
push
sub
sbb
daa
mov
inc
outs
add
loop
arpl
fld
stos
add
sub
xor
outs
out
add
mov
cdq
test
mov
mov
and
add
fdiv
xchg
cdq
cmp
and
cmp
add
mov
cmp
cmp
sahf
mov
into
xchg
sbb
mov
push
add
and
call
cmps
cmps
pop
mov
popa
mov
push
jmp
pop
add
inc
mov
jae
mov
(bad)
stos
loope
gs
dec
iret
ss
add
addr16
mov
adc
dec
cdq
mov
enter
xchg
cmp
xchg
inc
fldcw
add
lea
mov
or
inc
pop
repz
xor
cmp
ja
cdq
scas
icebp
or
cmp
push
pushf
mov
(bad)
aaa
aaa
or
stos
(bad)
stc
and
call
ficomp
daa
into
xchg
sub
scas
jno
nop
lock
add
ins
fwait
cmp
in
jnp
or
add
daa
xchg
cmp
and
or
mov
jae
test
cmp
std
jns
imul
xchg
ja
mov
call
sub
cmp
adc
or
scas
add
mov
bnd
or
int
pop
or
push
ror
int3
or
mov
scas
xor
push
test
fwait
sbb
lods
pop
or
(bad)
loopne
cmp
rcl
icebp
addr16
push
imul
nop
out
fsub
mov
add
jo
cmp
mov
dec
sub
pop
cmp
cmp
movs
sti
fcomp
pop
or
aad
pop
mov
test
dec
sbb
mov
jnp
xchg
cld
or
pusha
add
je
idiv
mov
cs
push
add
dec
or
fst
push
add
and
cmp
pop
popa
out
sbb
push
add
test
xor
inc
outs
pop
jbe
ltr
mov
fcom
sldt
add
add
add
aas
add
add
add
adc
out
cmp
inc
xchg
add
mov
add
add
add
lock
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
add
add
cmp
add
cmp
fs
add
fs
add
outs
gs
popa
data16
jb
add
outs
bound
add
pop
jns
add
xor
pop
jns
add
jns
outs
je
add
popa
bound
add
popaw
bound
add
add
arpl
add
add
cs
add
add
bound
add
add
arpl
add
add
cs
add
popf
ja
and
add
add
add
mov
mov
cmc
scas
aas
sub
ss
out
addr16
cmp
add
mov
add
add
out
mov
push
xchg
pusha
je
pop
add
add
add
add
mov
cwde
mov
enter
popa
add
add
add
aas
add
add
out
(bad)
ret
aas
xchg
clc
cmp
add
les
add
add
mov
xor
fdiv
add
add
add
enter
add
nop
retf
aas
and
and
add
add
add
add
aas
add
add
jne
iret
aas
(bad)
fld
(bad)
or
add
add
add
aas
add
add
inc
retf
mov
add
add
add
sar
add
add
(bad)
imul
add
add
add
aas
add
add
jo
mov
aam
adc
add
add
aas
add
add
not
aas
inc
adc
push
add
add
add
fdivr
add
add
dec
mov
aas
jmp
mov
add
add
fidivr
add
add
out
fidivr
jge
mov
pop
popa
cs
add
add
fdivr
add
add
mov
fdivr
fs
clc
sahf
in
adc
add
add
add
fidivr
add
add
lods
fnstsw
leave
fisttp
add
add
add
loopne
add
add
fld
aas
shl
mov
add
add
add
loope
add
add
sub
sbb
add
add
add
loop
add
add
inc
or
add
add
add
jecxz
add
add
sbb
idiv
add
add
add
in
add
add
xchg
loop
mov
in
or
add
add
add
in
add
add
inc
jecxz
pushf
or
add
add
add
out
add
add
shl
mov
(bad)
adc
add
add
add
out
add
add
test
and
div
add
add
add
call
js
cmp
aas
imul
add
add
add
jmp
test
adc
rcr
cmp
add
add
add
jmp
ins
out
add
and
add
add
add
jmp
add
add
cmps
add
aas
pop
xchg
out
arpl
add
add
aas
add
add
test
in
shl
add
add
aas
add
add
mov
push
lods
cmp
add
add
add
out
aas
add
add
cmc
lahf
call
mov
add
add
add
out
aas
add
add
jmp
adc
add
add
add
add
lock
add
add
cmp
mov
fcomp
add
add
add
add
and
pop
cmp
sub
add
add
add
icebp
aas
add
add
mov
mov
add
add
add
add
dec
add
aas
xchg
jb
in
daa
or
add
add
add
repnz
add
add
mov
cmp
sbb
add
add
add
add
jo
jmp
cmp
and
add
add
add
repz
add
add
popa
push
call
add
add
xor
add
add
in
aas
daa
pop
sbb
jl
cmp
add
add
add
hlt
aas
add
add
push
in
aas
into
jge
fs
and
add
add
add
add
push
outs
in
aas
xlat
mov
dec
push
js
add
add
add
cmc
aas
add
add
retf
xor
sub
add
add
add
add
out
aas
or
das
mov
add
add
add
aas
add
add
jl
aas
xchg
cmc
js
jl
xor
add
add
add
add
out
aas
sbb
fstp
cmp
adc
add
add
add
idiv
add
add
and
aas
mov
lea
add
add
xor
add
add
or
aas
mov
fnstenv
add
add
clc
aas
add
add
shr
gs
cs
add
add
add
push
lock
mov
cmps
inc
add
add
add
stc
aas
add
add
sub
aas
jbe
pop
mov
add
add
add
add
dec
lock
push
inc
pop
mov
add
add
add
cli
aas
add
add
adc
aas
daa
pop
loope
ror
add
add
add
add
lock
fwait
lahf
es
sahf
ret
add
add
add
sti
aas
add
add
lock
mov
dec
jb
push
inc
add
add
add
add
shl
aas
frstor
das
movs
daa
call
add
add
cld
aas
add
add
movs
repnz
pop
pop
int
add
aas
add
add
add
add
jmp
icebp
aas
or
aam
jge
pop
add
add
add
std
aas
add
add
gs
aas
out
dec
sbb
inc
add
add
add
add
sbb
rcr
push
into
nop
aas
add
add
add
(bad)
aas
add
add
addr16
aas
xchg
mov
sub
add
add
cmp
add
add
xor
sbb
xchg
dec
add
add
add
(bad)
aas
add
add
cmc
pushf
icebp
aas
xor
dec
add
add
add
add
int
arpl
repnz
inc
add
add
add
add
add
sub
shl
aas
fst
js
out
add
add
add
inc
add
add
call
adc
add
add
add
add
add
sar
add
add
add
add
add
lock
repnz
lds
xchg
mov
(bad)
dec
add
add
add
add
add
and
das
repnz
push
inc
dec
test
add
add
add
inc
add
add
mov
repnz
mov
add
add
add
add
xchg
pop
repnz
mov
adc
sar
add
add
add
add
add
push
out
jo
aas
xchg
push
dec
mov
add
add
add
inc
add
add
test
aas
inc
ss
xor
add
add
inc
add
add
xor
and
add
add
add
and
repnz
jae
add
add
add
add
add
add
inc
mov
retf
or
fsub
add
add
add
add
add
sub
fdivr
scas
rol
add
add
add
inc
add
add
push
out
aas
ffreep
sub
add
add
add
add
mov
push
dec
add
add
add
add
add
js
or
aas
sub
mov
add
add
add
add
add
add
in
repz
xor
jmp
add
add
add
inc
add
add
(bad)
sub
sub
ret
add
add
add
add
ds
mov
cmc
stos
xor
add
add
add
add
add
add
fwait
xlat
or
dec
add
add
add
add
shr
pop
aam
or
add
add
add
inc
add
add
out
repz
in
sti
cmps
sbb
add
add
add
add
cwde
cmp
cmp
add
add
add
add
ins
push
repz
push
loop
pop
push
sub
add
add
add
push
inc
add
add
repz
mov
cmp
add
add
add
inc
add
add
retf
and
cmovb
add
add
add
add
repz
test
jmp
add
rol
add
add
(bad)
repz
fwait
sbb
es
add
add
pop
inc
add
add
xchg
aam
aas
push
clc
inc
add
add
add
inc
add
add
(bad)
jo
ins
add
add
add
add
add
outs
adc
add
add
add
pop
inc
add
add
cld
repz
pop
mov
dec
add
add
add
or
add
(bad)
lds
hlt
aas
sub
lds
add
add
add
inc
add
add
adc
ins
sar
add
add
add
add
jne
in
inc
jecxz
add
add
add
or
add
inc
jo
hlt
aas
mov
push
adc
stc
xor
add
add
add
or
add
movs
cmp
hlt
aas
mov
mov
add
add
add
inc
add
add
inc
hlt
aas
div
aaa
add
add
add
add
push
hlt
aas
or
inc
retf
add
add
add
or
add
adc
cmp
dec
add
add
add
or
add
ror
hlt
aas
sbb
cmp
add
add
add
inc
add
add
ret
xchg
sbb
add
add
add
add
jnp
aas
xor
mov
xor
add
add
add
or
add
dec
sbb
test
add
add
add
or
add
mov
hlt
aas
(bad)
shl
inc
add
add
add
inc
add
add
imul
xchg
shl
add
add
add
add
movs
hlt
aas
js
xor
fwait
jne
add
add
add
or
add
cld
adc
dec
sub
bound
add
add
add
or
add
add
movs
mov
aas
sbb
es
int
inc
add
add
add
inc
add
add
cdq
sar
jecxz
dec
add
add
add
add
pop
retf
dec
outs
mov
add
add
add
or
add
add
js
hlt
aas
sub
cdq
cmp
add
add
add
or
mov
ss
dec
inc
sbb
cmp
add
add
add
inc
add
add
dec
in
aas
mov
dec
add
add
add
add
hlt
aas
adc
adc
add
ror
(bad)
div
aas
ds
es
add
add
add
push
inc
add
add
or
add
add
add
inc
add
add
dec
pop
cmc
aas
adc
push
push
or
add
add
add
add
pmaddwd
mov
movs
dec
add
add
add
push
inc
add
add
test
cmc
aas
xchg
mov
add
add
add
cmovo
add
pushf
jae
cmc
aas
add
xchg
dec
sti
push
dec
add
add
add
inc
add
add
inc
daa
cmc
aas
into
scas
mov
add
add
add
add
imul
cmc
aas
cmp
and
add
add
ror
add
add
movs
leave
iret
jmp
add
add
adc
add
or
ds
aas
xor
xchg
dec
arpl
add
add
add
adc
add
shl
aas
adc
xchg
add
add
add
inc
add
add
cmc
aas
add
dec
add
add
add
inc
add
add
push
cmc
aas
test
or
add
add
add
add
fcomp
aas
or
and
add
add
mov
add
sbb
aaa
add
add
add
adc
add
sub
cmp
add
add
add
adc
add
xor
cmc
aas
xchg
dec
adc
xor
add
add
add
inc
add
add
jbe
aas
push
mov
cs
and
add
add
add
adc
add
in
jl
aas
call
add
add
add
inc
add
add
in
and
mov
add
add
pusha
adc
add
xchg
nop
mov
aas
outs
sbb
add
add
add
add
neg
sub
add
add
add
add
sbb
mov
add
add
add
adc
add
add
pushf
cmc
aas
push
push
stos
js
jg
add
add
add
adc
add
push
push
mov
mov
mov
add
add
add
adc
add
xor
test
aas
push
(bad)
pop
and
mov
add
add
adc
add
adc
cmc
aas
lods
in
cmp
mov
add
add
add
inc
add
add
cmc
aas
jno
mov
or
add
add
add
inc
add
add
mov
and
xlat
shl
add
add
adc
add
add
cmc
aas
or
mov
add
add
add
add
adc
cmc
aas
or
shr
pop
cmp
add
add
add
adc
add
inc
pushf
retf
scas
mov
cli
cmp
add
adc
add
les
shl
aas
xchg
or
(bad)
cmp
add
adc
add
mov
stos
cld
xchg
(bad)
test
add
add
adc
add
test
(bad)
aas
mov
cs
xor
add
add
add
inc
add
add
loopne
aas
loop
jne
jl
cmp
add
add
add
inc
add
add
inc
sbb
cmp
add
add
add
add
push
lods
xor
std
mov
add
add
add
jnp
cmc
aas
sub
outs
inc
add
add
add
adc
add
and
hlt
cmc
aas
js
xchg
clc
adc
add
add
add
adc
add
adc
stc
cmc
aas
retf
aad
ins
test
add
add
add
adc
add
add
push
(bad)
cmc
aas
xchg
lock
cmp
add
add
adc
add
add
sub
scas
ficomp
cmp
add
inc
adc
add
add
cmc
pop
idiv
add
cmp
add
add
inc
add
add
lods
or
aas
sbb
push
and
add
add
add
add
mov
inc
ds
add
add
add
cmc
and
pusha
(bad)
dec
add
add
add
adc
add
add
test
idiv
cdq
jge
adc
xor
add
add
add
adc
add
add
push
pop
idiv
scas
xor
add
add
add
adc
je
and
aas
jmp
inc
add
add
add
adc
xor
daa
idiv
mov
and
and
add
add
add
inc
add
add
sub
aas
xchg
in
fiadd
add
add
add
inc
add
add
mov
cmovne
add
add
add
add
into
xor
aas
out
popa
repz
add
add
mov
add
add
idiv
stc
lea
mov
inc
add
add
add
adc
in
cmp
dec
inc
push
cmp
add
adc
inc
dec
inc
idiv
int
add
neg
add
add
push
inc
add
add
pusha
inc
idiv
popa
jo
dec
xor
add
add
push
inc
add
add
movs
cdq
cmp
add
add
add
inc
add
add
arpl
aas
movs
repnz
add
add
add
inc
add
add
push
idiv
dec
jns
ficomp
add
add
adc
add
add
cmp
aas
jbe
addr16
das
add
add
add
add
push
fimul
add
add
rcl
add
add
jmp
out
jecxz
jns
add
add
add
push
inc
add
add
pusha
idiv
inc
and
sbb
add
add
add
pop
inc
add
add
sti
out
movs
sahf
dec
add
add
add
pop
inc
add
add
and
aas
shl
shl
dec
add
add
add
inc
add
add
leave
imul
imul
sbb
jge
add
add
add
inc
add
add
mov
mov
add
add
add
add
cwde
fwait
clc
add
dec
add
add
add
add
mov
aas
sub
dec
add
add
add
pop
inc
add
add
jp
aas
jmp
icebp
inc
daa
cmp
add
add
pop
inc
add
add
jge
aas
pop
or
in
in
add
add
add
sbb
add
mov
xor
xor
dec
add
add
add
sbb
add
fsub
idiv
push
loop
adc
add
add
add
inc
add
add
idiv
push
dec
push
or
add
add
pusha
sbb
add
js
mov
aas
(bad)
push
xor
jmp
add
add
add
mov
aas
in
sub
add
add
add
add
idiv
jno
enter
dec
add
add
add
sbb
add
dec
jmp
idiv
enter
cmp
add
add
add
sbb
add
cmp
cwde
idiv
(bad)
mov
add
add
add
inc
add
add
fwait
idiv
retf
and
mov
add
add
add
sbb
add
inc
jne
idiv
out
xchg
repnz
add
add
inc
add
add
xchg
mov
add
add
add
inc
add
add
movs
idiv
pop
mov
add
add
add
add
test
xor
jge
add
add
add
add
stos
idiv
xchg
or
cmp
add
add
add
sbb
add
mov
lods
idiv
ins
or
push
pop
add
add
add
add
sbb
add
call
cli
test
shl
pusha
or
add
add
add
sbb
add
add
fs
idiv
add
add
add
sbb
add
adc
mov
aas
loope
push
jbe
inc
inc
add
add
add
inc
add
add
mov
enter
dec
add
add
add
inc
add
add
jge
adc
mov
add
add
add
mov
jbe
sti
loop
add
add
add
add
ret
int3
scas
sub
add
add
add
sbb
add
mov
(bad)
idiv
xchg
sti
call
xor
add
add
add
sbb
add
jl
(bad)
idiv
pop
jae
stos
mov
inc
add
add
add
sbb
add
adc
idiv
stos
fs
xchg
push
sbb
add
add
add
sbb
add
push
dec
idiv
mov
dec
dec
add
add
add
inc
add
add
iret
idiv
imul
(bad)
xor
add
add
add
inc
add
add
shl
aas
mov
retf
add
add
add
add
aam
aas
push
mov
mov
add
add
add
add
fwait
xlat
idiv
(bad)
(bad)
jmp
add
add
add
sbb
add
cmp
(bad)
aas
mov
mov
add
add
sbb
add
js
fdiv
aas
aaa
outs
lods
in
stos
dec
add
add
add
sbb
add
add
push
fcomip
aas
cmps
dec
arpl
pop
test
add
add
add
sbb
add
add
fsub
idiv
sti
jp
xchg
inc
add
add
inc
sbb
add
add
in
aas
and
icebp
inc
arpl
add
add
add
inc
add
add
aad
idiv
xlat
push
fisub
call
add
add
dec
jmp
hlt
add
add
add
add
add
xlat
ins
and
hlt
cmp
add
sbb
add
add
sbb
and
add
add
add
sbb
add
add
lock
pop
dec
add
add
add
sbb
cmp
repnz
add
sahf
dec
cli
test
add
add
add
sbb
dec
dec
cmc
idiv
call
add
add
add
inc
add
add
idiv
mov
sub
add
add
add
inc
add
add
idiv
cmp
idiv
std
xor
add
add
add
add
pop
jnp
jg
inc
add
add
add
add
mov
idiv
cli
inc
pop
retf
xchg
jg
add
add
add
sbb
inc
into
add
aas
push
xchg
nop
xor
add
add
add
sbb
clc
or
idiv
ja
xor
sbb
xor
add
add
add
push
inc
add
add
inc
add
dec
call
add
add
push
inc
add
add
pop
idiv
dec
pop
lods
das
add
add
add
inc
add
add
adc
add
add
add
inc
add
add
mov
pusha
xchg
add
add
add
add
idiv
call
add
add
add
add
and
idiv
ins
add
add
add
add
push
inc
add
add
inc
adc
aas
jle
sub
mov
add
add
add
push
inc
add
add
push
dec
rcl
add
add
add
pop
inc
add
add
jnp
mov
inc
add
add
add
pop
inc
add
add
idiv
jecxz
xor
ror
and
add
add
add
inc
add
add
test
xor
dec
or
add
add
add
inc
add
add
pop
inc
ficom
add
add
add
add
(bad)
addr16
shr
add
add
add
add
xor
sub
add
add
add
pop
inc
add
add
push
pusha
inc
xor
add
add
add
pop
inc
add
add
cmp
retf
inc
add
add
add
and
sub
stc
aas
pop
pop
adc
cmps
xchg
cmp
jns
je
ins
push
outs
outs
je
add
and
mov
mov
add
mov
repnz
retf
rcl
mov
add
dec
mov
les
or
scas
int
adc
leave
loop
popa
stc
push
mov
xor
adc
xlat
add
xor
rcl
mov
add
dec
fld
sbb
add
add
add
sbb
add
jmp
add
push
push
inc
push
cmp
repnz
mov
inc
div
mov
add
add
cmp
imul
outs
jb
sub
xor
outs
jae
popa
ins
ins
gs
ja
outs
outs
ja
pop
bound
ins
fs
jb
ins
gs
jae
pop
popa
jo
jae
bound
je
je
popa
jo
gs
jo
bound
add
icebp
dec
add
add
add
add
add
dec
add
add
add
add
icebp
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
mov
dec
add
(bad)
(bad)
inc
add
add
add
cwde
mov
add
add
add
add
add
test
dec
add
add
icebp
dec
add
mov
add
add
add
add
add
aam
dec
add
mov
add
cld
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
repnz
add
add
add
add
add
add
sbb
dec
add
mov
dec
add
add
add
repnz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
pusha
mov
add
add
add
add
add
jo
dec
add
add
mov
add
add
add
add
add
pushf
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
and
dec
add
mov
add
add
add
add
add
call
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fdivr
add
pop
repz
add
dec
add
add
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
repz
add
dec
add
add
add
mov
dec
add
add
add
repz
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
hlt
dec
add
add
add
add
add
add
int3
mov
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
mov
add
add
add
add
add
sbb
dec
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
or
add
pusha
hlt
dec
add
dec
add
add
add
dec
add
add
mov
add
pusha
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
mov
add
mov
dec
add
add
add
add
add
add
lods
mov
dec
add
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
mov
add
mov
mov
add
add
add
add
add
clc
mov
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
add
add
hlt
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
hlt
dec
add
add
add
add
add
add
xchg
ror
ror
ror
add
add
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
icebp
dec
add
(bad)
(bad)
inc
add
add
add
les
add
hlt
dec
add
ror
add
add
add
add
add
add
ror
ror
mov
add
cld
hlt
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
ror
add
add
dec
add
add
add
dec
add
add
mov
add
adc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
ror
ror
mov
add
push
cmc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
ror
add
add
add
add
add
add
ror
ror
add
add
add
(bad)
(bad)
inc
add
add
add
rol
dec
add
test
dec
add
add
add
ret
cmp
dec
add
dec
add
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
dec
add
test
dec
add
add
add
dec
add
add
add
test
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
dec
add
add
add
ret
int3
ret
inc
mov
add
mov
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
ret
add
add
or
dec
add
dec
add
ret
inc
mov
add
test
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
ret
xor
dec
add
add
add
pop
ret
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
ret
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
ret
dec
add
ret
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
add
add
ret
dec
add
ret
dec
add
add
dec
add
add
and
dec
add
les
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
add
js
dec
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
pop
dec
add
add
add
add
add
add
int3
les
fadd
dec
add
ret
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
add
add
dec
add
add
add
add
add
add
sbb
dec
add
lds
inc
lds
add
add
pop
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
add
add
jo
dec
add
add
dec
add
add
add
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
pop
dec
add
lds
add
add
in
lds
clc
lds
inc
mov
add
lock
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fadd
dec
add
dec
add
(bad)
dec
add
add
add
(bad)
dec
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
(bad)
dec
add
add
add
add
add
add
add
add
add
(bad)
dec
add
(bad)
dec
add
ret
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
(bad)
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
(bad)
dec
add
dec
add
add
add
dec
add
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
(bad)
dec
add
or
loopne
dec
add
add
add
(bad)
dec
add
(bad)
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
xor
dec
add
add
add
add
enter
add
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
enter
add
add
or
lods
enter
add
add
add
add
add
mov
enter
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lods
enter
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
leave
dec
add
enter
leave
dec
add
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
leave
dec
add
add
add
add
leave
dec
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
je
dec
add
leave
dec
add
add
ror
dec
add
leave
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
dec
add
add
and
dec
add
retf
mov
dec
add
ret
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
or
push
add
add
add
add
add
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
or
mov
dec
add
add
add
retf
aam
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
dec
add
or
add
dec
add
add
add
dec
add
dec
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
or
push
retf
dec
add
add
add
add
add
dec
add
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
retf
dec
add
or
movs
retf
dec
add
add
add
dec
add
ret
inc
mov
add
and
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
retf
dec
add
dec
add
retf
dec
add
add
add
dec
add
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
hlt
retf
dec
add
dec
add
dec
add
add
add
dec
add
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
int3
dec
add
dec
add
add
add
add
add
add
pushf
int3
dec
add
enter
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
int3
dec
add
add
add
int3
dec
add
int3
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
fmul
dec
add
int
add
add
add
dec
add
enter
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
or
jo
dec
add
add
add
int
add
dec
add
enter
add
add
or
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
or
add
int
add
add
add
int
add
int
add
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
ror
add
or
add
into
dec
add
add
add
into
dec
add
into
dec
add
int3
dec
add
enter
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
dec
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
dec
add
add
dec
add
add
add
add
add
add
movs
into
dec
add
lds
add
add
pusha
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
into
dec
add
add
add
add
add
into
dec
add
iret
dec
add
dec
add
dec
add
add
iret
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
into
dec
add
add
(bad)
(bad)
inc
add
add
add
pusha
lds
lock
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
iret
dec
add
add
add
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
add
add
iret
dec
add
add
add
add
or
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
iret
dec
add
or
or
dec
add
or
add
add
ror
add
add
dec
ror
pusha
ror
jl
dec
add
leave
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cwde
ror
add
add
test
dec
add
add
leave
dec
add
add
or
dec
add
add
add
ror
in
ror
or
dec
add
add
add
add
or
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
or
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
ror
inc
mov
add
sub
dec
add
add
add
ror
js
dec
add
ror
or
dec
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
ins
push
dec
add
add
add
add
add
add
add
ror
sub
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
ror
add
add
or
dec
add
dec
add
ror
je
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
clc
ror
les
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
ror
add
add
ror
cmp
dec
add
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
nop
ror
add
add
mov
ror
dec
into
dec
add
cmovge
rcl
add
ror
call
ror
inc
ror
adc
add
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcl
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
add
xor
dec
add
dec
add
add
into
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
ror
add
add
jo
dec
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
add
add
lods
ror
adc
add
add
ror
add
add
(bad)
dec
add
ror
add
add
nop
cmovge
(bad)
(bad)
(bad)
inc
add
add
add
int3
ror
add
add
adc
dec
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
add
cmovge
dec
aam
add
add
add
add
add
into
dec
add
add
add
cmovge
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
dec
aam
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
aam
add
add
add
dec
add
add
dec
add
aam
add
add
add
aam
add
aam
add
aad
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pop
aad
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
add
aad
add
into
dec
add
aad
add
add
add
aad
add
dec
add
(bad)
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
in
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
(bad)
dec
add
add
adc
ins
(bad)
dec
add
add
add
add
dec
add
add
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
(bad)
dec
add
dec
add
add
add
add
add
add
int3
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
dec
add
(bad)
dec
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
inc
xlat
dec
add
dec
add
add
add
dec
add
xlat
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
xchg
xlat
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
in
xlat
dec
add
add
add
xlat
dec
add
xlat
dec
add
add
dec
add
dec
add
add
add
dec
add
dec
add
add
fmul
adc
add
add
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
sbb
dec
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sbb
add
fmul
fmul
test
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
fmul
add
add
aam
dec
add
fmul
adc
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
dec
add
add
add
dec
add
fmul
adc
add
add
(bad)
add
add
dec
(bad)
pop
(bad)
sub
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
(bad)
add
add
cwde
(bad)
test
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
mov
dec
add
add
(bad)
add
add
call
(bad)
add
add
ins
adc
(bad)
(bad)
(bad)
inc
add
add
add
fcomp
dec
add
dec
add
add
add
fimul
cmp
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
dec
add
leave
dec
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
adc
mov
add
add
add
add
add
add
fimul
aam
dec
add
fimul
add
add
enter
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
mov
adc
(bad)
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
dec
add
fimul
cld
adc
cmp
dec
add
add
add
dec
add
add
enter
add
add
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
cmp
dec
add
add
add
add
add
fisttp
mov
aad
add
fisttp
adc
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
fisttp
mov
aad
add
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
push
adc
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
dec
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
push
add
add
fmul
add
add
add
add
or
add
movs
fmul
fcomp
dec
add
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
xchg
fmul
fcom
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
fisttp
hlt
fmul
push
fisttp
fcomp
dec
add
dec
add
fisttp
adc
dec
add
add
fisttp
adc
dec
add
add
add
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
add
add
jl
dec
add
fisttp
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
ins
fisttp
inc
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
fisttp
movs
fisttp
add
add
inc
adc
add
adc
add
(bad)
(bad)
(bad)
inc
add
add
add
rcr
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pushf
ror
dec
or
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
mov
fmul
add
add
adc
add
add
add
mov
fmul
in
dec
add
dec
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
fimul
loopne
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
or
dec
add
dec
add
adc
dec
add
add
add
dec
add
dec
add
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
and
dec
add
adc
dec
add
add
sbb
add
dec
add
fisttp
dec
into
dec
add
add
add
adc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
jo
dec
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
int3
fisttp
add
add
(bad)
dec
add
fisttp
dec
into
dec
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
or
dec
add
add
add
loopne
add
fisttp
dec
into
dec
add
dec
add
loopne
add
add
add
dec
add
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cmp
dec
add
dec
add
add
add
add
add
add
xchg
loopne
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
test
dec
add
dec
add
loopne
add
add
add
loopne
add
loope
add
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
call
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
loope
add
add
add
dec
add
dec
add
add
push
dec
add
dec
add
add
add
loope
add
add
add
add
push
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
(bad)
add
add
aam
dec
add
fimul
sub
dec
add
add
dec
add
loope
add
add
add
dec
add
dec
add
leave
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
cld
loope
add
add
add
add
add
add
add
into
dec
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
dec
loop
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
movs
loop
add
add
add
dec
add
add
dec
add
loope
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
lock
add
jecxz
add
loop
add
fimul
sub
dec
add
add
pop
dec
add
dec
add
add
add
dec
add
dec
add
enter
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
sub
dec
add
pop
dec
add
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
add
add
pop
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
js
dec
add
dec
add
add
add
(bad)
(bad)
inc
add
add
add
loopne
dec
add
add
add
jecxz
add
jecxz
add
loop
add
fimul
sub
dec
add
add
dec
add
in
add
add
add
in
add
in
add
add
add
dec
add
(bad)
(bad)
inc
add
add
add
and
dec
add
icebp
dec
add
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jl
dec
add
dec
add
add
add
in
add
in
add
mov
add
pushf
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
enter
add
dec
add
add
add
add
add
add
and
dec
add
in
add
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
dec
add
add
add
add
add
add
add
dec
add
dec
add
fimul
sub
dec
add
add
dec
add
add
dec
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
pusha
in
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
aam
dec
add
add
add
add
add
add
add
in
add
loope
add
leave
dec
add
add
dec
add
add
dec
add
add
add
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
add
add
cmp
dec
add
add
dec
add
dec
add
add
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
sub
dec
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
add
add
add
add
add
add
dec
add
dec
add
add
add
cmp
add
add
add
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
out
add
out
add
add
add
cmp
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
je
add
(bad)
(bad)
(bad)
inc
add
add
add
test
dec
add
cmp
add
add
js
add
(bad)
(bad)
(bad)
inc
add
add
add
shl
add
cmp
add
add
jns
add
(bad)
(bad)
(bad)
inc
add
add
add
adc
dec
add
add
add
add
add
add
add
dec
add
dec
add
out
add
add
add
out
add
out
add
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
shl
add
dec
add
call
add
add
add
add
add
xor
dec
add
dec
add
into
dec
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
call
add
add
add
add
add
sub
add
aad
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
jo
dec
add
cmp
add
call
add
add
add
push
add
add
call
dec
add
dec
add
leave
dec
add
add
jmp
dec
add
add
add
cmp
add
add
add
(bad)
(bad)
inc
add
add
add
shr
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
add
add
dec
add
dec
add
add
add
add
cmp
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
and
dec
add
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
push
add
add
add
add
add
add
cmp
add
call
add
js
dec
add
in
add
add
add
add
add
add
dec
add
in
add
add
jg
add
and
add
adc
add
nop
inc
add
add
pop
or
fist
or
sti
pop
or
sbb
or
cmp
or
pop
sbb
add
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
js
or
cwde
sbb
add
sbb
add
sbb
add
sbb
add
sbb
add
or
mov
or
mov
sbb
add
or
sbb
add
sbb
add
sbb
add
or
dec
sbb
add
or
mov
or
fcomp
add
sbb
or
pop
sbb
or
cwde
sbb
or
fcomp
or
test
or
scas
push
or
ficomp
or
xor
or
test
or
loope
or
sub
or
fldenv
or
clc
and
add
and
add
or
jnp
or
cwde
and
add
and
add
and
add
and
add
or
mov
or
int3
and
add
and
add
or
test
or
shl
or
repz
add
and
add
and
add
or
mov
and
add
and
or
pop
or
push
or
jae
or
mov
or
mov
or
(bad)
or
stc
or
sub
or
pop
daa
or
mov
or
test
or
call
sub
add
or
cwde
sub
add
sub
add
sub
add
sub
add
sub
add
or
xchg
sub
add
sub
add
sub
add
or
push
sub
add
sub
add
sub
add
sub
add
or
mov
sub
add
or
sub
test
sub
add
sub
add
sub
or
fsubr
or
dec
or
push
or
fld
or
or
or
cmp
or
pop
das
or
mov
das
or
fsubr
or
and
or
popa
xor
add
xor
add
xor
add
xor
add
or
mov
or
mov
xor
add
xor
add
or
js
or
cwde
xor
add
or
and
add
cmp
add
cmp
add
cmp
add
cmp
add
or
icebp
cmp
add
cmp
add
or
jnp
or
stos
cmp
add
cmp
add
cmp
or
mov
aas
or
xor
add
or
jns
or
fwait
inc
or
mov
inc
or
sti
inc
or
and
add
or
leave
inc
or
cmp
mov
inc
or
sub
add
or
mov
inc
or
add
add
or
imul
add
inc
or
call
dec
or
sub
add
or
push
dec
or
mov
dec
or
fisttp
add
dec
or
sbb
add
dec
or
pop
dec
or
xchg
dec
or
test
or
fisttp
add
dec
or
cmp
add
or
jle
or
cwde
dec
or
ds
or
pop
dec
or
mov
add
add
dec
or
mov
dec
or
clc
dec
or
cmp
add
or
fmul
add
or
mov
dec
or
inc
dec
or
clc
dec
or
mov
add
push
or
rcl
add
or
clc
push
or
call
push
or
pop
push
or
test
push
or
rcl
add
push
or
and
add
or
jo
or
nop
push
or
loope
or
clc
push
or
sbb
add
or
js
or
test
or
mov
pop
or
push
pop
or
xor
add
or
jo
or
cwde
pop
or
rcr
add
pop
or
adc
xor
push
pop
or
cdq
pop
or
mov
pop
or
xor
add
or
enter
lock
or
and
add
pusha
or
push
pusha
or
mov
add
pusha
or
push
popa
or
sub
add
or
xchg
popa
or
lock
or
enter
nop
arpl
add
or
inc
or
jo
or
mov
or
nop
or
loopne
or
adc
add
or
and
mov
or
pop
or
clc
or
cwde
push
or
call
push
add
ins
or
pop
ins
or
call
ins
or
shr
add
add
outs
or
loopne
or
or
add
outs
or
cwde
outs
or
shr
clc
outs
or
js
or
test
or
repz
add
or
sbb
lds
fdiv
cld
je
add
jne
add
or
xchg
jne
add
jne
add
jbe
add
or
jg
or
stos
jbe
add
jbe
add
ja
add
or
push
ja
add
or
pushf
ja
add
ja
add
ja
add
js
add
or
imul
add
js
add
jns
add
or
xchg
jns
add
jns
add
jns
add
jp
add
jp
add
or
sahf
jp
add
jp
add
jp
add
jnp
add
or
inc
jnp
add
or
fwait
jnp
add
jl
add
jl
add
or
xchg
jl
add
jl
add
jl
add
jge
add
or
pushf
jge
add
jge
add
jle
add
add
or
call
add
jle
add
jle
add
jg
add
jg
add
or
mov
add
jg
add
or
cmp
or
outs
or
mov
or
rol
add
or
sbb
or
pop
or
add
or
add
or
xor
or
xchg
or
int
or
lock
adc
or
pop
or
jl
or
lahf
or
ret
add
or
or
add
or
jno
or
xchg
test
add
test
add
test
add
test
add
or
jbe
or
movs
test
add
test
add
xchg
add
xchg
add
or
add
add
or
mov
or
iret
xchg
add
xchg
add
mov
add
or
jle
or
mov
mov
add
mov
add
mov
add
mov
add
or
xchg
mov
add
mov
add
mov
add
mov
add
or
push
mov
add
mov
add
mov
add
mov
add
mov
add
or
or
add
mov
add
mov
add
or
daa
mov
add
or
jb
or
xchg
mov
add
mov
add
mov
add
lea
add
lea
add
or
mov
lea
add
lea
add
mov
add
or
push
mov
add
or
mov
(bad)
(bad)
(bad)
vprotb
or
into
(bad)
(bad)
nop
or
bound
or
test
or
retf
nop
or
out
nop
or
adc
or
jne
or
call
add
xchg
or
or
xchg
or
push
xchg
or
jns
or
pushf
xchg
or
rcl
or
pop
xchg
or
sub
or
jo
or
adc
add
xchg
or
icebp
xchg
or
add
add
or
xchg
xchg
or
test
or
retf
xchg
or
icebp
xchg
or
adc
or
push
xchg
or
jnp
or
mov
xchg
or
clc
xchg
or
xor
or
js
or
inc
xchg
or
js
or
adc
or
dec
cwde
or
inc
cdq
or
nop
cdq
or
push
call
or
add
or
cwde
pushf
or
adc
or
mov
popf
or
lock
or
and
or
pusha
sahf
or
mov
sahf
or
push
lahf
or
and
or
mov
lahf
or
lock
or
or
or
dec
mov
or
mov
mov
or
push
mov
or
and
add
mov
or
xor
add
movs
or
and
or
and
add
movs
or
loopne
or
sti
movs
or
and
or
push
cmps
or
enter
add
or
js
or
cmps
cmps
or
shl
add
test
add
or
xchg
test
add
test
add
test
or
push
test
or
mov
test
or
pop
stos
or
mov
or
in
or
pop
stos
or
sub
or
jo
or
fwait
stos
or
mov
stos
or
add
or
push
lods
or
cmps
lods
or
(bad)
(bad)
(bad)
push
dec
add
add
add
mov
add
add
(bad)
(bad)
call
add
add
in
dec
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
push
add
add
inc
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
hlt
hlt
dec
add
(bad)
(bad)
inc
add
add
add
add
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
sbb
dec
add
add
add
add
inc
adc
add
add
fs
dec
add
add
add
dec
add
add
(bad)
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
xor
inc
add
add
add
icebp
dec
add
add
add
(bad)
(bad)
inc
add
add
add
and
inc
add
(bad)
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
add
dec
add
(bad)
(bad)
push
add
add
sub
dec
add
add
add
and
(bad)
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
dec
add
(bad)
(bad)
jmp
sbb
and
add
in
dec
add
(bad)
(bad)
inc
sbb
and
add
adc
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
and
add
cmp
dec
add
(bad)
(bad)
call
dec
add
add
add
js
dec
add
(bad)
(bad)
push
dec
add
add
add
movs
test
(bad)
(bad)
(bad)
call
add
add
shl
dec
add
(bad)
(bad)
push
add
add
cld
test
(bad)
(bad)
(bad)
call
sbb
and
add
sub
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
(bad)
(bad)
clc
sbb
and
add
push
clc
dec
add
(bad)
(bad)
call
sbb
and
add
mov
dec
add
(bad)
(bad)
push
sbb
and
add
mov
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
loopne
dec
add
(bad)
(bad)
push
dec
add
add
add
adc
dec
add
(bad)
(bad)
jmp
add
add
inc
stc
dec
add
add
add
nop
stc
dec
add
(bad)
(bad)
call
sbb
(bad)
(bad)
(bad)
(bad)
fcomp
dec
add
add
add
sbb
add
add
jmp
dec
add
add
add
sbb
add
add
(bad)
sbb
and
add
in
dec
add
(bad)
(bad)
jmp
sbb
add
add
sub
dec
add
add
add
sbb
add
add
inc
sbb
add
add
dec
sbb
(bad)
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
adc
dec
add
(bad)
(bad)
call
add
add
add
add
dec
cli
dec
add
(bad)
(bad)
push
add
add
jl
dec
add
(bad)
(bad)
call
sbb
and
add
test
dec
add
add
add
clc
cli
dec
add
(bad)
(bad)
push
sbb
add
add
clc
sbb
add
add
add
add
add
add
sbb
add
add
add
sbb
add
(bad)
(bad)
push
sbb
add
add
add
sbb
add
add
add
dec
add
add
add
and
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
pop
sti
dec
add
add
add
mov
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
inc
sbb
add
(bad)
(bad)
dec
sbb
add
(bad)
(bad)
call
sbb
add
add
add
in
dec
add
(bad)
(bad)
push
sbb
add
(bad)
(bad)
(bad)
clc
sbb
add
add
add
and
dec
add
add
add
js
dec
add
(bad)
(bad)
call
sbb
(bad)
call
sbb
add
and
add
sub
add
xor
(bad)
(bad)
cmp
(bad)
call
dec
add
add
add
test
dec
add
(bad)
(bad)
push
dec
add
add
add
dec
add
add
add
aam
dec
add
(bad)
(bad)
call
add
add
or
dec
add
(bad)
(bad)
push
add
add
xor
dec
add
(bad)
(bad)
call
sbb
xchg
sbb
add
add
dec
add
add
add
mov
dec
add
(bad)
(bad)
push
sbb
(bad)
(bad)
sti
sbb
add
add
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
push
dec
add
add
add
or
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
(bad)
jns
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
inc
dec
(bad)
(bad)
(bad)
inc
push
dec
add
add
add
push
dec
add
add
add
push
dec
add
add
add
cmp
add
add
add
loopne
dec
add
(bad)
(bad)
push
push
dec
add
add
add
push
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
add
add
pop
dec
add
pop
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cwde
dec
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
pop
dec
add
pop
dec
add
pop
dec
add
add
add
add
dec
add
(bad)
(bad)
push
pop
dec
add
add
add
pop
dec
add
add
add
and
add
add
push
and
add
add
sbb
dec
add
add
add
and
and
add
pop
add
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
(bad)
(bad)
(bad)
dec
and
(bad)
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
push
and
and
add
loopne
dec
add
(bad)
(bad)
call
and
(bad)
(bad)
(bad)
call
and
and
add
or
dec
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
inc
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
add
add
(bad)
(bad)
push
add
add
add
add
in
dec
add
(bad)
(bad)
call
and
add
add
(bad)
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
and
add
add
sti
and
and
add
dec
add
add
add
add
add
movs
add
add
add
(bad)
(bad)
jmp
and
add
add
adc
dec
add
add
add
and
add
add
and
dec
add
add
add
dec
add
add
add
dec
add
add
add
daa
inc
add
add
add
add
add
add
add
add
add
cmc
dec
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
dec
add
(bad)
(bad)
jmp
and
(bad)
(bad)
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
push
and
(bad)
(bad)
(bad)
inc
and
(bad)
(bad)
(bad)
dec
dec
add
add
add
add
add
(bad)
(bad)
push
and
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
jmp
dec
add
add
add
pop
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
call
add
add
add
add
cmp
add
add
enter
(bad)
(bad)
(bad)
inc
and
add
add
enter
and
add
xchg
add
add
add
add
add
add
add
add
add
shl
add
add
add
(bad)
(bad)
inc
add
add
add
add
push
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
jmp
and
add
add
call
add
add
adc
add
(bad)
(bad)
(bad)
inc
and
add
add
add
inc
add
add
(bad)
(bad)
(bad)
jmp
and
add
add
add
and
add
add
add
jo
dec
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
movs
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
fadd
add
and
add
cmp
dec
add
(bad)
(bad)
push
add
add
add
add
and
add
(bad)
(bad)
dec
and
add
(bad)
(bad)
call
and
add
(bad)
(bad)
push
and
add
add
add
and
xchg
sbb
add
add
dec
add
(bad)
(bad)
jmp
and
add
sub
add
xor
add
ds
xchg
sbb
add
xchg
push
dec
add
add
add
add
add
add
add
pop
dec
add
add
add
inc
pop
dec
add
add
add
push
dec
add
add
add
cmc
dec
add
(bad)
(bad)
jmp
inc
add
add
add
icebp
dec
add
add
add
inc
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
into
and
add
(bad)
and
add
add
add
adc
add
loope
dec
add
add
add
and
add
add
add
adc
add
jmp
add
pop
es
add
add
add
and
(bad)
dec
es
add
(bad)
(bad)
call
es
add
(bad)
(bad)
push
es
add
add
add
dec
add
add
add
or
dec
add
(bad)
(bad)
jmp
dec
add
add
add
cmp
dec
add
(bad)
(bad)
inc
add
add
push
add
add
(bad)
(bad)
jmp
add
add
add
add
xchg
or
add
add
(bad)
(bad)
inc
es
add
add
add
es
add
add
add
enter
(bad)
(bad)
(bad)
jmp
es
add
add
add
cld
or
add
add
(bad)
(bad)
call
daa
dec
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
push
or
add
add
(bad)
(bad)
push
dec
add
add
add
or
add
(bad)
(bad)
jmp
add
add
lods
or
add
add
add
add
cld
or
add
add
(bad)
(bad)
inc
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
daa
dec
add
add
add
dec
or
add
add
(bad)
(bad)
inc
sub
add
add
or
dec
add
add
add
sub
(bad)
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
jmp
sub
and
add
xchg
or
add
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
(bad)
(bad)
push
dec
add
(bad)
(bad)
call
add
add
int3
or
add
add
(bad)
(bad)
push
add
add
clc
or
add
add
(bad)
(bad)
call
sub
and
add
and
dec
add
(bad)
(bad)
push
sub
and
add
push
or
add
add
(bad)
(bad)
call
sub
and
add
jl
dec
add
(bad)
(bad)
push
sub
and
add
test
dec
add
(bad)
(bad)
call
dec
add
add
add
aam
dec
add
(bad)
(bad)
push
dec
add
add
add
add
add
add
add
(bad)
(bad)
jmp
add
add
xor
dec
add
(bad)
(bad)
call
sub
add
add
shr
add
add
add
sub
add
add
jmp
add
add
pusha
or
add
(bad)
(bad)
inc
sub
and
add
movs
or
add
(bad)
(bad)
push
sub
add
add
and
dec
add
add
add
sub
add
add
dec
sub
and
add
ror
add
(bad)
(bad)
jmp
dec
add
add
add
adc
dec
add
(bad)
(bad)
inc
add
add
inc
or
add
(bad)
(bad)
(bad)
jmp
add
add
ins
or
add
(bad)
(bad)
(bad)
inc
sub
and
add
cwde
or
add
(bad)
(bad)
(bad)
push
sub
and
add
les
add
(bad)
(bad)
(bad)
call
sub
add
add
sbb
dec
add
add
add
lock
add
(bad)
(bad)
(bad)
push
sub
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
and
dec
add
add
add
mov
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
push
dec
add
(bad)
(bad)
call
sub
(bad)
(bad)
(bad)
(bad)
fsubr
dec
add
add
add
sub
add
add
call
(bad)
(bad)
push
sub
(bad)
(bad)
(bad)
(bad)
clc
sub
and
add
dec
cmovl
(bad)
(bad)
(bad)
call
sub
add
(bad)
(bad)
call
sub
add
add
add
sub
add
add
add
sub
add
(bad)
(bad)
push
sub
add
(bad)
(bad)
(bad)
cmp
add
(bad)
(bad)
call
dec
add
add
add
dec
add
add
add
jl
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
(bad)
(bad)
inc
sub
add
(bad)
(bad)
dec
sub
add
add
add
fmul
dec
add
(bad)
(bad)
jmp
sub
add
add
add
sub
add
add
add
sub
add
add
add
adc
dec
add
(bad)
(bad)
call
sub
add
sbb
add
and
xchg
sbb
add
add
add
add
add
lods
adc
add
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
and
dec
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
add
add
sub
(bad)
dec
sub
(bad)
call
sub
(bad)
push
sub
add
clc
sub
(bad)
(bad)
clc
sub
add
add
dec
add
add
add
pop
adc
add
add
add
add
rcl
add
(bad)
(bad)
jmp
cs
add
add
add
cs
add
add
add
cs
add
add
add
cs
add
add
add
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
add
add
cmp
dec
add
(bad)
(bad)
inc
(bad)
(bad)
dec
add
add
(bad)
(bad)
call
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
(bad)
(bad)
call
cs
add
add
add
jo
dec
add
(bad)
(bad)
push
cs
add
add
add
pushf
adc
add
add
(bad)
(bad)
jmp
das
dec
add
add
add
enter
(bad)
(bad)
(bad)
call
dec
add
add
add
hlt
adc
add
add
(bad)
(bad)
inc
add
add
dec
add
add
add
dec
add
add
add
add
add
and
dec
add
(bad)
(bad)
push
add
add
adc
add
add
(bad)
(bad)
call
das
dec
add
add
add
nop
adc
add
add
(bad)
(bad)
inc
xor
add
add
lock
dec
add
add
add
das
dec
add
add
add
xor
and
add
mov
add
add
(bad)
(bad)
inc
dec
add
add
add
xor
add
add
cmp
dec
add
add
add
dec
add
add
add
add
add
(bad)
(bad)
push
dec
add
(bad)
(bad)
(bad)
js
dec
add
(bad)
(bad)
inc
add
add
inc
adc
add
add
add
movs
adc
add
(bad)
(bad)
(bad)
mov
add
add
add
add
add
add
add
add
xor
(bad)
(bad)
(bad)
push
xor
and
add
int3
adc
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
and
add
clc
adc
add
(bad)
(bad)
inc
dec
add
add
add
sub
dec
add
(bad)
(bad)
push
dec
add
add
add
pop
adc
add
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
push
add
add
test
add
(bad)
(bad)
(bad)
call
xor
(bad)
(bad)
(bad)
(bad)
fdiv
dec
add
(bad)
(bad)
jmp
xor
and
add
rcl
add
(bad)
(bad)
inc
xor
and
add
cld
adc
add
and
add
dec
push
dec
add
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
jmp
xor
(bad)
(bad)
(bad)
push
xor
add
add
cmp
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
call
dec
add
(bad)
(bad)
push
dec
add
add
add
test
dec
add
(bad)
(bad)
call
add
add
mov
dec
add
add
add
add
dec
add
(bad)
(bad)
push
(bad)
(bad)
(bad)
mov
(bad)
(bad)
inc
xor
add
add
enter
add
add
shl
dec
add
add
fdiv
dec
add
xor
add
xor
add
xor
add
add
lock
add
add
clc
xor
add
add
add
dec
add
add
or
dec
add
add
adc
dec
add
add
sbb
dec
add
add
and
dec
add
add
and
dec
add
add
sub
dec
add
add
xor
dec
add
(bad)
(bad)
(bad)
cmp
dec
add
(bad)
(bad)
inc
dec
add
add
add
int3
pop
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
or
add
jmp
add
add
xor
or
add
shl
add
add
add
xor
or
add
shl
dec
add
add
add
xor
add
add
stc
xor
add
add
add
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
test
dec
add
(bad)
(bad)
dec
cmp
add
add
xor
add
add
add
xor
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
xor
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
add
add
xor
add
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
add
or
add
adc
dec
add
xor
add
sub
add
xor
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
xor
add
ja
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
iret
xor
add
fidiv
add
in
dec
add
add
add
xor
add
sti
xor
add
push
ss
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
ss
add
ss
add
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
ss
add
ss
add
add
add
ss
add
add
add
ss
add
add
clc
ss
add
add
add
dec
add
add
push
aaa
dec
add
add
sbb
dec
add
add
and
dec
add
add
das
aaa
dec
add
add
cmp
dec
add
add
inc
aaa
dec
add
add
push
aaa
dec
add
add
pop
aaa
dec
add
add
data16
dec
add
add
jno
dec
add
add
jl
dec
add
add
xchg
dec
add
add
xchg
aaa
dec
add
add
popf
aaa
dec
add
add
test
dec
add
add
mov
dec
add
add
mov
add
add
aaa
dec
add
add
aam
dec
add
add
fdiv
dec
add
add
out
dec
add
add
out
aaa
dec
add
add
div
dec
add
add
push
dec
add
add
pop
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
popa
add
add
cmp
popa
add
add
cmp
arpl
add
inc
cmp
arpl
add
dec
cmp
add
add
dec
add
add
pop
cmp
add
add
dec
add
add
outs
cmp
imul
dec
add
add
jg
dec
add
add
xchg
dec
add
add
(bad)
cmp
ins
add
add
add
add
add
add
add
add
add
add
add
add
cmp
jb
add
out
cmp
jb
add
idiv
dec
add
add
add
cmp
(bad)
(bad)
(bad)
call
cmp
(bad)
(bad)
(bad)
call
cmp
and
add
pusha
sbb
add
add
add
mov
add
add
(bad)
(bad)
push
cmp
add
add
cmp
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
pop
cmp
add
add
pusha
cmp
add
add
push
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
dec
add
cmp
or
cmp
or
cmp
or
add
jb
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
cmp
or
add
retf
add
add
add
cmp
pop
add
add
cmp
sbb
add
loop
dec
add
add
add
cmp
or
add
repnz
or
add
cli
cmp
sbb
cmp
push
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
pop
add
add
cmp
push
add
add
cmp
or
add
inc
cmp
or
add
dec
cmp
add
add
cmp
add
add
add
add
add
add
add
(bad)
(bad)
jmp
(bad)
(bad)
jmp
(bad)
(bad)
inc
cmp
(bad)
(bad)
(bad)
dec
cmp
and
add
sub
dec
add
add
add
sbb
add
(bad)
(bad)
jmp
cmp
(bad)
(bad)
(bad)
(bad)
call
(bad)
(bad)
push
cmp
add
add
clc
cmp
add
add
add
dec
add
add
add
cmp
add
add
adc
dec
add
add
add
cmp
(bad)
(bad)
(bad)
jmp
cmp
and
add
in
push
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
je
dec
add
add
jl
dec
add
add
add
dec
pop
dec
add
(bad)
(bad)
call
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
cmp
and
add
jo
dec
add
(bad)
(bad)
inc
cmp
add
add
add
movs
pop
dec
add
(bad)
(bad)
push
cmp
add
add
add
rcr
dec
add
(bad)
(bad)
jmp
dec
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
add
add
cld
pop
dec
add
(bad)
(bad)
call
add
add
(bad)
(bad)
jmp
add
add
cmp
dec
add
(bad)
(bad)
inc
cmp
add
add
add
cmp
add
add
add
je
dec
add
(bad)
(bad)
(bad)
call
add
add
cmp
add
add
add
test
dec
add
(bad)
(bad)
call
cmp
xchg
sbb
add
add
and
add
add
add
add
sub
dec
add
(bad)
(bad)
inc
dec
add
add
add
dec
add
(bad)
(bad)
dec
dec
add
add
add
dec
add
add
add
dec
add
add
pusha
cmp
add
push
add
add
dec
add
add
js
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
sar
add
cmp
add
sar
add
fdivr
add
loopne
dec
add
add
loopne
dec
add
add
add
cmp
add
loopne
dec
add
add
add
cmp
add
clc
cmp
add
add
dec
add
add
add
ds
add
ds
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
cmp
dec
add
add
add
ds
add
add
add
dec
add
add
add
ds
add
add
add
dec
add
ds
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
dec
add
ds
add
add
add
add
add
add
add
(bad)
(bad)
push
add
add
adc
dec
add
(bad)
(bad)
call
ds
add
add
add
ds
add
add
add
ds
add
add
add
ds
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
add
dec
add
add
add
dec
add
aas
dec
add
aas
dec
add
aas
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
dec
add
(bad)
(bad)
call
aas
dec
add
add
add
aas
dec
add
(bad)
(bad)
(bad)
fdivr
dec
add
add
add
aas
dec
add
add
add
aas
dec
add
add
lock
dec
add
add
clc
aas
dec
add
add
add
add
add
or
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
push
add
add
dec
add
add
jo
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
enter
and
add
rol
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
jmp
inc
dec
add
add
add
fsub
add
(bad)
(bad)
(bad)
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
(bad)
(bad)
inc
dec
add
(bad)
(bad)
dec
dec
add
(bad)
(bad)
jmp
dec
add
add
add
call
add
add
(bad)
(bad)
call
add
add
adc
dec
add
(bad)
(bad)
push
add
add
inc
daa
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
ins
daa
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
cwde
daa
dec
add
(bad)
(bad)
call
inc
dec
add
(bad)
(bad)
call
inc
dec
add
add
add
les
dec
add
add
add
sbb
dec
add
(bad)
(bad)
push
inc
dec
add
add
add
inc
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
push
add
add
(bad)
(bad)
call
add
add
dec
add
add
add
add
add
add
add
dec
add
add
add
add
add
mov
add
add
add
add
add
inc
dec
add
add
add
aam
dec
add
(bad)
(bad)
inc
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
lock
dec
add
add
clc
inc
dec
add
add
add
inc
dec
add
add
add
inc
dec
add
add
add
inc
sub
add
add
(bad)
(bad)
jmp
dec
add
add
add
dec
add
xlat
movs
out
lock
and
and
add
sbb
adc
cs
repnz
inc
not
or
add
fnsave
lods
xchg
jnp
or
daa
push
cmp
lahf
ins
aam
and
dec
mov
js
rol
std
xor
pop
ret
mov
das
xor
inc
pop
xchg
test
xchg
xor
rol
mov
bnd
adc
jmp
scas
cmps
sbb
xchg
cmps
mov
test
cs
pop
xor
loopne
in
inc
pop
push
push
mul
fnstenv
repz
mov
push
xchg
and
adc
jno
stos
or
mov
ss
add
and
xor
gs
(bad)
fs
pop
cmova
les
xchg
xchg
fld
mov
(bad)
arpl
inc
gs
jo
sub
xchg
adc
pusha
ins
pop
repnz
lods
shl
fdiv
in
out
popf
mov
out
adc
mov
inc
arpl
arpl
aad
cmp
ret
jno
mov
lahf
(bad)
sub
xchg
fnstsw
pop
cmp
pop
rcl
loopne
aaa
les
inc
repz
or
inc
imul
mov
mov
rol
jo
jmp
loope
adc
ss
inc
(bad)
mov
lods
arpl
sbb
out
inc
jl
cmp
add
je
push
cmp
push
leave
xlat
add
aad
lds
xchg
retf
mov
pop
push
in
sbb
adc
enter
xor
ret
xchg
(bad)
mov
inc
hlt
pop
inc
mov
loope
jecxz
push
adc
inc
push
push
dec
and
daa
jb
repnz
xchg
(bad)
fistp
jmp
ins
xlat
pop
fldenv
test
inc
or
leave
test
test
mov
mov
add
shl
rol
fwait
sbb
out
scas
jne
arpl
mul
inc
fistp
test
popaw
mov
ret
ret
int
mov
xor
jns
add
jmp
mov
cmp
in
in
shl
or
sbb
arpl
jae
(bad)
fist
jle
xchg
(bad)
mov
dec
cmc
add
lea
inc
ret
lods
test
jg
ds
pop
mov
mov
imul
adc
dec
gs
xlat
in
sub
cdq
pop
xchg
ins
push
test
retf
push
cmps
cmc
dec
lds
inc
cmps
jbe
ret
leave
mov
ss
sub
call
cmps
leave
push
pushf
fwait
pop
adc
push
push
mov
add
pop
dec
aas
fadd
movs
(bad)
adc
imul
mov
inc
dec
inc
adc
jbe
outs
adc
mov
leave
lock
outs
test
mov
sti
sub
adc
jo
cmps
je
shl
add
pop
cmps
xchg
leave
fwait
sub
jns
cdq
or
push
cmp
jmp
call
in
xchg
pop
pop
into
nop
push
and
mov
mov
xchg
out
(bad)
in
stc
test
mov
or
push
fwait
pop
add
push
xchg
push
cmps
xlat
xchg
adc
xchg
lahf
sub
push
inc
or
add
adc
inc
and
mov
push
pop
mov
in
push
in
or
inc
sbb
icebp
lahf
push
dec
xor
xchg
xchg
push
rcr
outs
sar
push
int
fs
adc
scas
ja
push
cmp
ins
sub
mov
ret
test
mov
and
fnstsw
xor
add
lds
fucomi
mov
test
inc
shl
(bad)
jne
jb
xor
jg
mov
add
xor
repz
icebp
data16
in
gs
inc
mov
movs
inc
inc
ins
xchg
jno
xor
aas
adc
aad
or
cmc
lods
test
mov
movs
inc
int
ror
mov
and
es
aaa
push
test
fwait
cmps
xor
leave
lds
push
cmp
inc
test
adc
mov
idiv
mov
push
lds
ds
js
jbe
xchg
daa
jne
je
div
add
cmps
add
call
loop
xor
push
jnp
imul
ss
movs
cmp
mov
inc
arpl
fidiv
(bad)
test
sub
in
inc
sub
or
push
cmp
mov
shl
mov
hlt
xchg
daa
fld
adc
jo
or
add
add
out
cmps
xchg
(bad)
jno
arpl
in
imul
push
int
out
mov
push
mov
jg
push
repz
mov
and
jbe
inc
bound
adc
inc
es
out
sub
jmp
adc
add
adc
cmp
and
inc
jl
adc
cmp
inc
shl
cwde
xor
div
fs
aad
cmp
mul
xchg
leave
mov
adc
popf
leave
fbld
test
cmps
inc
mov
jmp
js
cmps
xor
aad
or
sti
fist
mov
mov
movs
cmp
stos
or
xor
scas
fild
jb
sub
cmp
in
not
sbb
push
dec
adc
dec
xlat
dec
js
and
cvtps2pi
aas
add
xor
(bad)
ret
mov
std
ficom
(bad)
daa
xlat
jo
mov
add
cld
add
cmp
jle
jno
ds
adc
cmp
pop
xchg
aad
gs
stos
cmp
pop
jae
mov
push
sub
das
shl
inc
lods
xchg
mov
cmp
mov
mov
add
out
imul
jmp
mov
sub
push
sbb
out
test
push
jp
add
xchg
sub
fbstp
aad
in
data16
adc
mov
je
ja
repnz
xor
out
xor
push
es
hlt
retf
imul
stos
cmps
movs
call
outs
and
pop
xchg
aaa
sbb
xchg
scas
popa
inc
(bad)
xchg
cmps
stos
jmp
ret
sbb
cmp
jmp
xor
call
(bad)
mov
mov
into
daa
cmp
dec
out
aaa
outs
pop
pop
dec
mov
rcl
setle
rcl
xchg
ja
movs
ins
xchg
shld
ret
retf
adc
arpl
mov
add
and
adc
out
dec
jle
in
mov
xchg
dec
jge
pop
shl
cmc
push
xchg
pop
out
jno
xor
call
inc
jnp
jecxz
mov
push
gs
adc
mov
cmps
retf
mov
fwait
sbb
mov
and
bound
sbb
cld
ins
les
clc
xchg
scas
hlt
lds
xchg
inc
popf
mov
in
fs
aad
aaa
data16
aad
or
retf
pop
fwait
pop
mov
adc
and
lahf
mov
ja
je
retf
pusha
cmp
sahf
cdq
mov
xor
mov
push
sub
imul
add
mov
fwait
add
xor
rcr
push
xchg
jne
in
dec
dec
fild
push
les
pshufw
fild
mov
and
pusha
add
jp
add
adc
adc
mov
(bad)
and
push
std
pop
cld
iret
dec
cmp
xor
add
je
xor
cmps
loop
or
adc
jmp
in
mov
daa
pop
jge
sbb
xor
add
mov
shld
and
inc
inc
dec
in
out
sbb
fcom
fcomp
and
popa
cmps
aaa
pop
mov
jmp
xchg
cmc
pop
in
loope
mov
js
sub
mul
push
aas
inc
push
dec
movs
movs
(bad)
sub
sbb
adc
or
xor
popa
stc
push
inc
(bad)
mov
popf
cmc
or
clc
push
nop
test
push
xchg
push
mov
adc
scas
rol
adc
ja
pop
arpl
and
xor
mov
ins
fimul
jo
iret
adc
ret
and
sbb
add
sahf
aad
adc
into
xor
nop
jp
cmps
xor
enter
into
add
rcr
dec
pop
push
fstp
in
mov
pop
aam
aaa
lds
jne
mov
inc
ret
fadd
repz
jle
mov
and
push
pop
das
rcl
inc
lock
adc
xchg
loop
(bad)
int3
xchg
cwde
cld
mov
adc
test
and
popf
jmp
rcl
imul
jo
pop
sbb
test
in
shl
lods
and
hlt
test
mov
and
inc
dec
pop
int
jbe
jge
sub
jecxz
jmp
sub
in
pusha
xchg
add
add
jl
xchg
aaa
rol
in
pop
and
in
into
hlt
xchg
aad
mov
mov
mul
sub
jmp
inc
les
xchg
push
dec
daa
in
lahf
imul
jmp
cwde
pop
ss
sti
je
and
cmp
mov
enter
rol
dec
sbb
xor
ss
cwde
dec
xchg
xchg
sub
cmp
jnp
hlt
mov
mov
sub
pop
mov
dec
lods
ret
ja
aad
leave
aad
mov
xor
in
jo
in
out
cs
test
ins
jne
fiadd
out
rol
lods
jmp
je
mov
ret
lods
inc
outs
stos
(bad)
ins
stos
nop
adc
push
popf
ret
sbb
mul
stos
jl
and
aam
nop
comiss
ja
jle
push
or
std
in
test
pop
or
and
pop
dec
ss
xor
cmp
dec
in
repz
cmps
xchg
scas
dec
dec
les
ins
xchg
mov
push
jne
test
outs
xor
daa
xchg
in
mov
mov
mov
movs
lahf
push
push
pop
(bad)
sub
gs
jge
dec
xlat
adc
inc
sar
lods
mov
xor
push
jnp
xlat
jecxz
inc
xor
pop
sar
xlat
aam
xchg
(bad)
mov
mov
xchg
sti
jb
icebp
mov
in
adc
ret
stc
fs
movs
rcl
out
mov
cmps
mov
in
lods
jmp
jo
(bad)
into
in
push
jns
aam
cmp
xchg
xchg
lods
fistp
gs
outs
loopne
sbb
(bad)
iret
ja
push
(bad)
fild
adc
and
sti
lds
repnz
test
popf
inc
test
jnp
add
add
inc
js
in
scas
and
xor
mov
cmc
fisttp
xchg
popa
or
mov
push
jne
(bad)
pop
popf
test
mov
lods
sti
xor
cmp
push
jno
test
pop
fsubr
daa
retf
ins
sub
cmps
pop
test
fst
pop
(bad)
pop
and
pop
clc
dec
ins
jo
shr
and
xchg
push
or
push
shl
and
add
idiv
les
push
retf
fisubr
pop
mov
mov
(bad)
sahf
in
cmp
mov
mov
in
bswap
movs
jl
stc
jmp
out
imul
repnz
aas
ds
xor
out
mov
jo
pusha
fwait
arpl
cdq
inc
dec
push
and
or
in
add
cmp
pop
xchg
adc
pop
hlt
jg
mov
stc
and
xchg
xchg
or
gs
aad
dec
mov
popf
xor
cwde
xchg
push
inc
pop
adc
ja
adc
pop
lea
inc
xor
jnp
xchg
add
xchg
push
adc
loope
mov
sbb
adc
jns
add
out
lods
push
inc
jge
loop
movs
sub
sysexit
inc
inc
push
ror
jmp
push
dec
ins
push
mov
aaa
adc
xchg
or
int3
pop
cmps
mov
outs
test
test
scas
jle
jno
push
dec
sub
std
xor
jecxz
jns
xchg
cmp
and
out
cmp
repnz
loopne
outs
and
cmp
lock
fistp
add
add
dec
(bad)
fwait
add
iret
mov
mul
mov
lock
xchg
lods
sbb
inc
pop
push
ror
loope
jg
xchg
add
movs
inc
xchg
jnp
fld
stos
imul
inc
push
jl
data16
repnz
xlat
(bad)
pop
stc
mov
lock
in
js
jge
adc
add
inc
mov
aam
adc
in
rcr
icebp
jp
mul
adc
dec
xor
inc
in
jp
and
imul
xchg
aam
jbe
push
fadd
scas
adc
fs
mul
(bad)
retf
xchg
outs
std
ret
jg
cwde
inc
out
in
pop
adc
pop
repnz
mov
cmp
or
mov
div
push
test
and
leave
cmp
std
cmps
bound
out
cmp
push
pop
add
jmp
test
rol
fwait
dec
and
fistp
mov
xchg
cmp
mov
sub
shl
and
pop
dec
ss
push
inc
jp
ds
cs
cwde
mov
adc
xchg
test
scas
and
push
xlat
test
mov
(bad)
dec
in
stc
call
ja
xchg
mov
gs
xchg
inc
in
jb
je
push
and
pop
cmps
lds
xchg
inc
pop
dec
sbb
hlt
sbb
adc
xchg
push
movs
mov
jnp
stc
les
stc
(bad)
add
sub
(bad)
mov
mov
mov
in
mov
es
out
cmp
stos
jl
in
cmp
mov
sbb
and
add
test
ins
cmp
jp
cmps
cmps
scas
sub
mov
jl
scas
aas
cmp
iret
jne
jne
ins
dec
xchg
fdiv
imul
pop
(bad)
pop
push
inc
inc
(bad)
cmp
sbb
inc
es
push
ins
and
daa
and
dec
push
rcl
jg
push
sbb
cmp
loop
push
pop
int3
pop
pop
dec
loopne
push
outs
inc
je
lods
jle
dec
mov
jmp
or
imul
fnstcw
addr16
mov
jle
mov
stc
gs
adc
cmps
popa
push
scas
inc
sub
lds
and
push
call
stos
jg
inc
ret
je
mov
pop
cmp
loope
jmp
not
adc
push
pop
inc
push
nop
cmps
mov
add
out
enter
and
and
rcr
bound
mov
ja
out
cmc
out
je
mov
call
lahf
push
mov
in
mov
nop
les
fs
out
pop
xchg
mov
dec
add
shl
mov
push
imul
mov
mov
add
sbb
inc
push
adc
adc
jge
inc
jae
inc
sub
jecxz
ret
push
pop
add
pop
test
lods
out
xlat
and
js
(bad)
or
cdq
int3
mov
mov
push
push
mov
xlat
xlat
movs
(bad)
aad
cmc
push
int3
das
popf
and
aad
jecxz
mov
pop
rcl
jns
adc
icebp
mov
jns
(bad)
or
pop
pushf
daa
jnp
xor
inc
push
and
jle
inc
nop
aad
pop
sbb
jno
xchg
cwde
adc
mov
out
div
jne
call
icebp
fyl2x
stc
mov
sub
xchg
xchg
xor
cmps
sbb
das
ds
in
cli
lahf
xor
jne
jecxz
lds
stc
jle
sub
jg
je
add
test
loope
push
sub
xor
movs
das
pop
mov
aad
cmc
shl
inc
or
sub
cmp
jecxz
(bad)
cli
pop
cld
adc
mov
xlat
jl
daa
adc
xor
push
(bad)
hlt
or
inc
idiv
pusha
in
sbb
(bad)
out
or
xchg
cmp
test
arpl
push
je
pop
in
(bad)
push
stos
movs
sub
fcom
and
xor
sub
rol
out
aam
mov
stos
in
sub
jge
pop
cmps
and
imul
ret
bound
mov
out
fwait
popa
ins
pop
fsub
nop
(bad)
gs
sti
mov
inc
popf
push
cmp
je
jecxz
rcr
inc
ins
jp
mov
je
ins
gs
xor
jo
dec
dec
dec
lock
and
das
adc
mov
push
sub
cmc
data16
push
mov
sbb
mov
jne
cmps
sub
ss
aaa
arpl
cmp
xor
imul
xor
loopne
adc
pop
retf
shl
int3
add
sub
sbb
pop
pop
dec
add
repz
fwait
scas
adc
mov
or
shl
pop
js
jae
sti
or
loope
add
retf
scas
das
or
je
dec
sub
jg
xchg
mov
aam
push
sub
push
fldcw
pop
and
fistp
push
ret
test
mov
outs
stc
mov
pop
(bad)
pushf
jl
dec
fisttp
out
leave
mov
pop
push
push
fidiv
lods
jae
je
and
cmp
cmp
cwde
jne
xchg
push
scas
sar
mov
es
sub
jne
sub
outs
aad
movs
mov
xchg
xor
sbb
dec
cmp
je
mov
aad
xor
mov
in
shr
mov
(bad)
data16
mov
xor
cmp
adc
aaa
scas
xchg
mov
and
push
es
dec
xchg
mov
mov
shr
xor
xchg
cmc
jecxz
popa
adc
adc
(bad)
push
cdq
lock
inc
xor
sbb
add
in
test
les
cwde
add
bnd
jne
mov
int3
inc
xor
xlat
call
push
mov
daa
mov
sbb
xchg
sbb
pushf
ror
ret
and
pop
xchg
int3
scas
(bad)
xor
add
cmp
push
iret
cmp
add
pop
test
push
push
vcvtdq2ps
out
or
test
sbb
cmp
gs
xchg
jbe
mov
or
jb
rcl
(bad)
ror
fs
add
movs
adc
lock
xchg
push
xchg
movs
xchg
movzx
jne
arpl
pop
jne
lock
int3
xor
jb
aas
rcr
hlt
sti
scas
fwait
rol
and
xor
test
pusha
push
outs
xor
cmp
(bad)
stc
(bad)
loopne
lods
adc
int
push
ds
pop
mov
jp
adc
aas
test
scas
aaa
xchg
xchg
cmps
fbld
or
dec
and
jge
or
lods
or
cmp
mov
out
movs
cld
jo
hlt
fisttp
loope
jne
inc
or
inc
sbb
stos
mov
addr16
push
cmp
out
jne
dec
ja
js
add
aas
(bad)
shl
div
in
add
push
push
jne
mov
sbb
or
sbb
popa
leave
xlat
std
out
push
(bad)
xor
and
cmc
inc
int3
cmps
popf
and
inc
test
push
inc
sbb
pop
pusha
fwait
cli
cmp
or
push
and
stos
push
xor
repnz
(bad)
adc
xor
sbb
(bad)
inc
imul
add
data16
mov
repz
xchg
mov
(bad)
daa
mov
repnz
daa
fs
loope
(bad)
popa
clc
fdiv
or
pop
mov
adc
ins
gs
push
add
int
inc
and
retf
xchg
cwde
ja
cmps
xor
shl
cli
and
mov
push
jnp
sub
scas
test
adc
add
jnp
and
sub
out
mov
mov
dec
and
dec
lea
leave
push
sub
cmps
xchg
adc
test
cmp
dec
mov
lahf
push
add
inc
xor
adc
cwde
psubw
mov
dec
sbb
mov
jns
adc
adc
imul
retf
movs
push
clc
xchg
stos
jbe
xchg
cmc
pop
inc
lds
(bad)
aam
inc
add
popa
aaa
add
pop
stos
call
jbe
(bad)
cmps
xchg
pop
mov
jle
int3
jns
adc
icebp
inc
jmp
sub
test
mov
xchg
je
mov
add
xchg
cld
je
pusha
dec
and
ins
push
std
in
xor
and
pop
push
xor
xor
fbstp
or
cld
inc
mov
sbb
mov
inc
(bad)
adc
dec
lds
fs
adc
(bad)
imul
test
mov
in
movs
loop
mov
mov
shr
(bad)
das
adc
mov
lods
inc
jbe
jbe
mov
ja
imul
or
or
jmp
jle
jno
test
mov
xchg
in
shl
xchg
jne
daa
sub
lods
ja
inc
or
fcomp
test
cld
or
sub
cmp
push
jmp
xlat
xor
push
add
hlt
not
in
stos
mov
sub
mov
loopne
jo
mov
inc
jb
sbb
stc
xchg
data16
test
and
out
jmp
push
(bad)
popf
push
or
loop
cmc
mov
dec
mov
push
mov
and
inc
ss
xchg
dec
pop
sbb
test
sub
test
ins
in
repnz
push
and
xor
call
mov
adc
(bad)
imul
cmp
push
add
and
adc
or
leave
adc
aaa
dec
mov
aam
fs
int
dec
mov
add
xor
retf
test
inc
aad
xchg
gs
std
sbb
jb
mov
sub
(bad)
sub
ja
in
pop
mov
dec
sub
mov
dec
into
scas
inc
jl
mov
loopne
lock
pop
and
movs
jo
or
in
dec
cs
mov
cmps
js
jecxz
test
xchg
mov
sbb
pop
adc
inc
daa
add
push
mov
and
or
fild
aas
movs
dec
xor
jne
(bad)
dec
push
int
push
scas
and
adc
or
hlt
fs
daa
aaa
loop
icebp
test
pop
xchg
aad
rol
inc
dec
cmp
out
jae
push
retf
int3
ins
xchg
in
imul
ins
aad
mov
push
ds
imul
or
test
call
lods
mov
or
ds
sar
push
push
pop
xor
dec
lds
mov
pop
pop
sbb
mov
adc
jecxz
push
push
int3
push
mov
jmp
mov
ja
cwde
xor
idiv
cmp
pop
movs
xchg
jne
aam
ins
enter
lods
scas
push
mov
and
and
ds
test
inc
in
stc
stos
ja
adc
sbb
call
jo
(bad)
xchg
or
pop
rcl
xor
leave
inc
fcomp
and
push
xchg
or
ja
out
inc
mov
out
cmc
call
stos
test
inc
iret
cmp
sub
jp
jo
xchg
clc
mov
mov
jmp
div
or
icebp
test
pop
ja
shl
push
mov
adc
arpl
push
mov
lods
adc
inc
jno
mov
dec
xchg
cmp
out
push
lds
(bad)
and
aad
scas
pop
shl
in
cmps
and
jae
nop
and
aam
(bad)
mov
and
movs
inc
pusha
cmps
popa
xchg
adc
push
int3
mov
or
xor
(bad)
dec
int
mov
addr16
mov
icebp
cld
push
sub
dec
lds
cmp
or
sub
shl
mov
xchg
cwde
push
mov
fisub
aas
jne
push
test
mov
pop
adc
pop
add
nop
mov
les
jge
fild
js
xchg
aaa
dec
lods
les
rcl
aad
cwde
mov
xabort
xchg
or
push
inc
and
sbb
inc
lods
push
ja
div
in
lock
pop
add
pop
and
mov
aaa
adc
xchg
xchg
pop
sete
(bad)
xchg
inc
fstp
test
jne
inc
lea
gs
jae
pop
daa
fdivr
lea
aaa
aad
rcr
ret
xchg
shl
js
cmc
and
cmp
push
retf
pop
outs
std
mul
iret
in
push
adc
daa
inc
jge
xchg
xor
push
lods
adc
jne
scas
cmp
jae
(bad)
xor
ret
pop
adc
dec
daa
and
ret
mov
lds
or
sbb
cld
shr
fimul
xlat
mov
pop
addr16
xlat
hlt
pop
and
int
rcr
out
cmc
test
nop
mov
add
pop
cdq
mov
inc
arpl
call
ss
jecxz
mov
xchg
cld
pop
fnsave
mov
aad
(bad)
push
xor
rol
loope
daa
sub
pop
daa
cmc
and
inc
test
repnz
push
sub
cmp
mov
jg
push
nop
xor
cmps
and
add
daa
(bad)
lock
ja
push
bnd
hlt
fld
push
dec
jne
inc
xlat
arpl
aas
lods
lds
movs
fild
imul
mov
and
out
pop
cmp
mov
sub
imul
data16
cmp
push
(bad)
cmp
inc
xor
loop
xchg
(bad)
call
xchg
mov
push
mov
cmp
sbb
xchg
aaa
in
jle
aaa
push
adc
out
mov
and
gs
xchg
mov
push
sbb
addr16
and
out
xor
clc
or
and
mov
js
mov
and
test
xchg
xchg
xchg
fs
test
lea
mov
push
pop
sbb
aam
es
mul
mov
lods
mov
xlat
popa
dec
es
xor
pop
and
out
xchg
lods
nop
xlat
sbb
in
daa
test
fs
sub
mov
xor
push
lods
lds
cmps
adc
test
shl
xchg
inc
lods
(bad)
imul
aad
movs
in
mov
xchg
xchg
loop
rol
fild
xor
jbe
enter
push
pop
pop
shl
push
scas
mov
cmc
mov
not
inc
pop
(bad)
push
jge
shl
addr16
std
sar
aas
and
pop
cmp
ins
(bad)
mov
repnz
and
and
xchg
dec
pusha
loope
pop
inc
das
sub
test
repnz
mov
and
xchg
(bad)
jno
and
imul
xchg
sub
sbb
pusha
jbe
xchg
and
ficomp
add
xor
ficom
fcomp
pop
push
dec
xchg
rol
xchg
stos
bound
xchg
popa
jo
rol
out
out
std
or
call
out
out
lea
or
inc
xchg
fwait
jle
mov
xor
hlt
pop
adc
pop
loop
pop
inc
mov
mov
and
mov
(bad)
neg
out
jne
sbb
add
mov
xlat
aad
jl
push
loopne
jl
jnp
and
iret
jno
add
sub
pop
es
test
adc
cmc
xchg
and
jo
and
mov
mov
dec
out
fcmovu
cmp
les
dec
cmp
addr16
push
ins
inc
xor
adc
mov
scas
jecxz
adc
push
shl
retfw
jae
push
lahf
icebp
push
xor
adc
ja
inc
retf
(bad)
xchg
neg
jmp
mov
daa
xchg
sbb
xchg
dec
pop
xlat
addr16
lods
(bad)
outs
(bad)
add
jmp
cmps
movs
pop
inc
pop
fxch
int3
xchg
jle
out
jmp
jecxz
cwde
cmps
xor
dec
rcr
jbe
jns
mov
lds
adc
ds
push
lahf
dec
xchg
in
dec
imul
mov
sub
jo
pusha
inc
inc
repz
imul
pandn
mov
out
pop
pop
inc
out
call
push
out
ror
(bad)
ret
xchg
lods
(bad)
xchg
pop
xchg
push
cmp
(bad)
cmp
push
jno
(bad)
mov
stos
and
cmc
dec
sbb
pushf
cmp
inc
mov
gs
fstp
xchg
mul
push
rol
nop
cwde
in
adc
ret
mov
data16
lea
pop
jge
test
sbb
fwait
adc
mov
mov
mov
mov
movs
popa
pcmpeqw
ins
dec
imul
sub
mov
fidivr
xor
inc
jnp
rcl
jo
sbb
daa
xor
test
xchg
sbb
ins
adc
cmp
je
test
scas
pop
in
sbb
lock
es
mov
jne
std
inc
arpl
movs
pop
test
mov
shl
fbld
mov
jecxz
adc
(bad)
movs
cdq
jmp
int
add
mov
pop
adc
adc
stc
scas
(bad)
(bad)
mov
xlat
push
cmp
in
std
not
xchg
sbb
test
retf
inc
movs
jecxz
(bad)
retf
jecxz
mov
sbb
test
xor
daa
push
add
or
pop
xchg
sti
stc
mov
(bad)
push
jecxz
iret
xchg
retf
push
movs
add
mov
cld
shl
push
lods
lods
cmp
dec
out
adc
mov
add
mov
xor
inc
mov
push
imul
mov
inc
jo
push
sub
jge
add
xchg
mov
adc
mov
out
mov
push
data16
xchg
test
add
das
loop
cmp
imul
xchg
jl
mov
xor
pop
pop
(bad)
pushf
sub
es
mov
cmps
xchg
and
or
int3
dec
ins
adc
pop
loopne
movs
addr16
add
xlat
ins
pop
aaa
or
xchg
push
enter
add
stc
and
aaa
jae
pushf
aas
fisttp
mov
xchg
mov
rcl
push
stos
cmp
daa
adc
mov
es
pop
aad
lea
mov
(bad)
pop
test
pushf
push
mov
scas
addr16
mov
pop
and
gs
out
inc
sub
pop
test
mov
das
pop
popa
pop
push
pusha
popa
mov
pop
jne
inc
shl
pop
add
daa
xlat
cmps
lds
xor
jg
fnstenv
xor
ja
xchg
inc
outs
in
rol
xchg
ss
jle
pop
adc
and
das
add
or
xchg
fcomi
pop
pop
sub
pop
xchg
dec
hlt
test
fcmovnbe
mov
xor
xchg
addps
cmp
mov
pop
xchg
iret
jmp
add
ret
mov
inc
or
arpl
push
jmp
xor
js
mov
mov
aam
cmps
cmp
mov
enter
pop
inc
mov
dec
pop
cmp
out
inc
push
push
cmp
pop
sahf
dec
inc
aam
outs
sbb
leave
fadd
loop
cmp
and
dec
sub
gs
jne
add
add
push
pusha
push
aad
aam
sar
sbb
or
push
dec
stos
dec
push
mov
ret
jmp
xchg
test
(bad)
xor
and
cmp
addr16
movs
aaa
mov
fisub
jecxz
es
mov
add
inc
push
aad
cli
mov
add
fsubr
pop
fdivr
fbld
mul
test
mov
push
or
sbb
adc
inc
sbb
push
or
js
cld
xchg
rol
sub
fdivr
adc
pop
(bad)
cmc
inc
(bad)
xlat
adc
jmp
and
pop
in
fistp
push
xchg
add
xlat
push
inc
dec
add
pusha
bound
push
pop
test
repnz
mov
aaa
icebp
aaa
inc
clc
inc
sbb
xchg
add
(bad)
std
cmp
sar
add
(bad)
retf
fdiv
cmp
lods
or
mov
or
jle
and
arpl
add
sub
data16
out
shl
fadd
jnp
push
cmps
pop
test
int
jb
mov
out
imul
inc
xlat
test
rcr
pusha
push
test
ret
rol
mov
and
lods
movs
pop
aas
out
jge
fadd
push
fsub
pop
call
mov
sub
adc
xor
xchg
pop
adc
in
xchg
not
sbb
out
jbe
xchg
cmp
mov
retf
aaa
adc
pop
mul
add
icebp
add
inc
push
pop
mov
jg
mov
pop
mov
push
push
add
inc
mov
in
test
ss
cmps
(bad)
jns
jle
inc
add
test
jmp
mov
outs
nop
inc
int
fdiv
jecxz
aas
(bad)
fmul
jnp
and
addr16
cdq
in
cmps
jg
test
adc
inc
add
cmps
add
aam
jle
out
inc
aad
aad
lds
push
sub
adc
sbb
xchg
mov
mov
int
shr
adc
cwde
icebp
pop
ret
repz
add
lds
adc
arpl
push
mov
push
push
call
dec
pushf
retf
mov
dec
adc
add
push
pop
and
test
aaa
inc
lds
inc
out
call
(bad)
in
add
and
imul
xchg
sub
inc
xchg
or
inc
aam
or
movs
sbb
fst
or
loopne
dec
mov
push
cmp
mov
and
add
(bad)
and
cwde
sbb
sahf
sti
aam
sbb
dec
xor
pop
movs
retf
call
aad
pop
jo
mov
adc
test
out
pop
sbb
pushf
pop
xor
repnz
test
xor
ins
jle
add
ins
cmp
push
xchg
jne
std
inc
jb
mov
fild
fucomp
ss
add
out
data16
fild
gs
popf
test
out
xor
xor
pop
xor
inc
(bad)
xchg
and
mov
mov
iret
and
push
je
inc
sar
mov
cmps
push
cs
in
cmps
fwait
ret
mov
jbe
(bad)
popf
data16
pop
adc
into
adc
into
mov
and
cmp
test
shl
cmps
pop
cmc
pop
dec
cdq
add
mov
push
xlat
rcl
aaa
out
push
adc
add
add
repz
adc
pop
test
adc
out
push
xor
aad
fbstp
std
xor
mov
pop
imul
inc
pop
popf
mov
pop
or
cmc
inc
xor
cmc
and
pop
sti
add
inc
adc
out
pop
adc
in
mul
je
out
mov
cmps
dec
xchg
jno
loop
mov
dec
mov
xor
jne
cmps
add
mov
inc
cld
xor
out
or
push
js
gs
jne
rcl
mov
daa
stos
mov
sub
xchg
(bad)
jecxz
mov
sahf
js
and
cs
outs
adc
inc
mov
pop
cmp
data16
iret
call
push
stos
cmps
aaa
not
dec
adc
int3
pop
(bad)
daa
mov
shl
mov
xchg
mov
ret
ins
movzx
jns
cmp
and
xchg
xor
xor
ret
jns
mov
ins
(bad)
push
mov
jae
in
inc
and
loope
inc
xlat
aaa
aad
push
test
fwait
xchg
mov
pop
jae
bound
sahf
push
scas
xchg
test
and
repz
xchg
out
cs
inc
xchg
out
adc
xor
jmp
push
push
jno
popf
mov
xchg
cdq
lods
push
fdivr
ja
mov
sbb
push
fldcw
jl
enter
dec
mov
jmp
inc
aas
clc
and
mov
lods
je
popa
dec
mov
add
sbb
mov
mov
jb
mov
xchg
push
out
dec
fist
repnz
cmps
or
test
(bad)
adc
xor
out
xor
mov
pusha
test
bound
xchg
add
fistp
pop
inc
test
or
adc
test
repz
hlt
retf
jae
and
in
adc
sbb
adc
sub
push
mov
inc
mov
xchg
lea
pop
mov
cs
mul
or
pop
aaa
mov
movs
sbb
mov
jns
les
mov
cwde
jne
movs
mov
push
cmps
addr16
inc
cmp
cdq
(bad)
addr16
in
es
pop
fnstsw
int
cmp
add
inc
push
ja
jae
push
mov
movs
pop
xchg
jb
(bad)
(bad)
cmp
mov
inc
gs
mov
scas
mul
in
xor
jl
mov
shl
addr16
gs
sbb
scas
ds
add
xchg
and
ret
int3
xchg
mov
icebp
mov
inc
loope
or
or
in
push
mov
in
pop
xchg
add
mov
dec
jmp
ret
(bad)
jmp
test
mov
pusha
xchg
jp
mov
fist
(bad)
aad
addr16
jg
enter
inc
es
out
fs
inc
add
jg
call
imul
call
gs
mov
dec
sub
cmp
pop
inc
movs
clts
test
pop
not
rcl
lock
mov
cmp
aas
js
adc
add
(bad)
test
icebp
xor
xor
xchg
outs
sub
out
adc
enter
cmp
mov
mov
pop
xor
mov
js
popa
or
jno
cmp
enter
cmp
jl
mov
dec
inc
mov
stos
das
add
xlat
xchg
dec
popf
mul
int
les
xor
cmp
adc
test
or
jge
mov
in
and
mov
neg
inc
sbb
sbb
or
daa
xchg
or
aaa
(bad)
mov
test
popa
cmc
push
jno
xchg
adc
pop
push
(bad)
repnz
cli
and
addr16
add
push
mov
inc
push
jae
ds
pop
imul
sbb
mov
jo
fadd
scas
aam
inc
dec
mov
nop
pop
push
pop
push
and
mov
push
push
mov
dec
in
dec
rol
or
(bad)
mov
lods
dec
sbb
sbb
mov
mov
inc
dec
lods
stc
add
pop
pop
fs
outs
push
aam
stos
(bad)
in
in
std
push
(bad)
mov
sub
push
mov
add
xor
or
xchg
ja
xor
cdq
pop
popa
es
mov
test
popf
xor
aam
mov
in
and
test
dec
nop
into
push
xchg
(bad)
xchg
rcl
cmps
cmc
inc
in
and
scas
cmc
ret
cmps
push
add
inc
test
div
pop
bound
adc
sub
mov
sub
test
sbb
ds
dec
add
dec
pop
aaa
mov
xor
adc
aad
dec
cmps
jmp
mov
and
mov
inc
imul
cmp
dec
cli
fmulp
xchg
inc
lds
push
or
inc
in
add
out
shl
gs
je
aam
mov
mov
mov
lahf
add
pushf
rol
jmp
inc
add
adc
jg
xor
xor
adc
div
cmps
pop
aas
mov
cwde
scas
push
ss
leave
dec
pop
icebp
add
and
mov
xor
mov
or
sbb
mov
jne
xchg
cmp
(bad)
mov
movs
jb
mov
inc
pop
ss
adc
loop
das
aam
cmp
mov
mov
fiadd
test
inc
outs
mov
aam
cmc
(bad)
aas
sbb
push
popf
cmps
stos
loope
xchg
scas
inc
out
push
retw
sbb
push
cmp
dec
ja
aas
outs
jge
inc
ss
(bad)
xchg
retf
stc
xchg
xchg
sub
mov
and
add
pop
out
mov
and
jno
in
sub
or
imul
dec
xchg
call
sahf
pusha
sub
mov
out
sbb
dec
shl
sbb
test
mov
ret
push
ja
shl
fild
and
dec
xchg
mov
xor
sub
aaa
(bad)
out
xchg
rcl
inc
addr16
inc
sbb
mov
idiv
inc
dec
fmul
ror
xchg
push
and
cmps
iret
ror
add
pop
hlt
hlt
add
cmps
rcl
mov
jmp
xchg
adc
mov
int3
pop
fisub
cwde
stc
adc
ss
sahf
aad
(bad)
xchg
ja
cwde
les
jb
mov
adc
aad
in
xchg
mov
adc
push
push
ficom
cmps
jo
and
dec
xchg
ja
aad
and
jge
mov
arpl
jp
addr16
adc
jg
jbe
pop
sub
push
movs
(bad)
in
in
add
xor
daa
(bad)
mov
mov
addr16
shl
aad
mov
lock
loopne
fldenv
xor
ins
sub
add
neg
and
call
test
test
xor
mov
push
xchg
push
dec
repz
aam
iret
fcmovbe
mov
adc
or
jle
and
aaa
add
cmps
cdq
adc
daa
shl
int3
cmps
(bad)
xchg
rol
mov
int3
inc
adc
(bad)
call
sar
inc
fs
retf
stos
xchg
aad
ja
lds
loope
mov
adc
push
xor
daa
rcl
std
dec
xor
fidiv
inc
mov
stos
(bad)
mov
and
and
jb
retf
neg
xchg
xchg
imul
cmp
xchg
mul
sub
jae
in
jbe
aas
inc
aam
(bad)
(bad)
xchg
ins
pop
mov
mov
inc
lds
sub
ror
fs
out
mov
sub
cmp
sti
daa
pop
pop
scas
cmp
aaa
gs
sbb
sti
shl
or
inc
or
add
cmps
xchg
sub
retf
adc
das
retf
sbb
jnp
cmps
fst
pop
enter
(bad)
xor
jb
in
dec
xchg
fwait
sti
scas
push
inc
mov
out
push
loope
mov
ffree
add
mov
sbb
jb
sar
aaa
stos
sub
sub
(bad)
push
fs
push
jmp
mov
mov
xor
in
ins
add
ins
or
or
add
movs
jmp
in
mov
repz
dec
inc
push
retf
aaa
cmc
or
fdiv
xor
fld
jo
arpl
das
push
(bad)
adc
push
bound
adc
(bad)
enter
fnstsw
loop
in
call
pop
out
lds
pop
xor
into
cmp
xchg
icebp
sbb
jmp
inc
mov
cld
and
adc
jae
sbb
xor
jge
pop
out
movs
xor
mov
stos
ins
shl
jne
sub
push
cs
xchg
xchg
inc
movhps
ror
and
cmp
xor
push
add
test
inc
mov
and
xchg
sub
cld
xor
push
adc
inc
dec
stos
xor
cmc
ret
fist
hlt
cli
not
push
push
ficomp
test
ins
push
sbb
mov
cmps
push
(bad)
in
xchg
aaa
fiadd
out
jg
sahf
xor
(bad)
cmps
pop
pop
adc
sbb
xor
mov
pop
ins
jp
pop
xor
cmc
retf
xor
add
jecxz
stos
jle
xchg
test
cmps
imul
cmp
fild
(bad)
std
inc
bound
ins
dec
jb
stc
fwait
xchg
mov
mov
rcl
arpl
adc
out
and
push
pop
(bad)
sub
test
mov
push
test
(bad)
movd
cmp
fwait
push
mov
adc
scas
cmp
movs
xlat
cmps
or
aad
movs
scas
push
sti
mov
call
fcom
call
popa
pop
std
mov
mov
arpl
cwde
cwde
add
std
or
shr
dec
pop
lock
(bad)
ror
push
cdq
mov
or
jl
pop
outs
jb
jge
sub
arpl
adc
lahf
xchg
test
or
arpl
shl
push
pop
les
adc
lea
mov
push
aam
sbb
mov
loope
aaa
div
int
popa
xchg
adc
imul
inc
jae
xor
mov
das
inc
sub
mov
movs
repz
neg
inc
mov
(bad)
cmps
dec
inc
xor
pop
repz
sbb
mov
jb
movs
imul
and
xchg
and
cld
add
jne
ret
cmps
jmp
push
pop
icebp
inc
(bad)
and
dec
push
das
outs
xchg
(bad)
jns
inc
stos
clc
outs
xchg
push
ret
mov
cdq
div
ins
push
dec
fs
cmp
xor
inc
loopne
jl
adc
pop
aas
and
fnstsw
into
jae
add
and
mul
dec
hlt
call
aaa
movs
retf
sub
daa
sub
xor
pop
retf
ins
test
sbb
test
and
lds
sub
into
ins
int3
mov
dec
mov
repnz
jae
jo
sbb
daa
test
add
xor
fbstp
dec
fwait
mov
or
push
xlat
jb
mov
dec
mov
bnd
not
xor
jae
or
jmp
xchg
push
push
popf
sub
pop
pusha
ds
ins
dec
iret
jmp
add
cmps
adc
mov
repnz
test
pushf
pop
cmps
es
pop
in
mov
cwde
(bad)
mov
dec
(bad)
xchg
push
daa
js
cs
sub
push
adc
xchg
adc
adc
ins
ins
lea
mov
mov
sub
dec
test
ret
jo
nop
cmc
out
jecxz
inc
enter
mov
push
sar
fwait
or
ins
(bad)
cmp
and
push
aam
aam
cmps
jmp
addr16
push
jbe
xchg
cmps
pop
outs
bound
push
sub
sub
test
push
ja
xchg
mov
idiv
enter
vxorps
cmp
mov
dec
retf
cmp
mov
pop
inc
out
sbb
and
(bad)
add
in
fistp
jbe
cmp
add
jne
movs
fidiv
sbb
pop
rol
neg
scas
in
jmp
call
idiv
or
jl
hlt
int
outs
out
dec
cld
push
ds
sbb
dec
mov
ret
rcr
(bad)
jmp
push
out
(bad)
(bad)
or
xchg
stos
cld
aam
icebp
inc
(bad)
call
ja
(bad)
aad
xor
mov
imul
mov
push
jns
inc
bound
or
movs
ins
movs
cmp
cmps
xchg
xor
ja
add
fdivr
add
(bad)
out
sbb
sub
jp
test
push
ss
sub
ja
outs
xlat
cmp
in
push
xchg
xchg
outs
mov
(bad)
popf
sub
inc
adc
add
add
sub
push
adc
mov
shl
push
or
fcomp
xor
add
ja
(bad)
or
jne
push
aad
test
out
cmps
or
pop
xlat
cmc
or
ins
push
out
js
xor
mov
call
xchg
sub
pop
dec
pop
push
adc
aaa
jmp
and
sbb
rcr
sar
xor
in
mov
ret
push
retf
jne
mov
add
or
push
(bad)
imul
imul
cmc
pop
gs
or
xchg
jne
icebp
pop
push
movs
mov
rol
mov
adc
es
sub
rol
xchg
les
jle
add
mov
fcmovne
push
mov
jecxz
pop
cdq
addr16
and
add
loope
inc
push
rcr
adc
fwait
pusha
push
scas
mov
pop
xchg
cmc
in
mov
aaa
push
jns
mov
in
adc
data16
test
mov
rol
dec
jmp
pushf
mov
pop
mov
mov
lea
mov
inc
mov
icebp
push
test
mov
sub
jo
daa
(bad)
mov
xchg
push
jecxz
xlat
jno
lods
les
dec
inc
test
fnstsw
aad
push
sub
pshufw
sahf
jmp
movs
sub
dec
inc
jno
gs
dec
and
add
jne
dec
outs
mov
dec
addr16
jge
test
ret
pop
outs
adc
gs
jmp
inc
lahf
mov
inc
push
mov
xor
pop
in
outs
movs
test
or
(bad)
xchg
xor
push
adc
pusha
adc
div
bound
jnp
(bad)
outs
test
scas
icebp
push
in
std
push
lods
mov
pop
mov
fld
aad
jo
cmc
ja
es
adc
fldenv
inc
sub
push
movs
(bad)
fild
fnstcw
shl
sbb
xchg
jg
lahf
and
jecxz
repz
imul
mov
(bad)
and
cmp
sar
push
out
pop
je
in
ds
(bad)
hlt
pop
ins
mov
and
xchg
add
ficomp
loop
inc
retfw
repnz
aaa
push
cmp
mov
mov
push
nop
ja
adc
aam
bound
inc
or
je
lahf
sub
dec
mov
sar
stos
add
pop
push
pop
cdq
adc
xor
xlat
jb
jmp
push
adc
cmp
(bad)
mov
stos
adc
cmps
dec
popa
mov
mov
ds
push
push
repz
push
pop
push
pop
test
addr16
movs
sti
fs
xor
dec
dec
out
cmp
idiv
je
push
fneni(8087
jo
pop
mov
loop
push
xchg
repnz
int3
xor
jbe
xchg
jnp
bound
mov
mov
and
in
in
mov
in
rcl
mov
mov
lahf
jge
cmp
and
xchg
aaa
xchg
jne
sbb
jp
push
rol
add
and
sti
shr
inc
fs
pop
cdq
(bad)
(bad)
pop
mov
popf
inc
dec
mov
add
adc
mov
test
inc
push
leave
xor
jmp
push
xchg
sti
mov
ret
and
cmp
stc
neg
jns
push
cmp
out
mov
push
test
pushf
add
addr16
out
cmp
push
(bad)
pop
pop
dec
retf
fmul
jae
ja
push
ss
cmp
push
(bad)
mov
lods
neg
add
inc
inc
aam
stos
pusha
push
mov
cmp
xchg
daa
cmc
jecxz
push
mov
push
mov
mov
inc
dec
cli
sbb
sti
sbb
xchg
mov
adc
jmp
repnz
jp
jl
sbb
cmc
pushf
imul
test
push
out
xor
sub
repz
popf
in
push
jl
inc
push
mov
dec
test
dec
or
aaa
scas
mov
xor
call
push
in
repnz
cs
ja
adc
scas
inc
push
inc
jne
cmps
xor
or
test
addr16
sbb
das
adc
sub
pop
repz
and
test
ffree
pop
cld
(bad)
(bad)
fucomip
mov
enter
test
sub
imul
fcomp
cdq
mov
mov
aam
aas
push
pop
jae
aam
push
mov
lea
in
shr
cmp
sbb
pop
in
out
jns
push
xor
sbb
data16
jns
add
(bad)
mov
sahf
test
out
imul
ja
(bad)
out
push
sbb
stos
les
cmp
jle
neg
jmp
xor
cmps
xchg
cmp
in
hlt
in
push
daa
mov
xchg
not
add
push
dec
and
xor
push
mov
stos
test
popf
mov
and
xchg
rcr
mov
or
mov
addr16
mov
jmp
xchg
inc
inc
sub
aaa
(bad)
in
mov
pop
aaa
test
jmp
sbb
inc
xor
stos
mov
pop
aad
xchg
imul
mov
enter
loope
je
add
std
sbb
or
int
add
(bad)
dec
sub
inc
fiadd
enter
cmc
mov
loop
inc
fimul
dec
mov
and
push
cmps
add
cmp
inc
xchg
add
ss
addr16
adc
adc
aaa
lea
jmp
dec
adc
xor
sub
repz
sar
xchg
push
cmp
mov
add
(bad)
shl
cmp
shl
daa
les
and
dec
popa
out
mov
and
push
arpl
lahf
daa
(bad)
movs
add
or
addr16
daa
mov
xchg
(bad)
popf
or
popf
fwait
and
es
push
iret
loope
xchg
jb
retf
cmp
fstp
xchg
lds
inc
mov
das
dec
int3
aam
and
mov
pop
xchg
test
xchg
sub
int3
fs
mov
loop
inc
daa
ror
push
xchg
mov
xor
movs
push
cmp
inc
pop
push
add
icebp
fwait
sahf
pop
dec
jecxz
(bad)
fadd
mov
les
cmp
inc
lahf
adc
test
adc
xchg
sbb
cmp
mov
out
push
loope
mov
imul
retf
push
pusha
inc
mov
into
cli
or
movs
jg
jne
sub
lds
imul
out
loope
ja
aad
cmc
das
push
push
xchg
hlt
xchg
cmc
mov
mov
pop
test
cmp
std
aam
jns
mov
sbb
mov
sub
cmc
shl
icebp
in
mov
pop
or
retf
jnp
mov
mov
stc
pop
pop
nop
imul
shr
mov
mov
push
pop
push
mov
add
push
xchg
or
pop
inc
jns
inc
pop
icebp
loopne
xchg
or
scas
int
inc
aaa
cli
dec
sbb
jb
xor
adc
loope
mov
xchg
mov
movs
xor
mov
push
mov
or
pop
movs
cmc
pop
add
mov
enter
psubsw
adc
ss
xor
pop
pop
xor
js
jp
fbstp
cmp
add
jg
pop
out
or
inc
loope
xor
dec
or
add
push
or
mov
enter
test
xlat
cs
jle
cdq
outs
mov
cmc
and
mov
xlat
aad
fadd
cmc
addr16
icebp
mov
add
mov
inc
scas
jae
adc
jecxz
xchg
inc
imul
pushf
inc
mov
push
and
jge
and
jne
leave
or
mov
popa
cmp
dec
cmps
jp
xor
add
jae
xor
dec
nop
xchg
and
or
add
push
inc
pop
jo
mov
jns
dec
sahf
mov
iret
(bad)
inc
push
xchg
and
jle
jbe
pop
cmp
aaa
in
mov
lods
mov
(bad)
sub
sbb
fmulp
(bad)
xchg
xchg
add
adc
jecxz
repz
ret
rol
jne
and
jbe
inc
gs
div
jne
push
ret
pop
rcl
mov
pushf
std
inc
mov
push
aad
push
je
sbb
movs
inc
pop
push
pop
(bad)
mov
test
push
dec
test
add
sbb
mov
mov
in
rcr
or
hlt
cmp
xor
mov
in
popf
inc
push
xchg
cdq
jmp
aam
cmc
sbb
xor
cmps
and
jno
sub
mov
ror
xor
in
loop
xlat
ret
call
and
and
data16
sti
pop
fs
mov
es
adc
jge
fucomip
xor
pop
es
add
add
xchg
sbb
ja
les
mov
xlat
daa
pop
inc
(bad)
dec
jmp
arpl
sub
stos
adc
shl
dec
add
addr16
popa
xchg
dec
cmp
repnz
mov
cmps
or
inc
clc
mov
popa
xor
inc
test
inc
outs
push
jge
xor
jmp
xor
int
mov
mov
ret
ret
sbb
push
adc
adc
inc
dec
mov
mov
inc
and
or
and
jg
test
hlt
je
mov
leave
fst
dec
cmp
movs
jns
rcl
mov
mov
adc
push
cmp
jb
push
daa
jl
jmp
movs
mov
call
xor
aas
pop
shl
pop
xor
vxorps
arpl
adc
inc
and
clc
push
fucomp
cmps
lea
jmp
and
mov
lods
mov
adc
in
cmp
inc
sbb
pop
movups
jmp
pop
xchg
cs
fild
test
add
out
inc
cmp
push
jno
sbb
mov
pop
cmp
dec
cmp
add
cld
and
cmc
lea
sbb
gs
cmps
xlat
xor
shl
push
das
outs
sub
arpl
mov
adc
gs
out
and
cmp
or
daa
push
hlt
movs
jp
sbb
and
stos
push
cmp
jo
daa
pop
(bad)
and
outs
sahf
dec
cdq
lock
adc
sub
or
test
pop
and
ret
adc
cmps
push
inc
fistp
daa
imul
xchg
mov
pop
xchg
xchg
test
lock
fs
mov
mov
mov
out
arpl
mov
ds
mov
mov
push
fbstp
imul
daa
jp
dec
adc
nop
inc
sbb
cmc
rcl
and
in
inc
mov
lods
pop
addr16
mov
mov
loope
retf
adc
and
jecxz
call
in
fwait
std
and
fdivr
in
add
das
popa
jb
iret
or
xchg
and
fld
xchg
(bad)
sar
add
and
mov
mov
xor
(bad)
ficomp
cwde
xchg
mul
mov
outs
jne
ds
(bad)
fs
push
fwait
test
mov
test
add
aas
test
popa
test
dec
add
pusha
mov
test
jecxz
call
pop
sub
pusha
dec
daa
je
xchg
lods
in
outs
push
xchg
or
mov
loope
ja
les
mov
lods
push
pop
mov
aam
adc
out
push
cmc
mov
pop
add
aad
adc
sbb
cmps
sbb
pop
call
jmp
inc
shl
xchg
and
jb
out
push
iret
push
ins
adc
sub
mov
cmps
addr16
cmc
mov
lds
pop
cmc
scas
sbb
adc
das
ja
and
sub
les
cmp
inc
sbb
inc
inc
je
aas
pop
ret
cmp
(bad)
(bad)
mov
mov
das
xchg
inc
aaa
nop
(bad)
sub
cmp
pushf
jnp
addr16
jno
adc
repz
(bad)
ja
cwde
out
scas
outs
fnstenv
or
aaa
mov
ficom
xor
imul
jmp
sbb
jbe
xchg
and
das
lods
mov
fcomp
xchg
push
xchg
mov
ss
sar
imul
test
loope
cmps
(bad)
cdq
jns
sub
inc
mov
xchg
jbe
test
lock
mov
mov
mov
xor
jne
movs
ins
xor
retfw
aam
lds
cmc
pushf
sti
cwde
outs
test
in
pop
mul
sub
popa
cdq
bound
(bad)
jl
add
idiv
addr16
hlt
int
pop
dec
repnz
sub
imul
xchg
enter
aas
xchg
ds
das
mov
stos
adc
(bad)
rcr
push
sbb
sub
xchg
adc
push
sbb
movs
cmp
ja
pop
xchg
inc
(bad)
repz
dec
add
and
push
lea
in
mov
cdq
and
mov
mov
(bad)
pop
rcl
xlat
jno
dec
mov
test
(bad)
jl
xor
in
jmp
sahf
mov
xor
push
out
adc
int3
(bad)
pop
in
call
jmp
mov
xchg
add
in
fwait
pop
sti
outs
add
fnstcw
cli
push
pop
ja
addr16
imul
push
daa
ins
dec
jmp
xchg
int
lods
rol
jns
gs
sbb
imul
sub
rcr
add
xor
dec
int3
mov
and
pop
xchg
sti
push
sub
lds
adc
adc
movs
adc
(bad)
imul
add
dec
je
scas
rcl
xchg
dec
les
(bad)
fstp
cld
aad
leave
data16
int
mov
inc
dec
daa
jns
add
adc
inc
jne
cmps
loopne
bound
push
ds
pcmpgtw
ja
jb
cmp
jmp
cmc
and
xchg
mov
mov
push
pop
pop
cdq
imul
xor
ret
call
fisttp
in
sub
daa
fidivr
jge
in
push
loope
inc
shl
push
add
xchg
cmps
mov
lock
push
jle
pusha
les
and
cwde
mov
push
sub
sub
out
and
add
sbb
gs
les
pop
cmps
retf
je
xchg
add
or
push
repz
sbb
or
cmc
adc
xchg
out
adc
addr16
or
inc
in
xchg
aaa
dec
aaa
je
shl
sub
inc
fstp
cli
sub
or
xchg
pop
iret
push
into
lds
mul
push
push
aas
or
push
add
inc
xchg
or
addr16
out
iret
in
in
js
dec
inc
mov
jg
cmp
fs
daa
cmps
lea
test
and
mov
mov
test
cmps
jge
adc
pop
bound
mov
(bad)
dec
aaa
xor
inc
or
inc
jl
sub
daa
push
sbb
add
inc
ja
mul
xchg
inc
loop
leave
push
pop
xchg
mov
jae
sub
shl
ret
sbb
int
test
mov
or
gs
or
gs
hlt
fbstp
mov
loope
retf
pop
add
and
cmps
aad
xor
or
sti
cld
test
add
mov
outs
adc
add
xchg
push
xchg
test
in
and
push
out
dec
popf
cmp
push
or
jns
inc
cmps
imul
or
sti
mov
popf
aam
out
push
retf
out
sbb
sub
dec
(bad)
cmp
clc
add
adc
pop
sti
xor
mov
sbb
out
jmp
popa
scas
outs
cmps
mov
xlat
sub
cmp
lea
cmps
fidiv
pop
rep
add
aas
mov
int
into
lods
xchg
(bad)
clc
mov
jne
not
inc
push
xchg
sub
push
pop
xchg
cmp
cmps
gs
adc
addr16
ja
cmps
xor
pop
mov
cmps
rcr
movs
adc
je
inc
das
(bad)
fist
dec
adc
out
je
mov
jne
sbb
jg
fstp
pop
fst
es
rcr
fst
mov
push
inc
cmps
stc
xchg
ret
rol
shl
nop
adc
adc
dec
mov
add
cmps
push
xchg
adc
push
ins
and
lods
pushf
pop
pop
adc
and
and
cmps
xor
lea
xchg
cwde
jmp
sub
push
loope
cmps
adc
div
xor
fs
xchg
repnz
adc
xor
(bad)
or
jo
std
sti
jnp
test
mov
mov
std
xchg
ja
pop
or
or
test
xor
mov
dec
inc
cmp
mul
xor
push
xor
xchg
fs
adc
cmps
loope
aam
jmp
hlt
lods
pop
pop
jne
stos
fild
add
jno
cs
pop
fidiv
adc
adc
add
cmps
test
cmps
mov
adc
je
push
add
push
mov
mov
cmps
cmps
(bad)
sub
jnp
add
xchg
loopne
outs
icebp
aad
add
icebp
mov
lods
fistp
std
addr16
jns
ror
test
shr
add
int3
(bad)
jnp
and
push
jecxz
inc
xor
xor
cli
mov
dec
or
jmp
arpl
fiadd
js
pop
test
mov
mov
xchg
shr
xchg
push
or
xor
xchg
jnp
ror
xchg
sti
ret
mov
aad
fdiv
sbb
mov
lods
daa
test
inc
dec
(bad)
out
cmps
sub
lds
cmp
cmc
in
clc
or
push
outs
dec
xchg
mov
inc
ret
push
xchg
ret
(bad)
xchg
push
mov
add
ja
call
jne
pop
mov
sahf
mov
fldcw
cmp
imul
popa
jns
pop
push
push
jno
and
push
inc
sub
add
movs
sub
cmps
adc
cmc
lea
xor
pop
not
sub
mov
push
jecxz
lea
pop
fmul
and
je
mov
imul
fcom
les
shl
inc
jnp
dec
jae
jae
test
inc
dec
call
mov
outs
jl
push
cmp
retf
sub
add
jns
outs
int
dec
push
and
or
mov
cli
loop
es
adc
fnstenv
xlat
imul
push
(bad)
mov
mov
arpl
and
jbe
jo
out
imul
push
xchg
xor
sub
xchg
aad
adc
push
inc
inc
loope
std
cmps
pop
fs
aaa
test
std
ror
or
xchg
mov
and
dec
mov
icebp
fs
mov
xchg
dec
aam
fistp
pop
cs
jbe
jo
jae
sub
cmps
xlat
push
popa
jae
mov
out
data16
sbb
and
inc
sub
sub
ror
xor
std
cli
lea
cmp
xor
jp
push
jg
and
int
pop
add
dec
aad
jp
popf
sti
pushf
mov
push
pop
inc
mov
mov
push
out
(bad)
bound
daa
inc
jmp
sub
xor
xchg
out
mov
xchg
mov
idiv
jl
das
pop
bound
fsubr
pop
xor
(bad)
push
mov
push
ret
aaa
xor
cmp
dec
pop
pop
xor
imul
(bad)
enter
fucomp
pop
or
cmp
pop
add
aaa
dec
ja
add
out
lods
inc
inc
imul
icebp
mov
ror
shr
pusha
rol
inc
cmp
xor
mov
cli
xchg
and
in
test
ins
add
jb
cmp
sub
push
mov
loopne
cmps
mov
(bad)
(bad)
sbb
jne
jno
popf
push
cmp
movs
and
jbe
xchg
push
and
(bad)
mov
imul
popa
call
icebp
mov
pop
cmp
mov
sbb
and
cmp
push
pushf
add
and
or
and
sub
in
inc
(bad)
mov
xlat
dec
or
and
adc
xchg
lods
mov
ret
loop
inc
xchg
mov
xchg
cmps
jle
lods
fnstenv
and
test
dec
xchg
jecxz
out
push
pop
push
aaa
push
clc
mov
push
xor
stos
mov
jmp
ss
pop
in
jno
adc
addr16
xchg
inc
dec
les
adc
sbb
bound
enter
adc
mov
cld
xchg
push
xchg
xchg
(bad)
jbe
xchg
scas
je
and
pop
mov
jmp
mov
mov
icebp
(bad)
in
adc
das
sub
not
cwde
xor
pushf
dec
xchg
mov
ds
movs
jecxz
push
ja
adc
out
push
and
adc
jle
and
leave
std
loopne
ins
out
mov
or
cwde
push
popf
daa
pushf
xor
inc
jo
fisubr
shl
cmps
ret
push
push
fcmovbe
pop
aam
pop
add
mov
mov
int3
inc
mov
(bad)
xor
add
or
icebp
push
push
adc
ror
push
jno
div
ja
test
pushf
fadd
cmp
xor
rol
imul
mov
push
movs
ja
(bad)
adc
loop
jmp
xor
outs
sahf
loopne
sub
cmps
mov
jge
mov
pop
arpl
std
enter
xchg
ins
xor
rol
std
imul
inc
mov
push
cs
in
repz
aaa
and
push
xlat
pop
add
outs
xor
cli
jno
jbe
lds
data16
imul
adc
aad
in
in
sub
inc
add
mov
push
push
jl
aad
xor
mov
adc
(bad)
ret
iret
movs
repnz
ret
out
bound
pop
ss
push
pop
ja
ds
mov
movs
mov
mov
pop
mov
adc
shl
movs
dec
xlat
xchg
push
and
xchg
call
arpl
and
and
xlat
adc
jmp
daa
xor
jbe
arpl
call
js
ins
adc
mov
add
mov
hlt
aad
les
loopne
dec
es
imul
daa
xchg
cmp
mul
push
xor
jmp
in
inc
adc
add
data16
push
int
mov
cmp
cli
or
fs
jmp
mov
or
addr16
cmp
in
add
xchg
test
clc
push
jne
fs
std
fisttp
fmul
out
adc
add
add
inc
pop
data16
cmp
dec
idiv
in
add
jbe
inc
fild
nop
adc
(bad)
pusha
neg
or
mov
add
or
xor
loopne
jecxz
scas
rol
jmp
cmp
out
std
nop
sti
in
div
or
bound
aas
call
mov
test
ins
sub
gs
in
inc
push
push
xor
cs
lods
xor
mov
je
xchg
lds
or
mov
adc
and
fadd
das
xchg
test
mov
dec
mov
xchg
inc
adc
call
inc
out
fcomip
xchg
scas
cli
mov
xchg
je
mov
inc
pop
cmp
iret
xor
push
sbb
test
sub
pop
cld
ror
arpl
mov
mov
js
mov
std
mov
dec
in
and
lock
fstp
les
cmps
and
stos
int
mov
mov
and
sbb
je
cmp
outs
movs
jp
push
push
lock
lahf
pop
lods
jbe
push
xlat
dec
mov
out
mov
push
in
jns
mov
out
mov
data16
test
aas
mov
stos
xchg
cmc
int
mov
xchg
pop
aad
xlat
xchg
aaa
(bad)
aad
ror
mov
mov
mov
sbb
sub
push
lahf
cmp
and
dec
sub
adc
sub
push
mov
les
stos
popf
or
sub
mov
movs
int
mov
and
aad
sub
lods
daa
mov
ret
and
push
adc
adc
aad
gs
and
dec
cli
sub
rcl
add
fcomp
push
mov
ss
and
(bad)
push
movs
cmps
aad
add
pop
fisub
add
popf
adc
ss
popa
mov
sub
dec
pop
aaa
xchg
inc
jb
jle
sub
jbe
in
xchg
cmc
retf
push
lock
in
in
imul
not
shl
nop
jg
pop
xlat
outs
and
es
outs
dec
xchg
scas
add
inc
xchg
int3
outs
cli
icebp
imul
(bad)
sub
mov
pusha
cmp
pop
cmps
mov
push
pop
push
test
stc
xor
fistp
add
es
pop
xlat
xor
cmp
and
dec
pop
ja
xchg
jo
out
in
cld
mov
and
lds
push
outs
aaa
or
in
mov
in
xchg
retf
adc
bound
ins
movs
xor
jns
cli
inc
pop
push
adc
popf
fwait
aad
in
mov
out
(bad)
inc
shl
ror
stos
and
js
jg
mov
outs
cmp
pop
shl
xchg
cmp
hlt
sub
xor
out
inc
lock
pop
rcl
pop
lahf
inc
inc
and
push
(bad)
stc
(bad)
(bad)
xor
pop
movs
cmps
retf
mov
push
xlat
jmp
jmp
in
jne
jne
hlt
xor
rcl
lods
mov
jae
out
pop
sub
dec
(bad)
pop
rol
inc
xchg
or
mov
sbb
das
xchg
push
add
sahf
cmc
test
jmp
dec
pop
push
and
sbb
stc
xlat
cmp
(bad)
aad
repnz
jb
jns
cmps
retf
jno
adc
rcr
push
fwait
ret
nop
aaa
inc
xchg
scas
daa
sub
movhps
fistp
or
loope
mov
popf
ret
pop
imul
loopne
mov
xor
cmp
mov
lds
(bad)
sbb
add
xchg
scas
in
das
xchg
mov
pop
fs
xor
ins
(bad)
jns
adc
jns
ins
loopne
lahf
vandpd
stos
cmp
xlat
inc
les
fnstsw
ja
repnz
xchg
inc
les
inc
ss
xor
daa
sbb
xchg
mov
mov
inc
lods
xchg
push
jge
mov
in
inc
aad
popa
push
gs
push
repz
mov
mov
or
cmps
bound
mov
cmps
jecxz
repz
sahf
push
jo
xlat
fcom
mov
dec
xor
cmp
push
out
add
retf
stc
repnz
fdiv
push
(bad)
and
setnp
and
aaa
xor
(bad)
adc
aaa
cs
sub
jl
mov
loop
or
dec
aam
in
pop
xor
sub
mov
aad
xchg
neg
retf
dec
cmps
sbb
jmp
repnz
jbe
sub
xor
int3
dec
(bad)
or
xor
add
test
ja
retf
xlat
xchg
fwait
call
cs
(bad)
iret
ja
leave
int
sti
test
xchg
jbe
pop
sar
jb
addr16
loop
pop
sbb
inc
mov
(bad)
cmc
(bad)
mov
in
fs
les
xchg
into
in
jg
xchg
add
push
addr16
mov
(bad)
fs
sbb
addr16
dec
stos
pop
pop
xchg
out
adc
add
test
fisttp
loopne
inc
addr16
adc
pop
push
push
rcr
mov
test
outs
fwait
jle
inc
mov
lahf
xor
imul
mov
arpl
fwait
mov
fnstsw
adc
cmps
xor
adc
cdq
lock
gs
push
mov
(bad)
jmp
push
aaa
mov
sub
xor
(bad)
(bad)
bound
arpl
add
jecxz
lea
outs
dec
(bad)
pop
out
scas
mov
add
add
xlat
jno
aas
push
movs
or
call
mov
(bad)
jmp
loop
adc
xchg
ror
jmp
dec
xchg
push
ins
rol
aam
pop
mov
popa
outs
popf
dec
push
mov
sbb
pop
out
(bad)
test
xor
cmp
in
call
push
xor
repnz
push
dec
push
add
inc
push
pop
dec
in
cmp
es
data16
sub
mov
push
stos
fidiv
or
sar
imul
mov
fldcw
ss
shl
push
adc
call
mov
addr16
push
bound
int
test
or
mov
les
mov
in
adc
lahf
les
push
xchg
xor
jno
xchg
cmps
(bad)
add
jmp
push
movs
test
pushf
aad
mov
jae
stos
pop
sbb
and
rol
dec
hlt
sbb
dec
sbb
out
jne
jb
in
adc
fmul
mov
push
(bad)
sar
in
sub
popf
sbb
push
xor
stos
sbb
ds
clc
ret
ins
cdq
dec
repz
fwait
or
dec
lahf
pop
sub
out
xchg
mov
mov
cmp
int3
mov
(bad)
ret
loope
lods
out
xor
sbb
jno
sub
mov
cmps
hlt
lds
or
rol
xchg
jno
in
jne
leave
dec
push
push
js
fcmovnbe
push
sbb
push
aad
sub
dec
hlt
sbb
(bad)
gs
inc
and
iret
jg
xchg
sbb
hlt
mov
imul
(bad)
out
inc
or
addr16
jecxz
sub
jbe
mov
ret
lods
xchg
xchg
xor
jecxz
jl
test
in
dec
jp
(bad)
repnz
push
ins
daa
mov
stos
int3
jge
fwait
mov
mov
xor
jle
jns
or
jno
leave
clc
cmp
mov
frstor
mov
xchg
jno
inc
push
(bad)
cmc
add
dec
adc
es
sub
ds
push
out
ret
vandps
and
aaa
xchg
push
cld
jns
adc
cdq
repz
mov
xor
not
and
jmp
fldcw
unpckhps
jnp
jle
out
mov
jae
add
sub
jb
or
gs
pushf
aam
push
gs
scas
neg
push
cmp
(bad)
add
iret
sub
xor
ss
xor
movs
daa
lahf
div
jne
movs
jmp
daa
jle
add
add
ins
jno
sar
push
lds
sar
inc
and
lea
retf
cvtpi2ps
lds
test
test
(bad)
sbb
push
cld
and
mov
push
push
(bad)
ins
ss
test
or
adc
inc
aaa
push
inc
imul
mov
enter
shl
mov
xchg
test
pop
push
iret
not
in
stos
lods
imul
fbstp
and
jp
inc
ror
mov
xchg
scas
int
or
push
and
aas
push
dec
ins
out
(bad)
cdq
int
aad
lods
and
dec
dec
pop
test
jge
repz
xchg
pop
repnz
call
(bad)
(bad)
hlt
(bad)
fadd
xor
xor
retf
push
push
push
fs
mov
les
in
jmp
hlt
dec
push
cdq
jg
into
push
dec
(bad)
out
dec
dec
loopne
fisttp
adc
(bad)
or
mov
cmp
fsubr
ja
push
jnp
mov
gs
ret
aas
jge
jnp
test
imul
movs
sahf
cmp
inc
and
(bad)
dec
outs
adc
mov
cld
and
loope
out
xchg
xchg
dec
mov
cmp
std
jg
dec
jb
popa
fadd
xlat
xchg
xchg
pushf
ffree
mov
pmaddwd
loop
test
repnz
xchg
xor
adc
lods
mov
cmp
aad
sub
pop
xor
push
fidiv
or
inc
xor
in
(bad)
out
mov
jmp
gs
push
jne
sub
stos
jb
cs
fisub
(bad)
mov
xorps
push
mov
dec
and
lahf
pushf
mov
(bad)
mov
imul
cs
xchg
rcl
pop
fstp
mov
out
gs
ret
pop
or
pop
jbe
data16
mov
and
mov
cmp
and
into
xor
mov
test
pop
gs
dec
mov
and
lahf
or
test
(bad)
and
jb
jne
movs
inc
jg
xchg
aam
fild
or
in
gs
out
add
rcl
out
(bad)
es
popf
xchg
xchg
mov
stc
sti
bound
inc
pushf
adc
cmp
nop
cmps
test
mov
test
out
push
(bad)
aam
mov
out
pop
outs
movs
cmps
(bad)
out
daa
sub
push
(bad)
mov
sbb
idiv
fwait
addr16
outs
and
or
std
jno
aaa
pop
sub
in
hlt
mov
in
inc
movs
hlt
outs
push
sub
fadd
mov
cmp
dec
movs
in
or
mov
hlt
mov
cmps
test
cwde
push
inc
lods
mov
cmp
adc
das
loopne
adc
jg
pop
sbb
ret
mov
jae
cmps
test
inc
xor
mov
jmp
xlat
mov
pop
push
xchg
sbb
inc
mov
mov
hlt
jb
push
cwde
(bad)
fcmovbe
add
sub
fs
cmp
cld
aad
sbb
cmp
scas
(bad)
shl
xor
pop
gs
adc
scas
ret
or
adc
inc
cmc
xchg
xcrypt-cbc
cmps
aad
cmp
xchg
pop
lock
xor
jmp
push
jne
ins
pop
adc
dec
ja
lds
xor
jmp
inc
pop
cmp
inc
(bad)
or
data16
and
inc
sbb
push
daa
jne
gs
mov
and
das
cwde
repz
das
xor
jne
int
ret
dec
je
and
pop
test
sbb
aaa
sub
and
mov
test
iret
xchg
std
and
dec
adc
aam
rcr
inc
adc
in
in
ret
add
lds
xor
push
fs
test
(bad)
mov
loope
mov
lods
inc
arpl
and
ja
(bad)
aaa
daa
sbb
out
push
adc
shl
out
test
xchg
lock
jge
mov
and
les
mov
mov
pop
and
(bad)
or
xor
data16
ins
pop
pusha
xchg
push
out
mov
or
jb
sbb
data16
jmp
pop
in
outs
xchg
cmp
je
dec
test
pop
lock
or
pop
and
add
repz
inc
shrd
in
pop
add
idiv
and
int
jns
push
mov
(bad)
imul
cmps
stc
inc
in
div
popf
mov
mov
adc
ds
mov
mov
mov
in
add
add
xchg
pop
push
mov
in
jl
lea
je
push
fistp
cld
jae
push
test
push
jns
imul
xor
sbb
jnp
jns
retf
push
and
cmp
xor
add
repz
push
popf
pop
sub
inc
adc
push
jmp
push
mov
pop
iret
(bad)
retf
or
cmps
ins
cmps
or
push
loope
cmp
out
mov
mov
push
test
inc
mov
fxch
add
push
sbb
jle
mov
jb
ss
cmc
loope
push
or
in
repz
jb
je
loope
xchg
es
mov
je
loope
(bad)
adc
rcl
lahf
lds
jecxz
or
mov
aas
test
mov
retf
jne
outs
hlt
jp
push
std
xor
mov
xchg
mov
cmp
imul
in
(bad)
imul
push
mov
dec
or
mov
test
sub
pop
repnz
test
mov
sti
push
cmp
push
pop
cdq
jb
adc
fwait
(bad)
mov
sar
sti
mov
dec
sbb
mov
xlat
mov
inc
arpl
mov
das
ss
push
shl
add
or
idiv
aaa
xchg
retf
mov
sub
xchg
jecxz
cld
mov
in
sbb
lds
xchg
in
add
cs
(bad)
test
mov
adc
es
cmp
lods
les
ret
pop
scas
int3
mov
add
inc
stc
dec
sub
jns
(bad)
lock
xchg
es
iret
mov
mov
scas
lock
lea
dec
sub
(bad)
cs
aas
test
mov
jns
loope
jbe
les
cmps
shl
adc
shl
sbb
shl
out
push
xchg
clc
jmp
cmp
lds
add
cli
jne
inc
jmp
and
pop
rcl
stos
aaa
nop
push
mov
std
or
stos
in
or
repz
lds
in
cmp
cmc
bound
js
inc
and
sub
loopne
fwait
mov
add
jae
xchg
push
inc
mov
jmp
je
cmp
mov
and
or
rcr
fldenv
xchg
ja
pop
dec
pop
jnp
add
mov
addr16
pop
(bad)
adc
push
inc
popa
bound
adc
sub
ds
mov
pop
daa
loope
pop
jmp
mov
mov
jmp
ret
sub
add
lahf
mov
and
and
adc
mov
add
cmp
bound
sub
enter
(bad)
pop
rol
(bad)
shl
or
xlat
jg
(bad)
push
mov
pop
xor
and
in
bound
and
cmc
cmp
xchg
and
mov
inc
outs
pusha
stc
mov
lods
scas
add
sar
inc
aaa
add
inc
daa
lods
inc
int
inc
adc
cmps
mov
push
and
jp
aad
pop
loop
push
and
(bad)
outs
dec
movs
xor
inc
mov
in
fst
mov
dec
jecxz
push
push
xchg
cmps
fcomp
mov
int
popa
out
int3
add
push
out
mov
mov
dec
lea
jle
mov
(bad)
cmp
in
add
gs
dec
(bad)
ror
mov
xlat
leave
xchg
xchg
iret
mov
outs
xor
mov
movs
rcl
loopne
in
add
mov
cdq
cmps
and
push
inc
adc
sub
mov
fwait
inc
jle
in
xchg
pop
(bad)
iret
jmp
test
loopne
mov
push
and
fwait
sub
add
imul
mov
(bad)
lahf
mov
scas
(bad)
xor
daa
movs
out
ja
pop
mov
xchg
(bad)
sub
loop
cmc
lahf
and
test
lahf
icebp
inc
addr16
sar
and
and
xchg
fbld
ret
test
lods
sub
call
jae
xor
addr16
sbb
sbb
test
fld
(bad)
pop
lods
clc
sbb
push
jle
gs
jns
shr
cwde
imul
(bad)
imul
bnd
add
cmp
scas
xchg
xor
inc
(bad)
fistp
jnp
leave
test
mov
stc
pop
xor
in
rcl
lock
xchg
xchg
lock
fs
ja
mov
add
pop
push
gs
inc
sbb
inc
pop
mov
dec
adc
punpcklbw
jle
dec
and
push
out
gs
cmps
push
inc
xor
movs
(bad)
test
dec
mov
in
(bad)
cmps
ss
push
out
xchg
in
dec
sbb
xlat
addr16
mov
pop
xor
dec
adc
daa
sbb
jl
or
cmc
jno
pop
push
adc
ins
lea
sbb
pop
hlt
shl
test
xchg
lds
arpl
or
add
out
aam
imul
cld
mov
mov
in
jo
dec
xor
outs
jge
aad
out
push
popf
les
pop
movs
inc
sti
stc
push
mov
adc
and
sbb
cmc
jbe
popa
jae
pop
dec
push
sub
mov
shr
mov
lahf
mov
clc
inc
movs
xchg
add
and
dec
add
cmps
mov
fidiv
aaa
adc
xchg
mov
or
repz
cmc
push
adc
mov
(bad)
jmp
jg
push
mov
jo
aad
outs
add
push
jmp
xchg
mov
shl
in
lods
adc
movs
and
or
mov
inc
movs
mov
not
lahf
and
mov
and
and
mov
popa
sbb
push
jne
pusha
in
mov
fwait
pop
lea
push
leave
cmp
jno
push
mov
xchg
push
in
add
(bad)
aam
and
cmp
add
add
in
jg
pop
xchg
xchg
pop
jb
push
xchg
aad
mov
(bad)
arpl
push
icebp
(bad)
gs
movs
mov
sahf
adc
push
jg
push
loopne
sub
push
scas
cmp
jae
mov
pop
or
in
push
adc
xlat
cmp
mov
inc
jecxz
rcl
add
mov
rcl
sub
lds
lock
mov
xor
xchg
mov
pusha
div
ja
leave
dec
push
repz
jp
mov
scas
push
xchg
jmp
sub
add
out
inc
ins
aad
data16
repnz
push
(bad)
mov
sbb
imul
push
jge
popa
and
jo
frstor
aaa
push
and
test
dec
out
jmp
pop
(bad)
push
sub
jmp
(bad)
int3
loopne
mov
in
inc
ins
out
add
xchg
pusha
inc
sub
popf
hlt
xor
xlat
mov
test
arpl
mov
mov
sub
add
mov
inc
pop
add
js
xchg
scas
and
mov
out
out
arpl
hlt
push
or
adc
inc
xchg
mov
cmp
addr16
sar
test
pop
test
popa
cmp
xor
inc
test
cwde
xor
in
xchg
rol
fidiv
cmp
jge
mov
push
je
push
pop
pop
cmps
jo
test
xchg
stc
call
not
cmp
fwait
lahf
inc
pop
ins
mov
gs
rcl
xchg
pop
call
nop
ins
les
scas
push
mov
mov
test
mov
(bad)
sub
dec
bound
jg
mov
jns
and
pop
push
movs
test
in
xchg
adc
rcl
mov
out
mov
mov
xchg
pop
fadd
jb
mov
lds
push
push
iret
sar
add
xchg
daa
xor
movs
mov
pop
loop
mov
loope
ja
add
fstp
sub
ins
push
inc
rol
mov
(bad)
(bad)
mov
xchg
ret
dec
lea
push
jge
xor
sar
sbb
pop
dec
mov
push
movs
jno
xlat
pop
rol
test
pop
fld
pop
ficomp
cmc
aas
mov
icebp
sub
ja
and
outs
rcl
repz
xchg
adc
adc
jb
xchg
xchg
mov
lods
addr16
in
rcl
mov
lock
xchg
push
cmp
jns
push
mov
shl
dec
(bad)
adc
cld
jg
mov
cmps
adc
and
adc
sbb
(bad)
aam
push
call
std
jp
xor
sar
loop
pop
adc
inc
xor
adc
push
nop
cwde
rcr
jecxz
(bad)
aad
pop
inc
repz
repz
nop
in
inc
xchg
lods
mov
enter
fdiv
test
shl
mov
into
aam
mov
into
fild
popa
lds
inc
mov
xchg
mov
out
sbb
lods
push
test
loop
cmc
(bad)
inc
jnp
xor
xor
jmp
addr16
lods
idiv
xchg
outs
and
(bad)
es
pop
xchg
push
push
gs
xor
arpl
out
xchg
repz
into
cmps
cdq
es
cmps
sub
ss
mov
call
cmp
dec
std
aad
test
cmc
aas
int
sahf
dec
jne
cwde
add
xchg
lds
push
mov
or
popf
imul
popa
push
dec
adc
enter
(bad)
pop
repnz
ss
xchg
or
xchg
sub
push
(bad)
aas
daa
dec
iret
in
jne
push
cmc
rol
inc
addr16
mov
mov
jns
pop
sbb
jecxz
cmp
and
(bad)
sbb
xor
add
lea
ret
arpl
(bad)
out
sub
add
cmp
pop
mov
and
cmp
push
aam
shl
mov
test
retf
(bad)
aam
into
dec
les
cmp
retf
sbb
stos
out
push
call
mov
int
int
sub
ins
repnz
xor
xor
inc
push
adc
adc
dec
ds
movs
and
mov
mov
daa
jne
xlat
mov
sub
std
data16
inc
rcl
jbe
mov
pop
lds
dec
(bad)
rol
fsub
xchg
icebp
jbe
jge
retf
push
scas
ret
sub
aas
gs
ins
es
lods
out
sbb
mov
outs
xchg
jmp
lock
lods
push
inc
lods
sbb
ficom
adc
mov
mov
xchg
addr16
inc
adc
rcr
or
pushf
inc
cmovbe
xor
push
neg
shr
ds
xchg
jle
(bad)
push
xchg
fcom
add
inc
xor
pop
retf
fiadd
jbe
fild
push
jne
xlat
test
rol
xchg
loop
inc
add
data16
clc
imul
inc
push
mov
xchg
inc
or
daa
cmps
push
scas
scas
(bad)
pop
clc
cmps
jle
lea
popa
aas
test
pop
inc
mov
in
jbe
cmps
adc
push
or
cmps
jmp
gs
cmp
add
dec
inc
fs
mov
jg
sbb
nop
sub
cmc
scas
sbb
ss
out
cmp
xchg
cwde
mov
stc
mov
hlt
pop
mov
push
outs
mov
stos
sub
mov
sti
aam
(bad)
ss
jmp
(bad)
fwait
mov
dec
xchg
push
cmp
test
out
jg
push
xchg
push
(bad)
mov
shl
sbb
iret
mov
movs
js
push
add
push
sub
push
push
jo
adc
outs
sbb
jmp
or
pop
dec
pushf
repnz
xchg
adc
hlt
adc
push
clc
cli
retf
cmps
jbe
and
adc
inc
or
aas
jb
(bad)
jbe
shl
xor
sub
and
xchg
mov
push
inc
js
lock
shl
fistp
add
jbe
jl
fst
sub
mov
out
add
xor
loope
inc
xor
lods
cdq
mov
mov
cmp
xchg
or
popa
xor
inc
cmps
daa
scas
test
xor
sbb
cmp
sbb
jmp
test
dec
loopne
outs
cmc
xchg
and
xchg
mov
call
xchg
addr16
xor
jno
and
out
loopne
jp
pop
pop
sbb
or
pop
movs
xor
sysenter
(bad)
ds
xchg
lods
mov
rcr
in
mov
pop
fidivr
mov
pop
mov
pop
sbb
aad
stos
imul
cmps
adc
scas
jmp
iret
test
lahf
sbb
and
je
xor
adc
xchg
iret
mov
xchg
pusha
mov
addr16
pop
add
loope
imul
xchg
(bad)
jbe
arpl
and
aam
sub
call
out
sbb
daa
aad
int3
inc
retf
xchg
imul
xchg
jb
icebp
sub
pop
ss
jl
pop
(bad)
xlat
dec
lea
dec
mov
popa
add
out
pop
(bad)
cmp
inc
sbb
jmp
or
mov
xor
cmp
gs
and
sbb
punpcklwd
sbb
int3
cmps
not
jb
movs
mov
inc
xchg
jge
mov
xchg
jg
out
jmp
test
int
add
rcl
add
dec
and
retf
jno
popf
mul
xchg
mov
lea
out
or
ret
inc
and
ret
mov
(bad)
div
adc
cmc
and
xor
pusha
fidivr
out
pop
clc
movs
inc
movs
mov
xchg
adc
(bad)
(bad)
movs
push
js
adc
mov
mov
push
daa
jmp
mov
retf
gs
or
sbb
and
add
(bad)
hlt
jb
daa
and
out
cmp
(bad)
(bad)
push
gs
mov
mov
cmps
jno
(bad)
mov
ss
jae
arpl
repnz
xchg
jne
pcmpeqb
add
xchg
aad
jmp
cmp
push
cld
fmul
enter
scas
loopne
jmp
xor
imul
dec
pop
int3
mov
mov
repz
mov
scas
add
mov
add
repz
hlt
mov
xor
leave
cmps
ror
in
in
push
add
and
xchg
retf
aad
and
xchg
clc
or
mov
dec
or
push
pop
mov
mov
dec
or
pop
imul
inc
out
adc
enter
and
sbb
mov
mul
jle
inc
std
pop
dec
and
fidivr
call
div
jnp
sub
ds
jne
les
push
out
ja
ins
and
int
ins
jp
jl
scas
outs
sub
inc
inc
movs
out
cld
mov
stos
popf
push
pop
xchg
push
xchg
inc
dec
push
jne
xlat
add
push
shl
dec
push
(bad)
and
pop
out
scas
add
mov
xor
ja
push
hlt
cmp
push
movs
jns
adc
xchg
movs
and
inc
mov
mov
div
leave
mov
sub
ja
out
xchg
lea
retf
push
mov
daa
inc
pusha
das
sbb
inc
inc
mov
and
(bad)
retf
das
loopne
cmc
test
imul
inc
mov
repz
popf
push
inc
adc
xchg
movs
pop
cmps
hlt
push
popa
imul
add
ss
and
push
inc
mov
sub
jmp
enter
jecxz
hlt
inc
ds
pushf
scas
add
hlt
bound
aad
inc
(bad)
mov
cld
adc
movs
mov
xchg
push
xchg
iret
xor
push
xchg
push
fwait
adc
cmps
shr
add
loopne
xor
aaa
sub
push
pop
mov
push
gs
repnz
adc
xchg
call
dec
and
int
pop
mov
in
jne
ins
pop
cmps
call
scas
pop
adc
xchg
and
addr16
mov
xor
inc
cs
or
push
loopne
mov
xchg
aad
and
jmp
add
lahf
div
inc
pop
mov
or
dec
jae
aam
aaa
sbb
das
scas
adc
and
cld
ret
sub
sub
rcl
dec
push
icebp
clc
stos
mov
int3
push
imul
(bad)
pop
pop
jne
xor
cmp
or
dec
xor
ss
das
and
popf
xor
cdq
out
adc
pop
ret
inc
sbb
adc
enter
outs
inc
rol
(bad)
cmc
imul
aas
popf
stc
dec
js
pop
mov
scas
inc
inc
(bad)
cli
pop
dec
jne
push
inc
into
aam
addr16
into
jae
xor
push
test
aam
pop
xor
mov
xchg
cmp
adc
test
fidiv
mov
movs
retf
dec
je
mov
ret
ins
jle
dec
xor
ror
dec
jnp
shr
ffreep
jmp
ss
outs
fdivr
(bad)
xchg
or
mov
sub
in
xchg
push
je
retf
xchg
mov
xlat
repz
fld
movs
pop
rcl
aas
push
daa
mov
mov
and
mov
out
div
dec
pop
jbe
out
mov
sbb
jmp
sub
cmp
jl
rcr
cmps
cmp
jge
xor
pop
pop
jb
add
sbb
pop
inc
inc
mov
xor
cld
fisttp
pop
das
loop
sahf
fbstp
(bad)
or
cmp
mov
push
dec
xchg
cmp
das
add
jne
mov
ins
xchg
sahf
scas
in
push
lods
aad
retf
inc
pop
jmp
inc
popa
and
cmp
popf
(bad)
pop
ins
nop
jo
push
push
arpl
popf
fincstp
test
jae
mov
ja
fcomp
out
data16
dec
xchg
scas
jae
lea
jns
test
outs
aad
aam
and
xchg
add
mov
cmp
push
mov
jge
mov
fisttp
adc
call
not
sub
pop
mov
mov
pop
les
push
sbb
add
sub
ror
push
jmp
test
je
pop
jecxz
mov
repz
dec
adc
sub
xlat
adc
jae
stos
xor
mov
fnstcw
in
inc
jns
rol
aam
aaa
mov
sar
addr16
arpl
bound
fsub
shl
and
mov
mov
sbb
daa
scas
or
pop
sub
loopne
fnstenv
mov
and
std
mov
jo
or
popa
mov
jmp
mov
fst
push
lea
jmp
jb
cmp
dec
inc
jb
je
test
xlat
nop
or
rol
mov
push
lahf
sbb
fimul
(bad)
push
jne
clc
nop
push
or
iret
ins
mov
add
xor
les
das
pusha
jnp
ret
out
push
ds
inc
push
(bad)
call
add
out
retf
lea
cmps
add
mov
add
repnz
ret
jno
jns
out
ins
(bad)
dec
pop
cmp
add
pop
mov
jle
xchg
icebp
call
iret
dec
fdivp
test
ret
jg
push
sahf
pop
mov
add
mov
inc
test
mov
cs
add
gs
popa
jns
pop
xor
enter
retf
pop
aad
clc
out
vunpcklpd
addr16
test
jg
and
test
jge
pop
shl
dec
popa
inc
xchg
rcr
test
in
cmp
adc
jmp
sub
adc
addr16
loopne
retf
and
xchg
out
jp
clc
jne
cwde
xchg
inc
mov
(bad)
enter
fdivr
(bad)
call
movs
arpl
or
xchg
sbb
inc
jns
sbb
dec
repnz
imul
inc
fadd
cmp
sub
mov
je
idiv
movs
xchg
xchg
mov
dec
inc
inc
push
xor
call
dec
(bad)
aad
data16
popa
stc
(bad)
xor
or
pop
lds
pusha
pop
xchg
test
mov
repz
pop
lea
(bad)
pop
add
pop
sub
out
test
rol
adc
mov
hlt
daa
cmps
retf
jl
es
cmps
mov
add
movs
xlat
ins
inc
or
dec
xchg
retf
pop
cmp
mov
push
aaa
xchg
div
sub
pop
pop
test
fldenv
inc
lea
xchg
fs
cmps
mov
out
add
cmp
test
adc
add
mov
stc
aam
pusha
clc
cwde
arpl
mov
pop
mov
xchg
outs
mov
xlat
cmp
shl
jecxz
mov
lea
mov
sub
push
div
cmp
inc
(bad)
mov
(bad)
movs
add
pop
push
pop
aaa
jne
stos
fst
jne
dec
stc
ins
daa
movs
adc
call
adc
popa
push
xchg
push
aas
or
push
fsub
mov
repnz
or
xchg
sbb
xlat
pop
mov
stc
iret
and
xchg
sub
cmps
repz
xchg
pop
lahf
add
mov
lea
xchg
call
fbstp
fwait
je
xchg
mov
imul
(bad)
and
out
push
hlt
dec
xchg
cmp
retf
jecxz
or
sbb
ret
push
or
push
add
mov
movs
push
das
and
and
adc
retf
jmp
sub
(bad)
jmp
leave
std
xchg
test
pop
sbb
fld
add
lock
mov
adc
ret
pop
(bad)
mov
push
xor
cli
hlt
jmp
add
add
push
sbb
stc
pop
(bad)
xchg
sub
(bad)
test
adc
cwde
sahf
arpl
enter
cmps
lds
mov
or
xchg
lea
push
das
mov
gs
call
adc
xchg
inc
push
mov
inc
es
and
pop
mov
push
sti
mov
sahf
xchg
sub
mov
jne
outs
pop
push
ja
push
push
out
xchg
sbb
xlat
inc
xchg
mov
cmp
jecxz
gs
int
inc
adc
test
test
bound
sbb
out
and
cmp
addr16
mov
js
sbb
in
cmp
popf
add
jns
das
aad
in
pop
in
cmc
pop
daa
cwde
lock
mov
imul
pop
mov
movs
adc
push
into
mov
pop
cmp
retf
sbb
aaa
stos
add
lods
and
dec
lods
(bad)
in
jmp
sbb
xchg
sub
sbb
jle
sbb
add
jo
push
mov
xchg
shl
data16
cli
sti
ja
test
push
and
pop
xchg
pop
pop
jmp
call
add
clc
dec
fadd
push
lock
in
mov
fwait
push
cmc
xchg
std
dec
cs
cmp
in
outs
push
or
inc
imul
hlt
test
scas
xchg
int
clc
fs
fstp
xchg
jge
in
add
mov
ret
inc
out
xchg
xchg
pop
push
xor
push
jmp
push
push
repz
adc
es
sbb
out
dec
cmp
outs
and
xchg
(bad)
push
fdivr
and
aaa
enter
imul
cmp
loope
or
pushf
jo
and
mov
dec
cmps
push
mov
jb
jne
call
xor
stc
out
cmp
xor
lods
mov
dec
jne
cmp
xchg
push
fisubr
(bad)
mov
test
pusha
mov
mov
iret
jp
jp
inc
not
or
inc
pop
inc
aas
mov
movs
jb
dec
(bad)
fs
sub
sar
out
mov
ja
into
dec
push
mov
fild
xchg
int3
rep
int
xchg
xchg
cdq
(bad)
dec
dec
push
or
sbb
and
fild
bound
clc
dec
jbe
xchg
dec
pop
data16
popa
(bad)
mov
dec
pop
jmp
mov
retf
mov
xchg
adc
imul
ins
mov
and
adc
pushf
(bad)
mov
or
xor
cmps
int3
mov
add
dec
aas
(bad)
movs
out
jecxz
jmp
in
push
push
rcl
add
inc
scas
dec
add
sbb
adc
idiv
fs
mov
add
je
lahf
adc
pop
cmp
adc
imul
iret
dec
mov
sbb
mov
je
jecxz
or
les
cs
rcl
test
sub
cmp
ins
in
xchg
mov
loope
pop
int
mov
push
in
sbb
pop
in
fnstcw
ja
sbb
inc
pop
mov
cmc
cmovb
popf
cmps
test
in
mov
pop
lods
push
mov
cli
stos
push
cmps
sbb
loop
clc
xchg
scas
jp
and
(bad)
xor
xlat
out
popf
jecxz
sub
push
mov
imul
mov
ret
push
mov
lods
adc
or
aaa
stos
push
and
xchg
xchg
aad
inc
fst
in
sbb
jge
push
mov
inc
out
adc
cmps
inc
loope
je
rol
movs
xchg
test
in
pop
addr16
and
dec
pop
shl
adc
clc
dec
test
jmp
jno
and
dec
jne
xor
jge
ja
shr
pop
jmp
add
ret
(bad)
xchg
jbe
ja
mov
cmps
clc
inc
sub
loope
inc
pop
mov
add
lods
mov
mov
inc
sub
mov
add
fisubr
loope
add
jbe
hlt
addr16
fistp
out
je
pop
stc
push
jge
dec
or
mov
test
xor
xchg
cmp
mov
rol
or
mov
shl
aad
or
push
jle
lods
bound
les
sar
shr
dec
pusha
push
cmps
mov
ja
repz
mov
and
push
push
or
ficomp
test
aas
out
mov
fistp
popa
push
cmp
out
pop
je
cld
leave
scas
adc
dec
ds
nop
add
retf
cmp
call
(bad)
rol
hlt
repnz
jp
xchg
cdq
and
sub
inc
inc
(bad)
xor
addr16
pop
mov
lds
loope
out
xor
push
and
rcl
mov
out
movs
int
in
or
push
out
scas
and
rcl
sahf
addr16
or
scas
sub
push
sti
dec
sbb
xor
add
test
icebp
in
push
fwait
inc
jo
dec
push
test
test
rol
mov
mov
jg
lahf
push
mov
add
dec
jnp
push
es
popa
adc
cmps
(bad)
div
cmc
das
call
mov
inc
xchg
add
mov
out
test
gs
jbe
hlt
loopne
jp
xchg
icebp
pop
sar
std
lea
pop
push
ret
ja
cmps
xor
lock
ds
out
pop
addr16
mov
xlat
jp
rcl
ins
loop
in
bound
outs
add
addr16
push
and
push
dec
xchg
add
retf
scas
dec
(bad)
and
jb
add
out
or
adc
mov
out
(bad)
xchg
mov
pop
(bad)
rol
out
add
fsincos
pushf
(bad)
aaa
loop
call
xchg
in
sbb
mov
lds
add
retf
movs
aaa
popa
retf
cmp
cmps
cmp
arpl
xchg
xchg
inc
sub
jge
xor
xchg
test
inc
xor
xchg
or
mov
rcr
inc
mov
adc
mov
pop
push
addr16
mov
test
add
mov
inc
inc
add
lahf
(bad)
sets
in
and
das
cmps
push
xor
and
in
mov
pop
js
ficomp
xor
and
(bad)
push
mov
xchg
out
mov
and
shl
inc
push
inc
addr16
mov
in
xchg
gs
and
xlat
sbb
dec
sub
pushf
push
xchg
inc
ret
xchg
xchg
xor
mov
mov
(bad)
int
or
daa
dec
and
and
bound
add
out
mov
into
les
sub
jne
xor
push
push
imul
and
fwait
mov
stc
jmp
test
call
sub
mul
(bad)
xor
xchg
cmp
xor
lds
push
inc
xchg
ror
shl
lahf
not
inc
lds
xchg
imul
jne
jne
jle
xchg
cmps
(bad)
aam
push
call
mov
jo
movs
jbe
cmps
pop
loopne
and
inc
rcl
jb
mov
mov
mov
jle
jbe
push
pop
jb
test
dec
jno
mov
adc
frstor
fild
addr16
(bad)
jns
imul
and
sbb
mov
mov
sub
xchg
inc
pop
and
dec
movs
gs
shl
inc
mov
out
repz
push
mov
xor
(bad)
jbe
mov
inc
push
loop
mov
push
popf
(bad)
jmp
and
aas
xchg
mul
sbb
push
or
and
push
sub
dec
rol
into
(bad)
sar
xor
and
pop
jne
xchg
add
jns
mov
lahf
push
mov
adc
idiv
xchg
and
mov
xchg
sub
loopne
and
das
fs
fs
or
push
cmps
fbstp
in
ror
movs
inc
mov
aas
push
test
test
inc
cmp
ror
mov
leave
sbb
or
cli
(bad)
pop
mov
pop
fiadd
pop
into
in
or
ins
push
jmp
test
das
idiv
inc
jecxz
dec
and
pop
xchg
lds
cmps
pop
xchg
retf
add
add
imul
daa
or
xchg
rol
mov
and
std
test
and
mov
retf
out
call
scas
mov
pop
dec
dec
es
rcr
(bad)
mov
ret
mov
das
in
cmp
fisubr
or
inc
stc
popa
push
je
in
sahf
and
mov
test
scas
lods
(bad)
aad
and
lahf
adc
call
xlat
or
inc
int3
frstor
loopne
xchg
xchg
das
jne
or
xor
jg
xor
pushf
sub
mov
add
inc
sbb
gs
push
dec
mov
mov
(bad)
das
out
imul
imul
ss
popf
mov
leave
aas
ds
ins
aad
add
cmp
in
add
pop
sti
adc
daa
ja
lods
xchg
mov
jecxz
test
mov
div
push
sbb
mov
out
xor
or
cmps
stos
stos
imul
add
xchg
sbb
cmp
xchg
mov
push
lds
xchg
pop
pop
leave
or
(bad)
mov
rcl
xor
cdq
pushf
mov
or
aad
movs
outs
pop
pop
xor
push
xchg
xchg
add
in
scas
out
stc
cmp
popf
cmp
mov
(bad)
fcom
inc
nop
inc
xor
es
int
jge
ret
push
int
mov
sbb
test
sub
xchg
clc
mov
pushf
and
cmp
in
jge
xchg
mov
scas
xchg
ja
mul
sub
(bad)
mov
ins
mov
mov
and
pop
js
push
fs
mov
add
pop
pusha
xor
sbb
enter
icebp
add
xchg
pop
xor
push
cmps
imul
inc
xchg
aad
push
and
xor
jmp
and
(bad)
(bad)
popa
cmovno
dec
(bad)
daa
aad
adc
movs
dec
pop
gs
jae
bound
lds
fldcw
in
mov
cmps
std
adc
push
jp
(bad)
jb
add
test
data16
aam
daa
cmps
test
add
push
dec
mov
adc
cwde
xor
ret
and
popa
adc
jmp
clc
xchg
jmp
xor
xchg
mov
je
push
pop
lods
mov
jg
mov
sbb
jo
jns
push
ja
retf
fs
fdivr
xchg
add
mov
leave
pushf
mov
xchg
sbb
or
dec
jge
cmp
mov
je
in
mov
or
stos
shl
outs
ins
out
out
(bad)
pop
xchg
pop
inc
push
inc
xchg
push
(bad)
mov
ja
fs
xlat
mov
into
mov
and
pop
and
xor
or
aas
loopne
movs
mov
sub
gs
(bad)
adc
sub
push
xchg
lods
daa
and
sub
sahf
pop
push
cld
and
cmp
in
push
in
sti
out
je
scas
adc
push
mov
jbe
loope
cmp
mov
dec
push
fcom
push
shl
adc
out
and
test
aam
sbb
dec
cmps
dec
cmp
(bad)
pop
push
cmp
cmp
dec
mov
dec
lods
rcl
lds
in
cmps
sbb
push
cwde
pusha
(bad)
call
out
(bad)
xor
dec
and
sub
jne
or
inc
in
pop
shl
cmp
aad
cmps
mov
clc
mov
add
lods
test
ja
jne
xor
ret
inc
jp
mov
in
imul
daa
sub
jmp
and
jl
push
xor
iret
addr16
adc
cld
push
pushf
inc
sub
mov
xor
xchg
mov
dec
pop
sbb
lea
(bad)
call
in
sbb
sbb
es
inc
mov
and
push
gs
cmps
bound
loop
xchg
jbe
je
xor
or
pop
imul
not
xchg
fistp
xchg
xor
inc
push
push
or
div
pusha
call
dec
loope
jmp
test
(bad)
cmc
cmps
dec
imul
xor
out
dec
sbb
mov
push
out
outs
out
jnp
add
xchg
sub
aad
and
pop
push
mov
jp
adc
and
daa
inc
lds
mov
out
pop
mov
lods
(bad)
repz
and
sahf
push
fisttp
pop
movs
les
mov
addr16
mov
cmp
add
ja
jae
cmps
sbb
loopne
and
popf
xchg
out
out
mov
call
aaa
mov
es
daa
popf
stos
adc
clc
and
pop
xor
pop
lds
test
ja
stc
je
mov
data16
(bad)
push
cmc
popa
aad
and
addr16
cmp
push
push
arpl
or
iret
icebp
mov
test
jg
push
mov
test
and
inc
jae
and
push
mov
mov
(bad)
rcr
movs
ss
adc
bnd
scas
inc
adc
mov
mov
adc
scas
mov
xchg
arpl
pusha
stos
frstor
aas
inc
in
aaa
lea
sub
xchg
inc
xor
xor
sbb
cmc
movs
test
bound
repnz
mov
aad
into
(bad)
cmc
xchg
in
adc
xor
hlt
nop
lock
xchg
scas
int
cld
jno
pop
cmp
stc
fmulp
rcl
in
mov
lods
stos
ds
cwde
dec
imul
daa
mov
mov
loop
cmp
jecxz
cmp
mov
mov
adc
xchg
icebp
movs
lock
cmps
cmps
aas
dec
adc
xchg
or
(bad)
test
pop
gs
ins
scas
js
push
push
xchg
lods
jp
jbe
mov
adc
add
dec
dec
or
call
add
enter
mov
sbb
xchg
lods
sbb
cmps
(bad)
cmps
jge
cmp
adc
jp
cmp
inc
mov
adc
dec
jae
cmc
mov
sub
lea
neg
inc
mov
sbb
(bad)
mov
xchg
cwde
inc
cmp
mov
cmps
enter
(bad)
push
fs
dec
inc
adc
ret
xchg
xchg
in
ja
mov
sub
dec
call
inc
inc
shl
adc
sbb
movs
xchg
push
movs
jge
push
enter
aam
test
mov
scas
dec
inc
addr16
gs
or
and
mov
cmp
xchg
xor
add
mov
ja
arpl
add
jl
std
ins
xchg
jno
test
push
push
cmc
outs
out
pushf
je
(bad)
arpl
repz
pop
and
(bad)
xchg
add
xchg
pop
ret
pushf
data16
pop
pop
aad
inc
pop
push
test
xchg
ss
movs
mov
fs
in
in
hlt
xchg
and
xor
mov
sbb
jne
and
xchg
xchg
mov
imul
(bad)
mov
test
repz
(bad)
xor
xchg
bound
retf
(bad)
data16
into
aam
mov
repnz
cmps
pop
gs
mov
cmp
inc
inc
mov
lahf
vandnps
inc
and
inc
clc
mov
push
int
jg
mov
jb
mov
cmps
adc
ja
arpl
xor
mov
mov
loopne
adc
mov
adc
(bad)
sbb
sbb
cmp
out
test
loopne
mov
or
popa
jnp
xchg
stos
pop
mov
and
es
mov
xchg
scas
inc
data16
xchg
mov
cmps
je
push
rcl
and
icebp
push
stos
loope
stc
pop
push
cmps
fldenv
mov
and
jbe
xchg
xlat
xor
mov
(bad)
push
repz
test
pop
ja
dec
mov
dec
fucom
in
icebp
retf
xchg
leave
shr
xchg
xor
iret
and
mov
xchg
inc
push
popa
out
mov
adc
test
mov
test
outs
jae
into
div
test
sahf
pop
jae
(bad)
inc
leave
mov
sbb
leave
rcr
xchg
sbb
inc
push
or
jns
and
push
jge
sbb
movs
sar
je
cmc
loop
adc
(bad)
dec
pop
pop
fisttp
pop
inc
and
xchg
(bad)
add
xchg
jge
xor
push
imul
pop
ja
dec
ja
add
pop
nop
fld
mov
out
in
xor
push
inc
test
lea
test
push
mov
sbb
loop
push
adc
inc
das
push
xchg
push
xchg
cmp
cwde
mov
jo
mov
(bad)
shl
jg
pop
mov
gs
add
test
inc
repz
out
and
xchg
sub
fs
add
sbb
(bad)
scas
xchg
lods
out
or
rcl
and
mov
push
sbb
jae
and
dec
test
icebp
sbb
inc
and
aaa
inc
pop
adc
das
pop
div
daa
inc
daa
xchg
cmc
xlat
movs
test
jne
mov
inc
xchg
cld
lds
pop
dec
jne
call
mov
fwait
sar
pusha
xor
lea
push
sub
push
pop
or
mov
mov
add
sbb
arpl
fidivr
xor
xchg
adc
inc
out
fmul
int3
aam
xchg
fcom
adc
pop
movs
aad
xchg
sub
push
xchg
int
nop
inc
test
das
adc
sti
pop
lods
daa
pushf
pop
mov
xchg
out
call
cmc
leave
xchg
pop
js
hlt
xor
xor
dec
int
xlat
in
test
iret
gs
daa
mov
fwait
shl
jl
push
pop
mov
shl
adc
jle
push
shl
mov
out
cmc
push
call
adc
movs
inc
loope
xchg
xchg
mov
xchg
iret
xor
push
dec
leave
adc
mov
imul
push
bound
xor
push
jo
mov
retf
and
paddb
mov
movq
fs
fidiv
add
sub
repz
dec
inc
(bad)
icebp
aad
in
mov
leave
lds
cmps
mov
out
je
sbb
(bad)
not
and
idiv
xlat
test
xor
hlt
out
xor
repz
xlat
gs
mov
fwait
mov
mov
cmps
inc
xor
arpl
shl
inc
cmp
aam
frstor
add
in
or
shl
call
inc
gs
ss
pop
sbb
(bad)
ins
ffreep
lods
test
(bad)
(bad)
out
cs
xchg
inc
push
fld
and
cmp
hlt
and
xor
xchg
push
dec
push
or
push
imul
pop
xor
mul
(bad)
mov
fs
xchg
adc
cmc
cs
fsubr
gs
(bad)
je
jno
popa
bound
fs
ss
sub
xchg
out
add
ins
jne
adc
xchg
jne
dec
xor
nop
movs
movs
add
cmp
scas
into
push
fist
mov
push
add
adc
xchg
inc
mov
popa
mov
lea
add
sar
jmp
out
add
mul
xchg
aaa
popf
push
cli
fisubr
add
and
mov
inc
imul
(bad)
sbb
add
es
xor
loope
icebp
call
std
movaps
aad
jae
jmp
lea
(bad)
mov
popa
dec
(bad)
jg
jo
mul
and
dec
inc
mov
mov
xchg
repnz
test
jno
mov
mov
or
xor
sub
lahf
mov
xor
jno
mov
aam
loope
sbb
jbe
ja
or
push
push
mov
and
xchg
dec
pop
dec
loopne
push
mov
adc
fisub
imul
nop
in
aas
mov
into
daa
mov
and
add
mov
push
scas
aad
xchg
fld
(bad)
mov
repz
cmp
repnz
or
retf
add
shr
mov
push
push
sbb
movs
and
push
lock
cmps
xor
ret
sbb
fcmovnbe
iret
jnp
out
inc
and
cld
mov
ins
jg
stos
dec
add
(bad)
jno
out
aaa
add
adc
idiv
xchg
push
mov
xchg
jmp
stc
push
or
mov
adc
xor
jbe
pop
mov
mov
out
xchg
cdq
adc
push
(bad)
and
sub
pop
mov
sub
jb
fdiv
and
enter
mov
pusha
(bad)
repz
outs
out
jl
dec
push
ja
xor
sub
push
(bad)
in
or
in
fsub
sub
stos
daa
jge
ins
inc
aad
or
push
and
aaa
mov
mov
jae
int3
movs
add
pop
cld
sbb
mov
shr
out
xchg
in
repnz
ret
jne
in
test
jg
push
sbb
push
int3
mov
loop
les
pop
and
mov
gs
and
in
mov
out
and
mov
xlat
ret
xchg
clc
dec
out
(bad)
in
mov
mov
aas
push
xor
mov
dec
daa
in
shrd
or
cs
mov
in
and
lahf
in
test
faddp
sbb
adc
mov
sbb
mov
adc
pop
jo
js
sub
mov
hlt
xchg
shl
shl
add
daa
data16
pushf
inc
inc
fstp
jbe
aaa
inc
push
cmp
xlat
mov
push
cmps
arpl
out
inc
jge
shr
push
xchg
int
sbb
sub
inc
sub
push
xor
sti
scas
out
dec
xlat
jl
jne
test
retf
xchg
imul
loope
add
mov
mov
aad
in
orps
jnp
sar
xor
inc
gs
test
pop
stc
sub
dec
jecxz
(bad)
add
mov
mov
fst
in
xchg
dec
sbb
les
and
adc
pop
ja
jecxz
or
imul
or
call
into
add
daa
and
mov
mov
pop
pop
loop
ss
push
and
jnp
in
or
loop
sbb
outs
test
adc
sbb
out
sbb
shl
dec
push
scas
sbb
xlat
imul
sahf
pop
ret
pop
mov
sahf
call
sbb
jg
pop
add
pcmpgtb
lea
inc
cmp
movs
pop
cmp
jl
cmps
mov
scas
and
(bad)
and
outs
jg
xor
sub
cli
sbb
mov
test
mov
mov
mov
xchg
gs
retf
cmps
jbe
inc
sub
inc
push
adc
inc
ds
jnp
push
add
and
out
and
mov
js
inc
or
dec
mov
xchg
or
xor
movs
inc
gs
test
sub
inc
pop
xor
and
mov
fild
aaa
inc
out
sub
mov
test
mov
and
inc
imul
(bad)
out
xchg
scas
out
and
gs
out
adc
daa
mov
pop
lods
pop
out
jbe
xor
fnstsw
out
fld
mov
xlat
jne
cmps
mov
add
in
(bad)
and
mov
push
dec
jne
mov
jmp
cmc
push
loope
cs
jmp
mov
xchg
rcl
or
fdiv
xchg
jmp
fst
ins
pop
pop
mov
cmps
push
push
mov
gs
movs
(bad)
add
jg
mov
call
movs
in
es
dec
sub
sbb
sbb
adc
add
mov
fbld
or
and
dec
rcl
sbb
in
movs
push
into
ffree
xor
test
sub
aad
out
aas
dec
dec
dec
aad
aas
and
movs
pop
jge
mov
mov
xor
mov
pusha
xchg
cli
mov
inc
shl
out
in
cmp
not
movs
movs
mov
dec
fyl2xp1
das
pop
fild
adc
dec
pop
ins
pop
xor
and
adc
icebp
je
add
xor
sub
popf
stos
push
maskmovq
and
into
enter
or
daa
mov
xor
or
cmc
push
lds
movs
mov
movs
imul
sub
out
xor
out
xlat
pop
pop
inc
neg
jge
jmp
inc
jb
sub
sbb
jecxz
pop
sub
jnp
pop
pop
cmc
cmc
into
mov
movs
or
mov
int3
adc
mov
pusha
icebp
mov
in
mov
push
movs
ja
rcl
in
lods
repz
push
sub
sub
xor
pop
cmp
ja
xchg
mov
push
movs
jg
in
mov
xchg
das
not
xor
retf
cmp
icebp
addr16
call
mov
rcl
dec
fld
rcl
xor
jns
xchg
in
sub
inc
mov
adc
add
cmp
xchg
les
push
dec
inc
and
repz
sbb
ja
and
movups
inc
out
dec
out
push
in
xchg
rcr
add
or
and
mov
test
jae
popf
(bad)
(bad)
cmp
push
mov
pusha
inc
jne
inc
fcomp
xor
loop
xlat
mov
daa
cmps
xchg
outs
cmps
pusha
xchg
out
cmps
push
clc
inc
push
adc
sub
adc
mov
shl
jge
hlt
xchg
jbe
lahf
pop
sub
jns
les
imul
add
xor
je
mov
js
mov
dec
ins
jo
shrd
jne
adc
push
pusha
and
bound
repz
lds
pusha
xor
mov
pop
inc
mov
movs
xchg
repnz
add
icebp
add
(bad)
and
jl
mov
mov
ror
lea
mov
inc
ss
xor
dec
aad
retf
shrd
shl
fcmovbe
push
mov
je
add
sub
inc
shl
daa
out
mov
xchg
dec
ja
sbb
inc
xor
(bad)
xchg
test
jmp
repz
sahf
dec
dec
dec
cmp
stos
fdivr
adc
data16
xchg
sbb
xor
pop
mov
push
jno
in
sbb
out
jo
mov
leave
mov
(bad)
or
xor
cmc
or
popa
jecxz
inc
mov
aaa
out
call
jne
inc
aam
loope
adc
jnp
fimul
add
adc
(bad)
fisttp
jge
xchg
pop
in
push
std
mov
movs
ins
pop
jnp
mov
push
mov
push
mov
out
outs
lahf
repnz
sahf
xor
push
imul
adc
add
adc
les
pushf
inc
dec
(bad)
addr16
and
sub
inc
iret
cmp
and
fild
adc
out
inc
out
or
sub
xchg
xchg
adc
aam
stos
add
movs
pop
cwde
adc
cmp
xchg
mov
add
sub
in
fwait
sti
int
mov
and
sub
xor
test
cmps
iret
neg
pop
pop
enter
stc
in
fmul
push
fisubr
cdq
add
clc
push
jb
mov
adc
and
rol
push
fwait
cmps
jne
ja
hlt
std
cmps
lahf
cmps
imul
inc
xchg
adc
adc
iret
rol
or
mov
and
mov
push
jno
pop
cmp
lods
inc
mov
push
xor
in
adc
(bad)
cmp
dec
mov
jmp
jp
(bad)
xchg
mov
mov
push
mov
push
lods
neg
xor
adc
(bad)
cmp
shl
lahf
xchg
movs
(bad)
inc
pop
mov
xor
mov
test
push
daa
outs
jl
push
xchg
mov
in
stos
xchg
aaa
push
mov
loopne
ins
add
ficomp
std
jne
xlat
inc
pop
xchg
xchg
pop
pop
push
in
cmps
mov
sbb
inc
jge
call
push
lock
push
inc
pop
mov
inc
pusha
fsubr
cmp
test
bound
lods
movs
add
adc
cmove
sti
icebp
pop
cmc
ins
fwait
sbb
fild
and
out
data16
montmul
cmps
xor
add
push
cdq
xchg
xchg
and
lock
cmc
mov
ss
push
lahf
imul
dec
out
clc
jmp
push
sbb
pop
not
cmp
and
(bad)
jns
jb
shl
mov
and
add
adc
push
jecxz
inc
stos
xchg
sbb
outs
int3
or
gs
inc
ret
das
das
data16
shl
in
in
jl
add
cmp
addr16
xchg
out
and
or
xor
pop
lods
in
popf
add
pop
push
and
mov
gs
jge
int3
mov
ins
arpl
mov
into
les
mov
cdq
sahf
add
popa
rcl
jp
cmps
xor
out
(bad)
std
aaa
sbb
inc
inc
sbb
pop
jae
inc
ja
xor
int
into
es
shld
lds
inc
mov
mov
mov
add
loopne
push
push
jmp
mov
mov
sbb
pop
dec
mov
outs
inc
xor
xchg
inc
inc
ja
cmps
std
push
mov
xchg
ss
jg
jno
sub
mov
xor
jne
adc
je
add
dec
and
and
(bad)
push
ja
and
pop
pusha
mov
xor
mov
cmp
lods
test
enter
adc
in
leave
adc
pop
les
dec
nop
imul
inc
fisub
adc
push
cmp
mov
aad
fs
loopne
shr
cmc
push
add
sub
xchg
ds
pop
es
imul
leave
iret
push
adc
push
xor
je
jae
je
pop
rcr
mov
inc
jge
dec
mov
loop
fdiv
xchg
xchg
pop
out
es
in
test
push
push
cmps
movs
xchg
(bad)
push
xchg
sub
mov
cmp
cmp
adc
(bad)
jo
add
lea
cmp
int
stos
movs
mov
popf
push
stos
aaa
mov
iret
or
sub
sti
xchg
idiv
cmp
in
popf
pop
addr16
inc
lea
popf
sti
xchg
fisttp
xor
outs
adc
jge
mov
out
xor
movs
enter
mov
mov
adc
jno
add
adc
rcl
add
popa
mov
test
shl
or
repnz
jg
sbb
ins
jbe
mov
mov
fucomi
test
in
lods
dec
pop
sti
and
or
add
js
ficomp
test
and
scas
rcl
pop
das
cdq
sub
pop
cmc
and
div
xor
xchg
sub
imul
cs
popw
pop
fwait
pushf
aad
add
mov
arpl
mov
or
(bad)
sti
hlt
jb
pop
adc
test
jp
or
and
or
push
fdivrp
enter
sbb
and
(bad)
mov
(bad)
inc
lock
mov
mov
add
xchg
in
sbb
retf
ret
in
std
icebp
cmp
aad
std
xchg
inc
jmp
test
mov
daa
xor
adc
(bad)
repz
jle
pusha
or
xor
retf
cmc
or
inc
add
cmp
or
pop
aam
leave
das
mov
ret
and
or
xchg
mov
icebp
out
mov
sti
or
adc
(bad)
and
cmps
icebp
add
pop
jae
je
mov
xchg
in
fcmovnbe
ss
outs
les
aaa
cmc
sbb
add
addr16
xchg
xchg
out
in
loope
in
popa
adc
inc
outs
and
data16
push
out
int
dec
dec
aam
sbb
mov
cld
test
push
jne
ds
shl
pop
pop
push
clc
sub
or
mov
loop
mov
mov
dec
xlat
lds
(bad)
aas
dec
cmp
lods
bound
(bad)
aas
xchg
rcl
stos
add
loopne
hlt
and
aad
add
push
stos
pop
xchg
es
cwde
scas
in
push
je
add
adc
data16
hlt
mov
and
cmp
lea
mov
test
add
or
mov
xor
fisub
scas
push
sbb
pop
ss
xor
(bad)
bound
lods
inc
mov
push
mov
mov
arpl
adc
out
daa
cmp
js
das
inc
inc
repnz
in
ret
dec
sub
js
adc
add
fsubr
sbb
xchg
xchg
mov
mov
pushf
pop
jo
jbe
int3
push
rcr
repnz
mov
cmc
mov
xchg
add
(bad)
xor
adc
jge
pop
ja
lds
idiv
daa
add
mov
sub
mov
cmp
sub
mov
aad
popa
and
imul
jbe
mov
jecxz
cmps
jge
mov
push
inc
daa
lea
ja
or
aam
push
aaa
jecxz
sub
pop
cmc
push
and
out
in
and
test
lea
dec
xor
hlt
pop
xor
add
xchg
sbb
push
fldcw
out
mov
inc
fisttp
or
adc
xchg
in
stos
aaa
nop
in
data16
sub
inc
jne
sub
loop
fist
movs
(bad)
jne
pop
fbld
cmps
stos
mov
add
cmovge
xor
jae
movs
mov
add
and
loopne
add
and
sub
enter
stos
test
daa
xor
dec
dec
jmp
xchg
jmp
outs
sbb
aaa
push
cmp
shr
inc
push
xchg
(bad)
cwde
add
cwde
inc
fwait
lahf
xor
xchg
pop
and
pop
pop
sub
push
sub
mov
jle
loope
add
aad
ja
mov
add
adc
dec
aaa
xor
fiadd
push
outs
cmps
hlt
in
(bad)
dec
aaa
push
out
push
xchg
dec
call
pusha
mov
or
xchg
push
leave
cmps
xchg
in
fwait
lea
adc
xor
push
addr16
push
adc
mov
iret
dec
retf
cmp
dec
mov
out
dec
sub
data16
pusha
test
fistp
fld
mov
aad
lea
jno
dec
pop
inc
xchg
xchg
cmps
mov
push
in
mov
cmps
shl
mov
cmp
pop
xchg
ret
nop
mov
jg
cmps
add
aaa
iret
daa
adc
(bad)
popa
adc
addr16
and
fmul
icebp
loope
mov
xchg
mov
xor
lods
cwde
jo
rcr
add
dec
dec
neg
xchg
loop
xor
dec
and
add
pop
or
inc
popf
daa
gs
in
and
out
jecxz
and
or
pop
or
or
not
mov
aad
cwde
inc
xchg
sub
stos
lahf
movs
aaa
xor
xor
mov
inc
adc
jecxz
icebp
jmp
sbb
leave
cli
les
cs
jg
iret
inc
xor
xchg
lahf
sub
push
daa
aas
mov
addr16
int
(bad)
out
sub
inc
loop
addr16
not
mov
test
js
icebp
add
cwde
push
and
jg
retf
push
mov
(bad)
test
jbe
mov
imul
(bad)
jbe
test
icebp
sbb
fldcw
fld
add
and
scas
adc
cmp
sbb
xchg
xor
inc
cmp
loop
xchg
sub
je
out
jg
cmp
loop
popf
fs
mov
inc
sbb
jge
xor
and
test
xor
jecxz
adc
std
aam
aaa
imul
push
add
cmp
xor
push
adc
out
xchg
mov
sti
imul
xlat
(bad)
push
xor
imul
jge
inc
repnz
xlat
movs
jae
xchg
xchg
add
sub
or
fnstcw
push
xchg
lds
jbe
aam
hlt
and
push
movs
inc
jb
daa
pop
push
cli
stos
mov
jbe
pop
mov
dec
sub
retf
push
loope
(bad)
je
sub
sub
pusha
mov
scas
aaa
xor
sbb
iret
movs
and
mov
xchg
cmp
test
dec
dec
aad
add
aad
fisubr
pop
jno
clc
xor
sbb
add
xchg
xchg
inc
arpl
mov
sahf
jns
cs
test
cmps
xor
jp
stos
push
add
jl
pop
mov
lods
iret
shl
popf
jne
repz
shl
das
rcl
dec
and
sub
or
push
out
pop
pusha
ins
adc
fisttp
sbb
xchg
in
mov
mov
cmp
es
out
cwde
hlt
(bad)
(bad)
scas
dec
fiadd
xchg
pushf
pop
cmc
jle
add
in
in
(bad)
cmps
out
(bad)
ja
sub
xlat
xor
xchg
mov
lock
cs
adc
inc
xor
mov
in
mov
ret
maskmovq
mul
test
jmp
adc
jg
push
inc
mov
int
adc
sub
jmp
test
scas
sbb
xchg
push
dec
lea
nop
inc
cmp
inc
and
call
and
push
pop
xchg
mov
test
xchg
mov
loop
aam
ret
push
inc
arpl
or
(bad)
pop
xor
mov
loopne
inc
fst
inc
not
test
outs
cmp
aaa
adc
rol
xor
xchg
jmp
ret
mov
loopne
adc
xchg
mov
movs
fistp
xchg
shr
aaa
adc
xchg
ins
add
in
cwde
(bad)
addr16
jne
fild
inc
arpl
push
lods
out
xor
cwde
pop
xchg
jp
pop
adc
xchg
or
das
pushf
xchg
int3
stos
push
cmc
retf
scas
retf
push
mov
and
js
or
mov
cdq
test
sbb
movs
sbb
push
push
pop
and
xor
(bad)
lods
xchg
test
mov
(bad)
iret
ja
pop
xor
adc
inc
popa
sbb
sub
neg
or
test
jmp
xor
sbb
loopne
mov
xlat
into
inc
inc
xchg
out
jmp
pop
daa
cmc
fcomip
sub
pop
(bad)
mov
imul
out
pop
in
out
arpl
adc
out
arpl
jo
int
dec
mov
inc
(bad)
movs
add
aaa
out
push
push
out
push
xchg
mov
jne
mov
in
aad
adc
lds
neg
fisubr
addr16
add
sbb
sub
pop
and
out
fsub
push
out
out
mov
call
push
cmps
mov
or
addr16
xlat
jge
pop
sub
mov
xor
mov
push
stos
xchg
dec
rcr
pop
out
dec
ja
jecxz
test
test
mov
(bad)
lods
bound
fwait
push
fwait
lods
ret
aas
push
std
pop
repnz
xchg
jbe
(bad)
loopne
fisub
mov
outs
fisttp
lea
or
push
inc
in
pop
adc
test
in
push
std
xchg
icebp
mov
in
add
ja
ja
sub
dec
push
jns
dec
sbb
push
cmps
je
int
cmp
bound
rcr
hlt
das
in
adc
xor
sahf
jb
sahf
stos
imul
ins
mov
and
rcr
stos
sti
jbe
mov
xchg
mov
pop
and
test
and
jne
sbb
dec
pushf
cmp
cmp
sbb
mov
xchg
mov
sti
retf
mov
(bad)
jnp
mov
les
push
push
push
add
inc
imul
xchg
pop
lods
ret
daa
xchg
movs
out
out
scas
mov
add
inc
inc
xor
push
lods
jo
repnz
addr16
jno
rol
mov
cmps
cmps
xor
lds
mov
mov
jns
test
shl
mov
push
inc
xor
add
inc
pop
aad
fcmovnb
mov
xchg
and
prefetch
pop
add
adc
pop
cmc
(bad)
mov
out
inc
add
add
sbb
inc
test
arpl
xor
cmp
je
adc
fstp
arpl
xor
push
aas
pushf
sbb
scas
jbe
daa
cwde
movs
cli
mov
sbb
(bad)
rol
sbb
imul
mov
iret
shl
je
ins
movs
mov
push
gs
mov
dec
xchg
xchg
sub
inc
loope
and
out
dec
iret
aam
mov
sbb
in
enter
cld
fadd
add
add
in
clc
push
sbb
dec
push
jns
cmp
pop
cmc
movs
add
adc
(bad)
jb
push
ja
popf
ja
sahf
scas
fstp
out
fistp
and
adc
inc
mov
stos
mov
inc
sbb
dec
and
add
loop
in
cmp
ds
out
lea
jbe
cmovl
cdq
loopne
inc
cli
ins
adc
cmp
lds
aas
cld
mov
sbb
pop
mov
dec
cld
mov
jae
push
dec
loop
shl
adc
pop
xchg
pop
dec
sub
ins
adc
int3
or
gs
ret
movs
xor
jne
xchg
imul
xchg
xor
loope
das
cmp
shl
mov
repz
mov
push
mov
es
xor
(bad)
pop
(bad)
lahf
xchg
mov
jmp
outs
push
mov
clc
(bad)
pushf
daa
in
adc
dec
push
stc
int
rcl
jo
jnp
les
imul
xor
retf
cmp
add
inc
mov
add
mov
or
xchg
repz
add
jnp
mov
push
add
push
xchg
and
jl
and
xchg
shl
pushf
xchg
push
pushf
popf
icebp
out
adc
rol
gs
movs
arpl
xlat
adc
fldenv
aaa
xchg
inc
daa
mov
xor
stos
add
cwde
in
repnz
dec
xchg
mov
out
inc
pop
adc
cmp
inc
out
aad
fistp
sbb
shl
int
xchg
inc
lahf
push
int
test
je
dec
sbb
mov
jle
fmul
and
movs
and
xor
sub
cld
mov
cmp
arpl
in
addr16
(bad)
aas
sbb
icebp
out
jb
scas
pop
push
mov
imul
xchg
pop
(bad)
cmps
nop
div
out
fisttp
mov
aad
push
dec
aad
and
sbb
mov
out
or
mov
les
mov
fadd
fistp
mov
fild
in
in
retf
adc
mov
cld
aaa
sub
inc
add
push
(bad)
jecxz
hlt
mov
jnp
cwde
xchg
xchg
icebp
or
inc
and
pop
push
loope
sbb
and
ins
jg
sti
mov
sar
mov
call
(bad)
pop
cmp
aad
lahf
loope
iret
cwde
imul
jmp
arpl
idiv
jno
inc
mov
add
sbb
sub
je
adc
xchg
push
add
movs
aam
mov
cmps
aam
xchg
frstor
add
dec
sub
fcom
stc
mov
cmps
call
das
and
ss
shr
fwait
test
sub
int3
push
test
dec
sub
sbb
and
and
sub
and
out
jnp
sbb
jmp
pop
mov
sbb
pop
push
mov
jae
test
mul
addr16
pushf
popa
aas
hlt
pop
dec
test
test
sub
aaa
dec
rol
mov
scas
sbb
xchg
mov
pop
and
mov
out
and
rol
enter
cmp
pop
or
sub
mov
mov
jb
movs
daa
mov
xchg
cmp
xor
fisttp
(bad)
fldcw
adc
pop
outs
jno
xchg
mov
(bad)
sbb
add
xor
aaa
jbe
lea
movs
imul
push
and
xchg
(bad)
div
dec
push
or
neg
aam
sahf
data16
mov
movs
adc
xlat
xchg
int
ds
jmp
(bad)
cmovnp
mov
neg
ret
nop
stos
pop
jl
fld
adc
adc
int
xlat
cmp
xchg
es
sti
fsub
stos
clc
call
dec
cmp
add
xor
std
aaa
dec
add
ja
mov
and
pop
test
push
or
fbstp
jns
cmp
ret
adc
icebp
pop
mov
shl
stc
mov
imul
ja
pushf
ss
ss
mov
push
loope
xchg
xor
iret
retf
mov
jns
js
sbb
cmp
push
iret
cmc
aaa
sub
sbb
add
or
dec
cmps
inc
cli
dec
scas
inc
pop
lahf
sar
xchg
adc
cmc
imul
(bad)
cli
sub
div
hlt
jmp
cmps
retf
xchg
jl
jl
les
mov
sti
out
sub
adc
gs
inc
(bad)
sub
in
mov
cmps
cld
mov
out
test
stc
pushw
arpl
retf
out
push
mov
scas
std
mov
(bad)
or
cmp
jmp
adc
lea
mov
je
mov
jmp
lods
cld
retf
jmp
das
test
jbe
sub
int3
mov
inc
ds
rcr
sbb
mov
in
shr
inc
test
jmp
fwait
add
adc
hlt
jb
pop
aad
enter
dec
mov
daa
mov
movs
mov
mov
inc
jmp
popa
dec
pop
aaa
icebp
or
std
jg
jnp
(bad)
pop
or
(bad)
pcmpgtw
adc
mov
(bad)
push
and
xchg
ins
push
test
pop
jb
push
push
mov
in
pop
repz
jo
mov
inc
mov
addr16
jg
aaa
xor
sbb
(bad)
in
ret
mov
and
jmp
mov
(bad)
mov
movs
xlat
loope
jne
pop
sbb
(bad)
sti
mov
mov
mov
out
and
adc
das
retf
adc
fstp
mov
add
add
int3
(bad)
aaa
xchg
mov
(bad)
lahf
stos
aaa
popa
xlat
add
bound
aad
js
mov
movs
lahf
mov
ud0
stos
js
xchg
mov
cwde
mov
test
popf
adc
inc
in
scas
cmp
fist
mov
push
gs
rcl
cmp
cmps
jno
stos
repnz
fist
outs
xor
and
xlat
ss
push
add
mov
nop
jg
xchg
ds
enter
lods
add
outs
inc
mov
and
push
out
xor
call
mov
mov
daa
scas
inc
cdq
pop
imul
int
or
mov
xchg
pop
fs
mov
mov
mov
dec
sub
cmp
dec
mov
int
cli
mov
or
inc
jo
retf
movs
cmc
test
or
(bad)
ds
ja
test
dec
add
mov
add
and
mov
in
lock
test
out
in
aad
jg
test
sbb
dec
test
pop
cmp
push
pop
sub
and
(bad)
fidiv
jl
aas
push
sar
lods
dec
pop
cwde
sbb
xlat
cmp
out
jbe
xlat
test
in
dec
xchg
dec
(bad)
xchg
pop
push
iret
call
cmp
mov
popa
dec
call
xchg
loop
add
adc
retf
jl
iret
retf
xor
mov
push
and
add
inc
stos
cmp
mov
adc
rcl
cmp
sbb
out
loopne
mov
ins
pop
xchg
cmps
mov
and
movs
dec
add
and
inc
xlat
inc
int
or
and
mov
ss
xchg
aam
mov
addr16
sbb
(bad)
inc
outs
popf
jbe
shr
mov
and
pop
xchg
pop
pop
jno
fldenv
mov
lahf
cmc
mov
idiv
xor
lds
push
adc
jns
mov
(bad)
test
pop
mov
mov
stc
imul
pop
std
int
ja
lods
cmp
mov
(bad)
in
push
out
pop
push
ret
inc
ja
stos
por
leave
or
lods
adc
gs
jns
clc
xchg
dec
or
fist
jp
daa
mov
add
xchg
xchg
xor
ja
or
call
movs
ror
daa
test
xor
dec
sub
fcmovnb
and
jne
inc
cmp
lds
cmc
out
mov
xchg
movs
cmps
shl
(bad)
and
js
add
inc
jns
mov
jmp
aad
mov
mov
cli
xchg
pop
(bad)
jle
jnp
or
out
push
pop
xlat
mov
xchg
xchg
jne
leave
loop
inc
test
push
arpl
sbb
movs
xlat
aad
leave
jbe
fstp
xchg
mov
arpl
call
xor
ja
pop
or
aaa
adc
aaa
pop
inc
arpl
jne
and
cmc
mov
adc
ret
pop
test
sbb
fld
xchg
cmc
mov
xchg
inc
ins
outs
pushf
xchg
inc
add
push
mov
inc
lds
out
aad
sbb
(bad)
frstor
jb
dec
mov
bound
imul
cmps
inc
imul
hlt
out
xchg
jb
lds
repz
icebp
out
xchg
fnstcw
hlt
xor
fwait
out
stos
xchg
in
lds
lea
adc
ja
or
daa
xchg
xchg
jno
rcl
cld
pop
mov
repz
mov
aam
xor
inc
outs
inc
cmps
xor
jo
in
xor
hlt
(bad)
mov
xchg
imul
mov
adc
arpl
push
mov
sub
inc
push
and
je
es
xlat
mov
enter
cmps
mov
dec
les
jno
das
cmp
cld
push
clc
pop
add
(bad)
sti
jbe
dec
clc
test
movs
imul
aaa
aad
add
repz
hlt
sar
retf
sub
xor
stos
in
or
cmp
sbb
ins
call
adc
mov
les
sub
mov
adc
mov
sbb
add
push
push
jl
je
jns
cli
xlat
enter
add
and
dec
push
jnp
data16
daa
dec
aaa
jnp
push
out
in
sub
lock
sti
adc
(bad)
cmc
or
inc
xchg
lds
or
mov
jae
in
pop
jge
push
cmp
cmp
xchg
out
adc
daa
test
mov
and
imul
nop
sbb
div
xchg
cmc
ja
dec
mov
ss
and
enter
mov
add
inc
cdq
jno
xchg
and
les
popa
sub
inc
daa
and
mov
not
mov
sbb
dec
and
not
dec
adc
lahf
xor
call
mul
mov
add
dec
(bad)
xor
mov
dec
xor
and
test
push
or
add
sub
stos
dec
mov
jne
call
out
retf
push
and
ret
or
sbb
pop
pusha
addr16
xchg
mov
retf
sub
lods
push
fstp
test
xor
addr16
inc
jge
in
sar
push
xchg
inc
push
repz
adc
jo
pop
mov
jo
pusha
fild
pushf
out
jecxz
lock
adc
jae
adc
test
sbb
retf
inc
fwait
sub
and
(bad)
ror
or
mov
jne
mov
cmp
addr16
cmps
lds
fisubr
lahf
inc
fsub
jecxz
jae
push
push
jbe
int
xlat
ja
add
sbb
inc
int3
mov
inc
aam
xor
pushf
out
loope
add
out
pop
or
fwait
sbb
ja
ins
gs
and
or
pusha
or
or
jge
(bad)
fdiv
jl
(bad)
(bad)
(bad)
push
add
cmps
pop
inc
sbb
cmp
or
idiv
cmps
(bad)
jmp
push
lds
mov
js
or
xlat
mov
push
sbb
mov
not
es
sti
mov
sub
push
mov
movs
inc
out
jo
retf
imul
add
and
fstp
shr
dec
sbb
mov
jne
xor
scas
ret
mov
test
jmp
cs
mov
pop
leave
sbb
gs
xlat
adc
jne
lea
stos
xchg
pop
retf
inc
mov
mov
jnp
pop
popa
fwait
gs
jg
pop
test
retf
ficomp
ficom
mov
and
adc
test
xchg
mov
and
jmp
add
inc
xchg
push
jno
xchg
mov
shr
xor
xor
fs
stos
add
jbe
xchg
jp
cmp
ja
dec
sar
adc
xor
inc
cmp
push
aad
xlat
fwait
pop
(bad)
and
retf
dec
cmp
jp
out
inc
adc
sbb
in
cmc
icebp
mov
out
xchg
in
loop
and
xchg
xor
and
inc
xor
mov
inc
out
rol
xchg
shr
es
addr16
not
imul
pop
adc
cmp
mov
mov
push
(bad)
xchg
mov
test
add
clc
push
adc
cld
stos
adc
inc
pop
xor
je
sbb
add
inc
xor
pop
xchg
sub
xchg
(bad)
hlt
(bad)
mov
add
push
ins
cmp
adc
test
aaa
idiv
jne
sub
cmp
ins
or
sbb
xchg
inc
ss
in
mov
mov
aad
sub
push
and
pop
sub
mov
nop
iret
inc
aam
out
clc
mov
jnp
mov
not
(bad)
cmp
adc
dec
xlat
inc
and
mov
pop
push
imul
es
clc
int
sbb
jns
xlat
out
push
pop
(bad)
out
test
xchg
or
in
xor
jns
adc
xor
push
aam
shr
mov
fldcw
mov
enter
mov
imul
fs
sub
mov
pop
and
dec
jnp
mov
(bad)
adc
mov
xchg
dec
ja
xchg
daa
ja
add
adc
pop
shl
leave
and
fnstcw
xor
aas
(bad)
(bad)
xor
sbb
pop
jns
imul
push
outs
mov
push
retf
push
in
shr
push
sbb
cmp
rol
test
stc
pop
imul
jno
mov
jmp
push
push
add
inc
loop
xor
aam
movs
stos
push
xchg
popf
xchg
mov
loop
loope
ret
dec
call
pop
fsubr
loope
jo
mov
sub
mov
fcom
out
sar
es
das
push
es
call
rol
test
push
pop
xchg
(bad)
adc
fwait
movs
jecxz
and
jp
aam
loope
mov
mov
ror
push
pop
mov
jne
sahf
mov
push
pop
cmp
test
dec
add
pop
in
loope
ret
je
imul
mov
or
xor
fwait
adc
xchg
cmp
push
ss
push
pop
cmp
jmp
mov
sti
test
rep
fcom
adc
sbb
push
leave
mov
xchg
xchg
sub
cmp
out
xor
bound
mov
xor
ja
pop
and
fs
cmps
ss
mov
push
sti
mov
loop
loope
aaa
cmps
xlat
fidiv
push
jne
and
gs
xor
cs
cwde
ret
pop
sbb
int3
mov
aam
aaa
push
daa
inc
jns
data16
sar
jmp
clc
stc
xchg
pop
imul
bound
outs
jl
dec
int
mov
mov
aas
jg
out
sub
aas
nop
sub
inc
(bad)
xor
mov
push
mov
jo
push
mov
xchg
cmps
jae
ret
rcr
push
cwde
cmp
and
xor
sub
movs
je
ins
or
stos
inc
jb
cmp
fld
sbb
stos
test
pop
test
jmp
mov
mov
sub
ret
jmp
es
(bad)
add
mov
stos
mov
inc
cmps
shr
mov
dec
jb
imul
cmps
hlt
std
inc
adc
xor
dec
out
lock
gs
lds
pushf
dec
test
(bad)
jns
add
rol
aad
adc
xor
push
cmp
cmc
stos
adc
rcr
dec
jg
add
inc
or
mov
ins
dec
pop
imul
dec
gs
sbb
mov
(bad)
xchg
adc
in
loope
and
xor
in
stos
sub
push
daa
test
or
jbe
push
push
push
mov
push
dec
test
lahf
in
mov
sub
js
jg
sti
aam
jg
adc
or
into
gs
stos
push
adc
mov
mov
inc
mov
cmp
push
stc
movs
xor
ins
dec
or
daa
push
pop
or
and
push
mov
dec
cmps
xor
jno
mov
add
push
inc
add
pop
and
and
xchg
stc
mov
rcl
xchg
adc
push
call
(bad)
gs
repnz
xchg
xchg
or
aad
call
push
scas
mov
sbb
je
dec
ss
mov
shr
in
jecxz
rol
sbb
fstp
pop
xchg
xor
mov
sub
fstp
inc
dec
pop
jbe
xlat
(bad)
aaa
pop
inc
lds
sahf
adc
js
xor
sub
movs
jmp
loop
(bad)
mov
sub
movs
mov
xchg
je
outs
gs
jne
adc
cmc
test
mov
xchg
js
loop
add
mov
arpl
push
push
div
iret
movs
adc
xchg
pop
mov
(bad)
cmp
xor
cmps
arpl
jbe
xor
es
sub
popf
mov
push
fild
and
in
mov
movs
fdiv
push
dec
push
sbb
sbb
push
addr16
movs
push
jmp
cmps
xchg
jp
fwait
dec
data16
call
arpl
push
int3
adc
pop
push
ret
or
fisub
inc
pop
cdq
test
mov
xchg
and
mov
ja
clc
inc
dec
mov
or
cmps
mov
test
mov
sbb
clc
aaa
push
add
stos
mov
test
loopne
xchg
push
xor
and
or
adc
jno
aaa
ins
sar
add
shl
mov
retf
inc
inc
jo
adc
xchg
or
(bad)
div
inc
mov
xor
sar
mov
and
pop
add
add
sub
out
xrelease
jns
push
xchg
rol
movs
stc
push
jmp
add
and
mov
xchg
rol
inc
xchg
fchs
and
mov
xchg
push
jne
jno
cmp
gs
inc
and
in
stc
cmps
add
data16
out
ja
int
pop
and
push
dec
and
xchg
movs
xor
xor
stos
mov
gs
addr16
clc
sbb
or
ret
std
mov
xchg
mov
mov
and
(bad)
mov
rcr
adc
jecxz
add
mov
addr16
jb
push
les
xchg
imul
cdq
inc
hlt
cmp
mov
add
pusha
push
jo
jae
and
movs
xchg
sbb
lods
jecxz
push
hlt
sbb
repnz
sub
stos
jl
pop
je
aad
push
mov
in
mov
xchg
fs
adc
and
gs
xchg
mov
mov
mov
sub
and
(bad)
xchg
test
cwde
pop
inc
ins
(bad)
jecxz
ja
push
lods
cmp
(bad)
ins
ret
cmc
mov
addr16
loop
fstp
fwait
aaa
movs
pop
(bad)
call
cdq
je
sbb
xchg
test
imul
add
xchg
sbb
xchg
sub
mov
out
pop
outs
les
fld
shl
mov
es
mov
sahf
jbe
sbb
ins
jno
lds
xor
push
push
ins
adc
push
mov
xchg
add
jmp
cmps
mov
sti
aad
sub
inc
push
js
(bad)
sbb
inc
xchg
(bad)
mov
bound
jne
or
push
sbb
or
enter
cmp
mov
xchg
movs
cmps
push
jae
retf
xor
pop
dec
mov
daa
mov
popf
dec
sbb
jo
xchg
cmp
sbb
frstor
fmul
mov
inc
xchg
test
movs
inc
lods
and
fmul
stos
lds
add
dec
and
sub
pop
mov
push
fdiv
mov
xchg
inc
arpl
pop
dec
xchg
cmp
scas
and
jmp
cmp
cdq
ss
test
pop
xor
(bad)
ja
test
mov
pop
gs
cmp
inc
cli
test
in
imul
mov
mov
ins
mov
leave
xor
push
xchg
push
enter
int3
inc
gs
cmp
movs
push
jne
fnstenv
(bad)
test
ds
xchg
lea
loope
xlat
pop
jmp
inc
imul
xchg
aaa
cmps
(bad)
jmp
loopne
fs
popf
cmp
push
mov
inc
sti
push
or
dec
pop
dec
sbb
xchg
jp
sbb
push
jns
imul
iret
fdiv
cmp
addr16
sub
mov
rcl
out
clc
lahf
sub
jno
sbb
xor
pop
test
sahf
jb
es
cmp
or
add
mov
(bad)
fistp
pop
jns
xchg
fdivr
mov
ins
clc
cli
movs
pop
jmp
add
xchg
sbb
test
push
mov
push
in
std
cli
es
pop
pop
pop
out
jmp
test
fst
rol
fisttp
xchg
adc
(bad)
addr16
(bad)
and
ja
add
dec
xchg
sti
jae
xor
sbb
push
rcl
aad
stc
push
dec
xchg
leave
out
out
xlat
mov
ja
or
daa
jbe
mov
retf
mov
cmc
jg
add
stc
mov
je
js
xchg
lahf
adc
xlat
mov
jmp
sbb
(bad)
xor
jmp
inc
or
mov
jae
mov
cmps
sbb
cmp
push
xor
fmul
hlt
std
pop
mov
jg
test
aam
aaa
(bad)
cmc
cmps
vsubsd
push
outs
jmp
loope
repz
aaa
add
jmp
sti
mov
jg
inc
movs
not
or
sbb
das
dec
out
push
pcmpeqw
jb
test
stc
outs
push
mov
inc
jecxz
xor
cmps
mov
xlat
sub
mov
pop
sbb
mov
cs
ja
cmps
leave
jne
pushf
in
pop
jmp
sbb
sub
push
jb
ins
pop
jnp
(bad)
jmp
jns
out
pop
xor
add
or
cmp
outs
inc
test
pusha
sti
xchg
mov
ins
cmps
popa
add
lea
(bad)
adc
sub
add
push
push
dec
xor
neg
es
fistp
xchg
enter
in
mov
xchg
jns
dec
pushf
pusha
inc
ins
mov
sbb
add
rol
inc
push
jbe
pop
gs
stc
mov
es
jo
cdq
stos
in
and
lock
scas
fs
jns
mov
hlt
arpl
mov
xor
fs
adc
xchg
fnstcw
pop
and
push
pop
inc
xlat
mov
xchg
sbb
xor
out
call
retf
jns
or
pop
jbe
cmp
xchg
jae
sar
in
loopne
pop
rcr
sti
sbb
jnp
add
sbb
and
jnp
and
cli
pop
in
in
call
inc
(bad)
inc
jmp
push
jbe
out
adc
mov
and
jmp
sti
cmp
dec
test
or
mul
mov
out
push
xchg
dec
sti
cmp
jg
sbb
pushf
out
mov
mov
data16
xchg
neg
adc
cmp
xor
xchg
inc
aam
jne
out
ins
in
adc
pop
sub
and
movlps
rcl
xor
cwde
and
xor
ds
hlt
mov
and
or
mov
jb
push
cmp
test
jmp
xor
mov
sub
in
push
ret
les
pop
stos
(bad)
pop
in
mov
test
mov
xchg
cld
mov
and
sub
pop
jmp
jbe
jecxz
mov
mul
sub
add
fstp
test
loope
call
mov
pop
imul
in
push
dec
add
movs
xchg
or
add
sub
popa
dec
retf
test
xor
mov
or
clc
ja
cmp
cmps
dec
stos
mul
push
xlat
sub
sahf
or
or
xchg
cmp
mov
neg
imul
rcr
mov
adc
test
fnstcw
inc
sbb
cmp
repz
ss
in
adc
jmp
(bad)
xor
sub
imul
lods
push
loope
mov
mov
cdq
jmp
pop
hlt
imul
fnstenv
pop
mov
mov
pop
je
into
xor
movs
pop
xchg
not
out
jge
lds
clc
js
jg
(bad)
push
sbb
xlat
push
cmps
movs
mov
sti
gs
xchg
fwait
xor
jmp
pop
and
xor
pop
cmps
aam
jns
push
(bad)
jle
cld
pop
mov
xchg
(bad)
push
mov
(bad)
retf
adc
aaa
push
movs
cdq
aam
cli
push
fadd
je
jg
dec
aad
sbb
out
push
xchg
push
mov
add
sub
xchg
imul
xor
shr
sbb
sbb
push
inc
inc
shr
xor
cmp
or
push
dec
inc
fstp
test
ins
scas
sub
sub
test
cli
jbe
xchg
push
cdq
inc
sub
xor
pushf
sub
jnp
dec
cmp
and
cwde
fbld
mov
sbb
jmp
dec
and
mov
ja
add
mov
mov
inc
test
mov
xor
call
dec
cmc
push
add
jne
gs
cmp
pop
stos
push
sbb
js
xchg
das
xchg
sbb
inc
mov
xor
neg
outs
and
es
je
inc
jnp
jbe
(bad)
mov
arpl
xlat
sub
nop
ds
and
cmp
out
out
add
pop
xchg
inc
xor
jmp
mov
mov
jmp
pop
jnp
fstp
and
push
mov
aam
cmp
es
fstenv
push
js
push
in
daa
mov
cmps
sub
mov
out
push
scas
adc
xchg
cwde
jge
fisubr
retf
cwde
mov
xlat
jecxz
jmp
retf
inc
es
and
xchg
popa
xchg
fldcw
out
jnp
dec
fdiv
ss
addr16
cdq
cwde
test
or
in
aaa
xchg
sahf
aad
leave
dec
push
inc
ficomp
imul
push
test
stos
jno
cmp
les
xchg
push
addr16
rcr
xor
cmp
(bad)
(bad)
out
jne
pop
sbb
xor
jmp
adc
lods
addr16
sti
pop
out
mov
out
inc
xchg
xlat
xor
mov
addr16
out
retf
jl
inc
jne
and
leave
call
and
xchg
neg
xchg
mov
mov
xor
aaa
fs
test
ret
dec
adc
mov
rcl
stos
loope
sub
push
jecxz
retf
mov
movs
mov
shl
push
add
pop
test
movs
jmp
shl
sbb
add
lods
rcr
ss
repz
lahf
add
jae
cmps
movs
or
inc
les
xor
inc
cmc
mov
mov
xor
add
pop
loopne
xchg
inc
nop
mov
add
dec
xor
pop
pushf
push
aam
jmp
push
xchg
leave
sub
test
sar
mov
xor
out
retf
sbb
jnp
pop
xor
test
fistp
pop
cmp
jge
inc
jbe
push
out
fdiv
xchg
das
stos
xchg
in
xor
icebp
cmp
push
in
stos
jae
imul
and
xchg
repz
repnz
adc
inc
fbstp
xor
add
mov
ret
xchg
das
push
push
push
movs
xchg
inc
cmps
mov
aaa
or
stos
mov
and
and
outs
xchg
idiv
ret
cli
sub
aaa
out
inc
add
leave
ja
xchg
jae
into
lods
enter
mov
addr16
das
in
push
pop
push
jmp
mov
mov
xchg
jno
push
jle
pop
jmp
call
pushf
daa
xor
movs
(bad)
sbb
cmp
jp
mov
adc
ror
mov
sbb
inc
fs
call
fnstcw
in
clc
sbb
xchg
pop
fs
aaa
mov
jmp
movs
movs
test
pop
ror
add
out
aad
and
mov
push
scas
fldcw
stos
jmp
or
fist
movs
dec
xor
mov
inc
jmp
jmp
and
dec
sti
sbb
or
mov
leave
int3
call
stos
outs
mov
jl
ja
shl
mov
je
push
mov
cli
cli
mov
mov
dec
mov
add
loop
xchg
dec
cwde
push
arpl
test
fnstsw
dec
test
dec
inc
mul
jmp
in
jns
fwait
icebp
iret
inc
in
cmp
cmp
or
cmps
add
mov
(bad)
jmp
call
xor
aad
and
or
pop
out
fnstenv
gs
xor
shr
mov
jg
mov
mov
test
xchg
test
xchg
pop
xchg
test
mov
inc
outs
fldenvw
xchg
outs
les
ss
call
lock
mov
xchg
and
mov
xchg
add
inc
xor
test
cdq
xchg
(bad)
rcl
mov
inc
adc
popa
xchg
xor
and
cmps
and
cmp
test
inc
leave
addr16
inc
popa
jo
jbe
inc
and
repz
sti
in
cdq
(bad)
push
fwait
sbb
push
xlat
sub
pop
nop
jle
daa
and
pop
mov
out
out
hlt
sahf
sti
xor
pop
je
jb
aas
add
inc
dec
adc
test
mov
mov
adc
enter
add
pop
and
aaa
push
and
and
xchg
xchg
cmp
aad
in
icebp
pop
shl
xchg
xchg
xchg
or
clc
mov
fsub
mov
push
sub
pop
xor
inc
jnp
ss
loop
mov
and
cmc
adc
lds
cmp
test
push
push
push
es
push
add
fwait
in
push
fld
out
xchg
mov
push
push
xor
sub
xchg
hlt
ret
xchg
test
mov
aam
(bad)
repnz
push
and
pop
or
push
daa
aas
mov
aam
gs
lds
ret
lock
pop
cmc
repz
bound
cmp
clc
jbe
mov
mov
xlat
in
(bad)
xchg
mov
or
mov
rcl
push
push
repnz
dec
xlat
aad
cmps
hlt
lds
std
arpl
adc
xor
adc
ret
les
mov
mov
fistp
mov
aas
addr16
es
mov
mov
leave
fdiv
xor
cmps
out
xor
xor
adc
in
imul
shr
xchg
mov
mov
and
cmps
jnp
outs
(bad)
and
imul
sbb
ret
les
out
loope
aad
and
add
imul
sub
mov
inc
xchg
inc
jns
(bad)
cmc
ret
aad
sub
add
ja
lahf
lds
mov
mov
or
sbb
mov
xor
fistp
xchg
push
mov
pushf
call
inc
dec
lods
push
xchg
add
push
leave
sub
addr16
test
add
sbb
jge
cmps
popa
push
xchg
jbe
dec
leave
je
ret
xor
or
pop
jne
dec
std
pop
daa
movs
xchg
mov
dec
sti
pop
xchg
sub
cmps
mov
retf
fwait
dec
cmp
and
dec
push
fmul
inc
mul
test
mov
xchg
cld
neg
push
mov
nop
xor
into
sar
cmp
movs
nop
push
and
inc
outs
lds
adc
jb
mov
addr16
jae
idiv
and
cmp
leave
call
mov
ret
jg
xchg
push
pop
and
popa
add
jno
sub
in
movs
idiv
xor
mov
mov
jge
mov
dec
(bad)
ret
popf
loop
mov
mov
mov
push
call
dec
call
add
mov
pop
cmp
rol
das
push
xchg
shr
dec
sbb
pop
arpl
xchg
pop
mov
sub
je
dec
push
sbb
pusha
inc
sub
pushw
fisttp
div
jno
mov
sbb
mov
mov
lahf
cmp
stos
mov
mov
addr16
popa
mov
stos
or
push
push
push
nop
fcmovbe
dec
adc
mov
and
fs
sub
ret
popf
out
(bad)
sub
ret
jg
mov
and
test
repz
ins
cli
adc
(bad)
test
xlat
movs
idiv
cmc
mov
mov
mov
sub
xor
xlat
xor
dec
sbb
enter
inc
out
sub
xchg
adc
jbe
(bad)
stc
push
out
push
jns
mov
push
(bad)
adc
mov
test
push
cmp
cmp
mov
dec
in
add
mov
ds
movs
retf
mov
in
mov
xchg
mov
daa
jp
sub
popf
sub
aad
adc
test
xor
jb
xchg
test
sbb
cmp
loop
and
or
in
inc
mov
xchg
cmp
cmps
jo
xchg
mov
pop
pushf
sar
aaa
ds
test
(bad)
mov
in
lea
xor
loope
test
mov
push
mov
xchg
lds
fwait
mov
sub
arpl
bound
cmps
cmp
or
enter
fwait
sbb
push
out
jl
aam
add
ins
sub
push
out
fild
cli
add
hlt
(bad)
dec
out
es
pop
fidiv
or
add
call
xchg
xor
mov
jbe
jne
dec
jmp
fidivr
stos
xchg
out
into
adc
add
adc
pop
int
lds
cmp
or
or
daa
jne
daa
push
sbb
clc
xchg
push
push
xor
imul
loopne
aad
call
pop
push
ja
std
push
test
out
hlt
pop
mov
ss
enter
loope
cmp
add
stos
jp
cmps
fistp
sub
repz
jb
lods
das
fadd
rcr
sub
adc
test
addr16
or
jno
xor
fs
jp
int
stos
pop
repnz
xchg
aad
xor
sti
mov
or
add
stc
xchg
stos
mov
sub
mov
hlt
mov
repnz
jmp
push
sub
cs
jge
out
(bad)
push
ja
outs
add
outs
scas
outs
jp
stc
clc
xor
push
stos
add
pop
xor
jl
pop
cmp
or
repnz
(bad)
sbb
mov
inc
and
ror
mov
push
inc
mov
push
(bad)
push
aaa
gs
cmp
mov
stos
(bad)
pop
adc
dec
xchg
js
enter
mov
popf
sbb
push
test
sub
(bad)
or
data16
cdq
xor
aam
or
push
xchg
xchg
xor
xchg
inc
gs
aad
mov
xchg
xor
mov
es
imul
jb
fld
mov
ss
(bad)
movs
jl
call
call
mov
inc
inc
aas
or
lahf
out
push
jb
lock
push
aam
mov
jmp
lock
jne
or
jbe
jb
movs
dec
push
movs
jns
jecxz
ja
inc
repz
and
mov
pop
xor
daa
mov
adc
adc
add
xchg
xor
imul
lds
int3
jmp
pop
cmp
iret
jno
mov
pop
sbb
ja
repnz
cmp
shl
(bad)
not
cdq
push
out
aas
push
imul
rcl
inc
xor
mov
xchg
shl
jp
pop
pop
jne
lods
and
arpl
rol
inc
jmp
jp
jb
mov
push
ret
iret
out
mov
ins
inc
je
jecxz
pop
inc
adc
sbb
fwait
lock
xchg
push
outs
loopne
mov
and
sbb
fadd
ins
or
shr
pop
inc
inc
mov
xor
mov
or
(bad)
and
fsub
(bad)
pop
sar
jl
sar
std
cmps
xor
push
cmp
(bad)
addr16
sub
call
(bad)
push
push
stos
sbb
jmp
cmp
imul
cmps
pop
sbb
setbe
or
push
cdq
addr16
xchg
sbb
mov
adc
ins
adc
outs
test
xchg
scas
and
leave
push
dec
pusha
out
push
push
add
inc
add
out
xchg
movs
mov
push
adc
test
mov
cmp
sub
inc
jbe
dec
xchg
jnp
sub
lods
mov
ins
jns
shl
or
stos
(bad)
fwait
popa
lods
xor
out
adc
call
daa
fdiv
xor
data16
inc
push
or
hlt
push
jae
nop
rol
enter
cmc
jns
adc
cmp
inc
sub
and
jno
es
cli
xor
push
cmps
gs
addr16
mov
je
sub
movs
xor
mov
cmp
cmps
xor
(bad)
xchg
add
pop
gs
mov
and
inc
mov
xchg
repnz
fdivr
jle
or
jecxz
push
dec
div
mov
inc
lds
push
pop
add
add
push
dec
push
jne
cmps
shl
fsubr
test
push
test
ja
jb
xor
aad
sbb
xchg
or
stos
xor
jb
(bad)
mov
and
stos
aad
sti
push
xchg
(bad)
sub
add
ins
mov
jmp
enter
cmp
repnz
mov
jle
rcr
cmp
mov
in
mov
pop
add
or
scas
inc
pop
or
pop
dec
cmp
pop
scas
iret
test
mov
outs
fild
mov
ror
xor
out
call
or
iret
daa
dec
or
jnp
call
push
pop
ret
jno
ror
lods
or
or
dec
outs
mov
inc
fs
(bad)
retf
hlt
cmp
sar
lods
das
inc
cmp
dec
push
fadd
dec
sbb
pop
sub
ss
dec
aas
mov
cs
jae
fisttp
dec
ficomp
mov
mov
ret
mov
jge
adc
lea
ins
test
mov
jg
mov
mov
call
push
or
popf
nop
dec
in
mov
(bad)
mov
les
inc
in
xor
retf
mov
add
mov
mov
adc
lahf
add
mov
dec
outs
dec
jg
dec
adc
xchg
(bad)
mov
fst
mov
xor
imul
xchg
lea
mov
neg
pop
mov
fcom
add
mov
cmp
push
and
mov
cmps
mov
adc
fdivrp
xchg
push
sub
pop
inc
movs
call
adc
lds
lods
adc
sub
jp
fcmovnu
jae
push
cli
dec
xchg
inc
arpl
sbb
sub
sbb
mov
xchg
mov
retf
push
mov
(bad)
jle
mul
pop
or
jae
pop
jno
mov
push
mov
sub
xchg
inc
adc
and
lahf
repnz
mov
mov
ds
and
fcomp
sbb
(bad)
pop
xchg
push
pop
jae
aas
cli
xchg
pop
rcr
mov
adc
push
pop
push
retf
mov
repz
adc
sbb
ds
fcomi
inc
push
push
fdivr
xchg
(bad)
into
mov
push
stos
jecxz
push
cli
in
neg
mov
neg
sbb
mov
mov
mov
push
jbe
push
fdivrp
pop
xchg
adc
mov
lahf
adc
push
shl
inc
xchg
div
cmp
movs
cmp
lahf
push
cmp
sbb
cmps
xor
add
ds
jae
push
push
enter
jb
cli
call
fidivr
jae
push
mov
call
xor
outs
mov
mov
cmp
xchg
add
push
push
mov
jnp
xor
stc
das
dec
jo
das
add
and
adc
add
push
loope
mov
push
scas
fs
(bad)
fadd
add
cmp
std
add
jo
lock
in
cmc
push
mov
jns
aam
shr
mov
(bad)
and
push
pop
xor
jge
(bad)
jne
xchg
cwde
stc
pusha
shl
clc
inc
loopne
sbb
in
inc
push
mov
sub
shl
jo
jo
push
sar
xor
scas
cli
push
in
vpmulhuw
sbb
lock
push
add
daa
in
repnz
les
mov
stc
lods
jo
stc
add
sar
jnp
sbb
push
mov
enter
call
(bad)
repz
sbb
fdiv
cmps
add
jno
cmp
sbb
aam
and
mov
jno
push
ret
sbb
popa
lock
lock
loopne
jno
xor
jae
(bad)
jne
lds
nop
jl
jae
ret
push
lock
jne
out
add
in
xchg
pusha
movs
clc
mov
gs
in
push
loopne
outs
pcmpeqb
sbb
movs
jns
(bad)
lock
dec
mov
cmp
imul
jo
loopne
xor
cli
cmp
test
push
dec
and
call
hlt
add
mov
xor
mov
sub
xor
js
je
icebp
lock
movs
add
jno
cdq
add
mov
sub
sub
xor
not
push
lods
cmc
xchg
call
je
jbe
cmc
fwait
cmc
(bad)
rol
add
push
jne
jne
jae
cmc
xchg
mov
adc
jl
or
icebp
out
and
adc
jge
gs
pop
out
xchg
in
adc
inc
mov
repnz
cmc
xchg
cmc
add
add
xchg
inc
shl
dec
add
adc
adc
mov
adc
xor
shr
and
int
xchg
loopne
push
iret
loope
mov
jb
xor
xchg
or
int
repz
outs
pop
mov
hlt
dec
mov
repnz
repnz
jb
jb
jb
in
adc
stc
outs
retf
iret
jle
movs
gs
test
stos
add
jge
jp
pop
xchg
je
in
js
jbe
xor
not
in
mov
aad
addr16
pop
jns
adc
mov
lods
call
rcr
xor
nop
call
pop
outs
jbe
in
(bad)
dec
mov
sub
(bad)
adc
inc
popf
aad
dec
push
xchg
cli
adc
adc
aad
xchg
push
sbb
bound
push
cmc
xchg
jl
loopne
and
neg
shl
gs
movs
iret
fs
dec
fdiv
sub
or
dec
mov
neg
loop
mov
mov
cmp
sbb
pusha
mov
sbb
lea
test
fmul
or
sahf
dec
pop
push
leave
add
fmulp
or
inc
and
lds
cld
dec
cld
leave
inc
dec
add
dec
std
sbb
fnstsw
ror
or
pop
mov
cdq
or
push
fabs
mov
sbb
aas
iret
or
add
dec
dec
(bad)
leave
fwait
mov
or
ins
dec
or
mov
leave
sub
ins
xor
jp
mov
int
mov
dec
dec
dec
mov
add
mov
sub
fs
shl
inc
or
or
dec
dec
test
mov
sbb
push
popa
jmp
sub
adc
fnstenv
mov
jne
mov
dec
xor
in
inc
mov
and
dec
aaa
mov
loope
lods
call
shl
loop
add
int
xor
sub
je
leave
mov
popa
fisttp
ret
sub
test
(bad)
lds
sbb
dec
fild
mov
jae
std
cmc
test
test
cmc
fild
popa
dec
mov
or
add
mov
cli
pop
mov
dec
push
rol
pop
gs
or
add
addr16
mov
push
sbb
popf
arpl
aad
adc
cmp
or
sub
jecxz
cld
mov
push
jp
or
lock
arpl
loope
pop
jp
and
ins
ret
inc
call
je
arpl
cmp
jecxz
mov
cs
push
arpl
jecxz
arpl
dec
movs
out
test
add
stos
call
sbb
fwait
mov
xor
sub
push
arpl
jecxz
pop
mov
call
add
mov
dec
in
xchg
test
add
lea
call
fist
(bad)
(bad)
imul
iret
sub
add
enter
ret
jle
imul
lock
aad
cmp
sbb
jns
jns
cmp
retf
ds
sbb
jle
in
test
(bad)
xchg
shl
sbb
jb
add
icebp
pusha
imul
mov
adc
xor
aad
jo
xchg
dec
mov
fwait
movs
pop
mov
js
out
add
mov
repnz
daa
in
push
cmps
pop
xchg
out
xchg
add
inc
and
jno
clc
inc
bound
ret
push
and
jo
and
test
xor
xchg
(bad)
js
arpl
xchg
out
iret
or
hlt
inc
ret
bound
add
mov
jge
sub
mov
jle
mov
cmps
xchg
adc
mov
pop
xchg
cmps
es
ds
aaa
jge
ficom
fdiv
imul
rcl
loope
into
lahf
push
mov
sub
and
loopne
pop
xor
ins
fild
push
and
and
imul
icebp
aaa
mov
add
pop
add
mov
repnz
push
and
in
mov
out
test
out
xchg
out
pop
into
fsubr
or
xor
int
cmps
sub
xchg
or
cs
stos
loope
std
sbb
adc
loopne
daa
push
lock
or
daa
adc
addr16
out
mov
(bad)
int3
jo
inc
mov
inc
das
bound
xchg
jne
ret
out
add
in
std
mov
mov
rcl
and
(bad)
iret
fadd
add
loope
add
push
dec
ret
bound
ds
inc
psraw
cli
rcl
mov
(bad)
iret
fisttp
sbb
outs
add
pop
std
int
xchg
cmps
loope
jnp
arpl
ret
jne
test
aas
and
and
mov
mov
test
pop
int3
cld
push
sub
adc
xchg
ins
cmp
shr
pop
and
sub
or
ins
bound
ins
bound
push
out
xor
movs
inc
rcl
and
shl
mov
fbstp
pop
or
mov
bnd
lods
das
pop
sahf
ret
ret
cmc
cmps
or
add
mov
pop
out
popa
inc
das
arpl
and
lds
push
in
push
cld
sub
push
aaa
mov
daa
nop
cmp
jbe
ja
inc
inc
adc
add
lahf
aaa
test
gs
aaa
inc
aaa
arpl
or
loop
mov
xchg
mov
or
jbe
and
aad
ja
and
sti
or
out
add
cmp
mov
daa
std
xor
dec
pop
out
mov
inc
mov
cmp
mov
xchg
arpl
sbb
bound
in
pop
jnp
ja
cmps
inc
arpl
inc
stos
mov
sti
jns
cmp
fistp
mov
inc
(bad)
cld
in
hlt
gs
mov
dec
mov
test
pop
sub
lods
jmp
arpl
daa
ja
sti
dec
mov
inc
cmp
repz
pop
aaa
call
mov
daa
and
or
hlt
lea
hlt
loopne
add
test
shl
out
cld
cmp
or
mov
mov
das
inc
pop
loopne
add
out
outs
jae
xchg
out
cmps
pop
aaa
repz
out
daa
ret
loope
out
out
cmps
mov
out
daa
aam
mov
jbe
cmps
jp
adc
mov
aaa
xchg
out
cmps
push
fbld
das
add
daa
(bad)
cmc
lahf
inc
pop
arpl
shl
sti
daa
aad
jecxz
adc
cmps
pop
(bad)
pop
ja
mov
push
mov
adc
bound
push
daa
xchg
push
addr16
aaa
inc
adc
push
jbe
pop
and
or
xor
repz
fs
scas
and
mov
pop
push
adc
aaa
pop
jbe
mov
mul
cmp
arpl
add
xor
scas
cli
add
mov
add
mov
in
ja
xchg
std
sub
(bad)
jne
push
xor
or
test
push
push
mov
inc
fcom
les
cwde
adc
cmp
mov
or
sti
les
xchg
in
jge
or
sub
(bad)
rol
mov
les
mov
mov
xchg
loopne
inc
xor
es
mov
cmp
sbb
and
mov
adc
xchg
daa
xchg
popa
inc
or
popf
sub
xchg
cmps
adc
mov
push
pusha
sahf
jge
sub
cmps
xor
push
daa
adc
lea
jne
sahf
mov
ins
and
loope
std
lods
mov
push
push
mov
in
xor
mov
std
cmp
shl
sub
lods
aaa
cld
mov
daa
cwde
sub
int3
std
cmp
and
daa
imul
jne
data16
loope
push
or
ins
add
cmps
fldcw
shl
std
sub
cmp
mov
les
inc
xor
dec
or
and
and
jge
dec
in
adc
ss
xor
push
xor
mov
sub
adc
mov
cld
test
sub
popa
adc
jne
xor
test
fcomp
or
jmp
xor
cmp
cld
lods
(bad)
popf
in
jle
cmps
adc
push
in
(bad)
sub
and
nop
lods
mov
icebp
lock
(bad)
aam
mov
and
push
xchg
and
cmp
hlt
mov
xchg
fst
cmp
popf
inc
mov
fmul
adc
sbb
and
xchg
std
xor
add
outs
loop
rcl
imul
arpl
nop
push
nop
hlt
mov
arpl
add
fsub
xchg
jb
clc
add
sahf
mov
sbb
pop
lock
dec
cld
(bad)
sbb
cmp
pop
sar
lds
test
jecxz
mov
js
outs
test
jecxz
jl
dec
rol
mov
das
mov
or
ret
mov
arpl
cld
setl
add
push
cmp
(bad)
lds
xchg
pushf
sbb
sbb
sub
clc
cmp
mov
cwde
or
sbb
sub
adc
fnstcw
jl
cmp
and
mov
fstp
cmp
jbe
jg
call
cwde
pop
mov
pop
loopne
xor
test
mov
mov
mov
nop
mov
xor
mov
lock
test
rcl
adc
pushf
xchg
sbb
sbb
leave
shl
xchg
push
pop
push
pushf
aad
jl
mov
shl
shl
mov
in
push
sub
sbb
push
stos
adc
adc
adc
mov
pop
xor
adc
push
dec
mov
aam
add
dec
loop
cwde
mov
inc
push
dec
ss
cmp
push
xchg
jbe
cwde
mov
imul
or
and
and
rcl
jbe
data16
mov
inc
(bad)
fucomp
rol
and
ss
hlt
mov
pusha
and
mov
ret
mov
xchg
hlt
add
call
bound
mov
(bad)
cmp
mov
sahf
push
mov
outs
in
ret
aam
xchg
ret
rcr
add
cmp
(bad)
xchg
arpl
out
or
rcl
mov
jmp
push
or
(bad)
push
hlt
jbe
fimul
(bad)
mov
daa
xchg
dec
stc
push
mov
or
or
retf
sub
int3
aaa
mov
out
mov
aaa
and
inc
(bad)
adc
pushf
je
pop
pop
push
jecxz
ss
les
mov
mov
jl
fbld
popf
dec
pop
popa
jb
daa
mov
mov
inc
daa
dec
push
psadbw
dec
mov
js
mov
mov
mov
addr16
push
sbb
or
xchg
std
sti
inc
icebp
xlat
jne
cli
jl
stc
cmp
pop
push
inc
fcom
daa
jae
jae
jae
repz
cmps
repz
out
pop
jae
jae
jae
repz
cmps
jae
jae
repz
cmps
repz
addr16
jae
jae
jae
repz
cmps
repz
addr16
jae
jae
repz
pop
jae
jae
jae
repz
cmps
repz
mov
push
and
bound
xchg
hlt
add
sbb
pop
and
and
ret
xchg
mov
adc
xchg
xchg
out
clc
pushf
fcom
jno
imul
aad
loop
mov
dec
sbb
xchg
mov
xchg
sbb
pop
inc
push
pop
cmp
pushf
xchg
sbb
sbb
bound
adc
and
jae
inc
add
or
out
repnz
bound
and
pop
out
xchg
scas
add
dec
sbb
xor
xchg
ret
xor
pop
dec
sbb
mov
add
add
pop
(bad)
inc
dec
(bad)
cs
mov
sub
inc
jne
test
mov
into
fistp
dec
or
jns
out
xchg
xchg
aaa
mov
xchg
lock
jge
adc
ja
bound
je
imul
aaa
imul
bound
or
push
cs
jb
mov
rcr
xor
pop
jne
jmp
inc
imul
sbb
pop
jne
outs
mov
call
dec
dec
sbb
pop
cs
inc
jb
push
and
inc
outs
inc
fs
mov
bnd
dec
je
sub
sub
inc
xor
test
mov
pop
imul
data16
popf
fwait
inc
sub
push
and
inc
ja
bound
inc
addr16
cmp
and
and
loop
loop
adc
(bad)
retf
mov
push
in
stc
call
inc
or
cld
stos
dec
lea
sahf
iret
pop
(bad)
(bad)
in
pushf
xchg
cmp
jnp
cs
out
(bad)
out
(bad)
cs
pop
outs
inc
outs
inc
cs
loop
and
mov
mov
lock
and
mov
mov
mov
and
pop
push
jp
mov
fld
mov
iret
mov
xchg
jecxz
sub
test
mov
mov
test
dec
xlat
mov
out
in
cmps
fldcw
mov
xchg
sti
out
mov
mov
mov
fild
sub
xchg
shl
xchg
push
cmp
xchg
xchg
ffree
(bad)
cld
mov
loop
jo
imul
(bad)
jmp
sbb
mov
not
jmp
jmp
inc
xor
mov
stc
and
test
addr16
mov
stc
adc
mov
aaa
out
mov
sbb
xor
rcl
jecxz
xlat
aas
test
jp
pop
or
movs
repnz
mov
dec
shl
push
push
setg
ja
or
call
add
shl
lds
popa
and
cmps
test
out
cmps
stc
out
shl
inc
xor
add
cmps
stc
gs
outs
mov
add
jae
mov
lds
es
cmc
xchg
loope
xor
push
arpl
in
out
pusha
mov
mov
push
jecxz
adc
les
shl
xchg
pop
xchg
adc
shl
out
aaa
inc
jne
hlt
popa
mov
mov
dec
jbe
add
xchg
test
mov
sub
mov
mov
rol
and
inc
and
and
inc
xlat
mov
xchg
xchg
cmps
inc
mov
pop
out
shl
xor
add
dec
xor
(bad)
cdq
imul
ror
adc
out
xchg
jge
repz
add
mov
mov
out
inc
adc
ret
xchg
adc
add
fs
mov
mov
cdq
xchg
out
inc
push
ja
pop
out
xchg
(bad)
(bad)
cmps
jbe
xor
inc
or
dec
push
test
frstor
js
nop
xchg
popa
and
fptan
mov
mov
(bad)
cs
jae
enter
hlt
(bad)
rcr
push
pop
jo
adc
ret
(bad)
aam
out
mov
mov
pop
cmp
shl
aam
xchg
fs
xchg
add
adc
out
lds
test
and
xchg
add
adc
mov
cmps
mov
jle
mov
dec
imul
ins
sub
sbb
loop
test
js
jae
jnp
push
or
sub
pop
in
mov
sbb
fistp
test
xor
jns
sbb
jmp
jno
sbb
ins
in
stos
clc
fild
pop
sub
fisttp
add
leave
hlt
sbb
sub
stos
cmp
clc
stos
enter
mov
mov
ins
popf
clc
popf
in
sub
or
cmp
dec
ja
lock
in
stos
lds
push
mov
popf
mov
jle
imul
inc
cmp
mov
je
push
in
jg
pop
dec
cmp
mov
sbb
push
inc
sbb
pushf
lods
int
popf
sbb
scas
jge
ret
scas
retf
adc
or
pop
inc
(bad)
xchg
sbb
repnz
int
sbb
cmp
clc
fild
sbb
mov
mov
mov
add
sbb
fsub
mov
pop
test
jle
or
push
mov
pop
push
or
arpl
shr
mov
and
dec
ror
xor
lds
sar
ins
sbb
xor
jmp
and
outs
xor
movs
stos
xchg
mov
cs
xor
jle
fld
pop
add
xchg
sub
jecxz
stos
jmp
int3
test
mov
xchg
mov
vshufps
pushf
pusha
sbb
xchg
aad
xlat
ret
or
fs
pop
outs
sub
aad
inc
gs
and
mov
mov
sbb
push
inc
movs
lods
out
mov
lods
mov
arpl
in
(bad)
pop
add
adc
scas
ror
dec
cmp
fs
sub
fs
jns
sbb
xchg
mov
mov
jbe
into
pop
daa
std
mul
jo
cmp
xchg
adc
aad
pop
or
jb
add
cli
js
sub
dec
repz
jne
test
nop
cs
add
sbb
xchg
fldenv
rcl
xchg
sub
push
popa
xchg
inc
mov
out
xchg
push
pop
mov
sub
hlt
mov
loop
out
rcl
loopne
outs
loop
sub
loop
daa
ret
fbld
loopne
and
outs
jmp
add
add
(bad)
adc
add
cmp
pusha
cmc
push
jg
jnp
jno
jne
aaa
dec
es
jbe
movs
scas
xchg
out
daa
mov
arpl
add
out
mov
sti
mov
nop
daa
je
jo
push
sbb
and
jno
ja
call
repnz
test
test
adc
and
data16
or
jp
div
(bad)
push
in
sbb
cli
sbb
inc
jp
gs
xchg
jecxz
rol
or
mov
cmc
mov
stos
cli
test
cwde
fist
and
and
jecxz
inc
xchg
scas
inc
or
fldenv
adc
lock
mov
jno
(bad)
push
mov
or
aaa
fldpi
fisubr
rol
and
(bad)
int3
mov
test
ins
dec
dec
push
jp
lock
mov
pop
mov
jo
mov
add
jne
jl
jne
in
lea
es
add
mov
jne
adc
xor
movs
in
lea
or
sub
rcr
movs
retf
adc
mov
test
popa
clc
nop
cmc
pusha
push
xor
mov
pusha
test
shl
dec
sub
aas
push
add
lahf
adc
movs
movs
xchg
xor
inc
or
les
jecxz
retf
or
jb
push
jle
popf
les
lods
(bad)
aad
inc
popa
and
in
add
jp
(bad)
movups
aad
sbb
gs
movs
test
add
les
frstor
popa
vpunpckhdq
mov
sbb
dec
cdq
fldl2t
call
inc
mov
pop
test
cmp
pop
dec
mov
lds
cdq
stc
outs
test
test
fist
adc
cmp
call
pop
lock
pop
mov
std
inc
xchg
enter
xor
mov
ret
xchg
and
cmp
stc
xchg
fnstcw
mov
cmps
cmc
mov
ins
leave
pop
or
movs
jns
mov
xor
mov
mov
sbb
add
out
fcomp
lahf
rol
ret
push
ret
fsubr
mov
ret
mov
std
fnstenv
pop
pop
xchg
imul
fyl2xp1
or
retf
add
mov
jns
mov
jns
sub
sbb
shl
sbb
push
cwde
cmp
std
dec
or
or
push
movs
cmp
xchg
jg
dec
xchg
sbb
cdq
(bad)
stc
cdq
mov
pop
cwde
in
add
in
fwait
leave
pop
in
fdivr
mov
dec
push
les
movs
xchg
mov
sbb
jnp
addr16
sub
mov
jnp
ror
cmps
rcr
(bad)
stos
leave
adc
ins
sbb
xchg
or
sahf
loop
in
cmc
ja
mov
ret
aaa
pushf
pop
neg
xchg
jecxz
adc
pushf
movs
imul
int3
or
jp
sbb
jecxz
cmc
rcl
retf
neg
mov
add
xor
mov
push
pushf
std
mov
mov
mov
gs
jl
pop
cmc
pusha
nop
jg
pop
imul
inc
call
call
xor
fld
in
sbb
fs
enter
cli
aad
lds
movs
ret
xchg
(bad)
mov
int3
paddsw
ret
xchg
or
dec
pushf
in
jmp
cld
rol
mov
repnz
sbb
pop
std
inc
dec
mov
aas
(bad)
and
cld
cmp
lds
mov
lock
mov
xchg
and
and
cmc
mov
or
outs
int
adc
mov
fisubr
in
cs
mov
and
mov
adc
int
lea
mov
push
mov
repz
es
call
xchg
mov
arpl
sbb
inc
or
test
nop
(bad)
(bad)
adc
push
jmp
cli
mov
sub
jg
ror
das
mov
movs
pop
xor
add
xor
add
aaa
dec
loop
bound
inc
jo
loop
and
pop
xchg
arpl
call
arpl
push
pushf
inc
(bad)
mov
jb
and
xor
sbb
pop
inc
shl
jl
pop
or
adc
add
es
add
push
cmp
in
adc
and
fwait
add
fsubrp
lock
lock
mov
bound
rcr
scas
cld
or
std
call
inc
ins
push
das
xchg
mov
xor
dec
test
ja
xor
xchg
or
fcmovbe
shl
sahf
jae
xchg
xlat
je
loopne
fidiv
jl
xchg
sub
repnz
xchg
pushf
lock
add
mov
loope
add
es
push
inc
sbb
jmp
inc
out
mov
push
xor
cmp
or
xor
xor
cld
jb
cs
xchg
nop
popa
mov
push
sar
or
mov
not
mov
push
fadd
sub
idiv
jp
xchg
and
adc
test
cmc
cmp
xor
nop
shl
mov
(bad)
nop
aaa
push
or
iret
jmp
jno
cmp
mov
loope
pop
sbb
sbb
pop
jl
pusha
mov
cmp
cmp
pop
repz
mov
cdq
dec
bound
inc
and
pusha
or
mov
jnp
(bad)
fidivr
ja
cmp
pusha
and
or
mov
test
push
nop
mov
call
and
stc
leave
in
mov
mov
sbb
mov
leave
call
mov
jo
arpl
sub
and
mov
pop
xchg
xchg
pop
shl
cs
das
int3
xor
push
push
sbb
nop
xchg
mov
sub
inc
pop
adc
mov
bound
fs
or
sbb
in
bound
popf
xchg
retf
sbb
scas
jmp
js
cwde
mov
xor
clc
call
cwde
clc
pop
inc
fldenv
pusha
mov
adc
xchg
jl
leave
cwde
es
neg
cmp
lds
clc
sub
out
ret
cwde
sbb
push
nop
cld
pusha
and
xor
into
xchg
jle
cmps
sub
rcr
into
or
jecxz
jmp
mov
or
aad
sub
in
xchg
mov
cli
sub
mov
or
fild
push
and
pop
cmp
pop
test
sub
mov
mov
lods
fld
sub
ret
xor
lods
mov
jne
mov
out
adc
lods
push
pop
pop
lods
mov
and
or
rcr
ja
mov
int
fld
(bad)
cmps
movs
and
fisubr
shr
fxch
sub
mov
aad
fwait
xchg
pop
(bad)
jmp
pop
popa
xor
push
or
mov
fisttp
pop
sbb
sub
push
mov
stc
ins
fstp
outs
(bad)
ja
outs
lahf
fucomi
stc
or
lods
sbb
test
fisubr
mov
call
stc
fucomp
mov
sbb
push
jmp
popf
push
or
fnstcw
push
pop
imul
mov
sub
rcr
std
fstp
push
jnp
mov
cmps
(bad)
into
mov
dec
sub
jns
pop
jno
mov
loope
(bad)
cdq
add
or
dec
sub
clc
xchg
int3
les
inc
inc
repnz
sub
cmps
(bad)
sub
mov
and
cmc
push
fst
mov
(bad)
test
and
xor
retf
in
add
in
jo
adc
xchg
loopne
xchg
in
rcr
adc
mov
loopne
and
and
pop
or
and
mov
mov
(bad)
mov
pop
js
push
gs
adc
call
xor
jge
push
jmp
xchg
leave
fidiv
pop
adc
jb
std
int3
adc
les
or
add
clc
icebp
out
mov
fwait
test
out
xchg
mov
imul
addr16
push
xchg
mov
sbb
xor
loope
xchg
into
scas
sbb
sbb
mov
xor
addr16
in
mov
pop
jge
aam
scas
mov
inc
js
dec
xor
outs
(bad)
mov
setno
add
aas
inc
sahf
mov
mov
out
mov
xor
and
iret
xchg
cwde
mov
push
push
mov
ins
mov
xor
pop
mov
loopne
mov
ja
sar
(bad)
cwde
sti
imul
xchg
or
or
mov
stos
stos
jp
sbb
inc
int3
in
cmc
cld
mov
les
sbb
sbb
mov
push
inc
sahf
dec
(bad)
jp
fcomip
sahf
jg
adc
sub
cmp
sti
ror
(bad)
les
les
sbb
pop
inc
cdq
adc
add
popf
adc
push
mov
daa
mov
push
push
ins
cmc
cmp
sub
aas
lods
dec
lea
mov
in
div
fsub
add
mov
dec
push
into
rcr
mov
lock
std
js
pop
cmp
push
sbb
push
in
iret
jp
retf
hlt
in
adc
xchg
dec
aas
imul
popf
sbb
xlat
cmp
mov
imul
cli
mov
loope
out
cmps
test
out
fidiv
dec
ror
mov
adc
ins
cli
ds
push
jnp
popf
out
xor
push
hlt
add
add
(bad)
mov
test
and
jg
cmp
hlt
mov
(bad)
xlat
xchg
mov
and
fisubr
loopne
pop
mov
out
mov
mov
mov
cli
xor
xchg
push
sub
push
sbb
into
xor
sub
add
adc
aaa
bound
bound
and
mov
xchg
loopne
daa
push
daa
xor
xor
pop
sub
sub
push
popa
xor
push
es
nop
jmp
sub
cmp
sbb
sub
xchg
loopne
daa
push
xor
xor
sub
cs
adc
bound
xor
push
es
nop
in
sub
xor
imul
cs
sub
sbb
and
mov
xchg
loop
and
xor
adc
sub
mov
sub
sub
arpl
bound
and
mov
xchg
out
es
xor
xor
and
jmp
jmp
sbb
cmp
pop
das
mov
sub
sub
ins
daa
arpl
and
mov
xchg
loop
and
adc
and
xchg
in
and
adc
pop
sub
sub
cmp
sbb
cmp
pop
sub
mov
push
daa
xor
xor
push
daa
(bad)
loope
clc
test
in
je
in
adc
lock
push
ins
enter
stc
test
data16
inc
aaa
pop
fsubr
ja
pop
sbb
sbb
push
or
or
stos
test
ret
addr16
sub
push
xlat
xchg
test
fstp
mov
sbb
push
push
push
cs
lods
xchg
dec
xor
cmc
push
(bad)
jp
mov
push
jno
lds
sbb
jne
xchg
aam
cmp
and
out
adc
inc
clc
mov
fmul
add
mov
fadd
push
xor
test
mov
push
fmulp
xor
sbb
mov
or
(bad)
xchg
cmp
out
enter
int
pop
repz
adc
cmp
push
jmp
sbb
jmp
std
inc
lahf
aad
add
jo
jb
push
inc
mov
jne
cmps
push
es
cmc
adc
sar
inc
aas
dec
mov
pop
outs
cmp
pop
(bad)
bound
sbb
mov
push
mov
loopne
sbb
mov
xlat
lods
xchg
cmp
scas
cmp
jp
pop
mov
xchg
(bad)
pop
shl
push
inc
aad
in
push
or
mov
dec
aad
dec
and
popa
jns
aaa
fndisi(8087
adc
push
xchg
xor
(bad)
jge
add
call
and
gs
clc
lods
jmp
cmp
jb
fistp
out
out
mov
jmp
pop
dec
xchg
bound
std
lock
(bad)
fst
aaa
(bad)
scas
jns
lods
jle
retf
test
sbb
push
dec
push
inc
sahf
cmp
int3
sti
jo
push
cdq
jne
sbb
cdq
adc
test
ret
out
or
jo
mov
pop
mov
and
inc
sub
add
fldl2e
or
pop
movs
sub
mov
adc
(bad)
xchg
jnp
xchg
jns
fcomp
int
out
cmp
jge
int
iret
jae
cmp
cwde
int
dec
mov
mov
xor
sbb
jecxz
sub
cmp
mov
cmp
or
(bad)
sti
mov
fisub
jmp
in
adc
xchg
addr16
xchg
mov
push
fsub
or
ins
push
scas
cmp
cmp
aam
mov
cmps
(bad)
and
cmp
retf
jo
cwde
cmp
addr16
imul
call
sub
add
xchg
xchg
scas
cmp
adc
sar
dec
pop
cdq
fsubr
clc
in
jae
inc
retf
adc
add
je
ja
pop
mov
xor
retf
stos
sar
(bad)
mov
sub
movs
ss
fdivp
out
js
retf
lods
dec
mov
mov
stos
cmp
sbb
cmp
jmp
cmps
adc
pop
dec
mov
daa
mov
fidivr
pop
pop
(bad)
mov
ror
or
sbb
pop
(bad)
inc
stc
jno
jmp
imul
jnp
mov
or
hlt
(bad)
xlat
push
jne
adc
fucompp
jbe
js
addr16
aaa
mov
sub
mov
inc
(bad)
jmp
pop
mov
jge
gs
xor
push
lds
mov
inc
dec
es
cmps
test
mov
cs
push
inc
mov
pop
ja
push
popa
in
test
mov
lds
icebp
enter
xchg
push
inc
jbe
and
adc
daa
fwait
aas
mov
mov
shl
inc
fwait
rcl
ins
cld
inc
ret
cmc
push
mov
push
pusha
xchg
add
pop
mov
fidiv
mov
imul
mov
inc
inc
push
pop
(bad)
adc
mov
test
fiadd
xchg
aad
(bad)
add
movs
mov
aaa
out
mov
and
cld
xchg
test
xchg
add
loopne
add
jno
(bad)
test
daa
call
push
call
into
test
mov
mov
lea
jb
in
xor
sbb
pop
pop
xchg
shr
std
and
dec
xchg
clc
mov
popa
push
sub
mov
mov
jp
jmp
cmps
jbe
shl
cmp
inc
outs
push
add
ja
inc
cmps
xchg
sbb
xchg
jne
popf
mov
inc
xor
xor
sub
xchg
push
addr16
pop
stos
jnp
push
ja
xchg
jle
in
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
(bad)
(bad)
call
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
ins
add
add
(bad)
(bad)
call
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
ins
add
add
mov
loop
dec
add
add
add
outs
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
jg
jg
jg
lods
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
cld
(bad)
push
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adc
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcr
and
sbb
add
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
dec
js
rol
(bad)
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
(bad)
inc
jmp
aam
imul
loope
jp
iret
inc
gs
(bad)
xchg
push
cmps
scas
mov
or
add
cmps
xchg
cmp
xor
dec
cmps
in
cmp
sahf
xchg
pop
call
lock
mov
popa
sar
mov
fsub
stos
xchg
clc
repz
mov
sub
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shr
mov
icebp
aas
ror
and
cmps
out
aas
inc
cmps
mov
ins
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
(bad)
loop
mov
jp
popa
push
pop
sar
jl
mov
das
lea
mov
inc
aas
and
movs
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
mov
aaa
fld
cmp
jno
shl
(bad)
out
dec
nop
pop
cmp
fisub
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
and
dec
dec
gs
std
or
in
ficomp
frstor
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
cmp
or
imul
mov
xchg
add
in
or
(bad)
leave
and
(bad)
mov
popa
retf
dec
sub
xor
or
dec
cmp
adc
ror
loopne
inc
test
lods
adc
pop
ret
push
jne
push
push
enter
jg
fsubr
or
pop
addr16
sbb
jge
jnp
jo
pop
je
mov
cwde
push
stos
loop
mov
pusha
xchg
cmp
daa
mov
sti
movs
and
xchg
sub
ss
test
mov
sub
out
test
pop
or
ins
xor
daa
jo
sar
push
mov
dec
dec
jno
dec
sbb
(bad)
sti
push
test
xchg
cmp
cmp
lahf
popf
sti
test
sti
icebp
cmps
jns
hlt
idiv
loope
jmp
in
int
call
ja
xchg
ins
inc
xor
dec
add
scas
push
lds
stos
push
and
sbb
lds
shr
popf
mov
js
dec
push
mov
mov
mov
movs
test
ror
or
int
or
stos
xchg
js
mov
jl
nop
adc
jne
fst
outs
mov
adc
sti
shl
inc
lahf
pop
or
pop
sar
push
pushaw
fcom
xor
dec
or
push
fadd
(bad)
movs
lods
and
fs
std
daa
movs
dec
loopne
mov
cld
lods
pusha
mov
xchg
xchg
loop
das
sub
mov
das
xor
out
xchg
pop
test
popf
popf
sub
out
mov
push
add
mov
ss
cmp
repz
not
xor
loop
repz
pop
lock
ret
ds
xchg
dec
add
shr
mov
sti
fsubr
loopne
imul
mov
(bad)
dec
xor
leave
jle
lods
mov
mov
ja
or
lds
xchg
sub
mov
pop
cmp
inc
adc
inc
push
sahf
cmp
and
add
sub
sbb
cmc
push
fdiv
sub
fwait
aas
fwait
imul
(bad)
adc
pop
dec
in
xchg
or
lock
push
cli
mov
rcl
fwait
xchg
sbb
xchg
push
push
das
icebp
mov
ins
lods
clc
xlat
jo
cld
shl
sub
gs
test
out
mov
daa
xlat
add
movs
fisubr
fisubr
and
fst
loop
add
mov
leave
jle
ds
adc
jge
mov
out
stos
int3
sar
(bad)
pusha
ss
jno
neg
pop
inc
jne
sbb
xor
je
mov
ret
xor
cdq
nop
mov
lea
imul
leave
push
inc
out
dec
repnz
dec
dec
sub
or
pushf
ror
and
jnp
pusha
inc
jg
inc
add
pop
shl
xchg
push
inc
ins
xchg
xor
and
lds
dec
fwait
adc
pop
adc
xor
sbb
cmp
pop
push
pop
push
sbb
sqrtps
push
xor
popf
adc
mov
xchg
and
int
and
jmp
sub
jns
test
rcl
sub
mov
push
lods
(bad)
adc
ror
imul
jl
out
fcmovnb
retf
mov
out
lock
sbb
loop
sbb
mov
daa
stc
les
mov
lea
cmp
aad
mov
sahf
mov
lods
call
push
or
xor
ins
data16
fidivr
mov
mov
div
rol
add
jg
add
loope
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
in
add
repnz
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
mov
add
fiadd
add
fadd
add
mov
add
add
add
add
add
add
add
rol
add
pop
add
test
add
loopne
add
xor
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
fld
add
outs
add
add
add
add
add
add
add
lods
add
add
add
jno
add
test
add
add
add
stos
add
add
add
or
add
movs
add
add
add
add
add
add
add
add
add
add
add
jp
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fiadd
add
jb
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
push
add
add
add
add
add
ja
add
stos
add
add
add
add
add
add
add
sub
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
retf
add
add
add
push
add
adc
add
int3
add
add
add
add
add
add
add
add
add
add
add
add
rol
add
dec
add
add
add
pusha
add
add
add
add
add
cmps
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
mov
add
pop
add
add
add
arpl
add
xor
add
mov
add
popa
add
add
add
call
add
add
add
add
add
jbe
add
out
add
lea
add
sbb
add
cli
add
add
add
test
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
out
add
add
add
pusha
add
add
add
pop
add
add
add
imul
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
loopne
add
sub
add
out
add
test
add
into
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
push
add
add
add
and
add
add
add
add
add
add
add
add
add
stc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
mov
add
inc
add
add
add
add
add
sahf
add
add
add
add
add
mov
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
add
add
lea
add
rol
add
inc
add
add
add
imul
add
test
add
add
cmps
add
add
add
add
add
add
add
ret
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
leave
add
add
add
add
add
add
add
xchg
add
ins
add
add
add
add
add
add
aam
add
scas
add
add
add
add
add
push
add
add
add
scas
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
mov
add
add
add
add
add
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xlat
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
movs
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
or
add
retf
add
add
add
add
add
test
add
fiadd
add
jb
add
lds
add
inc
add
add
add
add
push
add
add
add
ins
add
add
add
add
add
add
add
or
add
add
add
ins
add
add
add
ror
add
add
push
jae
add
pop
add
clc
or
or
mov
ror
test
dec
add
dec
add
lds
in
dec
add
dec
add
dec
add
dec
add
add
add
add
add
cs
inc
push
inc
inc
outs
ins
fs
popa
arpl
addr16
inc
add
add
mov
ror
mov
ror
mov
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
add
add
add
cs
inc
push
aas
and
dec
popa
jo
push
aas
and
push
je
imul
push
aas
and
je
push
jb
imul
push
aas
and
push
je
inc
push
push
inc
pop
push
inc
inc
push
dec
inc
inc
inc
inc
inc
inc
push
dec
inc
inc
push
inc
pop
push
dec
inc
inc
dec
inc
inc
add
add
cs
inc
push
inc
dec
je
ins
inc
imul
add
add
add
cs
inc
push
inc
inc
dec
je
ins
inc
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
jbe
outs
je
imul
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
inc
add
add
cs
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
add
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
push
imul
ins
gs
popa
jae
xor
test
(bad)
push
loope
add
dec
add
iret
dec
add
add
add
dec
add
into
dec
add
into
dec
add
into
dec
add
into
dec
add
dec
add
add
add
add
into
dec
add
into
dec
add
int
add
dec
add
int
add
add
dec
add
in
dec
add
add
add
add
inc
dec
dec
add
add
add
add
add
add
cs
inc
push
inc
push
je
imul
jns
inc
add
(bad)
(bad)
(bad)
call
add
cs
inc
push
inc
inc
dec
je
ins
inc
outs
outs
je
outs
ins
push
imul
jne
add
add
add
aas
inc
push
inc
inc
dec
je
ins
inc
ins
gs
outs
je
jbe
outs
je
imul
add
xchg
jne
add
add
add
aas
inc
push
inc
inc
jb
ja
gs
outs
outs
je
outs
ins
push
imul
xchg
jne
add
add
add
aas
inc
push
dec
inc
outs
arpl
jae
push
dec
dec
popa
outs
fs
gs
inc
add
add
add
outs
add
jae
je
outs
add
imul
add
add
add
add
outs
jae
add
add
popa
outs
add
ins
outs
add
add
add
add
add
add
add
test
dec
add
test
dec
add
test
dec
add
test
dec
add
test
add
test
dec
add
test
jb
add
loopne
jo
ja
add
add
ins
outs
add
add
add
xor
add
jg
add
add
add
add
test
enter
mov
test
ins
test
inc
test
sbb
dec
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
cmc
dec
add
dec
add
cmc
dec
add
dec
add
dec
add
dec
add
add
dec
add
dec
add
cmc
dec
add
hlt
dec
add
hlt
dec
add
hlt
dec
add
add
(bad)
push
fimul
leave
(bad)
aas
add
add
add
lock
or
or
add
or
add
or
add
or
add
add
nop
imul
imul
add
add
add
add
stos
dec
add
add
stos
dec
add
outs
jae
add
add
test
add
stos
dec
add
popa
outs
push
add
add
add
add
dec
add
add
stos
dec
add
add
add
add
xor
add
add
add
add
add
dec
add
ror
ror
ror
test
add
test
add
test
add
ror
ror
test
add
test
add
aas
pop
add
add
add
add
add
add
or
add
jo
add
mov
add
add
add
add
add
add
or
add
add
add
out
aas
add
add
add
lock
add
add
add
lock
add
add
add
aas
add
add
add
loopne
add
add
add
(bad)
(bad)
(bad)
jg
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
dec
add
dec
add
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
(bad)
dec
add
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
leave
dec
add
leave
dec
add
dec
add
dec
add
dec
add
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
leave
dec
add
retf
and
dec
add
retf
(bad)
retf
jbe
dec
add
retf
ret
add
retf
loope
dec
add
retf
push
retf
dec
add
retf
dec
add
retf
dec
add
add
pop
add
add
add
add
xlat
mov
or
add
add
dec
or
sbb
xchg
std
aas
add
add
add
loopne
add
jo
add
mov
test
add
loopne
add
jg
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
jg
add
add
add
adc
add
lods
dec
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
stos
dec
add
add
add
dec
add
add
add
add
dec
lods
dec
add
lods
dec
add
add
add
dec
add
add
add
add
stos
dec
add
add
add
add
sub
add
add
add
dec
add
add
add
lods
dec
add
mov
add
in
dec
add
add
add
lods
dec
add
add
add
mov
add
shl
add
adc
add
lods
dec
add
add
add
mov
add
enter
and
add
les
add
mov
add
add
mov
dec
add
mov
dec
add
add
add
add
add
add
add
add
add
or
add
add
push
add
add
add
add
add
and
add
pusha
add
add
add
nop
add
or
add
inc
add
or
add
add
loopne
add
clc
add
adc
add
adc
add
sub
add
add
add
add
add
add
adc
pop
add
add
add
pop
add
or
add
jo
add
mov
add
mov
add
add
add
add
add
or
add
call
add
add
add
adc
add
sbb
adc
add
xor
adc
add
dec
add
adc
add
pusha
add
adc
add
add
nop
add
adc
add
test
add
add
add
add
add
add
add
add
add
add
adc
add
fadd
adc
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
and
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
data16
add
add
add
js
add
add
add
loopne
add
add
add
add
add
add
adc
add
add
clc
add
add
xor
add
push
add
add
add
add
push
add
adc
add
dec
pop
add
add
add
add
cwde
pop
add
mov
add
enter
adc
add
loopne
add
clc
pop
add
adc
add
sub
add
inc
or
sbb
add
pop
or
sbb
add
add
mov
add
mov
add
add
add
add
add
add
add
arpl
add
mov
add
add
add
add
add
add
sldt
jns
add
or
adc
add
call
jns
add
or
sbb
add
sbb
add
xor
add
dec
or
sbb
add
pusha
or
sbb
add
add
nop
or
sbb
add
test
add
ror
and
add
fmul
add
lock
and
add
or
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
js
add
adc
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
sbb
add
sub
add
cmp
add
dec
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
adc
add
mov
add
cwde
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
fmul
add
call
add
add
add
add
add
add
add
add
or
add
or
add
adc
add
sbb
add
adc
add
sub
add
or
add
push
add
add
add
add
add
add
add
or
add
pop
push
add
adc
add
push
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
sldt
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
adc
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
fsub
add
in
add
add
add
nop
mov
add
in
add
add
add
les
add
in
add
add
add
clc
movs
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
enter
xor
add
in
add
add
add
cld
stos
or
add
add
add
add
add
lods
or
add
add
add
add
add
add
add
in
add
add
add
cwde
scas
or
add
add
add
add
add
scas
or
add
add
add
add
add
mov
add
add
in
add
add
add
xor
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
in
add
add
add
mov
or
add
add
add
add
add
or
add
add
add
add
add
fmul
add
add
add
add
add
fisttp
add
add
add
add
add
or
add
add
add
add
add
fimul
add
add
add
add
add
fisttp
add
add
add
add
add
jecxz
add
add
add
add
add
add
add
add
add
add
add
in
or
add
add
add
add
add
or
add
add
add
add
add
test
in
add
add
add
mov
pop
add
in
add
add
add
nop
push
push
add
pop
add
in
add
add
add
fs
push
add
add
in
add
add
add
fcom
push
add
pop
add
in
add
add
add
movs
sbb
add
add
in
add
add
add
sbb
push
add
add
in
add
add
add
xchg
sub
add
add
in
add
add
add
or
push
add
add
add
add
add
or
push
add
add
in
add
add
add
add
sub
add
in
add
add
add
lods
dec
push
add
add
in
add
add
add
fmul
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
pusha
pusha
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
bound
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
push
add
add
add
add
add
push
add
in
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
in
add
add
add
inc
xchg
push
add
add
in
add
add
add
mov
add
add
add
add
pop
popf
push
add
add
add
add
add
popf
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
stos
push
add
add
add
add
mov
push
add
add
add
add
add
add
add
add
in
add
add
add
pop
mov
add
add
add
add
add
add
add
in
add
add
add
call
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
ins
mov
add
add
in
add
add
add
xor
in
add
add
add
xchg
mov
add
add
in
add
add
add
test
push
add
add
in
add
add
add
mov
add
add
add
add
add
add
mov
add
add
in
add
add
add
in
push
add
add
in
add
add
add
clc
mov
add
add
in
add
add
add
or
push
add
add
in
add
add
add
and
add
in
add
add
add
xor
push
add
add
in
add
add
add
dec
mov
add
add
in
add
add
add
pop
mov
add
add
in
add
add
add
jo
push
add
add
in
add
add
add
int3
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
add
pusha
add
add
add
add
add
adc
add
sbb
add
pop
cld
add
pop
rol
pop
rol
pop
rol
pop
rol
pop
add
pop
add
add
add
add
add
sbb
add
adc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
(bad)
inc
(bad)
inc
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
pop
dec
push
pop
inc
push
pop
inc
push
add
rcr
inc
add
jg
add
aas
rol
aas
rol
aas
rol
aas
rol
aas
shl
jg
jo
inc
clc
add
sar
inc
(bad)
(bad)
inc
(bad)
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
pop
add
add
add
test
add
leave
dec
add
test
dec
add
or
add
rol
add
cmp
add
add
nop
jl
add
add
add
jg
add
pop
add
js
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
pop
inc
add
inc
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
or
add
inc
add
add
add
add
add
add
add
(bad)
inc
add
add
add
or
add
adc
add
and
add
inc
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
clc
jg
push
aas
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
ud0
loopne
(bad)
push
aas
(bad)
(bad)
clc
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
and
add
adc
add
add
xchg
add
add
add
add
add
add
or
add
adc
add
and
add
inc
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
cld
(bad)
(bad)
(bad)
cld
jg
(bad)
cld
aas
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
ud0
pushf
pop
(bad)
dec
(bad)
inc
(bad)
inc
(bad)
dec
(bad)
call
(bad)
(bad)
cld
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
cld
jg
(bad)
cld
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
or
add
and
add
mov
add
and
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
jg
(bad)
clc
jg
push
jg
jmp
jg
inc
jae
inc
inc
(bad)
inc
inc
(bad)
inc
jae
jmp
jg
push
jg
(bad)
clc
jg
(bad)
cld
jg
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
inc
adc
add
add
and
add
sbb
add
add
add
add
or
add
add
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
(bad)
inc
repz
inc
ret
(bad)
inc
cmp
out
(bad)
(bad)
inc
(bad)
(bad)
cld
add
(bad)
clc
add
push
add
jmp
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
adc
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
sbb
add
and
add
inc
add
and
add
and
add
sbb
add
add
and
add
and
add
adc
add
or
add
add
add
cld
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
(bad)
dec
ret
(bad)
inc
cmp
inc
ret
(bad)
inc
out
inc
jg
inc
aas
(bad)
inc
pop
(bad)
inc
ud0
rol
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
(bad)
inc
add
cld
add
and
add
add
add
add
add
add
add
add
add
add
test
add
add
inc
and
add
add
and
add
sbb
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
jmp
add
push
add
(bad)
clc
add
(bad)
cld
add
(bad)
inc
(bad)
jmp
add
inc
cmp
add
(bad)
inc
repz
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
inc
or
add
add
inc
and
add
add
inc
add
inc
add
add
add
inc
dec
add
dec
test
add
add
pusha
dec
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
pop
(bad)
inc
pop
(bad)
inc
jg
inc
iret
(bad)
inc
add
dec
xchg
(bad)
dec
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
or
add
add
nop
or
add
or
add
mov
or
dec
adc
adc
or
adc
or
adc
add
mov
add
or
adc
add
or
add
add
xor
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
repz
dec
lock
dec
lock
(bad)
aas
clc
push
jo
lock
pavgb
adc
loopne
adc
lock
psubb
jo
cld
(bad)
aas
dec
lock
(bad)
(bad)
dec
repz
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
add
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
(bad)
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
or
add
adc
add
and
add
cld
add
rol
add
add
add
inc
and
inc
inc
adc
inc
and
adc
or
adc
and
inc
add
inc
add
add
cld
add
and
add
or
add
adc
add
add
add
add
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
add
(bad)
aas
cld
(bad)
(bad)
aas
cld
jg
aas
cld
aas
clc
ds
lock
pavgb
sbb
loopne
sbb
lock
psubb
jl
cld
aas
cld
aas
(bad)
aas
cld
jg
aas
cld
(bad)
inc
add
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
idiv
dec
repz
dec
lock
dec
lock
push
jo
clc
or
pop
clc
or
pop
cld
push
jo
dec
lock
(bad)
(bad)
dec
repz
(bad)
out
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
inc
add
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jg
(bad)
cld
aas
(bad)
(bad)
clc
pop
(bad)
push
ud0
loopne
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
cld
(bad)
(bad)
aas
cld
jg
ds
clc
cmp
pop
clc
cmp
pop
cld
ds
(bad)
aas
cld
jg
aas
cld
(bad)
(bad)
mov
(bad)
(bad)
jmp
pop
(bad)
push
ud0
clc
pop
(bad)
(bad)
cld
aas
(bad)
(bad)
(bad)
jg
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
add
add
add
add
add
(bad)
cwde
add
add
add
add
or
add
add
add
add
add
push
add
add
add
add
add
add
add
inc
add
add
add
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
sub
add
and
add
or
add
add
add
add
add
fadd
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
mov
mov
mov
add
(bad)
(bad)
(bad)
(bad)
dec
clc
xchg
ja
add
add
mov
lock
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
ja
add
add
mov
add
(bad)
clc
xchg
add
add
mov
str
clc
xchg
add
add
mov
push
add
xchg
add
add
mov
(bad)
inc
clc
xchg
js
add
add
mov
(bad)
push
clc
xchg
ja
add
add
mov
(bad)
(bad)
(bad)
clc
xchg
ja
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
mov
add
js
js
add
xchg
add
add
add
js
xchg
idiv
add
or
(bad)
(bad)
push
jle
jg
inc
js
sub
xchg
out
idiv
clc
add
or
mul
and
stos
jle
jg
push
add
ja
mul
and
cmps
out
(bad)
(bad)
push
or
mul
and
(bad)
(bad)
(bad)
clc
add
ja
imul
and
(bad)
push
clc
add
ja
mul
test
add
ja
jle
and
maskmovq
test
mov
lock
(bad)
jg
add
ja
out
fwait
(bad)
jg
inc
jg
out
add
ja
jle
mov
idiv
jle
ja
or
out
fwait
fwait
xchg
(bad)
(bad)
jp
out
add
ja
out
out
jmp
jg
stos
jle
add
ja
out
out
out
out
jg
push
idiv
add
ja
out
out
out
xchg
(bad)
jg
jp
add
or
outs
outs
outs
outs
call
ja
add
or
loopne
out
out
jg
jg
add
add
ja
(bad)
inc
add
mov
add
ja
(bad)
(bad)
(bad)
inc
add
out
add
add
ja
mov
add
add
add
add
mov
mov
push
add
add
or
mov
ja
add
add
or
clc
(bad)
push
mov
add
add
(bad)
push
xchg
add
(bad)
(bad)
(bad)
(bad)
(bad)
clc
(bad)
(bad)
clc
add
add
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
clc
jg
clc
add
add
or
(bad)
(bad)
clc
(bad)
idiv
mov
add
add
clc
jg
push
pop
sar
add
aas
rol
pop
add
jo
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
add
stos
mov
add
jp
pop
js
ja
js
mov
cwde
js
jp
js
jb
js
jp
js
ja
stos
ja
pop
js
ja
jp
jp
js
js
or
mov
xchg
xchg
mov
jns
ja
mov
mov
add
pop
ja
ja
jp
add
ja
ja
mov
mov
mov
ja
ja
add
xchg
add
add
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
adc
add
and
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
jmp
add
jmp
ins
jmp
add
add
in
imul
jmp
adc
out
lock
hlt
or
adc
add
out
mov
(bad)
(bad)
(bad)
(bad)
(bad)
mov
repz
xchg
fst
fstp
(bad)
(bad)
jmp
add
repz
lock
repz
push
or
mov
sbb
mov
fstp
mov
add
or
jne
xchg
(bad)
(bad)
(bad)
fstp
(bad)
or
fmul
or
or
(bad)
scas
add
mov
fcmovnu
fcmovnu
mov
call
fisttp
iret
add
add
mov
(bad)
add
add
repnz
repz
add
add
mov
div
ins
add
add
mov
or
or
hlt
hlt
adc
add
add
fstp
mov
inc
pop
add
add
mov
mov
loope
add
rol
add
add
add
add
add
add
add
add
add
sldt
or
add
pop
add
add
add
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
adc
scas
or
or
or
or
or
or
or
or
or
or
or
or
or
or
jmp
adc
adc
jmp
or
or
ins
adc
or
or
or
or
or
ins
out
repz
icebp
pop
in
ins
adc
jmp
adc
or
or
or
pop
lock
(bad)
(bad)
(bad)
push
mov
(bad)
fucom
repz
repnz
jmp
or
pop
pop
out
repz
hlt
hlt
(bad)
push
(bad)
mov
(bad)
(bad)
fstp
fucom
hlt
push
scas
inc
adc
or
or
out
out
pop
repnz
or
or
(bad)
(bad)
(bad)
fstp
(bad)
(bad)
push
scas
adc
or
or
pop
out
pop
repnz
or
iret
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
hlt
(bad)
(bad)
push
jmp
icebp
icebp
icebp
hlt
or
push
cs
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
out
adc
mov
mov
jmp
fstp
(bad)
(bad)
(bad)
fstp
fdivp
(bad)
(bad)
(bad)
(bad)
push
jmp
icebp
icebp
loop
push
push
push
sub
(bad)
(bad)
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
call
mov
mov
mov
fstp
(bad)
call
iret
iret
pop
(bad)
push
hlt
hlt
(bad)
out
inc
test
icebp
loop
pop
pop
push
dec
mov
fstp
fstp
push
hlt
repnz
adc
repz
fdivr
pop
push
mov
fstp
fstp
push
repz
fstp
pop
adc
repz
mov
in
fstp
fstp
hlt
push
mov
mov
fst
(bad)
fnsave
lock
repnz
mov
outs
(bad)
(bad)
(bad)
(bad)
push
(bad)
hlt
repz
(bad)
(bad)
(bad)
mov
or
lock
fadd
cdq
cdq
push
dec
pop
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fst
(bad)
(bad)
(bad)
(bad)
fsubr
mov
(bad)
(bad)
fdiv
(bad)
push
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
mov
(bad)
(bad)
(bad)
mov
(bad)
(bad)
(bad)
jmp
fstp
fstp
(bad)
(bad)
(bad)
iret
in
or
or
mov
fcmovnu
fcmovnu
fcmovnu
(bad)
fstp
fstp
fstp
(bad)
mov
or
or
icebp
(bad)
icebp
loop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
(bad)
push
repz
fstp
fnsave
or
icebp
lock
mov
aam
aam
fcmovu
(bad)
loop
fdiv
or
or
lock
mov
loop
(bad)
fcmovnbe
aam
aam
mov
mov
scas
test
or
or
icebp
repnz
fsub
(bad)
(bad)
(bad)
(bad)
push
repnz
icebp
(bad)
fcmovnbe
aam
scas
inc
adc
or
or
icebp
repz
pop
pop
mov
hlt
hlt
repz
icebp
icebp
mov
or
or
or
or
icebp
repnz
scas
scas
scas
iret
mov
pop
mov
icebp
icebp
icebp
lock
pop
out
or
or
or
or
mov
iret
iret
scas
iret
iret
iret
iret
mov
mov
icebp
repz
repz
adc
or
or
or
or
pop
hlt
hlt
(bad)
fcmovnu
(bad)
fdiv
mov
(bad)
push
hlt
out
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
loop
repz
hlt
adc
or
or
or
or
(bad)
(bad)
(bad)
(bad)
fstp
fucomp
loop
hlt
(bad)
(bad)
in
adc
or
or
or
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
jmp
jmp
or
or
or
or
pop
pop
(bad)
(bad)
fstp
fld
in
mov
mov
or
or
or
or
or
or
or
mov
mov
mov
or
or
or
or
jg
push
pop
sar
add
rol
xadd
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
jg
add
aas
add
aas
add
jg
add
inc
add
jg
add
jg
add
jg
add
jg
shl
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
rol
rcr
add
retf
add
add
or
or
or
or
adc
adc
push
push
push
add
sbb
and
and
sub
sub
push
push
push
add
dec
add
inc
add
cmp
add
push
inc
xchg
add
add
in
int3
add
(bad)
out
add
out
add
add
add
add
add
cdq
add
add
add
xor
add
xor
add
xor
add
cdq
add
xor
add
xor
add
data16
add
add
data16
cwd
add
data16
add
inc
add
xor
add
cdq
add
cdq
int3
add
cdq
inc
add
add
add
xor
add
data16
int3
cdq
add
int3
int3
add
int3
inc
add
data16
call
add
add
add
add
add
add
xor
cdq
add
add
add
add
add
xor
add
xor
add
xor
xor
cdq
add
xor
add
xor
add
data16
xor
add
data16
cwd
add
data16
add
inc
xor
xor
xor
cdq
add
cdq
int3
add
cdq
inc
xor
add
xor
xor
xor
data16
int3
cdq
add
int3
int3
add
int3
inc
xor
xor
xor
data16
call
add
(bad)
inc
data16
add
xor
data16
data16
add
inc
xor
add
xor
xor
xor
add
inc
data16
data16
data16
cdq
add
int3
add
add
cwd
xor
cwd
data16
cdq
add
int3
add
inc
data16
add
data16
xor
data16
cdq
add
int3
add
inc
inc
add
xor
call
add
add
add
add
add
xor
add
add
add
add
cdq
xor
add
data16
cdq
xor
cdq
xor
cdq
cwd
add
xor
add
cdq
data16
cdq
int3
add
int3
add
cdq
int3
xor
data16
data16
int3
int3
add
inc
add
int3
data16
dec
add
add
add
add
int3
add
add
xor
add
xor
int3
xor
add
xor
add
data16
int3
xor
cdq
data16
cwd
add
data16
add
cdq
add
int3
cdq
xor
int3
cdq
data16
cdq
cdq
add
cdq
int3
add
cdq
inc
int3
int3
add
int3
int3
xor
int3
int3
data16
int3
cdq
add
int3
int3
add
int3
inc
int3
inc
add
push
add
call
add
(bad)
inc
int3
add
add
add
inc
cdq
add
xor
add
xor
add
xor
push
cdq
add
xor
add
xor
add
data16
jmp
add
data16
cwd
add
data16
add
inc
call
xor
call
cdq
add
cdq
int3
add
cdq
inc
dec
add
dec
xor
dec
data16
int3
cdq
add
int3
int3
add
int3
inc
(bad)
push
add
jmp
(bad)
call
add
inc
jmp
data16
inc
jmp
add
inc
(bad)
jmp
and
movs
add
pop
add
ja
xchg
xchg
add
retf
retf
add
xlat
xlat
add
fstp
add
jecxz
add
jmp
clc
clc
clc
add
sti
inc
movs
mov
add
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
or
or
or
or
or
ins
ins
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
adc
adc
ins
or
or
or
or
or
or
jmp
ins
ins
ins
jmp
or
or
or
or
or
or
or
or
or
ins
in
icebp
lock
in
ins
adc
adc
ins
or
or
or
adc
adc
adc
adc
adc
adc
or
or
or
or
or
or
or
ins
in
mov
push
pop
in
in
jmp
or
scas
mov
or
fnsave
adc
or
or
or
or
or
lock
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
adc
scas
mov
fstp
fstp
sbb
hlt
repnz
scas
scas
adc
or
or
or
or
or
in
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
(bad)
fdiv
fstp
fstp
sbb
repz
hlt
(bad)
out
scas
adc
or
or
or
lock
idiv
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fmul
scas
mov
(bad)
fstp
fstp
fstp
fstp
sbb
hlt
(bad)
push
scas
adc
or
or
imul
idiv
jno
or
call
(bad)
fsubr
(bad)
fstp
fstp
fstp
fstp
sbb
(bad)
(bad)
push
scas
adc
or
or
mov
sbb
sbb
jno
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
push
scas
adc
or
or
or
idiv
sbb
sub
sub
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
sbb
(bad)
(bad)
(bad)
(bad)
(bad)
out
scas
adc
or
idiv
sbb
cs
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
sub
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
icebp
icebp
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
(bad)
fdivp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
or
out
repnz
icebp
icebp
icebp
sbb
sbb
push
push
cs
fstp
fst
(bad)
(bad)
fstp
(bad)
(bad)
fdivrp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
or
out
repnz
icebp
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
(bad)
mov
or
(bad)
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
lock
adc
out
repnz
icebp
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
(bad)
fucomp
scas
in
scas
mov
hlt
hlt
hlt
hlt
hlt
hlt
scas
adc
out
repnz
sbb
sbb
push
push
push
sub
fstp
fstp
(bad)
call
scas
sbb
mov
hlt
push
repnz
adc
or
or
repnz
fnstsw
jge
push
push
jmp
fstp
fstp
fstp
(bad)
dec
in
sbb
(bad)
icebp
icebp
icebp
icebp
icebp
icebp
in
adc
or
or
repnz
fnstsw
jge
jns
jmp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
in
adc
or
or
repnz
fnstsw
push
push
push
push
dec
mov
fstp
fstp
fstp
hlt
(bad)
(bad)
mov
(bad)
fst
fstp
fstp
fstp
in
adc
or
or
repz
fcom
push
push
push
push
dec
in
fstp
fstp
sbb
(bad)
(bad)
(bad)
fdivrp
fnsave
(bad)
(bad)
(bad)
fstp
fstp
(bad)
or
repz
fcom
push
push
push
push
dec
scas
fstp
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
fst
(bad)
(bad)
(bad)
fstp
fisttp
scas
adc
or
or
repz
or
(bad)
fcom
push
push
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
mov
in
or
or
out
(bad)
ror
repnz
(bad)
(bad)
mov
scas
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fucomp
adc
or
or
pop
fcmovnbe
ror
repnz
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
scas
ins
or
or
or
fcmovnbe
lods
or
(bad)
(bad)
(bad)
(bad)
(bad)
fdiv
(bad)
(bad)
(bad)
push
fstp
fstp
fstp
fst
(bad)
(bad)
(bad)
(bad)
(bad)
mov
or
or
or
pop
fld
(bad)
(bad)
(bad)
(bad)
(bad)
scas
mov
(bad)
(bad)
(bad)
(bad)
call
fstp
fstp
fstp
fstp
(bad)
(bad)
(bad)
(bad)
(bad)
scas
in
or
or
or
pop
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
or
(bad)
push
sbb
fstp
fstp
fstp
fst
(bad)
(bad)
scas
scas
or
or
or
or
fld
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnbe
scas
mov
(bad)
push
repz
fstp
fstp
fstp
fst
scas
scas
or
or
or
or
pop
sbb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
aad
in
hlt
push
hlt
repz
fstp
fstp
fisttp
scas
scas
or
or
or
or
or
lock
repnz
fcmovnbe
aam
aam
aad
fcmovnu
fcmovnu
fcmovnu
fcmovne
scas
out
repnz
hlt
repz
fstp
fnsave
or
or
or
or
mov
sbb
aam
repz
fcmovnbe
aam
aam
aam
aad
aad
scas
scas
mov
fstp
fisttp
mov
scas
in
or
or
or
or
or
or
mov
sbb
fcomi
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
mov
scas
scas
scas
scas
scas
or
or
or
or
or
or
or
or
(bad)
push
hlt
hlt
hlt
repz
fcmovnbe
aam
aam
aam
adc
or
or
or
or
or
or
(bad)
(bad)
(bad)
push
hlt
hlt
hlt
repz
icebp
icebp
icebp
lock
ins
adc
jmp
or
or
or
or
or
mov
mov
mov
pop
lock
hlt
hlt
repz
icebp
icebp
icebp
lock
or
or
or
or
or
mov
scas
scas
scas
scas
scas
scas
in
in
mov
pop
pop
lock
icebp
icebp
icebp
lock
out
or
or
or
or
or
or
or
scas
scas
scas
scas
in
in
in
in
in
in
in
in
mov
mov
pop
icebp
repnz
icebp
icebp
icebp
lock
or
or
or
or
or
or
or
repnz
in
in
in
in
in
in
mov
mov
mov
lock
hlt
hlt
hlt
repz
adc
or
or
or
or
or
pop
repz
fcmovnu
(bad)
fmul
mov
mov
mov
mov
mov
mov
hlt
(bad)
(bad)
push
hlt
hlt
out
adc
or
or
or
or
or
repnz
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fisttp
or
or
sbb
hlt
hlt
lock
or
or
or
or
hlt
hlt
hlt
hlt
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
or
fstp
repz
hlt
(bad)
(bad)
in
adc
or
or
or
or
pop
(bad)
call
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
(bad)
fstp
repz
hlt
(bad)
(bad)
(bad)
mov
or
or
or
or
pop
pop
pop
fcmovnu
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
out
repz
hlt
(bad)
(bad)
(bad)
push
jmp
or
or
or
or
or
pop
pop
out
fcmovnu
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fstp
fstp
fstp
fstp
fucomp
mov
(bad)
(bad)
(bad)
inc
jmp
or
or
or
pop
pop
pop
out
out
div
mov
mov
fstp
fstp
fstp
fstp
fld
adc
out
(bad)
(bad)
(bad)
push
lock
pop
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
pop
out
out
out
out
or
fucomp
jmp
or
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
or
or
or
or
or
dec
add
inc
jg
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
add
sbb
inc
add
inc
aas
(bad)
inc
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
add
add
add
add
add
add
rol
add
add
inc
add
(bad)
inc
inc
add
inc
inc
(bad)
inc
add
(bad)
inc
add
add
mov
add
add
add
add
mov
add
add
add
ja
push
js
mov
add
or
add
add
add
add
(bad)
(bad)
js
mov
out
div
div
add
add
add
ja
(bad)
(bad)
(bad)
(bad)
push
ja
mov
jg
jg
test
(bad)
(bad)
(bad)
push
xchg
out
out
(bad)
(bad)
(bad)
js
add
add
ja
(bad)
dec
xchg
jg
push
add
add
ja
(bad)
jmp
and
xchg
out
(bad)
(bad)
(bad)
(bad)
js
add
or
(bad)
jmp
and
and
jle
jg
(bad)
(bad)
clc
add
add
ja
(bad)
jmp
and
sub
out
(bad)
(bad)
(bad)
push
add
or
(bad)
jmp
and
sub
stos
stos
jle
jg
(bad)
(bad)
(bad)
inc
ja
jmp
sub
sub
stos
stos
cmps
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
js
add
ja
(bad)
jmp
ja
stos
jg
(bad)
(bad)
(bad)
(bad)
push
js
add
ja
(bad)
jmp
sub
xchg
ja
push
(bad)
(bad)
jg
jg
add
or
(bad)
jmp
div
jg
add
push
div
clc
add
or
(bad)
jmp
sub
xchg
jg
test
jg
js
add
ja
mov
mov
div
push
pop
ja
push
div
clc
add
or
(bad)
out
sub
jg
test
jg
js
add
ja
mov
stos
fwait
fwait
xchg
div
(bad)
inc
out
clc
add
or
(bad)
out
mov
jg
(bad)
push
ja
(bad)
jle
jg
add
or
mov
fwait
fwait
fwait
mov
(bad)
(bad)
(bad)
(bad)
(bad)
jmp
add
or
(bad)
out
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
push
stos
jle
jle
add
or
mov
(bad)
(bad)
dec
push
div
cmps
out
add
or
(bad)
out
out
out
out
out
xchg
(bad)
(bad)
(bad)
jg
ja
stos
jle
add
or
mov
out
out
out
out
call
div
div
cmps
call
ja
mov
out
out
out
out
call
jg
ja
jp
js
add
or
mov
out
out
out
out
out
xchg
push
div
div
stos
add
add
ja
mov
out
outs
out
out
out
call
jg
ja
test
add
add
ja
mov
out
out
out
mov
div
div
div
add
add
or
mov
outs
outs
outs
outs
outs
push
jg
jo
add
add
or
xchg
add
out
out
out
mov
ja
add
add
add
or
mov
test
outs
push
add
add
add
or
xchg
test
out
add
add
add
add
ja
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
ja
js
mov
(bad)
(bad)
(bad)
(bad)
(bad)
push
add
add
add
or
mov
mov
(bad)
push
add
add
add
(bad)
clc
mov
mov
js
add
add
add
add
ja
mov
js
pop
add
add
(bad)
push
js
mov
jo
add
add
add
(bad)
dec
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
js
add
add
add
push
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
(bad)
(bad)
(bad)
(bad)
clc
add
add
add
or
mov
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
push
add
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
xchg
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
push
mov
push
add
(bad)
(bad)
push
add
add
add
mov
or
dec
(bad)
(bad)
(bad)
inc
add
add
ud0
add
add
loopne
inc
add
add
add
add
lock
add
jg
add
add
add
aas
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
loopne
add
add
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
add
add
inc
add
add
add
inc
add
add
adc
inc
add
inc
cmp
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
enter
add
add
add
dec
add
add
add
add
dec
add
popa
add
add
add
add
add
add
or
add
add
dec
add
and
push
add
add
add
add
add
add
rol
add
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
add
add
add
push
add
add
les
add
add
add
(bad)
inc
add
arpl
add
add
add
add
add
push
add
add
pop
add
add
add
ja
(bad)
inc
add
add
add
add
add
add
daa
ins
add
arpl
je
ins
add
pop
add
jb
outs
add
jb
add
jae
xor
xor
add
add
add
add
add
add
or
jns
(bad)
inc
add
les
enter
add
add
add
add
add
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
add
ja
and
add
add
add
mov
add
add
add
xor
fs
inc
add
add
add
push
add
add
mov
push
add
add
add
add
inc
add
push
add
add
mov
pop
add
add
add
add
inc
add
arpl
add
add
add
add
add
push
add
add
mov
sub
sub
push
add
(bad)
inc
add
ins
add
add
add
enter
add
add
add
or
sbb
mov
inc
add
add
add
add
add
push
add
add
push
add
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jb
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
push
add
bound
xor
pop
xor
add
xor
xor
pop
xor
xor
push
xor
outs
xor
xor
js
mov
data16
pusha
xor
inc
xor
add
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
adc
xor
xor
pop
add
xor
xor
add
add
ins
add
popa
add
add
add
add
xor
xor
xor
xor
add
xor
xor
xor
mov
xor
xor
xor
add
shl
ret
xor
xor
xor
or
push
loopne
outs
xor
push
std
and
dec
xor
mov
jle
pop
xor
xor
xor
xor
xor
imul
xor
xor
xor
xor
xor
mov
pop
xor
push
js
mov
data16
pusha
xor
inc
xor
xor
add
xor
jmp
add
fs
dec
and
and
add
ins
add
popa
add
add
add
add
dec
xor
jle
pop
xor
add
popa
add
ins
add
popa
add
add
outs
add
add
xor
xor
xor
mov
data16
xor
xchg
xor
xor
add
xor
add
popa
add
ins
add
popa
add
add
add
add
mov
xor
xor
xor
sbb
aad
mov
xor
add
add
ins
add
popa
add
add
add
add
pop
xor
imul
pop
sub
xor
pop
xor
and
push
push
iret
xor
xor
xor
xor
pop
xor
xor
fs
dec
xchg
xor
dec
xor
pop
xor
xor
xor
xor
xor
sbb
mov
addr16
xor
and
and
add
ins
add
popa
add
add
add
add
inc
jge
xor
nop
push
xor
push
xor
and
add
jns
ins
add
popa
add
add
add
add
mov
xor
xor
pop
xor
xor
xor
xor
and
and
add
outs
add
and
xor
pop
add
add
add
ins
add
popa
add
add
add
add
xchg
pop
mov
data16
xor
or
and
push
push
(bad)
xor
xor
xor
add
xor
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
jno
push
push
(bad)
xor
xor
push
jle
mov
jle
pop
xor
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
mov
outs
xor
push
mov
sub
jbe
jne
xor
push
xor
daa
add
xor
add
add
outs
add
and
dec
xor
add
add
ins
add
popa
add
add
add
add
outs
xor
dec
xor
imul
jbe
jne
xor
push
xor
push
inc
or
push
add
arpl
arpl
add
jae
and
sub
add
outs
add
ja
outs
add
add
jb
jb
outs
add
sub
and
arpl
push
add
and
je
push
add
add
jae
and
data16
jb
and
ins
add
jb
add
add
add
add
ins
add
add
popa
add
add
jb
add
ins
add
outs
add
add
add
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
add
bound
ins
add
and
je
outs
add
add
imul
and
je
push
add
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
add
add
and
imul
je
popa
add
add
je
imul
and
jo
popa
add
imul
add
add
and
je
push
add
add
outs
add
ins
add
add
add
add
add
and
je
outs
add
add
popa
add
imul
add
add
add
outs
add
jb
jne
jo
je
imul
add
add
add
imul
and
je
push
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
add
outs
add
add
add
add
add
outs
add
jb
add
je
ins
add
add
inc
add
jb
outs
add
cmp
and
push
add
popa
add
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
ins
add
popa
add
add
add
and
outs
add
and
and
add
ins
add
popa
add
add
outs
add
add
imul
and
push
add
add
add
outs
add
add
jo
add
add
add
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
imul
and
and
add
ins
add
popa
add
add
add
add
ins
add
add
add
and
add
imul
jae
sub
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
outs
add
jne
add
and
dec
add
ins
add
jb
jns
sub
push
add
add
jo
add
je
add
add
and
jb
add
arpl
push
add
add
add
and
add
add
add
data16
add
add
ins
add
popa
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
arpl
arpl
add
jae
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sbb
inc
add
jo
ins
add
arpl
popa
add
add
add
popa
add
add
add
add
ins
add
popa
add
add
add
dec
add
jbe
popa
add
add
add
add
add
add
imul
and
and
add
ins
add
popa
add
add
add
and
arpl
outs
add
je
popa
add
outs
add
and
imul
popa
add
add
add
add
add
inc
add
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
jb
add
add
outs
add
and
data16
outs
add
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
sub
and
ja
push
add
and
ja
jb
imul
outs
add
and
je
outs
add
add
add
ins
add
popa
add
add
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
jae
add
add
popa
add
je
and
jne
outs
add
add
add
add
je
and
imul
je
popa
add
add
je
imul
and
imul
arpl
outs
add
jo
ins
add
je
add
add
outs
add
add
add
and
popa
add
popa
add
outs
add
push
add
je
jne
jo
and
inc
add
imul
jb
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
ins
add
popa
add
add
add
add
add
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
jae
add
and
push
add
add
popa
add
arpl
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
and
jb
outs
add
add
outs
add
and
bound
popa
add
imul
add
push
add
add
sub
and
dec
add
and
jns
outs
add
and
jae
add
and
je
push
add
add
add
jae
popa
add
add
add
je
daa
add
and
popa
add
add
jne
add
dec
add
jae
jne
data16
imul
add
je
and
push
add
add
je
jae
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
add
ins
add
popa
add
add
add
add
add
jne
jb
add
add
outs
add
and
push
add
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
jb
imul
je
jae
and
bound
add
outs
add
add
add
je
je
add
jo
je
imul
and
imul
je
popa
add
add
je
imul
and
popa
add
popa
add
outs
add
add
imul
add
add
add
add
jo
add
and
jb
add
jne
add
je
add
add
add
imul
jb
jns
and
imul
add
or
dec
add
jns
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
sub
add
ins
add
add
add
add
add
jo
add
and
data16
ins
add
and
and
add
ins
add
popa
add
add
add
and
add
jb
outs
add
and
and
add
outs
add
sub
dec
add
je
and
add
outs
add
add
and
add
jae
imul
add
popa
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jo
add
popa
add
add
outs
add
inc
add
imul
add
add
add
add
js
add
jne
je
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
outs
add
ins
add
outs
add
add
outs
add
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
adc
dec
add
jbe
popa
add
add
add
jne
outs
add
je
imul
cmp
inc
add
imul
add
add
add
add
add
add
add
outs
add
add
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
jb
add
and
ins
add
add
ins
add
or
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
dec
add
outs
add
popa
add
add
add
popa
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
add
and
ja
push
add
and
je
jb
jns
imul
and
je
outs
add
add
imul
and
data16
outs
add
je
imul
and
and
add
ins
add
popa
add
add
add
add
outs
add
je
imul
and
dec
add
je
and
inc
add
jne
outs
add
add
imul
outs
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jne
outs
add
je
imul
cmp
and
and
add
ins
add
popa
add
add
outs
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
cmp
inc
add
imul
add
add
add
add
add
add
jne
je
add
or
dec
add
je
add
and
dec
add
ins
add
cmp
and
and
add
ins
add
popa
add
add
add
add
jb
jb
outs
add
cmp
and
and
add
outs
add
add
push
add
and
imul
je
popa
add
add
je
imul
and
data16
imul
add
add
imul
and
add
jb
outs
add
and
arpl
outs
add
add
add
add
outs
add
imul
outs
add
add
jb
and
imul
je
popa
add
add
je
imul
and
imul
popa
add
add
popa
add
add
add
outs
add
add
jb
outs
add
jb
add
jae
or
push
add
add
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
push
push
push
test
jne
push
call
xor
cmp
jae
mov
sub
mov
mov
add
push
push
mov
mov
call
test
jne
mov
cmp
jne
mov
push
add
push
mov
call
test
jne
mov
cmp
jne
mov
cmp
mov
je
cmp
jne
popa
popa
popa
popa
popa
push
call
mov
mov
mov
cmp
je
cmp
jne
mov
mov
add
mov
mov
push
mov
push
xor
push
mov
call
mov
dec
mov
jne
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
mov
ja
add
movzx
lea
inc
cmp
ja
add
test
je
cmp
je
pop
sub
pop
ret
push
mov
sub
push
push
lea
call
xor
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
push
mov
cmp
jne
call
push
push
push
push
push
mov
call
add
cmp
je
mov
and
mov
jmp
mov
cmp
jne
push
push
call
pop
pop
jmp
push
mov
movzx
lea
push
push
call
inc
mov
movzx
lea
push
push
call
add
inc
cmp
je
cmp
je
sub
mov
pop
cmp
je
mov
and
pop
pop
leave
ret
push
mov
push
xor
cmp
jne
cmp
jne
call
push
push
push
push
push
mov
call
add
mov
jmp
cmp
je
pop
pop
jmp
push
push
push
call
add
pop
pop
ret
push
push
push
call
add
ret
cmp
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmp
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
xor
xor
cmp
setne
cmp
jne
call
mov
push
push
push
push
push
call
add
xor
jmp
mov
push
push
call
pop
pop
cmp
sbb
neg
je
push
call
pop
mov
push
call
pop
mov
mov
call
mov
call
ret
push
call
pop
ret
push
push
call
push
call
pop
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
mov
mov
cmp
je
mov
xor
cmp
setne
cmp
je
push
call
pop
mov
cmp
je
push
call
mov
inc
push
push
call
add
mov
cmp
jne
call
mov
call
mov
mov
jmp
push
push
push
call
add
cmp
je
push
push
push
push
push
call
add
mov
cmp
je
mov
mov
mov
call
mov
call
ret
push
call
pop
ret
push
mov
push
push
mov
push
call
mov
mov
test
pop
jne
call
mov
or
mov
jmp
test
je
call
mov
jmp
test
je
and
test
je
mov
and
mov
mov
mov
and
and
push
push
and
pop
or
test
mov
jne
call
add
cmp
je
call
add
cmp
jne
push
call
test
pop
jne
push
call
pop
test
push
je
mov
mov
lea
mov
mov
sub
sub
test
mov
jle
push
push
push
call
add
mov
jmp
or
mov
jmp
mov
cmp
je
cmp
je
mov
and
imul
mov
sar
add
jmp
mov
test
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
push
lea
push
push
mov
mov
mov
call
add
mov
cmp
je
or
mov
jmp
mov
and
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
xor
cmp
push
mov
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
or
cmp
jbe
call
push
pop
push
push
push
push
push
mov
call
add
mov
jmp
push
lea
call
mov
cmp
jne
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
mov
call
cmp
mov
je
mov
and
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
push
push
push
push
push
mov
call
add
cmp
je
mov
and
jmp
mov
mov
cmp
je
mov
cmp
je
mov
and
jmp
lea
push
push
push
push
push
lea
push
push
mov
push
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
push
push
push
push
push
call
add
ret
push
mov
sub
push
xor
test
push
push
mov
mov
mov
mov
mov
mov
je
mov
mov
jmp
mov
mov
lea
push
call
test
pop
je
push
push
push
push
push
call
add
lea
push
call
test
pop
je
push
push
push
push
push
call
add
mov
mov
test
jne
test
jne
cmp
je
or
mov
and
sub
mov
mov
je
dec
je
dec
je
call
mov
or
call
push
pop
push
push
push
push
push
mov
call
add
jmp
mov
jmp
test
je
test
jne
mov
jmp
mov
mov
push
pop
sub
je
sub
je
sub
je
sub
je
sub
jne
cmp
sete
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
mov
mov
and
mov
cmp
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
jmp
mov
jmp
cmp
je
cmp
je
cmp
jne
mov
mov
test
mov
je
mov
not
and
test
js
mov
test
je
or
or
cmp
jne
or
test
je
or
test
je
or
jmp
mov
jmp
test
je
or
call
cmp
mov
jne
call
mov
or
call
mov
jmp
mov
mov
push
push
mov
push
lea
push
push
push
push
call
cmp
mov
jne
mov
mov
and
cmp
jne
test
je
and
push
push
lea
push
push
push
push
push
call
cmp
mov
jne
mov
mov
and
imul
sar
mov
lea
and
call
push
call
pop
call
mov
jmp
push
call
cmp
jne
mov
mov
and
imul
sar
mov
lea
and
call
mov
push
call
pop
push
call
cmp
jne
call
mov
jmp
cmp
jne
or
jmp
cmp
jne
or
push
push
call
mov
mov
and
imul
sar
mov
pop
pop
mov
or
mov
mov
mov
and
imul
sar
mov
lea
and
mov
and
mov
jne
test
je
test
je
push
or
push
push
call
add
cmp
mov
jne
call
cmp
je
push
call
jmp
push
lea
push
push
mov
call
add
test
jne
cmp
jne
mov
cdq
push
push
push
call
add
cmp
je
push
push
push
call
add
cmp
je
test
je
mov
test
mov
jne
mov
and
jne
or
jmp
or
mov
and
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
mov
mov
and
cmp
jne
mov
jmp
mov
test
je
test
mov
jne
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
cmp
jbe
cmp
jbe
cmp
jbe
cmp
je
mov
mov
and
imul
sar
mov
lea
mov
xor
and
xor
mov
mov
and
imul
sar
mov
lea
mov
mov
shr
shl
and
or
cmp
mov
jne
test
je
mov
mov
and
imul
sar
mov
lea
or
mov
mov
mov
and
cmp
jne
test
je
push
call
push
push
lea
push
push
push
and
push
push
call
cmp
jne
call
push
call
mov
mov
and
imul
sar
mov
lea
and
push
call
pop
jmp
push
push
push
push
call
add
or
je
push
push
push
push
call
and
add
cmp
je
push
lea
push
push
call
add
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
jmp
mov
cmp
jbe
cmp
jbe
cmp
ja
push
push
push
push
call
add
or
je
push
push
push
push
call
add
and
cmp
jne
jmp
mov
and
cmp
jne
push
call
pop
call
push
pop
mov
mov
jmp
cmp
jne
push
push
push
call
add
cmp
je
mov
jmp
push
push
push
call
add
jmp
movsx
xor
dec
je
dec
jne
mov
mov
jmp
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
je
add
cmp
jg
jmp
push
call
pop
call
mov
mov
jmp
mov
mov
sar
mov
and
imul
mov
mov
pop
pop
pop
leave
ret
push
push
call
xor
mov
xor
mov
cmp
setne
cmp
jne
call
push
pop
mov
push
push
push
push
push
call
add
mov
jmp
or
xor
cmp
setne
cmp
je
cmp
je
mov
and
neg
sbb
inc
je
mov
push
push
push
push
lea
push
mov
call
add
mov
mov
call
mov
cmp
je
or
call
ret
xor
mov
cmp
je
cmp
je
mov
mov
sar
and
imul
mov
lea
and
push
call
pop
ret
push
mov
push
push
push
push
push
push
call
add
pop
ret
push
mov
sub
mov
xor
mov
push
xor
cmp
je
cmp
jne
call
mov
cmp
jne
or
jmp
push
lea
push
push
lea
push
push
call
test
jne
cmp
jne
call
cmp
jne
mov
push
push
push
lea
push
push
lea
push
push
call
push
call
mov
cmp
je
push
lea
push
push
lea
push
push
call
test
je
mov
mov
xor
pop
call
leave
ret
mov
jmp
push
mov
sub
mov
xor
mov
cmp
push
push
push
jge
xor
jmp
mov
mov
xor
xor
inc
cmp
jne
lea
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
push
pop
mov
jmp
mov
cmp
jne
push
push
push
push
call
jmp
cmp
je
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
push
call
cmp
pop
je
cmp
je
mov
mov
push
push
push
push
push
adc
inc
cs
push
test
pop
push
push
and
xor
out
sahf
lods
into
xor
(bad)
(bad)
cli
add
xchg
mov
pop
fiadd
mov
mov
sahf
jge
xor
ret
push
xchg
movs
pop
xchg
xchg
cmp
inc
push
int3
aad
xchg
add
sti
cmp
retf
add
loopne
jmp
lock
inc
outs
ja
cmp
(bad)
inc
mov
out
mov
inc
xor
xor
cmp
inc
jg
adc
leave
fwait
mov
popa
adc
jle
mov
test
and
or
or
mov
xlat
sbb
pop
push
int3
jnp
jmp
jle
push
icebp
mov
add
test
out
int3
fdivr
aam
xchg
cmp
pop
inc
jbe
xor
cmp
mov
mov
add
in
xor
in
add
in
mov
pop
inc
es
repz
jne
xor
rcr
stos
sub
sbb
loope
or
dec
mul
dec
mov
aaa
test
sar
dec
bound
ss
cmp
push
mov
imul
into
pusha
enter
das
mov
mov
movs
jno
and
shl
push
add
test
pop
(bad)
sub
pop
sub
or
push
pop
sub
fcomp
mov
add
(bad)
pop
test
nop
rdtsc
hlt
pop
xchg
ja
cmp
dec
icebp
add
iret
fxch
mov
int3
mov
adc
xchg
enter
fs
mov
lods
imul
cs
dec
scas
ja
and
lock
xor
sbb
sub
inc
mov
call
test
cld
ror
xor
cld
dec
add
xor
inc
data16
add
or
push
xchg
sub
mov
(bad)
(bad)
jne
mov
jle
popa
add
cld
std
fwait
into
sbb
xchg
mov
mov
jg
sbb
and
sti
loope
rep
jbe
and
dec
shl
xor
adc
add
mov
mov
movs
inc
in
js
ret
stos
les
mov
pop
adc
loopne
out
push
jmp
ins
fs
lods
fstp
xor
retf
fld
sahf
mov
xchg
pushf
out
adc
nop
icebp
out
sbb
sub
(bad)
pop
jge
repnz
fdivp
lock
call
push
push
inc
ins
(bad)
jle
enter
scas
cmp
pusha
push
push
(bad)
sbb
add
sub
dec
inc
in
outs
int3
push
iret
mul
stos
aam
dec
push
test
imul
pusha
cmp
ret
cs
mov
daa
lock
add
movlhps
push
(bad)
push
(bad)
sub
add
push
loopne
inc
sti
xchg
push
push
xchg
(bad)
inc
inc
add
push
adc
or
or
ja
ins
jl
jo
xchg
test
lea
push
js
and
push
jecxz
push
ss
jmp
dec
aaa
and
pop
rcl
retf
fbstp
out
test
fisttp
xchg
call
pop
xor
mov
clc
loopne
xchg
lahf
mov
fisub
es
shr
cmp
bound
push
inc
jbe
(bad)
adc
sti
xor
mov
or
mov
adc
hlt
into
cdq
push
js
outs
imul
or
loope
jns
bound
mov
mov
loop
popa
adc
(bad)
mov
out
or
sti
icebp
and
fwait
xchg
pop
stos
jmp
adc
(bad)
sbb
push
out
call
cmc
dec
jnp
and
aaa
mov
cmp
sbb
and
adc
mov
dec
adc
sub
cs
outs
icebp
sti
and
mov
sbb
shl
call
ss
xor
icebp
mov
icebp
(bad)
js
mov
mov
xor
aad
test
jge
sub
fisubr
scas
clc
jbe
mov
fdiv
mov
sbb
dec
js
and
xchg
ret
gs
add
sbb
xor
inc
scas
(bad)
cld
out
xchg
or
fdiv
sub
xor
fsubr
push
and
push
push
mov
cli
es
inc
das
loop
sub
and
je
enter
xchg
mov
add
shl
aas
in
aad
pop
ins
jg
icebp
mov
add
adc
xor
out
pop
dec
sub
loope
es
jbe
pop
xlat
pop
sbb
dec
mov
scas
cmp
test
and
loope
mov
sub
pusha
pop
iret
rcl
ds
(bad)
dec
cmp
movs
sbb
jle
adc
hlt
lock
ror
push
shl
aad
pop
jmp
loope
mov
xchg
or
dec
lock
adc
and
js
(bad)
aas
pop
das
fnsave
push
addr16
mov
ret
rol
mov
mov
mov
xchg
(bad)
sar
jl
leave
mov
out
popa
out
dec
fadd
imul
xchg
repnz
mov
scas
nop
std
popf
jno
imul
dec
mov
ins
cmps
shl
jle
mov
push
push
sbb
lock
(bad)
mov
jne
inc
pop
ror
call
push
jo
popa
pop
je
(bad)
mov
cs
or
mov
cmp
mov
je
pusha
sbb
loopne
push
jo
fnstcw
ss
mov
xchg
jmp
add
lock
(bad)
movs
cmp
(bad)
jo
dec
out
loop
xchg
inc
adc
ins
iret
jno
mov
push
sub
fwait
xor
pop
mov
repnz
ficom
cmp
enter
adc
add
pushf
dec
jmp
cmp
lock
add
hlt
idiv
jmp
add
add
enter
addr16
out
mov
push
dec
cmp
push
sar
adc
outs
jmp
dec
lahf
pop
leave
into
sub
mul
out
push
push
and
sub
sbb
pop
dec
ret
cwde
cmp
icebp
jbe
xlat
fimul
icebp
sbb
stos
cmps
das
sbb
cvtps2pd
cs
scas
adc
call
mov
gs
inc
xchg
and
xor
clc
inc
shl
xchg
push
cld
pop
cmp
ret
outs
mov
enter
int3
shl
jp
jmp
sahf
test
shl
lock
and
xlat
adc
push
jp
cmc
arpl
sahf
xor
add
mov
add
add
je
push
inc
pop
dec
jb
jg
xchg
movd
cmp
jecxz
add
fs
push
pop
pusha
jo
(bad)
mul
into
push
and
mov
je
das
xchg
les
mov
push
xlat
cmps
in
fistp
in
push
(bad)
or
sahf
shl
test
pop
push
adc
out
mov
inc
lds
(bad)
imul
ds
scas
inc
enter
add
add
int
shl
xlat
cld
pop
inc
pop
adc
pop
fisubr
retf
in
push
push
jbe
or
push
add
les
mov
cmp
cmp
mov
test
sar
ins
mov
cmp
or
dec
shl
xor
pop
pop
jne
mov
push
sti
mov
and
xor
test
cld
sub
mul
or
and
and
fistp
scas
adc
or
fsubr
and
cmps
add
ins
sub
jae
add
ins
into
das
clc
hlt
cmp
lock
pusha
mov
(bad)
iret
and
(bad)
je
nop
pop
dec
outs
pop
dec
rol
add
js
sbb
jbe
fisttp
jmp
add
inc
aas
cmp
inc
inc
cmc
popa
bound
mov
das
xchg
mov
dec
lock
adc
jb
(bad)
push
out
pop
mov
jl
pusha
and
xchg
pop
stos
push
sar
sbb
jp
xchg
and
push
push
ins
inc
pop
add
sub
into
dec
loop
push
xor
adc
rcr
stos
inc
ja
add
sbb
ror
fs
shl
aaa
mov
mov
cli
xor
xchg
sub
ins
fadd
ss
aad
adc
adc
sub
push
cmp
mov
adc
jbe
dec
xor
mov
rcl
loopne
push
mov
push
mov
mov
push
mov
aas
mov
inc
mov
push
rol
mov
mov
push
data16
mov
mov
adc
or
mov
lods
fadd
pop
push
sub
cmp
mov
clc
xlat
inc
frstor
push
fcomp
push
pop
sbb
retf
cmp
mov
mov
(bad)
(bad)
imul
add
push
sub
outs
stos
sbb
pushf
test
dec
lock
pop
and
jle
adc
fidivr
dec
jp
xlat
(bad)
clc
shl
aam
les
mov
mov
mov
sub
or
(bad)
fwait
mov
aas
push
and
add
outs
or
and
push
enter
sub
push
mov
xchg
adc
je
lds
ror
nop
push
cmc
cmp
xchg
push
inc
out
cmp
xchg
dec
test
or
xchg
pop
bound
ret
stos
repz
cmp
fmul
pop
add
mov
adc
les
jmp
fstp
outs
dec
xor
adc
fnsave
cmp
xchg
mov
shl
nop
leave
int3
out
leave
pop
(bad)
xchg
or
pop
fist
and
push
leave
std
loope
paddusw
rcl
push
sub
sub
sahf
inc
nop
xor
(bad)
and
repz
sub
adc
xlat
aaa
aas
sub
cli
dec
std
neg
cmp
cmp
jb
mov
dec
rol
mov
jmp
ss
sbb
pop
movs
and
jb
(bad)
jb
adc
pushf
adc
mov
jb
rol
nop
jecxz
jg
inc
jns
adc
int
jo
sub
retf
adc
mov
(bad)
(bad)
into
sbb
add
cmps
scas
ret
cs
jb
and
fs
push
ror
xor
je
mov
(bad)
out
push
arpl
aad
add
ds
test
sbb
jp
cmc
rol
out
xchg
push
nop
push
sbb
int
aaa
cmps
xor
sub
rcr
dec
icebp
ret
call
hlt
jno
sub
sbb
pop
addr16
mov
add
ss
cdq
inc
movs
sbb
and
or
lock
mov
fldenv
addr16
inc
xlat
sub
push
lahf
pop
mov
mov
dec
add
cmp
jg
and
loope
mov
mov
add
test
lea
fwait
inc
xchg
outs
test
out
out
imul
jg
cmps
je
jb
call
push
cmp
jmp
jl
jmp
adc
mov
mov
cmps
hlt
dec
pop
and
mov
ss
pop
or
push
inc
adc
fnstsw
mov
adc
inc
sbb
mov
xor
pop
xchg
mov
mov
addr16
sahf
jbe
dec
dec
in
fld
(bad)
pop
popa
retf
aas
retf
inc
bound
sbb
ja
mov
fwait
cmp
pop
bound
or
push
push
pop
pop
pusha
cdq
jne
loope
pusha
fdecstp
mov
xchg
(bad)
cs
xchg
loopne
inc
cmp
cmp
mov
xchg
gs
sub
into
add
mov
inc
cmp
mov
adc
cmp
imul
fcomp
mov
push
xor
nop
jmp
loopne
jp
cmp
rol
or
cs
inc
pusha
ins
cmp
repnz
mov
lea
out
push
lock
add
push
pop
xchg
dec
cmp
cdq
cmps
mov
aam
mov
iret
jg
sbb
pop
adc
dec
push
pop
inc
xor
mul
xchg
inc
mov
movs
pop
in
sti
push
dec
or
fdiv
ss
or
fimul
jg
adc
aad
push
jmp
add
xor
gs
ret
jg
sbb
xor
enter
ret
add
push
cmp
cmp
xor
popa
ins
outs
popa
popf
sub
cmp
jo
mov
lock
leave
ins
mov
pop
push
popf
add
pop
mov
hlt
es
pop
cmp
or
ins
int3
jl
cdq
movaps
inc
movs
xchg
hlt
xchg
js
cld
ins
mov
dec
xchg
aas
sbb
cmc
mov
xchg
and
imul
xor
ret
add
out
xchg
jbe
aas
int
jecxz
les
cwde
sahf
call
cmovns
adc
xlat
dec
xor
fs
cs
inc
pop
in
jbe
xor
add
test
enter
rcl
fiadd
and
jmp
sbb
fs
xchg
mov
add
shl
jge
popf
pcmpeqw
dec
add
sbb
mov
mov
fcmovbe
outs
(bad)
mov
pusha
pop
pop
icebp
and
sbb
loope
inc
cmp
mov
repz
(bad)
push
lock
in
in
xor
in
inc
imul
pop
ficom
inc
push
add
int3
aad
jne
mov
add
(bad)
mov
pop
aas
jno
sbb
stc
push
(bad)
sti
and
or
jp
or
xchg
inc
in
outs
mov
mov
mov
in
xlat
retf
das
scas
bndldx
lahf
pop
adc
cmps
addr16
(bad)
or
test
dec
daa
cld
shl
xchg
sub
ss
scas
cmps
push
add
sub
aad
mov
dec
mov
inc
xchg
mov
inc
aas
xlat
repz
adc
mov
mov
jmp
adc
pop
sbb
(bad)
add
fld
pop
add
enter
sti
dec
int
adc
fisttp
sbb
sub
shl
pop
mov
bswap
mov
mov
cld
fnsetpm(287
push
xor
cs
pop
push
mov
pop
add
add
loopne
outs
lds
test
or
sub
cmp
or
stos
fwait
add
xor
xor
sub
pusha
(bad)
dec
or
add
jg
stos
lods
cdq
fsub
in
cmp
push
retf
mov
sbb
dec
push
lods
shr
jb
scas
(bad)
(bad)
(bad)
fdivr
(bad)
xchg
mov
add
push
mov
sub
jge
imul
jmp
icebp
inc
sub
mov
and
icebp
push
jl
xor
inc
xor
xchg
shl
jl
in
adc
inc
jno
push
add
jbe
cs
dec
mov
add
xchg
aas
pop
call
add
lea
repz
mov
sbb
adc
sub
in
lds
clc
aas
(bad)
and
add
push
add
xor
rcl
lahf
pushf
xchg
clc
push
fisub
fild
xchg
push
(bad)
and
stos
cmp
fild
or
pop
lea
fdivp
daa
test
push
inc
dec
push
(bad)
es
test
fcom
shr
mov
daa
lock
inc
sar
mov
mov
add
push
mov
jae
xchg
adc
out
jne
shl
cmp
int
xchg
stos
sbb
cwde
cmp
shr
rol
inc
xchg
mov
or
aaa
cs
push
dec
cmp
ins
jo
push
dec
stc
and
mov
xchg
fs
cmp
cmp
mov
dec
push
ins
ds
adc
xchg
into
in
push
test
test
pop
outs
fcom
sub
inc
push
call
mul
outs
mov
jno
nop
out
ror
cli
mov
xor
cwde
call
push
inc
into
lods
or
out
mov
pushf
jb
pmuludq
ins
inc
jne
adc
jne
ret
sbb
sahf
in
pop
pop
and
and
xor
xor
inc
or
jmp
aas
add
ins
mov
into
shl
cmp
jbe
add
push
push
pushf
fst
inc
fwait
adc
test
xor
adc
js
dec
sar
mov
push
std
mov
iret
adc
clc
mov
les
mov
(bad)
stc
lea
inc
push
and
sbb
out
lahf
popf
sti
jno
push
(bad)
sbb
ret
push
mov
pop
mov
xchg
mov
ss
mov
sub
sub
and
mov
lods
lahf
ror
rcr
inc
xchg
inc
stos
jmp
or
add
aad
enter
mov
adc
cmp
mov
xchg
push
cld
jl
dec
sbb
mov
mov
sub
jp
call
fst
hlt
push
adc
mov
inc
xchg
jne
outs
push
pop
shl
rcl
shr
cmp
lods
pusha
outs
popa
pop
inc
outs
jne
xchg
xor
sbb
scas
push
push
cmovge
sub
addr16
aam
pusha
stos
repz
jnp
mov
or
jge
loop
jle
xchg
mov
imul
repz
in
inc
and
and
(bad)
cmp
outs
mov
jl
adc
mov
sub
mov
dec
aaa
aas
xor
and
dec
test
push
add
es
sub
lods
sbb
jns
nop
out
test
shl
cmp
fisub
scas
scas
popf
pop
push
add
add
adc
fwait
dec
movs
jl
dec
xor
sub
(bad)
jge
mov
in
ja
sbb
xor
push
cmp
and
mov
sub
aad
retf
xchg
mov
rcr
sub
sbb
mov
jns
xor
inc
xchg
push
xchg
frstor
fisttp
dec
adc
xor
dec
pusha
adc
nop
mov
mov
mov
mov
pop
ins
jo
inc
mov
mov
pusha
pushf
std
scas
test
addr16
loope
enter
addr16
daa
add
scas
test
push
push
ret
ds
xchg
retf
sahf
jle
jae
sahf
rcl
mov
or
(bad)
xchg
adc
test
sub
jb
dec
das
push
adc
sub
test
push
mov
push
push
out
pop
adc
or
inc
jl
jle
fistp
push
inc
out
xor
fdivrp
fcom
rcr
mov
xor
dec
or
or
stc
cmp
sbb
mov
das
sub
scas
lahf
dec
xchg
retf
pop
mov
jg
xchg
out
or
shl
cwde
dec
into
ja
mov
sub
das
pop
mov
inc
jo
addr16
mov
sub
mov
rol
(bad)
mov
xor
sbb
mov
in
xchg
add
fs
enter
int3
lods
xadd
loop
sbb
adc
cmp
ins
jae
add
push
jl
jmp
call
sbb
idiv
inc
mov
(bad)
pop
ds
or
and
movs
retf
push
sub
dec
call
push
ror
outs
sar
ror
add
adc
mov
sub
xor
jo
xor
or
mov
out
add
ficom
push
pop
imul
mov
dec
mov
cli
clc
cmp
outs
mov
pop
out
push
fisubr
out
icebp
adc
rcl
neg
mov
cmps
jle
loop
dec
pop
jnp
and
add
and
iret
out
or
xor
ds
mov
push
inc
dec
mov
push
jg
rcl
cs
mov
pop
popa
pop
jae
int
mov
push
inc
mov
(bad)
cmp
adc
cdq
loope
lahf
icebp
add
out
mov
and
dec
cmp
mov
jmp
fisub
std
es
pop
scas
jnp
hlt
nop
call
dec
jno
stos
fstp
add
adc
dec
xchg
int3
shr
rcl
(bad)
adc
xlat
leave
mov
xor
xor
adc
scas
adc
lock
fsubrp
jmp
into
imul
adc
pop
mov
(bad)
rcl
test
shl
fdivrp
cmps
out
out
fnsave
mov
das
sbb
xchg
pushf
push
fbld
cwde
mov
add
xor
sub
iret
dec
loop
jno
ret
jle
fdivr
lds
imul
mov
or
and
fadd
imul
xchg
int3
into
into
push
js
mov
pop
sbb
popa
adc
lds
xor
sbb
jge
cli
add
add
pop
lods
mov
and
jle
fwait
xchg
inc
inc
sbb
jg
mov
mov
mov
stos
cmp
pushf
cdq
mov
cs
call
repnz
push
mov
adc
(bad)
mov
ret
or
or
sub
mov
loop
out
sbb
test
iret
jle
and
jg
lahf
(bad)
enter
pop
adc
and
mov
push
or
xlat
mov
mov
aam
inc
pop
rol
xlat
push
add
imul
pushf
daa
fs
xchg
mov
or
jge
jb
inc
lods
inc
in
xchg
ror
and
sbb
jg
popf
cli
sub
xchg
ror
sti
gs
xor
loop
(bad)
inc
inc
pusha
vdivps
push
push
or
cwde
das
aam
add
fld
mov
in
inc
sbb
data16
(bad)
sar
mov
sar
inc
call
and
sbb
cmps
push
mov
xor
(bad)
xchg
shr
pop
outs
ins
and
adc
test
add
cmc
loopne
popf
jge
or
jl
mov
lock
(bad)
gs
push
dec
pushf
jle
test
and
mov
enter
sub
imul
lock
jl
dec
cmp
and
mov
pop
sbb
mov
push
das
outs
and
jp
in
fcmovbe
jecxz
adc
push
sub
push
pop
pop
ins
push
rol
mov
call
sbb
xor
and
cli
push
adc
dec
xor
add
jle
cmpxchg
movs
and
pusha
sub
icebp
addr16
bound
inc
dec
inc
push
mov
popf
bts
(bad)
daa
fisttp
ins
push
fiadd
outs
pop
mov
es
mov
or
adc
jae
call
daa
dec
pop
dec
retf
std
inc
daa
adc
xchg
cmp
lahf
loope
inc
dec
arpl
or
cmp
mov
push
imul
mov
xchg
xchg
cmp
push
lds
(bad)
push
xor
push
nop
add
es
in
(bad)
stos
cmp
xor
xor
leave
cmp
out
fnstenv
jns
test
clc
repz
pop
je
mov
data16
out
sti
fist
and
pop
cld
imul
arpl
loopne
dec
jmp
pop
push
mov
mov
adc
pop
push
push
and
adc
pop
inc
popf
jecxz
mov
add
mov
or
fbstp
cmp
mov
jno
or
xchg
xor
sub
cli
mov
out
out
and
ucomiss
mov
cmp
mov
in
loope
mov
mov
sbb
(bad)
test
in
daa
inc
inc
out
jle
lea
js
movs
push
mov
mov
add
jg
outs
pop
adc
dec
scas
adc
add
imul
repz
not
iret
jb
scas
jecxz
cwde
inc
sub
scas
inc
mov
cmps
in
xor
arpl
movs
mov
push
pop
xchg
scas
ret
movs
enter
stos
push
mov
das
aad
fwait
xchg
call
push
jae
jle
adc
shl
mov
xor
sub
push
scas
or
jge
cmp
loope
jge
out
adc
retf
inc
arpl
out
dec
lahf
sbb
sbb
nop
in
sahf
add
pusha
in
xchg
outs
(bad)
fist
loope
sbb
mov
data16
rcr
das
adc
pop
jbe
pop
outs
shl
cdq
mov
mov
xchg
repz
pop
pop
mov
cmc
cmp
aaa
xchg
xor
je
retf
xchg
and
gs
loopne
push
or
sub
cmp
outs
pop
add
pusha
mov
(bad)
loop
xor
es
adc
push
jp
sbb
mov
push
rol
cwde
call
add
cs
cli
and
inc
mov
(bad)
dec
pusha
(bad)
arpl
repz
or
pop
inc
ret
sbb
inc
and
inc
jecxz
cmps
jmp
xchg
dec
pop
mov
mov
inc
pop
xor
in
xor
or
push
jae
out
mov
enter
loop
lea
jmp
shr
add
jbe
mov
scas
stos
repnz
cdq
shr
(bad)
shl
sub
jp
int3
inc
loop
lahf
jmp
mov
test
push
jns
outs
sub
cmc
out
mov
pop
fstp
pop
clc
rol
mov
mov
ftst
pop
inc
sub
ficom
mov
cmp
std
cdq
scas
(bad)
mov
or
jmp
sub
inc
cmp
aaa
inc
ds
pop
pop
cmps
pop
jge
movs
outs
push
mov
jge
xchg
mov
(bad)
sub
add
not
fs
in
ja
or
jne
or
or
jno
ins
nop
jnp
pop
cwde
cmps
mov
xor
push
jmp
test
dec
jle
scas
call
sbb
imul
mov
sub
(bad)
xchg
lahf
shr
sub
and
jns
ds
shl
adc
dec
sbb
int
dec
(bad)
shr
or
adc
retf
mov
push
push
fsub
sub
aad
leave
mov
add
and
or
inc
inc
xor
arpl
xchg
inc
cmps
push
add
in
and
xor
xchg
jge
xchg
xchg
inc
rol
xor
dec
shl
sub
das
pop
cs
lock
and
inc
jp
or
xchg
sub
mov
adc
mov
and
lods
inc
popf
cmp
(bad)
outs
test
mov
call
dec
cld
fcmovnu
inc
scas
addr16
enter
and
cld
and
cli
outs
jbe
cld
pop
pushf
mov
(bad)
push
cmp
out
inc
call
push
xor
sbb
jl
icebp
and
dec
les
lock
mov
ds
mov
mov
call
mov
adc
into
popf
fnstsw
in
data16
sub
adc
lock
xchg
dec
xchg
mov
sub
ror
and
(bad)
cmps
pop
shr
dec
shr
mov
int3
repnz
popf
movs
loopne
test
cli
or
shl
adc
loopne
sub
mov
push
xor
cmps
sti
and
pop
rcl
rcl
(bad)
pop
pusha
fcomp
add
scas
daa
ffree
outs
ss
punpckhwd
movs
sub
xchg
xor
in
(bad)
ja
call
(bad)
jg
xchg
enter
dec
adc
aas
cmp
push
pop
add
mov
mov
and
je
inc
fwait
sbb
pop
pop
jne
cmp
aad
mov
cld
sahf
fnsave
cli
jg
gs
xlat
int
ins
aaa
(bad)
movaps
pusha
out
push
aas
ficomp
scas
dec
lods
aad
jle
mov
mov
retf
mov
push
and
add
mov
lds
pop
push
dec
xchg
shl
into
xchg
push
dec
test
into
or
out
push
pop
add
and
xchg
sbb
pop
outs
into
fimul
loopne
mov
ret
(bad)
lock
fcom
or
dec
lahf
and
jg
les
xchg
and
rol
loopne
cdq
inc
pop
jmp
jno
pop
aas
sub
ss
mov
adc
fcom
mov
cs
and
mov
mov
sbb
movs
imul
and
jb
jge
dec
leave
cld
jecxz
std
inc
div
xchg
or
jns
out
mov
(bad)
adc
stc
jnp
sbb
jns
pushf
add
lods
push
test
loop
loopne
sub
into
sti
adc
add
push
jle
mov
or
jo
mov
mov
sub
rcr
pop
xchg
mov
and
push
and
(bad)
mov
(bad)
cmp
xchg
mov
cs
mov
dec
imul
mov
cmp
cmp
mov
loope
ss
into
scas
jno
mov
rcl
not
sti
es
dec
and
fmul
cmp
push
out
mov
das
(bad)
mov
pop
mov
stos
dec
imul
inc
shl
cmps
je
sbb
add
jmp
jge
inc
xor
dec
vmaxsd
adc
and
add
pop
lock
call
pop
mov
push
mov
icebp
or
lock
cmp
pop
mov
xor
pop
test
push
pusha
dec
ss
add
mov
mov
aam
loope
push
call
inc
sub
mov
test
scas
inc
jg
in
add
popa
sbb
fwait
push
movs
mov
nop
scas
xor
mov
mov
jecxz
dec
adc
xor
into
sub
aam
mov
outs
stc
pop
sub
pop
and
sbb
cwde
sub
push
fistp
into
cmps
ret
sbb
sti
sbb
add
pop
pop
aam
cs
pop
(bad)
stos
sub
ret
pusha
xor
sbb
ds
mov
dec
dec
adc
mov
in
xchg
or
in
lahf
jb
jle
in
add
cmps
mov
sub
pop
stos
imul
cli
sbb
pop
mov
xchg
xchg
fcom
es
test
fcom
mov
adc
push
sub
xchg
fisub
push
call
cwde
stos
arpl
and
xor
pop
lea
std
hlt
scas
push
jnp
dec
ins
arpl
call
add
xchg
xchg
xchg
dec
adc
(bad)
cmp
call
aas
add
push
and
jne
fisubr
mov
and
and
and
sbb
out
mov
std
or
sbb
mov
mov
loopne
fcmovbe
inc
repz
dec
jbe
jmp
jae
add
xor
repnz
addr16
in
test
outs
push
mov
adc
outs
call
std
jge
inc
outs
pushf
add
and
mov
sub
sar
mov
mov
lods
pop
aas
inc
popa
xor
dec
mov
popa
xchg
sub
adc
sets
adc
or
add
inc
pop
fxch
inc
push
and
test
jbe
mov
aad
xchg
fsubr
enter
imul
mov
mul
pusha
mov
test
jbe
out
mov
rol
popa
rol
sub
out
inc
cld
sahf
adc
shl
shr
les
sub
sub
loope
cmp
dec
ins
push
nop
sti
mov
ret
or
add
clc
sbb
add
mov
xchg
jbe
mov
aam
xor
cmp
in
shr
push
dec
xchg
imul
push
sub
xor
in
out
ins
imul
adc
in
lods
ins
dec
mov
sub
jae
mov
fldz
mov
out
out
adc
xor
xor
loop
mov
and
fdivp
stos
in
sub
ins
icebp
dec
ror
inc
lock
out
inc
inc
push
dec
pusha
jmp
xlat
imul
pop
(bad)
(bad)
mov
(bad)
shl
loopne
loope
mov
ficomp
cdq
ins
xor
xor
mov
sub
add
in
imul
in
and
mov
jnp
movs
scas
enter
jge
enter
setnp
push
cmps
and
mov
dec
inc
cmp
mov
lahf
int3
inc
push
push
enter
push
dec
push
push
xchg
clc
cmp
push
mov
mov
and
sub
pop
sub
mov
cmp
loopne
push
mov
ds
ds
mov
shl
inc
xor
and
xchg
and
retf
adc
cmp
mov
aam
es
ret
std
jbe
mov
in
sub
sbb
pop
movs
mov
inc
pusha
mov
cli
xorps
jmp
inc
hlt
mov
or
mov
sbb
(bad)
nop
mov
jmp
(bad)
int
jp
rcl
es
add
inc
mov
ror
pusha
jp
lock
jb
jl
cdq
adc
in
stos
lods
call
outs
aas
outs
fucomip
pop
inc
enter
scas
fwait
lahf
mov
or
fcmovnb
call
inc
or
scas
out
mov
bound
sahf
out
dec
cwde
mov
repz
popf
push
sti
mov
fcmovnu
fidivr
sub
call
adc
jge
sub
or
mov
jb
call
lock
xchg
fcmovne
dec
mov
fadd
test
iret
and
sbb
scas
pop
sbb
in
cmp
xchg
ins
fbld
fiadd
rcl
and
das
adc
sbb
mov
inc
adc
(bad)
div
ja
or
push
pop
push
jns
adc
aas
cmp
add
xchg
lods
or
jle
jp
pusha
je
cmp
push
inc
fwait
or
jmp
lahf
add
call
lods
nop
pop
push
dec
ja
repnz
cs
jae
(bad)
push
and
dec
test
adc
cmp
mov
inc
cli
fwait
push
push
(bad)
(bad)
mov
ret
loopne
inc
sahf
cmc
cmp
dec
ja
push
outs
sbb
popf
sti
and
dec
imul
push
inc
push
sbb
pusha
xor
icebp
mov
lock
(bad)
adc
mov
pop
adc
addr16
nop
mov
push
loopne
mov
dec
jb
je
out
mov
sbb
aam
push
dec
mov
std
sub
xchg
adc
out
rol
arpl
dec
and
mov
dec
retf
out
call
ds
cs
pop
(bad)
pop
jle
ins
lock
mov
test
mov
xor
lock
pop
lahf
pusha
out
jno
xor
ret
cs
xor
pop
sub
adc
xor
mov
jmp
aam
mov
loop
and
sub
and
shl
adc
mov
(bad)
rol
jge
out
in
add
imul
xor
jle
sbb
inc
loope
pop
jp
adc
cmp
enter
in
cld
lds
shl
adc
loopne
xor
test
rcl
fistp
jecxz
inc
scas
fwait
clc
ins
jl
push
xor
mov
cmp
push
cs
mov
test
lods
into
(bad)
(bad)
repnz
imul
and
push
dec
rcl
add
stos
nop
into
xor
add
push
cld
popf
enter
xadd
and
and
xchg
ror
add
aas
repz
mov
dec
inc
cs
push
ret
js
and
push
int
and
jg
lods
mov
sbb
nop
pushf
das
add
xchg
push
mov
cmp
push
test
and
sahf
aaa
movs
loopne
cmc
(bad)
int3
fld
and
push
sub
call
pop
cmp
mov
cmp
hlt
cdq
fucomip
mov
adc
stc
loopne
mov
jmp
mov
mov
mov
push
cmp
pop
scas
pushf
add
imul
dec
jle
bnd
fnsave
adc
push
(bad)
jge
int
aad
das
xor
arpl
ret
xchg
mov
mov
xor
push
ficom
imul
(bad)
cmc
jp
scas
lock
push
pop
call
and
(bad)
icebp
adc
inc
(bad)
pop
ins
mov
push
call
pop
cs
clc
call
pop
adc
push
fdivr
add
dec
add
shl
aas
push
mov
push
leave
jg
and
mov
fs
loop
add
out
nop
jmp
jmp
inc
sub
and
push
xchg
xor
scas
dec
fisub
xor
dec
dec
push
dec
inc
xor
test
div
aam
jbe
mov
ficom
mov
sub
test
mov
cmp
xor
push
fs
mov
aaa
es
dec
fstp
call
mov
jle
ficomp
dec
or
mov
in
cld
fs
jecxz
xor
mov
rol
mov
dec
fld
(bad)
rol
mov
cmp
dec
dec
xchg
mov
mov
or
fs
pop
fld
loope
nop
rol
mov
scas
mov
js
xor
mov
sbb
test
push
xor
nop
loopne
mov
sub
push
sub
ret
jbe
cmp
xchg
cmp
(bad)
fisttp
call
adc
(bad)
or
(bad)
mov
call
mov
inc
dec
mov
mov
xchg
call
xor
cmpxchg
xchg
push
inc
cmp
repz
inc
aad
add
push
mov
cmp
dec
inc
and
mov
test
xchg
cli
push
jmp
stos
das
inc
dec
(bad)
push
sub
lock
or
xchg
and
mov
test
add
mov
inc
sbb
scas
arpl
outs
jno
mov
sahf
cmp
ins
out
aad
aam
lods
stos
mul
data16
fnsave
cmp
jo
leave
addr16
ja
cmps
sti
call
pop
cli
iret
xor
in
(bad)
in
dec
or
rol
push
cdq
ror
inc
enter
nop
out
inc
shl
mov
es
or
lock
push
cs
inc
icebp
stos
in
into
or
cwde
or
jo
popa
jmp
xor
ror
jecxz
jnp
das
push
or
and
jmp
sar
jno
rcl
fstp
arpl
shr
loope
adc
loope
mov
sub
and
popf
sub
cs
add
jg
shr
pop
fidiv
add
stos
add
push
inc
xor
fsub
cwde
sbb
pushf
js
jbe
std
mov
out
pushf
cmps
dec
mov
pop
cmp
pushf
mov
sub
jb
mov
or
cmp
push
jne
pop
inc
or
nop
es
loopne
in
popa
mov
mov
xchg
pop
pusha
jge
into
in
pop
mov
adc
push
es
sub
js
sbb
call
into
(bad)
hlt
dec
pop
outs
js
(bad)
fcomp
and
lods
pop
cs
fsub
jle
pop
outs
mov
mov
aaa
pushf
dec
rep
in
push
xor
mov
dec
add
xor
inc
inc
pop
adc
out
mov
clc
sub
bnd
jp
jl
push
adc
in
pop
lods
(bad)
leave
loop
scas
outs
rcr
jg
(bad)
adc
push
jle
(bad)
imul
add
jnp
(bad)
clc
in
(bad)
test
cmc
dec
das
mov
outs
ins
ins
repnz
dec
cmps
ins
(bad)
pop
lods
push
loopne
mov
mov
mov
test
sbb
sbb
repnz
mov
rcr
add
cld
into
popa
ds
dec
jmp
jmp
dec
xor
rol
repz
(bad)
scas
gs
sbb
iret
pop
loope
dec
stos
inc
add
mov
add
loop
sbb
sub
cmp
jo
dec
xor
shr
xor
mov
sbb
femms
mov
test
in
and
xor
lock
adc
fld
and
stos
push
or
ret
js
pop
cmps
mov
into
adc
repnz
stos
adc
push
dec
dec
jle
jl
mov
inc
pop
pop
sbb
mov
push
out
(bad)
mov
das
loope
jecxz
push
lds
(bad)
ja
test
loopne
mov
dec
into
mov
scas
or
lahf
add
mov
jnp
push
ins
add
push
adc
sti
jge
mov
cmp
jo
scas
in
outs
and
lock
jl
push
cmp
lds
lock
fiadd
mov
sbb
lahf
jne
rcl
push
sbb
mov
dec
out
shr
adc
pushf
and
mov
sbb
out
inc
fisub
adc
ret
iret
xor
xchg
jno
mov
push
mov
shl
cmps
adc
scas
and
sbb
retf
sbb
das
cld
jb
sbb
ss
test
mov
or
test
int
es
imul
sub
enter
dec
lea
out
adc
ret
xlat
sti
sar
jle
outs
fwait
lods
scas
int
mov
dec
jo
or
loopne
cmps
movs
int3
sbb
int3
mov
rol
shl
out
mov
data16
cs
push
mov
cmp
push
scas
and
fcom
lds
mov
or
and
scas
outs
jnp
pop
mov
push
dec
lods
pop
stos
or
adc
ss
push
jb
pop
push
(bad)
fs
push
cs
clc
jne
into
lahf
jne
lods
inc
cmps
adc
scas
clc
push
and
or
and
xchg
(bad)
repnz
jecxz
jge
pop
sbb
mov
clc
ror
pop
repz
xor
aaa
int3
mov
mov
and
(bad)
fimul
sbb
es
call
push
inc
fwait
ins
popf
or
sbb
mov
mov
push
xchg
out
inc
xor
push
xlat
outs
cmp
jecxz
push
nop
mov
mov
je
add
std
(bad)
jle
test
mov
loopne
and
push
fcmovnu
dec
sub
aad
loop
dec
xchg
and
and
gs
daa
inc
xchg
in
dec
cmp
mov
in
inc
cs
lods
out
icebp
cli
out
test
cmps
push
hlt
enter
and
and
scas
imul
jae
mov
jg
xchg
and
rol
das
int
mov
dec
out
mov
into
inc
sti
pusha
sbb
jl
xchg
daa
loopne
lock
and
lock
or
push
fisub
lea
(bad)
push
and
pop
retf
cmp
out
adc
dec
sbb
fidiv
xlat
outs
mov
clc
bound
in
es
push
add
lahf
sar
adc
jae
xchg
pusha
ret
pop
dec
cld
inc
test
popa
pop
adc
in
not
pop
dec
add
ss
inc
push
pop
xor
pop
(bad)
ds
lods
mov
mov
jecxz
add
hlt
inc
mov
push
ror
push
mov
ins
jo
(bad)
in
cmp
mov
mov
test
cmp
lahf
mov
push
xor
shl
int
and
dec
pop
movs
add
inc
push
push
fimul
push
inc
jl
stos
out
in
pop
cmps
nop
xchg
cmc
mov
jg
jnp
xor
mov
sti
movs
pusha
jle
jnp
push
sbb
scas
mov
xchg
loopne
loop
loopne
hlt
add
retf
xchg
das
dec
sbb
je
das
push
pop
(bad)
jge
rcl
mov
ins
lahf
std
data16
fsubrp
adc
cld
ficom
add
pop
ins
push
add
inc
add
jl
inc
in
ins
(bad)
sbb
cmp
adc
jmp
fwait
pusha
adc
cli
sti
test
add
test
popa
fwait
mov
fs
push
pop
push
ins
fist
mov
popf
mov
mov
dec
add
sub
call
push
push
out
sahf
pop
les
sbb
lods
pop
xchg
cmp
mov
adc
(bad)
div
mov
in
and
pusha
mov
(bad)
fcom
leave
fisttp
push
xor
inc
rcl
pop
mov
nop
mov
xchg
repz
jb
jnp
mov
ja
out
push
jg
xor
movs
ror
(bad)
xchg
(bad)
or
and
mov
dec
xchg
jno
addr16
mov
lahf
out
cli
push
shr
out
(bad)
or
cmp
imul
(bad)
pop
into
out
scas
xchg
dec
fistp
add
push
dec
push
push
add
sbb
sub
shr
mov
or
cmc
out
jp
xchg
pushf
test
test
push
loopne
fsubrp
xchg
xor
inc
outs
popf
and
xor
or
outs
push
jae
ror
sbb
lahf
outs
movs
into
pop
inc
xchg
outs
xor
cmps
xor
lods
mov
movs
xor
pop
scas
adc
pop
scas
outs
push
add
inc
push
pop
push
adc
sub
je
movs
fistp
cwde
pop
push
ins
mov
call
jbe
fwait
and
xor
(bad)
imul
cmps
jg
inc
out
ffreep
test
in
int3
adc
add
inc
add
push
sub
clc
fadd
shl
jae
std
in
adc
mov
in
outs
aad
xor
repnz
adc
mov
inc
xor
add
rcl
cld
xor
xchg
push
out
test
mov
lods
xchg
push
jecxz
push
cmp
jo
add
mov
jns
sub
shr
lods
push
ins
mov
push
retf
jg
lods
mov
add
jae
ja
aad
pop
ss
rol
outs
adc
sti
pop
push
fs
js
std
fimul
fstp
cmp
add
and
(bad)
push
push
je
mov
call
dec
in
popa
sub
xor
lock
jge
js
cmp
test
ja
sar
fst
mov
sub
inc
mov
iret
inc
outs
jnp
test
in
xchg
fild
mov
pusha
adc
clc
jmp
pusha
fnstenv
and
push
shl
mov
lock
push
popf
popf
cmp
mov
(bad)
adc
and
dec
xor
(bad)
inc
jecxz
dec
sti
add
xchg
arpl
out
fdivr
or
in
mov
pop
dec
push
mov
ret
test
mov
rep
aad
fld
jg
rcl
mov
jbe
cmp
mov
inc
and
mov
div
ror
jae
adc
mov
mov
loopne
fwait
gs
jle
out
mov
stos
iret
sbb
ror
jle
pop
jmp
scas
cmp
call
mov
movlps
clc
or
aas
std
out
push
push
jg
dec
int
inc
call
icebp
mov
mov
pop
lahf
mov
outs
and
call
xchg
sbb
movs
and
sub
xchg
retf
add
nop
jbe
outs
icebp
or
mov
or
adc
mov
sub
pushf
je
cmp
push
scas
push
cmp
mov
cld
sbb
jmp
inc
push
and
jae
xchg
repz
es
mov
sub
pop
call
bound
popf
inc
inc
jg
xchg
int
loop
(bad)
in
imul
es
sub
add
repnz
and
add
mov
jmp
(bad)
clc
adc
xor
xchg
aaa
mov
arpl
xchg
pop
scas
int
mov
loopne
pop
cmps
mov
mov
sub
inc
adc
call
xlat
push
mov
cmp
mov
or
out
test
push
inc
cmp
dec
nop
mov
mov
fsub
mov
push
xor
movs
push
push
ss
dec
sub
adc
mov
sahf
sahf
out
jae
sbb
ja
and
dec
dec
xchg
dec
add
sbb
loopne
frstor
fwait
add
or
sub
data16
gs
mov
scas
cs
add
push
add
repz
js
sub
jb
dec
mov
adc
sahf
or
adc
inc
das
push
aas
jl
adc
mov
mov
dec
and
(bad)
push
mov
out
lock
xor
sub
inc
fs
add
fadd
fld
mov
sbb
adc
out
outs
cmc
jnp
outs
or
and
into
(bad)
in
lds
lds
shl
jne
jge
add
js
imul
cs
(bad)
gs
nop
jle
int3
out
ret
fist
jb
leave
iret
in
jne
lods
pop
fwait
into
ror
ror
xor
pop
xchg
sub
jge
xor
add
sub
xor
xlat
add
cmp
enter
push
pop
gs
add
lods
ds
sub
jg
lods
inc
fld
inc
(bad)
icebp
mov
jecxz
cmp
adc
or
sahf
fs
aam
jb
inc
test
xor
dec
fdivr
sub
push
mov
sahf
pop
mov
push
inc
outs
pushf
pop
xor
je
neg
aam
fdiv
fs
aas
mov
mov
push
js
pop
adc
cld
jl
jg
cmps
call
loope
sbb
outs
popa
xchg
push
push
xor
push
push
mov
sbb
mov
in
shr
loope
sbb
retf
aaa
cmp
test
cli
fist
in
ss
or
sbb
push
mov
sahf
xor
mov
dec
pop
jle
cmp
fisub
ins
and
stc
cli
dec
inc
jb
adc
or
imul
or
mov
int3
pop
pusha
push
stos
(bad)
push
adc
imul
and
stos
outs
xor
add
pop
(bad)
scas
test
lods
lods
pop
jnp
(bad)
inc
sahf
pop
jmp
out
jg
pop
dec
inc
shl
cmps
add
mov
push
xchg
or
push
dec
inc
repz
je
jne
xor
and
add
push
cs
nop
int3
in
mul
adc
ret
dec
adc
mov
or
repz
jne
bound
(bad)
mov
jmp
cmp
arpl
inc
loop
int
in
out
mov
dec
movs
sbb
aas
xchg
psraw
arpl
out
and
push
push
aaa
pop
pusha
push
sbb
iret
in
mov
cmp
out
in
mov
out
sbb
das
dec
pop
jo
jp
xor
jne
jns
or
dec
adc
xor
stc
imul
dec
mov
add
sar
popf
sbb
add
retf
adc
mov
mov
aas
pop
or
loopne
pop
add
lock
sbb
sbb
loope
arpl
into
faddp
or
test
in
sti
cli
push
popa
or
ret
adc
aas
push
mov
in
call
inc
out
xor
sahf
sbb
nop
dec
dec
and
push
mov
cli
and
fisubr
ret
(bad)
inc
loopne
mov
outs
sbb
shl
mov
or
dec
xchg
rcl
ins
pop
aad
loop
call
hlt
cs
out
add
(bad)
xor
fnop
and
pop
in
test
inc
sbb
xor
push
mov
sub
ret
(bad)
or
shl
jmp
push
(bad)
cli
test
not
pop
cmps
icebp
adc
pop
push
xlat
sub
out
scas
add
out
and
push
add
mov
jo
adc
in
xchg
cwde
add
ret
jmp
sti
push
fcom
mov
imul
push
fldcw
mov
movs
hlt
ret
jle
test
shl
xchg
mov
repz
pop
sahf
div
jmp
stos
cmp
fld
mov
(bad)
fcom
lock
jbe
loope
cwde
and
sbb
or
test
jle
test
xor
sub
dec
jg
lea
into
cmp
push
icebp
xor
ficom
pop
mov
or
outs
push
ja
mov
xchg
into
mov
xchg
retf
jno
icebp
fst
imul
fneni(8087
xchg
shl
and
ror
scas
mov
into
mov
out
push
adc
push
add
sub
pop
jae
lahf
test
mov
shr
iret
cli
ficomp
pop
mov
and
mov
ins
push
sub
js
repz
mov
mov
cmp
jg
cmps
cmp
mov
mov
push
dec
sub
mov
push
fadd
cs
jns
or
push
aas
sbb
jmp
mov
xchg
test
jl
dec
mov
in
ja
in
repnz
bound
push
movs
jo
data16
xor
mov
div
scas
icebp
add
jnp
sub
lods
pusha
xchg
xchg
retf
cmc
mov
lock
sbb
inc
sub
bound
sbb
aas
or
mov
repz
xchg
mov
pop
sub
ror
xor
cwde
jle
sub
or
outs
dec
or
lahf
hlt
pushf
cld
pop
mov
outs
cmp
cmp
mov
clc
cmp
inc
push
ins
arpl
mov
lahf
push
cmps
adc
jmp
mov
mov
inc
sbb
adc
outs
test
add
xor
sbb
arpl
push
adc
iret
mov
jo
movs
ja
sub
cwde
jg
loope
sbb
stos
nop
scas
fcomp
out
(bad)
add
mov
mov
jmp
jle
mov
add
mov
sbb
call
int
sahf
repz
(bad)
popa
xchg
mov
jge
push
(bad)
pushf
add
adc
inc
std
dec
pop
xchg
push
or
shl
sbb
out
push
jo
mov
clc
addr16
js
xor
mov
dec
outs
popf
cmp
test
cmc
std
mov
jg
cwde
loopne
add
mov
dec
psubusw
jg
fcmovb
mov
mov
call
inc
dec
sbb
lock
ficom
mov
fcomp
and
imul
push
xchg
stc
or
aas
lock
shl
or
rcl
mov
xor
test
shl
adc
cmp
hlt
mov
xchg
mov
ret
(bad)
imul
mov
cs
nop
outs
add
nop
ins
sar
aam
jno
in
loopne
cmovs
outs
stc
fidiv
add
fisubr
xchg
mov
jg
or
unpcklps
(bad)
cmp
movs
sub
mov
fistp
cs
and
sub
inc
add
cmps
dec
shr
ins
push
cmps
out
push
shr
test
pop
add
inc
icebp
adc
arpl
push
mov
mov
mov
js
push
ss
(bad)
cwde
loope
sbb
xor
bound
jge
dec
out
or
mov
in
fadd
out
mov
loop
fldcw
je
test
inc
neg
mov
push
(bad)
inc
in
lahf
jbe
xor
pushf
xchg
xor
adc
pop
daa
mov
inc
lods
nop
int3
adc
outs
mov
lock
pushf
sub
add
push
xor
out
jnp
shr
inc
repz
loope
inc
push
mov
stos
call
and
push
dec
js
sbb
xor
pop
outs
push
adc
mov
rcr
(bad)
push
pop
jae
adc
ds
cmp
pushf
and
inc
fs
jg
out
push
fisttp
mov
loope
push
xchg
sbb
jnp
push
repnz
mov
call
fldcw
inc
js
dec
(bad)
frstor
into
out
cs
imul
mov
ins
nop
push
and
and
inc
pop
add
and
fsubr
outs
lods
sub
pop
add
jmp
aaa
jns
or
icebp
adc
in
and
mov
out
jb
push
aas
je
mov
in
arpl
sti
jl
rcr
adc
jb
jno
in
(bad)
lods
outs
pop
(bad)
lock
enter
or
retf
xchg
mov
(bad)
out
icebp
test
addr16
call
mov
jle
dec
scas
cld
ror
retf
fstp
jb
mov
jle
inc
or
ja
push
outs
push
hlt
loop
f2xm1
in
out
mov
inc
lea
(bad)
aad
push
ins
inc
dec
jge
out
data16
fwait
das
test
xchg
dec
es
fidivr
push
add
jmp
or
add
lods
(bad)
ret
mov
jo
rol
sub
and
push
add
jb
sub
inc
ror
fldcw
mov
lock
ret
push
hlt
sub
jnp
mov
adc
add
les
or
test
imul
lock
adc
fucomp
dec
cdq
out
xchg
bound
call
sbb
ror
jno
mov
repz
pop
cmps
nop
lods
imul
loopne
inc
mov
lods
push
icebp
push
fldcw
je
ror
sub
imul
loop
mov
ror
dec
mov
mov
sahf
rcl
jle
jmp
loopne
jecxz
nop
and
shl
test
jae
std
or
add
imul
stos
dec
mov
icebp
sbb
dec
aaa
mov
mov
fnstenv
dec
pusha
fucomp
pushf
lahf
call
sbb
push
call
dec
push
int3
cmp
sbb
dec
jp
js
test
jmp
adc
out
outs
xchg
pop
loop
outs
mov
sar
pusha
pop
arpl
cli
pop
ror
sub
and
jmp
(bad)
adc
pop
nop
dec
ret
bound
inc
fnstcw
adc
sbb
shl
jno
out
aas
imul
sbb
sbb
push
mov
mov
(bad)
loop
in
pop
push
(bad)
nop
mov
adc
div
psllw
pop
iret
adc
mov
mov
xor
add
lock
xor
pop
jle
mov
jg
ret
cmps
mov
push
jmp
lahf
int3
mov
and
es
bound
scas
fcomp
scas
sub
test
ret
cmc
retf
xchg
cli
xor
inc
fwait
call
daa
inc
xor
jle
mov
scas
adc
mov
jne
pop
xlat
nop
(bad)
sbb
(bad)
stos
xchg
cmp
xchg
shl
out
cmps
push
mov
cli
inc
jl
adc
push
data16
outs
sbb
test
mov
cmps
mov
pop
les
sbb
(bad)
push
lea
jne
pop
sbb
ins
ret
jge
lahf
outs
outs
shl
mov
out
adc
rol
mov
dec
inc
cmp
cs
mov
pushf
ins
loopne
push
into
fwait
mov
mov
add
sbb
(bad)
pop
fwait
arpl
adc
and
dec
adc
sub
mov
call
loopne
mov
mov
jecxz
inc
cmp
pop
jb
shr
jp
scas
and
in
or
jp
fdiv
mov
cs
(bad)
pop
inc
mov
imul
sti
sub
fsub
sbb
inc
adc
pusha
pop
les
(bad)
jg
lods
jg
ss
xchg
inc
loop
leave
call
adc
fwait
push
lds
imul
popa
push
data16
adc
dec
(bad)
and
inc
xchg
push
mov
ins
or
sbb
mov
adc
stos
aas
inc
std
xor
std
rol
sti
leave
imul
or
ins
dec
mov
cmp
enter
sub
stos
mov
int3
fcomp
xor
scas
lock
mov
sar
inc
xor
or
jo
retf
cmp
cmp
lds
sbb
js
les
in
fcom
(bad)
outs
mov
outs
mov
scas
cmps
mov
arpl
out
imul
or
inc
add
popf
dec
cld
(bad)
ss
jne
int
int3
and
out
icebp
sub
scas
loope
fimul
xor
(bad)
lock
xor
(bad)
xor
mov
mov
movs
fistp
pop
mov
int3
and
add
std
inc
xchg
into
xor
je
adc
push
sbb
xor
hlt
mov
stc
inc
push
adc
test
sbb
jge
retf
outs
mov
(bad)
test
push
ins
aaa
ja
inc
scas
add
sub
jp
enter
inc
scas
sbb
xor
icebp
fisub
cmc
outs
repz
add
push
pop
cmp
pop
dec
in
dec
(bad)
ror
xor
push
out
lock
jnp
mov
ret
dec
xor
ds
dec
fcmove
jg
jmp
dec
mov
mov
mov
repz
cmp
sahf
fwait
or
cmps
and
ret
mov
xchg
cmp
lods
out
aaa
add
jb
loop
pop
cmp
shl
xor
jbe
jo
pusha
adc
mov
add
adc
(bad)
clflush
aas
jle
sub
dec
test
inc
xor
adc
push
mov
rcl
jne
push
hlt
sub
xchg
pop
mov
jl
fs
mul
jmp
xchg
inc
call
pop
add
sub
mov
aas
cld
ins
push
or
add
inc
(bad)
ror
and
(bad)
fiadd
iret
dec
xchg
mov
dec
pop
xlat
clc
adc
and
and
pop
push
retf
and
into
call
sbb
lahf
pop
mov
ror
add
mov
dec
and
mov
into
shr
jo
mov
es
repz
or
adc
cs
inc
xchg
ret
fistp
icebp
xchg
fucomp
xchg
push
xor
jo
xor
mov
enter
jae
scas
out
sti
ret
sub
jb
adc
dec
mov
dec
scas
(bad)
jle
out
fmul
cli
ror
stos
ror
sub
in
enter
sldt
jb
push
xchg
xchg
punpckldq
aas
mov
pop
imul
ds
inc
lock
jbe
jl
push
add
js
fwait
cmp
test
rol
repnz
std
push
addr16
or
ret
and
inc
sub
fild
lds
shr
imul
mov
or
mov
retf
and
xchg
mov
int
nop
jo
cmps
dec
dec
clc
jae
pop
mov
(bad)
in
sahf
mov
mov
mov
xor
add
je
cmp
lock
ret
xor
out
xchg
dec
jne
mov
out
jmp
mov
sbb
inc
mov
nop
and
test
push
pop
adc
xor
push
(bad)
xchg
jae
dec
push
call
pop
pop
push
icebp
add
ins
mov
(bad)
sti
test
pop
mov
out
dec
test
add
stos
out
ja
arpl
pop
fisubr
popa
xchg
out
test
xcrypt-cfb
cmps
and
and
in
inc
shl
and
cli
(bad)
jmp
inc
push
push
add
rep
sub
(bad)
xchg
xchg
stos
icebp
shr
test
fcmovnb
push
ret
cdq
push
or
sub
loope
jo
inc
xchg
cmps
cld
fiadd
(bad)
shl
(bad)
loopne
jb
inc
push
mov
dec
jge
push
inc
pop
inc
fsub
sahf
and
dec
mov
or
xchg
jcxz
jno
(bad)
ds
mov
and
push
movzx
mov
inc
(bad)
pop
mov
push
pop
jbe
lock
push
xor
nop
jecxz
sub
sbb
or
into
shl
and
push
mov
retf
push
mov
mov
(bad)
out
mov
fimul
sti
jecxz
add
mov
fldcw
jle
sbb
icebp
daa
sbb
dec
sub
ins
or
call
adc
and
jno
sbb
ss
push
fcmovnu
test
inc
retf
fmul
push
in
popa
jl
adc
inc
adc
aam
inc
mov
push
add
ret
jbe
and
outs
adc
push
mov
sbb
mov
mov
lock
adc
xchg
cdq
jmp
xchg
push
arpl
test
mov
je
ss
jle
cmp
sbb
xor
pop
mov
sbb
cmp
iret
add
sbb
mov
mov
ins
rcl
fstp
rcr
mov
and
jns
dec
in
xor
add
push
aam
scas
lods
test
in
out
(bad)
cdq
lea
(bad)
and
cmp
rol
(bad)
mov
push
inc
mov
(bad)
adc
shr
(bad)
ins
mov
ins
dec
push
fmul
pusha
cs
cdq
mov
mov
dec
or
scas
mov
pop
sbb
lahf
mov
enter
rcr
xor
push
jecxz
jmp
and
adc
add
dec
outs
push
scas
cwde
add
or
xchg
adc
mov
inc
lock
call
xchg
adc
cs
enter
mov
xlat
fwait
mov
xchg
stos
popa
sbb
fidiv
dec
ins
icebp
add
loopne
fistp
dec
movs
mov
js
mov
hlt
push
xor
aas
out
mov
xor
lods
xchg
inc
mov
rcr
add
into
inc
xchg
shr
out
and
cld
popf
shr
push
test
lea
push
test
(bad)
and
xor
dec
(bad)
stos
pusha
pop
push
or
leave
aaa
pop
inc
push
jne
mov
outs
sub
scas
dec
jmp
add
or
inc
add
inc
push
fcomp
(bad)
cmps
scas
les
ror
jg
xor
fs
add
push
bound
mov
data16
lahf
outs
cmp
jmp
mov
sar
and
jb
push
stos
jb
fs
rcr
std
fidivr
enter
aaa
sub
iret
dec
(bad)
dec
and
jae
clc
jl
(bad)
fist
out
nop
inc
dec
(bad)
hlt
jo
jl
sub
daa
and
cmp
cli
and
pushf
ret
sub
pop
mov
xchg
sub
inc
pop
icebp
aam
jp
shr
push
and
mov
dec
out
neg
test
xchg
sbb
xor
adc
adc
and
enter
loope
scas
enter
les
ds
pusha
pop
and
adc
cli
jmp
popfw
(bad)
pushf
cmp
js
in
nop
aam
jmp
xor
jecxz
xchg
and
adc
xor
jmp
retf
or
adc
xor
pushf
gs
hlt
jmp
arpl
add
mov
stos
push
mov
sahf
jo
mov
mov
in
bswap
cmc
sbb
mov
mov
or
call
or
inc
clc
shl
aas
idiv
jo
push
into
rcr
xchg
popa
sbb
pusha
shl
(bad)
out
mov
sti
or
out
and
lock
mov
out
call
repnz
fwait
lock
pop
and
mov
out
lea
pop
sbb
inc
add
pusha
push
lock
adc
add
jle
outs
add
cmp
mov
out
or
mov
adc
or
cmc
or
xchg
les
sti
jge
adc
mov
ret
fbstp
pop
xor
mov
imul
stos
inc
jmp
repz
sub
jbe
pop
push
jae
jmp
lds
adc
ds
cmp
fmul
gs
pop
dec
or
jp
mov
js
call
add
and
outs
arpl
jae
outs
pop
or
(bad)
and
jnp
rcr
adc
xor
xor
clc
mov
pop
jle
and
push
shr
xor
mov
test
js
mov
sahf
jnp
add
jno
rol
test
fsub
pop
adc
inc
push
push
jbe
fisub
xchg
into
dec
scas
cs
mov
call
sbb
mov
jg
xchg
push
icebp
push
push
frstor
std
lea
mov
not
lods
or
dec
ja
mov
lods
add
mov
ds
jmp
ss
mov
pop
adc
test
in
sbb
dec
jmp
or
loope
add
dec
mov
loop
mov
or
sahf
scas
pop
rcl
cmps
les
xchg
fdiv
and
mov
pop
mov
das
xchg
stos
mov
and
fchs
xor
and
jge
ds
repz
repz
mov
sub
fistp
ja
push
push
inc
or
xor
lods
pop
jl
add
mov
cmp
sub
fnstcw
cmp
lahf
cmp
outs
rcr
cmp
or
sbb
mov
(bad)
out
mov
xchg
pop
rol
or
cmp
shl
inc
inc
mov
call
xlat
sub
jae
shl
push
test
nop
jle
pop
pop
call
clc
hlt
and
mov
in
and
cdq
pop
cmp
inc
mov
ss
dec
call
loop
xchg
pop
sti
call
cld
in
adc
mul
dec
movs
adc
fdiv
imul
repz
mov
leave
mov
lock
inc
icebp
add
(bad)
push
sahf
xchg
adc
pop
jo
pop
into
inc
loope
int3
not
xchg
clc
out
xor
xor
sbb
inc
adc
outs
sahf
pop
scas
das
mov
jo
jb
pop
dec
icebp
mov
(bad)
ftst
ds
ja
sub
lods
inc
gs
cdq
mov
cmps
ret
push
xacquire
arpl
aaa
daa
popa
out
and
lock
ins
lahf
push
sub
je
or
and
fild
in
mov
add
mov
mov
mov
push
inc
test
call
cmp
inc
pop
rcl
out
shl
sbb
push
(bad)
ins
jg
jmp
es
xor
leave
(bad)
shl
test
jmp
les
sub
or
mov
add
mov
inc
out
aam
adc
add
mov
nop
add
adc
mov
out
push
pop
shl
cdq
sbb
repz
xchg
adc
fwait
adc
jno
inc
jp
test
shr
ficom
repz
scas
movs
xchg
enter
cli
inc
fistp
(bad)
daa
out
cmp
std
inc
clc
bound
sahf
movs
cmova
jo
add
cmp
pop
sub
(bad)
dec
push
cmp
jmp
ja
or
stos
les
jle
stc
fcomp
(bad)
ds
and
faddp
or
and
push
in
in
xor
or
inc
inc
sub
xor
jl
call
dec
push
mov
jp
or
(bad)
xchg
pop
push
push
inc
ret
or
mov
mov
imul
mov
loop
movs
sahf
out
mov
pop
sub
mov
shl
cdq
in
xor
jl
inc
mov
sar
data16
mov
jbe
adc
out
daa
pop
and
mov
arpl
(bad)
jb
(bad)
mov
ss
std
xchg
push
das
retf
cmps
aam
fiadd
loopne
mov
adc
pop
mov
mul
dec
mov
scas
cli
sar
and
and
sub
ret
int
cmp
jecxz
mov
or
in
sti
adc
mov
add
dec
arpl
inc
outs
adc
imul
cmp
gs
pop
pusha
push
lahf
pop
push
add
out
pop
adc
jp
jnp
jbe
cs
ins
push
sbb
mov
adc
bound
push
fwait
and
inc
inc
loopne
dec
sub
pop
scas
sbb
sub
or
rcr
mov
jb
jmp
and
stos
in
sub
jo
xchg
icebp
add
push
adc
paddusw
rcr
sar
nop
or
aas
add
dec
jo
adc
jmp
or
fs
add
(bad)
mov
es
pop
in
mov
mov
repz
xchg
iret
pop
ds
pop
inc
sahf
mov
mov
(bad)
movs
call
cmp
das
cmp
dec
pusha
div
dec
ror
scas
and
cmp
add
or
push
addr16
retf
cmp
mov
lock
stc
ret
pop
(bad)
repz
add
xchg
jecxz
scas
and
je
imul
das
xchg
pop
pop
inc
push
fsubp
cwde
sti
cld
pop
fwait
push
lahf
fld
push
mov
out
fsubrp
sub
adc
out
out
mov
test
retf
fnstenv
stc
retf
ss
nop
and
nop
arpl
xchg
pop
and
cmp
adc
cdq
adc
int3
sub
mov
mov
mov
scas
inc
das
lds
sbb
lea
bnd
adc
pop
adc
mov
imul
jo
sbb
mov
dec
loopne
mov
sub
cmovnp
jo
outs
outs
push
xchg
jae
(bad)
clc
xchg
mov
test
jns
cmp
push
cmc
dec
inc
fisttp
xor
repnz
and
mov
mov
mov
ror
scas
and
xor
jno
or
xchg
or
jo
push
add
outs
fisub
fiadd
and
adc
sub
aas
push
adc
cmp
in
sub
call
xchg
test
ja
stos
jbe
cmps
(bad)
sti
(bad)
outs
ds
out
int3
pusha
sub
repz
in
add
push
pop
popf
pop
jne
aaa
sbb
ja
xchg
fiadd
jno
(bad)
fdivr
(bad)
mov
fist
push
out
ins
cld
cmc
jl
sahf
(bad)
pop
push
into
sub
jmp
sbb
adc
jno
xchg
(bad)
xchg
addr16
add
addr16
repz
or
aam
mov
adc
pusha
jg
push
pop
mov
inc
inc
mov
je
aas
push
sbb
(bad)
scas
es
lods
jo
jle
shl
adc
mov
inc
sbb
stc
ins
or
push
pop
les
jno
aaa
or
pop
mov
mov
jl
jle
or
pop
fwait
mov
inc
test
ins
mov
xor
retf
push
out
cmc
mov
arpl
mov
cmp
dec
xor
outs
mov
scas
jg
dec
dec
lock
mov
adc
jg
lods
addr16
push
pop
push
cmp
jo
push
popf
sub
mov
lahf
ss
out
repnz
adc
or
into
out
sub
fidivr
pop
daa
(bad)
test
shl
jne
out
pop
inc
into
or
aas
push
(bad)
loope
dec
xor
inc
inc
dec
fs
ret
and
jmp
or
es
cmp
cmp
pusha
sub
pop
xlat
add
jle
lock
sbb
push
aaa
sbb
lock
(bad)
pop
rol
inc
add
push
inc
in
jae
mov
inc
cwde
cmps
mov
and
(bad)
push
call
outs
push
ins
in
cmp
into
lea
mov
cmp
and
jo
sbb
pop
lea
shr
in
sub
jg
inc
mov
dec
or
jne
add
dec
pop
fmulp
or
inc
xchg
iret
xlat
sub
test
cmp
push
jle
sbb
pop
cs
cmps
outs
cdq
lods
scas
lods
push
cmps
jno
or
shl
mov
gs
or
mov
mov
mov
ins
sbb
mov
out
push
add
push
push
packssdw
mov
mov
int
outs
(bad)
or
lea
mov
inc
push
sub
add
js
mov
jne
push
popa
jo
and
fdiv
push
imul
mov
int
lock
sbb
xchg
repnz
sbb
mov
sub
push
sbb
out
adc
pop
out
mov
outs
mov
add
inc
sbb
mov
retf
cdq
fsubr
mov
mov
in
ds
sub
push
cmp
and
sub
adc
popa
fsubr
inc
adc
rcl
std
push
inc
inc
pop
adc
nop
jmp
dec
stc
adc
lock
add
adc
xchg
clc
dec
or
push
daa
data16
out
or
jmp
inc
ins
(bad)
out
into
push
sub
xor
gs
fs
adc
mov
pop
out
pusha
dec
dec
lock
js
adc
lahf
xor
jmp
jge
ds
stos
xchg
inc
sahf
xchg
loope
adc
xor
push
outs
dec
cld
adc
inc
pusha
ficom
xlat
xor
adc
push
popa
dec
mov
or
je
out
xor
xor
data16
push
xchg
xchg
loopne
out
lods
or
call
rcr
inc
mov
rol
out
sub
sub
imul
push
je
sahf
mov
ror
mov
js
inc
pop
jle
xchg
out
adc
add
mov
imul
push
jmp
jb
jmp
imul
stos
repnz
add
(bad)
jecxz
mov
or
mov
rcl
push
sub
inc
je
cli
dec
add
ins
xor
xor
loope
(bad)
xchg
add
mov
sbb
sub
mov
or
pop
jle
jmp
xor
div
popf
lock
popa
imul
push
out
push
adc
inc
sub
pop
retf
mov
dec
mov
push
jle
adc
test
test
and
dec
leave
jno
repnz
in
mov
jg
jo
popf
adc
sbb
test
cli
es
mov
dec
adc
add
mov
jno
hlt
sti
(bad)
adc
mov
jle
out
pop
jo
fld
mov
mov
(bad)
jae
mov
test
push
mov
mov
adc
and
test
mov
mov
push
mov
rol
js
push
cmp
dec
loope
test
or
add
sbb
jno
in
push
fiadd
xlat
data16
xor
jmp
push
adc
int3
scas
xchg
xor
push
mov
mov
push
adc
outs
adc
add
lock
fdiv
in
push
jno
adc
loopne
mov
pusha
rcl
es
shl
(bad)
(bad)
adc
sbb
pusha
pop
ins
out
inc
dec
loope
push
mov
fidiv
mov
aas
inc
pop
pop
ins
sub
rcr
(bad)
add
test
cmp
add
mov
loopne
push
div
(bad)
xor
cmp
mov
ja
xchg
std
scas
sahf
mov
fs
dec
aam
adc
inc
nop
sti
jg
fwait
pop
mov
and
inc
mov
out
ins
jge
sar
pop
push
adc
jae
test
loopne
pop
xchg
xchg
cmps
mov
mov
cmc
adc
(bad)
cmc
xor
pushf
sbb
xor
or
sub
mov
test
pop
repnz
call
stos
add
lea
dec
pop
add
jg
lea
mov
lock
imul
fmul
nop
ss
push
imul
and
jg
outs
inc
js
xor
cmc
ret
sub
push
inc
mov
and
push
jno
lock
scas
adc
in
mov
push
lahf
xchg
xor
int3
loopne
adc
iret
pusha
push
ja
add
shl
lahf
jbe
retf
adc
xchg
into
das
ret
cwde
mov
dec
jle
or
push
adc
sbb
in
add
xchg
(bad)
in
scas
mov
push
(bad)
cmp
mov
xchg
mov
fisubr
cwde
cmp
cs
inc
fcmovbe
xchg
es
retf
adc
cmc
sahf
jg
fcomp
jmp
mov
jns
jge
push
add
stos
xchg
or
shl
adc
add
rcr
ja
lods
cmc
cdq
test
sbb
(bad)
jp
cmps
cwde
add
aam
pop
sbb
sub
ds
jge
enter
adc
push
sub
(bad)
cmp
and
pop
mov
cmp
cs
into
and
add
shl
daa
cmps
push
ror
data16
and
xchg
mov
(bad)
call
aas
sub
imul
adc
aas
sahf
loopne
mov
cmp
outs
shr
push
bound
shl
sub
cld
enter
cs
ins
mov
sub
cli
push
mov
data16
push
and
dec
add
out
ret
inc
cmps
xor
push
inc
push
mov
lods
adc
sub
shl
add
inc
or
mov
jecxz
scas
xor
adc
mov
or
in
in
icebp
neg
inc
in
out
pop
and
sbb
mov
popa
into
scas
sbb
mov
dec
out
repnz
sbb
add
add
add
dec
outs
add
push
nop
(bad)
dec
es
(bad)
mov
jne
add
lea
scas
jb
and
test
movups
mov
fisub
mov
dec
fs
ret
call
cmc
jg
imul
xor
sbb
inc
sbb
jg
(bad)
inc
sbb
cmp
dec
imul
cs
retf
fs
xor
adc
mov
fdivp
fsub
jno
pop
adc
sbb
mov
mov
mov
loopne
adc
sbb
out
xor
retf
(bad)
test
xchg
fidivr
mov
rcr
xchg
enter
push
jmp
stos
sbb
call
lahf
stos
outs
xchg
daa
and
mov
ins
inc
cmp
xor
iret
inc
test
xchg
imul
push
inc
add
out
je
sbb
add
daa
cmp
sub
test
or
loopne
enter
xor
cmp
and
jp
pop
outs
xchg
popa
dec
loop
mov
or
jb
cmp
add
loope
cmp
pop
(bad)
dec
outs
cmc
xchg
xor
les
fldcw
sbb
outs
cwde
aas
int3
aaa
mul
imul
fnstenv
pushf
xchg
pop
ins
jno
fmul
push
jg
mov
adc
add
sbb
rcl
movs
dec
xor
test
inc
iret
inc
and
stc
jle
dec
test
out
mov
ins
pusha
lock
pop
movs
cmp
sub
xchg
retf
jp
popf
shr
jb
ins
pop
lods
cli
sub
dec
in
mov
sub
mov
sbb
pop
es
sti
jno
mov
push
push
or
and
mov
imul
push
(bad)
ja
and
popa
push
(bad)
rcr
mov
cmp
ins
adc
cli
shl
inc
shl
or
mov
hlt
lods
xchg
icebp
jno
sub
cmp
sbb
xor
add
aas
fcomip
(bad)
enter
nop
iret
mov
inc
addr16
inc
push
and
sahf
push
stos
cmp
nop
pop
lock
ja
cli
ds
inc
stc
sub
pop
adc
outs
mov
outs
dec
cld
(bad)
jmp
mov
pop
xchg
js
mov
test
popa
sub
push
clc
adc
out
mov
in
rol
inc
fxch
inc
(bad)
ja
sbb
or
sub
lahf
jg
movs
out
js
mov
and
loopne
fidivr
push
or
cmp
adc
jmp
into
fs
inc
call
cli
sti
in
dec
sbb
mov
xor
or
add
fidiv
data16
or
pop
inc
ins
fcom
xor
jo
ror
pop
push
sub
or
add
add
pop
(bad)
sub
xchg
xor
mov
sahf
push
movs
in
(bad)
cld
mov
mov
sahf
cmp
cmp
aam
xchg
jae
push
lock
cdq
xchg
nop
or
in
out
or
mov
jns
sub
inc
pop
loop
loope
sub
mov
movs
mov
sahf
fadd
out
cmp
cmp
push
inc
xchg
jae
pop
in
and
xchg
pusha
cs
pop
mov
jp
pop
pop
out
sub
lock
icebp
ret
jl
push
in
mov
fucom
fadd
push
add
pop
jo
dec
cwde
xchg
mov
sbb
mov
cmp
mov
repz
mov
(bad)
cmp
xor
adc
pushf
dec
jg
jge
adc
leave
aam
(bad)
adc
loopne
xchg
or
out
jno
jp
pop
push
je
dec
sub
mov
out
push
retf
test
or
and
xchg
into
pop
inc
cs
repz
data16
loope
data16
xchg
ret
(bad)
or
jge
sbb
sub
jle
cmps
sbb
pop
mov
sub
fldenv
or
in
inc
adc
or
add
xor
mov
ror
lahf
aam
xchg
fimul
mov
add
mov
clc
xchg
(bad)
push
xor
inc
jb
retf
mov
das
je
out
xor
dec
retf
(bad)
sub
or
adc
jo
xchg
test
cmp
ins
les
add
stc
mov
xor
and
jo
and
test
cld
mov
jp
(bad)
int
jo
adc
mov
xchg
sbb
jle
mov
dec
icebp
sbb
bound
sahf
inc
push
idiv
add
outs
fcomp
aas
(bad)
push
outs
test
daa
and
inc
pushf
std
mov
fsubr
(bad)
inc
out
sti
or
hlt
and
add
dec
inc
in
push
jae
fistp
add
mov
in
inc
push
pop
imul
pop
adc
data16
nop
outs
rcl
inc
clc
hlt
pop
pushf
inc
in
fadd
add
xchg
and
aas
xor
ins
(bad)
jecxz
push
xor
cwde
mov
pusha
loop
and
popf
int
adc
outs
fwait
jge
das
mov
(bad)
inc
mov
adc
pop
cs
sbb
lock
push
bound
(bad)
jno
popa
sub
les
fcomp
cmc
out
addr16
pusha
add
dec
xor
push
mov
mov
aam
loopne
mov
test
jle
icebp
shr
cld
or
rcr
fsub
mov
gs
xor
pop
cmp
nop
mov
add
xor
stos
adc
shl
adc
out
cwde
sbb
mov
xor
pop
inc
jmp
lahf
nop
scas
(bad)
cmp
shl
jle
popf
xor
mov
hlt
sub
into
mov
push
dec
daa
arpl
mov
or
aas
xor
lahf
fs
sbb
jae
out
jle
inc
mov
pop
lods
push
data16
dec
loopne
add
xchg
mov
mov
xchg
loopne
mul
int3
(bad)
fist
jp
pop
pop
jmp
push
outs
(bad)
pop
mov
fbstp
cmp
sbb
dec
dec
call
js
add
fisubr
dec
(bad)
out
push
test
or
inc
jl
xor
int
xor
push
leave
stos
dec
mov
inc
aaa
lahf
loopne
cs
dec
inc
sar
dec
lock
scas
adc
jb
(bad)
mov
inc
fcomp
jo
stos
ss
jbe
push
test
cwde
js
ret
mov
and
push
mov
fisttp
loopne
xor
sub
jno
add
gs
xchg
enter
xchg
mov
stos
(bad)
pop
test
xchg
jl
scas
and
mov
test
into
or
add
ja
dec
mov
adc
stc
fisttp
fucomip
fld
xchg
(bad)
pop
push
ja
out
arpl
call
mov
lea
and
lods
mov
xchg
pop
rol
jmp
or
mov
adc
ror
push
fidiv
in
sub
into
test
and
xor
or
inc
outs
pop
xor
fwait
imul
inc
popf
fmul
mov
aas
sbb
rcl
mov
push
call
jo
push
loope
mov
mov
into
hlt
movs
faddp
ds
fadd
jno
mov
or
inc
mov
mov
lods
pop
add
mov
aaa
mov
jle
dec
pop
sbb
inc
fldcw
and
fwait
jo
jle
out
rcl
xor
xchg
inc
or
dec
(bad)
cmp
aam
inc
mov
pop
push
loop
adc
jae
sbb
ror
adc
push
mov
dec
pop
adc
push
pop
push
bound
scas
pop
ficomp
cli
inc
mov
adc
outs
sti
test
mov
outs
(bad)
jne
mov
xor
and
int3
lahf
inc
mov
mov
repz
vmovntps
dec
ficom
adc
dec
das
mov
dec
push
xchg
pop
gs
fwait
(bad)
mov
shl
mov
imul
pop
push
pop
test
mov
loope
into
mov
ror
adc
bound
ss
push
outs
enter
add
leave
(bad)
mov
pop
loopne
lock
cdq
leave
add
aas
push
rcl
adc
test
and
xchg
sar
mov
lds
pusha
xchg
pop
or
cmp
wrmsr
cmc
inc
enter
loopne
mov
mov
cmp
sahf
xchg
and
and
shl
cmp
aas
sti
push
ret
inc
pop
test
mov
cmp
xor
stc
sbb
xor
jne
sbb
rcr
loopne
(bad)
ss
jecxz
xchg
pushf
sar
(bad)
(bad)
jmp
adc
cwde
into
(bad)
retf
in
shr
mov
fidiv
xor
lds
pop
popa
jg
mov
mov
fcomp
cld
jmp
inc
mov
pusha
dec
js
das
data16
sbb
sar
xchg
push
xor
out
inc
push
add
pop
jb
jno
mov
repnz
(bad)
xor
cmps
mov
xor
shr
adc
in
mov
jns
into
fisubr
mov
sbb
ja
jns
dec
cmps
aas
inc
sbb
and
pop
or
(bad)
out
jno
push
iret
cmp
pop
push
shl
adc
mov
mov
push
dec
push
xchg
mov
xor
mov
cmps
sti
mov
pusha
lock
mov
xor
pop
and
popf
pop
mov
cmp
mov
jl
cmp
repz
pusha
leave
adc
mov
dec
mov
jb
and
adc
or
inc
scas
jmp
cdq
sar
and
ret
add
repnz
and
call
dec
gs
push
inc
add
sahf
push
fidivr
les
xor
pop
add
addr16
push
outs
sub
enter
call
in
jmp
daa
xor
iret
movs
call
jo
pusha
scas
inc
movs
mov
xchg
xor
inc
or
xor
aas
sub
or
add
mov
xor
mov
inc
xor
or
mov
dec
loope
dec
lahf
fdiv
(bad)
pop
mov
sbb
in
jb
or
push
push
les
(bad)
out
aam
clc
push
outs
mov
xor
dec
xchg
dec
mov
cwde
mov
loope
mov
xor
ins
sub
pusha
inc
(bad)
mov
dec
ds
iret
mov
call
fwait
out
sbb
push
sub
add
sub
or
mov
and
pusha
retf
and
lahf
jne
pop
push
inc
mov
out
push
push
mov
mov
pushf
jmp
mov
lods
pop
jne
xlat
inc
mov
sbb
adc
scas
mov
fsubr
retf
hlt
gs
scas
and
jle
jae
jns
cs
js
jl
sub
pop
and
push
(bad)
dec
or
mov
mov
mov
mov
les
(bad)
int
add
fisub
push
sti
add
xchg
mov
pop
call
(bad)
mov
nop
or
inc
push
xchg
enter
fmul
sahf
xor
dec
xchg
scas
mov
xchg
out
push
sub
mov
je
(bad)
sar
(bad)
popa
push
or
(bad)
push
xchg
inc
aad
ret
cmp
jecxz
(bad)
call
out
jg
les
mov
ins
in
dec
mov
sar
push
xchg
push
push
mov
mul
jle
fisubr
cs
call
scas
aam
add
js
pop
mov
cs
lods
xor
(bad)
fiadd
pushf
jmp
lock
mov
dec
xchg
fdivr
pop
mov
push
add
push
mov
push
popa
fnsave
pop
add
and
js
pushf
jb
js
mov
sub
fidiv
sbb
popf
push
lahf
hlt
or
sahf
add
ret
imul
xor
mov
mov
sahf
jl
jmp
sahf
mov
call
push
jg
jl
or
pop
xchg
cmp
dec
sbb
adc
xor
adc
inc
(bad)
je
nop
fisub
(bad)
pop
jle
dec
aam
aas
test
pop
das
xor
or
sbb
test
retf
call
shl
cmp
mov
fiadd
(bad)
xacquire
mov
pop
cwde
cdq
inc
dec
cmp
imul
lods
mov
push
inc
test
jns
xchg
and
sbb
push
cmc
or
shr
xchg
mov
fwait
out
daa
dec
inc
jmp
xor
loop
dec
je
cld
pushf
lods
dec
xchg
sahf
fiadd
mov
je
xchg
call
pop
jg
sub
enter
cdq
inc
icebp
add
outs
ja
addr16
outs
xor
scas
sbb
test
rcr
inc
mov
mov
add
or
xchg
inc
push
dec
sbb
dec
(bad)
adc
std
push
rcl
sbb
mov
pusha
inc
sbb
scas
xchg
sub
jmp
ret
(bad)
in
jle
(bad)
fistp
cwde
mov
cmp
iret
lahf
mov
or
mov
and
mov
mov
jae
aas
adc
(bad)
mov
jbe
xchg
xchg
aaa
cmps
inc
inc
int
(bad)
inc
mov
xchg
xor
fnstsw
push
inc
mov
aad
popa
dec
and
and
mov
out
dec
ficomp
and
lds
mov
data16
fisub
hlt
stos
stos
xor
(bad)
sub
inc
movhps
adc
push
sbb
ins
inc
mov
movs
lahf
and
mov
jl
push
outs
pusha
or
mov
inc
into
popa
dec
cmp
mov
jmp
sbb
xchg
loopne
rol
cmc
add
mov
jno
cmc
mov
test
sub
adc
sbb
pop
sti
mov
cs
mov
std
sub
jmp
mov
aas
es
push
inc
lock
push
mov
nop
inc
je
ret
sahf
int3
mov
stos
mov
sbb
or
sbb
jne
iret
xchg
(bad)
mov
jecxz
add
mov
sbb
(bad)
aad
pop
les
dec
fiadd
sbb
scas
xor
mov
push
adc
jl
inc
push
addr16
or
adc
mov
push
loope
jnp
rcr
push
(bad)
iret
and
cld
ds
xor
mov
ins
adc
mov
mov
enter
in
push
cmps
cld
or
lahf
(bad)
(bad)
cmp
jo
push
sub
push
lahf
mov
cli
int
or
sub
adc
movs
adc
or
inc
mov
faddp
popa
arpl
pop
pop
or
rcr
fisttp
ret
pop
inc
mov
dec
neg
rol
es
test
or
rol
repnz
ins
ja
int
nop
and
mov
xchg
stos
push
iret
jge
rol
imul
int3
inc
out
dec
cdq
dec
push
inc
xor
cs
enter
nop
and
inc
fimul
add
sub
(bad)
int3
call
in
xchg
loopne
sub
and
inc
and
mov
fidivr
es
dec
ds
xchg
scas
or
shl
test
fisttp
in
cmp
mov
mov
outs
add
push
fadd
iret
popa
mov
adc
mov
sbb
out
lock
inc
jmp
jns
mul
jle
xlat
xchg
jbe
xchg
adc
mov
rol
add
push
xor
(bad)
sub
not
pop
inc
pop
jbe
fs
jns
loope
shl
nop
pusha
pmulhuw
push
and
and
sbb
das
and
dec
add
mov
das
or
push
cmp
and
mov
(bad)
dec
leave
sub
shl
js
adc
and
mov
and
pushf
inc
sub
cmp
loope
ins
pop
fwait
sbb
aaa
aaa
dec
push
mov
inc
add
hlt
push
mov
xchg
inc
rcl
sahf
data16
pusha
lock
push
mov
gs
and
push
stos
icebp
ret
retf
sub
lock
add
les
shr
(bad)
fisub
inc
fbstp
lea
out
add
mov
cmc
hlt
sub
loope
sbb
gs
mov
mov
shl
retf
rcr
mov
(bad)
jo
arpl
add
xor
inc
(bad)
pop
add
out
dec
jl
imul
jmp
(bad)
jo
iret
gs
ficom
and
xchg
mov
loopne
stos
cwde
rol
jg
pop
pop
sbb
or
cmps
mov
sub
dec
shl
scas
outs
fild
pop
aad
dec
pop
dec
ins
mov
jg
sar
dec
mov
mov
dec
js
jmp
sar
mov
mov
xchg
jmp
lods
retf
push
xchg
scas
jg
jp
dec
loope
mov
retf
(bad)
mov
loope
mov
ins
inc
scas
jge
xor
push
pop
bound
sbb
mov
mov
(bad)
mov
pop
mov
call
sti
mov
mov
mov
add
pushf
hlt
and
stos
loopne
out
push
push
pop
add
stc
arpl
xchg
push
adc
outs
jne
nop
add
movs
jno
mul
sbb
dec
mov
cmp
jne
outs
or
pop
inc
pop
push
pop
adc
ins
cmp
out
lods
(bad)
in
clc
enter
sbb
cwde
dec
stc
lds
jae
fwait
and
push
mov
pop
dec
retf
not
js
pop
cdq
adc
ror
stos
jecxz
or
jne
imul
bound
int
pop
push
push
ret
out
jo
js
push
push
nop
mov
inc
jns
pop
sub
sub
test
(bad)
jae
out
cld
jb
daa
imul
inc
xor
inc
outs
xchg
pop
add
ror
stos
adc
jne
dec
in
popa
mov
jecxz
inc
dec
xor
call
lea
ins
dec
mov
repz
repnz
sbb
xor
inc
and
imul
sahf
mov
jbe
cmp
inc
dec
mov
(bad)
xchg
shl
call
or
aaa
movs
add
xchg
pop
inc
lods
inc
pop
push
imul
push
sub
iret
xchg
jne
cmp
ror
stc
push
ror
jno
jbe
mov
and
test
int
dec
(bad)
fsubp
or
imul
pop
iret
push
js
jg
push
mov
add
repz
icebp
or
or
and
es
mov
out
ja
adc
push
loop
mov
ret
ror
push
add
fisttp
loopne
and
adc
fst
inc
enter
xchg
push
jno
shl
cld
leave
jl
or
retf
sbb
adc
into
adc
jl
cmps
and
arpl
shr
retf
push
xor
pop
or
jo
xor
hlt
pop
add
xor
mov
cdq
push
imul
popf
and
dec
sub
shr
and
test
mov
push
sub
push
fsubr
push
es
fwait
pop
jecxz
adc
lods
mov
jmp
push
test
in
pusha
fimul
or
in
xchg
mov
clc
inc
retf
aaa
enter
push
xchg
mov
dec
mov
xchg
push
inc
mov
xor
sbb
mov
repz
mov
clc
mov
cs
jno
in
je
arpl
mov
call
fld
dec
or
dec
dec
sbb
ds
(bad)
fnstsw
jns
stos
add
xor
cwde
leave
dec
cmps
xor
dec
mov
dec
lock
cmp
lea
xor
dec
xchg
jae
sub
sti
dec
rcr
sub
shl
leave
icebp
pop
push
inc
fs
bound
mov
xor
adc
mov
adc
mov
addr16
das
inc
xchg
xor
call
adc
(bad)
xor
mov
ss
cmp
mov
mov
(bad)
pop
pop
or
dec
loopne
push
popa
mov
mov
sbb
push
(bad)
cmp
add
test
mov
rcr
cmp
shr
pop
inc
mov
in
xchg
jle
ret
inc
mov
scas
sbb
lahf
(bad)
lock
cmp
and
jp
les
imul
fsubp
add
pop
je
inc
stos
lods
not
mov
js
test
or
push
pop
push
in
(bad)
xchg
jge
mov
pop
stos
lahf
xchg
loopne
call
fidiv
scas
mov
pop
adc
xor
mov
sbb
push
cmp
jbe
pop
xor
out
repnz
(bad)
(bad)
stos
add
dec
rcr
pop
xor
dec
addr16
repz
repz
jb
(bad)
arpl
icebp
lods
sahf
mov
sbb
mov
jnp
fimul
lea
shl
mov
fisub
call
adc
push
outs
adc
cwde
pop
movs
mov
xor
mov
inc
loop
(bad)
jecxz
xor
jg
sbb
mov
xchg
imul
sbb
imul
xchg
adc
loop
xor
sti
rcl
pop
ins
and
or
mov
std
mov
aam
lea
jo
cmps
add
inc
fnstenv
into
pop
popa
pop
pusha
(bad)
push
lahf
add
push
mov
pop
jl
es
mov
inc
aad
inc
jnp
sti
mov
out
push
seto
movs
dec
sub
pop
out
lock
popa
int
xor
sbb
and
scas
fs
into
mov
push
out
lock
cmp
out
adc
adc
mov
(bad)
popf
retf
cmp
neg
jnp
outs
(bad)
je
adc
rcl
div
cmp
lahf
in
or
mov
jmp
ins
cmps
inc
inc
or
push
lock
sbb
mov
cmp
push
cmp
rol
mov
mov
enter
push
add
aas
popf
add
push
push
adc
jmp
add
iret
push
mov
or
xchg
push
mov
xlat
xchg
xlat
test
mov
out
jg
mov
(bad)
mov
mov
outs
leave
pop
repnz
inc
jg
fnstcw
pop
mov
mov
mov
fdiv
outs
add
sbb
cdq
jno
mov
jge
inc
mov
push
jnp
add
lock
push
and
push
shl
inc
shl
test
push
xor
addr16
out
sbb
adc
push
mov
int3
stos
cmp
(bad)
pshufw
mov
inc
inc
fst
in
jbe
pop
ficomp
jne
push
pop
pop
push
int
fidiv
popf
cdq
push
(bad)
les
push
sub
ins
js
mov
xchg
lahf
mov
outs
lock
and
jbe
scas
lds
(bad)
(bad)
(bad)
dec
xchg
push
and
inc
jecxz
push
(bad)
adc
mov
inc
jle
(bad)
pop
add
dec
clc
xchg
fs
or
ds
outs
adc
outs
call
mov
enter
fwait
xor
pop
in
into
sbb
ret
pcmpeqb
(bad)
out
add
ja
(bad)
xor
jo
mov
inc
(bad)
fbstp
dec
lds
xor
mov
scas
cmp
hlt
inc
jae
ins
or
or
inc
and
cwde
js
or
mov
sbb
fnstcw
jno
and
dec
loop
cmp
repnz
rol
jecxz
fild
mov
cmp
dec
mov
popf
mov
or
push
mov
ss
xlat
repz
iret
cs
(bad)
cs
cmp
les
int3
push
dec
into
icebp
add
xlat
sahf
push
(bad)
(bad)
sub
sub
add
inc
pop
sub
push
mov
cmp
ret
shl
ss
(bad)
adc
add
adc
je
es
mov
mov
ret
clc
cli
in
mov
lods
or
in
shl
dec
sar
mov
inc
ficom
cwde
mov
and
xchg
xchg
jmp
mov
cmp
fist
cmc
xchg
mov
add
jle
(bad)
hlt
add
lock
(bad)
adc
out
mov
les
stos
sub
mov
stc
pop
inc
das
into
jmp
add
xchg
sub
sub
cmp
push
mov
les
in
xchg
js
(bad)
retf
sbb
sbb
jmp
lea
cmp
xor
ret
dec
jo
ins
push
pop
push
adc
scas
xchg
dec
adc
lds
adc
out
jmp
jecxz
mov
in
xor
mov
jne
lock
cld
sub
cdq
mov
fcomi
xchg
xchg
adc
xor
and
fld
jae
mov
sub
out
fmul
sbb
lahf
mov
or
adc
aas
cmp
scas
fmul
mov
jle
(bad)
xbegin
mov
dec
into
pop
mov
xor
mov
rcl
loope
sbb
inc
sbb
mov
xchg
mov
pop
into
mov
retf
ror
cmp
adc
dec
sub
cdq
cmps
xchg
sub
scas
push
add
les
iret
sbb
cmps
jp
mov
arpl
sti
adc
xchg
shr
(bad)
out
jo
loop
push
cmc
call
adc
and
cmp
hlt
pop
clc
sahf
xchg
test
out
mov
pop
sbb
lea
lock
loope
sbb
xor
pop
sub
push
sahf
popf
out
popf
push
inc
es
scas
(bad)
ror
and
xchg
adc
inc
sub
dec
js
dec
sbb
jbe
and
loopne
mov
adc
mov
dec
adc
fstp
inc
pshufw
outs
nop
mov
nop
outs
jmp
jl
mov
jg
mov
or
(bad)
jp
inc
fisub
lock
cld
lods
cld
icebp
imul
add
jo
pop
ins
arpl
or
xor
push
inc
shr
sbb
push
cmp
cmps
jo
adc
mov
call
sar
mov
xor
push
cmp
data16
std
jecxz
inc
shr
xchg
imul
pushf
mov
fdiv
mov
sub
arpl
daa
mov
sbb
rcr
xor
add
xor
(bad)
push
cmps
outs
push
or
ja
outs
movs
inc
(bad)
(bad)
xchg
pusha
mov
mov
cmp
mov
iret
adc
ret
jmp
cmc
cmp
mov
jge
dec
cld
inc
les
mov
call
inc
ds
lods
xor
pop
adc
(bad)
sbb
shr
dec
jmp
mov
sbb
push
mov
mov
mov
xor
loop
mov
sub
sub
sub
mov
mov
adc
retf
mov
adc
or
sbb
sahf
das
pop
sti
je
adc
mov
cli
cdq
sbb
cmps
mov
push
mov
sbb
inc
data16
in
inc
jno
add
lahf
sub
(bad)
sub
mov
fdivr
and
jae
mov
mov
sbb
xchg
cs
into
adc
sahf
movs
data16
ja
push
xchg
sti
scas
outs
out
mov
mov
aaa
inc
and
cmps
in
jo
push
cmp
xor
in
pop
xchg
jle
stos
fstp
xchg
clc
mov
and
jno
inc
jmp
pushf
jmp
pop
fnstenv
data16
inc
xor
rcr
push
retf
icebp
popf
std
outs
and
adc
fisttp
mov
jns
popa
movs
aam
cli
icebp
mov
int3
add
femms
jno
jo
xor
jno
push
cli
xchg
xlat
dec
out
(bad)
(bad)
pushf
push
push
popa
sub
lahf
aas
add
repz
sahf
fisubr
add
inc
jmp
and
outs
dec
inc
mov
push
bnd
push
cmps
mov
add
fiadd
fstp
(bad)
push
add
xchg
add
jns
out
sub
jle
mov
nop
pop
cmp
jne
push
or
cwde
js
dec
sbb
aam
and
push
fst
sbb
ss
push
jmp
pop
push
rcl
cld
aas
nop
retf
jne
int3
mov
inc
adc
adc
adc
sahf
mov
pop
sbb
add
cwde
jo
(bad)
or
fld
pusha
xor
inc
sub
xchg
add
pop
pop
push
arpl
jge
clc
pop
movs
pop
repz
es
xchg
sbb
sahf
push
lock
push
scas
cmp
ins
fs
es
mov
out
call
cmp
xor
jno
sub
fidiv
lock
cdq
inc
ror
stc
mov
outs
mov
inc
push
mov
xor
out
pop
pop
sub
dec
mov
ror
lahf
jnp
repnz
clc
repz
call
mov
ins
mov
(bad)
movs
in
stos
cmps
sbb
lahf
sar
mov
pop
out
pop
mov
push
shr
imul
fs
mov
dec
push
xor
pop
xchg
mov
mov
dec
dec
test
test
sub
or
fisttp
(bad)
adc
push
add
dec
push
add
xchg
add
iret
xor
dec
sbb
add
xlat
es
jbe
and
jns
inc
data16
sbb
sub
xchg
pusha
int3
(bad)
lahf
xor
jne
mov
das
dec
sub
sub
adc
adc
add
and
sahf
dec
mov
dec
fistp
add
jne
and
jo
or
push
jecxz
mov
mov
push
dec
jmp
push
dec
jecxz
rcr
sub
in
mov
sar
add
mov
not
push
pop
sbb
lods
pop
or
movs
jmp
sar
cwde
xchg
ins
call
iret
sub
and
xor
test
cmp
mov
add
scas
push
sbb
mov
iret
outs
push
xor
or
jbe
mov
aaa
test
push
test
sbb
mov
ja
xchg
or
and
ds
jge
in
mov
out
ins
adc
inc
sbb
sbb
ds
jno
jl
push
(bad)
sbb
xchg
rol
inc
cmp
push
leave
mov
dec
jg
dec
mov
cmps
je
add
inc
aam
jo
ss
sbb
or
cmps
and
jle
aaa
std
xor
clc
mov
cmp
sub
fwait
imul
push
pop
dec
psubsw
lea
shl
fldz
test
icebp
fcomi
out
xchg
mov
dec
mov
fiadd
repz
jne
cmps
(bad)
add
shl
sti
daa
push
out
cmp
js
sub
aaa
push
mov
jmp
and
and
and
mov
jnp
add
sbb
test
xchg
cmp
cwde
fsubr
pop
push
dec
aam
sub
(bad)
inc
or
pushf
inc
fsub
pop
aas
sti
ins
xor
adc
lds
mov
nop
or
mov
sbb
daa
(bad)
clc
clc
(bad)
ins
jno
popa
daa
(bad)
(bad)
jmp
icebp
mov
jge
push
push
sbb
fs
fmul
jo
push
push
cmp
dec
scas
lahf
outs
mov
jo
shl
loop
repz
sub
(bad)
pushf
fiadd
jo
int
sub
jmp
mov
je
and
imul
sti
scas
jle
outs
jmp
sahf
mov
sbb
mov
sub
add
add
mov
mov
in
aad
mov
add
popf
push
pop
and
xchg
mov
and
sbb
dec
scas
icebp
lea
xor
ror
ja
dec
xor
xchg
sub
xchg
enter
jmp
lahf
or
push
and
out
lea
ffree
out
push
cs
repz
jmp
xchg
movs
fwait
adc
outs
stos
push
pop
xor
test
ror
stos
int
movs
cmps
loopne
or
hlt
les
mov
xor
scas
cmp
test
(bad)
lock
mov
outs
cwde
aaa
mov
adc
ins
and
shr
rcl
shl
push
shr
pmaxub
aam
sub
mov
inc
add
retf
fisttp
xor
mov
lahf
in
loopne
mov
loope
and
out
push
add
aam
in
mov
and
nop
mov
and
rcr
sub
lods
cwde
sub
ja
jge
jg
sub
dec
cmps
jle
mov
test
xor
cmp
xchg
mov
sahf
adc
adc
xor
icebp
and
jnp
mov
mov
lock
loop
fwait
jo
cmp
fist
(bad)
mov
pop
daa
mov
push
ds
cmps
out
pop
and
xor
pushf
ror
push
mov
mov
sub
inc
cwde
inc
outs
and
aas
xor
ror
scas
mov
adc
xor
call
adc
cmp
jl
stos
es
mov
outs
bnd
and
cmc
pusha
sbb
hlt
adc
cmps
loopne
jg
inc
inc
fcmove
pop
sbb
mov
test
scas
aam
mov
mov
adc
jecxz
(bad)
inc
pop
pop
test
fdivr
les
(bad)
sub
aas
cmc
push
xchg
fidiv
xchg
repnz
adc
into
inc
add
fimul
dec
in
ds
and
sar
dec
sub
dec
stos
sbb
lock
cmps
lea
stc
push
jne
push
xor
xchg
cs
jp
xchg
lock
repnz
pop
or
push
push
and
add
push
call
aas
jg
scas
js
sar
loop
and
leave
adc
xchg
jle
ror
repz
cmp
out
mov
mov
shr
loopne
popa
jne
sahf
test
pusha
push
push
es
lds
scas
lahf
idiv
test
inc
push
dec
std
mov
mov
cmps
sub
and
sbb
aaa
int
aad
inc
add
xchg
adc
rcl
inc
cld
mov
retf
push
mov
out
ja
sbb
xor
rcl
mov
adc
retf
dec
rcr
sar
imul
sbb
cdq
cli
stos
dec
mov
cmc
inc
and
test
leave
add
push
sub
inc
pop
ss
cdq
jo
sbb
repz
lock
inc
sbb
mov
inc
cs
mov
jl
ds
mov
pusha
lods
test
jno
stc
ret
or
cs
mov
adc
arpl
enter
int3
data16
mov
jg
rcr
sbb
sbb
hlt
enter
out
adc
repnz
mov
or
test
shl
cmp
pop
push
(bad)
xchg
icebp
adc
and
imul
mov
xor
dec
and
in
pop
or
mov
dec
rcl
add
stos
(bad)
rcr
adc
inc
fmul
scas
fild
sahf
push
lahf
lods
pop
scas
nop
shr
xchg
cmp
ss
jnp
xor
jno
push
push
bound
xchg
inc
pop
mov
loopne
dec
fadd
push
sbb
lods
in
and
pushf
mul
fld
pusha
test
xchg
ds
jmp
adc
je
stos
mov
mov
or
mov
and
loopne
inc
jle
jno
int
mov
jmp
push
leave
std
push
mov
test
in
and
xchg
int
dec
push
add
bound
jnp
push
sub
sub
mov
ret
or
or
mov
and
push
adc
jb
pop
jecxz
fcom
sub
ror
dec
or
scas
jne
fnstcw
(bad)
dec
mov
mov
xchg
push
das
add
xchg
repz
xchg
jle
pop
xchg
jle
aam
xchg
adc
mov
imul
or
outs
dec
in
jg
repnz
repnz
jmp
retf
cmps
scas
stos
cmp
dec
inc
mov
out
add
mov
sub
shl
cmps
jge
movs
outs
sbb
mov
push
div
sbb
scas
jbe
ret
cdq
icebp
mov
xor
cmps
push
jge
push
gs
mov
jmp
sub
retf
mov
or
outs
cdq
(bad)
call
pusha
popf
mov
inc
cmps
(bad)
cmp
mov
xor
mov
ret
js
test
inc
sub
mov
inc
lods
cli
inc
inc
retf
mov
aas
dec
into
or
addr16
inc
push
mov
add
mov
pop
inc
pop
jle
pop
pop
sub
mov
das
inc
ss
jb
pusha
and
in
pop
fdivrp
(bad)
in
lock
cmp
add
imul
out
fnsave
dec
retf
leave
pop
loop
aaa
mov
mov
adc
mov
pop
push
jno
mov
call
out
jbe
(bad)
jno
popa
xor
and
push
push
das
pop
or
pusha
xor
jl
sti
adc
adc
adc
pop
inc
dec
pop
pop
lock
retf
xchg
jmp
aam
sbb
sar
jbe
add
ficomp
pop
push
sub
jl
cmp
scas
(bad)
js
mov
in
inc
pop
ss
jae
push
or
mov
push
test
pop
xor
std
jecxz
aaa
mov
sbb
adc
fdiv
popa
push
inc
and
xchg
adc
push
or
cwde
add
fimul
pop
push
test
jne
repnz
mov
pop
ret
pop
shr
xor
jae
xor
shl
imul
in
inc
pop
lea
xor
cdq
sar
movs
sub
xor
rol
add
cmp
popf
mov
mov
mov
cmp
pop
cld
jns
add
xchg
dec
mov
fnstcw
div
lahf
scas
xchg
lea
lea
loop
fldpi
xor
in
aad
jp
popa
cmp
mov
imul
in
sbb
pushf
pusha
icebp
cld
out
and
(bad)
sub
cmps
adc
ror
jle
js
lahf
push
test
mov
test
(bad)
iret
mov
xor
outs
xor
pusha
push
and
pop
mov
mov
fild
add
out
and
inc
daa
push
pop
dec
stc
push
fwait
adc
jb
or
sub
xchg
jmp
and
inc
xor
xor
popf
(bad)
sbb
out
ds
jb
or
loop
pop
cmp
mov
xchg
stos
jge
rcl
test
pop
push
push
or
(bad)
adc
sbb
xchg
shl
and
dec
scas
xchg
fs
push
scas
les
xchg
repnz
in
sbb
and
fldenv
sbb
jle
pop
mov
jno
xchg
stos
lock
push
out
test
call
sub
xchg
cmp
stos
inc
ins
xor
dec
and
lock
shl
ja
inc
cdq
dec
jmp
mov
inc
inc
pop
daa
pop
movs
mov
push
inc
stos
aam
jae
xchg
jno
push
lock
jnp
or
sahf
pop
mov
xchg
pusha
xor
dec
mov
lea
xor
call
shr
dec
mov
push
fs
sar
lea
aam
addr16
sub
adc
cmc
and
and
sbb
into
stos
outs
je
xchg
call
les
lods
retf
in
mov
imul
jg
cmp
push
jns
popa
pop
push
scas
mov
hlt
inc
mov
xor
je
sbb
out
push
pusha
push
adc
das
stos
aas
xchg
cs
js
push
jnp
out
loopne
cmp
fs
stos
fisubr
imul
shl
cs
icebp
nop
mov
mov
ror
rol
push
mov
jle
pop
jae
xchg
dec
xchg
jns
popa
shl
inc
add
loopne
pop
inc
scas
sbb
mov
aas
mov
jl
(bad)
in
iret
jbe
push
sbb
in
push
rol
test
fisub
mov
jle
fmul
mov
cwde
pop
push
adc
test
(bad)
fcmovne
outs
mov
std
repnz
sbb
pop
das
sbb
leave
outs
mov
(bad)
fadd
jecxz
loopne
jmp
mov
loopne
adc
arpl
xlat
int3
ds
dec
xor
or
ss
jno
dec
ficom
and
aas
xor
mov
cdq
inc
mov
sub
xchg
add
pop
aaa
dec
and
mov
bound
pop
fcmovbe
ins
stos
fwait
xchg
(bad)
loopne
cli
mov
dec
rcl
aaa
pop
stc
retf
xor
daa
aad
xor
dec
stc
xor
mov
fiadd
scas
sub
lea
ficomp
jno
pop
test
fwait
cmps
mov
stc
dec
ss
cmp
repnz
xor
push
jno
jle
and
add
xchg
sahf
cld
inc
or
cli
outs
cs
pop
sahf
push
call
lock
cdq
fucomip
sahf
out
ja
stc
sbb
and
xor
add
jge
fadd
fisttp
jp
or
test
sbb
out
cmp
out
pop
int3
dec
sti
outs
mov
push
xlat
lods
inc
jg
dec
and
jg
call
js
push
cmps
add
fsubr
mov
outs
inc
lahf
xchg
and
idiv
in
ficom
add
in
xchg
pop
pop
jno
pusha
xchg
push
dec
adc
shr
inc
shl
mov
fsub
enter
sub
lds
mov
ror
(bad)
mov
icebp
dec
scas
in
mov
mov
rcr
or
inc
inc
cs
jae
stos
pushf
pop
dec
nop
dec
pop
out
ret
sahf
popf
mov
ror
imul
inc
(bad)
mov
mov
lock
fild
cmp
xor
rol
xchg
adc
jno
popa
inc
fdiv
mov
leave
ins
adc
test
mov
xchg
(bad)
adc
jle
mov
mov
jae
cdq
aas
fistp
sub
add
inc
call
daa
imul
mov
xchg
push
fsubrp
or
mov
sbb
popf
or
push
pusha
or
iret
ss
pop
addr16
jl
gs
push
les
stc
mov
daa
push
fisub
jo
popf
or
pop
int
pop
inc
dec
in
outs
adc
jge
pushf
repz
ss
pop
dec
out
xchg
fmulp
cs
mov
push
pop
mov
jge
outs
stc
sbb
mov
xor
shr
loop
hlt
loope
(bad)
js
sar
dec
pshufw
xchg
push
(bad)
arpl
xchg
pop
jmp
push
pop
(bad)
jmp
(bad)
not
mov
mov
ja
ins
test
cmps
(bad)
rcr
push
jb
arpl
xchg
sbb
sbb
enter
mov
mov
xor
jmp
ret
mov
pop
mov
ds
adc
mov
adc
mov
ds
out
out
clc
or
dec
shl
call
sbb
xchg
mov
(bad)
mov
pop
xor
xchg
sbb
(bad)
mov
push
or
cmps
jl
enter
test
loope
stos
ja
xor
jle
arpl
sbb
mov
fadd
inc
neg
mov
ficomp
sub
sbb
mov
bswap
movs
or
arpl
loop
pop
addr16
sub
nop
pop
inc
pop
retf
or
or
fcomi
scas
std
(bad)
stc
lock
repz
not
sbb
sub
sbb
cmps
jmp
sbb
(bad)
sub
and
mov
xchg
or
or
push
sbb
es
arpl
jno
cmp
adc
mov
pop
test
xor
xor
xchg
push
add
mov
mov
rol
jmp
repz
adc
adc
and
les
icebp
scas
dec
call
push
dec
inc
fisub
(bad)
or
xchg
outs
xor
lods
aas
add
nop
repnz
out
dec
cmp
popa
mov
push
mov
scas
test
add
adc
add
out
ds
fnstsw
xor
cmp
pusha
dec
adc
add
mov
pop
and
xor
nop
mov
lods
mov
pop
cli
cs
ins
out
or
(bad)
loopne
ds
xchg
adc
pop
cs
fcom
cmp
jge
scas
out
iret
lods
stos
cmp
bound
mov
stos
or
mov
popa
out
mov
into
add
cmp
dec
pop
mov
movs
rcl
fsubrp
mov
popf
sbb
pusha
lds
xchg
cli
hlt
jnp
inc
movs
or
pop
or
sub
dec
xlat
es
sub
add
cwde
push
pop
jecxz
pop
mov
out
loopne
mov
xor
or
or
sub
lds
push
adc
stos
stos
loop
ficom
sub
inc
leave
and
enter
into
mov
lods
hlt
pop
call
push
mov
icebp
and
in
sub
push
fimul
sub
cs
in
mov
sbb
sahf
ins
scas
sbb
mov
rcl
xlat
sti
cmp
lds
jno
out
xor
scas
pushf
ja
enter
xor
xchg
outs
inc
jmp
popa
pop
xor
push
and
mov
ret
add
pusha
pop
xor
mov
imul
sahf
cmp
and
pop
xor
inc
push
sbb
out
loope
ss
mov
lea
xchg
stos
(bad)
jo
mov
hlt
loop
dec
cmp
(bad)
push
outs
inc
mov
repz
call
push
inc
cs
iret
ins
stos
aaa
push
xor
push
sub
addr16
fst
in
ss
fstp
inc
out
add
sti
cld
inc
imul
in
push
adc
shl
scas
aas
push
inc
js
js
xchg
jecxz
mov
pop
lea
mov
mov
mov
ins
std
xchg
push
xsaves
pop
cmps
inc
push
imul
cmp
int3
sar
pop
cld
shr
pop
jmp
jne
fld
mov
and
hlt
sub
and
out
lahf
inc
add
push
icebp
push
shl
sbb
ins
(bad)
or
xor
jo
cwde
sti
popf
int3
js
popf
mov
pusha
push
mov
cmp
xor
cmp
stc
sti
stos
mov
and
ss
sub
jbe
adc
int3
pusha
jbe
lds
mov
push
shl
imul
adc
(bad)
jmp
cmp
push
cdq
push
mov
mov
mov
mov
in
out
xchg
jb
lea
pop
mov
add
or
and
popf
iret
pop
adc
retf
loop
in
cmp
push
jmp
mov
mov
sbb
in
push
sar
outs
or
inc
add
cmp
js
jno
movs
aaa
jecxz
outs
lods
xchg
and
ret
test
sar
adc
inc
fiadd
fimul
add
xchg
mov
fcmovb
sbb
add
cmp
pop
push
mov
sbb
mov
fsub
pop
mov
jmp
push
arpl
cs
sub
mov
movs
jbe
ficomp
cmp
stos
rol
mov
fstp
xchg
add
add
dec
cmp
mov
jmp
call
mov
mov
xchg
cmp
and
mov
push
out
fstp
psubb
jge
pop
adc
and
test
icebp
sub
fneni(8087
hlt
neg
add
aad
jo
jb
nop
mov
push
fmul
jo
dec
retw
loopne
xlat
nop
out
addr16
cdq
lods
outs
adc
fadd
fstp
mov
jp
nop
int
mov
jbe
or
fdiv
adc
cmps
jl
inc
mov
mov
push
inc
mov
ds
nop
sub
xor
stc
jmp
and
inc
cmps
call
(bad)
data16
dec
cmps
mov
xor
(bad)
fdivrp
inc
outs
jbe
shr
pop
aam
push
dec
nop
add
mov
rcl
push
cmp
inc
cld
jg
pop
mov
sar
dec
xor
mov
out
push
push
lock
add
stos
(bad)
and
imul
lods
mov
sar
push
pop
popa
sub
fnstenv
(bad)
and
mov
inc
mov
int3
cmps
inc
inc
mov
xor
bound
jp
add
add
xchg
adc
sbb
movs
aam
les
ret
mov
push
data16
popa
jns
push
and
arpl
adc
mov
out
(bad)
(bad)
iret
retf
lea
add
cmp
mov
fisttp
jb
cmp
in
push
test
adc
retf
mov
in
or
add
pop
or
add
inc
bound
jmp
lock
mov
xchg
addr16
cmp
jmp
leave
sub
sub
mov
jle
push
pusha
jb
call
xor
add
std
adc
add
pop
jmp
std
jno
mov
rol
ret
cld
in
lods
es
adc
cmp
les
fs
xchg
add
add
and
fwait
sbb
loope
or
dec
fisttp
arpl
and
add
mov
xchg
mov
mov
lock
push
ss
mov
(bad)
pop
jg
shl
sbb
rcr
in
jnp
das
adc
dec
add
lock
fistp
arpl
(bad)
pop
test
test
stos
sar
cld
cmp
add
xor
out
and
rcr
pusha
sahf
dec
rcr
cld
outs
call
jns
dec
shl
loop
adc
popa
jmp
retf
add
sahf
pushf
loopne
ret
xor
test
pop
jbe
cdq
pusha
and
mov
add
mov
ja
pop
mov
adc
lock
shr
pushf
dec
addr16
inc
(bad)
icebp
xchg
movs
and
jle
or
xchg
push
pop
enter
push
adc
fcom
fsubr
jae
call
sbb
js
mov
jae
cwde
pop
mov
adc
xchg
pop
fcomp
fidiv
and
in
pop
inc
fbld
push
add
xor
sbb
les
ror
iret
pop
add
outs
fsubr
xchg
dec
repnz
jo
test
cdq
lods
clc
pusha
mov
lods
sahf
or
loop
mul
xchg
sbb
loope
iret
jle
xchg
mov
cdq
add
fistp
stos
retf
push
jno
sub
and
sub
retf
ret
addr16
xchg
mov
pop
inc
jle
ret
sar
sbb
mov
stc
mov
je
int3
popf
mov
and
shl
pop
push
mov
or
stos
es
or
adc
int
xor
into
push
inc
adc
popf
or
push
or
xchg
sbb
mov
pop
jp
test
(bad)
push
inc
fdivr
mov
(bad)
dec
int
pop
add
cmps
mov
rol
sbb
js
sub
enter
shr
pushf
cdq
mov
xor
in
int3
(bad)
ss
neg
or
mov
stos
pop
push
pop
(bad)
jp
and
pop
lahf
div
mov
iret
sbb
xchg
and
imul
push
cmp
push
jmp
xchg
ret
and
das
test
lock
inc
jbe
adc
pusha
cmp
cmp
xchg
ja
and
jg
xchg
push
xor
mov
aas
dec
cmps
mov
imul
mov
cmp
sub
cld
mov
dec
add
mov
lods
lahf
inc
out
aad
lock
sbb
loopne
in
lods
lock
mov
sub
sbb
sbb
outs
cmc
fst
ds
sahf
mov
out
into
test
adc
jecxz
(bad)
out
jo
aaa
mov
loope
icebp
xchg
ror
adc
sub
bnd
jle
push
ret
push
push
mov
xchg
lahf
xchg
pop
(bad)
adc
rcl
inc
sbb
inc
lahf
mov
cmp
sar
ds
faddp
cmp
jg
pop
mov
call
add
(bad)
fdiv
shl
lock
mov
cmps
adc
lahf
lock
(bad)
push
popf
and
out
push
movs
sbb
xchg
push
adc
mov
adc
sbb
fimul
sar
fidiv
mov
push
daa
loopne
lods
(bad)
fstp
leave
push
and
mov
xchg
call
mov
pop
or
sub
mov
test
mov
pop
cmps
mov
leave
out
dec
hlt
pop
repnz
into
dec
inc
(bad)
outs
sar
adc
popa
les
in
sub
push
push
sbb
mov
inc
dec
bound
inc
(bad)
test
ror
rcr
and
call
fstp
out
test
in
sahf
add
rcr
(bad)
pop
call
addr16
nop
mov
and
mov
out
xchg
sbb
jp
mov
fwait
les
xor
cli
sub
dec
retf
adc
and
mov
(bad)
mov
adc
mov
cmp
test
or
cmp
outs
movs
out
xor
jns
xchg
add
out
mov
and
or
out
cmps
pop
jne
gs
adc
mov
cmp
xchg
mov
sub
into
mov
enter
iret
lea
into
scas
aad
dec
adc
sbb
adc
xor
sahf
arpl
shl
cmp
call
fsub
or
test
push
les
dec
inc
pop
repnz
retf
pop
jb
xor
xchg
and
xor
inc
das
inc
lods
xchg
mov
inc
(bad)
pusha
and
sbb
sub
hlt
fist
stc
adc
(bad)
in
ds
fild
inc
ds
retf
cmps
out
out
mov
jp
in
push
push
mov
jg
enter
dec
out
dec
pop
(bad)
mov
sub
adc
fucomp
or
movs
sahf
xchg
push
iret
in
into
sbb
sbb
sub
rcr
loopne
ror
mov
pop
jnp
fs
loope
inc
(bad)
fimul
test
xchg
and
out
in
push
sub
mov
add
xlat
jl
daa
ret
jg
sbb
outs
pop
cld
(bad)
fcom
enter
adc
or
pop
push
mul
cwde
push
pop
int
jp
sub
lds
sbb
xlat
lock
sbb
add
jne
xor
jns
retf
(bad)
cli
clc
mov
inc
ret
movs
cmp
push
clc
imul
dec
inc
push
retf
fistp
jae
cdq
fadd
xchg
ds
cmp
fsub
outs
sbb
pop
and
jnp
cs
mov
mov
xor
ds
iret
and
clc
xchg
mov
and
scas
xor
or
outs
out
inc
mov
enter
jbe
xor
int
ins
repz
out
inc
xchg
fmul
jp
arpl
xchg
cmps
mov
jne
fmul
enter
or
shl
inc
push
not
scas
movs
stos
out
ins
cmp
loop
mov
mov
xchg
inc
adc
ret
iret
sbb
jg
mov
fistp
inc
dec
xor
xor
cmp
dec
sti
shl
inc
ss
pushf
data16
mov
xor
xchg
or
sbb
add
mov
and
mov
inc
push
shl
int3
ret
outs
push
js
(bad)
jns
fsub
cmp
pop
adc
cmp
pop
dec
(bad)
lahf
inc
sbb
je
into
dec
je
outs
addr16
pusha
sahf
push
imul
cmc
adc
fs
pop
icebp
push
imul
nop
mov
push
and
add
xchg
cmc
mov
fmul
xchg
gs
pop
loopne
push
or
ja
pop
push
pop
imul
(bad)
mov
cmp
stc
in
sub
mov
(bad)
loop
or
fisub
rol
repnz
mov
mul
scas
int3
(bad)
mov
mov
push
jne
adc
and
aad
sar
mov
add
push
inc
adc
push
pusha
imul
aam
in
into
and
ret
jmp
xchg
cmp
xor
dec
sub
outs
adc
xchg
repz
push
mov
(bad)
in
repnz
outs
mov
arpl
adc
lock
lods
jno
mov
pusha
push
dec
in
jae
ds
lods
or
test
and
test
push
ficom
add
mov
and
shr
cmp
add
pop
pop
pop
jecxz
lods
aam
mov
add
sar
mov
outs
pop
or
cmps
push
jge
pop
push
dec
mov
or
test
cmps
fwait
ins
rcr
ds
jle
and
jge
icebp
repz
xchg
xor
retf
aam
bnd
pop
cli
ins
adc
jg
jae
push
sbb
jl
rcr
loopne
sub
sbb
pusha
dec
pop
js
dec
dec
inc
mov
add
lods
fisttp
cmp
scas
push
ins
leave
out
es
(bad)
xor
or
lods
mov
js
int3
in
cmps
stos
addr16
ss
add
pusha
xchg
inc
inc
mov
jbe
and
scas
sub
repz
neg
mov
xor
push
pinsrw
pop
aaa
dec
std
ss
les
sub
jbe
jecxz
(bad)
xchg
sbb
mov
cmp
loopne
nop
sub
hlt
lds
push
ins
pop
or
repz
xchg
mov
into
daa
out
push
xor
es
out
outs
repnz
fidiv
xchg
jmp
mov
mov
test
and
dec
stos
inc
xchg
jle
ds
and
push
shl
add
mov
cmps
push
dec
xor
jns
bound
ds
cmp
clc
pop
xor
pop
add
xor
loope
das
adc
loope
popa
hlt
movs
xor
mov
scas
jnp
sbb
inc
aas
add
stos
(bad)
push
not
mov
fadd
mov
loopne
push
repnz
loop
stos
mov
or
test
jmp
mov
retf
add
xor
pop
jp
pop
mov
mov
jo
sti
(bad)
xchg
scas
pop
mov
(bad)
cmps
cld
(bad)
test
mov
or
daa
stos
movs
xor
and
hlt
push
pop
and
sbb
ror
mov
add
inc
call
je
cmp
jbe
lock
in
pushw
cmp
in
dec
icebp
dec
gs
xor
ja
fs
div
xchg
push
push
(bad)
mov
pop
mov
out
adc
retf
inc
inc
fmul
cmps
lods
inc
mov
inc
push
pop
aad
push
hlt
push
mov
stos
jbe
xor
fcomp
popf
dec
call
fistp
leave
(bad)
mov
adc
test
ja
cmps
push
adc
mov
loop
int
ret
je
out
and
popf
sti
add
in
pop
mov
retf
cdq
mov
push
push
cli
enter
or
rcr
call
dec
cmp
xor
lahf
lahf
dec
dec
out
loopne
sar
pop
or
push
(bad)
(bad)
adc
ds
mov
std
xchg
push
addr16
scas
jmp
cmp
dec
int3
rcr
inc
sbb
jbe
dec
mov
fistp
inc
push
mov
mov
xchg
fsubr
call
imul
repnz
sbb
test
std
enter
sub
out
inc
xlat
outs
aam
sub
out
pusha
cwde
and
in
sbb
xor
es
add
(bad)
gs
pop
das
or
fcom
jb
out
clc
pop
retf
scas
jecxz
pop
lahf
jo
es
fmul
retf
mov
jp
mov
dec
jo
inc
in
mov
push
jecxz
xchg
aaa
(bad)
cmps
fadd
pusha
lahf
mov
jo
scas
into
pusha
pop
cmp
nop
sub
or
cld
in
add
adc
bound
pusha
jb
call
mov
push
jle
int3
jle
mov
adc
adc
push
and
js
xchg
cs
inc
and
mov
gs
das
adc
push
fs
shl
sti
outs
jb
les
dec
mov
dec
repnz
or
add
in
sub
hlt
std
xor
popa
mov
fstp
push
add
dec
push
scas
xchg
adc
fdiv
movs
and
lock
fmul
test
push
mov
in
sub
mov
jl
mov
mov
pop
mov
xor
inc
inc
imul
hlt
xor
popa
imul
xchg
dec
cmp
imul
mov
retf
sub
inc
xor
sbb
mov
mov
xchg
mov
loopne
jo
jle
and
and
xor
aam
pop
sub
xchg
fisubr
mov
jo
fcomp
jne
ror
and
mov
(bad)
jle
pop
imul
std
mov
xchg
push
(bad)
dec
fsubp
imul
dec
push
jae
inc
xor
jecxz
cdq
lahf
dec
and
into
iret
xor
adc
in
pushf
ret
fiadd
fistp
aam
je
sub
out
das
ror
xor
retf
aam
or
jg
inc
in
mov
bnd
cmps
sbb
addr16
ja
and
pushf
out
xchg
mul
push
scas
mov
jg
fstp
add
add
mov
call
pop
xchg
in
mov
imul
(bad)
fiadd
imul
mov
aas
ror
push
xor
inc
es
inc
repz
mov
mov
outs
add
adc
dec
sub
cmp
push
adc
(bad)
push
xchg
rcl
cmps
or
push
mov
imul
adc
popa
lock
outs
push
mov
mov
fsubr
pop
xchg
dec
mov
stos
fisttp
(bad)
js
jno
xor
add
pop
shl
jecxz
push
add
ds
xor
iret
sub
in
aaa
fs
loopne
pop
ror
push
and
repz
outs
stos
pop
mov
rcl
dec
popa
jnp
xchg
mov
sti
mov
pop
nop
in
jo
push
push
in
xlat
mov
dec
iret
or
inc
ds
lds
sbb
push
sbb
xchg
cli
loope
jbe
stos
test
dec
jp
repz
adc
inc
enter
in
add
jecxz
in
pusha
dec
shr
popa
sub
jmp
inc
jecxz
iret
or
jo
in
or
pop
out
addps
xor
jo
outs
fisttp
mov
test
xchg
nop
push
cs
xchg
js
mov
loop
jne
mov
jns
(bad)
add
cmp
popf
xor
fmulp
push
cmps
les
mov
ins
push
and
mov
jecxz
lods
mov
xor
shl
aad
sub
inc
fstp
pop
jne
push
mov
out
jge
inc
int
mov
jle
jecxz
xchg
add
outs
cs
mov
js
dec
popa
jb
in
lahf
mov
ds
fidiv
adc
fs
jo
push
(bad)
into
add
sub
cwde
(bad)
std
jne
and
imul
icebp
fidiv
mov
int3
xor
pushf
retf
test
mov
xor
pop
rol
scas
adc
js
or
psubusb
icebp
jo
pusha
enter
adc
test
mov
mov
sbb
jge
ror
jmp
fst
and
mov
pop
mov
js
cdq
ja
or
int3
(bad)
in
cli
lds
pop
aam
test
out
pop
push
(bad)
push
and
jo
sbb
jo
lock
push
xor
rcr
in
call
jl
mov
bound
std
xlat
test
sub
dec
xlat
in
loop
push
push
scas
mov
sbb
mov
jo
dec
fcom
pop
cwde
push
or
jo
fdiv
pop
iret
jo
popa
adc
pop
jp
loop
ret
addr16
push
test
outs
scas
inc
in
rol
sub
xchg
inc
pop
aam
and
rol
fbstp
not
xchg
inc
adc
xchg
scas
mov
xchg
aam
loop
push
jmp
mul
jb
jo
jp
cmp
mov
cwde
push
jecxz
hlt
scas
adc
and
xor
inc
ret
rcr
jo
push
push
add
dec
mov
jmp
xchg
arpl
add
pop
inc
push
push
jmp
sbb
cli
arpl
pop
adc
or
test
pop
xchg
shr
mov
stos
les
pop
mov
cmp
xor
ja
fdivrp
inc
out
test
jbe
xlat
je
add
icebp
push
push
mov
push
adc
xchg
pop
mov
or
xor
scas
adc
(bad)
iret
fmul
sbb
or
xor
int3
pop
inc
pop
jne
xor
ss
sbb
xor
rcr
iret
mov
xor
jae
or
mov
adc
lods
into
scas
jge
pop
adc
push
(bad)
mov
xchg
dec
dec
jle
imul
push
ret
xor
sbb
pusha
inc
je
add
jmp
cmp
bound
jne
xlat
mov
aam
adc
mov
pusha
pusha
loopne
arpl
mov
ror
out
and
ja
pop
jbe
xchg
mov
aad
fst
imul
push
jecxz
xor
push
xor
dec
jge
push
into
and
and
jle
sub
rol
add
adc
cmp
push
and
mov
sub
dec
jl
imul
std
outs
mov
xor
loope
xor
jmp
fld
fstp
ret
mov
stc
mov
or
rcl
xchg
mov
adc
jmp
or
in
xchg
xchg
ret
lahf
(bad)
jmp
enter
or
add
cmp
jbe
bound
jo
mov
retf
dec
loop
enter
and
aaa
in
push
js
imul
(bad)
lock
xchg
mov
call
(bad)
mov
mov
mov
mov
aas
ret
iret
mov
int3
call
push
nop
ds
mov
push
(bad)
es
inc
out
push
clc
and
sub
mov
cmp
jmp
pop
sub
mov
loopne
push
mov
push
bound
mov
jne
fdivr
repz
sub
daa
sti
aam
clc
pop
sar
imul
cwde
inc
out
pop
out
fld
icebp
xor
mov
mov
push
add
adc
in
out
icebp
cmps
or
pop
and
dec
(bad)
gs
in
xor
dec
jo
jo
jbe
retf
retf
loope
add
add
add
mov
jne
push
sbb
ficom
fs
sbb
push
aas
cmc
xchg
xor
pop
and
loopne
pop
in
imul
xchg
loop
mov
fmul
repz
xor
dec
not
dec
clc
pop
das
test
test
xlat
call
jg
and
mov
ds
daa
hlt
or
lahf
(bad)
xor
mov
outs
mov
xor
mov
arpl
pop
lock
cli
arpl
xor
lea
cs
pop
out
fwait
pop
inc
stc
mov
inc
mov
push
lahf
jmp
push
push
lods
test
mov
in
push
mov
push
mov
(bad)
xor
pushf
ins
jno
iret
jne
stos
jns
cmps
ins
sahf
nop
push
mov
mov
sbb
mov
pop
test
cs
aad
or
dec
add
mov
iret
sbb
jl
mov
pop
add
in
mov
nop
dec
fbstp
imul
pop
ret
cmp
mov
xchg
xor
fnstenv
cmps
mov
in
jmp
add
je
push
pop
jb
or
dec
mov
jg
mov
pop
in
push
fbld
test
cmp
retf
lds
xor
icebp
jns
dec
xchg
imul
test
push
pop
into
jo
lea
xor
int
push
push
call
xchg
jnp
mov
inc
(bad)
mov
pop
scas
(bad)
cld
ror
sbb
sar
stc
cdq
mov
stos
dec
or
rcr
xor
mov
(bad)
out
push
clc
int
pop
or
jmp
test
push
xchg
inc
bound
dec
mov
or
iret
outs
hlt
xor
int3
fs
outs
push
xor
or
das
sub
cmp
ins
(bad)
test
jge
jo
mov
xchg
(bad)
mov
sub
out
mov
xor
cmc
ja
xchg
icebp
adc
addr16
pop
sub
loopne
pop
rol
lods
loopne
or
and
gs
aas
out
out
lahf
xor
movs
mov
and
iret
jae
jmp
mov
push
and
inc
jl
xchg
loopne
(bad)
mov
outs
mov
loopne
test
test
and
push
or
mov
adc
outs
repnz
mov
xor
ins
push
xchg
(bad)
cmp
xchg
arpl
out
mov
push
cld
les
ss
pop
cmp
push
daa
mov
add
(bad)
div
shl
cld
enter
or
fdivp
popa
fsubr
lods
into
sbb
push
pop
mov
xlat
test
out
jne
jnp
inc
dec
out
mov
lds
stc
das
test
cmp
push
jmp
xchg
pop
sbb
sbb
mov
repnz
jg
pop
je
dec
fsubr
dec
sbb
cmps
(bad)
mov
mov
leave
in
fcomp
mov
push
sbb
xor
push
jnp
lods
fwait
stos
scas
adc
repz
fistp
fs
and
xor
jmp
xchg
stos
sub
sahf
mov
aad
(bad)
(bad)
lods
xor
push
call
int
pop
shr
jle
mov
mov
mov
fnstcw
inc
(bad)
iret
sar
pusha
ins
out
imul
jp
es
aad
sub
pop
inc
xlat
in
sbb
loopne
and
pop
jmp
(bad)
sbb
imul
jp
test
adc
add
inc
popa
adc
ja
mov
jnp
pop
add
stos
mov
cwde
popa
clc
pop
aas
add
inc
jg
sbb
dec
cmps
out
call
in
mov
mov
mov
inc
(bad)
(bad)
call
ret
div
pop
xchg
fwait
inc
lea
jae
inc
pop
sbb
in
mov
cmp
pop
sbb
sbb
jp
dec
adc
sar
cmp
out
inc
jecxz
xchg
in
out
(bad)
ror
bnd
push
popf
das
mov
test
lea
shl
sub
daa
mov
ins
scas
or
dec
sbb
ins
sub
aaa
ret
in
xchg
jo
jp
pop
adc
adc
cmps
shr
push
inc
mov
popf
add
repnz
cli
sbb
add
icebp
mov
in
jg
fistp
repnz
xchg
in
push
add
cwde
or
outs
js
ja
mov
dec
pop
mov
dec
lea
scas
and
fsub
jle
call
xor
cld
and
jns
and
das
aad
jb
push
pop
inc
inc
ins
jnp
enter
sbb
jbe
dec
outs
mov
movs
xor
add
mov
loopne
pop
test
or
outs
cld
jne
imul
mov
shl
imul
aaa
fdiv
aaa
xchg
mov
or
and
test
or
jecxz
ret
rcl
push
sar
adc
mov
leave
pop
inc
or
(bad)
jmp
dec
out
icebp
cdq
pop
pop
mov
mul
sbb
data16
push
test
push
pusha
mov
movs
mov
ja
inc
mov
cli
inc
ins
scas
adc
jle
lahf
push
loopne
jge
jno
iret
pushf
sbb
mov
test
fadd
call
retf
cwde
not
sub
loop
sbb
inc
cdq
xor
in
test
xchg
lods
mov
sbb
mov
rcr
dec
outs
and
add
aaa
mov
fsubr
in
and
shl
sbb
call
into
xchg
je
shl
mov
cwde
jmp
enter
jge
push
cwde
sbb
inc
retf
pop
ffreep
cs
sub
cmp
jge
sti
push
in
mov
rol
cmps
xchg
jl
data16
fs
mov
jmp
(bad)
cld
pop
push
call
es
xor
fs
and
and
jp
sub
faddp
loop
repnz
xlat
push
or
xor
inc
xchg
add
scas
nop
cli
in
mov
nop
outs
rcl
sub
mov
(bad)
push
lahf
and
add
leave
xor
dec
dec
mov
push
sbb
push
in
sbb
adc
and
mov
pusha
adc
mov
ror
mov
call
sub
inc
mov
inc
sahf
and
fisub
adc
add
cmc
push
and
pushf
push
test
ins
dec
mov
test
mov
mov
xor
and
fild
lds
adc
jmp
push
push
mov
jo
pusha
ficom
mov
scas
cld
xor
pop
lock
jle
dec
and
nop
add
mov
xchg
dec
scas
xor
jp
xor
adc
jecxz
xor
imul
cmp
(bad)
sub
add
inc
iret
mov
imul
mov
and
addr16
aas
sbb
lahf
adc
xor
sbb
loope
mov
jo
xchg
leave
sub
push
idiv
ss
jle
ds
fsub
xor
mov
inc
inc
(bad)
loopne
adc
arpl
mov
inc
mov
rol
ins
shl
fdiv
and
pop
and
mov
adc
in
int
inc
ffreep
jmp
mov
push
pop
cmp
es
dec
push
and
xor
sar
and
add
sub
xor
sbb
cmc
fidiv
and
addr16
aam
xor
mov
je
sbb
pop
pop
push
inc
pop
loopne
mov
sub
into
ror
mov
xchg
pusha
pop
xchg
cmp
adc
dec
or
sahf
jne
(bad)
outs
lods
push
lods
push
xlat
sbb
push
mov
add
sub
mov
mov
movs
sbb
push
adc
shr
jmp
push
dec
jge
push
pop
gs
nop
enter
sbb
aad
aaa
mov
and
sub
popa
sbb
jp
pop
mov
cld
in
dec
inc
fwait
add
fiadd
rcr
data16
sub
aad
stc
ss
push
lahf
mov
fsub
cmp
and
xor
xor
ret
pop
pusha
dec
lock
leave
pop
mov
movs
movs
imul
dec
sub
lock
jb
xor
or
out
clc
add
mov
lock
in
inc
or
in
push
adc
xchg
sahf
and
xchg
shr
ds
fdivrp
sbb
lea
jnp
and
out
mov
mov
or
inc
mov
inc
icebp
scas
sub
cmp
cmp
sub
push
mov
or
cld
call
jmp
inc
and
jno
nop
icebp
imul
mov
ins
retf
movs
sahf
loopne
mov
(bad)
ror
dec
dec
xor
mov
out
adc
xchg
aam
mov
into
shl
(bad)
lods
sti
(bad)
pop
pop
sub
cmp
inc
stos
jp
xor
aad
inc
fcmovb
sbb
push
adc
xor
sbb
jbe
cs
jae
das
ja
adc
adc
stos
xchg
ffree
fild
xor
xor
mov
push
out
leave
out
mov
push
fidiv
push
ja
cs
jae
push
cmps
jo
jle
add
cmp
jo
jno
shl
enter
hlt
pop
in
into
mov
add
fnsave
mov
das
scas
mov
mov
in
shl
mov
pop
xchg
dec
sar
loopne
pop
jbe
imul
outs
add
add
jo
cdq
push
mov
lods
pusha
and
fsubr
xchg
test
sub
mov
movs
mov
push
shl
shl
pusha
icebp
in
call
cmc
dec
jbe
retf
iret
out
retf
inc
lahf
or
sub
dec
scas
dec
mov
mov
and
and
sbb
in
pusha
fcmove
pavgb
ds
sbb
pop
ficomp
sbb
xchg
ins
sahf
xchg
mov
out
aas
sbb
rcr
daa
xor
dec
inc
xchg
loopne
mov
cmpxchg
jb
push
add
cld
pop
and
in
sbb
sub
outs
dec
outs
inc
mov
aas
mov
xor
or
jbe
ss
sub
ins
mov
xchg
cmp
out
cmps
arpl
es
inc
dec
sbb
inc
test
in
jp
jo
rcr
rol
pop
out
and
inc
and
add
or
popa
xchg
jbe
mov
iret
pop
sub
(bad)
in
push
cmp
push
pop
pop
retf
dec
dec
nop
jmp
xchg
jo
push
out
mov
loopne
cdq
cs
mov
and
dec
scas
stc
test
push
(bad)
mov
xor
scas
out
test
ds
stos
rol
xor
(bad)
nop
push
xor
icebp
or
dec
shr
push
dec
ds
sti
jl
xchg
mov
mov
shl
cs
sbb
jle
das
push
ror
and
pop
and
lock
mov
sbb
xchg
movs
cli
cdq
and
and
sub
adc
daa
sbb
stc
add
sbb
dec
daa
fadd
sbb
fwait
lock
push
lahf
push
or
add
int
ficomp
sub
in
cmps
(bad)
xor
in
push
sahf
add
push
pop
aam
adc
sahf
nop
sub
sahf
cmps
into
enter
mov
loopne
lock
call
push
push
push
or
cmp
movs
mov
int3
adc
movs
pushf
adc
sub
add
sbb
push
pop
mov
scas
ds
add
push
in
ret
pop
sub
and
pop
pop
dec
pop
dec
pop
mov
rol
mov
lea
adc
push
add
and
jae
das
adc
fild
test
jo
pusha
mov
int3
retf
cmp
adc
sub
fwait
inc
xchg
dec
xchg
ror
jle
dec
into
xor
mov
adc
ror
adc
lahf
pushf
scas
lods
jl
or
ficom
adc
xlat
add
inc
aas
cmp
xchg
mov
and
sahf
mov
mov
mov
daa
in
xor
rcr
imul
fwait
lahf
mov
xchg
push
add
xchg
ret
mov
call
iret
add
and
movs
inc
pop
(bad)
mov
or
rcr
cld
hlt
in
jg
paddusw
outs
and
repnz
dec
pop
push
mov
loopne
jge
icebp
mov
add
jle
outs
jecxz
(bad)
cmp
pop
nop
mov
dec
or
shr
test
and
dec
push
adc
dec
jns
jmp
loopne
and
(bad)
loope
popf
retf
int
fst
and
out
(bad)
icebp
dec
push
add
aas
add
jnp
outs
lods
sbb
pop
loopne
mov
jns
mov
jb
pop
inc
sti
les
add
cmp
xor
push
and
xor
fs
retf
pop
ss
mov
lahf
out
aad
sub
setae
inc
stc
fldenv
iret
inc
clc
es
lods
pop
jge
repz
mov
mov
mov
xor
sar
ds
ins
xchg
movs
cs
int
mov
loopne
jne
adc
ins
int3
lea
inc
mov
dec
sbb
neg
scas
out
in
lock
dec
in
std
sub
jl
sbb
fwait
ja
pop
xor
dec
inc
jno
ficomp
(bad)
and
jp
and
mov
sbb
loope
dec
ja
mov
rcl
jecxz
(bad)
jmp
mov
jmp
xchg
into
and
fidivr
mov
shl
shr
dec
les
pop
sahf
clc
inc
add
inc
mov
xchg
scas
ret
cmp
shl
fadd
js
inc
pop
push
xchg
jle
xchg
mov
push
out
outs
(bad)
out
fidiv
or
push
call
or
and
pop
jb
imul
push
jae
ret
mov
or
adc
xchg
dec
inc
mov
mov
pop
mov
mov
ret
dec
adc
push
xlat
lock
sbb
add
sbb
sbb
adc
lods
repnz
(bad)
cmp
mov
nop
hlt
je
mov
cmps
ss
jbe
loopne
pop
cmp
jno
mov
pop
mul
jae
inc
pop
sbb
xchg
adc
popa
int
mul
xchg
mov
xor
addr16
pop
cmp
and
add
cmp
mov
or
xor
mov
dec
inc
call
pop
dec
icebp
jle
add
or
stos
cmps
mov
dec
mov
inc
iret
mov
adc
adc
ja
(bad)
jbe
iret
sbb
lahf
add
nop
addr16
adc
mov
rol
cmp
mov
fsubr
aam
es
sbb
add
adc
pop
push
(bad)
shr
jecxz
xchg
lea
test
xchg
sbb
push
cmc
shl
mov
push
scas
dec
repnz
pop
mov
(bad)
rol
and
cmps
mov
xchg
dec
lods
dec
inc
test
cmp
cld
adc
jp
mov
xor
dec
xor
mov
dec
mov
dec
rol
aas
pop
sub
stos
aad
adc
repz
jo
add
ret
xchg
xor
idiv
mov
cmps
sub
jl
sbb
repnz
push
fs
mov
mov
fild
pop
inc
into
lahf
call
xor
inc
and
jle
jno
sbb
jmp
mov
mov
jecxz
xchg
or
pop
and
jno
mov
(bad)
mov
mov
sub
lods
cmp
inc
loopne
ds
outs
pushf
(bad)
cmps
adc
jmp
fistp
jbe
icebp
jg
(bad)
lock
shr
out
imul
outs
movs
gs
sub
and
fsub
(bad)
jmp
mov
inc
sbb
fistp
push
rcr
mov
shl
(bad)
shl
inc
and
test
push
rcr
and
mov
jecxz
cmps
sbb
outs
icebp
test
das
ins
adc
sar
and
dec
jg
int3
repz
sub
(bad)
movs
in
inc
jmp
jns
js
mov
(bad)
mov
retf
inc
out
dec
lods
bound
xor
adc
loop
cs
sub
adc
dec
test
mov
jge
rcl
mov
add
adc
outs
enter
add
dec
ret
test
ds
ret
dec
mov
sub
inc
sar
ss
jmp
xor
xor
sub
mov
mul
xor
jg
jb
push
xor
xor
cmp
test
clc
add
jge
shl
scas
out
jno
lock
adc
sar
(bad)
mov
mov
and
pop
outs
xor
xchg
jae
jnp
or
into
mov
rol
sar
or
cmp
sbb
xor
sbb
std
cmovbe
(bad)
mov
hlt
aam
adc
adc
nop
out
add
or
inc
push
jb
pop
sub
mov
data16
xor
and
cmc
dec
(bad)
gs
xor
and
outs
xchg
call
push
mov
sub
sub
aam
sbb
repnz
pop
iret
cmp
cmc
adc
es
sbb
push
pop
inc
addr16
iret
mov
jl
push
loopne
and
in
or
sbb
sbb
stos
add
push
cs
xlat
push
ror
sbb
int3
mov
xlat
push
push
adc
jle
sti
and
jbe
push
pusha
ja
fs
nop
fist
ins
inc
mov
out
inc
sub
mov
es
pop
dec
add
scas
xor
pop
sahf
add
and
loope
idiv
das
pop
cmp
inc
iret
sar
dec
mov
stos
mov
fistp
add
adc
add
inc
mov
push
dec
inc
push
pop
mov
scas
rcr
aas
xor
mov
lods
adc
outs
xor
sbb
cdq
data16
addr16
icebp
into
iret
mov
xor
and
cmp
dec
pop
add
cdq
cmp
lea
fldcw
mov
sbb
call
pop
adc
in
add
dec
and
mov
rcr
ret
xchg
jno
pusha
xchg
adc
push
in
jno
retf
loope
sbb
xchg
push
stc
sub
scas
cmps
shl
std
push
mov
mov
lock
pusha
or
lds
in
ficomp
popf
and
inc
jno
cmp
mov
jl
sbb
mov
js
dec
cmp
lock
pop
enter
and
or
lea
inc
push
imul
loope
shr
dec
push
xor
push
out
mov
jle
ret
lea
aam
imul
arpl
aam
jmp
dec
cmc
xchg
ins
je
jle
out
scas
inc
cmp
mov
and
iret
push
jo
sahf
call
mov
push
in
movs
outs
adc
add
rcl
shl
xor
push
dec
dec
add
lock
and
or
ja
test
cmp
mov
and
xchg
jmp
xor
push
scas
jo
push
jle
or
dec
daa
les
aas
repnz
loopne
pop
jmp
shl
adc
or
fmul
mov
jb
pop
jo
test
push
and
and
loop
out
lock
int
xchg
mov
movs
push
push
mov
inc
rcr
ror
sbb
add
xchg
inc
mov
jae
pusha
(bad)
leave
cwde
adc
or
add
mov
mov
popa
sub
mov
push
mov
imul
inc
clc
mov
adc
cs
pop
xor
mov
shr
xlat
shl
push
ja
add
cmp
lar
mov
mov
or
pop
mov
icebp
pop
(bad)
shr
push
neg
scas
cmp
or
outs
(bad)
arpl
fiadd
das
fnsave
ror
(bad)
out
shr
push
pop
in
outs
jg
ds
jns
mov
mov
iret
arpl
stos
add
jecxz
leave
cmp
sar
jg
mov
ja
cmp
lahf
xor
and
mov
mov
dec
(bad)
adc
ss
adc
mov
jo
mov
mov
mov
shl
sub
arpl
adc
cs
jge
inc
sar
lea
lock
(bad)
cmp
add
pop
push
and
jo
cmc
pusha
out
push
(bad)
and
je
mov
mov
mov
mov
jmp
push
rcr
and
mov
arpl
mov
fcmovnbe
jmp
aas
sbb
jl
ins
arpl
mov
jns
nop
ret
inc
mov
push
sub
jno
sub
mov
sub
mov
cmc
clc
cmp
and
dec
cmp
cld
inc
adc
add
mov
test
or
ds
pop
and
ret
shl
ja
mov
stos
ss
lods
js
shl
popa
rcl
or
add
outs
lock
clc
mov
sti
mov
push
xchg
dec
fidiv
xchg
or
adc
out
shr
(bad)
in
xchg
mov
mov
xchg
add
jle
push
mov
jle
out
cld
adc
pusha
push
or
std
jle
fdiv
dec
bound
test
scas
mov
lods
int
faddp
jle
(bad)
adc
xor
and
test
sbb
mov
adc
inc
pop
add
cmp
cli
xor
loope
aam
add
add
arpl
lahf
loopne
xchg
ins
popa
js
adc
(bad)
loope
dec
ror
or
call
and
xchg
out
cmp
lahf
out
mov
add
jno
sbb
fiadd
in
mov
outs
mov
or
mov
sub
test
jno
popf
lahf
imul
jo
mov
test
push
(bad)
fsubr
xor
dec
ins
cli
sbb
ins
inc
ds
pop
pop
or
dec
jo
mov
adc
int
push
pop
and
shr
inc
outs
dec
mov
cmps
jo
push
iret
rol
into
xor
stc
movntq
nop
inc
mov
push
push
xchg
fidivr
(bad)
fdivr
les
fsubp
call
dec
jl
outs
mov
pop
and
mov
push
push
mov
ror
jo
jne
add
outs
cld
lea
mov
pop
ja
arpl
pop
sub
inc
lds
xor
mov
cli
fnsave
mov
(bad)
(bad)
mov
lea
xor
inc
scas
push
jb
and
mov
gs
(bad)
fcmovnu
jmp
(bad)
and
sbb
xor
jmp
test
mov
imul
mov
jecxz
sbb
dec
mov
dec
xor
scas
outs
stos
outs
add
xor
in
fadd
sar
(bad)
loopne
jo
test
jne
nop
stos
cld
repz
int
and
pusha
inc
(bad)
cmp
cmp
out
test
and
pusha
push
les
adc
ret
popf
test
xor
(bad)
jmp
and
dec
xchg
xchg
mov
fnstsw
inc
fcomp
sbb
lock
shl
in
out
lock
fldcw
pop
es
sbb
dec
arpl
inc
pop
jno
sub
loop
faddp
adc
sub
xchg
push
push
pop
xchg
or
cmps
popa
pop
xchg
(bad)
loopne
mov
in
fcmovnbe
xor
adc
add
popa
rcr
xchg
arpl
loope
fld
lods
mov
str
fdivr
popf
cs
push
rol
push
inc
inc
jg
mov
xor
int3
into
into
push
adc
cld
mov
loope
cmp
xchg
iret
jns
dec
lahf
lahf
mov
adc
shr
adc
sbb
sti
std
and
add
sbb
loopne
div
in
jl
out
aad
(bad)
gs
or
mov
jge
and
jg
mov
in
test
pop
(bad)
aas
sti
sub
dec
sbb
fcomp
sub
bound
and
loopne
adc
adc
test
push
sar
scas
jmp
stos
push
mul
ret
add
repnz
push
dec
adc
repz
(bad)
pop
lahf
lahf
pop
outs
xchg
mov
sbb
clc
cld
cdq
ror
jl
and
cmp
mov
popf
das
pushf
cmp
inc
shl
pushf
mov
arpl
push
ret
push
xchg
jns
sti
mov
popf
xor
or
jo
cmp
ret
sbb
retf
dec
std
sar
ret
xor
sbb
(bad)
inc
add
dec
rcl
lahf
jne
loope
or
rol
push
sbb
bound
inc
bound
fistp
sti
jo
jge
mov
inc
lahf
jo
jecxz
push
icebp
aam
jmp
jl
pop
sbb
mov
jmp
lds
aaa
push
jmp
je
fcmovu
cmps
and
jle
and
jo
pop
out
int3
fist
lods
int
rcl
and
mov
imul
cli
mov
fstp
stos
fwait
out
ret
fisttp
pop
mov
stos
sbb
clc
(bad)
fisttp
fcom
push
test
mov
jmp
and
rcr
push
and
mov
lods
(bad)
pushf
stos
jmp
fisttp
cmp
(bad)
shl
outs
sub
cmp
das
adc
dec
scas
or
(bad)
daa
ins
loop
int3
push
and
in
sub
lock
retf
ins
xchg
pop
and
aad
sbb
sbb
fst
sti
jge
xor
jle
outs
pop
dec
cmp
inc
mov
outs
ficomp
jg
clc
movs
shr
sub
lea
cld
push
or
cmp
xor
add
mov
hlt
push
sbb
add
xchg
mov
adc
mov
pop
pushf
push
fimul
mov
popa
icebp
shl
push
mov
mov
mov
pop
scas
aad
xor
out
cmp
fbld
iret
adc
out
pop
std
punpcklwd
test
in
in
in
retf
adc
inc
pusha
pop
pop
mov
sbb
and
mov
dec
push
and
mov
ret
mov
cmp
(bad)
push
icebp
cmp
push
xor
or
fistp
hlt
loop
pusha
inc
repnz
(bad)
rcr
xor
dec
scas
ffree
neg
add
cmp
cmp
pop
aas
pushf
jnp
mov
xchg
push
cmps
inc
cmp
fisub
ss
loopne
mov
mov
sahf
popf
ja
lahf
xor
push
loope
cdq
out
lods
lods
mov
int3
xor
test
xchg
jge
inc
cmp
add
pop
adc
and
popa
adc
repnz
test
mov
or
ret
push
jae
loope
sahf
sbb
xlat
ror
mov
sbb
ret
pop
add
cmp
jmp
movs
les
(bad)
push
sbb
call
mov
xchg
inc
mov
and
cli
sbb
fsub
hlt
loop
cmp
(bad)
int3
mov
push
ins
(bad)
pop
xchg
div
(bad)
push
push
dec
inc
sbb
scas
jg
mov
movs
pusha
(bad)
out
push
mov
enter
lock
pop
dec
pop
and
leave
or
inc
clc
das
mov
or
mov
pop
retf
(bad)
xor
ror
aad
cld
mov
inc
mov
in
dec
pushf
cmps
int
ja
jae
mov
pop
cmp
in
loop
xor
in
out
outs
mov
mov
and
inc
xor
jmp
call
sbb
push
or
mov
jp
dec
ins
bound
lea
cmp
push
pop
sub
js
nop
jno
enter
(bad)
pop
inc
mov
sub
pop
jmp
jmp
popf
jp
scas
add
rcl
nop
sbb
pop
(bad)
out
xor
fdiv
(bad)
and
push
xchg
or
jge
and
outs
xor
xor
gs
mov
mov
test
lahf
rol
jecxz
or
in
loop
movs
fsub
dec
sahf
mov
mov
lea
add
in
cli
inc
and
jge
out
and
dec
retf
fimul
(bad)
xor
loope
(bad)
ror
adc
lea
aas
pop
xchg
loopne
push
lods
les
sbb
jbe
jns
in
inc
push
pop
jae
lea
adc
jg
dec
pop
pop
adc
les
stc
push
mov
jge
and
fbld
scas
mov
pop
icebp
add
ret
xor
in
dec
ds
pop
push
mov
lahf
push
popf
pusha
test
(bad)
add
mov
inc
arpl
popa
push
sub
dec
xchg
leave
push
(bad)
or
loop
stos
xchg
in
into
xbegin
pop
sub
pop
jmp
sub
test
sub
sub
and
jmp
dec
add
(bad)
retf
(bad)
out
mov
jecxz
xchg
(bad)
jge
or
xor
inc
ins
aaa
cld
add
scas
call
sbb
lahf
xchg
enter
mov
(bad)
cld
adc
pop
daa
pop
push
mov
lock
movs
mov
cmp
sub
xor
les
mov
jmp
cmc
pop
sti
dec
jbe
aaa
or
mov
push
bound
les
ins
xchg
jae
in
loopne
popf
ficomp
imul
out
(bad)
(bad)
rcl
cwde
cmp
not
push
cmp
jle
enter
js
cmp
stc
push
mov
mov
mov
pushf
and
inc
sbb
test
stos
sub
mov
nop
stc
retf
(bad)
out
rcr
pop
and
enterw
add
loope
inc
push
in
int3
ds
sbb
or
xchg
inc
adc
rcl
mov
aad
movs
std
shl
ret
push
cmps
pop
push
in
sub
dec
call
jno
mov
sbb
push
xlat
adc
je
jle
pop
jg
outs
lods
scas
imul
call
adc
test
jae
popa
jae
xchg
imul
xor
mov
icebp
enter
aad
icebp
repnz
sti
addr16
adc
int
jo
jb
mul
xchg
loopne
jmp
cmps
mov
ret
lods
lods
stos
jle
xchg
pop
ins
leave
stos
js
mov
aad
fimul
add
aam
add
add
clc
or
and
inc
out
retf
(bad)
outs
enter
push
rol
out
in
xor
inc
or
add
call
imul
jo
repz
out
mov
repz
punpcklbw
dec
push
add
add
pop
sub
pop
push
dec
xchg
mov
cli
fiadd
push
cmps
pop
push
xor
aas
popa
push
inc
cmps
push
outs
outs
mov
xchg
scas
pop
pop
mov
mov
bound
sub
inc
push
jne
jle
mov
js
cmp
cli
mov
outs
mov
mov
lea
jo
lea
imul
icebp
xor
aas
dec
or
and
outs
jmp
arpl
push
pop
mov
bound
in
adc
out
adc
lods
sub
jne
xchg
jno
icebp
push
fwait
cs
pop
outs
add
and
mov
xor
pop
pop
test
pop
(bad)
sub
mov
pop
sub
mov
ret
inc
mov
fdiv
out
icebp
imul
dec
test
and
or
push
xchg
ficom
xchg
xor
adc
and
mov
jg
or
jmp
xchg
pop
rol
(bad)
push
movs
sub
add
ins
inc
jg
push
fisubr
mov
and
inc
xor
inc
nop
out
imul
cmps
loopne
mov
jnp
inc
push
mov
fwait
xchg
sub
rol
push
in
push
jae
sbb
fsub
std
mov
mov
xor
retf
inc
out
push
movs
adc
lea
and
inc
mov
adc
sbb
xor
test
pop
pop
sub
call
cmps
mov
loope
sub
fisubr
daa
pop
scas
pop
mov
jns
xchg
rcr
lock
lods
cmp
push
xchg
inc
cs
stc
cmp
inc
sub
mov
das
push
mov
mov
and
icebp
out
rcl
pop
rcr
punpcklwd
cli
mov
jb
push
inc
movs
sbb
(bad)
out
cmp
out
add
and
iret
cmp
sub
mov
scas
ds
scas
mov
ret
cmp
je
(bad)
enter
loope
adc
adc
mov
or
scas
mov
popa
(bad)
repnz
xor
adc
bound
pusha
adc
and
push
sub
jp
cmp
sbb
sub
xor
leave
loopne
jo
popa
loop
fmul
in
sub
ret
fsubrp
mov
rol
sahf
add
dec
inc
mov
push
shr
mov
adc
dec
ins
sbb
ret
mul
push
loopne
adc
and
xor
pushf
mov
gs
aas
mov
loope
xor
jle
loope
xor
and
inc
inc
xchg
push
cmp
push
add
sbb
shl
and
in
jmp
xor
xchg
in
popa
sar
lods
mov
ret
arpl
sbb
mov
push
(bad)
fst
push
(bad)
jle
ret
sub
rcr
inc
jb
jae
push
enter
popa
out
call
aaa
shl
and
fild
popa
adc
scas
pop
mov
rcl
ffree
loopne
adc
jo
int3
ds
ret
inc
jle
outs
push
push
push
shr
mov
and
hlt
xor
outs
xor
in
outs
aad
es
cld
pop
loope
xchg
in
add
mov
mov
test
xor
int
out
dec
add
xor
cwde
test
jl
inc
xor
jo
pop
pop
cli
push
sbb
mov
lock
mov
xchg
mov
sbb
mov
arpl
into
arpl
fdiv
in
lock
lea
jle
into
nop
cmps
loopne
pop
pop
and
scas
sub
dec
and
sbb
push
aas
shl
push
adc
sbb
je
cmp
rol
das
(bad)
jle
int
or
xchg
push
and
inc
and
jg
dec
test
pop
(bad)
fwait
outs
xchg
cwde
outs
xchg
(bad)
js
xchg
push
jg
jge
jl
std
ror
xchg
loop
sahf
int3
push
int3
imul
sahf
sub
jno
mov
inc
in
aad
rcl
push
pop
mov
leave
(bad)
jmp
mov
xchg
(bad)
and
push
xchg
enter
pop
xor
or
ss
xor
call
mov
mov
enter
scas
mov
mov
movhps
pusha
sub
ds
xchg
sbb
mov
pushf
sbb
xor
test
ret
cmp
jecxz
lock
add
inc
add
cmps
dec
push
mov
fs
pop
xchg
sar
popa
repz
mov
jbe
outs
popa
outs
imul
xor
cli
jecxz
out
rcr
outs
fdivr
neg
lock
nop
outs
pusha
mov
int
das
(bad)
in
mov
jge
outs
sbb
sub
jno
xchg
syscall
sbb
mov
jecxz
call
cmp
cmp
outs
ins
pop
push
pop
lds
mov
loop
ds
push
mov
dec
push
pop
je
scas
xlat
xlat
jge
pop
popf
data16
aas
and
add
loopne
mov
repz
pop
rcr
mov
ds
and
jp
stos
sahf
jns
stos
mov
lods
sub
and
add
sbb
pop
fxtract
dec
jo
inc
dec
add
(bad)
jb
out
neg
xchg
mov
and
pop
addr16
jmp
and
sub
xchg
mov
pusha
mov
(bad)
aam
cmp
or
loopne
push
out
or
cmp
test
xchg
pop
mov
ror
dec
adc
mov
stos
out
jge
das
sbb
loope
pop
mov
jecxz
repnz
ds
retf
sbb
sahf
popa
jbe
data16
repnz
cmp
shr
iret
and
sub
enter
pcmpgtd
lods
loopne
xchg
jns
fwait
ror
add
mov
scas
ror
or
push
add
or
push
push
or
add
sub
or
jmp
xchg
pop
popa
imul
movs
icebp
inc
jge
dec
jle
xor
mul
push
gs
sub
leave
xchg
inc
cmps
cmps
out
xchg
adc
cmc
mov
sbb
push
xor
sbb
sub
div
aam
jge
arpl
arpl
jl
mov
call
rol
and
fucomp
leave
lds
mov
adc
test
shl
jne
add
and
hlt
sub
push
or
push
jg
push
es
ret
dec
pop
in
inc
or
je
mov
jo
xchg
in
aam
nop
(bad)
push
add
outs
xor
adc
arpl
icebp
mov
stos
ret
mov
arpl
fld
dec
jmp
add
out
xchg
imul
loopne
xor
retfw
(bad)
push
push
push
mov
fild
stos
loope
mov
hlt
add
fiadd
(bad)
cli
xor
lock
ds
stc
in
dec
dec
jmp
and
stc
sahf
and
(bad)
das
cld
and
jge
ja
pop
cmps
inc
pop
es
pop
es
(bad)
cmps
xchg
cmps
out
pop
int
mov
dec
mov
xor
xor
dec
es
push
push
pop
push
call
fadd
ret
out
jb
aaa
push
adc
dec
xchg
cs
push
scas
push
inc
data16
pop
into
xchg
(bad)
jae
mov
sbb
xchg
(bad)
scas
inc
push
mov
push
inc
adc
pop
ret
adc
dec
test
(bad)
mov
fdiv
pop
cmp
mov
jns
ja
xlat
into
aas
loope
push
xor
daa
sti
push
into
adc
ror
push
int
scas
inc
lds
gs
mov
in
cs
fild
xchg
xchg
cmps
out
pop
int
in
lds
into
rol
rol
cmp
push
mov
imul
mov
fsub
mov
mov
enter
fist
sbb
sbb
retf
cmp
test
jo
imul
lods
sub
or
cmps
scas
inc
dec
jnp
jae
out
jecxz
mov
pop
dec
mov
sub
lds
scas
push
push
jnp
(bad)
iret
adc
sti
adc
pusha
jle
out
xchg
push
hlt
(bad)
and
xchg
sahf
popf
jp
mov
xor
ds
cmps
ret
outs
fisub
push
jp
jp
pop
data16
push
cld
sbb
dec
(bad)
fst
fistp
pop
xchg
(bad)
xchg
sub
pop
(bad)
into
mov
push
mov
ss
sbb
sub
fcomp
mov
pop
pop
push
mov
mov
fisub
sbb
push
push
retf
fdivp
mov
ss
mov
(bad)
fidivr
or
push
ss
retf
pop
push
xor
jbe
adc
ss
pop
fisub
adc
pop
dec
sub
aad
mov
fimul
stos
adc
pop
pop
ins
out
xchg
push
push
aaa
rcl
mov
mov
mov
xchg
ds
push
sbb
shl
ficomp
cmp
mov
(bad)
sti
push
sbb
pop
(bad)
push
sbb
adc
adc
sbb
mov
sub
pop
cmp
sbb
pop
pop
fisubr
pop
jb
jbe
test
push
ja
mov
and
ss
mov
dec
jb
mov
push
call
sbb
fisttp
shl
cli
jge
push
repnz
mul
rcl
push
pop
repz
loop
fimul
dec
pop
bound
cli
adc
fcmovu
pop
int
jbe
fisttp
stos
pop
sahf
or
and
sub
call
out
dec
jb
mov
outs
scas
inc
inc
mov
loop
bound
dec
data16
(bad)
mov
ins
mov
imul
or
cli
and
ss
out
mov
out
add
bound
out
(bad)
mov
(bad)
jmp
dec
sar
jmp
inc
add
outs
bound
clc
loop
not
xchg
and
es
dec
dec
dec
dec
ds
(bad)
into
cmps
cmc
and
jmp
pop
out
loop
mov
repnz
outs
bound
scas
outs
iret
loop
loop
jecxz
bound
bound
and
inc
xor
out
or
dec
or
push
sbb
xchg
fucomip
out
bound
outs
into
outs
out
loop
aaa
sahf
inc
xchg
inc
push
and
loop
sbb
push
add
nop
movs
cmps
gs
into
push
(bad)
into
(bad)
push
inc
dec
bound
lds
call
es
out
push
adc
movs
dec
mov
sub
push
pop
movs
inc
mov
jmp
cdq
jb
or
or
sahf
es
mov
call
cmp
arpl
fild
mov
into
xlat
lock
repnz
cmp
jae
mov
retf
fistp
dec
xor
out
into
(bad)
xlat
mov
pop
out
in
sbb
jb
es
and
and
cs
adc
popa
sub
xchg
mov
push
dec
out
cmp
out
ret
imul
(bad)
push
neg
jbe
jbe
jbe
push
ja
cmc
out
int
test
leave
movs
pop
cld
mov
or
test
inc
jae
jbe
dec
jae
hlt
test
inc
mov
jbe
pop
dec
xor
mov
enter
cli
dec
cli
dec
cli
into
out
std
inc
jecxz
mov
xor
xchg
repnz
and
jbe
jbe
out
lds
neg
pop
scas
pushf
arpl
loop
cli
sahf
inc
push
jbe
test
inc
jge
sub
xor
pushw
out
not
xchg
or
test
inc
xor
lods
push
div
retf
data16
jo
inc
xor
lock
cmp
add
jbe
jno
jno
icebp
(bad)
icebp
(bad)
icebp
les
jge
ss
cmc
into
xlat
dec
add
adc
push
add
mov
retf
ss
inc
ss
sub
jge
or
jle
xor
or
mov
inc
sbb
mov
mov
or
dec
ds
add
int
xor
jbe
dec
enter
pop
retfw
std
lock
jne
cmps
retf
xchg
cmp
int3
ret
push
retf
push
mov
mov
repz
cmp
ret
enterw
(bad)
push
enter
pushf
jae
mov
aaa
mov
mov
outs
ret
jae
test
inc
test
aaa
outs
adc
or
or
shl
and
ss
(bad)
les
sub
pop
pop
std
ins
call
repz
jp
jae
inc
sub
mov
xchg
retf
xor
sti
leave
or
jbe
pop
fs
aad
push
cwde
sti
sbb
pop
xchg
jae
adc
dec
and
leave
and
lods
or
push
clc
mov
mov
push
mov
dec
(bad)
mov
sbb
(bad)
inc
cdq
aas
ins
test
test
rcr
mov
mov
test
cmp
mov
cmp
cdq
inc
gs
inc
test
push
ret
fsub
xchg
inc
inc
add
adc
or
iret
or
sub
fmul
add
mov
dec
inc
or
xchg
test
mov
add
add
add
inc
dec
add
add
in
push
test
add
add
ret
lds
or
fcom
test
cld
push
push
leave
or
loop
push
cli
or
popa
aad
sub
add
inc
mov
rcl
shl
sub
inc
inc
mov
or
xchg
sub
test
xchg
fs
or
dec
leave
fs
test
jl
int
aam
sub
fs
ins
leave
pop
(bad)
test
adc
pusha
mov
mov
loope
adc
cmp
inc
ret
ror
imul
add
inc
stos
mov
and
fwait
call
das
xchg
add
push
mov
cmp
fist
push
aaa
adc
test
xchg
jecxz
mov
ins
shl
retf
hlt
stos
push
pop
sahf
cld
mov
arpl
out
shl
jno
or
fwait
jnp
jle
adc
arpl
jmp
cwde
mov
jnp
js
clts
arpl
inc
shr
mov
arpl
out
shr
fs
fist
adc
hlt
lds
dec
je
mov
jns
jnp
fwait
imul
cwde
pusha
jno
adc
repz
aas
outs
imul
mov
fstp
sub
stos
push
dec
test
mov
or
pop
sub
ret
arpl
mov
ret
fucomi
pushf
mov
jecxz
mov
jmp
sub
mov
pop
push
mov
arpl
or
push
cmp
fldcw
ret
pop
cmp
movs
pop
fwait
jnp
movs
aam
push
mov
pop
dec
in
test
pop
pusha
sar
cdq
cmc
mul
idiv
xchg
or
shl
ss
call
hlt
popa
hlt
mov
xor
in
adc
mov
ins
arpl
hlt
addr16
add
das
add
int3
hlt
in
fs
jns
dec
dec
cld
(bad)
hlt
addr16
jl
nop
xor
je
sti
dec
pop
in
int3
pop
add
int
sub
push
cmp
mov
int3
mov
sar
adc
popa
enter
dec
add
shl
sahf
xchg
xor
and
adc
cmc
mov
lods
and
push
mov
sbb
lahf
push
fcom
and
enter
jo
fcom
xor
pop
popa
bswap
rol
pushf
scas
ins
jo
fndisi(8087
adc
push
enter
in
call
pop
in
retf
inc
xchg
stos
fmul
sub
push
and
pop
push
ins
lock
das
in
push
enter
dec
adc
pop
dec
mov
lock
lods
xor
scas
push
call
ins
outs
iret
xchg
in
call
sub
pop
sub
call
test
cmp
retf
outs
adc
mov
out
cwde
ins
mov
ins
adc
sbb
int3
or
mov
dec
dec
xchg
add
shld
les
test
mov
xchg
jl
add
mov
fldcw
add
(bad)
test
adc
std
aam
nop
xor
or
jne
mov
adc
out
rol
pop
(bad)
mul
popa
jo
sub
add
dec
rcr
(bad)
cmp
clc
fdiv
enter
in
cmp
push
in
jl
shr
jmp
push
ins
jo
sbb
dec
xchg
dec
(bad)
enter
add
out
or
sub
mov
out
scas
ins
mov
pushf
pop
mov
sbb
lods
mov
ins
sbb
lock
int
mov
(bad)
ins
enter
jo
sbb
ins
mov
(bad)
hlt
dec
dec
adc
int3
(bad)
dec
inc
or
dec
xrstors
mov
add
xchg
in
ds
arpl
add
inc
inc
mov
mov
aas
or
imul
movs
mov
enter
or
pop
sbb
test
mov
(bad)
cdq
push
call
data16
push
out
dec
mov
loope
dec
fidivr
inc
xchg
clc
popa
addr16
dec
sahf
mov
imul
bound
aam
in
aam
shl
xchg
push
lods
imul
xlat
int
in
and
inc
dec
std
fmul
ins
int3
leave
enter
pop
inc
jnp
or
mov
cmp
push
cmp
aad
div
lods
xor
and
add
dec
adc
mov
in
sbb
sbb
inc
dec
dec
lods
sbb
pop
lods
pop
lea
sbb
sub
enter
pop
lea
je
pop
test
sub
pop
lods
in
lahf
inc
enter
mov
mov
int
in
sbb
sbb
sbb
mov
mov
sub
mov
fdiv
mov
in
int
lods
add
dec
ins
ins
add
push
sahf
outs
mov
sbb
outs
or
push
dec
les
fucompp
mov
enter
dec
lods
mov
std
dec
add
mov
pop
dec
loopne
adc
in
enter
mov
repnz
test
mov
jle
ret
loopne
push
mov
in
clc
jecxz
push
stos
add
arpl
jmp
or
cmps
push
mov
mov
ror
ja
(bad)
jae
pop
cmps
(bad)
inc
(bad)
push
jae
repnz
mov
sahf
xchg
outs
mov
ror
xor
sub
cmps
test
ja
ja
mov
ret
retf
xchg
and
cmp
iret
pop
xlat
adc
arpl
sub
dec
xor
ret
xor
mov
jecxz
xchg
pop
inc
lea
pop
aaa
fisttp
pop
jecxz
daa
sub
mov
xchg
aaa
neg
or
jmp
sub
dec
into
ror
or
shl
mov
push
icebp
mov
sub
xor
not
mov
sbb
in
mov
addr16
xchg
dec
ds
scas
pop
mov
mov
xchg
scas
rcl
iret
(bad)
or
daa
idiv
fstp
add
add
repz
(bad)
jmp
ja
pop
lea
xlat
xchg
cmps
xchg
jbe
mov
ja
push
cdq
repz
and
mov
shl
jbe
pop
mov
xchg
inc
in
adc
addr16
dec
repz
xchg
fild
daa
not
js
mov
arpl
daa
push
scas
dec
ret
xlat
pop
int3
cmps
rcl
mov
fiadd
dec
push
xlat
inc
ss
call
push
mov
daa
scas
pop
into
xor
xchg
push
aaa
inc
inc
inc
xchg
hlt
mov
rol
xchg
mov
xchg
inc
jp
xchg
jnp
adc
es
mov
xchg
jmp
daa
sahf
adc
push
(bad)
in
cmps
shr
mov
out
out
daa
mov
mov
cmps
jno
inc
out
out
and
inc
and
arpl
mov
pop
shl
pusha
jne
pop
out
mov
mov
stc
and
out
jae
imul
mov
or
ins
sbb
(bad)
int3
jecxz
arpl
into
sbb
cmp
hlt
arpl
shl
out
test
fsubr
out
int3
(bad)
sbb
mov
bound
shl
or
ret
fsub
sbb
stos
jbe
jbe
out
fldcw
add
lods
out
data16
in
inc
jp
sbb
cmps
jecxz
jl
xor
mov
arpl
cmp
hlt
out
pop
pop
sbb
sub
sub
jecxz
mov
out
inc
loop
jmp
cmps
imul
inc
loop
jmp
cmps
mov
push
or
aaa
push
pushf
sub
cmps
sbb
mul
inc
cmp
sbb
xor
fist
pushf
out
stos
fnsave
out
pop
mov
ss
or
push
sub
xchg
push
je
cld
fnstcw
pop
ret
cmc
cmps
push
and
and
cmp
xchg
xchg
aas
cmps
sbb
ins
test
pop
mov
ins
sbb
cmp
add
mov
(bad)
adc
out
dec
test
dec
jmp
add
retf
scas
xchg
in
test
(bad)
sbb
lods
push
add
pop
in
sar
in
movs
aam
pusha
fs
and
jbe
and
pusha
and
adc
add
and
and
data16
push
and
push
and
push
(bad)
loope
shl
popa
and
jbe
and
xor
push
das
aad
dec
jbe
cmp
jmp
cld
loopne
cmps
lods
clc
into
loopne
bound
test
xchg
outs
pop
(bad)
pop
nop
pop
xchg
pop
punpcklwd
or
nop
pop
es
mov
lods
sbb
push
ins
(bad)
scas
test
shl
cmc
lock
int3
nop
xor
sbb
xor
cmp
pop
dec
push
mov
pop
cmp
push
cdq
inc
outs
xchg
or
and
adc
add
cmp
jb
xor
cmps
repnz
outs
and
or
xor
mov
mov
jb
push
call
dec
mov
cmp
repz
and
mov
outs
imul
add
inc
enter
or
push
lods
cmp
bound
nop
sbb
lock
sub
inc
pop
jae
out
es
xchg
fidiv
fcomp
dec
sub
std
iret
and
push
in
popf
jle
lods
pop
outs
xchg
stc
dec
sbb
lods
mov
pushf
mov
jmp
and
loopne
int
inc
and
mov
sbb
pop
pop
pop
js
sbb
clc
fstp
(bad)
fstp
pop
js
pop
pop
clc
fstp
pop
js
cwde
(bad)
fstp
(bad)
fstp
pop
js
cwde
(bad)
fstp
fnstsw
sbb
clc
fstp
(bad)
fstp
pop
js
pop
pop
js
jns
mov
jmp
pop
pop
ds
cmp
cli
(bad)
cmp
pop
xor
pop
sbb
clc
test
pop
ds
sbb
cdq
fdivr
or
pop
adc
mov
mov
js
sbb
sbb
scas
fdivr
or
cmp
mov
mov
fcom
pop
cmp
scas
mov
mov
pop
sbb
pop
xor
cmp
clc
mov
mov
sub
jge
mov
fdivr
sbb
pop
cmp
push
adc
jns
rcr
dec
or
mov
out
stc
fnstsw
inc
jmp
and
cmp
icebp
sub
(bad)
jp
jmp
js
test
fadd
aas
arpl
pop
sbb
scas
or
xor
dec
pushf
outs
in
dec
dec
cli
sbb
or
lea
lods
adc
test
jo
and
push
jns
scas
cmp
push
mov
mov
sbb
jl
or
inc
stos
adc
hlt
je
pushf
add
popf
and
xor
sub
mov
jnp
sbb
clc
jb
mov
mov
add
sbb
push
lock
mov
push
lock
or
fcomp
clc
jl
pop
cmp
rol
out
(bad)
pop
jb
(bad)
xchg
sub
in
push
jl
(bad)
cld
or
scas
xor
mov
ror
pushf
push
sbb
jns
sbb
inc
enter
enter
enter
enter
enter
enter
enter
enter
scas
mov
jo
bound
test
pop
cs
inc
enter
movs
dec
into
sub
test
or
xor
adc
daa
mov
bswap
aaa
mov
aaa
stos
add
add
xor
(bad)
jp
and
sub
inc
test
enter
mov
ds
sub
movs
shr
bound
dec
leave
sub
inc
call
pop
enter
mov
aaa
nop
xor
push
mov
test
and
adc
mov
cmp
xchg
mov
mov
or
in
jecxz
sub
out
rcl
dec
sub
sbb
inc
call
scas
fisttp
push
cmp
popf
mov
dec
xor
cdq
pop
test
sbb
sub
ss
mov
movs
inc
out
cmp
dec
sbb
ins
cmp
(bad)
loope
test
pop
lea
dec
lods
sbb
stos
(bad)
adc
push
out
pusha
or
outs
push
mov
ins
push
or
mov
test
enter
cs
jl
dec
and
(bad)
cmp
fwait
int
mov
cmp
ficomp
imul
pop
jns
fisubr
add
add
mov
fucomi
cmp
dec
jge
imul
popf
lods
jp
cmp
or
dec
mov
stos
js
in
stos
and
jnp
pop
dec
scas
stos
test
jl
popf
pop
mov
fwait
mov
retf
push
add
imul
js
mov
mov
or
iret
sbb
push
dec
into
outs
(bad)
dec
pop
mov
mov
cs
in
out
dec
mov
ds
cs
pop
cdq
in
sbb
push
pop
cwde
cmp
dec
das
pop
ins
add
shl
jmp
enter
int
or
cmps
in
mov
dec
retf
pop
cwde
push
inc
and
add
inc
or
dec
cmps
xchg
xchg
mov
int
imul
sbb
pop
sub
or
ds
call
test
adc
mov
sub
jge
cmp
int3
pop
jmp
mov
sbb
inc
or
into
icebp
or
cmp
mov
and
jle
pop
cmps
cmp
push
cmp
or
adc
sbb
loope
xchg
cld
shr
xor
cmps
cmp
xchg
sub
loope
push
mov
and
jl
fwait
gs
in
or
fwait
pop
aad
movs
loope
pop
clc
lods
or
fcom
test
add
stc
adc
ins
xor
ror
out
and
sub
jle
imul
push
addr16
outs
(bad)
jl
or
aaa
mov
test
js
scas
je
and
js
or
pop
xchg
leave
mov
enter
shl
jns
int
ins
xor
push
or
lods
xor
adc
sub
push
mov
(bad)
and
and
cmp
jle
aas
xchg
jle
out
inc
cld
aaa
or
mov
fwait
pop
sub
clc
adc
clc
ja
je
mov
pop
loopne
mov
ins
ret
inc
push
push
enter
sub
push
inc
pop
xor
call
je
jo
out
adc
test
mov
ss
data16
dec
add
repnz
jbe
and
lock
add
adc
push
retf
movs
out
mov
dec
dec
pop
inc
jmp
mov
into
call
cs
pop
dec
push
cdq
xor
sbb
sub
xchg
outs
xor
xchg
lds
mov
inc
dec
inc
mov
(bad)
ror
ret
pusha
inc
ja
dec
jmp
data16
retf
sub
shl
iret
jno
xor
(bad)
jo
jmp
popf
test
aad
(bad)
fsub
and
xor
xor
jmp
pusha
pop
jo
fs
(bad)
mov
in
in
xor
mov
loop
mov
in
outs
inc
dec
sub
test
add
add
fidiv
stc
sbb
leave
pop
mov
xchg
and
mov
daa
scas
xchg
rol
dec
adc
les
jg
dec
push
push
repnz
jg
push
adc
jo
adc
xchg
lea
push
loop
lea
jecxz
stc
xchg
cmp
mov
xchg
outs
retf
mov
inc
dec
jno
push
(bad)
(bad)
push
mov
int3
add
pushw
out
adc
mov
push
dec
lods
mov
cli
(bad)
and
adc
sbb
pop
sbb
jb
leave
cmc
stc
xchg
dec
inc
sbb
jne
ja
pop
mov
jecxz
adc
jb
shl
std
in
faddp
fsubrp
shl
adc
bnd
(bad)
rcr
dec
push
(bad)
std
add
and
fimul
movs
jb
movs
push
popa
sub
fimul
cmc
movs
adc
and
shl
fdivp
ficom
push
loop
cmp
shl
ret
cmp
mov
mov
xor
ret
and
adc
cmp
inc
add
jb
pop
jecxz
sbb
repnz
sub
loop
adc
sub
sar
mov
mov
mov
sbb
clc
rol
xchg
mov
or
loop
jecxz
mov
xchg
mov
adc
pusha
pop
loope
cdq
cmps
push
push
mov
mov
ins
call
xchg
add
data16
xchg
imul
scas
aaa
push
addr16
leave
inc
data16
shl
mov
addr16
ins
dec
push
data16
mov
fptan
out
loope
and
mov
push
shl
cmc
(bad)
adc
mov
div
test
shl
retf
lods
es
(bad)
mov
fs
pop
mov
out
mov
dec
std
lahf
inc
cld
or
jnp
mov
xchg
lods
imul
or
(bad)
jbe
out
add
inc
or
(bad)
jmp
lahf
test
idiv
into
rol
mov
inc
dec
pop
call
out
xchg
jb
push
mov
jmp
repnz
pop
sbb
jae
mov
mov
rcl
mov
in
mov
gs
movs
inc
dec
jb
jae
les
inc
inc
popa
dec
lods
leave
mov
jecxz
inc
sub
rcr
push
cmp
push
(bad)
outs
popa
stos
fisttp
in
push
add
or
jle
test
xor
(bad)
out
repz
and
cld
pop
xor
rcr
iret
cdq
pop
nop
add
jo
shl
push
push
fcom
adc
push
call
mov
push
test
cmp
jo
push
cmc
cmp
lock
cmc
sbb
add
in
mov
fld
push
inc
mov
stos
jo
loop
shl
xchg
pop
or
fabs
pop
rcr
les
rol
xchg
fbstp
xor
adc
js
(bad)
rcl
cmp
jecxz
push
pop
imul
loope
sti
jecxz
fldlg2
out
lahf
mov
sbb
lds
push
mov
repnz
mov
shl
aaa
adc
ds
repz
repnz
call
call
lahf
sbb
rol
and
lock
jp
pusha
imul
popf
cmp
cmp
fisub
rol
jmp
(bad)
cmp
and
dec
out
xor
and
or
cmps
leave
leave
iret
outs
add
fbstp
shl
and
sub
sbb
call
imul
jg
outs
mov
adc
xchg
fsub
rcl
or
ficom
sub
xchg
mov
movs
ret
or
pop
push
adc
and
cld
retf
xchg
push
inc
cmp
cmp
daa
dec
mov
ins
cld
je
cmps
jg
cmp
cmps
sub
iret
fist
inc
repz
push
mov
pop
add
xor
movs
mov
loop
lods
sub
sub
adc
inc
xchg
icebp
mov
adc
push
daa
test
ret
xlat
repz
rol
mov
add
mov
rcl
adc
cmps
not
mov
stos
and
cmps
(bad)
scas
and
sbb
mov
cwde
jno
and
adc
or
pop
xor
push
sub
mov
add
rol
mov
mov
retf
xor
jne
mov
xchg
div
xor
xlat
in
and
ret
aas
cmp
xchg
imul
aaa
dec
xchg
adc
inc
mov
xchg
pop
loopne
adc
mov
pop
mov
out
movs
movs
stc
mov
inc
push
addr16
scas
xchg
add
or
test
loop
adc
pushf
pop
pop
jb
xchg
pushf
push
lods
dec
mov
xchg
sub
pop
mov
mov
jle
(bad)
ins
xchg
das
mov
jl
inc
pushf
xlat
fwait
arpl
jae
stos
cmp
mov
call
jl
dec
loopne
xchg
add
imul
mov
dec
push
fdiv
sub
repz
daa
jg
xchg
mov
push
test
lods
push
pusha
cs
(bad)
shl
mov
jle
sub
pop
push
das
lea
adc
jmp
adc
cli
cmps
cdq
and
icebp
ins
jmp
adc
lea
aad
add
shl
mov
sbb
add
jne
pop
in
push
popf
movs
mov
jecxz
sbb
call
test
loop
and
call
xchg
mov
adc
(bad)
stc
xchg
push
repz
(bad)
and
inc
cli
jmp
jae
pushf
ja
call
movs
sbb
cmp
xor
test
sbb
jb
(bad)
ins
push
pushf
icebp
dec
add
and
or
mov
push
int3
js
ins
xchg
mov
cwde
rol
pop
add
cdq
ds
addr16
or
sub
push
mov
xchg
loop
ret
mov
out
test
jns
call
sar
js
push
sub
retf
mov
(bad)
fimul
pop
in
mov
lea
xchg
push
mov
dec
(bad)
outs
lods
mov
fldcw
test
sub
punpckhwd
clc
mov
(bad)
loopne
or
sbb
or
test
iret
mov
pop
cdq
and
test
dec
mov
das
stos
xchg
(bad)
js
mul
fisubr
sbb
ss
es
xor
mov
fiadd
cdq
clc
xchg
or
fs
mov
ficomp
xlat
dec
fmul
jno
in
cld
xchg
pop
xor
dec
dec
lock
xchg
and
xchg
iret
dec
or
aaa
fst
or
sub
fcmove
(bad)
and
std
mov
sbb
xorps
(bad)
int3
cmp
fs
sub
ins
cmp
mov
cdq
mov
dec
sub
in
(bad)
or
and
dec
imul
or
mov
dec
sub
inc
mov
mov
mov
mov
sti
or
mov
js
lods
and
mov
sbb
fistp
ror
mov
cdq
mov
mov
stc
test
rcl
es
lods
xchg
dec
mov
or
or
es
sub
push
mov
adc
mov
sub
mov
push
mov
pop
push
cmp
sub
ds
cmp
stc
stc
push
inc
push
jns
and
pop
sub
rcr
ss
test
mov
sub
aad
push
mov
mov
mov
sub
ffreep
jle
xor
mov
cmps
lea
mov
xor
out
scas
add
ins
cmp
mov
jg
mov
jle
or
leave
test
out
outs
iret
and
pop
sbb
stc
mov
mov
jns
(bad)
sbb
dec
stc
mov
sub
sbb
out
test
test
popa
sbb
dec
sbb
jle
movs
stos
cdq
fwait
mov
stos
lea
imul
imul
inc
ins
movs
out
scas
mov
push
xor
push
mov
sahf
push
mov
jmp
leave
mov
stos
jp
stc
and
mov
mov
popf
aas
dec
mov
mov
jge
or
das
fidivr
add
cmp
jns
(bad)
xchg
pop
out
jbe
push
out
sub
(bad)
dec
(bad)
cmp
test
lods
push
ror
aas
cmp
ins
(bad)
(bad)
das
scas
dec
call
mov
cwde
dec
shl
mov
int
scas
das
cdq
retf
jno
sbb
test
pop
outs
adc
cmp
jns
(bad)
mov
jns
mov
iret
dec
dec
fcmove
jnp
pop
cmp
add
stos
fild
sub
dec
call
cvtdq2ps
imul
in
mov
cdq
push
mov
mov
sbb
mov
pushw
test
cmp
cmp
adc
or
mov
hlt
pop
mov
in
ins
fsub
cmp
pop
pop
ins
(bad)
sub
add
bound
mov
jo
bound
and
inc
in
cmp
and
xor
retf
add
in
inc
test
mov
jge
jnp
js
cli
jl
sbb
cmps
shl
nop
shl
mov
mov
adc
pop
(bad)
into
inc
mov
out
in
jl
in
adc
jns
jp
bound
add
das
fisubr
jg
ret
fsub
push
xor
dec
cmp
movs
cmps
in
bnd
icebp
add
mov
mov
fcom
movs
fstp
mov
ror
movs
and
cmp
scas
xor
push
lock
stc
stos
js
sti
out
xor
movs
iret
add
push
hlt
iret
outs
out
adc
push
cld
imul
dec
retf
jp
test
fsubp
xchg
jp
es
jne
mov
and
add
popa
faddp
aas
xor
pusha
cmc
mov
mov
cmps
and
aam
sahf
rol
aaa
add
inc
pop
push
mov
in
mov
fadd
lock
or
repz
inc
pop
pusha
dec
fwait
xchg
call
mov
inc
mov
sub
adc
enter
jno
mov
mov
aas
out
mov
cli
and
push
outs
stos
mov
sbb
add
mov
ret
bound
mov
cmp
xchg
loopne
ds
jmp
xchg
and
mov
dec
ss
dec
mov
pop
(bad)
xlat
in
rcr
in
ret
xchg
or
mov
call
repnz
loopne
xchg
pushf
outs
lock
lods
jb
dec
test
enter
leave
mov
dec
dec
mov
iret
test
inc
inc
and
retf
mov
inc
inc
test
rol
cmps
mov
dec
mov
retf
into
mov
inc
inc
and
retf
mov
inc
test
(bad)
movs
add
inc
inc
and
enter
dec
dec
imul
in
leave
int
mov
inc
inc
and
leave
(bad)
dec
ins
dec
dec
mov
retf
into
mov
inc
inc
test
mov
movs
add
add
fdivr
enter
dec
dec
imul
in
enter
mov
outs
dec
dec
mov
retf
mov
inc
inc
xchg
mov
movs
add
jge
mov
in
leave
int3
mov
jge
call
loope
clc
push
cmc
push
rcr
lods
pusha
mov
jb
or
cs
test
jmp
jmp
sub
pop
push
aas
or
dec
xor
nop
jle
fidivr
sbb
dec
aas
xchg
scas
das
add
cwde
sbb
in
out
sbb
mov
fidiv
dec
ins
mov
popa
xchg
loop
int3
loop
rcl
and
and
fs
cmp
mov
pop
add
in
add
add
push
xchg
sti
mov
jb
clc
push
arpl
mov
shl
aas
popf
(bad)
out
(bad)
icebp
iret
jge
push
push
movs
call
inc
scas
xor
jae
add
shl
fdivr
mov
aam
xchg
out
push
mov
int3
xlat
sbb
and
ret
das
push
and
retf
stc
fist
nop
outs
sub
scas
xchg
loope
enter
bound
mov
fcomp
daa
dec
faddp
add
imul
cmp
lods
mov
or
jecxz
sbb
jne
dec
mov
sbb
in
ret
(bad)
mov
test
mov
(bad)
push
fidiv
mov
cmp
repnz
iret
inc
inc
leave
mov
mov
fisttp
mov
int3
add
add
and
lods
sub
rcr
fcomp
sub
jb
and
lock
leave
and
mov
cdq
pop
pop
lahf
mov
mov
adc
out
cmp
jg
std
jo
stc
ds
pop
cmp
pop
inc
pop
jae
add
sbb
(bad)
imul
cld
sub
stos
loope
mov
pop
mov
ror
inc
lods
inc
cmp
lods
push
loope
push
push
xor
jno
mov
pop
enter
mov
sbb
or
lock
cs
or
in
mov
mov
mov
aas
frstor
fisubr
ins
cmp
or
add
es
push
mov
ins
sahf
dec
ds
push
out
sbb
lock
push
dec
add
mov
jae
adc
dec
out
icebp
push
je
loop
inc
mov
hlt
jns
int
push
jno
lds
push
jno
mov
bound
sub
das
nop
stos
std
inc
div
mov
jle
dec
(bad)
adc
lea
add
inc
inc
fmul
jmp
mov
clc
push
adc
cmp
and
mov
popf
sub
aaa
add
imul
ss
dec
and
cmc
stc
into
push
inc
mov
push
popf
mov
(bad)
into
or
int
in
(bad)
add
out
push
xor
pop
fmul
lds
fdivr
out
pop
mov
pop
gs
cmc
mov
outs
xor
xor
jge
and
bound
dec
imul
(bad)
(bad)
iret
outs
cli
jb
test
pop
out
out
sbb
bound
jge
(bad)
scas
ds
out
cmp
out
or
ds
out
scas
jecxz
pop
mov
pusha
data16
pusha
lods
or
xor
xchg
imul
les
mov
push
sbb
outs
adc
(bad)
nop
into
lahf
loope
out
movlps
cld
hlt
cmovo
push
imul
or
iret
inc
xchg
xor
cmp
ds
cmp
push
outs
add
je
test
repnz
aas
(bad)
(bad)
test
push
dec
xor
mov
push
inc
imul
out
inc
cmp
inc
mov
adc
and
sar
push
std
pop
dec
sbb
scas
in
pushf
popf
imul
jo
xlat
repz
(bad)
fisubr
xor
inc
pop
fs
cli
xchg
xchg
jne
sbb
(bad)
shl
cli
es
pop
loopne
mov
shr
jl
mov
cmps
shl
loopne
pushf
(bad)
sbb
dec
aaa
mov
dec
xchg
aaa
iret
cld
add
lods
sub
jecxz
add
outs
ds
(bad)
int3
ss
jmp
int3
rcr
or
inc
mov
enter
cli
adc
xchg
mov
scas
aam
jmp
or
or
in
or
das
mov
cdq
pop
push
add
iret
adc
mov
lahf
fbld
arpl
mov
mov
les
out
sar
pop
and
add
push
inc
ja
rcr
adc
out
xchg
xbegin
loop
cmps
imul
dec
add
or
mov
mov
dec
mov
lea
cmp
jge
mov
cmp
jl
mov
lea
mov
and
cmp
je
test
jne
add
add
cmp
jle
cmp
je
mov
jmp
mov
test
je
test
jne
sub
cmp
jne
mov
push
call
add
test
je
movzx
lea
cmp
jge
mov
add
cmp
mov
jl
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
lea
mov
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
add
add
add
push
push
add
push
push
push
push
push
push
push
push
add
push
push
pop
pop
or
or
or
or
int3
int3
int3
int3
mov
mov
push
push
push
call
add
neg
sbb
neg
ret
int3
int3
int3
test
je
mov
and
shl
add
cmp
jne
mov
add
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
cmp
push
push
jne
mov
mov
cmp
jne
cmp
mov
jne
mov
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
push
lea
push
push
call
mov
add
test
mov
jne
push
push
push
call
mov
and
add
cmp
ja
movzx
jmp
mov
shr
shr
and
cmp
jge
mov
cmp
mov
je
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
mov
shr
shl
mov
mov
pop
pop
add
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
test
je
mov
shr
mov
pop
pop
add
pop
mov
mov
pop
ret
mov
pop
pop
mov
pop
mov
mov
pop
ret
shr
and
mov
call
mov
pop
pop
pop
mov
mov
pop
ret
mov
jg
inc
add
popa
inc
add
popa
inc
add
bound
lahf
popa
inc
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
cmp
jne
mov
cmp
jne
cmp
jg
mov
cmp
jne
mov
cmp
jne
mov
sub
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
sub
sar
sub
jmp
or
mov
mov
mov
mov
mov
and
cmp
je
cmp
je
cmp
jne
mov
push
shr
push
and
push
call
add
pop
ret
xor
pop
ret
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
mov
cmp
jne
mov
cmp
jne
push
mov
mov
call
mov
cmp
mov
jne
mov
cmp
jne
mov
jmp
xor
mov
push
add
push
lea
push
call
mov
push
push
lea
push
push
push
call
add
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
test
je
push
mov
add
cmp
je
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
mov
mov
mov
mov
mov
sub
pop
cmp
jg
push
push
call
add
add
mov
push
add
push
push
call
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
lea
push
push
push
call
push
call
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
xor
cmp
mov
jne
mov
mov
mov
or
push
mov
mov
mov
lea
push
push
mov
mov
call
add
pop
pop
mov
lea
pop
pop
ret
mov
mov
cmp
je
jmp
lea
movsx
add
cmp
ja
movzx
jmp
mov
mov
call
jmp
cmp
je
mov
mov
call
mov
jmp
or
mov
jmp
movzx
mov
jmp
cmp
je
mov
lea
push
mov
call
mov
add
jmp
xor
cmp
mov
jne
mov
mov
jmp
mov
mov
add
mov
mov
cmp
jne
mov
pop
pop
pop
pop
ret
dec
gs
add
fs
add
fs
add
gs
add
gs
add
inc
add
add
add
add
add
add
add
add
add
int3
push
push
mov
push
mov
xor
xor
cmp
push
mov
jne
mov
mov
add
add
mov
jmp
mov
test
je
mov
lea
mov
mov
lea
push
push
push
push
call
push
push
mov
call
add
test
je
test
mov
jne
mov
jmp
mov
mov
mov
sub
cmp
jg
push
push
call
add
add
push
push
call
add
test
je
call
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
cmp
jae
lea
cmp
je
add
cmp
jb
mov
push
push
push
push
call
add
pop
pop
pop
pop
ret
sub
lea
push
push
sar
push
call
add
test
je
mov
push
push
push
mov
push
push
push
call
add
pop
pop
pop
pop
ret
int3
int3
int3
int3
mov
mov
cmp
je
cmp
jne
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
call
add
test
mov
je
mov
mov
push
push
push
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
cmp
jne
push
mov
push
push
call
add
xor
ret
push
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
push
mov
push
mov
mov
mov
push
mov
push
push
push
push
call
mov
add
test
jne
test
jbe
mov
push
push
call
add
sub
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
mov
mov
cdq
push
mov
mov
sub
sar
cmp
jl
cmp
jl
mov
push
push
call
add
jmp
lea
cmp
jge
mov
mov
xor
mov
div
push
lea
cmp
pop
ja
mov
mov
imul
imul
mov
push
push
push
push
call
add
mov
pop
pop
pop
ret
push
push
call
add
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmp
je
push
push
mov
lea
cmp
push
ja
lea
push
push
push
push
call
add
jmp
push
call
add
test
mov
mov
jle
mov
xor
mov
rep
mov
xor
cmp
mov
jle
mov
mov
test
je
lea
mov
mov
and
test
mov
mov
mov
mov
jne
mov
mov
mov
add
cmp
mov
jl
mov
mov
add
push
add
push
push
push
call
add
mov
pop
mov
pop
pop
pop
pop
ret
int3
push
mov
lea
cmp
push
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
push
push
lea
and
push
mov
mov
mov
call
mov
mov
mov
mov
sub
and
mov
mov
mov
mov
add
mov
mov
add
cmp
jbe
cmp
jg
add
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
mov
mov
shr
add
cmp
mov
mov
mov
jb
movzx
mov
shl
add
mov
shr
add
sub
xor
cmp
jae
mov
mov
mov
mov
mov
sub
and
mov
test
je
jmp
lea
cmp
jne
cmp
mov
lea
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
mov
jg
or
jmp
mov
xor
test
je
mov
mov
test
jne
push
mov
push
call
add
pop
pop
pop
pop
ret
mov
mov
mov
movzx
movzx
not
and
test
je
pop
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
cmp
jbe
push
call
add
lea
push
push
push
push
call
mov
mov
mov
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
pop
mov
pop
ret
int3
push
mov
mov
mov
add
cmp
jbe
cmp
jb
push
push
push
call
add
mov
push
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
pop
mov
mov
mov
mov
add
pop
ret
int3
int3
push
push
push
mov
xor
lea
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
or
mov
add
add
add
cmp
mov
jl
pop
pop
pop
ret
int3
int3
push
mov
cmp
jge
push
call
add
test
push
je
mov
mov
push
push
call
add
pop
ret
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
push
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
add
test
je
cmp
jl
cmp
jg
push
call
mov
mov
add
jmp
push
push
call
add
push
mov
push
push
push
call
add
mov
push
push
call
mov
add
pop
pop
xor
call
add
ret
int3
int3
mov
mov
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
mov
push
mov
push
push
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
mov
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
cmp
je
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
add
cmp
pop
jl
mov
push
push
push
call
add
ret
int3
int3
int3
int3
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
mov
mov
mov
mov
lea
add
test
mov
mov
jbe
mov
movzx
add
mov
mov
pop
ret
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
push
call
add
test
jne
pop
ret
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
ret
mov
push
call
add
mov
mov
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
call
test
mov
mov
je
mov
movsx
jmp
mov
mov
mov
mov
test
mov
je
lea
mov
sub
cmp
jne
mov
test
jne
mov
mov
push
push
call
add
test
jne
mov
mov
test
mov
mov
je
sub
cmp
jne
mov
test
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
call
test
je
mov
mov
call
nop
mov
push
call
add
test
jne
cmp
jne
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
push
mov
call
mov
mov
mov
mov
add
test
pop
pop
je
sub
cmp
jne
mov
test
jne
mov
mov
mov
push
push
call
add
test
jne
mov
call
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
push
mov
mov
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
lea
mov
mov
mov
mov
add
cmp
mov
jbe
cmp
jb
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
push
push
call
add
mov
lea
lea
cmp
ja
mov
push
push
mov
push
push
call
add
jmp
mov
push
call
add
mov
mov
mov
mov
mov
mov
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
je
mov
mov
cmp
jne
pop
mov
pop
pop
mov
xor
call
add
ret
mov
or
pop
sub
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
cmp
jne
mov
call
mov
lea
cmp
ja
movzx
jmp
test
mov
jne
mov
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
test
mov
jne
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
add
test
push
je
mov
push
push
jmp
mov
push
push
call
mov
add
push
push
push
push
call
mov
push
push
call
add
jmp
mov
call
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
test
jne
mov
mov
jmp
test
je
push
call
add
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
mov
push
call
add
test
mov
je
mov
mov
mov
mov
lea
sub
sub
push
lea
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
nop
fbstp
inc
jbe
add
jne
add
jbe
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
push
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
mov
lea
cmp
ja
movzx
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
jmp
mov
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
lea
cmp
mov
ja
movzx
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
push
call
add
mov
call
jmp
push
call
add
test
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
xor
xor
mov
mov
lea
lea
mov
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
add
cmp
mov
jge
push
call
add
test
jne
cmp
jle
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
push
call
add
jmp
mov
push
call
add
mov
cmp
jne
mov
push
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
mov
mov
sub
push
add
push
push
call
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
mov
mov
pop
pop
pop
pop
xor
call
add
ret
lea
or
inc
add
add
js
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
jns
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
add
or
or
or
add
or
or
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
mov
xor
push
mov
mov
lea
cmp
ja
movzx
jmp
call
jmp
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
call
cmp
mov
mov
jl
push
mov
mov
call
mov
add
mov
jmp
cmp
je
jmp
lea
mov
cmp
je
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
jne
jmp
push
call
add
test
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
jmp
mov
push
call
add
mov
jmp
pop
pop
pop
mov
pop
mov
xor
call
add
ret
call
cmp
jl
push
mov
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
cmp
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
add
push
lea
push
call
mov
mov
push
push
lea
push
push
push
call
push
mov
mov
call
mov
mov
mov
push
push
push
push
call
mov
push
push
call
add
xor
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
cmp
mov
je
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
pop
mov
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
pop
mov
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
push
mov
call
mov
add
test
push
je
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
mov
mov
mov
call
neg
pop
sbb
pop
neg
pop
add
pop
mov
xor
call
add
ret
call
add
test
jne
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
pop
pop
pop
mov
pop
mov
xor
call
add
ret
mov
push
call
add
test
jne
mov
push
call
add
test
jne
mov
cmp
je
mov
mov
cmp
lea
mov
jbe
mov
mov
movzx
add
mov
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
mov
push
call
add
mov
mov
pop
pop
pop
pop
mov
xor
call
add
ret
lea
mov
push
mov
call
mov
mov
add
test
lea
mov
jbe
mov
mov
movzx
add
mov
jmp
mov
push
call
add
push
mov
call
add
test
jne
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
jbe
pop
pop
movzx
pop
add
pop
mov
xor
call
add
ret
mov
pop
pop
mov
pop
pop
xor
mov
call
add
ret
cmp
inc
add
add
inc
add
test
add
jg
add
jge
add
inc
add
inc
add
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
add
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
push
mov
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
sub
mov
mov
lea
lea
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
mov
or
add
add
cmp
jl
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
call
add
cmp
jne
mov
mov
shl
or
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
je
sub
je
mov
mov
jmp
mov
mov
jmp
mov
mov
test
je
mov
mov
mov
push
push
call
add
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
fcomp
fnstsw
test
jp
mov
ret
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
add
cmp
push
ja
jmp
fld
sub
fstp
call
add
pop
pop
ret
mov
mov
shl
mov
pop
sub
and
shl
add
pop
ret
mov
mov
shl
pop
sub
and
shl
add
pop
ret
mov
mov
mov
shl
xor
sub
or
div
pop
mov
shl
add
pop
ret
lea
add
inc
add
inc
add
test
jmp
inc
or
push
mov
jne
or
pop
add
ret
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
pop
add
ret
push
mov
mov
call
mov
push
jmp
lea
lea
push
push
call
add
test
jne
cmp
jne
cmp
jl
mov
cmp
je
mov
test
jne
mov
push
push
call
add
pop
pop
xor
pop
add
ret
mov
sub
pop
sar
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
mov
push
push
call
mov
add
add
cmp
jge
mov
mov
shl
lea
nop
cmp
jne
add
add
cmp
jl
sub
mov
mov
shl
cmp
jge
mov
mov
shl
lea
jmp
lea
cmp
jne
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
fild
mov
shl
fstp
add
mov
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
shl
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
pop
pop
mov
pop
ret
push
push
mov
push
push
xor
xor
xor
cmp
lea
jle
mov
lea
mov
mov
test
jle
add
mov
cdq
sub
sar
cmp
jle
mov
mov
cmp
je
add
add
mov
cdq
sub
sar
cmp
jl
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
push
mov
push
push
push
push
xor
mov
mov
mov
mov
mov
xor
cmp
mov
jle
mov
cmp
jg
jmp
cmp
jg
mov
mov
mov
sub
shl
add
lea
add
cmp
je
add
add
sub
jne
mov
add
add
add
add
cmp
jle
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
push
mov
shl
push
mov
mov
test
je
mov
shl
mov
sub
add
sub
cmp
je
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
mov
lea
add
add
mov
jmp
xor
add
add
test
jne
mov
mov
add
mov
pop
pop
mov
pop
ret
mov
mov
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
cmp
ja
mov
mov
shl
push
mov
shl
push
push
push
call
add
jmp
push
call
add
mov
cmp
mov
jge
mov
mov
shl
sub
xor
push
mov
mov
add
sub
jne
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
xor
cmp
jne
xor
shl
mov
add
mov
mov
pop
pop
pop
ret
add
push
call
mov
add
add
cmp
jle
mov
push
push
call
add
mov
mov
shl
lea
cmp
ja
mov
mov
shl
push
push
push
push
call
add
jmp
mov
push
call
add
cmp
mov
jle
xor
mov
nop
mov
add
add
sub
mov
mov
mov
jne
shl
add
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
xor
push
push
push
call
mov
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
push
mov
call
add
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
push
mov
je
mov
mov
shl
push
shl
push
push
push
call
add
mov
mov
push
shl
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
lea
cmp
jae
mov
shl
lea
pop
add
ret
fild
fst
fldz
fucomp
fnstsw
test
jp
mov
jmp
mov
mov
push
add
mov
mov
shl
xor
sub
or
div
pop
shl
add
mov
cmp
jne
fcom
fnstsw
test
jnp
mov
test
jne
mov
fstp
pop
add
ret
mov
fstp
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
shl
mov
sub
and
shl
add
mov
cmp
jne
cmp
je
mov
test
jne
mov
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
mov
sub
je
sub
je
sub
jne
mov
pop
add
mov
jmp
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
mov
push
push
call
add
pop
add
ret
mov
push
mov
call
mov
lea
lea
push
push
call
add
test
jne
mov
test
jne
pop
mov
pop
add
ret
mov
pop
pop
add
ret
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
cmp
mov
jne
mov
test
push
mov
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
push
push
mov
call
add
cmp
je
mov
mov
add
cmp
ja
push
push
call
add
cmp
jne
mov
sub
cmp
jbe
push
lea
shr
push
push
call
add
cmp
jne
mov
jmp
mov
push
push
call
add
cmp
je
add
push
push
call
add
cmp
jne
lea
pop
pop
pop
ret
mov
mov
sub
cmp
ja
pop
pop
pop
mov
pop
ret
mov
mov
test
push
jbe
mov
mov
shl
cmp
jne
xor
cmp
jbe
push
lea
shr
mov
shl
cmp
jne
mov
jmp
mov
mov
sub
cmp
ja
pop
mov
pop
ret
cmp
je
pop
mov
jmp
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
movzx
mov
cmp
mov
push
mov
mov
jle
mov
mov
call
mov
mov
push
mov
call
add
cmp
jge
lea
mov
mov
mov
shl
mov
mov
mov
mov
sub
jmp
lea
mov
mov
cmp
lea
je
mov
push
push
call
add
cmp
jne
fild
mov
lea
push
push
fstp
push
mov
call
add
mov
mov
mov
mov
mov
mov
mov
add
add
sub
jne
cmp
ja
mov
mov
push
shl
push
push
push
call
add
mov
jmp
mov
push
call
mov
add
mov
jmp
mov
mov
mov
shl
lea
test
mov
jl
mov
mov
shl
lea
cmp
je
push
push
call
add
cmp
mov
jne
mov
test
jne
push
jmp
cmp
jne
fld
fld
fucompp
fnstsw
test
jnp
push
push
call
add
push
push
push
call
add
mov
mov
mov
mov
mov
mov
mov
sub
sub
test
jge
mov
cmp
je
push
shl
push
push
push
call
add
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
xor
push
mov
push
push
call
add
ret
mov
mov
shl
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
mov
mov
call
add
add
cmp
jne
fld
fstp
fld
fistp
fild
fcomp
fnstsw
test
jp
mov
test
jle
cmp
jg
add
push
call
lea
add
add
mov
jmp
xor
add
lea
push
lea
call
mov
mov
sub
add
push
push
push
mov
call
add
pop
pop
add
ret
int3
int3
int3
push
mov
push
push
mov
push
mov
mov
call
mov
cmp
jne
cmp
jne
mov
cmp
mov
jbe
add
mov
cmp
je
mov
cmp
ja
add
jmp
test
jne
mov
push
mov
mov
call
push
push
push
call
add
pop
pop
pop
pop
ret
lea
mov
call
cmp
je
cmp
je
mov
cmp
jne
mov
mov
mov
rep
mov
xor
mov
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jl
mov
test
je
test
je
mov
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
call
add
cmp
jne
mov
lea
push
push
push
mov
mov
call
add
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movzx
and
sub
cmp
ja
push
mov
mov
jmp
mov
or
test
je
test
je
push
push
call
add
mov
test
je
and
movzx
sub
cmp
jbe
pop
pop
ret
mov
cmp
jl
mov
test
je
push
push
call
add
lea
cmp
jne
or
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
mov
mov
mov
pop
pop
ret
adc
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
push
push
mov
mov
xor
test
je
mov
test
jne
cmp
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
or
mov
mov
mov
mov
test
lea
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
xor
cmp
mov
mov
je
test
je
push
mov
push
call
add
mov
cmp
je
test
jne
mov
mov
push
push
push
call
mov
add
cmp
je
cmp
jne
mov
add
push
push
call
mov
mov
neg
sbb
add
push
neg
push
mov
call
add
neg
sbb
neg
test
mov
jne
test
je
mov
mov
add
or
add
add
add
and
or
mov
mov
mov
mov
mov
test
je
test
je
pop
pop
pop
mov
pop
pop
ret
test
jne
mov
test
je
mov
mov
shl
jmp
lea
mov
sub
add
sub
cmp
jl
mov
test
je
push
push
call
add
test
jne
mov
mov
shl
test
je
mov
shl
lea
mov
sub
add
sub
cmp
jne
cmp
jl
mov
jmp
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
cmp
jne
cmp
jl
mov
test
je
mov
push
push
call
add
test
jne
cmp
jne
cmp
jne
pop
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
cmp
je
mov
and
push
xor
cmp
jle
push
xor
jmp
lea
mov
add
cmp
jl
mov
test
je
mov
push
push
call
add
add
add
cmp
jl
pop
xor
cmp
jle
mov
cmp
je
mov
mov
and
add
cmp
jl
xor
cmp
jle
mov
cmp
lea
je
mov
test
je
push
mov
push
call
add
add
cmp
jl
xor
cmp
jle
xor
jmp
lea
mov
cmp
je
mov
lea
mov
mov
mov
and
mov
add
add
cmp
jl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
push
push
call
add
cmp
push
push
je
xor
cmp
jbe
lea
cmp
jl
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
mov
test
je
push
push
call
add
xor
cmp
jbe
lea
lea
mov
test
je
push
push
call
add
movzx
add
add
cmp
jl
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jl
mov
test
je
push
mov
push
call
add
mov
mov
cmp
push
mov
push
push
mov
ja
nop
mov
cmp
jae
mov
add
cmp
jbe
mov
cmp
jae
cmp
jl
mov
test
je
mov
push
push
call
add
add
cmp
jb
cmp
ja
xor
mov
add
cmp
jbe
sub
mov
sar
cmp
jg
mov
sub
mov
imul
sar
mov
shr
add
add
add
cmp
jge
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
lea
cmp
jge
cmp
jle
cdq
sub
sar
push
push
call
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
movzx
or
add
cmp
ja
jmp
mov
push
push
mov
call
add
test
je
and
mov
mov
mov
shl
pop
pop
lea
shl
ret
mov
mov
call
cmp
movzx
je
shl
pop
add
pop
ret
pop
lea
pop
ret
mov
mov
mov
push
mov
mov
and
push
mov
call
mov
mov
add
add
pop
lea
shl
pop
lea
pop
ret
mov
push
mov
call
mov
mov
lea
lea
add
add
add
add
add
pop
lea
pop
ret
pop
xor
pop
ret
xor
inc
add
cdq
inc
add
cdq
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
push
push
mov
test
mov
je
test
je
mov
shl
jmp
lea
mov
sub
mov
add
sub
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
mov
test
jne
mov
mov
shl
test
je
mov
shl
nop
mov
sub
add
sub
cmp
je
mov
cmp
jl
mov
jne
and
jmp
test
jne
mov
cmp
jl
jne
mov
and
jmp
mov
mov
test
jne
cmp
jne
test
je
cmp
mov
jl
mov
test
jne
mov
test
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
movzx
add
cmp
ja
jmp
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
push
push
call
add
ret
mov
add
mov
push
add
push
push
push
call
add
ret
mov
push
add
push
push
push
call
add
ret
lea
pop
fwait
inc
add
add
fwait
inc
add
inc
add
inc
add
fwait
inc
add
fwait
inc
add
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
movzx
push
push
mov
mov
xor
test
je
lea
mov
mov
sub
test
mov
jbe
cmp
jne
mov
push
lea
push
push
call
add
mov
movzx
xor
test
je
mov
and
and
or
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
call
mov
test
jne
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
mov
cdq
and
add
sar
cmp
jae
cmp
jle
mov
cdq
sub
sar
push
push
call
add
mov
cmp
jbe
push
mov
shr
lea
cmp
ja
mov
push
push
push
push
call
add
mov
pop
mov
pop
ret
push
call
add
mov
mov
pop
pop
ret
int3
int3
int3
int3
push
push
push
mov
mov
mov
cmp
jne
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
or
mov
test
mov
je
test
jne
mov
mov
push
push
push
call
add
test
je
mov
push
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
add
mov
push
add
push
push
call
mov
add
mov
mov
pop
pop
pop
pop
ret
int3
int3
push
mov
mov
cmp
je
mov
call
mov
cmp
jne
pop
ret
push
mov
push
mov
push
push
lea
push
push
mov
call
xor
add
cmp
jle
mov
push
lea
push
push
call
add
add
cmp
jl
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
lea
mov
mov
test
je
test
je
push
push
call
add
add
sub
jne
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jl
mov
test
je
push
push
call
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
cmp
je
nop
test
jne
mov
cmp
jl
mov
test
je
push
push
call
add
mov
cmp
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
call
xor
cmp
je
mov
call
cmp
jne
mov
mov
mov
test
je
push
push
call
add
push
call
add
cmp
je
jmp
lea
mov
call
cmp
jne
mov
cmp
mov
mov
je
lea
mov
call
cmp
jne
mov
mov
mov
mov
test
je
lea
mov
test
je
test
je
mov
jmp
mov
test
je
test
jne
mov
mov
mov
push
push
push
call
add
test
jne
or
mov
jmp
mov
mov
or
lea
mov
mov
mov
test
mov
jne
mov
jmp
mov
mov
mov
mov
mov
mov
test
jne
mov
test
je
mov
mov
mov
mov
and
and
or
push
push
mov
call
add
cmp
jne
xor
cmp
je
mov
call
add
cmp
jne
mov
push
call
mov
xor
add
sub
sub
lea
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
movzx
cmp
push
ja
jmp
mov
call
pop
pop
xor
pop
ret
cmp
je
pop
pop
mov
pop
jmp
push
call
add
pop
pop
xor
pop
ret
mov
mov
mov
lea
push
push
add
push
mov
call
mov
add
cmp
jl
mov
mov
sub
add
pop
pop
mov
pop
ret
mov
mov
push
push
push
call
add
mov
cmp
jne
push
mov
call
mov
pop
mov
sub
add
pop
pop
mov
pop
ret
xor
cmp
je
call
mov
cmp
jbe
add
mov
pop
pop
mov
pop
ret
mov
mov
pop
pop
xor
pop
ret
mov
ins
mov
inc
add
mov
inc
add
pop
and
push
mov
mov
push
lea
add
jne
mov
mov
sub
add
mov
call
sub
cmp
je
test
jg
cmp
je
mov
cmp
jae
mov
add
pop
mov
pop
pop
ret
mov
add
pop
mov
mov
pop
pop
ret
mov
mul
shr
imul
pop
mov
pop
pop
ret
int3
int3
int3
push
push
mov
mov
cmp
ja
xor
lea
mov
mov
mov
mov
mov
mov
cmp
je
lea
mov
call
cmp
jne
call
cmp
je
mov
call
cmp
jne
mov
mul
shr
imul
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
jne
mov
push
push
call
add
ret
mov
mov
mov
and
and
or
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
and
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
or
mov
cmp
jl
mov
test
je
test
je
push
push
push
call
add
pop
pop
ret
mov
and
and
or
mov
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
shl
add
push
push
push
push
call
mov
push
push
push
call
mov
add
pop
mov
mov
mov
mov
pop
pop
ret
push
mov
push
mov
push
push
lea
push
push
push
push
call
mov
push
push
push
call
mov
add
test
mov
mov
mov
je
lea
sub
sub
test
mov
jne
pop
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
push
push
push
call
lea
add
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
push
mov
push
lea
push
mov
je
mov
mov
cmp
jb
je
cmp
mov
jne
push
push
push
push
call
mov
mov
mov
add
and
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
pop
pop
pop
ret
mov
movzx
movzx
and
not
test
je
pop
xor
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
lea
cmp
je
mov
push
mov
mov
mov
mov
mov
pop
push
push
push
mov
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
push
mov
je
push
mov
push
lea
mov
cmp
jb
mov
mov
movzx
movzx
not
and
test
lea
je
cmp
je
mov
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
call
add
cmp
jne
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
xor
push
push
push
call
mov
push
push
push
call
add
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
push
mov
mov
mov
push
mov
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
mov
push
shl
push
push
push
call
mov
mov
add
push
add
push
push
push
call
mov
lea
mov
add
add
push
add
push
push
push
call
mov
mov
add
push
add
push
push
push
call
push
push
push
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
movzx
je
shl
add
push
push
mov
push
push
call
add
ret
lea
push
push
mov
push
push
call
add
ret
int3
mov
mov
push
push
xor
test
push
jle
mov
mov
mov
lea
mov
cmp
jg
cmp
jge
sub
je
add
add
cmp
jl
pop
pop
xor
pop
ret
lea
mov
pop
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
mov
add
cmp
push
mov
ja
jmp
push
push
push
call
add
mov
mov
add
mov
pop
pop
ret
push
push
jmp
mov
mov
sub
mov
mov
mov
mov
mov
add
mov
pop
pop
ret
push
cmps
inc
add
cmps
inc
add
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
lea
push
mov
lea
push
push
mov
mov
call
add
test
jne
mov
mov
push
push
call
mov
mov
add
mov
pop
mov
pop
ret
mov
mov
mov
mov
pop
mov
pop
ret
int3
int3
int3
int3
mov
sub
sar
shl
add
push
mov
mov
test
je
lea
mov
sub
sar
shl
add
mov
mov
test
jne
mov
cmp
ja
nop
mov
sub
sar
shl
add
add
mov
mov
sub
sar
shl
add
mov
mov
sub
sar
shl
add
mov
cmp
jbe
mov
sub
sar
shl
add
pop
mov
ret
int3
int3
push
push
push
mov
mov
push
mov
lea
lea
cmp
ja
mov
mov
shl
push
shl
push
push
push
call
add
jmp
push
call
add
shl
add
mov
pop
mov
mov
mov
pop
mov
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
mov
lea
cmp
ja
mov
lea
add
lea
add
add
add
push
add
add
push
push
push
call
add
jmp
push
call
add
mov
mov
sub
mov
imul
sar
mov
shr
add
lea
lea
lea
mov
lea
pop
mov
mov
mov
pop
pop
pop
ret
int3
int3
int3
int3
int3
mov
mov
mov
cmp
mov
jg
add
mov
jmp
add
mov
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
mov
je
cmp
je
mov
mov
mov
push
mov
push
mov
push
mov
sub
sub
mov
cmp
mov
mov
jne
mov
jmp
sub
mov
mov
imul
sar
mov
shr
add
mov
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
mov
lea
add
push
mov
push
mov
call
mov
mov
add
add
mov
mov
mov
add
pop
pop
mov
pop
mov
pop
xor
call
add
ret
int3
int3
sub
push
movzx
push
push
mov
xor
cmp
mov
jge
mov
sub
add
mov
mov
mov
add
sub
jne
test
je
mov
mov
mov
sub
cmp
mov
jb
push
call
add
push
push
push
call
mov
add
xor
test
jle
mov
neg
shl
mov
jmp
lea
mov
mov
mov
lea
push
push
push
add
call
mov
add
mov
mov
mov
mov
mov
mov
add
cmp
jl
mov
mov
push
push
push
call
mov
push
push
push
call
fild
mov
add
fstp
mov
mov
shl
mov
sub
test
jle
add
lea
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
jne
test
je
mov
lea
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
call
mov
sub
mov
add
cmp
je
push
push
push
call
add
mov
cmp
jbe
lea
mov
mov
mov
mov
mov
mov
sub
sub
cmp
ja
mov
sub
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
add
mov
mov
add
mov
mov
mov
mov
pop
mov
pop
ret
sub
push
push
push
push
mov
call
mov
mov
mov
add
cmp
jne
test
je
mov
mov
test
lea
mov
je
push
push
push
call
add
test
jne
mov
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
mov
test
push
je
call
mov
lea
mov
mov
test
mov
mov
mov
mov
mov
mov
je
push
lea
cmp
jae
mov
mov
mov
mov
mov
mov
mov
add
add
sub
mov
jne
pop
xor
cmp
jle
jmp
lea
sub
mov
add
cmp
jg
mov
pop
mov
pop
add
pop
ret
int3
int3
int3
int3
int3
mov
push
push
mov
mov
mov
lea
nop
mov
add
test
jne
sub
push
push
push
call
mov
mov
mov
sub
mov
add
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
mov
pop
ret
add
push
push
call
add
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jbe
push
push
call
add
mov
mov
shl
sub
mov
mov
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
call
mov
mov
mov
mov
add
cmp
jb
push
call
add
cmp
mov
je
mov
mov
push
mov
lea
push
push
push
call
mov
mov
movzx
push
push
push
call
xor
add
mov
cmp
mov
jbe
push
lea
nop
push
call
mov
movzx
add
add
add
cmp
jl
mov
pop
mov
mov
mov
mov
sub
mov
cmp
jg
mov
cmp
jl
lea
push
push
call
add
add
pop
pop
pop
ret
add
push
push
call
add
add
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
mov
call
mov
mov
push
push
push
call
mov
add
cmp
mov
mov
jle
mov
sub
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
add
xor
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
je
mov
mov
mov
push
add
push
call
mov
mov
mov
cmp
je
push
call
mov
mov
push
call
add
push
call
int3
int3
int3
int3
int3
int3
mov
cmp
jle
push
push
call
add
push
push
call
add
cmp
jle
push
push
call
add
add
mov
ret
int3
int3
int3
mov
cmp
push
push
mov
push
je
mov
call
mov
mov
mov
sub
mov
mov
mov
sub
cmp
mov
jne
push
mov
movzx
mov
shl
cmp
jg
mov
cmp
jg
lea
push
jmp
add
push
push
call
add
mov
add
cmp
jne
movzx
shl
lea
lea
cmp
jbe
mov
jmp
mov
sub
sar
sub
push
mov
call
mov
add
add
mov
mov
cmp
jne
call
jmp
add
mov
mov
mov
mov
movzx
shl
add
mov
mov
mov
mov
xor
mov
mov
mov
cmp
pop
jae
jmp
lea
mov
add
cmp
jb
test
mov
mov
je
add
push
push
push
call
add
add
pop
pop
xor
pop
ret
cmp
jg
mov
cmp
jl
lea
push
jmp
add
push
push
call
add
mov
cmp
jne
call
jmp
add
mov
mov
add
mov
add
mov
mov
mov
mov
add
mov
mov
test
je
push
push
push
call
add
mov
mov
mov
mov
push
call
add
test
jge
pop
pop
mov
pop
ret
mov
shl
sub
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
add
movzx
cmp
jb
jne
push
push
call
add
mov
mov
push
push
push
call
add
test
jne
push
push
call
add
mov
add
mov
cmp
jb
push
call
add
pop
ret
cmp
jb
push
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
mov
jne
mov
push
add
push
push
call
add
test
jne
jmp
mov
mov
mov
cmp
je
mov
push
push
call
add
test
je
mov
mov
mov
jmp
mov
mov
mov
sub
mov
imul
sar
mov
shr
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
test
jne
mov
cmp
je
mov
call
pop
ret
movzx
cmp
jb
mov
call
pop
ret
mov
mov
shl
push
sub
push
add
push
push
mov
mov
call
mov
add
test
je
mov
push
push
push
mov
call
mov
mov
add
mov
mov
add
pop
pop
ret
movzx
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
push
push
push
mov
movzx
mov
mov
sub
push
mov
mov
mov
mov
mov
push
push
push
mov
mov
call
mov
add
test
je
mov
add
push
push
call
push
push
push
call
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
add
cmp
mov
jle
sub
mov
mov
imul
sar
mov
shr
lea
cmp
jge
push
push
call
mov
add
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
mov
pop
mov
pop
pop
add
ret
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
sub
mov
mov
push
mov
mov
push
mov
mov
sub
push
push
mov
lea
push
push
push
mov
mov
call
mov
push
mov
mov
push
push
push
call
add
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
push
push
call
add
test
jne
push
call
add
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
call
add
test
je
cmp
je
push
push
push
call
add
push
push
call
push
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
call
add
test
jne
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
cmp
jne
push
push
call
push
push
call
mov
add
push
push
push
call
add
ret
push
push
push
call
mov
add
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
push
lea
push
push
push
mov
call
add
push
push
mov
call
add
test
je
lea
push
push
push
call
add
push
push
call
add
test
jne
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
call
add
cmp
jne
push
push
push
call
push
push
push
call
push
push
mov
call
push
push
push
call
add
lea
push
push
push
call
add
test
jne
mov
push
push
jmp
push
push
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
lea
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
add
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
add
push
push
call
add
test
je
push
mov
call
add
push
push
call
add
test
je
push
mov
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
push
push
call
mov
add
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
add
push
push
call
push
lea
push
push
call
mov
add
test
je
push
push
push
call
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
mov
xor
call
add
ret
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
lea
push
push
call
add
push
push
call
add
test
jne
push
push
push
call
add
pop
pop
pop
pop
mov
xor
call
add
ret
lea
push
push
call
push
push
call
push
push
push
call
add
push
push
call
push
lea
push
push
call
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
pop
xor
pop
ret
push
push
push
call
add
test
je
push
push
call
push
push
call
add
pop
mov
pop
ret
push
mov
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
add
cmp
jne
push
mov
mov
mov
push
push
call
mov
add
test
pop
jl
push
push
call
add
push
push
push
call
add
pop
ret
push
call
add
push
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
push
push
push
xor
call
add
test
je
mov
push
push
call
add
test
je
or
push
push
call
add
test
je
or
cmp
jle
or
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
call
push
push
call
push
push
call
add
cmp
je
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
push
push
call
add
cmp
jne
lea
push
push
call
add
mov
jmp
xor
mov
lea
push
push
call
add
test
jg
push
push
call
xor
add
mov
xor
jmp
push
lea
push
push
call
push
push
push
mov
call
push
add
push
push
call
mov
push
mov
call
add
mov
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
mov
mov
push
push
push
push
call
add
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
mov
jmp
mov
push
push
call
push
mov
call
add
test
je
cmp
je
push
push
push
call
add
jmp
call
push
push
call
push
push
call
push
push
call
add
xor
test
je
mov
mov
test
je
mov
add
test
pop
je
mov
add
mov
lea
push
push
call
push
call
push
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
call
add
push
push
call
call
push
lea
push
push
call
add
test
je
push
push
mov
lea
mov
xor
repz
je
lea
lea
mov
add
test
jne
sub
push
push
lea
push
push
call
add
test
jne
push
push
push
push
call
add
test
je
call
add
push
push
push
push
call
add
push
call
call
add
push
push
call
add
push
push
call
call
add
push
push
call
call
push
lea
push
push
call
add
test
jne
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
push
mov
push
push
mov
call
add
cmp
jne
push
push
mov
call
add
mov
jmp
mov
mov
mov
lea
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
jmp
xor
cmp
sete
mov
push
call
add
cmp
jne
push
push
jmp
lea
push
push
call
add
test
je
push
push
push
call
add
push
push
push
call
lea
push
push
push
call
add
test
je
add
cmp
jle
cmp
je
lea
push
lea
push
push
call
add
test
jne
mov
sub
mov
jmp
push
push
push
call
lea
push
push
push
call
add
test
je
lea
add
push
lea
push
push
call
add
test
jne
mov
mov
jmp
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
mov
add
test
jle
push
push
push
call
add
mov
cmp
je
mov
push
push
push
call
jmp
mov
mov
cmp
jne
push
push
call
add
jmp
cmp
je
cmp
je
mov
push
lea
push
push
push
call
add
jmp
push
push
push
call
add
push
call
sub
push
push
call
add
lea
push
push
push
call
add
test
jne
push
call
sub
push
push
call
add
mov
pop
pop
pop
pop
xor
mov
call
add
ret
mov
push
push
push
call
add
mov
ret
int3
int3
int3
push
mov
push
push
call
fabs
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fstp
call
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
lea
push
push
push
call
fstp
call
fstp
fld
add
fstp
push
call
fld
add
fstp
push
call
add
mov
pop
add
ret
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
fstp
push
push
call
fld
add
fxch
call
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
add
call
sub
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
call
fdiv
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
fmul
fstp
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
fstp
call
fstp
add
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
push
mov
push
push
call
add
push
push
push
call
fstp
call
fstp
add
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jne
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
push
call
push
push
mov
call
fst
mov
add
cmp
jl
push
fstp
push
call
fld
fcom
add
fnstsw
test
jp
fstp
fst
jmp
fstp
add
cmp
jle
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
call
cdq
mov
idiv
mov
push
mov
fild
fdiv
fstp
call
add
sub
je
sub
je
sub
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
mov
push
push
mov
call
mov
add
cmp
jle
push
push
push
call
add
sub
add
mov
fild
sub
fmul
fstp
call
fiadd
jmp
push
push
call
add
cmp
mov
jge
push
push
push
call
add
fild
sub
fmul
fstp
call
fadd
jmp
fld
sub
fstp
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
mov
push
push
call
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
fld
add
fstp
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
lea
push
push
push
call
mov
push
push
call
add
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
lea
push
push
push
call
mov
push
push
mov
call
add
test
jge
lea
xor
test
setl
push
mov
push
push
push
sub
and
mov
call
add
test
jge
lea
xor
test
setl
pop
sub
and
cmp
jge
mov
mov
cmp
jle
mov
cmp
jg
sub
add
push
lea
push
push
call
add
pop
pop
mov
pop
pop
ret
push
push
push
call
add
pop
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
lea
push
mov
push
push
call
lea
push
push
mov
call
add
cmp
je
jmp
lea
nop
sub
lea
cmp
jb
lea
push
call
add
mov
mov
mov
mov
add
cmp
jne
sub
lea
push
call
mov
add
pop
pop
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
push
call
lea
push
push
mov
call
xor
add
cmp
jbe
lea
cmp
jb
lea
push
call
add
movzx
push
call
mov
mov
add
add
add
cmp
jb
lea
push
call
mov
add
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
lea
push
push
push
call
push
push
mov
call
lea
push
push
mov
call
add
test
jle
lea
mov
push
lea
push
push
sub
call
add
test
jg
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
lea
push
push
push
call
mov
push
push
push
mov
call
add
test
jge
lea
mov
xor
test
setl
sub
and
push
push
push
call
add
test
jge
lea
xor
test
setl
sub
and
test
jg
mov
mov
cmp
jbe
mov
cmp
jle
pop
pop
xor
pop
add
ret
mov
sub
add
lea
cmp
jg
push
push
call
add
push
push
push
push
call
add
xor
test
jle
mov
lea
mov
movzx
push
push
call
add
add
cmp
jl
pop
mov
pop
pop
pop
add
ret
int3
sub
mov
xor
mov
push
push
push
mov
push
call
mov
lea
push
push
call
mov
add
cmp
jl
push
mov
push
push
call
mov
movzx
add
cmp
je
push
push
push
call
add
lea
cmp
jb
lea
push
call
add
mov
mov
add
add
cmp
jle
pop
lea
push
call
mov
add
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
push
push
push
call
add
xor
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
call
push
push
call
lea
push
push
call
lea
push
push
push
call
add
test
je
push
push
call
add
lea
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
movsx
add
cmp
je
cmp
je
mov
pop
ret
cmp
jne
add
nop
cmp
jne
mov
push
push
call
add
mov
add
cmp
jne
cmp
je
add
cmp
jne
lea
pop
ret
cmp
jne
mov
push
push
call
add
lea
pop
ret
int3
int3
int3
push
push
mov
call
add
add
cmp
ja
movzx
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
push
call
add
mov
jmp
xor
test
sete
mov
push
call
add
test
je
mov
pop
ret
xor
test
sete
pop
ret
xor
cmp
sete
pop
ret
nop
(bad)
rol
rcl
inc
add
rol
in
rol
cli
rol
pop
rol
adc
inc
add
rol
rol
cmp
inc
add
inc
add
or
add
or
or
or
add
or
add
or
or
or
int3
push
push
push
mov
cmp
push
mov
jne
mov
add
mov
add
cmp
jae
lea
lea
mov
cmp
jne
movzx
add
mov
add
call
test
jne
mov
jmp
cmp
jne
cmp
jae
movzx
add
add
cmp
jg
movzx
cmp
jg
mov
pop
pop
pop
pop
ret
movzx
cmp
je
add
add
cmp
jb
xor
cmp
pop
pop
sete
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
mov
je
cmp
jne
mov
push
push
call
add
mov
cmp
je
pop
xor
pop
ret
mov
movsx
mov
add
cmp
push
movsx
jae
movsx
cmp
jne
sub
jne
pop
pop
lea
pop
ret
cmp
jne
add
add
cmp
jb
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
xor
cmp
jae
push
mov
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
mov
add
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
add
add
cmp
jb
test
pop
jl
mov
add
mov
push
lea
push
push
call
add
test
jne
sub
jns
xor
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
mov
lea
push
mov
push
push
call
add
test
jne
mov
cmp
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
jmp
lea
push
mov
call
add
jmp
movzx
mov
call
mov
test
je
mov
lea
push
add
push
push
call
add
test
je
pop
pop
pop
pop
ret
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmp
jl
mov
push
push
call
add
mov
mov
push
mov
mov
push
add
push
mov
call
add
test
pop
jne
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
js
lea
lea
cmp
je
sub
sub
test
jge
mov
push
push
call
add
mov
mov
push
mov
sub
push
push
mov
call
add
test
jne
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
add
push
push
mov
js
cmp
jge
cmp
jne
mov
push
push
call
add
mov
mov
sub
cmp
jb
cmp
mov
push
mov
mov
jb
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
pop
jne
lea
pop
pop
ret
pop
xor
pop
ret
int3
int3
int3
int3
push
push
push
mov
push
mov
lea
movsx
cmp
ja
movzx
jmp
mov
cmp
je
cmp
je
movzx
push
call
add
test
je
movzx
mov
mov
call
mov
test
je
add
jmp
mov
add
cmp
je
mov
push
push
call
add
mov
call
cmp
mov
jne
xor
jmp
mov
lea
movzx
push
mov
call
add
test
jne
movzx
push
mov
call
add
test
jne
xor
pop
pop
pop
pop
ret
mov
lea
mov
call
mov
test
je
add
jmp
cmp
je
mov
mov
call
cmp
mov
mov
jae
mov
cmp
movzx
je
cmp
je
cmp
je
movzx
xor
cmp
sete
mov
jmp
add
push
mov
mov
call
mov
add
jmp
movzx
mov
call
mov
test
je
mov
jmp
xor
movsx
add
cmp
ja
movzx
jmp
test
je
lea
push
lea
push
push
call
add
test
jne
lea
jmp
test
je
add
mov
jmp
cmp
lea
mov
mov
jne
push
add
push
call
add
pop
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
pop
ret
add
mov
mov
push
call
add
pop
pop
pop
pop
ret
pop
mov
pop
pop
pop
ret
mov
xor
cmp
pop
setne
sub
and
pop
pop
pop
ret
push
push
push
push
call
add
pop
pop
pop
pop
ret
test
je
push
push
add
push
push
call
add
pop
pop
pop
pop
ret
push
push
push
mov
call
add
pop
pop
pop
pop
ret
lea
jne
inc
add
inc
add
xlat
inc
add
inc
add
add
add
add
add
add
add
add
add
add
add
call
xlat
inc
add
(bad)
inc
add
xlat
inc
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
mov
push
mov
je
cmp
jbe
pop
xor
pop
ret
sub
sub
push
push
jne
pop
xor
pop
pop
pop
ret
lea
mov
mov
movsx
push
push
push
call
add
test
je
add
cmp
lea
mov
mov
jb
lea
mov
cmp
jne
sub
add
add
cmp
jae
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
jne
sub
add
add
test
je
movzx
movzx
sub
je
test
mov
jg
or
jmp
xor
test
je
mov
sub
add
mov
jne
pop
pop
pop
xor
pop
ret
pop
pop
pop
add
pop
ret
int3
int3
cmp
jl
test
jne
sub
push
mov
push
push
call
add
ret
mov
push
push
call
add
ret
push
mov
cmp
jne
mov
push
push
call
add
mov
mov
push
push
push
call
add
pop
ret
cmp
jne
mov
sub
mov
add
push
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
mov
test
push
jne
test
je
mov
mov
push
push
push
call
add
xor
test
jle
mov
mov
call
add
cmp
jl
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
sub
push
push
push
lea
push
push
push
call
lea
push
push
push
mov
call
mov
push
push
push
mov
mov
call
add
test
jge
lea
xor
test
setl
sub
and
mov
sub
mov
jns
xor
jmp
cmp
jbe
mov
cmp
je
push
push
call
add
test
jne
push
push
call
add
test
jne
mov
sub
push
push
mov
add
push
call
add
test
je
mov
sub
lea
push
push
call
mov
add
push
push
call
add
pop
pop
mov
pop
add
ret
mov
cmp
jne
add
mov
mov
jmp
mov
add
add
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
mov
add
cmp
jae
cmp
jne
mov
jmp
cmp
je
sub
add
push
push
call
sub
push
push
call
push
push
lea
call
add
pop
pop
add
pop
add
ret
push
push
lea
call
add
pop
pop
pop
add
ret
push
call
add
pop
pop
mov
pop
add
ret
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
push
lea
push
push
push
call
push
push
push
mov
call
mov
add
push
push
mov
mov
mov
mov
call
mov
add
add
cmp
ja
mov
mov
push
lea
push
push
mov
call
mov
add
test
jne
add
cmp
jbe
pop
pop
pop
xor
pop
add
ret
mov
sub
cmp
jne
add
push
push
call
push
push
call
mov
add
test
jne
test
je
mov
mov
jmp
mov
mov
mov
push
push
push
call
add
xor
test
jle
lea
mov
mov
lea
call
add
cmp
jl
mov
pop
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
push
lea
push
push
push
call
xor
add
cmp
mov
mov
jbe
lea
cmp
je
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
movzx
add
push
call
add
test
jne
lea
cmp
jb
push
call
add
mov
mov
mov
add
jmp
mov
cmp
jne
mov
mov
sub
push
push
push
call
add
jmp
mov
movsx
mov
sub
call
push
call
mov
add
add
cmp
jb
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
push
push
mov
mov
push
push
mov
call
add
add
cmp
ja
jmp
mov
push
mov
push
mov
call
add
pop
pop
pop
ret
push
push
call
mov
push
push
mov
call
push
push
push
call
add
jmp
mov
push
mov
xor
call
push
push
call
add
pop
push
push
call
add
test
jne
push
push
call
mov
sub
push
push
push
call
mov
add
push
call
add
pop
pop
pop
ret
push
push
call
add
test
jne
push
push
call
push
push
call
push
push
push
call
add
mov
push
call
add
pop
pop
pop
ret
xchg
fiadd
xchg
fiadd
iret
fiadd
lods
fiadd
sub
mov
xor
mov
push
push
push
push
mov
lea
push
push
push
call
push
push
push
mov
call
push
push
mov
call
mov
add
push
push
push
mov
call
add
cmp
mov
jne
add
mov
jmp
mov
cmp
mov
je
cmp
je
cmp
je
cmp
je
push
push
push
call
add
lea
push
push
call
mov
add
add
cmp
mov
mov
mov
jle
push
lea
push
push
mov
call
mov
add
test
je
add
lea
push
push
lea
call
add
cmp
jbe
mov
jmp
mov
cmp
jae
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
cmp
jne
mov
cmp
jl
mov
sub
push
lea
push
push
call
lea
push
call
mov
push
push
call
mov
add
pop
pop
pop
pop
xor
mov
call
add
ret
push
push
push
lea
push
push
push
call
lea
add
cmp
mov
jb
push
call
add
mov
mov
add
cmp
je
lea
sub
movsx
cmp
ja
movzx
jmp
cmp
jb
push
call
add
mov
mov
add
cmp
jb
push
call
add
mov
mov
mov
jmp
push
push
push
call
add
jmp
push
push
push
call
add
jmp
cmp
jb
push
call
add
mov
mov
mov
add
add
cmp
jne
sub
cmp
pop
pop
jb
push
call
add
mov
mov
add
pop
ret
nop
mov
inc
add
inc
add
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
push
push
mov
mov
je
movsx
push
push
call
add
test
je
add
cmp
jne
mov
sub
cmp
jb
push
push
call
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
add
cmp
jne
movzx
add
push
call
add
test
je
add
movzx
push
call
add
test
je
add
movzx
push
call
add
test
je
push
push
call
add
mov
sub
lea
push
mov
add
push
push
call
add
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
lea
push
mov
push
push
call
mov
lea
mov
push
lea
push
mov
call
add
cmp
jae
cmp
je
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
add
cmp
jne
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
add
jmp
lea
push
mov
add
call
mov
movsx
sub
add
add
cmp
ja
movzx
jmp
push
push
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
lea
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
call
push
lea
push
lea
push
call
add
jmp
lea
lea
nop
mov
add
test
jne
sub
mov
mov
push
push
mov
mov
call
fnstcw
movzx
or
mov
fldcw
fistp
mov
push
fldcw
jmp
push
push
call
fstp
lea
push
lea
push
call
add
jmp
mov
lea
mov
call
jmp
lea
push
push
push
call
lea
push
push
mov
call
add
test
jne
cmp
jb
push
push
call
lea
push
call
jmp
push
lea
push
lea
push
call
add
lea
lea
mov
mov
add
test
jne
sub
push
lea
push
lea
push
call
add
cmp
jb
lea
push
call
add
mov
mov
pop
pop
pop
pop
xor
call
add
ret
movsx
push
push
push
call
add
jmp
nop
inc
in
add
in
add
inc
add
inc
add
inc
add
inc
add
out
add
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
push
push
push
push
push
add
add
add
add
push
push
push
push
add
add
add
add
int3
int3
int3
push
push
push
call
push
push
push
call
push
push
call
push
push
call
push
push
call
push
push
call
push
push
push
call
add
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
push
push
call
add
call
mov
pop
ret
int3
int3
push
mov
push
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
push
push
call
push
push
push
mov
call
push
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
push
call
push
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
lea
push
call
add
test
jne
push
push
call
add
pop
mov
xor
call
add
ret
lea
push
push
call
mov
add
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
call
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
call
mov
fild
mov
sub
fdiv
fstp
push
call
mov
add
ret
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
push
push
push
push
call
push
push
mov
call
add
test
jg
push
call
add
jmp
push
push
call
add
call
mov
mov
cmp
jne
lea
push
call
add
add
jmp
lea
push
call
add
test
mov
jne
push
call
add
jmp
push
push
mov
mov
mov
xor
repz
jne
push
push
push
call
mov
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
push
push
call
add
push
push
push
call
mov
add
push
push
call
push
push
push
call
mov
add
test
jl
push
push
call
push
push
push
call
add
jmp
lea
push
push
mov
mov
call
mov
add
test
je
cmp
jne
cmp
je
mov
mov
push
add
lea
push
mov
lea
push
push
call
push
lea
push
lea
push
call
add
jmp
lea
cmp
jb
lea
push
call
add
mov
mov
mov
add
mov
add
test
jne
lea
push
call
add
pop
pop
mov
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
sub
push
mov
push
push
call
add
test
jg
push
call
add
jmp
push
push
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
xor
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
add
mov
jmp
mov
push
push
call
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
je
push
push
call
push
push
mov
call
add
mov
jmp
push
push
push
call
add
push
add
push
push
mov
call
push
push
call
add
test
jne
or
jmp
push
push
call
add
mov
push
push
call
lea
push
mov
call
add
pop
mov
and
cmp
mov
jne
push
call
add
mov
pop
add
ret
fild
sub
fstp
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
push
sub
fstp
push
push
call
call
push
push
mov
mov
call
call
push
push
push
push
call
fstp
add
push
call
add
pop
pop
mov
pop
ret
int3
push
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
push
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
push
call
add
mov
ret
int3
int3
int3
call
mov
push
call
mov
push
push
push
push
call
push
push
push
call
mov
push
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
call
push
push
push
mov
call
add
test
je
push
push
call
add
test
je
push
push
push
call
add
test
je
cmp
jne
push
push
push
call
add
pop
mov
pop
ret
push
push
push
call
add
pop
mov
pop
ret
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
call
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
mov
push
call
add
xor
cmp
setne
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
call
mov
mov
push
call
add
mov
neg
sbb
add
mov
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
call
add
cmp
jne
push
push
push
call
add
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
je
push
push
call
push
push
push
call
add
push
push
push
call
add
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
mov
add
test
jne
push
push
push
call
add
mov
pop
ret
push
push
push
call
add
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
push
call
push
push
push
push
mov
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
add
push
call
test
push
je
push
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
push
push
call
add
push
push
call
add
pop
pop
pop
mov
pop
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
mov
push
push
mov
call
push
push
call
add
call
test
mov
jne
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
push
call
add
test
jle
push
push
push
push
call
mov
add
test
je
push
push
push
call
push
mov
push
push
mov
call
push
push
call
mov
push
push
call
add
test
mov
pop
jne
push
push
call
jmp
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
add
push
push
push
call
add
pop
push
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
lea
push
push
push
call
add
cmp
jne
fld
mov
sub
fstp
push
call
add
mov
add
ret
xor
add
ret
int3
sub
mov
xor
mov
push
mov
push
lea
push
push
call
lea
push
call
push
mov
push
push
call
add
test
je
mov
lea
lea
mov
add
test
jne
sub
je
cmp
je
add
lea
push
call
push
mov
push
push
call
add
test
jne
lea
push
call
push
push
call
add
xor
cmp
sbb
pop
neg
pop
mov
xor
call
add
ret
mov
lea
lea
push
mov
call
mov
add
pop
pop
xor
mov
call
add
ret
sub
mov
xor
mov
push
mov
push
push
lea
push
push
mov
call
add
mov
lea
push
call
add
cmp
jbe
mov
push
push
push
push
call
add
add
sub
je
cmp
je
lea
push
call
add
test
je
push
push
call
add
test
ja
pop
pop
xor
pop
mov
xor
call
add
ret
mov
pop
pop
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
call
mov
sub
push
mov
call
add
test
jne
push
mov
call
mov
add
mov
add
push
call
add
test
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
pop
ret
push
add
push
push
call
mov
add
mov
sub
test
je
push
push
call
add
cmp
jne
push
push
call
add
test
jne
push
call
mov
push
push
call
push
push
push
call
xor
add
cmp
setne
mov
jmp
push
mov
call
mov
jmp
push
push
push
call
mov
add
test
je
cmp
je
push
push
push
call
add
movsx
sub
je
sub
je
sub
jne
push
mov
call
mov
jmp
push
mov
call
mov
jmp
push
or
call
mov
add
add
cmp
jne
jmp
push
push
push
call
add
pop
pop
pop
pop
ret
test
jne
push
push
call
push
call
add
pop
mov
sub
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
test
jne
push
push
call
add
push
call
push
mov
call
add
test
je
call
mov
push
call
push
push
push
call
add
pop
pop
pop
ret
test
je
pop
pop
mov
pop
ret
push
push
call
add
test
je
push
push
call
push
push
call
add
call
pop
pop
xor
pop
ret
int3
int3
push
mov
and
sub
push
push
push
mov
call
add
sub
mov
je
jmp
mov
sub
push
push
mov
call
add
cmp
jne
test
je
push
push
call
fstp
mov
push
push
call
add
test
jg
xor
add
cmp
jne
call
test
mov
je
push
push
call
add
mov
pop
pop
mov
pop
ret
lea
push
push
push
call
add
test
je
mov
mov
push
push
push
push
call
add
cmp
jne
mov
jmp
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
mov
pop
ret
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
mov
call
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
mov
call
add
pop
pop
ret
int3
int3
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
push
call
push
push
push
mov
call
mov
push
push
push
call
add
test
pop
je
call
mov
push
call
push
call
push
push
push
call
push
push
call
add
pop
mov
pop
ret
push
call
push
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
push
push
push
call
push
push
push
mov
call
push
mov
push
push
push
call
add
mov
call
test
mov
jne
push
push
call
add
lea
pop
pop
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
push
push
call
mov
add
test
jne
mov
push
push
push
call
add
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
push
push
push
call
mov
add
cmp
jne
push
push
call
add
mov
push
call
add
mov
neg
sbb
add
call
test
mov
je
push
push
call
add
pop
pop
mov
pop
ret
push
call
push
call
push
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
push
push
call
add
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
push
call
push
push
call
add
push
push
call
push
push
push
call
call
mov
push
push
add
call
push
mov
push
push
mov
call
push
push
call
push
push
mov
call
push
push
call
add
push
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
push
push
push
call
add
push
push
call
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
add
cmp
jne
push
push
call
add
push
push
call
push
push
call
push
push
push
call
add
mov
pop
ret
int3
push
mov
push
push
call
add
test
jg
push
push
push
call
push
call
add
pop
ret
push
push
push
push
push
call
push
push
mov
call
push
mov
push
push
mov
call
push
push
call
push
push
call
add
test
mov
jne
call
mov
push
call
push
push
push
push
call
push
push
push
call
push
push
push
call
add
push
call
push
push
call
push
push
call
push
push
push
call
add
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
push
push
call
push
push
call
push
push
push
mov
call
mov
add
cmp
jl
push
push
call
push
push
call
push
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
add
add
cmp
jle
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
push
push
push
call
push
call
push
push
call
add
test
je
mov
push
push
call
push
push
call
push
push
call
push
push
push
call
push
push
call
add
test
jne
push
push
call
push
push
call
add
test
jne
xor
pop
ret
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
fldz
push
mov
fstp
push
push
push
call
push
call
push
push
call
add
test
je
push
push
call
push
push
call
add
cmp
jne
push
push
call
fld
fcomp
add
fnstsw
test
jp
fstp
jmp
fstp
push
push
call
add
test
jne
fld
sub
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
pop
inc
pop
iret
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
mulpd
pshufd
addsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
mulsd
subsd
sqrtsd
pextrw
andpd
pshufd
andpd
movsd
movlpd
movsd
subsd
mulsd
addsd
mulsd
subsd
movsd
mulsd
mulsd
subsd
subsd
addsd
subsd
movapd
pshufd
subsd
addsd
pshufd
addsd
mulsd
addsd
pshufd
divsd
movapd
movapd
movapd
mulpd
movsd
mulpd
mulpd
and
mulsd
mulpd
addpd
movapd
mulsd
mulpd
movapd
mulsd
addpd
pshufd
mulsd
sub
mulpd
addsd
xorpd
pshufd
mulsd
pshufd
addsd
movsd
pinsrw
subsd
addsd
addsd
addsd
subsd
subsd
subsd
subsd
orpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
movlpd
movlpd
movlpd
addsd
andnpd
orpd
sub
movlpd
fld
add
ret
movlpd
xorpd
addsd
mov
jmp
movlpd
xorpd
sub
movsd
pextrw
and
sub
cmp
jb
addsd
orpd
mulsd
movlpd
fld
add
ret
push
mov
sub
and
fstp
movq
call
leave
ret
movlpd
movlpd
movlpd
xorpd
movlpd
movsd
psrlq
movd
movsd
mov
pinsrw
movsd
mov
and
sub
cmp
jae
mulsd
and
subsd
sqrtsd
andpd
and
sub
movlpd
orpd
movapd
movsd
addsd
subsd
mulsd
mulsd
mulsd
movsd
addsd
divsd
movlpd
movlpd
subsd
psrlq
movsd
psllq
mulsd
pshufd
movlpd
mulsd
mulsd
sub
xorpd
mulsd
subpd
mulsd
addsd
mulsd
subsd
pshufd
addsd
subsd
subsd
movlpd
fld
add
ret
sub
cmp
jae
psrlq
psllq
pmovmskb
andnpd
subsd
movsd
mulsd
addsd
orpd
subsd
mulsd
movsd
subsd
sqrtsd
and
shr
neg
movsd
andpd
psllq
pextrw
orpd
movd
pshufd
sub
add
mulsd
mulsd
mulsd
mulsd
subsd
andpd
addsd
subsd
addsd
movlpd
subsd
addsd
movlpd
divsd
movlpd
addpd
movsd
mulsd
mulsd
mulsd
sub
mulsd
mulsd
addsd
pxor
mulsd
addsd
addsd
and
pinsrw
movsd
pshufd
addsd
subsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jae
unpcklpd
movapd
unpcklpd
movapd
movapd
mulpd
movapd
sub
mulpd
mulpd
mulpd
movsd
mulsd
addpd
mulpd
mulsd
addpd
pshufd
mulpd
pshufd
subsd
pshufd
subsd
subsd
subsd
subsd
subsd
addsd
movlpd
fld
add
ret
sub
cmp
jae
xorpd
andpd
movlpd
movapd
mulsd
movapd
subsd
movapd
pshufd
sqrtsd
mulpd
pshufd
pextrw
mulpd
addpd
movlpd
mulpd
cmpltsd
mulsd
addpd
pshufd
mulsd
andpd
mulpd
andpd
pshufd
subsd
addsd
mulsd
subsd
subsd
mulsd
pshufd
subsd
divsd
sub
addpd
mulpd
pshufd
addsd
and
pinsrw
pshufd
addsd
addsd
addsd
addsd
xorpd
movlpd
fld
add
ret
add
cmp
jb
movd
psrlq
movd
and
mov
sub
or
cmp
je
movlpd
movd
psrlq
movd
and
sub
sbb
cmp
jge
xorpd
xorpd
mov
pinsrw
mulsd
mov
sub
movlpd
mov
mov
add
mov
add
mov
mov
call
movlpd
add
sub
movlpd
fld
add
ret
pextrw
shr
neg
movd
pshufd
movlpd
movlpd
andpd
andpd
addsd
sub
movlpd
fld
add
ret
movlpd
movlpd
addsd
sub
movlpd
fld
add
ret
xorpd
addsd
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
and
fstp
movq
call
leave
ret
movq
unpcklpd
movapd
andpd
comisd
jp
jae
comisd
jae
comisd
jb
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
comisd
jae
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
movq
fld
ret
movq
xorpd
comisd
jae
movq
movq
movq
addsd
psrlq
psubd
movd
lea
movq
movq
subsd
mulsd
addsd
divsd
unpcklpd
jmp
mov
movq
movq
divsd
unpcklpd
movq
movq
movapd
mulpd
movapd
mulpd
movapd
mulpd
addpd
mulpd
addpd
mulpd
addpd
mulsd
movapd
shufpd
addsd
mulsd
subsd
subsd
subsd
orpd
movq
fld
ret
comisd
jne
fld
ret
comisd
jae
fld
fmul
sub
fstp
fld
add
fadd
ret
fld
fmul
fadd
ret
movq
movq
andpd
ucomisd
jp
mov
shr
fld
fadd
ret
mov
sub
mov
mov
add
mov
mov
mov
call
add
fld
ret
nop
int3
int3
int3
int3
call
xchg
jmp
call
fxch
jmp
fabs
fld1
mov
xor
jmp
mov
fabs
fxch
fabs
fxch
fpatan
or
je
fldpi
fsubp
or
je
fchs
ret
fabs
fld
fld
fld1
fsubp
fxch
fld1
faddp
fmulp
ftst
fstsw
fwait
test
jne
xor
fsqrt
ret
pop
jmp
fstp
fld
ret
fstp
or
je
fstp
fldpi
or
je
fchs
ret
fstp
fldz
or
je
fchs
ret
fstp
jmp
fstp
mov
jmp
call
jmp
push
mov
sub
xor
cmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
push
call
pop
jmp
mov
mov
mov
cmp
jg
je
cmp
jg
je
mov
push
pop
sub
je
dec
je
sub
je
dec
je
sub
je
dec
je
sub
jne
mov
mov
fld
lea
fstp
push
fld
fstp
fld
fstp
call
test
pop
jne
call
mov
jmp
mov
fld
lea
fstp
push
fld
mov
fstp
fld
fstp
call
pop
jmp
mov
mov
jmp
mov
fld
fstp
fld
fstp
fld
jmp
mov
mov
jmp
mov
jmp
mov
mov
jmp
mov
jmp
sub
je
dec
je
dec
je
dec
je
sub
je
sub
jne
mov
jmp
mov
jmp
mov
fld
fstp
jmp
mov
jmp
mov
jmp
fld1
jmp
mov
mov
jmp
add
cmp
ja
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
fld
fmul
fst
fld
fstp
fld
fstp
lea
fstp
push
mov
call
test
pop
jne
call
mov
fld
fstp
pop
pop
pop
leave
ret
mov
sbb
dec
add
ret
dec
add
ret
dec
add
dec
add
ret
dec
add
ret
push
ret
dec
add
ret
pop
ret
dec
add
dec
add
dec
add
in
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fnstsw
test
jp
push
push
call
fld
pop
pop
jmp
test
jne
fld
push
sub
fstp
fld
fstp
push
push
call
add
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
push
call
fld
pop
pop
mov
mov
push
and
cmp
push
fstp
jne
call
test
pop
pop
jle
cmp
jle
cmp
jne
fld
push
push
push
fstp
push
call
add
jmp
push
push
call
fld
pop
pop
jmp
fld
push
fadd
sub
fstp
fld
fstp
push
push
jmp
call
fstp
fld
pop
fcomp
pop
fistp
sbb
cmps
cwde
mov
mov
cmp
mov
mov
mov
std
sbb
aas
cmp
clc
out
jns
or
pop
mov
out
mov
aas
shl
jmp
dec
mov
jae
sub
fcomp
js
sub
sub
push
xchg
pop
mov
enter
fnstenv
pop
cmps
ror
and
mov
and
mov
mov
rol
xor
cmp
mov
mov
dec
pop
cwde
push
dec
fdivr
sahf
leave
fstp
aad
mov
inc
js
xor
outs
xor
or
cmp
push
push
pushf
dec
(bad)
js
in
ins
cdq
repnz
mov
aad
fnstsw
jmp
ror
sub
lahf
or
add
pop
xor
mov
leave
push
cmp
push
cmp
clc
stc
lock
or
fstp
mov
jge
je
push
push
fdiv
mov
js
pop
cmp
and
in
jae
add
xor
sub
cdq
xor
xchg
scas
rcr
(bad)
int3
clc
jge
dec
aas
or
pop
test
or
jle
in
and
ficomp
movs
iret
enter
jno
sub
adc
mov
pop
hlt
(bad)
(bad)
int3
test
or
popf
mov
cmps
pop
cdq
cmp
pop
jmp
xor
fnstsw
outs
mov
rcl
movs
dec
ins
dec
sbb
retf
xchg
pop
dec
cmp
cmp
mov
int3
loop
sti
push
enter
mov
leave
pushf
inc
hlt
adc
std
pop
push
cli
jmp
mov
lea
mov
ins
cmp
mov
rol
push
stc
mov
mov
or
sbb
cmp
in
jp
mov
xchg
or
stos
mov
add
fcom
in
pop
dec
cdq
mov
jg
lods
js
sub
(bad)
push
loope
xor
mov
sub
inc
sti
cli
or
jmp
and
mov
pop
cmp
pop
mov
lods
lds
enter
mov
popa
scas
and
xchg
dec
dec
(bad)
ins
jmp
dec
hlt
inc
enter
ret
dec
push
imul
inc
pop
sbb
sub
push
cmp
xchg
mov
addr16
mov
stc
je
enter
xor
cmp
jmp
dec
push
iret
mov
js
mov
or
mov
sub
xchg
mov
test
pushf
jl
mov
fdivr
pop
(bad)
ficomp
fsubr
stos
pop
iret
jo
jp
sub
test
mov
stos
clc
mov
jmp
pop
cmp
outs
sti
mov
daa
stos
mov
(bad)
mov
adc
xor
out
clc
add
dec
sar
scas
outs
dec
sub
xchg
mov
xchg
cmps
leave
lds
xchg
jmp
icebp
(bad)
loope
cmp
adc
inc
add
cmp
mov
pop
mov
push
pop
loopne
push
mov
push
aam
mov
bound
pop
add
add
xor
or
js
push
scas
mov
mov
sbb
jmp
lock
pop
cmp
jle
imul
jle
shr
retf
dec
std
mov
cmp
mov
mov
sub
pop
test
jo
mov
stos
xchg
call
sbb
or
es
lods
sbb
arpl
jno
or
fstp
xlat
int3
leave
retf
dec
sbb
neg
xor
xor
call
repz
fcmovb
jp
jne
push
jbe
mov
shr
lahf
xor
les
xor
push
ficomp
or
shr
ds
cmps
rcr
adc
cdq
dec
shl
and
leave
mov
and
(bad)
out
xor
in
and
wbinvd
pop
pop
push
test
in
or
inc
test
js
test
adc
lods
xchg
mov
enter
xor
mov
fisubr
mov
icebp
pop
and
mov
sub
pop
cmp
push
adc
adc
inc
push
pusha
cld
or
sbb
or
inc
inc
dec
dec
sub
mov
mov
lods
fcomp
xlat
ds
cli
js
in
shr
pop
inc
je
cmp
pop
clc
mov
mov
lods
push
cli
imul
jmp
push
or
mov
les
sub
mov
push
add
(bad)
jp
call
fdivr
or
fs
mov
cmp
push
push
mov
ds
outs
dec
dec
leave
xchg
imul
cmc
pop
xrelease
cld
add
pop
sbb
and
daa
mov
mov
add
(bad)
fnstsw
adc
sub
lods
loope
test
mov
push
pop
rol
jmp
ins
std
sbb
js
mov
or
adc
imul
mov
inc
mov
xchg
and
adc
push
mov
add
ins
xor
shl
in
call
call
jno
adc
sub
pop
jb
jge
xor
mov
sub
mov
or
fcomp
dec
inc
mov
ins
dec
sbb
loop
mov
jg
adc
fisttp
hlt
lods
xcrypt-ecb
cmps
retf
xlat
aam
ret
xchg
into
jns
leave
sub
dec
inc
std
cld
dec
cmp
lods
(bad)
(bad)
jae
(bad)
movs
jnp
xchg
es
xchg
lea
shl
cmp
or
stos
stc
xor
lahf
ret
cmp
mov
mov
test
and
sub
scas
ror
imul
cmps
mov
pusha
xor
repz
mov
jmp
cmps
inc
mov
xchg
cdq
js
mov
adc
sbb
mov
lock
pop
pop
mov
fmul
pop
scas
test
(bad)
int3
push
push
dec
dec
jno
(bad)
mov
movs
sbb
xchg
dec
enter
popf
push
jb
cmp
stc
xchg
add
cli
dec
pushf
mov
rep
aaa
cdq
and
sbb
fdivr
mov
pop
cmp
cmp
jmp
sar
adc
dec
popa
test
mov
outs
xchg
in
xchg
push
bound
mov
push
fisubr
pop
inc
xchg
jle
addr16
fwait
jmp
jae
jmp
psraw
cwde
fild
jne
sbb
stos
ja
mov
nop
call
shr
in
jne
test
(bad)
test
mov
sub
pop
pop
mov
outs
rcr
fwait
and
push
loope
sbb
sub
sbb
sub
(bad)
pop
frstor
icebp
fadd
leave
push
dec
fnstenv
ds
test
cmp
cmps
fidiv
dec
adc
call
jns
xchg
sbb
sbb
dec
xchg
rol
or
adc
and
mov
jp
mov
jmp
push
cmp
or
pop
retf
cmp
mov
add
cmp
enterw
(bad)
jno
jns
pop
or
test
dec
mov
iret
nop
(bad)
jb
fisttp
sub
(bad)
push
cmp
(bad)
cmp
out
stos
sbb
xor
or
pop
sbb
jb
xor
enter
hlt
and
loope
and
or
sub
arpl
sub
hlt
cmp
popa
inc
ins
push
je
dec
js
in
push
fcom
xchg
pop
or
and
or
jmp
outs
imul
in
mov
retf
call
out
not
inc
aas
xchg
inc
repnz
or
sbb
mov
addr16
push
outs
fidiv
jge
push
sub
jmp
sub
and
rcr
scas
call
repz
enter
xchg
mov
lods
fxch
stc
sub
ret
pushf
adc
adc
(bad)
(bad)
fstp
pop
sar
iret
test
fsubr
pop
xchg
jmp
and
retf
or
sub
jbe
push
mov
icebp
imul
ds
xor
(bad)
ficom
inc
ins
rcl
aas
xor
dec
iret
jecxz
pop
or
(bad)
sub
fwait
and
cdq
and
push
enter
pop
pop
and
clc
aam
fisttp
or
fcom
pop
add
push
push
mov
fmul
sub
test
or
out
xor
xchg
mov
jno
inc
push
ins
inc
call
xchg
lods
mov
ror
push
adc
mov
(bad)
push
in
or
fcmovb
cdq
stc
lods
repz
lds
push
jl
rcr
sahf
push
enter
or
cmp
add
push
(bad)
(bad)
(bad)
ins
mov
scas
retf
stos
test
jp
mov
repz
jbe
and
test
fcomp
shl
mov
and
js
and
sub
jnp
mov
jns
inc
mov
sub
sub
cmp
pop
sub
and
aam
jle
hlt
mov
ins
imul
jge
jo
adc
loopne
mov
inc
add
rcr
mov
(bad)
jbe
and
lock
fst
in
cdq
pop
dec
and
push
stos
in
std
les
icebp
stc
cwde
mov
sbb
cs
addr16
es
stos
stc
fwait
or
xchg
sub
sub
mov
pop
fcomp
rcl
sbb
mov
ins
pop
inc
mov
mov
pop
jmp
inc
outs
jns
or
pop
loope
in
out
cdq
sbb
test
sub
shl
pop
stos
mov
adc
aam
ret
js
pop
mov
push
sbb
sbb
push
les
fsubr
das
mov
mov
dec
mov
xor
mov
fcmovnu
cld
mov
stos
mov
fwait
stos
das
push
jno
ret
sub
test
xchg
cld
lods
jns
dec
sbb
mov
cli
ss
xor
push
in
stc
mov
ins
mov
(bad)
mov
sub
cmp
clc
(bad)
sti
retf
push
gs
test
jp
push
mov
not
push
push
xchg
movs
out
or
inc
aaa
inc
loopne
imul
xlat
cmp
call
and
bound
lock
clc
adc
cmp
ja
popf
xchg
jbe
js
sbb
lock
stos
call
sub
(bad)
pop
js
jl
mov
popa
int3
push
sbb
popf
enter
cmp
sbb
fldcw
push
xchg
popf
pop
pop
adc
or
inc
sti
cmp
retf
aam
clc
and
xchg
mov
xor
imul
pop
std
sub
mov
cmc
or
push
mov
mov
pop
pop
leave
xor
shr
push
test
jns
cwde
retf
add
push
xor
xchg
movs
xor
sahf
jge
imul
in
lea
jp
(bad)
in
push
scas
aas
out
jmp
ds
pusha
aam
outs
and
stos
mov
clc
adc
jns
jle
mov
in
dec
xor
jo
ss
mov
call
xchg
inc
add
xor
or
loopne
mov
add
sub
fldcw
test
push
pop
dec
sub
inc
repnz
pop
xchg
out
out
sub
cmps
sub
push
xor
xor
push
push
sbb
push
and
pop
popa
ds
mov
mov
fsubr
mov
xchg
pop
out
aas
jmp
cdq
push
xchg
add
das
es
(bad)
jns
aad
data16
call
add
in
adc
loope
std
push
(bad)
add
js
push
dec
maskmovq
imul
add
add
test
in
xchg
icebp
pop
adc
jl
int3
jns
fs
push
sub
ins
sub
mov
in
mul
pop
or
or
addr16
ds
ret
mov
ins
jp
mov
xor
ret
adc
js
jmp
mov
or
xor
sub
popa
sbb
xchg
das
push
dec
das
imul
mov
jnp
cmp
sbb
mov
mov
inc
movs
and
and
jmp
inc
aam
clc
dec
imul
stos
(bad)
retf
retf
cwde
push
pop
adc
adc
dec
pop
xchg
loop
xchg
jae
out
stc
mov
sub
inc
cmp
sub
sub
and
xchg
adc
dec
lock
mov
inc
cmp
xchg
pop
xor
push
fnstcw
repnz
mov
inc
(bad)
in
inc
inc
inc
cdq
xor
mov
addr16
inc
xchg
call
mov
and
dec
retf
(bad)
sub
fwait
sti
inc
call
mov
mov
jno
sbb
add
cwde
xchg
jmp
mov
stos
mov
fsub
jbe
mov
mov
add
mov
cmp
js
and
sbb
fidivr
les
dec
dec
push
imul
call
mov
sbb
pop
shl
xor
mov
or
xor
mov
cli
fdivr
mov
cld
inc
enter
stc
sub
jl
xchg
js
stos
and
pop
cmps
popa
push
push
jl
ror
or
icebp
jmp
or
outs
lods
jb
int
mov
call
out
mov
loop
push
push
xor
rol
or
push
std
test
retf
pop
jmp
mov
in
aam
in
retf
nop
dec
call
popf
in
mov
push
dec
fwait
pop
loopne
dec
fwait
inc
jnp
shr
sub
pop
arpl
and
xchg
fidivr
leave
adc
cdq
in
out
xchg
sbb
test
sub
dec
ficomp
mov
or
mov
add
mov
mov
retf
daa
scas
shl
aad
popa
dec
mov
leave
sahf
fst
jb
or
adc
cmp
loopne
pop
jp
or
movs
inc
jp
movs
leave
and
push
fsubr
int3
sbb
xchg
cmp
and
pop
repz
jbe
mov
jae
fidivr
fnstenv
popf
jns
mov
sub
das
out
nop
inc
adc
aaa
add
mov
dec
mov
mov
in
push
pop
cmp
scas
mov
or
sub
jle
stos
shl
iret
sbb
leave
inc
jle
mov
mov
or
sub
jmp
ficomp
xlat
and
sub
push
pop
inc
movs
(bad)
lods
or
and
mov
stos
fmul
or
push
cdq
leave
push
sbb
aaa
call
icebp
(bad)
jbe
and
pop
out
push
push
mov
icebp
in
mov
int
push
js
sbb
mov
sbb
adc
sti
fisub
out
xor
sub
mov
xor
stos
sbb
mov
or
popf
outs
jmp
data16
xor
cmp
push
mov
(bad)
cmp
jmp
scas
mov
sub
cmp
ficom
inc
not
jns
jmp
push
(bad)
or
dec
jb
sub
mov
out
inc
jle
inc
inc
stc
sub
sub
out
xchg
mov
fdiv
pop
push
mov
or
cmp
loopne
sar
leave
sahf
cmp
ficomp
dec
fsubr
aam
sbb
lods
repnz
loopne
add
(bad)
push
adc
push
xchg
mov
add
es
js
sbb
fstp
movs
ficom
arpl
push
call
xor
inc
inc
sbb
sub
aas
add
cmps
push
cmp
push
js
jae
fmul
cdq
ror
js
imul
dec
and
xor
dec
(bad)
retf
dec
ja
stc
xchg
dec
in
in
js
lahf
ins
fadd
lock
xor
jp
jge
add
mov
mov
loopne
inc
xor
fldcw
cmp
pop
pop
sub
or
xor
inc
add
outs
cld
(bad)
mov
mov
pop
add
loop
xchg
or
adc
lods
aad
mov
cli
xchg
stc
pushf
ins
ret
scas
cdq
add
sbb
or
clc
dec
dec
xchg
or
push
mov
jmp
test
leave
aaa
cwde
cdq
mov
or
popa
xchg
sub
aam
repnz
adc
test
sbb
cdq
clc
mov
jecxz
sbb
adc
shl
sbb
xchg
jns
shr
pop
das
fcomp
push
pop
pop
cmc
sbb
mov
(bad)
dec
sub
imul
jle
push
aam
mov
dec
jne
sub
aaa
mov
mov
mov
xchg
iret
imul
jmp
pop
pop
shl
adc
dec
jmp
pop
clc
add
jno
fdivr
imul
call
dec
loop
clc
mov
mov
jb
jecxz
dec
cmp
mov
or
dec
sbb
push
hlt
mov
pop
call
dec
ror
add
add
cmps
sti
ss
mov
mov
jmp
dec
shr
sbb
fstp
or
cmc
imul
mov
cwde
mov
sbb
scas
xchg
adc
call
clc
cld
adc
mov
out
mov
mov
test
stc
frstor
push
xlat
test
test
aad
pop
test
mov
pop
sub
arpl
mov
push
aas
sbb
dec
xchg
xor
fs
les
clc
imul
sbb
or
leave
pusha
mov
inc
add
jp
(bad)
repnz
lods
dec
dec
push
jnp
sbb
cld
das
xor
sbb
mov
idiv
xchg
jg
cmp
xor
mov
mov
aas
xor
and
rcl
mov
ds
adc
pushf
xor
(bad)
fidivr
int3
fadd
(bad)
sbb
mov
cs
inc
or
xchg
inc
pop
jno
ins
or
scas
dec
sbb
jns
or
xchg
test
es
fisub
ror
(bad)
jbe
test
scas
test
jge
cmp
push
xchg
cmp
jne
jecxz
xor
and
and
jmp
fidiv
dec
jae
sub
mov
daa
inc
fsubr
pop
jmp
enter
scas
aam
sbb
clc
sbb
add
test
std
mov
add
sub
fprem
mov
enter
icebp
dec
pop
sub
sub
cdq
(bad)
dec
jmp
pop
(bad)
jns
in
fwait
inc
adc
mov
jnp
add
call
or
cmp
popw
repz
(bad)
ror
push
enter
push
pop
fld
shl
dec
adc
(bad)
adc
rcl
call
cld
int
clc
sub
bound
fist
ds
fiadd
scas
imul
pushf
sub
add
cmp
fld
jecxz
(bad)
inc
mov
test
shl
std
inc
rol
call
cmp
cmps
(bad)
pop
push
ins
jge
mov
jo
rcr
sub
sub
enter
bound
push
pop
jae
mov
hlt
mov
enter
mov
jne
push
mov
cmp
push
loop
fstp
pushf
jo
sbb
xlat
xor
retf
test
or
sub
pop
jecxz
jne
clc
lahf
ins
(bad)
stos
mov
dec
data16
cli
imul
dec
or
sbb
push
gs
mov
jl
pop
mov
out
pop
hlt
imul
out
loope
add
ss
add
or
popa
jae
or
xchg
sub
xchg
jmp
jns
push
dec
mov
out
js
push
mov
mov
push
bound
adc
inc
push
clc
je
mov
mov
mov
aaa
jecxz
jnp
cmp
and
dec
push
jle
leave
xchg
and
mov
mov
scas
and
xor
mov
or
loopne
sbb
enter
mov
mov
clc
inc
js
dec
sahf
xchg
mov
mov
jmp
mov
push
and
mov
fdivr
push
inc
test
cmc
mov
shl
sbb
aam
fdivr
retf
test
fwait
mov
loopne
mov
scas
mov
cmp
iret
xchg
xor
jge
sbb
stc
sub
xchg
test
setae
xchg
fcos
(bad)
xchg
sbb
sbb
in
dec
xlat
or
xor
(bad)
mov
leave
(bad)
sti
xchg
nop
repnz
test
or
adc
out
sbb
mov
pop
call
sar
rcr
add
pop
aas
adc
sub
add
cwde
mov
ja
cmp
retf
jo
add
lahf
or
dec
adc
dec
test
scas
pop
les
push
js
add
dec
aad
imul
xlat
pop
push
mov
inc
loopne
imul
mov
add
dec
and
imul
cmp
lods
sub
pop
or
test
jbe
dec
retf
je
mov
push
fist
xor
retf
call
sbb
push
stc
icebp
enter
push
xor
mov
cld
add
imul
mov
call
and
push
sub
sub
mov
movs
pop
lods
ins
add
dec
popa
jo
les
jae
cmp
cmp
ud1
in
jns
out
stos
cmp
ins
adc
push
mov
hlt
fldcw
mov
sbb
shr
push
rcr
test
mov
xchg
int3
jmp
or
mov
icebp
int
(bad)
test
scas
test
(bad)
cmp
push
mov
mov
bound
fsubr
inc
and
add
test
and
lahf
inc
loope
(bad)
retf
test
or
cmps
fld
lds
aas
loope
jecxz
dec
fwait
movs
sub
adc
mov
sbb
add
sub
jmp
xchg
ficomp
adc
dec
pop
jp
stos
dec
jno
push
cmp
aam
ds
rol
aas
std
xor
and
xchg
and
shl
ret
jecxz
mov
fild
or
push
or
jg
mov
adc
mov
leave
js
ins
cli
pop
idiv
jmp
pop
mov
or
xor
pusha
sub
in
fidiv
js
mov
cmp
push
dec
push
js
sub
fs
sub
pusha
mov
xor
pop
xchg
ror
pop
push
push
jp
cwde
lea
mov
movs
mov
pop
jle
retf
adc
mov
jle
inc
out
push
lods
and
mov
sub
jecxz
sub
iret
outs
jno
mov
test
clc
jnp
loopne
jecxz
fwait
add
clc
or
imul
aam
push
pop
dec
loope
dec
or
lahf
int3
cmp
fstp
or
repz
jmp
out
scas
xor
outs
fild
std
out
cmp
in
popa
call
push
sub
fwait
je
cmps
push
jo
js
cmc
imul
(bad)
jmp
call
mov
mov
xlat
sub
sub
mov
hlt
out
(bad)
cmp
or
arpl
jb
dec
shl
mov
or
jmp
add
sub
in
leave
push
std
js
loopne
lahf
pushf
pop
dec
(bad)
mov
retf
aaa
mov
push
in
lock
mov
sbb
mov
push
stc
stos
sbb
inc
movs
pop
push
mov
pop
(bad)
jl
mov
ds
data16
fdivp
xchg
nop
jb
clc
sbb
jae
mov
pop
cs
xchg
xor
test
xchg
js
jmp
call
and
arpl
jns
xchg
loop
add
aam
sbb
test
adc
and
cmps
jle
repnz
mov
dec
and
jge
mov
stos
xor
pop
mov
outs
push
cmp
hlt
pop
add
lds
pushf
inc
push
sub
pop
dec
jl
push
pop
mov
imul
icebp
push
into
jmp
js
lea
les
(bad)
fwait
or
mov
aad
sti
sbb
or
mov
sbb
pop
xor
in
jmp
push
xlat
mov
fcomp
pop
and
ja
sub
jp
sub
in
xchg
imul
in
loope
and
fmul
adc
ja
xlat
xor
dec
imul
mov
sahf
lahf
aas
jb
and
fcomp
mov
adc
cdq
push
icebp
imul
cmps
dec
sbb
adc
lock
xor
or
ret
dec
bound
inc
cmp
mov
call
call
push
nop
jo
lods
push
mov
and
sub
bound
jl
jb
xchg
pop
fwait
imul
(bad)
mov
mov
test
loope
fcos
loopne
cli
push
mov
xchg
cmp
out
pop
arpl
inc
fld
popf
pop
ins
clc
loop
int3
clc
jno
mov
(bad)
and
adc
idiv
mov
mov
dec
mov
dec
pop
sub
cmp
(bad)
pop
cwde
and
xor
sbb
in
mov
ss
lds
rcl
outs
xchg
mov
(bad)
push
imul
and
test
hlt
ret
imul
call
jge
ret
call
sub
push
jnp
pop
cwde
jmp
push
jle
cmp
mov
mov
out
pop
(bad)
int
shl
jo
imul
push
xlat
mov
cmp
mov
sub
jmp
sub
push
or
dec
pop
xor
ins
push
sub
or
xchg
adc
inc
mov
mov
movs
mov
cmp
push
jle
lea
mov
pop
sub
test
mov
dec
popa
in
sbb
mov
(bad)
xchg
dec
call
mov
scas
loop
test
add
pop
sub
scas
sbb
mov
or
shr
pop
push
loope
loop
lods
loop
cmp
lock
popf
call
push
dec
and
cld
test
ins
xor
rol
das
mov
mov
aad
sbb
mov
hlt
in
add
test
popa
pop
dec
pop
dec
sub
ret
repnz
add
mov
lea
cwde
test
and
xor
jbe
or
shl
enter
pushf
in
in
adc
popa
adc
adc
stos
xchg
sti
fs
mov
into
sbb
push
jb
jns
test
sub
xor
sbb
cmp
and
fwait
sbb
retf
lods
or
idiv
pusha
jp
sbb
call
cmps
pop
inc
sub
das
or
(bad)
lods
cmp
pop
mov
dec
xchg
shr
(bad)
sbb
enter
imul
mov
dec
push
jmp
pop
aaa
rcr
jmp
ss
sub
adc
loop
js
std
jmp
inc
out
mov
cmps
sahf
fldcw
loope
into
push
fidivr
cmp
sbb
fild
mov
pop
test
mov
and
rcr
pop
cmp
call
fdiv
sbb
mov
cwde
ret
xchg
mov
pop
fyl2xp1
xor
jl
xchg
hlt
or
pop
sbb
dec
repz
pop
in
js
cwde
(bad)
jns
test
retf
std
and
lods
outs
mov
jne
call
in
add
cmp
movs
inc
sbb
ins
adc
pop
cmp
ret
(bad)
mov
inc
test
stos
call
test
push
or
adc
pop
cmp
(bad)
clc
adc
sbb
sbb
xor
enter
repz
adc
sub
push
mov
jp
test
dec
cmps
scas
retf
das
imul
pop
sbb
push
lea
movs
jge
xchg
aam
push
push
cdq
movs
or
xor
mov
sub
sub
jns
cmp
mov
lods
and
sbb
cmp
fldcw
jmp
xor
mov
fsubr
or
pop
or
fucomi
(bad)
push
jns
xor
dec
cmps
or
mov
fcom
pop
das
jmp
cmps
out
clc
int3
inc
sti
dec
dec
pop
fwait
cwde
cmp
sub
dec
xchg
movs
call
jns
ret
repz
cld
aad
mov
loopne
cmp
jae
adc
mov
mov
outs
stos
(bad)
movs
ror
mov
xor
loope
loope
icebp
push
cdq
mov
dec
lods
cmps
dec
pusha
lods
and
shl
clc
mov
(bad)
(bad)
jae
out
sub
dec
dec
stc
jo
dec
mov
leave
mov
loop
jp
aad
jle
or
das
imul
push
push
mov
xchg
xor
data16
call
push
and
inc
dec
loopne
adc
mov
leave
pop
pushf
int3
sub
test
jmp
retf
mov
mov
cwde
int
jecxz
xor
mov
sub
jo
arpl
aam
js
jnp
jle
dec
sub
popa
jmp
jg
xchg
sub
(bad)
or
xor
xchg
and
ret
sbb
leave
push
call
mov
icebp
and
aas
outs
imul
mov
cmc
cwde
adc
aaa
sbb
and
std
js
adc
pushf
push
mov
sub
and
in
add
dec
cld
push
pop
fsub
cmps
sub
addps
mov
pop
sbb
adc
scas
inc
pop
clc
cmp
and
repz
lods
ss
ss
jmp
push
add
sbb
sbb
fild
repnz
int
cmp
(bad)
in
cdq
imul
jg
into
pop
push
imul
fisub
cld
cmp
sti
cmp
ins
das
dec
dec
cmp
lahf
jmp
cmp
xchg
clc
mov
and
pop
xor
cmp
cmp
cmp
iret
xor
sbb
in
dec
pop
dec
cmp
int
or
ss
add
imul
icebp
test
cmp
shl
(bad)
call
imul
dec
push
push
test
lods
mov
jns
sbb
lods
mov
stos
sub
xchg
clc
(bad)
sbb
pop
and
scas
sbb
inc
ja
xor
aam
call
dec
or
cmp
dec
test
bound
dec
test
or
xor
mov
out
mov
push
jnp
rcl
sub
jecxz
mov
xchg
mov
cdq
imul
clc
ficomp
push
sbb
and
or
dec
pop
imul
(bad)
push
das
cwde
fsin
call
push
cmp
xor
popa
jle
stc
fcom
int
stos
xor
and
rcr
shr
sbb
push
cmp
mov
cmps
jae
fisttp
pusha
scas
or
or
call
imul
sub
jg
call
push
ins
cmps
cmp
mov
imul
mov
cmp
jmp
ret
ins
mov
int3
cdq
daa
sub
cmp
cld
fldenv
daa
retf
out
packssdw
movs
and
std
outs
outs
mov
push
addr16
ins
addr16
cmp
push
xchg
enter
xor
or
ds
dec
mov
pop
lods
jle
sbb
ret
mov
pop
inc
call
call
jns
fldcw
(bad)
xchg
dec
inc
stos
stos
and
fwait
cmp
jns
cmp
mov
or
lahf
mov
test
pop
xor
dec
in
xor
out
fist
adc
mov
sbb
xchg
sbb
inc
push
movs
push
ja
dec
retf
cdq
mov
push
out
or
pop
sbb
xchg
scas
dec
and
lods
jb
xor
cs
add
test
aas
push
sbb
or
rcr
pop
loop
jbe
dec
adc
inc
adc
rcl
add
lods
sar
es
xchg
pop
jge
mov
nop
push
mov
mov
lahf
push
pop
cmp
out
jmp
sbb
popf
neg
int
pop
jecxz
sub
mov
test
xor
cmp
xor
jns
mov
enter
cmp
test
(bad)
mov
cli
cmp
sbb
jmp
cmp
and
cmp
xor
daa
repz
adc
jmp
es
adc
pop
jnp
(bad)
push
sti
arpl
push
sbb
cld
outs
cmp
push
loopne
inc
jmp
test
sub
mov
sbb
jecxz
sub
mov
xor
outs
aam
push
(bad)
xlat
sbb
test
outs
pop
jne
mov
xlat
adc
shl
jno
stc
test
mov
(bad)
lods
cwde
cmp
or
adc
jl
fdiv
push
arpl
pop
das
leave
cmp
sbb
push
push
jb
fisttp
adc
gs
cwde
clc
add
rcl
adc
shl
sar
psubsw
sub
dec
lahf
enter
dec
nop
or
mov
dec
(bad)
cld
or
and
cmp
xchg
jp
and
dec
(bad)
enter
pop
cmp
leave
xchg
pop
pop
jnp
jnp
outs
call
repz
fimul
pop
pop
into
or
jb
dec
jno
mov
mov
inc
fisttp
fisub
nop
popa
pop
ds
xor
aas
stos
fcom
sbb
popa
cwde
ins
xor
leave
test
cwde
xchg
(bad)
arpl
loopne
ss
inc
pop
pop
call
addr16
lahf
sbb
jb
xchg
sub
adc
dec
sub
test
mov
sub
inc
lock
pop
cmp
shr
(bad)
xchg
int
cwde
dec
adc
retf
add
fisttp
sbb
mov
inc
dec
fcmovnb
loop
cld
jl
hlt
jmp
cwde
retf
cmp
inc
stos
stos
sbb
xor
mov
add
sti
jp
push
sub
pop
sbb
popa
iret
fcmove
jmp
fsubr
retf
xor
pop
in
jmp
jb
in
pusha
mov
arpl
adc
out
fist
les
xor
jno
jl
pop
push
sub
pop
pop
and
cdq
jecxz
out
or
sub
rcr
leave
imul
icebp
jns
out
enter
mov
mov
out
sub
cli
pop
add
outs
popf
pop
jns
sbb
(bad)
push
test
mov
jmp
cmp
cmp
push
mov
enter
sar
idiv
cli
call
lods
xchg
add
es
dec
mov
xor
stos
jle
clc
jle
icebp
jo
iret
in
fmulp
loope
sub
imul
mov
inc
imul
sub
mov
inc
fxch
add
out
repz
pop
and
shr
fwait
cmp
sub
adc
inc
leave
mov
stc
push
mov
sub
sbb
dec
inc
jnp
loope
div
mov
cmp
mov
stc
int3
jmp
jbe
imul
jp
sbb
add
mov
dec
pop
mov
imul
fsubr
adc
cmp
mov
in
les
mov
push
leave
div
or
push
mov
mov
fadd
xchg
mov
std
leave
jmp
loope
mov
(bad)
mov
mov
and
xchg
push
in
leave
repnz
fcomp
or
inc
lds
movs
push
jb
mov
and
push
fcmovb
pop
add
addr16
ds
test
fxch
nop
cld
(bad)
xor
cmp
or
stc
jl
or
mov
cwde
cdq
js
cwde
cli
pop
es
es
mov
cmps
ja
ja
inc
int3
sbb
push
test
jns
and
mov
ss
test
mov
push
outs
cmp
jb
pop
mov
repz
inc
fisub
das
add
cmc
pop
pop
enter
fimul
jne
mov
adc
jmp
add
jge
cmp
jne
stos
movs
cmp
cmp
call
xchg
add
int
and
cmp
cmps
out
cmp
clc
stc
mov
aas
(bad)
push
mov
les
mov
push
call
jle
mov
sub
sahf
fistp
jl
les
rol
jecxz
pop
aaa
add
or
fnstcw
xchg
jl
outs
cmp
or
scas
cmp
in
data16
popf
nop
xchg
push
mov
outs
gs
push
clc
loop
and
sub
fcomp
push
fimul
jnp
jns
adc
sub
outs
mov
loope
call
mov
mov
les
cmp
clc
mov
pop
dec
pop
push
repz
daa
pop
test
js
mov
pop
mov
ins
adc
sub
mov
hlt
clc
enter
(bad)
mov
mov
sbb
mov
popf
push
enter
leave
repnz
dec
popa
dec
pop
(bad)
cli
pushf
scas
and
jmp
(bad)
or
stc
inc
ds
outs
pop
cmp
push
shr
shl
add
pop
call
sub
cmp
aam
leave
mov
push
sbb
jne
or
cmp
pop
imul
shr
aaa
push
push
test
or
sbb
fcmovu
and
retf
sub
in
rcr
lods
push
mov
push
sbb
pop
push
cmps
fimul
or
fucomip
and
aam
mov
mov
iret
sbb
push
inc
push
mov
mov
lods
xchg
or
int3
mov
nop
jmp
mov
push
adc
cmp
cmp
jb
lock
and
mov
scas
sbb
ja
pop
inc
ins
aad
shr
daa
mov
ins
fs
add
scas
adc
sbb
in
inc
mov
mov
lds
jbe
push
jp
jo
call
and
jle
movs
mov
popf
sbb
pusha
shl
xor
cdq
int
jmp
sbb
in
mov
push
cdq
mov
test
fisttp
or
out
icebp
mov
pusha
jecxz
aas
fwait
stos
pop
and
and
xor
sub
jmp
leave
cmps
cli
adc
mov
mov
dec
and
mov
das
mov
mov
ror
in
jge
jl
pop
or
cs
js
dec
js
and
jns
push
icebp
lods
aaa
and
cdq
and
mov
push
push
or
ret
fnstenv
pop
or
cmp
(bad)
inc
mov
push
(bad)
mov
cwde
add
fstp
mov
(bad)
sbb
stc
lock
dec
loope
in
xor
xchg
int
leave
mov
lock
sar
gs
call
std
int3
cmp
xor
xor
fcomp
dec
test
mov
repnz
out
ror
dec
or
xchg
mov
scas
jns
je
mov
sbb
adc
aaa
imul
dec
push
pushf
bound
dec
js
scas
push
or
iret
dec
dec
xchg
outs
or
dec
ins
addr16
imul
mov
ds
cli
das
mov
dec
les
sub
dec
scas
xchg
mov
out
mov
test
cdq
dec
hlt
aam
jmp
xchg
int
inc
pusha
mov
(bad)
push
inc
inc
sbb
daa
and
mov
jecxz
xchg
rcr
cmp
fld
cwde
test
bound
fxtract
movs
mov
pop
cli
fsubr
ins
cli
push
xchg
js
call
and
fnstcw
mov
adc
aas
int3
call
test
mov
xor
push
inc
call
sbb
int
or
(bad)
retf
scas
cmp
mov
cdq
push
fimul
push
hlt
pop
fstp
cdq
js
inc
jmp
sbb
pop
adc
dec
jnp
or
pop
sti
imul
jns
dec
fldcw
or
push
sub
(bad)
jle
jbe
or
sti
std
ret
bts
jp
gs
mov
fdivr
jae
pop
retf
clc
mov
cmp
sbb
mov
repz
dec
mov
add
imul
jmp
xchg
xchg
(bad)
clc
mov
inc
test
cmps
shl
leave
scas
xor
adc
mul
push
jns
pop
ins
cdq
rol
fist
mov
mov
jle
dec
shl
arpl
enter
js
cmp
xor
and
enter
loopne
xchg
add
push
pop
jno
inc
add
mov
pushw
inc
into
inc
mov
cmp
mov
imul
push
ror
pop
out
test
jmp
daa
jbe
dec
dec
cwde
scas
mov
adc
xor
xor
jg
repz
imul
cmp
sbb
ds
push
sub
mov
les
je
inc
lahf
xor
adc
add
sub
pop
pop
dec
mov
jne
cmps
or
sub
dec
add
mov
xlat
pop
cmp
push
nop
jmp
xor
dec
aam
cli
rol
imul
sub
arpl
nop
cwde
loopne
mov
inc
inc
pop
stc
sub
xchg
out
dec
adc
pusha
inc
jg
pop
sbb
jo
and
mov
mov
int
inc
(bad)
or
mov
inc
mov
(bad)
arpl
jmp
cmp
fs
sbb
imul
(bad)
loope
pop
push
pop
xchg
mov
or
jmp
les
jmp
push
fstp
ret
cwde
jae
jmp
jl
mov
movs
dec
setl
jle
xor
rol
retf
jmp
adc
mov
fisub
cmc
fst
inc
pusha
inc
pop
(bad)
fdiv
mov
stc
mov
jns
cmp
addr16
sbb
movs
clc
out
stc
out
in
jb
mov
push
mov
mov
aad
mov
adc
call
retf
mov
sbb
cmp
jg
sub
jp
xchg
mov
push
rcl
inc
nop
stc
mov
(bad)
mov
or
rcr
xchg
mov
repz
inc
dec
sub
out
mov
sbb
or
push
idiv
aam
and
pusha
test
in
les
dec
pop
call
push
rcr
add
jae
dec
mov
sub
pop
cmp
or
sbb
aas
push
das
sti
cmp
dec
cwde
inc
jb
jns
mov
sub
inc
movs
or
add
stc
pop
and
ds
loopne
mov
or
pop
or
or
lds
mov
or
test
imul
sar
adc
stc
jmp
mov
test
mov
push
fsubr
pop
outs
jns
cmp
popa
sbb
cwde
jbe
mov
cmp
test
xlat
mov
cs
js
fnstcw
retf
push
lods
pop
jge
mov
fsubr
jle
in
dec
cmp
cmp
cmp
out
dec
cdq
jo
fldcw
test
cdq
call
mov
bound
sub
in
clc
(bad)
push
jnp
jo
mov
pop
add
xchg
jecxz
adc
(bad)
jns
leave
imul
cmp
sbb
jecxz
lea
cmp
push
jecxz
and
(bad)
mov
mov
jmp
xchg
fidiv
jle
mov
call
push
movs
push
adc
clc
mov
out
mov
pop
pop
adc
mov
fimul
cmp
cli
add
ror
and
cmp
sbb
out
pop
cmc
dec
jl
dec
mov
mov
nop
div
fucom
loope
icebp
and
cmp
fdivr
cli
dec
das
out
retf
xor
aaa
fcom
fsubp
adc
jbe
dec
add
mov
jge
mov
les
sbb
sub
adc
fdivr
pop
sbb
call
sub
xor
leave
shl
pop
pop
sub
retf
cmp
lahf
mov
jmp
jno
retf
js
pop
fnstsw
stc
and
push
sbb
test
push
stc
xchg
add
add
scas
push
jno
arpl
mov
xchg
lods
(bad)
fwait
sti
dec
cmp
stos
pop
or
fsub
cmp
rcr
dec
xor
jo
dec
cmp
add
xchg
dec
shl
stc
dec
mov
xor
out
adc
fnstsw
test
cdq
retf
jno
fdiv
loop
inc
dec
pop
and
xchg
stos
push
rol
jp
shr
jp
inc
sub
test
dec
inc
push
dec
mov
(bad)
jmp
inc
jmp
(bad)
jmp
les
mov
mov
mov
(bad)
out
inc
inc
sbb
or
add
mov
cdq
sub
mov
lock
sub
pop
mov
sahf
adc
shr
push
jb
xor
dec
pop
jl
loopne
call
mov
add
xchg
push
jo
sub
dec
push
cdq
lds
sahf
stc
int
retf
pop
cmp
xchg
test
cmp
xchg
inc
fs
jo
loopne
xlat
mov
pop
cwde
movs
clc
fistp
and
(bad)
clc
ins
or
mov
sub
stos
repz
lods
leave
push
mov
retf
jmp
or
mov
ja
dec
jbe
outs
in
les
jg
test
cmp
in
out
sbb
xchg
call
test
leave
lods
scas
jno
pop
jp
in
jo
(bad)
jno
gs
jmp
retf
les
call
into
adc
sub
cmc
pop
dec
cmp
push
jno
cmp
es
mov
pop
inc
cmps
lahf
cld
pop
jae
fsubr
pop
lds
clc
(bad)
loopne
xlat
add
or
fmul
dec
stc
sbb
aam
sbb
sar
adc
jmp
call
xor
out
mov
xchg
and
rcr
mov
xchg
xchg
rcr
jnp
dec
push
scas
and
sbb
cwde
pop
in
movs
xchg
pop
icebp
add
js
pop
push
call
jnp
fs
fcom
ja
js
lods
or
dec
fldcw
jl
sub
or
daa
jbe
mov
std
cdq
mov
xchg
iret
sbb
adc
jmp
imul
xor
cmp
mov
mov
dec
sbb
sub
or
das
jns
mov
xor
fldenv
or
cmc
outs
stos
shl
or
dec
jl
rcr
adc
inc
xor
out
or
loopne
pop
fcom
mov
jbe
cld
in
repnz
sbb
rcr
jns
jmp
arpl
mov
std
int
pop
fdiv
shr
sub
cmp
and
test
cmp
mov
lahf
pop
push
cmp
ja
shr
imul
inc
out
(bad)
nop
scas
push
pop
mov
pop
pop
je
jns
enter
fisub
fstp
or
mov
fst
dec
push
int3
cs
std
in
jg
les
loopne
jg
arpl
shl
mov
jns
mov
clc
jo
call
js
adc
push
pop
sub
jnp
push
xchg
cwde
pop
or
sbb
cmps
pop
xor
jne
mov
xchg
shl
sub
or
sub
cli
mov
das
call
adc
push
in
cmp
pop
ins
loope
sbb
imul
xchg
mov
stc
cmp
pop
ss
mov
and
loopne
cmp
dec
std
dec
int
xor
int
(bad)
pusha
lods
jnp
cmp
icebp
sbb
jae
cs
sub
xor
imul
cwde
test
movs
dec
bnd
stc
xor
pushf
out
jmp
scas
jne
loope
aas
and
pusha
leave
in
add
lock
in
ds
sub
sub
clc
jnp
dec
arpl
ds
mov
cdq
fs
jl
sti
add
mov
xor
pop
add
jmp
adc
out
push
lock
iret
out
jmp
mov
and
call
jns
pusha
push
popf
das
adc
fld
test
aas
jmp
push
ss
mov
mov
aad
pushf
jnp
loope
cli
sbb
enter
push
mov
mov
xor
dec
int3
xchg
cmp
sar
or
pop
add
mov
test
jns
pop
arpl
or
push
sbb
into
lock
jns
adc
jne
arpl
pusha
xchg
pop
sti
aad
pushf
jnp
sub
into
std
cmp
cmps
icebp
adc
dec
sbb
mov
mov
mov
mov
pop
dec
cdq
fnstenv
sbb
inc
fwait
addr16
pusha
pop
dec
pop
sub
ins
pop
stos
fiadd
ret
lods
pop
cdq
pusha
pop
cli
ins
jecxz
xor
cdq
pop
cmc
xchg
out
data16
sub
jbe
sbb
retf
test
movs
pop
cmps
in
adc
int3
dec
push
jmp
sbb
xor
popa
pop
mov
js
cmc
out
add
repz
mov
outs
jnp
xchg
imul
rcl
cdq
mov
int3
cmovno
and
cdq
pop
xor
retf
sub
js
lock
sub
inc
sahf
call
pop
push
xor
lea
movs
sbb
jl
cmp
sbb
mov
xor
mov
sbb
leave
loop
test
arpl
mov
adc
jp
adc
cs
fist
ret
add
sbb
push
dec
fbstp
sbb
mov
or
mov
out
in
dec
mov
sbb
jmp
bound
in
loop
jg
popa
dec
pusha
mov
cmc
iret
mov
xchg
sti
lock
and
call
rcr
or
push
int
mov
ins
inc
aas
fucompp
test
jmp
fst
fs
pop
cmp
mov
inc
loopne
js
pop
mov
outs
adc
icebp
mov
call
jl
cmp
stc
sub
outs
push
sahf
or
retf
lods
hlt
nop
adc
push
or
pusha
imul
push
addr16
cmp
jmp
mov
cmps
mov
stc
clc
adc
cmps
imul
push
pop
jp
xor
fistp
jbe
loope
cmps
imul
dec
aaa
cmp
ret
lock
push
pop
mov
stos
mov
mov
mov
sbb
popf
dec
xor
es
adc
pop
cmp
pop
xchg
mov
cmp
sub
imul
and
jnp
into
je
sbb
and
mov
pop
xor
sub
sub
push
lea
cmp
xchg
test
jae
add
test
or
mov
rep
les
xlat
cs
dec
fcomp
aad
xor
add
test
cmova
or
mov
pop
inc
cwde
push
ja
adc
cmp
mov
popa
jg
jp
ss
and
jnp
int
sti
push
jae
jecxz
icebp
push
enter
test
sub
nop
dec
inc
dec
jo
add
push
ds
or
call
push
dec
test
test
mov
loope
push
dec
retf
out
cwde
sub
pop
imul
push
mov
pop
mov
adc
arpl
add
js
sub
ins
cli
icebp
(bad)
pop
cmp
add
dec
test
lods
jp
call
pop
outs
stos
mov
pushf
push
movq
and
es
arpl
mov
or
cmp
dec
repnz
fwait
int
dec
cld
push
stc
or
fimul
out
push
cmp
retf
jmp
cmp
jnp
ja
stos
das
pusha
ds
lahf
xor
clc
std
sub
imul
movs
hlt
push
int
add
jp
repz
shl
stc
ins
or
xchg
out
adc
or
mov
je
jns
jno
pop
xor
and
xor
or
test
(bad)
jmp
cwde
mov
sub
shl
cmp
out
mov
jae
movs
(bad)
retf
jb
add
mov
pop
jp
ins
jno
xor
xchg
xor
mov
and
adc
mov
and
or
sbb
fsubr
out
push
call
iret
jecxz
sti
pop
stc
fwait
cld
popa
out
pop
push
mov
leave
cmc
sub
lahf
and
mov
cmc
cmc
mov
cli
push
push
sbb
dec
retf
loope
inc
mov
sub
pop
ret
fwait
leave
pop
loope
jae
stc
mov
sub
cmp
xor
aaa
mov
ret
push
adc
mov
dec
lods
xlat
or
mov
cmp
mov
pop
std
imul
mov
xor
push
pop
fsubr
push
mov
pop
add
jno
push
fadd
xor
xor
jnp
loop
adc
sahf
test
mov
add
and
dec
xchg
int
push
in
add
or
or
push
cmps
test
pop
leave
retf
mov
sub
sub
test
push
ins
fstp
and
dec
or
fcmovne
xchg
pop
idiv
mov
test
fistp
shr
out
hlt
or
jnp
pop
adc
jp
es
dec
call
gs
jbe
cmp
cdq
dec
repz
sbb
sbb
in
push
(bad)
push
lahf
xchg
mov
sbb
adc
dec
jg
or
div
pop
fcomp
dec
lods
mov
cli
into
inc
enter
stos
sub
pop
or
jg
sbb
jbe
daa
mov
retf
sbb
ins
int3
jmp
mov
cwde
mov
dec
inc
cmps
mov
dec
cdq
aas
and
leave
je
imul
push
xchg
shr
movs
sub
pop
pop
repz
pushf
fdivr
int
popf
call
mov
pusha
(bad)
stos
sbb
dec
dec
sub
psadbw
xor
and
sbb
in
xchg
pop
outs
fcom
and
adc
xor
and
retf
adc
cmp
push
pop
(bad)
inc
mov
dec
std
cmp
into
sub
leave
rcr
dec
loopne
pop
les
mov
leave
push
sub
out
(bad)
fstp
xchg
xchg
jns
retf
nop
mov
iret
lock
xchg
repz
cwde
or
outs
scas
jne
cwde
outs
mov
xchg
mov
add
or
jbe
mov
dec
bound
jg
cmp
stos
arpl
neg
enter
jl
inc
or
cmp
sub
stc
shl
retf
icebp
inc
mov
outs
pop
popf
and
ins
jo
test
or
stos
mov
lock
icebp
loope
mov
mov
iret
jnp
cli
sub
cmp
popf
jmp
ds
pop
mov
mov
dec
sub
jg
test
cdq
mov
ins
jnp
sub
fnstenv
or
cmp
pop
push
aas
xchg
ins
ins
mov
dec
or
jl
pop
jmp
pop
ret
mov
or
cld
movups
push
or
fstp
xchg
stos
and
jo
push
jle
mov
int3
aas
sub
or
jns
and
mov
(bad)
rcl
cdq
mov
sbb
out
(bad)
cmc
add
cmp
jns
sbb
push
push
aas
ds
mov
mov
imul
mov
(bad)
(bad)
arpl
mov
cwde
push
xchg
ss
call
aam
ret
add
jb
adc
push
imul
add
enter
retf
inc
or
jmp
xchg
dec
pusha
jmp
shr
mov
test
(bad)
nop
add
fcomp
push
push
fidiv
fnstsw
inc
stc
pop
sbb
rcr
adc
dec
jns
js
xor
xchg
pop
dec
call
ret
clc
das
fdivr
movs
rcr
ins
lock
sub
adc
sub
mov
dec
movhlps
(bad)
out
data16
mov
xchg
adc
cmp
into
jns
fldenv
sbb
dec
div
sub
ins
sbb
ds
jl
imul
mov
call
(bad)
sbb
aam
jl
mov
lea
pop
mov
test
in
aad
pop
inc
fdivr
push
pop
bound
scas
cmp
and
jb
je
sbb
dec
sub
in
add
jns
neg
xchg
cmp
arpl
jl
das
or
mov
dec
mov
xchg
out
sbb
or
xchg
das
push
mov
retf
stc
mov
shr
adc
mov
mov
scas
popa
inc
jne
cmp
mov
inc
sub
mov
sbb
push
sub
stos
and
cmp
jecxz
cmovs
int
loope
xor
cmps
imul
jns
jo
jmp
stc
stos
jns
or
pop
mov
inc
stos
mov
dec
sub
movs
jmp
xor
sub
leave
cmc
fld
mov
cs
imul
call
and
sbb
pop
jecxz
dec
cmp
fs
pop
mov
push
mov
in
push
pop
popa
mov
xor
pop
leave
adc
js
mov
aam
mov
stc
jecxz
cmc
cwde
fstp
add
test
cmp
loope
mov
pop
jno
pop
in
sub
call
unpcklps
xchg
lahf
cmc
jmp
loopne
jns
daa
and
rol
or
arpl
inc
ret
sbb
sub
cmp
int
je
jl
sbb
mov
mov
out
iret
test
shl
into
cmps
dec
mov
mov
pop
sbb
ret
mov
sub
xlat
inc
ja
xor
xchg
jmp
add
das
mov
(bad)
out
pop
(bad)
sahf
gs
jo
cmp
int
call
dec
dec
enter
dec
test
sub
xor
stc
add
in
push
add
cmp
dec
fcmovnu
add
cwde
loopne
add
enter
sub
std
cmp
or
loopne
cmp
inc
leave
enter
retf
xchg
dec
repz
fidivr
lock
push
sub
cmp
xchg
xor
retf
rcr
movs
sbb
sbb
cmp
stc
cmp
adc
outs
(bad)
enter
jnp
test
imul
push
and
mov
push
mov
push
call
and
enter
push
xchg
xor
sub
inc
jle
mov
xchg
fnstcw
test
fmul
repnz
cli
sbb
ficomp
push
cmp
jle
xor
fisttp
adc
(bad)
xor
mov
push
loop
jbe
lock
jns
xchg
pop
outs
fstp
sub
dec
sub
mov
xor
or
or
stc
push
stos
(bad)
mov
push
lods
movs
mov
cli
adc
cmp
popa
je
push
dec
pop
mov
sub
add
and
mov
loop
dec
popa
lock
mov
or
mov
inc
int
jecxz
pop
sub
nop
or
dec
inc
sbb
push
pop
jge
gs
enter
in
clc
pop
ds
pop
mov
sar
lds
hlt
loopne
push
inc
or
push
or
dec
out
sub
stc
fisttp
pop
hlt
stc
jb
ins
mov
outs
jmp
mov
cmps
pop
dec
mov
popf
cmps
lock
aas
iret
cdq
or
add
push
push
pop
dec
sub
jne
sbb
jbe
test
dec
sub
lea
call
fsub
sti
sub
pop
sub
mov
dec
pop
(bad)
(bad)
popa
jg
jbe
sub
cmp
sbb
xor
xchg
mov
test
mov
int3
cmps
imul
add
aaa
test
and
outs
xor
ror
(bad)
dec
cld
push
leave
sete
dec
fisub
mov
sub
scas
fcomp
(bad)
mov
js
push
cmp
test
pop
pop
pop
xchg
mov
dec
mov
out
in
dec
into
sbb
scas
add
or
cmp
xchg
sahf
jecxz
push
imul
test
adc
popf
stc
jmp
test
pop
mov
pop
scas
pop
sbb
sahf
(bad)
pop
sti
pop
scas
ret
mov
add
mov
popf
mov
cmp
sub
cdq
(bad)
fcmovnb
fst
jae
fcmovnb
call
out
sub
add
jle
das
sahf
jg
inc
test
(bad)
call
(bad)
sub
cmp
and
jge
fld
mov
call
xchg
sahf
push
jo
sub
mov
movs
push
int
cli
shr
mov
ror
sbb
test
cs
cmp
jno
jle
jg
out
cdq
inc
jne
jae
call
mov
in
cli
add
xor
(bad)
hlt
sti
sbb
out
in
call
jne
cwde
lods
sub
add
cmp
jecxz
pusha
dec
ror
sbb
inc
cmp
dec
sub
jmp
and
and
les
adc
mov
inc
cdq
xchg
int
std
adc
sub
clc
icebp
jl
loopne
cs
sahf
fisttp
int
adc
rcr
(bad)
xor
jbe
(bad)
mov
mov
jns
mov
lods
sti
xchg
adc
cli
ret
enter
frstor
jne
fcmovbe
imul
ins
shl
iret
pusha
inc
sar
mov
sbb
lahf
push
cwde
ficomp
jmp
jge
div
mov
mov
xor
mov
icebp
stc
in
and
jmp
and
cmp
push
jnp
rcr
iret
out
test
cdq
fld
sbb
mov
sbb
imul
std
pop
dec
mov
mov
jp
nop
sub
enter
mov
cwde
sbb
cmp
mov
xor
addr16
adc
mov
jns
push
retf
jp
lds
inc
outs
dec
or
lods
ds
adc
xchg
xchg
fld
or
jmp
inc
das
stc
das
stos
jmp
test
push
sbb
pushf
adc
push
rcr
shr
and
inc
retf
enter
loopne
fisub
jl
dec
jo
popf
iret
movs
xor
sbb
sub
xor
inc
retf
push
pop
or
rep
ins
call
lods
jae
sbb
(bad)
add
sar
dec
gs
cmp
mov
fnstenv
ret
and
mov
sub
pushf
in
dec
or
mov
cmp
sti
mov
mov
mov
(bad)
shl
xor
inc
call
sub
mov
xchg
pop
ret
out
lods
add
mov
sub
or
js
push
push
imul
repz
inc
mov
dec
xlat
pushf
sub
dec
pop
loopne
ins
adc
xor
mov
lods
dec
push
sub
and
test
push
mov
popf
and
cmp
fidivr
jns
or
xchg
sub
hlt
jle
inc
sbb
adc
or
and
and
jns
pop
xlat
aam
retf
ss
call
inc
pop
jns
or
pop
pop
jne
out
(bad)
retf
push
push
xlat
xchg
mov
enter
call
stos
adc
int
lahf
stc
or
addr16
dec
stos
enter
aas
pop
sbb
loop
inc
xor
test
(bad)
mov
xlat
dec
(bad)
fld1
test
mov
mov
pop
(bad)
fsubr
jns
into
cmp
cmc
add
jle
or
push
hlt
mov
test
stos
fld
enter
xchg
out
pop
repz
xchg
cmp
mov
jl
jg
jl
(bad)
fld
xchg
adc
into
jecxz
xor
sbb
bound
sub
mov
sar
ret
mov
add
ins
push
jg
dec
mov
cmps
(bad)
aad
mov
pop
dec
stos
mov
cmp
add
dec
mov
dec
mov
jae
pop
mov
mov
push
neg
push
lock
cmp
ret
dec
mov
cmps
push
inc
mov
sbb
inc
imul
stc
cmp
push
cmp
cmp
mov
and
sbb
dec
add
loopne
clc
xchg
pop
stos
in
test
in
cmp
mov
push
sub
push
arpl
bound
stc
jbe
popf
out
mov
dec
leave
adc
pushf
daa
sub
push
outs
imul
cdq
popf
xchg
fsubr
repnz
jns
or
or
popf
push
popf
ja
daa
lods
sub
fsubr
ret
sub
sbb
sbb
push
enter
pop
xor
mov
es
ficomp
ss
xchg
jns
sub
sbb
xchg
or
pop
imul
xchg
mov
loop
frndint
cwde
mov
push
mov
mov
es
std
pop
inc
sbb
mov
leave
mov
cmp
fdivr
movs
stc
int
icebp
xchg
push
fnstcw
cmp
outs
in
cdq
cmp
cmp
sbb
enter
sub
sbb
lahf
push
dec
aad
cmp
ror
mov
mov
sbb
lock
retf
cdq
xor
or
adc
add
(bad)
inc
and
ret
jmp
pop
fadd
jae
enter
push
dec
cmp
pop
jl
in
cli
add
test
xchg
and
icebp
mov
or
pop
and
aad
pop
cmp
jmp
xchg
leave
jmp
adc
stc
or
dec
jo
fstp
inc
arpl
xchg
out
mov
mov
inc
push
out
cdq
pop
mov
sbb
cmps
cdq
cld
xor
stc
cwde
mov
add
push
es
retf
cdq
lahf
stc
or
push
imul
inc
test
mov
cmp
scas
and
stc
mov
pop
ror
push
or
jmp
push
les
daa
call
fisubr
sub
shr
xchg
mov
outs
dec
and
jo
or
cmp
ror
dec
loopne
xor
sti
aaa
mov
cwde
sub
fistp
inc
xor
sub
dec
pop
pop
jl
push
sar
jo
mov
or
inc
mov
test
and
ss
jns
or
test
(bad)
aaa
out
or
dec
fs
das
ror
(bad)
stc
daa
dec
mov
ins
call
pop
adc
sub
sahf
jmp
xchg
enter
scas
in
dec
jns
xor
xor
or
dec
test
pop
out
jmp
cmp
mov
movs
cli
xchg
xchg
dec
or
xor
dec
cmp
xchg
out
outs
call
push
dec
and
fisttp
pop
xchg
mov
push
jecxz
or
jne
jecxz
cmc
test
out
sub
jecxz
jns
popa
ret
jl
or
mov
scas
mov
add
dec
cld
ror
test
cmps
sbb
mov
push
dec
sub
push
mov
sbb
cmps
xlat
mov
iret
dec
dec
jmp
dec
sub
cmps
add
or
jae
fwait
sbb
enter
fisubr
rol
cmp
and
pop
test
in
das
xor
(bad)
mov
mov
mov
jmp
and
retf
unpcklps
mov
call
imul
mov
xchg
dec
mov
lahf
enter
into
push
cmp
shr
xor
sbb
xchg
push
xor
out
xor
mov
add
sti
sbb
inc
fwait
add
dec
popf
xchg
and
ja
nop
dec
loope
movs
leave
in
or
mov
inc
in
add
ins
or
gs
neg
enter
sti
sub
sbb
call
pusha
mov
push
or
in
mov
jbe
scas
cld
stc
ja
dec
loope
cmp
dec
js
dec
test
fist
rcr
cli
mov
aas
icebp
loop
sbb
mov
mov
or
mov
or
sub
mov
lahf
call
fs
mov
rol
inc
sub
daa
cmp
and
ret
mov
fdivr
adc
mov
call
adc
push
daa
mov
test
inc
sbb
in
adc
mov
xor
movs
cmp
js
frstor
add
dec
int3
push
jl
mov
push
add
jp
pop
ficomp
or
add
sub
sahf
fisttp
loopne
aas
cmc
fwait
scas
pusha
mov
mov
leave
xchg
repnz
cwde
mov
push
sbb
push
mov
mov
js
mov
mov
das
and
mov
mov
push
adc
call
push
out
mov
inc
mov
mov
out
loop
je
jbe
rcl
test
imul
fwait
or
fiadd
cmp
add
cmp
sbb
lahf
retf
jne
cmp
popa
stc
jp
pop
xor
pop
enter
outs
mov
stos
nop
jmp
pop
xchg
ret
push
add
jmp
retf
sbb
pop
aaa
js
mov
lds
fmul
cdq
test
dec
xchg
mov
outs
mov
fcom
sbb
fidivr
movs
aad
jl
imul
and
mov
lahf
popf
xchg
daa
add
add
fucom
fxch
addr16
sbb
ins
lods
call
aaa
inc
mov
test
sbb
pop
xor
mov
cmp
(bad)
sub
hlt
dec
fxch
adc
push
pop
es
(bad)
ret
outs
push
jecxz
nop
idiv
out
loopne
xor
popf
stc
mov
push
imul
or
test
cdq
jge
mov
icebp
pop
mov
out
mov
lahf
repz
pop
xor
pop
xor
int3
out
hlt
jb
sahf
mov
mov
mov
jbe
xchg
mov
loope
dec
lock
cmps
push
xchg
arpl
jo
and
jns
sbb
cmp
pop
sub
(bad)
mov
adc
jmp
mov
add
dec
adc
dec
xchg
sbb
in
call
add
pop
dec
inc
emms
xor
mov
jno
xor
xchg
call
push
cmc
in
dec
add
fistp
pop
jns
call
sub
dec
inc
dec
dec
ret
push
or
(bad)
xlat
sbb
or
inc
aaa
cmp
test
jnp
retf
cdq
inc
cmp
in
dec
mov
jecxz
mov
mov
mov
fnstcw
inc
fistp
push
pusha
(bad)
xor
xchg
cmp
nop
in
mov
cdq
loopne
loop
in
jbe
icebp
ds
out
in
imul
jno
sbb
or
test
add
sub
and
cwde
cmp
mov
sub
rol
addr16
cmp
dec
mov
sub
jns
stc
(bad)
mov
cmp
add
test
mov
sar
scas
mov
sbb
mov
call
mov
cmp
lods
call
or
sbb
out
aas
cmps
pop
shl
repz
dec
cwde
xor
sub
pop
sub
sbb
mov
daa
xor
call
mov
adc
hlt
in
push
mov
pop
sub
jg
(bad)
sub
mov
sbb
into
rol
xor
sbb
adc
mov
pop
pop
sti
xchg
xchg
mov
xchg
sub
leave
test
lahf
cmp
adc
rcr
adc
or
push
mov
enter
mov
cld
sbb
out
retf
shr
popf
not
jle
mov
(bad)
dec
pop
jl
scas
pop
push
cwde
push
sbb
adc
fcomp
cli
or
nop
or
fmul
rcl
dec
(bad)
dec
jle
adc
loope
xchg
pop
iret
adc
mov
inc
xchg
call
cli
pxor
jne
push
aas
gs
mov
lods
mov
dec
enter
scas
sahf
cli
sbb
popa
mov
xchg
xchg
cmp
jl
pop
popf
cmp
cdq
mov
aam
retf
jae
adc
test
jle
inc
cmp
gs
into
lods
mov
sbb
shr
xor
mov
inc
mov
retf
xchg
ss
bound
mov
dec
push
fsubr
cli
das
in
aas
mov
push
mov
inc
mov
push
cmp
or
cmps
pop
ins
fbld
adc
daa
push
ret
dec
sub
mov
mov
scas
mov
or
fsubr
nop
mov
outs
mov
inc
stos
cmp
and
add
inc
pop
scas
retf
xchg
(bad)
imul
arpl
test
cmp
fst
mov
mov
out
push
(bad)
fistp
repnz
add
and
jno
jae
bound
cdq
jmp
push
mov
sbb
loopne
sub
sbb
dec
add
mov
sbb
mov
or
in
js
inc
pop
stc
inc
mov
data16
cmp
mov
fmul
inc
sbb
test
jmp
push
lods
test
sbb
test
mov
xchg
outs
dec
fxch
je
mov
push
call
mov
test
loop
dec
out
ffree
lock
xchg
xor
iret
fwait
mov
mov
sbb
into
sub
movs
cwde
popa
leave
jecxz
or
frstor
push
jg
inc
fist
repz
shl
cmp
mov
push
push
fild
add
dec
jmp
xor
and
stc
mov
and
fwait
stc
aas
jnp
jecxz
mov
retf
add
call
mul
and
pop
jnp
iret
loopne
xchg
test
jb
ror
retf
iret
ficom
out
das
jns
add
enter
fld
mov
mov
stos
js
and
mov
pop
xchg
js
cmp
mov
or
cdq
mov
dec
push
mul
or
push
ficom
pop
or
fidivr
sbb
push
popf
mov
pop
jp
sub
inc
leave
sbb
jne
or
inc
push
mov
call
and
fsub
mov
sti
adc
cmp
js
jmp
scas
loope
jnp
push
or
sar
and
push
cdq
movs
sbb
cmp
pop
pop
sahf
mov
mov
mov
mov
xchg
lea
sbb
add
loope
xchg
outs
mov
ror
aam
add
int3
sub
adc
jge
sub
pop
pop
push
cmp
push
lods
rcr
retf
cmp
loop
xor
mov
jbe
adc
(bad)
cdq
xchg
ret
mov
mov
or
mov
and
sbb
imul
imul
movs
add
rol
adc
aas
loopne
fdivr
ins
xor
push
mov
adc
pusha
cmps
in
test
test
(bad)
sub
mov
sar
(bad)
push
dec
test
or
jno
push
pop
stos
test
sbb
xchg
call
imul
or
call
test
fisttp
clc
mov
add
xchg
sub
adc
xchg
pop
das
out
rcr
add
(bad)
dec
push
mov
cdq
gs
xchg
hlt
sbb
pop
sub
mov
popa
and
jae
imul
sti
test
pusha
aas
test
mov
outs
mov
sbb
jae
ins
pusha
xlat
out
xchg
fisttp
std
ins
movs
xchg
ret
mov
adc
rcr
dec
inc
jnp
clc
in
mov
push
stos
pop
sbb
sbb
(bad)
addr16
xchg
or
ret
stc
push
mov
popf
push
push
aas
inc
push
scas
and
sbb
pusha
dec
cwde
add
cld
cmp
(bad)
dec
ror
push
cmp
jge
cmp
aam
inc
call
test
sbb
dec
cdq
mov
cld
out
mov
mov
mov
cmp
jl
mov
jecxz
mov
sahf
iret
out
inc
or
jno
(bad)
int
js
mov
push
push
mov
(bad)
(bad)
leave
jmp
fidivr
jge
jl
adc
leave
outs
cmp
push
lea
jb
cmp
cld
push
sbb
in
xor
dec
int
lock
hlt
xor
sub
pop
cmp
mov
fst
pop
mov
ds
int3
mov
pop
cwde
std
push
push
test
push
mov
std
daa
inc
inc
jmp
jl
clc
(bad)
aad
int
or
dec
jg
dec
jle
aad
icebp
sar
movs
and
(bad)
pop
cmp
add
scas
inc
adc
ficom
ds
call
mov
fadd
jmp
sbb
cmp
(bad)
js
mov
repz
test
std
xor
sti
ins
dec
cmp
pop
xlat
and
and
jo
push
inc
scas
sub
mov
fcmovnbe
shr
stc
sub
adc
and
pusha
fld
stc
sbb
mov
(bad)
into
(bad)
sbb
(bad)
or
cmp
sbb
jno
mov
ret
mov
pop
xlat
sahf
les
(bad)
mov
add
into
sbb
push
call
imul
retf
imul
xchg
lock
call
mov
dec
add
push
lea
inc
xor
jmp
sub
pop
or
inc
in
call
cmp
sub
imul
cwde
cmp
cwde
call
pusha
mov
popf
leave
fisttp
jno
popa
mov
mov
dec
mov
stos
sbb
and
rcl
lods
xor
cdq
imul
out
jmp
test
(bad)
out
or
pop
fyl2x
jno
mov
sbb
cmp
fdiv
(bad)
xchg
test
lds
push
cwde
shl
cmp
ficom
adc
test
or
mov
rol
jl
mov
stos
outs
sbb
(bad)
out
call
push
imul
clc
sub
xchg
pop
lea
(bad)
fwait
repnz
mov
hlt
push
mov
sub
test
cld
es
adc
or
push
pop
pop
fnstcw
sbb
sar
jle
int
or
(bad)
out
sbb
shl
fimul
cwde
jb
pop
sub
sub
outs
and
pop
ror
mov
enter
ss
mov
mov
or
adc
push
or
lock
pop
rcl
push
xor
dec
lods
adc
lahf
lock
stos
push
fmul
adc
push
inc
xchg
btc
pop
mov
(bad)
xchg
(bad)
cmp
sbb
jns
mov
jno
push
add
cld
lock
push
pop
icebp
adc
push
cmp
dec
call
(bad)
clc
das
pop
out
push
push
jp
div
cli
sbb
pop
mov
mov
push
sub
(bad)
in
add
test
ins
mov
mov
outs
popa
push
adc
inc
xor
cli
stos
mov
jle
imul
push
mov
xor
sub
xchg
jo
(bad)
js
daa
retf
add
imul
and
test
cli
pop
leave
cmc
test
sub
(bad)
mov
adc
jl
popa
mov
movs
sub
rcl
stos
outs
inc
fistp
sbb
dec
sub
mov
pop
jmp
lahf
jecxz
outs
(bad)
cmp
aad
pop
cmp
jno
das
adc
push
mov
dec
fst
loope
xor
clc
mov
cmp
push
mov
jns
cdq
jbe
xchg
pop
push
push
test
adc
push
out
dec
daa
pop
cmps
adc
leave
scas
neg
dec
mov
call
enter
push
or
pop
sbb
cmc
jle
scas
cmp
stos
jecxz
pop
call
mov
or
xor
push
fstp
je
outs
ins
enter
pop
mov
cmp
jmp
or
cwde
jns
xchg
cdq
cmp
pop
add
cmp
clc
mov
fwait
mov
inc
mov
push
rcr
sti
ins
adc
sub
or
test
jo
or
dec
push
fst
cmp
test
addr16
pusha
test
test
lds
bswap
jb
scas
xchg
scas
pop
push
push
push
fdiv
jecxz
dec
into
js
mov
mov
pop
jns
dec
push
pushf
or
in
js
dec
aad
ret
(bad)
pushf
stc
(bad)
stc
out
add
mov
mov
or
stos
or
icebp
arpl
icebp
adc
adc
stos
jge
sub
mov
(bad)
call
into
cmps
or
mov
sbb
sbb
mov
mov
add
push
xchg
push
adc
jmp
int3
mov
sbb
pop
mov
stc
dec
sbb
imul
jg
aad
inc
clc
pop
pop
or
adc
mov
test
nop
in
sub
mov
or
ficomp
inc
addr16
fmul
test
leave
mov
(bad)
out
call
or
sub
jo
popf
xchg
mov
mov
sub
daa
cmp
cwde
sub
push
retf
sbb
outs
rcr
in
mov
sub
lock
sbb
sbb
or
sub
or
leave
and
or
daa
ins
fabs
daa
cmp
les
sub
xor
add
(bad)
(bad)
cs
dec
fcomp
xor
fadd
mov
cmp
xchg
aam
loop
outs
push
xchg
loope
push
jo
inc
fstp
lods
sbb
mov
pop
dec
cmp
mov
inc
es
retf
pop
mov
sub
dec
mov
arpl
das
mov
mov
mov
adc
cmp
mov
sub
jo
lods
fcmovb
dec
jns
push
cmp
gs
mov
mov
push
rcr
cwde
mov
ja
cmp
add
out
movs
fsub
scas
ret
dec
dec
sub
dec
cmp
push
xchg
cmp
xchg
imul
or
pop
fisttp
mov
sub
sub
pop
retf
pop
dec
scas
retf
mov
test
inc
arpl
cwde
jmp
add
shl
aad
dec
pop
hlt
jne
pop
data16
pusha
fidivr
sub
adc
or
shl
fmul
mov
lods
or
push
push
push
js
jne
in
dec
xchg
hlt
cmp
test
jb
jns
inc
imul
and
mov
add
and
xor
mov
sbb
push
idiv
xchg
in
cdq
mov
movs
dec
dec
jl
(bad)
stc
fmul
arpl
adc
pop
aaa
call
shl
cmp
cdq
test
jl
movs
jbe
pop
sub
jb
push
bound
jle
mov
dec
cmp
xchg
xlat
cs
dec
sub
sub
pop
adc
dec
dec
xchg
jo
jge
and
test
(bad)
lods
mov
mov
mov
rcr
xchg
push
xchg
sbb
jae
xor
and
call
jmp
imul
movs
jns
lock
jmp
jns
in
jmp
stos
cmps
in
and
or
dec
fadd
out
addr16
mov
sbb
sub
push
test
shr
sub
test
rcl
xchg
cdq
out
push
retf
icebp
iret
stc
fcomp
fldcw
je
mov
(bad)
or
mov
mov
pop
mov
push
clc
pop
mov
sub
aad
and
sub
in
lds
mov
out
(bad)
idiv
addr16
cwde
xor
mov
int3
jns
(bad)
in
and
cmp
call
pop
enter
and
pusha
data16
jle
retf
add
mov
sub
dec
(bad)
ins
ret
leave
xor
sub
jno
pop
xchg
cmp
mov
or
loope
xlat
jo
jmp
jmp
cmp
inc
(bad)
and
cwde
mov
test
aad
pop
cmp
mov
adc
sub
inc
sbb
fwait
push
lea
jmp
and
hlt
pusha
cli
int
sti
jmp
pop
dec
add
in
ret
test
jmp
imul
jmp
(bad)
aad
push
in
and
pop
and
sub
pop
in
mov
imul
fnstenv
xor
dec
jns
push
nop
imul
data16
(bad)
clc
jb
stos
jmp
dec
hlt
jl
sub
sbb
fnsave
(bad)
sbb
repz
nop
(bad)
fidivr
pop
fisub
jmp
cmp
cdq
repz
addr16
fcom
cmp
fld
ficom
in
fldcw
aas
pop
push
dec
test
sbb
sbb
pop
sub
in
xor
mov
pop
mov
pusha
in
dec
jno
popf
sub
int3
xchg
mov
sbb
imul
imul
ds
adc
call
mov
stc
xor
sti
jl
(bad)
(bad)
retf
jns
sub
outs
test
mov
repz
cmp
pop
fdivr
pop
loope
cmp
dec
pop
ficom
lods
mov
cmp
push
popf
mov
fidiv
sub
fnstcw
jns
ja
retf
inc
pushf
fisttp
std
fmul
pop
jmp
test
call
inc
stos
lods
mov
jae
out
fstp
rcr
sahf
scas
test
outs
inc
int
cld
imul
push
pop
sub
mov
(bad)
out
mov
aam
push
pop
jno
add
cwde
sub
or
jle
hlt
xor
fdiv
mov
int
(bad)
js
out
or
pop
inc
popf
sbb
fld
(bad)
loop
enter
lods
popw
cmp
cmp
sbb
xchg
inc
pop
dec
xor
stos
mov
fbstp
fcmovnbe
push
or
cmps
xchg
cmp
mov
test
js
nop
and
adc
sbb
cmp
jo
and
xor
jle
pushf
enter
jae
cmp
or
mov
test
mov
inc
addr16
jmp
cwde
call
mov
sbb
repz
cwde
mov
mov
test
mov
clc
mov
aam
jmp
mov
adc
adc
sahf
mov
mov
in
add
test
or
sti
and
mov
icebp
icebp
in
xchg
sbb
int
pop
push
and
fwait
add
mov
mov
cmps
cld
or
pop
loopne
cld
ins
mov
or
cmp
lods
das
mov
test
sub
xlat
enter
dec
push
sbb
jecxz
inc
(bad)
dec
mov
enter
cmc
in
mov
pusha
test
rol
inc
test
jns
into
mov
aam
cmp
std
lods
out
pop
or
sub
test
popf
lds
cmps
mov
scas
mov
sub
xor
jp
dec
and
mov
xchg
xchg
std
nop
les
pop
push
leave
nop
push
fisub
loop
loope
jns
inc
mov
mov
(bad)
stc
xchg
js
lds
pop
add
test
jns
push
scas
into
push
jns
call
std
add
mov
or
test
test
or
add
pop
fcomp
dec
push
leave
jge
sub
call
pop
addr16
ret
jge
cmp
push
leave
push
pop
or
sahf
rcr
loop
ds
(bad)
fidivr
ficomp
sbb
mov
fist
mov
dec
sbb
push
pusha
clc
test
and
out
fnstsw
push
sub
rcl
mov
push
pop
jge
cwde
cmps
push
xchg
pop
sub
push
shr
xor
sub
int
inc
fist
mov
jge
dec
push
popa
mov
in
es
call
jno
out
clc
mov
add
or
popf
or
cmp
mov
pop
pop
in
outs
test
push
xchg
stos
outs
fst
mov
or
sbb
sub
xor
inc
xor
data16
jmp
test
loope
mov
pop
fisttp
loop
nop
movs
in
aaa
pop
call
dec
xor
mov
fadd
lock
sbb
test
js
scas
inc
and
xchg
jge
(bad)
loop
add
xabort
xchg
mov
loope
mov
push
fninit
xlat
mov
or
sbb
cwde
cdq
adc
mov
retf
pop
into
xchg
mov
pop
push
xchg
pop
test
push
das
mov
jae
scas
mov
pop
icebp
sub
fcomp
es
jns
and
sbb
sahf
sbb
cmps
mov
imul
dec
test
mov
cmp
ins
sub
xor
cwde
cmp
sti
sar
scas
sbb
mov
sub
stos
sahf
mov
mov
mov
(bad)
ss
xor
ret
or
dec
cmp
sbb
cwde
push
or
sbb
out
icebp
mov
jge
push
div
in
test
add
cmp
out
push
data16
sub
xchg
xchg
add
clc
out
jne
in
shl
cdq
adc
outs
leave
rol
sub
or
mov
loopne
and
ret
jnp
outs
mov
sub
loope
mov
(bad)
fincstp
cmps
test
jbe
cmp
je
aas
push
push
(bad)
lods
mov
xor
push
mov
stc
jecxz
add
mov
or
ins
push
stc
inc
cmp
int
cmp
les
call
std
enter
cdq
pop
mov
cmp
es
push
pop
inc
lods
inc
ret
mov
jecxz
mov
sub
fld
sub
test
ins
cmc
inc
outs
cmp
in
inc
mov
ds
outs
sbb
(bad)
popa
fisttp
fstp
xor
and
adc
pop
cmp
stos
lods
(bad)
push
enter
jns
sub
sbb
js
iret
push
jns
push
leave
xor
xchg
dec
fiadd
jmp
aas
inc
push
imul
and
sub
cdq
scas
aaa
cmc
pop
push
adc
aas
push
setb
pop
or
sbb
mov
test
outs
adc
dec
(bad)
lock
dec
bnd
push
sub
push
push
jp
sub
das
dec
pop
stos
aas
retf
jns
test
cmp
jo
add
lahf
xchg
inc
(bad)
mov
sub
std
pop
(bad)
in
sub
jl
sbb
mov
call
inc
vmwrite
popf
ds
lods
xor
test
fimul
test
scas
jge
sub
std
faddp
call
test
dec
and
push
pop
and
or
outs
cmp
enter
out
or
jno
mov
fidivr
nop
test
test
cmp
dec
jns
imul
pushf
imul
xor
mov
retf
gs
jbe
or
xchg
cmps
jns
sbb
cmp
inc
add
sbb
neg
outs
jp
je
addr16
dec
sub
xchg
pop
dec
fist
ss
mov
jmp
xor
fstp
and
or
push
jl
fistp
out
mov
cmp
popa
(bad)
push
call
imul
into
mov
movs
mov
mov
push
cmps
and
and
inc
shl
popf
adc
fst
cli
ret
cdq
sub
inc
dec
or
push
pop
data16
sbb
mov
out
ror
ds
sub
rol
mov
mov
sub
enter
sub
leave
push
inc
sbb
shl
movs
mov
jle
bound
mov
ins
xlat
xlat
or
jb
pop
movs
icebp
push
enter
mov
mov
mov
pop
popa
fwait
in
jge
mov
dec
scas
xor
mov
sub
ret
call
cmps
sbb
sbb
(bad)
or
daa
mov
movs
cwde
pop
test
out
jl
popa
xchg
mov
pop
mov
clc
sar
jmp
mov
fyl2x
jmp
mov
neg
rcl
lods
cmp
or
lahf
pop
nop
(bad)
pop
pop
ret
sbb
fcomp
int
dec
pop
fild
fwait
mov
addr16
inc
sbb
test
pusha
jae
pop
(bad)
stc
jecxz
adc
cmp
retf
or
adc
sbb
mov
sub
imul
popf
jp
cdq
pushf
push
fcmovnb
scas
rcr
out
push
push
fcom
mov
test
js
in
cmps
mov
pop
loope
cli
lds
stos
int3
ret
movs
xor
ins
jnp
mov
mov
js
test
enter
cdq
or
sub
retf
pop
sub
mov
jmp
xchg
mov
loope
mov
sbb
dec
mov
outs
push
mov
xor
xchg
retf
adc
or
call
xor
jmp
sahf
lea
mov
fstp
mov
pop
loopne
data16
pop
int3
inc
gs
mov
push
sbb
or
scas
mov
push
mov
(bad)
adc
test
stc
pop
or
cdq
(bad)
addr16
mov
push
ret
sub
pop
xchg
fwait
mov
and
and
outs
sub
lods
idiv
sub
idiv
or
cmc
pusha
push
inc
clc
retf
or
jecxz
int
leave
sub
lahf
je
scas
in
mov
xchg
scas
mov
inc
sbb
jl
ins
pop
addr16
aas
jmp
in
xchg
xor
jns
cmp
pop
dec
pop
scas
bound
mov
pop
jmp
fidivr
sahf
cdq
mov
push
loope
out
leave
enter
add
or
mov
inc
cmp
lock
jg
pop
add
aam
sub
push
(bad)
dec
push
xlat
mov
jae
jge
cmp
popf
icebp
push
pop
jge
inc
sbb
mov
add
sbb
xchg
add
or
mov
test
clc
push
push
mov
or
xchg
(bad)
push
mov
test
cmc
fistp
fst
cmp
sahf
pop
push
lods
jae
pmaxsw
sahf
pop
add
aad
or
fsubr
ret
(bad)
push
enter
int3
mov
and
rcr
and
dec
pop
int
call
sub
jl
das
out
fstp
aaa
in
cmp
push
mov
or
aad
push
pop
sub
and
push
lods
enter
test
sti
cli
loope
add
pop
ds
test
shl
push
out
pusha
lahf
lea
mov
out
push
call
sub
dec
and
(bad)
cmp
jns
fdiv
or
es
adc
sbb
add
aad
pop
inc
setle
mov
retf
(bad)
jmp
ins
enter
mov
add
js
dec
dec
push
out
dec
clc
stc
(bad)
cdq
outs
mov
push
xor
xchg
enter
cwde
sbb
pushf
stc
mov
pop
out
jmp
gs
add
(bad)
mov
fmul
vpunpckhbw
pusha
or
inc
jmp
cmps
mov
outs
dec
or
shl
je
push
mov
retf
mov
cmp
ins
cmp
test
pop
push
dec
mov
pop
dec
lahf
jo
data16
leave
mov
js
or
popf
lods
xchg
adc
cmp
adc
ins
in
mov
scas
mov
(bad)
out
push
dec
dec
adc
inc
pop
cmp
fcomip
popf
mov
adc
inc
int3
sbb
pop
sub
or
cmp
inc
pop
stc
and
xchg
retf
pop
bound
sti
add
adc
add
test
push
sub
pop
sub
or
clc
iret
xchg
jmp
jmp
scas
scas
dec
add
push
cs
jb
in
enter
or
rol
js
call
out
mov
xor
fisub
lods
sub
fmul
outs
cmp
or
push
pop
push
jmp
cmps
jmp
test
adc
sub
pop
push
mov
jo
fist
jge
call
mov
inc
and
leave
iret
dec
push
idiv
stc
mov
mov
add
pushf
push
mov
dec
inc
mov
sub
push
dec
ss
dec
jne
pop
and
(bad)
popf
sbb
mov
cmp
dec
xchg
dec
xlat
cmp
jno
dec
ror
lods
mov
icebp
clc
outs
sub
mov
jo
rcl
dec
jo
ins
sbb
mov
jge
repnz
cmp
adc
gs
dec
lea
xchg
cmp
repnz
or
cwde
ds
mov
push
mov
mov
mov
mov
leave
pop
int
xchg
out
scas
xor
sbb
cmp
inc
cdq
fmul
enter
ror
xor
dec
push
mov
cmp
pop
pop
add
jnp
jmp
popa
ror
fadd
push
std
imul
cmp
pop
test
cld
pop
push
ss
cmp
add
pop
jnp
fdivr
ror
mov
push
xchg
aad
mov
popf
fisttp
push
mov
leave
aam
fisttp
leave
jmp
repnz
xor
inc
stc
shl
ss
fist
sbb
out
iret
adc
mov
fldenv
sar
dec
repnz
enter
aas
mov
cmp
stos
enter
jmp
bound
out
inc
inc
cli
or
jecxz
jns
cs
mov
ret
cmp
aam
mov
sbb
fadd
in
jmp
dec
aaa
cmp
(bad)
mov
pop
inc
shr
fstp
(bad)
mov
stos
pop
xchg
fdivr
push
leave
lods
fwait
mov
popf
icebp
mov
add
in
int3
ret
xchg
mov
(bad)
test
sbb
dec
scas
push
xchg
(bad)
dec
xor
sar
icebp
rcr
nop
mov
inc
sbb
sar
dec
jae
pop
mov
call
retf
enter
add
mov
ins
xchg
jno
jns
fwait
pop
popa
xlat
sahf
dec
(bad)
into
(bad)
fst
jmp
and
mov
or
stos
ins
pushf
mov
xor
call
lods
jbe
pop
hlt
mov
cmp
inc
mov
popf
sahf
mov
fnstenv
and
js
test
xor
inc
int3
push
fcomip
fistp
mov
and
int
pop
dec
sub
push
push
or
ins
push
mov
(bad)
cwde
out
cld
adc
inc
jmp
enter
sahf
xor
add
mov
pop
jmp
fsubr
cmps
rol
cli
or
stc
adc
sbb
mov
jle
lods
mov
dec
sti
push
enter
test
mov
add
adc
faddp
shl
call
xor
mov
stos
(bad)
repnz
fld
add
add
push
add
dec
cmps
test
imul
or
les
pop
sbb
lods
cmp
mov
scas
push
or
repz
call
into
aaa
jbe
fs
cmp
jbe
mov
xor
mov
mov
push
stos
inc
lods
lods
push
xlat
dec
aas
test
pop
out
xchg
std
pop
cmp
add
mov
in
fwait
mov
xlat
jmp
mov
push
add
fimul
fs
inc
jge
mov
inc
dec
(bad)
(bad)
clc
(bad)
lods
mul
add
js
sar
imul
mov
push
imul
sbb
out
add
movs
jmp
push
push
inc
enter
ret
mov
push
retf
xor
mov
sub
cs
mov
jb
xchg
mov
sar
cmp
es
cwde
(bad)
sbb
aad
jge
pop
pop
mov
jbe
fsubp
mov
(bad)
sahf
xor
rcr
or
or
mov
add
push
jns
fldcw
lods
cli
repz
fnstenv
push
enter
ins
and
movs
or
pusha
or
clc
cwde
inc
pop
inc
mov
mov
retf
popf
daa
int
icebp
fimul
int
cmp
retf
xor
neg
mov
into
mov
nop
imul
fidivr
push
mov
mov
dec
(bad)
mov
cdq
pop
fidiv
sti
(bad)
fcmovbe
push
lea
sbb
out
outs
fmul
icebp
jge
mov
jae
pop
ret
rol
or
sbb
jecxz
xor
xchg
jo
fsubr
jmp
sbb
jno
in
out
sbb
jg
jmp
out
xlat
aad
mov
fdiv
out
enter
push
mov
(bad)
mov
pop
dec
js
cmp
jns
pop
dec
mov
int
test
pop
or
mov
outs
dec
ins
and
repz
js
shl
xor
mov
js
cld
clc
jo
push
lock
mov
sub
inc
cmp
sti
mov
movs
scas
pop
addr16
out
jbe
dec
or
mov
adc
leave
call
add
cmp
pop
sub
aam
or
in
jmp
push
jns
xchg
pushf
out
rcl
mov
fsub
jne
pop
mov
ss
pop
sbb
pop
cmp
cmp
pop
mov
mov
int3
cwde
inc
sti
clc
mov
cdq
or
fs
dec
jns
sbb
mov
int
imul
xor
dec
addr16
out
out
jne
sbb
es
fs
mov
sub
fstp
ds
cmp
adc
or
and
out
jb
cmp
inc
jmp
push
cli
or
or
pop
push
and
pop
push
mov
sbb
jle
mov
(bad)
test
mov
xor
std
aas
push
push
xchg
xchg
loop
mov
push
pop
push
pop
sub
sbb
mov
aaa
popf
sub
pushf
push
stos
popf
mov
mov
inc
jae
imul
add
cdq
in
sbb
jb
test
xchg
(bad)
jl
mov
mov
frstor
je
mov
xchg
push
jecxz
mov
add
sbb
iret
or
sub
and
nop
mov
mov
mov
mov
imul
xchg
cmp
pop
mov
or
jp
or
jmp
mov
push
es
js
cmp
cmp
cld
lods
cmps
xchg
add
fsubr
sub
sub
aad
pushf
cmps
das
mov
call
cmp
fild
aam
cs
rcr
adc
test
dec
mov
(bad)
clc
pop
or
mov
jmp
pusha
cli
push
sbb
das
test
les
and
dec
in
call
and
stos
cmp
xchg
imul
cmp
sub
push
dec
push
(bad)
ins
pop
fxch
pusha
fsub
sub
test
sbb
js
sbb
xchg
sub
cmp
add
push
adc
mov
repz
gs
retf
xchg
ror
outs
lods
das
sar
push
dec
push
mov
mov
mov
cmps
enter
cdq
xchg
mov
push
test
cli
push
in
mov
cs
ja
arpl
dec
fidivr
shl
jmp
mov
test
popa
mov
inc
mov
arpl
mov
mov
sbb
push
pop
and
xchg
jle
xchg
xchg
dec
out
scas
mov
fstp
dec
pop
push
dec
dec
xor
addr16
test
sub
mov
sbb
fld
sub
or
mov
stc
fldenv
std
ds
retf
fldcw
xor
mov
fwait
pop
pop
jnp
pop
jbe
pop
cmp
jl
out
sbb
stos
mov
imul
pop
es
test
adc
not
or
clc
fsqrt
out
cmp
pushf
pop
or
jecxz
ja
shl
inc
pop
pop
pop
push
mov
cmps
jmp
std
push
sbb
imul
pop
mov
dec
test
xchg
mov
fnstcw
mov
cs
retf
retf
jnp
jns
aam
sub
add
cmp
out
jmp
shl
cmp
xor
mov
jge
jnp
lds
icebp
xchg
leave
sub
pop
pop
dec
add
(bad)
cmps
jne
mov
fldenv
or
popf
call
dec
jae
pop
fsub
jmp
lock
jnp
xchg
leave
dec
mov
sbb
push
lahf
push
rol
pop
xor
sub
pop
cmp
xchg
fisubr
xor
push
stc
pop
test
call
addr16
and
call
div
cmp
pop
inc
sahf
(bad)
cwde
call
and
push
rol
inc
cmp
clc
xchg
data16
jns
idiv
adc
xchg
ja
jmp
ror
mov
arpl
dec
aas
leave
clc
xor
mov
mov
jnp
neg
jecxz
add
shl
pop
add
ret
iret
mov
pop
xchg
push
fidivr
arpl
imul
and
mov
test
mov
inc
mov
jmp
sbb
fcomp
ret
popa
sub
test
cmps
or
xlat
jns
dec
in
popa
push
or
lds
inc
sub
cmp
mov
sub
mov
pop
mov
and
cmc
scas
ds
mov
fistp
inc
xchg
ja
stos
sub
jmp
mov
or
dec
stos
sbb
jnp
mov
inc
imul
in
lods
retf
xor
aas
test
jo
sbb
enter
popf
sahf
pop
mov
mov
lods
jnp
pop
pop
nop
rcr
push
mov
sbb
outs
inc
in
mov
adc
icebp
(bad)
shr
(bad)
rol
loopne
pop
imul
dec
adc
pusha
call
test
test
pop
stc
scas
int3
jecxz
and
cdq
pop
stc
mov
jle
sub
sub
mov
inc
dec
sar
adc
sub
adc
leave
in
xchg
xchg
dec
test
jno
sysret
jmp
mov
mov
out
pop
dec
lock
ins
push
lods
mov
ja
mov
dec
add
cs
jp
mov
mov
or
cwde
stos
lahf
repz
fadd
hlt
std
sbb
cmp
sbb
test
push
stc
cwde
add
jns
fstp
jp
inc
dec
pop
stos
sbb
lods
sub
push
adc
push
sbb
icebp
add
cmp
imul
aaa
fsubr
jmp
mov
pop
cmp
shr
and
sbb
dec
mov
dec
mov
test
push
fst
sahf
lods
mov
(bad)
daa
xchg
or
into
inc
or
pushf
jns
push
mov
jns
lahf
clc
sti
and
cmp
or
xor
pop
jb
sub
mov
sub
pusha
or
dec
out
add
jb
stc
pop
and
inc
jbe
cmp
push
sub
dec
jb
imul
xor
sub
pop
inc
push
or
inc
shl
add
lods
push
movs
mov
mov
jb
xchg
sbb
push
sbb
test
dec
js
xor
add
jge
cmp
cmp
or
and
mov
xchg
adc
or
fdivr
pop
mov
fld
pop
inc
dec
div
pop
add
or
jae
popa
clc
sbb
mov
add
into
jge
loope
xor
test
clc
cmps
stc
out
pop
cmp
mov
dec
inc
or
xchg
pop
arpl
aad
xlat
xor
xchg
data16
jecxz
sbb
js
into
push
jge
fdiv
sub
sbb
xor
jbe
mov
leave
retf
mov
mov
and
and
sub
pop
imul
pusha
test
test
iret
(bad)
mov
mov
(bad)
and
enter
push
jmp
cmp
sbb
inc
fwait
jle
xchg
fwait
aaa
sbb
jbe
jo
inc
outs
cdq
cdq
fiadd
retf
mov
mov
hlt
sub
dec
pop
pusha
mov
in
retf
jae
jns
dec
stc
test
fldln2
jns
sub
stc
push
mov
ret
and
repz
jno
cmps
into
mov
push
jecxz
rcl
push
or
jl
imul
cmp
sub
or
inc
jmp
jbe
or
imul
fcomp
mov
jmp
jns
out
jo
sbb
fdivr
sub
or
mov
xchg
enter
es
mov
or
test
popf
push
(bad)
gs
pop
pop
pop
jge
mov
mov
loope
pop
sub
cmp
cmp
sub
dec
lods
into
cmp
xor
cmps
les
adc
mov
jl
lds
cmps
inc
iret
outs
jle
dec
or
mov
ds
outs
jmp
sub
and
mov
mov
imul
cmp
mov
cmps
adc
and
sub
test
jecxz
sti
aaa
jnp
push
repz
retf
shr
out
pop
pushf
cdq
and
dec
jmp
call
rcl
push
fldcw
or
aaa
mov
mov
pushf
lahf
sub
or
jns
sub
mov
pop
dec
pop
jmp
clc
xlat
pop
dec
adc
pushf
js
xchg
add
or
js
and
add
int
das
jg
jmp
popa
xchg
dec
mov
cmp
xchg
imul
or
int3
cwde
pop
or
ins
sub
mov
pop
or
lea
xchg
icebp
enter
jmp
jae
inc
outs
stc
dec
pop
sub
dec
ja
fld
jns
or
ins
stos
cmp
sbb
xlat
inc
out
test
or
jbe
dec
das
nop
mov
cld
and
popf
aaa
es
xor
loope
stos
lods
jne
jmp
jnp
or
mov
xchg
dec
jl
enter
adc
sbb
or
and
scas
movs
shl
and
scas
pop
(bad)
cli
xchg
fucomi
cdq
inc
loop
sub
js
pop
int
cdq
push
pushaw
mov
jge
stos
mov
movs
mov
aam
mov
mov
jae
cmp
pop
pop
inc
jg
lea
jmp
dec
adc
sbb
sub
js
test
lods
sub
cmp
repnz
mov
dec
movs
add
cmps
bnd
call
pop
mov
clc
adc
leave
mov
xor
sub
icebp
test
mov
movs
mov
mov
lods
icebp
mov
pop
mov
jle
popa
jbe
jnp
mov
mov
popa
sub
mov
sar
loope
dec
cmp
mov
and
jb
mov
sbb
fistp
test
pusha
int3
xor
mov
and
or
jmp
stos
adc
cmp
neg
cmp
xchg
mov
dec
mov
sub
mov
pop
cmp
mov
xor
out
test
sbb
push
cmp
sub
push
jle
sbb
push
cmp
sbb
cmp
sub
pop
enter
imul
enter
jnp
mov
loopne
mov
test
cwde
cmp
sbb
pusha
mov
mov
mov
in
jge
in
dec
pushf
out
fstp
inc
mov
(bad)
pop
ficomp
mov
sbb
ins
std
adc
jnp
retf
sub
stc
inc
bnd
ins
in
lea
fild
repnz
mov
ds
xchg
dec
psrld
(bad)
mov
sahf
imul
dec
test
sub
xor
cdq
aas
xor
dec
cmp
jp
imul
mov
pushf
test
push
xchg
int3
mov
sbb
retf
sbb
stc
push
push
cmp
cmp
imul
lods
xor
add
push
enter
mov
js
js
dec
retf
ror
jbe
mov
loop
cdq
or
or
fadd
aam
ret
outs
lods
popa
xchg
aaa
ins
in
mov
clc
mov
ja
jg
fs
pop
ds
js
fidivr
push
mov
mov
dec
cld
clc
retf
sub
xor
or
test
push
push
jecxz
retf
mov
iret
in
and
aad
mov
scas
push
xor
fcom
inc
mov
push
dec
fwait
mov
or
pop
xchg
inc
movs
imul
cmp
and
pop
and
pusha
inc
push
push
rcl
mov
mov
adc
or
imul
dec
jmp
cmp
mov
call
pop
mov
push
add
hlt
mov
jns
popa
arpl
ins
pop
(bad)
mov
stos
std
pop
aad
xchg
repnz
cmp
or
and
add
cdq
sub
mov
ds
inc
(bad)
lahf
fsubr
mov
int3
mov
mov
adc
fld
dec
outs
jle
jo
or
and
daa
imul
jmp
jmp
push
pop
or
jecxz
cmp
pop
test
cld
and
pop
jl
cmps
test
sub
jmp
mov
fs
jns
popa
mov
into
sub
into
sbb
fisttp
jp
xor
or
fdiv
pop
cli
stc
loop
(bad)
(bad)
xor
lods
ds
dec
mov
pop
call
dec
mov
xor
jmp
cmp
or
sti
(bad)
aas
jbe
repnz
inc
out
jnp
inc
mov
mov
dec
in
adc
dec
cs
cmp
cmp
pop
add
push
ret
or
cmp
sti
jnp
mov
add
(bad)
je
xchg
test
cli
add
bound
adc
bound
mov
xchg
mov
lods
pop
cmp
lahf
ror
inc
fwait
std
inc
cmp
stc
lods
mov
add
inc
pop
dec
push
mov
cwde
cmp
pop
sbb
adc
fld
inc
adc
sbb
dec
imul
xchg
out
mov
imul
sbb
cmp
mov
movs
jle
mov
mov
adc
mov
mov
mov
test
mov
sub
mov
mov
std
(bad)
mov
mov
dec
inc
loopne
pop
popa
adc
cdq
cmp
push
bound
les
test
mov
add
dec
jmp
fidiv
jmp
jl
cmp
add
push
cwde
rcl
iret
ret
pop
xchg
jns
jmp
jge
fldcw
inc
inc
pop
dec
cli
js
ins
mov
or
pushf
in
lea
sub
and
cmp
stc
mov
sbb
lods
cmp
rcl
paddsw
mov
test
jmp
scas
mov
daa
mov
pop
ret
xchg
scas
cli
pop
aas
or
xor
sbb
(bad)
dec
cmp
dec
ins
add
ss
(bad)
aam
inc
call
push
rol
push
jbe
leave
popa
(bad)
xchg
jmp
push
push
mov
sub
les
sub
mov
js
mov
dec
cmp
mov
(bad)
in
dec
jnp
sbb
in
mov
sub
inc
mov
xchg
stos
xor
add
xor
shl
push
or
mov
mov
sti
(bad)
in
cmp
mov
test
xchg
push
adc
es
or
cmp
inc
cmp
dec
int
jns
xchg
pushf
mov
cmp
pop
call
rcr
enter
jg
gs
add
push
mov
iret
cmps
daa
sub
(bad)
push
mov
dec
js
jne
sub
imul
dec
sbb
pop
mov
loopne
nop
nop
dec
push
mov
fld
lock
imul
in
jnp
mov
ror
or
stos
aas
(bad)
pmaxsw
mov
or
repz
pop
scas
mov
movs
cmp
jmp
aaa
cmp
pop
sbb
test
jae
add
sub
int3
pop
stos
mov
imul
in
mov
popa
imul
outs
mov
jmp
jnp
fmul
xlat
add
pop
fsubr
add
sahf
push
pop
adc
dec
sbb
push
sub
(bad)
mov
jle
jnp
or
test
(bad)
shr
shl
or
add
push
mov
or
cwde
clc
adc
cmps
or
ss
mov
mov
cmc
movs
cmps
mov
cmps
jmp
clc
sbb
imul
jne
and
ror
push
clc
jmp
xchg
add
sub
fwait
jo
xchg
sbb
test
movs
(bad)
and
jns
lods
fisttp
repnz
add
xor
cs
cmp
je
fadd
push
mov
std
mov
jnp
push
jp
push
and
sbb
lods
inc
push
pop
pushf
shl
xchg
sbb
je
cmp
mov
outs
push
nop
loope
jmp
int
xor
inc
mov
mov
mov
mov
dec
xchg
adc
mov
cdq
lds
call
das
xor
xchg
push
std
dec
aas
xchg
dec
add
test
(bad)
fptan
cmp
neg
push
fldenv
imul
call
dec
xor
fdivr
and
cmps
adc
lock
jb
popa
sbb
dec
pushf
(bad)
sub
mov
fcom
sbb
dec
mov
cwde
fnstenv
cmp
or
or
push
push
dec
ror
js
jle
call
retf
add
hlt
jo
jmp
shr
or
lock
inc
mov
xchg
xchg
jns
push
dec
and
xchg
adc
or
call
xor
loope
mov
lods
(bad)
movs
(bad)
add
setno
dec
adc
jmp
add
jmp
xor
loop
call
mov
or
jns
xor
outs
jmp
xchg
cdq
sahf
xor
in
dec
jmp
jmp
mov
sub
sub
cdq
scas
or
(bad)
push
shr
test
sub
iret
pop
sbb
fsubr
push
int3
inc
popa
mov
outs
fadd
retf
fidivr
push
or
adc
stc
or
rcl
pop
ds
or
mov
fisubr
cmp
push
and
and
mov
jns
(bad)
fnstenv
cli
cwde
cdq
fnstenv
cmp
pop
dec
outs
dec
dec
inc
or
shl
and
sub
sbb
mov
mov
mov
call
pushf
call
ja
imul
daa
pop
cmps
mov
popa
lods
mov
mov
cmps
push
enter
cmps
sub
sub
ror
cld
lds
nop
stos
xchg
jns
cli
stos
div
outs
fsincos
cmps
shl
js
sub
pop
in
pop
lock
imul
leave
(bad)
fcom
xor
hlt
cmp
jmp
dec
xchg
pop
sbb
jmp
lods
dec
rol
stos
mov
xor
jp
fadd
(bad)
mov
cwde
dec
sbb
mov
outs
mov
mov
je
retf
pop
sub
in
pop
in
pop
inc
sub
imul
es
test
mov
cmp
data16
jmp
adc
(bad)
sub
push
nop
retf
hlt
movs
frstor
cli
shr
add
cmp
cmps
jns
fnstsw
push
pop
mov
imul
pminsw
adc
and
sub
ret
push
test
fld
push
cmp
mov
cmps
imul
sbb
fimul
mov
sbb
js
cs
fcomp
cmp
dec
dec
cld
sbb
mov
inc
stos
(bad)
(bad)
jns
stos
mov
mov
mov
pop
mov
lea
icebp
push
mov
mov
stc
popf
outs
jo
mov
cmp
fsubr
pop
cmp
outs
pop
in
cmp
adc
ror
or
jge
mov
cmp
jle
mov
stc
mov
jo
gs
dec
int
add
imul
(bad)
lods
pop
sbb
retf
ret
sbb
mov
sbb
dec
push
aaa
xor
test
mov
das
in
stc
jmp
mov
push
cmp
jge
and
hlt
test
mov
mov
dec
les
enter
test
aaa
stos
lahf
adc
loop
pushf
call
stc
retf
dec
dec
ror
jb
nop
cmp
das
xchg
sub
jae
inc
adc
sbb
mov
stc
xchg
sbb
jp
test
push
imul
jl
jbe
jnp
daa
inc
xchg
dec
(bad)
xor
inc
sbb
je
call
or
aas
pop
lock
test
hlt
lods
jb
jnp
jns
xor
jp
int3
arpl
addr16
dec
push
or
xor
fcmovnb
jmp
pop
popa
jl
sbb
mov
mov
sbb
mov
sti
fcom
scas
cld
fucompp
adc
sbb
daa
sub
ds
lods
cmp
stos
cwde
ds
mov
adc
adc
rcr
inc
push
popf
and
jge
xlat
popa
iret
fwait
adc
(bad)
inc
mov
mov
add
sub
inc
cmp
mov
xor
cdq
les
in
sti
enter
call
ja
bound
(bad)
pop
push
dec
mov
pop
dec
test
push
dec
inc
movs
inc
cdq
cld
frstor
cs
dec
cmp
push
or
dec
aad
loope
test
mov
repz
dec
call
pop
imul
cdq
cmp
test
jnp
leave
out
pop
adc
mov
outs
or
dec
cmps
inc
and
retf
mov
xor
cdq
mov
arpl
pop
inc
jl
pop
push
pop
sahf
popa
and
cmp
ss
pop
xor
push
retf
and
dec
pusha
imul
cmp
cmp
dec
scas
cmp
inc
lods
inc
xchg
push
imul
repnz
pop
xor
mov
sub
push
sub
sti
enter
cmp
js
nop
push
and
stos
retf
es
in
mov
xchg
sub
sub
fidivr
and
repz
call
je
ins
ret
adc
or
xor
sti
std
cmp
adc
gs
mov
fs
js
inc
clc
jns
es
sbb
int3
jmp
sub
cmp
cmp
enter
fs
stc
sahf
shl
inc
enter
retf
adc
ret
jb
cmp
jge
push
lea
mov
mov
jmp
fiadd
loopne
call
jnp
fs
cmp
pop
out
inc
cmps
imul
dec
stc
imul
cwde
sub
inc
lock
xor
mov
push
mov
cmp
cwde
fwait
mov
push
out
std
mov
xor
test
cld
cwde
mov
loop
or
mov
push
cmc
or
jmp
dec
jmp
inc
into
sbb
jle
lock
jo
test
sbb
cmps
or
lods
xor
call
mov
fstp
icebp
sub
fwait
jp
out
bnd
pop
push
cmp
cmp
stc
icebp
cdq
std
or
stos
sbb
imul
fchs
mov
rcr
mov
jmp
sub
push
aaa
push
fwait
push
inc
(bad)
std
xchg
retf
add
nop
mov
mov
popa
dec
xchg
loopne
mov
dec
mov
popf
jnp
inc
popf
cmp
mov
mov
or
enter
test
mov
cmp
add
imul
cwde
or
pop
jmp
fmul
or
xor
imul
js
fadd
(bad)
out
push
lock
cli
fdivr
shl
repnz
outs
mov
(bad)
mov
out
pop
xor
pop
loope
dec
cli
inc
push
or
cmps
sbb
cld
sbb
cmp
fucomip
add
mov
add
jns
stc
call
mov
fisubr
(bad)
stos
inc
add
sar
mov
enter
not
in
sub
dec
jnp
push
pop
je
fdiv
stc
pusha
rcr
shl
aas
cmp
push
ficomp
pop
push
jo
jo
push
xor
enter
dec
popa
ins
iret
xchg
popa
leave
cmp
fwait
sbb
pop
mov
pop
lods
or
mov
or
mov
adc
mov
mov
not
push
mov
pop
fxch
sti
call
fistp
js
pop
repnz
or
popa
mov
sar
jl
adc
xlat
and
dec
sbb
lods
movs
lods
or
fadd
jecxz
nop
add
sbb
mov
sub
fadd
ret
cmp
(bad)
jle
cdq
fucomi
sar
out
sar
and
mov
cwde
out
aas
dec
jbe
mov
es
push
dec
push
mov
stos
push
imul
sbb
cmp
enter
les
dec
pop
fstp
(bad)
leave
sub
jae
add
stos
dec
dec
jge
aaa
ja
mov
cwde
lods
aas
loope
xor
fisub
fisttp
ret
mov
push
or
stos
mov
aaa
pop
add
rcl
repz
in
jne
add
and
lahf
sbb
(bad)
js
into
lea
repnz
cmp
shl
ret
mov
or
test
jmp
mov
(bad)
adc
sbb
pop
out
movs
in
mov
or
test
sub
mov
ret
inc
add
shl
cdq
dec
adc
js
inc
sub
mov
pop
jg
mov
sub
pop
lods
fistp
(bad)
call
cmp
jae
ret
imul
test
stos
jbe
and
dec
iret
pop
mov
and
sbb
pop
jp
inc
test
call
mov
ret
scas
in
test
push
js
jg
fsubr
sar
arpl
mov
mov
xchg
dec
icebp
test
out
xchg
ins
dec
test
outs
push
pop
pusha
leave
push
mov
push
mov
fdiv
add
imul
or
or
sbb
iret
scas
(bad)
in
mov
icebp
call
cmp
and
adc
push
call
adc
adc
lods
xchg
clc
retf
inc
stos
adc
ja
stos
stos
cmp
in
mov
call
popf
mov
inc
clc
mov
mov
mov
mov
cmp
ror
leave
add
pop
sub
loope
jle
ss
fstp
test
mov
xchg
mov
jmp
out
and
js
jmp
(bad)
cli
mov
mov
mov
fcmovnb
call
dec
out
mov
cli
pop
std
cli
add
hlt
mov
pop
or
push
adc
sub
inc
clc
xchg
std
mov
mov
mov
jp
cld
or
jl
ss
stc
dec
cmp
mov
xor
cmps
test
inc
push
std
sbb
inc
push
jbe
inc
hlt
jl
imul
push
and
push
hlt
fistp
lods
mov
push
xor
pop
stos
sub
pop
add
mov
push
sbb
xchg
mov
aas
adc
int
call
pop
jge
cli
imul
or
pusha
cmps
leave
repnz
add
lea
outs
inc
mov
mov
cmp
and
pop
pusha
popa
and
scas
mov
cld
test
cli
sbb
(bad)
leave
loope
pop
call
xchg
jmp
pop
pop
and
cmp
sub
loop
or
push
aam
call
cmp
jl
lea
leave
mov
mov
xlat
loop
test
xor
mov
aas
add
das
out
je
pushf
mov
or
xchg
nop
sbb
mov
in
enter
xchg
ret
in
test
fdiv
in
loopne
arpl
dec
pusha
push
mov
js
mov
pop
test
ret
es
das
dec
out
mov
(bad)
popa
cmp
(bad)
fldl2t
neg
ins
or
or
enter
ror
aad
ror
es
adc
out
add
cmp
dec
sbb
jo
test
jmp
sbb
dec
jb
mov
sub
cmp
jmp
shl
lods
xchg
popf
mov
cmp
mov
test
xor
in
adc
mov
or
and
sti
lds
fcmovu
rcr
adc
pcmpgtw
mov
cwde
popa
mov
iret
cmps
je
lods
bound
sub
pop
mov
sbb
pop
clc
rcr
in
aad
cld
mov
sub
mov
dec
pop
xor
mov
xlat
mov
cli
aad
sbb
ror
sub
jns
addr16
clc
in
xchg
hlt
(bad)
mov
inc
sbb
test
mov
pop
fcmovnu
jno
lock
dec
push
mov
ret
test
dec
cld
jle
dec
pusha
jbe
fsubr
pop
cmp
js
xor
je
(bad)
jge
mov
icebp
dec
imul
sub
outs
inc
in
cmp
pusha
cmp
in
pop
(bad)
fst
rcl
out
or
mov
pcmpeqw
lods
ret
adc
and
add
cwde
or
sbb
mov
jecxz
stos
js
(bad)
je
gs
out
cld
(bad)
iret
fisub
(bad)
sub
inc
movs
and
pusha
es
xor
aam
or
mov
push
sub
stc
or
sub
jmp
lahf
shl
jns
inc
pop
cmp
les
mov
lds
sub
sbb
js
jl
fcmove
bound
jnp
shl
mov
pop
mov
dec
cmps
mov
jmp
mov
inc
stos
aaa
bound
ret
mov
sbb
sub
dec
jnp
or
jge
mov
mov
je
lds
leave
aad
jmp
call
call
jmp
sub
push
test
fwait
cs
aaa
jae
jmp
dec
jl
mov
xchg
dec
(bad)
cwde
fist
or
or
pop
mov
mov
test
push
adc
xchg
imul
push
push
jno
cmp
stc
mov
aad
dec
jmp
adc
add
cmps
repz
or
in
mov
mov
repz
add
mov
mov
test
sub
or
in
sar
mov
xchg
test
iret
loopne
inc
out
pusha
jl
test
or
fdivr
mov
cmc
inc
sahf
cmp
xchg
call
out
or
dec
push
pop
sub
imul
mov
test
pop
les
jmp
xlat
or
push
mov
popa
mov
mov
nop
mov
cmp
shl
cmp
pop
adc
cmp
cmps
jp
adc
inc
(bad)
mov
mov
mov
and
in
jne
dec
inc
sbb
pop
add
sbb
and
mov
xchg
mov
int3
pop
mov
mov
pop
lea
jno
pop
lea
dec
(bad)
jmp
std
outs
sub
stc
cs
sbb
loope
pop
push
test
sub
int3
(bad)
cwde
mov
ins
(bad)
ja
out
add
mov
or
sbb
cdq
fidivr
jge
mov
scas
cmps
aam
mov
shl
xor
inc
adc
pop
pop
sub
xchg
and
and
or
popf
add
retf
pop
or
outs
xchg
cmp
popfw
bound
add
mov
imul
inc
lahf
cli
xchg
rcr
push
jmp
rol
cli
dec
mov
sub
mov
jmp
lock
loop
sbb
inc
pop
mov
pop
jnp
lods
test
cmp
jge
popf
loopne
out
push
or
aaa
rcl
jg
int3
fwait
and
mov
pop
call
mov
les
jge
sbb
mov
mov
popf
pushf
dec
icebp
lock
pop
test
or
sar
mov
or
lds
jmp
lods
adc
je
addr16
xor
imul
xchg
aam
pushf
cs
pop
jns
enter
pop
adc
xor
imul
jne
in
movs
fwait
jp
test
sbb
cmp
std
inc
jp
push
sbb
xchg
push
sub
jne
jge
and
lods
stos
push
retf
adc
jmp
frstor
cmp
test
dec
push
dec
or
lods
mov
mov
test
call
jle
jle
popa
inc
ror
sub
sahf
iret
mov
cli
dec
sbb
push
aaa
push
enterw
sub
shl
js
outs
adc
test
mov
sub
lods
(bad)
retf
mov
pop
sub
enter
js
mov
mov
les
cwde
cmp
cs
cwde
jge
and
xchg
dec
adc
cli
cs
inc
in
arpl
mov
sahf
stc
cmp
xor
fimul
lods
mov
idiv
dec
jns
xlat
mov
push
mov
daa
push
jnp
int
inc
jmp
dec
in
pop
jle
mov
stos
clc
int
lock
cld
cmps
pushf
rol
dec
dec
add
jmp
adc
fcmovnu
dec
cld
rcr
les
nop
or
cmp
aaa
dec
cli
enter
mov
mov
jo
leave
mov
xor
sub
dec
cmc
ret
mov
sub
mov
clc
aaa
mov
call
xor
jno
and
mov
or
jmp
(bad)
ja
lea
cmp
ror
mov
sahf
test
shr
clc
jmp
sub
push
imul
xchg
hlt
cwde
push
mov
mov
dec
enter
dec
imul
ds
xor
push
aaa
cli
je
mov
std
mov
dec
imul
jmp
jmp
dec
clc
lods
scas
fnstenv
mov
call
or
lods
dec
(bad)
loopne
inc
push
mov
sub
inc
sbb
mov
movs
pop
jl
(bad)
pop
ja
enter
push
out
and
retf
dec
mov
xor
cmp
aas
dec
rcr
cmc
inc
retf
or
test
sbb
mov
(bad)
sub
push
pop
mov
mov
call
cwde
jo
js
in
cmc
cld
hlt
mov
xor
out
movs
stos
inc
fistp
rcl
inc
out
cmp
xchg
dec
retf
sti
jmp
and
dec
mov
int3
mul
sbb
mov
push
call
aas
pop
ror
adc
push
mov
fcmovne
in
in
sub
add
push
imul
imul
clc
jae
sub
mov
pop
js
imul
push
pop
test
or
inc
les
fwait
enter
mov
pop
in
xor
sub
call
popf
cs
cdq
iret
sahf
mov
imul
and
xor
pop
dec
fwait
test
ja
mov
rcr
cmps
pop
push
rcr
test
cli
loop
push
or
pop
not
lods
adc
cmp
stc
js
jmp
cld
retf
cmp
sub
inc
jae
and
cmp
mov
jns
dec
rcr
or
pop
ret
fbld
cdq
cld
fimul
rcl
aas
mov
xor
push
dec
jp
mov
pop
xchg
test
mov
jmp
jns
sbb
jmp
mov
push
stc
pop
pop
adc
push
clc
pop
call
adc
loopne
pushf
aas
mov
or
loope
jmp
sub
or
adc
popf
leave
add
sbb
std
popf
hlt
adc
mov
imul
stos
iret
mov
test
cmp
in
inc
mov
dec
push
std
cmp
(bad)
sub
nop
pop
jns
cli
sub
loop
pushf
xor
sub
out
(bad)
(bad)
dec
sub
std
jp
mov
popa
(bad)
int
xchg
or
add
lock
test
clc
loop
cwde
ins
leave
retf
sub
mov
jno
out
add
cs
fwait
loope
movs
xchg
or
gs
imul
sbb
sub
pop
clc
push
addr16
jl
mov
inc
imul
lods
sub
fucomi
or
sub
sti
leave
bound
pop
pop
pop
sbb
xor
jle
or
dec
sbb
sub
imul
adc
sar
call
sub
xchg
dec
adc
stc
in
push
push
mov
xor
stos
shl
pop
shl
cs
cmp
loop
sub
and
or
or
lock
fdiv
pop
mov
pop
gs
mov
push
dec
add
retf
jmp
fmulp
repnz
jmp
pop
es
pop
daa
or
aad
js
movs
imul
mov
push
cmp
mov
dec
div
inc
stos
add
dec
inc
clc
and
popf
inc
repz
fsubr
cwde
and
cmp
cmp
sub
outs
hlt
mov
lock
mov
fcmovnu
aas
pop
add
xchg
dec
jecxz
jns
js
dec
enter
scas
mov
inc
pop
jp
lea
js
or
cli
xchg
pop
dec
hlt
jns
sti
cwde
fdivr
push
xchg
daa
ins
pop
aam
cld
sub
scas
mov
push
mov
sbb
dec
push
mov
loop
ins
mov
fdiv
and
test
int3
inc
enter
xchg
jge
pop
scas
imul
loope
xchg
xor
add
dec
ds
jbe
sbb
push
jle
adc
mov
(bad)
ja
mov
pop
les
mov
and
cmp
adc
sub
add
mov
fsubrp
cmp
add
fsub
cmps
popf
mov
call
clc
in
shl
daa
gs
cmp
or
cmp
addr16
cmp
jo
imul
jge
push
add
inc
popa
iret
cwde
inc
popf
out
sub
retf
out
sub
data16
inc
pop
sbb
jbe
imul
mov
push
sbb
mov
and
retf
cdq
mov
fnstcw
cwde
cmp
lods
adc
cmp
mov
jecxz
jns
or
adc
sbb
rol
jno
xchg
cmp
aam
stc
popf
push
sbb
cmp
adc
inc
dec
push
xor
sub
mov
mov
dec
push
mov
jp
in
push
add
dec
jmp
scas
xchg
jle
sub
mov
jmp
retf
inc
loopne
repz
pop
jmp
shl
mov
jae
add
ds
mov
add
js
int3
scas
cmp
pop
stos
mov
add
ins
sub
cwde
xchg
cwde
not
inc
mov
int3
repnz
neg
rcr
jns
das
add
or
inc
pop
shr
xchg
mov
fdivr
jbe
psraw
sub
enter
fidivr
test
push
mov
jno
(bad)
sar
leave
call
(bad)
es
pop
js
jp
jns
push
jns
jns
inc
inc
ficom
and
adc
call
mov
adc
nop
jge
mov
in
jbe
jmp
add
int
inc
add
test
and
sbb
mov
xchg
loope
je
cmp
stc
adc
test
cmp
sub
cmp
test
ret
pop
clc
xor
cmp
push
clc
jmp
jl
sbb
fnstcw
xchg
popa
push
loopne
jo
adc
jns
test
xor
inc
cmps
pop
dec
imul
test
hlt
dec
cwde
xchg
test
sub
fisubr
ins
xchg
js
sbb
sub
cmp
imul
sub
sbb
jge
ret
sbb
fwait
int3
cld
ror
test
neg
sub
leave
pop
dec
push
mov
cwd
fdivr
pushf
push
mov
jmp
sbb
add
movs
loope
add
pop
stos
retf
retf
or
xlat
test
les
sbb
cmp
jo
adc
bound
cdq
sub
repz
jge
sbb
int
jns
mov
push
jg
repz
jp
fcmovne
jo
pushf
test
daa
mov
ror
out
sbb
jl
daa
in
sbb
mov
and
clc
clc
mov
sahf
or
mov
cmp
in
pop
clc
jne
dec
mov
dec
cmp
retf
inc
cwde
je
jp
jp
mov
fisttp
fnsave
pop
mov
dec
sub
sbb
pop
mov
mov
test
lea
(bad)
jae
(bad)
jmp
xor
icebp
xchg
loop
pop
mov
call
aad
sub
xor
pop
jb
clc
stc
(bad)
and
sub
xchg
push
movs
scas
hlt
mov
pop
add
fucomi
scas
je
push
mov
push
dec
dec
retf
aas
xchg
jl
repnz
enter
add
shl
and
cmp
cmp
sbb
push
stc
xor
test
jmp
cmp
(bad)
cmp
inc
shl
(bad)
fisttp
mov
sar
lods
fadd
ins
sbb
xor
sbb
pop
jmp
cmc
sbb
sar
mov
imul
enter
xlat
add
xchg
imul
mov
dec
lds
xchg
sar
sar
or
leave
shr
repnz
mov
test
dec
adc
stos
mov
fsubr
pop
and
cld
loope
xchg
pop
stos
mov
push
(bad)
outs
ins
std
iret
jno
mov
jmp
js
in
retf
jge
repnz
rcr
fdivr
mov
sbb
mov
jns
stos
dec
sub
movs
daa
nop
jl
dec
pop
dec
jge
(bad)
retf
mov
retf
adc
mov
fmul
xor
sti
jmp
dec
lods
pop
pusha
inc
out
jno
mov
je
inc
jno
sar
mov
inc
or
test
mov
retf
or
(bad)
mov
cmp
push
mov
fist
jmp
shr
aam
sub
rol
adc
repnz
mov
mov
or
mov
mov
leave
mov
fcomp
add
enter
jnp
out
ss
push
out
cmc
adc
mov
xchg
in
mov
rcr
stc
jb
aad
jge
add
cmp
mov
rol
ror
sar
fidivr
aas
cmp
mov
jp
sbb
mov
mov
std
into
test
cmp
cdq
adc
out
cmp
dec
inc
xchg
mov
js
hlt
je
cmps
(bad)
mov
sar
mov
adc
pop
mov
mov
fnstsw
add
xchg
jno
push
lock
xchg
push
add
jg
and
mov
popf
nop
popa
jl
movs
cdq
fld
xor
addr16
adc
and
or
push
jno
push
jns
enter
jnp
addr16
ret
pop
cmp
mov
mov
mov
sbb
mov
jmp
das
sbb
in
icebp
mov
xchg
fs
xor
xor
and
inc
adc
es
icebp
push
mov
arpl
dec
dec
or
mov
sar
push
fs
add
sub
movs
shl
stc
mov
test
imul
iret
xchg
or
cwde
stc
mov
js
stc
jl
push
inc
dec
jno
cmp
xor
add
mov
dec
inc
xor
sbb
addr16
popf
int3
mov
mov
and
call
or
push
fcomp
cmp
ret
push
jmp
sti
retf
mov
loopne
aas
pop
les
popf
sahf
pop
arpl
sbb
push
push
out
xor
jp
jge
mov
inc
fsubr
or
cld
xor
sub
(bad)
iret
stos
pop
fdiv
rcl
pop
mov
xor
cmp
inc
int3
cmp
imul
xor
push
push
ss
das
loop
rcr
ja
rol
out
shr
ja
packuswb
popa
mov
int3
pop
fst
xchg
ret
cli
adc
push
sub
aad
(bad)
daa
mov
fwait
push
jbe
je
ja
or
cwde
mov
mov
or
cmp
jl
push
(bad)
outs
or
push
movs
xchg
cmps
push
xchg
pop
jnp
jne
sti
mov
pop
mov
call
jnp
jecxz
dec
in
pop
xor
sbb
jl
push
scas
call
sbb
aas
cmp
outs
add
mov
pushf
sub
or
sbb
or
or
ds
xor
or
add
add
in
pop
(bad)
clc
cld
mov
push
aam
mov
or
(bad)
and
add
sahf
add
mov
das
pushfw
jge
xchg
stc
jmp
xlat
lods
push
dec
cld
iret
or
pop
push
imul
jb
and
cmc
push
mov
jno
dec
retf
cdq
idiv
sbb
cwde
fistp
(bad)
push
jo
leave
pop
ds
mov
jnp
aam
test
jbe
leave
js
sub
mov
sub
cwde
cdq
dec
mov
jae
push
sbb
or
pop
xchg
cmp
pusha
mov
dec
push
xor
xor
xchg
fyl2xp1
inc
imul
data16
adc
fcmovnu
sbb
dec
dec
fnstcw
cmp
sbb
or
mov
test
mov
sbb
sub
adc
aas
fstp
neg
pop
pop
inc
adc
push
dec
jg
cmc
mov
dec
fucomp
hlt
jmp
push
movs
mov
mov
mov
sub
stos
adc
mov
and
leave
cmp
push
ret
pop
or
adc
xor
pop
cmp
int3
stos
mov
and
sub
out
or
sub
mov
into
call
ret
jae
clc
jno
sub
sub
push
sub
add
and
out
adc
and
pusha
xchg
or
cmp
pop
imul
lock
rcr
pop
movs
jecxz
xor
sub
jb
mov
leave
div
or
lahf
sbb
fldenv
mov
pop
fild
sub
ja
std
adc
mov
mov
lods
aam
fcom
pop
cmp
sbb
lods
cmps
test
jb
mov
cdq
sbb
mov
mov
sub
or
add
int
push
push
cld
scas
mov
stos
sbb
fld
pop
int
popa
fdivr
cmp
std
cdq
int
inc
mov
out
loope
inc
mov
or
add
ds
jnp
mov
jbe
dec
test
inc
cmp
retf
xor
or
or
jns
repz
popf
cmp
or
jmp
jmp
mov
fs
mov
sub
int
imul
jge
push
daa
sub
pop
or
xor
and
es
xor
leave
pushf
arpl
aad
push
dec
adc
xor
cwde
les
xchg
and
sbb
inc
inc
cmp
mov
inc
lods
cdq
pop
dec
jo
div
imul
push
dec
xor
(bad)
sub
jl
jns
pushf
cdq
push
cld
push
pop
mov
pop
push
scas
sbb
pop
jno
mov
(bad)
arpl
mov
mov
jmp
(bad)
jno
dec
jle
sbb
pop
call
cwde
dec
dec
arpl
sbb
fxch
(bad)
cli
pushf
mov
jmp
in
aaa
ret
outs
cli
daa
cdq
or
imul
faddp
cmp
shr
loopne
retf
loope
inc
mov
clc
sub
or
int3
add
in
mov
fld
xor
xchg
sbb
in
stos
rcr
div
xchg
or
lahf
iret
push
dec
fs
sub
or
rcl
into
aad
call
add
es
dec
mov
cdq
xchg
push
test
cmp
xor
dec
and
sbb
loope
mov
xchg
xor
hlt
xchg
movs
ins
test
imul
clc
inc
jmp
xor
push
pop
or
popa
lock
sub
or
int
(bad)
jmp
in
setno
js
push
fsub
sti
sub
xchg
add
xor
into
push
shl
(bad)
shl
(bad)
mov
mov
scas
mov
push
jnp
adc
call
leave
icebp
mov
xor
sbb
sbb
enter
clc
scas
rcr
xchg
int
push
iret
adc
add
sbb
push
cmp
xchg
test
ins
mov
push
loope
mov
dec
mov
pop
icebp
enter
les
push
sub
pop
jl
or
bound
fs
xchg
mov
cmc
jmp
cdq
clc
in
inc
shl
and
dec
jns
imul
outs
xchg
jbe
dec
enter
loopne
sbb
dec
or
or
push
mov
sub
xchg
(bad)
pinsrw
mov
shl
test
or
jo
pop
mov
cwde
test
jl
jmp
cs
pop
sub
cmp
sub
in
or
pcmpgtw
mov
movs
outs
bound
enter
mov
clc
dec
jle
cmp
lock
mov
xchg
mov
cwde
leave
pop
fstp
or
xor
or
stos
push
pop
xchg
pop
cmp
xchg
cmp
sub
or
call
mov
xor
imul
in
test
sub
call
jle
mov
in
sbb
sbb
jg
sbb
xor
xor
in
popf
iret
fcomp
cwde
sbb
jmp
test
cwde
fmul
in
sti
cwde
xlat
enter
add
jge
and
sbb
shr
pop
sbb
fwait
xchg
stc
cwde
movaps
dec
iret
pop
adc
lds
pop
cmp
mov
pop
sbb
das
aad
sub
std
repz
jp
fisub
enter
inc
pushf
pop
adc
call
cmp
movs
call
jo
imul
movs
push
mov
adc
iret
jne
ins
outs
fldenv
inc
dec
jge
ins
cmp
pop
mov
sti
sahf
call
hlt
fdiv
adc
cdq
jns
fmul
in
sbb
out
in
in
and
(bad)
cmp
outs
pop
int3
dec
inc
outs
xchg
cmps
imul
scas
lods
mov
mov
adc
pop
pop
addr16
cmp
dec
mov
cwde
in
cmp
add
or
addr16
test
imul
cmp
lods
cdq
inc
stc
js
mov
adc
inc
jmp
and
inc
aam
sub
cdq
dec
adc
or
ret
push
mov
cli
mov
sub
sbb
mov
mov
mov
adc
(bad)
sbb
inc
cmp
or
mov
cwde
test
call
xor
gs
cs
sbb
sub
dec
sahf
jb
pop
push
(bad)
idiv
in
imul
cdq
clc
out
daa
jmp
pop
sbb
jo
cmps
popa
sub
xlat
mov
fsubr
xor
and
das
test
pushf
aaa
scas
mov
xchg
push
leave
(bad)
push
outs
add
loopne
retf
push
inc
dec
or
mov
cli
sub
sar
fs
mov
mov
sti
add
retf
sbb
sub
outs
cmp
ja
mov
pop
in
les
or
pop
xor
mov
mov
in
mov
xchg
out
pop
movs
xor
lods
in
mov
cmp
lahf
xchg
ja
imul
test
out
lea
mov
add
dec
cld
fidivr
mov
stos
cmp
repnz
pusha
(bad)
add
push
xchg
cmp
sub
jmp
jnp
aad
cdq
inc
das
cld
push
aam
sub
push
dec
cwde
das
sub
mov
movs
push
jmp
push
xor
in
push
enter
mov
fistp
mov
dec
(bad)
dec
pop
jnp
int3
push
rcl
push
lds
enter
hlt
jmp
out
retf
push
fldcw
dec
test
sub
adc
pushf
js
int
inc
stc
in
pop
repz
js
bound
fisubr
data16
imul
call
inc
aaa
mov
cdq
fwait
inc
dec
imul
(bad)
mov
sbb
sub
jp
test
leave
and
jno
jmp
sahf
imul
imul
cdq
mov
push
pop
pop
sbb
inc
in
cmp
popf
dec
inc
cdq
mov
call
adc
in
shl
in
jmp
popa
mov
and
cmc
sar
jns
stos
adc
jmp
push
sub
dec
adc
adc
lods
and
ret
jmp
push
xor
imul
(bad)
jmp
mov
lahf
cwde
or
out
and
push
jp
pop
cmp
mov
dec
addr16
cmc
jne
shr
cmps
jmp
and
out
sti
test
pop
ror
xchg
mov
scas
pusha
mov
push
enter
and
add
or
sbb
test
or
mov
sub
mov
jg
or
fisubr
cdq
test
dec
fs
call
call
shr
or
xchg
outs
xor
(bad)
push
inc
sub
push
dec
aad
(bad)
in
adc
mov
sti
sub
fmul
xlat
sub
stc
push
sbb
xor
out
faddp
mov
inc
shl
(bad)
cmps
mov
sbb
pop
add
sub
push
loop
push
jns
scas
pop
(bad)
and
pop
pop
in
mov
clc
(bad)
ss
outs
add
cwde
mov
jb
or
sub
(bad)
clc
jp
arpl
leave
mov
mov
mov
fmul
fcmovnu
sub
lods
push
pop
pop
in
push
pop
call
pop
xor
mov
clc
leave
outs
stc
jp
in
dec
sbb
aam
dec
sub
out
pop
sbb
movs
test
stc
dec
in
pop
rol
fmul
aaa
fldcw
jns
fldcw
push
push
pop
push
jns
pop
push
fcom
(bad)
fsubp
mov
cmp
xlat
(bad)
or
aaa
or
mov
ins
loop
test
mov
(bad)
inc
xor
dec
pop
sub
add
cmps
push
fisttp
cwde
fsubr
dec
or
mov
pop
imul
sbb
pop
mov
xchg
mov
int3
mov
jp
push
in
shr
ficomp
sbb
pop
mov
cwde
(bad)
sbb
fstp
sub
add
xor
dec
(bad)
je
enter
mov
aad
movs
cli
sub
and
xchg
sbb
xchg
dec
push
dec
mov
inc
stc
xchg
(bad)
jne
add
fld
es
popf
adc
sub
test
cwde
mov
int3
fnstsw
adc
stc
xor
sub
imul
jns
fwait
xlat
cmps
pop
inc
sub
adc
and
int
add
pop
cmp
xor
inc
movs
mov
push
push
cmc
dec
into
stos
dec
test
cli
les
hlt
mov
cmps
outs
in
shr
push
lods
pop
push
push
arpl
cmp
(bad)
clc
enter
or
pop
sub
int3
sub
dec
jg
or
fst
ret
retf
(bad)
std
inc
pop
les
enter
pop
pop
add
in
mov
movs
mov
sbb
xchg
(bad)
(bad)
fild
fcom
dec
mov
sbb
lahf
movs
dec
or
popf
imul
fidiv
fist
aaa
in
or
in
idiv
add
inc
adc
aam
aam
mov
call
pop
ret
and
outs
jne
gs
popa
mov
call
mov
push
stos
pop
sub
and
sub
aad
je
mov
inc
mov
aam
aas
mov
fmul
int3
mov
neg
dec
fs
xchg
dec
dec
scas
cmp
scas
mov
stos
mov
or
sub
push
pop
data16
jne
cmps
xchg
or
cmp
test
push
test
jmp
(bad)
or
sbb
push
cmc
fdivr
mov
imul
mov
imul
jp
sub
xchg
sub
pcmpeqb
scas
popa
das
xlat
mov
out
sahf
mov
std
push
mov
inc
push
sbb
imul
cmp
or
inc
jns
in
mov
fldenv
jg
mov
add
inc
mov
pusha
mov
mov
push
loope
xchg
jae
dec
ret
test
and
(bad)
sbb
aad
fisub
popa
xchg
dec
and
push
test
iret
jae
out
lds
cld
fsub
(bad)
mov
mov
fldcw
fnstenv
push
mov
int3
jp
mov
outs
cmp
clc
xor
pop
or
xchg
jle
aad
xchg
add
push
movs
and
xchg
es
(bad)
in
xchg
ins
cmp
cmps
cwde
cmovnp
cwde
mov
adc
mov
les
sbb
stos
shl
lods
int3
(bad)
lods
mov
dec
ins
or
cmp
push
mov
ss
loope
hlt
js
push
sub
cmp
or
pop
push
dec
mov
add
push
(bad)
test
push
out
sar
in
sbb
add
dec
jecxz
in
imul
int3
hlt
sbb
ja
ror
bound
push
mov
sar
mov
and
pop
and
bound
fld
cmp
and
sbb
jb
dec
inc
div
xchg
add
mov
(bad)
xchg
out
jne
mov
mov
xor
bound
les
aam
stos
mov
ret
jl
ret
retf
sub
test
aam
in
mov
fmulp
outs
or
ins
clc
jns
inc
mov
pop
call
cld
push
in
cwde
jno
leave
mov
fdivr
adc
aas
cmp
loope
sahf
dec
inc
jp
cmp
fcmove
frstor
pop
iret
cmps
(bad)
mov
lea
sbb
ror
pop
sbb
or
sbb
clc
movs
add
push
call
push
jbe
jmp
adc
mov
js
enter
in
push
call
or
jmp
sub
pusha
mov
ret
scas
xor
sbb
mov
(bad)
aam
int
pop
dec
test
jge
xchg
cli
mov
call
popa
imul
or
cmp
or
jo
(bad)
cdq
fsubr
cdq
cmc
pop
das
inc
inc
sar
pop
sbb
jnp
pop
xor
punpckhbw
hlt
jg
out
int
jbe
jle
xchg
retf
cmp
ss
(bad)
enter
arpl
jo
aas
xchg
or
or
pop
dec
stos
or
sbb
push
leave
pop
mov
fadd
mov
call
cmp
pop
mov
lods
jge
jle
fistp
iret
cmp
gs
(bad)
popf
retf
xor
mov
jnp
sub
addr16
jp
hlt
sub
mov
xchg
or
sbb
rol
push
dec
xchg
dec
jns
mov
imul
inc
or
call
fsubr
pop
push
out
push
fldcw
push
ja
add
gs
fsub
(bad)
push
(bad)
imul
int
popf
fstp
mov
dec
js
(bad)
mov
mov
mov
sti
lods
adc
push
sub
add
mov
hlt
or
cs
cmp
sahf
xor
cmp
pop
ins
xor
or
dec
daa
adc
mov
push
add
iret
movs
lea
pop
test
fild
js
xlat
sub
push
cdq
outs
mov
mov
cld
lea
enter
xchg
(bad)
sbb
lahf
neg
out
into
fwait
dec
outs
dec
in
mov
inc
mov
mov
mov
cmp
jns
jge
(bad)
sub
out
movs
push
cmp
ja
xchg
lods
popf
test
daa
rcl
cli
pop
cmp
int3
outs
inc
loopne
sub
sub
pop
jnp
sub
mov
jle
add
repnz
jne
fsubr
lea
mov
movs
jns
rcl
jo
fnstcw
add
sub
dec
jle
and
jg
and
outs
xchg
call
fcomp
mov
pop
enter
cmp
push
xchg
mov
gs
mov
retf
out
cdq
clc
cmp
sbb
retf
xchg
xchg
idiv
(bad)
sub
(bad)
pushaw
lods
push
push
(bad)
jns
pop
mov
or
div
fimul
out
jmp
sbb
and
cmp
hlt
push
(bad)
ret
cmp
sbb
cli
add
fild
cwde
xor
imul
leave
imul
out
xchg
int3
sub
or
xlat
test
sahf
leave
or
mov
sti
inc
in
popf
mov
in
mov
or
add
pop
enter
mov
pop
lods
sbb
test
xchg
test
scas
cmp
stc
xchg
retf
sbb
js
dec
xlat
out
dec
cwde
ds
sub
mov
dec
(bad)
(bad)
jmp
fxch
and
jle
repz
ins
cmp
cmps
cmp
pop
jns
cmps
sbb
pop
jns
mov
movs
pop
fs
sbb
test
sbb
mov
push
or
test
mov
mov
jne
enter
fst
dec
add
cmc
mov
cdq
in
sbb
sbb
sbb
pop
or
mov
leave
test
xchg
push
inc
sahf
lea
mov
xlat
pop
adc
cmp
fwait
mov
or
inc
stc
jnp
hlt
inc
pop
mov
imul
leave
inc
xchg
add
in
(bad)
fsub
cmp
loope
pop
leave
inc
mov
and
xor
aas
sub
movs
mov
or
jns
in
adc
jb
adc
cmp
out
(bad)
jmp
sti
mov
jecxz
les
enter
loop
fldcw
cmp
div
fsub
and
cmp
sbb
dec
sub
xchg
shr
lods
pop
fnsave
(bad)
or
add
adc
mov
out
sbb
mov
sub
or
scas
je
mov
(bad)
imul
inc
add
call
mov
es
and
(bad)
adc
xor
push
xchg
add
fstp
dec
mov
mov
daa
pop
and
aad
mov
push
pusha
push
mov
and
scas
jns
xor
xchg
push
pop
int
push
sbb
jge
(bad)
mov
(bad)
cli
xor
cmp
push
inc
dec
je
sbb
dec
xchg
mov
mov
jmp
int3
ret
or
add
xchg
add
cmps
inc
jbe
lock
jo
mov
and
sub
(bad)
xor
addr16
dec
xchg
jmp
jmp
pop
ss
std
xor
xchg
shl
not
sbb
adc
dec
mov
or
ficomp
xor
mov
imul
popf
pushf
sbb
xchg
add
xor
popa
adc
sbb
dec
pop
push
jp
test
mov
jmp
inc
mov
sti
inc
xor
ins
cwde
movs
mov
cmp
mov
aaa
popa
inc
movs
aam
stos
cmp
sbb
ss
lods
cdq
(bad)
fsub
movs
add
rcr
fwait
mov
mov
jne
and
pop
add
xchg
sbb
sub
mov
dec
in
inc
rcr
test
fmul
cmc
dec
test
ja
add
or
call
push
je
push
dec
push
mov
dec
mov
dec
stc
add
cmp
jmp
and
push
sahf
mov
leave
enter
enter
or
push
or
imul
cwde
gs
je
mov
pop
in
in
jmp
call
mov
stc
gs
mov
pop
jle
aam
add
xor
call
mov
aad
retf
push
je
popa
sub
cdq
push
mov
sbb
stc
or
jmp
fwait
xor
and
push
jmp
aas
cdq
xchg
mov
sbb
leave
dec
pop
pop
cld
aam
adc
or
or
inc
pop
cs
mov
pop
out
ins
in
cmp
mov
cs
mov
xor
imul
retf
pop
(bad)
sbb
sub
inc
and
mov
push
js
hlt
jno
test
adc
or
xor
xchg
cmp
push
jl
mov
add
sub
dec
cwde
test
fwait
je
mov
jnp
in
fistp
dec
sub
mov
stc
sbb
and
add
mov
popf
mov
jbe
mov
xor
pop
pop
(bad)
ror
stc
mov
xor
mov
popf
mov
jl
ins
sbb
cmp
leave
add
fcom
out
push
inc
jle
push
push
movs
xor
dec
test
mov
push
scas
sub
les
adc
xchg
es
push
scas
lds
push
inc
inc
cli
test
sbb
jle
cmp
xchg
out
sub
push
aad
div
icebp
pop
pop
jbe
gs
xor
cmp
cmp
loope
dec
inc
repnz
movs
enter
sbb
sti
pop
sbb
clc
mov
lock
scas
and
push
outs
cmp
mov
sbb
fmul
or
fs
call
mov
push
outs
push
sub
jmp
lds
pop
or
and
out
mov
out
jb
movs
jns
dec
lods
mov
call
rol
fld
xor
clc
dec
bound
push
fs
cmp
lea
mov
pop
popf
in
bound
jp
jnp
push
test
xor
add
xor
add
call
xchg
test
jmp
or
pop
mov
cmc
hlt
fstp
fdiv
pop
and
push
repnz
jmp
cdq
popa
ins
or
daa
pop
sub
sub
adc
pop
fidiv
leave
mov
cdq
cwde
xchg
call
add
hlt
test
inc
sbb
push
push
sub
arpl
fild
movs
stos
xchg
xchg
adc
call
sub
(bad)
or
jno
cmp
mov
daa
and
cmp
push
add
mov
cmp
fnstenv
mov
inc
xchg
imul
sbb
in
fst
xlat
fsubr
sub
dec
pop
jns
test
mov
test
cmp
imul
fcmovne
aaa
xor
data16
xor
sub
leave
or
cld
call
pop
sar
xor
mov
addr16
lods
jns
out
xchg
js
inc
mov
add
or
sbb
xor
loop
scas
pop
pop
imul
inc
jns
scas
add
clc
dec
add
cmp
jns
clc
dec
outs
fdivr
(bad)
push
mov
and
fwait
out
add
fmul
arpl
and
xor
pop
cwde
(bad)
mov
loopne
sbb
leave
pop
sub
in
dec
pop
cmp
loop
xchg
xchg
xchg
pop
dec
fdivr
call
add
adc
inc
sar
in
inc
mov
imul
ss
ror
loope
dec
pop
xchg
gs
xor
das
neg
dec
or
pop
sbb
add
cld
xchg
push
mov
ins
mov
bound
ds
clc
daa
mov
dec
xor
cmp
dec
cmp
sub
call
imul
(bad)
and
or
fldl2t
cli
xchg
repnz
fld
imul
add
retf
push
sbb
pop
js
push
mov
retf
sub
(bad)
fld
jmp
or
jl
push
mov
vmwrite
js
es
mov
pop
or
mov
inc
pop
sbb
xor
fwait
xchg
stos
mov
cli
sbb
pop
and
stos
leave
sbb
movs
icebp
fucomi
xchg
sbb
cmps
cdq
mov
(bad)
sbb
movs
and
clc
cmp
sbb
push
cmps
je
enter
inc
mov
lods
in
mov
syscall
mov
xor
ins
lds
call
clc
aam
stos
ins
pop
pop
dec
mov
adc
and
push
sub
sub
mov
pop
jb
js
dec
in
fs
enter
sub
retf
repnz
mov
gs
dec
dec
dec
jge
sbb
jg
lahf
clc
mov
sahf
adc
jne
and
add
mov
add
pop
pop
rol
test
ja
pop
mov
aaa
shl
and
out
clc
(bad)
sub
in
push
test
dec
leave
(bad)
outs
ja
test
or
cmp
int
icebp
xchg
jns
cmp
das
dec
into
int
fwait
add
call
inc
mov
adc
cwde
(bad)
sbb
pop
lea
pushf
add
inc
lods
fadd
inc
test
jns
or
push
and
sbb
sub
xor
xor
xchg
xchg
lods
stos
lea
pop
mov
xchg
inc
data16
sub
adc
cmc
(bad)
jo
sbb
push
(bad)
cwde
movs
popf
imul
cmp
mov
and
repnz
dec
cmovne
stos
imul
out
clc
mov
add
xor
fxtract
mov
in
mov
inc
in
push
cmp
sbb
push
mov
and
or
loope
ret
retf
pop
add
stc
jns
movs
xlat
js
jo
pop
push
adc
xor
mov
sub
sub
lahf
inc
mov
push
(bad)
xchg
leave
mov
outs
mov
sbb
xor
fld
(bad)
xor
aaa
pusha
dec
je
mov
rol
mov
mov
and
xor
loop
dec
or
jecxz
sub
test
jne
fwait
jl
or
adc
test
movs
pop
and
clc
test
dec
fst
es
jns
dec
int3
cmp
cld
gs
jbe
in
ins
inc
sbb
sbb
test
jmp
sbb
sub
mov
or
iret
jbe
mov
test
leave
pusha
ret
fmul
or
or
mov
push
inc
push
sahf
call
add
mov
out
jns
inc
dec
fwait
dec
in
jns
mov
fiadd
xchg
dec
leave
test
enter
cmp
lods
std
test
loop
movs
fnstenv
inc
jne
add
add
mov
loope
cld
aam
dec
out
sbb
add
pop
push
repz
or
(bad)
cmc
fmul
fdiv
adc
mov
or
jns
out
pop
xor
adc
pusha
push
adc
out
and
std
in
mov
ds
jno
adc
int3
(bad)
(bad)
hlt
scas
push
dec
cld
mov
icebp
sbb
lds
cmp
mov
sbb
sub
sub
call
movs
out
fdivp
ja
aaa
scas
movs
mov
cmp
mov
push
pop
sub
push
imul
jmp
ds
lds
pop
leave
inc
pop
int3
push
std
hlt
push
xchg
test
inc
fcom
push
aam
inc
scas
adc
jne
jmp
stc
xchg
stc
addr16
sar
sub
xchg
and
jmp
add
sbb
xchg
idiv
pop
jecxz
enter
fisttp
aam
jmp
scas
pop
scas
imul
mov
sbb
xchg
fimul
popf
sbb
jp
lea
mov
or
jmp
(bad)
pop
imul
or
pop
ins
sub
fistp
daa
fdivr
aad
dec
sahf
cdq
pusha
(bad)
stos
or
cs
cwde
push
dec
leave
push
pop
add
push
xor
cwde
cmp
cmp
jb
mov
call
and
mov
aas
adc
je
shl
dec
cmp
pop
js
stc
scas
nop
mov
jmp
pop
push
cmp
jge
pop
xor
sbb
sti
stc
ret
cwde
mov
adc
jmp
jge
sub
mov
xor
add
sti
loopne
mov
fsubr
lods
mov
popf
mov
add
and
ds
xor
je
hlt
push
lods
mov
pop
mov
int3
lahf
mov
stos
js
pop
cmp
sub
stos
adc
pop
mov
rol
sbb
adc
cmp
pop
cmp
je
cs
and
mov
bound
movs
ficom
aam
and
or
sbb
xor
lahf
inc
mov
sub
leave
mov
leave
lods
mov
sbb
fdivr
cdq
call
(bad)
cld
mov
adc
cli
inc
mov
xor
shl
mov
enter
lahf
jmp
xchg
imul
push
push
pop
les
pop
or
fcomp
jg
aaa
fcomp
rcr
mov
addr16
mov
sbb
enter
adc
or
in
mov
cmc
out
adc
and
add
pop
int3
inc
push
xchg
mov
test
mov
scas
jbe
fsub
data16
lods
xor
lods
dec
push
aas
stos
enter
xor
dec
mov
jmp
jns
dec
sub
push
fs
pop
xor
jbe
jecxz
push
cmp
in
push
sub
inc
sbb
xchg
retf
xlat
xchg
test
es
stc
mov
sbb
ret
mov
js
lods
xchg
pop
add
sbb
clc
(bad)
dec
cmp
jmp
dec
cmp
sub
push
jns
es
cmp
test
in
test
retf
stc
jmp
(bad)
jge
leave
xchg
dec
inc
stc
xchg
xchg
pop
push
push
loopne
outs
es
mov
mov
clc
int
cmps
pop
jno
int3
mov
loop
movs
xchg
movs
mov
lods
adc
leave
xchg
add
jge
inc
inc
fwait
lods
adc
jl
sahf
mov
sub
ins
jecxz
xor
enter
enter
gs
push
ins
pop
sub
addr16
sub
int3
aam
jl
jmp
cmp
sbb
or
retf
fisttp
add
(bad)
es
xor
sub
add
imul
(bad)
cwde
idiv
les
in
mov
cmp
cmp
jle
bound
ja
sahf
enter
sbb
js
cmp
mov
movs
push
out
ds
aam
and
in
es
fwait
xchg
cmp
call
fbstp
(bad)
fistp
enter
mov
push
xchg
std
call
mov
(bad)
gs
sbb
pop
cmc
sub
jbe
cmp
js
mov
ins
ins
enter
aam
cmp
xlat
popf
push
fldl2t
sbb
arpl
enter
cmp
icebp
mov
mov
mov
movs
test
lds
sub
jb
push
push
mov
jge
inc
mov
inc
push
aad
cmp
sbb
mov
lea
scas
outs
popf
enter
stos
(bad)
aaa
inc
sbb
inc
cmp
das
xor
and
imul
fadd
push
bound
jns
das
fbstp
mov
jo
pop
dec
push
jns
mov
sbb
push
push
clc
jns
push
ror
jbe
pop
stos
dec
dec
cdq
stos
imul
mov
leave
int
xchg
inc
inc
stos
aaa
or
lods
lods
dec
adc
mov
out
xchg
in
ret
jb
bound
inc
push
mov
aas
inc
es
ret
xchg
ins
mov
pushf
cwde
enter
mov
mov
sbb
xor
sar
mov
dec
sub
xchg
test
inc
add
mov
fsubr
out
or
clc
cmps
jae
cmp
sub
cmp
mov
mov
lahf
ja
out
add
jecxz
adc
cmp
pop
add
imul
fs
xchg
fld
lock
fwait
stos
and
iret
outs
pop
(bad)
dec
dec
mov
fs
jb
or
leave
sub
pop
cmps
test
int3
jns
sub
push
push
jbe
jle
test
data16
or
(bad)
adc
mov
jle
mov
fnstenv
dec
ja
test
cli
das
enter
add
dec
(bad)
xlat
mov
xor
cwde
adc
stos
add
and
je
sbb
dec
mov
mov
inc
xchg
jg
frstor
lds
jmp
out
ss
jle
xchg
out
imul
cmp
or
(bad)
sbb
mov
and
into
cmp
adc
cwde
cwde
mov
test
pop
enter
jae
mov
add
(bad)
sahf
sbb
xlat
(bad)
int
mov
jbe
std
mov
mov
stc
scas
pop
dec
repnz
ret
fldenv
add
pop
lahf
shr
movs
push
push
sub
xor
xor
in
adc
pop
mov
mov
inc
pushf
pop
mov
mov
adc
out
and
xor
and
push
hlt
call
(bad)
xlat
cld
xor
in
out
cmp
in
jmp
xchg
push
cdq
inc
push
mov
stc
(bad)
fadd
out
jns
popa
aaa
push
call
sar
push
shl
fdivr
retf
mov
leave
push
or
xchg
data16
push
sub
xchg
adc
out
mov
sub
in
cmp
aas
imul
in
dec
test
sbb
cmp
jns
(bad)
sbb
je
out
cwde
cdq
lea
jp
mov
call
sbb
stc
lock
push
test
imul
aaa
dec
dec
pop
cwde
mov
and
sub
es
pop
call
sbb
enter
sub
sub
ja
imul
out
test
shl
inc
inc
mov
or
cmp
and
into
mov
mov
lahf
lea
aad
data16
icebp
adc
stos
mov
pop
ret
mov
test
xor
jecxz
dec
sbb
clc
pop
sbb
cmp
loope
pop
xor
shl
jmp
sar
jno
push
cwde
in
push
pop
pop
jg
or
cld
mov
inc
int
dec
repz
into
aad
stc
jns
pop
test
mov
cdq
out
out
call
hlt
pop
and
out
psubsw
cs
inc
mov
jg
jnp
in
mov
fimul
push
inc
push
or
jle
mov
push
call
cwde
mov
or
rol
xchg
stc
cdq
test
test
inc
int
cmp
sub
push
into
ror
jmp
sub
rol
jmp
and
push
scas
test
mov
fdivr
call
mov
addr16
test
and
fisubr
xchg
std
jmp
imul
xchg
xchg
jp
pop
xchg
and
push
shrd
dec
es
imul
rcr
jl
js
xlat
mov
fsubr
pushf
sete
int3
icebp
out
(bad)
std
mov
or
fstp
xor
pop
mov
fidivr
lods
xchg
sub
ss
scas
sbb
sbb
lahf
dec
add
pop
mov
popa
mov
xchg
cwde
in
mov
xor
dec
xor
cmps
mov
shr
cwde
cwde
(bad)
in
(bad)
cmp
call
call
ficomp
push
push
aam
imul
dec
test
int3
jg
jb
aaa
xor
(bad)
(bad)
out
pop
mov
mov
fs
(bad)
je
iret
or
test
aam
jns
mov
push
pop
out
std
(bad)
pushf
xchg
mov
jge
dec
stos
in
push
inc
xchg
and
jnp
mov
js
push
fdiv
scas
push
or
cdq
(bad)
call
and
icebp
dec
or
mov
inc
add
or
ret
addr16
inc
sub
dec
rcr
mov
test
enter
enter
xor
aas
sbb
(bad)
js
cwde
pop
fcomp
jg
adc
mov
rol
jg
out
sbb
in
push
ficomp
mov
pop
or
mov
lea
pop
mov
or
(bad)
(bad)
mov
mov
dec
pop
xlat
cmp
fdiv
clc
push
cld
jne
das
push
aas
repz
movs
fisttp
cmp
sub
sbb
mov
jmp
adc
aas
xor
loopne
mov
fdiv
dec
dec
push
std
sub
mov
cmp
and
dec
fadd
mov
lock
aaa
sub
sub
pop
mov
rcr
xlat
sbb
xor
shl
aaa
xlat
clc
aas
loop
sbb
rcl
or
cmp
sub
cmp
mov
pop
fild
fcomp
lea
mov
sbb
mov
fdiv
mov
enter
inc
mov
out
mov
push
js
repz
jnp
pop
cs
pop
lds
sub
push
and
popa
mov
xchg
xchg
add
push
test
movs
mov
shr
pop
movntps
mov
in
bound
fsub
les
pusha
js
imul
test
sub
je
pop
xlat
mov
enter
test
stos
add
mov
cwde
outs
sub
mov
outs
ja
in
cmps
cmp
les
loopne
and
inc
xor
add
mov
(bad)
iret
xchg
arpl
or
xchg
jecxz
bswap
scas
imul
aad
in
call
push
adc
dec
scas
loopne
hlt
out
shl
scas
loope
lods
int3
gs
cdq
(bad)
loopne
in
aad
sbb
inc
mov
sub
adc
sub
in
leave
add
or
jo
mov
movs
and
mov
cld
add
movs
inc
inc
inc
inc
cmps
jle
shr
mov
mov
and
fsub
inc
mov
ret
popf
add
or
pop
les
out
pushf
dec
in
enter
sbb
mul
push
imul
jae
les
cmp
int3
fs
adc
in
(bad)
test
fs
and
dec
mov
xlat
or
or
lods
inc
test
daa
cmp
cmps
xlat
xchg
pop
outs
mov
fist
pop
mov
pop
mov
je
inc
sbb
pop
xchg
adc
enter
inc
scas
in
in
jnp
(bad)
xor
pop
inc
jmp
jb
xchg
sbb
adc
or
mov
add
pop
push
pop
fidivr
in
cmp
xor
aad
aad
and
repnz
jnp
call
repnz
xchg
dec
jmp
and
mov
(bad)
call
or
gs
addr16
lods
int3
(bad)
dec
popa
jg
inc
fnsetpm(287
inc
cmp
jg
hlt
test
mov
cmp
jb
cmp
xor
je
loope
popa
fistp
movs
xor
xchg
lods
sub
pop
gs
div
jmp
call
fistp
jg
jle
jle
inc
jmp
outs
loope
scas
ja
jae
jg
aas
sub
push
outs
pushf
pop
and
xchg
adc
out
inc
mov
out
inc
xor
loope
gs
mov
jnp
add
dec
inc
add
sub
outs
data16
mov
mov
jne
ret
sar
fnsave
mov
leave
fild
outs
adc
out
popa
repnz
int3
out
outs
add
and
enter
lea
test
fcom
xor
pop
inc
test
sahf
test
and
scas
dec
imul
leave
test
out
leave
das
jno
dec
scas
dec
sub
dec
mov
cmp
scas
rcr
sbb
mov
pop
scas
dec
in
mov
add
cmc
arpl
mov
pop
jmp
or
xor
and
dec
mov
inc
scas
(bad)
sbb
sbb
push
pop
push
imul
fpatan
aas
lea
(bad)
imul
dec
adc
push
pop
repnz
pop
jmp
leave
lods
inc
inc
jmp
sub
aas
xor
pop
leave
das
or
inc
push
lea
aas
fisttp
cmp
daa
inc
mov
pop
(bad)
retf
ins
icebp
pop
icebp
pop
int
into
sub
dec
test
test
aas
lahf
mov
rol
sbb
push
rol
aas
scas
xchg
outs
pop
mov
cmp
or
test
and
movs
popf
je
and
inc
ins
mov
jmp
(bad)
cmp
dec
cdq
pop
push
dec
sti
mov
je
movs
add
outs
dec
out
(bad)
fwait
imul
mov
pop
or
push
rol
ror
push
movs
jp
mov
aaa
pop
cmps
movs
lahf
inc
or
inc
shl
ins
pop
aas
in
daa
ror
mov
imul
pop
inc
lods
retf
das
or
fimul
jp
pop
pushf
bound
sbb
jmp
xor
sahf
lds
lods
fstp
dec
push
mov
popf
int
into
pushf
(bad)
clc
call
repnz
nop
dec
mov
loopne
push
push
cmp
inc
jmp
jge
inc
(bad)
sbb
sub
xchg
loope
addr16
push
cmp
(bad)
ror
jl
pop
into
sub
cmp
mov
inc
pop
dec
dec
jl
jmp
fmulp
sbb
out
pop
clc
movs
cmp
sub
inc
jmp
mov
sahf
mov
enter
mov
sub
stos
xor
ret
xchg
sbb
repz
movs
call
mov
into
cwde
inc
stc
adc
std
lock
hlt
dec
pop
jge
into
pop
jmp
popa
push
dec
jge
inc
jmp
stc
cmps
fnstsw
sbb
mov
movs
in
in
or
dec
popf
mov
inc
aas
into
int3
out
or
jns
push
lea
stos
push
jmp
pop
jb
cmps
sbb
into
cmp
fdivr
mov
pop
icebp
xchg
push
cmps
test
mov
add
aam
popf
or
push
add
sbb
adc
into
lds
sar
pop
jne
cmc
es
bnd
pminsw
cmps
sbb
ret
pop
pop
sbb
int
inc
dec
es
fwait
ror
add
shl
iret
sahf
jb
fnsave
test
mov
inc
or
popf
xor
jmp
rcl
icebp
retf
ror
mov
inc
loope
push
and
repnz
int
pop
add
mov
stos
sub
repnz
pop
sub
pop
shl
or
bound
mov
sbb
in
out
and
push
jb
fdivr
or
pop
(bad)
test
mov
cs
out
dec
ffree
aam
xchg
movs
popa
into
mov
sbb
sub
out
pop
mov
push
fld
pop
push
and
cli
push
mov
into
pop
push
(bad)
cs
pop
int
movs
mov
adc
cs
ss
inc
into
fst
sti
or
shl
xor
push
inc
push
mov
dec
push
sub
gs
mov
out
les
and
xchg
out
gs
popf
xchg
and
fucom
mov
and
ja
aad
and
add
(bad)
popa
jl
cmp
fnsave
mov
ret
fwait
pop
sub
dec
into
inc
fadd
and
sbb
frstor
pop
and
jmp
adc
(bad)
pop
mov
push
loop
push
leave
xchg
dec
sbb
in
dec
sar
cli
int
xor
mov
(bad)
les
xor
sub
mov
dec
mov
jp
mov
inc
into
(bad)
out
daa
and
sbb
loopne
fsubr
mov
aam
jmp
add
cmp
cmps
stos
mov
test
out
into
out
movs
stos
jl
fs
iret
lds
xor
sbb
sub
das
fs
adc
mov
pop
enter
leave
es
in
cmp
dec
aaa
shld
cmc
or
fwait
kmovb
loopne
movs
mov
out
or
pop
cs
add
int
retf
dec
lods
jl
and
ror
push
in
int3
inc
inc
pop
mov
or
mov
mov
mov
ins
outs
into
aam
sbb
inc
cmp
xchg
mov
mov
and
(bad)
sub
or
inc
iret
(bad)
push
xor
pusha
stos
test
sbb
inc
pop
adc
data16
mov
movs
es
sub
jno
xchg
ds
mov
sub
adc
out
in
push
lods
pop
int3
mov
sub
jno
xchg
mov
outs
sub
les
ror
mov
je
or
in
movs
cs
mov
gs
inc
pop
sub
mov
test
pop
cmps
ja
and
iret
in
movs
fcmovb
adc
into
les
mov
dec
inc
xchg
xchg
mov
mov
mov
cmps
outs
out
lods
dec
outs
cs
out
addr16
shr
jg
push
mov
cmps
movs
into
dec
sub
push
adc
fs
mov
mov
cmp
xor
mov
mov
lods
fst
pop
pop
push
mov
jmp
inc
fidivr
dec
int3
dec
idiv
retf
push
mov
dec
cld
or
mov
fidiv
mov
(bad)
pop
into
leave
dec
cld
push
test
pop
inc
je
imul
sbb
pop
(bad)
fistp
repz
mov
retf
movlps
jmp
adc
cld
inc
(bad)
adc
pop
dec
add
mov
push
xchg
test
push
xchg
add
dec
std
enter
pushf
(bad)
xor
mov
repz
fwait
ret
mov
mov
std
sub
dec
xor
dec
or
aam
in
mov
and
xor
adc
pop
fidiv
lea
push
js
pop
into
ror
mov
push
mov
repz
(bad)
mov
cmp
ror
add
pop
pop
or
inc
push
mov
std
ror
fdivr
inc
rcr
adc
pop
sti
pop
fwait
push
nop
sub
pop
test
dec
sahf
clc
jp
into
test
mov
xchg
push
mov
rcr
sahf
adc
into
das
es
js
mov
ror
cwde
(bad)
cmp
push
nop
into
pusha
into
das
daa
dec
sahf
adc
dec
addr16
pop
xor
rcr
push
xchg
push
sbb
mov
into
pop
add
jl
jmp
int3
lea
cwde
sahf
mov
dec
mov
cmp
enter
enter
pop
fnstcw
jl
cmp
xchg
pop
test
mov
cwde
sbb
inc
adc
sub
sub
icebp
fsub
or
cmp
or
cmp
jmp
aas
push
adc
ffree
not
sub
or
call
ret
(bad)
aad
mov
sbb
push
loopne
push
xor
(bad)
or
jo
add
pop
popa
pop
loopne
(bad)
inc
std
adc
sbb
aam
ins
std
shl
lea
stc
sbb
lea
sbb
lea
sar
(bad)
and
jne
pop
or
cmp
test
ss
push
jne
out
mov
in
std
ins
pop
mov
xchg
and
cld
sbb
sub
add
and
fst
cmp
dec
mov
std
sbb
mov
movs
fstp
jae
hlt
xchg
mov
loopne
xchg
mov
adc
movs
out
xchg
add
sub
(bad)
(bad)
loopne
int3
fs
adc
inc
xor
push
mov
xor
popf
mov
pop
add
hlt
std
rol
pop
jbe
loopne
mov
and
xor
inc
pop
jno
or
popf
cld
nop
and
inc
inc
jne
dec
mov
mov
lock
xor
lods
xchg
adc
add
imul
adc
loopne
cwde
icebp
(bad)
cwde
push
jne
xor
pushf
xor
adc
or
jne
es
addr16
inc
lds
call
popf
adc
mov
xor
loope
xchg
jo
mov
loope
sar
mov
or
or
popf
ins
jge
ss
shl
cmp
retf
push
loop
push
loopne
xchg
dec
enter
loopne
push
dec
and
xor
mov
imul
out
pop
dec
and
push
or
inc
dec
cmps
js
inc
mov
push
and
mov
adc
and
out
iret
enter
cs
dec
dec
call
sub
or
in
jl
cmp
jg
adc
cs
xchg
loop
and
inc
mov
ins
and
cwde
push
add
push
retf
dec
pop
push
shl
push
je
fisttp
inc
mov
jmp
pop
mov
sub
call
pop
push
shl
sub
mov
dec
sub
dec
add
mov
or
mov
mov
jne
loopne
or
mov
repz
jmp
mov
sahf
rol
into
or
and
pop
mov
in
ror
and
jle
ins
xchg
(bad)
ins
jmp
xchg
xchg
inc
dec
xchg
sbb
pop
loopne
or
pop
pop
add
xchg
pushf
or
push
push
mov
lods
push
imul
add
jmp
jecxz
or
arpl
test
cdq
dec
and
lea
lock
mov
and
push
push
mov
inc
and
xchg
push
push
pop
(bad)
jmp
adc
arpl
jmp
cmc
jecxz
jmp
jecxz
stos
mov
pop
mov
iret
hlt
stos
fdiv
mov
outs
dec
scas
ret
out
mov
mov
outs
data16
pop
scas
mov
jecxz
lahf
test
push
je
inc
mov
movs
rcr
leave
add
dec
cmps
sub
adc
jbe
dec
adc
push
xor
mov
sub
call
(bad)
(bad)
sahf
xchg
sahf
xchg
(bad)
(bad)
push
adc
adc
rcr
rcr
rcr
rcr
adc
adc
rcr
rcr
rcr
rcr
adc
adc
rcr
rcr
rcr
rcr
adc
adc
rcr
rcr
adc
rcr
adc
xchg
aad
(bad)
clc
scas
test
rcr
pop
push
sahf
xchg
mov
xor
mov
dec
mov
lock
sbb
fidiv
outs
mov
push
cmp
jns
sub
xchg
imul
popa
or
push
loope
push
xchg
inc
xor
enter
mov
xchg
bound
xchg
fcmovnu
ins
fucomp
jnp
lahf
fld
imul
pop
test
cmp
(bad)
cwde
iret
sti
sub
cwde
mov
cmp
(bad)
lock
or
loop
std
iret
mov
cs
push
clc
pop
xchg
data16
nop
repz
out
out
out
addr16
js
ret
xor
push
pop
mov
xchg
inc
mov
dec
(bad)
sub
or
aaa
(bad)
movs
inc
mov
dec
push
ret
sbb
xchg
gs
in
in
in
fs
fs
enter
cmp
dec
cli
jl
dec
sbb
cmps
cs
dec
sahf
sub
pop
enter
enter
sub
mov
cmps
add
mov
sub
pop
enter
sub
fisttp
lods
dec
lods
push
lods
movs
pop
and
push
pushf
and
cmp
push
test
pop
sbb
cmp
daa
int3
daa
sub
push
enter
stos
es
cmp
es
mov
cmp
mov
sub
test
(bad)
jg
jp
sub
cmp
sub
sub
push
enter
sub
fld
movs
dec
xor
aas
pusha
dec
es
popa
in
and
rol
pushf
(bad)
out
add
push
es
mov
xchg
sub
jnp
int3
add
and
mov
mov
fsub
xor
adc
(bad)
scas
xchg
out
adc
rcr
and
inc
(bad)
and
add
movs
movs
cmp
test
mov
fadd
inc
enter
movs
cmp
fs
icebp
sub
and
or
retf
xchg
pop
mov
shl
or
rcl
pop
popf
inc
ror
mov
rcl
add
mov
or
in
inc
movs
mov
loope
cmc
dec
into
inc
mov
loope
lods
(bad)
shld
rcl
repz
adc
inc
scas
popa
jb
arpl
ficomp
pop
loop
or
stos
test
imul
xchg
add
shl
shl
rol
icebp
mov
imul
icebp
(bad)
icebp
mov
(bad)
icebp
mov
imul
icebp
(bad)
icebp
mov
in
int
xchg
div
cmps
cmp
jmp
popf
push
push
push
inc
test
adc
icebp
mov
call
add
sti
ror
test
(bad)
popf
loop
ficom
lahf
lds
enter
ficomp
xor
call
mov
add
js
xchg
stos
nop
out
xlat
mov
movs
lods
iret
test
push
inc
ins
call
mov
xlat
sbb
jmp
mov
ret
mov
out
or
ret
cmp
mov
test
clc
mov
icebp
out
sar
dec
add
mov
dec
xor
out
hlt
mov
stc
inc
(bad)
cmc
(bad)
sbb
mov
sub
mov
mov
adc
je
push
mov
add
add
std
sbb
js
fist
(bad)
fcmovb
movs
push
adc
out
pop
(bad)
ss
clc
daa
xchg
sbb
jecxz
jnp
jl
cwde
cmp
sub
adc
sbb
mov
cmp
sbb
jle
or
retf
cmp
sbb
push
dec
stos
mov
into
(bad)
pop
mov
cdq
(bad)
cld
imul
xlat
cmp
mov
pusha
fcmovu
adc
adc
out
pop
mov
mov
cmc
sbb
lods
ficomp
cmp
mov
pop
in
cli
scas
mov
or
pop
shr
dec
das
into
mov
push
stos
jle
jle
das
fwait
sub
mov
das
ins
mov
pop
loop
add
adc
xchg
mov
sub
mov
(bad)
fsubr
aas
or
sbb
dec
sub
adc
xor
loope
mov
(bad)
pop
popf
pop
mov
ret
pop
dec
pushf
imul
fdivr
jnp
jnp
jl
pushf
enter
mov
mov
mov
pop
ins
lods
into
fld
scas
pop
pop
call
scas
sbb
repnz
dec
fdivr
clc
imul
clc
gs
outs
retf
stc
sub
pop
dec
mov
cmp
into
jns
inc
fxch
cmps
stos
cmp
inc
test
mov
cmp
mov
pop
or
xor
in
ins
fdivr
imul
xor
cmp
clc
js
pop
sti
sti
pop
(bad)
cmp
ds
or
call
dec
test
sbb
mov
mov
jmp
cmp
cmp
mov
mov
iret
leave
movs
inc
push
js
cmp
dec
sub
fsin
ror
out
or
jg
mov
loope
fld
hlt
sub
(bad)
pop
push
push
ror
mov
imul
fdivr
int
test
mov
mov
bswap
xor
into
stc
mov
test
fstp
cmp
pop
sahf
jge
jns
outs
lods
call
push
outs
cmp
retf
mov
(bad)
lods
loope
jnp
sbb
dec
(bad)
cli
test
jmp
fimul
fucomip
dec
cmp
dec
mov
dec
jns
cmp
stc
pop
iret
fstp
test
daa
fcomp
std
push
stc
fild
sbb
push
dec
fisttp
mov
mov
cvtps2pi
jnp
popf
jmp
sub
pop
pop
jns
or
scas
mov
adc
mov
stos
xchg
push
loopne
cmp
add
daa
loop
jecxz
xchg
hlt
inc
adc
sbb
push
push
jecxz
ret
mov
ret
lds
and
xchg
mov
xor
sbb
push
add
leave
pop
mov
pop
add
xor
ss
add
adc
xchg
mov
push
ja
cmp
cmp
aad
aad
mov
pop
xor
and
shl
leave
adc
inc
pop
div
cwde
adc
xchg
je
mov
push
push
inc
ja
mov
enter
push
push
icebp
je
mov
jle
push
add
push
push
lds
mov
mov
mov
call
mov
jbe
jne
(bad)
jge
fisub
bound
and
sub
pop
mov
mov
and
and
aad
or
mov
in
test
jae
loop
add
push
jns
pop
cli
dec
loope
std
imul
or
test
jl
xlat
(bad)
and
out
retf
xor
cmc
mov
inc
out
pop
cmp
jne
mov
push
mov
jmp
jne
jne
cmp
mov
sbb
adc
add
xor
sub
pop
inc
push
cwde
sar
and
fstp
push
jp
mov
test
ret
cdq
daa
adc
jp
xchg
sbb
mov
fucom
mov
pop
cmp
out
rol
movs
xchg
dec
push
push
aam
aad
iret
(bad)
pop
stos
inc
lods
adc
cmp
mov
popa
hlt
push
pop
jbe
xchg
mov
aad
cmc
out
jecxz
js
cmc
outs
push
(bad)
clc
add
add
push
pusha
pop
adc
leave
pop
cmps
pop
outs
push
dec
pop
cdq
push
(bad)
and
adc
and
xchg
cld
jg
fisttp
aad
shl
pushf
cwde
dec
push
xchg
js
ss
sub
(bad)
std
aad
push
outs
stos
jmp
cs
pop
in
repnz
mov
out
push
and
cmps
xchg
clc
cdq
fcomp
inc
mov
inc
out
xor
popf
lahf
pop
mov
dec
sbb
sub
pop
inc
mov
ja
bswap
daa
ror
or
sub
sti
mov
sahf
xlat
add
mov
(bad)
(bad)
jg
xchg
cmp
push
fistp
stos
test
rol
in
sbb
xchg
into
mov
loope
xor
add
dec
and
add
mov
nop
icebp
pop
cmp
fnstcw
cld
clc
(bad)
jns
jbe
jbe
call
pop
(bad)
cmc
das
mov
fstp
and
dec
mov
push
jb
cmp
add
jmp
stos
addr16
push
sub
mov
mov
cmp
xor
or
call
loopne
cli
jns
pop
inc
sub
mov
cmp
neg
push
push
icebp
mov
cld
loope
sbb
gs
mov
and
call
imul
call
jbe
jg
aas
js
cmp
fwait
jg
jecxz
(bad)
push
ins
scas
mov
sbb
add
aaa
cmp
ja
jno
fld
fisttp
shl
jle
mov
call
iret
fnstsw
data16
aas
in
xchg
lods
fisubr
and
es
pop
and
or
mov
rcl
cmps
mov
call
lahf
hlt
rcr
inc
bound
stos
ds
aas
and
cli
(bad)
mov
(bad)
push
sub
imul
fidiv
push
shr
inc
pop
stc
sahf
pop
into
stos
into
xchg
pop
xchg
inc
push
pushf
pop
outs
test
sub
push
data16
fyl2x
mov
pop
shr
jle
mov
js
jl
pop
and
fisubr
out
pop
and
mov
dec
fld
test
icebp
sub
mov
mov
dec
xchg
sahf
repz
fbld
(bad)
cmp
jno
mov
fnstcw
in
fcom
cdq
test
movs
dec
ficom
cmps
mov
dec
jle
fwait
mov
sub
inc
call
mov
sar
push
push
pop
test
cdq
or
clc
lahf
push
lods
aam
outs
sahf
enter
(bad)
sub
cmp
mov
fwait
stos
mov
push
cmps
(bad)
mov
jg
ror
pop
sub
xchg
daa
push
ins
imul
(bad)
jns
cmps
mov
movs
xor
mov
jmp
jp
(bad)
repz
add
mov
xchg
add
lahf
mov
xchg
push
mov
sbb
mov
xchg
and
movs
or
das
mov
mov
lds
pop
push
xor
shl
in
or
jo
cli
in
push
loopne
inc
inc
mov
pusha
nop
repnz
sbb
mov
inc
dec
mov
pop
inc
(bad)
cmc
popa
jp
cwde
cs
lock
cdq
stc
sub
and
cli
nop
lock
mov
mov
xchg
jb
rol
imul
add
lds
adc
inc
js
adc
push
test
ds
push
pusha
cli
fimul
mov
push
hlt
popa
hlt
nop
sub
iret
js
mov
mov
xchg
popa
iret
xlat
adc
test
nop
xor
pusha
sbb
push
mov
pop
and
or
xor
and
add
push
pop
xchg
repnz
or
movs
aad
jmp
dec
stc
js
xchg
xchg
mov
pop
push
stos
rol
in
push
mov
fs
fisub
dec
dec
repnz
out
adc
add
mov
add
xchg
into
div
mov
stos
pusha
adc
dec
fidivr
inc
shr
add
(bad)
jmp
or
adc
ins
lods
jp
sbb
push
push
mov
xchg
push
inc
jo
repnz
call
dec
rcl
xor
sbb
xor
ret
ins
sbb
sbb
pop
push
ds
out
sub
outs
xor
pushf
int
inc
pop
pushf
enter
imul
dec
xchg
mov
daa
jae
hlt
mov
pop
mov
gs
bound
fldl2e
or
mov
or
outs
lock
xchg
mov
push
mov
jmp
inc
xchg
push
inc
shl
inc
push
imul
popa
cmc
test
mov
test
adc
mov
jp
mov
mov
sahf
sahf
fdivr
xor
repz
leave
ins
xor
xor
mov
mov
sahf
xor
adc
push
popa
sub
clc
outs
xor
mov
pop
mov
rcl
stos
or
nop
jle
in
out
push
dec
inc
and
mov
test
pop
int
out
addr16
mov
dec
xchg
adc
jbe
loopne
aad
adc
shr
ja
test
inc
ss
out
push
leave
cmp
push
retf
lahf
shl
sbb
xor
xor
pop
bound
(bad)
data16
imul
(bad)
sar
and
and
sub
aas
add
xor
nop
rsm
enter
xlat
cmp
dec
mov
cmc
iret
fdivr
sbb
inc
xor
adc
sbb
cs
and
mov
mov
mov
pusha
add
stc
sbb
mov
pop
mov
fmul
adc
adc
mov
xchg
sub
jo
or
(bad)
pop
sub
out
sbb
push
sub
push
shl
fmul
int
outs
pop
call
fsub
push
rcl
mov
stc
fcmovnb
clc
mov
cmp
xor
xchg
or
frstor
dec
mov
jbe
pop
stos
dec
add
mov
out
cmps
mov
pushf
ins
inc
mov
mov
(bad)
iret
mov
dec
jno
test
arpl
(bad)
jge
in
dec
mov
loope
mov
push
add
je
bound
jmp
sub
push
ins
lods
ror
repnz
jmp
test
and
lock
xor
in
je
les
movs
mov
cmp
sbb
xor
ja
xor
mov
push
jmp
ret
test
jecxz
sahf
aaa
dec
aas
xor
cmp
jmp
cld
inc
aas
cmps
xor
mov
xor
mov
or
sub
mov
inc
cmp
adc
outs
shl
mov
int
pop
aas
movs
call
xor
pusha
cmp
push
push
fist
mov
push
jnp
push
mov
mov
mov
movs
outs
mov
and
retf
(bad)
int3
xor
dec
jmp
mov
adc
adc
xor
xor
and
adc
pop
idiv
data16
xor
fdiv
pop
mov
mov
in
xor
loopne
dec
fdivr
aam
mov
mov
fs
jno
adc
pop
in
ja
xor
sub
imul
gs
xchg
add
mov
in
inc
mov
dec
inc
add
mov
shl
add
xchg
ret
cmps
jbe
and
ins
rol
test
cdq
pusha
pusha
push
and
and
out
pop
shr
xchg
mov
inc
adc
jo
mov
jne
loope
xchg
and
pop
push
data16
popa
loopne
mov
repnz
and
jecxz
inc
push
mov
jae
repnz
jbe
rcl
lock
mov
xor
(bad)
pop
repnz
fist
and
and
rol
icebp
pop
(bad)
sub
add
add
retf
push
inc
xlat
test
rol
add
xchg
inc
aam
jmp
clc
jne
imul
adc
js
stos
add
das
iret
sbb
arpl
mov
xlat
mov
ins
sub
add
jmp
fwait
pop
fwait
shr
adc
jb
jbe
pop
sub
mov
xchg
push
jo
pop
dec
and
cmps
scas
mov
sub
mov
pop
pop
mov
fpatan
mov
fimul
adc
rcl
out
out
and
xor
aam
jp
mov
sub
fcom
mov
out
sub
lods
or
fimul
cmps
imul
inc
ja
mov
retf
test
dec
add
lea
movs
outs
adc
rol
jb
adc
adc
clc
sbb
imul
das
add
xchg
ja
(bad)
pop
test
dec
popf
fild
pop
into
jge
mov
outs
push
mov
push
sar
xor
xor
push
xlat
xor
cdq
mov
sbb
test
dec
adc
fwait
lods
pushf
and
les
loopne
mov
fisubr
imul
aad
xchg
imul
mov
push
xor
mov
xchg
es
outs
add
sahf
xchg
mov
int
add
les
loopne
add
or
pop
sub
jmp
ret
push
enter
clc
mov
sbb
push
sar
add
dec
and
add
mov
test
mov
mov
xor
inc
cmp
mov
mov
hlt
jns
push
push
or
dec
mov
and
inc
cs
adc
fwait
mov
jo
ja
js
add
or
mov
and
imul
pop
movs
push
ss
out
sbb
sbb
sbb
sub
sbb
pop
test
mov
out
add
and
add
loopne
sahf
pop
scas
pop
lea
sub
push
adc
adc
push
loope
push
fldcw
or
pop
test
mov
jmp
rol
adc
lods
pop
mov
sbb
push
adc
js
pop
test
adc
add
loope
adc
sbb
fsubr
(bad)
sbb
sbb
adc
adc
add
loope
into
pop
scas
pop
(bad)
sbb
sbb
sub
or
sbb
mov
jmp
rol
adc
adc
loop
add
and
add
loope
adc
sbb
fldcw
(bad)
sbb
sbb
push
call
fimul
push
call
pop
mov
out
pop
shl
rol
in
test
push
adc
add
mov
push
mov
sbb
pop
stos
pop
mov
sbb
std
jp
shl
xor
sub
mov
add
sbb
jns
sub
arpl
mov
cmp
sti
mov
xchg
cmps
call
(bad)
xabort
add
ins
pop
les
or
shr
mov
je
xchg
gs
sbb
cld
call
mov
jle
cmp
and
mov
jnp
push
mov
push
ret
pop
xchg
push
sub
arpl
out
add
es
mov
jb
mov
fwait
scas
sub
(bad)
xchg
movs
mov
sub
out
pop
dec
mov
jns
mov
push
test
int
adc
add
fadd
hlt
and
jns
push
mov
dec
push
jmp
scas
inc
gs
stc
cmps
xor
aas
shl
fild
push
xchg
mov
mov
cmc
and
jle
sub
repz
cmps
mov
mov
pop
pop
daa
cmp
icebp
aaa
ins
sbb
les
call
fwait
inc
and
mov
lods
stos
cwde
jmp
xchg
add
adc
fdiv
mov
add
out
lds
mul
dec
jmp
hlt
fsub
cmps
or
pop
jmp
daa
stos
mul
retf
bound
push
push
xor
arpl
jmp
mov
(bad)
dec
mov
pop
jbe
adc
imul
jmp
add
mov
mov
xchg
mov
sbb
mov
inc
sub
repnz
mov
es
inc
adc
push
int
lds
std
aaa
shl
rcr
ja
jb
jl
pop
cmc
dec
sub
test
adc
outs
mov
push
push
mov
lea
mov
loop
in
pop
clc
adc
aad
shl
jbe
test
in
fdivr
jae
pop
mov
push
xor
in
and
enter
rol
popa
ja
movs
inc
push
test
enter
outs
adc
clc
out
cmp
pop
pop
push
pop
mov
mov
neg
ss
inc
lds
retf
sbb
test
xlat
add
xchg
cmp
xor
sbb
push
sub
xchg
xchg
(bad)
(bad)
mov
js
icebp
sbb
std
dec
fwait
(bad)
call
sahf
je
mov
pop
lds
inc
imul
in
fistp
mov
pop
aad
fisub
cmps
repnz
gs
mov
push
push
inc
pmullw
inc
outs
dec
adc
jmp
xchg
and
lahf
ja
test
adc
mov
in
mov
movs
adc
aaa
(bad)
ss
mov
bound
dec
enter
(bad)
pushw
or
aam
rcr
xchg
xor
sar
adc
(bad)
mov
rol
cdq
add
enter
pop
xchg
adc
rol
enter
mov
push
les
and
mov
cwde
xchg
inc
out
sbb
fldenv
pop
mov
mov
jb
and
pop
ins
xchg
movs
jae
cmp
push
mov
out
xchg
imul
cmp
outs
daa
stos
xchg
out
rcr
xchg
pop
or
xor
or
vpsadbw
dec
mov
pop
pop
mov
imul
lock
js
mov
sub
sub
adc
cmp
adc
test
call
hlt
fnstcw
leave
or
addr16
cmp
mov
pop
or
push
(bad)
cs
test
cdq
enter
add
inc
fs
jmp
or
mov
in
dec
fist
fucomp
pop
sbb
jmp
sub
pop
popa
lahf
push
pop
stos
push
cwde
js
cli
in
push
pop
jns
pop
je
ret
add
push
pop
cwde
sbb
dec
adc
into
mov
fsubr
clc
fsub
ins
out
adc
test
(bad)
sbb
jge
test
fdiv
retf
rcr
(bad)
and
jl
add
call
pandn
pop
outs
mov
sub
add
or
pop
pop
jge
adc
mov
pop
cmc
mov
cld
ret
pop
or
sbb
add
call
mov
scas
pop
cli
leave
out
into
lahf
test
aas
pop
out
dec
inc
jg
xor
in
aas
vpaddw
call
jp
imul
and
fmul
or
ret
add
retf
or
test
or
jbe
or
pusha
retf
or
push
retf
or
cmp
or
xor
or
and
or
adc
or
add
or
cmps
aam
add
retf
add
add
(bad)
in
add
add
add
add
pop
add
adc
add
or
add
or
add
adc
add
mov
add
add
add
xchg
add
add
add
xchg
add
and
add
push
jecxz
add
jecxz
add
add
add
or
(bad)
in
add
or
mov
or
cmp
or
add
add
rcr
or
mov
or
movs
fimul
xchg
fimul
sbb
add
or
push
fimul
inc
fimul
cmp
or
sub
or
sbb
or
or
or
add
or
repnz
(bad)
or
retf
add
fisttp
xchg
fisttp
xchg
or
jl
or
push
or
pop
fisttp
dec
fisttp
xor
or
and
or
or
or
cld
fmul
out
or
fcomp
or
into
fmul
mov
fmul
xchg
fmul
sbb
add
or
pusha
fmul
inc
fmul
xor
or
out
or
sbb
or
or
or
hlt
fisttp
out
or
fcmovu
or
into
fisttp
ret
add
fisttp
cwde
fisttp
mov
or
js
or
(bad)
fisttp
push
fisttp
inc
fisttp
xor
or
and
or
push
fisttp
add
or
lock
(bad)
or
retf
add
or
cwde
fimul
mov
or
jl
or
je
or
(bad)
fimul
repnz
adc
or
push
fmul
and
or
mov
or
xor
or
inc
xlat
or
push
xlat
or
push
xlat
or
xchg
xlat
or
sahf
xlat
or
stos
xlat
or
mov
or
(bad)
xlat
or
push
fisttp
sbb
or
sub
or
inc
fisttp
and
or
fcmovbe
or
call
xlat
or
or
or
sbb
or
sub
or
fmul
dec
fmul
(bad)
fmul
jbe
or
test
or
xchg
fmul
movs
fmul
push
fimul
inc
fimul
xor
or
and
or
push
fimul
cld
(bad)
in
(bad)
rcr
or
rcr
add
or
mov
or
jl
or
ins
(bad)
pop
(bad)
dec
(bad)
cmp
or
(bad)
push
(bad)
or
or
neg
or
call
fmul
enter
mov
or
add
add
mul
or
fsub
or
(bad)
in
add
add
sbb
or
push
in
add
in
add
add
add
in
add
or
lock
add
in
add
or
shl
or
mov
or
sahf
jecxz
add
or
pop
in
add
add
jecxz
add
or
add
add
ds
add
dec
add
scas
dec
add
dec
add
dec
add
mov
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
lods
dec
add
lods
dec
add
lods
dec
add
scas
dec
add
dec
add
dec
add
dec
add
scas
dec
add
dec
add
mov
add
mov
add
add
inc
add
inc
add
xchg
inc
add
cdq
dec
add
add
add
add
inc
mov
(bad)
sti
dec
add
add
dec
cmps
xor
add
add
add
add
add
enter
enter
inc
add
jae
popa
add
ins
add
add
add
add
outs
add
bound
ins
add
add
add
imul
outs
add
ins
add
add
add
push
add
add
add
add
push
add
jno
jne
imul
jae
add
add
push
add
arpl
imul
add
add
add
add
push
add
jb
imul
add
add
push
add
and
push
add
jno
jne
add
arpl
add
add
dec
add
add
imul
add
inc
add
jae
popa
add
ins
add
and
push
add
add
add
push
add
jo
jo
outs
add
je
add
add
imul
add
jae
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
and
push
add
jo
add
add
add
push
add
jo
jo
outs
add
je
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
jae
add
inc
add
ins
add
popa
add
jns
and
push
add
outs
add
je
and
dec
add
ins
add
add
add
inc
add
ins
add
popa
add
jns
and
dec
add
ins
add
add
add
push
add
outs
add
add
je
add
inc
add
data16
jne
ins
add
add
add
popa
add
add
add
add
jne
jo
jo
outs
add
je
add
add
add
popa
add
add
add
push
add
jno
jne
imul
jae
and
inc
add
add
outs
add
jae
je
jb
popa
add
add
and
push
add
add
je
jae
add
push
add
ins
add
jae
push
add
outs
add
add
jp
add
add
jo
ins
add
jae
push
add
outs
add
add
ins
add
jb
add
add
push
add
ins
add
jae
push
add
outs
add
add
arpl
add
add
jo
ins
add
jae
push
add
add
outs
add
add
push
add
ins
add
jae
push
add
js
je
add
push
add
ins
add
jae
push
add
arpl
imul
add
outs
add
outs
add
add
jo
ins
add
jae
push
add
add
popa
add
add
popa
add
add
outs
add
add
add
add
jne
add
arpl
add
add
add
popa
add
imul
jae
je
add
popa
add
add
add
dec
add
outs
add
data16
jae
je
add
imul
add
inc
add
outs
add
add
add
jo
jo
add
add
add
ins
add
imul
jb
add
add
add
jbe
add
add
je
popa
add
add
add
xor
add
add
jae
arpl
jb
imul
add
add
data16
add
outs
add
outs
add
je
add
add
js
add
arpl
ins
add
popa
add
add
push
add
add
add
aas
add
add
add
je
add
add
ins
add
add
js
je
jb
popa
add
je
add
add
add
outs
add
popa
add
imul
add
add
add
jo
popa
add
imul
add
add
add
jo
ins
add
jae
inc
add
add
outs
add
add
jae
arpl
add
jo
ins
add
jae
inc
add
jb
add
jo
jae
add
add
ins
add
jae
add
add
jo
jae
add
add
jbe
popa
add
add
jp
add
ins
add
outs
add
add
add
dec
add
add
add
bound
outs
add
add
add
add
add
bound
jne
add
add
add
add
add
data16
add
add
add
outs
add
imul
outs
add
add
bound
outs
add
je
add
add
outs
add
jb
add
jae
imul
outs
add
add
add
add
jo
jb
outs
add
add
je
dec
add
ins
add
add
jo
outs
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
jo
jbe
add
add
jb
add
jne
ins
add
add
add
dec
add
inc
add
jae
add
add
add
add
push
add
arpl
imul
add
add
add
add
push
add
popa
add
arpl
push
add
add
add
push
add
ins
add
add
add
push
add
add
data16
data16
ins
add
add
arpl
add
je
add
jo
add
add
ja
imul
jb
imul
add
add
ja
imul
imul
add
jae
jns
jae
ja
outs
add
add
add
add
jae
jns
jae
je
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
outs
add
ins
add
outs
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
inc
add
ins
add
outs
add
add
add
jo
jb
outs
add
jb
popa
add
data16
ins
add
jae
js
cmp
add
add
jb
outs
add
jb
popa
add
data16
ins
add
jae
add
add
arpl
outs
add
data16
add
imul
add
add
arpl
ja
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
add
add
jae
add
and
ins
add
imul
jne
jae
add
and
ins
add
arpl
popa
add
add
add
jns
jae
and
ins
add
imul
add
jae
jns
jae
and
ins
add
arpl
popa
add
add
add
add
add
add
add
je
outs
add
add
add
add
add
add
je
imul
and
inc
add
ins
add
outs
add
and
push
add
jb
jae
imul
add
je
add
add
add
add
je
imul
and
push
add
jb
jae
imul
add
je
add
add
add
je
imul
and
inc
add
arpl
outs
add
popa
add
add
outs
add
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
add
jb
outs
add
add
je
jae
pop
add
add
jae
imul
add
je
and
inc
add
je
popa
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
pop
add
push
add
dec
add
add
add
add
add
add
add
add
outs
add
add
outs
add
add
add
add
outs
add
arpl
add
add
outs
add
add
add
popa
add
add
add
inc
add
add
add
push
add
add
and
ins
outs
arpl
imul
dec
add
dec
add
dec
add
dec
add
dec
add
mov
inc
add
mov
inc
add
aad
add
aad
add
mov
inc
add
inc
add
inc
add
dec
add
and
and
add
mov
inc
add
sbb
inc
add
mov
inc
add
inc
add
mov
inc
add
push
inc
add
inc
add
and
sbb
add
and
inc
add
jae
jo
ins
add
jns
inc
add
jb
outs
add
and
and
inc
add
jb
outs
add
and
pop
add
add
add
jo
ins
add
jns
inc
add
jb
outs
add
dec
add
imul
and
inc
add
jae
jo
ins
add
jns
imul
and
add
jb
outs
add
and
ins
add
jae
jae
popa
add
add
add
add
mov
inc
add
aad
add
inc
inc
add
dec
inc
add
inc
add
dec
add
sub
adc
pusha
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
sub
ror
add
inc
add
inc
inc
add
dec
inc
add
inc
add
mov
inc
add
add
jb
jb
outs
add
add
add
and
add
add
add
ins
add
popa
add
add
add
add
add
ins
add
popa
add
add
outs
add
add
ror
cmp
nop
cs
add
dec
add
cmp
inc
add
add
add
add
aas
inc
add
inc
add
inc
add
inc
inc
add
dec
inc
add
inc
add
dec
add
inc
add
ins
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
add
outs
add
popa
add
add
add
outs
add
imul
outs
add
add
je
add
jo
dec
add
dec
inc
add
inc
add
cmc
inc
add
inc
inc
add
dec
inc
add
inc
add
add
add
add
imul
dec
add
inc
add
imul
and
push
add
popa
add
ins
add
and
je
outs
add
add
imul
and
ins
add
add
ins
add
and
data16
ins
add
and
outs
add
ins
add
add
add
add
inc
add
ins
add
je
add
imul
dec
add
inc
add
imul
and
push
add
add
add
add
js
add
jne
je
add
add
popa
add
ins
add
add
add
add
add
add
pop
add
add
imul
dec
add
and
dec
add
push
add
add
pop
add
push
add
add
add
add
add
dec
add
add
add
add
je
pop
add
jb
add
je
push
add
dec
add
add
add
and
das
add
and
and
and
add
add
inc
add
dec
add
add
imul
and
jae
je
imul
and
add
imul
jae
and
add
add
add
add
ins
add
and
add
ins
add
add
add
add
outs
add
js
imul
ins
add
add
add
dec
add
add
add
add
pop
add
add
imul
cmp
ins
add
jae
je
pop
add
jb
add
je
push
add
ins
add
add
add
add
outs
add
js
imul
bound
popa
add
add
add
popa
add
add
add
jb
jb
outs
add
cmp
and
and
and
dec
add
jae
jae
popa
add
add
add
add
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
inc
add
arpl
outs
add
outs
add
add
add
add
popa
add
add
add
jb
jb
outs
add
and
imul
and
and
add
popa
add
add
add
jb
jb
outs
add
cmp
and
dec
add
outs
add
add
outs
add
and
add
jb
outs
add
cmp
and
pop
add
add
add
add
add
add
and
add
add
arpl
cmp
and
and
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
imul
jae
push
add
add
jb
outs
add
add
jae
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
add
add
outs
add
imul
and
imul
je
popa
add
add
jb
and
bound
add
popa
add
jae
add
add
outs
add
je
popa
add
add
add
popa
add
and
outs
add
je
and
jae
jne
arpl
arpl
add
jae
data16
ins
add
add
add
push
add
outs
add
popa
add
outs
add
add
popa
add
add
add
add
jb
jb
outs
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
push
add
imul
and
add
arpl
add
je
imul
jae
and
pop
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
outs
add
je
popa
add
add
jb
and
jne
jo
outs
add
and
add
imul
pop
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
popa
add
add
add
add
add
outs
add
ins
add
outs
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
arpl
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
ja
push
add
outs
add
popa
add
outs
add
add
push
add
and
data16
jb
and
add
imul
imul
and
imul
je
popa
add
add
jb
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
jb
add
je
imul
and
outs
add
ja
and
jo
popa
add
imul
add
add
add
popa
add
popa
add
add
add
add
add
jnp
inc
add
xor
inc
add
add
inc
add
sub
add
add
add
add
add
add
add
add
add
inc
add
add
inc
add
add
add
add
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
outs
add
and
arpl
ja
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
data16
inc
add
popa
add
ins
add
inc
add
outs
add
add
ins
add
outs
add
je
popa
add
outs
add
jb
add
add
ja
push
add
outs
add
popa
add
outs
add
add
outs
add
je
inc
add
ins
add
outs
add
inc
add
outs
add
add
ins
add
add
ja
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
add
add
add
add
push
add
outs
add
popa
add
outs
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
and
add
add
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
jae
je
popa
add
add
jb
add
inc
add
dec
add
add
jae
jne
ins
add
add
add
push
add
push
add
jb
add
add
outs
add
je
popa
add
add
jb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
dec
add
sub
sub
add
inc
add
inc
add
inc
add
add
add
add
dec
add
dec
add
add
add
add
add
inc
add
dec
add
dec
add
add
inc
add
push
add
push
add
add
add
add
dec
add
add
inc
add
add
add
dec
add
add
dec
add
add
jne
je
add
add
add
add
mov
addr16
add
outs
inc
add
fs
add
jno
add
jno
add
inc
add
jae
add
inc
add
inc
add
addr16
add
fs
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
jbe
ins
add
add
add
add
add
add
add
add
and
add
and
add
and
add
add
add
inc
add
add
pop
add
add
inc
add
bound
add
add
or
add
add
add
and
add
and
add
cmp
add
jns
add
add
je
jb
jne
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
je
push
add
popa
add
imul
add
add
add
jae
and
outs
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
add
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
outs
add
jo
ins
add
je
add
add
popa
add
imul
add
add
add
jo
add
popa
add
add
outs
add
and
outs
add
and
jo
popa
add
imul
add
add
add
popa
add
and
bound
add
outs
add
add
jo
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
add
imul
outs
add
ins
add
jae
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
jp
add
add
inc
add
imul
popa
add
imul
add
add
add
add
imul
inc
add
imul
jae
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
jb
jb
add
je
inc
add
ins
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
inc
add
inc
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
push
add
imul
add
push
add
jae
imul
outs
add
push
add
popa
add
ins
add
and
je
outs
add
add
add
imul
add
outs
add
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
sub
and
jo
outs
add
imul
outs
add
cmp
and
and
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
jb
outs
add
inc
add
ins
add
inc
add
imul
add
add
add
add
add
add
add
jb
outs
add
and
je
push
add
imul
sub
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
jb
add
add
add
add
add
add
js
jo
add
je
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jb
imul
push
add
inc
add
ins
add
add
add
add
inc
add
imul
add
add
add
add
jb
imul
and
je
outs
add
add
imul
and
and
add
add
popa
add
add
and
add
jb
outs
add
and
and
add
outs
add
cmp
and
bound
jns
je
add
and
ja
jb
imul
add
cmp
and
and
add
add
js
jo
add
je
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
add
outs
add
jo
jb
add
jae
and
add
je
popa
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
outs
add
jo
jb
add
jae
inc
add
add
imul
add
popa
add
ins
add
add
add
add
add
outs
add
jo
jb
add
jae
and
je
push
add
outs
add
jne
je
and
data16
ins
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
ins
add
jae
add
add
popa
add
imul
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
ins
add
jae
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
push
add
add
je
add
add
dec
add
and
push
add
jae
imul
outs
add
and
push
add
jae
outs
add
jb
arpl
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
push
add
arpl
imul
add
add
outs
add
imul
outs
add
add
add
inc
add
imul
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
add
add
add
js
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
add
outs
add
jo
jb
add
jae
add
add
add
jns
je
add
and
outs
add
and
and
add
add
inc
add
imul
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
inc
add
ins
add
add
push
add
add
and
inc
add
outs
add
add
add
add
add
and
add
je
jb
popa
add
je
imul
and
outs
add
add
popa
add
add
outs
add
add
add
add
add
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
js
je
jb
popa
add
je
and
jo
jb
outs
add
add
ins
add
and
popa
add
add
add
jae
and
arpl
outs
add
jb
jne
jo
je
add
and
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
js
je
jb
popa
add
je
add
add
add
add
add
je
je
add
jo
je
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
and
add
push
add
and
imul
and
add
add
add
jns
je
add
and
imul
jae
imul
add
add
add
data16
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
and
imul
je
push
add
add
popa
add
imul
add
add
add
jne
je
jo
jne
je
inc
add
ins
add
add
add
data16
ins
add
outs
add
ins
add
add
add
and
add
add
imul
outs
add
ins
add
and
arpl
popa
add
and
outs
add
je
and
bound
add
add
jne
ins
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
cmp
and
dec
add
popa
add
add
and
popa
add
add
add
popa
add
add
outs
add
add
add
add
add
outs
add
add
imul
and
daa
add
add
add
jae
and
outs
add
je
and
popa
add
add
popa
add
add
add
add
add
jb
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
add
add
jb
jae
and
xor
and
cmp
and
and
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jo
add
add
add
popa
add
imul
add
add
add
add
add
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
jb
add
je
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
outs
add
add
and
add
add
add
add
add
jb
jb
outs
add
and
and
add
outs
add
add
jb
add
add
add
jb
imul
add
add
jb
add
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
jo
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
outs
add
add
add
add
add
jb
imul
and
ins
add
add
sub
and
data16
ins
add
and
imul
ins
add
jb
imul
add
add
add
add
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
jo
add
push
add
arpl
imul
add
add
add
add
add
popa
add
imul
add
add
add
imul
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
sub
and
jne
outs
add
bound
ins
add
and
je
outs
add
add
jo
add
and
imul
jb
add
add
add
add
add
outs
add
add
add
jp
imul
popa
add
imul
add
add
add
add
inc
add
ins
add
and
and
add
add
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
jae
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
add
add
add
add
add
add
and
jo
popa
add
imul
add
add
add
popa
add
ins
add
add
add
add
add
jo
add
and
and
add
add
popa
add
add
add
outs
add
and
jb
add
add
outs
add
sub
and
add
jb
outs
add
and
and
add
outs
add
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
add
outs
add
and
and
add
add
add
add
and
jo
popa
add
imul
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
cmp
and
inc
add
ins
add
outs
add
ins
add
and
and
add
ins
add
add
add
and
add
imul
jae
and
imul
jo
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
add
ins
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
jb
popa
add
add
imul
add
inc
add
imul
add
add
add
add
add
add
add
and
inc
add
inc
add
add
popa
add
imul
add
and
popa
add
je
add
and
add
popa
add
imul
and
and
add
add
popa
add
imul
add
add
add
outs
add
je
and
ins
add
imul
add
add
add
imul
and
bound
add
add
outs
add
jb
jne
jo
je
add
add
inc
add
jp
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
cmp
and
push
add
ins
add
jbe
imul
and
daa
add
add
add
jb
outs
add
and
je
push
add
popa
add
imul
add
add
add
add
inc
add
imul
popa
add
imul
add
add
add
add
add
outs
add
add
imul
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
add
push
add
add
add
add
push
add
data16
add
jb
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
add
push
add
outs
add
jb
popa
add
inc
add
ins
add
jae
inc
add
jb
add
inc
add
ins
add
outs
add
inc
add
ins
add
jae
inc
add
jb
add
add
sub
add
inc
add
add
push
add
pop
add
push
add
inc
add
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
dec
add
push
add
add
add
inc
add
dec
add
push
add
inc
add
pop
add
add
inc
add
add
inc
add
add
inc
add
dec
add
push
add
inc
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
push
add
push
add
push
add
add
dec
add
dec
add
dec
add
dec
add
push
add
inc
add
add
add
dec
add
dec
add
inc
add
add
dec
add
add
inc
add
add
dec
add
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
push
add
dec
add
add
add
dec
add
dec
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
dec
add
push
add
push
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
cmp
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
dec
add
dec
add
dec
add
add
add
push
add
inc
add
inc
add
pop
add
dec
add
add
pop
add
add
add
add
add
pop
add
push
add
dec
add
cmp
add
add
push
add
inc
add
dec
add
add
dec
add
push
add
inc
add
add
inc
add
add
add
push
add
dec
add
push
add
dec
add
inc
add
dec
add
push
add
add
dec
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
push
add
inc
add
push
add
add
add
dec
add
push
add
add
pop
add
add
dec
add
dec
add
inc
add
add
dec
add
push
add
push
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
dec
add
pop
add
inc
add
dec
add
dec
add
add
add
add
inc
add
dec
add
dec
add
pop
add
dec
add
add
add
push
add
push
add
add
dec
add
add
add
push
add
push
add
add
add
add
inc
add
add
push
add
inc
add
push
add
add
push
add
dec
add
push
add
dec
add
inc
add
add
push
add
inc
add
push
add
add
inc
add
dec
add
dec
add
pop
add
add
dec
add
add
inc
add
push
add
inc
add
add
pop
add
add
dec
add
dec
add
dec
add
push
add
add
push
add
push
add
add
add
dec
add
dec
add
dec
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
dec
add
pop
add
push
add
push
add
add
dec
add
add
add
push
add
dec
add
dec
add
push
add
push
add
add
dec
add
push
add
add
dec
add
push
add
dec
add
inc
add
add
inc
add
add
push
add
add
inc
add
dec
add
inc
add
add
add
inc
add
push
add
push
add
push
add
add
inc
add
push
add
push
add
add
add
dec
add
push
add
inc
add
dec
add
add
pop
add
push
add
dec
add
add
dec
add
inc
add
inc
add
dec
add
dec
add
add
add
push
add
push
add
add
dec
add
add
inc
add
push
add
push
add
dec
add
push
add
add
inc
add
inc
add
add
add
add
inc
add
inc
add
push
add
add
add
push
add
push
add
add
add
inc
add
push
add
push
add
push
add
push
add
add
inc
add
push
add
dec
add
dec
add
add
add
push
add
dec
add
add
push
add
add
add
dec
add
push
add
dec
add
add
add
add
push
add
inc
add
inc
add
push
add
add
add
dec
add
add
dec
add
push
add
add
add
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
inc
add
dec
add
dec
add
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
xor
xor
add
add
push
add
dec
add
push
add
dec
add
dec
add
add
add
add
push
add
push
add
add
xor
xor
add
add
push
add
push
add
add
add
push
add
dec
add
add
add
add
and
add
add
add
add
and
add
add
and
or
add
add
and
or
and
add
inc
add
outs
add
ins
add
outs
add
add
outs
add
cmp
cmp
push
add
jb
jae
add
outs
add
ins
add
outs
add
add
outs
add
and
inc
add
data16
jne
ins
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
add
jne
jae
je
outs
add
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
dec
add
dec
add
dec
add
add
add
cmp
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
dec
add
je
add
outs
add
ins
add
add
add
ins
add
add
add
add
add
add
outs
add
and
and
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
daa
add
jnp
daa
add
add
outs
add
outs
add
add
add
jne
je
and
outs
add
and
add
add
outs
add
and
daa
add
daa
add
add
outs
add
outs
add
add
add
add
outs
add
add
js
jo
popa
add
jae
imul
and
data16
jb
and
daa
add
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
inc
add
arpl
add
add
add
add
popa
add
imul
ins
add
add
jne
ins
add
add
and
outs
add
and
jbe
popa
add
imul
ins
add
and
add
jo
popa
add
jae
imul
jae
sub
and
and
add
add
add
add
add
outs
add
je
popa
add
outs
add
and
popa
add
add
jns
arpl
ins
add
arpl
and
jbe
popa
add
imul
ins
add
add
add
add
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
push
add
jo
ins
add
arpl
add
add
add
add
add
imul
and
daa
add
add
add
add
jnp
jge
add
and
jnp
inc
add
outs
add
data16
add
jb
popa
add
add
outs
add
imul
cmp
cmp
inc
add
jo
popa
add
add
popa
add
imul
ins
add
jae
cmp
and
dec
add
imul
outs
add
ins
add
add
je
jb
imul
and
daa
add
add
add
add
add
inc
add
outs
add
imul
jb
popa
add
add
outs
add
imul
cmp
cmp
push
add
je
dec
add
cmp
and
push
add
je
je
imul
and
and
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
push
add
add
inc
add
inc
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
and
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
add
imul
and
imul
and
data16
ins
add
and
and
add
dec
add
imul
ins
add
cmp
and
and
add
jae
and
popa
add
and
imul
popa
add
add
add
imul
add
inc
add
outs
add
inc
add
ins
add
cmp
and
dec
add
add
add
add
outs
add
and
data16
ins
add
and
and
add
add
add
add
add
add
outs
add
add
add
add
jb
imul
bound
ins
add
add
add
dec
add
dec
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
arpl
je
imul
and
and
add
popa
add
and
imul
add
jae
and
and
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
dec
add
jns
jae
add
inc
add
outs
add
inc
add
ins
add
cmp
and
inc
add
je
and
and
add
add
add
add
add
inc
add
outs
add
inc
add
ins
add
cmp
and
and
add
add
add
jae
and
outs
add
je
and
add
imul
inc
add
dec
add
push
add
push
add
push
add
dec
add
push
add
add
dec
add
inc
add
push
add
push
add
dec
add
add
push
add
inc
add
push
add
inc
add
dec
add
dec
add
add
add
dec
add
imul
ins
add
cmp
cmp
inc
add
je
push
add
ins
add
add
add
add
dec
add
imul
ins
add
cmp
and
push
add
je
and
and
add
add
add
add
add
dec
add
imul
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
jb
jb
outs
add
and
and
add
dec
add
imul
ins
add
cmp
cmp
push
add
je
push
add
ins
add
add
add
add
add
add
add
outs
add
add
jae
and
xor
xor
xor
xor
and
push
add
xor
and
jae
jns
jae
je
add
and
imul
outs
add
je
and
arpl
outs
add
jo
popa
add
add
ins
add
and
ja
imul
and
jbe
arpl
jb
add
add
je
pop
add
cmp
add
add
js
add
add
add
inc
add
add
add
add
add
add
jne
jae
je
and
bound
add
add
outs
add
je
popa
add
add
add
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
dec
add
push
add
jae
je
add
dec
add
push
add
je
push
add
add
add
add
je
add
add
imul
add
outs
add
ins
add
add
add
add
add
add
add
dec
add
inc
add
outs
jbe
ins
imul
gs
push
and
gs
je
jb
ins
popa
jo
jae
je
push
and
and
add
dec
add
inc
add
imul
pop
add
add
add
push
add
outs
add
add
xor
xor
add
push
add
outs
add
add
add
add
imul
xor
xor
cmp
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
imul
popa
add
add
add
push
add
outs
add
imul
popa
add
xor
xor
add
push
add
outs
add
imul
popa
add
add
add
imul
xor
xor
xor
pop
add
add
add
add
push
add
outs
add
add
add
add
add
xor
xor
add
add
push
add
outs
add
add
add
add
add
add
imul
push
add
add
add
add
push
add
outs
add
push
add
xor
xor
add
add
push
add
outs
add
push
add
add
imul
xor
xor
xor
add
and
add
add
jae
push
add
ja
add
push
add
outs
add
add
jae
and
data16
imul
add
and
add
jb
outs
add
and
and
add
push
add
jae
je
add
dec
add
data16
cmp
cmp
inc
add
jns
jae
je
add
dec
add
data16
add
add
imul
gs
xor
add
add
dec
jae
outs
ja
xor
jb
arpl
jae
add
add
add
jb
jae
imul
inc
add
and
data16
imul
add
add
outs
add
imul
and
inc
add
jns
jae
je
add
dec
add
data16
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
ins
add
popa
add
add
add
ins
add
add
outs
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
add
add
add
ins
add
add
outs
add
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
ins
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
jo
add
popa
add
add
outs
add
popa
add
je
outs
add
jns
cmp
and
dec
add
popa
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
add
add
add
add
jb
outs
add
and
and
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
popa
add
add
outs
add
popa
add
add
add
inc
add
add
je
add
jo
add
popa
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
outs
add
je
dec
add
add
ins
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
inc
add
aas
inc
add
sbb
dec
add
pop
inc
add
inc
add
sbb
push
add
ins
add
jae
push
add
push
add
add
add
push
add
ja
popa
add
add
add
add
add
add
add
mov
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
and
jo
popa
add
imul
add
add
add
imul
and
ja
popa
add
and
outs
add
je
and
data16
jne
outs
add
add
je
and
ins
add
arpl
popa
add
add
outs
add
add
add
add
and
je
push
add
add
popa
add
and
arpl
popa
add
jae
add
add
jb
outs
add
ins
add
ins
add
inc
add
add
popa
add
add
jb
ins
add
add
add
popa
add
add
and
daa
add
add
and
ja
popa
add
and
add
je
add
je
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
add
jne
imul
add
add
outs
add
ins
add
outs
add
add
add
add
add
jb
add
ins
add
outs
add
add
add
add
add
jae
and
ins
add
jae
jae
imul
and
popa
add
add
popa
add
add
add
add
inc
add
and
imul
popa
add
add
add
add
jo
outs
add
popa
add
jns
and
add
jb
add
je
outs
add
jns
and
ja
popa
add
and
add
je
add
je
add
add
add
popa
add
add
add
add
add
add
add
add
js
imul
jae
cmp
and
and
add
add
jae
inc
add
ins
add
cmp
and
and
add
add
jae
push
add
popa
add
add
ins
add
cmp
and
and
add
outs
add
add
outs
add
popa
add
add
add
outs
add
data16
add
jb
popa
add
add
outs
add
add
imul
and
ja
popa
add
and
jae
jo
add
imul
add
add
outs
add
add
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
daa
add
add
add
add
add
ins
add
dec
add
jae
je
popa
add
add
je
imul
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
outs
add
add
imul
jae
add
add
inc
add
ins
add
outs
add
ins
add
cmp
and
and
add
add
imul
jae
imul
cmp
and
and
add
add
and
dec
add
or
inc
pop
add
and
arpl
outs
add
je
popa
add
outs
add
cmp
or
add
inc
add
outs
add
jb
popa
add
add
add
add
add
je
and
outs
add
and
data16
ins
add
jae
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
inc
add
ins
add
popa
add
add
add
add
jbe
add
jb
imul
jae
push
add
je
push
add
data16
add
inc
add
add
add
add
add
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
jbe
add
jb
imul
jae
and
ja
imul
and
inc
add
outs
add
imul
jb
popa
add
add
outs
add
add
add
add
popa
add
add
and
outs
add
add
jb
imul
jae
cmp
and
daa
add
add
add
add
popa
add
imul
add
add
outs
add
popa
add
add
add
jne
je
jo
jne
je
and
data16
ins
add
and
daa
add
add
add
add
add
add
add
js
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
dec
add
ins
add
and
add
jb
cmp
add
add
jb
outs
add
add
je
dec
add
ins
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
jb
imul
and
push
add
outs
add
add
je
push
add
jb
jae
imul
and
add
jb
cmp
add
add
add
jb
outs
add
add
je
push
add
jb
jae
imul
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
outs
add
jns
and
je
push
add
popa
add
add
add
imul
and
je
outs
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
imul
add
add
add
add
add
add
add
add
add
and
add
jae
je
imul
je
imul
and
data16
ins
add
add
add
inc
add
popa
add
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
je
push
add
popa
add
add
add
outs
add
add
add
je
imul
je
imul
and
data16
ins
add
jae
and
popa
add
add
add
add
and
jae
popa
add
add
add
add
add
add
push
add
arpl
imul
add
add
add
add
jb
add
popa
add
add
jne
je
jo
jne
je
inc
add
ins
add
cmp
and
inc
add
jae
add
add
imul
cmp
and
and
add
add
jne
je
jo
jne
je
and
inc
add
ins
add
cmp
and
and
add
popa
add
imul
add
add
outs
add
bound
ins
add
and
je
outs
add
add
imul
and
data16
ins
add
and
and
add
add
popa
add
add
add
add
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
popa
add
imul
add
add
imul
and
and
add
and
data16
ins
add
outs
add
ins
add
and
arpl
outs
add
data16
add
je
jae
and
ja
imul
and
popa
add
outs
add
add
jb
and
data16
ins
add
and
imul
je
push
add
popa
add
imul
add
add
and
popa
add
add
add
popa
add
and
outs
add
je
and
jo
popa
add
imul
add
add
popa
add
imul
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
push
add
arpl
imul
add
add
add
add
add
add
add
jo
add
imul
and
outs
add
je
jo
jne
je
and
jo
popa
add
imul
add
add
add
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
add
outs
add
popa
add
imul
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
outs
add
jns
and
outs
add
and
jo
popa
add
imul
add
add
add
add
js
je
jb
popa
add
je
imul
and
jo
popa
add
imul
add
add
add
outs
add
je
add
je
jae
add
add
add
outs
add
popa
add
add
add
js
je
jb
popa
add
je
imul
and
add
jb
add
je
outs
add
jns
and
daa
add
add
add
popa
add
and
jo
jb
outs
add
imul
add
add
add
ror
mov
dec
add
dec
add
dec
add
dec
add
add
imul
add
outs
add
push
add
je
push
add
je
ins
add
add
add
and
add
add
add
add
imul
add
outs
add
push
add
je
inc
add
jb
add
je
imul
add
add
push
add
jae
imul
add
outs
add
push
add
je
dec
add
js
add
add
push
add
jae
imul
add
outs
add
dec
add
arpl
jb
add
add
dec
add
jbe
popa
add
add
add
popa
add
add
add
and
add
add
outs
add
popa
add
add
add
add
ins
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
outs
add
and
add
imul
and
je
outs
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
and
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
add
ins
add
inc
add
jb
add
je
outs
add
jns
cmp
and
dec
add
je
and
add
outs
add
add
and
jae
jo
popa
add
add
add
outs
add
add
add
and
add
je
jb
popa
add
je
imul
and
add
imul
and
daa
add
add
add
add
add
js
je
jb
popa
add
je
and
je
push
add
add
jne
imul
add
add
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
imul
jb
jns
and
pop
add
dec
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
add
add
bound
outs
add
je
add
add
inc
add
dec
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
bound
outs
add
je
inc
add
add
imul
add
add
add
outs
add
je
and
data16
ins
add
pop
add
add
add
add
ins
add
add
outs
add
je
add
add
add
add
data16
jb
arpl
add
jae
imul
outs
add
add
add
add
add
ins
add
popa
add
jae
dec
add
jae
je
popa
add
add
ins
add
jbe
popa
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
ins
add
arpl
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
outs
add
je
popa
add
add
jb
add
push
add
data16
add
jb
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
je
and
and
add
jae
and
add
outs
add
add
jae
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
outs
add
bound
ins
add
and
je
outs
add
add
add
add
add
jne
outs
add
je
imul
and
pop
add
add
add
dec
jae
outs
jb
dec
outs
push
jae
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
add
add
outs
add
and
data16
outs
add
je
imul
and
pop
add
add
add
add
dec
add
jae
push
add
jb
je
dec
add
push
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
add
je
je
add
jo
je
and
je
outs
add
add
add
add
add
add
jb
popa
add
jns
and
pop
add
add
add
dec
add
dec
add
push
add
push
add
dec
add
add
add
add
add
add
and
data16
jb
jae
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
outs
add
ins
add
add
add
add
imul
outs
add
jb
add
je
and
outs
add
ins
add
add
and
outs
add
and
jo
popa
add
popa
add
add
add
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
outs
add
je
add
jae
add
add
outs
add
jae
pop
add
js
imul
add
add
arpl
outs
add
data16
add
add
ins
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
push
add
je
inc
add
jb
jb
add
je
inc
add
jb
add
je
outs
add
jns
sub
sub
and
data16
imul
add
add
imul
and
add
jb
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
cmp
and
jo
popa
add
add
add
add
add
add
add
and
add
dec
add
dec
add
inc
add
push
add
add
add
add
ja
popa
add
add
add
outs
add
je
add
add
popa
add
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
popa
add
arpl
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
jae
add
and
arpl
push
add
and
je
outs
add
add
outs
add
je
imul
add
add
add
and
imul
je
popa
add
add
je
imul
add
add
dec
add
popa
add
add
add
outs
add
je
popa
add
add
jb
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
inc
add
and
imul
outs
add
and
ins
add
outs
add
add
and
jae
jne
jo
jo
outs
add
je
add
add
outs
add
add
add
jae
and
jbe
add
jae
imul
and
outs
add
and
push
add
ja
popa
add
add
add
ins
add
jns
add
add
add
add
add
jae
add
add
ins
add
jns
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
add
outs
add
outs
add
add
add
and
pop
add
add
add
dec
add
push
add
inc
add
inc
add
add
ja
popa
add
add
and
dec
add
arpl
add
add
ja
popa
add
add
add
ins
add
jns
add
add
ins
imul
je
outs
and
add
add
and
add
add
add
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outs
add
jae
inc
add
cmp
add
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
add
add
add
outs
add
jae
inc
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
outs
add
je
imul
imul
push
add
arpl
imul
add
add
popa
add
popa
add
add
cmp
and
push
add
popa
add
arpl
push
add
add
and
pop
add
add
add
add
add
ins
add
popa
add
add
add
add
popa
add
ins
add
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
and
outs
add
add
popa
add
add
outs
add
add
outs
add
add
add
outs
add
imul
outs
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
inc
add
imul
add
add
add
add
outs
add
add
jb
popa
add
add
add
add
imul
and
je
push
add
add
and
add
jbe
imul
outs
add
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
jo
outs
add
je
cmp
and
imul
add
jb
popa
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
outs
add
add
add
add
and
ins
add
popa
add
add
outs
add
imul
outs
add
add
je
add
pop
add
dec
add
pop
add
add
add
pop
add
dec
add
pop
add
and
cmp
add
outs
add
je
imul
sub
add
add
add
add
add
add
add
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
pop
add
push
add
pop
add
add
and
jne
outs
add
popa
add
imul
add
jb
add
add
add
add
add
add
outs
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
dec
add
add
add
data16
add
add
and
ins
add
popa
add
add
jb
add
ins
add
outs
add
add
add
jae
and
add
jo
je
jns
and
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
daa
add
add
add
jae
and
popa
add
and
jne
outs
add
jne
jo
jo
outs
add
je
add
add
add
imul
jb
jns
and
push
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
add
jb
outs
add
and
je
jb
jns
imul
and
je
outs
add
add
add
add
add
add
imul
jb
jns
and
jbe
popa
add
add
and
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
popa
add
add
add
jae
je
jb
jns
cmp
and
jb
add
imul
jb
jns
and
jbe
popa
add
add
and
daa
add
add
add
add
add
add
jae
and
outs
add
je
and
add
imul
add
add
dec
add
push
add
add
add
dec
add
push
add
add
add
dec
add
add
add
add
outs
add
outs
add
ja
outs
add
add
jb
jb
outs
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jb
outs
add
cmp
and
inc
add
jb
outs
add
and
dec
add
jae
jae
popa
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
outs
add
outs
add
cmp
and
and
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
add
add
add
outs
add
add
je
imul
and
outs
add
je
and
popa
add
add
outs
add
ins
add
popa
add
and
jbe
popa
add
add
add
add
jb
outs
add
dec
add
add
outs
add
add
outs
add
add
outs
add
add
add
and
jbe
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jae
add
je
cmp
and
inc
add
jae
add
je
and
data16
imul
add
add
add
add
add
and
and
push
add
jae
je
outs
add
add
add
add
je
jne
jb
add
and
add
and
add
add
dec
add
jae
je
popa
add
add
add
add
bound
push
add
ins
add
arpl
je
add
add
add
add
add
je
jne
jb
add
je
push
add
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
je
popa
add
ins
add
add
add
je
push
add
imul
je
and
jo
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
add
sub
sub
sub
and
inc
add
add
jne
je
imul
and
and
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
and
jae
je
jb
imul
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
ins
add
jbe
add
ins
add
add
add
add
add
je
je
imul
jae
add
and
and
push
add
jb
jae
imul
and
inc
add
popa
add
add
add
and
add
and
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
inc
add
jo
popa
add
add
popa
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
outs
add
je
imul
push
add
je
push
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
jbe
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
cmp
push
add
jbe
imul
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
push
add
and
popa
add
add
ins
add
outs
add
add
add
add
popa
add
je
imul
and
outs
add
and
and
add
outs
add
and
and
add
add
add
and
jae
add
outs
add
add
add
popa
add
popa
add
add
add
and
jae
push
add
add
add
add
add
outs
add
add
outs
add
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
imul
outs
add
popa
add
add
add
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
outs
add
jo
ins
add
je
add
add
jne
arpl
arpl
add
jae
data16
ins
add
add
add
imul
and
jb
add
add
outs
add
add
outs
add
add
add
add
add
jo
add
popa
add
add
outs
add
add
popa
add
ins
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
popa
add
ins
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
jne
outs
add
jo
add
popa
add
add
outs
add
add
add
popa
add
ins
add
add
add
add
add
jb
add
je
add
add
jo
add
popa
add
add
outs
add
add
add
add
add
add
outs
add
and
outs
add
add
popa
add
add
outs
add
add
add
add
push
add
add
outs
add
jb
imul
ins
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
dec
add
imul
popa
add
add
add
add
jns
jae
je
add
and
jae
push
add
add
outs
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
push
add
jo
jo
jb
add
jae
imul
and
popa
add
je
outs
add
popa
add
add
and
jb
add
outs
add
je
sub
and
jo
ins
add
popa
add
add
add
add
outs
add
je
and
je
push
add
popa
add
push
add
and
ins
add
outs
add
popa
add
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
inc
add
outs
add
je
imul
and
je
push
add
outs
add
je
popa
add
add
jb
and
add
add
add
add
add
add
jne
imul
add
add
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
and
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
jne
outs
add
outs
add
add
add
add
add
dec
add
popa
add
add
add
jne
outs
add
add
outs
add
je
popa
add
add
jb
and
inc
add
je
add
and
push
add
bound
outs
add
je
add
and
and
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
popa
add
add
add
add
outs
add
je
cmp
and
jae
add
add
outs
add
and
jb
add
jne
ins
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
and
add
add
add
add
add
add
outs
add
add
imul
add
add
jo
add
popa
add
add
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
add
popa
add
add
outs
add
jb
popa
add
jo
add
add
add
and
and
inc
add
ins
add
ins
add
je
add
add
outs
add
add
popa
add
imul
add
add
add
add
outs
add
add
outs
add
and
inc
add
arpl
imul
add
add
jae
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
arpl
popa
add
add
outs
add
and
push
add
add
je
push
add
jno
jne
add
arpl
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
je
imul
and
push
add
add
imul
bound
push
add
je
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
push
add
push
add
outs
add
cmp
and
inc
add
add
add
popa
add
add
add
add
add
push
add
dec
add
and
bound
outs
add
add
add
add
and
jo
popa
add
add
add
outs
add
add
imul
and
jo
popa
add
popa
add
add
add
jae
and
ja
add
add
add
ins
add
je
jns
add
add
je
imul
add
add
imul
add
add
jo
popa
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jae
and
outs
add
je
and
popa
add
add
jne
jo
jo
jo
outs
add
je
add
add
add
popa
add
add
and
add
data16
jne
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
jb
imul
jb
jns
and
dec
add
outs
add
jne
popa
add
add
add
popa
add
add
and
data16
jne
outs
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
add
je
add
add
add
add
add
js
popa
add
je
and
ins
add
je
arpl
push
add
outs
add
and
push
add
jo
jo
outs
add
je
add
add
add
popa
add
add
sub
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
popa
add
add
add
add
jne
add
je
add
add
jb
outs
add
and
arpl
outs
add
ins
add
outs
add
add
add
add
add
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
outs
add
ins
add
jae
push
add
outs
add
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
jne
add
je
add
add
arpl
popa
add
add
add
add
add
jae
and
and
add
add
popa
add
popa
add
add
add
add
add
add
popa
add
add
add
inc
add
outs
add
add
add
jo
inc
add
add
add
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
add
jb
add
add
jb
add
add
dec
add
outs
add
jne
popa
add
add
add
add
inc
add
outs
add
add
ins
add
add
popa
add
add
add
add
imul
add
jo
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
add
imul
add
dec
add
popa
add
jne
outs
add
je
imul
jae
cmp
and
push
add
arpl
arpl
add
jae
data16
ins
add
add
add
add
imul
add
add
add
and
dec
add
popa
add
add
jne
outs
add
je
imul
jae
add
add
add
je
jb
popa
add
je
imul
pop
add
add
add
add
xor
add
popa
add
je
imul
add
add
ins
add
imul
add
popa
add
arpl
add
add
popa
add
je
dec
add
dec
add
ins
add
add
jbe
add
je
inc
add
add
imul
add
jb
inc
add
inc
add
outs
add
bound
ins
add
add
ins
add
jns
add
dec
add
jae
je
popa
add
add
add
add
push
add
inc
add
jb
dec
add
jae
je
add
outs
add
data16
add
imul
jae
add
add
dec
add
push
add
jb
je
dec
add
push
add
add
add
popa
add
add
jae
imul
ins
add
popa
add
add
add
add
popa
add
add
jae
add
add
push
add
outs
add
je
imul
push
add
je
push
add
js
jo
popa
add
add
popa
add
add
add
add
add
add
bound
outs
add
je
inc
add
add
add
push
add
jb
jae
imul
push
add
je
je
imul
jae
add
push
add
jb
jae
imul
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
outs
add
add
ins
add
add
add
add
add
je
je
imul
jae
add
inc
add
je
inc
add
add
je
outs
add
add
add
je
je
imul
jae
add
add
inc
add
je
push
add
add
add
add
je
je
imul
add
add
inc
add
je
inc
add
popa
add
add
add
outs
add
outs
add
add
add
add
add
jae
je
popa
add
add
add
jb
outs
add
add
je
jae
add
add
inc
add
jae
add
je
add
add
dec
add
imul
popa
add
add
add
add
popa
add
add
add
add
add
imul
push
add
add
dec
add
inc
add
add
outs
add
add
dec
add
add
jne
add
arpl
add
add
add
imul
push
add
add
add
push
add
outs
add
push
add
add
add
inc
add
jae
popa
add
ins
add
push
add
add
push
add
add
je
push
add
bound
outs
add
je
add
push
add
bound
outs
add
je
inc
add
add
imul
add
imul
inc
add
imul
jae
add
add
push
add
jo
popa
add
imul
add
arpl
imul
add
add
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
push
add
add
js
add
add
push
add
jo
popa
add
imul
add
ins
add
jae
add
dec
add
add
add
popa
add
outs
add
outs
add
add
inc
add
jb
outs
add
add
inc
add
add
push
add
add
add
add
add
add
imul
jb
jns
add
add
inc
add
ins
add
je
add
add
add
outs
add
add
push
add
jbe
add
add
add
outs
add
add
dec
add
jae
push
add
je
je
imul
add
add
inc
add
je
push
add
je
je
imul
inc
add
add
add
add
je
je
imul
add
add
inc
add
dec
add
add
popa
add
add
outs
add
add
outs
add
ins
add
add
add
push
add
ins
add
popa
add
add
add
add
add
add
add
add
ins
add
outs
add
je
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
jb
imul
and
arpl
outs
add
jo
ins
add
je
add
and
jae
je
popa
add
je
imul
and
arpl
ins
add
popa
add
sub
add
add
add
outs
add
je
jae
je
jb
popa
add
add
add
add
inc
add
outs
add
je
jae
je
jb
popa
add
inc
add
add
add
add
jne
outs
add
arpl
jb
imul
cmp
and
push
add
add
popa
add
imul
and
je
outs
add
add
outs
add
je
jae
je
jb
popa
add
and
je
push
add
add
and
jae
arpl
jb
imul
add
inc
add
ins
add
push
add
jb
jae
imul
add
inc
push
push
dec
push
cmp
push
outs
popa
bound
je
and
fs
je
and
jae
jne
arpl
and
jae
jb
jno
imul
and
je
jae
popa
outs
and
ins
jns
and
je
jae
popa
jb
and
popa
imul
inc
js
outs
and
and
jb
gs
outs
outs
imul
popa
and
outs
jb
and
and
je
jo
jb
or
add
add
add
outs
add
inc
add
ins
add
dec
add
data16
pop
add
add
and
add
pop
add
add
add
add
jb
imul
push
jb
outs
jae
popa
je
outs
outs
add
add
and
add
add
add
add
add
add
add
add
outs
jbe
ins
imul
gs
imul
inc
dec
outs
je
jne
jo
jb
gs
js
gs
imul
gs
outs
jb
inc
js
gs
imul
inc
inc
js
gs
imul
dec
add
add
add
inc
add
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
ret
dec
add
inc
add
sbb
inc
add
inc
add
sbb
add
dec
add
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
push
les
test
inc
add
sbb
loopne
dec
add
sbb
sbb
push
sbb
inc
dec
ins
gs
js
gs
imul
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
sbb
fs
add
sbb
inc
add
sbb
push
sbb
clc
les
inc
sbb
inc
add
inc
add
dec
bound
arpl
ror
mov
dec
add
ror
movs
ror
mov
dec
add
dec
add
dec
add
dec
add
add
(bad)
inc
add
jb
push
js
gs
imul
inc
dec
add
add
add
inc
add
add
add
inc
dec
add
dec
add
and
loopne
dec
add
sbb
(bad)
and
push
sbb
inc
dec
popa
jo
je
imul
jb
outs
add
enter
push
das
inc
add
xor
inc
push
je
imul
add
inc
dec
add
add
(bad)
inc
add
add
add
add
dec
add
aaa
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
xchg
xor
mov
xor
inc
add
add
xor
add
xor
jns
inc
add
ss
add
xor
add
aaa
inc
add
(bad)
dec
add
ss
add
sbb
inc
add
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
arpl
je
outs
outs
and
outs
ja
and
and
je
jne
je
jb
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
gs
je
arpl
add
in
(bad)
dec
add
cmp
inc
add
dec
add
and
aaa
cmp
inc
add
cmp
inc
add
(bad)
dec
add
inc
inc
add
add
outs
inc
add
cmp
pop
cmp
inc
add
xchg
inc
add
cmp
inc
cmp
ins
cmp
push
inc
inc
add
and
add
add
dec
add
add
add
add
dec
add
add
add
add
dec
add
add
add
dec
outs
je
data16
imul
add
jne
jae
add
xor
xor
add
add
add
add
imul
add
je
je
imul
jae
add
add
push
add
add
imul
push
add
add
jae
add
add
ror
movs
add
add
inc
add
add
add
add
add
add
add
inc
add
dec
dec
add
add
add
add
add
add
add
add
inc
loope
add
add
add
inc
add
add
add
(bad)
(bad)
call
loope
add
loope
add
add
repnz
add
add
add
add
loope
add
loope
add
add
add
inc
add
arpl
popa
je
inc
arpl
js
add
add
je
jbe
je
inc
arpl
js
add
ins
gs
jae
inc
arpl
js
add
inc
jb
popa
je
inc
arpl
js
add
add
inc
add
dec
add
dec
add
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
js
jo
ins
add
jb
add
add
dec
add
push
add
outs
add
add
outs
add
add
jbe
add
add
add
push
add
jae
je
jb
imul
push
add
outs
add
add
outs
add
add
add
outs
add
add
je
inc
add
jae
arpl
outs
add
outs
add
arpl
je
add
add
dec
add
push
add
arpl
add
je
inc
add
arpl
jae
dec
add
jae
je
outs
add
jns
add
dec
add
inc
add
add
add
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
add
add
jb
imul
add
add
outs
add
outs
add
add
add
add
add
jb
imul
add
outs
add
je
ja
popa
add
add
add
arpl
jb
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
jne
jb
jb
add
je
push
add
jb
jae
imul
pop
add
outs
add
add
imul
pop
add
outs
add
add
add
add
add
add
outs
add
ins
add
arpl
add
inc
add
jb
add
dec
add
inc
add
arpl
imul
add
je
je
outs
add
add
add
dec
add
inc
add
ins
add
dec
add
jne
add
cwde
enter
dec
inc
add
push
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
dec
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
push
inc
add
mov
jp
inc
add
mov
scas
dec
inc
add
dec
inc
add
inc
add
inc
add
ss
add
inc
add
add
add
dec
inc
add
cs
add
add
test
inc
push
inc
add
push
inc
add
push
inc
add
push
inc
add
add
add
outs
add
add
add
add
add
add
add
add
outs
add
je
jb
outs
add
add
popa
add
add
add
add
imul
add
jo
pop
add
add
outs
add
jb
arpl
add
add
popa
add
add
add
add
je
jns
je
ins
inc
gs
jne
je
dec
dec
popa
outs
addr16
add
inc
gs
jae
jb
gs
jne
je
dec
dec
popa
outs
addr16
add
add
and
add
add
add
add
imul
add
mov
add
add
inc
add
add
add
add
dec
add
pop
inc
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
push
inc
add
pop
inc
add
pop
inc
add
push
inc
add
add
add
add
add
ins
cmp
das
add
outs
add
add
inc
inc
outs
outs
je
add
inc
inc
imul
add
inc
push
popa
imul
add
inc
push
imul
add
add
ins
imul
add
inc
inc
inc
add
jae
jb
js
gs
imul
gs
jne
arpl
js
gs
imul
dec
add
add
add
inc
add
add
add
inc
dec
add
add
(bad)
inc
add
add
add
inc
dec
add
add
add
inc
add
dec
add
add
add
(bad)
inc
add
add
add
dec
dec
add
dec
add
add
(bad)
inc
add
add
add
dec
dec
add
add
add
inc
add
add
add
dec
dec
add
dec
add
add
add
inc
add
inc
dec
add
dec
add
add
add
inc
add
add
add
dec
add
dec
add
add
add
inc
add
add
add
dec
add
inc
add
fs
add
sbb
inc
add
inc
add
sbb
add
dec
add
pop
inc
add
sbb
inc
add
inc
add
sbb
add
add
push
retf
adc
add
addr16
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
pop
inc
add
add
sbb
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
retf
sbb
push
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
add
add
dec
add
pop
inc
add
dec
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
addr16
add
push
inc
add
pop
inc
add
pusha
inc
add
popa
inc
add
inc
add
popa
inc
add
bound
cmc
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
pop
inc
add
push
add
sbb
dec
add
outs
inc
add
dec
add
int3
dec
add
jae
add
int3
dec
add
je
add
int
add
int
add
add
ins
add
je
ins
add
add
add
add
add
add
add
inc
add
outs
add
add
add
add
add
add
add
add
add
int
add
je
add
jle
add
jg
add
inc
add
mov
inc
add
add
add
add
add
add
into
dec
add
jle
add
jg
add
inc
add
mov
inc
add
add
push
push
add
lods
push
dec
add
add
inc
add
add
add
ror
fild
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
jg
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
scas
test
imul
inc
add
add
xchg
mov
mov
jbe
inc
add
inc
imul
(bad)
call
dec
add
add
add
inc
add
add
add
add
dec
add
nop
inc
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
mov
mov
lea
cwde
lea
mov
inc
add
mov
add
inc
add
mov
inc
mov
test
inc
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
arpl
ins
arpl
gs
add
imul
je
outs
outs
add
adc
adc
add
(bad)
inc
add
add
add
inc
dec
add
add
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
inc
add
add
dec
add
add
adc
add
add
add
(bad)
(bad)
(bad)
jmp
add
add
gs
add
add
dec
add
add
dec
add
add
add
ror
xlat
jg
add
scas
inc
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
test
inc
add
inc
add
xchg
inc
add
xchg
inc
add
stos
inc
add
inc
add
inc
add
cmps
inc
add
xchg
inc
add
add
sbb
dec
add
xchg
inc
add
add
sbb
inc
dec
cmp
push
gs
gs
jae
dec
popa
outs
popa
addr16
gs
outs
arpl
add
ins
add
arpl
ins
add
add
add
add
add
add
add
add
inc
add
mov
add
sbb
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
cmps
inc
add
cmps
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
mov
add
mov
inc
add
inc
add
inc
add
lods
inc
add
inc
add
scas
inc
add
cmps
inc
add
add
add
test
add
test
inc
add
lahf
inc
add
inc
add
ror
dec
stos
inc
add
scas
inc
add
inc
add
add
retf
add
add
lods
ror
aas
test
inc
add
inc
add
inc
add
retf
movs
retf
movs
retf
jp
inc
add
test
inc
add
retf
mov
cdq
dec
add
add
add
dec
add
add
add
dec
add
add
add
dec
add
add
add
cdq
dec
add
add
add
call
add
add
loopne
dec
add
add
add
pushf
dec
add
add
add
add
add
(bad)
(bad)
push
int
adc
adc
fs
add
dec
add
std
(bad)
inc
add
cmp
(bad)
call
add
add
std
(bad)
inc
add
add
std
(bad)
inc
add
add
std
(bad)
dec
add
add
add
add
std
(bad)
inc
add
ss
(bad)
inc
and
xchg
and
stos
add
push
mov
retf
inc
add
adc
xor
sbb
push
add
jae
sbb
into
adc
inc
ja
push
cmp
sbb
into
adc
inc
ja
mov
jae
sbb
into
adc
inc
ja
add
sub
adc
inc
ja
cmp
dec
add
add
fld
pop
leave
inc
add
test
inc
add
add
leave
inc
add
aam
add
inc
add
inc
add
inc
add
retf
movs
retf
(bad)
in
add
retf
mov
aad
add
retf
pushf
in
add
retf
mov
inc
add
inc
add
aad
add
retf
sbb
inc
add
inc
add
(bad)
dec
add
retf
inc
add
xchg
inc
add
xchg
inc
add
test
inc
add
inc
add
jmp
inc
add
jmp
call
add
xchg
inc
add
lock
add
icebp
inc
add
icebp
inc
add
repnz
add
repz
add
int
add
xchg
inc
add
xchg
inc
add
repz
add
hlt
inc
add
inc
add
sub
adc
inc
ja
rol
add
add
inc
or
add
add
add
rol
add
add
inc
xor
jae
sbb
into
adc
inc
ja
add
add
or
dec
add
fld
test
fld
movs
retf
and
inc
add
leave
inc
add
fld
test
inc
add
inc
add
retf
in
fiadd
push
fild
xor
inc
add
fild
repnz
push
loopne
add
inc
add
in
add
add
inc
add
loope
add
inc
add
inc
add
fild
jge
inc
add
add
add
dec
add
jg
add
sbb
loopne
dec
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
inc
add
jg
add
mov
inc
add
inc
add
xchg
inc
add
xchg
inc
add
rol
loopne
inc
add
fiadd
cmp
inc
add
les
or
inc
add
lds
lds
add
add
mov
mov
mov
ret
add
enter
enter
fiadd
clc
fiadd
xor
inc
add
inc
add
enter
fild
fild
push
cmovae
inc
fadd
popa
aad
add
rol
sbb
inc
add
mov
and
inc
dec
gs
inc
imul
pop
dec
add
add
add
inc
add
add
add
add
add
sub
add
sbb
inc
add
inc
add
xchg
inc
add
cmp
push
xchg
inc
add
sub
cmp
inc
add
sub
fisubr
inc
add
xor
fld
inc
add
sub
loopne
inc
add
sub
(bad)
sub
cli
sub
jg
inc
add
sub
inc
push
outs
add
add
add
add
(bad)
(bad)
(bad)
inc
data16
push
add
add
add
add
jne
add
add
inc
add
js
inc
add
outs
add
add
ins
add
popa
add
cmp
xor
jae
jne
add
inc
add
js
dec
add
add
jb
popa
add
add
add
add
jne
add
inc
add
js
inc
add
popa
add
add
jb
push
add
add
cmp
xor
jae
jne
add
add
inc
add
js
dec
add
add
outs
add
je
jb
outs
add
add
add
jne
add
inc
add
js
dec
add
add
outs
add
add
outs
add
xor
xor
xor
add
add
fs
add
pop
dec
add
pop
dec
add
add
inc
add
dec
inc
add
add
add
add
add
je
outs
outs
imul
inc
add
je
outs
outs
imul
push
add
jne
inc
imul
gs
arpl
push
add
jne
inc
imul
outs
outs
imul
outs
imul
push
outs
imul
dec
outs
outs
imul
push
arpl
outs
outs
imul
push
imul
add
je
jns
je
ins
dec
gs
imul
push
add
inc
add
xor
xor
add
add
inc
dec
push
push
dec
inc
pop
add
arpl
arpl
push
add
jb
add
je
add
popa
add
arpl
inc
add
imul
inc
add
jne
outs
add
add
arpl
arpl
inc
add
imul
add
add
popa
add
arpl
dec
add
ins
add
add
popa
add
arpl
push
add
ins
add
add
add
add
arpl
arpl
inc
add
jae
arpl
jb
imul
imul
add
add
popa
add
arpl
push
add
ins
add
add
popa
add
arpl
push
add
add
add
add
add
arpl
arpl
dec
add
ins
add
add
popa
add
arpl
dec
add
ins
add
push
add
jo
imul
add
popa
add
arpl
dec
add
jns
bound
outs
add
jb
add
push
add
add
je
add
popa
add
arpl
inc
add
arpl
jne
jae
add
add
popa
add
arpl
push
add
ins
add
arpl
je
imul
add
add
popa
add
arpl
inc
add
data16
jne
ins
add
add
je
imul
add
add
popa
add
arpl
push
add
ins
add
arpl
je
add
popa
add
arpl
dec
add
arpl
popa
add
add
outs
add
add
arpl
arpl
dec
add
jbe
imul
je
add
add
arpl
arpl
dec
add
je
push
add
jae
je
add
add
popa
add
arpl
inc
add
inc
add
data16
jne
ins
add
add
je
imul
add
add
(bad)
(bad)
xor
inc
add
add
inc
inc
add
inc
inc
add
aaa
inc
add
aaa
inc
add
inc
inc
add
inc
add
add
inc
inc
add
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
inc
add
inc
add
dec
inc
add
add
dec
add
dec
inc
add
dec
inc
add
inc
add
cmp
push
fimul
xor
inc
add
sbb
inc
add
ss
add
xchg
inc
add
xchg
inc
add
cmp
fistp
inc
add
inc
add
jbe
add
jg
add
aaa
inc
add
inc
add
inc
add
xchg
inc
add
xchg
inc
add
aas
inc
add
aas
inc
add
imul
push
inc
add
aaa
inc
add
inc
add
xchg
inc
add
jne
add
inc
add
cmp
scas
dec
inc
add
cmp
inc
cmp
push
cmp
bound
inc
add
cmp
lds
inc
add
cmp
pop
cmp
sub
inc
add
inc
add
inc
add
cmp
scas
cmp
sar
inc
add
cmp
sbb
cmp
pop
cmp
ja
inc
add
inc
add
ja
add
bound
jbe
inc
add
inc
add
ds
add
inc
add
inc
add
popf
inc
add
aaa
inc
add
ins
inc
add
ss
add
jbe
add
inc
add
cmp
pop
cmp
and
inc
add
inc
add
aaa
inc
add
xchg
cmp
adc
cmp
jp
mov
inc
nop
xor
and
add
outs
imul
inc
outs
outs
je
outs
ins
jae
add
imul
inc
outs
outs
je
outs
ins
jae
js
add
add
ins
ins
dec
gs
jo
add
add
arpl
outs
arpl
add
dec
add
inc
add
addr16
add
addr16
add
retf
sub
dec
add
addr16
add
addr16
add
addr16
add
pusha
inc
add
add
add
inc
add
inc
add
inc
add
inc
add
popa
inc
add
pusha
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
pusha
inc
add
inc
add
pusha
inc
add
pusha
inc
add
inc
add
dec
add
add
add
add
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
adc
add
add
add
rol
add
add
inc
and
xor
xor
aaa
add
add
add
add
add
pop
jb
ins
pop
jbe
je
outs
ins
jae
jbe
aaa
ins
imul
jo
popa
je
ins
data16
arpl
gs
popa
data16
imul
add
pop
add
popa
dec
add
add
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
push
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
popa
inc
add
add
add
add
pop
inc
add
add
add
add
add
push
inc
add
add
add
add
add
bound
and
add
sbb
add
lea
add
add
sub
add
ins
push
inc
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
push
inc
add
add
add
add
add
pop
inc
add
add
add
add
add
inc
add
add
add
add
lods
fs
add
add
pop
add
add
push
inc
add
add
add
je
add
add
add
add
add
add
push
add
add
inc
inc
add
add
push
add
add
fs
add
rol
sbb
add
pop
inc
add
add
add
add
add
push
inc
add
outs
add
ins
add
je
jb
ins
add
inc
add
popa
add
dec
add
jae
je
dec
add
add
add
add
ins
fs
popa
jb
gs
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
add
add
fs
add
add
dec
add
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
inc
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
gs
add
add
call
add
add
(bad)
(bad)
(bad)
inc
add
add
add
add
add
(bad)
(bad)
inc
add
add
add
add
(bad)
(bad)
clts
add
add
fs
add
add
add
inc
add
add
add
add
add
push
fimul
add
add
add
add
data16
add
jb
add
add
add
outs
add
je
ja
popa
add
add
add
popa
jo
je
push
outs
push
je
add
add
adc
add
add
(bad)
inc
add
add
add
add
dec
add
lea
repnz
loopne
dec
add
inc
add
je
dec
imul
push
dec
add
add
(bad)
inc
add
add
add
add
fimul
lock
inc
add
sbb
jns
gs
jb
popa
jns
add
fisttp
das
xchg
inc
add
xchg
inc
add
add
add
xchg
inc
add
xchg
inc
add
xchg
inc
add
inc
add
xchg
inc
add
retf
inc
add
leave
inc
add
inc
add
inc
add
retf
inc
dec
ins
gs
imul
inc
js
gs
imul
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
push
call
add
test
jge
or
jmp
mov
test
je
push
call
and
pop
mov
and
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
xor
push
call
pop
test
jne
push
call
pop
mov
call
call
mov
call
mov
call
call
call
mov
lea
push
call
call
mov
test
je
movzx
jmp
push
pop
push
push
push
push
call
push
call
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
push
call
cmp
jne
call
push
call
push
call
pop
pop
ret
cmp
jne
call
cmp
add
das
or
inc
add
call
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
push
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
and
test
je
push
call
pop
jmp
xor
jmp
and
mov
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
push
call
and
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
test
je
push
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
push
call
add
cmp
jne
mov
test
je
and
mov
jmp
or
or
mov
and
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmp
jne
push
call
cmp
pop
je
inc
jmp
cmp
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmp
mov
je
mov
pop
pop
pop
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
push
call
push
call
cmp
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
push
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
push
mov
push
push
call
test
pop
je
mov
test
je
cmp
jne
and
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
and
add
dec
jne
mov
mov
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
push
push
call
pop
mov
pop
pop
jmp
and
push
call
pop
mov
mov
or
jmp
push
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
cmp
jne
call
push
mov
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
push
call
test
pop
je
inc
jmp
cmp
jne
inc
jmp
cmp
jbe
inc
cmp
ja
mov
test
je
cmp
jbe
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
mov
cmp
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
cmp
mov
jne
push
call
pop
mov
cmp
je
push
push
call
mov
pop
inc
cmp
je
push
call
cmp
pop
mov
jne
push
call
pop
push
push
call
pop
add
pop
add
cmp
jne
pop
push
call
pop
mov
mov
pop
pop
mov
pop
ret
push
mov
push
push
push
xor
cmp
push
push
jne
call
mov
push
push
push
call
mov
mov
mov
cmp
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
push
call
mov
add
cmp
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
and
mov
push
mov
mov
mov
test
je
mov
add
mov
cmp
jne
mov
inc
cmp
je
test
je
movzx
test
je
inc
test
je
mov
mov
inc
inc
inc
test
je
mov
mov
inc
jmp
inc
test
je
and
inc
cmp
jne
inc
jmp
inc
test
je
mov
mov
inc
mov
inc
movzx
test
je
inc
test
je
mov
mov
inc
inc
cmp
je
test
je
cmp
jne
test
jne
dec
jmp
test
je
and
and
cmp
je
mov
cmp
je
cmp
jne
inc
jmp
cmp
je
test
je
mov
add
mov
mov
inc
mov
xor
cmp
jne
inc
inc
jmp
cmp
jne
test
jne
xor
cmp
je
cmp
lea
jne
mov
jmp
mov
mov
xor
cmp
sete
mov
shr
mov
dec
test
je
inc
test
je
mov
inc
inc
dec
jne
mov
test
je
cmp
jne
cmp
je
cmp
je
cmp
je
test
je
movzx
test
je
mov
inc
inc
inc
mov
mov
inc
jmp
movzx
test
je
inc
inc
inc
inc
jmp
test
je
and
inc
inc
jmp
test
je
and
mov
pop
pop
pop
inc
pop
ret
push
push
mov
push
push
mov
push
push
xor
xor
xor
cmp
jne
call
mov
cmp
je
mov
jmp
call
mov
cmp
je
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
mov
sar
push
push
inc
push
push
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
push
push
push
push
call
test
jne
push
call
pop
mov
mov
push
call
mov
jmp
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
pop
cmp
jne
xor
jmp
push
push
push
call
add
push
call
mov
jmp
xor
pop
pop
pop
pop
pop
pop
ret
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
lea
push
call
cmp
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
add
mov
lea
cmp
jae
and
or
mov
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmp
lea
jne
test
mov
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
or
jmp
cmp
jne
or
jmp
or
inc
cmp
jl
push
call
pop
pop
pop
pop
add
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
push
call
xor
ret
push
pop
ret
int3
int3
push
mov
push
push
push
push
push
push
push
push
call
pop
pop
pop
pop
mov
pop
ret
mov
test
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmp
jne
push
mov
call
call
jmp
pop
add
pop
pop
pop
ret
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
test
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmp
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmp
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmp
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
push
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
push
call
pop
push
push
push
call
push
call
pop
leave
ret
push
push
push
call
test
mov
jne
ret
and
and
push
mov
mov
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
dec
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
dec
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmp
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmp
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
dec
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
and
mov
mov
dec
mov
mov
cmp
jne
and
mov
cmp
jne
push
push
push
call
mov
push
push
push
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
dec
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
or
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmp
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmp
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmp
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
and
lea
or
mov
jne
mov
inc
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
dec
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
dec
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmp
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmp
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmp
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
and
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
push
push
push
call
cmp
je
add
mov
mov
mov
push
push
lea
push
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
push
push
push
call
xor
jmp
or
mov
mov
inc
mov
or
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
or
or
lea
mov
mov
lea
mov
mov
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
and
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
mov
ret
mov
mov
ret
cmp
jb
cmp
mov
jbe
mov
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
test
je
cmp
je
cmp
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
or
xor
jmp
and
mov
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
test
lea
je
mov
ret
and
mov
or
ret
mov
cmp
jae
mov
mov
sar
and
mov
test
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
mov
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
test
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
inc
mov
cmp
jne
inc
mov
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
push
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
mov
mov
jmp
call
mov
jmp
lea
push
push
push
push
push
call
test
je
mov
mov
mov
jmp
call
mov
jmp
push
call
pop
jmp
mov
test
je
mov
cmp
je
mov
mov
jmp
sub
jmp
and
mov
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
or
add
inc
cmp
jl
pop
ret
call
cmp
je
jmp
ret
push
push
push
call
add
ret
movzx
mov
test
jne
cmp
je
movzx
and
jmp
xor
test
jne
ret
push
pop
ret
push
mov
sub
push
push
push
push
call
mov
pop
cmp
mov
je
xor
cmp
je
xor
mov
cmp
je
add
inc
cmp
jl
lea
push
push
call
cmp
jne
push
xor
pop
mov
cmp
mov
rep
stos
mov
jbe
cmp
je
lea
mov
test
je
movzx
movzx
cmp
ja
or
inc
jmp
push
xor
pop
mov
rep
lea
mov
shl
stos
lea
cmp
mov
je
mov
test
je
movzx
movzx
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
cmp
jne
inc
add
cmp
jb
mov
mov
push
mov
call
lea
mov
movs
movs
pop
mov
movs
jmp
inc
inc
cmp
jne
push
pop
or
inc
cmp
jb
push
call
pop
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
pop
pop
pop
leave
ret
mov
and
cmp
jne
mov
jmp
cmp
jne
mov
jmp
cmp
jne
mov
mov
ret
mov
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
pop
xor
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
lea
push
push
push
call
cmp
jne
xor
mov
mov
inc
cmp
jb
mov
mov
test
je
push
push
lea
movzx
movzx
cmp
ja
sub
lea
inc
mov
mov
shr
rep
mov
and
rep
inc
inc
mov
test
jne
pop
pop
push
lea
push
push
push
lea
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
push
lea
push
push
push
lea
push
push
push
push
call
add
xor
lea
mov
test
je
or
mov
mov
jmp
test
je
or
mov
jmp
and
inc
inc
inc
cmp
jb
jmp
xor
mov
cmp
jb
cmp
ja
or
mov
add
mov
jmp
cmp
jb
cmp
ja
or
mov
sub
jmp
and
inc
cmp
jb
pop
leave
ret
cmp
jne
push
call
pop
mov
ret
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
mov
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
push
call
pop
pop
ret
cmp
ja
push
call
test
pop
jne
cmp
je
push
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
mov
fisttp
lock
and
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
outs
loopne
add
add
add
add
add
dec
add
dec
add
dec
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
dec
add
loopne
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
sub
dec
add
dec
add
dec
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
(bad)
int3
loope
add
loope
add
loope
add
loope
add
loope
add
loope
add
loop
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
and
dec
add
loop
add
loop
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
push
push
push
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
pusha
in
add
dec
add
ror
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
das
in
add
dec
add
dec
add
in
add
in
add
in
add
inc
(bad)
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
dec
in
add
dec
add
add
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
call
out
add
out
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
test
dec
add
dec
add
dec
add
dec
add
out
add
inc
(bad)
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
loopne
dec
add
out
add
out
add
dec
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
test
je
push
call
cmp
pop
jne
mov
jmp
push
push
push
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
and
lea
mov
jmp
and
mov
or
pop
pop
pop
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
push
call
mov
test
jne
cmp
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
test
je
push
call
cmp
pop
je
inc
cmp
jl
mov
push
call
mov
pop
and
inc
cmp
jl
mov
pop
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
mov
cmp
jle
push
push
call
pop
pop
mov
mov
cmp
jne
push
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
mov
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
push
push
push
push
push
push
call
mov
mov
cmp
je
test
je
cmp
je
cmp
jg
push
push
push
push
push
push
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
lea
add
and
call
mov
mov
mov
or
jmp
push
pop
ret
mov
xor
xor
or
mov
cmp
je
push
push
push
push
push
push
call
test
je
cmp
push
push
jne
push
push
jmp
push
push
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmp
je
inc
mov
dec
test
jne
cmp
pop
jne
sub
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
push
push
push
push
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
push
push
mov
neg
sbb
and
inc
push
push
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
or
cmp
je
push
push
push
push
push
push
call
cmp
je
push
push
push
push
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
test
je
push
call
test
pop
je
push
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
jmp
add
