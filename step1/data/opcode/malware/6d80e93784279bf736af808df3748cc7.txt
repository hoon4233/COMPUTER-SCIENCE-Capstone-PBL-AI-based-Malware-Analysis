cmp
jnp
dec
push
jns
or
and
pop
pop
cmp
push
(bad)
das
or
out
pop
add
outs
jl
lods
pop
sub
adc
cmc
data16
or
movs
das
push
jg
or
cmp
sub
daa
and
and
hlt
lods
or
daa
pop
or
repnz
lahf
sbb
jae
jbe
jnp
jg
cmp
xchg
std
outs
fdivr
or
scas
into
pop
and
nop
sub
pop
cmp
or
in
cmp
push
sbb
adc
push
and
or
rcl
jns
mov
rol
sub
fsub
and
jecxz
sub
dec
out
pushf
dec
push
mov
jg
or
or
movs
dec
stos
hlt
imul
ret
iret
outs
or
cmp
adc
cmps
jns
hlt
push
add
adc
or
and
mov
pop
push
repnz
sbb
cmp
adc
outs
or
sub
adc
cmps
dec
push
fcom
adc
pop
add
cmp
push
jg
aaa
outs
iret
outs
or
dec
sbb
fiadd
mov
addr16
outs
or
and
pop
lock
hlt
jno
pop
mov
cmps
jno
sub
and
mov
loop
adc
xchg
cmps
push
fdiv
outs
push
lods
sub
xchg
cmps
fcom
sbb
xchg
outs
inc
cmc
add
scas
into
pop
adc
pushf
dec
push
je
or
daa
loop
add
sar
or
sbb
cmp
sub
pop
xchg
inc
jbe
jg
into
pop
jbe
jg
(bad)
sub
sub
jns
sar
inc
iret
outs
or
cld
call
mov
das
jg
mov
jg
push
or
ja
mov
push
pushf
dec
push
jg
or
push
xchg
les
cmp
or
sub
fnsave
fisubr
push
jg
xor
outs
or
in
dec
push
das
dec
xor
or
rcr
sub
ss
jl
outs
pop
dec
mov
sub
mov
mov
jg
and
cmp
outs
or
pop
pushf
dec
push
xchg
imul
iret
outs
or
sar
jae
outs
or
pop
cmp
and
addr16
pop
mov
mov
outs
lock
or
sub
ficomp
sub
cld
or
add
jnp
jmp
jg
fiadd
fdivr
cmp
or
jl
or
jg
or
lods
bound
ins
or
imul
mov
pop
sub
movs
cwde
movs
(bad)
mov
mov
sub
xchg
xchg
inc
pusha
push
repnz
pop
cmp
or
test
pop
add
lods
in
inc
sub
add
sbb
call
aam
lods
cmp
sub
sar
sub
daa
jp
retf
xor
or
std
mov
test
adc
js
dec
in
push
or
test
add
jnp
mov
nop
dec
ins
push
jg
dec
stos
das
mov
or
inc
sub
push
adc
sub
es
jg
xchg
xchg
jae
jg
int3
sar
and
retf
sar
sbb
or
pusha
push
sbb
or
loop
push
sub
fidivr
mov
push
jg
cld
daa
jnp
retf
scas
ja
jle
or
push
xchg
and
or
in
dec
or
in
push
test
mov
test
cmps
sub
sbb
jg
in
fidivr
aam
xchg
repnz
push
jg
or
les
jg
adc
in
loope
sbb
or
cmc
arpl
lods
or
sub
adc
push
or
fidivr
dec
in
loope
dec
in
dec
mov
cwde
movs
dec
cmps
imul
push
or
call
fmul
and
push
xchg
sbb
stos
imul
cmp
jp
mov
cmps
jg
outs
scas
jg
bound
stos
imul
or
jp
mov
mov
jle
add
jge
mov
inc
adc
and
adc
push
or
xor
mov
(bad)
es
dec
scas
xchg
adc
movs
sbb
adc
movs
dec
stos
cmp
dec
rol
or
xchg
dec
scas
hlt
imul
lods
aas
lods
ss
jg
repz
rol
lods
(bad)
shl
push
jg
push
or
xchg
sbb
sub
push
sub
es
push
inc
mov
sar
bound
push
adc
imul
and
adc
dec
push
hlt
imul
lods
aas
lods
ss
jg
repz
pop
add
sub
neg
loope
not
and
imul
(bad)
jp
or
mov
imul
adc
shl
lods
mov
adc
shl
lods
imul
or
sub
xchg
jle
cmc
lods
and
call
push
add
jnp
push
jae
dec
scas
ficom
cs
jg
outs
scas
imul
fidivr
sar
movs
xchg
or
fs
sub
fadd
and
xor
sbb
imul
std
mov
xchg
and
mov
cmp
test
imul
fdivr
rol
mov
cmp
adc
jae
or
jge
add
jnp
push
jae
dec
scas
dec
pop
neg
imul
fisubr
sar
movs
xchg
or
pushf
or
fadd
and
xor
sbb
imul
std
mov
xchg
and
mov
cmp
test
cmc
cmp
jg
outs
scas
imul
fidivr
shl
push
or
add
and
nop
sub
pop
fmul
cmp
push
imul
scas
sti
adc
adc
imul
fisubr
shl
push
or
loope
hlt
imul
fiadd
and
or
cmp
inc
repz
inc
xchg
sub
bound
out
pop
ficomp
jnp
es
fisub
jl
stos
dec
aam
xchg
sub
out
sub
es
push
mov
sub
mov
imul
fsub
and
pop
jb
adc
loop
adc
add
jno
adc
loop
adc
sar
aam
mov
imul
or
jge
add
jnp
push
jae
or
mov
adc
movs
dec
scas
imul
cmc
es
es
jg
adc
rcl
lods
or
push
adc
sub
jmp
and
adc
movs
int
jnp
or
(bad)
jae
or
jge
add
rcr
daa
lods
std
retf
or
inc
mov
adc
jle
fidiv
or
sub
and
sub
adc
jg
fiadd
rol
push
jg
push
or
scas
out
sub
pop
fmul
and
push
inc
lahf
sub
xchg
sub
cld
dec
push
push
adc
sub
fidivr
fcomp
outs
int
push
xchg
movs
jp
jg
leave
fiadd
sbb
xchg
xchg
imul
pop
mov
pushf
jmp
jg
push
cmp
dec
mov
jg
adc
mov
fidivr
les
xchg
or
and
mov
adc
or
dec
cmps
sbb
sub
nop
inc
inc
sbb
cmp
mov
in
jg
dec
in
dec
mov
xchg
cmc
lods
xor
and
call
or
les
add
fadd
or
adc
cmp
sub
push
cld
or
cmp
cwde
dec
push
inc
imul
push
jg
dec
pop
fcom
jg
leave
shl
or
inc
mov
adc
jle
fidiv
and
cmps
pop
push
jg
das
iret
fsubr
push
pop
shl
push
jg
(bad)
mov
shl
add
pop
or
sub
or
cli
int
lods
cmp
shl
sar
sub
es
das
iret
fsubr
push
xchg
jo
push
jg
stc
cmps
ja
or
mov
pop
push
jg
dec
cmps
das
cmps
dec
pop
hlt
ins
push
add
adc
add
movs
dec
scas
cld
push
(bad)
push
jo
cmp
sub
sub
cld
dec
repnz
(bad)
adc
cmp
sub
jg
hlt
std
mov
test
adc
sub
push
mov
or
retf
outs
or
push
mov
stos
(bad)
out
(bad)
jg
pusha
push
xchg
sar
jg
or
jmp
mov
sub
push
xchg
mov
mov
cld
rcr
cwde
xchg
push
push
jg
stc
div
push
add
add
pop
fadd
pop
jae
imul
(bad)
hlt
cmc
lods
and
sub
cmp
outs
or
cmp
pop
fadd
push
outs
jg
or
imul
fisub
mov
cmc
add
mov
adc
sub
sub
push
and
das
retf
outs
or
and
(bad)
mov
adc
push
cld
adc
daa
je
xchg
lock
rcr
imul
push
xchg
mov
shl
rcr
test
adc
movs
pushf
movs
pop
mov
out
pop
ficomp
jp
in
mov
add
ret
sti
das
jg
cmp
pop
jno
push
cld
dec
not
imul
pop
cli
mov
shl
imul
scas
jle
or
fild
push
xchg
cli
jp
mov
cmp
pop
jl
or
or
mov
sub
ja
dec
push
jle
(bad)
mov
cld
call
in
fidivr
aam
xchg
mov
sub
mov
jbe
jle
cld
dec
not
push
not
jnp
pop
fild
lock
sub
dec
not
test
mov
jnp
stc
es
sbb
cmp
push
dec
adc
sub
adc
cs
outs
scas
jg
repnz
imul
pop
cli
pop
cmc
lods
sub
scas
jg
add
arpl
ins
or
xchg
push
mov
sub
push
adc
sub
push
jg
dec
cmp
dec
push
xchg
or
dec
stos
adc
sub
mov
hlt
imul
lods
aas
lods
ss
jg
repz
fcomp
sbb
or
loop
adc
cmp
dec
cmps
das
inc
or
(bad)
int3
dec
push
sbb
adc
aam
mov
imul
xchg
sbb
test
push
and
call
or
les
ds
pop
add
popa
xor
movs
pushf
movs
(bad)
out
shl
fidivr
or
sub
lahf
outs
or
imul
xchg
mov
les
adc
pop
mov
sub
fisub
inc
or
xchg
inc
gs
jg
(bad)
lahf
adc
fisub
sar
fdivrp
call
loop
test
cmc
sar
(bad)
pop
shr
sub
push
mov
adc
shl
lods
imul
xchg
lahf
shl
lods
das
lea
fadd
pop
sbb
imul
fisub
xor
and
lods
cmp
outs
or
cli
int3
cmc
lods
cmp
cmp
push
jg
or
cmp
add
jg
mov
repnz
pop
repnz
dec
push
das
cmps
xor
and
add
inc
pop
repz
out
shl
lods
xchg
aad
lods
sub
fcmovb
aam
lods
and
lock
mov
out
xchg
rcl
lods
das
lea
fadd
pop
das
imul
pop
mov
sub
xor
adc
or
lods
mov
adc
push
jo
xchg
push
jg
pusha
push
pop
jb
adc
(bad)
scas
adc
add
scas
into
pop
imul
ins
fcmovb
mov
lods
sub
pop
enter
adc
or
or
and
lods
aas
jl
(bad)
adc
lods
das
inc
pop
repz
test
sub
sar
mov
lods
sub
push
das
mov
jg
scas
sti
adc
push
cld
adc
cmp
out
or
lods
leave
sbb
cmp
fbstp
fild
mov
cld
call
or
or
pop
loop
adc
mov
adc
add
and
lods
sub
push
jg
add
sub
or
mov
jl
adc
loop
adc
xchg
jae
cmc
lods
jg
jle
adc
outs
or
ret
lods
cmp
mov
cmc
sar
sub
daa
jne
(bad)
sti
adc
push
jg
or
jle
cmps
mov
sub
add
ins
or
cld
call
or
or
pop
xchg
jmp
shl
add
movs
jmp
shl
push
jg
add
sub
or
fmul
dec
push
pop
jl
adc
outs
cmps
adc
xchg
jae
cmc
lods
jg
jle
adc
outs
or
ret
lods
cmp
mov
cmc
sar
sub
daa
jne
(bad)
sti
adc
push
jg
or
cmps
fucomi
(bad)
mov
lods
and
mov
sub
add
ins
or
cld
call
or
es
xlat
shl
lods
jle
or
sub
or
das
mov
xchg
(bad)
lods
sub
push
jg
add
sub
or
pop
int3
dec
push
pop
jl
adc
(bad)
cmps
adc
xchg
jae
cmc
lods
jg
jle
adc
outs
or
ret
lods
cmp
mov
cmc
sar
sub
bound
cmp
int3
dec
push
repnz
imul
fdiv
lods
cld
call
or
es
xlat
shl
lods
jle
or
fild
jg
mov
xlat
shl
lods
jg
sbb
jp
mov
(bad)
adc
lods
das
les
mov
retf
outs
or
js
adc
outs
out
sub
mov
adc
ror
mov
(bad)
fisttp
jg
xchg
cmps
shl
lods
das
cmps
(bad)
pop
adc
add
movs
dec
scas
jbe
add
push
repnz
pop
fdivr
hlt
cmc
lods
cmp
jnp
fidivr
rol
nop
cld
push
not
test
mov
stos
shl
lods
jg
stc
stc
aaa
sub
rcr
cld
cmc
lods
sub
(bad)
shl
lods
jle
test
jg
or
mov
dec
int
out
hlt
lods
push
shl
lods
jle
or
test
pop
fdivrp
mov
lods
cmp
shl
lods
das
cmps
cmp
iret
adc
shl
lods
imul
xchg
stos
shl
lods
das
inc
call
shl
lods
das
cmps
xor
sub
push
and
push
jg
pop
hlt
test
pop
fadd
popf
cmp
fidivr
rol
nop
cld
push
not
test
xchg
xchg
shl
lods
das
cmps
pop
hlt
adc
add
movs
dec
scas
jbe
add
push
(bad)
(bad)
pusha
jg
loope
repnz
pop
fdivr
lock
lods
cmp
jnp
fidivr
shl
movs
pushf
movs
(bad)
sti
adc
fidivr
(bad)
xchg
jl
or
cli
enter
jl
(bad)
xchg
shl
lods
das
cmps
xor
movs
shl
movs
leave
rol
ror
pop
cli
dec
or
lods
loope
sbb
rcr
fdiv
lods
sub
pop
jl
adc
(bad)
scas
adc
add
scas
into
pop
cld
mov
lods
adc
or
sub
mov
mov
dec
push
jg
mov
fdivrp
shl
lods
cmp
outs
or
cli
shl
lods
cmp
sub
sar
hlt
adc
shl
push
jg
(bad)
mov
cli
mov
(bad)
iret
adc
add
cdq
sub
in
jmp
xchg
not
hlt
lods
cld
rcr
cwde
xchg
push
push
jg
stc
div
xchg
loop
adc
pop
jg
imul
cmp
sub
rcr
mov
lods
sub
and
lods
adc
dec
push
hlt
test
pop
fadd
push
outs
jg
or
imul
jl
sub
ror
(bad)
repz
add
test
pop
fadd
pop
aas
imul
pop
mov
sub
rcr
test
lods
sub
jle
or
jg
idiv
jg
push
fisub
dec
int
psrlq
lods
jge
adc
imul
xchg
call
hlt
lods
das
mov
cmc
rcl
sub
push
jg
scas
fmulp
pop
cmc
lods
sub
push
jg
or
adc
add
adc
add
movs
dec
scas
(bad)
pop
pop
push
jg
jmp
lods
and
pop
cli
dec
or
scas
scas
xlat
adc
push
repnz
pop
cmp
int
push
hlt
test
pop
fadd
push
outs
jg
or
imul
inc
jle
or
ret
lods
sub
repnz
pop
cmp
mov
fdivr
test
lods
cmp
jnp
fidivr
rol
nop
cld
push
not
test
ins
rol
dec
cmc
lods
and
cld
xchg
bound
in
or
mov
cmc
add
shl
sub
shl
sar
movs
mov
adc
sar
mov
adc
push
jo
test
sub
(bad)
(bad)
shl
lods
jle
or
sub
out
shl
lods
repnz
pop
cmp
int3
dec
push
repnz
pop
mov
cld
call
cmc
lods
sub
push
jg
repz
aam
lods
sub
lods
retf
scas
and
add
test
xchg
jp
cmc
lods
cmp
sub
sar
test
pop
cmp
int3
dec
push
repnz
pop
mov
cld
call
dec
push
jg
mov
adc
push
or
(bad)
call
hlt
lods
das
cmps
cmp
iret
adc
shl
lods
imul
cmc
(bad)
xlat
shl
lods
hlt
test
xor
xlat
shl
lods
jo
pop
lods
adc
(bad)
fcmovnbe
hlt
lods
das
cmps
cmp
shl
lods
das
cmps
cmp
shl
lods
hlt
test
xor
xchg
shl
lods
jo
in
adc
out
(bad)
shl
lods
jg
or
lods
sub
jg
or
shl
fidivr
cmc
add
sbb
add
adc
push
or
adc
das
cmps
cmp
shl
lods
jg
push
fdivr
clc
cmc
lods
cmp
jp
fdivr
hlt
cmc
lods
cmp
jp
fdivr
lock
lods
cmp
jp
fisub
cmps
(bad)
mov
shl
add
sbb
add
adc
or
test
lods
pop
test
adc
nop
inc
aas
sub
bnd
or
dec
xor
or
rcr
sub
ss
jmp
mov
sbb
cld
xor
xchg
cmp
or
sub
push
fwait
in
push
jg
push
push
jg
loop
pop
sub
sar
shl
rol
mov
lea
cmc
lods
add
xchg
cmp
or
sub
push
lahf
out
xor
gs
repnz
hlt
push
(bad)
fiadd
lock
mov
shl
or
ja
fdivr
fsubr
jg
or
in
push
jg
xor
push
pop
fiadd
rol
adc
or
jg
imul
pusha
push
adc
sub
fidivr
sub
or
out
pop
ficomp
jp
push
ja
jbe
ror
jle
adc
sub
mov
or
ret
aas
sub
fimul
scas
das
dec
loopne
or
or
int3
ds
rcr
call
mov
push
jnp
or
sub
ds
push
jg
sbb
mov
push
jo
(bad)
out
or
and
outs
sub
jo
jns
jg
cmc
ja
mov
pop
dec
loopne
or
xchg
dec
or
ror
daa
retf
outs
or
lods
xor
mov
push
adc
imul
adc
xor
pop
addr16
push
aas
fimul
imul
push
jg
cld
push
aas
mov
push
jle
pop
repnz
mov
push
jle
xor
ds
push
sub
int3
ds
mov
mov
or
sub
int3
ds
test
jp
mov
dec
loopne
or
sub
xchg
xchg
add
push
jg
cld
lods
js
or
jb
xchg
adc
stos
adc
ins
or
outs
mov
cmc
lods
sbb
dec
loopne
or
sub
xchg
xchg
das
or
lods
cld
adc
jb
xchg
adc
jecxz
adc
movs
jp
xchg
adc
jle
dec
in
jecxz
jge
or
mov
lods
pop
dec
loopne
or
ins
xchg
adc
dec
repz
mov
shl
movs
jp
xchg
adc
jle
dec
in
jecxz
jge
or
pop
pop
dec
loopne
or
sub
into
ds
push
jg
jecxz
adc
xchg
adc
jle
dec
in
jecxz
jge
or
xchg
and
push
jg
pop
dec
loopne
or
sub
ds
push
jg
jecxz
adc
mov
imul
or
(bad)
sub
pop
dec
loopne
or
xchg
sub
push
jg
out
ds
push
inc
mov
push
(bad)
xor
jg
in
fidivr
fadd
int3
ds
mov
faddp
xchg
adc
retf
sub
int3
ds
popf
jg
or
cmp
add
aas
sub
in
jg
or
xchg
mov
push
jle
xor
ds
std
jg
or
scas
packssdw
ins
or
mov
push
jg
cli
jp
movs
int3
sar
xchg
adc
jecxz
jg
or
vrsqrtps
mov
mov
push
pop
lods
int3
sbb
or
mov
adc
stos
adc
mov
push
jbe
jbe
cld
aam
sub
shr
(bad)
out
xchg
dec
push
inc
lods
or
push
dec
outs
mov
or
push
cmc
ja
in
mov
dec
loopne
or
xchg
sbb
push
or
stos
mov
jp
xchg
adc
sub
movs
cli
bound
xor
adc
loope
dec
in
jecxz
jle
or
mov
daa
retf
outs
or
jg
add
push
mul
dec
fnstcw
jp
cmp
fadd
and
outs
or
sub
push
imul
pop
leave
sub
cmp
movs
dec
test
inc
in
or
and
rol
xlat
dec
es
cvtdq2ps
ins
or
xchg
xor
jg
mov
push
jg
jg
fisubr
adc
cvtdq2ps
ins
or
inc
push
jg
call
push
or
test
jg
cld
sub
ret
aas
sub
mov
jnp
shl
xchg
adc
and
in
fnstcw
out
into
ds
in
enter
scas
jmp
(bad)
(bad)
jb
ja
jg
or
adc
and
or
ret
aas
sub
mov
hlt
cmp
ret
aas
sub
push
imul
pop
imul
or
lea
ret
aas
sub
push
jae
dec
push
or
or
push
cld
or
ret
aas
sub
mov
hlt
cmp
ret
aas
sub
push
imul
pop
sti
fsubr
lods
jp
call
sub
push
jae
dec
push
or
cwde
dec
push
mul
and
jg
retf
ja
nop
sub
pop
in
xor
inc
(bad)
loopne
push
jg
in
fidivr
rol
out
sub
pop
lds
mov
imul
bound
outs
or
lods
push
push
jg
push
repz
outs
or
pop
push
push
jg
sbb
ds
adc
movs
cdq
movs
dec
stos
imul
bound
outs
or
jns
push
jg
dec
ds
sbb
outs
or
imul
ds
or
xchg
sbb
jg
push
repz
out
pop
ficomp
jp
call
div
or
or
mov
jg
dec
sti
das
rcr
pandn
xchg
cmp
adc
sub
mov
adc
imul
push
jg
loope
inc
sub
rcr
aam
rcr
ror
lods
jp
mov
cmp
bound
clc
or
sub
push
mov
xchg
ins
je
sub
mov
imul
fidivr
int3
cmc
push
or
mov
jmp
je
push
mov
adc
movs
leave
xchg
cmp
mov
(bad)
sub
cs
mov
or
fild
cmp
or
repnz
into
ds
mov
adc
sub
push
fstp
adc
sub
es
les
push
fistp
(bad)
or
sub
out
sub
push
sbb
jg
or
jnp
or
or
loop
push
sub
jmp
ins
or
iret
adc
movs
leave
lods
or
loop
and
lods
jp
mov
mov
repnz
into
ds
push
fwait
(bad)
or
xchg
mov
push
jg
push
or
scas
out
mov
push
fdivr
rol
mov
dec
out
fidivr
lock
cmps
dec
pop
imul
fdiv
cmp
push
xchg
fcomp
sub
adc
inc
push
cmp
or
cmp
pop
fidivr
les
or
pusha
push
repnz
es
pop
arpl
ins
or
cmp
loope
inc
inc
aas
sub
call
mov
push
xor
fiadd
ror
daa
retf
outs
or
cmp
int3
ds
mov
sub
movs
cwde
movs
dec
scas
imul
push
call
push
add
jnp
es
push
pop
sub
out
sub
lods
jo
push
ins
inc
ror
push
jg
ds
leave
push
or
pop
and
cmp
push
jg
push
pop
leave
push
or
pop
sbb
cmp
push
jg
mov
sub
fdivr
cmp
pop
jl
add
push
imul
dec
lods
jo
push
push
sbb
call
call
(bad)
inc
pop
leave
cmp
mov
sub
fiadd
call
not
mov
imul
add
mov
and
mov
pop
repnz
cmp
outs
or
xchg
jne
push
jg
mov
inc
repnz
add
les
jg
adc
scas
ret
jns
fisubr
aas
rsqrtps
cld
or
xchg
(bad)
fdivr
cmp
pop
jl
or
sub
add
or
(bad)
sub
cmc
cmp
(bad)
mov
jg
jle
jmp
push
xchg
sbb
lods
adc
daa
retf
outs
or
inc
adc
sub
or
or
stos
cld
les
rol
push
es
movs
repnz
sub
not
mov
jns
bound
ins
adc
not
mov
pop
pop
sbb
cmps
das
dec
inc
bnd
push
cld
(bad)
push
sar
sub
ss
jge
outs
fiadd
cs
not
mov
jge
pop
fiadd
adc
or
stos
cld
les
pop
leave
sub
xchg
sub
push
or
aaa
mov
push
scas
ret
jns
fisubr
aas
rsqrtps
cld
or
cmp
adc
jp
repnz
movs
push
push
jle
or
adc
or
stos
aaa
lods
ss
jle
inc
fiadd
adc
or
sub
sub
es
movs
repnz
sub
outs
or
aaa
lods
jg
or
js
cmc
push
jg
jg
xchg
test
jg
pop
inc
bnd
push
jle
mov
jle
or
lods
cmc
push
jnp
or
imul
out
pop
ficomp
jp
lods
jp
mov
pop
xchg
xor
lods
xchg
sub
pop
cmp
or
jl
or
ins
push
push
jae
loop
jg
xor
jg
or
mov
cwde
dec
push
jo
pop
inc
mov
cmp
ret
cmp
das
les
lods
jp
mov
push
pusha
adc
push
jg
jle
inc
lds
push
jg
sub
sbb
or
cmp
add
push
push
sub
jnp
dec
push
inc
imul
fnstcw
adc
dec
dec
jle
or
cmp
and
(bad)
or
mov
pop
cmps
idiv
dec
jnp
dec
push
cld
xlat
mov
scas
ret
fimul
mov
sub
les
fidivr
aam
push
dec
lds
push
xchg
mov
lods
push
aam
pop
popa
sub
cmp
push
fidivr
aam
push
xchg
movs
push
outs
jle
or
jp
in
cmp
mov
sar
inc
daa
nop
dec
push
xchg
pop
imul
jb
call
das
push
jg
(bad)
or
pop
add
adc
(bad)
pushf
repz
lods
jg
mov
jg
aaa
push
jg
mov
js
(bad)
mov
shl
push
mov
ror
sar
mov
out
pushf
repz
lods
jg
sbb
stc
mov
jp
mov
jg
jle
call
or
ins
and
call
rdpmc
ret
outs
or
cs
jo
lahf
mov
jmp
pop
repnz
imul
or
xchg
test
jg
lahf
sti
mov
mov
add
lods
add
repnz
(bad)
les
add
mov
lods
adc
inc
das
mov
push
xchg
leave
push
push
jg
lahf
mul
cmp
ret
mov
mov
cmc
lods
jle
mov
lods
adc
adc
inc
sub
call
cli
popa
cmc
lods
sub
mov
jo
lahf
mov
popf
mov
or
adc
add
push
jo
lahf
mov
popf
add
movs
lahf
xchg
pop
mov
mov
shl
push
jo
popf
push
jg
loop
xchg
cmc
(bad)
hlt
aad
adc
daa
retf
outs
or
jmp
xchg
xchg
cmp
mov
movs
rcl
sub
push
imul
cmp
sub
add
movs
int3
ror
movs
mov
lods
cmp
or
fsub
lods
sbb
cli
test
lods
cmp
sub
lods
jp
mov
mov
xchg
mov
cmc
lods
jg
cmc
out
ret
cmc
lods
sbb
pop
test
cmc
sar
and
scas
shl
mov
lea
rol
xchg
popf
or
and
push
adc
pop
cmp
or
mov
sub
and
rcl
cmp
push
imul
loope
(bad)
out
or
sub
test
fmul
push
or
add
cli
shl
sub
jg
(bad)
fbld
ror
push
inc
test
add
lods
sub
out
sub
out
repz
lods
xchg
adc
dec
push
jg
add
lods
sub
push
hlt
cmp
jae
ins
or
jmp
cmps
nop
shl
push
hlt
mov
retf
mov
movs
rcl
jge
inc
scas
hlt
and
(bad)
cmp
mov
ret
cmc
lods
mov
in
jecxz
mov
ror
cdq
jmp
or
lods
mov
nop
shl
push
jnp
or
enter
retf
outs
or
ret
lods
sub
pop
jb
adc
mov
(bad)
fcomip
cmc
lods
imul
or
adc
push
jg
lahf
iret
mov
push
or
test
adc
hlt
mov
mov
cli
mov
(bad)
repz
mov
or
cli
mov
(bad)
jmp
clc
aad
and
cmp
(bad)
jmp
shl
add
shl
xor
sub
fdivr
clc
aad
adc
es
(bad)
xchg
mov
cwde
aad
sub
rol
iret
aad
sub
pop
sub
push
pop
inc
or
jmp
pop
sub
shl
xchg
xchg
and
jb
or
mov
loope
sub
out
sub
in
(bad)
lods
sub
push
hlt
mov
and
stos
repz
lods
mul
pop
arpl
ins
or
stc
mov
jge
push
inc
pop
mov
(bad)
mov
outs
sub
add
movs
(bad)
jecxz
shl
pop
mov
sub
rol
and
pop
sti
push
or
cmps
(bad)
cmps
nop
shl
pop
leave
sub
mov
jo
ja
jle
mov
sub
mov
hlt
test
add
scas
loopne
repnz
out
mov
repnz
lods
jg
cmps
mov
shl
push
hlt
cdq
out
mov
lods
xor
add
mov
inc
sub
dec
neg
mov
or
and
sub
pop
neg
mov
or
(bad)
retf
outs
or
test
mov
movs
mov
lods
jmp
or
aaa
mov
imul
cmc
fidivr
sbb
(bad)
enter
(bad)
mov
mov
add
lods
sub
fld
xor
fwait
repz
lods
or
repnz
lods
jle
mov
lods
mov
cmp
push
jg
outs
jle
or
pop
and
inc
adc
push
jg
or
popa
lods
outs
jl
or
pop
push
rol
push
push
jg
or
jne
outs
jp
or
pop
or
in
in
(bad)
aam
and
pop
jle
push
pop
leave
test
pop
lods
retf
lods
adc
xchg
aad
lods
cld
call
aad
sub
cld
mov
mov
jmp
push
div
retf
mov
jl
neg
sti
cmp
mov
ror
rol
fsub
lods
sub
jg
fisubr
lds
adc
(bad)
mov
cmc
lods
jle
mov
lods
adc
adc
inc
sub
call
cli
add
lods
xor
mov
pop
ficomp
jp
fsub
and
push
xchg
cmp
ins
dec
or
imul
fimul
mov
jg
sbb
sub
div
imul
push
mov
outs
lahf
imul
fidivr
aam
cmps
mov
or
jo
or
mov
mov
sub
push
mov
xor
lods
xor
and
cmp
or
cmp
adc
jmp
jl
mov
inc
cwde
pop
or
cmp
push
mov
jle
ja
outs
pop
out
xchg
cmp
or
cmc
das
add
pop
push
add
push
(bad)
imul
sar
ror
pop
leave
outs
or
sub
push
add
in
sub
or
xchg
jmp
push
jo
dec
push
imul
mov
or
mov
xchg
jmp
push
jo
dec
push
mov
xchg
or
mov
or
mov
sub
push
xchg
pop
stos
jo
dec
push
pop
in
or
adc
push
jmp
push
jo
or
sub
push
or
cld
adc
jg
jmp
push
jmp
push
call
pop
jo
pop
lods
adc
push
sub
cmc
das
add
pop
push
jg
jmp
push
xchg
mov
sub
mov
inc
repnz
cmp
pop
leave
das
aaa
sar
or
jnp
dec
lods
jle
mov
or
jg
add
pop
add
iret
cmp
dec
inc
jg
bound
sub
push
sub
scas
ret
lods
ss
jg
repz
adc
js
dec
fs
loope
xor
or
jb
push
mov
sub
push
jg
sub
jg
pop
add
xchg
fs
push
movs
repnz
cwde
movs
(bad)
scas
mov
add
jg
sub
jg
repnz
pop
mov
repnz
pop
mov
cld
call
repnz
in
push
test
in
jmp
ret
nop
pop
jg
pusha
push
adc
inc
or
and
push
test
mov
rol
jle
or
jg
mov
sub
push
adc
sub
push
call
jg
xchg
xor
jg
int3
rol
push
push
push
or
adc
not
std
mov
imul
mov
xchg
sub
jg
leave
sar
(bad)
into
add
adc
lods
in
jl
or
jg
ja
jg
add
cmp
adc
(bad)
or
cmp
adc
sar
sub
jg
sub
ret
sub
mov
hlt
imul
jp
movs
int
and
nop
sub
pop
in
dec
add
jns
aam
stos
imul
pusha
push
pop
lods
or
inc
push
cmp
or
jg
or
add
jmp
cld
shl
es
retf
inc
or
jg
or
jg
dec
pop
imul
mov
jle
jg
imul
pusha
push
bnd
add
jg
sub
mov
sub
push
repnz
mov
xchg
xchg
pop
push
jg
std
mov
or
jg
or
sub
or
test
mov
int3
and
push
jg
in
fidivr
aam
xchg
adc
sub
cmp
or
jg
or
in
cmc
es
jmp
aam
mov
imul
lods
or
cmp
adc
(bad)
out
add
pusha
push
repnz
lods
or
pop
mov
not
and
test
in
dec
or
in
push
test
add
jnp
es
dec
scas
xchg
dec
adc
inc
neg
pop
sub
bound
mov
adc
push
push
das
mov
es
dec
mov
sub
sub
or
or
cmps
adc
bound
outs
or
cld
call
sbb
adc
pop
sbb
adc
pop
add
mov
jae
loop
add
rol
or
jnp
push
ins
push
imul
jae
cli
add
jg
add
mov
imul
or
and
nop
sub
pop
fsub
and
es
dec
scas
lods
cmp
sub
imul
cmp
push
xchg
fstp
jg
cmp
pop
pop
cmp
dec
push
xchg
int
push
jg
into
pop
cmp
sub
cmp
sub
or
imul
fisubr
rcl
and
leave
push
test
mov
les
push
cmps
movs
leave
xor
jg
outs
mov
jg
outs
mov
mov
xchg
out
cmp
sub
mov
jg
std
mov
imul
inc
jle
or
mov
cmps
dec
pop
jo
dec
push
imul
mov
jg
std
mov
imul
push
and
pop
jp
mov
call
push
or
mov
xchg
mov
inc
push
call
push
or
adc
jge
dec
lods
xchg
jnp
push
jo
dec
lods
jo
dec
push
mov
loop
add
or
jnp
addr16
jle
ja
jg
fstp
cmps
fucomi
fidivr
hlt
adc
sub
push
ja
mov
xchg
adc
pop
mov
or
cmp
or
popa
loop
mov
dec
mov
mov
adc
sub
push
pop
enter
sub
xor
mov
or
cmp
adc
ja
pop
pop
jo
pop
pop
push
cld
or
fwait
cmps
dec
mov
sub
nop
and
call
call
xchg
mov
aas
sub
jmp
retf
mov
call
mov
call
mov
call
mov
call
mov
dec
push
out
xchg
fidiv
cmp
leave
adc
test
call
sbb
call
adc
call
dec
call
movs
sbb
out
mov
or
sub
ret
out
mov
aaa
adc
daa
jae
ins
or
hlt
xor
ret
out
mov
call
mov
call
mov
call
mov
call
mov
call
mov
imul
mov
sbb
push
scas
int
push
cmp
leave
adc
call
inc
push
ret
out
mov
call
mov
call
sub
fisub
add
call
jl
ret
out
mov
call
mov
call
mov
sbb
ret
out
mov
call
mov
dec
push
out
scas
repnz
out
mov
call
sub
fisub
add
call
jl
ret
out
mov
call
mov
call
mov
leave
adc
sbb
call
into
clc
ret
out
mov
call
shl
nop
mov
rcl
sub
push
ja
dec
pop
sbb
idiv
cmp
adc
sbb
cli
push
jg
rcl
sub
mov
pop
mov
movs
enter
mov
test
push
mov
push
loop
xor
fidivr
shl
js
or
call
out
repz
fcomi
fidivr
cmc
dec
push
jg
outs
scas
imul
fidivr
rol
and
jne
outs
movs
rcl
ins
add
push
test
mov
push
jg
jg
div
or
jo
inc
test
(bad)
imul
cmp
call
jl
cld
xor
pop
leave
imul
mov
jo
pop
test
cmc
bound
push
adc
jl
mov
pop
mov
cld
call
mov
sbb
push
jg
cmc
push
(bad)
and
xchg
jo
adc
in
push
test
mov
(bad)
in
sbb
lods
leave
in
sub
mov
lds
or
jge
xchg
mov
or
xchg
and
mov
adc
out
cmp
sbb
or
imul
mov
cld
call
retf
pop
or
and
hlt
cmp
inc
outs
or
adc
test
movs
ja
sub
mov
push
sbb
sti
ret
fimul
outs
or
in
inc
push
jg
push
cmp
cli
push
jp
mov
jg
dec
mov
jg
mov
cmp
(bad)
sbb
push
jg
cli
push
cmp
add
cmp
push
sub
fwait
ret
push
jp
mov
jg
dec
scas
or
outs
or
cmp
loope
(bad)
rcr
jg
jmp
nop
neg
or
xchg
or
scas
dec
stos
jnp
fsubrp
cmp
xchg
dec
push
inc
imul
push
jg
adc
les
jg
sub
imul
add
inc
jbe
sub
dec
push
inc
adc
jg
loop
xor
fidivr
hlt
loop
xor
fadd
hlt
add
pop
enter
outs
and
mov
jg
dec
cmp
xchg
dec
push
neg
or
xchg
dec
push
das
(bad)
jmp
(bad)
ret
sub
push
mov
sbb
push
jg
cli
push
cmp
add
cmp
push
mov
stos
fwait
ret
push
jp
mov
jg
dec
cmps
or
outs
or
cmp
loope
neg
or
(bad)
cmps
pop
pop
outs
or
scas
dec
mov
cmp
xchg
dec
push
inc
imul
push
inc
call
mov
fsubr
jmp
xchg
dec
push
mul
xor
mov
aaa
xchg
ret
pop
leave
jns
sbb
dec
push
hlt
and
out
cmp
lods
leave
ja
sub
rol
ret
or
jnp
addr16
xchg
jl
mov
cmp
shl
lods
cld
call
or
jge
or
jg
or
ins
cmc
es
add
jg
adc
lods
stc
sub
or
jg
dec
mov
sub
jg
xchg
push
inc
push
jg
jg
xchg
xor
loop
aaa
sub
bound
sub
push
jg
jmp
nop
and
call
adc
sub
add
aad
mov
push
sub
movs
cdq
movs
(bad)
mov
mov
outs
or
jg
or
(bad)
movs
cli
bound
or
inc
outs
jge
xchg
mov
retf
test
push
out
and
int
mov
mov
int3
push
sub
push
jg
mov
push
sbb
fneni(8087
xchg
test
retf
stos
pusha
add
adc
adc
lods
adc
push
sub
and
adc
push
xchg
jns
push
jg
enter
jg
mov
sar
xchg
cli
sub
lods
sbb
movs
popa
jne
push
repnz
pop
cmp
lea
pop
(bad)
adc
(bad)
cmc
add
inc
or
jg
or
jg
or
jg
or
repnz
pop
mov
imul
cmc
es
sbb
or
sub
(bad)
(bad)
shl
lods
das
inc
or
sub
stos
ret
lods
retf
lods
add
sbb
and
cdq
(bad)
scas
adc
nop
cmp
lods
jp
mov
mov
shl
lods
cmp
sub
fdivrp
xlat
imul
outs
or
cli
shl
lods
cmp
sub
mov
(bad)
lods
inc
push
jg
in
(bad)
(bad)
imul
pop
mov
mov
outs
or
cli
shl
lods
cmp
sub
mov
sub
data16
outs
or
jge
or
xchg
and
push
jg
into
pop
(bad)
ficom
jg
push
or
test
mov
hlt
pop
push
in
dec
push
nop
jg
aam
stos
imul
cmc
push
or
std
mov
imul
scas
jg
dec
stos
das
mov
or
inc
sub
push
adc
sub
es
jg
xchg
or
sti
shl
sub
dec
stos
sbb
adc
pop
sbb
sub
rcl
sar
xchg
rol
jg
push
or
jnp
int3
push
dec
pop
rcl
sar
xchg
and
jg
or
sbb
or
pop
xchg
sbb
push
jg
into
dec
and
push
test
add
retf
ss
push
movs
repnz
cwde
movs
dec
scas
imul
pusha
push
adc
jl
outs
sar
sbb
jns
or
call
pop
ficomp
xchg
pop
mov
xchg
pop
fidivr
rcr
jg
or
jge
pusha
push
adc
pop
push
lods
or
or
sub
pop
mov
(bad)
cmp
es
dec
adc
sar
xchg
inc
inc
push
jg
retf
sar
xchg
adc
jg
retf
movs
bnd
movs
int
or
loop
aaa
sub
bound
jns
mov
rcr
sub
adc
les
jne
fist
jg
int3
push
jg
repnz
rcr
data16
push
adc
sar
xchg
(bad)
jg
retf
sbb
dec
dec
das
jp
push
adc
sar
xchg
leave
dec
push
jg
retf
sar
xchg
in
dec
push
jg
retf
sar
xchg
cdq
dec
push
jg
mov
jmp
cmp
push
mov
adc
movs
int
and
leave
push
test
add
jnp
cmc
sbb
sar
scas
aaa
scas
stos
outs
or
psrad
or
xchg
lea
movs
dec
stos
not
cmp
stos
outs
or
aam
jl
in
dec
mov
mov
sub
push
adc
outs
or
(bad)
fist
jg
std
inc
or
pop
mov
(bad)
sbb
dec
rcr
adc
inc
adc
add
ror
jae
call
sbb
push
imul
pop
ficomp
cmps
jg
hlt
jno
xchg
cmp
push
adc
sbb
jp
movs
pop
scas
div
loope
call
xor
or
sub
sub
sbb
cld
call
rcr
sub
push
jge
sub
lods
dec
scas
stos
cmp
push
cmp
pop
movs
pop
sub
inc
adc
es
repnz
adc
or
adc
(bad)
imul
fisub
fmul
mov
les
xchg
(bad)
imul
pop
sbb
(bad)
sub
sbb
hlt
imul
fisubr
rol
push
dec
in
push
or
test
mov
hlt
jno
xchg
cmp
out
jae
sub
push
jg
loop
cmp
fidivr
aam
xchg
scas
retf
mov
lods
dec
push
jg
dec
cmps
dec
(bad)
inc
jo
push
pusha
cld
fdivr
mov
sub
ror
push
xchg
rcl
fsubr
outs
jg
ins
xchg
cmp
or
fs
in
pop
sub
mov
stos
idiv
mov
(bad)
or
xchg
inc
mov
mov
rol
hlt
push
inc
jbe
adc
loop
cmp
sar
rol
push
xchg
fdivr
fcom
and
leave
push
test
sbb
or
sub
pop
in
xor
imul
sub
not
mov
cmc
add
fdiv
lods
cld
call
cli
push
(bad)
movs
int3
pop
movs
pop
or
pop
jg
mov
xchg
hlt
lods
jg
pop
add
sbb
or
pop
push
mov
imul
mov
jg
or
movs
pop
ret
scas
add
adc
popa
hlt
mov
xchg
inc
sub
push
jg
pusha
adc
movs
(bad)
scas
adc
sar
sar
pop
sub
push
jg
mov
jg
and
imul
scas
and
rol
or
xchg
lahf
add
loop
mov
cmc
sar
outs
or
sub
sar
outs
or
les
jg
mov
jg
mov
jg
or
mov
mov
(bad)
int3
dec
push
sbb
add
sub
sar
fadd
push
jg
add
sub
movs
xchg
loop
cmp
jmp
repz
xchg
imul
repz
push
sub
repnz
jg
mov
jg
mov
jg
or
mov
mov
(bad)
int3
dec
push
sbb
movs
cmp
sar
outs
or
(bad)
out
pop
jg
mov
jg
mov
jg
or
mov
mov
(bad)
int3
dec
push
sbb
in
cmp
sar
sub
jmp
repz
inc
dec
push
jg
imul
jle
out
adc
lods
sub
cmp
push
sbb
outs
or
cli
shl
lods
cmp
outs
or
xchg
gs
push
jg
into
inc
inc
iret
or
loop
cmp
jmp
repz
fsubr
adc
mov
mov
cld
call
dec
push
sbb
jl
sub
sar
sub
jmp
repz
fsubr
adc
mov
mov
cld
call
dec
push
sbb
movs
cmp
or
mov
sub
jmp
repz
lea
jg
imul
jle
out
adc
lods
sub
cmp
outs
or
call
or
retf
mov
imul
sub
jmp
repz
rcl
adc
mov
adc
add
inc
dec
push
jg
(bad)
lea
pop
sbb
cli
shl
lods
cmp
outs
or
xchg
jge
push
jg
into
jae
sbb
add
sub
movs
xchg
loop
cmp
or
sbb
or
fcomi
add
xchg
imul
repz
push
sub
push
adc
mov
cdq
movs
(bad)
fwait
adc
fidivr
sub
pop
jg
or
mov
mov
(bad)
int3
dec
push
sbb
pop
cmp
or
mov
sub
jmp
repz
out
adc
mov
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
mov
sub
out
shl
lods
xchg
jmp
into
pop
neg
cmp
mov
cmp
lods
das
inc
nop
lea
outs
or
call
or
or
mov
stos
cld
(bad)
ucomiss
lea
shl
lods
xchg
push
dec
push
jg
into
pop
xchg
adc
add
sub
movs
xchg
bound
retf
lods
add
adc
mov
jg
mov
jg
or
mov
mov
jge
or
dec
or
mov
stos
sub
shl
add
adc
adc
loop
ds
sar
sub
xlat
sti
sub
into
lods
adc
mov
mov
ror
rcl
scas
scas
xchg
adc
push
xchg
push
adc
jl
retf
shl
(bad)
xchg
hlt
lods
or
sub
jl
retf
rol
stos
(bad)
or
mov
stos
cld
out
imul
aam
dec
jg
or
xor
into
sbb
jl
lahf
out
adc
fisubr
mov
cmc
add
jbe
adc
mov
jg
cmc
add
inc
dec
push
jg
into
inc
mov
(bad)
xchg
cmc
scas
and
scas
sub
sar
or
cmc
lods
adc
cmps
adc
lods
or
(bad)
jg
cmc
lods
das
cmps
(bad)
scas
adc
add
dec
aam
jg
loop
ds
sar
sub
jmp
repz
jno
adc
mov
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
lea
shl
lods
xchg
aad
push
jg
into
pop
neg
cmp
aas
sub
jmp
repz
fsubr
adc
mov
mov
cld
call
cmc
scas
sub
adc
fdivr
aam
lods
adc
pop
std
mov
lods
and
fimul
in
cmc
scas
and
push
hlt
imul
lods
add
push
jg
mov
jg
cmc
lods
jg
mov
sub
fimul
cmps
dec
dec
jp
ret
adc
cmc
pop
cld
push
push
jg
(bad)
stos
adc
(bad)
shl
adc
inc
pop
jne
adc
(bad)
cmps
adc
add
scas
into
pop
repnz
mov
jle
jg
imul
ins
fcmovb
jmp
(bad)
movs
int3
fdivrp
sub
lods
cmp
jmp
mov
imul
sub
(bad)
mov
imul
ror
mov
retf
lods
adc
dec
sbb
(bad)
adc
lods
das
inc
outs
lea
adc
push
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
lea
shl
lods
xchg
mov
pop
neg
or
inc
sub
jmp
repz
out
adc
mov
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
mov
sub
out
shl
lods
xchg
jns
push
jg
into
pop
sbb
nop
inc
sub
sar
ror
fdivrp
sub
lods
cmp
shl
lods
sub
and
movs
(bad)
stos
adc
pop
mov
shl
cmp
dec
push
sbb
push
inc
sub
sar
sub
jmp
repz
jno
adc
mov
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
lea
shl
lods
xchg
xchg
xor
jg
into
pop
neg
std
mov
test
adc
xchg
add
sub
movs
xchg
bound
retf
lods
add
ins
jg
mov
cmp
shl
lods
xchg
push
xor
jg
into
pop
xchg
sbb
jg
add
sub
movs
xchg
loop
inc
sub
jmp
repz
xchg
imul
repz
push
sub
sub
sub
xchg
outs
les
ins
jg
mov
jg
or
mov
mov
and
dec
push
sbb
dec
inc
sub
sar
push
or
stc
aaa
push
jg
add
sub
movs
xchg
bound
retf
lods
add
outs
jg
mov
jg
mov
jg
or
mov
mov
(bad)
int3
dec
push
sbb
pushf
inc
sub
sar
sub
jmp
repz
push
aaa
push
jg
imul
jle
out
adc
lods
sub
cmp
adc
push
cld
call
dec
push
sbb
aam
sub
sar
fadd
push
jg
add
sub
movs
xchg
bound
retf
lods
add
outs
jg
mov
cmp
shl
lods
xchg
gs
push
jg
into
pop
xchg
sub
push
jg
add
sub
movs
xchg
bound
retf
lods
add
outs
jg
mov
cmp
shl
lods
xchg
cmp
into
pop
(bad)
fimul
inc
sub
jmp
repz
fsubr
adc
mov
mov
cld
call
cmc
scas
cmp
shl
lods
das
inc
or
fst
or
call
or
or
mov
stos
cld
(bad)
ucomiss
mov
sub
out
shl
lods
xchg
mov
push
jg
into
pop
pop
sub
adc
mov
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
mov
sub
out
shl
lods
xchg
inc
ss
jg
into
pop
(bad)
pop
jno
jg
in
(bad)
in
cmc
scas
and
push
mov
push
jg
std
stos
idiv
mov
cmps
mov
adc
add
(bad)
xlat
adc
loop
inc
sub
sar
sub
jmp
repz
fsubr
adc
mov
mov
cld
call
dec
push
sbb
test
sub
sar
sub
jmp
repz
fsubr
adc
mov
mov
cld
call
dec
push
jg
xchg
sub
pop
jg
or
mov
mov
add
dec
or
mov
stos
sub
shl
add
adc
adc
loop
inc
sub
sar
outs
or
les
xchg
ja
or
jg
or
jg
or
jg
or
sbb
jge
or
test
mov
sbb
aam
sub
cmp
mov
adc
add
sar
lods
retf
scas
add
imul
out
shl
lods
xchg
aad
push
jg
mov
mov
neg
or
jmp
test
push
or
test
mov
sub
sub
shl
lods
imul
int3
push
sub
jo
dec
lods
das
inc
or
das
les
stos
dec
aam
xchg
adc
outs
or
cli
shl
lods
cmp
sub
mov
cld
call
or
cmp
ss
or
adc
adc
inc
mov
sub
mov
pop
cli
(bad)
adc
ror
mov
sub
rcl
scas
into
jae
ret
push
sbb
push
call
sahf
push
jg
pop
add
lds
dec
aam
xchg
cld
mov
fdivr
and
imul
xchg
cld
int3
or
cli
mov
dec
pop
hlt
sub
push
jg
or
cli
mov
bnd
movs
int
movs
cmps
dec
pop
imul
mov
dec
sub
fsubr
and
pop
jge
dec
(bad)
mov
lods
cmp
dec
sub
(bad)
push
imul
shl
mov
hlt
jns
fdiv
push
imul
mov
add
shl
lods
not
or
jge
or
test
cmc
out
shl
lods
xchg
fnstsw
jg
(bad)
daa
adc
lods
retf
lods
add
gs
add
adc
fisubr
es
pop
imul
mov
add
shl
lods
(bad)
fld
jg
bound
outs
or
imul
mov
cmp
push
repnz
pop
mov
xchg
jns
push
jg
loop
inc
sub
cmp
or
test
pop
cmp
lock
push
pop
cwde
(bad)
adc
or
lods
loop
(bad)
shl
sar
and
sbb
push
dec
in
jecxz
jge
or
pop
sub
push
jg
(bad)
scas
adc
mov
mov
sbb
out
shl
lods
sbb
out
shl
lods
sbb
out
shl
lods
sub
cmc
add
scas
into
jae
test
add
inc
sbb
push
dec
in
jecxz
jle
or
fcomip
dec
push
repnz
pop
mov
not
and
retf
shl
lods
das
mov
cmc
add
(bad)
sti
mov
sti
shl
lods
adc
test
pop
mov
cld
call
repnz
shl
pop
jg
or
sub
int
xchg
shl
lods
jg
mov
sti
shl
lods
jg
push
xor
adc
push
(bad)
jmp
adc
xchg
(bad)
shl
lods
das
les
mov
cli
mov
lods
cmp
shl
lods
das
inc
or
jg
sub
jg
or
jg
(bad)
scas
adc
loop
dec
sub
pop
mov
sub
lods
retf
lods
add
pusha
jg
sub
cdq
sahf
scas
adc
inc
mov
lock
push
repnz
pop
mov
cld
call
imul
fild
push
jg
xchg
adc
lods
das
inc
jg
cmp
sub
fidivr
loop
jg
loop
dec
sub
sar
pop
imul
shl
lods
inc
sub
jbe
jle
pop
sub
push
jg
inc
addr16
mov
out
shl
lods
jg
add
jg
or
adc
push
push
jg
xchg
adc
lods
das
jg
in
sub
cmp
pusha
(bad)
cmp
shl
lods
das
les
adc
xchg
jae
cmc
lods
jg
jg
cld
mov
mov
adc
push
(bad)
jmp
xor
sub
pop
cld
mov
sar
mov
cmc
add
xchg
popf
dec
jg
std
mov
test
adc
pusha
push
sbb
nop
dec
sub
lods
retf
lods
add
popa
jg
adc
xchg
and
movs
cwde
movs
(bad)
aas
adc
fidivr
out
push
push
sub
pop
add
shr
bound
and
pushf
dec
sub
fidivr
movs
repnz
and
call
mov
sar
xchg
cmp
xor
xchg
lea
push
jg
enter
(bad)
pop
enter
enter
scas
and
pop
enter
cmp
add
sub
fidivr
sub
bound
and
fstp
push
fidivr
xor
fimul
sbb
push
cld
call
and
adc
jg
jo
dec
lods
repnz
loop
dec
sub
fiadd
sar
jo
dec
lods
repnz
pop
scas
repnz
add
sub
pop
enter
cmp
subps
jns
push
scas
and
inc
jl
loop
dec
sub
fidivr
aam
cmp
bound
jg
or
imul
mov
rcr
push
or
imul
bound
pop
mov
hlt
imul
nop
sub
or
lods
cmp
jg
add
jno
in
fwait
imul
not
and
ja
or
shl
fidivr
shl
adc
or
cli
nop
jmp
int3
cmc
lods
das
inc
ins
(bad)
cmp
sub
fidivr
mov
std
push
imul
mov
shl
fmul
or
mov
xor
out
int3
cmc
lods
sbb
push
sbb
push
not
std
mov
test
adc
(bad)
out
lahf
shl
adc
or
cli
nop
jmp
int3
cmc
lods
das
jp
cmp
sub
pop
mov
add
cmc
out
int3
cmc
lods
xchg
sbb
push
jg
into
pop
jbe
jg
sbb
es
fidivr
cmp
nop
adc
jg
mov
or
xchg
push
jae
sub
rcl
add
jnp
push
ja
mov
xchg
pop
sbb
push
neg
or
jnp
or
jne
push
jg
rcl
mov
dec
rol
or
xchg
rcl
jle
jo
shl
sar
outs
or
xchg
imul
pop
(bad)
ficomp
mov
pop
(bad)
aad
jg
(bad)
push
lahf
shl
add
scas
into
pop
xchg
int
push
jg
add
sub
movs
xchg
bound
cli
sub
lods
cmp
sub
sar
sub
jmp
repz
test
push
jg
imul
jle
out
jg
cmc
lods
sub
cmp
int3
cmc
lods
sub
stos
pusha
jg
mov
jg
mov
jg
or
mov
mov
(bad)
int3
dec
push
repnz
pop
mov
cld
call
cli
fidivr
sub
(bad)
jg
cmc
lods
das
les
xchg
ja
dec
pusha
jg
mov
jg
or
mov
mov
(bad)
int3
dec
push
repnz
pop
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
add
sub
xor
or
mov
pop
faddp
sub
lods
cmp
mov
sub
lods
cmp
dec
sub
sar
inc
sbb
int3
cmc
lods
das
inc
sub
int3
cmc
lods
das
(bad)
(bad)
popa
jg
mov
cdq
movs
(bad)
cmps
mov
les
pop
jg
or
mov
mov
(bad)
int3
dec
push
repnz
pop
mov
cld
call
dec
push
repnz
pop
mov
cld
call
or
or
mov
stos
cld
(bad)
ucomiss
cli
mov
sub
(bad)
jg
cmc
lods
das
les
xchg
ja
or
int3
cmc
lods
das
les
xchg
ja
cli
movs
cdq
movs
(bad)
mov
mov
sub
pop
jg
or
mov
mov
popa
push
or
dec
or
mov
stos
sub
shl
add
je
adc
mov
lahf
shl
add
cmp
push
jg
into
inc
pop
add
(bad)
push
lahf
shl
add
scas
into
pop
xchg
int
push
jg
add
sub
movs
xchg
bound
cli
sub
lods
cmp
sub
sar
outs
or
cli
sub
lods
cmp
sub
sar
fadd
push
jg
add
sub
movs
xchg
bound
cli
sub
lods
cmp
sub
sar
outs
or
cli
sub
lods
cmp
sub
sar
sub
jmp
repz
fsubr
adc
(bad)
push
lahf
shl
add
scas
into
pop
(bad)
ficomp
es
(bad)
push
lahf
shl
add
add
adc
(bad)
push
lahf
shl
add
scas
into
inc
xchg
xor
push
jg
add
sub
movs
xchg
bound
cli
sub
lods
cmp
sub
sar
outs
or
cli
sub
lods
cmp
sub
sar
sub
jmp
repz
fsubr
adc
(bad)
push
lahf
shl
add
scas
into
pop
(bad)
adc
jg
in
(bad)
rcl
and
push
mov
push
jg
std
stos
idiv
mov
mov
cmc
add
cmp
adc
mov
lahf
shl
add
mov
push
jg
into
inc
xchg
push
cmp
xchg
add
sub
movs
xchg
bound
cli
sub
lods
cmp
sub
sar
outs
or
cli
sub
lods
cmp
sub
sar
ins
or
adc
push
jg
add
sub
movs
xchg
bound
cli
sub
lods
cmp
sub
sar
sub
jmp
repz
sub
push
jg
imul
jle
out
jg
cmc
lods
sub
cmp
int3
cmc
lods
sub
idiv
mov
cmp
int3
cmc
lods
das
les
arpl
mov
jg
or
jg
or
jg
or
sub
cmp
adc
repz
lods
(bad)
jmp
jg
cmc
lods
das
les
jle
sub
push
repnz
repnz
xchg
or
retf
lods
add
jg
sub
out
repz
lods
xchg
push
and
sbb
and
jb
call
mov
sub
add
test
stos
mov
adc
xlat
cmc
lods
imul
mov
jecxz
cmc
lods
jg
cld
sar
cmps
push
pop
sub
stos
jg
sub
push
ja
pop
push
jle
lahf
mov
lods
icebp
lods
and
push
das
les
jl
sub
imul
aas
push
jg
or
push
sub
(bad)
mov
lods
add
jg
(bad)
test
inc
push
push
jg
xchg
retf
shl
lods
das
inc
movs
(bad)
cmp
outs
or
jge
or
xchg
int3
out
lods
sub
xlat
shr
or
sub
push
jg
(bad)
scas
adc
mov
mov
not
or
(bad)
cmc
lods
sub
(bad)
out
shl
add
scas
into
pop
jbe
add
push
pop
mov
adc
(bad)
scas
adc
and
jg
(bad)
out
shl
add
test
pop
mov
xchg
(bad)
lods
and
fiadd
inc
dec
cmp
(bad)
jmp
shl
add
scas
into
dec
(bad)
jmp
push
jg
int
(bad)
shl
lods
cmp
push
mov
ror
push
jg
mov
out
cmc
lods
jg
push
xor
adc
push
(bad)
jmp
cmp
xchg
(bad)
shl
lods
das
les
mov
rcl
cli
mov
lods
cmp
shl
lods
das
inc
or
jg
sub
jg
or
jg
(bad)
scas
adc
loop
push
sub
pop
mov
sub
lods
retf
lods
add
jp
sub
stos
jle
adc
bound
outs
or
add
dec
push
repnz
pop
mov
cld
call
icebp
lods
sub
(bad)
jmp
imul
(bad)
adc
lods
das
inc
jg
cmp
sub
fidivr
inc
loop
jg
loop
push
sub
sar
push
icebp
lods
sub
lods
inc
sub
jbe
add
push
pop
sub
push
jg
pop
jns
sub
stos
push
aam
xchg
pop
sub
push
jg
pop
adc
add
(bad)
sub
push
pop
inc
(bad)
adc
pop
adc
add
scas
into
pop
inc
shl
push
jg
mov
cli
mov
pop
mov
cld
call
mov
jg
or
jg
mov
fdivrp
mov
loop
push
sub
ror
mov
cmc
add
shl
pop
test
cmc
fidivr
shl
mov
pop
daa
(bad)
adc
push
jns
sub
cmp
push
sub
bnd
sub
xchg
imul
(bad)
cmp
sub
fsub
mov
lods
sub
push
mov
out
shl
lods
xchg
sbb
lods
sub
(bad)
jecxz
cmc
lods
cld
les
add
sar
mov
cld
call
popa
push
jg
loop
push
sub
xchg
cli
mov
lods
sub
out
shl
add
movs
repnz
xchg
mov
mov
sbb
dec
push
sub
fdivr
mov
lods
add
ror
jae
or
movs
out
rcl
cmps
push
pop
rcr
jb
lods
int
sub
add
movs
dec
stos
sbb
xor
jns
fisubr
sbb
adc
sub
fidivr
or
push
(bad)
jmp
push
jg
in
fidivr
fadd
jp
sub
es
pop
push
jle
loop
pop
sub
add
mov
or
jg
or
jg
sbb
sub
xchg
adc
add
push
not
std
mov
imul
scas
das
jp
adc
or
jg
dec
scas
and
call
sbb
les
add
pop
dec
and
dec
sub
cmp
jg
xchg
shl
push
jg
int3
fiadd
and
retf
inc
cmc
pop
jg
xchg
jle
cmc
lods
das
jp
mov
sub
cmp
jg
repnz
pop
mov
cld
call
or
sub
movs
popa
dec
or
cs
mov
imul
loope
and
nop
sub
pop
in
cmp
popf
dec
(bad)
(bad)
xchg
cmp
or
dec
add
cmp
dec
push
repnz
push
jg
std
jge
sub
fidivr
fcomp
jg
dec
push
jg
cmc
dec
and
and
push
das
inc
cmc
mov
jl
int3
push
sub
sar
jl
push
pop
outs
or
sar
jg
ins
or
sbb
dec
lods
jo
dec
lods
cld
aam
das
jmp
rcl
pop
xor
xchg
jecxz
jg
std
mov
imul
cmp
or
jg
(bad)
jle
or
jg
or
out
sub
pusha
push
adc
adc
push
jg
int
adc
or
retf
xchg
pusha
arpl
sub
fcom
or
jle
pusha
arpl
sub
sub
sub
cmp
pusha
arpl
sub
cmp
sub
cmp
pusha
arpl
sub
or
sub
cmp
pusha
arpl
sub
sbb
sub
rcl
inc
or
mov
push
xchg
adc
or
mov
push
xchg
add
or
vpmacsdql
add
sbb
or
and
movs
cli
bound
jnp
arpl
sub
mov
jle
pusha
arpl
sub
mov
sub
cmp
pusha
arpl
sub
sbb
cmp
pusha
arpl
sub
nop
pop
sub
jmp
add
push
mov
adc
movs
int3
or
in
add
out
adc
add
or
adc
mov
cmp
or
or
adc
sbb
aas
sub
scas
sbb
into
ds
push
adc
rcr
outs
or
fcom
xchg
adc
sbb
aas
sub
scas
sbb
repnz
sub
ror
inc
imul
(bad)
bnd
sub
ja
ins
or
outs
stos
dec
push
adc
mov
push
xchg
shr
inc
imul
(bad)
fidiv
sub
push
out
ins
or
outs
stos
dec
push
adc
mov
sub
jg
imul
les
sub
outs
or
outs
stos
dec
push
adc
mov
push
xchg
mov
jg
imul
les
jg
ins
or
outs
stos
dec
push
adc
mov
push
xchg
lods
sub
jg
repnz
sar
xlat
fisubr
mov
fdiv
xchg
adc
sbb
aas
sub
scas
sbb
repnz
sub
or
jns
mov
rcr
sub
mov
(bad)
adc
jg
xchg
mov
int3
cmp
les
xchg
outs
pop
int3
ds
push
das
les
jg
mov
imul
jbe
sub
push
sbb
int3
ds
push
sub
inc
hlt
imul
cmp
or
jg
mov
pop
lock
jg
jmp
cmp
sub
mov
fsubr
adc
or
inc
or
adc
pop
dec
mov
adc
sub
shr
inc
into
mov
outs
or
jg
add
sub
push
loopne
or
xchg
or
inc
or
inc
call
pop
dec
mov
adc
and
(bad)
mov
outs
or
jg
into
jbe
sub
xor
outs
or
jg
or
jg
or
jp
or
jg
or
jg
mov
jg
pusha
push
adc
cmp
push
pop
sub
fidivr
sbb
data16
dec
push
xchg
dec
das
push
jg
or
inc
or
inc
sbb
dec
or
dec
pusha
jnp
sub
push
das
inc
data16
outs
or
jg
push
jbe
sub
das
fisubr
ror
inc
or
inc
or
inc
sbb
pop
or
push
pusha
jnp
sub
push
das
inc
adc
movs
outs
or
jg
push
jbe
sub
repz
cmp
aas
addr16
or
jg
aas
pop
fild
cmp
fist
sub
repz
or
push
inc
or
jl
popf
movs
outs
or
movs
test
pop
sub
lock
dec
push
adc
mov
push
adc
mov
adc
sub
cmp
sub
push
adc
sub
cmp
test
not
adc
or
fdivr
xchg
adc
or
inc
or
inc
outs
cmp
inc
mov
inc
pop
das
or
das
inc
(bad)
mov
outs
or
jg
jle
jg
test
sar
inc
jo
cmp
outs
or
jl
pusha
pop
sub
cmp
test
sub
adc
or
les
ja
sub
push
sbb
int3
ds
push
sbb
repz
sub
cmp
mov
sub
das
or
das
inc
(bad)
mov
outs
or
jg
push
ja
sub
rcr
outs
or
mov
inc
or
inc
or
inc
es
jg
pusha
outs
pop
xchg
push
jg
movs
push
jg
bound
lods
pop
cmp
test
or
fadd
xchg
adc
and
sbb
int3
ds
push
sbb
repz
inc
adc
sub
cmp
sub
or
inc
popa
mov
outs
or
jg
xchg
sub
ret
fsubr
fiadd
rol
dec
mov
push
adc
mov
adc
sub
cmp
cmp
push
jg
or
jl
add
test
pop
sub
lock
cmc
dec
mov
push
adc
mov
adc
xor
push
jg
leave
push
jg
bound
sub
cmp
not
adc
or
fcomp
adc
or
inc
or
inc
sbb
sub
pop
sbb
outs
cmp
or
pop
aas
rcl
jg
ror
xchg
stc
sub
(bad)
cli
into
ds
push
sbb
int3
ds
push
sbb
repz
inc
adc
sub
cmp
sub
push
pop
sub
push
das
inc
or
cmp
outs
or
jg
xchg
jno
sub
(bad)
fsubr
cmp
aas
addr16
or
jg
aas
xor
outs
or
addr16
es
jg
(bad)
cmp
or
jl
(bad)
mov
test
sub
push
jg
push
jg
test
cmp
aas
addr16
or
jg
aas
xor
outs
or
addr16
mov
sub
nop
jg
or
imul
jl
ret
(bad)
cmp
dec
push
pop
sub
push
jg
cs
sub
dec
jmp
fidivr
sbb
lods
dec
dec
stos
adc
adc
push
inc
(bad)
push
jg
pusha
inc
pop
sub
shr
inc
(bad)
mov
outs
or
jg
or
leave
sub
(bad)
and
ds
push
sbb
int3
ds
push
sbb
repz
dec
bound
imul
jl
(bad)
mov
test
sub
push
jg
cmps
jb
sub
jae
ins
or
jg
aas
addr16
or
jg
aas
pop
fild
cmp
xchg
push
jg
(bad)
cli
jle
or
popa
inc
or
jl
mov
outs
or
test
dec
push
adc
sub
lock
dec
push
xchg
ja
lods
and
mov
and
nop
sub
pop
add
sbb
arpl
int
mov
dec
push
sbb
push
fcomi
lods
imul
bound
xchg
xor
lods
sub
adc
bnd
movs
int
jg
aas
pop
loopne
or
repnz
jae
sub
push
sbb
int3
ds
push
sub
inc
hlt
imul
cmp
or
jg
mov
pop
lock
jg
jmp
cmp
sub
mov
fsubr
adc
or
inc
or
adc
pop
dec
mov
adc
sub
shr
inc
ret
mov
outs
or
jg
xchg
jae
sub
push
loopne
or
nop
inc
dec
push
jg
or
inc
or
inc
es
jg
adc
cld
les
adc
and
(bad)
mov
outs
or
jg
push
jae
sub
xor
outs
or
jg
or
jg
or
jp
or
jg
or
jg
mov
jg
pusha
push
adc
cmp
enter
fidivr
sbb
data16
dec
push
xchg
aad
push
jg
or
inc
or
inc
outs
cmp
inc
push
cmp
or
jl
(bad)
mov
test
sub
mov
xchg
mov
push
inc
adc
sub
sub
inc
dec
push
jg
pop
mov
pop
pop
rcl
jg
or
cmp
or
sbb
into
ds
les
or
inc
mov
jg
adc
bound
push
jg
aas
mov
add
cmp
adc
sub
lods
dec
les
dec
jg
pusha
push
sbb
int3
ds
push
sbb
repz
sub
cmp
push
cmp
jl
(bad)
mov
test
sub
add
sub
lock
or
sbb
int3
ds
push
sbb
repz
sub
cmp
push
cmp
sub
push
pop
das
or
das
inc
(bad)
mov
outs
or
jg
adc
test
mov
adc
mov
push
adc
mov
adc
sub
cmp
inc
push
push
jg
bound
sub
cmp
dec
push
pop
not
adc
or
fcomp
adc
or
inc
or
inc
sbb
sbb
jg
bound
jg
or
pop
outs
rcl
jg
ror
xchg
lea
jg
cmp
ds
mov
cwde
movs
dec
mov
sbb
int3
ds
push
sbb
repz
inc
pop
ror
push
jg
stos
push
jg
pusha
aaa
pop
sub
push
das
inc
sbb
movs
outs
or
jg
push
dec
jg
test
cmp
aas
addr16
or
jg
aas
pop
fild
cmp
pop
cmp
sub
push
pop
mov
push
jg
or
jl
push
movs
outs
or
movs
test
popa
sub
lock
dec
push
adc
mov
push
adc
mov
adc
sub
cmp
xor
jg
pop
cmp
cmc
dec
push
pop
not
adc
or
fcom
adc
or
inc
or
inc
sbb
sub
pop
ror
push
jg
adc
jg
or
pop
jnp
adc
ror
xchg
popf
pop
push
jg
stos
lock
sbb
int3
ds
push
sbb
repz
scas
or
inc
daa
cmp
or
jl
ret
(bad)
cmp
dec
push
pop
sub
push
jg
jb
jg
test
ror
inc
or
inc
or
inc
adc
push
inc
dec
cmp
or
jl
(bad)
mov
test
sub
push
jg
ss
jg
test
cmp
aas
addr16
or
jg
aas
xor
outs
or
addr16
outs
cmp
inc
push
cmp
mov
pop
lock
jg
or
jge
or
fmul
lods
dec
sbb
lods
dec
push
sbb
push
pop
ins
or
inc
adc
jg
mov
pop
iret
rcl
jg
lock
loope
push
jg
xchg
lock
shl
jmp
jle
push
mov
adc
movs
int
movs
fdiv
lods
and
nop
sub
pop
add
(bad)
and
push
xchg
movs
int
jg
mov
sub
push
adc
sub
push
call
jg
xchg
mov
push
jg
int3
rol
sub
push
adc
xor
pop
mov
cld
dec
not
imul
fiadd
les
add
imul
add
cwde
dec
push
pop
sub
inc
lock
xchg
addr16
pusha
push
sbb
sub
js
adc
jg
sbb
mov
call
add
adc
jl
outs
inc
aaa
out
sub
push
jg
mov
cld
call
repnz
out
pop
ficomp
sub
add
xchg
mov
mov
inc
mov
icebp
iret
outs
or
cli
sub
lods
cmp
sub
mov
(bad)
and
push
jg
std
stos
idiv
or
lods
ja
jle
sbb
ret
push
repnz
pop
mov
neg
and
sub
inc
pop
hlt
mov
push
adc
add
lods
ja
jl
sbb
mov
lods
adc
mov
call
push
or
or
cli
sub
lods
cmp
sub
fimul
lods
ja
jp
sbb
dec
popf
dec
push
repnz
pop
mov
call
push
or
or
cli
sub
lods
cmp
sub
rol
ror
loop
sub
(bad)
jg
cmc
lods
das
les
and
pop
scas
mov
push
adc
add
movs
cli
jp
movs
int3
rol
rol
outs
inc
test
cmp
shl
lods
das
les
jg
mov
and
inc
pop
repz
push
adc
add
lods
ja
je
sbb
jle
dec
push
repnz
pop
mov
call
pop
or
or
cli
sub
lods
cmp
sub
rol
rol
outs
inc
xor
cmp
shl
lods
das
les
inc
jg
and
shl
lods
imul
mov
and
inc
pop
jns
adc
(bad)
push
adc
add
inc
or
jg
dec
mov
outs
or
cli
sub
lods
cmp
ins
or
pop
pop
rcl
jg
mov
cmp
ins
or
pop
in
sub
dec
jg
mov
cdq
movs
(bad)
stos
adc
sub
adc
or
movs
out
add
jnp
es
in
push
in
jle
stos
push
aam
xchg
neg
pop
mov
bnd
push
sub
pop
nop
shl
sar
and
push
sub
pop
dec
jg
push
or
jg
xor
sub
add
adc
push
inc
sub
sub
and
outs
or
cli
sar
cmp
sub
mov
(bad)
and
push
jg
std
stos
idiv
mov
mov
cmc
lods
jle
sbb
rcr
out
adc
mov
call
or
outs
inc
int3
loope
sub
(bad)
xchg
fcomi
lods
das
(bad)
out
inc
jg
mov
mov
cmc
lods
jl
sbb
cwde
sahf
dec
push
repnz
pop
mov
(bad)
mov
push
jg
in
(bad)
enter
movs
int3
rol
fcomip
lods
sub
inc
pop
sub
(bad)
mov
xchg
lea
push
jg
mov
xchg
cmc
push
or
or
cli
sar
cmp
sub
rol
fcomip
lods
sub
inc
pop
sbb
mov
xchg
inc
pop
push
jg
mov
xchg
cmc
push
or
or
cli
sar
cmp
sub
fimul
lods
mov
xchg
cmc
pop
or
or
cli
sar
cmp
sub
rol
fcomip
lods
and
adc
(bad)
mov
xchg
xor
mov
xchg
cmc
pop
or
or
cli
sar
cmp
sub
rol
fcomip
lods
and
inc
pop
in
adc
(bad)
mov
xchg
leave
push
push
jg
cli
movs
cdq
movs
(bad)
mov
shl
fidivr
shl
pop
or
or
cli
sar
cmp
sub
rol
fcomip
lods
and
inc
pop
das
mov
mov
xchg
mov
push
jg
mov
xchg
cmc
pop
or
or
cli
sar
cmp
sub
cmp
mov
repnz
pop
mov
neg
std
mov
test
adc
inc
test
cmp
shl
sar
fcomi
lods
call
cmp
jb
mov
mov
cmc
push
jo
xor
sub
mov
neg
std
mov
test
adc
mul
pop
pop
stos
adc
dec
nop
adc
xchg
ja
(bad)
mov
mov
sub
mov
call
or
or
lods
mov
adc
imul
mov
adc
lods
inc
and
xchg
cli
shl
lods
sub
dec
sub
movs
cdq
movs
pop
mov
shl
add
sbb
adc
(bad)
scas
adc
add
scas
into
pop
cld
xchg
repnz
adc
daa
push
les
jg
mov
call
in
std
mov
xchg
and
mov
aam
lods
jo
inc
push
jg
mov
mov
push
jge
cmp
push
pop
push
rcl
jg
(bad)
scas
adc
adc
movs
cli
jp
movs
int3
cmp
lea
pop
xor
adc
(bad)
scas
xchg
cmc
add
scas
into
dec
xchg
pusha
bound
sub
fdivrp
shl
lods
cmp
sub
jmp
jo
push
mov
adc
fcomi
lods
imul
xchg
adc
lods
das
inc
sbb
adc
lods
das
les
push
cmps
outs
or
cli
shl
lods
cmp
sub
sar
shl
lods
das
les
inc
jg
xchg
adc
lods
cld
in
push
add
test
pop
cmp
test
pop
mov
cld
call
(bad)
scas
xchg
cmc
add
inc
or
mov
dec
push
repnz
pop
mov
cld
call
(bad)
xor
or
cli
shl
lods
sub
inc
jg
push
(bad)
aam
lods
and
or
mov
xchg
cmc
pop
jo
ds
jg
cmc
out
aam
lods
pop
mov
out
mov
aam
lods
das
les
inc
jg
mov
cmp
shl
lods
das
les
inc
jg
xchg
adc
lods
das
les
inc
jg
adc
fcomi
lods
xchg
or
lods
call
cmc
jl
cmp
(bad)
stos
fcomi
lods
mov
shl
push
xchg
and
fisubr
xchg
fisub
movs
cli
movs
cdq
movs
(bad)
lahf
mov
cmc
fidivr
shl
fdivrp
shl
lods
cmp
outs
or
cli
shl
lods
cmp
sub
sar
aam
lods
das
(bad)
into
inc
jg
adc
fcomi
lods
repnz
imul
int
or
xchg
ret
rol
cmp
(bad)
jmp
aam
lods
(bad)
fisub
(bad)
adc
lods
das
sar
mov
repnz
pop
mov
repnz
imul
ret
lods
and
add
or
cli
aam
lods
cmp
cdq
(bad)
stos
adc
mov
ins
or
jg
or
das
(bad)
fiadd
sub
(bad)
adc
lods
das
jg
out
aam
lods
xchg
aad
lods
sub
xchg
jo
add
xchg
aam
lods
xchg
jno
push
jg
in
xor
cmp
pop
adc
sbb
push
jg
jecxz
test
cmc
or
ja
xchg
jnp
pop
ficomp
sub
call
sub
icebp
dec
shr
cmps
sbb
sahf
jecxz
sub
push
pop
sub
sub
sub
(bad)
fcmovnb
cmc
lods
jbe
jle
das
les
jg
pusha
push
xchg
and
mov
hlt
imul
push
mov
sub
push
jg
or
shl
imul
bound
loop
or
pop
ror
push
jg
call
sub
mov
das
les
inc
jg
mov
pop
sub
push
jg
(bad)
loop
shl
add
cmp
push
adc
outs
or
cli
popf
in
cmp
shl
sar
sub
pop
cli
xor
push
jg
(bad)
retf
outs
or
or
cmp
cwde
dec
push
(bad)
out
outs
dec
jg
loop
imul
lods
popa
push
movs
xchg
in
lock
mov
movs
fimul
imul
mov
(bad)
out
sub
loopne
shl
push
xchg
sbb
and
or
mov
xor
sbb
imul
std
mov
xchg
and
mov
fiadd
lods
sub
cmc
test
ss
or
mov
mov
ror
mov
imul
cld
xchg
jle
add
cli
test
lods
sbb
(bad)
aad
cmc
lods
dec
mov
cmc
add
mov
(bad)
mov
shl
das
les
inc
jg
mov
adc
shl
das
mov
cmc
add
mov
cmc
add
mov
cmc
add
scas
into
dec
adc
shl
das
les
inc
jg
pusha
push
xchg
sbb
movs
pop
sub
cmp
hlt
dec
push
pop
mov
int3
mov
ins
or
repnz
push
data16
dec
push
(bad)
or
ins
not
cwde
rcl
jg
call
outs
or
jl
sbb
movs
sar
movs
leave
faddp
add
lods
and
jmp
scas
cmp
hlt
dec
push
pop
mov
int3
mov
ins
or
repnz
call
data16
cli
dec
push
(bad)
(bad)
push
jg
ins
not
mov
adc
call
outs
or
jg
dec
push
xchg
cmp
push
jg
into
adc
xchg
mov
adc
mov
push
(bad)
and
scas
fisub
inc
or
jg
push
cmp
or
jg
or
pop
sub
adc
xchg
pop
jg
adc
inc
or
jg
or
xchg
add
push
repnz
mov
repnz
mov
jle
jg
adc
jp
faddp
cdq
in
cmp
retf
(bad)
(bad)
pop
jg
pusha
push
repnz
lods
or
or
xchg
xor
jmp
jmp
and
push
repnz
mov
repnz
mov
jle
jg
adc
jp
faddp
cdq
in
cmp
retf
les
push
repnz
lods
or
or
sub
jmp
pop
or
iret
adc
shl
hlt
test
adc
sub
push
lahf
lea
int3
ds
push
mov
push
add
cmp
bound
sub
cmp
mov
jg
adc
inc
or
sub
push
xchg
xchg
add
cmp
ficom
sub
push
mov
inc
or
imul
xchg
cmp
or
imul
xchg
cmp
or
sub
push
ret
jl
shl
cmp
aas
addr16
or
jg
or
jg
or
jg
or
jg
rcl
rcl
jg
jmp
cmp
sub
push
jg
or
ds
(bad)
iret
outs
or
jg
or
adc
shl
sar
sub
outs
jg
or
or
outs
or
pop
push
rcl
jg
loop
jb
or
cli
and
sub
mov
adc
and
sub
call
sub
fisub
mov
cmc
add
test
pop
cmp
cwde
dec
push
pop
push
rcl
jg
pop
out
sub
push
jg
mov
cld
call
or
adc
int
adc
or
mov
sar
movs
leave
fdivrp
test
lods
cmp
sub
mov
jg
or
das
les
(bad)
xlat
ret
das
inc
or
jg
adc
push
adc
sub
add
inc
or
mov
cmc
data16
dec
push
xchg
jne
push
jg
adc
cmp
pop
mov
(bad)
out
aaa
outs
jg
xchg
fwait
jl
in
sub
cmp
or
jg
dec
mov
les
jg
add
and
enter
xor
sub
add
sub
das
or
imul
xlat
out
sub
mov
jle
or
inc
cmp
mov
jge
or
sub
aaa
inc
jle
or
add
adc
push
jg
add
push
xchg
mov
push
jg
aaa
cmp
outs
or
test
push
jg
bound
dec
inc
mov
mov
rol
lods
not
or
movs
outs
or
les
mov
ror
mov
cli
hlt
imul
shl
lods
xchg
cmp
retf
test
(bad)
fwait
adc
add
sub
movs
jae
or
pop
gs
int3
imul
shl
rcl
shl
lods
push
mov
xor
fwait
shl
lods
push
test
mov
adc
js
loopne
lods
adc
fdivr
enter
pop
(bad)
pop
test
and
cmps
shl
lods
das
inc
or
jg
aas
pop
fild
mov
(bad)
(bad)
pop
jg
mov
cwde
dec
push
jg
mov
sbb
mov
popa
inc
sub
rcr
mov
outs
sets
jg
or
lods
xor
sets
jle
(bad)
fistp
or
les
adc
mov
not
or
loopne
or
and
(bad)
sbb
or
sub
push
jb
or
fisubr
pop
or
pop
jg
mov
push
sub
movs
cwde
movs
(bad)
mov
mov
sub
push
imul
ror
pop
(bad)
fsubr
daa
cmp
(bad)
fisubr
daa
inc
pop
packsswb
ins
or
dec
pop
bt
ins
or
push
pop
(bad)
fsubr
daa
pop
pop
comiss
outs
or
arpl
psllq
outs
or
imul
pop
loopne
or
jae
cmova
ins
or
or
jg
or
sub
fdivr
aam
lods
adc
das
fisubr
daa
outs
pop
psllq
outs
or
ja
packuswb
ins
or
jb
mov
outs
les
lods
adc
lods
or
int3
jae
or
push
add
push
mov
adc
shl
lods
imul
mov
mov
scas
scas
mov
shl
push
repnz
pop
mov
imul
mov
jb
push
jg
bnd
movs
int
sub
repnz
pop
lods
dec
les
pop
jg
mov
jle
cmc
lods
jg
sub
jg
or
sub
dec
push
adc
sub
lods
dec
les
pop
jg
jecxz
jp
or
xchg
(bad)
push
adc
(bad)
fincstp
lods
sub
movs
adc
push
call
jp
cmp
mov
push
jg
cmc
push
jg
xchg
jle
cmc
lods
das
sar
xlat
fisubr
mov
repnz
mov
jle
jg
cld
aam
and
or
and
dec
push
repnz
lods
adc
mov
cld
call
or
or
push
adc
outs
or
jg
ret
sub
data16
lea
xchg
pop
add
lds
jg
mov
inc
sub
movs
cwde
movs
(bad)
mov
mov
shl
add
test
pop
cmp
dec
push
repnz
pop
mov
cld
call
or
test
pop
lods
dec
xor
pop
jg
mov
jle
cmc
lods
jg
sub
jg
or
jno
dec
push
adc
sub
lods
dec
xor
pop
jg
jecxz
jnp
or
repnz
ret
lods
ss
jg
repz
sub
push
pop
retf
fst
jg
or
sbb
(bad)
aas
sub
pushf
jbe
or
mov
ror
mov
jg
cmc
lods
cmc
test
push
adc
outs
dec
push
push
outs
inc
push
sub
jg
or
cwde
sti
dec
push
adc
sub
lods
dec
xor
pop
jg
jecxz
jnp
or
cli
sub
lods
sub
lods
inc
cmp
jmp
xchg
jle
cmc
lods
das
mov
cmc
add
add
adc
(bad)
cmps
adc
add
scas
into
inc
pop
ror
push
jg
(bad)
push
adc
add
sub
lods
ja
or
ret
lods
sub
adc
jmp
adc
or
sbb
repnz
sub
mov
inc
add
jg
xchg
jle
cmc
lods
das
mov
cmc
add
add
adc
(bad)
cmps
adc
add
scas
into
inc
pop
ror
push
jg
(bad)
push
adc
add
sub
les
or
ret
lods
sub
adc
test
adc
or
sbb
int3
ds
cld
ja
or
not
cmp
jle
cmc
lods
das
mov
cmc
add
mov
adc
(bad)
cmps
adc
add
scas
into
inc
pop
ror
push
jg
(bad)
push
adc
add
sub
jl
sub
rol
sub
jg
adc
inc
fst
jg
or
sbb
int3
ds
adc
sub
mov
repnz
mov
jle
jg
cld
aam
daa
pop
inc
or
jg
test
dec
add
sar
jnp
ins
or
xchg
sub
push
jg
(bad)
lods
adc
add
lods
and
lods
inc
sbb
push
inc
adc
pusha
push
pop
add
adc
or
sbb
int3
ds
cmp
mov
jmp
or
cli
shl
lods
adc
and
movs
bnd
movs
int
cli
sub
xchg
mov
cmc
lods
das
inc
daa
mov
shl
lods
das
(bad)
rcr
sub
xchg
outs
inc
cmc
push
jg
xchg
jle
cmc
lods
das
sar
jae
ins
or
call
or
pop
inc
or
jg
sbb
or
mov
xchg
pusha
or
jmp
xchg
adc
lods
and
lods
inc
sbb
push
inc
adc
pusha
push
pop
ret
jg
or
sbb
int3
ds
dec
js
or
jmp
or
repnz
ret
lods
ss
jg
repz
leave
mov
xor
dec
aam
xchg
repnz
pop
fdivrp
fincstp
lods
cmp
outs
or
cli
fincstp
lods
cmp
sub
sar
sub
movs
cwde
movs
(bad)
mov
cli
(bad)
imul
inc
or
jnp
or
jg
or
ins
bound
loopne
or
imul
pusha
push
adc
cdq
(bad)
lods
adc
lock
or
inc
pop
mov
adc
and
retf
mov
jle
jg
imul
pusha
push
repnz
pop
add
sbb
adc
mov
mov
adc
shl
lods
das
inc
or
(bad)
int3
dec
push
sbb
in
jp
or
repnz
lods
sub
push
jg
repz
lahf
mov
das
mov
cmc
add
shl
sar
cmp
(bad)
mov
adc
outs
or
les
jg
cmc
out
shl
lods
xchg
cmp
aas
pop
fild
mov
adc
sub
adc
sub
cmp
dec
push
xchg
xchg
push
push
jg
(bad)
cmps
adc
in
(bad)
enter
cmps
(bad)
mov
shl
fidivr
inc
or
les
pop
out
mov
cld
in
adc
adc
push
or
adc
shl
lods
sub
outs
or
(bad)
(bad)
push
jg
pusha
push
repnz
pop
cmp
out
cmp
shl
lods
xchg
cmc
push
push
jg
mov
mov
mov
sub
push
jg
sub
sub
pop
inc
mov
mov
outs
or
jle
or
xchg
stos
xchg
sub
data16
dec
push
xchg
stc
rcpps
mov
mov
test
adc
jg
sbb
or
mov
sub
or
ja
xchg
outs
sub
ficomp
jp
fmul
and
xor
fiadd
cmps
dec
pop
inc
sub
push
jg
pop
add
pop
cli
jmp
push
jg
aas
xlat
fisubr
es
aas
mov
loope
or
aam
mov
imul
mov
je
aas
rcr
outs
or
inc
sbb
pop
sbb
int3
ds
cmp
sub
push
jg
add
les
jg
sub
movs
int
dec
xor
lods
dec
add
adc
dec
push
jg
xor
mov
push
or
cmc
pop
mov
push
xchg
add
push
jg
aas
jae
ins
or
imul
or
cmc
xchg
mov
push
xchg
cmp
aas
jae
ins
or
pusha
lods
aaa
and
outs
or
cmp
data16
lea
xchg
(bad)
push
jg
add
xchg
in
fidivr
fadd
xchg
mov
push
or
or
sbb
push
hlt
xor
int3
ds
push
mov
push
or
or
ret
(bad)
dec
jg
xor
mov
or
sbb
int3
ds
push
hlt
xor
cmp
mov
push
or
or
sbb
push
hlt
xor
int3
ds
mov
ds
es
inc
sbb
sub
jle
jg
loope
(bad)
jmp
dec
jg
push
or
jg
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
pop
ficomp
sub
push
imul
mov
sub
pop
movs
repnz
les
jg
mov
jbe
jle
imul
dec
mov
pop
pop
lock
js
retf
scas
bnd
(bad)
push
cmp
mov
jbe
jle
cld
aam
daa
mov
mov
adc
jl
push
mov
push
rcl
add
inc
jg
(bad)
push
pop
adc
inc
jg
jns
push
call
jmp
jg
add
(bad)
shl
lods
sub
fidiv
rol
fadd
or
mov
hlt
push
or
sub
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fisttp
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
cmc
jbe
fmul
out
mov
