sbb
push
test
push
pop
and
add
sub
mov
add
and
add
js
or
inc
cld
and
inc
pop
inc
aam
pop
and
add
stos
push
add
sub
push
sub
std
sub
adc
push
pop
sbb
push
pop
mov
mov
dec
push
mov
pop
aad
jbe
or
and
add
out
push
add
or
jle
pop
dec
sub
xor
mov
pop
sub
add
pop
xlat
into
jbe
mov
into
and
jne
mov
mov
mov
and
add
and
or
pop
stos
outs
cli
aad
cmp
out
pusha
sub
mov
pop
and
mul
sub
shr
pop
and
pop
jge
ror
mov
into
mov
xor
pusha
sub
std
push
fwait
inc
pop
test
fwait
inc
pop
je
push
out
sub
pop
scas
push
ds
pusha
sub
pop
ror
inc
pop
stos
push
ss
pusha
sub
jl
push
shl
jbe
aad
daa
or
test
add
mov
scas
inc
adc
jno
shl
cmps
push
sub
daa
std
or
cmps
push
sub
aam
mov
ja
imul
aad
mov
and
pop
dec
xchg
imul
xor
ret
push
and
sub
sub
inc
add
and
add
inc
or
mov
pop
add
pop
leave
or
cmps
fstp
push
fstp
adc
pusha
sub
inc
pop
sub
fucom
and
imul
inc
pop
retf
pop
and
add
jbe
add
out
add
test
jb
imul
pop
and
add
pusha
sub
(bad)
pop
out
sub
pop
leave
cld
jmp
sub
pop
ja
out
fld
out
pusha
sub
xor
push
inc
mov
add
into
cmp
jne
addr16
bnd
stos
push
jp
sub
jb
test
pop
dec
sub
dec
add
out
pusha
sub
xchg
imul
pop
fstp
sub
pusha
sub
imul
inc
pop
fstp
and
pusha
sub
pop
retf
pop
and
mov
fidivr
inc
pop
sub
xchg
loope
mov
popf
and
mov
and
jge
and
push
or
pushf
push
push
jg
cmps
adc
mov
dec
sub
dec
sub
and
xor
mov
jne
and
ja
adc
jmp
mov
(bad)
mov
(bad)
cwde
cld
mov
and
(bad)
fcmovnu
cwde
cld
mov
push
sub
or
and
hlt
xor
inc
xchg
cld
pusha
sub
mov
and
add
out
aas
mov
daa
sbb
push
leave
aaa
mov
test
xchg
aad
xlat
in
les
sahf
imul
(bad)
jo
adc
pop
add
ror
into
xor
stos
rol
cmps
stos
in
(bad)
sbb
jnp
sbb
jnp
pop
dec
adc
push
and
xor
inc
add
sub
cdq
daa
and
mov
and
or
leave
push
sub
aam
dec
fstp
xor
aam
dec
fstp
mov
push
add
in
std
sub
ret
jne
and
or
leave
xor
pop
call
xlat
fcmovu
in
fisttp
jmp
add
or
xchg
inc
sub
cmp
mov
and
push
mov
pop
sub
xlat
in
hlt
sub
sbb
mov
aam
inc
fstp
mov
fstp
mov
pop
sub
xlat
in
ja
retf
pop
and
hlt
sub
sbb
mov
sbb
push
leave
sub
mov
ja
out
into
cmp
jne
ja
cdq
mov
fisubr
mov
mov
and
cmps
and
imul
xlat
add
cli
add
xlat
loope
pop
sub
rol
rol
cmps
test
das
add
aas
cmp
repnz
add
mov
pop
add
sar
sbb
pop
adc
xor
inc
stos
push
mov
fcmovb
xor
cli
fsub
xlat
fisttp
mov
inc
ficomp
sub
sub
adc
sub
aam
cmps
test
test
mov
and
addr16
call
add
(bad)
xchg
push
pop
and
jmp
jl
sub
mov
(bad)
mov
push
push
mov
(bad)
cld
mov
stos
mov
std
pop
push
lahf
inc
pop
test
test
mov
and
addr16
or
(bad)
jmp
dec
stos
shr
scas
test
adc
mov
pop
ror
stos
jmp
(bad)
mov
or
(bad)
fisub
sub
mov
and
std
mov
loope
mov
test
and
stos
fcomi
mov
in
hlt
mov
ret
dec
and
mov
sub
push
xlat
jecxz
call
cmps
cmp
jb
pushf
mov
sbb
addr16
push
aam
addr16
pop
cmp
pop
add
ror
into
push
push
jno
push
aad
daa
lds
fisub
and
and
cmc
cmp
mov
(bad)
outs
aam
and
rcr
test
pushaw
dec
jae
ret
test
jecxz
sbb
pop
stos
jmp
push
imul
sub
and
pop
cmp
mov
fisub
push
mov
loope
mov
test
aas
lds
ficomp
bound
bound
add
cs
pusha
sub
sbb
and
pop
sbb
dec
push
sub
sti
jbe
adc
inc
mov
ins
cmp
fisub
push
mov
jns
ror
into
push
or
ja
popf
loop
in
je
cli
pop
fisub
mov
and
ja
dec
jne
sbb
jge
fcmovnu
aam
xlat
xlat
mov
cs
push
ss
inc
pop
je
jo
fst
push
aad
xlat
inc
or
mov
push
je
xchg
loope
mov
jg
mov
xlat
fiadd
cli
xlat
in
ja
retf
pop
and
add
fnsave
pop
jno
std
sub
inc
add
ret
sbb
cmps
and
mov
stos
fistp
jns
ror
into
push
push
jno
push
aad
and
out
outs
add
int3
mov
fisub
mov
push
xor
inc
fnstsw
aad
das
std
sub
mov
mov
test
stos
in
mov
sbb
or
jge
pop
xchg
loope
mov
je
mov
sub
test
mov
das
add
ret
fldcw
and
(bad)
sbb
jnp
dec
ret
imul
pop
stos
call
add
stos
in
xor
loop
inc
mov
jmp
or
mov
dec
sub
fcom
add
loope
ret
and
sahf
stos
outs
out
loop
xor
shr
mov
pop
fstp
pop
pop
and
add
loope
in
adc
and
push
mov
and
sub
sbb
push
leave
and
mov
aad
mov
cmp
add
je
add
(bad)
xchg
xor
sub
mov
je
mov
xlat
cli
sub
xlat
loope
aas
and
sub
sub
imul
sbb
adc
sub
sub
jmp
mov
cli
aam
mov
mov
pop
sbb
mov
mov
mov
mov
sub
ss
add
scas
jecxz
(bad)
push
mov
push
sub
xor
inc
icebp
mov
ret
aam
mov
fst
sbb
mov
sub
mov
sub
pop
stos
repz
fadd
add
outs
test
outs
or
bound
push
aad
aam
inc
stos
outs
(bad)
fstp
add
add
pop
and
xchg
sub
fld
add
pop
push
mov
and
std
pop
and
(bad)
js
pop
and
pop
and
fistp
pop
pop
lahf
inc
pop
push
sub
jnp
lahf
inc
pop
and
mov
fisub
shl
sub
xlat
cli
add
xlat
loope
lds
ret
aad
ror
jmp
(bad)
sub
test
dec
stos
int3
mov
lods
xchg
push
or
mov
xchg
jno
sub
sahf
push
jle
ret
add
loop
inc
pop
test
adc
dec
pop
sub
pop
and
ja
mov
sub
mov
pusha
sub
sbb
xchg
retf
add
xlat
or
pop
lahf
inc
pop
fst
add
outs
push
cmps
idiv
mov
sbb
mov
not
cld
mov
mov
pop
or
mov
mov
std
sbb
mov
cli
push
mov
test
ret
add
repz
mov
(bad)
mov
loope
mov
je
mov
xlat
fisubr
cli
xlat
in
hlt
xlat
shl
kxorb
add
and
das
or
pop
sub
ja
in
(bad)
pop
and
add
shl
lds
cli
arpl
aad
and
push
and
imul
cmp
sub
pop
and
into
sub
jae
add
out
or
aad
xor
inc
repz
mov
sub
cli
ja
mov
add
jae
push
(bad)
pusha
sub
mov
mov
inc
cmps
stos
in
cmp
leave
aaa
or
push
sub
dec
test
sbb
addr16
das
outs
pop
das
cmp
adc
mov
mov
scas
cmp
fisubr
and
fstp
adc
ins
pop
and
jbe
fisubr
cli
xlat
in
add
inc
push
xor
inc
add
and
add
dec
sub
and
mov
fiadd
xor
inc
add
retf
pop
and
adc
stos
jmp
test
aam
push
fstp
mov
inc
add
sub
pop
dec
fnclex
sbb
aam
cmps
retf
pop
and
add
dec
sub
add
popf
ja
out
mov
add
dec
outs
pop
and
or
stos
ror
sub
xlat
loope
xchg
dec
iret
loop
and
test
fcmovnbe
aam
mov
(bad)
push
mov
sar
mov
cmps
dec
pop
and
shl
jne
and
jmp
out
mov
cli
mov
std
mov
fst
std
push
retf
mov
mov
sub
sub
stos
jmp
shl
jnp
ret
add
test
mov
ja
mov
sub
mov
pusha
sub
mov
ss
add
sub
push
cmps
pop
or
mov
rcl
jmp
mov
sub
or
inc
mov
and
jnp
pop
and
mov
fst
std
mov
sar
mov
in
mov
fcmovbe
cld
mov
(bad)
mov
(bad)
mov
pop
and
std
push
xor
data16
xlat
or
and
fstp
sub
pop
mov
aam
push
cmps
mov
ss
inc
pop
scas
scas
jmp
ss
mov
in
mov
nop
aam
mov
and
loope
cmps
xchg
mov
xchg
scas
mov
(bad)
aas
mov
cmps
sbb
mov
nop
aam
mov
(bad)
cld
mov
arpl
jmp
daa
or
mov
jb
inc
pop
and
std
pop
mov
sub
push
cmps
in
add
mov
shl
xlat
mov
sub
mov
std
mov
fst
add
or
pop
dec
in
sbb
cmps
mov
or
pop
hlt
mov
pop
aam
pop
and
cdq
cmps
lahf
std
mov
and
ss
inc
pop
dec
jnp
pop
and
dec
test
aam
call
jbe
dec
sub
ret
rcr
jl
outs
aam
std
fucom
daa
aas
mov
sub
xchg
fst
std
pop
and
add
inc
scas
mov
sub
cs
mov
fst
add
or
pop
dec
xchg
loop
and
std
or
(bad)
mul
pop
aam
pop
and
cdq
cmps
lahf
std
mov
and
ss
mov
stos
fst
sbb
dec
sub
ret
rcr
jl
repz
aam
fucom
daa
aas
mov
sub
xchg
fst
std
pop
and
add
inc
xchg
mov
sub
stos
fdivrp
mov
fst
add
and
fist
sub
pop
call
xlat
cmps
cmp
frstor
cmp
jbe
std
mov
fst
add
and
fist
sub
pop
dec
sub
ret
ss
inc
pop
retf
mov
pop
aam
pop
and
xor
inc
mov
jecxz
aam
mov
fst
sbb
dec
sub
ret
rcr
jl
stos
(bad)
aam
fucom
daa
aas
mov
sub
xchg
fst
std
pop
and
add
lahf
lahf
std
mov
in
jb
pusha
sub
shl
jnp
cwde
fcom
std
pop
leave
cmp
pop
push
lahf
inc
pop
and
mov
(bad)
xchg
xor
in
xchg
retf
xor
pop
and
xchg
fst
std
xlat
loope
xchg
test
aam
aad
aam
add
and
scas
sub
shl
jnp
(bad)
aam
mov
jne
mov
fisub
rcr
xlat
add
xchg
push
pop
and
std
pop
stos
repz
repnz
mov
fst
std
pop
sub
sub
pop
inc
in
xchg
fst
std
dec
and
xchg
fst
std
pop
and
add
cmps
mov
(bad)
fild
mov
std
push
test
stos
jmp
shl
jnp
into
ret
imul
mov
fnstsw
aas
pop
and
add
xlat
or
and
(bad)
fcomi
aam
mov
fst
std
push
test
sub
pop
stos
outs
(bad)
(bad)
dec
imul
ret
sub
pop
and
std
push
test
aam
aad
aam
stos
outs
(bad)
push
loop
sub
scas
scas
jmp
idiv
mov
fnstsw
xlat
mov
mov
scas
rcr
sub
pop
scas
scas
out
(bad)
push
aad
ret
std
mov
fnstsw
xlat
or
and
xor
mov
mov
xchg
sar
mov
arpl
(bad)
fcmovnu
aam
mov
and
sbb
retf
cmp
pop
and
mov
inc
add
stc
push
pop
and
loope
cmps
cmps
std
mov
xchg
(bad)
std
mov
fst
std
push
dec
dec
loop
and
std
push
retf
pop
and
xchg
fst
std
pop
and
std
xlat
cmps
mov
mov
fst
std
push
scas
sahf
xchg
mov
xor
add
mov
mov
lds
icebp
sti
test
aam
aad
aam
jb
outs
(bad)
xlat
cli
add
xlat
loope
jg
and
sub
sub
fld
sub
mov
pusha
sub
mov
ss
add
sub
fs
and
outs
and
add
cmps
cmp
fnstsw
fisttp
mov
mov
fisub
rcr
xlat
add
aam
pop
and
std
pop
retf
retf
and
mov
inc
add
stos
jmp
cmp
scas
jb
(bad)
add
scas
mov
(bad)
mov
pop
aam
mov
(bad)
push
rcl
test
dec
stos
int3
mov
lods
xchg
std
(bad)
cmp
pop
and
cmps
aad
xchg
mov
fnstsw
xlat
mov
mov
scas
ins
pop
and
cmp
and
std
push
dec
pop
jecxz
and
std
push
test
sub
pop
and
or
pop
mov
aam
push
cmps
and
pop
and
std
push
dec
sub
jmp
aam
mov
(bad)
push
aad
aam
jle
outs
(bad)
xlat
cli
sbb
xlat
loope
jg
and
mov
mov
aam
push
cmps
clc
add
test
ss
std
pop
sub
sub
mov
fst
std
mov
fdivr
mov
in
mov
jle
jmp
stos
scas
pop
mov
mov
aam
push
cmps
movs
add
in
xchg
and
add
aam
out
fst
std
shl
jnp
add
imul
mov
dec
sub
fucom
aas
mov
scas
cmps
jmp
(bad)
bound
sub
stos
scas
cli
mov
jle
jmp
(bad)
push
aad
sar
mov
(bad)
cld
mov
and
sbb
fnstsw
push
ret
shl
jnp
js
sub
fucom
cmp
popf
mov
aam
sub
xchg
adc
sub
mov
(bad)
mov
(bad)
push
aad
aam
push
(bad)
mov
mov
cld
mov
(bad)
or
mov
(bad)
push
aad
aam
push
test
aam
aad
aam
push
mov
sub
fcmovne
aam
mov
(bad)
cmp
into
aam
mov
fst
and
and
cwde
cmps
(bad)
std
mov
retf
mov
je
and
and
aad
sti
std
mov
fnstsw
out
or
pop
aad
mov
xchg
aam
mov
not
cld
mov
cmps
(bad)
std
mov
fnstsw
aad
repz
mov
fnstsw
aad
idiv
mov
fnstsw
(bad)
jnp
pop
and
std
push
test
ret
fst
pop
add
ror
into
push
sbb
inc
cwde
dec
bound
jmp
sub
pop
jb
mov
sub
pop
mov
jl
cmp
in
inc
mov
test
sub
xlat
push
iret
lds
fisubr
add
inc
pop
pop
and
jmp
das
mov
test
ret
mov
pop
(bad)
mov
pusha
sub
sub
shr
xlat
std
mov
in
loop
and
add
addr16
rcl
ret
lds
dec
sbb
sub
pop
leave
add
(bad)
std
mov
mov
inc
scas
inc
mov
pop
and
xchg
xchg
loopne
add
popf
ror
mov
lds
mov
sub
dec
cmc
es
and
xor
ret
mov
cdq
jne
xor
popf
ja
out
into
xor
test
push
arpl
fsub
xlat
xlat
mov
pusha
sub
into
bound
add
jecxz
adc
test
inc
mov
push
cmp
arpl
add
pop
and
pop
into
mov
pop
sub
pop
stos
jecxz
xchg
stos
jmp
sub
pop
stos
fild
mov
arpl
or
pop
and
ret
push
add
push
std
pop
and
or
pop
fisttp
xchg
xchg
imul
pop
and
and
add
and
ret
or
mov
(bad)
sub
mov
mov
sub
pop
mov
sub
and
or
pop
aam
inc
(bad)
arpl
add
das
mov
ret
arpl
add
mov
pop
leave
sub
inc
pop
stos
jecxz
xchg
stos
jmp
daa
adc
pop
and
std
pop
push
lahf
inc
pop
aam
sbb
arpl
adc
and
sub
pop
mov
sub
pop
xor
mov
mov
aam
mov
arpl
push
sub
sub
pop
call
xlat
fisttp
es
arpl
push
mov
aam
mov
arpl
or
and
sub
pop
mov
sub
pop
sub
mov
mov
aad
mov
arpl
add
and
sub
pop
stos
jecxz
xchg
stos
jmp
and
pop
mov
push
pop
and
add
aam
sbb
arpl
add
and
sub
pop
mov
sub
pop
and
pop
sbb
sub
mov
aad
mov
pusha
sub
pop
sbb
push
and
adc
inc
pop
(bad)
add
sub
pop
daa
adc
outs
jmp
pop
and
mov
into
mov
pop
mov
adc
pop
and
mov
pop
daa
and
pop
and
mov
pop
daa
adc
pop
and
std
pop
push
lahf
inc
pop
mov
sub
mov
sub
pop
stos
jecxz
xchg
stos
jmp
and
(bad)
pop
and
xor
and
add
(bad)
jp
sub
cld
jb
inc
pop
sub
imul
fstp
and
fisttp
xchg
call
pop
pop
push
xchg
and
add
sbb
es
popf
inc
pop
mov
sub
sbb
pop
sub
mov
ret
arpl
add
mov
pop
leave
push
std
pop
sbb
jno
sub
pop
(bad)
rcl
loop
pop
pop
and
mov
retf
mov
and
pop
inc
mov
scas
ret
pop
and
mov
push
mov
stos
jecxz
xchg
stos
jmp
and
ret
sub
pop
push
mov
mov
fisttp
sahf
and
add
lods
add
stos
jg
bound
mov
and
inc
scas
stos
jmp
and
add
sub
add
mov
inc
(bad)
arpl
add
aaa
stos
jg
and
ficomp
add
fs
push
mov
add
and
das
ja
mov
sub
xlat
jecxz
repnz
push
push
xchg
cs
arpl
cmp
push
and
sub
mov
sub
fld
daa
xchg
push
and
jmp
aad
daa
xchg
push
and
cmp
arpl
std
pop
cs
xchg
push
and
pop
push
mov
add
stos
repz
sub
fld
daa
xchg
push
and
jmp
aad
daa
xchg
push
and
stos
std
pusha
sub
pop
cs
popf
pop
and
pop
push
mov
add
aam
sub
add
std
es
inc
mov
xchg
test
mov
jecxz
pop
xchg
loope
mov
jg
mov
jae
sub
pop
push
lahf
inc
pop
dec
and
add
sub
sbb
jge
pushf
jge
add
jle
inc
pop
stos
shl
mov
in
sub
pusha
sub
je
pop
cmp
aas
in
sub
je
pop
sbb
dec
in
sub
je
pop
sbb
pop
in
sub
je
pop
xor
pop
fisub
ror
into
xor
es
ror
add
and
in
sub
dec
jle
inc
pop
in
jmp
add
xlat
loope
addr16
cmps
inc
imul
fild
and
cmp
push
sub
pop
mov
cs
pusha
sub
mov
add
dec
(bad)
pop
in
ficomp
sub
cdq
test
pop
push
xchg
inc
pop
stos
outs
loop
daa
pop
mov
and
inc
out
and
add
repz
xchg
sub
pop
and
jg
scas
pop
shl
daa
sub
pop
ror
push
and
push
mov
and
rcl
mov
xor
cmps
inc
cli
jb
add
inc
push
xor
aam
mov
and
ja
scas
outs
mov
dec
sub
lods
inc
sub
mov
and
mov
dec
sub
dec
sub
leave
aas
and
xor
pop
out
addr16
pop
(bad)
jbe
pusha
sub
sub
aam
stos
mov
iret
jmp
pop
and
loope
addr16
popf
jge
pop
xchg
loope
mov
xlat
sub
xor
ja
mov
push
xlat
fisttp
mov
neg
stc
mov
into
mov
push
sbb
jnp
sbb
jnp
sub
inc
add
fist
fst
ja
fnstsw
xor
arpl
mov
(bad)
ror
xlat
mov
loop
or
pusha
cmp
cmps
stos
in
std
pop
push
lahf
inc
pop
fstp
xor
aam
dec
mov
call
out
push
jno
push
aad
and
sub
and
pop
sbb
std
pop
and
ja
sub
push
std
pop
and
ja
sub
push
std
pop
and
ja
sub
push
std
pop
and
ja
sub
push
std
pop
and
or
pop
test
sub
aam
adc
inc
mov
frstor
pop
daa
dec
mov
dec
sbb
rcl
add
mov
push
dec
sbb
or
pop
stos
rol
dec
xor
shr
mov
or
pushf
push
inc
mov
xchg
das
add
retf
pop
push
jne
call
sub
xchg
inc
pop
jb
mov
call
cmps
push
dec
lock
inc
pop
jo
jmp
rol
dec
scas
jg
pop
and
xor
mov
adc
data16
pop
fisubr
not
ss
sub
jle
popf
inc
mov
push
cs
pusha
sub
sub
ret
fst
std
pop
push
lahf
inc
pop
mov
jg
cmps
push
ds
es
dec
xlat
fisubr
add
push
imul
push
sub
cli
(bad)
das
or
ss
cmp
loopne
sub
sub
mov
and
ja
stos
repz
xor
call
xlat
es
sub
cmp
sub
cli
(bad)
sub
bts
xor
fisubr
push
pop
pop
ret
add
pop
add
pop
push
add
xchg
frstor
adc
rol
pop
cli
test
pop
stos
outs
cli
aad
cmp
cmps
mov
ror
pop
and
push
xlat
fisub
bound
ja
stos
rol
pop
and
xlat
fisubr
add
push
sbb
push
xchg
das
add
pop
pop
or
fsubr
add
sub
mov
cmp
or
xor
clc
(bad)
das
mov
sub
pop
and
and
add
test
pop
add
ror
into
xor
pusha
sub
outs
ffree
add
sub
ins
and
fiadd
pop
push
cmp
daa
das
mov
sub
addr16
fidiv
mov
pop
mov
and
or
jmp
mov
add
mov
jmp
cs
pusha
sub
mov
sub
sub
sub
mov
and
(bad)
aam
sub
dec
and
inc
mov
and
inc
mov
test
sbb
sbb
outs
cli
xlat
shr
fdiv
mov
rcl
fisttp
sub
pop
aas
das
xchg
push
and
adc
fsubr
fcomp
test
pop
stos
outs
cli
cwde
es
shl
add
ja
mov
cs
pusha
sub
shl
pop
pop
repnz
pop
stos
outs
cli
cwde
and
sub
pop
and
push
xchg
jle
lahf
shr
push
jae
sbb
ret
jbe
fst
sbb
(bad)
xchg
pop
jnp
sub
jo
sub
or
fcom
std
cwde
cmps
enter
sub
inc
js
add
sub
ficom
(bad)
fcmovnb
hlt
std
mov
int
std
pop
mov
sub
mov
sub
aam
ficomp
cs
pusha
sub
sub
stos
mov
pop
push
cmp
mov
inc
xchg
inc
pop
and
mov
and
retf
rol
std
mov
fst
imul
ret
or
sub
mov
mov
mov
imul
jmp
fst
std
push
jnp
pop
and
inc
pop
and
mov
xchg
std
mov
mov
add
cmps
fsubr
mov
cmps
fsubr
mov
mov
imul
mov
rol
std
mov
rol
std
mov
push
ds
bound
add
mov
pop
and
retf
rol
std
mov
ss
(bad)
arpl
mov
div
std
mov
pusha
sub
mov
and
add
stos
scas
fiadd
push
lahf
inc
pop
test
aam
(bad)
jecxz
adc
sar
push
and
std
outs
ffree
and
and
add
ret
or
cwde
mov
sub
mov
and
add
mov
mov
aam
mov
aam
mov
jae
pop
(bad)
jbe
pusha
sub
mov
and
push
(bad)
add
fst
mov
std
aam
mov
sar
mov
xlat
or
mov
mov
std
mov
sbb
xlat
clc
jmp
ja
mov
test
pop
sbb
std
sub
ins
and
test
push
and
xchg
sub
pop
and
std
mov
stos
rcr
add
fldcw
repnz
and
mov
fcom
std
pop
mov
aam
pop
and
mov
scas
cmc
std
mov
and
xchg
movs
jbe
mov
xchg
imul
mov
and
jmp
and
add
mov
ret
mov
add
div
(bad)
(bad)
std
mov
int
std
lahf
shr
xchg
ret
ret
sub
adc
mov
pop
mov
aam
aad
fucomip
mov
stos
bnd
mov
jmp
call
scas
div
(bad)
(bad)
std
mov
push
pushf
std
pop
push
lahf
inc
pop
mov
aam
sub
pop
jecxz
sub
push
jne
add
cmps
mov
mov
ss
and
mov
mov
jmp
xchg
cld
aam
aad
mov
mov
cld
aam
fucom
aaa
add
xchg
sbb
mov
xor
mov
fst
add
xchg
sbb
mov
mov
std
mov
fst
mov
(bad)
hlt
std
mov
call
cmp
std
mov
jl
pop
test
aam
fistp
push
std
mov
fst
add
(bad)
hlt
std
mov
fst
add
loope
add
or
test
aam
mov
jns
retf
call
or
add
aam
repnz
aam
mov
aam
sub
mov
ret
mov
std
aam
jne
(bad)
frstor
adc
xchg
lods
int
std
lahf
shr
dec
aaa
or
stos
int
std
and
add
ret
popf
or
sub
mov
inc
sub
pop
mov
scas
cmp
sub
mov
retf
sub
pop
push
and
and
sub
pop
retf
xor
pop
and
std
aad
add
sub
pop
mov
std
cwde
cmps
mov
mov
(bad)
hlt
std
mov
std
aam
xlat
shl
data16
xlat
shr
add
cmp
repnz
sub
xlat
shr
add
sub
and
or
leave
out
pop
push
lahf
inc
pop
sub
aam
lahf
shr
jmp
xchg
cld
aam
pop
sub
sub
pop
push
cmp
add
test
mov
stos
scas
out
fst
jmp
push
test
aam
cmps
or
mov
cmp
lahf
iret
frstor
(bad)
(bad)
or
mov
test
aam
cwde
and
sub
pop
and
ja
mov
sub
pop
push
xor
add
sub
mov
sub
pop
push
and
pop
and
jbe
gs
xchg
scas
mov
sahf
pop
mov
inc
sub
aam
push
fstp
std
jmp
hlt
std
mov
(bad)
loope
fst
add
pusha
test
stos
int
std
pop
test
aam
mov
retf
sub
mov
test
aam
xlat
es
fcmovnbe
(bad)
std
mov
fst
add
sub
(bad)
jbe
pusha
sub
jo
aam
fisub
sub
mov
mov
imul
movs
fst
pop
add
ror
into
xor
addr16
inc
repnz
sub
and
pop
and
inc
mov
scas
push
jbe
pusha
sub
lods
xchg
add
push
xlat
rcl
scas
mov
pop
and
icebp
cli
scas
push
int3
rcl
mov
add
cli
mov
push
push
mov
and
adc
and
or
adc
(bad)
pop
add
addr16
mov
stos
inc
test
xor
out
xor
pop
aad
cli
xlat
jcxz
sbb
in
inc
test
ret
and
mov
popf
push
test
outs
pop
mov
sub
call
and
add
dec
mov
add
push
add
rol
es
inc
mov
and
and
rol
es
inc
mov
and
inc
pop
loop
push
ffree
sub
cmps
daa
pop
push
fisub
add
push
add
stos
add
pop
push
fisub
push
aad
ror
or
and
pop
pop
fadd
pop
and
test
sub
sub
stos
inc
mov
and
or
fiadd
mov
mov
mul
int3
sub
inc
mov
fiadd
ficomp
add
cmps
stos
jmp
cli
push
xchg
sub
frstor
sub
sub
stos
inc
mov
fnsave
jmp
push
xlat
(bad)
jp
or
sub
mov
test
stos
call
add
dec
sub
cmp
sub
xlat
shr
ds
and
xlat
in
or
push
adc
inc
imul
test
pop
pop
(bad)
mov
fisub
retf
popf
ja
out
or
pop
retf
pop
and
loope
add
pop
and
mov
test
std
aam
xlat
in
ja
je
ja
scas
scas
add
dec
jge
pop
scas
scas
add
sub
out
adc
mov
lds
jl
ror
into
push
loope
pop
jno
mov
sub
dec
sub
sub
inc
add
jge
ror
into
xor
push
stos
lds
imul
xor
inc
sbb
push
pop
dec
sub
pop
mov
pop
push
pop
and
ja
mov
sub
and
jmp
aas
stos
shl
mov
in
add
retf
pop
and
push
xor
ret
adc
sbb
xchg
jmp
and
cmc
mov
in
add
pop
daa
add
sub
repnz
cmps
inc
cmps
stos
outs
repnz
push
xlat
push
mov
jns
pop
je
xor
sbb
rol
in
pop
and
jmp
push
xlat
(bad)
test
push
jno
push
loope
inc
cwde
sbb
in
push
pop
and
xor
inc
add
and
add
out
add
in
and
pop
add
int3
mov
fisub
add
jge
cwde
jae
add
addr16
mov
mov
ror
or
jns
mov
xor
pop
dec
sub
pop
dec
fnclex
sbb
jge
mov
retf
pop
and
inc
stos
test
xchg
add
sub
jns
ror
into
push
push
je
mov
xlat
ficomp
cli
xlat
in
add
mov
das
push
pop
and
ret
and
js
sub
xlat
in
cld
mov
leave
adc
sbb
mov
add
jge
je
sub
xor
cmps
inc
mov
fstp
or
scas
push
pop
and
jl
sub
outs
loop
jmp
cmps
stos
in
pop
add
call
push
or
ja
in
(bad)
rol
sub
xlat
mov
test
popf
push
pusha
and
inc
gs
daa
jle
test
sub
xlat
ja
push
mov
ret
mov
js
pop
dec
adc
sbb
ret
test
call
mov
cmp
push
ret
mov
js
pop
mov
jbe
and
sbb
mov
stos
ds
and
cwde
es
push
and
mov
add
add
sbb
ret
popa
or
sub
jmp
push
xlat
(bad)
jp
or
pop
push
test
xlat
jmp
sbb
mov
inc
cmp
jno
add
adc
jmp
gs
aaa
mov
jno
add
out
inc
addr16
jmp
add
inc
pop
retf
pop
and
sbb
mov
push
mov
loope
mov
je
mov
xlat
cli
add
xlat
loope
lds
shr
fld
add
inc
ret
add
inc
iret
add
pop
(bad)
pop
fwait
sub
pop
and
cmps
xlat
cli
sbb
xlat
loope
jg
and
cmp
outs
loopne
and
inc
pop
stos
outs
std
mov
xchg
mov
and
cmc
mov
loope
mov
frstor
sbb
fiadd
mov
push
std
pop
push
das
xor
add
pop
mov
push
std
pop
push
loopne
sbb
and
push
and
sbb
popf
inc
mov
shr
jmp
test
mov
stos
outs
mov
and
xlat
cli
sub
xlat
loope
inc
push
sub
and
aaa
loop
add
and
or
and
pushf
and
aad
ret
mov
xchg
data16
ret
mov
out
addr16
or
or
and
or
add
push
xchg
jle
push
(bad)
jmp
icebp
(bad)
sub
add
addr16
or
or
and
or
add
pop
addr16
mov
(bad)
je
add
mov
xchg
into
call
or
jbe
pop
mov
xchg
into
push
add
xor
mov
xchg
into
mov
inc
into
mov
xchg
into
bound
inc
into
mov
xchg
into
sbb
xchg
into
mov
ja
mov
xchg
into
call
mov
imul
jmp
mov
xchg
into
push
aaa
xchg
into
mov
xor
mov
push
into
mov
cmp
push
(bad)
xchg
into
mov
arpl
mov
xchg
into
inc
ret
(bad)
sar
mov
jmp
mov
cli
bound
xchg
jae
pop
inc
pop
mov
sbb
mov
xchg
aad
das
xchg
into
mov
push
push
mov
xchg
outs
xor
rcr
xchg
addr16
push
out
into
mov
xchg
fucom
daa
xchg
into
mov
cmp
mov
xchg
into
mov
xchg
into
mov
xchg
cmp
cwde
adc
and
push
and
jbe
pop
sub
sbb
rcl
adc
(bad)
into
mov
xchg
into
call
pop
mov
xchg
into
jge
xchg
into
mov
and
mov
mov
into
stos
repnz
into
mov
sub
adc
xchg
into
mov
push
into
mov
xchg
into
stos
jecxz
into
mov
cmc
test
mov
xchg
into
mov
pop
into
mov
xchg
into
pushf
and
pop
mov
xchg
into
and
xchg
into
mov
loopne
mov
xchg
into
call
cmps
and
xchg
into
mov
mov
into
stos
repnz
into
mov
sub
adc
xchg
into
mov
push
into
mov
xchg
into
stos
jecxz
into
mov
cmc
test
mov
xchg
into
mov
pop
into
mov
xchg
into
pushf
rcl
adc
xor
mov
xchg
into
mov
loopne
mov
xchg
into
inc
mov
gs
cmp
mov
(bad)
test
push
jge
aad
and
sbb
in
inc
mov
test
(bad)
mov
retf
mov
outs
out
xlat
xor
addr16
cmp
mov
(bad)
cmp
outs
repnz
and
out
and
mov
test
mul
add
fst
pop
xlat
loopne
push
movs
mov
sub
jmp
pop
and
jge
and
call
or
fwait
test
addr16
fwait
test
ja
mov
pop
jb
ss
jge
xor
or
adc
add
(bad)
xor
pop
cmp
loopne
and
ja
stos
repz
sub
loope
dec
test
sbb
xlat
ja
push
pop
and
in
and
or
xlat
cli
sub
push
scas
outs
lock
xchg
jle
pop
bnd
pushf
ins
sub
xor
cmps
inc
lods
jb
ficomp
jnp
in
ins
sub
fucom
(bad)
add
add
out
mov
add
(bad)
push
xchg
outs
push
push
sbb
or
mov
loope
mov
je
mov
xlat
rcr
repnz
in
popf
adc
sub
bts
cmc
mov
loope
movs
das
jmp
jnp
rcl
les
pop
and
outs
loop
xor
and
(bad)
sbb
jnp
sub
ret
fwait
cmps
fst
sbb
and
add
push
in
lahf
lds
mov
xchg
arpl
cld
dec
xlat
pop
ret
push
push
xchg
push
in
lahf
lds
std
push
cmp
pop
out
mov
lods
outs
sub
xor
inc
add
cli
sub
call
push
mov
data16
out
sbb
jmp
mov
stos
les
sub
xlat
cli
sub
test
sub
dec
mov
jecxz
sbb
sub
xchg
lahf
imul
xchg
mov
mov
aaa
idiv
frstor
push
push
xchg
inc
pop
and
(bad)
pusha
sub
sbb
pop
fnsave
stos
outs
fidiv
test
aam
pushf
sub
cmp
mov
sub
fsubr
add
addr16
repz
push
xchg
stc
ret
mov
pop
idiv
out
sub
xor
inc
mov
xchg
cs
sub
aas
data16
out
push
(bad)
jmp
mov
stos
(bad)
into
sbb
add
cli
sub
test
sub
dec
mov
jecxz
sbb
sub
xchg
lahf
imul
xchg
mov
mov
stos
repz
shl
add
test
scas
es
jecxz
sub
pop
cli
xchg
inc
pop
sbb
sub
mov
mov
or
cli
loopne
ss
mov
xchg
inc
pop
stos
daa
cmp
std
sub
call
in
pop
mov
inc
pop
test
sub
mov
pop
push
fisttp
sbb
rcr
in
dec
pushf
inc
mov
mov
mov
rcr
aam
fucom
and
dec
sub
dec
sub
dec
sub
pop
(bad)
aam
push
retf
pop
and
(bad)
sbb
jnp
sub
js
sub
ret
mov
and
mov
repnz
jmp
ror
and
ret
jne
xchg
loope
mov
and
push
or
jae
stos
ins
mov
into
(bad)
std
mov
push
lahf
inc
pop
mov
add
ss
and
add
(bad)
std
xlat
in
cmc
adc
outs
dec
adc
stos
jmp
(bad)
xchg
stos
sti
pop
xlat
in
lds
stos
ror
mov
and
les
(bad)
jmp
pop
and
and
xchg
rcl
inc
cmp
jecxz
call
cmps
cmp
jb
pushf
mov
push
std
mov
(bad)
mov
fst
or
jmp
aam
pop
retf
pop
and
ja
in
pop
mov
cmps
sub
(bad)
fcmovnu
aad
mov
pusha
sub
std
imul
mov
imul
repnz
in
add
inc
add
inc
add
and
add
scas
scas
stc
mov
daa
arpl
pop
stos
scas
mul
or
mov
stos
loope
pop
jb
xor
scas
scas
repnz
and
add
sar
stos
(bad)
std
mov
arpl
pop
fstp
jmp
pop
mov
and
cmp
add
cmps
aam
mov
push
ret
dec
pop
and
std
push
dec
neg
sbb
cmps
xchg
dec
sub
pop
mov
sub
pop
push
lahf
inc
pop
dec
call
iret
and
std
mov
and
add
and
and
xor
out
push
add
popf
ja
out
jb
push
or
popa
movs
inc
stos
shl
cmps
stos
in
std
pop
push
lahf
inc
pop
mov
sub
sbb
jnp
sbb
jnp
pop
dec
adc
push
and
xor
inc
add
sub
gs
and
mov
mov
ror
pop
fisub
push
xor
inc
add
faddp
ins
pop
and
std
sub
ret
inc
pop
and
pop
add
ror
into
push
loope
sbb
and
in
std
sub
ret
push
sbb
sub
jb
ja
fstp
mov
sub
xor
sub
popf
ja
out
popf
les
mov
lds
inc
push
shl
push
mov
cs
push
retf
pop
and
ror
into
push
push
jne
loope
scas
jle
cdq
cmc
and
pop
scas
outs
cli
push
scas
outs
dec
dec
sub
and
add
inc
add
aam
push
fstp
mov
arpl
pop
sub
jbe
adc
jmp
mov
ds
add
faddp
mov
and
or
faddp
test
and
xor
mov
pop
(bad)
mov
arpl
pop
adc
inc
add
call
out
dec
je
mov
mov
inc
inc
popf
fadd
inc
stos
lds
sub
out
aas
add
int3
mov
shl
(bad)
sbb
jnp
inc
and
add
aam
push
fstp
mov
arpl
pop
sub
jbe
adc
jmp
push
je
add
aam
dec
fstp
mov
arpl
pop
sub
jbe
fstp
mov
arpl
pop
adc
jmp
pop
and
in
addr16
mov
iret
ins
add
pushf
inc
inc
jge
retf
popf
ja
out
jb
push
loope
and
cmps
stos
in
and
pop
and
jb
in
and
mov
fimul
cmp
ficomp
xlat
fisubr
cli
xlat
in
ret
adc
dec
in
add
inc
add
inc
add
inc
hlt
inc
pop
retf
pop
and
or
leave
aas
mov
fstp
dec
sub
xlat
xlat
pop
add
call
sbb
jmp
jp
cmps
pop
aas
std
imul
or
jge
aad
and
mov
test
add
xlat
ja
mov
sbb
ja
stos
shr
xchg
repnz
cli
jnp
sub
ret
movs
sbb
sub
ja
mov
add
outs
(bad)
loopne
sub
xlat
fisubr
inc
ficomp
adc
fldcw
or
and
fisub
bound
ja
test
sub
test
fisub
inc
mov
mov
jmp
stos
outs
mov
sub
jbe
stos
fild
xchg
ja
retf
pop
and
xor
sub
mov
sbb
mov
stos
inc
mov
jge
pop
xchg
loope
mov
je
mov
sub
mov
jno
xchg
sbb
sub
pop
test
push
jne
inc
mov
push
neg
int3
pop
push
pop
and
hlt
mov
and
pop
adc
jbe
sub
(bad)
sbb
shl
inc
in
inc
mov
sub
popf
ds
sar
(bad)
aad
mov
stos
sar
in
mov
mov
mov
sbb
std
imul
pop
and
inc
mov
sbb
sub
mov
pop
xchg
loope
mov
and
mov
or
js
xchg
jae
pop
mov
aam
fld
sub
cwde
scas
scas
cli
mov
push
daa
jmp
and
pop
adc
jmp
sub
add
lahf
sar
mov
jno
in
and
xor
and
ja
retf
pop
and
std
out
sub
pop
aad
cli
mov
not
jmp
(bad)
imul
adc
std
rcr
sub
(bad)
xchg
sbb
sub
mov
and
in
cmps
sti
std
mov
push
and
and
add
stos
fild
scas
stos
in
mov
sub
std
xlat
jecxz
retf
stos
ds
and
xlat
in
or
mov
std
mov
retf
mov
dec
jle
sbb
aam
push
retf
pop
and
fstp
aam
mov
scas
outs
add
out
or
fwait
and
pop
and
pop
and
inc
repnz
(bad)
cld
mov
and
inc
pop
and
fwait
test
pop
or
push
inc
sub
pop
mov
xchg
(bad)
mov
sbb
inc
pop
jne
xor
and
sbb
stos
scas
retf
aam
cwde
retf
pop
and
fwait
test
pop
cmp
ret
mov
ffree
and
and
sbb
(bad)
cld
mov
and
inc
pop
and
fwait
test
pop
cmp
ret
mov
ffree
jmp
call
xchg
in
cdq
sbb
sub
(bad)
aad
and
dec
add
mov
cmps
jo
mov
or
fstp
jl
fsub
add
out
std
sub
inc
adc
(bad)
cld
mov
pusha
sub
dec
outs
add
out
push
mov
outs
add
and
pop
and
pop
and
inc
repnz
(bad)
cld
mov
and
fstp
aam
mov
ja
add
out
or
rol
repnz
in
or
and
mov
(bad)
aad
and
sahf
(bad)
mov
sub
fucom
and
std
imul
mov
and
sbb
and
add
aad
and
dec
add
mov
cmps
jo
mov
or
fstp
jl
loopne
sub
fucom
cmp
pop
retf
pop
and
fwait
test
cld
imul
mov
popa
sub
shl
jnp
sub
mov
std
push
dec
sti
fcomp
jnp
and
sub
fucom
or
add
sub
out
sub
pop
mov
cs
retf
pop
and
fwait
test
(bad)
cld
mov
pusha
sub
addr16
adc
fwait
and
pop
and
pop
and
inc
repnz
(bad)
cld
mov
and
push
add
sub
movs
pusha
sub
out
sub
pop
mov
cs
dec
loopne
sbb
aam
mov
cmp
pop
mov
imul
pop
and
pop
and
inc
repnz
(bad)
cld
mov
and
fcomp
aam
dec
test
aam
ss
ret
mov
and
sbb
and
add
aad
and
sahf
(bad)
mov
pusha
sub
fucom
and
test
fst
std
xlat
in
pop
sbb
sub
(bad)
aad
and
sahf
(bad)
mov
pusha
sub
fucom
and
fs
sub
out
sub
pop
mov
cs
retf
pop
and
fwait
test
(bad)
cld
mov
pusha
sub
pop
imul
fstp
add
pop
add
test
loop
(bad)
std
pop
retf
ins
add
in
xchg
aam
pop
mov
sub
mov
cmps
xchg
std
mov
fst
std
cmps
sar
mov
lahf
xchg
std
mov
fst
std
push
xchg
pop
cmp
ficom
fwait
test
jo
cli
out
sub
pop
cwde
fs
call
mov
xchg
aam
mov
inc
jl
jecxz
sub
mov
pusha
sub
mov
and
sbb
cmps
xchg
std
mov
fst
std
fisub
sub
push
mov
aam
stos
fst
std
mov
and
std
mov
fst
std
push
dec
dec
fcomp
jnp
adc
add
out
jmp
sub
pop
mov
cs
dec
jbe
sbb
aam
mov
outs
push
pop
mov
add
xlat
in
add
and
mov
(bad)
aad
and
sahf
(bad)
mov
arpl
add
out
jmp
sub
pop
mov
cs
dec
fnclex
sbb
aam
mov
fild
pop
mov
xchg
std
mov
and
xchg
cmps
sar
mov
fst
std
push
mov
mov
std
xlat
shr
repnz
in
mov
sub
cmps
fst
std
mov
sub
pop
mov
aam
push
cmps
pusha
add
mov
(bad)
aad
aaa
pop
pop
jmp
mov
and
add
cmps
sar
mov
fst
std
mov
cld
imul
mov
bound
add
out
(bad)
rcl
aam
mov
mov
ror
loopne
(bad)
std
(bad)
and
xchg
aam
push
sub
(bad)
std
shl
aam
mov
adc
pop
scas
scas
mul
mov
std
mov
cmps
(bad)
mov
fst
std
mov
rcl
jmp
(bad)
push
ss
cmc
inc
pop
jb
fldenv
sub
push
and
cmc
mov
(bad)
mov
call
clc
sbb
sub
pop
mov
cs
dec
jbe
sbb
aam
mov
out
add
out
or
fwait
and
pop
and
pop
and
inc
leave
and
jmp
aam
mov
and
cmp
pop
and
fwait
test
pop
cmp
ret
mov
ffree
jns
and
sbb
retf
adc
pop
mov
sub
fcmovnbe
aam
mov
fst
push
mov
fnstsw
pop
aad
std
fucom
daa
mov
fcmovbe
cld
mov
cmps
aad
mov
and
mov
fst
std
mov
adc
pop
mov
adc
add
mov
cmps
mov
inc
pop
and
jmp
aam
mov
and
cmp
and
fwait
test
pop
cmp
cld
imul
mov
and
sbb
mov
and
pop
and
pop
and
inc
repnz
(bad)
cld
mov
and
fcomp
aam
mov
xchg
or
fwait
and
pop
and
pop
and
ret
dec
pusha
and
mov
(bad)
aad
push
aad
xlat
std
mov
std
imul
pop
and
cmp
and
fwait
test
pop
cmp
cld
imul
mov
and
sbb
and
add
mov
cmps
mov
inc
leave
and
jmp
aam
mov
and
aas
pop
and
fwait
test
pop
cmp
ret
mov
ffree
stc
arpl
sub
arpl
sub
(bad)
aad
and
dec
add
mov
cmps
jo
mov
or
fstp
jl
cld
pop
sub
fucom
cmp
cld
imul
mov
and
sbb
fst
std
xlat
in
popa
arpl
sub
(bad)
aad
and
sahf
(bad)
mov
pop
sub
fucom
and
cld
imul
mov
and
sbb
and
add
aad
and
sahf
(bad)
mov
pop
sub
fucom
and
cld
imul
mov
and
sbb
iret
pop
add
and
pop
and
pop
and
inc
repnz
(bad)
cld
mov
and
fsub
cmps
xlat
std
mov
cld
imul
pop
and
ds
and
fwait
test
pop
cmp
ret
mov
ffree
leave
bound
sub
ja
mov
inc
pop
fstp
jmp
and
xor
sub
out
sub
pop
mov
cs
dec
fnclex
sbb
aam
mov
scas
pop
add
out
or
fwait
ret
add
mov
cmps
stos
cld
sbb
mov
std
or
fistp
jl
pusha
push
sub
fucom
cmp
inc
push
sub
out
sub
pop
mov
cs
dec
fnclex
sbb
aam
mov
pop
pop
add
out
or
cld
test
sahf
(bad)
mov
push
sub
fucom
and
cwde
retf
pop
and
fwait
test
pop
cmp
ret
mov
ffree
std
and
sbb
and
add
aad
and
dec
add
mov
cmps
jo
mov
or
fstp
jl
clc
sbb
add
out
push
jmp
mov
ffree
mov
and
sbb
and
and
add
fstp
mov
adc
pop
stos
scas
jmp
sub
pop
fstp
jmp
cmps
mov
or
mov
fst
std
mov
ffree
lea
sub
jmp
aam
mov
and
mov
fst
std
mov
sbb
pop
stos
fcomi
mov
(bad)
mov
and
mov
into
aam
mov
loope
mov
and
push
loope
add
xor
(bad)
jmp
daa
and
or
ss
scas
std
mov
call
add
sub
jmp
shl
jnp
pop
and
xor
out
push
fisub
add
addr16
pop
push
xchg
push
sbb
inc
dec
and
pop
and
xor
std
ficomp
inc
fadd
(bad)
imul
fmulp
pop
repnz
stos
shl
cmps
stos
in
pop
xchg
loope
mov
and
push
or
or
mov
test
(bad)
std
xlat
in
cmps
ret
std
pop
test
sub
pop
stos
scas
xchg
mov
sub
add
scas
mov
or
mov
sub
push
mov
sbb
pop
test
sub
sbb
mov
push
mov
sbb
pop
stos
scas
jp
fst
std
jmp
(bad)
std
mov
and
jp
fst
(bad)
(bad)
inc
xlat
mov
jmp
fisub
xor
sub
aam
mov
ffree
adc
fist
std
mov
fst
jmp
and
mov
test
aam
or
sub
xlat
mov
jmp
pusha
sub
mov
sub
xlat
cmps
mov
adc
cmps
xchg
(bad)
std
push
retf
pop
and
lds
jb
imul
sub
shl
jnp
icebp
(bad)
imul
pop
dec
sub
pop
mov
aam
call
jmp
ret
and
jmp
sub
pop
scas
scas
(bad)
mov
cmps
lahf
jmp
push
sub
mov
fst
mov
(bad)
std
mov
fst
mov
(bad)
std
mov
fst
mov
(bad)
std
or
aam
mov
fscale
mov
cmps
mov
mov
das
jge
xor
sub
outs
loop
add
push
(bad)
imul
mov
sbb
add
ficomp
cli
xlat
in
xchg
(bad)
std
push
scas
scas
(bad)
mov
lahf
adc
pop
retf
mov
(bad)
std
(bad)
sub
and
xor
cmps
xchg
(bad)
std
push
retf
pop
and
mov
pop
and
mov
test
(bad)
std
xlat
in
xchg
and
add
in
jmp
xchg
xchg
ds
(bad)
aad
mov
push
inc
add
scas
mov
mov
(bad)
std
mov
(bad)
std
push
scas
scas
mov
xor
inc
add
inc
add
inc
add
cmps
xlat
cld
mov
retf
pop
and
ret
lds
pop
and
mov
(bad)
std
mov
sbb
pop
mov
sub
jmp
(bad)
std
mov
and
and
fcmovnu
aad
mov
and
sbb
leave
add
mov
fst
push
ss
test
and
sbb
retf
pop
retf
pop
and
std
pop
test
imul
push
inc
push
pop
sub
mov
pop
add
xchg
xchg
mov
sub
scas
and
jmp
jbe
pop
aad
mov
inc
(bad)
std
mov
and
add
cmps
xlat
cld
mov
out
add
sub
(bad)
imul
mov
lahf
aam
fucom
daa
aas
mov
pop
test
ret
std
pop
stos
rol
cmps
stos
in
jmp
mov
int
sub
and
add
mov
xchg
(bad)
std
mov
and
xor
ret
test
sub
fstp
jmp
(bad)
jmp
and
mov
mov
sub
mov
loopne
add
stos
into
xor
add
cmc
mov
in
cli
xlat
in
ja
retf
pop
and
cld
mov
adc
add
loopne
mov
(bad)
ja
retf
pop
and
hlt
or
and
neg
int
xor
and
sbb
and
or
sub
push
xchg
jle
pop
repnz
or
cmps
inc
dec
or
pop
retf
pop
and
jg
and
sahf
stos
outs
out
(bad)
and
cli
outs
fisub
inc
inc
jb
repnz
jb
shr
sub
push
stos
fild
or
sub
mov
addr16
sbb
inc
push
retf
pop
and
ja
sub
outs
add
sub
outs
adc
and
cmps
and
mov
fsub
mov
fisubr
rcl
jle
shl
add
retf
pop
and
add
dec
scas
push
push
and
xor
ret
adc
sub
cmps
stos
in
push
ins
and
(bad)
sbb
jnp
mov
sbb
pop
je
jno
and
mov
fidiv
jmp
push
xlat
(bad)
xchg
dec
inc
and
jmp
jl
add
xchg
out
push
jp
mov
in
mov
inc
and
sub
scas
mov
shl
jnp
cmp
imul
pop
stos
in
or
and
mov
jno
mov
ret
mov
pop
add
out
or
pop
and
fst
ja
retf
pop
and
cmc
mov
fst
mov
jl
xchg
ret
push
cmp
xchg
loop
fnstsw
fnclex
retf
std
mov
or
pop
cmp
aad
je
and
jmp
retf
std
mov
and
ja
fstp
std
sub
ret
icebp
jno
sub
fistp
in
xor
xchg
ret
jo
popf
ja
out
or
pop
retf
pop
and
or
or
dec
pop
and
in
cmps
(bad)
mov
shl
add
ret
imul
jecxz
push
mov
ror
test
rcl
sub
out
or
ja
inc
pop
jno
push
push
sub
and
cmc
mov
fst
mov
shl
std
mov
adc
mov
and
std
push
retf
pop
and
xor
xchg
or
sub
pop
pop
aas
push
ret
shl
jnp
pop
push
sub
fucom
and
pop
retf
pop
and
fwait
test
pop
add
clc
adc
add
inc
sub
pop
mov
xchg
add
jp
inc
pop
scas
xchg
add
mov
out
adc
fwait
and
pop
and
pop
and
inc
repnz
and
std
mov
and
sbb
and
std
mov
and
sbb
std
aam
xlat
in
xor
push
and
add
aad
and
scas
add
ja
add
out
or
fwait
and
pop
and
pop
and
ret
std
ins
and
mov
(bad)
aad
push
rcr
jl
push
(bad)
imul
mov
adc
add
out
std
sub
inc
adc
and
std
mov
pusha
sub
mov
and
sbb
and
add
aad
and
scas
add
repz
pop
mov
hlt
inc
pop
scas
scas
add
lahf
sbb
pop
mov
sub
and
jno
and
mov
(bad)
aad
and
scas
add
mov
add
out
or
and
inc
pop
scas
scas
add
pop
sbb
pop
mov
sbb
pop
fwait
and
pop
and
pop
and
ret
and
cmp
aad
push
rcr
jl
push
(bad)
imul
mov
adc
add
out
push
cld
imul
mov
adc
add
out
jmp
sub
pop
mov
cs
dec
fnclex
sbb
cmps
xchg
aam
push
retf
pop
and
sub
(bad)
imul
mov
adc
add
out
jmp
sub
pop
mov
cs
dec
fnclex
sbb
cmps
xchg
aam
push
retf
pop
and
fcomp
cmps
xchg
aam
push
retf
pop
and
xor
xchg
or
sub
pop
pop
aas
push
ret
shl
jnp
rcl
sub
fucom
and
pop
fstp
shl
jnp
jo
imul
mov
adc
add
out
jmp
sub
pop
mov
cs
dec
fnclex
sbb
cmps
xchg
aam
push
retf
pop
and
fcomp
cmps
xchg
aam
push
retf
pop
and
sbb
fsub
xlat
cmps
ret
frstor
call
add
and
pop
and
pop
and
inc
repnz
and
std
mov
and
sbb
and
add
aad
mov
and
push
rcr
jl
dec
(bad)
imul
mov
adc
add
out
jmp
sub
pop
mov
cs
dec
fnclex
sbb
cmps
xchg
aam
push
retf
pop
and
fistp
cmps
xchg
aam
push
retf
pop
and
cmp
sub
sbb
sub
out
sub
pop
mov
cs
dec
fnclex
sbb
cmps
xchg
aam
push
retf
pop
and
xor
xchg
or
sub
pop
pop
add
push
adc
add
inc
sub
pop
mov
xchg
add
jp
inc
pop
scas
xchg
add
daa
sbb
pop
mov
test
scas
add
aaa
sbb
pop
mov
inc
add
inc
add
inc
add
imul
pop
add
scas
inc
gs
add
scas
add
aaa
push
add
sub
mov
and
std
mov
std
aam
mov
pop
add
sahf
inc
or
add
imul
stos
fcomi
mov
fst
mov
loope
mov
and
push
or
dec
or
ror
mov
aam
cmc
ret
add
jg
push
mov
pop
add
jle
shl
add
mov
jmp
and
cmc
mov
fst
mov
and
fs
(bad)
mov
and
xor
(bad)
std
mov
scas
scas
cmps
mov
out
add
add
cmps
xchg
(bad)
std
push
dec
test
sbb
inc
mov
pusha
sub
and
xor
out
es
loop
xchg
and
add
sub
pop
scas
scas
(bad)
mov
cmps
lahf
jmp
or
add
push
jns
pop
aad
mov
mov
in
std
jmp
(bad)
std
mov
(bad)
std
push
retf
mov
sub
or
pop
dec
mov
sbb
cmps
xchg
retf
pop
and
std
push
scas
scas
(bad)
mov
mov
cwde
out
frstor
std
xlat
fiadd
cli
xlat
in
inc
xor
cmps
xchg
(bad)
std
push
retf
pop
and
sub
call
pop
in
out
fst
add
sub
mov
in
jmp
rol
cmps
stos
in
(bad)
fistp
ret
sar
cmps
(bad)
jmp
call
xor
inc
and
inc
add
cmps
xchg
dec
sub
pop
or
add
and
iret
and
add
ffree
shl
mov
test
(bad)
std
xlat
in
mov
(bad)
std
ss
inc
pop
dec
push
ficomp
cmps
xchg
retf
pop
and
jge
fst
add
pop
sub
shl
jnp
sub
imul
pop
stos
in
or
and
add
mov
aam
aam
push
stc
mov
jmp
pop
and
scas
and
jmp
sub
pop
scas
scas
xchg
mov
retf
pop
and
lds
inc
push
(bad)
ret
fs
fst
sbb
out
sub
pop
scas
scas
mov
retf
mov
sub
or
pop
dec
sub
jmp
(bad)
std
mov
fst
push
mov
add
pop
scas
scas
sahf
mov
xchg
mov
sti
mov
aam
cwde
mov
sub
jmp
(bad)
std
mov
and
and
dec
or
add
dec
and
sbb
jge
lods
push
sub
fucom
aas
or
(bad)
imul
pop
test
aam
mov
js
popf
and
push
mov
ffree
repz
aam
call
jmp
jb
std
jmp
(bad)
std
mov
(bad)
cmc
mov
fst
mov
and
(bad)
(bad)
std
mov
scas
scas
mov
fst
push
mov
add
pop
dec
sub
jmp
(bad)
std
mov
and
lds
ffree
adc
sub
mov
loopne
add
stos
into
xor
add
fisub
cmc
mov
in
jmp
(bad)
sub
ret
inc
ja
sub
pop
xor
push
retf
pop
and
sbb
fnstcw
add
stos
in
push
mov
add
pop
fstp
shl
add
sub
or
sub
shl
push
xor
jge
and
xor
inc
add
stos
in
mov
dec
aam
mov
add
pop
scas
outs
dec
je
cmp
mov
or
pop
test
mov
lds
jl
retf
popf
ja
out
cmp
pop
retf
pop
and
loope
das
sub
mov
in
cmps
xlat
in
mov
daa
aam
push
retf
pop
and
cli
xlat
in
hlt
sub
sbb
mov
inc
std
push
and
(bad)
(bad)
(bad)
mov
or
add
aam
push
scas
scas
add
push
std
mov
fst
add
das
mov
push
jne
pop
dec
sub
add
pop
stos
in
jmp
popf
ja
out
into
daa
push
loope
add
fmul
and
fs
addr16
pop
leave
inc
mov
sub
inc
add
pusha
sub
call
fist
and
pop
and
std
imul
sub
and
sbb
test
pop
jb
std
test
(bad)
sbb
jnp
aam
sub
fucom
xor
pop
dec
push
aaa
jb
push
mov
add
pop
mov
sub
aad
jmp
das
push
lea
jmp
push
or
mov
lds
inc
add
inc
add
inc
add
inc
add
inc
xchg
pop
and
push
pop
dec
cmp
jo
sub
xlat
in
add
dec
sbb
imul
sub
stos
cmc
int3
dec
sub
xor
jge
outs
fstp
jmp
sub
xor
jge
outs
fstp
cmp
sub
cmp
sub
xor
jge
outs
fstp
shl
or
sub
xor
jge
outs
fstp
push
retf
bound
jmp
sbb
xlat
in
add
dec
sbb
imul
inc
pop
retf
pop
and
or
std
imul
inc
pop
retf
pop
and
or
std
imul
sub
inc
add
dec
sbb
imul
pop
retf
pop
and
lds
jge
outs
fstp
xor
arpl
jmp
jge
outs
fstp
bnd
arpl
jmp
jge
outs
fstp
xchg
std
pusha
sub
xchg
add
jge
outs
fstp
call
sub
xlat
fisubr
cli
xlat
in
pop
popf
ja
out
jne
in
lea
mov
fisub
aaa
mov
push
mov
or
pop
or
(bad)
bound
push
ret
arpl
jmp
aam
fiadd
or
pop
adc
(bad)
bound
push
jmp
jmp
sbb
xlat
in
(bad)
mov
and
in
js
sub
ss
lods
inc
pop
dec
xlat
std
imul
inc
pop
retf
pop
and
mov
and
leave
js
sub
ss
lods
inc
pop
dec
xlat
std
imul
inc
pop
retf
pop
and
mov
and
movs
js
sub
ss
lods
inc
pop
dec
xlat
std
imul
inc
pop
retf
pop
and
mov
and
cmp
imul
cld
lods
inc
pop
dec
xlat
std
imul
inc
pop
retf
pop
and
lds
aam
fiadd
or
popf
pop
and
fsub
push
jmp
jmp
call
out
dec
je
mov
(bad)
rcl
pusha
sub
sub
ret
nop
mov
dec
(bad)
fstp
jge
fcmovnu
aam
fucom
cmp
(bad)
outs
add
and
push
retf
pop
and
jmp
add
xlat
in
add
and
or
fist
shr
sbb
jnp
pop
dec
sub
and
inc
pop
dec
retf
and
pop
and
jmp
mov
dec
sub
imul
inc
pop
dec
sub
push
mov
repnz
dec
push
xor
inc
push
and
or
out
fstp
inc
fadd
retf
pop
and
push
shl
pop
fstp
inc
(bad)
arpl
push
and
add
shr
sbb
test
cmp
push
xor
inc
or
jnp
cmp
add
clc
lock
pop
dec
sub
in
sub
std
inc
mov
dec
sub
dec
sub
dec
cs
pop
dec
sub
and
add
inc
add
inc
push
mov
push
add
in
sbb
sub
aam
pop
mov
push
add
sub
imul
inc
pop
dec
sub
imul
pop
dec
cmp
and
add
inc
sub
and
add
dec
inc
fstp
inc
fadd
retf
pop
and
push
shl
pop
fstp
inc
(bad)
arpl
push
pop
and
xor
inc
add
jnp
inc
stc
imul
pop
dec
sub
dec
pop
sub
std
or
imul
inc
pop
dec
sub
imul
pop
dec
cmp
and
add
sub
pop
dec
add
and
push
ss
icebp
inc
pop
dec
icebp
fstp
inc
add
and
in
outs
or
add
aam
push
push
xor
aam
sbb
inc
jp
and
push
and
add
inc
add
jnp
sar
imul
pop
dec
sub
les
sub
std
ss
pop
dec
sub
imul
inc
pop
dec
sub
imul
pop
dec
dec
push
pop
and
and
or
neg
sbb
inc
xchg
dec
es
and
push
clc
imul
pop
and
push
mov
lar
pop
fcomp
inc
add
popa
sub
pop
fstp
jmp
sub
xor
aam
push
push
xor
aam
sub
push
sub
pop
dec
sbb
and
add
inc
add
jnp
cmp
add
cmps
icebp
inc
pop
dec
sub
pop
push
sub
std
mov
rol
cmps
stos
in
push
shl
pop
fstp
(bad)
(bad)
pusha
sub
and
add
inc
test
and
push
and
add
and
or
neg
sbb
inc
xchg
jmp
pop
and
jmp
aam
push
push
xor
aam
sbb
inc
cmp
les
add
inc
add
inc
add
jnp
xor
clc
lock
pop
dec
sub
fadd
sub
std
mov
inc
pop
mov
sub
fstp
shl
pop
fstp
inc
(bad)
arpl
push
pop
and
pop
and
push
and
add
and
add
dec
js
sbb
inc
fadd
retf
pop
and
push
shl
pop
fstp
inc
(bad)
arpl
push
inc
and
add
loope
add
sub
pop
jb
inc
test
push
stc
imul
jge
sub
xor
aam
push
push
xor
aam
sbb
inc
call
sub
and
add
inc
add
jnp
dec
clc
imul
pop
dec
sub
nop
add
add
shl
add
fstp
shl
pop
fstp
inc
(bad)
arpl
push
adc
sub
sub
pop
dec
sub
pop
jb
add
pusha
sub
stc
imul
jl
sub
xor
aam
push
push
xor
aam
sub
cmp
pop
and
push
and
add
inc
add
jnp
cmp
add
and
inc
pop
dec
sub
pop
and
push
jl
sub
xor
aam
push
push
xor
aam
sub
cmp
pop
and
push
and
add
inc
add
jnp
into
sub
and
inc
pop
dec
sub
pop
and
adc
inc
mov
add
fiadd
cli
xlat
in
add
and
mov
and
xor
inc
ficomp
sub
dec
sub
fidiv
fiadd
clc
imul
pop
retf
pop
and
push
shl
pop
fstp
(bad)
(bad)
pusha
sub
dec
dec
push
and
add
inc
add
jnp
cmp
add
and
inc
pop
dec
sub
pop
and
popf
jg
sub
xor
aam
push
push
xor
aam
sbb
inc
cdq
pop
and
push
and
add
inc
add
jnp
mov
fdiv
inc
pop
dec
sub
cmp
sub
std
mov
inc
cli
mov
and
cmc
mov
in
je
fst
pop
add
call
out
dec
je
mov
(bad)
pop
sbb
inc
test
fst
mov
and
dec
aad
std
fucom
cmp
xlat
fiadd
cli
xlat
in
add
and
icebp
jle
sub
mov
xor
pop
mov
sub
fstp
shl
pop
je
inc
mov
test
fist
and
and
or
neg
sbb
inc
jecxz
pusha
sub
and
add
sub
mov
and
push
dec
pop
mov
fiadd
inc
scas
mov
aas
push
fidiv
retf
xchg
push
stc
imul
jle
sub
(bad)
push
pop
and
mov
and
mov
and
pop
and
mov
fiadd
inc
scas
mov
jp
dec
dec
and
fidiv
fiadd
stc
imul
jle
sub
xor
inc
add
inc
add
inc
add
inc
add
inc
mov
pop
dec
sub
dec
aas
jmp
inc
add
dec
sbb
imul
inc
pop
retf
pop
and
mov
and
mov
and
xor
inc
push
xor
inc
add
jnp
cmp
add
cmps
icebp
inc
pop
dec
sub
mov
mov
pop
stos
shl
cmps
stos
in
push
clc
imul
pop
and
std
imul
inc
pop
retf
pop
and
test
push
pop
and
aaa
mov
push
mov
xor
pop
mov
sub
sub
add
inc
dec
pop
and
std
imul
inc
pop
retf
pop
and
push
xor
inc
add
ins
sub
pop
fstp
jmp
sub
xor
aam
push
push
xor
aam
sub
push
sub
pop
dec
sbb
dec
push
push
and
inc
pop
dec
scas
fcomp
inc
add
sub
add
aam
push
push
xor
aam
sub
push
sub
pop
dec
pop
push
pop
and
pop
mov
imul
pop
dec
sub
movs
cmp
add
push
mov
pop
retf
mov
pop
pop
popf
pop
and
mov
and
mov
inc
push
and
add
and
add
dec
js
sbb
inc
fadd
retf
pop
and
mov
dec
sub
imul
inc
pop
dec
sub
imul
pop
dec
cmp
dec
lods
add
inc
rcr
push
and
push
ss
icebp
inc
pop
dec
icebp
fstp
inc
add
sbb
add
and
mov
and
fild
add
mov
pop
and
and
add
dec
cmp
sbb
inc
fadd
retf
pop
and
push
shl
pop
fstp
inc
(bad)
arpl
push
out
sub
sub
pop
dec
sub
pop
jb
add
pusha
sub
stc
imul
inc
and
mov
xor
aam
push
push
xor
aam
sbb
inc
out
and
push
and
add
inc
add
jnp
and
imul
pop
dec
sub
mov
sub
std
pop
mov
dec
sub
imul
inc
pop
dec
sub
imul
pop
dec
cmp
and
add
(bad)
add
xor
push
ss
inc
pop
dec
icebp
fstp
inc
add
or
popf
pop
and
mov
and
mov
push
push
fidiv
xchg
cld
pusha
sub
clc
imul
pop
retf
pop
and
sbb
sub
imul
inc
pop
dec
sub
imul
pop
dec
xor
dec
ins
push
fidiv
fiadd
clc
imul
pop
retf
pop
and
push
shl
pop
fstp
(bad)
(bad)
pusha
sub
dec
dec
push
pop
and
inc
pop
dec
sub
sbb
inc
add
jmp
mov
pop
dec
sub
imul
inc
pop
dec
sub
imul
pop
dec
cmp
lds
sub
bound
add
xor
push
ss
pop
dec
rcr
sbb
inc
add
xor
mov
retf
mov
loope
mov
je
mov
(bad)
sbb
pop
and
mov
sub
dec
sub
and
and
sub
xlat
in
cld
mov
and
push
inc
and
mov
stos
in
push
mov
xor
pop
mov
outs
neg
sub
shl
push
shl
push
shl
push
mov
xchg
imul
fmulp
dec
mov
inc
sbb
sub
push
xlat
push
sti
imul
pop
fstp
mov
(bad)
aam
fucom
xor
sub
inc
push
xor
cmps
inc
cmps
jb
ja
dec
push
mov
and
pop
and
std
fucom
xor
test
stos
in
pop
add
ror
into
xor
jge
push
cmp
sbb
and
out
pusha
sub
mov
and
mov
retf
pop
and
fwait
test
jg
and
sub
dec
xchg
mov
and
std
push
retf
pop
and
adc
cli
fwait
inc
pop
scas
scas
add
das
xor
pop
mov
cmp
xchg
imul
mov
xor
pusha
push
pop
and
adc
ss
fst
push
mov
cmp
pop
mov
cmp
xchg
imul
mov
xor
aam
sub
inc
dec
out
pusha
sub
mov
and
and
sub
dec
dec
dec
mov
and
std
push
retf
pop
and
xchg
in
jg
sub
mov
scas
add
push
cmp
pop
mov
cmp
xchg
imul
mov
xor
aam
sub
inc
fucomp
pusha
sub
mov
and
and
and
dec
sub
pop
fst
std
push
retf
pop
and
(bad)
ficomp
push
sub
inc
and
pusha
sub
mov
and
and
es
dec
adc
pop
fst
std
push
retf
pop
and
adc
ja
inc
pop
scas
scas
add
ret
cmp
push
sbb
inc
dec
xchg
(bad)
(bad)
aam
mov
arpl
jmp
repnz
pop
dec
xchg
mov
and
shl
cmp
aam
ss
or
iret
sbb
test
jbe
fcomi
mov
fst
mov
fnsave
xchg
loopne
add
stos
into
push
or
ja
popf
mov
push
cli
ja
mov
jmp
sub
add
sub
ret
inc
add
retf
pop
and
jg
push
pop
ja
out
into
pop
or
js
or
repnz
shl
add
int
fcmovnb
fdivr
mov
nop
imul
mov
xor
add
fwait
and
pop
and
icebp
cmps
fst
and
sar
mov
mov
out
test
retf
add
xchg
icebp
cmps
fst
add
xor
in
pusha
sub
mov
and
mov
mov
aam
sub
inc
in
pusha
sub
mov
and
and
sar
mov
and
out
test
mov
add
xchg
icebp
cmps
fst
pop
sub
inc
sbb
pusha
sub
mov
and
xor
xchg
icebp
cmps
fst
add
xor
in
pusha
sub
mov
and
and
sar
mov
ins
cwde
inc
pop
scas
scas
out
test
arpl
add
xchg
icebp
cmps
fst
or
xor
in
pusha
sub
mov
and
mov
mov
aam
sub
inc
mov
pusha
sub
mov
and
and
sar
mov
mov
out
test
iret
aas
add
xchg
icebp
cmps
fst
or
xor
in
pusha
sub
mov
and
mov
ret
mov
rcl
std
mov
retf
pop
scas
scas
out
test
(bad)
aas
add
xchg
icebp
cmps
fst
movntps
inc
add
pusha
sub
mov
and
and
sar
mov
add
out
test
pop
aas
add
pop
mov
mov
aam
push
retf
mov
les
std
xlat
in
jb
pusha
sub
nop
imul
mov
cmps
ret
cmc
mov
fcmovbe
std
ins
push
es
and
push
sub
xlat
rcr
repnz
in
les
cmp
inc
add
push
mov
retf
mov
stos
scas
out
cmps
fst
or
and
jmp
and
add
lahf
xlat
(bad)
mov
out
sub
pop
mov
aam
push
cmps
adc
pop
and
std
fs
sub
fcmovnu
xlat
std
mov
fcmovbe
std
push
dec
push
fistp
cmps
xchg
retf
pop
and
and
xlat
cmps
repz
mov
lahf
sar
mov
retf
pop
and
push
xlat
jecxz
call
cmps
cmp
jb
cdq
adc
push
movs
add
test
ds
sbb
into
sub
or
inc
pop
scas
scas
(bad)
mov
das
xor
pop
mov
sub
sub
cmp
scas
(bad)
cmps
fst
push
mov
cmp
pop
mov
inc
add
sub
mov
and
mov
neg
std
mov
(bad)
std
mov
pusha
sub
mov
and
push
sti
imul
mov
xor
aas
(bad)
fcmovnu
aad
mov
and
(bad)
fcmovnu
xlat
std
mov
scas
scas
(bad)
cmps
fst
push
ss
inc
pop
scas
scas
(bad)
cmps
fst
push
mov
cmp
pop
mov
cmps
xchg
retf
pop
and
ss
repz
pop
scas
scas
(bad)
mov
scas
mov
mov
loop
xchg
and
add
cmps
xlat
(bad)
mov
jb
aad
and
pop
xlat
cmps
sar
mov
and
cmc
mov
fst
mov
fst
or
sbb
pop
and
mov
fcmovbe
std
ss
inc
pop
dec
into
ficomp
cmps
xchg
retf
pop
and
mov
and
std
push
retf
pop
and
std
push
retf
pop
and
std
mov
mov
std
ficomp
aam
sub
mov
std
cwde
cmps
cs
mov
sub
aam
fstp
sub
mov
sub
jmp
sar
mov
fst
push
ss
repz
pop
scas
scas
(bad)
mov
pop
cmp
adc
cmps
xlat
cli
mov
xor
add
cmps
sti
cmc
mov
(bad)
std
or
fwait
adc
mov
std
rcr
adc
dec
imul
xor
add
cmps
(bad)
mov
and
cmc
mov
fst
mov
fst
push
mov
ffree
imul
sar
mov
and
(bad)
jecxz
aad
mov
fcmovbe
std
rcr
add
retf
pop
and
std
push
dec
sub
jmp
sar
mov
and
xor
ret
dec
dec
and
push
mov
cmp
pop
scas
scas
(bad)
mov
fstp
jmp
daa
mov
and
sahf
out
cmps
fst
jmp
dec
push
pop
and
sub
sub
je
sub
pop
retf
test
mov
jmp
push
pop
ja
out
inc
cmp
pop
retf
pop
and
or
stos
jmp
ss
inc
pop
dec
sub
and
mov
cmp
pop
stos
scas
cmps
mov
aam
sahf
push
aas
push
mov
cmp
pop
dec
sub
mov
stos
repz
sub
lds
mov
pop
mov
add
fdivr
and
sub
mov
cmp
pop
dec
aam
pop
and
jmp
jmp
cmp
pop
jb
sbb
sub
popf
dec
das
add
cmps
xchg
int3
aam
push
fstp
mov
cmp
pop
dec
sub
sub
cmps
call
mov
cmp
mov
cmps
xor
pop
sub
push
jbe
pusha
sub
pop
push
lahf
inc
pop
mov
sub
shl
add
icebp
pushaw
dec
jae
ret
test
jecxz
sbb
pop
stos
in
sbb
fucomp
xchg
iret
aam
pop
leave
sbb
add
xchg
mov
fst
mov
bts
cmc
mov
rol
xchg
stos
sti
pop
xlat
in
les
stos
(bad)
mov
iret
aam
pop
test
mov
fst
ds
push
jmp
mov
and
pop
in
lods
mov
aam
mov
aas
add
jmp
or
cmps
xchg
mov
mov
std
mov
iret
aam
push
dec
mov
into
xchg
(bad)
fild
ret
add
pop
scas
scas
mov
shl
jnp
adc
sub
shl
jnp
dec
out
std
(bad)
mov
pop
and
std
push
retf
mov
dec
sub
mov
and
mov
dec
sub
je
sub
ss
repz
pop
dec
mov
les
mov
cmp
pop
stos
repz
inc
(bad)
scas
push
push
mov
mov
lods
inc
mov
cli
imul
pop
dec
in
ficomp
inc
jb
pusha
sub
xor
sub
rcr
cmps
aaa
sbb
imul
pop
ror
ss
inc
pop
dec
mov
les
mov
add
stos
repz
rol
mov
pusha
sub
lods
inc
mov
cli
imul
pop
dec
in
ficomp
inc
add
arpl
jmp
imul
scas
push
les
and
add
cli
mov
add
inc
add
inc
add
imul
push
mov
and
pop
stos
outs
mov
and
xor
jnp
cld
sub
xchg
std
push
and
(bad)
sbb
(bad)
std
mov
and
(bad)
rcl
jecxz
push
mov
shr
scas
pop
mov
jmp
aam
or
pop
mov
repz
pop
dec
sub
pop
dec
fnclex
sbb
aam
jmp
inc
out
and
pop
scas
outs
mov
mov
aam
mov
cmp
pop
scas
cmps
mov
fst
adc
dec
sub
rcr
jl
sub
sub
scas
outs
mov
scas
ret
mov
sub
inc
add
enter
(bad)
std
mov
fst
mov
shl
add
cs
pusha
sub
pop
cli
mov
inc
pop
stos
outs
into
shl
fidivr
and
jge
and
mov
and
pop
stos
outs
(bad)
xlat
cli
add
xlat
loope
add
and
push
pop
and
ficomp
sub
xor
ret
test
sub
push
sub
mov
fst
mov
xchg
(bad)
std
mov
sahf
sub
pop
and
inc
call
retf
sub
xlat
cli
sub
xlat
loope
inc
loop
ret
jno
and
push
shl
pop
dec
sub
dec
sub
dec
sub
and
add
ret
lock
pop
dec
retf
and
mov
and
pop
sub
ror
sub
ss
inc
pop
dec
sub
retf
pop
and
mov
cwde
std
mov
outs
add
sub
pop
mov
repz
pop
retf
pop
and
xchg
push
mov
add
scas
scas
mov
aam
popf
push
pop
add
mov
pop
and
push
fnstsw
(bad)
(bad)
sub
pop
stos
repz
call
repnz
aam
push
dec
inc
mov
and
xchg
push
xchg
imul
fmulp
movs
xchg
mov
sub
ja
mov
sub
cdq
daa
inc
mov
and
add
ret
daa
neg
aam
lods
cmp
pop
scas
scas
stos
mov
aam
xor
inc
add
in
pop
inc
pop
dec
sub
retf
pop
and
cmp
sub
shl
jnp
pop
dec
sub
push
imul
and
mov
add
ret
inc
push
and
push
pop
and
mov
and
xor
sub
inc
scas
outs
out
retf
pop
and
rcl
iret
push
mov
and
push
sbb
jnp
jo
sub
push
loop
xlat
add
pushf
xor
push
xlat
(bad)
stos
out
bound
sub
or
es
push
out
inc
add
int3
mov
fisub
and
sub
cli
pop
sub
sub
ret
add
sub
pop
sub
sub
dec
and
add
cmp
adc
sub
pop
pop
adc
pop
and
fisub
sub
mov
and
pop
mov
sub
push
cmps
inc
pop
and
test
std
imul
pop
retf
mov
(bad)
std
xlat
fisubr
cli
xlat
in
out
test
std
jmp
(bad)
std
mov
(bad)
out
fst
(bad)
fcomi
(bad)
std
mov
(bad)
std
mov
daa
add
jmp
fisub
scas
(bad)
mov
pop
outs
mov
push
and
or
(bad)
(bad)
std
mov
fst
xor
mov
jmp
cmp
aam
jne
repz
test
aam
retf
jmp
outs
dec
sub
mov
fst
push
aad
idiv
mov
(bad)
std
push
dec
sub
fstp
inc
(bad)
arpl
jmp
add
xlat
in
aas
cmp
scas
nop
pop
and
mov
std
dec
lahf
inc
pop
stos
shl
cmps
stos
in
cmp
stos
aas
cs
imul
imul
pop
retf
mov
push
lahf
inc
pop
and
pop
and
inc
mov
and
pop
mov
push
add
shr
cmps
stos
in
mov
addr16
fist
sub
pop
dec
sub
mov
sub
mov
sub
pop
sub
pop
and
inc
push
push
and
sub
ret
loope
and
mov
retf
mov
and
aas
mov
(bad)
aad
mov
and
cmp
mov
push
outs
cmp
mov
push
pop
cmp
mov
pop
push
pop
cmp
mov
pop
push
pop
cmp
mov
push
(bad)
pop
pop
mov
push
aaa
cmp
mov
push
aas
cmp
mov
pop
push
daa
cmp
mov
pop
sub
sub
fstp
mov
daa
add
scas
mul
pop
mov
push
cmp
pop
or
pop
push
mov
pop
push
es
xor
add
sub
ss
std
pop
fstp
mov
daa
add
in
fisub
and
cmp
and
std
pop
scas
scas
fisub
dec
daa
add
scas
out
fst
jmp
and
add
ficomp
cli
xlat
in
std
pop
and
(bad)
fcmovnu
aad
mov
mov
and
pop
mov
aam
sub
inc
add
inc
push
xchg
push
pop
and
aaa
mov
push
mov
and
pop
retf
cmc
pop
pop
and
std
(bad)
cmps
(bad)
mov
(bad)
std
pop
mov
sub
push
cmps
mov
pop
and
pop
and
(bad)
fcmovnu
aad
mov
sub
dec
and
pop
scas
cmps
jmp
(bad)
bound
sub
mov
inc
add
jl
inc
pop
scas
mov
mov
fidivr
push
arpl
aam
pop
push
or
dec
sub
cli
imul
push
and
std
imul
or
ret
and
mov
test
(bad)
std
xlat
in
xchg
scas
scas
repz
psllq
scas
scas
repz
dec
daa
add
out
adc
(bad)
add
scas
jmp
pop
aaa
xchg
push
and
rcl
sub
mov
and
ss
inc
pop
dec
sub
pusha
sub
add
and
jmp
mov
scas
(bad)
cld
mov
bound
sti
fstp
cmp
dec
sub
dec
int3
aad
and
mov
and
pop
fstp
push
retf
bound
jmp
das
add
scas
(bad)
mov
pop
and
fcmovnu
aad
mov
(bad)
std
bound
push
push
bound
push
and
inc
add
(bad)
pop
dec
sub
xchg
sub
add
and
jne
and
jmp
sub
fisub
sub
mov
mov
sub
mov
(bad)
std
push
dec
push
ficomp
cmps
xchg
retf
pop
and
add
cmps
xchg
fstp
cmp
sub
mov
lahf
(bad)
cld
mov
dec
sub
dec
in
aad
and
mov
and
pop
fstp
cmp
sub
mov
aad
add
scas
jmp
cmps
(bad)
mov
cli
imul
mov
sub
add
out
push
and
add
cmps
(bad)
cld
mov
push
mov
pop
retf
pop
and
std
pop
push
or
dec
sub
cmc
imul
push
and
std
imul
inc
pop
retf
pop
and
xchg
pop
and
sub
scas
jmp
cmps
(bad)
mov
cmc
imul
mov
sub
add
out
push
and
add
cmps
(bad)
cld
mov
or
pop
and
std
pop
push
or
dec
sub
cmc
imul
push
and
std
imul
inc
pop
retf
pop
and
das
pop
and
(bad)
rcr
aad
mov
mov
rol
xor
inc
add
push
cld
inc
pop
dec
sub
or
sub
mov
and
std
pop
and
jmp
and
add
(bad)
jmp
movs
(bad)
std
aam
jmp
pop
das
ds
or
dec
sub
cmc
imul
push
and
std
imul
inc
pop
retf
pop
and
mov
fcmovnu
aad
mov
(bad)
std
bound
pop
mov
pop
and
std
push
scas
scas
repz
psllq
scas
scas
repz
out
add
out
adc
(bad)
add
scas
jmp
pop
or
pop
and
and
aad
mov
and
ss
inc
pop
dec
sub
les
or
pop
and
jmp
and
add
(bad)
jmp
movs
(bad)
std
aam
jmp
pop
das
ds
or
dec
sub
hlt
imul
pop
and
std
imul
inc
pop
retf
pop
and
add
sbb
aad
mov
(bad)
std
fucomp
aam
ficomp
sub
sub
and
retf
fcom
std
mov
mov
sub
mov
(bad)
std
push
dec
push
ficomp
cmps
xchg
retf
pop
and
dec
pop
and
in
cmps
iret
jmp
(bad)
std
xlat
in
add
inc
push
xor
inc
add
and
add
dec
imul
and
mov
rcl
std
mov
dec
sub
jmp
aad
mov
and
add
ins
(bad)
push
adc
std
push
mov
ror
retf
into
(bad)
std
mov
mov
(bad)
mov
and
push
mov
and
mov
rcl
std
mov
and
std
fucomp
aam
ficomp
sub
sub
inc
add
mov
jmp
mov
js
jmp
aad
mov
and
shl
jnp
pop
dec
fnclex
sbb
aam
scas
(bad)
std
mov
add
sahf
repnz
and
add
and
test
pop
dec
sub
dec
sub
dec
sub
pop
bound
into
bound
jmp
(bad)
mov
fisub
add
aam
scas
(bad)
std
mov
das
add
es
cld
pusha
sub
bound
sub
stos
call
out
mov
dec
mov
mov
(bad)
std
mov
das
add
sub
mov
into
std
inc
pop
fstp
jmp
sbb
xlat
in
mov
(bad)
std
mov
sub
pop
in
outs
jmp
push
xor
repz
pop
dec
jnp
sbb
inc
add
stos
jmp
xor
fstp
or
arpl
jmp
sbb
xlat
in
adc
xor
ja
fstp
mov
add
jne
xchg
loopne
add
stos
into
xor
out
retf
rol
cmps
stos
in
mov
cs
add
sub
pop
mov
scas
lds
sub
imul
std
imul
inc
pop
retf
pop
and
add
ret
lahf
pop
and
mov
and
test
sub
imul
std
imul
inc
pop
retf
pop
and
aaa
jb
push
sub
aam
inc
mov
add
sbb
push
retf
bound
ja
fstp
sub
arpl
jmp
fsub
xlat
ror
push
sub
arpl
ja
fstp
and
arpl
jmp
or
ficomp
pop
mov
and
ja
fstp
jmp
sub
gs
or
ficomp
pop
mov
and
ja
fstp
xchg
pusha
sub
movs
and
add
and
cmc
mov
in
fldenv
ret
lahf
pop
and
aad
or
fiadd
mov
add
fiadd
cli
xlat
in
aaa
jb
push
sub
pop
jp
push
gs
aaa
xchg
push
and
aad
sub
jbe
push
sub
pop
sub
pop
or
aad
pop
fwait
push
and
aaa
fiadd
mov
add
pop
adc
xor
ja
je
jmp
mov
lds
jl
retf
pushf
xor
add
aam
push
shr
into
mov
add
aam
push
shr
into
mov
add
aam
dec
shr
into
mov
add
aam
dec
shr
into
mov
add
aam
jle
imul
pop
and
daa
jb
imul
pop
and
daa
outs
shr
into
mov
add
aam
push
imul
pop
and
mov
and
add
in
cmp
jl
rol
retf
pop
and
(bad)
push
loop
sub
in
jmp
jle
shr
inc
gs
pop
sub
jbe
mov
rol
sub
pop
pop
fstp
or
dec
sub
cwde
and
add
jl
pop
jb
inc
mov
aam
xchg
loope
xor
sub
pop
and
adc
pop
jmp
jp
retf
and
ret
aam
mov
aad
(bad)
pop
frstor
mov
push
das
icebp
cli
mov
aad
data16
pushf
sub
add
aam
push
shr
into
mov
add
aam
sbb
imul
pop
and
daa
push
shr
into
mov
add
aam
adc
imul
pop
and
daa
push
shr
into
mov
add
aam
or
imul
pop
and
daa
push
shr
into
mov
add
aam
add
imul
pop
and
daa
shr
into
mov
add
aam
cmp
imul
pop
and
daa
shr
into
mov
add
aam
xor
imul
pop
and
daa
shr
into
mov
add
aam
sub
imul
pop
and
daa
shr
into
mov
add
aam
and
imul
pop
and
daa
(bad)
imul
pop
and
daa
fcmovbe
imul
pop
and
daa
(bad)
shr
into
mov
add
aam
rcl
imul
pop
and
daa
into
shr
into
mov
add
aam
retf
add
mov
add
aam
(bad)
shr
into
mov
add
aam
ret
add
mov
add
aam
(bad)
shr
into
mov
add
aam
cli
shr
into
mov
add
aam
not
imul
pop
and
daa
repnz
into
mov
add
aam
out
shr
into
mov
add
aam
jmp
add
aam
out
imul
pop
and
daa
loop
imul
pop
and
daa
sahf
shr
into
mov
add
aam
call
add
aam
xchg
shr
into
mov
add
aam
xchg
shr
into
mov
add
aam
mov
imul
pop
and
daa
mov
imul
pop
and
daa
xchg
imul
pop
and
daa
adc
add
mov
add
aam
mov
mov
add
aam
mov
mov
add
aam
mov
imul
pop
and
daa
mov
imul
pop
and
daa
cmps
shr
into
mov
add
aam
mov
mov
add
aam
pop
(bad)
imul
pop
and
daa
pop
(bad)
imul
pop
and
daa
push
(bad)
imul
pop
and
daa
push
(bad)
imul
pop
and
daa
dec
(bad)
imul
pop
and
daa
dec
(bad)
imul
pop
and
daa
inc
(bad)
imul
pop
and
daa
inc
(bad)
imul
pop
and
daa
jle
imul
pop
and
daa
jp
imul
pop
and
daa
jbe
imul
pop
and
daa
jb
imul
pop
and
daa
outs
(bad)
imul
pop
and
daa
push
imul
pop
and
daa
data16
imul
pop
and
daa
(bad)
(bad)
imul
pop
and
daa
push
(bad)
imul
pop
and
daa
sbb
imul
pop
and
daa
push
(bad)
imul
pop
and
daa
adc
imul
pop
and
daa
push
(bad)
imul
pop
and
daa
or
imul
pop
and
daa
push
(bad)
imul
pop
and
daa
add
imul
pop
and
daa
ds
imul
pop
and
daa
cmp
imul
pop
and
daa
cs
imul
pop
and
daa
sub
imul
pop
and
daa
es
imul
pop
and
daa
and
imul
pop
and
daa
(bad)
imul
pop
and
daa
rcl
imul
pop
and
daa
into
(bad)
imul
pop
and
daa
retf
add
mov
add
aam
(bad)
(bad)
imul
pop
and
daa
ret
add
mov
add
aam
(bad)
(bad)
imul
pop
and
daa
cli
(bad)
imul
pop
and
daa
not
imul
pop
and
daa
repnz
imul
pop
and
daa
out
imul
pop
and
daa
loop
imul
pop
and
daa
sahf
(bad)
imul
pop
and
daa
call
add
aam
xchg
(bad)
imul
pop
and
daa
xchg
(bad)
imul
pop
and
daa
mov
imul
pop
and
daa
mov
imul
pop
and
daa
xchg
imul
pop
and
daa
adc
add
mov
add
aam
mov
mov
add
aam
mov
mov
add
aam
mov
imul
pop
and
daa
mov
imul
pop
and
daa
scas
(bad)
imul
pop
and
daa
stos
(bad)
imul
pop
and
daa
cmps
(bad)
imul
pop
and
daa
mov
mov
add
