fcom
mov
jb
or
jb
int3
mov
jb
sbb
jb
mov
mov
jb
ret
mov
jb
add
jb
add
jb
xchg
mov
jb
bound
jb
mov
mov
jb
fwait
mov
jb
call
mov
mov
jb
jne
jb
xchg
mov
jb
add
jb
ins
mov
jb
std
mov
jb
ins
movs
jb
mov
movs
jb
xchg
mov
jb
out
mov
jb
frstor
jb
add
add
add
in
std
mov
add
call
add
push
inc
add
add
add
add
add
add
fs
add
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
push
call
add
add
add
xor
add
cmp
add
add
add
dec
pop
dec
sti
push
jge
dec
mov
sbb
add
add
add
add
add
add
and
inc
add
outs
outs
outs
xor
add
add
add
add
add
inc
add
add
add
push
inc
add
add
add
sbb
add
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
inc
add
add
inc
add
add
add
adc
rcl
add
add
add
scas
jae
add
add
push
inc
xor
add
or
add
add
add
add
mov
add
adc
add
mov
add
(bad)
dec
add
add
add
add
add
add
add
add
inc
add
inc
add
inc
add
add
jg
add
mov
add
mov
add
dec
popa
jb
gs
inc
jne
ins
data16
add
outs
outs
outs
xor
push
add
add
xor
imul
scas
retf
add
add
add
and
add
add
add
add
push
add
add
push
xchg
mov
mov
mov
inc
repnz
sub
push
add
add
add
add
mov
add
add
and
pushf
add
add
add
add
sbb
add
add
mov
inc
add
gs
add
adc
add
jo
add
adc
add
add
inc
add
add
add
add
add
sbb
add
add
add
add
(bad)
(bad)
inc
add
add
add
inc
add
add
add
add
add
add
pop
push
inc
add
add
add
add
mov
add
add
add
add
mov
push
pop
inc
add
jae
add
add
add
inc
add
add
adc
xor
add
mov
inc
add
add
add
inc
add
mov
add
add
inc
add
add
add
add
add
xchg
pop
inc
add
mov
add
add
inc
add
add
add
sbb
inc
add
(bad)
(bad)
inc
add
add
add
add
inc
add
mov
add
push
inc
add
(bad)
(bad)
inc
add
add
inc
add
adc
adc
inc
add
adc
in
inc
add
inc
add
adc
adc
inc
add
adc
or
inc
add
inc
add
adc
adc
inc
add
adc
add
add
lock
add
add
ror
(bad)
(bad)
(bad)
inc
add
add
add
jo
add
add
add
jb
adc
inc
add
add
add
add
adc
inc
add
add
add
sbb
add
add
adc
inc
add
sbb
add
mov
push
sbb
loopne
inc
add
add
add
jae
cmp
inc
add
add
or
add
add
add
add
sbb
loopne
jae
ins
sbb
add
inc
add
add
add
add
sbb
add
xor
inc
add
mov
add
sbb
add
inc
add
add
add
add
inc
add
add
add
jae
adc
inc
add
add
add
pop
add
add
sbb
inc
add
(bad)
(bad)
inc
add
add
add
add
sbb
adc
inc
add
(bad)
(bad)
inc
adc
inc
add
add
sbb
add
test
inc
add
mov
add
push
inc
add
sbb
add
add
sbb
inc
add
adc
adc
inc
add
adc
inc
sbb
cwde
sbb
push
adc
adc
inc
add
adc
push
sbb
push
adc
adc
inc
add
adc
nop
sbb
cwde
sbb
push
adc
adc
inc
add
adc
mov
sbb
push
adc
adc
inc
add
adc
sub
jmp
add
add
add
add
inc
add
inc
add
(bad)
(bad)
inc
add
add
inc
add
rcr
sub
jecxz
scas
rcr
(bad)
cmp
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
(bad)
(bad)
inc
inc
add
sbb
add
add
add
sbb
add
inc
add
add
add
inc
add
(bad)
(bad)
inc
push
inc
add
sbb
add
add
add
inc
add
add
add
(bad)
(bad)
(bad)
fcomp
inc
add
add
add
jo
add
add
add
sbb
add
add
add
add
add
inc
add
add
push
push
imul
gs
popa
xor
add
imul
add
add
dec
imul
push
add
add
jne
imul
ins
add
je
imul
add
dec
daa
pop
lods
je
loopne
(bad)
popa
xlat
sub
call
and
add
jl
dec
imul
jns
stos
sbb
jo
scas
retf
mov
sahf
sbb
loop
adc
xor
or
stos
add
xchg
push
popa
jb
gs
add
cmp
push
add
xor
inc
cmp
arpl
outs
pop
inc
arpl
jns
ins
popa
bound
aaa
pop
dec
popa
addr16
imul
je
popa
jne
je
push
inc
ss
dec
inc
add
add
je
inc
add
add
add
add
add
add
add
inc
add
add
add
add
test
jo
repnz
lods
xor
or
stos
add
xchg
push
bound
outs
ins
outs
je
cmp
add
xor
or
stos
add
xchg
push
popa
imul
add
cmp
xor
or
stos
add
xchg
add
add
inc
outs
jb
add
add
inc
je
outs
ins
add
push
add
jns
push
jmp
sti
inc
xchg
pop
mov
xor
xor
fadd
adc
ret
nop
mov
mov
mov
mov
inc
repnz
sub
push
call
dec
mov
scas
loop
sub
cli
dec
lods
xor
or
stos
add
xchg
inc
outs
bound
fs
add
lods
xor
or
stos
add
xchg
dec
jne
addr16
addr16
add
add
dec
add
add
ja
outs
imul
ins
add
add
add
jo
gs
gs
inc
imul
inc
add
push
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
gs
xor
add
add
inc
jb
jns
je
imul
inc
add
inc
add
add
lods
jae
add
or
je
jmp
push
mov
call
jmp
add
add
add
add
jb
gs
xor
cs
ins
and
add
sbb
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outs
je
add
js
inc
add
add
mov
add
add
add
add
or
je
jmp
push
mov
call
jmp
add
add
or
push
inc
inc
ss
dec
dec
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
jbe
popa
inc
jb
gs
je
add
add
pop
pop
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
inc
jo
xor
add
pop
pop
jbe
popa
inc
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
dec
imul
pop
pop
jbe
popa
push
je
dec
xor
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
pop
jbe
popa
push
je
push
outs
inc
outs
jae
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
jbe
popa
dec
gs
add
add
jbe
popa
push
popa
jb
jne
add
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
pop
pop
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
push
cmp
js
xor
add
add
int3
xor
add
push
xchg
mov
mov
mov
inc
repnz
sub
push
sbb
push
jmp
sti
inc
xchg
pop
mov
xor
lods
xor
or
stos
add
xchg
or
add
push
add
jno
popa
xor
or
imul
jae
add
add
inc
add
add
(bad)
or
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
and
mov
mov
mov
xlat
mov
push
and
std
loope
dec
jmp
mov
mov
(bad)
and
(bad)
and
add
and
in
fidiv
in
fisub
inc
in
fisub
adc
add
and
fisub
fidivr
(bad)
int3
fisub
inc
mov
fisub
and
fiadd
inc
mov
mov
inc
fidivr
les
ficom
fisub
in
jmp
inc
adc
and
adc
and
adc
and
and
and
xchg
push
adc
fisubr
(bad)
repnz
fsubrp
and
fimul
inc
sbb
and
fsubrp
and
in
xor
in
iret
mov
mov
in
in
and
in
mov
and
mov
in
and
(bad)
in
push
mov
in
and
inc
dec
and
inc
in
and
in
and
inc
out
and
add
adc
and
jb
and
adc
and
adc
and
adc
and
and
in
ror
fwait
mov
and
and
and
test
fiadd
and
fidivr
and
fidivr
and
in
mov
and
in
mov
and
in
and
mov
mov
and
mov
and
mov
mov
sbb
inc
mov
and
inc
mov
and
mov
mov
and
mov
and
and
bound
or
and
cmp
fiadd
mov
fiadd
adc
and
fiadd
fsubrp
inc
and
in
inc
and
in
inc
and
in
inc
and
inc
ror
fwait
inc
and
mov
inc
and
inc
and
rol
mov
inc
and
inc
inc
mov
inc
les
adc
and
jmp
in
adc
mov
adc
adc
and
adc
fisub
xchg
push
in
and
mov
and
adc
or
and
dec
and
ficom
or
ficom
and
ficom
or
fisubr
and
ficom
and
in
adc
in
in
adc
mov
adc
inc
in
adc
in
adc
and
adc
push
mov
adc
mov
sbb
enter
and
mov
shl
in
inc
adc
mov
inc
shl
inc
adc
and
and
xor
in
adc
and
adc
and
adc
adc
adc
and
adc
fisub
adc
in
and
and
and
and
and
and
and
and
fisub
and
fisub
and
fisub
and
in
and
in
in
and
mov
in
and
adc
and
and
out
jmp
in
mov
and
inc
cmp
and
mov
and
fiadd
and
inc
and
mov
loope
and
inc
adc
adc
and
ficom
and
in
adc
and
adc
and
adc
and
adc
and
and
and
pop
and
and
and
and
and
call
and
icebp
add
je
xor
gs
and
and
cld
and
and
and
ror
and
push
bound
xor
and
and
and
add
and
cld
cld
and
and
push
and
push
and
and
add
and
xor
and
and
je
and
and
and
and
and
fcmovu
and
mov
fisub
and
and
and
fisub
fisub
and
out
jmp
and
fdivrp
fidivr
and
and
and
and
and
and
and
and
and
and
fldenv
and
and
loope
and
and
and
or
and
and
and
and
and
or
and
and
and
and
and
and
and
and
and
dec
pop
and
and
and
and
and
and
and
and
jp
and
and
and
add
and
shl
and
and
and
and
and
shl
and
and
and
and
xor
and
and
sbb
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xor
and
mov
and
and
and
and
and
and
out
jmp
and
and
and
and
xor
and
and
and
and
and
and
fldenv
and
and
loope
and
and
and
xor
and
and
and
and
sub
and
and
and
and
and
and
mov
mov
inc
mov
dec
pop
and
and
and
and
and
and
and
and
jp
and
and
inc
icebp
add
and
shl
and
and
and
and
and
shl
and
and
and
xor
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xor
inc
inc
and
and
and
and
and
and
and
and
jmp
and
and
and
and
and
inc
inc
mov
and
and
and
and
and
and
fnstenv
xor
and
and
and
or
xor
mov
and
and
and
and
sub
and
and
mov
and
and
and
and
dec
pop
inc
inc
and
and
and
and
inc
and
and
xor
and
and
and
add
and
xor
and
rol
and
and
and
and
shl
and
and
and
and
xor
and
and
sbb
and
xor
mov
and
inc
and
and
and
xor
and
and
and
and
and
and
and
and
and
inc
inc
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
inc
mov
inc
inc
and
out
jmp
and
and
and
and
and
and
and
and
and
and
xor
inc
and
and
and
and
loope
and
and
and
or
and
and
and
and
and
or
xor
and
and
xor
and
and
and
dec
pop
and
and
and
and
and
and
and
inc
and
and
and
and
add
and
xor
and
shl
and
and
and
and
and
shl
and
and
and
and
xor
and
and
sbb
and
and
and
and
xor
and
and
inc
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xor
and
out
jmp
and
and
and
and
and
and
and
and
and
and
and
mov
and
and
and
and
and
and
and
and
and
and
lds
mov
and
and
xor
and
pop
jg
and
and
and
and
and
(bad)
and
and
and
and
and
and
and
and
and
and
and
and
and
cmp
and
and
and
and
and
(bad)
ficom
(bad)
fsubrp
(bad)
push
ss
fsubp
fisub
loope
push
(bad)
mov
fidiv
and
fisub
xor
fisub
arpl
fiadd
ins
mov
adc
and
pop
(bad)
mov
push
(bad)
fst
(bad)
push
(bad)
into
pop
(bad)
popa
sbb
(bad)
sbb
fidivr
popf
fidivr
(bad)
fsubp
(bad)
fisub
and
add
bound
gs
add
add
mov
add
jbe
add
inc
sldt
inc
add
add
add
add
or
dec
jne
addr16
addr16
adc
push
cmp
sbb
cdq
ud2
add
inc
sub
add
add
add
bound
fs
add
popa
je
popa
jo
jae
add
or
xor
adc
add
add
add
int3
xor
add
adc
imul
scas
retf
pop
lods
je
loopne
(bad)
popa
xlat
sub
cmp
xor
or
stos
add
xchg
mov
and
add
or
push
push
imul
add
add
popa
fs
imul
inc
add
jle
add
ins
je
add
add
inc
dec
jbe
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
movs
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
stos
cmp
(bad)
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
in
jmp
mov
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
inc
sub
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
xor
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
pop
jmp
clc
js
repnz
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
js
repnz
lods
(bad)
push
sub
xor
call
sub
add
cli
mov
dec
pop
rcl
sbb
pop
dec
push
jp
rcl
pop
fdiv
repz
mov
stc
mov
retf
push
jp
jb
jp
rcr
cmp
cs
(bad)
xchg
inc
rcl
mov
pop
sbb
retf
inc
jp
mov
repz
push
jp
pop
sbb
fld
pop
mov
repz
jp
push
mov
movs
inc
push
jnp
sar
stos
pop
rcl
into
inc
push
jp
push
mov
jle
rcl
pop
neg
ss
xlat
mov
jb
imul
fcom
sub
dec
inc
jp
mov
repz
push
jp
mov
test
jp
shr
jp
rcr
pop
mov
mov
and
mov
test
(bad)
and
sahf
push
xchg
fld
push
jp
cmp
pop
rcr
inc
rcl
or
push
jp
rcl
pop
mov
xchg
fwait
cmps
mov
mov
push
rcl
pop
(bad)
rcl
push
rcl
cmp
call
push
jp
aas
push
js
rol
test
push
sub
pop
adc
movs
inc
ret
rol
test
fist
pop
push
scas
jp
push
in
ins
pop
rcr
push
neg
xchg
fsubr
mov
sub
adc
pop
rcl
(bad)
fist
pop
cmp
(bad)
push
jp
aas
push
js
rcl
jp
xchg
movs
add
sbb
push
pop
rcl
daa
neg
pop
rcl
(bad)
sub
mov
(bad)
sub
push
sti
lahf
rcl
cmp
pop
ror
repz
mov
push
and
pop
adc
rcr
push
jp
cmp
pop
rcr
aas
or
dec
outs
pop
ror
repz
retf
mov
and
pop
adc
rcr
push
jp
cmp
aas
pop
pop
sbb
cmps
inc
jp
mov
repz
fsave
pop
cmp
xchg
adc
jp
xchg
outs
icebp
push
xlat
mov
and
pop
rcl
pop
rcl
push
xlat
mov
and
pop
sar
rcl
ins
lds
add
repz
out
mov
repz
push
jp
push
scas
jnp
fnstsw
sbb
mov
jg
fwait
pop
jp
pop
sub
sbb
sti
mov
cmps
movs
ret
push
jp
xchg
push
xchg
sbb
push
jp
cmp
push
mov
sbb
cdq
pop
rcl
push
xchg
repz
xchg
xchg
sub
push
jp
push
lahf
mov
pop
mov
jp
xchg
push
stc
mov
rcl
mov
inc
jp
mov
xchg
pop
fst
rcl
pop
(bad)
pop
rcl
rcl
add
rcr
push
jp
cmp
pop
push
push
xchg
bound
push
sub
pop
sub
icebp
push
xlat
mov
and
mov
xlat
mov
or
mov
sub
dec
rcl
ficom
jnp
rcl
sbb
in
push
cpuid
xchg
add
rol
push
jp
pop
sbb
adc
lods
xor
sub
scas
xchg
fsub
leave
push
cmp
jmp
ldmxcsr
jp
rcl
push
fist
pop
rcl
add
adc
pop
rcr
pop
push
push
xchg
bound
push
adc
push
jnp
sar
xor
cmp
xor
push
jp
test
jbe
adc
nop
jle
rol
icebp
push
repz
jns
rcl
pushf
nop
push
and
push
sub
sub
fdivr
add
xor
cmp
xor
add
pop
mov
fnstsw
(bad)
scas
jp
push
mov
movs
sub
mov
push
xchg
xchg
les
push
jp
push
outs
das
sar
aad
lods
push
cs
fild
imul
cmp
add
jle
add
mov
imul
jp
xchg
inc
icebp
sbb
xchg
icebp
es
aaa
jg
daa
inc
pop
sbb
(bad)
xor
pop
fst
pop
rcl
push
cmps
push
jp
rcr
hlt
mov
push
jp
sub
fimul
pop
jp
pop
sub
sub
mov
fcom
adc
adc
aad
dec
pop
sbb
adc
xor
mov
inc
jp
mov
test
scas
and
fstp
repz
(bad)
mov
and
sub
push
rcl
push
pop
pop
test
test
adc
push
adc
push
adc
and
cmps
jp
into
rcl
pop
push
scas
jnp
push
add
push
rcl
rcr
push
jp
cmp
movs
sub
aas
outs
pop
sbb
movs
pop
jp
mov
repz
mov
and
rcr
jmp
rcl
fsubr
push
push
pop
push
sub
pop
cmps
push
icebp
push
fstp
and
sub
jle
pushf
pop
test
xchg
sbb
fnsave
adc
sub
rcr
sbb
test
imul
jne
test
jp
cmp
repz
rcl
xor
push
jp
movs
push
icebp
adc
test
jp
sar
xor
data16
sub
push
pop
rcl
pop
mov
push
jp
pop
rcr
pop
rcl
pop
pop
pop
test
mov
jecxz
pop
rcl
sub
(bad)
or
fnstsw
jg
push
jp
xchg
push
and
rcr
jne
mov
test
jb
loope
sub
push
push
lods
jg
rcr
aas
jg
push
aaa
xor
cmp
movs
cmps
jb
sub
(bad)
or
aad
pop
(bad)
mov
dec
mov
xor
pop
sbb
mov
xchg
sbb
sbb
sti
push
sbb
jl
sbb
or
outs
pop
mov
ror
add
dec
movs
test
mov
(bad)
push
jp
mov
xor
outs
fnsave
pop
rcl
out
push
jp
shl
jo
scas
and
push
sar
rcr
aaa
push
cmp
je
ror
fsubr
test
icebp
or
test
stc
mov
(bad)
push
jp
xchg
dec
adc
push
repz
pop
or
pop
bnd
rcl
mov
push
sub
test
push
jo
pop
rcr
and
pop
rcl
adc
(bad)
cdq
jle
push
pop
sbb
ret
pop
jp
mov
test
(bad)
movs
add
sbb
mov
push
xchg
dec
rcl
xor
push
adc
push
jp
rcr
sub
into
dec
push
jp
pop
ror
pop
rcl
cli
jecxz
jp
pop
push
jb
rcl
inc
fcom
jle
dec
mov
rol
jp
rcr
aaa
pop
cmp
jno
ror
pushf
das
test
jb
cmp
mov
or
into
pop
rcl
or
test
jp
xlat
fist
pop
rol
jp
push
xchg
xchg
push
sub
test
imul
jle
pushf
push
icebp
dec
rcr
rcr
jp
rcr
xchg
ficom
idiv
rol
jp
push
xchg
jp
rcl
rol
bound
sar
sar
xlat
mov
or
retf
push
sti
cwde
xlat
push
jp
sbb
push
sub
test
mov
and
dec
out
pop
rcr
and
push
adc
test
jp
test
imul
jp
mov
xor
push
test
arpl
pop
pop
add
loope
sub
mov
pop
jp
mov
repz
jp
pop
sbb
dec
pop
jp
mov
repz
jp
pop
sbb
sub
repz
mov
fnstenv
ror
in
test
jp
mov
push
mov
scas
jp
iret
fistp
sub
push
icebp
push
mov
push
icebp
add
test
jp
rcl
pop
das
rcr
adc
push
jp
ins
stos
jne
rcl
push
pop
sbb
rcr
pop
mov
repz
mov
and
movs
loopne
stos
rcr
push
jp
cmp
and
and
rol
push
shr
jb
loopne
out
not
push
jp
push
push
jb
rcl
pop
rcr
aaa
push
cmp
pop
ror
inc
sub
sub
movs
add
sbb
lahf
pop
rcl
push
xlat
mov
and
pop
shl
pop
rcl
mov
rcl
rol
sti
in
push
jp
rcl
pop
(bad)
jbe
sub
stc
in
pop
jp
xlat
pop
(bad)
cmp
push
jp
sahf
push
xchg
xchg
fist
add
out
and
jp
test
imul
mov
rcl
mov
lods
test
push
icebp
push
xlat
mov
and
pop
rol
pop
rcl
sbb
push
jp
rcl
fcom
jp
pop
rcl
pop
rcl
pop
ret
push
jp
push
sar
sar
test
(bad)
jnp
rol
test
stos
push
jp
push
jmp
jnp
push
std
jp
rcr
std
(bad)
rcl
cs
jp
(bad)
stos
pop
rcl
test
mov
jp
shr
pop
rcl
jp
out
in
jl
rcr
jmp
push
jp
push
push
jp
(bad)
fistp
push
inc
inc
rcl
push
push
int3
jp
shr
pop
rcl
jp
out
jae
pop
adc
(bad)
push
jp
inc
push
jp
cmps
sub
rcl
das
movs
imul
xchg
push
xor
sbb
data16
pop
mov
rcl
push
push
fidivr
shr
pop
rcl
jp
out
push
jp
adc
rcl
push
jp
rcl
(bad)
jmp
jg
idiv
movs
inc
ret
sar
js
rcl
in
dec
push
jp
sub
out
pop
rcl
int3
scas
push
jp
cmp
movs
sub
jp
sub
das
arpl
xchg
mov
fld
loop
rcl
in
inc
push
jp
sub
push
pop
rcl
cmp
int
rcl
movs
fs
shr
jp
ins
ds
rcl
in
dec
push
jp
sub
out
pop
rcl
int3
scas
push
jp
cmp
icebp
fsub
jp
push
scas
push
jns
sbb
icebp
fdivr
jp
call
fnstsw
daa
xchg
fistp
daa
out
out
mov
pushf
xchg
sub
rcl
fimul
jp
rcl
pop
adc
push
pop
rcl
rcr
push
jp
cmp
int
rcl
movs
add
mov
pop
rcr
sbb
rol
push
shr
jb
loopne
out
not
push
jp
push
(bad)
jnp
rcr
aas
and
sti
cwde
cmps
push
jp
cmp
sar
shr
jp
mov
push
rcl
pop
rcl
movs
fs
jnp
shr
jp
inc
sub
shr
jp
rcl
fsubr
push
pop
pop
lods
sti
cwde
cmps
push
jp
cmp
sar
shr
jp
mov
push
rcl
jmp
sub
push
jmp
mov
out
aad
pop
(bad)
enter
push
cli
retf
push
jp
pop
push
dec
rcl
fistp
dec
push
mov
jp
(bad)
out
je
rcl
fwait
shl
icebp
inc
(bad)
icebp
dec
fnsave
inc
mov
aad
dec
loop
stc
call
shrd
sub
adc
jle
shl
jp
mov
repz
mov
xchg
pop
rcl
jbe
adc
fld
push
push
xchg
jp
rcl
(bad)
cmp
pop
ror
repz
push
jp
cmp
jle
rcr
mov
cli
cdq
stc
mov
push
mov
int
test
jne
pop
inc
jb
jmp
jecxz
push
jp
adc
aas
addr16
scas
jp
and
aaa
inc
cmp
jo
ror
fs
test
mov
cwde
rcl
pop
mov
test
jp
mov
pop
push
pop
sbb
fstp
mov
repz
mov
repz
push
push
jp
add
or
fistp
pop
rol
jp
sub
rcr
jp
cmp
or
movs
add
fld
push
jp
xchg
pop
jns
out
push
sbb
icebp
or
xchg
adc
fnsave
pop
ror
lock
and
movs
add
test
test
mov
xor
cmp
xor
cmp
xor
ds
rcl
sub
xchg
repz
fnsave
pop
cmp
pop
ror
sub
sbb
mov
cmp
xor
pop
test
test
inc
sbb
and
sub
push
jp
push
nop
push
xor
add
pop
push
nop
jle
sub
and
test
jae
ror
movs
push
nop
sub
sar
or
test
jp
push
mov
pop
rcr
aaa
xor
mov
xchg
pop
and
dec
mov
pop
rcl
pop
pop
lods
sti
cdq
das
push
jp
adc
jp
sar
and
sub
sub
pop
(bad)
stc
rcl
rcr
push
jp
cmp
or
mov
rcl
les
push
jp
cwde
addr16
adc
out
fwait
rcl
rcl
pop
repnz
fcom
inc
jne
mov
jp
rcl
mov
pop
rcl
mov
pop
rcl
mov
pop
rcl
mov
pop
rcr
sbb
jp
push
xchg
jp
rcl
outs
rcl
shr
push
jp
shl
pusha
rcr
push
jp
cmp
(bad)
movs
sub
sbb
rol
test
adc
cmp
xor
cmp
xor
cmp
xor
push
jp
test
sbb
xchg
test
push
jp
pop
sar
xchg
pop
dec
jb
push
lods
jp
and
repz
push
xchg
jp
rcl
pop
xchg
adc
mov
mov
pop
mov
adc
mov
mov
pop
ficom
mov
pop
adc
mov
pop
repz
xchg
adc
repz
fwait
adc
nop
adc
(bad)
adc
add
shr
jge
xchg
nop
jge
xchg
nop
jge
xchg
nop
jge
xchg
nop
jge
xchg
nop
jge
xchg
fild
pop
shr
pop
sbb
push
pop
sbb
push
push
sbb
push
push
sbb
push
pop
sbb
push
sub
push
cmp
sbb
push
sub
push
pop
sbb
push
push
sbb
push
push
sbb
push
pop
sbb
push
pop
sbb
fld
push
pop
test
popf
rcl
mov
push
fsub
push
lods
jp
fcmovnu
gs
xchg
js
and
jge
xchg
nop
jge
xchg
nop
jge
xchg
nop
jge
xchg
nop
jge
xchg
nop
jge
xchg
add
es
test
adc
or
loop
lock
fst
sbb
aad
pop
cmp
icebp
es
test
adc
cmp
or
rcl
mov
mov
xchg
test
sub
pop
sub
sub
mov
inc
pop
cmps
dec
icebp
push
xlat
mov
and
pop
test
popf
rcl
mov
mov
and
jmp
push
imul
nop
jp
rcl
fidivr
add
mov
push
jp
test
xor
cmp
xor
cmp
xor
xlat
xchg
pop
rcl
or
rcl
pop
mov
xchg
mov
ror
inc
repnz
fcom
cmp
adc
shl
xchg
cwde
cmp
icebp
inc
pop
sub
jb
jp
rcr
cmp
lahf
cmp
pop
pop
push
xchg
jle
rol
pop
jmp
push
pop
bound
xchg
mov
push
rcr
das
inc
pop
or
pop
dec
icebp
push
xchg
pusha
iret
pop
pop
cdq
aad
pop
cmps
mov
sqrtps
jp
rcr
aas
add
gs
call
inc
inc
(bad)
jo
out
rep
les
cmp
mov
jp
xchg
mov
rcl
push
imul
jnp
rcl
push
mov
pop
sbb
repz
rcl
rcl
fnstsw
shl
adc
fdivr
mov
test
xchg
jnp
rcr
adc
shl
mov
pop
rcl
das
movs
xchg
inc
rcl
pop
rcl
xor
ds
rcl
ficomp
jp
rol
pop
adc
neg
push
jp
rcl
mov
xchg
repnz
rcl
xor
aad
pop
sbb
push
sub
test
out
sbb
icebp
push
xlat
cmp
xor
pop
test
pop
push
jp
pop
add
loope
sub
pop
sub
neg
push
test
push
push
jp
mov
or
loopne
out
(bad)
push
jp
loopne
test
push
jp
mov
icebp
es
mov
xor
jp
test
mov
pop
(bad)
out
sbb
push
xchg
cmp
xchg
and
test
sti
pushf
rcl
pop
test
test
push
test
cmp
pop
ror
ret
inc
rcl
cmps
and
icebp
push
xlat
mov
and
pop
sub
adc
jns
sar
or
mov
sub
push
(bad)
push
jns
rcr
aas
ja
adc
pop
rcl
mov
cmps
test
add
cmp
xor
sub
das
jp
sbb
push
jp
shr
test
push
xchg
push
icebp
push
pop
cwde
icebp
adc
fbstp
pop
repz
sub
icebp
pop
not
xchg
pop
adc
sub
cmps
adc
sub
jp
fld
push
or
cmp
xor
and
sbb
mov
mov
cmp
das
cmp
mov
inc
test
xor
sub
push
xchg
mov
test
jp
shl
jp
sar
jp
shl
jp
rcr
jp
rol
jp
rcl
jp
shl
jp
shl
jp
sar
jp
sar
jp
sar
imul
jp
shl
ins
shl
ror
jp
shl
jp
rol
jp
sar
shr
jp
rcl
mov
test
movs
mov
push
adc
push
or
push
push
pop
mov
add
push
jp
cmp
push
aas
mov
mov
or
sar
movaps
mov
cmp
sub
and
test
cmp
das
mov
cmp
pop
cmp
(bad)
mov
xor
cmp
and
sub
mov
sub
cmps
sbb
sub
and
mov
cmps
test
and
or
mov
aaa
ds
mov
xor
xchg
cmp
xor
aaa
push
test
or
cmps
aaa
push
push
mov
adc
sub
test
adc
mov
sub
mov
xor
das
mov
repnz
and
xor
and
and
aaa
push
pop
cmp
push
or
and
and
aaa
push
pop
cmp
push
or
add
sub
mov
pop
das
xchg
adc
nop
cmp
and
cmp
xchg
movs
sub
pop
das
nop
cmp
ss
push
pop
mov
mov
cmp
mov
push
and
sar
ds
sbb
sub
adc
mov
aas
push
pop
cmp
(bad)
movs
sub
pop
cmp
aas
or
and
cmps
cmp
pop
cmp
pop
cmp
aas
or
and
cmp
xchg
movs
sub
adc
cmps
and
aaa
and
stos
push
xchg
cmp
test
push
pop
mov
das
cmp
cmp
das
and
mov
or
xor
pop
das
and
xchg
push
sub
aas
sbb
sar
cmp
mov
push
xor
xor
mov
sub
cmps
push
or
mov
adc
jp
loope
test
cmp
pop
mov
(bad)
xchg
and
xor
and
push
xor
xor
cmp
and
xor
cmp
pop
sub
mov
sub
mov
pop
push
aaa
mov
mov
sub
sbb
cmp
xchg
movs
sub
or
mov
pop
sbb
sar
sub
cmps
adc
aaa
mov
adc
sub
mov
ds
aas
push
ds
push
xchg
inc
cmp
or
fwait
aaa
adc
mov
mov
dec
imul
test
adc
arpl
adc
xchg
stos
es
or
mov
add
xor
aaa
mov
cli
(bad)
movs
sub
xor
mov
adc
sub
das
aas
and
test
mov
cmp
mov
das
jp
push
mov
or
mov
mov
sub
mov
or
mov
cmp
inc
and
sbb
mov
aaa
xor
xor
pop
test
adc
mov
and
sub
and
xor
jp
out
mov
cmp
test
sub
(bad)
sbb
cmp
and
or
cmp
xor
and
or
mov
and
aas
and
and
or
adc
sub
test
or
cmps
es
ret
movs
xor
or
test
push
cs
add
sar
sub
cmps
adc
aaa
mov
push
das
mov
xor
or
mov
sub
mov
push
push
stos
xor
cmps
xor
movs
sub
pop
sub
xor
sub
xchg
xchg
cmp
cs
ds
movs
sub
pop
das
lahf
cmp
xor
xor
push
xchg
jmp
jp
rcl
jp
rol
jp
shr
mov
mov
jp
cmp
movs
sub
jp
sar
jp
rcl
lahf
cmp
jp
jecxz
test
not
xchg
and
push
ds
xor
sar
sub
xor
sub
mov
sub
mov
or
mov
das
pop
adc
cmp
xchg
movs
sub
dec
push
not
pop
sub
cmp
mov
movs
sub
sub
cmp
push
aas
test
jp
ret
inc
push
ret
inc
push
leave
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jmp
call
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
add
and
jae
cdq
dec
icebp
cld
(bad)
out
push
dec
jl
es
sub
shl
gs
add
mov
lahf
repz
imul
sahf
cmp
popa
jp
push
xor
pop
add
jb
ret
psubsw
push
call
movs
loop
int
fidiv
mov
outs
push
stos
pop
enter
mov
inc
lea
aam
jge
sti
and
mov
xchg
push
mov
pusha
imul
xchg
pop
rcl
inc
inc
retf
cmc
xor
pop
mov
jl
mov
sbb
inc
xchg
call
cs
in
dec
je
fadd
(bad)
mov
and
iret
cmps
and
adc
mov
sub
aad
sbb
xlat
lds
xchg
outs
inc
mov
push
stos
mov
cli
push
fwait
pop
ret
leave
aas
scas
pushf
mov
out
fldenv
sbb
jp
and
push
in
dec
xchg
push
jmp
push
lds
sahf
pop
in
sub
js
and
push
psubsb
punpckhdq
pop
pmulhw
paddusw
push
psubusb
paddsw
psrlw
jmp
psllq
punpckhdq
psrlq
pop
pcmpgtb
packssdw
xor
psllw
nop
pcmpeqb
inc
pcmpgtd
psubusb
paddsw
inc
pmullw
paddusw
cmp
jne
pcmpeqw
packssdw
jmp
paddd
psubsw
pxor
mov
punpcklwd
psrld
add
pslld
pcmpeqd
psubsb
mov
paddw
punpcklwd
paddw
add
psubb
psubsw
call
packuswb
packssdw
packssdw
mov
paddd
paddb
add
pcmpgtb
nop
movq
push
packssdw
punpcklwd
pcmpgtb
call
por
fnop
cmp
je
psubusb
paddsw
int
int
int
int
int
int
psubusb
psrlw
mov
pcmpgtw
pcmpeqb
add
psrld
psubb
mov
paddsb
nop
sub
punpckhbw
paddw
call
nop
psubsw
mov
pcmpeqw
fnop
punpckhbw
push
psraw
psubusb
paddsb
mov
pcmpgtd
punpckldq
psrld
push
pcmpgtb
punpckldq
push
psraw
paddsb
pxor
push
packuswb
pmaddwd
call
fnop
psubsb
cmp
je
mov
pslld
nop
pcmpeqb
mov
pcmpgtd
psraw
paddsw
mov
pmaddwd
por
push
nop
punpcklbw
psrad
cld
por
paddusw
xor
psrlq
psubusb
punpcklwd
add
packuswb
punpckldq
psrad
mov
psrlq
pxor
mov
punpckhbw
nop
packsswb
rep
psllq
pcmpgtw
psrad
pop
pcmpeqw
paddd
pcmpeqb
push
pmullw
punpckhbw
pcmpgtd
pop
pxor
punpckhwd
mov
pmaddwd
pcmpeqw
psllw
inc
nop
por
psubusb
xor
nop
punpcklbw
psrad
cmp
jne
paddsb
paddw
mov
psllw
psubsw
mov
pand
psubusb
mov
packssdw
psraw
pcmpgtb
xor
psrld
punpckhbw
inc
punpckhdq
pcmpeqb
pcmpgtd
inc
pxor
paddusw
pandn
inc
pslld
pxor
inc
fnop
punpckhwd
mov
punpcklwd
pmullw
por
cmp
jne
paddsw
packssdw
mov
punpckhwd
pmulhw
pop
psllq
paddd
pcmpgtb
jmp
nop
psubw
paddw
paddb
pcmpgtw
psllw
add
packsswb
nop
mov
nop
paddusb
psrlw
mov
pcmpeqd
psrad
paddsb
sub
pmulhw
pcmpgtb
mov
nop
pandn
mov
psubb
pcmpeqb
xor
psrld
pcmpgtw
test
jne
pmaddwd
por
sub
paddw
paddw
movq
inc
pslld
paddd
psrlq
inc
psubw
pcmpgtb
psraw
jmp
paddw
punpckhdq
packsswb
mov
movq
paddusw
lods
psrlw
pcmpeqd
nop
mov
psrad
pslld
nop
cmp
psrld
paddusw
pcmpgtb
jne
pcmpgtd
pmullw
pcmpeqw
mov
punpckhwd
pcmpeqb
pcmpgtd
cmp
packsswb
punpcklwd
psrlq
jne
pmullw
pcmpgtb
pslld
xor
paddsw
psubw
pxor
mov
pmullw
paddusw
psubw
push
paddb
pcmpgtw
psllw
push
pcmpgtd
pxor
pcmpeqb
push
paddsb
nop
push
punpckhbw
paddw
push
fnop
psubsw
pslld
push
psrad
punpckldq
paddb
push
paddsw
movq
push
psrld
pmulhw
call
pcmpgtb
pcmpeqb
add
psllq
psubsb
paddd
ret
pmaddwd
psubd
psubusb
sub
xor
dec
ds
dec
and
jecxz
(bad)
in
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
mov
cwde
je
imul
cmp
addr16
daa
xor
or
arpl
enter
cmp
push
mov
stc
(bad)
test
xchg
mov
sbb
xor
ss
push
fsub
inc
daa
xor
(bad)
in
or
arpl
aam
xor
dec
cmc
push
mov
stc
(bad)
popa
mov
fldz
sub
jo
ss
push
retf
inc
daa
xor
or
arpl
aam
xor
adc
xchg
mov
sub
jo
ss
push
fisub
inc
out
jb
pop
(bad)
in
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
cmp
arpl
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
sbb
adc
fisub
lods
cmp
(bad)
in
pop
sbb
rol
xor
stos
not
stc
(bad)
popa
mov
cmp
pop
dec
sbb
clc
jo
cmps
inc
ret
push
jmp
jecxz
(bad)
or
arpl
aam
xor
stos
not
stc
xchg
lock
rcl
dec
or
jns
or
ss
push
scas
gs
daa
xor
or
arpl
fcom
(bad)
mov
xchg
aaa
pop
out
cmp
jns
in
jmp
adc
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
jo
xchg
adc
fcomi
add
cmp
leave
sbb
lea
xchg
(bad)
std
mov
xlat
jle
or
es
inc
inc
outs
mov
push
push
in
in
sub
vandnps
jns
shl
and
aam
(bad)
enter
sbb
dec
sub
mov
std
int3
dec
ret
in
xchg
daa
pusha
mov
pop
addr16
push
xchg
or
xchg
movs
pop
cmps
or
cmp
sbb
loopne
out
jo
cld
int3
out
not
adc
sbb
xor
sub
jo
inc
pop
jnp
je
addr16
call
imul
rcl
add
cmc
xor
out
lds
scas
pop
inc
lock
and
cmp
mov
das
mov
or
loopne
sub
and
out
mov
mov
ffree
out
cdq
jo
inc
jns
pop
cmp
daa
imul
fld
mov
cmp
adc
(bad)
in
or
jbe
test
mov
aad
jns
adc
sbb
add
sub
sbb
call
push
jmp
std
in
retf
(bad)
mov
imul
call
jo
mov
(bad)
push
jno
inc
and
imul
xor
stos
add
out
cwde
test
xchg
and
cmc
test
sub
mov
adc
dec
mov
das
or
or
call
dec
ret
adc
xchg
daa
pusha
mov
pop
push
cmp
xchg
test
outs
jl
or
inc
push
aaa
jmp
push
or
repnz
inc
push
pop
outs
ja
aam
push
arpl
ror
jmp
jno
imul
sub
jo
jmp
xchg
popf
mov
lahf
mov
adc
xchg
mov
or
cld
dec
in
jge
jae
dec
out
inc
push
cdq
cmp
inc
sub
hlt
in
inc
xchg
(bad)
arpl
mov
test
jmp
shl
nop
sti
scas
ds
fiadd
frstor
inc
mov
jb
repz
imul
jle
inc
cs
mov
or
sub
into
mov
dec
sbb
adc
mov
(bad)
out
icebp
sbb
adc
loop
rol
adc
or
push
mov
call
pop
gs
stos
mov
cwde
adc
xor
cmps
push
fcmovbe
or
mov
ffreep
stos
ret
mov
jno
test
cmp
popa
jecxz
jno
ss
xor
fcom
adc
sbb
or
jbe
in
xor
xlat
jmp
pushf
sub
and
or
daa
xchg
jmp
test
das
inc
fstp
cs
push
fstp
and
sbb
icebp
scas
xchg
mul
add
mov
push
xor
push
jb
mov
ins
cmp
sbb
xchg
push
mov
movs
jae
mov
stc
inc
pop
mov
pop
imul
std
inc
cdq
jo
pop
rcl
mov
rol
xchg
loop
(bad)
mov
push
mov
fisttp
not
movnti
pop
mov
out
sub
daa
sub
div
pop
in
sbb
mov
aam
ret
pushf
pop
cmp
stc
mov
inc
aam
cmps
gs
les
jo
mul
leave
xchg
ret
add
out
jle
sub
or
jbe
push
(bad)
mov
in
in
and
iret
lods
sub
gs
mov
xchg
(bad)
jb
mov
pushf
std
cmp
aas
sbb
jp
mov
aas
cmc
iret
lods
sub
cwde
adc
ret
push
fnstsw
xchg
out
xor
push
repz
sub
xchg
inc
je
dec
xchg
adc
add
imul
leave
cdq
(bad)
cmp
in
push
pop
cmps
jb
xchg
xor
or
xor
stos
jp
xchg
sbb
lods
mov
rcr
xor
xchg
es
setp
sbb
push
das
(bad)
or
pushf
sbb
xchg
xor
mov
adc
test
jl
lds
mov
cmp
push
cli
(bad)
pop
jl
cmp
lahf
pop
xchg
push
fld
not
ja
fucomip
or
mov
sub
xor
es
(bad)
push
cld
cmc
daa
xor
mov
push
or
inc
cmp
adc
(bad)
or
ja
push
in
pop
jns
data16
jle
cwde
xor
jle
push
push
pushf
mov
push
sbb
lods
stos
out
mov
lds
cmp
push
sub
xchg
adc
dec
add
out
mov
data16
push
mov
scas
scas
mov
inc
add
or
adc
shl
and
lea
hlt
outs
jg
mov
or
cmps
jmp
or
mov
jecxz
cwde
rol
ret
xchg
movs
push
and
mov
pop
jmp
pop
sbb
cmp
mov
mov
mov
cmc
xchg
push
cmp
shr
jns
fcom
xchg
imul
(bad)
mov
lods
jae
dec
inc
cdq
fisttp
adc
xor
shr
(bad)
mov
mov
aas
aam
out
sub
scas
add
and
loop
dec
mov
xchg
or
xor
arpl
mov
movs
jae
mov
stc
dec
push
in
fmul
or
out
cmps
ficom
xchg
jmp
pop
push
cmp
cmp
push
int
cmp
xor
cmp
adc
(bad)
or
leave
dec
and
enter
sub
jno
fbstp
adc
lock
sbb
es
ror
jo
xchg
outs
push
test
adc
ja
and
jmp
mov
mov
daa
xchg
mov
jle
mov
sub
cmp
int3
jno
cmp
loope
sbb
popa
mov
loop
movsx
je
jb
aaa
adc
ins
inc
fisub
xchg
mov
ret
or
arpl
or
sub
push
fst
dec
ja
aas
push
js
inc
jl
retf
rcr
movs
and
jmp
mov
add
or
add
out
test
imul
mov
fidiv
mov
mov
mov
inc
cwde
sub
dec
pop
in
dec
cmp
cmp
and
push
xor
stos
dec
inc
sub
cli
stc
add
jae
arpl
jge
cmp
xor
xor
arpl
mov
or
sbb
adc
jo
scas
lahf
push
xchg
xchg
mov
aas
jg
and
adc
rcr
movs
push
lahf
clc
mov
cmps
ds
ror
xchg
daa
jmp
xchg
mov
imul
add
push
xchg
mov
fist
mov
and
mov
int
sar
xchg
leave
outs
test
(bad)
mov
(bad)
cdq
push
jmp
loop
xor
jp
aas
inc
aam
sbb
pop
jge
ret
dec
sbb
cmp
add
push
xchg
mov
ror
lods
sub
mov
jb
sub
and
(bad)
mov
or
test
xor
addr16
jo
lea
mov
inc
loopne
repnz
push
push
jmp
adc
fidiv
fcmovbe
mov
daa
inc
ja
cli
test
cmp
pop
arpl
shl
fwait
not
ror
sub
dec
leave
cdq
mov
outs
xchg
outs
and
jb
dec
xor
or
sbb
fistp
cmp
scas
sub
xor
movs
(bad)
sub
push
enter
mov
xchg
mov
inc
xor
scas
mov
sbb
mov
(bad)
pop
int
push
dec
pushf
add
je
inc
mov
fisub
jb
xchg
xchg
push
push
mov
(bad)
aam
sbb
inc
adc
and
mov
sub
xor
test
sub
mov
pop
daa
push
cdq
mov
mov
inc
xor
adc
ror
sub
ds
leave
cdq
stos
pop
jbe
pushf
test
push
xchg
ret
jb
add
in
std
pop
mov
ins
cmps
popf
push
out
lods
pop
jae
mov
mov
lds
mov
pop
std
aaa
fisub
fs
in
dec
mov
sbb
mov
ins
push
mov
mov
popa
mov
out
retf
pop
pushf
sti
je
dec
int3
sti
pop
addr16
dec
mov
lahf
cwde
jl
cld
cmc
ss
dec
popf
fld
xor
in
add
mov
sub
pusha
or
out
cwde
xor
xor
dec
dec
xchg
sub
add
call
cwde
jmp
outs
shr
arpl
fbld
jmp
call
and
push
call
fnstenv
inc
cmp
rcr
loope
and
adc
outs
jge
call
test
mov
loopne
mov
and
mov
cmp
arpl
out
jp
jge
(bad)
popa
mov
fdivr
in
and
push
mov
call
and
xor
pop
jle
loopne
fcom
outs
push
or
dec
std
and
pusha
mov
aad
mov
cmp
adc
out
mov
rcl
es
mov
sbb
mov
adc
xor
dec
retf
push
xor
pop
sub
jne
mov
ret
mov
call
loope
sbb
or
rcr
popa
dec
xchg
pushf
adc
ins
sub
pop
fist
sahf
push
xor
int
push
std
shl
inc
add
js
(bad)
xchg
mov
out
out
pop
out
sub
jo
mov
ret
push
popf
mov
pop
test
pop
or
sbb
jno
xor
ret
clc
mov
daa
pusha
mov
in
lods
sub
xor
ficomp
sar
and
push
or
addr16
test
add
mov
std
xchg
jmp
adc
sti
mov
and
jmp
adc
cmp
out
nop
cmp
inc
cs
rcr
xchg
int
add
pop
test
push
fucomip
sti
stos
aas
sub
arpl
sbb
mov
jmp
jns
repnz
(bad)
std
icebp
and
jecxz
dec
int
push
jle
or
daa
mov
jge
mov
sub
jp
xchg
mov
sub
fist
or
out
imul
stos
mov
(bad)
mov
mov
enter
(bad)
mov
mov
sbb
xor
arpl
stos
pop
sti
cdq
adc
cmp
add
xchg
(bad)
mov
ret
push
jl
enter
(bad)
mov
or
arpl
ret
clc
xlat
pop
(bad)
aam
xchg
ficomp
fdiv
push
mov
cmc
leave
outs
and
jb
dec
das
mov
add
mov
inc
inc
xor
xchg
pusha
out
xor
mov
adc
enter
leave
rcl
test
cmp
xor
int
iret
or
push
adc
push
stc
nop
fld
mov
sub
sub
movs
sub
daa
imul
fwait
mov
mov
out
std
adc
loopne
outs
jns
test
mov
(bad)
fmulp
out
push
mov
push
fadd
jmp
mov
test
(bad)
(bad)
aam
mov
test
(bad)
popa
out
cmp
push
pop
inc
mov
mov
or
out
cmp
sub
add
mov
mov
popf
xor
scas
in
pop
and
xor
cmp
adc
dec
dec
(bad)
pusha
adc
or
pop
ja
inc
inc
cli
cmps
mov
xchg
jmp
dec
push
(bad)
pop
out
mov
push
cmp
aam
(bad)
adc
sub
pop
cmps
shl
and
aam
jecxz
push
jl
push
adc
int3
stc
mov
aad
push
pop
add
retf
cmp
lea
pop
mov
popf
cmp
xor
stos
sbb
xor
rcl
xchg
add
xchg
or
rol
jmp
jno
imul
pop
push
lahf
dec
jae
dec
das
mov
or
out
mov
cs
stos
not
or
popa
add
lods
mov
sub
jo
jb
jecxz
and
bound
out
(bad)
int3
add
in
popa
sub
jbe
cwde
jno
inc
push
js
adc
and
mov
jge
cs
inc
mov
cwde
out
push
and
ret
jb
or
enter
xor
imul
push
aam
xchg
add
mov
rcr
movs
mov
enter
jbe
in
daa
push
xchg
or
pop
ss
mov
test
int3
xchg
ja
pop
mov
(bad)
add
(bad)
jns
daa
sub
(bad)
add
inc
je
sbb
fld
or
cs
std
xchg
loop
add
pop
mov
sbb
mov
inc
xchg
int3
aam
jbe
cli
jl
pop
add
(bad)
popa
add
mov
loope
adc
scas
cli
inc
dec
test
inc
mov
(bad)
in
adc
pop
mov
and
dec
sub
stos
inc
(bad)
push
mov
jno
(bad)
pusha
bound
clc
stos
add
out
xor
dec
(bad)
in
ret
cmp
add
xchg
cs
dec
and
adc
scas
rcl
pop
out
sub
jae
dec
int
pop
test
push
jb
dec
dec
scas
aad
cs
cmp
jl
mov
adc
pop
fwait
rcl
test
jmp
jno
mov
dec
cmps
fld
cli
cmp
stos
jl
ss
ss
mov
mov
ficomp
scas
data16
adc
(bad)
jp
hlt
aaa
push
add
daa
jbe
xchg
jmp
adc
ins
jb
fwait
or
cdq
sub
pop
lea
xor
fst
loop
sbb
mov
lds
fwait
imul
pop
xlat
pusha
fimul
or
jl
jae
dec
aaa
jge
pop
mov
mov
or
jecxz
sub
cmp
mov
stos
dec
lahf
mov
inc
arpl
or
(bad)
xchg
sti
scas
ds
cmps
xchg
jne
outs
or
sbb
inc
out
cmps
xchg
push
cmp
(bad)
xchg
mov
out
aad
out
sub
jo
jl
ret
push
or
mov
jmp
mov
pop
add
inc
in
repz
inc
inc
es
mov
pop
adc
call
dec
cwde
mov
into
retf
add
rol
ja
fucomip
or
add
sahf
or
(bad)
jo
mov
mov
inc
sbb
enter
mov
pop
jmp
stos
cmps
fucom
loope
sbb
mov
call
mov
mov
or
cmp
mov
hlt
in
dec
adc
sbb
inc
adc
inc
adc
sahf
jno
or
and
mov
xchg
sub
in
js
inc
jmp
adc
jecxz
sbb
push
inc
cmp
std
cli
fld
jp
jns
sti
mov
and
add
and
js
adc
lods
push
ret
add
or
out
jle
pop
mov
outs
sbb
pushf
out
cmp
adc
(bad)
or
leave
xor
sbb
jns
icebp
mov
push
cmp
mov
sub
cmp
adc
mov
int
push
sbb
stos
lahf
shl
xor
push
sub
jns
icebp
sbb
test
retf
pop
daa
imul
jecxz
or
add
jbe
shl
popa
jno
xlat
cli
shl
sub
jge
shl
fdecstp
dec
or
popf
mov
jb
cmps
inc
or
mov
add
sbb
mov
jg
cmp
mov
ret
inc
adc
dec
add
ret
sbb
adc
mov
pop
cmp
cwde
jno
inc
ja
mov
push
push
jmp
ins
ficomp
inc
pop
je
dec
ja
ins
and
jb
add
imul
aaa
and
add
xor
mov
int
and
test
cmp
es
and
adc
mov
xchg
sub
lahf
into
out
test
in
fdivr
xchg
jmp
pop
mov
adc
xchg
leave
out
cmp
sbb
dec
std
and
adc
sbb
or
fld
add
mov
std
adc
pop
sub
adc
mov
mov
ret
adc
std
xchg
daa
cmp
cs
cdq
stos
xor
dec
out
or
stos
retf
ja
pop
pop
cwde
gs
xor
(bad)
dec
int
shl
fwait
jge
bound
push
mov
add
sbb
adc
xchg
mov
push
xor
jns
data16
test
fidiv
imul
dec
(bad)
mov
mov
mov
mov
in
sti
jge
inc
push
xor
js
adc
xchg
mov
xor
ror
pop
cli
(bad)
jl
ss
popf
into
popa
mov
ficom
sub
mov
xlat
xchg
int3
push
pop
sti
xchg
mov
outs
fwait
popf
fild
mov
xchg
or
pop
test
push
imul
jns
adc
adc
out
cmp
popf
sbb
or
sbb
mov
popf
xor
push
fistp
mov
push
cmp
xchg
mov
repnz
fild
jns
sbb
or
add
cmc
and
aam
js
mov
push
je
sub
stos
dec
nop
cmp
pop
xor
xchg
fadd
(bad)
fild
pop
jb
cmp
or
or
sub
(bad)
mov
push
or
jns
xchg
jle
scas
retf
cmps
adc
pop
mov
xor
xchg
xor
cmps
addr16
or
fbld
ins
clc
rcr
pop
stc
(bad)
jmp
cmps
mov
sbb
jmp
test
xlat
shl
sbb
(bad)
add
sub
aam
mov
cmp
xchg
xor
test
xchg
cmp
(bad)
sub
sbb
lods
xor
xor
xchg
lahf
test
bound
aaa
pop
xor
sti
(bad)
popa
add
aad
out
sub
inc
xor
inc
and
call
loopne
xor
fcomp
stos
xchg
fbstp
mov
sub
retf
(bad)
sub
fcom
sub
jecxz
inc
daa
cmp
cs
sub
in
icebp
mov
or
arpl
xor
xor
lods
sub
pop
xor
push
or
mov
jecxz
dec
popa
and
in
popf
test
stos
pop
inc
test
xchg
mov
(bad)
mov
ins
fs
jl
daa
xlat
retf
(bad)
in
aam
inc
call
and
inc
sub
xchg
scas
adc
jp
push
mov
repnz
test
(bad)
jle
daa
or
ret
xor
stos
jl
inc
sahf
icebp
dec
xor
ret
ja
pop
cmps
mov
stc
sti
scas
into
call
mov
cmp
adc
pushf
mov
daa
mov
adc
xchg
ja
arpl
and
in
pop
pusha
jae
dec
bound
mov
stc
cmps
mov
in
sbb
cmc
push
ret
and
cmp
jno
shl
push
sub
js
rcr
push
ret
add
loop
jae
mov
mov
xchg
nop
cmp
pop
and
sub
call
mov
cmp
outs
xchg
jmp
push
xor
sti
xlat
xchg
repnz
cld
test
sub
mov
cmp
(bad)
outs
popa
daa
or
int
mov
mov
sahf
pop
sbb
dec
aam
dec
addr16
cli
jo
jg
adc
cmp
sahf
int
or
gs
dec
scas
pop
add
pop
xor
cmp
cmovge
stos
dec
aad
mov
jno
fadd
jge
cwde
sub
lods
les
pop
add
pushf
fmul
and
fistp
sahf
call
jecxz
adc
enter
sbb
xchg
or
sbb
cli
int
push
je
dec
xchg
xor
call
test
fst
rcl
xchg
jno
std
adc
mov
mov
lds
addr16
xor
pop
ins
icebp
push
mov
stc
call
out
adc
push
out
sub
jo
fiadd
and
mov
(bad)
in
int
inc
(bad)
aam
dec
or
add
pop
ja
push
(bad)
daa
sub
stos
lahf
push
xchg
mov
cmp
ror
cmp
pop
fcmovnu
fcomi
push
xor
(bad)
ret
cmps
retf
mov
sub
fs
mov
adc
push
movs
jle
inc
add
ror
and
fsubrp
repz
adc
popf
pusha
les
ret
cdq
jo
jo
mov
fimul
and
ret
mov
or
mov
stos
pop
sahf
jae
stc
sub
hlt
push
xor
pushf
(bad)
pop
pusha
jmp
push
out
not
xchg
pop
daa
xor
dec
add
push
push
xor
sbb
push
and
repnz
jne
jns
pop
je
mov
xlat
xchg
pop
daa
mov
ret
dec
add
push
push
xor
xor
retf
mov
mov
retf
ror
fidivr
and
sub
aas
popa
cs
movs
mov
push
xor
stos
sbb
fst
cs
push
nop
mov
or
mov
adc
ins
mov
arpl
inc
daa
and
leave
aam
mov
ss
and
add
pop
arpl
fst
in
jp
cdq
jo
mov
and
data16
shl
call
add
stos
neg
repz
std
cmps
sti
cwde
dec
loop
bound
sub
push
out
inc
sub
stos
(bad)
test
stc
sub
or
mov
pop
sub
(bad)
popa
or
mov
jns
(bad)
and
mov
out
(bad)
in
inc
daa
jb
and
or
arpl
and
test
cmp
push
xor
mov
adc
ins
mov
arpl
inc
daa
or
xchg
mov
cld
div
stos
inc
add
fs
xor
add
icebp
pop
shr
(bad)
mov
and
out
gs
setp
aam
jbe
cli
pop
test
mov
push
repnz
jmp
sub
adc
mov
popa
test
loop
(bad)
mov
(bad)
add
(bad)
rcr
ss
xor
popa
mov
int
add
movaps
mov
xor
jne
es
ror
aaa
(bad)
xchg
daa
dec
or
mov
adc
push
not
inc
outs
popa
mov
pop
addr16
lock
mov
adc
xchg
movs
mov
pop
inc
jno
aaa
iret
push
scas
cdq
jl
mov
inc
mov
mov
push
push
or
jo
arpl
sub
fsubr
mov
cld
scas
das
ret
mov
shl
mov
arpl
aam
and
push
cmc
(bad)
popa
mov
adc
jbe
std
jb
ss
out
call
cmps
cs
mov
mov
arpl
aam
rol
stos
imul
in
xchg
mov
inc
out
pop
mov
adc
push
pop
js
inc
fcom
and
dec
mov
inc
xchg
repnz
jecxz
mov
mov
rcl
sub
jbe
int3
cmp
fisub
add
xor
das
outs
into
or
pushf
sbb
enter
std
shl
pusha
mov
push
xor
jns
adc
scas
call
test
dec
mov
inc
xchg
mov
dec
cld
mov
nop
in
or
xor
repz
push
and
add
mov
push
and
mov
ret
jmp
mov
sahf
mov
retf
inc
push
and
in
rol
neg
ja
add
aaa
mov
xchg
mov
xchg
add
(bad)
stc
push
popa
mov
int
std
cmps
mov
cdq
sti
and
xchg
and
dec
dec
jb
push
xchg
sbb
into
fs
scas
mov
sahf
pop
stc
add
rcr
fdiv
inc
mov
mov
mov
enter
mov
xchg
sbb
add
or
mov
popa
mov
sub
push
arpl
pop
push
cmp
mov
ss
ja
sar
mov
dec
pushf
mov
cld
or
xlat
jge
lds
push
xor
ss
cdq
jo
out
test
xchg
xor
xor
mov
(bad)
int
jmp
inc
test
pusha
mov
in
pop
je
fmul
push
adc
jno
data16
jo
mov
xor
sbb
and
push
dec
sti
mov
stc
scas
in
xor
and
mov
aad
je
sbb
lahf
rol
push
scas
cmp
sbb
mov
dec
retf
xor
fs
inc
xchg
iret
cmp
xchg
mov
pop
jp
fdiv
jns
fisubr
mov
xor
and
jnp
sbb
add
inc
inc
cld
mov
pop
jl
xchg
ja
or
ins
call
jo
mov
(bad)
in
lea
sbb
adc
adc
sysret
xor
push
cs
shr
cbw
pop
cmc
adc
loope
loope
or
fmul
movs
cmp
sub
inc
mov
add
popa
gs
pusha
adc
xor
aam
mov
bound
(bad)
sub
addr16
xor
xor
sbb
in
loopne
call
sbb
inc
adc
mov
call
mov
ss
popf
xor
cmc
push
jmp
push
and
or
arpl
push
clc
aaa
imul
cmp
adc
push
out
sub
jo
mov
sbb
jb
mov
xchg
fistp
arpl
inc
lock
icebp
adc
dec
movs
push
arpl
call
xor
and
xlat
stc
xchg
push
mov
popa
sbb
leave
cmp
retf
test
dec
lea
jge
mov
jp
mov
retf
out
cmp
psadbw
test
inc
and
and
push
imul
push
adc
xchg
xor
pop
jae
sub
jo
mov
fucomi
mov
ins
test
inc
xor
push
(bad)
in
push
inc
ror
(bad)
retf
icebp
sbb
xchg
sbb
fcomi
add
lock
fist
test
or
push
ret
stos
ror
sbb
xchg
xlat
call
nop
adc
sub
sub
mov
ret
loope
fsubp
mov
lods
push
call
add
ror
scas
or
pop
out
xchg
cmp
leave
cdq
repz
jne
cwde
lods
mov
jecxz
add
sbb
pop
dec
pop
adc
popa
xchg
dec
mov
cmp
push
pop
shl
sub
mov
mov
mov
test
add
xchg
rol
cmp
adc
(bad)
fnstcw
xchg
mov
sub
jae
pop
call
pop
dec
in
xchg
sbb
or
test
add
add
lods
cdq
mov
aad
scas
xchg
repz
adc
cwde
cmp
call
push
out
and
stos
test
jmp
cmps
adc
mov
lds
icebp
sbb
pusha
adc
pop
mov
sbb
aam
xor
repnz
nop
mov
jbe
mov
ficom
sub
lods
jae
outs
mov
pop
dec
pushf
cmp
jbe
stos
jae
ret
cmp
shl
add
adc
std
mov
jo
cmp
and
xor
mov
pop
dec
adc
stos
inc
push
jmp
fistp
and
jns
fcom
test
ds
into
out
and
mov
in
or
xor
clc
(bad)
popa
dec
(bad)
mov
push
xor
js
adc
out
mov
cmp
mov
daa
jbe
clc
mov
rol
movs
xor
mov
inc
jbe
mov
pop
ins
jecxz
xchg
jne
jo
leave
rol
(bad)
addr16
add
xchg
stc
cmps
push
outs
popf
das
push
mov
jl
inc
jb
ss
div
lods
pop
call
ins
xor
mov
out
inc
sbb
hlt
add
mov
mov
or
adc
mov
dec
in
adc
xchg
mov
mov
in
pop
add
iret
mov
fild
adc
pop
xor
int
sbb
aam
arpl
xor
cs
nop
mov
adc
push
jne
xchg
cld
xchg
leave
out
cmp
jns
and
das
inc
xor
add
in
push
inc
cmp
pop
icebp
sbb
xchg
sbb
fcomi
add
lock
fist
aad
sahf
inc
daa
cmp
rol
xor
stos
xor
mov
clc
(bad)
popa
push
push
mov
scas
loop
add
xchg
call
ret
popf
lods
rcl
lds
addr16
(bad)
or
add
or
arpl
mov
pop
out
sar
cli
out
mov
out
(bad)
sahf
inc
ins
into
imul
movs
pusha
nop
mov
jae
xchg
(bad)
xor
sahf
or
test
mov
lea
sahf
inc
popa
adc
dec
scas
add
jl
add
icebp
cmp
push
mov
sub
(bad)
in
sub
adc
push
popa
loope
sbb
aaa
(bad)
mov
ror
(bad)
mov
mov
imul
or
xchg
loop
or
cmp
xchg
rcl
xchg
sti
scas
ds
retf
lods
xor
daa
fisubr
lds
mov
mov
push
mov
dec
pusha
push
mov
jp
popa
dec
ror
sub
repnz
mov
push
sub
in
inc
loopne
jbe
dec
(bad)
in
bndldx
inc
cmp
push
in
jb
imul
int
xchg
fldln2
jg
cdq
jo
mov
ret
jle
jge
lods
(bad)
jbe
int
in
(bad)
lea
aam
jne
out
push
mov
mov
fnstcw
mov
add
mov
sub
xchg
xchg
jb
mov
sub
adc
xor
std
jp
sahf
pushw
mov
test
std
outs
sahf
in
cmp
and
daa
or
or
pop
nop
lea
loop
add
std
cwde
jl
pushf
jno
fdiv
fdiv
mov
outs
sub
pop
add
mov
shl
aas
pop
xor
mov
xor
leave
adc
xchg
mov
shr
shl
ss
(bad)
lods
xor
cmp
sbb
imul
call
xchg
xlat
pop
data16
or
arpl
sub
(bad)
adc
out
mov
int
addr16
dec
dec
jg
sbb
add
fisttp
xor
dec
loope
mov
sub
mov
sub
cdq
lock
leave
adc
out
stc
fisub
into
bound
cmp
call
push
ret
sub
pop
loopne
lea
popa
mov
int
ins
imul
fcomp
test
jne
mov
xchg
mov
arpl
ret
push
sbb
stc
(bad)
fisubr
inc
dec
out
sub
push
xchg
and
cmp
stos
add
push
mov
mov
cmp
arpl
push
ret
sub
push
jo
std
sahf
pusha
mov
pop
push
sub
ss
js
ret
push
test
xchg
and
lea
out
mov
push
mov
mov
test
mov
mov
test
cmp
ins
std
sahf
xchg
dec
sub
scas
(bad)
add
cld
xchg
or
xchg
xchg
pop
inc
(bad)
and
cmp
test
fdivp
cmp
sub
pop
fs
jne
daa
into
inc
daa
or
jmp
idiv
int3
aam
push
fst
jns
and
or
cli
stos
cdq
mov
xor
push
sbb
lods
data16
jae
retf
xchg
das
push
pop
rcl
fsubrp
repz
adc
xchg
mov
sub
mov
loope
je
jecxz
into
arpl
(bad)
ror
pop
addr16
aad
xor
cmps
xor
stc
(bad)
cmps
into
xchg
lds
sub
js
addr16
add
xchg
mov
dec
xchg
outs
movs
das
adc
pushf
mov
sub
gs
add
fst
sub
(bad)
sbb
mov
and
pop
call
out
inc
mov
not
retf
mov
or
mov
jns
call
popf
ins
push
jl
mov
loope
push
dec
push
cmp
aam
fadd
adc
(bad)
mov
retf
jmp
fidivr
cmp
mov
test
lds
mov
jle
out
mov
push
hlt
pop
scas
mov
inc
xor
and
enter
pop
jno
ss
inc
movs
je
cwde
or
daa
and
dec
add
ror
sbb
mov
aaa
sbb
jl
loope
mov
in
retf
cdq
fsub
xor
enter
mov
mov
idiv
addr16
jecxz
das
cmp
sbb
stos
not
popa
ror
dec
movs
push
(bad)
iret
mov
add
jno
data16
in
jb
in
in
sbb
push
and
fsubrp
repz
adc
mov
call
sbb
sbb
add
daa
add
ret
pop
addr16
aad
xor
mov
clc
(bad)
popa
gs
dec
out
jnp
out
sub
and
jmp
adc
mov
push
xchg
movs
inc
add
icebp
push
mov
stc
add
mov
mov
sub
cld
dec
in
xor
adc
adc
sub
mov
cwde
sub
push
mov
jge
adc
fidiv
push
ja
js
adc
xchg
add
in
adc
dec
pop
jecxz
sub
pop
push
loop
and
cmc
test
(bad)
xor
std
lods
sub
aad
lods
sub
jo
sahf
add
sub
jecxz
pop
jmp
call
cmp
cli
mov
in
retf
xor
dec
adc
pop
out
lds
mov
mov
popf
sub
jge
xchg
mov
jg
or
inc
xor
jo
push
mov
sbb
mov
mov
scas
retf
repz
test
sbb
dec
jns
jecxz
jg
ror
sbb
stc
dec
inc
xor
imul
mov
sub
cmp
inc
ins
jecxz
outs
(bad)
xchg
jns
imul
ds
dec
das
jg
or
pushf
sbb
arpl
cmp
js
leave
mov
push
mov
mov
xor
enter
mov
dec
cdq
sub
or
push
pop
adc
popf
add
mov
ins
test
js
iret
sbb
or
inc
jo
mov
lods
sbb
mov
daa
mov
enter
test
pop
push
fcmovnbe
daa
pop
jnp
pop
sti
xchg
into
xchg
add
lahf
fwait
lock
call
and
aam
rep
(bad)
jl
pop
nop
cmp
dec
mov
lea
popf
leave
outs
mul
loope
cs
std
daa
cmc
jns
push
jg
xchg
mov
arpl
or
dec
sub
cmp
stc
ja
test
and
dec
call
jno
data16
into
adc
dec
dec
mov
and
inc
push
addr16
pushf
test
pop
repz
add
js
xor
pop
jl
daa
or
ja
jmp
cmp
arpl
pop
int3
fild
imul
cmp
je
lea
xor
cli
jae
jg
adc
ret
push
sbb
xor
hlt
cs
int
inc
xor
std
adc
pusha
mov
fist
xor
pusha
loopne
mov
and
mov
arpl
sub
(bad)
sbb
pop
sbb
mov
aam
(bad)
pop
cwde
jo
(bad)
cwde
mov
test
icebp
sub
sbb
sbb
cmps
fptan
jmp
xchg
fmul
neg
scas
out
imul
push
lahf
fwait
xor
or
out
add
repnz
out
or
push
icebp
xchg
add
pop
test
or
mov
sub
adc
push
xor
mov
out
add
pop
inc
mov
or
push
pop
aaa
push
adc
hlt
je
push
gs
rol
xlat
(bad)
fisubr
add
pop
mov
call
out
mov
mov
and
(bad)
popa
or
push
cmps
adc
repnz
xchg
dec
scas
into
push
inc
enter
xchg
dec
loopne
jo
dec
(bad)
and
aam
jbe
and
(bad)
popa
ror
shr
xor
cmps
xabort
and
xchg
loope
push
adc
(bad)
sbb
jmp
sahf
sbb
cmp
nop/reserved
add
or
movs
outs
lea
fidiv
adc
push
enter
fidivr
or
in
add
mov
jb
adc
mov
mov
inc
rcl
cdq
daa
data16
sub
(bad)
test
sbb
ret
adc
pop
jb
out
add
or
dec
in
leave
lods
pop
pop
out
jp
cmp
leave
sti
and
mov
cmps
or
mov
or
push
xor
sbb
test
in
fdivr
xchg
jmp
xor
inc
cmp
mov
scas
popa
cmp
jecxz
jo
ror
sahf
mov
sbb
fsub
test
mov
fs
lahf
stos
shr
jns
cdq
cwde
jb
adc
loope
pop
cwde
jb
cmp
outs
xchg
add
cmp
xor
push
mov
lods
into
jmp
(bad)
and
push
adc
adc
into
das
mov
pushf
ror
adc
(bad)
mov
mov
inc
mov
push
pop
gs
scas
mov
into
inc
dec
das
test
ins
sub
cmps
sbb
or
and
out
pop
push
mov
stc
add
(bad)
mov
push
cwde
adc
out
cmp
popf
sahf
aad
inc
je
dec
push
dec
(bad)
imul
repz
mov
mov
std
fdiv
ins
int
inc
xchg
daa
pusha
jno
lock
pop
fsubr
or
inc
pushf
(bad)
(bad)
idiv
(bad)
aam
xor
xchg
add
inc
(bad)
jmp
int
pop
mov
mov
(bad)
lds
sub
mov
jb
ret
cmp
or
pushf
xor
rcr
sbb
push
cmp
cmps
in
xchg
mul
inc
xchg
jp
add
sar
push
lds
sbb
or
inc
std
cdq
into
pusha
mov
pop
mov
popa
icebp
pop
xor
ret
push
pop
pop
jge
xor
xchg
pop
arpl
xchg
jno
(bad)
add
pop
jb
mov
jno
(bad)
jge
cmp
popa
jns
push
pop
mov
call
sbb
push
cli
int3
ins
(bad)
je
xchg
add
mov
mov
cli
cwde
fmul
gs
push
imul
ficom
imul
jecxz
ror
sbb
inc
push
and
stos
idiv
jno
or
pop
out
jmp
pop
test
sub
add
cdq
fnstcw
(bad)
push
daa
test
inc
icebp
jl
jmp
or
fs
adc
leave
cdq
jo
mov
sub
ins
pop
inc
jno
jge
dec
(bad)
in
popa
in
movs
push
cwde
jno
inc
pushf
push
mov
jl
adc
hlt
int
lods
sub
(bad)
pop
aaa
cli
rcr
in
cwde
sbb
test
lds
addr16
aad
xor
sub
mov
mov
push
lods
xor
adc
cmps
cmp
out
add
push
(bad)
jmp
push
dec
pusha
cmc
or
arpl
cmp
clc
sbb
stc
nop
sahf
sti
cdq
pusha
xchg
fwait
xor
jno
call
jne
and
jae
les
sbb
repz
int
jmp
dec
jb
cmp
xchg
mov
ficomp
data16
(bad)
mov
inc
mov
inc
and
es
or
mov
xor
inc
cmp
push
xor
jns
data16
lods
jne
addr16
inc
jge
out
mov
sbb
mov
cli
pop
xchg
mov
jnp
jno
ja
and
popa
pop
dec
aad
je
ja
xbegin
pop
lock
jle
xchg
inc
(bad)
jno
hlt
in
ret
xor
stos
jl
pop
push
jnp
jno
ja
and
imul
je
mov
xor
adc
dec
xchg
aad
adc
ins
stc
popf
pop
pop
pop
rcl
and
sub
je
(bad)
out
inc
sbb
cwde
xor
jmp
or
pop
mov
in
retf
mov
or
gs
arpl
inc
sub
sahf
xor
xor
jmp
mov
mov
sbb
push
mov
mov
stc
xchg
ss
rcl
xchg
adc
jns
test
inc
daa
and
(bad)
aam
mov
push
or
mov
in
cs
jb
into
inc
and
and
jge
daa
imul
xor
mov
mov
cmp
stos
xor
cmp
adc
mov
addr16
shr
lea
lahf
scas
xor
std
push
nop
in
cmc
xor
and
xlat
cli
sahf
test
movs
repz
adc
add
sti
dec
mov
pop
push
cmp
push
fld
and
stos
ret
push
sahf
lea
jno
add
out
sub
(bad)
scas
retf
xchg
neg
arpl
aas
rep
ror
push
arpl
(bad)
mov
call
dec
ret
fist
adc
and
bound
(bad)
and
and
xchg
aaa
xchg
daa
std
lods
mov
std
jl
mov
jo
cdq
lea
fimul
lds
imul
jno
mov
(bad)
shl
mov
xchg
or
ret
sbb
xchg
or
push
mov
cmp
add
pop
xchg
xchg
push
mov
call
pop
mov
xchg
push
cmp
pop
cvtpi2ps
sub
outs
and
or
sbb
cs
xchg
mov
cmps
mov
xchg
dec
lock
(bad)
xchg
mov
jns
sbb
dec
popa
sub
in
fadd
adc
sbb
adc
cs
jns
leave
std
outs
into
out
cmp
and
and
xchg
or
loope
adc
dec
out
or
sbb
popa
(bad)
mov
adc
aad
scas
(bad)
retf
sti
lods
push
ret
cmp
or
sub
jo
xchg
cmp
cmp
stos
or
aad
test
push
das
jne
(bad)
pusha
inc
test
jge
bound
cmps
pop
xchg
sbb
loopne
ins
mov
stc
lods
sahf
fld
loop
jle
xchg
gs
jo
leave
rol
sahf
in
xor
dec
lods
loopne
dec
or
pushf
sub
jno
pusha
or
inc
xchg
jmp
retf
in
pop
jge
cwde
fwait
neg
stos
and
push
xchg
lea
es
mov
add
out
lds
adc
dec
xor
xor
mov
into
xor
int3
push
stc
xor
dec
cmps
stc
cmp
push
xor
jl
cmp
push
push
(bad)
push
mov
push
and
iret
push
dec
add
inc
inc
push
pusha
stc
scas
mov
adc
sub
push
sbb
ret
xor
xchg
sub
outs
and
dec
es
dec
imul
daa
in
or
xor
fmul
stos
dec
(bad)
out
and
ror
pop
cmp
jnp
sbb
add
xchg
int
jns
xor
sbb
inc
sbb
sub
cmp
cmp
lods
sub
std
scas
fiadd
das
cdq
mov
sbb
loopne
or
out
cmovne
jecxz
cmc
adc
stc
fsub
cmp
mov
ror
push
scas
pushf
push
jns
(bad)
ins
int3
ja
and
pop
pop
inc
sub
(bad)
pop
mov
cmp
mov
mov
cwde
mov
adc
and
das
movs
mov
hlt
pop
pop
xchg
es
push
jno
cdq
dec
aam
out
inc
or
push
xor
cmc
cmps
push
pop
mov
repnz
sub
pushf
popf
pop
inc
fisttp
mov
push
or
mov
sub
(bad)
adc
inc
dec
xchg
ss
jne
daa
xlat
stc
adc
and
movs
sbb
and
cs
and
int3
xchg
mov
(bad)
scas
sbb
inc
scas
jecxz
cdq
cwde
adc
adc
leave
rol
jge
out
jne
mov
sbb
cmp
mov
pop
sbb
(bad)
popa
iretw
jb
test
loopne
outs
sub
jae
add
fimul
fndisi(8087
pop
daa
add
fldcw
pop
arpl
cmps
(bad)
aaa
sbb
dec
enter
xor
and
pop
loope
xchg
cdq
and
(bad)
jmp
sbb
or
scas
out
cmps
(bad)
mov
mov
test
mov
aaa
adc
or
cwde
adc
mul
rol
std
fcmovnb
pop
not
mov
fmul
push
test
sub
mov
mov
xor
out
xor
sbb
mov
pushf
je
pop
jno
inc
xor
mov
xchg
(bad)
in
or
jne
test
aad
inc
rol
pop
pop
add
fstp
fistp
xor
stos
jp
ret
out
push
cmp
mov
adc
xchg
add
icebp
sub
adc
aas
inc
jg
lods
or
ret
hlt
retf
fild
fnstcw
popa
add
sahf
data16
mov
pop
rol
(bad)
fstp
rol
or
lahf
mov
sbb
sub
pop
(bad)
push
out
cs
cmp
xor
pop
jmp
loop
jmp
rcl
sbb
xor
mov
xor
mov
ins
mov
mov
mov
dec
in
jne
out
sub
int
or
or
pushf
inc
daa
sbb
dec
dec
sbb
out
retf
adc
jns
mov
(bad)
adc
jo
pop
es
add
or
arpl
(bad)
int
push
push
mov
push
push
in
in
(bad)
gs
add
push
mov
arpl
add
addr16
inc
call
jns
aam
call
ds
int3
xchg
pusha
pop
push
xor
jns
cdq
sbb
arpl
add
jg
pop
daa
fstp
(bad)
cmps
aam
xor
ds
mov
pusha
xlat
push
xor
inc
xchg
pop
xor
ss
popf
aaa
(bad)
(bad)
stc
aas
inc
jl
bound
out
xchg
or
pop
retf
inc
sbb
not
imul
repnz
sub
xor
mov
mov
es
ret
jb
cmc
push
cmp
loop
int
push
push
mov
push
push
ret
retf
xchg
movs
ja
sub
adc
out
cwde
addr16
jl
inc
and
imul
aam
lds
pop
loope
mov
rcl
mov
cmp
xor
mov
dec
rcl
cdq
je
addr16
jo
cmp
or
or
or
arpl
add
rep
scas
lds
fadd
and
out
inc
adc
xor
imul
cwde
lods
sub
ret
inc
sbb
hlt
in
cmps
aam
ret
or
adc
(bad)
or
ja
push
lods
sub
data16
xchg
mov
aas
rol
or
xchg
or
pop
inc
repz
lock
fwait
or
xchg
hlt
je
sub
lods
push
ret
fidiv
mov
and
add
mov
scas
into
aam
lds
pop
loope
mov
mov
sub
jo
out
xchg
sbb
aaa
pop
add
daa
or
(bad)
cs
cwde
cmc
imul
test
jo
inc
call
pop
outs
sub
iret
mov
dec
es
retf
shr
xchg
cmp
cmc
imul
pop
sbb
jae
je
stc
(bad)
xor
mov
adc
push
test
aaa
fimul
sub
pop
out
inc
mov
cmc
sub
pusha
mov
stc
xor
retf
cmp
inc
inc
cmp
ror
cmps
into
xchg
mov
jecxz
sahf
int
or
ss
mov
jg
popa
mov
movs
mov
jo
add
xchg
mov
data16
daa
or
fwait
mov
sbb
sub
out
xchg
(bad)
mov
mov
out
sub
cwde
shl
xchg
movs
pop
cmps
or
add
push
mov
mov
sbb
sar
add
popf
push
jle
and
and
retf
inc
pop
(bad)
fdivr
ret
add
fsubr
sbb
mov
sub
pop
xor
xchg
leave
jecxz
outs
ja
mov
inc
mov
ins
push
ret
arpl
(bad)
aas
inc
stos
add
mov
xchg
pop
arpl
arpl
cmp
js
ins
mov
mov
jecxz
xchg
popa
ret
test
cmp
ret
movs
xor
sbb
xor
stos
or
mov
cld
xor
mov
retf
shr
push
ret
enter
jge
sti
sbb
jecxz
daa
inc
xchg
or
imul
mov
call
push
fstp
out
sub
jo
mov
ds
mov
cwde
jne
daa
or
lock
loopne
sub
mov
adc
sub
push
inc
test
adc
cmps
cld
jae
(bad)
adc
and
test
rol
in
adc
aad
ret
sbb
push
inc
mov
aad
jecxz
(bad)
repnz
jmp
es
icebp
jns
retf
pop
daa
and
push
or
inc
xchg
test
arpl
mov
xchg
or
xchg
jnp
paddusw
out
sub
jne
mov
retf
xchg
fdivr
and
shl
lea
int
mov
test
clc
mov
data16
test
cwde
call
jmp
stc
xchg
mov
cmc
fidivr
ror
jo
xor
push
add
cmps
stos
mov
sub
push
cwde
dec
xor
jno
adc
out
cwde
ficomp
ret
jb
bound
shr
mov
test
hlt
or
lods
sub
jo
jb
sub
test
call
dec
dec
sbb
cdq
dec
inc
xor
(bad)
lods
dec
lea
(bad)
mov
jns
movs
shr
adc
outs
lds
xor
jle
hlt
pop
push
jbe
mov
ins
cmps
stos
mov
pop
xchg
xlat
and
inc
dec
arpl
sub
(bad)
imul
push
(bad)
stc
loopne
stos
adc
hlt
xchg
outs
lods
dec
inc
xor
popa
repz
ror
in
push
jmp
rol
outs
jne
in
xchg
mov
repz
(bad)
in
sbb
pop
inc
pop
sbb
adc
xchg
ret
retf
xor
retf
shl
shr
out
mov
pusha
dec
test
xor
dec
hlt
aas
and
vsqrtps
or
(bad)
push
mov
shl
stos
dec
aam
retf
sbb
ret
cdq
fimul
in
cwde
addr16
inc
loope
adc
(bad)
in
mov
pop
js
stos
popf
push
dec
add
mul
mov
jo
adc
fsubp
leave
cdq
leave
out
aaa
adc
cdq
fbstp
dec
retf
jmp
mov
mov
out
xor
popf
push
or
sbb
or
adc
cli
cli
scas
inc
out
adc
aas
inc
dec
lea
pop
dec
ds
mov
lahf
(bad)
dec
loopne
scas
mov
mov
jns
add
adc
out
adc
or
imul
jmp
or
into
in
inc
xchg
or
ins
pop
or
inc
jno
ja
sub
push
out
pop
sub
adc
adc
icebp
sbb
dec
fdivr
or
sbb
(bad)
fisubr
cld
int3
out
sbb
cmp
mov
leave
push
test
or
out
cdq
cmp
hlt
aas
jb
xchg
int
pop
test
dec
sahf
or
test
(bad)
leave
cdq
dec
mov
sbb
pushf
cmp
add
push
test
ret
mov
dec
test
xor
aas
adc
mov
mov
ror
test
loop
push
aam
inc
inc
and
jb
mov
pop
sub
popa
test
xchg
pusha
mov
das
call
out
cmp
mov
retf
out
daa
imul
rcl
inc
xor
sbb
and
pop
and
xor
(bad)
(bad)
dec
mov
add
jne
adc
adc
or
pop
xchg
sub
rcl
cmp
cmps
mov
rol
add
jmp
ret
data16
adc
out
test
xchg
push
xchg
or
xchg
ins
aam
int3
sub
push
push
mov
adc
mov
inc
cmc
ja
push
int
jns
icebp
mov
cmp
fistp
xchg
push
fidivr
sbb
das
push
pop
or
cmp
push
sbb
adc
xchg
xor
(bad)
xchg
adc
xchg
(bad)
scas
jmp
sub
mov
sub
push
fisttp
push
cs
xor
pop
mov
sub
mov
out
mov
pushf
dec
jge
xchg
in
dec
push
cmp
or
(bad)
popa
ffree
(bad)
push
and
cmp
cdq
cwde
jbe
adc
loope
pop
mov
push
sti
dec
dec
pusha
cmc
mov
arpl
pop
mov
push
or
stos
test
jmp
cld
imul
sub
jne
and
sub
jb
add
hlt
cs
lahf
jmp
xchg
add
pop
jmp
adc
pop
mov
cdq
sbb
mov
fisub
mov
push
in
or
sti
test
idiv
retf
icebp
aas
mov
lods
sub
jo
push
sbb
adc
or
adc
mov
mov
pop
mov
neg
or
push
repz
xchg
push
sbb
cdq
jno
mov
or
nop
imul
jo
mov
je
mov
int3
test
out
out
mov
outs
mov
sbb
xchg
push
iret
into
in
jecxz
cmp
inc
push
lock
icebp
cmp
retf
xor
retf
jns
push
in
test
je
cmp
push
lods
fs
and
mov
out
(bad)
movs
sub
xchg
out
outs
add
pusha
icebp
cs
and
adc
add
jmp
movs
aaa
push
adc
sahf
mov
xchg
mov
ds
stc
(bad)
aam
(bad)
movs
not
add
mov
push
push
cwde
pop
jns
jns
repz
cwd
xchg
adc
hlt
jp
pop
pop
cmps
shl
or
shl
not
aam
jmp
cmps
ds
or
pop
xor
repnz
(bad)
xor
pop
into
mov
mov
push
mov
std
mov
dec
aam
retf
sbb
fcom
out
cwde
addr16
jp
jle
mov
dec
in
clc
int3
pushf
jno
adc
retf
push
mov
fdivr
push
test
fsubr
pop
sub
sub
stc
aas
inc
fdiv
mov
hlt
sahf
mov
out
ret
push
stc
jle
adc
mov
int
push
add
mov
xor
fisttp
pop
mov
mov
cs
adc
int3
cmc
adc
outs
or
and
cmps
stos
shl
(bad)
lods
push
ret
cmp
xor
lea
dec
cmp
sahf
ins
mov
add
pop
push
and
(bad)
push
rcl
std
dec
in
jae
jae
inc
pop
mov
adc
daa
add
and
sbb
and
push
rcr
and
jns
pop
test
cmps
les
scas
into
dec
cwde
mov
mov
adc
jns
(bad)
xchg
xlat
sub
fsubr
adc
adc
mov
pop
and
or
jmp
push
cmc
xchg
sbb
fistp
or
pop
pop
adc
(bad)
popa
in
ror
int3
cmps
adc
cli
cld
dec
xchg
in
ins
rcl
test
mov
(bad)
hlt
ror
jb
mov
not
add
cli
aam
(bad)
sti
xor
xchg
mov
jbe
addr16
stos
or
pop
mov
ins
xchg
scas
xchg
mov
and
mov
cmp
pop
leave
xlat
mov
mov
mulps
add
addr16
pop
mov
push
lds
sbb
mov
(bad)
int
icebp
xchg
xchg
pop
fld
fdiv
xchg
mov
in
jge
int3
sti
pop
mov
sbb
fidiv
adc
(bad)
xchg
dec
sbb
xchg
jb
pop
push
jp
aad
sbb
lea
xor
gs
ret
ror
or
push
(bad)
call
pop
inc
lahf
push
sbb
fsqrt
mov
add
mov
jle
push
pop
cdq
jo
(bad)
adc
push
and
or
jne
in
je
add
sbb
(bad)
sbb
or
cld
adc
aad
das
jno
pop
adc
inc
jb
sahf
pusha
stos
aas
gs
out
pusha
jg
lock
push
fnsave
pop
test
sbb
(bad)
mov
mov
cmp
jp
jb
ret
ror
sbb
adc
je
inc
xchg
nop
mov
sub
std
lahf
adc
inc
mov
inc
daa
add
xchg
jne
mov
int
mov
aad
mov
(bad)
xlat
retf
mov
out
aad
push
bound
mov
mov
jmp
jnp
xor
idiv
aas
inc
iret
and
push
retf
outs
data16
adc
mov
push
dec
cmp
popa
fistp
and
jl
jnp
std
outs
es
cmp
and
fmul
aaa
jmp
das
in
sbb
lds
mov
mov
aas
xor
scas
loop
push
aam
add
pop
push
sbb
pop
sub
mov
call
out
aad
mov
fsubp
ds
jno
inc
dec
pop
stos
pop
out
test
or
adc
jecxz
mov
dec
mov
dec
xchg
outs
cmp
aam
pusha
dec
std
jp
arpl
push
cmp
data16
pop
test
fnstsw
rcl
xchg
add
inc
aaa
xor
jecxz
stc
int
mov
pushf
jno
adc
in
or
jae
test
in
(bad)
aad
xor
test
imul
xor
mov
dec
sbb
mov
test
daa
mov
dec
repnz
xchg
or
and
or
jge
jns
adc
test
out
cmp
and
in
mov
dec
cwde
mov
int
mov
cwde
inc
repz
mov
xchg
mov
push
add
pop
arpl
cwde
dec
adc
loope
mov
cmp
sahf
inc
loop
add
ror
sbb
adc
sbb
jp
dec
jmp
cmp
leave
cmps
adc
(bad)
cdq
sub
rcl
mov
popa
pop
in
loopne
push
or
(bad)
jl
ss
std
(bad)
popa
mov
lock
jle
jns
sbb
adc
rcr
test
sar
cmps
inc
das
pop
loopne
sbb
or
daa
or
sub
stc
js
push
xor
dec
mov
(bad)
pop
mov
mov
out
mov
dec
xchg
mov
hlt
in
aad
inc
xor
mov
loop
jle
xchg
adc
rol
pop
idiv
daa
xlat
and
rol
add
jno
mov
cs
xchg
mov
imul
mov
sbb
out
inc
push
test
jge
push
xchg
sbb
push
adc
aam
push
add
add
mul
mov
mov
sbb
dec
leave
cdq
(bad)
cmp
aaa
ficomp
in
mov
ss
(bad)
aam
ins
inc
fsubrp
stos
cmp
mov
cmp
sub
xchg
test
out
adc
push
repnz
inc
daa
fadd
adc
xchg
(bad)
ins
cmp
mov
sub
xor
jns
sbb
push
je
or
imul
pop
in
jne
inc
xor
cmp
stc
int3
xchg
test
and
(bad)
sub
xor
fisubr
and
pusha
sub
pop
mov
lahf
xor
mov
in
iret
push
stc
(bad)
xchg
sub
addr16
cmp
sub
and
dec
xchg
cmp
push
or
cmc
push
sub
adc
pop
test
pop
out
sub
jo
xor
(bad)
mov
mov
sbb
aam
inc
or
idiv
mov
jnp
pop
int3
pop
out
fld
xchg
adc
jo
inc
xor
jge
daa
or
shl
xchg
push
aam
xor
popf
adc
jg
cs
ja
mov
fld
lods
sub
mov
outs
popf
inc
and
inc
xor
or
cmc
pop
sbb
shr
stos
pop
stos
mul
mov
fcmovnbe
mov
push
frstor
not
cmp
mov
aaa
test
or
rcl
add
push
xor
not
xchg
ror
les
pop
out
sub
push
in
xchg
inc
daa
push
mov
(bad)
leave
aam
pusha
dec
std
popf
push
pop
icebp
or
sahf
or
and
xchg
sub
cdq
cmc
(bad)
mov
dec
in
mov
das
mov
int
inc
int
push
ja
or
pop
pushf
mov
or
sub
xchg
adc
xchg
add
fsub
inc
rol
push
fwait
dec
enter
sbb
popa
push
xor
cld
lahf
movs
hlt
push
stc
cs
xchg
mov
(bad)
mov
call
jmp
adc
push
loop
jge
stos
cmp
in
sti
dec
and
ins
jp
sbb
(bad)
popa
mov
pop
out
sub
jo
mov
sub
fisubr
inc
stos
or
in
pop
lahf
jmp
xchg
add
pop
jns
(bad)
popa
jns
lods
rcl
pop
out
sub
jns
pushf
cwde
scas
outs
adc
jmp
mov
movs
or
cmp
or
jl
arpl
es
in
mov
iret
adc
mov
(bad)
fdivr
xor
xchg
call
mov
xchg
ror
sahf
mov
cmp
std
mov
les
or
(bad)
xchg
cwde
and
cmp
pop
cmp
or
pop
inc
fld
in
(bad)
sti
hlt
mov
mov
fwait
push
mov
mov
or
sti
mov
add
jae
dec
lods
mov
(bad)
aam
shr
or
popa
mov
out
cwde
pop
inc
dec
gs
clc
mov
and
(bad)
xchg
push
inc
out
jle
ror
in
(bad)
adc
aaa
sbb
jl
ss
add
fdivp
fidiv
sub
cmp
mov
jecxz
repnz
int
xchg
ret
or
mov
(bad)
rcl
xchg
repz
in
xchg
clc
scas
mov
int3
xor
xchg
arpl
xlat
sbb
cmp
pop
test
or
test
mov
mov
pop
sahf
cmp
call
dec
jmp
push
add
adc
or
mov
(bad)
aaa
adc
cmp
lahf
aas
(bad)
push
mov
dec
or
cli
in
xor
rep
mov
and
or
loop
paddusw
pop
add
adc
push
and
call
enter
push
out
cwde
inc
adc
stos
nop
ss
ja
jmp
pop
stos
pop
xor
sub
(bad)
test
stc
cmps
push
sbb
lock
xchg
out
push
cmp
retf
and
inc
pop
iret
imul
repz
imul
pop
push
cmps
js
jecxz
(bad)
jmp
adc
arpl
pop
jbe
cmp
adc
xchg
jnp
neg
mov
(bad)
lahf
xor
push
sbb
pop
and
jb
xlat
add
sar
shl
pop
inc
pop
and
push
or
lods
cdq
pop
pop
fdiv
xchg
pusha
jae
jmp
push
out
lock
stos
and
jecxz
ror
sbb
and
pop
jae
pop
adc
xchg
or
scas
add
jmp
adc
pop
mov
xor
or
pop
enter
out
movs
fpatan
xor
xchg
xor
jnp
test
sbb
adc
jb
shr
mov
cmp
inc
jo
xor
rcl
mov
out
daa
(bad)
xor
inc
mov
xor
mov
shl
add
out
cmp
mov
xchg
loope
sbb
mov
sub
jecxz
stos
pop
(bad)
dec
jmp
jg
ror
jge
add
scas
adc
ret
xor
push
mov
popa
sbb
iret
cmp
shl
jle
xchg
add
or
pop
arpl
inc
fcomi
jae
jb
cmp
clc
sahf
inc
inc
adc
dec
js
ror
sbb
fisttp
xor
retf
adc
or
mov
jecxz
adc
sub
mov
into
aam
and
mov
xor
shl
sub
idiv
ret
data16
mov
jne
cmps
or
stos
lds
push
cmp
adc
psubsb
mov
lods
sub
jns
dec
test
cmps
ds
sar
xlat
sti
scas
adc
pop
pop
sub
cmps
cmp
ror
in
lds
pop
add
adc
(bad)
xor
adc
push
fst
retf
adc
adc
push
cli
out
cmp
jmp
mov
inc
inc
mov
jp
jge
push
fucom
sahf
(bad)
popf
ja
inc
pop
stos
xchg
ins
sub
mov
fisub
cmc
mov
out
rol
jle
or
stc
(bad)
in
retf
icebp
fs
or
retf
adc
(bad)
nop
repnz
xor
cmc
sbb
aas
jmp
stos
not
je
inc
mov
loop
mov
cmps
cmp
pop
adc
adc
mov
iret
mov
and
std
int3
leave
and
loop
mov
int3
test
sbb
xor
dec
fwait
mov
mov
and
sbb
pop
bswap
popa
sbb
mov
and
test
nop
jecxz
inc
xchg
or
cmps
adc
test
lahf
and
mov
ins
push
mov
ret
into
mov
xor
ror
ins
mov
fild
or
loop
paddusw
add
aad
pop
data16
push
jns
jg
push
pop
dec
jg
cmp
add
outs
inc
fnstcw
aam
stos
ja
mov
mov
fucom
pop
sub
push
add
add
outs
sbb
stc
push
adc
(bad)
dec
cmp
pusha
dec
std
popf
push
pop
xchg
adc
sahf
xor
mov
outs
sub
dec
xchg
hlt
push
ss
add
addr16
and
call
mov
add
pop
push
idiv
pop
sbb
pop
pop
pop
int3
jmp
add
std
cmp
mov
aaa
adc
mov
push
cmp
cwde
jno
inc
inc
mov
in
in
xchg
test
xchg
cmc
and
movs
jmp
dec
nop
enter
mov
or
loope
sbb
jno
or
je
and
fisub
inc
fdiv
dec
mov
iret
sub
xchg
fdiv
mov
xor
lock
dec
adc
es
scas
sbb
cmc
adc
outs
loopne
mov
sbb
cmp
ror
mov
and
cmpxchg
sbb
push
inc
cmp
push
mov
loope
stos
cs
ins
outs
ja
sbb
or
mov
(bad)
jae
nop
push
adc
les
xor
in
add
bnd
or
mov
cmp
outs
aas
fwait
or
out
sub
jmp
sbb
in
and
or
mov
push
js
jg
arpl
in
daa
sahf
jno
int
fidiv
mov
lock
adc
aaa
mov
xchg
sub
pop
inc
mov
fcomi
dec
or
and
ror
jb
call
sahf
pop
(bad)
xchg
adc
xor
(bad)
sub
mov
jmp
sar
data16
mov
inc
jb
das
in
scas
push
adc
loopne
out
mov
int3
pop
ret
test
jmp
stc
je
mov
cmp
sub
movs
out
adc
push
(bad)
xchg
enter
push
dec
sbb
(bad)
xor
dec
jp
mov
pop
test
mov
loope
sbb
popa
cwde
mov
out
daa
jle
adc
mov
jae
call
jmp
imul
pop
rcl
je
and
rcl
dec
and
and
or
xor
repz
inc
add
pop
(bad)
add
je
ror
push
ret
jmp
in
sbb
jecxz
sbb
dec
xor
dec
shl
fistp
jo
mov
jne
imul
sti
cmp
mov
or
xor
pop
cmc
and
mov
idiv
mov
mov
rcr
test
jo
push
les
mov
lods
push
imul
push
fnstenv
inc
cmp
mov
push
(bad)
in
in
retf
dec
ins
arpl
pop
dec
das
fcom
into
(bad)
scas
mov
dec
cmp
mov
pop
jbe
pusha
aaa
out
sti
inc
pop
and
lds
fsub
imul
fcom
xor
sub
aas
jle
repz
cs
iret
or
cmp
or
sbb
icebp
adc
int3
stos
pop
shl
cs
push
adc
sbb
sub
pop
dec
push
call
jae
lods
xchg
repz
(bad)
call
or
jg
je
hlt
sub
xchg
retf
fimul
sti
cmps
push
popa
adc
movs
mov
push
xor
stos
push
movs
mov
stc
dec
push
xchg
xor
jge
lea
inc
out
fisub
dec
je
push
(bad)
push
das
add
or
out
mov
jp
xchg
add
mov
out
mov
pop
aas
js
sbb
test
(bad)
lods
mov
jb
lds
call
cmp
xor
(bad)
or
mov
adc
and
pop
popa
ja
ss
push
mov
out
add
popf
push
pop
jo
std
xchg
pusha
mov
pop
mov
sub
sahf
jno
adc
pusha
idiv
addr16
jecxz
cmp
inc
aam
int3
sub
pusha
push
mov
mov
pop
pop
pushf
pop
mov
xchg
retf
sti
lods
push
ret
add
cwde
cmp
(bad)
lods
das
or
(bad)
inc
cmp
adc
sahf
(bad)
cli
(bad)
add
add
pop
adc
in
daa
and
popa
or
push
iret
aam
cmc
pop
push
idiv
retf
pop
or
in
sub
and
jne
aaa
dec
mov
repnz
dec
sbb
jbe
out
fild
fld
cdq
adc
mov
sub
and
or
out
or
and
jae
shr
add
popf
push
rol
adc
(bad)
loop
jno
sbb
ss
out
inc
sub
cdq
inc
sub
and
ret
mov
sbb
xchg
out
(bad)
mov
dec
(bad)
push
pop
jmp
mov
data16
pop
cmp
mov
pop
jg
add
dec
sbb
in
add
ja
test
dec
imul
sahf
shr
mov
popf
into
in
jge
lods
or
pop
mov
and
lds
add
out
(bad)
sar
data16
or
dec
sar
inc
in
jl
mul
(bad)
outs
popf
call
and
jp
sub
in
push
daa
test
movs
bound
stos
dec
lods
dec
(bad)
popa
mov
sub
std
cmps
adc
jp
into
jno
add
ret
push
and
jg
sbb
dec
mov
sub
and
(bad)
popa
or
and
cmps
addr16
add
nop
add
ret
push
sbb
fbld
xor
dec
ret
xchg
loop
nop
xlat
das
(bad)
icebp
adc
popa
and
xchg
cmc
cmp
popf
mov
out
jbe
daa
adc
dec
sub
cmps
(bad)
(bad)
jle
sti
jl
jo
adc
ror
dec
in
leave
stos
fsubr
cmp
xchg
and
les
sub
repnz
(bad)
fcom
popa
(bad)
sbb
mov
sti
shl
stc
mov
mov
cmp
xor
inc
and
jno
in
pop
jl
or
es
std
inc
stc
inc
sub
mov
push
mov
inc
add
(bad)
mov
add
jne
in
cmp
lea
dec
sahf
adc
push
idiv
retf
imul
fisub
sub
inc
xlat
imul
mov
out
mul
(bad)
in
dec
jmp
in
push
cmp
or
xchg
scas
push
imul
sub
xor
dec
inc
and
jno
es
neg
inc
cmp
stc
cmc
xchg
movs
aam
mov
pop
sub
jmp
dec
dec
pop
jge
cwde
or
hlt
jle
ins
dec
xchg
add
mov
bsf
clc
(bad)
call
popa
mov
hlt
dec
sbb
and
push
jb
les
stos
paddusb
mov
fst
xchg
fld
int
cmp
test
jmp
addr16
add
add
in
retf
lea
cs
icebp
mov
dec
inc
sbb
mov
jo
popf
or
pushf
fadd
xor
inc
sbb
mov
ret
sbb
pop
lds
js
add
xchg
fisub
or
mov
sbb
fld
scas
imul
dec
out
sub
ja
adc
xchg
(bad)
retf
lea
mov
std
mov
push
sub
sbb
jmp
lock
mov
mov
mov
test
icebp
fs
cmp
out
and
mov
sub
xchg
arpl
pop
inc
and
adc
popa
and
sahf
out
sub
cmp
mov
fisub
or
or
vmovdqu
jecxz
out
int
mov
ins
mov
mov
adc
popa
mov
inc
pop
aam
pop
loope
bnd
cdq
sti
scas
into
call
shr
push
retf
outs
push
xchg
push
xor
stos
idiv
jmp
add
and
(bad)
jecxz
(bad)
mov
jns
stos
inc
scas
std
jnp
(bad)
call
sbb
sub
mov
aad
xor
add
popf
or
jl
mov
mov
fwait
inc
fisttp
push
mov
mov
xchg
pop
ffree
jp
sub
dec
in
jae
adc
lea
jns
in
jle
dec
(bad)
outs
pushf
repz
and
fiadd
fdiv
pop
xlat
nop
sub
cmp
cmc
mov
xchg
mov
dec
mov
es
cmp
fdivrp
fcomip
loope
mov
mov
jb
mov
int3
sti
pop
mov
dec
imul
sub
lds
sbb
ss
out
addr16
cmp
pop
push
int
push
repz
jnp
cmp
push
fld
mov
dec
dec
mov
int
or
ins
push
pop
lahf
and
xchg
add
out
push
sub
adc
push
shr
cld
xor
xchg
ds
inc
xchg
and
cmp
dec
sahf
or
push
xor
xchg
dec
dec
das
lods
pop
cmps
jb
or
in
cmp
fist
movs
jo
mov
stc
dec
daa
mov
aam
mov
sub
fsubr
dec
loop
dec
mov
lods
clc
jecxz
inc
out
mov
icebp
cdq
xchg
shl
xlat
shl
xchg
add
mov
and
push
xor
mov
lds
or
popf
sbb
sbb
adc
stc
dec
and
sbb
ins
fidiv
arpl
sub
adc
lds
jne
ds
test
lea
hlt
outs
fbld
push
sbb
xlat
mov
adc
arpl
data16
adc
adc
in
sub
movs
arpl
or
push
inc
test
push
lds
jae
jno
ja
or
pop
out
lds
mov
mov
(bad)
pushf
arpl
sbb
cmp
sub
and
pop
out
adc
aam
sub
lds
and
mov
mov
jle
jge
daa
imul
lods
(bad)
push
adc
call
gs
or
mov
test
jns
in
rol
das
xchg
ret
push
scas
jmp
push
mov
cmp
movs
cmp
int3
and
mov
xchg
test
(bad)
cli
mov
fsub
outs
mov
cld
mov
leave
push
cmp
and
fnstcw
or
mov
lds
mov
mov
mov
cmc
pop
push
inc
jne
imul
cmc
xchg
jp
and
mov
cmp
les
outs
push
sbb
aas
daa
hlt
pop
dec
cmc
push
mov
inc
cdq
pusha
mov
mov
xor
jno
ss
retf
cmp
and
cli
popa
in
sbb
popa
jp
out
dec
movzx
nop
mov
cmp
xchg
and
and
inc
dec
out
or
dec
mov
in
mov
jae
push
jp
out
cmps
xlat
jg
je
test
add
rcl
hlt
into
jns
mov
add
(bad)
pop
shl
sub
rcr
(bad)
dec
xor
mov
mov
pusha
in
pusha
inc
mov
cmps
imul
jg
jo
jmp
adc
loop
addr16
mov
out
fistp
or
inc
nop
adc
sti
scas
movs
ficomp
xor
inc
scas
sbb
inc
retf
js
cdq
sti
xor
and
icebp
xchg
in
sbb
repz
pop
pop
mov
jno
aad
mov
rcl
sub
repz
pushf
xchg
mov
cmp
rcr
push
retf
outs
mov
pop
stos
dec
mov
adc
mov
add
ret
data16
adc
jnp
add
and
ja
jo
mov
imul
aad
inc
push
dec
into
(bad)
cli
(bad)
add
add
pop
sub
out
and
ins
inc
daa
add
or
cmp
xor
push
mov
cmp
in
mov
shl
adc
jecxz
push
daa
test
stos
(bad)
mov
aad
add
mov
push
push
bound
or
mov
cmps
pop
push
repz
loope
test
stc
bswap
sub
xlat
or
loopne
hlt
mov
sbb
mov
add
mov
jns
fmul
out
push
ss
inc
dec
scas
cmp
dec
xchg
xlat
daa
jecxz
ins
int3
aam
jmp
jno
add
pusha
jne
nop
outs
outs
ja
dec
stos
sbb
inc
and
into
or
mov
cmp
mov
arpl
cs
and
inc
in
sub
in
cs
and
stos
das
xor
mov
fidiv
sbb
aas
or
mov
arpl
and
xor
hlt
push
mov
inc
sub
cdq
sbb
jne
ret
sbb
add
xchg
add
or
int3
xchg
pop
pop
lods
dec
jmp
fst
sbb
data16
adc
mov
inc
mul
stc
data16
cs
arpl
jp
out
or
popf
push
popa
or
inc
add
call
mov
(bad)
xchg
and
sub
mov
xchg
sti
sbb
push
pop
lds
(bad)
sub
dec
nop
xor
in
push
fstp
ins
aad
or
mov
mov
cmp
inc
daa
jb
outs
bndcl
hlt
mov
shl
push
xchg
in
retf
jns
dec
mov
das
push
sbb
adc
xor
aaa
lock
ror
shr
jmp
sbb
arpl
mov
xchg
jno
jo
mov
int3
out
stc
fsub
das
and
retf
repz
test
cmp
mov
xor
aaa
adc
(bad)
mov
jae
aas
aam
out
sub
dec
ss
out
cmp
popf
mov
jno
xchg
mov
adc
(bad)
xor
xor
pop
fcomp
stc
dec
sbb
sub
addr16
sub
in
push
xor
ret
push
cmps
lds
inc
stc
ficomp
cmps
rcr
xor
sub
arpl
sub
sahf
faddp
pusha
sub
pop
or
fisttp
adc
push
jecxz
dec
pop
lods
lds
test
jbe
fisub
test
test
mov
add
inc
sub
mov
mov
mov
movq
xchg
xchg
pop
lds
ret
xchg
gs
push
pushf
lods
and
fidiv
gs
(bad)
inc
test
xchg
mov
es
ror
jo
fwait
mov
lahf
mov
adc
sub
mov
dec
es
in
cmp
cld
lahf
mov
test
add
sbb
dec
int
push
dec
aam
adc
adc
pop
test
or
psubq
sbb
ret
push
mov
and
out
ud2
mov
jl
mov
jbe
cdq
or
out
sahf
lods
pop
mov
sub
jo
lea
pop
sub
and
mov
jbe
daa
jb
dec
jmp
pop
cmp
icebp
sub
in
clc
mov
xchg
mov
xchg
cld
inc
daa
rcr
mov
pop
inc
fisttp
mov
mov
sub
mov
mov
fwait
js
int3
jnp
(bad)
adc
add
push
xor
inc
daa
and
or
jmp
dec
cmp
xor
movs
pop
fnstsw
ins
inc
mov
pop
ins
jmp
add
lea
pop
sub
and
sbb
dec
(bad)
mov
push
repnz
sub
int3
leave
ins
mov
mov
and
push
or
repnz
popa
sbb
adc
add
aaa
xchg
mov
mov
mov
jmp
jge
inc
popa
mov
mov
aas
call
adc
rcr
movs
and
or
mov
mov
popf
or
std
and
pop
pop
and
mov
push
sub
mov
push
pop
sbb
scas
mov
push
or
ins
in
lods
and
pop
inc
int3
inc
hlt
lods
popf
jne
stc
inc
lea
arpl
data16
outs
add
push
cld
mov
ret
gs
pop
daa
mov
fisubr
jg
and
jno
sub
push
in
(bad)
mov
or
bnd
(bad)
fidivr
xchg
mov
int
cmps
push
in
retf
adc
xor
jno
and
fisubr
test
fst
rcl
lock
mov
inc
pop
ja
mov
sbb
jecxz
xchg
jmp
lock
pop
(bad)
sub
fcomip
sub
inc
scas
sbb
test
ins
jns
jecxz
push
and
inc
test
adc
sbb
fist
xor
pop
fisttp
and
rcr
iret
repz
ss
cmp
jb
add
hlt
in
inc
nop
sub
stc
(bad)
aaa
out
cdq
or
out
sub
retf
jmp
cwde
cmp
xchg
ror
fsub
jmp
mov
add
popa
fisttp
test
sub
jns
or
cwde
(bad)
xor
pop
test
xchg
aaa
(bad)
jle
sbb
inc
and
add
ja
mov
fs
imul
dec
mov
or
shr
fsubp
pop
imul
sub
and
jecxz
dec
aam
ja
loop
iret
cmp
popf
pop
and
(bad)
out
ins
sub
xchg
jmp
fldenv
pop
popa
loope
sbb
(bad)
and
lock
mov
popa
fst
xor
rcr
sub
pushf
xor
out
cmp
lock
das
das
addr16
mov
lds
das
dec
xor
mov
stos
sahf
cli
mov
leave
jmp
dec
dec
inc
int
mov
jnp
mov
stc
ins
mov
sbb
mov
mov
pop
mov
xchg
jno
clc
sub
or
lods
push
ret
add
rol
cmp
pushf
xor
shl
ret
add
jp
add
mov
cmc
xchg
aad
(bad)
adc
sar
ret
sub
sbb
mov
out
shl
xchg
xor
(bad)
pop
ins
mov
cmc
aad
je
fwait
mov
fidiv
inc
xor
xor
push
xchg
mov
arpl
out
dec
sub
popa
bnd
pop
sbb
cmp
rol
sub
lods
pop
xchg
adc
jo
ds
push
arpl
xlat
sbb
popa
sbb
and
push
daa
add
loope
push
rcr
sti
cmp
cli
aad
je
mov
adc
ret
(bad)
jno
xor
inc
in
pop
in
jmp
(bad)
or
(bad)
stc
mov
aad
or
push
cld
ss
add
sub
call
mov
push
repnz
sub
int3
leave
and
fwait
cmp
xor
xchg
lahf
retf
add
mov
sub
shl
arpl
push
jle
dec
stos
in
pop
and
jno
adc
aad
mov
jo
neg
inc
and
add
xor
or
arpl
sub
mov
jg
scas
sub
xor
out
inc
inc
and
cmps
adc
out
adc
xor
loop
dec
mov
lods
in
jle
call
jno
aam
and
mov
pop
test
mov
and
jmp
fs
loope
sahf
pop
js
mov
jae
ror
in
and
sbb
stc
add
in
(bad)
popa
or
and
rcr
popf
stos
adc
cwde
xchg
iret
daa
xor
jge
mov
add
xchg
push
jb
ret
dec
jb
lea
xor
ret
xor
pop
stos
outs
push
mov
jl
daa
jmp
mov
hlt
in
not
add
cmp
test
mov
push
fstp
xchg
sub
gs
mov
lea
mov
pop
dec
in
call
and
jmp
jl
les
jns
nop
sub
sub
cmp
mov
in
jnp
out
jne
mov
in
int
add
jae
or
inc
scas
jmp
push
push
add
xor
sub
jns
shr
add
les
mov
lea
xor
xor
stos
cmp
jl
adc
test
push
mov
xchg
mov
inc
stos
sahf
pusha
dec
xlat
adc
mov
mov
push
xchg
add
mov
lds
ret
call
je
mov
ficom
imul
and
mov
in
loop
dec
loopne
sub
ja
mov
mov
jmp
and
add
call
(bad)
sub
sbb
push
(bad)
or
and
xchg
shl
test
pop
mov
add
push
fstp
dec
dec
xchg
test
jno
ss
pop
iret
sub
and
(bad)
mov
ja
mov
pop
fst
push
pusha
mov
pop
imul
adc
push
fmul
call
and
sbb
in
std
mov
inc
mov
sub
mov
call
scas
dec
neg
ret
inc
(bad)
or
out
mov
(bad)
push
xor
test
xchg
mov
movs
pop
scas
aam
sub
in
push
push
test
inc
daa
mov
or
rol
add
popf
push
rol
stc
(bad)
jmp
pop
out
(bad)
mov
and
(bad)
jae
mov
fwait
(bad)
in
xor
(bad)
xchg
sbb
jg
popa
mov
rcl
loopne
jmp
cwde
inc
bound
addr16
sub
mov
aas
(bad)
arpl
out
mov
pop
adc
sbb
test
gs
and
jns
leave
cwde
test
adc
add
pop
sub
ss
jle
imul
out
shl
outs
(bad)
popa
push
aad
mov
cmc
sub
mov
jo
idiv
mov
je
xor
inc
iret
mov
cmc
sbb
inc
cmp
cmp
xchg
mov
adc
dec
push
pop
push
add
push
repz
retf
jne
cwde
cmp
mov
mov
leave
arpl
cmp
mov
fwait
std
or
popa
mov
int3
test
retf
inc
cld
cdq
jo
inc
xor
addr16
push
movs
pop
or
in
hlt
outs
inc
sar
inc
sbb
cmps
cwde
cmp
xor
jno
out
jl
inc
sbb
jno
jno
lods
daa
div
jge
mov
inc
cmp
ins
inc
jb
jmp
mov
pop
fst
mov
nop
cmp
xor
cwde
inc
daa
or
psadbw
out
or
sbb
fs
push
mov
stc
adc
nop
mov
nop
mov
jns
jno
and
out
xchg
out
ss
xchg
jle
jle
mov
das
fs
out
mov
dec
pop
mov
stc
mov
sub
add
inc
jo
cmp
imul
inc
pop
retf
push
push
xor
arpl
mov
jo
icebp
(bad)
popa
mov
nop
jb
sub
dec
xchg
in
leave
cli
sar
pop
(bad)
adc
mov
pop
or
es
cmp
(bad)
cmp
xchg
stc
(bad)
xor
stc
push
push
add
xor
sub
jns
shr
push
mov
cmp
xor
enter
in
jbe
cmc
test
(bad)
xor
jge
inc
scas
mov
cmp
daa
add
gs
push
add
cmp
mov
in
or
pop
pop
sar
test
jo
inc
xchg
jns
mov
movs
pop
pop
cmps
mov
ret
push
and
adc
retf
(bad)
es
xchg
fwait
test
sub
lahf
push
mov
stc
lods
push
jae
mov
sub
jo
ss
mov
not
cwde
lods
jne
jb
mov
xor
xchg
or
xor
stc
(bad)
popa
xorps
or
repnz
sub
std
fisub
test
add
mov
push
sub
jmp
cmp
jg
ds
sub
dec
in
or
neg
jge
daa
jb
outs
or
aam
pop
xchg
aas
jmp
mov
stc
xchg
in
retf
icebp
fidiv
cli
jge
cmp
inc
xor
push
xchg
(bad)
mov
pop
dec
ds
and
inc
fcmovu
retf
xor
dec
sub
mov
scas
mov
pop
adc
popf
adc
push
ret
cmps
sub
ror
dec
mov
add
cwde
ins
int
mov
push
mov
sahf
or
adc
imul
mov
pop
xor
or
jle
(bad)
pop
das
repnz
(bad)
push
adc
mov
jp
or
in
imul
lahf
ja
and
xor
cmp
jmp
loope
jl
pushf
jno
fcomp
cmp
mov
cmp
xor
ror
lea
scas
sbb
xchg
outs
fsubr
(bad)
jmp
dec
pusha
test
inc
xor
dec
xlat
push
jns
loop
mov
adc
in
popa
pop
pushf
mov
push
or
xor
push
mov
jge
iret
into
lea
xor
nop
movs
pop
out
idiv
(bad)
mov
arpl
arpl
adc
inc
adc
cld
push
addr16
ror
cli
cmps
adc
cli
cli
jae
add
data16
jg
push
pop
dec
jg
lods
sub
cmp
add
retf
icebp
or
lods
dec
(bad)
ffreep
fdivp
xchg
jo
out
xchg
jns
xor
into
or
adc
shl
and
maskmovq
test
imul
adc
jl
outs
add
mov
mov
cmp
push
cmp
push
and
jmp
mov
hlt
in
xor
or
cmps
std
les
popa
mov
pop
add
(bad)
sub
hlt
add
aas
(bad)
ss
dec
je
inc
cmp
pop
arpl
neg
sub
not
lea
mov
pop
es
popa
(bad)
sahf
ret
xchg
mov
imul
pop
in
xor
mov
and
jns
push
push
xor
xchg
xchg
(bad)
sahf
into
inc
sub
test
lea
hlt
outs
fwait
fwait
cmp
int3
out
jge
loope
bound
xchg
outs
xchg
sub
sub
frstor
repz
ret
aam
(bad)
sub
sbb
stc
(bad)
aam
adc
or
and
mov
retf
or
adc
popf
adc
sub
ret
or
cs
retf
mov
fld
jp
cdq
(bad)
and
sub
idiv
cmp
(bad)
sbb
fldcw
mov
cmp
cwde
jno
inc
cmps
call
cdq
or
ret
pop
xor
ret
adc
xor
shl
outs
js
aam
dec
adc
(bad)
or
leave
xor
cmp
xchg
fdiv
dec
xor
aas
cmp
in
(bad)
xlat
sbb
mov
fld
pop
mov
cmps
pop
sbb
(bad)
adc
dec
pop
sbb
pop
jl
sbb
jae
xchg
movs
loope
adc
cmp
daa
retf
add
test
int3
add
sub
xor
retf
add
mov
pop
(bad)
cmps
loop
mov
lods
mov
jb
je
add
scas
and
(bad)
jo
das
sbb
xchg
cmp
push
loope
xchg
je
add
add
loopne
out
lock
and
dec
mov
push
sub
addr16
(bad)
push
sahf
mov
pop
add
test
inc
loopne
inc
mov
jbe
loopne
dec
das
mov
mov
and
pop
fsubr
enter
bound
push
adc
(bad)
push
mov
push
push
add
je
dec
jp
pop
jge
mov
cld
pop
dec
push
and
push
hlt
dec
mov
sbb
enter
les
push
adc
(bad)
cmc
leave
fmul
lds
dec
repz
lock
les
mov
adc
mov
dec
jp
mov
xchg
bnd
imul
int
adc
mov
mov
mov
je
cmp
cs
outs
jecxz
inc
add
neg
js
push
jge
loope
mov
loopne
jmp
xor
adc
jbe
push
jnp
add
pusha
mov
jno
sbb
push
pop
js
push
mul
cmp
loopne
into
push
mov
cmp
enter
lods
cmp
out
bound
mov
sbb
iret
fs
sar
lods
cmp
mov
mov
iret
or
xor
sbb
mov
adc
jp
mov
test
in
rcr
jne
fs
adc
xchg
mov
mov
fidiv
aam
inc
hlt
daa
mov
mov
mov
sub
push
jnp
arpl
leave
enter
sub
jl
cmp
pop
lock
xchg
rol
pushf
dec
mov
sahf
iret
sbb
loopne
test
jno
xor
daa
pushf
aad
loopne
retf
add
xlat
jl
jle
sar
add
xchg
mov
mov
xor
pop
dec
repz
dec
jmp
pop
int3
shl
push
cs
rcr
sub
lock
sti
pop
jge
pop
test
rol
and
cmp
ja
add
mov
push
in
rcr
sub
mov
or
mov
cmc
aam
inc
stos
jb
iret
sbb
xor
xchg
or
lods
and
adc
(bad)
(bad)
cmps
loop
ins
daa
pushf
loop
cmp
aad
add
mov
rcl
daa
mov
pusha
fimul
inc
push
dec
push
(bad)
lods
adc
sub
pop
arpl
daa
jecxz
out
in
mov
sub
adc
pop
lea
xchg
and
jmp
pop
mov
fild
fidiv
into
call
jmp
cmp
cs
repnz
sbb
std
mov
cmp
jns
iret
push
xor
clc
mov
out
jne
in
xor
les
push
mov
call
ins
jb
pushf
dec
cwde
mov
mov
dec
push
nop
jnp
dec
lock
aad
mov
std
cmps
xor
fdiv
int3
aam
mov
cmp
cmp
and
sub
jl
into
inc
and
sbb
dec
mov
cmps
shl
adc
pushf
push
push
pop
adc
les
into
(bad)
cli
sahf
not
call
sbb
ret
push
sbb
loop
push
(bad)
(bad)
sbb
stos
fisubr
xor
ins
out
cmp
add
stc
enter
mov
cmp
arpl
cs
push
sbb
jno
push
fnstcw
adc
icebp
inc
add
mov
fdivr
fdivrp
and
arpl
push
dec
imul
mov
aas
cmp
outs
shl
(bad)
add
xchg
aad
xor
hlt
(bad)
loope
sub
cmp
adc
xchg
push
out
das
fwait
(bad)
clc
call
out
inc
push
add
or
sbb
shl
jp
cmp
faddp
or
arpl
movs
dec
neg
xchg
lock
xchg
inc
dec
mov
enter
lods
or
dec
pop
inc
repnz
cmp
dec
pop
mov
push
cld
sbb
loope
push
add
xor
popa
adc
xor
hlt
mov
in
(bad)
imul
(bad)
fnsave
push
dec
iret
dec
xchg
call
das
sub
xchg
(bad)
mov
shr
mov
push
lock
adc
lds
imul
sbb
xchg
test
push
add
js
cdq
scas
shr
or
bnd
add
jbe
neg
sbb
sbb
arpl
xchg
jp
jmp
aad
aaa
leave
fwait
enter
inc
adc
cmps
ret
push
dec
jg
inc
xchg
inc
push
jno
test
fwait
add
sub
call
loope
arpl
and
cmp
(bad)
retf
cmc
push
test
pop
xchg
add
cmp
addr16
xchg
push
push
ins
nop
xor
adc
add
int3
repz
jmp
jae
ret
xlat
mov
mov
ficom
popf
(bad)
(bad)
and
cmp
push
cwde
mov
xchg
add
push
jle
lods
or
fs
cmp
lods
aas
cli
pop
daa
xchg
cmp
sub
pop
dec
mov
daa
push
mov
push
add
inc
mov
push
mov
sub
push
ret
ror
adc
dec
stos
jbe
dec
inc
adc
aas
cmp
pusha
inc
xchg
js
cmps
cmc
pusha
dec
cmp
outs
push
xor
or
xchg
and
sub
add
daa
mov
mov
jno
add
sub
stc
test
pushf
and
outs
dec
daa
xor
add
std
mov
loopne
ds
dec
xchg
(bad)
cmps
int
fst
xor
add
or
sub
adc
stos
cli
cmp
jmp
inc
aam
xor
or
add
pop
arpl
or
ret
(bad)
jmp
dec
inc
sub
xchg
xor
sub
je
mov
nop
adc
jo
fidivr
push
(bad)
in
mov
dec
(bad)
mov
sbb
inc
lock
sbb
stc
lods
imul
jb
push
xor
hlt
pop
mov
sub
fisub
dec
stos
xor
dec
(bad)
mov
sbb
inc
lock
sbb
stc
lods
imul
sub
in
hlt
pop
mov
sub
fisub
cmp
mov
div
in
or
leave
xchg
mov
fistp
sbb
and
sub
aaa
mov
sub
xor
dec
push
popf
pop
sub
sbb
mov
ins
push
mov
and
pop
retf
push
mov
jns
jno
es
out
dec
lods
and
jge
sbb
hlt
in
sbb
call
adc
xchg
jno
pusha
shl
pop
arpl
jo
arpl
ret
push
adc
sbb
mov
test
int3
out
xor
adc
(bad)
loope
(bad)
out
sbb
loopne
sub
jns
hlt
mov
leave
out
adc
icebp
dec
jl
daa
sar
addr16
loope
or
jecxz
inc
add
xor
popa
mov
nop
cmp
aad
je
std
scas
adc
out
(bad)
adc
daa
shl
ror
repnz
or
std
int3
leave
daa
mov
lods
add
sub
aad
or
push
sbb
ret
cmp
sahf
inc
adc
xchg
dec
(bad)
in
sbb
movs
mov
inc
jo
adc
(bad)
mov
out
mov
in
push
jno
pop
and
out
ret
push
out
jecxz
daa
jle
clc
and
mov
xor
mov
test
sub
retf
jae
js
adc
push
int
and
and
repz
xchg
or
inc
and
cmc
fisttp
scas
or
gs
pop
out
xchg
jmp
jns
ret
in
mov
fisttp
xchg
jmp
add
jle
nop
and
hlt
cmc
adc
outs
ja
xchg
stos
(bad)
mov
push
cmp
jge
arpl
xor
sbb
mov
xor
add
jae
scas
mov
sahf
pop
adc
test
sub
lods
pop
lds
(bad)
inc
daa
jge
aad
sub
jb
sbb
leave
ins
or
movs
cdq
stos
xchg
ret
mov
xchg
mov
jecxz
(bad)
pop
sbb
cmp
jge
jns
sub
inc
(bad)
mov
out
(bad)
fld
out
repnz
sub
and
jmp
rol
fsubr
test
xchg
pop
int
hlt
fisub
xor
cs
mov
pop
in
sub
shl
sbb
xchg
adc
(bad)
and
jae
bound
pusha
mov
mov
mov
fadd
mov
jmp
int
push
(bad)
cld
gs
fdivrp
dec
xchg
dec
loopne
fnstsw
(bad)
jmp
or
arpl
arpl
aam
adc
stos
test
xchg
dec
push
xor
cmp
jno
lea
adc
jge
bound
mov
or
and
jae
stos
test
push
js
dec
in
xor
stos
fisubr
inc
mov
inc
push
fstp
and
in
int
nop
int3
and
sbb
lea
pop
test
mov
out
xchg
mov
ss
nop
out
or
popf
jecxz
dec
mov
xchg
(bad)
lahf
dec
jmp
leave
inc
adc
jnp
hlt
(bad)
and
ret
loop
and
add
or
out
adc
mul
ret
mov
scas
dec
mov
push
xor
jns
adc
outs
jp
lock
daa
add
sbb
pusha
or
arpl
shl
repnz
adc
xor
repnz
jno
add
mov
jb
loope
jb
cmps
cmp
inc
xchg
idiv
fisttp
faddp
popa
jno
test
xchg
frstor
add
hlt
sub
xchg
pop
imul
test
sbb
dec
(bad)
in
mov
adc
jbe
push
cmp
mov
mov
icebp
adc
ret
xchg
add
pop
daa
cmp
sub
xchg
stos
mul
add
cmp
repnz
leave
daa
sub
ret
push
(bad)
mov
jecxz
sbb
retf
adc
xor
neg
popa
mov
aas
mov
mov
jns
in
adc
out
adc
sbb
jmp
add
shl
add
jae
pop
nop
pop
adc
sbb
pop
xlat
dec
mov
mov
rcr
or
rcr
sbb
cs
xor
and
ret
xchg
or
pop
mov
out
sub
and
aad
xchg
mov
jne
adc
xor
jo
outs
cmp
ja
push
cmp
fdiv
imul
pop
jecxz
push
jmp
out
mov
inc
adc
(bad)
cmps
mov
sbb
xchg
fistp
inc
not
add
xchg
cmc
pop
push
inc
add
push
sbb
leave
fs
cmp
dec
xchg
lea
mul
pushf
cmp
jp
push
jmp
cmp
data16
pop
test
pop
arpl
and
mov
test
dec
mov
xor
std
arpl
xor
test
fsub
xchg
xchg
std
jo
mov
ret
loopne
and
and
out
inc
jle
sbb
out
push
add
xor
pop
sub
fwait
call
or
in
jl
inc
adc
jne
inc
daa
or
cs
(bad)
aam
jbe
stc
cmps
add
arpl
popa
or
mov
push
(bad)
sahf
(bad)
stc
or
mov
les
rcr
inc
ror
out
ret
push
jne
mov
jecxz
fisttp
pop
adc
test
fidiv
imul
dec
(bad)
mov
pop
sub
pop
pop
cmps
fsubr
out
jo
xchg
sbb
test
cwde
loope
outs
jp
cdq
repz
sub
aaa
mov
test
adc
jmp
xchg
sbb
pop
xchg
out
or
mov
aam
sub
icebp
xor
mov
(bad)
mov
mov
or
int
xchg
ins
movs
pop
jp
adc
jns
inc
push
xor
xchg
pusha
lods
dec
mov
addr16
xchg
add
cwde
or
dec
cmp
sub
and
dec
mov
and
mov
dec
sub
in
sub
lock
aaa
adc
dec
mov
jns
jmp
pusha
push
sub
leave
scas
sub
mov
cmp
leave
cdq
sbb
aaa
adc
rol
fisub
into
stc
imul
test
push
dec
cmp
ror
loopne
sar
mov
test
xchg
add
mov
jmp
cmps
mov
push
sbb
stos
pop
push
xor
cmp
retf
repnz
pop
mov
mov
cmc
or
out
cmp
lock
cdq
cmp
cmp
outs
and
pop
inc
(bad)
out
sti
fucomip
sbb
mov
mov
retf
cmp
nop
out
cs
xchg
arpl
jle
mov
seta
sub
adc
scas
scas
je
xchg
mov
fidiv
push
stos
sar
mov
jge
shl
xchg
cwde
cmp
(bad)
in
xchg
and
cs
and
mov
fwait
xor
adc
stc
or
mov
jle
outs
retf
sbb
cs
dec
mov
gs
int3
fucomip
push
push
aaa
push
adc
pop
push
cmp
retf
sub
jns
fcom
mov
imul
int3
aam
mov
ret
add
pop
mov
out
sub
(bad)
adc
push
enter
ins
jge
or
cli
lock
(bad)
sbb
adc
pop
adc
(bad)
popa
in
ror
mov
mov
pusha
push
fisubr
add
jae
dec
inc
popf
aam
cdq
stos
xor
nop
sub
cmp
push
mov
mov
cmc
adc
xor
add
mov
mov
pop
dec
retf
cmp
fcmovnu
push
or
ss
mov
lods
push
jb
xchg
repnz
sbb
and
cmp
pop
outs
and
popa
add
sub
xchg
jo
ret
push
sub
pop
in
das
sahf
mov
sbb
push
add
in
dec
xor
out
rcr
arpl
adc
ss
mov
popf
mov
jge
cmps
cld
mov
cmp
lods
lock
lds
xchg
mov
mov
(bad)
arpl
fwait
cdq
ret
cdq
jo
dec
sbb
sbb
xchg
inc
das
mov
or
jmp
inc
arpl
sub
push
or
xor
jle
cs
sbb
pop
push
sub
add
mov
movs
cmp
add
sbb
stc
cs
out
xchg
mov
adc
push
push
push
sub
sbb
lahf
jl
cmps
dec
inc
(bad)
shl
jb
lock
mov
or
mov
mov
mov
add
jae
sti
(bad)
lahf
push
ret
cmp
dec
adc
loope
dec
inc
and
loope
pop
jmp
stos
neg
xor
xor
popa
mov
pop
out
sub
pusha
test
(bad)
sbb
mov
and
jecxz
shl
add
aam
pop
fxch
sbb
loop
pop
aad
mov
cmc
aad
or
and
mov
cwde
stc
test
add
imul
push
fistp
push
lahf
dec
in
adc
retf
jns
leave
sbb
fimul
ja
pop
daa
jmp
mov
xchg
test
mov
ja
sar
xchg
xchg
sti
(bad)
popa
fisubr
lds
jecxz
jbe
repz
or
mov
cmc
bound
jecxz
ror
sbb
xchg
pop
sbb
or
(bad)
loopne
push
xor
xchg
and
xchg
mov
jecxz
inc
daa
cmp
ror
sbb
cmp
fcomp
mov
in
jge
jle
cdq
jo
mov
inc
dec
in
addr16
dec
test
or
jns
ror
sbb
mov
lds
loop
outs
xchg
jp
aas
push
cdq
jo
pop
in
stc
lds
pop
mov
jecxz
fnstenv
sub
jecxz
out
ror
fstp
loop
outs
xchg
scas
push
pop
xchg
cdq
jg
lods
adc
push
shl
add
jle
pusha
ret
(bad)
in
xchg
xor
mov
retf
inc
xchg
repz
fnsave
mov
xchg
aad
je
cmc
sub
stos
dec
cmp
addr16
inc
dec
mov
pop
dec
ds
dec
adc
push
jae
jp
xchg
xchg
sti
(bad)
popa
ficomp
test
xor
fidivr
add
int
addr16
iret
jno
sbb
cmp
retf
outs
jl
pop
es
stos
idiv
dec
sbb
sub
and
(bad)
mov
adc
inc
xchg
add
dec
mov
data16
xor
push
(bad)
xor
mov
scas
mov
call
enter
cmp
lods
daa
cmp
in
sahf
inc
xor
movs
inc
adc
dec
sbb
test
push
cdq
mov
data16
in
shl
outs
sbb
popf
mov
mov
fisttp
div
push
xor
(bad)
popa
add
jo
retf
xchg
jns
shr
daa
sbb
push
jmp
clc
shr
push
cmp
into
xchg
push
jmp
rol
push
push
mov
mov
dec
(bad)
in
pop
dec
or
mov
sub
cmp
stos
jae
sar
cmp
aas
sar
popa
out
jb
push
dec
pusha
cmc
and
arpl
cmp
dec
sbb
div
sahf
jno
or
dec
xor
out
inc
xchg
out
cdq
std
lahf
adc
(bad)
dec
test
xor
xchg
das
push
xor
es
dec
and
inc
inc
mov
jno
out
sub
(bad)
lahf
adc
(bad)
or
int
pop
mov
push
adc
and
sub
pop
je
arpl
ss
(bad)
in
or
dec
js
xor
inc
popf
mov
adc
adc
scas
shr
cmp
add
jae
lods
shl
sbb
pop
nop
stos
popa
push
out
mov
push
lea
stos
cmc
push
loope
fndisi(8087
popa
mov
add
mov
pop
add
leave
fs
xor
ja
xor
xlat
sbb
imul
xchg
aam
rep
call
xor
mov
or
sub
xchg
jmp
xchg
add
push
push
sub
out
cmc
mov
in
pop
xchg
daa
jmp
dec
not
(bad)
retf
mov
icebp
mov
mov
out
pop
cwde
push
test
test
xor
sub
xor
loopne
clc
dec
sub
fs
cmps
mov
aad
scas
adc
(bad)
push
jp
push
add
fst
cmp
ins
xchg
das
push
mov
add
xchg
push
int3
scas
ret
cmp
in
ret
lock
jl
jp
xchg
xchg
cmc
sub
cmp
push
(bad)
xor
loope
or
cs
nop
mov
sbb
jb
cmp
xchg
mov
(bad)
fild
and
fcom
pop
scas
xor
pop
inc
daa
add
xchg
sub
mov
or
mov
jno
std
push
fucomp
mov
ja
jns
xchg
sti
adc
fild
dec
mov
dec
xchg
outs
cmp
mov
xor
mov
cmp
sbb
pop
pop
ffree
xchg
add
mov
sub
lea
inc
inc
arpl
push
fld
push
sub
outs
std
lods
test
push
push
push
aam
je
add
dec
das
fisub
dec
lods
jg
and
xor
pop
enter
adc
ins
inc
arpl
cmp
jp
ins
ffree
loop
test
push
arpl
dec
push
jno
cmp
adc
add
cwde
or
cmp
outs
xchg
add
push
fstp
inc
jbe
cli
popf
push
pop
fiadd
sahf
add
add
xor
dec
ret
cmp
xchg
loope
pop
mov
daa
and
cs
dec
or
jno
jge
adc
xlat
add
adc
lods
push
cdq
jo
mul
xchg
add
jmp
lds
arpl
push
ret
push
add
cmp
pop
fnstsw
adc
aad
push
adc
pop
retf
out
cmp
popf
inc
mov
sub
mov
in
xchg
adc
int3
and
in
mov
ins
sub
fild
sbb
jo
dec
adc
jmp
dec
and
icebp
sbb
out
loop
and
adc
and
lahf
xchg
ja
add
in
inc
cs
call
pop
mov
xlat
loope
shl
sbb
dec
inc
and
add
dec
and
add
xchg
mov
jmp
sbb
push
xchg
test
inc
sbb
sub
sub
xlat
retf
mov
mov
and
and
call
imul
sahf
repnz
(bad)
push
jne
pop
mov
stos
std
and
test
mov
retf
and
fisttp
inc
xchg
dec
movs
bound
call
aas
sbb
cmp
aam
or
dec
jae
sahf
inc
push
mov
shl
(bad)
xchg
es
xlat
xchg
int
xor
or
arpl
mov
mov
mov
shl
in
mov
jno
pusha
inc
xchg
push
xchg
cmp
xchg
xor
(bad)
mov
cli
addr16
test
jl
inc
push
xor
cwde
sti
mov
mov
jb
bswap
mov
cmp
add
out
pop
mov
lock
in
or
mov
adc
jmp
mov
pop
addr16
push
outs
aam
push
(bad)
fimul
fisubr
sub
xchg
xchg
cmp
xchg
inc
mov
bound
mov
pop
cmp
fs
sbb
push
mov
ss
dec
xchg
ss
adc
mov
mov
sbb
add
retf
icebp
out
push
mov
mov
jmp
shl
cmps
outs
or
adc
push
sub
repz
xor
or
arpl
push
cmp
push
sub
push
mov
jns
dec
cli
xchg
rcr
pop
or
sbb
or
mov
push
adc
rcl
shl
test
mov
add
ss
addr16
jb
inc
in
repnz
addr16
add
add
xchg
jl
mov
and
aas
pop
leave
sar
(bad)
retf
jmp
pop
sub
xor
adc
loope
cs
sbb
daa
cmp
loop
inc
cmp
sbb
jl
xor
fldenv
mov
js
push
push
dec
jns
adc
jecxz
ss
cmp
dec
jae
add
ins
xchg
sti
xchg
xor
push
sbb
lods
dec
lea
jo
rol
mov
mov
adc
popf
push
and
bound
cmps
inc
dec
test
or
idiv
dec
cdq
mov
(bad)
fild
or
jecxz
pop
daa
loope
(bad)
out
xor
add
sbb
xchg
adc
fstp
repnz
adc
push
mov
fstp
pop
das
repnz
imul
outs
(bad)
lahf
xchg
hlt
inc
xchg
sbb
pop
sbb
inc
cmp
inc
aaa
sub
in
xchg
xchg
fcomp
sub
std
scas
into
inc
test
dec
mov
mov
cmps
mov
or
jmp
shl
mov
popa
or
and
cmps
imul
adc
loope
push
adc
sub
repnz
lods
aam
mov
fdivrp
ds
ds
jmp
mov
scas
mov
fwait
repz
xchg
dec
das
lea
jnp
lods
inc
call
or
call
ins
sar
sahf
mov
in
fimul
mov
ja
jns
retf
ss
xchg
add
mov
stc
sahf
inc
hlt
adc
int
arpl
pop
inc
int3
repnz
adc
adc
mov
pusha
es
inc
in
inc
adc
add
jge
push
mov
cmp
aad
(bad)
hlt
pop
outs
inc
xchg
push
arpl
adc
addr16
and
es
into
cbw
add
ret
cmp
lods
les
adc
sbb
inc
cmp
add
push
add
cmps
test
push
fstp
aad
dec
fmul
push
push
sub
pop
cmps
dec
adc
sahf
mov
sbb
lods
(bad)
popa
add
mov
call
jmp
call
jbe
imul
mov
add
or
xor
jl
das
cs
aam
mov
or
sub
adc
jne
push
add
cmps
xor
add
sbb
mov
jmp
inc
loope
mov
inc
push
mov
mov
aaa
pop
adc
xchg
xor
jmp
push
cmp
add
(bad)
pop
adc
or
mov
pop
ins
inc
arpl
sub
fadd
add
call
outs
(bad)
sahf
cmp
sbb
into
push
stc
sbb
sahf
mov
out
jecxz
loop
push
mov
add
retf
in
pop
push
fdivp
mov
clc
mov
pop
cdq
loope
(bad)
mov
mov
arpl
mov
icebp
stos
xchg
mov
(bad)
xchg
mov
jo
repnz
mov
mov
inc
sbb
jmp
arpl
add
ins
mov
mov
out
popa
mov
cmc
lods
push
mov
or
sbb
xlat
ss
mov
jb
jo
jb
lds
ins
dec
lahf
add
sbb
clc
dec
adc
sahf
sbb
out
sub
xchg
or
adc
push
sti
cmps
mov
push
xchg
or
sub
stos
neg
pop
std
mov
lods
push
xor
jg
sbb
adc
(bad)
mov
ja
out
fimul
or
clc
xlat
push
pop
stc
mov
xlat
xchg
sub
mov
jae
add
enter
fmul
sub
push
dec
sbb
sub
xchg
jge
daa
mov
jno
dec
scas
rcr
pop
out
sub
mov
and
sbb
adc
adc
mov
sbb
adc
xor
sbb
xor
and
inc
dec
adc
hlt
xchg
cmp
dec
fld
test
xor
mov
pop
(bad)
pop
inc
das
pushf
push
inc
dec
data16
add
ja
retf
in
and
jmp
pop
shl
popa
addr16
inc
add
dec
enter
sbb
push
jmp
cwde
jl
sahf
jno
pusha
js
retf
call
imul
cmp
and
adc
dec
inc
and
(bad)
cdq
(bad)
int
(bad)
mov
test
jae
pop
adc
not
pop
ins
in
cs
je
add
adc
lock
inc
mov
hlt
in
inc
push
jmp
adc
and
mov
pop
cmps
cmp
leave
sbb
or
addr16
scas
xor
or
test
std
int3
leave
int3
jl
jne
ret
sti
lahf
out
sub
mov
aad
test
pushf
jno
ss
sbb
cld
mov
xlat
add
sub
call
cs
fst
push
pop
imul
pop
add
push
xlat
jmp
sbb
in
dec
ret
xchg
push
push
pushf
push
push
xor
and
test
jnp
jns
fsubr
lock
jnp
inc
popa
jb
inc
dec
call
push
add
nop
out
pop
pop
add
push
lds
mov
pop
stos
add
cdq
jg
cmc
adc
push
lahf
(bad)
sub
pop
jge
sbb
aam
mov
xor
test
xchg
mov
add
shl
lds
sub
xchg
bound
(bad)
ds
jmp
aad
arpl
push
ret
and
push
mov
mov
ja
push
or
repnz
cmps
or
sar
or
lods
xor
push
outs
cmp
or
pop
sbb
and
inc
adc
sahf
sbb
push
ins
jo
cdq
inc
and
sub
sub
jl
sbb
mov
pushf
mov
inc
jp
mov
jp
pop
mov
xchg
sub
in
push
mov
xor
mov
mov
mov
sbb
ss
arpl
aas
pop
fs
mov
push
mov
inc
pusha
outs
push
xchg
rcl
push
scas
stos
xchg
inc
ja
jb
or
mov
vxorps
in
scas
dec
sbb
sbb
loope
out
arpl
cdq
jo
imul
addr16
push
and
or
xor
and
(bad)
mov
jb
mov
sbb
mov
sub
dec
xchg
hlt
jo
adc
loope
jmp
xchg
fist
(bad)
nop
ror
nop
cmp
not
mov
push
pop
outs
jmp
aad
xchg
pop
add
lods
popf
dec
cmp
lods
jno
adc
sbb
inc
xchg
and
shl
ror
mov
push
mov
xchg
test
and
daa
cmp
push
adc
cmp
inc
cld
movzx
jns
stc
push
xor
xor
loope
cli
(bad)
cmp
movs
sti
and
sbb
mov
mov
in
retf
movs
js
mov
push
addr16
lods
test
inc
inc
sub
xor
arpl
dec
sub
sbb
ret
sbb
jae
mov
(bad)
xchg
mov
dec
jecxz
fldcw
mov
arpl
and
cmp
sbb
inc
int
adc
xor
mov
mov
mov
ret
xlat
test
(bad)
xchg
cmps
(bad)
mov
in
mov
add
std
stos
dec
cmps
push
jno
in
sub
call
jle
imul
xor
mov
in
push
pop
(bad)
sbb
xchg
sbb
repnz
imul
dec
mov
cwde
jl
bound
sahf
xchg
das
test
mov
dec
in
inc
mov
mov
push
mov
xchg
(bad)
mov
(bad)
sub
(bad)
cs
rol
push
push
mov
test
int
sbb
pop
dec
xor
sbb
jno
std
lahf
int
adc
js
(bad)
xchg
mov
cmp
mov
mov
adc
mov
shl
jp
pop
sub
ficomp
mov
mov
fnsave
dec
in
and
repz
ret
push
lahf
xchg
clc
test
(bad)
(bad)
scas
cmps
rol
push
fistp
pusha
or
pusha
aam
xor
add
jo
add
popa
sub
add
inc
daa
jle
pop
in
test
cmp
arpl
push
daa
sar
xor
(bad)
sti
aam
push
jnp
jle
jno
inc
leave
out
cmp
(bad)
cmps
outs
test
add
in
retf
ror
xchg
and
mov
xor
fdivr
addr16
jo
mov
int3
out
push
(bad)
into
push
jne
popf
dec
(bad)
jmp
or
arpl
fstp
mov
mov
or
mov
std
pop
ss
arpl
fstp
jae
and
cmps
mov
bswap
int
pushf
leave
aas
adc
pop
push
cmc
mov
bound
dec
in
xor
mov
(bad)
pushf
cmp
adc
lods
retf
je
sbb
pop
jmp
stos
sbb
fstp
mov
mov
xchg
gs
popa
ret
xchg
hlt
shl
adc
and
push
jl
daa
leave
jge
ins
(bad)
in
inc
outs
xcrypt-ofb
pop
add
and
ins
in
or
jbe
test
sbb
fist
xor
sbb
inc
out
daa
jle
jmp
test
inc
mov
jle
pop
sar
dec
xor
cli
jae
add
push
int
add
inc
jno
add
xchg
sahf
test
loope
outs
mov
inc
pop
pop
gs
jb
cdq
jo
(bad)
xchg
xor
cmp
mov
sar
rcl
and
shl
jno
test
cmp
xlat
jl
(bad)
outs
mul
jmp
or
mov
lds
hlt
push
popf
jle
mov
in
in
sub
and
scas
or
inc
call
inc
daa
(bad)
retf
imul
add
sbb
and
adc
sub
mov
in
add
mov
out
inc
pusha
lock
mov
and
iret
loopne
jecxz
inc
and
loopne
loopne
sub
ficomp
or
cmps
retf
outs
mov
retf
jmp
xchg
out
dec
sub
or
lods
neg
cmp
push
and
test
pusha
mov
xor
inc
dec
out
call
xor
mov
in
push
in
cmp
jns
stos
jle
inc
(bad)
lock
sub
mov
jge
ja
outs
push
aam
xor
jo
ss
or
or
les
mov
ins
jbe
cdq
cli
cmp
mov
mov
loop
imul
jge
mov
cmp
in
cmp
les
popa
or
mov
pop
(bad)
(bad)
not
jb
mov
inc
push
bound
xchg
mov
cmovo
das
sub
or
das
idiv
pop
int
icebp
movs
cmps
push
mov
test
jmp
cmps
mov
mov
jmp
xchg
add
push
push
and
lods
push
in
mov
push
xor
cli
cmps
stos
rcr
add
test
sub
in
jmp
adc
cwde
or
dec
dec
mov
mov
(bad)
stos
ret
cs
js
ja
xchg
inc
pop
ins
out
(bad)
cli
mov
mov
test
dec
inc
das
aad
inc
call
adc
adc
or
xor
add
xchg
sahf
dec
sub
(bad)
sahf
sub
imul
xor
add
sahf
data16
mov
test
jbe
fnstenv
ss
xor
or
das
lds
mov
push
loopne
nop
push
sar
into
mov
mov
js
push
add
mov
xor
loope
push
and
into
bound
neg
jmp
mov
push
outs
or
mov
cmps
fs
cld
test
mov
sub
adc
xor
and
in
adc
adc
sbb
cmp
sub
(bad)
mov
jo
loopne
pop
xor
popf
dec
add
mov
cmovp
movs
mov
lock
dec
scas
aad
and
dec
xor
and
mov
retf
pop
mov
push
adc
sub
mov
push
jnp
xchg
add
jmp
dec
dec
imul
dec
xor
das
aaa
and
sbb
dec
ret
jne
in
mov
pusha
jb
mov
jnp
dec
cdq
inc
or
jne
shr
js
cld
int3
out
or
and
ret
dec
or
mov
cmp
push
lea
adc
xchg
push
sub
sbb
loop
outs
push
arpl
clc
mov
push
(bad)
sbb
hlt
loop
ins
fsubr
adc
fld
sub
add
loopne
xchg
icebp
sbb
xor
xor
outs
pushf
not
aaa
ins
mov
dec
sahf
sbb
cli
movs
outs
and
retf
into
in
mov
(bad)
pushf
pop
xchg
push
xor
outs
jp
mov
push
cs
jg
ja
xchg
cmp
into
sub
jns
fmul
jge
and
in
xor
dec
loop
jp
mov
and
dec
and
movs
fimul
addr16
(bad)
ror
add
pop
sbb
bound
int3
or
in
dec
(bad)
out
fild
(bad)
sbb
jmp
stos
dec
cmps
test
data16
xor
(bad)
xchg
ja
xor
or
js
cdq
sub
mov
or
xor
dec
adc
out
cmps
outs
jne
test
ret
loope
push
in
xor
les
xor
jmp
and
push
adc
scas
add
mov
sbb
sbb
xchg
into
push
call
xchg
pusha
into
mov
sar
jb
ins
add
mov
jp
arpl
popf
xor
addr16
daa
cmc
ja
adc
pmaxub
outs
pop
jmp
sahf
mov
and
push
jns
fdiv
call
into
push
jno
movs
mov
and
aam
call
xor
clc
(bad)
popa
daa
xchg
mov
sub
sub
neg
cwde
cmp
cmp
sbb
pushf
into
or
sahf
sti
cdq
add
jno
mov
jmp
xor
repnz
cmp
or
arpl
cmp
xchg
out
or
dec
xchg
mov
rcl
jns
pop
(bad)
adc
lds
push
sbb
dec
(bad)
in
adc
fisttp
xor
jmp
stos
dec
jmp
pop
test
add
repz
js
xchg
(bad)
scas
add
xor
jb
bound
pop
xor
in
xchg
arpl
lea
cmp
push
xor
jns
pop
push
out
in
and
and
nop
repz
xor
aas
int3
ins
mov
adc
sub
into
sub
inc
and
ds
(bad)
adc
dec
sub
adc
xor
or
arpl
arpl
aam
shl
or
jae
scas
cs
xchg
mov
and
cmps
fld
daa
into
cdq
jo
leave
sub
jl
daa
ja
adc
pusha
inc
or
arpl
inc
int3
out
cmps
ds
jl
lahf
jno
pusha
dec
dec
cmps
gs
xchg
or
jmp
inc
dec
out
inc
and
adc
jecxz
inc
and
(bad)
(bad)
arpl
aam
mov
cmp
jno
pusha
jae
xor
jge
pushaw
cdq
frstor
add
fucomi
clc
fdivr
mov
out
adc
int3
aam
mov
add
mov
pop
test
mov
(bad)
adc
jnp
out
add
mul
jecxz
retf
int
jmp
push
mov
xchg
pop
iret
(bad)
mov
pop
test
jb
fwait
add
jmp
enter
and
and
jecxz
dec
mov
sub
xor
sub
xor
inc
outs
pusha
xchg
sbb
mov
mov
ds
mov
cmp
push
nop
addr16
dec
sub
add
retf
xchg
pop
stos
scas
mov
sahf
pop
adc
test
xchg
addr16
fidiv
push
mov
and
push
xor
cmp
jns
stos
mov
hlt
ins
imul
xor
jno
pushf
dec
inc
jno
out
rcr
xchg
xor
ss
mov
popf
fisub
jge
fdiv
inc
or
ins
and
push
adc
popa
dec
outs
(bad)
movs
mov
aad
xor
adc
jns
mov
inc
daa
jle
repz
or
ror
in
fnstcw
jo
stos
xor
cmp
jl
adc
cmp
inc
in
pop
push
jne
ja
add
scas
xchg
and
into
push
xor
dec
xchg
outs
cmp
cmp
xor
stos
movs
add
cwde
mov
int
test
pop
push
rcr
ret
jne
cmps
sub
(bad)
mov
shl
push
mov
sub
(bad)
ss
push
mov
mov
pop
mov
and
sub
mov
popa
sbb
popf
sub
pop
adc
adc
outs
cld
test
lods
dec
(bad)
call
adc
out
adc
xor
inc
clc
test
add
outs
xchg
add
xor
popa
cld
jg
rcl
mov
pop
sub
mov
and
pop
addr16
(bad)
daa
jbe
addr16
in
jnp
fild
add
jno
stos
push
mov
(bad)
loop
fild
test
xor
push
outs
arpl
leave
out
adc
xor
jae
test
add
imul
shl
retf
xor
sahf
mov
cmc
mov
sub
push
scas
leave
popa
xlat
loope
mov
cmp
rcr
push
iret
push
out
stos
sub
sbb
push
mov
xchg
sub
call
std
pop
retf
jne
repz
fdivr
sbb
jecxz
cmp
arpl
mov
iret
or
loope
(bad)
popa
add
lods
in
mov
mov
push
xor
neg
push
repnz
cmc
pop
dec
mov
ins
add
nop
not
dec
pop
adc
inc
xchg
xchg
or
jae
pop
call
scas
adc
xchg
out
(bad)
jg
lods
xor
jb
int
call
movs
aam
xor
xor
jns
(bad)
xchg
mov
adc
mov
push
popa
jne
xchg
loope
xor
mov
cmp
hlt
cmp
pop
mov
stos
not
fstp
mov
ror
gs
scas
adc
or
addr16
inc
dec
or
call
test
cmc
lods
mov
imul
iret
push
inc
stos
jns
fiadd
xor
movs
retf
(bad)
in
lods
daa
(bad)
iret
add
cmp
adc
outs
ja
aam
pop
fwait
adc
jmp
adc
imul
mov
ficom
retf
test
adc
imul
js
xchg
mov
adc
cmp
xor
and
outs
xchg
sbb
cmc
push
div
push
in
or
ror
out
xchg
je
jnp
jmp
mov
or
jo
adc
(bad)
and
xchg
push
mov
cmp
int
add
mov
mov
sahf
daa
cs
adc
pop
xchg
sub
or
xlat
retf
cdq
jo
inc
xor
addr16
jns
mov
lds
mov
inc
cmp
add
icebp
cmc
sahf
js
mov
sbb
rcl
leave
je
ja
sub
dec
fdiv
jp
adc
in
sbb
adc
icebp
push
push
dec
and
shl
cld
jne
mov
repz
xlat
adc
push
mov
and
jecxz
mov
mov
xchg
dec
(bad)
jmp
bnd
xchg
mov
leave
xor
cmp
mov
dec
pop
xchg
mov
imul
inc
cmp
xchg
inc
jbe
pop
adc
(bad)
loop
or
jmp
mov
scas
or
jle
mov
das
test
add
popa
clc
rcr
stc
(bad)
in
retf
cmp
repnz
jp
jecxz
pop
dec
dec
jns
imul
in
inc
daa
or
cmp
sbb
adc
sbb
lods
cmp
push
movs
jbe
ret
out
mov
jb
or
add
pushf
sbb
aam
push
jge
fld
je
test
jns
rcl
stc
mov
(bad)
mov
push
mov
ins
lods
xchg
jae
lds
sbb
pop
je
cmps
adc
xchg
cld
mov
push
ds
call
add
or
inc
and
mov
mov
ins
cmps
mov
into
in
add
ja
test
xor
rcr
(bad)
bswap
out
inc
scas
push
and
jle
push
jo
in
jle
mov
jmp
jmp
mov
mov
or
fisub
push
out
(bad)
jmp
jmp
repz
xchg
or
or
sub
popa
stos
and
mov
outs
sub
fnstenv
xor
sub
sar
push
or
iret
fs
sbb
pop
inc
adc
sar
xchg
xlat
int3
xchg
push
push
pop
xor
cmp
(bad)
(bad)
xor
cwde
addr16
div
jmp
mul
enter
movs
aas
mul
out
inc
aaa
and
mov
test
mov
add
xchg
adc
or
popa
xchg
add
ret
sbb
fsub
sub
pop
and
stc
ja
jne
cmp
test
jmp
or
pop
cdq
div
test
popf
lds
(bad)
and
and
jne
cmp
pop
daa
fild
inc
adc
rol
fnstenv
inc
cmp
xor
push
stc
(bad)
outs
or
mov
mov
xchg
jmp
ja
pop
daa
imul
xor
idiv
or
inc
pop
fdiv
jl
mov
add
xor
adc
add
ficom
in
pop
inc
rcr
push
sbb
jecxz
pop
cmp
sub
mov
rol
into
call
mov
(bad)
mov
popf
je
jb
loop
popf
add
pop
(bad)
aad
fldenv
adc
cmps
sub
js
mov
lds
addr16
pop
inc
cmp
(bad)
(bad)
loope
adc
sbb
(bad)
mov
das
jmp
dec
dec
or
hlt
outs
outs
inc
xchg
div
pop
push
fnclex
cmc
adc
xchg
inc
bound
mov
cli
addr16
scas
cs
(bad)
dec
jno
xor
into
push
popf
sti
cmps
push
outs
xchg
add
xor
pop
add
pushf
(bad)
loop
dec
aad
adc
outs
pop
scas
mov
dec
aaa
jns
xor
push
(bad)
mov
loopne
(bad)
cmp
pop
inc
pop
or
aaa
sub
xchg
popf
loop
mov
cmps
mov
pop
dec
scas
adc
mov
dec
sub
push
int3
and
or
mov
ret
ins
mov
cmp
dec
call
mov
sbb
sbb
leave
out
cmp
(bad)
lahf
jae
test
sti
fcmovnb
add
push
inc
cmp
pop
icebp
add
inc
jb
jge
aam
sub
cmp
gs
cmp
je
fs
dec
sbb
jge
scas
les
push
call
arpl
xchg
cmps
mov
stc
(bad)
or
ja
push
cmp
xchg
(bad)
ficom
ret
push
pop
test
jbe
push
(bad)
in
jecxz
pop
int
mov
das
aaa
pop
xor
nop
sub
cmp
jge
aam
bound
call
pop
out
jno
jmp
(bad)
xchg
mov
and
(bad)
popa
fsincos
test
push
ss
out
sub
(bad)
adc
ror
push
and
out
cmp
add
stc
dec
in
jae
scas
mov
sahf
pop
adc
aam
pop
push
test
jl
and
xor
leave
addr16
out
retf
cmp
(bad)
in
popa
cmp
jbe
cwde
jno
inc
xchg
ret
dec
jmp
idiv
inc
pushf
mov
cmp
inc
dec
mov
cmps
shl
and
xor
std
jecxz
and
add
mov
add
shr
adc
pop
jge
and
mov
xlat
sbb
cli
fild
scas
not
jmp
or
xchg
xchg
jmp
ja
pop
daa
imul
int
or
push
fnsave
xchg
mov
adc
(bad)
and
mov
cmp
in
inc
dec
mov
stos
dec
sahf
imul
in
adc
clc
clc
(bad)
popa
fdivr
test
pop
and
sub
jmp
and
(bad)
sti
movs
inc
inc
and
inc
jo
popf
sub
jno
ret
leave
push
inc
xchg
out
data16
push
pop
test
mov
pop
push
loope
sbb
jns
shl
stos
(bad)
bound
out
jb
int3
aam
pop
cmp
dec
inc
sub
sbb
pop
xchg
xchg
data16
lock
jne
cmovns
dec
(bad)
in
sub
fisttp
xor
mov
sub
sub
and
and
pusha
jmp
call
dec
movs
in
jecxz
dec
cdq
and
xchg
cli
ja
call
stc
(bad)
ds
push
mov
rcr
xchg
iret
cmp
fdiv
fimul
mov
fsubr
sbb
enter
cmp
xchg
out
out
ds
add
and
gs
pusha
bound
xchg
rol
and
pop
mov
sub
xchg
popf
mov
cmps
stos
ret
scas
inc
mov
loopne
push
xor
xchg
in
(bad)
adc
ror
and
ss
push
pushf
jns
ror
sbb
or
mov
pop
pop
ins
cmp
jo
pop
fwait
push
xchg
mov
cmp
lods
push
adc
sbb
pop
psraw
sub
cli
popf
push
cmp
xchg
sahf
sti
cdq
loopne
jbe
adc
shr
mov
push
mov
sbb
mov
jle
xchg
dec
dec
cdq
rol
lock
and
xlat
pop
or
jno
(bad)
fild
adc
shr
stos
mov
and
mov
lods
les
cmp
pop
loope
pop
arpl
adc
push
fild
int
xor
push
bound
into
jne
(bad)
pop
data16
adc
cwde
xchg
repz
xor
pop
xchg
fld
add
pusha
icebp
scas
imul
adc
push
lods
mov
pusha
(bad)
xchg
cmp
add
sub
lahf
or
lahf
in
xor
(bad)
sbb
push
mov
xor
pop
sbb
push
jo
pop
adc
cmp
mov
pop
dec
repnz
out
cmc
adc
and
inc
push
xor
xchg
xchg
or
sub
and
or
repz
lods
in
dec
loop
xor
gs
clc
clc
(bad)
popa
in
ror
cmps
cmps
adc
cli
bnd
mov
adc
gs
mov
mov
mov
fnstenv
push
into
ins
push
cmp
adc
(bad)
or
retf
std
jno
fdiv
andnps
stos
xchg
pop
dec
jg
inc
jns
(bad)
or
cwde
in
xor
push
sub
les
popa
mov
mov
shr
repnz
mov
cmp
add
pop
retf
jle
out
test
jne
and
cmp
jge
cdq
or
mov
sbb
sub
leave
out
cmp
sbb
imul
dec
xchg
mov
jle
call
sbb
jp
mov
mov
fmul
jns
outs
cmp
js
cdq
sbb
outs
stos
repz
fimul
lea
lds
addr16
outs
inc
test
inc
bound
xchg
daa
pusha
mov
dec
je
sub
leave
rol
(bad)
push
mov
push
shr
xchg
xor
mov
fsubp
jmp
mov
fidiv
gs
xor
movs
mov
jno
stos
les
and
bound
nop
out
pop
and
jmp
movs
pop
fst
jae
(bad)
xchg
adc
jp
bound
xlat
cs
imul
push
inc
int
aaa
outs
dec
pusha
(bad)
std
xchg
cli
mov
pop
arpl
xchg
stc
lods
cmp
adc
dec
retf
sub
inc
scas
or
or
or
mov
mov
sahf
pop
sbb
mov
cmc
sub
cmps
test
xchg
sti
sub
dec
cwde
mov
into
retf
add
movs
add
mov
push
int3
outs
cmps
dec
fs
xchg
push
leave
mov
(bad)
js
cdq
sbb
outs
stc
retf
clc
mov
xchg
leave
repz
in
jmp
xor
stos
popf
jle
std
adc
pop
retf
push
pop
pop
adc
repnz
icebp
mov
stos
imul
pop
fs
mov
add
ins
outs
movs
dec
sar
sbb
adc
sub
pop
test
mov
(bad)
js
mov
in
adc
popa
push
and
push
mov
mov
das
push
das
hlt
in
and
cmc
test
(bad)
xor
jge
dec
sti
xor
cli
inc
data16
rol
int3
out
xchg
fisub
mov
xchg
jo
or
mov
mov
xor
push
int3
ins
cmps
xor
dec
xchg
stc
(bad)
popa
xor
inc
inc
xchg
cmp
shl
mov
xchg
xchg
pop
mov
lea
inc
and
sbb
inc
inc
xchg
in
addr16
test
adc
pop
sbb
popf
sub
dec
cmp
mov
popf
mov
jmp
outs
sti
popf
sbb
hlt
xchg
push
sub
or
adc
nop
add
inc
mov
test
popf
sub
adc
aaa
xor
or
out
ret
mov
or
pop
in
adc
push
xchg
mov
mov
mov
mov
fwait
xchg
mov
jle
sbb
xlat
mov
xor
(bad)
dec
stc
pop
push
ds
dec
pushf
sahf
jno
add
dec
(bad)
adc
add
ds
sub
and
adc
sbb
push
xchg
jmp
pop
mov
xchg
cwde
shl
in
push
sub
imul
mov
(bad)
popa
or
and
lods
push
or
ret
gs
lahf
pushf
sub
stos
or
sbb
add
mov
stc
leave
xlat
retf
push
stos
pop
mov
jmp
(bad)
xchg
stos
or
sbb
jb
mov
pop
aam
sbb
adc
push
sbb
adc
pop
and
jns
pop
jg
lds
ret
push
jecxz
xchg
xor
xor
cmps
(bad)
in
xchg
int3
repnz
mov
cmp
push
int
push
pop
pop
mov
xor
sub
xchg
add
(bad)
add
and
in
dec
ret
fadd
jbe
mov
movs
jb
test
aad
nop
jo
stc
sub
xor
xchg
jmp
loop
(bad)
lods
cdq
jg
sub
push
jg
sbb
push
cmp
cmp
push
jns
sbb
ret
mov
and
jecxz
or
int3
adc
xor
scas
fld
add
cmp
inc
fadd
sub
xchg
mov
(bad)
(bad)
cmp
xor
ror
sbb
mov
add
sbb
xchg
fstp
mov
lds
gs
and
jge
sub
aaa
adc
lock
int
inc
sti
dec
std
mov
cmp
mov
sub
and
jmp
adc
mov
fdivr
shl
fsub
cmp
jmp
sbb
mov
fwait
scas
loope
shl
popf
add
mov
scas
xchg
add
add
add
stos
lahf
inc
sbb
nop
mov
pop
ja
test
mov
rcr
je
push
push
lahf
mov
push
xchg
ins
cdq
pop
fisub
jle
mov
cmp
pop
and
out
cdq
jo
mul
add
(bad)
cmp
movs
or
jmp
fld
mov
mov
sub
stos
dec
push
aad
push
fmul
mov
ja
(bad)
pop
cmp
xor
movs
out
cmc
cld
aam
add
cmc
test
(bad)
loope
data16
into
pop
loope
repz
cdq
push
pusha
jnp
dec
das
cdq
mov
aaa
aas
pop
pop
enter
sbb
fild
sbb
xchg
mov
cmps
push
xor
jns
(bad)
bound
dec
das
fisttp
jle
mov
mov
outs
out
arpl
mov
mov
(bad)
mov
sbb
pop
test
(bad)
and
data16
xchg
out
(bad)
fwait
cmp
or
ror
jb
fsubr
jp
dec
jmp
movs
push
xor
xchg
lea
and
mov
popa
stc
hlt
in
inc
imul
outs
ss
adc
pop
mov
jmp
sub
je
jo
fimul
push
push
xchg
dec
mov
mov
in
bound
push
xor
push
or
cdq
pusha
jmp
aad
jbe
push
je
ss
(bad)
stos
cdq
mov
cmp
xor
mov
std
jle
mov
add
pop
test
or
jmp
(bad)
inc
mov
and
inc
push
push
int
push
pop
outs
int
stc
inc
mov
aas
retf
sub
enter
ret
add
mov
jb
cmps
fwait
push
dec
adc
mov
dec
pusha
sbb
ja
nop
jo
outs
sub
or
ss
add
pcmpgtw
stos
les
cs
in
cmps
aam
int3
out
test
mov
xchg
mov
or
mov
cmp
movs
push
and
adc
in
repz
dec
inc
add
sbb
jl
xchg
jmp
pop
test
push
imul
xor
int
lock
mov
mov
bswap
ins
cdq
fisub
jb
dec
jmp
pop
mov
scas
mov
adc
ja
push
jb
int
in
mov
popa
int
or
push
sbb
stos
outs
ja
fimul
repnz
push
lea
and
and
push
mov
in
scas
mov
ins
pop
jle
pop
daa
cmp
stos
outs
ja
out
mov
out
sub
ss
je
addr16
in
retf
sbb
ror
cdq
push
sbb
stos
not
mov
dec
movs
fimul
pop
add
adc
out
test
cmp
adc
loopne
or
jmp
push
cs
push
mov
div
add
(bad)
cwde
sbb
push
pusha
mov
mov
xlat
stc
es
xor
cmp
or
jmp
push
sbb
test
add
adc
mov
fist
ret
push
jns
jge
iret
xor
sbb
cmp
retf
adc
xor
js
adc
cmp
sub
mov
or
mov
mov
mov
out
inc
push
pop
fwait
clc
dec
(bad)
in
inc
or
xor
add
dec
jo
jmp
test
and
movs
(bad)
adc
adc
pop
and
hlt
mov
jmp
add
ficomp
stos
idiv
pop
jp
and
in
loope
cli
jns
cdq
sbb
outs
jnp
jmp
ins
fdivr
mov
hlt
in
or
mul
imul
dec
repnz
lahf
repz
mov
lea
mov
sahf
xor
mov
cmps
sbb
jno
ja
fidiv
jbe
pop
std
push
cmp
cmp
cld
lahf
mov
test
xor
hlt
adc
xor
push
sub
not
(bad)
adc
aam
push
addr16
push
sar
cmps
inc
dec
mov
hlt
pop
sbb
daa
imul
jbe
shl
jno
mov
xor
outs
std
jge
out
out
sub
pop
sbb
ret
push
mov
push
stc
xchg
mov
in
ret
xor
stos
mov
cmp
push
mov
loope
repz
cdq
std
scas
(bad)
inc
dec
out
push
and
les
or
dec
add
std
lahf
mov
scas
mov
xor
lock
(bad)
cmp
movs
ja
repnz
(bad)
mov
int
add
fxch
jle
aas
push
sti
mov
pop
test
push
jnp
aam
scas
call
std
pushf
or
les
cs
xchg
sbb
mov
mov
sbb
sbb
push
fiadd
cli
dec
popf
sbb
mov
fcom
outs
xor
sbb
pushf
xor
icebp
xchg
xchg
daa
jnp
dec
jmp
mov
pop
into
rcr
jmp
pop
(bad)
mov
mov
jl
daa
imul
inc
test
or
in
sub
fimul
cli
dec
fwait
stc
outs
cmp
cmp
(bad)
lahf
outs
hlt
shl
lea
push
popf
xor
xor
dec
cli
cmps
add
xchg
vpcmpgtw
sub
clc
adc
out
adc
mov
call
cdq
loopne
mov
pop
jbe
mov
movs
je
dec
pusha
inc
and
nop
arpl
jnp
xlat
mov
cmc
sub
add
sbb
ret
cmc
ret
fs
cmp
adc
cwde
xchg
xchg
ins
stos
inc
(bad)
sub
popf
sbb
leave
fs
xor
or
or
cmp
fimul
std
inc
rol
add
icebp
cs
js
ja
(bad)
mov
out
pop
ins
hlt
into
xchg
and
stc
xchg
adc
addr16
pop
imul
ror
cdq
popf
xor
mov
mov
fmul
push
arpl
jle
(bad)
pusha
out
xchg
cmp
shl
xor
imul
int
or
dec
jmp
addr16
pop
add
jno
popf
adc
mul
les
cmp
popa
arpl
sub
jae
mov
mov
pop
push
inc
push
mov
out
jmp
cli
int3
jmp
and
or
mov
mov
add
ins
inc
pop
retf
stc
dec
and
lods
mov
shr
outs
ret
jmp
mov
lea
iret
or
(bad)
in
dec
adc
cmps
fld
lods
dec
jmp
and
cmp
into
lea
jae
xchg
out
ds
xor
inc
aaa
pop
pop
(bad)
in
mov
stc
(bad)
aam
sub
sahf
out
out
lods
xor
mov
stos
aad
je
cmc
sub
inc
mov
xor
mov
shl
(bad)
cmp
jbe
int3
jl
push
(bad)
inc
jbe
mov
sbb
test
and
bound
or
in
cmp
out
fist
popf
jne
stc
xchg
jmp
pop
mov
into
and
out
ins
ret
push
adc
(bad)
mov
jge
mov
dec
cli
xor
out
mov
in
in
xchg
xchg
fsub
out
sub
jo
and
das
mov
imul
jle
mov
pop
dec
rcl
jmp
stos
xchg
mov
xchg
sbb
stos
popf
shl
cmp
cmc
sbb
fild
addr16
inc
je
call
pop
call
popa
jae
dec
out
dec
push
cdq
cmp
inc
sbb
or
arpl
push
or
repnz
nop
aaa
add
pop
test
or
icebp
popf
jmp
addr16
jne
ret
jb
cmp
or
mov
pushf
xor
rep
lods
xor
inc
dec
adc
hlt
mov
mov
out
xor
iret
loope
(bad)
out
cmp
movs
retf
adc
xchg
xlat
repz
in
call
mov
sub
hlt
adc
out
adc
or
addr16
cmps
cld
test
add
jge
aam
pop
or
sub
(bad)
fidiv
loope
outs
cdq
ret
xchg
hlt
jbe
adc
and
shl
test
dec
(bad)
mov
xchg
popf
cmp
inc
sbb
or
jno
push
and
xor
lods
push
leave
out
dec
call
les
ret
adc
mov
and
mov
loop
outs
cld
adc
repnz
jne
and
test
jne
xchg
lds
addr16
or
sahf
sub
icebp
imul
mov
test
aad
je
mov
inc
adc
in
cmp
mov
in
sbb
pop
inc
loope
out
adc
retf
xor
mov
jbe
fmul
mov
fisub
xor
jmp
mov
mov
cmp
out
xor
xor
stos
ret
fwait
adc
xchg
arpl
sub
cmp
ret
lock
cmp
stc
adc
cmps
cld
mov
cmp
lods
cld
inc
pop
pop
sub
out
add
dec
jmp
pop
shl
push
jnp
ret
add
mov
cwde
gs
fild
daa
(bad)
sbb
(bad)
retf
outs
jmp
inc
adc
into
cmc
adc
outs
ja
fdivr
cli
test
or
je
sub
rcl
je
addr16
and
xor
rol
jecxz
icebp
cld
popf
push
out
std
mov
sahf
jno
pop
dec
mov
jge
enter
adc
jge
mov
jb
lds
popa
daa
jg
call
dec
std
jle
xchg
add
xor
mov
outs
sub
arpl
xor
arpl
les
pushf
inc
daa
and
and
push
daa
cmc
xchg
mov
(bad)
in
in
sub
sti
lods
sub
jbe
popa
jnp
xor
fcom
mov
cmove
(bad)
add
xor
stc
mov
pop
loope
dec
and
sub
fmulp
sbb
xchg
push
ret
add
je
push
clc
mov
mov
jmp
sahf
(bad)
out
int3
xchg
arpl
movs
push
pop
xchg
jnp
sahf
ret
popa
sub
xchg
inc
dec
mov
(bad)
aam
xor
push
cs
int3
xchg
loopne
mov
mov
inc
sub
adc
out
adc
jne
and
inc
mov
jecxz
inc
int
std
inc
add
mov
pop
aas
sbb
sahf
jno
test
adc
rcr
inc
push
jmp
out
mov
popf
push
inc
jge
fdiv
dec
or
repnz
call
icebp
scas
xchg
in
jb
inc
mov
pop
js
outs
sub
ss
push
or
xchg
out
sbb
mov
mov
ins
push
mov
xor
pop
dec
or
retf
iret
sti
sahf
cmp
and
cmps
idiv
pop
dec
mov
call
fistp
xor
in
xchg
mov
and
cmp
fimul
mul
inc
inc
xchg
or
out
mov
pop
sbb
mov
(bad)
call
pop
mov
in
sub
jo
mov
shr
and
mov
cmps
js
or
cmp
xor
mov
test
popa
adc
adc
les
jmp
inc
sub
fisub
add
add
in
retf
ror
cdq
push
and
or
push
cmp
xchg
or
test
lods
push
pop
jg
aam
ret
push
mov
jns
mov
call
dec
add
xchg
bound
ret
push
jb
cdq
or
and
scas
shl
push
(bad)
jmp
inc
push
inc
daa
or
sbb
add
arpl
std
xor
das
outs
push
mov
ret
adc
jae
fldenv
push
lock
data16
cmps
cld
data16
(bad)
out
or
frstor
inc
xor
out
pop
push
mov
stc
mov
xor
sbb
mov
cmp
out
shr
xchg
jb
or
adc
mov
or
dec
sahf
mov
sub
sub
rcr
call
xchg
ds
lods
hlt
stos
arpl
outs
xchg
pop
outs
imul
fsubr
ins
(bad)
jmp
fimul
test
call
inc
das
cmp
cli
cli
xchg
movs
and
and
dec
retf
popf
dec
in
retf
pop
add
into
dec
cli
jmp
inc
mov
mul
inc
xor
dec
sub
in
dec
adc
int3
call
cmp
push
mov
mov
inc
add
jns
(bad)
inc
daa
or
pop
jle
out
mov
cli
jge
adc
loop
sub
rcl
shr
jmp
pop
dec
adc
and
enter
mov
outs
jae
mov
not
jl
adc
push
inc
jnp
outs
sbb
push
ficomp
fs
mov
out
inc
daa
add
mov
jle
add
nop
jmp
clc
(bad)
call
ja
pop
outs
outs
repnz
xchg
stc
test
clc
jle
mov
fistp
pop
out
(bad)
aad
push
mov
loopne
test
bound
rol
test
or
stos
mov
mov
push
and
jecxz
sbb
out
movs
dec
pop
jno
push
sbb
pop
popa
mov
pop
sub
rcr
pop
and
arpl
push
jmp
cli
or
xor
dec
stos
into
in
or
pop
aaa
add
mov
out
ffreep
jmp
xchg
std
push
push
not
aas
mov
std
cmps
retf
test
fnstenv
cs
bound
in
retf
outs
aam
mov
jl
cmp
in
dec
jns
aam
mov
leave
stos
dec
outs
imul
add
aas
(bad)
ss
pop
lods
int3
jp
lds
adc
inc
xor
mov
jo
xchg
or
and
push
outs
jno
xchg
repz
clc
imul
pop
push
jle
mov
mov
dec
pop
jbe
out
mov
pop
sbb
mov
(bad)
jmp
pop
out
sub
jg
inc
adc
push
cmp
aas
inc
dec
xchg
mov
das
dec
cld
or
out
fild
fptan
in
test
pusha
dec
iret
xor
stos
test
inc
push
inc
aad
addr16
daa
xor
push
sbb
arpl
push
js
sub
stc
dec
and
shl
or
mov
cdq
jo
fidivr
clc
mov
stc
cmps
mov
sbb
jmp
sbb
mov
aad
aad
adc
les
jmp
inc
sub
in
fisub
lea
sbb
cmp
int
fidiv
dec
std
shr
popa
mov
into
test
(bad)
cs
fsubrp
jecxz
jne
sub
cmps
cld
(bad)
jecxz
inc
inc
ror
sbb
nop
fmul
push
jmp
sti
cdq
pusha
mov
xor
imul
xlat
add
pop
cmp
adc
pop
std
or
out
mov
cmps
cmp
dec
mov
or
pop
out
cmps
loop
inc
in
push
aas
lea
imul
adc
loopne
rol
mov
ret
push
pusha
pop
xlat
mov
adc
jae
and
ss
rol
dec
test
ud2
mov
xchg
test
in
(bad)
not
jb
mov
mov
mov
shl
inc
pop
js
arpl
xor
adc
outs
xchg
setno
ins
xchg
jl
mov
mov
xor
sub
jno
retf
adc
popa
push
data16
test
icebp
sub
sbb
mov
mov
and
(bad)
sbb
push
call
push
xor
std
call
jmp
and
cmp
pop
jle
pop
adc
sub
add
xor
repnz
imul
test
inc
lods
dec
sti
cmps
mov
sbb
or
inc
popf
push
fbld
pop
pusha
call
in
pop
ret
pusha
mov
sub
out
dec
push
or
call
nop
out
add
data16
imul
mov
add
mov
into
pop
jg
pop
ja
and
mov
movs
int3
addr16
sbb
sub
mov
pop
sti
add
mov
xor
jecxz
pop
daa
xor
lods
repz
xor
and
stc
or
retf
imul
bound
or
cmp
cmp
mov
xchg
imul
mov
ds
jmp
cld
(bad)
xlat
dec
dec
out
and
call
popf
fnstsw
inc
lods
int3
pushw
inc
and
(bad)
mov
jbe
and
fcomip
sbb
add
leave
cmp
mov
sti
pop
mov
sar
and
cld
cmp
xchg
movs
inc
test
or
out
outs
(bad)
popa
pop
xchg
add
jo
jns
push
cwde
cmc
sub
ret
out
mov
arpl
int3
xchg
pop
and
pop
loopne
dec
push
call
fisub
mov
ds
icebp
jbe
ror
inc
arpl
cmps
fld
sti
(bad)
je
cmc
sub
xchg
loope
xor
mov
inc
dec
mov
fisttp
sbb
push
in
jp
sub
sub
(bad)
je
sti
xor
fldenv
(bad)
pop
mov
out
or
mov
test
icebp
dec
mov
mov
inc
push
adc
aad
(bad)
adc
es
into
in
mov
dec
(bad)
popa
sbb
call
xchg
(bad)
mov
in
sahf
or
push
xor
ins
mov
addr16
dec
xor
adc
and
lods
hlt
jle
xchg
ror
call
cmp
jmp
pop
fidiv
(bad)
scas
rol
adc
push
jb
or
mov
sub
int3
call
mov
mov
pop
gs
hlt
iret
mov
out
and
xchg
inc
and
xor
and
(bad)
outs
or
sbb
jge
cmp
stc
mov
mov
cmps
jae
dec
cmp
rol
stos
les
jb
jge
mov
pop
test
cwde
loope
sar
cdq
sti
test
cmp
pop
pop
and
push
rol
sub
jecxz
jg
aam
ja
mov
mov
mov
test
sar
mov
xor
add
or
loope
repz
and
test
fisttp
stos
lea
sub
mov
idiv
cmps
inc
ins
das
and
jae
push
pop
in
push
pop
arpl
xchg
push
stos
ret
xor
dec
sbb
fidiv
rol
mov
mov
xchg
add
xchg
dec
sbb
jecxz
cmp
arpl
xlat
inc
pop
cmp
mov
loop
add
jno
(bad)
fimul
scas
adc
inc
dec
into
push
mov
outs
lods
das
or
lock
les
xchg
add
jae
shr
xchg
pop
sub
(bad)
cwde
or
add
(bad)
pop
cmp
adc
arpl
and
inc
cmp
popa
fst
adc
sbb
movs
fdiv
aad
pop
push
out
(bad)
clc
popf
and
jl
sbb
and
dec
push
pop
or
mov
cmp
aam
jl
shl
cmp
xor
in
cmp
or
jb
and
xchg
xor
inc
stos
xor
rcr
add
dec
pusha
jne
dec
sub
and
int3
push
sar
outs
dec
xchg
cmc
jecxz
mov
sub
dec
cmp
(bad)
into
sbb
mov
jno
into
push
loop
lea
cmp
push
call
jge
mov
nop
push
dec
test
pop
xchg
stos
ds
jo
and
cmp
nop
sub
mov
cli
aad
je
je
rcr
xchg
mov
xor
pslld
gs
stos
sbb
je
xor
mov
jb
jecxz
popa
and
test
(bad)
sub
test
lock
add
mov
add
shl
add
js
popa
call
inc
daa
xor
pop
cmps
sbb
sub
stos
cmp
jo
inc
xchg
adc
aam
mov
loop
and
jmp
adc
sub
dec
sbb
daa
mov
mov
in
pop
push
xor
inc
mov
add
dec
aad
mov
jns
push
inc
jmp
popa
fisub
or
mov
sti
iret
aam
int3
ins
mov
push
icebp
in
shl
cmps
adc
icebp
lock
mov
repz
ins
and
fwait
jb
lds
inc
std
cmp
sub
stos
jle
mov
test
inc
jno
mov
adc
fistp
leave
out
cmp
jge
and
push
lea
cs
adc
or
pop
ins
inc
and
or
stc
(bad)
cmp
pop
aaa
pop
out
jle
cmp
xchg
cmp
cld
pushf
outs
aad
push
cmps
call
fsubp
pushf
inc
xchg
push
mov
ret
sbb
mov
(bad)
sub
retf
scas
out
jne
push
pop
sbb
pop
pop
lods
fdivr
mov
imul
mov
ds
jmp
xchg
jle
or
jno
repnz
push
into
loop
xor
dec
mov
sbb
std
ficomp
arpl
dec
daa
xchg
jns
je
retf
or
jo
jb
mov
(bad)
and
cmp
cmc
outs
xchg
and
cmp
lahf
adc
push
stc
xchg
sahf
cli
mov
dec
push
movs
pop
out
test
or
je
stos
sub
movs
push
or
in
loopne
xor
es
mov
lods
loop
out
(bad)
jecxz
gs
mov
push
call
popf
sub
(bad)
cmp
cmps
push
adc
pop
jbe
or
sahf
mov
call
pop
mov
cmp
adc
sub
sbb
push
scas
mov
sar
mov
xor
std
inc
cmp
xor
xchg
or
jae
pop
fwait
cmp
or
xchg
hlt
pop
ss
loope
inc
xor
xchg
sti
cmps
push
pminub
outs
imul
not
fst
popa
adc
xchg
mov
adc
push
out
(bad)
xchg
inc
pop
mov
push
shr
das
push
jmp
jle
fwait
pushf
mov
(bad)
xchg
test
push
gs
hlt
int
stc
scas
adc
dec
push
add
push
lock
push
cli
int3
push
cs
stos
dec
jmp
test
push
fcmovbe
sbb
add
push
ret
push
retf
sbb
sub
cs
movs
mov
and
sbb
fldcw
xor
sub
cmp
call
adc
push
out
(bad)
xchg
inc
gs
in
xor
lds
sbb
sub
out
jmp
jmp
jl
scas
rol
and
or
cmp
xchg
jb
or
nop
mov
mov
je
mov
mov
jle
add
jg
adc
push
sbb
push
into
arpl
pushf
rol
sar
cmc
scas
sbb
ror
fst
pop
jge
lahf
cmps
adc
out
lock
jge
arpl
addr16
sbb
out
jl
xchg
xor
in
jno
(bad)
mov
cmp
inc
in
jns
inc
add
addr16
inc
jge
xchg
loopne
shl
loope
and
xlat
ja
mov
xchg
ffree
fistp
mov
inc
loopne
cwde
pop
push
xlat
adc
push
mov
and
jecxz
sbb
ins
hlt
mov
(bad)
in
jl
adc
push
dec
jb
in
adc
out
pusha
daa
call
dec
addr16
xadd
push
xor
xchg
xlat
call
clc
cmp
sbb
pop
fdivr
addr16
sar
inc
in
mov
pop
mov
or
add
cmp
dec
out
xchg
pop
and
sti
popf
add
pop
retf
scas
out
jne
pop
pusha
jmp
sbb
leave
aaa
fidiv
dec
test
mov
xchg
test
arpl
mov
and
rcr
adc
sahf
sti
sahf
enter
arpl
pop
ror
sub
adc
xchg
mov
mov
inc
or
mov
cmp
push
or
and
adc
push
stc
dec
xchg
or
jne
sub
adc
pop
ror
imul
mov
pop
xchg
test
arpl
cs
and
int3
xchg
jecxz
pop
retf
mov
mov
ins
(bad)
sahf
inc
jno
and
mov
adc
xchg
xor
pop
cmp
xchg
out
movs
push
fnstsw
sti
sub
jo
dec
xor
(bad)
and
and
lea
xor
cwde
mov
xchg
or
mov
loop
pop
mov
(bad)
test
jns
daa
fiadd
daa
imul
in
push
mov
icebp
sbb
xchg
sbb
mov
sar
fcom
and
mov
jne
xchg
jb
call
mov
popa
int
or
push
xor
dec
out
nop
mov
rcr
mov
(bad)
shl
push
jne
inc
fwait
dec
mov
inc
call
add
sub
xchg
dec
cwde
mov
outs
or
mov
lods
shl
lock
push
jb
jne
xchg
xor
fisubr
add
sbb
sti
(bad)
popa
(bad)
popa
pop
push
xor
jns
fst
ror
out
xor
addr16
arpl
xor
es
dec
shl
or
add
repnz
inc
sub
stos
mov
adc
cli
repnz
xchg
and
sub
cmp
(bad)
and
xor
rcr
pop
repz
pushf
mov
mov
stc
sub
adc
dec
out
pop
cmp
mov
mov
mov
sahf
inc
imul
mov
in
cmp
or
pop
inc
pop
or
or
inc
popf
sbb
test
dec
outs
sub
daa
js
add
ret
mov
and
jecxz
retf
xchg
cs
in
inc
nop
es
or
push
mov
push
(bad)
outs
or
mov
outs
sub
adc
jno
pop
lock
mov
and
jecxz
sbb
xor
or
pop
jbe
or
push
xor
jbe
shl
sub
inc
daa
add
out
dec
mov
pop
or
arpl
sub
lock
int3
aad
mov
loop
and
jmp
pop
idiv
mov
mov
repnz
pop
retf
lea
dec
sbb
fst
add
push
repz
pop
jb
test
enter
xor
xchg
pop
mov
nop
cmc
pop
inc
mov
loopne
xor
mov
std
test
sub
sub
into
jmp
retf
into
(bad)
in
jecxz
or
sub
jecxz
push
shl
adc
mov
dec
sub
out
test
jo
ss
mov
lds
popa
xchg
mov
sahf
(bad)
or
push
pop
lods
adc
mov
jae
pop
out
sub
cmp
push
jb
push
fsubr
or
fstp
cs
sub
add
sbb
cmp
imul
xchg
pusha
pop
cmp
cmps
adc
and
outs
adc
ret
push
mov
push
(bad)
mov
loopne
sbb
ret
pop
xor
idiv
mov
adc
jno
or
pop
pop
add
jno
pop
leave
out
add
xchg
jg
jle
ror
(bad)
paddusb
pusha
dec
cdq
or
dec
pop
test
(bad)
ficom
outs
sub
mov
cmp
xor
jno
sbb
shl
hlt
das
and
add
clc
mov
pop
test
xchg
sbb
hlt
pop
mov
mov
retf
sti
lods
push
ret
xor
cmp
xchg
outs
cld
cmp
and
cmp
rcl
adc
and
mov
pusha
out
push
xor
sbb
inc
xchg
or
push
jp
sbb
dec
not
xchg
sar
adc
adc
xchg
add
and
mov
xor
jmp
or
jb
sub
jmp
js
cmp
adc
inc
push
mov
mov
jecxz
lods
ret
mov
jb
xor
std
jecxz
imul
aad
xchg
add
cld
sub
mov
xchg
loope
pop
scas
or
sub
mov
dec
sbb
add
or
cmc
adc
xchg
add
cld
sub
mov
mov
(bad)
out
push
dec
pop
daa
(bad)
int
fld
mov
int3
popf
push
pop
dec
pusha
jmp
std
test
sar
pop
add
ffreep
push
and
sbb
jecxz
mov
cs
or
out
jno
jno
not
xor
pop
dec
outs
add
add
pusha
add
repz
fsub
sbb
das
ret
in
or
push
imul
ss
xlat
dec
retf
mov
jns
into
(bad)
cmp
mov
push
xchg
leave
rcl
test
cs
pushf
mov
jb
cmp
adc
(bad)
mov
std
ja
test
add
cdq
and
xchg
and
xor
jo
mov
jecxz
js
inc
dec
sbb
add
lea
or
jmp
mov
leave
ja
out
pop
xor
je
(bad)
sahf
push
out
mov
mov
jle
repz
bswap
push
xchg
add
dec
and
shr
retf
pop
fs
jno
xor
dec
jns
mov
push
push
pushf
mov
mov
stc
scas
imul
xor
out
inc
or
arpl
leave
out
adc
into
in
sub
lds
mov
inc
cmp
call
test
fistp
fld
rcl
std
dec
in
gs
jne
adc
fcom
mov
xchg
pop
arpl
call
sahf
sti
mov
inc
retf
rcr
je
js
pop
xor
es
dec
movs
sub
adc
inc
or
in
imul
test
mov
cmp
sbb
mov
cmp
inc
stos
add
sbb
dec
xor
adc
rcr
ja
sbb
lds
adc
cmp
(bad)
enter
sbb
xchg
mov
int
arpl
add
mov
stc
lods
jl
in
stc
mov
cmps
cld
daa
bound
into
mov
imul
int3
aam
fs
das
push
lods
dec
jmp
push
mov
pop
out
jp
push
shl
pusha
jno
adc
int
and
jns
in
retf
ror
jo
inc
mov
(bad)
push
mov
int
adc
leave
pusha
xchg
addr16
test
cmps
or
rcr
xor
out
and
mov
retf
outs
mov
push
xor
cmc
inc
cdq
(bad)
sahf
add
push
xor
xor
leave
pushf
xchg
push
and
adc
or
sbb
loope
int3
out
daa
fild
pop
cmp
push
mov
aam
xchg
icebp
je
adc
shl
adc
xchg
imul
push
push
mov
adc
jno
cmc
sub
dec
test
adc
pushf
inc
fimul
inc
add
cmp
mov
push
ret
sub
push
ret
cmp
mov
and
into
cmps
adc
cld
pop
outs
(bad)
adc
pushf
inc
fimul
mov
jb
mov
xchg
xor
jmp
test
sbb
xchg
inc
push
adc
stc
div
mov
mov
cmp
mov
icebp
mov
pop
out
xchg
stos
test
in
cmp
add
push
dec
add
jecxz
adc
cmp
inc
daa
and
inc
or
out
fild
addr16
xchg
inc
popa
mov
xor
sub
push
mov
sbb
cdq
pusha
jae
dec
xchg
mov
push
mov
fisttp
ret
or
inc
xchg
adc
pop
mov
in
sub
push
cld
ss
ins
loope
ficom
mul
cld
push
icebp
in
dec
stc
add
sbb
pop
mov
jo
inc
call
out
sub
push
aaa
aaa
adc
xor
dec
scas
call
push
in
or
loopne
add
jae
jp
xchg
jge
cs
mov
mov
xchg
mov
jecxz
add
dec
adc
mov
xchg
mov
xor
shl
mov
stc
inc
sbb
shl
out
sub
jo
mov
sbb
fimul
mul
inc
inc
sbb
or
or
cmp
push
mov
adc
popa
mov
pop
out
sub
jno
ss
xchg
push
jecxz
aad
xor
jae
and
sub
cmp
adc
mov
sub
adc
xchg
sub
cdq
daa
data16
mov
leave
mov
arpl
cmp
sub
stos
jl
xchg
xor
inc
cmps
adc
jns
stos
movs
outs
pop
(bad)
adc
cbw
lahf
dec
and
aad
inc
daa
add
in
or
outs
cmp
ds
mov
push
xor
jns
push
pusha
cld
cwde
xchg
dec
pop
push
movs
lock
mov
sbb
or
pushf
mov
mov
dec
aad
jno
mov
sub
jns
imul
call
xor
enter
xchg
out
or
xor
and
int
mov
scas
ror
cmp
xor
loop
(bad)
cmp
adc
test
ins
mov
(bad)
xor
cmp
fdivr
pop
cmps
shl
iret
mov
cmp
mov
daa
xor
adc
clc
xor
xchg
or
xor
add
sub
stc
scas
adc
mov
mov
or
mov
jg
inc
inc
pusha
rcr
stos
test
mov
int3
test
ss
ins
jmp
bound
sti
sub
addr16
out
aaa
push
inc
ds
inc
nop
or
stc
lds
jae
shr
jno
icebp
adc
push
cli
loop
xor
or
(bad)
push
in
pop
add
pop
inc
pop
cmp
sub
cmp
push
mov
outs
sub
into
daa
mov
popf
push
out
jge
mov
dec
mov
mov
cld
push
cwde
dec
popa
fucom
sahf
cli
mov
test
or
lds
pop
je
(bad)
cmp
sahf
inc
gs
movs
pop
xchg
pop
dec
test
cmp
ja
mov
pop
shl
sti
mov
adc
jnp
(bad)
mov
xchg
lods
(bad)
in
sbb
pop
popa
adc
call
pop
mov
push
mov
out
adc
inc
xor
shr
jo
pop
cdq
in
push
(bad)
mov
lea
mov
rol
ins
push
aam
inc
cmp
xchg
or
retf
std
stos
add
cmp
jge
iret
add
jecxz
cwde
mov
sub
je
mov
sti
mov
and
mov
add
jge
pop
jns
pop
or
xchg
or
mov
lahf
out
push
mov
cmp
retf
push
cwde
daa
out
jg
sbb
adc
cmp
lea
pop
xor
dec
cdq
and
add
dec
daa
jb
dec
jmp
xor
fsubr
and
data16
ds
mov
or
retf
push
test
add
dec
inc
je
icebp
jne
ja
aas
std
xor
cdq
jo
add
jp
cwde
addr16
xchg
inc
jle
sbb
dec
fisttp
std
add
and
nop
in
or
jne
test
add
push
or
xchg
and
cwde
stos
sbb
add
xchg
jbe
int3
pop
jbe
cmp
and
xchg
xor
into
ins
loope
mov
add
sbb
popa
pop
cmps
or
hlt
xchg
sahf
sbb
cmp
fdivrp
fnstenv
lea
sahf
fidivr
es
xor
and
and
push
es
movs
adc
(bad)
in
jecxz
dec
int3
aam
push
movs
ss
mov
jg
popa
mov
sbb
inc
aaa
dec
(bad)
cdq
repz
stc
add
mov
jecxz
inc
aas
fimul
fs
stos
clc
sar
adc
jns
mov
xor
jns
cdq
cwde
nop
xor
ret
loope
pop
cwde
or
lods
push
stc
sub
xchg
push
cmp
gs
data16
push
jns
cmps
push
xor
adc
stc
in
inc
je
cwde
or
or
mov
xchg
int
(bad)
aas
out
pop
shl
add
xchg
mov
cmps
aam
js
hlt
xor
cmp
mov
imul
div
push
retf
fcom
hlt
mov
ja
or
daa
out
test
pusha
pop
xor
sbb
pop
daa
aam
sbb
mov
(bad)
int
push
pop
sub
dec
inc
sub
in
outs
ja
xchg
mov
sub
iret
sbb
mov
xor
mov
rcr
xor
cmp
jbe
cmp
adc
inc
dec
add
push
(bad)
outs
stc
cmp
mov
movs
push
outs
or
cld
and
movs
out
push
or
sub
scas
ret
std
cmps
fisubr
sub
sub
test
dec
sub
pop
(bad)
add
std
push
not
das
(bad)
stc
or
ret
inc
xor
imul
fdiv
add
pop
push
int3
add
neg
daa
mov
(bad)
cmp
and
fild
inc
scas
lods
popa
(bad)
sahf
sbb
fwait
std
cmps
inc
push
mov
sub
(bad)
shr
lea
hlt
and
pop
dec
xor
ret
mov
xchg
repz
fstp
mov
aad
pop
sbb
in
add
push
push
loop
mov
lds
or
xchg
arpl
or
push
cmp
shl
adc
retf
xchg
sub
repz
jne
arpl
mov
mov
pusha
add
sbb
sti
pop
repnz
enter
lods
push
add
mov
out
sub
jl
ficom
js
xor
fstp
pop
mov
sahf
xor
push
mov
dec
inc
je
xor
push
mov
fwait
add
jmp
ror
out
mov
addr16
mov
xchg
imul
jbe
inc
outs
fdiv
or
mov
rcl
xchg
adc
push
iret
out
cmp
(bad)
sbb
add
daa
xor
ror
sbb
dec
sbb
int3
out
jp
pop
loopne
cmp
add
mov
out
test
cmc
pop
shr
cmp
push
outs
push
repnz
das
fbstp
pop
inc
pop
pushf
push
add
sahf
jno
fdivp
cmp
dec
xchg
bound
inc
stos
add
jmp
sbb
lods
sub
int3
leave
and
fucomi
or
pop
test
push
mov
je
adc
out
adc
xor
rcr
movs
dec
inc
mov
add
xchg
das
aas
test
in
push
pop
pop
mov
jns
sbb
mov
(bad)
cmp
push
movs
int
xchg
sar
out
dec
adc
int3
out
lahf
mov
lahf
leave
pusha
aaa
aaa
retf
std
mov
lahf
xor
dec
mov
or
movs
sbb
push
pop
or
pop
cmp
jmp
cs
sub
jns
xchg
(bad)
sahf
pop
inc
xchg
add
(bad)
cs
int
xchg
sar
pushf
mov
mov
push
cmp
push
inc
push
adc
das
fdiv
bound
mov
add
pop
out
(bad)
std
xchg
movs
sub
sbb
leave
pusha
fdiv
pop
test
cmps
add
rcr
pop
push
sbb
loop
dec
mov
lds
sub
arpl
(bad)
aaa
in
rcr
inc
scas
sbb
(bad)
je
(bad)
cmp
push
and
mov
lods
(bad)
mov
mov
jecxz
(bad)
push
push
mov
mov
xor
pop
push
lds
cmp
push
and
inc
aaa
xor
lds
and
pop
inc
and
lahf
loop
adc
push
(bad)
aad
ja
data16
push
dec
pushf
or
adc
xor
sub
cs
(bad)
aam
push
jne
mov
loop
adc
int
add
lea
pop
ds
sbb
inc
daa
push
hlt
outs
jae
xchg
or
ins
cmps
jle
inc
cwde
mov
jo
loope
pop
push
xchg
into
xchg
mov
jns
and
bound
mov
outs
lods
and
adc
sbb
aaa
sub
sub
std
frstor
pop
adc
adc
arpl
addr16
test
mov
inc
(bad)
sbb
ja
out
sti
mov
test
outs
cld
test
sub
and
or
adc
push
xor
sahf
bound
sub
loope
mov
or
in
jecxz
push
popa
jmp
mov
mov
jp
pop
adc
popf
xor
cmp
adc
pop
dec
or
aam
mov
adc
inc
lahf
jno
mov
fwait
sbb
(bad)
adc
stc
mov
mov
or
sbb
hlt
repnz
pop
push
cmps
add
add
ja
mov
aad
ja
stos
jmp
cmp
stos
aas
adc
ror
maskmovq
adc
(bad)
loop
mov
inc
xchg
icebp
hlt
jno
adc
pushf
popf
mov
jns
sbb
in
in
cmp
out
jl
xor
mov
mov
(bad)
pop
sub
arpl
sub
ss
dec
lods
sub
and
stos
aas
gs
xchg
call
fst
xchg
mov
ss
xchg
ss
(bad)
adc
sbb
addr16
ja
test
(bad)
in
jecxz
jg
aam
ja
cmps
cmps
fpatan
xor
xchg
sahf
sti
cdq
add
out
sub
jo
mul
xchg
add
imul
es
xchg
or
outs
xchg
add
push
iret
not
(bad)
jmp
jns
mov
and
jo
add
iret
sub
or
adc
sbb
inc
cmp
jp
popa
gs
pusha
lods
push
xor
jp
pop
mov
xor
adc
push
movs
inc
jbe
xor
in
rcr
jae
xchg
add
sar
cmp
mov
div
cwde
jo
(bad)
lahf
xchg
mov
cmc
push
out
div
in
or
xor
sub
pop
pushf
mov
mov
imul
mul
es
cmps
jns
dec
mov
shl
push
add
test
(bad)
ficomp
inc
add
rcl
test
inc
adc
cmp
sbb
das
daa
jle
retf
cld
test
imul
jo
ret
mov
adc
ror
adc
cli
and
or
xor
mov
es
mov
jecxz
lods
in
ds
(bad)
aam
and
std
pcmpeqd
outs
nop
mov
rcl
test
pusha
call
mov
xchg
cmp
jp
or
hlt
in
dec
and
dec
inc
pop
stos
dec
jmp
dec
and
cmps
adc
cmp
ds
dec
push
push
shl
idiv
mov
in
pop
sub
mov
jae
addr16
mov
and
pop
scas
push
push
pop
xchg
lahf
fdiv
dec
popf
test
fisubr
xchg
sub
mov
mov
jmp
mov
std
mov
into
stos
int3
test
test
in
call
add
inc
dec
mov
lea
xor
push
enter
loop
xchg
xchg
xor
rol
fist
dec
sahf
jno
or
test
ror
ins
stos
mov
push
push
mov
stc
cmps
push
out
adc
call
pop
mov
addr16
dec
mov
mov
imul
adc
and
and
imul
cmp
rcl
cmp
icebp
mov
scas
sahf
xor
stos
test
push
in
loopne
jle
fwait
out
js
xor
xchg
lods
xor
or
sbb
pop
dec
pop
or
cmc
mov
add
aam
(bad)
sub
test
jb
retf
popf
adc
jae
popf
lods
lds
mov
fdiv
pop
inc
pop
sbb
lahf
mov
ins
push
push
mov
es
mov
test
or
pushf
pop
hlt
imul
cwde
pop
out
mov
mov
add
push
adc
jae
aam
out
sub
retf
sti
lods
push
ret
and
cwde
cmp
dec
mov
pop
and
gs
in
jb
mov
cmp
mov
je
inc
pop
and
jmp
jbe
jge
je
aaa
das
push
scas
stos
lds
or
not
jmp
(bad)
sti
test
cmps
ds
or
and
dec
lods
les
loopne
or
(bad)
adc
mul
xor
mov
mov
or
pop
xor
mov
or
movs
push
out
xchg
cmp
adc
mov
lds
lods
pop
in
lds
cmp
stos
jle
mov
fisubr
mov
and
xchg
xchg
and
das
(bad)
sub
es
or
in
sub
int3
leave
sub
int
retf
xor
jmp
mov
lods
mov
(bad)
mov
add
or
add
arpl
mov
shl
dec
pusha
icebp
cmc
xchg
popw
ja
test
mov
int3
adc
xchg
(bad)
sub
mov
or
out
sbb
xor
std
mov
ja
cmps
popf
cmp
cdq
mov
scas
retf
lds
adc
xor
and
sbb
mov
ror
inc
(bad)
int
push
pop
pop
test
adc
(bad)
mov
ja
test
fist
out
shl
retf
push
ja
cmps
dec
mov
jle
mov
in
xor
inc
or
fs
retf
cdq
mov
and
je
js
rcr
or
add
popf
outs
sub
repnz
ss
mov
movs
sahf
mov
ss
sub
fnsave
adc
aad
dec
jb
fdiv
dec
popf
xor
sbb
adc
in
sbb
cmp
stos
jl
cmp
dec
and
sbb
sahf
push
mov
test
adc
push
(bad)
test
add
pop
dec
(bad)
movs
sar
mov
jmp
popa
into
cmp
sub
mov
and
jo
leave
daa
stos
jnp
fs
mov
inc
lahf
sbb
hlt
retf
lods
mov
pop
push
mov
cmp
retf
pop
test
dec
push
mov
adc
and
js
arpl
outs
adc
or
shl
and
sub
xor
pop
stc
(bad)
bound
inc
sub
leave
fst
sub
xor
adc
test
mov
xchg
inc
jg
ror
sbb
call
xchg
xchg
in
loopne
push
xor
xchg
outs
imul
push
xor
sbb
into
sub
jmp
sub
push
ret
in
xchg
(bad)
retf
icebp
adc
adc
outs
cmp
test
adc
push
fsub
sbb
or
sub
test
sub
mov
fs
push
xor
jp
fld
rcl
neg
(bad)
fist
rcr
arpl
jmp
adc
loope
push
scas
mov
adc
sub
(bad)
cmp
hlt
inc
sbb
xchg
add
adc
jns
cmps
push
xor
hlt
enter
int3
out
cmp
mov
outs
sub
fisttp
mov
(bad)
inc
and
mov
mov
or
fstp
call
adc
inc
pop
ret
push
and
jns
stos
lds
cmps
sbb
sahf
mov
xchg
(bad)
inc
cmp
or
push
ficomp
in
jne
rcr
jmp
inc
dec
fwait
mul
cwde
or
stos
je
dec
dec
push
pop
ret
jmp
xor
hlt
xor
loope
or
or
movs
fs
mov
scas
rol
xor
ret
loope
push
and
lods
in
lea
pop
nop
fstp
inc
pop
icebp
xchg
inc
hlt
lods
xchg
loop
adc
fisubr
cmps
mov
call
jecxz
(bad)
jne
and
sub
out
(bad)
outs
or
add
icebp
lods
push
stos
dec
xchg
cmp
neg
or
fwait
and
shr
cli
rcr
cmp
xchg
cmp
ror
lahf
mov
rcr
in
jne
adc
and
fcom
pop
jae
arpl
xor
cmp
std
xchg
enter
enter
dec
sbb
(bad)
aam
sbb
cld
stos
xlat
iret
js
sub
mov
xchg
and
and
add
and
mov
stc
(bad)
in
out
out
mul
sbb
(bad)
inc
cmp
aad
xchg
mov
sbb
loope
icebp
adc
retf
xchg
inc
or
(bad)
adc
(bad)
in
(bad)
outs
or
pop
cmp
xchg
add
mov
leave
push
jg
popf
pop
xor
add
cwde
jb
pop
mov
inc
cmp
stc
dec
call
shl
outs
je
ficom
pushf
mov
sbb
inc
cmps
js
xchg
dec
add
dec
sub
jge
aaa
in
leave
mov
add
mov
lods
dec
sub
lods
shl
(bad)
fcomip
sub
retf
out
or
xchg
clc
sub
call
add
cmp
fwait
mov
lods
and
jmp
(bad)
call
dec
movs
jne
mov
mov
sub
dec
nop
(bad)
nop
imul
dec
lock
or
mov
mov
cmc
pop
push
inc
pop
sbb
mov
in
sbb
sub
fisubr
aam
jecxz
mov
movs
inc
pop
xor
leave
mov
and
and
in
daa
push
jge
push
lods
and
push
pop
loopne
out
mov
scas
sbb
cmp
jp
sub
mov
ins
shr
push
movs
sbb
gs
lahf
inc
and
icebp
and
mov
jecxz
mov
movs
inc
popf
xor
sti
dec
xor
pop
mov
ficomp
daa
cmovb
lahf
xor
sbb
mov
xor
into
xlat
or
xchg
jo
xchg
and
mov
cmc
and
push
addr16
pop
fwait
cdq
(bad)
mov
(bad)
sbb
fisubr
cmp
lock
inc
push
cmovbe
in
and
test
data16
jmp
shr
test
call
xchg
icebp
shl
push
adc
push
inc
cwde
lea
test
add
dec
call
sahf
sbb
shl
mov
sbb
popf
add
mov
mov
cmp
(bad)
aam
pop
cdq
sub
mov
cdq
jo
cmp
js
cmp
or
imul
xor
repnz
aaa
mov
popf
clc
jne
or
push
(bad)
pop
and
push
in
je
aaa
cli
rcr
cmp
adc
sub
pop
je
mov
cmc
shr
imul
into
xchg
repz
xchg
mov
(bad)
mov
movs
imul
int
cmps
popa
cld
xchg
jecxz
sub
sub
not
retf
cmp
mov
add
xor
sbb
rol
mov
in
in
and
inc
dec
gs
(bad)
dec
jno
adc
out
dec
dec
add
xchg
jle
mov
inc
ror
fdiv
mov
stos
retf
push
jg
inc
out
cmp
(bad)
lahf
fwait
and
jl
mov
dec
dec
mov
in
std
int3
call
sub
bound
or
cdq
std
(bad)
jle
dec
das
mov
mov
mov
pop
dec
(bad)
in
mov
jbe
call
retf
push
test
dec
mov
out
pop
popf
mov
jg
lods
adc
push
ins
outs
lock
cmp
sub
outs
jg
adc
rcr
push
jp
inc
cli
or
pop
inc
pop
ins
aam
jl
retf
mov
(bad)
and
ds
loopne
shl
and
ins
scas
je
dec
pop
jb
dec
rep
add
scas
mov
jns
dec
pop
pop
in
xchg
icebp
sbb
inc
rcr
js
mov
arpl
ror
mov
jmp
leave
imul
popa
je
mov
in
test
into
in
dec
sbb
cmp
repz
outs
inc
xchg
cli
mov
dec
jmp
push
scas
(bad)
imul
and
add
out
or
enter
or
cmp
mov
arpl
xor
or
cdq
xor
xchg
js
push
xchg
inc
and
call
std
xor
and
push
mov
mov
int3
mov
lds
sub
inc
pop
(bad)
(bad)
or
push
mov
jecxz
sub
inc
adc
aad
rcr
js
pop
mov
xor
(bad)
xchg
mov
pop
addr16
sti
out
adc
ins
xchg
addr16
inc
retf
xchg
out
movq
sbb
inc
aas
jno
ja
xchg
push
mov
call
pop
fidivr
aaa
xchg
mov
cmps
xchg
test
inc
imul
cmp
(bad)
jg
and
or
ins
push
xor
ja
xor
aad
jne
ins
adc
(bad)
popa
mov
pusha
inc
dec
push
push
retf
into
(bad)
add
xchg
inc
inc
adc
cmp
jb
ret
push
and
mov
push
test
shr
fs
jae
fldcw
cdq
dec
pop
xor
xchg
iret
das
(bad)
ficom
adc
arpl
cli
jg
lahf
fdivr
mov
rcl
xchg
dec
repz
fs
xor
cmp
mov
push
fldcw
dec
pcmpeqd
sub
(bad)
js
sub
push
test
in
add
adc
pop
mov
(bad)
or
pop
inc
adc
push
add
sti
cwde
or
shl
push
dec
add
xor
xchg
sbb
mov
fidivr
cmc
ins
in
fcomp
and
pop
push
pop
sub
push
dec
in
popf
add
stc
ss
mov
add
xchg
outs
inc
sbb
sub
sbb
rol
mov
push
fld
icebp
and
out
mov
clc
mov
and
in
or
jmp
pop
neg
fs
and
imul
mov
sti
jbe
adc
mov
cmc
jbe
inc
mov
jmp
adc
aaa
sbb
xor
xchg
xchg
pop
push
frstor
pop
ficomp
mov
add
add
(bad)
arpl
into
aaa
add
movs
(bad)
cdq
mov
out
inc
pop
sbb
sbb
cdq
cld
mov
sub
lock
gs
loopne
mov
div
gs
outs
popf
das
push
out
mov
and
cli
imul
push
jno
in
cwde
imul
mov
xor
cmp
ror
sbb
or
cmc
pusha
xchg
not
pop
rcl
sahf
aas
test
test
or
cmc
call
xor
mov
repnz
movs
daa
adc
jmp
mov
rcr
sti
jbe
and
sub
scas
in
jnp
cs
movs
out
cmps
scas
lods
dec
test
mov
dec
dec
and
cld
dec
call
sbb
aas
stos
jmp
sub
push
cmps
in
and
data16
data16
jne
pop
jmp
jmp
xchg
or
and
pop
loopne
not
mov
sahf
jno
add
pop
push
mov
addr16
jmp
mov
xor
dec
lock
push
fnstenv
inc
cmp
push
xor
push
fwait
mov
add
cwde
gs
rol
fsub
leave
fs
shr
(bad)
mov
aam
in
arpl
cmps
mov
idiv
pop
sbb
test
shr
and
popa
(bad)
sahf
ds
mov
adc
xchg
das
push
xor
mov
rcr
add
(bad)
popa
dec
sbb
test
cmps
call
add
adc
push
(bad)
in
xchg
adc
in
jecxz
cmp
xor
or
sbb
test
rol
jno
fmul
(bad)
sbb
mov
sub
addr16
sbb
pop
push
or
mov
jno
js
mov
(bad)
xchg
out
(bad)
adc
sbb
mov
jne
or
pop
xchg
fwait
dec
sub
inc
push
inc
retf
jmp
lock
fsub
arpl
(bad)
scas
jbe
lea
cmp
sbb
pop
lock
xchg
xor
(bad)
shl
ja
cli
mov
dec
push
adc
js
ss
pop
mov
movs
dec
test
add
xchg
push
inc
sbb
dec
test
int
(bad)
xor
mov
popa
sti
xchg
mov
cs
sbb
ss
dec
ficom
je
sbb
push
out
ret
(bad)
fisub
call
(bad)
adc
test
scas
push
pop
(bad)
in
je
shl
add
test
mov
cmp
sbb
loope
(bad)
or
dec
sahf
and
lock
sbb
je
sti
cmp
push
popf
test
dec
loopne
ins
frstor
aam
jbe
and
or
sahf
cmp
dec
jnp
fist
divps
sbb
jmp
and
fwait
mov
(bad)
fs
xor
sti
inc
mov
xor
mov
mov
ficom
iret
es
jmp
xor
ss
cwde
test
pop
fidiv
popa
jecxz
sub
jmp
push
shl
hlt
dec
in
jb
lds
addr16
and
or
mov
xchg
or
mov
mov
adc
out
adc
inc
test
xor
xor
pop
jbe
jmp
mov
and
sub
movs
push
ins
add
push
mov
out
push
push
scas
ret
dec
sub
loop
sub
pop
into
daa
mov
mov
sbb
add
je
xor
stc
imul
sub
jecxz
(bad)
ins
mov
mov
ficom
in
(bad)
popa
mov
shl
adc
idiv
(bad)
adc
mov
mov
ret
pop
push
repnz
shl
fcomp
and
inc
cwde
xchg
out
and
jg
pusha
fistp
test
xor
mov
fwait
xor
mov
stc
(bad)
aam
adc
or
outs
xor
ja
aas
ins
pop
cmp
inc
cmps
mov
ret
push
fild
stc
mov
sbb
fcmovnu
xchg
mov
in
outs
ja
out
bound
pop
push
stc
jno
add
push
ss
push
fdivr
push
cmp
ins
dec
loop
int3
out
or
dec
(bad)
aam
mov
adc
pop
test
fs
scas
pop
je
(bad)
pusha
jae
clc
sub
in
mov
dec
jmp
retf
int3
pop
push
mov
icebp
jmp
sub
lds
and
(bad)
adc
shl
push
pop
push
cli
dec
nop
pop
enter
les
adc
mov
cmp
std
sub
and
pusha
jmp
jecxz
push
rol
into
bound
ret
ret
mov
nop
imul
jge
shl
gs
sahf
addr16
pop
sub
xor
(bad)
mov
stos
les
pop
inc
add
or
push
or
mov
mov
addr16
jbe
test
mov
rcl
xchg
adc
xor
pop
push
int3
push
call
xchg
es
(bad)
bts
mov
call
stos
xor
sub
(bad)
and
mov
fdiv
ficomp
inc
daa
cmp
pop
dec
push
pop
push
int3
out
jl
cmp
je
leave
int3
xchg
mov
lods
sub
std
mov
or
jbe
jmp
pop
jp
xor
repz
mov
jb
mov
xlat
inc
jnp
cdq
or
or
cwde
test
jbe
mov
in
repz
test
pop
mov
lods
lea
sahf
jno
pusha
xchg
scas
mov
clc
jb
ret
ins
pop
loope
(bad)
aad
inc
xchg
fisub
int
mov
call
push
and
fwait
sbb
jae
gs
jo
neg
and
shl
adc
pop
ret
push
mov
int
jbe
(bad)
cmc
test
mov
cmps
das
int
dec
inc
adc
stos
mov
(bad)
inc
daa
jno
and
mov
arpl
ror
cmp
imul
mov
mov
or
mov
sub
jo
ss
push
out
std
aas
inc
iret
adc
mov
dec
xor
fcomp
jae
popf
push
dec
popa
fstp
push
dec
outs
cld
test
cmps
sbb
sub
jmp
jmp
pushf
push
sub
(bad)
in
aas
and
cmp
je
push
or
enter
push
pop
pop
xchg
stos
jns
inc
fild
addr16
retf
sub
sbb
iret
xchg
hlt
in
sbb
sbb
mov
gs
xchg
mov
aam
mov
int3
data16
adc
and
xor
push
jno
jb
cmp
lock
repz
sub
or
adc
movs
adc
push
pop
dec
outs
into
in
das
arpl
leave
out
adc
(bad)
fist
jns
out
pop
sbb
ret
pop
xlat
or
arpl
cld
pop
jmp
jmp
movs
push
xor
and
inc
jo
cmp
movs
call
mov
lds
mov
pop
sub
sbb
jg
dec
stos
add
popa
mov
push
cdq
adc
sub
jl
or
leave
and
sbb
lds
xor
pop
repnz
sub
int3
leave
sub
push
ret
pop
xchg
jno
imul
push
xor
ret
xor
ficomp
xchg
mov
xor
or
es
push
arpl
jmp
movs
out
cmp
sbb
arpl
and
test
pop
sbb
cld
pop
inc
cmp
(bad)
in
mov
stc
(bad)
or
in
stos
add
xchg
pusha
jae
cmp
int
data16
dec
add
mov
in
xor
jbe
cmc
test
(bad)
xor
jge
dec
pop
pushw
fucomp
cmps
xor
enter
adc
jne
push
dec
mul
cli
cmps
mov
or
(bad)
aad
xor
hlt
push
mov
inc
repnz
int3
xchg
pusha
aaa
adc
cmps
adc
test
xor
fbld
inc
fdiv
jle
or
hlt
ror
sbb
dec
xor
pop
js
cmp
push
inc
jbe
sub
(bad)
sahf
ds
or
sbb
shl
xchg
push
xor
std
jecxz
push
mul
mov
sti
xchg
add
test
sub
mov
leave
cmp
jmp
cmp
cdq
mov
cwde
pop
out
mov
mov
push
mov
scas
cmc
mov
mov
adc
lahf
adc
stos
xchg
shr
xchg
clc
jo
test
out
sub
pop
sub
push
xor
jmp
(bad)
call
cmc
push
inc
mov
cwde
mov
(bad)
jmp
sub
lods
jg
and
dec
cmp
in
mov
sub
jbe
test
movs
hlt
mov
push
fdivr
call
or
cwde
xor
mov
and
mov
imul
jo
cdq
add
rcl
jne
xor
adc
mov
mov
add
add
outs
pop
retf
inc
add
icebp
push
cdq
cmp
rcl
pop
push
test
mov
ficomp
stos
mov
xchg
xchg
pop
daa
or
das
hlt
in
sbb
dec
iret
fsub
xchg
je
retf
push
adc
dec
push
hlt
xchg
in
push
stc
repnz
popa
inc
xor
dec
aaa
loope
and
adc
stc
sahf
scas
les
pop
push
jmp
and
dec
sbb
sbb
pop
fimul
gs
ret
popa
jae
mov
das
push
fisub
jns
or
add
mov
pushf
xor
mov
test
jb
xor
jge
gs
(bad)
ins
stc
mov
jbe
xor
jg
cmp
push
xchg
sub
and
lds
pop
pop
pop
mov
icebp
mov
cmp
fistp
aam
or
pop
xchg
dec
fmul
shl
xchg
and
inc
sub
aad
mov
mov
(bad)
pushf
daa
test
inc
xchg
loopne
or
test
push
test
mov
jmp
imul
pop
cwde
repz
xchg
cmps
xchg
push
scas
iret
dec
imul
outs
xchg
inc
xchg
stos
or
or
jbe
jmp
(bad)
cwde
fbstp
gs
mov
leave
and
loope
xchg
in
cmp
jmp
mov
or
ja
scas
jg
dec
sahf
cmps
xchg
mov
sbb
add
(bad)
sub
fstp
cmp
push
add
mov
repnz
adc
mov
test
dec
popf
jo
mov
mov
dec
mov
call
or
popf
xchg
repnz
jl
push
xor
(bad)
ss
outs
xchg
mov
aas
dec
icebp
push
xor
add
or
mov
rcl
inc
iret
add
jle
add
loope
jmp
scas
loop
mov
lock
cmp
mov
xor
std
int3
outs
test
mov
mov
sub
push
aad
cmp
dec
add
fs
or
sub
retf
in
xor
and
mov
pusha
cmc
xchg
mov
outs
ja
shl
sub
inc
or
into
jns
data16
xchg
add
add
cmc
jl
add
outs
test
stos
bound
icebp
adc
in
stos
scas
cdq
xchg
rcl
leave
mov
pop
out
xchg
pushf
jns
cdq
retf
sti
lods
push
ret
and
cwde
cmp
arpl
add
pop
xchg
pop
stos
push
xor
push
stc
xchg
out
cmp
mov
fucomip
xchg
xchg
stos
add
fst
mov
psubd
arpl
pop
sub
lsl
test
cmp
and
push
call
rol
pop
cmps
push
scas
cmp
loope
outs
adc
fsub
lock
scas
not
mov
test
in
xchg
sahf
pop
push
gs
jo
mov
jns
fisub
jmp
xchg
iret
retf
pop
or
scas
pop
arpl
mul
outs
sar
movs
stc
int3
xchg
mov
adc
pop
sub
pusha
bound
jbe
xchg
cmps
arpl
cmp
sub
mov
jno
jmp
sbb
pop
push
and
sbb
leave
cdq
mov
daa
cmp
ror
xchg
ins
mov
add
inc
sahf
add
xlat
ret
outs
add
pop
mov
jnp
cdq
cmp
xchg
inc
add
or
(bad)
jmp
inc
in
neg
mov
mov
mov
scas
ror
shr
cmp
sub
adc
adc
inc
xor
xor
mov
out
or
pusha
push
dec
jne
xchg
fstp
adc
test
and
int3
fadd
in
xor
aaa
mov
or
arpl
add
or
sbb
lds
mov
repz
addr16
arpl
adc
push
adc
sahf
pusha
mov
dec
out
mov
mov
icebp
cwde
adc
dec
pushf
mov
or
push
xor
repnz
imul
div
jge
je
(bad)
rcr
push
add
retf
inc
and
sbb
jp
in
pushf
mov
adc
push
xor
add
ficomp
leave
or
popf
xor
(bad)
shl
pop
add
inc
rcr
xlat
cs
jo
mov
sbb
inc
fwait
out
and
xor
lds
aad
shr
dec
inc
push
aas
mov
xlat
icebp
(bad)
addr16
mov
cmps
movs
ja
sbb
jge
std
or
movs
or
pop
test
or
(bad)
in
jmp
addr16
xor
push
(bad)
imul
xor
inc
jno
test
cmp
call
jnp
es
dec
adc
push
mov
adc
jno
add
jae
shr
and
mov
popf
test
fidiv
lock
adc
setle
in
pop
dec
xor
test
inc
push
mov
or
mov
cwde
gs
push
jbe
lods
inc
push
out
ret
push
sbb
test
dec
mov
pop
sti
fwait
test
aam
xor
push
push
dec
cdq
pcmpeqd
push
cmp
js
rcr
enter
jmp
mov
jns
push
or
sti
push
jecxz
sahf
lods
inc
std
(bad)
iret
daa
lahf
push
sar
popa
pop
cdq
fidivr
xor
push
jno
mov
adc
jb
nop
lods
cmp
outs
jecxz
adc
sahf
lods
mov
sub
add
mov
(bad)
adc
rol
jecxz
push
xchg
test
jno
ret
retf
rol
retf
jo
xchg
pop
add
hlt
adc
aaa
jmp
mov
pop
inc
xchg
cmc
stc
mov
or
hlt
rcl
jmp
mov
add
or
dec
and
xlat
pop
sbb
imul
jge
icebp
popf
jae
cmp
lahf
test
adc
or
arpl
xor
push
add
clc
leave
into
pop
push
dec
movs
xchg
neg
neg
mov
into
ret
cmp
out
or
test
pop
inc
out
mov
or
cli
loope
or
jbe
dec
sub
cmp
jns
call
and
add
je
mov
(bad)
fcomp
(bad)
jp
jno
nop
add
pop
push
fiadd
sub
iret
sti
call
cs
lods
sub
es
sbb
xchg
cli
and
stos
neg
loop
adc
jmp
rcl
aam
shr
cs
fld
sub
xor
retf
pop
mov
retf
sbb
xchg
cmp
dec
add
mov
xor
inc
dec
mov
xchg
mul
or
jmp
test
setno
rcr
inc
and
fcomip
loope
mov
rcr
leave
test
sub
and
jmp
adc
and
xchg
lds
cmp
dec
pop
outs
je
out
mov
test
sbb
mov
cmp
into
(bad)
sub
add
xchg
mov
out
aaa
and
inc
sbb
pop
sub
int3
mov
cmps
jg
adc
hlt
xchg
inc
dec
and
pop
in
xor
add
stos
dec
jmp
jmp
cli
mul
mov
dec
mov
mov
jle
imul
sbb
inc
cmp
push
in
scas
cmp
sub
mov
cmp
jno
ss
out
lock
fimul
lea
push
xor
retf
cdq
push
and
cld
repz
out
or
repnz
lods
gs
ins
icebp
test
push
push
fsubr
jns
icebp
mov
sahf
iret
jge
out
cwde
addr16
data16
sbb
xor
pushf
xor
repz
sub
jb
xchg
dec
push
pop
test
sbb
rcpps
ss
add
or
adc
cmp
int
std
inc
in
push
sbb
outs
mov
test
cmps
ds
jbe
or
and
jecxz
and
lods
sub
mul
dec
(bad)
psrld
std
xor
not
je
pushf
jno
fldcw
sbb
cmps
fisubr
lahf
cmp
mov
daa
sbb
int3
aam
fs
pop
int
dec
jmp
aam
mov
xchg
icebp
inc
sbb
je
addr16
jg
cmp
or
or
xor
pushf
xor
rep
cmps
or
dec
sahf
mov
cli
sub
aad
xor
adc
push
das
xchg
add
(bad)
pop
fdivr
cmps
mov
fsubr
or
xchg
or
int
out
sub
mov
jne
push
out
daa
mov
or
std
sbb
hlt
retf
mov
pop
outs
test
outs
cld
xchg
aam
push
out
pop
push
hlt
into
and
int
data16
dec
lea
jns
or
and
push
daa
shl
icebp
xchg
mov
ja
fs
and
jo
ret
ficomp
dec
mov
or
sbb
hlt
retf
mov
push
adc
mov
add
fwait
and
jo
ss
outs
jne
(bad)
adc
pop
and
add
arpl
push
daa
fisttp
push
mov
jno
test
mov
jge
jg
jecxz
pusha
jnp
jecxz
es
xchg
neg
jle
sbb
dec
mov
add
or
dec
and
xlat
pop
xor
xchg
loop
aas
inc
loopne
in
xchg
cwde
mov
ret
popa
ja
pop
daa
imul
add
cld
je
dec
adc
(bad)
dec
in
sub
sub
push
push
jno
ret
push
shr
test
dec
cmp
popf
sub
mov
in
call
(bad)
aaa
test
test
mov
pop
mov
movs
mov
(bad)
pop
jl
jle
xor
sbb
push
inc
stos
(bad)
add
inc
je
scas
inc
scas
xchg
in
retf
imul
xchg
mov
mov
jge
or
call
cs
retf
pop
add
ret
push
mov
scas
jle
(bad)
xchg
mov
arpl
inc
je
(bad)
cmp
lahf
lahf
sub
mov
and
pop
mov
fld
lds
mov
pop
out
mov
add
push
mov
adc
mov
sbb
int3
pop
mov
aam
xor
out
add
adc
outs
ja
xchg
mov
jnp
xchg
cmp
xor
pop
repnz
sub
int3
leave
das
aaa
and
pop
stc
imul
movs
dec
adc
out
adc
mov
arpl
xchg
mov
cmp
mov
popf
pop
out
std
in
sahf
jno
pop
sub
retf
jbe
mov
ficom
xor
add
rcr
jmp
cmp
sub
xor
adc
into
cmc
adc
xchg
mov
mov
sbb
mov
xchg
add
(bad)
inc
stos
les
shl
pushf
mov
stos
idiv
mov
sub
imul
cld
xor
cmps
cmc
(bad)
cmps
mov
jl
daa
jmp
mov
or
hlt
cli
sub
int3
leave
sub
cs
mov
int
mov
mov
in
cwde
ret
push
push
sub
push
hlt
outs
xchg
jne
add
sbb
dec
cld
loop
scas
cmp
mov
call
push
jp
ret
push
push
mov
xor
dec
aam
cmp
add
add
add
mov
jmp
pop
out
sub
mov
and
call
or
or
retf
adc
xchg
add
test
sub
je
(bad)
sahf
(bad)
stos
shl
aaa
fimul
mov
xor
add
in
add
sbb
std
int3
out
jge
dec
dec
cmps
popf
test
les
dec
aam
add
outs
daa
lea
scas
jne
add
cmovnp
sbb
mov
cwde
jl
jle
daa
mov
mov
mov
add
(bad)
mov
js
jmp
inc
stos
push
fisub
adc
and
or
es
outs
adc
sub
push
cld
fwait
outs
inc
dec
call
inc
std
call
xlat
aas
xchg
fnsave
xchg
cmp
push
daa
stos
ret
xchg
or
retf
std
mov
fdiv
dec
popf
xor
ins
and
mov
outs
outs
mov
ret
cmc
adc
outs
ja
xchg
cmp
je
js
push
dec
sub
fadd
mov
jne
call
push
int3
ins
mov
jmp
std
lods
fadd
mov
hlt
aad
add
mov
add
xor
enter
mov
xchg
shl
inc
adc
adc
xchg
loopne
push
pop
enter
and
inc
adc
out
adc
mov
jno
sub
sbb
push
xor
std
jecxz
out
out
mov
cmp
mov
rcr
cdq
and
mov
cmp
jecxz
(bad)
mov
cmps
pop
push
movs
or
xor
adc
into
cmc
adc
outs
ja
fidiv
sub
icebp
add
fisub
lock
lea
add
hlt
cdq
cmps
fisttp
jecxz
xor
jns
mov
pop
cs
mov
fdecstp
fadd
outs
jne
in
xchg
(bad)
retf
in
ja
dec
xchg
imul
cmps
inc
call
stc
(bad)
in
sahf
or
push
xor
test
data16
ds
mov
mov
cmp
mov
arpl
outs
sbb
sub
cmp
test
or
pop
and
into
xchg
sbb
push
ret
cmp
movs
inc
bound
cmp
push
mov
arpl
test
inc
adc
jb
dec
jmp
mov
cmc
ret
data16
outs
in
push
inc
bnd
lock
push
dec
popa
inc
icebp
in
movs
push
dec
pop
mov
stc
punpckhbw
and
push
or
popf
jno
ss
inc
fimul
jmp
xor
es
add
add
or
arpl
test
mov
cdq
pop
aam
jnp
xor
in
mov
pop
cmp
mov
sbb
xchg
mov
shl
out
push
cmp
add
pop
test
or
xchg
mov
adc
stos
mov
adc
mov
mov
jmp
dec
xor
push
pushw
mov
js
jmp
jnp
add
addr16
ins
rcl
sbb
stc
(bad)
aam
jbe
stos
pop
retf
test
push
cmp
and
push
push
xor
jns
iret
sbb
and
out
cmp
mov
sbb
sbb
fld
jp
jne
hlt
je
add
js
cdq
cwde
cmp
adc
retf
cmc
inc
and
pop
int
dec
mov
fisttp
xor
jge
fstp
push
xor
push
mov
mov
lock
fidivr
test
jmp
add
mov
adc
aaa
sub
push
xor
add
inc
arpl
or
setns
gs
xchg
add
push
cmps
ja
ror
cmp
mov
mov
mov
inc
and
mov
jge
outs
or
mov
cmps
addr16
add
mov
mov
jecxz
inc
daa
cmp
loope
dec
call
sbb
stc
xor
retf
mov
leave
mov
sub
and
add
jecxz
(bad)
imul
pop
pop
mov
stc
inc
mov
push
xor
leave
(bad)
addr16
fs
xchg
add
pop
inc
daa
xor
ror
sbb
mov
push
pusha
jae
movs
fbstp
mov
inc
mov
icebp
or
shl
ss
add
jmp
mov
and
adc
clc
or
xor
mov
nop
mov
jmp
xchg
push
cmp
push
aaa
pop
inc
fdiv
jle
dec
lods
loopne
pop
in
lds
xor
stos
push
mov
and
shl
fidiv
mov
and
adc
adc
mov
or
cmp
pushf
xor
repz
and
adc
sahf
or
ins
push
out
jns
sbb
dec
das
jns
or
and
add
or
arpl
mov
mov
fist
add
mov
aad
push
pop
add
mov
lahf
xchg
add
push
cmp
int
push
sbb
dec
enter
inc
or
stos
and
into
popa
jae
fidivr
cmp
lahf
xchg
ja
pop
jmp
jmp
or
mov
add
push
or
gs
aam
mov
rcr
add
nop
xor
scas
outs
lds
pop
ret
cld
mov
fs
sub
int3
leave
daa
mov
pop
clc
stos
(bad)
popa
add
ja
or
sub
sub
jne
pop
adc
cmp
mov
xchg
das
mov
or
out
mov
mov
mov
jmp
ins
xchg
mov
jns
pop
jnp
inc
xor
and
dec
jle
scas
dec
(bad)
in
stc
xchg
stos
(bad)
adc
push
and
mov
mov
adc
dec
fs
daa
mov
cmp
shl
push
pop
dec
or
adc
movs
not
rol
xchg
cmp
jbe
mov
ficom
xor
stos
cld
scas
pop
out
(bad)
in
sub
mov
not
arpl
fdiv
or
sbb
jecxz
cdq
retf
sti
lods
push
ret
add
mov
cmp
sub
xor
fucomi
ret
imul
adc
xchg
mov
bound
and
pop
sbb
dec
and
aam
mov
in
scas
cmc
xchg
add
push
sbb
xor
out
movs
pop
add
in
push
mov
aas
inc
sbb
pop
enter
cs
stc
(bad)
aam
and
or
mov
mov
dec
pop
mov
pusha
enter
mov
mov
cs
pushf
mov
push
sbb
push
sbb
mov
mov
ficom
sbb
jecxz
sbb
jecxz
xchg
int
mov
or
aad
call
icebp
test
dec
je
sub
fwait
add
jmp
out
fcom
mov
daa
jmp
mov
hlt
in
outs
movs
cwde
jno
icebp
jb
ret
add
mov
in
ja
pop
pop
pop
adc
xchg
mov
xor
xchg
mov
lea
lds
addr16
aam
gs
daa
mov
out
mov
and
pop
fst
ret
data16
outs
neg
inc
shl
lds
xor
sbb
adc
mov
stos
not
clc
(bad)
popa
data16
test
test
(bad)
jmp
cmp
or
fdiv
jp
sti
cmp
sbb
adc
mov
stos
not
je
dec
fisubr
mov
pop
and
mov
aad
cmp
stc
mov
adc
ds
mov
cmc
inc
cmps
xchg
aad
fidiv
sub
jge
cdq
jo
std
rcl
aad
jnp
daa
sbb
push
aam
xor
push
mov
shl
test
sbb
vmwrite
ss
inc
daa
cmp
mov
xchg
repnz
rcr
adc
(bad)
push
xor
pop
add
push
push
push
and
lods
pop
cmps
jecxz
mov
sbb
mov
cmp
popa
(bad)
popa
mov
sub
cmp
jns
adc
out
jmp
dec
nop
pop
ret
(bad)
mov
jle
pushf
jnp
add
sbb
in
mov
stc
cmp
jns
pop
test
shr
stos
inc
sub
xchg
mov
dec
or
in
xchg
adc
out
mov
push
add
outs
xchg
adc
outs
xor
xor
mov
mov
cli
data16
fadd
xchg
adc
jmp
add
pushf
xor
out
and
adc
jmp
aam
and
inc
pop
gs
fdivp
adc
sbb
fs
adc
cmc
je
cmps
sbb
cs
xchg
fst
inc
sbb
iret
outs
retf
into
in
in
addr16
pop
fs
mov
xchg
xor
adc
hlt
adc
clc
lds
mov
push
mov
adc
pushf
jno
add
jae
xor
inc
sub
cdq
and
movs
jl
xchg
xlat
sbb
dec
sbb
mov
xchg
stos
dec
lds
in
sahf
or
push
xor
ins
fcmovne
daa
adc
xor
cwde
or
movs
data16
addr16
call
idiv
mov
xchg
sbb
ins
rol
mov
adc
shr
inc
jb
jb
add
sub
pop
jo
xchg
cmp
pop
out
or
sub
scas
rol
adc
nop
adc
push
mov
mov
jmp
xchg
sbb
push
jle
cmp
or
scas
sbb
test
pop
adc
pop
fcomi
adc
mov
xchg
shl
fisub
lods
lods
lea
pop
popa
adc
call
aaa
inc
pop
mov
jl
adc
jae
pop
out
rcr
xchg
and
jmp
adc
sub
mov
popa
adc
loop
hlt
add
sbb
jo
sahf
mov
cli
xor
repnz
xchg
repz
adc
ret
jecxz
push
sub
outs
test
cmps
push
popa
adc
call
repnz
icebp
(bad)
popa
mov
aad
pop
pop
outs
sub
sbb
ret
inc
push
cmp
xchg
aas
xchg
aaa
or
lea
dec
mov
nop
pop
push
loop
adc
fdivp
fidiv
mov
add
out
cmp
jge
sbb
mov
retf
adc
xor
lahf
push
xchg
das
imul
iret
sbb
aaa
fimul
lea
mov
xor
cmc
jo
xchg
add
shl
cmp
add
xchg
add
cwde
or
jns
sbb
out
cdq
fisttp
addr16
int3
test
not
retf
mov
jno
cwde
sub
int
pop
ins
sub
popa
cmc
adc
cmp
xor
jbe
retf
(bad)
in
mov
shl
mov
xor
and
add
fidiv
addr16
(bad)
adc
adc
lea
xlat
sbb
hlt
in
sbb
call
or
dec
xor
aam
inc
mov
xchg
and
stc
xchg
xchg
add
mov
pop
jmp
xchg
sbb
hlt
lahf
mov
sbb
leave
(bad)
popa
jno
test
inc
scas
sbb
jge
xor
adc
push
mov
xchg
addr16
dec
sbb
hlt
adc
xor
in
or
mov
sub
add
xchg
add
(bad)
jbe
fdivr
xchg
inc
les
sar
loopne
and
mov
cmps
mul
imul
xor
or
and
imul
vmovntdq
add
mov
(bad)
outs
xchg
dec
adc
stos
clc
movs
and
fld
and
add
xor
mov
in
jl
out
mov
movs
xor
movs
push
pop
repnz
adc
xchg
(bad)
or
sti
mov
lea
add
frstor
jecxz
cmp
cmps
or
mov
cmps
push
xchg
mov
hlt
outs
imul
aaa
and
out
or
inc
test
sbb
fbld
call
nop
xor
out
push
loop
adc
add
out
sub
jo
xchg
ins
pop
sub
cmps
or
inc
stc
ficomp
cmps
rcr
xor
sub
nop
xor
retf
loope
cdq
mov
in
xchg
mov
loope
mov
adc
(bad)
fadd
inc
and
adc
jp
mov
inc
test
pop
xchg
mov
out
jnp
repz
sub
fcom
cmps
mov
and
xchg
(bad)
fcomp
and
dec
adc
test
sub
sub
bound
cmp
fwait
cmp
iret
icebp
pop
sbb
cmp
dec
out
dec
test
mov
xchg
sahf
sti
popf
xor
push
xor
xchg
popa
sbb
xchg
pop
add
fcom
and
rcr
movs
repz
pop
cmp
std
aad
sahf
jno
pop
xchg
xchg
push
mov
call
pop
mov
iret
jmp
adc
aaa
sbb
dec
mov
xor
not
ins
mov
xor
jns
fmul
adc
jle
jmp
jecxz
enter
mov
push
mov
fcomp
cmp
mov
push
test
jmp
adc
jecxz
xchg
or
sub
pushf
xor
push
mov
jb
loop
popf
fcomi
add
cmp
leave
sbb
leave
fs
aam
(bad)
sub
sbb
ror
sbb
jmp
out
or
adc
outs
ja
xchg
xchg
movs
adc
sub
xchg
fwait
sub
push
and
sahf
push
cmps
inc
xchg
or
inc
not
mov
mov
adc
(bad)
xchg
stc
scas
into
inc
xchg
shl
fisub
lods
push
cmps
lea
pop
lods
repz
jne
pop
push
loop
adc
mov
xor
enter
inc
push
jo
mov
mov
mov
fmul
sbb
int
inc
sub
adc
ret
fsub
int3
retf
xor
cmp
dec
sub
xor
xchg
arpl
mov
mov
(bad)
mov
mov
pop
test
shr
sbb
inc
pushf
add
in
dec
daa
inc
neg
mov
sbb
loopne
or
mov
stos
or
cdq
test
pop
jnp
fidiv
push
imul
jns
adc
inc
(bad)
(bad)
mov
cmps
inc
jle
ror
sbb
mov
cmps
fld
adc
xor
test
fld
and
jmp
(bad)
mov
add
mov
aam
mov
bnd
in
sbb
jb
les
jae
(bad)
push
fimul
lea
iret
mov
sar
sbb
ror
dec
dec
pusha
cmc
jle
mov
add
(bad)
adc
xlat
xchg
and
jge
sbb
cmp
popf
sub
mov
inc
scas
fld
mov
call
jmp
push
xlat
cmp
lahf
jg
sub
mov
call
int
movs
push
lods
test
xchg
repnz
(bad)
popa
mov
test
jmp
pop
fucomi
mov
gs
dec
cmps
js
jecxz
(bad)
xchg
retf
sub
and
jae
popf
bound
cmc
cs
mov
sbb
(bad)
xchg
enter
ret
add
jle
adc
rcl
cmp
retf
inc
cmp
sbb
jl
out
stos
nop
ss
xchg
pop
xlat
push
cmp
inc
adc
gs
sbb
xchg
imul
fisttp
xor
dec
or
jge
(bad)
popa
mov
mov
mov
aad
mov
jno
ss
out
fidiv
inc
stos
hlt
mov
cmp
ror
mov
std
int3
popf
push
push
cmp
add
jb
ja
stos
mov
or
and
lahf
in
sbb
adc
pop
push
cmps
shl
mov
xor
std
jecxz
push
inc
xor
add
cmc
pop
ins
dec
dec
loope
push
xchg
sahf
into
stc
test
sbb
mov
xchg
pop
lahf
mov
nop
shl
mov
test
mov
test
mov
cmc
fisub
das
and
(bad)
in
dec
in
shr
sbb
pop
xchg
or
and
repnz
jno
iret
leave
out
cmp
cld
lahf
mov
mov
dec
(bad)
in
or
arpl
cmp
hlt
out
jle
inc
nop
cmp
in
xchg
mov
scas
push
ins
mov
push
xor
add
cmp
jg
and
cmp
in
xor
xor
stos
neg
sahf
stc
(bad)
popa
add
jo
aas
xor
or
and
pop
jge
inc
out
daa
jmp
mov
or
arpl
push
daa
shl
movs
inc
sbb
xchg
add
or
out
mov
add
xchg
add
movq
into
dec
and
pop
sub
pushf
xor
rep
cwde
jl
dec
cs
int
fdiv
aad
cmp
icebp
(bad)
adc
cli
ficom
inc
daa
sbb
xchg
inc
inc
xor
std
jecxz
out
or
pusha
or
push
and
shl
inc
fisubr
daa
cmp
and
cld
(bad)
jecxz
iret
sbb
add
in
fdivr
(bad)
popa
fistp
and
outs
movs
(bad)
sti
lock
cmp
jmp
addr16
in
mov
iret
pop
inc
pop
nop
out
sbb
mov
mov
gs
or
mov
sub
mov
ret
pop
sbb
movs
inc
cmp
(bad)
aam
rep
mov
or
mov
pushf
or
xor
ret
push
pop
ins
jl
daa
push
mov
sub
pop
arpl
(bad)
int
push
jbe
jmp
out
mov
or
and
cmp
xor
push
jg
sbb
repz
shl
pop
cmp
sbb
push
test
test
es
stc
pusha
(bad)
adc
jmp
jmp
mov
push
xor
or
stos
jmp
pop
test
sub
cmp
fistp
sbb
pop
pop
cmps
or
call
in
lds
or
fbstp
in
test
aam
leave
mov
out
xchg
mov
iret
lods
push
ret
adc
push
pusha
xor
in
sbb
inc
adc
adc
aam
mov
rcl
stc
mul
sahf
adc
jns
add
or
sbb
fimul
cld
jbe
and
leave
jecxz
outs
ja
test
test
jge
xchg
or
pop
push
xchg
mov
test
jl
mov
dec
xchg
outs
cmp
aam
pusha
dec
std
jp
dec
inc
je
popf
jne
ja
fs
xor
into
xor
(bad)
stos
mov
mov
push
pop
cmps
rol
dec
out
idiv
pop
adc
aam
or
adc
lock
gs
scas
retf
outs
mov
cwde
add
lea
cmp
cs
repnz
and
or
dec
xor
dec
imul
inc
adc
sar
(bad)
loop
loope
(bad)
add
push
pop
or
hlt
in
dec
mov
xor
sbb
retf
(bad)
sub
jo
ss
shl
aaa
fisub
jp
cmps
jnp
cs
in
cmps
aam
inc
shl
mov
pop
test
sahf
or
mov
jbe
sar
jecxz
mov
hlt
jle
dec
hlt
adc
jle
mov
and
or
fdivr
into
popa
fist
scas
mov
inc
sub
test
lods
sbb
fimul
and
(bad)
aam
in
mov
arpl
aam
in
icebp
sti
xlat
stos
dec
jmp
cmps
and
pop
sbb
stos
jecxz
jno
ss
xor
retf
inc
iret
mov
sbb
cmp
repz
push
lea
jae
sub
dec
pushf
mov
cld
xchg
add
int3
rcr
stos
and
xor
xchg
mov
(bad)
cld
mov
sbb
mov
bound
cmps
sbb
dec
popa
(bad)
mov
push
ja
fs
pop
mov
jae
(bad)
cdq
and
cmp
push
xchg
sub
shl
jno
cmp
test
ja
cmps
mov
mov
mov
fldcw
mov
sbb
mov
jmp
and
hlt
pop
fimul
test
mov
popf
pop
out
scas
jmp
movsx
rol
(bad)
(bad)
in
mov
rol
bound
and
cmc
mov
hlt
outs
outs
jne
add
sbb
pop
cmp
xchg
iret
inc
adc
xor
xchg
push
(bad)
lahf
fwait
xchg
dec
fdiv
mov
mov
sbb
cmp
cmp
(bad)
retf
icebp
adc
test
and
mov
sub
jl
jl
ss
cmp
push
and
retw
(bad)
in
pop
dec
out
mov
push
int3
ins
cmps
dec
(bad)
mov
stc
cmp
das
lods
cmp
lahf
jnp
and
jmp
adc
popf
aas
jns
mov
cmp
mov
xor
clc
or
add
pop
xchg
pop
test
mov
push
or
adc
jb
and
add
xchg
jle
in
pop
in
shr
stos
or
mov
mov
mov
mov
aad
or
sahf
xor
cwde
or
mov
and
push
inc
stos
psubusb
xchg
inc
cmps
add
push
jno
mov
mov
mov
push
sub
sbb
xor
cdq
mov
arpl
aam
cmc
icebp
or
stos
dec
pushf
mov
mov
adc
mov
call
addr16
inc
daa
imul
xchg
pop
xchg
movs
and
and
mov
pop
mov
and
in
ret
push
mov
xor
(bad)
fisub
aam
dec
dec
movs
jae
mov
stc
call
(bad)
sahf
or
push
xor
std
sub
adc
push
push
and
int3
fs
loopne
push
in
or
out
ja
or
sbb
movs
ins
xor
push
mov
mov
xor
and
cwde
sub
sbb
mov
lea
nop
outs
pop
clc
mov
mov
mov
and
or
cmc
mov
and
movs
push
dec
add
xor
jge
mov
retf
jge
sbb
add
(bad)
mov
call
xchg
loope
push
dec
jb
call
outs
data16
mov
bound
clc
lods
add
nop
movs
int3
fs
out
pop
ins
cmp
mov
inc
cmc
test
mov
inc
dec
pop
test
cs
aad
cmc
lds
xchg
add
ds
mov
xchg
add
sbb
enter
pop
and
nop
popa
ret
data16
bound
pushf
test
into
outs
leave
jno
jle
cdq
fisttp
dec
call
sub
add
jg
popa
mov
adc
push
and
fisub
cmps
cmp
xchg
pop
mov
mov
outs
(bad)
xor
push
xchg
xor
sti
mul
hlt
cwde
test
loop
xchg
add
inc
ja
aaa
push
stc
or
mov
pop
or
xchg
not
sbb
outs
and
test
or
xor
icebp
mov
add
cmps
das
mul
and
push
cmps
outs
not
(bad)
xchg
in
cmps
mov
xchg
sbb
mov
xor
mov
outs
pop
sbb
das
test
or
add
fsub
stc
cdq
push
scas
and
xchg
sbb
cmp
push
out
not
jle
imul
jne
mov
out
add
cld
cwde
daa
mov
divps
sbb
fadd
cmp
stos
ss
inc
scas
leave
xlat
call
sub
in
retf
pop
sti
mov
js
xor
lods
and
xor
xchg
es
inc
jg
pop
jle
dec
sahf
stc
pop
xchg
test
push
jp
gs
sahf
ret
out
fucomi
gs
pusha
test
cmp
popa
adc
call
nop
mov
scas
shr
leave
mov
out
mov
or
xchg
mov
push
and
into
push
icebp
test
and
or
imul
jmp
fucomip
dec
jb
jmp
pop
mov
jmp
out
pop
jecxz
(bad)
fst
sub
movs
das
hlt
in
mov
fsubr
(bad)
and
pop
(bad)
cmps
jl
shr
(bad)
sub
sub
push
and
push
dec
xchg
in
int
jl
std
int3
xchg
in
(bad)
(bad)
pop
div
xchg
(bad)
or
add
ins
pusha
addr16
adc
into
aad
(bad)
cmc
or
int
sbb
pop
sub
lds
jl
pop
cmp
in
std
scas
clc
mov
sub
and
fcom
or
mov
outs
jge
push
xchg
fwait
jb
lock
sub
and
(bad)
mov
mov
sahf
into
mov
pop
addr16
sbb
add
add
lods
ins
and
iret
in
jl
xor
into
inc
in
stos
dec
jmp
sub
xor
pop
das
and
or
and
neg
ja
xchg
out
add
inc
jae
xchg
dec
add
fadd
jno
jmp
push
fiadd
sbb
pop
mov
sbb
xor
cmp
outs
nop
cmps
jne
jo
jecxz
sahf
jno
lds
in
jge
sbb
xor
xchg
cmp
xor
stos
mov
pushf
out
es
pop
inc
repz
xor
(bad)
adc
push
iret
lods
push
xor
test
lods
cmp
ja
push
aaa
or
cs
pop
mov
jg
xchg
pop
jle
mov
out
ja
mov
push
enter
sub
and
and
into
fs
(bad)
pop
inc
pop
pop
xchg
ds
mov
loop
xor
jge
sbb
outs
dec
xchg
arpl
add
leave
jbe
sbb
sbb
(bad)
fnsave
retf
outs
inc
mov
or
hlt
mov
inc
and
push
push
add
mov
sar
and
leave
cmp
cdq
mov
loopne
je
dec
(bad)
jb
dec
or
mov
fwait
and
(bad)
out
in
sub
mov
inc
mov
enter
xchg
sbb
mov
xor
call
out
out
xor
push
rep
test
aad
xor
hlt
xor
jmp
ret
std
pushf
add
jae
sar
shr
cmp
add
pop
sbb
daa
xlat
and
pop
dec
outs
(bad)
sub
imul
mov
retf
dec
xchg
retf
imul
adc
mov
(bad)
and
movs
xor
ss
jo
dec
shl
xor
sti
lds
xchg
mov
cmps
aam
jo
scas
lock
out
adc
xor
ins
sbb
cmp
or
xchg
pop
stc
mov
stos
pop
pop
dec
jmp
pop
test
pop
mov
jg
addr16
inc
adc
xlat
sub
sbb
hlt
dec
or
repnz
sub
or
in
xchg
inc
int
setle
mov
out
pop
dec
mov
fdivr
cmp
push
sbb
popa
in
xor
xor
bound
fwait
jbe
icebp
xchg
add
pop
adc
aad
dec
in
enter
add
dec
lahf
outs
test
dec
sbb
hlt
xchg
push
lds
xor
sub
stos
dec
pushf
cmps
rcl
(bad)
into
aad
push
xor
mov
push
sar
lods
inc
jg
sbb
mov
cmp
call
jbe
icebp
dec
and
hlt
mov
in
ret
popa
add
jb
jl
inc
or
(bad)
sbb
inc
daa
push
mov
mov
aam
pusha
dec
and
fcomip
sbb
or
test
aam
jns
stos
mov
jp
mov
xlat
enter
cmps
push
outs
xchg
add
mov
sub
push
mov
stc
add
push
xor
js
cdq
jo
bound
and
sbb
loope
lahf
push
ins
test
cmp
mov
adc
mov
ret
cdq
sub
pop
or
sbb
dec
out
push
pop
addr16
stos
lds
ret
pop
rcl
arpl
scas
sbb
lds
stos
loope
fnsave
rcl
popa
(bad)
adc
leave
clc
mov
into
jmp
cmps
mov
jmp
scas
jle
xchg
add
inc
call
out
sub
mov
adc
ja
inc
loopne
push
imul
rol
sbb
adc
out
repz
inc
scas
cmp
aad
popf
push
xor
nop
loopne
jo
mov
lahf
outs
neg
add
ins
xchg
das
jbe
xchg
lock
mov
retf
xor
mov
add
jno
into
inc
sub
mov
jg
adc
ret
push
rcr
or
in
lock
aam
sbb
out
push
in
retf
dec
and
cmps
adc
adc
xlat
mov
cld
scas
inc
gs
xor
ss
push
sub
push
outs
ds
int
popw
add
stc
mov
mov
sub
or
pavgw
stos
push
fisubr
inc
and
pusha
cmc
(bad)
sbb
out
pop
sbb
jp
xchg
xchg
stc
(bad)
popa
add
lods
lea
ins
cli
dec
nop
repz
adc
sub
lods
aad
xlat
lds
sub
in
dec
adc
and
out
pusha
pushf
pop
fstp
bound
inc
retf
pop
mov
out
ror
fistp
sti
and
lds
push
dec
mov
xor
std
mov
movs
jae
mov
stc
cmp
jae
pop
out
sub
jo
inc
xor
cwde
add
mov
ins
dec
(bad)
in
dec
ds
or
mov
daa
add
stos
sbb
out
sub
(bad)
fmul
cli
jmp
fadd
push
repz
and
sahf
arpl
aam
and
stos
mov
cmp
xchg
add
das
xlat
aad
mov
push
fstp
xchg
mov
or
or
(bad)
bound
mov
das
std
int3
popf
push
ja
jmp
pop
test
loope
sub
mov
jns
push
fimul
mul
cmp
and
aam
fdiv
xor
sub
sahf
jno
int3
test
push
sbb
add
dec
cs
mov
mov
sub
out
ret
mov
jg
pop
xor
pop
mov
add
sahf
jno
int3
test
push
mov
iret
and
xchg
jo
mov
mov
and
mov
mov
pop
xlat
or
xchg
repnz
stos
not
dec
popa
cmc
mov
jle
inc
jb
mov
out
(bad)
and
pop
inc
test
test
push
test
(bad)
pop
push
out
call
in
and
addr16
sahf
movs
into
mov
int
push
xor
or
mov
cmp
xchg
dec
lods
test
push
dec
adc
leave
push
cmp
cmp
pop
stc
pushf
mov
in
in
out
fadd
shl
inc
cli
ins
cwde
fwait
in
adc
xchg
inc
push
inc
adc
push
cld
xor
sbb
jecxz
xlat
or
out
in
or
in
inc
push
fwait
out
xor
mov
jmp
sub
add
in
mov
stos
jle
dec
(bad)
call
inc
and
ret
data16
cmp
data16
test
sub
pop
str
rcr
mov
scas
test
pop
or
popf
add
fstp
pop
jle
into
gs
adc
add
sub
mov
dec
mov
cmp
sbb
push
call
ret
ins
add
adc
sti
sbb
cmp
xchg
dec
lods
test
push
dec
adc
leave
push
cmp
cmp
xlat
bnd
xchg
mov
(bad)
js
gs
cmps
ret
inc
add
or
lahf
sti
xchg
mov
push
push
mov
inc
(bad)
xchg
fild
fisubr
xchg
mov
cmps
mov
aam
add
lahf
jae
or
mov
ins
fld
mov
sbb
jmp
inc
jl
adc
fadd
or
xor
adc
test
cmps
and
movs
aas
mov
out
pop
aad
xor
dec
mov
push
adc
mov
inc
cmp
mov
mov
fisub
mov
push
call
xchg
xor
cmp
push
mov
inc
int3
jo
cdq
jo
ja
sahf
mov
sub
pushf
aaa
xchg
mov
imul
or
jmp
inc
inc
dec
jmp
movs
aam
cmps
add
in
pusha
push
stc
adc
push
scas
imul
xchg
sahf
mov
or
xor
shr
arpl
ss
jl
rcr
fwait
jno
adc
out
inc
stos
or
cmp
stos
and
add
retf
lahf
xchg
ret
ins
(bad)
add
mov
sbb
xor
bound
daa
xchg
hlt
fdivr
mov
jbe
arpl
push
adc
xor
xchg
ja
jae
loopne
sub
push
dec
and
dec
dec
nop
jmp
sbb
out
int3
adc
dec
push
test
leave
shr
ficom
test
adc
pop
mov
xchg
and
pop
stos
pop
jmp
jmp
lods
aam
cmps
call
jmp
idiv
xchg
inc
fcomp
mov
mov
addr16
cmp
lods
aas
inc
(bad)
adc
cmp
movs
pop
sub
fmul
mov
mov
std
push
je
mov
dec
cdq
fild
or
dec
dec
adc
iret
es
xchg
cmp
add
cmc
pop
dec
ds
jb
add
sbb
dec
div
adc
mov
and
cld
dec
in
js
(bad)
out
sub
jne
div
add
loopne
repz
fsubr
je
out
out
mov
call
inc
mov
stc
pop
and
popf
cs
cmp
mov
or
retf
xor
(bad)
sbb
pop
xchg
mov
ja
test
shl
data16
xor
movs
loope
(bad)
jnp
mov
cmps
add
cs
xchg
xchg
inc
test
sub
push
mov
call
push
shr
data16
pusha
mov
(bad)
and
xor
(bad)
push
xchg
xchg
(bad)
jl
xchg
sbb
jno
mov
(bad)
push
pop
pop
mov
pushf
into
push
aaa
adc
cmp
pushf
in
jne
ret
jb
add
sbb
hlt
retf
push
std
int3
ins
inc
xchg
rcl
add
jmp
in
ss
into
sbb
clc
pushf
jecxz
sub
sbb
inc
and
adc
pop
jmp
std
lahf
test
mov
in
cs
ds
cmps
sub
sub
fdivr
pusha
cmp
ds
push
or
dec
and
aad
xchg
stc
(bad)
popa
fadd
or
inc
pop
ins
xlat
cmp
imul
jmp
or
arpl
xchg
or
add
std
add
adc
and
jno
ja
(bad)
test
pop
push
sub
sbb
cmp
ja
imul
addr16
outs
imul
aas
stos
call
add
lods
xor
(bad)
sub
inc
adc
cld
ret
popa
push
out
daa
push
push
stos
(bad)
pushf
xor
jl
xor
cmp
xchg
inc
pop
gs
push
cs
je
ss
mov
clc
push
pop
xchg
jecxz
cmp
pop
mov
fstp
movs
or
add
and
or
dec
xor
inc
jns
movs
jne
addr16
mov
cmp
cs
in
not
mov
cmp
xchg
std
in
outs
ja
and
jge
push
std
(bad)
adc
call
sub
retf
cmps
sbb
hlt
dec
xor
adc
rcl
test
out
outs
ja
push
xor
je
data16
cmp
cdq
cwde
cmp
mov
adc
sbb
inc
cmp
push
mov
stc
inc
cdq
into
jecxz
and
mov
outs
retf
xchg
pop
ficom
call
jne
retf
pop
ja
xchg
pusha
ss
cwde
inc
ret
outs
jnp
add
or
data16
mov
xchg
and
mov
stc
(bad)
aam
add
cmp
mov
cmp
loope
sub
sub
cmp
mov
in
mov
mov
in
repz
cmp
hlt
mov
add
outs
pusha
adc
pop
jno
sbb
mov
xchg
jb
sahf
sbb
retf
xlat
add
outs
imul
je
dec
popa
rcl
retf
push
gs
ror
jecxz
jno
ss
xor
jmp
arpl
in
mov
shr
push
push
mov
ffree
loop
add
xor
jo
pusha
pushf
test
into
jmp
sbb
cmp
arpl
or
pop
ds
cmp
ror
dec
hlt
(bad)
fild
and
dec
leave
and
sbb
lock
rcr
out
(bad)
jl
jle
fld
add
jno
ror
jge
(bad)
popa
mov
mov
stos
fldcw
jns
cdq
mov
into
icebp
push
outs
jne
and
or
sbb
hlt
retf
iret
ret
arpl
sub
(bad)
mov
sar
loope
(bad)
sahf
ds
xchg
test
ins
jae
dec
jg
ror
sbb
std
dec
inc
xor
dec
cld
stos
dec
jmp
cli
sahf
neg
popf
jle
int3
and
popa
sets
ins
jae
dec
xchg
imul
mov
jb
loop
outs
cld
call
jbe
pop
cmp
in
stos
imul
dec
mov
xor
std
jecxz
push
inc
loop
mov
cmps
sub
loop
paddusw
in
aad
pop
sbb
aaa
sbb
imul
xor
imul
clc
shl
jge
adc
mov
leave
pop
out
sub
test
or
clc
mov
dec
ins
jae
dec
jg
ror
sbb
out
jb
ret
or
lods
xlat
das
mov
adc
addr16
pop
push
bound
icebp
stos
sub
gs
js
mov
pop
out
xor
cli
or
mov
push
sti
mov
push
retf
xchg
(bad)
js
cdq
es
inc
inc
and
repnz
(bad)
or
add
pushf
xor
rep
cdq
jp
dec
inc
push
mov
add
add
push
pop
dec
adc
mov
adc
cmp
leave
outs
lods
add
mov
sbb
mov
aas
aad
dec
test
and
push
call
sahf
dec
and
shl
pop
fsubr
scas
inc
adc
mov
mov
push
push
daa
fwait
outs
call
fs
add
xor
xor
xchg
mov
mov
cmp
dec
push
mov
mov
dec
mov
cmp
xor
je
sub
(bad)
inc
cdq
pop
jl
sub
dec
cmp
pusha
dec
std
les
adc
das
mov
inc
iret
jl
adc
push
jne
sbb
sbb
pop
ins
xchg
repz
fwait
xor
xchg
loopne
mov
xor
sbb
dec
push
bound
xchg
sub
leave
sbb
add
addr16
iret
xor
mov
xor
repz
xchg
mov
mov
pop
push
push
jg
sub
js
fnstsw
fwait
inc
adc
mov
mov
xor
imul
neg
pusha
add
mov
shl
and
out
add
jle
adc
sbb
mov
or
rcl
pop
sub
cmp
stos
push
mov
call
pop
mov
push
push
fidiv
add
sar
data16
sbb
pop
in
lds
sbb
xor
sbb
sbb
jmp
fsubrp
retf
xchg
mov
mov
retf
mov
cs
icebp
popa
(bad)
adc
cli
fld
jp
jno
(bad)
(bad)
push
retf
xchg
sar
cdq
sbb
push
sub
cmp
jae
jge
pushf
mov
mov
hlt
in
sbb
pusha
not
push
xchg
ss
ja
pop
(bad)
repnz
sub
sar
stc
pop
bound
out
test
xchg
add
retf
fisttp
mov
fsubr
loop
push
xor
xchg
sub
dec
das
or
cmp
int
push
mov
or
sub
mov
call
jmp
adc
mov
jecxz
imul
std
jecxz
push
je
pusha
add
mov
fadd
push
rol
js
cdq
sbb
outs
stc
retf
bound
push
lea
iret
fist
jg
call
adc
pop
std
dec
sbb
aaa
imul
je
inc
pop
js
arpl
xor
sub
mov
lods
xor
push
add
adc
bound
int3
xchg
loopne
sbb
push
aad
jns
iret
enter
ret
rol
and
lea
pop
popa
adc
loopne
sub
mov
repnz
test
ja
mov
sub
inc
ss
pusha
stc
mov
lods
shl
pop
sbb
aas
xlat
adc
xor
(bad)
in
ficom
(bad)
or
ja
pop
add
or
rcl
xchg
mov
xor
xchg
(bad)
aaa
sbb
jecxz
dec
adc
xor
add
repnz
jnp
jmp
dec
call
and
mov
jmp
sbb
iret
pop
sub
sbb
imul
jle
(bad)
xchg
mov
mov
stos
call
sbb
sahf
imul
pushf
inc
daa
sbb
dec
dec
sbb
out
je
int
mov
mov
stos
aad
mov
retf
pop
mov
sub
jmp
and
or
adc
dec
jmp
in
ficom
pop
rcl
add
adc
and
outs
jmp
ins
mov
out
cmps
(bad)
mov
lock
pop
dec
mov
dec
jg
data16
cmp
jmp
or
(bad)
sbb
popa
sbb
and
push
daa
shl
fsincos
loope
xchg
mov
dec
bound
sbb
mov
mov
cmp
xchg
mov
fild
and
outs
push
loopne
loopne
enter
std
dec
cwde
rol
xchg
mov
dec
scas
sbb
(bad)
jge
idiv
dec
cs
retf
push
jmp
sbb
test
sub
int3
leave
daa
mov
cmps
inc
xchg
fptan
inc
ficomp
ss
out
(bad)
je
(bad)
cmp
stos
and
add
fs
aam
fld
lds
daa
stc
ja
push
xor
xchg
mov
ret
push
(bad)
sub
mov
outs
sub
mov
inc
hlt
stos
sysenter
shl
add
mov
ficomp
adc
sub
icebp
scas
ins
fnstenv
xchg
out
pop
fsubr
sbb
jmp
cmp
fstp
sub
imul
sub
sub
into
(bad)
lahf
adc
addr16
inc
fdiv
push
sti
cmc
xlat
jle
or
pop
lods
das
gs
scas
mov
sahf
pop
sbb
test
jb
call
outs
stc
retf
outs
mov
xor
dec
lock
push
push
dec
jmp
dec
outs
call
push
out
lock
mov
adc
mov
(bad)
mov
dec
outs
adc
mov
push
cmp
pop
pop
lods
sti
mov
sub
pushf
adc
xlat
jl
and
add
pop
jmp
stos
idiv
mov
int3
xchg
xor
pop
aaa
mov
adc
sbb
xchg
jl
icebp
lahf
push
in
and
mov
stos
not
push
repz
sub
scas
sbb
inc
adc
adc
xor
cwde
cmp
jecxz
xchg
into
out
sbb
fsubrp
sbb
pop
mov
imul
sub
pop
fwait
out
adc
push
xor
inc
daa
xor
imul
arpl
test
push
mov
xchg
adc
jbe
pop
out
sub
jo
ss
out
icebp
fisub
js
xor
jne
shl
sbb
leave
aas
add
repnz
mov
call
dec
adc
jbe
xchg
cmp
inc
ja
sbb
sbb
nop
cmc
daa
cmps
or
add
inc
sbb
loop
neg
mov
rcl
test
leave
fadd
jns
add
retf
xor
fadd
data16
scas
mov
sahf
pop
adc
or
mov
and
pushf
fwait
bound
adc
lea
dec
mov
lds
aaa
xchg
ins
sbb
loop
adc
mov
aad
jnp
dec
adc
je
xor
mov
inc
dec
imul
sbb
int3
push
push
mov
aaa
cs
sub
and
inc
dec
arpl
sti
mov
popf
pusha
int3
cmp
sbb
ret
movs
int3
out
aaa
and
mov
mov
rcl
xchg
push
pop
xchg
and
daa
(bad)
lea
leave
aaa
arpl
push
ret
cwde
sub
jmp
dec
xchg
mov
(bad)
shl
fwait
jo
mov
and
imul
adc
pushf
mov
push
or
sahf
jno
dec
and
mov
push
lock
inc
(bad)
pop
lea
jge
mov
xchg
pushf
sub
mov
jmp
jno
imul
repz
mov
cmc
ja
or
mov
nop
pop
push
mov
mov
lds
aad
ret
push
out
pop
ja
fwait
sbb
pop
adc
jno
pop
pop
inc
daa
rcr
jecxz
sub
hlt
outs
jae
les
pop
dec
arpl
scas
jae
js
leave
mov
pop
out
inc
jle
arpl
leave
out
adc
lock
js
bound
sbb
mov
or
xchg
outs
(bad)
movs
in
and
lea
adc
push
sar
xchg
out
jle
sbb
cmp
cmp
pushf
xor
or
mov
pop
mov
adc
cld
jge
dec
pusha
jb
shr
popf
ficom
ins
or
lods
out
loopne
push
or
push
fcomip
xor
pop
xor
outs
(bad)
movs
mov
scas
mov
xor
jnp
jne
cmp
and
dec
or
adc
and
add
sbb
jb
dec
jmp
inc
stos
retf
in
pop
ins
push
sbb
push
leave
out
xchg
cmp
jge
out
jbe
mov
daa
push
ret
in
push
or
nop
in
or
pop
test
shr
icebp
nop
mov
sub
fisub
sub
es
or
mov
xor
cmp
and
imul
xchg
pop
adc
scas
sub
enter
sbb
xchg
mov
sub
iret
push
mov
inc
jmp
retf
std
mov
jecxz
sar
cmp
and
cmp
cs
jo
xchg
pop
stc
(bad)
(bad)
push
inc
mov
xor
or
mov
add
ss
add
sbb
pop
in
aad
add
push
sbb
cmp
adc
(bad)
and
push
loopne
addr16
jno
aas
and
cmp
aam
retf
jns
dec
add
sub
(bad)
popa
xor
fstp
rcl
xchg
mov
ins
pushf
xchg
adc
cmp
sbb
xor
int
push
daa
stos
ret
adc
in
aad
jmp
jo
(bad)
cmp
mov
or
test
sbb
jb
add
sbb
stc
(bad)
popa
call
leave
shr
add
fs
cmp
lea
lds
loopne
xchg
mov
sbb
jl
popa
mov
pop
xchg
xchg
jmp
addr16
aaa
sbb
jecxz
fwait
sbb
hlt
in
outs
call
aaa
pop
xor
stc
(bad)
popa
out
call
adc
push
mov
iret
sbb
outs
stc
sti
xchg
mov
loopne
jecxz
repnz
sbb
in
inc
xor
popf
out
std
in
lahf
jno
pop
leave
pop
push
sbb
rcr
inc
cmp
jo
adc
or
lea
pop
jnp
int
aaa
bts
div
inc
mov
(bad)
ss
mov
adc
aad
mov
push
ret
push
dec
cli
aad
inc
push
mov
fisubr
cmps
sar
pop
lock
outs
jo
fist
mov
scas
fwait
das
xor
xchg
mov
and
jecxz
add
jg
add
mov
sahf
mov
outs
jbe
test
push
(bad)
and
mov
movs
or
xor
cmp
mov
hlt
das
pop
jg
add
fistp
sti
call
ret
addr16
adc
out
mul
(bad)
cwde
lds
xor
pop
repnz
xor
std
int3
leave
hlt
lods
xchg
out
fucom
popa
data16
pop
test
cwde
loope
sar
cdq
and
push
lods
mov
inc
inc
cmp
or
pushf
mov
xchg
repnz
mov
retf
mov
push
push
sub
retf
jo
ret
push
mov
jl
daa
jmp
mov
or
arpl
add
sbb
out
cmc
adc
outs
ja
shl
push
jnp
jno
dec
xchg
hlt
arpl
adc
cmp
mov
lock
cmp
fld
inc
mov
lahf
dec
xchg
(bad)
in
xor
mov
outs
sub
pop
int3
mov
jne
ret
daa
jmp
mov
inc
pop
arpl
ret
not
xchg
loopne
adc
fs
cmp
cdq
mov
jne
fimul
daa
or
cmp
mov
sbb
xor
pushf
mov
cld
cmps
ficomp
jmp
adc
stc
jb
mov
fdiv
cmp
cdq
push
pusha
dec
and
xchg
repnz
sbb
outs
xor
xchg
outs
xchg
fimul
xor
ror
sbb
pop
sahf
xor
stos
jl
dec
sahf
mov
aaa
add
pusha
dec
outs
test
nop
sub
cmc
ret
jb
retf
shl
outs
inc
xchg
cli
pop
sbb
test
sbb
dec
rol
sub
cmps
outs
lea
aam
mov
xor
fdivr
lds
sub
idiv
mov
xchg
push
add
xchg
ja
test
jl
outs
sub
dec
mov
xchg
inc
daa
add
jno
in
mov
push
or
mov
dec
enter
mov
mov
xchg
jo
mov
fsub
adc
or
push
mov
imul
push
jno
sahf
mov
jmp
movs
adc
jp
push
popa
lea
inc
dec
ins
popf
aas
cdq
cmp
and
(bad)
add
inc
je
mov
xchg
js
mov
jmp
into
ins
dec
sub
dec
movs
cld
xchg
lea
cmp
adc
add
inc
fdivp
adc
push
add
fcomi
fidiv
mov
cdq
sbb
pop
adc
sbb
addr16
sbb
imul
or
mov
pop
arpl
stc
or
or
dec
mov
cmc
sub
sahf
sub
into
ins
(bad)
fstp
push
imul
in
xchg
pop
shr
call
cmp
jecxz
mov
cmp
inc
jp
cmp
retf
inc
stos
cmc
cmc
out
shl
push
or
test
mov
adc
(bad)
or
cmps
adc
aad
mov
jno
ss
sahf
inc
outs
enter
mov
adc
xchg
das
adc
aam
mul
mov
lahf
mov
adc
jns
pop
test
sub
je
mov
xor
push
sub
inc
jno
cmc
or
pop
push
sub
adc
fld
xchg
mov
arpl
mov
mov
shl
aaa
fimul
lea
jl
sete
jbe
jae
popf
push
dec
popa
fstp
ficomp
inc
jl
rcr
xchg
repz
xchg
test
jge
dec
mov
sbb
hlt
retf
mov
jle
cmp
push
rcl
ror
loop
mov
lds
mov
jge
cmps
jns
shl
mov
sti
(bad)
int
push
into
cmc
adc
outs
ja
or
cwde
call
jmp
ss
test
mov
add
inc
pop
shl
fild
scas
(bad)
jo
mov
sub
xor
fsubrp
cmp
fmul
loop
les
push
xor
addr16
je
gs
xor
fnstcw
jmp
test
test
dec
nop
sbb
das
sub
int
xor
arpl
lods
popa
fsubr
test
pop
mov
jg
addr16
mov
push
and
fdiv
bound
retf
sbb
add
pop
adc
mov
aad
mov
loop
pop
pop
push
pop
add
jecxz
xor
lods
lods
outs
out
fisttp
(bad)
nop
fimul
mov
jg
sti
adc
push
jmp
leave
and
cmp
push
jge
inc
jno
dec
leave
out
dec
xchg
lock
(bad)
sbb
inc
test
arpl
ins
mov
sbb
stc
cs
outs
ja
xchg
xor
data16
add
lea
scas
and
mov
fisttp
dec
call
in
popf
push
cmp
xchg
in
retf
sbb
fwait
and
or
jno
jmp
adc
jno
bound
cmc
jbe
sub
in
dec
out
psubusb
xchg
inc
cmps
xlat
shr
stc
lods
gs
je
cmp
aad
xor
adc
test
fidiv
imul
or
mov
or
xor
not
icebp
jle
mov
mov
jnp
dec
adc
jo
stc
out
sub
xchg
mov
cmp
hlt
outs
jnp
dec
add
sbb
inc
fst
in
leave
clc
sub
ss
(bad)
adc
out
mov
lock
cmp
jmp
mov
push
inc
mov
sub
int3
out
jl
call
xchg
xchg
(bad)
mov
sbb
fs
test
xor
cmp
dec
inc
mov
ret
ins
push
xor
stos
mov
cmp
mov
mov
(bad)
cmp
scas
jg
xor
jle
repz
cmp
movs
sbb
jmp
xor
pop
and
inc
pop
sub
js
in
mov
and
jbe
sbb
pop
outs
xchg
hlt
inc
cmp
push
xor
add
xor
adc
pop
test
imul
adc
into
xchg
and
jns
lahf
jl
daa
jle
jmp
pop
in
or
add
aaa
mov
std
xchg
xor
xchg
cmp
jg
sub
fdivr
out
mov
cld
cmps
imul
push
xchg
int
push
sub
push
aam
xor
pop
imul
cmp
fdiv
imul
jl
fmul
popf
pop
std
cmp
mov
pop
inc
push
xor
xor
push
mov
stc
cmp
outs
std
test
fcmovbe
xchg
sub
dec
das
lea
gs
or
out
mov
test
mov
daa
(bad)
loop
paddusw
pop
adc
mov
into
retf
shl
mov
dec
test
cmps
aam
inc
adc
not
test
mov
push
sub
jns
and
jmp
adc
out
cwde
addr16
ins
mov
lahf
mov
dec
cli
lahf
or
push
stc
cmp
sub
mov
xor
sbb
enter
mov
mov
retf
and
cmc
fimul
xchg
pop
inc
int3
inc
inc
cmps
mov
jmp
outs
(bad)
cli
sahf
neg
mov
mov
and
sar
sbb
dec
adc
jle
mov
adc
popa
mov
test
sub
lahf
stos
lds
sbb
cdq
fwait
loope
push
daa
push
adc
addr16
cmp
mov
push
aas
ins
mov
and
sbb
sbb
call
stos
aaa
sub
je
fldpi
aaa
adc
push
jns
sbb
or
fcmovne
pop
xchg
mov
xor
jmp
sbb
and
push
cwde
aad
and
or
xchg
add
mov
pusha
xor
in
push
xchg
test
cdq
cli
mov
stos
add
lods
push
mov
and
and
jb
pusha
jae
mov
jne
inc
leave
mov
dec
shr
jl
leave
lea
pop
push
int3
or
jnp
sahf
jno
add
mov
pop
pusha
push
outs
add
mov
lods
cdq
sbb
pop
mov
out
jle
mov
pop
jg
sub
adc
stc
in
scas
loopne
or
icebp
scas
jmp
addr16
pop
mov
xor
cs
retf
rcr
inc
arpl
sub
bound
push
fstp
cmps
cld
jae
(bad)
adc
out
mov
call
sbb
xchg
int3
ins
mov
stc
inc
mov
inc
xor
ins
xor
mov
into
idiv
aas
inc
dec
dec
movs
lock
mov
cld
int3
out
jb
ret
xor
mov
xor
pop
adc
push
jo
pop
outs
fwait
xor
cdq
cmp
leave
mov
dec
out
ins
inc
arpl
sub
and
sbb
addr16
test
adc
mov
in
mov
mov
je
(bad)
loope
not
mov
xor
sbb
xchg
outs
mul
xor
cwde
or
xchg
loope
ret
or
mul
pushf
inc
xchg
out
arpl
test
fcomp
cmp
das
loope
sub
int3
loop
xchg
mov
loop
xor
jle
adc
repnz
mov
jmp
xchg
test
pusha
cli
call
dec
pop
shl
mov
leave
adc
xor
das
pop
and
in
sbb
hlt
lods
popf
jne
stc
xchg
in
loop
add
mov
jns
fsubr
ds
mov
rcr
fsub
and
mov
scas
out
xchg
(bad)
mov
jbe
test
(bad)
and
push
sbb
data16
lods
pop
cdq
xlat
ret
inc
inc
sub
in
movs
inc
push
arpl
daa
sub
ja
xchg
xchg
icebp
fadd
dec
xchg
add
or
xor
pop
nop
scas
xchg
arpl
dec
xchg
popa
inc
inc
mul
xchg
pusha
mov
retf
cmps
adc
inc
sbb
mov
and
test
mov
sub
aam
and
out
cmp
rcl
xchg
xchg
push
or
add
shl
cmp
ja
inc
ds
pop
mov
out
xor
adc
jge
jo
ja
shl
sub
mov
pusha
dec
ins
test
mov
lods
les
mov
jg
mov
cmc
sub
je
adc
sbb
inc
mov
and
inc
scas
fidiv
das
test
(bad)
ins
and
les
pop
pop
pop
imul
xrstors
movmskps
pop
retf
or
mov
or
jae
xchg
out
ds
cmp
dec
popa
xor
jo
out
test
or
push
jmp
stos
jmp
xor
xor
mov
(bad)
and
xchg
in
inc
enter
stc
jp
pop
inc
xchg
mov
pop
push
xor
jns
and
je
sub
xchg
js
sub
mov
in
xor
and
push
gs
shr
inc
cwde
mov
ja
adc
js
cdq
enter
ret
shl
and
fst
mov
sbb
mov
pop
in
push
jg
sbb
push
sbb
cmp
leave
mov
popf
xor
add
and
jl
mov
lds
addr16
push
addr16
sbb
stos
dec
jmp
mov
mov
xor
retf
cmp
inc
dec
jle
lock
fistp
int
mov
mov
sahf
pop
adc
scas
rcl
pop
out
sub
sar
adc
das
cmp
xor
cmp
(bad)
jp
les
test
sbb
cmp
pop
mov
out
sub
stc
scas
retf
imul
dec
dec
test
aaa
cmp
pop
and
xchg
(bad)
jl
stc
mov
add
pop
jge
imul
inc
daa
out
loop
cmp
mov
add
jbe
cli
pop
sbb
loop
outs
std
bsf
stos
and
jo
ficom
cs
or
icebp
and
nop
imul
or
cdq
and
stc
mov
aad
push
pop
add
mov
(bad)
in
sub
inc
icebp
or
mov
sbb
outs
mov
push
popf
push
fst
je
mov
outs
std
test
inc
push
and
adc
scas
popa
test
or
pop
ret
sbb
outs
fwait
jne
add
sbb
jmp
cmp
popf
xchg
nop
cld
add
dec
push
rcl
xchg
cs
push
aaa
mov
into
retf
shl
push
hlt
sbb
call
xchg
in
retf
imul
adc
(bad)
cwde
popf
push
aam
(bad)
adc
jl
dec
dec
sbb
out
jb
ret
push
jb
jno
xchg
or
cmps
fwait
and
or
repz
and
outs
mov
pop
popa
adc
movs
mov
add
ret
and
xchg
loop
test
push
test
jge
arpl
lahf
adc
sub
inc
jle
sbb
pop
dec
xor
rcr
sbb
icebp
data16
test
xchg
and
int
pop
retf
xchg
cmp
leave
cdq
sbb
push
ins
lods
xor
add
hlt
in
xchg
pop
adc
adc
mov
fisubr
call
xchg
mov
ins
dec
test
jne
dec
lahf
psrlq
fisubr
pop
xchg
hlt
xchg
mov
ficom
pop
mov
dec
inc
or
add
in
sqrtps
xchg
dec
dec
cs
leave
xor
mov
scas
les
(bad)
rcr
add
retf
movs
and
adc
push
lea
inc
or
stc
(bad)
lock
sub
mov
cmp
jmp
mov
adc
imul
adc
inc
in
test
pop
fst
jecxz
rep
push
repz
cmp
sar
mov
or
cmp
xchg
lahf
and
xchg
aaa
jecxz
mov
adc
ftst
jmp
movs
loop
adc
je
add
inc
mov
pop
je
dec
and
push
and
jo
pxor
sbb
jmp
xor
add
dec
sub
cli
dec
mov
sub
push
es
xchg
sti
mov
fist
imul
inc
les
inc
lahf
adc
out
or
addr16
pop
sar
or
call
daa
xor
cwde
or
cmp
or
mov
arpl
add
push
sbb
adc
jo
ja
fmul
fst
pop
sub
adc
out
dec
lods
sub
add
sbb
lds
bndldx
out
adc
out
xchg
fild
test
sub
jbe
mov
ret
push
push
pop
clc
mov
dec
(bad)
outs
xchg
setae
jmp
cs
push
mov
lahf
std
mov
arpl
pop
scas
jb
pusha
outs
and
test
stos
mov
or
lock
inc
adc
push
leave
dec
xor
fdiv
dec
push
pop
mov
sub
das
jns
dec
cmp
cmp
inc
push
jecxz
pop
pop
ds
and
nop
out
shl
into
das
stc
mov
shl
cs
fimul
dec
jns
sbb
test
call
sbb
aas
call
int3
adc
adc
mov
inc
inc
loope
sbb
push
out
int3
push
fst
push
call
loopne
mov
and
mov
or
addr16
jae
add
cdq
add
cmp
jae
mov
jp
jmp
or
pushf
ret
xor
jmp
jecxz
sbb
retf
test
ds
inc
aaa
mov
or
test
mov
and
xchg
xor
(bad)
fyl2x
aas
jle
inc
jl
cwde
mov
sub
daa
or
out
pushf
xor
rep
lods
les
in
loopne
addr16
adc
pop
inc
inc
xchg
lea
cdq
sbb
dec
out
or
push
or
mov
jno
push
sub
rcr
pop
adc
retf
dec
mov
hlt
mov
aad
push
lds
ds
dec
adc
jo
ja
test
lods
imul
in
dec
jno
fs
out
inc
mov
stc
(bad)
lds
sbb
pop
aad
push
lds
test
ja
aam
movs
out
cmps
outs
test
(bad)
sub
hlt
sbb
aas
(bad)
ss
jp
stc
mov
pop
xchg
out
push
add
sbb
ror
ins
int3
cs
push
jge
out
jbe
int
int3
pop
jns
data16
jl
mov
dec
dec
mov
into
pop
push
int3
dec
cmps
jle
dec
nop
cmp
push
fsubr
in
jo
xchg
test
ja
leave
out
ret
push
fucomp
xor
lds
push
cmp
dec
adc
and
test
cmp
jmp
lahf
cli
adc
or
jb
fdecstp
cli
addr16
out
icebp
push
cmps
xor
retf
lahf
xchg
mov
mov
jb
in
in
repnz
imul
ret
adc
arpl
in
int3
push
loopne
rol
xlat
jno
jb
in
in
dec
call
cmc
sub
inc
xchg
dec
(bad)
xor
aas
mov
cmp
mov
je
mov
mov
fild
loop
scas
cs
jmp
fs
gs
push
lea
int
mov
dec
xor
stos
xor
popf
inc
popa
mov
popf
and
adc
xor
ret
or
xchg
jg
dec
adc
jle
ror
sbb
xchg
jmp
sahf
xor
jbe
push
push
stos
cdq
repnz
leave
mov
adc
jecxz
mov
mov
add
out
xchg
sbb
mov
call
mov
daa
push
xor
jge
nop
sti
outs
push
cdq
ret
push
xor
add
stc
jno
sbb
xchg
sub
push
retf
inc
inc
and
nop
loop
ins
mov
fadd
gs
xor
call
cld
lahf
xchg
clc
test
stc
loopne
mov
ror
cdq
test
icebp
mov
dec
nop
cmp
and
mov
pop
inc
enter
ins
popa
test
or
(bad)
mov
repz
arpl
sub
add
cmp
scas
cmp
pop
ja
nop
cmp
lahf
fwait
dec
test
or
ja
in
mov
pop
pop
and
das
in
lea
cld
pop
inc
dec
outs
push
jo
hlt
cmp
scas
scas
das
or
mul
out
add
xchg
sbb
jl
xor
lds
xchg
xchg
mov
mov
stos
mov
mov
cs
cmp
and
mov
hlt
outs
imul
pop
mov
into
clc
(bad)
popa
xor
mov
xchg
jne
(bad)
cmp
sbb
stc
mov
retf
inc
call
pop
jb
sbb
adc
jno
mov
inc
test
sbb
inc
sbb
and
xchg
mov
push
xchg
inc
nop
or
nop
out
call
mov
sahf
pop
ror
push
ret
pop
xchg
call
into
push
jno
inc
lds
mov
stos
jl
dec
out
dec
and
xor
mov
jae
and
rol
test
out
mov
mov
pusha
xchg
mov
xor
mov
int
mov
repz
sub
js
ret
adc
imul
mov
in
loop
xchg
xor
xchg
ret
outs
jb
xchg
fstp
cmc
push
add
and
(bad)
adc
fprem
mov
inc
push
iret
and
xchg
or
call
ins
xchg
lahf
push
mov
stc
xchg
xor
stc
in
sti
xor
sub
jns
mov
jmp
stos
out
lock
fimul
lea
retf
pop
xchg
rcr
xor
add
cmp
push
dec
and
(bad)
pusha
movs
fmul
cmps
mov
pop
xchg
arpl
adc
inc
sub
bound
sub
jecxz
call
leave
jnp
adc
xchg
ss
lods
mov
sbb
sub
jle
pop
call
dec
out
daa
imul
mov
cs
and
mov
cli
movs
imul
out
adc
(bad)
movs
pop
sahf
xor
cmps
and
mov
shl
inc
mov
mov
dec
pushf
mov
call
pop
mov
out
sub
test
inc
pop
inc
push
inc
in
jne
push
fwait
dec
in
aaa
sub
retf
cmp
add
push
mov
mov
or
out
sub
or
pop
je
push
(bad)
mov
dec
(bad)
in
xor
xor
ret
cmc
adc
jns
pop
test
fsubr
and
sub
mov
addr16
and
dec
cmp
ror
sar
int3
out
aaa
and
mov
sbb
into
data16
mov
mov
test
in
fcmovne
push
or
lahf
retf
outs
or
test
sub
(bad)
pop
jbe
fmul
sub
cmp
cmp
add
sar
pop
shl
push
inc
sti
scas
mov
cwde
adc
adc
je
cvtpi2ps
cmps
sbb
dec
(bad)
in
and
cs
push
jmp
cmp
fdiv
ins
push
inc
retf
fstp
dec
ins
(bad)
xchg
lahf
cmc
inc
push
jle
sbb
mov
push
adc
inc
cdq
repnz
movs
jne
dec
jmp
pusha
push
test
out
cs
into
inc
adc
out
push
push
retf
into
in
or
mov
push
enter
repnz
retf
les
lods
cmps
aam
or
popf
sub
inc
cld
mov
mov
add
pop
and
and
ror
add
xchg
or
mov
loope
ds
aas
or
ror
rcr
shr
cmps
sbb
and
sub
(bad)
dec
call
call
int3
mov
add
movs
add
cdq
sti
scas
cmp
aaa
popa
pop
inc
jge
lods
hlt
jp
(bad)
mov
pop
aaa
sbb
test
std
jl
pop
pop
pusha
cmp
xchg
inc
push
aad
and
sbb
jmp
sbb
fist
dec
loope
mov
fisub
bound
loopne
inc
or
cmp
mov
pop
into
sti
loop
jg
call
loope
add
das
cmp
mov
mov
(bad)
cs
mov
fmul
sbb
cmp
jecxz
mov
(bad)
clc
aam
sbb
sti
movs
fisub
sbb
inc
pop
jmp
push
mul
or
pop
movs
fbld
sbb
push
lds
(bad)
xchg
out
movsx
sti
xchg
add
scas
jae
sub
pusha
jnp
dec
das
mov
test
clc
repz
cmp
cdq
les
mov
(bad)
adc
inc
sub
cmp
rcl
sub
jne
pop
es
(bad)
fdivr
cmps
mov
mov
inc
mov
and
test
add
je
add
xchg
stos
add
xor
lahf
or
fdiv
mov
(bad)
in
pop
in
shr
pop
stos
lahf
add
sbb
scas
cwde
(bad)
xchg
mov
(bad)
cmps
adc
cli
cld
dec
in
push
pusha
jae
inc
push
jb
adc
bound
and
sub
lds
cs
inc
(bad)
xchg
sahf
iret
fcomip
in
(bad)
jmp
and
pop
ret
ds
popf
mov
into
retf
add
xchg
mov
jle
and
cmp
adc
shr
adc
pop
xchg
loope
jb
sti
xor
test
icebp
inc
test
dec
jmp
mov
and
inc
jmp
sub
leave
iret
aam
in
pop
arpl
mov
pop
retf
push
jmp
cmp
xlat
xor
or
callw
push
sbb
xchg
mov
imul
xchg
ins
cmc
jl
dec
push
jp
xchg
mov
xchg
sub
rcr
movs
inc
pusha
inc
add
ret
div
iret
or
adc
add
loop
adc
push
(bad)
xchg
ins
mov
sbb
mov
in
mov
add
mov
scas
xchg
add
ror
fadd
cmp
push
jmp
mov
std
mov
adc
mov
outs
jne
push
mov
ss
dec
xchg
imul
jo
sub
outs
fbld
or
into
jno
dec
sahf
add
cli
out
loopne
or
xchg
cmp
lods
mov
mov
sbb
dec
cli
cli
aam
lds
and
imul
push
mov
scas
mov
inc
sbb
cmp
mov
movs
cmc
outs
xchg
add
iret
call
into
xchg
sub
aad
mov
jae
imul
adc
or
jne
and
pop
imul
test
xor
sbb
lods
fdivr
mov
mov
cmc
xor
dec
daa
jge
test
mov
adc
pop
retf
pop
sub
mov
fisub
sbb
mov
popa
mov
outs
leave
out
dec
das
lea
or
or
pop
aas
add
mov
mov
icebp
inc
stos
dec
sahf
mov
xchg
push
mov
mov
call
es
and
and
or
and
icebp
adc
scas
lods
addr16
js
adc
pop
xlat
js
psllw
mov
test
adc
sbb
fdivr
and
scas
imul
mov
xchg
and
fld
cmp
mov
mov
add
cmps
xor
(bad)
rcr
mov
fwait
dec
sub
dec
adc
test
aaa
sbb
pop
test
adc
mov
repz
stc
mov
xor
xor
cdq
pushf
xor
test
xchg
jmp
cwde
mov
cdq
sbb
data16
add
addr16
add
in
and
mov
cmp
or
arpl
test
mov
test
fdiv
sub
cmp
mov
mov
jle
pushf
mov
cld
push
cwde
loope
lods
sahf
mov
jbe
test
(bad)
pop
cs
pop
in
stc
lds
lods
sbb
jbe
bound
inc
bound
adc
iret
shr
cmp
cmps
(bad)
sub
retf
jnp
cmp
jne
addr16
inc
dec
sbb
ror
jecxz
sbb
pop
nop
or
ja
sub
xchg
into
cmp
cmp
jns
xchg
je
in
inc
out
xor
cmps
cmp
push
movs
iret
aaa
in
ror
jmp
in
jbe
jae
dec
das
lea
xchg
loope
sbb
mov
xchg
out
(bad)
in
fdivr
into
popa
fistp
fs
pushw
fucomp
jp
loope
and
sbb
cmps
mov
dec
inc
sub
pop
jb
int
or
mov
stc
scas
dec
addr16
idiv
mov
mov
xor
cld
popf
outs
(bad)
mov
dec
(bad)
in
inc
loop
popf
mov
mov
(bad)
mov
dec
jbe
test
(bad)
pop
push
dec
inc
mov
dec
das
lea
jns
out
je
inc
ja
cmp
movs
aam
xor
cli
cmps
cmp
sbb
iret
aaa
in
ror
jmp
adc
cli
lock
lahf
je
ret
out
(bad)
xor
ror
rcl
xor
dec
je
stos
dec
lds
xchg
int
ins
jb
call
xor
das
xor
adc
sub
arpl
sbb
hlt
retf
fsubr
or
inc
add
sbb
cs
outs
ja
xchg
cwde
mov
jecxz
sbb
ins
and
jl
daa
cmp
or
popa
adc
or
push
add
jae
cmps
cmp
loopne
or
in
ror
call
repnz
xchg
cmc
sbb
or
mov
or
retf
pop
pusha
out
rol
add
xchg
ja
jae
jecxz
mov
jns
in
push
repz
gs
sbb
dec
pusha
jae
dec
das
jg
cmc
in
sbb
push
xchg
cmps
adc
jge
repnz
js
inc
enter
out
mov
int
data16
dec
arpl
xlat
scas
add
fisttp
xor
retf
sub
mov
mov
das
cli
inc
data16
sub
add
(bad)
in
xchg
adc
sar
cmps
mov
sbb
add
mov
(bad)
hlt
clc
(bad)
popa
xor
fnstsw
rcl
xchg
cmc
sub
dec
das
lea
sub
bndldx
fwait
mov
or
xchg
add
xchg
loopne
jne
mov
xor
sub
mov
ffree
in
arpl
fcmovne
jbe
stos
dec
lds
add
mov
xchg
jb
ss
xchg
out
and
test
dec
(bad)
mov
test
fs
add
sbb
dec
inc
mov
stc
jge
adc
mov
jmp
xor
data16
or
lds
jb
dec
dec
mov
cmps
aam
mov
dec
inc
xchg
lahf
not
xchg
sbb
pop
out
lds
jne
(bad)
cmp
fisttp
sub
loop
les
xor
stc
mov
cmp
push
xor
jle
js
jmp
test
fsubr
sbb
cmp
add
outs
test
cmp
ja
aas
in
lods
sub
(bad)
adc
leave
mov
jns
daa
sbb
xor
das
pop
dec
jmp
push
lods
retf
imul
mov
ret
add
adc
mov
lea
pop
xchg
fisttp
popf
test
hlt
lods
popf
jne
stc
jbe
(bad)
mov
sub
iret
daa
data16
ds
mov
sbb
outs
jmp
sbb
mov
jbe
test
adc
fsubr
jns
out
adc
leave
stc
jnp
mov
ret
jb
retf
aaa
pop
cs
jb
lods
xchg
add
scas
not
cdq
dec
sahf
jno
dec
mov
int
call
adc
out
mov
clc
pop
xchg
xchg
dec
(bad)
pusha
adc
or
sub
jno
hlt
int
inc
xchg
mov
pop
test
mov
pop
jbe
sbb
stos
sub
ret
xor
jg
add
add
jl
adc
and
ds
push
cs
call
and
sub
jno
jge
xchg
and
cld
ret
js
push
jecxz
sbb
test
mov
xchg
retf
js
cdq
sbb
(bad)
bound
aam
cmp
or
or
shl
pushf
xor
retf
call
rcr
call
adc
cs
cmp
inc
sub
xchg
jo
xchg
fnsave
push
retf
jo
xchg
fist
mov
push
push
jmp
outs
xlat
dec
call
pushf
retf
xor
ret
cmp
lea
xlat
(bad)
call
mov
int
ret
cmp
adc
push
mov
aas
leave
jecxz
xchg
mov
and
fsubr
cmp
cmp
inc
jl
or
xor
stc
cmps
xchg
repnz
clc
cs
outs
ja
sbb
lods
or
pop
stos
adc
test
mov
out
jle
jbe
cmp
cs
loope
sub
fwait
(bad)
mov
fdiv
pop
mov
xchg
leave
sbb
movs
xchg
pushf
cmp
iret
data16
iret
xor
cdq
cld
ret
pop
dec
xor
ins
or
bound
aam
sub
xor
push
jge
adc
inc
stos
ret
cmp
call
lahf
mov
loop
cmc
data16
cmps
popf
test
xchg
mov
(bad)
or
leave
sbb
ss
add
or
jb
mov
in
outs
jmp
test
ds
xor
(bad)
rcl
xchg
mov
out
mov
pop
fimul
retf
(bad)
in
arpl
(bad)
jmp
fisttp
jae
stos
dec
lds
cmp
shl
xor
jne
in
into
cbw
adc
out
cmp
movs
push
and
and
mov
pop
dec
xor
mov
not
ja
mov
stc
jno
push
xor
jns
fst
stc
or
into
xlat
add
in
or
(bad)
int
mov
pop
add
jp
cmp
js
pop
mov
add
cs
adc
sbb
xchg
mov
call
cmp
push
lods
sub
arpl
test
leave
out
adc
mov
gs
push
xchg
adc
mov
in
mov
and
or
jmp
inc
mov
mov
aad
push
neg
mov
push
dec
(bad)
push
mov
sub
lds
push
jg
mov
sbb
xor
not
clc
(bad)
popa
xor
mov
loope
mov
cdq
std
outs
adc
shr
jmp
cs
fld
aam
ror
or
sahf
jno
repnz
adc
sub
(bad)
adc
shl
jno
arpl
rcr
add
sbb
aaa
and
mov
aad
or
xchg
loop
(bad)
adc
sbb
push
retf
rcr
jle
outs
retf
ror
sbb
call
in
and
inc
jbe
test
(bad)
pop
mov
jecxz
xchg
out
inc
jnp
jne
addr16
aaa
lock
sbb
scas
ror
sbb
mov
loope
sbb
test
cmps
call
jmp
scas
jae
mov
(bad)
ds
fnstcw
xor
inc
and
add
mov
(bad)
jl
xor
add
loop
mov
mov
jo
test
aaa
(bad)
sub
or
(bad)
push
lock
sbb
or
stos
neg
repz
xchg
in
or
or
es
jmp
addr16
mov
jb
lds
or
fucom
pushf
xor
ja
mov
lods
dec
sbb
pusha
mov
sub
inc
sub
pop
push
js
xchg
lea
movs
sbb
or
arpl
fild
fpatan
xor
ja
xchg
cmp
adc
push
retf
mov
rcr
jae
and
push
(bad)
mul
inc
inc
ror
sbb
arpl
xchg
jo
adc
out
sub
adc
push
imul
cmp
dec
js
jecxz
jg
ror
sbb
loope
inc
xor
jmp
stos
dec
jmp
in
and
inc
into
xchg
add
frstor
cmp
popa
push
sub
stos
aad
(bad)
mov
hlt
push
retf
adc
xor
add
mov
add
(bad)
xchg
mov
movs
adc
xor
inc
ins
xor
aaa
out
dec
mov
cs
jg
push
es
sbb
fst
mov
scas
push
gs
gs
or
mov
mov
hlt
in
xor
out
stos
ret
dec
inc
not
inc
adc
xchg
mov
bound
stos
lds
push
cmp
int
add
ss
loopne
daa
sbb
ja
xchg
xchg
lahf
adc
jnp
jne
addr16
mov
sbb
fsubp
pushf
xor
or
stc
xchg
sahf
cli
mov
sbb
out
inc
xor
adc
adc
rcr
and
mov
pop
mov
or
arpl
mov
not
(bad)
loop
xor
pop
xchg
jecxz
js
push
jo
ficomp
push
xchg
mov
xor
paddd
cmc
fidivr
paddusb
mov
fsubp
pop
add
xchg
or
inc
pop
ins
in
sub
inc
xor
addr16
push
movs
bound
pop
cmps
shl
je
jle
retf
idiv
pop
adc
scas
ret
sub
sub
jne
pop
push
xchg
mov
sub
push
jb
dec
inc
cdq
ror
out
aam
xor
lahf
arpl
adc
mov
pop
push
sbb
jns
adc
into
jne
idiv
jno
dec
dec
mov
dec
inc
add
sbb
mov
fisttp
aam
clc
fadd
xor
mov
sub
jge
dec
xor
sub
scas
scas
inc
and
pop
dec
out
mov
push
fistp
or
sahf
sti
add
je
hlt
sub
test
sub
outs
mov
pusha
adc
call
icebp
cli
movs
mov
in
in
retf
push
retf
cmps
in
adc
stc
test
mov
inc
aaa
sbb
xchg
and
sub
data16
sti
jbe
ror
shr
cmp
inc
xor
arpl
xor
sub
and
or
cld
ror
sbb
fsubrp
jecxz
pop
mov
push
(bad)
mov
(bad)
lea
cmp
popa
call
jle
mov
dec
dec
(bad)
in
jbe
arpl
push
mov
add
jmp
mov
cmps
je
mov
sahf
retf
jle
and
xchg
mov
sub
inc
aas
dec
and
add
fnsave
or
inc
pop
ins
dec
cmp
inc
dec
xor
gs
pop
(bad)
neg
(bad)
outs
movs
pop
xchg
cs
jns
jmp
cmp
int
add
push
mov
jns
cmp
pop
call
push
and
daa
repz
int3
ins
add
sbb
pop
inc
aaa
xchg
in
sti
outs
jg
mov
add
pop
test
das
sbb
hlt
add
in
push
je
and
sbb
sub
out
aaa
and
retf
cdq
ja
mov
sub
cmp
ds
mov
pop
call
xchg
popf
call
shl
xor
aam
push
mov
into
sti
adc
push
nop
push
mov
or
rcr
ins
pushf
repz
push
jb
mov
mov
mov
inc
pop
adc
xchg
mov
xchg
mov
adc
sbb
inc
and
ins
xchg
pusha
inc
lods
push
sbb
sub
jb
enter
aad
rol
(bad)
jmp
outs
mul
loope
es
cmp
mov
cwde
dec
dec
mov
into
das
mov
jmp
shl
in
pushf
dec
push
mov
or
sbb
out
adc
add
in
cmp
mov
outs
cmp
sbb
adc
aad
add
adc
stos
test
std
xor
or
sub
sub
jne
scas
cmp
xor
jle
or
in
mov
pop
fsubr
ja
out
out
ret
outs
jno
ja
push
pop
cwde
mov
cmp
pop
add
push
pop
pop
sbb
jmp
inc
push
out
mov
push
mov
in
jp
jne
pop
jmp
fild
mov
pop
mov
inc
test
mov
pop
inc
adc
sub
std
xor
xchg
mov
inc
xchg
cli
xor
or
xchg
pop
data16
adc
shl
sub
retf
sar
movs
pop
xchg
xlat
daa
mov
pop
loope
ret
enter
sahf
or
cli
pop
out
mov
test
push
sti
sub
add
push
pop
cmps
or
imul
daa
sbb
add
push
gs
and
(bad)
add
stos
adc
ret
sbb
sub
or
xor
pop
jno
iret
and
sbb
inc
and
sahf
fimul
sbb
data16
cmps
lahf
mov
jae
imul
add
and
(bad)
xchg
mov
cmc
push
sub
sbb
add
push
mov
out
shl
cld
dec
cs
sbb
sub
sub
jne
mov
cmp
xor
mov
rcl
in
or
mov
cmp
cli
pop
out
cmp
ficom
iret
cmp
lods
pop
cdq
out
(bad)
ins
(bad)
push
nop
mov
sbb
jl
loope
adc
adc
jae
shr
test
or
jb
fild
into
arpl
in
or
mov
dec
and
xlat
pop
add
mov
sub
and
das
fdiv
pop
leave
out
dec
mov
xchg
add
dec
(bad)
outs
test
sub
sbb
push
cmp
jle
jle
shr
pop
out
sub
push
mov
push
retf
push
(bad)
or
adc
adc
or
outs
scas
add
xor
pop
std
std
das
mov
test
aas
lods
enter
jo
loope
shl
gs
or
inc
jb
inc
(bad)
xchg
int3
mov
int
push
cmp
or
stos
add
cmp
stos
sub
lock
popa
sti
mov
shl
or
add
xchg
ret
sub
pop
inc
repnz
jmp
and
sub
push
stos
sahf
out
in
inc
daa
neg
aas
addr16
repz
or
pop
repnz
push
jl
mov
add
int
sahf
cmp
test
call
push
and
daa
jmp
lea
cs
lahf
mov
out
and
push
std
inc
mov
arpl
xchg
cmp
dec
adc
mov
(bad)
cdq
arpl
lods
aas
shl
cmps
imul
popf
or
push
sbb
movs
fs
sbb
fstp
aad
adc
sbb
adc
stc
xor
shl
shr
daa
popf
push
inc
pop
adc
shr
retf
popf
add
inc
mov
lock
mov
mov
cmps
and
jl
mov
dec
xchg
outs
cmp
aam
gs
das
aaa
and
jno
add
aaa
pop
out
sub
xchg
sub
and
and
stos
mov
pop
rol
pop
arpl
(bad)
stos
ret
rcr
sahf
not
sub
imul
mov
gs
imul
adc
mov
xchg
inc
je
mov
int3
jns
xchg
push
cmps
jno
and
jmp
fs
out
es
lock
sar
xchg
mov
xchg
sub
adc
inc
xchg
out
or
cli
in
ret
pushf
fnstenv
mov
xchg
cmp
mul
repz
xchg
imul
dec
sub
inc
and
mov
loop
jns
and
sub
sti
adc
xchg
add
imul
jle
lea
cmc
mov
lock
xor
out
aaa
and
gs
fimul
inc
cmps
adc
jmp
call
inc
jno
mul
cmp
imul
mov
stos
not
jb
jno
pop
jg
dec
cld
aad
aad
xchg
pusha
arpl
or
stc
scas
inc
loop
stos
dec
sbb
and
cmc
test
xchg
jmp
pop
mov
xchg
std
push
jp
cmp
(bad)
sub
int
daa
add
mov
jae
popf
cmp
mov
sub
cmp
add
js
(bad)
ins
sub
fiadd
sub
loopne
fcom
xchg
(bad)
add
jecxz
inc
popa
(bad)
xchg
mov
sub
fst
and
pusha
js
inc
xchg
ins
aad
xchg
inc
daa
cmp
leave
add
mov
pop
mov
(bad)
(bad)
popa
cs
xchg
pushf
xor
push
je
sti
xor
pop
fnstsw
daa
or
pop
mov
or
mov
dec
daa
sbb
lods
ins
hlt
push
test
mov
out
cs
xor
xchg
hlt
add
test
jl
pushf
xor
inc
xor
cmps
pop
cmp
add
fstp
(bad)
fimul
adc
dec
daa
lea
jne
push
pop
xchg
or
push
sub
les
(bad)
popf
add
stos
mov
cli
cmps
fimul
mov
push
xor
ficomp
xor
inc
test
mov
loop
jo
popf
xchg
jb
test
cwde
fwait
jmp
cmp
adc
out
shr
push
push
out
inc
jp
sbb
out
xor
sub
push
mov
std
xchg
or
cmc
cmps
fwait
and
jo
pop
clc
sub
and
fxch
repz
in
xor
popf
xor
sar
mov
mov
pusha
jl
retf
in
mov
fcom
xchg
mov
jecxz
inc
daa
cmp
or
push
or
inc
xchg
addr16
mov
mov
sub
jmp
inc
aaa
pop
and
out
cmp
cmps
dec
mov
sbb
dec
adc
jle
outs
pushf
mov
dec
and
pop
sbb
arpl
xchg
adc
xchg
jne
inc
or
ficom
call
jmp
out
pop
fcomip
leave
xchg
(bad)
call
pop
gs
mov
inc
and
lahf
arpl
mov
and
sbb
pop
popa
adc
pop
xor
std
int3
das
ret
and
scas
lods
push
test
and
pusha
scas
sbb
leave
fs
xchg
add
cwde
dec
lods
lods
ins
lea
pop
nop
pop
hlt
sub
xor
lock
dec
xchg
inc
adc
stos
jo
ja
shl
sub
cmps
in
mov
inc
adc
push
lahf
cwde
and
out
inc
jbe
retf
xor
xor
std
cmps
cmp
cmp
cmp
outs
nop
mov
sub
xor
fsubrp
or
dec
jne
jo
nop
mov
push
repnz
std
int3
leave
sub
stos
call
bound
fs
mov
into
mov
leave
adc
in
jb
addr16
adc
cmpxchg
ins
xchg
jmp
mov
loope
clc
rcr
stc
(bad)
or
outs
push
test
in
retf
ret
push
and
jle
push
das
(bad)
adc
cwde
jno
sub
stos
mov
mov
(bad)
clc
gs
aad
fstp
rol
fbld
jae
test
lock
rcr
out
adc
sub
sub
add
jno
mov
xchg
cmp
inc
pop
test
mov
pop
dec
or
mov
inc
and
sub
xchg
inc
cmp
mov
sub
inc
xlat
popf
dec
jmp
sub
cmp
aad
jg
fmul
push
scas
mov
or
sbb
hlt
sub
xor
lock
dec
xchg
inc
adc
jno
xor
cvttps2pi
jns
scas
enter
ret
add
cmc
pop
xchg
iret
push
mov
mov
sub
out
pop
lods
pop
jmp
push
scas
bound
sbb
out
and
cmp
cwde
dec
lods
std
imul
out
(bad)
loope
add
dec
cld
jl
mov
ja
ja
call
xchg
imul
and
push
cmp
adc
(bad)
pop
jge
in
retf
retf
in
or
and
adc
imul
mov
add
cmp
fdivr
and
aas
ror
sbb
push
popf
push
ds
sbb
jb
loop
fidiv
mov
jge
cmp
mov
xchg
push
out
jg
sbb
inc
and
test
(bad)
int
add
pop
adc
pop
popa
mov
cmps
addr16
hlt
pusha
ss
loope
into
in
test
repz
sbb
hlt
mov
sar
add
fcomp
pop
mov
jno
adc
jo
pop
inc
fwait
add
cdq
cmp
dec
mov
mov
sti
cmps
stos
ret
inc
mov
xor
cmps
adc
add
xchg
mov
xchg
into
push
sti
loop
xchg
pop
inc
or
int3
pop
inc
rcl
icebp
jo
ins
div
test
sub
je
inc
sub
cwde
mov
into
retf
add
repnz
push
xor
andnps
dec
sbb
popa
mov
mov
shl
bound
inc
xchg
mov
jecxz
inc
daa
and
cmps
add
push
and
cs
pop
xor
sbb
pop
pop
pop
pop
arpl
sub
or
adc
add
dec
shr
pop
pop
pop
cmps
shl
repnz
xor
std
jecxz
push
or
add
adc
sti
mov
cmp
std
xchg
(bad)
fstp
adc
xchg
mov
or
mov
mov
xchg
popf
sub
or
push
cwde
loopne
lods
sahf
mov
push
jbe
test
(bad)
pop
xor
mul
sahf
cs
cmc
rcl
fisub
sub
sbb
outs
pop
cmc
in
sbb
shl
ret
mov
jno
pusha
push
mov
aad
rcl
mov
push
pop
add
and
hlt
in
and
adc
inc
(bad)
sti
int3
xchg
popa
das
push
xor
jns
sbb
inc
pop
mov
push
jb
or
xlat
xchg
out
es
add
mov
adc
popa
mov
adc
jns
in
xchg
adc
icebp
cmp
popf
in
cmp
(bad)
imul
sar
(bad)
mov
cmps
adc
cli
cld
dec
in
and
in
(bad)
pop
cmp
jne
and
xlat
mov
popa
sbb
xor
jmp
popa
retf
mov
test
pop
addr16
and
and
ret
jmp
mov
pop
inc
mov
cld
int3
out
jb
mov
jno
dec
dec
cwde
leave
cmps
adc
mov
jnp
mov
test
add
push
icebp
push
adc
xlat
enter
(bad)
(bad)
adc
or
test
sbb
mov
mov
dec
adc
js
out
sub
jge
mov
inc
cdq
or
ss
std
(bad)
popa
mov
cwde
add
cdq
es
(bad)
adc
out
push
dec
pop
sub
(bad)
add
sbb
jp
dec
jmp
cmp
test
(bad)
inc
xchg
mov
in
inc
or
ret
push
test
add
movs
push
mov
push
and
dec
and
sbb
adc
jb
fdecstp
dec
popf
mov
into
retf
cmp
bndstx
mov
jbe
fdiv
data16
xchg
leave
(bad)
retf
cdq
fdivp
fadd
aad
daa
mov
dec
pop
adc
je
addr16
lea
mov
cmps
inc
popa
cs
jl
sbb
jo
ret
mov
test
inc
xchg
xor
je
add
out
sub
jb
repz
cs
mov
pusha
xchg
das
or
mov
ja
or
jno
int3
sti
pop
mov
shr
(bad)
test
xor
jge
out
inc
fadd
int
push
mov
mov
fadd
gs
lahf
sub
out
es
lock
xlat
jg
sbb
vpsrlw
xchg
out
sub
int3
jmp
inc
sbb
stc
xor
addr16
inc
adc
hlt
into
gs
cmp
pop
call
xor
hlt
in
or
push
mov
jmp
mov
daa
out
cs
fmul
xchg
xor
adc
xchg
movs
pop
movs
dec
mov
mov
stc
xchg
aaa
ss
mov
outs
sub
leave
rol
pushf
push
mov
cmps
inc
mov
fidivr
or
mov
push
in
ja
and
sahf
stos
shr
cmp
pushf
xchg
std
mov
xor
cmp
lock
or
adc
xchg
cs
icebp
mov
adc
jne
mov
ret
jb
mov
sbb
hlt
retf
lock
ret
add
call
sub
mov
jbe
(bad)
push
cmps
inc
jns
push
xchg
lahf
push
in
push
dec
or
push
not
add
popa
mov
int3
cmp
aam
je
sub
xor
xchg
loope
mov
sbb
mov
sbb
add
out
not
push
mov
xor
pop
xchg
lds
adc
jo
fisubr
xchg
mov
hlt
jne
or
popa
adc
push
or
and
fisub
pop
nop
jle
xlat
inc
push
fs
packsswb
mov
in
sub
arpl
jecxz
fisttp
mov
popf
icebp
jbe
dec
sbb
sub
sbb
call
push
mov
(bad)
(bad)
cli
jmp
(bad)
daa
jecxz
fld1
int3
xchg
mov
nop
stos
jge
loope
mov
push
mov
jp
test
pop
adc
jo
cwde
lock
sbb
inc
sbb
int
xor
(bad)
pop
sbb
gs
fcomi
xor
mov
mov
lahf
fdivr
mov
push
movs
out
jl
es
stc
loop
dec
hlt
pop
or
aaa
sub
(bad)
gs
ret
pop
outs
jae
jno
cwde
inc
sub
outs
dec
imul
movs
test
push
dec
in
sub
rol
push
dec
adc
iret
xchg
(bad)
adc
aad
mov
push
add
ret
retf
and
adc
cdq
and
(bad)
xor
inc
(bad)
(bad)
loope
in
sub
call
mov
aaa
push
dec
jp
fucomi
jge
lods
lock
dec
inc
movs
aad
cdq
(bad)
leave
pop
or
aaa
dec
(bad)
into
jmp
mov
pop
pop
sub
repnz
cli
sti
mov
push
push
jns
and
cmp
xchg
or
ins
ins
mov
fnstsw
(bad)
fdiv
fs
jo
mov
fsub
cmp
and
into
fs
in
bound
jbe
xchg
stos
lds
ror
mov
jns
adc
out
pop
pop
inc
sub
in
inc
lods
mov
adc
xor
push
push
outs
imul
icebp
cmp
adc
dec
mov
fnstsw
ins
jmp
lock
cmovns
mov
push
mov
push
cmp
push
pop
push
test
jns
push
push
cdq
cmp
jge
sub
adc
js
inc
lods
ja
push
sbb
adc
enter
jl
or
repz
cmp
shufps
cwde
add
push
mov
mov
call
into
pop
or
int
out
cmp
rol
sub
shl
loop
xchg
mov
push
ret
pop
outs
pop
and
sub
bound
push
xchg
outs
lahf
or
mov
cmp
push
arpl
adc
repnz
imul
arpl
rcl
(bad)
cli
jmp
(bad)
daa
pop
retf
leave
xchg
and
dec
push
call
mov
loope
fchs
in
dec
mov
sub
in
jge
daa
add
jmp
sbb
fcomp
icebp
xor
jbe
test
mov
sub
mov
xor
in
mov
adc
dec
in
or
add
sub
sub
sbb
push
add
outs
mov
sbb
(bad)
rcl
clc
bnd
xor
jge
sar
push
jo
jmp
sbb
das
mov
lahf
aas
fwait
rcr
pop
test
int
xor
(bad)
sar
and
inc
lds
xlat
not
std
dec
push
pop
mov
fwait
hlt
adc
aaa
rcl
test
mov
dec
xor
dec
in
mov
mov
dec
shl
inc
icebp
jo
cdq
rcr
int
(bad)
cs
aad
dec
hlt
mov
mov
xchg
push
dec
xchg
stos
inc
movs
aad
cdq
(bad)
iret
pop
or
sbb
test
in
popa
icebp
dec
pusha
mov
xor
out
in
repnz
cli
sti
mov
jmp
jmp
(bad)
adc
mov
pop
or
shr
push
sub
sbb
nop
enter
pop
mov
pop
jb
inc
sbb
cld
push
mov
fild
jmp
sbb
fdiv
adc
add
mov
sub
lods
fcom
mov
mov
call
push
mov
(bad)
(bad)
cli
jmp
(bad)
daa
pop
or
fstp
gs
adc
jp
arpl
arpl
sub
pop
outs
jae
jo
xchg
inc
and
push
mov
loope
mov
pop
pop
sbb
(bad)
add
sub
cmp
rol
and
lock
add
cld
fcmovnbe
jl
lods
add
dec
(bad)
inc
mov
popf
test
fldcw
pop
and
add
js
add
gs
inc
xchg
xor
add
arpl
xchg
and
fsubrp
push
jae
pusha
add
mov
mov
xor
and
add
ins
cli
mov
das
xchg
lods
hlt
in
jnp
cld
fs
repz
outs
cmp
ja
sub
fld
sub
scas
xchg
mov
retf
loopne
call
xchg
sbb
xchg
bound
sbb
push
loope
dec
xor
aad
cmp
out
mov
sbb
adc
mov
xor
popa
or
call
dec
movs
inc
and
sbb
pusha
or
mov
ins
sub
repnz
and
adc
add
in
jl
in
or
adc
push
cmp
(bad)
fcomip
pop
jp
outs
pop
aad
lods
aam
pop
gs
mov
outs
jno
push
call
add
lea
dec
sbb
sbb
and
xchg
pop
adc
jo
aas
popf
or
mov
js
adc
les
imul
adc
es
(bad)
xor
popa
or
call
xchg
jp
loop
inc
jb
mov
and
call
jl
aaa
adc
cmc
sub
push
jmp
(bad)
(bad)
adc
gs
fs
xchg
stos
jge
mov
sub
xlat
dec
mov
gs
fwait
jne
jns
bound
iret
jmp
(bad)
test
into
cdq
nop
fld
jge
sbb
not
pusha
fstp
push
scas
loope
sar
in
ret
das
xor
cmp
div
and
into
and
in
bound
or
enter
pusha
aad
add
cmps
bnd
pop
sti
cmp
stc
(bad)
gs
jno
lds
in
mov
popa
inc
fld
aam
sbb
mov
sub
pop
mov
mov
mov
mov
mov
cmps
sub
out
and
dec
repnz
mov
test
pop
aaa
out
xor
in
sub
fwait
retf
js
cwde
sub
mov
fsubr
add
mov
pop
loop
aad
mov
test
jns
cmp
dec
push
fs
mov
xchg
add
je
aaa
jg
sub
add
inc
jo
ror
mov
sbb
inc
xchg
(bad)
and
inc
push
fs
mov
xchg
add
je
aaa
jg
sub
add
lds
out
mov
sub
push
cmp
jns
pop
js
or
and
pop
hlt
adc
aaa
ror
call
mov
and
pop
and
mov
mov
movs
jp
es
(bad)
add
sub
or
cmc
xor
data16
outs
or
mov
sbb
sbb
outs
add
sbb
das
mov
sbb
(bad)
fist
popa
pop
or
dec
pushf
daa
pop
or
jmp
sbb
fbld
sbb
mov
(bad)
cmp
mov
sbb
mov
sub
std
xor
or
(bad)
jecxz
pop
or
xor
scas
push
mov
and
aad
lods
es
mov
sbb
cmc
sub
mov
sub
leave
ds
aad
xor
and
fsubp
pop
scas
leave
xlat
(bad)
nop
xchg
pop
aaa
fisttp
and
in
mov
(bad)
loope
pop
xchg
jns
add
inc
dec
in
leave
ds
aad
xor
and
fsubp
pop
scas
leave
xlat
(bad)
nop
add
push
mov
loope
pop
enter
push
cmc
sub
mov
push
jmp
(bad)
(bad)
adc
gs
fs
xchg
stos
jge
mov
jae
outs
cmp
jno
fstp
outs
clc
xchg
xchg
in
inc
push
inc
fsub
jl
lods
mov
adc
adc
int3
out
pop
data16
in
dec
cmp
add
mov
fucomp
push
pop
in
mov
in
push
inc
data16
push
inc
loope
(bad)
out
add
mov
mov
fnstsw
cli
xchg
mov
sub
inc
jg
neg
cmps
xchg
inc
lods
(bad)
ret
xchg
jne
cmp
loopne
(bad)
mov
cdq
pop
les
jmp
mov
pop
pop
sub
mov
outs
adc
fdiv
aam
xchg
in
ret
and
sub
int3
xlat
mov
xchg
jns
cmps
lock
inc
aas
aad
sub
pop
call
mov
aaa
fwait
xchg
push
inc
sub
xor
int
jmp
jg
outs
cld
rol
aam
add
(bad)
loope
in
sub
call
mov
aaa
fwait
xchg
push
inc
lods
shl
enter
push
push
retf
push
add
test
clc
inc
aas
cli
cdq
add
movs
sub
mov
jmp
arpl
adc
mov
clc
adc
pop
pop
fadd
pusha
inc
jecxz
inc
aas
cli
cwde
add
push
mov
pusha
aaa
fwait
xchg
imul
push
jns
nop
mov
and
ss
jmp
push
mov
test
pop
adc
loope
in
sub
mov
push
icebp
call
cmp
sub
push
test
aad
jno
push
jmp
push
mov
test
pop
add
(bad)
loope
in
sub
mov
push
icebp
call
sub
jb
out
xchg
in
les
adc
pop
add
sbb
cmp
and
inc
push
fs
packsswb
mov
in
cmp
push
mov
ins
xchg
daa
dec
fcom
scas
xchg
fnsave
(bad)
adc
movs
push
mov
mov
sub
aad
jns
and
jmp
inc
stc
loop
xchg
pop
fist
cmp
out
jbe
loope
mov
call
fdiv
scas
sub
stc
jns
xchg
mov
mov
call
push
mov
(bad)
(bad)
cli
jmp
(bad)
daa
pop
or
xchg
aad
jb
cld
clc
loop
xchg
pop
leave
jmp
sbb
adc
inc
ins
sub
repnz
xor
pop
cmp
xor
or
test
scas
adc
int3
pop
mov
dec
and
nop
outs
cmp
inc
pop
push
rcr
test
ret
fisub
xchg
cmps
jae
adc
jg
jmp
clc
aad
pop
pop
adc
dec
pusha
fstp
shl
and
inc
mov
data16
add
out
dec
aaa
push
stc
mov
push
test
jns
push
push
cdq
cmp
cmps
jb
add
je
cmp
in
scas
iret
jnp
jle
push
inc
in
sbb
aas
imul
aam
dec
(bad)
iret
jmp
mov
shl
popf
sub
outs
adc
jno
push
jge
lds
push
dec
aad
mov
mov
sub
cmc
mov
or
out
and
sbb
imul
cmp
dec
xchg
jmp
clc
cdq
test
pop
jbe
adc
pop
jb
loop
xchg
mov
test
stc
aad
add
mov
cmp
cmc
dec
xchg
xor
or
test
sub
pop
cmp
and
out
lods
fcom
je
je
ss
popf
xor
shr
jne
in
add
ror
xchg
bound
jmp
add
xor
fistp
jno
ja
shl
pop
xchg
sbb
cmp
outs
fnstcw
shl
sub
mov
test
inc
jae
pusha
add
sub
sub
xchg
ret
fnsetpm(287
cmp
and
mov
ror
mov
sub
mov
popf
icebp
jbe
dec
les
dec
aam
jo
jnp
adc
xor
add
cwde
addr16
sbb
imul
and
jbe
xchg
lods
movs
add
add
mov
add
enter
jns
lahf
and
jne
in
jnp
fcom
lea
(bad)
in
sub
daa
or
push
cmp
xchg
or
into
pop
out
sub
jo
lea
sub
repz
mov
inc
lahf
sbb
push
or
out
add
idiv
(bad)
popa
jmpw
test
mov
into
cld
dec
in
cmp
sahf
and
mov
fstp
adc
mov
je
mov
xor
stos
jb
ret
inc
sbb
outs
std
movs
xchg
jo
out
mov
add
stos
lahf
stos
xchg
je
lds
xor
hlt
retf
das
add
and
cmp
xchg
in
dec
push
mov
and
je
arpl
jmp
es
and
setns
xor
mov
cmp
add
lods
movs
push
inc
jns
rcr
and
jmp
adc
adc
pop
sbb
shl
rcl
xor
std
jecxz
push
adc
add
add
hlt
into
and
sbb
fistp
mov
adc
in
push
add
jb
in
in
scas
loopne
cmps
loope
test
pop
data16
mov
popf
cld
lds
mov
or
fs
call
pop
adc
sbb
jno
or
and
xchg
xor
mov
or
loope
shl
cmp
jg
mov
and
adc
aad
mov
out
mov
(bad)
xchg
cmc
xor
int3
fnsave
and
or
fdivr
sbb
cmp
xor
pop
sub
jmp
call
cmp
leave
(bad)
sahf
ds
pop
retf
mov
mov
and
jg
xor
push
mov
mov
lahf
dec
and
sbb
lods
fbstp
test
cmps
cmp
leave
(bad)
sahf
ds
pop
(bad)
xor
fdivr
push
mov
ins
jp
push
int3
ins
mov
xchg
jno
dec
aad
push
cwde
scas
(bad)
sub
push
mov
ss
dec
call
lods
or
dec
data16
dec
sbb
int
add
sub
ins
push
mov
mov
fild
retf
stc
out
shl
adc
adc
xor
(bad)
in
xchg
adc
xlat
jmp
or
xor
cld
popf
sbb
scas
loope
and
cmc
cmc
in
sbb
jne
(bad)
cmp
das
jmp
imul
sbb
(bad)
retf
lock
and
aad
jno
(bad)
popa
ffree
ja
pop
mov
outs
sub
mov
or
adc
adc
mov
lahf
and
cld
int3
out
jle
inc
pushf
inc
adc
lea
(bad)
push
(bad)
adc
push
jo
add
dec
das
(bad)
cmps
or
loopne
fadd
mov
dec
sahf
mov
fdiv
adc
xlat
xchg
pushf
adc
and
fdiv
xchg
gs
sbb
sbb
minps
ins
cmps
je
mov
or
repz
popa
aad
je
scas
adc
movs
(bad)
cmp
mov
ins
xchg
sbb
int3
nop
in
jecxz
repnz
fs
pop
pop
xchg
in
sub
xor
icebp
push
retf
push
fisub
mov
addr16
pusha
cli
or
arpl
or
ret
mov
je
mov
xor
jecxz
cdq
sbb
xchg
(bad)
das
ja
call
xchg
and
popf
pop
not
mov
clc
add
in
dec
adc
jmp
push
popf
pop
sahf
jne
or
mov
(bad)
mov
loop
xchg
out
fmul
int3
out
into
mov
leave
inc
mov
psubsb
and
je
hlt
sbb
cmps
mov
lds
xchg
xor
push
mov
pop
sahf
call
pop
test
sbb
mov
and
(bad)
lock
jle
mov
xchg
mov
add
xor
stos
xor
push
xchg
mov
inc
pop
out
mov
jno
ss
jl
jne
in
cmp
shl
sbb
shr
hlt
ins
jae
sub
fild
or
mov
pop
lods
or
fcom
inc
xor
clc
mov
retf
(bad)
pop
outs
int
push
cmc
pop
cmps
not
and
into
shr
xor
cmps
(bad)
cli
addr16
xor
xchg
(bad)
enter
and
xchg
push
sub
loop
push
mov
xchg
popa
cli
mov
fistp
shl
pop
sub
(bad)
imul
in
ja
(bad)
aad
xchg
hlt
xchg
and
pop
stos
jb
ret
xor
(bad)
loope
xchg
loop
pop
retf
push
or
loopne
sbb
repz
cmp
(bad)
outs
xlat
mov
pop
fiadd
pop
fstp
dec
mov
test
mov
cs
jge
jbe
fmulp
push
mov
aam
bswap
and
out
loopne
lock
dec
cld
mov
add
xor
xor
imul
pop
in
aas
xchg
mov
sbb
inc
fcmovnbe
jle
or
mov
or
cmps
pop
stc
(bad)
mov
or
xchg
or
jns
mov
push
lods
arpl
imul
not
ds
mov
in
ret
push
jns
inc
popf
xchg
cld
mov
jb
mov
test
cmp
mov
push
pop
jns
sub
ror
sbb
cli
mov
xor
mov
lods
mov
cmp
adc
xchg
std
lods
ds
dec
sub
into
pop
jle
mov
mov
(bad)
adc
mov
mov
jb
loop
imul
sbb
sub
mov
js
out
cwde
addr16
movs
xor
or
or
lock
dec
rol
pop
pop
push
cmp
cmp
retf
retf
jne
stc
scas
adc
inc
stos
add
daa
xchg
dec
and
jb
out
sbb
(bad)
fisubr
add
sbb
out
retf
jo
inc
xchg
xor
div
scas
test
rcl
aaa
fisub
cmp
rol
das
inc
cmp
jle
push
icebp
xor
dec
sahf
add
pop
fidiv
cli
test
jbe
in
jb
ss
dec
push
push
sahf
pop
mov
cmp
sbb
jl
int3
cmps
dec
not
test
sub
push
xor
adc
jnp
add
and
call
clc
mov
and
push
daa
(bad)
xor
dec
in
adc
adc
aad
idiv
out
push
sub
icebp
leave
out
or
movs
sub
xor
shl
mov
stc
xchg
or
or
iret
sbb
mov
movs
bound
cmp
push
in
arpl
pop
inc
pop
and
cwde
mov
cld
test
and
retf
sub
sub
cmp
test
mul
cmp
mov
push
icebp
stos
pop
stos
dec
jmp
aad
pop
out
fmul
clc
das
loope
sub
fdivr
pop
cwde
inc
daa
add
rol
push
fisttp
inc
xchg
int3
cmp
and
test
mov
push
pop
or
lahf
cmp
fsubr
push
xor
adc
inc
nop
es
dec
push
xor
sub
cmp
paddusw
inc
rcl
xchg
mov
mov
ret
jecxz
pop
push
sub
jecxz
(bad)
xlat
adc
jmp
lock
push
mov
je
inc
scas
shl
aas
icebp
or
xchg
jl
add
cmp
movs
out
jl
daa
hlt
cmp
jle
out
mov
ja
jae
scas
mov
in
in
sub
aaa
xor
jns
jae
push
pop
out
arpl
push
sbb
arpl
cmp
sbb
push
ret
ins
mov
mov
repz
mov
imul
scas
adc
xchg
add
inc
adc
mov
xchg
mov
xor
shl
xor
test
popa
mov
pop
out
sub
(bad)
pusha
into
xchg
cmp
aaa
push
and
scas
xchg
cmp
imul
inc
add
jmp
movs
fdiv
sahf
jp
(bad)
fwait
fwait
jo
mov
fimul
out
fisub
sbb
cmps
jo
cs
movs
or
add
popa
fst
or
mov
mov
pop
or
jne
(bad)
cmp
sub
pop
or
push
sbb
rcl
pop
pop
push
cmp
jae
mov
(bad)
aad
push
fst
push
cmp
ins
iret
xor
xchg
(bad)
std
sub
inc
hlt
lods
fist
cmp
popa
out
scas
mov
imul
xor
dec
shl
mov
and
sbb
pop
(bad)
or
arpl
fisttp
dec
adc
ror
push
or
jecxz
adc
cmp
movs
xor
xchg
push
hlt
jg
or
xchg
outs
cmp
mov
loope
pushf
jge
(bad)
popa
mov
test
xor
add
add
pop
aaa
(bad)
dec
inc
pop
ret
jb
mov
sbb
adc
inc
push
rcl
push
stc
xchg
jmp
in
sub
sti
mov
mov
pop
jne
int
call
lods
in
sub
xor
ret
mov
retf
push
in
repnz
retf
adc
repnz
cmp
sti
xor
mov
(bad)
sti
cmps
push
mov
xchg
cdq
test
fsubrp
sar
adc
mov
mov
imul
jmp
xor
mov
pop
adc
ret
add
pop
jb
loope
iret
mov
stos
not
scas
sahf
ficom
shl
rcl
test
call
pop
lods
xor
lea
or
jecxz
test
jno
not
test
mov
pop
sbb
call
ret
jae
cmp
inc
and
dec
in
jmp
ret
xor
scas
lods
cmp
jns
or
pop
pop
xchg
adc
mov
inc
dec
mov
or
outs
sbb
hlt
retf
dec
inc
xor
cld
push
stos
dec
jmp
xchg
adc
push
ins
je
push
out
out
(bad)
cs
cwde
and
adc
sub
call
push
out
pop
sbb
xchg
(bad)
in
xor
jne
test
cmps
pop
rcl
repnz
cmp
and
aas
fdivr
xchg
inc
das
test
(bad)
cmp
fs
push
cmp
or
jne
test
xor
xchg
loop
jecxz
jno
ss
xor
idiv
aas
inc
iret
jno
sbb
pop
data16
sub
stos
pop
mov
cmp
bswap
cmps
arpl
jnp
push
hlt
jmp
and
cdq
sub
xor
sbb
fcomp
or
mov
pop
mov
inc
add
push
push
cwde
mov
iret
sbb
aaa
adc
add
(bad)
out
in
fnstcw
xor
sub
jle
(bad)
test
retf
(bad)
sub
push
pop
pop
push
mov
xchg
in
fwait
ret
push
mov
jle
daa
jle
jmp
es
or
jbe
loop
jae
scas
mov
sahf
pop
adc
aam
retf
inc
fisubr
cmp
and
adc
(bad)
in
or
pop
sbb
cmps
add
push
pop
xchg
or
cld
mov
lea
mov
stos
div
aaa
fimul
lea
retf
pop
jmp
xchg
sbb
sub
out
lahf
cmp
aad
pusha
inc
lock
cmps
adc
ret
std
mov
dec
and
push
ja
and
addr16
or
arpl
retf
in
or
mov
stc
nop
or
leave
xor
sub
jns
cdq
stc
cmps
cmp
imul
and
hlt
xor
ror
xchg
and
test
ds
mov
sahf
mov
mov
test
xchg
cmc
mov
rol
(bad)
or
sbb
push
dec
mov
push
shr
sahf
jno
xlat
dec
call
mov
inc
pop
cmp
jno
ja
pop
daa
jmp
mov
or
arpl
or
push
jo
mov
or
push
rol
and
stos
pop
es
in
or
xchg
cmp
xchg
out
or
sti
(bad)
pop
loope
pop
out
sub
sbb
pop
adc
ins
mov
jae
dec
scas
sub
shl
mov
fcomp
sahf
jno
loop
test
pop
test
inc
jns
out
jl
xchg
jae
pop
and
daa
mov
pop
mov
and
retf
cwde
inc
or
adc
cdq
or
inc
cmp
cdq
enter
ret
or
adc
sub
cli
mov
mov
sahf
pop
sti
ja
push
pop
pop
push
das
add
jae
mov
inc
daa
sbb
mov
fdiv
data16
inc
loop
(bad)
xchg
mov
fbstp
pop
out
fiadd
jmp
cwde
or
movs
repnz
(bad)
mov
inc
mov
xor
jp
xchg
add
ins
or
ss
out
vpaddq
sti
sub
adc
xchg
mov
mov
jg
les
inc
and
xchg
daa
pusha
mov
mov
aad
pop
sbb
sub
test
lock
loope
sub
sbb
cmp
jg
push
jp
xchg
or
and
dec
out
cmps
adc
jmp
arpl
inc
dec
push
push
loop
mov
stos
or
in
fs
pushf
xor
test
xor
std
shl
add
xchg
std
aad
mov
xchg
ret
push
arpl
fmul
das
inc
nop
addr16
lods
pop
stos
jle
xchg
xor
nop
mov
jmp
ss
and
ficomp
popa
xor
pop
mov
in
arpl
pop
jns
out
cmc
adc
mov
imul
(bad)
xchg
fldenv
inc
int3
test
repz
in
hlt
jo
inc
nop
sbb
xor
daa
scas
movs
ficomp
xor
cmp
mov
into
adc
out
(bad)
jge
fild
in
xchg
xor
xor
pusha
xchg
loop
jle
xchg
and
rol
xlat
jmp
push
das
dec
sbb
in
dec
lock
xor
stos
cmps
cmp
push
cs
or
mov
lods
mov
mul
add
jg
rol
jno
dec
cmp
cli
adc
int3
out
sar
xchg
push
das
add
mov
mov
xchg
sub
xchg
mov
popa
psubsw
mov
jo
int3
out
je
xchg
cmp
and
cdq
push
or
in
cmp
pushf
enter
fdiv
in
aad
xchg
fadd
fs
scas
mov
sahf
pop
outs
cmp
sub
out
xchg
push
jecxz
cdq
sbb
aaa
cmp
(bad)
(bad)
das
js
call
xchg
daa
jmp
push
or
ret
mov
mov
retf
lods
ins
xchg
mov
dec
dec
(bad)
jge
jb
and
or
std
int3
jae
jl
out
std
add
sahf
jno
add
push
les
adc
ss
mov
cld
xchg
call
es
inc
nop
or
inc
or
lods
mov
or
jmp
sti
xchg
or
and
imul
sbb
ss
test
addr16
push
mov
jl
xor
(bad)
int
push
test
mov
xchg
outs
fwait
mov
stc
es
mov
add
fisub
mov
jb
mov
cmp
add
mov
stc
inc
or
int3
pop
out
sub
jo
sbb
lds
and
repz
jl
rcl
push
push
mov
xchg
icebp
cmp
fisttp
pop
adc
dec
data16
ret
and
jg
sbb
mov
push
or
stos
sbb
loop
adc
fs
jnp
dec
jge
std
scas
adc
out
(bad)
and
jbe
sub
ror
mov
mov
mov
ds
fucomp
cmps
retf
mov
pop
push
add
ss
jecxz
(bad)
jecxz
inc
daa
imul
dec
push
push
xor
cld
mov
test
push
ss
mov
ret
add
jmp
test
in
mov
sbb
pop
ins
xchg
das
push
out
fild
add
jne
mov
fsubr
xor
(bad)
aam
je
inc
and
sbb
adc
push
inc
in
pop
dec
or
mov
cmps
cmp
loop
sub
push
nop
mov
sub
jo
in
mov
xchg
mov
out
cmp
add
xchg
add
dec
xor
ret
mov
inc
jp
mov
cmps
adc
scas
mov
adc
pop
hlt
sub
idiv
ror
repnz
ins
sub
int3
leave
das
aaa
and
mov
hlt
test
sub
mov
repz
adc
ins
int3
arpl
in
cs
inc
jne
add
sbb
add
sub
sub
retf
daa
aad
scas
mov
stos
pop
out
pop
sub
cdq
xor
hlt
in
popf
sub
add
mov
scas
jmp
mov
and
add
lock
out
cmp
movs
push
and
mov
(bad)
in
pop
in
jmp
stos
idiv
sbb
imul
(bad)
mov
sub
xchg
lds
ficom
out
out
mov
mov
es
xchg
out
jl
call
add
(bad)
push
mov
(bad)
imul
mov
xor
push
jns
jnp
pop
mov
sub
lock
dec
popa
fucom
sahf
cli
mov
repnz
sub
ins
mov
clc
pop
inc
sub
aad
cwde
adc
(bad)
mov
rcl
push
xchg
out
jo
pop
fnstsw
sub
adc
imul
sub
gs
into
ret
inc
ja
lea
or
arpl
ret
mov
adc
shl
jno
push
jl
sub
and
xor
daa
jmp
mov
mov
hlt
dec
jmp
test
imul
jmp
out
cmp
or
(bad)
jp
imul
ret
mov
inc
add
xchg
pusha
ja
retf
cmps
adc
scas
mov
adc
push
out
loop
dec
mov
inc
cwde
cmc
pop
sbb
add
sbb
pop
dec
jmp
scas
shl
xchg
mov
ret
push
scas
inc
imul
or
in
sub
int3
leave
das
aaa
and
xor
loop
mov
lods
lods
and
stos
or
cli
dec
test
dec
cs
jmp
jecxz
mov
mov
mov
popf
outs
out
std
mov
lahf
jno
pop
and
inc
dec
adc
ins
add
push
push
loope
pop
dec
push
inc
cdq
(bad)
rol
in
das
into
mov
jp
xchg
cdq
stc
(bad)
popa
xlat
bound
xor
push
out
xchg
(bad)
leave
cdq
into
add
add
dec
xchg
test
lea
jecxz
rol
mov
pop
mov
add
adc
(bad)
or
mov
out
sub
jo
jb
sub
fcom
and
dec
ror
sbb
lock
pushf
mov
test
pop
pop
dec
arpl
xor
ss
xor
(bad)
sahf
inc
cmp
out
mov
dec
fwait
loopne
or
call
fnstenv
clc
(bad)
popa
mov
int3
test
pop
cwde
repnz
je
leave
push
out
retf
aas
inc
cdq
outs
jae
dec
dec
mov
dec
lock
sbb
fnstcw
mov
inc
push
jno
cmp
mov
addr16
pop
mov
inc
and
dec
ds
(bad)
pop
xor
fstp
popa
gs
add
push
jecxz
fxch
(bad)
mov
bound
mov
ret
cmp
mov
retf
push
push
sahf
cli
mov
sbb
pop
pop
scas
adc
(bad)
and
and
fdivr
sbb
jecxz
imul
fcom
push
jno
pop
pop
and
js
out
jns
icebp
jnp
sub
xchg
loope
xor
loopne
fdivr
sbb
jecxz
imul
or
pop
inc
mov
pop
lahf
jno
pop
pop
and
fs
out
jns
icebp
dec
sbb
addr16
sbb
pop
sbb
hlt
retf
lock
jl
jmp
or
pushw
mov
mov
leave
fs
adc
cwde
or
add
xchg
sub
jecxz
or
int3
dec
call
mov
jmp
cwde
jmp
sbb
fucomp
xor
jbe
pop
pop
ret
mov
sbb
push
ret
and
sbb
push
mov
add
sub
je
cli
xor
je
mov
sar
xchg
mov
push
outs
or
ror
and
jno
(bad)
sub
sub
jne
mov
xor
aaa
sub
and
xor
and
sbb
(bad)
pop
mov
xor
ret
xchg
pusha
pop
retf
retf
cmps
adc
scas
mov
retf
push
pop
jmp
(bad)
stc
and
and
sbb
scas
je
jmp
jmp
aam
pop
mov
fwait
loope
addr16
xor
inc
daa
fild
sub
(bad)
fwait
dec
cmp
sbb
fldenv
mov
push
cld
xchg
sub
cdq
and
fidivr
neg
dec
das
iret
dec
cmc
in
sbb
das
aaa
pop
xor
cmc
lods
mov
pop
pop
mov
mov
and
and
adc
add
pop
in
jmp
and
hlt
popf
inc
xchg
sar
data16
pop
test
mov
pop
cwde
mov
push
sti
inc
sbb
xchg
sbb
xor
pop
mov
mov
jmp
jmp
mov
push
shr
jge
cmp
inc
xor
jbe
adc
jo
dec
lods
repnz
cld
int3
out
jb
mov
mov
int3
test
mov
iret
mov
inc
xchg
jne
addr16
inc
dec
cmp
pop
dec
ds
sub
xor
lahf
push
mov
stc
lods
ja
jns
cmp
jmp
xchg
or
inc
stos
aad
fwait
cmps
(bad)
mov
popf
mov
lahf
mov
(bad)
sub
int3
mov
xchg
scas
adc
xchg
add
mov
push
and
cmp
test
push
or
popf
nop
mov
sub
jno
ss
(bad)
xchg
mov
test
sar
adc
arpl
stc
xchg
in
or
or
jp
bsr
adc
mov
daa
push
inc
and
cs
jmp
push
not
(bad)
loop
fdivrp
test
adc
push
sub
add
xor
xchg
call
sbb
mov
jmp
push
dec
(bad)
loop
paddusw
je
aad
pop
adc
cmp
xor
aas
cmp
mov
cmps
shl
or
sub
and
inc
xchg
sar
xor
repz
xor
xchg
movs
add
xor
adc
adc
cdq
les
scas
pop
mov
pop
fisttp
xor
stos
dec
lds
lahf
shl
jmp
arpl
leave
out
adc
in
xlat
sbb
push
das
cmovs
in
sbb
fbstp
xchg
dec
dec
(bad)
loop
psllq
push
sub
leave
rcr
jl
mov
ret
stos
rol
xchg
iret
aam
pusha
dec
ret
cmc
adc
ror
xchg
pop
aad
repz
adc
sub
and
mov
xor
sar
mov
mov
fst
pop
(bad)
and
outs
leave
push
inc
popa
je
addr16
jp
mov
loope
(bad)
in
je
arpl
push
cli
xor
stos
pop
sahf
sub
push
inc
mov
push
xor
sub
jge
leave
in
and
fimul
call
dec
cmc
in
sbb
mov
xor
loope
and
sub
jo
mov
ds
mov
push
cmp
dec
dec
xor
arpl
dec
and
add
nop
test
sahf
jno
add
stos
jmp
cwde
add
out
cmp
mov
loop
cmp
inc
outs
or
sbb
mov
or
jmp
ds
adc
cmp
xchg
mov
cmp
pop
jns
mov
sbb
nop
loop
(bad)
ins
je
add
jle
adc
add
xchg
add
sbb
jle
mov
call
jl
test
mov
push
ss
sbb
mov
xor
scas
sbb
movs
jno
je
and
jge
pop
ins
mov
fwait
popf
sbb
stc
nop
or
ja
push
or
xchg
pusha
jp
xlat
out
mov
xchg
ret
jb
inc
(bad)
in
movs
pop
xchg
jecxz
aam
xor
jb
ss
imul
addr16
adc
dec
popf
loope
xchg
inc
daa
shl
mov
sbb
sub
stc
inc
sbb
inc
inc
popaw
mov
cmps
fst
mov
shl
dec
push
cmp
int3
jns
sbb
cld
test
cs
sub
aam
(bad)
stos
call
push
(bad)
dec
xor
mov
jne
imul
xchg
jge
gs
in
test
lahf
clc
lods
pop
add
adc
ja
xchg
stos
or
daa
aam
sub
mov
fisub
(bad)
push
add
ror
sbb
cmp
inc
jb
or
and
mov
add
mov
gs
and
mov
pop
outs
in
or
or
fsubp
(bad)
xor
dec
fimul
xchg
mov
(bad)
or
iret
mov
into
loope
pop
addr16
test
call
int
mov
fild
cmp
xor
jne
mov
addr16
adc
jns
fdiv
ficomp
jb
cmp
or
xor
pushf
xor
or
or
mov
pop
aad
je
push
xchg
mov
(bad)
adc
inc
lahf
xchg
mov
les
stos
loopne
ret
jno
(bad)
cld
or
fwait
mov
mov
and
scas
(bad)
lods
sub
jb
lds
mov
sub
xor
stos
mov
(bad)
sti
int3
xchg
pusha
out
retf
cmps
adc
mov
mov
shl
clc
test
sbb
xrelease
sub
mov
ret
push
scas
dec
sub
shl
cmp
xchg
push
sub
jle
fnstcw
xor
pop
nop
lock
cdq
(bad)
(bad)
out
or
imul
ja
add
xchg
push
or
adc
rcr
retf
add
sbb
jmp
shl
mov
mov
pop
retf
push
pop
mov
pop
icebp
int3
pop
je
stos
pop
enter
movs
xor
xchg
pop
arpl
push
daa
aam
test
sahf
push
sbb
pop
imul
inc
in
sbb
inc
and
mov
jb
and
imul
and
neg
js
lock
gs
leave
sti
sub
mov
mov
or
push
sbb
nop
pop
repnz
mov
adc
in
stc
mov
inc
sub
in
lods
mov
xlat
cdq
push
push
and
int3
bound
cmps
jmp
into
pop
inc
jecxz
fistp
(bad)
sub
ja
pop
pop
pop
out
sub
(bad)
adc
shl
pop
mov
pop
pop
sbb
mov
xchg
inc
push
jp
dec
inc
xor
jo
out
sub
fsubr
xor
ja
inc
daa
inc
aaa
pop
dec
fucom
ror
pop
mov
into
add
fsubrp
sbb
adc
outs
ja
xchg
inc
aaa
xchg
sbb
mov
sbb
adc
mov
and
ja
mov
xor
dec
out
movs
mov
adc
loope
sahf
add
xor
mov
iret
(bad)
mov
xor
adc
dec
test
cmps
mov
jmp
push
int3
dec
mov
pop
loop
mov
lds
je
js
inc
in
sub
movs
and
xor
sbb
int
arpl
mov
or
cmp
xor
hlt
into
and
stos
cdq
cmp
cmp
xchg
cmp
push
stos
je
dec
adc
rcr
xchg
gs
pop
aam
je
cwde
dec
lods
out
cmp
js
std
aas
inc
dec
jle
fwait
inc
inc
sub
jecxz
cmp
aam
rep
mov
shr
inc
or
outs
rcl
xchg
in
jne
adc
cmp
sub
sahf
bound
dec
xor
sqrtps
ins
mov
movs
cmp
shl
push
push
sub
adc
imul
imul
and
jmp
jmp
retf
pop
push
mov
jae
jp
mov
push
mov
lock
fstp
mov
mov
test
gs
movs
into
pop
jge
push
ja
xor
repnz
ins
sti
idiv
arpl
inc
cmps
mov
in
or
inc
jmp
mov
(bad)
popa
push
scas
mov
sub
cmc
adc
xchg
dec
push
(bad)
inc
inc
sub
mov
shl
maxps
fistp
aad
div
add
ins
icebp
aas
or
int3
das
outs
(bad)
adc
jbe
jno
fistp
mov
xchg
and
cs
and
sahf
mov
aaa
fstp
out
sub
ds
cs
jns
xchg
bound
xor
(bad)
push
jae
ret
or
imul
and
adc
sbb
fs
mov
dec
dec
mov
and
hlt
jl
dec
dec
mov
(bad)
mov
sub
adc
pop
retf
out
cmp
aaa
div
xchg
pop
call
add
inc
push
daa
jb
dec
jmp
pop
fdivr
shl
mov
cmp
cld
lahf
outs
test
xor
ret
mov
cmp
ret
and
lds
xchg
std
pop
fdivr
stos
dec
sub
jno
add
imul
jle
jl
jle
retf
xor
cs
dec
mov
std
int3
test
adc
jne
and
jns
fdiv
xor
xor
xor
lods
inc
sti
cmps
push
outs
xchg
add
int3
xchg
out
shl
scas
lods
inc
fyl2xp1
mov
xor
xor
lods
sub
mov
dec
int3
pop
movs
inc
or
push
sbb
hlt
retf
mov
xor
adc
aaa
mov
sbb
xor
xor
xor
pusha
jnp
add
pop
ins
stos
int
scas
cmps
and
hlt
xchg
daa
jmp
out
shl
add
sahf
or
mov
imul
out
pop
adc
push
repnz
mov
adc
inc
pop
or
adc
add
lds
jbe
pushf
(bad)
pop
jl
arpl
in
mov
shl
ret
sbb
xchg
popf
mov
bound
jb
inc
sbb
sbb
push
jecxz
cdq
stc
mov
mov
fwait
jns
daa
sbb
mov
stos
sub
add
fmul
jp
sub
mov
aas
outs
jne
addr16
daa
mov
lea
cmp
mov
push
sbb
xor
jo
add
mov
mov
xor
xchg
add
fist
mov
sbb
or
arpl
push
daa
shl
in
cmp
sbb
push
test
push
gs
rol
leave
out
cmp
sub
add
mov
inc
lds
pop
out
xlat
pop
dec
mov
mov
xor
mov
mov
sbb
mov
xchg
or
push
arpl
jbe
call
xchg
ss
add
ret
rcr
push
cwde
jo
pop
(bad)
jg
aas
(bad)
fist
aam
in
xchg
xchg
popf
xor
ror
outs
retf
mov
stc
cmp
add
bound
ins
mov
repz
inc
dec
jne
cmp
xchg
sahf
mov
xchg
outs
movs
add
(bad)
xor
std
mov
repnz
sti
movs
data16
pop
out
sub
stos
jmp
mov
jb
cmc
jecxz
xchg
or
push
inc
sub
int3
leave
and
xchg
mov
pop
xchg
cwde
lock
push
sub
data16
out
sub
sbb
stc
std
add
jge
jp
(bad)
(bad)
pusha
push
fxch
cmps
adc
je
inc
pop
je
arpl
push
cmps
jle
mov
outs
dec
(bad)
in
push
push
ins
dec
push
add
sbb
inc
(bad)
jno
xchg
fild
adc
mov
pop
aad
add
adc
add
and
push
xchg
stc
movs
pop
xchg
or
ds
inc
xchg
cli
or
fidiv
xchg
xor
push
test
jo
sub
sub
pusha
cdq
jo
lea
jecxz
mov
mov
out
mov
mul
cmps
jmp
dec
popa
fwait
cmps
adc
ins
adc
out
cmp
add
(bad)
outs
ja
jle
mov
sti
nop
and
push
sub
dec
daa
ficom
cmc
push
mov
fwait
sub
mov
jp
lea
push
sub
fdiv
bound
push
das
sbb
(bad)
ficom
sub
inc
pop
sbb
stos
dec
jmp
aad
mov
mov
pop
xor
mov
in
xchg
mov
icebp
(bad)
xchg
mov
jle
xor
sub
les
xchg
pop
mov
(bad)
popa
ss
cwde
mov
rcl
lock
mov
and
xor
int
out
jne
nop
aam
loop
mov
std
lahf
cld
dec
(bad)
scas
or
jecxz
mov
jns
add
adc
cld
pushf
aas
xchg
pop
fnstcw
mov
(bad)
adc
enter
mov
cmps
pushf
lods
loop
pop
aad
lea
pop
push
arpl
pop
(bad)
push
ficom
ret
push
out
add
jecxz
jl
dec
dec
sbb
stos
idiv
pop
adc
aam
pop
out
fmul
clc
adc
jo
pop
push
fwait
shl
and
mov
pop
outs
sub
add
sub
dec
pop
(bad)
(bad)
pusha
pop
ror
cmps
adc
inc
leave
sbb
ret
push
test
xchg
inc
stos
jg
sbb
sub
loop
and
jmp
in
iret
push
repz
dec
aas
mov
sbb
movs
adc
imul
int
sar
sub
in
mov
lock
stos
dec
jmp
pop
aam
jl
sub
js
inc
xor
cwde
add
movs
jle
cmp
outs
pop
jecxz
popf
xor
std
inc
inc
adc
into
cmc
adc
and
inc
push
xor
xchg
cmc
adc
sub
mov
or
(bad)
ror
sti
int3
ins
mov
sbb
pop
(bad)
or
sub
xchg
sbb
popf
lods
pushf
cmp
cdq
mov
leave
aam
mov
cmp
jb
in
in
sub
fnstsw
jb
rcr
test
cmp
jecxz
es
jp
inc
jge
push
jg
out
mov
in
jno
cld
dec
adc
sbb
arpl
fimul
mov
pop
(bad)
jno
dec
push
jmp
call
nop
loope
(bad)
and
pop
gs
mov
sub
retf
mov
(bad)
inc
pop
fbstp
xchg
pop
(bad)
mov
cmp
stos
dec
pushf
mov
cld
mov
cmp
daa
fucomip
jg
jae
dec
daa
jge
mov
lea
dec
mov
vxorps
mov
stc
inc
xchg
adc
jbe
cmp
ss
test
and
jecxz
mov
mov
add
jae
jp
cmovge
je
mov
mov
lds
mov
popf
inc
aaa
jge
dec
(bad)
sahf
into
lahf
or
pop
sbb
xchg
cli
arpl
jmp
sub
test
adc
fs
xor
test
inc
and
es
es
out
stos
dec
nop
cmp
icebp
fdiv
mov
adc
xchg
pop
add
cmp
sbb
push
jns
jle
and
ret
push
shl
sbb
sbb
jl
test
jp
ins
mov
into
aad
data16
(bad)
hlt
into
popa
and
in
xchg
add
addr16
mov
dec
(bad)
mov
scas
popa
movs
lsl
sbb
ror
cmc
adc
xchg
mov
rcl
test
ss
xor
fsub
mov
ret
adc
popa
sbb
push
or
inc
sahf
or
mov
outs
ja
xchg
inc
pop
pushw
das
arpl
adc
dec
or
mov
mov
nop
sbb
std
mov
test
dec
in
sub
frstor
pop
addr16
jb
add
push
ss
and
push
or
cmp
adc
xor
jae
mov
stc
mov
pop
mov
sub
add
inc
push
and
cdq
lea
repnz
cdq
aam
push
or
arpl
xchg
jae
out
(bad)
je
lock
jo
mov
pop
fimul
jb
out
sub
arpl
(bad)
int
push
fisttp
push
push
call
adc
and
sub
imul
and
mov
xor
dec
adc
or
fdivr
push
popa
in
arpl
xor
test
xor
addr16
sub
scas
jae
xor
or
sti
cmps
mov
cs
xchg
xor
je
jno
and
popa
mov
test
mov
aad
pusha
ret
(bad)
sahf
push
test
cwde
or
hlt
bound
retf
mov
std
inc
cmp
sbb
push
mov
jno
cwde
pop
and
xor
dec
hlt
xchg
(bad)
sahf
cs
cwde
or
hlt
bound
retf
mov
fimul
movs
lsl
sbb
ror
cmc
adc
outs
ja
fidiv
gs
mov
loope
mov
dec
test
sub
xor
pop
or
xor
stos
neg
hlt
sbb
jno
rcr
lods
cmp
ret
data16
push
pop
cwde
dec
lods
push
lea
mov
arpl
push
mov
push
les
inc
sbb
lods
fidivr
gs
dec
jmp
add
sbb
(bad)
pop
add
loop
cmp
hlt
shl
jno
jae
js
push
dec
aad
mov
pop
mov
add
mov
mov
(bad)
lahf
outs
test
outs
push
sbb
std
add
push
cmp
jbe
ja
jge
fcmovnbe
sub
(bad)
fdivr
mov
add
cmc
jl
int
in
add
add
cmps
cmps
mov
ss
mov
lods
sub
cwde
int
out
cmp
jne
out
cmp
iret
pop
scas
sbb
leave
adc
pop
out
mov
push
je
fild
dec
adc
(bad)
or
les
scas
adc
xchg
add
(bad)
and
cmp
outs
(bad)
push
inc
adc
adc
scas
xlat
int3
pop
fwait
and
add
xor
cmp
popf
dec
movs
jle
xchg
dec
inc
sbb
std
int3
xchg
jb
or
lahf
sbb
fisub
lahf
sbb
lahf
mov
shr
dec
enter
push
sub
sbb
jle
out
mov
cmps
jle
cmps
pushf
or
shr
pop
fidiv
inc
sub
jb
fsub
adc
mov
fisub
inc
sub
lods
das
jbe
or
xlat
fcomip
xor
lahf
sub
adc
sub
xchg
mov
mov
inc
outs
inc
int3
ror
ror
sbb
and
mov
mov
inc
loop
int3
xchg
pusha
pop
ror
cmps
adc
inc
xor
in
retf
outs
stc
fsub
jne
(bad)
inc
daa
add
sbb
add
das
push
xor
jecxz
mov
xchg
lahf
mov
push
pop
test
mov
push
js
inc
sti
test
xchg
add
jl
in
ds
mov
cwde
cmc
sbb
pop
fisubr
jbe
jno
mov
(bad)
std
mov
jmp
push
mov
mov
fst
push
(bad)
loope
dec
hlt
push
ja
xor
dec
mov
pop
dec
ds
inc
cdq
push
mov
out
mov
call
or
mov
(bad)
mov
cmp
mov
test
sbb
mov
mov
sub
inc
cmp
jmp
sub
jg
addr16
adc
jge
pushf
movs
call
push
jbe
arpl
push
add
xchg
adc
stc
test
adc
loopne
sub
sbb
test
addr16
iret
xor
sbb
dec
adc
arpl
mov
jne
test
adc
test
fistp
and
mov
repnz
hlt
sbb
xchg
stos
not
test
mov
lea
arpl
cmc
adc
xor
mov
pop
scas
jb
es
(bad)
jb
int3
aam
pop
cmp
dec
inc
sub
or
pop
xchg
mov
lea
mov
push
es
retf
xchg
and
or
mov
ficom
adc
rcl
cmc
test
sub
add
dec
call
xor
pushf
clc
fstp
add
dec
inc
pop
ror
push
push
ss
add
cmps
sub
cdq
jo
mov
cmp
mov
cwde
or
or
jecxz
scas
les
or
and
push
daa
(bad)
add
xchg
ja
dec
retf
rcr
fisub
out
sbb
cmp
mov
xor
mov
fstp
aam
xor
ja
dec
jmp
mov
scas
push
jno
in
sub
sbb
adc
cmp
sbb
pop
xchg
xchg
sbb
cmp
(bad)
push
jl
xor
(bad)
lock
repz
into
pop
call
imul
shl
and
sub
pop
dec
xor
sbb
scas
shr
enter
ja
add
fst
add
cmp
test
and
mov
mov
pop
jo
popf
mov
lahf
mov
adc
sub
or
aam
je
add
sbb
js
scas
ins
lea
scas
ror
dec
push
aad
xor
scas
fstp
jns
and
jno
(bad)
cdq
and
xchg
add
fcomip
inc
daa
or
mov
push
add
jmp
std
test
out
inc
mov
dec
xchg
cmp
add
or
icebp
popa
sbb
sub
sahf
jno
dec
dec
call
es
xor
xor
cmp
or
sbb
ja
out
out
ret
mov
out
cwde
cmp
sub
sub
leave
rol
fldlg2
lea
xor
das
ret
and
sbb
loope
dec
inc
jg
dec
jmp
adc
or
inc
test
jno
out
push
(bad)
push
adc
mov
jmp
cs
mov
push
in
and
dec
sbb
cdq
add
sub
adc
push
cdq
and
jecxz
and
xor
scas
popa
mov
cmp
stos
push
scas
rcr
add
cdq
sti
and
stos
push
push
mov
imul
adc
in
int
add
(bad)
jno
xor
push
dec
stos
data16
mov
test
jns
cdq
(bad)
lahf
adc
sub
cwde
std
cmp
or
mov
push
or
loope
adc
outs
std
mov
inc
push
loope
ds
cdq
sbb
mov
addr16
sub
aad
hlt
dec
or
pop
repnz
or
push
faddp
pusha
inc
pop
retf
jno
call
mov
cmp
imul
lods
das
or
rol
ja
call
mov
mov
pop
gs
ret
data16
data16
xchg
cmp
sahf
inc
pop
lods
mov
mov
int
fcomp
test
repz
ds
fidiv
push
cmp
push
sahf
or
test
cmps
sub
dec
mov
shl
adc
push
mov
jle
scas
push
ins
xchg
das
jle
xor
or
or
gs
cli
aam
add
push
call
mov
jle
pushf
outs
(bad)
nop
fmul
add
xchg
adc
cwde
or
das
xor
mov
ds
in
push
mov
jmp
adc
iret
outs
push
sbb
inc
cwde
cmc
pop
sbb
cld
int3
out
xor
cmp
sahf
jno
jecxz
sub
bound
jno
ss
retf
jmp
and
mov
lods
das
push
arpl
push
or
inc
nop
lss
push
out
and
ds
popf
mov
adc
push
into
out
cmp
lds
mov
cmp
out
shl
jo
gs
xlat
test
adc
shl
data16
bound
dec
sub
scas
aaa
add
(bad)
pop
(bad)
nop
fdiv
outs
inc
in
push
pop
out
test
cmp
mov
lods
mov
jnp
dec
mov
scas
pop
std
aaa
fidiv
adc
out
movs
pop
in
aad
ja
out
out
ret
mov
in
pusha
jmp
xacquire
cs
cmc
dec
sahf
test
fidiv
imul
jle
cmps
rcr
pop
xchg
add
or
xchg
jmp
aam
retf
rcr
je
jl
inc
sbb
cmp
cwde
mov
pmuludq
xchg
inc
je
jecxz
scas
xchg
jmp
test
sub
gs
pusha
lea
or
iret
dec
mov
pop
inc
push
out
mov
mul
lods
sahf
test
(bad)
sub
frstor
pop
ins
cli
jb
add
push
dec
push
aas
xor
ins
dec
(bad)
in
jle
pushf
mov
stc
lahf
repnz
xchg
mov
jae
sbb
lds
cmp
push
sub
xchg
adc
push
lds
xchg
push
rcl
push
cs
mov
jp
xor
adc
rcl
data16
inc
stos
push
dec
jecxz
dec
push
and
dec
pop
add
sbb
popf
sub
pop
pusha
loopne
xor
add
sbb
add
adc
xor
xchg
pop
cdq
pop
jmp
repnz
shl
adc
nop
mov
sub
inc
or
int3
stos
mov
pop
data16
bound
(bad)
or
jne
pushf
xor
arpl
fucomip
in
cmp
test
test
jmp
xor
mov
mov
ins
or
arpl
ret
dec
enter
mov
dec
je
sub
leave
ror
pop
inc
jge
inc
xchg
jb
rol
shl
outs
jnp
mov
out
cmp
ret
push
pop
xchg
sub
and
adc
or
xchg
scas
les
mov
push
sbb
stos
neg
jmp
add
movs
ret
inc
daa
add
sub
fisub
xor
push
hlt
in
movs
pop
add
fs
scas
mov
or
sbb
or
sub
std
scas
mov
xor
je
dec
(bad)
mov
sub
add
call
adc
sub
jl
mov
inc
jl
loop
sub
pxor
pusha
push
or
arpl
adc
push
or
bound
cli
inc
test
shl
test
or
mov
mov
xor
pushf
push
sbb
dec
mov
pushf
pop
inc
(bad)
dec
ret
mov
push
cmc
mov
iret
ja
fidiv
imul
dec
loope
(bad)
sahf
into
pushf
xchg
mov
lds
and
mov
or
jno
sub
retf
lds
sahf
into
stc
les
and
jbe
jecxz
cmp
(bad)
aam
inc
adc
(bad)
dec
out
dec
mov
rcl
xchg
sti
xor
(bad)
pushf
xor
sbb
xchg
and
pop
sub
aam
mov
cmp
das
cmp
sbb
test
pop
cmp
fsubp
xor
test
adc
inc
cmp
xchg
lahf
(bad)
fs
adc
ror
fwait
xor
add
xchg
add
or
lea
xchg
movs
xchg
mov
fstp
stos
nop
jmp
out
mov
cmps
adc
or
popa
and
lea
cmp
pushf
xor
test
cmp
mov
(bad)
mov
sbb
cdq
daa
push
jmp
xor
jle
div
push
pushf
mov
mov
jb
sahf
pop
into
(bad)
sub
sub
adc
push
push
ret
cmp
inc
jo
movs
ror
ds
xor
shl
popa
fucom
xor
jns
test
shl
sar
es
mov
hlt
add
cmp
push
push
dec
jne
and
xor
ror
adc
mov
pop
and
jl
sub
in
jp
(bad)
mov
sub
jb
sbb
cmp
call
stos
popa
jmp
mov
rcr
scas
data16
adc
sub
cwde
adc
pop
lea
push
fdiv
xchg
call
test
fistp
retf
xor
or
adc
cwde
or
jmp
or
sbb
pop
xchg
mov
xchg
imul
mov
rcr
in
sbb
inc
or
and
cwde
sub
(bad)
outs
pop
pop
in
lds
fild
outs
or
sahf
jno
inc
arpl
or
mov
pushf
mov
sub
daa
jle
jmp
xor
movs
jmp
push
faddp
add
mov
xchg
repz
fnstsw
pop
sbb
sahf
and
mov
clc
lahf
mov
xor
imul
or
push
movd
std
(bad)
xor
jge
dec
imul
out
jnp
adc
in
xor
push
mov
mov
pop
mov
int
xchg
in
or
arpl
cmp
fdiv
or
(bad)
sub
sbb
push
leave
out
xchg
sbb
cdq
sbb
inc
daa
push
or
arpl
cli
into
out
cmps
mov
in
in
sub
int
adc
ret
data16
and
inc
dec
xchg
ss
adc
ins
pushf
call
inc
adc
jg
lods
pusha
fcomp
aad
test
or
and
jmp
pop
dec
daa
lea
sub
mov
pop
in
in
ret
xor
push
mov
mov
fisttp
pop
js
xor
sbb
jmp
xchg
add
add
and
cmp
pop
into
enter
out
inc
adc
rcl
add
popa
and
je
jno
retf
leave
out
dec
xchg
lock
xchg
and
outs
sub
pushf
dec
adc
and
jge
movs
and
retf
lds
je
(bad)
scas
retf
xchg
neg
daa
inc
add
repz
aaa
outs
xchg
call
popa
dec
push
cmps
jl
push
add
fisubr
test
sub
lea
add
jne
fcom
es
pusha
std
hlt
in
xor
or
sahf
test
jmp
or
test
or
mov
dec
imul
fdiv
jbe
mov
movs
push
retf
outs
and
xlat
(bad)
jle
sti
popf
push
dec
(bad)
std
xchg
sahf
fimul
cmps
fwait
cmp
sahf
cmp
(bad)
fstp
pop
dec
in
xor
push
int3
ins
mov
jl
adc
fdiv
or
jge
es
mov
loope
pop
mov
mov
jbe
scas
xchg
add
pop
sbb
stos
cmp
jl
outs
or
mov
sub
sbb
pusha
out
xchg
data16
pop
into
and
sbb
lods
in
or
rol
aad
stc
scas
jmp
sahf
and
in
inc
data16
xchg
out
inc
cdq
cmp
cmp
add
inc
sbb
push
jo
popa
cmp
push
(bad)
mov
(bad)
mov
(bad)
shl
adc
je
mov
in
push
mov
mov
xor
fsubr
and
aad
aam
mov
jmp
mul
je
and
rcr
adc
push
add
shl
rcr
cmp
(bad)
std
outs
out
out
cmp
and
fsubr
cld
mov
ins
xchg
sbb
jmp
push
or
sahf
fiadd
sub
movs
ja
pusha
mov
outs
out
in
cmp
and
iret
push
ins
sbb
dec
mov
inc
pop
fcmove
out
cmps
stos
ret
cmp
call
ss
xchg
retf
leave
stc
imul
or
pop
pop
cmp
fst
inc
sbb
jg
cmc
sahf
add
push
stc
fimul
push
rcl
jns
mov
cli
pop
ins
scas
pop
inc
call
and
jle
xor
mov
cmps
fptan
or
ja
xchg
sub
push
rcr
je
jl
dec
or
addr16
xchg
jle
mov
or
cs
in
fnstsw
sub
push
or
scas
std
inc
fcomp
dec
retf
jae
mov
xor
inc
mov
adc
mov
movs
cmps
shl
xlat
xor
mov
pushf
push
clc
sar
mov
mov
push
bound
test
jmp
adc
clc
xchg
xchg
sub
sub
lea
mov
arpl
aam
mov
stos
neg
bnd
imul
imul
cld
adc
jo
andps
gs
dec
addr16
rol
mov
cmp
mov
xchg
xchg
cmp
nop
jmp
xchg
lea
call
fidivr
mov
mov
es
cmp
mov
nop
std
popa
pop
out
mov
xchg
not
cli
add
popa
mov
mov
in
adc
mov
pop
je
lods
and
xor
lea
sbb
ss
pop
ja
inc
inc
dec
outs
mov
xchg
xor
test
push
push
sbb
xchg
sub
sub
add
aaa
test
imul
popf
sub
xchg
out
add
mov
fisubr
mov
cmc
push
push
aad
je
xor
xchg
and
in
jp
fcom
jp
adc
daa
test
add
sbb
jp
jae
mov
std
test
test
xchg
sbb
and
add
popf
ins
dec
jecxz
inc
adc
inc
pop
jbe
out
cmps
add
ins
(bad)
popa
mov
aam
mov
mov
add
fisub
into
retf
add
movs
add
xor
stos
idiv
retf
ficomp
fidiv
xchg
scas
mov
jne
addr16
xor
jle
push
das
mov
mov
arpl
cmp
int3
out
mov
sub
retfw
ja
test
scas
xlat
pop
fdivp
push
xchg
in
leave
xchg
mov
cdq
dec
mov
hlt
sbb
loop
mov
xlat
jp
addr16
adc
mov
sahf
mov
repz
fdivrp
in
mov
jno
bound
call
sub
cmp
sbb
popa
mov
(bad)
jns
sub
push
icebp
or
adc
jmp
sar
(bad)
in
xchg
xor
leave
inc
push
inc
dec
jmp
iret
fdivr
shr
data16
sub
dec
das
test
fdiv
bound
pop
mov
arpl
xor
push
sbb
stc
(bad)
ficom
popa
sub
rcl
test
sbb
xchg
arpl
jle
sbb
daa
ins
xchg
repz
cmp
cmp
clc
stos
not
mov
mov
inc
cmps
adc
cli
xchg
dec
cwde
xor
out
cmp
jae
adc
sbb
dec
hlt
and
dec
or
cmp
and
mov
sub
xor
mov
rol
ds
dec
das
mov
icebp
daa
push
inc
sbb
jg
pushf
mov
cdq
aaa
ins
repnz
push
mov
aam
and
pop
rol
and
cmp
add
(bad)
rsqrtps
jle
xchg
mov
in
mov
push
or
fidiv
ja
mov
aad
(bad)
jge
jne
out
cmp
xor
inc
(bad)
sbb
out
popa
int
push
gs
sti
jp
imul
cmp
int3
mov
cmps
adc
jo
ss
inc
mov
and
aas
lea
lahf
xchg
ret
xor
stos
jl
cmp
xchg
aaa
jno
cmp
push
xor
out
cdq
jo
jae
dec
(bad)
clc
(bad)
xchg
das
adc
mov
popa
push
or
arpl
neg
xchg
retf
gs
push
cs
mov
mov
rcl
lds
(bad)
je
hlt
xor
test
and
jecxz
mov
outs
popf
pop
pop
aaa
dec
rcl
cdq
data16
pop
test
pop
arpl
and
dec
jmp
push
jne
jns
xor
and
or
mul
pushf
cmps
xlat
pop
repnz
or
leave
popf
fdiv
cmp
mov
push
leave
out
dec
pop
xchg
push
and
mov
dec
loop
hlt
dec
imul
xor
sub
bound
mov
push
icebp
inc
(bad)
xchg
es
rcl
mov
dec
(bad)
in
or
jns
ins
bound
(bad)
jmp
cmps
adc
js
cdq
lock
jne
shl
mov
cmp
jmp
inc
jo
sbb
cmc
mov
dec
xchg
push
xor
sub
pop
and
jne
xchg
mov
jle
push
aaa
addr16
outs
imul
mov
out
add
scas
mov
cmc
mov
call
add
rcr
xchg
jo
inc
or
stos
dec
std
jle
sahf
jno
(bad)
cli
sahf
neg
mov
jmp
and
jle
sbb
das
lods
out
sbb
int
les
test
push
aaa
lods
std
(bad)
popa
mov
push
lock
xchg
adc
xchg
mov
(bad)
mov
jecxz
dec
and
pop
mov
add
add
jge
adc
mov
inc
cmps
adc
cli
lock
push
cmc
sub
xchg
fisubr
(bad)
add
dec
das
push
out
sbb
or
dec
retf
fsubr
scas
shr
fadd
xchg
hlt
cmp
adc
cmp
push
sub
mov
pop
popa
adc
(bad)
aam
mov
cmp
xchg
in
fistp
icebp
fiadd
adc
dec
xchg
cmc
xchg
aaa
adc
loope
sub
jne
jb
and
jnp
mov
add
inc
sar
or
in
nop
mov
and
pusha
jae
dec
(bad)
clc
pop
push
jecxz
cmp
dec
cmc
add
sbb
mov
cmp
je
movs
fadd
fcomp
adc
and
pusha
jae
dec
(bad)
clc
(bad)
mov
adc
hlt
mov
mov
test
retf
adc
xor
stc
shl
or
mov
cmps
addr16
push
in
out
mov
fisubr
fbld
xor
add
adc
inc
int3
sbb
call
pop
or
lds
mov
aam
mov
and
pop
cwde
mov
mov
cmp
(bad)
out
jle
scas
mov
in
mov
jmp
out
sahf
cmp
arpl
inc
arpl
jno
cld
leave
out
dec
mov
add
jb
movs
dec
lea
xor
adc
pushf
inc
xchg
std
pusha
icebp
or
stos
dec
xchg
test
popa
cli
cmp
(bad)
ins
cwde
xor
out
cmp
xor
in
cmp
jne
loopne
mov
xor
mov
push
sbb
cmp
xchg
outs
int
fdiv
gs
(bad)
cli
into
jns
sar
push
inc
pop
mov
or
pop
cmp
inc
fcom
dec
mov
icebp
xchg
sahf
fistp
sub
je
push
bound
bound
jmp
cmp
movs
sbb
xor
adc
mov
adc
aam
mov
outs
sub
add
sbb
pop
lock
mov
and
sbb
pop
mov
cwde
pop
out
mov
push
push
mov
scas
scas
popa
mov
add
out
lds
je
sti
adc
(bad)
enter
jae
(bad)
in
lods
cs
pop
ja
mov
std
pusha
repnz
mov
(bad)
and
rcr
jnp
(bad)
dec
and
aad
aaa
inc
daa
cmp
sbb
push
ret
xchg
not
xchg
dec
aam
outs
ja
paddusw
fisubr
sti
jecxz
out
xchg
pushfw
fsub
inc
stos
aam
mov
cmp
dec
add
sbb
mov
cmp
je
(bad)
fdivr
cwde
nop
adc
scas
mov
adc
retf
add
sar
data16
sbb
pop
xchg
out
sub
int3
dec
rol
pop
fnstcw
sahf
or
cmp
jae
sub
fcomp
adc
jne
fdivr
mov
jno
cmc
in
lahf
adc
jge
not
test
dec
aam
push
fist
aad
je
std
outs
ds
cmp
add
push
lea
inc
sbb
or
int3
jb
ret
inc
pop
into
in
xchg
xchg
mov
call
adc
xchg
or
mov
jle
mov
retf
jb
scas
xchg
add
out
mov
mov
fist
sub
je
fmul
gs
cmp
xchg
sbb
pop
or
sti
(bad)
fcomip
in
jb
xor
cwde
and
mov
jbe
jno
adc
inc
cmp
jge
pusha
sub
mov
sbb
inc
aam
xor
mov
cpuid
fistp
and
mov
mov
sub
fnstcw
or
daa
hlt
in
pop
das
std
int3
icebp
fild
stos
dec
jg
fdiv
sub
xabort
shl
ss
cmps
xchg
jne
xor
inc
jge
or
fstp
cs
pop
ret
(bad)
push
add
jp
xchg
sub
(bad)
shr
push
jmp
(bad)
xchg
lods
mov
or
inc
pop
in
push
inc
mov
dec
jmp
sub
retf
cmps
adc
(bad)
adc
shl
dec
mov
jle
shl
sbb
or
xchg
inc
xchg
idiv
mov
add
test
test
pop
jnp
push
pop
sub
cmps
add
fisubr
add
push
xor
sbb
jmp
test
sub
(bad)
fstp
sub
aad
ds
inc
jmp
pushf
mov
int
addr16
iret
mov
dec
dec
xchg
gs
arpl
aam
xor
stos
neg
cli
sbb
aam
sub
stc
shr
fmul
mov
jmp
mov
popa
sbb
inc
arpl
sub
push
or
aaa
pop
out
jle
ficom
and
mov
xchg
dec
mov
lea
enter
sbb
rcl
inc
or
pop
cmp
mov
pop
test
ja
sub
jno
fisubr
int3
xchg
mov
xchg
hlt
add
popf
dec
and
or
out
xor
or
scas
nop
aaa
out
dec
mov
outs
sub
push
jo
mov
mov
lea
cld
and
(bad)
shl
mov
mov
sbb
sahf
cmp
daa
xchg
outs
ja
xchg
cmp
sub
jns
test
stc
sbb
out
cmp
mov
in
or
cdq
enter
pop
mov
fld
xor
jle
mov
push
push
rcr
jns
adc
iret
jb
ss
fimul
call
or
arpl
daa
xor
pop
(bad)
popa
mov
xchg
push
xor
sub
data16
ss
mov
ins
push
and
dec
and
outs
jmp
push
mov
stc
(bad)
jmp
cmps
ds
jbe
mov
ss
xchg
mov
ds
mov
leave
mov
arpl
aam
sbb
mov
pop
fcom
add
jae
adc
rcl
jns
xchg
div
xor
pop
sub
mov
in
int
push
pop
sbb
mov
xchg
cwde
mov
cld
test
clc
out
sub
outs
clc
pusha
stc
dec
add
out
test
in
dec
sbb
ret
mov
cld
cmp
xchg
fmul
push
mov
xchg
mov
ret
push
out
movs
bound
imul
mov
and
cmp
xchg
pusha
mov
in
push
sub
in
push
mov
jne
mov
inc
daa
jle
(bad)
outs
dec
test
pop
xchg
daa
jmp
stos
not
js
pusha
mov
cmps
call
jmp
sbb
xchg
mov
gs
addr16
das
add
add
and
push
jae
ret
push
push
and
lods
lods
cmp
aad
add
push
out
ror
out
jmp
bound
xor
sbb
hlt
outs
inc
sar
ds
test
pop
adc
dec
test
push
mov
shr
popa
jnp
pop
mov
jmp
fidivr
ror
sbb
xchg
fbld
in
push
adc
mov
or
mov
jmp
jns
push
pop
in
mov
sbb
das
push
mov
push
cli
int3
ins
xchg
int3
xchg
shl
dec
in
push
pop
pop
mov
je
retf
std
test
jns
imul
ins
fbld
call
xchg
es
push
or
sahf
jno
cmc
pop
and
fwait
xchg
xchg
retf
mov
ret
push
sbb
cmp
mov
arpl
xchg
repnz
repnz
xor
or
jne
test
ud1
pop
int3
arpl
push
jno
adc
sub
and
mov
xor
shl
loopne
je
cdq
fdivrp
dec
jg
xor
hlt
fisubr
mov
xchg
popf
stos
test
cmp
(bad)
cli
pop
shr
stc
(bad)
popa
test
test
push
adc
xchg
mov
(bad)
adc
dec
cwde
mov
test
add
mov
hlt
outs
inc
rcl
sbb
cmp
fidivr
lods
test
call
cmp
imul
sub
iret
ins
gs
pop
iret
adc
cld
int3
sbb
stc
(bad)
popa
add
int
adc
ret
data16
outs
neg
inc
mov
addr16
stos
and
xchg
daa
pop
sbb
cmp
mov
ds
jno
pusha
fsubr
loop
mov
test
push
clc
mov
cmp
jb
mov
arpl
repnz
popf
sub
cmps
adc
add
xchg
mov
mov
outs
rol
add
ins
mov
shl
out
xchg
leave
push
xor
out
mov
(bad)
adc
and
lea
add
jg
add
cmp
xchg
imul
mov
aam
lds
lahf
push
mov
stc
dec
sub
jns
pop
test
jo
adc
xchg
ror
ins
and
mov
xchg
add
aaa
(bad)
out
cmp
or
pop
push
jno
xchg
xor
pop
sahf
mov
push
dec
test
add
(bad)
sub
hlt
adc
in
gs
pop
add
xor
ror
repnz
loope
add
repnz
retf
retf
sbb
mov
int3
mov
not
arpl
push
sbb
cmps
jo
cs
inc
stos
psubusb
xchg
inc
jbe
cmp
(bad)
xor
xor
push
pop
and
jae
clc
lods
jp
nop
jl
daa
jle
jmp
xlat
jle
or
xor
add
cld
mov
aad
outs
nop
mov
sub
push
adc
mov
loope
inc
daa
cmp
rol
std
int3
popf
push
rcr
adc
(bad)
fld
loopne
adc
mov
in
test
push
fistp
aaa
pop
ret
mov
imul
pop
iret
icebp
push
fcom
mov
(bad)
mov
sub
movs
jmp
adc
mov
lock
jecxz
(bad)
or
and
arpl
ret
stos
not
rol
popa
add
sbb
test
movs
push
aam
jns
icebp
cmp
mov
or
xor
cmps
cmp
dec
adc
mov
stos
not
sub
xor
pop
xchg
adc
cwde
xor
cmp
movs
pop
cmps
jb
clc
xor
hlt
sbb
cmp
loope
sub
push
sbb
add
sub
cmp
push
jo
fidivr
mov
test
add
sbb
pop
int
stos
test
fidiv
xchg
call
jmp
cwde
adc
mov
pop
dec
fidiv
sbb
or
dec
cwde
mov
xchg
mov
aam
out
sub
(bad)
adc
xchg
add
and
jge
sbb
pop
call
std
mov
iret
rol
popa
add
ror
sub
js
cdq
and
inc
dec
fisttp
popf
xchg
dec
das
sti
(bad)
hlt
in
or
xchg
addr16
jb
mov
cmc
sub
shr
fmul
mov
inc
jge
mov
sbb
hlt
outs
fwait
and
push
and
iret
shr
cmp
cli
outs
popa
icebp
pop
cmp
ret
push
mov
(bad)
jle
or
mov
mov
ret
pop
icebp
inc
cmp
into
adc
and
xchg
adc
sbb
xor
(bad)
push
adc
(bad)
dec
cmp
sbb
icebp
hlt
mov
movs
lahf
aad
sub
(bad)
jmp
adc
outs
pop
fisub
xor
(bad)
or
and
arpl
push
mov
dec
inc
inc
ret
xchg
loopne
push
xor
int3
jae
(bad)
adc
xchg
test
xor
add
xchg
sbb
pushf
xor
pop
fld
daa
pusha
mov
dec
je
sub
leave
ror
mov
clc
mov
jle
mov
ret
hlt
xchg
out
cs
int3
dec
ret
out
dec
xchg
aas
pusha
mov
je
outs
sub
leave
rol
fisubr
push
xor
or
arpl
daa
inc
xor
push
jle
mov
pop
out
mov
jno
ss
xchg
(bad)
sbb
mov
jbe
and
xchg
repnz
(bad)
popa
mov
jge
xor
cdq
lods
cdq
jo
icebp
push
daa
dec
jne
addr16
add
or
pop
lds
fwait
xor
std
arpl
push
add
inc
xchg
stc
dec
jmp
loopne
push
xor
ret
xor
fisubr
mov
clc
test
icebp
sbb
xchg
popf
pop
xchg
in
or
out
cmp
ror
movs
adc
sbb
jae
xchg
add
es
and
das
imul
mov
dec
xchg
test
gs
push
or
scas
xor
xor
push
adc
push
pop
dec
jge
stos
hlt
mov
xchg
(bad)
in
jecxz
dec
int
mov
dec
daa
jb
dec
jmp
and
repnz
aad
xchg
or
inc
xchg
mov
mov
push
cs
dec
call
adc
movs
cmp
adc
(bad)
fnstcw
and
push
jmp
jnp
out
cs
lock
lea
das
movs
sub
in
mov
add
and
(bad)
popa
ss
mov
rcl
xchg
and
ficomp
lds
mov
aam
bswap
sub
xchg
add
sbb
jae
adc
push
add
stos
push
cwde
mov
xchg
std
mov
xor
or
test
mov
mov
cwde
pop
out
mov
push
jbe
xor
stc
(bad)
xor
(bad)
fldcw
movs
mov
jns
adc
(bad)
addr16
xor
mov
pshufw
xor
sar
mov
not
adc
jno
popa
aad
xor
js
jno
out
leave
out
lock
cld
sahf
inc
gs
mov
mov
xchg
jmp
aam
bound
or
scas
nop
aaa
out
dec
mov
outs
sub
push
jo
mov
mov
lea
cld
and
lea
popa
int
mov
mov
sbb
sahf
cmp
inc
fwait
outs
ja
xchg
cmp
jmp
test
stc
jp
mov
mov
in
or
cdq
enter
pop
mov
fld
xor
mov
or
push
push
repz
mov
iret
jbe
or
fimul
call
or
arpl
daa
xor
outs
(bad)
popa
mov
xchg
aad
or
shl
jo
fidiv
and
ja
push
(bad)
pop
jg
ror
sbb
xchg
not
aad
and
retf
test
jbe
retf
jno
ss
inc
dec
std
fisub
adc
dec
cmp
jmp
push
xor
sbb
popa
mov
mov
push
lea
jns
adc
xchg
mov
loop
dec
mov
dec
pusha
cmc
sbb
int
push
push
jns
push
mov
int3
imul
leave
out
adc
xor
inc
xor
jecxz
inc
add
or
out
dec
lock
sbb
in
scas
sahf
mov
pop
out
jge
jns
fst
push
out
and
lahf
and
dec
scas
rcl
adc
xor
out
daa
shl
jge
popa
mov
pop
out
sub
push
push
and
jge
ja
jb
or
fadd
ins
mov
popa
jne
jmp
test
(bad)
pop
inc
repnz
mov
ret
xor
jb
fadd
popf
sbb
cmc
imul
jbe
not
fucom
jmp
inc
mov
cdq
and
out
ret
mov
mov
shl
(bad)
out
or
enter
mov
mov
xchg
leave
add
imul
mov
and
add
leave
push
(bad)
loope
(bad)
imul
iret
jmp
mov
ret
int
push
or
xchg
add
outs
ja
jae
mov
cs
aam
shr
call
into
retf
add
sbb
vcmpss
xcrypt-ctr
cmps
sbb
push
xchg
mov
sub
mov
scas
push
fisub
xor
outs
push
jl
ror
sbb
int3
aam
mov
imul
mov
hlt
ja
fs
rcr
mov
push
fbld
inc
adc
loope
sbb
inc
test
or
ins
push
mov
xor
pop
sub
int
arpl
and
inc
in
cmp
dec
cmps
fwait
or
stos
hlt
mov
mov
in
jecxz
inc
int
mov
fsubrp
pop
dec
mov
stc
add
mov
mov
push
sub
adc
out
cmc
daa
cwde
adc
das
pop
icebp
xchg
pop
arpl
ins
lahf
cmps
mov
stc
lods
push
(bad)
jns
jmp
jmp
push
cmp
sbb
dec
sbb
ret
xchg
adc
sahf
xor
jmp
jmp
mov
mov
je
inc
mov
jns
cdq
enter
ret
and
jle
sbb
inc
cmp
xchg
inc
je
dec
xchg
adc
fcomi
add
mov
jo
mov
and
cmp
(bad)
std
sbb
mov
xchg
dec
loop
adc
xchg
mov
xchg
mov
mov
inc
sbb
push
cli
lss
and
imul
jmp
pop
stc
(bad)
in
or
or
mov
test
leave
cwde
lahf
dec
inc
loope
jb
cmp
mov
mov
aam
add
stos
neg
mov
mov
jno
sbb
add
enter
jns
pop
jg
fist
ret
push
sahf
inc
ins
into
das
or
mov
out
fild
fld
xor
mov
pop
pop
out
cmps
outs
pop
xchg
js
bound
xor
jb
dec
inc
and
add
pop
jmp
push
or
repz
sub
mov
xchg
and
mov
ret
loope
(bad)
imul
stos
aad
rcr
xor
aam
xor
(bad)
mov
ja
fidiv
repnz
lock
xchg
rcl
fisub
lods
pop
mov
rcr
adc
cdq
lock
xchg
jl
add
test
popa
mov
aam
mov
fsub
data16
bound
xlat
xor
cmc
push
fcomi
ins
in
or
daa
out
aam
mov
mov
fcomp
pop
repz
retf
sub
add
inc
popf
mov
pop
cdq
loope
sbb
xchg
das
add
fild
xor
mov
dec
aad
and
jmp
sub
push
or
mov
dec
xchg
cmp
and
push
or
dec
xchg
push
(bad)
adc
xor
ins
aam
adc
push
adc
push
pop
addr16
lahf
jae
jecxz
das
pop
lock
xor
mov
movs
stos
ret
xor
xchg
in
retf
icebp
mov
test
xchg
and
inc
pop
into
jmp
cmp
jg
pushf
mov
std
inc
cmp
jmp
cmc
sahf
jno
lods
mov
rcl
or
xchg
out
cmp
add
jae
add
inc
cs
xchg
daa
jmp
push
cmps
pop
cmp
fst
jmp
or
jl
cld
dec
xchg
hlt
ror
out
cmp
sub
push
test
xchg
stc
jmp
cmp
xor
(bad)
lock
add
mov
add
fldenv
sub
(bad)
std
sahf
out
gs
fimul
stc
and
jmp
mov
jmp
loopne
mov
pop
out
sub
jo
and
cmp
jb
push
and
sub
iret
xor
adc
(bad)
or
retf
cmps
adc
scas
mov
popa
pushf
xchg
add
jmp
mov
mov
xchg
(bad)
pop
lds
aas
test
pop
and
rcl
cdq
jo
xchg
adc
push
scas
mov
lea
cmc
in
xchg
(bad)
retf
lock
and
aad
adc
sbb
test
sub
adc
ret
push
jle
lock
fdivr
rol
(bad)
sbb
hlt
nop
test
std
int3
sub
popf
out
mov
xchg
sub
aaa
cmps
adc
mov
in
ret
movs
jecxz
cdq
daa
cmp
xor
xlat
sbb
jmp
test
jge
xchg
mov
add
out
sub
pop
lea
sub
loop
dec
mov
dec
push
loope
in
jne
add
sbb
dec
mov
je
xchg
jo
ja
leave
xor
mov
cmp
cld
lahf
mov
scas
mov
and
xchg
ds
inc
mov
(bad)
push
mov
adc
mov
pop
out
sub
jo
mov
fisub
lods
pop
sahf
jb
ret
mov
imul
jae
sbb
stc
(bad)
loop
mov
or
aad
sar
into
ins
sbb
pop
adc
lock
test
sbb
dec
(bad)
fs
cmp
or
jbe
test
(bad)
and
fmul
inc
xchg
cmp
adc
mov
mov
hlt
outs
lahf
jne
add
sbb
jmp
dec
sbb
push
int
push
xor
out
lds
jne
(bad)
cmp
(bad)
into
push
ins
lea
pop
xchg
out
sub
int3
dec
push
sub
add
retf
push
jg
(bad)
adc
push
sbb
xor
scas
dec
out
dec
cmp
int3
out
or
dec
sahf
cmp
aaa
shr
sub
int
push
rcr
mov
pop
retf
(bad)
pop
pop
xchg
mov
daa
cmp
inc
pushf
xor
retf
call
mov
fstp
aad
fiadd
das
fcom
or
jge
in
cmp
pop
dec
loop
xor
ins
add
jno
dec
fist
mov
xchg
popf
jno
ss
div
cwde
or
dec
(bad)
mov
lds
inc
fs
xor
stos
mov
(bad)
mov
fwait
ja
aam
dec
aad
push
imul
jl
xchg
mov
or
les
pop
dec
loop
inc
push
jmp
std
inc
adc
xchg
ja
stos
mov
sub
xchg
je
loopne
jmp
and
or
sbb
hlt
retf
fild
jmp
ins
loopne
push
sbb
mov
fs
adc
xor
in
mov
mov
aam
cmp
cs
mov
cld
int3
call
mov
mov
sub
(bad)
adc
sbb
xchg
xor
xchg
xchg
pop
out
(bad)
int
add
dec
cld
jl
pop
dec
(bad)
cmp
cmps
in
outs
rcl
jns
cdq
jg
mov
push
cmp
or
sbb
(bad)
ficom
mov
ret
aam
aam
adc
cmp
xchg
dec
stos
fs
xchg
adc
fs
call
stos
add
sbb
cmp
xlat
xchg
cmp
mov
div
add
pop
adc
aad
pop
out
inc
shl
mov
cmp
mov
sti
push
adc
xor
pushf
push
pop
mov
pop
movs
(bad)
ins
in
sbb
xchg
aaa
add
add
adc
sahf
bound
dec
xor
fpatan
jp
push
out
jle
adc
adc
aad
into
jne
sub
xchg
xchg
push
inc
daa
cmp
ror
sbb
mov
int
stos
neg
repnz
jae
jo
ja
mov
pop
out
jmp
icebp
push
punpckhbw
out
or
xor
or
arpl
daa
inc
and
push
jle
mov
pop
out
mov
jo
ss
out
jne
jmp
dec
das
cld
int
sbb
mov
mov
fptan
jmp
sbb
push
test
outs
lea
and
mov
mov
adc
retf
(bad)
in
xor
sub
mov
movs
jb
mov
stc
xchg
ss
add
imul
xchg
adc
in
jnp
jne
addr16
mov
mov
addr16
aam
fistp
cld
or
outs
or
mov
shr
push
fdivr
mov
mov
cmp
out
in
inc
xchg
(bad)
mov
push
clc
rcl
stc
(bad)
pop
dec
sahf
push
js
xor
hlt
into
cmp
data16
aas
xchg
mov
jle
jecxz
das
jecxz
hlt
in
mov
retf
out
jae
mov
stc
std
cmps
adc
rcr
leave
std
outs
fsubrp
cmp
and
fadd
mov
xor
cs
mov
ret
icebp
sbb
jno
jo
sar
adc
(bad)
adc
sar
cmp
cmp
cs
in
xor
outs
out
jl
xor
clc
mov
movd
push
xor
es
sub
adc
out
jnp
jne
addr16
mov
mov
pop
int
push
and
stos
or
imul
mov
test
pushf
imul
add
cmp
add
cmc
jno
or
xlat
cs
dec
xor
pop
inc
retf
dec
daa
jb
dec
jmp
ja
xor
mov
adc
adc
or
xchg
sbb
hlt
retf
fild
jmp
ins
loopne
push
sbb
mov
add
adc
xor
in
mov
mov
enter
cs
mov
xlat
adc
mov
inc
xchg
mov
sub
pop
ds
mov
popf
(bad)
lahf
cmp
jne
cmp
pushf
xor
inc
pop
inc
cmc
fbstp
mov
pop
lahf
in
addr16
xor
cli
outs
popa
icebp
pop
mov
mov
sub
aad
inc
rol
in
xchg
cmp
dec
out
jae
mov
mov
mov
pmullw
cdq
jo
fisub
mov
inc
and
xchg
mov
jle
out
cdq
lock
pop
mov
fst
xchg
(bad)
in
add
mov
push
aad
(bad)
jb
ss
out
(bad)
sti
jge
daa
sar
lahf
push
or
jg
pushf
dec
adc
mov
test
push
cmp
fld
mov
mov
(bad)
jmp
out
dec
cs
cli
in
mov
dec
(bad)
pop
repz
hlt
int
and
loop
ss
mov
sub
dec
push
cmp
ret
push
ss
inc
stos
std
push
shl
pop
in
or
mov
mov
(bad)
mov
mov
and
bound
rcl
inc
ret
mov
jle
or
popa
(bad)
and
sbb
mov
xchg
mov
(bad)
fisttp
mov
test
and
shl
adc
xor
std
jecxz
out
inc
ds
fst
in
retf
icebp
fdiv
(bad)
rcr
icebp
xor
jmp
inc
xchg
adc
or
(bad)
pop
dec
mov
jmp
mov
stos
sbb
fdivp
mov
aad
add
push
sti
mov
sahf
inc
sbb
mov
ins
imul
push
fstp
(bad)
jmp
fadd
sub
push
repz
pop
mov
pop
jb
dec
inc
mov
mov
push
mov
mov
push
xor
repz
adc
test
push
popa
arpl
leave
call
jl
movs
outs
xchg
push
sbb
mov
push
(bad)
push
or
mov
int
adc
jno
data16
adc
adc
test
xchg
repnz
sahf
pop
dec
ds
in
add
and
shl
xchg
cli
push
cli
xchg
mov
and
fcom
stos
mov
xor
jmp
mov
xchg
mov
xchg
pop
jmp
stos
idiv
jno
lods
mov
or
ret
call
dec
and
iret
push
jno
mov
and
mov
sbb
out
sar
adc
jo
or
and
cmps
test
aad
scas
mov
scas
adc
clc
cs
cli
push
lea
jecxz
cmp
popf
xor
pop
cmp
mov
std
xchg
xor
pop
fnstsw
popf
rcl
es
jno
mov
fidiv
imul
dec
(bad)
mov
pop
xchg
push
add
stos
pop
test
adc
cdq
add
mov
shl
js
inc
adc
push
sub
addr16
jecxz
add
int
hlt
mov
dec
inc
scas
xchg
sahf
cli
and
sbb
sbb
jp
inc
mov
adc
push
out
aas
xchg
inc
jbe
lea
inc
and
adc
inc
retf
dec
ret
not
sbb
push
fidivr
xchg
and
(bad)
adc
xchg
cmp
add
mov
das
ror
sbb
push
aam
xor
(bad)
stos
dec
(bad)
icebp
cmp
jns
push
test
jecxz
ficom
pushf
push
aad
push
mov
sub
das
mov
mov
mov
add
jmp
inc
mov
push
xor
jns
fadd
xchg
mov
jge
daa
imul
mov
add
push
mov
xor
mov
and
mov
jno
ss
ss
(bad)
or
dec
das
or
or
out
mov
push
pop
adc
neg
xor
cmp
push
mov
ins
loop
dec
xor
jno
ss
jnp
jne
addr16
jno
ret
jb
inc
xchg
sbb
hlt
retf
push
ret
cmp
push
mov
scas
nop
aaa
add
jo
fidiv
sub
add
mov
nop
fsubr
sti
xchg
mov
sbb
cmp
jl
push
or
(bad)
xchg
mov
and
cmps
stos
shl
jbe
cmp
and
fadd
mov
hlt
xchg
es
cs
push
outs
or
mov
jge
cld
retf
fs
adc
out
mov
int
addr16
cmps
inc
mov
dec
(bad)
or
pop
in
inc
xchg
cli
mov
push
clc
rol
adc
sahf
or
push
xor
hlt
into
inc
and
push
ds
mov
jle
jecxz
das
inc
test
in
mov
retf
out
jae
mov
stc
inc
mov
mov
scas
mov
cli
inc
dec
out
xor
fdiv
mov
outs
xchg
sbb
sbb
sub
inc
push
xchg
or
cmps
retf
jno
mov
mov
jo
xchg
add
xchg
add
or
adc
xchg
loope
or
arpl
sbb
push
mov
scas
jl
lea
cmps
adc
push
sti
pusha
pushf
mov
mov
mov
or
retf
dec
xor
cli
jp
imul
push
cmp
jno
sbb
pop
test
out
aaa
adc
add
cli
jbe
iret
adc
retf
adc
int3
sub
dec
jge
(bad)
dec
daa
(bad)
loop
paddusw
mov
add
cmp
xchg
mov
adc
pop
es
ror
mov
fistp
jns
stos
pop
sbb
xchg
jp
test
push
mov
jmp
arpl
fidiv
lds
xor
and
arpl
mov
jbe
adc
dec
and
sub
jl
xor
rcl
jmp
cwde
xchg
int
fidivr
inc
or
ins
not
ror
jl
mov
stc
stos
div
ds
imul
xchg
mov
fidiv
push
iret
cmp
test
add
add
mov
jg
mov
movq
popa
call
loop
out
sub
enter
ret
or
lahf
vpmulhuw
add
cmp
mov
jbe
adc
(bad)
mov
lahf
dec
and
sub
xor
shr
jmp
cwde
xchg
int
jae
inc
inc
or
dec
not
loopne
or
fs
xor
push
dec
jle
(bad)
xchg
mov
fidiv
push
inc
(bad)
jns
(bad)
stc
scas
sub
hlt
add
mov
jg
mov
setl
(bad)
popa
call
mov
lock
pop
enter
ret
or
lahf
movs
lds
mov
jbe
adc
dec
and
sub
leave
push
xor
rcr
xchg
inc
inc
or
sub
or
add
dec
sub
sub
jecxz
mov
fidiv
push
pop
(bad)
jns
(bad)
stc
scas
loopne
or
jne
add
add
cmp
pop
dec
rcr
test
xor
mov
jno
sbb
jg
xor
sub
enter
ret
or
lahf
test
jge
xor
not
int
mov
adc
mov
lahf
dec
and
sub
addr16
jo
push
cwde
xchg
inc
inc
or
or
or
and
mov
ds
or
out
mov
fidiv
push
rcl
mov
stc
scas
shr
hlt
add
cmp
pop
dec
loopne
inc
movs
add
jg
mov
cvttps2pi
int
out
jnp
out
sub
enter
ret
or
lahf
gs
xor
in
arpl
mov
jbe
adc
mov
lahf
dec
and
sub
addr16
jo
push
cwde
xchg
mov
jge
inc
or
in
test
jl
mov
mov
xor
push
jmp
cld
sub
dec
push
mov
jns
(bad)
stc
scas
and
add
add
cmp
dec
mov
jg
mov
wbinvd
dec
(bad)
popa
call
lock
in
adc
push
mov
mov
ins
pushf
das
mov
push
nop
out
in
outs
jge
mov
fsub
out
dec
mov
sbb
adc
mov
push
jmp
arpl
stos
sub
sbb
adc
pop
xchg
ds
jo
mov
imul
(bad)
mov
mov
stc
ins
jmp
adc
and
(bad)
mov
imul
jo
pushf
fidiv
add
add
aaa
inc
dec
mov
jg
mov
bswap
out
(bad)
popa
call
repz
out
sub
enter
ret
or
lahf
xor
jb
mov
jbe
adc
repnz
lahf
dec
and
sub
addr16
jo
push
cwde
xchg
int
in
inc
inc
or
mov
or
mov
xor
ds
fwait
jle
cwde
xchg
mov
fidiv
push
xchg
scas
push
test
add
add
dec
aam
mov
jg
mov
shld
(bad)
popa
call
lods
out
out
sub
enter
ret
or
lahf
adc
jb
mov
mov
outs
push
in
and
stc
(bad)
jmp
clc
pop
rcl
loopne
jnp
data16
add
outs
or
outs
mov
sbb
repnz
sub
mov
faddp
addr16
(bad)
inc
add
cmps
mov
jns
div
retf
or
or
dec
adc
adc
mov
sbb
and
adc
sub
fnsave
mov
and
out
jg
sbb
std
xlat
cmp
(bad)
jmp
dec
(bad)
outs
sub
add
xchg
ins
jle
xchg
add
rcr
shl
inc
das
adc
call
sbb
stc
push
adc
pop
out
(bad)
pop
(bad)
add
dec
sti
jl
cmp
sbb
lea
frstor
aad
dec
xchg
hlt
cmc
xor
ret
pushf
jae
adc
jb
jmp
cmp
cs
pushf
xor
jmp
sbb
xchg
cmp
(bad)
retf
fstp
xchg
in
movs
rol
push
inc
xor
inc
stos
int3
mov
or
arpl
or
push
cmp
add
pusha
repz
retf
test
jbe
sub
ss
data16
dec
lea
cwde
leave
in
(bad)
fisubr
add
sbb
sbb
les
adc
and
inc
xchg
xchg
in
addr16
mov
mov
cmp
pushf
xor
(bad)
repnz
mov
adc
out
sub
js
arpl
xchg
loope
mov
adc
xor
sub
xchg
xchg
int3
out
mov
pop
push
jo
xchg
fstp
out
sub
jo
jae
dec
(bad)
clc
pop
and
push
in
or
inc
std
inc
in
dec
jmp
sub
test
jns
and
ss
cdq
jne
movs
mov
cmp
or
arpl
ja
xchg
fild
mov
call
fimul
gs
hlt
jg
adc
or
loop
stc
into
daa
xor
or
arpl
xchg
mov
data16
pop
test
cwde
nop
inc
mov
lahf
aas
stc
ficomp
scas
and
(bad)
xchg
(bad)
add
shl
xor
adc
ja
test
stos
out
sub
jo
popa
out
mov
(bad)
sbb
or
mov
in
dec
adc
mov
aam
ffreep
sbb
pop
pusha
retf
cmps
retf
cmps
push
pop
jp
fbstp
std
sub
cwde
xor
imul
movs
sti
repnz
std
pusha
icebp
out
fs
dec
jmp
pop
fadd
mov
pop
xchg
arpl
xchg
adc
or
xchg
in
mov
push
xor
aad
sub
(bad)
popa
ffree
(bad)
pop
pop
cwde
mov
push
lea
std
pop
out
out
cmp
int
addr16
iret
or
jecxz
dec
push
cdq
hlt
in
jne
add
sbb
pop
mov
je
int
xchg
mov
sub
enter
ret
adc
addr16
mov
dec
mov
xor
std
mov
sbb
int
fs
shr
jns
cdq
(bad)
lahf
or
js
je
xor
gs
and
(bad)
in
mov
int3
icebp
addr16
cmp
gs
in
xchg
sub
sbb
pusha
jae
dec
jl
dec
dec
sbb
out
jp
inc
cwde
je
fwait
jno
pusha
add
cs
gs
push
into
in
add
dec
jg
ror
sbb
repnz
xor
lahf
jno
(bad)
cli
sahf
test
jno
aaa
leave
out
sub
xchg
and
jle
or
sub
mov
sub
in
not
mov
mov
sti
cmps
adc
mov
lea
fisub
push
dec
mov
in
dec
test
int
and
xchg
loop
adc
mov
jp
and
adc
xchg
mov
test
adc
jb
jle
add
stos
not
pop
ret
sahf
pop
aam
and
ja
bound
jo
ss
mov
xor
imul
pop
fwait
inc
xchg
dec
fcmovu
xchg
add
ror
mov
shl
lahf
jb
jle
mov
ret
jb
ss
in
clc
mov
int3
out
mov
cmp
jo
rol
adc
outs
xchg
out
cmps
outs
loope
das
jo
jnp
cmp
lock
hlt
aas
inc
mov
mov
cmp
push
mov
ret
inc
aad
outs
ja
and
mov
push
aad
je
mov
scas
stc
cmp
and
jl
mov
lds
gs
xchg
jno
pop
dec
jmp
scas
shl
adc
adc
or
mov
sbb
xor
push
pop
cmps
div
cmp
fiadd
push
test
je
push
das
mov
fdivr
push
adc
sti
repnz
sub
mov
fsubrp
pop
in
xchg
es
xchg
add
adc
push
test
outs
mul
fnstenv
lds
jl
sbb
pop
repnz
sub
std
int3
ins
push
pop
mov
aas
add
shr
pusha
rol
lods
(bad)
movs
mov
sti
xchg
and
cmc
je
ss
cmp
sub
fmul
iret
stos
ret
mov
and
aaa
addr16
sub
dec
sub
icebp
stos
pushf
shl
stos
int3
xchg
dec
adc
out
jl
pop
cdq
push
cmp
push
and
cmp
cdq
stc
fdivr
cmp
jne
and
and
sbb
jo
dec
out
pop
pop
cmc
adc
xchg
jnp
fidivr
lock
add
arpl
dec
push
sbb
test
inc
inc
inc
xor
pusha
or
ja
(bad)
ja
out
scas
dec
mov
push
ret
out
sub
xor
or
pop
mov
sbb
cmp
or
fiadd
inc
add
xchg
pusha
and
(bad)
dec
std
sub
lods
(bad)
mov
mov
adc
jbe
mov
std
int3
popf
push
imul
loop
dec
(bad)
enter
pop
jge
stos
sbb
pop
push
jno
jne
inc
into
pop
daa
imul
iret
mov
mul
imul
sbb
arpl
xchg
inc
daa
aam
bswap
and
out
data16
push
gs
daa
jae
aaa
adc
(bad)
xor
lods
mov
fst
into
xchg
cmc
sub
xor
jge
das
cmc
(bad)
fcmovne
jecxz
ror
sbb
dec
lock
stos
adc
ffree
bound
xor
cmp
stc
mov
movs
sar
cmp
jecxz
rol
add
xchg
push
ror
fst
mov
das
ss
out
fimul
bound
jmp
dec
push
movs
pop
in
clc
(bad)
imul
stos
jae
ret
cs
sub
std
scas
cs
ss
inc
dec
or
mov
(bad)
ins
push
das
arpl
aam
xor
stos
neg
xor
mov
popa
mov
out
in
sub
pusha
outs
jmp
adc
pop
dec
and
jb
ret
inc
rcl
arpl
daa
xor
sbb
aas
adc
sbb
iret
mov
sti
gs
fucomip
into
pop
daa
jbe
clc
mov
bound
inc
or
pop
or
pushf
mov
lods
sbb
outs
pop
xchg
leave
mov
adc
lods
xor
xor
xor
cmp
push
retf
outs
xor
adc
jbe
daa
stos
jo
sbb
mov
cwde
call
cmp
clc
mov
lods
sti
jno
sbb
inc
sbb
js
mov
cld
int3
xchg
pop
jl
inc
mov
inc
jmp
add
aad
iret
mov
out
popf
push
add
push
in
and
xor
stos
xor
cmc
(bad)
adc
test
shr
pop
xor
cmp
inc
push
push
aad
jb
scas
xor
mov
sbb
aam
fstp
push
or
outs
or
sbb
cmp
push
movs
adc
or
mov
mov
xchg
sub
xchg
pop
cs
cld
aad
lea
sub
xor
lea
pop
sub
and
sbb
dec
(bad)
mov
push
repnz
sub
int3
leave
xchg
cmc
push
mov
mov
icebp
fiadd
ret
pop
mov
dec
test
inc
stos
add
or
outs
or
sbb
(bad)
ficom
enter
push
stos
or
xchg
or
outs
or
jae
pop
fwait
and
add
in
ret
loope
pop
cwde
or
fdiv
push
(bad)
cmps
sbb
das
hlt
in
out
inc
add
sbb
jge
popa
mov
jl
das
sub
adc
iret
mov
ret
push
inc
std
inc
daa
or
pop
(bad)
ds
aam
sar
je
inc
sbb
jl
mov
std
lahf
adc
cwde
stc
test
sbb
ret
fwait
ror
mov
ins
xchg
jl
xchg
add
mov
xor
repnz
jno
add
out
sub
mov
outs
mov
mov
jno
stos
movs
mov
cmps
retf
mov
lds
std
mov
out
jne
push
inc
loop
(bad)
xchg
aam
pop
inc
ret
repz
push
ror
lea
sbb
and
rcl
xchg
mov
sbb
aas
(bad)
ss
lds
xor
mov
push
les
(bad)
and
arpl
fwait
or
inc
pop
ins
in
xchg
lods
stos
mov
dec
xchg
jp
jne
addr16
dec
jle
sbb
dec
mov
lds
fucom
xchg
adc
cmps
aam
cmps
call
mov
mov
daa
jmp
pop
pop
pop
cmps
rcl
mov
out
daa
(bad)
adc
mov
xor
add
fidiv
inc
jbe
jns
imul
pop
sbb
mov
xor
retf
outs
addr16
jmp
fild
or
imul
addr16
adc
call
(bad)
sub
test
(bad)
adc
push
xchg
daa
inc
dec
gs
jmp
jecxz
pop
lods
sti
mov
jo
pop
sbb
cmp
dec
or
mov
aam
gs
and
fild
jl
adc
sub
rcl
xchg
pop
add
mov
push
mov
lods
icebp
jg
sbb
dec
and
push
jo
inc
pop
fcmovnu
push
or
in
retf
imul
adc
jp
mov
adc
adc
pop
jle
cmps
ror
pop
fwait
dec
aam
xor
jnp
stos
dec
jmp
sub
inc
cmps
adc
dec
mov
into
cli
pop
cmp
cwde
xor
sub
xchg
(bad)
dec
xor
mov
scas
not
scas
xchg
jmp
aad
or
sub
stos
mov
xchg
dec
sbb
clc
retf
jb
clc
add
cmp
dec
push
mov
sbb
test
pop
mov
popf
xchg
mov
and
imul
nop
mov
daa
jmp
ins
pop
jmp
fnstenv
lods
and
jp
xlat
cmp
xor
push
mov
arpl
push
xchg
das
pop
out
xor
or
(bad)
and
movs
inc
dec
loope
outs
pop
test
es
mov
call
sub
fld
jp
cdq
(bad)
test
jp
xchg
fwait
das
mov
xor
cwde
hlt
add
test
movs
cmp
arpl
cmp
jo
push
jae
mov
mov
test
gs
add
xchg
adc
ret
out
(bad)
jg
enter
or
cmp
cs
xchg
stos
push
hlt
inc
dec
ret
mov
push
repz
ror
push
jne
adc
jo
lea
pop
sub
add
fdivr
fimul
sar
call
sbb
test
pusha
movs
test
ficomp
push
outs
add
push
xchg
xor
jge
inc
mov
in
jg
out
mov
inc
arpl
test
mov
add
sub
(bad)
sub
arpl
call
dec
adc
cmp
imul
xchg
and
inc
push
gs
push
jne
fst
push
dec
inc
pop
and
movs
inc
mov
mov
leave
mov
stc
(bad)
aam
test
stc
(bad)
or
cmps
adc
scas
mov
adc
out
cwde
addr16
add
lea
mov
pop
out
out
inc
pop
cmp
xor
sub
mov
or
lock
mov
mov
jne
xor
cdq
stc
cmp
in
dec
or
mov
push
and
cmp
(bad)
sub
scas
adc
add
mov
movs
inc
pop
jmp
ficom
dec
push
fld
xchg
or
inc
sahf
jns
mov
cmp
mov
xor
pop
adc
push
mov
inc
dec
cwde
cmc
sbb
push
jecxz
std
mov
stos
not
xchg
(bad)
sahf
cli
mov
leave
arpl
js
jp
jne
jno
ror
out
cmp
cld
sahf
inc
ins
(bad)
fistp
data16
sbb
popa
in
int
inc
pop
sub
or
xchg
loopne
add
jns
repz
fisubr
mov
test
add
sbb
cmp
das
cmp
xchg
(bad)
dec
pop
and
lods
mov
sbb
ror
jne
sar
ror
xlat
add
rol
add
jl
mov
dec
aaa
jmp
mov
sbb
adc
mov
jb
fisttp
fnsave
daa
inc
jge
mov
adc
sub
int
retf
add
int3
int3
sbb
data16
scas
loope
push
pop
out
jbe
movs
jg
add
popa
cwde
jge
daa
out
sbb
ins
in
inc
jl
popf
(bad)
jo
inc
icebp
clc
jecxz
pop
retf
pop
popf
into
bound
pop
adc
sbb
mov
repz
call
shl
jne
mov
jl
hlt
in
or
jecxz
dec
jmp
test
int3
cs
cmovnp
push
push
popf
test
cmp
pop
sbb
hlt
das
aas
sbb
mov
mov
mov
cmps
mov
fwait
cmp
fdiv
sub
mov
or
cs
mov
cmp
movs
add
jg
dec
cmps
cmp
test
mov
fdiv
adc
out
div
movs
cmp
add
xchg
and
enter
xchg
pop
shr
repz
loope
or
sti
test
pop
test
push
fucomp
adc
idiv
sbb
fdiv
jne
xchg
das
sbb
sub
call
stos
cmp
scas
cmp
retf
xor
jp
xchg
jl
(bad)
fisubr
and
sahf
inc
ins
adc
adc
sbb
push
nop
mov
sbb
jl
xor
mov
loop
outs
std
stos
fs
popa
stos
or
jbe
pop
fwait
scas
add
sub
mul
or
jmp
pop
dec
or
pop
(bad)
fucomi
jne
stos
cmp
scas
cmp
retf
xor
jp
cmc
jl
(bad)
fisubr
and
sahf
inc
ins
adc
adc
sbb
push
nop
mov
sbb
mov
cs
outs
ja
mov
sub
out
add
adc
push
addr16
je
sbb
std
test
mov
mov
popf
push
out
scas
jmp
fistp
and
jmp
int3
jge
(bad)
cwde
addr16
call
in
adc
ret
movs
inc
pop
inc
cmps
mov
pushf
cdq
jl
rcl
rcr
mov
ss
inc
stos
mov
in
ins
mov
fdivr
daa
repz
pop
mul
cmp
pop
sbb
push
pop
je
dec
push
aaa
mov
ret
jb
cmp
lock
inc
aaa
arpl
jo
retf
stos
call
jmp
or
mov
cmp
int3
fmul
out
cmp
sub
and
bound
xor
dec
lods
xor
adc
push
mov
scas
lods
addr16
sub
jl
aam
je
sbb
outs
out
imul
(bad)
cwde
addr16
xlat
xor
jecxz
cld
aas
das
hlt
sub
ins
cmps
or
xchg
add
jns
jg
retf
or
pop
je
dec
cs
(bad)
xor
inc
test
mov
cmp
pushf
xor
push
in
scas
jns
cmp
lods
imul
add
pop
pop
fwait
shl
and
mov
pop
sbb
out
and
cmp
jmp
pop
cmps
mov
and
push
fisttp
fucomp
inc
jle
cmp
sub
cmp
xchg
mov
arpl
ror
stos
fsubr
push
adc
(bad)
xor
xchg
mov
je
sub
mov
out
cmp
adc
into
pop
daa
out
and
jmp
out
and
push
retf
inc
aaa
movs
inc
xchg
pop
test
cmp
pop
sub
push
in
mov
mov
adc
xor
ret
adc
ins
lds
pop
add
mov
fistp
sti
(bad)
stc
mov
aad
add
mov
rcl
or
and
push
std
adc
xor
retfw
stos
dec
xchg
cmp
in
nop
mov
adc
jnp
cdq
jg
ficom
ret
push
and
aas
inc
dec
sbb
loop
dec
pushf
xor
xchg
outs
adc
sub
adc
out
and
leave
out
ret
push
(bad)
mul
call
jecxz
cwde
xor
xor
and
not
(bad)
mov
mov
xor
js
out
dec
das
mov
or
stos
hlt
out
or
cmps
lock
inc
mov
pop
cmp
addr16
ror
fld
xchg
fld
mov
jne
ret
dec
mov
mov
and
dec
sbb
mov
arpl
test
mov
shl
or
data16
aas
xchg
mov
jle
and
pop
adc
mov
call
jmp
ss
ror
add
adc
ret
aad
repz
daa
xor
push
(bad)
sbb
pop
xchg
fild
sahf
xor
push
(bad)
loopne
sub
jmp
and
cmc
das
mov
in
pop
dec
repnz
xchg
int
push
cmps
pop
or
jecxz
mov
push
push
hlt
sub
icebp
xor
sub
adc
add
popf
gs
sbb
jle
loopne
fmul
inc
adc
stos
aad
adc
test
(bad)
push
jecxz
add
xor
cmp
js
sbb
sbb
mov
ins
fdiv
sbb
stc
cs
mov
imul
out
cs
retf
mov
fidiv
adc
sbb
dec
cwde
cmc
adc
mov
not
and
popa
mov
nop
cmp
aam
je
sti
add
or
mov
sbb
or
mov
or
sbb
sar
(bad)
popa
or
mov
jecxz
and
je
jg
test
ret
push
mov
cmp
dec
(bad)
mov
xlat
sbb
outs
adc
sub
cmp
shl
push
push
sub
adc
xor
(bad)
lods
and
fs
popa
sbb
add
push
or
mov
in
dec
mov
call
mov
pop
mov
inc
sbb
imul
out
mov
cmp
out
imul
addr16
adc
sub
sub
mov
ror
(bad)
arpl
aam
int
out
dec
add
retf
jno
add
jae
xor
mov
inc
(bad)
xor
pop
cmp
sbb
test
lds
mov
sbb
adc
pusha
dec
and
jg
sub
ins
add
and
mov
test
stos
mov
xchg
mov
push
outs
adc
test
jp
mov
xchg
pop
fdiv
in
out
cmp
outs
mul
xor
in
cmp
les
lods
and
mov
dec
pusha
add
(bad)
jns
jbe
retf
test
or
stos
mov
ins
fadd
bound
sbb
push
jae
and
fwait
(bad)
mov
add
mov
inc
scas
xchg
fild
adc
mov
mov
push
adc
mov
mov
repz
sbb
iret
aam
shl
push
dec
cmps
add
pop
test
mov
not
xchg
push
cwde
ret
aam
cmp
loope
out
test
mov
outs
push
xchg
mov
inc
ror
icebp
jne
ja
fidiv
sub
push
adc
or
xor
xlat
daa
xor
jecxz
push
xor
std
jecxz
out
movq
jge
pusha
mov
mov
xchg
jnp
out
cmp
jp
sar
mov
outs
repz
sbb
hlt
mov
shl
push
dec
hlt
outs
ins
ja
mov
mov
adc
xchg
daa
cwde
and
stc
mov
push
jl
lds
shl
push
or
sbb
push
shl
adc
outs
sbb
fdivr
xchg
inc
dec
imul
add
int3
out
ret
adc
jno
pop
test
xor
repz
mov
jl
sbb
scas
jle
inc
jg
jne
add
sbb
gs
jmp
pop
test
cmps
fwait
aad
in
mov
xor
and
xor
jle
mov
popa
into
hlt
in
xor
not
paddsw
test
pop
test
pshufw
jns
fiadd
xchg
addr16
jg
sbb
cwde
mov
inc
cmp
push
in
scas
dec
aam
outs
ja
out
pop
pop
out
sub
pop
sbb
lahf
push
jb
dec
jl
dec
dec
sbb
pushf
push
rcl
xchg
jno
and
shl
pusha
fwait
in
add
push
pop
pop
jle
sub
loop
(bad)
outs
cdq
seta
vpunpckhdq
bnd
xchg
ss
ja
mov
cdq
sti
xor
mov
int3
into
mov
mov
pop
dec
jmp
std
dec
int
adc
outs
ja
xchg
arpl
sub
push
scas
adc
push
scas
xchg
adc
mov
fwait
aam
hlt
in
inc
cdq
ret
push
sbb
ja
pop
test
cwde
fwait
cmp
adc
fnstcw
cwde
addr16
xchg
fstp
data16
or
test
push
add
daa
pusha
mov
pop
push
cmp
xchg
outs
mul
xor
fild
cmps
stos
das
mov
mov
xchg
ins
xchg
jp
pop
inc
xchg
lds
mov
mov
sbb
imul
inc
and
jb
neg
or
int
push
daa
shl
idiv
adc
jns
jb
retf
jb
and
sbb
outs
stc
retf
and
jge
and
retf
sbb
mov
jmp
addr16
test
xor
ror
and
leave
cs
push
scas
pop
fldenv
xor
arpl
(bad)
int
mov
icebp
retf
fsubr
and
adc
aam
mov
jge
fnsave
fidivr
lods
hlt
inc
mov
mov
pop
jle
call
shl
add
pop
fwait
sub
sahf
add
mov
outs
sub
mov
shl
add
add
adc
in
add
adc
sub
int3
ins
dec
dec
leave
mov
stc
lods
popa
in
loopne
jae
add
aas
cmp
cmp
push
xchg
jo
aam
fwait
hlt
pop
cmp
adc
(bad)
or
retf
cmps
adc
aad
imul
(bad)
movs
mov
addr16
dec
jg
(bad)
mov
sbb
cmp
xor
dec
cmps
stos
ret
or
xor
movs
add
js
in
cwde
sahf
call
jge
mov
dec
in
push
ret
in
sub
cld
int3
pushf
push
push
jo
or
popa
mov
sbb
movs
outs
test
dec
xor
inc
and
shl
outs
or
mov
jle
movs
mov
std
or
stos
or
pop
jmp
mov
sar
jno
(bad)
cmp
lock
in
scas
push
or
pop
push
dec
popa
xor
push
int3
ins
pop
dec
retf
stc
cmp
sbb
clc
sub
cmp
xchg
jb
ss
cmp
and
ror
or
in
int3
pushf
fs
out
cmps
test
xchg
mov
jo
adc
aad
push
leave
lea
stc
cmp
mov
pop
lea
scas
push
xor
stos
xchg
stos
dec
lds
mov
outs
xor
mov
mov
out
cmp
cmp
xor
pop
iret
into
mov
(bad)
repnz
cli
and
shl
call
pop
add
push
rcl
mov
ds
mov
inc
fdiv
xchg
push
push
sbb
hlt
outs
mov
push
sbb
mov
ja
xchg
test
pusha
ficom
xor
cwde
jns
lods
call
sbb
mov
jle
inc
pushf
mov
rcr
inc
scas
sbb
lds
push
jne
and
scas
sub
xchg
cld
lahf
(bad)
clc
test
add
mov
popa
push
cmp
and
inc
dec
(bad)
xchg
mov
sub
pop
fwait
and
xor
cli
fucompp
or
or
aaa
cmp
ret
sub
loopne
loopne
cmp
inc
adc
mov
ds
add
mov
push
jo
outs
cwde
xchg
pop
lods
int3
call
and
or
cmp
icebp
(bad)
popa
arpl
aam
pop
fwait
outs
mov
xlat
mov
push
int3
scas
arpl
push
mov
scas
mov
pop
imul
and
jno
mov
sub
or
ret
xchg
mov
xor
popa
(bad)
cmp
add
ror
jmp
jne
dec
jmp
int3
aam
mov
pop
dec
hlt
into
jge
adc
loope
pop
cdq
lea
pop
or
mov
sbb
mov
bound
out
xor
push
sbb
adc
inc
outs
push
es
cmp
cmp
or
mov
hlt
dec
pop
or
ja
mov
stc
cmp
stc
push
push
add
push
test
xor
ror
test
es
aam
bswap
sub
ror
sbb
fwait
xor
sub
or
push
inc
mov
aas
popf
mov
jecxz
cwde
mov
js
out
cwde
addr16
(bad)
or
lea
and
push
xor
test
cmp
dec
in
and
xor
push
mov
adc
inc
sub
and
lock
lea
dec
xchg
inc
jecxz
jge
sub
fcomip
lods
popf
je
mov
push
pop
test
cwde
call
sub
call
mov
cmp
cmp
and
les
dec
xchg
mov
(bad)
fisttp
aad
xchg
xchg
sbb
ds
inc
es
ficomp
stc
mov
repz
mov
int
jmp
cmp
sbb
test
out
lods
sub
xchg
push
loopne
pushf
mov
cmp
inc
ss
push
mov
lods
aam
std
mov
dec
jmp
icebp
mov
mov
lea
rcr
pusha
mov
nop
stos
pop
repnz
ins
mov
mov
in
int
fmul
push
retf
xor
in
leave
out
inc
stos
add
jns
xchg
add
jg
pushf
mov
mov
mov
mov
pop
pop
arpl
push
stos
mov
jbe
je
mov
add
mov
fist
fcom
mov
adc
pop
test
sub
rcl
repnz
cmp
(bad)
cmps
inc
imul
cmc
in
xchg
out
push
mov
lods
dec
lea
jns
out
sub
es
push
mov
add
dec
sbb
fcmovnbe
pop
or
js
xchg
mov
sbb
dec
adc
inc
adc
gs
cld
scas
inc
pop
lods
pop
push
mov
mov
cmp
pushf
xor
mov
push
clc
shl
stc
(bad)
ss
pop
test
aad
or
sub
repz
fsubrp
aam
mov
jb
sahf
xor
dec
mov
mov
fs
ds
jmp
ja
and
ds
cmp
mov
retf
mov
dec
(bad)
mov
and
pushf
xor
or
xor
xchg
(bad)
popa
mov
pusha
hlt
addr16
cmps
arpl
push
or
mov
imul
or
inc
inc
scas
ror
sbb
mov
ds
adc
pop
jno
ja
jae
shr
push
mov
shr
dec
sbb
sub
push
jmp
adc
arpl
pop
jbe
and
loopne
mov
adc
push
adc
or
pop
cs
leave
inc
sub
mov
jb
out
jb
mov
mov
loop
popf
xor
sub
(bad)
not
repnz
push
test
retf
ret
mulps
xchg
popf
mov
leave
lea
cmp
ror
adc
xor
sbb
in
inc
mov
push
xor
cld
and
adc
(bad)
retf
xchg
push
fimul
fwait
jne
(bad)
in
dec
ds
sub
or
std
xor
and
or
push
xchg
adc
(bad)
pop
xor
dec
mov
sub
mov
push
mov
xchg
or
xchg
loopne
dec
ja
xchg
add
pop
cwde
test
cli
dec
cmp
das
dec
sbb
in
mov
(bad)
fistp
popa
fstp
mov
pop
jbe
cmp
sub
out
cmp
xor
ja
rcl
lds
js
sub
xchg
out
shl
pop
pop
aam
sahf
add
lods
sar
dec
arpl
mov
outs
popf
mov
or
or
cs
imul
stc
pop
push
jmp
cdq
aas
mov
push
repnz
std
push
push
fidiv
adc
sbb
and
or
and
pushf
inc
nop
adc
cmc
les
sti
jns
loope
mov
push
jo
mov
pop
sub
daa
neg
mov
xor
arpl
add
inc
xlat
jae
jmp
pop
shl
push
push
sub
jo
jmp
cwde
hlt
add
mov
and
ins
ror
sbb
xor
popf
push
out
ucomiss
outs
ja
(bad)
mov
mov
adc
push
out
xor
aam
jle
addr16
pusha
xchg
or
arpl
aaa
sub
loop
in
add
movs
adc
mov
sti
ficom
xchg
mov
jg
push
dec
ds
and
cli
cmps
mov
jmp
jo
xor
xchg
add
cmp
push
enter
pop
mov
in
jecxz
(bad)
xor
std
inc
cmp
popa
fucomp
sahf
cli
mov
icebp
fidiv
sahf
jge
pop
shl
xor
out
inc
scas
popa
pop
lahf
bound
and
dec
dec
mov
dec
dec
inc
xor
inc
xlat
stos
dec
pushf
mov
xchg
inc
and
mov
out
sub
mov
adc
pop
add
rcl
sub
push
dec
sub
push
mov
adc
inc
mov
data16
call
int3
imul
out
mov
xlat
push
mov
stc
(bad)
imul
or
mov
out
cmp
jno
adc
mov
cmps
lods
sub
test
cld
int3
out
ror
fnstcw
sahf
in
add
inc
adc
inc
jg
imul
cmp
mov
dec
mov
mov
loope
sub
rcr
stos
neg
push
mov
mov
push
sbb
outs
stc
fwait
dec
mov
xor
inc
fld
hlt
in
mov
mov
stos
test
cmps
cwde
cmp
xor
xchg
fwait
call
and
jle
scas
inc
dec
xor
mov
dec
and
jmp
dec
and
adc
pop
out
sub
add
adc
jp
or
les
inc
jno
mov
fld
fs
and
lds
arpl
arpl
cwde
xabort
cmp
cmp
jmp
inc
jno
pop
int
jp
sub
mov
test
jo
jno
dec
dec
push
sti
cmps
adc
cld
jnp
(bad)
adc
jns
lods
push
dec
bt
sbb
push
jl
dec
dec
sbb
icebp
sub
stos
dec
jmp
sub
icebp
jbe
jp
jmp
pushf
xchg
mov
pop
inc
je
test
mov
inc
and
mov
dec
jmp
in
push
sahf
in
push
push
mov
mov
dec
mov
pop
nop
xchg
popa
sbb
or
jmp
push
jl
xor
mov
data16
addr16
mov
push
enter
cmp
adc
or
sbb
sbb
js
dec
out
mov
out
sub
mov
fst
xchg
sahf
sub
sub
jecxz
(bad)
mov
pop
xchg
sar
out
sbb
lock
test
mov
push
push
scas
arpl
xchg
jo
(bad)
adc
dec
iret
loop
rcr
mov
mov
cdq
fimul
outs
imul
les
lahf
jno
mov
in
jne
int3
sti
pop
mov
cmp
cdq
(bad)
xor
adc
fidiv
pop
ja
jnp
sub
sub
add
stos
test
retf
push
pop
pop
mov
retf
(bad)
adc
leave
dec
ss
(bad)
loop
xor
(bad)
call
xor
aam
jg
mov
out
(bad)
mov
ja
shl
push
push
sub
adc
and
mov
(bad)
int3
push
movs
data16
or
sbb
aad
lock
ja
stos
dec
pushf
mov
add
in
adc
mov
bound
jecxz
add
cmc
push
push
inc
push
mov
or
add
fucom
jmp
cmps
push
pop
jle
fst
cli
cld
loope
xor
scas
mov
mov
jmp
xor
idiv
jle
jno
test
or
fild
cmp
cwde
mov
jle
xchg
jl
and
or
inc
pop
jmp
nop
and
in
outs
ja
xlat
dec
jl
sub
pop
mov
push
inc
lea
(bad)
jae
cmp
cdq
xor
mov
ror
in
or
aam
xor
pop
fsub
jmp
aad
and
je
push
iret
fdivrp
push
xchg
mov
pop
push
daa
hlt
jl
cmp
cld
cmp
fistp
add
adc
dec
mov
inc
push
mov
cmps
mov
je
stc
movnti
fwait
inc
xor
jle
rol
mov
adc
(bad)
or
(bad)
mov
sbb
je
xchg
xlat
test
inc
test
pop
adc
jl
xchg
add
mov
(bad)
fld
or
ins
iret
mov
js
mov
mov
pop
pop
xor
mov
xchg
imul
imul
shr
cmc
fisttp
cmps
mov
lods
cmc
push
jmp
(bad)
or
mov
lahf
stos
mov
jmp
ja
scas
pop
clc
xchg
rcl
adc
adc
cwde
js
es
mov
inc
movs
sub
shr
mov
adc
jp
xchg
leave
xlat
ds
pop
inc
adc
cmp
sbb
test
fstp
xchg
enter
imul
pop
popf
push
in
sahf
sub
fisubr
mov
outs
test
jae
out
or
adc
sbb
in
xor
adc
and
aas
repnz
(bad)
enter
sub
push
mov
mov
fwait
dec
(bad)
outs
gs
mov
sbb
call
and
and
mov
(bad)
ror
inc
mov
sti
fwait
pusha
xor
fstp
pusha
sahf
dec
cmps
push
jae
inc
fs
xor
push
sti
xchg
mov
pop
xchg
arpl
stos
and
pop
cmc
mov
xchg
add
out
ins
add
xlat
js
and
jno
push
jns
or
ja
sbb
adc
cdq
mov
pop
lods
jle
push
or
int
mov
jns
shl
add
pop
xor
push
iret
mov
int
sub
scas
jle
xchg
or
mov
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
cmc
push
fist
xchg
mov
aad
pop
jp
sub
sbb
xchg
shr
gs
movs
xor
(bad)
mov
arpl
push
add
and
cmc
push
mov
stc
mov
xchg
mov
aam
pop
shr
jmp
xchg
shr
addr16
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
bound
xor
jns
cdq
jo
xor
ret
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
mov
pop
jmp
sub
cdq
jo
xor
fisub
inc
daa
xor
or
arpl
aam
xor
outs
sub
rol
or
fsub
mov
push
lds
or
hlt
or
pop
mov
leave
int
stos
cmp
sub
call
loope
pushf
jbe
jg
cmp
lods
mov
scas
rol
add
adc
mov
jle
sub
mov
ret
jg
pop
jmp
sbb
jmp
adc
push
pop
and
jb
iret
test
sbb
push
arpl
push
inc
xor
stos
hlt
push
mov
mov
pop
dec
sub
xor
ss
push
fisub
ins
daa
mov
in
or
arpl
push
inc
xor
std
push
addr16
mov
mov
sub
xor
push
adc
push
pop
and
jb
dec
(bad)
in
or
arpl
inc
xor
stos
in
fist
mov
jmp
sub
xor
add
icebp
push
movs
and
jb
xor
arpl
pop
push
adc
mov
mov
sub
push
sub
xor
retf
adc
push
movs
and
jb
xor
arpl
stos
inc
xor
stos
in
fwait
push
(bad)
out
popf
mov
sub
xor
push
movs
and
jb
xor
arpl
stos
in
or
(bad)
mov
sub
or
xor
ss
push
fisub
push
daa
mov
xor
arpl
stos
fst
mov
mov
sub
xor
lods
adc
push
cmps
and
jb
xor
arpl
stos
mov
aas
imul
pop
or
xor
sub
iret
push
cmps
and
jb
dec
(bad)
in
or
arpl
stos
std
push
repz
pop
fldcw
xor
(bad)
adc
push
cmps
and
jb
xor
arpl
test
xor
mov
mov
ja
out
sub
jo
gs
push
mov
mov
xor
adc
xor
stos
repnz
outs
mov
mov
ja
mov
loop
jmp
adc
push
shl
daa
xchg
xor
pop
arpl
inc
xor
in
push
xor
(bad)
pop
mov
pop
ins
sub
xor
mov
mov
mov
xor
or
scas
inc
xor
rcl
popa
mov
pop
int
or
jecxz
jmp
adc
push
jge
push
shl
mov
xor
in
or
arpl
scas
inc
xor
stos
hlt
push
outs
mov
mov
sub
das
jns
jecxz
jmp
adc
push
mov
xchg
jb
xor
in
or
arpl
stos
int3
push
(bad)
outs
mov
mov
sub
xor
adc
push
mov
xor
or
arpl
stos
stc
push
jg
mov
mov
sub
xor
movs
adc
push
mov
mov
jle
mov
iret
or
arpl
stos
out
push
xlat
ins
mov
mov
cs
adc
loopne
jmp
adc
push
mov
mov
aaa
test
ror
sbb
aam
xor
loopne
mov
mov
pop
xchg
sub
xor
pop
adc
push
mov
scas
jb
ss
ror
sbb
aam
xor
ins
mov
mov
das
ja
out
sub
jo
jge
fsubr
jle
inc
inc
daa
xor
or
arpl
stos
iret
push
(bad)
xchg
out
loope
mov
pop
mov
loope
jmp
adc
push
mov
xor
or
arpl
lods
inc
xor
stos
not
stc
(bad)
mov
xchg
mov
sub
xor
push
adc
push
mov
xor
or
arpl
stos
call
(bad)
pushf
mov
pop
bound
xor
or
clc
push
lods
and
jb
cmp
arpl
stos
out
sti
bound
mov
and
dec
sub
xor
adc
iret
push
mov
nop
jb
cmp
arpl
mov
hlt
push
mov
mov
pop
push
sub
xor
ficom
int
cdq
lods
and
jb
retf
ror
sbb
aam
xor
arpl
mov
and
cwde
sub
xor
or
stc
push
test
push
inc
daa
xor
or
arpl
add
cmp
mov
mov
and
jmp
jmp
adc
push
lods
and
jb
cmp
arpl
stos
repz
mul
(bad)
or
and
sub
jmp
adc
push
scas
and
jb
cmp
arpl
stos
cld
push
imul
popa
mov
pop
push
sub
jns
gs
push
scas
and
jb
dec
(bad)
in
or
arpl
stos
xlat
push
stc
jns
repz
xchg
mov
ja
out
sub
xor
ss
push
fisub
test
lahf
jb
cmp
arpl
inc
xor
stos
std
push
aaa
pusha
mov
mov
and
sub
xor
in
enter
and
jb
cmp
arpl
aam
xor
pusha
mov
mov
sub
xor
ss
push
fisub
leave
daa
xchg
cmp
arpl
mov
into
push
jg
mov
mov
sub
jo
ss
push
fisub
mov
cmp
arpl
inc
xor
in
cmp
mov
ja
dec
sub
xor
fcom
shr
and
jb
cmp
arpl
stos
retf
push
and
inc
mov
arpl
in
xor
aas
adc
push
adc
sti
cmp
arpl
js
outs
stos
(bad)
push
mov
mov
pop
mov
cs
jmp
test
test
cmp
and
push
jmp
xchg
stos
sti
push
outs
mov
mov
pop
fs
xor
ficom
leave
push
test
xor
or
arpl
inc
xor
mov
mov
pop
adc
xor
ss
push
fisub
cmp
mov
nop
icebp
xor
pop
or
sub
repz
(bad)
mov
mov
pop
mov
cs
jmp
jne
addr16
daa
mov
cmp
sbb
aam
xor
stos
not
stc
(bad)
jbe
xchg
mov
sub
jb
lahf
adc
push
and
push
dec
daa
mov
cmp
push
arpl
cmps
inc
xor
stos
call
mov
mov
sub
xor
and
call
jge
daa
xchg
jb
cmp
in
or
arpl
inc
xor
stos
cld
push
sbb
mov
mov
sub
dec
lahf
jg
loopne
stc
test
jge
daa
mov
mov
or
arpl
inc
xor
std
push
ret
addr16
mov
and
push
jns
mov
leave
push
test
jge
daa
mov
stos
cmp
in
or
arpl
cmps
inc
xor
stos
not
stc
mov
mov
sub
xor
cld
adc
push
test
jge
daa
mov
cmp
in
or
arpl
cmps
inc
xor
call
mov
mov
ja
ins
sub
sbb
lods
stos
and
jb
aas
test
and
movs
inc
xor
stos
repz
ja
mov
mov
sub
xor
scas
adc
push
stos
and
jb
aas
test
jno
pop
arpl
stos
fcom
mov
mov
sub
xor
ss
push
fisub
push
daa
xchg
aas
test
jo
or
movs
inc
xor
gs
mov
ja
jne
sbb
jmp
loopne
aaa
sub
mov
ds
bound
adc
movs
inc
xor
stos
(bad)
push
daa
gs
mov
daa
ja
jge
and
jmp
ret
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
mov
ja
mov
jmp
(bad)
push
stos
and
jb
test
icebp
loopne
or
in
inc
xor
stos
std
push
stos
gs
mov
pop
jge
sub
xor
gs
push
mov
jge
daa
mov
and
arpl
inc
xor
sti
push
pop
jp
(bad)
das
mov
pop
(bad)
sub
dec
icebp
push
adc
push
mov
jge
daa
test
and
arpl
stos
ficom
loopne
test
call
sub
xor
cs
push
mov
jge
daa
(bad)
jb
and
arpl
mov
out
inc
jnp
(bad)
push
mov
pop
dec
sub
xor
sti
adc
push
mov
jge
daa
xor
or
arpl
inc
xor
loopne
cmp
(bad)
cdq
mov
pop
addr16
xor
movups
push
rol
daa
call
or
arpl
mov
aam
scas
jnp
(bad)
cmp
sbb
sbb
sub
xor
outs
adc
push
mov
jge
daa
xor
or
adc
stos
jecxz
ja
mov
mov
sub
xor
pop
adc
push
mov
jge
daa
xchg
jb
and
arpl
stos
rcl
ret
call
xchg
cmp
sbb
xor
call
shr
mov
jge
daa
xor
test
cmp
sub
mov
jmp
pop
jns
(bad)
xchg
mov
pop
outs
sub
xor
jg
into
push
mov
jge
daa
xor
or
arpl
mov
(bad)
push
fwait
jns
(bad)
push
fwait
mov
sub
xor
add
jecxz
push
mov
xor
daa
xchg
jb
and
sbb
mov
fist
mov
mov
ja
test
xor
out
(bad)
push
mov
jge
daa
xor
test
sub
xor
mov
not
stc
(bad)
popa
mov
pop
jmp
jmp
adc
push
mov
jge
daa
mov
in
or
arpl
sub
add
rcl
shr
stos
mov
ja
nop
sub
xor
bound
leave
push
mov
jge
daa
mov
and
in
or
arpl
aam
xor
stos
mov
(bad)
aam
lea
pop
sub
xor
dec
adc
push
mov
jge
daa
sahf
jb
daa
test
out
adc
mov
sti
push
arpl
popa
mov
pop
daa
sub
xor
inc
adc
push
adc
imul
test
loope
daa
arpl
mov
stc
push
cmp
inc
mov
xor
sub
xor
mov
leave
push
mov
jge
daa
(bad)
jb
daa
test
out
or
arpl
stos
(bad)
push
idiv
or
pop
pop
sub
xor
fs
push
mov
jge
daa
xor
or
xor
cld
push
inc
jge
(bad)
test
or
icebp
xor
(bad)
adc
push
mov
jge
daa
xchg
es
in
or
inc
mov
lock
xor
(bad)
ror
ja
out
sub
jo
mov
jecxz
push
push
lea
daa
cwde
jb
es
dec
or
arpl
stos
jmp
mov
pop
sub
xor
xchg
adc
push
mov
xor
or
arpl
stos
out
jnp
mov
mov
sub
jo
mov
leave
push
mov
mov
sub
arpl
stos
rcl
(bad)
push
mov
pop
sub
xor
ss
push
fisub
mul
xchg
jb
sub
arpl
ret
stos
jmp
xchg
jb
(bad)
cld
mov
imul
cdq
jo
pushf
adc
push
mov
xchg
jb
sub
arpl
mov
xor
stos
in
push
jae
(bad)
push
mov
pop
ret
sub
fistp
xlat
daa
nop
or
sub
arpl
inc
xor
stos
not
stc
(bad)
mov
xor
leave
sub
xor
xchg
adc
push
mov
lea
sub
arpl
stos
hlt
push
div
(bad)
stos
mov
pop
out
sub
jo
ss
push
fisub
xor
test
sub
arpl
aam
xor
jae
(bad)
jg
xchg
jg
sub
push
jmp
adc
push
mov
xchg
jb
mov
sahf
lds
xor
stos
add
mov
mov
mov
ja
dec
sub
xor
ss
push
fisub
fldenv
xchg
sub
arpl
stos
call
mov
mov
xor
push
and
cld
xor
jnp
shr
mov
xor
or
xor
mov
mov
sub
xor
lods
adc
push
mov
xor
or
arpl
mov
xor
jno
(bad)
(bad)
mov
pop
scas
sub
xor
ja
iret
push
mov
mov
sub
arpl
inc
xor
stos
sti
push
iret
jno
(bad)
scas
mov
pop
jne
and
std
xor
test
retf
mov
xchg
jb
sub
arpl
mov
xor
stos
not
stc
(bad)
dec
ja
push
sub
xor
loop
leave
push
mov
mov
sub
aas
arpl
stos
cld
push
imul
xchg
mov
pop
jmp
cli
xor
rcl
push
mov
xor
or
arpl
inc
xor
stos
sti
push
sub
(bad)
popa
mov
pop
cmps
sub
xor
adc
enter
and
jb
sub
push
arpl
stos
(bad)
push
push
(bad)
lahf
mov
pop
bound
(bad)
cmc
rcl
iret
push
mov
mov
sub
push
arpl
mov
xor
ja
(bad)
mov
ja
out
sub
jo
xor
ret
push
(bad)
addr16
je
inc
jecxz
(bad)
in
or
arpl
ret
aas
mov
cld
adc
or
in
ds
jbe
xlat
dec
cmp
xchg
mov
pop
dec
mov
dec
and
cwde
jb
ror
nop
cmp
mov
or
sbb
add
inc
imul
mov
lds
xor
call
retf
and
dec
and
stos
cld
popa
sub
xor
clc
stos
sar
pop
in
into
cmp
jnp
mov
sbb
inc
jmp
aad
shr
jo
mov
out
shr
cli
repz
fsub
mov
pop
outs
clc
lods
cmp
loop
ins
(bad)
popa
rol
xor
xor
mov
out
rcr
aas
pop
in
es
gs
leave
fnsave
sbb
sti
and
repz
fnsave
les
inc
push
mov
fwait
sub
sahf
shr
sbb
test
stos
xor
push
xor
jns
cdq
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
and
ret
push
fisub
fisttp
or
jb
lock
push
lock
push
push
or
je
sub
jbe
sub
stc
mov
sub
jp
add
or
cdq
repnz
ins
mov
push
inc
sub
idiv
jl
add
push
and
jae
scas
push
sahf
or
jbe
jmp
sbb
or
pop
xchg
lock
xor
pop
mov
jle
dec
imul
pop
mov
imul
jl
daa
data16
pop
adc
pop
inc
lods
xchg
inc
fsub
dec
clc
jo
mov
jae
outs
adc
pop
lahf
test
jmp
sahf
add
out
imul
lock
popf
jl
inc
js
mov
stos
cmps
jmp
std
mov
or
xor
scas
movs
or
and
out
jge
mov
loop
and
fnstsw
lods
jae
sbb
stc
into
popa
sahf
xchg
mov
and
and
icebp
into
call
jo
jmp
je
or
bound
fstp
or
push
adc
gs
dec
push
mov
js
inc
sub
push
(bad)
jp
xchg
inc
push
mov
nop
(bad)
gs
int3
jmp
cdq
fcomi
jb
retf
les
fbstp
and
stos
gs
or
cwde
cmp
xchg
arpl
fld
inc
jp
and
(bad)
push
xor
shl
mov
mov
ins
call
jne
ja
jae
adc
mov
jmp
rcl
test
mov
push
dec
test
hlt
cli
xlat
mov
xchg
push
or
add
add
std
test
or
pop
sbb
and
scas
mov
(bad)
push
and
jmp
ins
out
or
rol
xor
push
sti
and
in
inc
pop
outs
and
(bad)
rol
sbb
fmul
(bad)
sbb
bound
(bad)
jmp
int3
sbb
nop
fbstp
mov
xor
sbb
or
mov
movnti
(bad)
iret
pop
cwde
cwde
mov
popf
push
jmp
mov
or
push
push
mov
cmp
mov
mov
(bad)
mov
fild
push
imul
pop
push
lea
popf
repz
int
cmp
xchg
enter
in
leave
iret
punpckhdq
pop
fbstp
push
mov
js
mov
leave
inc
sbb
clc
xlat
js
fbstp
test
ins
adc
es
fldcw
les
ss
mov
inc
mov
fmul
lods
les
jp
sti
stos
enter
(bad)
mov
ja
jno
(bad)
push
sar
mov
or
das
push
xor
ret
pop
lds
pop
and
jns
jo
dec
pop
sub
inc
and
or
daa
scas
jg
fnstsw
and
mov
retf
or
sub
lods
int
in
cld
xor
sub
xchg
add
test
fstp
and
xchg
xchg
xor
daa
add
push
add
mov
xchg
test
ficom
ins
push
lods
out
jo
push
jge
fld
ds
sub
fstp
adc
inc
addr16
or
test
jne
mov
imul
imul
xor
and
xchg
push
dec
retf
loop
mov
out
add
lods
retf
fstp
cs
or
stc
aaa
sbb
inc
jg
pop
call
mov
and
sbb
std
mov
xchg
lea
or
pop
xor
xor
inc
push
jae
in
jmp
std
mov
mov
in
sbb
jo
scas
sbb
sbb
stos
loop
test
xchg
shl
lods
inc
mov
jl
popf
dec
lock
int3
out
adc
in
add
pop
lock
mov
xor
imul
jg
imul
out
xchg
test
lods
int
cmp
sahf
imul
mov
pushf
iret
cmp
jg
popf
aam
mov
aam
(bad)
cwde
sbb
add
ret
dec
scas
lds
lahf
add
mov
iret
adc
js
and
es
dec
jb
xor
retf
repnz
stos
fild
popa
jnp
push
les
mov
dec
or
push
leave
stos
pop
and
das
jg
pushf
stos
ficom
fistp
iret
dec
ja
inc
add
inc
(bad)
sbb
inc
xor
lahf
aad
jle
pop
sti
pop
imul
aas
adc
ins
dec
and
and
dec
int3
and
add
xchg
jmp
add
add
lods
cmps
(bad)
push
in
jno
int
xchg
mov
add
jl
xor
retf
leave
mov
push
mov
or
cmp
and
cdq
inc
pop
pop
lods
das
iret
in
arpl
adc
mov
cmc
sbb
idiv
lods
lea
pop
mov
and
push
pop
dec
jns
mov
call
lock
shr
dec
mov
and
aas
mov
inc
push
xchg
mov
jns
mov
pop
add
scas
pop
cdq
(bad)
cmp
cmp
jbe
mov
bound
out
call
cli
cdq
int3
jno
add
fmul
xchg
sub
mov
outs
cmp
js
popa
loop
fild
dec
jae
aam
jns
mov
retf
cmp
pop
loopne
inc
sub
dec
rol
mov
mov
inc
fwait
adc
xlat
(bad)
pop
cdq
icebp
mov
sub
rcl
(bad)
rcr
sbb
and
stos
es
xchg
fmulp
mov
sub
xor
xor
sahf
jge
adc
jbe
push
mov
aas
pop
fdivr
(bad)
mov
lahf
add
mov
rcr
push
and
pushf
mov
mov
loope
dec
in
mov
adc
cmp
cmp
cmc
in
mov
sbb
jnp
sub
sbb
loop
add
aad
jnp
and
ins
sar
push
xchg
xchg
inc
push
leave
jl
repnz
xchg
mov
mov
mov
mov
lds
(bad)
out
mov
dec
sbb
mov
ja
gs
jb
adc
dec
mov
mov
xor
aaa
and
xchg
sbb
cdq
sub
mov
xor
iret
adc
cmp
jle
dec
lahf
rcl
stos
aas
adc
test
(bad)
jg
jge
inc
daa
dec
jne
dec
nop
cmps
imul
push
sbb
sub
mov
jo
cmps
in
cmp
xor
add
push
repz
(bad)
int
enter
cmp
in
retf
aam
test
lahf
je
adc
cmp
cwde
(bad)
dec
int
repz
idiv
shl
loopne
push
sbb
or
sbb
movs
inc
cli
jmp
(bad)
ror
mov
xor
and
pop
mov
sbb
(bad)
dec
mov
cli
push
cdq
sbb
jbe
fdiv
lds
hlt
adc
shr
add
mov
jg
inc
iret
dec
mov
cmp
fimul
mov
push
and
scas
adc
jae
xchg
inc
jne
mov
test
dec
mov
mov
bnd
jbe
aaa
cmp
fld
push
mov
or
push
push
mov
ret
and
cdq
and
dec
sahf
in
push
mov
jae
dec
mov
adc
ja
inc
(bad)
jnp
xor
icebp
inc
ds
rcl
(bad)
sar
dec
neg
mov
pop
ret
and
cmp
outs
jp
jns
jmp
push
sub
xchg
cli
int3
pop
mov
in
or
add
mov
stc
into
mov
inc
jbe
mov
(bad)
xor
cdq
cmp
(bad)
pop
out
(bad)
add
call
jns
repz
gs
mov
shl
inc
mov
sti
rcl
pop
cmp
loope
dec
int
jns
cli
jb
push
mov
movs
nop
sub
jnp
mov
sbb
jae
jno
jb
push
jne
mov
xchg
jnp
stos
sub
inc
adc
pop
jmp
repz
cmp
xchg
imul
mov
aam
fwait
addr16
inc
outs
jle
cmp
mov
je
(bad)
in
xchg
sub
in
sahf
es
or
addr16
or
adc
shr
cmps
sbb
pop
rcl
push
int3
(bad)
data16
and
ins
sub
push
shl
jmp
and
or
jns
mov
pop
pop
fild
shl
int3
mov
repnz
or
stc
inc
push
(bad)
out
jp
out
mov
sub
enter
popa
dec
daa
loop
xchg
jg
cs
dec
test
inc
hlt
cmp
inc
adc
xor
clc
xor
cld
and
and
ins
push
icebp
adc
or
push
mov
fnstsw
loope
out
mov
rol
stos
or
in
loopne
jl
sub
aaa
xor
sbb
mov
jle
jae
imul
out
ret
addr16
xor
imul
int3
jo
imul
rcl
mov
pop
lahf
dec
clc
scas
push
das
xchg
rol
xor
cmp
mov
leave
cld
mov
dec
(bad)
mov
xchg
je
ja
je
inc
(bad)
and
sti
cld
outs
sbb
int
(bad)
mov
es
mov
inc
push
popa
sti
pop
and
push
neg
cmp
or
jae
cmp
rol
mov
add
sbb
rol
or
jno
sbb
dec
nop
push
ins
sbb
jae
shr
mov
gs
in
mov
loop
jecxz
test
xchg
std
inc
retf
mov
push
push
jl
sub
mov
mov
pop
jno
stos
sbb
loop
pop
das
cli
mov
hlt
cmp
(bad)
cmps
jp
aaa
push
adc
cmp
fs
push
sbb
icebp
inc
shr
sub
addr16
lds
stc
sbb
inc
aas
test
cwde
mov
dec
adc
jl
das
pop
xchg
dec
out
add
lods
inc
icebp
aad
jle
jmp
sar
div
sti
cli
mov
pop
or
aas
adc
fldenv
call
mov
sub
push
clc
xor
jl
jb
sub
and
sar
addr16
cmp
mov
inc
cdq
ins
add
mov
sti
js
sbb
(bad)
and
outs
outs
cwde
push
test
xchg
sub
mov
lock
xlat
jmp
movs
jge
xchg
mov
(bad)
(bad)
mov
cli
ds
jge
out
add
repz
js
lds
jo
and
push
fisubr
and
inc
inc
js
sbb
mov
in
pop
ror
xor
pop
not
loop
jne
retf
mov
inc
clc
xor
inc
mov
out
fisttp
dec
xchg
mov
sub
std
loop
cmp
sar
loope
xchg
sub
inc
cli
pushf
(bad)
fistp
xor
hlt
adc
leave
sub
outs
xchg
push
mov
inc
(bad)
xor
add
dec
push
xor
ds
or
adc
enter
sub
popf
xor
mov
or
mov
hlt
fucomp
mov
mov
jb
icebp
mov
inc
pop
sbb
sti
cmc
cmp
rol
ret
inc
in
rol
push
xor
push
inc
repz
int
lods
call
jle
jo
sbb
out
sbb
(bad)
fild
adc
push
cwde
jg
or
in
mov
push
pop
ret
jno
xor
aam
js
pop
jle
imul
out
xchg
fcom
in
and
or
arpl
xchg
cmps
and
pusha
in
mov
in
dec
fidivr
fcom
outs
in
xor
push
int3
call
adc
mov
push
jo
dec
test
mov
cdq
mov
imul
push
mov
xor
les
mov
scas
xchg
lea
jno
and
jmp
(bad)
(bad)
mov
jmp
xchg
cli
xor
out
inc
rcl
push
mov
shr
call
das
ins
adc
mov
mov
push
xor
ja
jns
ror
adc
cli
or
loope
sub
pushf
hlt
pop
stos
loope
push
les
repz
les
jmp
push
push
test
(bad)
cmp
mov
push
add
ret
fs
push
push
dec
jno
dec
mov
lahf
cmps
jbe
push
retf
pop
inc
leave
cmp
dec
mov
jns
aad
out
repnz
aad
je
add
gs
imul
(bad)
ins
ds
rol
icebp
les
popa
ficomp
mov
xor
xchg
rcr
sbb
mov
stos
(bad)
push
(bad)
sahf
ins
(bad)
push
add
call
dec
mov
xchg
lahf
mov
outs
mov
or
push
pop
cmc
mov
xchg
xlat
(bad)
jg
pop
add
mov
fbstp
lods
sbb
and
push
mov
jmp
pop
sbb
jnp
mov
lods
std
pusha
push
aaa
cmps
ins
fld
sahf
adc
inc
inc
fdivr
inc
push
mov
and
sahf
out
pop
mov
int
xchg
xchg
dec
test
out
mov
daa
lods
jmp
and
(bad)
aad
jmp
sbb
in
bound
es
pop
in
pop
ins
jge
pop
pop
test
and
aas
add
sbb
push
dec
lea
shl
or
sbb
mov
cdq
js
pop
shr
push
ss
jle
repz
mov
mov
in
add
inc
inc
stc
int3
loope
dec
mov
adc
lock
xchg
jg
pop
int
sub
aad
push
mov
push
(bad)
push
mov
ds
jecxz
sbb
jmp
sub
dec
mov
or
js
(bad)
cld
jne
or
imul
repz
(bad)
push
sbb
(bad)
int3
outs
aas
jge
xchg
pushf
xchg
jge
sub
movs
pop
cs
outs
aam
and
int3
or
shl
hlt
test
or
neg
stc
fld
out
jae
mov
mov
xchg
cmc
(bad)
lock
ss
dec
(bad)
shl
cld
jl
fucomi
and
les
jp
mov
inc
das
out
inc
imul
add
push
fbstp
jne
out
and
aaa
add
arpl
iret
xchg
or
mov
neg
mov
pop
sub
pushf
pop
outs
jmp
pusha
(bad)
sar
mov
loopne
sti
fisub
ret
retf
push
pushf
jns
cwde
mov
xchg
adc
std
test
sub
pop
iret
test
sbb
lahf
add
arpl
outs
push
jne
or
in
xchg
xchg
(bad)
int
mov
arpl
jnp
push
outs
fs
fdivr
int3
push
mov
add
aaa
pop
stos
scas
xchg
out
lods
sub
shl
xchg
iret
ss
sbb
xor
ins
adc
cmp
jmp
xchg
arpl
push
push
clc
loop
das
inc
push
dec
fcomp
cdq
scas
mov
cwde
aaa
add
imul
ror
aas
pop
pop
in
(bad)
ror
ins
mov
and
inc
cwde
in
adc
sub
test
dec
jb
push
xchg
mov
mov
retf
mov
repnz
stc
inc
mov
adc
daa
mov
sbb
jo
xor
dec
mov
into
sbb
inc
lahf
call
cmps
mov
pop
lahf
(bad)
pushf
sub
js
and
(bad)
jge
mov
std
hlt
mov
dec
pop
in
xor
stc
into
daa
sti
sbb
ror
les
arpl
adc
aam
mov
mov
imul
or
mov
cdq
xchg
or
jle
mov
push
mov
dec
scas
dec
ins
jbe
push
bound
(bad)
fcomp
loop
sar
push
(bad)
ss
mov
cwde
retf
outs
adc
push
jo
sti
sbb
aad
sbb
or
bound
mov
cmp
mov
test
xchg
cmps
xor
mov
adc
adc
xor
in
xchg
xchg
vshufps
daa
adc
pop
outs
les
fsubr
pop
jbe
sub
pop
or
dec
cmp
addr16
retf
mov
or
jle
push
push
lods
inc
dec
repnz
outs
add
out
retf
cld
dec
xchg
call
cld
jmp
or
adc
dec
ins
loope
int3
xchg
jle
movs
imul
adc
imul
fdiv
pusha
movs
push
scas
in
aaa
pop
pop
mov
ficomp
sub
pop
jmp
(bad)
xor
nop
and
adc
add
or
fcomp
cmp
sub
and
call
mov
stc
pop
call
dec
xchg
fsubr
mov
sar
and
and
cdq
push
and
pop
leave
pushf
or
pusha
shr
xchg
cmp
movs
push
push
fcomp
or
xor
pop
test
out
jns
rcl
scas
mov
(bad)
imul
(bad)
ss
lock
not
sub
inc
adc
xchg
mov
xor
mov
cmp
lock
mov
(bad)
pop
out
and
push
fxam
in
push
ins
inc
mov
pop
fwait
pop
pop
repz
pop
out
lods
pop
push
in
or
or
(bad)
or
inc
cmp
add
xchg
mov
cs
das
and
jg
add
mov
mov
fidivr
out
stos
xchg
sbb
dec
frstor
gs
arpl
test
cdq
mov
int
xchg
pop
mov
stc
fidivr
xor
fs
sub
dec
mov
daa
jp
nop
shl
fcom
or
mov
dec
arpl
clc
out
pop
dec
mov
fmul
dec
mov
pop
lds
scas
adc
out
popa
xchg
(bad)
sbb
adc
push
jno
pop
mov
sub
sbb
inc
mov
adc
lods
bound
mov
ja
dec
dec
call
int3
out
inc
and
xor
add
shl
inc
and
lahf
sub
mov
lock
out
jno
repnz
add
cmps
stc
and
rcr
sbb
push
enter
inc
cmp
sbb
iret
(bad)
fimul
clc
dec
inc
mov
push
jns
in
dec
stos
and
jae
es
jg
(bad)
fstp
mov
jb
sbb
push
fisubr
inc
push
gs
mov
jb
test
in
xchg
mov
mov
mov
xor
jne
out
sbb
jmp
fcomp
popf
sub
or
push
jle
add
fstp
add
jno
lds
cld
ror
adc
inc
or
xchg
inc
mov
leave
mov
int
repnz
or
sbb
jmp
jl
repnz
dec
mov
popa
ins
push
inc
test
or
sbb
xlat
cmp
test
sahf
jno
mov
pop
mov
retf
dec
cdq
pop
cli
jmp
push
dec
dec
es
ror
dec
xchg
xchg
jo
pop
icebp
xor
push
movs
cmp
jmp
(bad)
lea
lock
mov
sbb
ins
cwde
inc
adc
inc
push
dec
ret
push
rcr
sub
push
iret
adc
aad
sub
bound
mov
sub
sub
jb
jb
xor
sbb
xchg
jle
or
push
sub
sahf
push
mov
and
rol
or
aaa
outs
scas
test
lds
outs
sub
stos
(bad)
data16
(bad)
fidiv
mov
dec
cld
nop
ss
jae
mov
pop
ret
pop
mov
fwait
ret
push
outs
lods
jecxz
scas
cmp
sahf
jno
(bad)
push
mov
(bad)
add
mov
lock
clc
mov
or
pop
clc
inc
mov
jne
ret
mov
scas
xchg
push
loope
xor
callw
popf
repnz
push
loopne
mov
cmp
push
mov
das
cli
jle
lock
adc
repz
lods
popa
ja
mov
shr
je
pop
push
inc
jmp
cmp
mov
mov
inc
adc
in
sbb
je
icebp
mov
and
push
mov
leave
adc
push
fisub
shl
xor
or
arpl
add
stc
test
stc
(bad)
jmp
push
xor
jns
cwde
jo
(bad)
adc
push
fisub
aad
xor
or
arpl
add
cdq
stos
not
stc
mov
xchg
mov
push
xor
jns
cwde
jo
(bad)
adc
push
fisub
int3
xor
or
arpl
popf
mov
mov
stc
(bad)
popa
mov
pop
(bad)
repz
repz
jmp
mov
in
daa
jge
cdq
aas
ss
xchg
mov
in
or
and
test
jmp
push
inc
jle
pop
in
push
jmp
mov
daa
jge
mov
xchg
cmp
cli
inc
xor
clc
mov
jne
mov
sbb
jne
jbe
repnz
xor
test
call
xor
in
std
(bad)
push
out
xor
aas
mov
sahf
adc
pop
pop
not
in
lods
xor
mov
out
daa
jge
ret
sti
test
push
leave
jge
pop
loope
xor
pusha
cli
adc
mov
ins
sbb
pop
pop
xor
xor
push
ds
adc
daa
jge
sbb
in
xor
inc
xor
fisttp
ins
and
mov
xor
jns
cdq
jo
rcl
ret
push
(bad)
test
xor
or
arpl
stos
not
stc
mov
xor
jns
cdq
jo
aad
ret
push
(bad)
mov
dec
(bad)
in
loop
push
hlt
mov
dec
inc
jae
adc
pop
push
dec
shl
outs
mov
test
xchg
std
or
out
jmp
cmp
sub
or
dec
ja
stos
or
mov
jns
inc
mov
mov
sub
jo
adc
jge
daa
cmc
jb
dec
test
cmps
or
aam
xor
adc
test
sub
push
jmp
adc
push
fiadd
jge
daa
in
jecxz
(bad)
in
or
mov
stos
xchg
push
iret
adc
xchg
mov
sub
adc
inc
adc
jge
daa
mov
in
or
arpl
aam
xor
push
lds
lock
push
xor
jns
cdq
and
popa
adc
jge
daa
int3
jb
dec
movs
in
or
mov
stos
adc
(bad)
dec
mov
mov
push
inc
pop
out
sub
add
pop
adc
jge
daa
loop
jecxz
(bad)
in
pop
dec
xor
in
add
stos
not
stos
xchg
popa
mov
pop
jecxz
daa
jae
cdq
jo
ss
push
fisub
pusha
push
movs
add
dec
(bad)
in
or
call
stos
not
mov
loop
pop
sub
inc
pop
push
(bad)
cld
push
mov
ret
push
scas
adc
mov
mov
mov
aam
xor
cdq
and
jnp
jmp
mul
in
mov
pop
pop
adc
jmp
xchg
push
gs
add
or
jg
in
jns
or
xor
cdq
aaa
fdiv
test
mov
test
jns
neg
test
mov
sbb
add
jns
sbb
xchg
aaa
ret
jl
test
mov
pop
in
sub
loope
loope
adc
push
rcl
dec
sub
and
les
test
out
icebp
mov
push
pop
cmps
pop
jne
or
mov
out
adc
or
arpl
iret
les
aam
xchg
mov
mov
xor
loope
mov
adc
push
stos
or
inc
mov
test
adc
movs
outs
pop
ins
iret
les
fsub
test
mov
data16
dec
push
sbb
cdq
jo
pop
js
push
in
addr16
adc
in
cmp
arpl
fwait
not
pop
adc
and
sub
jmp
jmp
ds
jge
add
nop
movs
jge
sbb
shl
xor
stc
and
ror
in
jae
cmps
fs
xor
aam
movs
inc
xchg
cmp
(bad)
xor
popa
add
mov
xchg
mov
jnp
xchg
xor
jb
scas
or
std
in
cmp
out
sub
push
jmp
adc
push
fisub
addr16
movs
jb
dec
in
icebp
or
arpl
into
cli
pop
shl
out
stos
loop
lods
pop
pop
ds
dec
push
adc
in
push
leave
adc
dec
adc
xor
or
arpl
mov
jecxz
sbb
test
or
jge
ss
push
fiadd
(bad)
dec
mov
repz
arpl
stos
movs
push
(bad)
adc
xchg
mov
cmp
add
mov
jb
pop
add
dec
in
ret
add
std
out
and
xchg
cmp
data16
nop
ins
adc
jns
neg
test
mov
sbb
add
ins
aaa
sub
push
retf
xor
das
(bad)
adc
addps
sub
jo
ss
push
fisub
inc
daa
xor
std
in
or
adc
mov
(bad)
ss
mov
push
push
pop
aad
adc
cdq
daa
jmp
adc
push
fiadd
jge
daa
in
or
mov
aam
xor
test
pop
or
push
pop
mov
dec
jmp
adc
jge
daa
enter
mov
jmp
xor
mov
(bad)
pop
mov
pop
(bad)
sub
jo
or
push
mov
es
loopne
or
or
(bad)
fwait
push
icebp
push
mov
adc
lock
les
pop
test
arpl
out
std
sbb
push
cdq
cmp
push
repnz
outs
outs
arpl
fld
mov
cmc
out
(bad)
aas
pop
xor
inc
pop
or
jmp
adc
push
adc
pop
xor
or
lods
aam
xor
not
xchg
mov
lock
push
imul
(bad)
xor
(bad)
dec
sub
jns
jb
adc
arpl
mov
shl
push
arpl
(bad)
mov
ror
es
jns
fwait
jb
xor
fsub
dec
sub
int
fild
adc
mov
pop
imul
mov
test
js
pop
daa
jae
xchg
jo
je
mov
push
cli
addr16
daa
in
jb
dec
(bad)
in
or
call
stos
(bad)
push
cdq
adc
xchg
mov
sbb
cdq
or
ss
push
fisub
lock
fisubr
mov
mov
pushf
shl
fcomp
mov
(bad)
sub
push
xor
jns
cdq
jo
sbb
mov
or
daa
xor
gs
int
add
jno
and
stc
(bad)
or
in
mov
pop
adc
mov
stc
inc
pop
push
jecxz
(bad)
in
sqrtps
cld
(bad)
shl
cwde
adc
xchg
clc
int
jb
fcmovbe
jne
inc
in
inc
nop
sub
inc
mov
xchg
rep
mov
(bad)
jne
mov
xchg
popf
push
or
and
int
jb
mov
jne
sub
dec
ins
jg
mov
lahf
or
mov
xor
xor
not
mov
pop
ret
sub
jo
lahf
mov
out
push
fprem1
retf
not
push
fs
xchg
sbb
pop
rol
enter
jl
ud1
mov
aaa
pop
xor
in
or
push
xor
push
cmp
in
adc
fisub
je
mov
stc
(bad)
cld
push
add
das
sar
ss
jo
and
fldenv
mov
pop
daa
xor
sbb
fiadd
aaa
sbb
jae
je
test
xchg
inc
test
das
push
xor
jge
push
mov
fwait
dec
pop
arpl
clc
aas
sbb
mov
fdiv
(bad)
call
add
mov
push
mov
xchg
fld
adc
push
xchg
lods
cmps
rcr
push
xor
push
xchg
mov
push
adc
in
cmp
push
ret
jbe
mov
mov
push
pop
push
inc
in
movs
adc
push
push
scas
mov
cmc
push
jecxz
xchg
sbb
adc
push
movs
cmp
jno
ins
shl
call
icebp
rcl
or
sub
mov
dec
stc
std
dec
repnz
mov
add
jnp
jg
jge
or
push
out
pop
mov
in
pop
out
add
jmp
mov
lds
lea
ror
imul
add
lds
mov
sub
mov
xchg
mov
fild
jge
test
lea
ffree
out
push
pop
jmp
mov
jle
test
loopne
pop
in
adc
adc
cmp
cmps
fdivr
mov
out
cdq
jo
or
fdiv
ret
je
xor
and
stos
clc
and
push
xchg
outs
cmps
in
add
inc
xchg
adc
push
dec
stc
push
sbb
cmp
lahf
cli
dec
lods
jnp
inc
sub
rcr
repnz
das
or
mov
aaa
xchg
cmp
(bad)
mov
push
lods
fucomp
sbb
(bad)
jns
push
in
mov
sbb
loopne
mov
out
fst
inc
or
stos
not
lea
jnp
cli
pop
inc
mov
jmp
ss
push
xor
pushf
push
movs
cmp
jnp
std
cwde
jnp
dec
out
push
adc
nop
xchg
mov
sub
sub
jmp
outs
inc
arpl
mov
into
(bad)
cmp
int
add
call
cli
push
and
call
pop
pop
nop
add
lock
mov
xstore-rng
cmps
add
cmp
cmc
call
cmp
mov
xchg
fdivr
pop
cdq
jo
sbb
loop
jg
imul
add
arpl
outs
xor
add
push
xor
mov
call
sub
jb
push
mov
loope
mov
mov
in
aaa
clc
int3
out
adc
jns
cwde
sub
jmp
cmp
in
out
out
lods
jb
adc
or
mov
pop
retf
cs
jno
push
xor
jns
push
sbb
loopne
scas
xchg
daa
mov
xor
sbb
movs
bound
rcl
mov
inc
xor
cmp
int
push
pop
lods
sub
aad
scas
mov
mov
jb
sbb
mov
pop
pop
and
cmc
mov
popf
and
xchg
mov
cli
sahf
test
xor
shld
aaa
aaa
dec
in
pop
test
test
out
add
cdq
xor
retf
jne
jecxz
xchg
mov
adc
mov
xlat
cmp
bound
jge
mov
push
je
mov
dec
push
not
add
push
dec
lods
mov
dec
mov
inc
div
pop
loopne
fbld
pop
in
aam
mov
shl
push
xchg
mov
mov
sti
mov
es
push
dec
scas
stos
ret
imul
retf
pop
cdq
add
or
fbstp
loop
mov
push
adc
xor
cmps
fdivr
xlat
xor
dec
call
in
mov
ins
leave
pop
dec
inc
sahf
fwait
call
test
xlat
mov
stc
(bad)
js
sahf
xchg
mov
and
jns
leave
cli
in
mov
jo
lea
inc
popa
out
sbb
xchg
cmp
or
imul
mov
xor
mul
mov
lods
pop
in
retf
ret
push
or
pushf
and
in
int
add
jecxz
add
mov
xchg
jmp
xchg
test
push
sbb
sub
or
xor
fwait
(bad)
out
bound
(bad)
clc
inc
out
icebp
lea
add
jns
pop
test
stos
cld
push
mov
mov
adc
sbb
sar
stos
not
xor
jp
cmps
xor
cmp
fidivr
xchg
fs
xchg
daa
and
mul
lods
or
mov
or
arpl
fwait
dec
dec
jmp
jno
(bad)
mov
inc
call
pop
sub
test
addr16
sub
sbb
cmp
dec
dec
adc
lock
repnz
fs
xchg
mov
jmp
xor
setg
shl
aas
mov
sbb
sub
jecxz
jmp
je
mov
mov
inc
jne
add
clc
xor
xchg
cs
jge
cmp
mov
lock
leave
jmp
cmps
popa
mov
jge
push
adc
mov
jmp
aam
stos
test
mov
xchg
in
dec
mov
sbb
retf
aam
xor
sahf
ins
inc
cmps
add
pop
mov
cmp
dec
adc
push
popf
sub
outs
fdivr
sti
sbb
mov
or
arpl
cli
cmp
imul
sti
mov
repz
jmp
stc
dec
xlat
dec
inc
retf
push
xchg
or
sbb
push
xchg
mov
movs
push
jle
and
enter
in
sub
mov
sar
jge
sbb
leave
mov
(bad)
in
inc
aas
or
out
sub
loope
es
and
sub
neg
ja
std
jl
aad
daa
xor
addr16
and
jp
xchg
les
or
cmp
or
fstp
leave
in
xor
push
sub
xchg
in
adc
jb
mov
sbb
jns
jecxz
adc
cmp
jmp
fisub
shl
sub
int
add
out
add
and
push
pop
inc
mov
jmp
ss
test
jmp
movs
rol
sub
push
addr16
frstor
cmp
lds
(bad)
std
sbb
sbb
into
mov
inc
add
(bad)
cli
mov
addr16
fwait
cmp
pop
out
jl
jg
test
jge
mov
and
shl
in
mov
mov
cmp
dec
nop
(bad)
arpl
adc
(bad)
jae
fisub
sbb
sub
inc
jbe
mov
shl
add
movs
shl
sbb
mov
bound
aam
cmp
bound
and
test
xor
shr
xchg
sbb
pop
arpl
jmp
sub
pop
jmp
mov
dec
jnp
int3
int
enter
js
push
sub
mov
xchg
out
sahf
stos
sbb
call
sbb
div
mov
jp
adc
mov
aas
pop
jne
mov
or
arpl
cdq
mov
xor
inc
inc
jecxz
or
and
out
pop
cmps
and
(bad)
or
shr
dec
(bad)
in
dec
inc
arpl
mov
push
hlt
(bad)
dec
or
cmps
jp
xor
retf
sub
sub
enter
and
jb
inc
shl
sbb
sub
lods
lock
stos
inc
enter
test
movs
data16
hlt
out
add
inc
imul
mov
xor
xor
push
cli
jecxz
inc
and
(bad)
out
xchg
mov
adc
stos
jns
jns
clc
sub
sub
addr16
pusha
int3
pop
mov
jnp
arpl
stos
popf
stos
add
push
adc
sbb
xor
mov
mov
out
adc
sti
shr
in
xor
dec
in
ds
lea
(bad)
mov
addr16
mov
mov
jne
mov
(bad)
div
xchg
mov
xchg
xchg
mov
cdq
repz
push
int
lds
shl
pop
push
push
jo
xor
xor
int3
aas
jmp
push
pushf
sub
test
adc
(bad)
ss
(bad)
mov
int
add
adc
ds
hlt
mov
enter
and
mov
add
jge
in
sub
push
jns
mov
pushf
mov
jecxz
(bad)
rcr
or
fdivr
mov
adc
xlat
inc
loope
push
out
into
jmp
inc
bound
jmp
sbb
add
dec
jnp
cmp
mov
xlat
jecxz
sahf
dec
push
add
jmp
mov
xchg
scas
cmp
mov
xchg
loop
out
(bad)
mov
stos
xor
inc
mov
xchg
out
repz
daa
call
loop
in
adc
xor
sub
adc
out
add
pushf
enter
stc
(bad)
adc
rol
pop
xor
stos
ja
xor
int3
jg
jg
xchg
sub
inc
daa
xor
cwde
and
shl
inc
cmc
rcl
or
jo
neg
adc
mov
ret
iret
call
dec
(bad)
in
add
or
mov
push
test
stc
(bad)
ins
movs
cmps
repz
outs
add
pop
mov
push
rcr
js
inc
sbb
in
jb
rol
test
inc
cmp
(bad)
lock
fisubr
or
or
push
jge
or
add
and
sub
mov
ja
mov
adc
push
stc
(bad)
loop
xor
mov
xor
adc
ja
pushf
scas
popf
arpl
test
hlt
mov
xor
fstp
stos
not
dec
ret
push
and
mov
jnp
mov
je
adc
push
cld
push
pop
dec
adc
xlat
call
jecxz
sbb
popf
rcl
clc
rcr
mov
and
mov
ret
push
gs
ror
imul
ins
test
test
xor
imul
lods
pop
push
xor
xchg
cs
sbb
xor
shl
(bad)
jbe
mov
or
out
sub
jl
test
aas
adc
push
imul
(bad)
pop
cmc
push
dec
jns
sbb
mov
xchg
ins
mov
mov
pop
dec
pmovmskb
push
test
stos
adc
cmp
cmc
push
pop
jge
mov
xor
jge
stc
push
inc
out
std
pop
or
adc
retf
sahf
mul
jmp
jge
or
addr16
ss
jecxz
add
aad
cmp
stos
not
sar
je
mov
mov
pop
(bad)
cmp
ins
mov
ja
cs
ret
fisub
mov
pop
mov
add
fdiv
jl
test
mov
retf
pop
mov
movs
and
mov
and
push
lds
jg
test
(bad)
adc
inc
jne
sub
adc
mov
jo
xchg
or
int
fidiv
adc
arpl
xchg
sahf
pushf
aas
jb
sub
(bad)
in
pop
jbe
mov
rcl
mov
inc
sub
hlt
call
arpl
or
adc
mov
xchg
popa
cmp
rcl
sub
push
out
pop
mov
push
jmp
lds
xor
ret
int
add
popa
sbb
adc
shr
mov
hlt
xchg
in
pop
pop
xchg
pop
xchg
adc
push
pop
mov
cmps
sub
(bad)
in
mov
mov
or
inc
cmp
or
sub
cmp
fadd
or
or
retf
sub
daa
xor
(bad)
adc
icebp
fsubr
aas
or
nop
hlt
lea
jp
sub
fisttp
test
les
add
cmc
cmp
inc
call
jg
xchg
mov
stc
(bad)
popf
jne
pusha
dec
xchg
mov
cmp
mov
retf
(bad)
sub
mov
and
add
bound
mov
or
sub
call
jmp
(bad)
and
mov
std
pop
mov
add
(bad)
mov
lds
xor
(bad)
dec
mov
rcl
fs
or
jecxz
nop
mov
rol
inc
imul
mov
or
stos
not
or
mov
fisub
jns
sub
push
xchg
scas
ja
sbb
jge
push
es
(bad)
in
lods
mov
imul
and
(bad)
(bad)
loope
sub
sub
pop
movs
aas
stc
fiadd
movs
stc
adc
lods
xor
add
sub
stos
not
fwait
mov
int3
ret
push
xor
repnz
loope
mov
or
movs
ret
inc
dec
(bad)
in
ins
jg
movs
mov
xchg
mov
mov
and
jbe
cdq
jo
dec
lahf
mov
xor
outs
sub
sub
dec
aam
xor
cli
or
sub
mov
sar
fst
js
and
shl
ror
sbb
add
xchg
mov
dec
fisubr
retf
sub
es
aam
retf
div
and
push
push
inc
cmps
(bad)
mov
cdq
or
and
and
inc
outs
(bad)
cli
div
stos
mov
xor
sub
sbb
and
rcr
in
sub
cwde
fs
test
pop
retf
push
push
inc
lods
mov
les
adc
push
xchg
cmp
cmp
dec
(bad)
in
js
or
aam
xor
stos
jnp
jge
lods
add
in
(bad)
ss
dec
mov
adc
push
jmp
push
inc
daa
xor
fcmovu
mov
and
add
inc
jecxz
sub
mov
movs
add
add
hlt
enter
fisub
xor
add
dec
(bad)
in
call
mov
not
mov
mov
(bad)
xchg
bound
into
push
lods
mov
mov
lods
pop
sbb
ror
sbb
pop
mov
test
inc
in
test
jb
mov
ret
addr16
test
jo
xchg
cmp
or
xchg
daa
cdq
pop
in
out
xor
cld
fst
pop
adc
mov
stc
mov
mov
push
xor
jo
xchg
jnp
xor
ret
push
leave
push
inc
daa
xor
sbb
arpl
retf
sbb
jecxz
mov
sub
cmp
sub
dec
mov
icebp
inc
pop
ja
xor
ins
dec
xor
mov
not
mov
shl
add
mov
data16
mov
ret
push
gs
add
sbb
nop
and
inc
jns
dec
sbb
and
stos
mov
sbb
push
push
imul
cmp
xchg
rol
movs
and
loop
pop
pusha
adc
xlat
clc
fcomp
and
sti
out
push
xor
into
mov
ret
ins
les
shr
dec
xor
sub
out
jae
or
xchg
call
(bad)
lea
dec
lods
sbb
or
xchg
sbb
js
xchg
mov
cld
xchg
and
in
jmp
repz
std
sub
pop
loope
dec
outs
call
xchg
or
shl
push
mov
dec
dec
or
movs
fcom
(bad)
(bad)
aaa
or
inc
fwait
mov
retf
fiadd
fsubr
xchg
sub
dec
cmc
imul
mov
loop
cmp
jl
sbb
lods
inc
add
pop
jns
in
stos
pop
cdq
jo
mov
retf
popf
sub
ja
mov
xchg
mov
xchg
inc
shl
arpl
adc
xchg
pop
nop
xchg
ror
mul
mov
add
addr16
out
pushf
sub
arpl
xlat
mov
int
stc
(bad)
repz
xor
mov
ret
xor
retf
(bad)
fcmovnb
mov
fcomp
(bad)
in
js
adc
stos
not
cmp
add
bndldx
mov
ret
push
xor
fwait
lods
shl
push
scas
outs
in
inc
push
and
not
mov
mov
adc
mov
ja
(bad)
jmp
sbb
pop
or
pop
lock
ins
cli
(bad)
cwde
ins
push
jle
fidivr
xchg
popa
mov
inc
lock
ja
cdq
jo
adc
fidiv
fisub
mov
dec
(bad)
in
idiv
mov
jbe
fsubr
stos
not
mov
les
outs
adc
dec
inc
sub
fidivr
cmps
pusha
imul
jb
dec
enter
add
add
mov
into
in
bound
or
or
jns
call
mov
or
nop
and
dec
out
imul
test
sbb
leave
(bad)
push
test
add
and
jg
cwde
jb
or
int
outs
fldcw
push
xor
add
fcmovu
mov
int3
jle
(bad)
fidiv
or
mov
shl
xlat
or
std
jge
add
mov
lock
fld
or
out
in
mov
stos
not
cs
mov
add
pop
in
mov
sub
jo
test
sbb
shr
hlt
data16
daa
xor
ret
and
fucomi
shl
push
mov
shl
jg
xchg
mov
fidivr
jl
pop
fdivr
cmp
es
and
inc
cs
sahf
dec
sub
mov
(bad)
xor
add
sbb
test
xchg
mov
xchg
or
test
ds
push
aad
pop
push
xchg
jp
push
call
not
cmp
jns
fidivr
jo
and
out
sahf
xchg
cmp
cmps
mov
add
ror
sbb
pop
mov
retf
xor
cld
neg
cmp
mov
inc
sbb
repnz
dec
jge
daa
add
mov
xchg
xor
(bad)
leave
or
and
stc
(bad)
data16
inc
stos
aas
push
loope
adc
imul
jge
xchg
xor
inc
mul
inc
mov
(bad)
aam
xor
add
hlt
mov
stc
(bad)
or
(bad)
dec
pop
or
inc
mov
cld
sar
test
mov
mov
mov
cmp
jmp
mov
stc
(bad)
push
mov
pop
inc
sar
cmps
bound
pop
fucom
and
jne
addr16
pop
mov
fdivr
xor
jne
enter
mov
outs
pushf
cmp
jmp
movs
movs
mov
inc
inc
sbb
out
add
ja
movs
or
or
popf
sub
jge
in
and
mov
pop
mov
out
shl
add
and
repnz
aaa
out
add
push
pop
fisub
xchg
dec
add
retf
xor
mov
jmp
push
inc
and
cmp
cmp
mov
push
stc
inc
dec
ins
or
push
shl
repnz
inc
mov
cdq
rcl
pop
push
popa
adc
add
mov
dec
sub
ins
push
dec
jge
or
sub
fdiv
fsubr
jns
add
xchg
xor
stc
(bad)
pop
in
mov
inc
xor
outs
sahf
xchg
das
pandn
jns
jnp
pop
das
cwde
jp
dec
fcos
ror
sbb
test
sbb
or
sahf
and
dec
(bad)
xor
jns
(bad)
and
jne
xchg
adc
int3
and
pop
pop
mov
test
cmps
sub
out
test
inc
sub
(bad)
std
add
mov
outs
fst
jno
xchg
ror
in
sub
pop
lock
cmp
add
retf
movs
xchg
pushf
xchg
js
jae
pop
or
mov
(bad)
aaa
or
jne
cld
outs
jge
daa
xor
fcmovne
cmps
sbb
mov
gs
cs
mov
push
inc
mov
mov
add
jmp
push
test
add
sub
leave
jge
js
retf
test
in
sbb
test
jno
sub
popa
inc
repnz
cmp
cmp
mov
les
adc
je
mov
int
out
pop
rcr
jle
popa
stos
in
out
jo
mov
test
not
or
outs
push
xor
fs
lea
and
int
ins
dec
outs
cdq
jle
dec
(bad)
in
add
sub
sbb
cld
les
adc
mov
jo
es
mov
inc
loop
inc
jge
mov
in
(bad)
sar
jns
and
aam
xor
adc
sub
dec
push
xor
(bad)
je
test
cmp
(bad)
xor
inc
and
sbb
inc
jmp
movs
mov
fadd
rol
and
adc
mul
in
(bad)
sbb
jecxz
xor
mov
stos
(bad)
test
pop
adc
add
jnp
or
and
enter
lock
sbb
xchg
lock
xchg
and
cmp
lods
ins
je
fist
mov
or
xor
push
outs
dec
iret
xchg
inc
sti
xor
inc
pop
adc
je
dec
mov
mov
xchg
stos
xor
and
cdq
cmp
jge
ret
sub
(bad)
in
das
or
(bad)
ret
and
(bad)
fstp
sbb
and
out
mov
pop
cdq
jo
xor
or
xchg
fistp
xor
sbb
inc
pop
add
fs
gs
and
(bad)
adc
fnstsw
mov
xor
ss
push
add
jb
imul
sbb
mov
push
jno
xchg
push
mov
cdq
pop
mov
enter
lods
mov
jmp
jne
or
or
jb
cmp
imul
mov
cld
cmp
mov
aas
pop
and
out
or
ss
push
dec
out
aad
or
jecxz
(bad)
in
int
out
add
in
sbb
stc
(bad)
outs
xchg
push
loop
sub
jmp
push
jl
push
aaa
lahf
jb
cmp
repnz
xor
(bad)
jmp
jbe
and
sbb
or
sub
cmp
push
or
xchg
adc
shl
sbb
cs
sahf
jb
jb
mov
retf
push
lahf
cmp
cli
sub
mov
jnp
sbb
aam
adc
(bad)
nop
jnp
cmp
btc
pop
jge
loope
and
sti
int
dec
mov
fist
mov
outs
dec
imul
dec
idiv
test
jne
pusha
(bad)
sub
scas
fnstcw
loope
or
call
pop
sti
out
shr
mov
push
adc
pusha
je
mov
jg
xor
xchg
and
dec
mov
in
inc
xor
adc
xor
(bad)
and
inc
inc
sub
pop
stc
mov
jmp
mov
sbb
sbb
fmul
cmp
dec
inc
pusha
sbb
aad
gs
(bad)
xor
mov
inc
mov
idiv
jb
lea
jmp
cmc
fsubr
cmp
mov
je
adc
sahf
xor
dec
mov
mov
call
dec
push
jp
out
sub
mov
in
retf
push
mov
xchg
pop
mov
rcr
and
stc
fdiv
mov
mov
mov
sub
arpl
or
repz
ret
jmp
mov
lods
cmc
shl
outs
inc
fisttp
mov
mov
xor
adc
popf
std
inc
add
jle
push
jne
addr16
pop
call
ror
cmps
xor
push
inc
loope
cmp
cmp
mov
sti
add
jne
ret
jno
into
call
mul
outs
mov
arpl
mov
mov
mov
and
jae
mov
fcomp
push
call
popf
stos
push
mov
jb
fst
inc
xchg
xchg
mov
push
popf
test
cmp
push
test
sar
dec
in
loope
fs
jns
bound
adc
movs
jne
inc
popf
sbb
and
shl
inc
adc
popa
mov
lods
mov
xor
xlat
add
je
adc
repz
and
jecxz
(bad)
in
fs
jnp
xchg
ret
push
cmps
or
mov
fdivr
dec
es
pop
add
in
push
cdq
push
cdq
jbe
ret
add
lahf
jg
je
movs
cdq
push
push
xchg
cdq
dec
xor
in
mov
xchg
adc
sbb
or
mov
je
sub
fisub
push
mov
and
jns
scas
loop
dec
xchg
jmp
and
je
hlt
dec
push
dec
pop
mov
mov
stc
lods
inc
push
mov
ret
hlt
or
mov
cmp
arpl
leave
sbb
cwde
inc
push
sub
bound
xor
sbb
popa
dec
nop
and
cmp
or
ins
loopne
xchg
mov
add
ds
into
pusha
aam
fwait
movs
or
(bad)
lock
xor
and
jns
mov
(bad)
outs
(bad)
ds
jle
inc
int3
mov
int
or
pop
cli
mov
(bad)
mov
imul
rcl
aaa
xchg
popf
sub
xchg
mov
mov
adc
or
arpl
mov
adc
inc
push
inc
mov
pop
dec
cdq
mov
sub
aad
fmul
jmp
es
jnp
mov
(bad)
aam
xor
fnstsw
cmp
jmp
movs
xor
sub
call
imul
lea
adc
jbe
not
add
or
xchg
fldcw
(bad)
xchg
mov
lock
out
sub
loop
out
data16
push
call
out
push
or
call
xchg
ja
(bad)
jne
stc
mov
leave
out
sub
aad
lea
addr16
inc
loope
xchg
sub
arpl
jns
inc
loope
aam
mov
inc
cdq
loopne
aaa
loopne
test
add
daa
mov
adc
ret
(bad)
ror
sbb
cmc
add
cmp
stc
(bad)
popa
gs
sub
pop
out
sub
add
push
and
pop
dec
xor
loopne
pushf
fcom
add
mov
and
(bad)
dec
mov
pop
mov
add
cdq
pop
jmp
adc
push
pop
gs
daa
xor
mov
arpl
in
xor
sub
push
mov
stc
(bad)
popa
mov
pop
(bad)
sbb
jo
ss
push
fisub
inc
daa
xor
mov
arpl
sub
push
xor
or
mov
scas
sub
sbb
rcl
gs
movs
xor
(bad)
mov
arpl
aam
xor
cmc
push
rcl
mov
aam
pop
scas
scas
sub
cdq
jo
fst
mov
mov
jmp
outs
ja
mov
test
xor
gs
mov
push
cmp
pop
sbb
in
jo
jl
test
add
repnz
or
push
imul
repnz
lds
inc
cmp
mov
cmp
push
jne
add
test
(bad)
xor
xor
jo
jge
(bad)
aaa
shl
scas
push
loopne
jmp
pushf
sub
add
pop
jne
push
adc
in
jecxz
xchg
in
addr16
test
arpl
(bad)
xchg
push
pop
pop
mov
adc
xor
cmp
stc
cld
sbb
push
fsubr
adc
inc
repz
mov
bound
movs
mov
push
jl
cmp
jo
mov
cld
hlt
jmp
movs
push
inc
fstp
jne
push
jne
sti
jge
inc
out
mov
mov
or
add
mov
nop
test
loope
(bad)
into
cmp
out
sub
add
adc
repnz
xchg
outs
imul
jo
xchg
cmp
adc
lock
in
cmp
pushf
jp
jns
retf
add
mov
jge
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
jecxz
mov
mov
pop
push
sahf
js
xor
lds
ficomp
cmps
ret
jb
dec
(bad)
in
or
arpl
inc
xor
stos
not
stc
(bad)
in
ror
in
sub
sbb
jmp
adc
push
fisub
shl
(bad)
in
or
arpl
inc
xor
stos
not
stc
mov
xor
jns
cwde
jo
push
adc
push
(bad)
call
shl
pop
inc
aad
mov
mov
js
cmp
fs
pop
xor
je
and
dec
aad
jbe
sbb
aaa
stc
in
(bad)
add
int
cdq
jmp
(bad)
mov
mov
scas
xchg
add
out
adc
sbb
xchg
push
ja
out
dec
shl
mov
outs
pop
jo
push
cmp
jmp
aad
mov
or
xchg
mov
xchg
in
(bad)
hlt
ror
popa
or
movs
jnp
xchg
mov
es
or
and
cmc
cmp
stos
repnz
outs
call
mov
mov
mov
test
mov
xchg
sbb
(bad)
push
je
cmp
test
bound
add
cmps
cmp
push
std
fidivr
jne
inc
ror
hlt
fst
xchg
pop
cmp
in
xlat
push
ficom
in
and
mov
cmc
ss
add
es
xchg
js
je
mov
ficom
cmc
test
jne
mov
loope
shr
mov
jnp
push
push
push
outs
sbb
cs
or
or
lea
sbb
mov
xchg
jg
cmp
in
call
movs
jmp
fwait
xchg
pop
jle
push
mov
outs
cwde
arpl
cmps
or
repz
inc
adc
inc
cmps
sbb
mov
pop
bound
bound
sar
jecxz
mov
sar
lods
lods
mov
out
sbb
mov
sub
jns
test
jmp
lds
dec
loope
retf
outs
es
add
mov
(bad)
and
xor
push
mov
popa
xor
jp
popf
mov
xchg
xor
mov
pop
fisubr
sub
test
mov
enter
jl
xchg
rcl
(bad)
xchg
sbb
(bad)
pop
loope
(bad)
(bad)
loopne
aaa
lea
xchg
xor
sahf
pop
jmp
sub
add
repz
ret
pop
mov
rcl
in
cwde
ror
cld
fnstcw
sub
xchg
jmp
aam
xor
js
add
imul
xchg
mov
push
jecxz
sahf
and
mov
das
add
imul
pop
cmp
je
ss
pop
sbb
retf
sbb
cmp
jne
mov
ret
dec
mov
addr16
sbb
dec
jae
pop
or
xor
adc
(bad)
cdq
rcl
mov
sub
jo
xor
ret
push
xor
inc
daa
xor
sbb
pop
inc
xor
popf
mov
mov
movs
imul
xor
sbb
shl
xchg
mov
pop
arpl
inc
xor
and
(bad)
sub
je
push
cmps
imul
xor
xor
es
stos
shl
xchg
js
pop
arpl
inc
xor
es
xchg
cwde
mov
mov
je
cmc
mov
xor
inc
lahf
sub
es
test
xchg
call
xor
mov
test
mov
(bad)
je
pop
mov
xor
mov
es
mov
jb
fiadd
arpl
mov
loopne
mov
mov
je
lock
xor
mov
dec
es
mov
jb
fild
arpl
inc
xor
xchg
mov
les
mov
xor
out
cdq
sub
addr16
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
mov
add
sbb
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
aaa
xor
cmp
push
jbe
ret
add
cwde
add
daa
xor
mov
sbb
dec
jmp
and
jnp
outs
adc
inc
fwait
jnp
rcr
push
push
mov
pop
add
xchg
and
icebp
pop
mov
push
outs
popf
sbb
fmul
les
loop
inc
pop
pop
lahf
dec
shl
std
xor
pop
sti
in
or
mov
std
sub
retf
mov
outs
push
pusha
xchg
or
dec
sub
repz
inc
aad
pop
dec
jns
fdiv
mov
arpl
mov
mov
sub
inc
mov
outs
jmp
inc
popa
mov
cmp
loop
inc
dec
push
(bad)
dec
div
(bad)
xor
pop
in
or
xchg
iret
ins
mov
jmp
mov
mov
outs
push
popa
xchg
adc
inc
push
mov
adc
loopne
inc
inc
sbb
dec
lock
(bad)
xor
out
popa
or
ja
and
push
std
fidiv
retf
arpl
adc
inc
mov
and
push
sub
leave
inc
icebp
sbb
cmp
fcom
add
jmp
mov
sti
les
jl
mov
pop
inc
add
das
outs
push
(bad)
in
inc
inc
pop
xor
cmp
out
in
add
jo
sbb
imul
data16
pop
adc
stos
sbb
inc
and
dec
mov
mov
cmp
inc
aas
push
push
out
loope
push
push
lahf
xchg
popa
shl
sahf
lock
outs
fwait
pusha
xchg
pop
in
pop
mov
fs
vpackuswb
pop
xor
cmp
xchg
in
add
test
daa
xor
dec
mov
pop
ins
jo
jmp
fadd
fist
loop
inc
xchg
push
xchg
je
fisttp
test
push
xor
and
sti
lahf
mov
mov
imul
inc
cmps
jo
ss
ret
push
(bad)
sub
test
cmp
push
or
cdq
lds
es
xor
push
imul
xchg
retf
and
pop
jns
inc
dec
push
mov
rcl
(bad)
push
loopne
pop
push
imul
fistp
xchg
sbb
xchg
or
mov
inc
(bad)
jns
shl
jecxz
add
popf
sbb
sub
mov
mov
pusha
sahf
adc
aam
loopne
sub
(bad)
jp
pushw
test
fnsave
jle
cwde
xchg
jno
cmp
push
sti
mov
mov
outs
xor
pop
cmp
mov
hlt
push
cmp
sub
sbb
dec
fiadd
mov
out
mov
outs
sbb
dec
cld
fdiv
bound
pop
clc
inc
pop
mov
xor
loope
inc
jns
leave
dec
call
pop
jge
mov
mov
cs
std
mov
ins
xor
aaa
inc
retf
movs
and
(bad)
sub
xchg
inc
mov
jae
fld
add
jmp
mov
sti
in
or
push
adc
inc
movs
mov
ds
not
adc
sbb
dec
sub
sbb
aam
cmp
dec
or
xchg
xchg
sub
(bad)
xor
jns
test
mov
jmp
imul
ja
test
or
fadd
call
mov
pop
mov
sub
retf
stos
aaa
fldcw
stos
pop
in
call
stos
inc
fidivr
xlat
aam
aas
push
cli
loopne
pop
gs
pop
pusha
fwait
and
repz
in
mov
js
mov
sub
pop
mov
mov
inc
(bad)
js
shl
cmp
jnp
sbb
mov
loopne
xor
scas
clc
fsub
in
sahf
dec
push
pop
stos
dec
or
fld
xor
pop
mov
nop
je
sbb
and
test
arpl
adc
inc
retf
xlat
mov
out
inc
out
sbb
into
jo
fiadd
xor
aad
out
not
stc
(bad)
adc
sbb
sbb
repz
jmp
jge
sub
loopne
push
push
cmps
out
add
dec
repnz
mov
mov
outs
sahf
bound
out
xchg
mov
xchg
push
das
out
inc
ret
dec
pop
jb
fadd
lea
lea
add
sub
mov
inc
jg
jo
ss
ret
push
fisub
pop
pop
mov
aam
cmp
add
fwait
inc
or
test
pop
mov
fild
and
sbb
adc
inc
add
ds
nop
and
fwait
cs
std
jbe
mov
fs
lahf
inc
inc
movs
arpl
cvttps2pi
js
push
inc
sbb
into
(bad)
in
or
arpl
in
add
call
stc
mov
(bad)
imul
sub
jmp
cmp
out
dec
in
and
adc
inc
popa
js
rcl
cmp
in
or
push
cld
imul
fs
adc
sub
push
xchg
in
inc
push
sbb
dec
push
jno
in
fwait
sbb
aam
xor
psubd
xchg
mov
push
xor
dec
imul
sub
fild
jge
xlat
mov
xchg
in
repz
das
enter
movs
mov
ins
xchg
arpl
sti
inc
(bad)
cmps
adc
ret
push
cs
inc
xchg
sbb
jno
(bad)
jecxz
xor
add
sbb
not
stc
(bad)
bound
es
stos
test
repnz
inc
jmp
xchg
aam
cmp
push
sbb
loope
out
mov
test
out
jecxz
pop
dec
inc
stos
adc
dec
and
mov
xor
adc
inc
das
jp
ror
ds
push
pop
loope
add
mov
mov
sbb
adc
cli
ror
ret
push
sbb
sbb
xor
cmp
push
mov
popf
and
and
mov
outs
bound
adc
rcl
fisubr
sub
(bad)
loop
inc
push
push
fisttp
ja
fisttp
out
ja
adc
ins
push
ss
mov
push
sbb
xlat
inc
sahf
cmps
jo
ss
jmp
pop
xchg
jl
(bad)
jb
lods
push
jbe
fadd
lock
jg
pop
and
(bad)
ins
mov
mov
outs
mul
adc
pusha
shl
sub
int3
push
ror
js
add
cmc
pop
int3
out
mov
push
movs
mov
mov
imul
out
adc
inc
popf
movs
pop
(bad)
ins
sub
push
repnz
inc
rcr
and
jae
fldenv
fcomp
jmp
fisubr
sub
mov
imul
aam
mov
in
inc
mov
xor
or
arpl
in
add
and
clc
mov
test
sbb
scas
(bad)
fcom
in
mov
dec
in
jbe
fmul
in
or
out
outs
xchg
mov
xor
pop
arpl
mov
push
push
shl
stos
inc
lods
sbb
dec
in
lock
fmul
sti
xchg
add
sub
mov
push
gs
add
fisub
pop
push
iret
in
inc
inc
xlat
xor
cmp
push
repz
add
cwde
enter
(bad)
in
xchg
mov
sub
pop
fnstenv
lea
call
cmc
inc
push
cmp
add
cwde
adc
pop
daa
or
dec
mov
or
push
pop
dec
add
mov
out
dec
dec
add
das
inc
movs
ja
fisttp
in
test
xchg
xchg
xor
sub
(bad)
jl
(bad)
mov
push
sub
cdq
jo
and
jmp
out
jl
(bad)
xchg
cmp
push
mov
sahf
lds
and
mov
dec
outs
dec
sbb
fsubr
in
pop
inc
inc
push
ror
je
ficom
out
mov
scas
nop
daa
outs
stos
cs
dec
mov
mov
ins
stos
arpl
xchg
inc
lods
cmps
mov
push
fisub
call
jg
aad
cmp
push
cmc
out
add
pop
data16
sti
repnz
arpl
ins
mov
movs
dec
push
lods
inc
fstp
loop
inc
rcr
fwait
dec
addr16
fdivp
xor
out
pop
nop
stc
(bad)
mov
ins
lea
push
push
inc
and
push
mov
dec
inc
fstp
dec
dec
jecxz
(bad)
in
or
arpl
in
add
call
test
or
push
enter
add
jmp
mov
dec
adc
fld
dec
rcr
jecxz
add
xchg
sbb
ud0
(bad)
mov
ins
out
bound
mov
jb
ret
inc
mov
dec
cmp
fistp
xor
pop
retf
(bad)
xchg
jmp
mov
mov
imul
les
push
sbb
sbb
dec
lahf
jae
fstp
mov
jmp
test
shr
xchg
clc
push
mov
mov
push
mov
jmp
inc
ret
fisub
outs
pop
enter
gs
cmp
push
in
ds
fwait
xchg
pop
daa
mov
sub
out
xor
lods
mov
pop
in
retf
dec
and
stc
inc
or
in
adc
(bad)
pop
cmp
or
cs
test
aaa
xor
mov
stos
or
call
out
scas
dec
xchg
adc
(bad)
jnp
sar
in
dec
adc
sub
cld
test
ficom
push
inc
xor
push
retf
inc
lods
sbb
dec
arpl
fcmovnbe
jnp
arpl
aam
xor
jecxz
sbb
mov
jmp
push
mov
daa
lods
mov
push
and
inc
loope
xor
or
arpl
in
add
add
and
mov
outs
xor
jns
cdq
jo
shl
pop
cmp
jb
and
lock
call
pop
imul
pop
outs
int3
sub
cli
stos
mov
mov
push
sub
cdq
jo
sbb
stc
pop
xor
pop
adc
jle
aam
cmp
inc
in
add
cwde
popf
ins
daa
aad
(bad)
mov
pop
ins
adc
je
add
and
pop
xchg
sub
adc
inc
jae
or
cmp
pop
lods
in
xchg
or
das
xor
loopne
inc
mov
imul
adc
inc
push
movs
adc
push
das
push
push
(bad)
cli
inc
(bad)
sbb
jecxz
(bad)
in
or
arpl
call
sar
movs
push
pop
xchg
dec
pop
stos
inc
fmul
cld
pop
es
sub
jge
xlat
and
pop
push
xlat
loopne
pop
mov
(bad)
dec
mov
pusha
ins
mov
scas
clc
rol
loopne
inc
jecxz
xor
mov
ss
lahf
jmp
ret
adc
mov
mov
adc
mov
jmp
pop
(bad)
in
pushf
dec
arpl
mov
in
clc
xor
or
push
cld
sub
enter
sub
rcl
pop
inc
bound
enter
int
lahf
sbb
icebp
jo
ficomp
jmp
pop
sub
dec
mov
mov
push
sub
dec
jno
add
ret
push
jmp
cmp
cmp
push
enter
mov
sub
std
(bad)
mov
mov
ins
outs
fs
stos
inc
cmp
ret
fisub
jmp
xlat
idiv
sti
push
adc
or
arpl
sub
xchg
mov
imul
adc
aam
loope
push
fisub
adc
cs
pushf
jp
shl
xlat
pop
aas
in
ror
sbb
stc
(bad)
sbb
push
mov
(bad)
sbb
lods
jmp
pop
test
aaa
dec
and
push
inc
sar
lea
push
mov
test
popf
sbb
sub
das
mov
outs
or
adc
inc
fbld
sahf
push
pusha
out
inc
iret
sbb
or
(bad)
or
mov
stc
(bad)
jbe
repnz
daa
sbb
dec
jmp
pop
pop
shr
dec
mov
xor
sar
adc
add
lods
addr16
es
repz
cld
imul
int3
dec
jno
jg
sub
pop
dec
call
jp
shl
aas
xor
loope
push
fcomp
mov
mov
std
sbb
dec
sti
scas
push
fcom
sub
push
inc
loop
inc
mov
mov
(bad)
xor
push
inc
xchg
not
sti
(bad)
jne
xchg
mov
pushf
imul
dec
imul
push
fsub
jno
mov
aad
cmp
test
fwait
jae
cmp
mov
sub
dec
pop
test
fcmovu
and
pop
mov
arpl
adc
jecxz
std
cmp
push
icebp
out
add
mov
hlt
adc
gs
dec
daa
stos
(bad)
(bad)
call
jne
pop
jl
xlat
fnstsw
push
push
jmp
cdq
retf
rep
cmc
cmp
fs
imul
aam
and
pop
mov
stos
dec
xchg
adc
inc
pop
jge
xlat
and
loopne
pop
add
and
repnz
mov
imul
hlt
fistp
out
ret
dec
icebp
adc
shl
loope
push
cmp
and
mov
sbb
dec
imul
pop
shr
retf
dec
icebp
adc
shl
loop
add
fwait
and
lock
mov
popa
outs
mov
dec
dec
imul
addr16
shr
dec
adc
sbb
xor
loop
add
popf
jmp
xchg
and
icebp
and
pusha
imul
scas
or
mov
push
pop
shr
ror
adc
das
jns
shl
jecxz
add
xchg
jecxz
stos
sub
fnsave
xchg
adc
aam
sub
push
mov
stos
inc
xchg
pop
pop
dec
pcmpeqd
(bad)
xor
pop
shr
or
sub
push
outs
pop
popa
xchg
adc
inc
pop
mov
addr16
(bad)
rol
inc
dec
das
ja
fnsave
in
dec
sbb
das
(bad)
dec
mov
mov
ins
push
bound
mov
addr16
fchs
rol
sbb
sbb
cmp
out
push
or
cs
dec
mov
mov
ins
jns
mov
mov
dec
push
jmp
sbb
dec
daa
jne
fisttp
out
test
xchg
repz
jge
mov
fs
adc
xlat
movs
adc
pop
sub
jecxz
leave
sbb
fcomp
call
or
sub
sti
jne
lea
stos
adc
out
movs
sbb
inc
sub
push
icebp
out
inc
rcr
sbb
fldcw
ficomp
jmp
adc
sub
clc
ins
mov
mov
imul
inc
iret
cmps
sub
push
das
mov
or
jecxz
rcr
and
ficomp
jmp
mov
mov
mov
push
dec
inc
jmp
pop
push
shl
rol
sbb
aaa
jno
fstp
jmp
xor
jmp
gs
adc
sbb
xor
jp
xchg
pop
sub
add
pop
cmc
inc
lahf
jle
aam
cmp
add
and
jne
push
addr16
push
lahf
test
ficomp
and
pop
dec
jmp
dec
or
xor
or
arpl
xchg
jecxz
stos
cs
dec
mov
mov
ins
jno
mov
mov
mov
or
jecxz
leave
sbb
dec
jg
arpl
jge
scas
pop
jno
(bad)
or
xchg
and
cs
mov
sbb
dec
out
add
inc
and
dec
rcl
inc
outs
jg
aad
fwait
sbb
aam
xor
call
xor
pop
imul
dec
sbb
pop
pop
aad
ret
dec
in
adc
inc
push
jge
xlat
imul
mov
cdq
cmp
es
mov
push
push
(bad)
dec
jnp
test
into
and
pop
jne
arpl
adc
ror
aas
push
push
in
loopne
pop
xor
int
pop
mov
jno
cmps
sbb
fld
lahf
pop
adc
adc
inc
xchg
jp
shr
loopne
pop
xchg
sahf
jnp
daa
and
stc
mov
xor
jns
cdq
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
out
sub
jo
ss
push
fisub
inc
daa
xor
or
arpl
aam
xor
stos
not
stc
(bad)
popa
mov
pop
fs
cdq
push
jle
pop
add
sub
data16
ss
pop
imul
aas
js
push
mov
scas
pop
ins
in
xchg
jmp
ror
push
ja
repz
cmp
or
sub
xor
jecxz
xor
cmps
or
sbb
xchg
in
pop
add
adc
hlt
cdq
add
dec
adc
dec
sbb
fs
fld
shl
jmp
mov
sub
lock
ret
popf
add
add
fcomp
pop
test
pop
sbb
jo
das
cmc
pop
scas
sbb
mov
mov
pushf
cs
jg
sub
jg
out
iret
sbb
and
jno
sub
clc
mov
xor
(bad)
mov
sbb
scas
add
xor
retf
adc
loopne
mov
mov
out
jbe
dec
add
pop
test
sbb
inc
mov
(bad)
es
rcl
aad
pop
repz
scas
and
mov
dec
lods
xchg
aaa
push
push
test
lea
mul
mov
cmp
addr16
inc
fdiv
in
call
mov
jecxz
mov
(bad)
into
cmp
out
iret
aam
mov
(bad)
rcr
inc
push
mov
mov
and
mov
cmp
dec
movs
xchg
sub
sbb
sar
test
cdq
(bad)
jl
cmp
sbb
popf
and
pushf
mov
jo
inc
mov
loopne
int
mov
clc
jmp
adc
stos
fld
cdq
inc
mov
push
hlt
mov
add
daa
pusha
ret
push
and
pop
jno
sbb
add
jno
dec
and
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
jecxz
xchg
sbb
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
(bad)
lea
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
loopne
(bad)
and
loopne
xchg
or
push
rol
loopne
test
mov
add
clc
push
mov
out
pop
retf
aaa
mov
out
push
cmp
ins
mov
mov
sub
retf
jae
add
inc
push
sub
push
fldl2t
inc
in
pop
jp
push
push
mov
xlat
add
sbb
inc
mov
xor
dec
popf
add
mov
hlt
adc
or
imul
lods
pop
and
pop
scas
jbe
pop
jmp
(bad)
jae
jg
adc
lods
jno
cmps
sub
call
enter
fnstsw
rcl
dec
sbb
ins
icebp
jbe
lock
or
pop
and
add
ds
mov
sbb
xchg
mov
cld
pop
inc
rcl
jae
sbb
xchg
jbe
fstp
lods
or
sti
pop
stos
aad
mov
jle
cmp
pop
xchg
xor
mov
jg
xor
fimul
xor
loope
cmp
mov
sbb
pop
jb
shr
call
scas
(bad)
lock
inc
fwait
sti
jb
in
add
xchg
inc
jnp
fdivr
mov
adc
leave
out
push
xlat
movs
add
mov
xor
mov
mov
add
cmp
cmp
mov
out
dec
movs
cmp
xchg
and
adc
fwait
inc
leave
sahf
aam
in
call
cdq
mov
imul
xor
push
inc
repz
pushf
mov
mov
int3
xchg
or
sbb
push
nop
adc
test
(bad)
mov
sahf
mov
lock
or
inc
test
push
jecxz
into
(bad)
repz
cdq
in
movs
add
or
imul
ds
sbb
push
dec
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
sbb
push
jmp
(bad)
jmp
add
popa
fs
imul
mov
add
data16
add
pop
add
jo
add
inc
add
add
add
add
or
push
popa
imul
add
add
add
fs
add
movs
push
dec
adc
add
add
add
add
or
push
bound
outs
ins
outs
je
cmp
add
or
push
outs
ins
jns
arpl
xor
add
add
add
adc
add
add
pop
add
popa
outs
ins
add
add
dec
addr16
lods
push
test
xchg
add
inc
sbb
add
add
add
jb
gs
add
add
or
push
or
aam
inc
add
add
add
popa
bound
jae
add
add
push
add
add
or
add
push
pushf
push
add
inc
add
add
add
add
ror
add
add
iret
jae
add
add
cwde
sbb
(bad)
(bad)
(bad)
inc
add
add
add
add
dec
inc
add
add
add
add
add
add
add
add
cmp
inc
add
(bad)
(bad)
inc
add
add
add
add
dec
inc
add
add
add
add
add
add
add
add
lock
(bad)
(bad)
(bad)
inc
add
add
add
(bad)
(bad)
(bad)
inc
add
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
inc
add
jae
add
jmp
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
and
and
push
push
push
call
fld
call
fld1
push
pop
push
pop
mov
mov
lea
push
lea
push
push
push
fstp
push
push
fld1
fstp
mov
push
fld1
push
fstp
fld
mov
push
push
fstp
call
fstp
lea
push
lea
push
push
call
fwait
add
mov
push
jmp
lea
push
lea
push
push
call
add
ret
ret
mov
mov
pop
pop
mov
pop
leave
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
push
pop
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
call
cmp
mov
jne
mov
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
jmp
mov
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
push
call
mov
call
cmp
jne
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
push
lea
push
push
lea
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
xor
cmp
jne
push
push
call
mov
mov
push
push
call
fnclex
cmp
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
mov
push
push
call
fnclex
cmp
jge
push
push
push
push
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
pop
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
lea
push
lea
push
push
call
xor
add
cmp
setne
neg
test
je
call
push
call
mov
lea
call
push
lea
push
call
push
push
call
mov
call
xor
cmp
setne
neg
mov
lea
push
lea
push
push
call
add
cmp
je
call
mov
mov
cmp
jg
cmp
jne
push
push
call
mov
mov
lea
push
push
call
fnclex
cmp
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
mov
lea
push
push
push
call
fnclex
cmp
jge
push
push
push
push
call
cmp
jne
push
push
call
mov
mov
lea
push
push
push
call
fnclex
cmp
jge
push
push
push
push
call
fld
call
fld
push
call
push
push
push
push
call
push
push
lea
push
call
push
push
push
push
call
call
lea
call
cmp
jne
push
push
call
push
fldz
pop
sub
mov
mov
mov
and
lea
movs
movs
movs
movs
sub
mov
mov
mov
mov
lea
movs
movs
movs
movs
sub
mov
mov
mov
lea
movs
movs
movs
push
movs
fstp
push
mov
call
test
fnclex
jge
push
push
push
push
call
push
pop
add
xor
jmp
call
cmp
je
call
lea
mov
lea
mov
lea
push
push
lea
push
lea
push
mov
xor
nop
inc
loopne
call
add
inc
nop
or
add
call
inc
rcl
in
cld
dec
call
lea
call
fwait
push
jmp
lea
push
lea
push
push
call
lea
push
lea
push
lea
push
lea
push
push
call
add
ret
lea
call
ret
mov
pop
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
sahf
sahf
sahf
sahf
dec
add
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
call
add
add
add
and
add
add
inc
add
dec
add
pop
add
dec
add
sub
add
add
mov
add
add
mov
add
fisub
add
add
push
add
add
add
sbb
add
add
js
add
inc
add
push
add
push
add
xor
add
add
mov
add
enter
(bad)
add
call
add
push
push
add
and
add
ss
add
pop
push
add
js
add
mov
add
push
add
mov
push
add
add
add
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
pop
pop
jbe
popa
push
cmp
js
xor
add
add
jbe
popa
push
je
dec
xor
add
add
dec
arpl
add
add
pop
popa
fs
data16
popa
outs
add
add
pop
pop
jbe
popa
inc
jb
gs
popa
jb
add
add
jbe
popa
dec
outs
inc
jae
jb
add
add
jbe
popa
push
je
push
popa
jb
outs
jbe
add
add
jbe
popa
inc
jb
gs
popa
jb
imul
pop
pop
jbe
popa
inc
outs
add
add
pop
popa
fs
imul
xor
add
pop
popa
fs
data16
gs
xor
add
pop
pop
jbe
popa
push
gs
jns
je
ins
inc
jb
outs
jb
add
pop
pop
jbe
popa
dec
jb
jae
ins
je
push
bound
add
add
fs
imul
xor
add
pop
popa
fs
imul
imul
popa
fs
imul
xor
imul
dec
jae
outs
add
add
pop
pop
jbe
popa
inc
push
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
inc
fs
data16
add
inc
jne
arpl
outs
inc
popa
ins
ins
add
add
fs
data16
je
outs
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
add
pop
inc
dec
jae
jb
add
add
inc
dec
push
pop
push
dec
dec
dec
pop
push
jne
jb
dec
outs
je
jb
popa
arpl
add
pop
pop
jbe
popa
inc
js
gs
dec
popa
outs
fs
gs
add
add
fs
data16
gs
add
add
pop
popa
fs
imul
ss
add
add
jbe
popa
inc
push
inc
js
gs
imul
pop
inc
dec
ins
outs
add
add
pop
pop
jbe
popa
dec
gs
add
add
fs
imul
xor
add
add
fs
imul
xor
imul
jbe
popa
inc
jb
gs
je
dec
imul
pop
popa
fs
imul
xor
add
add
pop
popa
fs
imul
add
pop
pop
jbe
popa
push
popa
jb
jne
add
add
jbe
popa
push
je
push
outs
inc
outs
jae
add
add
pop
pop
jbe
popa
inc
jo
xor
add
pop
inc
dec
popa
je
outs
add
add
jbe
popa
push
je
dec
outs
jbe
add
add
pop
popa
ins
ins
ins
jne
add
add
dec
je
outs
add
add
pop
inc
dec
gs
add
add
pop
pop
jbe
popa
inc
jb
gs
je
add
