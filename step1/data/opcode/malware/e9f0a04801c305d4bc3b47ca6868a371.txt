fdiv
add
add
add
add
add
add
add
add
push
add
push
adc
add
pop
add
add
adc
add
add
sub
add
xor
add
add
add
add
adc
jle
add
add
inc
or
sub
add
add
jo
add
add
sub
push
add
or
add
or
pop
add
add
jle
add
add
sub
or
add
add
xor
add
add
add
add
adc
jle
add
add
sub
push
sub
add
add
add
adc
add
or
add
add
add
add
add
add
sub
push
sub
add
sbb
add
add
push
jae
add
push
sub
add
or
add
add
add
pop
add
add
sbb
add
add
add
or
sub
add
xor
add
add
add
add
add
add
sbb
add
add
sub
add
and
or
sub
add
sub
push
add
or
sub
xor
mov
add
add
add
pop
add
or
add
add
cmp
add
jnp
add
add
dec
add
jo
and
add
or
sub
add
or
inc
or
sub
add
add
or
add
jo
outs
and
add
add
fimul
or
or
add
or
fadd
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
add
jo
jnp
add
add
rol
add
and
add
or
sub
add
or
inc
adc
add
inc
add
add
or
add
add
jo
outs
and
add
add
fimul
adc
or
fadd
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
sub
add
or
jle
add
or
add
jo
sub
add
or
jb
add
jo
jnp
add
add
push
add
jo
and
add
push
mov
add
add
outs
sub
add
add
outs
sub
add
add
add
or
add
jo
sub
add
or
jb
add
jo
mov
add
add
outs
sub
add
add
outs
sub
add
add
add
jo
jnp
add
add
sahf
add
jo
and
add
or
sub
add
or
inc
adc
adc
sub
add
add
or
pop
add
pop
jb
add
jo
outs
and
add
add
fimul
adc
outs
and
add
add
push
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
sub
add
or
jb
add
jo
jnp
add
add
pop
add
jo
and
add
or
sub
add
or
inc
adc
adc
sub
add
add
or
or
adc
jb
add
jo
outs
and
add
add
fimul
adc
outs
and
add
add
push
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
sub
add
or
jb
add
jo
jnp
add
add
movs
add
jo
and
add
or
sub
add
or
inc
adc
adc
sub
add
add
or
or
adc
jb
add
jo
outs
and
add
add
fimul
adc
outs
and
add
add
push
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
sub
add
or
jb
add
jo
jnp
add
add
sub
add
or
push
sub
add
or
inc
adc
or
inc
add
add
or
or
in
add
and
add
add
fimul
adc
or
fadd
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
sub
add
or
jb
add
jo
jnp
add
add
jb
add
and
add
or
sub
add
or
inc
adc
adc
sub
add
add
or
lldt
(bad)
or
add
outs
and
add
add
fimul
adc
outs
and
add
add
push
push
sub
pusha
sub
add
or
push
push
sub
pusha
sub
add
or
add
sub
add
or
add
sub
add
add
add
add
pop
add
add
add
inc
add
add
add
add
sahf
add
mov
or
add
je
adc
add
add
out
adc
add
add
pop
add
push
or
add
retf
fadd
or
add
cmp
adc
or
add
sub
add
add
add
adc
add
sub
add
add
add
add
sub
add
add
add
inc
sub
push
or
sub
add
jnp
add
add
and
add
add
add
sub
sub
adc
push
add
add
add
add
adc
rol
add
sub
add
or
add
add
or
add
add
sub
add
or
add
add
add
xor
add
outs
xor
add
add
jnp
add
add
outs
xor
add
add
jnp
add
add
xor
add
push
outs
xor
add
add
add
outs
add
or
add
add
add
push
pop
add
add
adc
sbb
jae
add
or
add
or
add
add
add
cmp
add
outs
cmp
add
add
jnp
add
add
clc
add
add
cmp
add
outs
cmp
add
add
jnp
add
add
jge
add
cmp
add
add
add
adc
pop
jae
add
or
add
or
add
add
add
outs
inc
add
or
add
add
add
pop
add
inc
add
or
add
add
add
outs
inc
add
or
add
add
add
inc
or
add
jae
add
or
add
or
add
sub
add
add
push
sub
add
add
push
push
jae
add
or
inc
add
or
add
sub
add
add
sub
add
add
add
add
dec
add
or
add
sub
add
add
push
sub
or
add
jb
pop
add
dec
add
or
add
sub
add
add
jb
pop
add
cmp
add
sub
add
add
push
sub
add
add
push
sub
add
add
sbb
push
add
or
add
sub
add
add
jb
pop
add
inc
add
or
add
inc
or
add
jae
add
or
push
add
or
add
sub
add
add
push
sub
add
add
sub
add
add
add
push
sub
add
add
add
add
dec
inc
add
add
add
add
or
add
jbe
xor
xor
xor
cmp
add
add
add
push
add
and
add
pop
add
xor
add
and
jb
outs
addr16
add
add
add
pop
add
and
add
sbb
add
add
add
inc
push
dec
inc
add
add
sbb
add
add
inc
ins
outs
bound
add
add
add
add
add
push
sbb
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
mov
add
add
add
push
add
add
add
add
pop
add
pop
add
pop
add
pop
add
pop
add
lahf
push
push
add
lahf
push
push
add
add
add
add
add
add
mov
pop
rol
add
push
fiadd
push
add
add
add
add
add
add
mov
or
xor
add
test
pushf
pop
rol
add
or
add
add
repz
or
test
push
add
add
add
add
add
or
add
add
add
rol
add
rol
add
rol
add
add
add
add
add
add
add
xor
or
enter
push
add
or
add
add
add
add
add
add
add
pop
adc
jb
push
or
add
add
add
or
adc
jo
push
or
adc
mov
push
add
add
add
push
rol
add
add
add
add
push
add
add
add
add
mov
push
add
add
add
sbb
add
add
add
add
add
push
inc
pop
dec
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
pop
movs
add
add
add
add
add
add
add
add
add
add
add
xchg
or
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
and
add
add
add
add
add
add
les
bound
pop
add
add
add
add
add
add
cmp
add
add
add
add
add
add
and
add
or
pop
daa
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
cmp
add
add
or
js
add
adc
js
push
add
add
or
sub
js
adc
xor
js
adc
cmp
js
adc
inc
add
adc
dec
add
adc
push
add
adc
pop
add
adc
popa
add
adc
push
adc
jno
js
adc
jns
js
adc
add
mov
js
push
add
add
add
add
push
add
add
add
add
or
add
add
add
push
add
add
add
push
add
add
pop
add
add
arpl
xor
inc
addr16
add
ins
add
add
add
pop
nop
add
fild
xchg
add
add
push
add
add
add
add
inc
push
add
ja
pushf
add
test
mov
or
add
or
add
push
add
add
add
add
add
add
push
retf
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
pop
add
add
add
add
add
add
sbb
add
loope
in
sub
add
leave
add
add
add
add
or
pop
das
add
add
xor
add
add
mov
add
add
add
add
add
or
leave
add
add
add
add
add
push
add
add
add
and
add
sbb
push
pop
bound
sbb
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
and
add
sbb
add
sbb
add
cmp
add
add
add
jno
inc
add
mov
add
add
add
arpl
mov
mov
arpl
jnp
add
rol
add
add
pop
add
lds
add
add
add
add
add
add
enter
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
jno
push
add
add
add
add
jno
rol
add
add
add
jno
mov
add
add
add
add
jp
push
add
add
add
add
add
push
add
mov
add
add
pop
add
add
add
add
jb
xor
dec
imul
je
push
imul
je
xor
cmp
outs
fs
gs
pop
inc
inc
push
push
dec
dec
dec
add
jae
gs
cs
dec
add
pop
inc
dec
dec
inc
dec
push
add
pop
dec
inc
dec
dec
push
push
inc
push
push
add
arpl
ins
imul
arpl
push
outs
fs
jb
arpl
inc
outs
jb
xor
outs
popa
add
fs
dec
outs
popa
add
add
je
inc
outs
popa
bound
add
outs
arpl
outs
outs
imul
imul
ins
jne
dec
imul
je
jne
je
outs
inc
jo
gs
jb
outs
arpl
addr16
inc
ins
popa
je
jo
gs
jb
outs
arpl
fs
jne
je
outs
jae
popa
outs
arpl
jae
je
inc
jne
outs
push
arpl
gs
outs
fs
jae
popa
add
imul
ins
add
outs
je
ins
gs
jns
gs
popa
outs
fs
add
je
jns
gs
jb
ins
dec
popa
outs
fs
add
outs
ins
outs
popa
fs
imul
push
imul
push
je
ins
add
je
inc
outs
jb
inc
outs
jb
gs
je
ins
add
je
inc
ins
popa
je
je
ins
add
outs
je
je
ins
add
je
dec
popa
ins
add
je
push
jae
jb
popa
ins
add
gs
popa
ins
add
popa
ins
dec
popa
arpl
outs
add
add
je
inc
jne
je
jb
add
je
inc
jne
je
jb
add
jae
jne
arpl
jne
je
jb
add
je
outs
outs
inc
popa
jae
add
jo
imul
push
gs
imul
add
outs
inc
ins
outs
jae
add
jo
jae
add
imul
jae
bound
je
je
add
inc
push
push
inc
je
jb
bound
add
ins
jo
ins
gs
outs
gs
je
fs
je
jb
bound
add
imul
jne
add
outs
gs
je
fs
outs
fs
je
jb
bound
add
jne
addr16
outs
outs
push
jae
jb
outs
fs
je
jb
bound
add
jne
addr16
bound
je
jb
bound
add
imul
jae
bound
je
jb
bound
add
ins
push
imul
je
jb
bound
add
jae
ins
bound
imul
imul
jae
gs
bound
jb
fs
popa
jb
inc
je
jb
bound
add
addr16
jb
ins
gs
jb
inc
je
jb
bound
add
jae
ins
bound
imul
outs
outs
inc
je
jb
bound
add
jae
ins
bound
outs
outs
imul
je
outs
outs
inc
je
jb
bound
add
jae
ins
bound
gs
jb
jo
imul
imul
outs
ins
jo
ins
popa
je
outs
outs
push
gs
popa
js
je
outs
outs
jae
je
jb
bound
add
jae
ins
bound
jb
fs
je
je
jb
bound
add
jae
ins
bound
outs
jo
jb
addr16
jb
bound
add
jae
ins
bound
outs
ins
jo
outs
jns
je
jb
bound
add
outs
je
ins
gs
outs
ins
jo
je
bound
imul
bound
add
je
popa
ins
jne
add
ins
jne
add
outs
imul
add
je
push
imul
pop
inc
outs
jb
gs
imul
pop
inc
ins
imul
add
jae
gs
cs
jne
je
ins
gs
gs
imul
push
je
imul
jo
jae
outs
add
jae
gs
cs
jb
ja
outs
add
je
dec
jae
add
je
inc
ins
popa
arpl
popa
fs
inc
ins
imul
inc
ins
outs
jae
pop
inc
ins
imul
je
ins
cs
outs
ins
jo
outs
outs
je
outs
fs
add
outs
je
imul
je
outs
ins
add
outs
addr16
ins
add
jae
gs
add
jb
add
jae
jne
arpl
popa
outs
add
imul
dec
arpl
add
je
push
push
outs
outs
add
jo
imul
add
je
dec
outs
arpl
imul
pop
inc
popa
jne
gs
popa
ins
imul
push
jns
je
ins
cs
outs
outs
imul
je
outs
outs
add
jae
gs
cs
ins
outs
bound
imul
add
jae
gs
cs
gs
arpl
outs
add
outs
je
outs
ins
inc
outs
ins
ins
arpl
outs
add
je
push
je
jb
push
outs
jae
je
outs
outs
add
jb
push
je
jb
push
outs
jae
je
outs
outs
add
je
outs
outs
add
outs
add
ins
je
jb
dec
outs
outs
add
je
push
push
push
popa
jae
bound
add
outs
fs
inc
push
ins
popa
jae
push
addr16
push
gs
jne
arpl
popa
outs
popa
addr16
inc
outs
ins
jo
outs
outs
je
gs
jne
arpl
popa
outs
popa
addr16
inc
jbe
outs
je
popa
outs
fs
gs
push
jns
je
ins
cs
outs
fs
outs
ins
cs
outs
ins
jo
ins
gs
dec
inc
outs
outs
je
imul
je
inc
outs
jb
inc
outs
ins
outs
jb
jae
je
inc
popa
arpl
outs
ins
outs
jb
jae
je
push
jae
push
imul
jns
gs
popa
arpl
outs
ins
outs
jb
arpl
add
arpl
outs
jb
dec
outs
je
je
add
jae
gs
cs
imul
imul
je
ins
cs
jne
je
ins
gs
outs
je
jb
jo
gs
imul
jae
gs
cs
jne
je
ins
gs
outs
ins
jo
ins
gs
gs
imul
jae
gs
cs
gs
jne
arpl
add
jb
jae
ins
popa
jae
push
inc
outs
jb
xor
jb
jae
jne
arpl
add
outs
imul
jo
jb
imul
outs
jne
arpl
cs
jae
jne
arpl
add
jne
imul
jae
ja
outs
imul
jo
jb
imul
bound
imul
jns
gs
inc
imul
bound
gs
inc
gs
je
jb
bound
gs
push
gs
je
jb
bound
gs
push
gs
imul
outs
je
jb
jae
addr16
inc
outs
outs
je
outs
ins
jae
push
jns
je
ins
cs
imul
inc
outs
jb
jae
push
jb
arpl
jae
arpl
jo
outs
outs
je
add
imul
outs
arpl
add
je
bound
arpl
jns
je
ins
cs
gs
outs
jo
inc
js
ins
imul
popa
jo
imul
add
je
inc
gs
jne
je
push
gs
outs
ins
jo
je
bound
gs
push
outs
fs
outs
addr16
gs
jne
je
jae
je
push
gs
ins
je
push
bound
imul
jbe
jb
outs
ins
outs
je
dec
outs
imul
inc
outs
ins
jo
outs
outs
je
addr16
push
jb
outs
jae
popa
jb
outs
je
push
outs
imul
pop
inc
outs
outs
je
push
je
jb
add
jae
outs
fs
popa
jns
jne
add
je
inc
popa
arpl
jb
jne
fs
ins
popa
addr16
popa
jns
jne
add
jae
ins
gs
popa
jns
jne
add
je
push
gs
add
je
push
popa
bound
fs
jae
je
inc
outs
outs
je
outs
ins
inc
outs
js
inc
jb
popa
je
push
jne
dec
gs
push
imul
jns
addr16
inc
jae
gs
bound
push
imul
gs
dec
jo
arpl
jns
add
ja
imul
arpl
arpl
add
jb
outs
add
add
je
imul
add
add
outs
add
jb
arpl
add
add
inc
add
add
add
add
jae
pop
add
aaa
pop
add
jo
jo
inc
add
je
popa
add
add
arpl
popa
add
add
jae
add
add
je
jb
add
popa
add
dec
push
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
jae
add
add
je
jb
add
imul
add
add
jo
inc
add
je
popa
add
add
popa
add
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
je
popa
add
je
and
dec
add
outs
add
pop
add
jb
outs
add
jb
popa
add
jae
pop
add
je
popa
add
je
jne
jo
pop
add
imul
ins
add
add
bound
jae
add
add
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
imul
ins
add
add
imul
add
add
inc
add
add
push
add
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
and
inc
add
data16
outs
add
add
pop
add
js
arpl
ins
add
jae
imul
jae
pop
add
popa
add
add
pop
add
jg
add
jo
jo
inc
add
je
popa
add
add
popa
add
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
je
popa
add
je
and
dec
add
outs
add
pop
add
jb
outs
add
jb
popa
add
jae
pop
add
je
popa
add
je
jne
jo
pop
add
pop
inc
add
add
dec
pop
add
add
jne
ins
add
outs
add
add
add
jo
ins
add
arpl
popa
add
add
outs
add
add
jb
popa
add
add
add
outs
add
je
add
js
add
ins
push
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
jo
jo
ins
add
arpl
popa
add
add
outs
add
add
jb
popa
add
add
add
outs
add
je
add
js
add
add
add
jo
jo
inc
add
je
popa
add
add
popa
add
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
je
popa
add
je
and
dec
add
outs
add
pop
add
jb
outs
add
jb
popa
add
jae
pop
add
je
popa
add
je
jne
jo
pop
add
outs
add
je
and
push
add
outs
add
add
jae
and
data16
jb
and
push
add
outs
add
add
jae
and
push
add
jae
imul
add
add
js
add
add
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
outs
add
je
and
add
jb
outs
add
add
jae
and
add
outs
add
and
add
imul
outs
add
jae
and
add
add
imul
add
add
js
add
aaa
pop
add
jo
jo
inc
add
je
popa
add
add
arpl
popa
add
add
imul
outs
add
outs
add
add
js
add
dec
push
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
imul
outs
add
outs
add
add
imul
add
add
jo
inc
add
je
popa
add
add
popa
add
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
je
popa
add
je
and
dec
add
outs
add
pop
add
jb
outs
add
jb
popa
add
jae
pop
add
je
popa
add
je
jne
jo
pop
add
imul
outs
add
outs
add
je
and
push
add
outs
add
add
jae
and
push
add
popa
add
arpl
push
add
add
js
add
js
add
add
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
imul
outs
add
outs
add
je
and
add
imul
outs
add
jae
and
add
add
jb
arpl
push
add
add
outs
add
add
add
imul
add
add
jo
inc
add
je
popa
add
add
popa
add
imul
pop
add
imul
outs
add
outs
add
je
pop
add
imul
outs
add
jae
pop
add
je
popa
add
je
and
dec
add
outs
add
pop
add
jb
outs
add
jb
popa
add
jae
pop
add
je
popa
add
je
jne
jo
pop
add
jbe
arpl
push
add
add
js
add
dec
push
add
cmp
das
add
add
ja
ja
add
jb
popa
add
je
imul
outs
add
add
add
add
jbe
arpl
push
add
add
imul
add
dec
add
arpl
jb
outs
add
outs
add
je
and
push
add
outs
add
and
push
add
jb
imul
bound
je
outs
add
ins
add
jae
add
add
add
push
add
add
arpl
outs
add
add
inc
add
jb
ins
add
add
or
outs
add
arpl
arpl
add
data16
or
mov
push
call
add
add
or
and
add
adc
add
push
add
add
add
push
add
pop
pop
pop
add
adc
push
or
add
or
add
adc
adc
adc
pop
add
or
add
adc
add
add
push
and
add
adc
and
or
add
or
add
sbb
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
push
push
add
push
push
push
push
add
add
push
push
add
adc
add
push
adc
adc
adc
and
adc
or
add
push
sbb
cmp
add
or
lds
and
add
add
and
add
or
and
adc
add
adc
and
sbb
and
push
and
add
sbb
and
add
or
and
add
and
and
add
sub
and
add
push
and
add
sub
and
add
xor
and
adc
add
add
and
add
cmp
and
sbb
push
and
add
add
or
adc
add
or
add
add
add
or
xor
mov
mov
pop
jg
aad
cmp
add
add
add
add
add
add
push
adc
push
adc
push
adc
push
push
add
or
push
adc
push
adc
add
adc
add
adc
add
add
push
add
add
or
and
add
jne
or
adc
or
adc
or
adc
add
or
add
add
push
add
add
push
add
push
jb
jo
outs
outs
inc
js
gs
imul
ja
add
add
pop
add
add
add
add
push
inc
push
ins
popa
jae
push
add
add
add
adc
jo
jb
addr16
and
xor
xor
add
sub
add
cmp
xor
arpl
sub
sub
sub
sub
arpl
popa
xor
add
add
xor
xor
xor
xor
add
add
dec
inc
push
inc
jb
ins
gs
jb
sub
gs
imul
ss
add
inc
jb
ins
gs
jb
inc
imul
popa
ins
gs
dec
inc
push
and
popa
ins
gs
jb
and
ss
add
push
jns
je
ins
cs
gs
jne
arpl
cs
outs
outs
ins
jae
push
je
outs
outs
ins
jns
jns
gs
gs
jne
arpl
jne
ins
fs
xor
xor
xor
xor
add
add
imul
je
push
imul
jne
imul
outs
jb
cs
gs
imul
imul
gs
imul
ins
gs
imul
popa
je
jb
xor
xor
xor
xor
add
add
add
add
add
add
retf
add
add
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
arpl
sub
push
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
inc
push
call
add
adc
add
add
jae
add
arpl
outs
add
add
add
inc
add
add
add
(bad)
(bad)
inc
add
add
add
add
add
add
jns
je
ins
cs
jb
ja
outs
addr16
push
gs
imul
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
xor
data16
xor
fs
add
adc
jae
gs
cs
jb
ja
outs
addr16
arpl
add
add
or
outs
outs
inc
popa
je
or
outs
outs
push
imul
push
jns
je
ins
cs
jb
ja
outs
addr16
imul
add
add
or
add
add
adc
jae
gs
cs
jb
ja
outs
addr16
imul
add
push
addr16
or
add
add
add
add
pusha
sub
add
add
add
add
add
add
add
add
push
add
add
sbb
add
add
add
add
add
and
add
add
add
push
add
xor
add
add
and
test
add
out
push
add
add
add
add
and
retf
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
sbb
add
sbb
add
or
add
add
add
add
add
add
push
pop
and
xor
adc
cmp
adc
sub
mov
and
js
adc
sub
add
add
add
add
push
add
add
add
cmp
sbb
pop
dec
and
bound
push
and
arpl
pop
dec
push
dec
pop
fnstenv
daa
packsswb
add
pop
adc
add
add
add
push
add
add
add
sub
push
pusha
inc
xor
in
push
dec
and
ja
and
fwait
js
jmp
and
cmps
jg
call
arpl
jmp
sbb
aas
sub
add
push
or
add
adc
daa
sbb
push
fcom
sub
cmp
dec
call
dec
call
jge
call
jge
jmp
dec
inc
pop
push
xor
jb
sbb
cmp
cmp
add
add
add
mov
sbb
push
sbb
imul
lahf
sub
mov
jns
(bad)
xor
pop
sbb
call
inc
sbb
pop
adc
pop
inc
sbb
inc
sbb
das
and
xor
jb
inc
jmp
dec
jmp
cmp
daa
and
(bad)
mov
fs
xor
push
sbb
sub
and
xchg
jb
call
sub
call
cmp
dec
inc
jp
lea
dec
imul
sub
inc
inc
xchg
and
mov
cmp
das
aas
cs
fsub
jnp
call
lods
call
xchg
xchg
jb
jmp
jbe
push
jo
jmp
cmp
inc
mov
dec
cwde
and
in
inc
daa
cs
and
adc
ret
sub
mov
gs
call
ja
jmp
test
(bad)
outs
cmp
(bad)
cmp
fwait
inc
call
dec
xor
pop
add
and
jmp
imul
dec
js
dec
inc
ja
sub
(bad)
dec
cmps
cmp
test
add
add
and
pop
cmp
sub
rcl
jmp
mov
dec
dec
imul
pop
pushw
inc
arpl
xor
cmp
mov
inc
dec
sahf
inc
fiadd
push
adc
(bad)
mov
and
cmp
ret
call
sbb
jle
(bad)
jmp
jmp
jmp
movs
push
in
cwde
ins
cmp
inc
inc
sub
add
cmp
add
add
(bad)
dec
leave
fldcw
dec
jmp
scas
inc
(bad)
(bad)
dec
(bad)
fdivr
ins
iret
movs
adc
add
add
and
sbb
sbb
(bad)
call
add
dec
sbb
mov
shr
jno
mov
jbe
sbb
(bad)
inc
xor
push
add
ss
add
and
pop
dec
pop
or
or
and
add
pop
add
loopne
add
rol
add
add
add
add
add
add
add
add
add
sldt
cld
aas
add
sub
add
sbb
add
xor
add
add
and
add
add
add
add
add
add
add
add
or
pop
dec
femms
or
push
or
or
push
push
push
add
add
add
add
add
add
adc
gs
or
loopne
das
adc
inc
xor
stc
inc
xor
jecxz
and
mov
push
push
add
add
add
add
add
add
add
push
pop
inc
es
or
test
call
pop
call
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
dec
push
call
pop
clc
cmp
adc
sbb
or
add
push
add
add
add
add
add
add
and
fisttp
pop
call
and
pop
push
and
imul
inc
and
sub
jp
and
jb
and
ins
pop
and
imul
out
push
or
pop
add
add
add
push
or
sub
loop
inc
sbb
pop
dec
and
push
outs
and
lods
and
mov
(bad)
mov
mov
jmp
outs
and
jle
and
ja
and
pop
aas
pop
jmp
add
add
add
and
lldt
wbinvd
and
sub
sbb
dec
dec
sub
ds
inc
push
notrack
mov
jmp
jns
jmp
test
call
dec
call
inc
jmp
xor
jle
and
pop
inc
sbb
and
or
inc
xor
add
add
add
add
add
add
add
and
sbb
pusha
push
push
call
xor
call
adc
arpl
js
xor
xchg
inc
imul
inc
cmp
call
jg
push
sbb
call
dec
call
bound
dec
adc
push
or
add
push
sbb
add
adc
fs
sbb
push
jmp
sbb
jp
xor
jns
jmp
das
push
xchg
jmp
cmp
jp
sbb
jg
addr16
dec
jmp
jl
jmp
sbb
sub
sub
add
and
sbb
dec
gs
jmp
sbb
call
je
xor
arpl
test
sub
(bad)
jl
cmp
jns
notrack
mov
call
jmp
daa
mov
sub
xchg
ins
push
dec
push
lea
stc
dec
xor
pop
call
add
sbb
dec
and
jl
and
movs
jle
dec
sbb
adc
je
xor
jmp
push
inc
jmp
push
cmp
inc
pop
jmp
inc
pop
call
jge
and
(bad)
mov
xchg
and
jmp
and
(bad)
dec
add
pop
xor
dec
test
mov
(bad)
aas
cmp
(bad)
cmp
push
jmp
dec
(bad)
cmp
call
jmp
dec
arpl
xor
xchg
(bad)
cmp
dec
(bad)
mov
cdq
and
jmp
daa
xchg
add
add
(bad)
call
cmp
daa
push
jae
jmp
mov
cmp
ds
movs
jge
push
call
je
ins
pop
jg
push
outs
jmp
push
outs
dec
lods
inc
mov
(bad)
mov
fwait
es
mov
push
sub
cmps
ja
add
push
pop
daa
(bad)
movs
jge
(bad)
mov
jbe
jmp
mov
jmp
xchg
jmp
imul
jbe
mov
push
outs
jmp
pop
je
dec
dec
scas
inc
mov
(bad)
mov
popf
sub
mov
push
das
jle
jmp
add
and
pop
sub
stos
sub
jmp
mov
jmp
popf
call
push
inc
jns
call
imul
addr16
jae
ss
xchg
push
push
(bad)
mov
mov
cmp
jo
cs
test
inc
add
add
push
es
inc
xchg
sub
cdq
js
jmp
sar
ins
sar
ins
arpl
dec
test
push
jmp
jmp
outs
jmp
(bad)
jmp
xchg
jmp
push
(bad)
mov
scas
cmp
scas
jle
(bad)
push
cmp
and
sub
adc
or
dec
push
add
and
jno
cld
rcr
jmp
mov
jmp
lahf
call
dec
jmp
pop
(bad)
jg
jo
xchg
pop
jmp
dec
dec
jbe
and
mov
es
push
dec
(bad)
fsubr
dec
call
add
add
pop
adc
add
add
push
cmp
add
pop
pop
jge
and
enter
jp
cwde
jmp
int3
jmp
test
dec
call
ins
call
inc
(bad)
push
aaa
pusha
(bad)
cmp
jp
sbb
(bad)
push
das
jle
lods
mov
(bad)
call
jnp
int
aas
and
jb
sub
adc
and
push
cmp
cmp
cdq
cmp
dec
jle
(bad)
jg
mov
(bad)
jns
mov
jo
scas
call
popf
call
xchg
dec
dec
call
mov
dec
in
dec
sub
xchg
dec
add
sbb
and
or
add
and
fwait
jo
aad
mov
push
(bad)
fsubr
push
(bad)
mov
xchg
pop
push
mov
mov
mov
jmp
les
rcr
push
add
add
ss
adc
sbb
pop
add
(bad)
inc
dec
xor
xchg
jbe
cmps
mov
lods
dec
(bad)
out
mov
ds
mov
cmp
in
mov
dec
(bad)
jmp
mov
jno
and
add
and
add
inc
add
sub
test
dec
movs
xchg
mov
movs
imul
xlat
scas
ins
not
mov
out
retf
xlat
mov
jns
cwde
jle
push
pop
inc
xor
xchg
je
add
sub
sub
add
sbb
jl
inc
xchg
jge
inc
mov
xor
pop
dec
sbb
inc
xor
(bad)
(bad)
inc
inc
jg
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
(bad)
inc
sub
add
and
add
inc
add
add
add
add
add
add
adc
add
add
or
add
adc
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
or
imul
adc
stos
sbb
or
sbb
or
add
add
push
add
add
add
add
or
push
push
sbb
or
sub
test
inc
push
dec
pop
dec
dec
pop
inc
adc
clc
xor
adc
and
or
pop
add
add
add
add
add
add
push
add
sbb
or
inc
xor
(bad)
push
inc
sbb
push
dec
push
call
and
push
dec
and
push
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
dec
sbb
inc
adc
daa
push
or
inc
add
add
add
add
or
push
push
and
or
cld
dec
ds
call
pop
call
and
pop
push
and
pop
push
and
arpl
jmp
and
imul
imul
push
pop
and
pop
and
jmp
push
call
pop
(bad)
ds
or
add
or
add
add
es
psubusw
inc
sbb
call
jmp
and
jnp
and
(bad)
outs
and
pushf
js
jmp
and
mov
js
call
push
push
and
jno
and
jmp
sbb
dec
xor
jecxz
pop
or
add
or
add
add
or
adc
dec
ss
push
dec
sbb
call
and
jp
and
sahf
js
push
and
inc
mov
inc
mov
(bad)
mov
xchg
sahf
jns
dec
imul
outs
push
sbb
dec
xor
or
add
add
add
add
add
adc
pop
dec
sbb
inc
dec
cmp
gs
cmp
test
jmp
and
push
and
mov
and
push
je
push
cmp
dec
cmp
pop
dec
cmp
ins
pop
xor
jle
and
je
sbb
dec
xor
pop
sub
sbb
add
add
and
(bad)
dec
ss
mul
sbb
pop
push
pop
dec
jmp
pop
push
and
ins
call
sbb
inc
xor
popa
sub
xchg
jns
call
popa
and
ins
pop
and
jo
and
mov
data16
pop
dec
dec
call
and
sbb
jns
dec
inc
push
dec
jb
push
sbb
cmp
adc
add
add
sbb
add
or
pop
cmp
jmp
pop
jmp
pop
call
cmp
and
jbe
sbb
adc
(bad)
cmp
arpl
test
js
aaa
(bad)
jge
cmp
(bad)
js
jmp
ins
xor
xor
mov
call
dec
call
jp
adc
jg
adc
xchg
push
inc
push
call
and
push
sbb
sbb
or
inc
xor
add
jmp
pop
push
cmp
repz
sbb
inc
pop
cmp
pop
sbb
push
sbb
sbb
(bad)
jmp
mov
push
sub
(bad)
mov
mov
push
dec
call
adc
js
sbb
cmp
stos
and
lods
mov
jmp
push
push
cli
cmp
add
add
add
add
add
add
add
push
cmp
xchg
arpl
jmp
and
jbe
and
sahf
jns
(bad)
jl
cmp
and
jbe
adc
jb
cmp
sub
call
imul
call
sub
mov
call
push
jmp
sub
jmp
and
push
jmp
mov
push
imul
add
add
(bad)
or
add
sbb
push
and
mov
jmp
pusha
cmp
sbb
adc
or
(bad)
jmp
jle
inc
push
push
daa
fs
cmp
pop
push
sub
cmp
mov
call
push
jmp
pop
cmp
sbb
xchg
pop
dec
push
push
mov
mov
jge
jmp
and
sbb
adc
es
adc
pop
adc
and
and
jne
and
jge
and
call
(bad)
jle
cmp
and
ja
sbb
jnp
adc
jb
cmp
jmp
jns
push
es
push
outs
call
jmp
sub
and
mov
and
call
sbb
pop
cmp
pop
dec
push
push
(bad)
and
lds
sub
jl
daa
in
es
xor
and
cmp
adc
pop
inc
and
jl
and
mov
movs
jge
(bad)
mov
inc
inc
fwait
push
das
xchg
call
adc
inc
xor
sub
push
sub
inc
jns
imul
inc
test
push
xor
(bad)
cmp
cdq
jmp
pop
push
nop
and
inc
xchg
sub
xchg
in
aas
das
sbb
push
xor
xor
sub
and
and
xchg
je
jmp
and
mov
jmp
mov
dec
inc
test
dec
jb
mov
jp
inc
call
imul
imul
imul
test
dec
test
(bad)
cmp
push
pop
push
nop
and
dec
fwait
das
dec
xor
cmp
xor
xor
pop
add
sbb
sbb
mov
call
test
(bad)
mov
outs
dec
jmp
mov
call
call
xchg
mov
jp
jmp
mov
jns
test
jnp
ja
dec
dec
xchg
dec
test
outs
pop
arpl
dec
dec
lods
dec
lods
(bad)
cmp
push
pusha
push
nop
and
dec
pushf
xor
mov
inc
xor
arpl
add
pop
push
add
or
push
bound
mov
movs
jle
push
mov
mov
jmp
mov
jmp
(bad)
jmp
xchg
jmp
jns
jmp
dec
xchg
dec
test
jno
dec
stos
dec
test
cmp
popf
jmp
pop
push
nop
and
dec
cwde
dec
and
pop
add
add
add
and
stos
sub
(bad)
mov
jo
jmp
mov
jmp
enter
xchg
call
jne
jmp
sahf
dec
mov
ds
and
lods
and
pop
push
push
xor
jmp
pop
push
(bad)
and
inc
nop
cmp
sbb
sbb
or
add
add
lea
add
dec
jle
daa
repnz
xor
rcl
dec
push
sar
outs
imul
imul
popf
js
call
outs
mov
dec
dec
cwde
dec
test
push
jmp
sub
jmp
cs
call
pop
jmp
xchg
sub
in
cmp
mov
push
cs
(bad)
out
test
add
add
add
add
aas
sbb
daa
pop
adc
outs
dec
and
iret
fwait
cmp
(bad)
xchg
sub
jmp
mov
jmp
retf
pop
xchg
(bad)
jg
cmp
mov
dec
mov
call
ja
call
pop
imul
and
(bad)
jmp
sub
push
mov
jmp
mov
jmp
xor
and
sub
add
add
out
inc
add
sbb
mov
hlt
retf
(bad)
fsub
inc
jmp
scas
jmp
(bad)
jmp
(bad)
call
push
inc
pop
inc
pop
call
ins
jmp
jmp
pop
push
pop
push
push
inc
pop
dec
jae
daa
es
push
pop
(bad)
jmp
daa
(bad)
push
dec
call
mov
push
inc
(bad)
dec
sti
jns
sub
add
add
push
adc
add
sub
add
sbb
push
mov
(bad)
cmp
jg
xchg
imul
ins
push
jmp
mov
inc
pop
call
(bad)
dec
dec
dec
pop
(bad)
cmp
pop
push
ss
inc
jae
and
mov
sbb
jp
test
enter
cmps
push
dec
das
sbb
pop
inc
and
pop
inc
sbb
daa
jb
and
mov
xor
in
inc
dec
pushf
push
dec
jno
(bad)
jl
int
ja
ret
jo
push
push
mov
call
cmps
dec
call
inc
cwde
push
test
call
(bad)
fbstp
cmp
pop
inc
and
xchg
push
add
adc
xor
dec
xor
das
into
mov
mov
jmp
mov
inc
mov
pushf
jmp
xchg
fwait
jmp
(bad)
xchg
call
mov
mov
inc
jnp
call
mov
push
(bad)
fbstp
dec
fld
es
(bad)
(bad)
inc
and
sldt
add
add
or
add
les
push
cmp
xor
xchg
fisub
inc
push
mov
notrack
stos
cmp
fsub
xor
aam
xor
rcr
xor
aam
xor
fbstp
dec
(bad)
in
shr
xlat
mov
pusha
(bad)
ins
push
xor
add
add
and
or
add
add
xchg
add
sbb
and
movs
and
xchg
pop
(bad)
fld
dec
push
rol
inc
push
mov
cmp
push
ret
inc
push
leave
push
(bad)
in
int
(bad)
ffree
cmp
cmps
jg
fwait
jg
(bad)
pusha
inc
sub
push
test
add
sbb
add
add
add
cmp
nop
js
xchg
call
fsubr
data16
fbstp
jo
fnstenv
xor
mov
pusha
inc
cmp
add
push
or
add
add
add
cs
jg
push
inc
xchg
jge
ins
mov
mov
test
mov
fwait
sub
jno
dec
arpl
sbb
add
add
push
pop
add
add
add
add
add
(bad)
(bad)
(bad)
push
ud0
add
inc
add
add
aas
clc
add
pop
lock
pavgb
add
loopne
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
inc
add
add
(bad)
inc
add
(bad)
(bad)
jg
(bad)
(bad)
(bad)
jmp
add
add
add
add
add
add
and
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
cmp
add
push
push
push
add
or
push
mov
or
cdq
or
or
pop
pushf
or
push
lea
pop
add
add
add
add
cmp
add
add
add
add
add
add
add
add
push
add
push
or
sbb
push
in
push
adc
sub
adc
sub
daa
adc
xor
adc
xor
adc
sub
and
repz
movntq
or
test
or
add
add
add
add
add
add
add
add
add
add
or
add
shl
por
and
adc
inc
xor
dec
adc
call
sbb
pop
inc
sbb
pop
inc
sbb
pop
inc
sbb
pop
inc
sbb
push
aas
pop
call
adc
(bad)
ds
xor
adc
and
or
mov
add
inc
add
add
add
add
add
add
or
add
sbb
or
cmp
adc
dec
xor
call
push
call
sbb
pop
dec
push
call
and
push
dec
and
push
dec
and
push
dec
and
push
push
and
push
push
and
pop
push
and
pop
push
and
pop
push
and
popa
dec
push
jmp
sbb
pop
inc
pop
dec
adc
cmp
cmc
and
or
jp
add
sub
add
or
add
or
add
cmp
invd
xchg
and
sub
inc
adc
push
aas
push
call
sbb
call
call
and
push
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
pop
push
and
jmp
jmp
and
addr16
sbb
dec
adc
out
pop
sbb
add
add
push
add
add
add
add
add
add
adc
mov
and
idiv
sub
dec
adc
push
inc
sbb
push
dec
and
push
push
and
pop
push
and
pop
push
and
pop
push
and
pusha
push
and
fs
and
imul
jmp
and
outs
pop
and
outs
pop
and
ins
pop
and
push
and
imul
jmp
jmp
daa
jmp
and
push
sbb
bound
dec
cmp
cli
das
and
(bad)
or
add
adc
add
add
add
or
pop
or
sti
cmp
adc
dec
cmp
call
and
pop
push
and
call
and
pusha
push
and
push
and
js
and
test
call
jbe
call
jp
call
ja
call
and
sub
jp
and
je
and
jno
and
outs
pusha
and
push
and
jo
sbb
pop
ds
(bad)
sub
ror
add
adc
add
add
add
pop
add
sbb
cld
inc
xor
call
sbb
push
push
and
pop
push
and
call
and
outs
pop
and
test
call
and
xchg
mov
mov
(bad)
mov
mov
(bad)
mov
xchg
lods
and
mov
je
inc
addr16
jns
and
jns
es
jp
and
jae
sbb
pop
aas
pop
(bad)
aaa
sub
ror
add
or
add
add
add
sub
sbb
stos
cmp
adc
dec
aaa
adc
push
inc
sbb
push
dec
and
push
dec
and
pop
dec
and
bound
(bad)
jl
and
cdq
jne
jmp
mov
(bad)
mov
lea
(bad)
mov
mov
(bad)
mov
mov
inc
(bad)
es
(bad)
es
(bad)
es
mov
test
call
imul
jg
and
jge
es
jns
and
call
pop
(bad)
sub
ret
add
add
add
cmp
call
sbb
push
dec
and
push
dec
and
inc
aas
sub
dec
aas
sub
popa
dec
sub
inc
ja
push
mov
(bad)
mov
lea
(bad)
mov
(bad)
es
mov
mov
(bad)
mov
(bad)
es
xchg
es
nop
daa
push
outs
inc
push
sub
push
sub
jnp
es
jnp
and
jbe
sbb
pop
inc
sbb
das
and
lahf
add
add
add
add
add
add
or
sub
jmp
call
and
push
dec
and
dec
inc
cmp
xor
push
jmp
es
push
sub
xor
push
push
dec
dec
call
ins
and
mov
mov
(bad)
mov
fs
jmp
sbb
mov
ins
pop
push
and
mov
dec
xor
push
sub
push
cs
push
sub
dec
aas
dec
(bad)
jnp
sub
xchg
inc
push
sbb
push
ds
push
push
or
add
or
add
sbb
dec
xor
sbb
pop
push
pop
call
and
pop
dec
and
dec
cmp
jo
sbb
push
jae
sbb
jb
inc
xor
sub
gs
and
mov
jno
dec
dec
and
jp
and
pop
push
and
pop
push
and
lods
xchg
call
pop
and
jbe
inc
call
sbb
call
sbb
call
and
call
cmp
xor
sub
call
and
jno
sbb
inc
xor
mov
add
add
add
add
cmp
pop
jmp
sbb
jmp
and
imul
push
inc
inc
jmp
and
and
ja
pop
adc
push
jbe
inc
ss
dec
pop
xor
xor
jo
xor
jnp
xor
(bad)
mov
pop
xor
outs
bound
dec
push
push
inc
jmp
sbb
adc
cmp
sbb
push
xor
mov
call
and
sbb
pop
inc
sbb
and
add
or
add
add
or
add
and
cdq
dec
cmp
std
addr16
sbb
popa
push
and
bound
jmp
and
test
jmp
inc
jmp
sbb
sbb
jp
and
js
sbb
jbe
inc
ss
call
jge
(bad)
jg
dec
xchg
jmp
xchg
sub
xchg
cmp
inc
cmp
mov
sub
jb
inc
call
sbb
adc
jae
adc
je
adc
jns
sbb
mov
cmp
imul
test
test
jmp
and
jae
sbb
inc
xor
mov
add
and
add
add
or
xor
cs
pop
inc
sbb
push
sbb
jmp
and
jg
and
call
call
outs
call
adc
jp
sbb
jbe
pop
adc
inc
xor
sub
mov
xchg
sub
ret
xchg
sub
les
inc
xchg
sub
ret
xchg
sub
les
sub
ret
xchg
sub
mov
push
inc
jmp
sbb
sbb
jns
sbb
js
sbb
cmp
xor
call
xchg
push
mov
mov
pop
pop
call
push
out
pop
or
add
add
add
add
dec
cmp
jmp
and
imul
call
and
push
inc
jmp
sbb
call
sbb
sbb
jno
push
adc
inc
xor
sub
mov
lea
push
jnp
jmp
jns
jmp
jg
(bad)
mov
(bad)
daa
push
pop
inc
jmp
jnp
xor
xchg
push
sub
mov
and
test
cmp
popa
call
mov
mov
and
mov
and
lods
mov
call
dec
and
cmp
push
add
add
or
es
lea
pop
std
jno
push
jmp
and
jno
and
test
jmp
and
jmp
sbb
sbb
jns
adc
or
outs
inc
pop
jmp
mov
jmp
pop
aas
call
call
dec
call
dec
call
dec
call
inc
call
mov
push
inc
jmp
daa
jl
das
sub
jmp
sub
inc
push
push
mov
(bad)
mov
xchg
jmp
pop
and
push
cmp
pop
push
sbb
add
wbinvd
add
add
pop
cmp
inc
pop
push
push
and
jnp
and
xchg
jno
jmp
xchg
call
adc
call
adc
call
or
jno
inc
cmp
mov
mov
call
xor
push
sbb
sub
outs
(bad)
cmp
arpl
and
and
js
inc
push
xchg
push
inc
jmp
and
jp
sbb
js
pop
sbb
sub
push
call
(bad)
mov
xchg
and
mov
mov
dec
inc
and
push
or
sub
add
add
pop
add
enter
push
and
ja
and
xchg
call
mov
jmp
inc
call
push
outs
call
jge
pop
adc
call
pshufw
adc
inc
cmp
mov
mov
call
sub
call
adc
xor
push
js
inc
jmp
sub
and
inc
push
test
push
inc
jmp
adc
call
pop
js
and
and
call
mov
inc
xchg
and
les
sub
cdq
push
jmp
daa
loope
sbb
cmp
add
add
push
or
cmp
aad
dec
and
jnp
and
jg
and
(bad)
outs
and
cmps
jge
(bad)
mov
xchg
jmp
cmp
sub
jg
adc
adc
dec
arpl
lahf
jp
push
sub
call
adc
inc
jno
xchg
(bad)
cmp
push
jmp
test
push
inc
push
sub
jle
sub
mov
cmp
fwait
push
sub
inc
call
mov
inc
xchg
and
enter
(bad)
sahf
sub
mov
push
sub
sub
add
add
add
add
push
push
xor
fnsave
and
and
mov
xchg
je
jmp
and
push
dec
dec
mov
jmp
sub
call
sbb
dec
inc
push
push
jne
inc
call
inc
jge
jno
mov
dec
dec
stos
(bad)
aas
cmp
jmp
test
push
inc
(bad)
aas
cmp
inc
mov
push
xor
dec
outs
call
mov
inc
xchg
and
dec
mov
sub
lock
sbb
add
add
add
add
add
add
(bad)
inc
sbb
inc
and
inc
jno
call
and
mov
xchg
jmp
mov
bound
(bad)
cmp
cwde
jmp
sbb
es
jle
push
inc
ins
call
mov
call
cmp
jp
jae
call
call
dec
call
test
jmp
pop
inc
dec
cwde
dec
stos
dec
dec
test
call
je
call
(bad)
mov
xchg
and
call
cmps
jmp
pop
das
lock
sbb
add
add
add
add
add
add
movs
arpl
pop
adc
pop
inc
and
dec
jne
jmp
test
(bad)
mov
xchg
jns
push
jmp
jmp
(bad)
call
scas
(bad)
cmp
xchg
call
je
sahf
jns
push
jbe
call
inc
mov
jbe
pop
inc
dec
cmp
inc
popf
(bad)
jp
dec
jmp
test
push
inc
dec
popf
dec
scas
dec
lods
dec
stos
push
ss
call
jbe
fwait
jbe
push
(bad)
and
dec
sahf
daa
call
test
xor
sbb
inc
pop
dec
sub
push
or
sbb
inc
and
jnp
and
call
sub
mov
daa
(bad)
mov
xchg
jl
push
jmp
mov
jmp
vdivsd
call
mov
call
mov
call
pop
mov
push
jl
dec
push
jle
dec
inc
pushf
(bad)
jp
dec
jmp
test
(bad)
jns
dec
call
mov
dec
lods
dec
stos
push
xor
ja
fwait
jbe
push
(bad)
and
dec
lahf
daa
call
stos
xor
mov
xor
sbb
and
xor
(bad)
inc
sbb
or
add
add
push
and
push
sub
push
mov
push
push
jmp
mov
jmp
(bad)
jmp
ret
(bad)
cmp
js
push
je
jmp
jmp
mov
jmp
push
xchg
dec
(bad)
jns
dec
jmp
test
call
mov
dec
dec
test
aaa
ss
call
jbe
fwait
jbe
push
mov
dec
mov
xor
(bad)
jnp
xor
sbb
push
and
add
add
add
add
add
add
add
push
dec
cmp
xor
(bad)
nop
fs
movs
sub
scas
test
mov
sub
mov
xchg
jmp
mov
push
pusha
ret
pop
mov
jmp
cmp
ja
push
jb
jmp
mov
outs
imul
stos
mov
cmp
aas
xchg
push
inc
jmp
and
call
mov
(bad)
aas
cmp
(bad)
cmp
dec
call
mov
inc
xchg
and
call
movs
cmp
cmps
jae
push
xor
and
adc
ds
sbb
dec
sub
lea
jmp
mov
(bad)
mov
mov
push
addr16
jmp
mov
imul
ins
push
(bad)
jmp
retf
jmp
cmp
jbe
jmp
sub
ins
popa
xchg
push
ret
xchg
jmp
pop
jb
xor
pop
inc
jmp
and
dec
inc
pushf
jmp
sub
push
das
xchg
push
xor
call
mov
inc
xchg
daa
(bad)
fidiv
notrack
dec
sub
add
add
add
mov
sbb
and
into
mov
jmp
nop
xor
mov
lea
push
push
mov
push
sar
outs
push
jmp
int
gs
cmp
je
jmp
outs
sub
outs
fs
(bad)
jp
sar
cmp
mov
scas
push
pop
inc
jmp
and
jg
dec
inc
jmp
and
jmp
sub
push
xor
call
mov
call
mov
ds
xchg
inc
call
xor
inc
adc
add
pop
push
cmp
daa
(bad)
movs
jo
inc
xchg
aaa
dec
xchg
xor
ret
xchg
sub
mov
daa
inc
push
sar
jb
sar
outs
push
jmp
retf
jmp
jg
fwait
jne
jmp
js
inc
mov
call
nop
ret
xchg
dec
mov
push
dec
inc
cwde
jmp
and
jmp
sub
inc
call
mov
(bad)
jmp
mov
dec
(bad)
jge
xor
ins
push
xor
(bad)
(bad)
inc
cmp
push
cmp
and
cdq
arpl
inc
(bad)
aaa
call
mov
xor
mov
push
jmp
push
sar
jno
iret
jmp
jmp
vdivsd
jne
cmp
sub
nop
jbe
inc
test
movs
mov
xchg
movs
mov
mov
ja
call
das
jmp
push
inc
xchg
call
push
mov
pop
and
sub
xchg
inc
call
daa
jmp
scas
xor
test
jmp
stos
pop
jmp
inc
and
add
add
add
add
aaa
sub
add
add
or
sbb
push
movs
notrack
mov
call
pusha
mov
push
(bad)
jmp
(bad)
pop
sar
vp4dpwssd
ret
push
xchg
cs
jmp
inc
push
inc
jo
jae
jle
outs
mov
jle
dec
push
jmp
push
inc
dec
inc
xchg
call
mov
and
nop
jmp
sub
jmp
mov
inc
(bad)
out
leave
pusha
inc
test
jle
cs
sbb
push
mov
dec
add
jmp
xor
pop
(bad)
xchg
pop
daa
inc
mov
jmp
stos
inc
call
sahf
aaa
jmp
arpl
jmp
(bad)
(bad)
(bad)
jmp
enter
cmp
aas
push
push
cmp
push
dec
jmp
outs
(bad)
cmp
gs
cmp
jmp
pop
call
pop
push
inc
(bad)
jmp
cmp
dec
inc
pop
inc
xchg
call
sbb
call
and
jmp
dec
inc
xchg
sub
lock
rcr
jmp
add
add
add
sbb
add
add
add
sbb
dec
and
mov
fwait
cmp
in
inc
dec
xchg
dec
mov
ins
into
jmp
into
push
int
pop
push
xchg
inc
pop
dec
pop
dec
pop
dec
pop
call
pop
dec
popa
dec
arpl
dec
inc
pusha
dec
inc
inc
pop
inc
push
inc
imul
xor
call
and
jmp
mov
push
fcomp
(bad)
cmp
imul
add
dec
daa
add
add
or
pop
cmp
xchg
jg
and
lods
jo
jmp
movs
inc
(bad)
jmp
inc
dec
xchg
inc
call
ins
(bad)
jmp
retf
push
int3
push
(bad)
jmp
mov
jmp
mov
jmp
mov
jmp
mov
inc
sahf
(bad)
cmp
xchg
push
xor
jmp
sub
jmp
and
call
scas
xor
hlt
rcl
in
pop
push
push
sub
in
test
add
scas
jl
add
and
sbb
push
test
mov
xor
push
mov
push
jmp
jl
call
cwde
(bad)
call
xchg
aam
xchg
xchg
sar
xchg
xchg
sar
xchg
mov
dec
xchg
(bad)
jg
mov
jmp
mov
imul
jmp
lods
jmp
lods
call
jmp
cmp
xchg
push
(bad)
fbstp
jmp
mov
(bad)
mov
pop
das
les
sbb
add
add
leave
mov
xor
inc
and
xchg
imul
jle
(bad)
fisub
dec
push
mov
pusha
inc
mov
mov
mov
mov
scas
xchg
xchg
stos
xchg
test
stos
xchg
test
test
test
cmps
lea
call
xor
xchg
jnp
call
jl
call
pop
call
lods
inc
(bad)
in
lds
lock
loop
imul
xchg
(bad)
inc
cmp
add
add
or
add
add
add
nop
arpl
xor
or
call
push
dec
xchg
inc
(bad)
in
mov
dec
(bad)
clc
mov
ds
call
test
(bad)
(bad)
call
lahf
das
call
popf
cs
pushf
sub
dec
fwait
sub
dec
call
aam
xor
loop
cmp
lock
xlat
pop
(bad)
jmp
(bad)
mov
addr16
mov
cmp
sub
or
add
dec
xor
add
pop
add
pop
inc
sub
jbe
loope
lea
mov
popf
inc
(bad)
in
mov
dec
(bad)
cld
les
cli
mov
cmp
repnz
(bad)
in
mov
(bad)
jmp
jmp
lods
xor
in
xor
in
xor
jmp
mov
dec
push
fcomp
jmp
call
mov
push
pusha
mov
adc
(bad)
mov
add
add
sbb
add
add
add
xor
cmp
dec
movs
movs
mov
mov
xchg
pop
call
sahf
dec
jmp
mov
push
ror
(bad)
dec
(bad)
stc
mov
lds
test
inc
push
les
test
push
retf
dec
push
iret
push
(bad)
out
rcr
call
les
mov
jl
mov
sbb
or
pop
cmp
add
str
inc
sub
jo
cmps
cmps
(bad)
je
mov
lahf
jne
iret
mov
pop
(bad)
(bad)
push
jmp
mov
jmp
mov
jmp
mov
gs
mov
jge
fidivr
nop
(bad)
mov
and
and
adc
(bad)
inc
add
add
jns
adc
sbb
add
push
inc
and
je
jg
mov
xchg
ja
mov
sub
mov
xchg
leave
cmps
xchg
retf
test
dec
test
mov
mov
cdq
jle
mov
jo
and
xor
or
sbb
sbb
gs
xor
imul
xchg
js
imul
arpl
ins
push
cmp
and
sub
add
add
add
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
inc
add
inc
add
inc
add
add
(bad)
clc
add
pop
inc
add
loopne
add
inc
add
rol
add
add
inc
add
inc
add
add
add
add
add
aas
add
cld
add
add
aas
add
clc
add
add
pop
add
clc
add
add
sldt
lock
add
sldt
lock
add
pop
add
loopne
add
add
add
loopne
add
add
add
rol
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
loopne
add
add
add
lock
add
pop
add
lock
add
sldt
clc
add
add
sldt
clc
add
add
pop
add
cld
add
add
aas
add
inc
add
add
add
add
add
inc
add
add
add
add
inc
add
add
add
jmp
add
pop
inc
add
clc
add
pop
inc
add
inc
add
add
(bad)
inc
add
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
(bad)
(bad)
(bad)
(bad)
inc
add
or
or
add
or
add
add
add
add
or
add
add
data16
add
inc
inc
push
js
in
std
jns
and
std
mov
cmc
in
scas
pop
in
pop
push
push
out
push
or
and
adc
dec
dec
adc
enter
mov
xchg
mov
fwait
(bad)
mov
adc
dec
xchg
inc
xchg
add
and
inc
add
and
inc
aaa
jnp
fisubr
div
out
xchg
cdq
out
(bad)
jecxz
jns
out
jge
aad
xchg
es
jbe
jp
leave
fwait
mul
cmp
fstp
push
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
sbb
inc
(bad)
shl
mov
and
aaa
pop
mov
cld
dec
das
je
cld
loopne
inc
or
std
ja
loop
cmp
outs
(bad)
stc
in
adc
js
sbb
or
pop
jmp
mov
cld
push
scas
fisttp
jecxz
les
jle
push
jp
imul
cmp
out
lock
std
mov
xor
xchg
call
je
imul
out
imul
les
mov
mov
pop
(bad)
adc
imul
pmuludq
pop
or
and
or
adc
rol
adc
adc
pop
cmps
dec
mov
sub
fld
pusha
fcomp
sbb
imul
idiv
cmp
inc
(bad)
mul
cmp
fistp
repz
hlt
cli
(bad)
in
addr16
int3
retf
pusha
movs
mov
mov
xchg
test
(bad)
clc
loopne
(bad)
sub
sar
cwde
jp
fiadd
push
push
xchg
pop
xor
cwde
or
add
loopne
dec
pusha
or
int
clc
fcmovb
faddp
fwait
and
pop
dec
leave
push
and
jl
cmc
retf
pop
jge
jmp
xchg
in
fstp
inc
popf
add
rol
cmp
ffreep
jecxz
add
pop
adc
cmp
push
mov
test
stc
std
popf
fucom
fadd
test
outs
movs
xchg
sub
cmp
out
data16
sahf
dec
xchg
jle
xchg
nop
push
add
adc
cmp
movs
sub
adc
xor
sbb
xchg
ss
movs
shr
retf
shr
mov
dec
push
xchg
cmps
push
jecxz
retf
ret
push
inc
(bad)
sti
or
dec
nop
enter
mov
pop
std
into
cs
(bad)
dec
push
shl
pop
pop
sbb
add
std
xor
add
xchg
add
xchg
sahf
pop
(bad)
sbb
dec
addr16
jge
sti
mov
xchg
xchg
(bad)
xor
sbb
sub
pop
xchg
icebp
bnd
sti
cmp
sub
test
xchg
xchg
dec
xchg
inc
xchg
sub
dec
cmp
mov
ins
cdq
inc
mov
xchg
and
sbb
ret
adc
mov
xor
jae
(bad)
(bad)
fcomp
cmp
std
lods
pop
mov
cmp
(bad)
inc
xor
rcl
inc
sub
xchg
push
scas
iret
je
in
(bad)
jmp
jl
dec
out
fdivr
pop
jmp
std
mov
jmp
int3
loopne
adc
outs
mov
inc
das
std
repz
mov
mov
mov
ror
leave
mov
je
xor
mov
lahf
sbb
retf
arpl
mov
dec
adc
mov
fstp
mov
pop
dec
xchg
push
call
out
jle
pushf
push
sahf
mov
ud1
in
lods
add
adc
inc
mov
jo
xchg
fcomp
or
outs
arpl
cmp
fcomp
frstor
or
xor
or
xchg
leave
jnp
loope
stos
(bad)
arpl
(bad)
xchg
scas
or
fcomi
inc
ret
inc
mov
sbb
add
add
fnsave
mov
and
addr16
mov
push
(bad)
mov
mov
or
push
xchg
movs
imul
les
jae
jns
adc
xchg
and
jo
leave
mov
stos
xlat
(bad)
jnp
nop
paddusw
mov
and
aas
loope
push
inc
out
inc
iret
cdq
xchg
xchg
add
ret
xor
pop
ffreep
std
int
lods
(bad)
mov
inc
arpl
mov
pop
sar
sub
mov
(bad)
pop
adc
push
scas
mov
mov
fimul
mov
push
inc
pop
sar
xor
jg
js
push
adc
loop
cmps
dec
not
jge
cwde
rol
cdq
pop
cmps
test
push
xchg
test
cmp
jo
fsub
mov
int3
test
adc
call
cld
idiv
scas
cwde
add
pop
mov
outs
movs
adc
(bad)
pop
clc
mov
imul
popa
pop
pusha
jecxz
cmp
jg
xor
(bad)
(bad)
cmp
or
jne
adc
jne
div
mov
cmp
rcr
and
jne
adc
das
mov
(bad)
out
jmp
popf
jl
mov
lds
hlt
cld
xor
adc
bound
jmp
bound
outs
out
cmp
hlt
lods
jbe
cdq
cmp
clc
test
adc
cli
popa
enter
sub
or
dec
push
aas
(bad)
out
pop
mov
or
cmps
mov
loop
or
inc
cmc
ficom
mov
push
mov
add
ret
xor
jbe
or
rcl
mov
or
inc
nop
add
lock
loopne
add
loop
or
mov
fsub
(bad)
push
in
in
repz
imul
frstor
jmp
cdq
enter
das
enter
fnstsw
scas
mov
cmc
icebp
jo
fs
dec
fsub
popa
fmul
bound
emms
mov
(bad)
loop
inc
addr16
pop
mov
inc
test
int3
or
dec
int3
jbe
ins
pushf
cmp
pop
cmp
pop
into
pushf
sar
lahf
pop
pop
push
mov
mov
add
add
inc
pusha
es
dec
(bad)
mov
push
popa
push
add
and
inc
imul
out
inc
and
xor
dec
clc
dec
adc
dec
and
push
les
push
test
jmp
and
push
cmp
ss
jecxz
xor
(bad)
pusha
arpl
xor
fcmovb
imul
push
pop
mov
lods
loop
fnsave
or
pusha
cmp
outs
rcl
jne
mov
out
pop
jnp
pop
xchg
ss
or
or
cmp
(bad)
adc
js
icebp
and
not
stos
xchg
sub
jl
js
jl
adc
jle
aam
xor
mov
arpl
jmp
(bad)
xor
sub
mov
stos
icebp
ret
mov
lahf
shl
inc
scas
sbb
in
(bad)
or
(bad)
xor
in
pop
cmp
xor
call
cwde
sbb
stos
cmovle
and
aad
nop
jge
adc
adc
or
add
and
adc
add
mov
cdq
xchg
xor
cmp
cdq
add
pop
data16
loope
out
fidivr
pop
imul
xor
(bad)
lea
pop
xchg
adc
xor
cld
lock
imul
cli
mov
mov
scas
adc
sub
add
jecxz
ret
jl
inc
es
outs
mov
call
addr16
mov
stc
mov
fstp
fstp
mov
js
sbb
pop
pop
cmps
outs
cmps
or
sub
sbb
sar
pusha
addr16
repnz
test
aas
sbb
xchg
adc
lods
hlt
mov
(bad)
stos
loope
xchg
inc
dec
gs
adc
sbb
fistp
mov
inc
cmp
and
push
inc
or
add
or
dec
push
leave
push
imul
add
sub
cmp
in
bound
fcomp
push
dec
shr
adc
neg
jge
in
sub
jbe
test
and
aad
mov
lods
sbb
mov
sub
jo
or
jle
sub
stos
fsubrp
jl
stc
xacquire
sub
mov
(bad)
movs
(bad)
xchg
(bad)
jl
dec
movs
push
mov
(bad)
movs
in
cmp
bound
cmp
and
nop
test
push
popa
mov
rcr
fsubr
jns
mov
dec
shr
(bad)
xchg
js
mov
adc
sbb
sbb
cwde
pop
(bad)
fimul
cmp
scas
je
or
scas
cmp
or
push
mov
inc
cmp
fdivr
dec
add
(bad)
ss
xchg
out
in
mov
adc
xor
dec
pop
dec
inc
add
dec
xor
add
pop
add
sub
daa
adc
inc
int3
int3
mov
pusha
mov
jb
sbb
and
mov
mov
push
scas
fsubp
xchg
fistp
push
pop
xchg
movs
xchg
je
call
scas
dec
aad
mov
(bad)
adc
xchg
sbb
sbb
(bad)
repz
add
stc
inc
sahf
jnp
not
dec
test
jno
clc
mov
mov
repnz
xor
shl
xchg
daa
jl
hlt
fiadd
std
add
mov
fcomp
xchg
sbb
mov
mov
mov
inc
mov
fild
rol
pop
popf
arpl
add
lock
mov
icebp
jge
sbb
cmp
adc
and
add
hlt
mov
adc
add
add
pusha
mov
xor
cwde
xchg
adc
and
xchg
sub
push
or
xor
ins
dec
pusha
mov
ror
gs
and
xor
jge
pop
bound
imul
int
mov
scas
mov
pop
sbb
clc
xchg
inc
stc
mov
fistp
sub
in
outs
outs
push
push
addr16
shl
mov
mov
pop
not
pop
stc
inc
cmps
xlat
ins
sub
aam
cli
in
mov
push
or
dec
lahf
in
lahf
mov
mov
cmp
mov
rol
jle
mov
int
cmp
cmp
sbb
sbb
dec
adc
lock
ins
pop
in
in
inc
es
sub
jns
movs
or
scas
sub
(bad)
clc
cmc
popa
jmp
(bad)
int
daa
sbb
sub
push
cmpxchg
xchg
or
xchg
or
sub
and
add
mov
and
arpl
dec
sub
adc
fmul
mov
mov
pop
jae
ficomp
out
pop
loopne
int
jle
xchg
imul
lea
dec
cmp
int
push
das
mov
imul
shl
or
mov
inc
pushf
pop
loop
dec
stos
popf
int
cld
loopne
into
loop
pop
cs
xchg
cmps
sub
aas
hlt
hlt
mov
aam
jbe
mov
sub
and
or
(bad)
(bad)
jle
stos
pop
arpl
fstp
popa
jmp
les
gs
adc
or
ins
pop
jmp
pop
in
arpl
div
xor
leave
mov
and
add
inc
imul
test
add
shl
or
push
xchg
xchg
sub
push
sbb
sbb
shl
add
or
push
xchg
pop
bound
xor
sub
ret
sbb
shr
ror
test
lock
cmc
push
(bad)
imul
outs
repnz
ja
iret
inc
push
add
and
repz
scas
lods
mov
loope
or
shl
mov
sub
cmp
(bad)
pop
or
dec
shl
jae
aad
fstp
mov
in
xor
movs
dec
call
lock
ror
or
imul
jns
inc
cmp
add
imul
mov
ins
pushf
pushf
jne
dec
sub
and
(bad)
retf
daa
pop
nop
into
fs
hlt
xchg
sbb
sbb
xchg
(bad)
fist
mov
xchg
push
sbb
push
sbb
ret
into
nop
jge
sbb
outs
xchg
sbb
sub
push
xchg
cmp
cmp
xchg
xor
pop
push
mov
inc
sub
and
or
adc
pop
or
push
pusha
cwde
rol
shl
add
jnp
sti
js
retf
(bad)
retf
outs
repnz
movs
sub
out
fistp
sub
cmp
mov
das
(bad)
icebp
pop
lea
sbb
out
pop
ret
push
into
cmp
sar
sti
hlt
iret
sbb
(bad)
pop
jns
lahf
and
lahf
jge
push
cli
loopne
(bad)
rol
fsubr
and
xor
or
jns
add
sub
push
jl
stos
xlat
inc
jmp
xor
sar
(bad)
pop
gs
pop
(bad)
lds
inc
(bad)
dec
jne
sbb
imul
sub
out
sti
ja
popa
mov
int
sbb
(bad)
rcl
movs
addr16
mov
push
xor
xor
and
arpl
mov
adc
mov
nop
add
inc
push
daa
shr
push
call
mov
sub
je
(bad)
in
sbb
dec
imul
arpl
clc
xor
idiv
mov
jnp
xlat
pop
fld
pop
shr
mov
add
daa
add
push
pop
jbe
and
cld
mov
cwde
mov
cli
mov
call
mov
and
push
xchg
clc
call
inc
pop
pop
aas
rcr
(bad)
in
(bad)
stos
clc
xchg
sub
push
push
popf
arpl
or
jecxz
sahf
sub
and
test
and
sub
inc
call
mov
cmp
pusha
lods
xor
sbb
loopne
js
ja
inc
cmp
mov
sbb
pop
lods
sbb
ret
xchg
mov
add
push
add
pusha
pop
pusha
mov
test
sbb
push
adc
imul
sub
adc
xor
inc
xchg
mov
xchg
sub
sbb
jmp
cld
in
xchg
scas
lock
outs
pop
(bad)
fsubrp
mov
fs
movs
loopne
bound
push
ficom
pop
jns
rol
xor
inc
xor
jg
(bad)
mov
pop
std
add
and
addr16
mov
mov
cmp
xor
icebp
fcom
xchg
mov
imul
mov
loopne
std
add
test
mov
add
sbb
in
adc
rcr
inc
out
int3
add
cmps
movs
ja
out
aad
das
jmp
scas
jmp
(bad)
call
iret
jmp
cld
out
fucomi
sbb
sub
adc
(bad)
push
push
dec
inc
xchg
jnp
ret
inc
int3
rcr
inc
dec
inc
dec
inc
and
dec
bound
test
xchg
cmp
mov
mov
sbb
xor
call
mov
or
lods
xor
psllw
int
cld
lea
pop
out
mov
mov
jl
pop
cld
jecxz
sbb
cld
xchg
aad
mov
adc
lock
clc
repz
add
dec
jmp
pop
ds
jecxz
jne
addr16
jecxz
dec
push
int3
int
repz
lahf
mov
xor
dec
and
xor
cli
add
into
or
ret
ins
and
mov
cs
inc
addr16
stos
mov
adc
jne
pop
dec
mov
pop
adc
xchg
loopne
test
sbb
xchg
fld
bound
sub
mov
lahf
mov
jo
dec
inc
pusha
or
or
sub
add
mov
leave
ins
push
mov
pusha
jo
mov
mov
xchg
aam
enter
not
pusha
mov
push
dec
cwde
push
inc
jmp
fstp
stc
test
repnz
(bad)
or
push
sbb
lock
jg
or
cmp
add
push
(bad)
cmp
sub
xor
xor
into
cmp
out
shufps
(bad)
jl
jmp
iret
cmp
mov
scas
or
(bad)
std
add
adc
adc
mov
jle
mov
je
scas
mov
pop
jno
adc
xor
mov
ins
shl
in
mov
ins
sub
inc
cmc
test
or
dec
std
cwde
lock
rol
loop
int
xlat
cmc
mov
and
sub
adc
sub
test
add
mov
add
mov
jb
out
repz
imul
fidivr
xor
mov
ins
test
xchg
jb
or
ret
idiv
jmp
jns
scas
fnstsw
out
inc
(bad)
imul
std
(bad)
mov
mov
add
cmps
add
jns
add
sub
jle
mov
fild
dec
(bad)
cmp
fcom
rol
out
inc
push
in
and
or
xor
div
add
inc
repz
add
out
int3
and
adc
adc
ja
xchg
jmp
push
mov
fstp
push
out
or
movs
(bad)
aaa
mov
push
adc
cmp
aad
dec
sar
adc
and
dec
dec
mov
fadd
or
add
add
pop
cdq
jae
and
test
or
in
scas
add
addr16
test
adc
add
call
dec
clc
int
scas
bnd
mov
les
repnz
push
xchg
das
(bad)
cli
xchg
mov
add
or
fcomp
xor
js
lods
lahf
add
xchg
pop
jns
(bad)
cld
fwait
cmp
call
lods
icebp
test
jge
adc
loop
iret
rol
std
ds
sub
dec
or
push
xlat
out
sbb
clc
mov
cmp
add
or
pop
(bad)
(bad)
popa
out
test
jns
dec
iret
jb
push
add
bound
xor
xor
rol
adc
xor
std
jnp
icebp
sti
mov
cmp
cmc
arpl
mov
rcr
test
push
(bad)
push
and
adc
mov
arpl
or
inc
stc
mov
int3
int
int3
rcr
mov
retf
xchg
xor
pop
add
inc
sub
hlt
out
je
sbb
or
es
imul
and
dec
adc
xchg
adc
(bad)
jo
imul
or
retf
repnz
out
daa
(bad)
cmp
outs
out
fstp
jecxz
ret
(bad)
loopne
repz
call
mov
dec
cmp
mov
enter
cld
dec
xchg
cld
rol
push
lahf
clc
mov
retf
inc
adc
adc
xlat
mov
popf
jmp
mov
and
push
and
stos
mov
scas
(bad)
fisub
and
movs
sub
shr
xchg
call
pop
gs
push
stos
cmp
jg
dec
jg
stos
es
or
bound
adc
inc
jl
mov
and
mov
(bad)
add
ds
inc
neg
out
call
cdq
xor
es
and
arpl
dec
mov
inc
jns
adc
add
push
mov
jle
bound
inc
dec
xchg
test
jmp
sar
sub
dec
pusha
ja
jae
xchg
cmp
loop
push
dec
stos
pop
sbb
push
sbb
inc
popa
jmp
or
jns
add
adc
iret
mov
or
jno
push
int3
int3
sub
dec
aas
hlt
mov
xor
pop
adc
pop
mov
mov
jl
adc
push
dec
addr16
jg
adc
lods
mov
les
not
dec
jnp
cmps
or
sbb
sar
addr16
aas
outs
mov
cmps
out
cmp
mov
scas
(bad)
and
(bad)
mov
gs
idiv
mov
mov
xlat
cmc
imul
lods
imul
mov
mov
lahf
cmc
in
jno
rol
pop
aad
inc
jmp
inc
dec
sbb
and
sub
pop
adc
mov
inc
inc
lods
jno
xchg
sub
and
sub
out
mov
ins
popa
xchg
and
xchg
out
mov
cmp
enter
xchg
outs
or
idiv
sub
mov
jmp
les
cdq
push
out
imul
enter
daa
das
popf
movs
cdq
pop
cmovl
pop
arpl
mov
inc
or
or
add
push
cmps
iret
mov
mov
fwait
sbb
mov
sbb
push
test
pusha
and
xor
and
add
dec
movs
sbb
and
mov
adc
jmp
loopne
out
mov
jno
adc
jo
adc
ds
push
inc
clc
xchg
xchg
mov
test
adc
arpl
adc
and
in
dec
or
mov
arpl
rcl
fwait
push
mov
rcl
inc
enter
cli
or
movs
xor
pop
bound
pop
jg
out
(bad)
test
js
jecxz
retf
and
push
cmp
outs
pop
fld
xor
and
jae
or
jle
and
stc
repz
inc
jecxz
aas
retf
nop
sbb
icebp
jecxz
fadd
push
cmps
inc
das
pushf
mov
add
jnp
scas
lods
in
jecxz
fnstsw
sbb
lahf
lods
sti
scas
jge
sbb
xor
ror
popa
mov
mov
iret
or
cmp
pop
std
cmc
iret
popa
call
hlt
sar
idiv
cmp
xchg
sbb
xchg
push
and
push
icebp
repz
scas
stos
and
xor
jl
mov
xor
inc
dec
add
adc
jmp
sbb
ret
adc
push
cmp
adc
mov
pop
shl
push
and
daa
xor
cmp
xor
sbb
xlat
clc
fwait
das
mov
mov
bound
pop
(bad)
cli
jg
push
add
mov
js
sbb
and
(bad)
repnz
leave
(bad)
mov
aas
bnd
aas
std
pop
xor
iret
inc
es
pop
cmp
ds
hlt
cmp
add
aaa
mov
ja
jo
jae
push
inc
adc
adc
add
test
pop
mov
jmp
xchg
and
adc
ret
js
inc
mov
sbb
fstp
sbb
inc
stos
xor
jmp
add
outs
xchg
hlt
outs
add
les
cmove
test
xchg
mov
rol
mov
add
add
bound
daa
push
or
inc
dec
aad
and
sub
inc
push
mov
bound
gs
inc
daa
sub
and
out
pop
and
and
dec
adc
or
inc
xor
cmc
ds
jle
push
out
pop
cwde
jb
int3
cli
ja
scas
cld
jmp
aas
mov
retf
or
fisubr
pop
or
adc
cs
xor
sbb
cld
adc
adc
cmps
(bad)
mov
into
shl
pop
mov
and
into
mov
pop
pop
cmp
out
xchg
push
nop
inc
mov
dec
daa
sar
aas
addr16
pminsw
add
push
stos
mov
call
fistp
outs
and
mov
jmp
or
pop
mov
mov
popa
dec
mov
add
push
lahf
ret
scas
push
jg
mov
jbe
jl
mov
pop
cwde
jne
add
pop
xchg
cmp
and
adc
rcl
dec
(bad)
xlat
mov
test
mov
icebp
cmps
inc
stos
add
or
sub
iret
jno
jge
fistp
sub
jns
mov
test
fdivrp
cmc
in
cld
out
xor
add
xor
inc
test
cmp
adc
stc
jns
jp
scas
sub
xchg
rcl
mov
xor
ret
shl
jns
push
sbb
jmp
arpl
ror
adc
cmp
and
xlat
inc
inc
dec
int3
cmp
adc
retf
mov
ficomp
pusha
mov
dec
sbb
mov
out
pop
data16
iret
or
pop
scas
popa
add
shl
jle
jle
push
rcl
cwde
add
retf
std
fld
add
push
fdiv
push
pop
popa
add
lods
and
retf
or
and
or
and
enter
stos
mov
bound
movs
loope
cmp
(bad)
shl
mov
xchg
call
lods
ins
ins
jecxz
xlat
scas
repz
mov
mov
inc
xchg
hlt
in
jl
stc
stos
push
mov
sbb
inc
lds
mov
pusha
(bad)
not
add
jl
adc
aas
stos
mov
mov
mov
xor
jne
sbb
iret
int
lods
or
inc
mov
jbe
xchg
sub
mov
sub
nop
hlt
sti
cwde
jnp
sbb
das
sub
sub
stos
pop
xchg
mov
pop
fnstenv
sub
and
dec
adc
sbb
sbb
repnz
(bad)
movs
jmp
jbe
jb
btr
sar
outs
cmp
cmp
mov
and
(bad)
addr16
push
push
sbb
inc
and
and
pop
or
jmp
and
or
and
dec
adc
and
aam
add
push
movs
dec
call
in
xlat
dec
movs
sbb
ja
arpl
fs
ins
outs
out
loop
sub
stc
lea
jns
mov
cmp
(bad)
div
jg
cli
xchg
jle
jae
mov
add
sbb
fild
mov
mov
repz
(bad)
and
add
jbe
cs
cmp
pop
cmp
mov
sbb
fistp
bound
pusha
mov
mov
add
imul
jae
jno
fwait
data16
imul
dec
sti
adc
adc
mov
(bad)
js
ret
or
push
sbb
pop
mov
ret
sbb
inc
and
xchg
inc
cmp
aas
ds
cwde
jecxz
paddd
dec
leave
arpl
(bad)
in
cmp
fbld
fwait
xor
ss
sbb
push
inc
movs
sbb
add
jge
es
inc
cmps
sub
aad
aam
push
cmps
(bad)
pop
ror
or
push
and
retf
test
nop
aam
jne
or
mov
repz
cmp
mov
div
pop
fistp
in
scas
(bad)
jmp
lea
add
(bad)
sti
xchg
or
xor
lods
cdq
cdq
cdq
fyl2xp1
daa
jg
jg
cmps
(bad)
fbld
cmp
jo
aam
jp
loop
call
outs
push
jno
sub
mov
nop
dec
sub
mov
test
int3
jg
sbb
or
sub
(bad)
xor
pop
fsin
inc
or
sahf
pop
out
or
jmp
shl
or
adc
call
push
mov
inc
cmps
dec
add
fiadd
repz
or
inc
push
xor
movs
shr
arpl
(bad)
cmc
mov
js
jg
lea
jbe
aad
and
add
fs
test
inc
and
and
cmps
push
lods
dec
jae
dec
in
pop
sbb
inc
add
sub
or
mov
test
pop
mov
mov
xchg
mov
outs
push
fwait
(bad)
stc
mov
mov
mov
mov
cdq
rcl
js
(bad)
cmp
dec
loop
aas
not
(bad)
mov
push
and
dec
fstp
cmp
pushf
cs
cmp
sti
arpl
in
lods
adc
test
mov
mov
jbe
dec
xlat
mov
xlat
mov
lods
jne
stos
jne
pusha
mov
sbb
shl
cmp
popa
jl
fs
xchg
push
xor
xor
adc
adc
out
out
bound
or
mov
(bad)
cwde
pop
outs
xchg
sub
nop
dec
xchg
cmp
ja
cwde
adc
or
push
sbb
push
repz
jecxz
cmc
mov
push
jecxz
call
enter
cmps
enter
(bad)
xchg
je
fwait
lahf
ret
retf
int3
sub
inc
movs
mov
outs
out
loopne
out
out
loop
jo
push
xchg
inc
mov
rol
jl
xor
lods
imul
shr
pop
sbb
pop
add
sbb
call
and
popf
fstp
mov
pop
or
push
jecxz
(bad)
cli
(bad)
xlat
jle
pop
out
in
in
out
loopne
enter
sbb
in
imul
cmps
aad
hlt
(bad)
jg
daa
jmp
lods
dec
ret
stos
aad
mov
(bad)
jmp
jmp
mov
rol
add
lods
in
sub
jmp
out
jae
mov
fmul
jmp
call
in
in
loop
push
loop
dec
addr16
push
or
jne
ficomp
(bad)
fidivr
pop
fist
and
es
fld
jbe
pop
xchg
or
fisttp
mov
daa
cmp
adc
std
call
rcl
push
inc
cmp
mov
dec
cmps
shl
imul
bound
outs
or
mov
bound
pop
and
mov
mov
imul
dec
ds
or
pop
mov
retf
aas
mov
in
bound
test
pop
xor
mov
or
xchg
or
dec
and
ret
xor
cmp
sar
cmps
jb
add
xchg
dec
cdq
mov
push
sbb
cmc
fld
mov
les
jg
cmc
(bad)
cli
aas
sbb
sbb
xor
cmp
icebp
add
stc
xchg
xchg
into
(bad)
daa
xchg
repz
mov
cmp
mov
mov
xchg
arpl
or
adc
in
dec
sar
jge
mov
popf
inc
imul
iret
add
ja
mov
call
hlt
(bad)
ss
dec
or
fsub
sbb
scas
ffreep
in
xlat
scas
arpl
out
and
cmp
add
jmp
push
mov
add
pop
cmp
nop
xor
scas
jge
add
test
or
test
xor
clc
mov
lods
mov
sub
imul
retf
xrelease
movs
dec
inc
jb
stos
sub
xchg
sbb
and
or
pushf
(bad)
test
jge
ret
cmp
call
jl
xchg
jnp
loop
push
jbe
add
ror
or
movs
sub
push
ins
and
push
xchg
dec
cmps
or
fmul
xor
dec
mov
(bad)
nop
repnz
in
inc
fwait
adc
out
dec
int3
movs
sbb
cmp
jp
pusha
imul
pop
dec
popw
out
and
lock
push
dec
cld
dec
pop
cld
hlt
mov
pop
and
mov
cdq
mov
cmp
jp
fmul
xor
add
adc
pop
fwait
mov
sahf
mov
shl
cmp
xchg
test
(bad)
ret
loope
pop
ins
loope
inc
(bad)
(bad)
popf
cmp
mov
or
xor
ror
xchg
gs
lods
push
pop
mov
xchg
add
add
stc
inc
sahf
adc
popf
cwde
and
sub
xor
jnp
mov
inc
repnz
and
sahf
cwde
aam
repnz
mov
lods
dec
ins
fistp
sti
sti
sub
adc
mov
xor
fcom
adc
aas
test
ror
stos
clc
(bad)
test
xlat
test
xor
or
add
mov
and
popf
xchg
loope
and
mov
shl
nop
arpl
sub
mov
jo
imul
outs
ins
fsubp
jb
xchg
dec
(bad)
xchg
test
das
push
fistp
xor
sub
icebp
(bad)
cli
mov
int
jge
sub
loop
ja
imul
or
(bad)
test
push
in
jae
mov
jae
js
adc
jl
pop
shl
xor
adc
jnp
aas
ds
clc
in
mov
pop
jnp
adc
addr16
call
pop
ror
mov
addr16
mov
stos
add
ins
adc
icebp
(bad)
push
call
cmp
enter
mov
(bad)
sti
adc
jle
loope
test
adc
leave
pop
push
(bad)
or
dec
fnstenv
retf
xor
sbb
jno
or
jl
ja
jg
mov
add
push
fcomp
lock
lahf
call
pushf
jnp
jno
stc
out
(bad)
jg
scas
loope
bound
or
push
and
xchg
call
xor
cmp
in
cwde
movs
sbb
ret
ss
scas
lods
popa
jg
xchg
cmc
jo
push
cmps
pop
iret
not
jg
(bad)
xchg
jg
jae
cwde
ror
(bad)
loopne
sbb
lock
jo
or
rcr
std
jmp
dec
sbb
imul
cmc
imul
xchg
or
xchg
adc
fld
mov
sti
pop
cmp
or
pop
xchg
xor
mov
mov
shr
es
jb
dec
test
fdivr
or
cmp
pop
into
out
rcl
xchg
pop
(bad)
ds
icebp
arpl
iret
push
pusha
pop
dec
cli
mov
dec
(bad)
adc
xchg
mov
xor
dec
cli
jmp
cmp
ja
icebp
pop
cld
jge
or
push
and
mov
dec
dec
jmp
pop
or
push
adc
pop
pop
vcomisd
sbb
fidivr
mov
xchg
js
or
jg
inc
lock
lahf
std
imul
out
lods
loop
adc
xlat
or
sbb
aad
push
mov
jo
add
or
cdq
rol
dec
cmp
bnd
push
mov
adc
xor
fsubrp
push
fistp
(bad)
jo
mov
add
lds
scas
jle
xlat
jg
xor
jae
dec
dec
retf
loopne
adc
div
clc
(bad)
ds
pop
jecxz
je
lahf
mov
xor
mov
pop
jg
mov
les
pop
inc
test
movs
dec
inc
movs
mov
aas
or
arpl
or
or
test
fdivr
add
jae
gs
jo
pop
pop
imul
mov
push
test
jbe
les
adc
add
(bad)
cmp
sub
not
inc
loopne
sbb
sbb
rol
adc
xor
test
cmp
jmp
mov
adc
rcl
jnp
neg
add
cwde
inc
adc
es
stc
or
outs
in
int3
or
sub
movs
fld
xor
cdq
sbb
cmp
mov
cmps
mov
in
idiv
sbb
scas
ret
rcr
adc
push
(bad)
daa
jle
pop
jno
mov
lock
mov
mov
imul
call
movs
aad
call
adc
and
mov
sub
cmp
cs
push
mov
mov
sbb
div
cmp
cmp
jb
daa
and
imul
(bad)
(bad)
mov
(bad)
ficomp
add
mov
xor
add
add
idiv
lea
adc
retf
pop
mov
rcr
out
fisub
mov
sbb
int3
mov
adc
pop
sbb
lods
in
add
or
push
imul
add
int3
movs
xchg
clc
ret
sbb
(bad)
xchg
push
aad
or
cwde
mov
(bad)
daa
cmp
jmp
(bad)
cld
imul
mov
mov
mov
adc
jns
stc
ficomp
retf
es
add
mov
push
xchg
call
aas
outs
test
add
mov
xor
pop
aam
mov
cmp
loop
ret
inc
add
dec
xor
int3
inc
ret
(bad)
in
add
je
jns
mov
xchg
push
xor
xchg
fbstp
daa
and
rcl
cmp
and
or
jnp
push
rcr
popf
test
mov
repnz
pop
cdq
in
fdiv
loope
das
loopne
dec
aas
(bad)
pop
(bad)
loope
mov
mov
fnsave
adc
je
jl
pop
cmp
fcom
inc
sti
das
adc
push
into
int3
add
jb
mov
mov
faddp
int3
lods
inc
sti
out
imul
fistp
lock
(bad)
aad
ffreep
fs
push
cld
cli
sti
jp
mov
cmp
add
mov
into
ds
lahf
xchg
sub
and
push
mov
not
add
nop
dec
enter
inc
not
add
and
ficom
mov
iret
gs
pop
fdivr
cmps
add
loop
sbb
out
pusha
lock
mov
test
fcom
add
cmp
xchg
in
dec
mov
aam
mov
xor
jg
test
mov
dec
mov
pop
shl
xor
je
loopne
bound
in
mov
(bad)
sbb
sub
hlt
jne
pushf
or
inc
rcl
call
ret
and
adc
out
cwde
mov
cmp
sahf
add
loopne
(bad)
mov
ins
faddp
retf
push
xlat
mov
mov
push
adc
(bad)
(bad)
push
mov
aam
jno
dec
js
test
push
fdivr
dec
fcom
rcr
inc
mov
int3
cmp
or
jge
mov
(bad)
arpl
repnz
(bad)
adc
lahf
outs
pop
jnp
push
es
call
or
pop
mov
not
mov
jmp
in
mov
xchg
jbe
ror
xchg
push
xchg
fcmovu
ds
xor
out
sbb
(bad)
xchg
sar
cmp
dec
sub
(bad)
sahf
cs
or
in
mov
cmps
enter
je
xchg
inc
sbb
in
loopne
js
aas
mov
xchg
push
int3
fwait
aaa
jno
(bad)
rol
inc
adc
inc
stc
mov
in
xchg
inc
and
test
inc
dec
fwait
dec
jo
xchg
popa
push
mov
imul
mov
ss
ret
cld
mov
aaa
jecxz
std
mov
cmps
lea
enter
or
mov
mov
jle
sub
in
push
mov
dec
mov
ins
mov
ds
cmps
loope
cli
or
data16
ins
and
mov
cmp
inc
test
inc
mov
and
(bad)
fdivr
clc
lock
and
xor
inc
xor
push
jb
fiadd
mov
mov
(bad)
jmp
xchg
push
mov
push
xor
push
sbb
adc
call
outs
pop
fwait
aaa
mov
cld
add
sbb
cld
cmp
pop
jl
inc
jg
adc
mov
(bad)
or
jbe
movs
xor
sbb
jl
dec
sub
dec
push
xchg
xor
aam
fs
xchg
cmp
mov
cmc
or
xor
arpl
adc
mov
cmp
or
or
jae
clc
xchg
mov
sar
fnstsw
xchg
dec
repnz
cs
lea
and
xor
inc
test
sub
stos
sbb
dec
(bad)
sub
jnp
sub
aam
inc
imul
sbb
push
loopne
or
ins
push
mov
add
sbb
and
stc
div
mov
jno
imul
rcr
addr16
stos
mov
jle
call
nop
cwde
add
mov
pusha
jae
loop
inc
push
xor
sbb
(bad)
sbb
add
mov
add
arpl
rcr
fsub
xor
arpl
add
call
jge
(bad)
dec
outs
loopne
xor
lock
leave
add
adc
fadd
repnz
dec
idiv
mov
dec
imul
dec
cs
push
movs
inc
xchg
in
jns
xor
lahf
push
imul
jb
sub
inc
mov
add
imul
into
mov
push
ss
int3
nop
pusha
sub
nop
dec
dec
cld
xchg
call
mov
outs
movs
sub
sub
loope
shl
sub
push
mov
push
and
das
adc
fistp
mov
fst
jmp
adc
push
mov
xor
mov
dec
movs
xor
pop
sbb
dec
in
mov
mov
mov
(bad)
ret
sbb
xor
cli
cmp
sbb
(bad)
and
mov
test
add
inc
mov
(bad)
test
sub
fiadd
in
scas
scas
popa
iret
dec
pushf
aas
(bad)
(bad)
std
lods
jge
test
jo
ins
and
pop
and
xchg
mov
inc
and
xor
cs
cs
test
push
and
clc
nop
shl
sub
(bad)
clc
test
mov
jge
add
out
aaa
add
jle
add
retf
(bad)
jge
loop
dec
fild
sbb
ins
inc
movs
ins
xor
or
mov
mov
lahf
mov
inc
push
push
imul
dec
xchg
and
iret
dec
jmp
xchg
inc
sbb
pop
ret
stc
cmc
out
loopne
xlat
pusha
data16
(bad)
dec
xor
mov
add
dec
inc
jno
into
test
rol
repnz
sbb
dec
adc
adc
push
xor
into
inc
leave
ins
pop
add
adc
mov
add
imul
xor
test
popa
pop
sar
or
sub
mov
jl
jbe
ret
or
push
pop
movs
sub
add
fldz
and
nop
mov
dec
cmp
mov
ret
jmp
fs
mov
jno
leave
out
sub
xchg
popf
adc
push
cmps
(bad)
fdivrp
jge
aas
mov
lods
(bad)
int
add
jmp
adc
pushf
lods
cld
or
and
es
dec
mov
mov
and
dec
push
push
adc
add
(bad)
gs
leave
cmp
std
daa
or
mov
stc
clc
jle
add
(bad)
pop
jmp
jle
aas
enter
rcl
fiadd
mov
inc
add
adc
nop
sub
mov
repz
lahf
icebp
or
adc
xchg
jae
jbe
sar
pop
arpl
iret
jo
pop
and
xor
inc
gs
sbb
sub
movs
mov
jno
into
cmp
xor
and
lods
push
mov
jge
adc
xchg
cmp
dec
xor
mov
or
sbb
jae
dec
add
xor
pusha
sbb
sbb
dec
jb
mov
cmp
imul
add
and
sbb
(bad)
cmp
sbb
mov
data16
adc
push
push
out
(bad)
push
pushf
fistp
das
test
leave
mov
fsubr
into
mov
mov
xor
mov
daa
jecxz
mov
out
mov
cwde
cdq
mov
xor
xor
dec
adc
je
(bad)
fsub
pop
cli
cmp
into
fidivr
fdivr
in
(bad)
call
or
cdq
fistp
cmc
and
cmc
iret
jge
out
retf
lahf
adc
and
push
sub
test
and
(bad)
dec
xchg
or
xchg
push
or
push
mov
pushf
inc
mov
mov
push
jae
call
scas
mov
sbb
xchg
pop
jg
iret
rcr
xchg
rcl
sbb
shl
or
or
xchg
jl
iret
cmp
sub
and
neg
dec
into
xor
in
test
outs
ins
out
loope
(bad)
add
adc
mov
xor
dec
bsf
mov
lock
outs
jb
or
cli
aam
dec
dec
sbb
popf
ret
movs
shl
mov
scas
ffree
pusha
imul
or
pop
push
inc
jb
pop
iret
jl
aaa
adc
push
mov
mov
loop
mov
fidivr
mov
adc
mov
jmp
xchg
dec
inc
es
sub
mov
fdivr
lea
jmp
push
mov
jne
cmps
loopne
pop
js
xchg
dec
js
add
out
out
and
clc
jle
add
jg
mov
push
mov
shl
pop
loop
xchg
push
sbb
or
dec
push
je
cmp
mov
sahf
test
scas
or
add
push
push
in
fidivr
jecxz
cdq
gs
inc
cwde
inc
or
add
movs
daa
inc
jno
rol
push
arpl
lea
jbe
outs
fdivr
popa
dec
push
ss
adc
lock
clc
push
dec
(bad)
call
mov
and
(bad)
or
and
mov
dec
xor
sbb
std
cmp
or
aam
cmp
add
fs
outs
adc
mov
scas
fidivr
jl
imul
or
test
mov
push
or
mov
xchg
sahf
sbb
and
sbb
in
dec
mov
das
xchg
pusha
mov
fistp
mov
adc
sahf
adc
lock
sti
addr16
sahf
aas
lods
mov
popf
or
sbb
inc
xor
test
mov
inc
out
fsubr
enter
neg
xchg
loop
or
test
gs
aaa
into
fistp
push
adc
dec
into
or
xchg
adc
cmp
inc
push
repnz
cmp
xchg
pop
shr
loopne
pop
ja
push
movs
xchg
test
push
out
outs
pusha
mul
pop
pushf
inc
not
popf
ins
outs
in
jae
add
mov
cmp
and
push
sti
pop
jl
jl
imul
cmps
xor
push
xor
xor
leave
pop
fs
imul
add
fadd
pop
ds
stos
jns
in
push
fs
mov
ds
mov
mov
mov
(bad)
call
pop
ret
mov
test
aaa
jno
repz
mov
pop
push
push
pop
test
xchg
pop
es
pop
popf
addr16
sar
push
cmps
int3
mov
add
adc
(bad)
int3
or
aas
std
enter
outs
pop
inc
popf
add
(bad)
clc
sub
add
(bad)
xor
xlat
popf
cmp
dec
jle
push
mov
jge
mul
fs
aas
mov
leave
repnz
addr16
inc
and
inc
mov
ss
cli
jae
adc
mov
out
cs
push
dec
xor
add
or
loop
es
and
cld
(bad)
stos
cld
pusha
pop
icebp
add
add
mov
or
add
sbb
adc
sahf
pop
aaa
sbb
mov
out
or
push
jl
mov
mov
mov
or
sbb
sbb
bound
rcr
movs
dec
nop
shr
rol
or
add
and
loop
dec
rcr
add
xchg
xor
dec
adc
or
fwait
mov
stc
aam
out
fdivr
(bad)
sti
int
inc
sub
and
push
jo
(bad)
(bad)
in
cmp
stc
(bad)
or
inc
xchg
(bad)
std
pop
jne
repnz
sar
shl
jmp
mov
iret
shl
sbb
jle
add
hlt
jecxz
fs
and
into
out
iret
pusha
xor
inc
in
mov
cld
or
(bad)
pop
inc
retf
cmp
call
mov
jb
js
xchg
add
popf
push
icebp
fcom
mov
xor
lods
scas
lahf
inc
fwait
stos
push
mov
xchg
popf
fadd
sbb
test
add
fstp
add
push
in
xor
inc
mov
pop
sub
(bad)
mov
jb
mov
and
xchg
add
sbb
inc
loope
mov
mov
add
push
add
test
and
mov
pushf
add
and
loope
sbb
stos
xor
push
inc
add
and
add
cmp
shl
popf
shl
add
adc
arpl
xabort
dec
fs
mov
dec
jle
outs
ins
outs
inc
test
movs
mov
adc
adc
mov
in
lds
add
push
movs
ficomp
ja
or
jnp
cmp
dec
enter
push
lds
icebp
xchg
or
mov
fsubr
mov
out
test
or
jl
dec
sub
sti
add
aam
je
(bad)
sbb
push
shl
add
aas
and
xchg
or
dec
and
xor
push
mov
test
imul
add
inc
mov
jecxz
into
xchg
jmp
(bad)
cmp
pop
es
pop
xor
dec
pop
(bad)
not
jmp
repnz
shr
ds
xchg
add
aam
mov
add
and
mov
mov
pusha
icebp
fsubrp
loope
icebp
cmp
dec
mov
rol
jmp
loop
in
adc
add
cmp
cwde
loopne
mov
je
out
cld
adc
popa
push
jb
mov
jge
lea
jo
outs
jecxz
jb
fstp
add
add
movs
add
ds
sahf
ret
or
outs
mov
and
sbb
(bad)
pop
cs
(bad)
movs
je
(bad)
int3
ds
fisubr
icebp
adc
aas
cmp
ffree
sbb
or
jno
arpl
sub
pop
push
dec
cli
js
cmp
test
or
cdq
fld
add
or
jne
push
or
fld
pop
out
or
dec
sbb
jno
aam
outs
lods
pop
xchg
(bad)
pusha
sub
push
pusha
xor
adc
add
test
movs
mov
mov
out
(bad)
lock
ins
sbb
sbb
dec
leave
push
pop
pusha
mov
jg
inc
(bad)
mov
outs
fadd
hlt
shl
shl
jl
loop
inc
test
mov
dec
cmp
arpl
dec
gs
push
push
shl
dec
ficom
adc
mov
aas
push
xchg
mov
or
cmp
cmp
sbb
out
rcl
fidivr
cmc
lahf
retf
add
jecxz
jo
jne
xlat
sbb
(bad)
push
inc
sbb
cwde
xor
add
sbb
mov
pop
outs
aas
outs
repz
pop
rol
cs
test
mov
ja
inc
sub
movs
sub
pop
aas
lds
aaa
pop
inc
jg
psubw
mov
(bad)
mov
mov
fwait
pop
fcom
mov
add
jecxz
add
xchg
loope
sahf
cmp
pusha
jmp
icebp
jmp
mov
xor
add
pop
outs
mov
xchg
js
int3
jno
add
out
pop
clc
int3
movs
or
sbb
mov
div
nop
retf
ins
int3
pushf
cmp
in
retf
(bad)
std
or
cmc
leave
mov
test
scas
mov
sbb
aas
into
scas
arpl
sbb
jmp
rcr
ins
lods
xor
clc
loopne
cmp
pop
pop
ret
js
adc
sbb
add
add
div
dec
jbe
or
add
(bad)
jo
cmps
(bad)
lods
pusha
movs
rol
fiadd
sbb
scas
je
inc
fst
dec
inc
outs
iret
call
pop
js
(bad)
fsubrp
cmp
lea
std
pop
in
not
imul
rcl
or
rcl
ins
dec
shl
inc
mov
or
int
ds
pop
(bad)
mov
add
push
jge
add
jmp
sahf
jnp
push
test
xor
and
add
hlt
daa
push
popa
xor
cmps
push
and
and
dec
adc
lds
xor
push
mov
dec
call
stos
cmp
push
rep
xchg
mov
test
lods
dec
ret
push
add
je
cmc
rol
pusha
mov
leave
or
outs
fisttp
and
rcr
(bad)
int3
jmp
shl
(bad)
fucomp
pusha
mov
js
pushw
data16
stc
imul
retf
das
loop
dec
and
and
push
xchg
out
mov
mov
arpl
inc
xchg
test
fild
jge
mov
dec
lods
mov
jbe
push
cvtpi2ps
fnstsw
ret
push
and
fild
add
scas
scas
jecxz
out
inc
shl
mov
in
mov
mov
(bad)
retf
mov
mov
fadd
into
(bad)
push
jp
dec
add
and
sbb
cmp
and
jle
push
out
lods
bound
inc
sar
lock
fcom
add
(bad)
retf
test
sbb
xchg
aam
sub
xchg
push
popa
xlat
mov
dec
inc
sti
sub
mov
mov
loope
(bad)
cmp
or
xor
scas
pop
xor
mov
push
sbb
xor
(bad)
mov
mov
jle
aam
pop
(bad)
cli
in
pop
mov
sbb
scas
fwait
add
ins
push
ror
or
pop
mov
xor
jg
icebp
mov
xchg
mov
pop
jle
push
xchg
and
sub
jp
iret
and
push
mov
cmp
mov
lods
jo
ss
pop
add
test
call
outs
cmps
mov
add
sbb
jno
cmp
xlat
mov
adc
cld
cmps
and
push
movs
fadd
fmul
ret
xchg
mov
pop
les
jnp
xchg
pop
jg
dec
ins
out
pusha
stos
cmc
sbb
pop
jp
or
jecxz
imul
mov
pop
fdivrp
ss
rol
into
jo
je
adc
jnp
pop
pop
sti
sbb
sub
cmp
mov
jecxz
mov
push
ror
and
ret
(bad)
xor
xlat
jo
rol
mov
out
loope
jl
xor
sti
lds
pop
mov
ret
fdiv
retf
enter
and
xchg
mul
or
adc
fsubr
inc
fsubr
loopne
fst
jmp
xchg
ror
jno
fnstsw
or
mov
(bad)
call
push
icebp
test
sbb
add
mov
jo
dec
jb
push
cmc
fadd
icebp
jnp
push
or
lods
mov
inc
jmp
dec
fsub
mov
movs
daa
das
mov
jns
fscale
add
sbb
scas
inc
dec
jmp
xor
inc
nop
inc
xchg
ins
cmps
fcomp
sar
vxorps
out
es
add
hlt
cdq
(bad)
jmp
cli
sub
pop
jnp
lds
adc
stos
neg
add
jg
rol
aas
stos
inc
jmp
inc
movs
fs
std
push
lock
rol
dec
je
sahf
inc
cmp
mov
out
sti
(bad)
fstp
test
push
xor
or
add
add
or
push
je
enter
gs
cmps
fld
stos
test
mov
pop
retf
jge
outs
xchg
and
shr
out
adc
lods
adc
(bad)
aaa
rcr
fadd
mov
xchg
imul
xlat
outs
pusha
in
mov
mov
jbe
pop
cmp
jl
mov
mov
lods
icebp
pop
cld
dec
cli
xchg
mov
fadd
mov
cmc
dec
hlt
mov
retf
fcomp
adc
loope
jnp
mov
ds
loopne
jle
xchg
push
mov
in
and
loope
out
adc
cmc
cmp
xchg
jmp
fs
jmp
neg
inc
not
or
out
inc
jbe
sahf
cld
leave
cmp
push
jns
adc
or
pop
retf
icebp
std
pop
icebp
rcr
sbb
mov
pop
loope
jle
jecxz
mov
xor
mov
loop
out
loopne
dec
std
adc
mov
fsubr
data16
pop
lds
ds
sub
inc
push
lahf
fist
(bad)
sahf
add
mov
(bad)
pop
or
or
enter
jno
mov
add
sub
push
mov
or
in
add
mov
pop
or
mov
imul
rol
sub
jge
sub
xor
cmps
xchg
lahf
(bad)
xchg
aas
mov
jge
ss
cld
outs
xor
mov
dec
mov
xor
xchg
int3
pop
xchg
pop
inc
inc
cmps
adc
and
dec
out
aam
xor
xor
and
jnp
iret
push
aad
es
fwait
sub
add
mov
out
(bad)
(bad)
fs
pop
test
and
sub
scas
test
lahf
sub
js
add
push
push
xor
xchg
and
ds
adc
cmps
adc
std
bound
sub
push
or
or
out
mov
mov
mov
ror
out
jne
jge
pop
and
and
ins
jb
popa
mov
dec
imul
out
mov
add
hlt
and
jecxz
fcomp
cli
or
pop
mov
pop
ret
aaa
jle
and
in
pop
rcl
out
inc
mov
adc
sbb
sahf
add
adc
sbb
popf
push
push
push
iret
and
mov
jae
push
dec
loopne
movs
adc
and
cld
push
mov
add
jno
jno
pop
jg
fnstsw
push
ja
mov
sti
jg
std
lods
sub
cmp
cs
les
aas
sti
sar
idiv
mov
or
or
mov
ss
cmp
push
fcom
add
pop
or
xchg
or
sbb
cmp
adc
nop
mov
clc
clc
cmp
and
repz
push
sub
into
and
xchg
cwde
mov
mov
cdq
jne
test
out
mov
jo
stc
std
int
cmp
xor
push
into
aas
std
dec
cmps
in
inc
movs
in
mov
sahf
clc
test
test
adc
ret
dec
jge
dec
add
test
mov
sub
inc
fisttp
xchg
mov
adc
adc
xchg
and
add
sub
jo
aaa
xchg
push
ins
gs
out
xor
lds
push
div
mov
(bad)
and
outs
faddp
ins
jle
(bad)
ret
mov
xchg
sbb
in
sar
test
dec
mov
xchg
and
in
adc
pop
inc
fidivr
dec
sahf
dec
rcl
js
aad
clc
stc
pop
sti
stos
sbb
and
pushf
int
pop
xchg
push
dec
add
lods
in
retf
dec
and
cmp
cmp
xor
movs
cmp
aaa
fistp
imul
add
iret
mov
pop
inc
es
cmp
out
popf
(bad)
lahf
fnstsw
jmp
test
mov
icebp
rol
add
mov
push
sbb
sub
out
ja
inc
xchg
jmp
cs
mov
lods
push
xor
mov
adc
xor
fcmovnu
inc
dec
jno
(bad)
add
push
push
adc
enter
inc
nop
nop
ja
pop
inc
inc
nop
inc
nop
in
sub
xor
xor
and
ss
retf
sub
retf
sbb
sbb
mov
call
push
outs
jl
xlat
call
jmp
shl
les
in
mov
jb
fwait
pop
(bad)
and
rcl
mov
mov
mov
inc
push
out
sub
mov
cld
mov
mov
rcl
movs
xchg
xchg
or
and
dec
mov
adc
add
fld
sbb
mov
xor
cmp
push
mov
xchg
enter
push
loop
lahf
(bad)
imul
jmp
sub
jo
ret
pop
sub
push
loope
fnstsw
cli
es
psllw
neg
inc
mov
clc
out
test
inc
cmp
jo
repnz
pop
mov
mov
mov
sahf
loopne
iretw
inc
ds
movs
xor
mov
push
ret
and
(bad)
push
pop
jmp
pop
lds
ffree
in
hlt
sbb
retf
in
jmp
ja
repnz
mov
loopne
int3
inc
xchg
mov
shr
push
mov
or
pop
adc
and
dec
mov
inc
mul
cwde
adc
ret
xchg
xchg
sbb
rol
cli
xchg
mov
and
add
xor
adc
ja
fldenv
mov
fbld
test
loop
pop
cs
ja
xor
cdq
retf
mov
mov
iret
pop
(bad)
cli
cli
mov
cmps
xor
pop
sahf
add
mov
cs
shr
lahf
jns
inc
cwde
xchg
addr16
movs
mov
xchg
cld
inc
and
aam
(bad)
(bad)
icebp
and
mov
mov
sub
jecxz
jb
sbb
or
and
sub
inc
or
(bad)
icebp
es
cmc
pop
dec
dec
jmp
jle
movs
mov
xlat
cmps
repnz
(bad)
gs
test
mov
push
jb
outs
lods
retf
fstp
enter
sub
fdivr
cmc
add
(bad)
lock
inc
jae
and
add
fnstsw
shl
xor
sbb
mov
test
mov
add
xchg
add
out
ds
pop
mov
loopne
jp
pop
mov
inc
ds
cmp
sbb
add
jle
inc
or
jnp
jge
(bad)
retf
jg
pop
jecxz
inc
cmc
sub
jae
jle
mov
mov
out
aaa
icebp
ret
pop
mov
mov
rcr
xor
adc
inc
fs
sti
dec
les
fld
test
(bad)
pop
mov
mov
gs
cli
and
xchg
(bad)
pusha
or
add
test
(bad)
sub
mov
icebp
add
adc
movaps
or
or
sub
push
xor
lods
adc
pop
mov
ins
push
sbb
xchg
arpl
cmp
jo
cmp
jle
mov
add
test
sbb
cmp
test
fistp
jle
jbe
ds
inc
mov
xchg
sbb
aam
and
scas
dec
rol
xor
push
(bad)
lea
sbb
push
lea
(bad)
xor
xor
or
aam
sbb
nop
push
fsubr
scas
arpl
sbb
dec
les
adc
es
icebp
jmp
cmps
dec
push
mov
outs
cmp
lock
jl
push
push
mov
loope
test
arpl
sti
js
aam
pop
inc
(bad)
ja
pushf
push
adc
loop
adc
and
cld
add
xchg
ffreep
int
repz
push
pop
not
jb
mov
xor
out
fistp
mov
or
mov
add
cwde
xor
xchg
sbb
xchg
cs
movs
jp
sub
adc
adc
cmp
jge
(bad)
cld
(bad)
pop
jecxz
inc
pop
test
xor
jle
ins
jg
lahf
pop
pop
inc
xor
in
push
push
sbb
inc
mov
iret
mov
ret
(bad)
call
jb
loope
dec
xchg
mov
pop
jmp
push
push
push
dec
jge
rol
jmp
adc
adc
or
dec
cdq
add
fs
out
sti
out
test
ror
sbb
mov
dec
or
leave
xor
push
or
sar
test
(bad)
gs
pop
mov
add
retf
aas
mov
lods
pop
jg
push
adc
dec
and
jl
xor
cdq
cmp
clc
cmovae
or
pop
xchg
fisttp
mov
sti
mov
mov
into
retf
mov
mov
jnp
scas
jecxz
fscale
adc
push
std
jge
dec
jecxz
cld
or
js
in
mov
xor
mov
enter
scas
mov
rol
cs
call
in
dec
pop
test
add
adc
or
mov
sub
and
cs
jl
pop
movs
pop
ins
(bad)
ss
xchg
add
cmp
mov
cmp
loop
lods
fist
add
pop
or
mov
popf
or
mov
inc
mov
sub
sub
dec
jg
jmp
outs
mov
(bad)
sub
(bad)
sbb
sub
aas
fwait
in
mov
lea
or
stos
push
cmp
xor
mov
jp
xchg
sbb
add
loopne
idiv
ds
cmp
fldz
sbb
lock
cmp
jmp
cmp
ffreep
js
xchg
or
or
pusha
outs
and
jle
or
mov
xchg
and
push
test
call
dec
fsub
sbb
push
stos
push
jno
cwde
xor
push
loopne
add
xchg
sbb
adc
test
xchg
stc
jne
(bad)
push
cmps
xor
sub
fs
cmp
repnz
pop
sub
repz
dec
repz
cmp
mov
aas
pop
mov
scas
cli
fistp
jg
jo
sbb
sub
mov
daa
jmp
sar
jmp
add
or
jno
jle
xchg
inc
push
xchg
add
and
neg
enter
or
mov
dec
loopne
out
imul
or
pop
mov
inc
leave
sub
ins
or
scas
shl
repz
and
clc
rcr
jl
mov
or
push
shr
aaa
popf
pop
cmp
dec
add
pop
mov
into
cmp
and
xor
in
bound
xchg
mov
stos
out
sahf
stc
and
(bad)
retf
add
xor
cwde
cdq
jg
popf
std
imul
bound
or
or
jno
icebp
fwait
ror
fsubr
pop
inc
jmp
mov
(bad)
lahf
inc
call
out
loopne
popf
jmp
pop
(bad)
rcr
iret
add
lods
adc
ja
dec
cld
call
shr
or
mov
addr16
inc
xor
inc
mov
xchg
xchg
cwde
(bad)
lock
or
inc
into
xor
push
pushf
sub
xor
add
mov
jo
sub
and
das
jg
jmp
mov
push
loopne
xlat
add
sub
fnstenv
jge
test
dec
movs
inc
sub
pop
inc
mov
cmps
sbb
pop
jmp
jmp
mov
js
cdq
pushf
sub
dec
outs
rcr
mov
jno
inc
mov
loop
cmp
adc
sti
mov
mov
pop
ret
mov
mov
popf
add
arpl
xchg
push
mov
clc
fs
jmp
sti
hlt
jno
imul
ficomp
stc
sbb
add
jne
cmp
and
mov
rol
pop
ins
lahf
cmp
into
pop
or
sbb
scas
loopne
xchg
out
inc
pop
and
mov
in
jns
popa
dec
dec
cmp
sahf
adc
jno
inc
sti
imul
rcr
or
stos
aas
cld
sbb
fcmovbe
pop
adc
sbb
in
shr
in
loop
sbb
add
mov
test
dec
adc
jo
mov
and
and
mov
int
sbb
sub
nop
(bad)
cmps
jne
loope
mov
jb
(bad)
sbb
add
lock
or
push
jmp
push
mov
dec
and
push
out
psubd
(bad)
cmps
add
inc
mov
add
inc
mov
add
mov
add
call
inc
aad
xchg
xor
cdq
mov
add
in
dec
sbb
mov
jno
dec
add
dec
add
js
or
dec
aaa
es
and
or
jns
or
xor
out
addr16
imul
sbb
push
push
add
inc
loopne
push
cmc
adc
jmp
jmp
pop
fcmovnu
les
mov
inc
xchg
xor
xor
push
gs
cmp
sbb
pop
xor
das
or
mov
jecxz
mov
jns
fisubr
push
fiadd
dec
leave
idiv
sub
sbb
sbb
aad
mov
aam
dec
and
adc
pushf
add
add
add
cmps
add
or
jno
hlt
xchg
jg
mov
repnz
div
(bad)
push
mov
and
add
xor
js
lahf
shr
(bad)
or
sub
dec
pop
push
js
addr16
not
pop
mov
cwde
and
dec
aad
mov
in
push
int3
or
ror
lea
shl
mov
jp
int
mov
bound
sub
mov
clc
int3
fsubr
sub
dec
ds
stc
jmp
data16
xchg
push
pop
pop
fdivr
aas
test
sbb
repnz
aas
clc
jnp
fisttp
xchg
jnp
and
dec
add
sar
fdiv
lock
cmovle
adc
out
dec
xchg
stos
mov
mov
mov
loope
sbb
pop
dec
gs
adc
add
push
(bad)
popa
mov
mov
push
jnp
fdiv
bound
mov
fwait
xor
add
push
or
xchg
or
dec
xchg
jns
and
sub
xor
mov
mov
(bad)
dec
xor
dec
cs
cli
rol
sbb
sub
pop
lock
xor
push
inc
int3
jg
aas
mov
sbb
fst
sti
push
enter
pop
jecxz
jmp
cmp
stc
jge
push
dec
loopne
retf
jg
cdq
add
shl
dec
ror
pop
jo
int
enter
dec
dec
xchg
or
jmp
jns
icebp
lock
mov
test
push
inc
sbb
sub
sub
fild
addr16
add
fiadd
repz
or
fsubrp
iret
pop
inc
mov
sub
add
in
in
cmp
xor
call
xor
sahf
mov
cdq
add
mov
int
movs
xor
pop
lods
push
mov
jp
addr16
popa
xlat
sub
jmp
movs
shl
add
mov
and
rol
inc
mov
or
adc
add
es
rcl
idiv
retf
addr16
iret
(bad)
icebp
jo
mov
psubb
add
or
mov
aas
inc
and
movs
bound
ror
nop
inc
and
inc
fiadd
int3
je
sub
inc
lock
dec
xchg
hlt
test
sub
push
xchg
stos
inc
xchg
call
mov
(bad)
or
add
mov
lds
aaa
xchg
add
fcmovnbe
fisub
xor
lods
outs
ret
or
call
mov
inc
pop
imul
sub
push
pop
ds
push
mov
aad
mov
pop
arpl
rcr
mov
inc
imul
shr
mov
or
jge
leave
jmp
aas
and
pop
mov
xchg
jb
in
stos
adc
jb
sub
lods
mov
pop
sub
adc
mov
xchg
dec
push
dec
or
out
mov
cwde
add
bound
sbb
pop
jns
or
out
ins
mov
mov
js
sbb
rcl
sbb
dec
not
int3
mov
gs
jae
cmps
xchg
adc
push
jge
das
nop
inc
mov
sbb
xchg
or
cmps
gs
test
mov
dec
in
mov
cmps
dec
cmp
shr
sub
stos
hlt
(bad)
loopne
or
je
dec
mov
and
(bad)
enter
mov
loop
fs
push
or
int
dec
mov
je
lahf
scas
ds
lea
ins
mov
pop
inc
pop
jnp
inc
enter
fcomp
xchg
mov
arpl
mov
and
or
mov
aam
mov
mov
js
ss
mov
arpl
push
(bad)
mov
cmp
and
mov
adc
add
in
dec
int
push
inc
or
or
dec
or
int
adc
pop
jnp
fmul
mov
mov
outs
jns
int3
loopne
add
jecxz
iret
mov
xchg
repnz
or
dec
int3
in
clc
push
mov
mov
inc
or
mov
shr
push
fcom
hlt
cmp
adc
mov
aas
inc
fiadd
inc
inc
shr
(bad)
jle
jmp
dec
gs
adc
jb
shl
add
xchg
dec
movs
shl
sahf
inc
imul
sub
jne
mov
out
and
add
mov
mov
fiadd
adc
js
push
add
inc
sub
xor
add
outs
jge
sub
shr
lods
pmaddwd
add
xlat
push
jg
shl
xor
pop
push
inc
(bad)
in
jge
stc
jo
loop
inc
stos
movs
mov
add
loop
inc
sub
pop
or
and
and
adc
and
push
gs
xchg
or
imul
daa
out
cmp
jns
pop
push
or
(bad)
add
mov
mov
jno
xchg
movs
nop
mov
imul
movlps
cli
nop
test
jmp
mov
inc
in
fist
and
push
inc
add
aam
sbb
leave
fincstp
imul
ins
inc
adc
mov
bound
mov
inc
inc
mov
pop
fwait
mov
aaa
fwait
add
test
lahf
ret
dec
mov
jg
sbb
ss
icebp
mov
idiv
data16
test
inc
gs
enter
lods
dec
add
cld
jle
enter
jnp
and
out
push
test
cmps
mov
xchg
fbstp
xor
daa
ins
add
or
out
(bad)
or
add
mov
scas
movs
mov
add
(bad)
jp
scas
out
xchg
sbb
ss
fucomi
into
aad
nop
dec
dec
cdq
popf
pop
cmp
in
out
pop
jns
jne
mov
mov
(bad)
fisubr
call
pop
out
arpl
and
cwde
nop
shl
jae
rcl
mov
sub
je
add
adc
sub
or
inc
sub
sbb
and
pop
dec
jecxz
loope
icebp
fist
stc
in
aam
dec
dec
sub
sub
(bad)
shl
and
je
cs
(bad)
and
stc
fstp
(bad)
jo
or
ins
mov
jbe
and
icebp
dec
(bad)
add
cmps
aaa
lds
sub
xlat
icebp
repnz
jg
push
mov
enter
pop
and
(bad)
sbb
in
inc
arpl
sti
cmp
mov
inc
dec
xchg
(bad)
inc
adc
loope
repz
loop
push
loopne
je
jno
rcl
mov
or
fwait
gs
pop
push
mov
jmp
or
js
not
lock
(bad)
retf
imul
mov
push
xor
test
xchg
inc
in
dec
jnp
pop
jmp
sub
jle
jae
add
lods
daa
repz
jnp
add
aam
mov
dec
pop
pop
inc
jno
(bad)
adc
cli
and
(bad)
dec
call
xchg
cld
add
pop
mov
out
jp
stos
pop
xor
mov
(bad)
sbb
mov
mov
fisub
in
sub
xchg
adc
data16
(bad)
xlat
mov
cmps
aad
test
int3
test
push
xchg
fimul
jb
imul
mov
lods
fistp
sub
out
add
xchg
jge
ret
xor
xchg
cld
mov
(bad)
cmc
mov
dec
clc
mov
xchg
jg
add
(bad)
mov
jecxz
jns
bound
bound
xor
enter
inc
mov
jnp
sub
fld
jo
xor
movs
sub
and
mov
pop
xor
dec
inc
cmps
ins
cmp
adc
popa
xchg
jbe
pop
cmp
(bad)
jmp
popa
shl
lods
dec
lock
push
xor
mov
fsubp
inc
dec
enter
pop
aad
mov
and
push
inc
and
xor
add
fsub
add
and
aas
jmp
out
dec
jge
xor
ret
adc
test
mov
pop
xor
jo
pop
mov
inc
arpl
jmp
shl
xchg
push
rol
scas
ja
lock
cmp
pop
cmp
push
pop
test
mov
ror
xor
or
test
sar
push
rcr
es
(bad)
sar
push
sar
push
mov
push
sub
cmp
and
sub
cmp
lods
inc
xchg
dec
adc
or
mov
pushf
push
popf
add
xchg
ret
inc
and
sbb
pop
pusha
push
movs
sub
xor
sub
dec
jae
or
das
dec
add
aaa
test
std
in
sub
call
add
test
arpl
push
in
mov
enter
or
arpl
ror
or
push
test
retf
xor
or
or
mov
add
and
(bad)
aam
sti
(bad)
adc
pop
push
daa
dec
out
jmp
mov
add
pop
xor
dec
inc
cmp
stos
aam
mov
nop
cmp
punpcklwd
mov
inc
push
push
xchg
add
xchg
(bad)
rol
inc
add
sub
divps
test
and
lock
adc
push
mov
or
nop
dec
pop
mov
or
sbb
add
add
or
add
rol
push
leave
mov
sub
enter
and
jp
pop
cdq
cmp
out
lea
cmp
lods
or
fistp
jne
inc
pushf
push
push
xor
dec
in
dec
lods
aam
adc
jmp
int
ja
add
mov
bound
xor
and
(bad)
cli
lea
mov
mov
xchg
sbb
aam
mov
loope
inc
les
xchg
mov
sub
fnsave
dec
pop
das
xor
rcl
mov
gs
mov
sub
mov
xchg
nop
add
mov
jmp
mov
xor
push
push
add
mov
sti
ret
pusha
pop
xor
xor
add
cmc
out
pop
mov
loopne
mov
sahf
jb
jmp
jle
mov
mov
lods
cs
xchg
add
sub
and
cmp
mov
or
xchg
pop
pop
sub
gs
ret
mov
mov
popf
sub
lock
mov
jg
or
test
jmp
pop
js
or
and
jnp
xor
scas
push
mov
jmp
dec
bound
push
std
sub
adc
stos
retf
dec
sti
loopne
jecxz
fbstp
addr16
std
push
pop
dec
cmp
jne
jno
sets
enter
adc
test
in
int3
adc
dec
xor
push
add
push
jnp
outs
cs
mov
adc
xchg
pop
fcmovnu
ret
xchg
inc
enter
mov
jecxz
call
push
mov
sub
dec
movs
scas
cli
add
cmps
(bad)
popa
shl
push
fld
sbb
pop
popa
jle
loop
push
add
out
sbb
jge
and
mov
adc
dec
repnz
adc
xlat
xchg
retf
sub
mov
enter
jnp
add
xchg
(bad)
or
or
call
fadd
jae
xor
sbb
add
(bad)
push
cmc
cmps
mov
ja
inc
mov
test
pop
jecxz
stos
fwait
inc
es
jno
outs
mul
inc
jnp
push
jmp
cli
(bad)
in
test
pop
or
mov
add
adc
pop
sbb
(bad)
dec
cs
int
mov
das
scas
std
push
adc
scas
cmc
sbb
stos
and
pop
sub
add
mov
out
scas
jecxz
inc
js
mov
mov
cdq
fstp
jecxz
adc
jbe
dec
jl
mov
sbb
je
shl
cmps
retf
or
mov
sahf
or
pushf
and
sbb
xor
stos
std
adc
xchg
xlat
push
inc
sar
sub
mov
mov
mov
xor
es
add
mov
js
(bad)
xor
shl
mov
xchg
gs
sub
mov
mov
and
xchg
sub
aas
mul
jbe
outs
outs
ret
rcr
sbb
cld
sahf
arpl
inc
(bad)
xchg
into
sub
mov
sub
cdq
not
inc
inc
mov
cmp
pop
jo
add
sbb
xor
mov
aam
jae
addr16
mov
popa
mov
add
push
xchg
xor
pop
jo
dec
ret
aaa
jbe
cmp
sbb
sbb
push
test
jnp
jns
sub
dec
movs
stos
aaa
mov
add
and
jns
ds
(bad)
mov
push
add
stos
adc
inc
cs
push
or
aaa
sbb
in
in
bound
mov
out
cmps
stos
jnp
test
xor
cli
std
cli
fist
ficomp
loop
add
cmp
(bad)
cli
test
mov
sbb
add
adc
push
(bad)
fisttp
hlt
pusha
pop
mov
nop
xor
hlt
stc
fnsave
add
sub
call
cli
pop
mov
xchg
std
lds
test
call
fst
lea
dec
inc
add
sub
das
pop
stos
xchg
pop
addr16
mov
pop
push
mov
into
stos
cdq
mov
sub
adc
sub
inc
mov
clc
jge
inc
cmp
add
xor
or
aaa
and
pop
dec
jne
ret
or
mov
dec
repnz
(bad)
arpl
fwait
call
cmc
dec
popa
jmp
addr16
ins
add
fild
inc
or
ror
nop
les
mov
ja
push
mov
adc
das
std
popf
or
test
dec
push
lods
sub
jl
inc
push
out
pop
mov
inc
lahf
add
ss
(bad)
iret
push
pop
jo
les
sub
ror
pop
inc
pop
add
add
(bad)
ja
ins
inc
addr16
stos
cs
inc
pop
loop
or
xchg
hlt
mov
push
dec
add
stos
mov
js
xor
in
int
xchg
cmp
dec
in
jg
jl
pop
sti
jb
and
xchg
fimul
pop
add
fsub
or
pop
mov
lahf
aaa
push
test
std
inc
jno
call
in
mov
lock
pop
scas
push
repz
cwde
mov
adc
rcl
mov
push
aam
fild
pop
sub
gs
xchg
jno
adc
pop
push
xchg
push
loop
(bad)
ss
lahf
js
js
sub
mov
xchg
das
loope
push
inc
shr
jg
mov
cwde
adc
push
mov
cmp
push
xor
xchg
or
ss
movs
mov
jae
movs
int
xor
push
stc
cld
mov
mov
pop
jecxz
push
(bad)
cmp
in
mov
fwait
loope
icebp
leave
fimul
fnsave
ja
(bad)
movs
mov
add
and
ret
ja
mov
or
leave
mov
mov
mov
add
sahf
arpl
inc
add
jbe
or
sbb
mov
add
mov
push
loopne
lds
dec
mov
sbb
cli
les
iret
and
iret
div
stos
adc
add
adc
mov
out
push
fwait
ret
(bad)
jge
mov
ja
arpl
push
cmp
call
popf
sbb
int3
adc
ret
add
jmp
nop
fcmovnu
pop
cld
int
(bad)
faddp
add
dec
loop
ret
div
shl
adc
add
xor
arpl
jle
ret
rcl
pop
xor
xlat
mov
sahf
dec
shr
push
push
xchg
pop
dec
add
lods
pop
inc
cmp
jno
jo
mov
xlat
cs
xchg
sbb
pop
lds
jnp
mov
and
dec
mov
dec
and
bound
push
ss
add
add
xlat
mov
dec
lds
xchg
pop
inc
sti
sti
ja
imul
adc
jmp
sbb
(bad)
mov
inc
adc
dec
pop
add
jne
stos
mov
popf
mov
aas
jp
aam
mov
fidiv
pop
mov
ds
pop
repz
pop
movs
mov
aaa
mov
aad
pop
in
inc
add
lods
push
xor
int
mov
loopne
fadd
cld
ds
pop
cmp
test
fmul
push
add
iret
mov
inc
addr16
pop
imul
test
retf
pushf
je
movs
inc
jne
and
mov
movs
push
mov
pop
mov
fstp
inc
adc
pop
sar
fwait
mov
jno
push
ins
dec
dec
mov
in
out
pop
aad
into
add
inc
je
aam
shr
dec
cld
scas
fs
mov
pop
sub
xchg
cmp
sbb
ins
inc
adc
sub
arpl
iret
out
scas
pop
jge
jne
loopne
push
int3
mov
mov
push
xchg
inc
push
fstp
and
psadbw
jns
pop
movs
or
dec
dec
and
(bad)
test
(bad)
pop
scas
dec
aaa
jecxz
cmps
in
mov
cmps
and
into
add
fild
and
dec
or
xor
mov
jle
mov
and
push
inc
cmp
shl
push
or
dec
fwait
mov
push
mov
aas
loopne
sbb
add
mov
add
push
jecxz
ds
std
add
mov
nop
pop
arpl
int3
mov
xor
cmp
and
push
pop
xor
jns
mov
xor
lods
test
(bad)
mov
or
and
and
mov
fisttp
mov
pop
jb
or
ins
jle
aad
mov
ins
jmp
xor
jnp
sub
jmp
mov
xchg
dec
jo
fisub
push
and
and
adc
fwait
aaa
xchg
adc
xchg
dec
fcmove
out
cmp
loopne
push
mov
mov
ja
add
or
add
popf
out
ins
xchg
movs
out
sets
sub
fst
ror
stos
cld
fadd
bound
lea
cli
jg
fld
sbb
mov
mov
jg
and
addr16
or
pop
and
sub
xchg
push
push
call
jecxz
jge
mov
xchg
enter
mov
jo
popa
rcl
sub
jp
std
loop
xor
add
scas
dec
outs
mov
jbe
mov
mov
add
xor
add
and
inc
sbb
mov
call
jns
sbb
test
and
add
adc
dec
or
adc
push
pop
in
cmps
mov
out
or
or
xchg
dec
pop
pop
mov
cmp
xor
icebp
inc
js
sar
div
aam
retf
call
pop
pop
les
sub
cmp
inc
ficom
jmp
ins
popf
imul
mov
xor
mov
sti
lahf
enter
int3
cmp
mov
test
push
call
idiv
mul
ins
scas
add
mov
jl
mov
cmc
aas
aam
stos
ins
mov
cdq
sub
mov
cmc
in
fwait
inc
or
sub
pop
mov
pop
and
add
push
rol
test
sub
dec
int
adc
cli
mov
pop
lock
cwde
push
cmps
(bad)
sub
mov
aaa
xchg
jg
aaa
mov
xlat
inc
in
arpl
idiv
std
mul
mov
inc
sbb
jo
xchg
jne
jnp
test
repz
aam
sahf
cmps
in
xor
(bad)
push
adc
cmps
push
retf
or
sahf
xrelease
in
stos
push
mov
jle
rcr
and
out
scas
fisub
sub
pop
and
fild
arpl
adc
out
rcr
(bad)
test
and
(bad)
xor
sar
sar
call
and
sbb
pop
shr
(bad)
lahf
pop
cmp
xchg
lds
arpl
push
sub
test
sub
xchg
and
js
cmp
imul
(bad)
fisttp
lock
scas
inc
push
cmp
and
jb
imul
adc
sbb
fs
movs
pop
ds
sub
sub
mov
pop
mov
ins
enter
sub
lods
sbb
repz
and
rcr
sbb
adc
add
mov
sbb
jo
imul
inc
gs
sar
stos
dec
cmp
push
loopne
add
adc
push
add
lock
mov
xor
inc
mov
mov
push
push
mov
pusha
or
push
jecxz
test
je
jmp
add
dec
xchg
sub
pusha
mov
lods
loop
jge
adc
push
mov
jecxz
mov
lock
mov
add
dec
out
pop
xchg
dec
cmc
mov
(bad)
not
mov
add
jne
jle
add
rcr
fldcw
mov
add
ins
out
test
popf
push
pop
or
and
aaa
fwait
arpl
fsub
hlt
cli
movs
adc
inc
arpl
or
enter
(bad)
sbb
lods
mov
gs
sbb
mov
out
cmc
lds
pop
scas
sbb
movs
sub
mov
add
cmp
dec
int3
pop
jle
imul
mov
jp
sub
jns
add
lock
or
pop
sbb
inc
movs
lock
mov
jns
outs
mov
inc
test
mov
jnp
add
push
dec
push
inc
mov
aad
add
bound
pop
loope
test
aas
push
adc
xchg
push
xor
movs
dec
mov
sub
ins
jecxz
out
push
add
adc
xchg
fprem
inc
sbb
dec
mov
mov
bound
clc
and
sti
inc
cdq
stos
push
aam
cmp
test
ins
jno
mov
jge
dec
popa
std
(bad)
aaa
call
stos
(bad)
sti
inc
and
add
sbb
push
fldenv
mov
dec
shl
xor
push
xchg
outs
int3
xchg
sub
push
dec
cdq
(bad)
mov
push
pushf
mov
lock
out
(bad)
ss
xor
jge
cmp
mov
and
xchg
mov
add
jae
fld
loop
shl
mov
pop
pop
or
xchg
xor
push
sub
jecxz
or
stos
xchg
pop
mov
cmp
jns
add
stos
imul
dec
lahf
mov
mov
and
aam
dec
sbb
ins
cmp
inc
fisubr
inc
inc
mov
xor
or
pop
ja
dec
dec
arpl
ss
jle
daa
loopne
push
add
stos
aaa
mov
jns
ins
push
mov
daa
or
push
lods
js
out
mov
pop
add
mov
loopne
and
test
ret
inc
inc
aas
adc
ss
and
call
inc
int3
mov
mov
add
mov
daa
and
inc
mov
pusha
cmc
repz
fwait
stos
jge
lds
ins
mov
inc
cmc
hlt
shl
aaa
push
aad
push
sub
mov
add
repz
cmps
jg
popf
fimul
jl
mov
test
pop
repz
bound
dec
mov
push
and
pop
jl
test
nop
dec
repz
cmp
mov
pop
sbb
fsave
and
lahf
push
push
cmp
outs
mov
call
adc
imul
pop
neg
sbb
retf
adc
or
or
fstp
dec
repz
fwait
imul
add
add
les
and
je
and
push
or
add
xchg
push
lods
retf
dec
jg
test
add
jae
dec
pushf
cmp
sub
xor
and
mov
pop
mov
in
push
test
cmp
inc
push
inc
mov
scas
dec
(bad)
out
cmp
mov
cli
out
inc
bound
ds
icebp
adc
loopne
pop
loop
jnp
js
sar
mov
(bad)
movs
pop
inc
jg
fst
bound
jbe
ficom
mov
test
add
pop
add
sub
mov
push
gs
call
mov
adc
sbb
popf
cmp
add
add
call
add
sbb
dec
and
xchg
xor
loop
std
push
retf
not
imul
push
push
jnp
xchg
jbe
xchg
push
mov
add
nop
out
arpl
add
pop
addr16
fwait
(bad)
xlat
sti
mov
mov
pushf
sbb
test
pop
jecxz
call
xor
cwde
shr
ret
cmp
inc
dec
adc
mov
es
and
dec
pushf
or
test
fnstsw
test
loop
push
dec
std
xor
fs
sub
test
pop
cmp
sar
(bad)
(bad)
push
jg
mov
(bad)
fdivrp
mov
movs
fstp
cmc
mov
sbb
sbb
mov
add
div
mov
sbb
je
or
sbb
add
mov
lods
pop
xor
out
test
inc
int3
mov
ret
data16
jb
add
add
popa
arpl
xor
pop
push
adc
scas
out
loopne
cmp
les
popa
or
mov
push
jle
shl
popa
xor
loop
inc
inc
out
(bad)
lahf
xchg
sbb
or
retf
push
jecxz
push
arpl
or
das
push
daa
inc
call
lods
sbb
pop
xor
sub
sub
cmp
out
xor
xchg
mov
arpl
iret
daa
call
into
cmc
adc
or
or
or
in
jg
adc
ja
add
loop
push
std
hlt
das
and
or
outs
faddp
or
cli
push
xchg
mov
cdq
lahf
sti
sub
hlt
jno
clc
lock
(bad)
mov
out
loop
adc
mov
or
xor
xchg
adc
and
mov
test
movs
jmp
push
lods
inc
sbb
jnp
aaa
add
(bad)
in
loopne
xor
jecxz
xchg
test
jg
adc
ins
inc
int3
xchg
imul
and
and
add
jnp
in
jmp
inc
cmp
ficom
jp
sbb
je
loope
push
stos
or
jne
clc
mov
mov
hlt
or
fsub
add
jmp
int3
mov
stc
or
addr16
pop
lds
ds
push
cmp
jmp
lahf
sti
js
scas
and
sub
retf
lea
mov
aam
outs
push
mov
pop
jle
jns
push
jmp
pop
clc
jmp
jmp
stc
shl
scas
(bad)
mov
pop
lds
arpl
mov
inc
out
and
mov
test
inc
call
ret
mov
push
ret
in
xlat
and
pop
inc
stos
(bad)
aam
out
mov
and
sbb
in
repnz
inc
imul
call
dec
stos
test
pushf
int
fwait
mov
dec
sbb
test
add
push
dec
mov
es
pop
sbb
retf
add
or
add
xor
movs
push
stos
or
and
mov
movs
sub
popa
mov
shl
aas
int3
push
xor
ds
push
or
pop
mov
rcr
jp
cmovp
lods
mov
(bad)
sub
pop
pop
mov
mov
xchg
fwait
jmp
ins
fsubr
push
adc
es
data16
rcl
lock
pop
xor
ins
loop
repz
pop
dec
pushf
cmp
(bad)
and
loopne
sbb
rcr
ja
xchg
dec
gs
inc
mov
or
ins
jle
mov
in
call
add
cs
xor
test
shl
lock
and
or
imul
call
inc
xor
pop
pushf
icebp
or
inc
xchg
xlat
ror
imul
or
mov
add
sub
sahf
adc
mov
push
fadd
xor
and
jbe
mov
mov
mov
shl
cmp
std
add
xchg
ds
cmp
(bad)
test
adc
jb
into
add
sub
stos
leave
sahf
push
data16
mov
and
lea
fisub
popa
mov
fdivr
push
mov
repnz
xor
xor
std
adc
add
xchg
sbb
repnz
dec
jno
(bad)
aad
cmps
xor
fsubr
cmps
les
cmp
xadd
(bad)
dec
std
dec
pop
pushf
sub
(bad)
(bad)
out
pop
fiadd
sbb
(bad)
jle
xor
xor
idiv
test
bound
cli
repnz
outs
cmp
call
outs
enter
jne
std
push
ficomp
cwde
lea
cmp
loope
push
adc
adc
or
jmp
add
pushf
imul
retf
adc
aam
jbe
pop
add
ret
ror
pop
pop
imul
jmp
add
mov
lea
int
mov
popa
(bad)
aas
into
jae
sbb
add
sbb
adc
or
fsub
xchg
cmovp
xchg
arpl
test
fisub
pop
push
adc
push
adc
mov
and
dec
jge
mov
js
jne
adc
and
ins
ficomp
xchg
dec
(bad)
imul
push
mov
add
(bad)
ret
(bad)
std
(bad)
cmc
push
mov
sbb
mov
fxch
stc
cli
cmps
mov
pop
dec
sub
fild
aaa
add
jo
fucom
movs
cmp
and
aas
pusha
(bad)
push
xchg
imul
popa
mov
stos
cwde
inc
adc
push
imul
sar
test
stos
mov
add
inc
push
sbb
test
aam
gs
js
mov
cs
(bad)
jmp
xlat
pop
arpl
mov
push
add
lods
mov
jnp
mov
gs
mov
loope
ins
mov
mov
cld
popa
leave
pushf
or
inc
push
add
lods
cmps
mov
sar
adc
test
sub
je
mov
sbb
mov
dec
xchg
cs
arpl
nop
or
xchg
ds
jmp
(bad)
mov
retf
sub
js
dec
stos
pop
mov
and
add
(bad)
in
shl
dec
mov
jo
and
xchg
sbb
pop
add
daa
jle
les
fistp
or
push
push
cmp
push
loopne
sbb
sbb
dec
rol
ud0
mov
mov
add
adc
and
mov
xor
nop
mov
dec
(bad)
std
mov
push
lods
and
mov
sub
stc
nop
shl
mov
add
xor
fwait
dec
fs
out
pop
sub
icebp
pop
adc
xchg
cmp
pop
lock
imul
stos
movs
mov
cmps
dec
sub
xchg
enter
add
mov
and
xchg
bound
outs
shl
lock
xor
leave
xchg
int
scas
scas
dec
test
mov
arpl
mov
es
push
int3
sub
xor
dec
adc
and
add
and
or
(bad)
rol
cmp
imul
sub
add
dec
ror
imul
mov
mov
jl
inc
sbb
inc
push
in
dec
imul
push
je
pusha
add
(bad)
xor
faddp
(bad)
sub
and
cmps
sbb
add
out
ficomp
(bad)
push
push
rcr
xor
and
cli
xchg
movs
mul
cmp
pop
fdivr
mov
loop
inc
ficomp
mov
jbe
imul
jae
call
sbb
add
call
call
xor
gs
dec
push
lds
jge
xchg
pop
fiadd
sbb
inc
clc
mov
sti
imul
mov
stos
jg
movs
fs
mov
adc
push
xchg
movs
lods
frstor
mov
(bad)
mov
pop
imul
sbb
cmp
push
aad
les
lds
ins
jnp
add
test
imul
pop
cmp
jae
rcr
sub
push
sub
push
xchg
cwde
xchg
or
mov
into
out
inc
adc
xlat
push
cmp
mov
pop
sub
ror
out
shl
(bad)
jmp
add
push
sbb
cmp
iret
xchg
jg
sti
mov
pop
jnp
mov
mov
lea
xor
iret
outs
std
movs
xchg
jmp
in
loope
dec
ja
mov
push
movs
es
call
test
dec
push
out
push
(bad)
std
jecxz
addr16
sbb
sbb
cwde
lea
mov
add
mov
adc
cmp
mov
pop
cmp
inc
xor
mov
(bad)
arpl
sub
std
ins
mov
sbb
cmp
jecxz
(bad)
stc
fsubr
adc
jo
aaa
iret
add
fwait
push
or
movs
xor
dec
sub
add
dec
clc
xchg
sub
retf
xor
rcl
xchg
or
or
mov
adc
mov
mov
jo
mov
dec
dec
bound
and
push
cmc
xor
xchg
sbb
cmp
pop
sbb
(bad)
neg
inc
sbb
in
jp
mov
inc
jmp
les
mov
es
inc
cld
(bad)
push
shl
bound
xor
out
call
mov
jnp
xor
setge
mov
sub
xchg
xchg
stos
adc
mov
adc
(bad)
in
repnz
xor
cs
in
(bad)
mov
imul
fwait
mov
cmp
xchg
add
ds
mov
mov
data16
mov
xchg
dec
inc
lock
dec
sbb
ret
push
sub
add
xchg
aas
and
xchg
ret
dec
mov
adc
call
sub
(bad)
push
(bad)
in
push
xchg
retf
add
push
shl
dec
dec
push
bound
xchg
and
cmp
mov
cmp
ss
loop
dec
repz
fcmovu
push
std
scas
test
ins
xchg
shr
sub
sub
jae
xor
fdiv
mov
pop
xchg
bswap
add
or
xchg
and
or
lods
xor
fidivr
and
je
push
rcr
aaa
push
or
sar
push
(bad)
xor
jb
jns
stc
push
fwait
ret
mov
dec
add
cmp
loop
movs
xlat
add
mov
imul
(bad)
mov
push
jo
leave
push
and
cmps
dec
add
in
(bad)
push
inc
jp
adc
cwde
or
imul
or
sti
lods
in
cs
mov
adc
fidivr
xor
add
sbb
test
jle
mov
shl
cmp
(bad)
pop
jo
jno
inc
inc
lods
into
lods
add
stos
sbb
or
pop
fisttp
mov
push
mov
(bad)
xor
cmps
test
call
pop
addr16
mov
loopne
mov
add
xor
push
adc
aad
sub
cmp
icebp
add
lods
and
ins
pop
pop
push
xor
ret
in
mov
test
das
jno
or
aaa
mov
(bad)
pop
add
js
loope
push
xchg
cmps
das
mov
ja
mov
and
push
pop
aad
sub
jmp
aam
stos
xor
les
add
adc
stos
(bad)
je
jnp
sbb
xor
xor
(bad)
jp
or
adc
mov
add
mov
test
fcmovnu
push
or
pusha
sti
mov
xchg
cmp
xor
mov
cli
or
or
mov
fild
adc
push
inc
jnp
int
popa
das
cmps
pop
(bad)
lock
xor
push
adc
cs
xor
out
push
fbld
add
ror
and
xor
mov
daa
push
ins
sbb
cmps
add
xor
shr
aaa
pusha
in
lock
inc
outs
push
cmp
in
add
dec
lods
pop
call
mov
retf
popf
inc
into
pop
jecxz
mov
test
xchg
sub
(bad)
sub
lods
stos
call
mov
aam
pop
jbe
lods
sbb
cmps
or
jbe
or
mov
mov
call
clc
into
pop
add
and
outs
and
adc
(bad)
outs
pusha
mov
and
adc
cmp
pusha
adc
jp
call
fwait
clc
cmps
xchg
(bad)
or
scas
cld
cwde
fistp
jle
(bad)
cld
jo
in
pushf
sub
loope
jns
fild
outs
ret
cmp
fidiv
push
xor
lock
jecxz
mov
aas
rcl
add
scas
stos
add
mov
aas
ss
inc
sub
mov
mov
sub
cwde
mov
xor
inc
add
jo
test
xchg
push
adc
loop
dec
out
ror
cmp
scas
add
inc
inc
push
adc
push
fild
popf
pushf
ret
mov
(bad)
dec
push
shl
inc
mov
mov
mov
xor
inc
mov
xchg
add
ja
adc
sbb
pop
lds
jo
adc
mul
outs
out
sbb
int3
shl
fisubr
xchg
pop
push
mul
aam
ja
sub
jns
or
fisttp
jmp
fadd
xor
jns
jne
je
mov
pop
sub
js
sti
and
inc
je
imul
aad
mov
fadd
jno
ss
dec
and
sbb
es
add
scas
and
stos
xor
cmp
push
stos
(bad)
aaa
add
daa
mov
adc
adc
cld
mov
jb
add
pop
or
sbb
test
or
add
and
test
test
sub
aam
mov
mov
ins
arpl
mov
mul
out
and
(bad)
jl
and
adc
lods
test
cmp
dec
xor
push
mov
mov
and
inc
dec
dec
push
push
push
inc
mov
mov
dec
jmp
(bad)
push
in
add
fs
mov
sbb
je
cwde
pop
fsubr
sub
sbb
shr
inc
dec
lods
in
lea
jl
js
fdiv
shr
inc
push
cmp
mov
cmp
div
xchg
lock
rcr
pop
add
adc
stos
pop
push
jl
js
pop
sbb
add
loop
stos
xor
inc
xchg
gs
stos
fst
jne
(bad)
ret
or
fisttp
retf
xchg
stos
jne
in
je
sbb
push
sbb
(bad)
inc
leave
mov
add
mov
mov
add
loope
lods
lods
pushf
sub
test
dec
loope
adc
mov
and
jo
pop
jg
icebp
fild
xor
cmps
(bad)
fnsave
adc
jno
lock
adc
or
pop
jl
cmps
mov
std
sbb
shl
test
sub
add
mov
jns
mov
jecxz
cld
xor
(bad)
mov
gs
dec
xchg
xchg
adc
adc
add
push
or
stos
nop
test
mov
pop
jge
pop
push
outs
stc
lods
ins
push
mov
mov
ret
ret
push
add
push
and
imul
sub
test
sub
sbb
sbb
rcr
pop
adc
pop
adc
nop
arpl
xor
rcl
sbb
ja
push
mov
push
adc
test
xor
add
(bad)
scas
ret
xor
mov
nop
push
push
mul
lea
pop
xor
mov
add
lods
inc
cmp
cmps
xor
inc
cmc
xchg
push
jae
jns
push
mov
fwait
(bad)
mov
idiv
jl
shr
pop
sbb
mov
pusha
cmp
xor
loopne
outs
dec
imul
cld
xlat
cmp
pusha
idiv
arpl
cmp
cmc
lea
mov
test
sahf
or
mov
sbb
xchg
pop
inc
or
(bad)
push
adc
mov
cs
ins
push
adc
daa
loopne
mov
retf
mov
inc
or
or
mov
inc
test
add
add
push
adc
add
xchg
mov
fwait
cmp
retf
enter
xchg
push
adc
enter
leave
mov
inc
adc
pushf
scas
call
fs
shr
push
retf
lock
mov
sub
sbb
ins
fld
(bad)
je
mov
dec
mov
sub
inc
gs
popa
mov
sbb
sub
jne
pop
in
and
test
mov
icebp
xlat
scas
pop
aaa
add
ret
stos
dec
dec
inc
imul
mov
ins
adc
fmul
out
cmp
outs
int
out
hlt
scas
mov
push
fadd
aaa
xor
cmps
mov
or
stos
add
movs
add
or
test
cmc
add
jb
push
scas
push
inc
ror
pop
ja
or
dec
mov
shr
and
sub
or
jb
out
mov
jb
adc
inc
xor
sub
mul
and
imul
test
adc
push
and
jl
(bad)
inc
xchg
pop
and
iret
(bad)
jno
daa
cmp
and
mov
dec
jge
pop
mov
dec
dec
loopne
(bad)
push
pop
test
fdivr
xchg
mov
sbb
rol
mov
and
or
cmp
dec
cli
cmp
ror
outs
adc
cmps
or
dec
and
fcom
(bad)
rcl
mov
mov
push
arpl
dec
imul
add
out
push
inc
test
cmp
cwde
mov
(bad)
rcl
pop
push
and
shr
aaa
mov
inc
movs
out
js
inc
sbb
test
pop
(bad)
out
std
jnp
pop
bound
cwde
dec
push
sub
push
and
jno
or
stos
out
and
sub
cmc
stc
loope
repnz
retf
(bad)
adc
arpl
mov
or
xchg
xchg
fist
outs
sub
push
add
fistp
icebp
std
push
push
add
ins
push
dec
ins
imul
daa
je
mov
push
jo
xor
push
sahf
scas
jp
dec
lods
sub
adc
or
(bad)
icebp
dec
sbb
xchg
and
jp
pop
ret
dec
dec
mov
pop
mov
push
mov
movs
xchg
inc
loopne
mov
test
imul
gs
and
lahf
adc
test
inc
push
and
pop
test
pop
cmp
imul
push
adc
jmp
dec
sub
call
push
test
outs
fsubr
cmps
rol
mov
cmp
enter
add
loop
cld
pop
lock
sbb
fist
push
loope
mov
cmp
or
ins
jg
iret
add
jo
imul
xor
jo
xchg
ins
jbe
fist
(bad)
into
je
adc
adc
add
adc
mov
mov
mov
inc
xor
stos
div
pop
ja
cmp
mov
mov
mov
add
ret
add
call
sbb
in
ret
cmp
mov
push
aas
fisubr
add
out
ficomp
leave
test
push
mov
das
cbw
pop
shl
sub
sbb
push
fild
or
jle
das
shl
enter
dec
dec
add
and
add
xor
mov
cmp
mov
hlt
jae
pop
jecxz
sbb
xchg
bound
mov
sub
lahf
and
jno
rol
lods
add
movs
les
xor
sub
add
push
ss
shr
inc
lea
(bad)
mov
lea
shr
adc
inc
ss
test
jp
movs
push
out
or
out
xor
push
inc
popa
fdivr
inc
dec
adc
dec
sub
arpl
pop
adc
mov
je
js
mov
ins
xor
jns
jmp
gs
icebp
push
cmp
lods
cmp
jg
mov
stos
mov
shl
dec
adc
dec
or
sbb
mov
scas
push
call
xor
mov
push
mov
lods
(bad)
ret
js
and
mov
out
outs
fdivr
addr16
adc
and
and
or
or
add
push
fld
push
or
pop
inc
inc
sbb
fst
(bad)
daa
push
arpl
popf
arpl
push
mov
mov
fcmovb
mov
xor
sub
push
inc
cs
cmp
movs
xor
std
mov
fcom
jno
dec
inc
fs
div
jbe
pop
push
add
sbb
popa
lds
stos
cwde
push
adc
and
clc
mov
cmp
add
js
das
jmp
mov
ins
cwde
xor
aam
rep
or
sub
mov
xor
loop
mov
add
or
dec
mov
mov
(bad)
ret
lods
stos
ror
jecxz
je
push
add
sub
mul
aas
loopne
push
rcr
mov
mov
jnp
mov
jns
daa
xchg
xchg
arpl
adc
iret
and
movs
int
sub
loopne
xor
ja
xlat
out
(bad)
hlt
clc
xchg
sbb
loopne
enter
sbb
stos
sbb
add
mov
frstor
inc
idiv
out
cli
cwde
add
adc
cwde
add
mov
push
test
jbe
cmp
add
xor
mov
rcr
adc
push
sbb
jg
lods
mov
cmp
pop
push
loop
or
push
shr
in
inc
xor
add
int3
shl
sbb
or
jmp
pushf
ds
(bad)
test
xor
cdq
gs
add
add
(bad)
cmc
fidiv
aam
sar
jns
xchg
mov
xchg
xchg
(bad)
(bad)
scas
outs
aam
ja
bound
inc
push
lock
(bad)
jecxz
and
ret
xor
xor
sub
fmulp
push
push
in
arpl
mov
adc
xchg
push
ror
jmp
call
or
cmp
out
les
inc
outs
or
pop
inc
sub
clc
je
push
in
fisttp
leave
push
ror
cmp
mov
and
mov
cmp
(bad)
pushf
lods
je
jmp
in
(bad)
stos
dec
fld
ret
mov
ja
pop
add
retf
aaa
pop
mov
shr
ret
cmps
adc
test
pop
push
sub
cmp
push
psrld
mov
push
jecxz
(bad)
cmp
repz
iret
jl
call
xchg
sbb
rcr
and
and
scas
push
mov
stos
(bad)
inc
(bad)
loop
mov
sti
jae
xor
push
movs
cmps
or
sbb
mov
push
in
inc
and
xchg
push
in
jo
xchg
inc
lahf
add
lods
test
dec
xor
xchg
sbb
cdq
jmp
in
mov
jne
jo
mov
fadd
and
adc
sub
into
rcl
and
or
rol
sub
or
jns
jle
ins
push
loop
cmp
xchg
(bad)
cs
(bad)
jecxz
xchg
or
mov
cld
cld
icebp
mov
bound
pusha
popf
inc
cli
cli
jae
fdecstp
rcl
add
sbb
mov
or
or
sbb
outs
push
dec
cmc
scas
lods
push
jns
push
pop
popa
jge
push
mov
call
call
ss
sbb
sub
add
cli
jg
pop
pusha
ror
hlt
mov
add
test
ss
sub
jo
clc
or
dec
popf
ss
jno
jmp
inc
rcl
call
pop
das
xchg
lds
xor
sub
dec
and
adc
out
daa
shl
pop
cld
(bad)
ins
pusha
ret
sub
sbb
adc
cmps
stos
mul
cmps
inc
int
adc
add
dec
int3
mov
loopne
divps
sub
mov
clc
scas
imul
mov
movs
test
in
mov
cld
sbb
and
sub
xor
mov
mov
pop
xchg
cld
aad
or
jb
xchg
cmp
xchg
adc
hlt
xor
mov
xchg
sub
mov
pop
xchg
in
fistp
(bad)
xlat
or
mov
mov
jecxz
xor
mov
or
push
outs
adc
cmp
mov
and
pop
aad
dec
mov
mov
adc
dec
xor
enter
or
sub
fld
sbb
rol
imul
pusha
pop
sbb
push
mov
outs
push
arpl
push
cmp
or
cwde
inc
and
xchg
(bad)
lock
in
mov
sti
pop
sysexit
mov
popa
hlt
jge
repz
ins
or
mov
inc
mov
rol
mov
sbb
or
dec
retf
mov
pop
into
fwait
add
and
cmps
pop
iret
or
popa
add
mov
ins
xor
stc
lock
rcr
or
add
jno
mov
push
and
ret
in
dec
sti
and
(bad)
or
lods
aaa
sbb
dec
in
es
int3
scas
mov
mul
sbb
cdq
repnz
jo
xchg
fadd
arpl
xor
jbe
(bad)
gs
mov
test
sbb
adc
cli
(bad)
sbb
imul
retf
call
shl
aas
inc
dec
push
and
add
aam
jle
pop
ss
test
push
or
das
lods
out
add
dec
call
std
test
adc
or
sbb
add
cwde
(bad)
jmp
(bad)
cmp
or
imul
fstp
shl
and
leave
inc
jo
add
xlat
jns
cmp
add
mov
test
inc
iret
imul
cmp
in
push
mov
or
sbb
push
pop
dec
jmp
repnz
pushf
icebp
call
mov
push
adc
sti
push
cdq
or
ret
(bad)
jl
jecxz
in
and
enter
or
and
mov
xor
outs
repnz
je
lea
sbb
add
arpl
inc
imul
fld
dec
or
mov
add
xchg
xadd
shl
xor
cmp
jg
aaa
shl
(bad)
(bad)
int
out
into
ds
ins
add
or
cmp
and
dec
xor
repnz
fcomi
pop
jmp
xchg
lds
add
push
mov
xchg
gs
pop
add
and
jmp
jne
jmp
pop
jae
dec
retf
pop
mov
dec
cmc
neg
or
rcr
movs
cdq
xchg
pop
loop
outs
(bad)
std
imul
mov
dec
jl
in
xor
test
outs
sbb
imul
fcom
cmp
repnz
xlat
out
dec
xchg
(bad)
mov
and
shl
test
(bad)
jmp
pop
lea
ret
mov
pop
repz
cld
in
(bad)
push
add
xchg
mov
enter
mov
dec
and
scas
int3
popa
or
mov
xor
mov
add
push
shr
jbe
dec
dec
cs
xchg
add
pusha
add
mov
nop
xor
inc
lods
sub
(bad)
xor
inc
lahf
pusha
es
lods
sbb
loopne
loopne
fldcw
dec
xor
or
jo
shl
rcl
cmc
out
stos
inc
push
xor
fdivr
mov
mov
and
ret
push
mov
inc
add
ret
pop
jb
ja
cmc
adc
xor
cmps
push
iret
call
cmps
punpcklbw
or
cmp
shl
test
push
mov
mov
fcomi
loope
sar
fist
push
dec
out
(bad)
(bad)
(bad)
mov
cmp
cmp
loopne
pop
or
cmp
adc
outs
add
out
(bad)
popf
lods
aaa
aas
push
sub
fmul
jo
fst
pop
sbb
xlat
add
into
cmp
(bad)
outs
adc
dec
dec
inc
out
jg
adc
sbb
cmp
mov
xor
loope
mov
sub
and
xor
dec
mov
das
sub
sbb
push
mov
or
dec
inc
push
or
inc
adc
call
cmp
popf
loopne
adc
jns
jmp
adc
int
(bad)
div
inc
loope
cmps
pop
adc
push
push
call
push
add
shl
dec
call
xchg
movs
scas
mov
ja
fistp
mov
aam
sbb
fisubr
enter
inc
pop
stc
js
jge
ss
mov
je
mov
std
xor
jae
mov
leave
rol
add
push
fld
pop
push
aam
jae
retf
retf
push
mov
test
xor
xor
clc
inc
mov
sub
xchg
jns
(bad)
xor
sub
adc
stos
xor
das
test
mov
adc
out
int
xchg
rcl
sbb
jmp
and
pop
and
les
mov
imul
sub
movs
popa
call
xchg
pop
cmps
and
push
and
lahf
sti
shl
mov
or
inc
aad
cmp
outs
lods
and
push
(bad)
xlat
jl
ja
add
mov
mov
clc
imul
inc
add
mov
in
xor
cmp
add
push
and
stc
fstp
push
out
scas
mov
add
xor
mov
inc
mov
and
into
and
xchg
mov
sub
dec
add
push
xchg
or
fst
or
in
test
cmp
jnp
scas
push
and
dec
lods
ret
loope
sbb
mov
icebp
dec
adc
pop
lea
adc
cmc
or
sbb
ins
(bad)
pop
sbb
(bad)
scas
pop
(bad)
call
mov
shr
xor
daa
mov
xchg
inc
inc
sub
out
inc
mov
neg
in
addr16
and
psubq
in
mov
and
and
and
sub
and
mov
sti
inc
xor
clc
das
lock
pop
aas
cli
leave
lock
pop
ins
sbb
dec
xchg
sub
aam
(bad)
pushf
jmp
jp
sti
std
(bad)
pop
xor
and
mov
jne
mov
pop
push
fs
in
ja
cs
mov
adc
adc
xor
xor
das
add
jb
mov
mov
fs
out
and
xor
(bad)
push
jle
icebp
xchg
fld
cmps
lods
mov
fld
cmc
es
adc
cmp
lea
mov
xor
ss
sbb
add
cmp
push
push
and
mov
jl
mov
mov
frstor
outs
mov
push
loope
fwait
push
out
popa
add
xlat
bound
mov
and
fist
xchg
and
push
xlat
setl
not
xor
sbb
mov
leave
adc
xchg
mov
mov
sub
(bad)
cmps
inc
xchg
pushf
add
ss
and
fsub
inc
cdq
test
sbb
xor
int3
jmp
aaa
sbb
call
push
cmp
(bad)
mov
les
xchg
mov
sub
push
movs
faddp
sbb
or
movs
mov
mov
mov
test
adc
popa
lahf
test
ret
sbb
push
dec
add
movs
and
jae
add
sub
xor
adc
mov
or
cmp
adc
jne
in
cli
repnz
(bad)
scas
mov
sub
add
xor
div
or
add
rcr
add
loopne
pop
sti
loopne
jae
mov
call
stos
xchg
pop
or
jno
test
repz
xchg
mov
add
sub
add
sub
in
fild
xchg
jb
lods
xor
fs
es
into
retf
adc
inc
popa
sbb
or
cmp
jnp
ins
jnp
pop
xor
or
aas
and
mov
push
out
ficomp
pop
enter
jmp
aam
push
stos
cwde
add
push
add
mov
push
adc
cmp
icebp
push
idiv
(bad)
cmp
cmp
mov
mov
adc
jo
inc
or
retf
or
addr16
out
ins
push
xchg
pop
test
add
iret
xor
call
add
cli
cmps
xor
xor
mov
or
ss
jl
test
outs
pop
adc
sub
mov
ins
add
cmc
test
fs
dec
mov
xchg
mov
nop
in
mov
mov
adc
enter
clc
mov
js
std
std
ds
or
adc
mov
dec
test
lock
js
jl
nop
or
xchg
(bad)
movs
xchg
pop
(bad)
xchg
rcr
rol
lods
and
ja
(bad)
mov
sysret
push
xchg
pop
dec
shl
xchg
adc
sbb
dec
mov
div
or
xchg
ror
(bad)
ror
dec
and
sbb
sar
adc
sahf
cwde
test
into
mov
cmps
add
mov
jmp
out
jmp
js
mov
inc
dec
and
mov
lods
add
inc
sbb
mov
das
jecxz
ins
or
add
add
div
(bad)
rcr
retf
loop
sbb
pop
xchg
outs
mov
ror
push
add
and
xchg
jge
add
xchg
push
cdq
mov
lods
stos
xchg
adc
add
cmp
mov
xchg
push
xor
ins
mov
or
mov
mov
int3
mov
inc
repnz
pusha
fild
sub
or
fld
pop
mov
cmp
retf
and
push
loop
aas
xchg
cwde
add
loopne
push
dec
into
cmc
clc
adc
rcr
ins
loopne
aas
mov
rcl
ss
popf
idiv
enter
mov
shl
je
mov
(bad)
ret
xchg
pop
or
movs
test
cld
lahf
stos
dec
push
and
sub
shr
enter
add
loopne
mov
call
(bad)
mov
jg
hlt
fucomi
rol
out
ficom
or
arpl
add
out
movs
add
push
fild
outs
adc
push
aam
pop
shl
cmp
adc
cmp
test
sbb
scas
dec
es
push
add
mov
mov
scas
sub
jl
in
arpl
into
push
or
fadd
fnsave
pusha
inc
or
lea
xor
pop
neg
cs
dec
mov
cmp
pop
sbb
mov
shr
mov
das
das
loope
jle
ret
in
js
and
xor
xchg
xchg
int
mov
jae
jo
stc
ins
xor
int3
xor
or
lahf
jecxz
lods
cmp
push
cmp
ins
sbb
fldcw
xchg
sbb
xchg
mov
and
xor
daa
jp
cmp
ss
xchg
push
pusha
xchg
(bad)
arpl
xchg
cwde
fsub
mov
push
sbb
xor
iret
repz
inc
jbe
sub
adc
push
xchg
cmp
call
mov
aas
jns
mov
sub
push
js
mov
xchg
jmp
add
rol
rol
inc
inc
cdq
xchg
adc
add
test
push
nop
packsswb
ss
mov
sub
xor
inc
and
(bad)
mov
icebp
push
loope
pop
stos
pop
cld
bound
out
loope
shl
jl
dec
jg
dec
cld
fs
(bad)
stos
clc
(bad)
shl
mov
int3
xchg
test
in
test
outs
shl
mov
pop
mov
dec
cmp
mov
push
aas
sub
inc
cli
mov
xchg
or
popf
cwde
cmp
rol
push
and
les
inc
sub
jmp
xchg
out
dec
mov
sbb
adc
add
add
pop
mov
push
mov
add
popa
jne
iret
outs
das
iret
push
sbb
pop
add
icebp
mov
js
xchg
jb
mov
pop
adc
cmp
icebp
inc
add
sub
xor
mov
mov
push
ds
sub
push
xchg
bound
fidiv
push
pop
call
add
fwait
sub
inc
sub
scas
and
test
and
push
gs
sar
fld
push
mov
arpl
dec
out
and
and
sbb
push
mov
int3
pop
or
add
pop
sbb
inc
mov
inc
jge
xlat
fist
pusha
out
pop
mov
inc
loop
pop
lods
mov
mov
je
sub
xor
mov
mov
jae
into
(bad)
push
data16
je
jge
or
sub
aas
fbstp
retf
std
sbb
cmp
int3
fisttp
in
sbb
data16
xor
idiv
inc
jae
add
jl
xchg
add
add
inc
aaa
lods
into
fdivp
aaa
out
outs
lea
xor
inc
xor
pushf
push
jbe
popa
mov
sub
int
push
fs
imul
(bad)
xchg
add
sbb
and
mov
seto
es
adc
dec
test
add
(bad)
mov
mov
pop
cs
fcom
outs
sbb
add
pcmpgtb
fwait
cmp
mov
scas
pusha
jecxz
popa
push
add
lock
cmp
ficomp
enter
sub
xchg
arpl
cwde
mov
in
inc
ret
imul
out
mov
fbstp
or
scas
(bad)
sbb
inc
aad
mov
push
iret
adc
and
(bad)
and
sahf
mov
pop
mov
xchg
pop
xor
xor
cdq
test
mov
bound
popa
sbb
mov
add
dec
scas
rcl
(bad)
in
cdq
and
jle
mov
jmp
jg
add
ins
xor
jmp
mov
ss
jle
mov
dec
ins
test
adc
stc
adc
xor
jmp
stos
daa
cmp
nop
aad
cmps
test
sbb
pop
and
les
pusha
mov
sub
inc
xor
sub
cwde
inc
mov
lock
adc
movs
rcr
inc
mov
sub
mov
jb
aam
retf
nop
xchg
aaa
cmps
(bad)
inc
sub
aaa
call
dec
aad
mov
cld
adc
aam
rcr
dec
pop
ror
jecxz
pop
sbb
add
push
dec
inc
mov
mov
test
inc
hlt
pop
xor
fstp
inc
mov
sar
dec
sbb
das
movs
es
xlat
jp
cwde
or
lods
dec
push
dec
ja
jne
stc
cli
adc
nop
(bad)
and
sar
jno
jmp
retf
add
mov
std
mov
lahf
cmp
ds
fs
repnz
mov
mov
(bad)
inc
je
xor
push
call
into
inc
pop
adc
mov
push
lock
push
jg
pusha
inc
fiadd
or
fs
fcomp
adc
mov
fcom
push
mov
add
push
nop
inc
xor
cmp
cmp
jg
sub
jmp
push
aam
(bad)
(bad)
pop
in
fimul
icebp
push
dec
pop
mov
test
cmp
xchg
(bad)
repnz
(bad)
popa
ins
repnz
mov
adc
pop
call
dec
cmp
mov
stos
stos
cmps
les
push
lods
mov
jg
test
add
push
or
pop
imul
test
(bad)
cwde
push
mov
not
dec
dec
jg
add
ins
loopne
sbb
sahf
scas
loopne
mov
mov
fisub
sahf
(bad)
and
and
xlat
ins
out
icebp
loope
mov
xor
pusha
xlat
and
out
pop
mov
pop
xchg
imul
pop
aaa
pop
adc
out
aas
(bad)
mov
pusha
popa
into
adc
xchg
mov
dec
jmp
mov
mov
popf
fsubr
sbb
mov
clc
jbe
shr
or
dec
pop
sbb
push
ins
jmp
sub
add
xor
addr16
xchg
and
lods
pop
retf
scas
mov
loop
hlt
shl
outs
shl
mov
push
aad
fdiv
adc
lds
mov
mov
sbb
pop
frstor
fwait
cdq
mov
xor
dec
xchg
btr
inc
xlat
xchg
(bad)
retf
outs
sbb
loopne
mov
inc
or
call
aam
jns
add
call
in
cmp
(bad)
(bad)
sbb
adc
pop
mov
pop
add
das
inc
jbe
dec
lds
add
add
add
not
fs
mov
mov
add
call
jp
in
(bad)
lds
lea
mov
mov
mov
cdq
cwde
jne
call
and
inc
es
xor
fidiv
imul
imul
(bad)
sahf
mov
sub
adc
(bad)
push
jb
mov
inc
inc
pop
sbb
addr16
mov
mov
xchg
or
xor
prefetchwt1
or
out
sti
outs
(bad)
lds
adc
hlt
cmp
call
mov
sub
inc
out
pop
ins
mov
sub
add
cmp
loopne
rol
jle
lahf
ds
test
cmps
add
(bad)
sbb
push
data16
jp
clc
movs
(bad)
xor
int
pusha
add
pushf
add
test
ins
cmp
les
(bad)
int3
inc
out
mov
dec
(bad)
(bad)
jmp
ret
mov
push
add
or
push
fs
and
and
clc
sub
jmp
sbb
xor
mov
out
pop
jno
imul
ficom
mov
pop
ins
mov
xor
movs
fdiv
es
dec
push
sub
mov
jbe
jae
jnp
push
inc
dec
xlat
scas
add
scas
cmp
icebp
fucomip
and
test
mov
(bad)
and
dec
push
stc
icebp
inc
pusha
aad
popf
daa
sbb
dec
adc
outs
cli
ret
push
call
clc
and
push
js
add
sub
rcr
fld
leave
sahf
movs
test
xor
sar
xor
call
adc
xor
add
pop
inc
shl
sbb
mov
fidivr
pushf
das
mov
inc
in
cdq
and
xor
enter
and
retf
pop
fwait
pop
outs
inc
ds
add
lea
mov
ret
or
add
inc
pushf
stos
les
test
cmps
sbb
sub
repnz
cdq
enter
in
cwde
enter
jne
outs
push
push
nop
test
inc
xor
mov
aaa
hlt
(bad)
das
mov
jnp
mov
push
and
sbb
cmp
mov
rcl
iret
jp
mov
popa
add
dec
adc
ins
int3
sbb
out
or
(bad)
adc
pop
or
fs
cmp
mul
adc
push
bound
adc
add
add
iret
sar
add
ret
out
icebp
dec
cli
cmc
in
mov
in
jg
stc
mov
dec
xchg
pop
not
fdivr
sub
mov
rol
and
icebp
imul
cmp
outs
movs
leave
mov
add
in
pop
dec
and
xor
xchg
push
aaa
dec
xlat
jmp
jecxz
push
pusha
mov
retf
push
dec
outs
ret
aam
adc
movs
pop
std
pop
push
imul
stc
retf
ds
mov
leave
xor
push
adc
adc
icebp
cmc
sub
arpl
push
test
push
out
dec
movs
sbb
mov
mov
in
push
add
aaa
js
lahf
ret
lds
(bad)
mov
icebp
imul
mov
sub
jne
lock
nop
jmp
inc
inc
pop
adc
sar
daa
out
outs
dec
outs
pop
pop
mov
push
rcr
jmp
std
sbb
out
mov
mov
aam
mov
iret
xor
mov
pusha
add
mov
or
xchg
cli
xadd
shl
push
inc
jmp
nop
mov
sub
mov
sar
mov
mov
out
dec
ss
call
loop
(bad)
es
and
or
popa
add
xchg
test
inc
push
scas
jae
dec
jmp
push
add
aam
inc
rcr
cli
cwde
sti
xor
fldcw
cmp
push
jbe
push
retf
gs
mov
sub
stos
iret
jmp
and
pop
jge
in
jle
stos
das
shl
pusha
ins
sbb
aaa
icebp
xor
xor
lahf
mov
xor
inc
pop
xchg
push
int3
sar
repnz
push
add
or
pop
bound
inc
stos
test
cmps
or
rcr
adc
adc
mov
pop
push
fdiv
add
cwde
inc
xchg
(bad)
mov
push
mov
add
sbb
sbb
sub
js
push
mov
ss
fcmovnbe
stc
fwait
xchg
cld
adc
xor
test
fwait
xchg
cmp
rol
push
rcl
push
jle
xor
sub
mov
cwde
mov
inc
push
or
arpl
adc
repnz
and
sbb
jnp
and
sub
test
sub
movs
scas
mov
fidivr
pushf
int3
(bad)
bound
mov
int
leave
aas
jle
xor
xchg
test
aam
repnz
xor
test
mov
into
iret
inc
movs
mov
popf
pop
push
and
retf
imul
jg
lods
xchg
and
ret
(bad)
push
push
inc
sub
add
xchg
jnp
repz
test
inc
hlt
mov
sbb
adc
push
hlt
pop
addr16
add
xlat
xchg
dec
adc
inc
iret
outs
add
pusha
dec
adc
mov
hlt
(bad)
mov
ret
sbb
call
or
fcomp
cs
fsub
mov
sti
dec
shl
outs
ds
mov
push
hlt
loop
dec
fstp
sub
push
push
adc
dec
aam
mov
movs
rol
adc
inc
out
cmp
add
xchg
push
and
cs
sbb
xchg
scas
adc
jecxz
xchg
dec
sub
rol
(bad)
pop
mov
sbb
cmps
xor
ret
inc
daa
and
int3
inc
(bad)
loopne
ins
jg
xor
mov
xor
jbe
push
ret
dec
rcl
cmp
test
ret
(bad)
jo
nop
pop
jne
outs
ret
out
cli
inc
cmc
aas
cmp
fiadd
mov
ret
retf
inc
sahf
pop
add
add
add
js
xchg
sti
(bad)
ss
std
or
and
and
int3
add
cmc
mov
cmp
imul
imul
fs
in
add
mov
aam
cmp
sahf
loopne
pop
mov
add
push
xchg
mul
inc
enter
add
add
and
xchg
pop
pop
pushf
dec
and
pop
outs
add
(bad)
push
push
xor
retf
sub
push
pop
dec
popf
mov
sbb
cmovl
xchg
fcomp
cmp
or
lods
pop
aam
xchg
fnstenv
xor
mov
dec
sbb
call
mov
cmp
sbb
mov
pop
push
sar
push
cs
test
nop
pop
pop
fcomp
jge
mov
(bad)
dec
cmp
xor
add
adc
push
movsx
dec
sub
dec
add
inc
sbb
in
jl
adc
pusha
int3
and
das
or
test
fistp
xor
dec
or
dec
jge
sub
inc
push
cmp
inc
ds
repz
inc
adc
inc
lds
in
push
std
cmp
stos
cmp
and
or
popa
lods
cli
jge
mov
cld
(bad)
and
int
sub
mov
mov
pop
pop
xor
jnp
sbb
add
inc
repz
xor
xor
iret
mov
mov
cmp
sbb
imul
xchg
movs
fdivr
(bad)
xlat
imul
retf
jb
cli
ret
adc
pop
inc
std
and
ret
nop
mov
mov
cmp
daa
pop
or
add
dec
cs
(bad)
mov
or
cmp
jl
div
dec
xlat
ja
push
add
iret
outs
add
(bad)
ins
call
int
out
cld
push
sbb
mov
mov
pop
or
int3
add
inc
mov
aam
add
jne
scas
mov
add
dec
not
cmp
in
stos
xor
mov
jne
inc
sbb
mov
(bad)
mov
(bad)
pusha
dec
fs
cdq
sub
xor
fs
ja
shr
fdiv
add
test
inc
js
push
cdq
inc
mov
xor
cmp
cli
xor
nop
xor
ror
ret
add
(bad)
push
jbe
xchg
sbb
(bad)
and
test
mov
push
popa
pop
pop
cdq
cmp
sub
mov
ins
and
lods
scas
lock
mov
sbb
sbb
dec
movs
mov
sub
js
mov
(bad)
push
inc
dec
clc
push
imul
mov
in
das
call
ret
pop
ins
push
std
lds
(bad)
adc
loopne
lock
scas
pop
lahf
pop
ds
inc
mov
dec
shl
dec
cmp
or
das
push
shr
mov
and
movs
cwde
add
pop
or
and
mov
sub
xor
xchg
mov
pop
mov
mov
nop
pop
sub
ins
nop
and
arpl
dec
retf
sbb
jae
jns
imul
jbe
bound
add
aaa
pop
add
push
xor
sbb
jl
fiadd
pusha
icebp
fimul
xor
add
stc
shl
xchg
mov
pop
add
jo
(bad)
call
mov
clc
rsqrtps
js
sub
cmp
and
mov
mov
mul
in
scas
jecxz
mov
add
xchg
lock
cld
inc
fadd
loope
inc
loope
mov
cwde
fistp
icebp
jecxz
(bad)
(bad)
dec
fstp
add
push
cli
pop
pop
(bad)
jg
(bad)
pop
inc
jg
inc
div
sbb
mov
nop
xchg
fdiv
inc
sub
cmp
or
dec
or
push
jle
xchg
out
adc
push
jmp
stc
movs
mov
mov
das
xchg
loope
dec
mov
mov
and
call
daa
std
in
add
idiv
jae
add
icebp
mov
sbb
pop
add
stc
rcr
mov
aaa
(bad)
mov
leave
or
push
in
sub
sub
rcl
inc
mov
stos
or
test
mov
test
jmp
dec
pop
adc
push
loopne
push
fnstenv
aaa
mov
mov
adc
out
scas
aaa
dec
xor
mov
push
retf
das
ffree
or
push
(bad)
cmc
aas
ret
repnz
fild
jnp
or
mov
in
xor
mov
loope
es
cwde
jo
repnz
cmp
or
pop
bound
add
ja
pop
fnstsw
inc
add
cdq
inc
div
(bad)
hlt
pop
pusha
rep
mov
imul
cmps
or
inc
es
pop
sub
outs
fs
pusha
les
sar
dec
cld
icebp
xor
add
icebp
add
test
xchg
hlt
out
bound
and
or
and
mov
hlt
cmps
sbb
jno
loopne
jnp
jo
aas
and
sbb
jecxz
test
push
jg
mov
(bad)
icebp
add
add
fwait
mov
out
sub
mov
(bad)
sbb
adc
addr16
mov
cdq
enter
or
int
mov
xor
mov
sbb
and
popf
or
fwait
ret
pop
dec
adc
or
test
dec
add
lods
cwde
adc
retf
or
jns
inc
pop
sub
jmp
mov
adc
imul
cmp
int
fild
jge
add
nop
aad
out
mov
xor
jmp
inc
and
pop
add
sbb
mov
add
inc
cld
sar
cs
rcr
mov
(bad)
in
jnp
(bad)
cmovo
test
cmp
ror
enter
cmp
xchg
fisttp
dec
clc
repnz
dec
cli
pop
mov
dec
mov
jb
clc
and
mov
idiv
cdq
add
xchg
imul
int3
nop
rcr
cld
loope
les
hlt
(bad)
rol
out
add
mov
push
push
add
mov
(bad)
fild
pop
pop
xor
int3
enter
push
ss
stc
dec
and
push
out
jecxz
mov
pop
adc
mov
es
outs
test
add
test
lea
xor
popa
mov
jp
cmps
sbb
outs
into
sbb
jge
in
ror
scas
xor
mov
push
jle
(bad)
rcl
sbb
loop
sbb
jb
add
inc
xlat
cmc
fld
inc
int3
inc
sti
fnsave
inc
mov
outs
inc
xor
mov
jge
xor
xor
(bad)
cwde
and
neg
jg
push
add
mov
xchg
out
jne
ins
daa
pop
sub
add
sbb
mov
popa
add
les
dec
jmp
or
add
push
push
pop
sub
xchg
sub
fmul
pushf
push
cs
aas
ds
lahf
loop
inc
jmp
fisubr
out
stc
aaa
je
jmp
inc
popa
add
add
mul
pop
add
in
push
pop
cmps
mov
fs
movs
jnp
fstp
cdq
fadd
add
sbb
pushf
pop
and
rol
in
adc
cmps
ja
movs
mov
shr
enter
jge
add
fnstenv
sub
or
xchg
shr
xor
mov
test
lods
in
in
call
sub
xlat
(bad)
adc
sbb
mov
jmp
pop
std
adc
sbb
shr
add
fcom
xchg
pushf
sbb
icebp
xchg
add
data16
or
lds
call
dec
pop
push
add
das
mov
adc
repnz
inc
fwait
xor
fidivr
test
mov
(bad)
adc
pop
jmp
xchg
lahf
or
bound
mov
cwde
inc
fst
scas
dec
cs
inc
int3
push
pop
add
pop
rol
fnstenv
aad
push
push
repnz
or
pusha
or
cmps
loope
sub
imul
or
and
jbe
repz
ficomp
xchg
mov
std
push
std
cli
dec
cmp
dec
adc
push
mov
loopne
paddw
popa
jne
inc
cmp
mov
fcomp
add
xor
push
mov
shl
shl
sbb
je
jb
and
(bad)
stos
enter
pop
push
push
sbb
add
movs
mov
jmp
dec
mov
movs
movs
and
scas
ret
ja
mov
push
mov
inc
adc
dec
lods
call
add
icebp
pop
ret
pop
push
call
push
ret
es
mov
stos
ret
jbe
and
pop
test
je
test
aad
inc
or
test
fild
lods
cmp
cmp
and
jl
outs
fcmovnb
xor
imul
std
ss
sti
call
jo
push
xlat
pusha
sbb
(bad)
mov
push
scas
repnz
cmp
sbb
sub
xchg
pop
push
cs
js
xchg
ins
xchg
es
imul
or
adc
add
call
test
out
or
xor
(bad)
xor
mov
out
adc
adc
jge
(bad)
idiv
add
emms
(bad)
std
int3
jecxz
xor
(bad)
pusha
mov
add
xlat
dec
pop
std
push
lods
xor
loope
int3
mov
bound
mov
loopne
leave
lds
loope
(bad)
pop
cmp
add
cmps
and
sub
pusha
add
xor
inc
adc
ret
(bad)
mov
rol
cmp
imul
aas
add
je
lods
out
pop
icebp
push
adc
push
cld
xor
xchg
mov
mov
pushf
arpl
cld
mov
mov
push
leave
mov
punpcklbw
ja
xchg
xor
inc
inc
(bad)
mov
cli
jmp
xor
or
movs
mov
sub
out
mov
out
(bad)
loopne
sbb
jo
retf
outs
(bad)
xor
(bad)
stc
(bad)
xchg
pop
xchg
jge
jnp
push
push
fld
add
jae
outs
mov
das
aaa
xor
mul
adc
cmps
into
iret
add
inc
out
cmp
and
push
cwde
and
test
imul
ins
sti
stos
nop
pop
mul
push
mov
cli
in
(bad)
jmp
aad
aas
lock
dec
loopne
rol
fs
pop
add
out
aaa
jmp
ffree
leave
setbe
in
inc
and
pop
inc
xor
in
mov
push
pusha
adc
xchg
iret
adc
inc
mov
fwait
mov
pop
pop
sti
xlat
fst
dec
push
inc
int3
adc
sbb
pop
jb
mov
and
aam
cmp
popf
sub
ret
das
mov
pusha
rol
xor
dec
xor
sbb
sbb
ret
lods
das
jae
aas
mov
jle
std
ror
or
xchg
cwde
fnstsw
clc
sar
lock
std
rep
loope
cli
adc
lods
pop
inc
(bad)
mov
xchg
or
push
xor
mov
jae
and
mov
mov
fsub
jg
sbb
mov
ret
outs
cmp
js
test
shl
lock
lahf
or
xor
jg
mul
scas
addr16
jne
push
into
push
push
mov
sbb
add
xchg
dec
ret
xchg
sub
inc
pop
sbb
mov
push
mov
or
hlt
sbb
add
dec
jo
or
add
sti
shl
adc
pushf
sub
inc
cmovo
cmp
div
ja
adc
push
call
and
cmp
or
jle
lock
repz
jge
push
jne
adc
enter
mov
and
jnp
repnz
(bad)
cld
inc
and
and
add
push
clc
push
or
test
and
aas
sahf
ja
arpl
faddp
jl
nop
jae
inc
jno
mov
aad
inc
inc
push
clc
or
push
adc
jo
and
lea
aas
pop
add
adc
jae
fidivr
dec
cmp
movs
pop
mov
cmps
mov
mov
pop
mov
sbb
sbb
(bad)
push
ja
and
or
sar
shl
pop
sbb
sbb
mov
jbe
sar
dec
ins
icebp
xchg
pop
mov
dec
inc
call
sub
add
lods
jno
add
dec
cmps
jecxz
cli
mov
fwait
dec
jns
inc
in
dec
imul
scas
sub
and
and
retf
mov
mov
mov
lods
dec
out
ins
push
mov
test
push
out
mov
out
sbb
pusha
mov
dec
mov
nop
xor
mov
sub
push
pop
mov
call
push
pop
sbb
mov
adc
lods
psrld
loop
xor
retf
rol
loopne
mov
out
push
aas
mov
add
and
in
sub
mov
inc
mov
dec
mov
jmp
pusha
lods
cmp
lea
cmp
add
fist
inc
outs
sar
pop
or
fld
push
ins
std
ror
mov
fdiv
les
arpl
sbb
fimul
push
pop
xor
dec
jns
push
sbb
psadbw
fsub
ja
js
xor
cmps
call
inc
add
xor
mov
push
outs
push
and
dec
lahf
dec
shl
mov
ins
dec
sahf
sub
in
push
add
push
sbb
loopne
xchg
popf
imul
bound
mov
pop
aaa
ins
pop
mov
(bad)
push
aam
stos
jl
iret
cmp
ins
xchg
fdiv
add
or
add
jle
lock
repz
mov
jne
enter
mov
cwde
mov
loopne
or
adc
push
aas
cmps
aam
sbb
ins
(bad)
or
sub
lahf
xchg
sub
add
pusha
call
pop
xor
sti
cwde
push
push
dec
jle
xchg
push
sub
fiadd
pop
dec
pusha
loop
push
and
mov
jmp
xor
cli
add
pavgb
out
inc
fcomp
inc
or
sar
(bad)
and
pop
stc
retf
jo
sbb
(bad)
in
test
out
mov
(bad)
lahf
mov
fucom
rcr
jns
cwde
das
rcr
cmp
test
dec
dec
mov
mov
aaa
hlt
xor
imul
out
xor
stc
add
aas
xchg
test
sub
jg
xor
push
in
adc
or
push
rcr
call
cmps
inc
sbb
xor
mov
jecxz
arpl
pop
and
cld
mov
xchg
jmp
dec
sbb
jae
cmps
mov
inc
dec
dec
adc
imul
test
fidiv
cmp
call
add
mov
and
sbb
adc
pop
aaa
inc
jbe
add
push
push
xchg
dec
fld
sub
nop
mov
fldlg2
pushf
cmp
adc
inc
stc
or
mov
push
movs
in
js
les
dec
jge
data16
aaa
jl
leave
add
xor
add
dec
jg
(bad)
std
jb
jns
shl
fsub
push
out
das
shr
loope
iret
jecxz
cmc
cmp
(bad)
int
mov
bound
pop
cmp
mov
cld
loope
arpl
popf
jg
jns
scas
jle
mov
adc
sbb
pushf
add
pop
cmp
(bad)
and
pop
mov
and
iret
pop
inc
arpl
push
xchg
jmpw
or
(bad)
push
xchg
adc
popaw
push
pushf
jecxz
inc
shl
mov
ficom
inc
mov
mov
cwde
loopne
mov
adc
data16
and
ja
fisttp
sar
jecxz
add
and
xchg
cmc
xchg
xchg
cwde
sbb
shl
mov
or
push
xor
or
push
or
push
mov
pusha
std
jecxz
push
sub
push
add
lods
sbb
inc
xchg
fisub
add
and
dec
dec
pop
(bad)
sbb
or
sbb
cmp
test
sbb
add
out
or
push
adc
sahf
arpl
or
or
not
mov
sti
outs
shl
idiv
sub
mov
std
or
mov
div
iret
inc
stos
jg
mov
mov
in
int
cwde
jge
mov
push
popa
(bad)
loopne
clc
inc
xor
into
pop
int3
enter
cmp
loop
and
and
popa
push
cmp
outs
ror
sub
fstp
movs
jno
inc
xor
retf
and
cmp
mov
js
out
fistp
fisttp
inc
retf
std
sub
pushf
dec
or
(bad)
jl
fdiv
sub
enter
(bad)
xchg
dec
fistp
mov
mov
mov
(bad)
pop
add
cmp
adc
pop
xor
in
jmp
repnz
ss
or
sub
sub
aaa
add
pusha
addr16
fwait
mov
and
iret
(bad)
push
in
(bad)
iret
daa
pop
sub
(bad)
cmps
test
inc
dec
mov
adc
xchg
mov
fs
in
shl
xor
es
jb
and
ds
hlt
loop
mov
mov
xchg
or
jmp
out
clc
aaa
(bad)
jge
pop
sti
push
xchg
fisubr
dec
loopne
jmp
(bad)
(bad)
adc
jge
je
or
loopne
test
cmps
pusha
out
mov
xor
xchg
into
mov
push
jle
add
sbb
shl
sbb
sbb
add
scas
fs
pop
adc
pop
(bad)
jl
mov
push
into
xbegin
mov
int
cdq
or
sub
repnz
pop
clc
jnp
add
cwde
xchg
push
push
inc
mov
xor
adc
dec
pop
jle
repz
inc
aaa
add
push
jns
div
sbb
add
shl
std
or
add
adc
xchg
pop
das
mov
mov
xchg
adc
and
mov
sbb
mov
or
sbb
jno
cwde
add
mov
push
pop
popa
add
sbb
shl
push
push
cmp
adc
fidivr
test
push
test
add
add
pop
pop
mov
(bad)
loopne
mov
add
xor
xor
sbb
stos
ja
push
pushf
(bad)
stc
aad
ret
call
pop
arpl
mov
rcr
lods
enter
sti
div
idiv
fsub
xor
push
sbb
adc
enter
(bad)
repnz
sbb
fwait
add
aas
adc
lea
into
ret
cmp
dec
add
inc
test
and
bound
cwde
adc
mov
fsub
out
(bad)
mov
lods
repz
jmp
xor
(bad)
fidiv
ret
add
adc
jge
pop
pop
dec
clc
sbb
cmc
jecxz
outs
and
call
mov
lahf
add
ds
sar
inc
pop
and
sti
(bad)
xchg
(bad)
out
jge
out
loopne
and
dec
inc
int3
enter
imul
lods
xlat
test
jg
adc
cmp
addr16
test
cmp
in
sbb
das
push
imul
and
adc
pop
mov
and
mov
cmp
cmp
(bad)
cld
retf
shl
sub
dec
daa
int
int
fwait
lahf
retf
xchg
sbb
jge
add
mov
xor
(bad)
idiv
or
cdq
xor
pavgw
in
outs
(bad)
cmc
mov
inc
xor
ins
fidivr
stc
dec
ja
dec
imul
push
jmp
aam
xchg
jae
test
or
adc
inc
cmp
mov
xor
pushf
push
add
or
push
pop
jg
rcr
shr
sub
sbb
inc
jns
cmp
es
mov
cld
push
push
cwde
push
xchg
add
add
mov
mov
jmp
clc
inc
in
xchg
sub
sar
pop
sahf
popf
mov
or
dec
fdivrp
inc
sbb
aaa
xor
push
(bad)
in
inc
or
out
cs
fsubrp
into
lahf
mov
outs
push
sub
(bad)
mov
and
inc
push
int3
mov
sahf
and
push
popa
and
add
dec
mov
movs
and
or
ins
mov
sbb
out
or
adc
scas
add
push
mov
psubw
movs
push
ins
iret
out
inc
xor
sub
pusha
js
fwait
mov
ror
in
repz
adc
jnp
(bad)
jns
jne
mov
loopne
shl
shl
dec
push
jmp
inc
out
cli
inc
mov
jne
xchg
call
ficomp
ja
jmp
jg
popa
add
mov
xor
cli
outs
mov
shr
adc
enter
pop
movnti
int
cmp
dec
push
inc
ss
pop
clc
es
leave
mul
sbb
adc
fcmovnbe
inc
adc
into
xchg
scas
inc
ds
xchg
(bad)
imul
cmp
icebp
retf
clc
ret
add
cmps
or
dec
pop
arpl
mov
out
mov
iret
int3
or
in
push
into
dec
je
and
jl
jnp
cmp
jne
mov
std
jge
mov
mov
sub
add
mov
sbb
push
fnstsw
pop
sbb
mov
cmp
stos
mov
fwait
stos
cld
and
sbb
ins
and
in
xor
pop
jb
test
add
addr16
dec
mov
dec
icebp
out
ins
loope
jl
mov
jbe
mov
adc
sbb
xchg
jnp
movs
ja
call
ror
addr16
stc
add
jmp
mov
fild
sar
vcmpeq_ussd
mov
loop
popa
ficomp
fsubr
add
pop
enter
xchg
leave
or
popa
inc
cld
mov
popa
repz
mov
mov
jl
xchg
mov
cmc
imul
add
sar
call
js
out
std
cmps
lock
retf
clc
sti
mov
bnd
push
sar
dec
mov
xor
mov
(bad)
in
repz
out
lds
inc
and
enter
mov
sub
shr
ret
adc
loopne
test
mov
scas
mov
and
movs
bound
mov
push
int
push
bound
push
pop
mov
sar
push
scas
dec
fadd
test
adc
mov
cmps
cmp
pop
lahf
cmp
cmp
leave
addr16
jg
clc
fisttp
rcl
jmp
shl
jg
xchg
shl
rol
pop
and
(bad)
ins
add
add
xor
loope
inc
scas
jl
ja
xor
test
(bad)
push
mov
rcl
ins
or
call
in
mov
test
jb
icebp
shl
(bad)
pusha
jl
pushf
cmp
loopne
mov
xor
mov
and
enter
pop
push
cs
add
nop
add
xor
pushw
sahf
int
out
mov
clc
or
das
mov
cmps
inc
jae
or
push
out
sbb
imul
cli
mov
cli
(bad)
fwait
test
out
push
and
adc
inc
mov
push
in
rcl
mul
and
(bad)
hlt
add
push
ja
(bad)
jo
inc
jo
cdq
pop
sbb
xchg
(bad)
rcr
mov
test
gs
push
les
jns
arpl
inc
(bad)
cmp
or
push
ja
cmp
cmps
fild
add
das
loope
cmp
add
ror
jns
repnz
xor
push
fdiv
jl
cmc
retf
pop
pop
das
xchg
icebp
sahf
lds
mov
adc
xor
lahf
ror
inc
bound
add
ja
scas
arpl
xchg
in
stc
fwait
jg
dec
xlat
dec
pop
jle
sar
fiadd
lock
(bad)
and
jg
cmp
adc
adc
or
add
adc
jmp
mov
cld
mov
ss
adc
inc
dec
or
cwde
add
push
add
sub
mov
(bad)
sub
mov
dec
xchg
leave
mov
pushf
pop
jns
cmp
sbb
shl
mov
rol
pop
add
pushf
dec
in
or
pop
pop
dec
jmp
sbb
inc
mov
jae
in
sbb
ins
xor
sub
mov
aad
mov
mov
cdq
sub
add
xor
mov
movs
data16
jecxz
add
shl
(bad)
jmp
pop
lods
cmovo
out
pop
xor
jle
aas
add
stc
int
inc
sub
adc
outs
pusha
mov
cwde
int
data16
shr
jns
imul
in
inc
add
sub
bound
xchg
fst
xchg
rol
jmp
lahf
iret
adc
test
mov
mov
jbe
ss
loop
call
or
mov
fadd
stos
sub
inc
xchg
pop
in
fbstp
pop
(bad)
popa
fdiv
jmp
idiv
pop
add
js
sar
mov
sbb
inc
(bad)
xchg
inc
pusha
or
adc
loope
icebp
std
xlat
in
jl
shr
lock
sub
call
mov
dec
pop
push
rcr
dec
push
fidiv
mov
lea
sbb
bound
mov
xchg
js
dec
add
push
in
mov
repz
es
xor
test
adc
mov
into
and
ins
shl
add
sbb
push
popa
inc
jne
das
inc
scas
adc
or
cdq
inc
mov
ror
push
sub
adc
movs
daa
inc
bound
xchg
loopne
jecxz
gs
mov
push
dec
int
mov
jmp
sbb
xor
sbb
pop
pop
sar
pusha
sbb
add
call
push
lds
movs
nop
dec
ret
scas
outs
fimul
mov
test
mov
lock
cmc
nop
(bad)
retf
and
xchg
xchg
repz
mov
cwde
push
jno
lea
cmps
out
cld
sar
xchg
neg
cli
cs
aas
inc
mov
aas
mov
aas
iret
cmp
outs
push
mov
or
out
add
jo
ja
jge
loopne
int
jle
xor
mov
inc
and
add
loopne
ins
push
rol
hlt
cmps
dec
and
and
ss
mov
sbb
je
xchg
inc
and
add
les
xchg
inc
push
jp
xchg
hlt
es
or
xor
lock
push
pop
fld
pop
adc
retf
shl
nop
loopne
cld
frstor
(bad)
push
gs
lahf
inc
mov
adc
sub
sub
shr
dec
adc
gs
cdq
cmp
or
push
cmp
xchg
xchg
lock
aam
movs
retf
dec
neg
shl
cs
repz
in
cdq
or
add
aaa
and
pop
xor
dec
pop
add
adc
pop
loop
dec
loopne
pop
add
sbb
lods
cs
pop
mov
test
out
arpl
aas
push
in
(bad)
dec
add
mov
jno
shr
adc
popf
mov
pop
das
mov
or
push
and
pop
pusha
sahf
loop
(bad)
xor
pusha
xchg
inc
inc
and
xor
(bad)
cwde
mov
frstor
push
xchg
mov
shl
lods
add
imul
call
data16
dec
and
loopne
out
inc
cwde
adc
ret
popf
jne
mov
add
test
xchg
scas
xchg
mov
scas
iret
call
sub
aas
push
cdq
adc
jno
rol
fcomp
rol
xchg
mov
push
sbb
pushf
xchg
popf
and
es
or
xchg
and
pop
popa
aam
fwait
retf
inc
inc
jmp
xor
xor
dec
cld
fld
imul
pop
cli
daa
loop
jbe
xchg
das
out
mov
mov
or
call
(bad)
xchg
or
cmp
and
mov
cmp
jle
js
repnz
loopne
xchg
xchg
mov
adc
mov
and
mov
sub
scas
add
xor
pop
xor
sbb
pop
adc
jecxz
dec
(bad)
or
and
int3
inc
movs
ds
popa
add
sbb
es
and
mov
inc
imul
or
pop
inc
jl
and
cwde
inc
jle
mov
icebp
mov
es
sub
xchg
jo
adc
push
gs
out
add
or
lds
push
mov
sub
jae
pop
push
inc
movs
iret
iret
inc
mov
loopne
push
movs
rol
inc
xchg
mov
and
xchg
sub
jge
mov
sbb
xor
lock
and
daa
mov
adc
jmp
mov
addr16
ficomp
jl
jnp
les
and
aas
push
aad
xchg
scas
js
inc
push
pushf
iret
sahf
add
sar
mov
mov
out
xchg
add
popf
rol
pusha
mov
inc
(bad)
jge
aam
dec
cmp
in
dec
xchg
add
xor
or
nop
bound
pop
mov
adc
mov
pop
pop
(bad)
and
cmps
dec
jle
int3
test
repz
in
mov
fild
inc
stc
pop
xor
popa
stos
cmps
sar
repnz
repnz
jg
in
pushf
sub
mov
pop
imul
cmp
into
nop
fimul
stc
mov
fdivr
cmps
mov
lods
call
arpl
jmp
daa
rol
out
xor
sti
push
ss
ret
push
xlat
jae
cmp
shl
ja
and
jle
push
inc
mov
mov
add
scas
sub
inc
test
call
je
or
imul
es
mov
aam
mov
in
scas
rol
mov
daa
shr
inc
aaa
(bad)
jae
xor
xor
add
arpl
sub
pop
xor
(bad)
es
xor
add
and
cli
mov
pop
call
cli
into
nop
jle
mov
into
jg
fsub
rol
jae
mov
push
gs
ds
add
je
leave
out
movs
fstp
add
movs
jb
mov
xor
cmp
or
retf
scas
dec
(bad)
movs
cli
push
and
dec
cld
ds
mov
sbb
cmp
not
mov
xor
test
jno
jmp
ret
imul
jnp
or
fs
in
gs
repnz
pop
mov
icebp
sub
sub
sub
cs
inc
in
mov
and
pop
xchg
inc
fisubr
inc
popa
and
mov
repnz
(bad)
repnz
sbb
cmp
test
push
mov
dec
jmp
xchg
inc
inc
lea
mov
in
sub
cdq
mov
push
in
sub
cli
cdq
xchg
jb
push
lds
ficom
stc
mov
daa
mov
ficomp
loop
frstor
idiv
sti
jecxz
sti
cwde
call
jnp
dec
in
neg
xchg
cld
test
jmp
lahf
mov
inc
pop
repnz
dec
repz
mov
out
in
imul
xchg
xchg
push
out
adc
xor
or
inc
or
and
stc
push
movs
das
(bad)
and
cmp
sbb
jns
mov
xchg
mov
outs
jmp
sbb
add
mov
retf
rcr
jmp
in
and
stos
out
jg
and
mov
jb
sbb
mov
pop
push
jmp
add
repz
and
or
clc
fisub
mov
push
fwait
xrelease
in
bound
aam
xchg
adc
lahf
mov
mov
ffreep
ret
leave
std
aaa
cs
icebp
pop
xor
pop
mov
jmp
push
call
std
gs
cmp
xor
pop
sub
sbb
fmul
jge
pushf
pop
push
ficom
xor
xor
mov
or
push
pusha
inc
call
clc
mov
inc
fisub
or
cmp
cmp
test
sub
mov
gs
and
and
ds
jmp
lods
adc
aaa
in
cmp
cmc
mov
fdiv
sahf
dec
sub
jl
add
test
stos
loop
pusha
jo
jmp
jbe
push
jg
mov
add
ds
sti
or
and
hlt
addr16
fistp
(bad)
cmp
push
mov
scas
push
call
lahf
xchg
jmp
sbb
div
(bad)
(bad)
mov
std
mov
inc
ret
add
int
ins
or
test
mov
leave
and
inc
push
pop
inc
cmp
fiadd
lea
add
inc
cdq
add
mul
mov
fild
arpl
lods
xor
jl
push
and
lods
test
jae
xor
leave
xchg
movs
(bad)
or
in
and
sub
inc
add
push
icebp
add
cmp
and
sub
push
sbb
mov
xor
popf
cmps
pop
mov
pop
dec
in
adc
out
push
out
push
jg
repnz
in
out
jmp
outs
add
cld
cmps
mov
push
xchg
add
push
fistp
or
hlt
sbb
fidiv
test
fiadd
inc
mov
mov
add
add
or
lock
mov
sub
in
push
mov
or
out
push
shl
daa
das
fwait
es
lods
and
pusha
jge
aas
imul
imul
xor
jle
or
call
aam
stos
scas
mov
int
stos
dec
imul
les
jle
push
test
pop
and
xchg
fwait
outs
sub
jge
push
mov
ror
sbb
xor
and
push
and
cmp
jns
fwait
repz
not
jg
cld
loope
mov
addr16
(bad)
mov
and
dec
fscale
lahf
stos
jmp
call
sar
jno
and
xor
ins
arpl
mov
inc
adc
inc
mov
cmp
int
test
adc
or
test
add
jnp
sub
mov
and
mov
xchg
or
mov
cdq
cmps
sbb
xlat
(bad)
int
jmp
xchg
aam
sahf
bound
inc
jns
sbb
fistp
jnp
(bad)
xchg
and
mov
pop
cmp
mov
out
int3
test
xchg
adc
stos
mov
sbb
(bad)
loope
(bad)
jae
or
in
out
mov
lahf
out
cli
int
jne
lods
outs
lods
dec
push
std
adc
neg
std
lahf
or
clc
mov
sar
xchg
cmps
pop
cmp
lds
or
push
out
add
fist
sahf
pop
rcr
adc
inc
cmc
add
pop
add
sbb
loop
lea
arpl
push
adc
mov
(bad)
and
and
cmc
scas
pop
je
(bad)
clc
pop
out
or
adc
mov
cdq
in
nop
aam
inc
hlt
push
lds
adc
out
jnp
mov
jae
pop
or
mov
xchg
add
idiv
dec
test
jno
sti
out
adc
in
sbb
mov
lods
out
mov
idiv
fild
test
iret
mov
jp
dec
pusha
mov
jl
and
mov
fwait
xor
mov
cmc
add
loopne
or
xchg
sub
jle
inc
mov
jb
or
arpl
ss
jle
iret
imul
rcl
test
sbb
inc
out
lods
psubusw
ret
nop
pop
test
stos
nop
fmul
fsub
pop
adc
jbe
xor
pop
and
xlat
idiv
adc
sbb
(bad)
fild
add
adc
mov
mov
push
sub
sahf
inc
sti
jnp
das
mov
mov
mov
neg
cli
mul
icebp
mov
dec
push
jl
jae
dec
(bad)
clc
or
dec
sbb
data16
push
mov
or
fs
add
lahf
jo
push
mov
into
arpl
bsf
and
int3
sbb
inc
cmc
mov
pop
jns
jb
stos
scas
and
xor
sub
and
push
addr16
or
xchg
mov
push
jbe
adc
scas
in
clc
xor
sub
dec
pop
btc
ret
daa
fwait
pop
dec
clc
xor
mov
xor
cwde
push
inc
call
outs
cmc
pop
and
adc
fld
and
cmp
fistp
jnp
dec
mov
out
mov
call
aam
daa
cdq
or
ins
xchg
pop
add
add
dec
jg
bound
pop
mov
dec
aam
xchg
ins
dec
adc
and
loopne
mov
mov
icebp
add
fsub
rcr
repnz
dec
je
out
ror
scas
sub
int
call
dec
dec
inc
xchg
pop
sub
add
(bad)
mov
adc
and
test
xchg
add
xor
dec
fwait
es
xchg
mul
sbb
dec
iret
dec
xor
mov
out
out
es
out
sub
jno
(bad)
loop
adc
pop
sub
mov
aam
jo
push
pop
mov
call
xor
scas
push
push
add
je
cli
loope
scas
ja
out
jg
add
mov
xor
jmp
pop
popa
add
sbb
mov
mov
add
fwait
mov
int
cmp
xor
sub
add
stos
mov
add
or
rol
sub
ss
loopne
push
xchg
adc
lahf
nop
cmp
addr16
retf
imul
add
or
xor
nop
inc
mov
and
pop
mov
nop
sbb
fadd
and
push
cmp
push
gs
jp
cs
ret
cwde
add
push
mov
scas
xchg
jbe
lahf
leave
pop
xchg
cmp
test
jno
lods
jecxz
mov
loopne
adc
cmps
lock
in
fsub
scas
pop
aas
js
mov
mov
arpl
aas
inc
cld
(bad)
push
cmps
dec
cld
shl
add
mov
inc
inc
int3
dec
fwait
shl
adc
test
int
mov
or
mov
inc
dec
and
inc
out
int
bound
or
cmp
add
sbb
pop
clc
adc
or
fmulp
fwait
ss
and
inc
and
mov
mov
int
add
repz
dec
pop
adc
aad
add
mov
pop
sbb
out
popf
pusha
dec
pushf
arpl
xor
cmps
sbb
or
adc
add
in
movs
mov
test
enter
cmp
xchg
mov
push
outs
in
push
lahf
test
movs
mov
bound
aaa
fcomi
xor
jne
cld
not
sti
ds
iret
cmp
imul
aad
sbb
mov
inc
push
int3
fcomp
retf
pop
ja
popa
ror
xor
mov
pop
sbb
pushf
mov
je
and
cmp
cs
push
es
add
movs
clc
ja
pop
cmps
scas
inc
call
fcomp
fdivr
add
push
mov
ja
xchg
mov
mov
xor
xchg
pop
push
cwde
xchg
leave
push
nop
add
sbb
dec
mov
inc
pushf
lock
ret
jne
mov
shl
lahf
sub
mov
lods
and
mov
imul
xchg
sbb
dec
std
mov
cmp
mov
jl
cmp
sbb
clc
sbb
cmp
daa
sbb
xchg
xor
sub
call
ds
jl
sbb
or
and
and
jl
sti
into
scas
adc
add
and
ins
sub
mov
mov
xor
jo
rcr
mov
add
ins
pop
movaps
mov
retf
mov
fisub
movs
scas
mov
adc
aas
pop
inc
adc
idiv
xchg
clc
mov
xchg
sub
and
pusha
movs
or
in
ret
pop
dec
dec
out
lods
popa
(bad)
mov
jg
test
mov
dec
push
repz
mov
cmc
arpl
div
add
push
aas
aad
adc
aas
(bad)
and
movs
mov
mov
stos
jnp
jge
sti
in
cmpxchg
ds
lahf
stos
(bad)
addr16
add
scas
jmp
jbe
add
in
cmp
add
and
adc
inc
add
dec
dec
and
jg
fdiv
retf
push
or
xchg
pop
call
ror
push
mov
push
cmps
sar
loope
add
fsub
xchg
inc
inc
adc
ret
adc
rol
adc
mov
nop
cmps
mov
and
and
inc
rcl
je
test
mov
jns
sub
call
(bad)
or
push
push
add
mov
fild
idiv
repnz
jne
add
cmp
and
lahf
inc
cld
ret
data16
out
lods
aas
fnstsw
lock
dec
mov
rol
xchg
sub
imul
iret
in
jae
adc
in
out
outs
std
cmp
out
mov
inc
out
or
cmp
test
mov
int3
int
xchg
add
jne
mov
into
xchg
and
cmp
adc
cwde
das
iret
ret
cs
data16
stc
in
sbb
dec
push
or
sub
dec
lods
inc
mov
(bad)
daa
adc
jmp
(bad)
jne
ja
add
jmp
test
pop
fwait
and
push
or
outs
dec
std
ficom
lahf
arpl
into
sbb
enter
mov
in
jo
jle
(bad)
je
lock
xlat
(bad)
daa
(bad)
ffreep
cs
lahf
mov
mov
lahf
ins
push
add
adc
rcl
(bad)
cmps
popa
call
pop
jle
cdq
das
pop
or
xor
adc
push
add
xchg
add
int
mov
xor
xchg
in
leave
daa
pusha
or
scas
leave
pop
push
call
idiv
jg
adc
push
cmps
shl
daa
les
outs
jp
pop
xchg
dec
adc
(bad)
cmp
inc
clc
add
test
inc
push
push
pop
sbb
cmp
test
inc
cmps
(bad)
push
sub
pop
push
mov
(bad)
xchg
mov
jg
fdiv
aam
xchg
pusha
retf
call
sahf
xor
popf
ret
outs
add
or
cmc
and
xor
jo
popf
aas
mov
mov
mov
mov
jmp
xchg
or
lea
inc
popa
iret
rol
shl
jbe
lahf
xchg
xor
and
sub
or
sub
push
mov
int
bound
inc
iret
lock
add
add
aas
fidivr
fwait
mov
xor
mov
mov
sbb
retf
lahf
jnp
enter
test
push
scas
jl
push
jne
mov
adc
pop
mov
jp
(bad)
(bad)
pop
inc
hlt
xor
fucomp
mov
pop
pop
movs
and
cmps
mov
sbb
ss
test
jae
jo
ficom
test
cmp
scas
test
fidivr
fstp
leave
scas
jecxz
aas
push
les
jl
sbb
mov
or
and
lahf
outs
add
cmp
mov
inc
stos
cwde
adc
dec
mov
and
loopne
shl
fisubr
jbe
inc
mov
mov
push
mov
scas
pop
jmp
stc
mov
or
ror
jns
pushf
mov
repnz
leave
dec
cmp
lock
mov
cmps
pop
sbb
clc
push
stos
mov
outs
mov
pop
xor
loope
mov
rol
ds
not
scas
fs
jg
ds
sti
in
jbe
loopne
out
lods
push
mov
sti
test
cld
(bad)
push
mov
lds
sub
fiadd
mov
(bad)
jbe
add
or
cmps
cmp
and
mov
xchg
leave
xchg
aaa
jp
inc
ret
inc
push
lock
xchg
xor
jg
aas
ret
push
mov
retf
push
lock
rcr
imul
mov
mov
adc
inc
dec
gs
sar
ds
test
xchg
sahf
mov
out
stos
popw
loopne
xor
mov
cmp
lds
cmps
dec
jge
and
jle
loopne
fdiv
bnd
jmp
scas
scas
lahf
cmp
mov
jnp
cld
cld
lahf
sub
pop
ds
add
sbb
mov
outs
mov
int3
out
arpl
and
gs
mov
sub
jae
jnp
push
mov
xchg
mov
cmp
ret
dec
mov
xor
sti
bound
cli
(bad)
xchg
adc
fstp
adc
xor
mov
dec
loopne
lds
cmc
add
jl
addr16
cmp
loopne
add
mov
(bad)
in
push
sub
xchg
les
inc
in
xchg
lahf
aas
std
loopne
mov
cmp
or
int
cmpxchg
mov
add
push
add
push
pmaxub
jle
mov
jnp
push
inc
push
dec
pop
push
lds
push
mov
push
mov
stc
ja
dec
dec
jo
mov
xchg
popf
scas
mov
jne
jmp
adc
movs
mov
add
jmp
mov
lea
xor
std
in
dec
lds
or
mov
pop
xchg
inc
and
inc
inc
sbb
mov
push
mov
loopne
mov
xchg
pop
adc
xchg
sbb
retf
fwait
int
pmaxub
js
jne
hlt
push
ret
sti
jecxz
ds
jle
repz
add
retf
(bad)
shl
push
xchg
adc
mov
scas
adc
(bad)
xor
or
cmp
dec
sub
dec
lods
lods
or
inc
rol
cs
inc
xor
push
pop
adc
or
adc
push
jg
push
scas
cwde
retf
enter
lahf
inc
adc
pop
xor
xchg
in
add
jp
sbb
rol
cmps
and
fsub
push
test
xchg
xchg
or
dec
fwait
cs
adc
loope
lods
das
sahf
ins
push
mov
ret
pop
jno
adc
xor
out
mov
in
sti
pop
adc
lock
data16
adc
jnp
(bad)
or
xor
xlat
ja
mov
pop
xor
imul
xchg
push
int
sbb
xor
dec
ins
out
out
test
inc
jo
add
and
sub
lods
outs
push
mov
daa
sbb
cmp
adc
stos
nop
sub
xor
inc
push
or
int
call
inc
clc
loopne
and
add
test
dec
jmp
adc
or
jmp
mov
sbb
push
jo
mov
jge
xchg
retf
sti
outs
mov
mov
inc
jl
cmp
sti
ror
iret
ret
add
jmp
fs
mov
fld
push
leave
std
push
sbb
ins
pop
loop
js
and
mov
loopne
adc
sbb
int
test
mov
ss
loop
dec
arpl
repz
mov
jle
lock
popf
dec
in
sbb
and
ss
jp
movs
imul
add
movs
mov
ror
int
cmc
cmp
ss
(bad)
lea
xchg
fs
cwde
call
inc
xchg
pop
push
pop
jnp
jnp
(bad)
pop
dec
xlat
(bad)
fdivrp
(bad)
cli
leave
std
pop
mov
and
jne
out
daa
test
mov
dec
cld
ror
add
cmps
mov
sbb
mov
jge
jbe
cmc
add
add
cmc
cmps
daa
cmc
cmc
push
retf
(bad)
outs
add
adc
or
or
arpl
or
push
mov
jmp
pop
jge
ins
(bad)
imul
jnp
shl
jns
inc
xor
inc
jns
mov
xor
sete
jno
sbb
inc
xor
cmp
jp
xchg
mov
lock
loopne
in
sbb
out
mov
mul
jle
mov
rol
(bad)
jnp
cli
repnz
cld
adc
jnp
fstp
jno
lahf
jmp
repz
mov
icebp
movaps
fnsave
scas
dec
shl
in
xor
cwde
mov
and
pop
jae
cld
push
stc
lds
popa
psadbw
rcl
fwait
and
add
inc
mov
push
rol
inc
and
cmc
xor
xor
xlat
fs
fbstp
sub
mov
cmc
ja
cwde
and
add
or
cwde
jl
bound
sbb
or
sub
call
mov
xor
jmp
xlat
sub
dec
mov
idiv
loope
sar
fistp
fnstsw
in
inc
or
stc
mov
pcmpeqw
jge
(bad)
sbb
int3
adc
adc
add
push
jo
shr
shl
add
fyl2x
lea
sub
imul
out
cmp
push
dec
mov
and
cmp
mov
cmp
sub
es
cmps
mov
add
sbb
add
aaa
or
mov
and
sub
vmovntps
mov
push
lahf
xlat
int
push
lods
cmp
inc
and
inc
and
add
xor
inc
xor
jl
pop
call
dec
pushf
jle
int3
jno
int3
push
in
in
jle
jmp
sub
mov
push
cli
lods
dec
dec
pop
and
hlt
jbe
jle
push
pop
inc
mov
dec
adc
ret
fcomip
jae
cld
xchg
mov
out
push
add
and
jo
xor
dec
xor
sti
retf
in
loope
pop
dec
rcr
push
sub
enter
or
js
or
jo
mov
mov
data16
add
mov
xchg
add
sub
repnz
and
hlt
dec
loopne
or
test
(bad)
data16
sbb
xor
retf
int3
jbe
inc
xor
rol
clc
add
stos
sub
mov
out
jne
sbb
jmp
call
shr
push
jg
cli
shl
icebp
mov
xlat
test
stos
(bad)
sbb
pop
adc
out
in
ja
jle
xchg
push
test
dec
imul
sub
rcr
(bad)
fistp
jle
es
add
imul
mov
or
sub
adc
mov
or
push
fdiv
test
rcl
test
mov
adc
jmp
out
cmp
mov
and
push
fisubr
arpl
and
bound
sahf
jmp
ror
mov
int3
pushf
jb
xchg
test
ret
lods
sbb
ret
cmps
mov
jge
mov
mov
and
daa
sub
sub
jae
repnz
mov
retf
rol
les
or
ss
mov
lds
ins
xchg
xchg
sbb
fs
sbb
push
pop
sbb
inc
dec
ss
mov
sub
adc
mov
cdq
inc
jl
sub
push
arpl
jne
mov
mov
or
ret
test
sbb
sub
push
jge
push
scas
inc
popf
arpl
lods
cld
pop
icebp
lds
cmp
popa
dec
xlat
pop
int3
adc
ss
and
and
popf
movs
add
or
cmc
add
pop
cmp
pop
and
jae
jle
(bad)
mov
jmp
(bad)
cmp
mov
add
(bad)
fcom
scas
mov
lock
retf
ficomp
push
shl
ds
push
and
shr
pop
(bad)
bound
hlt
xchg
mov
dec
xor
mov
jbe
ret
or
xchg
fsub
push
inc
inc
imul
enter
pusha
or
cdq
inc
lods
adc
add
jge
push
int
xor
xor
test
xor
mov
jb
add
inc
and
add
sbb
and
mov
sub
inc
clc
add
cmps
mov
mov
pop
pop
mov
cmp
es
call
add
push
into
ins
cli
aad
mov
outs
mov
mov
clc
pop
sub
mov
out
std
fcom
jle
int
test
jmp
rol
les
inc
and
sub
aad
mov
or
pop
xchg
sbb
sbb
push
mov
dec
xor
ins
push
push
and
les
inc
xchg
xchg
sbb
sub
aad
repz
aaa
mov
push
in
ins
push
push
dec
adc
cmp
(bad)
fist
(bad)
pop
mov
push
jo
dec
dec
adc
dec
sahf
push
shl
dec
mov
cmp
sbb
test
les
nop
sub
nop
sub
dec
aad
je
cdq
rol
adc
mov
xchg
cmp
lods
sti
retf
repz
std
stc
leave
jge
ins
pop
xor
sbb
mov
push
aad
jbe
test
cmp
xlat
ja
pop
jae
imul
or
inc
mov
outs
sub
ror
outs
iret
(bad)
outs
mov
xor
or
inc
dec
sub
or
aaa
enter
js
push
(bad)
sub
retf
ret
add
mov
push
or
dec
and
xor
pop
inc
xchg
call
or
mov
or
mov
mov
and
xor
loop
pop
sbb
retf
jle
icebp
mov
aas
jns
cli
inc
xor
mov
imul
(bad)
das
test
xlat
jecxz
xchg
add
imul
xor
and
sbb
sub
xor
lods
fld
loope
mov
mov
xchg
mov
and
or
xor
popa
stos
out
(bad)
leave
cs
xor
dec
lods
mov
mov
scas
add
xor
retf
fmul
add
sub
sahf
cmp
cdq
imul
jle
adc
and
jns
ror
idiv
addr16
fsubr
mov
mov
and
mov
shr
clc
inc
data16
neg
and
call
ret
into
data16
xchg
das
mov
in
mov
nop
or
or
adc
push
push
xchg
sub
dec
mov
iret
lds
sub
add
or
pop
std
push
dec
add
jne
ins
stc
xchg
addr16
or
push
add
(bad)
push
pop
outs
popf
mov
loopne
les
add
jp
xor
icebp
mov
push
xor
fdiv
std
vpacksswb
ja
and
jae
test
int
jo
sti
xrelease
(bad)
xchg
ss
mov
add
add
cmp
cmp
bound
cdq
das
out
mov
in
xor
cwde
add
shl
sbb
push
fiadd
ret
and
shr
sub
sub
test
fidiv
jp
cs
xor
leave
hlt
loop
add
lahf
(bad)
push
push
push
stos
add
ins
mov
sbb
mov
sti
loopne
jbe
lods
dec
fsub
je
lods
dec
xor
pop
sub
pop
sbb
push
jne
mov
icebp
cmps
jno
add
mov
sub
imul
and
xor
xchg
call
pop
outs
frndint
(bad)
ins
mov
pop
xor
aas
lods
mov
cmc
pop
pop
add
mov
ror
and
std
adc
cwde
pop
cmp
or
into
imul
inc
icebp
scas
cdq
inc
xor
loop
adc
push
and
mov
popf
js
shr
and
adc
mov
mov
jp
sbb
adc
add
data16
push
cmp
mov
cmp
mov
vpsubusw
or
pop
(bad)
push
mov
pop
jg
clc
pushf
mov
test
push
rcl
jmp
cmc
inc
mov
ss
rol
inc
iret
popf
xchg
and
adc
rol
or
mov
or
int
lock
adc
sub
ret
dec
lock
clc
mov
inc
xor
lds
mov
push
jnp
div
add
retf
add
xor
fs
loope
lock
xchg
retf
and
sub
push
push
les
pop
loop
mov
(bad)
xor
out
retf
enter
sub
add
xchg
jbe
jae
inc
loopne
cwde
sbb
out
sbb
xchg
addr16
retf
les
in
mov
mov
call
(bad)
xor
cmps
cwde
sub
test
int3
or
and
jmp
mov
push
inc
mov
pop
push
sbb
mov
dec
shr
stc
jl
inc
push
sub
inc
loopne
cwde
push
and
clc
cld
jb
xor
jge
jl
test
pop
enter
cmp
add
sub
lea
xchg
add
sbb
aam
add
and
jmp
clc
test
sub
mov
ret
push
lahf
pop
add
in
sbb
repz
mov
xor
xor
arpl
sbb
add
leave
jbe
pop
add
sub
adc
and
iret
and
fidiv
jp
cli
ficomp
xor
mov
rcr
neg
adc
inc
clc
sti
mov
iret
and
scas
or
cmps
sbb
or
cmps
pop
push
dec
hlt
sub
xor
xor
nop
out
imul
into
out
jbe
cmp
int3
dec
or
add
jbe
imul
jl
mov
test
jo
je
leave
adc
add
jne
shl
add
iret
pusha
enter
or
int
call
or
jnp
test
test
(bad)
adc
push
mov
inc
shl
call
leave
cmp
test
mov
call
int
(bad)
scas
inc
or
xor
cmp
mov
jo
mov
add
imul
pop
jnp
xlat
mov
inc
sti
add
inc
or
sub
lock
cmc
xor
add
mov
jbe
mov
out
sub
(bad)
call
ds
sbb
push
call
jge
jg
push
stc
ds
mov
ror
cmp
dec
xlat
jge
push
je
mov
in
pop
fucomp
stc
mov
scas
and
xlat
test
sbb
call
nop
inc
and
or
int3
test
xor
lock
cmp
aaa
jbe
ror
jge
test
(bad)
gs
(bad)
push
xchg
aad
xor
es
xor
ret
push
push
(bad)
call
ds
xor
jno
adc
and
mov
push
mov
adc
mov
in
stc
imul
clc
clc
pop
pop
icebp
call
mov
ds
jg
or
xor
jp
mov
mov
pop
idiv
mov
mov
pop
cli
mov
xor
js
xchg
(bad)
jmp
icebp
retf
sbb
add
pop
int
cmps
ds
movs
retf
xor
lahf
sar
xor
pusha
fbld
in
jns
popa
out
std
push
mov
pop
pop
push
sbb
mov
fwait
jp
aas
lahf
jp
cmp
add
cmp
test
sub
pop
cmc
(bad)
mov
dec
(bad)
inc
jmp
(bad)
imul
fstp
iret
retf
into
pop
jne
scas
jp
lahf
icebp
mov
mov
xor
scas
sbb
out
cmp
cmp
mov
repnz
xor
jecxz
dec
pop
(bad)
jmp
cmp
push
xlat
jecxz
pop
(bad)
jmp
cmp
push
xlat
jecxz
pop
(bad)
jmp
cmp
push
xlat
jecxz
pop
(bad)
jmp
cmp
push
xlat
jecxz
pop
(bad)
jmp
cmp
xchg
(bad)
dec
and
stos
adc
add
add
dec
inc
dec
inc
scas
inc
pusha
or
add
add
add
out
mov
xchg
add
add
jae
gs
cs
gs
jne
arpl
cs
gs
jne
arpl
gs
fs
and
arpl
ins
imul
jae
outs
outs
cmp
xor
xor
inc
jne
je
jb
cmp
jb
ins
sub
push
jne
ins
imul
imul
bound
aaa
popa
xor
cmp
xor
xor
cmp
push
jns
je
ins
cs
gs
jne
arpl
cs
jne
je
ins
gs
gs
jne
arpl
gs
add
add
inc
push
inc
inc
push
mov
add
add
add
hlt
sub
pop
add
add
add
add
sbb
add
mov
add
push
inc
push
push
cmps
pop
dec
popf
div
mov
repz
add
add
pop
inc
popa
ins
gs
dec
outs
jb
push
and
xor
xor
xor
pop
je
popa
imul
outs
jbe
jae
bound
pop
push
outs
bound
dec
popa
arpl
outs
outs
ins
pop
outs
bound
inc
bound
pop
ja
outs
imul
add
jb
add
jb
add
and
add
jb
add
add
outs
jb
js
dec
popa
imul
jb
gs
ins
add
add
add
and
