mov
adc
add
inc
outs
outs
ins
gs
outs
add
or
add
mov
ins
jae
add
jb
lea
sub
add
push
outs
(bad)
test
pop
dec
outs
je
addr16
and
rcr
xor
add
jns
ins
daa
push
outs
jb
add
pop
jns
inc
outs
(bad)
mov
repz
add
cwde
or
push
je
sub
in
push
int
pop
push
or
adc
lahf
out
push
sbb
jo
mov
fdivrp
repz
bound
arpl
pop
sbb
loop
jae
ins
add
mov
fnstsw
(bad)
dec
mov
popaw
arpl
add
dec
dec
pop
inc
add
inc
and
clc
jmp
jle
mov
adc
int3
inc
mov
in
popf
pop
xchg
xchg
gs
faddp
(bad)
loopne
jno
add
ds
adc
push
push
mov
and
sub
push
lea
adc
and
sets
in
in
nop
mov
mov
in
js
jo
in
in
push
in
pop
test
push
in
in
push
sar
dec
ror
in
in
enter
adc
push
add
mov
add
(bad)
int
imul
je
movzx
mov
ss
pop
ret
(bad)
xor
dec
dec
dec
xor
and
dec
dec
dec
and
push
mov
in
fadd
push
add
enter
out
outs
sti
jne
xor
pop
enter
mov
mov
ret
lea
(bad)
inc
add
push
mov
mov
inc
cmp
jne
mov
mov
mov
push
nop
mov
add
fcmovnu
mov
mov
xchg
ins
test
xchg
mov
mov
mov
mov
or
adc
add
mov
aaa
push
pop
xor
mov
push
or
and
or
outs
mov
push
mov
mov
mov
mov
add
shl
cld
mov
mov
out
push
or
push
or
ret
and
lods
stc
pop
mov
push
or
inc
add
adc
sbb
mov
aaa
sub
jne
(bad)
mov
cmp
les
push
(bad)
test
xchg
cmp
jb
mov
add
mov
add
int
bound
jne
mov
ss
mov
or
mov
dec
ret
jmp
pop
not
jge
jp
add
pop
repnz
sub
inc
ror
sub
mov
inc
(bad)
lock
mov
aam
or
or
mov
scas
sbb
sti
jne
sbb
nop
jae
sar
mov
mov
cmp
mov
sbb
(bad)
imul
push
push
jg
mov
mov
test
je
mov
mov
push
mov
adc
(bad)
mov
push
mov
lock
push
mov
data16
out
sub
rol
push
lahf
push
push
icebp
add
sub
shr
cmp
in
mov
pop
xchg
fucomip
mov
mov
add
retf
and
call
fadd
lds
popf
jmp
in
mov
xchg
out
ja
mov
add
cmp
ja
cmp
outs
xchg
sub
sbb
jmp
hlt
in
or
add
jo
jo
fild
mov
mov
cmp
sbb
xor
dec
jno
pusha
sbb
pop
inc
dec
hlt
outs
mov
mov
and
add
jb
sbb
loop
outs
mov
inc
sub
or
lds
or
cmp
add
and
vpsadbw
mov
cmp
or
or
jbe
mov
adc
sti
push
push
cmp
jmp
ss
mov
and
push
jb
sahf
retf
(bad)
(bad)
xor
jmp
sub
es
nop
out
sub
xchg
inc
or
sbb
jae
mov
movs
loopne
loopne
out
jae
std
add
add
cmp
nop
add
fsub
inc
mov
mov
clc
mov
(bad)
aas
or
add
repnz
ja
pop
mov
xor
idiv
inc
xlat
mov
xchg
push
movs
in
je
mov
inc
ds
shl
xor
push
(bad)
pop
mov
add
jne
pop
cmp
leave
stos
sti
mov
inc
in
xchg
hlt
hlt
icebp
mov
pop
mov
cli
jecxz
add
and
cmp
cmc
or
jle
sub
push
sub
(bad)
xor
(bad)
sar
mov
nop
or
mov
mov
cmp
pop
fcom
adc
out
arpl
sbb
cld
xchg
loopne
inc
xlat
jmp
imul
jne
xchg
sti
push
fcmovb
cmp
cmp
ret
jnp
inc
sub
inc
popf
adc
adc
xchg
lea
inc
mov
mov
sbb
lock
jae
xor
outs
ret
mov
out
ror
adc
pop
push
test
je
imul
sub
ret
addr16
add
adc
or
js
jmp
jecxz
jl
pusha
lock
pop
sbb
dec
rcl
mov
xchg
push
mov
push
pop
xchg
dec
mov
jl
and
pop
sar
adc
push
and
cmp
hlt
das
mov
xor
jle
hlt
inc
cmp
mov
and
in
mov
mov
shr
add
pop
pop
push
adc
mov
or
push
jmp
or
mov
push
dec
pop
xchg
and
fadd
pop
sbb
cmp
add
xor
arpl
adc
test
fs
push
add
outs
push
push
enter
mov
popf
sbb
in
push
(bad)
fistp
or
pop
mov
jne
add
adc
jb
or
add
call
pop
test
jns
add
sar
test
cwde
mov
and
mov
ficom
(bad)
mov
mov
add
shl
mov
and
push
(bad)
jle
jb
add
or
mov
cmp
jg
or
add
xchg
push
push
jecxz
lea
cmp
jl
mov
jb
std
fnstsw
in
sahf
es
or
mov
mov
inc
sub
test
cld
dec
fistp
clc
adc
adc
jbe
or
push
or
outs
stos
cmps
add
or
xchg
or
ss
jle
ret
dec
(bad)
xor
xor
cmp
add
fistp
rcr
cmps
(bad)
sub
inc
add
add
and
xchg
or
(bad)
cmp
cmp
test
add
pop
cmc
xor
test
mov
xor
add
fcmovne
or
fsub
test
jne
mov
(bad)
push
test
outs
bound
and
mov
pop
mov
mov
xor
and
mov
pop
or
xchg
into
push
lea
sub
cld
scas
(bad)
ins
sar
sub
sub
cmp
jge
mov
mov
ins
jmp
daa
shl
loopne
cld
lea
and
in
mov
mov
sub
lds
stos
clc
add
dec
jae
lea
shl
test
jp
in
rcl
and
mov
xchg
xlat
cmp
fisttp
call
call
aaa
push
movs
stc
pop
adc
enter
push
sbb
mov
jmp
hlt
inc
adc
push
pop
add
sub
out
out
cmp
or
fs
mov
sub
enter
sbb
adc
or
sub
inc
sub
dec
mov
push
or
sub
mov
add
mov
jno
cmps
fstp
mov
popf
loope
inc
es
push
mov
cmp
pusha
xchg
lods
ret
lahf
dec
icebp
sub
add
adc
repz
inc
pop
add
sub
sbb
ret
(bad)
dec
sub
adc
out
ds
ja
outs
add
add
lock
sar
adc
jno
inc
loopne
pop
mov
mov
lds
push
fadd
pusha
pop
pop
inc
xor
pop
int3
(bad)
rol
pop
mov
dec
mov
mov
add
mov
push
adc
or
push
jnp
xor
mov
cmp
lods
shr
jle
jle
adc
lods
cs
pop
mov
pop
je
mov
jmp
sub
int3
shr
xor
jle
mov
adc
cmp
movs
sub
cmp
xchg
jbe
adc
inc
add
xor
aad
loope
sub
xor
jmp
jmp
movs
adc
and
mov
stos
jle
jmp
repnz
jne
xor
jge
pop
pop
xor
stos
inc
and
sbb
sbb
pop
sub
clc
stos
jle
inc
cld
stc
pop
inc
jbe
addr16
push
push
mov
sub
ret
pop
or
sti
mov
mov
push
test
jg
dec
test
or
sbb
jl
mov
pop
inc
scas
shl
push
add
sub
mov
jmp
mov
mov
inc
(bad)
pushf
or
cmp
add
inc
or
jbe
jmp
bswap
sbb
sbb
ja
dec
sub
mov
add
arpl
sbb
sti
loop
xor
lock
ret
and
jmp
sbb
push
dec
xchg
mov
out
retf
iret
or
jo
xor
or
lock
test
test
jne
test
ja
(bad)
or
ret
add
add
add
mov
(bad)
jo
loope
push
or
not
in
or
jge
xchg
cmp
push
outs
icebp
and
clc
cmp
sbb
jne
stos
in
cmp
jle
sbb
pop
lods
clc
fisttp
mov
test
je
inc
add
sahf
inc
cli
test
aaa
or
jmp
mov
cmp
pusha
jo
in
clc
push
adc
or
adc
sbb
and
cmp
and
or
and
inc
jg
add
add
out
mov
mov
sub
jge
loop
push
loope
add
mov
(bad)
cmp
pop
lock
adc
pop
xchg
aad
(bad)
into
not
cmp
mov
cli
add
inc
outs
(bad)
in
sub
shl
mov
xchg
cmps
mov
or
sbb
cmp
and
ja
cmp
bound
sub
ins
lea
jl
fmul
fnstcw
xor
dec
daa
loope
pop
rol
xor
or
mov
add
or
test
jbe
adc
add
push
sbb
xchg
inc
pop
lea
mov
pop
mov
sbb
add
or
and
xor
add
cmp
xchg
ret
adc
and
cmps
sbb
ret
or
fmul
in
mov
sbb
ror
xchg
or
xchg
movhps
test
pop
adc
jmp
cld
jmp
out
adc
xchg
ret
ins
adc
jge
mov
(bad)
add
imul
mov
xchg
dec
sbb
dec
fdivr
or
cmps
test
jle
call
cmp
pop
or
xor
mov
xchg
out
retf
inc
je
mov
or
sbb
enter
cmps
dec
inc
pop
or
add
push
jmp
push
xor
add
adc
repz
push
jae
add
dec
mov
sbb
or
aas
in
or
add
inc
sbb
pop
or
xor
jg
xchg
add
inc
cs
inc
xchg
cmp
sbb
or
add
jg
mov
sbb
mov
mov
std
jecxz
pop
inc
pop
mov
adc
cmp
push
push
push
xor
pop
jne
mov
pop
psubsb
mov
mov
mov
sub
sbb
ret
sub
inc
sahf
cli
push
fdivr
sar
(bad)
mov
inc
rep
jmp
mov
sub
mov
jl
pop
mov
add
add
adc
mov
sbb
(bad)
mov
cmp
fldln2
dec
clc
div
je
dec
js
rep
xchg
mov
fwait
mov
xor
lea
xor
std
xor
clc
mov
ds
inc
mov
fldcw
movnti
and
sub
fist
fwait
pop
pop
popf
loope
jo
mov
push
test
mov
shl
cs
ss
(bad)
push
cld
add
sub
sub
mov
call
fsubr
sbb
jmp
mov
out
jmp
in
jmp
or
mov
scas
add
sub
cmps
sbb
sbb
call
mov
imul
pop
cmp
mov
ja
and
adc
jne
sahf
push
data16
call
mov
test
adc
out
push
fistp
dec
dec
call
(bad)
pop
push
das
mov
cmp
loopne
mov
inc
test
dec
loopne
and
pop
loope
pop
xchg
push
xor
mov
mov
inc
inc
cli
add
add
ret
jmp
cmp
jne
dec
shl
push
ins
mov
sbb
mov
(bad)
jg
jle
dec
jne
jmp
adc
add
and
je
mov
cmp
jne
dec
je
imul
jne
or
add
add
(bad)
in
add
cmp
jne
shr
aam
fstp
sub
sbb
outs
push
mov
shr
or
iret
mov
inc
dec
dec
pop
cmp
fadd
or
ret
and
mov
cmp
int
or
dec
dec
dec
and
and
jecxz
mov
(bad)
mov
shl
data16
sar
rep
mov
stos
pop
daa
jp
loope
push
js
sub
mov
push
inc
imul
clc
mov
or
je
or
je
and
fstp
pop
js
pop
pop
je
xor
dec
and
fistp
and
add
sub
or
mov
clc
ja
lea
push
add
push
es
int
std
jg
mov
sar
jmp
inc
mov
js
pop
sub
jmp
inc
fnstsw
cli
inc
jmp
mov
fild
aaa
in
lods
xchg
and
add
or
add
(bad)
cwde
into
jno
jl
xor
mov
(bad)
mov
jmp
mov
stc
sbb
inc
mov
push
inc
mov
dec
jne
pop
dec
cmp
inc
pop
repz
mov
pop
pusha
push
sub
je
adc
(bad)
xor
lea
lea
fld
out
pop
fisub
add
je
das
xchg
in
lock
je
push
and
jmp
sar
push
pop
xchg
jge
mov
pop
push
cdq
xchg
xor
sbb
jmp
adc
fstp
fld
fldz
mov
sub
adc
cmp
xchg
dec
mov
cli
or
xchg
dec
ds
pushf
or
ret
mov
adc
xchg
(bad)
jl
xchg
cwde
push
and
sbb
retf
pop
ds
add
mov
mov
pop
lea
sub
test
out
sub
sub
xor
leave
sbb
mov
aas
inc
cmp
fidivr
call
mov
bound
int
stc
aaa
cmp
xlat
fadd
outs
xor
xchg
(bad)
jmp
push
or
push
push
int3
into
sbb
ror
mov
push
pop
test
enter
jmp
outs
movs
push
inc
push
and
daa
(bad)
retf
into
pop
inc
test
xchg
clc
js
aas
cmp
inc
in
mov
mov
addr16
leave
repnz
bound
and
cld
gs
push
jo
test
lds
iret
dec
js
inc
mov
stos
mov
cmp
jmp
mov
or
mov
pop
out
sub
imul
(bad)
div
jl
xor
(bad)
dec
xchg
push
mov
inc
mov
sti
jmp
stos
push
inc
mov
push
sbb
sar
inc
jbe
int3
repnz
test
nop
fild
daa
movs
lahf
nop
inc
pop
stos
clc
scas
adc
(bad)
inc
pop
(bad)
(bad)
(bad)
call
repnz
aam
imul
loope
jp
iret
inc
bound
ds
push
(bad)
(bad)
(bad)
jmp
mov
add
cmp
xor
in
cmp
(bad)
(bad)
cmp
lock
mov
popa
movs
mov
and
addr16
repz
(bad)
(bad)
jmp
mov
sub
and
and
outs
bound
xor
jmp
add
fld
(bad)
inc
push
pop
and
add
fdiv
popf
outs
iret
hlt
movzx
fwait
std
inc
clc
lea
push
push
inc
or
jge
mov
jbe
xor
push
push
jmp
mov
mov
mov
mov
clc
add
mov
mov
sub
das
out
mov
jmp
push
clc
pop
fwait
or
lock
or
leave
mov
adc
(bad)
(bad)
(bad)
inc
push
inc
push
inc
pop
inc
outs
jb
popa
outs
fs
inc
gs
jo
imul
push
dec
popa
jae
adc
ins
jne
fninit
fwait
sub
aad
stos
out
xlat
mov
xor
lods
cli
adc
rep
push
or
push
mov
add
fild
jne
dec
mov
xor
out
jne
sbb
push
out
call
fcomp
pop
jo
push
add
pushf
or
mov
mov
sbb
pop
aaa
and
or
fidiv
rcr
test
or
xchg
jo
push
movups
(bad)
cmps
sub
jo
loopne
inc
mov
or
push
cld
fimul
(bad)
jg
mov
xor
push
shr
dec
rep
pop
(bad)
ret
sub
pop
fdivr
mov
jmp
or
(bad)
in
cmp
je
pop
mov
add
jae
mov
jnp
mov
loope
mov
push
sbb
cmp
outs
push
pusha
or
mov
jbe
sub
or
clc
cmp
inc
jmp
stc
add
jae
paddd
shufps
and
pusha
sar
mov
add
mov
in
pop
(bad)
adc
inc
mov
jo
out
pop
clc
or
mov
cmp
adc
fimul
sub
and
xor
jge
and
ds
push
push
mov
push
add
pop
lea
(bad)
cs
push
sbb
and
mov
ja
push
(bad)
dec
setne
lahf
pop
lds
xor
dec
xor
push
mov
adc
cld
mov
cmp
jne
jb
cmp
call
or
or
dec
ret
or
inc
inc
fcom
sub
das
and
in
loope
add
call
inc
sbb
rcl
ror
mov
(bad)
daa
mov
mov
ret
nop
push
xchg
jmp
retf
clc
mov
mov
push
add
repnz
je
pop
pop
call
in
neg
pop
add
sub
mov
pop
cs
fistp
retf
mov
out
mov
sbb
xchg
jecxz
mov
cmp
mov
mov
idiv
push
mov
push
xchg
xor
cld
je
sub
pop
data16
adc
pop
test
adc
mov
popa
lock
fsubp
pop
add
dec
(bad)
adc
sbb
add
sbb
add
dec
jne
(bad)
fbstp
sbb
add
sbb
jecxz
(bad)
ins
out
dec
cmp
scas
pop
iret
idiv
lahf
adc
mov
test
push
fisttp
push
push
inc
loopne
xor
mov
adc
sbb
jl
xchg
add
repnz
sbb
jmp
je
retf
in
push
pop
add
lahf
push
push
push
outs
add
fdiv
xor
jle
mov
je
test
mov
mov
mov
or
or
xchg
jp
pop
pop
jns
mov
scas
jle
nop
or
sub
xabort
sub
clc
fisttp
in
(bad)
jg
add
call
sub
inc
sbb
add
sbb
cli
in
push
call
xor
aaa
ficom
push
pusha
push
push
fwait
xchg
pop
iret
cs
retf
and
scas
cmp
ss
data16
xlat
pop
push
push
outs
call
and
sbb
jmp
jne
prefetchwt1
mov
sub
add
push
jecxz
in
inc
pusha
sbb
xor
loop
fdivr
adc
cmps
dec
(bad)
jecxz
pop
(bad)
cmp
inc
add
inc
pop
add
jne
fiadd
dec
mov
dec
adc
outs
jp
or
jmp
fcom
test
fist
push
push
adc
out
pop
cld
mov
cmp
cli
out
push
je
or
sbb
jbe
test
push
sets
shl
clc
fstp
stos
cdq
cmc
enter
loopne
sahf
lea
adc
add
jns
je
cmps
sbb
jo
dec
add
ss
lock
sub
mov
mov
dec
sub
retf
outs
or
mov
add
div
inc
pop
daa
pop
mov
mov
out
inc
or
aam
mov
popa
js
outs
je
dec
or
popf
push
retf
push
add
mov
pop
or
or
mov
enter
pop
add
lds
mov
out
fbld
mov
add
cmp
jne
inc
pop
test
in
push
jmp
inc
inc
mov
jg
push
jno
mov
aam
xor
out
loop
outs
inc
jmp
sbb
jb
sbb
lahf
mov
adc
sub
add
push
sbb
add
pop
adc
sbb
mov
inc
lock
and
lds
setge
std
shl
add
pushf
ret
cmp
mov
mov
call
inc
cmps
dec
das
xchg
and
push
pop
std
pop
push
push
push
push
push
mov
push
loopne
fs
mov
daa
js
loopne
sbb
or
sbb
test
cwde
xor
hlt
and
fld
adc
jae
gs
mov
push
lods
pop
mov
pusha
jmp
ret
xor
mov
iret
mov
add
imul
add
je
cmp
in
jl
je
sub
and
jmp
add
jno
(bad)
aas
sub
jb
je
jmp
cmp
cmp
(bad)
jge
inc
adc
jmp
sub
cmp
mov
jmp
(bad)
sti
jmp
mov
jmp
mov
jmp
mov
jmp
push
sbb
into
jmp
mov
jmp
mov
push
or
retf
push
stos
movs
ss
push
or
pop
mov
cmp
pusha
inc
mov
jg
lea
push
jnp
jns
jno
outs
cli
call
pop
test
push
adc
mov
je
add
or
mov
or
push
pusha
sar
sti
and
inc
cmps
rol
loopne
sub
cmp
xor
sbb
int3
xor
lock
mov
cmp
push
in
xor
xor
inc
test
repnz
cmp
aas
push
push
jne
and
(bad)
mov
add
or
jo
out
lahf
cmp
mov
jle
dec
mov
inc
sbb
inc
call
and
xor
mov
xor
iret
mov
mov
and
lock
mov
cmp
add
xchg
in
sbb
jg
dec
dec
xor
mov
ds
mov
leave
mov
stos
mov
mov
add
push
push
fsub
sbb
jle
scas
and
push
add
add
dec
dec
adc
add
dec
jne
pop
pop
pop
inc
pop
mov
xor
dec
pop
es
lsl
mov
xchg
or
mov
call
mov
inc
cdq
idiv
add
mov
inc
ficom
es
pop
fndisi(8087
scas
push
div
sar
mov
mov
push
push
mov
sbb
clc
outs
(bad)
and
xor
sbb
inc
mov
pop
sbb
ja
add
mov
mov
mov
pop
push
cmps
dec
lods
outs
lods
dec
jno
cmp
js
cmp
xor
dec
je
mov
stos
jmp
cmps
pop
sbb
cmc
hlt
add
pop
adc
add
cmp
xor
arpl
adc
and
sar
sub
fs
jo
pusha
cmp
jnp
je
cmp
inc
adc
lods
shl
test
xor
sub
or
loopne
push
jne
out
jecxz
test
jo
inc
or
sub
xor
add
sbb
ss
or
cmp
je
es
sub
add
inc
popa
lods
jne
mov
adc
shl
add
cmp
adc
inc
mov
sti
ret
pop
sbb
add
pop
sub
in
pop
hlt
inc
sub
push
jmp
mov
and
pop
mov
std
clc
dec
jl
lock
push
lea
cmps
jle
nop
adc
outs
(bad)
mov
push
sbb
add
xchg
inc
push
or
not
mov
pop
dec
and
inc
jg
movs
jge
je
inc
sub
adc
xor
sbb
ins
xchg
adc
sub
sub
or
inc
mov
and
add
loopne
push
dec
add
mov
and
adc
mov
sub
ins
cs
loopne
push
cwde
mov
mov
das
stc
pop
sub
(bad)
mov
loopne
ds
cmp
or
pop
fdivr
arpl
or
adc
pushf
push
add
cmp
aaa
loopne
(bad)
in
xchg
add
xor
dec
clc
fdivr
mov
jmp
(bad)
jmp
lea
cmp
push
or
pop
mov
daa
loop
sbb
ins
push
jl
add
(bad)
mov
and
fistp
addr16
push
jl
cwde
fadd
sbb
add
cmp
call
loop
or
mov
jg
and
or
jle
and
add
pusha
jmp
pop
neg
call
pop
sub
jmp
push
jnp
iret
fisub
pusha
and
pop
pop
or
push
push
cmp
mov
add
or
mov
xchg
ss
pop
add
jp
scas
loopne
pop
add
pop
pop
stos
clc
mov
xor
push
mov
imul
adc
cmp
jl
adc
add
aam
inc
adc
xchg
or
mov
ret
push
aas
xchg
cld
ds
mov
lods
js
cld
push
cld
add
cmp
pop
and
mov
out
lods
and
and
xlat
or
out
popa
cmp
sub
pop
cmp
mov
hlt
mov
scas
ror
add
xchg
pop
pop
mov
mov
fmul
add
fs
sbb
dec
clc
and
retf
mov
test
cmps
xor
mov
fmul
cmp
mov
dec
jmp
outs
xchg
int
sub
add
cmp
fs
dec
jne
or
adc
mov
cld
jge
aam
(bad)
cmp
push
add
dec
jmp
and
inc
pushf
sbb
repnz
add
pop
dec
jne
adc
mov
mov
or
and
loope
mov
pop
lea
jmp
xchg
shl
rol
push
sub
rol
ror
and
push
add
push
cmp
mov
mov
inc
mov
and
cmp
daa
fisub
shr
aam
sub
loopne
mul
push
clc
inc
das
lods
outs
add
add
jne
mov
dec
cmp
jmp
mov
adc
cdq
retf
xchg
pop
adc
mov
shl
sbb
add
int3
(bad)
sub
clc
fild
es
jl
cmp
jge
sub
sbb
jg
push
fnsave
adc
inc
aad
call
jmp
and
mov
xor
cli
cmp
xor
sub
jge
mov
clc
fisttp
inc
sub
add
lea
inc
dec
retf
shld
xor
mov
pop
or
lahf
cdq
mov
push
mov
dec
jge
cmp
adc
imul
add
gs
cmp
mov
mov
lea
lock
push
sbb
add
mov
int3
jmp
hlt
sub
pushf
xor
mov
push
ins
dec
js
mov
loopne
lods
mov
jb
adc
mov
cmp
inc
cmove
mov
retf
ss
push
cmp
mov
add
or
call
mov
and
sbb
mov
loopne
clc
pop
mov
push
push
sub
and
(bad)
lods
jmp
push
mov
leave
out
(bad)
arpl
cli
pop
cmp
adc
scas
(bad)
pop
push
adc
movs
movs
pop
rol
shl
xchg
and
push
das
loopne
mov
push
push
sub
cmp
cmp
pop
lea
mov
sub
push
pop
in
add
(bad)
iret
in
stc
xor
mov
inc
jecxz
sbb
ret
aaa
je
aaa
je
add
(bad)
fistp
push
dec
push
das
int3
(bad)
pop
push
mov
or
ror
(bad)
out
xor
sub
add
and
mov
or
cli
xchg
inc
push
pop
fwait
pop
pop
add
jb
or
mov
inc
mov
inc
push
xor
bnd
data16
and
push
cvtps2pd
or
imul
adc
loopne
xchg
ss
cmp
jge
push
or
mov
nop
pushf
call
icebp
ret
std
xchg
sub
cmp
push
lods
add
add
ret
nop
xchg
fild
jle
cdq
xor
xlat
sbb
stos
add
pop
(bad)
add
xchg
jo
iret
jo
jg
mov
dec
lea
sbb
push
adc
mov
sbb
call
scas
mov
cs
mov
mov
and
je
cmp
je
mov
or
je
cmp
mov
je
mov
shl
dec
mov
inc
adc
or
adc
cmps
out
mov
aad
push
or
push
mov
dec
cs
adc
cmp
pop
jmp
cmp
inc
scas
cmps
cmp
push
xchg
in
cmp
sbb
sbb
inc
or
pop
call
call
xchg
iret
jae
or
mov
xor
cmp
jbe
test
mov
mov
int3
sub
or
lods
mov
pop
jo
jmp
ja
xor
sbb
mov
repz
xchg
adc
cmp
inc
cmp
mov
mov
test
cmp
out
cmp
cmp
stos
(bad)
xchg
pop
and
xor
xchg
jmp
(bad)
push
and
mov
add
or
mov
clc
push
push
add
sar
test
loope
pop
ret
or
or
or
fwait
fwait
cmp
je
push
je
loopne
in
cmp
adc
mov
mov
mov
cmp
add
jge
xor
sbb
lea
sar
sub
lock
call
clc
or
cmp
pop
jmp
aas
add
cmp
(bad)
mov
xor
xlat
inc
adc
test
sbb
arpl
pop
in
jne
add
sbb
pop
mov
lock
test
ins
and
mov
in
inc
jb
push
sub
jge
pusha
test
xlat
loop
pop
mov
cmp
sbb
push
pop
pop
xchg
cmps
adc
les
cmp
adc
cmp
or
ja
sti
add
add
inc
das
push
mov
mov
icebp
mov
mov
in
sbb
je
cmp
shl
push
es
stc
inc
jmp
popa
mov
sub
pop
je
mov
mov
rcl
push
fild
and
mov
sbb
shl
retf
ret
sete
adc
(bad)
jne
cmp
call
mov
arpl
xor
ja
inc
add
jl
pop
add
nop
mov
or
sbb
pop
mov
push
mov
cmp
cmp
daa
mov
cmp
xor
scas
push
push
pop
inc
add
(bad)
loopne
(bad)
push
xor
call
or
daa
hlt
lock
sbb
cs
mov
mov
mov
and
push
sub
call
mov
cmp
and
lock
jge
pop
sbb
cld
ins
test
imul
sub
add
pop
das
cld
lea
mov
mov
or
das
mov
retf
jnp
fadd
mov
push
in
test
jbe
cld
fwait
xor
in
dec
in
push
sbb
adc
into
stos
and
dec
xor
mov
(bad)
fld
mov
mov
or
mov
cmp
lahf
test
or
ret
cmps
cmp
jle
cwde
or
xchg
dec
xor
and
add
push
ror
lea
add
inc
call
dec
jne
enter
stos
fsub
mov
cmp
add
outs
call
lea
(bad)
xor
dec
jne
xor
push
in
add
mov
xchg
cmp
pop
inc
sub
mov
mov
push
pushf
je
sbb
scas
adc
or
jl
push
push
push
lock
out
das
cld
inc
clc
pop
pop
mov
inc
(bad)
in
sbb
shl
cdq
enter
push
pusha
loope
sbb
mov
je
sbb
ds
test
jnp
jne
push
inc
cmp
hlt
test
les
rol
mov
add
push
jno
fadd
retf
loopne
pop
or
adc
xchg
inc
sbb
add
frstor
aad
adc
ja
pcmpeqw
ret
jmp
sbb
cli
pop
dec
mov
ds
mov
push
clc
mov
sbb
popa
xchg
out
fld
inc
push
out
add
scas
push
test
pop
or
call
push
les
sub
inc
or
mov
loopne
vmread
pop
and
mov
cmp
jl
pop
add
ds
ds
mov
mov
hlt
out
mov
add
mov
jne
mov
(bad)
mov
rcr
sub
(bad)
popa
cld
cmps
sbb
sub
add
inc
cmp
dec
jg
lods
popf
sub
mov
(bad)
in
shl
cmp
and
je
xor
loop
mov
lea
ret
fwait
jg
mov
pop
mov
push
push
mov
mov
jg
push
div
push
repnz
mov
jae
imul
gs
xor
cs
ins
pop
pop
mov
je
outs
outs
addr16
popa
je
dec
popa
ins
gs
daa
outs
loopne
loope
pop
sub
jecxz
inc
sti
in
scas
jns
mov
int3
push
inc
call
push
jbe
sar
add
ja
or
inc
arpl
jl
pop
outs
mov
cmp
or
pop
pop
dec
sub
or
int3
outs
mov
aas
iret
sbb
or
mov
repnz
test
push
inc
mov
cmp
sar
jecxz
push
out
mov
add
js
push
xor
cmp
test
nop
jge
call
in
mov
cwde
and
ds
mov
add
cmp
stos
pop
cmp
jne
or
rol
adc
inc
add
sub
sbb
xor
push
sub
dec
sub
icebp
je
das
outs
repz
(bad)
xor
cmc
add
(bad)
push
(bad)
(bad)
in
(bad)
outs
data16
popa
jb
push
sbb
popa
ins
gs
aaa
pop
imul
daa
inc
cdq
push
or
rol
inc
dec
addr16
sbb
ret
dec
cmp
outs
inc
lahf
mov
push
sar
enter
mov
inc
mov
cmp
push
(bad)
xchg
ficom
or
sbb
sub
add
ret
(bad)
fnstcw
add
mov
test
bound
mov
dec
out
add
in
jecxz
jo
or
add
mov
out
push
cmp
shl
ret
pop
mov
aaa
jns
test
push
stos
push
mov
adc
lods
xchg
in
push
cmp
mov
pop
ret
mov
adc
push
cld
jne
cmp
cmps
es
push
test
push
or
sbb
push
xor
or
and
dec
push
inc
mov
push
sbb
cmp
pop
mov
mov
dec
pop
sbb
mov
pop
pop
ret
sbb
clc
cmp
inc
push
mov
ins
cmp
daa
mov
mov
mov
inc
and
sub
push
adc
add
popa
mov
(bad)
dec
add
push
(bad)
or
push
inc
ret
popa
jnp
bound
mov
push
cmp
cmp
(bad)
xchg
sbb
mov
dec
inc
cmp
ja
mov
inc
jmp
cmp
dec
dec
cld
ja
fcmovb
jmp
or
mov
adc
fwait
div
pop
xor
and
retf
add
and
and
sar
jo
inc
add
dec
or
cmp
pop
rcr
mov
add
or
xor
mov
dec
jbe
pop
jl
cld
fld
inc
add
jb
lea
ret
test
adc
repz
pop
mov
inc
sahf
(bad)
push
adc
sbb
rcl
cld
adc
inc
jecxz
xor
fdiv
mov
cld
pop
cli
mov
inc
test
je
or
jae
sti
mov
aas
and
je
cmp
adc
mov
and
cmp
jne
mov
loop
mov
loope
or
mov
pop
lea
and
ja
dec
dec
cld
mov
cwde
push
adc
inc
inc
call
ja
xlat
jmp
cmp
inc
inc
scas
imul
inc
mov
ret
xor
rcr
adc
in
xor
out
es
aaa
sbb
or
jb
inc
sbb
mov
bound
mov
mov
add
scas
mov
push
and
fmul
xchg
xchg
adc
mov
and
leave
in
lahf
ficomp
xor
push
and
in
mov
test
inc
or
jmp
adc
mov
stc
sbb
pop
cmp
lea
push
repz
pushf
pop
les
cmp
adc
test
arpl
das
fsub
inc
ss
xor
and
in
mov
je
je
xchg
xor
cs
sub
pop
pop
fmul
mov
(bad)
js
inc
lods
lahf
jno
adc
dec
pop
mov
cmc
mov
mov
jecxz
cmp
js
sub
add
mov
inc
std
imul
mov
repz
push
xor
icebp
or
add
push
loopne
xor
out
pop
leave
or
push
pop
push
lock
pop
adc
pop
jmp
lea
push
push
ja
pop
lock
push
lods
dec
sbb
sbb
es
je
sub
pop
lock
out
ret
loop
out
and
xor
pop
push
and
cwde
adc
mov
repnz
or
mov
fsubr
test
sbb
adc
add
ret
jl
ins
xor
mov
and
dec
push
call
sbb
dec
sahf
jl
(bad)
xor
push
mov
adc
call
push
adc
cmp
add
adc
pop
jl
add
add
cmp
jbe
dec
push
xchg
mov
lahf
add
jge
movs
mov
mov
nop
mov
mov
loopne
fsub
xor
fcom
clc
dec
dec
out
add
dec
or
ins
inc
cmp
shl
inc
or
jo
shr
jmp
mov
rol
pop
sub
(bad)
or
test
jne
mov
jns
push
inc
loope
inc
xchg
add
mov
mul
fcmovnb
mov
into
jo
shr
arpl
loopne
fs
mov
cli
sar
clc
mov
fwait
in
(bad)
das
pop
jno
push
mov
daa
or
sub
inc
add
mov
mov
or
or
mov
fild
enter
dec
push
or
jmp
jo
jo
mov
test
xor
mov
cld
push
or
push
gs
(bad)
in
in
dec
gs
jb
jns
es
imul
mov
adc
inc
push
outs
arpl
jbe
mov
popa
jne
je
dec
outs
je
imul
mov
mov
gs
outs
inc
arpl
or
mov
sbb
jb
xor
xor
paddd
inc
outs
ins
bound
outs
js
imul
ja
nop
mov
push
movmskps
xor
dec
ja
dec
inc
xor
je
dec
add
jbe
arpl
hlt
lock
jns
repnz
add
sar
cmp
cmp
hlt
lock
call
in
outs
(bad)
jb
jb
aam
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
xchg
nop
mov
test
jb
je
ins
push
fs
pop
pop
jb
jb
push
push
dec
dec
jb
jb
inc
inc
cmp
jb
jb
xor
sub
jb
jb
and
sbb
jb
jb
adc
or
cmp
jb
add
rcl
in
in
(bad)
hlt
lock
in
in
call
in
(bad)
aam
in
in
int3
enter
in
in
mov
in
lods
test
mov
pushf
cwde
xchg
nop
in
in
mov
in
jl
je
in
in
ins
push
in
pop
pop
push
push
in
in
dec
dec
inc
inc
in
in
cmp
xor
in
in
sub
and
jb
repnz
push
jb
jb
push
dec
pop
jb
jb
pusha
dec
inc
inc
jb
jb
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
cmp
sbb
aad
hlt
lock
cmp
in
call
cmp
(bad)
aam
jb
jb
int3
mov
jb
jb
mov
jb
lods
test
mov
pushf
cwde
xchg
nop
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
push
jb
jb
dec
dec
inc
inc
dec
dec
outs
pop
cmp
cmp
in
dec
dec
sub
and
in
in
sbb
adc
in
in
or
add
xor
in
cld
aam
hlt
jb
jb
lock
call
jb
(bad)
aam
jb
jb
int3
enter
jb
sar
mov
test
jb
jb
mov
jb
jb
mov
jb
jl
je
jb
jb
ins
push
jb
pop
pop
push
jb
jb
push
dec
dec
inc
jb
jb
inc
cmp
xor
jb
jb
sub
and
jb
jb
sbb
adc
jb
jb
or
add
cld
div
movzx
shl
or
repnz
xchg
movs
les
sahf
je
fnstenv
or
pop
push
and
push
or
xor
cmp
mov
scas
push
mov
movsx
mov
or
(bad)
in
shr
mov
or
clc
dec
xor
pop
pop
das
cmp
hlt
push
lods
ret
das
shl
and
hlt
scas
and
jno
push
adc
repz
sbb
and
mov
push
(bad)
xchg
(bad)
and
push
inc
outs
inc
hlt
mov
push
mov
xlat
ret
scas
jmp
and
fcomp
cwde
or
stc
imul
add
mov
ret
push
dec
cmp
cmps
push
push
cmp
mov
push
sbb
pushf
xchg
gs
add
sbb
inc
or
inc
pop
or
cmp
xchg
(bad)
repz
icebp
stos
add
gs
int
(bad)
sub
and
push
dec
inc
inc
dec
add
outs
loop
(bad)
jle
push
and
dec
push
inc
push
dec
pop
and
jnp
mov
dec
push
push
pop
sub
push
inc
dec
enter
pop
dec
dec
dec
inc
push
das
push
sbb
jb
and
je
enter
push
js
call
nop
lock
movs
jae
psllw
repz
in
hlt
cmc
div
in
in
clc
stc
cli
sti
in
in
cld
std
(bad)
jmp
in
in
loope
jecxz
in
in
in
out
in
in
jmp
in
in
in
out
out
in
in
rcl
rcl
in
in
aam
(bad)
xlat
in
in
fcomp
fcmovu
in
in
(bad)
(bad)
in
in
rol
ret
in
in
(bad)
(bad)
in
in
enter
in
in
int3
int
iret
in
in
mov
mov
in
in
mov
mov
in
in
mov
in
in
mov
in
mov
in
in
movs
cmps
cmps
dec
out
in
test
cdq
in
ins
jl
ins
mov
les
add
sub
adc
(bad)
(bad)
ins
add
stos
add
ficomp
add
jo
imul
sub
jg
adc
cmp
jl
inc
dec
gs
daa
pop
in
mov
mov
mov
pop
and
je
dec
gs
outs
jb
sub
outs
in
mov
inc
dec
outs
mov
cmp
and
outs
add
add
mov
test
xchg
scas
xchg
or
dec
sahf
lock
adc
fidiv
hlt
mov
scas
or
sbb
outs
and
scas
test
pop
leave
dec
inc
inc
imul
outs
nop
movs
movs
in
push
and
popa
outs
lods
inc
cs
scas
cld
ret
out
jbe
dec
outs
jbe
jb
ins
outs
ja
jo
inc
or
inc
pop
jo
mov
push
inc
dec
ins
gs
mov
mov
sahf
pop
mov
jo
fcmovu
jno
jbe
imul
or
sbb
(bad)
ins
and
ins
pop
jle
gs
scas
pusha
movs
xor
push
(bad)
shl
mov
unpcklps
fst
outs
fs
adc
sbb
movsx
outs
imul
fnstsw
or
or
and
in
jle
popa
jae
lea
mov
push
pop
xlat
push
or
scas
sbb
add
inc
js
jae
adc
sbb
popa
sbb
jae
push
test
ins
pop
mov
add
add
push
inc
inc
arpl
sbb
adc
nop
cmp
je
push
push
and
je
ins
inc
adc
push
ds
mov
(bad)
adc
popa
outs
in
mov
pop
sbb
mov
popa
fsub
mov
mov
dec
jne
add
push
bound
fiadd
test
test
cmps
or
data16
add
add
mov
div
or
inc
push
stos
push
pop
scas
or
mov
addr16
cld
push
mov
data16
je
adc
cs
or
cmps
les
pop
dec
invd
xor
inc
ins
jae
cwde
inc
cmp
mov
mov
and
addr16
inc
cld
fld
push
adc
jb
popa
fs
push
in
pop
les
int3
cmp
test
pop
or
push
mov
aam
iret
jnp
inc
aam
dec
pop
and
sub
and
dec
dec
pushf
fist
jno
cmp
mov
push
cmp
adc
adc
jl
push
dec
jne
push
mov
add
or
push
fadd
lods
and
outs
arpl
cmp
fdivr
mov
shr
div
mov
jmp
add
mov
push
retf
mov
mov
or
mov
mov
mov
push
mov
adc
sbb
rcl
mov
not
stc
adc
or
mov
mov
mov
adc
call
pop
fcomip
mov
nop
or
xchg
adc
mov
pop
mov
add
std
adc
adc
sub
aaa
std
mov
mov
cmp
push
cmp
ja
sub
mov
inc
inc
dec
push
pop
push
and
jmp
ja
nop
xor
inc
pop
add
sbb
inc
(bad)
jg
mov
cmp
jbe
cmp
repz
je
movzx
xor
push
dec
iret
xchg
mov
jp
retf
add
(bad)
add
or
cmps
jne
xor
inc
inc
ds
sti
mov
shl
xor
or
jle
add
push
(bad)
jle
(bad)
out
and
sti
je
loopne
out
sub
pop
movs
jnp
xchg
inc
mov
jo
and
add
fisttp
add
adc
jbe
movs
out
and
sbb
mov
outs
add
mov
mov
or
pop
fstp
push
push
adc
and
ins
iret
mov
imul
(bad)
out
movs
add
repz
cmp
jbe
adc
mov
mov
std
or
pop
dec
sub
clc
push
sub
or
mov
xor
xchg
push
jl
xor
xor
sbb
sub
je
(bad)
jae
cmp
xchg
hlt
test
jl
inc
mov
into
mov
sub
jb
push
stc
pop
or
out
dec
std
cmps
(bad)
jae
inc
dec
jne
inc
retf
int
dec
leave
jne
jns
mul
mov
sub
mov
shl
icebp
dec
mov
cmp
fcmovb
pop
mov
(bad)
(bad)
fild
jmp
jbe
add
mov
sub
jmp
mov
dec
lock
(bad)
fbstp
push
mov
sub
xor
push
outs
cdq
jo
repnz
xchg
sbb
sar
inc
(bad)
xor
adc
and
jo
push
mov
neg
xor
fs
push
ins
adc
(bad)
inc
pop
sub
dec
inc
jbe
mov
add
aaa
pop
and
or
add
fldcw
mov
add
outs
dec
add
and
je
jg
xor
fild
fistp
ret
mov
jmp
fild
fild
ror
(bad)
fdivr
mov
xor
ins
pop
push
push
sti
outs
sub
rcr
loope
push
ss
out
inc
ffree
ffree
ffree
pop
aad
(bad)
add
call
push
xchg
xor
xchg
dec
or
fsub
mov
mov
cli
mov
sbb
push
mov
sub
inc
inc
mov
cmp
mov
sbb
popa
sub
and
ret
dec
cdq
outs
mov
aam
scas
add
ins
imul
xchg
nop
cmps
add
pop
outs
dec
hlt
in
cwde
mov
fsubr
push
lods
or
cwde
push
std
sbb
xchg
cmp
call
(bad)
and
mov
xchg
dec
inc
sub
mov
mov
pusha
push
pop
add
or
popa
loopne
pop
add
scas
add
mov
repnz
jl
inc
int
das
shrd
mov
in
ins
or
call
xchg
jecxz
adc
push
adc
daa
adc
xchg
jb
push
lock
add
aas
push
sar
inc
lock
int3
adc
ins
lock
setne
jmp
xchg
adc
ss
ins
push
call
pop
ins
cld
mov
addr16
inc
mov
dec
ret
test
add
xor
add
cdq
das
repz
sub
sbb
adc
mov
jmp
and
mov
scas
inc
pop
inc
pop
ror
fisttp
jae
sub
clc
or
cli
outs
jmp
mov
hlt
cmp
ja
jo
loop
or
(bad)
(bad)
inc
ja
or
fiadd
jle
push
push
sub
or
push
mov
jl
or
dec
cld
(bad)
mov
mov
add
jnp
imul
rol
sahf
lock
push
icebp
repz
inc
and
test
(bad)
scas
mul
xchg
and
mov
in
push
outs
daa
(bad)
pop
out
lods
mov
push
mov
loop
lods
das
add
and
jg
aas
or
ret
in
push
outs
add
mov
add
add
add
push
dec
xor
or
test
addr16
fbstp
add
sub
sbb
lds
mov
popf
jne
or
mov
and
loopne
mov
sar
ins
data16
push
aam
sub
ins
push
aas
pop
cmp
push
add
pop
push
mov
xor
sti
dec
jl
enter
lock
in
sbb
das
or
call
in
dec
ins
mov
clc
add
loope
cld
push
jnp
lahf
cld
imul
xchg
das
test
push
or
adc
cmp
add
sbb
or
dec
xor
mov
loopne
mov
ret
sub
and
xor
mov
pop
(bad)
mov
mov
ret
das
lea
daa
mov
xchg
push
and
loopne
das
sub
cld
test
jne
hlt
not
mov
lock
adc
dec
and
push
inc
xchg
dec
and
dec
add
retf
pop
cli
mov
xchg
xchg
fnstenv
pusha
jmp
mov
push
repnz
adc
lahf
stc
dec
imul
jmp
ud0
mov
xor
xor
repz
mov
pop
int3
out
mov
je
outs
xchg
mov
cmp
sub
hlt
cli
jmp
shl
xor
rcl
mov
xchg
jmp
push
fld
int3
add
inc
call
repnz
xchg
inc
inc
loopne
lock
jb
mov
fcomp
inc
dec
je
mov
mov
pop
sub
jbe
sbb
pop
xchg
add
pop
inc
(bad)
lods
mov
mov
push
add
mov
jne
jo
int3
js
ret
cmps
mov
add
pop
xchg
push
out
cld
push
icebp
retf
or
jae
push
jmp
add
rol
rol
pushf
(bad)
fdiv
xor
sar
sti
pop
jbe
mov
mov
cmp
jne
les
mov
xor
and
and
and
mov
sub
outs
mov
out
or
add
adc
in
adc
push
loop
test
sbb
out
xchg
push
sar
jmp
jbe
bnd
adc
mov
fimul
lods
cmp
adc
dec
jne
fld
mov
mov
fld
outs
or
dec
sub
ds
lods
retf
cmp
jne
cs
and
lods
jmp
sahf
ins
rol
sub
ins
and
inc
sub
mov
rcr
push
je
mov
adc
cmp
scas
mov
xchg
or
retf
rol
xchg
pop
add
fstp
mov
rep
sbb
cmp
dec
push
test
pop
mov
adc
xor
cmp
ja
imul
or
movzx
add
and
in
add
scas
cmp
lds
cld
or
jl
je
ret
je
mov
ror
ret
and
mov
dec
cmp
pop
pop
jne
lea
mov
call
lock
leave
test
xchg
push
pop
xchg
cmp
xchg
pop
aam
daa
out
jns
push
mov
mov
ret
in
xchg
jnp
mov
sub
test
and
jne
and
stos
add
or
adc
pop
sub
sbb
xor
in
jmp
push
pop
outs
adc
inc
push
enter
out
les
pop
and
cmp
jne
xor
cmp
jbe
mov
aad
int3
mov
jmp
xor
inc
inc
dec
add
enter
js
push
les
fucomip
add
jne
aas
and
in
lahf
mov
call
pop
js
mov
add
shl
retf
lea
or
test
jecxz
dec
mov
cwde
pop
ds
leave
daa
push
push
lods
pop
lods
out
sar
add
inc
je
jl
in
aas
mov
or
je
mov
inc
je
mov
dec
je
push
fimul
mov
pop
cmp
jbe
mov
inc
ss
xchg
adc
push
mov
add
clc
adc
jno
lods
pop
mov
xchg
mov
ins
jae
mov
test
(bad)
jmp
inc
sbb
lods
cs
mov
add
daa
fdiv
add
cmc
test
cmp
xlat
dec
sahf
jl
mov
mov
push
test
jg
mov
mov
inc
and
pop
and
sbb
shr
or
fcomp
fst
adc
in
std
jmp
cld
lea
and
int
jmp
dec
sar
scas
fbstp
xor
lods
rcl
mov
out
add
jno
jg
sbb
lea
iret
mov
cld
push
daa
push
xor
stos
or
bound
pop
jge
mov
neg
jmp
or
ror
push
enter
xchg
push
mov
cmps
mov
scas
shr
fs
mov
inc
dec
mov
int3
or
(bad)
jmp
cmp
jne
pop
pop
outs
aam
mov
xchg
xchg
(bad)
mov
psubd
test
mov
test
(bad)
aam
adc
mov
cmp
jge
pop
jle
or
pop
cld
mov
cs
daa
pmuludq
cld
repnz
jb
ror
jl
fild
sti
mov
movzx
sub
mov
call
cs
lea
mov
repz
sub
push
in
fcomp
push
add
ja
movsx
mov
sar
lea
sbb
jge
mov
cld
pushf
jmp
lahf
xchg
out
xor
push
and
mov
inc
dec
inc
dec
lods
or
xor
jge
in
sub
mov
aam
adc
jg
cmp
out
test
ret
jl
pop
sbb
je
mov
scas
mov
xor
stos
jmp
inc
inc
mov
mov
clc
movlps
pop
pop
inc
clc
dec
pop
pop
aad
test
push
mov
sbb
or
gs
dec
jbe
add
add
leave
mov
mov
mov
das
(bad)
mov
inc
ins
cmp
or
mov
add
add
jmp
pop
scas
je
mov
dec
push
lock
mov
repz
inc
test
jne
sbb
popf
add
in
stos
xor
call
cmps
push
sti
add
je
inc
jne
pop
(bad)
bswap
push
mov
ret
xchg
repnz
sub
repnz
cwde
out
pop
jl
retf
adc
pushf
fwait
repnz
mov
mov
inc
je
push
push
cmp
(bad)
js
inc
pop
fmul
sbb
out
add
or
loop
push
mov
test
stc
mov
add
and
and
adc
and
sub
out
jl
fld
xor
sub
sahf
jmp
sbb
and
sub
sub
or
sub
xor
cdq
sub
sub
cmps
loopne
xchg
add
ror
iret
shl
cmps
jle
adc
fisub
mov
dec
mov
jne
test
sbb
or
xor
aaa
inc
jg
inc
inc
push
mov
cs
imul
mov
pop
cmp
push
out
fabs
push
jg
sar
sbb
pop
frndint
rcr
scas
push
fnstsw
pop
std
fcomi
fwait
mov
test
je
fidiv
jne
lea
fcomip
out
add
inc
sub
nop
shr
and
add
mov
pop
loope
cmp
xor
stos
mov
add
jns
call
cmp
pushf
or
cmp
fnstsw
xor
or
dec
js
dec
and
pop
data16
mov
xor
jmp
mov
in
add
xor
push
or
shr
mov
xlat
pop
push
out
xor
xchg
adc
(bad)
std
dec
or
test
pop
add
into
neg
sbb
or
or
je
add
out
push
inc
sub
mov
loopne
jae
dec
add
xchg
rol
mov
fild
cli
clc
inc
xor
mov
xchg
loope
sbb
call
or
rcr
sub
pushf
and
mov
dec
sub
cmp
jg
cmp
inc
or
jmp
enter
rol
div
add
jmp
mov
sbb
aam
push
scas
inc
pop
das
sbb
add
mov
f2xm1
fwait
pop
call
push
fldz
int3
cmp
aam
aam
lods
or
jg
fdivp
outs
pop
fdivr
pusha
jne
inc
sbb
dec
scas
imul
fbld
fistp
sub
add
jg
sbb
or
jne
mov
sahf
add
mov
mov
adc
fistp
jmp
fstp
dec
test
and
mov
pop
or
mov
ins
and
push
int
cmp
mov
test
or
fimul
add
add
jmp
aaa
mov
idiv
add
add
es
push
inc
imul
push
loopne
or
cmp
aaa
add
sub
mov
sete
rcl
ss
sub
pop
fist
enter
add
push
xor
addr16
mov
push
fwait
hlt
jle
scas
sbb
lods
jmp
sub
fstp
fcom
(bad)
call
add
inc
mov
inc
jl
sbb
cmp
(bad)
adc
mov
xor
fs
shl
xchg
push
mov
add
or
or
scas
sbb
or
cmp
inc
stc
inc
xchg
mov
jae
mov
out
push
jmp
shl
data16
sbb
mov
adc
call
(bad)
shld
xchg
mov
shl
add
push
retf
movs
dec
outs
movs
push
push
sub
hlt
sar
mov
mov
(bad)
mov
stc
int3
aaa
loopne
adc
retf
push
cmp
movs
gs
iret
and
call
test
xor
and
mov
and
fldcw
xor
div
(bad)
in
and
adc
mov
dec
add
adc
mov
std
(bad)
les
add
lea
call
(bad)
cmp
jb
or
dec
or
shl
or
jb
std
pop
rcl
sti
ins
cli
(bad)
cmp
ja
adc
out
test
push
mul
pop
dec
inc
jne
sub
dec
mov
aas
cdq
idiv
imul
lock
ds
pop
popa
ds
add
pusha
ret
or
shl
rol
std
std
pop
and
ror
bound
call
jg
popf
sbb
push
clc
or
mov
hlt
or
inc
pop
(bad)
rol
dec
fdivr
mov
stc
mov
add
jl
add
adc
ret
inc
and
xchg
lods
mov
xor
lock
or
dec
lock
imul
mov
push
sub
xchg
scas
push
stos
shl
cmp
push
pusha
xchg
sub
mov
mov
inc
aas
xor
mov
add
ins
pusha
loop
cmp
jb
jmp
sub
fild
push
sbb
sbb
push
hlt
mov
hlt
mov
cdq
mov
push
stos
xlat
ss
sbb
(bad)
cmp
pop
or
clc
jge
add
addr16
xchg
inc
icebp
and
mov
call
push
adc
mov
mov
rol
ror
sbb
lahf
jnp
xchg
and
push
retf
xchg
or
add
nop
jbe
test
sub
test
call
or
jb
retf
in
pusha
in
clc
(bad)
push
mov
mov
test
neg
or
mov
movs
adc
(bad)
sbb
adc
xor
inc
clc
or
sti
je
test
xor
out
push
cmp
call
in
add
aaa
add
movs
fsubrp
xlat
add
push
lea
or
xchg
cbw
std
mov
mov
jb
jecxz
fbstp
push
jge
call
jmp
xchg
push
xlat
call
ret
(bad)
fisub
in
in
xchg
test
jo
inc
push
mov
out
repnz
adc
xchg
cdq
in
sti
js
adc
stos
mov
mov
jl
enter
xchg
mov
mov
jnp
jg
mov
je
or
ret
add
sbb
mov
pop
cmp
sub
adc
outs
xor
stos
fdivr
jne
push
add
jle
xor
adc
(bad)
xor
sbb
inc
mov
mov
out
fadd
xor
psubusw
jecxz
imul
xor
xchg
pop
addr16
iret
in
mov
loop
and
bswap
clc
mov
or
xor
outs
js
jecxz
push
inc
cmp
jne
push
or
ret
lods
in
and
fdiv
jge
jns
pop
add
pcmpeqw
mov
or
fadd
xor
lea
adc
push
pop
mov
jle
fsubr
pop
inc
mov
adc
jecxz
or
sub
push
out
and
bt
pop
ins
cmc
push
das
jmp
in
(bad)
sahf
fst
repnz
jns
mov
add
ret
mov
dec
or
cmp
jne
mov
xor
mov
sbb
cmp
xchg
ds
push
test
jmp
or
xor
or
dec
add
add
or
out
cmp
or
mov
in
call
fwait
sbb
int
jns
in
sahf
mov
je
shl
push
shl
or
xchg
mov
push
and
xchg
test
icebp
mov
cdq
test
pop
std
inc
sub
lds
mov
dec
push
lea
jmp
cwde
fcomp
push
enter
xchg
fdiv
loopne
mov
sbb
xor
pop
mov
inc
jnp
fsubr
add
movs
pop
xchg
xor
mov
push
cmp
mov
cmp
dec
add
jmp
out
aad
mov
mov
or
(bad)
push
mov
pop
bnd
mov
or
and
lods
loope
pop
shl
mov
cmps
or
scas
ror
call
das
stos
add
dec
jg
je
mov
add
je
sbb
pop
sub
je
pop
je
jmp
cmp
lods
hlt
js
dec
mov
jb
repnz
add
pop
movs
add
sbb
add
adc
xor
or
mov
mov
push
push
(bad)
test
mov
jmp
outs
dec
push
xchg
jmp
mov
pop
or
or
or
push
imul
out
pop
ret
mov
repz
fcomp
call
sbb
push
add
and
das
retf
in
sbb
push
pop
xlat
sub
sbb
xchg
add
retf
jg
cmp
xchg
and
es
ins
jns
add
clc
pop
adc
jae
nop
out
xor
mov
call
xor
cmc
xchg
lea
pop
and
cld
(bad)
xor
fwait
sti
out
push
rol
ret
inc
(bad)
jns
push
sub
jmp
adc
pop
rol
into
jge
mov
cs
add
nop
ja
push
stc
push
outs
dec
xchg
je
inc
xchg
add
or
fucomi
add
daa
mov
mov
test
mov
(bad)
scas
pop
pop
inc
mov
pop
mov
xchg
adc
cli
clc
mov
mov
or
iret
xchg
lahf
fcomp
push
jo
inc
imul
inc
dec
das
push
dec
xchg
mov
push
adc
and
mov
ins
mov
jb
mov
std
sbb
mov
ret
jne
or
mov
or
(bad)
lea
popa
jge
jmp
cmps
or
ret
movs
(bad)
mov
push
loop
les
(bad)
fdivr
push
jmp
je
mov
push
add
cmps
daa
xchg
clc
inc
scas
push
inc
je
dec
(bad)
int
neg
(bad)
mov
nop
sub
xor
jmp
mov
add
lock
stos
lods
sub
dec
lock
sar
xor
sub
jae
or
cmps
mov
jb
(bad)
sbb
scas
(bad)
add
dec
fwait
sub
js
add
inc
into
pop
cli
mov
fidiv
adc
mov
and
mov
mov
popa
mov
(bad)
adc
or
push
pop
inc
and
popf
fisubr
dec
js
xchg
sbb
add
and
cs
addr16
dec
loope
mov
stos
push
ret
sbb
jl
pop
clc
and
or
push
(bad)
cmp
jne
inc
ins
pop
mov
jbe
ja
mov
ret
sub
and
sub
je
dec
je
sub
idiv
ja
sub
je
jmp
mov
jmp
push
push
push
es
mov
push
inc
mov
jle
fadd
xor
pop
push
add
mov
adc
adc
add
imul
add
pop
cmp
dec
xchg
pop
call
ficomp
bound
push
out
mov
mov
ret
cmp
jb
pop
scas
mov
sbb
mul
mov
(bad)
jmp
and
cmp
sbb
or
add
xor
jne
cmp
jg
mov
inc
sub
add
sahf
add
inc
scas
imul
add
cmp
jle
adc
pop
inc
cmp
push
out
cld
gs
shl
fadd
loopne
pop
lea
push
jmp
cmps
and
push
rcr
adc
or
ror
test
xchg
sbb
cld
adc
not
jp
or
iret
ds
clc
dec
addr16
add
or
mov
sbb
sub
mov
sbb
(bad)
jmp
dec
enter
cmp
jmp
hlt
lods
pusha
jnp
jp
push
stos
test
jo
mov
cmc
(bad)
sbb
inc
push
in
add
add
lock
(bad)
mov
xchg
sub
jb
and
cmp
push
mov
cmp
hlt
cmp
push
mov
aaa
repnz
jae
hlt
sbb
jmp
icebp
xchg
lock
cmp
movs
or
jo
jge
add
cmps
add
fist
mov
(bad)
push
fstp
(bad)
popf
inc
in
shl
aaa
add
cmp
or
and
fs
jne
mov
add
adc
rol
repz
pop
or
ja
or
push
clc
sub
cmp
aaa
xor
dec
cmp
xor
fwait
pop
push
mov
and
jmp
cmps
(bad)
jne
cmp
adc
cmp
(bad)
sti
jne
imul
(bad)
das
call
fcomp
das
xor
inc
repnz
out
sbb
clc
add
aam
idiv
add
jb
adc
inc
or
mov
cmp
pop
push
fs
push
movs
scas
push
and
or
mov
pop
mov
pop
imul
test
and
xchg
je
ss
jmp
push
pushf
and
mov
loop
jmp
add
sub
xchg
inc
fwait
adc
add
int
int3
call
mov
in
mov
je
or
or
pop
add
pop
inc
or
sbb
(bad)
add
sbb
test
and
xchg
jg
mov
ds
(bad)
jo
add
sbb
add
jecxz
cmp
or
and
jne
daa
add
pop
sub
add
or
mov
aas
inc
ficom
and
adc
scas
adc
pavgb
into
rcl
sub
xchg
cmp
nop
inc
jl
pop
mov
ret
call
pop
(bad)
sub
pop
cmp
repz
test
in
adc
jne
dec
cwde
daa
icebp
mov
fsubr
daa
fst
fcomp
out
pop
mov
or
pop
fwait
jmp
sbb
adc
add
fstp
push
pop
push
dec
push
loopne
inc
xchg
xor
sub
add
mov
sub
jb
or
mov
add
xchg
enter
enter
out
mov
xchg
and
xchg
jp
adc
(bad)
mov
jmp
in
jmp
pop
mov
xor
loop
add
add
mov
or
push
mov
leave
movs
cdq
xor
arpl
mov
dec
dec
xchg
pop
dec
push
outs
repnz
add
dec
(bad)
push
shr
test
adc
pop
fmul
push
push
adc
mov
dec
lea
dec
retf
movs
pop
int
push
xor
mov
cmp
mov
inc
in
push
xor
fcmovb
sti
or
inc
mov
or
call
in
call
je
shl
in
fsub
outs
dec
call
inc
add
xlat
dec
xchg
stos
ds
cmps
xlat
pop
inc
mov
add
lock
mov
jnp
jl
je
xchg
cmp
add
hlt
add
into
in
or
js
jb
sub
cmp
stos
xchg
sub
arpl
(bad)
pop
test
fidivr
mov
xor
add
mov
fucomi
inc
jb
stos
jmp
movs
fdivr
lods
pop
in
push
lods
ins
popa
add
push
adc
xor
fimul
pop
fs
adc
push
push
sub
push
mov
jmp
repnz
sti
dec
jne
push
push
inc
loope
inc
dec
push
pop
lods
fsub
invd
mov
outs
mov
scas
or
sbb
xchg
mov
and
cmp
dec
scas
or
push
add
add
add
cmps
adc
cld
imul
sub
je
sub
xor
call
ret
xor
mov
adc
jle
retf
push
sahf
pop
cs
sbb
sbb
mov
jl
sub
lock
jge
sub
lock
add
jg
mov
sbb
add
(bad)
sti
add
dec
mov
jle
pusha
dec
add
cmp
jo
ret
add
push
mov
mov
je
cmp
bnd
xor
jmp
in
adc
xchg
in
jle
in
push
cmp
mov
add
cs
push
addr16
fld
in
mov
add
pop
jo
loopne
mov
inc
pusha
out
sub
lea
test
cmp
xor
stc
fcmovbe
test
cld
(bad)
xchg
popa
and
sbb
adc
xchg
add
test
aam
mov
and
pusha
aaa
scas
xor
cmp
sub
and
dec
mov
xor
sub
popa
scas
xor
add
pop
xchg
mov
or
push
sub
pusha
fsub
mov
mov
fsubr
call
pop
adc
push
push
adc
add
or
sbb
and
xchg
out
into
and
and
sbb
lock
test
lahf
dec
cmp
mov
sub
popf
sar
mov
xor
push
lea
cmp
push
out
stos
ja
sub
data16
sub
or
cs
or
cmp
pushf
mov
push
jp
pop
mov
push
pop
stc
jl
and
mov
push
cld
or
sar
adc
hlt
sbb
dec
mov
xchg
ss
inc
pop
iret
test
enter
adc
inc
add
adc
bound
xor
pop
out
lods
dec
inc
push
xchg
push
push
sbb
jle
lea
fldenv
test
mov
sub
and
fdiv
jmp
sub
pop
js
les
cmp
add
mov
mov
mov
jno
ja
inc
adc
ja
dec
push
xchg
test
stos
xchg
xchg
add
cmp
pop
mov
clc
fwait
inc
clc
and
cmp
movs
fistp
pop
and
or
push
or
jp
ins
and
xor
mov
mov
push
jg
cmp
fistp
jne
sbb
sub
gs
ins
mov
(bad)
mov
lea
push
ss
les
mov
aas
or
cmp
push
push
add
cmps
cli
loope
push
sar
retf
adc
jmp
sbb
sub
cwde
xor
push
and
add
inc
or
aaa
movs
jle
or
pop
push
cmp
adc
mov
sbb
mov
mov
ins
icebp
xchg
mov
inc
or
popf
adc
imul
xor
mov
or
mov
inc
mov
hlt
clc
push
in
push
loopne
pop
sbb
nop
mov
je
int
push
jns
sbb
inc
add
fadd
push
push
sbb
mov
adc
jns
and
or
mov
add
cmp
inc
mov
sbb
add
call
leave
int
pop
push
push
cmp
in
stc
dec
je
jmp
xor
inc
xor
sub
jmp
and
add
mov
shl
pop
or
push
shl
push
in
sub
push
daa
movs
push
add
adc
nop
jb
into
add
or
mov
mov
lahf
lods
pop
cld
cmp
movaps
mov
inc
shl
jno
aas
and
push
arpl
jmp
mov
and
adc
sub
adc
xchg
cmps
dec
aas
push
lea
jl
add
jo
repz
jo
shl
push
repnz
mov
mov
fadd
faddp
push
mov
mov
outs
fdiv
mov
sub
enter
movs
test
lods
xor
xchg
add
sub
mov
mov
mov
fs
aas
dec
jo
inc
bound
jo
dec
jmp
es
mov
std
rol
push
jne
lods
or
jae
jae
jno
movs
add
fwait
into
add
mov
shl
call
lock
test
xor
dec
outs
loopne
lock
add
(bad)
cmp
push
jp
or
or
xchg
mov
sub
sbb
and
scas
cld
popf
cmp
mov
jmp
lahf
les
call
imul
sahf
pushf
mov
sub
in
adc
mov
inc
xor
mov
cmp
mov
add
xchg
mov
test
out
sbb
add
movs
pushf
mov
sub
xchg
inc
push
pop
(bad)
or
sub
popa
or
in
and
int3
sub
push
ins
call
dec
dec
hlt
push
add
inc
shl
add
or
fcomp
sbb
dec
movs
fist
mov
add
sar
adc
adc
sub
mov
addr16
mov
pop
push
neg
jl
pcmpeqw
cmp
das
jo
mov
fucomip
clc
jne
lock
mov
pop
or
gs
pop
and
sbb
lods
adc
lock
mov
pop
dec
fisubr
and
out
test
xor
adc
add
sub
movaps
adc
test
mov
imul
push
adc
rol
mov
cmp
add
adc
add
dec
or
test
add
adc
aas
or
jb
mov
sub
and
jns
dec
adc
inc
add
add
fwait
sub
mov
pusha
movs
or
or
jno
and
popa
aas
cmc
retf
sub
xor
cmp
(bad)
add
cdq
mov
mov
lock
adc
and
leave
aas
push
ins
loopne
push
inc
pop
jg
mov
jg
stos
popa
scas
das
adc
jl
mov
and
sti
adc
push
lods
adc
inc
inc
inc
jge
ror
xor
movs
push
mov
dec
and
add
repnz
hlt
fucom
add
jne
sbb
push
push
add
push
xor
xor
and
bound
sub
sar
adc
add
cs
inc
lods
dec
shr
xor
jg
cmp
dec
add
inc
sub
je
(bad)
pop
iret
in
mov
xor
int
jge
pop
pop
call
push
push
xor
sub
sub
(bad)
jmp
and
xor
or
dec
sbb
xor
in
and
xchg
das
movs
push
adc
and
outs
popf
push
sar
sahf
add
sti
sub
inc
mov
or
jmp
je
rol
push
and
js
jge
jb
xchg
xlat
and
adc
aad
cmp
push
cmp
and
cmp
xchg
mov
add
push
push
adc
mov
aaa
imul
mov
inc
inc
add
cmp
sub
cmp
jbe
bndstx
bound
daa
push
mov
mov
mov
and
lock
daa
enter
mov
lds
test
clc
mov
adc
dec
jbe
inc
ficom
test
je
add
inc
(bad)
push
or
jne
(bad)
hlt
loopne
xchg
jl
mov
add
hlt
or
sbb
aad
mov
mov
and
jge
in
push
shl
ds
popa
scas
nop
fwait
data16
aaa
push
mov
sub
jb
inc
mov
mov
pushf
ret
stos
(bad)
sbb
retf
jne
or
jbe
and
pop
or
jmp
pop
ja
popa
inc
popa
repz
or
mov
push
mov
inc
add
js
mov
dec
data16
mov
cmp
enter
xchg
sub
mov
sub
ins
and
mov
std
adc
xchg
scas
fs
pop
xchg
data16
adc
add
sub
mov
mov
ret
lock
sbb
mov
in
repnz
popa
mov
mov
add
cmp
test
dec
cmp
inc
push
out
mov
imul
cmp
nop
fmul
cs
ror
cmc
ja
push
dec
jne
jmp
push
or
mov
dec
push
test
cmp
and
add
push
add
sub
movs
xor
stc
push
scas
ret
cdq
lea
cmc
inc
fwait
cld
pop
mov
xor
mov
dec
test
and
lea
cwde
mov
pushf
mov
xor
test
sbb
xor
sub
mov
mov
ja
jl
xchg
xchg
in
xor
daa
sbb
mov
xchg
fsubr
mov
add
mov
pushf
push
pop
lock
movs
sbb
mov
pop
mov
mov
jle
les
sar
leave
add
inc
adc
int3
mov
and
jge
xor
nop
xchg
enter
ins
dec
or
or
les
pop
fsubr
dec
fwait
les
ret
adc
in
mov
clc
mov
dec
xchg
mov
and
push
mov
push
jge
int3
cmp
xchg
pop
or
or
add
push
mov
mov
shl
pop
push
xlat
ins
add
ins
das
fs
xlat
scas
ins
add
pop
add
and
add
pop
jp
fwait
dec
jo
push
and
pop
fwait
push
mov
cmp
mov
cmp
ss
or
cli
and
sbb
xor
pop
lock
in
mov
in
es
xchg
pop
cli
cmp
or
sbb
(bad)
test
int3
adc
les
fisttp
add
out
(bad)
push
xchg
mov
xchg
pop
sub
mov
ss
mov
pop
inc
repz
mov
xchg
adc
mov
movs
sar
pop
push
push
jp
mov
movs
push
and
js
out
pop
or
add
aad
(bad)
cs
imul
gs
jo
inc
and
inc
les
xchg
xchg
lock
inc
ds
pop
dec
ret
xchg
out
inc
and
lock
sbb
shl
mov
dec
test
mov
or
mov
inc
cmp
jne
jnp
add
loop
jp
fstp
adc
and
inc
dec
add
cmps
mov
inc
jmp
icebp
xchg
mov
mov
or
or
ret
in
xchg
add
jmp
jmp
sbb
mov
fisubr
push
mov
inc
or
mov
ins
jbe
lea
cmp
les
mov
daa
mov
rcl
pusha
or
icebp
repnz
pop
adc
jg
push
and
inc
or
test
mov
outs
inc
add
movs
fsubr
xor
pusha
add
jns
xor
and
jno
imul
xchg
hlt
mov
sub
mov
fstp
adc
sbb
push
jbe
sub
add
(bad)
imul
into
inc
lods
inc
xchg
mov
gs
(bad)
mov
fst
adc
dec
mov
cmp
sti
std
(bad)
mov
dec
mov
movs
adc
fdiv
aaa
fcomp
adc
clc
add
add
ja
push
loop
and
jl
imul
mov
jbe
sbb
mov
hlt
sbb
seta
mov
lea
mov
sub
fsubrp
sbb
mov
mov
cld
das
add
xor
fcmovnbe
add
aam
or
call
dec
xor
xchg
sub
lds
xchg
ret
inc
and
xor
out
add
dec
sbb
jnp
(bad)
(bad)
or
inc
shr
int3
mov
div
retf
mov
js
pop
fbld
xor
xchg
inc
or
add
sti
mov
loopne
inc
(bad)
cmp
in
jmp
ja
and
aad
add
inc
ins
fist
push
add
cli
jle
mov
mov
dec
out
inc
int
xor
int
enter
or
mov
fcom
hlt
(bad)
call
pop
xor
add
push
lods
mov
add
add
dec
adc
pop
cmp
sbb
(bad)
std
jnp
cmp
inc
xor
dec
mov
add
fcomi
iret
pop
mov
retf
idiv
cmp
add
retf
xor
sub
jle
fs
or
push
retf
fnstcw
outs
add
mov
pop
out
mul
mov
scas
fs
jmp
retf
movs
fstp
ret
je
shl
pop
je
retf
imul
js
sahf
idiv
in
cld
cs
mov
cmp
jnp
dec
int3
int3
inc
les
mov
mov
out
test
jle
pushf
push
movs
xchg
cmp
mov
das
pop
test
je
iret
repz
pop
enter
iret
jnp
jns
pushf
pop
lahf
push
push
dec
dec
repz
idiv
inc
jle
cmp
hlt
cmp
jnp
xor
dec
sub
nop
and
jne
pop
loop
sbb
js
sbb
enter
test
adc
iret
aas
daa
or
sbb
add
or
enter
add
pushf
add
out
cld
xchg
out
clc
push
in
hlt
cs
lock
sub
daa
out
call
pushf
sahf
loopne
xchg
ja
push
fsub
xchg
ja
pushf
aam
rcr
fmulp
mov
enter
(bad)
sub
jns
shl
repnz
fidivr
lods
mov
in
mov
fs
add
repnz
out
movs
das
(bad)
mov
jns
iret
enter
test
push
cmp
iret
leave
cmp
mov
leave
cmp
loopne
(bad)
shl
nop
sub
pop
jg
nop
jb
dec
add
sti
in
mov
test
mov
das
sub
xchg
pop
or
inc
pop
mov
mov
xchg
add
into
and
xchg
adc
fs
mov
nop
out
fdivr
mov
jge
nop
add
and
or
mov
leave
test
test
mov
into
loopne
mov
sbb
cwde
nop
mov
jns
adc
shl
mov
push
jb
(bad)
fdivr
push
add
cmps
retf
inc
sub
mov
or
adc
cmp
xchg
(bad)
mov
test
repnz
pop
push
test
pop
in
lock
xor
dec
call
mov
dec
jge
aaa
cmp
add
sub
data16
or
faddp
add
ret
dec
pop
jb
and
pop
or
sub
in
mov
ror
or
and
and
aam
aam
adc
pusha
rol
outs
pop
bound
(bad)
add
addr16
adc
sub
sbb
inc
xor
xchg
enter
adc
jb
in
add
cwde
pop
nop
or
xchg
pop
leave
add
sub
clc
clc
jecxz
repz
call
(bad)
sti
loopne
in
cmp
sbb
adc
mov
std
add
mov
or
dec
ret
es
enter
adc
fsub
xor
ror
cld
jb
(bad)
pusha
dec
dec
xor
jecxz
ror
add
pusha
nop
(bad)
nop
or
add
nop
add
aam
outs
pop
add
push
or
mov
dec
and
ds
outs
aam
adc
xlat
adc
dec
aam
nop
mov
js
pop
test
jns
mov
push
inc
xor
shl
nop
dec
lahf
iret
push
push
add
sti
jne
mov
and
mov
jle
inc
mov
leave
les
dec
xor
leave
fdiv
and
mov
xchg
sar
fs
inc
dec
add
enter
jb
int3
pop
adc
jb
movs
jb
sbb
shl
jns
movs
sub
cmp
cmp
movs
jb
fsubr
in
adc
pop
in
in
cdq
movs
ins
call
movs
jb
in
jo
lock
cdq
movs
jb
pushf
hlt
inc
cmp
jne
pop
add
adc
sub
mov
push
jns
or
dec
gs
mov
je
fs
jne
das
dec
jne
fxch
das
pop
inc
imul
fs
stc
repnz
outs
dec
jb
pop
outs
jb
ins
jo
stc
out
pop
xor
jb
ins
push
je
pop
push
push
inc
cwde
nop
cmp
mov
jns
jb
pop
jbe
aas
inc
jae
pop
inc
jns
rol
leave
inc
fimul
xlat
clc
mov
test
cmp
xlat
clc
mov
sbb
xor
pushf
xchg
dec
neg
lods
inc
cmp
jmp
sbb
adc
(bad)
out
popf
sub
cmp
add
push
mov
fdivr
add
fadd
cmp
push
cmp
enter
cmp
push
fcomp
sbb
cmp
dec
push
cld
neg
sbb
sbb
sub
adc
push
mov
lock
dec
dec
inc
ins
mov
fstp
nop
fdiv
pop
xor
adc
add
or
xor
push
fst
or
je
inc
mov
pop
inc
or
mov
mov
jo
pop
sub
ficomp
(bad)
sbb
and
sbb
xor
adc
xchg
mov
jge
jb
retf
in
in
mov
adc
dec
fld
dec
(bad)
xchg
fs
lods
(bad)
adc
or
lods
sbb
and
dec
sub
outs
pushf
push
lea
iret
adc
fadd
setno
gs
sub
add
inc
nop
adc
dec
ins
jo
xchg
add
inc
xor
loopne
dec
xchg
cmp
dec
fst
xchg
test
int
push
sbb
push
sub
arpl
xor
lods
aam
xor
and
pop
dec
cld
cmovbe
mov
ins
fst
adc
adc
lahf
test
and
add
in
add
cmp
in
or
pusha
or
call
dec
loopne
popa
es
dec
test
sub
in
jmp
mov
add
(bad)
sbb
in
xor
add
jb
ffreep
lahf
adc
daa
nop
rcr
sbb
(bad)
sahf
enter
nop
add
add
rol
cmp
push
push
cmp
mov
retf
add
test
(bad)
mov
cmp
push
scas
rol
sub
dec
mov
fnstenv
or
int3
xchg
cmps
es
fs
push
nop
pop
xchg
in
shl
loopne
jbe
add
cmps
rcl
mov
mov
cwde
fimul
into
mov
in
jle
mov
pop
leave
aaa
leave
ins
stos
hlt
mov
fcmove
out
pop
lock
fcmovne
out
pop
in
mov
fcom
mov
add
mov
sbb
xor
cmps
pop
sbb
jmp
mov
add
jmp
mov
dec
mov
mov
or
call
xor
fmul
rol
js
das
rol
add
shl
je
loop
push
dec
loopne
or
fwait
or
push
dec
and
sbb
xor
hlt
iret
adc
mov
push
sub
and
push
je
xor
xchg
jge
cmovg
adc
adc
add
shl
scas
iret
(bad)
loop
inc
push
enter
fstp
loop
outs
pusha
sbb
je
push
fs
or
add
mov
add
aaa
lock
adc
dec
push
test
or
jo
jae
repnz
in
mov
ins
jnp
mov
add
xchg
and
(bad)
out
xchg
sub
xor
shl
xor
lods
lea
mov
sbb
out
adc
or
inc
add
cs
add
and
jmp
mov
out
fild
jne
les
je
dec
jmp
jge
(bad)
and
movzx
call
rcr
imul
lea
add
ror
lea
cmp
cmp
call
hlt
aaa
out
mov
adc
fs
dec
inc
das
sahf
or
fsubr
sbb
lea
xor
jge
pop
in
repz
dec
jnp
pop
pop
daa
mov
in
test
in
push
iret
out
push
ins
shl
jne
push
cld
mov
pop
push
(bad)
cmps
jge
ret
fsub
or
dec
jmp
adc
add
jns
or
add
ja
clc
and
cmps
adc
repnz
div
and
jl
and
sbb
dec
addr16
(bad)
mov
add
mov
sti
push
(bad)
mov
cmp
mov
aam
rol
popf
not
pop
ret
aas
repnz
push
aad
loopne
clc
mov
mov
ss
jae
or
stos
cmp
in
or
adc
or
loopne
fs
scas
nop
in
in
loopne
inc
inc
cs
std
sub
je
stc
push
push
jno
sbb
jecxz
sub
(bad)
in
inc
pop
or
adc
and
or
nop
call
fimul
cmp
daa
mov
inc
call
xchg
jmp
xchg
pop
rcl
push
(bad)
out
es
mov
push
add
dec
rcl
push
adc
jns
pop
add
hlt
jmp
mov
mov
dec
inc
adc
cmp
bnd
xor
inc
(bad)
adc
in
out
(bad)
inc
(bad)
sbb
sub
and
(bad)
scas
cmp
push
pop
and
shr
pop
daa
xor
lock
in
lock
es
aaa
mov
mov
add
or
or
mov
lahf
(bad)
int3
not
lock
(bad)
or
scas
xor
xor
add
mov
sbb
push
add
push
in
retf
dec
imul
lahf
pop
push
dec
push
pop
iret
or
mov
jmp
mov
mov
add
and
or
adc
je
call
cld
imul
jmp
inc
lock
sbb
dec
repz
and
mov
lock
into
cwde
arpl
pop
call
sbb
jmp
in
sub
push
and
cmp
cmp
mov
lock
je
xor
aas
jg
dec
scas
nop
mov
sub
stos
enter
pop
mov
lea
cmp
fld
cdq
xor
jbe
xchg
jmp
popf
ficom
sar
add
dec
adc
or
enter
cmp
jmp
dec
pusha
gs
es
out
fist
shl
cs
cmp
mov
in
dec
in
or
and
jne
or
pop
sbb
adc
sbb
sbb
lods
xor
imul
inc
inc
sbb
mov
cmp
ja
sub
push
gs
cmp
repz
div
cmps
and
daa
out
inc
outs
push
out
mov
push
out
daa
mov
sahf
(bad)
fldenv
loopne
cmp
daa
xchg
add
pushf
pop
dec
ja
xchg
je
cs
mov
scas
movsx
imul
xor
cmp
fld
sbb
fmul
jmp
cwde
nop
xchg
dec
scas
inc
(bad)
lock
push
push
add
sub
fsub
imul
fstp
call
xchg
in
mov
push
mov
xchg
in
dec
lock
data16
fst
fadd
mov
mov
push
mov
aam
mov
xor
js
lods
call
outs
add
enter
(bad)
xchg
enter
int
push
sar
cdq
ficom
(bad)
in
int3
jg
jmp
je
jmp
sbb
int
or
xor
and
je
adc
mov
add
mul
cdq
cmps
jbe
pop
in
out
or
(bad)
jns
es
ins
mov
sub
daa
fdiv
push
push
jo
out
lock
dec
sbb
les
xchg
mov
mov
fst
cmp
mov
mov
leave
and
mov
je
sbb
lods
lods
fcomp
xlat
test
pop
shr
xor
popa
movs
inc
out
jo
and
movs
test
pusha
mov
enter
cmp
push
test
rcl
xchg
jmp
cmp
aaa
nop
dec
mov
jmp
pushf
mov
sub
ret
inc
mov
adc
mov
push
or
mov
cmp
mov
or
mov
add
ret
in
out
jmp
mov
or
mov
mov
dec
iret
movs
icebp
mov
fist
cmp
(bad)
xor
push
(bad)
push
repnz
cmps
loop
and
ret
loopne
xor
sub
nop
in
adc
or
out
imul
loopne
movs
jb
into
repnz
adc
dec
nop
dec
cmp
or
push
push
mov
sub
clc
xor
repz
out
mov
cmps
stc
cmp
sub
pop
out
mov
xor
daa
movs
rol
out
clc
cmp
adc
fisubr
cmp
out
or
ss
dec
fcom
push
xor
dec
xor
popa
sbb
popa
push
inc
dec
fcomp
xor
push
push
dec
adc
dec
enter
aaa
and
lods
dec
loopne
(bad)
movsx
fdiv
fdiv
shl
xor
aaa
rcl
iret
pusha
dec
dec
pop
jno
add
sahf
push
xchg
imul
inc
es
loopne
or
enter
add
cmp
call
xor
aas
fs
test
dec
sti
cmp
mov
cmp
test
hlt
adc
add
out
dec
push
adc
xchg
xchg
mov
or
cwde
jo
mov
arpl
movs
inc
ja
mov
adc
fadd
jno
dec
cmp
sbb
aad
xchg
je
jno
cmp
mov
xor
jno
js
ret
outs
aaa
mov
cmp
loop
nop
popf
nop
cmp
dec
aaa
xor
xor
jbe
push
mov
loope
lock
clc
mov
leave
adc
add
mov
inc
ficomp
dec
xor
push
loopne
test
dec
mov
cli
test
mov
and
bnd
jb
or
outs
inc
xor
mov
jmp
mov
ja
add
dec
add
adc
add
iret
outs
push
jbe
shl
push
push
or
mov
dec
gs
pop
jmp
add
fwait
inc
daa
jmp
fistp
inc
cmp
xor
or
sub
(bad)
dec
or
pushf
bound
add
mov
repnz
cmp
push
lock
jb
(bad)
mov
fisubr
mov
push
jmp
ins
jo
jns
sub
data16
dec
jne
pop
adc
and
popa
jb
test
xor
pop
inc
pop
jnp
mov
ins
add
inc
outs
jne
cmc
jg
bound
outs
arpl
lea
mov
shr
outs
or
test
mov
movups
jb
retf
pop
dec
repnz
and
imul
inc
gs
jo
sub
and
inc
inc
xor
iret
push
dec
inc
fnsetpm(287
inc
jns
fidivr
or
cwde
daa
adc
or
add
push
add
outs
push
clc
fsub
sub
adc
lds
sti
and
dec
ja
test
sub
test
push
inc
xchg
and
(bad)
jmp
sti
pop
xor
inc
in
push
jbe
das
add
push
jle
movs
push
jmp
lea
pop
(bad)
add
xchg
cld
stc
pop
push
sub
fcom
jne
sbb
add
mov
lea
mov
ins
push
xchg
aaa
adc
sbb
mov
and
inc
jo
ret
push
xor
fs
out
in
push
nop
(bad)
test
inc
test
inc
push
push
add
push
gs
push
xor
or
jle
popa
shl
add
cld
test
xor
fadd
add
test
lahf
mov
bound
adc
cmp
and
push
xchg
lods
fdiv
cmp
xor
sbb
out
daa
mov
cwde
cmp
push
sbb
sub
aam
sbb
and
out
sbb
out
call
aas
inc
or
adc
add
ss
stos
xlat
and
mov
out
loopne
ja
mov
test
cmp
les
outs
(bad)
adc
cdq
inc
bound
cmc
push
lods
das
pop
pop
mov
lea
test
cmp
aas
clc
push
inc
inc
test
adc
add
add
add
movs
ja
sbb
xor
inc
mov
call
mov
shl
sbb
add
ret
xchg
and
mov
or
loop
push
sti
cs
fwait
inc
popf
and
adc
and
addr16
add
clc
mov
cmp
adc
in
push
repz
or
pushf
and
xchg
jle
vmaxps
push
jecxz
mov
mov
invd
outs
out
lods
inc
push
push
stos
add
dec
cmp
into
mov
mov
test
ret
inc
lock
enter
pop
pop
xlat
pop
pop
mov
fcomp
add
mov
or
sbb
sbb
cmp
and
xlat
cld
or
inc
mov
mov
xchg
cmp
add
mov
es
mov
cmps
repnz
in
dec
fstenv
loope
add
dec
or
ret
or
dec
jbe
lock
add
pusha
dec
and
xchg
xchg
mov
and
aad
shl
imul
inc
mov
cmp
inc
movs
xchg
lock
sbb
or
add
cmp
or
dec
add
dec
jne
xchg
fsubr
sbb
and
inc
int
inc
and
mov
jnp
inc
push
jb
arpl
or
pop
mov
dec
jecxz
bound
cld
inc
xchg
retf
xchg
nop
adc
cld
ds
mov
mov
jns
and
add
and
cmp
jne
mov
inc
mov
mov
adc
mov
xchg
adc
nop
xor
mov
pop
cs
stc
sbb
mov
int3
jmp
call
repnz
repnz
jg
add
enter
stos
lods
lods
enter
scas
scas
nop
xchg
enter
xchg
xchg
xchg
xchg
enter
xchg
xchg
cwde
cdq
enter
call
enter
or
add
xchg
or
mov
mov
mov
inc
cmps
push
dec
fild
push
add
xor
test
add
adc
jo
jl
data16
gs
das
dec
adc
sbb
test
jne
or
pop
pop
inc
jmp
cs
dec
xor
cmp
jle
sub
sbb
aaa
(bad)
and
ret
in
ins
clc
push
(bad)
dec
repz
js
jge
loopne
cmp
jp
mov
sub
mov
or
or
repz
sub
mov
mov
rcr
push
rcr
cmps
fisttp
mov
or
push
or
mov
pop
sbb
retf
je
mov
mov
sbb
mov
mov
(bad)
push
and
jmp
jle
in
je
jmp
jp
pop
fdivr
mov
ins
sbb
test
out
jne
xor
fistp
not
cmp
aas
pop
je
(bad)
in
or
add
dec
ja
push
jmp
call
jmp
pushf
add
mov
mov
cmp
fdivr
add
add
adc
add
mov
ficom
(bad)
jle
cmovnp
sbb
out
add
aaa
mov
in
fisttp
adc
adc
mov
mov
cmp
repnz
lock
jb
add
add
call
(bad)
out
mov
stc
lock
mov
or
pop
ret
sbb
jle
sti
out
jle
jb
inc
cmp
pop
dec
call
loop
(bad)
jb
cmc
aas
stos
inc
into
inc
mov
lods
(bad)
call
stos
mov
pop
test
and
les
mov
in
xor
ret
mov
cmc
je
push
lea
aaa
clc
inc
mov
ds
pushf
push
inc
xor
lods
xlat
rol
aam
and
aam
adc
xchg
push
(bad)
mov
sbb
or
fcmovnu
mov
(bad)
cwde
adc
adc
enter
or
push
out
mov
rcl
pop
imul
add
add
or
adc
sbb
retf
cmp
mov
xor
psadbw
adc
aas
sub
jne
mov
jmp
push
addr16
stos
icebp
push
dec
cmp
dec
push
xchg
add
fucomi
or
mov
lods
add
mov
xchg
cmp
mov
or
iret
lods
pop
dec
loop
and
pop
inc
push
gs
mov
rcl
mov
test
sbb
cmp
jne
add
inc
mov
cmps
jge
jge
mov
push
ss
(bad)
jns
fld
fstp
fdivrp
xchg
adc
mov
add
inc
add
push
imul
inc
fistp
pop
fsub
sbb
in
or
pop
pop
loope
push
dec
add
mov
mov
jge
stos
adc
aaa
jns
out
or
into
sbb
nop
outs
retf
lock
fwait
push
out
sub
fucomp
dec
push
push
pop
adc
fistp
outs
xor
sub
inc
aaa
push
push
lock
dec
pop
outs
or
inc
shl
cmp
jmp
add
sub
jmp
or
int
inc
sbb
jmp
leave
add
stc
mov
push
mov
jp
js
jno
push
mov
fild
sbb
adc
mov
popa
add
xor
out
loopne
sbb
push
ja
jae
stc
add
jne
pop
adc
dec
push
cmp
or
dec
add
cwde
rcr
mov
lahf
in
mov
mov
jecxz
or
inc
mov
sbb
(bad)
jmp
xchg
add
push
call
(bad)
rcl
fwait
or
das
adc
xchg
mov
test
push
outs
enter
jg
or
aaa
sub
iret
scas
pop
pop
enter
aas
or
jmp
push
inc
imul
inc
data16
or
dec
je
outs
push
sbb
ss
pop
addr16
adc
dec
outs
inc
ins
outs
sbb
scas
dec
add
pop
push
dec
outs
ins
jns
inc
ins
popa
aam
enter
in
(bad)
shr
and
ss
push
mov
test
je
ins
or
dec
(bad)
cmps
or
dec
imul
in
mov
nop
cmp
push
or
scas
xchg
pop
add
or
out
fcom
je
add
nop
ins
add
dec
mov
or
dec
gs
xor
fdiv
jae
movs
cmps
outs
xchg
shr
jns
pop
mov
jb
jns
jbe
cmp
push
sub
rol
add
or
xchg
sbb
fisub
ins
xchg
mov
pop
dec
or
test
inc
sub
in
in
inc
or
or
mov
push
mov
push
not
push
or
outs
mov
scas
sbb
jo
ds
or
scas
clc
clc
and
or
inc
dec
mov
das
push
imul
cmp
sub
scas
test
aad
ror
inc
and
inc
sbb
adc
call
add
fcmovb
cwde
and
mov
pusha
mov
lods
inc
cs
into
dec
imul
mov
cmovb
je
adc
loopne
jno
ds
inc
jo
movs
fwait
imul
mov
mov
outs
ins
jo
loope
ins
push
mov
xchg
cld
push
xchg
lds
sub
outs
mov
nop
adc
adc
adc
cs
shr
shr
xor
xor
xor
pop
and
loop
push
add
in
in
mov
push
repnz
cmp
dec
mov
xor
scas
aas
adc
ja
cmp
add
and
outs
cmps
xchg
mov
movs
push
mov
add
sahf
mov
sbb
sub
push
xor
push
add
(bad)
(bad)
call
push
add
popf
cmp
mov
inc
or
aam
xor
xchg
pusha
or
add
(bad)
pop
int3
int3
jmp
adc
dec
out
pop
repnz
sbb
dec
ret
repnz
push
les
loopne
dec
movs
fucomip
cmp
pushf
sub
pop
jl
inc
cmps
adc
adc
adc
pop
xchg
out
xor
jle
xchg
nop
hlt
sub
cmovns
(bad)
(bad)
mov
popa
jo
lds
xor
pushf
jae
push
rcl
sahf
cmps
add
scas
cmp
sbb
imul
call
push
xlat
push
push
adc
push
push
dec
mov
xlat
fld
ror
fs
pop
aas
inc
lahf
call
inc
lahf
lock
inc
out
inc
dec
dec
out
ds
jne
dec
xchg
dec
push
enter
jbe
stc
sahf
out
jge
movs
ds
addr16
push
jo
mov
rol
add
sahf
push
mov
cmp
setle
and
dec
mov
aaa
mov
push
and
mov
sbb
in
push
cmp
or
(bad)
sub
or
bound
xchg
nop
adc
xchg
pop
sub
cmps
popf
cmp
ins
jo
dec
pop
mov
dec
inc
push
sbb
push
enter
out
push
in
jbe
dec
pop
xchg
dec
push
aam
dec
loope
in
pop
ror
jle
dec
sar
pop
pop
outs
js
jo
sar
fiadd
lahf
pop
xchg
sbb
push
popf
call
pop
out
fcom
mov
mov
imul
cs
jl
pop
sbb
mov
loop
push
(bad)
sub
mov
or
jo
pop
jmp
repz
push
jo
and
xor
mov
icebp
or
cmp
out
shl
and
and
pop
inc
in
mov
or
sbb
out
pinsrw
ins
pop
inc
jb
and
movs
pop
adc
fwait
not
adc
sbb
rcr
ins
pop
mul
inc
cwde
pop
xchg
jl
jae
repz
adc
add
ds
test
inc
out
fild
test
dec
jp
cmps
in
or
enter
or
adc
enter
sbb
sbb
and
xchg
shl
mov
add
xchg
inc
xchg
in
in
(bad)
and
repz
enter
cmp
repz
addr16
xchg
or
test
lahf
lods
sbb
or
pop
mov
imul
adc
push
pushf
sbb
sbb
mov
or
sbb
stc
ficom
dec
mov
out
sub
adc
push
jge
cwde
movs
and
icebp
inc
mov
aas
sbb
mov
mov
and
add
stos
in
push
mov
rol
mov
pop
pop
push
lahf
push
jnp
sar
sbb
mov
es
dec
mov
inc
pusha
push
xchg
arpl
out
ds
test
jae
push
jo
int
ret
popa
call
and
inc
loope
loop
jo
xor
xchg
sbb
xchg
xor
mov
jg
aas
pop
call
rcl
stos
mov
ror
mov
inc
fmul
cmps
push
inc
fsubr
add
inc
sub
inc
xor
aam
cmp
aam
ror
fild
jmp
cmp
add
or
loop
enter
sbb
inc
(bad)
int
dec
add
push
push
add
movs
jns
aas
es
sub
sbb
ds
push
ja
jo
scas
jns
cmp
(bad)
push
pusha
xor
xchg
or
mov
das
xchg
xchg
jbe
movs
push
pushf
xchg
jbe
mov
push
lods
xchg
aam
(bad)
mov
jl
sti
adc
cld
(bad)
sti
mov
jmp
cli
(bad)
stc
(bad)
clc
push
push
push
push
push
push
ficom
(bad)
icebp
jmp
jns
out
ins
mov
out
cmp
dec
push
fs
je
pop
push
sub
or
ret
pop
pop
and
mov
mov
(bad)
cmc
cwde
ins
mov
cmp
imul
pop
add
repnz
cmp
repz
scas
xchg
adc
xchg
mov
aam
jl
out
cwde
or
pop
xchg
in
mov
push
adc
imul
imul
and
xchg
pop
out
dec
in
in
push
push
mov
dec
cs
lock
out
ja
dec
ss
mov
call
add
out
cmp
add
call
pop
push
xor
jnp
(bad)
pop
lds
fild
and
int
loop
push
dec
fs
add
jb
inc
xchg
add
sub
push
push
push
xlat
push
dec
sbb
dec
fld
push
popf
or
mov
movs
fsub
jmp
jne
add
je
pop
or
and
adc
daa
and
fsub
lods
std
push
sub
add
jb
jne
(bad)
js
jns
cmp
js
add
sub
xor
mov
inc
pop
mov
add
xor
push
mov
out
data16
xlat
bound
mov
sar
inc
ret
dec
inc
popf
and
jmp
add
push
retf
mov
xchg
pop
or
or
adc
rol
adc
add
je
sub
test
fcomp
and
ss
jmp
sbb
adc
out
in
dec
(bad)
add
push
fbstp
add
(bad)
jmp
stos
scas
in
add
push
cmp
inc
push
jbe
ja
add
pop
push
or
mov
(bad)
stc
pop
aaa
xor
add
ret
std
scas
ffree
or
aam
add
imul
push
cld
adc
add
add
clc
mov
jge
and
inc
dec
push
sub
pop
rcl
and
pop
sbb
pop
pop
sub
pop
movs
add
jb
or
jmp
or
(bad)
(bad)
sti
scas
add
in
add
xchg
(bad)
in
inc
jecxz
and
push
mov
dec
sub
add
xor
jo
xor
in
inc
jne
lea
push
mov
lahf
push
inc
mov
sbb
pusha
loope
icebp
bound
adc
mov
outs
setge
aas
js
pop
cmp
inc
ds
cmp
pop
mov
fcom
sbb
inc
cmp
sbb
adc
div
or
and
popf
(bad)
sbb
add
adc
add
or
dec
imul
and
sub
xchg
inc
and
push
mov
xor
adc
imul
pop
sbb
aad
pop
mov
js
inc
adc
dec
ror
mov
clc
push
(bad)
call
or
ds
cmp
and
adc
(bad)
mov
ret
mov
xor
iret
push
lea
dec
or
popf
call
test
jl
inc
xor
out
(bad)
jmp
jne
(bad)
mov
push
mov
xchg
xchg
and
lds
add
and
inc
sbb
lods
test
add
adc
inc
rcr
nop
aaa
nop
imul
xchg
mov
dec
cmp
dec
mov
fwait
add
xchg
inc
mov
inc
dec
mov
(bad)
cdq
cmps
dec
imul
test
push
pop
mov
dec
setg
inc
hlt
jb
ds
aam
ins
sub
ror
jns
or
call
and
or
cmc
jl
pop
mov
int3
inc
inc
div
push
sbb
and
inc
pop
mov
and
sahf
push
jl
inc
push
call
or
push
in
mov
cmp
inc
pop
push
loopne
sub
imul
mov
es
cmp
push
fidiv
xor
cmps
(bad)
jecxz
dec
dec
jne
ja
rcr
fild
jle
add
test
mov
iret
sbb
int
sbb
out
test
adc
xor
es
into
shl
jge
and
int
shr
mov
or
ret
fidiv
mov
les
je
out
mov
repz
xchg
mov
sub
mov
hlt
xchg
sub
jge
push
pushf
or
cli
enter
ss
cmp
push
sub
pop
outs
sbb
or
shl
jae
mov
inc
hlt
adc
pop
mov
xor
mov
cmp
jb
add
jge
je
xchg
sub
dec
or
rcr
jae
fmul
hlt
sti
pop
xor
imul
pop
or
and
dec
xchg
and
scas
xor
jo
sbb
sbb
call
jb
das
sub
add
add
pop
push
fiadd
enter
(bad)
daa
add
mov
movs
sub
pop
and
aam
or
add
jp
emms
stos
sub
mov
enter
sbb
neg
jbe
jo
push
push
pop
mov
jno
popf
cld
push
enter
xchg
sbb
in
sbb
push
fimul
out
loope
push
repnz
dec
cmp
push
je
mov
ins
cmp
and
nop
sub
lahf
(bad)
sub
(bad)
sub
xchg
sbb
and
cmp
sbb
sbb
sbb
je
mov
out
mov
into
in
mov
inc
lock
scas
aad
sub
stos
in
cmp
bound
ffreep
add
push
ss
addr16
adc
cmovs
or
or
xor
js
push
mov
ret
fsubr
cmp
xor
pop
jbe
add
xchg
test
outs
add
mov
(bad)
sub
sbb
xchg
outs
leave
add
pop
popa
test
mov
or
repz
cmp
arpl
or
sti
js
ins
mov
outs
div
ror
push
in
lea
add
cwde
inc
in
aaa
outs
pop
push
push
push
dec
cld
mov
jmp
ret
cmp
rol
sub
mov
clc
ins
retf
sbb
loopne
add
dec
mov
jp
add
or
sub
push
mov
xlat
pop
pusha
fcomp
xlat
add
daa
mov
loopne
in
(bad)
mov
in
add
ror
loope
es
dec
and
in
adc
arpl
pop
ds
fdivr
and
addr16
add
pushf
aaa
unpckhps
mov
and
push
jecxz
daa
or
mov
push
add
sbb
imul
les
dec
jo
in
xchg
push
fnstenv
inc
xor
cwde
or
(bad)
iret
cmp
aam
adc
or
ret
cmp
xchg
add
sbb
xchg
jl
xor
xlat
arpl
jmp
mov
fcmovb
ins
mov
out
call
loop
add
xor
mov
mov
movs
push
or
xchg
jmp
(bad)
mov
xchg
cld
jl
mov
rcr
push
xor
clc
test
xor
cmp
daa
sbb
jo
je
mov
mov
or
(bad)
pop
ds
bound
cld
pop
jbe
push
or
or
cmp
ret
addr16
(bad)
or
dec
fst
ja
xchg
xor
sbb
and
and
adc
and
cmp
mov
and
xchg
push
call
sbb
repz
std
sbb
cmps
mov
cdq
mov
ror
adc
cli
das
pop
cmp
sbb
sub
fisttp
idiv
add
xor
push
inc
push
or
adc
emms
mov
aam
jae
loop
inc
jle
scas
test
inc
or
leave
mov
out
sbb
in
sbb
add
inc
adc
mov
push
sbb
adc
iret
cli
js
shr
push
inc
aad
dec
or
(bad)
sbb
shl
loop
adc
or
mov
mov
icebp
push
inc
or
push
inc
pop
sar
lock
mov
stos
or
or
enter
aaa
jmp
or
xor
xchg
mov
push
repnz
cmps
into
test
hlt
jg
ret
(bad)
(bad)
dec
inc
inc
outs
movs
add
xor
sbb
push
sbb
fmul
or
mov
adc
retf
(bad)
(bad)
adc
push
pop
adc
xor
jmp
scas
sub
rcl
scas
sub
add
pop
dec
clc
inc
cmp
jge
add
adc
jne
sbb
scas
push
rcl
std
jle
and
jae
or
or
and
mov
inc
add
outs
lods
jmp
test
mov
inc
fmulp
shl
call
mov
sahf
ins
dec
pop
sub
mov
xor
call
test
push
scas
dec
(bad)
shl
inc
cdq
jmp
inc
pop
pop
adc
loopne
daa
push
xchg
in
mov
sbb
mov
mov
inc
cmp
dec
and
dec
jno
cmp
(bad)
sub
jg
dec
hlt
dec
dec
inc
cmp
ss
lea
or
retf
sub
or
inc
and
or
cmps
mov
call
add
adc
push
out
mov
fnsave
push
inc
or
add
mov
das
jns
ror
and
fld
jne
sub
ins
cmps
loop
jne
add
cmp
or
and
inc
or
inc
test
test
mov
outs
pop
xchg
push
or
mov
rol
add
add
inc
enter
les
rcr
mov
xchg
xchg
in
fistp
inc
inc
xor
mov
add
pop
sar
mov
shl
jmp
dec
sbb
call
out
je
sbb
push
jae
mov
sbb
add
es
push
dec
rcr
inc
xor
pop
mov
fcmovnbe
adc
fsub
push
pop
outs
and
pop
jecxz
add
cmp
jae
dec
or
je
add
add
btr
push
add
mov
and
push
push
inc
adc
arpl
mov
dec
das
loopne
inc
add
dec
adc
mov
dec
test
in
xor
pop
std
mov
ja
and
bt
jb
ja
push
mov
xor
cs
pop
cmps
mov
adc
jmp
inc
cmp
jne
inc
dec
dec
sbb
and
mov
nop
das
push
aaa
xor
ins
add
and
xor
ret
rol
or
jle
cmp
inc
aaa
in
adc
inc
push
cdq
cs
and
push
sbb
inc
in
lock
add
enter
cmp
scas
mov
popa
push
retf
xor
mov
les
dec
add
ins
add
pusha
(bad)
not
cli
int
sub
or
sbb
sub
popa
jg
ret
mov
and
dec
xor
sbb
or
lock
mov
js
xor
push
imul
push
pusha
test
inc
es
pop
pop
add
adc
ss
dec
push
mov
fld
pop
lods
or
or
dec
push
dec
and
add
imul
je
mov
or
ins
pusha
adc
stos
sbb
cmp
sbb
aam
mov
mov
inc
pop
cmps
add
fistp
mov
inc
jle
push
dec
and
ds
retf
or
ror
movs
cmps
jns
pop
jnp
std
mov
fsubr
and
xor
cmp
repnz
sbb
popa
adc
int
mov
jmp
xor
outs
sbb
cmp
adc
sub
dec
and
and
xor
inc
jbe
test
cs
icebp
inc
cwde
arpl
jb
(bad)
push
(bad)
sahf
test
call
in
je
and
sbb
enter
cmp
sub
mov
lea
jp
lods
int
aas
or
in
or
jno
sub
sbb
fdivr
fucom
add
mov
mov
push
mov
imul
pop
push
push
add
or
pop
js
pop
jp
mov
in
xchg
sub
movs
push
mov
mov
xor
jo
add
or
sbb
add
xlat
daa
(bad)
dec
clc
rol
inc
repz
push
xchg
push
mov
and
mov
inc
add
xchg
or
inc
lea
sbb
call
push
mov
pop
(bad)
adc
fisubr
mov
aam
dec
and
dec
shl
jae
in
dec
leave
and
inc
jo
add
(bad)
xor
loop
fdivr
xor
cld
lock
pop
pop
out
cmc
xchg
in
push
in
sbb
pop
jne
inc
shl
sbb
or
xchg
jb
pusha
inc
inc
in
mov
mov
out
xor
cmps
sbb
and
scas
sbb
(bad)
iret
lds
ins
inc
test
dec
lock
loopne
push
ss
ins
add
push
dec
outs
adc
mov
sub
loope
aad
(bad)
sbb
enter
clc
and
mov
push
fild
lock
push
imul
sbb
xchg
mov
inc
std
push
xchg
cwde
sbb
or
mov
inc
inc
nop
push
mov
or
and
push
inc
ret
add
sub
fild
pop
test
out
inc
mov
add
xor
lea
sbb
cmp
(bad)
adc
(bad)
cdq
sbb
retf
push
outs
and
in
fwait
pop
icebp
push
xchg
dec
call
mov
mov
inc
jnp
xor
cmp
repnz
pop
inc
fld
add
mov
mov
xchg
cld
or
call
jne
lea
clc
hlt
call
sbb
xor
or
and
fcom
add
inc
cmp
xlat
adc
pop
(bad)
call
and
sbb
fisub
and
stos
cmp
or
xchg
shr
stos
push
push
cmp
dec
pushf
lods
je
cmps
mov
adc
mov
movhps
clc
and
xor
test
dec
pushf
push
(bad)
mov
movs
loope
push
add
cmp
into
inc
nop
(bad)
lods
jecxz
data16
pop
dec
xchg
imul
sub
cmp
or
aaa
mov
pop
mov
rcl
or
push
or
les
outs
loopne
mov
retf
sbb
or
pop
hlt
xor
xchg
xlat
jl
das
mov
add
cmps
out
add
mov
clc
add
or
clc
add
fimul
sub
lock
test
in
sub
lea
push
push
(bad)
jmp
sti
xchg
or
out
sub
cmova
movs
pop
and
pop
clc
push
cmp
mov
aad
xlat
and
imul
dec
push
leave
adc
fs
mov
fcom
cdq
cli
push
pop
sub
or
cs
loope
adc
xor
mov
and
jmp
sub
and
daa
mov
bound
jle
pop
push
jo
add
aad
push
ins
mov
sub
dec
int
scas
mov
das
push
adc
pop
dec
cmp
xlat
gs
sub
gs
mov
outs
and
dec
sti
add
lock
je
shr
xor
adc
pop
js
repnz
xchg
mov
sbb
daa
sti
add
pop
cmp
mov
adc
dec
popa
(bad)
std
mov
sar
dec
(bad)
mov
ja
dec
inc
jmp
fcom
mov
or
add
pop
ins
je
or
retf
sub
mov
pop
xor
cmp
(bad)
add
int
dec
(bad)
push
dec
pop
ret
dec
leave
xor
mov
gs
data16
cmp
sbb
les
jno
xchg
pop
and
dec
dec
cmp
adc
inc
repz
iret
test
cmp
test
cmp
jne
test
sub
dec
or
stos
push
mov
and
movaps
aad
sub
sub
sub
pop
mov
adc
push
mov
mov
pop
push
adc
cmp
mov
pop
clc
lock
cs
test
adc
add
mov
inc
xchg
lea
pusha
add
scas
and
push
std
test
movs
dec
xor
addr16
cmpxchg
pop
mov
pop
data16
lods
sbb
enter
rcr
ins
aaa
sub
ins
and
pop
and
lods
hlt
dec
adc
push
dec
gs
ret
push
and
sub
pop
adc
ds
and
add
cmp
shr
mov
les
sbb
or
ror
mov
push
(bad)
and
test
xchg
xchg
dec
push
or
iret
ror
mov
sub
jmp
dec
rcr
cmp
sbb
push
ret
add
push
(bad)
leave
adc
push
lock
ficom
cmp
push
jg
mov
(bad)
jmp
mov
aam
(bad)
aam
ret
out
add
sbb
add
or
add
mov
jbe
jge
shl
popa
dec
(bad)
mov
(bad)
(bad)
and
or
jnp
outs
adc
aas
pop
or
push
mov
xchg
xchg
aaa
pop
repnz
mov
(bad)
mov
sub
push
imul
scas
xor
mov
fs
xor
mov
mov
add
das
int
pop
add
push
jle
or
pop
sub
scas
add
pusha
(bad)
mov
jmp
(bad)
popa
mov
lea
push
bt
nop
and
inc
add
fidivr
xor
(bad)
jl
push
adc
mov
mov
dec
in
jl
adc
pop
loopne
js
add
inc
hlt
shr
ror
cmp
mov
ins
and
and
arpl
jl
fcomi
jg
and
add
cmp
jne
(bad)
(bad)
inc
jge
sbb
jle
and
ficomp
adc
hlt
jl
xor
xchg
pop
add
add
sbb
je
call
nop
add
sbb
add
loope
push
dec
and
addr16
clc
retf
mov
stos
enter
ins
adc
push
cmp
push
jge
inc
outs
shr
add
push
add
or
add
out
adc
dec
and
xchg
push
add
out
mov
adc
dec
inc
pop
adc
fiadd
sub
cmp
imul
ret
pop
iret
inc
xlat
jp
aaa
shl
ins
ret
jno
scas
fnsetpm(287
repz
sub
fwait
call
fidiv
mov
cmp
or
sub
cmp
xor
add
add
mov
pop
jb
sbb
pop
xor
leave
(bad)
in
pop
outs
inc
mov
shl
cmps
mov
mov
inc
dec
cmps
scas
fsub
push
sbb
mov
and
call
neg
pop
loopne
mov
xchg
cs
jp
xor
push
or
pusha
adc
pop
enter
cmp
into
jne
sbb
inc
int3
pop
dec
(bad)
xor
jle
cwde
mov
xor
push
out
and
pop
lahf
xchg
stos
and
clc
jecxz
loope
push
adc
mov
fisubr
(bad)
and
(bad)
rol
pop
adc
arpl
sub
mov
lods
push
pop
outs
inc
bnd
adc
add
loopne
loope
pcmpeqd
adc
call
int
mov
cmc
movs
inc
or
pusha
or
mov
adc
aas
cmp
lock
jbe
or
mul
adc
add
call
adc
xor
cmp
add
jbe
adc
in
in
jmp
and
cmc
jle
mov
stc
inc
or
dec
inc
cmp
mov
in
sub
push
mov
mov
arpl
xchg
vmovapd
and
dec
jno
inc
cmps
movs
jo
shl
add
sbb
pop
mov
push
nop
lock
nop
(bad)
dec
sbb
push
pop
clc
and
push
pop
aad
mov
bound
sbb
(bad)
outs
movs
cmp
mov
rcr
mov
inc
add
fwait
sbb
mov
out
shr
xor
inc
in
jmp
jg
dec
out
inc
dec
adc
or
cmps
lds
add
stc
inc
fcomp
xlat
in
nop
adc
retf
xor
pop
icebp
enter
xchg
add
cmp
mov
xchg
and
pushf
nop
icebp
inc
adc
cmps
cwde
aam
add
lods
pop
test
sub
jo
ss
ins
rol
std
adc
mov
in
shl
add
mov
pop
jmp
xchg
shl
enter
jge
enter
test
push
sbb
enter
sbb
or
inc
fsub
(bad)
mov
push
and
add
dec
push
and
sbb
jnp
jle
sub
pop
sub
adc
aaa
mov
pop
cmp
je
outs
jne
jp
nop
into
iret
jge
or
jae
push
add
mov
or
dec
or
adc
(bad)
add
add
sbb
stc
inc
pop
sub
lock
ret
dec
inc
add
pop
or
or
lods
mov
jne
icebp
mov
xchg
ficom
imul
mov
aam
ror
pusha
int
ss
adc
adc
xlat
and
cmps
std
cmp
lods
scas
movs
cmp
jge
data16
sbb
pop
or
dec
cmp
or
sbb
adc
sar
add
loopne
sub
cmp
sbb
pop
xchg
cmp
je
push
jne
stos
mov
push
lock
inc
loopne
mov
cmp
lods
add
xchg
lock
xor
pop
aam
or
or
shl
and
push
or
cmp
pop
or
or
clc
add
fs
jnp
jle
push
sub
adc
adc
shl
jmp
and
and
inc
cmps
push
mov
add
mov
cmp
adc
scas
ficom
sub
das
pop
or
jb
fsubr
push
or
mov
xor
fst
pop
les
sbb
bound
adc
xor
inc
adc
mov
sbb
aas
xor
adc
sub
rol
loopne
xchg
pop
jg
out
pop
mov
ror
inc
cmps
ror
pop
sub
adc
adc
mov
fidivr
sbb
mov
addr16
imul
mov
ja
jmp
add
push
adc
ret
std
adc
mov
js
ret
mov
inc
popa
cmp
daa
(bad)
sbb
xchg
lahf
add
(bad)
fsub
or
outs
jo
imul
gs
pop
das
xchg
mov
ins
pop
inc
hlt
ret
hlt
mov
sbb
inc
adc
rol
add
adc
xchg
enter
or
push
inc
pop
sbb
fisub
lods
int
lods
cs
fs
dec
dec
mov
int
test
mov
sbb
or
ret
inc
jecxz
mov
mov
retf
retf
or
jb
push
(bad)
nop
ja
pop
inc
rcl
pusha
out
lock
fadd
mov
push
fadd
add
or
push
ficomp
in
sub
push
(bad)
dec
sahf
inc
mov
repnz
neg
pop
inc
pop
fild
and
fisub
(bad)
jmp
pop
cdq
add
jmp
icebp
scas
inc
test
adc
ja
mov
push
test
pop
xchg
mul
sahf
fld
mov
mov
pop
scas
jmp
xor
jae
xchg
dec
dec
or
lahf
mov
rcr
cmp
inc
and
add
push
cmp
ja
mov
xor
xchg
mov
bound
fs
fs
pop
ror
jg
add
mov
pop
push
in
dec
in
fcom
pusha
ret
adc
imul
adc
mov
sub
push
sub
clc
in
inc
inc
push
dec
je
dec
dec
cmp
test
jmp
aaa
jb
icebp
pop
je
inc
cmp
jl
or
pusha
or
xor
aaa
and
pop
add
cmp
and
rcr
leave
loope
and
test
outs
inc
popa
and
sbb
push
pop
rcr
fstp
xchg
adc
sbb
inc
stc
add
popa
push
loopne
das
(bad)
(bad)
lods
add
fdivr
mov
sbb
and
fld
les
pop
mov
inc
jo
ret
mov
stos
fs
push
dec
je
inc
mov
cmp
adc
add
xchg
mov
retf
aad
cld
call
xchg
cmps
sub
aas
retf
cmps
mov
xchg
jl
dec
or
rep
push
(bad)
add
mov
push
xchg
rcr
cmp
lods
mov
lahf
or
data16
and
ret
test
add
ret
mov
das
fnsave
cmp
and
adc
jae
ret
mov
xchg
push
jo
das
ss
cmp
into
adc
push
inc
sub
mov
cmps
jecxz
push
test
jb
pusha
mov
adc
mov
std
ret
addr16
push
dec
inc
add
push
mov
adc
(bad)
push
fs
mov
add
push
aam
frstor
jo
je
hlt
aaa
test
loopne
pop
pop
or
add
cmps
adc
iret
inc
test
dec
adc
add
shr
add
retf
call
imul
and
push
arpl
jmp
push
xchg
inc
and
mov
xchg
sbb
imul
and
jnp
mov
xor
sbb
add
lods
outs
cmp
jb
(bad)
jl
jg
jb
sub
jne
cmp
or
jne
add
inc
push
repnz
out
loope
and
or
bswap
outs
and
xchg
data16
pop
(bad)
jp
inc
xor
mov
inc
fdecstp
pop
fstp
cmp
popa
sbb
add
dec
sbb
or
arpl
test
or
jo
push
dec
cwde
and
mov
jg
xchg
xor
leave
xor
(bad)
push
js
movs
inc
jmp
les
nop
out
cmp
enter
js
jo
outs
push
cwde
pushf
jo
test
and
adc
sub
daa
adc
sahf
mov
sub
xlat
neg
dec
jne
and
sbb
ja
das
hlt
js
cmp
mov
jmp
ficom
shr
mov
xchg
cmp
push
xchg
pop
sti
cmp
cmp
xor
loopne
cmc
adc
mov
cs
jae
mov
popa
mov
mov
sub
mov
sbb
lods
movs
mov
pop
rol
jle
push
cmp
pop
lahf
shl
jge
push
cdq
fs
scas
jecxz
push
mov
inc
fmulp
mov
dec
mov
jbe
ja
mov
pop
and
(bad)
fst
retf
int3
sub
or
fimul
retf
popf
add
cmp
pop
scas
lods
push
pusha
cmp
xchg
and
sub
adc
jmp
xor
cmp
or
ret
cmp
xor
pop
dec
cdq
dec
jle
in
adc
push
mov
or
push
outs
test
ins
imul
jne
or
jecxz
jmp
lods
mov
add
fdivr
cmp
shr
jns
cmp
je
xchg
imul
xor
push
or
jl
mov
mov
jp
hlt
icebp
xor
lahf
fadd
test
les
and
and
cmp
sbb
das
test
js
shl
cmp
inc
mov
in
or
lods
(bad)
pop
cmp
push
pop
add
push
cmps
mov
es
es
jnp
pop
add
jge
dec
pushf
cmp
inc
sbb
or
pushf
fs
xor
div
fucomi
shl
sub
int3
ret
cmp
das
mov
jne
leave
lock
cmps
add
ins
icebp
sbb
clc
pop
dec
pop
jmp
push
cs
sbb
pushf
pop
mov
test
pop
ins
gs
popf
xor
rcr
jae
sub
movs
sbb
push
int3
test
scas
xor
adc
cmp
shl
xor
mov
sub
push
int
rcl
clc
imul
lods
jmp
push
into
add
pop
iret
aaa
imul
dec
mov
add
add
repnz
jp
dec
sub
retf
loopne
(bad)
loope
jmp
dec
imul
mov
in
mov
push
and
in
sahf
ja
jmp
pop
jnp
sbb
pop
shr
mov
call
lds
in
xor
(bad)
retf
or
je
in
pusha
repz
or
jne
in
mov
inc
pop
arpl
jns
test
sub
adc
leave
add
fdiv
mov
adc
push
add
rcr
sub
inc
sub
dec
(bad)
stc
movs
daa
fadd
ss
lods
outs
cmp
add
push
aaa
and
adc
xor
in
jge
add
sbb
fdivr
dec
jge
cmp
xor
push
not
fmul
jmp
pop
xor
ss
dec
jle
scas
cmp
call
cdq
push
xchg
pop
push
mov
mov
jo
mov
pop
popf
jne
pop
inc
dec
sub
cmp
jnp
mov
mov
sbb
mov
sbb
add
adc
in
call
sbb
push
xor
fisttp
or
mov
stc
sti
xchg
sub
xor
in
adc
movs
mov
aaa
or
xor
xchg
mov
or
and
pop
int
rol
ins
push
pushf
fsub
out
mov
dec
add
in
sub
fcomp
shl
call
add
aad
or
dec
jle
inc
xor
addr16
cld
pusha
xor
push
test
jo
and
pop
xlat
adc
jmp
cmp
test
mov
arpl
jle
push
imul
call
push
cli
cmp
imul
jge
popa
sub
xor
(bad)
adc
pop
mov
add
cld
clc
cld
hlt
je
inc
nop
sub
cmp
add
add
jmp
aam
dec
js
mov
(bad)
adc
adc
ins
push
mov
ret
nop
xchg
iret
adc
(bad)
add
sbb
aas
add
sbb
add
lock
and
into
jae
or
fmul
pop
pop
retf
fild
cdq
fcom
add
daa
nop
and
fstp
fld
mov
mov
xchg
cmp
mov
add
pop
or
repz
jecxz
add
fsub
jno
movs
and
cmp
mov
into
inc
test
xor
rcr
dec
mov
test
mov
sub
enter
jb
das
sbb
jae
(bad)
enter
adc
mov
jne
or
das
iret
enter
mov
clc
adc
adc
cmps
mov
jmp
inc
lahf
dec
loopne
pop
movsx
xor
mov
leave
mov
sub
sbb
arpl
adc
sbb
sahf
ret
sqrtps
pop
xchg
ret
out
test
es
add
test
mov
mov
and
cmp
jne
mov
push
es
fld
push
mov
sbb
psraw
enter
mov
pop
xchg
pop
lea
outs
push
mov
dec
add
pop
hlt
pop
inc
add
sbb
arpl
test
loopne
mov
retf
call
and
mov
stos
mov
mov
mov
dec
stos
sbb
cmp
retf
jno
les
out
ror
test
stc
adc
lds
test
add
inc
xor
xchg
jno
sahf
mov
pop
or
into
or
jnp
test
or
add
jne
cmp
jne
xor
push
iret
mov
imul
std
out
hlt
jne
lods
(bad)
cld
hlt
xor
push
add
cmp
sbb
pop
pop
cmp
sar
shl
clc
or
mov
and
jnp
push
loop
inc
jmp
(bad)
or
iret
push
rcl
mov
scas
lock
popa
adc
pusha
mov
add
sbb
xor
sbb
adc
scas
push
pcmpgtb
dec
xor
(bad)
jo
out
js
push
fstp
dec
adc
icebp
pop
ja
retf
xlat
daa
add
add
frstor
xchg
cmp
popf
(bad)
call
adc
sbb
punpckhwd
add
je
pushf
fmul
pop
movs
mov
adc
mov
xor
xchg
ret
ret
jg
mov
idiv
lock
pop
jns
pop
mov
in
xor
push
mov
mov
mov
ja
xor
inc
mov
mov
add
and
or
or
out
and
aaa
add
adc
mov
bound
pop
mov
clc
out
in
leave
mov
sub
es
xchg
call
ret
mov
jb
xor
mov
call
add
sub
mov
(bad)
jnp
daa
lods
sub
mov
inc
stc
sub
out
mov
mov
test
(bad)
fcomp
repz
clc
pop
jp
jp
aaa
jns
sti
add
inc
daa
pop
push
push
dec
mov
idiv
add
inc
push
ret
jns
stos
xlat
dec
(bad)
enter
imul
enterw
movs
lea
pop
jo
aaa
cmps
in
sahf
xor
ret
cmp
js
add
mov
mov
push
repnz
fdiv
ja
cdq
movs
(bad)
arpl
sub
mov
in
cli
sub
add
xor
cmp
xchg
sbb
fisubr
xor
cs
enter
fcomp
in
rcr
dec
fs
or
fwait
(bad)
inc
cmp
hlt
jmp
loope
mov
mov
adc
or
test
call
aaa
sub
mov
push
fbld
pop
cmp
cli
sub
push
jae
adc
stos
or
sub
sbb
daa
test
pop
push
jp
bound
xlat
ret
pop
jmp
inc
or
mov
jge
mov
pop
push
cmp
out
imul
int3
mov
and
cmp
imul
pop
and
xor
rcr
fadd
fld
dec
pop
or
aaa
adc
repz
inc
lds
xchg
movs
xchg
mov
sub
jb
call
lods
add
jo
aad
jmp
mov
(bad)
ror
jne
mov
sbb
ficom
sub
sar
shl
mov
enter
fisttp
sbb
inc
jl
sbb
sbb
dec
add
je
mov
dec
xor
dec
nop
and
je
cmp
je
test
sbb
gs
imul
cmp
(bad)
sbb
sbb
lds
mov
inc
(bad)
dec
shl
jmp
xchg
arpl
sub
add
jbe
xor
jl
push
fst
or
aam
push
adc
into
mov
pop
xchg
dec
je
and
mov
or
shr
daa
test
mov
pop
test
clc
push
lods
pop
hlt
push
test
add
xchg
leave
iret
popa
and
push
push
adc
inc
hlt
pusha
and
push
rcl
push
inc
or
xor
cmp
pop
push
add
and
adc
das
sbb
mov
in
loopne
stos
ret
jmp
push
lock
movs
and
adc
inc
dec
and
test
inc
dec
mov
cmp
pop
dec
or
ret
daa
test
push
push
sub
sbb
mul
xor
mov
add
test
jo
(bad)
(bad)
not
je
push
adc
pop
push
and
cld
pop
idiv
xchg
mov
inc
fld
xchg
inc
fwait
adc
and
jb
push
repnz
imul
xor
add
push
jae
push
int3
xchg
adc
inc
out
fcmovnb
aas
pop
shl
add
pop
push
js
or
inc
aaa
je
add
push
mov
dec
cmp
ret
or
ins
mov
dec
pop
mov
xchg
push
push
mov
add
iret
add
xor
lock
push
inc
dec
push
imul
out
ret
cld
cmps
pop
test
add
push
add
iret
ins
inc
lahf
mov
nop
loope
scas
shl
(bad)
fmul
mov
or
pusha
repz
cmp
add
push
scas
inc
xor
push
mov
dec
dec
pop
or
fisubr
popf
dec
mov
rol
in
repz
inc
or
jns
leave
xor
push
inc
push
gs
jns
je
xchg
jmp
sbb
outs
ins
pop
pop
mov
and
add
xor
dec
ret
(bad)
mov
pop
jb
pop
xchg
jmp
das
(bad)
je
pop
push
adc
push
(bad)
mov
sbb
mov
xchg
or
sbb
or
push
sub
popa
mov
mov
or
cld
xor
ja
hlt
mov
mov
xchg
aam
je
call
in
ror
mov
add
fs
ret
jmp
je
sahf
sub
(bad)
cmps
test
and
add
jae
dec
movs
push
aad
jae
and
inc
(bad)
xor
scas
dec
es
inc
inc
push
dec
xor
aam
pop
or
fild
inc
push
call
cmp
jge
addr16
gs
push
ins
sahf
pusha
and
jg
xchg
add
mov
push
test
add
xlat
dec
aam
cs
dec
(bad)
clc
outs
mov
push
mov
mov
inc
inc
call
sbb
add
mov
add
jo
into
mov
lds
sbb
hlt
pop
movs
pop
cmps
sbb
in
xchg
inc
sbb
adc
jno
(bad)
enter
push
add
test
adc
mov
sub
cmp
adc
sbb
add
cs
cmp
pop
push
xor
sub
ret
fsub
js
adc
mov
(bad)
jns
add
popa
(bad)
jp
jmp
or
add
sub
call
inc
xchg
cli
inc
jmp
dec
inc
cld
enter
or
adc
inc
and
sbb
hlt
rol
out
mov
sbb
push
jo
into
leave
mov
mov
jp
xor
mov
lea
lock
xchg
adc
retf
mov
sbb
mov
push
pop
ret
ins
mov
dec
sub
xchg
retf
ja
cmp
out
cmp
pause
sub
mov
adc
das
mov
or
mov
sub
inc
(bad)
mov
xor
and
xlat
xchg
mov
push
sub
popf
int
cs
sub
push
jmp
out
push
stc
adc
push
jl
cmp
leave
stos
rcr
addr16
push
(bad)
in
ficom
xchg
(bad)
das
movs
hlt
loope
or
icebp
add
lss
jp
ror
mov
mov
push
mov
and
cld
popa
leave
xor
add
pop
mov
or
cmp
xchg
hlt
out
clc
in
rol
iret
pop
sbb
ins
mov
jle
(bad)
adc
dec
jmp
daa
pop
cli
add
inc
push
mov
pop
lea
dec
cli
test
leave
push
ret
lods
adc
mov
sar
sahf
mov
cmp
add
mov
mov
fidiv
dec
or
dec
clc
jnp
sbb
(bad)
aas
or
inc
or
inc
adc
dec
adc
adc
pushf
test
inc
jne
jnp
mov
and
ret
mov
pop
and
cmp
test
jg
sbb
cmp
mov
xor
ds
movs
sti
and
jl
adc
jg
mov
push
add
add
xor
fcom
mov
jl
push
das
fs
or
xchg
push
sub
mov
call
jo
xor
add
(bad)
xor
mov
or
aam
lea
dec
cld
and
jl
add
in
lea
fcomp
xor
push
lea
pusha
je
call
out
mov
or
sub
addr16
or
cmp
or
mov
inc
arpl
push
pop
ja
xchg
add
add
jp
lea
call
add
daa
sub
sbb
jl
xchg
mov
push
fld
in
xchg
jl
dec
xor
aaa
ret
fnstsw
cmp
ror
outs
pop
sub
cmps
ror
ins
pop
mov
ret
inc
lock
dec
sbb
test
xchg
dec
cmp
mov
popa
mov
and
inc
jp
mov
mov
mov
adc
loopne
mov
add
imul
(bad)
fs
loop
cmp
aad
and
inc
inc
cld
pop
mov
and
mov
fidivr
mov
inc
lahf
into
das
lods
scas
add
shl
push
inc
popf
movs
loopne
sub
or
test
in
mov
xor
lods
mov
mov
retf
aaa
adc
adc
lea
and
call
mov
and
adc
add
push
cmp
ret
pop
fs
int
xor
in
cmp
movs
aas
jnp
cmp
je
push
add
(bad)
retf
push
adc
push
retf
popf
cwde
fisttp
adc
push
sti
add
cld
rcr
adc
dec
push
add
add
popf
and
daa
sbb
mov
iret
shr
inc
sbb
sbb
dec
or
repz
rcl
lods
cmp
mov
in
jmp
pop
mov
rol
jmp
sub
mov
and
xchg
movs
inc
mov
xor
inc
xchg
(bad)
and
mov
and
movs
mov
jb
xchg
dec
sbb
sub
bound
add
mov
shl
(bad)
in
es
aam
add
mov
rcr
loopne
jno
popa
xchg
shl
(bad)
mov
adc
or
adc
in
pop
and
scas
adc
sub
dec
or
ror
inc
push
adc
dec
jl
add
jp
xchg
adc
xchg
adc
add
retw
stos
sbb
loopne
rcl
fld1
inc
aam
mov
and
mov
es
jp
dec
xlat
adc
ror
jl
add
sbb
adc
lods
and
push
fs
imul
mov
or
fisubr
setne
mov
in
cmps
(bad)
inc
jl
inc
(bad)
outs
add
jne
cs
push
pop
dec
gs
retf
cli
and
cmps
add
fild
xchg
xor
inc
xchg
fcomp
pop
inc
not
arpl
(bad)
mov
pop
pop
les
retf
fisttp
add
or
jne
inc
push
jbe
sti
dec
jne
cmp
pop
call
daa
call
movs
pop
out
dec
hlt
dec
mov
adc
adc
por
je
push
adc
or
sub
in
mov
ret
hlt
push
add
inc
pop
dec
movmskps
sbb
jg
or
call
in
sbb
adc
or
jne
in
inc
ror
and
fsubr
stc
ins
add
dec
push
or
mov
or
mov
or
push
iret
retf
or
ret
and
and
pop
stos
inc
in
repnz
cmpxchg
adc
je
pusha
add
dec
mov
or
cmps
mov
repnz
adc
leave
aas
les
loope
and
fs
sbb
mov
and
jge
xchg
outs
outs
or
(bad)
jg
push
dec
cmp
(bad)
xlat
dec
inc
ja
xor
jmp
pop
xlat
shl
hlt
clc
mov
mov
pop
call
and
lock
js
sbb
or
pop
cmp
and
rol
mov
or
xor
aas
lods
or
add
sub
adc
loope
rol
out
mov
jmp
gs
(bad)
gs
scas
fcom
pop
push
or
int3
jg
push
and
add
add
inc
and
xchg
mov
out
add
imul
xchg
jge
jne
es
rcl
adc
or
inc
and
and
call
mov
mov
scas
aas
or
ror
dec
cmps
adc
pop
nop
sbb
out
pop
inc
aam
pop
out
int3
jmp
push
(bad)
or
loope
test
jnp
or
jle
xchg
imul
shl
or
sti
or
sub
mov
fisttp
add
add
add
inc
add
test
(bad)
clc
adc
cmc
inc
inc
pop
iret
xlat
ins
jmp
call
nop
repnz
sbb
push
pop
out
inc
push
mov
(bad)
das
lahf
push
inc
adc
jns
and
or
ja
call
push
sub
push
inc
mov
xchg
imul
dec
dec
mov
into
cmp
test
add
or
inc
je
dec
push
outs
es
sbb
xlat
sub
test
mov
jl
out
mov
stc
rcr
sbb
movs
bound
mov
cwde
or
push
test
ins
push
push
xchg
xlat
es
mov
retf
cmp
jne
pop
fs
fist
and
cdq
shr
cdq
lea
push
(bad)
push
pop
add
mov
mov
push
jo
pop
aad
mov
sub
mov
int3
cs
inc
jle
inc
add
adc
add
and
daa
xor
jg
or
sbb
add
xor
dec
jge
inc
dec
adc
mov
adc
or
imul
test
in
test
sbb
xchg
cld
and
add
xor
ret
pop
adc
mov
fwait
jle
sti
add
mov
inc
inc
retf
sbb
bound
mov
push
imul
or
pop
add
xlat
pop
sti
pop
pushf
imul
pop
cli
lea
adc
loopne
shl
jp
movs
mov
stos
retf
(bad)
inc
push
pop
fs
iret
add
inc
cli
mov
aam
mov
mov
movs
mov
lea
retf
or
add
adc
sub
hlt
add
adc
(bad)
add
je
push
or
jne
inc
push
xchg
dec
(bad)
int
test
inc
mov
adc
lods
psadbw
mov
mov
cld
iret
jo
xor
jno
or
fwait
gs
inc
pusha
fs
scas
mov
mov
mov
push
in
js
jno
dec
sbb
adc
loopne
pop
or
inc
cld
ret
shr
pop
loopne
dec
fld
push
and
aad
and
and
adc
(bad)
push
repz
rcl
les
or
ja
sbb
popa
sub
loopne
cld
inc
dec
xor
push
sbb
loopne
xchg
dec
aaa
jo
call
sub
xor
rcl
out
dec
mov
and
adc
mov
sbb
push
or
mov
adc
pop
add
sbb
push
dec
daa
aam
sub
dec
mov
imul
mov
lahf
inc
sub
ror
or
je
dec
movs
sbb
and
sub
jns
leave
inc
pop
mov
rol
push
retf
sbb
sbb
clc
das
lea
lods
push
add
cmps
xchg
add
lahf
and
mov
push
jne
clc
scas
xor
mov
enter
add
adc
pop
mov
sub
aaa
mov
add
jl
mov
or
int3
mov
mov
add
add
mov
pop
call
lods
sub
das
push
(bad)
inc
pop
or
add
call
and
or
loope
out
sub
cld
pcmpeqb
xor
daa
mov
pop
jo
inc
push
or
add
sub
mov
mov
and
movs
nop
rol
inc
not
mov
pop
mov
aas
dec
imul
jmp
mov
jbe
pop
pop
inc
(bad)
cmc
add
lock
or
(bad)
push
push
out
jmp
inc
mov
adc
cmp
jge
sbb
adc
icebp
rcl
push
test
mov
mov
outs
cld
push
jo
sub
push
push
out
rsqrtps
xor
pop
movs
push
cs
sahf
inc
push
jge
retf
fwait
jo
and
or
pusha
arpl
mov
or
jle
mov
jmp
(bad)
sub
mov
or
mov
in
mov
push
movs
mov
lock
mov
sbb
ja
mov
add
fisubr
fsubr
aam
mov
push
mov
pop
pop
adc
daa
mov
pop
push
xchg
or
pushf
je
dec
mov
mov
mov
pushf
(bad)
jo
jb
pushf
pushf
pushf
jae
jne
pushf
pushf
pushf
pushf
ja
jns
pushf
pushf
pushf
pushf
jnp
jge
pushf
pushf
pushf
pushf
jg
popa
bound
gs
pushf
pushf
pushf
addr16
pushf
pushf
imul
pushf
pushf
pushf
outs
push
push
push
pushf
pushf
pushf
pushf
push
push
push
push
pushf
pushf
pushf
pushf
push
pop
pop
pop
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pop
inc
inc
inc
pushf
pushf
pushf
pushf
inc
inc
inc
inc
pushf
pushf
pushf
pushf
inc
dec
dec
dec
pushf
pushf
pushf
pushf
dec
dec
dec
dec
pushf
pushf
pushf
pushf
dec
xor
xor
or
lahf
sub
xchg
mov
push
clc
add
cmps
ins
outs
mov
add
int
mul
bndldx
in
bound
arpl
cmps
mov
mov
sub
mov
and
jg
add
push
inc
sbb
mov
mov
aaa
push
fstp
or
pop
xchg
mov
jmp
ds
inc
callw
data16
jb
jae
xchg
or
nop
je
add
clc
add
jae
je
dec
cmp
inc
nop
fist
jns
xor
sbb
push
data16
enter
(bad)
or
je
arpl
adc
add
jae
adc
gs
imul
cmc
inc
scas
mov
or
clc
iret
lahf
fiadd
es
outs
int
hlt
pop
jo
jge
push
push
inc
popa
jae
add
sbb
mov
add
inc
jl
xchg
dec
outs
jae
popf
add
into
or
or
int3
pop
cmps
(bad)
push
fwait
mov
push
push
push
fisub
jo
je
push
inc
jns
sbb
mov
shl
nop
and
out
ret
add
sbb
(bad)
(bad)
adc
xchg
aas
mov
loopne
imul
ja
test
sbb
aaa
inc
jb
fimul
mul
and
sbb
push
stos
push
sbb
dec
jl
jp
or
push
int3
mov
ins
retf
or
inc
inc
imul
pop
inc
outs
jb
jae
es
pop
outs
loopne
add
mov
fidiv
push
sbb
xor
enter
std
push
mov
sbb
pop
sub
shl
cmc
test
inc
xor
xor
loope
xchg
push
and
mov
cmps
inc
xchg
ins
imul
mov
rcl
pop
leave
and
rcr
and
xchg
test
inc
nop
adc
mov
cmps
mov
retf
pop
ja
xor
mov
jnp
push
loopne
mov
ret
dec
or
add
pop
adc
ret
stos
aas
inc
movs
(bad)
cmp
push
add
les
aas
push
mov
dec
gs
pusha
les
ret
movs
sbb
dec
enter
cmp
pop
jnp
sti
jmp
add
and
add
adc
cmp
push
imul
jb
sbb
stos
xchg
bound
dec
pop
cmp
not
leave
stos
sbb
push
add
repnz
ja
lahf
pop
sbb
lds
jle
dec
adc
les
ins
(bad)
bnd
imul
add
shr
xchg
add
hlt
rol
jnp
dec
cmp
pop
xchg
jo
js
add
push
lods
push
inc
je
data16
lods
lods
sbb
adc
mov
mov
lahf
pop
sbb
add
dec
ss
xchg
add
(bad)
push
in
xor
movs
pusha
enter
inc
dec
repnz
add
hlt
lods
jmp
or
daa
ds
test
pop
nop
into
xlat
test
and
popa
sbb
mov
sbb
push
movs
xchg
adc
push
int
add
or
and
pop
aas
mov
loopne
push
int3
push
or
pop
enter
xor
rcr
dec
lahf
mov
stos
cmp
inc
int
add
pop
pop
js
(bad)
push
mov
sti
arpl
xchg
ret
sbb
add
jns
shl
ret
jmp
inc
aam
test
retf
mov
es
push
pop
js
into
ror
(bad)
cs
fidiv
xchg
push
add
pop
sub
out
in
sub
cmp
lock
pop
and
in
jecxz
idiv
mov
pop
in
pop
movs
in
iret
in
in
push
jl
fcmovnu
jnp
outs
lods
inc
xor
pop
(bad)
or
mov
add
fadd
fld
adc
adc
pusha
scas
mov
mov
add
mov
xchg
gs
ins
popa
addr16
mov
mov
fsubp
inc
cmp
or
(bad)
fisub
(bad)
mov
mov
fadd
in
repnz
sub
je
mov
sbb
mov
cli
(bad)
ins
sti
mov
dec
or
inc
add
push
pop
inc
add
or
mov
inc
cwde
or
in
push
or
dec
shr
cmp
or
dec
push
mov
jle
push
mov
push
push
pop
xchg
addr16
sbb
mov
scas
pop
or
inc
or
sbb
pusha
cli
imul
push
or
hlt
mov
mov
xchg
adc
push
lock
xlat
and
inc
inc
imul
pop
or
ror
push
xlat
out
pop
mov
test
inc
pushf
push
mov
jae
xchg
xchg
cs
loopne
hlt
add
sbb
fld
sbb
push
cmp
add
push
into
push
mov
inc
push
push
scas
push
mov
loope
add
dec
adc
popa
outs
(bad)
inc
les
ret
rol
xor
inc
dec
loope
pushf
shl
mov
lds
inc
or
dec
inc
xor
pop
push
pop
inc
add
pop
and
mov
(bad)
push
movzx
and
ins
mov
pop
or
loop
mov
add
and
dec
jno
and
pop
or
push
in
jne
(bad)
or
test
imul
inc
cmp
xor
rcl
or
test
jnp
pushf
adc
adc
mov
xchg
sub
pop
dec
test
or
dec
jns
cwde
or
mov
loopne
jo
and
(bad)
and
movs
ss
add
xchg
mov
add
adc
pop
cmovno
xchg
test
and
jne
dec
or
rol
jbe
pop
inc
pop
call
mov
xchg
sbb
mov
jmp
sbb
xor
lods
fistp
adc
aaa
in
pop
or
or
or
je
js
leave
adc
and
mov
sbb
inc
dec
ins
add
push
icebp
xor
inc
push
jle
leave
xor
call
dec
mov
inc
cmps
int
inc
neg
(bad)
mov
inc
add
or
mov
or
adc
or
sbb
mov
dec
loopne
into
rol
mov
in
test
lock
mov
push
repnz
pop
out
mov
inc
jg
mov
xor
mov
outs
int3
jg
mov
jl
inc
fsub
mov
cld
js
jb
ficom
cmps
or
call
or
sar
arpl
shl
popa
jb
outs
outs
inc
inc
cs
rol
pop
dec
ins
imul
inc
add
jb
ins
xor
mov
inc
push
gs
ins
pop
ss
push
stc
pop
push
imul
pusha
add
imul
cld
pop
gs
ins
outs
ja
jne
or
pop
repnz
inc
jne
push
jno
popa
repnz
pop
pop
or
rol
add
push
imul
and
inc
dec
data16
add
add
pusha
pop
fdiv
jmp
xor
cmovae
mov
inc
pop
jo
push
pop
imul
or
mov
push
addr16
adc
jb
das
inc
je
hlt
(bad)
fisubr
push
xchg
dec
or
mov
mov
adc
or
pusha
sub
sub
jg
gs
pop
pop
mov
or
fdiv
sti
daa
pop
xchg
test
imul
sbb
xor
nop
cmp
inc
pop
or
movs
dec
ror
and
and
mov
adc
repz
xor
adc
(bad)
pop
or
rcl
push
xchg
push
pop
outs
jne
pop
or
push
mov
ss
or
lahf
dec
in
xor
push
cld
cmp
add
imul
sbb
sub
cmp
pusha
jmp
or
movs
das
or
mov
sahf
jge
mov
xor
ret
push
mov
push
js
adc
adc
cmp
xor
push
adc
popa
add
xor
lods
pop
test
dec
arpl
xor
inc
push
add
inc
inc
inc
push
dec
push
xor
not
dec
inc
dec
dec
arpl
retf
dec
inc
inc
push
adc
inc
push
dec
dec
push
sbb
sar
cvtdq2ps
or
popa
out
inc
inc
xor
es
xor
adc
inc
dec
inc
and
enter
inc
xor
inc
dec
inc
repnz
mov
push
push
dec
dec
push
dec
dec
mov
(bad)
mov
push
(bad)
das
sbb
mov
dec
ds
inc
dec
push
mov
dec
inc
dec
rcl
fadd
pop
aam
out
adc
push
push
push
dec
push
inc
scas
pop
(bad)
pop
repnz
inc
dec
push
mov
adc
inc
pop
adc
inc
inc
(bad)
ins
lock
lock
push
or
les
jl
enter
add
mov
add
dec
or
sbb
add
add
and
enter
or
pop
mov
lea
sbb
push
pop
sar
inc
or
pop
sbb
dec
sbb
mov
push
pusha
retf
inc
or
xchg
into
or
add
add
mov
dec
pusha
test
mov
shl
mov
xor
inc
or
sbb
pusha
lds
push
test
push
std
xchg
ja
stos
in
movs
add
daa
pushf
dec
and
inc
std
test
push
pop
add
icebp
in
add
push
stos
add
mov
fwait
ret
das
loop
mov
and
sbb
sub
jne
add
mov
sbb
jmp
pop
mov
popf
adc
cmp
scas
sub
xchg
adc
cmp
fcom
in
jo
cli
das
cwde
add
and
in
movs
jne
retf
jae
push
jb
sub
pop
popa
data16
push
cmp
add
retf
cmp
into
shl
retf
sbb
jp
adc
or
int
jbe
out
cmc
shr
popa
inc
dec
out
test
xchg
mov
je
les
enter
mov
sbb
mov
fsubrp
pop
adc
in
mov
sbb
iret
(bad)
mov
adc
lea
sbb
mov
pop
and
cmp
mov
dec
nop
cmp
jo
and
mov
mov
inc
fiadd
push
aam
mov
fld
jecxz
push
outs
out
pop
sub
jmp
inc
fild
or
jmp
popf
xor
je
popa
inc
push
(bad)
rol
or
cld
sbb
and
push
out
iret
and
mov
sub
dec
adc
mov
repz
cmp
push
xchg
aam
movs
mov
ins
sbb
scas
sub
sub
ins
loopne
push
mov
nop
push
ins
and
hlt
pop
sbb
sbb
push
(bad)
push
call
pop
arpl
mov
(bad)
mov
adc
and
sub
inc
push
mov
(bad)
cmp
dec
xor
lea
pop
xor
push
pop
aaa
fcomi
das
fdivp
ficom
jp
mov
sbb
jo
mov
cmp
jl
cli
or
loope
sbb
outs
inc
sbb
adc
div
sti
xchg
pop
add
loope
(bad)
pop
sbb
push
mov
adc
add
pusha
add
adc
stos
add
inc
cs
nop
inc
cs
ret
fmul
mov
(bad)
int
add
in
ret
movs
add
add
shl
(bad)
jns
adc
(bad)
fsub
and
lock
mov
mov
fmul
jo
inc
fucomip
push
and
shl
fistp
(bad)
jp
cmp
mov
sbb
mov
inc
mov
sub
push
dec
and
or
movs
xchg
cmp
and
fcomp
enter
cmp
leave
enter
sbb
pop
shl
mov
or
mov
xchg
jl
sbb
sub
rcr
xchg
sub
cwde
loopne
sar
sbb
mov
js
pushf
(bad)
push
nop
or
jg
loopne
xchg
mov
scas
(bad)
movs
mov
push
nop
cmp
pusha
js
aas
adc
add
sbb
fsubr
lock
mov
mov
mov
int3
pop
inc
cmp
mov
or
jne
inc
ret
push
sbb
add
int3
xlat
xor
or
inc
push
dec
enter
dec
fistp
adc
nop
ds
and
das
cmp
or
data16
test
add
or
and
add
push
xor
call
jae
gs
lock
adc
mov
xor
inc
dec
aas
adc
and
or
mov
(bad)
popa
les
loop
pop
dec
add
push
sti
ja
test
test
loop
jle
mov
xor
inc
sbb
in
sbb
dec
in
aam
jl
nop
pushf
mov
js
pop
leave
mov
fs
sub
outs
mov
or
enter
aad
adc
inc
rcl
xchg
call
mov
pop
loopne
cmp
(bad)
pop
mov
sbb
mov
mov
push
and
push
or
push
add
or
pop
or
imul
push
push
or
xchg
push
sub
push
push
inc
push
scas
daa
push
mov
or
sbb
mov
or
or
in
sub
mov
cmc
sbb
ja
inc
inc
hlt
xor
ds
sar
test
pushf
xchg
and
pusha
and
pop
sbb
add
dec
inc
mov
pop
sbb
repz
or
popa
mov
rcr
repnz
jl
push
in
fadd
cdq
or
in
ficomp
leave
in
stc
jge
xchg
pushf
push
ins
push
or
xor
or
sbb
lea
imul
imul
cmps
add
nop
es
pop
or
iret
mov
dec
or
pusha
jo
and
sub
add
or
sti
or
popf
xor
xor
xchg
movs
sub
aaa
xchg
loop
cmp
daa
sbb
xor
push
clc
pusha
arpl
jle
pop
push
test
push
or
imul
adc
push
or
push
mov
or
lock
pop
adc
(bad)
push
or
push
jl
sbb
nop
lds
pop
lds
xor
pop
or
and
mov
mov
aam
inc
inc
cmp
fs
push
lods
adc
inc
or
sub
xchg
pop
cmp
or
push
sbb
inc
jae
(bad)
(bad)
sti
sbb
mov
and
mov
cmp
je
mov
cmp
pushf
pop
aad
mov
jne
add
mov
out
push
or
es
cmp
mov
and
and
or
inc
mov
add
lea
jg
imul
mov
not
and
js
lock
mov
je
xor
and
xor
push
xchg
sahf
iret
inc
pop
mov
adc
mov
xor
xchg
sbb
add
xor
and
push
xor
je
sub
xor
push
push
scas
nop
push
mov
adc
sbb
mov
cmp
push
sbb
and
sbb
ins
inc
movs
and
add
pop
movsx
mov
std
retf
retf
mov
add
xchg
or
sti
mov
pushf
and
pop
inc
mov
lods
pop
xor
mov
movq
rol
nop
mov
repnz
popf
or
sub
adc
rol
push
push
adc
and
dec
pop
push
and
sub
dec
(bad)
pop
pop
out
das
lea
mov
cmps
jne
popf
and
pop
ret
rol
sti
nop
sub
xor
push
xchg
int3
or
jge
fnstenv
push
xchg
call
jle
pop
ror
push
push
cmp
sub
test
nop
add
hlt
sub
sbb
test
sti
cmc
repnz
mov
jo
xchg
test
and
fsubr
movs
push
je
sub
xchg
cmps
pop
hlt
sub
fcomp
in
sahf
mov
lock
jle
das
data16
push
out
pop
push
mov
or
mov
arpl
adc
rol
ins
cmp
or
not
xchg
aad
sbb
cmp
or
mov
in
loopne
jg
loop
dec
div
shl
and
iret
pop
sar
imul
push
xchg
jbe
rol
pop
pop
and
cmp
mov
movs
cmp
adc
push
pushf
lahf
add
add
test
push
sub
push
stc
ja
mov
icebp
mov
add
movs
imul
sub
push
or
and
and
sub
rcr
add
cmps
fsubr
add
cmp
and
dec
or
xchg
aaa
push
sbb
mov
inc
inc
pop
jnp
sbb
and
fdivr
push
sub
dec
jmp
jns
xor
pop
sub
pop
sbb
add
sbb
inc
mov
sub
inc
das
push
push
and
push
dec
fs
push
push
ret
bound
data16
xchg
pusha
imul
loopne
mov
or
stc
ret
mov
add
lods
sub
mov
mov
sub
or
sub
(bad)
mov
push
add
mov
mov
pop
add
add
mov
mov
add
dec
inc
faddp
inc
add
lods
dec
mov
mov
push
stc
cmp
aas
dec
dec
test
mov
in
sahf
call
adc
lea
mov
pop
pop
jns
loopne
push
add
jne
bound
add
imul
adc
adc
sbb
fiadd
push
xor
mov
sub
cmp
aam
mov
mov
jo
dec
js
and
lods
stos
or
and
ins
mov
enter
mov
inc
mov
push
dec
jns
jmp
and
(bad)
mov
push
pop
out
fild
adc
jecxz
mov
mov
jmp
movs
aas
clc
mov
jns
cli
mov
or
inc
mov
add
fsubr
jno
xor
adc
mov
xor
push
or
in
mov
add
sbb
loopne
ds
ds
hlt
(bad)
mov
mov
lea
ins
xor
push
cmp
mov
(bad)
pop
cs
jmp
addr16
cmp
shl
fild
push
cs
(bad)
icebp
push
push
sub
xchg
sahf
adc
jmp
(bad)
jb
push
(bad)
and
shl
clc
cmp
fcomp
dec
in
mov
mov
add
in
add
mov
es
imul
pop
cld
inc
sub
dec
pop
cmps
add
pop
pop
push
push
dec
lods
pusha
add
sbb
cmps
scas
cmp
aas
and
es
mov
adc
dec
pop
call
ror
adc
add
jge
or
add
add
xor
test
inc
push
pusha
lea
(bad)
mov
je
push
push
push
sbb
and
and
rcl
jnp
dec
add
je
mov
mov
sbb
pop
iret
mov
pop
dec
pop
(bad)
in
shr
and
loope
push
shr
add
mov
retf
add
and
xor
das
ins
push
lods
test
add
push
jns
xchg
fstp
add
cmp
mov
mov
push
push
add
(bad)
rol
enter
hlt
xchg
dec
sbb
cmp
cmc
fistp
or
add
fisub
sbb
test
push
sub
rol
mov
and
stos
shr
mov
mov
push
push
and
stc
rcr
pop
cld
push
push
inc
nop
xchg
cmp
(bad)
push
push
jae
fisttp
inc
xchg
arpl
fwait
lock
mov
scas
dec
pop
int
scas
or
(bad)
enter
ss
add
or
pop
add
mov
sbb
cmp
rol
dec
jmp
mov
jg
test
jle
mov
int3
cmc
cmp
jl
mov
enter
(bad)
jg
test
pop
clc
jle
movs
mov
jne
sbb
xchg
push
jns
test
jo
sbb
push
out
pop
push
pusha
push
add
dec
shr
or
jne
push
mov
into
test
or
push
rol
adc
and
pop
fsubr
pop
movs
fsubr
frstor
and
jmp
push
or
dec
sub
(bad)
in
or
xor
add
pop
dec
sub
ds
push
clc
sub
mov
mov
test
push
add
mov
mov
sbb
push
jg
or
jl
push
cmp
adc
mov
popa
mov
jne
popf
(bad)
mov
jnp
adc
add
xor
xchg
xor
cli
add
xor
(bad)
xchg
loopne
push
repnz
add
sub
adc
test
pop
pop
dec
add
dec
or
xchg
ja
movs
sub
mov
ss
int3
jbe
nop
pop
cwde
js
push
(bad)
shl
ins
mov
push
mov
ins
es
add
ret
ret
call
xor
hlt
fidivr
popa
out
mov
cmp
add
push
push
mov
mov
test
je
je
mov
push
movs
mov
mov
or
and
shr
cmp
repnz
inc
dec
loope
shr
aas
xor
inc
aam
xchg
fcomip
sub
and
pop
or
pusha
inc
xor
xchg
loope
xchg
sbb
push
js
ja
mov
into
call
jl
sub
sub
or
test
jmp
clc
sub
jmp
sub
movs
inc
mov
mov
jnp
add
test
xor
cmovs
push
jle
lock
jmp
jb
cmp
push
mov
and
rcr
push
mov
jmp
adc
pop
leave
adc
ins
out
push
jbe
cli
icebp
xor
inc
and
jae
lods
xchg
gs
push
scas
pop
add
xchg
and
inc
or
(bad)
adc
push
xchg
iret
add
ds
inc
je
mov
or
out
add
or
push
bound
sub
cld
adc
rol
mov
les
pusha
pop
push
pop
or
dec
and
(bad)
fld
shr
xlat
hlt
xchg
xor
add
leave
adc
mov
shl
push
xor
xor
push
popf
clc
pop
or
inc
shl
stos
push
pop
mov
cmp
js
inc
jmp
cmp
clc
mov
xchg
data16
hlt
hlt
mov
ret
pop
addr16
mov
sub
fwait
lock
pop
call
lods
cmp
add
(bad)
out
cmp
cmps
sbb
adc
add
mov
sbb
adc
enter
sbb
in
hlt
int3
inc
call
or
loopne
xor
dec
stos
xchg
clc
call
dec
jae
hlt
loopne
lods
jne
(bad)
fdivr
loope
movs
imul
loopne
push
push
cmp
out
xor
add
lock
add
jns
xchg
add
or
xor
mov
push
and
(bad)
mov
mov
or
lods
data16
push
fnsave
in
cs
mov
lods
cmps
mov
mov
adc
adc
mov
mov
test
sbb
in
in
dec
in
lods
cmp
rcr
pop
sub
call
lock
int3
or
cmp
xor
mov
test
adc
pop
xlat
add
mul
sbb
pop
mov
rcl
inc
ja
sub
sbb
shl
sbb
adc
or
xor
push
mov
pop
nop
push
push
jno
shrd
adc
pop
stc
mov
in
pop
pop
push
cmp
push
popa
xchg
arpl
imul
sbb
adc
mov
jp
cmp
or
and
mov
mov
je
imul
aad
in
int3
and
xchg
in
bound
add
clc
mov
dec
gs
jbe
mov
movs
mov
push
add
(bad)
loopne
xchg
mov
test
jne
cmp
mov
sub
cmp
add
inc
lds
sbb
aaa
test
pop
jecxz
ja
inc
and
inc
repnz
push
add
in
sti
in
pop
imul
adc
push
adc
ret
mov
add
fucomi
cmps
pop
ret
iret
jns
push
jo
out
pop
xchg
call
cmp
data16
lea
out
in
shr
and
pop
fs
hlt
dec
adc
lods
mov
enter
js
push
or
in
mov
bound
or
add
and
mov
adc
out
inc
ins
xor
jl
dec
movs
sar
dec
repz
je
pop
inc
add
stc
in
in
xor
aam
(bad)
mov
pop
dec
push
dec
or
xor
aam
ss
(bad)
in
ret
nop
sbb
test
outs
sub
call
jb
pop
cli
mov
mov
nop
mov
add
imul
arpl
cmp
lock
cmp
mov
mov
(bad)
dec
push
push
retf
out
aaa
add
inc
daa
cmps
pop
rcl
test
mov
mov
inc
loopne
fs
pusha
imul
punpckhdq
xor
jp
test
mov
or
mov
jmp
pop
pop
not
pop
rcr
nop
xlat
adc
push
jmp
in
nop
adc
xlat
lock
popa
pop
or
in
nop
xchg
push
add
sub
repnz
repnz
jmp
and
dec
adc
int3
push
cmp
jge
pop
pusha
pop
sub
pusha
push
push
repnz
loope
sub
dec
pop
popa
loop
adc
xor
pop
call
mov
add
mov
mov
push
add
imul
inc
dec
push
or
ins
lahf
pop
ja
xor
cmps
cmp
cdq
or
inc
or
sbb
or
(bad)
jo
clc
iret
mov
jecxz
sbb
sti
mov
mov
cmp
mov
and
xchg
mov
loopne
lahf
leave
nop
stc
jp
xor
jecxz
mov
adc
and
fucomip
cwde
adc
and
mov
jo
jl
out
jnp
mov
mov
icebp
add
inc
fiadd
jne
mov
test
jne
mov
cld
mov
pop
and
cmp
jne
aam
lods
lods
add
add
dec
mov
outs
loopne
loope
lods
cmc
test
mov
sbb
fsubp
stc
int3
and
inc
jne
or
add
sbb
add
jae
movs
nop
dec
inc
rcl
js
mov
stos
add
pushf
int
jge
sub
xor
fiadd
inc
and
jecxz
out
leave
xchg
jmp
jae
pop
call
or
inc
adc
dec
pop
add
(bad)
out
or
movs
adc
adc
popa
mov
out
xchg
aas
fbld
cmps
test
fmul
repz
or
inc
inc
imul
adc
sbb
stos
and
jns
sbb
(bad)
sbb
es
fs
mov
repz
adc
fisttp
lods
ss
fistp
aad
xchg
or
push
(bad)
fsubr
push
and
add
js
xchg
push
dec
sahf
pop
(bad)
mov
cmps
pop
pop
fcom
stos
add
push
movs
adc
in
nop
add
or
sbb
and
cmp
ins
out
sbb
mov
fisttp
adc
adc
loopne
pop
daa
sub
push
adc
push
add
inc
mov
push
(bad)
push
in
jne
jecxz
nop
xor
push
inc
mov
mov
test
(bad)
or
inc
xor
jbe
xchg
dec
imul
xchg
jp
add
loop
xchg
xor
sub
xchg
inc
and
lock
imul
mov
test
inc
int3
out
fcom
or
outs
jg
xor
xchg
sub
add
or
arpl
and
imul
sbb
dec
fs
dec
add
adc
sub
fdiv
rcl
dec
ins
ficomp
xchg
fsub
aad
pop
adc
mov
jnp
(bad)
cld
repnz
add
jmp
push
add
and
scas
test
repnz
rcr
icebp
fsub
mov
lock
sbb
pusha
xchg
fcom
cwde
lea
fs
rcr
dec
and
mov
(bad)
push
or
or
call
push
inc
iret
loope
adc
loope
loopne
bound
ins
or
sub
punpckhdq
int3
push
jecxz
push
sar
sub
ins
adc
sbb
or
lds
pop
loope
lea
pusha
jo
add
into
mov
xor
js
ss
pop
mov
or
sub
in
add
adc
hlt
cwde
push
cs
ret
xor
push
and
out
out
sbb
xor
xor
jb
in
pop
out
adc
(bad)
shr
and
mov
pushf
or
hlt
movups
test
cmp
ds
in
jmp
and
addr16
adc
nop
in
leave
xor
mov
hlt
movs
in
mov
inc
out
add
test
xor
mov
cmp
jbe
push
mov
and
call
push
imul
sub
mov
xchg
lock
je
lock
imul
inc
call
cmp
out
pop
inc
sub
js
out
xor
in
popa
add
push
mov
xor
loop
aaa
fmul
jno
and
add
fs
sbb
rol
inc
fisub
sbb
fidivr
je
ja
stc
fisub
cmp
add
mov
mov
lea
call
sahf
and
adc
(bad)
scas
fnstsw
push
dec
add
dec
pop
(bad)
and
(bad)
pusha
add
sub
add
mov
mov
xor
xor
cmp
add
add
sub
test
es
lock
xchg
xlat
outs
imul
pop
stos
and
imul
and
or
adc
mov
les
push
mov
stos
xchg
ins
ret
jge
and
or
div
dec
or
mov
add
add
cwde
movs
repnz
ror
sub
or
jae
nop
fld
inc
ss
shl
dec
push
out
es
xor
(bad)
lds
loope
pop
xor
rol
push
add
lea
aas
pop
mov
leave
pushf
aas
nop
mov
fldcw
cmp
mov
adc
sub
inc
ins
mov
pop
sbb
fld
adc
(bad)
retf
pop
jl
push
scas
push
push
test
test
fs
jns
pop
adc
dec
xchg
rol
mov
mov
and
sub
mov
xor
and
pop
xor
imul
outs
jg
movzx
push
dec
sub
scas
shr
jae
jle
loop
and
lds
push
ret
xchg
or
cmp
push
dec
push
je
sbb
add
adc
push
mov
imul
cmps
cwde
loopne
pop
leave
xor
add
xor
or
in
aad
push
nop
or
add
pop
mov
inc
sbb
pop
dec
inc
or
inc
in
mov
inc
sbb
pop
and
loop
pop
push
pop
cwde
xchg
test
mov
add
or
aaa
or
and
add
adc
fst
pop
mov
jne
adc
inc
ret
out
loopne
sub
pop
sub
fadd
rol
mov
popa
popa
pop
jo
jnp
xor
push
call
inc
out
cmp
push
xor
and
cmp
sbb
add
clc
xchg
sub
add
ins
add
loop
ja
sub
cmp
sbb
lahf
js
aas
cmp
jle
ins
sub
pop
sub
leave
les
xor
inc
xor
add
pop
jbe
div
ins
jecxz
(bad)
cmp
out
mov
add
loopne
or
cmp
jne
push
je
lock
inc
jmp
xchg
adc
xchg
das
push
mov
sub
scas
leave
mov
das
jmp
sub
mov
cs
pop
pop
or
adc
nop
inc
cmp
ss
test
mov
sub
stos
or
mov
dec
jecxz
pop
xchg
add
inc
pushf
sub
lock
ret
mov
clc
ja
jb
gs
in
cmc
cmp
adc
aad
das
push
sbb
or
dec
xor
add
add
lea
or
or
into
data16
fs
adc
push
cmp
ja
jae
repnz
inc
inc
icebp
jmp
mov
xchg
add
cmps
or
mov
(bad)
aaa
iret
jne
jl
mov
ins
(bad)
scas
inc
inc
xchg
or
or
hlt
pop
std
mov
in
pop
ja
ss
dec
sbb
aaa
push
cmps
add
fcomp
push
cli
pop
ret
inc
lods
jmp
xchg
clc
adc
inc
xor
imul
xor
dec
pop
jno
adc
fisub
or
mov
dec
mov
sbb
inc
adc
cld
dec
mov
push
lods
mov
clc
inc
pop
je
fiadd
sub
in
jbe
adc
xchg
adc
mov
and
push
adc
cmp
adc
test
dec
and
xor
enter
add
push
mov
pushf
sbb
push
push
add
mov
leave
adc
lock
imul
push
inc
xor
mov
adc
jno
inc
test
sub
cdq
jl
clc
push
xor
stos
inc
pop
and
test
add
or
inc
push
rcr
xor
jo
mov
mov
scas
or
sub
in
cs
mov
jg
mov
and
jne
bound
mov
jmp
enter
(bad)
mov
(bad)
in
shr
outs
jnp
in
sbb
nop
(bad)
or
ret
retf
jp
pop
daa
hlt
(bad)
mov
jo
pop
add
jne
sub
iret
push
push
adc
out
and
and
or
ja
and
xchg
fs
xchg
mov
cwde
lea
xchg
in
inc
add
jo
movs
ins
pusha
push
mov
fsub
jne
loopne
daa
dec
out
jp
lods
(bad)
push
push
lds
dec
ja
or
pusha
loopne
inc
pusha
nop
xchg
mov
or
fcom
ins
(bad)
ffreep
fild
jne
arpl
dec
or
add
loop
fwait
sbb
shr
mov
or
imul
mov
mov
lds
pop
les
pop
xor
ret
or
nop
jns
xor
ret
push
std
push
sub
dec
icebp
mov
pushf
add
xor
mov
cmp
cmp
mov
rcr
pop
xchg
aad
and
sub
clc
push
sbb
ror
inc
dec
enter
retf
scas
pop
pop
sbb
mov
loopne
fdivr
rcr
pop
pop
and
(bad)
pop
and
jl
neg
cmp
push
dec
or
and
jp
add
inc
in
push
or
or
jne
push
xchg
sub
cmp
mov
call
pop
add
dec
or
mov
mov
push
push
push
or
xchg
or
cmps
mov
dec
in
jb
and
lock
dec
shr
or
pop
sbb
or
jmp
imul
ja
pop
arpl
inc
jne
sar
add
xor
(bad)
adc
jno
add
into
pop
lods
adc
lods
xchg
or
and
mov
sub
jbe
mov
add
in
es
hlt
and
popa
sbb
rcr
jl
inc
mov
adc
pop
or
add
push
sub
mov
jmp
pop
movs
and
inc
push
retf
int3
and
shl
setno
sar
outs
add
jo
push
push
mov
add
arpl
xor
inc
in
imul
add
and
fsub
out
xchg
pop
mov
in
out
or
mov
jbe
adc
adc
mov
adc
fs
and
outs
ins
add
dec
cwde
and
sub
enter
add
mov
out
in
jb
add
and
fadd
fisttp
movs
push
or
pushf
mov
fs
dec
aaa
push
fisttp
mov
sbb
in
adc
or
je
push
sub
mov
aad
aas
test
push
lock
or
inc
and
mov
or
movs
or
dec
push
jle
ins
pop
push
push
jmp
pushf
or
(bad)
sbb
dec
cli
xor
or
cld
arpl
or
gs
xor
lock
push
test
lods
loop
loopne
xchg
cmp
fmul
dec
adc
mov
or
test
or
mov
or
in
push
jo
or
jns
pusha
retf
push
pop
cmp
fcomp
xor
sbb
adc
xchg
loop
push
cwde
sar
sub
movups
push
jo
xchg
fucom
retf
jg
mov
mov
cli
dec
adc
jge
jmp
into
or
inc
scas
mov
nop
lea
or
pop
out
xchg
test
jmp
adc
add
or
dec
icebp
mov
and
cmp
inc
mov
inc
movs
xor
fidivr
mov
pop
inc
mov
fwait
nop
pop
sub
or
(bad)
mov
clc
nop
jbe
push
and
dec
mov
mov
dec
sub
lock
jp
push
add
lods
jbe
inc
cmp
inc
rol
xchg
mov
loope
mov
movs
mov
adc
dec
xlat
mov
lahf
aam
mov
inc
js
imul
add
pusha
rol
arpl
and
rol
mov
mov
retf
xchg
pop
or
inc
pop
iret
push
push
jb
push
or
push
mov
dec
sbb
sub
mov
rcl
sbb
sbb
mov
stc
lock
xor
and
cmps
js
xchg
jmp
mov
push
vpunpcklwd
into
pushf
clc
ror
iret
fcomp
dec
pop
ins
(bad)
or
dec
movs
add
jmp
jl
xchg
mov
jne
push
inc
mov
dec
sbb
mov
les
ret
or
cmp
sub
push
and
movs
ds
jne
mov
push
add
mov
sbb
call
jg
or
in
(bad)
sub
pushaw
mov
lock
test
dec
cmp
mov
test
mov
or
ss
inc
sbb
push
arpl
cmp
adc
(bad)
je
lods
sub
push
ds
adc
inc
or
add
cdq
loope
xor
sbb
adc
iret
inc
call
in
xchg
repnz
push
jbe
jp
aaa
push
and
fnstenv
jbe
rcl
push
add
jns
out
and
adc
faddp
cmp
cmp
sub
test
inc
push
push
mov
push
in
lahf
and
xor
test
je
ss
ret
pusha
jns
cmp
fsub
mov
test
mov
fwait
push
push
inc
add
xor
mov
jmp
and
jmp
jp
xchg
test
mov
push
xchg
mov
pop
das
adc
pop
jmp
or
movs
arpl
fsub
add
leave
js
ftst
movs
sub
add
mov
or
sbb
cmps
sbb
mov
aas
cmps
push
rol
pushf
pusha
push
pop
xchg
sub
jle
inc
and
sbb
cmc
pop
lock
and
adc
es
adc
outs
or
mov
mov
les
fcomp
push
nop
(bad)
xor
add
hlt
add
sbb
xor
dec
mov
addr16
outs
add
loopne
adc
inc
maskmovq
neg
inc
mov
fstp
cmp
pop
mov
call
push
inc
pop
dec
arpl
and
adc
ret
mov
sub
in
(bad)
mov
out
add
aas
push
inc
in
mov
jmp
mov
jne
movs
jmp
pusha
add
adc
rcl
adc
int3
dec
gs
lods
cmp
shl
outs
jmp
mov
push
test
xchg
or
cmp
xor
adc
(bad)
loopne
(bad)
push
cmp
icebp
mov
push
imul
ins
push
pop
ins
mov
pop
xchg
lods
inc
sub
push
inc
inc
xor
pusha
cmp
xor
sub
shld
aaa
adc
shl
retf
add
pusha
stc
push
hlt
mov
bound
adc
adc
sbb
rcl
ret
add
cmp
and
ror
sbb
addr16
dec
jns
or
dec
das
mov
ret
mov
enter
aaa
sub
imul
or
pop
sub
cmps
mov
daa
outs
movs
rol
push
or
test
mov
mov
cmp
xor
enter
mov
jnp
dec
mov
daa
mov
idiv
adc
pop
and
jnp
mov
sub
in
iret
push
mov
sar
loopne
stos
and
add
sub
jne
inc
adc
mov
nop
and
or
adc
mov
ins
xor
and
sbb
dec
inc
adc
cmps
or
mov
retf
and
mov
adc
or
push
inc
iret
mov
inc
adc
xchg
and
inc
mov
pop
mov
(bad)
sbb
add
or
or
jne
mov
adc
push
stos
loop
or
dec
mov
mov
fwait
sbb
aad
xor
lar
mov
pop
pop
(bad)
movs
test
pop
addr16
or
out
bsf
lock
movs
add
push
or
sbb
pop
adc
xchg
test
add
jo
xchg
adc
dec
dec
jmp
push
(bad)
lds
adc
test
and
jns
mov
add
and
cmc
dec
sbb
mov
dec
or
inc
cmp
loope
out
retf
test
pop
pop
or
or
jbe
add
push
mov
adc
or
jg
pop
pop
xor
add
hlt
in
lods
adc
mov
mov
hlt
inc
fsubr
jecxz
push
adc
cld
sub
mov
dec
mov
adc
cmp
pshufw
shr
mov
ins
lods
mov
sbb
pop
jle
push
inc
push
xchg
cmp
jmp
int3
xchg
adc
arpl
add
inc
mov
fdiv
fsub
add
jno
mov
jge
test
or
call
inc
clc
adc
inc
dec
movs
add
add
inc
test
retf
sbb
es
rol
fsub
fwait
sbb
dec
adc
pop
fsub
sti
push
pop
pushf
or
or
jg
in
das
(bad)
mov
mov
mov
mov
je
test
mov
xor
cmp
loopne
hlt
ficomp
adc
dec
mov
and
sahf
and
mov
std
or
push
call
and
xor
cmp
jg
pslld
push
xchg
jl
xor
xchg
or
cmp
inc
in
jmp
add
inc
push
cmp
inc
rcr
inc
xchg
call
jnp
lods
cld
iret
or
scas
sub
aaa
pop
sbb
scas
add
jnp
mov
or
xor
fs
mov
jo
(bad)
fs
jo
pop
and
mov
dec
loopne
push
daa
mov
stos
inc
pop
push
ja
mov
test
arpl
sbb
adc
retf
mov
daa
mov
mov
rol
adc
jl
xor
pop
adc
movs
sbb
or
adc
shl
(bad)
or
test
mov
or
shl
nop
scas
jbe
outs
cmp
xchg
mov
hlt
sbb
push
xchg
and
xchg
xchg
pop
movs
outs
(bad)
psubsb
or
fcom
out
ins
adc
out
or
aam
dec
dec
dec
outs
bswap
enter
dec
dec
dec
mov
dec
dec
dec
lods
test
mov
pushf
out
sbb
push
enter
hlt
sbb
add
xchg
(bad)
icebp
mov
jmp
sbb
or
mov
push
pusha
div
cmp
xor
mov
adc
sub
int3
pop
fmul
lahf
ret
sub
mov
sbb
mov
ret
sub
mov
adc
adc
jmp
lods
je
mov
out
mov
xchg
jl
sbb
lods
adc
in
adc
and
outs
jb
lods
xchg
and
push
sub
clc
inc
pop
sub
cld
jbe
push
jmp
call
jmp
jmp
add
add
or
nop
or
sbb
xor
test
cmps
test
dec
adc
push
pop
rdmsr
das
jge
push
sub
lock
ja
mov
push
fsub
(bad)
xor
fcomp
cmp
clc
mov
jle
adc
mov
or
push
popa
cmp
jle
push
pop
loop
mov
mov
mov
or
pop
xor
mov
jmp
pop
and
addr16
and
mov
add
jae
dec
ds
cmp
jo
adc
sbb
daa
jmp
iret
sbb
jmp
push
lock
adc
pusha
mov
daa
adc
dec
adc
and
pop
dec
add
cs
and
xor
push
sbb
fsubr
ss
es
xor
xor
and
lock
int
mov
inc
or
add
das
pop
adc
adc
shl
and
mov
loopne
std
outs
xor
dec
xor
outs
cmp
shl
xor
sub
jp
cld
or
pop
dec
push
or
jne
or
pmuludq
in
push
adc
jle
lea
fcomp
mov
mov
push
push
sub
mov
hlt
add
mov
shl
push
daa
push
shr
inc
pop
cmps
and
xchg
and
or
and
leave
adc
and
es
xchg
dec
in
and
push
adc
jb
xchg
adc
xor
jge
cmps
dec
movs
repnz
daa
cs
pop
das
ins
mov
jbe
push
ret
jmp
or
mov
jmp
inc
in
inc
adc
push
pop
and
xchg
sbb
mov
test
neg
mov
mov
push
sbb
sbb
push
jl
test
push
call
and
push
push
jmp
outs
lock
ds
add
adc
lds
daa
push
mov
adc
push
adc
inc
outs
jne
out
ins
popa
jns
sbb
push
mov
(bad)
mov
repnz
sbb
mov
in
jl
or
or
pop
cmp
iret
adc
and
mov
push
push
add
rcl
push
sub
(bad)
cmp
inc
into
jmp
sbb
jb
cmp
mov
jg
pop
cmp
mov
cmc
prefetchw
push
test
outs
add
cld
mov
pop
jo
xor
adc
cmp
inc
jae
sbb
dec
inc
lock
mov
imul
out
push
and
adc
in
mov
imul
in
cs
or
adc
test
sahf
and
add
ins
mov
or
or
jnp
aam
in
add
fmul
into
inc
sbb
repnz
inc
shl
in
inc
adc
aad
test
add
mov
out
mov
(bad)
sar
pop
inc
or
and
add
push
dec
outs
fild
shl
add
push
xchg
dec
or
xchg
adc
aam
cmp
sbb
cmp
dec
and
and
or
loopne
std
lods
pop
es
adc
and
repz
dec
es
pop
sbb
jns
out
sub
cmp
test
push
ds
cs
push
aaa
sbb
sti
in
nop
xor
sbb
inc
xchg
or
movs
icebp
push
push
inc
out
mov
stc
mov
inc
add
or
fst
mov
xor
fild
out
daa
sub
add
in
push
in
jp
jb
sbb
push
shl
sbb
dec
loope
pop
ins
push
inc
mov
sub
mov
imul
push
out
inc
sub
sahf
movs
push
mov
add
stc
leave
inc
adc
inc
loopne
xchg
test
das
or
adc
out
lea
lea
pop
mov
xchg
lahf
cmps
stc
lods
or
sub
pop
push
iret
es
push
xchg
jmp
mov
test
fs
in
inc
push
sub
(bad)
inc
push
aam
mov
fcom
pop
(bad)
adc
dec
and
hlt
hlt
sbb
scas
gs
jmp
rcl
ficomp
jb
sub
mov
sub
stos
mov
inc
dec
out
or
adc
push
sbb
xor
pushf
jle
and
inc
idiv
test
loopne
xchg
nop/reserved
adc
xor
xchg
inc
mov
sub
push
mov
lock
es
ficom
jne
je
pop
jbe
sbb
mov
pop
cwde
fadd
push
xor
sbb
cdq
popf
or
adc
add
fidivr
inc
hlt
sub
ss
jbe
test
scas
mov
pusha
cmp
mov
hlt
jne
ror
cs
test
pop
or
arpl
jmp
arpl
in
daa
dec
push
push
push
adc
loope
cmp
sub
adc
jecxz
test
pop
xor
adc
enter
cdq
addr16
xchg
loope
sub
sub
stos
and
and
cld
movd
sar
jne
sbb
and
mov
cmps
retf
cmp
fst
xor
sub
sahf
into
and
jmp
add
xchg
adc
jp
add
enter
bound
fst
and
rcr
fld
adc
dec
lock
sub
or
imul
xor
mov
ja
mov
add
pop
pop
add
or
mov
add
mov
pop
ins
mov
inc
add
jmp
pusha
mov
cmp
bound
push
mov
dec
stos
ins
push
xor
pop
ins
sub
mov
fadd
cmp
adc
dec
call
mov
xor
xchg
pop
push
call
in
dec
sar
js
fadd
cmp
test
out
pusha
xchg
imul
dec
lea
dec
dec
fimul
mov
inc
outs
lock
loopne
cmp
(bad)
jmp
mov
dec
xor
and
xchg
out
xor
das
inc
rcr
adc
xchg
loopne
nop
daa
and
mov
call
adc
pop
sub
ret
dec
mov
aad
in
pop
inc
adc
jne
mov
pushf
jecxz
ins
inc
inc
test
mov
shl
lock
and
push
jns
mov
movs
jge
mov
sbb
inc
call
dec
cmp
push
cld
cmps
repnz
sbb
mov
jb
mov
fisttp
pop
test
xor
jle
fldcw
jo
adc
inc
xor
add
and
and
xlat
pop
xchg
mov
pop
xor
adc
dec
cs
xchg
retf
push
stos
dec
xor
and
or
(bad)
shr
scas
or
rcl
and
lock
test
ins
xchg
mov
sti
or
sbb
xor
cld
jg
mov
enter
fnsave
push
sbb
push
test
jmp
adc
or
nop
jmp
push
mov
ret
lods
xor
dec
pusha
xor
inc
and
lock
push
dec
mov
mov
add
(bad)
and
or
sbb
mov
add
rcl
push
and
aaa
out
jle
add
in
arpl
pop
dec
and
cmps
ror
ret
into
mov
xor
in
pop
cmp
jns
cmp
repz
in
movs
xor
(bad)
sar
mov
jns
pop
fdiv
cmp
scas
dec
cmp
mov
(bad)
xor
xchg
cmp
mov
sbb
enter
in
adc
aam
in
neg
sbb
push
ins
and
mov
dec
ins
(bad)
sub
push
jmp
add
cli
dec
push
ins
xchg
pop
outs
push
or
jo
retf
dec
cmp
dec
les
cmc
imul
inc
mov
mov
push
jb
frstor
push
data16
push
jns
or
xchg
out
arpl
dec
pop
push
test
push
and
les
push
jb
or
fcom
add
cmps
or
and
add
adc
sbb
ins
arpl
cmps
retf
cmps
dec
pop
xor
dec
shl
lds
sub
ret
maxps
repnz
das
push
mov
outs
sbb
fdivr
outs
ja
mov
push
pop
mov
shr
jnp
push
shr
push
jbe
jg
fist
sub
scas
add
mov
xchg
ds
scas
pushf
aaa
inc
shl
cmp
push
push
adc
xor
nop
clc
mov
sbb
dec
aaa
aas
out
sbb
push
cwde
adc
xlat
retf
imul
call
xor
or
out
sub
mov
dec
cmps
xor
scas
add
sbb
inc
lods
pop
dec
pop
mov
pop
push
fnstcw
xchg
sbb
je
cmp
inc
mov
mov
enter
xor
jle
dec
add
test
in
adc
dec
xor
fcomp
or
mov
xor
test
xor
xchg
cwde
pushf
mov
movs
test
mov
xor
xor
xor
(bad)
enter
xor
xor
fcomp
loopne
xor
xor
call
xor
hlt
clc
cld
add
add
or
xor
xor
adc
sbb
cmp
xor
and
sub
mov
jg
cmp
cwde
or
bound
mov
ds
adc
arpl
test
mov
add
add
xchg
inc
or
jnp
push
js
and
dec
gs
xor
ror
loopne
hlt
push
mov
aas
cwde
sbb
inc
sub
pushf
cmp
push
movs
pusha
movs
xor
xchg
test
lods
test
adc
mov
push
sbb
dec
gs
sub
shr
add
or
dec
in
inc
int3
and
and
inc
push
push
movs
xor
push
fsub
nop
retf
js
inc
sub
push
mov
pushf
test
mov
enter
add
fdivr
adc
cld
clc
movs
jb
out
mov
retf
push
or
add
nop
cmp
dec
adc
gs
sub
xchg
add
mov
movs
xor
and
sub
retf
in
add
push
fbstp
xchg
inc
push
rol
lds
out
cmp
je
gs
gs
pusha
push
sbb
ins
or
jae
and
(bad)
rol
sbb
fcom
add
inc
cmp
add
je
add
test
je
xchg
inc
bound
jne
fwait
popf
or
dec
imul
aas
addr16
fs
sbb
out
mov
dec
arpl
jae
adc
jbe
jge
dec
in
daa
lea
or
jns
popa
add
jae
sbb
mov
ins
addr16
pop
pop
movs
cmp
rcr
adc
(bad)
ficom
xchg
push
xchg
icebp
push
push
add
or
adc
rol
pop
call
(bad)
daa
rcl
pop
iret
ds
pusha
pop
mov
jns
xor
in
pop
or
iret
mov
sub
and
and
nop
cwde
mov
(bad)
mov
mov
fstp
in
pop
push
(bad)
xchg
test
jl
cdq
lahf
xchg
ret
push
and
jo
jg
jae
mov
addr16
jne
ins
outs
(bad)
sub
das
pop
fs
ss
sbb
inc
imul
jl
add
add
mov
xor
call
push
xchg
loop
add
shr
pop
repz
ficom
push
adc
cdq
xor
push
ins
add
adc
hlt
add
scas
sbb
add
sbb
jne
xlat
jg
daa
aad
inc
data16
cmps
jbe
sbb
add
das
cmp
jno
int
mov
not
inc
inc
mov
nop
imul
or
dec
cmp
xor
sbb
sbb
add
sub
and
in
xchg
or
pop
in
pop
sbb
dec
push
sbb
xchg
or
nop
pop
push
pusha
and
and
sbb
xchg
cmp
add
pop
outs
push
out
dec
sub
dec
push
pop
lahf
ret
inc
jmp
adc
inc
enter
pop
xor
ret
push
pushw
add
mov
adc
sbb
dec
jmp
push
push
ins
cmovs
push
or
and
popf
xchg
or
jae
and
pop
or
xor
test
je
mov
fimul
cmp
cmp
lea
mov
sahf
dec
dec
cmp
cmps
jae
inc
push
push
add
lods
xor
test
xor
dec
inc
inc
adc
adc
jecxz
add
adc
inc
jbe
into
nop
push
add
xor
cmp
sar
adc
cmp
enter
mov
jae
cmp
mov
rol
cmp
nop
adc
jl
mov
in
inc
xor
push
adc
inc
rcl
pop
and
sbb
sbb
inc
xchg
mov
sbb
cmp
scas
xor
mov
ror
ins
lds
mov
inc
aaa
xor
adc
or
or
mov
xor
pop
ror
xchg
pop
jmp
jo
gs
stos
out
and
and
ins
call
pop
or
in
icebp
adc
cld
fnstcw
adc
fstp
sbb
loopne
leave
inc
sbb
lea
cli
loopne
dec
mov
mov
cmps
push
cdq
adc
cdq
pop
ja
or
nop
outs
xchg
shl
push
push
test
pusha
cwde
push
xchg
nop
lahf
dec
mov
add
add
inc
add
mov
hlt
shr
fbld
mov
pop
and
pop
push
ret
pusha
push
(bad)
pop
dec
outs
outs
mov
mov
ret
(bad)
retf
xchg
or
and
adc
lods
ja
test
dec
add
mov
dec
loopne
jo
add
add
mov
push
out
mov
mov
(bad)
and
test
jmp
ja
push
pop
mov
mov
loop
mul
addr16
push
pusha
(bad)
push
jle
jo
mov
add
retf
cmp
outs
or
xlat
nop
mov
(bad)
fwait
jl
inc
add
mov
sbb
out
js
sbb
cwde
sahf
jo
leave
cmp
ins
cs
ja
dec
xor
shl
pusha
shl
mov
jbe
adc
out
(bad)
dec
push
shl
outs
fs
adc
adc
cmp
inc
sahf
inc
stos
ds
dec
inc
jo
jnp
push
dec
sub
popa
pop
loopne
mov
sbb
mov
ja
fcom
inc
xchg
fstp
push
jl
adc
xchg
pop
cmp
pop
mov
xchg
push
inc
jg
push
loop
je
fbld
clc
sar
dec
in
inc
push
imul
test
mov
jo
fisub
adc
lods
push
jae
mov
and
adc
lds
hlt
mov
adc
rcr
movs
push
push
jo
ror
add
add
mov
push
xchg
xchg
inc
xchg
pop
js
jne
sahf
out
inc
xchg
mov
popa
push
inc
cmp
sbb
adc
lea
dec
or
pop
push
jmp
adc
jnp
cmp
(bad)
jle
xor
push
sub
or
add
cmps
enter
cmp
or
or
dec
outs
popf
xchg
push
mov
mov
test
sub
push
mov
xor
addr16
cmp
push
aaa
cmp
cmp
jb
cmp
cmp
jb
jb
ds
and
jb
jb
and
and
jb
jb
es
sub
jb
jb
sub
sub
jb
jb
cs
adc
jb
jb
adc
adc
jb
jb
push
pop
sbb
jb
jb
sbb
sbb
jb
jb
push
pop
add
jae
jb
add
add
stos
add
das
inc
cdq
mov
sar
push
pusha
clc
cwde
pop
lock
cmp
repz
dec
loopne
fdiv
cmp
repz
xor
sub
repz
shl
sbb
cmp
or
cmps
stc
clc
dec
nop
lock
out
sahf
out
loopne
fdiv
out
sahf
shr
pusha
rcr
out
mov
out
sahf
out
mov
out
sahf
nop
sub
cwde
out
js
jo
cwde
repz
repz
cwde
dec
xchg
dec
iret
repz
xchg
dec
xchg
dec
xchg
dec
cmp
repz
dec
xchg
dec
xchg
repz
repz
xchg
dec
xchg
dec
iret
repz
xchg
dec
xchg
dec
xchg
dec
out
jmp
sub
call
mov
dec
daa
nop
das
das
push
dec
add
out
xor
aam
jb
mov
lock
out
das
out
mov
outs
dec
repnz
dec
nop
push
js
int
pop
enter
mov
clc
and
or
pop
add
mov
jl
pop
jle
sbb
cmp
xchg
and
and
arpl
test
ja
or
xchg
mov
out
pop
xchg
mov
or
pop
repnz
or
pop
in
xchg
push
enter
in
cmp
sub
and
add
lahf
xchg
lahf
and
mov
in
sbb
adc
and
cwde
mov
sub
cmp
retf
inc
fs
fimul
inc
repnz
iret
sbb
or
mov
and
test
mov
and
test
xchg
shl
in
rol
cdq
mov
jb
ss
push
cmp
pop
push
mov
iret
dec
inc
push
dec
in
les
rol
fsub
cdq
or
push
fstp
loope
mov
push
ja
repnz
dec
fisubr
cmp
lods
adc
sar
in
dec
push
pop
push
int3
scas
push
or
adc
fcom
inc
js
fdiv
add
mov
(bad)
arpl
push
or
sar
aam
jle
adc
inc
outs
jb
popa
je
aaa
push
jb
and
data16
je
add
and
ja
(bad)
test
push
xchg
test
or
or
add
ror
jne
in
leave
lds
adc
rcl
push
push
cdq
fmul
loopne
push
mov
maskmovq
neg
out
cmp
les
jl
push
pop
inc
inc
push
inc
add
push
(bad)
call
cmp
push
mov
pop
scas
call
push
test
pop
or
aam
daa
sub
call
and
xor
xor
ss
and
imul
arpl
add
ror
mov
add
arpl
ins
push
fdivp
(bad)
arpl
imul
inc
outs
pop
js
out
jnp
fsub
add
es
jb
jb
dec
mov
sbb
es
out
inc
pop
bound
jbe
es
shr
scas
imul
pop
mov
pop
jb
addr16
add
mov
arpl
ins
daa
out
mov
jg
sub
ja
sahf
outs
ins
das
je
cmps
sbb
rcr
and
pop
adc
cmp
cmp
pop
sub
jmp
(bad)
xchg
jns
outs
dec
pushw
das
gs
lods
loope
pop
or
outs
pop
cld
mov
shr
retf
loopne
and
or
mov
pop
inc
add
dec
stos
push
add
push
ins
pusha
xchg
sbb
dec
adc
mov
imul
je
mov
cmp
sti
and
sbb
add
sub
inc
add
and
gs
std
mov
dec
mov
js
xor
movs
add
aaa
xor
ins
pop
or
enter
push
and
mov
call
mov
mov
or
jne
pop
jne
or
cs
xor
xchg
sbb
pop
xchg
icebp
movs
jb
and
addr16
ret
adc
or
push
out
fisub
sbb
add
push
rol
add
xor
sub
sar
mov
bnd
xor
lock
sub
in
clc
int3
mov
mov
shl
in
imul
les
mov
jns
(bad)
and
jo
and
jle
lds
mov
mov
xor
jge
add
sti
mov
push
shl
or
jmp
sbb
iret
aam
icebp
or
and
push
add
or
fldcw
aas
sbb
sub
vmwrite
xchg
cmps
and
adc
push
sbb
mov
sub
rol
ret
or
push
sbb
cs
retf
adc
sbb
add
or
pop
push
sub
add
pop
inc
dec
add
xor
rol
add
jg
pop
or
or
or
or
or
or
iret
repz
adc
adc
repz
repz
pop
sbb
sbb
aas
iret
sbb
and
and
lock
fcom
cmps
push
cmps
mov
repz
cld
or
push
cmp
repz
jae
xchg
cmps
repz
repz
fldl2e
sti
out
sahf
out
pop
sbb
out
sahf
popa
jb
mov
mov
mov
repz
pop
push
mov
or
push
cs
and
pop
adc
in
retf
or
push
mov
or
cs
and
and
sub
xchg
retf
sub
mov
adc
cs
cmp
dec
sub
xchg
retf
pop
dec
sbb
dec
in
push
sbb
push
mov
repnz
ja
push
push
sub
popa
imul
movs
repnz
mov
xor
nop
and
xor
and
push
arpl
mov
add
test
ror
test
sbb
sbb
fsubr
and
pushf
movs
jg
pop
popa
inc
push
lea
lea
dec
xor
jbe
ds
lock
jbe
popa
or
pop
push
cmps
in
fnstcw
adc
push
add
sbb
xor
or
mov
ins
int3
mov
push
push
cld
add
in
push
loopne
mov
fadd
jl
dec
int3
mov
or
dec
cmp
or
and
mov
mov
and
push
or
cmp
das
cmp
jmp
xor
inc
push
dec
xchg
lahf
mov
in
adc
lock
sar
out
add
in
and
and
add
jl
lock
adc
fcom
push
(bad)
mov
outs
and
mov
pop
inc
push
test
inc
pop
dec
ins
push
movs
imul
(bad)
mov
cmp
mov
mov
ins
fwait
inc
sub
push
in
ss
and
scas
jnp
repz
push
je
push
icebp
and
in
xor
cmps
test
sar
iret
in
adc
out
push
add
ss
push
xor
fcomi
mov
push
sbb
mov
or
cmp
shr
push
cld
add
cmp
loopne
ss
push
pop
out
push
cwde
inc
aam
idiv
call
into
push
mov
mov
mov
adc
cmp
sub
or
movs
movs
stos
sub
test
or
adc
sub
or
push
je
adc
leave
rcl
outs
fs
popa
cmp
lahf
jo
and
sbb
xor
sub
fisub
clc
ret
ss
xchg
add
pushf
add
mov
xchg
xor
adc
push
aas
adc
inc
add
cmps
fs
add
xor
jp
pop
xor
inc
lea
pusha
or
fidiv
aam
add
(bad)
out
inc
push
adc
jecxz
ins
mov
inc
nop
rol
dec
or
xchg
pushf
repz
push
push
dec
jb
jbe
mov
movs
push
test
test
mov
adc
or
and
adc
bound
mov
xchg
lock
jp
jp
test
mov
or
push
jae
and
dec
fwait
pop
aaa
lock
ror
sar
pusha
(bad)
adc
sub
push
cmp
push
nop
dec
pusha
ret
in
call
push
mov
addr16
mov
rol
nop/reserved
in
mov
pusha
xchg
ins
push
je
es
sbb
push
push
push
pop
and
ins
icebp
cwde
or
add
cmp
mov
dec
sbb
pop
xchg
or
pop
enter
or
call
js
push
dec
mov
rol
out
outs
jo
out
inc
ret
cdq
and
mov
pop
in
pop
sub
ins
pusha
cmp
xchg
mov
push
call
push
dec
movs
js
and
inc
jbe
iret
push
hlt
icebp
data16
inc
out
jne
push
imul
jbe
and
pop
test
imul
fdivr
and
jl
daa
lock
leave
mov
mov
push
sub
mov
sbb
ss
pop
es
xchg
sbb
pop
cs
mov
cmp
ja
dec
test
leave
sub
enter
lock
ror
or
push
les
sbb
jne
xchg
or
xchg
add
and
add
stc
inc
sahf
out
lods
inc
enter
push
cmp
mov
js
int3
mov
test
add
pop
hlt
fs
dec
add
dec
cmp
add
in
pop
cmp
push
fcomp
dec
pusha
inc
xor
(bad)
xchg
jl
test
or
or
out
sbb
add
xchg
xor
xor
sbb
push
js
dec
dec
jb
dec
adc
xor
inc
fidivr
adc
lock
lock
or
dec
jmp
popf
ss
add
mov
cmp
mov
pushf
mov
std
inc
mov
adc
add
sbb
push
mov
add
xor
inc
add
(bad)
pop
mov
scas
inc
scas
push
stos
cmp
les
lods
push
or
in
aas
lods
hlt
int3
and
test
or
(bad)
xor
outs
mov
out
dec
pop
add
xor
jb
mov
mov
mov
cmp
mov
mov
push
imul
fadd
jnp
mov
clc
int
in
push
je
push
pusha
test
inc
hlt
shl
enter
lock
addr16
cmps
mov
test
inc
fist
adc
add
sbb
leave
pop
ret
fcomp
or
sar
jmp
or
shl
push
and
ficom
fcmovnbe
shl
popa
or
lods
jl
push
jecxz
js
popf
repz
add
sbb
lea
mov
int3
ror
aaa
ret
lea
outs
cmp
cmp
addr16
add
push
movs
or
xchg
pushf
sub
xchg
shr
xchg
mov
shl
mov
les
sub
cmps
mov
xor
jle
mov
mov
pop
mov
rol
dec
mov
add
cmp
out
cmp
adc
mov
repz
push
pop
jecxz
mov
xor
idiv
mov
sbb
test
cwde
or
pushf
inc
and
stos
addr16
pop
jmp
aas
das
mov
shl
or
jo
jb
pop
and
pop
sub
shl
xchg
js
push
lea
lea
pop
sub
loope
and
fs
push
jmp
adc
sub
sub
inc
ficomp
push
nop
push
sbb
and
popf
je
cmp
sbb
or
cwde
gs
in
push
mov
or
xor
sbb
jbe
and
cld
sub
inc
add
xchg
sub
je
dec
add
mov
xchg
ret
and
les
jge
das
mov
int
cmp
ins
pop
daa
cmp
data16
or
leave
mov
in
outs
push
dec
dec
xor
inc
test
mov
mov
mov
aas
push
pop
mov
inc
dec
mov
enter
movs
xchg
inc
hlt
jo
ins
ds
cmp
xchg
push
mov
sub
dec
cmp
jecxz
sbb
and
add
push
jns
outs
cli
xchg
lds
shl
jl
inc
fnstsw
inc
or
xor
inc
cmp
push
jno
push
enter
jno
test
inc
xchg
mov
xor
packuswb
fist
dec
pcmpgtb
leave
leave
xchg
xchg
sbb
cmp
daa
mov
jg
or
adc
and
loopne
repz
push
cmc
cdq
mov
cmp
mov
cmp
repz
mov
jno
fild
jb
sar
or
xchg
fist
inc
clc
movs
sbb
add
add
push
dec
dec
mov
xchg
xor
fsub
push
push
mov
(bad)
mov
test
scas
daa
leave
(bad)
inc
or
adc
popa
outs
icebp
or
movs
add
sub
cmp
call
clc
mov
mov
push
cld
mov
test
rcr
push
outs
push
ror
push
sub
push
mov
pop
sub
in
popa
adc
push
push
inc
sbb
lods
mov
es
cmps
push
aam
mov
adc
sub
xchg
sub
arpl
cmp
add
lds
add
dec
sub
jno
loope
xchg
sbb
je
mov
xchg
push
pop
xor
(bad)
rol
xlat
jns
aad
inc
jne
cmp
(bad)
lock
jl
jo
test
and
jne
add
cmp
and
sbb
jne
ins
push
add
xor
cmp
pop
inc
js
dec
sbb
fs
daa
sbb
add
add
dec
ror
pushf
retf
inc
xor
push
xchg
jg
inc
cli
mov
push
jmp
push
mov
lock
mov
or
and
in
daa
movs
sti
mov
sbb
clc
push
stc
jge
scas
cmp
cmp
xor
add
and
xchg
ds
(bad)
sub
setb
push
adc
or
test
push
inc
sub
sub
and
(bad)
sub
sub
push
pop
sbb
cmp
sub
sub
and
mov
xor
sub
or
mov
add
fld
adc
mov
daa
or
(bad)
aas
mov
xor
add
enter
fadd
cmp
jae
push
lock
repnz
repz
ret
mov
(bad)
sub
aad
(bad)
js
mov
mov
mov
imul
sbb
(bad)
rol
push
sub
inc
mov
cmp
pop
fnstsw
sub
stc
lds
and
dec
inc
inc
mov
out
sub
and
out
or
bound
xchg
jns
mov
out
xchg
dec
mov
clc
adc
jbe
push
mov
push
dec
rcr
mov
loope
aaa
sub
loop
outs
imul
mov
mov
ret
(bad)
xlat
jns
call
or
jmp
pusha
enter
or
retf
jp
inc
ret
loopne
and
push
add
sbb
and
add
or
ja
je
or
je
xor
ror
add
mov
(bad)
imul
(bad)
imul
inc
lock
mov
or
jle
rcl
gs
adc
popa
mov
pop
sub
in
push
fcmovb
mov
add
mov
adc
fistp
jb
sbb
add
mov
xor
sub
sahf
pop
push
sbb
inc
dec
push
add
retf
or
or
and
xor
aaa
and
or
or
sbb
inc
loopne
mov
jecxz
add
pop
sub
loope
imul
jl
xchg
ret
ss
inc
in
cmp
jne
sub
jne
mov
sbb
fst
ins
imul
mov
stos
enter
sub
mov
mov
push
jbe
xchg
jno
lock
sub
aaa
add
nop
add
je
sahf
cmp
xor
push
and
pop
mov
sbb
rcl
les
or
add
sbb
sub
add
mov
mov
xlat
lock
jge
adc
pop
test
les
xor
ret
cmp
xor
test
or
inc
or
jecxz
cmp
pop
pop
xor
inc
mov
mov
pop
pop
pop
loopne
xchg
add
or
jno
ja
jb
fwait
xchg
mov
pop
jo
out
or
iret
loopne
and
dec
lods
lea
sbb
mov
jle
out
mov
jle
sub
pusha
sub
rcl
adc
aaa
adc
cdq
call
mov
cmp
pop
push
lahf
add
jnp
push
lea
push
mov
nop
and
mov
dec
push
popa
or
or
or
inc
outs
je
or
mov
push
add
outs
adc
or
les
push
mov
dec
repnz
ins
jg
add
movs
ror
out
xchg
ss
dec
movs
push
mov
jnp
adc
push
jo
push
fdivr
sbb
pop
and
sbb
inc
inc
adc
(bad)
in
inc
adc
cmp
inc
push
jb
push
pop
movs
add
xor
sar
push
push
sub
movs
push
sbb
push
or
fiadd
cmp
push
or
add
test
mov
xchg
bnd
fadd
jg
adc
movs
mov
jo
cmp
aam
adc
adc
hlt
pushf
xchg
test
js
pushf
dec
ds
or
icebp
push
pop
cmps
inc
mov
iret
fwait
xchg
cmps
call
add
sahf
out
shl
aas
or
cmp
out
pop
sub
and
xor
xor
inc
nop
and
xor
int3
add
and
mov
pop
pusha
shl
sbb
aaa
mov
addr16
mov
push
sbb
nop
mov
pusha
push
imul
add
ss
dec
in
inc
aad
sub
add
hlt
mov
push
pop
call
and
cmps
jge
fcom
add
push
jo
nop
out
jns
jns
movs
dec
test
les
out
cmp
inc
out
adc
add
add
nop
pusha
jbe
pusha
dec
loopne
or
mov
jne
shr
pop
cmp
push
ins
bound
jnp
loope
bound
inc
pop
fnsave
inc
mov
add
push
or
rol
inc
xchg
outs
jne
xchg
add
mov
arpl
arpl
ja
popa
xchg
mov
repz
fdiv
or
pop
jo
and
dec
gs
jbe
or
pop
lock
test
cmps
cld
mov
xchg
(bad)
cs
imul
imul
je
test
mov
je
or
push
int
test
jbe
in
mov
push
ja
add
(bad)
popa
in
popa
imul
mov
adc
fldz
lods
sbb
inc
int3
pop
or
add
pop
xchg
test
push
aam
jmp
sbb
inc
dec
dec
xchg
je
sbb
cmps
arpl
add
mov
and
jge
adc
dec
mov
xor
rcl
sbb
fdivr
mov
add
or
js
and
or
cmp
test
adc
xchg
dec
add
imul
add
imul
xchg
inc
inc
in
mov
xchg
push
xchg
or
mov
arpl
pop
jno
or
adc
add
xor
cmp
pop
dec
mov
out
(bad)
test
lds
adc
pop
ja
pushw
mov
lods
add
iret
dec
daa
shl
push
xor
add
jb
mov
add
jnp
lods
adc
add
ja
push
mov
pop
iret
add
cmp
push
inc
mov
sub
xor
cmp
push
pop
mov
lea
movzx
cdq
loopne
(bad)
retf
adc
push
test
jl
cmps
mov
or
pop
dec
or
les
mov
and
(bad)
or
dec
addr16
ret
xchg
enter
pop
pop
sbb
or
adc
not
inc
jne
adc
sbb
add
ret
dec
mov
gs
(bad)
mov
xor
mov
dec
cmp
(bad)
jo
inc
sbb
fld
xor
push
add
jbe
adc
add
or
jnp
adc
bound
outs
arpl
add
jmp
adc
add
sub
inc
das
mov
shl
pop
mov
pop
or
fmul
xchg
add
in
fadd
in
test
fbstp
mov
test
xlat
gs
add
scas
out
and
in
add
js
push
inc
inc
sbb
jg
push
pop
lea
push
push
ficom
imul
retf
clts
ret
pop
or
sub
pmulhuw
push
add
and
or
add
ja
mov
and
xchg
loopne
test
fdiv
mov
or
add
pop
add
fsub
iret
test
mov
sbb
inc
iret
and
es
jnp
mov
sbb
inc
bound
leave
out
push
rol
jns
iretw
dec
loope
test
imul
les
adc
andps
fistp
inc
xor
add
add
add
push
in
push
add
inc
xor
pop
jmp
mov
mov
mov
mov
mov
mov
dec
std
(bad)
push
or
sbb
cmp
inc
mov
(bad)
(bad)
jmp
in
(bad)
in
(bad)
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
(bad)
(bad)
(bad)
(bad)
(bad)
(bad)
fdivrp
(bad)
fdivr
(bad)
(bad)
fcos
fdivr
xlat
call
call
call
call
call
call
call
(bad)
stc
outs
xor
iret
xor
dec
dec
dec
dec
stc
or
mov
enter
jbe
test
dec
sti
mov
shl
out
js
dec
repz
call
jo
xchg
out
ds
jmp
div
mov
repnz
cmps
jge
out
hlt
push
or
and
in
inc
push
fcomi
xor
shl
jmp
pop
aad
fldcw
retf
je
push
test
ins
lahf
data16
xlat
push
push
push
or
xor
iret
shr
in
cmp
xor
inc
jge
iret
repz
lods
mov
les
data16
lock
out
nop
dec
out
jge
iret
mov
lock
lahf
data16
(bad)
push
(bad)
ror
or
adc
ja
cs
mov
mov
ret
leave
nop
pop
pop
sbb
sub
fld
push
mov
ficomp
cmp
add
pop
bnd
dec
mov
push
sbb
dec
les
mov
rol
and
js
loopne
add
xchg
call
inc
add
jge
cmps
xchg
pop
mov
loop
loop
sub
shr
in
jmp
jbe
or
push
rol
mov
pop
dec
dec
es
or
jg
leave
mov
jne
adc
inc
jb
in
repz
aam
adc
test
push
add
xchg
pop
dec
sbb
jle
cs
add
nop
rcl
imul
sbb
ret
ja
aaa
mov
ins
dec
xchg
jg
jbe
dec
adc
xchg
pop
cs
(bad)
out
add
mov
nop
add
pop
add
inc
fdiv
and
repnz
inc
mov
adc
out
adc
push
mov
out
add
adc
stos
sub
adc
add
mov
push
inc
test
test
add
dec
jecxz
jbe
add
add
add
loop
mov
mov
push
add
sbb
mov
push
add
aaa
mov
mov
mov
mov
mov
mov
xchg
cmp
mov
mov
mov
mov
xchg
and
loopne
(bad)
jmp
mov
mov
mov
add
push
mov
xor
cmp
pop
rcr
add
in
inc
inc
inc
mov
inc
inc
inc
inc
jp
mov
std
(bad)
mov
mov
dec
xor
call
mov
mov
out
fcmovb
aam
jb
push
push
js
iret
repz
call
je
dec
repz
sbb
js
ds
add
lods
repz
data16
and
inc
js
cwde
(bad)
sahf
out
inc
int3
call
push
mov
(bad)
test
mov
out
jge
mov
sub
cmp
enter
sub
mov
push
sbb
fcomp
or
jnp
mov
ins
push
js
fsubr
ins
sub
out
in
push
hlt
cld
sbb
add
jnp
out
imul
(bad)
int
mov
mov
les
push
shr
fldcw
inc
adc
and
push
xor
cmps
mov
pop
and
lock
push
cmp
jge
jmp
cs
callw
(bad)
cmps
push
sbb
(bad)
and
sahf
int
mov
into
xor
add
cld
or
mov
push
inc
pop
and
sbb
das
sub
out
pop
hlt
add
ret
cld
push
or
add
push
inc
mov
inc
add
shl
cs
mov
pop
test
adc
cmp
cmp
pushf
test
sub
push
sbb
fadd
inc
dec
ins
fisttp
dec
ror
inc
(bad)
sar
pop
add
mov
cwde
dec
mov
xchg
scas
nop
call
or
scas
add
out
sub
pop
pop
(bad)
add
mov
add
femms
xchg
xchg
nop
dec
jl
enter
or
or
or
or
and
mov
popa
in
xor
and
js
mov
cmps
xchg
push
pushf
or
out
and
icebp
jns
pop
data16
fwait
test
pop
pop
add
pushf
mov
lahf
js
(bad)
push
(bad)
les
sub
adc
hlt
pop
push
add
arpl
cmp
cs
ss
je
push
cmp
stos
addr16
out
push
and
and
add
pushf
fdivr
jmp
pop
cld
mov
andps
nop
or
or
lock
test
sar
add
push
and
sbb
fistp
add
push
in
sbb
adc
push
popa
add
push
sub
add
and
ja
scas
add
(bad)
push
push
icebp
jno
cmp
je
jl
pop
add
and
add
lods
sub
and
xchg
sbb
pop
add
and
jne
xor
and
lock
xor
cmp
adc
and
pop
and
jmp
mov
jmp
pop
aas
add
iret
adc
push
push
or
or
nop
xor
daa
imul
or
dec
inc
call
or
cmp
ins
push
sub
push
xchg
daa
push
xchg
mov
inc
push
inc
fcmovnb
or
daa
push
jo
daa
cs
call
ror
mov
dec
outs
enter
lock
daa
dec
push
jo
imul
and
invd
fnstsw
push
mov
loop
add
sbb
das
loopne
mov
test
dec
pop
mov
cmp
pusha
out
mov
pop
ror
mov
cdq
mov
out
clc
xchg
div
test
lahf
inc
adc
popa
pop
jmp
inc
retf
data16
jl
cmps
nop
imul
xchg
jp
push
cld
inc
aam
mov
retf
pop
adc
cmp
mov
xor
xchg
xor
out
sub
and
and
push
mov
mov
push
dec
sub
aaa
shl
push
cmp
cmp
inc
adc
add
mov
or
test
gs
les
cli
adc
mov
or
add
cmp
jl
dec
and
push
mov
xor
imul
inc
and
aad
pop
aaa
push
or
sub
(bad)
fisub
icebp
inc
jmp
nop
pop
fiadd
mov
lock
retf
mov
ja
and
sbb
adc
dec
es
fs
sbb
inc
and
int
xor
aad
jmp
pop
and
and
call
dec
dec
jne
scas
push
cmp
cmp
mov
sub
and
pop
test
add
add
dec
adc
push
ror
mov
int
or
adc
xor
shl
adc
sbb
shl
sub
add
pop
dec
sub
scas
push
push
adc
and
add
out
add
mov
jns
inc
or
nop
adc
fidivr
pop
mov
daa
mov
push
movs
add
je
sub
mov
sbb
dec
jecxz
je
dec
xchg
or
mov
pusha
and
cld
ja
xchg
mov
dec
sbb
or
inc
jge
bound
and
adc
inc
fisub
cmp
xor
or
sub
mov
fisubr
les
push
add
int3
pop
pop
add
pop
sub
sub
or
ss
cmp
adc
xor
sbb
nop
rol
div
(bad)
jmp
or
push
fisttp
and
or
repz
and
mov
adc
cmp
push
cmp
loopne
scas
nop
dec
xchg
test
fmul
clc
mov
mov
arpl
xor
mov
inc
mov
add
ds
add
or
loop
jp
dec
fbstp
popf
and
test
lods
inc
add
xchg
jp
pop
jge
push
push
jp
and
or
mov
jo
pop
sbb
xchg
pop
push
jbe
aas
push
pop
pop
lds
adc
cmp
les
test
sbb
sub
hlt
jae
mov
mov
(bad)
cmp
adc
inc
cmp
xchg
inc
pop
adc
add
sbb
ds
mov
or
push
mov
inc
lea
push
mov
pop
inc
inc
lock
jno
dec
rcr
pop
addr16
in
dec
mov
mov
lock
add
test
inc
jmp
jl
inc
fs
adc
jle
adc
inc
scas
dec
push
sub
ret
iret
dec
adc
outs
imul
or
adc
dec
xor
mov
ficom
clc
test
js
dec
inc
(bad)
jae
leave
mov
or
daa
fcmovb
add
mov
enter
cmp
ja
test
inc
popa
and
not
push
add
push
add
outs
pop
sub
mov
sar
jb
jne
mov
jmp
cmp
jne
or
test
fmul
jecxz
add
mov
les
js
push
sub
jmp
push
jne
push
rcr
inc
test
lods
jo
in
sti
stos
cmp
sub
je
mov
sbb
xor
popw
and
call
mov
xchg
pop
mov
je
mov
mov
push
sbb
mov
ret
repnz
stos
xor
adc
xchg
popa
mov
or
pushf
push
or
clc
add
inc
xchg
adc
mov
clc
inc
push
adc
dec
inc
sub
scas
loopne
xchg
sar
and
inc
in
sub
push
fist
cli
add
and
push
aas
cmp
je
sub
out
scas
fild
or
add
or
jecxz
cs
mov
inc
pop
in
dec
in
lea
std
js
mov
lock
and
jo
or
xor
jno
test
push
cs
adc
add
xor
xchg
test
mov
outs
or
outs
or
jl
cmp
lahf
sub
inc
rol
xchg
jge
push
cmp
mov
xor
mov
pop
pop
or
in
loopne
bound
cmp
gs
xor
sar
adc
jle
inc
jo
dec
fucomi
daa
dec
xchg
push
xor
add
ror
imul
dec
in
sbb
(bad)
mov
test
popa
sub
or
aam
dec
fst
jbe
push
cmp
jge
cwde
push
add
movs
mov
and
(bad)
or
prefetchwt1
or
ret
xchg
push
(bad)
cmp
(bad)
test
and
jge
cdq
shr
arpl
mov
or
inc
and
rol
push
xchg
push
inc
enter
or
loope
sbb
jl
pop
adc
mov
jbe
dec
fmul
and
push
push
add
add
fild
lock
mov
push
push
pop
inc
cmp
and
inc
push
mov
cdq
sahf
xchg
dec
and
sbb
fld
add
pop
call
sbb
popa
cmova
loop
inc
or
lock
dec
movs
mov
mov
jmp
or
pop
inc
ret
sbb
mov
clc
mov
or
lea
pop
push
fisubr
fdiv
test
jb
and
fst
mov
mov
mov
jnp
out
inc
jo
jl
mov
jnp
add
mov
adc
pop
pop
adc
dec
jne
adc
aaa
call
cmp
in
jns
cmps
mov
out
cld
out
jp
call
pop
adc
cli
les
repz
add
mov
cmp
cs
shr
jg
mov
cs
jge
mov
sub
stos
shr
ins
mov
xchg
add
or
ret
(bad)
repz
cmps
mov
jnp
xchg
pop
scas
cmp
cmp
or
aas
fld
mov
inc
mov
or
adc
add
xor
sti
cmp
je
cmp
pop
sbb
popf
and
xor
cmp
push
js
mov
sub
add
sbb
adc
daa
in
push
add
xor
imul
mov
mov
es
lds
mov
push
adc
or
cmp
mov
mov
test
push
(bad)
das
xchg
and
push
push
test
inc
mov
add
add
sbb
clc
jne
mov
jns
cmp
add
fadd
pop
pop
or
xchg
fidivr
sub
outs
xchg
aam
mov
add
call
jno
add
push
cmp
add
cmp
pop
cdq
pop
pop
out
push
push
ror
xor
inc
xor
push
fld
imul
push
and
out
push
sbb
loop
pop
retf
lods
fwait
imul
out
or
stos
xor
xor
loop
(bad)
fdivr
das
mov
aaa
test
stc
cmp
jne
xor
mov
scas
jno
pop
mov
dec
pop
aam
inc
adc
sbb
inc
imul
in
mov
sahf
fld
and
repz
lea
lea
or
lock
mov
jmp
push
and
dec
or
fld
stc
fstp
fwait
jmp
inc
and
pop
pusha
addr16
out
and
retf
sub
and
jns
sub
imul
ins
mov
xor
push
ins
pop
sub
push
adc
rcl
push
mov
pusha
sbb
jmp
pop
dec
or
fwait
pop
adc
or
pop
sub
sub
or
xchg
cmp
clc
mov
and
xchg
push
xchg
loopne
pop
push
xor
push
cmp
dec
pop
enter
xor
xor
mov
xchg
fadd
xchg
dec
cmp
xchg
test
add
repz
and
add
xchg
jecxz
mov
mov
xchg
hlt
xor
jo
mov
rcr
test
mov
pop
mov
fwait
mov
cmp
sub
xor
pushf
push
retf
pusha
mov
jmp
push
aad
es
or
and
loopne
in
jae
ss
in
mov
push
jge
movs
mov
add
inc
inc
add
ins
sub
push
dec
mov
or
dec
retf
mov
and
cmps
adc
inc
shl
or
int3
push
arpl
push
jne
mov
call
pop
pop
dec
add
and
add
push
lahf
repnz
in
addr16
push
add
xor
mov
addr16
xchg
lea
fcmovnb
inc
inc
or
mov
add
xor
push
fwait
cmp
fbld
inc
xor
adc
jmp
xchg
xor
mov
mov
mov
xor
jmp
and
loopne
jo
inc
ins
cmc
sub
inc
ss
mov
mov
sub
aam
or
cli
jmp
and
pop
adc
mov
inc
fdiv
ins
mov
dec
push
movs
adc
icebp
les
mov
popa
(bad)
arpl
(bad)
push
pop
outs
loope
push
imul
add
into
adc
cmp
add
add
sub
xchg
or
and
cmp
inc
cmc
sar
and
or
jmp
jbe
loopne
push
push
sub
or
pop
pop
pop
mov
outs
lock
mov
or
sub
rcr
xchg
or
adc
or
sub
iret
mov
add
and
push
mov
adc
arpl
mov
push
retf
and
mov
rol
cli
mov
scas
xchg
pop
mov
outs
adc
mov
retf
and
mov
xchg
push
ins
lock
mov
mov
xor
add
dec
ret
jecxz
fwait
ins
imul
or
and
popa
inc
faddp
les
sbb
lods
xor
out
cmp
sbb
inc
add
pop
(bad)
cmc
push
enter
imul
dec
mov
and
inc
movs
push
mov
(bad)
or
dec
add
test
push
or
push
or
xor
(bad)
mov
sub
cld
jbe
(bad)
push
js
daa
lock
lock
pop
enter
lock
inc
movs
add
ss
cld
sbb
and
xchg
lock
jnp
mov
leave
cmp
xchg
jmp
jecxz
jno
loopne
inc
jbe
rcl
mov
mov
pop
mov
test
dec
inc
imul
push
scas
ins
hlt
imul
sbb
adc
pop
cwde
adc
mov
xor
mov
outs
or
icebp
pop
hlt
and
sub
imul
test
pop
lea
pop
mul
pop
mov
enter
jge
clc
push
enter
push
pop
adc
jbe
clts
aam
adc
lds
pop
mov
(bad)
ficom
ins
rol
xor
add
push
scas
inc
push
pop
pop
xchg
adc
push
rcr
aad
pusha
pop
jns
mov
or
or
and
sub
mov
mov
aaa
fbld
test
call
mov
sbb
xchg
pop
or
addr16
sub
sub
push
adc
outs
aaa
sub
fdivrp
fwait
call
pop
jmp
cmp
je
mov
test
jbe
fsub
fcom
adc
pushf
(bad)
jge
cmp
push
xchg
movs
xor
or
adc
test
nop
jbe
cmp
cmp
or
sbb
or
or
or
jl
call
sub
outs
sbb
test
fistp
leave
sbb
mov
aam
aaa
dec
add
add
in
push
and
ret
push
jl
fild
std
cmp
test
sub
and
xchg
xchg
push
push
in
mov
jle
scas
ins
pop
scas
xchg
add
daa
es
mov
sub
sbb
adc
sub
add
xchg
lods
fmul
pop
and
push
scas
mov
fwait
mov
aad
push
and
addr16
and
cld
push
icebp
test
fs
inc
cmp
mov
(bad)
mov
jecxz
pop
cmp
stos
pop
ret
and
jbe
mov
or
mov
sahf
test
or
inc
push
gs
neg
mov
mov
adc
push
sub
or
mov
adc
xchg
enter
inc
(bad)
push
mov
dec
xchg
sbb
in
imul
jg
bts
das
or
nop
imul
int3
ror
dec
xor
or
or
adc
and
mov
mov
mov
sub
xchg
jne
cmp
xchg
ss
push
js
xchg
scas
cmp
inc
jo
xchg
pop
fs
pop
daa
xor
pop
mov
dec
addr16
je
or
mov
inc
xchg
xlat
mov
pop
cmp
je
adc
(bad)
mov
pop
icebp
jl
stos
jae
mov
jb
xor
outs
mov
popf
cmps
jmp
stos
add
sbb
or
out
cmp
mov
add
pop
pop
pop
sbb
adc
push
pop
add
jp
jmp
shr
add
jbe
ds
add
add
cs
pop
ja
cmp
dec
mov
ss
cmp
cmp
mov
xor
xchg
sbb
test
sbb
pushf
test
ins
sub
mov
fld
adc
je
push
fs
test
test
or
jae
ficom
dec
push
pop
(bad)
xor
or
xor
adc
xor
sbb
dec
push
pop
mov
ins
xlat
and
ror
loope
retf
cmp
push
add
ds
in
dec
mov
fs
mov
dec
jmp
sub
push
loop
cmp
push
scas
dec
jl
aas
ins
mov
enter
popf
sar
je
push
mov
xor
cmps
fmul
push
push
outs
retf
mov
push
jmp
or
sahf
sub
push
(bad)
cwde
inc
pop
lods
(bad)
mov
cmp
ins
and
mov
inc
or
xor
add
fisubr
dec
push
movaps
jmp
push
or
mov
push
fmul
push
mov
test
adc
mov
push
cli
adc
adc
(bad)
sbb
xchg
clc
or
mov
xchg
fmul
push
push
int3
xchg
les
xlat
retf
popf
sbb
push
idiv
xchg
pop
data16
or
mov
pop
xchg
in
cmp
push
cmps
mov
xchg
jle
jne
in
out
adc
mov
cmp
jne
sub
loopne
in
mov
xchg
and
sbb
xor
push
mov
pop
pop
and
leave
jno
mov
fbstp
test
push
cmp
push
je
or
xchg
sub
(bad)
std
dec
inc
xchg
out
ret
jmp
and
arpl
cs
inc
push
sbb
mov
je
jecxz
jbe
pop
scas
inc
dec
push
push
dec
dec
inc
mov
sub
xchg
test
inc
mov
adc
dec
xlat
mov
jl
cmps
out
push
add
or
inc
jbe
cmp
jne
lds
or
xchg
mov
loope
rcl
ret
sbb
inc
inc
shl
int3
mov
mov
cld
nop
add
inc
add
ror
iret
and
dec
add
jle
pusha
add
jecxz
cmps
sub
test
mov
mov
cmp
cmp
xchg
nop
(bad)
and
mov
jp
mov
mov
dec
mov
mov
adc
adc
push
imul
or
repnz
cmps
dec
mov
dec
loopne
js
sub
push
push
fiadd
cmp
movs
and
(bad)
xchg
jg
adc
pop
and
loopne
and
mov
push
pop
push
sbb
dec
fnsave
dec
xor
cs
das
les
mov
rol
dec
mov
rol
stos
add
inc
in
sub
dec
add
push
xchg
rol
mov
add
push
inc
in
xor
fwait
cmp
outs
inc
cmp
mov
pop
je
adc
cmp
and
test
daa
lea
mov
mov
ds
fsub
inc
push
test
dec
jecxz
adc
inc
jbe
aaa
inc
aam
jb
mov
cli
clc
dec
and
mov
cmp
bound
imul
cli
cmp
mov
jnp
jmp
dec
jmp
ss
(bad)
mov
imul
or
or
mov
cwde
js
cmps
test
rol
mov
pop
mov
cmp
in
sub
scas
(bad)
xor
loop
cmp
dec
adc
lods
retf
outs
dec
add
add
mov
sbb
dec
fsub
jmp
in
and
inc
sub
jmp
push
sub
adc
and
pop
jge
ins
es
lea
dec
stos
movs
xchg
xor
pusha
(bad)
or
cli
les
pop
leave
aam
inc
test
(bad)
jl
mov
pop
retf
inc
call
bound
add
pcmpgtb
fcom
sub
add
test
jnp
add
or
cmp
inc
(bad)
hlt
leave
hlt
mov
sbb
inc
pop
and
push
add
pop
mov
inc
cmps
inc
add
push
in
jb
sub
dec
push
and
jno
and
nop
sbb
popa
and
jne
adc
or
mov
outs
(bad)
mov
(bad)
mov
retf
or
retf
loope
daa
xchg
test
test
inc
shr
mov
jns
(bad)
stc
or
push
mov
lock
mov
cmp
je
and
fcomp
sbb
xchg
ins
inc
adc
ss
(bad)
(bad)
daa
mov
jle
inc
leave
mov
adc
inc
in
add
pop
(bad)
jmp
sbb
sar
push
add
mov
add
pop
jp
sbb
inc
outs
xchg
dec
adc
sub
adc
ins
add
fbstp
pop
ret
call
sahf
or
or
mov
stos
dec
adc
jmp
pusha
movs
mov
add
add
pop
(bad)
ret
add
mov
xchg
pop
cmp
es
sub
pop
push
pop
(bad)
rcr
add
mov
pop
(bad)
mov
or
push
cmp
je
jo
int3
adc
pusha
imul
dec
push
mov
inc
push
and
jns
or
add
test
push
or
jp
sbb
mov
sbb
fisubr
mov
dec
iret
fstp
pusha
rol
int
push
pop
loope
dec
shr
xor
je
scas
jge
dec
jo
ficom
loopne
pop
lahf
dec
sbb
inc
dec
xor
inc
jecxz
adc
scas
xchg
hlt
je
cmp
mov
mov
repz
test
int
repnz
mov
out
pop
ds
cmp
je
int
inc
ins
jp
push
adc
or
sbb
mov
xchg
mov
pop
adc
je
mov
push
sahf
or
pop
repnz
pop
push
add
or
jmp
pop
dec
xor
fadd
pusha
or
scas
mov
cmp
jo
add
popf
enter
iret
push
in
cmp
and
xor
or
xor
test
mov
add
sbb
pop
iret
std
pop
or
xchg
int3
add
jmp
sub
pusha
iret
dec
ds
adc
pusha
add
add
push
cmps
inc
add
push
bound
dec
aad
push
pop
cmps
int
bound
mov
popa
leave
and
cs
push
ret
in
push
or
movs
cmp
add
mov
xor
adc
sbb
call
aam
aas
or
mov
xchg
cmp
shufps
dec
and
and
mov
and
cmp
and
imul
and
pop
pop
xchg
push
pop
xchg
or
pusha
mov
ss
cmp
data16
inc
inc
push
(bad)
pmaxsw
nop
mov
xchg
dec
test
sub
ret
cmp
je
sbb
mov
jb
pusha
push
ret
call
loop
push
xchg
xor
cwde
mov
popf
pop
pushf
xor
xor
push
(bad)
jno
mov
or
sub
imul
mov
push
fnsave
shl
leave
je
clc
sti
ins
or
mov
loopne
idiv
rol
ret
imul
test
jle
mov
(bad)
pop
in
in
xchg
mov
mov
movs
sbb
fnstcw
and
xor
or
lahf
fsubr
cld
or
and
pop
loopne
pop
adc
mov
dec
stc
inc
loope
popf
cmp
test
push
ror
jbe
sbb
push
add
sub
pushf
les
sbb
adc
xor
push
rcr
pop
sub
push
test
adc
iret
cld
sti
jno
cmc
mov
push
add
pusha
call
sar
dec
pop
ror
cmp
cld
add
mov
fisubr
inc
xchg
es
ret
cs
cmp
push
loop
push
outs
jmp
push
and
jecxz
adc
enter
fidiv
fsubr
cmp
leave
pop
push
pushf
scas
fwait
and
fiadd
inc
pop
mov
inc
sbb
fdiv
bound
pop
movs
or
les
out
ficom
jl
out
jne
add
and
pop
or
mov
ror
mov
sub
es
aam
(bad)
jle
mov
inc
sbb
add
push
popa
inc
mov
mov
push
(bad)
sbb
cli
xchg
loopne
sub
push
clc
mov
inc
ins
or
aaa
push
sbb
jecxz
test
dec
popa
dec
sbb
jp
mov
das
test
dec
leave
add
pop
dec
pop
adc
adc
pop
adc
aas
add
lds
in
xor
mov
xor
cmp
push
pop
leave
sub
mov
sub
or
jmp
gs
push
js
mov
mov
mov
popa
bound
sub
arpl
add
aad
or
test
mov
fadd
jl
rol
mov
scas
add
lods
cmp
add
adc
pop
sbb
or
mov
push
push
sahf
jne
push
retf
lock
test
ja
jmp
or
in
call
push
add
adc
adc
or
(bad)
pop
adc
adc
xchg
sbb
sbb
sbb
inc
xchg
add
sbb
push
or
popa
dec
loop
mov
mov
mov
je
adc
push
sbb
call
add
scas
pop
fmul
fild
fsubp
mov
daa
sub
ror
(bad)
pop
jo
lea
frstor
fcom
push
fucomp
adc
or
dec
mov
lea
pop
sub
inc
xor
clc
fst
je
cwde
jl
mov
push
ins
push
mov
and
cmp
push
dec
sbb
mov
add
push
dec
leave
or
or
or
dec
stc
es
add
add
cwde
dec
sub
hlt
or
dec
sub
(bad)
mov
mov
imul
rol
cmp
jne
add
pop
rcl
shl
pop
mov
sbb
and
or
or
mov
pop
lea
mov
cdq
mov
(bad)
loope
shr
sub
lahf
shl
mov
js
xchg
sub
fst
and
add
jle
or
inc
mov
inc
push
or
add
ins
sbb
inc
mov
ja
sub
mov
add
add
add
sbb
ins
je
push
sahf
pop
loopne
or
ss
jmp
sbb
ss
or
aas
and
rol
pop
(bad)
cmp
fs
xor
sub
sub
cmp
push
out
fmul
es
and
jle
sbb
sub
cmp
(bad)
aaa
call
rol
sub
das
in
or
or
jne
inc
in
push
xor
add
jae
ret
retf
cmps
ficom
cdq
dec
sbb
mov
leave
(bad)
call
sub
mov
push
adc
push
dec
pushf
add
push
xor
mov
mov
jne
aaa
sub
ror
add
and
jnp
adc
jb
je
jbe
lods
add
mov
mov
push
ss
jp
add
sbb
or
(bad)
sti
and
pop
in
push
adc
fisub
in
out
mov
jmp
mov
or
in
sbb
pusha
xor
int3
test
mov
int3
sbb
add
ror
mov
adc
mov
sub
fsubr
mov
pusha
bound
sub
stos
mov
push
fsubr
outs
inc
jp
cwde
nop
daa
fadd
loopne
xchg
test
sbb
and
xchg
mov
xor
adc
push
mov
inc
or
xchg
xchg
lea
push
jle
out
lods
cli
inc
int
sahf
sti
jmp
shl
mov
jo
inc
hlt
lds
pop
adc
ficom
scas
adc
mov
xchg
aas
add
xchg
fld
or
push
ret
adc
push
sbb
push
cmp
mov
pop
push
gs
push
adc
pop
adc
js
jne
mov
neg
add
stos
js
call
and
loopne
adc
fld
mov
(bad)
xor
add
loopne
mov
jnp
iret
mov
sbb
push
or
sub
jecxz
rcl
sub
in
push
(bad)
dec
sbb
push
loope
(bad)
adc
pusha
popf
aam
and
and
dec
out
add
and
out
rcl
dec
push
pop
push
popf
les
add
push
pusha
jo
cmps
jae
hlt
inc
and
mov
mov
dec
adc
push
or
sar
mov
movs
inc
or
gs
out
es
pop
lock
jg
mov
jae
mov
or
shl
add
dec
lods
jmp
inc
rol
in
or
push
iret
movs
int
adc
fbstp
add
or
mov
int3
enter
sbb
xchg
dec
or
rol
ds
data16
inc
outs
sub
push
fisub
xor
push
add
rol
or
mov
lahf
push
movs
or
sub
adc
jbe
ins
es
popa
cmp
or
adc
xchg
push
sub
in
mov
or
rcr
arpl
adc
ds
adc
(bad)
nop
and
or
jmp
or
retf
add
pop
or
repz
pop
add
jmp
sub
push
add
icebp
loope
jge
or
pop
inc
pop
jl
add
xor
cmps
adc
or
leave
push
sbb
cmp
aam
movs
lea
push
or
arpl
in
sub
sahf
mov
jmp
mov
aam
mov
loop
inc
jae
push
stc
mov
jmp
add
(bad)
stc
fiadd
imul
sbb
jmp
jne
ror
sub
dec
mov
pop
xchg
loopne
ss
and
inc
push
inc
cld
les
push
dec
pushf
xchg
ins
sbb
cmp
and
test
add
cmp
in
repz
cmp
mov
into
js
dec
dec
jle
xchg
pushf
iret
ins
shr
add
rol
jg
maxps
fild
adc
xor
jo
push
pop
mov
repnz
and
sub
bound
jbe
(bad)
sub
dec
je
add
pop
jmp
ret
ss
mov
dec
pop
add
inc
stos
dec
pop
repnz
sub
lea
cmps
rcl
jle
push
(bad)
jmp
loopne
dec
jmp
and
and
adc
inc
sbb
cmp
push
jl
int3
add
and
xor
mov
add
pop
adc
and
cmp
push
pusha
mov
xchg
add
lods
sbb
adc
mov
sub
inc
rol
je
test
add
sti
xor
jge
clc
jbe
jnp
imul
shld
sub
in
cmps
inc
cs
mov
(bad)
fsubr
sub
xor
out
xchg
or
sahf
mov
mov
push
sbb
mov
push
neg
mov
xor
pop
push
push
push
ja
mov
rol
inc
add
lods
xchg
in
push
sub
shr
adc
int
jo
add
cmp
inc
pop
leave
jecxz
or
push
or
movs
mov
xor
cmp
movs
ins
dec
mov
(bad)
push
rol
mov
hlt
sub
push
cmp
xchg
or
ror
sbb
and
fisubr
add
sub
int3
pop
inc
push
push
xchg
xor
or
std
sub
mov
aam
aam
add
pop
cmp
inc
push
xor
jg
(bad)
jg
mov
dec
jle
or
inc
xor
cmp
add
push
enter
jae
clc
movs
aam
and
add
fimul
dec
imul
push
mov
lock
and
xchg
xor
ror
or
addr16
cmps
mov
push
(bad)
jno
sbb
ins
and
xchg
pop
push
pop
and
rcl
xor
sti
sar
mov
mov
(bad)
jl
xor
sub
pop
or
push
addr16
add
pushf
xchg
rcl
inc
sub
dec
inc
fild
cmp
mov
jp
or
loopne
out
dec
call
test
ret
pop
sbb
loope
xchg
out
mov
xchg
dec
scas
in
sbb
lahf
add
mov
push
xchg
inc
cwde
and
fiadd
inc
mov
(bad)
dec
xchg
inc
ds
fs
cmp
sub
cmps
adc
pop
fld
mov
rcr
dec
or
dec
pop
pop
stc
mov
adc
loopne
cdq
push
dec
adc
xor
mov
call
mov
rcl
add
loopne
push
aam
in
push
pushf
rcl
push
pop
mov
adc
pop
adc
adc
push
mov
sbb
out
outs
and
jbe
add
xor
nop
add
dec
retf
jne
sbb
and
xor
dec
ret
ins
mov
add
xlat
retf
and
or
lds
addr16
adc
aam
jns
mov
jb
push
adc
(bad)
pop
ret
test
popf
mov
outs
mov
jb
das
pop
jmp
and
cmp
sub
cmp
rol
data16
adc
xchg
xchg
jbe
jle
adc
or
sbb
es
(bad)
xor
rol
bound
jne
test
add
nop
ds
or
mov
je
sbb
fld
clc
fs
pushf
pop
push
inc
loop
and
cwde
leave
mov
pop
jl
jne
dec
popa
pop
pop
ins
and
lods
dec
jb
shl
retf
fcomp
dec
data16
je
jge
(bad)
daa
or
pusha
add
sub
pop
mov
mov
dec
push
mov
mov
xor
sub
dec
sub
int3
ja
push
aad
xchg
dec
inc
test
mov
mov
pusha
or
jno
mov
jg
mov
add
or
xchg
cmp
out
pop
mov
mov
sbb
sub
aam
in
test
test
pop
dec
addr16
(bad)
ins
ret
xchg
sbb
int3
push
das
adc
cmc
sub
dec
xchg
sti
clc
test
xor
inc
pop
cmp
adc
mov
sbb
or
mov
add
jmp
je
adc
movs
mov
movs
sub
mov
fdiv
or
loopne
jo
sub
xchg
push
loop
push
inc
or
cmc
(bad)
xchg
adc
push
xor
add
or
fdiv
dec
lock
sub
fwait
push
js
sub
aad
outs
mov
cwde
hlt
or
dec
dec
push
mov
mov
add
adc
mov
xor
add
mov
mov
sub
or
or
lods
pop
sbb
and
jo
sbb
sbb
fs
xchg
or
mov
or
lods
xchg
(bad)
jne
xor
je
call
and
clc
stos
jo
je
push
repz
mov
mov
ins
push
nop
sbb
push
push
sub
add
inc
sub
xchg
push
outs
xor
cld
xchg
shr
jle
pop
or
mov
sub
and
push
inc
rcl
adc
adc
adc
inc
dec
fmul
sub
sbb
push
jecxz
mov
test
fisubr
sbb
push
mov
xor
in
or
int3
call
shr
test
mov
lea
movs
add
xlat
push
push
nop
inc
div
pop
lock
cwde
(bad)
aad
xchg
push
sar
xor
call
test
out
and
push
daa
add
push
mov
shl
or
pop
lock
movs
inc
(bad)
rcl
aas
jge
jmp
fcomp
mov
adc
inc
and
or
adc
pop
(bad)
xor
enter
hlt
push
xor
js
add
mov
lock
sbb
inc
jg
mov
jmp
mov
jg
add
push
add
ins
cmp
push
add
gs
cmp
fisttp
mov
or
imul
sub
fisub
sbb
sbb
shl
jl
xor
and
outs
add
sbb
ret
add
fs
mov
jle
or
je
add
jmp
bnd
in
aam
xchg
dec
nop
int3
fwait
pop
(bad)
mov
sbb
shl
adc
rol
or
out
data16
dec
push
push
dec
sbb
es
inc
sbb
xchg
xor
add
sub
clc
add
call
std
jmp
sbb
retf
add
loope
or
rcl
sysret
out
movs
push
(bad)
fidiv
add
push
adc
jbe
gs
outs
cmp
js
pop
xchg
adc
add
in
imul
and
test
pop
hlt
aad
push
dec
adc
jecxz
retf
je
inc
and
mov
add
jmp
imul
bound
(bad)
sbb
loop
daa
jne
mov
push
xchg
outs
mov
sbb
into
inc
mov
jne
xor
or
dec
cmp
sub
mov
inc
retf
inc
and
xor
loope
pop
(bad)
add
sub
adc
es
push
inc
push
push
sbb
adc
push
mov
movs
xor
xor
test
xchg
sbb
adc
mov
pop
shr
ja
push
inc
scas
mov
adc
std
aam
repnz
sbb
scas
loopne
push
and
imul
mov
push
add
sbb
scas
mov
nop
mov
add
test
or
jg
inc
or
sub
sbb
inc
shl
cld
xchg
div
push
and
retf
(bad)
ins
mov
sbb
mov
or
mov
sbb
ffreep
mov
cmp
adc
inc
loopne
xor
inc
jecxz
and
aam
fdiv
fisttp
dec
icebp
pushf
cmp
ds
lds
stos
mov
sbb
adc
cld
push
jne
es
or
shl
add
mov
movs
fmul
leave
pop
js
dec
or
mov
add
cwde
retf
xor
pop
test
not
sbb
retf
es
dec
ror
xor
nop
sub
frstor
jbe
(bad)
pop
jge
outs
jmp
nop
addr16
xor
outs
sbb
gs
and
cmp
adc
loopne
out
fwait
test
inc
cmp
mov
neg
jb
ins
shr
mov
lahf
jmp
pop
mov
pop
pop
in
cmp
xor
xor
(bad)
xor
std
xor
pop
test
mov
(bad)
jns
out
xchg
into
ja
jmp
push
push
loope
sahf
out
jne
daa
xchg
out
add
bound
lahf
shr
inc
add
mov
mov
sbb
push
dec
cmp
setle
cmp
shl
inc
dec
call
mov
add
cmp
mov
movs
mov
xor
and
or
lods
repnz
mov
jmp
xor
in
mov
ss
xor
inc
lods
sub
dec
std
dec
stos
sub
or
mov
xchg
fcom
shl
enter
add
inc
add
in
stos
sub
aaa
pop
xor
push
xor
cld
mov
je
adc
adc
imul
or
in
jmp
aaa
cmp
or
xor
lahf
sbb
shl
mov
jns
dec
addr16
mov
or
sub
in
leave
mov
jbe
lock
add
enter
mov
and
jbe
popf
mov
add
test
ds
cmc
aad
gs
sub
fyl2x
mov
xor
punpcklbw
inc
loopne
cs
jl
push
xchg
add
dec
or
fs
or
loope
xor
pop
add
pop
add
jg
in
jnp
(bad)
lock
scas
and
and
(bad)
cli
cmp
push
pop
ins
xchg
daa
lods
jns
add
ds
and
jle
sub
lods
or
test
jmp
xor
add
jmp
sbb
xor
cmp
inc
in
adc
fwait
popf
push
push
adc
jno
cwde
out
push
mov
mov
leave
sub
xor
icebp
gs
xchg
adc
movs
cs
shr
push
mov
cli
add
not
jnp
mov
cmp
push
dec
sub
mov
shl
aas
(bad)
in
inc
cmp
dec
lods
push
xlat
sbb
and
mov
je
add
(bad)
mov
pop
and
pop
loop
fdivr
fstp
cmp
jne
jge
adc
push
mov
sbb
mov
int3
clc
sub
add
jo
cmp
add
push
mov
sbb
adc
shl
dec
or
dec
aaa
or
cmp
inc
idiv
ins
add
cmp
jge
push
sbb
gs
inc
out
xor
and
sar
iret
mov
inc
outs
sub
jo
pop
xor
and
hlt
div
imul
mov
int
into
xor
test
cmps
jne
cmp
mov
mov
mov
add
cmp
cmp
or
(bad)
cvtdq2ps
sbb
add
pop
idiv
push
popa
jne
push
hlt
scas
add
pop
addr16
arpl
and
pop
test
dec
mov
out
pop
cmps
sbb
adc
out
add
push
cmp
movs
pmulhw
sub
pop
pop
xchg
pop
push
cmps
or
daa
push
nop
push
js
push
add
enter
adc
add
push
xor
mov
add
(bad)
idiv
(bad)
xchg
cmps
or
test
pop
ret
jnp
je
in
and
jbe
sub
movs
xlat
ins
gs
pusha
pop
call
jb
jnp
dec
dec
pop
cmp
push
cld
mov
or
inc
pop
(bad)
pusha
push
out
lods
jne
es
ffreep
cwde
loopne
movs
push
mov
jne
and
dec
sbb
jb
ins
cmps
popa
and
shl
lahf
dec
mov
cmp
int
mov
mov
test
mov
hlt
enter
xor
inc
mov
mov
push
and
xor
pushf
jne
pop
retf
dec
sub
fild
and
shl
lea
and
xor
cs
mov
add
sbb
jo
xor
nop
inc
pop
out
add
sbb
or
in
inc
mov
inc
rcr
adc
mov
jecxz
jne
mov
cmps
add
mov
sub
push
mov
in
inc
call
cmp
ret
nop
xor
or
inc
pop
sbb
inc
es
sbb
add
ret
shr
add
mov
inc
jecxz
fnstenv
push
xor
das
jecxz
xchg
std
or
popa
inc
and
add
in
pop
inc
or
lods
push
mov
inc
and
and
cmps
aam
xchg
jmp
sbb
push
pop
cmps
hlt
mov
(bad)
(bad)
dec
ins
pusha
shl
test
add
add
xchg
jl
test
scas
mov
mov
mov
ins
mov
arpl
xor
pop
cmp
jne
inc
adc
and
jne
mov
pop
xor
enter
push
pusha
test
dec
ss
fsubr
sub
aas
(bad)
jmp
adc
jmp
lds
mov
inc
cld
or
add
cmp
lods
test
(bad)
arpl
sbb
xchg
cmp
add
test
inc
test
jle
ret
inc
lds
sub
ret
cmp
jns
sar
push
in
imul
add
push
or
pushf
ret
daa
or
dec
mov
and
jmp
cmp
xor
adc
(bad)
mov
ss
sbb
mov
pop
sbb
add
or
add
or
add
cmp
clc
mov
push
or
jno
cmp
inc
nop
addr16
pusha
sbb
jmp
jle
cmp
sub
das
imul
mov
and
mov
lea
hlt
fs
jmp
je
or
lods
dec
inc
daa
xchg
push
jnp
clc
in
adc
rcr
dec
cmps
imul
mov
call
and
jle
xchg
xor
inc
mov
je
add
push
add
push
sbb
mov
int
or
push
ins
movs
or
jb
push
push
enter
inc
sbb
fnstcw
call
add
mov
cmc
push
cmp
cwde
mov
inc
add
test
add
call
add
add
shl
aas
inc
mov
inc
(bad)
fstp
xchg
dec
call
mov
out
ror
ins
xlat
inc
pushf
mov
popf
mov
jno
inc
test
or
mov
push
inc
je
and
test
mov
(bad)
aas
push
adc
pop
cwde
xchg
push
add
dec
cmp
mov
xor
xor
pushf
mov
mov
jmp
loopne
pop
and
sub
fisttp
sahf
nop
repz
gs
push
xchg
adc
push
mov
cdq
jb
push
or
test
and
fwait
xchg
push
xchg
les
inc
inc
jmp
nop
and
fwait
jg
imul
adc
sbb
adc
and
cli
cmp
xor
push
adc
pop
ror
and
int
inc
daa
and
fdiv
and
push
out
mov
jae
ins
mov
mov
test
inc
nop
add
mov
in
shl
fist
jecxz
call
loopne
call
out
adc
xchg
clc
xchg
sub
ret
xchg
or
loop
out
sub
cmp
clc
cmp
mov
xchg
aam
inc
popa
jne
or
lea
leave
pushf
pushf
or
imul
cmp
add
mov
or
inc
inc
jle
mov
test
or
test
shl
neg
xchg
ret
adc
adc
mov
xor
jbe
call
dec
jnp
or
or
and
(bad)
pop
adc
mov
or
add
xor
add
test
adc
(bad)
rcr
inc
xchg
cmp
inc
std
test
retf
and
shr
int3
pop
pop
mov
pop
repnz
mov
or
shl
fcom
pusha
adc
mov
cmp
sub
(bad)
repz
pop
arpl
sub
rol
mov
lahf
inc
neg
test
push
sub
sub
mov
lock
dec
push
(bad)
out
pop
lahf
push
(bad)
and
cmp
ret
mov
push
cmp
outs
je
(bad)
out
and
mov
loope
(bad)
xlat
mov
xor
cmp
(bad)
shl
cmps
sbb
sbb
stos
xor
add
pop
pop
adc
pop
mov
xor
dec
xchg
or
push
or
mul
xor
sbb
cmps
arpl
and
sbb
test
movs
inc
cld
cmp
popf
je
jo
cmp
je
fxch
lods
aam
push
mov
and
add
add
add
xchg
push
into
xor
mov
mov
aaa
sar
movs
jo
jmp
pushf
push
sub
xchg
ret
mov
mov
adc
pop
data16
inc
mov
xor
js
mov
je
aad
inc
fisttp
inc
mov
push
adc
xchg
mov
in
push
ss
cmp
mov
imul
daa
add
adc
push
dec
fstp
push
adc
pop
push
inc
sbb
outs
or
cs
and
add
mov
lds
push
fwait
mov
or
push
add
push
sub
retf
out
shr
fs
push
aad
sbb
pop
in
push
add
rcl
push
bound
xchg
push
adc
jp
fld
xor
pop
and
call
shl
lock
or
aam
hlt
adc
dec
sbb
push
xor
retf
(bad)
xor
mov
repz
add
ss
data16
mov
imul
push
shl
dec
and
inc
mov
es
loop
sub
jmp
lods
or
lea
push
cld
out
pop
mov
mov
cmp
test
adc
push
push
mov
ret
pop
xor
or
inc
mov
inc
aam
inc
adc
jmp
call
dec
int3
push
mov
or
adc
jecxz
loop
pop
loopne
cmp
call
mov
pop
retf
ja
sbb
jo
or
imul
adc
or
or
or
mov
pop
call
cmp
adc
xor
mov
xchg
and
test
jno
rcr
push
les
pop
and
cmp
add
test
lock
lods
add
mov
jae
lds
jae
sbb
(bad)
xchg
mov
fwait
jmp
imul
adc
jmp
dec
es
and
push
fiadd
xor
imul
movs
and
jecxz
cmp
pop
mov
int3
jle
les
xlat
sbb
dec
dec
push
xchg
mov
test
push
shr
fdiv
push
mov
or
nop
icebp
in
add
jmp
cmp
es
adc
les
sbb
push
pushf
imul
mov
dec
jo
stos
push
(bad)
jno
imul
cmp
sbb
mov
push
pop
retf
mov
je
in
pop
add
jne
iret
add
rcr
pop
cmp
call
sbb
xor
adc
or
sbb
pushf
xor
pop
xchg
xchg
es
pusha
xor
mov
pop
es
adc
pusha
sub
pop
fcmovbe
out
cmp
jne
inc
add
push
and
xor
jle
pushf
sbb
mov
or
dec
sbb
adc
call
sub
pop
dec
je
imul
or
inc
xor
inc
cmp
(bad)
add
pop
scas
adc
push
ret
ds
and
mov
inc
add
mov
dec
les
xchg
out
jne
(bad)
cwde
mov
adc
rcl
or
inc
mov
js
lock
and
push
cmp
jp
out
ja
pop
popf
or
pcmpgtd
adc
sahf
fs
lock
inc
or
fisttp
lea
push
push
movs
add
xlat
dec
add
or
inc
dec
out
test
inc
pushf
xchg
add
lds
xor
push
or
adc
push
sub
adc
sub
mov
push
je
pop
sub
mov
cmp
xlat
inc
movs
pusha
or
pushf
pop
gs
clc
jns
or
inc
stos
inc
call
inc
jo
cmp
je
movs
call
rcpps
mov
cli
or
sbb
or
unpcklps
pusha
pop
in
out
pop
jns
mov
(bad)
and
inc
push
add
sbb
les
pop
adc
push
xchg
and
sbb
push
xchg
jne
ud1
jmp
xor
call
mov
or
pop
stos
push
lock
test
mov
cdq
dec
rcr
dec
add
jmp
fadd
sbb
push
je
and
mov
jg
loopne
std
das
sbb
mov
and
bswap
dec
add
lock
aas
xor
repz
inc
jno
jl
push
rcr
inc
cmp
lahf
jp
loopne
sub
jecxz
adc
inc
pop
mov
sbb
xchg
jp
jmp
sbb
add
sbb
add
add
mov
movs
mov
push
push
dec
inc
jmp
scas
int
push
shl
mov
sbb
dec
sar
add
lods
jns
or
sub
mov
pop
test
or
inc
aas
or
adc
add
mov
sub
ins
sub
xchg
or
push
xor
rol
xchg
inc
xor
ins
aas
mov
inc
mov
pop
movs
pop
shl
mov
fisttp
in
in
and
or
fbld
daa
pop
daa
inc
test
or
call
inc
nop
inc
xchg
test
xor
dec
push
je
push
add
push
and
or
loop
adc
fucomp
push
dec
call
xor
mov
cmp
jne
scas
sbb
xor
add
dec
mov
cmps
mov
fst
and
adc
arpl
les
int3
iret
jbe
lea
or
add
mov
(bad)
mov
add
and
adc
adc
test
or
add
push
push
lea
jae
ins
fldcw
arpl
adc
xor
pusha
aas
mov
sub
cmps
pusha
fs
inc
clc
sbb
or
adc
push
adc
fadd
or
add
or
adc
sub
inc
mov
dec
add
pop
mov
cmp
push
push
sbb
fidiv
mov
imul
cs
ds
adc
hlt
fwait
sbb
xchg
into
inc
or
es
sar
sub
xor
or
je
movsx
jno
push
icebp
fistp
jle
add
cmps
test
sbb
xor
or
sbb
push
xor
cmp
and
daa
(bad)
cmp
pop
or
mov
xchg
or
sbb
(bad)
xor
xor
xor
enter
mov
cmp
ret
pop
pop
inc
dec
push
cld
mov
pop
sbb
lods
bound
xchg
dec
mov
hlt
dec
jecxz
dec
shl
test
retf
xor
test
pusha
das
loope
jbe
adc
into
fs
add
cmp
xchg
adc
movs
popf
and
jns
push
inc
xlat
repnz
pushf
sar
pop
jle
dec
push
test
xor
add
popf
inc
cmp
and
xor
mov
inc
inc
pop
add
shl
cdq
daa
faddp
iret
shl
inc
xchg
retf
enter
arpl
adc
pop
push
mov
callw
out
inc
cs
sub
mov
push
and
in
mov
inc
push
out
test
mov
or
inc
mov
lods
ror
mov
cwde
mov
(bad)
lahf
rol
cmp
repnz
rol
sbb
iret
push
hlt
jmp
lock
adc
add
jb
cmp
test
add
xchg
xchg
push
add
dec
add
daa
inc
stc
add
js
adc
pop
xchg
nop
dec
adc
mov
clc
addr16
xchg
cmp
ds
fsubr
add
test
mov
cdq
cmp
pop
scas
aam
je
aaa
and
stos
lds
fcom
ss
(bad)
fild
ss
sbb
sub
dec
(bad)
aas
mov
loop
push
pop
(bad)
and
xor
daa
cmp
icebp
fadd
add
mov
push
sub
adc
xchg
jne
inc
es
dec
dec
ds
cmp
add
and
add
dec
fld
(bad)
and
lahf
in
je
(bad)
loopne
icebp
(bad)
jne
jle
xor
andnps
rol
sbb
mov
lock
dec
call
sbb
push
dec
arpl
inc
mov
call
aam
enter
adc
mov
retf
push
push
dec
add
ins
jb
aas
call
pusha
inc
clc
sub
cmp
(bad)
div
and
pop
add
pop
push
pop
push
mov
xchg
inc
sub
pusha
js
imul
pop
test
inc
or
mov
push
push
sub
pop
cmc
pop
loopne
ror
enterw
test
mov
mov
dec
dec
push
inc
mov
add
and
loope
adc
dec
adc
push
ror
addr16
mov
clc
inc
or
push
ss
fnstsw
inc
push
xor
inc
xchg
int
nop
dec
add
xor
cmps
fcom
pop
or
pusha
and
xchg
fsubrp
or
cmp
push
mov
add
sub
add
inc
bound
mov
adc
sbb
mov
mov
and
jns
pop
inc
test
push
nop
or
xor
clc
not
or
call
adc
sub
adc
movs
ret
sbb
loop
push
inc
mov
loopne
push
inc
ret
dec
cmp
cmp
aam
mov
push
nop
xor
rol
cmovs
pop
mov
mov
push
retf
push
xor
ret
mov
lods
xchg
out
(bad)
push
rol
and
add
dec
adc
mov
or
push
and
push
dec
pop
cvttps2pi
dec
enter
or
sbb
xor
fs
dec
inc
pop
dec
and
pop
lods
icebp
sub
mov
fnstsw
and
sub
sbb
pushf
cmp
adc
fnstcw
pop
inc
pusha
xchg
dec
mov
push
jbe
pop
mov
pop
sub
mov
dec
ror
inc
xor
push
mov
outs
repnz
cmp
push
add
ret
adc
call
xor
pop
cmp
xchg
mov
fidiv
mov
addr16
psrld
jecxz
int3
push
adc
(bad)
test
lods
jge
sub
cmp
push
pop
and
js
cmps
fbld
inc
push
div
mov
cli
add
xor
add
sbb
ror
les
outs
data16
cmp
ja
jae
rcr
dec
idiv
movs
imul
dec
cmp
pop
push
das
mov
or
lds
cwde
push
and
mov
xchg
out
pop
cmp
dec
adc
ret
rcr
stos
xchg
push
std
push
add
sbb
and
test
loop
icebp
jg
scas
out
add
rcpps
or
call
xrelease
fidiv
or
adc
cwde
sbb
add
push
imul
test
xchg
push
sub
scas
inc
jecxz
inc
sbb
mov
test
push
pop
mov
test
inc
scas
pop
ficom
xor
or
dec
mov
cmps
sbb
movs
sub
mov
ret
js
mov
xchg
or
imul
push
jne
daa
imul
and
or
mul
push
xor
je
ja
jns
cmp
add
inc
xlat
pop
je
push
adc
dec
and
inc
sbb
adc
pop
rol
das
dec
mov
or
sub
popa
daa
sub
and
pop
pop
mov
and
psrad
adc
into
jnp
add
push
add
add
movs
or
cmp
iret
mov
(bad)
pop
retf
or
into
or
xlat
push
(bad)
stos
jne
gs
lods
gs
mov
les
rol
jmp
ret
movs
cmp
add
cmp
call
pop
inc
inc
adc
cmp
out
mov
inc
mov
jl
movs
jmp
ret
stos
or
ficomp
mov
(bad)
(bad)
mov
inc
out
add
(bad)
push
add
xchg
mov
jns
dec
test
mov
call
dec
add
daa
ret
push
mov
mov
inc
push
sbb
mov
clc
sub
push
je
sub
pop
jmp
add
jb
or
fcmovnbe
(bad)
adc
mov
xchg
dec
add
mov
push
mov
pop
pusha
xor
cmp
add
rcl
mov
gs
push
shr
(bad)
pop
xchg
or
add
add
(bad)
dec
push
sbb
daa
push
sub
jmp
add
add
pop
iret
adc
(bad)
movs
cmp
cs
xor
ret
sub
dec
adc
and
fdivr
and
lahf
cmc
and
and
or
adc
addr16
and
retf
enter
adc
je
mov
jecxz
jne
push
bound
mov
inc
or
jge
pop
lock
xor
inc
aam
or
inc
inc
xor
les
inc
push
and
push
sbb
lods
dec
jecxz
aaa
inc
pop
test
mov
fnstenv
xchg
push
jecxz
rcl
ss
out
fld
pop
(bad)
xor
adc
and
add
arpl
je
shr
inc
loop
mov
push
push
int
enter
add
mov
dec
enter
inc
jb
aam
in
cmps
cmc
xor
hlt
out
xchg
(bad)
movs
add
push
jmp
cmp
adc
movs
in
sub
add
xchg
mov
cmc
call
cdq
xor
loop
mov
inc
or
aam
pushf
xor
dec
hlt
icebp
mov
jmp
retf
jne
cmp
lods
inc
and
movs
lea
push
inc
and
jmp
test
int
ins
xchg
or
outs
scas
mov
sbb
or
fist
xchg
(bad)
test
cmp
pop
sar
add
sub
inc
xchg
lock
jg
les
dec
ret
sbb
add
xchg
xor
test
dec
test
dec
dec
or
fdiv
daa
mov
xor
jbe
xchg
xchg
and
cmp
dec
or
clc
ins
ror
test
test
aam
call
repz
ret
test
sub
mov
add
call
inc
and
jo
les
pushf
push
ret
mov
lock
push
fistp
imul
sahf
sbb
idiv
add
mov
push
(bad)
sbb
(bad)
nop
cmps
sar
dec
mov
jge
scas
pop
ins
rol
loopne
mov
push
test
pop
adc
hlt
cdq
jo
cmps
inc
and
out
mov
cmps
mov
adc
call
pop
or
mov
loopne
sar
mov
add
dec
(bad)
adc
jmp
les
inc
push
fist
fwait
inc
or
push
jmp
aam
xor
inc
sbb
xor
daa
push
adc
cs
jg
and
xor
fld
adc
stos
pop
add
(bad)
jmp
bound
(bad)
dec
or
jns
unpcklps
lea
push
push
and
add
add
call
xor
iret
sub
(bad)
js
call
mov
sub
sub
adc
push
sub
xor
jle
test
push
add
or
data16
jle
adc
jl
es
mov
adc
test
inc
adc
mov
inc
(bad)
xlat
push
lahf
adc
lock
xor
push
dec
imul
sub
clc
movs
add
cmp
ins
lods
adc
xchg
xor
lock
(bad)
cmp
mov
sbb
enter
in
adc
mov
xchg
sub
(bad)
test
xchg
pop
div
xchg
je
jmp
dec
mov
jnp
or
je
ds
arpl
fadd
clc
div
and
mov
into
cmp
jne
(bad)
cmp
mov
je
(bad)
aad
cmp
adc
xchg
add
repz
sbb
push
xchg
cmc
(bad)
cmp
sbb
mov
retf
sub
and
dec
retf
push
cmp
aam
add
out
rol
adc
iret
inc
push
push
das
mov
pop
lock
(bad)
ins
mov
xchg
or
ret
add
add
and
add
aam
adc
je
inc
mov
les
push
jns
add
test
pop
sti
jmp
push
xor
cmp
fcom
es
sub
fs
cmp
push
mov
adc
inc
inc
mov
je
pop
sub
dec
mov
add
push
cmp
ror
js
test
push
retf
add
rol
loope
and
mov
je
les
xchg
cmp
fimul
mov
sbb
ror
mov
hlt
sub
inc
push
bound
cmp
xor
cmp
xlat
sbb
or
mov
pop
test
or
or
(bad)
movs
mov
xor
mov
punpcklbw
xor
dec
xor
loopne
xor
dec
pop
xor
and
sar
mov
mov
aad
inc
xor
sub
add
add
fcomp
imul
pop
mov
aas
ficom
pop
or
inc
xor
push
mov
push
add
or
ror
retf
mov
int3
faddp
jge
ins
fisub
and
data16
add
cmp
aaa
xchg
jmp
ss
add
mov
fmul
call
loop
lods
mov
aas
mov
push
or
das
mov
xchg
mov
mov
push
into
dec
pop
mov
xchg
push
in
je
or
clc
jl
out
push
mov
pop
nop
(bad)
add
adc
mov
adc
loop
or
adc
sub
imul
icebp
daa
in
or
xchg
test
push
popa
sub
inc
sub
dec
mov
add
jg
sbb
mov
dec
ficom
popa
sbb
dec
call
shl
inc
shr
sub
pop
dec
mov
dec
cmps
sub
arpl
ret
xchg
retf
fld
cmp
adc
dec
sub
dec
clc
clc
lock
dec
jae
imul
inc
mov
inc
nop
aad
xor
mov
int3
or
(bad)
rcl
mov
adc
mov
sahf
inc
ins
inc
cmp
popf
pushf
sbb
xor
sub
mov
mov
aad
add
sub
cmp
push
pop
xor
xchg
adc
jmp
mov
or
cmp
add
or
shl
cmp
retf
inc
or
dec
mov
sbb
shr
dec
icebp
push
inc
inc
jmp
pop
add
or
xor
adc
add
jb
mov
mov
retf
aam
xchg
cmp
mov
mov
dec
push
imul
add
bound
shr
sub
mov
fsubr
jmp
inc
and
leave
inc
and
sbb
jge
adc
dec
or
loopne
adc
outs
das
cs
fistp
push
mov
adc
or
add
add
dec
sub
xchg
push
mov
mov
jmp
mov
and
into
xchg
test
adc
mov
lahf
jmp
into
pop
mov
and
into
adc
cld
dec
mov
inc
dec
add
add
jmp
mov
sbb
arpl
sbb
xor
fcomp
add
sbb
fsubr
adc
shl
in
data16
mov
sbb
xchg
jmp
enter
aam
call
or
or
lds
sgdtd
add
mov
or
bound
test
jg
xchg
ins
clc
and
jge
xchg
rol
cwde
into
(bad)
lds
pop
aaa
ret
out
pop
add
mov
shl
xchg
imul
fistp
cmps
add
xor
enter
or
inc
pop
sbb
sub
and
rcr
sbb
imul
sbb
sub
adc
inc
inc
mov
sbb
jns
mov
sbb
loopne
in
dec
mov
inc
xor
sub
pop
or
out
or
fmul
(bad)
cmp
fldcw
dec
sbb
jbe
cmc
inc
sub
std
jmp
nop
xchg
pop
inc
inc
inc
sbb
test
lock
ret
sahf
rcl
cmp
add
inc
push
pop
sti
js
dec
or
mov
loope
jle
add
inc
mov
clc
xchg
sub
test
sub
punpckhwd
dec
mov
int3
hlt
mov
xchg
push
add
mov
xor
pop
xchg
test
aam
rcl
nop
test
adc
inc
(bad)
push
loope
jp
xor
push
in
arpl
cmp
sbb
mov
not
cmp
cdq
adc
mov
adc
pop
add
or
dec
repnz
pop
daa
pop
les
jne
ins
inc
arpl
push
adc
push
hlt
add
sbb
(bad)
jecxz
adc
jbe
into
imul
aam
jne
mov
inc
pop
sub
mov
repz
ins
dec
ror
fld
cmp
aam
adc
adc
out
ret
mov
push
add
mov
test
lahf
push
imul
aam
es
arpl
std
or
(bad)
push
scas
adc
jl
mov
or
push
xchg
push
sub
loopne
addr16
add
dec
jo
mov
or
xor
cmp
mul
into
enter
test
or
push
je
add
imul
or
fild
jecxz
call
call
or
mov
adc
cvtps2pi
push
add
add
nop
push
jge
sub
or
and
pusha
mov
les
ins
loop
mov
dec
sti
daa
fdiv
mov
sub
int
hlt
add
cmp
add
push
lods
test
add
cmp
and
sbb
mov
gs
jo
cmp
(bad)
jmp
sti
js
lods
mov
mov
adc
add
mov
cmp
push
mov
cmp
not
and
shr
mov
sbb
add
jo
or
cmp
mov
cs
fs
sbb
add
add
cmp
and
call
test
add
aaa
push
sbb
js
dec
push
pusha
mov
pop
or
push
push
jo
dec
test
int3
xchg
or
adc
loope
dec
inc
in
add
scas
sbb
sbb
and
mov
ret
hlt
add
call
push
(bad)
adc
adc
ret
mov
push
stos
sub
leave
fcom
call
adc
inc
push
xchg
pop
add
aas
inc
add
pop
jbe
push
aam
ficom
add
cmp
push
adc
pop
sub
or
inc
js
xchg
loopne
mov
jecxz
or
or
xchg
dec
cmc
imul
push
xor
daa
cwde
push
xor
add
movs
stc
adc
mov
ins
fiadd
mov
adc
mov
rcl
add
dec
inc
pop
pop
cmps
and
mov
ror
sub
push
add
dec
inc
std
(bad)
lds
sbb
std
inc
stos
add
add
mov
cdq
inc
push
add
cs
xor
or
call
jge
call
jle
pop
sub
hlt
push
mov
test
jmp
in
push
lods
mov
hlt
fcomp
push
dec
cmps
(bad)
(bad)
xchg
or
test
mov
jmp
cmp
jge
rcl
cdq
jno
cmp
pusha
int3
mov
jg
(bad)
add
or
add
dec
sbb
mov
xchg
(bad)
lods
mov
ret
mov
mov
or
call
cmp
fadd
adc
and
add
mov
cmc
mov
gs
mov
and
cmp
mov
dec
cmp
movs
leave
cmp
ror
inc
mov
dec
aad
or
push
iret
add
ret
jae
push
lds
xchg
or
push
or
pop
aam
xor
into
in
stc
add
mov
mov
clc
adc
push
xor
xchg
stc
outs
jmp
cmp
cmp
dec
je
ds
xchg
std
dec
pop
ror
rol
sbb
or
inc
sbb
lock
pop
or
movs
sbb
test
jne
push
mov
jae
call
xor
fistp
mov
push
cld
in
jl
add
jnp
jmp
add
ror
add
mov
cld
movsx
jae
add
jae
or
push
sbb
inc
jg
sub
sbb
mov
ret
out
cmp
cmp
out
add
ds
ins
inc
push
or
js
push
ret
jae
mov
mov
mov
mov
sub
inc
push
jg
pop
cmp
push
or
ret
jnp
adc
scas
pop
(bad)
enter
cmp
sbb
ins
outs
in
push
js
frstor
es
xor
aas
test
jmp
adc
ret
std
inc
fiadd
ret
cmp
je
aam
fdivp
pop
aas
mov
mov
pop
test
ret
pop
ret
retf
mov
inc
inc
mov
pop
ss
or
mov
adc
adc
pop
pop
cwde
mov
popa
jo
cmp
pop
and
fst
daa
push
push
fprem1
or
cmp
pop
iret
aam
add
(bad)
dec
mov
add
loope
sub
or
pusha
mov
out
pop
pop
dec
xor
xor
or
sub
sub
dec
mov
lea
mov
movs
pop
push
adc
bound
popf
add
cld
pop
inc
mov
popf
add
jns
call
sub
lock
fisub
repnz
push
inc
aaa
sar
mov
pop
repz
xchg
sbb
test
(bad)
xor
cmp
push
xchg
shl
(bad)
push
lea
push
jo
daa
jmp
cmp
or
mov
pop
mov
and
ret
cmp
push
sbb
inc
fs
ret
adc
mov
nop
sbb
adc
or
push
js
test
sbb
fmul
dec
in
dec
mov
or
pop
xor
dec
gs
add
mov
jmp
mov
rol
lock
pop
dec
inc
push
and
or
out
shl
inc
add
rcr
cmp
fs
jl
push
add
mov
or
adc
leave
jmp
out
call
call
add
sbb
xchg
cmp
mov
or
loope
adc
ds
loope
arpl
xor
mov
xor
mov
push
or
lea
fld
cwde
pop
fs
push
mov
fs
rol
jne
cmovo
dec
jne
enter
into
inc
inc
mov
xchg
jmp
aad
into
or
scas
sub
fimul
clc
addr16
pop
xchg
sub
jmp
aam
adc
xor
sahf
iret
adc
shr
stos
add
popa
adc
ins
movs
inc
dec
inc
sbb
pop
out
rol
lods
pop
xor
fsub
mov
adc
adc
and
jo
add
(bad)
pop
pop
push
les
add
adc
push
inc
fsub
mov
jp
cmp
mov
inc
fld
fsubr
ror
addr16
adc
push
adc
push
add
ja
shl
jle
sub
adc
inc
xor
ret
and
xchg
mov
in
shl
cli
mov
mov
cmp
xchg
jle
mov
mov
push
mov
mov
(bad)
retf
pop
retf
cmp
(bad)
rol
push
push
push
cmp
gs
add
jge
xor
add
retf
mov
test
add
rol
and
arpl
xor
into
push
dec
push
add
dec
and
cmp
dec
sbb
jp
push
test
mov
adc
sub
fdivr
lock
jmp
sbb
xchg
movs
mov
sbb
pop
int3
gs
mov
imul
loop
repz
and
scas
jmp
adc
nop
pop
enter
jl
je
sub
mov
clc
loope
fs
cwde
or
test
xor
or
cmp
push
ds
clc
xchg
ss
add
pop
jg
dec
in
add
xchg
sbb
icebp
push
jbe
xlat
mov
inc
xchg
or
push
icebp
js
and
jle
js
push
jp
jne
call
cmps
pop
or
and
jle
xor
inc
or
in
jecxz
loopne
xchg
dec
and
adc
fbstp
push
clc
ins
es
adc
in
push
aad
jae
scas
dec
mov
daa
and
inc
data16
rcr
xchg
and
pop
sbb
sbb
or
sub
and
add
sub
outs
mov
call
xor
cmp
cmp
pop
mov
icebp
call
push
daa
inc
mul
jle
mov
aaa
jmp
adc
ret
jo
sub
mov
add
or
xor
inc
and
in
outs
ja
setge
jp
jmp
push
jmp
popa
fisttp
xor
cmp
add
inc
call
fsub
push
xor
test
jne
pop
add
xor
and
outs
fcom
stos
sbb
mov
push
dec
xor
mov
(bad)
das
sub
add
add
inc
push
dec
ins
popa
adc
into
jg
push
ror
in
adc
sub
or
sbb
clc
test
push
push
and
adc
or
pop
aaa
adc
xchg
add
sbb
mov
and
xor
clc
fs
(bad)
pop
xlat
inc
fdiv
rol
or
push
aam
push
mov
pop
mov
and
xchg
mov
lods
add
ret
out
sub
daa
icebp
sar
daa
add
in
sub
jmp
ja
daa
lods
ins
mov
cmp
mov
inc
scas
xor
test
loop
pop
lea
push
lock
ss
das
cwde
or
rol
adc
adc
cmp
add
clc
fsubr
inc
inc
fs
pop
xor
inc
mov
inc
jge
sub
xor
add
pop
add
dec
dec
ret
cmp
sbb
mov
test
sbb
loopne
jge
hlt
xchg
jo
jb
sub
mov
sahf
push
js
mov
jp
push
and
mov
cmp
ret
es
sub
jne
out
push
xor
xchg
fadd
lahf
mov
lds
pop
sub
sbb
test
fsub
cmp
push
jnp
xor
out
mov
or
sub
mov
les
test
movs
sti
jecxz
mov
jmp
push
add
cmps
xchg
test
push
sbb
jnp
push
into
push
fcom
shl
add
sbb
js
cld
jo
in
sti
add
mov
sub
cmp
imul
push
ret
inc
popa
sub
mov
dec
fsubr
sub
(bad)
push
push
xchg
inc
daa
or
inc
ret
mov
inc
mov
fnstcw
fmul
rol
mov
push
fdivr
sub
mov
cwde
test
mov
dec
jmp
xor
xor
adc
or
lds
dec
inc
or
xor
jb
mov
loopne
dec
xchg
adc
sub
aas
push
xor
pusha
inc
lds
pop
or
sbb
mov
pusha
daa
pop
or
or
out
dec
jmp
loope
loopne
aas
pop
adc
push
mov
ja
lock
or
jmp
jbe
adc
daa
sbb
rcl
loopne
addr16
sub
dec
mov
pop
daa
repz
movs
(bad)
xchg
adc
adc
fisub
mov
sbb
sub
add
cmp
fiadd
mov
jmp
sub
and
sbb
cmp
sbb
rol
pop
mov
xchg
inc
icebp
rcr
js
add
mov
(bad)
in
clc
sub
xor
mov
cmc
mov
std
mov
add
(bad)
fadd
xchg
add
xchg
jle
jo
adc
add
sbb
mov
sub
dec
lods
aam
(bad)
clc
sbb
inc
out
add
cmp
xor
push
mov
sbb
pop
add
test
(bad)
aaa
mov
les
jmp
fcomp
xor
sbb
jg
and
or
(bad)
(bad)
jg
pop
jg
mov
idiv
cmp
ss
or
aaa
inc
(bad)
loop
add
add
sti
jmp
cmc
or
jne
in
mov
pop
repz
push
sbb
dec
or
and
imul
loope
jbe
sub
adc
arpl
xor
or
pop
sub
xor
repnz
bound
or
add
daa
(bad)
(bad)
add
or
inc
adc
pop
push
or
mov
lods
lock
pop
pop
sbb
rol
sbb
es
rcr
dec
repnz
and
add
push
and
sub
push
fcom
xor
sbb
push
adc
pusha
punpcklwd
push
jle
ds
xor
cmp
xchg
sub
push
mul
sar
pop
loop
xor
pop
scas
lahf
gs
in
inc
mov
jl
adc
pop
mov
add
icebp
push
push
imul
mov
add
sbb
adc
lock
sbb
sub
mov
add
or
aas
cmp
test
add
in
lea
ffreep
xchg
sbb
test
push
mov
add
jl
rol
lea
xchg
add
mov
push
ins
pop
pop
pop
adc
pop
inc
pop
add
cmp
jne
inc
dec
enter
call
inc
sub
or
mov
test
push
mov
cli
in
mov
fld
sub
neg
inc
inc
pop
sub
mov
push
popf
movs
cmps
gs
test
and
ret
push
mov
add
dec
jg
arpl
loope
fidivr
(bad)
mov
add
sub
add
mov
push
and
sub
mov
add
push
in
dec
gs
or
mov
xor
sbb
xlat
fs
or
sbb
adc
dec
test
and
adc
cld
add
inc
mov
inc
jo
enter
fnsave
jmp
sbb
fsubr
fadd
add
fadd
and
(bad)
xchg
lock
push
jmp
push
dec
test
sbb
mov
into
loope
or
dec
cmp
cdq
and
xchg
(bad)
jle
mov
xchg
mov
push
jae
add
push
ja
arpl
inc
push
xchg
cld
fisubr
mov
jne
shl
inc
mov
das
movs
aam
inc
dec
ins
xor
sub
nop
mov
sub
data16
dec
popa
jnp
cmp
jne
sub
adc
adc
in
or
(bad)
clc
in
add
sub
sbb
inc
call
or
pusha
sub
pop
in
dec
mov
shl
call
mov
sti
sbb
(bad)
dec
rcl
sar
inc
popa
out
cmp
dec
sar
in
push
dec
pusha
inc
(bad)
mov
dec
cwde
(bad)
cli
movs
int3
adc
lock
adc
lods
and
fsub
xor
sbb
in
mov
push
pop
nop
mov
add
or
mov
mov
imul
cmps
push
iret
repz
push
or
adc
dec
inc
cmps
dec
xor
add
int3
(bad)
pop
ins
or
add
jnp
aad
mov
add
arpl
mov
dec
les
clc
sbb
sub
sar
jns
adc
inc
frstor
je
or
mov
pop
push
jne
add
or
jbe
hlt
add
sub
(bad)
out
cmp
fdivr
push
aaa
pop
mov
cmp
scas
(bad)
pop
imul
mov
and
ins
or
ins
push
lods
dec
push
mov
push
outs
sbb
or
sbb
or
sbb
mov
test
not
fs
(bad)
(bad)
cmp
inc
cmp
sbb
xchg
push
mov
ret
shl
dec
push
adc
fdivr
fmul
(bad)
mov
xchg
mov
sbb
loop
pop
rcl
adc
rol
and
lock
push
test
sbb
dec
or
inc
add
mov
es
sub
(bad)
sub
jnp
dec
clc
push
pop
inc
pop
xchg
sub
mov
sbb
and
not
and
xor
adc
push
(bad)
cmp
loope
adc
pop
or
(bad)
adc
mov
mov
push
(bad)
in
ss
test
aam
test
je
xor
nop
enter
cdq
push
mov
sbb
sbb
daa
push
pop
or
loope
pop
addr16
out
sbb
loopne
dec
adc
ror
fwait
jmp
pop
shl
pop
sub
fstp
dec
call
(bad)
and
or
shr
inc
bound
enter
movs
jns
lds
mov
and
ja
pop
sub
xlat
push
add
stc
cmp
mov
jmp
xchg
cmps
cs
das
adc
adc
jmp
ja
add
sbb
pop
mov
dec
dec
cs
lods
xor
inc
push
jl
xor
xor
mov
jle
pop
jecxz
rcl
mov
push
xchg
(bad)
out
stos
mov
sub
sbb
dec
fisubr
push
push
lahf
fild
dec
inc
test
and
and
xchg
cmp
jge
xor
jp
add
cli
stos
jle
push
fwait
popa
pop
icebp
sub
cmp
aaa
xor
dec
or
lods
test
out
out
xor
and
and
dec
push
imul
adc
sahf
out
loopne
popa
push
pop
inc
sub
or
inc
ss
daa
ja
pop
test
ficomp
in
sub
sbb
adc
lea
fdiv
or
cs
jmp
(bad)
or
xlat
pusha
sub
pop
adc
adc
(bad)
sbb
pusha
imul
and
mov
(bad)
pusha
lods
popa
hlt
in
sbb
lahf
push
push
inc
pop
imul
add
test
sti
jecxz
lock
call
sub
adc
sahf
inc
leave
jae
xor
xor
in
je
add
data16
dec
jno
pop
jne
mov
mov
add
adc
(bad)
jne
pop
cs
or
adc
movs
mov
mov
mov
cmps
pop
js
inc
add
(bad)
fdivr
add
retf
imul
mov
dec
or
push
fwait
xor
jb
push
pop
adc
clc
or
dec
inc
loop
pop
icebp
scas
mov
inc
movs
add
or
arpl
mov
loop
push
pop
add
dec
inc
test
add
out
push
mov
dec
pop
outs
pop
mov
adc
xchg
cmp
test
sbb
or
jp
cmp
add
add
pop
scas
daa
push
arpl
and
and
inc
mov
das
ss
imul
minps
mov
inc
es
pop
mov
dec
mov
icebp
or
add
cmp
dec
xchg
rol
or
sub
test
add
mov
inc
or
lods
mov
addr16
ret
ins
xchg
cli
adc
repz
add
push
pop
inc
jae
push
adc
add
mov
mov
push
(bad)
push
sti
stc
adc
dec
and
arpl
and
lahf
mov
cld
mov
pop
cld
je
popa
xor
in
mov
or
in
arpl
sbb
or
pusha
cld
and
sbb
rcr
lfs
pop
cld
mov
cmp
xor
popf
push
imul
clc
fwait
jo
shl
sahf
add
rcr
add
xchg
jecxz
add
ins
dec
sar
std
mov
xchg
jle
push
pusha
adc
mov
and
or
in
and
or
add
test
lock
lods
mov
jnp
ss
es
push
lahf
repnz
ror
jg
mov
scas
mov
cmp
xchg
adc
and
js
sub
xor
xor
ins
int3
jne
nop
pop
push
xchg
mov
adc
and
and
xor
xchg
shl
jo
fst
inc
data16
jle
xor
cs
and
mov
jmp
addr16
jbe
inc
leave
ds
ins
or
adc
or
sub
cmp
fnstsw
push
mov
mov
pop
fcom
add
cdq
(bad)
fisttp
pop
jmp
retf
mov
adc
popa
sub
inc
pop
das
fadd
mov
or
ins
push
rol
pop
in
(bad)
js
or
js
movs
inc
dec
mov
les
data16
jo
(bad)
push
mov
inc
push
mov
adc
or
add
sbb
jbe
mov
or
fcom
ret
pop
ret
lahf
nop
or
pop
ss
mov
add
nop
pop
pop
repz
sti
cmp
jl
or
dec
push
pop
xor
fmulp
xchg
sub
jmp
push
movs
lea
push
xor
jbe
inc
aaa
fiadd
mov
(bad)
out
inc
add
mov
mov
and
mov
ins
ins
mov
sti
and
sub
test
adc
test
adc
cmp
imul
movs
test
addr16
jns
pusha
outs
pop
lea
jecxz
aas
xor
mov
mov
not
push
jae
pop
push
test
sub
sub
test
inc
sbb
and
movs
or
lock
cmps
inc
push
and
or
popf
hlt
fidiv
popf
outs
mov
jne
cmp
cmp
xor
mov
ret
or
adc
cmp
and
sbb
and
fisubr
or
mov
xlat
push
pop
adc
sti
leave
call
ins
rcl
and
jno
(bad)
inc
mov
adc
lods
out
add
xchg
xlat
mov
and
or
sbb
mov
(bad)
mov
retf
clc
xor
mov
or
inc
add
and
es
ror
aas
sbb
jo
(bad)
div
in
or
mov
push
xchg
xor
cmp
inc
xor
push
xor
retf
inc
mov
cld
pop
fnsave
or
cdq
loop
cmp
je
adc
jp
scas
add
movs
adc
sar
loopne
repnz
loopne
pop
pop
or
inc
bnd
add
adc
xchg
mov
jmp
add
inc
js
lea
jmp
cmovl
ins
or
cmp
xchg
inc
jl
cmps
push
mov
or
or
or
in
and
daa
add
jg
adc
fimul
jge
inc
or
push
cli
iret
pop
(bad)
mov
pop
xchg
jae
(bad)
mov
push
outs
bound
dec
(bad)
dec
sbb
push
push
or
clc
cld
ror
aas
push
cmp
inc
mov
sbb
sbb
(bad)
inc
adc
rol
std
ret
add
lea
jge
push
sbb
repnz
movs
dec
(bad)
and
imul
adc
jecxz
push
ror
inc
lods
dec
outs
adc
fnstenv
and
push
popa
and
lods
lods
mov
cmps
add
nop
cs
sub
mov
xchg
inc
jmp
xor
loope
sbb
mov
in
imul
adc
jg
fs
pop
ja
imul
dec
pop
ja
mov
sub
push
add
fdivr
aaa
test
mov
mov
sub
push
movs
jb
loopne
clc
dec
enter
adc
test
movs
jb
push
test
nop
retf
jl
xor
test
fwait
xchg
jg
sub
div
iret
push
inc
push
ja
fmul
push
call
dec
push
dec
inc
add
ins
add
addr16
or
pop
push
gs
xchg
fs
xor
inc
xor
xchg
aam
lods
adc
mov
push
jmp
mov
xor
push
ins
jo
adc
and
mov
inc
out
push
outs
lahf
fs
inc
xchg
dec
jae
mov
sbb
mov
cmp
in
cmc
sbb
push
call
lods
jb
aaa
fist
mov
aaa
loopne
(bad)
mov
int
mov
cmp
push
stos
push
pop
jl
xlat
inc
movs
jge
push
sub
ret
mov
imul
ficom
push
adc
nop
nop
and
hlt
cmp
jecxz
ret
fld
dec
mov
adc
sbb
ins
xlat
cmp
je
loopne
popf
inc
ret
xchg
pop
cmp
leave
outs
adc
sub
adc
(bad)
pusha
and
push
pushf
or
and
cs
or
or
adc
push
in
mov
inc
rcr
add
fstp
shl
xor
(bad)
cmp
sbb
loopne
add
repnz
add
mov
mov
xor
and
loopne
mov
lock
das
popa
lods
sub
mov
aas
cmp
outs
and
fldenv
outs
test
fmul
inc
xor
mov
stc
in
ret
mov
sub
popf
xchg
enter
ins
test
xor
mov
nop
mov
call
adc
ins
pushf
mov
add
xchg
inc
add
lahf
add
or
sub
xchg
dec
ja
mul
adc
or
popf
mov
and
jmp
cmp
(bad)
pop
outs
dec
inc
clc
xor
test
cmp
ror
outs
xchg
mov
xor
and
addr16
push
test
cmp
dec
mov
loop
in
mov
clc
and
xchg
add
fist
aas
hlt
xchg
inc
pop
sub
and
xchg
loope
xor
inc
cmp
mov
pop
mov
es
and
mov
and
add
inc
jo
les
(bad)
xlat
inc
mov
clc
(bad)
out
cmp
sbb
inc
push
sub
mov
pop
inc
adc
pop
dec
add
xor
cld
mov
and
add
inc
xchg
and
lahf
fwait
and
push
or
addr16
xchg
xchg
into
push
mov
mov
mov
push
push
pusha
mov
lea
rcr
or
adc
ss
mov
push
cld
xor
jo
ret
sub
cmp
jo
aas
pop
sub
add
mov
loop
enter
adc
adc
lods
xchg
inc
or
inc
or
inc
les
jl
out
mov
xchg
dec
mov
pop
jnp
mov
ror
in
test
in
fdiv
dec
add
mov
outs
jl
add
xor
fidivr
(bad)
sbb
and
push
lahf
pop
sub
mov
push
add
push
mov
and
or
xor
jb
pop
inc
cmp
push
push
sahf
out
sahf
fs
mov
out
fdiv
add
or
cmp
repz
sbb
jmp
sub
or
mov
div
sub
call
mov
adc
icebp
mov
lods
xchg
lods
inc
imul
(bad)
mov
aaa
pop
mov
xor
xor
inc
pop
in
push
xchg
add
or
jp
test
or
sub
mov
pop
mov
ss
rol
push
cmps
push
inc
xlat
or
push
cwde
pop
or
pop
jno
mov
ins
or
xchg
sub
inc
leave
add
outs
cwde
pop
add
sbb
imul
movs
jnp
retf
cmps
or
repz
or
shl
push
int
xabort
add
out
xchg
inc
mov
adc
sar
pop
dec
sbb
nop
inc
es
and
sub
imul
xchg
inc
pop
mov
js
push
or
add
mov
inc
and
daa
sub
sbb
ins
jae
cmp
jge
or
xchg
push
push
in
dec
and
inc
dec
test
or
loopne
shr
mov
push
adc
jl
clc
cmp
pop
leave
js
pop
mov
jl
or
xlat
mov
xchg
mov
adc
cmp
mov
cmp
jle
xchg
dec
push
lahf
sub
jle
test
hlt
inc
and
adc
mov
and
inc
sbb
jns
ret
aas
es
inc
push
(bad)
push
xor
mov
and
fdivr
sub
dec
aad
inc
mov
imul
sub
imul
out
push
add
adc
adc
xor
in
cs
retf
lods
loopne
call
and
adc
in
and
sbb
(bad)
out
and
pop
sub
cmp
nop
jbe
adc
popf
xchg
or
add
test
push
push
call
adc
call
pop
int3
mov
cmp
dec
aas
push
push
push
dec
pop
ss
xor
add
(bad)
daa
pop
push
and
je
pop
mov
add
cmc
or
fimul
aas
add
jbe
push
aad
mov
movs
inc
adc
movs
nop
add
xchg
jmp
add
daa
ret
dec
int3
and
xchg
data16
dec
imul
push
push
ds
mov
jl
leave
mov
pop
test
and
fdivr
test
mov
sar
push
jae
add
dec
cmps
imul
mov
cmp
and
iret
or
ss
jne
xchg
push
sti
daa
push
scas
leave
add
mov
jo
cmp
fmul
dec
(bad)
mov
fbstp
pop
pop
(bad)
sbb
jnp
add
lods
push
add
and
mov
imul
sar
lock
jo
pop
adc
jne
test
xchg
inc
jle
out
pop
add
push
jnp
popa
adc
movs
inc
jno
les
pop
cmp
xchg
and
loopne
hlt
mov
imul
adc
jecxz
inc
cmps
mov
push
fimul
push
pop
jmp
sbb
or
scas
lods
outs
sbb
mov
push
les
xchg
push
test
movs
mov
lds
addr16
lods
xor
push
mov
adc
ret
mov
ror
js
mov
jb
(bad)
pop
cmp
je
test
pusha
sahf
jb
jg
sbb
and
pop
rol
or
jb
shl
jns
sar
mov
mov
cmp
jl
in
adc
mov
jg
jle
push
mov
jo
cmp
jo
mov
cmps
pop
dec
inc
mov
sti
push
dec
shl
test
mov
mov
scas
sahf
test
jne
cs
arpl
inc
pop
dec
pop
sub
mov
pop
push
mov
pusha
(bad)
out
(bad)
adc
mov
mov
sbb
mov
xchg
sbb
mov
adc
cmp
ret
out
cmp
or
or
or
or
dec
movs
inc
pop
jg
pop
sbb
mov
lods
or
jmp
shl
enter
push
or
cdq
fwait
addr16
(bad)
xor
and
int3
mov
xlat
imul
xor
(bad)
mov
push
push
rol
and
dec
loope
bndldx
xchg
sbb
rol
push
push
sbb
or
mov
pop
inc
mov
nop
jg
xor
xchg
or
and
jno
adc
add
int3
scas
or
loop
aaa
fsubr
sahf
mov
mov
rcr
(bad)
fdivr
and
inc
mov
sub
inc
cwde
mul
test
mov
neg
dec
test
mul
lea
sahf
xor
pop
les
stos
jo
movs
jg
movs
shr
dec
imul
aaa
pop
xor
int
es
sub
scas
adc
cmovle
jmp
sbb
mov
sub
push
inc
fidivr
ds
and
xor
sbb
inc
xor
or
add
aad
mov
pop
sbb
aaa
adc
ja
out
mov
aam
retf
inc
push
das
mov
sbb
inc
and
push
je
sbb
stos
daa
pop
jno
pop
push
test
mov
rol
add
or
aad
push
push
xor
jge
xor
add
nop
sahf
fadd
inc
cmp
push
scas
shl
inc
add
sbb
cs
jne
dec
xor
push
push
ins
xchg
popa
xchg
xchg
leave
mov
push
push
enter
push
sub
mov
(bad)
add
cmp
and
fwait
int
sar
inc
imul
and
or
dec
and
or
pop
dec
out
test
sbb
xor
jg
lock
icebp
aas
or
leave
test
add
std
out
shl
cwde
jb
out
test
or
cmp
mov
pop
test
xor
out
dec
adc
adc
lahf
iret
mov
jae
test
lods
cmps
pop
or
dec
push
imul
or
sahf
add
icebp
or
xor
push
xor
jo
adc
popa
pop
push
cmp
adc
les
add
xor
bound
mov
out
jne
call
push
push
xor
and
and
(bad)
call
inc
push
xor
popf
jecxz
test
cmp
pop
adc
mov
xchg
push
xlat
out
pushf
inc
sub
add
lock
pop
mov
cmp
mov
sbb
adc
sub
test
xor
push
shl
add
jne
inc
sar
xor
xchg
pushf
push
lea
xor
push
add
inc
mov
mov
push
arpl
jg
lea
adc
or
(bad)
push
xchg
sub
push
ins
je
and
pop
loope
push
cmp
jae
enter
push
xchg
popa
fdiv
mov
out
sub
test
dec
cmps
push
imul
add
jmp
mul
bswap
fimul
xchg
push
inc
dec
sub
test
inc
pusha
loope
nop
mov
lods
rcl
cs
dec
push
movs
pushf
cli
xchg
add
inc
add
jo
movs
ficom
xor
add
arpl
jne
dec
push
leave
dec
xor
mov
add
pushf
xchg
xor
add
inc
add
jnp
loop
enter
mov
mov
pusha
outs
mov
pop
or
shr
dec
in
cmp
jle
and
push
push
adc
test
mov
xor
out
xor
test
add
nop
shl
pop
cs
sar
or
or
data16
and
sbb
mov
or
adc
popa
js
test
sbb
in
scas
push
movs
loop
dec
push
in
mov
inc
mov
hlt
cmp
test
sbb
repz
cmp
(bad)
stos
ja
test
pop
push
retf
xor
repz
jl
pop
ja
or
idiv
jp
push
mov
mov
ins
add
call
jb
pop
call
dec
and
lahf
push
add
xchg
xchg
mov
pop
xchg
ror
pop
pop
mov
das
ss
mov
sti
xchg
ret
add
cld
aam
mov
mov
scas
add
ins
mov
mov
or
sub
push
inc
cmc
push
inc
inc
and
mov
cmp
mov
or
jmp
lea
ret
pop
mov
push
inc
movups
ins
push
dec
sbb
les
inc
out
mov
aas
and
mov
push
add
add
and
les
movs
add
in
movs
dec
cmp
mov
cmp
jl
pop
sub
sbb
ror
mov
cmp
je
mov
popa
sbb
jl
aam
push
test
addr16
and
and
in
dec
pop
adc
xor
and
lea
outs
sbb
es
dec
mov
mov
inc
movs
or
jmp
jge
cwde
pop
mov
ins
pusha
cmps
test
inc
add
ror
sbb
adc
or
xor
cmovae
pop
pop
jmp
adc
adc
add
dec
pop
mov
jp
inc
or
scas
mov
fdiv
in
ret
mov
cmp
push
xchg
cs
test
mov
ins
dec
hlt
mov
mov
es
or
sbb
stos
cmps
inc
xor
(bad)
cmps
inc
fmulp
push
int3
xor
hlt
xchg
inc
dec
xor
add
sbb
xchg
loopne
and
lahf
rcl
add
fcom
cmp
xchg
rol
imul
push
mov
scas
sar
mov
pushf
push
add
lods
xchg
xor
int
or
cmps
and
das
pop
pusha
lock
push
cld
fidiv
mov
jns
cmps
out
test
adc
adc
and
jno
in
cmp
cmp
inc
xchg
xchg
rcl
dec
ins
add
xor
jmp
dec
lock
call
retf
in
push
add
push
sub
xor
pushf
xor
push
mov
and
add
movs
add
rol
xlat
scas
adc
mov
ja
xor
sti
(bad)
adc
lea
pop
mov
enter
dec
sub
arpl
dec
in
movs
(bad)
ds
adc
not
hlt
sbb
fldcw
mov
or
loopne
test
cmps
lock
adc
xchg
xlat
in
push
lods
into
inc
xlat
push
sbb
sub
jl
and
call
dec
or
in
call
sub
mov
add
jmp
daa
push
xchg
fild
dec
or
pop
sub
out
jo
push
pop
lock
dec
dec
ficomp
inc
dec
cmp
mov
out
or
xchg
mov
daa
adc
dec
je
push
pop
and
inc
xor
lock
xchg
xchg
stos
pushf
stos
pusha
clc
scas
or
mov
iret
mov
sbb
test
inc
mov
fldenv
pop
push
out
pop
and
add
sbb
and
repz
xchg
mov
jno
(bad)
xor
loope
ret
jbe
dec
addr16
xor
xchg
test
pop
add
cmp
mov
cmc
mov
das
out
mov
loop
and
lods
mov
test
mov
push
xor
sbb
and
sbb
dec
cmp
adc
push
cld
push
ins
js
test
dec
test
inc
jmp
outs
sub
pop
xchg
sbb
push
jno
cwde
add
dec
cmps
adc
mov
jl
les
cli
pop
or
inc
ret
push
add
dec
cmp
add
or
add
add
xchg
add
xchg
inc
add
repnz
mov
xchg
ret
test
and
pop
push
dec
ror
inc
inc
cmps
and
and
cmp
call
inc
sti
in
retf
aam
pop
or
or
push
dec
mov
add
daa
pusha
stc
jle
adc
or
mov
add
push
test
and
add
push
bound
ins
jge
pop
mov
push
push
scas
ja
and
adc
popa
jmp
test
test
movups
mov
mov
xor
lods
int
ja
nop
mov
fs
arpl
mov
push
pop
push
ins
jno
mov
mov
or
xor
adc
and
cmp
in
add
popf
push
xchg
fbstp
mov
add
jp
push
add
inc
ins
gs
popa
and
mov
gs
add
sti
das
adc
in
dec
aaa
in
(bad)
or
ins
(bad)
pop
mov
fdivr
pop
push
ret
inc
nop
sub
and
push
inc
inc
jl
sbb
les
push
mov
subps
int3
push
add
clc
cmp
shl
mov
lock
stc
mov
adc
sub
push
push
(bad)
jo
ins
sahf
pmullw
xor
scas
jl
ror
jns
pop
xchg
ret
test
sub
int
jno
and
retf
pop
lock
fcomp
sub
mov
jecxz
bound
jmp
push
arpl
add
pop
pop
icebp
dec
sbb
(bad)
pop
and
push
call
sti
lock
call
or
cmp
push
jl
sbb
dec
or
mov
push
rol
xchg
arpl
or
test
cmp
repz
cmp
adc
mov
and
inc
cld
imul
dec
cmp
jns
ds
add
mov
and
fs
cwde
mov
pop
dec
mov
in
jl
imul
cmp
in
div
cmovge
mov
sahf
inc
imul
inc
cmp
in
add
daa
add
popf
inc
jle
jmp
cwde
popf
mov
inc
clts
sar
or
loope
adc
inc
cmp
lods
adc
pop
out
sub
(bad)
cmp
push
(bad)
or
in
sbb
sahf
sub
or
lods
or
popa
lods
mov
dec
pop
inc
lea
enter
push
mov
dec
pop
and
test
(bad)
sbb
fcomp
inc
shl
das
inc
pusha
jnp
cmp
xor
xor
or
dec
add
adc
popa
fs
jns
cmp
nop
mov
sub
loopne
fisttp
out
adc
adc
or
pop
repnz
push
pusha
imul
test
adc
add
or
push
add
enter
and
mov
mov
pop
add
shl
mov
pop
cmps
push
pop
(bad)
repz
in
nop
cli
mov
add
jnp
inc
mov
push
xchg
xlat
rol
aaa
cmp
pop
es
adc
pop
enter
fdivr
(bad)
or
fild
mov
sub
jle
loopne
fild
out
pop
add
add
cmp
or
or
aam
mov
mov
pop
pop
and
pop
add
or
jnp
cmps
je
test
dec
jns
inc
add
or
add
dec
pop
push
add
adc
mov
(bad)
push
inc
hlt
inc
push
or
jmp
add
test
inc
into
fadd
or
xor
pop
icebp
pop
inc
adc
or
push
pusha
shl
mov
or
mov
push
stos
lock
in
out
andps
daa
scas
daa
sub
ins
and
ins
push
loopne
jo
or
xchg
popa
push
inc
inc
adc
and
add
and
inc
xchg
arpl
in
std
mov
je
imul
fist
cmp
jae
add
es
retf
jmp
fisub
adc
sahf
gs
fistp
adc
sub
in
sbb
sbb
int
int3
into
push
push
or
add
shl
test
je
(bad)
and
inc
cmc
call
push
inc
adc
sbb
push
aam
sbb
inc
nop
pop
pop
and
stos
lock
adc
bound
inc
dec
mov
sbb
popa
jmp
dec
pop
pop
and
sub
test
fild
sub
ins
or
mov
push
test
cmp
xchg
stos
mov
iret
sbb
call
mov
sbb
mov
rcpps
ret
or
xchg
mov
mov
inc
outs
adc
mov
xchg
in
or
ror
xchg
nop
inc
mov
inc
pop
mov
adc
daa
cmc
xbegin
and
xor
xor
xor
inc
mov
inc
dec
dec
dec
dec
dec
dec
dec
dec
ss
outs
xor
pop
pop
pop
shr
sub
push
lahf
push
rcl
push
xchg
inc
and
retf
and
sub
and
mov
pop
push
pop
scas
inc
jmp
sub
cwde
adc
frstor
fdiv
inc
std
cs
test
jbe
cli
and
add
add
jo
add
push
mov
jns
add
inc
adc
(bad)
pop
or
icebp
cld
mov
retf
cmp
push
inc
movs
rcr
pop
jle
sub
sub
sbb
test
adc
daa
mov
mov
sub
jge
add
test
add
or
in
sub
std
sub
xor
cmc
scas
aad
imul
dec
ds
mov
xor
sar
cmps
jge
cmp
mov
ss
push
pop
or
fwait
in
loope
dec
int
sbb
test
xor
fild
imul
in
ret
xor
push
inc
inc
xchg
lea
pusha
sub
jmp
pop
es
fisttp
jo
xchg
inc
pop
rol
call
sbb
push
les
or
adc
pop
xor
and
add
sbb
sar
mov
hlt
je
test
iret
inc
adc
sbb
mov
xchg
shl
mov
adc
cmp
jnp
into
or
pushf
jmp
sub
adc
aam
fstp
and
or
mov
sub
rol
add
mov
and
jo
or
leave
test
das
inc
jmp
popa
sbb
dec
or
mov
sub
xchg
jmp
add
sub
mov
xchg
movs
scas
ins
xchg
inc
(bad)
or
jmp
inc
ret
fs
(bad)
sti
push
add
lods
mov
mov
enter
ds
cli
pop
pop
mov
adc
mov
mov
and
pop
dec
sbb
or
or
xchg
push
fistp
cmc
mov
push
cmp
ja
sbb
xor
mov
cmp
je
mov
add
cmc
fisttp
popa
test
add
mov
ret
push
sub
and
xor
or
(bad)
jmp
jnp
clc
icebp
or
jp
ficomp
pusha
jmp
sub
mov
add
jle
arpl
fisubr
es
sub
push
add
sub
lock
ja
jo
imul
mov
pop
mov
jmp
jmp
xor
nop
into
push
cmp
add
pop
leave
pop
and
jbe
aaa
in
xlat
adc
and
outs
jb
out
or
dec
adc
sar
xchg
(bad)
dec
call
xor
dec
cwde
xchg
sub
aas
movs
sbb
outs
cmp
sbb
add
xchg
shr
add
inc
imul
sbb
pusha
pop
push
cmp
add
adc
add
push
inc
arpl
out
shr
cmp
dec
sahf
cdq
sahf
fnstenv
pop
ins
cmp
mov
aas
cmp
ffreep
add
sbb
cmps
fadd
push
fisub
pusha
aas
leave
mov
mov
enter
xchg
js
mov
jg
imul
mov
(bad)
pop
mov
aas
mov
dec
xchg
jle
push
push
mov
imul
add
add
adc
xchg
push
jbe
aas
mov
ja
xlat
int3
mov
sub
iret
imul
mov
push
cmp
add
push
mov
data16
inc
mov
in
xchg
js
movs
inc
xor
push
mov
movs
add
add
mov
sbb
inc
push
add
jmp
int3
mov
pop
or
and
(bad)
jle
(bad)
adc
push
dec
(bad)
cmp
push
push
js
imul
nop
push
data16
xor
add
ret
cmp
xchg
xchg
lods
test
pop
outs
add
rol
clc
push
rcl
addr16
adc
sbb
cmp
sub
jecxz
imul
fucomi
dec
ins
cmp
dec
jae
enter
push
pushf
fs
push
movs
lock
movs
jo
cmp
mov
sbb
push
mov
push
pop
jae
pop
test
add
mov
aas
sbb
scas
and
aam
lock
adc
rcr
test
int
or
xchg
mov
mov
adc
dec
test
in
inc
fdivr
scas
adc
push
cmp
mov
or
push
scas
je
or
rcr
dec
push
imul
jmp
cmp
push
vpaddusw
cmp
inc
into
test
call
jecxz
cmp
mov
inc
xchg
or
(bad)
mov
sub
movups
test
dec
cwde
sti
cmp
mov
(bad)
outs
call
ins
stos
push
adc
pop
pop
dec
arpl
xor
imul
inc
shr
inc
daa
cmp
sub
adc
dec
sti
xchg
and
js
or
out
or
inc
xchg
pop
nop
ds
mov
ret
sahf
push
outs
add
inc
adc
inc
pop
xchg
jl
pop
mov
add
mov
pop
adc
or
adc
xchg
inc
or
leave
adc
mov
push
js
pop
mov
adc
and
retf
pop
test
inc
mov
adc
mov
shl
aas
xchg
push
mov
mov
sbb
mov
sbb
retf
xlat
mov
call
fst
ins
push
push
adc
push
push
je
fadd
data16
call
test
test
add
push
repz
add
xchg
or
(bad)
or
sahf
xchg
scas
clc
or
(bad)
push
add
push
inc
pusha
iret
dec
loope
test
xor
push
jl
adc
call
jge
mov
sub
iret
pop
pushf
push
inc
pusha
shl
mov
mov
stos
inc
mov
cmp
lds
xor
outs
jle
clc
mov
and
adc
cmp
jae
adc
icebp
mov
repnz
or
jbe
sbb
or
cdq
or
mov
sbb
and
mov
inc
imul
test
push
or
push
fwait
adc
jg
mov
push
mov
int
fucomip
pop
xor
or
mov
mov
imul
imul
mov
sbb
clc
call
xchg
loope
mov
push
(bad)
fidiv
fidivr
jmp
jae
and
and
outs
add
add
pop
mov
and
dec
add
push
adc
paddusw
push
shr
cvtps2pi
mov
xchg
ins
fnstenv
call
adc
stos
add
daa
test
inc
pushw
ja
cmps
mov
retf
je
mov
jo
aad
jle
in
ins
jge
jg
js
add
push
or
inc
int
or
fbstp
mov
jle
inc
or
scas
jl
xor
js
sbb
adc
push
cwde
or
pushf
movs
add
mov
sbb
stos
push
ins
adc
cwde
and
or
enter
iret
ret
cs
dec
and
and
icebp
scas
jbe
(bad)
push
xchg
add
push
mov
cmp
test
es
sub
addr16
and
fdiv
inc
and
fild
ins
jl
inc
stos
je
inc
xor
lea
sbb
and
mov
jecxz
mov
xchg
iret
adc
inc
(bad)
sbb
loopne
stos
outs
movs
inc
jle
cmp
inc
iret
dec
cmp
es
rol
adc
xlat
sub
adc
imul
mov
das
loopne
sub
fcomip
sbb
hlt
enter
inc
je
cld
fsub
std
movs
add
shl
xchg
mov
mov
repz
inc
cdq
pop
inc
into
dec
jl
ds
sbb
shl
enter
push
sbb
adc
ret
push
xchg
push
cli
lock
test
or
je
dec
sbb
xor
mov
hlt
mov
add
sub
js
pop
lock
inc
xor
or
cmp
push
enter
push
pusha
pop
pusha
and
dec
sbb
movs
jno
rol
jl
loope
shr
dec
cld
arpl
mov
mov
mov
imul
or
and
dec
pop
adc
jmp
or
dec
adc
ret
mul
dec
inc
lock
inc
dec
push
or
dec
(bad)
jo
aaa
pop
push
push
inc
adc
mov
in
inc
cmp
push
fsubr
lods
cmp
push
add
mov
mov
cmp
dec
xor
ss
clc
mov
fld
mov
cdq
nop
fwait
(bad)
rol
popf
mov
pop
pop
push
or
push
dec
or
sub
sub
push
add
inc
push
sub
xchg
add
lock
rol
pop
movs
adc
dec
dec
inc
or
pop
add
aad
outs
add
jo
or
push
dec
cmc
pop
mov
daa
sub
add
and
push
pop
add
jnp
pop
iret
hlt
and
sbb
adc
hlt
sub
inc
add
dec
xor
jmp
or
pop
jns
or
jne
sbb
inc
xor
leave
lock
ror
cld
add
pusha
test
jp
ds
adc
fild
push
rol
clc
jae
call
cmp
inc
xchg
cmps
dec
add
cmp
loopne
push
sub
sub
add
fs
mov
aaa
fistp
dec
popa
push
push
cs
and
popf
mov
adc
dec
ja
or
xchg
jne
loopne
ret
call
dec
iret
push
inc
lock
adc
pushf
inc
rol
fmul
xchg
imul
dec
loopne
add
bound
cmps
psrlq
fisttp
add
rcl
add
xchg
add
(bad)
or
mov
mov
sub
enter
not
sub
jmp
add
out
bts
repz
and
cs
cmp
or
and
ss
xchg
call
call
call
inc
out
test
(bad)
push
(bad)
or
jo
jns
fsub
(bad)
loop
leave
inc
and
sbb
pop
daa
call
push
clc
and
mov
mov
cpuid
and
inc
ins
stos
inc
clc
cmp
xlat
mov
lods
clc
sub
clc
sub
and
or
dec
lock
and
add
into
pusha
sub
and
push
jb
repnz
movs
lea
and
arpl
add
bound
pop
inc
and
sbb
pop
sub
xchg
retf
call
test
test
inc
movs
leave
cdq
mov
and
sbb
cmp
cmp
pop
push
out
cmp
sbb
loopne
cmp
add
cmp
push
mov
or
ret
adc
jno
cmp
data16
mov
inc
stos
add
fwait
and
jecxz
rcl
pop
shl
sub
and
xlat
pop
dec
push
adc
jnp
cmp
in
sub
jae
xchg
add
sub
inc
je
fs
mov
sbb
pop
adc
jmp
imul
inc
mov
push
mov
je
cmps
push
je
add
(bad)
xor
mov
in
lock
pop
pusha
inc
push
sbb
jmp
fist
xchg
scas
mov
imul
adc
push
fs
(bad)
and
sub
jp
repz
pop
jl
or
mov
test
out
dec
je
lods
mov
pop
push
sub
or
xchg
out
nop
sbb
dec
loopne
pop
mov
or
add
pop
retf
in
add
xor
lock
loop
push
cmp
mov
rol
hlt
bound
push
popa
je
cmp
adc
cs
dec
cld
(bad)
inc
lds
inc
lock
call
enter
inc
push
repnz
add
mov
mov
jmp
dec
popf
xor
dec
es
(bad)
ja
ficomp
cdq
jmp
sbb
int
mov
push
out
sub
dec
mov
add
les
cdq
retf
xor
mov
push
aas
add
cld
ja
jae
rcl
jle
int
jge
jle
mov
xor
(bad)
sbb
in
fistp
inc
push
and
push
add
fsubr
test
dec
adc
popa
retf
push
ds
icebp
mov
js
add
out
mov
data16
fst
out
lods
cmp
fdiv
ret
sub
mov
cmp
ret
dec
fst
push
add
out
mov
lea
mov
ret
pop
outs
and
mov
test
fs
xchg
in
pop
jb
xchg
mov
cmp
daa
and
lahf
(bad)
add
cwde
fstp
dec
(bad)
aam
pop
cmp
popa
addr16
jne
sbb
cmp
and
jl
gs
inc
push
std
jecxz
pusha
in
pop
push
pop
je
cmp
inc
ret
stos
adc
or
ins
cmps
cmp
pop
and
xor
xor
ins
add
mov
enter
jno
jnp
retf
cmps
out
aas
je
(bad)
sahf
movs
dec
add
pop
fisub
retf
and
mov
push
push
jne
inc
jae
add
dec
push
add
inc
int
xor
aas
pop
or
adc
sar
pop
mov
push
fmul
pop
mov
outs
fidivr
shr
push
inc
inc
adc
dec
je
mov
(bad)
and
inc
xchg
aaa
mov
add
sub
in
cmp
pop
xor
lock
or
call
mov
lds
xlat
test
lock
test
sbb
ins
in
sub
add
add
sbb
pop
cmp
cmp
add
ror
fs
and
shl
fs
push
fld
rcr
mov
mov
xchg
es
and
push
ss
push
frstor
(bad)
sbb
sbb
(bad)
js
test
cs
push
pop
lods
std
adc
aas
jbe
and
(bad)
xor
xlat
sub
sbb
popa
inc
inc
es
ret
mov
mov
sub
or
or
and
stos
push
pop
movs
add
push
test
aam
push
out
pop
push
mov
xor
jg
pop
and
into
fdivr
mov
or
mov
push
lods
jmp
adc
ficomp
lods
inc
fcomp
dec
aaa
sub
and
in
adc
xchg
jne
xor
fld
(bad)
jb
and
mov
and
mov
sbb
jmp
repz
inc
inc
popf
push
arpl
movs
mov
lock
aam
pushf
or
mov
retf
ss
adc
mov
pop
popf
inc
inc
sbb
inc
sbb
push
les
leave
xchg
mov
or
inc
mov
in
mov
js
rcr
pusha
xchg
push
xor
mov
push
adc
mov
add
cmp
push
retf
out
pusha
inc
cmps
pop
cmp
xchg
dec
jno
inc
dec
xchg
mov
push
mov
ds
addr16
dec
test
xchg
das
and
inc
inc
inc
mov
pop
lea
fnstsw
dec
push
add
addr16
inc
in
mov
jg
jge
adc
pop
cld
and
or
jo
sub
add
adc
jl
fistp
enter
mov
inc
fdivr
fsubr
popf
cmp
add
(bad)
shl
shl
fistp
push
cmp
xchg
dec
sets
jnp
push
xchg
or
retf
xchg
retf
inc
and
les
dec
mov
pop
mov
xor
push
jo
bound
mov
mov
(bad)
pop
cmp
cmc
cwde
lea
ja
mov
(bad)
and
mov
push
pop
pop
pop
and
inc
pop
mov
ja
movs
aas
ins
jae
xor
inc
xchg
jne
das
sbb
push
push
das
dec
xchg
nop
and
enter
int3
mov
mov
sub
mov
ins
inc
dec
jg
adc
and
das
push
cmps
(bad)
in
shl
scas
inc
imul
mov
cs
mov
test
and
call
or
or
and
and
dec
sbb
mov
leave
out
add
adc
scas
xor
cwde
cli
test
or
dec
xor
loopne
jmp
push
outs
add
mov
js
arpl
push
jl
loope
(bad)
xlat
jb
out
add
or
into
fs
or
xor
jmp
mov
hlt
xor
(bad)
mov
mov
push
gs
pop
shl
dec
or
add
sar
mov
or
rcr
mov
sub
push
pop
adc
in
mov
dec
xor
sub
jge
adc
xchg
sbb
shl
or
call
dec
loop
iret
and
or
or
inc
ins
inc
mov
adc
push
mov
cmp
mov
popa
push
std
adc
adc
or
add
loope
pop
and
dec
jne
sub
mov
mov
stc
sub
push
lock
fnstcw
sub
push
mov
push
(bad)
or
cld
push
dec
push
(bad)
push
sbb
aaa
push
dec
pop
les
das
inc
add
xor
(bad)
movs
mov
push
cs
arpl
repz
(bad)
add
or
mov
ret
mov
js
outs
dec
int3
add
call
les
xor
test
pop
sbb
add
sbb
jmp
lea
fild
hlt
dec
fld
icebp
fldcw
popa
pop
hlt
sbb
in
loopne
sub
add
enter
xor
rcr
mov
jle
clc
les
mov
test
cwde
xor
mov
sti
ins
ret
jne
dec
push
sbb
cmps
pop
dec
xor
out
fwait
pop
xchg
push
aam
je
push
sbb
sahf
add
dec
repz
fdiv
push
out
add
rcr
call
xchg
xchg
jne
xchg
jmp
cmp
data16
int3
push
jnp
push
out
lds
sub
(bad)
rol
dec
xor
(bad)
jne
or
mov
xchg
cmps
cmp
adc
xor
add
inc
jmp
inc
jo
cmp
mov
sbb
fist
push
cmp
jmp
push
fisub
std
mov
fs
push
in
xor
fcmove
jle
cmp
dec
jmp
inc
fcmovne
push
int3
das
xor
imul
adc
mov
stc
loope
pop
xlat
repnz
popa
pop
or
je
mov
adc
xor
xor
call
sahf
dec
sbb
data16
rol
jl
movs
add
clc
arpl
pusha
sbb
addr16
add
pop
sar
jge
push
xor
inc
loope
(bad)
fucomp
test
retf
mov
cmc
sbb
xor
add
mov
inc
es
jno
xor
aad
mov
jecxz
bound
lods
test
sub
pushf
arpl
ds
fnstcw
js
sbb
xor
or
mov
cmc
test
push
cmp
push
mov
sbb
jne
nop
data16
pusha
sahf
xchg
add
add
xchg
ins
lods
push
les
add
rol
add
pop
cmp
ja
sti
jl
inc
test
mov
call
sbb
mov
loopne
and
mov
dec
ret
inc
cmp
fwait
(bad)
pop
call
mov
xor
daa
scas
xor
sbb
add
push
push
fsub
or
aaa
dec
and
and
adc
mov
dec
movs
popa
movs
idiv
cmp
or
mov
adc
cmp
lahf
push
push
adc
jmp
jp
cmp
adc
push
adc
fs
xchg
and
loopne
repnz
mov
jne
sbb
cmp
outs
test
and
not
lock
or
inc
push
mov
adc
popa
vcvtdq2ps
inc
cmp
div
pop
addr16
das
inc
xor
inc
jae
xor
dec
lahf
add
inc
xor
mov
fistp
mov
mov
inc
stc
and
test
jl
cmc
dec
push
mov
mov
xchg
push
sbb
adc
push
lahf
rcl
lods
arpl
(bad)
adc
cs
or
es
ret
add
lahf
pop
and
fcom
jae
jne
pusha
xchg
pop
dec
outs
hlt
xchg
mov
inc
loopne
push
and
cmp
xchg
xchg
push
add
inc
jbe
jmp
(bad)
fild
dec
pop
test
hlt
jp
js
push
mov
mov
scas
xlat
(bad)
and
push
jmp
adc
sub
add
adc
or
and
jo
call
js
jmp
aam
sbb
add
inc
fs
js
mov
(bad)
and
js
loopne
arpl
mov
dec
mov
sbb
push
add
test
ins
xchg
mov
cdq
stc
nop
daa
mov
cmp
push
int
lods
or
aaa
test
adc
les
rcr
jo
or
into
aas
clc
mov
or
sub
pop
adc
test
mov
jmp
push
add
loop
jo
xor
hlt
xor
sbb
sub
jo
or
ret
(bad)
xchg
push
or
or
dec
test
rcl
mov
sbb
dec
sub
pop
add
scas
das
adc
inc
nop
lea
xchg
add
sbb
psubb
mov
add
cli
xor
fwait
xchg
jbe
mov
inc
outs
popa
sub
sub
jl
adc
push
cli
dec
ret
in
mov
lods
popa
lods
add
retf
inc
daa
retf
jecxz
xor
out
scas
sub
add
int3
cmp
adc
test
and
loopne
pusha
dec
sbb
aaa
or
pop
mov
cmp
xor
xchg
ror
leave
jb
imul
pop
mov
mov
add
push
add
sub
push
sub
jge
inc
cwde
std
mov
sub
push
and
inc
or
je
sub
loopne
outs
pop
scas
icebp
push
ins
jmp
pushf
rcr
repz
jbe
sub
retf
dec
push
push
cdq
nop
cld
stos
push
dec
xchg
add
repz
inc
addr16
rcr
sbb
xor
enter
repz
(bad)
xor
test
popa
pop
push
mov
xor
pop
sub
mov
cmps
jecxz
int3
xor
add
xchg
inc
jle
adc
popf
shr
retf
dec
popa
or
lods
movs
fwait
ret
lahf
(bad)
pop
movs
add
je
loope
ins
jg
rol
ret
xor
and
call
and
mov
fadd
inc
cmp
sbb
iret
inc
jmp
jmp
cwde
hlt
adc
xor
imul
pusha
mov
test
cmp
add
cld
or
sbb
cdq
add
push
lahf
lods
test
mov
mov
inc
push
add
lea
dec
test
cmp
dec
mov
jb
por
lahf
movs
ja
mov
pusha
loop
das
(bad)
sbb
mov
cmp
lock
cmp
pop
add
lea
pop
mov
push
sar
add
and
ficomp
(bad)
cmp
inc
xchg
arpl
or
sub
jle
mov
test
inc
sub
push
clc
out
cmp
inc
out
mul
out
or
int3
das
mov
push
inc
or
xchg
(bad)
push
fwait
mov
mov
push
add
shr
cmp
inc
int3
inc
jmp
push
xchg
inc
addr16
std
or
mov
inc
div
or
cmps
mov
ins
add
(bad)
in
inc
or
inc
or
sub
pop
in
jp
pusha
aaa
cmp
aas
in
cmps
int3
jmp
iret
dec
inc
xchg
sbb
dec
jmp
xchg
and
fidivr
ja
push
nop
or
loop
cmc
push
and
pop
or
je
ret
inc
call
sbb
pusha
test
test
add
xor
adc
xor
sbb
push
cmovl
imul
jns
mov
(bad)
jmp
(bad)
out
push
or
sub
cli
dec
pusha
or
adc
xor
pop
sub
inc
jp
xor
pop
pop
or
hlt
cmps
mov
and
mov
hlt
pop
pop
ror
push
loopne
push
xor
sub
loopne
sti
rol
mov
pop
aam
inc
shl
xlat
(bad)
aam
or
push
push
inc
in
fimul
and
into
ja
jno
in
stc
and
lods
push
cmp
mov
push
cli
repz
inc
mov
add
jge
(bad)
(bad)
jmp
sbb
cmp
xchg
out
int3
lods
adc
pop
rol
es
xor
jns
test
(bad)
jl
adc
xor
jne
push
hlt
sub
dec
loop
pushf
dec
mov
jb
jns
jno
mov
ins
movs
or
pop
push
mov
or
push
into
or
mov
push
adc
clc
ds
nop
push
in
aaa
in
movs
fwait
xor
sub
jl
jecxz
in
pop
je
push
cmpxchg
(bad)
push
ss
xchg
push
clc
pushf
lods
xor
cmp
ret
inc
xor
sti
sbb
push
ja
add
test
clc
in
add
pusha
(bad)
movs
jmp
jb
push
movs
mov
pusha
inc
inc
das
cmp
xchg
test
mov
clc
je
cmps
add
inc
adc
cmp
xor
push
pop
inc
add
call
fmul
jmp
or
push
lock
fadd
cdq
test
test
inc
mov
xor
aaa
fstp
push
jmp
enter
ret
aas
cmp
sbb
lods
ret
sbb
adc
mov
add
xor
loopne
push
pop
stos
add
fbstp
adc
dec
sub
pop
jmp
loopne
add
cmp
loopne
(bad)
rcr
fisttp
dec
retf
imul
int3
inc
fmul
shl
nop
daa
mov
pop
pop
adc
dec
dec
push
or
pop
ss
xor
sub
aam
or
loope
jo
aaa
push
pop
iret
pop
fadd
lock
loopne
push
retf
bound
sbb
sub
rcr
jmp
push
push
cmp
dec
pop
or
cmp
or
add
aad
int
daa
sub
sub
jmp
pop
adc
ins
fucomip
je
sub
je
inc
pop
add
sub
repnz
lea
dec
add
xchg
and
into
in
mov
and
jmp
jo
imul
sub
mov
hlt
daa
aam
inc
push
test
add
jl
jl
add
adc
push
mov
push
xchg
in
mov
or
mov
clc
push
and
loop
xor
sti
leave
hlt
inc
jge
or
lea
(bad)
sbb
dec
add
push
adc
add
loopne
outs
mov
ds
mov
adc
mov
mov
ret
iret
enter
inc
pop
or
adc
lds
inc
or
or
inc
jnp
dec
jge
push
jnp
loope
stos
mov
push
out
xor
add
mov
lea
sub
rol
jmp
call
lock
mov
and
jo
mov
sub
jg
xor
or
ret
rol
add
not
fadd
movs
mov
mov
aaa
call
xchg
xchg
adc
sub
jmp
sbb
mov
jmp
xchg
mov
sbb
cmp
(bad)
dec
add
adc
inc
adc
add
je
fsubr
dec
adc
in
xchg
or
dec
jo
in
pushf
jbe
dec
push
xor
inc
push
push
pop
push
inc
mov
or
or
repnz
or
xchg
ja
ret
sub
push
je
push
jne
jb
(bad)
push
dec
mov
or
fisub
xchg
or
pinsrw
jmp
sub
fsubr
push
push
lds
add
cmp
and
mov
adc
add
das
sahf
movs
or
lock
push
pop
dec
les
add
adc
pop
pop
add
adc
and
lock
and
test
mov
xor
xor
in
adc
add
popa
add
(bad)
sub
cmp
call
push
loopne
and
jb
or
sbb
je
pushf
dec
lea
push
mov
jo
sbb
xchg
aaa
push
jl
outs
or
ds
or
cli
std
jmp
jge
mov
repnz
cmp
rol
sbb
mov
movs
mov
mov
ret
or
(bad)
lods
(bad)
int3
pop
mov
loop
std
pop
mov
(bad)
cmp
rcl
push
sahf
ins
outs
inc
xor
xor
and
jp
test
lahf
inc
jns
inc
or
mov
push
adc
(bad)
mov
fnsave
loopne
or
adc
sbb
fld
push
stos
lds
cmps
or
mov
outs
add
pushf
push
inc
and
ficomp
dec
sbb
out
lea
das
call
jmp
mov
in
mov
or
gs
stc
adc
add
or
and
fisubr
sbb
push
mov
and
xor
or
add
sbb
fdiv
cs
pop
push
mov
xor
push
fs
sbb
lahf
mov
fs
cmp
sub
mov
xchg
pop
push
mov
adc
(bad)
cld
or
es
icebp
and
add
ss
into
repz
scas
enter
frstor
mov
add
jne
mov
mov
loope
add
push
sbb
ins
fbstp
jmp
inc
jg
dec
inc
add
sub
daa
or
mov
sti
jl
mov
add
xor
jmp
jne
dec
jl
inc
sbb
push
mov
js
ret
mov
adc
fwait
push
sub
ins
ret
sbb
jo
je
movs
test
add
adc
lods
sti
ins
adc
mov
popf
pusha
out
fdivp
push
mov
push
push
xor
je
mov
out
jns
mov
fs
idiv
pop
push
test
cmps
stc
sahf
dec
push
dec
or
cmp
jns
inc
pop
dec
inc
push
push
jns
or
adc
test
add
jp
(bad)
fst
lods
mov
adc
sub
rcr
ss
mov
sbb
mov
push
add
dec
call
dec
add
leave
iret
or
js
lods
and
retf
enter
or
mov
clc
mov
push
push
add
pop
dec
outs
arpl
mov
and
test
aas
add
and
ss
adc
je
adc
dec
xor
ins
add
dec
les
add
mov
jno
mov
mov
mov
xor
mov
xor
xlat
mov
je
ss
jl
in
add
(bad)
xchg
push
add
cmps
xchg
out
rol
sub
aas
call
cmp
push
pop
cld
aaa
inc
aas
or
or
aaa
or
int
fisubr
sbb
xor
xchg
add
dec
es
enter
mov
and
sbb
mov
add
add
xchg
fadd
inc
push
dec
or
sahf
cmc
adc
pop
jl
mov
fs
jo
cwde
add
in
(bad)
or
repnz
cdq
cmp
ds
repnz
outs
inc
push
push
pop
sbb
pop
or
arpl
repz
xor
sub
add
push
push
cs
ffreep
ffreep
imul
jae
into
mov
mov
adc
imul
fs
popa
js
aaa
in
shr
sbb
mov
push
xchg
add
fiadd
sbb
inc
aam
lock
inc
daa
repnz
repnz
inc
inc
sub
add
inc
inc
push
sbb
inc
mov
lock
or
pop
xchg
dec
inc
ja
jo
or
cmp
in
lahf
out
(bad)
and
push
add
cwde
fmul
mov
xor
jp
loope
and
xor
jmp
shl
inc
inc
sbb
lea
jp
dec
or
ret
les
pop
(bad)
sbb
adc
rol
int
add
bound
or
fsubr
ror
adc
cmp
sbb
std
gs
push
outs
mov
jl
ins
and
nop
prefetchwt1
dec
imul
movs
sbb
out
mov
das
mov
pop
(bad)
or
or
data16
into
repnz
shl
int
mov
add
cmp
pcmpgtb
push
jb
cmp
and
or
scas
cdq
adc
bound
adc
pop
or
cmp
outs
sbb
mov
das
jae
or
push
mov
and
stos
outs
jne
jb
mov
sbb
jnp
xchg
and
adc
xchg
cmps
jo
stc
sahf
push
or
add
add
hlt
cmp
xchg
addr16
adc
(bad)
push
adc
(bad)
sahf
sub
adc
icebp
add
test
and
(bad)
gs
shr
jno
lea
mov
loopne
xchg
xor
movs
pop
or
data16
imul
adc
jl
jg
fs
mov
push
jb
ins
popa
jb
or
or
pop
sbb
push
into
cmps
in
scas
push
outs
adc
repnz
(bad)
add
sbb
sbb
inc
cmps
pop
and
and
out
or
mov
(bad)
lahf
repnz
nop
arpl
dec
imul
push
or
add
mov
or
shr
rcr
mul
xor
xchg
adc
jo
xchg
sbb
and
xor
push
aas
adc
dec
jae
add
adc
push
push
push
dec
push
pop
js
enter
sbb
jbe
(bad)
or
mov
test
enter
inc
inc
add
popa
cwde
push
sbb
sub
sbb
mov
or
push
inc
loopne
cmps
mov
clc
pop
stc
sub
xchg
pop
inc
mov
inc
add
inc
aam
inc
ror
adc
inc
push
inc
nop
push
repnz
loopne
jle
fcom
not
inc
and
and
sub
push
inc
loopne
nop
cmp
pop
inc
sbb
and
nop
pop
inc
xor
clc
ins
pop
adc
inc
jo
nop
jb
pop
jns
inc
test
cwde
mov
int
js
push
mov
xor
jle
dec
and
sahf
in
lea
pop
je
sahf
imul
sbb
pop
cmp
aam
push
push
aaa
add
cmp
add
add
pop
add
add
jmp
add
add
add
add
adc
push
(bad)
ss
push
mov
mov
sub
mov
or
popa
loopne
or
sbb
add
mov
mov
dec
or
xchg
mov
push
jbe
jmp
fcmovbe
in
add
imul
clc
mov
jge
int3
sub
cs
js
repz
out
mov
jg
mov
ja
enter
push
in
adc
test
(bad)
cld
xchg
push
int3
xchg
push
xchg
ds
cmps
jge
mov
push
movs
imul
sub
xchg
ror
call
inc
lods
push
call
fld
push
sbb
push
ja
out
lock
fs
mov
mov
cmp
inc
jp
xchg
add
push
mov
mov
je
inc
sub
mov
jnp
jns
mov
lahf
pop
and
loope
sub
fld
loopne
add
and
add
adc
and
nop
sbb
add
sbb
jo
pop
retf
push
sbb
add
(bad)
pop
ret
bound
fidivr
jae
test
inc
mov
and
sbb
leave
outs
cmp
bswap
loopne
int
sti
mov
aas
adc
or
popa
inc
ins
jae
repz
dec
loope
jmp
dec
repnz
cmovg
adc
adc
pusha
pushf
(bad)
stc
sub
jne
add
lock
adc
ret
xor
pop
sbb
and
adc
fsub
mov
repz
repnz
mov
dec
in
add
(bad)
xchg
les
or
inc
sbb
push
pushf
or
lods
jne
aad
lods
fimul
call
adc
xor
pop
fnsave
dec
call
enter
or
(bad)
or
xchg
inc
fnstcw
shr
xor
enter
xchg
in
push
je
add
rcl
dec
cs
lds
pop
shl
and
cmps
clc
nop
xor
jbe
push
push
jae
push
xchg
inc
or
xor
xchg
or
push
and
or
mov
leave
add
push
sbb
mov
and
mov
int3
call
ss
fst
imul
xlat
inc
push
inc
mov
shr
into
sbb
sbb
cdq
shl
repz
lods
shr
mov
loop
cwde
fwait
sub
sub
fbstp
dec
movs
mov
xchg
mov
(bad)
xor
xchg
add
mov
xor
aam
ins
fs
inc
rol
jecxz
mov
adc
and
push
sbb
rol
mov
or
xor
mov
xchg
add
call
fcom
js
jae
mov
(bad)
and
je
shl
lock
call
sti
xchg
cmp
arpl
xor
fnstsw
pop
inc
xor
iret
cmps
call
je
dec
xor
fisttp
int
rol
cdq
ss
push
sbb
xchg
aad
cmp
mov
in
cmp
shl
gs
mov
adc
push
pop
nop
inc
or
and
adc
adc
ds
sub
sub
push
test
test
es
or
push
inc
adc
in
mov
loopne
ret
pop
mov
rol
sbb
push
dec
cmp
fsub
push
push
fadd
push
mov
ds
pop
repnz
je
fcom
or
mov
cwde
ins
push
in
pop
inc
ret
pop
ins
enter
adc
add
dec
gs
xor
cmp
inc
sar
shl
jmp
or
test
dec
mov
sbb
into
je
inc
push
dec
or
cs
jns
mov
add
popa
cmc
push
leave
add
mov
add
scas
sub
add
dec
lods
pop
push
push
scas
sbb
xchg
add
dec
je
enter
mov
int3
pop
repnz
add
and
pop
push
in
jno
xor
fadd
push
pop
jb
fmul
out
mov
loopne
xor
or
push
xchg
call
loopne
push
add
push
jo
bound
sbb
inc
push
cmps
gs
pusha
and
add
xchg
cmps
pop
lea
jno
push
inc
inc
sahf
ja
xor
dec
inc
inc
jne
add
push
add
aaa
push
dec
(bad)
into
test
dec
push
push
pop
enter
das
mov
or
repz
enter
clc
add
repnz
mov
rol
dec
mov
push
in
adc
jo
pop
mov
mov
inc
sub
test
pop
sub
shl
je
lods
das
aas
and
cmp
cdq
enter
mov
or
sub
inc
or
push
xor
lds
sbb
lods
not
push
ins
call
fwait
data16
cwde
add
push
or
mov
lods
ret
ss
pop
sub
sub
pop
ror
mov
in
sahf
nop
or
add
das
dec
fs
and
push
pop
adc
scas
cmp
xor
repnz
mov
in
sahf
inc
mov
inc
xchg
push
cmp
popa
or
sbb
and
and
ds
pop
in
add
inc
xchg
nop
mov
mov
xor
pushf
or
xchg
test
and
xor
xchg
cs
dec
push
dec
or
mov
pop
add
int3
or
mov
mov
stos
(bad)
cwde
clc
bound
mov
sqrtps
(bad)
mov
jmp
sbb
(bad)
jmp
retf
jmp
push
je
and
sbb
sbb
and
dec
mov
dec
cmp
int3
xor
leave
les
add
mov
and
repnz
dec
ror
pushf
ss
test
mov
xchg
and
inc
in
int3
dec
adc
dec
push
mov
cmp
cmp
pop
push
fimul
sub
xchg
lock
jae
hlt
mov
and
xor
je
add
movs
adc
add
add
mov
shl
out
fist
pop
call
cli
sub
(bad)
push
lods
ret
xor
call
sbb
mov
or
hlt
aam
ja
ret
dec
push
cmpxchg
je
mov
adc
les
or
sub
out
jbe
lods
mov
xor
ss
jo
lahf
pop
sub
ins
and
pop
cmp
xor
je
mov
ja
rol
ds
sub
out
aaa
cmp
daa
pop
imul
nop
pop
popa
sbb
enter
xchg
(bad)
push
inc
add
xor
test
xchg
add
std
sub
xor
jl
movs
and
dec
call
movs
jae
(bad)
pop
aaa
sub
xchg
les
sub
sbb
movs
mov
xor
imul
and
xchg
mov
addr16
loopne
push
imul
xor
ds
add
out
adc
add
or
mov
adc
adc
xchg
pop
sbb
dec
lods
or
mov
cmps
or
inc
(bad)
xor
mov
dec
xlat
ja
test
fcmovb
adc
adc
add
add
pop
js
movs
add
xchg
add
enter
add
lea
or
pop
push
or
add
in
ss
nop
xchg
movs
ins
add
maskmovq
test
pop
cmp
mov
lock
gs
sub
and
dec
test
mov
dec
push
ins
aaa
inc
ret
pop
cdq
push
outs
add
mov
call
dec
or
mov
cmp
inc
or
mov
sub
cmp
sub
ds
push
pop
xor
les
mov
mov
push
dec
aas
enter
mov
mov
xchg
data16
push
xor
adc
movs
sbb
or
mov
adc
inc
shr
dec
sub
test
cmps
jle
add
mov
jmp
(bad)
sbb
mov
das
sti
xor
imul
in
push
sbb
inc
sub
add
lock
je
(bad)
and
mov
stos
std
outs
call
dec
daa
add
or
or
add
xchg
pop
dec
test
iret
ins
or
retf
add
adc
sbb
pop
cmp
and
mov
xchg
jmp
cdq
mov
adc
push
test
enter
inc
or
movs
xor
aaa
cmp
gs
jle
cmp
push
cmp
popa
out
add
jmp
sub
arpl
ss
test
mov
mov
adc
nop
xchg
pop
push
cmp
adc
add
jp
dec
cmp
sbb
or
fld
dec
inc
add
lock
xchg
mov
lea
push
in
push
sub
add
ret
or
or
lock
inc
sbb
mov
jne
cmp
inc
sbb
enter
sub
neg
jmp
arpl
je
gs
xor
ret
and
cli
dec
sub
add
inc
dec
or
ss
inc
jecxz
ins
div
movs
sahf
fisttp
adc
stos
ins
shl
ss
mov
jmp
adc
inc
adc
xchg
inc
mov
and
dec
lock
push
dec
js
sub
add
mov
aam
ins
scas
sub
add
sbb
xchg
dec
jae
mov
cmp
popf
xor
rol
(bad)
sub
pop
jp
adc
jb
mov
pop
shl
ror
lea
xor
or
ins
mov
fs
fcmovb
inc
scas
sub
inc
cmp
paddusb
jle
ins
icebp
jmp
inc
inc
or
out
ins
out
cmp
adc
dec
or
sub
dec
xchg
retf
xor
shl
(bad)
fwait
lods
push
or
(bad)
mov
ds
rcl
xchg
in
sar
cs
cwde
adc
pusha
sub
out
cmp
dec
(bad)
xor
push
jmp
xchg
int3
and
push
xchg
push
mov
pop
cmc
mov
push
gs
outs
mov
or
or
je
sbb
jmp
lock
add
leave
push
sub
jmp
lock
popf
mov
sahf
out
push
stc
adc
dec
xchg
popf
out
int3
cdq
daa
or
aaa
add
jp
sbb
and
push
dec
jo
dec
inc
xor
jl
mov
jle
push
fwait
loope
add
dec
out
fs
call
push
and
sbb
sbb
jle
push
movs
adc
adc
popa
pop
fdivr
push
and
xchg
popa
sub
jne
inc
adc
in
cmp
inc
mov
add
add
js
sar
push
int
mov
popa
ja
je
mov
mov
or
call
mov
es
sbb
inc
repnz
(bad)
and
pushf
sbb
inc
popf
ins
jl
xor
dec
outs
jo
dec
popf
rol
rcl
data16
adc
sub
mov
or
dec
pop
das
add
mov
fnstcw
and
enter
sbb
call
std
sub
add
push
jbe
mov
and
mov
loopne
cmp
xor
pop
adc
ja
xchg
or
xor
mov
sub
xor
xor
js
push
push
test
sbb
cmp
pop
js
leave
jge
ja
pushf
mov
(bad)
nop
mov
mov
add
cmp
lods
or
push
sbb
xchg
(bad)
cld
inc
(bad)
mov
call
lods
xor
jo
sbb
and
or
pop
add
xor
or
xor
test
and
dec
cmp
sbb
enter
xchg
leave
aam
push
sub
pop
sub
add
cmp
pop
fisttp
and
mov
fsub
dec
xchg
stos
lock
push
(bad)
and
push
mov
mov
mov
jp
clc
sbb
or
inc
loop
imul
xchg
adc
movs
(bad)
mov
jmp
fwait
jp
aas
rcr
or
cmp
or
pop
adc
or
lea
push
ret
xchg
int3
mov
inc
cmc
push
sub
pushf
rcl
sar
cmps
sub
mov
add
mov
adc
xor
xchg
outs
xchg
movs
mov
or
sub
(bad)
adc
mov
add
mov
cli
add
jo
imul
sub
mov
jne
imul
pop
xor
movs
nop
out
ja
pop
aaa
cmc
clc
push
jne
mov
sub
retf
sbb
cmp
dec
outs
daa
sbb
lods
mov
mov
inc
in
mov
push
div
add
out
xchg
inc
inc
inc
inc
jecxz
ror
cmp
out
xchg
inc
mov
sti
cvttps2pi
pop
sub
mov
pop
aaa
inc
rcr
xchg
lock
int3
adc
pop
or
test
in
cmps
fnop
and
push
xor
xor
xor
inc
lock
adc
jnp
and
pop
adc
clc
and
ja
xchg
pop
je
mov
lods
cmp
sbb
rsm
xor
loopne
or
(bad)
frstor
movs
sbb
or
mov
aaa
fs
sub
fist
jno
inc
mov
add
sub
push
in
sub
sbb
ret
(bad)
jle
arpl
and
pop
dec
outs
pop
jb
inc
or
and
xor
xchg
dec
icebp
(bad)
outs
(bad)
or
pusha
push
daa
out
cmps
sbb
xchg
jmp
lods
add
or
mov
sar
in
jmp
movs
movs
cdq
sar
gs
xlat
fcom
add
fcomp
push
jmp
sbb
adc
enter
adc
adc
push
push
lea
push
dec
inc
xlat
mov
(bad)
mov
add
outs
or
lds
sbb
mov
sbb
pop
mov
adc
push
jle
mov
call
mov
outs
jnp
sbb
nop
outs
jnp
aaa
mov
pop
mov
aam
(bad)
push
adc
or
enter
xchg
push
hlt
fidiv
std
adc
fstp
adc
stos
inc
fcomp
shl
add
sbb
mov
or
loopne
popa
in
add
dec
or
cmp
(bad)
repnz
and
aad
mov
outs
icebp
push
xchg
dec
popf
or
cmp
js
es
sub
je
mov
xchg
xor
sub
dec
ja
cld
loope
jne
stos
mov
xchg
and
xlat
inc
pop
dec
mov
lods
dec
add
sbb
jns
dec
cmp
pusha
jne
jg
or
rol
not
mov
ds
ja
stos
or
call
inc
pop
pmulhuw
jg
mov
(bad)
xor
retf
push
or
and
test
and
mov
sbb
fmul
retf
mov
dec
add
dec
push
inc
dec
or
cmp
out
mov
push
(bad)
dec
popa
dec
xor
sbb
cli
sub
add
dec
stos
test
clc
clc
add
popa
push
loopne
jmp
or
push
xchg
sbb
jg
mov
adc
mov
xchg
sbb
fs
xor
sbb
in
loopne
xchg
xchg
xor
and
inc
shr
xchg
retf
test
xor
cmp
nop
fcom
dec
ins
jecxz
ss
pop
push
movs
lock
add
inc
in
fcom
pop
hlt
mov
xor
jns
or
cmp
fyl2xp1
aam
mov
mov
outs
in
inc
dec
mov
cwde
xchg
inc
in
sbb
sbb
sbb
dec
jp
jo
ret
xchg
pushf
icebp
test
sbb
add
mov
push
sub
add
push
adc
push
and
ret
and
je
push
stc
ins
or
lock
sub
fst
std
inc
adc
daa
cmp
das
out
jbe
in
push
daa
or
push
inc
pop
xor
push
ins
adc
and
mov
inc
inc
add
mov
xchg
mov
sub
add
jo
repz
xor
inc
lahf
ins
jns
test
push
xor
mov
pop
loope
sub
jno
in
add
add
xchg
mov
stos
lods
add
mul
sbb
mov
adc
mov
ficomp
mov
jl
jp
adc
inc
mov
inc
mov
xor
pop
jle
add
(bad)
xlat
mov
(bad)
sub
repnz
sbb
jmp
jb
mov
lock
or
mov
inc
lods
push
sub
push
cmp
sbb
jecxz
and
int3
enter
addr16
ins
pop
mov
adc
adc
repnz
push
push
add
test
cmps
push
clc
add
shl
mov
or
inc
hlt
lods
jae
(bad)
xchg
push
jmp
retf
iret
cmp
neg
inc
jno
enter
(bad)
pop
inc
inc
popf
xchg
dec
mov
jo
daa
(bad)
and
loopne
loopne
pop
add
cmp
mov
test
in
xchg
xchg
pop
mov
sub
ja
loop
add
mov
sub
enter
sub
setne
dec
mov
pop
ins
dec
jp
jle
jne
cmp
fs
add
sub
jmp
fs
scas
xchg
pusha
test
sbb
dec
lds
mov
in
push
mov
add
ret
aaa
jo
pop
dec
jo
call
je
pop
iret
(bad)
xchg
add
aaa
xor
gs
(bad)
nop
rcr
fldcw
xor
in
outs
adc
mov
clc
or
xor
xchg
out
xchg
push
hlt
repnz
mov
or
ror
xchg
adc
push
cld
(bad)
push
sub
pop
fsubr
daa
push
ins
inc
test
pop
sbb
ins
sub
mov
ret
sbb
fs
dec
pop
mov
inc
xchg
repz
or
daa
inc
in
add
xchg
enter
mov
in
add
and
push
mov
adc
sub
out
pop
or
add
test
inc
mov
inc
stos
xor
movs
sahf
adc
rcl
repnz
adc
pop
retf
cwde
addr16
cmp
or
and
pop
cmp
push
mov
or
or
and
inc
test
ja
data16
xor
mov
aaa
retf
cmp
inc
loope
fs
mov
das
jnp
jecxz
mov
push
dec
sub
arpl
cmp
dec
adc
pop
and
outs
dec
pop
adc
ins
or
enter
dec
add
and
push
dec
push
sub
jo
cli
or
xor
sub
aaa
pop
add
xor
mov
shl
add
outs
add
pop
add
sub
add
sbb
pop
(bad)
out
pusha
push
stos
or
and
push
imul
add
dec
aas
js
and
lock
popf
ret
push
jp
inc
fnstsw
cmp
fcom
push
les
add
jbe
sbb
stos
pop
pop
push
cwde
xchg
cmp
jl
nop
mov
(bad)
xor
xchg
imul
sbb
mov
sub
xchg
pop
add
rcl
dec
xchg
add
nop
add
repnz
sub
mov
mov
mov
dec
add
int3
enter
push
xlat
frstor
inc
pop
scas
mov
hlt
and
push
outs
pusha
cmp
cmp
test
or
cmp
mul
push
push
mov
mov
repnz
fild
popf
inc
sub
cmp
dec
cdq
js
mov
dec
call
cmove
cmp
icebp
add
sub
imul
pop
xchg
sbb
cmps
push
xchg
test
push
dec
pop
pop
mov
sbb
jg
stos
xor
retf
fcmovbe
pop
sub
addr16
and
js
aaa
lods
add
(bad)
in
or
mov
cmp
(bad)
push
sub
dec
je
int3
xor
push
(bad)
loope
adc
inc
addr16
jmp
jno
ja
ds
push
pop
sbb
mov
or
push
pop
sbb
test
pop
ins
push
loop
or
xchg
add
iret
jmp
and
jne
xchg
cmp
test
pop
mov
imul
ins
test
cmp
pop
pushf
xchg
daa
pop
out
sub
add
adc
xor
xchg
xchg
int3
jno
mov
das
dec
sbb
dec
cmps
push
xchg
lea
push
mov
inc
cmp
arpl
das
adc
pop
loop
imul
sub
inc
pop
add
pop
add
cli
inc
jg
pop
add
inc
sbb
ret
jb
je
mov
or
dec
or
icebp
xchg
mov
cmp
mov
dec
je
daa
hlt
std
addr16
sar
cmp
jne
fwait
es
sbb
jmp
sbb
and
in
cmps
sub
cmp
lahf
jmp
cmp
stos
sti
(bad)
cmps
inc
xor
push
fst
ffree
repz
mov
mov
inc
test
or
and
and
pop
inc
les
test
shl
adc
adc
and
sbb
inc
and
sbb
add
fldenv
test
mov
mov
aam
imul
cmp
or
lods
push
and
sbb
mov
pop
in
pop
dec
jbe
clc
cmp
pop
mov
pop
sbb
out
inc
inc
outs
hlt
in
in
pop
mov
repz
retf
adc
mov
adc
or
sbb
hlt
nop
and
push
out
jmp
add
arpl
imul
pop
leave
inc
push
aaa
pop
sub
ret
and
daa
repz
adc
and
or
aas
test
aam
cli
pop
adc
aas
bound
adc
or
jmp
cmp
jge
xchg
and
dec
or
or
mov
fwait
mov
push
clc
adc
out
sbb
adc
sbb
add
das
add
xchg
ins
or
inc
dec
mov
pop
add
dec
jno
shl
and
mov
add
add
or
jbe
cmp
add
cmovs
fbstp
je
xor
mov
shl
dec
les
clc
adc
sbb
push
sub
inc
test
push
xchg
mov
mov
xchg
inc
popf
ds
and
movs
inc
mov
test
inc
xchg
rol
or
add
mov
pop
push
mov
mov
jnp
cwde
call
loope
and
(bad)
ret
cmp
rol
fwait
nop
mov
out
jb
add
mov
popa
pop
inc
xchg
cmp
dec
mov
movs
add
int3
nop
sub
inc
or
xchg
dec
test
fst
cmp
xor
jns
retf
js
sbb
adc
sti
in
inc
cmp
xchg
push
pop
adc
cmps
and
in
scas
inc
cmps
jb
jle
sub
push
adc
or
test
push
push
out
push
jo
xchg
and
lods
js
or
in
cmc
daa
push
test
sbb
into
mov
int
es
lds
push
imul
inc
in
jns
cmp
add
pop
push
sbb
(bad)
rcl
xor
mov
jo
xor
sbb
out
in
lods
jne
in
jne
xchg
cld
push
addr16
pop
add
mov
add
(bad)
js
cmp
mov
push
cmp
mov
xchg
or
pop
imul
sbb
adc
bound
xor
nop
cvttps2pi
and
je
adc
lea
inc
clc
sbb
pop
pop
cmp
adc
popf
pop
pop
mov
je
inc
jno
pop
inc
pop
ret
rol
icebp
add
add
xor
int3
test
cmps
jle
in
adc
cmp
je
xchg
gs
mov
cmp
cmp
xchg
and
bound
mov
mov
iret
jmp
sbb
daa
(bad)
mov
test
inc
mov
cmps
dec
cmc
jo
movs
and
and
xor
ja
mov
sbb
ror
inc
call
xchg
mov
hlt
push
sbb
ja
xchg
mov
cmp
(bad)
or
add
add
das
adc
popa
mov
inc
hlt
aam
mov
and
fcom
sub
cmp
enter
add
inc
push
lods
fcomp
sub
cmpxchg
daa
sbb
pop
pshufw
inc
push
xchg
fisttp
bound
stc
or
xchg
cmp
push
jmp
ds
mov
mov
mov
pop
and
sub
ins
mov
(bad)
or
or
add
add
cmps
dec
int3
(bad)
or
pusha
fild
add
shr
mov
pop
dec
test
mov
add
jmp
and
movs
add
arpl
es
jne
add
std
xor
stos
dec
push
aaa
iret
cmp
xchg
add
js
test
shl
pop
mov
xchg
nop
stos
jne
fisttp
adc
dec
test
fcmovnb
mov
mov
cwde
pusha
mov
and
jmp
xchg
jmp
test
imul
dec
lock
push
lods
jo
cld
popa
loopne
push
xchg
ss
push
lods
add
inc
daa
fdiv
cli
xor
mov
or
sahf
(bad)
jno
mov
in
inc
test
sub
fs
mov
adc
ins
fcom
mov
leave
cmps
push
stos
add
iret
and
pop
imul
mov
adc
pop
push
dec
je
add
dec
mov
ret
jmp
mov
clc
je
cmp
mov
cmp
jmp
int
retf
aam
iret
or
imul
aaa
(bad)
adc
popf
inc
or
lds
lods
std
inc
ror
lock
push
rcl
cmps
push
test
mov
jmp
jl
clc
mov
(bad)
jle
loope
inc
wbinvd
addr16
iret
nop
and
adc
push
adc
jo
add
pop
dec
nop
test
cmps
xor
add
sub
push
and
push
add
sub
fstp
je
cmp
or
dec
inc
outs
push
jo
add
enter
inc
imul
scas
add
nop
test
ja
pop
imul
je
inc
jo
daa
retf
retf
jo
cmp
in
ret
xor
xor
fisubr
ja
popa
add
jmp
imul
sub
mov
scas
sub
cmps
sbb
push
adc
mov
and
or
popa
shl
xor
dec
jmp
add
push
adc
cmp
lea
(bad)
cs
mov
movs
inc
ja
add
outs
mov
jo
cs
push
mov
push
cmp
sbb
xor
push
jbe
dec
fidivr
sub
or
jge
add
sub
jl
aad
cmp
cmp
push
imul
pop
in
aam
or
jo
mov
xor
jne
hlt
mov
push
fist
fisubr
or
lds
pop
add
push
cmp
sbb
sub
inc
loopne
jbe
push
add
pop
(bad)
cmp
sti
int3
fwait
shr
xor
rcr
call
cmps
icebp
pusha
es
add
jp
add
add
or
mov
pop
xor
or
or
call
mov
sbb
push
xchg
cmp
pop
pop
test
inc
cmp
and
adc
dec
adc
pop
xor
xor
jne
cmp
push
rcr
aas
or
sbb
data16
cld
mov
pop
sbb
xor
dec
lods
mov
add
iret
aas
pop
dec
pop
sub
or
sbb
(bad)
pop
mov
jecxz
sbb
into
sbb
add
repnz
add
add
cmp
ja
cmc
cmps
outs
ret
fucom
push
or
inc
push
and
adc
psadbw
or
sbb
jne
jo
mul
add
add
and
jne
adc
jmp
neg
das
mov
ds
ins
xor
add
adc
or
jne
js
adc
mov
fdiv
sub
add
add
xchg
in
mov
mov
shl
rol
add
push
sbb
pop
shl
fldcw
push
add
jo
mov
jno
mov
and
adc
sub
in
mov
add
push
or
loop
xor
add
sbb
jecxz
rol
invd
mov
sub
sidtd
adc
aas
lahf
xor
sbb
leave
shr
mov
das
jl
rol
das
js
mov
repz
cmp
inc
mov
dec
jl
mov
out
pop
es
xor
mov
or
mov
dec
jmp
push
mov
and
or
mov
push
push
nop
add
ss
mov
es
rcr
jmp
jmp
or
add
add
pop
add
std
adc
dec
dec
inc
dec
push
lahf
jg
add
push
xor
sub
adc
xor
test
dec
pop
nop
add
mov
mov
setg
inc
fsubr
loopne
dec
jnp
add
inc
or
call
xor
adc
sbb
jnp
dec
rol
and
data16
pop
sub
and
sti
pop
fiadd
punpcklbw
fild
dec
ins
or
or
mov
pop
inc
adc
shl
dec
sub
mov
push
xchg
enter
mov
dec
call
iret
je
(bad)
dec
mov
js
and
hlt
(bad)
xor
mov
dec
pop
inc
cmp
jne
outs
push
pop
push
aaa
pop
out
das
mov
cmp
xor
inc
mov
addr16
inc
fwait
ret
cmp
ins
lods
mov
je
lock
inc
fdiv
xor
adc
mov
mov
ror
les
data16
sub
mov
adc
dec
or
add
(bad)
(bad)
sbb
es
icebp
mov
xor
or
and
arpl
test
dec
cs
or
and
les
inc
sub
cmp
sbb
inc
cdq
(bad)
test
cmp
fst
and
das
test
push
dec
out
out
xor
pop
sbb
and
xor
sub
outs
jno
dec
dec
loopne
jmp
or
sar
sbb
not
add
repnz
popf
xchg
int3
jbe
sub
ins
cdq
js
push
lods
mov
rcr
cwde
clc
popa
and
and
pop
pop
push
les
icebp
data16
jbe
pop
cmp
dec
add
mov
and
mov
mov
call
pop
jmp
and
sbb
or
mov
loop
adc
lods
inc
cmps
ss
mov
dec
inc
fimul
cmp
ficom
dec
sbb
push
inc
sub
fs
das
inc
lahf
in
and
jne
or
jbe
ins
sbb
pop
(bad)
shr
pop
xchg
cmp
adc
mov
sbb
push
das
cmp
and
pop
mov
and
add
xor
dec
inc
mov
das
outs
nop
and
sub
pop
daa
push
movs
inc
(bad)
lock
xor
popa
sub
popa
xchg
rol
or
sub
aaa
cmp
push
add
sbb
mov
pop
je
sub
add
ret
sub
ja
pop
or
dec
push
and
out
mov
dec
rcl
inc
clc
mov
push
adc
jo
mov
mov
or
mov
dec
inc
cmp
iret
je
cmp
je
ja
dec
xor
dec
xor
rol
xor
jecxz
lea
or
mov
mov
cmps
add
xchg
dec
add
and
or
sahf
adc
and
inc
test
adc
inc
fiadd
add
pop
movs
mov
ds
cmp
sub
ret
push
in
xchg
and
mov
sub
bound
cwde
pop
add
or
mov
dec
scas
pop
add
leave
mov
es
mov
mov
lods
and
jecxz
adc
cs
xor
cmp
cmp
add
test
cmps
fwait
cmp
sbb
inc
pop
movs
mov
aaa
cmp
aaa
enter
xchg
jl
test
mov
cmp
(bad)
inc
not
mov
mov
scas
inc
dec
in
js
push
pop
adc
icebp
test
nop
push
xchg
xchg
inc
push
jmp
pop
mov
cmp
adc
jne
arpl
xchg
fimul
cmp
sbb
or
rcr
sub
pop
jnp
or
and
scas
push
js
inc
addr16
retf
js
in
xor
xor
and
adc
scas
push
push
sti
cmp
inc
xchg
xchg
mov
inc
hlt
in
dec
pop
xor
icebp
das
adc
cmp
test
xchg
ss
ret
aas
mov
in
and
pop
daa
lods
xor
jno
add
nop
imul
imul
add
fcmovnbe
push
or
sub
imul
adc
fwait
add
adc
sbb
les
icebp
es
inc
pop
sbb
inc
mov
sbb
dec
lock
add
ror
sbb
mov
movs
aaa
dec
imul
adc
pop
data16
nop
(bad)
adc
add
ins
or
mov
cmps
pop
sub
call
ins
data16
xor
shl
popf
or
add
push
xor
loope
int3
push
pop
cmp
push
xchg
aad
push
mov
and
add
xchg
js
adc
or
and
dec
or
dec
inc
inc
cmp
sbb
out
call
lods
pop
in
movs
jne
or
ss
retf
dec
add
rol
jae
out
rcr
hlt
mov
xor
test
pop
clc
ds
jg
and
sar
mov
icebp
jp
(bad)
call
sub
ret
enter
inc
push
cld
(bad)
inc
or
ds
imul
xor
rol
xor
inc
xlat
adc
mov
sbb
movs
sbb
push
jg
jecxz
pusha
adc
ds
mov
mov
scas
mov
push
mov
adc
test
sbb
fbld
cwde
jo
pop
loopne
js
cwde
in
jo
pop
or
mov
mov
movzx
or
push
xchg
scas
ret
adc
jp
in
xor
push
push
cmc
mov
mov
jecxz
inc
je
add
jmp
sub
xchg
fsubr
fwait
inc
mov
cmp
cmps
sbb
dec
adc
push
adc
sbb
push
adc
sub
js
jb
int
call
adc
pop
or
cli
adc
mov
into
mov
(bad)
xchg
les
pop
adc
dec
out
sub
add
mov
dec
test
call
lods
adc
ror
pop
pusha
adc
cmp
sub
mov
addr16
inc
aaa
push
and
add
and
sub
or
mov
cmp
mov
push
dec
(bad)
pop
ret
es
add
arpl
fld
(bad)
mov
leave
sub
add
or
out
add
rcl
pop
or
adc
nop
mov
adc
adc
xchg
jne
shr
jp
jb
pop
adc
add
add
rcr
outs
mov
pop
jmp
data16
outs
adc
xchg
xor
and
xchg
push
call
jns
add
movs
jmp
sbb
add
pop
fdivr
and
ficomp
lahf
add
cmp
leave
mov
mov
xor
fwait
cmp
outs
push
sbb
(bad)
cmp
movs
aas
arpl
mov
pop
add
xchg
add
cld
pop
stos
or
mov
jl
cdq
(bad)
not
rcl
xchg
add
call
mov
je
fild
mov
jmp
push
(bad)
cmp
adc
add
push
xor
lock
lea
ror
pop
adc
imul
inc
push
jp
out
dec
pop
sub
inc
and
movs
and
mov
in
dec
jmp
sbb
adc
mov
sub
or
mul
or
and
and
sbb
adc
stc
xchg
dec
xchg
mov
add
ror
loop
inc
push
rol
mov
mov
cwde
push
scas
fcom
add
push
loop
mov
add
inc
or
or
mov
in
and
adc
out
jg
mov
dec
cmp
loopne
add
or
enter
stos
gs
and
ret
mov
pop
js
test
sti
cli
lods
and
mov
mov
pop
add
jmp
sbb
inc
adc
je
inc
adc
pop
outs
xor
addr16
jl
sub
hlt
jno
add
sub
retf
ret
inc
xchg
call
push
inc
loopne
jge
daa
mov
sub
or
or
sbb
adc
inc
dec
jge
mov
pop
retf
adc
clc
mov
test
mov
(bad)
std
add
xchg
mov
xlat
push
adc
mov
rcl
repnz
push
adc
add
pop
push
int3
mov
jae
pop
jne
pop
cld
xor
sub
sar
mov
pop
or
rol
aaa
mov
fistp
or
mov
imul
mov
ins
cmp
or
adc
(bad)
push
repz
dec
push
mov
adc
xchg
push
retf
sub
fs
loope
inc
adc
lock
cli
je
into
aam
jo
sti
jo
jmp
jne
test
out
rcr
dec
rcr
pop
add
jp
add
leave
lds
cmp
mov
cmp
inc
and
dec
popf
(bad)
or
pop
sbb
mov
pushf
(bad)
in
mov
retf
and
add
ss
sbb
dec
push
in
push
jns
fbstp
clc
nop
xchg
fadd
xchg
mov
and
dec
cmp
add
inc
mov
cmp
cmc
inc
in
jnp
in
aaa
pushf
mov
xor
ins
in
or
mov
daa
jge
test
pop
loope
pop
push
and
sub
outs
ja
(bad)
call
cdq
test
and
mov
push
push
pop
lods
adc
and
and
in
movs
jmp
das
push
rcr
loope
xchg
mov
xor
adc
inc
add
dec
mov
lods
mov
lods
cmp
xchg
or
sbb
imul
ja
cmp
push
add
pop
adc
inc
xchg
or
dec
sar
pop
mov
mov
cld
dec
push
push
xchg
cmp
push
inc
(bad)
pop
shl
stos
rcl
mov
bound
cmp
dec
jbe
push
jb
adc
shl
inc
mov
nop
jmp
or
retf
adc
mov
or
pop
jmp
sti
dec
sbb
mov
sbb
cmp
icebp
add
and
jp
cmc
jg
pop
scas
popf
dec
mov
stc
sub
addr16
(bad)
adc
and
jp
dec
lea
xchg
add
pushf
out
rol
cwde
inc
in
jecxz
mov
dec
mov
scas
sub
ret
nop
in
or
mov
por
cmp
inc
xchg
test
dec
xor
sbb
inc
sbb
sbb
ret
repnz
pop
sub
mov
or
or
jg
mov
sbb
(bad)
outs
cmp
test
mov
cmps
clc
xchg
sub
push
mov
fcom
or
push
nop
sbb
mov
loopne
or
pop
cmps
push
cmp
mov
call
or
xchg
shufps
fild
inc
or
sub
cli
jge
xor
sbb
data16
out
xor
sbb
ret
not
fst
rol
out
mov
stc
jl
sbb
daa
loopne
in
lea
add
and
mov
adc
adc
and
push
jge
mov
dec
add
push
adc
daa
dec
dec
cdq
add
stc
fld
mov
scas
sub
fdiv
es
cmp
xchg
jbe
adc
push
adc
aaa
adc
lods
inc
ficom
xor
sbb
and
sbb
jnp
adc
push
inc
mov
xchg
add
adc
sbb
mov
leave
nop
add
sbb
pusha
cmp
pushf
clc
inc
neg
or
call
sbb
call
rol
js
push
sub
push
data16
rol
inc
in
inc
adc
xor
mov
cmp
lahf
cmc
add
rcl
mov
push
cwde
or
fwait
inc
xor
xchg
pop
xchg
and
sbb
xlat
fild
ins
inc
shl
(bad)
cmp
xchg
(bad)
push
cmp
cmp
ss
or
das
jne
sub
push
mov
sub
dec
add
(bad)
pop
xor
repz
adc
sbb
sbb
xchg
adc
mov
ins
dec
dec
ret
in
add
and
xor
popf
(bad)
stos
ds
or
mov
push
rcr
test
push
loope
dec
push
sbb
or
test
pop
and
icebp
cmp
xor
mov
stos
jle
test
and
mov
test
xchg
ret
ror
dec
call
mov
gs
cmp
pop
stos
and
out
ins
xchg
out
pop
pop
sub
pop
mov
xor
leave
aaa
daa
xchg
jno
jge
push
push
sbb
sbb
or
push
imul
dec
sbb
mov
dec
int3
sbb
addr16
jo
(bad)
sar
add
mov
cli
push
add
sub
(bad)
jmp
jecxz
pop
inc
inc
mov
cdq
push
mov
popf
dec
into
mov
outs
rcl
mov
and
test
in
push
or
loope
add
mov
pop
xchg
call
dec
stos
test
cmp
call
sar
and
(bad)
inc
test
push
jne
shl
xlat
jg
aam
mov
pop
jb
sbb
ret
es
cmp
jg
mov
sbb
push
and
je
call
push
mov
mov
cdq
sub
push
dec
jmp
xchg
retf
clc
xchg
aam
mov
adc
rcl
mov
inc
and
cmps
and
inc
cwde
jl
or
cdq
rcl
mov
arpl
das
imul
ror
jns
push
inc
test
push
aaa
cmps
daa
pop
cdq
cmp
ror
ret
popa
sbb
popa
ror
cwde
mov
call
ja
adc
or
hlt
call
push
cdq
hlt
jecxz
and
test
jo
adc
ss
add
lock
aad
jl
cmp
test
jo
jg
pop
rol
loopne
(bad)
fcomp
jmp
mov
add
bound
cmp
sub
xor
je
arpl
push
outs
pop
fnstcw
faddp
adc
inc
pop
mov
lock
sub
ins
cmp
ins
dec
sbb
cmp
movs
add
adc
and
or
jnp
test
add
inc
loop
add
retf
enter
pop
mov
mov
in
sti
pop
or
adc
push
sub
adc
and
jmp
sbb
cld
cld
sbb
and
add
push
sbb
inc
mov
xor
add
shl
inc
push
xchg
pop
sbb
fdiv
inc
sbb
int
(bad)
inc
sub
inc
rcl
add
loopne
dec
jmp
xor
scas
mov
add
lods
dec
test
movs
jbe
(bad)
cmp
lods
imul
iret
fadd
and
imul
xor
xchg
(bad)
inc
push
pop
(bad)
sti
jmp
jle
pop
adc
or
scas
(bad)
sub
fsub
add
cli
loopne
imul
sbb
ins
pop
xchg
jle
mov
int3
xchg
dec
sbb
and
int3
adc
jl
push
inc
mov
xchg
popf
es
rol
pop
movs
xor
and
adc
push
lahf
add
mov
shr
ins
mov
inc
or
mov
or
push
add
imul
fild
push
(bad)
dec
lea
jl
enter
xor
inc
pop
mov
mov
xor
pop
lds
xchg
cmp
cld
push
mov
(bad)
pop
adc
xchg
in
popa
mov
aas
push
fcmovnb
(bad)
mov
dec
dec
dec
jecxz
dec
cs
pop
pop
pop
mov
push
push
jno
cmp
inc
pop
xor
dec
dec
ss
pop
dec
sub
bound
xchg
add
neg
mov
sbb
inc
fs
dec
repnz
jo
jmp
pop
iret
and
pop
mov
dec
pop
sub
outs
sbb
dec
adc
pop
addr16
lds
and
xor
sbb
sub
push
or
sbb
(bad)
aam
leave
push
call
les
xor
mov
les
dec
sbb
mov
sti
sub
or
jle
es
mov
rcr
pop
jbe
inc
sar
cmp
jne
dec
ret
out
addr16
push
and
sbb
xor
clc
or
lods
jmp
jmp
add
in
pop
adc
cmps
dec
or
fisub
sub
adc
and
and
xchg
rcr
push
pop
mov
xor
jo
pusha
dec
arpl
in
pop
push
mov
add
(bad)
sti
mov
mov
push
sub
cdq
(bad)
mov
xor
inc
inc
cmp
add
je
pop
lock
rol
fsubr
jno
adc
retf
test
jbe
sbb
cmp
mov
cmp
not
mov
mov
sub
or
int3
mov
mov
xor
mov
in
dec
loopne
push
sub
jo
cmc
sub
inc
scas
loopne
sub
add
dec
cmp
cmp
fs
cmp
std
adc
cmc
sub
cmp
cmp
push
out
jno
inc
push
gs
mov
pop
or
or
neg
jge
adc
mov
inc
sbb
jo
fsub
pop
xor
add
mov
and
lds
mov
mov
adc
or
(bad)
and
mov
jns
jne
jae
fidivr
and
and
aam
aam
scas
xchg
dec
and
or
mov
jg
or
or
sub
loopne
int3
jne
cmp
dec
std
mov
adc
push
pop
lahf
cmps
imul
xor
cmp
inc
test
pop
outs
or
cmp
inc
mov
pusha
adc
adc
(bad)
adc
rol
cmp
cmps
mov
add
dec
shl
pop
mov
push
push
inc
adc
adc
(bad)
pop
call
pop
mov
loope
jmp
lods
jp
and
jmp
movsx
xchg
add
dec
or
ins
stos
mov
push
mov
and
aad
dec
or
add
out
inc
sbb
fwait
cmp
pop
sbb
dec
clc
sub
popa
adc
mov
mov
test
mov
es
inc
imul
pop
or
mov
iret
and
mov
mov
fs
out
dec
inc
ficomp
jecxz
lds
inc
inc
popf
fdivr
or
xchg
or
jo
mov
jmp
das
mov
mov
mov
mov
js
lods
aas
push
test
or
loopne
jp
and
sbb
cmp
dec
test
and
jmp
adc
es
pushf
loopne
cmp
shr
adc
arpl
gs
rcl
cdq
sbb
(bad)
pop
push
jbe
(bad)
sub
add
pop
cmp
xchg
dec
jae
das
sub
pop
pusha
jns
or
std
stc
jl
dec
rol
test
add
inc
sub
retf
sbb
clc
hlt
push
pop
fsubr
movs
add
adc
or
mov
cmps
icebp
cmp
push
sbb
xor
adc
inc
mov
xor
push
loop
out
or
pop
sbb
xor
pop
test
jo
push
into
push
mov
sbb
lea
sbb
inc
push
or
jne
imul
xor
push
dec
cmp
push
push
or
add
jbe
cwde
mov
loop
test
enter
iret
rcr
jmp
pop
xor
or
es
aas
mov
and
inc
or
xor
lock
sub
pop
add
sbb
imul
movs
aaa
or
add
hlt
dec
es
ss
and
rol
cmp
jge
inc
push
sub
mov
xchg
xor
dec
and
(bad)
xor
sub
(bad)
js
cmp
test
clc
cmp
mov
inc
mov
fisubr
pop
rcl
dec
mov
ret
pop
hlt
je
push
sub
clc
sbb
push
push
push
ret
sbb
fwait
add
lea
retf
sbb
jne
sub
and
sub
ins
cmp
jo
fisttp
es
sub
adc
jl
mov
sbb
mov
mov
gs
lahf
aaa
lock
imul
cld
jb
cdq
ins
addr16
cld
sbb
inc
stos
inc
add
and
add
enter
add
imul
dec
add
scas
inc
aaa
xlat
inc
sbb
and
xlat
mov
jmp
int
loopne
inc
or
sbb
loop
dec
pusha
enter
retf
mov
xchg
(bad)
not
xchg
mov
out
xchg
call
mov
in
mov
sub
les
or
xchg
repz
adc
cmp
or
test
pop
inc
jmp
adc
lock
xchg
push
pop
adc
cdq
ins
stos
sbb
mov
and
retf
mov
or
dec
mov
jo
sub
nop
sbb
cmp
dec
arpl
push
inc
add
mov
mov
popa
inc
aas
dec
xor
rcl
(bad)
addr16
add
push
mov
sub
push
sahf
test
xor
xchg
xchg
jns
sub
jmp
mov
adc
push
aas
movs
(bad)
bound
sbb
sbb
mov
daa
inc
std
push
xor
cmp
add
pop
adc
scas
daa
pop
mov
push
xchg
nop
je
sbb
or
mov
ret
leave
je
pop
push
or
xchg
aaa
jmp
push
xchg
lea
dec
shl
fsubr
clc
add
and
fadd
push
leave
or
ret
push
xor
fiadd
cmp
outs
cdq
not
pop
jge
xor
xor
arpl
gs
and
lods
dec
add
(bad)
rol
mov
lods
fst
jne
pop
jmp
xlat
es
jb
push
add
and
ret
cmp
test
sub
ja
or
mov
inc
mov
xor
xchg
popf
add
add
inc
mov
scas
cmp
popa
cs
shr
pusha
mov
(bad)
(bad)
jl
neg
or
push
xchg
mov
cmp
mov
call
cmp
loopne
imul
push
push
add
mov
cmp
sub
and
pop
dec
sub
loope
and
mov
push
push
inc
pop
enter
(bad)
aam
xchg
daa
mov
aad
(bad)
mov
dec
dec
dec
inc
dec
dec
cs
add
js
mov
shr
push
das
cdq
cmp
sbb
push
mov
or
mov
add
inc
in
mov
xchg
mov
out
pop
cmps
es
push
cmps
mov
jge
ror
mov
push
push
mov
mov
cmp
js
enter
add
and
add
or
xor
dec
frstor
bound
jmp
add
xor
cwde
inc
sbb
stos
mov
test
xchg
(bad)
(bad)
xchg
rcl
push
dec
xchg
imul
int3
and
inc
inc
lods
mov
pop
xchg
fwait
sub
jp
sbb
or
inc
xor
scas
jo
mov
(bad)
ret
addr16
xchg
xchg
fiadd
and
dec
aaa
jne
sbb
lods
repnz
and
imul
mov
movs
call
or
sub
lods
and
ins
mov
inc
sbb
repnz
mov
cmp
sbb
xor
in
adc
mov
cmp
mov
aam
mov
rol
shr
inc
adc
dec
cmp
fs
sbb
sbb
sbb
push
push
pushf
ss
js
je
add
test
test
xor
jb
dec
dec
adc
xchg
lock
(bad)
and
xor
js
add
adc
dec
ficom
and
xor
stos
cli
adc
nop
add
out
dec
jge
dec
mov
dec
and
in
addr16
jecxz
sub
mov
mov
and
or
add
aad
lock
mov
cmp
mov
pop
cmove
xor
add
or
push
or
pop
cmp
jecxz
(bad)
sbb
push
adc
adc
outs
in
mov
or
inc
mov
or
into
or
mov
mov
ins
stos
imul
jmp
mov
sub
ucomiss
je
pop
and
and
mov
jne
rol
or
rcr
adc
ins
retf
mov
adc
or
inc
add
dec
cld
imul
sbb
leave
or
ins
dec
mov
or
jo
test
jne
call
or
adc
mov
xchg
xor
mov
(bad)
push
xor
sbb
adc
pop
nop
mov
add
and
lahf
inc
in
inc
add
cmp
add
ror
ins
sub
and
lea
pop
adc
and
pop
adc
fidivr
inc
or
mov
ins
retf
xor
mov
xor
or
sub
scas
jno
ret
xor
cmp
sbb
xchg
jg
scas
and
add
adc
add
(bad)
stos
or
les
sar
push
pop
sbb
daa
lods
mov
cdq
push
sbb
call
movs
adc
jle
imul
dec
shr
cmp
adc
cmp
imul
sub
jge
add
bound
jb
retf
ins
js
add
add
frstor
fwait
adc
pop
push
add
frstpm(287
jnp
dec
icebp
add
push
lahf
fbstp
xor
shl
and
pop
stos
and
or
cmp
icebp
lods
cmp
int3
sbb
mov
sti
inc
mov
adc
int
mov
or
or
rcr
lds
rcl
mov
mov
mov
or
adc
cmp
sub
jecxz
gs
stos
and
fwait
xchg
xor
add
inc
cdq
and
cdq
xor
and
add
jo
or
mov
les
inc
push
lods
cmp
das
mov
out
or
pop
test
add
int
add
jb
adc
sub
popf
inc
xor
(bad)
cmp
jle
arpl
fidivr
add
push
pusha
fdivrp
adc
jns
add
push
mov
test
rcl
inc
xchg
jo
ja
adc
xor
cmps
cmc
or
repz
imul
push
test
ret
push
jg
mov
jp
out
movs
jo
or
sbb
mov
mov
js
sbb
sti
es
shr
ret
jmp
sub
mov
pop
mov
arpl
xchg
lods
jmp
mov
add
mov
cmp
dec
add
jo
rcr
mov
inc
jae
or
pop
sbb
or
ja
adc
fcmovnb
cmp
call
or
xchg
cmps
xchg
dec
and
cmp
push
add
mov
test
xor
inc
mov
(bad)
fisub
jno
cmps
(bad)
retf
out
mov
ja
mov
fild
and
aam
lock
inc
jno
mov
sub
cmp
out
and
cmp
jmp
cmp
mov
push
fsub
add
jbe
ins
je
leave
push
cmps
xchg
xor
jmp
adc
les
inc
aas
ror
push
nop
leave
imul
scas
loop
and
xchg
gs
pop
jo
inc
inc
(bad)
and
sub
inc
push
adc
jae
sub
arpl
ss
icebp
sub
test
xor
push
mov
mov
push
cld
sbb
clc
pop
adc
adc
mov
xor
sub
pop
sbb
xchg
icebp
or
add
and
mov
sbb
iret
adc
js
mov
pusha
cmp
sbb
inc
or
push
std
add
add
loope
dec
sub
pop
bound
sbb
clc
sub
adc
int3
sub
jecxz
lahf
fs
pop
and
test
pop
mov
lods
stos
fwait
or
mov
xlat
shr
mov
test
xchg
dec
jnp
push
mov
pop
fnstcw
xor
add
sub
pusha
fs
pushf
cmp
adc
imul
movs
fwait
lahf
jg
shr
inc
jno
sub
push
add
mov
imul
mov
sbb
test
mov
shl
sbb
ret
inc
and
adc
mul
push
adc
add
or
cli
push
adc
movs
or
jne
pop
pop
es
pop
aaa
push
pop
jbe
fisubr
test
ret
add
mov
sahf
add
fnsave
jmp
out
mov
add
sub
jl
call
jo
inc
iret
adc
dec
add
aaa
sub
aaa
push
loope
call
push
mov
add
repz
adc
shl
or
xchg
nop
cmp
cmp
inc
daa
cmp
scas
cwde
das
jnp
jns
sbb
and
adc
mov
je
add
cmp
movs
or
inc
xor
sub
xor
shld
rol
adc
and
sub
mov
mov
rol
movs
daa
popf
nop
ja
mov
pop
add
sbb
stos
cmp
pop
das
sbb
popf
push
cmp
jne
inc
push
fdivr
jne
add
dec
xchg
es
add
push
mov
xchg
xchg
rol
adc
sbb
pop
(bad)
jns
cmp
retf
dec
cs
and
push
into
aam
push
mov
push
jge
push
adc
jle
clc
pusha
push
sbb
sti
mov
mov
(bad)
je
adc
fbld
pop
test
les
pushf
adc
inc
test
das
ret
lock
loope
sti
xor
jl
daa
pusha
addps
mov
cmp
sub
js
ficom
pop
rcr
mov
adc
dec
xor
sbb
inc
push
movs
cmp
push
test
mov
pop
cmp
xor
add
and
add
inc
daa
scas
scas
adc
aad
movs
rol
mov
lock
cmp
and
sub
std
add
push
sub
pop
jp
outs
lods
and
iret
sub
je
inc
pushf
ss
and
std
pop
or
mov
call
sbb
mov
and
or
lock
xchg
std
stos
les
retf
xchg
retf
add
adc
xchg
add
ror
jmp
cmp
xor
arpl
and
inc
in
mov
inc
and
cmp
stos
or
cs
jno
and
mov
mov
sub
in
push
and
in
and
xchg
(bad)
jnp
and
je
mov
and
sbb
sub
jns
jmp
adc
xor
mov
jbe
sbb
std
lds
sub
ret
xor
pop
xchg
push
sbb
or
dec
call
push
mov
fistp
imul
inc
or
jl
push
adc
dec
push
xor
inc
pop
mov
lods
mov
jb
cmp
dec
mov
cmp
rcl
outs
xchg
dec
mov
sub
add
pop
out
daa
fsub
xchg
jne
adc
fadd
or
inc
mov
inc
push
sbb
loop
test
out
pop
inc
cmp
pop
cmp
daa
xchg
ror
sar
adc
pop
(bad)
dec
sub
es
dec
dec
push
push
add
fs
hlt
push
in
inc
mov
shr
cmp
jo
xchg
sbb
dec
push
jns
and
(bad)
pop
cmps
les
shr
movzx
push
pop
push
lods
xchg
or
nop
das
inc
pop
leave
inc
fist
imul
mov
test
mov
push
mov
mov
iret
push
adc
leave
inc
xor
push
add
aas
(bad)
shl
iret
push
and
sbb
jbe
pop
rol
loop
fucomi
adc
adc
inc
inc
sbb
and
dec
popa
add
add
rol
or
sbb
mov
dec
inc
mov
sbb
dec
js
or
clc
mov
call
dec
or
not
or
push
push
cmp
jne
iret
addr16
adc
dec
and
inc
dec
adc
push
in
add
das
movs
and
pop
movs
mov
movs
xor
jne
xor
arpl
scas
push
and
xor
imul
adc
add
test
(bad)
sti
aas
fadd
dec
pop
ins
and
dec
call
xchg
shl
pop
je
pop
hlt
xchg
add
retf
ret
retf
or
push
mov
sti
stos
xchg
shl
mov
add
or
sub
movs
jp
aas
dec
loopne
fadd
test
sbb
mov
mov
cld
and
push
jbe
inc
push
push
push
or
adc
or
jmp
add
xor
leave
push
cmps
add
int3
jmp
clc
int3
xor
movs
pop
call
test
imul
xor
sbb
rcl
push
push
les
jl
lock
pop
ja
mov
stos
les
and
dec
ins
rcl
or
test
and
add
xor
jmp
cld
pop
jmp
push
pop
out
icebp
inc
mov
xchg
sbb
push
inc
sub
sbb
jb
nop
pop
clc
and
bound
cmp
adc
les
lods
xchg
mov
mov
pop
in
shl
(bad)
push
xor
adc
push
ret
inc
push
int3
data16
sub
dec
push
pop
jle
xlat
loopne
outs
inc
cmp
jge
xchg
lods
test
adc
int3
fwait
sbb
in
mov
pop
mov
xor
jnp
pop
pusha
jne
xchg
dec
add
add
sbb
mov
dec
add
inc
pop
pop
fild
call
test
mov
push
adc
neg
daa
or
jp
mov
cmp
lock
lock
sbb
lahf
sub
movs
sbb
mov
xchg
sbb
out
or
and
mov
xor
sub
cwde
inc
pusha
xor
jbe
mov
jle
push
push
iret
sub
scas
xlat
mov
xchg
gs
mov
push
aam
shl
push
adc
pop
repz
lea
mov
pop
sar
inc
cdq
fmul
mov
retf
dec
mov
pusha
sahf
mov
call
mov
mov
adc
mov
adc
loopne
pop
clc
inc
jne
mov
add
lds
je
ins
loop
jle
add
ret
loop
add
inc
xchg
icebp
pop
sar
adc
cs
mov
sub
icebp
mov
inc
xor
int
pop
sbb
mov
js
add
inc
adc
retf
lock
jns
idiv
sub
pop
adc
adc
jp
lock
adc
inc
inc
call
(bad)
sbb
ret
test
cmps
push
mov
mov
push
call
jnp
je
je
ret
sbb
dec
mov
lods
and
mov
cmp
cmp
push
jg
ror
and
adc
ss
sbb
loope
mov
sub
sbb
or
retf
sub
adc
and
inc
and
shl
cmc
mov
push
jne
push
aad
scas
add
push
sbb
xchg
into
int3
and
leave
cli
dec
sub
fldlg2
test
aaa
fs
inc
aaa
mov
(bad)
pusha
pop
push
add
or
stc
or
xor
dec
mov
fcmovnbe
and
push
cs
jb
add
adc
jne
jbe
xor
clc
and
cmp
push
lods
mov
mov
pop
mov
and
mov
and
sub
push
adc
in
sub
enter
daa
jae
test
cmp
mov
imul
das
cs
inc
sbb
fwait
adc
sub
mov
inc
sti
push
popa
or
inc
sbb
push
cmp
out
sbb
dec
test
mov
adc
xchg
jo
mov
int
xor
add
pop
fsubr
arpl
push
push
and
and
push
lea
xor
sbb
out
mov
jecxz
jge
mov
or
pop
push
lock
sub
xchg
xchg
xor
push
mov
adc
inc
pop
xchg
pop
aad
es
pop
dec
je
adc
push
clc
push
mov
add
and
mov
add
movs
addr16
fadd
imul
pop
dec
push
ficom
fsubr
pop
shr
add
cmp
sub
scas
mov
jbe
aas
mov
adc
ror
add
add
popa
add
push
nop
les
adc
movs
cli
rol
fiadd
mov
push
or
jmp
push
sbb
sbb
inc
out
in
and
add
(bad)
xor
movs
or
xor
cdq
fiadd
add
add
mov
or
jb
push
xchg
adc
pop
sbb
push
pop
mov
arpl
push
xchg
sar
dec
cld
outs
inc
cmp
je
popa
(bad)
fiadd
lds
sub
adc
(bad)
sbb
adc
add
cmps
repnz
adc
adc
call
call
and
dec
in
and
dec
retf
sbb
xlat
inc
in
push
shl
jl
inc
mov
adc
xchg
mov
push
mov
nop
or
mov
add
xchg
inc
je
bound
fwait
add
rol
mov
add
test
mov
or
and
xchg
jno
outs
sub
push
push
adc
mov
mov
push
jl
mov
daa
loop
es
mov
xor
xchg
or
fbld
sub
dec
push
push
xor
(bad)
(bad)
xchg
ficom
jno
fisub
jb
fs
shr
fstp
mov
(bad)
retf
fxch
and
inc
lds
add
fdivr
nop
mov
or
inc
push
push
xchg
pop
sbb
fsub
lock
dec
popa
bound
lods
or
inc
dec
sti
mov
aam
rol
mov
pop
mov
cmp
(bad)
(bad)
sbb
add
std
jbe
jp
mov
add
(bad)
pop
push
xor
mov
sub
mov
dec
les
mov
push
(bad)
(bad)
shr
push
xor
jae
enter
repnz
in
fbstp
xor
and
(bad)
xor
cs
inc
ret
mov
stos
(bad)
jmp
mov
xor
xor
xor
les
and
loop
cmps
inc
repz
dec
push
and
or
xor
adc
and
sub
push
or
cdq
xor
xor
xor
retf
(bad)
(bad)
in
mov
push
mov
xor
pop
xor
push
mov
fwait
div
jb
xor
adc
sub
mov
jle
push
fdivrp
into
mov
push
adc
sbb
sbb
xor
lock
dec
cmp
jbe
push
xchg
xor
mov
jmp
retf
inc
mov
mov
adc
js
add
stc
push
pop
push
mov
(bad)
cld
and
stos
das
ret
out
xor
xor
mov
add
test
mov
xchg
loopne
(bad)
(bad)
inc
lods
jle
(bad)
push
mov
pop
xor
mov
or
ret
push
(bad)
aas
mov
mov
sub
mov
add
enter
add
mov
retf
(bad)
(bad)
mov
push
out
inc
pop
add
push
mov
outs
(bad)
mov
test
add
inc
movs
fdivr
mov
test
les
pop
push
inc
sub
pop
xor
repnz
sbb
pop
mov
xor
test
ret
and
pop
and
mov
mov
or
sub
in
popf
fcomi
test
dec
scas
inc
xchg
dec
xor
fnstenv
fmul
mov
fld
inc
cmp
adc
inc
xchg
in
mov
or
xor
clc
mov
neg
enter
mov
mov
cmp
imul
rcl
fdivr
stos
out
dec
mov
fadd
jecxz
add
pop
cld
scas
js
rol
mov
push
mov
jmp
inc
push
jl
cmp
jp
dec
fwait
stos
sbb
imul
sub
icebp
in
fistp
ss
mov
xor
cld
neg
scas
push
out
in
and
sub
ss
add
jl
mov
and
test
or
(bad)
mov
int
outs
push
test
das
xor
idiv
or
shr
out
clc
loope
std
sub
pushf
xlat
mov
mov
jg
scas
sar
imul
jnp
mov
jg
mov
jmp
fbstp
iret
mov
add
mov
xor
mov
adc
sub
mov
bound
xchg
pop
icebp
push
or
xor
push
ficom
xor
shl
fild
cmps
jmp
fcomp
mov
mov
ret
inc
sub
stos
sub
rcr
iret
pushf
sub
jmp
sbb
arpl
or
mov
repnz
imul
pop
mov
(bad)
and
mov
mov
push
(bad)
mov
and
pop
lock
mov
out
and
push
dec
sub
mov
mov
jns
mov
or
das
inc
mov
push
or
jecxz
lock
jg
fimul
jge
fistp
xor
aas
adc
mov
cwde
pop
imul
ror
inc
pusha
jp
add
fidiv
fcmovb
shl
loopne
(bad)
bound
mov
(bad)
outs
cmp
mov
push
scas
adc
jp
mov
sti
out
inc
xor
pop
push
xchg
pop
mov
je
push
mov
shr
add
lods
mov
adc
shl
pop
mov
cmp
aaa
out
call
jp
mov
xor
repz
dec
pop
(bad)
jle
pop
jo
sbb
or
rcr
mov
lods
out
not
sub
push
xchg
outs
pushf
repnz
sub
add
sub
(bad)
cld
push
sub
xor
cli
or
pop
std
aas
mov
push
xor
mov
cmps
push
mov
jb
jbe
pop
dec
push
mov
add
and
adc
xor
adc
cmps
sbb
mov
push
test
das
add
sbb
(bad)
mov
add
mov
pop
jg
mov
jg
fwait
mov
dec
rol
jb
out
sub
mov
pushf
in
push
dec
and
or
jae
sar
(bad)
fwait
xor
cli
lahf
add
adc
rcl
pslld
and
sub
(bad)
mov
in
outs
das
mov
fsub
fisubr
sar
push
sbb
pusha
or
aaa
jg
jg
les
adc
pop
in
jp
mov
xor
cmps
in
sub
sar
out
add
push
mov
mov
fidivr
rol
xchg
cmc
cmp
arpl
add
cdq
enter
fisub
add
push
(bad)
clc
mov
iret
fidiv
into
invlpg
cld
xchg
data16
jl
mov
js
clc
rcr
push
icebp
addr16
or
mov
test
fimul
add
and
dec
rol
outs
cmp
(bad)
push
loop
mov
sbb
dec
mov
push
jno
cwde
adc
push
push
fcom
sar
push
shr
shr
imul
rol
loope
inc
adc
test
cmp
push
mov
push
retf
ret
ja
mov
adc
lods
dec
dec
or
sub
sbb
adc
mov
(bad)
mov
cmp
out
and
jge
jl
push
adc
or
(bad)
xor
je
push
mov
sbb
xchg
jnp
mov
sub
adc
mov
dec
sub
jmp
fldcw
clc
cmovnp
scas
cmps
arpl
retf
les
inc
icebp
ins
xchg
and
(bad)
push
ja
test
loop
or
or
sbb
add
inc
and
pop
xor
mov
movs
or
cmp
mov
ret
cli
add
iret
push
push
jecxz
xchg
add
adc
int3
or
adc
out
cmp
sub
or
(bad)
mov
pop
cld
fnstcw
sbb
icebp
dec
rol
scas
jecxz
cmp
dec
shl
shl
xor
mov
into
test
jp
(bad)
mov
movs
or
cmp
movs
dec
ja
mov
sub
retf
inc
sub
ror
or
mov
aaa
pop
pop
jge
loop
xor
adc
or
mov
push
pop
mov
or
das
bound
add
jecxz
pop
hlt
fwait
outs
inc
ss
stos
and
xor
mov
(bad)
mov
lds
pop
mov
aas
pop
(bad)
fdivr
pop
and
adc
mov
push
inc
cld
adc
cs
pop
rcr
std
ja
push
fs
daa
pop
into
xchg
pusha
ret
ficom
mov
inc
sahf
mov
add
inc
in
cli
mov
sub
sbb
add
inc
sbb
clc
mov
push
cmp
mov
push
pop
add
mov
adc
clc
mov
sub
add
and
and
or
(bad)
clc
xchg
rcr
mov
xor
call
fisttp
mov
mov
pop
(bad)
data16
dec
inc
int3
fsub
ret
repz
neg
stos
xor
sbb
out
cmp
aam
loop
clc
fistp
icebp
mov
bound
aaa
push
inc
pop
cwde
mov
ins
jle
dec
sub
cmp
xor
sub
pop
repnz
jns
int
jle
pusha
fist
cmp
xor
mov
jno
push
retf
and
add
ins
cmps
adc
ss
(bad)
fstp
fwait
dec
in
mov
mov
jns
int3
fwait
jns
movs
cmp
and
fisttp
jle
dec
ds
mov
lock
outs
lock
cmp
fwait
pop
dec
sub
mov
push
push
inc
mov
ins
cmc
outs
les
hlt
sar
nop
add
mov
inc
and
ret
lock
imul
loopne
xor
xchg
test
mov
xchg
sub
sbb
lods
jge
pop
mov
out
push
xor
out
das
mov
cs
ret
sbb
push
(bad)
push
out
nop
adc
das
inc
ins
lock
shr
mov
mov
mov
xor
xor
mov
mov
in
popa
pop
mov
cwde
clc
mov
lock
clc
xor
xlat
xor
xchg
mov
jl
mov
push
pop
pop
sub
pop
or
loopne
mov
mov
mov
dec
cld
cwde
sub
mov
sbb
outs
jg
add
xlat
push
inc
mov
cmp
mov
mov
xchg
sub
inc
mov
(bad)
xlat
mov
sub
test
mov
nop
xchg
push
jmp
ins
test
(bad)
jb
pop
std
jg
add
add
test
nop
add
cli
push
cld
aam
fs
xor
fidivr
ja
or
test
or
cli
mov
jmp
push
cmp
scas
sub
adc
loopne
clc
mov
movs
xor
mov
and
add
mov
mov
mov
jbe
and
(bad)
into
mov
jg
out
hlt
sbb
push
push
jmp
inc
popa
ss
mov
jg
js
fcomi
sbb
iret
push
fsub
xor
stos
or
sti
mov
mov
mov
inc
mov
mov
pop
push
push
sbb
or
mov
in
stos
and
inc
sub
cmp
pushf
stos
out
js
ins
sti
call
mov
pop
fucomip
out
sbb
xor
pushf
sbb
call
add
fwait
cmp
cmp
dec
push
loop
mov
add
ss
sub
scas
xor
pushf
repz
(bad)
test
fs
inc
and
mov
inc
push
or
sub
push
mov
jbe
sub
xor
inc
mov
fsubr
jnp
xor
mov
xchg
jl
aad
addr16
sub
xchg
cmp
adc
xchg
adc
sub
push
push
xor
repnz
pop
mov
dec
sbb
mov
movs
fidivr
outs
fisub
ret
mov
add
jg
lahf
scas
pop
mov
(bad)
bound
push
and
push
add
and
dec
inc
add
sti
push
mov
inc
pop
mov
cmovp
xchg
and
inc
mov
xor
cld
mov
lods
std
aaa
sub
pop
mov
dec
iret
inc
dec
cmps
mov
dec
xor
xor
shl
add
int
push
mov
div
mov
retf
and
adc
ret
xor
jo
pop
(bad)
out
retf
inc
mov
pop
sub
or
sub
add
add
imul
out
lahf
mov
add
mov
cmp
push
add
push
adc
mov
inc
out
clc
jnp
mov
sbb
sbb
adc
loopne
sbb
mov
stc
and
add
add
cmovb
popa
sbb
dec
imul
sub
sbb
mov
sti
aas
fdivr
pop
daa
jno
clc
fmul
retf
cmp
sahf
mov
push
dec
mov
fild
lods
sti
add
mov
outs
inc
adc
inc
push
or
push
push
cmp
mov
rcl
pop
es
push
stos
push
add
idiv
mov
rcr
movs
cmp
xchg
out
bnd
fcmovb
or
loope
or
xchg
pop
fmul
adc
push
rcr
inc
test
mov
outs
(bad)
pop
push
adc
add
mov
outs
retf
pop
sub
xor
pop
mov
cmp
xchg
jge
scas
call
sub
mov
pop
pusha
retf
jge
call
push
pop
mov
in
adc
mov
ret
(bad)
push
sub
and
les
test
sub
mov
call
add
cli
xor
mov
and
neg
lock
mov
xor
add
mov
test
xchg
or
mov
and
sar
inc
or
mov
cld
mov
add
and
mov
dec
ror
sbb
out
rep
pusha
adc
sub
and
cmp
(bad)
(bad)
push
loopne
sub
or
jne
push
repnz
mov
mov
pushf
push
xchg
xor
sub
xchg
sub
pop
sbb
jp
mov
mov
inc
add
cld
push
stos
pop
xchg
mov
push
(bad)
adc
xchg
fs
lds
loopne
loop
xor
mov
xor
mov
into
adc
das
aas
ror
mov
fwait
add
les
and
fmulp
pusha
inc
pop
aam
cmp
add
and
lock
xor
push
es
popf
cmps
sbb
aas
push
sub
and
call
push
push
lods
arpl
mov
fstp
xor
sbb
rol
shl
aaa
mov
lea
fwait
or
mov
jg
pop
mul
call
pop
sub
xchg
inc
clc
rol
sub
add
add
or
push
and
xor
jo
or
ss
iret
mov
inc
jo
(bad)
idiv
mov
sub
adc
mov
out
mov
mov
xor
out
cli
das
mov
mov
or
mov
std
and
fsubp
jmp
xor
into
or
pop
sbb
xor
jg
push
dec
outs
push
push
js
lods
inc
push
mov
sub
xchg
loop
dec
loop
cdq
out
(bad)
dec
dec
imul
add
sub
or
lea
leave
dec
sub
xchg
test
pusha
and
inc
xchg
mov
dec
mov
outs
adc
mov
jg
aaa
adc
cmp
mov
mov
mov
les
push
sbb
pop
or
imul
push
inc
mov
loopne
(bad)
outs
xchg
hlt
fdiv
add
add
cli
mov
(bad)
repnz
ret
push
sub
mov
lods
mov
in
add
movs
clc
fistp
jmp
icebp
jle
sbb
xor
cmps
mov
jo
sar
jmp
mov
xor
mov
sub
mov
lods
popa
or
jmp
mov
add
out
adc
imul
mov
test
lods
xor
mov
jg
or
stos
dec
mov
xor
mov
xchg
mov
mov
in
outs
call
add
(bad)
sub
sub
mov
sub
js
jns
js
inc
mov
push
pop
xchg
mov
aaa
iret
xor
add
mov
fdiv
lods
add
cmp
sub
neg
add
lock
(bad)
mov
and
xchg
ins
xor
ins
bound
mov
(bad)
add
pop
mov
push
jl
lea
pop
xchg
leave
add
or
adc
sahf
fld
push
mov
sub
mov
cmps
sub
mov
cmc
jp
pop
push
js
cld
inc
(bad)
rol
jnp
call
pop
je
mov
test
ins
(bad)
or
cld
adc
push
mov
xor
mov
fild
dec
xlat
and
dec
or
or
(bad)
add
mov
mov
mov
adc
aam
scas
pop
icebp
mov
pop
mov
and
xor
cs
gs
cmp
cdq
or
xor
fistp
ss
mov
xchg
les
cmp
mov
or
pop
or
fsub
cmp
es
cmps
out
push
mov
mov
iret
mov
mov
adc
jmp
stos
cmc
jg
pop
dec
cdq
jne
movs
mov
mov
sub
push
adc
ret
sbb
retf
gs
lock
or
(bad)
mov
mov
xor
push
mov
jl
outs
mov
in
jl
or
cdq
add
mov
fnstenv
sar
retf
push
nop
or
ins
push
cld
sbb
mov
or
xchg
leave
inc
in
ret
push
cmp
les
pop
cmp
fsubrp
jae
push
mov
ins
rol
mov
add
and
pusha
call
push
in
push
sbb
add
inc
jp
mov
push
outs
sub
adc
cmp
cmp
cmp
inc
sbb
xchg
mov
mov
mov
cwde
push
or
fist
stos
das
push
sbb
mov
cs
sbb
cmp
ja
mov
push
adc
sub
add
mov
imul
loope
xor
jecxz
push
pop
sub
or
loopne
or
mov
ficom
enter
movs
mov
movs
(bad)
jecxz
push
js
pop
xlat
add
or
xchg
or
xor
pushf
int3
call
or
sbb
jle
(bad)
das
loop
mov
mov
or
(bad)
dec
fbstp
mov
shl
jecxz
imul
ret
mov
mov
lahf
ret
jns
cmp
inc
out
rol
in
fs
fwait
push
or
shr
(bad)
jmp
in
push
adc
sti
adc
xor
mov
dec
xchg
cs
repnz
inc
mov
add
mov
inc
mov
push
hlt
out
in
outs
cmp
or
sbb
push
(bad)
mov
int3
mov
mov
sbb
icebp
les
jg
push
loop
pop
inc
or
pop
not
test
cmps
mov
and
pushf
call
sbb
test
int3
iret
test
and
inc
(bad)
mov
into
add
push
mov
in
mov
sbb
cmp
lock
dec
lahf
or
aaa
das
shr
mov
inc
xlat
push
dec
sub
xor
mov
mov
test
bound
add
pop
adc
jnp
loopne
fsubr
loop
xchg
sahf
stc
or
loopne
push
mov
jmp
arpl
sar
pusha
add
jns
push
cmp
sub
shr
les
add
sub
cmc
or
xchg
cli
sahf
das
dec
sub
imul
mov
xor
cld
cmp
dec
gs
or
xchg
(bad)
jp
and
lods
sub
mov
icebp
btc
or
arpl
push
loopne
or
add
xor
pushf
rcr
pop
lock
mov
mov
sub
into
mov
adc
je
push
sub
adc
rol
retf
ins
mov
or
aaa
das
adc
dec
and
iret
cld
jno
xor
in
pop
cwde
mov
mov
je
in
push
es
(bad)
scas
jp
jmp
add
pop
sub
out
enter
outs
rcr
and
js
out
and
or
lock
hlt
push
cmp
mov
(bad)
sub
ins
mov
mov
push
mov
bound
in
aaa
pop
cli
int3
xchg
mov
mov
xchg
or
outs
add
je
sub
in
ss
xchg
adc
nop
fs
shr
test
ror
and
inc
ror
(bad)
fld
pop
bound
sub
add
retf
mov
rol
lods
xor
add
stos
pop
mov
cwde
jo
cmp
mov
jmp
xchg
xchg
pop
jno
or
cmp
push
jl
scas
inc
icebp
gs
sbb
jmp
ja
enter
mov
jo
rcl
cmp
mov
je
pop
sbb
call
and
dec
sbb
xor
sahf
cmps
mov
sbb
cmp
in
mov
push
lock
adc
or
fs
sub
out
mov
add
adc
sbb
jae
aaa
ins
out
les
rcr
push
or
test
add
mov
xor
xchg
xchg
ds
xchg
or
mov
rcr
dec
xchg
cld
mov
add
adc
addr16
sub
jle
(bad)
mov
rcl
or
jl
jbe
pop
out
outs
mov
jge
xchg
jle
ja
and
daa
add
test
fdiv
sbb
sub
sbb
les
ret
or
push
or
(bad)
add
dec
xor
arpl
inc
ja
mov
jg
sti
sbb
mov
push
pop
sub
sub
je
or
mov
fdivr
fadd
pop
mov
outs
pop
pop
(bad)
push
sub
xor
dec
pusha
push
and
stos
adc
retf
add
add
ror
mov
push
mov
mov
aam
pop
pop
sub
lock
sbb
dec
jo
cmps
bsf
cmps
adc
cli
push
in
push
push
je
std
sbb
(bad)
fbstp
fnstcw
mov
jbe
jmp
mov
mov
les
pop
mov
jmp
and
xchg
fidiv
dec
adc
mov
fisubr
add
inc
clc
mov
cmps
sbb
or
iret
mov
dec
data16
cmp
add
cmp
loop
test
sbb
xchg
retf
or
adc
sbb
jmp
lock
mov
outs
fisttp
mov
xchg
mov
mov
jmp
loope
jmp
fimul
push
and
add
fimul
pop
das
inc
mov
add
dec
pop
inc
mov
call
ror
mov
push
repz
mov
cli
iret
or
jecxz
mov
push
push
lock
mov
lods
xchg
xchg
push
aad
ds
jb
idiv
outs
fcomip
ret
cld
test
test
adc
hlt
mov
sub
mov
or
lods
lods
dec
xor
scas
xchg
data16
call
sbb
sar
or
mov
int3
mov
ins
inc
adc
std
sbb
popf
test
jns
outs
push
xor
mov
cmp
or
jecxz
inc
mov
or
or
repnz
loop
sbb
cld
or
jmp
mov
dec
lea
adc
cmp
hlt
gs
ret
add
add
inc
fdiv
or
div
outs
jge
xchg
adc
pop
(bad)
mov
jle
adc
sbb
add
xor
push
sti
stos
add
sti
and
pop
xor
jbe
mov
sub
in
mov
dec
mov
mov
sub
push
dec
xchg
or
mov
repnz
in
xor
mov
add
int3
arpl
mov
lods
mov
xor
add
sahf
or
mov
add
test
in
in
inc
xchg
add
pop
add
mov
add
mov
int3
adc
(bad)
pop
jne
mov
pop
mov
shr
leave
add
mov
gs
adc
imul
cmp
mov
mov
int3
sar
jg
jecxz
push
mov
sbb
shr
aam
or
mov
push
adc
pop
clc
mov
cmps
(bad)
arpl
mov
clc
pop
ja
repnz
cmp
outs
mov
and
or
and
push
adc
or
sbb
jnp
push
ins
push
push
push
mov
or
stos
pop
movs
push
fisubr
add
fidivr
mov
aam
dec
repz
push
inc
and
inc
pop
xchg
clc
xor
out
or
adc
jno
and
pop
mov
out
mov
cmp
mov
push
mov
push
mov
ds
dec
xor
std
cmp
repz
jge
xor
push
mov
(bad)
enter
dec
adc
arpl
loopne
ficomp
mov
jo
mov
repnz
inc
ja
fucom
sti
mov
in
mov
(bad)
mov
mov
jg
(bad)
push
add
pop
xor
call
leave
call
mov
retf
and
or
inc
int3
xor
ror
ret
mov
cli
out
jp
cmp
into
mov
xchg
sub
jbe
xor
in
ret
aaa
clc
cs
and
jg
add
(bad)
mov
fidivr
or
retf
cwde
push
or
mov
push
push
inc
jnp
add
mov
(bad)
sbb
pop
and
pop
inc
push
ins
jbe
in
pop
data16
sub
push
jmp
mov
jmp
(bad)
sub
adc
loop
dec
bnd
jno
add
and
sbb
xchg
out
mov
ret
jmp
push
mov
call
fldcw
fiadd
out
fisubr
pop
dec
jl
or
sub
lods
int
inc
mov
sahf
mov
shr
out
fwait
jo
jnp
(bad)
mov
gs
fld
mov
push
imul
jo
(bad)
dec
add
add
jmp
pop
lock
imul
call
mov
cmps
pop
leave
push
lds
je
xor
mov
mov
inc
cs
(bad)
out
dec
jecxz
sbb
mov
loope
rcr
leave
push
jecxz
fisttp
es
xchg
popf
pop
adc
mov
sbb
or
mov
je
fwait
dec
ss
push
ret
data16
push
xor
cld
fcomp
loopne
sbb
addr16
cmps
push
add
mov
mov
fmul
add
add
setbe
je
jne
bound
mov
outs
js
aad
sbb
fiadd
call
or
or
add
fwait
jmp
(bad)
movs
loopne
pop
jne
push
sbb
lock
xor
jns
inc
sub
mov
dec
add
jp
or
mov
(bad)
push
(bad)
lods
inc
xchg
add
dec
mov
or
outs
clc
xor
mov
icebp
inc
nop
dec
ror
mov
adc
popa
or
or
xor
retf
repnz
ss
xor
cmp
mov
add
sub
nop
dec
cld
es
push
xchg
add
adc
jno
inc
or
out
xchg
dec
and
ror
pusha
sar
loopne
int
inc
mov
sbb
sbb
xor
das
xor
add
bound
add
shl
fsubr
adc
jno
sbb
pop
jl
sub
neg
jge
ror
out
pop
mov
call
inc
sar
out
dec
fldenv
scas
mov
xor
jl
push
push
or
aam
xor
rcr
dec
ins
xlat
outs
fidivr
daa
fcomp
fldcw
rol
adc
lahf
call
ins
xor
xchg
or
inc
mov
mov
lock
xchg
pop
hlt
clc
div
jle
jmp
or
clc
(bad)
fiadd
(bad)
push
mov
cmp
mov
(bad)
jg
retf
push
sbb
loop
iret
dec
mov
or
xlat
scas
jmp
xchg
aam
lds
fbstp
add
mov
daa
xor
push
ror
loope
popf
fdecstp
sub
test
add
cli
or
lahf
imul
xchg
rcr
imul
mov
xchg
loope
xor
fisttp
cld
or
mov
cmp
xchg
bound
mov
mov
mov
into
ret
lods
sub
int3
or
hlt
fwait
sub
jnp
push
cmp
das
rol
sahf
add
mov
mov
inc
pusha
inc
cli
out
ror
mov
icebp
rol
push
mov
dec
ret
mov
inc
scas
mov
sbb
mov
sbb
mov
inc
cs
xor
(bad)
jge
fsubr
sub
inc
and
and
ret
pop
aam
push
ja
aad
cmp
jne
or
cmp
mov
xchg
mov
cmp
and
sub
out
xchg
mov
mov
cmp
mov
adc
adc
leave
cld
jmp
outs
inc
and
inc
jmp
push
and
pop
lock
out
nop
jbe
out
jl
int3
cmp
push
outs
push
xchg
imul
push
and
and
sbb
push
jle
fs
retf
ss
push
movs
out
push
add
aad
loop
(bad)
ds
cwde
jo
mov
outs
addr16
xchg
(bad)
inc
inc
imul
clc
dec
imul
xchg
xchg
pushf
outs
push
fsubrp
outs
cmps
outs
jae
xor
push
gs
imul
mov
(bad)
jno
test
rcr
jg
push
or
(bad)
push
in
repnz
add
nop
sar
inc
sub
pushf
(bad)
sti
jne
push
push
push
rol
fwait
cmp
mov
mov
call
push
jg
pop
fldcw
nop
push
inc
push
cmps
or
push
loop
ins
loop
mul
jg
arpl
lea
xchg
push
pop
jle
ffreep
(bad)
inc
xor
push
push
push
jle
push
popa
mov
cmp
je
add
ins
xor
or
add
bound
popa
push
data16
outs
xchg
or
clc
(bad)
push
popa
xor
imul
xchg
fiadd
dec
add
sbb
push
mov
add
jg
pop
scas
sub
aas
pusha
cmp
mov
jmp
shl
pop
push
push
xchg
sub
xchg
fcom
add
jae
cdq
test
add
adc
push
hlt
mov
idiv
in
mov
mov
bound
sbb
or
inc
or
mov
push
or
and
or
or
mov
xor
jp
pop
pop
and
(bad)
jo
dec
xor
pop
cmp
jbe
movdqu
stos
rcr
push
out
sti
pop
push
add
lods
(bad)
and
popa
aaa
mov
push
jne
sub
or
mov
ret
xor
sub
adc
cmp
push
aad
test
adc
inc
push
xchg
adc
jg
push
retf
(bad)
adc
mov
jne
popa
es
sub
inc
dec
imul
imul
cmp
push
sub
push
and
add
sub
inc
pushf
add
or
loopne
jne
push
inc
sub
push
mov
mov
jge
mov
loopne
adc
sar
(bad)
fs
push
xor
jmp
xor
mov
jne
mov
fmul
jae
add
(bad)
pop
cli
icebp
push
sbb
pop
cmp
jl
aas
test
push
jge
jne
xchg
xlat
adc
jg
fwait
inc
xchg
or
cmp
dec
fiadd
push
mov
cld
cwde
mov
aaa
or
mov
movs
mov
cdq
push
push
(bad)
fdivr
jg
shl
test
push
loope
xor
adc
fs
rcr
(bad)
(bad)
ds
add
pop
aad
push
imul
inc
pop
add
jae
xchg
(bad)
(bad)
jg
jmp
adc
mov
add
jno
adc
call
outs
push
pop
mov
scas
xor
mov
xchg
(bad)
cmp
mov
paddq
jmp
sti
(bad)
(bad)
fcomip
inc
(bad)
and
scas
inc
inc
pop
mov
out
test
or
mov
mov
test
outs
(bad)
(bad)
(bad)
pusha
and
push
add
ret
ins
or
inc
vmovaps
mov
push
inc
inc
dec
cli
div
jnp
sbb
inc
dec
dec
pop
sub
inc
pop
test
jnp
cmp
fbld
push
mov
pop
add
dec
repnz
inc
rol
(bad)
fistp
push
loopne
or
pop
or
jb
ja
xchg
xor
add
daa
add
jg
jb
inc
mov
inc
fimul
test
pop
out
mov
(bad)
pop
mov
cld
and
jmp
mov
mov
mov
sbb
pop
mov
dec
push
inc
(bad)
and
xchg
(bad)
jae
mov
push
add
xor
test
ins
pop
dec
les
jmp
jge
ret
fdiv
inc
das
ret
inc
ja
js
lock
jnp
jae
push
stos
add
cli
ret
cld
push
cmp
pop
xchg
shl
out
sti
mov
jmp
xchg
adc
fdiv
inc
outs
jp
(bad)
(bad)
sub
(bad)
ror
aas
inc
jmp
test
and
out
pop
mov
(bad)
fcmovnb
or
jl
pop
mov
jae
add
push
mov
add
fwait
inc
add
mov
jno
loopne
dec
jae
sub
inc
and
jmp
into
or
mov
jae
dec
add
inc
out
out
inc
push
out
imul
sbb
cli
mov
(bad)
jg
outs
out
pop
mov
int3
dec
or
mov
fcom
mov
push
inc
call
adc
push
enter
int3
out
add
out
aam
and
ja
nop
(bad)
pop
or
ret
adc
mov
fs
cmp
jg
(bad)
cmps
pop
lock
hlt
aad
je
test
inc
sub
xlat
inc
adc
xchg
(bad)
dec
push
sub
(bad)
sti
ja
sti
scas
add
popa
xor
repnz
xchg
movs
clc
sbb
xor
(bad)
push
sbb
shl
test
push
mov
push
inc
jg
or
(bad)
(bad)
inc
out
(bad)
scas
xchg
jmp
xlat
jb
mov
xor
jmp
add
inc
str
pop
rol
push
das
cli
jmp
je
std
add
mov
add
jmp
jecxz
pop
mov
jg
jmp
inc
sub
ret
sti
jmp
clc
dec
pop
jle
pop
neg
out
pop
jae
out
(bad)
sti
leave
add
add
rol
add
in
shr
mov
ret
mov
or
outs
clc
call
test
fs
sti
(bad)
jmp
call
out
add
(bad)
je
pop
xchg
loopne
aad
pusha
clc
mov
ret
add
adc
shl
mov
xchg
push
and
push
sub
xor
mov
je
sahf
mov
enter
stos
mov
jg
out
inc
das
es
mov
rcl
mov
out
cld
add
mul
sub
(bad)
(bad)
jg
out
mov
mov
mov
enter
pop
pop
das
call
cld
(bad)
xchg
loopne
das
jb
pop
mov
call
add
ins
sub
cmp
jmp
bound
mov
mov
pop
js
pop
pop
mov
push
or
add
ret
adc
add
pop
aad
sbb
pop
push
mov
pusha
inc
mov
in
jo
pop
jg
inc
jbe
sar
fucomp
mov
push
(bad)
or
pop
ret
mov
push
mov
sti
sub
push
repz
push
dec
ret
retf
std
push
retf
aad
mov
hlt
inc
arpl
loop
add
cld
fcomip
mov
push
je
xor
add
jb
mov
(bad)
shl
pop
fimul
cmps
inc
mov
loope
das
cmp
test
xlat
iret
pushf
cs
pop
pop
sbb
jge
ret
or
(bad)
mov
add
pop
(bad)
(bad)
stos
loop
mov
(bad)
xlat
xor
repz
fld
scas
js
mov
ss
add
sub
push
pop
iret
push
sbb
push
lock
push
mov
pop
inc
test
sub
and
sbb
push
pop
jp
sbb
fdiv
push
mov
(bad)
pop
das
cld
mov
cmps
cwde
pop
ins
pop
sti
pop
je
dec
pop
sub
mov
and
cli
inc
mov
add
imul
jne
pop
sahf
test
mov
add
pop
pop
out
add
push
cmp
iret
inc
lahf
icebp
aaa
or
sti
test
inc
call
sti
jne
xor
add
add
icebp
mov
retf
push
and
jae
xor
jnp
push
pop
jge
mov
mov
inc
in
jmp
add
adc
pop
(bad)
scas
jbe
sub
in
sub
push
ja
daa
lahf
pushf
outs
mov
(bad)
outs
adc
mov
cmove
ss
cmp
test
imul
xor
pop
dec
mov
cld
mov
push
nop
mov
sbb
push
fadd
add
xor
push
fwait
ret
loopne
push
out
fdivr
fbstp
inc
inc
outs
add
jg
or
or
mov
and
mov
mov
push
daa
push
(bad)
rcr
and
fucomip
or
into
sbb
gs
outs
mov
jo
pop
stos
sub
clc
mov
sbb
push
add
ins
out
inc
xor
jg
and
and
xor
and
out
movs
sti
adc
ds
jmp
pop
outs
push
les
(bad)
push
inc
and
iret
xchg
cmp
out
jge
outs
clc
(bad)
cld
adc
mov
push
jae
dec
(bad)
push
mov
call
jmp
arpl
mov
aam
jno
and
jl
out
mov
inc
jg
or
add
outs
mov
inc
inc
scas
add
push
pushf
or
pop
xor
arpl
inc
mov
test
retf
shl
(bad)
mov
bswap
sar
sub
push
xlat
mov
retf
mov
fnsave
mov
xor
and
jg
add
add
mov
lods
mov
mov
arpl
add
rcr
add
cld
test
mov
inc
(bad)
cmp
aad
(bad)
out
mov
into
pop
jmp
fcmovne
sub
dec
or
inc
(bad)
mov
lds
add
sub
aaa
adc
(bad)
(bad)
mov
arpl
jmp
pop
dec
push
aas
sub
sar
(bad)
adc
pop
jnp
xor
pop
jns
and
push
aaa
add
dec
sbb
clc
push
jmp
cmp
inc
adc
add
mov
clc
cwde
das
or
mov
mov
cmp
dec
ret
addr16
pop
mov
ffreep
and
cld
push
fld
sub
xor
cmp
aas
jmp
mov
fimul
or
(bad)
(bad)
and
jmp
call
inc
cmp
aas
mov
popf
inc
clc
jg
fdecstp
inc
cmp
xor
enter
inc
sahf
add
lock
push
sbb
xor
cmps
inc
in
add
fs
add
aas
adc
icebp
inc
js
out
dec
add
(bad)
imul
shl
add
mov
xlat
mov
fisttp
push
rol
jmp
sub
sbb
jl
out
mov
push
mov
add
out
inc
les
retf
cld
add
sub
xchg
ja
dec
dec
les
pop
ror
push
test
jmp
add
inc
sti
mov
sub
push
ret
push
xchg
xor
adc
add
inc
sub
jg
fbld
out
jp
inc
pop
enter
and
jl
mov
or
mov
pusha
ret
(bad)
mov
sbb
mov
push
std
and
nop
push
dec
mov
inc
je
aam
mov
cmps
adc
inc
loopne
jb
out
mul
push
adc
sub
jo
or
jmp
fs
jl
hlt
jo
jne
mov
ret
std
fwait
ins
add
or
xchg
dec
inc
dec
xor
push
ja
mov
pop
sti
xor
jmp
ret
inc
jb
ins
mov
jle
stc
es
arpl
jae
cs
fnstsw
and
push
fdivrp
repz
mov
rol
inc
or
xchg
mov
sub
add
xchg
adc
jmp
in
pop
mov
ret
mov
cli
mov
fidivr
xchg
mov
into
push
xor
movs
das
or
sbb
mov
dec
push
out
adc
inc
push
cmp
push
cmp
jnp
add
add
jle
dec
mov
pop
inc
push
imul
ret
add
jecxz
xor
or
push
ins
fcom
scas
rcr
xor
ins
inc
push
sbb
mov
(bad)
and
cld
inc
or
shl
mov
jmp
inc
mov
push
cld
push
push
inc
add
adc
jl
pop
clc
aaa
add
or
bound
sub
inc
mov
lods
out
(bad)
push
into
outs
mov
pop
mov
mov
xchg
push
xchg
mov
outs
aaa
(bad)
jae
add
(bad)
mov
xor
lds
or
aas
sar
jo
push
push
out
add
cmp
mov
dec
mov
pop
je
in
enter
sub
dec
fild
test
xor
sbb
push
mov
jb
ret
int3
iret
lock
adc
jne
or
dec
out
adc
mov
imul
sti
push
in
or
es
xor
mov
lds
ret
ins
ret
mov
adc
mov
into
push
mov
push
outs
std
jmp
fs
cmps
(bad)
jb
mov
cwde
pop
scas
in
or
jecxz
stos
inc
std
or
mov
mov
(bad)
mov
push
outs
mov
aas
lds
into
sub
add
adc
dec
push
pop
adc
jnp
inc
test
sub
mov
pop
js
push
add
cmp
add
sub
shl
jae
mov
mov
in
arpl
cmp
adc
add
pop
rol
sbb
mov
mov
add
add
scas
das
in
idiv
(bad)
je
fcomp
pop
or
sahf
stc
mov
fisttp
adc
push
gs
mov
jmp
(bad)
pop
(bad)
cli
(bad)
sar
cld
inc
and
pop
add
fdiv
das
das
and
fs
inc
dec
lds
pop
in
and
xor
ret
lock
mov
mov
pushf
xor
sahf
push
inc
lds
aaa
or
pop
jmp
or
enter
(bad)
jmp
mov
mov
sbb
xor
daa
jae
pop
sub
mov
repz
inc
push
jmp
aas
xchg
push
cld
mov
mov
inc
jnp
jo
and
fs
retf
idiv
loop
mov
(bad)
call
enter
mov
xor
add
out
inc
(bad)
out
das
sti
xchg
inc
xor
stc
jg
out
fmul
addr16
mov
mov
jg
mov
ja
push
idiv
mov
inc
sbb
inc
fisttp
sbb
sub
cmp
in
dec
pop
mov
cs
xor
inc
add
fld
test
in
fst
or
inc
mov
add
mov
das
clc
addr16
sahf
rcr
cs
test
xchg
mov
xchg
push
add
stos
add
jmp
(bad)
sub
pop
jbe
not
aas
jle
cmp
out
jae
cld
outs
scas
mov
xlat
ror
cld
sti
mov
add
call
shr
jl
inc
fadd
pop
iret
dec
lea
in
mov
(bad)
xlat
mov
bound
jmp
push
loop
inc
lds
dec
adc
mov
mov
push
aam
push
inc
jp
(bad)
jg
movs
in
mov
arpl
inc
dec
call
lahf
clc
jmp
add
int3
push
mov
std
scas
clc
(bad)
cmp
mov
adc
je
inc
xor
(bad)
push
adc
call
jl
not
cmp
inc
inc
sar
(bad)
and
out
xor
jp
sbb
les
cld
out
cli
ror
add
or
push
out
jmp
mov
push
jmp
or
(bad)
mov
inc
in
ret
rol
out
(bad)
jae
mov
fist
jb
xor
xchg
pop
ds
push
loopne
in
push
dec
pop
push
or
dec
outs
fwait
adc
dec
or
cli
push
and
mov
adc
in
inc
add
push
hlt
aas
jmp
or
push
(bad)
inc
(bad)
fadd
push
dec
mov
cmp
std
push
mov
mov
int3
inc
arpl
ret
add
jg
sti
rcl
xchg
jge
push
xor
inc
aas
push
shl
xchg
sub
(bad)
mov
sbb
mov
sbb
push
push
bound
test
sub
jnp
cmc
mov
fdiv
arpl
ret
fcomp
pop
or
adc
enter
add
mov
and
enter
sti
mov
ss
call
sbb
out
(bad)
movs
sub
inc
dec
add
mov
cmp
out
add
mov
add
ins
dec
test
icebp
add
arpl
jbe
and
ja
and
sti
shl
mov
jg
jp
cmp
ja
mov
repnz
or
or
xchg
cmp
cmp
mov
retf
ror
shr
addr16
(bad)
xor
mov
sti
mov
jg
sbb
mov
or
fisttp
lock
ins
aaa
cwde
(bad)
out
jbe
movs
add
dec
and
out
loop
out
sbb
fs
mov
mov
cli
hlt
dec
jle
mov
gs
and
cld
(bad)
sar
add
jmp
cmp
mov
std
mov
mov
jl
or
out
mov
add
aas
push
adc
popa
sbb
add
push
add
sar
inc
push
cmp
mov
mov
push
ss
lds
imul
mov
addr16
mov
push
sbb
adc
dec
loopne
or
xchg
dec
xchg
ja
fsubr
sub
mov
push
inc
jo
jb
mov
pusha
stos
jbe
sahf
mov
in
ret
mul
inc
jle
xor
and
cmc
out
mov
push
sub
sbb
xor
imul
test
add
outs
call
jbe
scas
(bad)
ins
jmp
sub
out
sub
push
and
inc
jmp
push
pop
stc
je
inc
arpl
call
sbb
xchg
xor
repz
jmp
scas
scas
(bad)
fdivr
pop
dec
mov
sub
add
je
cli
out
mov
adc
in
cld
out
pop
sti
mov
jae
rol
add
mov
xchg
xlat
mov
xchg
jl
(bad)
out
add
xchg
pop
push
mov
jl
test
pop
dec
add
pop
jle
add
inc
(bad)
sti
pop
test
(bad)
pop
dec
cmovne
mov
(bad)
push
(bad)
(bad)
dec
sbb
addr16
iret
mov
ja
sti
mov
sbb
test
push
std
pop
mov
pop
lds
mov
imul
inc
dec
lahf
ins
out
cld
neg
xor
mov
rcr
pusha
scas
fild
push
aas
retf
mov
enter
imul
mov
std
lods
inc
ins
adc
call
ja
or
push
mov
or
inc
test
out
gs
std
add
sub
push
out
jp
inc
mov
std
push
cmp
mov
push
jg
loopne
out
adc
sbb
push
push
clc
stos
pop
mov
jae
fild
mov
adc
in
jo
imul
push
pusha
adc
shr
jg
ret
shr
mov
jecxz
movs
add
neg
lea
nop
out
xor
add
mov
inc
dec
or
test
inc
out
ss
pop
clts
adc
adc
aad
enter
fmul
aas
test
push
push
and
mov
dec
pop
std
jl
das
cli
outs
inc
or
mov
call
adc
bound
fdivr
or
jl
pusha
inc
stos
cmps
mov
push
jp
ds
(bad)
fisubr
sub
inc
inc
cdq
dec
mov
adc
mov
sub
push
and
in
push
arpl
dec
xchg
stos
inc
retf
fimul
hlt
mov
xchg
push
mov
sar
or
aas
mov
dec
mov
add
xor
mov
retf
xchg
imul
jg
xlat
call
in
dec
jmp
push
test
ret
sbb
mov
scas
(bad)
(bad)
adc
sbb
adc
sti
and
outs
icebp
jg
call
repz
mov
mov
fist
xor
xor
mov
aaa
dec
xchg
push
sbb
mov
pop
push
mov
icebp
idiv
adc
std
push
or
(bad)
dec
pop
movs
(bad)
xor
pop
mov
mov
and
cld
cmp
lds
(bad)
dec
mov
sbb
hlt
add
sbb
in
out
lahf
mov
mov
(bad)
call
leave
call
lds
ja
inc
mov
in
pop
(bad)
push
out
mov
push
stos
gs
push
push
push
(bad)
stos
pop
mov
mov
pusha
pop
lock
add
push
sbb
sti
jae
add
pop
mov
pop
mov
mov
aaa
add
ss
clc
(bad)
jg
cmps
mov
sti
cli
adc
std
inc
xor
jmp
mov
ficom
add
cld
out
inc
aaa
lods
shl
(bad)
(bad)
loop
neg
inc
add
push
inc
stc
push
inc
add
jle
jg
jl
mov
sbb
(bad)
cmp
push
arpl
push
and
push
mov
mov
push
outs
das
movs
mov
inc
jmp
fcomip
jl
add
daa
mov
faddp
out
sub
sub
fild
inc
ret
inc
pusha
add
push
xor
pop
mov
outs
retf
sbb
mov
add
aas
retf
retf
push
adc
push
xor
xchg
fcos
and
das
mov
sub
sub
hlt
das
push
or
pusha
(bad)
mov
jno
mov
and
adc
daa
pop
in
add
ficom
xor
inc
and
mov
push
add
sub
xchg
or
seta
sbb
cli
or
pop
pop
inc
dec
jo
pop
jp
pop
push
(bad)
stos
mov
outs
dec
in
push
(bad)
jb
imul
inc
and
mov
inc
data16
mov
mov
repnz
(bad)
mov
pop
out
ret
pop
mov
fs
mov
and
add
jg
outs
clc
jg
mov
cmp
pop
cwde
out
mov
adc
fs
inc
jg
(bad)
(bad)
outs
out
cmc
idiv
std
mov
pop
ds
repnz
sti
inc
addr16
push
sub
mov
cmp
(bad)
je
add
test
mov
mov
inc
xlat
clc
pop
sbb
add
cli
mov
cmps
pop
inc
mov
mov
pop
pop
cmp
and
movs
mov
mov
pop
jbe
outs
mov
clc
repnz
mov
cs
or
aaa
cld
(bad)
pop
mov
mov
inc
scas
or
inc
push
mov
imul
es
fisub
jb
sar
imul
and
(bad)
cmp
iret
add
add
jmp
maskmovq
neg
xor
dec
xor
push
xlat
out
inc
aam
rcr
loopne
and
pusha
je
js
ins
and
inc
xchg
dec
or
xor
mul
xlat
data16
icebp
sar
call
bound
test
add
adc
(bad)
pop
or
jae
jnp
fdiv
pop
or
call
add
faddp
jns
fbld
pushf
inc
outs
imul
push
xchg
jg
(bad)
dec
es
cld
add
jg
mov
call
pop
cmp
sub
in
imul
sub
fdivr
(bad)
pop
out
mov
cmp
mov
mov
and
or
xchg
data16
inc
scas
pop
out
cmp
sub
push
add
xchg
inc
fwait
pop
mov
in
push
lock
mov
lahf
scas
sub
mov
pop
push
aam
mov
push
jae
xchg
inc
pop
lock
mov
or
dec
icebp
xchg
stos
xor
xor
jbe
xchg
jmp
mov
and
fild
dec
pusha
lds
nop
jge
sahf
jmp
outs
mov
pop
sub
pop
fcomip
(bad)
call
push
dec
jg
gs
or
mov
sbb
xchg
int
pop
pusha
rcr
push
ins
sti
push
fs
inc
ja
mov
pop
push
out
das
movs
(bad)
fistp
push
in
arpl
mov
sti
scas
call
adc
(bad)
mov
lods
(bad)
stc
pop
hlt
test
ins
mov
add
aas
cli
add
and
pop
push
lock
jmp
mov
jle
js
sub
inc
aad
mov
mov
mov
add
adc
fmul
or
pop
shl
lahf
(bad)
sar
inc
inc
xor
mov
out
jmp
cld
jno
pmulhuw
loop
mov
(bad)
adc
add
jmp
imul
pop
ja
sar
arpl
jae
inc
inc
sti
out
(bad)
add
in
jb
push
cmp
cmp
mov
inc
xchg
ror
(bad)
es
cwde
jle
int
(bad)
cmp
add
cmp
adc
add
pop
push
into
push
add
ror
fwait
sti
sub
inc
aas
lds
or
sbb
rol
pushf
pop
cmp
jmp
add
mov
push
mov
lock
sub
xchg
and
sti
inc
call
fsub
push
lds
xlat
ret
aas
and
inc
adc
das
outs
jg
(bad)
sbb
sub
push
and
mov
add
iret
mov
pop
add
imul
cmps
loop
inc
jbe
add
(bad)
jmp
outs
jmp
fs
(bad)
rol
fild
(bad)
jle
out
aaa
mov
sbb
pop
pop
dec
mov
push
pusha
jno
push
mov
outs
or
xchg
pop
in
pop
fild
(bad)
or
mov
inc
jmp
adc
xrelease
inc
mov
aaa
cdq
pop
inc
xlat
push
std
out
add
neg
jp
(bad)
jo
outs
mov
out
or
xor
mov
inc
jnp
inc
mov
add
mov
arpl
adc
into
dec
jae
fild
cmps
out
adc
xor
add
push
jge
mov
out
or
cld
(bad)
jg
sahf
adc
(bad)
push
pop
mov
loopne
inc
je
sbb
add
int
shl
stos
fiadd
test
fcomip
add
pusha
adc
std
inc
dec
fiadd
ficom
scas
je
clc
fld
pop
dec
lods
or
inc
dec
std
sbb
jg
mov
pop
aaa
jecxz
jecxz
push
outs
cli
push
cmp
pop
cmp
(bad)
dec
add
test
stos
ror
adc
mov
add
or
cmp
adc
push
aas
adc
hlt
adc
outs
push
inc
lds
jg
ja
test
sbb
sbb
sbb
mov
arpl
not
(bad)
push
inc
cmc
mov
ja
rol
fdivr
(bad)
jg
pop
push
jmp
inc
lds
ret
mov
shl
and
push
sub
and
scas
push
mov
mov
clc
mov
jl
mov
jb
mov
jno
jae
lahf
mov
inc
mov
(bad)
pop
std
pop
inc
aaa
cmp
popf
ror
xor
in
push
and
pop
and
sti
imul
cmp
pop
mov
jbe
pop
add
jmp
shl
mov
fbstp
loop
rcr
adc
ret
jmp
mov
(bad)
adc
add
and
out
jmp
mov
bound
pop
and
daa
sti
push
fs
mov
mov
out
mov
(bad)
fild
in
(bad)
scas
mov
jae
out
out
cli
add
jmp
jmp
mov
test
in
inc
sti
out
mov
ins
jg
inc
push
mov
out
sbb
fmul
fcom
jmp
call
jae
mov
out
inc
ret
test
clc
inc
xchg
inc
push
std
outs
cdq
jb
dec
pop
adc
jae
sub
out
cli
das
cmp
je
ret
pop
es
and
aas
inc
out
push
cs
test
xchg
pop
test
inc
enter
sub
icebp
cld
call
inc
cmp
add
mul
pop
push
push
(bad)
cmps
pop
and
and
ds
push
adc
jmp
mov
mov
fiadd
jp
imul
add
fisub
push
xchg
and
lods
push
mov
in
push
push
inc
add
stos
and
in
in
cmps
outs
clc
mov
inc
push
and
bound
scas
fidivr
xor
sub
fs
(bad)
dec
cld
jg
hlt
mov
mov
jae
adc
test
je
adc
movs
fmulp
dec
outs
bound
dec
inc
ss
cmc
dec
gs
add
aas
xchg
inc
ret
out
arpl
inc
clc
icebp
outs
xor
xchg
out
std
test
dec
in
mov
push
xor
mov
aas
outs
(bad)
mov
inc
jae
stc
retf
mov
mov
jle
bound
push
inc
inc
rcr
lods
int3
xor
adc
test
or
sub
dec
add
std
call
sub
jmp
dec
xor
jae
inc
sub
inc
dec
(bad)
push
and
jg
add
cmp
mov
iret
pop
sbb
jnp
lahf
ret
inc
sbb
pop
pusha
push
cli
add
cli
scas
mov
and
jae
out
(bad)
std
aas
xor
inc
pop
pop
ret
sbb
xor
dec
ret
add
shr
(bad)
out
inc
mov
ret
add
bound
cmp
xor
inc
aaa
or
jl
sbb
add
and
sti
dec
push
pop
pop
xchg
add
cmp
pop
call
mov
add
mov
aas
fs
inc
cmp
dec
mov
(bad)
xchg
gs
ins
add
outs
cmp
cld
add
add
jmp
lahf
jmp
mov
xchg
add
adc
and
loop
pop
jle
(bad)
inc
pop
and
push
hlt
movs
inc
and
inc
out
je
mov
xchg
push
pop
push
cmc
push
pop
push
test
dec
sub
jmp
pop
scas
xchg
inc
xor
outs
mov
out
loop
cmc
pop
jb
jae
rdseed
mov
pushf
mov
arpl
(bad)
mov
scas
pop
sti
mov
icebp
push
xor
rcr
clc
mov
sub
mov
sub
shl
divps
ja
inc
dec
repnz
jbe
(bad)
push
clc
adc
mov
mov
add
push
adc
mov
icebp
je
cdq
mov
adc
mov
push
push
sar
mov
inc
mov
add
push
je
jecxz
xchg
dec
sub
cmp
xor
and
and
ins
cmp
xor
jge
scas
cmps
dec
(bad)
loope
pop
or
mov
jmp
in
jge
pop
mov
call
(bad)
inc
jbe
jmp
push
pop
cmp
add
shl
inc
std
push
pop
jo
pop
dec
dec
jmp
jno
push
mov
sub
mov
cmp
xor
pop
and
adc
pop
push
xor
and
jg
in
mov
xor
sub
mov
pop
adc
mov
mov
fwait
adc
add
jae
mov
inc
inc
pop
or
add
jmp
inc
or
ror
or
pop
push
retf
rep
sti
push
mov
inc
jmp
add
(bad)
ror
push
mov
lahf
sti
inc
out
sti
out
stc
aaa
mov
fld
add
pop
xor
mov
push
(bad)
inc
inc
mov
add
add
repnz
int3
inc
cmp
fidiv
je
and
add
(bad)
mov
push
mov
out
pop
dec
call
inc
jg
add
or
adc
jp
(bad)
xlat
pop
fbstp
mov
scas
add
fadd
inc
inc
das
xchg
inc
mov
jae
jp
out
push
frstor
xchg
and
mov
jg
or
push
scas
aas
inc
cmc
(bad)
(bad)
(bad)
sub
mov
je
add
pop
jae
aas
stc
sti
pop
sbb
pop
push
pop
push
xor
sti
js
inc
je
or
push
(bad)
jmp
add
or
lods
push
sti
sbb
pop
jbe
lds
rol
(bad)
pop
test
inc
(bad)
mov
aaa
(bad)
cmc
out
add
ins
(bad)
test
test
pop
push
or
out
imul
pop
retf
cli
mov
push
mov
xor
push
and
lds
mov
jno
idiv
inc
mov
cs
sar
arpl
cmp
outs
out
dec
fisubr
push
js
pop
test
ins
inc
das
add
sti
rcl
or
sbb
xchg
cli
pop
or
(bad)
addr16
out
mov
pop
cmp
xchg
loope
add
inc
addr16
add
add
add
mov
xchg
pop
pop
push
scas
push
push
adc
jo
pop
cmp
push
dec
arpl
add
mov
into
(bad)
cmc
cmp
add
inc
or
mov
xor
adc
ret
(bad)
in
pop
(bad)
push
inc
fcmovnu
jle
sti
fisub
(bad)
mov
imul
push
das
sub
mov
jne
cli
xor
out
cmp
or
(bad)
iret
xchg
test
mov
(bad)
aas
scas
emms
sub
mov
rcr
pop
loope
loopne
sub
mov
inc
sti
jp
sub
mov
add
ja
sub
retf
mov
lds
dec
cmp
mov
inc
loopne
(bad)
sub
xlat
push
mov
int
push
(bad)
push
cli
push
scas
mov
es
pop
jp
ficom
or
out
inc
adc
pop
test
push
not
add
xchg
push
call
pusha
pop
pop
loope
sub
cld
scas
add
movs
in
ret
cli
call
fcomp
add
lahf
or
add
inc
cmp
mov
inc
data16
push
inc
out
push
add
sub
pop
mov
xor
imul
inc
pusha
aas
je
mov
sbb
outs
mov
cmps
and
push
add
(bad)
push
ror
test
out
pop
outs
or
sti
pushf
ret
or
add
jne
imul
dec
sbb
pop
mov
test
test
out
mov
or
inc
dec
dec
cld
mov
or
mov
inc
out
outs
add
mov
shl
repz
outs
pop
add
adc
sbb
jns
inc
mov
test
add
adc
mov
jae
mov
jnp
ret
dec
push
(bad)
scas
sub
mov
mov
sub
adc
fwait
repnz
push
add
mov
pop
inc
lds
dec
jmp
shl
clc
dec
aas
mov
push
xchg
out
stos
ds
lods
(bad)
repnz
add
aaa
pop
or
push
xchg
dec
adc
push
(bad)
mov
inc
cwde
jg
dec
mov
shr
inc
or
push
mov
add
jp
addr16
arpl
cld
push
jecxz
sbb
cmp
stos
add
rcl
mov
hlt
repz
mov
(bad)
repnz
lods
fstp
mov
cli
sub
jae
xchg
sub
inc
cmc
bound
mov
call
clc
dec
and
mov
mov
movs
mov
mov
lock
pop
sub
or
aaa
std
pop
loopne
push
ja
cld
aas
mov
cmp
jmp
(bad)
fs
mov
push
ficomp
cli
mov
clc
(bad)
add
(bad)
repnz
lahf
inc
(bad)
outs
mov
ret
jns
into
ret
sub
push
ins
movs
and
aam
cwde
xor
mov
xchg
mov
(bad)
in
cmp
inc
lock
jmp
sub
xlat
mov
fsub
adc
inc
sub
pop
and
lds
xchg
pop
adc
scas
enter
js
mov
push
ss
add
ja
rcr
aam
mov
es
push
adc
adc
shr
jmp
aas
jecxz
out
push
mov
jmp
fistp
pop
mov
inc
and
xor
dec
mov
out
push
mov
cli
les
xchg
sbb
movs
imul
and
jg
or
aaa
sbb
std
dec
fsubr
inc
sti
aad
(bad)
xor
sbb
cmc
adc
lock
push
inc
ins
add
mov
mov
push
push
ficom
arpl
mov
loop
push
cmp
cmp
dec
fidivr
and
dec
es
fild
dec
add
ret
fs
sti
cwde
inc
out
(bad)
mov
fwait
div
xor
adc
add
fucomi
fcmovbe
fidiv
in
push
add
add
sub
mov
pop
cli
je
es
add
sub
dec
jp
dec
inc
scas
fimul
lock
inc
dec
sub
je
jne
xchg
cli
inc
outs
pop
xchg
add
pop
mov
pop
mov
pop
add
pushf
clc
push
pop
dec
pop
add
jae
lods
outs
adc
add
aas
js
xchg
push
je
ins
fmul
mov
mov
add
or
xchg
sub
fcom
sub
cmp
cmps
add
jmp
cmp
js
movs
call
pop
or
jg
sar
pop
arpl
jo
ret
add
out
hlt
test
into
jmp
pop
and
ss
xchg
scas
(bad)
mov
je
push
xlat
inc
rol
mov
lahf
fisub
dec
fs
sbb
dec
inc
sub
jae
in
cli
jmp
stos
dec
(bad)
(bad)
imul
push
push
xchg
pusha
and
push
jb
sbb
lods
mov
push
cmp
js
xchg
xor
aas
adc
jg
pop
mul
aas
sar
inc
adc
add
aam
adc
sbb
mov
mov
sti
xor
shr
cmp
push
jae
xor
data16
(bad)
sti
and
add
and
pop
fwait
xor
inc
mov
js
jo
sahf
ret
push
dec
and
pop
(bad)
mov
push
ins
test
mov
in
or
sub
(bad)
aas
loopne
jmp
gs
jmp
clc
add
ret
cmp
fs
aaa
addr16
pusha
or
inc
out
push
lahf
clc
fcomip
mov
int3
mov
mov
aas
std
mov
xlat
out
jb
(bad)
adc
and
mov
dec
loopne
add
push
fcomi
mov
(bad)
cmp
add
(bad)
xor
mov
lock
cmp
or
mov
das
arpl
and
mov
xor
jmp
aad
sbb
mov
mov
push
jg
or
jae
add
cmp
pusha
mov
loopne
enter
push
lds
out
pop
sti
ins
stc
inc
hlt
cli
jmp
inc
xlat
mov
mov
push
aas
or
push
movs
mov
add
inc
(bad)
pop
mov
pop
lock
loop
add
add
cmc
mov
clc
mov
out
jg
dec
add
pop
push
sub
mov
repz
jecxz
in
mov
pop
cld
(bad)
and
jmp
call
or
jmp
jle
mov
adc
movs
mov
push
or
out
mov
jne
jae
or
pop
cmps
jmp
inc
std
add
jae
movs
push
out
sub
ss
ror
sub
xchg
add
retf
xor
(bad)
(bad)
(bad)
and
movs
add
pusha
push
mov
icebp
ret
pop
js
xor
bswap
adc
(bad)
imul
repnz
sub
lds
pop
mov
push
mov
ds
add
mov
pop
inc
add
sub
mov
loopne
in
stos
aaa
jb
(bad)
std
adc
(bad)
repz
pop
bound
jmp
xor
pop
inc
push
(bad)
inc
cmc
xchg
out
xor
dec
add
je
cmp
add
fld
cmp
push
add
push
out
mov
mov
mov
cmc
mov
pop
test
(bad)
jecxz
test
inc
dec
fadd
mov
cmps
dec
pop
and
ret
aas
mov
and
pop
loopne
jle
jle
mov
(bad)
pop
lods
mov
add
sbb
add
ror
fisubr
add
or
inc
int
inc
mov
inc
inc
jne
inc
pop
inc
movs
std
rol
dec
jmp
in
add
ret
inc
imul
cli
test
add
aas
out
pop
test
pop
add
push
mov
repnz
mov
jmp
sub
pop
out
dec
jno
mov
xor
inc
mov
pop
mov
pop
mov
in
ret
sub
pop
dec
jmp
pop
lds
rcr
out
cli
aam
ret
lds
jl
pop
pop
jmp
pop
jne
scas
and
xchg
rcl
and
pop
pusha
adc
in
ret
push
out
pusha
addr16
dec
jb
sar
out
push
mov
(bad)
or
scas
fnsave
mov
cmp
sbb
pop
or
mov
mov
and
add
cmp
xchg
ins
push
push
push
std
add
dec
inc
or
pop
lock
je
fld
jo
int
lods
fcos
adc
push
test
jge
pop
or
adc
mov
inc
inc
mov
mov
out
dec
syscall
mov
lahf
mov
fimul
add
(bad)
ins
adc
mov
call
pop
(bad)
push
add
and
lods
xor
clc
push
or
push
mov
and
dec
lea
jg
push
pop
or
jle
xor
ja
out
inc
aas
push
cmp
in
jb
(bad)
mov
push
or
add
and
movs
push
out
in
mov
ror
xor
inc
lods
sahf
mov
in
add
pop
add
(bad)
sub
jmp
pop
hlt
push
push
cli
stc
xrelease
adc
inc
mov
or
aas
pop
jae
jl
inc
out
(bad)
jle
fisubr
add
(bad)
call
jecxz
or
and
and
fmul
lock
iret
push
frstor
cli
dec
push
lock
mov
pop
inc
std
add
js
ret
inc
push
adc
jmp
jg
mov
bound
push
adc
jmp
cmp
nop
stos
cmp
icebp
test
sar
(bad)
or
dec
jb
adc
lahf
dec
ja
jl
dec
add
fcomp
mov
cli
mov
sti
das
dec
(bad)
pop
add
jge
repz
and
push
inc
(bad)
outs
scas
add
les
cmc
outs
ins
add
inc
sahf
cmp
add
cmps
sbb
add
aas
fist
data16
sub
mov
mov
inc
sti
mov
xor
lds
jg
(bad)
call
cmc
setb
jp
or
scas
iret
inc
stc
pop
fimul
adc
mov
jl
add
inc
or
dec
xor
mov
jb
jae
jmp
lods
push
and
mov
xchg
inc
jno
sub
push
lahf
mov
fdivr
inc
in
push
inc
mov
(bad)
daa
jmp
outs
xchg
aad
jae
mov
pop
or
lar
mov
and
fcom
add
(bad)
or
push
jmp
jbe
sub
xchg
push
mov
lea
call
in
jg
enter
jb
pop
add
xor
mov
(bad)
jae
arpl
inc
add
sti
mov
mov
in
call
je
pusha
lahf
mov
aam
or
aad
ins
jmp
(bad)
repnz
sub
dec
out
dec
add
pop
imul
mov
mov
or
mov
jae
adc
push
mov
sbb
jg
(bad)
stos
call
out
adc
jg
mov
mov
ins
push
(bad)
push
ret
mov
mov
int3
(bad)
jmp
pop
adc
sub
mov
jbe
sbb
mov
jle
inc
(bad)
fwait
movs
add
and
in
dec
fidivr
mov
mov
(bad)
mov
rol
ret
sub
xor
adc
call
arpl
ffree
(bad)
call
pop
push
add
and
out
pop
(bad)
dec
push
je
(bad)
cld
call
inc
dec
cwde
mov
stos
(bad)
aad
out
test
adc
and
inc
cli
push
xchg
pop
mov
not
or
push
leave
mov
push
mov
sbb
mov
mov
mov
cmp
(bad)
push
out
sbb
push
pushf
push
enter
int
mov
inc
xlat
inc
pop
(bad)
(bad)
(bad)
cmp
fisttp
and
mov
jmp
mov
aas
fs
sti
fwait
clc
sub
mov
add
adc
mov
es
jmp
je
cld
call
inc
retf
call
xchg
movs
cmp
pop
out
inc
std
in
dec
or
enter
inc
mov
fs
icebp
dec
(bad)
(bad)
adc
inc
adc
fild
inc
mov
out
gs
fld
in
stc
into
mov
out
adc
and
jmp
stos
sbb
mov
pop
pop
dec
mov
outs
jno
add
xchg
inc
pop
push
and
mov
out
xlat
imul
retf
cli
mov
add
mov
dec
dec
push
jno
(bad)
mov
sub
fild
xchg
call
jmp
lds
(bad)
test
sub
xor
add
(bad)
das
mov
pop
dec
fdivr
inc
push
mov
dec
push
or
inc
mov
push
mov
cld
inc
aaa
xor
or
mov
push
cmp
add
(bad)
sti
xor
out
lea
es
pop
pusha
jmp
push
(bad)
std
lods
iret
arpl
inc
dec
je
test
add
sbb
std
dec
mov
adc
push
clc
scas
lds
dec
mov
lock
pop
xor
outs
mov
stos
pop
mov
mov
retf
imul
scas
pop
cmp
and
mov
cmp
pop
push
xor
adc
push
dec
jmp
test
inc
and
pop
retf
add
popa
inc
aaa
ror
push
cs
hlt
jmp
mov
stos
retf
push
pop
loopne
ds
xor
call
(bad)
mov
inc
adc
mov
mov
inc
dec
hlt
push
cmp
aas
jle
cli
fwait
jmp
shl
sahf
out
pop
lock
mov
mov
sub
out
add
ror
fsub
std
cmps
(bad)
or
jb
add
pushf
add
mov
outs
ret
in
push
xchg
and
hlt
(bad)
(bad)
sti
lds
gs
jnp
je
pop
mov
addr16
jns
mov
mov
mov
pop
aaa
movs
xor
imul
out
imul
es
jae
and
std
cli
pop
or
dec
xchg
xchg
mov
push
and
aas
(bad)
add
ret
outs
jp
lock
inc
inc
mov
sub
xor
add
jne
std
ret
int
mov
(bad)
pop
not
xchg
sbb
jmp
(bad)
fistp
rol
and
retf
xor
push
test
sub
ds
xchg
add
or
test
daa
enter
push
imul
(bad)
add
xor
cmp
stos
push
(bad)
sub
dec
cmp
sbb
popa
in
scas
and
int3
fcomp
mov
cld
jg
push
fisttp
push
fs
ins
inc
cmp
push
mov
or
call
add
add
out
pop
mov
add
(bad)
jg
std
jae
repz
ins
mov
inc
into
add
fsub
sub
scas
xchg
sbb
test
retf
pop
jg
jmp
shr
mov
xor
push
jecxz
in
mov
out
outs
push
frstor
add
xor
mov
xchg
cmps
mov
mov
inc
ins
pop
push
ds
pop
test
mov
push
movups
cmps
dec
mov
das
pop
adc
cmp
sbb
jmp
sub
out
loopne
dec
inc
jae
inc
out
inc
push
adc
dec
inc
add
sub
retf
ds
xchg
out
add
ret
leave
mov
ret
xor
pop
or
scas
outs
mov
call
loop
mov
cmc
mov
mov
mov
ret
mov
sub
aas
arpl
gs
push
adc
or
xchg
mov
push
jecxz
mov
out
add
add
inc
ret
mov
dec
aaa
call
(bad)
fild
and
ret
mov
je
push
adc
add
(bad)
adc
inc
imul
xor
mov
cmp
das
add
mov
dec
dec
mov
in
jle
push
dec
ds
and
fs
jae
cli
fdivr
shr
repz
shr
hlt
ja
add
pop
xor
jl
xor
lock
push
jle
mov
ins
add
or
lds
mul
loope
mov
push
push
adc
rol
divps
adc
and
call
sbb
stos
mov
xchg
cdq
inc
imul
shl
or
(bad)
cmps
cli
mov
call
test
out
add
xchg
dec
xchg
push
jl
and
fmul
addr16
mov
pop
leave
(bad)
fmul
fstp
mov
aas
xlat
inc
pop
test
add
cli
retf
xor
mov
inc
pop
scas
inc
push
ret
push
(bad)
std
fcomip
das
xor
push
mov
mov
pop
pop
ds
outs
push
gs
dec
inc
cwde
add
in
mov
inc
pop
push
xchg
mov
inc
or
dec
add
fsubr
cmp
jae
test
add
sub
jl
dec
div
shl
adc
sahf
pop
mov
inc
je
out
or
inc
sar
xchg
rcl
sbb
adc
lods
(bad)
cmp
or
push
ins
cli
and
jg
mov
xlat
mov
cmp
imul
push
ins
push
sbb
jno
push
stos
dec
add
cmps
and
ficomp
clc
jb
pop
aas
push
mov
sub
(bad)
out
xchg
jbe
je
push
jb
and
in
cmp
or
add
push
jmp
jmp
pop
mov
inc
and
inc
outs
mov
imul
ret
push
aas
push
call
or
and
adc
rcl
jbe
push
mov
push
hlt
cmp
outs
stos
(bad)
push
mov
jmp
out
push
and
mov
adc
or
lock
enter
push
push
adc
cmps
inc
jg
xlat
test
jecxz
sahf
inc
inc
ds
aas
addr16
add
(bad)
popf
imul
mov
dec
push
enter
ror
cmp
enter
jae
mov
mov
add
dec
aam
xchg
inc
(bad)
lods
pop
ins
adc
cdq
sar
add
sbb
je
add
and
mov
xor
and
mov
(bad)
pusha
add
jl
(bad)
pop
ja
mov
add
pusha
es
add
jae
in
mov
les
pop
out
not
jmp
movs
jg
mov
inc
jmp
add
(bad)
jbe
sub
test
(bad)
das
inc
retf
mov
push
inc
loope
push
gs
(bad)
pop
add
mov
das
push
or
ret
cld
mov
(bad)
push
or
(bad)
scas
sub
and
jmp
ret
cmps
test
jmp
mov
addr16
push
je
and
sub
cmc
daa
aam
mov
scas
add
push
ret
fiadd
jg
ret
jb
push
jo
add
in
aaa
cmp
add
or
xor
mov
call
jae
jbe
pop
cmp
and
and
xchg
push
dec
(bad)
outs
push
dec
scas
cmc
mov
mov
gs
out
dec
out
mov
mov
mov
or
jae
or
fcmovb
ret
push
mov
jmp
sti
fimul
xchg
and
xor
sti
sub
and
xlat
mov
arpl
lock
jae
pop
pop
jl
jecxz
jg
ret
pop
and
iret
mov
jo
(bad)
jg
sti
xor
sub
jb
cld
das
clc
jo
push
dec
cmps
mov
mov
mov
pop
push
ret
pop
adc
inc
rcl
jne
push
sti
pop
xchg
sti
fbstp
cwde
pushf
xchg
pop
add
aas
inc
mov
mov
retf
outs
mov
push
push
or
cli
pop
clc
jmp
das
push
add
outs
dec
jmp
fxch
push
mov
(bad)
sbb
push
and
adc
jae
imul
push
push
sub
push
test
add
jmp
(bad)
std
out
mov
pop
dec
xor
js
jbe
or
inc
pop
cli
scas
sti
adc
mov
dec
dec
add
inc
push
mov
(bad)
xor
push
mov
das
jp
loopne
push
loop
adc
cmc
aaa
loopne
sbb
inc
icebp
jns
add
hlt
mov
pop
das
mov
dec
push
mov
jno
mov
inc
iret
dec
int3
hlt
cmps
and
call
push
lahf
lock
inc
xor
pop
cwde
or
outs
mov
rcr
test
dec
mov
inc
add
rcl
adc
cli
(bad)
(bad)
cpuid
pop
repnz
pop
ror
jecxz
dec
loop
xlat
js
inc
int3
test
into
inc
aas
add
das
adc
shr
arpl
mov
xor
out
or
and
cmp
(bad)
inc
dec
(bad)
fisubr
add
fs
cld
pop
mov
push
out
retf
push
test
inc
aas
gs
(bad)
xchg
sti
pop
aad
jmp
jle
test
mov
(bad)
and
xchg
mov
out
js
in
scas
ss
pop
push
mov
(bad)
clc
enter
cmp
mov
xchg
push
aas
jg
addr16
fist
aaa
cld
fcmovnu
adc
sbb
inc
mov
and
and
xchg
dec
dec
mov
mov
cmps
rcr
mov
inc
xor
idiv
hlt
xor
push
cwde
call
and
mov
sbb
out
cld
(bad)
rol
lahf
outs
jb
mov
mov
pop
jbe
ins
aas
and
ret
mov
outs
mov
ja
je
mov
mov
dec
inc
mov
adc
inc
push
fistp
dec
pop
loopne
mov
pop
add
test
mov
push
inc
ret
dec
add
je
imul
xchg
inc
icebp
add
mov
enter
and
xchg
das
lea
add
mov
add
inc
xlat
nop
sti
pop
out
pop
std
push
or
data16
sub
mov
jo
push
mov
jecxz
cmc
add
cmp
add
(bad)
(bad)
clc
scas
mov
bound
push
and
inc
inc
mov
xor
outs
push
sub
add
add
mov
mov
pop
push
cmp
or
cmp
cld
call
imul
les
inc
fmul
ins
push
add
fs
out
sar
pop
adc
jnp
out
pop
mov
xchg
out
mov
repz
inc
dec
ret
clc
cmp
xchg
fs
(bad)
xor
(bad)
fwait
enter
jae
pop
inc
pop
stos
mov
inc
xchg
loopne
cli
add
inc
jb
cmp
sahf
pop
gs
call
scas
pop
out
out
sti
cmc
(bad)
and
mov
or
dec
and
shl
mov
jg
sbb
dec
retf
push
dec
inc
(bad)
repz
out
or
jne
cmp
loop
pop
pop
(bad)
pop
sti
pop
jo
or
out
mov
jg
xor
xor
add
sub
(bad)
subps
add
inc
test
add
nop
push
pusha
cmp
iret
cli
enter
push
inc
add
out
or
add
jl
and
out
add
mov
mov
ja
inc
cli
mov
xlat
or
add
jmp
nop
(bad)
xchg
sti
cli
push
push
add
ja
inc
inc
inc
inc
mov
inc
pop
push
jl
mov
les
add
movs
pop
ret
xor
add
arpl
ret
add
test
pop
lock
sahf
mov
dec
push
pop
inc
push
stc
mov
(bad)
push
push
sub
dec
aaa
rcr
fmul
mov
xor
not
inc
das
mov
or
mov
add
aas
mov
xor
push
sar
aas
push
inc
dec
mov
repnz
cmps
(bad)
std
loopne
adc
cmp
cs
(bad)
push
jmp
jmp
pop
mov
inc
jno
jae
adc
dec
push
call
mov
mov
dec
pusha
push
mov
dec
js
dec
and
and
in
stos
xchg
loopne
jle
sti
vpcmpgtw
xor
sti
pop
add
xor
push
hlt
push
mov
and
js
std
push
scas
cmp
push
xor
mov
fdivr
pop
movs
outs
mov
loop
lahf
(bad)
scas
js
add
jmp
imul
rcr
dec
mov
ja
stos
mov
mov
jmp
jg
mov
xchg
inc
(bad)
call
popf
dec
add
mov
jbe
or
sbb
cmp
push
sar
(bad)
xchg
aas
mov
repz
mov
out
dec
cmp
cmp
inc
push
push
inc
cld
inc
push
add
add
or
inc
add
sbb
sub
xchg
shr
hlt
rol
jmp
mov
inc
test
repz
gs
push
mov
mov
add
mov
pop
add
hlt
aaa
shl
arpl
push
je
cmp
add
inc
call
add
sar
push
call
push
pop
inc
ficom
jge
lahf
in
or
inc
aaa
pop
add
add
stos
xor
out
(bad)
push
inc
sub
movs
jg
jns
mov
or
mov
adc
mov
call
add
xchg
mov
pop
out
jbe
pusha
fadd
jae
dec
fmul
add
ins
jno
mov
enter
inc
cld
jno
cld
push
add
inc
out
xor
test
cmp
js
rcr
mul
inc
pop
repz
imul
in
outs
(bad)
aam
arpl
mov
imul
push
xor
jmp
test
or
sub
call
aas
cmp
mov
or
out
mov
add
scas
push
std
sbb
cmp
ins
ins
mov
jecxz
fwait
mov
loope
xor
das
sti
push
std
add
repz
mov
sti
inc
pop
retf
add
hlt
push
mov
or
jmp
int3
pop
rol
outs
mov
xor
xor
mov
mov
adc
jae
(bad)
mov
pop
mov
(bad)
cmp
cmp
std
std
xchg
arpl
repnz
cli
inc
call
inc
pop
cld
and
dec
cmp
mov
xchg
add
jmp
repz
or
(bad)
mov
xchg
adc
shl
cmps
pop
sbb
and
pop
push
or
outs
jg
repz
jb
rcl
add
add
mov
in
out
je
jnp
lods
jae
jp
pop
and
dec
mov
pop
ret
lock
je
push
les
aas
das
adc
inc
xor
push
add
jmp
fs
fbstp
enter
ret
sbb
xlat
add
mov
xor
retf
imul
push
jp
cli
dec
movs
add
imul
or
sub
adc
movs
pop
(bad)
dec
sar
mov
jno
jne
mov
pusha
push
jg
out
pop
jbe
dec
mov
call
inc
cli
inc
or
ud0
jmp
pop
outs
mov
jl
adc
les
mov
in
stos
inc
outs
push
push
(bad)
push
mov
mov
push
aaa
shl
mov
ss
add
or
mov
test
push
cmp
loope
pop
or
dec
imul
pop
jns
add
ja
test
or
pop
jnp
lock
data16
call
int3
js
(bad)
(bad)
jl
and
dec
inc
wbinvd
out
clc
aas
mov
inc
push
inc
retf
inc
sub
(bad)
mov
test
inc
bound
inc
dec
dec
add
ins
sub
mov
rcl
inc
test
or
inc
icebp
popf
enter
(bad)
or
mov
add
pop
dec
sti
or
push
scas
mov
cmc
jnp
inc
inc
jbe
mov
dec
int3
sti
(bad)
add
cli
jo
inc
mov
xchg
jno
xor
ja
cmp
retf
jnp
push
add
(bad)
sub
add
xor
and
test
jg
xor
iret
adc
add
iret
repz
mov
cli
ins
clc
or
stos
mov
cli
jo
push
test
ja
inc
imul
inc
mov
or
sub
push
test
pop
add
aas
mov
push
(bad)
mov
or
cli
fstp
xor
jle
inc
mov
jle
shr
(bad)
adc
inc
nop
pop
mov
out
or
ret
popf
(bad)
push
in
imul
mov
push
and
mov
out
dec
(bad)
jmp
inc
dec
dec
aaa
adc
pop
(bad)
scas
ret
xchg
fcomp
aas
outs
dec
add
ja
cli
inc
in
dec
jg
sbb
dec
(bad)
call
jp
call
daa
hlt
mov
inc
jmp
adc
movsx
inc
mov
pop
inc
mov
bt
clc
mov
jg
shl
test
std
fild
bound
(bad)
mov
out
mov
adc
adc
inc
std
pop
dec
inc
aam
cmc
mov
mov
ffree
(bad)
gs
or
sub
dec
xchg
xlat
or
jmp
mov
dec
sub
sbb
ret
or
jp
pop
mov
pop
mov
lahf
(bad)
inc
pop
push
ret
repz
neg
ins
adc
fst
scas
clc
cmp
mov
add
pop
push
(bad)
aad
mov
inc
ins
dec
into
mov
add
mov
add
xchg
adc
pop
push
push
add
arpl
pop
dec
in
pop
fdivr
xor
dec
push
push
adc
mov
into
jmp
push
push
aas
retf
jg
push
push
pop
adc
jg
mov
cmp
mov
pusha
mov
xchg
imul
(bad)
(bad)
(bad)
cmp
and
push
hlt
adc
sbb
imul
cmp
mov
push
jl
inc
mov
adc
jmp
std
mov
dec
push
out
clc
push
cmps
movs
xchg
lock
add
push
dec
aas
or
cld
addr16
ret
call
enter
std
ret
xor
adc
inc
add
inc
inc
jmp
xor
sbb
out
push
adc
push
call
call
cmp
add
out
push
xchg
jmp
jg
outs
enter
jmp
dec
ret
inc
pop
add
xchg
lods
(bad)
pop
jmp
jno
dec
adc
adc
mov
xor
add
ror
lods
sbb
push
pop
dec
je
sti
inc
cdq
push
add
cmp
xlat
pop
adc
inc
push
rcr
push
inc
adc
ret
jg
movs
clc
aaa
push
arpl
imul
sti
lods
nop
mov
mov
and
(bad)
xlat
mov
cli
test
or
sub
jbe
add
push
adc
imul
push
mov
repz
sub
out
fdivr
push
adc
call
mov
out
add
mov
rol
jae
pop
(bad)
(bad)
mov
pop
rol
fstp
jle
out
cmp
mov
jg
or
cmp
push
or
pop
mov
jno
inc
mov
xor
ror
data16
push
dec
push
jp
mov
push
aam
inc
push
or
jno
add
add
adc
mov
adc
mov
xchg
mov
mov
and
jmp
inc
std
mov
clc
pop
aam
add
xor
sti
test
dec
pop
jne
jo
push
dec
jmp
jmp
xor
push
cs
jg
movs
enter
jg
icebp
aad
jl
dec
jecxz
or
ret
xor
add
sar
fisubr
push
mov
bound
repnz
inc
sahf
jns
aaa
inc
fidiv
xor
inc
xchg
aaa
dec
mov
push
jecxz
mov
sub
dec
mov
xchg
jmp
pusha
dec
inc
add
adc
call
aaa
mov
mov
mov
jo
push
stos
fcomp
arpl
jae
movs
jle
dec
inc
out
je
ror
jmp
adc
retf
icebp
or
mov
arpl
out
stc
fdiv
test
les
or
push
push
jle
push
pop
fist
popa
(bad)
push
cld
xchg
out
inc
inc
adc
retf
add
retw
jl
sbb
cmp
nop
mov
xlat
push
mov
jle
outs
sub
pushf
shr
fdivr
and
retf
add
adc
test
push
das
jbe
hlt
pop
push
inc
test
dec
push
repz
and
jg
dec
clc
pop
adc
jg
je
xor
pop
add
sub
mov
das
mov
out
mov
add
fadd
cs
adc
div
rol
nop
push
inc
inc
js
sbb
call
stos
(bad)
out
inc
mov
add
inc
pop
inc
aas
push
inc
mov
sbb
call
sbb
(bad)
mov
dec
loopne
push
ins
clc
xor
fdiv
inc
xor
out
jne
pop
popa
inc
jae
inc
hlt
and
mov
sti
push
jmp
xor
jae
dec
push
addr16
jmp
add
movs
sbb
add
add
adc
mov
std
xor
or
and
jmp
cld
adc
add
add
pop
xchg
in
clc
mov
fcmovb
mov
push
std
inc
sbb
cli
mov
mov
pop
icebp
push
xor
mov
ds
jp
in
jge
xor
outs
fadd
repz
fadd
add
loopne
jmp
pop
mov
imul
inc
and
jo
hlt
jg
push
mov
(bad)
dec
sbb
jg
ret
das
test
adc
pop
and
sbb
call
and
imul
add
or
dec
add
and
shl
or
cmp
add
cmp
int3
mov
aam
sti
pop
std
or
inc
jae
sub
inc
bound
mov
jo
std
cmp
mov
mov
add
(bad)
pop
push
and
div
push
je
mov
jb
pop
out
or
mov
pop
or
aad
push
ds
dec
jecxz
and
or
in
addr16
add
fld
mov
push
leave
mov
call
cmc
(bad)
sub
sub
test
out
or
adc
pop
test
(bad)
je
rcl
je
clc
ficomp
mov
lahf
jg
jae
rol
loop
fsubr
pop
cmp
inc
push
cmps
sti
sub
xlat
dec
jle
adc
mov
mov
inc
inc
(bad)
aad
test
sti
jle
dec
inc
jg
jg
out
inc
mov
jbe
clc
out
and
data16
enter
push
dec
jmp
test
push
retf
clc
out
push
push
or
add
pop
mov
mov
fld
(bad)
sub
data16
push
inc
int3
dec
iret
das
or
adc
pop
mov
mov
iret
push
and
mov
pop
inc
mov
ror
add
cmp
repnz
dec
inc
mov
cld
cli
xor
add
fiadd
(bad)
xor
std
outs
xchg
mov
(bad)
jmp
call
mov
adc
pop
pop
pop
ret
retf
add
and
push
pushf
fcomip
fs
pop
call
mov
inc
mov
xchg
inc
je
call
mov
push
loopne
push
into
fdivr
stc
xor
sub
clc
push
cld
mov
inc
fcomi
pop
mov
xchg
push
(bad)
xchg
out
es
mov
add
(bad)
icebp
cmc
pop
mov
arpl
add
out
fs
and
mov
pop
(bad)
stos
test
std
jmp
jle
dec
sub
jne
add
out
ret
pop
jmp
es
les
inc
pop
popa
gs
out
cmps
es
fs
mov
pop
lods
scas
cli
adc
sub
sbb
add
inc
ins
stc
cmp
mov
pop
repz
push
mov
sti
pop
loop
pusha
push
sbb
(bad)
push
push
push
mov
mov
outs
pop
ficomp
inc
add
xor
mov
gs
test
jb
pop
jg
add
mov
jmp
pop
push
aas
push
jae
inc
xor
push
mov
xor
loope
xlat
cli
shr
dec
add
push
push
and
div
cmps
inc
or
outs
test
mov
cli
add
(bad)
sti
enter
push
nop
adc
push
push
push
dec
mov
xor
fs
daa
call
das
push
test
push
and
xor
mov
add
inc
mov
jmp
push
std
dec
inc
add
inc
sbb
xchg
xchg
or
xor
test
mov
mov
add
pop
out
push
lock
repnz
push
xlat
(bad)
jno
xor
mov
call
or
or
pop
pop
pop
outs
add
sub
fisttp
fdiv
push
ret
loop
pop
loopne
fs
stos
out
add
imul
xchg
loopne
ret
in
out
mov
push
add
mov
xchg
xor
ret
mov
into
(bad)
push
sbb
fimul
cmp
clc
gs
mov
pop
rcl
es
add
mov
and
xchg
fadd
sub
es
jg
mov
adc
mov
xchg
mov
test
push
push
or
add
arpl
mov
jg
inc
in
jmp
rol
(bad)
(bad)
ss
mov
stos
cld
sub
jnp
fild
push
sar
pop
cmp
fwait
or
je
cmp
mov
out
push
(bad)
shr
dec
inc
mov
cmp
xor
daa
mov
cld
out
cmps
inc
cmp
out
std
cmp
idiv
add
xor
inc
mov
aaa
movs
xchg
inc
and
xor
xor
out
xchg
dec
and
push
shl
cli
jno
add
push
adc
test
mov
or
rcr
and
pop
push
std
and
jg
inc
add
push
mov
fs
imul
add
mov
mov
adc
sbb
mov
ret
mov
cmp
sbb
jmp
push
or
mov
jmp
dec
(bad)
jmp
jle
fisub
mov
adc
fsubr
loope
cmps
idiv
add
pusha
out
cmps
inc
ret
scas
test
sub
je
add
dec
sbb
mov
or
pop
lods
das
pop
lock
cmps
pop
das
outs
and
movs
loope
mov
push
inc
cli
outs
inc
push
add
add
outs
dec
test
aad
sub
jb
pop
jmp
mov
imul
xor
imul
div
je
imul
mov
enter
or
jg
xchg
mov
out
aaa
xchg
push
adc
push
arpl
cwde
mov
je
add
push
sbb
ret
inc
mov
lock
adc
(bad)
jmp
adc
jo
(bad)
pop
dec
imul
add
(bad)
mov
in
inc
pop
add
out
add
inc
sar
out
pusha
icebp
into
out
dec
shr
push
mov
les
aad
call
leave
enter
(bad)
mov
mov
(bad)
fistp
in
push
add
xor
mov
(bad)
bound
call
sti
aaa
lods
sbb
xchg
adc
adc
push
jl
int3
mov
imul
add
mov
jg
shl
fs
or
inc
enter
addr16
mov
sbb
push
push
mov
cmps
das
xor
pop
ins
cld
or
mov
cmp
mov
mov
xor
ds
scas
bsf
push
(bad)
aas
dec
pop
or
jae
fsub
es
pop
xchg
push
add
add
call
xor
cld
adc
in
xor
in
push
std
std
outs
rol
pop
sar
pop
jbe
not
fcmovbe
inc
repnz
add
jb
out
mov
sub
ds
jae
test
inc
push
inc
dec
mov
dec
(bad)
jmp
dec
jo
push
(bad)
push
push
inc
dec
xlat
mov
inc
mov
gs
jbe
and
add
push
mov
add
lock
jmp
dec
movs
xchg
xor
push
cli
inc
cli
stos
fist
or
data16
inc
mov
out
inc
or
sbb
inc
pop
std
cld
or
iret
jg
lahf
push
test
mov
out
jecxz
mov
or
add
mov
(bad)
and
push
inc
jo
in
jg
sub
(bad)
pop
jno
dec
pusha
je
scas
push
ret
les
cld
inc
xor
push
push
xchg
fs
mov
jg
pop
popa
sbb
out
mov
add
mov
mov
shl
mov
mov
ficom
shufps
sbb
push
retf
jnp
jmp
rol
ins
movs
(bad)
scas
and
dec
mov
js
pushf
add
mov
pop
mov
mov
mov
jae
out
and
xor
mov
mov
ret
push
psllq
inc
jmp
fnstenv
mov
cli
or
cs
jnp
sti
jmp
arpl
nop
(bad)
pop
(bad)
add
push
push
jb
mov
scas
push
or
dec
mov
(bad)
mov
out
cmp
push
push
push
pushf
fimul
push
sar
dec
dec
inc
cli
sub
or
test
mov
mov
aaa
sub
lock
push
push
dec
mov
ja
adc
inc
icebp
or
or
pop
lock
sbb
pop
adc
xor
jb
loopne
cmp
fild
jnp
(bad)
pop
mov
inc
dec
inc
or
adc
jno
mov
push
xor
cmp
dec
lahf
xchg
js
pop
inc
jae
(bad)
xor
adc
movs
pop
add
push
movs
inc
test
push
xchg
out
add
sti
jmp
(bad)
inc
outs
enter
jg
mov
push
(bad)
das
fild
xchg
cmc
icebp
jge
fisubr
xor
sbb
data16
adc
jg
mov
jmp
dec
pop
mov
out
movs
mov
mov
adc
mov
jmp
fdiv
pop
jg
retf
jg
ret
das
cmp
loop
jmp
mov
xor
xchg
and
push
nop
inc
inc
xor
arpl
test
fdiv
adc
xchg
add
mov
jl
iret
jp
out
jae
xor
mov
sub
pop
aam
in
sub
shl
fsub
mov
xchg
inc
pop
pop
dec
jle
pop
mov
fs
cli
stos
jne
dec
dec
push
test
xor
cmp
mov
pop
ficom
test
scas
in
outs
adc
ror
jl
push
push
sbb
(bad)
in
or
adc
pusha
fbstp
adc
pop
xchg
dec
stos
or
loope
rol
ss
and
ins
out
test
and
pusha
xchg
dec
pop
mov
outs
clc
stos
adc
push
sti
xchg
jmp
jp
outs
xor
aam
xor
pop
pushf
(bad)
pop
mov
addr16
mul
mov
test
dec
and
ror
xchg
and
sub
jmp
fimul
pop
loopne
adc
sti
out
push
push
xor
dec
mov
or
pusha
movs
(bad)
pop
fmul
outs
repnz
add
pop
or
(bad)
push
add
sbb
ret
mov
mov
test
mov
mov
push
arpl
lds
test
adc
(bad)
push
inc
dec
sti
in
pop
add
stos
sbb
sbb
add
(bad)
into
pop
std
cs
(bad)
int3
dec
xor
lds
pop
xor
imul
mov
add
cmp
(bad)
push
cwde
je
(bad)
sti
test
mov
push
inc
xor
jl
xor
outs
rol
test
aad
jg
fcomp
cmps
ret
out
psubb
add
dec
and
push
fcomip
dec
add
sbb
out
jmp
dec
and
jae
xchg
hlt
pop
xchg
mov
mov
xchg
cmp
cli
dec
pusha
add
or
cmps
adc
jl
add
xor
inc
xchg
pop
in
cli
jmp
pop
ins
(bad)
pop
movs
add
push
inc
arpl
pop
icebp
jg
int3
cld
into
movaps
mov
loop
(bad)
mov
or
stos
sub
les
loope
cld
or
fs
dec
mov
push
lock
mov
cli
pop
dec
mov
adc
push
jl
sub
cld
and
pusha
mov
(bad)
dec
pop
push
call
push
xor
mov
mov
xor
es
(bad)
iret
jmp
mov
adc
arpl
outs
pop
fcom
popa
lock
call
out
add
pusha
es
add
add
mov
cli
sbb
es
(bad)
pop
aas
inc
imul
loopne
scas
aam
movs
inc
(bad)
jbe
(bad)
add
rol
ret
in
mov
data16
mov
xor
and
inc
jno
xchg
lods
inc
ins
cli
and
call
pusha
mov
push
call
lods
xchg
pop
inc
cmp
jmp
sti
cmp
test
dec
dec
or
(bad)
cmps
jle
push
bound
xchg
test
mov
add
inc
(bad)
hlt
mov
mov
pop
mov
jb
aam
dec
stc
jecxz
cld
add
stc
dec
dec
xor
adc
in
scas
mov
add
sub
lahf
loope
push
sub
ret
pop
out
sti
add
ja
bound
pop
jno
mov
outs
mov
rol
es
or
test
mov
push
aam
sbb
(bad)
jnp
inc
out
mov
(bad)
out
inc
inc
xchg
push
inc
jne
daa
adc
ds
dec
out
adc
test
fmul
push
pop
mov
bound
(bad)
in
jne
or
xor
ds
add
lods
outs
push
popf
loop
inc
sub
std
sti
(bad)
fcmovnbe
ror
sbb
cmp
add
ret
(bad)
(bad)
movs
and
cli
add
ins
push
das
bound
outs
xor
sar
inc
pusha
ins
fld
push
sub
ret
(bad)
imul
jg
out
(bad)
rcr
test
call
shl
dec
and
pop
dec
cli
jmp
test
dec
mov
adc
verw
add
mov
ret
pop
scas
clc
aaa
call
inc
sbb
push
sbb
add
mov
xor
jmp
or
sub
add
push
push
(bad)
loop
mov
sbb
push
jmp
mov
add
cmp
push
dec
add
loopne
push
xchg
add
test
sub
dec
mov
mul
add
sbb
dec
aas
sub
and
sub
pop
mov
(bad)
imul
add
(bad)
cmp
arpl
mov
adc
add
(bad)
aaa
test
rcr
sbb
repnz
and
xchg
xor
inc
inc
and
fist
mov
cmps
inc
mov
inc
adc
push
fcmovbe
push
xchg
lods
lods
jmp
cli
icebp
fidiv
outs
jg
(bad)
sub
into
or
mov
lock
(bad)
sti
test
pop
pop
test
push
enter
jmp
and
sub
inc
sti
pop
dec
sub
sbb
mul
pop
mov
out
jno
arpl
fsubr
cmp
push
(bad)
pop
les
push
test
loopne
xor
dec
add
out
inc
push
inc
adc
ins
pusha
or
inc
inc
jo
mov
lahf
loope
jbe
pop
aas
jno
cmp
push
push
ss
lahf
rol
mov
dec
repz
mov
sub
std
test
adc
cmc
mov
mov
jmp
out
ret
push
idiv
or
inc
sbb
fadd
sub
pop
cld
pusha
ret
pop
mov
outs
add
lds
adc
inc
std
mov
pop
js
push
mov
pop
push
mov
push
sbb
xchg
push
add
mov
mov
sti
aam
push
push
or
mov
or
pop
jmp
loop
jbe
je
clc
ins
pop
inc
mov
cmp
pop
cwde
push
arpl
inc
push
inc
je
push
call
and
call
mov
inc
retf
rcl
sub
shl
sbb
sbb
add
mov
aaa
push
xor
and
repnz
retf
inc
(bad)
nop
cmc
jl
and
iret
retf
cmps
(bad)
jg
add
aam
and
xchg
mov
test
lds
loopne
mov
jmp
ins
mov
(bad)
rcl
jae
scas
add
push
cmp
xlat
jno
mov
xor
add
jg
pop
pop
and
jg
add
xchg
scas
push
lock
pop
fs
inc
push
rcr
inc
jmp
loopne
jle
fidivr
ret
pushf
ins
retf
je
adc
stos
nop
ins
cmp
call
dec
out
rol
arpl
je
dec
jg
(bad)
mov
pop
and
dec
cmp
or
add
clc
adc
add
cld
out
mov
sub
inc
and
inc
jmp
scas
pop
ss
pop
adc
icebp
loop
cli
pop
movs
add
(bad)
inc
xchg
addr16
pop
or
and
sbb
pop
or
cmp
arpl
pop
add
inc
mov
mov
inc
ins
stos
and
ret
mov
cli
leave
inc
aas
ret
ret
adc
mov
xchg
inc
rcl
fisub
add
add
push
add
js
(bad)
or
pop
add
add
sub
mov
push
push
es
fcomp
scas
inc
or
add
test
bound
inc
xchg
push
add
inc
cmp
arpl
inc
scas
cmp
syscall
mov
push
(bad)
maskmovq
mov
push
pop
movs
jg
ja
rcl
icebp
test
push
jmp
jl
(bad)
sub
pop
ret
dec
pop
cmp
pop
in
jp
adc
mov
jae
jbe
mov
test
retf
mov
lods
mov
jp
adc
sti
or
mov
sbb
pusha
ret
imul
das
cmp
fisub
or
add
movs
push
mov
cmp
cld
cli
push
add
cmp
push
jmp
add
leave
add
mov
mov
inc
push
lahf
icebp
aaa
sbb
ret
xlat
mov
mov
xchg
sbb
js
jmp
movs
call
xor
inc
fcom
jmp
out
les
jmp
cmp
cmps
inc
add
sub
js
add
adc
or
add
xchg
fidivr
cmp
cmc
pusha
push
sar
inc
add
add
inc
iret
sbb
(bad)
inc
es
inc
nop
add
push
sbb
jle
push
inc
ja
jle
xchg
add
cmp
test
test
add
pop
cmp
fadd
add
mul
lahf
(bad)
inc
jp
or
out
mov
adc
arpl
cmovns
sub
add
push
imul
mov
pop
sub
ins
icebp
cld
inc
jmp
(bad)
mov
lds
mov
jg
jno
idiv
pop
xor
in
(bad)
mov
mov
pop
popa
jmp
hlt
sub
inc
sar
xor
call
je
mov
inc
inc
jae
fs
dec
inc
lock
mov
test
pop
sub
call
push
les
push
cli
add
aas
jb
out
add
push
and
pop
jge
ins
std
pop
mov
inc
call
popa
jb
add
test
out
inc
not
jg
and
fmul
mov
cld
or
std
imul
xchg
jmp
(bad)
mov
mov
xchg
ret
out
push
pop
push
pop
ret
mov
pop
or
lock
inc
call
pop
sahf
das
sti
xlat
cmps
add
(bad)
iret
and
shr
cmps
dec
push
popa
sub
das
sbb
loopne
das
fs
add
mov
clc
inc
or
inc
add
call
dec
shr
ins
aas
sub
push
cmps
test
inc
outs
aad
call
push
inc
lahf
push
ja
sbb
adc
inc
inc
xor
inc
adc
sbb
or
xchg
and
or
outs
fisttp
call
dec
(bad)
rcr
out
(bad)
call
xor
xor
mov
shl
cmp
inc
mov
mov
cmp
je
add
out
sub
retf
push
jmp
pop
jmp
dec
pop
inc
repz
mov
inc
mov
fwait
add
pop
mov
push
int
jbe
sub
jmp
pop
gs
cmp
and
fdivr
retf
sub
push
aaa
xor
mov
cmp
mov
cld
xchg
mov
sub
jle
jno
outs
push
and
push
push
dec
push
add
push
ficom
mov
ret
mov
push
std
xchg
inc
out
les
aaa
das
dec
push
cs
or
sbb
shl
sub
push
call
add
pop
fimul
cmp
fmul
call
test
mov
xor
mov
xor
call
in
add
sbb
sbb
and
mov
add
sbb
jno
adc
xor
fnstsw
xor
loope
cmp
das
arpl
cld
push
enter
jg
out
inc
(bad)
and
bound
fdivr
ins
pop
sub
mov
pop
fs
je
repnz
push
cmp
xor
fdivr
jb
out
sti
(bad)
lahf
pop
add
add
jo
cwde
pop
sub
rol
je
jg
rol
test
push
push
push
adc
mov
pop
pusha
scas
xchg
js
cld
mov
sub
aad
pop
dec
test
mov
gs
jmp
lahf
mov
mov
cmps
das
pusha
pop
gs
out
push
scas
mov
cmp
pop
jg
mov
cmp
mov
mov
je
lods
inc
es
or
jmp
cwde
in
push
mov
jg
call
mov
(bad)
lahf
push
sar
add
shl
inc
mov
inc
hlt
mov
sbb
test
fs
jae
sbb
mov
out
call
or
xchg
movs
xchg
xor
ror
ret
dec
test
sub
scas
shl
mov
call
call
test
inc
shr
mov
int3
push
jae
mov
sar
rol
push
outs
dec
imul
jne
js
push
push
xor
mov
imul
pop
xor
ret
call
lods
idiv
add
cwde
aam
pop
push
imul
and
leave
cmc
pop
jno
(bad)
aas
or
call
inc
pop
aad
sti
imul
gs
cmps
pop
js
adc
pop
inc
aam
fs
push
sahf
adc
popa
sbb
pusha
sub
outs
lds
cmp
cli
mov
push
mov
mov
push
std
sub
pusha
outs
pop
pushf
cmp
lock
sti
addr16
sub
out
push
ret
pop
xchg
or
mov
dec
pop
push
push
add
dec
add
je
out
call
mov
jmp
jae
dec
add
pop
and
ror
pshufw
jge
ror
mov
(bad)
jmp
add
jl
push
(bad)
push
out
arpl
retf
jmp
xor
add
mov
cld
mov
mov
mul
mov
push
test
(bad)
jg
shl
in
imul
arpl
out
inc
mov
inc
call
push
or
ins
sbb
inc
mov
mov
xchg
xlat
test
das
pop
mov
adc
imul
xor
or
push
shl
mov
inc
mov
jg
mov
aas
xor
aas
cmp
push
sub
loope
or
cmp
pop
jbe
pop
(bad)
js
in
xchg
test
imul
ror
pop
or
inc
(bad)
adc
in
dec
out
mov
add
push
add
je
mov
or
mov
loope
sub
inc
mov
dec
push
cmp
xchg
sar
inc
fs
aas
jecxz
push
(bad)
mov
shl
xchg
ins
rol
ret
adc
mov
fidivr
mov
cmps
pop
add
pop
or
mov
sbb
test
out
mov
mov
pop
push
mov
sbb
popf
jae
inc
(bad)
or
dec
out
push
(bad)
cld
add
adc
add
ins
loope
leave
sub
jbe
adc
or
(bad)
xor
push
xchg
bound
and
push
or
mov
jae
add
mov
imul
addr16
or
mov
mov
loop
out
dec
lds
fdiv
pop
or
cmp
inc
jae
inc
push
test
idiv
add
scas
or
je
pcmpgtw
in
inc
ss
xchg
pop
ret
imul
pusha
(bad)
dec
pop
jp
sub
retf
inc
cli
aas
test
pop
jp
mov
loope
push
pusha
jo
push
push
test
pop
test
mov
repnz
dec
pop
cmc
inc
add
leave
push
sti
jae
sub
mov
mov
mov
mov
jnp
cmpps
call
xchg
push
test
das
cwde
jg
fwait
mov
cli
test
push
std
push
mov
pop
add
test
mov
or
out
dec
(bad)
icebp
fild
push
mov
ins
mov
scas
sar
stc
sub
inc
inc
out
pop
rol
adc
in
fiadd
cmp
pop
mov
cmps
xlat
add
mov
aas
push
pop
arpl
inc
jg
(bad)
inc
int3
(bad)
movs
cli
jmp
cmc
aad
out
(bad)
cld
push
mov
push
retfw
sbb
scas
jb
ss
push
push
lods
sub
pop
fs
jmp
jecxz
adc
or
or
jge
inc
lea
div
mov
ds
mov
cmc
push
(bad)
outs
ja
out
call
out
xor
push
inc
add
or
jmp
xor
inc
mov
(bad)
jae
nop
aaa
inc
mov
inc
sbb
or
sub
push
lahf
clc
ret
or
outs
retf
(bad)
and
cmp
and
imul
or
cmc
out
je
scas
clc
data16
xchg
jp
scas
shr
push
dec
jae
test
cld
xchg
cli
jmp
pop
mov
pusha
pop
add
mov
xor
ret
jno
xchg
bound
cmc
ja
mov
mov
retf
stos
aam
aas
adc
sbb
adc
xchg
sub
mov
mov
mov
dec
inc
dec
pop
outs
xor
push
mov
pop
pop
call
gs
ins
ror
or
mov
sub
pop
or
xadd
xchg
jle
mov
repz
and
mov
add
std
inc
mov
into
adc
xor
mov
sub
fild
aaa
inc
xor
xlat
pop
add
add
jmp
mov
mov
out
movs
jnp
fcomp
out
cmp
(bad)
pop
dec
loopne
add
retf
push
std
add
push
jbe
dec
mov
shl
push
xchg
pop
cli
or
and
add
in
or
mov
xchg
push
loope
mov
inc
retf
sti
stc
adc
xor
(bad)
xor
mov
inc
test
add
fmul
inc
scas
add
and
pop
push
ror
in
data16
pop
pop
and
add
pop
push
add
cli
mov
mov
and
add
push
dec
mov
mov
outs
add
cld
mov
out
xor
or
inc
aas
inc
inc
adc
xchg
cmp
sub
adc
xlat
pop
sub
xchg
inc
jg
add
lds
jno
dec
(bad)
cmp
inc
sti
mov
xor
out
out
dec
aas
out
(bad)
stos
adc
mov
stos
pop
das
jl
xchg
ss
and
sbb
push
inc
adc
add
rcl
lahf
and
jmp
push
add
sbb
mov
add
add
call
xor
rcr
loope
ret
xor
cmp
mov
js
shr
jmp
add
pop
test
das
je
mov
(bad)
in
data16
adc
and
jmp
xchg
jno
dec
jo
dec
sub
shl
aas
std
fucomip
mov
add
(bad)
sub
dec
loopne
ss
mov
(bad)
sti
mov
or
in
mov
mov
lea
cmp
psrlw
add
mov
adc
push
(bad)
shl
add
add
xchg
pop
(bad)
arpl
fisub
cwde
dec
and
or
lods
or
imul
and
xchg
pop
jge
dec
rol
and
dec
in
mov
xor
inc
mov
jmp
push
jecxz
pop
ja
mov
push
and
and
push
icebp
aas
ins
pop
ret
add
sbb
push
sbb
ss
pop
lods
and
jmp
inc
xor
out
mov
xchg
sbb
cmovs
loop
mov
stos
mov
lahf
(bad)
mov
fist
dec
jmp
xchg
divps
dec
pop
es
or
add
aam
mov
inc
sbb
(bad)
ret
fsub
push
inc
or
jae
or
push
fcmovnb
inc
rcr
stos
(bad)
pop
mov
adc
mov
add
out
data16
mov
dec
push
das
mov
fdiv
push
pop
inc
mov
mov
dec
cli
mov
jmp
ret
inc
inc
push
add
mov
inc
add
jno
arpl
inc
lds
pop
add
inc
(bad)
pop
inc
mov
repz
(bad)
mov
inc
adc
(bad)
jl
add
fwait
dec
pop
mov
sahf
push
sub
pop
ret
fsubr
test
push
out
jb
xchg
lds
xchg
jg
jo
add
(bad)
mov
js
scas
call
and
or
push
pop
popa
mov
into
or
imul
inc
das
add
mul
adc
sahf
sbb
lea
mov
mov
push
retf
xchg
out
push
push
mov
and
add
push
and
inc
loop
mov
mov
dec
add
bound
(bad)
jmp
jmp
pop
stos
inc
rcr
inc
jae
fbstp
adc
mov
or
add
adc
push
mov
jo
cld
inc
cld
repz
es
fisttp
jge
je
adc
sar
aas
pop
mov
dec
sti
(bad)
xchg
mov
sti
ret
repnz
mov
cld
and
mov
push
iret
jle
out
and
sbb
aas
xchg
inc
lods
inc
cs
cld
xchg
repnz
xor
pop
sbb
sti
inc
pusha
inc
pop
mov
xor
mov
pop
add
inc
add
mov
in
adc
mov
(bad)
repz
push
mov
add
dec
shr
jmp
fistp
jg
pusha
out
jb
sbb
push
add
add
mov
dec
retf
lock
dec
jg
(bad)
jb
aas
fisubr
pop
inc
adc
dec
dec
or
loopne
push
cmp
dec
add
bound
mov
mov
fwait
test
test
jle
mov
jecxz
in
cwde
icebp
aad
push
inc
push
and
xor
jo
ror
fcmovb
pop
or
jg
push
icebp
pop
fld
imul
in
(bad)
fbstp
sub
es
push
add
idiv
jl
mov
mov
pop
scas
mov
xchg
aas
jb
enter
inc
pop
mov
clc
stos
ret
cld
mov
dec
jge
mov
dec
push
cmp
mov
jg
jnp
out
mov
sub
or
jmp
pusha
xchg
push
jbe
add
pusha
call
outs
mov
ds
call
je
add
and
adc
push
aad
mov
(bad)
add
push
imul
mov
add
adc
cwde
pop
loopne
or
mov
daa
xchg
(bad)
or
sub
fnsave
mov
jae
je
add
xlat
pop
pusha
neg
lods
mov
and
and
add
scas
and
fcmovu
jno
mov
gs
or
out
sar
mov
sti
add
pop
sub
out
push
sub
ja
inc
bound
arpl
std
mov
pop
push
add
xchg
and
data16
cmp
jmp
and
sub
pop
ss
push
jg
pop
fbstp
push
dec
sbb
jmp
loope
jo
xchg
xchg
mov
(bad)
adc
ss
in
push
adc
pop
sbb
mov
cmp
add
push
aad
addr16
std
(bad)
cmp
add
hlt
add
dec
mov
or
in
les
jle
pop
push
movs
(bad)
stos
sub
xchg
mov
pop
cdq
(bad)
stos
and
je
mov
inc
dec
(bad)
and
cmps
cmp
jae
push
mov
add
ins
(bad)
fs
aam
in
bound
mov
(bad)
or
jmp
test
inc
inc
lods
jecxz
sub
pop
jecxz
aad
and
push
xor
lock
mov
call
cld
inc
aaa
(bad)
jp
xchg
xchg
nop
inc
jae
retf
cmps
sub
push
pop
sahf
loop
dec
pop
mov
pop
repz
pop
fiadd
push
adc
jbe
xor
inc
(bad)
lahf
xor
mov
out
addr16
push
loope
pop
jae
(bad)
(bad)
dec
call
push
cmp
lds
addr16
mov
push
rcl
movntq
push
adc
or
ds
clc
aaa
shl
and
and
push
push
out
dec
dec
loopne
inc
out
cmp
std
lea
mul
and
mov
jmp
and
add
mov
push
or
inc
mov
cmps
fstp
pop
or
and
jp
jae
arpl
inc
ret
(bad)
sub
add
fdivrp
mov
xor
push
mov
std
add
mov
sti
mov
xchg
or
mov
iret
pop
fild
sub
cmp
inc
xor
sub
or
push
and
sbb
cmp
loop
std
jbe
pop
ret
push
mov
mov
pop
push
aaa
ret
imul
(bad)
or
mov
das
jge
and
mov
loop
jg
inc
jae
out
push
dec
sub
push
jg
xlat
mov
inc
(bad)
push
(bad)
inc
lds
and
sbb
loop
adc
mov
mov
xchg
arpl
clc
hlt
inc
add
add
xchg
mov
jg
call
xor
movs
pop
adc
inc
shl
and
ins
inc
xlat
mov
add
cmp
push
cmp
xor
clc
out
sbb
cmp
jmp
mov
dec
(bad)
out
pop
push
mov
(bad)
xchg
add
xor
push
(bad)
and
outs
in
ja
stc
add
arpl
imul
mov
jmp
ret
sbb
and
addr16
mov
push
adc
xor
pop
mov
mov
mov
in
(bad)
jg
xor
inc
inc
mov
add
addr16
xchg
fld
dec
in
add
jge
lock
cld
movs
inc
aaa
nop
hlt
scas
push
push
or
fiadd
fidiv
adc
ret
dec
sub
out
mov
mov
mov
mov
pop
or
push
jno
push
(bad)
fistp
(bad)
or
mov
fiadd
mov
push
cdq
or
adc
prefetchnta
pop
(bad)
xchg
inc
mov
mov
xchg
or
pop
push
sub
pop
movs
sub
in
cld
(bad)
dec
and
dec
dec
mov
push
or
or
fimul
pop
cli
adc
ret
(bad)
loope
push
out
loopne
call
ret
out
aas
sar
sub
pop
pop
loopne
push
mov
or
pop
and
outs
xor
add
leave
inc
cmp
(bad)
ja
outs
push
mov
cmp
push
push
mov
bound
adc
mov
jle
sahf
inc
out
shl
pop
dec
mov
pop
js
jmp
sti
inc
sbb
sbb
mov
adc
aas
mov
cmps
fwait
inc
jae
xchg
pop
push
ss
sbb
adc
adc
dec
fiadd
mov
lods
pusha
rcl
push
xor
mov
das
fadd
push
pop
push
(bad)
into
retf
jg
push
inc
jge
jl
fiadd
jmp
push
(bad)
cli
mov
xor
sbb
push
adc
fs
and
push
add
push
clc
das
out
inc
and
add
mov
adc
pop
cli
jg
mov
or
or
pop
inc
push
cmp
push
dec
mov
and
inc
adc
pop
pusha
ins
push
jmp
enter
das
push
call
mov
inc
std
mov
jb
push
pop
aas
jg
mov
xchg
push
xor
push
das
std
arpl
xchg
aas
push
aas
cmp
loopne
gs
ret
gs
mov
dec
push
inc
push
adc
cmc
inc
das
mov
or
sub
jo
test
pop
and
add
jge
pop
ss
mov
ficom
sar
mov
repz
les
std
es
test
jg
jle
mov
inc
jb
or
cmp
mov
adc
add
or
out
(bad)
nop
(bad)
push
mov
mov
movs
sbb
ins
add
cmc
push
jb
mov
repz
out
fimul
ds
jae
add
push
jno
inc
dec
ret
inc
add
add
pop
or
shl
or
(bad)
push
cmp
inc
jg
test
inc
jno
and
outs
inc
test
push
inc
mov
mov
pop
add
call
scas
xchg
mov
imul
jge
fsubr
jg
pop
mov
std
outs
sti
add
or
sub
xchg
pop
dec
jecxz
jmp
sub
xchg
add
test
pop
sti
gs
sbb
sbb
test
pop
ror
pop
ss
test
mov
adc
inc
lock
add
arpl
mov
(bad)
mov
test
call
and
scas
inc
stc
jb
push
fsubp
mov
sahf
sahf
or
push
add
sub
jae
xor
inc
sub
pop
jmp
xor
sar
adc
das
xor
test
imul
xchg
mov
gs
dec
add
sub
(bad)
mov
or
sbb
pop
(bad)
mov
mov
fcom
mov
xchg
(bad)
stc
fdivr
enter
inc
mov
pop
je
jl
xchg
mov
in
ins
jg
or
test
jnp
push
cmc
rcl
add
or
ss
movs
icebp
or
sub
mov
and
jge
add
ror
lods
add
scas
repnz
(bad)
ja
inc
(bad)
enter
movs
punpckldq
jmp
xchg
cld
vmovsd
mov
cmp
clc
stos
mov
test
outs
inc
ret
mov
inc
out
dec
cli
mov
push
push
lds
stos
dec
pop
daa
pop
mov
or
or
add
in
hlt
in
pop
inc
cs
fisttp
int
fld
movs
outs
rcl
cmps
sti
push
mov
xor
out
inc
jge
add
mov
daa
js
mov
cld
add
dec
cmp
shl
and
pusha
inc
add
inc
outs
inc
icebp
pop
(bad)
push
mov
(bad)
push
adc
rol
(bad)
mov
inc
test
fwait
xor
inc
add
call
sbb
test
inc
pop
(bad)
addr16
mov
sbb
add
add
cdq
in
add
mov
fwait
(bad)
sbb
mov
shufps
or
mov
pop
hlt
sbb
mov
xchg
movs
pusha
mov
mov
pop
sbb
pop
push
cmp
add
pushf
call
dec
arpl
pusha
push
ret
jg
xchg
mov
(bad)
jmp
lea
xor
(bad)
mov
test
inc
push
(bad)
cli
cli
aas
pop
xor
pop
cmp
jmp
sub
sbb
arpl
jp
pop
(bad)
hlt
pop
cs
jmp
inc
fucomip
push
cs
adc
pop
push
cmp
adc
fiadd
push
and
ret
es
popa
jl
pop
add
gs
xchg
mov
inc
pop
jo
push
pop
cmp
inc
push
inc
jmp
or
inc
add
mov
je
pop
sbb
popf
data16
mov
mov
inc
push
jne
inc
sbb
repz
inc
xor
sar
add
mov
push
fs
inc
stos
mov
jecxz
or
mov
adc
clc
(bad)
mov
call
push
jmp
add
xlat
outs
push
push
aam
loopne
ret
sub
adc
or
inc
dec
or
mov
push
(bad)
js
movs
repz
lock
clc
jae
cmp
jbe
and
jecxz
inc
out
mov
dec
test
das
xchg
jb
inc
mov
pop
aam
xor
aaa
mov
pop
cmp
push
adc
mov
dec
lock
(bad)
pop
out
inc
mov
adc
dec
adc
int
mov
add
mov
add
fisub
ret
jge
or
xsha1
cmps
mov
paddw
dec
jl
bound
in
adc
adc
std
push
mov
mov
pop
inc
loopne
jl
ins
mov
jb
jbe
push
(bad)
loop
xchg
(bad)
mov
inc
imul
mov
add
(bad)
jg
adc
enter
dec
push
sbb
xor
imul
mov
jg
mov
pop
stos
push
shl
sub
aad
dec
mov
dec
sti
mov
inc
inc
push
push
loopne
inc
inc
cmps
inc
add
add
pop
cs
mov
fs
pop
mov
push
inc
test
ret
fild
(bad)
add
mov
aas
mov
xor
lods
jb
cwde
pop
jb
or
sub
mov
add
sar
mov
mov
or
sub
addps
pop
xor
imul
aas
jg
inc
dec
std
inc
sar
push
mov
ins
add
repz
loopne
push
ret
lock
xor
push
xchg
pop
inc
mov
jno
cs
lahf
mov
sub
lock
or
mov
xor
xchg
call
aas
int3
pop
sti
or
stos
test
pop
mov
inc
(bad)
or
out
cmp
push
push
jmp
lock
sub
pop
sti
bound
mov
jmp
mov
sub
repnz
out
popf
rcr
lock
call
add
aas
pop
clc
dec
sub
mov
das
fimul
inc
sbb
dec
or
add
fisttp
add
jae
pop
dec
aas
xor
sub
imul
hlt
(bad)
inc
aas
add
pop
mov
sbb
add
adc
pop
inc
dec
ja
jo
xchg
push
pop
pop
call
push
mov
xor
arpl
or
jg
jmp
jp
xchg
pop
jb
xor
je
aas
dec
mov
inc
push
add
dec
aad
out
inc
sti
jnp
mov
or
ss
pop
mov
or
test
out
jno
dec
cdq
xchg
shl
ja
inc
mov
adc
dec
scas
inc
jp
test
inc
adc
mov
mov
mov
sub
mov
pop
ja
add
jbe
dec
dec
sub
cmp
inc
pop
and
jmp
or
mov
add
xchg
sub
cmps
push
and
ds
add
jae
bound
or
mov
mov
xchg
stos
mov
inc
dec
pop
jl
cwde
and
pop
cli
test
pop
jg
mov
mov
inc
and
cwde
inc
loop
pop
sub
mov
jae
ret
sbb
push
in
push
out
mov
mov
xchg
ja
sbb
call
xchg
pop
push
out
(bad)
mov
push
add
jg
jmp
jno
rol
fisubr
sbb
pop
push
push
jg
test
mov
mov
push
mov
mov
js
jo
or
dec
test
das
clc
inc
xor
xlat
sbb
out
push
mov
mov
mov
dec
jle
inc
cmp
lds
mov
inc
mov
add
mov
gs
sub
(bad)
or
cmp
jo
jno
mov
mov
xor
pop
sub
jae
mov
je
test
xor
rcl
arpl
pop
add
sub
jmp
out
hlt
js
push
popa
sti
jg
sbb
iret
(bad)
aas
outs
jmp
sti
(bad)
ret
xor
xchg
in
mov
dec
or
inc
ret
fst
jbe
xor
jnp
test
push
clc
or
pop
xlat
leave
or
(bad)
mov
xlat
ret
inc
aas
inc
jg
push
mov
mov
enter
inc
je
fcomp
push
lods
jns
pop
pop
inc
push
push
or
dec
push
out
test
outs
add
ja
pop
jb
call
div
aas
fs
mov
push
sbb
(bad)
call
arpl
pop
clc
retf
or
iret
add
out
adc
jle
test
je
push
sti
push
cld
scas
xor
push
jge
inc
inc
cmp
mov
ror
out
mov
add
dec
push
js
(bad)
add
inc
sbb
xchg
loope
sub
int
aaa
cli
add
add
cmc
xchg
dec
cli
aas
out
add
dec
aas
ins
ins
fyl2x
sbb
sub
gs
add
push
(bad)
fdiv
push
jmp
je
test
or
mov
xchg
(bad)
mov
call
dec
ret
fdiv
cmp
ret
push
(bad)
iret
je
sar
jo
out
add
aas
dec
imul
push
lds
add
std
movs
test
shr
fs
xchg
inc
jg
push
push
dec
sti
sar
in
mov
mov
fdivr
push
ret
ins
cmps
mov
mov
add
cmp
mov
mov
pop
and
and
mov
push
inc
jle
push
jl
xor
inc
jnp
add
loopne
aas
(bad)
mov
mov
pusha
jg
rcr
out
or
pop
sbb
fcomip
add
xchg
mov
std
mov
dec
xor
mov
mov
and
loopne
sub
mov
arpl
pop
adc
pop
push
pop
and
jae
aaa
add
std
outs
cld
out
fs
mov
add
cmp
cli
cmp
mov
inc
ret
jg
push
or
out
in
pop
or
add
test
(bad)
and
cmp
mov
jp
(bad)
cli
sti
inc
cmps
imul
mov
add
pop
mov
xor
clc
mov
(bad)
push
cmp
ret
inc
inc
pop
sahf
jg
aas
stos
lods
out
push
mov
pop
test
aas
outs
mov
call
sub
stos
mov
out
mov
dec
dec
push
fld
out
aad
pop
lahf
lock
jg
push
aad
mov
lods
inc
(bad)
mov
inc
push
dec
clc
mov
or
pop
mov
and
push
sub
push
add
xor
xor
std
call
mov
inc
add
fld
xor
pop
cmc
inc
retf
mov
push
sub
pusha
clts
xlat
fs
repz
dec
sub
and
jmp
mov
pop
mov
adc
out
and
and
mov
lds
sbb
ret
add
(bad)
ja
aaa
or
fimul
jnp
inc
xchg
call
mov
pop
pop
dec
ret
mov
dec
mov
jmp
sti
mov
or
(bad)
mov
sbb
sar
pop
mov
jmp
or
push
mov
and
scas
(bad)
fldcw
call
or
daa
std
mov
(bad)
das
mov
add
inc
ror
pop
sub
ins
pusha
push
rcr
(bad)
sbb
xchg
pop
inc
inc
pop
aas
(bad)
or
cmc
jmp
mov
mov
mov
push
or
mov
push
and
add
xchg
rcl
inc
dec
scas
xor
stos
loop
loope
add
push
inc
imul
add
pop
cmp
jbe
sbb
mov
jmp
jo
xchg
add
(bad)
fwait
or
jae
push
clc
sbb
or
outs
add
jb
pusha
cmp
sti
shl
pusha
mov
push
sbb
inc
pop
cmp
stc
pop
rcl
sbb
jg
jo
sar
loop
arpl
fdivr
add
lahf
push
rol
cmp
xchg
xor
enter
sub
test
add
mov
or
inc
mov
scas
pop
icebp
sti
out
lds
pop
mov
or
out
pop
rcl
pop
and
or
jbe
clc
in
pop
pop
call
mov
and
add
add
add
jo
lahf
cli
lods
dec
push
call
or
cmp
lds
ficomp
lahf
popa
pop
aaa
cld
fild
pop
cmp
inc
dec
dec
cli
je
cmp
or
jle
push
neg
pop
adc
and
dec
inc
jmp
pop
or
adc
arpl
ret
jecxz
test
adc
mov
xor
mov
push
push
push
xor
mov
outs
jge
add
inc
inc
ds
dec
sbb
push
inc
test
mov
inc
inc
arpl
jmp
(bad)
push
lock
imul
and
ret
pop
mov
add
or
retf
pop
into
mov
pop
or
jge
or
or
inc
mov
bound
dec
xlat
mov
ret
(bad)
xor
push
ret
(bad)
push
rol
aas
push
and
xchg
ja
in
out
and
mov
outs
aas
ret
fdivr
cmps
dec
cmp
mov
mov
mov
adc
mov
push
inc
bndstx
out
dec
adc
pop
enter
ds
fdivp
(bad)
div
xchg
inc
xor
cs
add
fdivr
mov
aaa
(bad)
inc
jg
loop
inc
out
mov
loop
dec
push
or
sbb
cmp
mov
xor
test
mov
push
sahf
mov
sti
add
ss
bound
in
fist
mov
xor
adc
rcl
jecxz
fs
out
sub
pop
jecxz
inc
scas
adc
or
(bad)
out
and
cmp
cs
add
push
inc
add
mul
pop
and
lods
cmps
enter
dec
ficom
jmp
test
cli
fidivr
(bad)
das
daa
int3
rcr
call
xor
test
push
adc
sbb
mov
dec
out
or
(bad)
mov
pop
mov
push
pushf
add
repz
out
repnz
inc
sub
dec
or
xchg
push
(bad)
fwait
add
xor
push
inc
xchg
pop
and
or
adc
cwde
or
push
cmp
call
call
jmp
add
loop
mov
mov
outs
neg
lods
mov
add
imul
xor
ins
xor
xor
xor
push
iret
add
out
cmp
or
aas
inc
inc
dec
cmps
in
mov
movs
shr
retf
dec
(bad)
jmp
cli
push
push
sub
add
or
enter
add
push
outs
add
pop
pushf
ret
adc
fnsave
push
das
push
mov
sbb
dec
je
jae
outs
outs
fsub
adc
test
cmp
jg
or
sub
aas
jno
jg
xchg
inc
into
aas
xchg
ret
jo
xchg
push
jae
out
mov
add
jo
outs
into
std
push
pop
aas
stos
repnz
ret
mov
and
pop
sbb
dec
inc
mov
cli
inc
loope
addr16
pop
cmp
pop
popw
adc
add
mov
pop
jne
pop
push
inc
mov
pop
jmp
and
cmp
clc
mov
nop
aas
mov
sub
push
cs
adc
ret
adc
inc
pop
out
cmp
push
add
mov
inc
fdiv
ja
clc
mov
inc
bound
shl
sub
arpl
or
pop
inc
dec
mov
xor
jbe
fisttp
(bad)
sti
sub
pop
shl
lods
and
adc
es
ficomp
push
ins
push
add
stos
mov
add
push
je
push
addr16
or
(bad)
repnz
add
adc
daa
add
test
test
mov
imul
nop
push
stos
push
ret
fild
dec
mov
adc
inc
inc
sti
fstp
in
mov
shr
add
mov
call
lods
ja
push
cli
aam
jl
sahf
add
outs
cmp
arpl
cs
cmc
imul
clc
nop
mov
scas
add
inc
xor
loopne
dec
aas
ret
aas
inc
cld
adc
cli
aaa
stos
xor
xor
jle
ins
es
jecxz
clc
gs
mov
mov
fisttp
dec
and
jne
cmps
inc
retf
xor
call
adc
lock
pop
je
retf
xchg
xchg
mov
test
mov
imul
pusha
sbb
xchg
sbb
clc
pop
push
mov
mov
dec
and
xor
push
fwait
sbb
(bad)
mov
out
push
jae
jae
add
push
or
repz
stos
cmp
inc
aas
cwde
push
ror
cmp
std
nop
mul
inc
aam
add
xor
jle
pop
inc
cmp
loopne
jae
dec
mov
sbb
movs
test
mov
js
push
or
ja
dec
add
clc
push
je
ja
aaa
sbb
mov
(bad)
(bad)
mov
lahf
inc
(bad)
repnz
loope
(bad)
call
mov
pop
xor
out
ret
out
jmp
outs
mov
dec
fldenv
mov
mov
xchg
mov
mov
sbb
adc
imul
sub
adc
cpuid
(bad)
hlt
xchg
out
mov
repz
adc
aad
pop
push
fisttp
add
je
cld
outs
stos
jmp
xor
cmp
inc
dec
push
sub
das
xchg
mov
add
mov
mov
fwait
add
lock
add
call
mov
sbb
sti
fidivr
pop
and
sub
push
shl
sbb
ja
cwde
ss
loopne
adc
mov
jp
dec
sub
mov
dec
ins
std
inc
outs
pop
ins
std
fistp
ins
dec
pop
pop
(bad)
(bad)
std
inc
fild
xchg
inc
mov
bound
js
sub
fbstp
pop
pop
imul
adc
cmp
jle
pop
test
or
(bad)
pop
mov
adc
(bad)
mov
js
test
call
ins
xor
repnz
xlat
jo
and
cmp
fsubrp
push
into
mov
mov
push
(bad)
adc
ret
or
in
inc
jmp
or
add
fild
fdivr
repz
mov
jbe
rol
icebp
mov
inc
or
retf
shr
ret
call
push
push
inc
dec
sbb
dec
jne
add
sbb
push
mov
cmps
cld
sar
(bad)
(bad)
jg
in
mov
inc
je
cmc
pop
xor
aas
fnstsw
inc
sar
lds
push
push
and
cld
add
jnp
mov
jbe
ror
push
jg
pop
cli
add
dec
mov
test
inc
jg
(bad)
mov
add
jg
popa
push
push
ret
in
lock
add
cmc
cmps
pop
sbb
imul
xchg
or
xor
inc
rcr
es
fsubr
inc
pop
or
out
mov
mov
nop
shl
sub
bswap
jb
push
or
jle
push
inc
adc
push
xor
stc
lock
sti
div
cli
sub
dec
int
in
push
(bad)
ja
dec
iret
(bad)
call
inc
dec
mov
out
mov
pop
js
jae
mov
pop
and
mov
cld
test
retf
(bad)
fs
aas
cmp
ins
push
das
test
add
mov
mov
add
mov
xor
sub
jno
movlps
push
jo
loop
sub
xchg
pusha
test
pop
mov
out
sub
dec
add
pushf
mov
mov
add
and
outs
js
je
adc
or
std
or
jg
aad
pop
iret
xor
mov
idiv
pop
jno
inc
jl
ss
add
lea
push
push
jg
das
fsub
push
pop
mov
inc
push
sbb
or
dec
lahf
addr16
ror
or
bound
jb
(bad)
sti
push
dec
or
sub
(bad)
fisttp
lock
add
fs
fs
out
cli
xchg
add
stos
cld
push
test
test
mov
ins
pop
dec
inc
in
es
inc
out
add
jmp
cmp
add
popa
mov
add
add
add
adc
call
outs
mov
push
mov
xor
into
out
xor
sub
mov
jmp
mov
mov
(bad)
pop
mov
inc
icebp
or
mov
lds
invd
inc
mov
test
test
out
add
mov
push
xor
push
or
(bad)
(bad)
mov
shl
pop
cmovg
push
inc
dec
add
mov
push
je
cs
icebp
inc
pusha
out
les
inc
add
fs
lahf
dec
fdiv
es
inc
(bad)
loop
(bad)
mov
inc
pop
cmp
sbb
cld
sti
or
(bad)
ja
cwde
mov
adc
pop
xor
inc
pop
mov
inc
xchg
sbb
outs
inc
xor
(bad)
jg
out
inc
daa
mov
pop
inc
adc
cmp
out
jnp
jnp
pop
out
scas
imul
dec
pusha
fsubr
outs
ins
cmc
pop
and
sbb
enter
sahf
cmp
push
std
(bad)
std
or
push
inc
mov
inc
(bad)
movs
(bad)
push
jo
std
pop
jno
(bad)
arpl
and
fld
jg
jp
jle
(bad)
cmp
inc
cmp
inc
mov
ret
xchg
add
adc
add
sti
dec
sub
(bad)
stos
fiadd
ret
ins
lds
retw
inc
rcr
add
aaa
sbb
loop
inc
pop
push
out
ja
sub
jmp
call
xor
mov
fimul
sti
inc
inc
addr16
inc
push
jge
call
cmp
out
jbe
inc
push
jmp
add
xlat
mov
adc
mov
pop
ret
cmps
push
loopne
(bad)
ret
div
mov
pop
mov
cli
push
or
jae
ds
dec
icebp
pop
addr16
add
js
mov
push
push
mov
into
loopne
inc
loope
inc
sti
(bad)
inc
inc
in
inc
inc
(bad)
adc
mov
jl
jae
(bad)
mov
clc
sbb
push
outs
lds
scas
fdiv
jbe
outs
(bad)
popf
xor
es
dec
add
xchg
push
and
imul
inc
cmc
rcl
jmp
test
or
jbe
adc
sub
(bad)
mov
(bad)
push
rcr
dec
std
cmps
push
cmp
(bad)
lahf
push
stc
jmp
std
xchg
ret
adc
add
test
and
dec
and
pop
outs
ins
std
push
call
mov
xchg
add
xchg
arpl
add
cwde
pop
xor
inc
and
fidivr
nop
adc
stos
out
cmp
jb
fsub
scas
movups
js
xlat
pop
sub
lds
retf
xchg
sti
(bad)
mov
dec
arpl
in
scas
push
push
pop
rol
pop
call
ror
cmp
std
pop
cmc
inc
fild
lods
out
ret
jbe
in
test
mov
dec
ret
and
inc
fbld
out
mov
mov
inc
(bad)
jg
jne
push
pop
xor
fild
fbld
push
dec
push
aaa
loop
cmp
out
out
pop
inc
(bad)
call
cli
lds
jp
inc
or
bound
xchg
add
sar
js
mov
pop
ins
inc
cmp
call
jb
cmp
retf
je
pop
or
xor
arpl
call
scas
ficom
jmp
cli
mov
mov
add
mov
jmp
sbb
mov
arpl
or
loopne
and
ret
mov
or
pushf
in
adc
add
mov
icebp
push
(bad)
(bad)
mov
fdiv
push
adc
add
mov
inc
xchg
pop
push
lea
das
fs
sti
es
inc
arpl
psubd
loope
neg
mov
mov
xor
push
fild
pushf
pop
imul
mov
ret
test
push
das
movs
fcmovb
je
out
lock
sti
shl
push
and
out
xlat
add
aas
add
nop
jge
dec
sahf
lahf
gs
xor
enter
(bad)
sub
lock
dec
cmc
mov
outs
push
jg
cmc
mov
arpl
jl
push
inc
mov
add
push
out
push
fdivr
push
sti
imul
cmp
addr16
mov
test
add
add
push
dec
push
ret
ret
add
jg
or
sbb
push
push
(bad)
int
mov
inc
out
pop
mov
pop
cmc
dec
cmp
mov
fisttp
cmp
out
mov
shl
jnp
xor
mov
adc
(bad)
jb
mov
mov
std
pop
bnd
hlt
cmps
or
xor
test
test
(bad)
dec
ret
ret
and
jp
popf
push
dec
adc
pop
mov
push
push
add
mov
test
stos
mov
movs
repz
popa
push
cmp
fdivrp
fisubr
pop
sub
mov
ret
sahf
dec
sub
icebp
sbb
pop
addr16
add
jg
jge
mov
mov
mov
lds
ss
adc
das
pop
xor
out
xchg
push
rcr
sbb
or
xchg
add
(bad)
inc
lds
cs
pop
lods
in
dec
xor
jno
pop
and
push
fidiv
dec
and
mov
cmp
pop
adc
add
shr
mov
jmp
inc
pop
inc
jb
add
arpl
jecxz
push
jae
sbb
add
shl
pop
out
xchg
mov
add
lock
imul
add
or
cmp
xor
jle
clc
outs
jmp
add
sbb
sub
cli
cmp
pop
outs
xlat
inc
mov
std
inc
or
movs
fdivr
push
addr16
push
inc
pop
sub
jmp
push
jmp
outs
or
push
xchg
out
cmp
fs
jl
in
stos
mov
ja
push
test
lods
sbb
ror
xchg
sti
push
addr16
adc
cmp
xchg
adc
or
inc
bound
ret
push
or
mov
out
imul
inc
jmp
or
xchg
adc
pop
(bad)
adc
jmp
in
std
add
iret
fbstp
es
and
push
push
mov
jb
inc
inc
adc
mov
out
push
clc
outs
xor
push
inc
(bad)
call
inc
clc
add
loopne
iret
cmps
test
push
je
aas
mov
outs
adc
push
jmp
dec
and
push
fs
push
aas
adc
add
stos
adc
pop
inc
addr16
std
movs
ds
not
call
ret
popa
dec
clc
dec
mov
dec
cmps
scas
rol
jge
pop
gs
mov
push
push
std
dec
mov
loop
mov
leave
and
mov
inc
pop
jge
inc
out
add
or
dec
(bad)
cld
push
add
adc
adc
mov
push
adc
or
xor
cld
pop
(bad)
pop
pop
cdq
pusha
xchg
sbb
in
clc
pop
stos
call
ret
(bad)
(bad)
pop
sti
or
shl
out
dec
mov
std
ds
ins
jge
inc
or
addr16
cld
aas
jl
xchg
push
mov
push
scas
jmp
out
xchg
movs
push
ds
sti
das
(bad)
cmp
push
inc
xor
cmp
add
scas
dec
fwait
sub
mov
ins
add
retf
les
rcl
push
push
pop
xchg
jnp
cli
out
adc
mov
(bad)
mov
inc
mov
sub
test
xor
je
xor
std
jp
xor
and
xchg
pop
ficom
enter
(bad)
pop
push
mov
out
dec
stc
mov
arpl
not
std
outs
les
mov
mov
mov
aaa
bound
add
inc
retf
ror
jg
mov
js
or
inc
xchg
jbe
jp
xchg
lds
jg
popa
es
inc
ins
aas
jae
dec
xchg
push
inc
int
into
cmp
xor
adc
(bad)
push
ret
leave
add
pop
aad
rcl
push
call
jg
ja
pushf
imul
inc
jae
inc
shr
inc
adc
aaa
xchg
push
mov
sbb
jg
jo
mov
xor
out
(bad)
adc
push
push
shl
(bad)
clc
mov
les
push
mov
mov
das
(bad)
mov
push
inc
inc
pop
cli
in
fwait
leave
push
loopne
aaa
out
es
or
pop
enter
sar
mov
lock
call
push
push
aaa
in
push
nop
jecxz
cmp
add
sbb
or
inc
cmps
cmp
test
aas
or
sbb
pusha
call
mov
inc
or
add
add
xor
sti
les
pop
add
jbe
aas
jnp
push
je
mov
pop
push
push
mov
push
sbb
pop
or
add
call
mov
inc
mov
and
das
rol
and
lea
push
push
jl
add
push
shl
xor
mov
sub
push
push
je
mov
popa
mov
mov
push
inc
shl
outs
ds
pop
xchg
fdivr
pop
dec
sub
sub
in
jmp
sbb
add
mov
adc
sti
imul
rcr
mov
xchg
jmp
ret
mov
inc
out
jp
mov
jmp
adc
push
adc
mov
int
mov
hlt
push
sbb
inc
icebp
mov
add
add
movs
mov
sub
mov
or
and
stos
gs
push
stos
sub
add
pusha
or
jmp
ss
inc
push
pusha
out
fimul
xor
fwait
ss
ret
(bad)
jmp
jg
pop
ja
add
xchg
push
push
push
add
je
aas
jge
sahf
add
daa
add
hlt
and
fsub
pop
loopne
aam
xchg
push
jp
push
aas
inc
test
retf
inc
mov
nop
shr
adc
out
xchg
mov
scas
or
xchg
add
shl
mov
fistp
jle
out
cmp
sbb
and
ror
les
jae
aam
fild
(bad)
mov
dec
cld
dec
test
mov
out
inc
push
iret
add
mov
sti
xor
aad
(bad)
mov
xlat
arpl
push
dec
mov
cld
(bad)
addr16
xchg
pop
add
mov
inc
js
mov
mov
push
sub
cmc
add
aaa
sbb
push
jne
mov
pop
add
dec
mov
adc
ins
shl
push
sbb
inc
aas
dec
imul
cli
out
add
dec
jbe
(bad)
in
loopne
mov
lock
aas
push
jno
adc
js
cmp
adc
push
inc
dec
mov
or
gs
mov
inc
ror
push
lahf
scas
push
ins
pop
mov
sar
jmp
stos
xchg
test
adc
add
sbb
(bad)
cli
lds
and
(bad)
(bad)
and
js
js
inc
enter
cli
xchg
inc
jne
xor
pop
std
add
aam
mov
mov
ficom
shr
jg
pop
outs
int
repz
test
inc
and
out
mov
ret
add
(bad)
push
ret
inc
mov
adc
mov
mul
ja
outs
out
inc
and
cmc
shr
pop
mov
std
xchg
out
push
dec
inc
add
push
add
cmc
add
xor
(bad)
or
(bad)
xlat
out
idiv
jl
xor
dec
in
lods
or
cli
cmp
test
sub
inc
dec
cli
ss
inc
cli
div
cmp
jmp
vmptrst
push
inc
jae
mov
(bad)
inc
or
fcomp
sub
fcmove
xchg
mov
js
shl
dec
mov
std
enterw
cmovo
repnz
mov
test
and
push
mov
pop
jnp
bound
(bad)
mov
pop
push
xchg
or
mov
inc
std
out
cmp
inc
inc
leave
daa
inc
fimul
inc
dec
ja
clc
call
xor
sub
pop
js
fisub
and
ins
or
rol
cmp
daa
jmp
lock
mov
pop
dec
retf
std
(bad)
cs
add
add
cs
cmps
mov
jl
lds
mov
scas
retf
fs
cwde
(bad)
cmc
js
push
pop
loop
inc
test
xor
dec
icebp
(bad)
jl
sub
pop
stc
dec
xchg
or
out
sbb
cmp
aas
sahf
sti
push
pop
cmp
daa
aas
data16
jmp
test
pop
mov
mov
xor
sub
test
add
pop
push
arpl
add
xor
mov
pop
push
scas
sbb
inc
call
fidivr
mov
out
mov
test
pop
lds
jmp
add
inc
mov
cmc
mov
arpl
add
mov
adc
mov
inc
jmp
add
jg
sub
push
jae
movs
cmp
sub
inc
inc
das
out
dec
cvtdq2ps
mov
sbb
pop
mov
arpl
lods
mov
adc
es
or
push
add
pop
inc
jg
mov
dec
shr
mul
xchg
push
fsub
jmp
mov
or
out
idiv
inc
call
lock
movs
mov
fidiv
ins
xor
and
sub
mov
enter
jg
push
(bad)
xor
add
push
and
(bad)
mov
mov
pextrw
es
add
jp
or
cmp
push
mov
push
add
and
ret
dec
test
push
mov
dec
or
push
jno
ret
adc
fcom
call
loope
enter
add
sbb
(bad)
aad
call
call
xor
addr16
jmp
cli
inc
xchg
push
cmp
mov
movs
jmp
xor
sub
aas
inc
xlat
mov
ret
add
mov
sti
pop
icebp
add
fldcw
pop
mov
(bad)
sub
inc
out
jl
add
mov
div
test
add
loope
lock
dec
pusha
cmp
dec
adc
aas
xor
stos
outs
jmp
or
jp
stos
add
(bad)
out
cli
sti
add
mov
and
and
mov
add
aas
push
push
add
sbb
dec
inc
or
mov
mov
(bad)
cdq
pop
dec
inc
push
leave
lds
sbb
cmp
fs
push
test
xchg
into
cld
add
adc
mov
cmp
mov
pop
std
mov
loope
sub
aam
jmp
movq
push
push
ficom
lods
or
fs
mov
out
adc
inc
push
pop
jne
out
out
mov
inc
gs
cmp
test
mov
inc
mov
mov
inc
inc
mov
(bad)
lock
jmp
stos
loopne
outs
push
xor
repnz
adc
sti
jg
pop
pop
cld
out
pop
pusha
clc
add
push
sti
mov
pop
xlat
jmp
call
add
mov
js
jge
mov
mov
adc
xchg
rcr
push
dec
out
dec
mov
inc
mov
rol
test
out
test
imul
dec
(bad)
push
enter
jg
outs
cli
call
adc
xor
xlat
inc
dec
push
fwait
xor
push
mov
mov
xor
mov
enter
jae
mov
adc
enter
test
cld
mov
cmp
les
aam
out
push
out
test
adc
call
jmp
xor
and
(bad)
push
sbb
cmp
mov
outs
or
push
das
das
sbb
out
gs
jae
xchg
xor
dec
jle
arpl
xchg
arpl
js
test
dec
add
outs
out
and
mov
or
fcmovnb
retf
sub
mov
and
je
and
jle
out
pop
jbe
or
and
rol
inc
add
add
sbb
imul
call
mov
ret
sub
clc
test
(bad)
fptan
dec
sbb
inc
mov
(bad)
pop
pusha
inc
add
mov
dec
hlt
das
cli
fwait
push
sar
jmp
mov
jmp
sub
add
jbe
pop
ret
xchg
add
lds
jno
ror
scas
outs
push
out
test
out
cmc
sbb
cld
jbe
pop
sbb
pop
pop
xor
ror
bound
dec
pop
int3
pop
push
mov
inc
mov
jl
int3
or
les
retf
out
out
(bad)
pusha
dec
or
shr
mov
cmp
or
ss
adc
pop
mov
push
pop
push
dec
out
sti
out
mov
mov
aas
loopne
pop
or
fwait
shl
pusha
(bad)
and
dec
aas
dec
fwait
loopne
or
call
inc
pop
add
cld
add
mov
push
aas
(bad)
out
pop
mov
jnp
movs
xchg
add
(bad)
je
push
cld
(bad)
inc
out
test
jmp
in
es
inc
(bad)
ss
retf
aam
inc
loop
cmps
and
outs
(bad)
data16
xchg
sti
mov
sahf
cmps
pop
pop
icebp
or
mov
dec
adc
neg
mov
in
std
ds
test
pop
mov
(bad)
dec
inc
mov
jae
push
mov
das
xchg
lods
dec
mov
jbe
mov
div
cwde
xor
adc
add
aaa
adc
mov
sbb
(bad)
inc
sub
not
mov
pop
scas
aas
loop
mov
dec
cmp
bound
out
arpl
cmp
(bad)
in
push
push
sti
cmp
hlt
ret
add
fnstsw
xor
pop
inc
sar
or
packsswb
(bad)
mov
or
fdivr
xchg
dec
pop
add
adc
jmp
jg
fidivr
adc
(bad)
lahf
inc
sar
jg
cmc
dec
dec
adc
jmp
fisttp
sbb
aam
add
imul
iret
repz
xchg
sub
xor
gs
enter
sbb
loop
adc
mov
loop
test
imul
xor
jmp
or
inc
movs
shl
(bad)
je
dec
add
cmp
cmp
aam
push
out
dec
out
push
sbb
icebp
jmp
aas
dec
push
cld
mov
lock
xchg
movs
push
xchg
jp
in
out
sub
jae
aas
mov
jmp
sbb
cmovb
push
push
push
js
pop
dec
icebp
xchg
or
repnz
dec
sbb
push
enter
hlt
sbb
or
dec
jecxz
mov
and
das
nop
add
jle
std
enter
test
(bad)
cmc
out
adc
add
cli
jmp
and
cmc
or
mov
out
and
fnstcw
loopne
sbb
xchg
fimul
pop
add
sbb
cld
push
xlat
aaa
mov
inc
jmp
ret
add
push
pop
and
mov
loop
dec
call
add
push
pop
dec
xchg
mov
mov
(bad)
pop
or
inc
aam
test
in
fild
pop
ret
or
cmp
fs
push
lahf
jle
mov
inc
jge
jl
rol
push
enter
mov
and
pop
push
sbb
mov
bound
pop
cld
aaa
mov
jo
dec
push
jb
push
rol
xchg
cmp
mov
cmc
sub
push
mov
add
jg
or
aaa
inc
push
inc
daa
and
jp
in
mov
inc
mov
xchg
ficomp
xchg
(bad)
mov
mov
inc
pop
(bad)
(bad)
xchg
mov
ss
fsubr
mov
jbe
inc
fwait
mov
std
push
mov
inc
push
fcomp
ror
and
add
sbb
cmp
cmp
cmp
aas
add
and
ins
sub
clc
and
fadd
jg
add
jns
dec
add
dec
dec
cli
call
inc
dec
push
pop
call
xor
mov
verr
push
(bad)
jg
bound
jnp
xor
jg
mov
push
mov
std
ror
jmp
je
xor
dec
enter
mov
cld
add
ja
adc
dec
outs
pop
addr16
add
add
fnstenv
lock
and
jno
call
push
dec
aas
pop
mov
push
adc
sbb
push
adc
ja
xor
jmp
lahf
inc
adc
xor
neg
pop
cld
pop
sub
jmp
cmp
out
push
sbb
test
sbb
add
xor
mov
aas
in
pop
sub
enter
jge
jmp
aas
outs
cmps
dec
add
rcr
ficomp
(bad)
call
jp
sbb
sahf
aas
push
mov
arpl
popa
add
jb
ins
inc
adc
lea
ins
add
dec
call
fiadd
jbe
add
(bad)
push
mov
inc
inc
std
push
mov
(bad)
call
inc
pop
sbb
mov
lahf
pop
jle
nop
cdq
mov
or
pop
ret
dec
mov
out
je
rcr
cmp
add
popa
cmp
psrad
imul
out
nop
pop
adc
mov
add
cmps
push
out
jg
jmp
dec
cwde
call
add
jg
ror
inc
mov
mov
test
cmc
out
ins
addr16
repz
cld
test
ror
mov
or
push
ficom
cld
clc
(bad)
push
aas
adc
push
rcl
or
cwde
(bad)
mov
test
inc
push
imul
xchg
mov
(bad)
loope
(bad)
push
pop
sub
out
call
xchg
mov
sub
sub
add
js
(bad)
push
outs
not
psllq
scas
ret
mov
add
sub
(bad)
cmp
(bad)
fiadd
mov
movs
cmps
dec
add
push
inc
mul
jg
sub
or
mov
push
retf
adc
cmc
neg
add
or
sub
push
jbe
jae
push
popf
mov
call
mov
sub
ins
pop
sbb
mov
mov
int
repz
lds
inc
adc
shl
inc
sbb
sub
outs
(bad)
and
sub
or
and
mov
or
jo
xchg
sti
cmp
pop
mov
add
push
scas
jb
mov
sbb
sbb
cdq
sub
mov
mov
push
fcmovb
std
ret
dec
jmp
mov
jmp
in
das
lock
push
mov
sub
inc
jbe
mov
xor
sub
addr16
(bad)
out
dec
or
mov
xchg
shr
xlat
pop
pop
inc
mov
sub
inc
mov
stos
or
cli
pop
rcr
(bad)
or
mov
bound
xchg
inc
xlat
or
ds
sub
pop
or
sti
jae
add
add
push
sti
xlat
inc
and
stc
sti
jbe
bound
pusha
call
mov
and
mov
add
pop
sbb
or
add
fdivr
push
sti
push
jmp
mov
dec
jo
pop
cli
lahf
jmp
add
pop
outs
inc
inc
leave
(bad)
das
adc
fcomip
mov
adc
pop
std
add
add
or
pop
hlt
call
mov
push
lds
es
fisttp
outs
loop
ret
jae
dec
cmp
pop
das
mov
xor
(bad)
sub
jle
mov
repz
jb
add
mov
pop
(bad)
or
lea
lock
ss
mov
cwde
fldenv
cld
xchg
mov
pop
lea
jle
std
inc
mov
cmc
js
in
adc
add
not
leave
adc
xchg
and
add
imul
dec
push
inc
adc
stos
adc
mul
or
pop
imul
mov
cld
pop
mov
and
and
xchg
mov
inc
fiadd
cmc
mov
or
cmp
xor
lds
imul
je
xor
rcl
call
out
jbe
vunpcklpd
inc
xor
mov
mov
movs
not
aas
mov
push
in
mov
pop
pop
(bad)
popa
adc
xchg
inc
idiv
pop
cmps
xchg
adc
fdiv
sti
repnz
push
add
pop
rep
dec
pop
inc
out
loopne
ins
inc
scas
dec
pop
inc
jo
dec
or
or
push
pop
push
dec
add
popa
xchg
cmp
and
call
cli
dec
mov
imul
jmp
dec
or
add
arpl
ins
out
(bad)
inc
mov
sbb
add
(bad)
test
ret
push
mov
cmp
cmp
add
ins
sub
inc
push
or
mov
loopne
pop
jmp
enter
sbb
pop
pop
push
sti
or
add
xchg
sbb
sbb
icebp
push
push
call
inc
sbb
aas
sbb
mov
or
push
jo
popa
jecxz
cmp
jecxz
pop
and
dec
ret
mov
test
aas
arpl
push
(bad)
fld
add
mov
stos
pop
xlat
dec
adc
call
test
pop
sbb
mov
lea
sar
ins
inc
push
push
std
or
push
jnp
mov
mov
mov
fwait
sub
inc
rol
movs
ret
outs
add
mov
add
int
mov
sti
or
xor
pop
and
aas
mov
or
xor
jmp
cld
push
test
gs
cli
dec
push
fsubr
adc
dec
jae
inc
sub
fs
sbb
sbb
ret
aam
adc
bndldx
(bad)
adc
test
stos
test
clc
pushf
inc
jo
xor
xchg
cs
pop
mov
push
mov
fmul
mov
push
sub
into
mov
adc
inc
outs
call
jmp
adc
and
cmp
sbb
out
jmp
push
shl
out
and
test
test
dec
cld
push
out
add
sbb
push
add
ret
adc
clc
lods
jmp
je
hlt
pop
icebp
inc
retf
jmp
lods
jge
bound
stos
ret
add
mov
mov
std
dec
iret
scas
jmp
mov
cmps
jecxz
sub
inc
adc
jl
push
dec
mov
push
not
ret
test
mov
mov
scas
imul
mov
lods
add
push
sbb
add
jmp
pop
jnp
outs
and
dec
sti
retf
add
pop
add
pushf
pop
push
fmul
jmp
loop
mov
ins
je
ja
fild
jb
scas
inc
mov
inc
inc
and
pop
mov
pop
aas
inc
mov
call
clc
jb
mov
fimul
stos
cs
add
push
push
inc
(bad)
push
out
ss
jmp
fld
jle
cli
xor
call
mov
int
(bad)
pop
mov
add
or
adc
jle
dec
or
inc
fs
adc
add
jmp
shl
inc
xchg
ret
cmps
pop
outs
push
clc
sbb
pop
jmp
adc
xchg
test
mov
rcl
pop
xor
ret
cmp
jl
(bad)
add
repnz
sti
jmp
pop
mov
retf
sbb
mov
sbb
lahf
mov
pop
add
mov
dec
and
mov
mov
imul
add
mov
comiss
test
adc
push
bound
neg
dec
push
inc
push
dec
jg
(bad)
jp
mov
and
sbb
add
(bad)
rcl
push
pop
loopne
rol
xchg
pop
adc
sbb
jl
cmp
jg
rol
jae
jmp
jmp
shl
mov
or
cmp
add
pop
mov
add
sbb
ja
or
test
adc
pop
add
cmp
sbb
or
inc
aaa
dec
lds
fs
(bad)
xchg
mov
fwait
ror
lds
lods
mov
data16
fucomp
out
aad
pop
inc
pusha
push
inc
jl
mov
nop
imul
ins
adc
inc
scas
jl
add
and
das
pop
ret
lock
cmps
sti
or
fist
cmp
aas
lds
cld
push
lods
and
jb
sub
pop
adc
mov
add
dec
stos
out
ret
fild
jo
push
mov
call
push
gs
in
and
mov
add
adc
and
sbb
or
pop
clc
add
mov
mov
dec
mov
ja
ret
xor
(bad)
aas
adc
ret
xor
sar
mov
fcmovbe
dec
push
fiadd
out
add
ins
mov
xchg
inc
inc
jmp
imul
push
nop
xchg
dec
sbb
ins
push
mov
push
xor
mov
and
inc
test
jmp
jl
iret
sub
push
mov
(bad)
aaa
fdiv
add
mov
mov
adc
(bad)
pop
adc
mov
outs
mov
add
inc
ret
xlat
add
call
packuswb
push
fist
add
push
push
or
rcr
adc
dec
ja
neg
add
push
adc
arpl
popa
out
hlt
out
or
mov
push
and
or
jae
mov
retf
mov
push
mov
retf
(bad)
data16
test
arpl
(bad)
out
not
mov
push
pusha
mov
sbb
dec
js
fwait
ss
retf
aas
test
mov
leave
push
mov
push
cmps
mov
push
clc
or
and
loop
dec
pop
dec
mov
push
sti
je
and
push
pop
int3
add
dec
loopne
or
pop
push
jmp
ins
or
inc
inc
inc
and
in
js
and
aam
shr
inc
inc
and
loope
repz
mov
outs
mov
pop
fs
mov
pop
cmp
hlt
(bad)
pop
aaa
push
les
stc
sbb
jmp
jle
mov
jmp
jnp
mov
enter
push
inc
mov
sbb
add
fcmovbe
push
pop
repz
add
cs
ss
mov
dec
sti
mov
dec
and
adc
dec
dec
or
ja
push
idiv
add
add
addr16
xchg
and
scas
push
lock
dec
sub
xor
imul
inc
fcom
shr
leave
dec
std
push
add
push
or
test
jg
cs
or
jnp
push
js
cmp
cmc
pop
xchg
pusha
mov
mov
mov
fild
xchg
in
add
cld
aad
xor
aas
sbb
add
mov
mov
call
fst
fild
pushf
inc
jo
add
jae
sti
ins
dec
cmp
xor
cmp
ret
push
mov
aas
in
lock
cmp
dec
cmp
inc
cmp
jmp
out
push
std
inc
(bad)
outs
test
dec
icebp
call
lds
mov
pop
sbb
addr16
push
fld
sbb
pop
mov
jb
pop
pop
out
pop
adc
xor
cmps
call
dec
in
clc
sbb
pop
cmc
pop
mov
add
repnz
adc
mov
add
sbb
div
rcl
aas
mov
push
cmp
(bad)
sub
daa
jmp
daa
push
pop
dec
test
mov
ret
in
arpl
dec
cld
sbb
not
addr16
add
pop
jno
jl
sbb
inc
clc
jg
mov
not
inc
sub
adc
cwde
call
or
inc
movs
or
movs
shld
and
mov
fsubr
mov
mov
mov
inc
mov
inc
sti
add
ret
in
push
jne
jl
pop
jmp
inc
xchg
sbb
mov
mov
fiadd
das
outs
xor
fist
cmp
test
jmp
inc
sbb
(bad)
outs
mov
dec
cmc
mov
push
shl
(bad)
(bad)
push
xor
test
inc
jmp
mov
mov
pop
mov
mov
rol
add
retfw
pop
cmp
jb
adc
(bad)
ret
sbb
mov
addr16
out
mov
adc
(bad)
jmp
dec
sub
jo
lea
les
pop
test
cmp
add
dec
(bad)
push
mov
out
rol
cld
fs
aas
inc
push
push
repnz
stc
and
(bad)
mov
inc
inc
sbb
adc
adc
pop
icebp
jmp
mov
je
dec
pop
adc
pop
push
sub
iret
xlat
clc
std
(bad)
push
jg
(bad)
(bad)
jl
pop
retf
adc
mov
adc
add
mov
(bad)
ins
inc
arpl
fimul
mov
inc
test
sbb
in
pop
lods
and
arpl
out
pop
inc
dec
dec
inc
xchg
jmp
push
mov
nop
retf
sti
jae
push
pop
imul
call
fcom
cs
mov
or
pop
dec
push
test
push
jae
sub
test
or
push
sub
shl
rol
xor
je
push
das
imul
inc
add
ret
jmp
out
retf
mov
pop
pusha
cmp
(bad)
jmp
push
adc
test
mov
(bad)
out
pop
jl
inc
pop
add
sbb
aas
inc
mov
pop
fcom
mov
mov
add
outs
push
mov
and
dec
sub
mov
push
add
daa
cmc
addr16
test
mov
mov
xor
push
inc
rcr
add
aas
retf
inc
out
shr
inc
lahf
idiv
inc
out
lds
lldt
inc
mov
inc
inc
dec
mov
outs
and
add
dec
mul
add
pop
out
js
test
inc
jae
fimul
jae
je
push
inc
ret
pop
jg
sbb
fild
cmc
inc
pop
(bad)
xchg
outs
adc
mov
inc
xchg
out
fcomp
out
repnz
jmp
xor
cmp
test
test
daa
out
retf
sti
rcl
push
mov
mov
xor
aas
push
dec
mov
ret
out
and
iret
jmp
mov
or
outs
adc
xchg
cli
or
out
dec
ficomp
pop
(bad)
jg
add
inc
xchg
adc
scas
(bad)
aaa
sti
out
or
sbb
pop
add
arpl
sub
push
pop
pusha
mov
pop
push
jo
mov
imul
sbb
das
jp
imul
jl
cld
test
movs
xchg
clc
mov
fsub
test
aas
pop
ret
pop
jg
outs
fadd
jmp
pop
adc
mov
dec
mov
inc
mov
xchg
add
push
jmp
jb
pop
stos
jno
ret
jg
add
xor
call
jmp
imul
pop
fimul
call
push
push
xor
push
enter
fs
dec
mov
fldenv
cmp
ret
mov
sbb
add
push
push
mov
pop
xchg
sbb
inc
mov
push
seto
jbe
pop
stos
add
cld
pop
jl
pop
stc
dec
add
out
add
jmp
pop
add
add
inc
pop
jo
ror
(bad)
dec
lds
sub
adc
sbb
neg
fimul
ret
sbb
mov
call
dec
or
jo
scas
xchg
jle
ins
inc
not
jl
mov
sub
sahf
sahf
push
or
mov
jo
or
push
loop
and
nop
inc
arpl
loopne
call
add
jmp
mov
sub
push
gs
dec
clc
add
push
mov
into
add
sti
shl
xchg
ss
mov
popf
pop
and
call
fidivr
(bad)
add
mov
jae
inc
in
out
je
pop
push
mov
idiv
cmc
jno
mov
mov
dec
inc
pop
outs
mov
mov
jmp
call
sar
xchg
push
and
cmp
cmp
ret
and
ins
dec
xor
adc
outs
mov
std
hlt
mov
jl
mov
mov
sub
outs
inc
inc
(bad)
lock
ins
cmp
out
inc
loopne
xlat
push
loopne
or
mov
jg
ret
or
mov
outs
clc
(bad)
xor
ss
mov
fs
out
xchg
cli
add
add
(bad)
call
into
pushf
jbe
add
and
add
mov
fld
repz
cs
mov
inc
xchg
outs
jo
mov
je
mov
in
mov
or
sub
jg
stos
clc
jno
in
jl
jmp
xor
aaa
mov
inc
retf
ret
or
enter
mov
dec
and
and
enter
adc
mov
hlt
scas
cld
xor
and
push
mov
mov
add
mov
fdivp
cmc
ret
in
dec
cli
scas
cmp
movs
xor
add
pop
je
std
bound
cmp
cmp
add
mov
push
add
add
aad
mov
jne
add
bound
div
out
mov
fs
mov
mov
push
pop
inc
jge
out
mov
push
dec
inc
xlat
jl
lea
push
push
mov
mov
popf
jo
inc
inc
push
cs
ror
sbb
and
aaa
ins
out
div
loope
fidiv
lods
ret
jge
inc
mov
ins
xchg
xchg
add
push
movs
sub
and
dec
or
pop
cld
imul
outs
add
data16
fld
and
sahf
pop
bound
xor
mov
cs
pusha
and
mov
vmovsldup
push
call
push
(bad)
int
or
add
sti
jbe
ja
es
add
add
jmp
or
test
clc
adc
mov
push
pop
lock
dec
xor
or
xchg
dec
les
adc
sbb
ret
call
adc
or
adc
inc
dec
add
dec
std
mov
ins
arpl
jmp
pop
icebp
addr16
and
cmp
mov
ret
add
add
add
out
and
clc
mov
aas
adc
mov
push
cli
inc
lahf
inc
pop
push
push
or
pop
and
or
in
adc
test
xchg
test
out
pop
jae
push
add
mov
les
fs
test
lock
movs
adc
inc
mov
arpl
ror
inc
add
or
inc
dec
mov
add
add
aaa
call
sub
cwde
add
cdq
out
mov
ret
mov
mov
jp
or
aad
shr
inc
jg
push
sub
retf
neg
adc
xchg
mov
jle
and
add
inc
jmp
loopne
xchg
sub
add
(bad)
inc
push
out
and
inc
jne
jne
cmp
push
pop
test
cmp
inc
jae
pop
mov
mov
gs
sti
adc
and
inc
pop
sub
adc
lds
(bad)
sbb
out
xor
pop
inc
ss
mul
dec
dec
push
ja
sbb
jae
aad
call
sbb
mov
add
and
out
mov
in
pop
mov
xor
stos
pusha
mov
add
adc
add
push
pop
mov
mov
jb
and
repz
stos
mov
xchg
sbb
xlat
imul
mov
(bad)
sub
pop
mov
mov
pop
adc
cwde
pusha
repz
sti
push
arpl
jne
xchg
push
cld
lds
imul
hlt
pop
cmp
push
mov
adc
mov
mov
loopne
pop
std
pop
aam
mov
test
rol
ja
cmp
(bad)
mov
adc
fisttp
jnp
cmp
stos
fisub
mov
out
outs
sbb
je
inc
out
jg
pop
and
(bad)
(bad)
aaa
xor
loope
sub
out
or
outs
mov
mov
jb
sbb
loope
gs
and
das
mov
aas
push
repz
aas
cmps
dec
ins
add
pop
aam
es
fcomip
fistp
lea
aad
ret
mov
(bad)
jg
fiadd
xor
xchg
inc
sti
hlt
out
sti
(bad)
jae
fild
push
cmps
shl
loop
outs
dec
data16
xor
push
inc
fmul
mov
lahf
cs
mov
xlat
xor
pop
cmc
sbb
or
push
rdmsr
mov
(bad)
call
inc
enter
push
inc
fsubr
ins
(bad)
mov
mov
(bad)
addr16
mov
retf
jg
push
sbb
out
out
pop
inc
cmp
add
mov
fwait
movs
icebp
xchg
add
(bad)
push
ret
cmp
mov
repnz
add
add
leave
ret
(bad)
or
test
inc
outs
sti
pop
bound
dec
sti
shl
loop
rol
retf
pop
push
je
lahf
adc
push
rol
push
or
cs
jecxz
sti
cmp
cmp
xchg
jg
(bad)
xchg
jl
sti
pusha
fdiv
outs
into
pop
jno
sub
mov
add
xchg
(bad)
(bad)
mov
mov
xor
int3
sahf
sub
push
jb
pop
push
jmp
test
scas
push
jl
adc
arpl
mov
movs
in
add
push
(bad)
fdiv
inc
loopne
pop
inc
aad
mov
popf
push
jl
das
or
cld
inc
mov
push
add
add
pop
add
pop
push
or
cwde
dec
or
and
dec
mov
mov
mov
add
arpl
cmp
dec
dec
dec
movs
scas
sti
pusha
scas
call
pop
sbb
dec
pop
jae
in
mov
mov
sbb
push
inc
aas
cmps
jb
or
sub
push
repnz
and
mov
lock
sbb
mov
or
aaa
fwait
dec
inc
loopne
inc
std
add
inc
push
cmp
cmps
mov
pop
push
lock
dec
cmp
jmp
in
ja
or
add
loopne
cmp
pop
inc
mov
inc
add
dec
jmp
inc
out
mov
std
push
out
inc
inc
xchg
and
adc
and
call
mov
sub
adc
repz
ins
xor
mov
and
mov
mov
(bad)
sbb
clc
(bad)
dec
add
das
add
pop
add
mov
mov
lock
inc
dec
std
mov
push
inc
sbb
ds
outs
(bad)
outs
shl
sub
pop
or
pop
add
mov
pop
adc
inc
dec
push
ret
sar
dec
push
dec
jg
paddw
push
inc
test
into
add
stos
xlat
sub
maxps
pop
lock
hlt
cs
setg
push
and
inc
and
and
ficom
ret
adc
mov
aas
fisubr
push
cli
xchg
inc
inc
arpl
and
or
sub
jp
shl
sub
add
jbe
test
pop
int3
enter
retf
inc
loopne
repz
dec
and
add
outs
outs
fwait
sub
mov
shl
cld
dec
sbb
mov
pop
mov
imul
cmp
cmc
inc
push
sub
(bad)
das
cmps
jae
cs
add
xchg
sbb
adc
enter
out
and
outs
fwait
test
jb
(bad)
mov
je
xor
sbb
xor
pop
jb
jmp
pop
mov
(bad)
icebp
aam
pop
dec
adc
or
addr16
sub
inc
push
or
test
cmps
inc
mov
pop
add
jp
mov
sbb
pop
movs
sub
pop
stc
in
(bad)
xchg
repnz
adc
sti
mov
inc
pushf
dec
pop
not
adc
cmp
sti
cmps
mov
add
dec
(bad)
dec
xor
inc
lahf
das
mov
add
push
or
fcomp
pop
mov
aam
cld
bound
stos
dec
mov
mov
add
sub
inc
push
mov
aaa
mov
jbe
inc
ja
out
repz
xchg
enter
and
cli
sahf
repnz
cmc
jae
add
mov
es
jg
imul
mov
jbe
movs
fld
(bad)
aas
or
mov
push
mov
js
mov
clc
data16
dec
dec
jg
mov
jmp
or
jp
push
inc
into
fs
push
pushf
push
(bad)
mov
mov
inc
lods
(bad)
push
sub
pop
jp
into
(bad)
mov
push
sub
xchg
pop
or
in
pop
push
loopne
add
dec
orps
push
mov
adc
aaa
add
mov
shr
ror
cmc
jmp
inc
ss
fwait
mov
sub
pop
imul
fcomi
(bad)
fdivp
jnp
mov
adc
inc
retf
xchg
loopne
clc
outs
and
out
pop
stos
mov
sbb
pop
sub
loope
ret
cwde
and
neg
(bad)
inc
or
jp
mov
dec
and
mov
jge
out
pop
inc
shr
dec
outs
call
rol
xchg
out
jnp
mov
pop
(bad)
sahf
mov
aaa
loope
(bad)
rcl
xchg
sub
dec
xchg
repnz
dec
sti
or
pop
push
out
cli
inc
mov
xchg
fild
ficomp
ret
inc
dec
ja
inc
push
ror
pop
mov
push
stos
aaa
aas
repz
push
test
(bad)
pop
aam
xchg
jecxz
cli
push
push
(bad)
lods
push
mov
imul
imul
sub
and
push
push
es
mov
mov
inc
out
inc
pusha
mov
call
jmp
xlat
imul
fild
cld
jmp
sti
xor
ja
pop
xor
adc
loopne
push
push
xchg
inc
sbb
pop
add
and
xchg
fldcw
sub
adc
js
add
aas
aas
dec
outs
add
sub
jecxz
xchg
arpl
mov
inc
std
mov
mov
in
push
inc
push
mov
xor
fdiv
or
repnz
xor
push
mov
aam
nop
out
inc
push
mov
add
ficom
fwait
test
cwde
add
out
rol
or
or
mov
adc
adc
pop
xor
(bad)
scas
clc
call
je
ret
jae
aas
inc
or
and
dec
mov
dec
rcr
(bad)
sub
ret
lds
push
adc
pop
js
dec
mov
push
std
jg
or
push
pop
jae
xor
movs
mov
and
mov
pop
or
push
enter
push
or
cld
test
in
pop
arpl
sub
je
jp
clc
loope
sub
adc
arpl
fwait
add
pop
add
(bad)
ror
dec
(bad)
repz
and
dec
jmp
icebp
std
push
cld
pop
inc
push
push
je
syscall
xor
mov
ins
and
mov
jle
call
cld
push
mov
out
mov
dec
or
adc
lock
jns
mov
loop
shr
cdq
add
adc
out
aaa
push
add
jge
xor
xor
sar
and
aas
or
sub
mov
push
mov
aad
sbb
das
inc
hlt
add
jae
add
lock
test
btr
std
push
sbb
sbb
cmp
cmp
ja
je
mov
mov
mov
and
lods
pop
je
dec
mov
inc
add
ffreep
(bad)
repnz
jmp
movs
or
fdivr
enter
pop
push
shl
sub
retf
add
(bad)
pushf
inc
out
add
mov
in
dec
fnsave
push
xor
push
arpl
inc
xor
fcomp
es
test
cld
out
pop
mov
pop
in
push
ret
clc
fidiv
mov
pop
test
inc
ret
add
outs
and
mov
inc
mov
adc
inc
sub
jmp
stos
mov
sub
ret
pop
inc
push
push
push
lds
inc
add
adc
lods
nop
adc
pop
mov
cmps
jne
xor
clc
push
inc
(bad)
or
add
push
sbb
inc
inc
jo
call
push
adc
out
pop
not
mov
mov
cli
push
jb
rcr
ret
sub
loopne
mov
sub
or
jmp
inc
mov
jmp
push
out
out
out
mov
mov
mov
xchg
std
out
cmps
push
jae
les
imul
ins
retf
push
mov
test
inc
dec
outs
sbb
add
pop
icebp
xchg
fs
lods
mov
and
imul
std
jg
add
pop
std
sub
jle
outs
xor
mov
sub
mov
xor
je
hlt
nop
bound
mov
imul
(bad)
mov
test
rcl
jge
lock
out
xchg
add
repz
dec
sbb
pop
dec
inc
and
mov
adc
mov
push
test
add
aaa
xchg
push
test
push
aas
add
ret
es
in
bound
out
ins
aas
and
push
cli
movs
push
cmc
ffreep
xchg
mov
inc
inc
aas
popf
inc
xor
jg
add
push
inc
mov
sub
or
and
add
mov
iret
inc
cmp
sti
daa
pop
clc
stos
(bad)
fwait
clc
jg
fs
push
test
daa
inc
ret
ins
jmp
push
int3
jl
les
and
jo
pusha
add
jno
add
pop
xchg
outs
xor
cmp
call
adc
aam
pop
test
sub
stos
inc
sub
push
push
jge
neg
pop
jb
clc
out
fsub
and
mov
pop
js
push
mov
ins
inc
push
push
repz
push
inc
pop
hlt
inc
mov
add
mov
add
aaa
xchg
js
add
loop
mov
jl
adc
jl
je
dec
mov
icebp
xchg
jl
sbb
pusha
xlat
cmc
push
adc
inc
adc
mov
out
sti
mov
adc
and
sbb
add
fwait
mov
inc
add
mov
rol
jge
push
add
aad
mov
pop
cwde
add
mov
jmp
inc
jmp
cli
lock
out
mov
push
das
shl
dec
das
add
rcr
pop
lahf
cmps
pop
xor
dec
adc
inc
pop
xor
add
sbb
fld
xchg
dec
cs
push
mov
and
xor
inc
adc
sbb
cs
ss
xor
xlat
gs
gs
mov
dec
jmp
mov
lahf
or
in
dec
mov
repz
mov
sub
das
inc
ret
dec
(bad)
pop
jmp
fbld
retf
jmp
mov
push
sti
mov
outs
adc
or
add
xchg
or
cmc
ins
cld
mov
loopne
add
daa
(bad)
fadd
mov
mov
idiv
call
inc
push
add
mov
fistp
(bad)
mov
jb
jbe
add
stos
test
fisubr
loopne
das
in
inc
add
xor
ret
mov
scas
stos
enter
mov
add
dec
out
mov
push
add
ret
add
sub
pusha
mov
in
push
sti
add
pop
addr16
out
pusha
test
inc
rcr
adc
out
shld
jno
inc
ret
lods
movs
arpl
push
dec
(bad)
pusha
xor
mov
mov
shr
mov
call
pushf
movs
pop
fs
add
lods
inc
je
xor
sti
xchg
stos
dec
out
dec
mov
out
jno
lea
jb
mov
mov
pop
(bad)
ret
add
mov
popa
mov
daa
hlt
adc
dec
mov
pop
out
adc
mov
fst
aas
adc
outs
sbb
ins
aas
mov
mov
loop
jg
add
not
add
add
dec
out
lahf
sbb
(bad)
cmp
inc
or
mov
inc
jp
mov
mov
movs
add
inc
lock
out
push
mov
aam
mov
xor
pop
sti
dec
push
add
cld
dec
out
jmp
add
mov
xor
not
push
dec
(bad)
(bad)
clc
push
aam
fimul
sbb
jbe
out
dec
dec
sub
pusha
xor
pop
xor
fadd
dec
into
(bad)
cld
xor
sbb
ss
mov
adc
outs
jecxz
mov
jae
or
jg
jae
enter
pusha
and
pop
pop
fcom
call
and
(bad)
stos
mov
sahf
iret
out
mov
cmp
mov
lods
pushf
or
fild
test
inc
or
add
stos
jp
mov
mov
or
mov
push
xchg
xchg
push
cli
inc
mov
dec
neg
dec
cmp
jp
inc
sub
std
jg
mov
clc
(bad)
out
add
adc
mov
add
icebp
lock
dec
imul
gs
or
sbb
mov
arpl
std
mov
push
(bad)
out
dec
pop
add
add
xor
outs
pop
dec
inc
pop
pop
hlt
dec
push
jae
pusha
(bad)
sub
mov
shr
cmp
adc
push
sub
inc
dec
mov
and
mov
(bad)
pop
pop
push
sbb
jl
pop
test
xor
inc
je
add
push
add
push
push
or
adc
std
push
inc
cs
sti
arpl
out
xor
lea
adc
popf
clc
mov
outs
xor
or
ret
out
icebp
lds
and
mov
clc
add
pop
pop
mov
and
ins
std
fwait
or
xchg
ja
mov
inc
add
pop
gs
lds
imul
sbb
das
mov
mov
aam
ret
sbb
aam
jmp
mov
scas
sar
arpl
xchg
outs
std
add
jno
mul
loop
mov
nop
cmp
dec
adc
add
inc
mov
inc
pop
add
cld
jb
cmp
in
mov
std
das
movs
or
imul
dec
cld
stos
mov
in
add
es
imul
dec
add
xor
mov
add
dec
dec
int3
adc
shr
xor
pop
mov
inc
sti
pminub
inc
pop
dec
sti
mov
loopne
xchg
loopne
mov
or
les
jae
sar
inc
mov
add
(bad)
sti
mov
mov
adc
aas
adc
(bad)
shr
aaa
add
add
aas
sub
test
(bad)
out
jbe
call
add
test
mov
inc
inc
fs
rol
sub
pop
adc
in
inc
and
inc
push
xor
lds
fist
cmp
std
dec
sti
inc
popf
lahf
sti
je
outs
rol
xchg
mov
shl
bound
cli
mov
inc
sahf
mov
inc
test
mov
jb
inc
outs
jl
movs
aas
mov
pop
or
lock
inc
adc
push
adc
pop
les
int3
aam
arpl
pop
and
aas
pop
fstp
pop
adc
aas
pop
call
aad
je
(bad)
lahf
push
jecxz
or
push
ins
xchg
test
xor
or
add
sbb
fs
call
pusha
out
mov
jmp
test
jno
fwait
inc
mov
or
xor
inc
xor
cld
dec
sub
cli
js
push
cmps
loope
mov
sub
sahf
jmp
and
pop
ds
push
push
retf
inc
push
mov
ins
jge
dec
mov
adc
jno
imul
push
or
cs
outs
inc
sub
pop
sub
imul
loop
or
jg
adc
mov
jo
ds
add
inc
outs
jno
add
bswap
inc
ror
mov
push
cli
xchg
pop
ins
xor
(bad)
arpl
scas
aas
mov
test
pusha
pop
xchg
and
mov
xor
dec
je
std
dec
inc
mov
push
inc
cmp
test
push
push
fimul
in
push
jmp
xor
sub
sbb
add
into
pop
add
mov
je
sbb
and
or
mov
adc
xor
and
push
and
call
jle
test
fucomip
mov
mov
stos
push
psubw
mov
pop
rcr
test
mov
mov
cwde
lds
push
gs
jmp
adc
adc
add
(bad)
aam
pop
push
fs
mov
fild
ror
pop
cmp
call
or
test
rcl
cmp
(bad)
cmp
and
sbb
jp
adc
outs
xor
cmp
mov
ins
add
pop
sbb
add
aad
fbld
cmp
mov
cmp
inc
into
test
data16
stos
retf
bound
dec
push
cmp
adc
add
dec
adc
jb
jne
out
mov
add
mov
aaa
sbb
(bad)
inc
push
add
cmp
repz
or
inc
jmp
dec
mov
jmp
push
xchg
(bad)
pop
cvtps2pd
and
jae
jp
aam
shl
mov
add
mov
dec
lods
call
inc
lea
dec
sbb
jle
add
clc
adc
inc
mov
sub
hlt
pop
jmp
cmp
cmp
jmp
mov
add
loopne
rol
mov
lods
arpl
push
retw
jo
push
fsub
inc
push
imul
pop
ret
fiadd
sbb
mov
xor
or
jae
adc
outs
stos
xor
xchg
lock
jle
rcr
pop
add
xor
xor
mov
and
dec
xor
add
add
inc
adc
pop
hlt
test
mov
das
push
jl
ss
inc
es
cmp
loop
inc
pop
ret
adc
push
adc
ret
imul
shl
dec
mov
inc
jl
dec
ss
lods
add
jae
lock
lds
rol
test
mov
and
jg
sti
scas
sub
inc
ret
test
xchg
clc
dec
loopne
and
aas
xor
gs
cmp
mov
xor
sar
div
pop
imul
mov
shl
sti
(bad)
mov
cmp
adc
mov
(bad)
inc
and
outs
xchg
push
sbb
iret
mov
sub
jnp
jmp
push
pop
sub
adc
lahf
push
mov
pop
add
icebp
retf
xchg
cmp
or
pop
cmp
inc
jae
les
jle
inc
jg
push
jae
mov
add
pop
add
aas
xchg
push
js
cmp
stos
jbe
inc
(bad)
mov
xor
jno
(bad)
fistp
inc
mov
inc
or
jo
loopne
test
cmp
xor
out
push
(bad)
fnstsw
inc
pusha
data16
arpl
pop
xor
cmps
sub
int3
xor
out
call
pop
mov
mov
idiv
cmp
lahf
mov
lds
cmps
or
shl
sub
cdq
cmp
or
pop
aas
or
ret
ins
jl
mov
or
repnz
and
aas
pop
gs
pop
mov
mov
inc
(bad)
rcr
sub
mov
retf
fs
ret
add
neg
sbb
add
mov
jecxz
retf
iret
movzx
data16
ficomp
mov
adc
mov
lahf
into
es
add
inc
pop
mov
jg
scas
sbb
jmp
(bad)
xor
adc
lahf
adc
ja
push
sahf
xor
popa
dec
and
xchg
pusha
adc
out
xchg
or
add
or
lea
dec
adc
pmuludq
jns
mov
pop
or
das
sub
in
bound
imul
sub
cld
inc
xor
mov
xor
mov
push
ror
or
inc
mov
sti
imul
(bad)
dec
mov
inc
pop
push
mov
push
call
rcr
xor
fild
jmp
or
add
call
outs
(bad)
jle
inc
enter
cmp
or
sti
push
inc
ror
out
les
mov
je
jae
out
xor
push
sub
sbb
out
in
mov
aam
inc
dec
ins
clc
repz
fistp
dec
push
rcl
bound
data16
rcr
jae
std
out
push
aad
inc
inc
xor
jb
push
xlat
adc
mov
js
stos
repz
pushf
outs
ret
push
js
push
mov
pop
and
and
test
lock
push
ja
or
data16
mov
loop
xor
dec
js
in
mov
push
push
jp
push
push
shl
aas
gs
(bad)
mov
push
xor
out
xor
sti
or
test
stos
dec
jge
aad
jl
pop
inc
inc
adc
inc
hlt
out
inc
mov
fist
xor
fbld
push
xor
call
pop
aas
or
bound
ret
rcl
xor
mov
push
push
(bad)
pop
adc
retf
mov
out
mov
jo
movs
aaa
adc
xor
push
daa
jmp
jmp
or
inc
push
aad
jae
pop
sub
(bad)
mov
mov
inc
jae
ds
mov
div
idiv
jg
test
add
jmp
imul
sti
and
(bad)
sbb
lock
outs
adc
inc
outs
imul
pop
pop
imul
jl
cmc
and
sahf
lds
sub
jle
repnz
rcl
or
call
aaa
test
lds
(bad)
jg
arpl
pop
pop
(bad)
jno
push
mov
ja
pop
inc
push
je
push
mov
ja
sbb
loop
call
mov
cmp
mov
movs
aas
fdiv
push
pop
and
add
out
not
dec
(bad)
cmp
sub
add
(bad)
mov
arpl
repnz
stos
pusha
ja
ins
lds
and
rcr
adc
mov
cmc
cli
jmp
pop
paddd
cmp
sti
arpl
cmp
stos
fcomp
jmp
adc
push
(bad)
pop
pop
clc
and
cmps
icebp
std
arpl
scas
sti
sub
dec
dec
data16
add
xor
add
sbb
push
pusha
std
inc
cmp
dec
rcl
push
dec
fs
jmp
repnz
dec
inc
js
out
jb
scas
mov
sbb
xlat
jno
mov
sar
cwde
pop
xchg
add
ja
add
and
pusha
std
xchg
mov
out
jmp
xor
pop
arpl
pop
cmp
mov
mov
mov
add
ins
push
push
rcl
les
jae
jl
pop
push
adc
sbb
jl
(bad)
push
and
xchg
xor
test
aas
sbb
(bad)
jl
aam
loope
and
cli
push
add
push
pop
inc
pop
sbb
mov
sahf
jge
lds
mov
ins
jecxz
sbb
push
xor
test
pop
mov
add
jg
std
mov
mov
das
lods
adc
mov
mov
mov
push
mov
adc
cmp
iret
pop
mov
ret
call
sbb
loop
ins
pop
ret
mov
inc
and
xchg
add
jnp
scas
adc
loop
push
imul
xor
pop
retf
mov
inc
mov
add
fistp
add
mov
pop
cmps
sar
xor
mov
mov
jne
mov
mov
pop
sbb
or
es
out
add
jl
or
mov
jecxz
or
push
nop
pop
ins
jl
inc
push
inc
push
dec
lds
mov
(bad)
xlat
mov
push
push
adc
sti
and
sti
int
add
scas
or
sbb
das
xor
scas
(bad)
mov
pop
arpl
call
jmp
je
cmps
mov
jmp
push
mov
pop
or
and
ret
mov
sub
ins
adc
mov
sahf
pop
dec
retf
jp
sub
std
xor
push
mov
push
(bad)
icebp
mov
std
adc
jne
test
(bad)
sbb
jo
cmp
jp
cmp
outs
mov
(bad)
jmp
addr16
lods
sbb
inc
adc
daa
lock
mov
sbb
sar
add
push
(bad)
inc
add
cs
mov
sbb
imul
pop
div
adc
or
arpl
or
pusha
int
idiv
inc
mov
mov
mov
inc
stc
mov
pop
jle
cmp
in
jae
or
sbb
push
push
add
add
mov
xchg
cwde
adc
add
(bad)
mov
mov
add
sub
xor
icebp
outs
cli
lds
pop
pop
inc
test
xchg
into
xor
sbb
cld
mov
mov
je
out
and
imul
out
pop
and
xchg
push
cld
lock
pop
mov
cwde
jbe
cmp
or
idiv
iret
je
sbb
push
push
(bad)
div
mov
or
(bad)
xlat
sti
push
xor
in
mov
sbb
out
mov
(bad)
adc
ins
inc
fisttp
mov
ss
mov
mov
or
adc
retf
ds
inc
mov
and
in
mov
aam
dec
push
fisub
mov
add
inc
sbb
lds
xchg
(bad)
mov
jle
movs
jg
add
jg
outs
mov
(bad)
test
push
push
push
ins
pop
add
in
push
push
inc
push
lds
sbb
imul
pop
aad
call
addr16
outs
xchg
jno
jmp
ja
pop
aaa
push
aad
ja
divps
inc
sbb
test
test
add
inc
push
test
call
mov
inc
pop
xor
jbe
std
out
mov
or
pop
sahf
mov
or
mov
aas
in
movlhps
cmps
pop
mov
fs
mov
lahf
ret
xor
dec
je
scas
jmp
mov
out
(bad)
sub
addr16
cmp
ins
dec
std
je
mov
ficom
movs
jne
icebp
ja
icebp
das
pop
inc
mov
pop
cld
sbb
pop
into
out
std
scas
add
lock
push
sbb
lock
daa
(bad)
xor
cli
scas
or
push
out
ficom
lods
test
mov
rcr
les
sub
(bad)
push
inc
jb
cmc
xchg
adc
mov
fdivrp
ins
call
sbb
sbb
jp
or
jmp
jne
push
push
adc
pop
xchg
retf
out
add
and
adc
cmp
test
test
jg
ins
add
es
pop
add
adc
enter
outs
mov
mov
mov
add
add
arpl
ja
push
or
outs
shr
sbb
push
and
mov
les
cmp
cmp
out
jl
mov
aaa
inc
inc
mov
cdq
add
nop
cmp
pop
xor
je
xor
std
ss
xor
pop
pop
push
aas
inc
xor
mov
pushf
imul
or
inc
loopne
(bad)
neg
push
add
(bad)
xchg
or
inc
out
mov
jo
push
int3
mov
mov
aaa
out
dec
rol
into
aad
pop
mov
mov
into
retf
pop
scas
jmp
xchg
cs
inc
or
pusha
loop
mov
mov
into
push
adc
cmc
adc
ret
std
(bad)
push
push
fs
jmp
add
shl
pop
rcl
mov
fild
jmp
dec
adc
ins
mov
pusha
mov
(bad)
idiv
jecxz
pop
lahf
sub
fisub
cmp
xor
xor
push
outs
and
mov
test
cmp
ficom
dec
sbb
add
xchg
fwait
sub
push
ret
ret
dec
inc
inc
(bad)
mov
inc
scas
jg
sbb
inc
xor
cmp
xlat
cld
cwde
xor
mov
inc
jne
sub
mov
lods
lods
sbb
lods
call
dec
inc
jle
adc
or
jmp
inc
cmp
lods
push
or
(bad)
in
jno
ret
or
lahf
mov
push
or
ror
ds
mov
pop
sub
ja
push
push
or
int3
dec
mov
in
inc
mov
jle
(bad)
mov
mov
pop
imul
cld
out
xor
xchg
lock
aam
mov
ja
test
popa
aam
mov
or
cmpxchg
les
hlt
jecxz
sbb
mov
pop
inc
jb
mul
rcl
dec
jmp
mov
inc
inc
cld
std
xor
stos
push
rcr
mov
inc
xchg
mov
xchg
rol
das
sbb
mov
outs
mov
pop
xor
push
adc
inc
clc
mov
test
jg
mov
xchg
(bad)
adc
repnz
xor
fs
(bad)
mov
adc
sahf
(bad)
mov
pop
cli
das
inc
sar
aad
pop
and
mov
push
dec
xor
mov
sbb
outs
dec
pop
mov
adc
loop
xchg
(bad)
in
add
popa
in
das
(bad)
out
push
dec
jo
pop
sub
jge
or
ret
scas
push
outs
jecxz
jmp
lods
jae
mov
jmp
mov
test
neg
pop
ins
fidivr
sub
in
mov
dec
mov
dec
leave
punpckldq
mov
shl
enter
mov
out
sbb
in
gs
mov
test
dec
jb
fisub
adc
ror
xchg
cmp
das
push
adc
sahf
out
cli
inc
pusha
repz
mov
dec
(bad)
cmp
jg
jmp
fdivrp
jg
cmc
cmc
sbb
mov
pop
or
or
inc
dec
jmp
jg
pop
gs
dec
lods
inc
sub
das
cwde
retf
xor
cli
mov
or
xor
sti
add
mov
and
cmp
mov
jne
jmp
das
push
inc
pop
add
outs
sahf
test
ja
push
xchg
mov
call
dec
pop
sub
psubq
in
pop
loop
dec
sub
call
xchg
mov
push
add
pusha
sub
es
outs
pop
push
jp
pop
mov
xchg
jecxz
std
imul
hlt
pop
add
push
add
and
push
jo
push
cmp
push
xchg
dec
out
test
pop
ret
sub
loope
sub
adc
cmp
lock
fidiv
push
ins
scas
mov
inc
pop
pop
and
(bad)
jmp
mov
pop
xchg
arpl
and
rol
inc
movs
out
cmp
pop
outs
push
and
out
je
cli
ret
ret
adc
sub
leave
movs
mov
jl
ret
sbb
or
fisub
ret
xchg
pop
push
stc
adc
inc
ret
std
clc
bound
push
fld
push
pop
xor
popa
sbb
cld
sbb
inc
push
inc
fild
test
push
std
pop
pop
outs
test
mov
imul
xor
ins
mov
adc
or
ret
push
jbe
add
mov
enter
pop
cmp
xor
je
stos
movs
(bad)
out
nop
out
fstp
xor
pushf
xchg
push
aaa
lea
fsubr
mov
ret
arpl
pop
add
push
mov
push
sub
dec
dec
xchg
imul
pop
add
fcmovnb
push
add
pop
fs
not
out
add
loopne
fadd
or
mov
pop
aaa
shl
sub
pop
and
fs
aaa
cli
sub
adc
ror
xor
push
(bad)
bound
cs
add
jo
mov
(bad)
rep
pop
inc
lds
fcomp
or
pop
aas
test
inc
pop
sar
in
push
test
(bad)
cmps
lahf
idiv
jb
ins
aaa
loope
jmp
push
(bad)
push
mov
out
sahf
inc
xchg
and
mov
rol
fild
neg
add
fs
mov
jp
(bad)
fist
mov
pop
inc
mov
adc
mov
ret
cmp
pop
ret
dec
adc
out
add
mov
test
add
(bad)
outs
pop
or
pusha
out
add
es
adc
ret
fisttp
jae
pop
push
cmp
hlt
inc
mov
xor
into
inc
cld
xchg
inc
pop
push
sub
cmps
mov
inc
xor
repnz
fsubr
mov
push
(bad)
jle
cmp
xchg
stc
je
sub
mov
xor
jno
in
fisub
inc
add
push
push
mov
(bad)
cli
push
jmp
inc
mov
or
call
sar
repnz
pop
and
push
pop
mov
inc
jp
pop
sar
mov
in
and
mov
or
mov
inc
movsx
cmps
sub
xchg
jae
das
retf
xlat
pop
adc
or
aaa
test
and
(bad)
out
or
inc
int3
icebp
(bad)
fs
adc
mov
(bad)
test
add
inc
adc
sar
sub
cmp
add
cmps
call
and
jnp
push
jmp
xchg
xor
jl
and
dec
loopne
add
rcr
lds
jle
fs
sub
scas
dec
pop
mov
ds
sbb
rol
and
cli
cs
arpl
sub
push
inc
mov
fiadd
dec
inc
xchg
ss
xor
jmp
(bad)
aad
out
out
pop
(bad)
call
cwde
cmps
xor
or
dec
(bad)
push
or
jo
sbb
cld
push
adc
test
fcom
mov
push
cwde
inc
loop
(bad)
sbb
mov
xchg
cli
push
fisub
mov
dec
dec
ds
pop
pop
lea
mov
(bad)
stos
dec
adc
mov
jb
idiv
xor
andnps
push
inc
fbld
pop
and
ja
mov
out
add
pusha
cmp
push
mov
mov
cwde
outs
std
rcl
ret
dec
inc
je
push
sub
aas
dec
pop
je
or
fld
ret
and
(bad)
call
xor
(bad)
jmp
dec
mov
in
pop
xchg
cmp
sti
int
mov
iret
lds
call
outs
into
add
fwait
(bad)
push
jp
mov
inc
aam
rol
mov
ins
aaa
call
mov
inc
mov
pop
jmp
repz
dec
fs
and
loopne
es
xor
or
or
adc
push
icebp
out
mov
neg
or
sub
pop
mov
and
dec
mov
push
push
pop
xor
cmp
out
xor
sbb
retf
mov
add
out
jo
and
stos
mov
out
test
sbb
repnz
in
mov
cli
das
add
sub
(bad)
fnstsw
mov
push
hlt
xor
pop
ins
cld
arpl
pop
xor
sbb
push
mov
sbb
lahf
fnstcw
push
mov
js
mov
jecxz
and
ja
push
lods
arpl
out
sti
sbb
js
enter
das
push
pop
(bad)
cmp
xor
sub
popa
mov
sar
or
add
jmp
fidivr
repnz
cli
arpl
std
movs
mov
push
(bad)
mov
mov
mov
ins
add
(bad)
xlat
or
add
sub
add
mov
dec
test
ror
add
fmul
pop
test
xchg
(bad)
dec
inc
pop
jae
(bad)
and
inc
inc
dec
ret
and
mov
mov
sbb
pushf
add
loope
xchg
mov
pop
neg
aas
xchg
lahf
mov
or
sub
mov
inc
scas
mov
shr
dec
jo
jmp
jl
mov
jl
inc
inc
jp
rol
aaa
dec
out
sub
je
cmc
inc
jb
jae
mov
pop
or
add
push
repnz
mov
adc
sub
mov
out
aam
sbb
adc
add
mov
jns
test
mov
outs
out
pusha
push
call
inc
(bad)
cmp
push
xor
dec
jl
adc
enter
pop
ret
push
or
test
cmps
(bad)
pop
mov
push
mov
mov
jbe
and
inc
xor
aas
dec
inc
stos
enter
push
or
mov
shl
retf
mov
add
jae
pop
mov
add
repz
push
or
or
inc
pop
and
iret
outs
inc
fisubr
fidivr
dec
cs
mov
push
rcl
xor
adc
aaa
or
adc
add
xor
pushf
(bad)
adc
and
rcr
fild
or
xchg
inc
mov
xchg
or
in
jo
jmp
ret
gs
mov
xchg
test
les
fwait
ins
add
ror
std
imul
fld
movs
pusha
jo
xchg
mov
push
gs
div
add
add
fisubr
sti
pusha
std
sub
push
call
ror
xchg
ds
mov
pop
das
mov
dec
or
jp
sbb
push
ret
(bad)
aaa
push
pusha
jg
push
lods
cmp
outs
ss
(bad)
out
adc
arpl
ja
js
push
(bad)
xchg
or
jg
sti
test
sbb
mov
lahf
lds
push
sar
or
sub
inc
jmp
adc
pop
jecxz
or
sti
sbb
ret
or
idiv
add
dec
cli
sbb
ret
or
or
jb
ror
les
add
sti
pop
add
jg
push
mov
mov
mov
jl
je
stos
call
inc
or
ja
inc
xor
imul
xchg
nop
and
push
mov
inc
fst
int
push
mov
and
xor
xor
pusha
out
or
push
mov
(bad)
imul
or
cmp
push
ins
inc
cmc
or
aas
pop
cmp
nop
retf
mov
ss
mov
movs
mov
pop
add
or
inc
inc
(bad)
pusha
pop
add
das
js
xor
sbb
inc
mov
push
aas
icebp
arpl
xchg
out
xchg
adc
std
fcomp
add
add
ret
test
retf
jl
pop
inc
add
sub
xor
mov
sub
or
ret
dec
outs
or
adc
pop
jb
sub
adc
add
jae
cmp
mov
sar
push
imul
push
ins
je
(bad)
nop
sub
cmp
in
mov
mov
ficomp
jle
das
mov
mov
inc
push
sbb
or
push
inc
sub
jae
mov
sub
not
or
movs
ror
add
xor
icebp
dec
ror
xor
call
pusha
sbb
add
rcr
xchg
xlat
sti
lds
xlat
inc
pslld
imul
mov
shr
inc
fild
xchg
arpl
cmps
call
jae
add
jg
mov
dec
ins
add
cld
mov
rol
jb
mov
push
adc
mov
inc
adc
fcomp
fdiv
pusha
imul
lahf
and
push
cmp
sbb
mov
out
gs
mov
cmc
das
xor
movs
pop
inc
lahf
cwde
inc
sub
pop
mov
aaa
test
mov
fs
aas
mov
out
mov
mov
test
jmp
cmps
dec
fiadd
inc
inc
fs
cmp
xor
stos
shr
js
(bad)
fbld
push
add
mov
push
push
ret
mov
add
mov
sub
(bad)
outs
(bad)
add
(bad)
stos
push
inc
and
sbb
dec
sti
inc
rcr
std
dec
lahf
icebp
ffree
add
out
and
and
scas
mov
inc
or
jp
loop
pop
mov
push
jp
pop
xchg
mov
pop
ins
xchg
repnz
ins
sub
adc
clc
jp
mov
xchg
add
adc
mov
fs
out
data16
sub
out
ficom
pop
fdivr
jnp
fcomp
and
sbb
adc
das
push
dec
cld
addr16
bndldx
sbb
push
sub
mov
out
sbb
inc
into
bound
(bad)
mov
or
dec
inc
js
addr16
or
xchg
test
mov
add
xchg
stos
loopne
add
sub
xor
xor
xor
aaa
dec
and
push
lods
mov
push
jb
outs
daa
xchg
fwait
push
hlt
pop
push
jmp
pop
or
pop
je
aaa
jg
jp
mov
fs
xchg
cld
outs
test
push
out
xlat
or
fiadd
fild
sahf
stc
push
mov
xrelease
ret
lods
jmp
sti
enter
ret
(bad)
clc
ret
mov
dec
add
mov
xchg
xchg
dec
(bad)
aas
(bad)
xchg
je
repz
dec
stos
jb
and
jmp
je
sti
mov
jbe
or
or
jl
bound
adc
(bad)
jl
inc
ret
jg
add
cli
sahf
mov
sbb
adc
mov
jb
add
fcmovb
je
fisttp
gs
inc
cmove
inc
imul
or
jge
rep
push
inc
aad
mov
cmp
ficom
scas
mov
jecxz
les
hlt
xor
add
adc
mov
push
aas
jg
push
mov
call
xchg
mov
push
addr16
pop
test
xor
add
ja
(bad)
and
loop
mov
or
mov
fs
bound
sub
push
scas
push
loopne
ss
mov
in
fldl2e
sub
pusha
mov
adc
pop
adc
clc
mov
adc
jg
push
gs
ds
mov
mov
add
inc
ret
(bad)
mov
(bad)
jmp
std
out
sub
add
cld
loope
loope
mov
lods
sub
ret
(bad)
mov
inc
aas
aas
rcl
aas
or
pushf
fs
add
push
inc
retf
jmp
enter
push
dec
jbe
(bad)
call
pop
jb
sbb
push
or
inc
xor
ret
pop
mov
outs
and
dec
push
call
mov
jbe
mov
es
jmp
out
loopne
add
push
imul
push
ss
sbb
js
enter
push
dec
lock
mov
enter
fidiv
sub
nop
pushf
and
out
inc
add
outs
mov
mov
dec
stos
mov
psubsw
pushf
adc
adc
inc
lahf
push
pop
jbe
and
dec
or
call
cmc
mov
(bad)
je
jo
pop
push
cmc
sbb
add
pop
xor
push
dec
mov
sar
shl
sbb
(bad)
pop
mov
push
repnz
add
ror
add
scas
cli
jl
inc
arpl
mov
xchg
inc
jnp
ret
(bad)
adc
dec
xor
dec
or
call
inc
push
mov
push
pop
outs
dec
pop
add
sar
jp
push
cld
fwait
cwde
hlt
adc
ret
mov
add
fld
inc
outs
and
je
sbb
dec
ror
cmp
je
push
mov
ja
mov
jle
jmp
loopne
cmp
movnti
pop
jae
arpl
repz
outs
add
ret
mov
push
sub
and
pop
add
ins
inc
jmp
(bad)
shl
ffree
outs
push
aas
ret
inc
dec
mov
dec
pop
add
mov
xor
std
xlat
add
pushf
inc
cli
out
xchg
imul
loop
pop
lds
push
inc
adc
adc
dec
rcl
scas
inc
rcr
inc
jle
bnd
xchg
ins
jno
xor
lods
cwde
mov
call
or
(bad)
and
push
stos
data16
inc
fcom
pop
in
pop
dec
cli
out
out
inc
shl
fs
inc
adc
and
or
ss
add
xor
movs
sub
mov
vpaddq
adc
push
mov
fdivr
and
shl
je
xchg
mov
mov
call
out
arpl
rcl
outs
jmp
inc
call
push
adc
enter
or
test
or
pop
mov
pop
sti
mov
pop
test
repz
adc
push
stos
mov
pop
sbb
push
lock
loopne
jno
inc
dec
out
pop
shufps
sti
and
and
cmc
mov
push
inc
pop
jp
pop
cs
pusha
out
or
into
inc
je
mov
sar
sub
and
xchg
push
pop
test
ins
adc
add
push
adc
push
das
mov
sbb
sar
fsub
out
(bad)
push
stc
add
and
jmp
xchg
popa
gs
cmc
mov
ret
inc
inc
pusha
xor
push
ins
xchg
mov
push
cwde
sti
cli
dec
ud2
lock
call
pop
xlat
inc
push
neg
xchg
push
sub
sub
push
mov
arpl
mov
out
push
pop
(bad)
and
pop
das
push
inc
rcr
xchg
cmps
add
sbb
push
pusha
repz
mov
push
xor
outs
mov
ficom
mov
sbb
push
sub
jecxz
mov
das
dec
ret
dec
test
addr16
push
add
enter
cmp
jp
inc
add
pusha
push
or
into
xchg
push
(bad)
or
fild
jmp
push
imul
outs
pop
inc
fidiv
ja
outs
adc
mov
or
fdiv
push
pop
xchg
mov
mov
inc
sub
mov
push
mov
loopne
or
jns
or
sub
jg
cmp
xchg
test
pusha
or
loop
sbb
std
outs
pop
mov
or
push
push
mov
xchg
mov
loopne
mov
and
jmp
or
adc
(bad)
call
icebp
mov
mov
add
push
mov
xor
add
movs
xchg
push
or
mov
mov
ror
fiadd
xchg
push
clc
aaa
cmp
push
jle
xor
mov
mul
add
shr
push
stc
ret
xor
xor
mov
xor
sub
jmp
fmul
sub
es
mov
xor
add
mov
add
(bad)
iret
(bad)
adc
(bad)
inc
mov
adc
enter
add
push
pop
cmc
or
dec
retf
xchg
mov
call
push
mov
mov
push
imul
lock
xor
mov
sub
imul
xor
pushf
mov
std
(bad)
std
xor
xor
sub
mov
xchg
loopne
lock
jae
(bad)
and
lar
mov
pop
and
imul
cmp
add
ins
mov
jb
xor
movs
lods
in
rcl
pop
cmp
rcl
mov
mov
xchg
adc
or
pop
mov
dec
adc
mov
stos
add
mov
mov
ret
cmp
mov
out
mov
mov
or
test
dec
repnz
shl
ins
loope
loop
stos
sub
icebp
mov
pop
adc
popf
shl
mov
and
inc
or
ja
jmp
or
rcr
int3
pop
sub
in
pop
inc
movs
sar
js
or
adc
xchg
or
cs
mov
dec
push
pop
mov
mov
jecxz
in
cs
outs
add
clc
aam
xlat
add
push
or
push
lock
xchg
mov
mov
and
cmp
rol
dec
repnz
mov
mov
test
sub
xchg
xchg
jmp
ds
idiv
xor
and
mov
ja
mov
(bad)
(bad)
(bad)
or
popa
jge
push
jg
inc
div
clc
push
hlt
or
daa
inc
pop
das
nop
mov
sbb
add
ins
jmp
add
inc
(bad)
mov
fdivr
mov
or
ret
sub
mov
push
jmp
movups
int3
or
jg
jge
mov
add
inc
jg
jge
shl
jle
xchg
push
inc
push
sar
cmps
not
(bad)
xor
leave
jge
or
push
ss
jecxz
push
aad
fucomi
add
les
jecxz
xor
mov
mov
jo
or
mov
jle
in
pop
add
dec
int3
mov
lea
mov
mov
push
jg
fadd
push
mov
ficomp
ss
into
mov
mov
int3
push
ins
clc
rcr
xor
mov
ret
pop
lock
nop
es
ins
or
sbb
sub
mov
retf
scas
imul
ins
mov
add
add
xor
jo
and
clc
mov
(bad)
mov
mov
jbe
or
inc
sub
inc
outs
test
cwde
xchg
jmp
jbe
sti
xor
mov
(bad)
imul
retf
mov
mov
adc
jl
mov
jmp
cmp
adc
mov
sub
and
pop
mov
(bad)
mov
(bad)
mov
xor
add
mov
cmp
dec
out
push
mov
or
stos
js
xchg
adc
xchg
aas
dec
mov
jp
cmps
add
pop
lock
(bad)
in
stc
(bad)
and
cmp
pop
mov
add
fisubr
push
sahf
cmp
add
js
stos
(bad)
aaa
mov
inc
pusha
in
mov
enter
mov
mov
pop
outs
pop
mov
shl
fdivr
sahf
ja
fs
mov
push
inc
sbb
sub
cmps
stos
(bad)
sbb
xor
mov
ret
fist
fidiv
sar
sub
mov
pop
pop
or
nop
sbb
mov
or
cmp
imul
mov
xchg
xor
les
(bad)
xor
iret
mov
add
push
push
mov
add
mov
lahf
mov
sub
out
push
push
jne
lods
js
fiadd
sub
in
add
xchg
pusha
add
jmp
(bad)
pop
cld
sti
push
ret
adc
ror
sub
pusha
test
add
pop
sbb
(bad)
lahf
clc
mov
mov
xor
int3
js
scas
mov
push
inc
clc
dec
xlat
sub
mov
out
fdivr
lahf
add
mov
xor
movs
jne
adc
loope
jecxz
sub
dec
inc
jb
call
loop
stc
push
or
sti
mov
mov
xor
sbb
inc
and
xchg
mov
add
cmps
or
push
repnz
push
mov
jge
or
xor
sub
mov
pushf
mov
mov
(bad)
outs
js
jmp
lods
mov
fcmove
addr16
test
daa
push
and
jmp
scas
in
daa
push
sub
mov
adc
mov
inc
mov
retf
out
rcr
add
push
xchg
or
mov
test
data16
or
fisttp
push
mov
imul
push
out
cmp
pop
add
sub
repnz
add
(bad)
jnp
mov
add
push
(bad)
mov
mov
xor
sub
js
adc
pop
mov
add
push
add
(bad)
hlt
pop
add
push
mov
jg
scas
mov
xor
add
inc
pop
icebp
or
inc
xor
loopne
or
xchg
mov
cmp
add
xchg
mov
push
jae
cli
mov
or
and
cmps
inc
xor
push
pop
inc
mov
sub
aam
mov
mov
or
or
push
mov
mov
and
js
dec
call
mov
mov
xor
adc
add
adc
neg
mov
dec
pop
stos
sub
aas
or
or
mov
test
add
xchg
ins
xchg
xchg
push
sub
add
shr
add
popa
mov
jnp
fidivr
xchg
adc
clc
scas
mov
outs
or
jg
jg
adc
add
jns
push
cmp
jl
mov
jmp
push
jo
mov
mov
or
push
sub
pop
adc
call
icebp
clc
pop
sbb
or
loope
jb
sub
mov
push
or
out
sub
cmc
sbb
cmp
(bad)
or
add
inc
add
sbb
mov
repnz
cmp
js
loopne
mov
pop
xchg
clc
add
cmp
mov
mov
jnp
sbb
mov
mov
mov
mov
add
push
imul
mov
dec
push
or
mov
push
stos
and
cmp
cmp
mov
loopne
scas
daa
hlt
push
jp
(bad)
jge
or
mov
rcl
dec
xor
ror
adc
push
ret
adc
aam
es
xor
jp
call
pusha
and
loope
out
loope
xor
push
mov
mov
add
ss
mov
mov
(bad)
pop
add
mov
push
add
mov
dec
dec
cmps
and
pushf
push
mov
mov
mov
outs
pop
jno
div
pop
cmp
sbb
ds
xchg
add
push
cld
jb
jbe
or
enter
mov
loopne
cmc
mov
rep
adc
hlt
icebp
pop
shl
sbb
mov
and
outs
loopne
cld
xor
mov
jg
cwde
lahf
stos
jecxz
mov
int
sbb
add
mov
or
pop
std
adc
je
pop
scas
pusha
jo
adc
pop
lock
fwait
sub
xchg
xor
or
push
sbb
and
mov
mov
sub
lock
jmp
mov
je
shl
arpl
mov
push
test
clc
loop
push
in
call
cmp
add
inc
xchg
retf
xlat
add
xor
nop
sbb
mov
pop
mov
mov
cld
out
or
cmp
sbb
mov
adc
idiv
or
mov
push
mov
(bad)
mov
repz
jo
lock
add
push
aam
sub
mov
aam
ja
xlat
rcl
scas
out
mov
repnz
mov
std
clc
mov
(bad)
dec
mov
test
sub
mov
sbb
out
sbb
in
pop
xchg
es
cmps
outs
fptan
cmps
(bad)
push
or
mov
xchg
mov
or
into
mov
fidiv
and
adc
pop
fld
sub
sbb
(bad)
or
fimul
call
push
mov
pop
mov
or
rol
inc
add
clc
add
jg
ins
xchg
rcl
loop
add
jnp
ret
mov
mov
int
adc
int3
cmp
pop
inc
mov
aad
loop
clc
ror
jne
mov
push
mov
jnp
jae
repnz
jg
xor
enter
push
clc
sub
xor
mov
or
test
add
ret
sub
ds
and
sbb
mov
xlat
mov
adc
test
cmp
retf
push
imul
mov
pop
mov
jge
jp
fiadd
sar
lea
fdivr
(bad)
loop
xor
pop
loop
xor
rcr
push
mov
add
call
lock
shr
loope
cmp
or
in
pop
pop
ret
out
add
adc
(bad)
(bad)
call
or
and
sbb
add
sbb
adc
sbb
adc
add
or
sub
add
or
nop
sbb
aaa
fwait
sub
xor
fild
cmp
inc
ds
dec
inc
dec
dec
dec
mov
dec
pop
inc
inc
dec
dec
adc
pop
push
sar
call
pop
pop
pop
pop
pusha
pop
jno
ins
imul
push
outs
ins
js
popa
ja
push
inc
xor
push
lock
cmps
mov
(bad)
iret
scas
(bad)
jmp
(bad)
mov
jecxz
cld
les
mov
int
fnstenv
(bad)
(bad)
call
scas
in
jmp
sub
rcr
(bad)
enter
loop
(bad)
(bad)
(bad)
call
hlt
mov
std
popf
mov
fnstsw
fiadd
jl
aad
sahf
in
mov
loope
sbb
mov
cmc
jg
leave
mov
xchg
sar
stc
xchg
ror
dec
inc
jns
je
add
test
mov
daa
in
fisttp
xchg
shr
and
fdivr
(bad)
cmp
pop
push
mov
xchg
mov
clc
(bad)
std
sbb
cwde
paddusw
jge
lods
push
call
mov
xchg
push
bnd
mov
sub
fwait
and
rcl
lea
ret
push
clc
inc
inc
call
mov
sub
ins
adc
sti
fild
cmp
add
push
pop
leave
push
sub
call
jne
stc
std
mov
and
dec
imul
call
cmp
dec
cdq
sub
push
sub
aaa
mov
or
inc
jnp
aam
dec
test
outs
js
dec
inc
mov
sub
add
in
mov
mov
adc
push
sbb
pop
pop
call
add
xor
xchg
out
cmps
stos
std
cmp
jg
es
adc
lds
icebp
sbb
leave
mov
push
mov
mov
loop
pop
shl
inc
movs
push
ret
call
loop
pop
adc
inc
adc
cmps
ret
leave
ja
cmps
repnz
repz
inc
shr
(bad)
std
fld
push
call
mov
add
jge
xor
push
cmp
cs
dec
xchg
nop
mov
and
data16
jne
cmps
icebp
and
sub
mul
add
js
sbb
cmp
daa
jmp
cmps
mov
pop
jge
call
mov
push
mov
xchg
repnz
xor
test
les
dec
idiv
fcom
push
cmp
(bad)
inc
je
adc
inc
div
fmul
push
repnz
sbb
push
inc
je
pop
cmp
inc
push
ss
imul
adc
clc
popa
jg
jo
sbb
add
call
loopne
fs
and
push
push
gs
aaa
test
stos
and
retf
jmp
adc
cmps
cli
(bad)
push
fstp
call
pusha
adc
add
es
jb
cmc
and
pop
cmp
movs
pop
push
cmp
inc
sbb
pop
icebp
jbe
fnstsw
cwde
sbb
(bad)
jb
clc
push
fwait
adc
jbe
push
push
dec
cmps
fcom
cmp
(bad)
or
cmp
lock
(bad)
mov
and
or
fstp
mov
push
push
aaa
dec
je
clc
stc
das
mov
neg
scas
inc
es
cmps
mov
adc
or
loop
and
cmp
cmp
add
inc
and
mov
xlat
adc
and
jmp
es
adc
sub
adc
add
push
mov
mov
push
jl
daa
dec
retf
cmc
outs
dec
test
or
push
pop
or
cmps
inc
push
dec
jl
pop
dec
mov
or
adc
mov
jns
(bad)
pusha
cmp
es
push
jnp
jmp
or
mov
mov
jmp
(bad)
add
pop
cmps
sub
call
adc
push
or
mov
pop
sub
jo
ret
pushf
fidivr
pop
sbb
push
ret
add
mov
dec
adc
ins
imul
clc
data16
xor
ja
je
arpl
arpl
pop
or
ja
pop
pop
inc
ja
jne
mov
xor
jae
jno
push
ds
rcr
shl
fucompp
das
xor
mov
push
and
dec
ror
cmps
mov
shl
mov
push
call
enter
and
in
(bad)
sbb
cmp
enter
enter
cmp
dec
sbb
pop
jle
sbb
fisttp
imul
add
inc
push
xor
sbb
jne
das
push
mov
sub
daa
into
lds
cmc
xor
xor
das
test
xchg
mov
out
not
jne
mov
call
push
jle
or
xor
ins
push
loop
daa
cld
ret
pop
mov
shl
cmp
aam
sbb
cli
popa
div
push
and
out
out
push
mov
inc
ret
int
popa
icebp
jne
mov
push
mov
xor
mov
mov
sub
pop
adc
mov
mov
add
adc
jmp
aam
int3
dec
or
int
pop
mov
push
adc
xor
imul
adc
xor
shl
push
lods
or
aam
push
sub
call
push
sbb
scas
adc
lock
shl
adc
add
shr
cmps
xor
scas
rcl
sub
dec
ror
lahf
sbb
adc
xchg
pushf
sub
mov
push
(bad)
jne
sbb
sub
add
shl
push
add
push
mov
dec
jge
rol
icebp
jle
inc
dec
sub
cld
mov
ds
cmp
imul
fdivr
inc
push
xchg
fucomp
xor
add
jecxz
ftst
mov
aaa
push
mov
ja
cs
push
mov
jns
cmps
ds
or
mov
add
and
and
pop
(bad)
inc
add
call
mov
loop
add
iret
add
add
add
aam
mov
pop
retf
adc
(bad)
push
jns
bound
jbe
aad
jg
jp
outs
add
bound
jae
add
ins
add
add
stos
pop
in
add
ins
out
sub
sub
add
pop
in
pop
inc
inc
es
and
add
pop
push
sbb
add
mov
sbb
or
adc
add
or
call
ins
pxor
cmp
jo
xlat
mov
jbe
cmp
pop
mov
ss
pop
aaa
xchg
ins
test
lahf
inc
cs
sbb
out
ins
jb
(bad)
jle
out
pop
stc
shr
push
push
push
pop
pop
not
das
outs
adc
dec
leave
cmp
lods
push
push
push
add
jmp
cdq
jne
and
shr
add
fiadd
aaa
dec
daa
cmp
sbb
dec
pop
and
adc
dec
aaa
ret
add
inc
sbb
jb
inc
dec
fstp
bound
(bad)
sbb
lahf
pop
and
mov
mov
inc
cmp
jg
push
cmp
or
push
jne
fs
jp
add
imul
aas
es
pop
and
arpl
cmps
stc
cmp
cmp
(bad)
push
loope
jae
(bad)
jmp
push
daa
daa
mov
xchg
mov
fistp
xchg
xor
ror
jg
dec
dec
dec
dec
(bad)
mov
dec
and
adc
cmp
sub
lods
push
cmps
xchg
xchg
sar
test
lods
or
mov
and
jne
sub
mov
push
jecxz
sub
test
dec
push
xchg
xchg
cmp
mov
add
cmp
cmp
enter
test
adc
jns
daa
or
(bad)
jp
div
je
ss
jge
mov
inc
loopne
(bad)
clc
call
(bad)
jg
add
mov
imul
mov
push
mov
push
cmp
jge
ret
cmp
mov
lea
fstp
test
je
mov
add
and
fidiv
shl
adc
sbb
loope
inc
xlat
cmp
or
call
jae
mov
sub
pop
ret
push
mov
adc
je
and
mov
pusha
mov
jno
mov
or
and
jmp
add
inc
push
je
movs
sub
je
pop
sub
(bad)
dec
push
or
mov
pop
cli
(bad)
fld
xor
jbe
mov
outs
mov
add
push
popf
jb
and
outs
and
sbb
or
mov
dec
ret
shl
jmp
pop
call
pop
repnz
jmp
fild
mov
push
and
mov
imul
and
bound
mov
jmp
adc
adc
sbb
(bad)
fdivr
call
ret
pop
enter
dec
fcom
mov
xchg
es
mov
imul
push
jle
int3
shl
cli
jne
call
mov
add
sar
in
add
lock
js
call
push
rcr
fcomp
jns
push
mov
es
xlat
pushf
ss
jb
cmps
in
mov
jae
sbb
mov
fist
nop
mov
das
adc
push
sub
pop
js
cmp
push
call
clc
mov
mov
rol
cmp
xor
inc
jne
bound
sub
jo
mov
jmp
or
nop
add
mov
loopne
xor
movs
in
xchg
adc
je
call
cmps
fsubr
sbb
xor
sbb
adc
adc
rcr
pop
dec
leave
mov
cli
pop
outs
call
loope
inc
lock
loop
sub
ret
jb
sti
rcr
or
mov
xor
into
mov
jp
and
call
jo
or
lahf
sbb
(bad)
jo
retf
and
add
jmp
xor
rcl
jae
and
out
cmp
mov
jle
movs
cmp
jmp
sahf
nop
enter
out
add
cmp
or
sub
add
bound
int3
add
or
dec
or
cmp
mov
out
lock
(bad)
sahf
xor
nop
(bad)
cmp
mov
add
div
call
aam
in
jne
push
stc
in
cdq
dec
cmp
xchg
mov
std
hlt
xor
shl
nop
mov
out
aad
std
jne
inc
sahf
je
and
daa
mov
hlt
hlt
icebp
pop
mov
stc
jl
jecxz
and
test
mov
mov
loopne
pop
inc
sub
mov
mov
or
mov
dec
mov
cmp
ss
pushf
nop
rcr
xchg
sub
sub
fcom
maxps
mov
(bad)
fwait
pop
jb
sar
mov
lea
adc
rol
xchg
(bad)
rol
push
mov
aas
xchg
cmp
push
cmp
cmps
cmp
or
mov
push
movs
stc
pop
xchg
(bad)
lock
call
out
mov
stc
aaa
mov
jle
adc
or
ins
clc
aad
pop
call
mov
add
call
jne
xchg
rcl
adc
pop
jno
or
js
es
push
adc
pop
jecxz
pop
sbb
ja
and
pop
sbb
inc
push
sbb
ss
jns
sbb
push
or
xlat
cmp
int3
call
jmp
mov
adc
shr
frstor
or
adc
xor
add
hlt
jle
leave
cmp
and
je
cdq
jle
jp
add
rcl
add
pop
push
mov
jns
sub
test
(bad)
mov
loope
pop
pop
xchg
cmps
add
inc
std
mov
les
and
add
and
arpl
ss
out
ja
sbb
mov
sub
add
mov
adc
jmp
push
sti
mov
stos
mov
sbb
jo
ficom
mov
mov
jl
pop
mov
neg
add
clc
adc
dec
adc
scas
ret
adc
hlt
push
cld
cli
adc
cwde
scas
leave
jmp
sub
push
sub
leave
call
mov
mov
and
push
dec
fdivr
ja
add
call
je
enter
or
inc
es
sub
cmps
stc
push
fsubr
nop
add
mov
ja
cdq
add
sahf
es
inc
cmps
hlt
adc
hlt
fsubp
mul
inc
lea
cmps
mov
test
inc
leave
loopne
push
mov
and
mov
cdq
jne
dec
mov
sbb
cmp
call
aas
add
push
(bad)
xor
cdq
add
push
test
jmp
lods
mov
mov
aas
add
mov
shl
pop
dec
ja
and
jnp
cli
pop
add
jnp
add
jge
push
sbb
pop
leave
int3
or
movs
scas
mov
je
call
dec
adc
cmovs
mov
nop
pop
adc
add
dec
mov
cmp
mov
xchg
fild
pushf
and
and
and
and
shl
ret
pop
mov
out
add
daa
cmp
ins
pop
ret
pushf
dec
inc
mov
imul
imul
fisub
fcmovb
ins
stos
clc
add
mov
or
xor
and
(bad)
ins
push
push
test
sbb
mov
in
bound
add
jbe
(bad)
xor
sar
idiv
(bad)
loop
shl
ja
enter
push
sbb
pop
mov
adc
adc
push
dec
es
and
repz
fsubr
mov
ins
hlt
adc
mov
lods
je
(bad)
add
cmp
fstp
dec
rcl
and
daa
cmps
loope
retf
mov
popf
pop
sbb
sbb
ror
add
sub
fwait
call
cdq
adc
adc
or
push
mov
es
inc
call
jg
jnp
xchg
nop
dec
push
adc
sbb
dec
pop
sub
jle
sub
sub
inc
es
in
sar
mov
enter
add
cmp
xor
push
mov
leave
mov
pop
xor
call
jmp
pusha
pop
dec
adc
pop
std
pushf
rcl
xor
add
test
mov
sar
mov
or
push
mov
aad
mov
mov
idiv
add
add
leave
xor
sub
lds
loope
lock
adc
(bad)
adc
pop
jne
pop
jmp
sub
cdq
loopne
jns
idiv
je
sbb
xor
ins
sahf
cmps
mov
scas
lea
ltr
ret
mov
test
jl
sub
and
dec
(bad)
pop
jmp
mov
xchg
pusha
xor
call
inc
mov
cmps
mov
fcmovb
mov
jmp
and
test
mov
je
js
push
xor
pop
cmp
loopne
inc
jnp
xor
sbb
popf
or
mov
or
iret
ja
stos
push
and
add
mov
daa
add
cmps
xchg
ja
rol
test
sub
lods
push
movs
ret
pop
or
or
test
add
mov
inc
fisubr
push
sub
jmp
add
out
cmp
dec
repz
mov
cmp
call
call
repz
call
mov
mov
push
shl
cmps
fdiv
push
sub
test
test
xor
retf
arpl
add
out
int3
jle
sub
or
pop
addr16
mov
clc
mov
icebp
pop
mov
mov
out
adc
cmp
or
jg
mov
in
lock
je
test
adc
sub
xor
cmp
push
push
loope
js
jne
call
or
xchg
retf
add
movs
jge
sbb
pushf
jg
loop
inc
das
inc
push
mov
cs
push
pop
xor
ret
call
repnz
jl
je
stos
in
cmps
aas
inc
jg
and
add
cmp
push
fisub
shl
test
adc
inc
aas
xchg
and
test
rol
and
psubsb
or
pop
fist
and
sbb
mov
add
push
mov
or
jo
retf
adc
pop
jg
push
hlt
aaa
mov
dec
xchg
shr
call
mov
loope
cmp
(bad)
sub
cmps
push
xor
mov
pop
(bad)
cmp
int3
movs
loop
call
sub
pushf
sub
xor
add
adc
leave
test
adc
adc
pop
pop
mov
or
fisubr
pop
ja
push
nop
pop
subps
pop
jp
inc
and
push
dec
ja
sbb
iret
adc
sbb
dec
daa
add
arpl
inc
and
add
je
pop
pusha
add
inc
cld
mov
popa
inc
out
loop
inc
cmp
push
add
jb
sbb
inc
pushf
mov
sbb
sbb
or
and
sbb
jecxz
push
jle
shr
ret
jmp
jmp
cmp
es
idiv
push
in
stos
sub
xchg
jmp
rol
or
out
popa
jp
mov
add
cs
cmp
sub
jp
add
int3
fimul
shr
(bad)
movs
stc
xor
fldenv
ins
cli
scas
call
adc
sub
and
sti
mov
leave
sub
jo
xchg
ret
and
push
push
xchg
xchg
jecxz
rol
idiv
imul
add
or
aaa
pop
mov
ss
mov
ds
fcomp
sub
in
adc
jne
push
sbb
mov
cmp
(bad)
sbb
mov
popf
mov
cs
jge
jbe
push
aad
repz
push
mov
rol
es
ss
or
mov
mov
xchg
push
adc
inc
addr16
push
sub
rol
xlat
xchg
sbb
mov
fdivr
bnd
mov
mov
popf
xchg
cmps
sahf
mov
stos
scas
push
scas
mov
push
push
mov
or
mov
sub
cmp
sbb
out
inc
outs
sbb
fwait
mov
(bad)
call
stos
ins
neg
int3
xor
or
or
cwde
mov
jg
loope
xchg
es
xlat
inc
or
xlat
fsub
or
cmps
jge
jmp
imul
xchg
jmp
ds
push
pop
jmp
adc
out
pop
frstor
mov
mov
je
in
fild
imul
aas
mov
aaa
add
call
inc
outs
dec
fimul
shr
mov
jo
repnz
adc
mov
in
fisttp
fstp
stos
mov
scas
jecxz
mov
imul
adc
aaa
imul
pop
add
es
push
ror
cmp
sub
pop
popf
adc
dec
jmp
cmp
xchg
and
mul
stc
daa
jle
call
push
push
lahf
lods
mov
xchg
lahf
fsubr
movs
cmps
inc
or
sub
lahf
and
movs
mov
stos
jge
and
das
cmp
inc
inc
pop
push
dec
xchg
mov
lods
gs
or
xor
test
gs
je
sahf
push
outs
pop
call
sub
adc
mov
cmp
call
iret
push
sub
nop
jl
in
int
popf
cld
sahf
push
or
jmp
inc
lods
in
pusha
daa
inc
ds
mov
fild
out
mov
out
xor
xchg
out
loop
(bad)
outs
aad
mov
push
aam
(bad)
ret
add
scas
pop
dec
call
adc
push
add
fimul
and
sub
scas
pop
dec
pop
je
repnz
call
adc
retf
sti
cmps
mov
arpl
les
or
add
into
add
jne
or
jne
sub
jne
push
rcr
aaa
push
dec
and
std
mov
add
or
push
jb
cmp
jb
push
pushf
xlat
and
(bad)
popf
jne
rol
dec
jmp
stos
sti
call
lock
outs
push
pop
pmullw
push
inc
mov
xor
xchg
std
cmps
cmp
and
jb
xlat
jge
cmp
loope
hlt
je
stos
ficomp
test
adc
cmps
mov
cld
outs
inc
repnz
rcr
je
imul
enter
push
sub
push
mov
pop
and
outs
test
pop
or
lock
inc
js
pushf
mov
test
jmp
xor
mov
icebp
bound
outs
in
nop
push
ret
sub
shl
add
jnp
div
mov
sub
jle
mov
sahf
lods
jmp
std
ja
cld
cmps
ret
or
gs
sub
jmp
dec
dec
push
pop
push
inc
inc
pop
push
js
arpl
imul
data16
fs
inc
push
push
inc
push
inc
jno
dec
push
cli
bound
jno
mov
out
mov
and
neg
push
sub
fstp
pop
test
add
lods
outs
(bad)
adc
sti
lods
or
js
and
push
xor
ins
xor
ret
cmp
les
push
mov
test
inc
jge
jge
sub
pop
jnp
inc
cld
sar
test
stos
adc
pop
mov
sub
int3
and
pop
jl
es
mov
popa
sub
mov
dec
mov
(bad)
xor
push
sub
cmp
shr
call
rcr
jo
clc
loop
lock
cmp
stos
inc
pop
mov
fnsave
sub
mov
jmp
test
call
test
push
fadd
cmps
pushf
scas
push
pop
inc
or
push
cld
xor
gs
mov
xchg
lods
bound
jo
call
movsx
call
jno
fiadd
push
jge
inc
push
cli
fadd
outs
push
clc
mov
xchg
adc
cmp
push
and
or
dec
aas
scas
fist
test
pop
jmp
cmps
jmp
mov
sub
movs
test
lds
push
inc
daa
sbb
and
inc
sbb
mov
jge
inc
and
pop
fmul
out
xlat
cmp
and
push
in
stos
sbb
aaa
test
out
mul
adc
fisttp
out
movs
push
iret
and
es
pop
inc
push
stos
jnp
es
outs
call
dec
sbb
push
and
cmp
je
sub
lods
push
push
jmp
mov
add
ss
fadd
adc
inc
mov
jbe
or
ret
sbb
mov
push
mov
push
jl
das
jno
sbb
add
(bad)
jg
xchg
cmps
cmp
inc
call
pop
jne
ror
out
sbb
pop
and
(bad)
mov
icebp
lods
jo
adc
into
cmps
cmp
imul
sbb
push
pop
add
jb
mov
push
mov
add
jmp
fstp
adc
add
call
std
ret
jne
cmps
dec
adc
pop
xchg
push
cmp
or
mov
jns
and
cmps
mov
adc
add
mov
mov
js
call
es
jge
je
jle
gs
xchg
clc
ja
data16
pop
or
mov
stos
lds
push
sub
push
lods
inc
xor
pop
pop
dec
cwde
push
lods
stos
pop
into
es
lods
imul
adc
aaa
nop
test
xchg
dec
retf
or
gs
and
scas
sbb
out
xor
inc
rcl
mov
pop
enter
mov
retf
aaa
pushf
nop
icebp
sbb
jb
xchg
add
fwait
xchg
dec
call
and
dec
aaa
inc
pop
push
inc
jge
push
add
pusha
add
inc
and
mov
out
adc
call
cmp
or
and
aad
dec
jne
jmp
add
out
(bad)
fist
xor
jmp
cmp
cmp
(bad)
jge
inc
add
jmp
and
cmp
cmp
sbb
hlt
jmp
sbb
or
cs
loop
mov
mov
or
or
mov
outs
jo
movs
jmp
mov
inc
sbb
mov
loope
sub
popa
retf
in
pop
jno
sbb
jno
xor
retf
das
pop
dec
inc
mov
sub
(bad)
push
sbb
movs
mov
les
sti
add
sub
inc
inc
push
leave
cdq
lahf
xor
aaa
push
shr
push
mov
and
movs
(bad)
cli
ja
fmul
mov
mov
or
cmp
xor
dec
cmp
retf
cmp
adc
popa
push
adc
mov
pushf
pop
addr16
pop
push
xchg
dec
paddq
push
fisub
and
daa
imul
lock
xor
es
xor
js
and
mov
and
xor
jecxz
into
xchg
push
mov
call
jne
outs
mov
lock
xchg
std
es
mov
inc
(bad)
mov
popf
xchg
cmp
inc
std
xchg
pop
sub
pushf
ret
xchg
out
push
(bad)
fwait
repz
jge
jle
push
or
mov
cwde
sub
fistp
pop
inc
xchg
mov
cmps
ret
and
push
or
neg
push
jbe
cmps
test
cmp
xor
push
ds
cmps
inc
ret
push
mov
mov
addr16
push
push
adc
fistp
fsub
sub
lahf
dec
sbb
ds
stos
adc
mov
inc
xor
xchg
cmp
add
mov
push
cld
push
call
daa
rcl
out
test
inc
fisttp
mov
je
ret
les
inc
jl
movs
out
repnz
push
or
mov
inc
xchg
retf
sub
iret
add
cmp
sbb
shl
pop
push
add
call
cmps
push
hlt
aaa
inc
(bad)
xor
pop
cmps
cmp
pop
xchg
push
or
or
or
or
imul
jne
mov
mov
adc
xor
cmp
ins
lahf
dec
push
dec
jge
sub
adc
xlat
add
jbe
jge
and
mov
movaps
mov
shl
or
ins
adc
je
cmps
cmp
and
(bad)
adc
mov
faddp
out
clc
and
and
mov
aas
xlat
dec
pop
outs
xor
adc
es
push
add
xor
adc
adc
in
push
std
icebp
push
push
repnz
sti
sub
push
push
inc
push
es
es
ins
mov
into
lea
push
adc
mov
rol
sbb
daa
cld
iret
push
stos
lock
call
call
aaa
ret
pop
stos
jo
dec
cwde
add
adc
and
push
inc
inc
and
stos
stos
pop
push
(bad)
sub
sti
cmovbe
or
rol
push
jle
or
out
or
inc
push
ror
pop
(bad)
add
cs
push
cs
add
mov
dec
je
dec
sub
mov
inc
push
mov
loopne
ror
cmps
xor
sub
in
jmp
pusha
out
or
imul
xchg
or
or
push
leave
fstp
pop
sub
cmps
lods
fcomp
ret
test
nop
dec
adc
xchg
pop
or
dec
mov
popf
sbb
setns
je
pop
mov
mov
xor
inc
mov
push
inc
mov
inc
or
loop
inc
adc
out
or
xor
pop
jo
xchg
xchg
shl
shl
ror
mov
inc
jmp
jecxz
and
push
not
push
mov
out
aam
lea
lea
call
and
out
sbb
bound
shl
ror
pop
ret
idiv
mov
mov
sbb
add
jmp
add
jne
aas
dec
and
adc
adc
int
or
push
sti
xchg
loope
add
stos
mov
or
mov
mov
pop
shl
sti
das
adc
stos
xchg
xor
pop
jno
ins
stos
cwde
daa
jne
mov
jge
cmp
sub
retf
(bad)
push
cld
xchg
sti
call
and
cmp
(bad)
ss
imul
dec
and
and
jl
mov
ds
cmp
xchg
call
clc
pop
inc
adc
into
mov
jmp
mov
mov
push
rol
addr16
inc
lods
movs
jnp
pop
sbb
push
push
xor
push
push
mov
jo
(bad)
loope
mov
dec
adc
inc
push
sbb
fistp
mov
xor
sbb
sbb
not
fsub
cmp
jmp
pop
push
add
and
dec
je
xchg
pop
ins
add
pop
fcmovbe
mov
jo
xor
mov
xor
adc
inc
aam
lea
cld
jmp
and
add
mov
pop
add
je
cmp
and
xor
sub
call
wbinvd
cmp
hlt
or
jns
push
ret
clc
jg
inc
paddusw
and
inc
cld
mov
call
lahf
je
dec
jne
sar
sub
es
sbb
mov
cmp
fwait
jbe
jmp
adc
es
cmps
ret
push
cmp
fbstp
adc
int3
je
or
test
cmps
in
jo
and
sti
out
jmp
aam
sbb
push
pop
and
stos
push
cld
jmp
sbb
pop
cdq
int3
adc
test
mov
leave
dec
int3
jg
jge
cdq
outs
cmp
outs
xor
imul
out
mov
inc
push
loop
add
retf
sbb
stos
push
adc
push
cmp
sub
pop
mov
cmp
stos
shl
mov
add
fcom
adc
outs
out
jl
bound
ret
sbb
and
sub
je
jmp
and
outs
test
jl
das
stc
out
and
movs
jbe
call
mov
cmp
push
dec
and
je
cmp
or
daa
pushf
pop
das
mov
cdq
push
push
and
and
jp
fst
loope
in
push
dec
sbb
sbb
pop
call
std
mov
adc
lock
pusha
push
mov
sti
cmp
and
xchg
dec
xchg
shl
cmp
dec
push
xchg
shr
cmp
add
or
xchg
dec
inc
lods
sub
pop
icebp
je
cmps
mov
adc
pusha
cmp
add
pop
jmp
rcr
xchg
stc
fbld
stc
add
pop
cmp
fsub
pop
add
imul
jge
cwde
pop
call
fisub
fnstenv
stos
fild
daa
inc
mov
rol
aas
sbb
out
add
iret
daa
in
and
inc
mov
fimul
mov
jb
xchg
xor
adc
inc
dec
jno
popa
stos
cmp
outs
call
fwait
add
jne
lock
je
cmp
inc
shl
test
add
jmp
push
es
inc
inc
mov
fsubrp
push
and
dec
push
and
dec
jmp
pop
ins
cmp
xor
mov
push
pop
or
ss
es
jecxz
jg
dec
mov
and
mov
push
mov
push
call
xor
xchg
mov
pushf
es
aaa
lock
neg
cmp
stos
out
sbb
(bad)
sbb
or
and
jne
xchg
inc
push
in
jns
push
xor
cmp
inc
outs
gs
add
inc
inc
sahf
scas
gs
dec
mov
jb
das
push
arpl
add
scas
aas
call
sqrtps
ret
lods
out
jmp
pop
inc
jge
cmps
cmp
out
sbb
and
rcr
push
(bad)
pop
inc
add
adc
sahf
xor
pop
nop
jg
pop
jb
and
aas
int3
repz
outs
add
push
adc
adc
and
add
xchg
xchg
mov
cld
cmp
aas
adc
push
jo
sbb
jnp
and
mov
push
ds
enter
mov
(bad)
sti
sub
mov
adc
mov
sbb
jl
ins
dec
push
mov
outs
ret
cmc
push
repnz
and
pushf
jne
or
fsub
daa
pushf
adc
sub
or
retf
jb
dec
mov
mov
repnz
add
outs
mov
in
repnz
and
or
and
sub
ds
into
mov
and
adc
stos
(bad)
icebp
out
imul
inc
adc
and
push
fdiv
mov
mov
or
sbb
(bad)
or
or
pop
jmp
cmp
push
lock
jge
mov
xchg
add
out
mov
sahf
dec
xchg
cmp
jae
mov
loopne
repz
lds
pop
stc
mov
pushf
mov
push
dec
jb
mov
mov
es
add
fidiv
adc
(bad)
and
pushf
mov
jmp
xor
or
sbb
and
sub
add
pop
fldenv
push
adc
jmp
add
je
das
or
(bad)
push
stos
adc
add
mov
lock
test
or
js
aam
xchg
jno
aaa
out
mov
cmp
shl
je
cdq
jne
cwde
xor
ret
sti
jbe
cmovno
and
je
add
ret
pop
xchg
sbb
hlt
je
push
shl
inc
push
push
push
push
or
adc
xchg
out
cmps
lahf
sub
push
fdiv
test
(bad)
stos
sub
mov
ja
pmullw
fstp
mov
mov
ret
xchg
jge
(bad)
mov
stos
or
leave
adc
xchg
(bad)
call
add
inc
in
pop
mov
mov
les
mov
(bad)
dec
test
or
les
push
or
add
pop
(bad)
leave
clc
push
and
pop
xchg
clc
mov
cmps
lods
jno
fild
in
dec
add
scas
jl
adc
popf
lods
je
xlat
ret
jmp
and
xlat
movs
mov
push
xchg
lock
ret
in
mov
fstp
push
test
fwait
out
add
adc
xchg
in
pop
repnz
pop
scas
pop
stos
dec
pop
cmp
call
and
out
fs
mov
lods
add
lock
inc
(bad)
pop
leave
xchg
ss
adc
and
or
ror
sar
ret
inc
pop
push
cdq
rol
rol
or
(bad)
fild
add
iret
mov
(bad)
rcl
call
cmc
and
push
ror
xchg
mov
ror
jno
nop
jns
repz
arpl
das
int3
nop
call
and
dec
and
jmp
mov
sub
test
mov
inc
push
rcr
stos
add
pop
(bad)
aas
jbe
jge
cmps
jmp
loop
out
pop
sub
jg
pop
fldenv
mov
call
cdq
cmp
(bad)
cmp
dec
jnp
adc
mov
inc
sbb
sbb
mov
cmps
and
mov
jmp
xor
pop
jbe
iret
cmp
push
add
dec
ret
cmp
or
sub
dec
add
call
popf
jo
pop
test
adc
es
out
ds
cmp
xor
and
inc
imul
or
scas
mov
test
xor
mov
cdq
ret
jo
sar
jb
mov
fcmovnbe
test
std
or
inc
mov
xchg
jge
and
mov
mov
cwde
xor
in
pop
mov
and
push
push
out
div
or
jne
dec
dec
int
adc
out
cwde
and
test
repnz
sbb
rol
cmps
jo
push
shr
push
push
ins
movs
sbb
mov
and
out
(bad)
scas
lods
fdiv
push
(bad)
push
int3
aam
mov
push
mov
push
jl
lock
add
push
pop
adc
and
or
in
mov
push
push
es
mov
add
das
fistp
pop
push
push
mov
pop
in
jo
xchg
cmp
xchg
add
daa
adc
push
rcpps
dec
dec
inc
inc
dec
dec
es
dec
imul
movs
jb
pop
dec
cs
push
inc
(bad)
jg
pop
repz
scas
push
push
mov
mov
jmp
dec
(bad)
sbb
fisubr
or
pusha
add
cmp
jg
pop
mov
inc
inc
leave
mov
nop
sar
cli
fisttp
ja
mov
push
adc
inc
imul
adc
sbb
test
mov
in
and
mov
jge
mov
(bad)
jg
inc
mov
mov
add
out
jg
adc
out
jle
inc
adc
xchg
inc
and
(bad)
cmps
adc
add
xchg
jg
ror
in
movs
daa
pop
mov
push
add
cmp
or
jno
in
add
je
inc
ficom
xlat
not
jmp
jge
jg
outs
test
cmp
or
(bad)
or
sar
call
bound
add
shl
inc
hlt
adc
shl
xchg
dec
xchg
mov
adc
mov
mov
lahf
sbb
daa
cmp
in
pusha
pop
push
add
mov
jb
push
cmp
imul
fimul
push
sub
movs
in
(bad)
mov
inc
inc
pusha
add
push
jl
add
movs
sbb
inc
fimul
sub
xchg
addr16
push
push
(bad)
(bad)
(bad)
daa
xlat
dec
movs
test
or
adc
sub
mov
lea
dec
repz
mov
fcom
jg
xchg
repz
(bad)
mov
test
push
fwait
idiv
mov
sbb
jl
fwait
outs
inc
adc
repz
out
sahf
fcom
mov
dec
inc
leave
push
nop
jl
retf
or
dec
pop
out
out
call
outs
add
pusha
mov
sbb
adc
call
sbb
push
es
cmp
aam
mov
jns
out
(bad)
ja
repz
test
dec
xor
jl
sbb
ficom
add
mov
sbb
movs
test
adc
pop
inc
fwait
mov
mov
push
add
pop
repnz
mov
ror
cmp
cmp
cld
(bad)
(bad)
mov
sbb
lahf
rcr
data16
push
mov
add
push
adc
(bad)
(bad)
cmp
xchg
es
ss
stc
mov
(bad)
(bad)
inc
stc
arpl
push
dec
inc
pop
or
int3
shl
inc
fdivr
xchg
push
pop
add
xchg
mov
(bad)
(bad)
push
in
aas
dec
cmp
dec
add
push
xchg
sbb
or
sub
mov
mov
movs
call
add
rol
inc
daa
test
movs
aad
xlat
aad
cmp
(bad)
cmp
pusha
cli
pop
cli
push
pop
shl
pop
cmp
pop
out
ud0
cld
push
or
std
add
jae
xor
ja
pop
lock
lahf
hlt
int
sbb
jle
adc
mov
mov
ror
sahf
xchg
dec
add
dec
es
pop
imul
pop
mov
cwde
add
mov
sbb
adc
aas
cli
call
jmp
js
in
push
add
fiadd
jb
loop
sub
inc
shl
lock
add
imul
(bad)
out
inc
clc
out
inc
adc
xlat
repz
jg
lods
test
dec
inc
pusha
push
pop
sbb
inc
add
adc
out
fcom
pusha
jge
xlat
xchg
mov
loopne
jg
jg
(bad)
lahf
movs
movs
mov
daa
mov
or
sub
popa
int3
out
cli
out
jg
dec
or
add
aas
sub
mov
imul
out
sub
push
cmp
aad
dec
shr
xlat
xchg
int
jo
shr
fimul
dec
jmp
pop
cli
jmp
fbld
scas
out
pop
mov
or
std
test
in
mov
push
out
push
adc
xlat
pusha
inc
imul
and
push
inc
in
mov
aam
pop
cs
jno
mov
xchg
ficom
add
vunpckhps
fwait
adc
bound
cmps
mov
aam
iret
jae
and
and
popf
jmp
push
out
inc
neg
dec
jmp
into
and
repnz
fcom
mov
adc
es
stos
fsubr
(bad)
in
jp
jecxz
rol
inc
clc
hlt
in
jae
lods
bound
inc
adc
movs
(bad)
mov
movs
pop
mov
std
(bad)
in
ds
or
scas
dec
adc
scas
pop
(bad)
jmp
(bad)
mov
retf
faddp
xlat
movs
adc
shr
(bad)
jmp
repnz
pop
mov
ja
lahf
cli
adc
cs
(bad)
out
dec
iret
mov
pop
mov
test
repnz
sar
add
ret
mov
pop
cld
call
dec
mov
xchg
aam
sar
inc
xlat
add
mov
(bad)
shl
mov
and
jbe
add
pop
jg
xchg
mov
xchg
jge
popa
sti
dec
cmp
data16
mov
out
sbb
xlat
xchg
pop
adc
pusha
call
stos
jle
pop
inc
fwait
(bad)
fistp
pop
cs
aaa
imul
adc
mov
add
sbb
aad
aad
jl
repz
cmps
pop
add
out
movs
cmps
in
in
lahf
pop
pop
lock
rol
dec
inc
add
std
(bad)
xchg
cmp
cmp
or
pusha
inc
hlt
inc
inc
jge
jb
sbb
sbb
(bad)
inc
mov
inc
test
cmp
cmc
or
es
iretw
scas
cmps
jp
in
mov
aad
pop
rcl
scas
mov
add
and
cmp
inc
(bad)
scas
inc
add
cli
(bad)
sbb
push
dec
loop
dec
cmps
iret
mov
pop
mov
lahf
mov
adc
(bad)
out
call
mov
inc
dec
sbb
xchg
add
mov
fistp
mov
or
or
in
in
dec
dec
jo
loopne
(bad)
pop
retf
out
mov
pop
mov
mov
push
pusha
scas
scas
int
(bad)
cs
jle
mov
adc
scas
xchg
dec
in
xchg
dec
in
int
jae
cmp
ds
in
push
test
xor
and
sub
pop
mov
fbstp
sub
xchg
pop
retf
pop
adc
test
inc
ds
das
lahf
inc
test
cmps
and
lea
repnz
sub
ds
mov
add
dec
xlat
cmp
loope
clc
sbb
test
adc
or
pusha
jg
xor
pmaxub
add
cwde
or
fnstsw
aaa
pushf
call
add
add
push
jmp
aad
inc
repz
(bad)
(bad)
ficomp
or
sub
xor
jle
fwait
retf
sub
pop
jle
mov
ficomp
retf
mov
in
fwait
retf
shl
dec
es
sbb
xchg
sbb
repnz
repnz
daa
xchg
retf
sahf
fisttp
add
cdq
or
adc
mov
imul
(bad)
sar
mov
mov
jmp
push
in
aaa
(bad)
dec
mov
push
inc
fild
mov
cmp
pop
inc
add
jge
push
leave
inc
mov
push
scas
stc
call
stc
inc
sub
jo
dec
jle
and
fild
cmps
ret
jle
and
or
scas
push
or
push
xchg
sbb
pop
ja
cmp
aad
xchg
in
and
mov
lods
adc
inc
mov
aaa
rol
loopne
and
lds
int3
jl
js
push
mov
mov
cmps
into
fsubr
cmp
mov
jo
pushf
es
lds
xchg
cmp
pop
push
sub
jae
je
data16
data16
call
sti
mov
pop
and
pop
loope
adc
stos
cmp
(bad)
ror
or
fistp
push
dec
inc
dec
sbb
jmp
and
mov
push
jle
mov
xor
js
dec
add
loop
in
sub
dec
xchg
outs
stc
ret
mov
scas
pop
jl
jle
clc
mov
jle
inc
nop
daa
mov
fs
retf
mov
stos
stos
xor
ss
fcomp
mov
xor
arpl
sub
ror
mov
mov
shl
jmp
cmps
sar
jp
xchg
sbb
popa
test
mov
mov
push
xor
add
inc
shr
jmp
retf
push
push
aam
nop
ds
cmp
dec
out
cwde
cmps
lea
pusha
inc
int3
sbb
push
aaa
fidivr
mov
jae
(bad)
adc
mov
inc
outs
ja
ja
out
mov
pop
int
mov
cdq
daa
scas
mov
in
sub
aam
in
xor
movs
iret
jmp
aas
and
add
inc
je
loope
mov
loope
out
out
push
jge
add
mov
sbb
frstor
mov
inc
rol
xor
pop
gs
mov
dec
jne
fcmovbe
scas
fcomp
mov
lods
loope
repz
mov
clc
out
pop
mov
cdq
(bad)
mov
(bad)
xchg
fwait
retf
int
xchg
mov
and
sbb
fsubr
or
pop
shl
retf
sahf
xchg
mov
scas
retf
int
dec
dec
mov
mov
sar
mov
add
dec
mov
pop
or
call
mov
aaa
shl
mov
mov
fcom
mov
mov
in
(bad)
test
imul
mov
inc
jmp
aaa
xchg
pushf
xlat
lds
mov
std
ins
sbb
mov
push
shr
mov
adc
test
inc
outs
pop
les
add
inc
mov
add
ss
stos
mov
push
mul
sbb
xor
loop
cmp
cs
add
out
lahf
popf
call
sbb
es
cdq
ds
stc
sbb
push
clc
jnp
dec
(bad)
dec
jl
adc
inc
push
mov
mov
outs
push
(bad)
fwait
inc
push
mov
ds
dec
hlt
xor
pusha
(bad)
xlat
inc
push
inc
inc
add
rcr
adc
add
out
(bad)
jmp
add
add
sbb
jle
cmp
aaa
adc
lahf
aad
hlt
fwait
(bad)
(bad)
add
push
xor
out
mov
dec
sub
ror
xchg
cli
xchg
loop
imul
mov
add
addr16
or
clc
inc
inc
test
adc
dec
jg
pop
inc
cmps
loopne
out
jle
adc
xchg
fisttp
dec
pop
xlat
inc
es
mov
jae
aas
cwde
dec
or
adc
or
inc
mov
add
fcmovbe
bound
xchg
in
mov
(bad)
inc
pusha
or
test
inc
jmp
test
rcl
aaa
out
pop
mov
adc
fwait
js
mov
daa
das
cmp
inc
bound
lahf
xlat
mov
scas
bound
inc
pop
mov
dec
jmp
js
aad
inc
imul
inc
dec
xlat
inc
adc
std
addr16
or
xor
jg
mov
inc
test
inc
add
mov
jp
inc
call
adc
xchg
jl
xchg
mov
and
pusha
fcom
inc
dec
mov
mov
or
mov
mov
sbb
adc
loop
adc
std
pop
mov
mov
jmp
repz
out
inc
pusha
xlat
mov
dec
ins
jp
push
(bad)
(bad)
sub
cmps
(bad)
jg
adc
push
test
sbb
mov
shl
jmp
cwde
sub
stos
in
mov
retf
fmul
test
sbb
cmp
neg
fbstp
dec
jp
inc
xchg
out
fs
jae
mov
(bad)
call
aad
inc
fbld
adc
lea
cmp
test
push
adc
fisub
mov
jg
add
pop
fsub
add
scas
pop
dec
mov
call
push
lahf
lahf
cmp
bound
sub
push
inc
mov
and
int3
jp
sub
mov
adc
cmp
or
pop
adc
(bad)
xchg
xchg
mov
add
pop
mov
jb
add
jb
loop
call
movs
mov
out
cmp
adc
fiadd
mov
dec
cmp
push
xchg
fdiv
jecxz
jle
sar
dec
retf
pop
test
jg
pusha
stos
stos
(bad)
ds
pop
mov
mov
cmps
cwde
pop
dec
ins
retf
jne
xchg
(bad)
adc
cs
mov
mov
inc
ins
add
aad
fisttp
inc
mov
xor
mov
xor
or
out
cld
sar
clc
(bad)
push
adc
adc
xlat
fcmovbe
ss
dec
mov
inc
jmp
scas
iret
pop
outs
and
mov
add
push
jae
call
ins
aas
pop
mov
jle
or
sar
jg
in
cmp
mov
xchg
jbe
out
pop
xor
add
inc
fisub
enter
sub
pop
sar
or
add
movs
in
inc
std
(bad)
mov
stc
jnp
push
or
fild
mov
cmp
mov
out
cli
out
jp
inc
push
fidivr
adc
cli
scas
inc
bound
enter
fcomip
inc
sbb
sub
sar
push
sahf
pop
les
cmp
(bad)
(bad)
in
pop
scas
xchg
dec
mov
not
mov
ss
ss
(bad)
adc
lea
fisttp
xor
jne
outs
and
test
cmp
jns
cmp
mov
cs
pop
mov
or
mov
push
cmp
outs
jl
mov
adc
outs
jno
data16
xor
xor
adc
push
or
enter
(bad)
pop
cmp
shl
retf
pushw
adc
adc
sbb
ja
call
xchg
cmp
call
aas
cmp
push
ror
mov
loopne
cmp
lods
mov
adc
inc
mov
out
pop
imul
call
jae
mov
test
fisttp
cdq
mov
fwait
retf
gs
fbld
mov
inc
pop
xchg
shl
add
call
push
pop
cmp
mov
mov
mov
stc
inc
(bad)
sar
leave
imul
xchg
jl
fisttp
retf
retf
int
rcr
ds
xchg
mov
cdq
in
mov
retf
sbb
cmp
cdq
xchg
retf
jnp
in
dec
retf
mov
fwait
retf
dec
jae
mov
jae
in
cwde
or
fwait
retf
gs
mov
mov
leave
mov
ds
lahf
pop
call
or
data16
mov
sbb
lea
pushaw
jmp
pop
cdq
fmul
repz
push
mov
or
dec
aaa
jmp
aaa
aas
out
daa
mov
hlt
arpl
int3
(bad)
cmps
dec
rol
mov
jg
outs
ja
leave
dec
mov
push
dec
je
daa
jge
sbb
sub
cmp
cmps
jp
inc
jle
jae
cld
xchg
mov
imul
scas
xor
push
pop
xchg
(bad)
fist
dec
sub
in
frstor
and
lahf
imul
jbe
dec
fdiv
push
and
cld
inc
and
pop
fidiv
sti
inc
mov
sub
clc
cmp
aaa
jno
add
js
shr
jne
mov
sub
sub
jnp
loop
xchg
imul
pop
cmp
mov
adc
enter
jnp
pop
jns
inc
pop
inc
in
mov
outs
lahf
inc
push
repnz
add
mov
mov
pusha
push
lahf
aaa
and
jno
sbb
stc
nop
sar
push
and
test
jge
push
inc
or
jnp
into
aam
mov
push
ret
xchg
mov
cmp
inc
pop
fistp
mov
popf
and
or
in
mov
sbb
pop
cmp
fnstenv
jno
jnp
cmps
pop
movs
mov
sbb
or
mov
adc
mov
pop
imul
es
and
adc
leave
loopne
or
push
gs
std
retf
sub
bnd
test
xor
loop
xchg
scas
sbb
adc
inc
xlat
fmul
jmp
loope
push
pop
test
leave
jle
nop
dec
in
dec
jle
sub
push
sub
or
inc
dec
mov
ficom
fidivr
fidiv
dec
push
outs
sub
ficom
dec
in
mov
sub
imul
mov
xchg
jmp
xchg
fimul
ret
mov
cld
fdiv
sbb
sbb
mov
push
xlat
loop
mov
bound
xchg
xchg
sar
xchg
mov
push
or
lock
add
push
cmp
or
out
leave
out
mov
std
mov
mov
outs
outs
sar
out
(bad)
lock
or
ret
aam
mov
xchg
xchg
mov
xor
ins
es
(bad)
hlt
cmps
fstp
fld
mov
jge
test
hlt
mov
dec
out
out
push
or
cmp
inc
leave
pop
dec
(bad)
pop
or
ss
fist
mov
sub
push
mov
cli
outs
and
and
inc
jge
dec
mov
pop
loopne
clc
jl
pop
dec
nop
jnp
xchg
ins
aam
jp
xor
sbb
jl
div
in
push
stos
pop
mov
jmp
push
arpl
mov
or
or
out
test
jns
dec
call
loopne
imul
into
daa
add
pushf
imul
inc
inc
pusha
aam
mov
outs
or
pop
call
adc
mov
hlt
fld
ins
jns
das
call
mov
cmp
cld
cmp
mov
mov
out
mov
out
sub
jmp
jo
leave
pop
mov
jb
pop
call
mov
jb
cmp
push
xchg
add
and
pop
mov
xlat
xor
test
jo
inc
mov
retf
sbb
push
int3
mov
ins
fnstenv
add
je
sbb
mov
or
mov
call
ror
add
retf
mov
jo
mov
add
(bad)
retf
pusha
repnz
push
pop
xlat
push
pop
mov
and
sysret
push
inc
xchg
pop
adc
repnz
ins
mov
frstor
push
sub
into
adc
xchg
pop
cld
(bad)
jl
and
loopne
adc
pop
sbb
(bad)
sub
retf
mov
stc
push
pop
mov
cdq
out
and
pop
add
les
popf
sahf
jmp
out
sti
mov
inc
mov
fimul
out
pop
loopne
sub
sbb
sub
lds
push
not
mov
icebp
and
(bad)
out
add
xor
fcom
dec
je
daa
ss
lods
xchg
retf
in
fcomp
inc
dec
sub
xchg
and
nop
jl
mov
es
or
adc
addr16
jns
outs
js
adc
push
(bad)
jo
test
scas
inc
aas
push
xlat
outs
pop
sub
mov
xor
pop
mov
push
mov
retf
dec
in
jge
mov
add
mov
cdq
sbb
aad
call
xor
and
rol
out
adc
test
mov
lods
test
xor
dec
std
mov
in
push
cmp
adc
cdq
mov
push
inc
add
push
adc
lods
cmp
dec
jb
addr16
into
int3
mov
addr16
mov
mov
lock
cmps
and
pop
or
dec
fisttp
add
mov
aas
enter
addr16
jnp
outs
sar
or
push
scas
lods
push
retf
in
outs
movs
rol
dec
sub
dec
jmp
sub
mov
test
movs
repnz
xchg
int
lods
jecxz
mov
and
imul
mov
out
mov
je
push
xchg
jmp
iret
icebp
add
mov
fisttp
mov
jg
mov
clc
inc
jle
push
inc
es
push
bound
jmp
or
mov
stc
or
loope
sbb
mov
lds
push
cmp
inc
mov
sti
iret
inc
loopne
inc
push
repnz
scas
inc
jge
mov
lahf
mov
xchg
mov
jge
xlat
ret
jge
mov
mov
into
or
ja
cs
fdiv
inc
dec
js
inc
push
mov
inc
push
mov
stos
pop
pusha
in
inc
add
int
jge
dec
jne
lds
jbe
cmps
jnp
mov
cmp
xchg
out
push
adc
push
leave
inc
int3
bound
dec
ss
jle
test
jbe
push
aaa
add
sbb
add
jg
(bad)
push
dec
pop
repnz
pusha
mov
xchg
fs
ss
push
sub
cwde
fcomp
aaa
fdivr
inc
enter
xchg
fist
retf
mov
dec
jmp
stos
daa
inc
xchg
icebp
loop
and
out
ror
nop
iret
sub
outs
clc
call
jge
loop
scas
mov
jo
dec
add
sub
mov
mov
and
adc
push
and
push
sub
dec
xor
hlt
mov
(bad)
inc
bound
in
daa
mov
retf
or
ja
inc
adc
es
jns
mov
pop
(bad)
fidivr
jecxz
pop
outs
es
mov
xchg
scas
nop
(bad)
test
call
icebp
sub
dec
jle
cmp
lods
cmp
(bad)
xchg
shl
fistp
adc
push
in
mov
add
pop
push
ficomp
adc
imul
call
cmps
adc
call
test
push
mov
cmp
push
adc
and
mov
inc
or
dec
fsub
mov
sub
inc
sbb
imul
jo
pusha
lock
fsubr
fiadd
adc
into
stos
cmp
js
cmp
ja
jbe
mov
jne
cmps
pop
and
(bad)
adc
and
xchg
(bad)
popa
xchg
mov
lea
sbb
repnz
ins
jge
mov
repnz
fstp
xchg
mov
ret
(bad)
ror
lock
adc
xchg
out
jae
or
pop
add
pop
stc
stos
test
cmp
cli
pop
in
fisttp
sahf
enter
fild
pop
inc
loopne
jb
test
ss
pop
xlat
repz
mov
sar
cmp
jbe
sbb
lds
lods
mov
out
adc
push
add
cmp
cmp
pop
or
inc
jl
push
cmps
xchg
je
je
mov
xlat
lods
aas
sub
and
lock
mov
rol
jo
pop
adc
into
push
movs
test
pop
mov
jnp
lods
add
ret
rcl
and
nop
test
lock
cmp
cdq
retf
xchg
dec
test
sbb
sbb
xchg
xchg
sub
jmp
xchg
adc
sahf
adc
mov
call
sub
xchg
ret
add
popa
push
inc
cmp
dec
stc
and
cmps
jecxz
mov
fisttp
sub
lahf
jmp
add
loop
push
jns
xchg
repz
jns
aas
in
loop
mov
xor
add
popa
shl
mov
jl
inc
(bad)
cdq
gs
cmc
ins
xchg
or
mov
jle
mov
push
xor
lods
movs
push
add
adc
push
mov
adc
daa
fdivrp
aaa
call
mov
sub
inc
jle
lods
ds
pop
jle
xor
gs
and
lods
enter
loopne
test
jns
xlat
jne
dec
mov
pushf
inc
sahf
cmp
adc
pop
inc
xchg
mov
cmp
xchg
cmp
clc
lods
clc
jg
add
pusha
xchg
(bad)
cmps
xchg
sar
sbb
xchg
cli
jno
sbb
add
add
add
mov
neg
adc
and
and
mov
sahf
pop
sti
xor
cld
add
adc
xlat
cmp
das
pop
xor
(bad)
aam
adc
cld
aaa
scas
or
push
movs
mov
test
xchg
daa
jge
pop
lds
jno
sti
push
push
inc
test
ds
int3
test
cmps
dec
mov
imul
sub
test
scas
xchg
jbe
sti
dec
mov
push
ja
and
add
jno
sbb
inc
cld
pop
xchg
and
inc
mov
lea
cmp
pop
lds
sub
jbe
cdq
add
xchg
retf
mov
jge
ins
sahf
retf
loop
add
sahf
mov
adc
fcomip
pop
and
jb
fs
daa
cs
sahf
neg
mov
outs
mov
ins
jle
ret
xor
xchg
retf
inc
mov
sbb
push
es
mov
pop
std
xchg
sbb
repz
cmc
out
je
aam
fs
retf
or
or
rcl
add
loop
int3
imul
adc
xchg
imul
das
aaa
shr
out
aam
shr
ja
cdq
sbb
icebp
dec
je
adc
lods
sahf
cmp
cs
imul
sub
xchg
jb
jmp
inc
cld
rol
and
psubq
out
inc
je
jmp
ret
stos
push
adc
stos
rcl
adc
xchg
lods
loope
cwde
adc
inc
test
or
daa
inc
adc
add
add
inc
mov
add
fiadd
dec
lods
pop
popa
jmp
jle
add
xchg
adc
mov
fadd
push
(bad)
add
mov
daa
dec
daa
and
mov
add
add
es
or
cwde
mov
iret
cmp
jb
or
pop
xchg
pop
inc
cmp
jb
sub
jno
and
lods
cmp
jg
pop
xchg
inc
jbe
add
in
call
sbb
or
hlt
pop
and
sub
sbb
std
dec
imul
shl
jmp
pop
push
pusha
or
xor
into
push
(bad)
jmp
(bad)
cmp
inc
ret
iret
(bad)
retf
cmp
mov
shr
xor
push
jp
mov
repz
(bad)
mov
xchg
loop
adc
mov
pop
sti
loopne
dec
sbb
les
adc
ja
ret
pavgb
adc
and
das
jmp
mov
jle
call
mov
aad
add
je
push
aam
addr16
inc
add
or
cmp
mov
sub
mov
pop
pop
xlat
sahf
fwait
sub
add
mov
daa
fdivr
mov
into
adc
xor
ins
xor
adc
out
ret
clc
jl
inc
or
aam
xchg
fadd
lock
adc
or
je
in
jl
push
pop
ror
(bad)
push
mov
cmp
push
cmp
mov
das
aaa
(bad)
aas
add
cli
mov
mov
cmps
aaa
cmps
ret
lock
rcl
hlt
(bad)
push
sbb
sub
jne
das
aaa
adc
enter
jne
or
push
mov
xor
jnp
ret
dec
mov
xchg
push
cmps
movs
aaa
cli
sbb
cmp
fist
fs
lahf
mov
xchg
arpl
mov
cmp
add
adc
lea
and
stc
in
jge
sub
or
mov
(bad)
jl
xchg
enter
mov
add
retf
repnz
sub
fwait
mov
(bad)
cld
retf
xlat
leave
add
into
and
mov
es
hlt
adc
iret
scas
test
xchg
xchg
push
aad
mov
(bad)
iret
repnz
rol
adc
add
jnp
(bad)
inc
shr
mov
or
adc
pop
ss
(bad)
(bad)
(bad)
(bad)
std
mov
loop
dec
cmp
inc
pop
lds
mov
fwait
js
push
cmp
sub
leave
push
(bad)
dec
repz
push
cmp
push
div
cmp
or
xor
cmp
dec
(bad)
(bad)
(bad)
(bad)
jp
popf
hlt
mov
jae
mov
fdivr
cmp
into
jbe
mov
test
fs
add
mov
cwde
pop
movs
test
jmp
sahf
jmp
mov
in
adc
mov
(bad)
(bad)
jmp
mov
jg
push
push
push
cmp
aaa
hlt
ds
mov
jecxz
(bad)
(bad)
mov
lock
inc
push
jmp
clc
rcl
mov
mov
das
lds
(bad)
(bad)
(bad)
(bad)
(bad)
out
add
call
mov
mov
sub
inc
mov
(bad)
(bad)
(bad)
dec
mov
mov
cdq
cmp
sti
sbb
mov
cmps
mov
cli
push
dec
inc
fild
cdq
mov
test
loopne
dec
cmp
jmp
call
pop
mov
pop
xchg
xchg
movs
in
add
adc
mov
call
sub
ins
jae
xor
push
fist
lock
lods
push
hlt
call
fcom
std
retf
cmp
es
inc
cmc
and
cs
xchg
inc
aad
and
mov
sub
es
loope
or
outs
mov
push
sbb
outs
fld
fucomip
jmp
cmp
jne
or
je
imul
dec
in
sub
jmp
in
lahf
test
pushf
ds
and
je
(bad)
std
fisubr
dec
mov
rol
shl
cmp
xor
adc
clc
pop
inc
lahf
sahf
jmp
dec
push
in
cld
sub
xor
call
or
mov
mov
and
push
out
outs
adc
dec
gs
inc
pop
loop
add
jge
sti
mov
adc
adc
jnp
jle
mov
sub
push
(bad)
cmp
jnp
pop
cdq
hlt
xor
popf
pushaw
add
adc
js
in
xor
mov
aaa
mov
hlt
xor
xlat
add
pop
call
and
sbb
or
xchg
adc
adc
push
or
into
jmp
outs
and
sbb
sbb
cmp
adc
cmp
lahf
xchg
dec
push
out
movs
mov
cwde
pop
fidivr
fs
popf
sub
xchg
mov
push
iret
dec
(bad)
jg
inc
jne
xchg
add
mov
push
or
adc
scas
inc
push
sub
test
add
idiv
fsub
leave
jmp
jp
scas
(bad)
dec
or
push
inc
ja
aam
adc
cs
or
aam
and
sbb
mov
inc
sbb
fsub
pmovmskb
cmp
mov
mov
cmp
shl
(bad)
or
stos
jnp
rcr
push
enter
xchg
ret
retf
test
sar
clc
(bad)
xchg
add
xchg
pop
pop
adc
out
adc
sahf
pop
cmc
pushf
out
fcom
addr16
ins
pushf
inc
adc
dec
push
pop
sub
rol
icebp
nop
pop
(bad)
shl
inc
mov
add
cmps
aas
jmp
push
retf
push
not
ret
jo
xor
popf
retf
les
lds
adc
and
adc
and
mov
nop
neg
mov
in
jp
xchg
daa
repz
mov
push
jns
adc
mov
lahf
mov
icebp
push
(bad)
ficom
inc
inc
jne
xlat
inc
js
inc
push
stos
cmps
test
inc
inc
fstp
fdivr
popa
pop
pop
shl
rcr
adc
dec
cmp
cmp
and
clc
jmp
rol
movs
repz
shl
dec
daa
iret
push
adc
inc
test
xchg
jmp
xor
repz
cs
sbb
sub
sbb
sub
cmc
ja
retf
jecxz
(bad)
xchg
gs
shl
pop
cmc
dec
push
xchg
jmp
mov
xchg
retf
jmp
in
int3
inc
test
push
sar
sub
cmps
dec
sub
shl
jcxz
dec
leave
sub
in
cmp
push
jp
je
adc
or
jge
mov
ja
cld
pop
mov
ret
nop
out
sbb
pop
idiv
cmp
sbb
stos
scas
cmp
push
rcr
ins
lea
out
add
test
inc
pop
add
add
scas
test
inc
call
jg
jmp
push
push
mov
icebp
pop
jp
cmps
add
mov
dec
mov
xor
adc
lods
add
xor
inc
mov
sar
and
icebp
lds
cmp
bound
inc
(bad)
test
mov
add
dec
sbb
sbb
and
and
or
ins
cmp
mov
es
(bad)
or
mov
scas
jmp
stos
cmp
scas
xchg
out
enter
lds
imul
push
cmps
sti
and
inc
cmc
inc
cdq
movs
test
loopne
test
and
lods
test
in
xchg
add
add
test
dec
sbb
mov
scas
dec
push
and
or
ss
int3
out
jp
or
mov
mov
loop
jns
xchg
mov
or
scas
hlt
push
cmp
push
xchg
or
add
mov
lods
mov
sbb
adc
pop
pop
fld
and
retf
test
fst
std
add
fsubr
pop
pop
(bad)
test
pop
fst
aaa
daa
lods
test
lds
sahf
test
sahf
jb
xchg
sbb
test
jno
jg
jl
fild
mov
push
mov
test
sub
or
mov
jo
scas
shr
or
push
idiv
cli
shl
outs
sbb
lods
jnp
or
ja
cmps
mov
sbb
push
cmp
push
in
mov
addr16
sbb
loopne
pop
pop
mov
jno
sbb
or
inc
adc
int
mov
dec
rcl
mov
out
pushf
dec
fnstsw
inc
ret
push
and
jne
add
div
mov
fist
push
sbb
cli
sbb
sbb
mov
jle
xlat
cmp
mov
mov
ss
daa
jne
jl
in
test
mov
xchg
fwait
jge
stc
cmp
and
jmp
lahf
fsub
cmps
lea
lods
xchg
add
std
mov
mov
jb
adc
outs
repnz
(bad)
and
inc
mov
jnp
xchg
push
jl
cmp
jl
mov
or
and
push
test
enter
test
icebp
and
mov
mov
push
sahf
aad
add
shl
inc
(bad)
push
xchg
mov
clc
pusha
inc
mov
fmul
jmp
or
sbb
in
cmp
lods
pop
stos
and
add
add
jecxz
sub
and
dec
(bad)
shl
loopne
dec
add
(bad)
repz
inc
mov
cs
nop
ins
xchg
call
mov
sar
dec
jmp
lahf
push
inc
cdq
mov
mov
pop
repnz
rcl
popa
ss
inc
mov
adc
adc
push
mov
(bad)
retf
jae
repnz
test
xor
or
mov
leave
pop
cmp
jmp
repnz
inc
js
and
cmp
es
je
inc
das
xchg
and
call
add
xchg
sbb
or
cmp
jbe
jns
adc
jbe
xchg
xchg
ins
inc
mov
mov
push
and
scas
inc
pop
outs
ja
dec
push
jmp
xchg
sub
je
add
pushf
cmp
push
add
cmp
cmp
pop
ret
sub
hlt
push
pop
shl
and
mov
add
mov
dec
je
dec
in
test
jae
xchg
xchg
aam
sub
rol
sbb
add
test
fld
push
sbb
out
out
pop
jb
bound
gs
or
ds
push
mov
cmp
(bad)
sahf
hlt
(bad)
aam
rep
(bad)
xor
add
call
adc
icebp
xor
out
cdq
outs
add
dec
iret
mov
shl
cmps
pop
xor
jmp
xchg
loop
xchg
dec
mov
pop
mov
add
pop
jns
(bad)
adc
mov
or
pop
repz
dec
pop
popa
jecxz
rol
clc
and
fs
cmp
ins
mov
sahf
or
cmp
xchg
or
loope
or
and
sbb
out
push
sbb
or
mov
adc
xlat
test
test
fs
pop
sbb
jg
out
in
or
loope
mov
stc
test
sar
add
je
dec
div
jg
cmps
test
in
repz
stos
bound
ja
imul
sub
sub
int3
into
jecxz
jmp
cmp
adc
in
sar
fs
push
sahf
adc
shr
ja
rcr
loope
or
xchg
pop
sub
enter
inc
xchg
sbb
leave
jecxz
ror
xor
rcr
dec
sbb
ret
mov
and
xchg
(bad)
push
call
pop
rcl
adc
inc
stc
xlat
cmp
fwait
xchg
nop
push
in
sub
adc
pop
dec
mov
ret
dec
imul
and
rcl
lahf
xchg
xchg
repz
call
xor
jns
fwait
js
and
(bad)
out
add
lds
aam
or
jbe
jp
mov
xor
cs
cmps
cmp
add
cwde
out
(bad)
popa
in
dec
dec
sahf
dec
inc
cmp
loop
pop
sbb
jmp
jnp
(bad)
inc
push
mov
inc
push
rol
ror
daa
cmp
int
xchg
and
(bad)
(bad)
shl
sti
sub
and
in
loop
fdivr
pop
mov
jmp
cmp
sti
xchg
in
cs
fldlg2
rcl
or
stos
fwait
pop
arpl
sub
pushf
push
call
fwait
test
les
sub
fild
inc
jle
inc
aaa
fdiv
sub
and
lods
sar
adc
and
sar
add
or
and
in
dec
inc
call
inc
(bad)
mov
mov
bnd
dec
xchg
sti
jle
mov
lea
aas
inc
arpl
cmps
xchg
out
mov
arpl
add
mov
inc
shr
test
cmc
xor
cmc
cmp
xlat
int3
dec
shr
fdiv
jno
xor
xor
int
int3
les
add
xchg
jnp
push
fdiv
xor
push
gs
add
add
sub
int3
inc
push
mov
push
jns
lds
push
fdivrp
jbe
cmp
add
daa
fwait
in
cmp
jmp
xchg
push
add
or
jbe
mov
mov
jmp
sub
in
push
test
hlt
mov
xlat
xchg
and
outs
mov
(bad)
scas
clc
adc
xchg
scas
mov
pop
fcomp
popa
xchg
inc
push
mov
jbe
or
xchg
imul
pop
dec
into
and
add
loopne
jmp
lods
sbb
adc
adc
mov
adc
enter
leave
mov
mov
fnstenv
cmp
cmp
stos
adc
xor
movs
sbb
jnp
xor
push
cmp
or
stc
cld
xchg
mov
cmc
mov
push
mov
sti
jmp
xor
rcl
ins
or
les
xchg
and
jns
or
test
sub
add
mov
jecxz
inc
stos
cmp
mov
lds
cs
or
dec
push
(bad)
imul
mov
ret
sar
adc
retf
dec
cmp
pop
inc
rcr
shl
sub
or
(bad)
ds
jns
mov
push
jle
add
je
fcom
enter
mov
jnp
aaa
(bad)
jg
dec
xchg
outs
jle
cmp
out
cmps
mov
mov
pop
cmps
out
inc
jo
pop
push
cdq
out
scas
cmp
mov
scas
and
mov
clc
push
cmc
pop
sbb
pusha
add
loope
mov
int3
mov
mov
ss
xchg
jge
sbb
inc
mov
cmp
or
adc
std
lock
retf
int
in
pop
movq
mov
repz
out
les
outs
and
(bad)
(bad)
(bad)
call
xor
jo
popa
shl
(bad)
pop
sub
outs
xor
add
aaa
pushf
or
push
mov
(bad)
(bad)
(bad)
jmp
sub
mov
xchg
call
lea
inc
leave
test
push
mov
xchg
ins
nop
(bad)
(bad)
(bad)
inc
dec
add
repz
sar
push
cmp
js
out
fwait
jge
out
(bad)
dec
hlt
adc
adc
hlt
pusha
(bad)
pop
mov
inc
dec
inc
mov
cli
bound
(bad)
(bad)
call
xchg
ss
in
xchg
push
(bad)
mov
cmp
and
(bad)
push
jle
cmps
rcl
stos
xor
mov
(bad)
jmpw
cdq
pop
or
cs
ins
iret
(bad)
mov
dec
aas
jns
loope
retf
and
in
pop
cmc
(bad)
mov
adc
push
mov
sti
lock
(bad)
call
and
out
or
push
ja
lods
rol
dec
ret
dec
inc
sbb
sbb
retf
ret
mov
jne
or
jne
(bad)
mov
jnp
icebp
jne
jmp
jns
adc
and
fiadd
pop
add
adc
pop
lods
aas
add
cmp
pop
mov
cld
adc
scas
lods
jno
push
pop
test
and
shl
cmp
jbe
ja
fisub
bound
sub
loopne
cmp
loope
inc
xlat
mov
repnz
xor
rcl
dec
dec
jmp
scas
dec
jmp
repnz
xchg
rcr
dec
test
inc
sub
lock
or
mov
gs
push
mov
psubsb
add
push
pop
js
aam
inc
cld
xor
es
pop
je
popa
cmp
enter
cld
ret
mov
mov
loop
pop
mov
loopne
sub
xchg
je
mov
pop
js
inc
push
sbb
dec
cmp
in
inc
dec
xchg
push
xor
dec
mov
sbb
pop
daa
std
mov
out
cmp
clc
add
xor
repnz
or
xor
pusha
push
mov
je
icebp
jo
and
movs
cdq
idiv
xchg
or
idiv
hlt
or
cmp
pusha
aas
inc
or
push
mov
out
mov
cmp
sahf
fsubr
pop
retf
out
adc
ss
out
call
call
add
xor
aad
aaa
aaa
xor
test
outs
cld
sahf
adc
call
push
mov
mov
lock
(bad)
aas
push
dec
cmps
retf
add
xchg
cli
dec
cmps
mov
dec
or
icebp
mov
shl
push
bound
mov
popf
jb
mov
cmp
test
jne
clc
loope
pop
test
mov
(bad)
cmp
mov
sbb
aad
jp
dec
mov
je
bound
push
add
mov
sbb
push
cmps
xchg
es
cmp
jb
or
inc
dec
cwde
es
push
dec
xchg
ins
mov
mov
and
into
out
mov
pop
ffreep
and
scas
(bad)
ret
in
(bad)
repnz
push
je
sbb
js
xor
bound
jge
into
add
out
or
dec
fstp
pop
movs
lea
rcr
jl
adc
cmp
cmps
(bad)
ins
dec
ds
add
push
cmp
sub
cld
test
pop
jecxz
add
rcr
adc
cli
push
fmul
inc
cmp
cmp
rol
jae
push
call
jp
dec
adc
or
int
cs
cmp
mov
sbb
push
ss
pop
inc
or
(bad)
cmps
jb
push
and
scas
push
push
cmp
xor
into
jmp
jmp
outs
mov
hlt
sar
sar
int
jne
retf
fcmovb
(bad)
fild
mov
stc
jmp
mov
in
movs
cmps
loopne
mov
jle
icebp
mov
mov
adc
pop
rol
icebp
jge
xor
idiv
adc
or
push
js
pop
call
wbinvd
mov
push
xor
cld
shl
sub
xchg
add
dec
sub
sub
mul
mov
data16
xor
rol
push
mov
or
jle
nop
jnp
push
dec
sub
inc
dec
jb
test
loop
jmp
(bad)
mov
repz
jno
les
add
mov
sub
inc
jns
mov
mov
sub
dec
aam
and
cdq
mov
mov
pushf
dec
and
push
mov
stos
sahf
pushf
push
out
mov
cmp
pusha
jne
jg
cwde
aas
test
fnstenv
xor
lahf
jecxz
add
into
xor
and
out
adc
(bad)
mov
push
mov
jne
mov
cdq
stos
jmp
lock
mov
xchg
xor
mov
sub
mov
cmc
and
dec
mov
sub
out
movs
fdiv
inc
rcr
int
pop
mov
es
mov
sbb
or
jl
call
mov
push
jno
jle
cmps
pop
cld
(bad)
jmp
inc
(bad)
fcomp
loop
inc
jo
adc
pop
jo
ret
inc
sub
pusha
add
in
shr
and
push
jae
mov
jecxz
mov
int
mov
dec
aad
repz
test
dec
bnd
movs
cli
inc
jo
loope
aad
mov
arpl
mov
mov
sbb
movs
mov
scas
or
mov
mov
inc
ret
lea
lods
pop
inc
mov
sub
mov
mov
cmp
cli
pop
iret
mov
int3
mov
mov
leave
stos
mov
sbb
not
add
inc
push
inc
cdq
outs
cli
sub
scas
idiv
jge
dec
enter
(bad)
adc
push
sbb
shr
sub
or
pushf
int3
mov
xchg
jne
and
(bad)
jne
add
mov
push
retf
and
daa
fist
cld
cmp
pop
mov
das
aaa
adc
std
sbb
aaa
xchg
sub
xor
inc
arpl
lds
xor
pop
sahf
xlat
ja
stos
mov
cmps
inc
imul
jnp
sbb
xor
push
inc
xchg
add
dec
dec
mov
push
(bad)
mov
and
xchg
cwde
mov
shl
cmp
pop
mov
int3
mul
jae
mov
inc
jbe
or
mov
pop
sub
push
loop
xchg
pop
icebp
sub
xor
and
call
icebp
pop
cmp
sub
out
daa
mov
pop
leave
not
aas
cli
jmp
ds
cmp
ss
cmc
jnp
and
not
cmp
repz
dec
clc
xchg
bound
push
xlat
jmp
pushf
pop
movs
add
xlat
loop
dec
mov
sub
cmp
or
cmp
sbb
aas
call
mov
sub
jmp
pop
cmp
jns
cdq
repz
push
push
jg
repnz
fwait
ret
push
push
or
inc
ss
loop
mov
repz
cwde
pop
inc
or
and
rcr
inc
push
scas
push
add
loopne
and
cmp
lea
add
push
add
mov
das
jg
mov
scas
out
outs
or
and
lahf
mov
mov
in
test
sahf
mov
adc
or
or
mov
inc
xlat
clc
sbb
je
mov
idiv
cdq
outs
cmps
mov
shl
add
push
push
cs
xlat
std
add
xchg
repz
scas
ds
aas
fnsave
mov
mov
loop
push
imul
(bad)
std
lods
arpl
aaa
mov
in
pushf
sbb
xchg
dec
outs
dec
and
test
rol
out
es
mov
popf
aad
jge
cmps
sahf
sub
xor
stos
mov
aas
mov
or
mov
cmp
shr
sub
push
sub
sub
rol
add
jns
pop
je
cmp
scas
add
in
cmp
and
lahf
xchg
push
not
(bad)
jno
dec
fist
call
sbb
pop
sti
or
dec
pop
arpl
and
repz
fldenv
xlat
(bad)
(bad)
mov
and
mov
lods
(bad)
(bad)
call
sahf
sub
out
imul
sahf
(bad)
int
cmp
cmp
repnz
popf
inc
push
dec
je
add
and
mov
das
inc
sbb
push
and
add
enter
nop
(bad)
push
jmp
mov
lods
mov
dec
and
fisubr
repnz
xchg
push
dec
je
pop
lods
mov
call
movs
neg
inc
cli
inc
cmp
sbb
call
dec
push
push
push
or
idiv
or
jno
sbb
iret
pop
or
pop
mov
mov
jp
jae
test
adc
mov
scas
leave
cmp
retf
mov
sti
and
dec
rep
mov
mov
pop
sbb
push
mov
sub
imul
test
cmp
aaa
adc
dec
shl
xor
mov
pop
call
xchg
sahf
mov
retf
nop
mov
ret
cmp
das
js
push
call
jle
out
es
jne
or
xor
les
int
loopne
pop
cld
iret
sti
pushf
test
pop
call
(bad)
dec
in
jge
in
push
pop
inc
xor
shr
scas
xor
neg
cmp
fdivp
imul
cmps
out
outs
dec
add
repnz
mov
std
adc
or
cmp
test
mov
mov
fsubr
lahf
jle
cmp
call
mov
ror
call
lock
call
ds
ja
ds
jb
add
or
gs
call
ret
jmp
rol
dec
psrad
mov
or
xchg
cld
repnz
aas
pop
jne
dec
inc
je
push
adc
mul
ret
xor
pop
pushf
dec
and
pop
mov
adc
add
rol
jmp
add
adc
and
(bad)
stos
test
int3
scas
ja
cvttps2pi
adc
mov
xor
call
dec
pop
aaa
retf
adc
ds
add
mov
mov
push
xchg
push
into
sbb
setbe
nop
xchg
adc
or
add
loope
iret
and
call
inc
loopne
out
aas
mov
and
mov
icebp
outs
(bad)
xor
push
repnz
pop
inc
inc
call
and
gs
js
or
push
jl
addr16
mov
mov
push
cs
in
ja
adc
out
push
out
stos
inc
xchg
xchg
pop
dec
dec
pop
cmp
adc
add
mov
adc
dec
shl
std
pushf
cmp
and
lock
jno
rcl
dec
xchg
shr
xlat
sbb
mov
xor
xchg
pop
les
pop
mov
xchg
or
sbb
xchg
mov
jo
outs
cmp
xchg
or
mov
pop
push
and
loope
aas
xchg
sub
(bad)
ja
xchg
xchg
rol
pop
rol
mov
rcl
mul
fldcw
push
xor
shr
inc
xchg
dec
cmps
cmp
sahf
rcl
(bad)
push
push
fsubr
pop
call
jo
out
cwde
sbb
cmp
sbb
aaa
or
and
es
(bad)
sbb
je
mov
in
add
idiv
loop
sub
mov
shl
push
not
aaa
sub
and
dec
sub
sbb
jnp
cmp
push
mov
pop
mov
mov
push
adc
inc
mov
fs
and
bound
paddb
sub
scas
xchg
sbb
outs
fisub
mov
ret
(bad)
lods
jne
arpl
lahf
clc
push
out
jge
push
push
cs
gs
mov
xchg
not
or
ss
pop
fwait
cmc
push
retf
inc
mov
aaa
xchg
jp
dec
jp
push
das
lods
mov
sub
mov
test
shl
or
cmps
loopne
dec
mov
aam
push
jo
pop
dec
iret
xchg
pop
bnd
adc
dec
add
sub
and
jg
daa
cmp
add
fcmovnu
pop
nop
pop
lods
pop
jmp
mov
add
out
data16
cli
jns
jle
add
mov
retf
add
outs
inc
mov
aad
std
mov
push
push
cli
aas
out
jmp
mov
cld
push
idiv
pop
push
loopne
retf
adc
in
pop
mov
push
fucomip
mov
mov
or
xlat
cmp
jge
push
arpl
fcom
movs
xlat
fst
imul
xchg
(bad)
xor
adc
mov
mov
xlat
jb
sub
fisub
fmul
and
mov
xchg
pop
(bad)
xor
dec
adc
in
imul
cmc
adc
out
popa
pop
push
int3
cmp
(bad)
sub
and
scas
xchg
es
sub
mov
xchg
aaa
xchg
dec
push
jns
jp
enter
loope
(bad)
xchg
jns
cmc
test
xchg
icebp
xor
and
xchg
mov
push
fiadd
adc
and
aas
xchg
mov
or
imul
cmp
and
cmc
test
inc
mov
das
das
xchg
jo
mov
pop
icebp
fwait
in
retf
mov
ja
pop
mov
dec
xchg
xchg
sbb
retf
imul
add
scas
sbb
shl
and
cmps
shl
int3
mov
mov
jns
pop
sub
adc
out
mov
mov
or
mov
mov
push
xchg
add
ins
jo
push
push
cwde
scas
jle
adc
mov
add
mov
enter
out
or
mov
(bad)
push
mov
fist
dec
lock
xchg
jmp
mov
cmps
jge
jle
xchg
mov
sahf
arpl
ss
jns
push
sbb
add
mov
inc
push
jbe
and
daa
adc
cmp
mov
sub
pop
sub
xchg
call
enter
push
pop
js
pop
not
std
(bad)
enter
jo
and
repz
dec
xchg
into
sub
lock
les
(bad)
xor
lods
mov
int3
out
add
sbb
push
fcomip
inc
adc
push
mov
lods
shr
cmps
dec
out
repnz
push
xor
cmps
je
mov
(bad)
jg
aas
retf
cmps
mov
xor
push
mov
add
loop
(bad)
push
dec
xchg
jg
ret
(bad)
dec
push
jle
imul
jg
push
and
pop
js
push
mov
bound
call
mov
and
daa
push
(bad)
mov
mov
loope
aad
div
push
push
mov
mov
and
daa
shl
in
dec
ror
fmul
leave
xchg
lea
(bad)
into
hlt
outs
nop
lock
push
lds
cdq
div
and
adc
sub
loopne
mov
or
xor
nop
pop
retf
push
fwait
mov
addr16
lock
gs
jns
sbb
and
jno
adc
or
push
jbe
pop
lock
pushf
push
ins
mov
shr
int
lea
aas
xchg
push
or
ror
imul
cmp
(bad)
cmc
dec
and
out
push
addr16
jbe
in
pop
sbb
into
retf
sbb
pop
sbb
fsubr
je
add
jmp
das
or
xchg
push
push
add
cmp
jmp
(bad)
int3
dec
(bad)
cdq
inc
in
in
cmps
or
aaa
mov
inc
xor
pop
push
xor
push
push
iret
ret
repnz
sub
into
fadd
ret
push
rcl
push
xlat
popf
inc
bswap
push
retf
retf
cmps
sti
mov
pop
mov
xor
inc
sub
xchg
or
push
(bad)
jo
repz
shl
pop
and
les
leave
pushf
dec
add
out
loop
lahf
adc
jb
xor
and
mov
dec
dec
je
aam
xor
cmps
repnz
adc
inc
cmc
fsubr
push
js
or
xor
cmps
mov
push
pop
push
jbe
mov
adc
mov
out
in
scas
aam
cwde
push
(bad)
leave
mul
or
mov
shl
adc
and
(bad)
and
and
dec
add
ret
lock
jl
sti
push
fmul
icebp
int
loopne
ds
adc
test
mov
push
or
cmp
sbb
ret
ja
or
sub
es
add
adc
aad
mov
rol
adc
and
loopne
and
sldt
adc
fcom
and
push
lea
shr
and
mov
addr16
adc
aad
rcr
cmp
inc
shl
mov
les
daa
sbb
(bad)
mov
add
xchg
sub
and
sbb
shl
and
add
push
push
(bad)
into
adc
pop
lods
dec
pop
and
cmp
cld
xlat
xchg
push
icebp
enter
add
xor
push
and
pop
clc
rol
add
dec
call
loop
icebp
lea
scas
or
xchg
out
sbb
push
add
and
jns
xor
popa
mov
enter
add
jp
sbb
cs
(bad)
rcl
cmp
arpl
jle
out
and
and
jb
mov
stos
daa
cmp
mov
jo
les
movs
and
push
(bad)
pop
and
add
enter
xchg
push
push
(bad)
and
movs
cmp
xchg
xchg
je
das
jmp
or
xor
movs
mov
inc
pushf
push
call
cs
mov
pop
push
outs
fild
pop
sahf
xlat
add
fcmovnu
sub
and
icebp
pushf
or
retf
add
sbb
mov
test
fild
inc
add
dec
or
jle
outs
push
xor
in
cmp
outs
mov
mov
sahf
mov
push
xor
push
xchg
xchg
mov
push
je
js
nop
inc
enter
inc
addr16
sub
push
push
sbb
push
and
push
cmp
mov
outs
into
sub
sbb
push
or
and
pop
in
xchg
pop
xchg
add
retf
jo
xchg
repnz
push
enter
xchg
call
lods
mov
push
add
push
ja
repnz
adc
loop
shr
and
sbb
aam
xchg
daa
and
mov
xchg
xchg
xor
into
inc
mov
ins
push
es
mov
jge
push
shl
inc
inc
jp
bound
rcr
repz
push
repz
xor
jge
xor
enter
mov
repnz
loop
xor
mov
fcomip
xor
int3
mov
xor
cmp
cmp
cmp
loope
out
fstp
nop
xchg
inc
and
loope
lock
in
sbb
call
popf
xchg
lahf
xchg
lahf
popa
jge
scas
imul
mov
clc
inc
mov
jnp
add
push
and
or
clc
cs
mov
es
(bad)
shl
inc
adc
cmps
fstp
xor
jg
adc
bswap
inc
jle
jb
xor
inc
cmp
nop
nop
mov
stos
imul
push
addr16
mov
and
xorps
fdiv
clc
cmp
(bad)
daa
lods
jbe
jbe
in
pop
mov
jbe
retf
sbb
(bad)
(bad)
pop
pusha
imul
(bad)
in
and
shl
pop
xor
jmp
cmp
jp
lods
(bad)
(bad)
push
ss
inc
imul
fadd
push
jmp
fdivr
jg
jmp
fsub
enter
gs
xchg
jne
mov
cmp
inc
mov
sti
clc
ds
mov
push
(bad)
(bad)
jmp
xor
clc
addr16
and
mov
call
hlt
clc
lds
(bad)
std
mov
jno
push
cmp
cmp
cmps
and
les
js
into
push
jle
jae
in
cmps
std
and
push
adc
jmp
loopne
sbb
ret
jle
lds
iret
or
xor
push
gs
fsub
dec
fdivr
(bad)
stc
pop
mov
loope
jb
sbb
mov
jo
push
aam
arpl
gs
fdivr
push
sti
sti
int3
ror
(bad)
fadd
push
pop
sti
cmp
hlt
icebp
push
inc
push
clc
es
repz
lock
aas
test
cmp
loope
push
scas
and
mov
jle
call
xbegin
jp
xor
mov
or
push
fisubr
icebp
jns
jg
repnz
fsub
xor
aam
in
fnsave
mov
aam
js
addr16
cmp
imul
ins
push
outs
jb
lock
mov
out
sti
ja
jae
mov
mov
into
sbb
mov
outs
call
sbb
jle
outs
jbe
clc
or
cmps
mov
loope
(bad)
loopne
(bad)
sub
scas
pop
inc
js
pop
or
xchg
test
out
mov
mov
aam
sbb
aas
mov
sbb
cmp
sbb
mov
xchg
fisubr
dec
(bad)
bound
js
dec
lds
(bad)
xor
sbb
loope
or
addr16
or
mov
jg
mov
outs
xchg
xor
mov
mov
adc
fdivr
jmp
sti
mov
push
push
jns
(bad)
mov
cmp
cld
aam
cmp
push
push
mov
xchg
add
lock
mov
jle
lods
push
pop
bound
jle
ret
mov
in
mov
cdq
and
pop
and
cmp
mov
mov
jb
sahf
js
sbb
lds
sbb
shl
push
mov
addr16
mov
mov
jmp
push
(bad)
gs
jo
pop
ss
mov
(bad)
fidivr
(bad)
test
(bad)
ins
out
cs
(bad)
ins
das
push
nop
push
cmp
pop
retf
out
daa
push
xchg
inc
push
jae
pop
ret
ror
out
cs
jb
shr
lock
cmp
jne
imul
mov
jle
out
mov
xchg
enter
sahf
sti
mov
jg
outs
and
xchg
sti
or
xchg
mov
push
mov
xor
sbb
int3
enter
xchg
add
jp
shl
test
sbb
jne
push
out
sbb
mov
sub
iret
or
jbe
or
jle
cld
push
inc
mov
and
adc
mov
mov
fidivr
cwde
in
jne
outs
mov
retf
jbe
imul
push
push
mov
fwait
int
lock
es
or
or
ja
sbb
out
imul
mov
push
shl
jle
and
data16
push
(bad)
push
mov
popf
sbb
div
adc
aas
hlt
mov
imul
fmul
and
bound
ss
in
jmp
and
fmul
fadd
xchg
dec
xchg
pusha
(bad)
pop
ss
leave
ins
aam
mov
push
lahf
imul
ror
retf
test
(bad)
push
and
sub
ret
js
fwait
int
mov
addr16
push
push
inc
lock
mov
mov
ret
push
fsub
push
ss
aad
data16
jbe
push
jb
jo
cmp
lock
ins
xlat
pop
dec
gs
cmp
mov
fnstenv
fwait
dec
popf
fdivr
push
push
jge
loop
mov
sahf
data16
pop
lods
nop
mov
ds
mov
pop
shl
fs
ins
fdiv
js
push
out
ss
or
out
fidivr
or
out
mov
out
mov
ss
hlt
nop
jno
push
push
test
inc
out
cmp
lods
arpl
aad
in
jl
test
rcl
nop
mov
(bad)
push
call
mov
cmps
fldcw
movs
das
int
push
(bad)
in
out
loopne
ins
mov
cmp
popf
mov
fwait
int
sti
dec
and
push
das
sub
and
push
or
and
cs
adc
sub
xchg
adc
push
add
sub
ins
pop
mov
data16
ss
or
mov
mov
fiadd
xlat
mov
test
inc
pop
mov
fstp
mov
pop
stc
dec
test
jle
addr16
sar
cli
pop
stc
fcmovnu
test
push
test
cld
sti
clc
stc
lds
fdivr
hlt
mov
xchg
pop
(bad)
hlt
es
mov
mov
mov
xchg
idiv
in
cmps
dec
jmp
div
outs
call
xor
dec
ins
clc
sbb
mov
imul
adc
ins
(bad)
jmp
push
imul
es
mov
(bad)
lds
dec
mov
shr
push
imul
mov
jne
sbb
popf
pmaxsw
mov
outs
jns
sub
daa
clc
call
lods
fwait
idiv
lds
jmp
xchg
aam
mov
sub
lods
loope
arpl
(bad)
jg
and
push
ret
outs
and
or
mov
fisubr
cmps
jmp
vmread
add
sub
inc
popw
ins
cmp
cmp
test
ret
adc
inc
mov
mov
fs
pop
ins
fs
hlt
(bad)
pop
jmp
adc
imul
mov
mov
mov
inc
std
fsub
fld
xchg
or
arpl
or
push
aam
mov
or
or
jnp
inc
test
push
fmul
call
inc
nop
sbb
mov
inc
shl
dec
scas
mov
jp
jl
cmp
sub
les
imul
test
mov
mov
ss
rol
xchg
mov
imul
add
jns
fbld
hlt
leave
cwde
lods
and
sbb
or
xor
adc
(bad)
shl
popa
int3
lods
push
and
pop
call
sub
push
mov
inc
mov
data16
out
xor
mov
out
pusha
aad
pop
(bad)
(bad)
dec
jbe
cmp
pop
lock
rcr
enter
scas
mov
jmp
in
push
(bad)
jmp
jge
cdq
iret
mov
bsf
xor
call
mov
(bad)
lock
or
jmp
adc
(bad)
sbb
pop
mov
pop
mov
or
pop
or
addr16
xor
(bad)
pop
imul
imul
mov
push
int3
or
popa
mov
ret
scas
int3
inc
(bad)
in
mov
fcomip
call
sti
enter
and
push
pop
dec
(bad)
(bad)
jmp
js
call
cmp
pop
jecxz
lds
lea
xor
xchg
(bad)
fistp
xor
jno
push
fbld
jne
inc
(bad)
(bad)
int3
xchg
jbe
fwait
dec
lock
jo
or
add
mov
outs
outs
ss
sub
inc
mov
daa
loopne
mov
mov
mov
xor
fldenv
or
clc
xchg
cmp
dec
es
adc
inc
pop
mov
inc
jb
cmp
adc
push
aaa
mov
push
pop
(bad)
adc
mov
(bad)
rcl
arpl
push
push
ins
jns
in
fwait
dec
call
pop
mov
jl
pushf
mov
call
sbb
and
and
jns
jns
repnz
and
and
movs
jb
hlt
fist
imul
pop
fwait
dec
xchg
gs
push
and
retf
xchg
aaa
cmp
pop
data16
push
sub
add
daa
movs
leave
inc
lods
ss
jae
popf
ds
jnp
ret
std
mov
jmp
jg
push
sbb
jle
lock
inc
pusha
and
in
gs
push
stc
sbb
add
mov
ins
pop
retf
cld
or
clc
ds
mov
mov
and
aad
gs
hlt
in
leave
xor
sub
add
dec
or
xchg
jbe
inc
add
sub
addr16
repnz
data16
hlt
shl
retf
xchg
es
clc
das
sbb
frstor
mov
cmps
mov
sahf
movs
pushf
movs
xlat
push
not
movs
xchg
je
xchg
(bad)
pushf
jl
dec
je
shl
jmp
push
sbb
jnp
movs
test
ja
(bad)
std
push
mov
add
add
test
movs
pop
loopne
jmp
jg
xor
or
(bad)
jns
mov
pop
pop
les
pop
and
fsubr
jne
xchg
fdivrp
inc
cld
in
pop
cli
stc
jg
lahf
and
xor
push
and
and
xor
sbb
in
addr16
neg
in
push
and
imul
add
fisubr
lds
adc
dec
jae
lea
inc
mov
or
push
lods
mov
sar
mov
cmc
and
mov
adc
jno
cld
test
pop
fild
out
das
or
push
loope
sbb
es
jno
sbb
add
(bad)
test
lock
sub
pop
mov
pusha
mov
pop
(bad)
aad
daa
fistp
fisubr
fsub
hlt
pop
inc
sbb
jmp
cld
adc
sar
outs
fidivr
enter
dec
add
jmp
sbb
lods
rcr
adc
dec
jnp
xchg
popf
adc
add
and
xchg
retf
retf
loope
pop
cmps
cmp
push
adc
fistp
pop
xor
cmps
adc
pop
adc
push
xor
(bad)
sbb
xor
mov
and
gs
aam
jmp
aad
xor
aad
jo
test
add
sbb
jb
rcr
out
je
cdq
and
mov
jae
push
repnz
xchg
sbb
cld
pop
rcl
mov
adc
push
adc
shl
add
sbb
sub
adc
inc
push
xor
xor
cmp
bound
add
jns
jecxz
call
xchg
adc
les
and
into
add
push
movs
pop
je
cdq
jno
mul
xchg
out
aaa
aas
mov
loop
pusha
sti
cmp
cdq
xchg
cs
jmp
dec
dec
(bad)
cmp
sub
xor
push
je
mov
stc
call
add
adc
aad
ror
add
xchg
cmp
bound
adc
cld
ret
jecxz
and
inc
dec
pushf
cmp
jne
scas
jne
sub
xor
xor
scas
ret
and
mov
lock
pop
push
repnz
sub
enter
repnz
mov
push
xlat
ret
ret
sti
mov
dec
add
inc
jle
stos
or
int
push
xor
sub
out
dec
call
pop
imul
daa
cmp
dec
je
(bad)
and
test
pusha
jmp
push
xchg
nop
pop
dec
out
and
lock
cmps
stc
adc
mul
fnstenv
pusha
push
pusha
jo
sub
rcr
rcr
jb
pop
inc
inc
aaa
push
dec
loopne
fisttp
fwait
mov
push
dec
or
sub
adc
push
aas
add
(bad)
cmp
icebp
jne
sub
inc
jle
xor
inc
cmps
and
push
pop
(bad)
jns
call
cvtdq2ps
retf
push
dec
or
and
dec
mov
inc
lahf
call
add
movs
aas
inc
adc
and
jmp
jbe
pop
and
mov
pop
(bad)
fstp
outs
xchg
inc
fbstp
xor
xchg
add
outs
popa
call
xor
push
shl
pop
push
xchg
mov
call
or
shl
(bad)
jmp
mov
test
sub
(bad)
sbb
test
mov
pop
dec
idiv
mov
out
and
pusha
push
push
pusha
push
pop
pop
jmp
or
dec
pop
dec
cmp
push
dec
dec
inc
and
push
and
push
sbb
jp
jno
ins
outs
data16
jno
ins
push
add
push
cmp
xor
cmp
and
and
dec
dec
inc
pop
inc
dec
dec
dec
inc
dec
dec
push
push
in
dec
inc
pop
pop
aam
ja
xchg
push
pusha
pop
push
push
push
push
ins
outs
js
imul
mov
jp
jae
aaa
xor
xor
bound
test
(bad)
cmp
ds
aaa
and
sbb
inc
(bad)
mov
add
out
inc
inc
into
jo
pop
imul
mov
mov
push
inc
pop
jp
add
pop
pop
mov
pop
mov
cmp
cmp
or
icebp
inc
scas
jb
add
call
pop
sbb
jl
pop
xor
repnz
outs
test
stc
adc
or
jae
fisttp
push
jb
lds
push
ffree
cdq
mov
mov
sub
push
sbb
mov
lock
cmp
rol
xchg
push
es
push
aas
cdq
ror
xchg
sbb
push
jbe
xchg
push
es
push
loopne
cmp
push
cdq
mov
movs
inc
call
jne
rcl
enter
push
pop
pop
sub
es
pop
(bad)
ins
add
sbb
push
and
cmp
lods
dec
add
out
(bad)
rcl
gs
loop
inc
in
dec
add
(bad)
stc
loopne
jns
test
daa
fadd
pop
cmp
jmp
inc
lds
lods
not
shl
pop
mov
mov
jo
mov
xlat
sub
mov
jns
add
mov
xchg
shr
push
ds
mov
mov
mov
in
dec
ja
sbb
jae
movs
xchg
add
push
add
(bad)
in
mov
sub
pop
loope
fisubr
jmp
dec
jnp
jmp
dec
mov
sub
xchg
retf
ds
cmp
imul
dec
adc
and
push
lods
add
jne
pop
push
cs
sub
xchg
xchg
xchg
fs
dec
test
mov
xchg
ss
lods
inc
sub
push
jns
pop
adc
inc
movs
xchg
fucom
cmp
arpl
dec
xor
ret
add
cdq
les
cs
pop
pop
aas
mov
sub
adc
out
loope
pop
mov
pop
in
imul
and
pop
test
enter
sysret
and
push
cmps
lods
cmp
push
scas
xor
and
pop
adc
(bad)
cdq
clc
push
fbld
xchg
xchg
xchg
mov
add
jle
xchg
xchg
retf
call
arpl
pop
fsub
and
add
aas
cmp
jle
int3
fisttp
pop
sbb
push
mov
cmp
and
pop
or
jle
push
daa
repnz
stos
xor
and
test
xchg
ss
cld
push
sbb
xchg
xchg
jg
jae
add
inc
jecxz
xor
into
mov
and
(bad)
inc
retf
retf
outs
mov
call
add
and
xor
retfw
inc
addr16
jnp
inc
aad
aam
xchg
pop
adc
out
and
shl
(bad)
mov
mov
pop
jns
ins
sub
out
leave
es
out
repz
jmp
add
xchg
fcomi
jbe
inc
mov
inc
push
in
mov
xchg
inc
push
mov
push
jb
mov
mov
dec
mov
adc
jnp
jg
rcr
dec
ins
push
add
pop
dec
jb
mov
push
push
dec
push
jl
push
push
jmp
mov
jl
leave
test
shr
(bad)
xlat
xor
mov
fmulp
clc
inc
fmul
jmp
addr16
mov
cmp
jg
jo
addr16
rol
dec
ja
sub
mov
(bad)
popa
sub
stos
jo
jae
sbb
xchg
jne
xchg
fs
xchg
outs
es
not
sub
mov
xor
dec
stc
test
cmp
inc
ins
inc
sub
test
int
pop
xor
add
outs
arpl
pushf
ror
stos
inc
daa
retf
out
aad
cmps
cmp
out
lock
jmp
fwait
or
(bad)
nop
jae
cmps
lock
loop
xchg
pop
fs
inc
or
adc
mov
push
daa
cmp
and
scas
xor
jns
mov
jns
push
es
aaa
cli
and
ret
pop
cmps
(bad)
and
je
pop
pop
fnop
jge
mov
test
retf
sbb
inc
sub
sub
dec
rcl
mov
adc
push
dec
cmp
ret
sub
pop
icebp
dec
mov
aam
pushf
jle
fcmovnu
sbb
aaa
xchg
fild
push
pop
dec
and
out
repnz
xchg
jge
push
inc
inc
push
enter
push
adc
stos
das
cmp
out
call
mov
adc
repnz
xchg
into
jo
out
in
or
int
xchg
cmp
mov
cmp
push
dec
cmp
adc
std
add
mov
int3
mul
jge
inc
imul
jns
or
push
inc
or
out
arpl
mov
shl
(bad)
ja
add
dec
(bad)
xchg
imul
inc
mov
adc
or
mov
dec
movaps
push
inc
inc
xchg
cmc
mov
mov
push
mov
icebp
mov
cmp
mov
stos
xor
int3
sub
icebp
lods
imul
xor
mov
push
push
mov
adc
pop
loope
add
xchg
retf
push
shr
lods
sbb
clc
jge
pop
pop
mov
arpl
inc
pop
das
inc
adc
adc
enter
mov
stos
push
sub
jle
add
xor
push
(bad)
icebp
cmp
xchg
push
jbe
jge
jl
sub
daa
dec
cmp
push
sbb
sbb
scas
mov
dec
push
cmp
out
adc
mov
ja
adc
dec
ret
xor
mov
xor
bswap
mov
stc
sub
adc
jl
cdq
popa
xchg
adc
sub
ror
inc
in
jne
adc
lea
xchg
pop
mov
cmps
cmp
and
daa
mov
cmps
or
jmp
push
jae
pop
mov
lods
aad
add
mov
pop
scas
jmp
adc
cmp
jge
shl
es
xor
sub
stos
lods
add
cld
or
xchg
sbb
mov
mov
retf
outs
jmp
pusha
sbb
cdq
push
mov
add
xchg
pop
movs
in
into
sub
xor
sbb
inc
inc
and
or
sbb
imul
fs
nop
lds
in
rol
(bad)
jle
movs
stc
mov
xchg
jl
addr16
jb
jne
sbb
or
mov
mov
xor
(bad)
ror
jle
sbb
pop
jp
and
mov
repz
ins
mov
out
pop
mov
jae
add
add
or
jne
iret
dec
pop
mov
mov
mov
pop
dec
inc
es
std
jle
push
inc
adc
dec
xor
xchg
das
mov
scas
cmps
mov
dec
je
inc
std
jmp
adc
dec
lock
out
fs
dec
dec
addr16
lods
ficom
jno
add
loopne
dec
loopne
add
xor
out
dec
(bad)
in
or
and
pop
retf
outs
add
sbb
adc
inc
sub
or
xchg
inc
jmp
mov
adc
mov
adc
nop
adc
cs
loop
push
cmp
loop
pop
lahf
and
(bad)
scas
inc
inc
enter
cmp
call
js
cmp
jb
shr
in
icebp
add
ins
add
mov
jns
loopne
cld
xchg
push
jnp
clc
imul
xchg
call
inc
js
push
dec
(bad)
in
mov
scas
dec
pop
jmp
jge
pop
dec
retf
or
inc
clc
sub
push
ds
pop
cmp
pop
adc
and
into
rcl
scas
jne
cli
in
sub
cmp
shr
lock
ja
cmp
scas
push
mov
push
stc
stos
adc
add
call
rcl
mov
arpl
cld
sbb
xchg
dec
fild
fild
mov
pushf
sbb
push
arpl
inc
je
sub
sub
aad
or
hlt
sub
int
call
xchg
loop
das
cmp
dec
adc
jl
loope
xchg
cdq
nop
iret
dec
imul
dec
cdq
adc
cmp
xor
push
sub
and
or
push
jns
mov
sbb
movs
es
stc
push
ret
sub
out
and
pop
out
repnz
hlt
(bad)
adc
fsub
mov
push
xlat
or
lahf
rcr
call
and
sub
push
mul
sub
or
ret
call
inc
pop
cmp
call
aaa
add
fs
es
mov
inc
inc
sbb
and
mov
or
jnp
hlt
push
xchg
mov
mov
stc
aaa
enter
push
fisttp
arpl
mov
in
sbb
jl
lahf
jl
cwde
aaa
es
stc
cmp
pop
push
inc
push
jnp
xchg
sahf
and
lds
retf
shl
fild
fistp
jbe
adc
xchg
mov
and
mov
add
fbld
sub
push
lods
mov
in
aad
xchg
lock
adc
cld
cmp
dec
inc
aaa
enter
push
lds
push
add
mov
fs
push
push
inc
push
mov
fwait
cmp
pop
push
dec
lea
push
inc
inc
mov
push
and
adc
add
xchg
inc
scas
mov
mov
fcom
lea
test
xchg
inc
mov
lds
pop
mov
scas
mov
jns
jo
lds
and
push
stc
pop
push
jp
xlat
mov
add
sub
push
jns
mov
push
test
xor
cwde
enter
pop
arpl
mov
xlat
sub
nop
jbe
mov
push
imul
repnz
cmp
enter
jbe
loop
(bad)
adc
retf
pop
vmovdqa
mov
adc
jb
push
sar
nop
out
in
inc
mov
and
inc
pop
add
jnp
mov
inc
cs
bound
and
cmp
mov
mov
fnstcw
enter
inc
push
arpl
iret
fst
in
outs
icebp
mov
add
in
sbb
outs
data16
ja
retf
leave
out
sub
push
cmp
push
sahf
and
aaa
aas
stc
push
imul
xor
adc
mov
adc
pop
jns
fist
cmp
pop
rol
imul
sub
sbb
mov
or
movs
repnz
dec
or
cmp
and
js
inc
sub
pop
xor
dec
dec
inc
cmc
pop
pop
cs
jl
xor
push
jns
pop
push
pop
jns
movs
fcomp
sar
pop
mov
pop
jns
cmp
mov
shl
repz
not
cdq
nop
cmp
call
jbe
cmp
inc
cs
fnstcw
add
mov
fistp
and
xchg
retf
ret
inc
inc
fild
jl
pop
mov
movs
cmp
outs
sahf
or
xchg
ins
jb
jb
xor
retf
retf
mov
leave
and
std
xor
test
push
xor
frstor
cmp
fimul
add
retf
jae
xchg
inc
(bad)
cmp
rcl
inc
cmp
pusha
lods
sbb
or
sbb
jno
ror
stc
xor
pop
push
add
mov
div
repnz
rcr
inc
clc
shr
mov
xchg
adc
loope
add
call
ror
mov
jmp
cmp
pusha
mov
mov
jmp
mov
mov
shl
js
or
mov
ds
jae
xchg
and
or
cld
xchg
pop
add
inc
push
or
das
pop
call
mov
cs
aas
ds
aas
xchg
dec
pop
push
ret
movs
lahf
ds
xor
jb
aas
push
movs
test
sub
pop
jns
add
aas
shld
nop
xchg
daa
and
jbe
and
shl
jb
mov
and
add
mov
xor
mov
cld
or
adc
fwait
or
ds
in
and
scas
cmp
std
mov
inc
loope
(bad)
in
lods
je
pop
cmp
stc
sbb
ret
inc
push
xchg
mov
stc
scas
cdq
cmp
cmp
bound
in
adc
mov
std
pop
pop
(bad)
add
cmp
ja
retf
fnstsw
(bad)
jne
leave
adc
adc
mov
pop
jmp
aaa
inc
inc
(bad)
jecxz
sbb
jne
inc
jnp
dec
jnp
js
dec
adc
jo
ret
xchg
cmp
mov
lea
jl
push
cmp
in
sbb
pop
mov
xchg
push
dec
xor
gs
inc
dec
jns
leave
xor
aad
nop
ret
or
aas
ret
inc
adc
(bad)
in
das
add
ins
xchg
adc
inc
jmp
inc
div
cmps
push
cmp
push
push
mov
int
jge
sbb
mov
inc
push
lea
and
imul
dec
scas
retf
jge
popa
pop
cmp
es
fld
add
(bad)
daa
xchg
cdq
cdq
adc
pop
adc
ret
scas
push
pop
jns
call
lods
dec
or
sbb
scas
and
fnsave
outs
cs
retf
pop
arpl
push
or
stc
popa
and
push
call
and
js
jns
sbb
push
jae
jno
outs
and
or
in
and
gs
dec
imul
jno
sahf
add
dec
fldcw
pop
add
or
jne
mov
add
jmp
std
mov
popf
mov
jnp
lahf
(bad)
dec
pop
and
fimul
jne
outs
add
fdivrp
data16
js
add
jno
add
push
dec
cmp
push
inc
das
push
movups
test
in
xlat
dec
out
and
push
push
push
add
aaa
cmp
repz
inc
push
imul
(bad)
call
xchg
es
sub
cmp
pop
arpl
(bad)
call
jnp
leave
sahf
out
not
dec
out
xor
jns
lahf
out
jne
and
mov
sahf
and
pop
jbe
lea
jns
mov
repz
rcr
add
push
jbe
repz
lds
repz
ds
pop
push
aaa
dec
pop
iret
repz
jne
call
cmp
es
sub
jns
out
push
jns
scas
mov
mov
mov
jns
out
inc
push
xor
xlat
je
push
jns
jns
not
(bad)
lea
xchg
fnstsw
cmp
repz
es
push
sub
cmp
repz
arpl
iret
repz
neg
call
es
adc
out
sbb
sahf
out
jns
fsubr
sahf
out
sahf
lea
cmp
sar
push
sub
repz
jns
iret
repz
outs
scas
mov
mov
es
push
xor
repz
jns
mov
push
dec
dec
fnstcw
dec
imul
mov
inc
retf
psrlq
jecxz
mov
in
repz
inc
xchg
aas
jle
cmp
pop
sbb
push
adc
jmp
push
cdq
push
sub
mov
cmps
pop
mov
lods
and
push
jle
and
adc
out
jl
jns
cmp
push
outs
jl
push
jmp
leave
jnp
fld
xchg
iret
mov
outs
cs
(bad)
addr16
add
cmp
jnp
xchg
push
rcr
out
cmp
pop
mov
aaa
int
stc
cmp
xor
xchg
mov
add
mov
xor
pop
push
dec
push
xchg
repz
jnp
inc
pop
add
pop
scas
add
out
cmp
jns
lods
or
ss
iret
jnp
add
push
std
not
inc
popf
neg
jns
sar
push
push
add
jnp
lock
ss
push
(bad)
es
mov
scas
jne
es
and
xlat
cs
mov
sar
fsubr
mov
cdq
xor
push
arpl
mov
pop
lds
inc
retf
jb
jne
xlat
push
(bad)
out
iret
jae
cs
xchg
xchg
and
lock
sahf
push
jbe
iret
push
lods
iret
repz
jb
(bad)
xchg
leave
es
shl
jae
push
es
mov
or
idiv
add
xchg
fsub
jnp
sbb
xchg
cs
push
or
retf
mov
ss
cmp
push
push
aas
xchg
imul
loopne
mov
neg
arpl
addr16
mov
jns
pop
push
fdiv
mov
dec
push
sub
push
xlat
lahf
xor
cmps
inc
js
shl
sbb
push
leave
mov
fidiv
das
push
pushw
rcl
xor
arpl
rol
xor
shl
adc
out
sahf
jo
enter
sar
mov
les
cmp
repz
xchg
rcl
out
sahf
cmps
adc
push
imul
movs
mov
fstp
mov
iret
xor
push
sbb
pop
dec
push
jns
fidiv
cmp
in
std
(bad)
push
mov
dec
xor
xor
jns
out
dec
push
arpl
dec
fild
arpl
sti
(bad)
in
out
data16
push
ja
jne
ins
jno
push
data16
push
js
jae
in
or
data16
sub
aad
jnp
das
inc
ins
and
imul
mov
fld
fcmovnbe
or
pop
(bad)
mov
dec
data16
je
in
jns
jno
in
fild
inc
adc
imul
js
je
ret
int3
(bad)
fsubr
jae
sub
cmp
xor
jne
fidiv
gs
and
bound
mov
js
outs
ficom
xor
out
lods
loopne
fisubr
inc
push
ins
bound
(bad)
out
out
pop
mov
dec
fs
push
ins
jns
adc
inc
sti
mov
push
cmp
shl
jno
bound
add
xor
icebp
push
imul
sbb
pushw
imul
jbe
hlt
jno
push
js
cmp
push
sub
enter
mov
div
jbe
jae
data16
je
push
inc
ficom
dec
mov
and
xor
add
jno
jne
and
cmps
jg
push
jbe
fstp
pop
pop
and
push
retf
sub
mov
int3
push
sub
jne
sbb
arpl
xchg
add
ss
push
push
cmps
mov
ficomp
jmp
clc
mov
imul
adc
or
sbb
(bad)
dec
jno
sub
push
xchg
sub
or
cmp
cmp
sti
mov
or
adc
aam
sub
ds
je
js
jbe
inc
test
add
(bad)
fs
es
cwde
add
push
mov
and
and
and
cmp
ds
dec
aaa
dec
aaa
inc
(bad)
(bad)
(bad)
push
inc
aaa
push
aaa
jae
imul
aaa
addr16
mov
repnz
les
movs
aaa
xchg
in
aaa
mov
aaa
mov
(bad)
(bad)
push
clc
aaa
(bad)
aaa
ret
aaa
mov
stc
aaa
adc
xor
xor
xor
xor
xor
xor
xor
xor
and
out
clc
xor
xor
xor
pop
xor
sbb
pop
xor
(bad)
mov
fs
xor
xor
xor
cmp
cmp
(bad)
(bad)
dec
cmp
cmp
inc
cmp
pop
cmp
outs
cmp
cmp
cmp
cmp
call
cmp
cmp
test
add
cmp
xor
cmp
dec
cmp
pusha
cmp
jo
lock
(bad)
(bad)
jmp
cmp
cmp
aas
or
jae
outs
aas
nop
aas
icebp
aas
add
ds
(bad)
(bad)
(bad)
js
je
jecxz
in
ds
jmp
ds
mov
cmp
xchg
cmp
(bad)
call
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
cmp
cmp
jle
jmp
cmp
cmp
mov
aaa
sbb
aaa
adc
sbb
dec
aaa
push
aaa
xlat
aaa
mov
aaa
xchg
aaa
xchg
aaa
out
ret
loope
push
cs
punpckhwd
xor
push
xor
xor
xor
es
jbe
xlat
xor
clc
call
xor
xchg
xor
sub
sub
add
popf
ss
add
pop
(bad)
out
add
xor
xor
xor
xor
(bad)
cmp
push
xor
xlat
xor
xor
xor
xor
cmp
mov
cmp
(bad)
cmp
aas
cmc
inc
or
add
sbb
dec
ds
imul
ds
mov
ds
ds
cld
(bad)
dec
rcr
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
lds
rcl
sub
push
aaa
ins
aaa
repz
call
sahf
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
sar
pop
xchg
mov
xor
xor
xor
xor
xor
xor
xor
push
mov
addr16
cmc
xor
xchg
stos
sbb
inc
(bad)
xor
pop
outs
ss
or
xor
inc
pushf
xor
mov
cmp
(bad)
(bad)
(bad)
call
pop
xor
lock
ret
xor
or
push
(bad)
(bad)
(bad)
fbstp
sbb
push
ss
ss
ss
jbe
push
ss
xor
call
into
mov
add
inc
xor
inc
xor
(bad)
(bad)
jmp
xor
xor
xor
xor
xor
xor
xor
xor
cmp
pop
xor
(bad)
(bad)
call
imul
xor
xor
xor
xor
ret
xor
call
xor
xor
cmp
retf
jbe
cmp
cmp
(bad)
(bad)
(bad)
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
ret
inc
sbb
dec
cmp
cmp
inc
ret
ret
dec
push
aaa
fbstp
or
xor
xor
cmps
call
(bad)
jmp
xor
xchg
jecxz
mov
jg
ror
lods
ss
ss
add
and
inc
xor
(bad)
(bad)
(bad)
clc
adc
and
xor
inc
xor
repz
movs
aas
xchg
sar
aas
lods
aas
clc
aas
ret
(bad)
(bad)
dec
inc
pop
inc
sbb
inc
add
inc
or
inc
pop
inc
imul
icebp
inc
and
sub
(bad)
xor
(bad)
(bad)
(bad)
jmp
repnz
ds
ds
ds
fstp
pop
cmp
pop
cmp
loopne
jmp
xor
mov
cmp
cmp
cmp
int3
push
cmp
(bad)
jg
dec
aaa
outs
aaa
call
aaa
push
xor
xor
xor
xor
push
mov
adc
xor
fs
inc
mov
pusha
pusha
xor
test
dec
add
jns
jecxz
mov
nop
lds
ret
cmp
dec
jecxz
push
mov
xor
(bad)
xor
cmp
xor
xor
cmp
cmp
fidivr
mov
(bad)
(bad)
(bad)
cmp
push
inc
ins
inc
outs
inc
scas
inc
cdq
inc
pop
ds
xchg
jg
stos
adc
idiv
jg
ret
dec
cmp
cmp
cmp
call
lock
jg
aaa
cmp
pop
cmp
cmp
cmp
cmp
cmp
clc
push
xchg
lods
xor
in
scas
test
jg
aaa
aad
push
repnz
xor
xor
dec
out
rcr
jo
xlat
xor
xor
jmp
int3
xor
xor
inc
xor
(bad)
xchg
or
push
xor
xor
jns
(bad)
(bad)
aas
clc
jmp
xor
xor
xor
outs
xor
xor
jmp
xor
cmps
xor
xor
ins
xor
xor
cmp
cmp
dec
cmp
cmp
inc
mov
cmp
aas
cmp
inc
aas
arpl
lds
mov
(bad)
aas
das
cmp
das
cmp
cmp
xchg
cmp
cmp
cmp
in
xlat
retf
inc
(bad)
jmp
aaa
test
sub
or
aaa
pop
mov
or
fdiv
push
fdiv
loop
in
xor
xor
jp
fwait
adc
xor
(bad)
or
cmp
imul
(bad)
jg
push
xor
cmp
cmp
cmp
dec
ds
cmp
xor
gs
cdq
aas
std
aas
xchg
aas
mov
cli
pop
inc
pusha
inc
or
loop
(bad)
call
or
cmp
sar
inc
cmp
cmp
cmp
cmp
(bad)
mov
cmp
push
cmp
cmp
jg
add
scas
or
push
aaa
mov
cmc
aaa
jecxz
mov
mov
ins
pop
(bad)
fild
xchg
xor
pop
ss
movs
(bad)
fbstp
clc
or
xor
xor
push
xor
xor
(bad)
dec
test
out
cmp
cmp
cmp
cmp
cmp
aas
stos
(bad)
clc
inc
inc
mov
ds
push
test
lock
stos
fs
stc
stos
cmp
test
ja
outs
push
xchg
cld
mov
fcomip
aaa
xchg
in
xor
xor
xor
push
xor
xchg
push
adc
jo
mov
int3
xor
(bad)
mov
nop
jp
xor
xor
cmp
cmp
imul
scas
fistp
fild
jmp
lock
fistp
loop
jle
test
cmp
inc
shr
and
aaa
and
add
add
repnz
add
inc
sar
stos
add
cmp
or
jp
test
cmps
mov
add
jbe
mov
mov
and
(bad)
clc
(bad)
jmp
xor
pop
xor
outs
scas
repz
xor
cmp
rcl
cmp
jbe
(bad)
call
outs
scas
fadd
inc
fld
cmp
xchg
cmp
icebp
cmp
cmp
lods
mov
push
clc
jecxz
mov
aaa
out
add
mov
sbb
dec
loop
mov
dec
ss
(bad)
jg
cmps
ss
ss
movs
ds
jmp
out
or
cli
mov
cmp
cmp
cmp
cmp
mov
cmp
mov
aas
sbb
aaa
push
sbb
es
(bad)
out
cmp
xor
xor
xor
xor
mov
cmps
daa
cld
push
add
xor
gs
cli
or
hlt
xor
xor
int
xor
lahf
inc
icebp
xor
xor
or
(bad)
push
add
xor
xor
les
xchg
cmp
cmp
cmp
inc
out
stos
cmp
jb
inc
pop
and
call
sub
data16
sar
pop
cmp
aad
pop
(bad)
cli
scas
sar
mov
cmp
cmp
dec
movs
cmp
scas
(bad)
dec
jg
xchg
adc
(bad)
(bad)
clc
aaa
mov
xor
xor
xor
xor
xor
xor
sbb
cld
(bad)
int3
xor
ss
adc
sbb
ss
and
mov
xor
rol
(bad)
(bad)
mov
xor
xor
xor
xor
push
xor
dec
mov
(bad)
(bad)
fdiv
cmps
xor
xor
xor
pop
cmp
leave
cmp
jb
xchg
cmp
loop
aas
dec
aas
pop
aas
imul
jmp
(bad)
out
and
inc
push
inc
xchg
inc
and
or
jo
scas
ds
ds
pop
cmp
jnp
fistp
movs
cmp
(bad)
cmp
out
cmp
jle
and
aaa
ss
jmp
aaa
test
lahf
ret
xchg
aaa
lock
mov
xor
push
cmp
pop
xor
xor
jne
adc
sub
(bad)
sub
mul
lods
xor
sbb
adc
dec
sar
adc
out
lea
fwait
ss
jmp
inc
xor
outs
pop
in
xor
jmp
jb
xor
xor
inc
xor
repnz
(bad)
pop
stc
xor
sar
or
retf
xchg
mov
jp
fistp
mov
jecxz
aam
mov
xor
jg
mov
jae
ins
cmp
or
ret
dec
cmp
mov
cmp
cmp
sbb
dec
sahf
les
loopne
xor
fidivr
adc
inc
inc
inc
jae
inc
popa
adc
call
xchg
inc
test
inc
out
pop
ds
cmp
inc
ds
push
mov
ds
ds
ds
cli
sub
pop
inc
dec
cmp
fidiv
push
xor
pusha
outs
cmp
cmp
cmp
cmp
cmp
scas
fild
mov
cmp
sar
stos
add
sar
cmp
cmp
pop
and
push
cmp
cmp
cmp
cmp
cmp
call
into
mov
jno
mov
retf
loope
cmp
retf
mov
aaa
mov
aaa
sahf
fwait
jle
ja
mov
xchg
aaa
jle
leave
aaa
shr
add
adc
jmp
xor
pop
push
sub
or
bound
xor
xor
xor
dec
dec
cmp
daa
sub
xor
xor
inc
pop
retf
arpl
xor
xor
mov
xor
xor
pop
lds
xor
(bad)
not
jmp
lea
xor
xor
xor
xor
outs
cdq
push
cld
pop
pop
outs
lods
xor
sar
xor
xor
xor
push
mov
call
xor
xor
inc
rol
mov
push
loop
xor
push
into
sbb
add
cmp
inc
xor
pop
xor
je
lock
dec
outs
dec
xlat
cld
inc
aas
adc
bound
xor
shl
adc
mov
xor
push
sahf
xor
jle
leave
xor
add
es
and
int
shl
neg
adc
ss
or
in
jo
out
repnz
mov
inc
ss
ss
inc
pop
ss
imul
cs
add
push
ds
mov
push
xor
adc
into
imul
push
cmp
fdiv
xlat
ds
inc
(bad)
xor
les
call
mov
les
rcr
mov
sub
mov
push
jnp
jl
fbstp
mov
xchg
xor
call
sub
leave
xor
sub
xor
xor
xor
xor
xor
xor
ret
sub
or
ret
cmp
ds
xor
inc
inc
xor
mov
pop
imul
fsubr
or
lds
scas
and
or
xor
xchg
sar
scas
mov
xor
xor
xor
xor
xor
jmp
leave
xor
xor
pop
xor
xor
(bad)
jmp
xor
xor
xor
xor
xor
xor
or
xor
push
cmp
dec
xor
inc
xor
push
xor
pop
xor
imul
sub
xor
fadd
or
xor
push
loopne
jb
xor
xor
or
cdq
xor
xor
xor
xor
xor
xor
out
call
(bad)
xor
shl
xor
xor
xor
xor
(bad)
(bad)
call
xor
xor
xor
xor
xor
or
xor
xor
xor
xor
xor
dec
xor
sub
push
xor
add
stc
xchg
pusha
pop
das
and
or
xlat
in
jns
sbb
es
cmp
mov
mov
add
mov
pop
push
out
push
fdiv
dec
xchg
push
jns
jp
push
push
push
or
pop
and
add
dec
adc
(bad)
jnp
inc
add
dec
jle
cmp
xor
adc
aas
neg
push
sahf
cmps
jmp
jns
jae
gs
add
clc
jb
jb
jae
cmps
add
add
push
mov
add
inc
jb
arpl
imul
fsubr
pop
js
and
push
je
scas
clc
idiv
mov
jno
arpl
push
je
jp
neg
dec
dec
jo
test
arpl
jg
outs
jg
pop
dec
inc
inc
push
push
dec
dec
push
dec
or
pop
dec
push
dec
dec
inc
push
jl
out
dec
dec
push
push
inc
pop
inc
pop
pop
dec
inc
inc
dec
es
dec
dec
pop
dec
out
outs
xlat
inc
or
inc
dec
dec
dec
add
dec
inc
push
push
dec
fistp
jo
add
dec
push
add
mov
adc
mov
push
dec
inc
mov
sub
xor
xchg
adc
data16
bound
pop
jp
push
test
push
(bad)
mov
sub
xor
jnp
inc
movs
dec
add
push
dec
pop
dec
add
mov
cs
push
jle
addr16
in
fs
inc
in
js
jo
in
data16
cmp
or
dec
repnz
sar
dec
and
in
scas
xor
dec
or
push
scas
cmp
sbb
inc
push
adc
pop
mov
pushw
push
and
push
push
cmp
dec
xchg
cmp
jb
jo
fmul
into
in
or
jle
dec
add
int
sbb
cmp
push
cmp
out
cdq
sbb
or
data16
mov
ins
xor
inc
sub
or
xor
outs
push
dec
push
fsub
push
xchg
fild
cmps
mov
dec
cwde
movs
or
pop
mov
push
jle
out
popf
fmul
sbb
sbb
in
test
cmp
cmp
mov
mov
hlt
mov
sar
cwde
ret
inc
cmps
push
push
outs
jo
rol
hlt
fidiv
rol
adc
mov
xor
adc
jp
inc
repnz
test
call
packssdw
or
fcomp
pusha
or
or
mov
es
xor
sahf
int3
fiadd
out
popa
ja
dec
sbb
add
fsubr
popw
xlat
push
dec
ficom
stos
inc
ja
mov
cmp
int3
xchg
dec
sub
inc
xchg
addr16
add
sub
pcmpgtd
adc
inc
xchg
pop
cwde
dec
in
or
push
xchg
shl
data16
in
inc
in
dec
pusha
test
jle
ss
pop
popa
in
push
push
mov
inc
dec
dec
mov
jl
dec
jbe
sbb
pushf
push
and
inc
fwait
outs
hlt
mov
xor
push
in
ficomp
mov
vrcp14ps
push
pop
add
jo
jnp
es
push
hlt
cmp
push
data16
loop
cmp
add
and
mov
jo
or
cli
mov
ja
push
jmp
jle
dec
xor
test
les
sbb
jmp
push
cvtdq2ps
jle
retf
sub
out
out
in
scas
lods
inc
push
(bad)
jbe
adc
jmp
ret
push
out
push
sbb
sahf
push
outs
sbb
into
push
pop
into
hlt
inc
xor
mov
sub
mov
push
cmps
xchg
(bad)
test
data16
rcl
jl
push
pop
inc
cwde
xchg
or
es
shl
add
rol
cmp
jmp
push
push
call
fdivr
dec
cmps
xchg
push
sbb
aam
sub
lea
call
dec
mov
mov
jae
js
sahf
mov
pop
jnp
lea
jo
or
pop
jbe
push
and
sar
scas
push
mov
sbb
loop
nop
dec
fs
add
or
sahf
push
add
add
pop
and
repnz
cmp
jno
gs
jo
ud2
fsub
test
push
ss
rol
pop
cmp
sub
hlt
jle
add
out
push
repz
cwde
ficom
jl
ret
push
stc
lea
or
aam
push
ret
cmp
ret
ret
push
or
(bad)
dec
xor
enter
rcl
mov
pushf
gs
ret
cwde
fidiv
and
sbb
push
cli
clc
loop
and
fld
add
sub
neg
lods
js
mov
cmp
pop
fs
cmp
mov
adc
adc
sub
add
push
add
push
mov
nop
xor
inc
cmps
stos
xor
push
ret
out
or
adc
push
mov
jne
push
and
pop
mov
mov
xor
add
xchg
jg
inc
mov
rcr
call
clc
jmp
add
pop
dec
inc
jge
mov
sub
sub
daa
sub
das
sub
xor
sub
das
sub
xor
sub
sub
cs
imul
sub
sub
push
sub
ss
xor
lods
pop
imul
sub
daa
inc
push
sub
mov
xor
sub
dec
xchg
add
sub
or
data16
call
push
xor
cdq
mov
push
mov
sub
dec
sub
popf
pop
or
sub
xchg
sub
xor
in
sahf
or
push
xor
xor
call
mov
int
xor
pop
cmps
sub
sbb
cmp
sub
pop
je
pushw
xor
sbb
jne
mov
dec
das
hlt
push
sub
out
data16
sub
jo
jle
xor
fdivr
inc
call
loop
call
add
sbb
add
mov
(bad)
sub
and
xor
xor
mov
mov
fdiv
cli
nop
add
sbb
inc
add
add
fcomp
jo
add
ins
icebp
jo
pop
jmp
sub
dec
push
xor
in
sub
sub
in
push
addr16
sbb
add
emms
cmps
sub
jo
iret
push
or
push
sub
test
push
sub
ds
into
push
or
aam
mov
repz
into
sahf
sub
fld
push
push
sub
cmps
and
push
das
mov
adc
out
lods
jle
repnz
push
cs
daa
das
cmp
cmp
pop
jp
ror
pop
mov
mov
cmp
adc
and
cs
ffree
mov
xor
pushf
sbb
xor
sbb
push
xchg
xor
loopne
mov
mov
xor
xchg
ret
shl
daa
(bad)
jne
call
aam
dec
xchg
sbb
ret
and
xor
sbb
ret
jno
mov
cwde
push
(bad)
inc
jae
in
ins
(bad)
push
fiadd
cmp
sub
cdq
pop
btc
ret
mov
es
daa
jnp
ret
loopne
mov
sub
push
xor
xor
cmp
outs
jo
lea
mov
mov
xor
push
jbe
sub
scas
xchg
(bad)
in
push
push
mov
inc
retf
sub
bound
sub
pop
lods
int3
xor
and
scas
je
and
xor
jno
das
jnp
arpl
or
adc
mov
jmp
xor
daa
xchg
pop
retf
mov
ret
js
lock
out
jmp
inc
cmp
sub
mov
jp
mov
dec
mov
div
mov
icebp
cmp
out
push
inc
int
fisubr
popf
sbb
nop
loop
clc
mov
or
dec
data16
test
leave
xchg
push
es
shl
(bad)
push
inc
les
sub
push
sub
dec
push
cmps
jns
sbb
daa
jge
jnp
pop
shl
lods
ins
jo
out
xchg
repz
adc
hlt
je
dec
jno
adc
push
sub
jbe
aad
call
fsubr
xchg
loop
movs
stos
test
xor
cmps
add
pusha
adc
add
test
les
sub
(bad)
(bad)
ss
pushf
xlat
mov
inc
mov
jb
xor
jo
mov
out
into
push
scas
mov
aam
mov
cmp
dec
pop
jnp
in
dec
fs
sub
out
scas
push
cmps
dec
xor
fidiv
sub
mov
sbb
pusha
mov
xor
jo
mov
ret
jmp
jbe
loope
cmps
retf
sub
sbb
fs
sub
call
loop
idiv
add
je
fisub
js
mov
(bad)
bound
xchg
fs
push
ins
sub
sub
das
inc
into
mov
push
add
in
cmp
adc
push
sub
and
mov
cmp
jl
cmp
push
out
ins
xor
inc
jb
mov
cld
fld
(bad)
jp
sub
sub
lods
leave
outs
xchg
inc
push
xor
inc
mov
mov
xor
inc
dec
xchg
aam
mov
aam
jmp
and
adc
and
stc
xor
aam
jo
sbb
pop
(bad)
stc
div
sub
clc
push
or
cmp
out
call
lock
xor
jg
xlat
lods
test
inc
add
add
int
mov
xor
loopne
sbb
ins
mov
repz
adc
sbb
movs
xor
cmps
stc
ins
and
sbb
fld
inc
push
push
push
scas
inc
add
fwait
(bad)
fisubr
inc
add
mov
repz
(bad)
mov
mov
imul
push
pop
push
push
sub
outs
enter
repz
lods
and
in
dec
lahf
out
mov
ror
xor
iret
jnp
ins
(bad)
in
push
xchg
(bad)
push
test
neg
jge
push
mov
push
into
push
cmp
add
idiv
push
sahf
push
fdivr
push
push
mov
repz
jno
int3
push
jl
push
push
aam
out
mov
push
fcom
push
shl
mov
mov
scas
in
add
xchg
imul
jle
mov
aaa
push
or
or
xor
inc
add
xlat
jle
adc
jmp
lods
aas
(bad)
ja
or
dec
add
in
icebp
sub
aam
or
jne
xchg
test
in
inc
mov
xor
sub
inc
add
adc
add
imul
push
add
pop
(bad)
fldcw
call
clc
and
xlat
iret
and
(bad)
dec
int
fcmovnu
fcmovu
retf
(bad)
loopne
jecxz
in
pop
retf
(bad)
lahf
movs
imul
mov
gs
and
popa
je
xor
mov
push
adc
fistp
sahf
pop
jb
push
sbb
das
add
jbe
enter
dec
jns
push
cmp
inc
aaa
xor
cmp
push
push
imul
test
fistp
scas
or
dec
add
and
sub
sbb
and
xor
repz
cmp
push
pop
pusha
cmp
repz
jo
or
cwde
mov
cmp
mov
loopne
iret
repz
lock
add
sahf
out
adc
and
xor
in
and
add
rol
leave
add
fs
movs
xor
leave
cld
mov
or
mov
jb
ins
jb
jae
les
pop
fcom
sahf
dec
in
xchg
outs
test
pop
xchg
xor
jbe
push
pop
and
xchg
nop
les
xlat
or
adc
icebp
cld
or
add
adc
mov
mov
repz
shl
hlt
add
adc
cmp
repz
dec
pop
ins
jl
cmp
repz
ds
fsubr
add
add
add
(bad)
pop
adc
push
js
loop
fadd
push
push
inc
iret
inc
jb
pop
pop
jmp
inc
or
paddsb
dec
push
and
ins
xchg
test
popaw
jne
jmp
inc
sbb
jnp
rcr
cmp
xor
inc
mov
rol
je
pop
cmp
push
push
adc
call
sahf
rol
aas
inc
push
call
pushf
cmps
retf
mov
cld
shr
sti
push
enter
add
or
cmps
stc
mov
mov
cmp
repz
xor
dec
adc
iret
repz
adc
mov
mov
add
mov
xor
out
push
adc
mov
cmp
push
cmp
push
or
repz
adc
sbb
cmp
repz
cmps
stc
cmp
push
hlt
sbb
sahf
test
xor
add
iret
repz
pop
push
jo
test
in
fpatan
cmp
or
push
add
repz
add
repz
repz
cmp
mov
mov
or
sahf
out
mov
mov
sahf
out
ficomp
jno
dec
mov
or
add
add
lods
or
xor
fidivr
or
punpckldq
ret
fist
add
xchg
or
js
mov
adc
mov
xchg
fisttp
aad
sbb
cmp
pusha
mov
data16
loopne
daa
add
loopne
dec
scas
push
sahf
out
sahf
pushf
test
enter
dec
repz
add
sbb
outs
clc
out
sahf
push
movs
push
or
and
push
out
sahf
xor
inc
adc
mov
pop
ins
adc
add
lods
add
mov
lds
jmp
push
jge
dec
pop
out
fcom
out
xchg
setbe
daa
daa
daa
daa
add
adc
adc
es
adc
out
ja
or
pushf
or
adc
call
leave
ins
and
rcl
leave
leave
add
jnp
out
inc
add
mov
cmp
mov
sar
lods
push
or
jae
lods
adc
add
cmp
push
push
push
js
sahf
out
mov
sahf
out
lock
or
iret
repz
sub
pusha
jo
cmp
repz
pushf
lods
mov
repz
push
add
or
or
lsl
cmp
ss
std
je
test
cmp
repz
stc
test
mov
not
mul
cmc
out
ds
clc
hlt
or
repz
out
sahf
repnz
inc
lock
jns
out
out
ins
out
sub
jns
out
in
movs
jmp
out
jne
sahf
jmp
cmp
test
out
out
ss
adc
and
(bad)
test
cwde
rcl
adc
sti
adc
ltr
inc
inc
mov
imul
add
or
or
iret
mov
jbe
fs
nop
add
call
or
add
dec
sahf
inc
and
or
movs
lods
lods
imul
add
xor
ja
adc
mov
xchg
pop
add
das
adc
mov
adc
(bad)
adc
add
es
and
mov
jb
push
xchg
pop
mov
ficom
jg
stc
repz
repz
repz
cld
std
(bad)
inc
add
iret
repz
add
repz
add
jge
les
lods
inc
into
das
cld
fstp
dec
dec
push
dec
add
imul
loopne
cmps
xor
inc
jg
push
pop
mov
xchg
es
stc
fidivr
nop
ss
inc
or
js
dec
mov
mov
test
push
js
inc
xchg
enter
loopne
sar
call
mov
idiv
push
pusha
push
or
mov
mov
imul
jbe
imul
jo
mov
inc
mov
push
mov
popf
push
lock
test
loopne
add
test
mul
mov
xor
push
sbb
mov
pop
or
sub
mov
jns
iret
mov
cmp
pop
inc
xor
aas
lock
cmps
(bad)
push
popf
push
cdq
add
sbb
fdivr
shl
pop
add
sahf
cmp
idiv
pusha
pop
push
sar
call
push
fsub
push
ja
ret
cmp
nop
push
adc
mov
dec
adc
call
mov
mov
addr16
inc
inc
mov
push
jl
xor
les
fdivr
movs
push
or
or
sub
outs
outs
call
stc
icebp
mov
sbb
jo
lock
push
mov
cmp
ss
cs
and
add
and
loopne
cwde
mov
out
loope
iret
mov
out
enter
add
pusha
int3
xchg
sbb
icebp
cmp
fadd
xchg
ds
mov
dec
clc
data16
dec
mov
ret
push
inc
add
dec
ja
push
jb
out
pop
hlt
(bad)
rcl
ret
cmp
es
and
fdivr
xor
neg
push
xor
inc
add
cmp
ja
push
mov
inc
sub
mov
push
out
js
dec
xrelease
push
rcl
and
out
push
mov
shr
mov
push
outs
nop
dec
imul
lock
adc
lock
out
cmp
sub
jnp
clc
pop
mov
push
es
out
mov
dec
outs
les
rol
jns
push
inc
xchg
mov
cpuid
mov
adc
sbb
mov
adc
nop
inc
ins
lea
xchg
(bad)
icebp
push
pushf
nop
adc
adc
xchg
or
adc
sub
add
pop
pop
add
push
dec
jnp
mov
add
pop
inc
sbb
mov
and
dec
pop
push
and
pop
dec
in
jl
aaa
push
pop
dec
add
inc
add
ins
out
mov
xchg
push
loop
(bad)
pop
push
inc
mov
mov
std
fisubr
push
xchg
dec
xor
or
inc
push
push
push
xor
cs
and
inc
push
cs
and
or
inc
sbb
inc
dec
pop
out
mov
push
push
inc
push
push
cs
add
adc
outs
inc
push
enter
icebp
add
les
imul
add
fs
rol
sbb
xchg
nop
cmps
sbb
mov
add
add
inc
pop
mov
(bad)
clc
aas
push
pop
jmp
mov
pushf
cmp
(bad)
cld
add
pop
enter
or
push
aas
(bad)
jg
xor
xor
add
in
inc
leave
add
test
or
je
fwait
mov
shr
in
rol
mov
ss
in
psubb
addr16
push
repz
int
sbb
fwait
neg
out
fisub
cmps
loope
cmp
add
loopne
and
movs
loope
pop
sbb
pop
push
(bad)
aas
fcmovnbe
fidivr
xchg
addr16
lock
jae
fwait
(bad)
xor
pop
std
cmp
push
fld
ins
jl
inc
iret
out
call
sbb
add
jo
in
loop
iret
rol
inc
loope
add
push
jnp
xchg
out
or
push
add
nop
es
fmulp
jg
push
add
jp
aas
into
push
add
add
and
cmp
lock
add
add
comiss
loopne
out
fisttp
outs
daa
add
jl
stos
push
pop
std
clc
lock
xor
rcr
dec
add
jmp
test
pop
outs
clc
(bad)
ins
add
pusha
div
in
add
xlat
pop
repz
sbb
mov
neg
pop
das
ds
jg
dec
xchg
add
fsubr
(bad)
pop
in
les
test
out
sahf
imul
jg
aas
nop
ds
mov
add
out
pop
and
pop
cmp
push
stos
enter
aaa
es
pop
sub
lock
or
cs
cmp
(bad)
iret
std
or
ins
ss
or
push
sub
inc
add
mov
in
inc
add
pusha
xor
sbb
push
push
sbb
adc
lds
shl
cmp
fistp
jl
sbb
push
sbb
or
test
mov
xchg
shl
xchg
dec
xchg
adc
dec
sbb
das
lods
push
jae
mov
add
rol
dec
jnp
push
and
add
out
push
add
mov
jge
aas
cmp
sub
mov
test
mov
repz
xor
daa
and
jnp
mov
clc
xor
jnp
mov
daa
push
adc
cmp
pop
jnp
pop
clc
dec
push
dec
push
mov
out
mov
daa
cmp
outs
enter
xchg
push
(bad)
sbb
mov
lahf
dec
daa
dec
add
daa
mov
(bad)
mov
adc
clc
push
(bad)
xor
cmp
cmc
sbb
mov
popa
cmp
mov
xor
jl
jl
enter
pop
daa
cmp
int3
mov
lahf
xor
and
daa
inc
iret
fidivr
dec
sub
repz
dec
sahf
cld
sub
mov
outs
stc
xlat
dec
sub
clc
xor
jbe
and
scas
cmp
inc
and
mov
out
int3
push
and
and
cmp
jmp
pop
or
jo
(bad)
cmp
imul
cmp
retf
mov
and
xor
xor
xchg
mov
(bad)
mov
or
enter
repz
jmp
add
ja
test
inc
inc
or
push
or
dec
jmp
mov
xor
inc
aad
outs
lahf
xchg
or
pop
daa
mov
mov
in
jae
and
push
inc
dec
nop
mov
(bad)
(bad)
(bad)
clc
add
daa
fistp
mov
daa
or
arpl
dec
pushf
es
test
mov
fild
lock
xor
inc
arpl
daa
ds
nop
inc
shl
xor
arpl
lea
daa
dec
dec
jae
lahf
cmp
inc
mov
pop
dec
or
fs
dec
imul
fwait
daa
push
in
outs
mov
push
aas
daa
in
push
pop
jbe
retf
jmp
cmp
es
daa
dec
add
jmp
addr16
xor
in
repz
mov
push
sub
jecxz
test
adc
sbb
push
xor
in
inc
xchg
sbb
or
stos
movs
out
sub
inc
out
fdivp
or
daa
xor
pop
in
mov
arpl
das
es
ss
mov
daa
push
inc
sub
pop
cmp
push
push
xor
ror
repz
sub
je
add
outs
data16
inc
push
jb
cdq
mov
je
push
inc
mov
ffree
outs
je
stos
inc
aas
call
add
mov
pop
cmp
pop
mov
sub
xchg
inc
fsub
movs
pop
xor
dec
sbb
in
and
(bad)
es
xor
ja
sub
xchg
scas
pop
div
adc
cmp
mov
fsubr
or
xor
sub
cmp
sbb
xchg
(bad)
xchg
sbb
loop
fwait
add
lock
jmp
out
in
jl
and
clc
or
sbb
(bad)
dec
xchg
xchg
fcom
daa
mov
fidivr
xor
dec
xor
dec
daa
or
mov
daa
clc
dec
mov
(bad)
dec
sar
dec
jl
add
jne
pop
dec
ror
pop
fild
daa
(bad)
push
pushf
aaa
mov
movs
fabs
jmp
mov
mov
xchg
cdq
cdq
and
push
mul
repz
cwde
xor
cmp
in
or
xor
jnp
ins
ror
fadd
jb
outs
inc
push
fsubr
ins
daa
cmp
fdivr
mov
stos
and
lahf
icebp
xlat
push
cs
mov
and
lahf
es
shr
or
jmp
stos
push
iret
jo
inc
pushf
aaa
fstp
repz
jo
lock
aaa
jl
cdq
cmps
(bad)
daa
and
retf
cmps
add
cwde
stos
sub
and
daa
addr16
pop
ins
mov
inc
jge
push
outs
push
imul
sbb
mov
xor
push
and
out
jmp
xchg
rol
add
in
xchg
xchg
and
push
push
sub
or
jp
mov
adc
lahf
call
add
(bad)
or
cld
cmp
cmc
cdq
xor
cld
push
lock
add
sub
mov
lock
push
fidiv
add
xor
or
fild
and
lods
add
shl
cmp
dec
dec
dec
and
inc
push
jo
jbe
adc
fs
imul
cmp
inc
push
add
add
shr
mov
enter
sbb
fdiv
pop
mov
mov
nop
add
ret
xchg
fisub
je
push
mov
mov
addr16
fdiv
mov
xor
inc
ss
ins
loope
mov
es
sbb
outs
push
push
cmp
jns
outs
jbe
push
jae
ror
pop
js
arpl
or
stos
dec
inc
ror
fisttp
add
sbb
mov
pop
mov
sbb
pop
pop
adc
pop
jnp
shr
or
inc
idiv
adc
and
(bad)
push
push
pop
ja
pop
(bad)
str
push
in
mov
inc
ins
and
adc
rcr
data16
retf
lods
aas
addr16
sbb
addr16
adc
fidiv
es
cmp
push
(bad)
cmp
mov
add
mov
mov
inc
push
arpl
push
popa
xor
jno
ficom
adc
aaa
dec
push
mov
outs
cmp
hlt
fdivp
ds
push
cmp
push
imul
mov
or
fcmovb
sbb
out
popa
into
cmps
out
sub
push
xchg
popa
mov
or
mov
pop
add
iret
jnp
fiadd
jbe
and
sar
sahf
out
je
ins
adc
mov
jb
push
push
sub
xor
adc
je
fcom
sub
sbb
sub
pop
and
pop
and
push
xlat
sbb
push
push
out
retf
mov
add
cmp
inc
sbb
popf
or
js
xor
pop
and
push
xor
mov
je
pop
pop
push
push
ins
stos
and
je
xor
xchg
cmp
(bad)
mov
xchg
jo
(bad)
rol
popa
imul
add
out
rol
xor
popa
adc
push
add
push
out
jno
das
or
sub
ins
outs
and
fucomp
cld
xchg
add
inc
repnz
inc
fwait
add
loopne
sbb
iret
dec
dec
mov
push
out
(bad)
adc
add
cmp
fadd
push
adc
outs
sub
push
sub
ins
sub
retf
sbb
popa
jecxz
xor
push
dec
ins
push
jne
scas
pop
dec
lds
das
daa
daa
jecxz
push
out
loope
jmp
xor
lds
mov
fs
(bad)
xor
jecxz
neg
push
mov
cli
pop
ret
pop
sbb
mov
je
(bad)
push
jl
shl
add
(bad)
sysret
pop
es
jae
retf
mov
faddp
add
loope
icebp
ds
add
push
inc
add
loope
sbb
mov
lds
js
xchg
pop
sbb
outs
cmp
hlt
jle
push
test
pusha
or
outs
sub
imul
pop
arpl
cmp
out
fiadd
pop
mov
dec
arpl
inc
xchg
jb
inc
ret
pop
inc
sbb
jg
adc
iret
xchg
bound
ret
scas
out
neg
pop
push
shl
adc
pop
(bad)
jmp
mov
les
rcl
adc
imul
rcr
repz
push
dec
outs
div
or
pop
sub
addr16
shl
call
add
(bad)
jbe
fidivr
shr
dec
lahf
fisub
lock
xchg
xor
repz
add
lock
mov
jnp
aas
popa
jbe
fidivr
jnp
mov
mov
stos
adc
bound
pop
mov
jmp
daa
sub
xor
fs
sbb
xchg
iret
sbb
inc
ins
rol
sub
pushaw
loopne
std
pop
jne
out
stc
mov
ret
fwait
jbe
imul
call
lds
xchg
pop
pop
repz
jp
movsx
push
bound
xor
ret
mov
ja
jmp
jns
or
or
retf
mov
xchg
inc
mov
dec
imul
cmps
ins
push
imul
shl
sbb
fs
xor
js
pop
(bad)
cs
fbstp
(bad)
lods
into
lds
dec
jbe
(bad)
adc
ja
scas
push
inc
cli
pusha
sbb
pop
mov
fcmovnb
xchg
retf
cmp
das
pop
cli
icebp
sbb
into
mov
push
fld
jbe
pop
inc
add
fistp
bound
pop
retf
stos
sub
push
jb
xchg
out
or
mov
addr16
mov
imul
xlat
xor
push
(bad)
xlat
cs
dec
out
pusha
ins
(bad)
dec
xor
jo
retf
inc
sub
add
pop
push
stos
push
jmp
stos
pop
outs
push
adc
cmps
lods
mov
sub
out
cli
push
push
outs
das
rcr
push
mov
cmp
fimul
add
ins
pop
(bad)
mov
dec
xchg
addr16
(bad)
mov
cmp
push
loopne
outs
ins
stos
xchg
and
mov
mov
sbb
les
stos
sbb
outs
xor
lds
call
push
pop
out
jo
aad
in
sub
sbb
dec
sub
xor
pop
jecxz
and
inc
or
iret
retf
and
data16
retf
popa
mov
mov
push
repz
sbb
push
stos
pusha
pop
dec
imul
mov
jae
sbb
(bad)
or
ja
adc
or
aas
ret
test
stos
jo
dec
add
(bad)
inc
jmp
pop
retf
push
(bad)
push
mov
jmp
das
sub
pop
cmovg
push
sub
xor
mov
jecxz
loopne
loop
cmps
jmp
rcl
scas
imul
jo
sbb
xor
dec
and
or
inc
shl
aaa
outs
addr16
mov
adc
xlat
mov
daa
pop
call
xor
jmp
(bad)
jmp
push
cmp
stos
cmp
aaa
loope
xchg
repz
bound
sub
push
jnp
and
inc
je
mov
test
imul
add
enter
push
sbb
or
sbb
mov
call
pop
add
ficom
sub
add
test
imul
fisttp
sbb
push
(bad)
or
mov
fist
xchg
xchg
aas
iret
push
hlt
hlt
fadd
inc
mov
movs
dec
maskmovq
imul
jg
call
pop
cmp
and
test
push
cmps
pop
pop
ins
add
aas
jae
sub
popa
pop
adc
daa
cmp
scas
and
jne
movups
mov
mov
jns
push
jb
mov
arpl
cmp
mov
sbb
(bad)
mov
lahf
push
and
or
add
pop
pop
xchg
out
dec
mov
cs
inc
bound
and
or
shr
fdivp
add
ds
(bad)
(bad)
pop
mov
adc
call
ror
mov
xchg
dec
lahf
(bad)
out
jb
mov
outs
pop
or
jbe
or
push
dec
pop
inc
and
(bad)
rep
rsqrtps
shl
(bad)
pop
mov
sub
mov
push
push
push
cmp
dec
aas
call
fild
jnp
adc
or
mov
mov
mov
dec
xor
add
dec
sbb
mov
jnp
cs
lahf
arpl
mov
or
push
pop
xchg
scas
mov
data16
mov
add
out
mov
add
mov
(bad)
inc
push
scas
mov
retf
add
push
shr
mov
dec
shl
or
mov
sbb
pop
ret
adc
jbe
cs
cmp
outs
sbb
sbb
and
xchg
mov
sbb
push
aas
fs
push
and
pusha
pop
je
data16
mov
mov
cmp
and
push
lds
mov
adc
fsubr
or
adc
add
adc
push
mov
pop
sbb
sub
sbb
shr
add
lods
sub
inc
and
dec
jnp
test
arpl
push
push
inc
jae
fdivrp
(bad)
and
mov
cli
xlat
movs
imul
jae
push
adc
cmp
push
xchg
inc
pop
mov
repnz
outs
outs
leave
movs
lods
cmps
sbb
test
add
push
lods
xlat
mov
shl
fwait
add
push
jp
adc
or
and
cmp
movs
push
or
(bad)
jbe
cmp
inc
adc
and
jae
dec
fbld
push
pop
adc
or
jne
mov
or
dec
inc
fstp
push
push
push
aad
(bad)
jnp
loopne
xchg
fisubr
or
mov
jae
inc
shl
xchg
jae
xchg
aam
div
cli
or
add
jb
jbe
pop
or
aaa
add
shr
jae
or
addr16
jae
jo
push
add
or
das
ds
ret
repz
mov
lods
push
repz
movs
adc
mov
add
cmp
jmp
lds
pop
popa
fwait
fs
imul
pop
(bad)
jns
loopne
sbb
outs
movzx
dec
inc
pop
imul
aam
inc
shl
outs
lahf
sti
jo
jo
xchg
push
adc
mov
mov
hlt
fst
pop
outs
ds
stos
mov
jo
arpl
mov
sub
and
(bad)
adc
repz
pop
add
dec
mov
arpl
es
aaa
mov
or
cmp
in
or
bound
js
add
pop
add
dec
mov
pop
sub
add
and
mov
xchg
dec
push
pop
mov
ja
push
movs
sti
and
and
or
jb
mov
mul
push
push
dec
sbb
into
mov
popf
test
adc
adc
push
pop
das
adc
mov
pop
sub
dec
or
xchg
pop
out
xor
adc
push
push
add
aad
adc
adc
imul
inc
sbb
push
jbe
jnp
add
gs
fbstp
inc
loopne
jo
adc
movs
push
add
sbb
pop
sar
or
jb
fild
and
xor
fisubr
pop
not
push
stc
ins
ins
inc
push
dec
es
push
lods
push
js
jae
test
inc
gs
jmp
or
imul
dec
ins
ja
jbe
jae
sbb
xchg
inc
data16
fbstp
pop
aam
or
int
xor
adc
cmp
arpl
dec
inc
ins
addr16
xor
push
pusha
or
sub
adc
pushf
xor
sar
dec
in
dec
jne
addr16
pop
fdivr
adc
add
pop
outs
jne
jae
clc
aaa
jmp
push
je
data16
imul
push
cwde
das
xchg
gs
ja
popa
dec
sbb
mov
out
jmp
arpl
call
fs
jp
addr16
push
xadd
push
aad
sar
inc
popa
push
and
sub
mov
add
fiadd
add
cli
fsubr
pop
and
add
add
test
add
movs
mov
adc
popa
inc
inc
sbb
push
pop
or
or
xchg
add
pop
(bad)
or
lock
sar
fisttp
xor
add
or
daa
test
aas
das
nop
retf
ins
jne
adc
push
add
mov
add
out
add
fcmovne
or
jmp
add
add
push
jb
add
push
pop
repz
out
xor
jo
pop
add
push
ins
gs
shl
xchg
jp
mov
adc
sub
xchg
test
jo
add
jmp
std
push
imul
dec
movs
sbb
mov
pop
jmp
cwde
pushf
outs
add
jl
xor
gs
shl
and
ins
push
das
xchg
pop
test
adc
cld
jae
and
outs
fs
sbb
ja
mov
int3
sbb
in
pop
inc
adc
add
imul
lahf
nop
sub
imul
outs
pop
adc
dec
mov
daa
sub
inc
mov
mov
push
outs
ins
les
mov
call
popa
sbb
call
or
fcom
push
out
and
ficom
mov
jge
push
mov
pusha
pop
lods
inc
js
pop
push
imul
mov
setbe
jle
push
add
add
ins
mov
sbb
popf
jle
and
(bad)
sbb
data16
pusha
fmul
inc
(bad)
jae
xor
inc
imul
test
lods
mov
sbb
push
inc
adc
sbb
cmp
inc
ins
push
add
and
fdivp
or
test
fs
xor
arpl
push
jmp
inc
push
push
scas
test
imul
data16
addr16
inc
adc
sbb
and
neg
jg
sub
inc
aam
pop
arpl
shl
mov
mul
lea
xchg
inc
sbb
fidiv
gs
xchg
jb
test
sbb
movs
xor
inc
xor
movs
xchg
int3
inc
push
scas
retf
fcom
xchg
iret
retf
sbb
mov
lds
dec
and
in
sub
sti
lods
adc
aas
xor
pop
inc
jmp
and
sbb
jns
outs
adc
gs
cwde
(bad)
(bad)
hlt
adc
js
xlat
test
lods
add
adc
imul
arpl
add
test
(bad)
xchg
add
pop
pop
pop
hlt
loop
xchg
imul
push
outs
push
sbb
cs
data16
ja
adc
imul
in
mov
ret
sub
dec
ins
xor
sbb
int3
ins
mov
rcr
dec
jmp
out
lock
nop
sub
outs
add
and
push
das
dec
retf
dec
outs
mov
adc
add
outs
mov
daa
cmp
sub
sub
or
inc
push
sub
mov
ja
and
adc
rol
fwait
mov
push
fwait
sub
inc
and
mov
ins
sahf
mov
dec
lods
cmc
and
adc
mov
or
jne
pop
and
clc
ret
adc
aad
imul
fisttp
dec
js
fiadd
push
sub
and
mov
sbb
jge
xchg
aas
push
dec
push
xor
mov
inc
dec
inc
gs
popa
bound
adc
ins
test
sbb
push
push
aas
dec
pop
push
xor
mov
fcomp
mov
not
outs
sbb
inc
inc
and
dec
retf
adc
jo
jmp
cmp
jecxz
adc
jmp
in
add
call
jmp
inc
aas
push
adc
xchg
pop
jne
and
xor
inc
pusha
mov
add
push
mov
push
leave
push
jnp
cmps
xchg
inc
imul
enter
and
or
aam
cs
rol
out
(bad)
movs
push
add
sub
inc
outs
pop
and
mov
and
nop
push
test
fwait
ins
sub
sbb
jmp
inc
popf
and
hlt
mov
imul
pop
sub
sub
stos
jae
or
cmp
inc
sub
and
je
nop
pop
push
sub
jnp
mov
jo
cmp
test
sbb
gs
push
ds
cli
mov
mov
outs
push
inc
sub
mov
push
inc
dec
mov
nop
div
data16
pop
(bad)
sbb
and
sar
or
addr16
movs
(bad)
or
pushf
cmps
sub
int3
add
adc
adc
movs
push
inc
adc
jo
jo
lds
pop
mov
retf
xchg
adc
add
(bad)
fwait
push
repz
adc
fcmovu
xor
lea
adc
inc
shl
pusha
sub
xor
loopne
push
pop
inc
imul
or
ficomp
xlat
pop
mov
and
imul
and
bound
in
sub
mov
out
push
popf
scas
sbb
pop
xchg
sbb
pop
add
fwait
jo
cwde
or
fs
mov
mov
(bad)
and
int3
nop
popf
sub
arpl
inc
or
push
mov
ror
push
fiadd
sbb
aaa
inc
js
shr
repnz
imul
and
pop
pop
mov
push
sub
ret
xchg
push
stos
mov
inc
push
xchg
push
fs
push
sub
int
add
retf
mov
aaa
stos
daa
mov
push
mov
jne
and
pushf
imul
data16
cmp
push
or
cs
xor
nop
cmc
mov
js
sbb
jecxz
cdq
adc
ins
arpl
shr
dec
mov
mov
mov
ret
xchg
imul
dec
imul
cli
dec
jae
sub
test
jnp
inc
adc
push
sbb
imul
and
and
adc
jp
pop
div
xor
push
stc
sbb
xor
movs
dec
dec
mov
imul
mov
imul
icebp
inc
adc
push
pop
(bad)
test
lds
jmp
cmp
mov
xchg
mov
enter
sbb
push
stos
inc
sbb
test
inc
cdq
inc
ret
lods
loopne
adc
stos
stos
in
mov
push
pop
fs
test
es
inc
sbb
mov
and
add
daa
or
ficom
mov
das
push
sub
and
and
dec
cmps
add
inc
adc
test
enter
ret
jns
(bad)
push
mov
movs
sbb
cli
sbb
jns
xchg
and
push
mov
sbb
mov
fnstcw
sub
jno
retf
add
sbb
xchg
sub
xchg
popa
mov
test
sbb
adc
cmp
and
mov
loope
xor
ss
jo
lahf
es
adc
dec
and
test
fs
add
xchg
stos
lahf
add
mov
mov
lods
sbb
push
bound
outs
dec
dec
cmp
pop
in
and
test
and
test
and
pop
pusha
pop
jmp
fld
xchg
push
lock
xor
xchg
dec
pop
cmp
(bad)
repz
arpl
fsub
daa
jmp
jmp
inc
adc
inc
fist
ror
fs
inc
cmps
fdivr
inc
mov
rol
movs
mov
call
nop
sub
and
xor
mov
and
pop
dec
jp
aam
rcl
in
outs
shl
add
push
dec
add
add
pop
push
aam
sub
pop
jns
dec
les
jb
in
adc
pop
mov
loop
es
pop
add
(bad)
push
(bad)
ror
lods
fcmovne
(bad)
add
inc
movups
rcr
push
xor
push
add
test
or
ins
ror
sbb
inc
scas
xor
push
icebp
pushf
jb
popf
pop
and
pusha
es
les
imul
test
inc
push
rol
push
aas
lock
in
movs
mov
dec
add
dec
fiadd
jmp
xchg
addr16
lahf
cs
jae
add
mov
jb
or
ror
inc
push
gs
out
jo
xchg
adc
stos
scas
bound
jae
dec
push
daa
add
js
fldcw
repnz
(bad)
jg
(bad)
or
dec
xchg
and
add
add
pusha
mov
lea
mov
push
or
jmp
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmp
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
and
and
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
mov
std
dec
add
