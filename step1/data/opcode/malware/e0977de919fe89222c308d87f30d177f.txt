in
repnz
nop
push
cmc
xchg
popf
mul
xor
outs
push
data16
push
xor
fdiv
icebp
movs
(bad)
cmps
in
cwde
push
loope
mov
cdq
data16
jb
add
pop
icebp
data16
xchg
out
stc
xor
data16
test
in
int
inc
out
aad
test
jl
stos
mov
aad
push
jp
in
xor
xor
sbb
fdiv
icebp
in
ds
cmp
popa
cmps
xor
pop
arpl
xor
adc
fidiv
cmp
icebp
or
mov
popa
cmps
xor
ja
lds
mov
push
das
popa
cmps
sahf
xor
fdiv
data16
icebp
out
cdq
retf
int3
mov
xor
mov
or
sbb
shl
jl
stos
mov
jmp
mov
or
push
xor
jg
xor
mov
push
push
sbb
icebp
in
sahf
ss
pop
sbb
icebp
xor
xor
jmp
push
xor
mov
icebp
xchg
jns
int3
pop
sbb
icebp
out
loope
xor
imul
sub
hlt
dec
(bad)
cmp
cdq
pop
div
jmp
and
cdq
and
xchg
fdivr
movs
jmp
push
ds
call
int
push
sbb
xor
pop
loope
and
repz
push
in
ds
sbb
loope
sahf
xor
data16
fwait
ins
xor
mov
mov
outs
aad
test
xor
arpl
repnz
aam
icebp
data16
sbb
mov
cmp
cmps
test
xor
(bad)
sti
mov
cdq
test
mov
and
fcmovbe
sbb
xor
aam
les
jo
mov
dec
icebp
pop
div
(bad)
xor
sub
fisubr
sahf
xor
adc
mov
data16
sbb
fcomp
cdq
cmp
dec
fdiv
icebp
lea
push
push
data16
icebp
xor
fwait
cdq
mov
xor
pop
imul
mov
data16
jb
int3
popa
cmps
xor
sbb
add
ds
fucomip
fld
div
or
pop
icebp
push
hlt
repnz
mov
xor
pop
shl
mov
sbb
and
int
inc
sbb
icebp
cdq
jmp
mov
icebp
mov
jmp
call
cmp
fdiv
xor
mov
lock
mov
popa
cmps
xor
mov
xchg
xor
or
pop
icebp
or
pop
icebp
or
pop
icebp
data16
icebp
mov
icebp
push
icebp
js
cmc
retf
pop
leave
push
adc
add
lea
inc
cwde
and
outs
nop
xor
jmp
retf
and
mov
icebp
pop
lds
fdiv
mov
in
les
and
mov
setns
jb
ror
push
cdq
fdiv
test
repnz
clc
mov
idiv
and
shr
or
cmps
aaa
cmp
icebp
xchg
cmp
push
out
sbb
cmp
cmp
dec
xchg
mov
lds
out
cdq
(bad)
js
in
retf
push
ja
ss
ja
ss
cdq
pop
fdivr
icebp
or
int
push
inc
stc
mov
icebp
push
hlt
clc
nop
test
shl
int
jb
inc
in
or
int
jbe
inc
or
push
hlt
push
adc
fiadd
nop
test
shl
xor
(bad)
std
out
and
push
out
cdq
ret
in
repnz
cmp
xor
mov
xor
retf
push
ja
ss
icebp
fcomp
cdq
test
fcmovb
sbb
xor
aad
test
repnz
inc
jmp
adc
pop
icebp
cdq
test
fcmovbe
sbb
xor
and
mov
dec
icebp
data16
test
repnz
repnz
fidiv
icebp
cmp
xlat
jb
int3
popa
cmps
xor
std
mov
je
jo
and
mov
push
sbb
in
(bad)
icebp
in
into
icebp
lea
retf
cmc
lock
and
hlt
push
sbb
push
and
mov
cdq
into
lock
push
addr16
imul
iret
pop
or
lock
and
pop
fnsave
test
and
in
cdq
and
and
inc
hlt
in
cdq
into
sbb
fadd
xchg
sahf
push
ja
out
cdq
retf
sub
mov
fadd
pop
sbb
cdq
cdq
into
jp
aam
xor
adc
mov
loopne
icebp
adc
mov
cdq
and
dec
cdq
and
icebp
(bad)
(bad)
mov
shl
cmp
fdiv
lock
xchg
popa
cmps
xor
std
fucomp
pop
push
pusha
push
jmp
movs
div
mov
aam
xor
adc
mov
loopne
icebp
adc
hlt
je
fmul
push
data16
sbb
xchg
aaa
and
cmc
ret
aam
in
push
cmps
hlt
addr16
push
and
dec
loope
xor
mov
fcom
fmul
push
push
mov
and
sbb
jmp
xchg
xor
push
xlat
mov
cmp
cmc
mov
mov
push
ja
out
push
sbb
out
mov
rcl
xor
in
mov
push
loope
push
repz
mov
sub
test
push
mov
pop
push
es
and
in
lea
push
add
out
mov
jp
aam
cmc
jle
ins
scas
cmp
cmp
xor
ja
iret
mov
in
cdq
into
sbb
nop
aaa
adc
mov
mov
push
loope
push
repz
mov
sub
test
push
mov
pop
push
es
and
in
lea
sahf
xor
aam
cmc
jle
mov
call
stos
scas
pop
addr16
lea
xor
loope
and
test
mov
call
mov
aaa
cs
aam
dec
(bad)
in
or
mov
in
in
test
repnz
int
enter
jp
and
movs
call
xor
push
xlat
mov
in
test
pop
(bad)
and
or
sbb
hlt
push
sbb
cdq
test
jo
xor
or
and
std
and
sahf
xor
cdq
mov
cmps
mov
int3
push
cdq
pop
not
(bad)
ror
push
adc
scas
cmp
cmp
xor
std
fldenv
in
push
retf
push
cmc
push
adc
fidiv
mov
mov
out
data16
cdq
test
xor
fwait
stos
xor
out
std
mov
fdiv
cmc
push
fdivr
lods
movs
mov
jp
aam
sub
cmc
pop
js
(bad)
js
pop
(bad)
aad
xor
adc
xchg
ins
aad
xor
outs
push
je
cdq
stos
ss
and
out
and
or
sbb
jmp
fwait
scas
xor
cmp
mov
mov
outs
arpl
mov
movs
mov
push
lea
icebp
in
xor
cmc
retf
pop
push
cmc
data16
sbb
cdq
ret
in
mov
xor
and
xor
sub
and
xor
cmp
sbb
xor
cmc
or
mov
adc
repnz
mov
cdq
(bad)
cmps
test
repnz
ss
add
mov
loope
enter
fdiv
js
pop
lds
cmps
aad
(bad)
cli
sbb
mov
aad
test
repnz
sar
xor
push
cdq
and
cmps
sub
addr16
fs
addr16
and
mov
js
cmc
jmp
sahf
xor
cdq
fdiv
test
pop
lea
mov
ja
imul
mov
jg
xor
addr16
xor
loope
inc
and
xor
and
bound
and
stc
scas
inc
and
xor
sub
js
add
setns
jo
mov
icebp
data16
push
data16
push
and
mov
data16
cdq
jge
jo
jmp
ror
cwde
and
ds
int
in
ds
cdq
and
icebp
adc
mov
cli
outs
jo
xor
data16
xor
cdq
(bad)
mov
fsub
pop
and
out
cdq
into
jb
sub
(bad)
loop
xor
pop
dec
or
fdiv
jb
and
jo
pop
div
data16
js
in
jmp
sahf
xor
sub
hlt
out
jo
adc
mov
out
jo
data16
xor
sahf
push
jmp
retf
data16
sbb
xor
aas
fs
jmp
out
pop
jmp
sbb
fdivr
sbb
pop
div
ss
inc
adc
xor
js
gs
data16
push
in
mov
gs
and
out
cdq
into
jo
lds
data16
test
fcomp
xchg
sahf
xor
sub
jp
and
int3
data16
icebp
out
cdq
into
js
sub
js
or
setns
jb
and
test
mov
cdq
and
mov
data16
icebp
data16
sub
fdiv
clc
cmps
test
div
push
ja
pop
pop
out
push
cwde
and
out
stos
test
fdiv
icebp
data16
push
cli
outs
jo
ss
add
xor
int
sahf
push
jmp
and
js
push
ja
pop
cdq
retf
ror
push
cdq
pop
pop
ins
aad
xor
cmp
mov
mov
es
or
(bad)
js
in
les
push
inc
or
sub
js
and
ss
cdq
cmp
in
ss
jecxz
xor
data16
test
ja
fdiv
icebp
out
das
mov
xor
xor
adc
mov
sub
sub
pop
retf
mov
jbe
addr16
test
pop
test
push
or
jmp
xor
ss
inc
and
(bad)
adc
xor
aam
or
mov
inc
and
xor
sti
sub
push
outs
sbb
cld
in
into
icebp
out
and
push
out
cdq
(bad)
js
pop
dec
or
xor
lds
js
in
retf
pop
push
or
inc
pop
cmc
leave
jge
xor
mov
test
ja
in
fadd
int
mov
ss
and
jo
mov
icebp
call
push
shl
rcr
and
jb
and
test
stc
push
in
fwait
mov
xor
and
xor
sub
js
xor
icebp
or
pop
icebp
or
pop
icebp
data16
data16
icebp
mov
inc
icebp
push
ja
or
pop
icebp
or
bound
push
scas
xor
in
cdq
cmp
pop
cli
push
es
push
lock
movs
mov
jl
sub
mov
adc
fimul
mov
cmp
sbb
sbb
jmp
ret
ficomp
xchg
sahf
xor
adc
fisub
adc
fiadd
push
fdiv
scas
cmp
xlat
dec
cli
fdiv
icebp
mov
inc
icebp
data16
cmps
(bad)
outs
test
arpl
xor
cmc
jmp
and
icebp
push
rol
mov
xor
sahf
data16
push
jmp
test
and
sub
int
aas
aad
(bad)
loop
cmp
fs
lods
data16
adc
pop
xchg
cwde
and
mov
fcomp
mov
inc
icebp
data16
and
je
and
push
ss
mov
cdq
and
mov
cdq
pop
idiv
in
scas
inc
and
xor
adc
xor
sub
js
ins
int
cdq
push
icebp
jl
cmp
setns
mov
cs
ja
outs
sbb
push
out
or
data16
push
ss
add
mov
push
ss
or
jb
xor
data16
(bad)
jecxz
cmp
pop
shl
sbb
setns
mov
push
push
ja
outs
sbb
je
aam
icebp
push
mov
xor
and
cmp
fwait
mov
push
out
add
sub
pop
mov
push
lds
rcl
(bad)
int
cdq
mov
mov
sbb
or
inc
aam
icebp
add
dec
cdq
and
icebp
imul
dec
fwait
and
push
shl
fwait
addr16
add
mov
push
ss
pop
cdq
and
xchg
out
popa
cwde
push
cwde
and
icebp
imul
int3
cdq
and
icebp
imul
inc
jecxz
int
cdq
pushf
bound
int
cdq
mov
(bad)
popf
xor
xchg
scas
xor
in
ds
rcr
push
cwde
and
cmc
arpl
push
retf
push
fs
data16
adc
pop
xchg
push
cwde
and
xor
jecxz
xor
data16
cdq
data16
jo
push
mov
pop
cdq
and
push
data16
or
pop
or
int
cdq
mov
call
mov
fdiv
test
pop
cdq
and
lock
js
fucomp
js
mov
cdq
mov
jo
push
mov
add
and
push
data16
or
pop
adc
(bad)
int
cdq
mov
and
ror
push
cdq
fdiv
test
pop
cdq
and
lock
fwait
addr16
add
pop
mov
retf
push
in
ds
cdq
and
icebp
adc
pop
lock
cmp
mov
push
(bad)
or
and
cmps
mov
push
cdq
pop
idiv
pop
and
icebp
data16
ss
int
cdq
fnsave
icebp
data16
cdq
test
jo
push
mov
add
and
push
data16
or
pop
adc
(bad)
int
cdq
mov
mov
mov
fdiv
test
pop
cdq
and
lock
jo
lahf
push
icebp
data16
cdq
fldcw
jo
push
mov
add
and
push
data16
mov
and
icebp
data16
push
jb
mov
mov
inc
daa
(bad)
or
and
jb
ror
push
cdq
fdiv
test
pop
cdq
and
lock
fwait
addr16
add
pop
mov
mov
sbb
int3
cdq
and
icebp
adc
shl
and
cmps
mov
push
cdq
pop
idiv
pop
and
icebp
test
addr16
add
mov
push
xor
add
push
int
data16
mov
and
icebp
data16
push
test
push
cdq
and
js
pop
xchg
pop
cdq
and
icebp
or
pop
jne
sahf
xor
mov
idiv
pop
and
icebp
data16
fwait
addr16
add
pop
mov
cs
push
in
ds
cdq
and
icebp
adc
cmc
je
and
push
fdiv
icebp
out
out
data16
push
test
arpl
mov
push
ss
or
sbb
test
mov
xor
stos
fidiv
icebp
mov
and
sbb
xor
out
add
sub
pop
mov
xor
pop
jmp
add
setns
js
and
xor
int
data16
push
ss
mov
cdq
and
mov
inc
push
ja
out
push
lock
xor
std
cmc
data16
push
push
jmp
or
setns
mov
fisub
int3
push
sar
fdiv
dec
shr
mov
push
out
pop
push
ss
int
cdq
retf
xor
jecxz
int
cdq
fnsave
icebp
push
mov
cdq
and
mov
cwde
and
jecxz
int
cdq
mov
js
in
jmp
and
mov
push
mov
cdq
and
mov
pop
fdiv
icebp
push
ja
outs
sbb
je
fdiv
icebp
jmp
loop
cwde
and
jecxz
int
cdq
mov
icebp
data16
push
test
jns
and
js
pop
dec
or
(bad)
fdiv
jl
xor
setns
push
ss
or
xor
mov
(bad)
jecxz
xor
pop
icebp
pusha
xor
xor
inc
push
mov
cdq
and
mov
cwde
and
pop
and
out
cdq
into
js
fucomp
js
pop
dec
or
fdiv
jo
cli
ds
push
mov
cdq
and
mov
cwde
and
pop
and
out
cdq
into
clc
cmps
shl
jo
scas
adc
pop
xchg
add
imul
mov
jecxz
int
cdq
mov
cmp
fdiv
jb
shl
push
xor
data16
mov
icebp
push
jmp
xor
setns
or
and
mov
push
mov
cdq
and
mov
pop
mul
out
add
sub
pop
push
ss
int
cdq
fidiv
jp
xor
setns
imul
mov
push
in
and
gs
data16
push
jmp
mov
sbb
(bad)
fdiv
icebp
xchg
jns
dec
mov
int3
push
xor
push
xor
mov
lock
and
(bad)
jecxz
xor
pop
xchg
pop
cdq
and
icebp
out
add
sub
pop
mov
push
ss
add
mov
push
ss
or
jb
xor
data16
(bad)
jecxz
xor
pop
fchs
arpl
xor
int
cdq
mov
push
ss
or
xor
repnz
jecxz
xor
pop
xchg
pop
cdq
and
icebp
pop
xor
data16
sbb
mov
icebp
aas
push
jmp
push
icebp
xchg
mov
and
icebp
in
pop
sahf
push
cwde
and
push
jmp
mov
jl
movs
int
cdq
pop
fsubp
out
cmp
add
push
xchg
mov
mov
icebp
data16
xchg
jp
je
setns
inc
js
and
xor
mov
push
lock
push
push
mov
cdq
and
mov
push
mov
cdq
and
mov
pop
fdiv
icebp
push
ja
out
mov
data16
xor
and
data16
push
shl
jl
mov
setns
push
cwde
and
push
ss
or
xor
mov
lock
and
(bad)
jecxz
xor
mov
push
and
push
outs
shl
jb
lods
int
cdq
fdivr
icebp
jmp
pop
push
fwait
and
shr
add
push
cmc
mov
popa
push
push
fwait
and
xor
popa
pop
push
fwait
and
(bad)
loop
xor
sbb
lock
js
in
jmp
jo
setns
or
and
mov
push
mov
cdq
and
mov
pop
mul
jmp
iret
push
cwde
and
int
fadd
out
pop
retf
and
inc
add
iret
push
jmp
pop
push
fwait
and
jecxz
int
cdq
push
mov
fwait
and
push
ss
popf
data16
fdivr
push
mov
cdq
and
mov
push
mov
cdq
and
mov
pop
mul
out
add
sub
pop
mov
jmp
jp
push
int
cdq
mov
push
jecxz
int
cdq
push
mov
cdq
and
enter
setns
mov
cwde
and
jp
je
setns
js
sub
js
push
int
cdq
push
icebp
jp
jl
setns
push
jecxz
int
cdq
push
mov
cdq
and
enter
setns
mov
call
setns
inc
mul
and
jo
loope
icebp
push
mov
cdq
and
mov
outs
pop
(bad)
and
sar
push
ss
add
xor
mov
into
mov
icebp
in
out
cwde
and
test
mov
cdq
and
mov
outs
push
mov
cdq
and
mov
outs
push
mov
cdq
and
mov
outs
push
jmp
cmp
setns
sbb
sub
push
cmp
mov
jns
sahf
xor
add
icebp
data16
out
stc
xor
data16
cmps
out
mov
ja
xor
mov
rcr
into
icebp
data16
jp
cmp
test
(bad)
arpl
xor
fcomp
lock
and
jb
pop
div
lea
int3
lock
push
inc
adc
call
and
icebp
data16
xchg
mov
ja
std
in
pop
fucomp
mov
aad
and
mov
inc
mov
mov
sbb
cdq
and
push
cmp
ret
fdiv
icebp
dec
sti
xor
cmps
fldcw
mov
sahf
push
cmc
cdq
loop
jo
or
pop
icebp
push
jo
mov
mov
fwait
data16
xchg
data16
xchg
data16
cmp
mov
inc
(bad)
fs
aam
ins
sub
js
sub
js
and
xor
in
ss
fdiv
js
sub
js
and
xor
xchg
jmp
pop
jae
icebp
(bad)
mov
push
cli
lock
push
repz
lahf
mov
fdiv
icebp
sbb
mov
popf
xor
data16
js
call
rol
outs
sbb
jge
fidiv
icebp
pop
and
icebp
sar
push
inc
pop
cmps
xor
jle
jae
es
int
push
sbb
push
sbb
iret
inc
shl
cmc
es
ja
(bad)
pop
daa
(bad)
movs
fdiv
jno
les
neg
mov
fdiv
pop
arpl
cld
(bad)
xor
leave
leave
popf
xor
pusha
and
leave
leave
popf
xor
stos
xor
xchg
cmp
repz
xor
cdq
(bad)
pop
daa
(bad)
std
fdiv
push
arpl
jmp
adc
add
(bad)
mov
icebp
data16
data16
adc
cdq
fidivr
pop
aas
jmp
(bad)
pushf
fwait
mov
jle
push
es
fstp
les
not
fcmovnbe
fdiv
jo
cmp
icebp
pop
aas
jmp
(bad)
fcmove
push
cdq
sub
jmp
adc
add
(bad)
and
icebp
pop
fisttp
fdiv
jno
les
mov
popf
xor
ins
jae
pop
int3
push
cdq
sub
jmp
adc
add
(bad)
push
xor
pop
fisttp
imul
mov
(bad)
hlt
mov
icebp
fdiv
icebp
out
adc
cmp
sbb
int
arpl
popf
mov
fiadd
push
sbb
push
fdiv
jno
les
cmp
mov
pop
daa
fdiv
icebp
data16
lea
movs
div
leave
popf
xor
inc
dec
icebp
pop
aas
jmp
(bad)
(bad)
xor
data16
pop
daa
fdiv
hlt
pop
jae
icebp
ficomp
sar
cmp
pop
daa
fdiv
sbb
lahf
mov
pop
repnz
pop
daa
(bad)
and
and
icebp
fnstcw
push
es
xor
mov
icebp
(bad)
pop
daa
(bad)
inc
data16
push
arpl
leave
leave
popf
xor
(bad)
jle
icebp
pop
ret
or
xor
in
mov
(bad)
popa
data16
shl
mov
jle
jae
inc
push
cli
lock
push
repz
call
rol
outs
sbb
movs
in
cmp
repnz
icebp
pop
pop
xor
data16
xor
sbb
int
jecxz
hlt
mov
pop
aas
jmp
(bad)
loope
hlt
push
sbb
(bad)
jmp
xor
arpl
popf
mov
aaa
sbb
arpl
popf
mov
push
cli
shr
popf
mov
pushf
(bad)
push
sbb
cdq
fdiv
dec
stos
les
icebp
xchg
cmp
repz
arpl
jmp
imul
add
push
xor
ins
jo
out
adc
cmp
sbb
xor
fdivr
hlt
push
ins
jo
in
xor
inc
and
rdtsc
data16
(bad)
loop
xor
pop
dec
add
test
xchg
mov
pop
fcmovnbe
push
fdiv
(bad)
rcr
xor
adc
xchg
mov
popf
xor
arpl
xchg
mov
pop
(bad)
iret
popf
xor
adc
mov
xchg
fadd
out
shl
mov
icebp
fs
jnp
sbb
test
jmp
fidiv
icebp
sub
js
xor
jnp
jle
pop
daa
fdivr
mov
pop
shl
out
cdq
shl
aaa
test
dec
add
xor
mov
fdiv
icebp
in
ds
fdiv
sbb
ret
leave
ds
fdivr
leave
iret
popf
xor
arpl
xchg
mov
jge
push
fmul
hlt
push
jb
adc
mov
mov
push
repz
rcl
jmp
jae
xchg
mov
push
xor
leave
call
jl
icebp
(bad)
in
mov
in
std
(bad)
pushf
xor
mov
cmc
jmp
sbb
sbb
cli
lock
push
repz
cmp
arpl
jnp
mov
ss
(bad)
and
pop
cld
lods
sahf
xor
cmps
mov
pop
out
sahf
xor
data16
inc
and
mov
ss
lock
mov
mov
inc
pop
fdiv
push
jbe
jae
push
popf
clc
mov
mov
push
pop
fdiv
push
xchg
jno
icebp
push
xchg
clc
mov
mov
addr16
fdiv
push
push
jae
icebp
out
and
or
sbb
lods
sahf
xor
data16
inc
and
ins
scas
movs
mov
mov
add
jmp
sahf
xor
jmp
call
fdiv
mov
les
icebp
pop
fnstcw
push
fdiv
jb
xor
jl
je
mov
sbb
fdiv
icebp
in
retf
add
sub
pop
mov
call
icebp
in
loop
fidivr
add
js
inc
mov
icebp
mov
fdiv
dec
mov
xor
xchg
aas
mov
and
xor
data16
icebp
out
cdq
ror
arpl
inc
fdiv
icebp
out
ret
retf
cmc
mov
fnsave
icebp
pop
push
dec
push
jmp
pusha
mov
icebp
data16
push
jmp
fisub
push
ja
and
add
inc
mov
icebp
xchg
aas
mov
jl
inc
bound
ss
fwait
data16
fwait
pusha
and
mov
push
icebp
push
ja
and
jmp
and
fdiv
push
arpl
push
adc
or
pop
cmc
or
int
xor
data16
xor
mov
dec
xor
mov
adc
retf
popf
xor
cmp
clc
out
add
adc
cdq
mov
stos
scas
pop
addr16
pop
fcompp
mov
ds
and
mov
adc
add
std
out
cdq
ret
int3
mov
add
xor
mov
fwait
data16
jl
and
jl
xor
push
adc
icebp
jmp
(bad)
mov
outs
and
ror
xor
sub
(bad)
ficom
push
icebp
sub
out
cdq
jmp
push
xlat
cmps
(bad)
cmp
lock
push
cmc
push
arpl
stc
or
int
jbe
jae
out
shl
data16
movs
mov
mov
outs
push
outs
std
cdq
(bad)
and
add
imul
icebp
test
rcr
xor
test
rcr
xor
test
rcr
xor
test
rcr
xor
shl
jp
int3
mov
in
push
es
mov
push
push
imul
icebp
imul
je
fdiv
icebp
out
es
ror
and
movs
shl
js
pop
fdiv
imul
mov
es
rol
or
jb
fdivr
sbb
xor
mov
(bad)
jmp
aaa
pushf
stos
sahf
xor
rol
jmp
daa
daa
stos
sahf
xor
data16
push
in
mov
jl
iret
aaa
lock
pop
fdiv
dec
or
mov
pop
(bad)
out
cdq
(bad)
jp
int3
mov
or
xor
jp
sub
icebp
data16
adc
rcr
mov
arpl
(bad)
mov
fadd
out
int
(bad)
jmp
push
cdq
and
mov
loop
test
push
retf
loopne
cmc
adc
xor
fidiv
test
push
retf
fbstp
(bad)
out
and
sbb
test
pusha
loopne
test
icebp
data16
out
and
sbb
push
test
ja
jmp
or
in
ss
fstp
icebp
pop
push
iret
fs
mov
pusha
fiadd
out
and
sbb
mul
js
pop
(bad)
out
xor
adc
ss
rcr
xor
mov
xor
adc
nop/reserved
xor
mov
jl
iret
aaa
lock
pop
fdiv
dec
or
sub
xor
js
and
mov
push
jbe
arpl
retf
fdivr
hlt
fdiv
icebp
out
or
adc
push
mul
jnp
sahf
pop
(bad)
out
xor
adc
mov
jno
fidiv
test
retf
fdivr
int3
adc
(bad)
pcmpgtd
xor
data16
mov
outs
icebp
push
addr16
mov
hlt
addr16
bound
in
fdiv
icebp
and
icebp
(bad)
fdiv
(bad)
in
iret
push
cdq
sub
addr16
pop
fdivrp
xor
movs
div
(bad)
rol
(bad)
(bad)
clc
and
sbb
xor
fdiv
xor
push
(bad)
data16
aaa
adc
sbb
xor
(bad)
int
push
sbb
imul
jp
leave
adc
fadd
sub
and
sub
xor
pop
cdq
and
arpl
cmc
jns
(bad)
data16
pop
xor
adc
and
sbb
jmp
push
neg
jl
icebp
pop
cdq
into
or
mov
out
addr16
xor
and
add
sbb
out
xor
addr16
mov
push
jbe
addr16
addr16
bound
in
aaa
sub
cli
push
out
xor
dec
or
or
xor
in
ss
and
cmc
push
xor
mov
push
arpl
push
dec
and
movs
js
xor
in
ss
and
test
xor
xor
int3
repz
in
adc
mov
idiv
cmp
mov
icebp
data16
stos
data16
xor
or
add
push
data16
stos
data16
icebp
data16
adc
pop
rcr
and
jb
movs
div
test
int
test
rcr
push
cdq
and
mov
fld
out
shr
cdq
and
test
test
int
out
aaa
xchg
stos
sahf
xor
adc
fldcw
mov
int
repz
push
cdq
mov
(bad)
jmp
aas
int
sahf
xor
push
cmps
pop
mov
dec
bound
fdivr
push
cdq
mov
out
jmp
aas
adc
xor
js
push
cdq
and
in
jne
icebp
mov
imul
mov
leave
adc
fdiv
push
rol
xor
push
or
fnop
cmp
xor
jecxz
int
cdq
sbb
icebp
imul
xor
xchg
mov
fdivr
icebp
imul
xor
fwait
mov
push
cmps
and
arpl
adc
pop
movs
lock
(bad)
lahf
and
js
add
push
cdq
and
mov
or
push
cdq
push
loope
(bad)
retf
jo
jmp
pop
(bad)
push
cdq
and
push
(bad)
std
pop
icebp
jbe
xor
push
hlt
jb
(bad)
pop
fs
xchg
int
and
icebp
jbe
xor
sti
sub
push
cdq
stos
in
jecxz
in
push
cdq
mov
push
cmp
xor
arpl
sbb
(bad)
push
xor
data16
push
data16
inc
mov
int
cdq
imul
(bad)
pushf
and
jb
sar
test
xchg
jno
and
icebp
in
inc
mov
cdq
and
mov
and
xor
push
dec
in
ss
retf
and
and
icebp
(bad)
fdiv
cmp
xor
data16
xor
out
pop
mov
cdq
and
mov
data16
icebp
adc
test
and
jecxz
fisttp
cdq
fdiv
lock
mov
mov
and
icebp
pop
pop
ficomp
cdq
and
push
cdq
(bad)
and
int
mov
mov
jb
data16
push
cdq
sbb
daa
rol
pushf
xor
sub
push
cdq
pop
xchg
add
in
dec
(bad)
push
cdq
and
adc
xor
fistp
in
shl
js
leave
fisubr
cdq
and
push
cmps
xor
sbb
xor
sub
xor
out
xor
jecxz
fisttp
cdq
pop
pop
(bad)
fdiv
adc
aaa
mov
aas
in
push
cdq
fadd
push
mov
fldcw
mov
push
out
push
xor
arpl
xor
push
cmps
ins
mov
movs
xor
out
pop
stos
das
cdq
and
push
in
dec
stos
das
cdq
and
js
dec
in
push
cdq
push
mov
mov
dec
in
push
cdq
fbstp
js
dec
in
push
cdq
push
mov
mov
or
push
cdq
push
mov
mov
push
mov
mov
imul
push
aas
fdiv
jp
or
push
cdq
in
dec
mov
push
mov
mov
push
mov
mov
aas
in
push
cdq
fadd
push
fdiv
test
in
push
cdq
sbb
cmps
dec
mov
shl
imul
icebp
cdq
dec
sahf
cs
and
push
(bad)
and
cmp
push
cdq
sbb
out
cs
and
jl
add
push
out
shl
rol
xor
ror
push
cdq
and
adc
in
jge
icebp
out
dec
(bad)
push
cdq
and
jbe
xor
push
mov
mov
shl
jno
aam
(bad)
loop
xor
push
mov
mov
int
rcr
nop/reserved
xor
shl
fdiv
sbb
xor
in
pop
(bad)
push
cdq
and
icebp
pop
fmul
jmp
xor
out
pop
(bad)
cs
and
je
add
push
pop
lahf
adc
in
imul
add
pop
or
adc
mov
jno
fadd
out
sub
sbb
or
adc
mov
jno
fadd
out
sub
sbb
or
adc
jl
stos
and
mov
dec
xchg
das
cdq
and
adc
in
push
int
out
xchg
das
cdq
and
(bad)
rcr
nop/reserved
xor
fdiv
icebp
in
int
and
ss
cmp
push
cdq
aaa
mov
xchg
aaa
cmp
push
cdq
(bad)
fcom
fwait
or
int
adc
mov
lds
int
rol
add
push
cmps
xor
leave
xchg
sub
pop
push
int3
fdiv
icebp
test
pop
loope
icebp
data16
test
push
int3
fdiv
icebp
test
pop
loope
icebp
data16
test
int3
arpl
xor
data16
mov
adc
inc
jecxz
in
push
cdq
aad
mov
pop
dec
stc
addr16
(bad)
rcr
push
cdq
and
rol
in
push
cdq
and
sbb
and
ds
aas
in
push
cdq
fadd
in
(bad)
push
cdq
and
jp
sub
push
cdq
sbb
repz
repz
into
jp
leave
fisubr
cdq
and
add
fld
fisttp
cdq
fdiv
icebp
data16
loop
arpl
or
xchg
xor
push
rol
xor
push
or
fnop
cmp
xor
jecxz
leave
push
cdq
sub
addr16
pop
fmulp
xor
aam
mov
loop
add
pop
ja
(bad)
into
xor
mov
mov
push
data16
push
in
cdq
into
js
(bad)
js
and
js
sahf
xor
fdiv
icebp
xchg
js
mov
sahf
xor
fdiv
icebp
xchg
js
mov
push
lock
push
test
mov
popf
fnsave
icebp
data16
data16
and
rol
sub
ja
addr16
dec
or
(bad)
jo
and
mov
(bad)
inc
data16
jnp
rol
mov
fdiv
jo
and
frstor
mov
popf
fnstsw
xor
xor
stc
repnz
data16
jno
daa
xor
and
movs
call
jb
(bad)
jb
fld
in
jb
bound
rol
sub
cmps
test
mov
arpl
xor
and
movs
call
icebp
data16
jno
fdiv
test
ja
bound
or
imul
icebp
adc
les
out
leave
cmc
out
retf
lock
retf
(bad)
imul
mov
(bad)
out
fistp
mov
or
leave
lock
(bad)
mov
sahf
fnsave
adc
and
mov
cmp
and
cmp
icebp
data16
out
leave
lock
cmp
mov
xor
stc
frstor
pop
cdq
adc
push
test
or
data16
cmps
or
fcmovu
xor
xor
pop
cli
push
es
push
lock
mov
loop
test
jbe
addr16
imul
pop
int
sbb
mov
test
or
pop
ins
scas
cmp
cmp
sbb
xor
xor
jl
sahf
sub
js
and
push
cdq
push
cmc
jo
mov
inc
std
xor
inc
stc
jmp
xor
cdq
and
push
test
icebp
jmp
xor
cdq
and
jae
xor
in
and
cmc
retf
in
les
cmc
retf
sub
mov
mov
scas
mov
pop
icebp
cdq
test
and
xor
mov
push
xchg
sub
sahf
cmc
retf
mov
cdq
out
xor
or
pop
icebp
or
pop
icebp
data16
ret
xor
xor
pop
int3
push
adc
mov
push
inc
imul
cdq
ds
fdiv
icebp
push
sbb
xchg
or
sbb
xor
out
pop
mov
fdiv
push
adc
sub
sbb
mov
xor
and
ss
mov
push
inc
stc
in
cdq
ds
sub
imul
cdq
retf
sub
test
mov
and
sub
push
ja
(bad)
aad
or
push
cmc
scas
cmp
xlat
mov
sar
fld
data16
push
pop
xor
data16
fwait
data16
cdq
data16
xor
(bad)
xor
out
sbb
ss
int
(bad)
in
repnz
mov
fwait
data16
cmps
mov
pop
cmc
test
fdiv
jp
sar
mov
loopne
icebp
adc
mov
push
adc
sbb
fdivr
repz
(bad)
mov
dec
xor
test
pop
fld
fdiv
icebp
cmp
mov
cmps
(bad)
loop
push
retf
push
cmc
dec
pop
mov
icebp
xchg
cmp
fwait
data16
icebp
data16
or
pop
icebp
push
fdiv
icebp
cmps
and
mov
pusha
icebp
push
hlt
jb
and
push
sbb
ret
pop
icebp
or
sbb
and
or
sbb
jmp
into
mov
adc
sbb
xor
xor
mov
dec
and
ss
sbb
scas
cmp
arpl
outs
sbb
outs
mov
into
xchg
fdiv
sar
xor
out
mov
rcr
or
movs
fwait
or
test
jo
mov
add
ficom
mov
iret
cmp
cdq
push
cs
mov
stc
and
xor
mov
push
lock
cli
out
or
adc
hlt
cmc
pop
bnd
sbb
dec
add
mov
add
(bad)
xor
xor
aam
scas
cmp
cmp
xor
aam
test
ja
adc
ja
sub
out
cdq
retf
and
xchg
sahf
xor
(bad)
aas
in
int
jne
test
pop
mov
xchg
sahf
xor
mov
xor
in
cmp
out
into
ins
sbb
xor
mov
icebp
test
cmp
cmp
cmps
fst
inc
xchg
lds
out
cdq
out
js
mov
xor
xor
jb
xor
jb
cmp
jl
cs
icebp
(bad)
xor
data16
xchg
jo
pop
inc
icebp
pop
dec
loope
test
shr
push
ja
imul
sbb
shl
cdq
int
rcr
sub
and
mov
cdq
fiadd
in
fdivp
out
add
sub
pop
mov
cdq
fnsave
and
cdq
ds
rcr
fsubrp
add
sub
pop
cmp
inc
and
ret
jb
ret
mov
fs
xor
shl
icebp
xchg
aas
mov
jno
and
jno
and
test
fadd
adc
cdq
jmp
imul
xor
cmp
cwde
cmps
mov
icebp
rol
xor
(bad)
jp
xor
cmp
fdivrp
rcl
ja
addr16
(bad)
jp
sar
movs
outs
rol
(bad)
ror
xor
fadd
adc
cdq
loop
movs
push
ja
imul
(bad)
ror
ja
in
cdq
(bad)
sbb
jmp
xchg
xor
dec
mov
icebp
jbe
xor
and
push
push
jno
jecxz
mov
fcomip
dec
mov
popa
test
dec
mov
popa
test
dec
mov
popa
test
dec
mov
popa
test
sahf
xor
and
mov
dec
mov
and
mov
in
test
aam
popa
test
dec
mov
popa
test
dec
mov
popa
test
(bad)
push
movs
mov
mov
icebp
data16
hlt
or
jb
div
and
fsub
popa
not
cmc
test
aam
popa
imul
and
dec
mov
popa
mul
stc
popa
test
dec
mov
std
test
fsub
popa
test
dec
mov
inc
addr16
icebp
jbe
xor
push
push
jno
cmps
sahf
xor
xchg
sahf
xor
and
mov
icebp
jbe
xor
fsub
popa
test
and
popa
test
dec
mov
mov
dec
mov
popa
dec
sbb
add
test
dec
mov
cmp
dec
mov
popa
test
dec
mov
popa
test
push
jno
push
in
mov
or
dec
mov
popa
test
sahf
xor
and
popa
test
dec
mov
mov
dec
mov
popa
dec
sbb
add
test
dec
mov
cmp
dec
mov
popa
test
dec
mov
popa
test
nop
pop
popa
push
in
mov
or
dec
mov
popa
test
dec
mov
lock
and
xor
push
xlat
jb
enter
push
ja
add
std
fucomp
sbb
mov
push
jmp
cdq
(bad)
icebp
xor
data16
icebp
in
cdq
cmp
xchg
mov
into
xchg
and
test
push
mov
push
test
and
xor
dec
xor
mov
xchg
fs
data16
(bad)
ror
jecxz
xchg
and
ret
and
int3
jp
aam
cmc
pusha
loopne
xor
xchg
ja
addr16
(bad)
ror
cmp
cmp
int3
mov
cmc
pusha
loope
icebp
data16
in
cdq
cmp
xchg
pushf
cmp
mov
jbe
icebp
test
fdiv
fwait
outs
mov
icebp
data16
imul
xor
rcr
cmp
xchg
mov
movs
cwde
fucom
mov
push
jmp
push
ja
ss
ja
addr16
sbb
mov
icebp
in
push
js
sub
js
xor
xchg
cdq
cdq
(bad)
(bad)
rcr
cmp
push
cmp
mov
mov
xor
jo
add
icebp
data16
mov
data16
mov
addr16
repz
retf
out
dec
push
mov
jns
xor
aaa
in
cli
cmp
fdiv
test
repnz
xor
out
sub
add
sbb
test
dec
or
push
icebp
clc
cmps
shl
(bad)
shl
mov
mov
mul
int3
retf
icebp
out
or
sbb
xor
jo
mov
push
in
repnz
adc
mov
mov
addr16
xor
mov
sahf
xor
and
sbb
xchg
xor
in
sub
adc
out
cdq
into
sbb
fsub
fdiv
js
fbstp
in
leave
out
and
add
in
into
cmc
(bad)
adc
mov
fbstp
and
and
mov
or
cdq
retf
cmp
mov
in
and
ffree
js
pop
ja
bound
cmp
fdiv
hlt
mov
cdq
retf
xor
mov
mov
fdivr
push
out
push
cmp
loope
or
icebp
out
jno
data16
out
sub
xor
add
out
fdiv
jp
add
inc
cdq
push
lock
ror
repz
in
pop
cmp
mov
mov
cdq
ficom
jo
out
add
hlt
mov
xor
mov
push
(bad)
cmp
fdivr
js
sub
js
or
mov
push
daa
and
jbe
ja
bound
cmp
fdiv
hlt
mov
jo
pop
cdq
mov
fdivr
js
fbstp
in
leave
sar
fadd
loope
cdq
ret
add
mov
fbstp
sub
and
cs
add
int3
scas
adc
imul
in
cmp
mov
push
aas
and
push
mov
dec
stos
xor
out
add
int3
scas
adc
imul
in
xor
mov
push
aas
adc
out
mov
mov
jmp
ss
jmp
mov
ins
call
icebp
or
pop
repz
pop
icebp
push
fdiv
icebp
and
mov
icebp
push
ja
out
popf
mov
jmp
fisub
cdq
test
xor
cdq
test
xor
xor
fdivr
mov
push
hlt
shl
icebp
movs
out
cmp
icebp
xor
xchg
push
rcr
inc
jl
sub
js
xor
push
cdq
push
hlt
jo
movs
div
push
das
push
xchg
sahf
xor
pop
sbb
data16
mov
sub
lds
cmps
es
cmp
or
js
pop
cmc
mov
es
push
out
sub
add
sbb
mov
fstp
fisttp
rol
add
arpl
sub
xor
clc
js
test
jns
loope
setns
mov
cdq
fnstsw
xchg
and
icebp
mov
jg
push
lock
movs
fld
mov
and
aaa
jecxz
int
cdq
out
mov
aaa
jmp
int
cdq
and
imul
icebp
push
sub
mov
push
mov
fwait
and
mov
data16
fwait
data16
fwait
data16
cdq
data16
mov
pop
leave
or
and
iret
xchg
xor
out
pop
(bad)
or
and
test
mov
sbb
sbb
fcomp
jmp
ret
and
addr16
xor
push
and
mov
and
sbb
xor
cdq
imul
imul
xor
arpl
sub
sahf
xor
int3
push
cdq
mov
addr16
xor
push
dec
icebp
push
mov
fwait
and
mov
push
mov
cwde
and
mov
out
jg
data16
hlt
push
sbb
push
pop
ret
mov
mov
add
mov
push
ss
icebp
pop
fcmovu
data16
dec
xchg
lods
xor
xchg
cmp
push
out
sbb
or
ret
mov
mov
icebp
pop
(bad)
data16
jb
mov
cmp
cmp
cmps
in
test
in
out
mov
hlt
push
sbb
out
and
push
out
cdq
(bad)
js
pop
push
or
ss
ja
ss
cdq
pop
fdivr
icebp
or
int
push
inc
stc
mov
icebp
fs
cld
data16
push
out
cdq
ret
push
ret
jb
and
pop
fnsave
test
test
pop
icebp
cdq
test
fimul
sub
xor
adc
fidivr
sub
xor
or
stos
scas
pop
addr16
mov
jo
enter
and
mov
icebp
data16
mov
adc
int
push
inc
stc
mov
xor
pop
imul
cmp
gs
adc
jge
data16
or
mov
test
inc
std
cdq
test
xor
in
sub
pusha
pop
cmc
jmp
addr16
pop
fsubp
xor
mov
jo
xor
adc
ss
xor
jmp
retf
cdq
into
mov
data16
fwait
data16
fwait
and
cdq
test
xor
outs
sbb
cmc
push
sbb
int3
cdq
test
int
jp
xor
adc
int
call
xor
ror
test
fadd
xor
xor
mov
pop
fdiv
push
adc
xor
cmp
xor
jb
int3
cmps
in
test
push
js
les
js
(bad)
js
fs
mul
lds
out
cdq
ret
sbb
jmp
into
mov
data16
push
adc
int
outs
xor
mov
adc
add
(bad)
jmp
data16
push
adc
int
call
xor
ror
test
fadd
xor
and
ss
test
xor
imul
xor
push
xlat
jb
shl
mov
sub
push
retf
push
cmc
jb
(bad)
mov
fadd
mov
icebp
mov
cmps
fdiv
js
and
pop
push
fdiv
push
adc
icebp
mov
inc
ficom
jb
pop
mov
cdq
mov
fcomp
or
pop
nop
xchg
sahf
xor
outs
xchg
xor
(bad)
mov
push
retf
lock
push
std
clc
cmps
test
es
cmc
retf
and
icebp
mov
xor
out
cdq
into
scas
cmp
arpl
xchg
fidivr
out
cdq
into
js
push
ja
jmp
push
add
mov
xchg
xor
movs
mov
mov
outs
push
outs
std
mov
scas
cs
and
cs
in
int
rol
out
and
sub
push
ret
mov
test
int
data16
fdivr
fdiv
icebp
out
into
addr16
xor
pop
repnz
pop
xor
data16
mov
pop
fadd
outs
pop
inc
(bad)
loopne
icebp
adc
mov
imul
jp
int3
hlt
icebp
data16
data16
xchg
call
js
pushf
fnstcw
xor
mov
fdivr
js
in
lock
and
push
adc
mov
push
adc
(bad)
and
xor
and
movs
call
shl
mov
add
and
mov
sub
addr16
pop
(bad)
xor
aam
mov
sbb
fist
ja
out
cdq
fidivr
xor
xchg
mov
adc
mov
ja
push
ja
out
sbb
push
in
cmp
and
xor
sub
icebp
in
les
jo
test
push
pop
ret
sbb
sti
imul
jns
out
je
adc
adc
sbb
data16
mov
imul
jmp
fdiv
push
in
push
cmps
out
and
jmp
fdiv
dec
sub
idiv
gs
addr16
or
mov
sahf
xor
pop
mul
add
ja
imul
or
ja
out
cdq
out
js
add
xchg
mov
cdq
ret
sub
cmp
cmp
sbb
mov
rcl
loop
data16
push
pop
xchg
sbb
out
sub
add
sbb
push
and
mov
fisttp
cdq
pop
idiv
out
pop
cmp
adc
add
(bad)
scas
cmp
pop
(bad)
int
adc
popa
sbb
xor
push
sbb
lods
ins
fdiv
js
in
ret
and
mov
icebp
push
mov
cdq
and
dec
jg
xor
xchg
jns
push
cwde
and
push
in
popa
jmp
and
push
push
push
cmps
and
(bad)
xor
data16
es
mov
fdivr
push
out
outs
xchg
data16
test
ss
out
fdiv
jp
aam
je
and
push
out
sbb
mov
fadd
out
sbb
in
dec
loop
fwait
and
or
sti
cmp
pop
hlt
ins
pop
fdiv
cdq
xor
cmp
mov
cmp
cdq
imul
inc
and
xor
aam
addr16
xor
fdiv
icebp
jmp
retf
jb
(bad)
push
(bad)
and
sbb
call
pop
call
inc
lds
in
aaa
mov
ins
mov
fmul
push
(bad)
int
cdq
mov
xchg
sahf
xor
pop
mul
out
(bad)
data16
(bad)
and
xor
fdiv
icebp
jmp
retf
jb
(bad)
push
(bad)
and
sbb
call
push
sub
into
push
cwde
and
mov
fdiv
jb
aam
mov
xor
fdiv
icebp
jmp
retf
jb
(bad)
push
(bad)
and
sbb
xor
in
cmp
xor
data16
mov
fmul
push
arpl
xor
fistp
lds
xor
(bad)
or
push
loop
mov
mov
dec
and
xor
int3
int
inc
mov
add
mov
push
ss
add
bound
(bad)
cdq
xor
in
es
add
data16
mov
fmul
push
arpl
jo
cdq
imul
imul
xor
aam
sti
xchg
sahf
xor
shl
int
cdq
xor
mov
fdiv
mov
fmul
push
arpl
jo
cdq
imul
xchg
and
xor
aam
aaa
inc
xchg
xor
push
ffreep
mov
and
sbb
cdq
xor
in
cmp
arpl
xor
inc
lds
in
aaa
mov
shl
fdiv
push
(bad)
int
cdq
mov
xchg
sahf
xor
pop
mul
out
sub
add
sbb
cmp
fdiv
dec
mov
xor
jmp
retf
mov
push
(bad)
das
cdq
and
cmps
mov
icebp
push
mov
cdq
and
mov
jecxz
int
cdq
mov
xchg
sahf
xor
pop
not
mov
icebp
data16
data16
hlt
sbb
fimul
add
sub
mov
cwde
and
pop
sub
inc
mov
fdiv
push
js
xor
aaa
cwde
xor
(bad)
xor
inc
lds
in
aaa
mov
sub
and
int
call
icebp
pop
idiv
mov
jbe
data16
data16
hlt
sbb
pop
cmp
and
setns
mov
fdiv
mov
fmul
push
arpl
jo
cdq
imul
xlat
and
xor
aam
pop
push
push
icebp
push
dec
ret
and
in
pop
into
push
cwde
and
cld
sub
icebp
ss
mov
fdiv
mov
fmul
push
arpl
jo
cdq
imul
das
and
aam
add
and
push
out
sbb
jg
fdiv
dec
ins
fdiv
icebp
jmp
retf
jb
(bad)
push
(bad)
and
sbb
lahf
xor
in
cmp
setg
icebp
(bad)
xor
inc
lds
in
aaa
mov
gs
fmul
push
(bad)
int
cdq
mov
xchg
sahf
xor
pop
mul
in
adc
imul
push
scas
and
push
xor
data16
je
fmul
push
push
ret
push
hlt
jb
sbb
or
(bad)
mov
pop
cli
push
fwait
and
je
and
push
pop
pop
retf
and
fidivr
aam
jecxz
int
cdq
push
hlt
jp
adc
or
fisttp
(bad)
shl
or
gs
data16
nop
xor
retf
fdiv
icebp
fcom
shl
mov
mov
push
out
or
dec
data16
push
xor
dec
data16
push
xor
xor
cdq
and
jo
sbb
or
pop
xor
shl
push
shr
int
cdq
and
jmp
xor
cdq
and
jecxz
int
cdq
mov
xchg
sahf
xor
pop
imul
fmulp
add
sub
js
sbb
or
push
hlt
sbb
sahf
xor
(bad)
xor
inc
lds
in
aaa
mov
outs
add
int
call
icebp
pop
idiv
mov
jo
data16
data16
hlt
sbb
pop
cmp
and
setns
xor
data16
push
arpl
jo
cdq
imul
jmp
fdiv
jb
aam
je
and
push
out
xor
cdq
pop
(bad)
push
cwde
and
push
pop
pop
cli
push
fwait
and
push
out
pop
fimul
fwait
and
aaa
(bad)
pop
xor
push
ja
out
pop
retf
and
movs
fdiv
jno
fdiv
push
cdq
fdivr
icebp
out
inc
data16
cmp
or
int3
push
imul
je
and
push
out
pop
fimul
fwait
and
test
imul
fdivr
push
ss
mov
fdiv
add
scas
and
pop
fnsave
test
popa
clc
push
fwait
and
je
and
push
in
pop
test
and
icebp
cdq
and
rcr
push
fwait
and
or
mov
fwait
pop
fdiv
jl
sub
or
mov
sbb
mov
push
cdq
imul
test
xchg
cdq
and
jp
and
setns
mov
pop
imul
out
sub
add
sbb
aaa
fdiv
dec
ins
fdiv
icebp
jmp
retf
jb
(bad)
push
add
or
sbb
(bad)
pushf
xor
(bad)
xor
inc
lds
in
aaa
mov
stc
add
int
call
icebp
pop
idiv
mov
cmp
data16
hlt
sbb
pop
jmp
shl
int
cdq
xor
mov
fdiv
fcom
sub
or
xor
int3
data16
je
and
push
jmp
xor
cdq
and
shl
cmp
sar
push
outs
sbb
je
and
push
push
out
mov
and
sbb
pushf
xor
in
cmp
outs
pushf
xor
(bad)
xor
inc
lds
in
aaa
mov
outs
add
int
call
icebp
pop
idiv
out
sub
add
sbb
das
pop
fdiv
dec
ins
fdiv
icebp
jmp
retf
jb
(bad)
push
pop
ret
and
sbb
sbb
sbb
jecxz
icebp
(bad)
xor
inc
lds
in
aaa
mov
sub
and
int
call
icebp
pop
idiv
push
out
ret
and
sbb
sbb
dec
or
cmp
push
out
sbb
sbb
dec
ins
fdiv
icebp
jmp
retf
jb
(bad)
mov
icebp
data16
dec
call
add
sbb
jecxz
icebp
in
and
pop
jecxz
icebp
(bad)
xor
inc
lds
in
aaa
mov
outs
add
int
call
icebp
pop
idiv
mov
or
icebp
data16
hlt
sbb
pop
cmp
and
setns
xor
adc
cdq
and
js
xor
iret
data16
push
arpl
jo
cdq
imul
neg
xor
aam
xor
xor
fdiv
icebp
jmp
retf
jb
(bad)
mov
gs
icebp
data16
dec
call
add
gs
loop
icebp
in
and
cdq
imul
dec
pop
fdiv
jb
aam
add
mov
icebp
data16
data16
hlt
sbb
pop
jmp
shl
int
cdq
xor
iret
data16
add
int
call
icebp
pop
idiv
mov
or
data16
data16
hlt
sbb
pop
jmp
shl
int
cdq
xor
iret
data16
add
int
call
icebp
pop
idiv
ficom
aam
jecxz
int
cdq
push
hlt
sbb
(bad)
xor
inc
lds
in
aaa
mov
sub
and
int
call
icebp
pop
idiv
jmp
in
push
fwait
and
jecxz
int
cdq
mov
xchg
sahf
xor
pop
mul
mov
icebp
data16
data16
hlt
sbb
pop
jmp
shl
int
cdq
xor
int3
data16
lock
push
hlt
cdq
data16
icebp
cdq
imul
dec
pop
fdiv
jb
aam
xchg
xor
fdiv
icebp
jmp
retf
jb
(bad)
push
(bad)
and
sbb
loope
icebp
in
cmp
aaa
loope
icebp
fbstp
icebp
inc
lds
out
or
icebp
xor
or
push
xor
mov
mov
mov
fdiv
jb
int3
mov
aaa
mov
psllw
cmp
data16
hlt
sbb
pop
jmp
shl
int
cdq
xor
int3
data16
push
and
int
call
icebp
pop
idiv
mov
icebp
data16
data16
hlt
sbb
pop
jmp
shl
int
cdq
xor
int3
data16
mov
fneni(8087
xor
(bad)
xor
inc
lds
in
aaa
mov
cdq
int
fmul
push
(bad)
int
cdq
mov
xchg
sahf
xor
pop
mul
push
or
mov
and
sbb
loopne
icebp
in
cmp
fs
fwait
data16
icebp
pushfw
int
outs
xor
enter
je
and
push
out
sub
add
sbb
inc
call
icebp
data16
jl
sub
setns
int
cdq
and
sbb
in
icebp
cdq
imul
fistp
xor
shl
int
cdq
xor
leave
data16
push
adc
cdq
and
js
(bad)
fimul
fdiv
jp
xor
or
aaa
ds
sub
js
fs
cdq
push
hlt
scas
cmp
xlat
jo
aam
icebp
mov
js
sub
js
and
push
cdq
push
cmc
aaa
and
xor
pop
push
retf
push
cmc
(bad)
rcr
fnsave
cwde
and
mov
data16
cdq
loopne
jo
jmp
int
cdq
and
fdiv
jno
call
out
int
in
cdq
int
arpl
or
and
pop
mov
fdiv
jno
inc
push
cdq
mov
pop
and
pop
sub
xor
push
fbstp
icebp
out
jmp
push
retf
push
cmc
scas
scas
pop
addr16
pop
fisubr
fdiv
mov
and
pop
dec
jno
xor
xchg
cmp
push
out
sbb
push
push
ja
out
xor
repnz
adc
mov
fwait
and
jp
aam
std
arpl
xor
push
mov
jo
inc
jne
in
jmp
hlt
xor
movs
outs
push
data16
int
out
and
or
sbb
in
icebp
out
pop
dec
or
and
inc
(bad)
and
push
mov
or
push
addr16
in
push
dec
or
and
movs
fnsave
repz
iret
push
cdq
mov
out
fdiv
js
test
push
cdq
and
sbb
xor
out
pop
inc
or
and
inc
(bad)
and
push
mov
add
stc
in
push
inc
or
and
jl
and
push
jmp
cmp
jmp
xor
and
cmps
jns
and
dec
gs
xor
xchg
cmp
push
out
sbb
mov
xor
out
pop
cmps
or
and
ss
pop
icebp
jmp
xchg
or
and
imul
icebp
mov
mov
(bad)
fnsave
icebp
jmp
xchg
and
leave
xor
push
push
xor
pop
ficomp
clc
cmp
adc
fs
jmp
fdiv
jo
adc
xor
or
and
ss
fdiv
icebp
push
mov
cwde
and
mov
cdq
and
pop
jmp
cmps
or
and
inc
mul
int
cdq
imul
push
cdq
imul
push
xor
inc
fwait
and
mov
cdq
pop
not
out
pop
scas
or
and
xor
iret
sbb
xor
out
and
or
sbb
xor
mov
pop
and
mov
push
ss
enter
or
mov
or
and
jecxz
int3
push
cdq
mov
jnp
fdiv
sbb
int
out
pop
mov
cdq
and
ss
pop
icebp
jmp
mov
cdq
and
outs
in
icebp
in
cs
in
retf
sbb
mov
fdiv
ss
int3
push
cdq
fnsave
icebp
mov
mov
int
data16
je
and
push
out
sbb
push
data16
xchg
mov
and
icebp
out
and
or
sbb
push
ss
push
cdq
and
jecxz
iret
push
cdq
mov
push
ss
fwait
data16
fwait
data16
fwait
push
mov
cwde
and
mov
push
fdiv
clc
cmps
shl
push
shl
cdq
xor
lds
mov
jno
xor
cdq
imul
cdq
sbb
jo
jmp
into
setns
bound
mul
xor
in
and
jecxz
iret
push
cdq
(bad)
(bad)
sub
data16
push
ss
pop
and
(bad)
push
fdiv
js
aad
test
(bad)
data16
mov
jecxz
iret
push
cdq
fnstsw
push
pop
fld
outs
pop
inc
stos
push
fmul
data16
les
mov
cmp
xor
in
mov
test
add
(bad)
push
fdiv
cdq
(bad)
fnsave
icebp
jmp
into
setns
bound
data16
cdq
or
jo
jmp
into
setns
bound
es
in
ds
cdq
and
icebp
adc
mov
cli
and
push
data16
cs
inc
iret
push
cdq
fdiv
icebp
(bad)
shl
push
pop
cmc
push
or
push
fcmove
push
fdiv
js
sub
js
mov
cmc
cmps
mov
xor
sar
push
cdq
xor
lds
mov
ss
imul
jp
inc
iret
push
cdq
sub
ss
xor
jb
shl
push
outs
in
jne
xchg
ins
push
retf
push
ja
out
sbb
push
adc
test
popf
lds
mov
setns
xor
out
push
push
js
and
mov
push
cmc
push
adc
fidivr
fdiv
js
mov
fimul
movs
mov
ffree
push
fdiv
(bad)
rcr
into
lock
test
mov
jl
int3
sbb
push
fdiv
js
pop
cmc
inc
adc
xor
cmps
pop
dec
in
shl
cdq
(bad)
jns
mov
jl
les
xchg
pushf
bound
imul
xor
in
ds
adc
mov
mov
push
retf
push
cmc
push
adc
cmp
mov
fnstenv
mov
icebp
and
imul
hlt
imul
repz
shl
(bad)
rcr
aaa
(bad)
ror
test
mov
xor
xor
bound
xor
sbb
sbb
ss
sbb
out
xor
jmp
retf
xor
ret
data16
out
xor
out
and
or
sbb
stos
scas
pop
addr16
fs
data16
mov
xor
dec
mov
or
xor
adc
js
(bad)
js
sbb
mov
fdiv
jl
pusha
ror
cdq
mov
push
ss
pop
and
fisub
fdiv
js
aad
(bad)
loop
xor
push
retf
push
cmc
mov
cdq
and
xchg
push
fdiv
jb
aam
xor
(bad)
scas
cmp
push
cdq
test
xor
out
and
or
sbb
xor
aaa
push
ss
ror
cdq
pushf
sub
add
fdiv
jl
pusha
ror
cdq
mov
push
ss
mov
fdiv
clc
cmps
test
mov
cdq
and
call
xor
aam
xor
(bad)
scas
cmp
push
cdq
test
xor
out
and
or
sbb
xor
aaa
ds
in
repnz
frstor
fdiv
scas
cmp
xlat
dec
inc
cld
xor
mov
cmps
in
cmp
retf
sbb
out
sbb
push
adc
mov
(bad)
pop
cmc
fdiv
sbb
xor
out
sub
add
sbb
mov
loopne
icebp
adc
mov
sbb
sbb
cdq
xor
xor
xor
adc
mov
sub
push
cdq
push
hlt
cdq
sub
xor
cdq
and
fucomi
xor
in
cmp
sti
call
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
lds
mov
outs
fs
pop
out
pop
fisubr
cdq
and
icebp
data16
data16
hlt
sbb
fisub
add
sub
mov
cdq
and
xor
jmp
xor
cdq
and
sub
xor
in
and
dec
call
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
lds
mov
outs
mov
add
mov
push
ss
lds
mov
outs
push
ret
push
hlt
sbb
(bad)
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
lds
mov
outs
xor
ret
mov
data16
push
arpl
xor
fistp
lds
xor
(bad)
icebp
xchg
int
push
test
mov
push
(bad)
icebp
xchg
int
mov
icebp
pop
mul
cdq
test
jo
jmp
xor
cdq
and
inc
sub
xor
cdq
and
out
out
xor
in
es
fst
data16
ret
mov
data16
push
arpl
jo
jmp
xor
cdq
and
out
xor
in
cmp
jmp
xor
cdq
and
or
xor
in
cmp
test
icebp
data16
ret
mov
data16
push
arpl
jo
jmp
xor
cdq
and
daa
out
xor
in
cmp
jmp
xor
cdq
and
dec
out
xor
in
cmp
(bad)
out
xor
(bad)
xor
inc
lds
in
aaa
mov
in
data16
push
fcmovnu
ror
cdq
mov
mov
ror
cdq
mov
aas
push
fdiv
jb
int3
pop
fcom
(bad)
push
cdq
mov
das
push
fdiv
jb
aam
fsub
fdiv
push
adc
mov
xor
ret
data16
push
arpl
jo
jmp
xor
cdq
and
iret
out
xor
in
cmp
jmp
xor
cdq
and
repz
xor
in
cmp
aaa
out
xor
(bad)
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
ret
data16
add
mov
push
ss
ret
data16
fcom
out
xor
(bad)
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
ret
data16
std
jmp
xor
cdq
and
dec
xor
jmp
xor
cdq
and
mov
xor
in
and
stos
in
xor
(bad)
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
shl
xor
and
mov
push
ss
shl
xor
xchg
push
hlt
sbb
in
xor
(bad)
xor
inc
lds
in
aaa
mov
sub
and
mov
push
ss
shl
xor
data16
push
out
and
data16
fcmovnu
ror
cdq
mov
mov
ror
cdq
mov
cmps
push
fdiv
jb
int3
fcmovb
push
fdiv
dec
ins
fdiv
icebp
jmp
retf
jb
(bad)
push
(bad)
push
mov
xchg
int
mov
idiv
out
sub
pop
out
pop
(bad)
cs
and
mov
push
mov
xchg
int
mov
add
pop
idiv
mov
icebp
data16
data16
hlt
sbb
pop
jmp
jecxz
ror
cdq
mov
call
xor
aam
cmp
xor
fdiv
icebp
jmp
retf
jb
(bad)
mov
gs
icebp
data16
dec
data16
push
xor
dec
data16
push
xor
xor
and
mov
push
ss
shl
xor
data16
fwait
data16
cdq
data16
mov
xor
fsub
mov
push
out
mov
data16
push
ss
fsub
pop
icebp
jmp
retf
and
jmp
xor
cdq
and
shl
in
push
cdq
xor
fsub
int
call
icebp
data16
data16
pop
out
pop
shr
cdq
and
sbb
ret
push
hlt
scas
cmp
xlat
jo
pop
ss
data16
cmps
fldlg2
adc
cmp
data16
push
out
pop
mov
cdq
and
or
and
js
(bad)
js
in
les
aam
sbb
icebp
xor
in
mov
jl
fidiv
js
dec
iret
push
cdq
pop
(bad)
dec
fdiv
js
sub
js
pop
leave
push
cdq
push
cmc
sbb
xor
fisub
fimul
and
js
in
retf
mov
sbb
(bad)
dec
fdiv
js
jl
push
cdq
mov
fwait
push
mov
fwait
and
mov
data16
lock
push
ss
pop
and
pop
inc
mov
xor
sbb
push
cdq
pop
not
outs
sbb
jne
fidiv
icebp
push
fdiv
icebp
push
mov
cwde
and
mov
cdq
and
mov
xor
out
and
or
sbb
inc
(bad)
and
push
xor
and
mov
cdq
pop
idiv
outs
sbb
jne
fidiv
icebp
push
jl
mov
push
mov
cwde
and
mov
push
mov
fwait
and
mov
cdq
and
push
repz
mov
(bad)
push
cdq
push
mov
fwait
and
js
(bad)
js
mov
fwait
push
mov
cwde
and
mov
pop
imul
out
and
or
sbb
je
and
push
and
xor
mov
and
icebp
data16
push
data16
xchg
mov
and
icebp
out
imul
ss
adc
and
jecxz
iret
push
cdq
mov
push
ss
fwait
data16
fwait
data16
fwait
push
mov
cwde
and
mov
dec
fdiv
clc
cmps
shl
push
shl
cdq
xor
(bad)
mov
mov
imul
cdq
sbb
jo
jmp
into
setns
bound
sub
xor
in
and
jecxz
leave
push
cdq
(bad)
(bad)
sub
je
and
push
ss
pop
and
fidiv
dec
fdiv
js
aad
test
(bad)
data16
dec
xor
mov
mov
push
pop
fld
outs
sub
icebp
push
fadd
icebp
data16
(bad)
mov
ss
fdiv
icebp
push
mov
call
fisub
pop
lock
mov
mov
push
mov
call
push
cdq
pop
idiv
pop
and
icebp
shl
jl
push
leave
push
cdq
mov
sbb
int
in
cmp
cmps
shl
fwait
and
jl
push
leave
push
cdq
mov
sbb
xor
retf
cmp
push
mov
fwait
and
mov
cdq
and
and
pop
fisttp
ror
push
cdq
xor
(bad)
pop
cli
mov
xor
ss
pop
and
fs
icebp
xor
in
es
cmps
test
jo
mov
icebp
push
scas
ins
fwait
and
jb
out
js
ffree
mov
cdq
and
cmp
rcr
out
in
pop
scas
or
and
push
ror
push
cdq
xor
daa
cdq
and
mov
mov
icebp
sbb
lock
jo
ja
icebp
push
mov
fwait
and
mov
push
retf
push
cmc
fwait
and
sbb
imul
jp
inc
iret
push
cdq
aaa
xor
sahf
(bad)
js
sub
ss
xor
jb
shl
xor
stc
(bad)
pop
add
fnsave
mov
sbb
push
ja
cdq
test
xor
in
mov
jl
fisub
mov
dec
fdiv
js
pop
cmc
sub
xor
sbb
cmc
xor
cdq
test
xor
data16
ficomp
inc
fdiv
jl
and
data16
push
pushf
xor
ret
cmc
xor
out
sbb
push
adc
push
xor
mov
mov
sti
xor
xor
or
mov
scas
cmp
xlat
dec
data16
xor
mov
adc
dec
and
cmp
out
mov
hlt
cdq
test
xor
out
sbb
pop
adc
add
lea
mov
icebp
push
mov
xchg
and
mov
data16
cdq
test
ret
mov
sbb
and
jb
ror
push
cdq
fdiv
test
ret
push
retf
push
cmc
fwait
fs
retf
dec
fdiv
js
aaa
popf
scas
cmp
mov
jb
lea
sahf
sub
js
and
add
ja
addr16
cdq
out
and
or
sbb
cdq
pusha
xor
jmp
fsub
push
ja
ss
cdq
and
jmp
fiadd
fdiv
(bad)
rcr
bound
jmp
fsub
pop
imul
jmp
fsub
fdiv
push
push
lock
mov
xor
fsub
mov
pop
iret
xor
add
ja
imul
(bad)
jmp
push
xlat
mov
iret
lods
cli
(bad)
out
and
or
sbb
or
pop
icebp
or
pop
hlt
or
pop
icebp
or
pop
icebp
push
dec
xor
data16
fwait
data16
fwait
jbe
cmc
fsub
mov
aam
fcomp
xor
xor
fcomp
xor
lahf
mov
xor
fsub
mov
ss
fs
push
and
jno
sahf
xor
lahf
hlt
xor
or
fs
push
and
(bad)
popf
xor
(bad)
hlt
xor
or
fs
push
and
in
ret
pushf
xor
mov
and
or
sbb
xor
popf
mov
xor
fldenv
pop
lock
popf
mov
xor
fldenv
pop
lock
xor
xor
xor
fdiv
icebp
or
fs
push
and
ror
xor
sbb
xor
or
fs
push
and
add
popf
xor
or
xor
out
and
push
out
cdq
into
js
mov
cmps
or
int
repnz
jo
mov
xor
(bad)
outs
jo
mov
mov
out
cdq
retf
sub
mov
jle
iret
and
in
retf
mov
push
push
xor
mov
xor
(bad)
data16
cdq
mov
jb
or
int
mov
icebp
mov
data16
push
push
pop
xor
fcom
cdq
mov
jb
or
int
out
jo
mov
icebp
push
retf
push
ja
out
sbb
cdq
jmp
fiadd
inc
jae
icebp
push
or
push
push
lock
mov
xor
(bad)
data16
cdq
jmp
fidivr
data16
icebp
push
or
push
push
rcl
data16
cdq
jmp
fcmovu
inc
fdiv
push
push
ins
jo
push
or
push
push
hlt
popf
mov
xor
(bad)
data16
icebp
or
int
inc
jae
icebp
mov
adc
pop
fcomp
out
pushf
xor
leave
popf
xor
xchg
cli
xor
or
int
loop
jo
mov
adc
data16
pop
daa
fcomp
out
pushf
xor
xlat
sahf
xor
mov
xor
out
and
or
sbb
movs
mov
cmps
xor
ror
mov
mov
and
mov
hlt
cdq
mov
jo
xor
or
jbe
cmp
fdiv
icebp
or
bound
cmp
icebp
out
xchg
retf
mov
sbb
fmul
les
jae
or
fs
and
mov
mov
add
mov
fwait
data16
icebp
out
pop
sub
(bad)
xor
push
fdiv
icebp
data16
xlat
data16
fwait
and
(bad)
xor
in
cdq
retf
sub
sbb
mov
or
pop
icebp
pop
bound
push
fbstp
adc
xor
(bad)
mov
push
retf
push
ja
out
sbb
cdq
jmp
pop
icebp
cdq
jmp
pop
popa
fdiv
jp
and
mov
pop
ficom
jb
cmp
out
pop
sub
test
jo
or
fcmovu
inc
fdiv
push
push
ins
jo
or
pop
repz
pop
icebp
or
pop
lock
pop
icebp
or
pop
dec
fdiv
fwait
data16
fwait
outs
mov
sbb
cli
xor
out
sbb
xor
popf
mov
xor
aam
fcomp
cdq
jmp
pop
icebp
cdq
jmp
pop
loope
jmp
dec
mov
icebp
data16
mov
jo
or
fidiv
inc
fdiv
push
sbb
icebp
out
leave
les
pop
icebp
cdq
jmp
pop
icebp
cdq
jmp
pop
loope
push
icebp
data16
fwait
dec
mov
icebp
data16
mov
jo
or
fidiv
fdiv
push
(bad)
outs
jo
or
int
push
jae
icebp
or
int
and
or
pop
and
xor
or
pop
icebp
data16
mov
jo
push
fbstp
sub
xor
(bad)
mov
mov
push
push
call
xor
push
cwde
xor
fnsave
icebp
push
bound
icebp
data16
cdq
data16
mov
data16
sbb
fcomp
mov
pop
icebp
data16
pop
daa
fcomp
cdq
jmp
pop
icebp
cdq
jmp
pop
xchg
or
pop
pop
data16
fwait
jb
xor
out
pop
sub
jmp
jo
or
fisubr
inc
fdiv
push
mov
icebp
out
sbb
sahf
xor
data16
sti
clc
xor
push
mov
xor
cdq
jmp
fidiv
fdiv
fwait
and
(bad)
xor
(bad)
sahf
xor
or
pop
pop
data16
fwait
sbb
xor
out
pop
sub
jmp
jo
or
fiadd
out
jo
or
int
push
jae
icebp
or
int
push
ins
jo
push
lock
data16
cdq
int3
fdiv
icebp
push
jb
icebp
data16
icebp
out
pop
sub
jmp
jo
or
fcmove
inc
fdiv
push
dec
jae
icebp
fmulp
add
js
xor
ss
enter
xor
push
call
xor
push
cwde
xor
mov
icebp
data16
fdiv
cdq
data16
mov
data16
sbb
fcomp
mov
icebp
data16
inc
and
mov
cli
fbstp
icebp
or
int
push
jae
icebp
or
int
and
or
pop
jo
fdiv
cdq
cdq
fdiv
icebp
push
enter
mov
icebp
data16
mov
jo
or
ficomp
fdiv
push
adc
icebp
or
int
push
jae
icebp
or
int
and
or
pop
xchg
push
les
icebp
data16
icebp
data16
data16
sub
jo
push
fbstp
adc
xor
(bad)
mov
mov
push
push
call
xor
push
cwde
xor
fdiv
icebp
push
in
xor
data16
cdq
data16
mov
data16
sbb
fcomp
mov
adc
data16
pop
daa
fdivr
ss
int
push
jae
icebp
or
int
and
or
pop
cmps
push
xchg
xor
data16
icebp
data16
data16
push
fbstp
fwait
(bad)
xor
lds
mov
mov
push
push
call
xor
push
mov
sub
push
dec
xor
data16
cdq
data16
mov
mov
sbb
fdiv
sbb
pop
xor
call
xor
push
mov
sub
push
pop
xor
data16
cdq
data16
mov
mov
sbb
fdiv
sbb
(bad)
xor
(bad)
mov
push
retf
push
cmc
fwait
and
(bad)
xor
(bad)
sahf
xor
mov
enter
pop
bound
push
aad
mov
mov
repz
mov
fdiv
push
dec
jae
icebp
or
int
push
jae
icebp
or
int
push
ins
jo
or
pop
xchg
push
sub
icebp
data16
cdq
data16
mov
mov
sbb
fdiv
sbb
xor
(bad)
mov
mov
push
push
call
xor
push
cwde
xor
fdiv
icebp
push
jne
icebp
data16
cdq
data16
mov
mov
sbb
mov
adc
data16
inc
and
fcmove
sahf
and
dec
mov
xor
xchg
cmp
sbb
and
sti
xor
push
xlat
jb
les
or
dec
dec
pop
cmc
push
pop
fdiv
cdq
xchg
xor
cdq
test
int
out
sbb
mov
les
cdq
pop
mul
(bad)
mov
push
retf
push
cmc
fwait
and
stc
leave
popf
xor
pop
std
xor
out
and
push
out
cdq
fidivr
push
ja
ss
mov
and
(bad)
xor
call
or
ret
fcomp
push
fdiv
jno
mov
add
pop
sbb
fidiv
icebp
mov
adc
data16
inc
daa
fcomp
cdq
jmp
pop
icebp
ss
jp
and
mov
pop
ficom
jb
xor
out
pop
and
xor
or
ficomp
inc
fdiv
push
bound
icebp
out
and
or
sbb
cdq
jmp
pop
icebp
cdq
jmp
pop
frstor
xor
and
mov
pop
ficom
jb
cmp
out
pop
sub
test
jo
or
ficomp
fdiv
push
push
ins
jo
or
pop
repz
pop
icebp
or
pop
lock
pop
icebp
or
pop
dec
fdiv
fwait
data16
fwait
outs
mov
sbb
sbb
xor
popf
mov
xor
shl
pop
icebp
cdq
jmp
pop
icebp
cdq
jmp
pop
xchg
or
pop
in
enter
pop
bound
push
push
fidiv
daa
cld
xor
lds
mov
push
retf
push
cmc
cdq
in
jo
or
pop
mov
fdiv
push
push
xor
mov
xor
out
data16
mov
jno
data16
les
cmp
popa
aam
xor
adc
pop
icebp
or
pop
mov
push
xor
mov
xor
out
data16
in
fcomp
push
xchg
xor
and
sbb
popf
xor
xlat
ret
xor
or
int
push
jae
icebp
or
int
push
ins
jo
push
lock
data16
fwait
jb
dec
cdq
fdiv
mov
mov
sbb
mov
icebp
data16
inc
and
mov
fdiv
push
adc
icebp
cdq
jmp
pop
icebp
cdq
jmp
pop
frstor
xor
enter
push
fbstp
jno
mov
add
pop
jl
sahf
xor
data16
sbb
int
or
int
push
jae
icebp
or
int
and
or
pop
jo
fdiv
fwait
or
icebp
data16
cmp
fbstp
inc
ret
xor
lds
lds
sbb
xor
leave
popf
xor
(bad)
popf
xor
loope
xor
push
pop
xor
data16
icebp
data16
mov
jo
or
ficom
js
xor
jne
icebp
or
int
push
jae
icebp
or
int
and
or
pop
or
fdiv
cdq
(bad)
fdiv
icebp
or
pop
icebp
data16
jge
jo
push
fbstp
iret
ret
lds
mov
pop
cmc
ja
fdiv
fwait
and
(bad)
xor
(bad)
popf
xor
(bad)
xor
push
jl
icebp
data16
icebp
data16
mov
jo
or
ficomp
repnz
jo
or
int
push
jae
icebp
or
int
and
or
pop
adc
sbb
icebp
or
pop
icebp
data16
loopne
jo
push
fbstp
push
ret
lds
xor
push
call
xor
push
cwde
xor
fdiv
icebp
push
and
icebp
data16
cdq
data16
mov
data16
sbb
fcomp
mov
icebp
data16
inc
and
pop
icebp
cdq
jmp
pop
icebp
cdq
jmp
pop
jmp
data16
fwait
jb
xor
out
pop
popa
aam
xor
push
fdiv
icebp
data16
in
data16
js
in
retf
mov
push
push
call
xor
push
mov
sub
jb
xor
out
pop
sub
outs
xor
push
fdiv
icebp
data16
in
data16
fwait
and
(bad)
xor
(bad)
sahf
xor
cmp
mov
push
add
mov
mov
sbb
fdiv
sbb
shl
(bad)
mov
mov
push
push
call
xor
push
cwde
xor
fdiv
icebp
push
pushf
xor
data16
cdq
data16
mov
mov
sbb
mov
das
icebp
data16
inc
and
fimul
sahf
in
retf
xor
add
scas
pop
addr16
pop
fsubp
xor
mov
xchg
repz
push
pop
xor
data16
fwait
data16
cdq
data16
jno
test
xor
out
sbb
data16
fwait
data16
sbb
xor
pop
lds
xor
pop
push
or
(bad)
fdiv
icebp
out
mov
data16
mov
mov
test
or
lock
push
in
sub
cmp
inc
mov
fmul
test
fcomp
lea
int
outs
xor
pop
cdq
and
or
inc
ror
pop
cmc
jmp
retf
test
jo
push
fnsave
icebp
out
fild
and
rcr
sti
xor
push
xlat
jo
fdiv
icebp
data16
fs
push
xchg
mov
sub
js
and
push
cdq
push
hlt
jo
xchg
and
data16
xor
mov
push
ss
jmp
jnp
xor
fdiv
icebp
jmp
retf
js
push
outs
push
out
int
adc
pop
jo
sahf
xor
int
cdq
mov
mov
xor
and
test
scas
xor
mov
push
ss
jmp
addr16
aaa
out
int
adc
pop
dec
cmps
sahf
xor
int
cdq
mov
mov
fdiv
jno
and
test
das
xor
mov
push
ss
jmp
cdq
fld
push
loope
mov
push
mov
cdq
and
mov
pop
hlt
imul
xor
and
ja
push
and
mov
push
ss
out
fdiv
loopne
add
mov
cdq
and
mov
pop
dec
push
outs
test
jo
jmp
xor
cdq
and
stos
retf
xor
out
int
adc
pop
inc
cmps
sahf
xor
int
cdq
mov
inc
jno
xor
ficomp
icebp
pop
dec
push
ins
test
jo
jmp
xor
cdq
and
dec
xor
out
int
adc
pop
loope
sahf
xor
int
cdq
mov
jae
fdiv
jno
and
test
add
and
mov
push
ss
out
fdiv
icebp
out
int
adc
pop
mov
jecxz
int
cdq
mov
mov
sbb
cmp
ja
push
xor
mov
push
ss
out
fcomp
or
pop
mov
xor
pop
xor
cdq
and
data16
icebp
mov
jno
and
pop
and
jae
icebp
mov
repnz
outs
(bad)
retf
jge
xor
hlt
mov
aaa
(bad)
out
int3
push
cdq
sub
fdiv
movs
out
cmp
xor
aam
into
bound
icebp
xchg
cmp
js
pop
lds
mov
icebp
push
mul
addr16
mov
int
mov
rcr
xor
fdiv
icebp
cmp
xor
aam
icebp
xor
jmp
lds
out
pop
(bad)
push
cdq
and
add
sbb
movs
sahf
xor
lds
cdq
mov
scas
jo
xor
lahf
(bad)
xor
(bad)
xor
inc
lds
out
dec
ror
and
push
addr16
jo
jmp
fild
cdq
and
push
retf
out
sub
add
sbb
push
fs
jo
jmp
fild
cdq
and
ja
xor
out
ror
and
test
push
xor
mov
push
ss
in
fdiv
push
bound
jo
jmp
fild
cdq
and
mov
adc
icebp
sub
js
cmp
push
cdq
push
hlt
jno
das
retf
fld
push
dec
icebp
mov
push
mov
xchg
and
mov
pop
pop
sahf
and
not
int
pop
movs
sahf
xor
lds
cdq
mov
imul
jno
das
retf
fild
push
push
icebp
mov
push
mov
xchg
and
mov
push
ret
push
hlt
jno
das
retf
aam
loopne
scas
lock
push
mov
xchg
and
mov
pop
pop
sahf
and
clc
adc
pop
arpl
lds
cdq
mov
mov
fdiv
jno
das
retf
(bad)
inc
loopne
ins
lock
push
mov
xchg
and
mov
push
ret
push
hlt
jno
das
retf
xlat
inc
loopne
xor
mov
push
mov
xchg
and
mov
pop
pop
sahf
and
std
adc
pop
mul
xor
push
cdq
mov
add
xor
das
retf
rol
push
(bad)
div
xchg
and
mov
pop
pop
sahf
and
call
int
and
lds
cdq
mov
dec
jb
xor
jmp
fild
cdq
and
fidiv
int
out
imul
ins
pop
jo
mov
push
cdq
pop
mul
out
pop
fiadd
cdq
and
push
push
test
jb
xor
push
cdq
fadd
(bad)
sti
xor
pop
les
nop
inc
pop
icebp
pop
hlt
fistp
fdiv
js
in
ret
in
jmp
inc
and
ficom
mov
and
push
outs
sbb
je
fidiv
icebp
(bad)
aaa
xor
pop
(bad)
or
imul
dec
call
les
xor
and
push
cdq
out
je
fnsave
icebp
mov
and
js
in
ret
push
mov
sahf
and
mov
push
mov
call
icebp
pop
idiv
in
retf
and
test
dec
jmp
icebp
(bad)
push
mov
cmps
es
cmp
or
js
fwait
or
int
imul
int3
push
jno
icebp
fs
jo
push
out
fnstenv
cwde
and
mov
pop
fsubr
imul
icebp
push
sti
fnstenv
sahf
and
mov
pop
imul
lea
xor
retf
mov
xchg
jb
xor
ins
icebp
push
mov
sahf
and
mov
push
mov
cwde
and
mov
data16
sbb
mov
push
ss
jmp
jb
mov
cwde
and
mov
push
mov
call
jl
and
push
cdq
mov
lea
retf
mov
xor
xor
int3
pop
icebp
jmp
into
or
enter
sub
pop
out
pop
out
push
cdq
and
or
jecxz
into
push
cdq
mov
and
and
jb
sar
xor
popa
lock
push
in
aaa
mov
test
push
out
aaa
clc
data16
fbld
xor
shl
push
cdq
mov
inc
and
pop
sbb
sahf
xor
retf
mov
mov
fdiv
jb
int3
pop
sti
movs
sahf
xor
int3
push
cdq
mov
mov
jl
and
push
cdq
mov
mov
xor
add
push
cdq
aaa
adc
jecxz
lds
cdq
pop
mov
call
jp
add
push
cdq
sbb
push
data16
cmp
push
cdq
pop
(bad)
sub
adc
mov
or
and
push
ss
sbb
mov
push
ss
out
fdiv
or
mov
es
push
mov
xchg
and
jl
and
push
cdq
mov
pcmpeqw
xor
add
push
cdq
push
dec
div
pop
mov
lock
push
mov
sahf
and
jl
and
push
cdq
mov
inc
xchg
and
push
mov
icebp
push
ret
push
hlt
jl
and
push
cdq
mov
xor
xor
int3
push
cdq
mov
push
jmp
xor
loopne
fdivr
push
ss
push
shr
retf
mov
test
fcomp
or
ficom
fdiv
mov
push
mov
call
sbb
(bad)
adc
push
in
ds
aad
(bad)
jecxz
iret
push
cdq
and
sbb
into
xor
out
sub
add
sbb
adc
xor
out
xor
aas
xor
ins
scas
cmp
mov
icebp
data16
loopne
fsub
xor
or
sub
mov
mov
cmps
sahf
xor
jns
ficom
jecxz
fmul
cdq
aad
test
fisub
fdiv
fwait
addr16
in
fsubr
(bad)
rcr
push
ja
(bad)
mov
sbb
mov
data16
js
fucomp
js
mov
pop
daa
(bad)
pop
ja
xor
push
dec
xor
(bad)
jae
fdiv
mov
push
jmp
fnsave
icebp
jmp
sbb
and
adc
(bad)
ja
xor
and
mov
push
ss
imul
fdivr
icebp
in
dec
xor
inc
movs
div
mov
xor
xchg
aas
mov
push
out
pop
ficom
jb
xor
xchg
push
loope
push
repz
mov
sub
test
sbb
jns
jnp
push
cdq
sbb
lock
jmp
shl
sbb
and
mov
cmps
es
cmp
or
js
pop
hlt
nop
out
cs
push
cdq
pop
mov
mov
int
in
pop
test
and
stc
adc
je
xor
push
data16
in
fdivr
test
mov
mov
int
mov
and
jo
jge
icebp
push
mov
mov
int
push
dec
xor
fdivr
push
ss
in
fcomp
jmp
xchg
sbb
jecxz
fmul
cdq
mov
arpl
xor
fimul
cdq
mov
pop
movs
and
jl
jnp
push
cdq
mov
lds
les
icebp
or
mov
push
ss
loopne
fdivr
xor
xor
cmc
jmp
fcomp
xlat
sahf
xor
push
pushf
popf
mov
xor
loop
fdivr
push
jmp
cmp
and
mov
data16
add
jns
sbb
mov
icebp
push
data16
and
pop
aas
mov
jo
mov
icebp
push
(bad)
(bad)
xchg
fidiv
data16
xchg
ret
xchg
out
pop
xchg
and
mov
mov
inc
and
pop
aas
mov
jb
mov
adc
pop
fidiv
data16
xchg
ret
pop
fldz
js
xor
push
dec
xor
fcomp
enter
pop
iret
xor
in
jb
(bad)
push
cdq
push
pop
cmp
fdiv
icebp
xchg
jns
mov
test
inc
mov
int
movs
mov
fwait
data16
fwait
data16
cdq
data16
mov
fcomp
data16
sub
fwait
fs
fwait
mov
aaa
imul
int
data16
je
xor
push
ss
jmp
mov
push
in
int
out
xor
adc
mov
mov
int
cdq
test
xor
or
mov
repz
(bad)
and
mov
add
xor
and
data16
je
xor
push
ss
loopne
fdivr
push
in
int
out
xor
adc
mov
mov
int
cdq
test
xor
or
mov
repz
(bad)
and
mov
and
mov
cmp
data16
(bad)
lds
out
pop
sahf
sbb
and
push
out
pop
mov
icebp
out
cdq
rcl
jae
icebp
out
cdq
(bad)
jl
push
mov
push
ja
out
add
sub
pop
pop
icebp
sbb
xor
data16
mov
pop
icebp
mov
cmp
and
fdiv
js
cmc
jmp
int3
xor
out
cdq
jmp
fdiv
mov
fdiv
icebp
pop
icebp
out
fdiv
and
icebp
data16
push
imul
pop
(bad)
xor
data16
fwait
data16
cdq
data16
icebp
push
xor
fistp
fcomp
mov
and
data16
pop
daa
fcomp
cmps
sahf
xor
xor
xor
or
fiadd
mov
fdiv
int3
data16
jno
repz
push
dec
shl
icebp
push
pop
fdiv
imul
js
je
push
cdq
push
jmp
shl
icebp
or
bound
repz
push
cdq
sbb
cmc
data16
jo
je
icebp
push
mov
mov
int
jmp
sahf
pop
cdq
and
push
sbb
push
mov
pusha
xor
data16
push
in
sub
cmps
test
div
shl
js
fucomp
js
push
mov
mov
int
or
pop
icebp
push
stos
inc
mov
mov
fwait
data16
jmp
bound
ret
shl
icebp
jmp
call
mov
cdq
fsubr
pop
icebp
mov
cmp
mov
ja
fdiv
fwait
data16
lock
cdq
jmp
fiadd
jle
ja
ss
jmp
mov
pop
lahf
xor
jmp
(bad)
mov
data16
fwait
data16
jl
cmp
pop
shl
icebp
outs
sbb
and
sub
int3
xor
fidiv
icebp
xor
mov
sub
mov
pop
retf
pop
stos
lock
in
xor
loop
xor
xor
data16
loopne
fdiv
(bad)
loop
xor
data16
lock
pop
int
icebp
sar
int3
pop
fnsave
icebp
imul
push
outs
fdiv
jb
mov
mov
fdivr
icebp
push
sub
mov
and
popf
mov
aas
int
out
pop
fimul
and
icebp
push
xor
mov
mov
dec
test
int
mov
and
push
out
and
or
sbb
push
and
sbb
xor
outs
sbb
jne
fdiv
icebp
jmp
cli
or
and
push
cwde
xor
fdivr
xor
test
int
dec
pop
jmp
push
cmps
and
adc
push
cdq
in
test
mov
fwait
and
(bad)
add
push
cdq
pop
(bad)
in
dec
out
cdq
and
fs
and
push
pop
or
(bad)
or
mov
push
dec
pop
out
or
and
jecxz
iret
push
cdq
div
mov
cdq
jmp
fidiv
imul
js
sub
js
sbb
push
cdq
push
cmc
jb
mov
mov
fdivr
icebp
(bad)
mov
mov
jg
xor
call
stc
pop
xor
pop
test
mov
fadd
ss
sbb
test
mov
fld
cdq
jmp
fcmovbe
and
test
and
or
sbb
lea
xor
in
retf
jge
pop
daa
fmul
mov
shl
fwait
data16
cld
data16
lods
popa
fdiv
dec
and
xor
xchg
cmp
push
out
sbb
enter
je
(bad)
icebp
cdq
test
xor
(bad)
out
xor
push
adc
js
push
ja
out
pop
retf
and
hlt
imul
icebp
adc
jo
adc
or
push
jne
icebp
adc
or
xchg
jno
icebp
adc
or
repnz
jo
adc
or
sbb
icebp
adc
or
(bad)
outs
jo
adc
or
push
jae
adc
or
jb
jae
imul
icebp
cdq
test
xor
in
pop
retf
and
hlt
sbb
icebp
adc
or
(bad)
outs
jo
adc
or
push
jne
icebp
adc
pop
inc
jbe
xor
adc
fidiv
push
xor
cdq
test
xor
out
push
lahf
data16
push
pop
xchg
sub
out
and
or
sbb
push
ss
std
data16
push
pop
cmc
stc
sub
xor
jmp
xor
cdq
and
push
xor
mov
xor
sti
data16
push
test
data16
cdq
xor
jo
or
ficomp
push
xor
mov
xor
cli
data16
or
xor
mov
push
mov
cdq
and
jns
sub
push
cdq
sbb
icebp
out
inc
xor
jecxz
xor
data16
icebp
data16
push
and
jne
sahf
xor
call
xor
jmp
xor
cdq
and
int
fadd
in
aaa
cmp
cdq
loopne
jo
jmp
xor
cdq
and
dec
dec
int
in
ds
cdq
and
icebp
adc
pop
icebp
or
pop
(bad)
mov
jmp
(bad)
icebp
mov
xor
data16
push
adc
js
push
mov
cdq
and
mov
cdq
and
push
ss
jmp
(bad)
or
and
repz
icebp
in
and
jmp
xor
cdq
and
push
rcl
data16
push
test
data16
cdq
je
jo
or
ficomp
push
rcl
data16
or
xor
int
cdq
pop
cli
push
es
push
lock
sahf
int3
inc
ror
pop
icebp
push
aaa
(bad)
push
(bad)
xor
cdq
jmp
ficom
outs
fdiv
sbb
pop
xor
cdq
and
sbb
test
int
in
pop
aaa
lock
and
int
mov
adc
lea
fiadd
outs
fdiv
push
push
rcl
data16
je
fdiv
jno
fmul
push
cdq
fnstsw
push
pop
int3
inc
dec
out
and
or
sbb
push
ss
mov
fwait
and
mov
push
mov
fwait
and
mov
pop
mul
push
and
icebp
push
mov
cdq
and
mov
and
(bad)
outs
fdiv
jno
(bad)
push
cdq
fadd
or
pop
icebp
push
pop
(bad)
sbb
xor
cdq
jmp
fcmovu
outs
fdiv
sbb
xor
out
and
push
out
pop
(bad)
or
and
push
cdq
and
jecxz
iret
push
cdq
mov
mov
iret
push
cdq
mov
retf
ins
fdiv
jb
int3
pop
push
data16
jl
(bad)
push
cdq
mov
les
jae
mov
icebp
pop
(bad)
lock
and
icebp
adc
pop
icebp
or
pop
pop
(bad)
sahf
xor
data16
les
jae
mov
icebp
xor
data16
ss
xor
cdq
and
jecxz
iret
push
cdq
mov
(bad)
sahf
xor
iret
push
cdq
mov
and
jb
int3
pop
push
data16
jl
(bad)
push
cdq
mov
les
jae
mov
cmp
pop
(bad)
lock
and
icebp
adc
pop
icebp
or
pop
sahf
(bad)
sahf
xor
data16
les
jae
mov
add
data16
push
in
int
out
xor
adc
adc
push
xor
fiadd
push
hlt
popf
mov
xor
stc
data16
lock
aaa
jecxz
int3
push
cdq
(bad)
int3
imul
jnp
fnstenv
push
cdq
and
rcr
push
enter
icebp
or
pop
ror
add
data16
les
jae
mov
repz
push
addr16
mov
cwde
and
int
scas
mov
cmc
retf
push
mov
cdq
and
mov
cdq
and
push
ss
jmp
(bad)
or
and
adc
icebp
in
and
jmp
xor
cdq
and
push
cld
popf
mov
xor
mul
mov
addr16
push
test
data16
cdq
jae
jo
or
fimul
fdiv
push
push
cld
popf
mov
xor
mul
fstp
jecxz
int3
push
cdq
(bad)
int3
imul
jnp
fnstenv
push
cdq
and
rcr
push
enter
icebp
or
pop
add
xor
mul
int
inc
jae
icebp
mov
xor
repz
push
addr16
mov
jb
and
pop
fnsave
test
and
push
pop
push
inc
pop
out
jp
data16
push
ss
mov
fwait
and
mov
push
mov
fwait
and
mov
pop
mul
or
pop
icebp
or
pop
icebp
or
pop
icebp
data16
es
icebp
mov
push
mov
cwde
and
js
sub
js
cmp
push
cdq
push
mov
fwait
and
js
mov
fwait
data16
push
shr
int3
push
cdq
xor
hlt
data16
icebp
test
imul
mov
pop
cli
push
es
push
lock
movs
mov
jl
sub
push
cdq
mov
push
jne
icebp
cdq
imul
sbb
xor
fwait
and
mov
xchg
sahf
xor
shr
int3
push
cdq
xor
hlt
data16
push
in
int
out
xor
adc
ret
and
jmp
(bad)
or
and
shr
int3
push
cdq
xor
hlt
data16
jmp
ret
and
fs
add
int
xchg
and
push
mov
pop
lds
pop
fdiv
push
shr
int3
push
cdq
xor
cmc
data16
les
ins
jae
mov
icebp
data16
fwait
data16
fwait
data16
cdq
data16
mov
cld
xchg
mov
xor
cmc
data16
push
out
xchg
mov
fcomp
or
pop
icebp
cdq
imul
cmp
xor
xor
pop
push
lock
movs
mov
jl
sub
push
cdq
mov
imul
icebp
cdq
imul
sti
arpl
xor
fwait
and
mov
mov
int3
push
cdq
xor
cmc
data16
ss
imul
jae
fdiv
arpl
icebp
pop
cmc
lock
fdiv
fwait
bound
jo
push
mov
pusha
xor
data16
push
in
sub
leave
popf
xor
sbb
icebp
out
and
push
out
pop
out
or
and
test
inc
loope
test
fiadd
arpl
xor
jbe
addr16
pop
fdivrp
xor
aam
or
sahf
sub
js
and
int3
fnsavew
icebp
imul
or
mov
clc
imul
(bad)
icebp
adc
int
mov
icebp
mov
push
retf
push
cmc
retf
lahf
mov
test
xor
fmul
(bad)
out
jo
adc
int
dec
jae
icebp
mov
pop
(bad)
popf
xor
pushf
xor
psubusb
icebp
out
and
or
sbb
les
jb
adc
int
dec
jae
icebp
mov
fxch
popf
xor
popf
xor
pop
fdiv
icebp
fisub
icebp
sub
js
sub
pop
daa
fadd
out
inc
xor
ins
and
sbb
popf
xor
jae
xor
pop
jmp
inc
in
out
inc
xor
jne
pop
jne
sahf
xor
lahf
fbstp
icebp
(bad)
fidivr
ss
pop
or
mov
icebp
adc
mov
icebp
out
and
or
sbb
(bad)
out
jo
adc
mov
icebp
pop
jmp
inc
imul
rcl
daa
fdivr
ss
jmp
inc
imul
shl
fmul
les
jae
adc
mov
icebp
pop
jmp
inc
imul
rcr
fmul
(bad)
icebp
adc
mov
icebp
outs
pop
inc
jecxz
test
int
push
popa
sbb
fdiv
icebp
(bad)
fidivr
cmp
xor
and
stc
gs
xor
fdiv
icebp
and
std
gs
xor
fdiv
icebp
and
loope
lahf
xor
fdiv
icebp
and
in
lahf
xor
fdiv
icebp
and
shl
xor
fdiv
icebp
and
frstor
xor
fdiv
icebp
and
shl
popa
neg
xor
and
lds
xor
fdiv
icebp
mov
dec
data16
js
pop
or
shr
and
mov
pop
idiv
out
cdq
into
clc
cmps
test
js
f2xm1
and
adc
fldln2
and
mov
outs
sbb
hlt
in
adc
bound
jb
cld
inc
add
fidiv
data16
fwait
mov
ss
pop
cdq
and
movs
test
icebp
dec
fsub
icebp
pop
ss
fsub
icebp
scas
(bad)
mov
cmp
data16
in
repnz
cdq
and
push
loope
rcr
mov
aad
dec
mov
push
lock
in
and
xor
xor
and
mov
lahf
xor
fdiv
icebp
and
mov
lahf
xor
fdiv
icebp
and
mov
neg
xor
and
mov
neg
xor
and
mov
neg
xor
and
movs
gs
xor
fdiv
icebp
and
test
neg
xor
and
lods
gs
xor
fdiv
icebp
and
xchg
gs
xor
fdiv
icebp
and
xchg
gs
xor
fdiv
icebp
and
cdq
gs
xor
fdiv
icebp
and
popf
gs
xor
fdiv
icebp
and
and
xor
and
test
xor
fdiv
icebp
and
mov
xor
fdiv
icebp
and
lea
xor
fdiv
icebp
and
jno
lahf
xor
fdiv
icebp
and
jne
lahf
xor
fdiv
icebp
and
jns
lahf
xor
fdiv
icebp
and
jge
lahf
xor
fdiv
icebp
and
popa
gs
xor
fdiv
icebp
and
gs
xor
fdiv
icebp
and
imul
xor
and
ins
gs
xor
fdiv
icebp
and
push
gs
xor
fdiv
icebp
and
push
gs
xor
fdiv
icebp
and
pop
gs
xor
fdiv
icebp
and
pop
gs
xor
fdiv
icebp
and
inc
gs
xor
fdiv
icebp
and
inc
gs
xor
fdiv
icebp
and
dec
gs
xor
fdiv
icebp
and
dec
gs
xor
fdiv
icebp
and
xor
xor
fdiv
icebp
and
xor
neg
xor
and
cmp
xor
fdiv
icebp
and
cmp
neg
xor
and
and
xor
fdiv
icebp
and
and
neg
xor
and
sub
xor
fdiv
icebp
and
sub
neg
xor
and
adc
xor
fdiv
icebp
and
adc
neg
xor
and
sbb
xor
fdiv
icebp
and
sbb
neg
xor
and
or
xor
fdiv
icebp
and
or
neg
xor
and
icebp
bound
xor
and
cmc
bound
xor
and
stc
bound
xor
and
std
bound
xor
and
loope
lahf
xor
fdiv
icebp
and
in
lahf
xor
fdiv
icebp
and
jmp
neg
xor
and
in
bound
xor
and
shl
xor
fdiv
icebp
and
aad
lahf
xor
fdiv
icebp
and
fldenv
xor
fdiv
icebp
and
frstor
xor
fdiv
icebp
and
shl
popa
neg
xor
and
lds
xor
fdiv
icebp
and
leave
bound
xor
and
int
lahf
xor
fdiv
icebp
and
mov
lahf
xor
fdiv
icebp
and
mov
lahf
xor
fdiv
icebp
and
mov
neg
xor
and
mov
neg
xor
and
mov
neg
xor
and
movs
bound
xor
and
test
neg
xor
and
lods
bound
xor
and
xchg
bound
xor
and
xchg
bound
xor
and
and
xor
and
test
xor
fdiv
icebp
and
mov
xor
fdiv
icebp
and
lea
xor
fdiv
icebp
and
jno
lahf
xor
fdiv
icebp
and
jge
lahf
xor
fdiv
icebp
and
popa
bound
xor
and
bound
xor
and
imul
xor
and
ins
bound
xor
and
push
bound
xor
and
push
bound
xor
and
pop
bound
xor
and
pop
bound
xor
and
dec
bound
xor
and
dec
bound
xor
and
xor
xor
fdiv
icebp
and
xor
neg
xor
and
cmp
xor
fdiv
icebp
and
cmp
neg
xor
and
and
xor
fdiv
icebp
and
and
neg
xor
and
sub
xor
fdiv
icebp
and
sub
neg
xor
and
adc
xor
fdiv
icebp
and
adc
neg
xor
and
sbb
xor
fdiv
icebp
and
sbb
neg
xor
and
add
xor
fdiv
icebp
and
add
neg
xor
and
or
xor
fdiv
icebp
and
or
neg
xor
data16
